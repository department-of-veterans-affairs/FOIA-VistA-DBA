Saved by %RS from [EXP,FEX] on 11-APR-1996 10:17:36.12
AICS Version 2.1.  Routines IBD* plus patch DG*5.3*86.
DG1010P
DG1010P	;ALB/JDS;REW - 1010 PRINT--INQUIRY PATIENT ; 13 SEP 84  14:47
	;;5.3;Registration;**86**;Aug 13, 1993
	;
FIND	W !! S DIC="^DPT(",DIC(0)="AEQZM" D ^DIC G Q:+Y'>0 S (DA,DFN)=+Y
	S FREE=+$P(^DG(43,1,0),U,8),DGOPT=""
	I $O(^DPT(DFN,"DIS",0))'>0 W !!,"No registrations to print from.",!! G FIND
F11	R !!,"Registration date/time: ",X:DTIME G Q:'$T D UP^DGHELP G FIND:X?1"^".E!(X=""),NUM:$L(X)<7 S %DT="T" D ^%DT S DFN1=9999999-Y G W1:$D(^DPT(DFN,"DIS",DFN1)) W !!
HELP	S J=0 F I=0:0 S I=$O(^DPT(DFN,"DIS",I)) Q:'I  S J=J+1,L=+(^(I,0))_"00000" W $J(J,2),".  ",$E(L,4,5),"/",$E(L,6,7),"/",$E(L,2,3)," @ ",$E(L,9,10),":",$E(L,11,12) W ?$X\40+1*40 W:$X>75 ! Q:J>20
	W !,"Enter the date and time, Entry #, or 'L' for the last registration,",!," to select the registration you wish to print a 10/10 for." G F11
NUM	W:$E(X)="L" $E("LAST",$L(X)+1,99) W !! I $E(X)="L" S DFN1=$O(^DPT(DFN,"DIS",0)) G HELP:DFN1'>0,W1
	S DFN1=0 F I=1:1:+X S DFN1=$O(^DPT(DFN,"DIS",DFN1)) Q:'DFN
	G HELP:DFN1'>0 W !
W1	D NOREG^DG1010PA(DFN)
QU	;
	S DGHDFN=DFN
	I DGOPT]"" D  S DGPGM="DQ^DG1010P",DGVAR="DGOPT^PRF^FREE^DFN^DFN1^DUZ^DGPMDA^DGT^PSTYPE^GMTSTYP" D ZIS^DGUTQ G:POP EMB U IO D DQ G EMB
	.W:DGOPT'=5 !!?5,*7,"This output requires 132 column output to a PRINTER.",!?5,*7,"Output to SCREEN will be unreadable."
	G EMB
EN	;
	D:'$D(DT) DT^DICRW F I=0,.11,.121,.13,.24,.31,57,1010.15 S DGP(I)=$G(^DPT(DFN,I))
	S DGPAGE=0
	D NOW^%DTC,YX^%DTC S DGNOW=Y
	F I=0,1,2,3 S DGP("DIS",I)=$G(^DPT(DFN,"DIS",DFN1,I))
	S DGD=DGP("DIS",0),Y=+DGD X ^DD("DD") S DGAP=Y,DGCLK=$S($D(^VA(200,+$P(DGD,U,5),0)):$S($P(^(0),U,2)]"":$P(^(0),U,2)_"/"_$P(DGD,U,5),1:"unk/"_$P(DGD,U,5)),1:"unspecified"),DGNAM=$P(DGP(0),U,1)
	S DGSS=$P(DGP(0),U,9),DGSS=$E(DGSS,1,3)_"-"_$E(DGSS,4,5)_"-"_$E(DGSS,6,10)
	S DGLDOUBL="",$P(DGLDOUBL,"=",132)=""
	S (DGLDASH,DGLUND,DGL2)=""
	S $P(DGLDASH,"-",132)="",$P(DGL2,"-",131)="",$P(DGL2,"-",67)="|"
	S $P(DGLUND,"_",132)=""
	G ^DG1010S1:FREE=2
	I $$FIRST^DGUTL G Q
	W DGLDOUBL,!?35,"D E P A R T M E N T   O F   V E T E R A N S   A F F A I R S",!,DGLDOUBL,!,"FACILITY:  "
	S (DGSITE,X)=$$SITE^VASITE W $S((+X=-1):"FACILITY NOT IDENTIFIED",1:$P(X,U,2)_" ("_$P(X,U,3)_")")
	W ?96,"APPLICATION FOR MEDICAL BENEFITS",!,DGLDOUBL
	G ^DG1010P1
ADM	K DGPMDA I $D(^DGPM("ATID1",DFN)) F I=0:0 S I=$O(^DGPM("ATID1",DFN,I)) Q:'I!(I>(DFN1+.9999))  S DGPMDA=$O(^(I,0))
	S DGPMDA=$S($D(DGPMDA):DGPMDA,1:0) Q
ASK	W !,"PRINT ",DGX S %=1 D YN^DICN I '% W !,"ENTER 'Y'ES TO PRINT A ",DGX,".  OTHERWISE ENTER 'N'O."
	Q
DQ	;
	D NOW^%DTC,YX^%DTC S DGNOW=Y
	S X=132 X ^%ZOSF("RM") F I="DFN","DFN1","FREE","DGPMDA","DGT","PRF","GMTSTYP" S DGHOLD(I)=$S($D(@I):@I,1:"")
	I DGOPT[1&'($G(DGSTOP)) S DA=DFN D EN^DG1010P ;1010
	I DGOPT[4&'($G(DGSTOP)) D EN^DG1010S1 ;SUP 1010
	I DGOPT[2&'($G(DGSTOP)) D RESTORE,^DG3PR0 ;1010I
	I DGOPT[3&'($G(DGSTOP)) D RESTORE,RET^DGBLRV ;3rd party review
	I DGOPT[6!(DGOPT[7)&'($G(DGSTOP)) S DGMTDT=$P(DGT,U,2),DGMTI=$P(DGT,U,1),DGMTYPT=$P(DGT,U,5) D RESTORE,START^DGMTP ;1010F
	I DGOPT[8&'($G(DGSTOP)) D RESTORE,ENXQ^GMTSDVR
	I DGOPT[5&'($G(DGSTOP)) S POP=0 D RESTORE,DFN^PSOSD1 K POP S X=132 X ^%ZOSF("RM") ;DRUG PROFILE NOTE: EXECUTES ^%ZIS("C")
	D ^%ZISC
	D CLOSE^DGUTQ,Q K DGHOLD,DGOPT,DGPMDA Q
Q	K %,%DT,DA,DB,DFN,DFN1,DGHSFLG,DGOPT,DGL2,DGLDASH,DGLDOUBL,DGLSUP,DGLSUP1,DGLUND,DGPGM,DGPMDA,DGMTDT,DGMTI,DGMTYPT,DGNOW,DGT,DGVAR,DGX,DIC,DIRUT,DTOUT,DUOUT,FREE,I,J,L,POP,PRF,X,Y,DGSTOP
	K LMI,PSCNT,PSDIS,PSDT,PSII,PSOPRINT ;FROM DRUG PROFILE
	K GMTSTYP
	Q
RESTORE	F I="DFN","DFN1","FREE","PRF","DGPMDA","DGT","GMTSTYP" S @I=DGHOLD(I)
	Q
EMB	;emboss card?
	S DFN=DGHDFN
	W !! D EMBOS^DGQEMA
	D EF
	K DGHDFN G FIND
	;
EF	;encounter form?
	N EFX,WITHDATA,IBDFRION
	I $$PROMPRN^DG1010PA("EF") I DG1'<0 S EFX=1 D
	.S WITHDATA=1
	.D MAIN^IBDFREG(WITHDATA)
	Q

DG1010PA
DG1010PA	;ALB/REW - 1010 PRINT--INQUIRY PATIENT -ADDITIONL ; 28-MAY-93
	;;5.3;Registration;**18,28,86**;Aug 13, 1993
	;
NOREG(DFN)	; DOES PROMPTS FOR 10/10 PRINT W/O REGISTRATION
	;INPUT: DFN
	;OUTPUT: VARIABLES NEEDED FOR DIFFERENT PRINTOUTS
	;   DB      - 10/10 SELECTED
	;   DGMTYPT - MT=1 Copay=2 None=0
	;   DGOPT   - WHICH REPORTS TO PRINT
	;   DGPMDA  - Admssions Report Info
	;   DGT     - 1010F Info
	;   FREE    - SUPPLEMENTAL FLAG
	;   PRF     - FLAG FOR RX PROFILE
	;   PSTYPE  - TYPE OF DRUG PROFILE
	;   GMTSTYP - TYPE OF HEALTH SUMMARYD
	;   
	;
	N DB,DG1,I,X,Y
	S FREE=+$P(^DG(43,1,0),U,8),DGOPT=""
	I $$PROMPRN(1010) G:DG1<0 QTNOREG S DB=1,DGOPT=DGOPT_1
	I $$PROMPRN("1010I") G:DG1<0 QTNOREG S DGOPT=DGOPT_2
	S PRF=0 G QTNOREG:'$D(^DG(43,1,0)) ;NEED MAS PARAMETERS TO CONTINUE
	I $$PROMPRN("THIRD") G:DG1<0 QTNOREG S DGOPT=DGOPT_3
	I $$PROMPRN("SUP") G:DG1<0 QTNOREG S DGOPT=DGOPT_4
	I $$PROMPRN("MTCP") G:DG1<0 QTNOREG S DGOPT=DGOPT_$S(DGMTYPT=1:6,1:7)
	I $$PROMPRN("HS") G:DG1<0 QTNOREG S DGOPT=DGOPT_8
	I $$PROMPRN("PRO") G:DG1<0 QTNOREG S DGOPT=DGOPT_5,PRF=1
QTNOREG	S:$G(DG1)<0 DGOPT=""
	Q
PROMPRN(DGX)	; PROMPTS FOR PRINT
	; RETURNS DGX [1=YES;0=NO;-1=DIRUT CONDITIONS]
	; OUTPUT:DG1 VALUE
	S DG1=0
	I $$FAILCOND(DGX) S DG1=$S($D(DG1):DG1,1:2) G QTPROMP ;DEFAULT=NO
	F  D  Q:$G(DG1)
	.S DG1=$$ASK(DGX)
	.S:DG1=1 DG1=$$AFTERASK(DGX)
QTPROMP	Q $S(DG1=2:0,(DG1=1):1,1:DG1)
ASK(DGX)	; PROMPTS FOR PRINT
	; RETURNS DGX [2=NO,1=YES;0=?,-1=DIRUT CONDITIONS]
	W !,"PRINT "
	W $S(DGX=1010:"10/10",(DGX="1010I"):"1010I",(DGX="THIRD"):"ERROR",(DGX="SUP"):"SUPPLEMENTAL DATA SHEET",(DGX="MTCP"):"1010F",(DGX="HS"):"HEALTH SUMMARY",(DGX="PRO"):"DRUG PROFILE",(DGX="EF"):"ENCOUNTER FORMS",1:"ERROR")
	S %=1 D YN^DICN I '% W !,"ENTER 'Y'ES TO PRINT A ",DGX,".  OTHERWISE ENTER 'N'O."
	Q $G(%)
FAILCOND(DGX)	;CHECKS IF PROMPT SHOULD BE ASKED
	;   DGI: 2=NO;1=YES;-1=DIRUT
	;RETURNS 1=DON'T ASK AND SKIP TO NEXT;0=ASK
	;
	N DGFAIL
	S DGFAIL=0
	I DGX=1010 G QTFAIL
	I DGX="1010I" D  G QTFAIL
	.I '($O(^DPT(DFN,.312,0))) S DGFAIL=1
	I DGX="THIRD" F  D  Q:$G(%)  G QTFAIL
	.N DGNOQ,DGDEF
	.D ADM
	.S DGFAIL=1
	.I DGPMDA>0!$D(^DGS(41.1,"B",DFN)) D
	..S (DGNOQ,DGDEF)=1 D ASK^DGBLRV
	..S DG1=%
	I DGX="MTCP" D  G QTFAIL
	.S DGT=$$LST^DGMTCOU1(DFN) S DGMTYPT=$P(DGT,U,5)
	.S DGFAIL=$S($P(DGT,U,4)["R":1,+DGMTYPT:0,1:1)
	I DGX="HS" S DGFAIL=1 D  G QTFAIL
	.S X="GMTSDVR" X ^%ZOSF("TEST") I $T D
	..S:$T(ENXQ^GMTSDVR)]""&($P(^DG(43,1,0),U,42)) DGFAIL=0
	I DGX="PRO" S DGFAIL=1 D  G QTFAIL
	.S X="PSOSD1" X ^%ZOSF("TEST") I '$T Q
	.I '$P(^DG(43,1,0),U,17) Q
	.S DGFAIL=0
	I DGX="SUP" D  G QTFAIL
	.I $G(DB),($P(^DG(43,1,0),U,8)'=1) S DGFAIL=1 Q
	I DGX="EF" D  G QTFAIL
	.I $P(^DG(43,1,0),U,47)'=1 S DGFAIL=1 Q
QTFAIL	Q DGFAIL
AFTERASK(DGX)	;ACTIONS AFTER REPONSE OF YES TO PRINT
	; RETURNS DGGO[2=DON'T PRINT,1=PRINT,-1=ABORT]
	; SETS PRINT-SETUP VARIABLES
	;    PSTYPE = DRUG PROFILE TYPE
	;    GMTSTYP = POINTER TO HEALTH SUMMARY TYPE
	N DGGO,DIR,X,Y
	S DGGO=1
	I DGX="HS" D  ;HEALTH SUMMARY
	.S X=$P($G(^DG(43,1,0)),U,43),DIC=142,DIC(0)="NX"
	.D ^DIC K DIC
	.S:+Y DIR("B")=$P(Y,U,2)
	.S DIR(0)="PO^142:QAMEZ"
	.D ^DIR
	.I Y'>0 W !,*7,"No Type Selected.  HS will not print" S DGGO=2 K DIR,DIRUT,DUOUT Q
	.S GMTSTYP=+Y
	I DGX="PRO" D  ;DRUG PROFILE
	.S DGGO=0
	.N DGDEF
	.S DGDEF=$P(^DG(43,1,0),U,45)
	.I $P(^DG(43,1,0),U,44) D
	..S:DGDEF]"" DIR("B")=$S(DGDEF="A":"ACTION",(DGDEF="I"):"INFORMATIONAL",1:"")
	..S DIR(0)="SM^A:ACTION;I:INFORMATIONAL"
	..S DIR("A")="Select type of Drug Profile"
	..D ^DIR
	..S DGDEF=Y
	.I '$D(DIRUT) S PSTYPE=$S(DGDEF="A":1,(DGDEF="I"):0,1:0),DGGO=1
	Q DGGO
ADM	K DGPMDA I $D(^DGPM("ATID1",DFN)) F I=0:0 S I=$O(^DGPM("ATID1",DFN,I)) Q:'I!(I>(DFN1+.9999))  S DGPMDA=$O(^(I,0))
	S DGPMDA=$S($D(DGPMDA):DGPMDA,1:0)
	Q

DGPAR
DGPAR	;ALB/MRL - ADT PARAMETER ENTRY/EDIT ; 07 MAR 87
	;;5.3;Registration;**51,86**;Aug 13, 1993
	I '$D(^DG(43,1,0))#2 S DA=1,^DG(43,1,0)=1,DIK="^DG(43," D IX1^DIK
WR	D DT^DICRW S U="^",DGHEAD="PIMS VERSION "_$S('$D(^DG(43,1,"VERSION")):"'UNKNOWN'",^("VERSION")[".":^("VERSION"),1:^("VERSION")_".0")_" PARAMETER ENTRY/EDIT",IOP="HOME" D ^%ZIS K IOP
	W @IOF,!?20,DGHEAD,! S X="",$P(X,"=",79)="" W X F I=0,"GL","BT","SCLR" S DGNOD(I)=$S($D(^DG(43,1,I)):^(I),1:"")
	S DGMULT=+$P(DGNOD("GL"),"^",2),DGPTFP=+$P(DGNOD(0),"^",31) W !,"[1] Medical Center Name : ",$S($D(^DG(40.8,+$P(DGNOD("GL"),"^",3),0)):$P(^(0),"^",1),1:"NONE SPECIFIED"),?59,"Affiliated: ",$S(+$P(DGNOD("GL"),"^",4):"YES",1:"NO")
	W !?4,"Multidivisional     : ",$S(+$P(DGNOD("GL"),"^",2):"YES",1:"NO")
	W !?4,"Nursing Home Wards  : ",$S(+$P(DGNOD(0),"^",20):"YES",1:"NO")
	W ?52,"Domiciliary Wards: ",$S(+$P(DGNOD(0),"^",21):"YES",1:"NO")
	W !?4,"System Timeout Sec. : ",+$P(DGNOD(0),"^",5),?51,"Print PTF Messages: ",$S($P(DGNOD(0),"^",31):"YES",1:"NO")
	;W !?4,"G&L Earliest Date   : " S Y=$P(DGNOD("GL"),"^",1) X:Y]"" ^DD("DD") W $S(Y]"":Y,1:"NONE SPECIFIED")
	W !?4,"Default PTF Printer : ",$S($P(DGNOD(0),"^",19)]"":$P(DGNOD(0),"^",19),1:"NONE SPECIFIED"),?55,"High Intensity: ",$S($P(DGNOD(0),"^",36):"ON",1:"OFF")
	W !?4,"Consistency Checker : ",$S($P(DGNOD(0),"^",37):"ON",1:"OFF"),?50,"Abbreviated Inquiry: ",$S($P(DGNOD(0),"^",38):"YES",1:"NO")
	W !?4,"Auto PTF Messages   : ",$S($P(DGNOD(0),"^",40)!($P(DGNOD(0),"^",40)']""):"YES",1:"NO"),?51,"Show Status Screen: ",$S($P(DGNOD(0),"^",34):"YES",1:"NO")
	W !!,"[2] Cancel Scheduled Admissions: " S DGX=6,DGX1="DAY" D DAY W ?45,"Maintain G&L Corrections: " S DGX=29 D DAY W !?4,"Disposition late",?31,": " S DGX=7,DGX1="HOUR" D DAY
	S DGX=8 W ?51,"Supplemental 10/10: " D DO
	S DGX=27 W !?4,"Ask HINQ at Registration",?31,": " D DO
	S DGX=17 W ?46,"DRUG PROFILE with 10/10: " D DO
	I $P(^DG(43,1,0),U,17) D
	.S DGX=44 W !?4,"CHOICE OF DRUG PROFILE?",?31,": " D DO
	.W ?49,"Default Drug Profile: "
	.S X=$P(^DG(43,1,0),U,45) W $S(X="A":"ACTION",1:"INFO.")
	S X="GMTSDVR" X ^%ZOSF("TEST") I $T I $T(ENXQ^GMTSDVR)]"" S DGHSFLG=1
	W !?4,"HEALTH SUMMARY with 10/10  : " W:'$G(DGHSFLG) "N/A"
	I $G(DGHSFLG) D
	.N DIC,X,Y
	.S DGX=42 D DO
	.W ?47,"Default Health Summary: "
	.S X=$P($G(^DG(43,1,0)),U,43),DIC=142,DIC(0)="NX"
	.D ^DIC
	.W $S(Y<0:"NONE",1:$E($P(Y,U,2),1,8))
	K DGHSFLG
EMB	S DGX=28 W !?4,"Ask EMBOSS at Registration : " D DO
	S DGX=30 W ?50,"Use Nearest Printer: " D DO
	W !?4,"Reg. Template (LOCAL)",?31,": ",$S('$P(DGNOD(0),"^",35):"NONE SPECIFIED",'$D(^DIE(+$P(DGNOD(0),"^",35),0)):"NONE SPECIFIED",1:$P(^DIE(+$P(DGNOD(0),"^",35),0),"^",1))
	W ?53,"Use Temp Address: ",$S($P(DGNOD("BT"),"^",3):"YES",1:"NO")
	W !?4,"Default Code Sheet Printer : ",$S($P(DGNOD(0),"^",25)]"":$P(DGNOD(0),"^",25),1:"NONE SPECIFIED"),?51,"Ask Device in Reg.: ",$S($P(DGNOD(0),"^",39):"YES",1:"NO")
	S DGX=33 W !?4,"Days to Maintain Sens. Data: ",$S('$P(^DG(43,1,0),"^",33):"Forever",1:+$P(^(0),"^",33))
	S DGX=46 W ?46,"Days to Update Medicaid: ",$S('$P(^DG(43,1,0),U,46):365,1:+$P(^(0),U,46))
	;S DGX=47 W !?4,"Print Encouner Form at Reg.",?31,": " D DO
	W !?13,"Default EF Printer: ",$S($P(DGNOD(0),"^",48)]"":$P(DGNOD(0),"^",48),1:"NONE SPECIFIED") S DGX=47 W ?49,"Print Encounter Form",?31,": " D DO
	W !!,"[3]" I DGMULT W ?4,"Divisions: " F I=0:0 S I=$O(^DG(40.8,I)) Q:'I  S X=$P(^(I,0),"^",1)_$S($P(^(0),"^",2)]"":" ("_$P(^(0),"^",2)_"), ",1:"") W:$L(X)>(65-$X) !?15 W X
	I 'DGMULT S DGD=+$P(DGNOD("GL"),"^",3),DGDV=$S($D(^DG(40.8,DGD,"DEV")):^("DEV"),1:""),DGZE=$S($D(^(0)):^(0),1:"") D DEV^DGPAR1
	G ^DGPAR1
DAY	S DGD=+$P(DGNOD(0),"^",DGX) I DGX=29,'DGD W "FOREVER" Q
	W DGD,"-",DGX1,$S(DGD=1:"",1:"S") Q
DO	I DGX'=8 W $S('$P(DGNOD(0),"^",DGX):"NO",1:"YES") Q
	W $S('$P(DGNOD(0),"^",DGX):"YES",1:"NO") Q

DGPAR1
DGPAR1	;ALB/MRL - ADT PARAMETERS ENTRY/EDIT ; 07 MAR 87
	;;5.3;Registration;**51,62,86**;Aug 13, 1993
	S DGERR=0 D L W !,"Enter " W:DGMULT "'D' to view DIVISIONS, " W "1-3 to EDIT, or RETURN to QUIT:  " R DGAN:DTIME G Q1:'$T!(DGAN["^")!(DGAN']"") I $S("Dd"[$E(DGAN):0,DGAN?1N.E:0,1:1) G HELP
	I "Dd"[$E(DGAN) G DIV:DGMULT,HELP
	I DGAN?1N1"-"1N S DGAN1=DGAN,DGAN="" F I=+DGAN1:1:$P(DGAN1,"-",2) S DGAN=DGAN_I_","
	S DGAN1=DGAN,DGAN="" F J=1:1 S I=$P(DGAN1,",",J) Q:I=""  I I'>DGMULT+2 S:I'["-" DGAN=DGAN_I_"," I I["-" S I1=$P(I,"-",1),I2=$P(I,"-",2) F I3=I1:1:I2 I I3'>DGMULT+2,DGAN'[(","_I3_",") S DGAN=DGAN_I3_","
	S DGAN=","_DGAN,DR="" S:DGAN[(",1,") DR=DR_$P($T(1),";;",2) S:DGAN[(",2,") DR=DR_$P($T(2),";;",2) I DR]"" S DIE="^DG(43,",DA=1 D ^DIE K DR,DIE,DA
	I DGAN'[",3," D Q G ^DGPAR
	G ^DGPAR:DGAN'[(",3,") I 'DGMULT S DIE="^DG(40.8,",DA=+$P(DGNOD("GL"),"^",3),DR=$P($T(3),";;",2) I $D(^DG(40.8,DA,0)) D ^DIE
	I 'DGMULT D Q G ^DGPAR
	F DGI=0:0 S DIC="^DG(40.8,",DIC(0)="AEQML" D ^DIC Q:Y'>0  D:$P(Y,U,3) VASITE(Y) S DIE=DIC,DA=+Y,DR=$P($T(3),";;",2) D ^DIE
	D Q G ^DGPAR
Q	G Q1:'$D(DFN1),Q:DFN1'=+DFN1 I $D(SDMD),SDMD=1,$D(^DIC(4,+$P(^DG(40.8,DFN1,0),"^",2),0)) S ^DIC(4,$P(^DG(40.8,DFN1,0),"^",2),"DIV")="Y"
	I $D(SDMD),SDMD=0,$D(^DIC(4,$P(^DG(40.8,DFN1,0),"^",2),0)) K ^DIC(4,$P(^DG(40.8,DFN1,0),"^",2),"DIV")
Q1	K C,DGIND,DA,DFN1,DGERR,DGAN,DGAN1,DGD,DGIN,DGDV,DGDV1,DGHEAD,DGI,DGMULT,DGNOD,DGPTFP,DG,SDMD,X,DGX,DGX1,DGZE,DIC,DIE,DIK,DR,I,I1,I2,I3,J,X,X1,Y Q
DIV	S (C,DGERR)=0 D H1
	F DGD=0:0 S DGD=$O(^DG(40.8,DGD)) Q:'DGD!(DGERR)  S DGZE=$S($D(^(DGD,0)):^(0),1:""),DGDV=$S($D(^("DEV")):^("DEV"),1:"") S X=$P(DGZE,"^",1)_" DIVISION",X1="",$P(X1,"-",$L(X))="" W !,X,!,X1,!?4 D DEV W ! S C=C+1 D:'(C#2) H
	G SC
	;CHANGED $N TO $O BELOW
H	Q:'+$O(^DG(40.8,+DGD))  I C>0 D L W !,"Press RETURN to see more DIVISION PARAMETERS:  " R X:DTIME I X["^" S DGERR=1 Q
H1	W @IOF,!,"DIVISION PARAMETERS",$S(C>0:", CONTINUED",1:""),! S X="",$P(X,"=",79)="" W X Q
DEV	W ?4,"Print Wristbands",?25,": ",$S($P(DGZE,"^",8)="Y":"YES",1:"NO"),!
	S DGDV1="AA<96 HOURS^AA" S X=$P(DGZE,"^",4) W ?4,"'",$P(DGDV1,"^",1),"' on G&L",?25,": ",$S($P(DGZE,"^",4):"YES",1:"NO")
	D EN^DGPAR2
P	Q:'DGPTFP  S X=$S($P(DGDV,"^",4)]"":$P(DGDV,"^",4),1:$P(DGNOD(0),"^",19)) W !?4,"Division PTF printer",?25,": ",$S(X]"":X,1:"NEEDS TO BE SPECIFIED") Q
HELP	W @IOF,!,"ADT PARAMETER ENTRY/EDIT, HELP SCREEN"
	S X="",$P(X,"=",79)="" W !,X
	W !,">>> Enter RETURN to QUIT this option.",!
	I DGMULT W !,">>> Enter a 'D' to display individual DIVISION parameters.",!
	W !,">>> NOTE: To view and edit Scheduling parameters use the 'Scheduling Parameters'"
	W !,"          option under the 'Supervisor Menu' in the Scheduling package.",!
	W !,">>> Enter the field group number(s) you wish to edit using commas"
	W !,"    and or dashes as delimiters."
	W !!,"Edit Data Group(s) [Select by number]:"
	W !,"-------------------------------------"
	W !,"[1] Primary facility parameters, which if multi-divisional facility apply to all",!?4,"divisions, such as 'PRINT PTF MESSAGE?', etc."
	W !!,"[2] ADT Specific parameters which, again, if the facility is multi-divisional",!?4,"apply to all divisions.  Includes such items as 'at what point is a",!?4,"disposition considered late', etc."
	W !!,"[3] "
	I DGMULT W "The names of the individual divisions associated with this facility.  You",!?4,"may enter a 'D' at the 'ENTER' prompt to view division specific data."
	I 'DGMULT W "The device/G&L parameters associated with this facility."
	G SC
	;
L	F I=$Y:1:21 W !
	Q
SC	D L R:'DGERR !,"Press RETURN to return to SCREEN:  ",X:DTIME G ^DGPAR
	;
VASITE(Y)	; -- add new time sensitive entry
	N DIC,DIE,DR,DFN1,SDMD,DGI,VASITE
	S VASITE("NEW")=Y D NEW^VASITE1
	Q
	;
1	;;12;S DFN1=X;13;11;S SDMD=X,DGIND=1;15;16;4;9.6;9.5;9;34;76;77;37;38;
2	;;5;5.5;6;7;17;8;S:X'=1 Y="@42";44;45;Q;@42;42;S:X'=1 Y="@18";43;Q;@18;18;19;70;722;25;39;33;46;47;S:X'=1 Y="@48";48;Q;@48
3	;;S:'DGMULT Y=.08;3;S:X=1 Y=.07;.08;4;5;6;.07;7;8;9;S:'$P(DGNOD(0),"^",31) Y=0;9.1;

DGREG00
DGREG00	;ALB/JDS - REGISTER A PATIENT, CONT. ; 03 OCT 85
	;;5.3;Registration;**86**;Aug 13, 1993
W1	D NOW^%DTC S DGNOW=% K A,DGOPT
	I $$PROMPRN^DG1010PA("1010") S DB=1
W2	I $$PROMPRN^DG1010PA("1010I") D
	.S ZTRTN="^DG3PR0",ZTDTH=DGNOW,ZTSAVE("DFN")=DFN,ZTDESC="PRINT 1010 - FROM REGISTRATION",ZTIO=DGIO(10)
	.D ^%ZTLOAD
	;
W3	S PRF=0,RT=0 G QU:'$D(^DG(43,1,0))
PRO	I $$PROMPRN^DG1010PA("PRO") S PRF=1
	I $$PROMPRN^DG1010PA("HS") S DGHS=1
RT	W !,"ROUTING SLIP" S %=1 D YN^DICN G Q:%=-1 I '% S DGPRINT=4 D HLP G RT
	S RT=(%=1)
QU	I $G(DB) S ZTRTN="EN^DG1010P",ZTDTH=DGNOW,ZTDESC="1010 - FROM REGISTRATION",ZTSAVE("DA")=DFN,ZTSAVE("DFN")=DFN,ZTSAVE("DFN1")=DFN1,ZTSAVE("FREE")=$S($D(^DG(43,1,0)):+$P(^(0),"^",8),1:0),ZTIO=DGIO(10) D ^%ZTLOAD
QUPRF	I $G(PRF) S ZTRTN="DFN^PSOSD1",ZTDTH=DGNOW,ZTDESC="DRUG PROFILE - FROM REGISTRATION",ZTSAVE("PSTYPE")=$G(PSTYPE),ZTSAVE("DFN")=DFN,ZTSAVE("DFN1")=DFN1,ZTIO=DGIO("PRF") D ^%ZTLOAD
QUHS	I $G(DGHS)&$G(GMTSTYP) D
	.S ZTRTN="ENXQ^GMTSDVR",ZTDTH=DGNOW,ZTDESC="HEALTH SUMMARY - FROM REGISTRATION",ZTSAVE("GMTSTYP")=GMTSTYP,ZTSAVE("DFN")=DFN,ZTIO=DGIO(10)
	.D ^%ZTLOAD
	.K DGHS,GMTSTYP
QURT	I $G(RT) S ZTRTN="EN1^SDROUT1",ZTDTH=DGNOW,ZTDESC="ROUTING SLIP - FROM REGISTRATION",ZTSAVE("DFN")=DFN,ZTSAVE("DIV")=DIV,ZTSAVE("DT")=DT,ZTIO=DGIO("RT") D ^%ZTLOAD
EMBOS	W ! D EMBOS^DGQEMA
	D EF^DG1010P
Q	K:'$D(DGASKDEV) DGIO
Q1	K %,%DT,A,B,ANS,APD,B,CURR,DA,DB,DE,DEF,DGCLPR,DGDAY,DGDFN,DGE,DGL,DGLL,DFMD,DGNEW,DGNOW,DGO,DIC,DIE,DINUM,DOW,DP,DR,I,I1,IOZBK,IOZFO,L,L1,L2,LL,LL1,LL2,MDCARD,PARA,PRF,RT,S,SC,SEEN
	K VET,X,X1,X2,Y,Y1,ZTSK,D0,D1,DIV,DLAYGO,J,PGM,Z G A^DGREG:'$D(DGRPFEE) Q
	;
DT	G DT^DIQ:Y
	Q
SSD	S DIV=$S('$D(^DG(40.8,+$P(A(0),"^",4),0)):" 1",1:" "_$P(A(0),"^",4))
	Q
HLP	S DGPRINT=$P("10-10^10-10I^DRUG PROFILE^ROUTING SLIP","^",DGPRINT) W !!,"CHOOSE FROM",!?4,"YES - To include a copy of the ",DGPRINT," for this patient.",!?4,"NO  - If you don't want to print a copy of the ",DGPRINT,"." K DGPRINT Q

IBD21IN
IBD21IN	;ALB/CJM - ENCOUNTER FORM - installation routine for AICS 2.1 ;OCT 5, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	; -- Perform one-time installation items
	I +$G(^DD(357,0,"VR"))<2.1 D
	.D CNVRT ; conversion for new dds
	D PANDAS
	.Q
	;
	; -- Run at every installation
	;
	Q
	;
CNVRT	; -- covert to using a multiple in file 357.6 for information
	;    about nodes,pieces, data length, etc.
	;
	N COUNT,PCKG,NODE,NODE2,NODE8,P
	;
	; -- don't need this conversion if the file doesn't already exist!
	Q:'$D(^IBE(357.6,0))
	;
	S PCKG=0 F  S PCKG=$O(^IBE(357.6,PCKG)) Q:'PCKG  D
	.Q:($G(^IBE(357.6,PCKG,15,0))'="")
	.S CNT=0
	.S NODE2=$G(^IBE(357.6,PCKG,2)),NODE8=$G(^IBE(357.6,PCKG,8))
	.Q:NODE2=""
	.F P=1:1:6 I $P(NODE2,"^",(P*2)+1)'="" D
	..S CNT=CNT+1
	..S NODE=$P(NODE2,"^",(P*2)+1)_"^"_$P(NODE2,"^",(P*2)+2)_"^"_(P+1)_"^"_$P(NODE8,"^",P+1)
	..S ^IBE(357.6,PCKG,15,CNT,0)=NODE
	..S ^IBE(357.6,PCKG,15,"B",$E($P(NODE,"^"),1,30),CNT)=""
	..S ^IBE(357.6,PCKG,15,"C",P+1,CNT)=""
	.S ^IBE(357.6,PCKG,15,0)="^357.615I^"_CNT_"^"_CNT
	Q
	;
PANDAS	; -- remove package interface nodes for pandas sites.
	N X,DA,DIK
	S X=0 F  S X=$O(^IBE(357.6,X)) Q:'X  D
	.K ^IBE(357.6,X,9),^(11),^(14)
	;
	I $D(^DD(357.6,11.01,0))>0 D
	.S DA=11.01,DA(1)=357.6,DIK="^DD(357.6," D ^DIK K DA,DIK
	.S DA=11.02,DA(1)=357.6,DIK="^DD(357.6," D ^DIK K DA,DIK
	.S DA=11.03,DA(1)=357.6,DIK="^DD(357.6," D ^DIK K DA,DIK
	Q

IBD21PRE
IBD21PRE	;ALB/CPM - IB V2.0 PRE-INITIALIZATION ROUTINE ; 01-SEP-93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
%	D NOW^%DTC S IBDBDT("IBD")=$H,DT=$$DT^XLFDT,Y=% W !!,"Initialization Started: " D DT^DIQ W !!
	;
VER	I +$G(^DD(358.6,0,"VR"))<2.1 W !!,"The IBDPINIT must be run first!",! K DIFQ D HELP G NO
	;
USER	I $S('($D(DUZ)#2):1,'$D(^VA(200,+DUZ,0)):1,'$D(DUZ(0)):1,DUZ(0)'="@":1,1:0) W !!?3,"The variable DUZ must be set to an active user code and the variable",!?3,"DUZ(0) must equal '@' to initialize.",! K DIFQ G NO
	;
MAS	I $D(DIFQ),$G(^DG(43,1,"VERSION"))<5.3 K DIFQ W !!,?3,"PIMS Version 5.3 must be installed first!" G NO
	;
	;
NO	I '$D(DIFQ) W !,"INITIALIZATION ABORTED" K IBDBDT
	K DIR,DIRUT,DUOUT
	Q
	;
HELP	; -- Version 2.1 help instructions
	F I=1:1:14 W !,$P($T(H+I),";;",2)
H	;;
	;;To install AICS version 2.1 do the following:
	;;  1.  Set DUZ to an active user and DUZ(0)="@"
	;;  2.  Make sure the the current version of MAS is at least 5.3
	;;  3.  Three inits are run in the following order
	;;          IBDPINIT  This builds the package interfaces correctly
	;;          IBDINIT   This installs the remainder of the package
	;;          IBDEINIT  This installs 4 new tool kit forms and 28
	;;                    new tool kit blocks into the workspace
	;;                    and automatically adds them to the tool kit.
	;;  4.  If for some reason the post-init for IBDEINIT did not completely
	;;      add all tool kit forms and blocks you can re-run AUTOINS^IBDE4
	;;      to automatically install the components or you can manually
	;;      add the components by using routine ^IBDE.
	;;

IBD21PT
IBD21PT	;ALB/CJM - ENCOUNTER FORM - installation routine for AICS 2.1 ;OCT 5, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
POSTINIT	;the post-init for the install
	S X="IBDL" X ^%ZOSF("TEST") I $T D ^IBDL ; -- install list templates
	S X="IBDONIT" X ^%ZOSF("TEST") I $T D ^IBDONIT ; -- install protocals
	D DELPRO
	D HIDDEN
	D MAKEFRM
	D UPDATE^IBD21PT1
	D PARAM
	D DEL^IBD21PT2
	D CHKSL^IBD21PT2
	D PXACT^IBD21PT2
	D REINDX
	;S X="IBDINITY" X ^%ZOSF("TEST") I $T D ^IBDINITY
	S IBDINIT="IBD" D DONE,MSG
	D HOME^%ZIS
	Q
	;
PARAM	; -- create entry in new parameters file 357.09
	I $G(^IBD(357.09,1,0))'="" Q
	W !!,">>> Creating Entry in AICS PARAMETERS file"
	S DIC="^IBD(357.09,",DINUM=1,X=$P($$SITE^VASITE,"^",2),DIC(0)="L",DLAYGO=357.09 D FILE^DICN Q:+Y<1
	S $P(^IBD(357.09,1,0),"^",5)=1 ; set print inpatients to yes
	S ^IBD(357.09,1,"Q",0)="^357.091A^"
	Q
	;
HIDDEN	; -- the hidden actions don't show up unless the hidden menu protocol
	;    is re-indexed
	W !!,">>> Re-indexing the Hidden menu 'IBDF HIDDEN ACTIONS' protocol"
	K DIK,DA
	S DA=$$FPROT("IBDF HIDDEN ACTIONS")
	I DA S DIK="^ORD(101," D IX^DIK
	K DIK,DA
	Q
	;
DELPRO	; -- deletes the protocols that have been obsoleted
	W !!,">>> Deleting obsolete protocols"
	D DITEM("IBDF CLINIC'S FORMS MENU","IBDF PRINT SAMPLE FORM")
	D DITEM("IBDF CLINIC'S FORMS MENU","IBDF QUIT")
	D DITEM("IBDF EDIT FORM BLOCK MENU","IBDF EXIT")
	D DITEM("IBDF EDIT GROUP'S SELECTIONS MENU","IBDF EXIT")
	D DITEM("IBDF EDIT SELECTION LIST MENU","IBDF EXIT")
	D DITEM("IBDF EDIT TOOL KIT BLOCKS","IBDF EXIT")
	D DITEM("IBDF MENU FOR ADDING TOOL KIT BLOCK","IBDF EXIT")
	D DITEM("IBDF MENU FOR EDITING DISPLAYED FORM","IBDF EXIT")
	D DITEM("IBDF EF CLINIC GROUP MENU","IBDF EF EXIT")
	D DPROT("IBDF EXIT")
	Q
	;
FPROT(NAME)	;
	; -- finds the protocol named NAME and returns its ien, returns 0
	;    if it can not be found
	;
	Q:NAME="" 0
	Q $O(^ORD(101,"B",NAME,0))
	;
FITEM(MENU,ITEM)	;
	; -- returns the ien of an action in the item subfile
	;     MENU = the ien of the menu protocol
	;     ITEM = the ien of the protocol on the menu to find
	;
	I '$G(MENU)!'$G(ITEM) Q 0
	Q $O(^ORD(101,MENU,10,"B",ITEM,0))
	;
DPROT(NAME)	;
	; -- deletes the protocol named NAME
	Q:$G(NAME)=""
	N IEN
	S IEN=$$FPROT(NAME)
	I IEN D
	.K DIK,DA S DA=IEN,DIK="^ORD(101,"
	.D ^DIK K DIK,DA
	.W !,NAME," protocol deleted"
	Q
	;
DITEM(MNAME,INAME)	;
	; -- deletes the protocol named INAME from menu protocol named MNAME
	;
	N MENUIEN,ITEMIEN,SUBIEN
	S MENUIEN=$$FPROT(MNAME)
	S ITEMIEN=$$FPROT(INAME)
	I MENUIEN,ITEMIEN D
	.S SUBIEN=$$FITEM(MENUIEN,ITEMIEN)
	.I SUBIEN D
	..K DIK,DA S DA=SUBIEN,DA(1)=MENUIEN,DIK="^ORD(101,"_DA(1)_",10,"
	..D ^DIK K DIK,DA
	..W !,INAME," item on the protocol menu ",MNAME,"  deleted"
	Q
	;
MAKEFRM	; -- creates two required tool kit forms - GARBAGE, and TOOL KIT
	;
	N NAME,NODE
	S NAME="TOOL KIT",NODE="TOOL KIT^1^Contains all of the tool kit blocks.^0^0^1^1^^132^80^4^1^^1^p^1"
	D FORM(NAME,NODE)
	S NAME="GARBAGE",NODE="GARBAGE^1^Used as temporary storage for blocks while they are being edited.^0^0^0^1^^133^80^1^0^^1^p^1"
	D FORM(NAME,NODE)
	Q
	;
FORM(NAME,NODE)	; -- create a form with NAME=form name, node 0 = NODE
	N FORM
	;if the form already exists, don't create another
	Q:$O(^IBE(357,"B",NAME,0))
	W !!,">>> Creating an entry in the ENCOUNTER FORM file (#357) required by the",!?4,"Encounter Form Utilities... "
	K DIC,DD,DO,DINUM S DIC="^IBE(357,",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE S FORM=+Y
	I FORM<0 W "Unable to create entry -- please call your supporting ISC." Q
	;
	; -- copy old 0 node into the new form
	S ^IBE(357,FORM,0)=NODE
	;
	; -- now index it
	K DIK,DA S DA=FORM,DIK="^IBE(357," D IX1^DIK K DIK,DA
	W "done!"
	Q
	;
ALLDONE	; -- loop through all inits times
	F IBXX="IBDP","IBD","IBDE" S IBDINIT=IBXX I $D(IBDBDT(IBDINIT)) D DONE
	K IBDINIT,IBDBDT,IBDEDT
	Q
	;
DONE	; Installation has completed - display final messages
	;
	I $G(IBDINIT)="" S IBDINIT="IBD"
	D NOW^%DTC S:'$D(IBDEDT(IBDINIT)) IBDEDT(IBDINIT)=$H
	W !!,">>> Initialization of "_$G(IBDINIT)_"init Complete at " S Y=% D DT^DIQ
	I $D(IBDBDT(IBDINIT)) D
	.S IBDAY=+IBDEDT(IBDINIT)-(+IBDBDT(IBDINIT))*86400 ;additional seconds if over midnight
	.S X=IBDAY+$P(IBDEDT(IBDINIT),",",2)-$P(IBDBDT(IBDINIT),",",2)
	.W !,"    Elapse time for initialization was: ",X\3600," Hours,  ",X\60-(X\3600*60)," Minutes,  ",X#60," Seconds"
	K IBDAY,X,I
	Q
	;
MSG	W !!!,$TR($J("",79)," ","*")
	W !!,"The Main Installation of AICS is now done"
	W !,"Now run ^IBDEINIT to install the tool kit into the workspace"
	W !!!,$TR($J("",79)," ","*")
	Q
	;
MSGE	W !!!,$TR($J("",79)," ","*")
	W !!,"The installation of the AICS is complete."
	W !!,"Please remember to re-compile all templates, by typing D ALL^IBDFUTI"
	W !,"in programmer mode, on all of your systems."
	;
	;
	W !!!,"The following IB* routines are now obsolete and may be deleted from"
	W !,"your system:",!!,"IBXF*"
	W !!,$TR($J("",79)," ","*")
	Q
	;
REINDX	;Re-Index 'D' X-reference
	S DIK="^IBD(357.96,",DIK(1)=".03^D" D ENALL^DIK
	Q

IBD21PT1
IBD21PT1	;ALB/CJM - ENCOUNTER FORM - installation routines for AICS 2.1 ;OCT 5, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
COPYALL	; -- copies all the package interfaces in 357.6 to 358.6
	; -- need to clear the workspace
	N PI,LIST,NEWPI
	D DLTALL^IBDE2
	S PI=0 F  S PI=$O(^IBE(357.6,PI)) Q:'PI  D
	.I '$D(LIST(PI)) S NEWPI=$$GETPI^IBDFU2B(PI,357.6,358.6)
	.I NEWPI S LIST(NEWPI)=""
	Q
	;
UPDATE	; -- updates file 357.6 from 358.6
	;    assumes 357.6 was already updated by DIFROM via merge
	;
	N PI358,PI357,NAME,TYPE,NODE0,NODE16,INPUTPI,CUSTODY,TYPEDATA
	S PI358=0
	;
	; -- for each package interface in 358.6 (the workspace)
	;    look for fields to overlay the corresponding package interface in 357.6
	;
	F  S PI358=$O(^IBE(358.6,PI358)) Q:'PI358  S NODE0=$G(^IBE(358.6,PI358,0)) S NAME=$P(NODE0,"^"),CUSTODY=$P(NODE0,"^",4),TYPE=$P(NODE0,"^",6),INPUTPI=$P(NODE0,"^",13) I NAME'="",TYPE D
	.S PI357=0
	.;
	.; -- this loop leaves PI357 set to the corresponding PI in 357.6
	.F  S PI357=$O(^IBE(357.6,"B",$E(NAME,1,30),PI357)) Q:'PI357  S NODE0=$G(^IBE(357.6,PI357,0)) I NAME=$P(NODE0,"^"),TYPE=$P(NODE0,"^",6) Q
	.Q:'PI357
	.;
	.; -- now update the fields in 357.6 that are either pointers or need to be overwritten (DIFROM did a merge)
	.S $P(^IBE(357.6,PI357,0),"^",4)=CUSTODY
	.I INPUTPI S $P(^IBE(357.6,PI357,0),"^",13)=$$GETPI^IBDFU2B(INPUTPI,358.6,357.6)
	.;
	.;copy the allowable data qualifiers multiple
	.I $D(^IBE(358.6,PI358,13,0)) D
	..K ^IBE(357.6,PI357,13)
	..D CPYQLFRS^IBDFU2B(358.6,PI358,357.6,PI357)
	.;
	.;deal with the 2 pointers on node 16
	.S NODE16=$G(^IBE(358.6,PI358,16))
	.S TYPEDATA=$P(NODE16,"^",2) S:TYPEDATA $P(^IBE(357.6,PI357,16),"^",2)=$$GETADE^IBDFU2B(TYPEDATA,358.99,359.1)
	.S TYPEDATA=$P(NODE16,"^",6) S:TYPEDATA $P(^IBE(357.6,PI357,16),"^",6)=$$GETADE^IBDFU2B(TYPEDATA,358.99,359.1)
	.S DA=PI357,DIK="^IBE(357.6," D IX1^DIK
	Q

IBD21PT2
IBD21PT2	;ALB/CJM - ENCOUNTER FORM - installation routines for AICS 2.1 ;OCT 5, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	D PARAM,CHKSL,NEWOPT,ACT
	D PXACT
	Q
	;
PXACT	; -- if pce is installed, activate the selection package interfaces
	N I,J,X,Y
	I $D(^AUTTEDT(0)) D  ; education topics installed
	.F I=1:1 S X=$P($T(INTRFCE+I),";;",2) Q:X=""  D
	..S IBDIEN=$O(^IBE(357.6,"B",X,0))
	..Q:'IBDIEN
	..Q:$G(^IBE(357.6,IBDIEN,0))=""
	..Q:$P($G(^IBE(357.6,IBDIEN,0)),"^",9)=1  ;already available
	..S $P(^IBE(357.6,IBDIEN,0),"^",9)=1 ;makes it available
	..W !,">>> AICS interface ",X," now available."
	Q
	;
PARAM	; -- Set new parameter
	S $P(^IBD(357.09,1,0),"^",5)=1 ; set print inpatients to yes
	Q
	;
CHKSL	; -- Check selection list multiple and set missing 357.3 nodes
	W !!,">>> Updating Missing nodes in selection list multiple"
	N CNT,TCNT,UCNT,LAST,I,J
	S TCNT=0,UCNT=0
	S I=0 F  S I=$O(^IBE(357.3,I)) Q:'I  D
	.S TCNT=TCNT+1,(LAST,CNT)=0
	.I '(TCNT#100) W "."
	.S J=0 F  S J=$O(^IBE(357.3,I,1,J)) Q:'J  S CNT=CNT+1,LAST=J
	.I CNT,$G(^IBE(357.3,I,1,0))="" S UCNT=UCNT+1
	.S ^IBE(357.3,I,1,0)="^357.3IA^"_LAST_"^"_CNT
	W !,"    Total Number of Entries checked: ",TCNT
	W !,"    Number of entries missing nodes: ",UCNT
	Q
	;
ACT	; -- activate options
	N DA
	W !!,">>> Activating Option to Print Sample all Clinics"
	S DA=$O(^DIC(19,"B","IBDF PRINT SAMPLE ALL CLINICS",0))
	I DA,$G(^DIC(19,+DA,0))'="" S $P(^DIC(19,+DA,0),"^",3)=""
	Q
	;
NEWOPT	; -- Add new option
	N DA,DIC,DR,DIE,X,Y,NEWOPT,MENU
	Q:$O(^DIC(19,"B","IBDF EDIT SITE PARAM",0))
	W !!,">>> Adding Option to edit Site parameters on Reports and Utilities Menu"
	S DIC="^DIC(19,",DIC(0)="L",DLAYGO=19,X="IBDF EDIT SITE PARAM"
	D FILE^DICN Q:+Y<1
	;
	S NEWOPT=+Y
	S DIE="^DIC(19,",DA=+Y
	S DR="1////Edit Site Parameters;4////R;25////IBDFESP"
	S DR=DR_";3.5///This option will allow editing of AICS site parameters that affect the printing of forms, manual data entry, the purge utility and scanning."
	D ^DIE
	;
	S MENU=$O(^DIC(19,"B","IBDF REPORTS MENU",0)) Q:'MENU
	Q:$O(^DIC(19,10,"B",NEWOPT,0))
	I '$D(^DIC(19,+MENU,10,0)) S ^DIC(19,+MENU,10,0)="^19.01IP^0^0"
	S DA(1)=MENU
	S DIC="^DIC(19,"_MENU_",10,",X="IBDF EDIT SITE PARAM",DIC(0)="L",DLAYGO=19.01
	D ^DIC S DA=+Y Q:+Y<1
	;
	S DIE="^DIC(19,"_MENU_",10,",DA(1)=MENU,DR="2////EP"
	D ^DIE
	Q
	;
DEL	; -- Delete Reports from print manager menu
	N IBD,IBDI,IBDX,IBDY,DA,DIK,CNT
	S IBDY=$O(^DIC(19,"B","IBDF PRINT MANAGER",0)) Q:IBDY=""
	;
	F IBD=1:1 S IBDI=$P($T(MENU+IBD),";;",2) Q:IBDI=""  D
	.S IBDX=$O(^DIC(19,"B",IBDI,0)) Q:IBDX=""
	.S IBDX=$O(^DIC(19,+IBDY,10,"B",IBDX,0)) Q:'IBDX
	.S CNT=$G(CNT)+1 I CNT=1 W !
	.S DA(1)=+IBDY,DA=+IBDX,DIK="^DIC(19,"_+IBDY_",10," D ^DIK K DA,DIK
	.W !,">>> Deleting ",IBDI," from IBDF PRINT MANAGER menu"
	I $G(CNT) W !!,">>> These options are on the new Reports and Utilities Menu"
	Q
	;
MENU	;;
	;;IBDF FORMS TRACKING
	;;IBDF UTIL MAINTENANCE UTILITY
	;;IBDF LIST CLINICS WITH NO FORM
	;;IBDF LIST CLINICS USING FORMS
	;;IBDF SCANNED W/BILL GEN
	;;
	;;
INTRFCE	;;
	;;PX SELECT EDUCATION TOPICS
	;;PX SELECT EXAMS
	;;PX SELECT HEALTH FACTORS
	;;PX SELECT IMMUNIZATIONS
	;;PX SELECT SKIN TESTS
	;;PX SELECT TREATMENTS
	;;

IBDE
IBDE	;ALB/CJM - ENCOUNTER FORM - IMP/EXP UTILITY ;AUG 12,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
MAIN	;
	N FORMLIST,BLKLIST,FORMCNT,BLKCNT,IBTKBLK,SCREEN
	S SCREEN="F" ;a flag that indicates wheter user is looking at the block screen(=B) or the form screen(=F)
	S IBTKBLK=0 ;if 1 overrides check preventing deletion of tk blocks
	K XQORS,VALMEVL
	D EN^VALM("IBDE IMP/EXP FORMS")
	Q
HDR	;
	S VALMHDR(1)="LIST OF FORMS READY FOR IMPORT OR EXPORT"
	S VALMHDR(3)="(** there are "_$S($O(^IBE(358.1,"D",0)):"also",1:"no")_" toolkit blocks in the work space **)"
	Q
ONENTRY	;
	S FORMLIST="^TMP(""IBDF"",$J,""IMP/EXP WS"",""FORMS"")"
	S BLKLIST="^TMP(""IBDF"",$J,""IMP/EXP WS"",""BLOCKS"")"
	D IDXBLKS^IBDE3,IDXFORMS
	Q
ONEXIT	;
	K ^TMP("IBDF",$J,"IMP/EXP WS"),VALMY,VALMBCK,X,Y,I,DA,D0
	Q
	;
IDXFORMS	;build an array of forms used by IBCLINIC for the list processor
	N FORM,NODE
	K @FORMLIST
	S (FORM,VALMCNT)=0 F  S FORM=$O(^IBE(358,FORM)) Q:'FORM  D
	.I $D(^IBE(358,FORM,0)) D
	..S VALMCNT=VALMCNT+1,@FORMLIST@(VALMCNT,0)=$$DISPLAY(FORM,VALMCNT),@FORMLIST@("IDX",VALMCNT,VALMCNT)=FORM D FLDCTRL^VALM10(VALMCNT) ;set video for ID column
	S FORMCNT=VALMCNT
	Q
	;
DISPLAY(FORM,ID)	;
	N NODE,RET
	S RET=$J(ID,3)_"  "
	S NODE=$G(^IBE(358,FORM,0))
	S RET=RET_$$PADRIGHT^IBDFU($P(NODE,"^",1),30)_"  "_$P(NODE,"^",3)
	Q RET

IBDE1
IBDE1	;ALB/CJM - ENCOUNTER FORM - (IMP/EXP UTILITY ACTIONS) ;AUG 12,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
ADD	;adds a form to the work space
	N OLDFORM,NEWFORM
	D FULL^VALM1
	S VALMBCK="R"
	S OLDFORM=$$SLCTFORM^IBDFU4("") Q:'OLDFORM
	S NEWFORM=$$COPYFORM^IBDFU2C(OLDFORM,357,358,"",1)
	I NEWFORM K DIE,DR,DA S DIE="^IBE(358,",DA=NEWFORM,DR="1;" D ^DIE K DIE,DR,DA
	D IDXFORMS^IBDE
	Q
	;
DELETE	;deletes a form from the work space
	N PICK,FORM
	D EN^VALM2($G(XQORNOD(0)))
	S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S FORM=+$G(@VALMAR@("IDX",PICK,PICK)) D:FORM DELETE^IBDFU2C(FORM,358,1)
	S VALMBCK="R"
	D IDXFORMS^IBDE
	Q
EDIT	;allows the export notes of a form to be edited
	N PICK,FORM
	D EN^VALM2($G(XQORNOD(0)))
	D FULL^VALM1
	S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S FORM=+$G(@VALMAR@("IDX",PICK,PICK)) D:FORM
	.K DIE,DR,DA S DIE="^IBE(358,",DR="1;",DA=FORM D ^DIE K DIE,DA,DR
	S VALMBCK="R"
	D IDXFORMS^IBDE
	Q
IMPORT	;allows the user to pick a form, then import it
	N PICK,FORM,NAME,NEWFORM,IBDVR,FORMVR
	D EN^VALM2($G(XQORNOD(0)))
	D FULL^VALM1
	S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S FORM=+$G(@VALMAR@("IDX",PICK,PICK)) D:FORM
	.S IBDVR=+$G(^DD(357,0,"VR")) S:IBDVR<2.1 IBDVR=2.1
	.S FORMVR=+$P($G(^IBE(358,FORM,0)),"^",17) S:FORMVR<2.1 FORMVR=2.0
	.I FORMVR<IBDVR W !!,"This form was created with version "_FORMVR_"." D
	..; -- ask if want to continue, if not quit
	..;
	.S NAME=$$NEWNAME^IBDFU2C($P($G(^IBE(358,FORM,0)),"^"))
	.Q:NAME=""
	.S NEWFORM=$$COPYFORM^IBDFU2C(FORM,358,357,NAME)
	.K DIE,DR,DA S DIE="^IBE(357,",DR=".07T;.04////1;",DA=NEWFORM D ^DIE K DIE,DA,DR
	.D:$G(NEWFORM) DELETE^IBDFU2C(FORM,358,0)
	S VALMBCK="R"
	D IDXFORMS^IBDE
	Q
VIEW	;allows the export notes of a form to be edited
	N PICK,FORM,IBARY,IBHDRRTN
	D EN^VALM2($G(XQORNOD(0)),"S")
	S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S FORM=+$G(@VALMAR@("IDX",PICK,PICK)) D
	.S IBHDRRTN="D VIEWHDR^IBDE1"
	.S IBARY="^IBE(358,"_FORM_",1)"
	.D EN^VALM("IBDE TEXT DISPLAY")
	S VALMBCK="R"
	Q
VIEWHDR	;
	S VALMHDR(1)="Export Notes For "_$P($G(^IBE(358,FORM,0)),"^")_" Form"
	Q
TEXT	;entry code for the IBDF TEXT DISPLAY list template
	N NODE S NODE=""
	S:$D(IBARY) VALMAR=IBARY
	X:$D(IBHDRRTN) IBHDRRTN
	I $G(IBARY)'="" S NODE=$G(@IBARY@(0))
	S VALMCNT=$S($P(NODE,"^",4)>$P(NODE,"^",3):$P(NODE,"^",4),1:$P(NODE,"^",3))
	I '$G(VALMCNT) S VALMCNT=10
	Q
	;
INITS	;executes inits to bring stuff into the imp/exp files
	N QUIT,RTN
	S QUIT=0
	S VALMBCK="R"
	I $G(DUZ(0))'["@" W !,"This action requires PROGRAMMER ACCESS!" D PAUSE^IBDFU5 Q
	D FULL^VALM1
	I BLKCNT!FORMCNT D
	.K DIR S DIR(0)="Y"
	.W !,"The work space must be cleared before the INITS are run. Is that okay?"
	.D ^DIR K DIR
	.I $D(DIRUT)!(Y=0) S QUIT=1
	D:'QUIT DLTALL^IBDE2
	;
	;ask for the init rtn
	F  Q:QUIT  D
	.S DIR(0)="FA^5:8",DIR("B")=$S($L($T(^IBDEINIT)):"IBDEINIT",1:"")
	.S DIR("?",1)="In order for you to import forms from another site the other site must have",DIR("?")="prepared and sent you inits created using the import/export facility."
	.S DIR("A",1)="What is the name of the init routine that contains the forms that you want to",DIR("A")="import? "
	.D ^DIR K DIR
	.I $D(DIRUT) S QUIT=1 Q
	.I '$L($T(^@Y)) W !!,"That routine does not exist!",! Q
	.S RTN=Y
	.S QUIT=$$MSG^IBDE1B
	.I 'QUIT D @("^"_RTN),IDXFORMS^IBDE,IDXBLKS^IBDE3 S VALMCNT=$S(SCREEN="F":FORMCNT,1:BLKCNT)
	.S QUIT=1
	I SCREEN="F" D HDR^IBDE
	I SCREEN="B" D HDR^IBDE3
	Q
DIFROM	;
	N QUIT S QUIT=0
	S VALMBCK=""
	I $G(DUZ(0))'["@" W !!,"Using the DIFROM action requires PROGRAMMER ACCESS!",! D PAUSE^IBDFU5 Q
	I 'BLKCNT,'FORMCNT D  Q
	.W !!,"There is nothing in the work space to export!"
	.D PAUSE^IBDFU5
	D FULL^VALM1
	S QUIT=$$MSG^IBDE1A
	I 'QUIT D ^DIFROM W !,"DONE",!,"************************"
	S VALMBCK="R"
	Q
BLOCKS	;
	S SCREEN="B"
	D EN^VALM("IBDE IMP/EXP TK BLOCKS")
	S VALMBCK="R",VALMCNT=FORMCNT,SCREEN="F"
	Q

IBDE1A
IBDE1A	; ALB/ISC - ENCOUNTER FORM UTILITIES - INSTRUCTIONS FOR EXECUTING DIFROM ;AUG 16, 1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
MSG()	;QUIT is an output
	N COUNT,LINE,QUIT
	S (QUIT,COUNT)=0
	W @IOF
	F  S LINE=$P($T(LINES+COUNT),";;",2) Q:QUIT!(LINE="")  D
	.S COUNT=COUNT+1
	.W !,LINE
	.I $Y>(IOSL-5) W !! D PAUSE
	I 'QUIT W !! D PAUSE
	Q QUIT
PAUSE	;
	K DIR S DIR(0)="E" D ^DIR K DIR S QUIT=$S(+Y:0,1:1)
	W:'QUIT @IOF
	Q
	;
LINES	;;===================================================================
	;;You must enter these parameters to the prompts generated by DIFROM:
	;;===================================================================
	;;     
	;;  
	;;Enter the Name of the Package (2-4 characters): IBDE
	;;I am going to create a routine called 'IBDEINIT'.
	;;but 'IBDEINIT' is ALREADY ON FILE!
	;;Is that OK? YES
	;;Would you like to include Data Dictionaries? YES// YES
	;;Would you like to see the package definition? NO// NO
	;;Do you want to accept the current definition? NO// YES
	;;    
	;;===================================================================
	;;{now DIFROM lists the files.....}
	;;===================================================================
	;;  
	;;Now you must enter the information that goes on the second line
	;;of the INIT routines.
	;;  
	;;Select VERSION: 2.0// 
	;;DATE DISTRIBUTED: AUG 3,1993// TODAY
	;;Would you like to include OPTIONS?       YES// NO
	;;Would you like to include BULLETINS?     YES// NO
	;;Would you like to include SECURITY KEYS? YES// NO
	;;Would you like to include FUNCTIONS?     YES// NO
	;;Would you like to include HELP FRAMES?   YES// NO
	;;Would you like security codes sent along: NO// NO
	;;Would you like this sent via the network: NO// NO
	;;Maximum Routine Size    (2000 - 9999) : 4000// 4000
	;;  
	;;===================================================================
	;;            OKAY, READY TO RUN DIFROM!
	;;===================================================================

IBDE1B
IBDE1B	; ALB/ISC - ENCOUNTER FORM UTILITIES - INSTRUCTIONS FOR EXECUTING INITS ;AUG 16, 1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
MSG()	;QUIT is returned
	N COUNT,LINE,QUIT
	S (QUIT,COUNT)=0
	W @IOF
	F  S LINE=$P($T(LINES+COUNT),";;",2) Q:QUIT!(LINE="")  D
	.S COUNT=COUNT+1
	.W !,LINE
	.I $Y>(IOSL-5) W !! D PAUSE
	I 'QUIT W !! D PAUSE
	Q QUIT
PAUSE	;
	K DIR S DIR(0)="E" D ^DIR K DIR S QUIT=$S(+Y:0,1:1)
	W:'QUIT @IOF
	Q
	;
LINES	;;***********************************************************************
	;; 
	;;  First the files contained in the inits will be listed.
	;;  THEN ....
	;;  You must enter these parameters to the prompts generated by INITS:
	;;  
	;;***********************************************************************
	;;   
	;;  
	;;SHALL I WRITE OVER FILE SECURITY CODES? NO// NO
	;;ARE YOU SURE EVERYTHING'S OK? NO// YES
	;;  
	;; 
	;;***********************************************************************
	;;  
	;;  Now to execute the inits!
	;;  
	;;***********************************************************************

IBDE2
IBDE2	; ALB/ISC - DELETES IMP/EXP FILE CONTENTS ; AUG 13, 1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
DLTALL	N FILE,NODE,COUNT
	S COUNT=0
	F  S FILE=$P($T(FILES+COUNT),";;",2) Q:FILE=""  D
	.S COUNT=COUNT+1
	.S NODE=$G(@FILE@(0))
	.S $P(NODE,"^",3)=0,$P(NODE,"^",4)=0
	.K @FILE
	.S @FILE@(0)=NODE
	S VALMBCK="R",VALMCNT=0,BLKCNT=0,FORMCNT=0
	K ^TMP("IBDF",$J,"IMP/EXP WS")
	I $G(SCREEN)="F" D HDR^IBDE
	I $G(SCREEN)="B" D HDR^IBDE3
	Q
	;
FILES	;;^IBE(358)
	;;^IBE(358.1)
	;;^IBE(358.2)
	;;^IBE(358.3)
	;;^IBE(358.4)
	;;^IBE(358.5)
	;;^IBE(358.6)
	;;^IBE(358.7)
	;;^IBE(358.8)
	;;^IBE(358.91)
	;;^IBE(358.93)
	;;^IBE(358.94)
	;;^IBD(358.98)
	;;^IBE(358.99)

IBDE3
IBDE3	;ALB/CJM - ENCOUNTER FORM - IMP/EXP UTILITY -DISPLAYS TOOLKIT BLOCKS ;AUG 12,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
HDR	;
	S VALMHDR(1)="LIST OF TOOLKIT BLOCKS READY FOR IMPORT OR EXPORT"
	S VALMHDR(3)="(** there are "_$S($O(^IBE(358,0)):"also",1:"no")_" forms in the work space **)"
	Q
ONENTRY	;
	N LINE
	S VALMCNT=$G(BLKCNT)
	I $D(BLKLIST) S LINE=0 F  S LINE=$O(@BLKLIST@(LINE)) Q:'LINE  D FLDCTRL^VALM10(LINE)
	Q
ONEXIT	;
	Q
	;
IDXBLKS	;build an array of forms used by IBCLINIC for the list processor
	N BLOCK,NODE,ORDER
	K @BLKLIST
	S (VALMCNT,ORDER)=0 F  S ORDER=$O(^IBE(358.1,"D",ORDER)) Q:'ORDER  S BLOCK=0 F  S BLOCK=$O(^IBE(358.1,"D",ORDER,BLOCK)) Q:'BLOCK  D
	.I $D(^IBE(358.1,BLOCK,0)) D
	..S VALMCNT=VALMCNT+1,@BLKLIST@(VALMCNT,0)=$$DISPLAY(BLOCK,VALMCNT),@BLKLIST@("IDX",VALMCNT,VALMCNT)=BLOCK D FLDCTRL^VALM10(VALMCNT) ;set video for ID column
	S BLKCNT=VALMCNT
	Q
	;
DISPLAY(BLOCK,ID)	;
	N NODE,RET
	S RET=$J(ID,3)_"  "
	S NODE=$G(^IBE(358.1,BLOCK,0))
	S RET=RET_$$PADRIGHT^IBDFU($P(NODE,"^",1),30)_"  "_$P(NODE,"^",13)
	Q RET
	;
ADD	;adds a block to the work space
	N OLDBLOCK,NEWBLOCK
	D FULL^VALM1
	S VALMBCK="R"
	S OLDBLOCK=$$SELECT Q:'OLDBLOCK
	S NEWBLOCK=$$COPYBLK^IBDFU2(OLDBLOCK,"",357.1,358.1,"","",1)
	I NEWBLOCK K DIE,DR,DA S DIE="^IBE(358.1,",DA=NEWBLOCK,DR="1;" D ^DIE K DIE,DR,DA
	D IDXBLKS
	Q
	;
DELETE	;deletes a block from the work space
	N PICK,FORM,IBTKBLK
	S IBTKBLK=1 ;can't delete tk blocks unless IBTKBLK
	D EN^VALM2($G(XQORNOD(0)))
	S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S BLOCK=+$G(@VALMAR@("IDX",PICK,PICK)) I BLOCK,$$RUSURE^IBDFU5($P($G(^IBE(358.1,BLOCK,0)),"^")) D DLTBLK^IBDFU3(BLOCK,"",358.1)
	S VALMBCK="R"
	D IDXBLKS
	Q
EDIT	;allows the export notes of a block to be edited
	N PICK,BLOCK
	D EN^VALM2($G(XQORNOD(0)))
	D FULL^VALM1
	S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S BLOCK=+$G(@VALMAR@("IDX",PICK,PICK)) D:BLOCK
	.K DIE,DR,DA S DIE="^IBE(358.1,",DR="1;",DA=BLOCK D ^DIE K DIE,DA,DR
	S VALMBCK="R"
	D IDXBLKS
	Q
IMPORT	;allows the user to pick a block from the imp/exp files, then import it
	N PICK,BLOCK,NEWBLOCK,IBTKBLK,NAME
	S IBTKBLK=1
	D EN^VALM2($G(XQORNOD(0)))
	D FULL^VALM1
	S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S BLOCK=+$G(@VALMAR@("IDX",PICK,PICK)) D:BLOCK
	.S NAME=$$NEWNAME($P($G(^IBE(358.1,BLOCK,0)),"^"))
	.Q:NAME=""
	.S NEWBLOCK=$$COPYBLK^IBDFU2(BLOCK,$$TKFORM^IBDFU2C,358.1,357.1,"","",$$TKORDER^IBDF13,NAME)
	.D:$G(NEWBLOCK) DLTBLK^IBDFU3(BLOCK,"",358.1)
	S VALMBCK="R"
	D IDXBLKS
	Q
VIEW	;allows the export notes of a form to be edited
	N PICK,BLOCK,IBARY,IBHDRRTN
	D EN^VALM2($G(XQORNOD(0)),"S")
	S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S BLOCK=+$G(@VALMAR@("IDX",PICK,PICK)) D
	.S IBHDRRTN="D VIEWHDR^IBDE3"
	.S IBARY="^IBE(358.1,"_BLOCK_",1)"
	.D EN^VALM("IBDE TEXT DISPLAY")
	S VALMBCK="R"
	Q
VIEWHDR	;
	S VALMHDR(1)="Export Notes For "_$P($G(^IBE(358.1,BLOCK,0)),"^")_" Block"
	Q
SELECT()	;allows the user to select a form, then a block from it
	N IBFORM,IBBLK
	S (IBFORM,IBBLK)=""
	K DIR S DIR(0)="S^1:TOOLKIT BLOCK;2:BLOCK FROM A TOOLKIT FORM;3:BLOCK FROM A FORM NOT IN THE TOOLKIT"
	S DIR("A")="What type of block do you want to export?"
	D ^DIR K DIR
	Q:(Y=-1)!($D(DIRUT)) ""
	I Y=1 D
	.S IBFORM=$$TKFORM^IBDFU2C
	E  S IBFORM=$$SLCTFORM^IBDFU4($S(Y=2:1,1:0))
	I IBFORM D
	.W !!,"NOW CHOOSE THE BLOCK TO COPY!",!
	.S IBBLK=$$SLCTBLK^IBDFU8(IBFORM)
	Q IBBLK
	;
NEWNAME(OLDNAME)	;asks the user to select uniqued toolkit block name
	;returns "" if unsuccessfull, else the blk name
	;shows OLDNAME as the default if defined
	;
	N NAME,FOUND,TKBLK,ORDER S NAME=""
	K DIR S DIR(0)="357.1,.01A",DIR("A")="New Toolkit Block Name: ",DIR("?")="Enter a unique name for the toolkit block up to 30 characters"
	S DIR("B")="" I $G(OLDNAME)'="" S DIR("B")=OLDNAME
	F  D  Q:'FOUND
	.S FOUND=0
	.D ^DIR I $D(DIRUT) S Y="" Q
	.S ORDER=0 F  S ORDER=$O(^IBE(357.1,"D",ORDER)) Q:ORDER=""  S TKBLK=$O(^IBE(357.1,"D",ORDER,0)) Q:'TKBLK   I $P($G(^IBE(357.1,TKBLK,0)),"^")=Y W !,"There is already a toolkit block with that name! The name should be unique." S FOUND=1 Q
	S:'FOUND NAME=Y
	K DIR
	Q NAME

IBDE4
IBDE4	;ALB/AAS - PUT FORMS AND BLOCKS INTO IMPORT/EXPORT UTILTIY ;AUG 12,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
ADD	; -- add forms to the import exort utility
	N FORM,NEWFORM,FORMNM,CNT,CNT1,ARY,NAME,X,Y,NEWBLOCK,A,EXCLUDE,BLK
	F CNT=1:1 S FORMNM=$P($T(FORMS+CNT),";;",2,99) Q:FORMNM=""  D
	.S FORM=$O(^IBE(357,"B",$E(FORMNM,1,30),0))
	.Q:$O(^IBE(358,"B",$E(FORMNM,1,30),0))
	.W !,"Moving Form '"_FORMNM_"' to import export utility"
	.S NEWFORM=$$COPYFORM^IBDFU2C(FORM,357,358,"",1)
	;
	; -- add all blocks for a form
	F CNT=1:1 S FORMNM=$P($T(BLOCKS+CNT),";;",2,99) Q:FORMNM=""  D
	.S FORM=$O(^IBE(357,"B",$E(FORMNM,1,30),0))
	.Q:$O(^IBE(358,"B",$E(FORMNM,1,30),0))
	.S ARY="A",EXCLUDE="" K A
	.S CNT1=$$FINDALL^IBDFU8
	.S NAME="" F  S NAME=$O(A("NAME",NAME)) Q:NAME=""  S BLK=0 F  S BLK=$O(A("NAME",NAME,BLK)) Q:'BLK  D
	..W !,"Moving Block '"_NAME_"' from form '"_FORMNM_"' to utility"
	..;Q:$O(^IBE(357.1,"B",NAME,0))  ;quit if same block from same form
	..S NEWBLOCK=$$COPYBLK^IBDFU2(BLK,"",357.1,358.1,"","",1)
	Q
	;
AUTOINS	; -- auto install tool kit into production
	N FORM,NEWFORM,FORMNM,CNT,CNT1,ARY,NAME,X,Y,NEWBLOCK,A,EXCLUDE,BLK,CNTF,CNTB
	W !!,">>> Now Attempting to automatically update Tool Kit forms and Tool Kit Blocks."
	S (CNTB,CNTF)=0
	;
	; -- add all tool kit blocks
	S FORMNM="TOOL KIT"
	I '$O(^IBE(357,"B",FORMNM,0)) G FRM
	S ORD="" F  S ORD=$O(^IBE(358.1,"D",ORD)) Q:ORD=""  S BLK=0 F  S BLK=$O(^IBE(358.1,"D",ORD,BLK)) Q:'BLK  D
	.S NAME=$P($G(^IBE(358.1,+BLK,0)),"^")
	.Q:$P($G(^IBE(358.1,BLK,0)),"^",14)'=1  ;not toolkit
	.Q:$O(^IBE(357.1,"B",NAME,0))  ;already installed
	.W !,"    Moving Block '"_$P($G(^IBE(358.1,+BLK,0)),"^")_"' from import/export to Tool Kit"
	.N IBTKBLK S IBTKBLK=1
	.S NEWBLOCK=$$COPYBLK^IBDFU2(BLK,$$TKFORM^IBDFU2C,358.1,357.1,"","",$$TKORDER^IBDF13),CNTB=CNTB+1
	.D:$G(NEWBLOCK) DLTBLK^IBDFU3(BLK,"",358.1)
	;
FRM	; -- Add tool kit forms
	F CNT=1:1 S FORMNM=$P($T(FORMS+CNT),";;",2,99) Q:FORMNM=""  D
	.S FORM=$O(^IBE(358,"B",$E(FORMNM,1,30),0))
	.Q:$O(^IBE(357,"B",$E(FORMNM,1,30),0))
	.W !,"    Moving Form '"_FORMNM_"' from import export utility to AICS"
	.S NEWFORM=$$COPYFORM^IBDFU2C(FORM,358,357,"",1),CNTF=CNTF+1
	;
	I CNTF=0,CNTB=0 W !!,">>> Tool Kit Forms and Blocks are already installed." Q
	W !!,">>>   Tool Kit Forms installed (4 sent): ",$J(CNTF,3)
	W !,">>> Tool Kit Blocks Installed (28 sent): ",$J(CNTB,3)
	Q
	;
FORMS	;;
	;;DEFAULTS
	;;AMBULATORY SURGERY SAMPLE V2.1
	;;EMERGENCY SERVICES SAMPLE V2.1
	;;PRIMARY CARE SAMPLE V2.1
	;;
BLOCKS	;;
	;;TOOL KIT
	;;

IBDEHELP
IBDEHELP	; ALB/ISC - ENCOUNTER FORM UTILITIES - INSTRUCTIONS FOR EXECUTING DIFROM ;AUG 16, 1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
HELP	;
	N LINE,IBARY,IBHDRRTN,CNT
	S IBHDRRTN="D HDR^IBDEHELP"
	S CNT=0
	S IBARY="^TMP(""IBDF"",$J,""IMP/EXP HELP"")"
	K @IBARY
	F  S LINE=$P($T(LINES+CNT),";;",2) Q:LINE=""  D
	.S CNT=CNT+1
	.S @IBARY@(CNT,0)=LINE
	S $P(@IBARY@(0),"^",4)=CNT
	D EN^VALM("IBDE TEXT DISPLAY")
	K @IBARY
	S VALMBCK="R"
	Q
HDR	;
	S VALMHDR(1)="HELP for the IMPORT/EXPORT UTILITY"
	Q
	;
LINES	;;The initial install of the Encounter Form Utilities at your site
	;;included a toolkit of forms and blocks. The ONLY SAFE METHOD for
	;;transferring additional forms and blocks between sites is through this
	;;IMPORT/EXPORT UTILITY.
	;;  
	;;The IMPORT/EXPORT UTILITY includes a set of files that are nearly
	;;identical to the files used by the ENCOUNTER FORM UTILTIES to contain
	;;the form descriptions. These import/export files constitute a WORK
	;;SPACE in which forms and blocks can be safely exported (to other sites)
	;;and imported (from other sites to your own).
	;;  
	;;You should have a PACKAGE entry for the IMPORT/EXPORT UTILITY already
	;;set up. The files listed should be in the range 358 to 358.91.
	;;The package entry is named IB ENCOUNTER FORM IMP/EXP, and the prefix
	;;is IBDE. The package entry is necessary to accomplish EXPORT.
	;;  
	;;  
	;;TO IMPORT:
	;;  
	;;  1) The other site must have prepared a set of inits, using this
	;;     utility, that contain the forms and toolkit blocks they want to
	;;     transfer.
	;;  
	;;  2) The work space MUST NOT ALREADY CONTAIN any forms or blocks that
	;;     you want to keep. First decide what you want to do with anything
	;;     that is already in the workspace. The work space will be cleared
	;;     before the inits are executed, so anything there will be lost.
	;;  
	;;  3) You must execute the inits, using this this utility, by choosing
	;;     the action RUN INITS. The init should normally be named IBDEINIT.
	;;  
	;;  4) The work space should now contain forms and toolkit blocks. You
	;;     can choose which ones you want, then choose the action IMPORT
	;;     ENTRY to actually make the form or block available for use. The
	;;     forms can not be viewed while in the work space, but you can view
	;;     the IMPORT/EXP NOTES.
	;;  
	;;TO EXPORT:
	;;  
	;;   0) Only users with PROGRAMMER ACCESS can export.
	;;  
	;;   1) First clear the work space of anything you do not want to export.
	;;  
	;;   2) Then add any forms or blocks to the work space that you do want
	;;      to export.
	;;  
	;;   3) Add EXPORT/IMPORT NOTES to each entry you add to the work space.
	;;      You must accuratly describe the form for the site that you are
	;;      exporting it to. They will be able to view the notes, but they
	;;      will not be able to view the form itself until they import it.
	;;  
	;;   4) Then, through the DIFROM action that is part of this utility,
	;;      create the inits that will be sent to the other site.
	;;  
	;;   5) Send the inits to the other site.

IBDEI001
IBDEI001	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358,0,"GL")
	;;=^IBE(358,
	;;^DIC("B","IMP/EXP ENCOUNTER FORM",358)
	;;=
	;;^DIC(358,"%D",0)
	;;=^^1^1^2940829^^^^
	;;^DIC(358,"%D",1,0)
	;;=Used by the import/export utility as a workspace.
	;;^DIC(358,"%D",2,0)
	;;=This file is nearly identical to file #357. It is used by the Import/Export
	;;^DIC(358,"%D",3,0)
	;;=Utility as a temporary staging area for data from that file that is being
	;;^DIC(358,"%D",4,0)
	;;=imported or exported.
	;;^DD(358,0)
	;;=FIELD^^.17^18
	;;^DD(358,0,"DDA")
	;;=N
	;;^DD(358,0,"DT")
	;;=2951024
	;;^DD(358,0,"ID",.03)
	;;=W "   ",$P(^(0),U,3)
	;;^DD(358,0,"IX","AB",358,.01)
	;;=
	;;^DD(358,0,"IX","AC",358,.01)
	;;=
	;;^DD(358,0,"IX","AG",358,.01)
	;;=
	;;^DD(358,0,"IX","AT",358,.01)
	;;=
	;;^DD(358,0,"IX","AU",358,.01)
	;;=
	;;^DD(358,0,"IX","B",358,.01)
	;;=
	;;^DD(358,0,"IX","C",358,.07)
	;;=
	;;^DD(358,0,"IX","D",358,.04)
	;;=
	;;^DD(358,0,"NM","IMP/EXP ENCOUNTER FORM")
	;;=
	;;^DD(358,0,"PT",358.1,.02)
	;;=
	;;^DD(358,.01,0)
	;;=NAME^RFX^^0;1^K:X[""""!($A(X)=45) X I $D(X) S X=$$UP^XLFSTR(X) K:$L(X)>30!($L(X)<3) X
	;;^DD(358,.01,1,0)
	;;=^.1
	;;^DD(358,.01,1,1,0)
	;;=358^B
	;;^DD(358,.01,1,1,1)
	;;=S ^IBE(358,"B",$E(X,1,30),DA)=""
	;;^DD(358,.01,1,1,2)
	;;=K ^IBE(358,"B",$E(X,1,30),DA)
	;;^DD(358,.01,1,2,0)
	;;=358^AT^MUMPS
	;;^DD(358,.01,1,2,1)
	;;=Q
	;;^DD(358,.01,1,2,2)
	;;=Q
	;;^DD(358,.01,1,2,"%D",0)
	;;=^^4^4^2931124^
	;;^DD(358,.01,1,2,"%D",1,0)
	;;=This cross-reference will be used to store the text of the compiled form.
	;;^DD(358,.01,1,2,"%D",2,0)
	;;=The format will be ..."AT",form ien,row #)=text line. The index will be
	;;^DD(358,.01,1,2,"%D",3,0)
	;;=created by the 'compile' action of the encounter form utilities - it is
	;;^DD(358,.01,1,2,"%D",4,0)
	;;=optional.
	;;^DD(358,.01,1,2,"DT")
	;;=2931124
	;;^DD(358,.01,1,3,0)
	;;=358^AC^MUMPS
	;;^DD(358,.01,1,3,1)
	;;=Q
	;;^DD(358,.01,1,3,2)
	;;=Q
	;;^DD(358,.01,1,3,"%D",0)
	;;=^^4^4^2940216^
	;;^DD(358,.01,1,3,"%D",1,0)
	;;=This cross-reference will be used to store the special controls needed
	;;^DD(358,.01,1,3,"%D",2,0)
	;;=(bold on, bold off, etc.) to print the compiled form. The format will be
	;;^DD(358,.01,1,3,"%D",3,0)
	;;=..."AC",form ien,row #,column # )=controls. The index will be created by
	;;^DD(358,.01,1,3,"%D",4,0)
	;;=the 'compile' action of the encounter form utilities - it is optional.
	;;^DD(358,.01,1,3,"DT")
	;;=2931124
	;;^DD(358,.01,1,4,0)
	;;=358^AU^MUMPS
	;;^DD(358,.01,1,4,1)
	;;=Q
	;;^DD(358,.01,1,4,2)
	;;=Q
	;;^DD(358,.01,1,4,"%D",0)
	;;=^^4^4^2931124^
	;;^DD(358,.01,1,4,"%D",1,0)
	;;=This cross-reference will be used to store the underlining of the compiled
	;;^DD(358,.01,1,4,"%D",2,0)
	;;=form. The format will be ...,"AU",form ien,row #)=underlining . The index
	;;^DD(358,.01,1,4,"%D",3,0)
	;;=will be created by the 'compile' action of the encounter form utilities -
	;;^DD(358,.01,1,4,"%D",4,0)
	;;=it is optional.
	;;^DD(358,.01,1,4,"DT")
	;;=2931124
	;;^DD(358,.01,1,5,0)
	;;=358^AG^MUMPS
	;;^DD(358,.01,1,5,1)
	;;=Q
	;;^DD(358,.01,1,5,2)
	;;=Q
	;;^DD(358,.01,1,5,"%D",0)
	;;=^^5^5^2931124^
	;;^DD(358,.01,1,5,"%D",1,0)
	;;=This cross-reference will be used to store strings of graphics characters
	;;^DD(358,.01,1,5,"%D",2,0)
	;;=(TLC,TRC, etc.) needed for the compiled form. The format will be
	;;^DD(358,.01,1,5,"%D",3,0)
	;;=..."AG",form ien,row #,column # )=graphics string . The index will be
	;;^DD(358,.01,1,5,"%D",4,0)
	;;=created by the 'compile' action of the encounter form utilities - it is
	;;^DD(358,.01,1,5,"%D",5,0)
	;;=optional.
	;;^DD(358,.01,1,5,"DT")
	;;=2931124
	;;^DD(358,.01,1,6,0)
	;;=358^AB^MUMPS
	;;^DD(358,.01,1,6,1)
	;;=Q
	;;^DD(358,.01,1,6,2)
	;;=Q
	;;^DD(358,.01,1,6,"%D",0)
	;;=^^4^4^2940606^^
	;;^DD(358,.01,1,6,"%D",1,0)
	;;=This cross-reference will be used to store the boxes needed for the compiled
	;;^DD(358,.01,1,6,"%D",2,0)
	;;=forms. The format will be ..."AB",form ien,row #,column #, Block ien)=
	;;^DD(358,.01,1,6,"%D",3,0)
	;;=box width^box height. The index will be created by the 'compile'
	;;^DD(358,.01,1,6,"%D",4,0)
	;;=action of the encounter form utilities.
	;;^DD(358,.01,1,6,"DT")
	;;=2940606
	;;^DD(358,.01,3)
	;;=The form name must be 3-30 uppercase characters in length.
	;;^DD(358,.01,21,0)
	;;=^^2^2^2931110^^
	;;^DD(358,.01,21,1,0)
	;;= 
	;;^DD(358,.01,21,2,0)
	;;=The name of the encounter form.
	;;^DD(358,.01,"DEL",1,0)
	;;=I 1 W "...Encounter Forms can only be deleted through the",!," DELETE UNUSED FORM action in the Encounter Form Utilities!"
	;;^DD(358,.01,"DT")
	;;=2940606

IBDEI002
IBDEI002	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358)
	;;=^IBE(358,
	;;^UTILITY(U,$J,358,0)
	;;=IMP/EXP ENCOUNTER FORM^358I^4^4
	;;^UTILITY(U,$J,358,1,0)
	;;=DEFAULTS^1^selection list defaults - DO NOT DELETE^1^0^1^1^^133^80^5^1^^1^p^1^2.1
	;;^UTILITY(U,$J,358,2,0)
	;;=AMBULATORY SURGERY SAMPLE V2.1^2^scannable form for ambulatory surgery^1^0^1^1^^133^80^2^1^^1^p^1^2.1
	;;^UTILITY(U,$J,358,2,2,0)
	;;=^358.02I^2^2
	;;^UTILITY(U,$J,358,2,2,1,0)
	;;=1^1
	;;^UTILITY(U,$J,358,2,2,2,0)
	;;=2^1
	;;^UTILITY(U,$J,358,3,0)
	;;=EMERGENCY SERVICES SAMPLE V2.1^2^scannable form for primary care^1^0^1^1^^133^80^2^1^^1^p^1^2.1
	;;^UTILITY(U,$J,358,3,2,0)
	;;=^358.02I^2^2
	;;^UTILITY(U,$J,358,3,2,1,0)
	;;=1^1
	;;^UTILITY(U,$J,358,3,2,2,0)
	;;=2^1
	;;^UTILITY(U,$J,358,4,0)
	;;=PRIMARY CARE SAMPLE V2.1^2^scannable form for primary care^1^0^1^1^^133^80^2^1^^1^p^1^2.1
	;;^UTILITY(U,$J,358,4,2,0)
	;;=^358.02I^2^2
	;;^UTILITY(U,$J,358,4,2,1,0)
	;;=1^1
	;;^UTILITY(U,$J,358,4,2,2,0)
	;;=2^1

IBDEI003
IBDEI003	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.1,0,"GL")
	;;=^IBE(358.1,
	;;^DIC("B","IMP/EXP ENCOUNTER FORM BLOCK",358.1)
	;;=
	;;^DIC(358.1,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358.1,"%D",1,0)
	;;= 
	;;^DIC(358.1,"%D",2,0)
	;;=This file is nearly identical to file #357.1. It is used by the
	;;^DIC(358.1,"%D",3,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.1,"%D",4,0)
	;;=that is being imported or exported.
	;;^DD(358.1,0)
	;;=FIELD^^1^12
	;;^DD(358.1,0,"DT")
	;;=2930806
	;;^DD(358.1,0,"ID",.02)
	;;=W ""
	;;^DD(358.1,0,"IX","B",358.1,.01)
	;;=
	;;^DD(358.1,0,"IX","C",358.1,.02)
	;;=
	;;^DD(358.1,0,"IX","D",358.1,.14)
	;;=
	;;^DD(358.1,0,"NM","IMP/EXP ENCOUNTER FORM BLOCK")
	;;=
	;;^DD(358.1,0,"PT",358.2,.02)
	;;=
	;;^DD(358.1,0,"PT",358.5,.02)
	;;=
	;;^DD(358.1,0,"PT",358.7,.06)
	;;=
	;;^DD(358.1,0,"PT",358.8,.02)
	;;=
	;;^DD(358.1,0,"PT",358.93,.08)
	;;=
	;;^DD(358.1,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.1,.01,1,0)
	;;=^.1
	;;^DD(358.1,.01,1,1,0)
	;;=358.1^B
	;;^DD(358.1,.01,1,1,1)
	;;=S ^IBE(358.1,"B",$E(X,1,30),DA)=""
	;;^DD(358.1,.01,1,1,2)
	;;=K ^IBE(358.1,"B",$E(X,1,30),DA)
	;;^DD(358.1,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.1,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.1,.01,21,1,0)
	;;= 
	;;^DD(358.1,.01,21,2,0)
	;;=The name of the block.
	;;^DD(358.1,.01,"DEL",1,0)
	;;=I '$G(IBLISTPR) W "...Encounter Form Blocks can only be deleted through the Encounter Form Utilities!"

IBDEI004
IBDEI004	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.1)
	;;=^IBE(358.1,
	;;^UTILITY(U,$J,358.1,0)
	;;=IMP/EXP ENCOUNTER FORM BLOCK^358.1I^84^84
	;;^UTILITY(U,$J,358.1,1,0)
	;;=ALLERGIES^1^^27^0^71^14^^^1^******  PATIENT ALLERGIES  ******^CR^List of allergies^0
	;;^UTILITY(U,$J,358.1,2,0)
	;;=INSURANCE-ACTIVE,INACTIVE^1^^59^0^52^8^^^1^^CR^ALL INSURANCE PLOLICIES^0
	;;^UTILITY(U,$J,358.1,3,0)
	;;=INSURANCE-INCLUDES NONPAYING^1^^67^0^52^8^^^1^^^INSURANCE - ACTIVE, INACTIVE, NONPAYING^0
	;;^UTILITY(U,$J,358.1,4,0)
	;;=SERVICE CONNECTED CONDITIONS^1^^41^0^53^10^^^1^^BUC^Service Connected Conditions^0
	;;^UTILITY(U,$J,358.1,5,0)
	;;=FUTURE APPTS - ALL^1^^81^0^50^6^^^1^^UC^Data fields - list of patient's future appointments^0
	;;^UTILITY(U,$J,358.1,6,0)
	;;=FUTURE APPOINTMENTS - SAME DAY^1^^87^0^50^7^^^1^TODAY'S LATTER APPOINTMENTS^CR^Data fields - appointments for latter in the same day^0
	;;^UTILITY(U,$J,358.1,7,0)
	;;=FUTURE APPTS - SAME CLINIC^1^^94^0^50^7^^^1^CLINIC'S FUTURE APPOINTMENTS^CR^Data fields - future appointments for the same clinic^0
	;;^UTILITY(U,$J,358.1,8,0)
	;;=CLINIC COMMON PROBLEM LIST^1^^101^0^132^14^^^1^CLINIC COMMON PROBLEM LIST^CR^Clinic's common problems^
	;;^UTILITY(U,$J,358.1,9,0)
	;;=ACTIVE PROBLEMS^1^^130^0^59^18^^^1^ACTIVE PROBLEM LIST^CR^Patient's active problems^
	;;^UTILITY(U,$J,358.1,10,0)
	;;=PROVIDER^1^^0^0^38^12^^^1^PROVIDER^RC^Selection list of clinic's providers.^0
	;;^UTILITY(U,$J,358.1,11,0)
	;;=VISIT TYPE^1^^150^0^117^9^^^1^TYPE OF VISIT^CR^Visit types^0
	;;^UTILITY(U,$J,358.1,12,0)
	;;=PATIENT EDUCATION^1^^161^0^81^10^^^1^PATIENT EDUCATION^CR^Patient education topics^
	;;^UTILITY(U,$J,358.1,13,0)
	;;=PATIENT IMMUNIZATIONS^1^^171^0^32^11^^^1^IMMUNIZATIONS^CR^Patient immunizations^0
	;;^UTILITY(U,$J,358.1,14,0)
	;;=PATIENT TREATMENTS^1^^192^0^40^10^^^1^TREATMENTS^CR^Patient treatments^
	;;^UTILITY(U,$J,358.1,15,0)
	;;=PATIENT HEALTH FACTORS^1^^302^0^55^10^^^1^HEALTH FACTORS^CR^Patient health factors^
	;;^UTILITY(U,$J,358.1,16,0)
	;;=PATIENT EXAMINATIONS^1^^182^0^50^10^^^1^EXAMINATIONS^CR^Patient examinations^
	;;^UTILITY(U,$J,358.1,17,0)
	;;=APPOINTMENT CHECKOUT^1^^1^39^35^11^^^1^CHECKOUT^CR^Appointment checkout^
	;;^UTILITY(U,$J,358.1,18,0)
	;;=INSURANCE-ACTIVE ONLY^1^^51^0^52^8^^^1^^CR^Active Insurance Policies^0
	;;^UTILITY(U,$J,358.1,19,0)
	;;=DIAGNOSIS^1^^115^0^132^15^^^1^PLEASE CHECK OFF DIAGNOSIS TREATED THIS VISIT^CR^Diagnosis codes^
	;;^UTILITY(U,$J,358.1,20,0)
	;;=CPT-4 PROCEDURES^1^^12^0^132^15^^^1^PLEASE CHECK OFF PROCEDURES PERFORMED THIS VISIT^CR^CPT-4 PROCEDURES^0
	;;^UTILITY(U,$J,358.1,21,0)
	;;=SC CONDITIONS (V2.1)^2^^31^0^90^11^^^1^SERVICE CONNECTED CONDITIONS^RC^SC conditions,indicators, visit classifications^0
	;;^UTILITY(U,$J,358.1,22,0)
	;;=CHECKOUT (V2.1)^2^^31^95^38^11^^^1^CHECKOUT^CR^Appointment checkout^0
	;;^UTILITY(U,$J,358.1,23,0)
	;;=1995 VISIT TYPES (V2.1)^2^^42^0^90^10^^^1^TYPE OF VISIT^CR^1994 visit types^0
	;;^UTILITY(U,$J,358.1,24,0)
	;;=PROVIDER (V2.1)^2^^42^95^38^10^^^1^PROVIDER^RC^Clinic's providers^0
	;;^UTILITY(U,$J,358.1,25,0)
	;;=PROCEDURES (V2.1)^2^^80^0^133^80^^^1^PROCEDURES^CR^Common CPT-4 procedures^0
	;;^UTILITY(U,$J,358.1,26,0)
	;;=APPOINTMENT^2^^5^67^66^5^^^1^APPOINTMENT INFORMATION^RC^Cinic & appt. date/time^0
	;;^UTILITY(U,$J,358.1,27,0)
	;;=FUTURE APPTS (V2.1)^2^^10^67^66^11^^^1^FUTURE APPOINTMENTS^RC^all future appointments^0
	;;^UTILITY(U,$J,358.1,28,0)
	;;=PATIENT INFORMATION (V2.1)^2^^1^0^63^21^^^1^PATIENT INFORMATION^CR^Name,sex,DOB,PID,eligibilty,address,telephone^0
	;;^UTILITY(U,$J,358.1,29,0)
	;;=VITALS (V2.1)^2^^21^0^63^10^^^1^VITALS^RC^Blood pressure and weight^0
	;;^UTILITY(U,$J,358.1,30,0)
	;;=ALLERGIES (V2.1)^2^^21^67^66^10^^^1^******  PATIENT ALLERGIES  ******^CR^Patient's allergies^0
	;;^UTILITY(U,$J,358.1,31,0)
	;;=HEADER^2^^1^89^18^1^^^2
	;;^UTILITY(U,$J,358.1,32,0)
	;;=DIAGNOSES (V2.1)^2^^52^0^133^28^^^1^DIAGNOSIS^CR^Common ICD-9 diagnoses^0
	;;^UTILITY(U,$J,358.1,33,0)
	;;=CHECKOUT (V2.1)^3^^31^95^38^11^^^1^CHECKOUT^CR^Appointment checkout^0
	;;^UTILITY(U,$J,358.1,34,0)
	;;=1995 VISIT TYPES (V2.1)^3^^42^0^90^10^^^1^TYPE OF VISIT^CR^1994 visit types^0
	;;^UTILITY(U,$J,358.1,35,0)
	;;=PROVIDER (V2.1)^3^^42^95^38^10^^^1^PROVIDER^RC^Clinic's providers^0
	;;^UTILITY(U,$J,358.1,36,0)
	;;=APPOINTMENT^3^^5^67^66^5^^^1^APPOINTMENT INFORMATION^RC^Cinic & appt. date/time^0
	;;^UTILITY(U,$J,358.1,37,0)
	;;=FUTURE APPTS (V2.1)^3^^10^67^66^11^^^1^FUTURE APPOINTMENTS^RC^all future appointments^0
	;;^UTILITY(U,$J,358.1,38,0)
	;;=PATIENT INFORMATION (V2.1)^3^^1^0^63^21^^^1^PATIENT INFORMATION^CR^Name,sex,DOB,PID,eligibilty,address,telephone^0

IBDEI005
IBDEI005	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.1,39,0)
	;;=VITALS (V2.1)^3^^21^0^63^10^^^1^VITALS^RC^Blood pressure and weight^0
	;;^UTILITY(U,$J,358.1,40,0)
	;;=ALLERGIES (V2.1)^3^^21^67^66^10^^^1^******  PATIENT ALLERGIES  ******^CR^Patient's allergies^0
	;;^UTILITY(U,$J,358.1,41,0)
	;;=HEADER^3^^1^89^18^1^^^2
	;;^UTILITY(U,$J,358.1,42,0)
	;;=SC CONDITIONS (V2.1)^3^^31^0^90^11^^^1^SERVICE CONNECTED CONDITIONS^RC^SC conditions,indicators, visit classifications^0
	;;^UTILITY(U,$J,358.1,43,0)
	;;=PROCEDURES (V2.1)^3^^52^0^133^28^^^1^PROCEDURES^CR^Common CPT-4 procedures^0
	;;^UTILITY(U,$J,358.1,44,0)
	;;=DIAGNOSES (V2.1)^3^^82^0^133^76^^^1^DIAGNOSIS^CR^Common ICD-9 diagnoses^0
	;;^UTILITY(U,$J,358.1,45,0)
	;;=1995 VISIT TYPES (V2.1)^4^^42^0^90^10^^^1^TYPE OF VISIT^CR^1994 visit types^0
	;;^UTILITY(U,$J,358.1,46,0)
	;;=PROVIDER (V2.1)^4^^42^95^38^10^^^1^PROVIDER^RC^Clinic's providers^0
	;;^UTILITY(U,$J,358.1,47,0)
	;;=PROCEDURES (V2.1)^4^^52^0^133^28^^^1^PROCEDURES^CR^Common CPT-4 procedures^0
	;;^UTILITY(U,$J,358.1,48,0)
	;;=APPOINTMENT^4^^5^67^66^5^^^1^APPOINTMENT INFORMATION^RC^Cinic & appt. date/time^0
	;;^UTILITY(U,$J,358.1,49,0)
	;;=FUTURE APPTS (V2.1)^4^^10^67^66^11^^^1^FUTURE APPOINTMENTS^RC^all future appointments^0
	;;^UTILITY(U,$J,358.1,50,0)
	;;=PATIENT INFORMATION (V2.1)^4^^1^0^63^21^^^1^PATIENT INFORMATION^CR^Name,sex,DOB,PID,eligibilty,address,telephone^0
	;;^UTILITY(U,$J,358.1,51,0)
	;;=VITALS (V2.1)^4^^21^0^63^10^^^1^VITALS^RC^Blood pressure and weight^0
	;;^UTILITY(U,$J,358.1,52,0)
	;;=ALLERGIES (V2.1)^4^^21^67^66^10^^^1^******  PATIENT ALLERGIES  ******^CR^Patient's allergies^0
	;;^UTILITY(U,$J,358.1,53,0)
	;;=HEADER^4^^1^89^12^1^^^2
	;;^UTILITY(U,$J,358.1,54,0)
	;;=CHECKOUT (V2.1)^4^^31^95^38^11^^^1^CHECKOUT^CR^Appointment checkout^0
	;;^UTILITY(U,$J,358.1,55,0)
	;;=DIAGNOSES (V2.1)^4^^80^0^133^80^^^1^DIAGNOSIS^CR^Common ICD-9 diagnoses^0
	;;^UTILITY(U,$J,358.1,56,0)
	;;=SC CONDITIONS (V2.1)^4^^31^0^90^11^^^1^SERVICE CONNECTED CONDITIONS^RC^SC conditions,indicators, visit classifications^0
	;;^UTILITY(U,$J,358.1,57,0)
	;;=1995 VISIT TYPE CODES (V2.1)^^^0^0^132^9^^^1^TYPE OF VISIT^CR^1995 visit types WITH CODES SHOWN^1
	;;^UTILITY(U,$J,358.1,58,0)
	;;=1995 VISIT TYPES (V2.1)^^^9^0^117^9^^^1^TYPE OF VISIT^CR^1995 visit types^1
	;;^UTILITY(U,$J,358.1,59,0)
	;;=ACTIVE INSURANCE (V2.1)^^^22^0^54^9^^^1^ACTIVE INSURANCE POLICIES^CR^Active Insurance Policies^1
	;;^UTILITY(U,$J,358.1,60,0)
	;;=ACTIVE PROBLEMS (V2.1)^^^35^0^59^18^^^1^PATIENT'S ACTIVE PROBLEMS^CR^Patient's active problems^1
	;;^UTILITY(U,$J,358.1,61,0)
	;;=ALLERGIES (V2.1)^^^57^0^60^10^^^1^******  PATIENT ALLERGIES  ******^CR^Patient's allergies^1
	;;^UTILITY(U,$J,358.1,62,0)
	;;=APPOINTMENT (V2.1)^^^71^0^40^5^^^1^APPOINTMENT INFORMATION^RC^Clinic & appt. date/time^1
	;;^UTILITY(U,$J,358.1,63,0)
	;;=CHECKOUT (V2.1)^^^81^0^35^11^^^1^CHECKOUT^CR^Appointment checkout^1
	;;^UTILITY(U,$J,358.1,64,0)
	;;=COMMON PROBLEMS (V2.1)^^^100^0^132^14^^^1^CLINIC COMMON PROBLEM LIST^CR^Common diagnoses from the Clinical Lexicon^1
	;;^UTILITY(U,$J,358.1,65,0)
	;;=DIAGNOSES (V2.1)^^^122^0^132^15^^^1^DIAGNOSIS^CR^Common ICD-9 diagnoses^1
	;;^UTILITY(U,$J,358.1,66,0)
	;;=FUTURE APPTS - ALL (V2.1)^^^141^0^50^7^^^1^FUTURE APPOINTMENTS^CR^All future appointments^1
	;;^UTILITY(U,$J,358.1,67,0)
	;;=FUTURE APPTS - SAME DAY (V2.1)^^^152^0^50^7^^^1^TODAY'S LATTER APPOINTMENTS^CR^Latter appointments same day^1
	;;^UTILITY(U,$J,358.1,68,0)
	;;=FUTURE APPTS IN CLINIC (V2.1)^^^161^0^50^7^^^1^CLINIC'S FUTURE APPOINTMENTS^CR^Clinic's future appointments^1
	;;^UTILITY(U,$J,358.1,69,0)
	;;=HIDDEN CLASSICATIONS (V2.1)^^^172^0^46^2^^^2^^UC^Classifications for visit - not scannable^1
	;;^UTILITY(U,$J,358.1,70,0)
	;;=NEW PROBLEMS (V2.1)^^^183^0^80^12^^^1^OTHER PROBLEMS^CR^Used to add problems to Problem List^1
	;;^UTILITY(U,$J,358.1,71,0)
	;;=PATIENT EDUCATION (V2.1)^^^199^0^81^10^^^1^PATIENT EDUCATION^CR^Patient education topics^1
	;;^UTILITY(U,$J,358.1,72,0)
	;;=PATIENT EXAMINATIONS (V2.1)^^^213^0^50^10^^^1^EXAMINATIONS^CR^Patient examinations^1
	;;^UTILITY(U,$J,358.1,73,0)
	;;=PATIENT HEALTH FACTORS (V2.1)^^^227^0^55^10^^^1^HEALTH FACTORS^CR^Patient health factors^1
	;;^UTILITY(U,$J,358.1,74,0)
	;;=PATIENT IMMUNIZATIONS (V2.1)^^^241^0^32^11^^^1^IMMUNIZATIONS^CR^Patient immunizations^1
	;;^UTILITY(U,$J,358.1,75,0)
	;;=PATIENT INFORMATION (V2.1)^^^0^0^52^18^^^1^^BUC^Name,sex,DOB,PID,eligibilty,address,telephone^1
	;;^UTILITY(U,$J,358.1,76,0)
	;;=PATIENT SKIN TESTS (V2.1)^^^278^0^40^10^^^1^SKIN TESTS^CR^Patient skin tests^1

IBDEI006
IBDEI006	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.1,77,0)
	;;=PATIENT TREATMENTS (V2.1)^^^292^0^40^10^^^1^TREATMENTS^CR^Patient treatments^1
	;;^UTILITY(U,$J,358.1,78,0)
	;;=PHYSICIAN ORDERS (V2.1)^^^321^0^132^12^^^2^Physician's Orders:^^Used to indicate tests,consults,disposition^1
	;;^UTILITY(U,$J,358.1,79,0)
	;;=PROCEDURES (V2.1)^^^342^0^133^10^^^1^PROCEDURES^CR^Common CPT-4 procedures^1
	;;^UTILITY(U,$J,358.1,80,0)
	;;=PROGRESS NOTES (SOAP) V2.1^^^360^0^132^31^^^2^Progress Notes:   (  ) Attached  (  ) See Chart^^Progress notes in SOAP format^1
	;;^UTILITY(U,$J,358.1,81,0)
	;;=PROGRESS NOTES (V2.1)^^^400^0^132^11^^^2^^BUC^Progress notes (unstructured)^1
	;;^UTILITY(U,$J,358.1,82,0)
	;;=PROVIDER (V2.1)^^^999^0^38^12^^^1^PROVIDER^RC^Clinic's providers^1
	;;^UTILITY(U,$J,358.1,83,0)
	;;=SC CONDITIONS (V2.1)^^^511^0^98^11^^^1^SERVICE CONNECTED CONDITIONS^RC^SC conditions,indicators,classifications^1
	;;^UTILITY(U,$J,358.1,84,0)
	;;=VITALS (V2.1)^^^999^0^63^11^^^1^VITALS^CR^Blood pressure and weight^1

IBDEI007
IBDEI007	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.2,0,"GL")
	;;=^IBE(358.2,
	;;^DIC("B","IMP/EXP SELECTION LIST",358.2)
	;;=
	;;^DIC(358.2,"%D",0)
	;;=^^1^1^2940829^^^^
	;;^DIC(358.2,"%D",1,0)
	;;=Used by the import/export utility as a workspace.
	;;^DIC(358.2,"%D",2,0)
	;;= 
	;;^DIC(358.2,"%D",3,0)
	;;= 
	;;^DIC(358.2,"%D",4,0)
	;;= 
	;;^DIC(358.2,"%D",5,0)
	;;= 
	;;^DIC(358.2,"%D",6,0)
	;;= 
	;;^DIC(358.2,"%D",7,0)
	;;= 
	;;^DIC(358.2,"%D",8,0)
	;;=This file is nearly identical to file #357.2 . It is used by the
	;;^DIC(358.2,"%D",9,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.2,"%D",10,0)
	;;=that is being imported or exported.
	;;^DIC(358.2,"%D",11,0)
	;;=provisions have been made to specify up to 4 columns per list.
	;;^DD(358.2,0)
	;;=FIELD^^.18^18
	;;^DD(358.2,0,"DDA")
	;;=N
	;;^DD(358.2,0,"DT")
	;;=2960123
	;;^DD(358.2,0,"ID",.02)
	;;=W ""
	;;^DD(358.2,0,"ID",.11)
	;;=W ""
	;;^DD(358.2,0,"IX","B",358.2,.01)
	;;=
	;;^DD(358.2,0,"IX","C",358.2,.02)
	;;=
	;;^DD(358.2,0,"NM","IMP/EXP SELECTION LIST")
	;;=
	;;^DD(358.2,0,"PT",358.3,.03)
	;;=
	;;^DD(358.2,0,"PT",358.4,.03)
	;;=
	;;^DD(358.2,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.2,.01,1,0)
	;;=^.1
	;;^DD(358.2,.01,1,1,0)
	;;=358.2^B
	;;^DD(358.2,.01,1,1,1)
	;;=S ^IBE(358.2,"B",$E(X,1,30),DA)=""
	;;^DD(358.2,.01,1,1,2)
	;;=K ^IBE(358.2,"B",$E(X,1,30),DA)
	;;^DD(358.2,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.2,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.01,21,1,0)
	;;= 
	;;^DD(358.2,.01,21,2,0)
	;;=The name of the list.
	;;^DD(358.2,.01,"DEL",1,0)
	;;=I '$G(IBLISTPR) W "...Selection Lists can only be deleted through the Encounter Form Utilities!"
	;;^DD(358.2,.01,"DT")
	;;=2921119

IBDEI008
IBDEI008	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.2)
	;;=^IBE(358.2,
	;;^UTILITY(U,$J,358.2,0)
	;;=IMP/EXP SELECTION LIST^358.2I^69^69
	;;^UTILITY(U,$J,358.2,1,0)
	;;=ALLERGIES^1^^^^^2^0^^^1^0^1^1^1^^3
	;;^UTILITY(U,$J,358.2,1,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,1,1,1,0)
	;;=1^2^1
	;;^UTILITY(U,$J,358.2,1,2,0)
	;;=^358.22I^3^3
	;;^UTILITY(U,$J,358.2,1,2,1,0)
	;;=1^^40^1^1
	;;^UTILITY(U,$J,358.2,1,2,2,0)
	;;=2^TYPE^5^1^2
	;;^UTILITY(U,$J,358.2,1,2,3,0)
	;;=3^VERIFIED^8^1^4
	;;^UTILITY(U,$J,358.2,2,0)
	;;=ACTIVE AND INACTIVE INSURANCE^2^^^INSURANCE - ACTIVE AND INACTIVE^SC^2^0^^^2^0^1^1^0
	;;^UTILITY(U,$J,358.2,2,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,2,1,1,0)
	;;=1^1^1^6
	;;^UTILITY(U,$J,358.2,2,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,2,2,1,0)
	;;=1^^28^1^1
	;;^UTILITY(U,$J,358.2,2,2,2,0)
	;;=2^^20^1^3
	;;^UTILITY(U,$J,358.2,3,0)
	;;=INSURANCE^3^^^INSURANCE - PAYING AND NON-PAYING^CS^2^0^^^3^0^1^1^0
	;;^UTILITY(U,$J,358.2,3,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,3,1,1,0)
	;;=1^1^1^6
	;;^UTILITY(U,$J,358.2,3,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,3,2,1,0)
	;;=1^^28^1^1
	;;^UTILITY(U,$J,358.2,3,2,2,0)
	;;=2^^20^1^3
	;;^UTILITY(U,$J,358.2,4,0)
	;;=SC CONDITIONS^4^^^SERVICE CONNECTED CONDITIONS^RC^2^0^^^4^0^1^1^1
	;;^UTILITY(U,$J,358.2,4,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,4,1,1,0)
	;;=1^1^0^8
	;;^UTILITY(U,$J,358.2,4,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,4,2,1,0)
	;;=1^^45^1^1
	;;^UTILITY(U,$J,358.2,4,2,2,0)
	;;=2^^4^1^3
	;;^UTILITY(U,$J,358.2,5,0)
	;;=FUTURE APPOINTMENTS - ALL^5^^^FUTURE APPOINTMENTS - ALL^SC^2^0^^^5^0^1^1^1
	;;^UTILITY(U,$J,358.2,5,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,5,1,1,0)
	;;=1^1^1^4
	;;^UTILITY(U,$J,358.2,5,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,5,2,1,0)
	;;=1^^29^1^4
	;;^UTILITY(U,$J,358.2,5,2,2,0)
	;;=2^^17^1^3
	;;^UTILITY(U,$J,358.2,6,0)
	;;=TODAY'S LATTER APPOINTMENTS^6^^^^^2^0^^^6^0^1^1^1
	;;^UTILITY(U,$J,358.2,6,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,6,1,1,0)
	;;=1^2^1^4
	;;^UTILITY(U,$J,358.2,6,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,6,2,1,0)
	;;=1^^28^1^4
	;;^UTILITY(U,$J,358.2,6,2,2,0)
	;;=2^^17^1^3
	;;^UTILITY(U,$J,358.2,7,0)
	;;=CLINIC'S FUTURE APPOINTMENTS^7^^^^^2^0^^^7^0^1^1^1
	;;^UTILITY(U,$J,358.2,7,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,7,1,1,0)
	;;=1^2^1^4
	;;^UTILITY(U,$J,358.2,7,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,7,2,1,0)
	;;=1^^28^1^4
	;;^UTILITY(U,$J,358.2,7,2,2,0)
	;;=2^^17^1^3
	;;^UTILITY(U,$J,358.2,8,0)
	;;=COMMON PROBLEMS^8^^^^^3^0^CS^^8^0^^0^^1^1
	;;^UTILITY(U,$J,358.2,8,2,0)
	;;=^358.22I^6^6
	;;^UTILITY(U,$J,358.2,8,2,1,0)
	;;=1^P^^2^^1^^1^1
	;;^UTILITY(U,$J,358.2,8,2,2,0)
	;;=2^S^^2^^1^^1^2
	;;^UTILITY(U,$J,358.2,8,2,3,0)
	;;=3^PROBLEM NARRATIVE/NOTES^40^1^2^^1
	;;^UTILITY(U,$J,358.2,8,2,4,0)
	;;=4^ICD-9^7^1^3^^0
	;;^UTILITY(U,$J,358.2,8,2,5,0)
	;;=5^S/C^^2^^1^^1^
	;;^UTILITY(U,$J,358.2,8,2,6,0)
	;;=6^ADD^^2^^1^^1^
	;;^UTILITY(U,$J,358.2,9,0)
	;;=ACTIVE PROBLEMS^9^^^^^3^1^^^10^1^^1^1^0
	;;^UTILITY(U,$J,358.2,9,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,9,1,1,0)
	;;=2^^67
	;;^UTILITY(U,$J,358.2,9,2,0)
	;;=^358.22I^6^5
	;;^UTILITY(U,$J,358.2,9,2,1,0)
	;;=1^P^^2^^1^^1^1
	;;^UTILITY(U,$J,358.2,9,2,2,0)
	;;=2^S^^2^^1^^1^2
	;;^UTILITY(U,$J,358.2,9,2,3,0)
	;;=3^PROBLEM NARRATIVE/NOTES^26^1^2
	;;^UTILITY(U,$J,358.2,9,2,5,0)
	;;=5^S/C^3^1^5
	;;^UTILITY(U,$J,358.2,9,2,6,0)
	;;=6^DATE RESOLVED^^2^^2^^0
	;;^UTILITY(U,$J,358.2,10,0)
	;;=PROVIDER^10^^^^^2^0^RC^^12^0^1^1^0^0
	;;^UTILITY(U,$J,358.2,10,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,10,1,1,0)
	;;=1^^1^10
	;;^UTILITY(U,$J,358.2,10,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,10,2,1,0)
	;;=3^^25^1^2
	;;^UTILITY(U,$J,358.2,10,2,2,0)
	;;=2^^^2^^1^^1^1^2
	;;^UTILITY(U,$J,358.2,11,0)
	;;=VISIT TYPE^11^^^^^4^0^CS^^14^0^^0^^0^3^2
	;;^UTILITY(U,$J,358.2,11,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,11,1,1,0)
	;;=1^2^^
	;;^UTILITY(U,$J,358.2,11,2,0)
	;;=^358.22I^3^2
	;;^UTILITY(U,$J,358.2,11,2,1,0)
	;;=1^^29^1^2^^1
	;;^UTILITY(U,$J,358.2,11,2,3,0)
	;;=3^^^2^^1^^1^^1
	;;^UTILITY(U,$J,358.2,12,0)
	;;=PATIENT EDUCATION^12^^^^^4^0^CS^^16^0^^0^^0
	;;^UTILITY(U,$J,358.2,12,2,0)
	;;=^358.22I^6^6
	;;^UTILITY(U,$J,358.2,12,2,1,0)
	;;=1^^40^1^2^^1
	;;^UTILITY(U,$J,358.2,12,2,2,0)
	;;=2^POOR^^2^^1^^1^10^0
	;;^UTILITY(U,$J,358.2,12,2,3,0)
	;;=3^FAIR^^2^^1^^1^11^0
	;;^UTILITY(U,$J,358.2,12,2,4,0)
	;;=4^GOOD^^2^^1^^1^12^0
	;;^UTILITY(U,$J,358.2,12,2,5,0)
	;;=5^N/A^^2^^1^^1^13^0
	;;^UTILITY(U,$J,358.2,12,2,6,0)
	;;=6^REFUSED^^2^^1^^1^14^0
	;;^UTILITY(U,$J,358.2,13,0)
	;;=IMMUNIZATIONS^13^^^^^4^1^CS^^18^1^^0^^0
	;;^UTILITY(U,$J,358.2,13,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,13,2,1,0)
	;;=2^x^22^2^2^1^1^1^^0

IBDEI009
IBDEI009	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.2,13,2,2,0)
	;;=1^^22^1^2^^1
	;;^UTILITY(U,$J,358.2,14,0)
	;;=PATIENT TREATMENTS^14^^^^^4^0^CSU^^20^0^^0
	;;^UTILITY(U,$J,358.2,14,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,14,2,1,0)
	;;=1^^30^1^2^^1
	;;^UTILITY(U,$J,358.2,14,2,2,0)
	;;=2^^^2^^1^^1
	;;^UTILITY(U,$J,358.2,15,0)
	;;=HEALTH FACTORS^15^^^^^4^0^CSU^^21^0^^0^^0
	;;^UTILITY(U,$J,358.2,15,2,0)
	;;=^358.22I^5^4
	;;^UTILITY(U,$J,358.2,15,2,1,0)
	;;=1^^30^1^2^^1
	;;^UTILITY(U,$J,358.2,15,2,3,0)
	;;=3^SEVERE^^2^^1^^1^17^0
	;;^UTILITY(U,$J,358.2,15,2,4,0)
	;;=5^MIN^^2^^1^^1^15^0
	;;^UTILITY(U,$J,358.2,15,2,5,0)
	;;=4^MOD^^2^^1^^1^16^0
	;;^UTILITY(U,$J,358.2,16,0)
	;;=PATIENT EXAMINATIONS^16^^^^^4^0^CSU^^23^0^^0^^0
	;;^UTILITY(U,$J,358.2,16,2,0)
	;;=^358.22I^4^3
	;;^UTILITY(U,$J,358.2,16,2,1,0)
	;;=1^^30^1^2^^1
	;;^UTILITY(U,$J,358.2,16,2,3,0)
	;;=3^ABNORM^^2^^1^^1^18^0
	;;^UTILITY(U,$J,358.2,16,2,4,0)
	;;=2^NORM^^2^^1^^1^19^0
	;;^UTILITY(U,$J,358.2,17,0)
	;;=APPOINTMENT DISPOSITION^17^^^^^2^0^CSU^^25^0^^0
	;;^UTILITY(U,$J,358.2,17,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,17,2,1,0)
	;;=1^^12^1^2^^1
	;;^UTILITY(U,$J,358.2,17,2,2,0)
	;;=2^^^2^^1^^1
	;;^UTILITY(U,$J,358.2,18,0)
	;;=INSURANCE POLIICIES^18^^^ACTIVE INSURANCE POLICIES^SC^2^0^^^27^0^1^1^0^0
	;;^UTILITY(U,$J,358.2,18,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,18,1,1,0)
	;;=1^1^1^6
	;;^UTILITY(U,$J,358.2,18,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,18,2,1,0)
	;;=1^^28^1^1
	;;^UTILITY(U,$J,358.2,18,2,2,0)
	;;=2^^20^1^3
	;;^UTILITY(U,$J,358.2,19,0)
	;;=DIAGNOSES^19^^^^^4^0^SC^^28^0^^0^^1^3^2
	;;^UTILITY(U,$J,358.2,19,1,0)
	;;=^358.21I^2^2
	;;^UTILITY(U,$J,358.2,19,1,1,0)
	;;=1^2^^8
	;;^UTILITY(U,$J,358.2,19,1,2,0)
	;;=2^^^8
	;;^UTILITY(U,$J,358.2,19,2,0)
	;;=^358.22I^5^5
	;;^UTILITY(U,$J,358.2,19,2,1,0)
	;;=4^CODE^7^1^1^^0
	;;^UTILITY(U,$J,358.2,19,2,2,0)
	;;=3^DIAGNOSIS^34^1^2^^1
	;;^UTILITY(U,$J,358.2,19,2,3,0)
	;;=5^ADD^^2^^1^^1^7^0
	;;^UTILITY(U,$J,358.2,19,2,4,0)
	;;=1^P^^2^^1^^1^1^1
	;;^UTILITY(U,$J,358.2,19,2,5,0)
	;;=2^S^^2^^1^^1^2^0
	;;^UTILITY(U,$J,358.2,20,0)
	;;=CPT CODES^20^^^^^4^0^SC^^30^0^^0^^1^3^2
	;;^UTILITY(U,$J,358.2,20,2,0)
	;;=^358.22I^3^3
	;;^UTILITY(U,$J,358.2,20,2,1,0)
	;;=1^ ^5^1^1^^0
	;;^UTILITY(U,$J,358.2,20,2,2,0)
	;;=2^ ^26^1^2^^1
	;;^UTILITY(U,$J,358.2,20,2,3,0)
	;;=3^ ^^2^^1^^1^^0
	;;^UTILITY(U,$J,358.2,21,0)
	;;=SC CONDITIONS^21^^^^RC^2^0^^^4^0^^1^1
	;;^UTILITY(U,$J,358.2,21,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,21,1,1,0)
	;;=1^4^1^4
	;;^UTILITY(U,$J,358.2,21,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,21,2,1,0)
	;;=2^ ^40^1^1
	;;^UTILITY(U,$J,358.2,21,2,2,0)
	;;=1^ ^4^1^3
	;;^UTILITY(U,$J,358.2,22,0)
	;;=APPOINTMENT DISPOSITION^22^^^^^2^0^CSU^^25^0^^0
	;;^UTILITY(U,$J,358.2,22,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,22,2,1,0)
	;;=1^^12^1^2^^1
	;;^UTILITY(U,$J,358.2,22,2,2,0)
	;;=2^^^2^^1^^1
	;;^UTILITY(U,$J,358.2,23,0)
	;;=VISIT TYPE^23^^^^^4^0^C^^14^0^^0^^0^3^2
	;;^UTILITY(U,$J,358.2,23,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,23,1,1,0)
	;;=1^3^0^6
	;;^UTILITY(U,$J,358.2,23,2,0)
	;;=^358.22I^3^2
	;;^UTILITY(U,$J,358.2,23,2,1,0)
	;;=1^^20^1^2^^1
	;;^UTILITY(U,$J,358.2,23,2,3,0)
	;;=3^^^2^^1^^1^^1
	;;^UTILITY(U,$J,358.2,24,0)
	;;=PROVIDER^24^^^^^2^0^RC^^12^0^^1^0^0
	;;^UTILITY(U,$J,358.2,24,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,24,1,1,0)
	;;=1^^1
	;;^UTILITY(U,$J,358.2,24,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,24,2,1,0)
	;;=3^^25^1^2
	;;^UTILITY(U,$J,358.2,24,2,2,0)
	;;=2^P^^2^^1^^1^1^2
	;;^UTILITY(U,$J,358.2,25,0)
	;;=CPT CODES^25^^^^^1^0^SC^^30^0^^0^^1^3^2
	;;^UTILITY(U,$J,358.2,25,1,0)
	;;=^358.21I^3^3
	;;^UTILITY(U,$J,358.2,25,1,1,0)
	;;=1^2^2
	;;^UTILITY(U,$J,358.2,25,1,2,0)
	;;=3^^91
	;;^UTILITY(U,$J,358.2,25,1,3,0)
	;;=2^^47
	;;^UTILITY(U,$J,358.2,25,2,0)
	;;=^358.22I^3^3
	;;^UTILITY(U,$J,358.2,25,2,1,0)
	;;=3^ ^5^1^1^^0
	;;^UTILITY(U,$J,358.2,25,2,2,0)
	;;=2^ ^31^1^2^^1
	;;^UTILITY(U,$J,358.2,25,2,3,0)
	;;=1^ ^^2^^1^^1^^0
	;;^UTILITY(U,$J,358.2,26,0)
	;;=FUTURE APPOINTMENTS - ALL^27^^^^SC^2^0^^^5^0^1^1^1
	;;^UTILITY(U,$J,358.2,26,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,26,1,1,0)
	;;=1^2^5^
	;;^UTILITY(U,$J,358.2,26,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,26,2,1,0)
	;;=1^ ^35^1^4
	;;^UTILITY(U,$J,358.2,26,2,2,0)
	;;=2^ ^17^1^3
	;;^UTILITY(U,$J,358.2,27,0)
	;;=INSURANCE POLIICIES^28^^^ACTIVE INSURANCE POLICIES^SC^2^0^^^27^0^1^1^0^0
	;;^UTILITY(U,$J,358.2,27,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,27,1,1,0)
	;;=1^12^1^4
	;;^UTILITY(U,$J,358.2,27,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,27,2,1,0)
	;;=1^ ^35^1^1
	;;^UTILITY(U,$J,358.2,27,2,2,0)
	;;=2^ ^24^1^3
	;;^UTILITY(U,$J,358.2,28,0)
	;;=ALLERGIES^30^^^^^2^0^^^1^0^1^1^1^^3

IBDEI00A
IBDEI00A	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.2,28,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,28,1,1,0)
	;;=1^2^1
	;;^UTILITY(U,$J,358.2,28,2,0)
	;;=^358.22I^3^3
	;;^UTILITY(U,$J,358.2,28,2,1,0)
	;;=1^^40^1^1
	;;^UTILITY(U,$J,358.2,28,2,2,0)
	;;=2^TYPE^5^1^2
	;;^UTILITY(U,$J,358.2,28,2,3,0)
	;;=3^VERIFIED^8^1^4
	;;^UTILITY(U,$J,358.2,29,0)
	;;=DIAGNOSES^32^^^^^2^0^SC^^28^0^^0^^2^3^2
	;;^UTILITY(U,$J,358.2,29,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,29,1,1,0)
	;;=2^^67
	;;^UTILITY(U,$J,358.2,29,2,0)
	;;=^358.22I^5^5
	;;^UTILITY(U,$J,358.2,29,2,1,0)
	;;=4^CODE^7^1^1^^0
	;;^UTILITY(U,$J,358.2,29,2,2,0)
	;;=3^DIAGNOSIS^34^1^2^^1
	;;^UTILITY(U,$J,358.2,29,2,3,0)
	;;=5^ADD^^2^^1^^1^7^0
	;;^UTILITY(U,$J,358.2,29,2,4,0)
	;;=1^P^^2^^1^^1^1^1
	;;^UTILITY(U,$J,358.2,29,2,5,0)
	;;=2^S^^2^^1^^1^2^0
	;;^UTILITY(U,$J,358.2,30,0)
	;;=APPOINTMENT DISPOSITION^33^^^^^2^0^CSU^^25^0^^0
	;;^UTILITY(U,$J,358.2,30,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,30,2,1,0)
	;;=1^^12^1^2^^1
	;;^UTILITY(U,$J,358.2,30,2,2,0)
	;;=2^^^2^^1^^1
	;;^UTILITY(U,$J,358.2,31,0)
	;;=VISIT TYPE^34^^^^^4^0^C^^14^0^^0^^0^3^2
	;;^UTILITY(U,$J,358.2,31,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,31,1,1,0)
	;;=1^3^0^6
	;;^UTILITY(U,$J,358.2,31,2,0)
	;;=^358.22I^3^2
	;;^UTILITY(U,$J,358.2,31,2,1,0)
	;;=1^^20^1^2^^1
	;;^UTILITY(U,$J,358.2,31,2,3,0)
	;;=3^ ^^2^^1^^1^^1
	;;^UTILITY(U,$J,358.2,32,0)
	;;=PROVIDER^35^^^^^2^0^RC^^12^0^^1^0^0
	;;^UTILITY(U,$J,358.2,32,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,32,1,1,0)
	;;=1^^1
	;;^UTILITY(U,$J,358.2,32,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,32,2,1,0)
	;;=3^^25^1^2
	;;^UTILITY(U,$J,358.2,32,2,2,0)
	;;=2^P^^2^^1^^1^1^2
	;;^UTILITY(U,$J,358.2,33,0)
	;;=FUTURE APPOINTMENTS - ALL^37^^^^SC^2^0^^^5^0^1^1^1
	;;^UTILITY(U,$J,358.2,33,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,33,1,1,0)
	;;=1^2^5^
	;;^UTILITY(U,$J,358.2,33,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,33,2,1,0)
	;;=1^ ^35^1^4
	;;^UTILITY(U,$J,358.2,33,2,2,0)
	;;=2^ ^17^1^3
	;;^UTILITY(U,$J,358.2,34,0)
	;;=INSURANCE POLIICIES^38^^^ACTIVE INSURANCE POLICIES^SC^2^0^^^27^0^1^1^0^0
	;;^UTILITY(U,$J,358.2,34,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,34,1,1,0)
	;;=1^12^1^4
	;;^UTILITY(U,$J,358.2,34,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,34,2,1,0)
	;;=1^ ^35^1^1
	;;^UTILITY(U,$J,358.2,34,2,2,0)
	;;=2^ ^24^1^3
	;;^UTILITY(U,$J,358.2,35,0)
	;;=ALLERGIES^40^^^^^2^0^^^1^0^1^1^1^^3
	;;^UTILITY(U,$J,358.2,35,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,35,1,1,0)
	;;=1^2^1
	;;^UTILITY(U,$J,358.2,35,2,0)
	;;=^358.22I^3^3
	;;^UTILITY(U,$J,358.2,35,2,1,0)
	;;=1^^40^1^1
	;;^UTILITY(U,$J,358.2,35,2,2,0)
	;;=2^TYPE^5^1^2
	;;^UTILITY(U,$J,358.2,35,2,3,0)
	;;=3^VERIFIED^8^1^4
	;;^UTILITY(U,$J,358.2,36,0)
	;;=SC CONDITIONS^42^^^^RC^2^0^^^4^0^^1^1
	;;^UTILITY(U,$J,358.2,36,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,36,1,1,0)
	;;=1^4^1^4
	;;^UTILITY(U,$J,358.2,36,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,36,2,1,0)
	;;=2^ ^40^1^1
	;;^UTILITY(U,$J,358.2,36,2,2,0)
	;;=1^ ^4^1^3
	;;^UTILITY(U,$J,358.2,37,0)
	;;=CPT CODES^43^^^^^1^0^CSU^^30^0^^0^^2^3^2
	;;^UTILITY(U,$J,358.2,37,1,0)
	;;=^358.21I^3^3
	;;^UTILITY(U,$J,358.2,37,1,1,0)
	;;=1^2^2
	;;^UTILITY(U,$J,358.2,37,1,2,0)
	;;=3^^91
	;;^UTILITY(U,$J,358.2,37,1,3,0)
	;;=2^^47
	;;^UTILITY(U,$J,358.2,37,2,0)
	;;=^358.22I^3^3
	;;^UTILITY(U,$J,358.2,37,2,1,0)
	;;=3^ ^5^1^1^^0
	;;^UTILITY(U,$J,358.2,37,2,2,0)
	;;=2^ ^31^1^2^^1
	;;^UTILITY(U,$J,358.2,37,2,3,0)
	;;=1^ ^^2^^1^^1^^0
	;;^UTILITY(U,$J,358.2,38,0)
	;;=DIAGNOSES^44^^^^^2^0^SC^^28^0^^0^^2^3^2
	;;^UTILITY(U,$J,358.2,38,1,0)
	;;=^358.21I^3^3
	;;^UTILITY(U,$J,358.2,38,1,1,0)
	;;=1^2^2
	;;^UTILITY(U,$J,358.2,38,1,2,0)
	;;=2^^46
	;;^UTILITY(U,$J,358.2,38,1,3,0)
	;;=3^^90
	;;^UTILITY(U,$J,358.2,38,2,0)
	;;=^358.22I^4^3
	;;^UTILITY(U,$J,358.2,38,2,1,0)
	;;=4^ ^7^1^1^^0
	;;^UTILITY(U,$J,358.2,38,2,2,0)
	;;=3^ ^27^1^2^^1
	;;^UTILITY(U,$J,358.2,38,2,4,0)
	;;=1^ ^^2^^1^^1^1^
	;;^UTILITY(U,$J,358.2,39,0)
	;;=VISIT TYPE^45^^^^^4^0^C^^14^0^^0^^0^3^2
	;;^UTILITY(U,$J,358.2,39,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,39,1,1,0)
	;;=1^3^0^6
	;;^UTILITY(U,$J,358.2,39,2,0)
	;;=^358.22I^3^2
	;;^UTILITY(U,$J,358.2,39,2,1,0)
	;;=1^^20^1^2^^1
	;;^UTILITY(U,$J,358.2,39,2,3,0)
	;;=3^^^2^^1^^1^^1
	;;^UTILITY(U,$J,358.2,40,0)
	;;=PROVIDER^46^^^^^2^0^RC^^12^0^^1^0^0
	;;^UTILITY(U,$J,358.2,40,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,40,1,1,0)
	;;=1^^1
	;;^UTILITY(U,$J,358.2,40,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,40,2,1,0)
	;;=3^^25^1^2
	;;^UTILITY(U,$J,358.2,40,2,2,0)
	;;=2^P^^2^^1^^1^1^2
	;;^UTILITY(U,$J,358.2,41,0)
	;;=CPT CODES^47^^^^^1^0^^^30^0^^0^^3^3^2
	;;^UTILITY(U,$J,358.2,41,1,0)
	;;=^358.21I^3^3
	;;^UTILITY(U,$J,358.2,41,1,1,0)
	;;=1^2^2

IBDEI00B
IBDEI00B	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.2,41,1,2,0)
	;;=3^^91
	;;^UTILITY(U,$J,358.2,41,1,3,0)
	;;=2^^47
	;;^UTILITY(U,$J,358.2,41,2,0)
	;;=^358.22I^3^3
	;;^UTILITY(U,$J,358.2,41,2,1,0)
	;;=3^ ^5^1^1^^0
	;;^UTILITY(U,$J,358.2,41,2,2,0)
	;;=2^ ^31^1^2^^1
	;;^UTILITY(U,$J,358.2,41,2,3,0)
	;;=1^ ^^2^^1^^1^^0
	;;^UTILITY(U,$J,358.2,42,0)
	;;=FUTURE APPOINTMENTS - ALL^49^^^^SC^2^0^^^5^0^1^1^1
	;;^UTILITY(U,$J,358.2,42,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,42,1,1,0)
	;;=1^2^5^
	;;^UTILITY(U,$J,358.2,42,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,42,2,1,0)
	;;=1^ ^35^1^4
	;;^UTILITY(U,$J,358.2,42,2,2,0)
	;;=2^ ^17^1^3
	;;^UTILITY(U,$J,358.2,43,0)
	;;=INSURANCE POLIICIES^50^^^ACTIVE INSURANCE POLICIES^SC^2^0^^^27^0^1^1^0^0
	;;^UTILITY(U,$J,358.2,43,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,43,1,1,0)
	;;=1^12^1^4
	;;^UTILITY(U,$J,358.2,43,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,43,2,1,0)
	;;=1^ ^35^1^1
	;;^UTILITY(U,$J,358.2,43,2,2,0)
	;;=2^ ^24^1^3
	;;^UTILITY(U,$J,358.2,44,0)
	;;=ALLERGIES^52^^^^^2^0^^^1^0^1^1^1^^3
	;;^UTILITY(U,$J,358.2,44,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,44,1,1,0)
	;;=1^2^1
	;;^UTILITY(U,$J,358.2,44,2,0)
	;;=^358.22I^3^3
	;;^UTILITY(U,$J,358.2,44,2,1,0)
	;;=1^^40^1^1
	;;^UTILITY(U,$J,358.2,44,2,2,0)
	;;=2^TYPE^5^1^2
	;;^UTILITY(U,$J,358.2,44,2,3,0)
	;;=3^VERIFIED^8^1^4
	;;^UTILITY(U,$J,358.2,45,0)
	;;=APPOINTMENT DISPOSITION^54^^^^^2^0^CSU^^25^0^^0
	;;^UTILITY(U,$J,358.2,45,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,45,2,1,0)
	;;=1^^12^1^2^^1
	;;^UTILITY(U,$J,358.2,45,2,2,0)
	;;=2^^^2^^1^^1
	;;^UTILITY(U,$J,358.2,46,0)
	;;=DIAGNOSES^55^^^^^2^0^SC^^28^0^^0^^2^3^2
	;;^UTILITY(U,$J,358.2,46,1,0)
	;;=^358.21I^3^3
	;;^UTILITY(U,$J,358.2,46,1,1,0)
	;;=1^2^2
	;;^UTILITY(U,$J,358.2,46,1,2,0)
	;;=2^^46
	;;^UTILITY(U,$J,358.2,46,1,3,0)
	;;=3^^90
	;;^UTILITY(U,$J,358.2,46,2,0)
	;;=^358.22I^4^3
	;;^UTILITY(U,$J,358.2,46,2,1,0)
	;;=4^ ^7^1^1^^0
	;;^UTILITY(U,$J,358.2,46,2,2,0)
	;;=3^ ^27^1^2^^1
	;;^UTILITY(U,$J,358.2,46,2,4,0)
	;;=1^ ^^2^^1^^1^1^0
	;;^UTILITY(U,$J,358.2,47,0)
	;;=SC CONDITIONS^56^^^^RC^2^0^^^4^0^^1^1
	;;^UTILITY(U,$J,358.2,47,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,47,1,1,0)
	;;=1^4^1^4
	;;^UTILITY(U,$J,358.2,47,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,47,2,1,0)
	;;=2^ ^40^1^1
	;;^UTILITY(U,$J,358.2,47,2,2,0)
	;;=1^ ^4^1^3
	;;^UTILITY(U,$J,358.2,48,0)
	;;=VISIT TYPE^57^^^^^2^0^C^^14^0^^0^^0^3^2
	;;^UTILITY(U,$J,358.2,48,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,48,1,1,0)
	;;=1^2^^
	;;^UTILITY(U,$J,358.2,48,2,0)
	;;=^358.22I^4^3
	;;^UTILITY(U,$J,358.2,48,2,1,0)
	;;=1^ ^28^1^2^^1
	;;^UTILITY(U,$J,358.2,48,2,3,0)
	;;=3^^^2^^1^^1^^1
	;;^UTILITY(U,$J,358.2,48,2,4,0)
	;;=2^ ^5^1^1
	;;^UTILITY(U,$J,358.2,49,0)
	;;=VISIT TYPE^58^^^^^4^0^C^^14^0^^0^^0^3^2
	;;^UTILITY(U,$J,358.2,49,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,49,1,1,0)
	;;=1^2^^
	;;^UTILITY(U,$J,358.2,49,2,0)
	;;=^358.22I^3^2
	;;^UTILITY(U,$J,358.2,49,2,1,0)
	;;=1^^29^1^2^^1
	;;^UTILITY(U,$J,358.2,49,2,3,0)
	;;=3^^^2^^1^^1^^1
	;;^UTILITY(U,$J,358.2,50,0)
	;;=INSURANCE POLIICIES^59^^^^SC^2^0^^^27^0^1^1^0^0
	;;^UTILITY(U,$J,358.2,50,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,50,1,1,0)
	;;=1^2^1^
	;;^UTILITY(U,$J,358.2,50,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,50,2,1,0)
	;;=1^^30^1^1
	;;^UTILITY(U,$J,358.2,50,2,2,0)
	;;=2^^20^1^3
	;;^UTILITY(U,$J,358.2,51,0)
	;;=ACTIVE PROBLEMS^60^^^^^3^1^^^10^1^^1^1^0
	;;^UTILITY(U,$J,358.2,51,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,51,1,1,0)
	;;=2^^67
	;;^UTILITY(U,$J,358.2,51,2,0)
	;;=^358.22I^6^5
	;;^UTILITY(U,$J,358.2,51,2,1,0)
	;;=1^P^^2^^1^^1^1
	;;^UTILITY(U,$J,358.2,51,2,2,0)
	;;=2^S^^2^^1^^1^2
	;;^UTILITY(U,$J,358.2,51,2,3,0)
	;;=3^PROBLEM NARRATIVE/NOTES^26^1^2
	;;^UTILITY(U,$J,358.2,51,2,5,0)
	;;=5^S/C^3^1^5
	;;^UTILITY(U,$J,358.2,51,2,6,0)
	;;=6^DATE RESOLVED^^2^^2^^0
	;;^UTILITY(U,$J,358.2,52,0)
	;;=ALLERGIES^61^^^^^2^0^^^1^0^1^1^1^^3
	;;^UTILITY(U,$J,358.2,52,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,52,1,1,0)
	;;=1^2^1
	;;^UTILITY(U,$J,358.2,52,2,0)
	;;=^358.22I^3^3
	;;^UTILITY(U,$J,358.2,52,2,1,0)
	;;=1^^40^1^1
	;;^UTILITY(U,$J,358.2,52,2,2,0)
	;;=2^TYPE^5^1^2
	;;^UTILITY(U,$J,358.2,52,2,3,0)
	;;=3^VERIFIED^8^1^4
	;;^UTILITY(U,$J,358.2,53,0)
	;;=APPOINTMENT DISPOSITION^63^^^^^2^0^CSU^^25^0^^0
	;;^UTILITY(U,$J,358.2,53,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,53,2,1,0)
	;;=1^^12^1^2^^1
	;;^UTILITY(U,$J,358.2,53,2,2,0)
	;;=2^^^2^^1^^1
	;;^UTILITY(U,$J,358.2,54,0)
	;;=COMMON PROBLEMS^64^^^^^3^0^CS^^8^0^^0^^1^1
	;;^UTILITY(U,$J,358.2,54,2,0)
	;;=^358.22I^6^6
	;;^UTILITY(U,$J,358.2,54,2,1,0)
	;;=1^P^^2^^1^^1^1
	;;^UTILITY(U,$J,358.2,54,2,2,0)
	;;=2^S^^2^^1^^1^2
	;;^UTILITY(U,$J,358.2,54,2,3,0)
	;;=3^PROBLEM NARRATIVE/NOTES^40^1^2^^1

IBDEI00C
IBDEI00C	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.2,54,2,4,0)
	;;=4^ICD-9^7^1^3^^0
	;;^UTILITY(U,$J,358.2,54,2,5,0)
	;;=5^S/C^^2^^1^^1^
	;;^UTILITY(U,$J,358.2,54,2,6,0)
	;;=6^ADD^^2^^1^^1^
	;;^UTILITY(U,$J,358.2,55,0)
	;;=DIAGNOSES^65^^^^^4^0^SC^^28^0^^0^^1^3^2
	;;^UTILITY(U,$J,358.2,55,1,0)
	;;=^358.21I^^0
	;;^UTILITY(U,$J,358.2,55,2,0)
	;;=^358.22I^5^5
	;;^UTILITY(U,$J,358.2,55,2,1,0)
	;;=4^CODE^7^1^1^^0
	;;^UTILITY(U,$J,358.2,55,2,2,0)
	;;=3^DIAGNOSIS^34^1^2^^1
	;;^UTILITY(U,$J,358.2,55,2,3,0)
	;;=5^ADD^^2^^1^^1^7^0
	;;^UTILITY(U,$J,358.2,55,2,4,0)
	;;=1^P^^2^^1^^1^1^1
	;;^UTILITY(U,$J,358.2,55,2,5,0)
	;;=2^S^^2^^1^^1^2^0
	;;^UTILITY(U,$J,358.2,56,0)
	;;=FUTURE APPOINTMENTS - ALL^66^^^^SC^2^0^^^5^0^^1^1
	;;^UTILITY(U,$J,358.2,56,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,56,1,1,0)
	;;=1^2^^
	;;^UTILITY(U,$J,358.2,56,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,56,2,1,0)
	;;=1^^29^1^4
	;;^UTILITY(U,$J,358.2,56,2,2,0)
	;;=2^^17^1^3
	;;^UTILITY(U,$J,358.2,57,0)
	;;=TODAY'S LATTER APPOINTMENTS^67^^^^^2^0^^^6^0^^1^1
	;;^UTILITY(U,$J,358.2,57,1,0)
	;;=^358.21I^^0
	;;^UTILITY(U,$J,358.2,57,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,57,2,1,0)
	;;=1^^28^1^4
	;;^UTILITY(U,$J,358.2,57,2,2,0)
	;;=2^^17^1^3
	;;^UTILITY(U,$J,358.2,58,0)
	;;=CLINIC'S FUTURE APPOINTMENTS^68^^^^^2^0^^^7^0^^1^1
	;;^UTILITY(U,$J,358.2,58,1,0)
	;;=^358.21I^^0
	;;^UTILITY(U,$J,358.2,58,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,58,2,1,0)
	;;=1^^28^1^4
	;;^UTILITY(U,$J,358.2,58,2,2,0)
	;;=2^^17^1^3
	;;^UTILITY(U,$J,358.2,59,0)
	;;=OTHER NEW PROBLEMS^70^^^^^3^1^CU^^49^1^^0
	;;^UTILITY(U,$J,358.2,59,2,0)
	;;=^358.22I^5^5
	;;^UTILITY(U,$J,358.2,59,2,1,0)
	;;=1^ P   S^^2^^3
	;;^UTILITY(U,$J,358.2,59,2,2,0)
	;;=2^ A   I^^2^^4
	;;^UTILITY(U,$J,358.2,59,2,3,0)
	;;=3^PROBLEM NARRATIVE/NOTES^44^1^1^^0
	;;^UTILITY(U,$J,358.2,59,2,4,0)
	;;=4^ONS/RES^8^2^1^2^0
	;;^UTILITY(U,$J,358.2,59,2,5,0)
	;;=5^S/C^^2^^5
	;;^UTILITY(U,$J,358.2,60,0)
	;;=PATIENT EDUCATION^71^^^^^4^0^CS^^16^0^^0^^0
	;;^UTILITY(U,$J,358.2,60,2,0)
	;;=^358.22I^6^6
	;;^UTILITY(U,$J,358.2,60,2,1,0)
	;;=1^^40^1^2^^1
	;;^UTILITY(U,$J,358.2,60,2,2,0)
	;;=2^POOR^^2^^1^^1^10^0
	;;^UTILITY(U,$J,358.2,60,2,3,0)
	;;=3^FAIR^^2^^1^^1^11^0
	;;^UTILITY(U,$J,358.2,60,2,4,0)
	;;=4^GOOD^^2^^1^^1^12^0
	;;^UTILITY(U,$J,358.2,60,2,5,0)
	;;=5^N/A^^2^^1^^1^13^0
	;;^UTILITY(U,$J,358.2,60,2,6,0)
	;;=6^REFUSED^^2^^1^^1^14^0
	;;^UTILITY(U,$J,358.2,61,0)
	;;=PATIENT EXAMINATIONS^72^^^^^4^0^CSU^^23^0^^0^^0
	;;^UTILITY(U,$J,358.2,61,2,0)
	;;=^358.22I^4^3
	;;^UTILITY(U,$J,358.2,61,2,1,0)
	;;=1^^30^1^2^^1
	;;^UTILITY(U,$J,358.2,61,2,3,0)
	;;=3^ABNORM^^2^^1^^1^18^0
	;;^UTILITY(U,$J,358.2,61,2,4,0)
	;;=2^NORM^^2^^1^^1^19^0
	;;^UTILITY(U,$J,358.2,62,0)
	;;=HEALTH FACTORS^73^^^^^4^0^CSU^^21^0^^0^^0
	;;^UTILITY(U,$J,358.2,62,2,0)
	;;=^358.22I^5^4
	;;^UTILITY(U,$J,358.2,62,2,1,0)
	;;=1^^30^1^2^^1
	;;^UTILITY(U,$J,358.2,62,2,3,0)
	;;=3^SEVERE^^2^^1^^1^17^0
	;;^UTILITY(U,$J,358.2,62,2,4,0)
	;;=5^MIN^^2^^1^^1^15^0
	;;^UTILITY(U,$J,358.2,62,2,5,0)
	;;=4^MOD^^2^^1^^1^16^0
	;;^UTILITY(U,$J,358.2,63,0)
	;;=IMMUNIZATIONS^74^^^^^4^1^CS^^18^1^^0^^0
	;;^UTILITY(U,$J,358.2,63,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,63,2,1,0)
	;;=2^X^22^2^2^1^1^1^^0
	;;^UTILITY(U,$J,358.2,63,2,2,0)
	;;=1^^22^1^2^^1
	;;^UTILITY(U,$J,358.2,64,0)
	;;=INSURANCE POLIICIES^75^^^ACTIVE INSURANCE POLICIES^SC^2^0^^^27^0^1^1^0^0
	;;^UTILITY(U,$J,358.2,64,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,64,1,1,0)
	;;=1^10^1^4
	;;^UTILITY(U,$J,358.2,64,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,64,2,1,0)
	;;=1^^28^1^1
	;;^UTILITY(U,$J,358.2,64,2,2,0)
	;;=2^ ^20^1^3
	;;^UTILITY(U,$J,358.2,65,0)
	;;=SKIN TESTS^76^^^^^4^0^CSU^^50^0^^0^^0
	;;^UTILITY(U,$J,358.2,65,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,65,2,1,0)
	;;=1^^30^1^2^^1
	;;^UTILITY(U,$J,358.2,65,2,2,0)
	;;=2^^^2^^1^^1^^0
	;;^UTILITY(U,$J,358.2,66,0)
	;;=PATIENT TREATMENTS^77^^^^^4^0^CSU^^20^0^^0
	;;^UTILITY(U,$J,358.2,66,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,66,2,1,0)
	;;=1^^30^1^2^^1
	;;^UTILITY(U,$J,358.2,66,2,2,0)
	;;=2^ ^^2^^6^^1
	;;^UTILITY(U,$J,358.2,67,0)
	;;=CPT CODES^79^^^^^1^0^SC^^30^0^^0^^1^3^2
	;;^UTILITY(U,$J,358.2,67,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,67,1,1,0)
	;;=1^2^2
	;;^UTILITY(U,$J,358.2,67,2,0)
	;;=^358.22I^3^3
	;;^UTILITY(U,$J,358.2,67,2,1,0)
	;;=3^ ^5^1^1^^0
	;;^UTILITY(U,$J,358.2,67,2,2,0)
	;;=2^ ^32^1^2^^1
	;;^UTILITY(U,$J,358.2,67,2,3,0)
	;;=1^ ^^2^^1^^1^^0
	;;^UTILITY(U,$J,358.2,68,0)
	;;=PROVIDER^82^^^^^2^0^RC^^12^0^^1^0^0
	;;^UTILITY(U,$J,358.2,68,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,68,1,1,0)
	;;=1^^1
	;;^UTILITY(U,$J,358.2,68,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,68,2,1,0)
	;;=3^^25^1^2

IBDEI00D
IBDEI00D	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.2,68,2,2,0)
	;;=2^^^2^^1^^1^1^2
	;;^UTILITY(U,$J,358.2,69,0)
	;;=SC CONDITIONS^83^^^^RC^2^0^^^4^0^^1^1
	;;^UTILITY(U,$J,358.2,69,1,0)
	;;=^358.21I^1^1
	;;^UTILITY(U,$J,358.2,69,1,1,0)
	;;=1^4^1^4
	;;^UTILITY(U,$J,358.2,69,2,0)
	;;=^358.22I^2^2
	;;^UTILITY(U,$J,358.2,69,2,1,0)
	;;=2^ ^40^1^1
	;;^UTILITY(U,$J,358.2,69,2,2,0)
	;;=1^ ^4^1^3

IBDEI00E
IBDEI00E	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.3,0,"GL")
	;;=^IBE(358.3,
	;;^DIC("B","IMP/EXP SELECTION",358.3)
	;;=
	;;^DIC(358.3,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358.3,"%D",1,0)
	;;= 
	;;^DIC(358.3,"%D",2,0)
	;;=This file is nearly identical to file #357.3. It is used by the
	;;^DIC(358.3,"%D",3,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.3,"%D",4,0)
	;;=that is being imported or exported.
	;;^DD(358.3,0)
	;;=FIELD^^2.02^11
	;;^DD(358.3,0,"DT")
	;;=2960131
	;;^DD(358.3,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(358.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(358.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(358.3,0,"ID",.04)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(358.4,+$P(^(0),U,4),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(358.4,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(358.3,0,"IX","APO",358.3,.03)
	;;=
	;;^DD(358.3,0,"IX","APO1",358.3,.04)
	;;=
	;;^DD(358.3,0,"IX","APO2",358.3,.05)
	;;=
	;;^DD(358.3,0,"IX","B",358.3,.01)
	;;=
	;;^DD(358.3,0,"IX","C",358.3,.03)
	;;=
	;;^DD(358.3,0,"IX","D",358.3,.04)
	;;=
	;;^DD(358.3,0,"NM","IMP/EXP SELECTION")
	;;=
	;;^DD(358.3,.01,0)
	;;=SELECTION ID^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.3,.01,1,0)
	;;=^.1
	;;^DD(358.3,.01,1,1,0)
	;;=358.3^B
	;;^DD(358.3,.01,1,1,1)
	;;=S ^IBE(358.3,"B",$E(X,1,30),DA)=""
	;;^DD(358.3,.01,1,1,2)
	;;=K ^IBE(358.3,"B",$E(X,1,30),DA)
	;;^DD(358.3,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.3,.01,21,0)
	;;=^^2^2^2930309^
	;;^DD(358.3,.01,21,1,0)
	;;= 
	;;^DD(358.3,.01,21,2,0)
	;;=The ID passed by the package.
	;;^DD(358.3,.01,"DT")
	;;=2921119

IBDEI00F
IBDEI00F	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3)
	;;=^IBE(358.3,
	;;^UTILITY(U,$J,358.3,0)
	;;=IMP/EXP SELECTION^358.3I^745^745
	;;^UTILITY(U,$J,358.3,1,0)
	;;=1^^17^4^1
	;;^UTILITY(U,$J,358.3,1,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,1,1,1,0)
	;;=1^No-show
	;;^UTILITY(U,$J,358.3,2,0)
	;;=2^^17^4^2
	;;^UTILITY(U,$J,358.3,2,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,2,1,1,0)
	;;=1^Cancel
	;;^UTILITY(U,$J,358.3,3,0)
	;;=3^^17^4^3
	;;^UTILITY(U,$J,358.3,3,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,3,1,1,0)
	;;=1^Rescheduled
	;;^UTILITY(U,$J,358.3,4,0)
	;;=1^^22^6^1
	;;^UTILITY(U,$J,358.3,4,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,4,1,1,0)
	;;=1^No-show
	;;^UTILITY(U,$J,358.3,5,0)
	;;=2^^22^6^2
	;;^UTILITY(U,$J,358.3,5,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,5,1,1,0)
	;;=1^Cancel
	;;^UTILITY(U,$J,358.3,6,0)
	;;=3^^22^6^3
	;;^UTILITY(U,$J,358.3,6,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,6,1,1,0)
	;;=1^Rescheduled
	;;^UTILITY(U,$J,358.3,7,0)
	;;=99201^^23^7^1
	;;^UTILITY(U,$J,358.3,7,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,7,1,1,0)
	;;=1^Brief Visit         1-15 Min
	;;^UTILITY(U,$J,358.3,8,0)
	;;=99202^^23^7^2
	;;^UTILITY(U,$J,358.3,8,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,8,1,1,0)
	;;=1^Limited Exam        16-25 Min
	;;^UTILITY(U,$J,358.3,9,0)
	;;=99203^^23^7^3
	;;^UTILITY(U,$J,358.3,9,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,9,1,1,0)
	;;=1^Intermediate Exam   26-35 Min
	;;^UTILITY(U,$J,358.3,10,0)
	;;=99204^^23^7^4
	;;^UTILITY(U,$J,358.3,10,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,10,1,1,0)
	;;=1^Extended Exam       36-50 Min
	;;^UTILITY(U,$J,358.3,11,0)
	;;=99205^^23^7^5
	;;^UTILITY(U,$J,358.3,11,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,11,1,1,0)
	;;=1^Comprehensive Exam  51+ Min
	;;^UTILITY(U,$J,358.3,12,0)
	;;=99211^^23^8^1
	;;^UTILITY(U,$J,358.3,12,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,12,1,1,0)
	;;=1^Brief Exam          1-5 Min
	;;^UTILITY(U,$J,358.3,13,0)
	;;=99212^^23^8^2
	;;^UTILITY(U,$J,358.3,13,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,13,1,1,0)
	;;=1^Limited Exam        6-10 Min
	;;^UTILITY(U,$J,358.3,14,0)
	;;=99213^^23^8^3
	;;^UTILITY(U,$J,358.3,14,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,14,1,1,0)
	;;=1^Intermediate Exam   11-19 Min
	;;^UTILITY(U,$J,358.3,15,0)
	;;=99214^^23^8^4
	;;^UTILITY(U,$J,358.3,15,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,15,1,1,0)
	;;=1^Extended Exam       20-30 Min
	;;^UTILITY(U,$J,358.3,16,0)
	;;=99215^^23^8^5
	;;^UTILITY(U,$J,358.3,16,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,16,1,1,0)
	;;=1^Comprehensive Exam  40+ Min
	;;^UTILITY(U,$J,358.3,17,0)
	;;=99241^^23^9^1
	;;^UTILITY(U,$J,358.3,17,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,17,1,1,0)
	;;=1^Brief Visit         1-20 Min
	;;^UTILITY(U,$J,358.3,18,0)
	;;=99242^^23^9^2
	;;^UTILITY(U,$J,358.3,18,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,18,1,1,0)
	;;=1^Limited Visit       21-35 Min
	;;^UTILITY(U,$J,358.3,19,0)
	;;=99243^^23^9^3
	;;^UTILITY(U,$J,358.3,19,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,19,1,1,0)
	;;=1^Intermediate Visit  35-50 Min
	;;^UTILITY(U,$J,358.3,20,0)
	;;=99244^^23^9^4
	;;^UTILITY(U,$J,358.3,20,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,20,1,1,0)
	;;=1^Extended Visit      51-60 Min
	;;^UTILITY(U,$J,358.3,21,0)
	;;=99245^^23^9^5
	;;^UTILITY(U,$J,358.3,21,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,21,1,1,0)
	;;=1^Comprehensive Visit 71+ Min
	;;^UTILITY(U,$J,358.3,22,0)
	;;=1^1^25^11^1^Biopsy/Excision:^1^1
	;;^UTILITY(U,$J,358.3,22,1,0)
	;;=^358.31IA^1^0
	;;^UTILITY(U,$J,358.3,23,0)
	;;=10040^^25^11^2
	;;^UTILITY(U,$J,358.3,23,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,23,1,2,0)
	;;=2^ACNE SURGERY
	;;^UTILITY(U,$J,358.3,23,1,3,0)
	;;=3^10040
	;;^UTILITY(U,$J,358.3,24,0)
	;;=10160^^25^11^3
	;;^UTILITY(U,$J,358.3,24,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,24,1,2,0)
	;;=2^Aspir abcess/hematorma
	;;^UTILITY(U,$J,358.3,24,1,3,0)
	;;=3^10160
	;;^UTILITY(U,$J,358.3,25,0)
	;;=11100^^25^11^4
	;;^UTILITY(U,$J,358.3,25,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,25,1,2,0)
	;;=2^Bx skin, 1 lesion
	;;^UTILITY(U,$J,358.3,25,1,3,0)
	;;=3^11100
	;;^UTILITY(U,$J,358.3,26,0)
	;;=38500^^25^11^5
	;;^UTILITY(U,$J,358.3,26,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,26,1,2,0)
	;;=2^Bx, lyph node
	;;^UTILITY(U,$J,358.3,26,1,3,0)
	;;=3^38500
	;;^UTILITY(U,$J,358.3,27,0)
	;;=6^1^25^11^6^Debride skin:^1^1
	;;^UTILITY(U,$J,358.3,27,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,28,0)
	;;=11000^^25^11^7
	;;^UTILITY(U,$J,358.3,28,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,28,1,2,0)
	;;=2^Infectious to 10%
	;;^UTILITY(U,$J,358.3,28,1,3,0)
	;;=3^11000
	;;^UTILITY(U,$J,358.3,29,0)
	;;=11040^^25^11^8

IBDEI00G
IBDEI00G	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,29,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,29,1,2,0)
	;;=2^Partial thickness
	;;^UTILITY(U,$J,358.3,29,1,3,0)
	;;=3^11040
	;;^UTILITY(U,$J,358.3,30,0)
	;;=11041^^25^11^9
	;;^UTILITY(U,$J,358.3,30,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,30,1,2,0)
	;;=2^Full thickness
	;;^UTILITY(U,$J,358.3,30,1,3,0)
	;;=3^11041
	;;^UTILITY(U,$J,358.3,31,0)
	;;=11042^^25^11^10
	;;^UTILITY(U,$J,358.3,31,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,31,1,2,0)
	;;=2^Subcut tissue
	;;^UTILITY(U,$J,358.3,31,1,3,0)
	;;=3^11042
	;;^UTILITY(U,$J,358.3,32,0)
	;;=11043^^25^11^11
	;;^UTILITY(U,$J,358.3,32,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,32,1,2,0)
	;;=2^Subcut muscle
	;;^UTILITY(U,$J,358.3,32,1,3,0)
	;;=3^11043
	;;^UTILITY(U,$J,358.3,33,0)
	;;=11044^^25^11^12
	;;^UTILITY(U,$J,358.3,33,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,33,1,2,0)
	;;=2^Subcut muscle/bone
	;;^UTILITY(U,$J,358.3,33,1,3,0)
	;;=3^11044
	;;^UTILITY(U,$J,358.3,34,0)
	;;=13^1^25^11^13^Incision & Drainage:^1^1
	;;^UTILITY(U,$J,358.3,34,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,35,0)
	;;=10060^^25^11^14
	;;^UTILITY(U,$J,358.3,35,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,35,1,2,0)
	;;=2^Abcess/cyst/fur, simple
	;;^UTILITY(U,$J,358.3,35,1,3,0)
	;;=3^10060
	;;^UTILITY(U,$J,358.3,36,0)
	;;=10061^^25^11^15
	;;^UTILITY(U,$J,358.3,36,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,36,1,2,0)
	;;=2^Abcess/syst/fur, complicated
	;;^UTILITY(U,$J,358.3,36,1,3,0)
	;;=3^10061
	;;^UTILITY(U,$J,358.3,37,0)
	;;=10140^^25^11^16
	;;^UTILITY(U,$J,358.3,37,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,37,1,2,0)
	;;=2^Hematoma
	;;^UTILITY(U,$J,358.3,37,1,3,0)
	;;=3^10140
	;;^UTILITY(U,$J,358.3,38,0)
	;;=10180^^25^11^17
	;;^UTILITY(U,$J,358.3,38,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,38,1,2,0)
	;;=2^P.O. wnd infect, complicated
	;;^UTILITY(U,$J,358.3,38,1,3,0)
	;;=3^10180
	;;^UTILITY(U,$J,358.3,39,0)
	;;=18^1^25^11^18^Pare Curr/Shave Benign:^1^1
	;;^UTILITY(U,$J,358.3,39,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,40,0)
	;;=11050^^25^11^19
	;;^UTILITY(U,$J,358.3,40,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,40,1,2,0)
	;;=2^1 lesion
	;;^UTILITY(U,$J,358.3,40,1,3,0)
	;;=3^11050
	;;^UTILITY(U,$J,358.3,41,0)
	;;=11051^^25^11^20
	;;^UTILITY(U,$J,358.3,41,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,41,1,2,0)
	;;=2^2-4 lesions
	;;^UTILITY(U,$J,358.3,41,1,3,0)
	;;=3^11051
	;;^UTILITY(U,$J,358.3,42,0)
	;;=11052^^25^11^21
	;;^UTILITY(U,$J,358.3,42,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,42,1,2,0)
	;;=2^> 4 lesions
	;;^UTILITY(U,$J,358.3,42,1,3,0)
	;;=3^11052
	;;^UTILITY(U,$J,358.3,43,0)
	;;=1^1^25^12^1^Trunk/arms/legs:^1^1
	;;^UTILITY(U,$J,358.3,43,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,44,0)
	;;=11400^^25^12^2
	;;^UTILITY(U,$J,358.3,44,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,44,1,2,0)
	;;=2^Diameter to 0.5 cm
	;;^UTILITY(U,$J,358.3,44,1,3,0)
	;;=3^11400
	;;^UTILITY(U,$J,358.3,45,0)
	;;=11401^^25^12^3
	;;^UTILITY(U,$J,358.3,45,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,45,1,2,0)
	;;=2^0.6 to 1.0 cm
	;;^UTILITY(U,$J,358.3,45,1,3,0)
	;;=3^11401
	;;^UTILITY(U,$J,358.3,46,0)
	;;=11402^^25^12^4
	;;^UTILITY(U,$J,358.3,46,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,46,1,2,0)
	;;=2^1.1 to 2.0 cm
	;;^UTILITY(U,$J,358.3,46,1,3,0)
	;;=3^11402
	;;^UTILITY(U,$J,358.3,47,0)
	;;=11403^^25^12^5
	;;^UTILITY(U,$J,358.3,47,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,47,1,2,0)
	;;=2^2.1 to 3.0 cm
	;;^UTILITY(U,$J,358.3,47,1,3,0)
	;;=3^11403
	;;^UTILITY(U,$J,358.3,48,0)
	;;=11404^^25^12^6
	;;^UTILITY(U,$J,358.3,48,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,48,1,2,0)
	;;=2^3.1 to 4.0 cm
	;;^UTILITY(U,$J,358.3,48,1,3,0)
	;;=3^11404
	;;^UTILITY(U,$J,358.3,49,0)
	;;=11406^^25^12^7
	;;^UTILITY(U,$J,358.3,49,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,49,1,2,0)
	;;=2^Over 4.1 cm
	;;^UTILITY(U,$J,358.3,49,1,3,0)
	;;=3^11406
	;;^UTILITY(U,$J,358.3,50,0)
	;;=8^1^25^12^8^Scalp/hands/feet/genitals/neck:^1^1
	;;^UTILITY(U,$J,358.3,50,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,51,0)
	;;=11420^^25^12^9
	;;^UTILITY(U,$J,358.3,51,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,51,1,2,0)
	;;=2^Diameter to 0.5 cm
	;;^UTILITY(U,$J,358.3,51,1,3,0)
	;;=3^11420
	;;^UTILITY(U,$J,358.3,52,0)
	;;=11421^^25^12^10
	;;^UTILITY(U,$J,358.3,52,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,52,1,2,0)
	;;=2^0.6 to 1.0 cm
	;;^UTILITY(U,$J,358.3,52,1,3,0)
	;;=3^11421
	;;^UTILITY(U,$J,358.3,53,0)
	;;=11422^^25^12^11
	;;^UTILITY(U,$J,358.3,53,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,53,1,2,0)
	;;=2^1.1 to 2.0 cm
	;;^UTILITY(U,$J,358.3,53,1,3,0)
	;;=3^11422
	;;^UTILITY(U,$J,358.3,54,0)
	;;=11423^^25^12^12

IBDEI00H
IBDEI00H	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,54,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,54,1,2,0)
	;;=2^2.1 to 3.0 cm
	;;^UTILITY(U,$J,358.3,54,1,3,0)
	;;=3^11423
	;;^UTILITY(U,$J,358.3,55,0)
	;;=11424^^25^12^13
	;;^UTILITY(U,$J,358.3,55,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,55,1,2,0)
	;;=2^3.1 to 4.0 cm
	;;^UTILITY(U,$J,358.3,55,1,3,0)
	;;=3^11424
	;;^UTILITY(U,$J,358.3,56,0)
	;;=11426^^25^12^14
	;;^UTILITY(U,$J,358.3,56,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,56,1,2,0)
	;;=2^Over 4.1 cm
	;;^UTILITY(U,$J,358.3,56,1,3,0)
	;;=3^11426
	;;^UTILITY(U,$J,358.3,57,0)
	;;=15^1^25^12^15^Face/lip/mucous memb/lid/nose/ear:^1^1
	;;^UTILITY(U,$J,358.3,57,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,58,0)
	;;=11440^^25^12^16
	;;^UTILITY(U,$J,358.3,58,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,58,1,2,0)
	;;=2^Diameter to 0.5 cm
	;;^UTILITY(U,$J,358.3,58,1,3,0)
	;;=3^11440
	;;^UTILITY(U,$J,358.3,59,0)
	;;=11441^^25^12^17
	;;^UTILITY(U,$J,358.3,59,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,59,1,2,0)
	;;=2^0.6 to 1.0 cm
	;;^UTILITY(U,$J,358.3,59,1,3,0)
	;;=3^11441
	;;^UTILITY(U,$J,358.3,60,0)
	;;=11442^^25^12^18
	;;^UTILITY(U,$J,358.3,60,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,60,1,2,0)
	;;=2^1.1 to 2.0 cm
	;;^UTILITY(U,$J,358.3,60,1,3,0)
	;;=3^11442
	;;^UTILITY(U,$J,358.3,61,0)
	;;=11443^^25^12^19
	;;^UTILITY(U,$J,358.3,61,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,61,1,2,0)
	;;=2^2.1 to 3.0 cm
	;;^UTILITY(U,$J,358.3,61,1,3,0)
	;;=3^11443
	;;^UTILITY(U,$J,358.3,62,0)
	;;=11444^^25^12^20
	;;^UTILITY(U,$J,358.3,62,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,62,1,2,0)
	;;=2^3.1 to 4.0 cm
	;;^UTILITY(U,$J,358.3,62,1,3,0)
	;;=3^11444
	;;^UTILITY(U,$J,358.3,63,0)
	;;=11446^^25^12^21
	;;^UTILITY(U,$J,358.3,63,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,63,1,2,0)
	;;=2^Over 4.1 cm
	;;^UTILITY(U,$J,358.3,63,1,3,0)
	;;=3^11446
	;;^UTILITY(U,$J,358.3,64,0)
	;;=1^1^25^13^1^Trunk/arms/legs:^1^1
	;;^UTILITY(U,$J,358.3,64,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,65,0)
	;;=11600^^25^13^2
	;;^UTILITY(U,$J,358.3,65,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,65,1,2,0)
	;;=2^Diameter to 0.5 cm
	;;^UTILITY(U,$J,358.3,65,1,3,0)
	;;=3^11600
	;;^UTILITY(U,$J,358.3,66,0)
	;;=11601^^25^13^3
	;;^UTILITY(U,$J,358.3,66,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,66,1,2,0)
	;;=2^0.6 to 1.0 cm
	;;^UTILITY(U,$J,358.3,66,1,3,0)
	;;=3^11601
	;;^UTILITY(U,$J,358.3,67,0)
	;;=11602^^25^13^4
	;;^UTILITY(U,$J,358.3,67,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,67,1,2,0)
	;;=2^1.1 to 2.0 cm
	;;^UTILITY(U,$J,358.3,67,1,3,0)
	;;=3^11602
	;;^UTILITY(U,$J,358.3,68,0)
	;;=11603^^25^13^5
	;;^UTILITY(U,$J,358.3,68,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,68,1,2,0)
	;;=2^2.1 to 3.0 cm
	;;^UTILITY(U,$J,358.3,68,1,3,0)
	;;=3^11603
	;;^UTILITY(U,$J,358.3,69,0)
	;;=11604^^25^13^6
	;;^UTILITY(U,$J,358.3,69,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,69,1,2,0)
	;;=2^3.1 to 4.0 cm
	;;^UTILITY(U,$J,358.3,69,1,3,0)
	;;=3^11604
	;;^UTILITY(U,$J,358.3,70,0)
	;;=11606^^25^13^7
	;;^UTILITY(U,$J,358.3,70,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,70,1,2,0)
	;;=2^Over 4.1 cm
	;;^UTILITY(U,$J,358.3,70,1,3,0)
	;;=3^11606
	;;^UTILITY(U,$J,358.3,71,0)
	;;=8^1^25^13^8^Scalp/hands/feet/genitals/neck:^1^1
	;;^UTILITY(U,$J,358.3,71,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,72,0)
	;;=11620^^25^13^9
	;;^UTILITY(U,$J,358.3,72,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,72,1,2,0)
	;;=2^Diameter to 0.5 cm
	;;^UTILITY(U,$J,358.3,72,1,3,0)
	;;=3^11620
	;;^UTILITY(U,$J,358.3,73,0)
	;;=11621^^25^13^10
	;;^UTILITY(U,$J,358.3,73,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,73,1,2,0)
	;;=2^0.6 to 1.0 cm
	;;^UTILITY(U,$J,358.3,73,1,3,0)
	;;=3^11621
	;;^UTILITY(U,$J,358.3,74,0)
	;;=11622^^25^13^11
	;;^UTILITY(U,$J,358.3,74,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,74,1,2,0)
	;;=2^1.1 to 2.0 cm
	;;^UTILITY(U,$J,358.3,74,1,3,0)
	;;=3^11622
	;;^UTILITY(U,$J,358.3,75,0)
	;;=11623^^25^13^12
	;;^UTILITY(U,$J,358.3,75,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,75,1,2,0)
	;;=2^2.1 to 3.0 cm
	;;^UTILITY(U,$J,358.3,75,1,3,0)
	;;=3^11623
	;;^UTILITY(U,$J,358.3,76,0)
	;;=11624^^25^13^13
	;;^UTILITY(U,$J,358.3,76,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,76,1,2,0)
	;;=2^3.1 to 4.0 cm
	;;^UTILITY(U,$J,358.3,76,1,3,0)
	;;=3^11624
	;;^UTILITY(U,$J,358.3,77,0)
	;;=11626^^25^13^14
	;;^UTILITY(U,$J,358.3,77,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,77,1,2,0)
	;;=2^Over 4.1 cm
	;;^UTILITY(U,$J,358.3,77,1,3,0)
	;;=3^11626
	;;^UTILITY(U,$J,358.3,78,0)
	;;=15^1^25^13^15^Face/lip/mucous memb/lid/nose/ear:^1^1
	;;^UTILITY(U,$J,358.3,78,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,79,0)
	;;=11640^^25^13^16

IBDEI00I
IBDEI00I	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,79,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,79,1,2,0)
	;;=2^Diameter to 0.5 cm
	;;^UTILITY(U,$J,358.3,79,1,3,0)
	;;=3^11640
	;;^UTILITY(U,$J,358.3,80,0)
	;;=11641^^25^13^17
	;;^UTILITY(U,$J,358.3,80,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,80,1,2,0)
	;;=2^0.6 to 1.0 cm
	;;^UTILITY(U,$J,358.3,80,1,3,0)
	;;=3^11641
	;;^UTILITY(U,$J,358.3,81,0)
	;;=11642^^25^13^18
	;;^UTILITY(U,$J,358.3,81,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,81,1,2,0)
	;;=2^1.1 to 2.0 cm
	;;^UTILITY(U,$J,358.3,81,1,3,0)
	;;=3^11642
	;;^UTILITY(U,$J,358.3,82,0)
	;;=11643^^25^13^19
	;;^UTILITY(U,$J,358.3,82,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,82,1,2,0)
	;;=2^2.1 to 3.0 cm
	;;^UTILITY(U,$J,358.3,82,1,3,0)
	;;=3^11643
	;;^UTILITY(U,$J,358.3,83,0)
	;;=11644^^25^13^20
	;;^UTILITY(U,$J,358.3,83,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,83,1,2,0)
	;;=2^3.1 to 4.0 cm
	;;^UTILITY(U,$J,358.3,83,1,3,0)
	;;=3^11644
	;;^UTILITY(U,$J,358.3,84,0)
	;;=11646^^25^13^21
	;;^UTILITY(U,$J,358.3,84,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,84,1,2,0)
	;;=2^Over 4.1 cm
	;;^UTILITY(U,$J,358.3,84,1,3,0)
	;;=3^11646
	;;^UTILITY(U,$J,358.3,85,0)
	;;=1^1^25^14^1^Scalp/neck/trunk/extremities/^1^1
	;;^UTILITY(U,$J,358.3,85,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,86,0)
	;;=2^1^25^14^2^Total of all repairs:
	;;^UTILITY(U,$J,358.3,86,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,87,0)
	;;=12001^^25^14^3
	;;^UTILITY(U,$J,358.3,87,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,87,1,2,0)
	;;=2^Up to 2.5 cm
	;;^UTILITY(U,$J,358.3,87,1,3,0)
	;;=3^12001
	;;^UTILITY(U,$J,358.3,88,0)
	;;=12002^^25^14^4
	;;^UTILITY(U,$J,358.3,88,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,88,1,2,0)
	;;=2^2.6 to 7.5 cm
	;;^UTILITY(U,$J,358.3,88,1,3,0)
	;;=3^12002
	;;^UTILITY(U,$J,358.3,89,0)
	;;=12004^^25^14^5
	;;^UTILITY(U,$J,358.3,89,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,89,1,2,0)
	;;=2^7.6 to 12.5 cm
	;;^UTILITY(U,$J,358.3,89,1,3,0)
	;;=3^12004
	;;^UTILITY(U,$J,358.3,90,0)
	;;=12005^^25^14^6
	;;^UTILITY(U,$J,358.3,90,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,90,1,2,0)
	;;=2^12.6 to 20.0 cm
	;;^UTILITY(U,$J,358.3,90,1,3,0)
	;;=3^12005
	;;^UTILITY(U,$J,358.3,91,0)
	;;=12006^^25^14^7
	;;^UTILITY(U,$J,358.3,91,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,91,1,2,0)
	;;=2^20.1 to 30.0 cm
	;;^UTILITY(U,$J,358.3,91,1,3,0)
	;;=3^12006
	;;^UTILITY(U,$J,358.3,92,0)
	;;=12007^^25^14^8
	;;^UTILITY(U,$J,358.3,92,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,92,1,2,0)
	;;=2^Over 30.1 cm
	;;^UTILITY(U,$J,358.3,92,1,3,0)
	;;=3^12007
	;;^UTILITY(U,$J,358.3,93,0)
	;;=9^1^25^14^9^Face/ear/lid/nose/lip/mucous mem:^1^1
	;;^UTILITY(U,$J,358.3,93,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,94,0)
	;;=10^1^25^14^10^Total of all repairs:
	;;^UTILITY(U,$J,358.3,94,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,95,0)
	;;=12011^^25^14^11
	;;^UTILITY(U,$J,358.3,95,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,95,1,2,0)
	;;=2^Up to 2.5 cm
	;;^UTILITY(U,$J,358.3,95,1,3,0)
	;;=3^12011
	;;^UTILITY(U,$J,358.3,96,0)
	;;=12013^^25^14^12
	;;^UTILITY(U,$J,358.3,96,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,96,1,2,0)
	;;=2^2.6 to 5.0 cm
	;;^UTILITY(U,$J,358.3,96,1,3,0)
	;;=3^12013
	;;^UTILITY(U,$J,358.3,97,0)
	;;=12014^^25^14^13
	;;^UTILITY(U,$J,358.3,97,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,97,1,2,0)
	;;=2^5.1 to 7.5 cm
	;;^UTILITY(U,$J,358.3,97,1,3,0)
	;;=3^12014
	;;^UTILITY(U,$J,358.3,98,0)
	;;=12015^^25^14^14
	;;^UTILITY(U,$J,358.3,98,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,98,1,2,0)
	;;=2^7.6 to 12.5 cm
	;;^UTILITY(U,$J,358.3,98,1,3,0)
	;;=3^12015
	;;^UTILITY(U,$J,358.3,99,0)
	;;=12016^^25^14^15
	;;^UTILITY(U,$J,358.3,99,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,99,1,2,0)
	;;=2^12.6 to 20.0 cm
	;;^UTILITY(U,$J,358.3,99,1,3,0)
	;;=3^12016
	;;^UTILITY(U,$J,358.3,100,0)
	;;=12017^^25^14^16
	;;^UTILITY(U,$J,358.3,100,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,100,1,2,0)
	;;=2^20.1 to 30.0 cm
	;;^UTILITY(U,$J,358.3,100,1,3,0)
	;;=3^12017
	;;^UTILITY(U,$J,358.3,101,0)
	;;=12018^^25^14^17
	;;^UTILITY(U,$J,358.3,101,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,101,1,2,0)
	;;=2^Over 30.1 cm
	;;^UTILITY(U,$J,358.3,101,1,3,0)
	;;=3^12018
	;;^UTILITY(U,$J,358.3,102,0)
	;;=1.01^1^25^14^1.01^genitals/axillae:^1^0
	;;^UTILITY(U,$J,358.3,102,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,103,0)
	;;=12031^^25^15^3
	;;^UTILITY(U,$J,358.3,103,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,103,1,2,0)
	;;=2^Up to 2.5 cm
	;;^UTILITY(U,$J,358.3,103,1,3,0)
	;;=3^12031
	;;^UTILITY(U,$J,358.3,104,0)
	;;=12032^^25^15^4
	;;^UTILITY(U,$J,358.3,104,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,104,1,2,0)
	;;=2^2.6 to 7.5 cm

IBDEI00J
IBDEI00J	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,104,1,3,0)
	;;=3^12032
	;;^UTILITY(U,$J,358.3,105,0)
	;;=12034^^25^15^5
	;;^UTILITY(U,$J,358.3,105,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,105,1,2,0)
	;;=2^7.6 to 12.5 cm
	;;^UTILITY(U,$J,358.3,105,1,3,0)
	;;=3^12034
	;;^UTILITY(U,$J,358.3,106,0)
	;;=12035^^25^15^6
	;;^UTILITY(U,$J,358.3,106,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,106,1,2,0)
	;;=2^12.6 to 20.0 cm
	;;^UTILITY(U,$J,358.3,106,1,3,0)
	;;=3^12035
	;;^UTILITY(U,$J,358.3,107,0)
	;;=12036^^25^15^7
	;;^UTILITY(U,$J,358.3,107,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,107,1,2,0)
	;;=2^20.1 to 30.0 cm
	;;^UTILITY(U,$J,358.3,107,1,3,0)
	;;=3^12036
	;;^UTILITY(U,$J,358.3,108,0)
	;;=12037^^25^15^8
	;;^UTILITY(U,$J,358.3,108,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,108,1,2,0)
	;;=2^Over 30.1 cm
	;;^UTILITY(U,$J,358.3,108,1,3,0)
	;;=3^12037
	;;^UTILITY(U,$J,358.3,109,0)
	;;=1^1^25^15^1^Scalp/neck/trunk/extremity/axillae:^1^1
	;;^UTILITY(U,$J,358.3,109,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,110,0)
	;;=2^1^25^15^2^Total of all repairs:
	;;^UTILITY(U,$J,358.3,110,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,111,0)
	;;=9^1^25^15^9^Neck/hands/feet/genitals:^1^1
	;;^UTILITY(U,$J,358.3,111,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,112,0)
	;;=10^1^25^15^10^Total of all repairs:
	;;^UTILITY(U,$J,358.3,112,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,113,0)
	;;=12041^^25^15^11
	;;^UTILITY(U,$J,358.3,113,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,113,1,2,0)
	;;=2^Up to 2.5 cm
	;;^UTILITY(U,$J,358.3,113,1,3,0)
	;;=3^12041
	;;^UTILITY(U,$J,358.3,114,0)
	;;=12042^^25^15^12
	;;^UTILITY(U,$J,358.3,114,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,114,1,2,0)
	;;=2^2.6 to 7.5 cm
	;;^UTILITY(U,$J,358.3,114,1,3,0)
	;;=3^12042
	;;^UTILITY(U,$J,358.3,115,0)
	;;=12044^^25^15^13
	;;^UTILITY(U,$J,358.3,115,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,115,1,2,0)
	;;=2^7.6 to 12.5 cm
	;;^UTILITY(U,$J,358.3,115,1,3,0)
	;;=3^12044
	;;^UTILITY(U,$J,358.3,116,0)
	;;=12045^^25^15^14
	;;^UTILITY(U,$J,358.3,116,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,116,1,2,0)
	;;=2^12.6 to 20.0 cm
	;;^UTILITY(U,$J,358.3,116,1,3,0)
	;;=3^12045
	;;^UTILITY(U,$J,358.3,117,0)
	;;=12046^^25^15^15
	;;^UTILITY(U,$J,358.3,117,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,117,1,2,0)
	;;=2^20.1 to 30.0 cm
	;;^UTILITY(U,$J,358.3,117,1,3,0)
	;;=3^12046
	;;^UTILITY(U,$J,358.3,118,0)
	;;=12047^^25^15^16
	;;^UTILITY(U,$J,358.3,118,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,118,1,2,0)
	;;=2^Over 30.1 cm
	;;^UTILITY(U,$J,358.3,118,1,3,0)
	;;=3^12047
	;;^UTILITY(U,$J,358.3,119,0)
	;;=17^1^25^15^17^Face/lip/ear/nose/lid/muc membrane:^1^1
	;;^UTILITY(U,$J,358.3,119,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,120,0)
	;;=18^1^25^15^18^Total of all repairs:
	;;^UTILITY(U,$J,358.3,120,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,121,0)
	;;=12051^^25^15^20
	;;^UTILITY(U,$J,358.3,121,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,121,1,2,0)
	;;=2^Up to 2.5 cm
	;;^UTILITY(U,$J,358.3,121,1,3,0)
	;;=3^12051
	;;^UTILITY(U,$J,358.3,122,0)
	;;=12052^^25^15^21
	;;^UTILITY(U,$J,358.3,122,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,122,1,2,0)
	;;=2^LAYER CLOSURE OF WOUND(S)
	;;^UTILITY(U,$J,358.3,122,1,3,0)
	;;=3^12052
	;;^UTILITY(U,$J,358.3,123,0)
	;;=12053^^25^15^22
	;;^UTILITY(U,$J,358.3,123,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,123,1,2,0)
	;;=2^5.1 to 7.5 cm
	;;^UTILITY(U,$J,358.3,123,1,3,0)
	;;=3^12053
	;;^UTILITY(U,$J,358.3,124,0)
	;;=12054^^25^15^23
	;;^UTILITY(U,$J,358.3,124,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,124,1,2,0)
	;;=2^7.6 to 12.5 cm
	;;^UTILITY(U,$J,358.3,124,1,3,0)
	;;=3^12054
	;;^UTILITY(U,$J,358.3,125,0)
	;;=12055^^25^15^24
	;;^UTILITY(U,$J,358.3,125,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,125,1,2,0)
	;;=2^12.6 to 20.0 cm
	;;^UTILITY(U,$J,358.3,125,1,3,0)
	;;=3^12055
	;;^UTILITY(U,$J,358.3,126,0)
	;;=12056^^25^15^25
	;;^UTILITY(U,$J,358.3,126,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,126,1,2,0)
	;;=2^20.1 to 30.0 cm
	;;^UTILITY(U,$J,358.3,126,1,3,0)
	;;=3^12056
	;;^UTILITY(U,$J,358.3,127,0)
	;;=12057^^25^15^26
	;;^UTILITY(U,$J,358.3,127,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,127,1,2,0)
	;;=2^Over 30.1 cm
	;;^UTILITY(U,$J,358.3,127,1,3,0)
	;;=3^12057
	;;^UTILITY(U,$J,358.3,128,0)
	;;=1^1^25^16^1^Trunk:^1^1
	;;^UTILITY(U,$J,358.3,128,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,129,0)
	;;=13100^^25^16^2
	;;^UTILITY(U,$J,358.3,129,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,129,1,2,0)
	;;=2^1.1 to 2.5 cm
	;;^UTILITY(U,$J,358.3,129,1,3,0)
	;;=3^13100
	;;^UTILITY(U,$J,358.3,130,0)
	;;=13101^^25^16^3
	;;^UTILITY(U,$J,358.3,130,1,0)
	;;=^358.31IA^3^2

IBDEI00K
IBDEI00K	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,130,1,2,0)
	;;=2^2.6 to 7.5 cm
	;;^UTILITY(U,$J,358.3,130,1,3,0)
	;;=3^13101
	;;^UTILITY(U,$J,358.3,131,0)
	;;=4^1^25^16^4^Scalp/Arm/Legs:^1^1
	;;^UTILITY(U,$J,358.3,131,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,132,0)
	;;=13120^^25^16^5
	;;^UTILITY(U,$J,358.3,132,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,132,1,2,0)
	;;=2^1.1 to 2.5 cm
	;;^UTILITY(U,$J,358.3,132,1,3,0)
	;;=3^13120
	;;^UTILITY(U,$J,358.3,133,0)
	;;=13121^^25^16^6
	;;^UTILITY(U,$J,358.3,133,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,133,1,2,0)
	;;=2^2.6 to 7.5 cm
	;;^UTILITY(U,$J,358.3,133,1,3,0)
	;;=3^13121
	;;^UTILITY(U,$J,358.3,134,0)
	;;=7^1^25^16^7^Mouth/check/chin/hd/ft/ax/genitals:^1^1
	;;^UTILITY(U,$J,358.3,134,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,135,0)
	;;=13131^^25^16^8
	;;^UTILITY(U,$J,358.3,135,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,135,1,2,0)
	;;=2^1.1 to 2.5 cm
	;;^UTILITY(U,$J,358.3,135,1,3,0)
	;;=3^13131
	;;^UTILITY(U,$J,358.3,136,0)
	;;=13132^^25^16^9
	;;^UTILITY(U,$J,358.3,136,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,136,1,2,0)
	;;=2^2.6 to 7.5 cm
	;;^UTILITY(U,$J,358.3,136,1,3,0)
	;;=3^13132
	;;^UTILITY(U,$J,358.3,137,0)
	;;=10^1^25^16^10^Eyelid/ears/nose/lips:^1^1
	;;^UTILITY(U,$J,358.3,137,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,138,0)
	;;=13150^^25^16^11
	;;^UTILITY(U,$J,358.3,138,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,138,1,2,0)
	;;=2^Up to 1.0 cm
	;;^UTILITY(U,$J,358.3,138,1,3,0)
	;;=3^13150
	;;^UTILITY(U,$J,358.3,139,0)
	;;=13151^^25^16^12
	;;^UTILITY(U,$J,358.3,139,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,139,1,2,0)
	;;=2^1.1 to 2.5 cm
	;;^UTILITY(U,$J,358.3,139,1,3,0)
	;;=3^13151
	;;^UTILITY(U,$J,358.3,140,0)
	;;=13152^^25^16^13
	;;^UTILITY(U,$J,358.3,140,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,140,1,2,0)
	;;=2^2.6 to 7.5 cm
	;;^UTILITY(U,$J,358.3,140,1,3,0)
	;;=3^13152
	;;^UTILITY(U,$J,358.3,141,0)
	;;=14^1^25^16^14^Any area:^1^1
	;;^UTILITY(U,$J,358.3,141,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,142,0)
	;;=13300^^25^16^15
	;;^UTILITY(U,$J,358.3,142,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,142,1,2,0)
	;;=2^Complicated, >7.6 cm
	;;^UTILITY(U,$J,358.3,142,1,3,0)
	;;=3^13300
	;;^UTILITY(U,$J,358.3,143,0)
	;;=1^1^25^17^1^Trunk/arms/legs:^1^1
	;;^UTILITY(U,$J,358.3,143,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,144,0)
	;;=17260^^25^17^2
	;;^UTILITY(U,$J,358.3,144,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,144,1,2,0)
	;;=2^Diameter to 0.5 cm
	;;^UTILITY(U,$J,358.3,144,1,3,0)
	;;=3^17260
	;;^UTILITY(U,$J,358.3,145,0)
	;;=17261^^25^17^3
	;;^UTILITY(U,$J,358.3,145,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,145,1,2,0)
	;;=2^0.6 to 1.0 cm
	;;^UTILITY(U,$J,358.3,145,1,3,0)
	;;=3^17261
	;;^UTILITY(U,$J,358.3,146,0)
	;;=17262^^25^17^4
	;;^UTILITY(U,$J,358.3,146,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,146,1,2,0)
	;;=2^1.1 to 2.0 cm
	;;^UTILITY(U,$J,358.3,146,1,3,0)
	;;=3^17262
	;;^UTILITY(U,$J,358.3,147,0)
	;;=17263^^25^17^5
	;;^UTILITY(U,$J,358.3,147,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,147,1,2,0)
	;;=2^2.1 to 3.0 cm
	;;^UTILITY(U,$J,358.3,147,1,3,0)
	;;=3^17263
	;;^UTILITY(U,$J,358.3,148,0)
	;;=17264^^25^17^6
	;;^UTILITY(U,$J,358.3,148,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,148,1,2,0)
	;;=2^3.1 to 4.0 cm
	;;^UTILITY(U,$J,358.3,148,1,3,0)
	;;=3^17264
	;;^UTILITY(U,$J,358.3,149,0)
	;;=17266^^25^17^7
	;;^UTILITY(U,$J,358.3,149,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,149,1,2,0)
	;;=2^Over 4.1 cm
	;;^UTILITY(U,$J,358.3,149,1,3,0)
	;;=3^17266
	;;^UTILITY(U,$J,358.3,150,0)
	;;=8^1^25^17^8^Scalp/neck/hands/feet/genitalia:^1^1
	;;^UTILITY(U,$J,358.3,150,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,151,0)
	;;=17270^^25^17^9
	;;^UTILITY(U,$J,358.3,151,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,151,1,2,0)
	;;=2^Diameter to 0.5 cm
	;;^UTILITY(U,$J,358.3,151,1,3,0)
	;;=3^17270
	;;^UTILITY(U,$J,358.3,152,0)
	;;=17271^^25^17^10
	;;^UTILITY(U,$J,358.3,152,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,152,1,2,0)
	;;=2^0.6 to 1.0 cm
	;;^UTILITY(U,$J,358.3,152,1,3,0)
	;;=3^17271
	;;^UTILITY(U,$J,358.3,153,0)
	;;=17272^^25^17^11
	;;^UTILITY(U,$J,358.3,153,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,153,1,2,0)
	;;=2^1.1 to 2.0 cm
	;;^UTILITY(U,$J,358.3,153,1,3,0)
	;;=3^17272
	;;^UTILITY(U,$J,358.3,154,0)
	;;=17273^^25^17^12
	;;^UTILITY(U,$J,358.3,154,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,154,1,2,0)
	;;=2^2.1 to 3.0 cm
	;;^UTILITY(U,$J,358.3,154,1,3,0)
	;;=3^17273
	;;^UTILITY(U,$J,358.3,155,0)
	;;=17274^^25^17^13
	;;^UTILITY(U,$J,358.3,155,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,155,1,2,0)
	;;=2^3.1 to 4.0 cm
	;;^UTILITY(U,$J,358.3,155,1,3,0)
	;;=3^17274

IBDEI00L
IBDEI00L	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,156,0)
	;;=17276^^25^17^14
	;;^UTILITY(U,$J,358.3,156,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,156,1,2,0)
	;;=2^Over 4.1 cm
	;;^UTILITY(U,$J,358.3,156,1,3,0)
	;;=3^17276
	;;^UTILITY(U,$J,358.3,157,0)
	;;=15^1^25^17^15^Face/lip/muc memb/ear/lid/nose:^1^1
	;;^UTILITY(U,$J,358.3,157,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,158,0)
	;;=17280^^25^17^16
	;;^UTILITY(U,$J,358.3,158,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,158,1,2,0)
	;;=2^Diameter to 0.5 cm
	;;^UTILITY(U,$J,358.3,158,1,3,0)
	;;=3^17280
	;;^UTILITY(U,$J,358.3,159,0)
	;;=17281^^25^17^17
	;;^UTILITY(U,$J,358.3,159,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,159,1,2,0)
	;;=2^0.6 to 1.0 cm
	;;^UTILITY(U,$J,358.3,159,1,3,0)
	;;=3^17281
	;;^UTILITY(U,$J,358.3,160,0)
	;;=17282^^25^17^18
	;;^UTILITY(U,$J,358.3,160,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,160,1,2,0)
	;;=2^1.1 to 2.0 cm
	;;^UTILITY(U,$J,358.3,160,1,3,0)
	;;=3^17282
	;;^UTILITY(U,$J,358.3,161,0)
	;;=17283^^25^17^19
	;;^UTILITY(U,$J,358.3,161,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,161,1,2,0)
	;;=2^2.1 to 3.0 cm
	;;^UTILITY(U,$J,358.3,161,1,3,0)
	;;=3^17283
	;;^UTILITY(U,$J,358.3,162,0)
	;;=17284^^25^17^20
	;;^UTILITY(U,$J,358.3,162,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,162,1,2,0)
	;;=2^3.1 to 4.0 cm
	;;^UTILITY(U,$J,358.3,162,1,3,0)
	;;=3^17284
	;;^UTILITY(U,$J,358.3,163,0)
	;;=17286^^25^17^21
	;;^UTILITY(U,$J,358.3,163,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,163,1,2,0)
	;;=2^Over 4.1 cm
	;;^UTILITY(U,$J,358.3,163,1,3,0)
	;;=3^17286
	;;^UTILITY(U,$J,358.3,164,0)
	;;=1^1^25^18^1^Trunk:^1^1
	;;^UTILITY(U,$J,358.3,164,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,165,0)
	;;=14000^^25^18^1
	;;^UTILITY(U,$J,358.3,165,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,165,1,2,0)
	;;=2^Up to 10.0 sq.cm
	;;^UTILITY(U,$J,358.3,165,1,3,0)
	;;=3^14000
	;;^UTILITY(U,$J,358.3,166,0)
	;;=14001^^25^18^2
	;;^UTILITY(U,$J,358.3,166,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,166,1,2,0)
	;;=2^10.1 to 30.0 sq cm
	;;^UTILITY(U,$J,358.3,166,1,3,0)
	;;=3^14001
	;;^UTILITY(U,$J,358.3,167,0)
	;;=4^1^25^18^4^Scalp/Arm/Legs:^1^1
	;;^UTILITY(U,$J,358.3,167,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,168,0)
	;;=14020^^25^18^5
	;;^UTILITY(U,$J,358.3,168,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,168,1,2,0)
	;;=2^Up to 10.0 sq cm
	;;^UTILITY(U,$J,358.3,168,1,3,0)
	;;=3^14020
	;;^UTILITY(U,$J,358.3,169,0)
	;;=14021^^25^18^6
	;;^UTILITY(U,$J,358.3,169,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,169,1,2,0)
	;;=2^10.1 to 30.0 sq cm
	;;^UTILITY(U,$J,358.3,169,1,3,0)
	;;=3^14021
	;;^UTILITY(U,$J,358.3,170,0)
	;;=7^1^25^18^7^Forehead/cheek/hd/ft/chin/neck/ax:^1^1
	;;^UTILITY(U,$J,358.3,170,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,171,0)
	;;=14040^^25^18^8
	;;^UTILITY(U,$J,358.3,171,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,171,1,2,0)
	;;=2^Up to 10.0 sq cm
	;;^UTILITY(U,$J,358.3,171,1,3,0)
	;;=3^14040
	;;^UTILITY(U,$J,358.3,172,0)
	;;=14041^^25^18^9
	;;^UTILITY(U,$J,358.3,172,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,172,1,2,0)
	;;=2^10.1 to 30.0 sq cm
	;;^UTILITY(U,$J,358.3,172,1,3,0)
	;;=3^14041
	;;^UTILITY(U,$J,358.3,173,0)
	;;=10^1^25^18^10^Eyelid/ear/lip/nose:^1^1
	;;^UTILITY(U,$J,358.3,173,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,174,0)
	;;=14060^^25^18^11
	;;^UTILITY(U,$J,358.3,174,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,174,1,2,0)
	;;=2^Up to 10.0 sq cm
	;;^UTILITY(U,$J,358.3,174,1,3,0)
	;;=3^14060
	;;^UTILITY(U,$J,358.3,175,0)
	;;=14061^^25^18^12
	;;^UTILITY(U,$J,358.3,175,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,175,1,2,0)
	;;=2^10.1 to 30.0 sq cm
	;;^UTILITY(U,$J,358.3,175,1,3,0)
	;;=3^14061
	;;^UTILITY(U,$J,358.3,176,0)
	;;=15050^^25^19^1
	;;^UTILITY(U,$J,358.3,176,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,176,1,2,0)
	;;=2^Pinch graft
	;;^UTILITY(U,$J,358.3,176,1,3,0)
	;;=3^15050
	;;^UTILITY(U,$J,358.3,177,0)
	;;=15734^^25^19^2
	;;^UTILITY(U,$J,358.3,177,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,177,1,2,0)
	;;=2^Pedicle graft, trunk
	;;^UTILITY(U,$J,358.3,177,1,3,0)
	;;=3^15734
	;;^UTILITY(U,$J,358.3,178,0)
	;;=31622^^25^20^1
	;;^UTILITY(U,$J,358.3,178,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,178,1,2,0)
	;;=2^Bronchoscopy
	;;^UTILITY(U,$J,358.3,178,1,3,0)
	;;=3^31622
	;;^UTILITY(U,$J,358.3,179,0)
	;;=45378^^25^20^2
	;;^UTILITY(U,$J,358.3,179,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,179,1,2,0)
	;;=2^Colonoscopy
	;;^UTILITY(U,$J,358.3,179,1,3,0)
	;;=3^45378
	;;^UTILITY(U,$J,358.3,180,0)
	;;=96408^^25^20^3
	;;^UTILITY(U,$J,358.3,180,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,180,1,2,0)
	;;=2^Chemotherapy, administer, IV
	;;^UTILITY(U,$J,358.3,180,1,3,0)
	;;=3^96408

IBDEI00M
IBDEI00M	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,181,0)
	;;=15780^^25^20^4
	;;^UTILITY(U,$J,358.3,181,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,181,1,2,0)
	;;=2^Dermabrasion, total face
	;;^UTILITY(U,$J,358.3,181,1,3,0)
	;;=3^15780
	;;^UTILITY(U,$J,358.3,182,0)
	;;=43235^^25^20^5
	;;^UTILITY(U,$J,358.3,182,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,182,1,2,0)
	;;=2^EGD
	;;^UTILITY(U,$J,358.3,182,1,3,0)
	;;=3^43235
	;;^UTILITY(U,$J,358.3,183,0)
	;;=31505^^25^20^6
	;;^UTILITY(U,$J,358.3,183,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,183,1,2,0)
	;;=2^Laryngoscopy
	;;^UTILITY(U,$J,358.3,183,1,3,0)
	;;=3^31505
	;;^UTILITY(U,$J,358.3,184,0)
	;;=45300^^25^20^7
	;;^UTILITY(U,$J,358.3,184,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,184,1,2,0)
	;;=2^Proctoscopy
	;;^UTILITY(U,$J,358.3,184,1,3,0)
	;;=3^45300
	;;^UTILITY(U,$J,358.3,185,0)
	;;=45330^^25^20^8
	;;^UTILITY(U,$J,358.3,185,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,185,1,2,0)
	;;=2^Sigmoidoscopy
	;;^UTILITY(U,$J,358.3,185,1,3,0)
	;;=3^45330
	;;^UTILITY(U,$J,358.3,186,0)
	;;=9^1^25^20^9^Cardiovascular:^1^1
	;;^UTILITY(U,$J,358.3,186,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,187,0)
	;;=36600^^25^20^10
	;;^UTILITY(U,$J,358.3,187,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,187,1,2,0)
	;;=2^Arterial puncture
	;;^UTILITY(U,$J,358.3,187,1,3,0)
	;;=3^36600
	;;^UTILITY(U,$J,358.3,188,0)
	;;=37609^^25^20^11
	;;^UTILITY(U,$J,358.3,188,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,188,1,2,0)
	;;=2^Bx, temporal artery
	;;^UTILITY(U,$J,358.3,188,1,3,0)
	;;=3^37609
	;;^UTILITY(U,$J,358.3,189,0)
	;;=37720^^25^20^12
	;;^UTILITY(U,$J,358.3,189,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,189,1,2,0)
	;;=2^Excision varicose veins
	;;^UTILITY(U,$J,358.3,189,1,3,0)
	;;=3^37720
	;;^UTILITY(U,$J,358.3,190,0)
	;;=36489^^25^20^13
	;;^UTILITY(U,$J,358.3,190,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,190,1,2,0)
	;;=2^Place central vein cath
	;;^UTILITY(U,$J,358.3,190,1,3,0)
	;;=3^36489
	;;^UTILITY(U,$J,358.3,191,0)
	;;=33416^^25^20^14
	;;^UTILITY(U,$J,358.3,191,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,191,1,2,0)
	;;=2^Removal ven pump
	;;^UTILITY(U,$J,358.3,191,1,3,0)
	;;=3^33416
	;;^UTILITY(U,$J,358.3,192,0)
	;;=15^1^25^20^15^Dental:^1^1
	;;^UTILITY(U,$J,358.3,192,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,193,0)
	;;=41899^^25^20^16
	;;^UTILITY(U,$J,358.3,193,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,193,1,2,0)
	;;=2^Full mouth extract
	;;^UTILITY(U,$J,358.3,193,1,3,0)
	;;=3^41899
	;;^UTILITY(U,$J,358.3,194,0)
	;;=17^1^25^20^17^Eye:^1^1
	;;^UTILITY(U,$J,358.3,194,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,195,0)
	;;=66940^^25^20^18
	;;^UTILITY(U,$J,358.3,195,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,195,1,2,0)
	;;=2^Cataract extraction
	;;^UTILITY(U,$J,358.3,195,1,3,0)
	;;=3^66940
	;;^UTILITY(U,$J,358.3,196,0)
	;;=19^1^25^20^19^Hernial Repair:^1^1
	;;^UTILITY(U,$J,358.3,196,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,197,0)
	;;=49550^^25^20^20
	;;^UTILITY(U,$J,358.3,197,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,197,1,2,0)
	;;=2^Femeral
	;;^UTILITY(U,$J,358.3,197,1,3,0)
	;;=3^49550
	;;^UTILITY(U,$J,358.3,198,0)
	;;=49560^^25^20^21
	;;^UTILITY(U,$J,358.3,198,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,198,1,2,0)
	;;=2^Incisional
	;;^UTILITY(U,$J,358.3,198,1,3,0)
	;;=3^49560
	;;^UTILITY(U,$J,358.3,199,0)
	;;=49505^^25^20^22
	;;^UTILITY(U,$J,358.3,199,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,199,1,2,0)
	;;=2^Inquinal
	;;^UTILITY(U,$J,358.3,199,1,3,0)
	;;=3^49505
	;;^UTILITY(U,$J,358.3,200,0)
	;;=23^1^25^20^23^Nails:^1^1
	;;^UTILITY(U,$J,358.3,200,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,201,0)
	;;=11770^^25^20^26
	;;^UTILITY(U,$J,358.3,201,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,201,1,2,0)
	;;=2^I & D Paranychia, simple
	;;^UTILITY(U,$J,358.3,201,1,3,0)
	;;=3^11770
	;;^UTILITY(U,$J,358.3,202,0)
	;;=11772^^25^20^27
	;;^UTILITY(U,$J,358.3,202,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,202,1,2,0)
	;;=2^I & D Paronychia, complex
	;;^UTILITY(U,$J,358.3,202,1,3,0)
	;;=3^11772
	;;^UTILITY(U,$J,358.3,203,0)
	;;=11760^^25^20^28
	;;^UTILITY(U,$J,358.3,203,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,203,1,2,0)
	;;=2^Repair nail bed, simple
	;;^UTILITY(U,$J,358.3,203,1,3,0)
	;;=3^11760
	;;^UTILITY(U,$J,358.3,204,0)
	;;=11731^^25^20^30
	;;^UTILITY(U,$J,358.3,204,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,204,1,2,0)
	;;=2^Avulsion nail plate,2nd,simple
	;;^UTILITY(U,$J,358.3,204,1,3,0)
	;;=3^11731
	;;^UTILITY(U,$J,358.3,205,0)
	;;=31^1^25^20^31^Excision of Nail:^1^0
	;;^UTILITY(U,$J,358.3,205,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,206,0)
	;;=11750^^25^20^32
	;;^UTILITY(U,$J,358.3,206,1,0)
	;;=^358.31IA^3^2

IBDEI00N
IBDEI00N	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,206,1,2,0)
	;;=2^Permanent
	;;^UTILITY(U,$J,358.3,206,1,3,0)
	;;=3^11750
	;;^UTILITY(U,$J,358.3,207,0)
	;;=11752^^25^20^33
	;;^UTILITY(U,$J,358.3,207,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,207,1,2,0)
	;;=2^W/amputation tuft
	;;^UTILITY(U,$J,358.3,207,1,3,0)
	;;=3^11752
	;;^UTILITY(U,$J,358.3,208,0)
	;;=11765^^25^20^34
	;;^UTILITY(U,$J,358.3,208,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,208,1,2,0)
	;;=2^Wedge skin of fold
	;;^UTILITY(U,$J,358.3,208,1,3,0)
	;;=3^11765
	;;^UTILITY(U,$J,358.3,209,0)
	;;=35^1^25^20^35^Neurology:^1^1
	;;^UTILITY(U,$J,358.3,209,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,210,0)
	;;=64774^^25^20^36
	;;^UTILITY(U,$J,358.3,210,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,210,1,2,0)
	;;=2^Excise neuroma
	;;^UTILITY(U,$J,358.3,210,1,3,0)
	;;=3^64774
	;;^UTILITY(U,$J,358.3,211,0)
	;;=20200^^25^20^37
	;;^UTILITY(U,$J,358.3,211,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,211,1,2,0)
	;;=2^Biopsy muscle, superficial
	;;^UTILITY(U,$J,358.3,211,1,3,0)
	;;=3^20200
	;;^UTILITY(U,$J,358.3,212,0)
	;;=20205^^25^20^38
	;;^UTILITY(U,$J,358.3,212,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,212,1,2,0)
	;;=2^Biopsy muscle, deep
	;;^UTILITY(U,$J,358.3,212,1,3,0)
	;;=3^20205
	;;^UTILITY(U,$J,358.3,213,0)
	;;=64795^^25^20^39
	;;^UTILITY(U,$J,358.3,213,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,213,1,2,0)
	;;=2^Biopsy nerve
	;;^UTILITY(U,$J,358.3,213,1,3,0)
	;;=3^64795
	;;^UTILITY(U,$J,358.3,214,0)
	;;=40^1^25^20^40^Orthopedic:^1^1
	;;^UTILITY(U,$J,358.3,214,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,215,0)
	;;=27250^^25^20^41
	;;^UTILITY(U,$J,358.3,215,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,215,1,2,0)
	;;=2^Reduce hip dislocation
	;;^UTILITY(U,$J,358.3,215,1,3,0)
	;;=3^27250
	;;^UTILITY(U,$J,358.3,216,0)
	;;=42^1^25^20^42^Amputate toe:^1^1
	;;^UTILITY(U,$J,358.3,216,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,217,0)
	;;=28820^^25^20^43
	;;^UTILITY(U,$J,358.3,217,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,217,1,2,0)
	;;=2^Metatarsophalangeal joint
	;;^UTILITY(U,$J,358.3,217,1,3,0)
	;;=3^28820
	;;^UTILITY(U,$J,358.3,218,0)
	;;=28825^^25^20^44
	;;^UTILITY(U,$J,358.3,218,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,218,1,2,0)
	;;=2^Interphalangeal joint
	;;^UTILITY(U,$J,358.3,218,1,3,0)
	;;=3^28825
	;;^UTILITY(U,$J,358.3,219,0)
	;;=45^1^25^20^45^Removal pin/wire:^1^1
	;;^UTILITY(U,$J,358.3,219,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,220,0)
	;;=20670^^25^20^46
	;;^UTILITY(U,$J,358.3,220,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,220,1,2,0)
	;;=2^Superficial
	;;^UTILITY(U,$J,358.3,220,1,3,0)
	;;=3^20670
	;;^UTILITY(U,$J,358.3,221,0)
	;;=20680^^25^20^47
	;;^UTILITY(U,$J,358.3,221,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,221,1,2,0)
	;;=2^Deep
	;;^UTILITY(U,$J,358.3,221,1,3,0)
	;;=3^20680
	;;^UTILITY(U,$J,358.3,222,0)
	;;=48^1^25^20^48^Urology:^1^1
	;;^UTILITY(U,$J,358.3,222,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,223,0)
	;;=54700^^25^20^49
	;;^UTILITY(U,$J,358.3,223,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,223,1,2,0)
	;;=2^I&D scrotal abscess
	;;^UTILITY(U,$J,358.3,223,1,3,0)
	;;=3^54700
	;;^UTILITY(U,$J,358.3,224,0)
	;;=55250^^25^20^50
	;;^UTILITY(U,$J,358.3,224,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,224,1,2,0)
	;;=2^Vasectomy
	;;^UTILITY(U,$J,358.3,224,1,3,0)
	;;=3^55250
	;;^UTILITY(U,$J,358.3,225,0)
	;;=51^1^25^20^51^Destruction penile wart:^1^1
	;;^UTILITY(U,$J,358.3,225,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,226,0)
	;;=54055^^25^20^53
	;;^UTILITY(U,$J,358.3,226,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,226,1,2,0)
	;;=2^Fulguration penile wart
	;;^UTILITY(U,$J,358.3,226,1,3,0)
	;;=3^54055
	;;^UTILITY(U,$J,358.3,227,0)
	;;=54065^^25^20^54
	;;^UTILITY(U,$J,358.3,227,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,227,1,2,0)
	;;=2^Extensive,any method
	;;^UTILITY(U,$J,358.3,227,1,3,0)
	;;=3^54065
	;;^UTILITY(U,$J,358.3,228,0)
	;;=11740^^25^20^25
	;;^UTILITY(U,$J,358.3,228,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,228,1,2,0)
	;;=2^Evacuation hematoma
	;;^UTILITY(U,$J,358.3,228,1,3,0)
	;;=3^11740
	;;^UTILITY(U,$J,358.3,229,0)
	;;=11700^^25^20^24
	;;^UTILITY(U,$J,358.3,229,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,229,1,2,0)
	;;=2^Debridement, manual, 5 or less
	;;^UTILITY(U,$J,358.3,229,1,3,0)
	;;=3^11700
	;;^UTILITY(U,$J,358.3,230,0)
	;;=54050^^25^20^52
	;;^UTILITY(U,$J,358.3,230,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,230,1,2,0)
	;;=2^Simple, Chemical
	;;^UTILITY(U,$J,358.3,230,1,3,0)
	;;=3^54050
	;;^UTILITY(U,$J,358.3,231,0)
	;;=600.^^29^21^1
	;;^UTILITY(U,$J,358.3,231,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,231,1,3,0)
	;;=3^BPH

IBDEI00O
IBDEI00O	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,231,1,4,0)
	;;=4^600.
	;;^UTILITY(U,$J,358.3,232,0)
	;;=366.9^^29^21^3
	;;^UTILITY(U,$J,358.3,232,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,232,1,3,0)
	;;=3^Cataract
	;;^UTILITY(U,$J,358.3,232,1,4,0)
	;;=4^366.9
	;;^UTILITY(U,$J,358.3,233,0)
	;;=211.3^^29^21^4
	;;^UTILITY(U,$J,358.3,233,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,233,1,3,0)
	;;=3^Colon polyps
	;;^UTILITY(U,$J,358.3,233,1,4,0)
	;;=4^211.3
	;;^UTILITY(U,$J,358.3,234,0)
	;;=078.11^^29^21^5
	;;^UTILITY(U,$J,358.3,234,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,234,1,3,0)
	;;=3^Condyloma Acuminatum
	;;^UTILITY(U,$J,358.3,234,1,4,0)
	;;=4^078.11
	;;^UTILITY(U,$J,358.3,235,0)
	;;=690.^^29^21^6
	;;^UTILITY(U,$J,358.3,235,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,235,1,3,0)
	;;=3^Dermatitis, seborrheic
	;;^UTILITY(U,$J,358.3,235,1,4,0)
	;;=4^690.
	;;^UTILITY(U,$J,358.3,236,0)
	;;=707.0^^29^21^7
	;;^UTILITY(U,$J,358.3,236,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,236,1,3,0)
	;;=3^Decubitus ulcer
	;;^UTILITY(U,$J,358.3,236,1,4,0)
	;;=4^707.0
	;;^UTILITY(U,$J,358.3,237,0)
	;;=530.10^^29^21^8
	;;^UTILITY(U,$J,358.3,237,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,237,1,3,0)
	;;=3^Esophagitis
	;;^UTILITY(U,$J,358.3,237,1,4,0)
	;;=4^530.10
	;;^UTILITY(U,$J,358.3,238,0)
	;;=919.6^^29^21^9
	;;^UTILITY(U,$J,358.3,238,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,238,1,3,0)
	;;=3^FB,superficial
	;;^UTILITY(U,$J,358.3,238,1,4,0)
	;;=4^919.6
	;;^UTILITY(U,$J,358.3,239,0)
	;;=228.01^^29^21^10
	;;^UTILITY(U,$J,358.3,239,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,239,1,3,0)
	;;=3^Hemangioma, skin & subcutaneous
	;;^UTILITY(U,$J,358.3,239,1,4,0)
	;;=4^228.01
	;;^UTILITY(U,$J,358.3,240,0)
	;;=924.9^^29^21^11
	;;^UTILITY(U,$J,358.3,240,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,240,1,3,0)
	;;=3^Hematoma, traumatic, site unspec.
	;;^UTILITY(U,$J,358.3,240,1,4,0)
	;;=4^924.9
	;;^UTILITY(U,$J,358.3,241,0)
	;;=455.6^^29^21^12
	;;^UTILITY(U,$J,358.3,241,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,241,1,3,0)
	;;=3^Hemmorrhoids
	;;^UTILITY(U,$J,358.3,241,1,4,0)
	;;=4^455.6
	;;^UTILITY(U,$J,358.3,242,0)
	;;=553.9^^29^21^12
	;;^UTILITY(U,$J,358.3,242,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,242,1,3,0)
	;;=3^Hernia, hiatal
	;;^UTILITY(U,$J,358.3,242,1,4,0)
	;;=4^553.9
	;;^UTILITY(U,$J,358.3,243,0)
	;;=550.90^^29^21^14
	;;^UTILITY(U,$J,358.3,243,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,243,1,3,0)
	;;=3^Hernia, inguinal, unilateral
	;;^UTILITY(U,$J,358.3,243,1,4,0)
	;;=4^550.90
	;;^UTILITY(U,$J,358.3,244,0)
	;;=835.00^^29^21^15
	;;^UTILITY(U,$J,358.3,244,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,244,1,3,0)
	;;=3^Hip dislocation
	;;^UTILITY(U,$J,358.3,244,1,4,0)
	;;=4^835.00
	;;^UTILITY(U,$J,358.3,245,0)
	;;=697.0^^29^21^16
	;;^UTILITY(U,$J,358.3,245,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,245,1,3,0)
	;;=3^Lichen planus
	;;^UTILITY(U,$J,358.3,245,1,4,0)
	;;=4^697.0
	;;^UTILITY(U,$J,358.3,246,0)
	;;=214.1^^29^21^17
	;;^UTILITY(U,$J,358.3,246,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,246,1,3,0)
	;;=3^Lipoma, skin/subc (non-face)
	;;^UTILITY(U,$J,358.3,246,1,4,0)
	;;=4^214.1
	;;^UTILITY(U,$J,358.3,247,0)
	;;=078.0^^29^21^18
	;;^UTILITY(U,$J,358.3,247,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,247,1,3,0)
	;;=3^Molluscum contagiosum
	;;^UTILITY(U,$J,358.3,247,1,4,0)
	;;=4^078.0
	;;^UTILITY(U,$J,358.3,248,0)
	;;=V67.0^^29^21^19
	;;^UTILITY(U,$J,358.3,248,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,248,1,3,0)
	;;=3^Post-Op exam
	;;^UTILITY(U,$J,358.3,248,1,4,0)
	;;=4^V67.0
	;;^UTILITY(U,$J,358.3,249,0)
	;;=569.3^^29^21^20
	;;^UTILITY(U,$J,358.3,249,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,249,1,3,0)
	;;=3^Rectal bleeding
	;;^UTILITY(U,$J,358.3,249,1,4,0)
	;;=4^569.3
	;;^UTILITY(U,$J,358.3,250,0)
	;;=709.2^^29^21^21
	;;^UTILITY(U,$J,358.3,250,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,250,1,3,0)
	;;=3^Scar, NOS
	;;^UTILITY(U,$J,358.3,250,1,4,0)
	;;=4^709.2
	;;^UTILITY(U,$J,358.3,251,0)
	;;=701.4^^29^21^22
	;;^UTILITY(U,$J,358.3,251,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,251,1,3,0)
	;;=3^Scar, hypertrophic
	;;^UTILITY(U,$J,358.3,251,1,4,0)
	;;=4^701.4
	;;^UTILITY(U,$J,358.3,252,0)
	;;=706.2^^29^21^24
	;;^UTILITY(U,$J,358.3,252,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,252,1,3,0)
	;;=3^Sebaceous cyst
	;;^UTILITY(U,$J,358.3,252,1,4,0)
	;;=4^706.2
	;;^UTILITY(U,$J,358.3,253,0)
	;;=709.9^^29^21^25
	;;^UTILITY(U,$J,358.3,253,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,253,1,3,0)
	;;=3^Skin lesion, NOS
	;;^UTILITY(U,$J,358.3,253,1,4,0)
	;;=4^709.9
	;;^UTILITY(U,$J,358.3,254,0)
	;;=701.9^^29^21^26
	;;^UTILITY(U,$J,358.3,254,1,0)
	;;=^358.31IA^4^2

IBDEI00P
IBDEI00P	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,254,1,3,0)
	;;=3^Skin tag
	;;^UTILITY(U,$J,358.3,254,1,4,0)
	;;=4^701.9
	;;^UTILITY(U,$J,358.3,255,0)
	;;=780.57^^29^21^27
	;;^UTILITY(U,$J,358.3,255,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,255,1,3,0)
	;;=3^Sleep apnea
	;;^UTILITY(U,$J,358.3,255,1,4,0)
	;;=4^780.57
	;;^UTILITY(U,$J,358.3,256,0)
	;;=454.0^^29^21^28
	;;^UTILITY(U,$J,358.3,256,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,256,1,3,0)
	;;=3^Varicose ulcer
	;;^UTILITY(U,$J,358.3,256,1,4,0)
	;;=4^454.0
	;;^UTILITY(U,$J,358.3,257,0)
	;;=998.3^^29^21^30
	;;^UTILITY(U,$J,358.3,257,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,257,1,3,0)
	;;=3^Wound dehiscence, operative
	;;^UTILITY(U,$J,358.3,257,1,4,0)
	;;=4^998.3
	;;^UTILITY(U,$J,358.3,258,0)
	;;=414.00^^29^21^2
	;;^UTILITY(U,$J,358.3,258,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,258,1,3,0)
	;;=3^CAD
	;;^UTILITY(U,$J,358.3,258,1,4,0)
	;;=4^414.00
	;;^UTILITY(U,$J,358.3,259,0)
	;;=702.19^^29^21^23
	;;^UTILITY(U,$J,358.3,259,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,259,1,3,0)
	;;=3^Seborrheic keratosis
	;;^UTILITY(U,$J,358.3,259,1,4,0)
	;;=4^702.19
	;;^UTILITY(U,$J,358.3,260,0)
	;;=078.10^^29^21^29
	;;^UTILITY(U,$J,358.3,260,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,260,1,3,0)
	;;=3^Verruca vulgaris
	;;^UTILITY(U,$J,358.3,260,1,4,0)
	;;=4^078.10
	;;^UTILITY(U,$J,358.3,261,0)
	;;=1^^30^22^1
	;;^UTILITY(U,$J,358.3,261,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,261,1,1,0)
	;;=1^No-show
	;;^UTILITY(U,$J,358.3,262,0)
	;;=2^^30^22^2
	;;^UTILITY(U,$J,358.3,262,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,262,1,1,0)
	;;=1^Cancel
	;;^UTILITY(U,$J,358.3,263,0)
	;;=3^^30^22^3
	;;^UTILITY(U,$J,358.3,263,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,263,1,1,0)
	;;=1^Rescheduled
	;;^UTILITY(U,$J,358.3,264,0)
	;;=99201^^31^23^1
	;;^UTILITY(U,$J,358.3,264,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,264,1,1,0)
	;;=1^Brief Visit         1-15 Min
	;;^UTILITY(U,$J,358.3,265,0)
	;;=99202^^31^23^2
	;;^UTILITY(U,$J,358.3,265,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,265,1,1,0)
	;;=1^Limited Exam        16-25 Min
	;;^UTILITY(U,$J,358.3,266,0)
	;;=99203^^31^23^3
	;;^UTILITY(U,$J,358.3,266,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,266,1,1,0)
	;;=1^Intermediate Exam   26-35 Min
	;;^UTILITY(U,$J,358.3,267,0)
	;;=99204^^31^23^4
	;;^UTILITY(U,$J,358.3,267,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,267,1,1,0)
	;;=1^Extended Exam       36-50 Min
	;;^UTILITY(U,$J,358.3,268,0)
	;;=99205^^31^23^5
	;;^UTILITY(U,$J,358.3,268,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,268,1,1,0)
	;;=1^Comprehensive Exam  51+ Min
	;;^UTILITY(U,$J,358.3,269,0)
	;;=99211^^31^24^1
	;;^UTILITY(U,$J,358.3,269,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,269,1,1,0)
	;;=1^Brief Exam          1-5 Min
	;;^UTILITY(U,$J,358.3,270,0)
	;;=99212^^31^24^2
	;;^UTILITY(U,$J,358.3,270,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,270,1,1,0)
	;;=1^Limited Exam        6-10 Min
	;;^UTILITY(U,$J,358.3,271,0)
	;;=99213^^31^24^3
	;;^UTILITY(U,$J,358.3,271,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,271,1,1,0)
	;;=1^Intermediate Exam   11-19 Min
	;;^UTILITY(U,$J,358.3,272,0)
	;;=99214^^31^24^4
	;;^UTILITY(U,$J,358.3,272,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,272,1,1,0)
	;;=1^Extended Exam       20-30 Min
	;;^UTILITY(U,$J,358.3,273,0)
	;;=99215^^31^24^5
	;;^UTILITY(U,$J,358.3,273,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,273,1,1,0)
	;;=1^Comprehensive Exam  40+ Min
	;;^UTILITY(U,$J,358.3,274,0)
	;;=99241^^31^25^1
	;;^UTILITY(U,$J,358.3,274,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,274,1,1,0)
	;;=1^Brief Visit         1-20 Min
	;;^UTILITY(U,$J,358.3,275,0)
	;;=99242^^31^25^2
	;;^UTILITY(U,$J,358.3,275,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,275,1,1,0)
	;;=1^Limited Visit       21-35 Min
	;;^UTILITY(U,$J,358.3,276,0)
	;;=99243^^31^25^3
	;;^UTILITY(U,$J,358.3,276,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,276,1,1,0)
	;;=1^Intermediate Visit  35-50 Min
	;;^UTILITY(U,$J,358.3,277,0)
	;;=99244^^31^25^4
	;;^UTILITY(U,$J,358.3,277,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,277,1,1,0)
	;;=1^Extended Visit      51-60 Min
	;;^UTILITY(U,$J,358.3,278,0)
	;;=99245^^31^25^5
	;;^UTILITY(U,$J,358.3,278,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,278,1,1,0)
	;;=1^Comprehensive Visit 71+ Min
	;;^UTILITY(U,$J,358.3,279,0)
	;;=92960^^37^26^10
	;;^UTILITY(U,$J,358.3,279,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,279,1,2,0)
	;;=2^Cardioversion
	;;^UTILITY(U,$J,358.3,279,1,3,0)
	;;=3^92960
	;;^UTILITY(U,$J,358.3,280,0)
	;;=93000^^37^26^20
	;;^UTILITY(U,$J,358.3,280,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,280,1,2,0)
	;;=2^EKG

IBDEI00Q
IBDEI00Q	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,280,1,3,0)
	;;=3^93000
	;;^UTILITY(U,$J,358.3,281,0)
	;;=33010^^37^26^30
	;;^UTILITY(U,$J,358.3,281,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,281,1,2,0)
	;;=2^Pericardiocentesis
	;;^UTILITY(U,$J,358.3,281,1,3,0)
	;;=3^33010
	;;^UTILITY(U,$J,358.3,282,0)
	;;=32095^^37^26^40
	;;^UTILITY(U,$J,358.3,282,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,282,1,2,0)
	;;=2^Thoracotomy
	;;^UTILITY(U,$J,358.3,282,1,3,0)
	;;=3^32095
	;;^UTILITY(U,$J,358.3,283,0)
	;;=1^1^37^27^10^I&D^1^0
	;;^UTILITY(U,$J,358.3,283,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,284,0)
	;;=11^1^37^27^30^Simple Repair, wounds^1^1
	;;^UTILITY(U,$J,358.3,284,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,285,0)
	;;=31^1^37^27^70^Soft Tissue:^1^1
	;;^UTILITY(U,$J,358.3,285,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,286,0)
	;;=71^1^37^27^110^ ^^1
	;;^UTILITY(U,$J,358.3,286,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,287,0)
	;;=12001^^37^27^40
	;;^UTILITY(U,$J,358.3,287,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,287,1,2,0)
	;;=2^Less than 2.5 cm
	;;^UTILITY(U,$J,358.3,287,1,3,0)
	;;=3^12001
	;;^UTILITY(U,$J,358.3,288,0)
	;;=12002^^37^27^50
	;;^UTILITY(U,$J,358.3,288,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,288,1,2,0)
	;;=2^2.6 - 7.5 cm
	;;^UTILITY(U,$J,358.3,288,1,3,0)
	;;=3^12002
	;;^UTILITY(U,$J,358.3,289,0)
	;;=12004^^37^27^60
	;;^UTILITY(U,$J,358.3,289,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,289,1,2,0)
	;;=2^Greater than 7.5 cm
	;;^UTILITY(U,$J,358.3,289,1,3,0)
	;;=3^12004
	;;^UTILITY(U,$J,358.3,290,0)
	;;=16000^^37^27^80
	;;^UTILITY(U,$J,358.3,290,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,290,1,2,0)
	;;=2^Burns 1 * Local Treatment
	;;^UTILITY(U,$J,358.3,290,1,3,0)
	;;=3^16000
	;;^UTILITY(U,$J,358.3,291,0)
	;;=16015^^37^27^90
	;;^UTILITY(U,$J,358.3,291,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,291,1,2,0)
	;;=2^Dressings Medium
	;;^UTILITY(U,$J,358.3,291,1,3,0)
	;;=3^16015
	;;^UTILITY(U,$J,358.3,292,0)
	;;=16010^^37^27^100
	;;^UTILITY(U,$J,358.3,292,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,292,1,2,0)
	;;=2^Dressings Small
	;;^UTILITY(U,$J,358.3,292,1,3,0)
	;;=3^16010
	;;^UTILITY(U,$J,358.3,293,0)
	;;=36430^^37^27^120
	;;^UTILITY(U,$J,358.3,293,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,293,1,2,0)
	;;=2^Transfusion
	;;^UTILITY(U,$J,358.3,293,1,3,0)
	;;=3^36430
	;;^UTILITY(U,$J,358.3,294,0)
	;;=36415^^37^27^130
	;;^UTILITY(U,$J,358.3,294,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,294,1,2,0)
	;;=2^Venipuncture
	;;^UTILITY(U,$J,358.3,294,1,3,0)
	;;=3^36415
	;;^UTILITY(U,$J,358.3,295,0)
	;;=10060^^37^27^20
	;;^UTILITY(U,$J,358.3,295,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,295,1,2,0)
	;;=2^Abcess
	;;^UTILITY(U,$J,358.3,295,1,3,0)
	;;=3^10060
	;;^UTILITY(U,$J,358.3,296,0)
	;;=53670^^37^28^10
	;;^UTILITY(U,$J,358.3,296,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,296,1,2,0)
	;;=2^Foley Catherter
	;;^UTILITY(U,$J,358.3,296,1,3,0)
	;;=3^53670
	;;^UTILITY(U,$J,358.3,297,0)
	;;=69210^^37^29^10
	;;^UTILITY(U,$J,358.3,297,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,297,1,2,0)
	;;=2^Removal Impacted Cerumen
	;;^UTILITY(U,$J,358.3,297,1,3,0)
	;;=3^69210
	;;^UTILITY(U,$J,358.3,298,0)
	;;=30901^^37^29^20
	;;^UTILITY(U,$J,358.3,298,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,298,1,2,0)
	;;=2^Anterior, Simple
	;;^UTILITY(U,$J,358.3,298,1,3,0)
	;;=3^30901
	;;^UTILITY(U,$J,358.3,299,0)
	;;=21^1^37^29^15^Nasal Cautering and Packing:^1^0
	;;^UTILITY(U,$J,358.3,299,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,300,0)
	;;=30903^^37^29^30
	;;^UTILITY(U,$J,358.3,300,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,300,1,2,0)
	;;=2^Anterior, complex
	;;^UTILITY(U,$J,358.3,300,1,3,0)
	;;=3^30903
	;;^UTILITY(U,$J,358.3,301,0)
	;;=30905^^37^29^40
	;;^UTILITY(U,$J,358.3,301,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,301,1,2,0)
	;;=2^Posterior
	;;^UTILITY(U,$J,358.3,301,1,3,0)
	;;=3^30905
	;;^UTILITY(U,$J,358.3,302,0)
	;;=65205^^37^30^10
	;;^UTILITY(U,$J,358.3,302,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,302,1,2,0)
	;;=2^Foreign Body Removal
	;;^UTILITY(U,$J,358.3,302,1,3,0)
	;;=3^65205
	;;^UTILITY(U,$J,358.3,303,0)
	;;=20605^^37^31^20
	;;^UTILITY(U,$J,358.3,303,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,303,1,2,0)
	;;=2^Intermediate
	;;^UTILITY(U,$J,358.3,303,1,3,0)
	;;=3^20605
	;;^UTILITY(U,$J,358.3,304,0)
	;;=21^1^37^31^10^Arthrocentesis^1^0
	;;^UTILITY(U,$J,358.3,304,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,305,0)
	;;=20610^^37^31^30
	;;^UTILITY(U,$J,358.3,305,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,305,1,2,0)
	;;=2^Major Joint (shoulder/Knee)
	;;^UTILITY(U,$J,358.3,305,1,3,0)
	;;=3^20610
	;;^UTILITY(U,$J,358.3,306,0)
	;;=20600^^37^31^40

IBDEI00R
IBDEI00R	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,306,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,306,1,2,0)
	;;=2^Small Joint (Phalanx)
	;;^UTILITY(U,$J,358.3,306,1,3,0)
	;;=3^20600
	;;^UTILITY(U,$J,358.3,307,0)
	;;=41^1^37^31^50^Dislocation Reg. Manipulation:^1^1
	;;^UTILITY(U,$J,358.3,307,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,308,0)
	;;=24600^^37^31^60
	;;^UTILITY(U,$J,358.3,308,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,308,1,2,0)
	;;=2^Elbow
	;;^UTILITY(U,$J,358.3,308,1,3,0)
	;;=3^24600
	;;^UTILITY(U,$J,358.3,309,0)
	;;=26770^^37^31^80
	;;^UTILITY(U,$J,358.3,309,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,309,1,2,0)
	;;=2^Phalanx
	;;^UTILITY(U,$J,358.3,309,1,3,0)
	;;=3^26770
	;;^UTILITY(U,$J,358.3,310,0)
	;;=24640^^37^31^90
	;;^UTILITY(U,$J,358.3,310,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,310,1,2,0)
	;;=2^Radial Head
	;;^UTILITY(U,$J,358.3,310,1,3,0)
	;;=3^24640
	;;^UTILITY(U,$J,358.3,311,0)
	;;=23650^^37^31^100
	;;^UTILITY(U,$J,358.3,311,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,311,1,2,0)
	;;=2^Shoulder
	;;^UTILITY(U,$J,358.3,311,1,3,0)
	;;=3^23650
	;;^UTILITY(U,$J,358.3,312,0)
	;;=21480^^37^31^110
	;;^UTILITY(U,$J,358.3,312,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,312,1,2,0)
	;;=2^Temporomandibular
	;;^UTILITY(U,$J,358.3,312,1,3,0)
	;;=3^21480
	;;^UTILITY(U,$J,358.3,313,0)
	;;=111^1^37^31^120^ ^^1
	;;^UTILITY(U,$J,358.3,313,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,314,0)
	;;=29130^^37^31^130
	;;^UTILITY(U,$J,358.3,314,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,314,1,2,0)
	;;=2^Finger Splint
	;;^UTILITY(U,$J,358.3,314,1,3,0)
	;;=3^29130
	;;^UTILITY(U,$J,358.3,315,0)
	;;=29125^^37^31^140
	;;^UTILITY(U,$J,358.3,315,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,315,1,2,0)
	;;=2^Forearm Splint
	;;^UTILITY(U,$J,358.3,315,1,3,0)
	;;=3^29125
	;;^UTILITY(U,$J,358.3,316,0)
	;;=20550^^37^31^150
	;;^UTILITY(U,$J,358.3,316,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,316,1,2,0)
	;;=2^Injection Tendon Sheath
	;;^UTILITY(U,$J,358.3,316,1,3,0)
	;;=3^20550
	;;^UTILITY(U,$J,358.3,317,0)
	;;=151^1^37^31^160^Ligament/Trigger^1^0
	;;^UTILITY(U,$J,358.3,317,1,0)
	;;=^358.31IA^3^0
	;;^UTILITY(U,$J,358.3,318,0)
	;;=21315^^37^31^70
	;;^UTILITY(U,$J,358.3,318,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,318,1,2,0)
	;;=2^Nasal
	;;^UTILITY(U,$J,358.3,318,1,3,0)
	;;=3^21315
	;;^UTILITY(U,$J,358.3,319,0)
	;;=99070^^37^32^10
	;;^UTILITY(U,$J,358.3,319,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,319,1,2,0)
	;;=2^Admin Oxygen
	;;^UTILITY(U,$J,358.3,319,1,3,0)
	;;=3^99070
	;;^UTILITY(U,$J,358.3,320,0)
	;;=94640^^37^32^20
	;;^UTILITY(U,$J,358.3,320,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,320,1,2,0)
	;;=2^Inhalation Therapy
	;;^UTILITY(U,$J,358.3,320,1,3,0)
	;;=3^94640
	;;^UTILITY(U,$J,358.3,321,0)
	;;=94010^^37^32^30
	;;^UTILITY(U,$J,358.3,321,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,321,1,2,0)
	;;=2^Peak Flow Spirometry
	;;^UTILITY(U,$J,358.3,321,1,3,0)
	;;=3^94010
	;;^UTILITY(U,$J,358.3,322,0)
	;;=789.00^^38^34^10
	;;^UTILITY(U,$J,358.3,322,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,322,1,3,0)
	;;=3^Abdominal Pain
	;;^UTILITY(U,$J,358.3,322,1,4,0)
	;;=4^789.00
	;;^UTILITY(U,$J,358.3,323,0)
	;;=794.31^^38^34^20
	;;^UTILITY(U,$J,358.3,323,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,323,1,3,0)
	;;=3^Abnormal EKG
	;;^UTILITY(U,$J,358.3,323,1,4,0)
	;;=4^794.31
	;;^UTILITY(U,$J,358.3,324,0)
	;;=919.0^^38^34^30
	;;^UTILITY(U,$J,358.3,324,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,324,1,3,0)
	;;=3^Abrasion
	;;^UTILITY(U,$J,358.3,324,1,4,0)
	;;=4^919.0
	;;^UTILITY(U,$J,358.3,325,0)
	;;=682.9^^38^34^40
	;;^UTILITY(U,$J,358.3,325,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,325,1,3,0)
	;;=3^Abscess
	;;^UTILITY(U,$J,358.3,325,1,4,0)
	;;=4^682.9
	;;^UTILITY(U,$J,358.3,326,0)
	;;=995.2^^38^34^50
	;;^UTILITY(U,$J,358.3,326,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,326,1,3,0)
	;;=3^Adverse Drug Reaction
	;;^UTILITY(U,$J,358.3,326,1,4,0)
	;;=4^995.2
	;;^UTILITY(U,$J,358.3,327,0)
	;;=042.^^38^34^60
	;;^UTILITY(U,$J,358.3,327,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,327,1,3,0)
	;;=3^AIDS/ARC
	;;^UTILITY(U,$J,358.3,327,1,4,0)
	;;=4^042.
	;;^UTILITY(U,$J,358.3,328,0)
	;;=305.00^^38^34^70
	;;^UTILITY(U,$J,358.3,328,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,328,1,3,0)
	;;=3^Alcoholic, intoxication
	;;^UTILITY(U,$J,358.3,328,1,4,0)
	;;=4^305.00
	;;^UTILITY(U,$J,358.3,329,0)
	;;=303.90^^38^34^80
	;;^UTILITY(U,$J,358.3,329,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,329,1,3,0)
	;;=3^Alcoholism, Chronic
	;;^UTILITY(U,$J,358.3,329,1,4,0)
	;;=4^303.90
	;;^UTILITY(U,$J,358.3,330,0)
	;;=995.3^^38^34^90
	;;^UTILITY(U,$J,358.3,330,1,0)
	;;=^358.31IA^4^2

IBDEI00S
IBDEI00S	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,330,1,3,0)
	;;=3^Allergic Reaction
	;;^UTILITY(U,$J,358.3,330,1,4,0)
	;;=4^995.3
	;;^UTILITY(U,$J,358.3,331,0)
	;;=285.9^^38^34^100
	;;^UTILITY(U,$J,358.3,331,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,331,1,3,0)
	;;=3^Anemia
	;;^UTILITY(U,$J,358.3,331,1,4,0)
	;;=4^285.9
	;;^UTILITY(U,$J,358.3,332,0)
	;;=413.9^^38^35^10
	;;^UTILITY(U,$J,358.3,332,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,332,1,3,0)
	;;=3^Stable
	;;^UTILITY(U,$J,358.3,332,1,4,0)
	;;=4^413.9
	;;^UTILITY(U,$J,358.3,333,0)
	;;=411.1^^38^35^20
	;;^UTILITY(U,$J,358.3,333,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,333,1,3,0)
	;;=3^Unstable
	;;^UTILITY(U,$J,358.3,333,1,4,0)
	;;=4^411.1
	;;^UTILITY(U,$J,358.3,334,0)
	;;=21^1^38^35^30^ ^^1
	;;^UTILITY(U,$J,358.3,334,1,0)
	;;=^358.31IA^4^0
	;;^UTILITY(U,$J,358.3,335,0)
	;;=783.0^^38^35^40
	;;^UTILITY(U,$J,358.3,335,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,335,1,3,0)
	;;=3^Anorexia
	;;^UTILITY(U,$J,358.3,335,1,4,0)
	;;=4^783.0
	;;^UTILITY(U,$J,358.3,336,0)
	;;=719.40^^38^35^60
	;;^UTILITY(U,$J,358.3,336,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,336,1,3,0)
	;;=3^Arthralgia
	;;^UTILITY(U,$J,358.3,336,1,4,0)
	;;=4^719.40
	;;^UTILITY(U,$J,358.3,337,0)
	;;=540.9^^38^35^50
	;;^UTILITY(U,$J,358.3,337,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,337,1,3,0)
	;;=3^Appendicitis, Acute
	;;^UTILITY(U,$J,358.3,337,1,4,0)
	;;=4^540.9
	;;^UTILITY(U,$J,358.3,338,0)
	;;=715.90^^38^36^10
	;;^UTILITY(U,$J,358.3,338,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,338,1,3,0)
	;;=3^Osteo
	;;^UTILITY(U,$J,358.3,338,1,4,0)
	;;=4^715.90
	;;^UTILITY(U,$J,358.3,339,0)
	;;=714.0^^38^36^20
	;;^UTILITY(U,$J,358.3,339,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,339,1,3,0)
	;;=3^Rheumatoid
	;;^UTILITY(U,$J,358.3,339,1,4,0)
	;;=4^714.0
	;;^UTILITY(U,$J,358.3,340,0)
	;;=21^1^38^36^30^ ^^1
	;;^UTILITY(U,$J,358.3,340,1,0)
	;;=^358.31IA^4^0
	;;^UTILITY(U,$J,358.3,341,0)
	;;=789.5^^38^36^40
	;;^UTILITY(U,$J,358.3,341,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,341,1,3,0)
	;;=3^Ascites
	;;^UTILITY(U,$J,358.3,341,1,4,0)
	;;=4^789.5
	;;^UTILITY(U,$J,358.3,342,0)
	;;=414.00^^38^36^50
	;;^UTILITY(U,$J,358.3,342,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,342,1,3,0)
	;;=3^ASHD
	;;^UTILITY(U,$J,358.3,342,1,4,0)
	;;=4^414.00
	;;^UTILITY(U,$J,358.3,343,0)
	;;=493.90^^38^36^60
	;;^UTILITY(U,$J,358.3,343,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,343,1,3,0)
	;;=3^Asthma
	;;^UTILITY(U,$J,358.3,343,1,4,0)
	;;=4^493.90
	;;^UTILITY(U,$J,358.3,344,0)
	;;=427.31^^38^36^70
	;;^UTILITY(U,$J,358.3,344,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,344,1,3,0)
	;;=3^Atrial Fibrillation
	;;^UTILITY(U,$J,358.3,344,1,4,0)
	;;=4^427.31
	;;^UTILITY(U,$J,358.3,345,0)
	;;=786.50^^38^36^80
	;;^UTILITY(U,$J,358.3,345,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,345,1,3,0)
	;;=3^Atypical Chest Pain
	;;^UTILITY(U,$J,358.3,345,1,4,0)
	;;=4^786.50
	;;^UTILITY(U,$J,358.3,346,0)
	;;=883.0^^38^36^90
	;;^UTILITY(U,$J,358.3,346,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,346,1,3,0)
	;;=3^Avulsion, Fingernail Comp
	;;^UTILITY(U,$J,358.3,346,1,4,0)
	;;=4^883.0
	;;^UTILITY(U,$J,358.3,347,0)
	;;=879.8^^38^37^10
	;;^UTILITY(U,$J,358.3,347,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,347,1,3,0)
	;;=3^Animal
	;;^UTILITY(U,$J,358.3,347,1,4,0)
	;;=4^879.8
	;;^UTILITY(U,$J,358.3,348,0)
	;;=919.4^^38^37^20
	;;^UTILITY(U,$J,358.3,348,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,348,1,3,0)
	;;=3^Insect
	;;^UTILITY(U,$J,358.3,348,1,4,0)
	;;=4^919.4
	;;^UTILITY(U,$J,358.3,349,0)
	;;=578.9^^38^38^10
	;;^UTILITY(U,$J,358.3,349,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,349,1,3,0)
	;;=3^Bleeding, GI
	;;^UTILITY(U,$J,358.3,349,1,4,0)
	;;=4^578.9
	;;^UTILITY(U,$J,358.3,350,0)
	;;=368.8^^38^38^20
	;;^UTILITY(U,$J,358.3,350,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,350,1,3,0)
	;;=3^Blurred Vision
	;;^UTILITY(U,$J,358.3,350,1,4,0)
	;;=4^368.8
	;;^UTILITY(U,$J,358.3,351,0)
	;;=600.^^38^38^30
	;;^UTILITY(U,$J,358.3,351,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,351,1,3,0)
	;;=3^BPH
	;;^UTILITY(U,$J,358.3,351,1,4,0)
	;;=4^600.
	;;^UTILITY(U,$J,358.3,352,0)
	;;=466.0^^38^38^40
	;;^UTILITY(U,$J,358.3,352,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,352,1,3,0)
	;;=3^Bronchitis, acute
	;;^UTILITY(U,$J,358.3,352,1,4,0)
	;;=4^466.0
	;;^UTILITY(U,$J,358.3,353,0)
	;;=949.1^^38^39^10
	;;^UTILITY(U,$J,358.3,353,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,353,1,3,0)
	;;=3^First Degree
	;;^UTILITY(U,$J,358.3,353,1,4,0)
	;;=4^949.1
	;;^UTILITY(U,$J,358.3,354,0)
	;;=949.2^^38^39^20
	;;^UTILITY(U,$J,358.3,354,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,354,1,3,0)
	;;=3^Second Degree

IBDEI00T
IBDEI00T	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,354,1,4,0)
	;;=4^949.2
	;;^UTILITY(U,$J,358.3,355,0)
	;;=949.3^^38^39^30
	;;^UTILITY(U,$J,358.3,355,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,355,1,3,0)
	;;=3^Third Degree
	;;^UTILITY(U,$J,358.3,355,1,4,0)
	;;=4^949.3
	;;^UTILITY(U,$J,358.3,356,0)
	;;=726.33^^38^40^10
	;;^UTILITY(U,$J,358.3,356,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,356,1,3,0)
	;;=3^Elbow
	;;^UTILITY(U,$J,358.3,356,1,4,0)
	;;=4^726.33
	;;^UTILITY(U,$J,358.3,357,0)
	;;=726.10^^38^40^20
	;;^UTILITY(U,$J,358.3,357,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,357,1,3,0)
	;;=3^Shoulder
	;;^UTILITY(U,$J,358.3,357,1,4,0)
	;;=4^726.10
	;;^UTILITY(U,$J,358.3,358,0)
	;;=21^1^38^40^30^ ^^1
	;;^UTILITY(U,$J,358.3,358,1,0)
	;;=^358.31IA^4^0
	;;^UTILITY(U,$J,358.3,359,0)
	;;=366.9^^38^41^10
	;;^UTILITY(U,$J,358.3,359,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,359,1,3,0)
	;;=3^Cataract(s)
	;;^UTILITY(U,$J,358.3,359,1,4,0)
	;;=4^366.9
	;;^UTILITY(U,$J,358.3,360,0)
	;;=427.5^^38^41^20
	;;^UTILITY(U,$J,358.3,360,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,360,1,3,0)
	;;=3^Cardiac Arrest
	;;^UTILITY(U,$J,358.3,360,1,4,0)
	;;=4^427.5
	;;^UTILITY(U,$J,358.3,361,0)
	;;=427.9^^38^41^30
	;;^UTILITY(U,$J,358.3,361,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,361,1,3,0)
	;;=3^Cardia Arrthythmia
	;;^UTILITY(U,$J,358.3,361,1,4,0)
	;;=4^427.9
	;;^UTILITY(U,$J,358.3,362,0)
	;;=850.9^^38^41^40
	;;^UTILITY(U,$J,358.3,362,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,362,1,3,0)
	;;=3^Cerebral Concussion
	;;^UTILITY(U,$J,358.3,362,1,4,0)
	;;=4^850.9
	;;^UTILITY(U,$J,358.3,363,0)
	;;=380.4^^38^41^50
	;;^UTILITY(U,$J,358.3,363,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,363,1,3,0)
	;;=3^Cerumen
	;;^UTILITY(U,$J,358.3,363,1,4,0)
	;;=4^380.4
	;;^UTILITY(U,$J,358.3,364,0)
	;;=786.50^^38^41^60
	;;^UTILITY(U,$J,358.3,364,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,364,1,3,0)
	;;=3^Chest Pain
	;;^UTILITY(U,$J,358.3,364,1,4,0)
	;;=4^786.50
	;;^UTILITY(U,$J,358.3,365,0)
	;;=786.52^^38^41^70
	;;^UTILITY(U,$J,358.3,365,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,365,1,3,0)
	;;=3^Chest Wall Pain
	;;^UTILITY(U,$J,358.3,365,1,4,0)
	;;=4^786.52
	;;^UTILITY(U,$J,358.3,366,0)
	;;=428.0^^38^41^80
	;;^UTILITY(U,$J,358.3,366,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,366,1,3,0)
	;;=3^CHF
	;;^UTILITY(U,$J,358.3,366,1,4,0)
	;;=4^428.0
	;;^UTILITY(U,$J,358.3,367,0)
	;;=575.1^^38^41^90
	;;^UTILITY(U,$J,358.3,367,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,367,1,3,0)
	;;=3^Cholecystitis
	;;^UTILITY(U,$J,358.3,367,1,4,0)
	;;=4^575.1
	;;^UTILITY(U,$J,358.3,368,0)
	;;=571.9^^38^41^100
	;;^UTILITY(U,$J,358.3,368,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,368,1,3,0)
	;;=3^Cirrhosis
	;;^UTILITY(U,$J,358.3,368,1,4,0)
	;;=4^571.9
	;;^UTILITY(U,$J,358.3,369,0)
	;;=372.30^^38^41^110
	;;^UTILITY(U,$J,358.3,369,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,369,1,3,0)
	;;=3^Conjunctivitis
	;;^UTILITY(U,$J,358.3,369,1,4,0)
	;;=4^372.30
	;;^UTILITY(U,$J,358.3,370,0)
	;;=564.0^^38^41^120
	;;^UTILITY(U,$J,358.3,370,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,370,1,3,0)
	;;=3^Constipation
	;;^UTILITY(U,$J,358.3,370,1,4,0)
	;;=4^564.0
	;;^UTILITY(U,$J,358.3,371,0)
	;;=924.9^^38^41^130
	;;^UTILITY(U,$J,358.3,371,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,371,1,3,0)
	;;=3^Contusion
	;;^UTILITY(U,$J,358.3,371,1,4,0)
	;;=4^924.9
	;;^UTILITY(U,$J,358.3,372,0)
	;;=496.^^38^41^140
	;;^UTILITY(U,$J,358.3,372,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,372,1,3,0)
	;;=3^COPD
	;;^UTILITY(U,$J,358.3,372,1,4,0)
	;;=4^496.
	;;^UTILITY(U,$J,358.3,373,0)
	;;=733.6^^38^41^150
	;;^UTILITY(U,$J,358.3,373,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,373,1,3,0)
	;;=3^Costochodritis
	;;^UTILITY(U,$J,358.3,373,1,4,0)
	;;=4^733.6
	;;^UTILITY(U,$J,358.3,374,0)
	;;=436.^^38^41^160
	;;^UTILITY(U,$J,358.3,374,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,374,1,3,0)
	;;=3^CVA
	;;^UTILITY(U,$J,358.3,374,1,4,0)
	;;=4^436.
	;;^UTILITY(U,$J,358.3,375,0)
	;;=685.1^^38^41^170
	;;^UTILITY(U,$J,358.3,375,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,375,1,3,0)
	;;=3^Cyst, Pilonidal
	;;^UTILITY(U,$J,358.3,375,1,4,0)
	;;=4^685.1
	;;^UTILITY(U,$J,358.3,376,0)
	;;=276.5^^38^41^190
	;;^UTILITY(U,$J,358.3,376,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,376,1,3,0)
	;;=3^Dehydration
	;;^UTILITY(U,$J,358.3,376,1,4,0)
	;;=4^276.5
	;;^UTILITY(U,$J,358.3,377,0)
	;;=294.8^^38^41^200
	;;^UTILITY(U,$J,358.3,377,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,377,1,3,0)
	;;=3^Dementia
	;;^UTILITY(U,$J,358.3,377,1,4,0)
	;;=4^294.8
	;;^UTILITY(U,$J,358.3,378,0)
	;;=311.^^38^41^210
	;;^UTILITY(U,$J,358.3,378,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,378,1,3,0)
	;;=3^Depression

IBDEI00U
IBDEI00U	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,378,1,4,0)
	;;=4^311.
	;;^UTILITY(U,$J,358.3,379,0)
	;;=692.9^^38^41^220
	;;^UTILITY(U,$J,358.3,379,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,379,1,3,0)
	;;=3^Dermatitis
	;;^UTILITY(U,$J,358.3,379,1,4,0)
	;;=4^692.9
	;;^UTILITY(U,$J,358.3,380,0)
	;;=250.01^^38^41^230
	;;^UTILITY(U,$J,358.3,380,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,380,1,3,0)
	;;=3^Diabetes Mellitus Type I
	;;^UTILITY(U,$J,358.3,380,1,4,0)
	;;=4^250.01
	;;^UTILITY(U,$J,358.3,381,0)
	;;=250.00^^38^41^240
	;;^UTILITY(U,$J,358.3,381,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,381,1,3,0)
	;;=3^Diabetes Mellitus Type II
	;;^UTILITY(U,$J,358.3,381,1,4,0)
	;;=4^250.00
	;;^UTILITY(U,$J,358.3,382,0)
	;;=368.2^^38^41^250
	;;^UTILITY(U,$J,358.3,382,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,382,1,3,0)
	;;=3^Diplopia
	;;^UTILITY(U,$J,358.3,382,1,4,0)
	;;=4^368.2
	;;^UTILITY(U,$J,358.3,383,0)
	;;=839.8^^38^41^260
	;;^UTILITY(U,$J,358.3,383,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,383,1,3,0)
	;;=3^Dislocation
	;;^UTILITY(U,$J,358.3,383,1,4,0)
	;;=4^839.8
	;;^UTILITY(U,$J,358.3,384,0)
	;;=305.90^^38^41^270
	;;^UTILITY(U,$J,358.3,384,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,384,1,3,0)
	;;=3^Drug Abuse
	;;^UTILITY(U,$J,358.3,384,1,4,0)
	;;=4^305.90
	;;^UTILITY(U,$J,358.3,385,0)
	;;=536.8^^38^41^280
	;;^UTILITY(U,$J,358.3,385,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,385,1,3,0)
	;;=3^Dyspepsia
	;;^UTILITY(U,$J,358.3,385,1,4,0)
	;;=4^536.8
	;;^UTILITY(U,$J,358.3,386,0)
	;;=787.2^^38^41^290
	;;^UTILITY(U,$J,358.3,386,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,386,1,3,0)
	;;=3^Dysphagia
	;;^UTILITY(U,$J,358.3,386,1,4,0)
	;;=4^787.2
	;;^UTILITY(U,$J,358.3,387,0)
	;;=511.9^^38^41^300
	;;^UTILITY(U,$J,358.3,387,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,387,1,3,0)
	;;=3^Effusion, Pleural
	;;^UTILITY(U,$J,358.3,387,1,4,0)
	;;=4^511.9
	;;^UTILITY(U,$J,358.3,388,0)
	;;=276.9^^38^41^310
	;;^UTILITY(U,$J,358.3,388,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,388,1,3,0)
	;;=3^Electrolyte imbalance
	;;^UTILITY(U,$J,358.3,388,1,4,0)
	;;=4^276.9
	;;^UTILITY(U,$J,358.3,389,0)
	;;=401.9^^38^41^320
	;;^UTILITY(U,$J,358.3,389,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,389,1,3,0)
	;;=3^Elevated BP
	;;^UTILITY(U,$J,358.3,389,1,4,0)
	;;=4^401.9
	;;^UTILITY(U,$J,358.3,390,0)
	;;=492.8^^38^41^330
	;;^UTILITY(U,$J,358.3,390,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,390,1,3,0)
	;;=3^Emphysema
	;;^UTILITY(U,$J,358.3,390,1,4,0)
	;;=4^492.8
	;;^UTILITY(U,$J,358.3,391,0)
	;;=784.7^^38^41^340
	;;^UTILITY(U,$J,358.3,391,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,391,1,3,0)
	;;=3^Epistaxis
	;;^UTILITY(U,$J,358.3,391,1,4,0)
	;;=4^784.7
	;;^UTILITY(U,$J,358.3,392,0)
	;;=530.81^^38^41^350
	;;^UTILITY(U,$J,358.3,392,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,392,1,3,0)
	;;=3^Esophageal Reflux
	;;^UTILITY(U,$J,358.3,392,1,4,0)
	;;=4^530.81
	;;^UTILITY(U,$J,358.3,393,0)
	;;=530.10^^38^41^360
	;;^UTILITY(U,$J,358.3,393,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,393,1,3,0)
	;;=3^Esophagitis
	;;^UTILITY(U,$J,358.3,393,1,4,0)
	;;=4^530.10
	;;^UTILITY(U,$J,358.3,394,0)
	;;=518.81^^38^41^370
	;;^UTILITY(U,$J,358.3,394,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,394,1,3,0)
	;;=3^Failure, Respiratory
	;;^UTILITY(U,$J,358.3,394,1,4,0)
	;;=4^518.81
	;;^UTILITY(U,$J,358.3,395,0)
	;;=780.6^^38^41^380
	;;^UTILITY(U,$J,358.3,395,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,395,1,3,0)
	;;=3^Fever, unknown origin
	;;^UTILITY(U,$J,358.3,395,1,4,0)
	;;=4^780.6
	;;^UTILITY(U,$J,358.3,396,0)
	;;=919.6^^38^41^390
	;;^UTILITY(U,$J,358.3,396,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,396,1,3,0)
	;;=3^Foreign Body
	;;^UTILITY(U,$J,358.3,396,1,4,0)
	;;=4^919.6
	;;^UTILITY(U,$J,358.3,397,0)
	;;=595.0^^38^41^180
	;;^UTILITY(U,$J,358.3,397,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,397,1,3,0)
	;;=3^Cystitus, Acute
	;;^UTILITY(U,$J,358.3,397,1,4,0)
	;;=4^595.0
	;;^UTILITY(U,$J,358.3,398,0)
	;;=824.8^^38^42^10
	;;^UTILITY(U,$J,358.3,398,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,398,1,3,0)
	;;=3^Ankle
	;;^UTILITY(U,$J,358.3,398,1,4,0)
	;;=4^824.8
	;;^UTILITY(U,$J,358.3,399,0)
	;;=812.40^^38^42^20
	;;^UTILITY(U,$J,358.3,399,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,399,1,3,0)
	;;=3^Elbow
	;;^UTILITY(U,$J,358.3,399,1,4,0)
	;;=4^812.40
	;;^UTILITY(U,$J,358.3,400,0)
	;;=821.00^^38^42^30
	;;^UTILITY(U,$J,358.3,400,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,400,1,3,0)
	;;=3^Femur
	;;^UTILITY(U,$J,358.3,400,1,4,0)
	;;=4^821.00
	;;^UTILITY(U,$J,358.3,401,0)
	;;=816.00^^38^42^40
	;;^UTILITY(U,$J,358.3,401,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,401,1,3,0)
	;;=3^Finger

IBDEI00V
IBDEI00V	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,401,1,4,0)
	;;=4^816.00
	;;^UTILITY(U,$J,358.3,402,0)
	;;=815.09^^38^42^50
	;;^UTILITY(U,$J,358.3,402,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,402,1,3,0)
	;;=3^Hand
	;;^UTILITY(U,$J,358.3,402,1,4,0)
	;;=4^815.09
	;;^UTILITY(U,$J,358.3,403,0)
	;;=802.0^^38^42^60
	;;^UTILITY(U,$J,358.3,403,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,403,1,3,0)
	;;=3^Nasal Bone
	;;^UTILITY(U,$J,358.3,403,1,4,0)
	;;=4^802.0
	;;^UTILITY(U,$J,358.3,404,0)
	;;=813.81^^38^42^70
	;;^UTILITY(U,$J,358.3,404,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,404,1,3,0)
	;;=3^Radius
	;;^UTILITY(U,$J,358.3,404,1,4,0)
	;;=4^813.81
	;;^UTILITY(U,$J,358.3,405,0)
	;;=826.0^^38^42^80
	;;^UTILITY(U,$J,358.3,405,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,405,1,3,0)
	;;=3^Toe
	;;^UTILITY(U,$J,358.3,405,1,4,0)
	;;=4^826.0
	;;^UTILITY(U,$J,358.3,406,0)
	;;=814.00^^38^42^90
	;;^UTILITY(U,$J,358.3,406,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,406,1,3,0)
	;;=3^Wrist
	;;^UTILITY(U,$J,358.3,406,1,4,0)
	;;=4^814.00
	;;^UTILITY(U,$J,358.3,407,0)
	;;=91^1^38^42^100^ ^^1
	;;^UTILITY(U,$J,358.3,407,1,0)
	;;=^358.31IA^4^0
	;;^UTILITY(U,$J,358.3,408,0)
	;;=727.41^^38^43^10
	;;^UTILITY(U,$J,358.3,408,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,408,1,3,0)
	;;=3^Ganglion, joint
	;;^UTILITY(U,$J,358.3,408,1,4,0)
	;;=4^727.41
	;;^UTILITY(U,$J,358.3,409,0)
	;;=535.50^^38^43^20
	;;^UTILITY(U,$J,358.3,409,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,409,1,3,0)
	;;=3^Gastritis
	;;^UTILITY(U,$J,358.3,409,1,4,0)
	;;=4^535.50
	;;^UTILITY(U,$J,358.3,410,0)
	;;=558.9^^38^43^30
	;;^UTILITY(U,$J,358.3,410,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,410,1,3,0)
	;;=3^gastroenteritis
	;;^UTILITY(U,$J,358.3,410,1,4,0)
	;;=4^558.9
	;;^UTILITY(U,$J,358.3,411,0)
	;;=365.9^^38^43^40
	;;^UTILITY(U,$J,358.3,411,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,411,1,3,0)
	;;=3^Glaucoma
	;;^UTILITY(U,$J,358.3,411,1,4,0)
	;;=4^365.9
	;;^UTILITY(U,$J,358.3,412,0)
	;;=274.9^^38^43^50
	;;^UTILITY(U,$J,358.3,412,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,412,1,3,0)
	;;=3^Gout
	;;^UTILITY(U,$J,358.3,412,1,4,0)
	;;=4^274.9
	;;^UTILITY(U,$J,358.3,413,0)
	;;=346.90^^38^43^60
	;;^UTILITY(U,$J,358.3,413,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,413,1,3,0)
	;;=3^Headache, migrane
	;;^UTILITY(U,$J,358.3,413,1,4,0)
	;;=4^346.90
	;;^UTILITY(U,$J,358.3,414,0)
	;;=784.0^^38^43^70
	;;^UTILITY(U,$J,358.3,414,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,414,1,3,0)
	;;=3^Headaches
	;;^UTILITY(U,$J,358.3,414,1,4,0)
	;;=4^784.0
	;;^UTILITY(U,$J,358.3,415,0)
	;;=389.9^^38^43^80
	;;^UTILITY(U,$J,358.3,415,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,415,1,3,0)
	;;=3^Hearing, decreased
	;;^UTILITY(U,$J,358.3,415,1,4,0)
	;;=4^389.9
	;;^UTILITY(U,$J,358.3,416,0)
	;;=852.00^^38^44^10
	;;^UTILITY(U,$J,358.3,416,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,416,1,3,0)
	;;=3^Subarachnoid
	;;^UTILITY(U,$J,358.3,416,1,4,0)
	;;=4^852.00
	;;^UTILITY(U,$J,358.3,417,0)
	;;=852.20^^38^44^20
	;;^UTILITY(U,$J,358.3,417,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,417,1,3,0)
	;;=3^Subdural
	;;^UTILITY(U,$J,358.3,417,1,4,0)
	;;=4^852.20
	;;^UTILITY(U,$J,358.3,418,0)
	;;=599.7^^38^45^10
	;;^UTILITY(U,$J,358.3,418,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,418,1,3,0)
	;;=3^Hematuria
	;;^UTILITY(U,$J,358.3,418,1,4,0)
	;;=4^599.7
	;;^UTILITY(U,$J,358.3,419,0)
	;;=455.6^^38^45^20
	;;^UTILITY(U,$J,358.3,419,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,419,1,3,0)
	;;=3^Hemorrhoids
	;;^UTILITY(U,$J,358.3,419,1,4,0)
	;;=4^455.6
	;;^UTILITY(U,$J,358.3,420,0)
	;;=459.0^^38^45^30
	;;^UTILITY(U,$J,358.3,420,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,420,1,3,0)
	;;=3^Hemorrhage, Subconjunctiv
	;;^UTILITY(U,$J,358.3,420,1,4,0)
	;;=4^459.0
	;;^UTILITY(U,$J,358.3,421,0)
	;;=070.6^^38^46^20
	;;^UTILITY(U,$J,358.3,421,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,421,1,3,0)
	;;=3^Viral A w/hepatic coma
	;;^UTILITY(U,$J,358.3,421,1,4,0)
	;;=4^070.6
	;;^UTILITY(U,$J,358.3,422,0)
	;;=070.20^^38^46^40
	;;^UTILITY(U,$J,358.3,422,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,422,1,3,0)
	;;=3^Viral B w/hepatic coma
	;;^UTILITY(U,$J,358.3,422,1,4,0)
	;;=4^070.20
	;;^UTILITY(U,$J,358.3,423,0)
	;;=070.30^^38^46^50
	;;^UTILITY(U,$J,358.3,423,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,423,1,3,0)
	;;=3^Viral B w/o hepatic coma
	;;^UTILITY(U,$J,358.3,423,1,4,0)
	;;=4^070.30
	;;^UTILITY(U,$J,358.3,424,0)
	;;=070.41^^38^46^60
	;;^UTILITY(U,$J,358.3,424,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,424,1,3,0)
	;;=3^Viral C acute or Unspec
	;;^UTILITY(U,$J,358.3,424,1,4,0)
	;;=4^070.41
	;;^UTILITY(U,$J,358.3,425,0)
	;;=070.54^^38^46^70
	;;^UTILITY(U,$J,358.3,425,1,0)
	;;=^358.31IA^4^2

IBDEI00W
IBDEI00W	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,425,1,3,0)
	;;=3^Viral C chronic w/o coma
	;;^UTILITY(U,$J,358.3,425,1,4,0)
	;;=4^070.54
	;;^UTILITY(U,$J,358.3,426,0)
	;;=71^1^38^46^80^ ^^1
	;;^UTILITY(U,$J,358.3,426,1,0)
	;;=^358.31IA^4^0
	;;^UTILITY(U,$J,358.3,427,0)
	;;=070.9^^38^46^10
	;;^UTILITY(U,$J,358.3,427,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,427,1,3,0)
	;;=3^Viral, Unspecified
	;;^UTILITY(U,$J,358.3,427,1,4,0)
	;;=4^070.9
	;;^UTILITY(U,$J,358.3,428,0)
	;;=070.1^^38^46^30
	;;^UTILITY(U,$J,358.3,428,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,428,1,3,0)
	;;=3^Viral A w/o hepatic coma
	;;^UTILITY(U,$J,358.3,428,1,4,0)
	;;=4^070.1
	;;^UTILITY(U,$J,358.3,429,0)
	;;=553.9^^38^47^10
	;;^UTILITY(U,$J,358.3,429,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,429,1,3,0)
	;;=3^Hernia, abdominal
	;;^UTILITY(U,$J,358.3,429,1,4,0)
	;;=4^553.9
	;;^UTILITY(U,$J,358.3,430,0)
	;;=550.90^^38^47^20
	;;^UTILITY(U,$J,358.3,430,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,430,1,3,0)
	;;=3^Hernia, inguinal
	;;^UTILITY(U,$J,358.3,430,1,4,0)
	;;=4^550.90
	;;^UTILITY(U,$J,358.3,431,0)
	;;=042.^^38^47^30
	;;^UTILITY(U,$J,358.3,431,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,431,1,3,0)
	;;=3^HIV Disease
	;;^UTILITY(U,$J,358.3,431,1,4,0)
	;;=4^042.
	;;^UTILITY(U,$J,358.3,432,0)
	;;=373.11^^38^47^40
	;;^UTILITY(U,$J,358.3,432,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,432,1,3,0)
	;;=3^Hordeolum, Stye
	;;^UTILITY(U,$J,358.3,432,1,4,0)
	;;=4^373.11
	;;^UTILITY(U,$J,358.3,433,0)
	;;=272.4^^38^47^50
	;;^UTILITY(U,$J,358.3,433,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,433,1,3,0)
	;;=3^Hyperlipidemia
	;;^UTILITY(U,$J,358.3,433,1,4,0)
	;;=4^272.4
	;;^UTILITY(U,$J,358.3,434,0)
	;;=401.9^^38^47^60
	;;^UTILITY(U,$J,358.3,434,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,434,1,3,0)
	;;=3^Hypertension
	;;^UTILITY(U,$J,358.3,434,1,4,0)
	;;=4^401.9
	;;^UTILITY(U,$J,358.3,435,0)
	;;=607.84^^38^47^70
	;;^UTILITY(U,$J,358.3,435,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,435,1,3,0)
	;;=3^Impotence
	;;^UTILITY(U,$J,358.3,435,1,4,0)
	;;=4^607.84
	;;^UTILITY(U,$J,358.3,436,0)
	;;=686.9^^38^47^80
	;;^UTILITY(U,$J,358.3,436,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,436,1,3,0)
	;;=3^Infection, Skin
	;;^UTILITY(U,$J,358.3,436,1,4,0)
	;;=4^686.9
	;;^UTILITY(U,$J,358.3,437,0)
	;;=079.99^^38^47^90
	;;^UTILITY(U,$J,358.3,437,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,437,1,3,0)
	;;=3^Viral Syndrome
	;;^UTILITY(U,$J,358.3,437,1,4,0)
	;;=4^079.99
	;;^UTILITY(U,$J,358.3,438,0)
	;;=487.1^^38^47^100
	;;^UTILITY(U,$J,358.3,438,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,438,1,3,0)
	;;=3^Influenza
	;;^UTILITY(U,$J,358.3,438,1,4,0)
	;;=4^487.1
	;;^UTILITY(U,$J,358.3,439,0)
	;;=780.52^^38^47^110
	;;^UTILITY(U,$J,358.3,439,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,439,1,3,0)
	;;=3^Insomnia
	;;^UTILITY(U,$J,358.3,439,1,4,0)
	;;=4^780.52
	;;^UTILITY(U,$J,358.3,440,0)
	;;=782.4^^38^47^130
	;;^UTILITY(U,$J,358.3,440,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,440,1,3,0)
	;;=3^Jaundice
	;;^UTILITY(U,$J,358.3,440,1,4,0)
	;;=4^782.4
	;;^UTILITY(U,$J,358.3,441,0)
	;;=701.1^^38^47^140
	;;^UTILITY(U,$J,358.3,441,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,441,1,3,0)
	;;=3^Keratosis
	;;^UTILITY(U,$J,358.3,441,1,4,0)
	;;=4^701.1
	;;^UTILITY(U,$J,358.3,442,0)
	;;=592.0^^38^47^150
	;;^UTILITY(U,$J,358.3,442,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,442,1,3,0)
	;;=3^Kidney Stone(s)
	;;^UTILITY(U,$J,358.3,442,1,4,0)
	;;=4^592.0
	;;^UTILITY(U,$J,358.3,443,0)
	;;=879.8^^38^47^160
	;;^UTILITY(U,$J,358.3,443,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,443,1,3,0)
	;;=3^Laceration
	;;^UTILITY(U,$J,358.3,443,1,4,0)
	;;=4^879.8
	;;^UTILITY(U,$J,358.3,444,0)
	;;=464.0^^38^47^170
	;;^UTILITY(U,$J,358.3,444,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,444,1,3,0)
	;;=3^Laryngitis, acute
	;;^UTILITY(U,$J,358.3,444,1,4,0)
	;;=4^464.0
	;;^UTILITY(U,$J,358.3,445,0)
	;;=724.2^^38^47^180
	;;^UTILITY(U,$J,358.3,445,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,445,1,3,0)
	;;=3^Lower Back Pain
	;;^UTILITY(U,$J,358.3,445,1,4,0)
	;;=4^724.2
	;;^UTILITY(U,$J,358.3,446,0)
	;;=457.2^^38^47^190
	;;^UTILITY(U,$J,358.3,446,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,446,1,3,0)
	;;=3^Lymphangitis
	;;^UTILITY(U,$J,358.3,446,1,4,0)
	;;=4^457.2
	;;^UTILITY(U,$J,358.3,447,0)
	;;=V68.1^^38^47^200
	;;^UTILITY(U,$J,358.3,447,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,447,1,3,0)
	;;=3^Medication Refills
	;;^UTILITY(U,$J,358.3,447,1,4,0)
	;;=4^V68.1
	;;^UTILITY(U,$J,358.3,448,0)
	;;=729.1^^38^47^210
	;;^UTILITY(U,$J,358.3,448,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,448,1,3,0)
	;;=3^Myalgia
	;;^UTILITY(U,$J,358.3,448,1,4,0)
	;;=4^729.1

IBDEI00X
IBDEI00X	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,449,0)
	;;=410.90^^38^47^220
	;;^UTILITY(U,$J,358.3,449,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,449,1,3,0)
	;;=3^Myocardial Infarction
	;;^UTILITY(U,$J,358.3,449,1,4,0)
	;;=4^410.90
	;;^UTILITY(U,$J,358.3,450,0)
	;;=V70.0^^38^47^230
	;;^UTILITY(U,$J,358.3,450,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,450,1,3,0)
	;;=3^No evidence of disease
	;;^UTILITY(U,$J,358.3,450,1,4,0)
	;;=4^V70.0
	;;^UTILITY(U,$J,358.3,451,0)
	;;=519.8^^38^47^250
	;;^UTILITY(U,$J,358.3,451,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,451,1,3,0)
	;;=3^Obstruction, airway
	;;^UTILITY(U,$J,358.3,451,1,4,0)
	;;=4^519.8
	;;^UTILITY(U,$J,358.3,452,0)
	;;=310.9^^38^47^260
	;;^UTILITY(U,$J,358.3,452,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,452,1,3,0)
	;;=3^Organic Brain Syndrome
	;;^UTILITY(U,$J,358.3,452,1,4,0)
	;;=4^310.9
	;;^UTILITY(U,$J,358.3,453,0)
	;;=715.90^^38^47^270
	;;^UTILITY(U,$J,358.3,453,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,453,1,3,0)
	;;=3^Osteoarthritis
	;;^UTILITY(U,$J,358.3,453,1,4,0)
	;;=4^715.90
	;;^UTILITY(U,$J,358.3,454,0)
	;;=730.20^^38^47^280
	;;^UTILITY(U,$J,358.3,454,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,454,1,3,0)
	;;=3^Osteomyelitis
	;;^UTILITY(U,$J,358.3,454,1,4,0)
	;;=4^730.20
	;;^UTILITY(U,$J,358.3,455,0)
	;;=380.10^^38^47^290
	;;^UTILITY(U,$J,358.3,455,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,455,1,3,0)
	;;=3^Otitis, external
	;;^UTILITY(U,$J,358.3,455,1,4,0)
	;;=4^380.10
	;;^UTILITY(U,$J,358.3,456,0)
	;;=382.9^^38^47^300
	;;^UTILITY(U,$J,358.3,456,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,456,1,3,0)
	;;=3^Otitis, media acute
	;;^UTILITY(U,$J,358.3,456,1,4,0)
	;;=4^382.9
	;;^UTILITY(U,$J,358.3,457,0)
	;;=332.0^^38^47^310
	;;^UTILITY(U,$J,358.3,457,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,457,1,3,0)
	;;=3^Parkinson's Disease
	;;^UTILITY(U,$J,358.3,457,1,4,0)
	;;=4^332.0
	;;^UTILITY(U,$J,358.3,458,0)
	;;=577.0^^38^47^320
	;;^UTILITY(U,$J,358.3,458,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,458,1,3,0)
	;;=3^Pancreatitis
	;;^UTILITY(U,$J,358.3,458,1,4,0)
	;;=4^577.0
	;;^UTILITY(U,$J,358.3,459,0)
	;;=462.^^38^47^330
	;;^UTILITY(U,$J,358.3,459,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,459,1,3,0)
	;;=3^Pharyngitis, acute
	;;^UTILITY(U,$J,358.3,459,1,4,0)
	;;=4^462.
	;;^UTILITY(U,$J,358.3,460,0)
	;;=533.90^^38^47^340
	;;^UTILITY(U,$J,358.3,460,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,460,1,3,0)
	;;=3^Peptic Ulcer Disease
	;;^UTILITY(U,$J,358.3,460,1,4,0)
	;;=4^533.90
	;;^UTILITY(U,$J,358.3,461,0)
	;;=443.9^^38^47^350
	;;^UTILITY(U,$J,358.3,461,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,461,1,3,0)
	;;=3^Peripheral Vascular Disease
	;;^UTILITY(U,$J,358.3,461,1,4,0)
	;;=4^443.9
	;;^UTILITY(U,$J,358.3,462,0)
	;;=356.9^^38^47^360
	;;^UTILITY(U,$J,358.3,462,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,462,1,3,0)
	;;=3^Peripheral Neuropathy
	;;^UTILITY(U,$J,358.3,462,1,4,0)
	;;=4^356.9
	;;^UTILITY(U,$J,358.3,463,0)
	;;=420.90^^38^47^370
	;;^UTILITY(U,$J,358.3,463,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,463,1,3,0)
	;;=3^Pericarditis, Acute
	;;^UTILITY(U,$J,358.3,463,1,4,0)
	;;=4^420.90
	;;^UTILITY(U,$J,358.3,464,0)
	;;=451.9^^38^47^380
	;;^UTILITY(U,$J,358.3,464,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,464,1,3,0)
	;;=3^Phlebitis
	;;^UTILITY(U,$J,358.3,464,1,4,0)
	;;=4^451.9
	;;^UTILITY(U,$J,358.3,465,0)
	;;=480.9^^38^47^390
	;;^UTILITY(U,$J,358.3,465,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,465,1,3,0)
	;;=3^Pneumonia, viral
	;;^UTILITY(U,$J,358.3,465,1,4,0)
	;;=4^480.9
	;;^UTILITY(U,$J,358.3,466,0)
	;;=512.8^^38^47^400
	;;^UTILITY(U,$J,358.3,466,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,466,1,3,0)
	;;=3^Pneumothorax
	;;^UTILITY(U,$J,358.3,466,1,4,0)
	;;=4^512.8
	;;^UTILITY(U,$J,358.3,467,0)
	;;=298.9^^38^47^420
	;;^UTILITY(U,$J,358.3,467,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,467,1,3,0)
	;;=3^Psychosis
	;;^UTILITY(U,$J,358.3,467,1,4,0)
	;;=4^298.9
	;;^UTILITY(U,$J,358.3,468,0)
	;;=514.^^38^47^430
	;;^UTILITY(U,$J,358.3,468,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,468,1,3,0)
	;;=3^Pulmonary Edema
	;;^UTILITY(U,$J,358.3,468,1,4,0)
	;;=4^514.
	;;^UTILITY(U,$J,358.3,469,0)
	;;=415.1^^38^47^440
	;;^UTILITY(U,$J,358.3,469,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,469,1,3,0)
	;;=3^Pulmonary Embolus
	;;^UTILITY(U,$J,358.3,469,1,4,0)
	;;=4^415.1
	;;^UTILITY(U,$J,358.3,470,0)
	;;=590.80^^38^47^450
	;;^UTILITY(U,$J,358.3,470,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,470,1,3,0)
	;;=3^Pyelonephritis
	;;^UTILITY(U,$J,358.3,470,1,4,0)
	;;=4^590.80
	;;^UTILITY(U,$J,358.3,471,0)
	;;=729.2^^38^47^460
	;;^UTILITY(U,$J,358.3,471,1,0)
	;;=^358.31IA^4^2

IBDEI00Y
IBDEI00Y	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,471,1,3,0)
	;;=3^Radiculopathy
	;;^UTILITY(U,$J,358.3,471,1,4,0)
	;;=4^729.2
	;;^UTILITY(U,$J,358.3,472,0)
	;;=782.1^^38^47^470
	;;^UTILITY(U,$J,358.3,472,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,472,1,3,0)
	;;=3^Rash
	;;^UTILITY(U,$J,358.3,472,1,4,0)
	;;=4^782.1
	;;^UTILITY(U,$J,358.3,473,0)
	;;=V58.3^^38^47^480
	;;^UTILITY(U,$J,358.3,473,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,473,1,3,0)
	;;=3^Removal of Suture
	;;^UTILITY(U,$J,358.3,473,1,4,0)
	;;=4^V58.3
	;;^UTILITY(U,$J,358.3,474,0)
	;;=788.0^^38^47^490
	;;^UTILITY(U,$J,358.3,474,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,474,1,3,0)
	;;=3^Renal Colic
	;;^UTILITY(U,$J,358.3,474,1,4,0)
	;;=4^788.0
	;;^UTILITY(U,$J,358.3,475,0)
	;;=585.^^38^47^500
	;;^UTILITY(U,$J,358.3,475,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,475,1,3,0)
	;;=3^Renal Failure
	;;^UTILITY(U,$J,358.3,475,1,4,0)
	;;=4^585.
	;;^UTILITY(U,$J,358.3,476,0)
	;;=786.09^^38^47^510
	;;^UTILITY(U,$J,358.3,476,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,476,1,3,0)
	;;=3^Respiratory Distress
	;;^UTILITY(U,$J,358.3,476,1,4,0)
	;;=4^786.09
	;;^UTILITY(U,$J,358.3,477,0)
	;;=477.9^^38^47^520
	;;^UTILITY(U,$J,358.3,477,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,477,1,3,0)
	;;=3^Rhinitis, Allergic
	;;^UTILITY(U,$J,358.3,477,1,4,0)
	;;=4^477.9
	;;^UTILITY(U,$J,358.3,478,0)
	;;=780.3^^38^47^530
	;;^UTILITY(U,$J,358.3,478,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,478,1,3,0)
	;;=3^Seizure Disorder
	;;^UTILITY(U,$J,358.3,478,1,4,0)
	;;=4^780.3
	;;^UTILITY(U,$J,358.3,479,0)
	;;=038.9^^38^47^540
	;;^UTILITY(U,$J,358.3,479,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,479,1,3,0)
	;;=3^Sepsis
	;;^UTILITY(U,$J,358.3,479,1,4,0)
	;;=4^038.9
	;;^UTILITY(U,$J,358.3,480,0)
	;;=785.50^^38^47^550
	;;^UTILITY(U,$J,358.3,480,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,480,1,3,0)
	;;=3^Shock
	;;^UTILITY(U,$J,358.3,480,1,4,0)
	;;=4^785.50
	;;^UTILITY(U,$J,358.3,481,0)
	;;=709.9^^38^47^580
	;;^UTILITY(U,$J,358.3,481,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,481,1,3,0)
	;;=3^Skin Lesion
	;;^UTILITY(U,$J,358.3,481,1,4,0)
	;;=4^709.9
	;;^UTILITY(U,$J,358.3,482,0)
	;;=726.91^^38^47^590
	;;^UTILITY(U,$J,358.3,482,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,482,1,3,0)
	;;=3^Spur(s), bone, exostosis
	;;^UTILITY(U,$J,358.3,482,1,4,0)
	;;=4^726.91
	;;^UTILITY(U,$J,358.3,483,0)
	;;=848.9^^38^47^600
	;;^UTILITY(U,$J,358.3,483,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,483,1,3,0)
	;;=3^Sprain/Strain
	;;^UTILITY(U,$J,358.3,483,1,4,0)
	;;=4^848.9
	;;^UTILITY(U,$J,358.3,484,0)
	;;=300.9^^38^47^610
	;;^UTILITY(U,$J,358.3,484,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,484,1,3,0)
	;;=3^Suicide risk/tendencies
	;;^UTILITY(U,$J,358.3,484,1,4,0)
	;;=4^300.9
	;;^UTILITY(U,$J,358.3,485,0)
	;;=780.2^^38^47^620
	;;^UTILITY(U,$J,358.3,485,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,485,1,3,0)
	;;=3^Syncope
	;;^UTILITY(U,$J,358.3,485,1,4,0)
	;;=4^780.2
	;;^UTILITY(U,$J,358.3,486,0)
	;;=726.90^^38^47^630
	;;^UTILITY(U,$J,358.3,486,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,486,1,3,0)
	;;=3^Tendonitis
	;;^UTILITY(U,$J,358.3,486,1,4,0)
	;;=4^726.90
	;;^UTILITY(U,$J,358.3,487,0)
	;;=608.89^^38^47^640
	;;^UTILITY(U,$J,358.3,487,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,487,1,3,0)
	;;=3^Testicular Mass
	;;^UTILITY(U,$J,358.3,487,1,4,0)
	;;=4^608.89
	;;^UTILITY(U,$J,358.3,488,0)
	;;=435.9^^38^47^650
	;;^UTILITY(U,$J,358.3,488,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,488,1,3,0)
	;;=3^TIA - Transient Ischemic A
	;;^UTILITY(U,$J,358.3,488,1,4,0)
	;;=4^435.9
	;;^UTILITY(U,$J,358.3,489,0)
	;;=110.4^^38^47^660
	;;^UTILITY(U,$J,358.3,489,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,489,1,3,0)
	;;=3^Tinea, pedis
	;;^UTILITY(U,$J,358.3,489,1,4,0)
	;;=4^110.4
	;;^UTILITY(U,$J,358.3,490,0)
	;;=388.30^^38^47^670
	;;^UTILITY(U,$J,358.3,490,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,490,1,3,0)
	;;=3^Tinnitus
	;;^UTILITY(U,$J,358.3,490,1,4,0)
	;;=4^388.30
	;;^UTILITY(U,$J,358.3,491,0)
	;;=463.^^38^47^680
	;;^UTILITY(U,$J,358.3,491,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,491,1,3,0)
	;;=3^Tonsilitis, Acute
	;;^UTILITY(U,$J,358.3,491,1,4,0)
	;;=4^463.
	;;^UTILITY(U,$J,358.3,492,0)
	;;=525.9^^38^47^690
	;;^UTILITY(U,$J,358.3,492,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,492,1,3,0)
	;;=3^Toothache
	;;^UTILITY(U,$J,358.3,492,1,4,0)
	;;=4^525.9
	;;^UTILITY(U,$J,358.3,493,0)
	;;=011.90^^38^47^700
	;;^UTILITY(U,$J,358.3,493,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,493,1,3,0)
	;;=3^Tuberculosis
	;;^UTILITY(U,$J,358.3,493,1,4,0)
	;;=4^011.90
	;;^UTILITY(U,$J,358.3,494,0)
	;;=597.80^^38^47^710
	;;^UTILITY(U,$J,358.3,494,1,0)
	;;=^358.31IA^4^2

IBDEI00Z
IBDEI00Z	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,494,1,3,0)
	;;=3^Urethritis
	;;^UTILITY(U,$J,358.3,494,1,4,0)
	;;=4^597.80
	;;^UTILITY(U,$J,358.3,495,0)
	;;=465.9^^38^47^720
	;;^UTILITY(U,$J,358.3,495,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,495,1,3,0)
	;;=3^URI
	;;^UTILITY(U,$J,358.3,495,1,4,0)
	;;=4^465.9
	;;^UTILITY(U,$J,358.3,496,0)
	;;=788.20^^38^47^730
	;;^UTILITY(U,$J,358.3,496,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,496,1,3,0)
	;;=3^Urinary Retention
	;;^UTILITY(U,$J,358.3,496,1,4,0)
	;;=4^788.20
	;;^UTILITY(U,$J,358.3,497,0)
	;;=788.41^^38^47^740
	;;^UTILITY(U,$J,358.3,497,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,497,1,3,0)
	;;=3^Urinary Frequency
	;;^UTILITY(U,$J,358.3,497,1,4,0)
	;;=4^788.41
	;;^UTILITY(U,$J,358.3,498,0)
	;;=599.0^^38^47^750
	;;^UTILITY(U,$J,358.3,498,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,498,1,3,0)
	;;=3^UTI
	;;^UTILITY(U,$J,358.3,498,1,4,0)
	;;=4^599.0
	;;^UTILITY(U,$J,358.3,499,0)
	;;=459.81^^38^47^760
	;;^UTILITY(U,$J,358.3,499,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,499,1,3,0)
	;;=3^Venous Insufficiency
	;;^UTILITY(U,$J,358.3,499,1,4,0)
	;;=4^459.81
	;;^UTILITY(U,$J,358.3,500,0)
	;;=780.4^^38^47^770
	;;^UTILITY(U,$J,358.3,500,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,500,1,3,0)
	;;=3^Vertigo, dizziness
	;;^UTILITY(U,$J,358.3,500,1,4,0)
	;;=4^780.4
	;;^UTILITY(U,$J,358.3,501,0)
	;;=369.9^^38^47^780
	;;^UTILITY(U,$J,358.3,501,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,501,1,3,0)
	;;=3^Visual, acuity dereased
	;;^UTILITY(U,$J,358.3,501,1,4,0)
	;;=4^369.9
	;;^UTILITY(U,$J,358.3,502,0)
	;;=787.01^^38^47^790
	;;^UTILITY(U,$J,358.3,502,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,502,1,3,0)
	;;=3^Vomitting
	;;^UTILITY(U,$J,358.3,502,1,4,0)
	;;=4^787.01
	;;^UTILITY(U,$J,358.3,503,0)
	;;=783.2^^38^47^800
	;;^UTILITY(U,$J,358.3,503,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,503,1,3,0)
	;;=3^Weight Loss
	;;^UTILITY(U,$J,358.3,503,1,4,0)
	;;=4^783.2
	;;^UTILITY(U,$J,358.3,504,0)
	;;=564.1^^38^47^120
	;;^UTILITY(U,$J,358.3,504,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,504,1,3,0)
	;;=3^Irritable Bowel Syndrome
	;;^UTILITY(U,$J,358.3,504,1,4,0)
	;;=4^564.1
	;;^UTILITY(U,$J,358.3,505,0)
	;;=601.9^^38^47^410
	;;^UTILITY(U,$J,358.3,505,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,505,1,3,0)
	;;=3^Prostatitis
	;;^UTILITY(U,$J,358.3,505,1,4,0)
	;;=4^601.9
	;;^UTILITY(U,$J,358.3,506,0)
	;;=278.00^^38^47^240
	;;^UTILITY(U,$J,358.3,506,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,506,1,3,0)
	;;=3^Obesity
	;;^UTILITY(U,$J,358.3,506,1,4,0)
	;;=4^278.00
	;;^UTILITY(U,$J,358.3,507,0)
	;;=461.9^^38^47^560
	;;^UTILITY(U,$J,358.3,507,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,507,1,3,0)
	;;=3^Sinusitis, acute
	;;^UTILITY(U,$J,358.3,507,1,4,0)
	;;=4^461.9
	;;^UTILITY(U,$J,358.3,508,0)
	;;=473.9^^38^47^570
	;;^UTILITY(U,$J,358.3,508,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,508,1,3,0)
	;;=3^Sinusitis, chronic
	;;^UTILITY(U,$J,358.3,508,1,4,0)
	;;=4^473.9
	;;^UTILITY(U,$J,358.3,509,0)
	;;=99201^^39^48^1
	;;^UTILITY(U,$J,358.3,509,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,509,1,1,0)
	;;=1^Brief Visit         1-15 Min
	;;^UTILITY(U,$J,358.3,510,0)
	;;=99202^^39^48^2
	;;^UTILITY(U,$J,358.3,510,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,510,1,1,0)
	;;=1^Limited Exam        16-25 Min
	;;^UTILITY(U,$J,358.3,511,0)
	;;=99203^^39^48^3
	;;^UTILITY(U,$J,358.3,511,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,511,1,1,0)
	;;=1^Intermediate Exam   26-35 Min
	;;^UTILITY(U,$J,358.3,512,0)
	;;=99204^^39^48^4
	;;^UTILITY(U,$J,358.3,512,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,512,1,1,0)
	;;=1^Extended Exam       36-50 Min
	;;^UTILITY(U,$J,358.3,513,0)
	;;=99205^^39^48^5
	;;^UTILITY(U,$J,358.3,513,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,513,1,1,0)
	;;=1^Comprehensive Exam  51+ Min
	;;^UTILITY(U,$J,358.3,514,0)
	;;=99211^^39^49^1
	;;^UTILITY(U,$J,358.3,514,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,514,1,1,0)
	;;=1^Brief Exam          1-5 Min
	;;^UTILITY(U,$J,358.3,515,0)
	;;=99212^^39^49^2
	;;^UTILITY(U,$J,358.3,515,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,515,1,1,0)
	;;=1^Limited Exam        6-10 Min
	;;^UTILITY(U,$J,358.3,516,0)
	;;=99213^^39^49^3
	;;^UTILITY(U,$J,358.3,516,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,516,1,1,0)
	;;=1^Intermediate Exam   11-19 Min
	;;^UTILITY(U,$J,358.3,517,0)
	;;=99214^^39^49^4
	;;^UTILITY(U,$J,358.3,517,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,517,1,1,0)
	;;=1^Extended Exam       20-30 Min
	;;^UTILITY(U,$J,358.3,518,0)
	;;=99215^^39^49^5
	;;^UTILITY(U,$J,358.3,518,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,518,1,1,0)
	;;=1^Comprehensive Exam  40+ Min

IBDEI010
IBDEI010	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,519,0)
	;;=99241^^39^50^1
	;;^UTILITY(U,$J,358.3,519,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,519,1,1,0)
	;;=1^Brief Visit         1-20 Min
	;;^UTILITY(U,$J,358.3,520,0)
	;;=99242^^39^50^2
	;;^UTILITY(U,$J,358.3,520,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,520,1,1,0)
	;;=1^Limited Visit       21-35 Min
	;;^UTILITY(U,$J,358.3,521,0)
	;;=99243^^39^50^3
	;;^UTILITY(U,$J,358.3,521,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,521,1,1,0)
	;;=1^Intermediate Visit  35-50 Min
	;;^UTILITY(U,$J,358.3,522,0)
	;;=99244^^39^50^4
	;;^UTILITY(U,$J,358.3,522,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,522,1,1,0)
	;;=1^Extended Visit      51-60 Min
	;;^UTILITY(U,$J,358.3,523,0)
	;;=99245^^39^50^5
	;;^UTILITY(U,$J,358.3,523,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,523,1,1,0)
	;;=1^Comprehensive Visit 71+ Min
	;;^UTILITY(U,$J,358.3,524,0)
	;;=10040^^41^51^1
	;;^UTILITY(U,$J,358.3,524,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,524,1,2,0)
	;;=2^Acne Surgery
	;;^UTILITY(U,$J,358.3,524,1,3,0)
	;;=3^10040
	;;^UTILITY(U,$J,358.3,525,0)
	;;=29580^^41^51^2
	;;^UTILITY(U,$J,358.3,525,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,525,1,2,0)
	;;=2^Application of Paste Boot
	;;^UTILITY(U,$J,358.3,525,1,3,0)
	;;=3^29580
	;;^UTILITY(U,$J,358.3,526,0)
	;;=82947^^41^51^3
	;;^UTILITY(U,$J,358.3,526,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,526,1,2,0)
	;;=2^Assay quantitative glucose
	;;^UTILITY(U,$J,358.3,526,1,3,0)
	;;=3^82947
	;;^UTILITY(U,$J,358.3,527,0)
	;;=11100^^41^51^4
	;;^UTILITY(U,$J,358.3,527,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,527,1,2,0)
	;;=2^Biopsy of skin lesion
	;;^UTILITY(U,$J,358.3,527,1,3,0)
	;;=3^11100
	;;^UTILITY(U,$J,358.3,528,0)
	;;=17000^^41^52^4
	;;^UTILITY(U,$J,358.3,528,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,528,1,2,0)
	;;=2^Destruction of facial lesion
	;;^UTILITY(U,$J,358.3,528,1,3,0)
	;;=3^17000
	;;^UTILITY(U,$J,358.3,529,0)
	;;=10060^^41^52^5
	;;^UTILITY(U,$J,358.3,529,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,529,1,2,0)
	;;=2^Drainage of skin abscess
	;;^UTILITY(U,$J,358.3,529,1,3,0)
	;;=3^10060
	;;^UTILITY(U,$J,358.3,530,0)
	;;=93000^^41^52^6
	;;^UTILITY(U,$J,358.3,530,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,530,1,2,0)
	;;=2^EKG, routine (12 leads)
	;;^UTILITY(U,$J,358.3,530,1,3,0)
	;;=3^93000
	;;^UTILITY(U,$J,358.3,531,0)
	;;=94760^^41^52^7
	;;^UTILITY(U,$J,358.3,531,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,531,1,2,0)
	;;=2^Oximetry, noninvasive
	;;^UTILITY(U,$J,358.3,531,1,3,0)
	;;=3^94760
	;;^UTILITY(U,$J,358.3,532,0)
	;;=94010^^41^52^8
	;;^UTILITY(U,$J,358.3,532,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,532,1,2,0)
	;;=2^Pulmonary function test
	;;^UTILITY(U,$J,358.3,532,1,3,0)
	;;=3^94010
	;;^UTILITY(U,$J,358.3,533,0)
	;;=29799^^41^52^9
	;;^UTILITY(U,$J,358.3,533,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,533,1,2,0)
	;;=2^Removal/revision of cast
	;;^UTILITY(U,$J,358.3,533,1,3,0)
	;;=3^29799
	;;^UTILITY(U,$J,358.3,534,0)
	;;=69210^^41^52^10
	;;^UTILITY(U,$J,358.3,534,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,534,1,2,0)
	;;=2^Remove impacted ear wax
	;;^UTILITY(U,$J,358.3,534,1,3,0)
	;;=3^69210
	;;^UTILITY(U,$J,358.3,535,0)
	;;=94010^^41^52^11
	;;^UTILITY(U,$J,358.3,535,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,535,1,2,0)
	;;=2^Spirometry
	;;^UTILITY(U,$J,358.3,535,1,3,0)
	;;=3^94010
	;;^UTILITY(U,$J,358.3,536,0)
	;;=86580^^41^52^12
	;;^UTILITY(U,$J,358.3,536,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,536,1,2,0)
	;;=2^TB intradermal test
	;;^UTILITY(U,$J,358.3,536,1,3,0)
	;;=3^86580
	;;^UTILITY(U,$J,358.3,537,0)
	;;=11750^^41^52^13
	;;^UTILITY(U,$J,358.3,537,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,537,1,2,0)
	;;=2^Toe nail trimming
	;;^UTILITY(U,$J,358.3,537,1,3,0)
	;;=3^11750
	;;^UTILITY(U,$J,358.3,538,0)
	;;=90788^^41^53^1
	;;^UTILITY(U,$J,358.3,538,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,538,1,2,0)
	;;=2^Antibiotic
	;;^UTILITY(U,$J,358.3,538,1,3,0)
	;;=3^90788
	;;^UTILITY(U,$J,358.3,539,0)
	;;=J1100^^41^53^2
	;;^UTILITY(U,$J,358.3,539,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,539,1,2,0)
	;;=2^Decadron
	;;^UTILITY(U,$J,358.3,539,1,3,0)
	;;=3^J1100
	;;^UTILITY(U,$J,358.3,540,0)
	;;=90746^^41^53^3
	;;^UTILITY(U,$J,358.3,540,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,540,1,2,0)
	;;=2^Hepatitis B
	;;^UTILITY(U,$J,358.3,540,1,3,0)
	;;=3^90746
	;;^UTILITY(U,$J,358.3,541,0)
	;;=90724^^41^53^4
	;;^UTILITY(U,$J,358.3,541,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,541,1,2,0)
	;;=2^Influenza (V04.8)
	;;^UTILITY(U,$J,358.3,541,1,3,0)
	;;=3^90724
	;;^UTILITY(U,$J,358.3,542,0)
	;;=20600^^41^53^5
	;;^UTILITY(U,$J,358.3,542,1,0)
	;;=^358.31IA^3^2

IBDEI011
IBDEI011	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,542,1,2,0)
	;;=2^Small joint/bursa
	;;^UTILITY(U,$J,358.3,542,1,3,0)
	;;=3^20600
	;;^UTILITY(U,$J,358.3,543,0)
	;;=20605^^41^53^6
	;;^UTILITY(U,$J,358.3,543,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,543,1,2,0)
	;;=2^Medium joint/bursa
	;;^UTILITY(U,$J,358.3,543,1,3,0)
	;;=3^20605
	;;^UTILITY(U,$J,358.3,544,0)
	;;=20610^^41^53^7
	;;^UTILITY(U,$J,358.3,544,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,544,1,2,0)
	;;=2^Major joint/bursa
	;;^UTILITY(U,$J,358.3,544,1,3,0)
	;;=3^20610
	;;^UTILITY(U,$J,358.3,545,0)
	;;=90732^^41^53^8
	;;^UTILITY(U,$J,358.3,545,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,545,1,2,0)
	;;=2^Pneumococcal (V03.82)
	;;^UTILITY(U,$J,358.3,545,1,3,0)
	;;=3^90732
	;;^UTILITY(U,$J,358.3,546,0)
	;;=86580^^41^53^9
	;;^UTILITY(U,$J,358.3,546,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,546,1,2,0)
	;;=2^PPD skin test
	;;^UTILITY(U,$J,358.3,546,1,3,0)
	;;=3^86580
	;;^UTILITY(U,$J,358.3,547,0)
	;;=84402^^41^53^10
	;;^UTILITY(U,$J,358.3,547,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,547,1,2,0)
	;;=2^Testosterone 100/200 mg
	;;^UTILITY(U,$J,358.3,547,1,3,0)
	;;=3^84402
	;;^UTILITY(U,$J,358.3,548,0)
	;;=90720^^41^53^11
	;;^UTILITY(U,$J,358.3,548,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,548,1,2,0)
	;;=2^Tetanus/Diptheria (V03.7)
	;;^UTILITY(U,$J,358.3,548,1,3,0)
	;;=3^90720
	;;^UTILITY(U,$J,358.3,549,0)
	;;=J1885^^41^53^12
	;;^UTILITY(U,$J,358.3,549,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,549,1,2,0)
	;;=2^Toadol
	;;^UTILITY(U,$J,358.3,549,1,3,0)
	;;=3^J1885
	;;^UTILITY(U,$J,358.3,550,0)
	;;=J3420^^41^53^13
	;;^UTILITY(U,$J,358.3,550,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,550,1,2,0)
	;;=2^Vitamin B-12
	;;^UTILITY(U,$J,358.3,550,1,3,0)
	;;=3^J3420
	;;^UTILITY(U,$J,358.3,551,0)
	;;=82800^^41^56^1
	;;^UTILITY(U,$J,358.3,551,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,551,1,2,0)
	;;=2^Ph
	;;^UTILITY(U,$J,358.3,551,1,3,0)
	;;=3^82800
	;;^UTILITY(U,$J,358.3,552,0)
	;;=82803^^41^56^2
	;;^UTILITY(U,$J,358.3,552,1,0)
	;;=^358.31IA^3^2
	;;^UTILITY(U,$J,358.3,552,1,2,0)
	;;=2^PO2/PCO2
	;;^UTILITY(U,$J,358.3,552,1,3,0)
	;;=3^82803
	;;^UTILITY(U,$J,358.3,553,0)
	;;=1^^45^58^1
	;;^UTILITY(U,$J,358.3,553,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,553,1,1,0)
	;;=1^No-show
	;;^UTILITY(U,$J,358.3,554,0)
	;;=2^^45^58^2
	;;^UTILITY(U,$J,358.3,554,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,554,1,1,0)
	;;=1^Cancel
	;;^UTILITY(U,$J,358.3,555,0)
	;;=3^^45^58^3
	;;^UTILITY(U,$J,358.3,555,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,555,1,1,0)
	;;=1^Rescheduled
	;;^UTILITY(U,$J,358.3,556,0)
	;;=424.2^^46^59^1
	;;^UTILITY(U,$J,358.3,556,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,556,1,3,0)
	;;=3^Aortic stenosis/insuff
	;;^UTILITY(U,$J,358.3,556,1,4,0)
	;;=4^424.2
	;;^UTILITY(U,$J,358.3,557,0)
	;;=427.32^^46^59^2
	;;^UTILITY(U,$J,358.3,557,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,557,1,3,0)
	;;=3^Atrial flutter
	;;^UTILITY(U,$J,358.3,557,1,4,0)
	;;=4^427.32
	;;^UTILITY(U,$J,358.3,558,0)
	;;=1.99^1^46^59^1.99^Arrhytmia:^1^1
	;;^UTILITY(U,$J,358.3,558,1,0)
	;;=^358.31IA^4^0
	;;^UTILITY(U,$J,358.3,559,0)
	;;=427.89^^46^59^4
	;;^UTILITY(U,$J,358.3,559,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,559,1,3,0)
	;;=3^Atrial tachycardia
	;;^UTILITY(U,$J,358.3,559,1,4,0)
	;;=4^427.89
	;;^UTILITY(U,$J,358.3,560,0)
	;;=427.81^^46^59^5
	;;^UTILITY(U,$J,358.3,560,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,560,1,3,0)
	;;=3^Sick sinus syndrome
	;;^UTILITY(U,$J,358.3,560,1,4,0)
	;;=4^427.81
	;;^UTILITY(U,$J,358.3,561,0)
	;;=427.9^^46^59^6
	;;^UTILITY(U,$J,358.3,561,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,561,1,3,0)
	;;=3^Other arrythmia
	;;^UTILITY(U,$J,358.3,561,1,4,0)
	;;=4^427.9
	;;^UTILITY(U,$J,358.3,562,0)
	;;=7^1^46^59^7^ ^^1
	;;^UTILITY(U,$J,358.3,562,1,0)
	;;=^358.31IA^4^0
	;;^UTILITY(U,$J,358.3,563,0)
	;;=425.4^^46^59^8
	;;^UTILITY(U,$J,358.3,563,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,563,1,3,0)
	;;=3^Cardiomyopathy
	;;^UTILITY(U,$J,358.3,563,1,4,0)
	;;=4^425.4
	;;^UTILITY(U,$J,358.3,564,0)
	;;=416.9^^46^59^9
	;;^UTILITY(U,$J,358.3,564,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,564,1,3,0)
	;;=3^Coronary pulmonale
	;;^UTILITY(U,$J,358.3,564,1,4,0)
	;;=4^416.9
	;;^UTILITY(U,$J,358.3,565,0)
	;;=V15.2^^46^59^10
	;;^UTILITY(U,$J,358.3,565,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,565,1,3,0)
	;;=3^Coronary bypass surg (Hx)
	;;^UTILITY(U,$J,358.3,565,1,4,0)
	;;=4^V15.2
	;;^UTILITY(U,$J,358.3,566,0)
	;;=424.90^^46^59^11
	;;^UTILITY(U,$J,358.3,566,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,566,1,3,0)
	;;=3^Endocarditis
	;;^UTILITY(U,$J,358.3,566,1,4,0)
	;;=4^424.90
	;;^UTILITY(U,$J,358.3,567,0)
	;;=401.9^^46^59^12

IBDEI012
IBDEI012	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,567,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,567,1,3,0)
	;;=3^Hypertension, essential
	;;^UTILITY(U,$J,358.3,567,1,4,0)
	;;=4^401.9
	;;^UTILITY(U,$J,358.3,568,0)
	;;=424.0^^46^59^13
	;;^UTILITY(U,$J,358.3,568,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,568,1,3,0)
	;;=3^Mitral valve prolapse
	;;^UTILITY(U,$J,358.3,568,1,4,0)
	;;=4^424.0
	;;^UTILITY(U,$J,358.3,569,0)
	;;=706.1^^46^60^1
	;;^UTILITY(U,$J,358.3,569,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,569,1,3,0)
	;;=3^Acne
	;;^UTILITY(U,$J,358.3,569,1,4,0)
	;;=4^706.1
	;;^UTILITY(U,$J,358.3,570,0)
	;;=704.00^^46^60^2
	;;^UTILITY(U,$J,358.3,570,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,570,1,3,0)
	;;=3^Alopecia
	;;^UTILITY(U,$J,358.3,570,1,4,0)
	;;=4^704.00
	;;^UTILITY(U,$J,358.3,571,0)
	;;=682.9^^46^60^2
	;;^UTILITY(U,$J,358.3,571,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,571,1,3,0)
	;;=3^Cellulitis
	;;^UTILITY(U,$J,358.3,571,1,4,0)
	;;=4^682.9
	;;^UTILITY(U,$J,358.3,572,0)
	;;=706.2^^46^60^4
	;;^UTILITY(U,$J,358.3,572,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,572,1,3,0)
	;;=3^Cyst, epiderm/sebaceous
	;;^UTILITY(U,$J,358.3,572,1,4,0)
	;;=4^706.2
	;;^UTILITY(U,$J,358.3,573,0)
	;;=692.9^^46^60^5
	;;^UTILITY(U,$J,358.3,573,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,573,1,3,0)
	;;=3^Dermatitis
	;;^UTILITY(U,$J,358.3,573,1,4,0)
	;;=4^692.9
	;;^UTILITY(U,$J,358.3,574,0)
	;;=053.9^^46^60^6
	;;^UTILITY(U,$J,358.3,574,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,574,1,3,0)
	;;=3^Herpes zoster
	;;^UTILITY(U,$J,358.3,574,1,4,0)
	;;=4^053.9
	;;^UTILITY(U,$J,358.3,575,0)
	;;=696.1^^46^60^7
	;;^UTILITY(U,$J,358.3,575,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,575,1,3,0)
	;;=3^Psoriasis
	;;^UTILITY(U,$J,358.3,575,1,4,0)
	;;=4^696.1
	;;^UTILITY(U,$J,358.3,576,0)
	;;=695.3^^46^60^8
	;;^UTILITY(U,$J,358.3,576,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,576,1,3,0)
	;;=3^Rosacea
	;;^UTILITY(U,$J,358.3,576,1,4,0)
	;;=4^695.3
	;;^UTILITY(U,$J,358.3,577,0)
	;;=706.3^^46^60^9
	;;^UTILITY(U,$J,358.3,577,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,577,1,3,0)
	;;=3^Seborrhea
	;;^UTILITY(U,$J,358.3,577,1,4,0)
	;;=4^706.3
	;;^UTILITY(U,$J,358.3,578,0)
	;;=701.9^^46^60^9
	;;^UTILITY(U,$J,358.3,578,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,578,1,3,0)
	;;=3^Seborrhea
	;;^UTILITY(U,$J,358.3,578,1,4,0)
	;;=4^701.9
	;;^UTILITY(U,$J,358.3,579,0)
	;;=701.9^^46^60^10
	;;^UTILITY(U,$J,358.3,579,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,579,1,3,0)
	;;=3^Skin hypertroph/atroph
	;;^UTILITY(U,$J,358.3,579,1,4,0)
	;;=4^701.9
	;;^UTILITY(U,$J,358.3,580,0)
	;;=709.9^^46^60^11
	;;^UTILITY(U,$J,358.3,580,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,580,1,3,0)
	;;=3^Skin lesion
	;;^UTILITY(U,$J,358.3,580,1,4,0)
	;;=4^709.9
	;;^UTILITY(U,$J,358.3,581,0)
	;;=707.9^^46^60^12
	;;^UTILITY(U,$J,358.3,581,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,581,1,3,0)
	;;=3^Skin ulcer, chronic
	;;^UTILITY(U,$J,358.3,581,1,4,0)
	;;=4^707.9
	;;^UTILITY(U,$J,358.3,582,0)
	;;=14^1^46^60^14^Skin neoplasm:^1^1
	;;^UTILITY(U,$J,358.3,582,1,0)
	;;=^358.31IA^4^0
	;;^UTILITY(U,$J,358.3,583,0)
	;;=216.9^^46^60^15
	;;^UTILITY(U,$J,358.3,583,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,583,1,3,0)
	;;=3^Benign
	;;^UTILITY(U,$J,358.3,583,1,4,0)
	;;=4^216.9
	;;^UTILITY(U,$J,358.3,584,0)
	;;=173.9^^46^60^15
	;;^UTILITY(U,$J,358.3,584,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,584,1,3,0)
	;;=3^Malignant
	;;^UTILITY(U,$J,358.3,584,1,4,0)
	;;=4^173.9
	;;^UTILITY(U,$J,358.3,585,0)
	;;=172.9^^46^60^16
	;;^UTILITY(U,$J,358.3,585,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,585,1,3,0)
	;;=3^Melanoma
	;;^UTILITY(U,$J,358.3,585,1,4,0)
	;;=4^172.9
	;;^UTILITY(U,$J,358.3,586,0)
	;;=238.2^^46^60^17
	;;^UTILITY(U,$J,358.3,586,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,586,1,3,0)
	;;=3^Uncrtn behavior
	;;^UTILITY(U,$J,358.3,586,1,4,0)
	;;=4^238.2
	;;^UTILITY(U,$J,358.3,587,0)
	;;=477.8^^46^61^1
	;;^UTILITY(U,$J,358.3,587,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,587,1,3,0)
	;;=3^Allergic rhinitis
	;;^UTILITY(U,$J,358.3,587,1,4,0)
	;;=4^477.8
	;;^UTILITY(U,$J,358.3,588,0)
	;;=380.4^^46^61^2
	;;^UTILITY(U,$J,358.3,588,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,588,1,3,0)
	;;=3^Cerumen impaction
	;;^UTILITY(U,$J,358.3,588,1,4,0)
	;;=4^380.4
	;;^UTILITY(U,$J,358.3,589,0)
	;;=388.70^^46^61^3
	;;^UTILITY(U,$J,358.3,589,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,589,1,3,0)
	;;=3^Ear pain
	;;^UTILITY(U,$J,358.3,589,1,4,0)
	;;=4^388.70
	;;^UTILITY(U,$J,358.3,590,0)
	;;=4^1^46^61^4^Eye:^1^1
	;;^UTILITY(U,$J,358.3,590,1,0)
	;;=^358.31IA^4^0
	;;^UTILITY(U,$J,358.3,591,0)
	;;=366.10^^46^61^5
	;;^UTILITY(U,$J,358.3,591,1,0)
	;;=^358.31IA^4^2

IBDEI013
IBDEI013	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,591,1,3,0)
	;;=3^Cataract, senile
	;;^UTILITY(U,$J,358.3,591,1,4,0)
	;;=4^366.10
	;;^UTILITY(U,$J,358.3,592,0)
	;;=372.30^^46^61^6
	;;^UTILITY(U,$J,358.3,592,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,592,1,3,0)
	;;=3^Conjunctivitis
	;;^UTILITY(U,$J,358.3,592,1,4,0)
	;;=4^372.30
	;;^UTILITY(U,$J,358.3,593,0)
	;;=930.9^^46^61^7
	;;^UTILITY(U,$J,358.3,593,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,593,1,3,0)
	;;=3^Foreign body
	;;^UTILITY(U,$J,358.3,593,1,4,0)
	;;=4^930.9
	;;^UTILITY(U,$J,358.3,594,0)
	;;=365.9^^46^61^8
	;;^UTILITY(U,$J,358.3,594,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,594,1,3,0)
	;;=3^Glaucoma
	;;^UTILITY(U,$J,358.3,594,1,4,0)
	;;=4^365.9
	;;^UTILITY(U,$J,358.3,595,0)
	;;=9^1^46^61^9^ ^^1
	;;^UTILITY(U,$J,358.3,595,1,0)
	;;=^358.31IA^4^0
	;;^UTILITY(U,$J,358.3,596,0)
	;;=381.81^^46^61^10
	;;^UTILITY(U,$J,358.3,596,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,596,1,3,0)
	;;=3^Eustachian tube dysfunction
	;;^UTILITY(U,$J,358.3,596,1,4,0)
	;;=4^381.81
	;;^UTILITY(U,$J,358.3,597,0)
	;;=389.9^^46^61^11
	;;^UTILITY(U,$J,358.3,597,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,597,1,3,0)
	;;=3^Hearing loss
	;;^UTILITY(U,$J,358.3,597,1,4,0)
	;;=4^389.9
	;;^UTILITY(U,$J,358.3,598,0)
	;;=380.10^^46^61^12
	;;^UTILITY(U,$J,358.3,598,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,598,1,3,0)
	;;=3^Otitis externa
	;;^UTILITY(U,$J,358.3,598,1,4,0)
	;;=4^380.10
	;;^UTILITY(U,$J,358.3,599,0)
	;;=382.9^^46^61^13
	;;^UTILITY(U,$J,358.3,599,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,599,1,3,0)
	;;=3^Otitis media
	;;^UTILITY(U,$J,358.3,599,1,4,0)
	;;=4^382.9
	;;^UTILITY(U,$J,358.3,600,0)
	;;=462.^^46^61^14
	;;^UTILITY(U,$J,358.3,600,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,600,1,3,0)
	;;=3^Pharyngitis, acute
	;;^UTILITY(U,$J,358.3,600,1,4,0)
	;;=4^462.
	;;^UTILITY(U,$J,358.3,601,0)
	;;=472.0^^46^61^15
	;;^UTILITY(U,$J,358.3,601,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,601,1,3,0)
	;;=3^Sinusitis, chronic
	;;^UTILITY(U,$J,358.3,601,1,4,0)
	;;=4^472.0
	;;^UTILITY(U,$J,358.3,602,0)
	;;=461.9^^46^61^16
	;;^UTILITY(U,$J,358.3,602,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,602,1,3,0)
	;;=3^Sinusitis, acute
	;;^UTILITY(U,$J,358.3,602,1,4,0)
	;;=4^461.9
	;;^UTILITY(U,$J,358.3,603,0)
	;;=465.9^^46^61^17
	;;^UTILITY(U,$J,358.3,603,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,603,1,3,0)
	;;=3^Upper respiratory infection
	;;^UTILITY(U,$J,358.3,603,1,4,0)
	;;=4^465.9
	;;^UTILITY(U,$J,358.3,604,0)
	;;=250.01^^46^62^1
	;;^UTILITY(U,$J,358.3,604,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,604,1,3,0)
	;;=3^Diabetes I-IDDM comp
	;;^UTILITY(U,$J,358.3,604,1,4,0)
	;;=4^250.01
	;;^UTILITY(U,$J,358.3,605,0)
	;;=250.00^^46^62^2
	;;^UTILITY(U,$J,358.3,605,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,605,1,3,0)
	;;=3^Diabetes II-NIDDM comp
	;;^UTILITY(U,$J,358.3,605,1,4,0)
	;;=4^250.00
	;;^UTILITY(U,$J,358.3,606,0)
	;;=272.0^^46^62^3
	;;^UTILITY(U,$J,358.3,606,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,606,1,3,0)
	;;=3^Hypercholesterolemia
	;;^UTILITY(U,$J,358.3,606,1,4,0)
	;;=4^272.0
	;;^UTILITY(U,$J,358.3,607,0)
	;;=242.90^^46^62^4
	;;^UTILITY(U,$J,358.3,607,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,607,1,3,0)
	;;=3^Hyperthyroidism
	;;^UTILITY(U,$J,358.3,607,1,4,0)
	;;=4^242.90
	;;^UTILITY(U,$J,358.3,608,0)
	;;=244.9^^46^62^5
	;;^UTILITY(U,$J,358.3,608,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,608,1,3,0)
	;;=3^Hypothyroidism
	;;^UTILITY(U,$J,358.3,608,1,4,0)
	;;=4^244.9
	;;^UTILITY(U,$J,358.3,609,0)
	;;=278.0^^46^62^6
	;;^UTILITY(U,$J,358.3,609,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,609,1,3,0)
	;;=3^Obesity
	;;^UTILITY(U,$J,358.3,609,1,4,0)
	;;=4^278.0
	;;^UTILITY(U,$J,358.3,610,0)
	;;=733.01^^46^62^7
	;;^UTILITY(U,$J,358.3,610,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,610,1,3,0)
	;;=3^Osteoporosis, Senile
	;;^UTILITY(U,$J,358.3,610,1,4,0)
	;;=4^733.01
	;;^UTILITY(U,$J,358.3,611,0)
	;;=574.20^^46^63^1
	;;^UTILITY(U,$J,358.3,611,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,611,1,3,0)
	;;=3^Cholelithiasis
	;;^UTILITY(U,$J,358.3,611,1,4,0)
	;;=4^574.20
	;;^UTILITY(U,$J,358.3,612,0)
	;;=571.2^^46^63^2
	;;^UTILITY(U,$J,358.3,612,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,612,1,3,0)
	;;=3^Cirrhosis, alcoholic
	;;^UTILITY(U,$J,358.3,612,1,4,0)
	;;=4^571.2
	;;^UTILITY(U,$J,358.3,613,0)
	;;=571.9^^46^63^3
	;;^UTILITY(U,$J,358.3,613,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,613,1,3,0)
	;;=3^Cirrhosis, non alcoholic
	;;^UTILITY(U,$J,358.3,613,1,4,0)
	;;=4^571.9
	;;^UTILITY(U,$J,358.3,614,0)
	;;=558.9^^46^63^4
	;;^UTILITY(U,$J,358.3,614,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,614,1,3,0)
	;;=3^Diarrhea

IBDEI014
IBDEI014	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,614,1,4,0)
	;;=4^558.9
	;;^UTILITY(U,$J,358.3,615,0)
	;;=009.2^^46^63^5
	;;^UTILITY(U,$J,358.3,615,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,615,1,3,0)
	;;=3^Diarrhea infectious
	;;^UTILITY(U,$J,358.3,615,1,4,0)
	;;=4^009.2
	;;^UTILITY(U,$J,358.3,616,0)
	;;=562.10^^46^63^6
	;;^UTILITY(U,$J,358.3,616,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,616,1,3,0)
	;;=3^Diverticulosis
	;;^UTILITY(U,$J,358.3,616,1,4,0)
	;;=4^562.10
	;;^UTILITY(U,$J,358.3,617,0)
	;;=456.1^^46^63^7
	;;^UTILITY(U,$J,358.3,617,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,617,1,3,0)
	;;=3^Esophageal varices
	;;^UTILITY(U,$J,358.3,617,1,4,0)
	;;=4^456.1
	;;^UTILITY(U,$J,358.3,618,0)
	;;=530.81^^46^63^8
	;;^UTILITY(U,$J,358.3,618,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,618,1,3,0)
	;;=3^Esophageal reflux disease
	;;^UTILITY(U,$J,358.3,618,1,4,0)
	;;=4^530.81
	;;^UTILITY(U,$J,358.3,619,0)
	;;=575.9^^46^63^9
	;;^UTILITY(U,$J,358.3,619,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,619,1,3,0)
	;;=3^Gall Bladder disease
	;;^UTILITY(U,$J,358.3,619,1,4,0)
	;;=4^575.9
	;;^UTILITY(U,$J,358.3,620,0)
	;;=558.9^^46^63^10
	;;^UTILITY(U,$J,358.3,620,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,620,1,3,0)
	;;=3^Gastroenteritis
	;;^UTILITY(U,$J,358.3,620,1,4,0)
	;;=4^558.9
	;;^UTILITY(U,$J,358.3,621,0)
	;;=578.9^^46^63^11
	;;^UTILITY(U,$J,358.3,621,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,621,1,3,0)
	;;=3^GI bleeding
	;;^UTILITY(U,$J,358.3,621,1,4,0)
	;;=4^578.9
	;;^UTILITY(U,$J,358.3,622,0)
	;;=455.6^^46^63^12
	;;^UTILITY(U,$J,358.3,622,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,622,1,3,0)
	;;=3^Hemorrhoids
	;;^UTILITY(U,$J,358.3,622,1,4,0)
	;;=4^455.6
	;;^UTILITY(U,$J,358.3,623,0)
	;;=070.9^^46^63^13
	;;^UTILITY(U,$J,358.3,623,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,623,1,3,0)
	;;=3^Hepatitis viral, NOS
	;;^UTILITY(U,$J,358.3,623,1,4,0)
	;;=4^070.9
	;;^UTILITY(U,$J,358.3,624,0)
	;;=571.1^^46^63^14
	;;^UTILITY(U,$J,358.3,624,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,624,1,3,0)
	;;=3^Hepatitis, alcoholic
	;;^UTILITY(U,$J,358.3,624,1,4,0)
	;;=4^571.1
	;;^UTILITY(U,$J,358.3,625,0)
	;;=579.9^^46^63^15
	;;^UTILITY(U,$J,358.3,625,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,625,1,3,0)
	;;=3^Intestinal malabsorption
	;;^UTILITY(U,$J,358.3,625,1,4,0)
	;;=4^579.9
	;;^UTILITY(U,$J,358.3,626,0)
	;;=564.1^^46^63^17
	;;^UTILITY(U,$J,358.3,626,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,626,1,3,0)
	;;=3^Irritable bowel syndrome
	;;^UTILITY(U,$J,358.3,626,1,4,0)
	;;=4^564.1
	;;^UTILITY(U,$J,358.3,627,0)
	;;=577.0^^46^63^18
	;;^UTILITY(U,$J,358.3,627,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,627,1,3,0)
	;;=3^Pancreatitis, acute
	;;^UTILITY(U,$J,358.3,627,1,4,0)
	;;=4^577.0
	;;^UTILITY(U,$J,358.3,628,0)
	;;=577.1^^46^63^19
	;;^UTILITY(U,$J,358.3,628,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,628,1,3,0)
	;;=3^Pancreatitis, chronic
	;;^UTILITY(U,$J,358.3,628,1,4,0)
	;;=4^577.1
	;;^UTILITY(U,$J,358.3,629,0)
	;;=211.3^^46^63^20
	;;^UTILITY(U,$J,358.3,629,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,629,1,3,0)
	;;=3^Polyp(s), colon
	;;^UTILITY(U,$J,358.3,629,1,4,0)
	;;=4^211.3
	;;^UTILITY(U,$J,358.3,630,0)
	;;=533.90^^46^63^21
	;;^UTILITY(U,$J,358.3,630,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,630,1,3,0)
	;;=3^Ulcer, peptic
	;;^UTILITY(U,$J,358.3,630,1,4,0)
	;;=4^533.90
	;;^UTILITY(U,$J,358.3,631,0)
	;;=285.9^^46^64^1
	;;^UTILITY(U,$J,358.3,631,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,631,1,3,0)
	;;=3^Anemia
	;;^UTILITY(U,$J,358.3,631,1,4,0)
	;;=4^285.9
	;;^UTILITY(U,$J,358.3,632,0)
	;;=2^1^46^64^2^Anemia, defiency:^1^1
	;;^UTILITY(U,$J,358.3,632,1,0)
	;;=^358.31IA^4^0
	;;^UTILITY(U,$J,358.3,633,0)
	;;=266.2^^46^64^3
	;;^UTILITY(U,$J,358.3,633,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,633,1,3,0)
	;;=3^B12 & folate
	;;^UTILITY(U,$J,358.3,633,1,4,0)
	;;=4^266.2
	;;^UTILITY(U,$J,358.3,634,0)
	;;=281.2^^46^64^4
	;;^UTILITY(U,$J,358.3,634,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,634,1,3,0)
	;;=3^Folate
	;;^UTILITY(U,$J,358.3,634,1,4,0)
	;;=4^281.2
	;;^UTILITY(U,$J,358.3,635,0)
	;;=280.9^^46^64^5
	;;^UTILITY(U,$J,358.3,635,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,635,1,3,0)
	;;=3^Iron
	;;^UTILITY(U,$J,358.3,635,1,4,0)
	;;=4^280.9
	;;^UTILITY(U,$J,358.3,636,0)
	;;=553.00^^46^65^1
	;;^UTILITY(U,$J,358.3,636,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,636,1,3,0)
	;;=3^Hernia, femoral
	;;^UTILITY(U,$J,358.3,636,1,4,0)
	;;=4^553.00
	;;^UTILITY(U,$J,358.3,637,0)
	;;=550.90^^46^65^2
	;;^UTILITY(U,$J,358.3,637,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,637,1,3,0)
	;;=3^Hernia, inquinal
	;;^UTILITY(U,$J,358.3,637,1,4,0)
	;;=4^550.90

IBDEI015
IBDEI015	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,638,0)
	;;=724.2^^46^65^3
	;;^UTILITY(U,$J,358.3,638,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,638,1,3,0)
	;;=3^Low back pain, acute
	;;^UTILITY(U,$J,358.3,638,1,4,0)
	;;=4^724.2
	;;^UTILITY(U,$J,358.3,639,0)
	;;=724.9^^46^65^4
	;;^UTILITY(U,$J,358.3,639,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,639,1,3,0)
	;;=3^Low back pain, chronic
	;;^UTILITY(U,$J,358.3,639,1,4,0)
	;;=4^724.9
	;;^UTILITY(U,$J,358.3,640,0)
	;;=728.85^^46^65^5
	;;^UTILITY(U,$J,358.3,640,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,640,1,3,0)
	;;=3^Muscle spasm
	;;^UTILITY(U,$J,358.3,640,1,4,0)
	;;=4^728.85
	;;^UTILITY(U,$J,358.3,641,0)
	;;=331.0^^46^66^1
	;;^UTILITY(U,$J,358.3,641,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,641,1,3,0)
	;;=3^Alzheimer's disease
	;;^UTILITY(U,$J,358.3,641,1,4,0)
	;;=4^331.0
	;;^UTILITY(U,$J,358.3,642,0)
	;;=351.0^^46^66^2
	;;^UTILITY(U,$J,358.3,642,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,642,1,3,0)
	;;=3^Bell's palsy
	;;^UTILITY(U,$J,358.3,642,1,4,0)
	;;=4^351.0
	;;^UTILITY(U,$J,358.3,643,0)
	;;=433.10^^46^66^3
	;;^UTILITY(U,$J,358.3,643,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,643,1,3,0)
	;;=3^Caroid artery occlusion
	;;^UTILITY(U,$J,358.3,643,1,4,0)
	;;=4^433.10
	;;^UTILITY(U,$J,358.3,644,0)
	;;=780.3^^46^66^4
	;;^UTILITY(U,$J,358.3,644,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,644,1,3,0)
	;;=3^Convulsive/seizure disorder
	;;^UTILITY(U,$J,358.3,644,1,4,0)
	;;=4^780.3
	;;^UTILITY(U,$J,358.3,645,0)
	;;=436.^^46^66^5
	;;^UTILITY(U,$J,358.3,645,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,645,1,3,0)
	;;=3^CVA, Hx of w/o sequelae
	;;^UTILITY(U,$J,358.3,645,1,4,0)
	;;=4^436.
	;;^UTILITY(U,$J,358.3,646,0)
	;;=290.0^^46^66^6
	;;^UTILITY(U,$J,358.3,646,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,646,1,3,0)
	;;=3^Dementia, non-Alzheimers
	;;^UTILITY(U,$J,358.3,646,1,4,0)
	;;=4^290.0
	;;^UTILITY(U,$J,358.3,647,0)
	;;=345.90^^46^66^7
	;;^UTILITY(U,$J,358.3,647,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,647,1,3,0)
	;;=3^Epilepsy
	;;^UTILITY(U,$J,358.3,647,1,4,0)
	;;=4^345.90
	;;^UTILITY(U,$J,358.3,648,0)
	;;=346.90^^46^66^8
	;;^UTILITY(U,$J,358.3,648,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,648,1,3,0)
	;;=3^Headache, migraine
	;;^UTILITY(U,$J,358.3,648,1,4,0)
	;;=4^346.90
	;;^UTILITY(U,$J,358.3,649,0)
	;;=784.0^^46^66^9
	;;^UTILITY(U,$J,358.3,649,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,649,1,3,0)
	;;=3^Headache, vascular
	;;^UTILITY(U,$J,358.3,649,1,4,0)
	;;=4^784.0
	;;^UTILITY(U,$J,358.3,650,0)
	;;=332.0^^46^66^10
	;;^UTILITY(U,$J,358.3,650,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,650,1,3,0)
	;;=3^Parkinson disease
	;;^UTILITY(U,$J,358.3,650,1,4,0)
	;;=4^332.0
	;;^UTILITY(U,$J,358.3,651,0)
	;;=724.3^^46^66^11
	;;^UTILITY(U,$J,358.3,651,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,651,1,3,0)
	;;=3^Sciatica, acute
	;;^UTILITY(U,$J,358.3,651,1,4,0)
	;;=4^724.3
	;;^UTILITY(U,$J,358.3,652,0)
	;;=435.9^^46^66^13
	;;^UTILITY(U,$J,358.3,652,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,652,1,3,0)
	;;=3^TIA
	;;^UTILITY(U,$J,358.3,652,1,4,0)
	;;=4^435.9
	;;^UTILITY(U,$J,358.3,653,0)
	;;=14^1^46^66^14^Peripheral neuropathy due to:^1^1
	;;^UTILITY(U,$J,358.3,653,1,0)
	;;=^358.31IA^4^0
	;;^UTILITY(U,$J,358.3,654,0)
	;;=357.5^^46^66^15
	;;^UTILITY(U,$J,358.3,654,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,654,1,3,0)
	;;=3^Alcohol
	;;^UTILITY(U,$J,358.3,654,1,4,0)
	;;=4^357.5
	;;^UTILITY(U,$J,358.3,655,0)
	;;=250.60^^46^66^16
	;;^UTILITY(U,$J,358.3,655,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,655,1,3,0)
	;;=3^Diabetes
	;;^UTILITY(U,$J,358.3,655,1,4,0)
	;;=4^250.60
	;;^UTILITY(U,$J,358.3,656,0)
	;;=724.3^^46^66^12
	;;^UTILITY(U,$J,358.3,656,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,656,1,3,0)
	;;=3^Sciatica, Chronic
	;;^UTILITY(U,$J,358.3,656,1,4,0)
	;;=4^724.3
	;;^UTILITY(U,$J,358.3,657,0)
	;;=357.6^^46^66^17
	;;^UTILITY(U,$J,358.3,657,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,657,1,3,0)
	;;=3^Drugs
	;;^UTILITY(U,$J,358.3,657,1,4,0)
	;;=4^357.6
	;;^UTILITY(U,$J,358.3,658,0)
	;;=493.90^^46^67^1
	;;^UTILITY(U,$J,358.3,658,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,658,1,3,0)
	;;=3^Asthma
	;;^UTILITY(U,$J,358.3,658,1,4,0)
	;;=4^493.90
	;;^UTILITY(U,$J,358.3,659,0)
	;;=466.0^^46^67^2
	;;^UTILITY(U,$J,358.3,659,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,659,1,3,0)
	;;=3^Bronchitis, acute
	;;^UTILITY(U,$J,358.3,659,1,4,0)
	;;=4^466.0
	;;^UTILITY(U,$J,358.3,660,0)
	;;=491.9^^46^67^3
	;;^UTILITY(U,$J,358.3,660,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,660,1,3,0)
	;;=3^Bronchitis, chronic
	;;^UTILITY(U,$J,358.3,660,1,4,0)
	;;=4^491.9
	;;^UTILITY(U,$J,358.3,661,0)
	;;=492.8^^46^67^4

IBDEI016
IBDEI016	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,661,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,661,1,3,0)
	;;=3^Emphysema
	;;^UTILITY(U,$J,358.3,661,1,4,0)
	;;=4^492.8
	;;^UTILITY(U,$J,358.3,662,0)
	;;=462.^^46^67^5
	;;^UTILITY(U,$J,358.3,662,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,662,1,3,0)
	;;=3^Pharyngitis
	;;^UTILITY(U,$J,358.3,662,1,4,0)
	;;=4^462.
	;;^UTILITY(U,$J,358.3,663,0)
	;;=486.^^46^67^6
	;;^UTILITY(U,$J,358.3,663,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,663,1,3,0)
	;;=3^Pneumonia, NOS
	;;^UTILITY(U,$J,358.3,663,1,4,0)
	;;=4^486.
	;;^UTILITY(U,$J,358.3,664,0)
	;;=473.9^^46^67^8
	;;^UTILITY(U,$J,358.3,664,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,664,1,3,0)
	;;=3^Sinusitis, chronic
	;;^UTILITY(U,$J,358.3,664,1,4,0)
	;;=4^473.9
	;;^UTILITY(U,$J,358.3,665,0)
	;;=780.57^^46^67^9
	;;^UTILITY(U,$J,358.3,665,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,665,1,3,0)
	;;=3^Sleep apnea syndrome
	;;^UTILITY(U,$J,358.3,665,1,4,0)
	;;=4^780.57
	;;^UTILITY(U,$J,358.3,666,0)
	;;=V12.51^^46^67^7
	;;^UTILITY(U,$J,358.3,666,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,666,1,3,0)
	;;=3^Pulmonary Embolism (Hx of)
	;;^UTILITY(U,$J,358.3,666,1,4,0)
	;;=4^V12.51
	;;^UTILITY(U,$J,358.3,667,0)
	;;=596.59^^46^68^1
	;;^UTILITY(U,$J,358.3,667,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,667,1,3,0)
	;;=3^Bladder dysfunction
	;;^UTILITY(U,$J,358.3,667,1,4,0)
	;;=4^596.59
	;;^UTILITY(U,$J,358.3,668,0)
	;;=600.^^46^68^2
	;;^UTILITY(U,$J,358.3,668,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,668,1,3,0)
	;;=3^Benign prostatic hypertrphy
	;;^UTILITY(U,$J,358.3,668,1,4,0)
	;;=4^600.
	;;^UTILITY(U,$J,358.3,669,0)
	;;=593.9^^46^68^3
	;;^UTILITY(U,$J,358.3,669,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,669,1,3,0)
	;;=3^Chronic renal insufficiency
	;;^UTILITY(U,$J,358.3,669,1,4,0)
	;;=4^593.9
	;;^UTILITY(U,$J,358.3,670,0)
	;;=V45.1^^46^68^4
	;;^UTILITY(U,$J,358.3,670,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,670,1,3,0)
	;;=3^Dialysis status
	;;^UTILITY(U,$J,358.3,670,1,4,0)
	;;=4^V45.1
	;;^UTILITY(U,$J,358.3,671,0)
	;;=599.7^^46^68^5
	;;^UTILITY(U,$J,358.3,671,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,671,1,3,0)
	;;=3^Hematuria
	;;^UTILITY(U,$J,358.3,671,1,4,0)
	;;=4^599.7
	;;^UTILITY(U,$J,358.3,672,0)
	;;=607.84^^46^68^6
	;;^UTILITY(U,$J,358.3,672,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,672,1,3,0)
	;;=3^Impotence
	;;^UTILITY(U,$J,358.3,672,1,4,0)
	;;=4^607.84
	;;^UTILITY(U,$J,358.3,673,0)
	;;=592.0^^46^68^7
	;;^UTILITY(U,$J,358.3,673,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,673,1,3,0)
	;;=3^Renal calculus
	;;^UTILITY(U,$J,358.3,673,1,4,0)
	;;=4^592.0
	;;^UTILITY(U,$J,358.3,674,0)
	;;=599.0^^46^68^8
	;;^UTILITY(U,$J,358.3,674,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,674,1,3,0)
	;;=3^Urninary tract infection
	;;^UTILITY(U,$J,358.3,674,1,4,0)
	;;=4^599.0
	;;^UTILITY(U,$J,358.3,675,0)
	;;=720.0^^46^69^1
	;;^UTILITY(U,$J,358.3,675,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,675,1,3,0)
	;;=3^Ankylosing spondylitis
	;;^UTILITY(U,$J,358.3,675,1,4,0)
	;;=4^720.0
	;;^UTILITY(U,$J,358.3,676,0)
	;;=719.40^^46^69^2
	;;^UTILITY(U,$J,358.3,676,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,676,1,3,0)
	;;=3^Arthralgia
	;;^UTILITY(U,$J,358.3,676,1,4,0)
	;;=4^719.40
	;;^UTILITY(U,$J,358.3,677,0)
	;;=727.3^^46^69^3
	;;^UTILITY(U,$J,358.3,677,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,677,1,3,0)
	;;=3^Bursitis
	;;^UTILITY(U,$J,358.3,677,1,4,0)
	;;=4^727.3
	;;^UTILITY(U,$J,358.3,678,0)
	;;=354.0^^46^69^4
	;;^UTILITY(U,$J,358.3,678,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,678,1,3,0)
	;;=3^Carpel tunnel syndrome
	;;^UTILITY(U,$J,358.3,678,1,4,0)
	;;=4^354.0
	;;^UTILITY(U,$J,358.3,679,0)
	;;=5^1^46^69^5^DJD/oteoarthritis:^1^1
	;;^UTILITY(U,$J,358.3,679,1,0)
	;;=^358.31IA^4^0
	;;^UTILITY(U,$J,358.3,680,0)
	;;=715.95^^46^69^6
	;;^UTILITY(U,$J,358.3,680,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,680,1,3,0)
	;;=3^Hip
	;;^UTILITY(U,$J,358.3,680,1,4,0)
	;;=4^715.95
	;;^UTILITY(U,$J,358.3,681,0)
	;;=715.96^^46^69^7
	;;^UTILITY(U,$J,358.3,681,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,681,1,3,0)
	;;=3^Knee
	;;^UTILITY(U,$J,358.3,681,1,4,0)
	;;=4^715.96
	;;^UTILITY(U,$J,358.3,682,0)
	;;=715.89^^46^69^8
	;;^UTILITY(U,$J,358.3,682,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,682,1,3,0)
	;;=3^Multiple sites
	;;^UTILITY(U,$J,358.3,682,1,4,0)
	;;=4^715.89
	;;^UTILITY(U,$J,358.3,683,0)
	;;=715.91^^46^69^9
	;;^UTILITY(U,$J,358.3,683,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,683,1,3,0)
	;;=3^Shoulder
	;;^UTILITY(U,$J,358.3,683,1,4,0)
	;;=4^715.91
	;;^UTILITY(U,$J,358.3,684,0)
	;;=829.0^^46^69^10
	;;^UTILITY(U,$J,358.3,684,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,684,1,3,0)
	;;=3^Fracture

IBDEI017
IBDEI017	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,684,1,4,0)
	;;=4^829.0
	;;^UTILITY(U,$J,358.3,685,0)
	;;=274.9^^46^69^11
	;;^UTILITY(U,$J,358.3,685,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,685,1,3,0)
	;;=3^Gout
	;;^UTILITY(U,$J,358.3,685,1,4,0)
	;;=4^274.9
	;;^UTILITY(U,$J,358.3,686,0)
	;;=V43.60^^46^69^12
	;;^UTILITY(U,$J,358.3,686,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,686,1,3,0)
	;;=3^Hx of joint replacement
	;;^UTILITY(U,$J,358.3,686,1,4,0)
	;;=4^V43.60
	;;^UTILITY(U,$J,358.3,687,0)
	;;=729.0^^46^69^13
	;;^UTILITY(U,$J,358.3,687,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,687,1,3,0)
	;;=3^Myalgia
	;;^UTILITY(U,$J,358.3,687,1,4,0)
	;;=4^729.0
	;;^UTILITY(U,$J,358.3,688,0)
	;;=715.90^^46^69^14
	;;^UTILITY(U,$J,358.3,688,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,688,1,3,0)
	;;=3^Osteoarthritis
	;;^UTILITY(U,$J,358.3,688,1,4,0)
	;;=4^715.90
	;;^UTILITY(U,$J,358.3,689,0)
	;;=730.20^^46^69^15
	;;^UTILITY(U,$J,358.3,689,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,689,1,3,0)
	;;=3^Osteomyelitis
	;;^UTILITY(U,$J,358.3,689,1,4,0)
	;;=4^730.20
	;;^UTILITY(U,$J,358.3,690,0)
	;;=719.49^^46^69^16
	;;^UTILITY(U,$J,358.3,690,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,690,1,3,0)
	;;=3^Polyarthralgia, NOS
	;;^UTILITY(U,$J,358.3,690,1,4,0)
	;;=4^719.49
	;;^UTILITY(U,$J,358.3,691,0)
	;;=714.0^^46^69^17
	;;^UTILITY(U,$J,358.3,691,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,691,1,3,0)
	;;=3^Rheumatoid arthritis
	;;^UTILITY(U,$J,358.3,691,1,4,0)
	;;=4^714.0
	;;^UTILITY(U,$J,358.3,692,0)
	;;=726.90^^46^69^18
	;;^UTILITY(U,$J,358.3,692,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,692,1,3,0)
	;;=3^Tendonitis
	;;^UTILITY(U,$J,358.3,692,1,4,0)
	;;=4^726.90
	;;^UTILITY(U,$J,358.3,693,0)
	;;=805.8^^46^69^19
	;;^UTILITY(U,$J,358.3,693,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,693,1,3,0)
	;;=3^Vertebral fx, closed
	;;^UTILITY(U,$J,358.3,693,1,4,0)
	;;=4^805.8
	;;^UTILITY(U,$J,358.3,694,0)
	;;=441.4^^46^70^1
	;;^UTILITY(U,$J,358.3,694,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,694,1,3,0)
	;;=3^Abdominal aortic aneurysm
	;;^UTILITY(U,$J,358.3,694,1,4,0)
	;;=4^441.4
	;;^UTILITY(U,$J,358.3,695,0)
	;;=454.9^^46^70^3
	;;^UTILITY(U,$J,358.3,695,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,695,1,3,0)
	;;=3^Varicose veins
	;;^UTILITY(U,$J,358.3,695,1,4,0)
	;;=4^454.9
	;;^UTILITY(U,$J,358.3,696,0)
	;;=453.9^^46^70^4
	;;^UTILITY(U,$J,358.3,696,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,696,1,3,0)
	;;=3^Venous thrombosis
	;;^UTILITY(U,$J,358.3,696,1,4,0)
	;;=4^453.9
	;;^UTILITY(U,$J,358.3,697,0)
	;;=451.9^^46^70^1.5
	;;^UTILITY(U,$J,358.3,697,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,697,1,3,0)
	;;=3^Thrombophlebitis Lower Ext.
	;;^UTILITY(U,$J,358.3,697,1,4,0)
	;;=4^451.9
	;;^UTILITY(U,$J,358.3,698,0)
	;;=451.2^^46^70^1.6
	;;^UTILITY(U,$J,358.3,698,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,698,1,3,0)
	;;=3^Thrombophlebitis Unspec.
	;;^UTILITY(U,$J,358.3,698,1,4,0)
	;;=4^451.2
	;;^UTILITY(U,$J,358.3,699,0)
	;;=303.90^^46^72^1
	;;^UTILITY(U,$J,358.3,699,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,699,1,3,0)
	;;=3^Alcoholism
	;;^UTILITY(U,$J,358.3,699,1,4,0)
	;;=4^303.90
	;;^UTILITY(U,$J,358.3,700,0)
	;;=312.10^^46^72^2
	;;^UTILITY(U,$J,358.3,700,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,700,1,3,0)
	;;=3^Adjst Rxn emtn/&condct dsrd
	;;^UTILITY(U,$J,358.3,700,1,4,0)
	;;=4^312.10
	;;^UTILITY(U,$J,358.3,701,0)
	;;=296.90^^46^72^3
	;;^UTILITY(U,$J,358.3,701,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,701,1,3,0)
	;;=3^Affective disorder
	;;^UTILITY(U,$J,358.3,701,1,4,0)
	;;=4^296.90
	;;^UTILITY(U,$J,358.3,702,0)
	;;=300.00^^46^72^4
	;;^UTILITY(U,$J,358.3,702,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,702,1,3,0)
	;;=3^Anxiety state
	;;^UTILITY(U,$J,358.3,702,1,4,0)
	;;=4^300.00
	;;^UTILITY(U,$J,358.3,703,0)
	;;=311.^^46^72^5
	;;^UTILITY(U,$J,358.3,703,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,703,1,3,0)
	;;=3^Depressive disorder
	;;^UTILITY(U,$J,358.3,703,1,4,0)
	;;=4^311.
	;;^UTILITY(U,$J,358.3,704,0)
	;;=305.90^^46^72^6
	;;^UTILITY(U,$J,358.3,704,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,704,1,3,0)
	;;=3^Drug abuse, NOS
	;;^UTILITY(U,$J,358.3,704,1,4,0)
	;;=4^305.90
	;;^UTILITY(U,$J,358.3,705,0)
	;;=309.0^^46^72^7
	;;^UTILITY(U,$J,358.3,705,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,705,1,3,0)
	;;=3^Grief reaction
	;;^UTILITY(U,$J,358.3,705,1,4,0)
	;;=4^309.0
	;;^UTILITY(U,$J,358.3,706,0)
	;;=298.9^^46^72^9
	;;^UTILITY(U,$J,358.3,706,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,706,1,3,0)
	;;=3^Psychosis, NOS
	;;^UTILITY(U,$J,358.3,706,1,4,0)
	;;=4^298.9
	;;^UTILITY(U,$J,358.3,707,0)
	;;=V62.9^^46^72^10
	;;^UTILITY(U,$J,358.3,707,1,0)
	;;=^358.31IA^4^2

IBDEI018
IBDEI018	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,707,1,3,0)
	;;=3^Psychosocial problems
	;;^UTILITY(U,$J,358.3,707,1,4,0)
	;;=4^V62.9
	;;^UTILITY(U,$J,358.3,708,0)
	;;=308.3^^46^72^11
	;;^UTILITY(U,$J,358.3,708,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,708,1,3,0)
	;;=3^PTSD, acute
	;;^UTILITY(U,$J,358.3,708,1,4,0)
	;;=4^308.3
	;;^UTILITY(U,$J,358.3,709,0)
	;;=309.81^^46^72^12
	;;^UTILITY(U,$J,358.3,709,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,709,1,3,0)
	;;=3^PTSD, chronic
	;;^UTILITY(U,$J,358.3,709,1,4,0)
	;;=4^309.81
	;;^UTILITY(U,$J,358.3,710,0)
	;;=295.90^^46^72^13
	;;^UTILITY(U,$J,358.3,710,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,710,1,3,0)
	;;=3^Schizophrenia
	;;^UTILITY(U,$J,358.3,710,1,4,0)
	;;=4^295.90
	;;^UTILITY(U,$J,358.3,711,0)
	;;=300.81^^46^72^14
	;;^UTILITY(U,$J,358.3,711,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,711,1,3,0)
	;;=3^Somatization disorder
	;;^UTILITY(U,$J,358.3,711,1,4,0)
	;;=4^300.81
	;;^UTILITY(U,$J,358.3,712,0)
	;;=780.52^^46^72^8
	;;^UTILITY(U,$J,358.3,712,1,0)
	;;=^358.31IA^4^2
	;;^UTILITY(U,$J,358.3,712,1,3,0)
	;;=3^Insomnia
	;;^UTILITY(U,$J,358.3,712,1,4,0)
	;;=4^780.52
	;;^UTILITY(U,$J,358.3,713,0)
	;;=99201^^48^73^1
	;;^UTILITY(U,$J,358.3,713,1,0)
	;;=^358.31IA^2^2
	;;^UTILITY(U,$J,358.3,713,1,1,0)
	;;=1^Brief Exam          1-15 Min
	;;^UTILITY(U,$J,358.3,713,1,2,0)
	;;=2^99201
	;;^UTILITY(U,$J,358.3,714,0)
	;;=99202^^48^73^2
	;;^UTILITY(U,$J,358.3,714,1,0)
	;;=^358.31IA^2^2
	;;^UTILITY(U,$J,358.3,714,1,1,0)
	;;=1^Limited Exam       16-25 Min
	;;^UTILITY(U,$J,358.3,714,1,2,0)
	;;=2^99202
	;;^UTILITY(U,$J,358.3,715,0)
	;;=99203^^48^73^3
	;;^UTILITY(U,$J,358.3,715,1,0)
	;;=^358.31IA^2^2
	;;^UTILITY(U,$J,358.3,715,1,1,0)
	;;=1^Intermediate Exam  26-35 Min
	;;^UTILITY(U,$J,358.3,715,1,2,0)
	;;=2^99203
	;;^UTILITY(U,$J,358.3,716,0)
	;;=99204^^48^73^4
	;;^UTILITY(U,$J,358.3,716,1,0)
	;;=^358.31IA^2^2
	;;^UTILITY(U,$J,358.3,716,1,1,0)
	;;=1^Extended Exam      36-50 Min
	;;^UTILITY(U,$J,358.3,716,1,2,0)
	;;=2^99204
	;;^UTILITY(U,$J,358.3,717,0)
	;;=99205^^48^73^5
	;;^UTILITY(U,$J,358.3,717,1,0)
	;;=^358.31IA^2^2
	;;^UTILITY(U,$J,358.3,717,1,1,0)
	;;=1^Comprehensive Exam   51+ Min
	;;^UTILITY(U,$J,358.3,717,1,2,0)
	;;=2^99205
	;;^UTILITY(U,$J,358.3,718,0)
	;;=99211^^48^74^1
	;;^UTILITY(U,$J,358.3,718,1,0)
	;;=^358.31IA^2^2
	;;^UTILITY(U,$J,358.3,718,1,1,0)
	;;=1^Brief Exam           1-5 Min
	;;^UTILITY(U,$J,358.3,718,1,2,0)
	;;=2^99211
	;;^UTILITY(U,$J,358.3,719,0)
	;;=99212^^48^74^2
	;;^UTILITY(U,$J,358.3,719,1,0)
	;;=^358.31IA^2^2
	;;^UTILITY(U,$J,358.3,719,1,1,0)
	;;=1^Limited Exam        6-10 Min
	;;^UTILITY(U,$J,358.3,719,1,2,0)
	;;=2^99212
	;;^UTILITY(U,$J,358.3,720,0)
	;;=99213^^48^74^3
	;;^UTILITY(U,$J,358.3,720,1,0)
	;;=^358.31IA^2^2
	;;^UTILITY(U,$J,358.3,720,1,1,0)
	;;=1^Intermediate Exam  11-19 Min
	;;^UTILITY(U,$J,358.3,720,1,2,0)
	;;=2^99213
	;;^UTILITY(U,$J,358.3,721,0)
	;;=99214^^48^74^4
	;;^UTILITY(U,$J,358.3,721,1,0)
	;;=^358.31IA^2^2
	;;^UTILITY(U,$J,358.3,721,1,1,0)
	;;=1^Extended Exam      20-30 Min
	;;^UTILITY(U,$J,358.3,721,1,2,0)
	;;=2^99214
	;;^UTILITY(U,$J,358.3,722,0)
	;;=99215^^48^74^5
	;;^UTILITY(U,$J,358.3,722,1,0)
	;;=^358.31IA^2^2
	;;^UTILITY(U,$J,358.3,722,1,1,0)
	;;=1^Comprehensive Exam   31+ Min
	;;^UTILITY(U,$J,358.3,722,1,2,0)
	;;=2^99215
	;;^UTILITY(U,$J,358.3,723,0)
	;;=99241^^48^75^1
	;;^UTILITY(U,$J,358.3,723,1,0)
	;;=^358.31IA^2^2
	;;^UTILITY(U,$J,358.3,723,1,1,0)
	;;=1^Brief Exm           1-20 Min
	;;^UTILITY(U,$J,358.3,723,1,2,0)
	;;=2^99241
	;;^UTILITY(U,$J,358.3,724,0)
	;;=99242^^48^75^2
	;;^UTILITY(U,$J,358.3,724,1,0)
	;;=^358.31IA^2^2
	;;^UTILITY(U,$J,358.3,724,1,1,0)
	;;=1^Limited Exam       21-35 Min
	;;^UTILITY(U,$J,358.3,724,1,2,0)
	;;=2^99242
	;;^UTILITY(U,$J,358.3,725,0)
	;;=99243^^48^75^3
	;;^UTILITY(U,$J,358.3,725,1,0)
	;;=^358.31IA^2^2
	;;^UTILITY(U,$J,358.3,725,1,1,0)
	;;=1^Intermediate Exam  36-50 Min
	;;^UTILITY(U,$J,358.3,725,1,2,0)
	;;=2^99243
	;;^UTILITY(U,$J,358.3,726,0)
	;;=99244^^48^75^4
	;;^UTILITY(U,$J,358.3,726,1,0)
	;;=^358.31IA^2^2
	;;^UTILITY(U,$J,358.3,726,1,1,0)
	;;=1^Extended Exam      51-60 Min
	;;^UTILITY(U,$J,358.3,726,1,2,0)
	;;=2^99244
	;;^UTILITY(U,$J,358.3,727,0)
	;;=99245^^48^75^5
	;;^UTILITY(U,$J,358.3,727,1,0)
	;;=^358.31IA^2^2
	;;^UTILITY(U,$J,358.3,727,1,1,0)
	;;=1^Comprehensive Exam   71+ Min
	;;^UTILITY(U,$J,358.3,727,1,2,0)
	;;=2^99245
	;;^UTILITY(U,$J,358.3,728,0)
	;;=99201^^49^76^1
	;;^UTILITY(U,$J,358.3,728,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,728,1,1,0)
	;;=1^Brief Visit         1-15 Min
	;;^UTILITY(U,$J,358.3,729,0)
	;;=99202^^49^76^2
	;;^UTILITY(U,$J,358.3,729,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,729,1,1,0)
	;;=1^Limited Exam        16-25 Min

IBDEI019
IBDEI019	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,730,0)
	;;=99203^^49^76^3
	;;^UTILITY(U,$J,358.3,730,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,730,1,1,0)
	;;=1^Intermediate Exam   26-35 Min
	;;^UTILITY(U,$J,358.3,731,0)
	;;=99204^^49^76^4
	;;^UTILITY(U,$J,358.3,731,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,731,1,1,0)
	;;=1^Extended Exam       36-50 Min
	;;^UTILITY(U,$J,358.3,732,0)
	;;=99205^^49^76^5
	;;^UTILITY(U,$J,358.3,732,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,732,1,1,0)
	;;=1^Comprehensive Exam  51+ Min
	;;^UTILITY(U,$J,358.3,733,0)
	;;=99211^^49^77^1
	;;^UTILITY(U,$J,358.3,733,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,733,1,1,0)
	;;=1^Brief Exam          1-5 Min
	;;^UTILITY(U,$J,358.3,734,0)
	;;=99212^^49^77^2
	;;^UTILITY(U,$J,358.3,734,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,734,1,1,0)
	;;=1^Limited Exam        6-10 Min
	;;^UTILITY(U,$J,358.3,735,0)
	;;=99213^^49^77^3
	;;^UTILITY(U,$J,358.3,735,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,735,1,1,0)
	;;=1^Intermediate Exam   11-19 Min
	;;^UTILITY(U,$J,358.3,736,0)
	;;=99214^^49^77^4
	;;^UTILITY(U,$J,358.3,736,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,736,1,1,0)
	;;=1^Extended Exam       20-30 Min
	;;^UTILITY(U,$J,358.3,737,0)
	;;=99215^^49^77^5
	;;^UTILITY(U,$J,358.3,737,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,737,1,1,0)
	;;=1^Comprehensive Exam  40+ Min
	;;^UTILITY(U,$J,358.3,738,0)
	;;=99241^^49^78^1
	;;^UTILITY(U,$J,358.3,738,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,738,1,1,0)
	;;=1^Brief Visit         1-20 Min
	;;^UTILITY(U,$J,358.3,739,0)
	;;=99242^^49^78^2
	;;^UTILITY(U,$J,358.3,739,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,739,1,1,0)
	;;=1^Limited Visit       21-35 Min
	;;^UTILITY(U,$J,358.3,740,0)
	;;=99243^^49^78^3
	;;^UTILITY(U,$J,358.3,740,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,740,1,1,0)
	;;=1^Intermediate Visit  35-50 Min
	;;^UTILITY(U,$J,358.3,741,0)
	;;=99244^^49^78^4
	;;^UTILITY(U,$J,358.3,741,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,741,1,1,0)
	;;=1^Extended Visit      51-60 Min
	;;^UTILITY(U,$J,358.3,742,0)
	;;=99245^^49^78^5
	;;^UTILITY(U,$J,358.3,742,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,742,1,1,0)
	;;=1^Comprehensive Visit 71+ Min
	;;^UTILITY(U,$J,358.3,743,0)
	;;=1^^53^79^1
	;;^UTILITY(U,$J,358.3,743,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,743,1,1,0)
	;;=1^No-show
	;;^UTILITY(U,$J,358.3,744,0)
	;;=2^^53^79^2
	;;^UTILITY(U,$J,358.3,744,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,744,1,1,0)
	;;=1^Cancel
	;;^UTILITY(U,$J,358.3,745,0)
	;;=3^^53^79^3
	;;^UTILITY(U,$J,358.3,745,1,0)
	;;=^358.31IA^1^1
	;;^UTILITY(U,$J,358.3,745,1,1,0)
	;;=1^Rescheduled

IBDEI01A
IBDEI01A	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.4,0,"GL")
	;;=^IBE(358.4,
	;;^DIC("B","IMP/EXP SELECTION GROUP",358.4)
	;;=
	;;^DIC(358.4,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358.4,"%D",1,0)
	;;= 
	;;^DIC(358.4,"%D",2,0)
	;;=This file is nearly identical to file #357.4. It is used by the
	;;^DIC(358.4,"%D",3,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.4,"%D",4,0)
	;;=that is being imported or exported.
	;;^DD(358.4,0)
	;;=FIELD^^.04^4
	;;^DD(358.4,0,"DDA")
	;;=N
	;;^DD(358.4,0,"DT")
	;;=2950717
	;;^DD(358.4,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(358.4,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(358.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(358.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(358.4,0,"IX","APO",358.4,.02)
	;;=
	;;^DD(358.4,0,"IX","APO1",358.4,.03)
	;;=
	;;^DD(358.4,0,"IX","B",358.4,.01)
	;;=
	;;^DD(358.4,0,"IX","D",358.4,.03)
	;;=
	;;^DD(358.4,0,"NM","IMP/EXP SELECTION GROUP")
	;;=
	;;^DD(358.4,0,"PT",358.3,.04)
	;;=
	;;^DD(358.4,.01,0)
	;;=HEADER^RF^^0;1^K:$L(X)>40!($L(X)<1) X
	;;^DD(358.4,.01,1,0)
	;;=^.1
	;;^DD(358.4,.01,1,1,0)
	;;=358.4^B
	;;^DD(358.4,.01,1,1,1)
	;;=S ^IBE(358.4,"B",$E(X,1,30),DA)=""
	;;^DD(358.4,.01,1,1,2)
	;;=K ^IBE(358.4,"B",$E(X,1,30),DA)
	;;^DD(358.4,.01,3)
	;;=What text do you want to appear at the top of this group?
	;;^DD(358.4,.01,21,0)
	;;=^^2^2^2930604^^^^
	;;^DD(358.4,.01,21,1,0)
	;;= 
	;;^DD(358.4,.01,21,2,0)
	;;=The name given to a group of selections appearing on a selection list.
	;;^DD(358.4,.01,"DEL",1,0)
	;;=I '$G(IBLISTPR) W "...Selection Groups can only be deleted through the Encounter Form Utilities!"
	;;^DD(358.4,.01,"DT")
	;;=2930604

IBDEI01B
IBDEI01B	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.4)
	;;=^IBE(358.4,
	;;^UTILITY(U,$J,358.4,0)
	;;=IMP/EXP SELECTION GROUP^358.4I^80^80
	;;^UTILITY(U,$J,358.4,1,0)
	;;=NEW PATIENT^1^11
	;;^UTILITY(U,$J,358.4,2,0)
	;;=ESTABLISHED PATIENT^2^11
	;;^UTILITY(U,$J,358.4,3,0)
	;;=CONSULTATIONS^3^11
	;;^UTILITY(U,$J,358.4,4,0)
	;;=BLANK^0^17
	;;^UTILITY(U,$J,358.4,5,0)
	;;=BLANK^0^20
	;;^UTILITY(U,$J,358.4,6,0)
	;;=BLANK^0^22
	;;^UTILITY(U,$J,358.4,7,0)
	;;=NEW PATIENT^1^23
	;;^UTILITY(U,$J,358.4,8,0)
	;;=ESTABLISHED PATIENT^2^23
	;;^UTILITY(U,$J,358.4,9,0)
	;;=CONSULTATIONS^3^23
	;;^UTILITY(U,$J,358.4,10,0)
	;;=BLANK^0^25
	;;^UTILITY(U,$J,358.4,11,0)
	;;=I & D/Debridment^1^25
	;;^UTILITY(U,$J,358.4,12,0)
	;;=Excision BENIGN lesions^2^25
	;;^UTILITY(U,$J,358.4,13,0)
	;;=Excision MALIGNANT lesions^3^25
	;;^UTILITY(U,$J,358.4,14,0)
	;;=Wound Repair, Simple^4^25
	;;^UTILITY(U,$J,358.4,15,0)
	;;=Wound Repair, Intermediate^5^25
	;;^UTILITY(U,$J,358.4,16,0)
	;;=Wound Repair, Complex^6^25
	;;^UTILITY(U,$J,358.4,17,0)
	;;=Destruction MALIGNANT lesions^8^25
	;;^UTILITY(U,$J,358.4,18,0)
	;;=Tissue Transfer/Z-plasty^9^25
	;;^UTILITY(U,$J,358.4,19,0)
	;;=Skin Grafts^10^25
	;;^UTILITY(U,$J,358.4,20,0)
	;;=Miscellaneous^11^25
	;;^UTILITY(U,$J,358.4,21,0)
	;;=BLANK^0^29
	;;^UTILITY(U,$J,358.4,22,0)
	;;=BLANK^0^30
	;;^UTILITY(U,$J,358.4,23,0)
	;;=NEW PATIENT^1^31
	;;^UTILITY(U,$J,358.4,24,0)
	;;=ESTABLISHED PATIENT^2^31
	;;^UTILITY(U,$J,358.4,25,0)
	;;=CONSULTATIONS^3^31
	;;^UTILITY(U,$J,358.4,26,0)
	;;=Cardiovascular^20^37
	;;^UTILITY(U,$J,358.4,27,0)
	;;=Miscellaneous^80^37
	;;^UTILITY(U,$J,358.4,28,0)
	;;=Urology^70^37
	;;^UTILITY(U,$J,358.4,29,0)
	;;=ENT^20^37
	;;^UTILITY(U,$J,358.4,30,0)
	;;=Eye^30^37
	;;^UTILITY(U,$J,358.4,31,0)
	;;=Orthopedic^40^37
	;;^UTILITY(U,$J,358.4,32,0)
	;;=Pulmonary^50^37
	;;^UTILITY(U,$J,358.4,33,0)
	;;=BLANK^0^37^I
	;;^UTILITY(U,$J,358.4,34,0)
	;;=BLANK^0^38
	;;^UTILITY(U,$J,358.4,35,0)
	;;=Angina:^10^38
	;;^UTILITY(U,$J,358.4,36,0)
	;;=Arthritis^30^38
	;;^UTILITY(U,$J,358.4,37,0)
	;;=Bite:^40^38
	;;^UTILITY(U,$J,358.4,38,0)
	;;=Misc^50^38^I
	;;^UTILITY(U,$J,358.4,39,0)
	;;=Burn:^60^38
	;;^UTILITY(U,$J,358.4,40,0)
	;;=Bursitis:^70^38
	;;^UTILITY(U,$J,358.4,41,0)
	;;=Misc (2)^80^38^I
	;;^UTILITY(U,$J,358.4,42,0)
	;;=Fracture:^90^38
	;;^UTILITY(U,$J,358.4,43,0)
	;;=Misc (3)^100^38^I
	;;^UTILITY(U,$J,358.4,44,0)
	;;=Hematoma:^110^38
	;;^UTILITY(U,$J,358.4,45,0)
	;;=Misc (4)^120^38^I
	;;^UTILITY(U,$J,358.4,46,0)
	;;=Hepatitis:^130^38
	;;^UTILITY(U,$J,358.4,47,0)
	;;=Misc (5)^140^38^I
	;;^UTILITY(U,$J,358.4,48,0)
	;;=NEW PATIENT^1^39
	;;^UTILITY(U,$J,358.4,49,0)
	;;=ESTABLISHED PATIENT^2^39
	;;^UTILITY(U,$J,358.4,50,0)
	;;=CONSULTATIONS^3^39
	;;^UTILITY(U,$J,358.4,51,0)
	;;=BLANK^1^41
	;;^UTILITY(U,$J,358.4,52,0)
	;;=MISCELLANEOUS^3^41^I
	;;^UTILITY(U,$J,358.4,53,0)
	;;=Injection/Immunizations:^4^41
	;;^UTILITY(U,$J,358.4,54,0)
	;;= ^1.99^41
	;;^UTILITY(U,$J,358.4,55,0)
	;;= ^2.99^41
	;;^UTILITY(U,$J,358.4,56,0)
	;;=Blood gases:^2^41
	;;^UTILITY(U,$J,358.4,57,0)
	;;= ^3.99^41
	;;^UTILITY(U,$J,358.4,58,0)
	;;=BLANK^0^45
	;;^UTILITY(U,$J,358.4,59,0)
	;;=Cardiovasular^1^46
	;;^UTILITY(U,$J,358.4,60,0)
	;;=Dermatology^2^46
	;;^UTILITY(U,$J,358.4,61,0)
	;;=EENT^3^46
	;;^UTILITY(U,$J,358.4,62,0)
	;;=Endocrine^4^46
	;;^UTILITY(U,$J,358.4,63,0)
	;;=Gastroenterology^5^46
	;;^UTILITY(U,$J,358.4,64,0)
	;;=Hematology/Oncology^6^46
	;;^UTILITY(U,$J,358.4,65,0)
	;;=Musculoskeletal^7^46
	;;^UTILITY(U,$J,358.4,66,0)
	;;=Neurology^8^46
	;;^UTILITY(U,$J,358.4,67,0)
	;;=Pulmonology^9^46
	;;^UTILITY(U,$J,358.4,68,0)
	;;=Nephrology/Urology^10^46
	;;^UTILITY(U,$J,358.4,69,0)
	;;=Rheumatology/Ortho^11^46
	;;^UTILITY(U,$J,358.4,70,0)
	;;=Vascular^12^46
	;;^UTILITY(U,$J,358.4,71,0)
	;;=BLANK^0^46
	;;^UTILITY(U,$J,358.4,72,0)
	;;=Psychiatric^8.5^46
	;;^UTILITY(U,$J,358.4,73,0)
	;;=NEW PATIENT^1^48
	;;^UTILITY(U,$J,358.4,74,0)
	;;=ESTABLISHED PATIENT^2^48
	;;^UTILITY(U,$J,358.4,75,0)
	;;=CONSULTATIONS^3^48
	;;^UTILITY(U,$J,358.4,76,0)
	;;=NEW PATIENT^1^49
	;;^UTILITY(U,$J,358.4,77,0)
	;;=ESTABLISHED PATIENT^2^49
	;;^UTILITY(U,$J,358.4,78,0)
	;;=CONSULTATIONS^3^49
	;;^UTILITY(U,$J,358.4,79,0)
	;;=BLANK^0^53
	;;^UTILITY(U,$J,358.4,80,0)
	;;=BLANK^0^67

IBDEI01C
IBDEI01C	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.5,0,"GL")
	;;=^IBE(358.5,
	;;^DIC("B","IMP/EXP DATA FIELD",358.5)
	;;=
	;;^DIC(358.5,"%D",0)
	;;=^^1^1^2940829^^^^
	;;^DIC(358.5,"%D",1,0)
	;;=Used by the import/export utility as a workspace.
	;;^DIC(358.5,"%D",2,0)
	;;= 
	;;^DIC(358.5,"%D",3,0)
	;;= 
	;;^DIC(358.5,"%D",4,0)
	;;=This file is nearly identical to file #357.5. It is used by the
	;;^DIC(358.5,"%D",5,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.5,"%D",6,0)
	;;=that is being imported or exported.
	;;^DD(358.5,0)
	;;=FIELD^^2^13
	;;^DD(358.5,0,"DDA")
	;;=N
	;;^DD(358.5,0,"DT")
	;;=2930730
	;;^DD(358.5,0,"ID",.02)
	;;=W ""
	;;^DD(358.5,0,"ID",.03)
	;;=W ""
	;;^DD(358.5,0,"IX","B",358.5,.01)
	;;=
	;;^DD(358.5,0,"IX","C",358.5,.02)
	;;=
	;;^DD(358.5,0,"NM","IMP/EXP DATA FIELD")
	;;=
	;;^DD(358.5,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.5,.01,1,0)
	;;=^.1
	;;^DD(358.5,.01,1,1,0)
	;;=358.5^B
	;;^DD(358.5,.01,1,1,1)
	;;=S ^IBE(358.5,"B",$E(X,1,30),DA)=""
	;;^DD(358.5,.01,1,1,2)
	;;=K ^IBE(358.5,"B",$E(X,1,30),DA)
	;;^DD(358.5,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.5,.01,21,0)
	;;=^^3^3^2930419^^^
	;;^DD(358.5,.01,21,1,0)
	;;= 
	;;^DD(358.5,.01,21,2,0)
	;;=The name is used to identify the field within a block. It can be anything
	;;^DD(358.5,.01,21,3,0)
	;;=the designer of a form wants it to be.
	;;^DD(358.5,.01,"DT")
	;;=2930419

IBDEI01D
IBDEI01D	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5)
	;;=^IBE(358.5,
	;;^UTILITY(U,$J,358.5,0)
	;;=IMP/EXP DATA FIELD^358.5I^87^87
	;;^UTILITY(U,$J,358.5,1,0)
	;;=INDICATORS^21^32^^^^^^^1
	;;^UTILITY(U,$J,358.5,1,2,0)
	;;=^358.52^4^4
	;;^UTILITY(U,$J,358.5,1,2,1,0)
	;;=AO:^^^51^2^2^55^3^2
	;;^UTILITY(U,$J,358.5,1,2,2,0)
	;;=IR:^^^59^2^2^63^3^3
	;;^UTILITY(U,$J,358.5,1,2,3,0)
	;;=POW:^^^67^2^2^72^3^4
	;;^UTILITY(U,$J,358.5,1,2,4,0)
	;;=EC:^^^76^2^2^80^3^6
	;;^UTILITY(U,$J,358.5,2,0)
	;;=SERVICE CONNECTED PERCENTAGE^21^33
	;;^UTILITY(U,$J,358.5,2,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,2,2,1,0)
	;;=Service Connected Percentage:^^^1^2^2^31^3^7
	;;^UTILITY(U,$J,358.5,3,0)
	;;=CLINIC^26^35^^^^^^^1^2
	;;^UTILITY(U,$J,358.5,3,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,3,2,1,0)
	;;=Clinic:^^^1^2^2^19^30^1
	;;^UTILITY(U,$J,358.5,4,0)
	;;=APPT. DT/TIME^26^36^^^^^^^1^2
	;;^UTILITY(U,$J,358.5,4,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,4,2,1,0)
	;;=Appt. DT/Time:^^^1^3^3^19^23^1
	;;^UTILITY(U,$J,358.5,5,0)
	;;=PATIENT NAME^28^37^^^^^^^^2
	;;^UTILITY(U,$J,358.5,5,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,5,2,1,0)
	;;=Patient Name:^^^1^3^3^15^30^1
	;;^UTILITY(U,$J,358.5,6,0)
	;;=PATIENT DOB^28^38^^^^^^^^2
	;;^UTILITY(U,$J,358.5,6,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,6,2,1,0)
	;;=DOB:^^^1^4^4^6^12^1
	;;^UTILITY(U,$J,358.5,7,0)
	;;=PID^28^39^^^^^^^^2
	;;^UTILITY(U,$J,358.5,7,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,7,2,1,0)
	;;=PID:^^^21^4^4^26^15^1
	;;^UTILITY(U,$J,358.5,8,0)
	;;=SEX^28^40^^^^^^^^2
	;;^UTILITY(U,$J,358.5,8,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,8,2,1,0)
	;;=Sex:^^^46^4^4^51^1^2
	;;^UTILITY(U,$J,358.5,9,0)
	;;=ELIGIBILITY^28^33^^^^^^^^2
	;;^UTILITY(U,$J,358.5,9,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,9,2,1,0)
	;;=Eligibility:^^^1^5^5^14^30^1
	;;^UTILITY(U,$J,358.5,10,0)
	;;=MEANS TEST CATEGORY^28^41^^^^^^^^2
	;;^UTILITY(U,$J,358.5,10,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,10,2,1,0)
	;;=Means Test Cat:^^^1^6^6^17^1^3
	;;^UTILITY(U,$J,358.5,11,0)
	;;=ADDRESS LINE 1^28^42^0^1^^^^^^2
	;;^UTILITY(U,$J,358.5,11,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,11,2,1,0)
	;;=Address:^^U^1^7^8^4^45^1
	;;^UTILITY(U,$J,358.5,12,0)
	;;=ADDRESS LINE 2^28^42^0^2^^^^^^2
	;;^UTILITY(U,$J,358.5,12,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,12,2,1,0)
	;;=ADDRESS^^I^^2^9^4^45^1
	;;^UTILITY(U,$J,358.5,13,0)
	;;=ADDRESS LINE 3^28^42^0^3^^^^^^2
	;;^UTILITY(U,$J,358.5,13,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,13,2,1,0)
	;;=ADDRESS^^I^^2^10^4^45^1
	;;^UTILITY(U,$J,358.5,14,0)
	;;=ADDRESS LINE 4^28^42^1^4^^^^^^2
	;;^UTILITY(U,$J,358.5,14,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,14,2,1,0)
	;;=ADDRESS^^I^^2^11^4^45^1
	;;^UTILITY(U,$J,358.5,15,0)
	;;=TELEPHONE^28^43^^^^^^^^2
	;;^UTILITY(U,$J,358.5,15,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,15,2,1,0)
	;;=Telephone:^^^30^7^7^40^20^1
	;;^UTILITY(U,$J,358.5,16,0)
	;;=MARITAL STATUS^28^44^^^^^^^^2
	;;^UTILITY(U,$J,358.5,16,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,16,2,1,0)
	;;=Marital Status:^^^1^16^16^17^15^1
	;;^UTILITY(U,$J,358.5,17,0)
	;;=EMPLOYER^28^45^^^^^^^^2
	;;^UTILITY(U,$J,358.5,17,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,17,2,1,0)
	;;=Employer:^^^1^17^17^17^45^1
	;;^UTILITY(U,$J,358.5,18,0)
	;;=SPOUSE'S EMPLOYER^28^46^^^^^^^^2
	;;^UTILITY(U,$J,358.5,18,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,18,2,1,0)
	;;=Spouse's Emp:^^^1^18^18^17^45^1
	;;^UTILITY(U,$J,358.5,19,0)
	;;=HEADER^31
	;;^UTILITY(U,$J,358.5,19,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,19,2,1,0)
	;;=Ambulatory Surgery^^^0^0
	;;^UTILITY(U,$J,358.5,20,0)
	;;=CLINIC^36^35^^^^^^^1^2
	;;^UTILITY(U,$J,358.5,20,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,20,2,1,0)
	;;=Clinic:^^^1^2^2^19^30^1
	;;^UTILITY(U,$J,358.5,21,0)
	;;=APPT. DT/TIME^36^36^^^^^^^1^2
	;;^UTILITY(U,$J,358.5,21,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,21,2,1,0)
	;;=Appt. DT/Time:^^^1^3^3^19^23^1
	;;^UTILITY(U,$J,358.5,22,0)
	;;=PATIENT NAME^38^37^^^^^^^^2
	;;^UTILITY(U,$J,358.5,22,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,22,2,1,0)
	;;=Patient Name:^^^1^3^3^15^30^1
	;;^UTILITY(U,$J,358.5,23,0)
	;;=PATIENT DOB^38^38^^^^^^^^2
	;;^UTILITY(U,$J,358.5,23,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,23,2,1,0)
	;;=DOB:^^^1^4^4^6^12^1
	;;^UTILITY(U,$J,358.5,24,0)
	;;=PID^38^39^^^^^^^^2
	;;^UTILITY(U,$J,358.5,24,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,24,2,1,0)
	;;=PID:^^^21^4^4^26^15^1
	;;^UTILITY(U,$J,358.5,25,0)
	;;=SEX^38^40^^^^^^^^2
	;;^UTILITY(U,$J,358.5,25,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,25,2,1,0)
	;;=Sex:^^^46^4^4^51^1^2
	;;^UTILITY(U,$J,358.5,26,0)
	;;=ELIGIBILITY^38^33^^^^^^^^2
	;;^UTILITY(U,$J,358.5,26,2,0)
	;;=^358.52^1^1

IBDEI01E
IBDEI01E	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,26,2,1,0)
	;;=Eligibility:^^^1^5^5^14^30^1
	;;^UTILITY(U,$J,358.5,27,0)
	;;=MEANS TEST CATEGORY^38^41^^^^^^^^2
	;;^UTILITY(U,$J,358.5,27,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,27,2,1,0)
	;;=Means Test Cat:^^^1^6^6^17^1^3
	;;^UTILITY(U,$J,358.5,28,0)
	;;=ADDRESS LINE 1^38^42^0^1^^^^^^2
	;;^UTILITY(U,$J,358.5,28,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,28,2,1,0)
	;;=Address:^^U^1^7^8^4^45^1
	;;^UTILITY(U,$J,358.5,29,0)
	;;=ADDRESS LINE 2^38^42^0^2^^^^^^2
	;;^UTILITY(U,$J,358.5,29,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,29,2,1,0)
	;;=ADDRESS^^I^^2^9^4^45^1
	;;^UTILITY(U,$J,358.5,30,0)
	;;=ADDRESS LINE 3^38^42^0^3^^^^^^2
	;;^UTILITY(U,$J,358.5,30,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,30,2,1,0)
	;;=ADDRESS^^I^^2^10^4^45^1
	;;^UTILITY(U,$J,358.5,31,0)
	;;=ADDRESS LINE 4^38^42^1^4^^^^^^2
	;;^UTILITY(U,$J,358.5,31,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,31,2,1,0)
	;;=ADDRESS^^I^^2^11^4^45^1
	;;^UTILITY(U,$J,358.5,32,0)
	;;=TELEPHONE^38^43^^^^^^^^2
	;;^UTILITY(U,$J,358.5,32,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,32,2,1,0)
	;;=Telephone:^^^30^7^7^40^20^1
	;;^UTILITY(U,$J,358.5,33,0)
	;;=MARITAL STATUS^38^44^^^^^^^^2
	;;^UTILITY(U,$J,358.5,33,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,33,2,1,0)
	;;=Marital Status:^^^1^16^16^17^15^1
	;;^UTILITY(U,$J,358.5,34,0)
	;;=EMPLOYER^38^45^^^^^^^^2
	;;^UTILITY(U,$J,358.5,34,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,34,2,1,0)
	;;=Employer:^^^1^17^17^17^45^1
	;;^UTILITY(U,$J,358.5,35,0)
	;;=SPOUSE'S EMPLOYER^38^46^^^^^^^^2
	;;^UTILITY(U,$J,358.5,35,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,35,2,1,0)
	;;=Spouse's Emp:^^^1^18^18^17^45^1
	;;^UTILITY(U,$J,358.5,36,0)
	;;=HEADER^41
	;;^UTILITY(U,$J,358.5,36,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,36,2,1,0)
	;;=Emergency Services^^^0^0
	;;^UTILITY(U,$J,358.5,37,0)
	;;=INDICATORS^42^32^^^^^^^1
	;;^UTILITY(U,$J,358.5,37,2,0)
	;;=^358.52^4^4
	;;^UTILITY(U,$J,358.5,37,2,1,0)
	;;=AO:^^^51^2^2^55^3^2
	;;^UTILITY(U,$J,358.5,37,2,2,0)
	;;=IR:^^^59^2^2^63^3^3
	;;^UTILITY(U,$J,358.5,37,2,3,0)
	;;=POW:^^^67^2^2^72^3^4
	;;^UTILITY(U,$J,358.5,37,2,4,0)
	;;=EC:^^^76^2^2^80^3^6
	;;^UTILITY(U,$J,358.5,38,0)
	;;=SERVICE CONNECTED PERCENTAGE^42^33
	;;^UTILITY(U,$J,358.5,38,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,38,2,1,0)
	;;=Service Connected Percentage:^^^1^2^2^31^3^7
	;;^UTILITY(U,$J,358.5,39,0)
	;;=CLINIC^48^35^^^^^^^1^2
	;;^UTILITY(U,$J,358.5,39,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,39,2,1,0)
	;;=Clinic:^^^1^2^2^19^30^1
	;;^UTILITY(U,$J,358.5,40,0)
	;;=APPT. DT/TIME^48^36^^^^^^^1^2
	;;^UTILITY(U,$J,358.5,40,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,40,2,1,0)
	;;=Appt. DT/Time:^^^1^3^3^19^23^1
	;;^UTILITY(U,$J,358.5,41,0)
	;;=PATIENT NAME^50^37^^^^^^^^2
	;;^UTILITY(U,$J,358.5,41,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,41,2,1,0)
	;;=Patient Name:^^^1^3^3^15^30^1
	;;^UTILITY(U,$J,358.5,42,0)
	;;=PATIENT DOB^50^38^^^^^^^^2
	;;^UTILITY(U,$J,358.5,42,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,42,2,1,0)
	;;=DOB:^^^1^4^4^6^12^1
	;;^UTILITY(U,$J,358.5,43,0)
	;;=PID^50^39^^^^^^^^2
	;;^UTILITY(U,$J,358.5,43,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,43,2,1,0)
	;;=PID:^^^21^4^4^26^15^1
	;;^UTILITY(U,$J,358.5,44,0)
	;;=SEX^50^40^^^^^^^^2
	;;^UTILITY(U,$J,358.5,44,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,44,2,1,0)
	;;=Sex:^^^46^4^4^51^1^2
	;;^UTILITY(U,$J,358.5,45,0)
	;;=ELIGIBILITY^50^33^^^^^^^^2
	;;^UTILITY(U,$J,358.5,45,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,45,2,1,0)
	;;=Eligibility:^^^1^5^5^14^30^1
	;;^UTILITY(U,$J,358.5,46,0)
	;;=MEANS TEST CATEGORY^50^41^^^^^^^^2
	;;^UTILITY(U,$J,358.5,46,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,46,2,1,0)
	;;=Means Test Cat:^^^1^6^6^17^1^3
	;;^UTILITY(U,$J,358.5,47,0)
	;;=ADDRESS LINE 1^50^42^0^1^^^^^^2
	;;^UTILITY(U,$J,358.5,47,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,47,2,1,0)
	;;=Address:^^U^1^7^8^4^45^1
	;;^UTILITY(U,$J,358.5,48,0)
	;;=ADDRESS LINE 2^50^42^0^2^^^^^^2
	;;^UTILITY(U,$J,358.5,48,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,48,2,1,0)
	;;=ADDRESS^^I^^2^9^4^45^1
	;;^UTILITY(U,$J,358.5,49,0)
	;;=ADDRESS LINE 3^50^42^0^3^^^^^^2
	;;^UTILITY(U,$J,358.5,49,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,49,2,1,0)
	;;=ADDRESS^^I^^2^10^4^45^1
	;;^UTILITY(U,$J,358.5,50,0)
	;;=ADDRESS LINE 4^50^42^1^4^^^^^^2
	;;^UTILITY(U,$J,358.5,50,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,50,2,1,0)
	;;=ADDRESS^^I^^2^11^4^45^1
	;;^UTILITY(U,$J,358.5,51,0)
	;;=TELEPHONE^50^43^^^^^^^^2
	;;^UTILITY(U,$J,358.5,51,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,51,2,1,0)
	;;=Telephone:^^^30^7^7^40^20^1
	;;^UTILITY(U,$J,358.5,52,0)
	;;=MARITAL STATUS^50^44^^^^^^^^2

IBDEI01F
IBDEI01F	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,52,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,52,2,1,0)
	;;=Marital Status:^^^1^16^16^17^15^1
	;;^UTILITY(U,$J,358.5,53,0)
	;;=EMPLOYER^50^45^^^^^^^^2
	;;^UTILITY(U,$J,358.5,53,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,53,2,1,0)
	;;=Employer:^^^1^17^17^17^45^1
	;;^UTILITY(U,$J,358.5,54,0)
	;;=SPOUSE'S EMPLOYER^50^46^^^^^^^^2
	;;^UTILITY(U,$J,358.5,54,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,54,2,1,0)
	;;=Spouse's Emp:^^^1^18^18^17^45^1
	;;^UTILITY(U,$J,358.5,55,0)
	;;=HEADER^53
	;;^UTILITY(U,$J,358.5,55,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,55,2,1,0)
	;;=Primary Care^^^0^0
	;;^UTILITY(U,$J,358.5,56,0)
	;;=INDICATORS^56^32^^^^^^^1
	;;^UTILITY(U,$J,358.5,56,2,0)
	;;=^358.52^4^4
	;;^UTILITY(U,$J,358.5,56,2,1,0)
	;;=AO:^^^51^2^2^55^3^2
	;;^UTILITY(U,$J,358.5,56,2,2,0)
	;;=IR:^^^59^2^2^63^3^3
	;;^UTILITY(U,$J,358.5,56,2,3,0)
	;;=POW:^^^67^2^2^72^3^4
	;;^UTILITY(U,$J,358.5,56,2,4,0)
	;;=EC:^^^76^2^2^80^3^6
	;;^UTILITY(U,$J,358.5,57,0)
	;;=SERVICE CONNECTED PERCENTAGE^56^33
	;;^UTILITY(U,$J,358.5,57,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,57,2,1,0)
	;;=Service Connected Percentage:^^^1^2^2^31^3^7
	;;^UTILITY(U,$J,358.5,58,0)
	;;=CLINIC^62^35^^^^^^^1^2
	;;^UTILITY(U,$J,358.5,58,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,58,2,1,0)
	;;=Clinic:^^^1^2^2^9^30^1
	;;^UTILITY(U,$J,358.5,59,0)
	;;=APPT. DT/TIME^62^36^^^^^^^1^2
	;;^UTILITY(U,$J,358.5,59,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,59,2,1,0)
	;;=Appt. DT/Time:^^^1^3^3^16^23^1
	;;^UTILITY(U,$J,358.5,60,0)
	;;=SC TREATMENT QUESTIONS^69^48
	;;^UTILITY(U,$J,358.5,60,2,0)
	;;=^358.52^2^2
	;;^UTILITY(U,$J,358.5,60,2,1,0)
	;;=SERVICE CONNECTED?^^I^^^0^0^46^1
	;;^UTILITY(U,$J,358.5,60,2,2,0)
	;;=AO,IR OR EC?^^I^^^1^0^43^5
	;;^UTILITY(U,$J,358.5,61,0)
	;;=PATIENT NAME^75^37
	;;^UTILITY(U,$J,358.5,61,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,61,2,1,0)
	;;=Patient Name:^^^1^1^1^15^30^1
	;;^UTILITY(U,$J,358.5,62,0)
	;;=PATIENT DOB^75^38
	;;^UTILITY(U,$J,358.5,62,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,62,2,1,0)
	;;=DOB:^^^1^2^2^6^12^1
	;;^UTILITY(U,$J,358.5,63,0)
	;;=PID^75^39
	;;^UTILITY(U,$J,358.5,63,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,63,2,1,0)
	;;=PID:^^^21^2^2^26^15^1
	;;^UTILITY(U,$J,358.5,64,0)
	;;=SEX^75^40
	;;^UTILITY(U,$J,358.5,64,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,64,2,1,0)
	;;=Sex:^^^42^2^2^47^1^2
	;;^UTILITY(U,$J,358.5,65,0)
	;;=ELIGIBILITY^75^33
	;;^UTILITY(U,$J,358.5,65,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,65,2,1,0)
	;;=Eligibility:^^^1^3^3^14^30^1
	;;^UTILITY(U,$J,358.5,66,0)
	;;=MEANS TEST CATEGORY^75^41
	;;^UTILITY(U,$J,358.5,66,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,66,2,1,0)
	;;=Means Test Cat:^^^1^4^4^17^1^3
	;;^UTILITY(U,$J,358.5,67,0)
	;;=ADDRESS LINE 1^75^42^0^1
	;;^UTILITY(U,$J,358.5,67,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,67,2,1,0)
	;;=Address:^^U^1^5^6^4^45^1
	;;^UTILITY(U,$J,358.5,68,0)
	;;=ADDRESS LINE 2^75^42^0^2
	;;^UTILITY(U,$J,358.5,68,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,68,2,1,0)
	;;=ADDRESS^^I^^^7^4^45^1
	;;^UTILITY(U,$J,358.5,69,0)
	;;=ADDRESS LINE 3^75^42^0^3
	;;^UTILITY(U,$J,358.5,69,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,69,2,1,0)
	;;=ADDRESS^^I^^^8^4^45^1
	;;^UTILITY(U,$J,358.5,70,0)
	;;=ADDRESS LINE 4^75^42^1^4
	;;^UTILITY(U,$J,358.5,70,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,70,2,1,0)
	;;=ADDRESS^^I^^^9^4^45^1
	;;^UTILITY(U,$J,358.5,71,0)
	;;=TELEPHONE^75^43
	;;^UTILITY(U,$J,358.5,71,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,71,2,1,0)
	;;=Telephone:^^^21^5^5^31^20^1
	;;^UTILITY(U,$J,358.5,72,0)
	;;=MARITAL STATUS^75^44
	;;^UTILITY(U,$J,358.5,72,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,72,2,1,0)
	;;=Marital Status:^^^1^14^14^17^15^1
	;;^UTILITY(U,$J,358.5,73,0)
	;;=EMPLOYER^75^45
	;;^UTILITY(U,$J,358.5,73,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,73,2,1,0)
	;;=Employer:^^^1^15^15^11^40^1
	;;^UTILITY(U,$J,358.5,74,0)
	;;=SPOUSE'S EMPLOYER^75^46
	;;^UTILITY(U,$J,358.5,74,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,74,2,1,0)
	;;=Spouse's Emp:^^^1^16^16^15^36^1
	;;^UTILITY(U,$J,358.5,75,0)
	;;=ORDERS^78^52
	;;^UTILITY(U,$J,358.5,75,2,0)
	;;=^358.52^4^4
	;;^UTILITY(U,$J,358.5,75,2,1,0)
	;;=EKG (  )^^^3^1
	;;^UTILITY(U,$J,358.5,75,2,2,0)
	;;=X-Ray (  )^^^12^1^1^23^109^1
	;;^UTILITY(U,$J,358.5,75,2,3,0)
	;;=LAB (  )^^^3^3^3^12^60^1
	;;^UTILITY(U,$J,358.5,75,2,4,0)
	;;=,^^^73^3^3^75^57^1
	;;^UTILITY(U,$J,358.5,76,0)
	;;=CONSULTS^78^52
	;;^UTILITY(U,$J,358.5,76,2,0)
	;;=^358.52^2^2
	;;^UTILITY(U,$J,358.5,76,2,1,0)
	;;=Consults (  )^^^3^5^5^17^55^1
	;;^UTILITY(U,$J,358.5,76,2,2,0)
	;;=,^^^73^5^5^75^57^1
	;;^UTILITY(U,$J,358.5,77,0)
	;;=DISPOSITION^78^52

IBDEI01G
IBDEI01G	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,77,2,0)
	;;=^358.52^3^3
	;;^UTILITY(U,$J,358.5,77,2,1,0)
	;;=Return Visit (  )^^^3^7^7^21^25^1
	;;^UTILITY(U,$J,358.5,77,2,2,0)
	;;=Discharge (  )^^^48^7
	;;^UTILITY(U,$J,358.5,77,2,3,0)
	;;=Scheduled Admission (  )^^^67^7^7^92^40^1
	;;^UTILITY(U,$J,358.5,78,0)
	;;=COMMENTS^78^53^^^^^^^0^8^4^2^132
	;;^UTILITY(U,$J,358.5,79,0)
	;;=Subjective:^80^53^^^Subjective:^^^^0^1^8^2^132
	;;^UTILITY(U,$J,358.5,80,0)
	;;=OBJECTIVE^80^53^^^Objective:^^^^0^9^8^2^132
	;;^UTILITY(U,$J,358.5,81,0)
	;;=ASSESSMENT/DIAGNOSIS^80^53^^^Assessment/Diagnosis:^^^^0^17^8^2^132
	;;^UTILITY(U,$J,358.5,82,0)
	;;=PLAN^80^53^^^Plan:^^^^0^25^4^2^132
	;;^UTILITY(U,$J,358.5,83,0)
	;;=SIGNATURE^80^52
	;;^UTILITY(U,$J,358.5,83,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,83,2,1,0)
	;;=Provider Signature:^^^40^29^30^59^60^1
	;;^UTILITY(U,$J,358.5,84,0)
	;;=PROGRESS NOTES^81^53^^^Progress Notes:   (  ) Attached  (  ) See Chart^^^^0^0^9^2^132
	;;^UTILITY(U,$J,358.5,85,0)
	;;=SIGNATURE^81^52
	;;^UTILITY(U,$J,358.5,85,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,85,2,1,0)
	;;=Provider Signature:^^^30^9^10^50^50^1
	;;^UTILITY(U,$J,358.5,86,0)
	;;=INDICATORS^83^32^^^^^^^1
	;;^UTILITY(U,$J,358.5,86,2,0)
	;;=^358.52^4^4
	;;^UTILITY(U,$J,358.5,86,2,1,0)
	;;=AO:^^^51^2^2^55^3^2
	;;^UTILITY(U,$J,358.5,86,2,2,0)
	;;=IR:^^^59^2^2^63^3^3
	;;^UTILITY(U,$J,358.5,86,2,3,0)
	;;=POW:^^^67^2^2^72^3^4
	;;^UTILITY(U,$J,358.5,86,2,4,0)
	;;=EC:^^^76^2^2^80^3^6
	;;^UTILITY(U,$J,358.5,87,0)
	;;=SERVICE CONNECTED PERCENTAGE^83^33
	;;^UTILITY(U,$J,358.5,87,2,0)
	;;=^358.52^1^1
	;;^UTILITY(U,$J,358.5,87,2,1,0)
	;;=Service Connected Percentage:^^^1^2^2^31^3^7

IBDEI01H
IBDEI01H	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.6,0,"GL")
	;;=^IBE(358.6,
	;;^DIC("B","IMP/EXP PACKAGE INTERFACE",358.6)
	;;=
	;;^DIC(358.6,"%D",0)
	;;=^^1^1^2950927^^^^
	;;^DIC(358.6,"%D",1,0)
	;;=This file is used as a workspace by the import/export utility.
	;;^DD(358.6,0)
	;;=FIELD^^19^50
	;;^DD(358.6,0,"DDA")
	;;=N
	;;^DD(358.6,0,"DT")
	;;=2960214
	;;^DD(358.6,0,"ID",.06)
	;;=W ""
	;;^DD(358.6,0,"ID","WRITE")
	;;=W !,$E($P(^(0),U),1,40),?45,"TYPE=",$S($P(^(0),"^",6)=1:"INPUT",$P(^(0),"^",6)=2:"OUTPUT",$P(^(0),"^",6)=3:"SELECTION",1:"REPORT"),$S($P(^(0),U,6)=3&'$P(^(0),U,13):" ** NOT SCANNABLE **",1:""),!," "
	;;^DD(358.6,0,"IX","B",358.6,.01)
	;;=
	;;^DD(358.6,0,"IX","C",358.6,.04)
	;;=
	;;^DD(358.6,0,"IX","D",358.6,3)
	;;=
	;;^DD(358.6,0,"IX","E",358.6,.01)
	;;=
	;;^DD(358.6,0,"NM","IMP/EXP PACKAGE INTERFACE")
	;;=
	;;^DD(358.6,0,"PT",358.2,.11)
	;;=
	;;^DD(358.6,0,"PT",358.5,.03)
	;;=
	;;^DD(358.6,0,"PT",358.6,.13)
	;;=
	;;^DD(358.6,0,"PT",358.93,.06)
	;;=
	;;^DD(358.6,.01,0)
	;;=NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.6,.01,1,0)
	;;=^.1
	;;^DD(358.6,.01,1,1,0)
	;;=358.6^B
	;;^DD(358.6,.01,1,1,1)
	;;=S ^IBE(358.6,"B",$E(X,1,30),DA)=""
	;;^DD(358.6,.01,1,1,2)
	;;=K ^IBE(358.6,"B",$E(X,1,30),DA)
	;;^DD(358.6,.01,1,2,0)
	;;=358.6^E^MUMPS
	;;^DD(358.6,.01,1,2,1)
	;;=S ^IBE(358.6,"E",$E(X,$F(X," "),40),DA)=""
	;;^DD(358.6,.01,1,2,2)
	;;=K ^IBE(358.6,"E",$E(X,$F(X," "),40),DA)
	;;^DD(358.6,.01,1,2,"%D",0)
	;;=^^4^4^2940224^
	;;^DD(358.6,.01,1,2,"%D",1,0)
	;;= 
	;;^DD(358.6,.01,1,2,"%D",2,0)
	;;=For package interfaces that are output routines the name has the custodial
	;;^DD(358.6,.01,1,2,"%D",3,0)
	;;=package's name space as a prefix. This cross-reference removes that
	;;^DD(358.6,.01,1,2,"%D",4,0)
	;;=prefix. It is used to improve the display of output routines for the user.
	;;^DD(358.6,.01,1,2,"DT")
	;;=2930409
	;;^DD(358.6,.01,3)
	;;=Answer must be 3-40 characters in length. All entries with Action Type other than PRINT REPORT must be be prefixed with the namespace of the package that is responsible for the data.
	;;^DD(358.6,.01,21,0)
	;;=^^3^3^2950412^^^^
	;;^DD(358.6,.01,21,1,0)
	;;= 
	;;^DD(358.6,.01,21,2,0)
	;;=The name of the Package Interface. For interfaces returning data the name
	;;^DD(358.6,.01,21,3,0)
	;;=should be preceded with the namespace of the package.
	;;^DD(358.6,.01,23,0)
	;;=^^1^1^2950412^
	;;^DD(358.6,.01,23,1,0)
	;;= 
	;;^DD(358.6,.01,"DT")
	;;=2930409

IBDEI01I
IBDEI01I	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6)
	;;=^IBE(358.6,
	;;^UTILITY(U,$J,358.6,0)
	;;=IMP/EXP PACKAGE INTERFACE^358.6I^53^53
	;;^UTILITY(U,$J,358.6,1,0)
	;;=GMRA PATIENT'S ALLERGIES^ALLERGY^IBDFN2^GEN. MED. REC. - ALLERGIES^1^3^4^1^1^^^1^^1^1^^
	;;^UTILITY(U,$J,358.6,1,1,0)
	;;=^^7^7^2951023^
	;;^UTILITY(U,$J,358.6,1,1,1,0)
	;;=Used to display a list of the patient's allergies, both true and adverse
	;;^UTILITY(U,$J,358.6,1,1,2,0)
	;;=reactions, verified and unverified. Data returned:
	;;^UTILITY(U,$J,358.6,1,1,3,0)
	;;=  allergy name
	;;^UTILITY(U,$J,358.6,1,1,4,0)
	;;=  type of allergen
	;;^UTILITY(U,$J,358.6,1,1,5,0)
	;;=  type (code only - F=food, D=drug,O=other)
	;;^UTILITY(U,$J,358.6,1,1,6,0)
	;;=  verified? YES/NO
	;;^UTILITY(U,$J,358.6,1,1,7,0)
	;;=  true allergy? YES/NO
	;;^UTILITY(U,$J,358.6,1,2)
	;;=ALLERGY NAME^30^^^^^^^^^^^^^^^1^0
	;;^UTILITY(U,$J,358.6,1,3)
	;;=ALLERGIES ALLERGY PATIENT
	;;^UTILITY(U,$J,358.6,1,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,1,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,1,15,0)
	;;=^357.615I^5^4
	;;^UTILITY(U,$J,358.6,1,15,2,0)
	;;=TYPE OF ALLERGEN^5^2
	;;^UTILITY(U,$J,358.6,1,15,3,0)
	;;=TYPE (F=FOOD,D=DRUG,O=OTHER)^1^3
	;;^UTILITY(U,$J,358.6,1,15,4,0)
	;;=VERIFIED? (YES/NO)^3^4
	;;^UTILITY(U,$J,358.6,1,15,5,0)
	;;=TRUE ALLERGY? (YES/NO)^3^5
	;;^UTILITY(U,$J,358.6,2,0)
	;;=DPT PATIENT'S INSURANCE - ALL^INSURANC^IBDFN6^REGISTRATION^1^3^4^1^1^^^1^^1^1^^
	;;^UTILITY(U,$J,358.6,2,1,0)
	;;=^^10^10^2950505^^^
	;;^UTILITY(U,$J,358.6,2,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns
	;;^UTILITY(U,$J,358.6,2,1,2,0)
	;;=ALL insurance policies, including inactive ones.
	;;^UTILITY(U,$J,358.6,2,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,358.6,2,1,4,0)
	;;=  insurance company
	;;^UTILITY(U,$J,358.6,2,1,5,0)
	;;=  policy number
	;;^UTILITY(U,$J,358.6,2,1,6,0)
	;;=  group name
	;;^UTILITY(U,$J,358.6,2,1,7,0)
	;;=  policy holder's relationship to the patient
	;;^UTILITY(U,$J,358.6,2,1,8,0)
	;;=  policy expiration date
	;;^UTILITY(U,$J,358.6,2,1,9,0)
	;;=  group number
	;;^UTILITY(U,$J,358.6,2,1,10,0)
	;;=  name of insured
	;;^UTILITY(U,$J,358.6,2,2)
	;;=INSURANCE COMPANY^30^^^^^^^^^^^^^^^1^0
	;;^UTILITY(U,$J,358.6,2,3)
	;;=PATIENT INSURANCE PIMS
	;;^UTILITY(U,$J,358.6,2,4)
	;;=S ACT=""
	;;^UTILITY(U,$J,358.6,2,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,358.6,2,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,358.6,2,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,2,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,2,15,0)
	;;=^357.615I^7^6
	;;^UTILITY(U,$J,358.6,2,15,2,0)
	;;=EXPIRATION DATE^12^2
	;;^UTILITY(U,$J,358.6,2,15,3,0)
	;;=POLICY NUMBER^20^3
	;;^UTILITY(U,$J,358.6,2,15,4,0)
	;;=GROUP NUMBER^17^4
	;;^UTILITY(U,$J,358.6,2,15,5,0)
	;;=GROUP NAME^20^5
	;;^UTILITY(U,$J,358.6,2,15,6,0)
	;;=NAME OF INSURED^30^6
	;;^UTILITY(U,$J,358.6,2,15,7,0)
	;;=HOLDER'S RELATIONSHIP^9^7
	;;^UTILITY(U,$J,358.6,3,0)
	;;=DPT PATIENT'S INSURANCE POLICIES^INSURANC^IBDFN6^REGISTRATION^1^3^4^1^1^^^1^^1^1^^
	;;^UTILITY(U,$J,358.6,3,1,0)
	;;=^^10^10^2950413^^
	;;^UTILITY(U,$J,358.6,3,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns
	;;^UTILITY(U,$J,358.6,3,1,2,0)
	;;=active insurance policies and policies that do not reimburse (Medicare).
	;;^UTILITY(U,$J,358.6,3,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,358.6,3,1,4,0)
	;;=    insurance company
	;;^UTILITY(U,$J,358.6,3,1,5,0)
	;;=    policy number
	;;^UTILITY(U,$J,358.6,3,1,6,0)
	;;=    group name
	;;^UTILITY(U,$J,358.6,3,1,7,0)
	;;=    policy holder's relationship to the patient
	;;^UTILITY(U,$J,358.6,3,1,8,0)
	;;=    policy expiration date
	;;^UTILITY(U,$J,358.6,3,1,9,0)
	;;=    group number
	;;^UTILITY(U,$J,358.6,3,1,10,0)
	;;=    name of insured
	;;^UTILITY(U,$J,358.6,3,2)
	;;=INSURANCE COMPANY^30^^^^^^^^^NAME OF INSURED^^^^^^1^0
	;;^UTILITY(U,$J,358.6,3,3)
	;;=PATIENT INSURANCE PIMS
	;;^UTILITY(U,$J,358.6,3,4)
	;;=S ACT=2
	;;^UTILITY(U,$J,358.6,3,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,358.6,3,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,358.6,3,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,3,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,3,15,0)
	;;=^357.615I^7^6
	;;^UTILITY(U,$J,358.6,3,15,2,0)
	;;=EXPIRATION DATE^12^2
	;;^UTILITY(U,$J,358.6,3,15,3,0)
	;;=POLICY NUMBER^20^3
	;;^UTILITY(U,$J,358.6,3,15,4,0)
	;;=GROUP NUMBER^17^4
	;;^UTILITY(U,$J,358.6,3,15,5,0)
	;;=GROUP NAME^20^5
	;;^UTILITY(U,$J,358.6,3,15,6,0)
	;;=NAME OF INSURED^30^6
	;;^UTILITY(U,$J,358.6,3,15,7,0)
	;;=HOLDER'S RELATIONSHIP^9^7
	;;^UTILITY(U,$J,358.6,4,0)
	;;=DPT PATIENT'S SC CONDITIONS^ELIG^IBDFN^REGISTRATION^1^3^4^1^1^^^1^^1^^
	;;^UTILITY(U,$J,358.6,4,1,0)
	;;=^^7^7^2951023^
	;;^UTILITY(U,$J,358.6,4,1,1,0)
	;;=Used to output a list of the patients service connected conditions,

IBDEI01J
IBDEI01J	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,4,1,2,0)
	;;=along with the percentage ratings. Data returned:
	;;^UTILITY(U,$J,358.6,4,1,3,0)
	;;=  disability name
	;;^UTILITY(U,$J,358.6,4,1,4,0)
	;;=  disability percentage
	;;^UTILITY(U,$J,358.6,4,1,5,0)
	;;=  disability percentage with the label "%"
	;;^UTILITY(U,$J,358.6,4,1,6,0)
	;;=  disability percentage with the label "%SC"
	;;^UTILITY(U,$J,358.6,4,1,7,0)
	;;=  disability percentage with the label "% - SERVICE CONNECTED"
	;;^UTILITY(U,$J,358.6,4,2)
	;;=Disability Name^45^^^^^^^^^^^^^^DISABILITY^1^0
	;;^UTILITY(U,$J,358.6,4,3)
	;;=SERVICE CONNECTED CONDITIONS PATIENT PIMS DISABILITY DISABILITIES
	;;^UTILITY(U,$J,358.6,4,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,4,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,4,15,0)
	;;=^357.615I^5^4
	;;^UTILITY(U,$J,358.6,4,15,2,0)
	;;=Disability % (number only)^3^2
	;;^UTILITY(U,$J,358.6,4,15,3,0)
	;;=Disability % (label=%)^4^3
	;;^UTILITY(U,$J,358.6,4,15,4,0)
	;;=Disabilty % (label=%SC)^6^4
	;;^UTILITY(U,$J,358.6,4,15,5,0)
	;;=Dis.%_"% - SERVICE CONNECTED"^24^5
	;;^UTILITY(U,$J,358.6,5,0)
	;;=SD FUTURE APPTS, ALL^ALLFUTR^IBDFN1^SCHEDULING^1^3^4^1^1^^^1^^1^^
	;;^UTILITY(U,$J,358.6,5,1,0)
	;;=^^7^7^2951026^
	;;^UTILITY(U,$J,358.6,5,1,1,0)
	;;=Returns a list of all future appointments for all clinics. Includes:
	;;^UTILITY(U,$J,358.6,5,1,2,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,358.6,5,1,3,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,358.6,5,1,4,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,358.6,5,1,5,0)
	;;=  Clinic
	;;^UTILITY(U,$J,358.6,5,1,6,0)
	;;=  Status
	;;^UTILITY(U,$J,358.6,5,1,7,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,358.6,5,2)
	;;=DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1^0
	;;^UTILITY(U,$J,358.6,5,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,358.6,5,7,0)
	;;=^357.67^2^2
	;;^UTILITY(U,$J,358.6,5,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,5,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,358.6,5,15,0)
	;;=^357.615I^6^5
	;;^UTILITY(U,$J,358.6,5,15,2,0)
	;;=TIME^5^2
	;;^UTILITY(U,$J,358.6,5,15,3,0)
	;;=DATE@TIME^17^3
	;;^UTILITY(U,$J,358.6,5,15,4,0)
	;;=CLINIC^30^4
	;;^UTILITY(U,$J,358.6,5,15,5,0)
	;;=STATUS^35^5
	;;^UTILITY(U,$J,358.6,5,15,6,0)
	;;=APPOINTMENT TYPE^25^6
	;;^UTILITY(U,$J,358.6,6,0)
	;;=SD FUTURE APPTS, SAME DAY^SAMEDAY^IBDFN1^SCHEDULING^1^3^4^1^1^^^1^^1^^
	;;^UTILITY(U,$J,358.6,6,1,0)
	;;=^^8^8^2950413^^^
	;;^UTILITY(U,$J,358.6,6,1,1,0)
	;;=Returns a list of all the patient's future appointments for the same day.
	;;^UTILITY(U,$J,358.6,6,1,2,0)
	;;= Includes:
	;;^UTILITY(U,$J,358.6,6,1,3,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,358.6,6,1,4,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,358.6,6,1,5,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,358.6,6,1,6,0)
	;;=  Clinic
	;;^UTILITY(U,$J,358.6,6,1,7,0)
	;;=  Status
	;;^UTILITY(U,$J,358.6,6,1,8,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,358.6,6,2)
	;;=DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1^0
	;;^UTILITY(U,$J,358.6,6,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,358.6,6,7,0)
	;;=^357.67^2^2
	;;^UTILITY(U,$J,358.6,6,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,6,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,358.6,6,15,0)
	;;=^357.615I^6^5
	;;^UTILITY(U,$J,358.6,6,15,2,0)
	;;=TIME (HH:MM)^5^2
	;;^UTILITY(U,$J,358.6,6,15,3,0)
	;;=DATE@TIME^17^3
	;;^UTILITY(U,$J,358.6,6,15,4,0)
	;;=CLINIC^30^4
	;;^UTILITY(U,$J,358.6,6,15,5,0)
	;;=STATUS^35^5
	;;^UTILITY(U,$J,358.6,6,15,6,0)
	;;=APPOINTMENT TYPE^25^6
	;;^UTILITY(U,$J,358.6,7,0)
	;;=SD FUTURE APPTS, SAME CLINIC^CLNCFUTR^IBDFN1^SCHEDULING^1^3^4^1^1^^^1^^1^^
	;;^UTILITY(U,$J,358.6,7,1,0)
	;;=^^8^8^2950413^^^
	;;^UTILITY(U,$J,358.6,7,1,1,0)
	;;=Returns a list of all the patient's future appointments for the same day
	;;^UTILITY(U,$J,358.6,7,1,2,0)
	;;=and clinic. Includes:
	;;^UTILITY(U,$J,358.6,7,1,3,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,358.6,7,1,4,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,358.6,7,1,5,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,358.6,7,1,6,0)
	;;=  Clinic
	;;^UTILITY(U,$J,358.6,7,1,7,0)
	;;=  Status
	;;^UTILITY(U,$J,358.6,7,1,8,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,358.6,7,2)
	;;=DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1^0
	;;^UTILITY(U,$J,358.6,7,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,358.6,7,7,0)
	;;=^357.67^3^3
	;;^UTILITY(U,$J,358.6,7,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,7,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,358.6,7,7,3,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,358.6,7,15,0)
	;;=^357.615I^6^5
	;;^UTILITY(U,$J,358.6,7,15,2,0)
	;;=TIME^5^2
	;;^UTILITY(U,$J,358.6,7,15,3,0)
	;;=DATE@TIME^17^3
	;;^UTILITY(U,$J,358.6,7,15,4,0)
	;;=CLINIC^30^4
	;;^UTILITY(U,$J,358.6,7,15,5,0)
	;;=STATUS^35^5

IBDEI01K
IBDEI01K	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,7,15,6,0)
	;;=APPOINTMENT TYPE^25^6
	;;^UTILITY(U,$J,358.6,8,0)
	;;=GMP SELECT CLINIC COMMON PROBLEMS^SELECT^GMPLENFM^PROBLEM LIST^0^3^2^^1^^^1^9^^^
	;;^UTILITY(U,$J,358.6,8,1,0)
	;;=^^11^11^2960326^^^^
	;;^UTILITY(U,$J,358.6,8,1,1,0)
	;;=This interface allows users to build selection lists (pick lists)
	;;^UTILITY(U,$J,358.6,8,1,2,0)
	;;=using terms from the Clinical Lexicon.  These pick lists would then
	;;^UTILITY(U,$J,358.6,8,1,3,0)
	;;=be similar to pick lists created in the Problem List package.  This
	;;^UTILITY(U,$J,358.6,8,1,4,0)
	;;=is an alternative to building pick lists based on Diagnosis.  The primary
	;;^UTILITY(U,$J,358.6,8,1,5,0)
	;;=purpose is to provide lists of terms that can be the primary or a 
	;;^UTILITY(U,$J,358.6,8,1,6,0)
	;;=secondary purpose of visit and can be added to the patients active
	;;^UTILITY(U,$J,358.6,8,1,7,0)
	;;=problem list.
	;;^UTILITY(U,$J,358.6,8,1,8,0)
	;;= 
	;;^UTILITY(U,$J,358.6,8,1,9,0)
	;;=Warning: If you do not see ICD codes when creating pick lists you must
	;;^UTILITY(U,$J,358.6,8,1,10,0)
	;;=edit the Problem List User Defaults to show ICD codes.  Failure to do so
	;;^UTILITY(U,$J,358.6,8,1,11,0)
	;;=may result in inaccurate or invalid ICD codes.
	;;^UTILITY(U,$J,358.6,8,2)
	;;=POINTER TO CLINICAL LEX FILE^9^^^^^^^^^^^^^^^0^1
	;;^UTILITY(U,$J,358.6,8,3)
	;;=COMMON PROBLEMS SELECT LIST
	;;^UTILITY(U,$J,358.6,8,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,358.6,8,15,2,0)
	;;=PROBLEM TEXT^210^2^^PROBLEM
	;;^UTILITY(U,$J,358.6,8,15,3,0)
	;;=CORRESPNDNG ICD-9 Dx CODE^7^3^^ICD-9
	;;^UTILITY(U,$J,358.6,9,0)
	;;=GMP INPUT CLINIC COMMON PROBLEMS^^^PROBLEM LIST^^1^^^1^^^1^^^^SM
	;;^UTILITY(U,$J,358.6,9,1,0)
	;;=^^3^3^2951206^
	;;^UTILITY(U,$J,358.6,9,1,1,0)
	;;=Input interface allows inputting into DHCP of selections based on
	;;^UTILITY(U,$J,358.6,9,1,2,0)
	;;=the clinical lexicon.  Data passes to PCE with associated qualifiers
	;;^UTILITY(U,$J,358.6,9,1,3,0)
	;;=for adding to problem list, etc.
	;;^UTILITY(U,$J,358.6,9,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,9,10)
	;;=Enter an active clincical lexicon term.
	;;^UTILITY(U,$J,358.6,9,12)
	;;=DIAGNOSIS/PROBLEM^3^13^14^2
	;;^UTILITY(U,$J,358.6,9,13,0)
	;;=^357.613V^9^9
	;;^UTILITY(U,$J,358.6,9,13,1,0)
	;;=1;IBD(358.98,^^1^^^^^2
	;;^UTILITY(U,$J,358.6,9,13,2,0)
	;;=2;IBD(358.98,^^1^^^^^2
	;;^UTILITY(U,$J,358.6,9,13,3,0)
	;;=3;IBD(358.98,^^1^^^^^9
	;;^UTILITY(U,$J,358.6,9,13,4,0)
	;;=4;IBD(358.98,^^1^^^^^10
	;;^UTILITY(U,$J,358.6,9,13,5,0)
	;;=5;IBD(358.98,^^1^^^^^11
	;;^UTILITY(U,$J,358.6,9,13,6,0)
	;;=6;IBD(358.98,^^1^^^^^12
	;;^UTILITY(U,$J,358.6,9,13,7,0)
	;;=7;IBD(358.98,^^1^^^^^5
	;;^UTILITY(U,$J,358.6,9,13,8,0)
	;;=8;IBD(358.98,^^1^^^^^6
	;;^UTILITY(U,$J,358.6,9,13,9,0)
	;;=9;IBD(358.98,^^1^^^^^6
	;;^UTILITY(U,$J,358.6,10,0)
	;;=GMP SELECT PATIENT ACTIVE PROBLEMS^DSELECT^GMPLENFM^PROBLEM LIST^1^3^4^1^1^^^1^11^1^1^
	;;^UTILITY(U,$J,358.6,10,1,0)
	;;=^^8^8^2950918^^^^
	;;^UTILITY(U,$J,358.6,10,1,1,0)
	;;=For displaying the patient's active problems. Returns a list.
	;;^UTILITY(U,$J,358.6,10,1,2,0)
	;;=Data returned:
	;;^UTILITY(U,$J,358.6,10,1,3,0)
	;;=  problem text
	;;^UTILITY(U,$J,358.6,10,1,4,0)
	;;=  corresponding ICD-9 code (if there is a mapping)
	;;^UTILITY(U,$J,358.6,10,1,5,0)
	;;=  date of onset (MM/DD/YY)
	;;^UTILITY(U,$J,358.6,10,1,6,0)
	;;=  SC indicator (SC/NSC/"")
	;;^UTILITY(U,$J,358.6,10,1,7,0)
	;;=  special exposure (A/I/P/"")
	;;^UTILITY(U,$J,358.6,10,1,8,0)
	;;=  special exposure (returns the full text of the type of exposure)
	;;^UTILITY(U,$J,358.6,10,2)
	;;=PROBLEM^10^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,358.6,10,3)
	;;=SELECT ACTIVE PROBLEMS LIST PATIENT
	;;^UTILITY(U,$J,358.6,10,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,10,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,10,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,358.6,10,13,1,0)
	;;=1;IBD(358.98,^^0^^^^^^
	;;^UTILITY(U,$J,358.6,10,13,2,0)
	;;=2;IBD(358.98,^^0^^^^^^
	;;^UTILITY(U,$J,358.6,10,15,0)
	;;=^357.615I^7^7
	;;^UTILITY(U,$J,358.6,10,15,1,0)
	;;=PROBLEM TEXT^80^2^^PROBLEM NARRATIVE/NOTES
	;;^UTILITY(U,$J,358.6,10,15,2,0)
	;;=CORRESPONDNG ICD-9 Dx CODE^7^3
	;;^UTILITY(U,$J,358.6,10,15,3,0)
	;;=DATE OF ONSET (MM/DD/YY)^8^4
	;;^UTILITY(U,$J,358.6,10,15,4,0)
	;;=SC INDICATOR (SC/NSC/"")^3^5
	;;^UTILITY(U,$J,358.6,10,15,5,0)
	;;=SC INDICATOR (Y/N/"")^1^6
	;;^UTILITY(U,$J,358.6,10,15,6,0)
	;;=SPECIAL EXPOSURE (A/I/P/"")^1^7
	;;^UTILITY(U,$J,358.6,10,15,7,0)
	;;=SPECIAL EXPOSURE (FULL TEXT)^12^8
	;;^UTILITY(U,$J,358.6,10,16)
	;;=n^^^^n
	;;^UTILITY(U,$J,358.6,11,0)
	;;=PX INPUT PATIENT ACTIVE PROBLEM^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^S

IBDEI01L
IBDEI01L	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,11,1,0)
	;;=^^1^1^2951206^^
	;;^UTILITY(U,$J,358.6,11,1,1,0)
	;;=Used for inputting data selected from the Patient's Active Problem List.
	;;^UTILITY(U,$J,358.6,11,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,358.6,11,3)
	;;=PATIENT'S ACTIVE PROBLEM LIST
	;;^UTILITY(U,$J,358.6,11,12)
	;;=DIAGNOSIS/PROBLEM^4^13^14^2
	;;^UTILITY(U,$J,358.6,11,13,0)
	;;=^357.613V^8^8
	;;^UTILITY(U,$J,358.6,11,13,1,0)
	;;=1;IBD(358.98,^^1^^^^^2^
	;;^UTILITY(U,$J,358.6,11,13,2,0)
	;;=2;IBD(358.98,^^1^^^^^2^
	;;^UTILITY(U,$J,358.6,11,13,3,0)
	;;=3;IBD(358.98,^^1^^^^^9
	;;^UTILITY(U,$J,358.6,11,13,4,0)
	;;=4;IBD(358.98,^^1^^^^^10
	;;^UTILITY(U,$J,358.6,11,13,5,0)
	;;=5;IBD(358.98,^^1^^^^^11
	;;^UTILITY(U,$J,358.6,11,13,6,0)
	;;=6;IBD(358.98,^^1^^^^^12
	;;^UTILITY(U,$J,358.6,11,13,7,0)
	;;=8;IBD(358.98,^^1^^^^^6
	;;^UTILITY(U,$J,358.6,11,13,8,0)
	;;=9;IBD(358.98,^^1^^^^^6
	;;^UTILITY(U,$J,358.6,12,0)
	;;=SD SELECT PROVIDER^PRVDR^IBDFN4^SCHEDULING^1^3^4^0^1^0^^1^13^1^^
	;;^UTILITY(U,$J,358.6,12,1,0)
	;;=^^2^2^2951020^
	;;^UTILITY(U,$J,358.6,12,1,1,0)
	;;=Used to indicate the provider.  The list of providers is obtained from
	;;^UTILITY(U,$J,358.6,12,1,2,0)
	;;=scheduling.  
	;;^UTILITY(U,$J,358.6,12,2)
	;;=POINTER TO NEW PERSON^10^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,358.6,12,3)
	;;=PROVIDER DOCTOR NURSE
	;;^UTILITY(U,$J,358.6,12,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,12,7,1,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,358.6,12,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,358.6,12,13,1,0)
	;;=1;IBD(358.98,^^0^^^^^^
	;;^UTILITY(U,$J,358.6,12,13,2,0)
	;;=2;IBD(358.98,^^0^^^^^^
	;;^UTILITY(U,$J,358.6,12,15,0)
	;;=^357.615I^1^1
	;;^UTILITY(U,$J,358.6,12,15,1,0)
	;;=PROVIDER^30^2^^PROVIDER
	;;^UTILITY(U,$J,358.6,12,16)
	;;=n^^^^n
	;;^UTILITY(U,$J,358.6,13,0)
	;;=INPUT PROVIDER^PRVDR^IBDFN4^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^1^^SP^^^1
	;;^UTILITY(U,$J,358.6,13,1,0)
	;;=^^1^1^2960129^^^^
	;;^UTILITY(U,$J,358.6,13,1,1,0)
	;;=Used for inputting the provider of the service.
	;;^UTILITY(U,$J,358.6,13,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,358.6,13,3)
	;;=PROVIDER DOCTOR NURSE
	;;^UTILITY(U,$J,358.6,13,12)
	;;=ENCOUNTER^4^^^15^^^
	;;^UTILITY(U,$J,358.6,13,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,358.6,13,13,1,0)
	;;=1;IBD(358.98,^^0^^^^^^
	;;^UTILITY(U,$J,358.6,13,13,2,0)
	;;=2;IBD(358.98,^^0^^^^^^
	;;^UTILITY(U,$J,358.6,13,14)
	;;=S Y=$$DSPLYPRV^IBDFN9(X)
	;;^UTILITY(U,$J,358.6,13,16)
	;;=n^^^^n
	;;^UTILITY(U,$J,358.6,13,18)
	;;=D LIST^IBDFDE2(.IBDSEL,.IBDF,"Provider")
	;;^UTILITY(U,$J,358.6,14,0)
	;;=DG SELECT VISIT TYPE CPT PROCEDURES^VSIT^IBDFN4^SCHEDULING^^3^2^^1^^^1^15^^
	;;^UTILITY(U,$J,358.6,14,1,0)
	;;=^^1^1^2941116^^^^
	;;^UTILITY(U,$J,358.6,14,1,1,0)
	;;=Allows for select of just Visit type CPT codes from the CPT file.
	;;^UTILITY(U,$J,358.6,14,2)
	;;=CODE^5^RECOMMENDED TEXT-SHORT NAME^40^RECOMMENDED HEADER^30^SHORT NAME FROM CPT FILE^28^^^^^^^^^1^1
	;;^UTILITY(U,$J,358.6,14,3)
	;;=SELECT TYPE OF VISIT CPT
	;;^UTILITY(U,$J,358.6,14,11)
	;;=D TESTVST^IBDFN7
	;;^UTILITY(U,$J,358.6,14,15,0)
	;;=^357.615I^4^4
	;;^UTILITY(U,$J,358.6,14,15,2,0)
	;;=RECOMMENDED TEXT-SHORT NAME^40^2^
	;;^UTILITY(U,$J,358.6,14,15,3,0)
	;;=RECOMMENDED HEADER^30^3^
	;;^UTILITY(U,$J,358.6,14,15,4,0)
	;;=SHORT NAME FROM CPT FILE^28^4^
	;;^UTILITY(U,$J,358.6,15,0)
	;;=INPUT VISIT TYPE^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP^
	;;^UTILITY(U,$J,358.6,15,1,0)
	;;=^^1^1^2951023^
	;;^UTILITY(U,$J,358.6,15,1,1,0)
	;;=Used for inputting the visit type that applies to the visit.
	;;^UTILITY(U,$J,358.6,15,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,15,3)
	;;=VISIT TYPE OF VISIT
	;;^UTILITY(U,$J,358.6,15,9)
	;;=D INPUTCPT^IBDFN8(.X)
	;;^UTILITY(U,$J,358.6,15,10)
	;;=Enter an active Visit Type code.
	;;^UTILITY(U,$J,358.6,15,11)
	;;=D TESTVST^IBDFN7
	;;^UTILITY(U,$J,358.6,15,12)
	;;=ENCOUNTER^5^^^^^^
	;;^UTILITY(U,$J,358.6,15,14)
	;;=S Y=$$DSPLYCPT^IBDFN9(X)
	;;^UTILITY(U,$J,358.6,15,17)
	;;=D SLCTVST^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,15,18)
	;;=D LIST^IBDFDE2(.IBDSEL,.IBDF,"Visit Type (EM) Code")
	;;^UTILITY(U,$J,358.6,15,19)
	;;=D VST^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,16,0)
	;;=PX SELECT EDUCATION TOPICS^EDTOP^IBDFN10^PATIENT CARE ENCOUNTER^0^3^2^^0^0^^1^17^^^
	;;^UTILITY(U,$J,358.6,16,1,0)
	;;=^^1^1^2960403^^
	;;^UTILITY(U,$J,358.6,16,1,1,0)
	;;=Allows education topics from the EDUCATION TOPICS file to be selected.
	;;^UTILITY(U,$J,358.6,16,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,358.6,16,3)
	;;=EDUCATION TOPICS TRAINING
	;;^UTILITY(U,$J,358.6,16,11)
	;;=D TESTEDT^PXAPIIB
	;;^UTILITY(U,$J,358.6,16,15,0)
	;;=^357.615I^2^2

IBDEI01M
IBDEI01M	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,16,15,1,0)
	;;=Topic^30^2^^EDUCATION TOPIC
	;;^UTILITY(U,$J,358.6,16,15,2,0)
	;;=Mneumonic^6^3
	;;^UTILITY(U,$J,358.6,16,16)
	;;=o
	;;^UTILITY(U,$J,358.6,17,0)
	;;=PX INPUT EDUCATION TOPICS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
	;;^UTILITY(U,$J,358.6,17,1,0)
	;;=^^1^1^2950825^
	;;^UTILITY(U,$J,358.6,17,1,1,0)
	;;=Used for inputting education topics that the patient was instructed in.
	;;^UTILITY(U,$J,358.6,17,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,358.6,17,3)
	;;=EDUCATION TOPICS TRAINING
	;;^UTILITY(U,$J,358.6,17,10)
	;;=Enter a Patient Education Topic.
	;;^UTILITY(U,$J,358.6,17,11)
	;;=D TESTEDT^PXAPIIB
	;;^UTILITY(U,$J,358.6,17,12)
	;;=PATIENT ED^1^^^2^^^
	;;^UTILITY(U,$J,358.6,17,13,0)
	;;=^357.613V^5^5
	;;^UTILITY(U,$J,358.6,17,13,1,0)
	;;=10;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,17,13,2,0)
	;;=11;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,17,13,3,0)
	;;=12;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,17,13,4,0)
	;;=13;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,17,13,5,0)
	;;=14;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,17,14)
	;;=S Y=$$DSPLYED^PXAPIIB(Y)
	;;^UTILITY(U,$J,358.6,17,17)
	;;=D SLCTED^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,17,19)
	;;=D ED^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,18,0)
	;;=PX SELECT IMMUNIZATIONS^IMM^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^0^^^1^19
	;;^UTILITY(U,$J,358.6,18,1,0)
	;;=^^1^1^2950911^
	;;^UTILITY(U,$J,358.6,18,1,1,0)
	;;=Allows immunizations form the IMMUNIZATION file to be selected.
	;;^UTILITY(U,$J,358.6,18,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,358.6,18,3)
	;;=IMMUNIZATIONS SHOTS IMMUNIZE
	;;^UTILITY(U,$J,358.6,18,11)
	;;=D TESTIMM^PXAPIIB
	;;^UTILITY(U,$J,358.6,18,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,358.6,18,15,1,0)
	;;=Immunization Name^45^2^^IMMUNIZATION
	;;^UTILITY(U,$J,358.6,18,15,2,0)
	;;=Short Name^10^3
	;;^UTILITY(U,$J,358.6,18,15,3,0)
	;;=Code^2^4
	;;^UTILITY(U,$J,358.6,19,0)
	;;=PX INPUT IMMUNIZATION^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
	;;^UTILITY(U,$J,358.6,19,1,0)
	;;=^^1^1^2950825^
	;;^UTILITY(U,$J,358.6,19,1,1,0)
	;;=Used for inputting immunizations administered to the patient.
	;;^UTILITY(U,$J,358.6,19,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,358.6,19,3)
	;;=IMMUNIZATIONS SHOTS
	;;^UTILITY(U,$J,358.6,19,10)
	;;=Enter a Patient Immunization.
	;;^UTILITY(U,$J,358.6,19,11)
	;;=D TESTIMM^PXAPIIB
	;;^UTILITY(U,$J,358.6,19,12)
	;;=IMMUNIZATION^1^1^^^^^
	;;^UTILITY(U,$J,358.6,19,14)
	;;=S Y=$$DSPLYIM^PXAPIIB(Y)
	;;^UTILITY(U,$J,358.6,19,17)
	;;=D SLCTIMM^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,19,19)
	;;=D IMMUN^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,20,0)
	;;=PX SELECT TREATMENTS^TRTMNT^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^0^^^1^
	;;^UTILITY(U,$J,358.6,20,1,0)
	;;=^^1^1^2950911^
	;;^UTILITY(U,$J,358.6,20,1,1,0)
	;;=Allows treatments found in the TREATMENT file to be selected.
	;;^UTILITY(U,$J,358.6,20,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,358.6,20,3)
	;;=TREATMENTS PATIENT
	;;^UTILITY(U,$J,358.6,20,11)
	;;=D TESTTRT^PXAPIIB
	;;^UTILITY(U,$J,358.6,20,15,0)
	;;=^357.615I^2^2
	;;^UTILITY(U,$J,358.6,20,15,1,0)
	;;=Treatment Name^30^2^^TREATMENT
	;;^UTILITY(U,$J,358.6,20,15,2,0)
	;;=Code^6^3
	;;^UTILITY(U,$J,358.6,21,0)
	;;=PX SELECT HEALTH FACTORS^HF^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^0^^^1^22
	;;^UTILITY(U,$J,358.6,21,1,0)
	;;=^^1^1^2951208^^^
	;;^UTILITY(U,$J,358.6,21,1,1,0)
	;;=Allows health factors from the HEALTH FACTORS file to be selected.
	;;^UTILITY(U,$J,358.6,21,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,358.6,21,3)
	;;=PATIENT HEALTH FACTORS
	;;^UTILITY(U,$J,358.6,21,11)
	;;=D TESTHF^PXAPIIB
	;;^UTILITY(U,$J,358.6,21,15,0)
	;;=^357.615I^4^4
	;;^UTILITY(U,$J,358.6,21,15,1,0)
	;;=Health Factor Name^30^2^^HEALTH FACTOR
	;;^UTILITY(U,$J,358.6,21,15,2,0)
	;;=Code^5^3
	;;^UTILITY(U,$J,358.6,21,15,3,0)
	;;=Short Name^10^5^^
	;;^UTILITY(U,$J,358.6,21,15,4,0)
	;;=Sex Specific^6^6^^FOR
	;;^UTILITY(U,$J,358.6,21,16)
	;;=n^^^^n
	;;^UTILITY(U,$J,358.6,22,0)
	;;=PX INPUT HEALTH FACTORS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
	;;^UTILITY(U,$J,358.6,22,1,0)
	;;=^^1^1^2951208^^^
	;;^UTILITY(U,$J,358.6,22,1,1,0)
	;;=Used for inputting health factors determined to apply to the patient.
	;;^UTILITY(U,$J,358.6,22,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,358.6,22,3)
	;;=HEALTH FACTORS
	;;^UTILITY(U,$J,358.6,22,10)
	;;=Enter a Patient Health Factor.
	;;^UTILITY(U,$J,358.6,22,11)
	;;=D TESTHF^PXAPIIB
	;;^UTILITY(U,$J,358.6,22,12)
	;;=HEALTH FACTORS^1^^^2^^^
	;;^UTILITY(U,$J,358.6,22,13,0)
	;;=^357.613V^3^3
	;;^UTILITY(U,$J,358.6,22,13,1,0)
	;;=15;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,22,13,2,0)
	;;=16;IBD(358.98,^^0

IBDEI01N
IBDEI01N	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,22,13,3,0)
	;;=17;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,22,14)
	;;=S Y=$$DSPLYHF^PXAPIIB(Y)
	;;^UTILITY(U,$J,358.6,22,17)
	;;=D SLCTHF^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,22,19)
	;;=D HF^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,23,0)
	;;=PX SELECT EXAMS^EXAM^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^0^^^1^24^^^
	;;^UTILITY(U,$J,358.6,23,1,0)
	;;=^^1^1^2950911^
	;;^UTILITY(U,$J,358.6,23,1,1,0)
	;;=Allows exams from the EXAM file to be selected.
	;;^UTILITY(U,$J,358.6,23,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,358.6,23,3)
	;;=EXAMS EXAMINATIONS PATIENT
	;;^UTILITY(U,$J,358.6,23,11)
	;;=D TESTEXM^PXAPIIB
	;;^UTILITY(U,$J,358.6,23,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,358.6,23,15,1,0)
	;;=Exam Name^30^2^^EXAM
	;;^UTILITY(U,$J,358.6,23,15,2,0)
	;;=Code^2^3
	;;^UTILITY(U,$J,358.6,23,15,3,0)
	;;=Sex Specific^6^4^^FOR
	;;^UTILITY(U,$J,358.6,24,0)
	;;=PX INPUT EXAMS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
	;;^UTILITY(U,$J,358.6,24,1,0)
	;;=^^1^1^2950921^^
	;;^UTILITY(U,$J,358.6,24,1,1,0)
	;;=Used for inputting exams that were performed on the patient.
	;;^UTILITY(U,$J,358.6,24,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,358.6,24,3)
	;;=EXAMS EXAMINATIONS
	;;^UTILITY(U,$J,358.6,24,10)
	;;=Enter a Patient Exam.
	;;^UTILITY(U,$J,358.6,24,11)
	;;=D TESTEXM^PXAPIIB
	;;^UTILITY(U,$J,358.6,24,12)
	;;=EXAM^1^^^2^^^
	;;^UTILITY(U,$J,358.6,24,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,358.6,24,13,1,0)
	;;=18;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,24,13,2,0)
	;;=19;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,24,14)
	;;=S Y=$$DSPLYEX^PXAPIIB(Y)
	;;^UTILITY(U,$J,358.6,24,17)
	;;=D SLECTEX^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,24,19)
	;;=D EXAM^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,25,0)
	;;=DG APPOINTMENT DISPOSITION^CHECKOUT^IBDFN10^SCHEDULING^^3^4^^1^^^1^^0^1^S
	;;^UTILITY(U,$J,358.6,25,1,0)
	;;=^^2^2^2950922^
	;;^UTILITY(U,$J,358.6,25,1,1,0)
	;;=*** THIS IS NOT CURRENTLY SCANNABLE ***
	;;^UTILITY(U,$J,358.6,25,1,2,0)
	;;=Allows a visit disposition to be choosen for checkout.
	;;^UTILITY(U,$J,358.6,25,2)
	;;=CODE^1^^^^^^^^^^^^^^^0^1
	;;^UTILITY(U,$J,358.6,25,3)
	;;=VISIT APPOINTMENT CHECKOUT DISPOSITION ENCOUNTER
	;;^UTILITY(U,$J,358.6,25,15,0)
	;;=^357.615I^1^1
	;;^UTILITY(U,$J,358.6,25,15,1,0)
	;;=APPOINTMENT DISPOSITION^12^2
	;;^UTILITY(U,$J,358.6,25,16)
	;;=n^^^^n
	;;^UTILITY(U,$J,358.6,26,0)
	;;=PX INPUT CHECKOUT TIME^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^H
	;;^UTILITY(U,$J,358.6,26,1,0)
	;;=^^1^1^2950913^^^^
	;;^UTILITY(U,$J,358.6,26,1,1,0)
	;;=Allows checkout time to be entered.
	;;^UTILITY(U,$J,358.6,26,3)
	;;=CHECKOUT TIME
	;;^UTILITY(U,$J,358.6,26,12)
	;;=ENCOUNTER^14^^^^^^
	;;^UTILITY(U,$J,358.6,26,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,358.6,26,13,1,0)
	;;=1;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,26,13,2,0)
	;;=2;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,27,0)
	;;=DPT PATIENT'S INSURANCE - ACTIVE ONLY^INSURANC^IBDFN6^REGISTRATION^1^3^4^1^1^^^1^^1^1^^
	;;^UTILITY(U,$J,358.6,27,1,0)
	;;=^^10^10^2950413^^^
	;;^UTILITY(U,$J,358.6,27,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns ONLY
	;;^UTILITY(U,$J,358.6,27,1,2,0)
	;;=active insurance, excluding policies that do not reimburse.
	;;^UTILITY(U,$J,358.6,27,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,358.6,27,1,4,0)
	;;=  insurance company
	;;^UTILITY(U,$J,358.6,27,1,5,0)
	;;=  policy number
	;;^UTILITY(U,$J,358.6,27,1,6,0)
	;;=  group name
	;;^UTILITY(U,$J,358.6,27,1,7,0)
	;;=  policy holder's relationship to the patient
	;;^UTILITY(U,$J,358.6,27,1,8,0)
	;;=  policy expiration date
	;;^UTILITY(U,$J,358.6,27,1,9,0)
	;;=  group number
	;;^UTILITY(U,$J,358.6,27,1,10,0)
	;;=  name of insured
	;;^UTILITY(U,$J,358.6,27,2)
	;;=INSURANCE COMPANY^30^^^^^^^^^NAME OF INSURED^^^^^^1^0
	;;^UTILITY(U,$J,358.6,27,3)
	;;=PATIENT INSURANCE PIMS ACTIVE
	;;^UTILITY(U,$J,358.6,27,4)
	;;=S ACT=1
	;;^UTILITY(U,$J,358.6,27,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,358.6,27,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,358.6,27,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,27,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,27,15,0)
	;;=^357.615I^7^6
	;;^UTILITY(U,$J,358.6,27,15,2,0)
	;;=EXPIRATION DATE^12^2
	;;^UTILITY(U,$J,358.6,27,15,3,0)
	;;=POLICY NUMBER^20^3
	;;^UTILITY(U,$J,358.6,27,15,4,0)
	;;=GROUP NUMBER^17^4
	;;^UTILITY(U,$J,358.6,27,15,5,0)
	;;=GROUP NAME^20^5
	;;^UTILITY(U,$J,358.6,27,15,6,0)
	;;=NAME OF INSURED^30^6
	;;^UTILITY(U,$J,358.6,27,15,7,0)
	;;=HOLDER'S RELATIONSHIP^9^7
	;;^UTILITY(U,$J,358.6,28,0)
	;;=DG SELECT ICD-9 DIAGNOSIS CODES^ICD9^IBDFN4^SCHEDULING^^3^2^^1^^^1^29^^^^0^0
	;;^UTILITY(U,$J,358.6,28,1,0)
	;;=^^2^2^2960403^^^^
	;;^UTILITY(U,$J,358.6,28,1,1,0)
	;;=Allows the user to select ICD-9 diagnosis codes from the ICD Diagnosis

IBDEI01O
IBDEI01O	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,28,1,2,0)
	;;=file. Allows only active codes to be selected.
	;;^UTILITY(U,$J,358.6,28,2)
	;;=CODE^7^^^^^^^^^^^^^^^1^1
	;;^UTILITY(U,$J,358.6,28,3)
	;;=SELECT ICD9 ICD-9 CODES DIAGNOSIS
	;;^UTILITY(U,$J,358.6,28,11)
	;;=D TESTICD^IBDFN7
	;;^UTILITY(U,$J,358.6,28,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,358.6,28,13,1,0)
	;;=1;IBD(358.98,
	;;^UTILITY(U,$J,358.6,28,13,2,0)
	;;=2;IBD(358.98,
	;;^UTILITY(U,$J,358.6,28,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,358.6,28,15,2,0)
	;;=DIAGNOSIS^30^2^^DIAGNOSIS
	;;^UTILITY(U,$J,358.6,28,15,3,0)
	;;=DESCRIPTION^200^3^^DIAGNOSIS
	;;^UTILITY(U,$J,358.6,28,16)
	;;=o^4^Diagnosis^^r^3^ICD-9 Code
	;;^UTILITY(U,$J,358.6,29,0)
	;;=INPUT DIAGNOSIS CODE (ICD9)^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP^^^1
	;;^UTILITY(U,$J,358.6,29,1,0)
	;;=^^1^1^2950828^^
	;;^UTILITY(U,$J,358.6,29,1,1,0)
	;;=Used for inputting ICD9 diagnosis codes.
	;;^UTILITY(U,$J,358.6,29,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,29,3)
	;;=INPUT ICD9 ICD-9 DIAGNOSIS CODES
	;;^UTILITY(U,$J,358.6,29,9)
	;;=D INPUTICD^IBDFN8(.X)
	;;^UTILITY(U,$J,358.6,29,10)
	;;=Enter an active ICD9 diagnosis code.
	;;^UTILITY(U,$J,358.6,29,11)
	;;=D TESTICD^IBDFN7
	;;^UTILITY(U,$J,358.6,29,12)
	;;=DIAGNOSIS/PROBLEM^1^13^14^2^^^
	;;^UTILITY(U,$J,358.6,29,13,0)
	;;=^357.613V^10^10
	;;^UTILITY(U,$J,358.6,29,13,1,0)
	;;=1;IBD(358.98,^^1^^^^^2^
	;;^UTILITY(U,$J,358.6,29,13,2,0)
	;;=2;IBD(358.98,^^1^^^^^2^
	;;^UTILITY(U,$J,358.6,29,13,3,0)
	;;=3;IBD(358.98,^^1^^^^^9^
	;;^UTILITY(U,$J,358.6,29,13,4,0)
	;;=3;IBE(358.99,^^0^^^^^^
	;;^UTILITY(U,$J,358.6,29,13,5,0)
	;;=4;IBD(358.98,^^1^^^^^10
	;;^UTILITY(U,$J,358.6,29,13,6,0)
	;;=5;IBD(358.98,^^1^^^^^11
	;;^UTILITY(U,$J,358.6,29,13,7,0)
	;;=6;IBD(358.98,^^1^^^^^12
	;;^UTILITY(U,$J,358.6,29,13,8,0)
	;;=7;IBD(358.98,^^1^^^^^5
	;;^UTILITY(U,$J,358.6,29,13,9,0)
	;;=8;IBD(358.98,^^1^^^^^6
	;;^UTILITY(U,$J,358.6,29,13,10,0)
	;;=9;IBD(358.98,^^1^^^^^6
	;;^UTILITY(U,$J,358.6,29,14)
	;;=S Y=$$DSPLYICD^IBDFN9(Y)
	;;^UTILITY(U,$J,358.6,29,15,0)
	;;=^357.615I^0^0
	;;^UTILITY(U,$J,358.6,29,16)
	;;=^^^^^^
	;;^UTILITY(U,$J,358.6,29,17)
	;;=D SLCTDX^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,29,18)
	;;=D LIST^IBDFDE2(.IBDSEL,.IBDF,"Diagnosis Code")
	;;^UTILITY(U,$J,358.6,29,19)
	;;=D DX^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,30,0)
	;;=DG SELECT CPT PROCEDURE CODES^CPT^IBDFN4^SCHEDULING^^3^2^^1^^^1^31^^^
	;;^UTILITY(U,$J,358.6,30,1,0)
	;;=^^2^2^2960205^^^^
	;;^UTILITY(U,$J,358.6,30,1,1,0)
	;;=Allows for the selection of CPT codes from the CPT file. Only active codes
	;;^UTILITY(U,$J,358.6,30,1,2,0)
	;;=are allowed.
	;;^UTILITY(U,$J,358.6,30,2)
	;;=CODE^5^^^^^^^^^^^^^^CODE^1^1
	;;^UTILITY(U,$J,358.6,30,3)
	;;=SELECT CPT PROCEDURE CODES
	;;^UTILITY(U,$J,358.6,30,9)
	;;=S X=$$CPT^IBDFN12(X)
	;;^UTILITY(U,$J,358.6,30,11)
	;;=D TESTCPT^IBDFN7
	;;^UTILITY(U,$J,358.6,30,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,358.6,30,15,2,0)
	;;=SHORT NAME^28^2^^PROCEDURE
	;;^UTILITY(U,$J,358.6,30,15,3,0)
	;;=DESCRIPTION^161^3^^PROCEDURE
	;;^UTILITY(U,$J,358.6,30,16)
	;;=o^4^Procedure Narrative^^r^5^CPT CODE
	;;^UTILITY(U,$J,358.6,31,0)
	;;=INPUT PROCEDURE CODE (CPT4)^^^PATIENT CARE ENCOUNTER^^1^4^^1^0^^1^^^^SMP^
	;;^UTILITY(U,$J,358.6,31,1,0)
	;;=^^1^1^2960205^^^^
	;;^UTILITY(U,$J,358.6,31,1,1,0)
	;;=Used for inputting CPT coded procedures performed on the patient.
	;;^UTILITY(U,$J,358.6,31,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,31,3)
	;;=CPT4 PROCEDURE CODES
	;;^UTILITY(U,$J,358.6,31,9)
	;;=D INPUTCPT^IBDFN8(.X)
	;;^UTILITY(U,$J,358.6,31,10)
	;;=Enter an active CPT procedure code.
	;;^UTILITY(U,$J,358.6,31,11)
	;;=D TESTCPT^IBDFN7
	;;^UTILITY(U,$J,358.6,31,12)
	;;=PROCEDURE^1^6^7^3^^^
	;;^UTILITY(U,$J,358.6,31,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,358.6,31,13,1,0)
	;;=1;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,31,13,2,0)
	;;=2;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,31,14)
	;;=S Y=$$DSPLYCPT^IBDFN9(Y)
	;;^UTILITY(U,$J,358.6,31,16)
	;;=^^^^^
	;;^UTILITY(U,$J,358.6,31,17)
	;;=D SLCTCPT^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,31,18)
	;;=D LIST^IBDFDE2(.IBDSEL,.IBDF,"CPT Procedure Code")
	;;^UTILITY(U,$J,358.6,31,19)
	;;=D CPT^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,32,0)
	;;=DPT SERVICE HISTORY RELATED DATA^ELIG^IBDFN^REGISTRATION^1^2^2^0^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,32,1,0)
	;;=^^7^7^2931015^^^^
	;;^UTILITY(U,$J,358.6,32,1,1,0)
	;;=For displaying service history data. Data returned:
	;;^UTILITY(U,$J,358.6,32,1,2,0)
	;;=  Vietnam service? YES/NO
	;;^UTILITY(U,$J,358.6,32,1,3,0)
	;;=  Agent Orange exposure? YES/NO
	;;^UTILITY(U,$J,358.6,32,1,4,0)
	;;=  radiation exposure? YES/NO
	;;^UTILITY(U,$J,358.6,32,1,5,0)
	;;=  combat service? YES/NO

IBDEI01P
IBDEI01P	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,32,1,6,0)
	;;=  POW? YES/NO
	;;^UTILITY(U,$J,358.6,32,1,7,0)
	;;=  environmental contaminants exposure? YES/NO
	;;^UTILITY(U,$J,358.6,32,2)
	;;=VIETNAM SERVICE?^3^^^^^^^^^ENVIRONMENTAL CONTAMINANTS?^^^^^^1
	;;^UTILITY(U,$J,358.6,32,3)
	;;=PATIENT MAS VIETNAM SERVICE AGENT ORANGE RADIATION COMBAT POW HISTORY ENVIRONMENTAL CONTAMINANT PERSIAN
	;;^UTILITY(U,$J,358.6,32,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,32,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,32,15,0)
	;;=^357.615I^6^6
	;;^UTILITY(U,$J,358.6,32,15,2,0)
	;;=AGENT ORANGE EXPOSURE?^3^2^
	;;^UTILITY(U,$J,358.6,32,15,3,0)
	;;=RADIATION EXPOSURE?^3^3^
	;;^UTILITY(U,$J,358.6,32,15,4,0)
	;;=POW?^3^4^
	;;^UTILITY(U,$J,358.6,32,15,5,0)
	;;=COMBAT SERVICE?^3^5^
	;;^UTILITY(U,$J,358.6,32,15,6,0)
	;;=ENVIRONMENTAL CONTAMINANTS?^3^6^
	;;^UTILITY(U,$J,358.6,33,0)
	;;=DPT PATIENT ELIGIBILITY DATA^ELIG^IBDFN^REGISTRATION^1^2^2^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,33,1,0)
	;;=^^8^8^2931015^^^^
	;;^UTILITY(U,$J,358.6,33,1,1,0)
	;;=Returns patient eligibility data. Data returned is:
	;;^UTILITY(U,$J,358.6,33,1,2,0)
	;;=   eligibility code in external form
	;;^UTILITY(U,$J,358.6,33,1,3,0)
	;;=   period of service
	;;^UTILITY(U,$J,358.6,33,1,4,0)
	;;=   service connected? YES/NO
	;;^UTILITY(U,$J,358.6,33,1,5,0)
	;;=   veteran? YES/NO
	;;^UTILITY(U,$J,358.6,33,1,6,0)
	;;=   eligible for care? YES/NO
	;;^UTILITY(U,$J,358.6,33,1,7,0)
	;;=   type of patient
	;;^UTILITY(U,$J,358.6,33,1,8,0)
	;;=   SC%
	;;^UTILITY(U,$J,358.6,33,2)
	;;=ELIGIBILTY CODE/EXTERNAL FORM^30^^^^^^^^^TYPE OF PATIENT^^^^^^1
	;;^UTILITY(U,$J,358.6,33,3)
	;;=ELIGIBLE ELIGIBILITY PATIENT PERIOD SERVICE CONNECTED VETERAN STATUS
	;;^UTILITY(U,$J,358.6,33,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,33,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,33,15,0)
	;;=^357.615I^7^7
	;;^UTILITY(U,$J,358.6,33,15,2,0)
	;;=PERIOD OF SERVICE^25^2^
	;;^UTILITY(U,$J,358.6,33,15,3,0)
	;;=SERVICE CONNECTED?^3^3^
	;;^UTILITY(U,$J,358.6,33,15,4,0)
	;;=VETERAN?^3^4^
	;;^UTILITY(U,$J,358.6,33,15,5,0)
	;;=ELIGIBLE FOR CARE?^3^5^
	;;^UTILITY(U,$J,358.6,33,15,6,0)
	;;=TYPE OF PATIENT^20^6^
	;;^UTILITY(U,$J,358.6,33,15,7,0)
	;;=SC %^3^7^
	;;^UTILITY(U,$J,358.6,34,0)
	;;=PX INPUT VISIT CLASSIFICATION^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^MP
	;;^UTILITY(U,$J,358.6,34,1,0)
	;;=^^3^3^2960202^^^
	;;^UTILITY(U,$J,358.6,34,1,1,0)
	;;=Used for inputting visit classifications. Examples classifications are
	;;^UTILITY(U,$J,358.6,34,1,2,0)
	;;=service connected, related to Agent Orange exposure, ionizing
	;;^UTILITY(U,$J,358.6,34,1,3,0)
	;;=radiation exposure, or environmental contaminants exposure. 
	;;^UTILITY(U,$J,358.6,34,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,34,3)
	;;=CLASSIFICATIONS AGENT ORANGE IONIZING RADIATION PERSIAN GULF ENVIRONMENTAL CONTAMINANTS SERVICE CONNECTED
	;;^UTILITY(U,$J,358.6,34,10)
	;;=Enter a classification.
	;;^UTILITY(U,$J,358.6,34,12)
	;;=ENCOUNTER
	;;^UTILITY(U,$J,358.6,34,13,0)
	;;=^357.613V^4^4
	;;^UTILITY(U,$J,358.6,34,13,1,0)
	;;=6;IBD(358.98,^^1^^^^^9
	;;^UTILITY(U,$J,358.6,34,13,2,0)
	;;=3;IBD(358.98,^^1^^^^^6
	;;^UTILITY(U,$J,358.6,34,13,3,0)
	;;=4;IBD(358.98,^^1^^^^^7
	;;^UTILITY(U,$J,358.6,34,13,4,0)
	;;=5;IBD(358.98,^^1^^^^^8
	;;^UTILITY(U,$J,358.6,34,17)
	;;=D SLCTCLS^IBDFN12(PI,.X)
	;;^UTILITY(U,$J,358.6,35,0)
	;;=SD CLINIC NAME^CLINIC^IBDFN1^SCHEDULING^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,35,1,0)
	;;=^^2^2^2930616^^
	;;^UTILITY(U,$J,358.6,35,1,1,0)
	;;= 
	;;^UTILITY(U,$J,358.6,35,1,2,0)
	;;=Outputs the name of the clinic.
	;;^UTILITY(U,$J,358.6,35,2)
	;;=CLINIC NAME^30^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,35,3)
	;;=CLINIC SCHEDULING
	;;^UTILITY(U,$J,358.6,35,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,35,7,1,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,358.6,35,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,36,0)
	;;=SD APPOINTMENT DATE/TIME^APPT^IBDFN2^SCHEDULING^1^2^2^^1^^^1^^^0^^
	;;^UTILITY(U,$J,358.6,36,1,0)
	;;=^^2^2^2950413^^^^
	;;^UTILITY(U,$J,358.6,36,1,1,0)
	;;= 
	;;^UTILITY(U,$J,358.6,36,1,2,0)
	;;=Returns the date/time of the appointment.
	;;^UTILITY(U,$J,358.6,36,2)
	;;=APPT. DATE/TIME^18^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,36,3)
	;;=APPOINTMENT DATE TIME SCHEDULING
	;;^UTILITY(U,$J,358.6,36,7,0)
	;;=^357.67^3^3
	;;^UTILITY(U,$J,358.6,36,7,1,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,358.6,36,7,2,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,36,7,3,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,358.6,36,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,358.6,36,15,2,0)
	;;=APPT. DATE (MMM DD,YYYY)^12^2^
	;;^UTILITY(U,$J,358.6,36,15,3,0)
	;;=APPT. TIME (HH:MM)^5^3^
	;;^UTILITY(U,$J,358.6,37,0)
	;;=DPT PATIENT'S NAME^VADPT^IBDFN^REGISTRATION^1^2^1^1^1^^^1^^^^

IBDEI01Q
IBDEI01Q	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,37,1,0)
	;;=^^2^2^2930212^^^^
	;;^UTILITY(U,$J,358.6,37,1,1,0)
	;;= 
	;;^UTILITY(U,$J,358.6,37,1,2,0)
	;;=Patient's Name
	;;^UTILITY(U,$J,358.6,37,2)
	;;=Patient's Name^30^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,37,3)
	;;=PATIENT NAME
	;;^UTILITY(U,$J,358.6,37,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,37,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,37,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,38,0)
	;;=DPT PATIENT'S DOB/AGE^VADPT^IBDFN^REGISTRATION^1^2^2^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,38,1,0)
	;;=^^2^2^2951023^
	;;^UTILITY(U,$J,358.6,38,1,1,0)
	;;=Patient's DOB in MM DD, YYYY format
	;;^UTILITY(U,$J,358.6,38,1,2,0)
	;;=Patient's age in years.
	;;^UTILITY(U,$J,358.6,38,2)
	;;=Patient's DOB^12^Patient's Age^3^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,38,3)
	;;=PATIENT DOB AGE PIMS
	;;^UTILITY(U,$J,358.6,38,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,38,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,38,15,0)
	;;=^357.615I^2^2
	;;^UTILITY(U,$J,358.6,38,15,2,0)
	;;=Patient's Age^3^2^
	;;^UTILITY(U,$J,358.6,39,0)
	;;=DPT PATIENT'S PID^VADPT^IBDFN^REGISTRATION^1^2^1^1^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,39,1,0)
	;;=^^1^1^2931015^^
	;;^UTILITY(U,$J,358.6,39,1,1,0)
	;;=Used to display the patient identifier.
	;;^UTILITY(U,$J,358.6,39,2)
	;;=PATIENT IDENTIFIER^15^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,39,3)
	;;=PATIENT IDENTIFIER PID
	;;^UTILITY(U,$J,358.6,39,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,39,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,39,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,40,0)
	;;=DPT PATIENT'S SEX^VADPT^IBDFN^REGISTRATION^1^2^2^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,40,1,0)
	;;=^^1^1^2931015^^^^
	;;^UTILITY(U,$J,358.6,40,1,1,0)
	;;=Patient's sex, either 'MALE' or 'FEMALE', or "M" or "F".
	;;^UTILITY(U,$J,358.6,40,2)
	;;=Patient's Sex^6^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,40,3)
	;;=SEX
	;;^UTILITY(U,$J,358.6,40,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,40,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,40,15,0)
	;;=^357.615I^2^2
	;;^UTILITY(U,$J,358.6,40,15,2,0)
	;;=Patient's Sex (Code)^1^2^
	;;^UTILITY(U,$J,358.6,41,0)
	;;=DPT PATIENT'S MEANS TEST DATA^MT^IBDFN2^REGISTRATION^1^2^2^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,41,1,0)
	;;=^^5^5^2931015^^^
	;;^UTILITY(U,$J,358.6,41,1,1,0)
	;;=Returns the patient's current means test category and the date of the most
	;;^UTILITY(U,$J,358.6,41,1,2,0)
	;;=recent means test. Data returned:
	;;^UTILITY(U,$J,358.6,41,1,3,0)
	;;=  means test category
	;;^UTILITY(U,$J,358.6,41,1,4,0)
	;;=  means test code
	;;^UTILITY(U,$J,358.6,41,1,5,0)
	;;=  date of last means test
	;;^UTILITY(U,$J,358.6,41,2)
	;;=MEANS TEST CATEGORY^20^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,41,3)
	;;=MEANS TEST CATEGORY PATIENT
	;;^UTILITY(U,$J,358.6,41,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,41,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,41,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,358.6,41,15,2,0)
	;;=DATE OF LAST MEANS TEST^12^2^
	;;^UTILITY(U,$J,358.6,41,15,3,0)
	;;=MEANS TEST CODE^1^3^
	;;^UTILITY(U,$J,358.6,42,0)
	;;=DPT PATIENT ADDRESS LINES^ADDRESS^IBDFN6^REGISTRATION^1^2^3^1^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,42,1,0)
	;;=^^1^1^2950117^^
	;;^UTILITY(U,$J,358.6,42,1,1,0)
	;;=Outputs the patient's address, up to 4 lines of 45 characters each.
	;;^UTILITY(U,$J,358.6,42,2)
	;;=ADDRESS LINE^45^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,42,3)
	;;=PATIENT ADDRESS
	;;^UTILITY(U,$J,358.6,42,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,42,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,42,15,0)
	;;=^357.615I^1^1
	;;^UTILITY(U,$J,358.6,43,0)
	;;=DPT PATIENT'S TELEPHONE NUMBER^ADDRESS^IBDFN6^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,43,1,0)
	;;=^^1^1^2930217^^
	;;^UTILITY(U,$J,358.6,43,1,1,0)
	;;=Used to display the patient's telephone number.
	;;^UTILITY(U,$J,358.6,43,2)
	;;=TELEPHONE NUMBER^20^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,43,3)
	;;=PATIENT TELEPHONE
	;;^UTILITY(U,$J,358.6,43,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,43,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,43,15,0)
	;;=^357.615I^1^1
	;;^UTILITY(U,$J,358.6,43,15,1,0)
	;;=TELEPHONE NUMBER^20^^
	;;^UTILITY(U,$J,358.6,44,0)
	;;=DPT PATIENT'S MARITAL STATUS^VADPT^IBDFN^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,44,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,358.6,44,1,1,0)
	;;=For displaying the patient's marital status.
	;;^UTILITY(U,$J,358.6,44,2)
	;;=MARITAL STATUS^15^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,44,3)
	;;=PATIENT MARITAL STATUS
	;;^UTILITY(U,$J,358.6,44,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,44,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,44,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,45,0)
	;;=DPT PATIENT'S EMPLOYER NAME^EMPLOYER^IBDFN2^REGISTRATION^1^2^1^^1^^^1^^^^

IBDEI01R
IBDEI01R	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,45,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,358.6,45,1,1,0)
	;;=For displaying the patient's employer.
	;;^UTILITY(U,$J,358.6,45,2)
	;;=employer name^45^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,45,3)
	;;=PATIENT EMPLOYER
	;;^UTILITY(U,$J,358.6,45,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,45,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,45,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,46,0)
	;;=DPT SPOUSE'S EMPLOYER NAME^SPSEMPLR^IBDFN2^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,46,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,358.6,46,1,1,0)
	;;=For displaying the spouse's employer.
	;;^UTILITY(U,$J,358.6,46,2)
	;;=employer name^45^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,46,3)
	;;=PATIENT SPOUSE EMPLOYER
	;;^UTILITY(U,$J,358.6,46,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,46,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,46,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,47,0)
	;;=PX INPUT VITALS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^H
	;;^UTILITY(U,$J,358.6,47,1,0)
	;;=^^1^1^2960307^^^
	;;^UTILITY(U,$J,358.6,47,1,1,0)
	;;=Used for inputting vitals recorded at the visit.
	;;^UTILITY(U,$J,358.6,47,3)
	;;=VITALS
	;;^UTILITY(U,$J,358.6,47,12)
	;;=VITALS^2^^^^^^
	;;^UTILITY(U,$J,358.6,47,13,0)
	;;=^357.613V^16^16
	;;^UTILITY(U,$J,358.6,47,13,1,0)
	;;=6;IBE(358.99,^^0^^^^^^^^
	;;^UTILITY(U,$J,358.6,47,13,2,0)
	;;=7;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,47,13,3,0)
	;;=8;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,47,13,4,0)
	;;=9;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,47,13,5,0)
	;;=10;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,47,13,6,0)
	;;=11;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,47,13,7,0)
	;;=12;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,47,13,8,0)
	;;=13;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,47,13,9,0)
	;;=14;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,47,13,10,0)
	;;=15;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,47,13,11,0)
	;;=16;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,47,13,12,0)
	;;=17;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,47,13,13,0)
	;;=18;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,47,13,14,0)
	;;=19;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,47,13,15,0)
	;;=20;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,47,13,16,0)
	;;=21;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,47,18)
	;;=D HNDPR^IBDFDE3(.IBDSEL,.IBDF)
	;;^UTILITY(U,$J,358.6,48,0)
	;;=DPT SC TREATMENT QUESTIONS^ELIG^IBDFN^REGISTRATION^1^2^2^0^1^^^1^^
	;;^UTILITY(U,$J,358.6,48,1,0)
	;;=^^8^8^2931018^^^^
	;;^UTILITY(U,$J,358.6,48,1,1,0)
	;;=Prints questions concerning whether treatment was related to service.
	;;^UTILITY(U,$J,358.6,48,1,2,0)
	;;=Each question is printed only if it applies to the patient. Questions are:
	;;^UTILITY(U,$J,358.6,48,1,3,0)
	;;= 
	;;^UTILITY(U,$J,358.6,48,1,4,0)
	;;=Was treatment for a SC condition? __ YES __ NO
	;;^UTILITY(U,$J,358.6,48,1,5,0)
	;;=Was treatment related to exposure to Agent Orange? __ YES __ NO
	;;^UTILITY(U,$J,358.6,48,1,6,0)
	;;=Was treatment related to exposure to Ionization Radiation? __ YES __ NO
	;;^UTILITY(U,$J,358.6,48,1,7,0)
	;;=Was treatment related to exposure to Environmental Contaminants? __ YES __ NO
	;;^UTILITY(U,$J,358.6,48,1,8,0)
	;;=Was treatment related to: AO __ IR __ EC __
	;;^UTILITY(U,$J,358.6,48,2)
	;;=RELATED TO SC CONDITION?^46^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,48,3)
	;;=PATIENT TREATMENT QUESTIONS SERVICE CONNECTED EXPOSURE
	;;^UTILITY(U,$J,358.6,48,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,48,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,48,8)
	;;=^^^^
	;;^UTILITY(U,$J,358.6,48,15,0)
	;;=^357.615I^5^5
	;;^UTILITY(U,$J,358.6,48,15,2,0)
	;;=RELATED TO AO?^63^2^
	;;^UTILITY(U,$J,358.6,48,15,3,0)
	;;=RELATED TO IR?^71^3^
	;;^UTILITY(U,$J,358.6,48,15,4,0)
	;;=RELATED TO EC?^77^4^1
	;;^UTILITY(U,$J,358.6,48,15,5,0)
	;;=RELATED TO AO,IR, OR EC?^43^5^1
	;;^UTILITY(U,$J,358.6,49,0)
	;;=IBDF UTILITY FOR SELECTING BLANKS^NULL^IBDFN4^AUTOMATED INFO COLLECTION SYS^^3^2^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,49,1,0)
	;;=^^2^2^2930414^^^^
	;;^UTILITY(U,$J,358.6,49,1,1,0)
	;;=No data is returned, so this interface allows the user to create a
	;;^UTILITY(U,$J,358.6,49,1,2,0)
	;;=selection list with what ever text he desires.
	;;^UTILITY(U,$J,358.6,49,2)
	;;=Enter Anything!^0^^^^^^^^^^^^^^^1^1
	;;^UTILITY(U,$J,358.6,49,3)
	;;=UTILITY SELECT NULL BLANKS
	;;^UTILITY(U,$J,358.6,49,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,50,0)
	;;=PX SELECT SKIN TESTS^SKINTST^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^0^^^1^51
	;;^UTILITY(U,$J,358.6,50,1,0)
	;;=^^1^1^2960228^^
	;;^UTILITY(U,$J,358.6,50,1,1,0)
	;;=Allows skin tests found in the SKIN TEST file to be selected.
	;;^UTILITY(U,$J,358.6,50,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,358.6,50,3)
	;;=SKIN TESTS

IBDEI01S
IBDEI01S	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,50,11)
	;;=D TESTSK^PXAPIIB
	;;^UTILITY(U,$J,358.6,50,15,0)
	;;=^357.615I^2^2
	;;^UTILITY(U,$J,358.6,50,15,1,0)
	;;=Skin Test Name^30^2^^SKIN TEST
	;;^UTILITY(U,$J,358.6,50,15,2,0)
	;;=code^2^3
	;;^UTILITY(U,$J,358.6,51,0)
	;;=PX INPUT SKIN TESTS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
	;;^UTILITY(U,$J,358.6,51,1,0)
	;;=^^1^1^2950825^
	;;^UTILITY(U,$J,358.6,51,1,1,0)
	;;=Used for inputting skin tests performed on the patient.
	;;^UTILITY(U,$J,358.6,51,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,358.6,51,3)
	;;=SKIN TESTS
	;;^UTILITY(U,$J,358.6,51,10)
	;;=Enter a Patient Skin Test.
	;;^UTILITY(U,$J,358.6,51,11)
	;;=D TESTSK^PXAPIIB
	;;^UTILITY(U,$J,358.6,51,12)
	;;=SKIN TEST^1^^^^^^
	;;^UTILITY(U,$J,358.6,51,14)
	;;=S Y=$$DSPLYSK^PXAPIIB(Y)
	;;^UTILITY(U,$J,358.6,51,17)
	;;=D SLCTSKN^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,51,19)
	;;=D ST^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,52,0)
	;;=IBDF UTILITY FOR LABELS ONLY^LABELS^IBDFN^AUTOMATED INFO COLLECTION SYS^0^2^2^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,52,1,0)
	;;=^^2^2^2930210^^
	;;^UTILITY(U,$J,358.6,52,1,1,0)
	;;=This interface returns no data. Its purpose is to print labels without
	;;^UTILITY(U,$J,358.6,52,1,2,0)
	;;=data to the form.
	;;^UTILITY(U,$J,358.6,52,2)
	;;=Underscore Only^0^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,52,3)
	;;=UTILITY BLANKS LABELS
	;;^UTILITY(U,$J,358.6,52,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,53,0)
	;;=IBDF UTILITY FOR BLANK LINES^BLANKS^IBDFN^AUTOMATED INFO COLLECTION SYS^0^2^5^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,53,1,0)
	;;=^^2^2^2930408^^
	;;^UTILITY(U,$J,358.6,53,1,1,0)
	;;=No data is returned by this interface - it's purpose is to print blank
	;;^UTILITY(U,$J,358.6,53,1,2,0)
	;;=lines to the form for data entry.
	;;^UTILITY(U,$J,358.6,53,2)
	;;=^0^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,53,3)
	;;=UTILITY BLANKS LINES
	;;^UTILITY(U,$J,358.6,53,15,0)
	;;=^357.615I^0^0

IBDEI01T
IBDEI01T	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.7,0,"GL")
	;;=^IBE(358.7,
	;;^DIC("B","IMP/EXP FORM LINE",358.7)
	;;=
	;;^DIC(358.7,"%D",0)
	;;=^^3^3^2940217^
	;;^DIC(358.7,"%D",1,0)
	;;=This file is nearly identical to file #357.7. It is used by the
	;;^DIC(358.7,"%D",2,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.7,"%D",3,0)
	;;=that is being imported or exported.
	;;^DD(358.7,0)
	;;=FIELD^^.08^8
	;;^DD(358.7,0,"DDA")
	;;=N
	;;^DD(358.7,0,"DT")
	;;=2950717
	;;^DD(358.7,0,"ID",.02)
	;;=W " STARTING COL=",$P(^(0),U,2)+1
	;;^DD(358.7,0,"ID",.03)
	;;=W " STARTING ROW=",$P(^(0),U,3)+1
	;;^DD(358.7,0,"ID",.06)
	;;=W ""
	;;^DD(358.7,0,"IX","B",358.7,.01)
	;;=
	;;^DD(358.7,0,"IX","C",358.7,.06)
	;;=
	;;^DD(358.7,0,"NM","IMP/EXP FORM LINE")
	;;=
	;;^DD(358.7,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.7,.01,1,0)
	;;=^.1
	;;^DD(358.7,.01,1,1,0)
	;;=358.7^B
	;;^DD(358.7,.01,1,1,1)
	;;=S ^IBE(358.7,"B",$E(X,1,30),DA)=""
	;;^DD(358.7,.01,1,1,2)
	;;=K ^IBE(358.7,"B",$E(X,1,30),DA)
	;;^DD(358.7,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.7,.01,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.7,.01,21,1,0)
	;;= 
	;;^DD(358.7,.01,21,2,0)
	;;=The name given to the line. Lines should be given names that will allow
	;;^DD(358.7,.01,21,3,0)
	;;=them to be identifies, such as V(1,1), meaning a vertical line starting at
	;;^DD(358.7,.01,21,4,0)
	;;=coordinates (1,1).

IBDEI01U
IBDEI01U	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.7)
	;;=^IBE(358.7,
	;;^UTILITY(U,$J,358.7,0)
	;;=IMP/EXP FORM LINE^358.7I^13^13
	;;^UTILITY(U,$J,358.7,1,0)
	;;=V(3,45)^44^2^V^73^25
	;;^UTILITY(U,$J,358.7,2,0)
	;;=V(3,90)^89^2^V^73^25
	;;^UTILITY(U,$J,358.7,3,0)
	;;=V(3,64)^63^2^V^17^32
	;;^UTILITY(U,$J,358.7,4,0)
	;;=V(3,45)^44^2^V^17^43
	;;^UTILITY(U,$J,358.7,5,0)
	;;=V(3,90)^89^2^V^17^43
	;;^UTILITY(U,$J,358.7,6,0)
	;;=V(3,45)^44^2^V^65^44
	;;^UTILITY(U,$J,358.7,7,0)
	;;=V(3,89)^88^2^V^65^44
	;;^UTILITY(U,$J,358.7,8,0)
	;;=V(3,45)^44^2^V^14^47
	;;^UTILITY(U,$J,358.7,9,0)
	;;=V(3,90)^89^2^V^14^47
	;;^UTILITY(U,$J,358.7,10,0)
	;;=V(3,45)^44^2^V^70^55
	;;^UTILITY(U,$J,358.7,11,0)
	;;=V(3,89)^88^2^V^70^55
	;;^UTILITY(U,$J,358.7,12,0)
	;;=V(3,44)^43^2^V^6^57
	;;^UTILITY(U,$J,358.7,13,0)
	;;=V(3,88)^87^2^V^6^57

IBDEI01V
IBDEI01V	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.8,0,"GL")
	;;=^IBE(358.8,
	;;^DIC("B","IMP/EXP TEXT AREA",358.8)
	;;=
	;;^DIC(358.8,"%D",0)
	;;=^^3^3^2940217^
	;;^DIC(358.8,"%D",1,0)
	;;=This file is nearly identical to file #357.8. It is used by the
	;;^DIC(358.8,"%D",2,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.8,"%D",3,0)
	;;=that is being imported or exported.
	;;^DD(358.8,0)
	;;=FIELD^^1^7
	;;^DD(358.8,0,"DDA")
	;;=N
	;;^DD(358.8,0,"DT")
	;;=2930802
	;;^DD(358.8,0,"IX","B",358.8,.01)
	;;=
	;;^DD(358.8,0,"IX","C",358.8,.02)
	;;=
	;;^DD(358.8,0,"NM","IMP/EXP TEXT AREA")
	;;=
	;;^DD(358.8,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.8,.01,1,0)
	;;=^.1
	;;^DD(358.8,.01,1,1,0)
	;;=358.8^B
	;;^DD(358.8,.01,1,1,1)
	;;=S ^IBE(358.8,"B",$E(X,1,30),DA)=""
	;;^DD(358.8,.01,1,1,2)
	;;=K ^IBE(358.8,"B",$E(X,1,30),DA)
	;;^DD(358.8,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.8,.01,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,.01,21,1,0)
	;;= 
	;;^DD(358.8,.01,21,2,0)
	;;=The name of the text area.

IBDEI01W
IBDEI01W	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.8)
	;;=^IBE(358.8,
	;;^UTILITY(U,$J,358.8,0)
	;;=IMP/EXP TEXT AREA^358.8^0^0

IBDEI01X
IBDEI01X	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.91)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.91,0,"GL")
	;;=^IBE(358.91,
	;;^DIC("B","IMP/EXP MARKING AREA",358.91)
	;;=
	;;^DIC(358.91,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358.91,"%D",1,0)
	;;= 
	;;^DIC(358.91,"%D",2,0)
	;;=This file is nearly identical to file #357.91. It is used by the
	;;^DIC(358.91,"%D",3,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.91,"%D",4,0)
	;;=that is being imported or exported.
	;;^DD(358.91,0)
	;;=FIELD^^.04^4
	;;^DD(358.91,0,"DT")
	;;=2960123
	;;^DD(358.91,0,"IX","B",358.91,.01)
	;;=
	;;^DD(358.91,0,"NM","IMP/EXP MARKING AREA")
	;;=
	;;^DD(358.91,0,"PT",358.22,.06)
	;;=
	;;^DD(358.91,.01,0)
	;;=NAME^RFX^^0;1^K:$L(X)>30 X
	;;^DD(358.91,.01,1,0)
	;;=^.1
	;;^DD(358.91,.01,1,1,0)
	;;=358.91^B
	;;^DD(358.91,.01,1,1,1)
	;;=S ^IBE(358.91,"B",$E(X,1,30),DA)=""
	;;^DD(358.91,.01,1,1,2)
	;;=K ^IBE(358.91,"B",$E(X,1,30),DA)
	;;^DD(358.91,.01,3)
	;;=NAME MUST BE UNDER 31 CHARACTERS
	;;^DD(358.91,.01,21,0)
	;;=^^1^1^2930608^
	;;^DD(358.91,.01,21,1,0)
	;;=The name should describe the appearance of the marking area on the form.

IBDEI01Y
IBDEI01Y	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.91)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.91)
	;;=^IBE(358.91,
	;;^UTILITY(U,$J,358.91,0)
	;;=IMP/EXP MARKING AREA^358.91^6^6
	;;^UTILITY(U,$J,358.91,1,0)
	;;=BUBBLE (use for scanning)^[ ]^1^1
	;;^UTILITY(U,$J,358.91,2,0)
	;;=DATE^             ^0
	;;^UTILITY(U,$J,358.91,3,0)
	;;=(P) (S)^(P) (S)^1^
	;;^UTILITY(U,$J,358.91,4,0)
	;;=(A) (I)^(A) (I)^1
	;;^UTILITY(U,$J,358.91,5,0)
	;;=(Y)^(Y)^1^
	;;^UTILITY(U,$J,358.91,6,0)
	;;=( )^( )^1^

IBDEI01Z
IBDEI01Z	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.93)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.93,0,"GL")
	;;=^IBE(358.93,
	;;^DIC("B","IMP/EXP MULTIPLE CHOICE FIELD",358.93)
	;;=
	;;^DIC(358.93,"%D",0)
	;;=^^2^2^2951024^^^
	;;^DIC(358.93,"%D",1,0)
	;;=This file is used as a work space for the import/export utility of the
	;;^DIC(358.93,"%D",2,0)
	;;=encounter form utilities.
	;;^DD(358.93,0)
	;;=FIELD^^1^9
	;;^DD(358.93,0,"DDA")
	;;=N
	;;^DD(358.93,0,"DT")
	;;=2960119
	;;^DD(358.93,0,"IX","A",358.931,.01)
	;;=
	;;^DD(358.93,0,"IX","A1",358.931,.02)
	;;=
	;;^DD(358.93,0,"IX","B",358.93,.01)
	;;=
	;;^DD(358.93,0,"IX","C",358.93,.08)
	;;=
	;;^DD(358.93,0,"NM","IMP/EXP MULTIPLE CHOICE FIELD")
	;;=
	;;^DD(358.93,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.93,.01,1,0)
	;;=^.1
	;;^DD(358.93,.01,1,1,0)
	;;=358.93^B
	;;^DD(358.93,.01,1,1,1)
	;;=S ^IBE(358.93,"B",$E(X,1,30),DA)=""
	;;^DD(358.93,.01,1,1,2)
	;;=K ^IBE(358.93,"B",$E(X,1,30),DA)
	;;^DD(358.93,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.93,.01,21,0)
	;;=^^2^2^2930623^^^^
	;;^DD(358.93,.01,21,1,0)
	;;= 
	;;^DD(358.93,.01,21,2,0)
	;;=The division the setup is for.
	;;^DD(358.93,.01,"DT")
	;;=2930518

IBDEI020
IBDEI020	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.93)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.93)
	;;=^IBE(358.93,
	;;^UTILITY(U,$J,358.93,0)
	;;=IMP/EXP MULTIPLE CHOICE FIELD^358.93^4^4
	;;^UTILITY(U,$J,358.93,1,0)
	;;=CLASSIFICATIONS^Was the visit related to:^1^9^^34^^21^0
	;;^UTILITY(U,$J,358.93,1,1,0)
	;;=^358.931^4^4
	;;^UTILITY(U,$J,358.93,1,1,1,0)
	;;=SERVICE CONNECTED^28^9^^SC^31^9^^3
	;;^UTILITY(U,$J,358.93,1,1,2,0)
	;;=AGENT ORANGE RELATED^36^9^^AO^39^9^^4
	;;^UTILITY(U,$J,358.93,1,1,3,0)
	;;=ENVIRONMENTAL CONTAMINANTS RELATED^44^9^^EC^47^9^^6
	;;^UTILITY(U,$J,358.93,1,1,4,0)
	;;=IONIZING RADIATION RELATED^52^9^^IR^55^9^^5
	;;^UTILITY(U,$J,358.93,2,0)
	;;=CLASSIFICATIONS^Was the visit related to:^1^9^^34^^42^0
	;;^UTILITY(U,$J,358.93,2,1,0)
	;;=^358.931^4^4
	;;^UTILITY(U,$J,358.93,2,1,1,0)
	;;=SERVICE CONNECTED^28^9^^SC^31^9^^3
	;;^UTILITY(U,$J,358.93,2,1,2,0)
	;;=AGENT ORANGE RELATED^36^9^^AO^39^9^^4
	;;^UTILITY(U,$J,358.93,2,1,3,0)
	;;=ENVIRONMENTAL CONTAMINANTS RELATED^44^9^^EC^47^9^^6
	;;^UTILITY(U,$J,358.93,2,1,4,0)
	;;=IONIZING RADIATION RELATED^52^9^^IR^55^9^^5
	;;^UTILITY(U,$J,358.93,3,0)
	;;=CLASSIFICATIONS^Was the visit related to:^1^9^^34^^56^0
	;;^UTILITY(U,$J,358.93,3,1,0)
	;;=^358.931^4^4
	;;^UTILITY(U,$J,358.93,3,1,1,0)
	;;=SERVICE CONNECTED^28^9^^SC^31^9^^3
	;;^UTILITY(U,$J,358.93,3,1,2,0)
	;;=AGENT ORANGE RELATED^36^9^^AO^39^9^^4
	;;^UTILITY(U,$J,358.93,3,1,3,0)
	;;=ENVIRONMENTAL CONTAMINANTS RELATED^44^9^^EC^47^9^^6
	;;^UTILITY(U,$J,358.93,3,1,4,0)
	;;=IONIZING RADIATION RELATED^52^9^^IR^55^9^^5
	;;^UTILITY(U,$J,358.93,4,0)
	;;=CLASSIFICATIONS^Was the visit related to:^1^9^^34^^83^0
	;;^UTILITY(U,$J,358.93,4,1,0)
	;;=^358.931^4^4
	;;^UTILITY(U,$J,358.93,4,1,1,0)
	;;=SERVICE CONNECTED^28^9^^SC^31^9^^3
	;;^UTILITY(U,$J,358.93,4,1,2,0)
	;;=AGENT ORANGE RELATED^36^9^^AO^39^9^^4
	;;^UTILITY(U,$J,358.93,4,1,3,0)
	;;=ENVIRONMENTAL CONTAMINANTS RELATED^44^9^^EC^47^9^^6
	;;^UTILITY(U,$J,358.93,4,1,4,0)
	;;=IONIZING RADIATION RELATED^52^9^^IR^55^9^^5

IBDEI021
IBDEI021	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.94)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.94,0,"GL")
	;;=^IBE(358.94,
	;;^DIC("B","IMP/EXP HAND PRINT FIELD",358.94)
	;;=
	;;^DIC(358.94,"%D",0)
	;;=^^1^1^2950927^^
	;;^DIC(358.94,"%D",1,0)
	;;=Used by the Import/Export utility as a workspace.
	;;^DD(358.94,0)
	;;=FIELD^^.1^8
	;;^DD(358.94,0,"DT")
	;;=2950728
	;;^DD(358.94,0,"IX","B",358.94,.01)
	;;=
	;;^DD(358.94,0,"IX","C",358.94,.08)
	;;=
	;;^DD(358.94,0,"NM","IMP/EXP HAND PRINT FIELD")
	;;=
	;;^DD(358.94,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.94,.01,1,0)
	;;=^.1
	;;^DD(358.94,.01,1,1,0)
	;;=358.94^B
	;;^DD(358.94,.01,1,1,1)
	;;=S ^IBE(358.94,"B",$E(X,1,30),DA)=""
	;;^DD(358.94,.01,1,1,2)
	;;=K ^IBE(358.94,"B",$E(X,1,30),DA)
	;;^DD(358.94,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.94,.01,21,0)
	;;=^^3^3^2950725^
	;;^DD(358.94,.01,21,1,0)
	;;= 
	;;^DD(358.94,.01,21,2,0)
	;;= 
	;;^DD(358.94,.01,21,3,0)
	;;=The name of the field. 
	;;^DD(358.94,.01,"DT")
	;;=2930518

IBDEI022
IBDEI022	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.94)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.94)
	;;=^IBE(358.94,
	;;^UTILITY(U,$J,358.94,0)
	;;=IMP/EXP HAND PRINT FIELD^358.94^13^13
	;;^UTILITY(U,$J,358.94,1,0)
	;;=CHECKOUT TIME^Checkout:^1^7^^26^^17^^2
	;;^UTILITY(U,$J,358.94,2,0)
	;;=CHECKOUT TIME^Checkout:^1^7^^26^^22^^2
	;;^UTILITY(U,$J,358.94,3,0)
	;;=WEIGHT^Weight:^7^6^^47^^29^^8
	;;^UTILITY(U,$J,358.94,4,0)
	;;=BLOOD PRESSURE^Blood Press.:^1^3^^47^^29^^7
	;;^UTILITY(U,$J,358.94,5,0)
	;;=CHECKOUT TIME^Checkout:^1^7^^26^^33^^2
	;;^UTILITY(U,$J,358.94,6,0)
	;;=WEIGHT^Weight:^7^6^^47^^39^^8
	;;^UTILITY(U,$J,358.94,7,0)
	;;=BLOOD PRESSURE^Blood Press.:^1^3^^47^^39^^7
	;;^UTILITY(U,$J,358.94,8,0)
	;;=WEIGHT^Weight:^7^6^^47^^51^^8
	;;^UTILITY(U,$J,358.94,9,0)
	;;=BLOOD PRESSURE^Blood Press.:^1^3^^47^^51^^7
	;;^UTILITY(U,$J,358.94,10,0)
	;;=CHECKOUT TIME^Checkout:^1^7^^26^^54^^2
	;;^UTILITY(U,$J,358.94,11,0)
	;;=CHECKOUT TIME^Checkout:^1^7^^26^^63^^2
	;;^UTILITY(U,$J,358.94,12,0)
	;;=WEIGHT^Weight:^7^7^^47^^84^^8
	;;^UTILITY(U,$J,358.94,13,0)
	;;=BLOOD PRESSURE^Blood Press.:^1^4^^47^^84^^7

IBDEI023
IBDEI023	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.98)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.98,0,"GL")
	;;=^IBD(358.98,
	;;^DIC("B","IMP/EXP AICS DATA QUALIFIERS",358.98)
	;;=
	;;^DIC(358.98,"%D",0)
	;;=^^1^1^2950927^^^
	;;^DIC(358.98,"%D",1,0)
	;;=Used by the import/export utility of the encounter forms as a workspace.
	;;^DD(358.98,0)
	;;=FIELD^^.03^3
	;;^DD(358.98,0,"DDA")
	;;=N
	;;^DD(358.98,0,"DT")
	;;=2950717
	;;^DD(358.98,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(358.98,0,"IX","B",358.98,.01)
	;;=
	;;^DD(358.98,0,"NM","IMP/EXP AICS DATA QUALIFIERS")
	;;=
	;;^DD(358.98,0,"PT",358.22,.09)
	;;=
	;;^DD(358.98,0,"PT",358.613,.01)
	;;=
	;;^DD(358.98,0,"PT",358.931,.09)
	;;=
	;;^DD(358.98,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.98,.01,1,0)
	;;=^.1
	;;^DD(358.98,.01,1,1,0)
	;;=358.98^B
	;;^DD(358.98,.01,1,1,1)
	;;=S ^IBD(358.98,"B",$E(X,1,30),DA)=""
	;;^DD(358.98,.01,1,1,2)
	;;=K ^IBD(358.98,"B",$E(X,1,30),DA)
	;;^DD(358.98,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION

IBDEI024
IBDEI024	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.98)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.98)
	;;=^IBD(358.98,
	;;^UTILITY(U,$J,358.98,0)
	;;=IMP/EXP AICS DATA QUALIFIERS^358.98I^19^19
	;;^UTILITY(U,$J,358.98,1,0)
	;;=PRIMARY^P^P
	;;^UTILITY(U,$J,358.98,2,0)
	;;=SECONDARY^S^S
	;;^UTILITY(U,$J,358.98,3,0)
	;;=SERVICE CONNECTED^1^SC
	;;^UTILITY(U,$J,358.98,4,0)
	;;=AGENT ORANGE RELATED^1^AO
	;;^UTILITY(U,$J,358.98,5,0)
	;;=IONIZING RADIATION RELATED^1^IR
	;;^UTILITY(U,$J,358.98,6,0)
	;;=ENVIRONMENTAL CONTAMINANTS RELATED^1^EC
	;;^UTILITY(U,$J,358.98,7,0)
	;;=ADD TO PROBLEM LIST^1^ADD
	;;^UTILITY(U,$J,358.98,8,0)
	;;=ACTIVE^A^A
	;;^UTILITY(U,$J,358.98,9,0)
	;;=INACTIVE^I^I
	;;^UTILITY(U,$J,358.98,10,0)
	;;=POOR UNDERSTANDING^1^POOR
	;;^UTILITY(U,$J,358.98,11,0)
	;;=FAIR UNDERSTANDING^2^FAIR
	;;^UTILITY(U,$J,358.98,12,0)
	;;=GOOD UNDERSTANDING^3^GOOD
	;;^UTILITY(U,$J,358.98,13,0)
	;;=UNDERSTANDING NOT ASSESSED^4^N/A
	;;^UTILITY(U,$J,358.98,14,0)
	;;=PATIENT ED REFUSED^5^REFUSED
	;;^UTILITY(U,$J,358.98,15,0)
	;;=MINIMAL SEVERITY^M^MINIMAL
	;;^UTILITY(U,$J,358.98,16,0)
	;;=MODERATE SEVERITY^MO^MODERATE
	;;^UTILITY(U,$J,358.98,17,0)
	;;=HEAVY SEVERITY^H^SEVERE
	;;^UTILITY(U,$J,358.98,18,0)
	;;=ABNORMAL RESULT^A^ABNORM
	;;^UTILITY(U,$J,358.98,19,0)
	;;=NORMAL RESULT^N^NORM

IBDEI025
IBDEI025	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.99)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.99,0,"GL")
	;;=^IBE(358.99,
	;;^DIC("B","IMP/EXP AICS DATA ELEMENTS",358.99)
	;;=
	;;^DIC(358.99,"%D",0)
	;;=^^1^1^2950914^^
	;;^DIC(358.99,"%D",1,0)
	;;=Used as a workspace for the import/export utility.
	;;^DD(358.99,0)
	;;=FIELD^^10.04^15
	;;^DD(358.99,0,"DDA")
	;;=N
	;;^DD(358.99,0,"DT")
	;;=2950928
	;;^DD(358.99,0,"IX","B",358.99,.01)
	;;=
	;;^DD(358.99,0,"NM","IMP/EXP AICS DATA ELEMENTS")
	;;=
	;;^DD(358.99,0,"PT",357.6,13)
	;;=
	;;^DD(358.99,0,"PT",357.613,.01)
	;;=
	;;^DD(358.99,0,"PT",358.6,16.2)
	;;=
	;;^DD(358.99,0,"PT",358.6,16.6)
	;;=
	;;^DD(358.99,0,"PT",358.613,.01)
	;;=
	;;^DD(358.99,.01,0)
	;;=DHCP DATA TYPE^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.99,.01,1,0)
	;;=^.1
	;;^DD(358.99,.01,1,1,0)
	;;=358.99^B
	;;^DD(358.99,.01,1,1,1)
	;;=S ^IBE(358.99,"B",$E(X,1,30),DA)=""
	;;^DD(358.99,.01,1,1,2)
	;;=K ^IBE(358.99,"B",$E(X,1,30),DA)
	;;^DD(358.99,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.99,.01,21,0)
	;;=^^2^2^2950418^
	;;^DD(358.99,.01,21,1,0)
	;;=A type of data that is recognized as such within the framework of scanning
	;;^DD(358.99,.01,21,2,0)
	;;=DHCP forms and which requires its own Paper Keyboard description.
	;;^DD(358.99,.01,"DT")
	;;=2950418

IBDEI026
IBDEI026	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.99)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.99)
	;;=^IBE(358.99,
	;;^UTILITY(U,$J,358.99,0)
	;;=IMP/EXP AICS DATA ELEMENTS^358.99^21^21
	;;^UTILITY(U,$J,358.99,1,0)
	;;=CHECKOUT DATE@TIME^11^^^____9_@____^11^11^^^Checkout:^mmddyy@hhmm^CODT
	;;^UTILITY(U,$J,358.99,1,1)
	;;=D CKOUT^IBDFN13(.X)
	;;^UTILITY(U,$J,358.99,1,10)
	;;=a
	;;^UTILITY(U,$J,358.99,2,0)
	;;=CHECKOUT TIME - DATE ASSUMED^4^^^____^4^11^^^Checkout:^hhmm^COTIME
	;;^UTILITY(U,$J,358.99,2,1)
	;;=D CKOUTTM^IBDFN13(.X,.IBFORMID)
	;;^UTILITY(U,$J,358.99,2,10)
	;;=t^
	;;^UTILITY(U,$J,358.99,3,0)
	;;=ICD-9 DIAGNOSIS CODE^7^^^____.__^7^11^^^^^ICD-9
	;;^UTILITY(U,$J,358.99,3,1)
	;;=D INPUTICD^IBDFN8(.X)
	;;^UTILITY(U,$J,358.99,3,10)
	;;=a^#F^^####.##
	;;^UTILITY(U,$J,358.99,4,0)
	;;=SHORT NARRATIVE (30 CHAR)^^^^_______________________________^30^11^^^^^NARR
	;;^UTILITY(U,$J,358.99,4,10)
	;;=a^^^################################
	;;^UTILITY(U,$J,358.99,5,0)
	;;=CPT-4 PROCEDURE CODE^5^^^^5^11^^^^^CPT-4
	;;^UTILITY(U,$J,358.99,5,1)
	;;=D INPUTCPT^IBDFN8(.X)
	;;^UTILITY(U,$J,358.99,5,10)
	;;=a^X####^
	;;^UTILITY(U,$J,358.99,6,0)
	;;=BODY TEMPERATURE^5^^^___._^5^11^^^Temperature:^Fahr^TMP^F
	;;^UTILITY(U,$J,358.99,6,10)
	;;=f^^^###.#
	;;^UTILITY(U,$J,358.99,7,0)
	;;=BLOOD PRESSURE^7^^^___/___^7^11^^^Blood Press.:^systolic/diastolic^BP
	;;^UTILITY(U,$J,358.99,7,10)
	;;=a^^^###/###
	;;^UTILITY(U,$J,358.99,8,0)
	;;=BODY WEIGHT^5^^^___._^5^11^^^Weight:^lbs^WT^LB
	;;^UTILITY(U,$J,358.99,8,10)
	;;=f^^^###.#
	;;^UTILITY(U,$J,358.99,9,0)
	;;=AUDIOMETRY - LEFT EAR^31^^^___/___/___/___/___/___/___/___^31^11^^^^lft ear^AUD
	;;^UTILITY(U,$J,358.99,9,10)
	;;=a^^^###/###/###/###/###/###/###/###
	;;^UTILITY(U,$J,358.99,10,0)
	;;=ABDOMINAL GIRTH^^^^___^3^11^^^Abdominal Girth:^in^AG^IN
	;;^UTILITY(U,$J,358.99,10,10)
	;;=i^^^###
	;;^UTILITY(U,$J,358.99,11,0)
	;;=AUDIOMETRY - RIGHT EAR^^^^___/___/___/___/___/___/___/___^31^11^^^^rt ear^AUD
	;;^UTILITY(U,$J,358.99,11,10)
	;;=a^^^###/###/###/###/###/###/###/###
	;;^UTILITY(U,$J,358.99,12,0)
	;;=FUNDAL HEIGHT^^^^__^2^11^^^Fundal Ht:^in^FH
	;;^UTILITY(U,$J,358.99,12,10)
	;;=a^^^##
	;;^UTILITY(U,$J,358.99,13,0)
	;;=FETAL HEART TONES^^^^___^3^11^^^Fetal Heart Tone:^per sec^FT
	;;^UTILITY(U,$J,358.99,13,10)
	;;=a^^^###
	;;^UTILITY(U,$J,358.99,14,0)
	;;=HEAD CIRCUMFERENCE^^^^__._^4^11^^^Head Circumference:^in^HC^IN
	;;^UTILITY(U,$J,358.99,14,10)
	;;=f^^^##.#
	;;^UTILITY(U,$J,358.99,15,0)
	;;=HEARING^^^^_^1^11^^^Hearing:^N=normal,A=abnormal^HE^
	;;^UTILITY(U,$J,358.99,15,10)
	;;=a^^^#
	;;^UTILITY(U,$J,358.99,16,0)
	;;=BODY HEIGHT^4^^^__._^4^11^^^Height:^in^HT^IN
	;;^UTILITY(U,$J,358.99,16,10)
	;;=f^^^##.#
	;;^UTILITY(U,$J,358.99,17,0)
	;;=PULSE^3^^^___^3^11^^^Pulse^per sec^PU
	;;^UTILITY(U,$J,358.99,17,10)
	;;=i^^^###
	;;^UTILITY(U,$J,358.99,18,0)
	;;=RESPIRATION^^^^__^2^11^^^Respiration:^per sec^RS
	;;^UTILITY(U,$J,358.99,18,10)
	;;=i^^^##
	;;^UTILITY(U,$J,358.99,19,0)
	;;=TONOMETRY^^^^__/__^5^11^^^Tonometry:^lft eye/rt eye^TON
	;;^UTILITY(U,$J,358.99,19,10)
	;;=a^^^##/##
	;;^UTILITY(U,$J,358.99,20,0)
	;;=VISION CORRECTED^^^^__/__^5^11^^^Vision Corrected:^lft eye/rt eye^VC
	;;^UTILITY(U,$J,358.99,20,10)
	;;=a^^^##/##
	;;^UTILITY(U,$J,358.99,21,0)
	;;=VISION UNCORRECTED^^^^__/__^5^11^^^Vison Uncorrected:^lft eye/rt eye^VU
	;;^UTILITY(U,$J,358.99,21,10)
	;;=a^^^##/##

IBDEI027
IBDEI027	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	I DSEC F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358,0,"AUDIT")
	;;=@
	;;^DIC(358,0,"DD")
	;;=@
	;;^DIC(358,0,"DEL")
	;;=@
	;;^DIC(358,0,"LAYGO")
	;;=@
	;;^DIC(358,0,"RD")
	;;=@
	;;^DIC(358,0,"WR")
	;;=@
	;;^DIC(358.1,0,"AUDIT")
	;;=@
	;;^DIC(358.1,0,"DD")
	;;=@
	;;^DIC(358.1,0,"DEL")
	;;=@
	;;^DIC(358.1,0,"LAYGO")
	;;=@
	;;^DIC(358.1,0,"RD")
	;;=@
	;;^DIC(358.1,0,"WR")
	;;=@
	;;^DIC(358.2,0,"AUDIT")
	;;=@
	;;^DIC(358.2,0,"DD")
	;;=@
	;;^DIC(358.2,0,"DEL")
	;;=@
	;;^DIC(358.2,0,"LAYGO")
	;;=@
	;;^DIC(358.2,0,"RD")
	;;=@
	;;^DIC(358.2,0,"WR")
	;;=@
	;;^DIC(358.3,0,"AUDIT")
	;;=@
	;;^DIC(358.3,0,"DD")
	;;=@
	;;^DIC(358.3,0,"DEL")
	;;=@
	;;^DIC(358.3,0,"LAYGO")
	;;=@
	;;^DIC(358.3,0,"RD")
	;;=@
	;;^DIC(358.3,0,"WR")
	;;=@
	;;^DIC(358.4,0,"AUDIT")
	;;=@
	;;^DIC(358.4,0,"DD")
	;;=@
	;;^DIC(358.4,0,"DEL")
	;;=@
	;;^DIC(358.4,0,"LAYGO")
	;;=@
	;;^DIC(358.4,0,"RD")
	;;=@
	;;^DIC(358.4,0,"WR")
	;;=@
	;;^DIC(358.5,0,"AUDIT")
	;;=@
	;;^DIC(358.5,0,"DD")
	;;=@
	;;^DIC(358.5,0,"DEL")
	;;=@
	;;^DIC(358.5,0,"LAYGO")
	;;=@
	;;^DIC(358.5,0,"RD")
	;;=@
	;;^DIC(358.5,0,"WR")
	;;=@
	;;^DIC(358.6,0,"AUDIT")
	;;=@
	;;^DIC(358.6,0,"DD")
	;;=@
	;;^DIC(358.6,0,"DEL")
	;;=@
	;;^DIC(358.6,0,"LAYGO")
	;;=@
	;;^DIC(358.6,0,"RD")
	;;=@
	;;^DIC(358.6,0,"WR")
	;;=@
	;;^DIC(358.7,0,"AUDIT")
	;;=@
	;;^DIC(358.7,0,"DD")
	;;=@
	;;^DIC(358.7,0,"DEL")
	;;=@
	;;^DIC(358.7,0,"LAYGO")
	;;=@
	;;^DIC(358.7,0,"RD")
	;;=@
	;;^DIC(358.7,0,"WR")
	;;=@
	;;^DIC(358.8,0,"AUDIT")
	;;=@
	;;^DIC(358.8,0,"DD")
	;;=@
	;;^DIC(358.8,0,"DEL")
	;;=@
	;;^DIC(358.8,0,"LAYGO")
	;;=@
	;;^DIC(358.8,0,"RD")
	;;=@
	;;^DIC(358.8,0,"WR")
	;;=@
	;;^DIC(358.91,0,"AUDIT")
	;;=@
	;;^DIC(358.91,0,"DD")
	;;=@
	;;^DIC(358.91,0,"DEL")
	;;=@
	;;^DIC(358.91,0,"LAYGO")
	;;=@
	;;^DIC(358.91,0,"RD")
	;;=@
	;;^DIC(358.91,0,"WR")
	;;=@
	;;^DIC(358.93,0,"AUDIT")
	;;=@
	;;^DIC(358.93,0,"DD")
	;;=@
	;;^DIC(358.93,0,"DEL")
	;;=@
	;;^DIC(358.93,0,"LAYGO")
	;;=@
	;;^DIC(358.93,0,"RD")
	;;=@
	;;^DIC(358.93,0,"WR")
	;;=@
	;;^DIC(358.94,0,"AUDIT")
	;;=@
	;;^DIC(358.94,0,"DD")
	;;=@
	;;^DIC(358.94,0,"DEL")
	;;=@
	;;^DIC(358.94,0,"LAYGO")
	;;=@
	;;^DIC(358.94,0,"RD")
	;;=@
	;;^DIC(358.94,0,"WR")
	;;=@
	;;^DIC(358.98,0,"AUDIT")
	;;=@
	;;^DIC(358.98,0,"DD")
	;;=@
	;;^DIC(358.98,0,"DEL")
	;;=@
	;;^DIC(358.98,0,"LAYGO")
	;;=@
	;;^DIC(358.98,0,"RD")
	;;=@
	;;^DIC(358.98,0,"WR")
	;;=@

IBDEI028
IBDEI028	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PKG",227,0)
	;;=IB ENCOUNTER FORM IMP/EXP^IBDE^The import/export utilities for encounter forms.
	;;^UTILITY(U,$J,"PKG",227,4,0)
	;;=^9.44PA^14^14
	;;^UTILITY(U,$J,"PKG",227,4,1,0)
	;;=358
	;;^UTILITY(U,$J,"PKG",227,4,1,1,0)
	;;=^9.45A^1^1
	;;^UTILITY(U,$J,"PKG",227,4,1,1,1,0)
	;;=NAME
	;;^UTILITY(U,$J,"PKG",227,4,1,1,"B","NAME",1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,1,222)
	;;=y^y^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,2,0)
	;;=358.1
	;;^UTILITY(U,$J,"PKG",227,4,2,1,0)
	;;=^9.45A^1^1
	;;^UTILITY(U,$J,"PKG",227,4,2,1,1,0)
	;;=NAME
	;;^UTILITY(U,$J,"PKG",227,4,2,1,"B","NAME",1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,2,222)
	;;=y^y^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,3,0)
	;;=358.2
	;;^UTILITY(U,$J,"PKG",227,4,3,1,0)
	;;=^9.45A^1^1
	;;^UTILITY(U,$J,"PKG",227,4,3,1,1,0)
	;;=NAME
	;;^UTILITY(U,$J,"PKG",227,4,3,1,"B","NAME",1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,3,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,4,0)
	;;=358.3
	;;^UTILITY(U,$J,"PKG",227,4,4,1,0)
	;;=^9.45A^2^2
	;;^UTILITY(U,$J,"PKG",227,4,4,1,1,0)
	;;=SELECTION ID
	;;^UTILITY(U,$J,"PKG",227,4,4,1,2,0)
	;;=SELECTION ID
	;;^UTILITY(U,$J,"PKG",227,4,4,1,"B","SELECTION ID",1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,4,1,"B","SELECTION ID",2)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,4,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,5,0)
	;;=358.4
	;;^UTILITY(U,$J,"PKG",227,4,5,1,0)
	;;=^9.45A^1^1
	;;^UTILITY(U,$J,"PKG",227,4,5,1,1,0)
	;;=HEADER
	;;^UTILITY(U,$J,"PKG",227,4,5,1,"B","HEADER",1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,5,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,6,0)
	;;=358.5
	;;^UTILITY(U,$J,"PKG",227,4,6,1,0)
	;;=^9.45A^1^1
	;;^UTILITY(U,$J,"PKG",227,4,6,1,1,0)
	;;=NAME
	;;^UTILITY(U,$J,"PKG",227,4,6,1,"B","NAME",1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,6,222)
	;;=y^y^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,7,0)
	;;=358.6
	;;^UTILITY(U,$J,"PKG",227,4,7,1,0)
	;;=^9.45A^1^1
	;;^UTILITY(U,$J,"PKG",227,4,7,1,1,0)
	;;=NAME
	;;^UTILITY(U,$J,"PKG",227,4,7,1,"B","NAME",1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,7,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,8,0)
	;;=358.7
	;;^UTILITY(U,$J,"PKG",227,4,8,1,0)
	;;=^9.45A^1^1
	;;^UTILITY(U,$J,"PKG",227,4,8,1,1,0)
	;;=NAME
	;;^UTILITY(U,$J,"PKG",227,4,8,1,"B","NAME",1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,8,222)
	;;=y^y^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,9,0)
	;;=358.8
	;;^UTILITY(U,$J,"PKG",227,4,9,1,0)
	;;=^9.45A^1^1
	;;^UTILITY(U,$J,"PKG",227,4,9,1,1,0)
	;;=NAME
	;;^UTILITY(U,$J,"PKG",227,4,9,1,"B","NAME",1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,9,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,10,0)
	;;=358.91
	;;^UTILITY(U,$J,"PKG",227,4,10,1,0)
	;;=^9.45A^1^1
	;;^UTILITY(U,$J,"PKG",227,4,10,1,1,0)
	;;=NAME
	;;^UTILITY(U,$J,"PKG",227,4,10,1,"B","NAME",1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,10,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,11,0)
	;;=358.94
	;;^UTILITY(U,$J,"PKG",227,4,11,1,0)
	;;=^9.45A^1^1
	;;^UTILITY(U,$J,"PKG",227,4,11,1,1,0)
	;;=NAME
	;;^UTILITY(U,$J,"PKG",227,4,11,1,"B","NAME",1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,11,222)
	;;=y^y^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,12,0)
	;;=358.93
	;;^UTILITY(U,$J,"PKG",227,4,12,1,0)
	;;=^9.45A^1^1
	;;^UTILITY(U,$J,"PKG",227,4,12,1,1,0)
	;;=NAME
	;;^UTILITY(U,$J,"PKG",227,4,12,1,"B","NAME",1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,12,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,13,0)
	;;=358.99
	;;^UTILITY(U,$J,"PKG",227,4,13,1,0)
	;;=^9.45A^1^1
	;;^UTILITY(U,$J,"PKG",227,4,13,1,1,0)
	;;=DHCP DATA TYPE
	;;^UTILITY(U,$J,"PKG",227,4,13,1,"B","DHCP DATA TYPE",1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,13,222)
	;;=y^y^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,14,0)
	;;=358.98
	;;^UTILITY(U,$J,"PKG",227,4,14,1,0)
	;;=^9.45A^1^1
	;;^UTILITY(U,$J,"PKG",227,4,14,1,1,0)
	;;=NAME
	;;^UTILITY(U,$J,"PKG",227,4,14,1,"B","NAME",1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,14,222)
	;;=y^y^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,"B",358,1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.1,2)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.2,3)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.3,4)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.4,5)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.5,6)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.6,7)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.7,8)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.8,9)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.91,10)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.93,12)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.94,11)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.98,14)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.99,13)
	;;=
	;;^UTILITY(U,$J,"PKG",227,5)
	;;=ALBANY
	;;^UTILITY(U,$J,"PKG",227,11)
	;;=358^358.99
	;;^UTILITY(U,$J,"PKG",227,22,0)
	;;=^9.49I^1^1
	;;^UTILITY(U,$J,"PKG",227,22,1,0)
	;;=2.1^2960403

IBDEI029
IBDEI029	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PKG",227,22,"B",2.1,1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,"INI")
	;;=IBDE2^
	;;^UTILITY(U,$J,"PKG",227,"INIT")
	;;=IBDEPT^
	;;^UTILITY(U,$J,"PKG",227,"PRE")
	;;=IBDEPRE^
	;;^UTILITY(U,$J,"SBF",358,358)
	;;=
	;;^UTILITY(U,$J,"SBF",358.1,358.1)
	;;=
	;;^UTILITY(U,$J,"SBF",358.2,358.2)
	;;=
	;;^UTILITY(U,$J,"SBF",358.3,358.3)
	;;=
	;;^UTILITY(U,$J,"SBF",358.4,358.4)
	;;=
	;;^UTILITY(U,$J,"SBF",358.5,358.5)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.6)
	;;=
	;;^UTILITY(U,$J,"SBF",358.7,358.7)
	;;=
	;;^UTILITY(U,$J,"SBF",358.8,358.8)
	;;=
	;;^UTILITY(U,$J,"SBF",358.91,358.91)
	;;=
	;;^UTILITY(U,$J,"SBF",358.93,358.93)
	;;=
	;;^UTILITY(U,$J,"SBF",358.94,358.94)
	;;=
	;;^UTILITY(U,$J,"SBF",358.98,358.98)
	;;=
	;;^UTILITY(U,$J,"SBF",358.99,358.99)
	;;=

IBDEINI1
IBDEINI1	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	; LOADS AND INDEXES DD'S
	;
	K DIF,DIK,D,DDF,DDT,DTO,D0,DLAYGO,DIC,DIDUZ,DIR,DA,DFR,DTN,DIX,DZ D DT^DICRW S %=1,U="^",DSEC=1
	S NO=$P("I 0^I $D(@X)#2,X[U",U,%) I %<1 K DIFQ Q
ASK	I %=1,$D(DIFQ(0)) W !,"SHALL I WRITE OVER FILE SECURITY CODES" S %=2 D YN^DICN S DSEC=%=1 I %<1 K DIFQ Q
	Q:'$D(DIFQ)  S %=2 W !!,"ARE YOU SURE EVERYTHING'S OK" D YN^DICN I %-1 K DIFQ Q
	D ^IBDE2 D NOW^%DTC S DIFROM("INI")=%
	I $D(DIFKEP) F DIDIU=0:0 S DIDIU=$O(DIFKEP(DIDIU)) Q:DIDIU'>0  S DIU=DIDIU,DIU(0)=DIFKEP(DIDIU) D EN^DIU2
	D DT^DICRW K ^UTILITY(U,$J),^UTILITY("DIK",$J) D WAIT^DICD
	S DN="^IBDEI" F R=1:1:81 D @(DN_$$B36(R)) W "."
	F  S D=$O(^UTILITY(U,$J,"SBF","")) Q:D'>0  K:'DIFQ(D) ^(D) S D=$O(^(D,"")) I D>0  K ^(D) D IX
DATA	W "." S (D,DDF(1),DDT(0))=$O(^UTILITY(U,$J,0)) Q:D'>0
	I DIFQR(D) S DTO=0,DMRG=1,DTO(0)=^(D),Z=^(D)_"0)",D0=^(D,0),@Z=D0,DFR(1)="^UTILITY(U,$J,DDF(1),D0,",DKP=DIFQR(D)'=2 F D0=0:0 S D0=$O(^UTILITY(U,$J,DDF(1),D0)) S:D0="" D0=-1 Q:'$D(^(D0,0))  S Z=^(0) D I^DITR
	K ^UTILITY(U,$J,DDF(1)),DDF,DDT,DTO,DFR,DFN,DTN G DATA
	;
W	S Y=$P($T(@X),";",2) W !,"NOTE: This package also contains "_Y_"S",! Q:'$D(DIFQ(0))
	S %=1 W ?6,"SHALL I WRITE OVER EXISTING "_Y_"S OF THE SAME NAME" D YN^DICN I '% W !?6,"Answer YES to replace the current "_Y_"S with the incoming ones." G W
	S:%=2 DIFQ(X)=0 K:%<0 DIFQ
	Q
	;
OPT	;OPTION
RTN	;ROUTINE DOCUMENTATION NOTE
FUN	;FUNCTION
BUL	;BULLETIN
KEY	;SECURITY KEY
HEL	;HELP FRAME
DIP	;PRINT TEMPLATE
DIE	;INPUT TEMPLATE
DIB	;SORT TEMPLATE
DIS	;FORM
	;
SBF	;FILE AND SUB FILE NUMBERS
IX	W "." S DIK="A" F %=0:0 S DIK=$O(^DD(D,DIK)) Q:DIK=""  K ^(DIK)
	S DA(1)=D,DIK="^DD("_D_"," D IXALL^DIK
	I $D(^DIC(D,"%",0)) S DIK="^DIC(D,""%""," G IXALL^DIK
	Q
B36(X)	Q $$N(X\(36*36)#36+1)_$$N(X\36#36+1)_$$N(X#36+1)
N(%)	Q $E("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",%)

IBDEINI2
IBDEINI2	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
	K ^UTILITY("DIFROM",$J),DIC S DIDUZ=0 S:$D(DUZ)#2 DIDUZ=DUZ S DUZ=.5
	I $D(^DIC(9.2,0))#2,^(0)?1"HEL".E S (DIC,DLAYGO)=9.2,N="HEL",DIC(0)="LX" G ADD
	Q
	;
ADD	F R=0:0 S R=$O(^UTILITY(U,$J,N,R)) Q:R'>0  S X=$P(^(R,0),U,1) W "." K DA D ^DIC I Y>0,'$D(DIFQ(N))!$P(Y,U,3) S ^UTILITY("DIFROM",$J,N,X)=+Y K ^DIC(9.2,+Y,1),^(2),^(3),^(10) S %X="^UTILITY(U,$J,N,R,",%Y=DIC_"+Y,",DA=+Y D %XY^%RCR
	S DIK=DIC
HELP	S R=$O(^UTILITY("DIFROM",$J,N,R)) Q:R=""  W !,"'"_R_"' Help Frame filed." S DA=^(R)
	F X=0:0 S X=$O(^DIC(9.2,DA,2,X)) Q:'X  S I=$S($D(^(X,0)):^(0),1:0),Y=$P(I,U,2) S:Y]"" Y=$O(^DIC(9.2,"B",Y,0)) S ^(0)=$P(^DIC(9.2,DA,2,X,0),U,1)_U_$S(Y>0:Y,1:"")_U_$P(^(0),U,3,99)
	S I=0 F X=0:0 S X=$O(^DIC(9.2,DA,10,X)) Q:'X  I $D(^(X,0)) S Y=$P(^(0),U),Y=$S(Y]"":$O(^MAG("B",Y,0)),1:0) S:Y $P(^DIC(9.2,DA,10,X,0),U)=Y,I=I+1,%=X I 'Y K ^DIC(9.2,DA,10,X,0)
	I I S $P(^DIC(9.2,DA,10,0),U,3,4)=%_U_I
IX	D IX1^DIK G HELP
	;
U	I $D(DIRUT) S DIFQ=1
	W ! Q
REP	S DIR(0)="Y",DIR("A")="Shall I change the NAME of the file to "_DIF
	S DIR("??")="^D REP^DIFROMH1",DIR("B")="NO" D ^DIR G U:$D(DIRUT)
	I Y S DIE=1,DIFQ=0,DA=N,DR=".01////"_DIF D ^DIE Q
	S DIR("A")="Shall I replace your file with mine"
	S DIR("??")="^D AG^DIFROMH1" D ^DIR G U:$D(DIRUT)!'Y
	S DIU(0)="E",DIR("A")="Do you want to keep the Data"
	S DIR("??")="^D CHG^DIFROMH1" D ^DIR G U:$D(DIRUT)
	S:'Y DIU(0)=DIU(0)_"D"
	S DIR("A")="Do you want to keep the Templates"
	S DIR("??")="^D TEMP^DIFROMH1" D ^DIR G U:$D(DIRUT) S:'Y DIU(0)=DIU(0)_"T"
	S DIFQ(N)=1,DIFKEP(N)=DIU(0) W !?15," (",DIF,") " Q

IBDEINI3
IBDEINI3	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
	K ^UTILITY("DIFROM",$J) S DIC(0)="LX",(DIC,DLAYGO)=3.6,N="BUL" D ADD:$D(^XMB(3.6,0))
	S X=0 F R=0:0 S X=$O(^UTILITY("DIFROM",$J,N,X)) Q:X=""  W !,"'",X,"' BULLETIN FILED -- Remember to add mail groups for new bulletins."
	I $D(^DIC(9.4,0))#2,^(0)?1"PACK".E S N="PKG",(DIC,DLAYGO)=9.4 D ADD
	G NP:'$D(DA) S %=+$O(^DIC(9.4,DA,22,"B",DIFROM,0)) I $D(^DIC(9.4,DA,22,%,0)) S $P(^(0),U,3)=DT
	I $D(^DIC(9.4,DA,0))#2 S %=$P(^(0),U,4) I %]"" S %=$O(^DIC(9.2,"B",%,0)) S:%]"" $P(^DIC(9.4,DA,0),U,4)=%
OR	I $D(^ORD(100.99))&$O(^UTILITY(U,$J,"OR","")) D EN^IBDEINI4
NP	K DIC,^UTILITY("DIFROM",$J) S DIC(0)="LX" I $D(^DIC(19,0))#2,^(0)?1"OPTION".E S (DIC,DLAYGO)=19,N="OPT" D ADD,OP
	I $D(^DIC(19.1,0))#2,($P(^(0),U)?1"SECUR".E)!($P(^(0),U)="KEY") S (DIC,DLAYGO)=19.1,N="KEY" D ADD K ^UTILITY("DIFROM",$J)
	I $D(^DIC(9.8,0))#2,^(0)?1"ROUTINE^".E S (DIC,DLAYGO)=9.8,N="RTN" D ADD
	S DIC=.5,DLAYGO=0,N="FUN" D ADD
	S DIC("S")="I $P(^(0),U,4)=DIFL" F N="DIPT","DIBT","DIE" S DIC=U_N_"(" D ADD
	K DIC("S") S N="DIST(.404,",DIC=U_N,DLAYGO=.404 D ADD
	S DIC("S")="I $P(^(0),U,8)=DIFL",N="DIST(.403,",DIC=U_N,DLAYGO=.403 D ADD
	K ^UTILITY(U,$J),DIC,DLAYGO F DIFR="DIE","DIPT" D DIEZ
	K ^UTILITY("DIFROM",$J) Q
DIEZ	I ^DD("VERSION")>17.4,'$D(DISYS) D OS^DII
	E  S DISYS=^DD("OS")
	Q:'$D(^DD("OS",DISYS,"ZS"))
	S DIFR1=""
DZ1	S DIFR1=$O(^UTILITY("DIFROM",$J,DIFR,DIFR1)) Q:DIFR1=""
	F DIFR2=0:0 S DIFR2=$O(^UTILITY("DIFROM",$J,DIFR,DIFR1,DIFR2)) Q:'DIFR2  S Y=DIFR2 I $D(@(U_DIFR_"(Y,""ROU"")")) K ^("ROU") I $D(^("ROUOLD")) S X=^("ROUOLD"),DMAX=^DD("ROU") D:X]"" @("EN^DI"_$E(DIFR,3)_"Z")
	G DZ1
	;
OP	S R=$O(^UTILITY("DIFROM",$J,N,R)) I R="" K ^UTILITY("DIFROM",$J) G Q
	W !,"'"_R_"' Option Filed" S DA=+^UTILITY("DIFROM",$J,N,R) G:$P(^(R),U,2,3)="XUCORE^"!($P(^(R),U,2,3)="XUCOMMAND^") OP
	I $D(^DIC(19,DA,220)) S %=$P(^(220),U) S:%]"" %=$O(^XMB(3.6,"B",%,0)) S $P(^DIC(19,DA,220),U)=%,%=$P(^(220),U,3) S:%]"" %=$O(^XMB(3.8,"B",%,0)) S $P(^DIC(19,DA,220),U,3)=%
	S %=$P(^DIC(19,DA,0),U,12) S:%]"" %=$O(^DIC(9.4,"B",%,0))
	S $P(^DIC(19,DA,0),U,12)=%,%=$P(^(0),U,7),(DZ,DIX)=0
	D:$D(^DIC(19,DA,10,"B")) KAD(DA) S:%]"" %=$O(^DIC(9.2,"B",%,0)) S $P(^DIC(19,DA,0),U,7)=%,%=$P(^(0),U,4),%="MOQXL"[% K ^(10,"B"),^("C")
	F X=0:0 S X=$O(^DIC(19,DA,10,X)) Q:'X  S I=$S($D(^(X,0)):^(0),1:0),Y=$S($D(^(U)):^(U),1:"") K ^DIC(19,DA,10,X) I Y]"",% S D=$O(^DIC(19,"B",Y,0)) I D S ^DIC(19,DA,10,X,0)=D_U_$P(I,U,2,9),DZ=DZ+1,DIX=X
	S:% ^DIC(19,DA,10,0)="^19.01PI^"_DIX_U_DZ D IX1^DIK G OP
	;
ADD	F R=0:0 S R=$O(^UTILITY(U,$J,N,R)) Q:R=""  S X=$P(^(R,0),U),DIFL=$S(N="DIST(.403,":$P(^(0),U,8),N="DIST(.404,":$P(^(0),U,2),1:$P(^(0),U,4)) W "." K DA D ^DIC I Y>0,'$D(DIFQ($E(N,1,3)))!$P(Y,U,3) S Y=Y_U D A
Q	Q
A	I N="BUL" K % S %(0)=$G(@(DIC_"+Y,2,0)")) F %=0:0 S %=$O(@(DIC_"+Y,2,%)")) Q:'%  S %(%)=$G(^(%,0))
	K:N'="KEY"&(N'="OPT") @(DIC_"+Y)") S ^UTILITY("DIFROM",$J,N,X)=Y S:$E(N,1,2)="DI" ^(X,+Y)="" S:N="PKG" DIFROM(0)=+Y Q:$P(Y,U,2,3)="XUCORE^"!($P(Y,U,2,3)="XUCOMMAND^")
	I N="BUL",%(0)]"" S @(DIC_"+Y,2,0)")=%(0) F %=0:0 S %=$O(%(%)) Q:'%  S @(DIC_"+Y,2,%,0)")=%(%)
	I $E(N,1,2)="DI",('DIFL)!('$D(^DD(+DIFL))) D
	.W !,"**WARNING--"_$S(N="DIE":"INPUT",N="DIPT":"PRINT",N="DIBT":"SORT",1:"FORM or BLOCK")_$S(N'["DIST":" template ",1:" ")_$P(Y,U,2)_" has been installed,",!,"but associated file "_DIFL_" is not on your system!"
	.Q
	I N="OPT" S:$P(^DIC(19,+Y,0),U,6)]"" DIOPT=$P(^(0),U,6) I $O(^UTILITY(U,$J,N,R,1,0)) K ^DIC(19,+Y,1)
	I N="DIST(.403," D BLK
	S %X="^UTILITY(U,$J,N,R,",%Y=DIC_"+Y,",DA=+Y,DIK=DIC D %XY^%RCR
	D IX1^DIK:N'="OPT" I N="OPT",$D(DIOPT) S:$P(^DIC(19,DA,0),U,6)="" $P(^(0),U,6)=DIOPT K DIOPT
	I N="DIST(.403," D
	.N DIFRVAL S DIFRVAL=$$VAL^DIFROMSS(.403,DA)
	.I DIFRVAL W !,"Compiling form: ",$P(^DIST(.403,DA,0),U) D EN^DDSZ(DA) Q
	.W !,"ERROR: Form: ",$P(^DIST(.403,DA,0),U)," cannot be compiled"
	.Q
	Q
BLK	F J=0:0 S J=$O(^UTILITY(U,$J,N,R,40,J)) Q:'J  I $D(^(J,0)) S %=$P(^(0),U,2) S:%]"" %=$O(^DIST(.404,"B",%,0)) S:% $P(^UTILITY(U,$J,N,R,40,J,0),U,2)=% D B1
	K A0,A1,A2,J,L Q
B1	F L=0:0 S L=$O(^UTILITY(U,$J,N,R,40,J,40,L)) Q:'L  S A0=$G(^(L,0)),%=$P(A0,U) I %]"" S %=$O(^DIST(.404,"B",%,0)) I % S $P(A0,U)=%,^UTILITY(U,$J,N,R,40,J,"BLK",%,0)=A0 D
	.N X S X=0
	.F  S X=$O(^UTILITY(U,$J,N,R,40,J,40,L,X)) Q:X=""  S ^UTILITY(U,$J,N,R,40,J,"BLK",%,X)=^(X)
	.Q
	S A0=$G(^UTILITY(U,$J,N,R,40,J,40,0)) Q:A0=""  K ^UTILITY(U,$J,N,R,40,J,40) S (A1,A2)=0
	F L=0:0 S L=$O(^UTILITY(U,$J,N,R,40,J,"BLK",L)) Q:'L  S ^UTILITY(U,$J,N,R,40,J,40,L,0)=^(L,0),A1=L,A2=A2+1 D
	.N X S X=0
	.F  S X=$O(^UTILITY(U,$J,N,R,40,J,"BLK",L,X)) Q:X=""  S ^UTILITY(U,$J,N,R,40,J,40,L,X)=^(X)
	.Q
	S $P(A0,U,3,4)=A1_U_A2,^UTILITY(U,$J,N,R,40,J,40,0)=A0 K ^UTILITY(U,$J,N,R,40,J,"BLK")
	Q
KAD(D0)	N D1,X
	S X=0 F  S X=$O(^DIC(19,D0,10,"B",X)) Q:X'>0  S D1=0 F  S D1=$O(^DIC(19,D0,10,"B",X,D1)) Q:D1'>0  K ^DIC(19,"AD",X,D0,D1)
	Q

IBDEINI4
IBDEINI4	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
EN	S DA(1)=1,DIK="^ORD(100.99,1,5," I $D(^ORD(100.99,1,5,DA)) D ^DIK
	S %X="^UTILITY(U,$J,""OR"","_$O(^UTILITY(U,$J,"OR",""))_",",%Y=DIK_DA_","
	S:'$D(^ORD(100.99,1,5,0)) ^(0)="^100.995P^^" S $P(^(0),U,3,4)=DA_U_($P(^(0),U,4)+1)
	D %XY^%RCR S $P(^ORD(100.99,1,5,DA,0),U)=DA,%=$P(^(0),U,4)
	I %]"" S %=$O(^ORD(100.98,"B",%,0)) I %>0 S $P(^ORD(100.99,1,5,DA,0),U,4)=%
	D OR
	S DA(1)=1 D IX1^DIK
	Q
OR	S (N,I)=0,X=""
	F  S N=$O(^ORD(100.99,1,5,DA,1,N)) Q:'N  S X=$P(^(N,0),U) I X]"" S %=$O(^ORD(101,"B",X,0)) D:'% ADDP S:% ^ORD(100.99,1,5,DA,1,N,0)=% S X=N,I=I+1,(R,J)=0,Y="" D OR1
	S:I $P(^ORD(100.99,1,5,DA,1,0),U,3,4)=X_U_I S (N,I)=0,X=""
	F  S N=$O(^ORD(100.99,1,5,DA,5,N)) Q:'N  S X=$P(^(N,0),U,3) I X]"" S %=$O(^ORD(101,"B",X,0)) D:'% ADDP S:% $P(^ORD(100.99,1,5,DA,5,N,0),U,3)=% S X=N,I=I+1
	S:I $P(^ORD(100.99,1,5,DA,5,0),U,3,4)=X_U_I K N,R,X,Y,I,J
	Q
OR1	N X F  S R=$O(^ORD(100.99,1,5,DA,1,N,1,R)) Q:'R  S X=$P(^(R,0),U) I X]"" S %=$O(^ORD(101,"B",X,0)) D:'% ADDP S:% ^ORD(100.99,1,5,DA,1,N,1,R,0)=% S Y=R,J=J+1
	S:J $P(^ORD(100.99,1,5,DA,1,N,1,0),U,3,4)=Y_U_J
	Q
ADDP	N I,J,N,R,DA,DLAYGO S %=""
	S DIC="^ORD(101,",DIC(0)="LX",DLAYGO=101 D FILE^DICN K DIC Q:Y=-1  S %=+Y Q

IBDEINI5
IBDEINI5	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	K ^UTILITY("DIF",$J) S DIFRDIFI=1 F I=1:1:28 S ^UTILITY("DIF",$J,DIFRDIFI)=$T(IXF+I),DIFRDIFI=DIFRDIFI+1
	Q
IXF	;;IB ENCOUNTER FORM IMP/EXP^IBDE
	;;358I;IMP/EXP ENCOUNTER FORM;^IBE(358,;1;y;y;;n;;;y;o;n
	;;
	;;358.1I;IMP/EXP ENCOUNTER FORM BLOCK;^IBE(358.1,;1;y;y;;n;;;y;o;n
	;;
	;;358.2I;IMP/EXP SELECTION LIST;^IBE(358.2,;1;y;n;;n;;;y;o;n
	;;
	;;358.3I;IMP/EXP SELECTION;^IBE(358.3,;1;y;n;;n;;;y;o;n
	;;
	;;358.4I;IMP/EXP SELECTION GROUP;^IBE(358.4,;1;y;n;;n;;;y;o;n
	;;
	;;358.5I;IMP/EXP DATA FIELD;^IBE(358.5,;1;y;y;;n;;;y;o;n
	;;
	;;358.6I;IMP/EXP PACKAGE INTERFACE;^IBE(358.6,;1;y;n;;n;;;y;o;n
	;;
	;;358.7I;IMP/EXP FORM LINE;^IBE(358.7,;1;y;y;;n;;;y;o;n
	;;
	;;358.8;IMP/EXP TEXT AREA;^IBE(358.8,;1;y;n;;n;;;y;o;n
	;;
	;;358.91;IMP/EXP MARKING AREA;^IBE(358.91,;1;y;n;;n;;;y;o;n
	;;
	;;358.93;IMP/EXP MULTIPLE CHOICE FIELD;^IBE(358.93,;1;y;n;;n;;;y;o;n
	;;
	;;358.94;IMP/EXP HAND PRINT FIELD;^IBE(358.94,;1;y;y;;n;;;y;o;n
	;;
	;;358.98I;IMP/EXP AICS DATA QUALIFIERS;^IBD(358.98,;1;y;y;;n;;;y;o;n
	;;
	;;358.99;IMP/EXP AICS DATA ELEMENTS;^IBE(358.99,;1;y;y;;n;;;y;o;n
	;;

IBDEINIS
IBDEINIS	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
PAC(PKG,VER)	; called from package init (DIFROM7 created this routine)
	; PKG = $T(IXF) of the INIT routine.
	; VER is an array that is contained in DIFROM from the INIT routine
	;
	N %,%I,%H,DATE,DIFROM,NOW,PACKAGE,RUN,SERVER,SITE,START,X,XMDUZ,XMSUB,XMTEXT,XMY,Y K ^TMP("IBDEINIS",$J)
	;
	; Site tracking updates only occur if run in a VA production primary domain
	; account.
	I $G(^XMB("NETNAME"))'[".VA.GOV" Q
	Q:'$D(^%ZOSF("UCI"))  Q:'$D(^%ZOSF("PROD"))
	X ^%ZOSF("UCI") I Y'=^%ZOSF("PROD") Q
	;
	S SERVER="S.A5CSTS@FORUM.VA.GOV"
	S PACKAGE=$P($P(PKG,";",3),U)
	S SITE=$G(^XMB("NETNAME"))
	S START=$P($G(^DIC(9.4,VER(0),"PRE")),U,2) I '$L(START) S START="Unknown"
	D  ; check if ok to use kernel functions
	.S X="XLFDT" X ^%ZOSF("TEST") I $T D  Q
	..S NOW=$$HTFM^XLFDT($H)
	..S RUN="Unknown" I START S RUN=$$FMDIFF^XLFDT(NOW,START,3)
	..S START=$$FMTE^XLFDT(START)
	..S DATE=NOW\1
	..S NOW=$$FMTE^XLFDT(NOW)
	.D NOW^%DTC S NOW=%,DATE=X
	.S RUN="" ; don't bother to compute
	.S Y=START D DD^%DT S START=Y
	.S Y=NOW D DD^%DT S NOW=Y
	;
	; Message for server
	S ^TMP("IBDEINIS",$J,1,0)="PACKAGE INSTALL"
	S ^TMP("IBDEINIS",$J,2,0)="SITE: "_SITE
	S ^TMP("IBDEINIS",$J,3,0)="PACKAGE: "_PACKAGE
	S ^TMP("IBDEINIS",$J,4,0)="VERSION: "_VER
	S ^TMP("IBDEINIS",$J,5,0)="Start time: "_START
	S ^TMP("IBDEINIS",$J,6,0)="Completion time: "_NOW
	S ^TMP("IBDEINIS",$J,7,0)="Run time: "_RUN
	S ^TMP("IBDEINIS",$J,8,0)="DATE: "_DATE
	;
	; Data is sent to server on FORUM - S.A5CSTS
	S XMY(SERVER)="",XMDUZ=.5,XMTEXT="^TMP(""IBDEINIS"",$J,",XMSUB=PACKAGE_" VERSION "_VER_" INSTALLATION"
	D ^XMD
	K ^TMP("IBDEINIS",$J)
	Q

IBDEINIT
IBDEINIT	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	K DIF,DIFQ,DIFQR,DIFQN,DIK,DDF,DDT,DTO,D0,DLAYGO,DIC,DIDUZ,DIR,DA,DIFROM,DFR,DTN,DIX,DZ,DIRUT,DTOUT,DUOUT
	S DIOVRD=1,U="^",DIFQ=0,DIFROM="2.1" W !,"This version (#2.1) of 'IBDEINIT' was created on 03-APR-1996"
	W !?9,"(at ALBANY CAMPUS DEVELOPMENT, by VA FileMan V.21.0)",!
	I $D(^DD("VERSION")),^("VERSION")'<21 G GO
	;W !,"FIRST, I'LL FRESHEN UP YOUR VA FILEMAN...." D N^DINIT
	I ^DD("VERSION")<21 W !,"but I need version 21 of the VA FileMan!" G Q
GO	;
	W !,"I HAVE TO RUN AN ENVIRONMENT CHECK ROUTINE." D PKG,^IBDEPRE Q:'$D(DIFQ)  D NOW^%DTC S DIFROM("PRE")=%
EN	; ENTER HERE TO BYPASS THE PRE-INIT PROGRAM
	S DIFQ=0 K DIRUT,DTOUT,DUOUT
	F DIFRIR=1:1:1 S DIFRRTN="^IBDEINI"_$E("5",DIFRIR) D @DIFRRTN
	W:1 !,"I AM GOING TO SET UP THE FOLLOWING FILES:" F I=1:2:28 S DIF(I)=^UTILITY("DIF",$J,I) D 1 G Q:DIFQ!$D(DIRUT) K DIF(I)
	S DIFROM="2.1" D PKG:'$D(DIFROM(0)),^IBDEINI1 G Q:'$D(DIFQ) S DIK(0)="AB"
	F DIF=1:2:28 S %=^UTILITY("DIF",$J,DIF),DIK=$P(%,";",5),N=$P(%,";",3),D=$P(%,";",4)_U_N D D K DIFQ(N)
	K DIFQR D ^IBDEINI2,^IBDEINI3
	L  S DUZ=DIDUZ W:1 !,"NO"_$P("TE THAT FILE",U,DSEC)_" SECURITY-CODE PROTECTION HAS BEEN MADE"
	D ^IBDEPT,NOW^%DTC S DIFROM("INIT")=%
	I DIFROM F DIF=1:2:28 S %=^UTILITY("DIF",$J,DIF),N=+$P(%,";",3) I N,$P(%,";",8)="y" S ^DD(N,0,"VR")=DIFROM
	I DIFROM(0)>0 F %="PRE","INI","INIT" S:$D(DIFROM(%)) $P(^DIC(9.4,DIFROM(0),%),U,2)=DIFROM(%)
	I $G(DIFQN) S $P(^(0),U,3,4)=$P(DIFQN,U,2)_U_($P(^DIC(0),U,4)+DIFQN) K DIFQN
	I DIFROM,$D(^%ZTSK) S X="IBDEINIS" X ^%ZOSF("TEST") D:$T PAC^IBDEINIS($T(IXF),.DIFROM)
	S:DIFROM(0)>0 ^DIC(9.4,DIFROM(0),"VERSION")=DIFROM G Q^DIFROM0
D	S:$D(^DIC(+N,0))[0 ^(0)=D S X=$D(@(DIK_"0)")),^(0)=D_U_$S(X#2:$P(^(0),U,3,9),1:U)
	S DIFQR=DIFQR(+N) I ^DD("VERSION")>17.5,$D(^DD(+N,0,"DIK"))#2 S X=^("DIK"),Y=+N,DMAX=^DD("ROU") D EN^DIKZ
	I DIFQR D IXALL^DIK:$O(@(DIK_"0)")) W "."
	Q
R	G REP^IBDEINI2
	;
1	S N=+$P(DIF(I),";",3),DIF=$P(DIF(I),";",4),S=$P(DIF(I),";",5)
	W !!?3,N,?13,DIF,$P("  (Partial Definition)",U,$P(DIF(I),";",6)),$P("  (including data)",U,$P(DIF(I),";",13)="y") S Z=$S($D(^DIC(N,0))#2:^(0),1:"")
	I Z="" S DIFQ(N)=1,DIFQN=$G(DIFQN)+1_U_N G S
	I $L($P(Z,DIF)) W $C(7),!,"*BUT YOU ALREADY HAVE '",$P(Z,U),"' AS FILE #",N,"!" D R Q:DIFQ  G S:$D(DIFKEP(N)),1
	S DIFQ(N)=$P(DIF(I),";",7)'="n"
	I $L(Z) W $C(7),!,"Note:  You already have the '",$P(Z,U),"' File." S DIFQ(0)=1
	S %=$E(^UTILITY("DIF",$J,I+1),4,245) I %]"" X % S DIFQ(N)=$T W:'$T !,"Screen on this Data Dictionary did not pass--DD will not be installed!" G S
	I $L(Z),$P(DIF(I),";",10)="y" S DIR("A")="Shall I write over the existing Data Definition",DIR("??")="^D DD^DIFROMH1",DIR("B")="YES",DIR(0)="Y" D ^DIR S DIFQ(N)=Y
S	S DIFQR(N)=0 Q:$P(DIF(I),";",13)'="y"!$D(DIRUT)
	I $P(DIF(I),";",15)="y",$O(@(S_"0)"))>0 S DIF=$P(DIF(I),";",14)="o",DIR("A")="Want my data "_$P("merged with^to overwrite",U,DIF+1)_" yours",DIR("??")="^D DTA^DIFROMH1",DIR(0)="Y" D ^DIR S DIFQR(N)=$S('Y:Y,1:Y+DIF) Q
	S %=$P(DIF(I),";",14)="o" W !,$C(7),"I will ",$P("MERGE^OVERWRITE",U,%+1)," your data with mine." S DIFQR(N)=%+1
	Q
Q	W $C(7),!!,"NO UPDATING HAS OCCURRED!" G Q^DIFROM0
	;
PKG	S X=$P($T(IXF),";",3),DIC="^DIC(9.4,",DIC(0)="",DIC("S")="I $P(^(0),U,2)="""_$P(X,U,2)_"""",X=$P(X,U) D ^DIC S DIFROM(0)=+Y K DIC
	Q
	;
IXF	;;IB ENCOUNTER FORM IMP/EXP^IBDE;1453

IBDEPRE
IBDEPRE	; ALB/ISC - PREINIT FOR USE BY IMP/EXP UTILITY ;AUG 13, 1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
P	D NOW^%DTC S IBDBDT("IBDE")=$H,DT=$$DT^XLFDT,Y=% W !!,"Initialization Started: " D DT^DIQ
	;
	I +$G(^DD(357.1,0,"VR"))<2.1 W !,"The IBDINIT must be run first." K DIFQ D HELP^IBD21PRE G NO
	;
PRE	W !!
	D USER^IBD21PRE
	Q:'$D(DIFQ)
	;
CHECK	;checks if there is anything in the workspace
	N COUNT,FILE,QUIT
	S (QUIT,COUNT)=0
	F  S FILE=$P($T(FILES+COUNT),";;",2) Q:QUIT!(FILE="")  D  Q:QUIT
	.S COUNT=COUNT+1
	.I $O(@FILE@(0)) D
	..K DIR S DIR(0)="Y",DIR("B")="YES"
	..W !,"Please check your work space from the import/export utility option.",!!,"These INITS require that your work space be clear, currently it is not.",!,"Would you like to clear the work space now?"
	..D ^DIR
	..I $D(DIRUT)!(Y=0) K DIFQ
	..S QUIT=1
	;
	I '$D(DIFQ) W !,"INITIALIZATION ABORTED" K IBDBDT
	K DIR,DIRUT,DUOUT
	Q
	;
NO	I '$D(DIFQ) W !,"INITIALIZATION ABORTED" K IBDBDT
	K DIR,DIRUT,DUOUT
	Q
	;
FILES	;;^IBE(358)
	;;^IBE(358.1)

IBDEPT
IBDEPT	;ALB/CJM - ENCOUNTER FORM - installation routine for AICS 2.1 ;OCT 5, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	D AUTOINS^IBDE4 ; auto install took kit forms and tool kit blocks
	D DONE
	Q
DONE	; Installation has completed - display final messages
	;
	D NOW^%DTC S IBDEDT("IBEP")=$H
	S IBDINIT="IBDE" D ALLDONE^IBD21PT
	D MSGE^IBD21PT
	Q

IBDF10
IBDF10	;ALB/CJM - ENCOUNTER FORM - (shift block contents) ;APRIL 22,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
SHIFT(TYPE)	;shifts contents of blocks - prompts user for what to shift (unless TYPE is defined), and how much to shift
	;assumes IBBLK is defined unless TYPE="B"
	N AMOUNT,WAY,QUIT,TOP,BOTTOM,LEFT,RIGHT,HT,WIDTH,MAX
	S QUIT=0,VALMBCK="R"
	I '$D(TYPE) N TYPE D TYPE
	I $D(TYPE),"EDSLTMH"[TYPE S HT=IBBLK("H"),WIDTH=IBBLK("W")
	I $G(TYPE)="B" S HT=IBFORM("HT"),WIDTH=IBFORM("WIDTH")
	D:'QUIT DIRECTN
	D RESET^VALM4:VALMCC,REFRESH^VALM
	D:'QUIT RANGE(HT,WIDTH)
	S:'QUIT MAX=$S(WAY="U":$S(BOTTOM:BOTTOM,1:HT),WAY="D":HT-TOP-1,WAY="L":$S(RIGHT:RIGHT,1:WIDTH),1:WIDTH-LEFT-1)
	S:'QUIT MAX=$$MAX^IBDF10C(TYPE,WAY,MAX,TOP,BOTTOM,LEFT,RIGHT)
	D:'QUIT AMOUNT(MAX)
	D:('QUIT)&($G(AMOUNT)>0) @TYPE
	S VALMBCK="R"
	Q
TYPE	;asks user for what should be shifted
	D TYPEHELP
	K DIR S DIR(0)="SB^E:Everything;D:Display Fields;S:Selection Lists;L:Lines;T:Text Areas;M:Multiple Choice Fields;H:Hand Print Fields",DIR("A")="What should be shifted?",DIR("B")="Everything"
	S DIR("?")="^D TYPEHELP^IBDF10"
	D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
	S TYPE=Y
	Q
TYPEHELP	;help for TYPE
	W !!,"You can choose what should be shifted. Select one of the following:",!," [E]verything, [D]isplay fields, [S]election lists, [L]ines, [T]ext areas,",!," [M]ultiple choice fields, [H]and print fields"
	Q
DIRECTN	;asks user for direction of shift - returns WAY
	S DIR(0)="SB^U:UP;D:DOWN;L:LEFT;R:RIGHT",DIR("A")="Shift UP, DOWN, LEFT, or RIGHT?",DIR("B")="DOWN",DIR("?")="Which direction should the shift be in?"
	D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
	S WAY=Y
	Q
AMOUNT(MAX)	;now ask user how far to shift - returns AMOUNT
	;MAX is the maxium shift allowed
	S DIR(0)="N^0:"_MAX_":0"
	S DIR("A")="Shift how far "_$S(WAY="U":"up in rows",WAY="D":"down in rows",WAY="R":"to the right in columns",1:"to the left in columns")_"?"
	D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
	S AMOUNT=Y
	Q
RANGE(HT,WIDTH)	;asks the user for the range - returns TOP,BOTTOM,LEFT,RIGHT
	N I
	K DIR
	;get TOP
	S DIR("A")="What is the top-most row to shift?"
	S DIR(0)="N^1:"_HT_":0",DIR("B")=1
	D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
	S TOP=Y
	;now get BOTTOM
	S DIR("A")="What is the bottom-most row to shift? (optional)",DIR("?",1)="Enter the lowest row that the shift should effect.",DIR("?")="Enter nothing to shift everything below the top-most row that you specified."
	K DIR("B")
	S DIR(0)="NO^"_TOP_":"_HT_":0"
	D ^DIR K DIR I (Y=-1)!$D(DTOUT)!$D(DUOUT) S QUIT=1 Q
	S BOTTOM=Y
	;get LEFT
	S DIR("A")="What is the left-most column to shift?"
	S DIR(0)="N^1:"_WIDTH_":0",DIR("B")=1
	D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
	S LEFT=Y
	;now get RIGHT
	S DIR("A")="What is the right-most column to shift? (optional)"
	S DIR("?",1)="Enter the right-most column that the shift should effect.",DIR("?")="Enter nothing to shift everything to the right of the left-most column that you specified."
	K DIR("B")
	S DIR(0)="NO^"_LEFT_":"_WIDTH_":0"
	D ^DIR K DIR I (Y=-1)!$D(DTOUT)!$D(DUOUT) S QUIT=1 Q
	S RIGHT=Y
	;now change TOP,BOTTOM,LEFT,RIGHT to their internal values
	;(BOTTOM or RIGHT)="" has special meaning - means shift without limit 
	S TOP=TOP-1,LEFT=LEFT-1
	S:BOTTOM>0 BOTTOM=BOTTOM-1
	S:RIGHT>0 RIGHT=RIGHT-1
	Q
E	;shift everything
	D FLDS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	D LSTS^IBDF10B(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	D TXT^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	D LINES^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	D MFLDS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	D HFLDS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	Q
D	;shift data fields
	D FLDS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	Q
M	;shift multiple choice fields
	D MFLDS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	Q
H	;shift hand print fields
	D HFLDS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	Q
S	;shift selection lists
	D LSTS^IBDF10B(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	Q
T	;shift text areas
	D TXT^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	Q
L	;shift lines
	D LINES^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	Q
B	;shift blocks
	D BLOCKS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	Q

IBDF10A
IBDF10A	;ALB/CJM - ENCOUNTER FORM - (shifting data fields,lines,text areas,blocks);3/29/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
FLDS(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)	;shifts all of the data fields in IBBLK falling within the rectangle defined by TOP,BOTTOM,LEFT,RIGHT by AMOUNT
	;WAY="D" for down, "U" for up, "L" for left, "R" for right
	N SUB,NODE,IBX,IBY,FLD,PIECE,POS,VERT,SIZE,BLKSIZE
	S VERT=$S("UD"[WAY:1,1:0)
	S BLKSIZE=$S(VERT:IBBLK("H"),1:IBBLK("W"))
	;shifts to the left or up are negative
	S:"UL"[WAY AMOUNT=AMOUNT*(-1)
	S FLD="" F  S FLD=$O(^IBE(357.5,"C",IBBLK,FLD)) Q:'FLD  D
	.S PIECE=$S(VERT:11,1:10)
	.S NODE=$G(^IBE(357.5,FLD,0)) Q:NODE=""
	.S IBX=$P(NODE,"^",10),IBY=$P(NODE,"^",11),POS=$P(NODE,"^",PIECE) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	..S SIZE=$S(VERT:$P(NODE,"^",12),1:$S($L($P(NODE,"^",6))>$P(NODE,"^",14):$L($P(NODE,"^",6)),1:$P(NODE,"^",14)))
	..S $P(^IBE(357.5,FLD,0),"^",PIECE)=$S(("LU"[WAY)&(POS+AMOUNT<0):0,("RD"[WAY)&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
	.S SUB=0 F  S SUB=$O(^IBE(357.5,FLD,2,SUB)) Q:'SUB  D
	..S NODE=$G(^IBE(357.5,FLD,2,SUB,0)) Q:NODE=""
	..S PIECE=$S(VERT:5,1:4) S POS=$P(NODE,"^",PIECE),IBX=$P(NODE,"^",4),IBY=$P(NODE,"^",5) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	...S SIZE=$S(VERT:1,1:$L($P(NODE,"^",1)))
	...S $P(^IBE(357.5,FLD,2,SUB,0),"^",PIECE)=$S(("LU"[WAY)&(POS+AMOUNT<0):0,("RD"[WAY)&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
	..S PIECE=$S(VERT:6,1:7) S POS=$P(NODE,"^",PIECE),IBX=$P(NODE,"^",7),IBY=$P(NODE,"^",6) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	...S SIZE=$S(VERT:1,1:$P(NODE,"^",8))
	...S $P(^IBE(357.5,FLD,2,SUB,0),"^",PIECE)=$S("LU"[WAY&(POS+AMOUNT<0):0,"RD"[WAY&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
	Q
MFLDS(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)	;shifts the multiple choice fields in IBBLK falling within the rectangle defined by TOP,BOTTOM,LEFT,RIGHT by AMOUNT
	;WAY="D" for down, "U" for up, "L" for left, "R" for right
	N SUB,NODE,IBX,IBY,FLD,PIECE,POS,VERT,SIZE,BLKSIZE
	S VERT=$S("UD"[WAY:1,1:0)
	S BLKSIZE=$S(VERT:IBBLK("H"),1:IBBLK("W"))
	;shifts to the left or up are negative
	S:"UL"[WAY AMOUNT=AMOUNT*(-1)
	S FLD="" F  S FLD=$O(^IBE(357.93,"C",IBBLK,FLD)) Q:'FLD  D
	.S PIECE=$S(VERT:4,1:3)
	.S NODE=$G(^IBE(357.93,FLD,0)) Q:NODE=""
	.I $P(NODE,"^",2)]"" D
	..S IBX=$P(NODE,"^",3),IBY=$P(NODE,"^",4),POS=$P(NODE,"^",PIECE) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	...S SIZE=$S(VERT:1,1:$L($P(NODE,"^",2)))
	...S $P(^IBE(357.93,FLD,0),"^",PIECE)=$S(("LU"[WAY)&(POS+AMOUNT<0):0,("RD"[WAY)&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
	.S SUB=0 F  S SUB=$O(^IBE(357.93,FLD,1,SUB)) Q:'SUB  D
	..S NODE=$G(^IBE(357.93,FLD,1,SUB,0)) Q:NODE=""
	..S PIECE=$S(VERT:3,1:2) S POS=$P(NODE,"^",PIECE),IBX=$P(NODE,"^",2),IBY=$P(NODE,"^",3) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	...S SIZE=$S(VERT:1,1:$L($P(NODE,"^",1)))
	...S $P(^IBE(357.93,FLD,1,SUB,0),"^",PIECE)=$S(("LU"[WAY)&(POS+AMOUNT<0):0,("RD"[WAY)&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
	..S PIECE=$S(VERT:7,1:6) S POS=$P(NODE,"^",PIECE),IBX=$P(NODE,"^",6),IBY=$P(NODE,"^",7) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	...S SIZE=$S(VERT:1,1:3)
	...S $P(^IBE(357.93,FLD,1,SUB,0),"^",PIECE)=$S("LU"[WAY&(POS+AMOUNT<0):0,"RD"[WAY&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
	Q
	;
HFLDS(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)	;shifts the hand print fields in IBBLK falling within the rectangle defined by TOP,BOTTOM,LEFT,RIGHT by AMOUNT
	;WAY="D" for down, "U" for up, "L" for left, "R" for right
	N SUB,NODE,IBX,IBY,FLD,PIECE,POS,VERT,SIZE,BLKSIZE
	S VERT=$S("UD"[WAY:1,1:0)
	S BLKSIZE=$S(VERT:IBBLK("H"),1:IBBLK("W"))
	;shifts to the left or up are negative
	S:"UL"[WAY AMOUNT=AMOUNT*(-1)
	S FLD="" F  S FLD=$O(^IBE(359.94,"C",IBBLK,FLD)) Q:'FLD  D
	.S PIECE=$S(VERT:4,1:3)
	.S NODE=$G(^IBE(359.94,FLD,0)) Q:NODE=""
	.I $P(NODE,"^",2)]"" D
	..S IBX=$P(NODE,"^",3),IBY=$P(NODE,"^",4),POS=$P(NODE,"^",PIECE) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	...S SIZE=$S(VERT:1,1:$L($P(NODE,"^",2)))
	...S $P(^IBE(359.94,FLD,0),"^",PIECE)=$S(("LU"[WAY)&(POS+AMOUNT<0):0,("RD"[WAY)&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
	Q
	;
LINES(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)	;shifts all of the lines in IBBLK falling within the range START->END by AMOUNT - if END="" range extends all the way out
	;WAY="D" for down, "U" for up, "L" for left, "R" for right
	N SUB,NODE,POS,LINE,PIECE,VERT,IBX,IBY,SIZE,BLKSIZE
	S VERT=$S("UD"[WAY:1,1:0)
	S BLKSIZE=$S(VERT:IBBLK("H"),1:IBBLK("W"))
	;shifts to the left or up are negative
	S:"UL"[WAY AMOUNT=AMOUNT*(-1)
	S LINE="" F  S LINE=$O(^IBE(357.7,"C",IBBLK,LINE)) Q:'LINE  D
	.S NODE=$G(^IBE(357.7,LINE,0)) Q:NODE=""
	.S PIECE=$S(VERT:3,1:2)
	.S POS=$P(NODE,"^",PIECE),IBY=$P(NODE,"^",3),IBX=$P(NODE,"^",2) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	.S SIZE=$S(((($P(NODE,"^",4)="V")&VERT)!(($P(NODE,"^",4)="H")&'VERT)):$P(NODE,"^",5),1:1)
	.S $P(^IBE(357.7,LINE,0),"^",PIECE)=$S("LU"[WAY&(POS+AMOUNT<0):0,"RD"[WAY&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
	Q
TXT(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)	;shifts all of the text areas in IBBLK falling within the range START->END by AMOUNT - if END="" range extends all the way out
	;WAY="D" for down, "U" for up, "L" for left, "R" for right
	N SUB,NODE,POS,TXT,PIECE,VERT,IBX,IBY,BLKSIZE,SIZE
	S VERT=$S("UD"[WAY:1,1:0)
	S BLKSIZE=$S(VERT:IBBLK("H"),1:IBBLK("W"))
	;shifts to the left or up are negative
	S:"UL"[WAY AMOUNT=AMOUNT*(-1)
	S TXT="" F  S TXT=$O(^IBE(357.8,"C",IBBLK,TXT)) Q:'TXT  D
	.S NODE=$G(^IBE(357.8,TXT,0)) Q:NODE=""
	.S PIECE=$S(VERT:4,1:3)
	.S POS=$P(NODE,"^",PIECE),IBY=$P(NODE,"^",4),IBX=$P(NODE,"^",3) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	.S SIZE=$S(VERT:$P(NODE,"^",6),1:$P(NODE,"^",5))
	.S $P(^IBE(357.8,TXT,0),"^",PIECE)=$S("LU"[WAY&(POS+AMOUNT<0):0,"RD"[WAY&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
	Q
	;
INRANGE(X,Y,TOP,BOTTOM,LEFT,RIGHT)	;
	;determines if (X,Y) is in the rectangle defined by TOP,BOTTOM,LEFT,RIGHT - returns 1 if yes,0 if no
	I (X'<LEFT),((RIGHT="")!(X'>RIGHT)),(Y'<TOP),((BOTTOM="")!(Y'>BOTTOM)) Q 1
	Q 0
BLOCKS(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)	;shifts blocks whose top left-hand corner is within the rectangular region defined by TOP,BOTTOM,LEFT,RIGHT
	N SUB,NODE,POS,BLOCK,PIECE,VERT,IBX,IBY,BLKSIZE,FORMSIZE,NAME
	S VERT=$S("UD"[WAY:1,1:0)
	;shifts to the left or up are negative
	S:"UL"[WAY AMOUNT=AMOUNT*(-1)
	S BLOCK="" F  S BLOCK=$O(^IBE(357.1,"C",IBFORM,BLOCK)) Q:'BLOCK  D
	.S NODE=$G(^IBE(357.1,BLOCK,0)) Q:NODE=""
	.S NAME=$P(NODE,"^")
	.S PIECE=$S(VERT:4,1:5)
	.S BLKSIZE=$S(VERT:$P(NODE,"^",7),1:$P(NODE,"^",6))
	.S FORMSIZE=$S(VERT:IBFORM("HT"),1:IBFORM("WIDTH"))
	.S POS=$P(NODE,"^",PIECE),IBY=$P(NODE,"^",4),IBX=$P(NODE,"^",5)
	.I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	..S $P(^IBE(357.1,BLOCK,0),"^",PIECE)=$S(("LU"[WAY)&(POS+AMOUNT<0):0,("DR"[WAY)&((POS+AMOUNT+BLKSIZE)>FORMSIZE):FORMSIZE-BLKSIZE,1:POS+AMOUNT)
	Q

IBDF10B
IBDF10B	;ALB/CJM - ENCOUNTER FORM - (shifting selection lists);3/29/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
LSTS(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)	;shifts all of the selection lists in IBBLK falling within the range START->END by AMOUNT - if END="" range extends all the way out
	;WAY="D" for down, "U" for up, "L" for left, "R" for right
	N SUB,NODE,POS,LIST,PIECE,VERT,IBX,IBY,COL
	S VERT=$S("UD"[WAY:1,1:0)
	;shifts to the left or up are negative
	S:"UL"[WAY AMOUNT=AMOUNT*(-1)
	;must make sure there is at least one column defined with the row and column specified
	S LIST="" F  S LIST=$O(^IBE(357.2,"C",IBBLK,LIST)) Q:'LIST  D
	.S COL=$O(^IBE(357.2,LIST,1,"B","")) I COL S SUB=$O(^IBE(357.2,LIST,1,"B",COL,0))
	.S:'$G(SUB) SUB=$$ADDCOL(LIST) ;if there is no column then one must be added, otherwise positioning works through defaults
	.Q:'SUB
	.S NODE=$G(^IBE(357.2,LIST,1,SUB,0))
	.I "DU"[WAY S POS=$P(NODE,"^",2) I POS="" S POS=$S(IBBLK("BOX")=1:1,1:0),POS=POS+$S(IBBLK("HDR")="":0,1:2) S $P(^IBE(357.2,LIST,1,SUB,0),"^",2)=POS
	.I "RL"[WAY S POS=$P(NODE,"^",3) I POS="" S POS=0,$P(^IBE(357.2,LIST,1,SUB,0),"^",3)=POS
	.;now loop through all of the columns, shifting the position of each
	.S SUB=0 F  S SUB=$O(^IBE(357.2,LIST,1,SUB)) Q:'SUB  D
	..S NODE=$G(^IBE(357.2,LIST,1,SUB,0)) Q:NODE=""
	..S PIECE=$S(VERT:2,1:3),POS=$P(NODE,"^",PIECE),IBY=+$P(NODE,"^",2),IBX=+$P(NODE,"^",3) I POS=+POS,$$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) S $P(^IBE(357.2,LIST,1,SUB,0),"^",PIECE)=$S(POS+AMOUNT<0:0,1:POS+AMOUNT)
	Q
ADDCOL(LIST)	;adds a column to the selection list, which has none
	S ^IBE(357.2,LIST,1,0)="^357.21I^1^1",^(1,0)="1^^^"
	K DIK,DA S DIK="^IBE(357.2,"_LIST_",1,",DA(1)=LIST,DA=1 D IX1^DIK K DIK,DA
	Q 1

IBDF10C
IBDF10C	;ALB/CJM - ENCOUNTER FORM - (shift block contents - continued) ;APRIL 22,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
MAX(TYPE,WAY,MAX,TOP,BOTTOM,LEFT,RIGHT)	;returns the maximum allowable shift
	;
	N VERT,AREASIZE,IBY,IBX,SIZE,NODE
	S VERT=$S("UD"[WAY:1,1:0)
	S AREASIZE=$S(VERT:$S(TYPE="B":IBFORM("HT"),1:IBBLK("H")),1:$S(TYPE="B":IBFORM("WIDTH"),1:IBBLK("W")))
	D @TYPE
	I TYPE'="B",IBBLK("BOX")=1 S MAX=MAX-1
	S:MAX<0 MAX=0
	Q MAX
E	;
	D D
	D S
	D T
	D L
	D M
	D H
	Q
D	;
	N SUB,FLD
	S FLD="" F  S FLD=$O(^IBE(357.5,"C",IBBLK,FLD)) Q:'FLD  D
	.S NODE=$G(^IBE(357.5,FLD,0)) Q:NODE=""
	.S IBY=$P(NODE,"^",11),IBX=$P(NODE,"^",10) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	..S SIZE=$S(VERT:$P(NODE,"^",12),1:$S($L($P(NODE,"^",6))>$P(NODE,"^",14):$L($P(NODE,"^",6)),1:$P(NODE,"^",14)))
	..D COMPARE
	.S SUB=0 F  S SUB=$O(^IBE(357.5,FLD,2,SUB)) Q:'SUB  D
	..S NODE=$G(^IBE(357.5,FLD,2,SUB,0)) Q:NODE=""
	..S IBX=$P(NODE,"^",4),IBY=$P(NODE,"^",5) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	...S SIZE=$S(VERT:1,1:$L($P(NODE,"^",1)))
	...D COMPARE
	..S IBX=$P(NODE,"^",7),IBY=$P(NODE,"^",6) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	...S SIZE=$S(VERT:1,1:$P(NODE,"^",8))
	...D COMPARE
	Q
	;
M	;shift multiple choice field
	N SUB,FLD
	S FLD="" F  S FLD=$O(^IBE(357.93,"C",IBBLK,FLD)) Q:'FLD  D
	.S NODE=$G(^IBE(357.93,FLD,0)) Q:NODE=""
	.S IBY=$P(NODE,"^",4),IBX=$P(NODE,"^",3) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	..S SIZE=$S(VERT:1,1:$L($P(NODE,"^",2)))
	..D COMPARE
	.S SUB=0 F  S SUB=$O(^IBE(357.93,FLD,1,SUB)) Q:'SUB  D
	..S NODE=$G(^IBE(357.93,FLD,1,SUB,0)) Q:NODE=""
	..S IBX=$P(NODE,"^",2),IBY=$P(NODE,"^",3) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	...S SIZE=$S(VERT:1,1:$L($P(NODE,"^",1)))
	...D COMPARE
	..S IBX=$P(NODE,"^",6),IBY=$P(NODE,"^",7) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	...S SIZE=$S(VERT:1,1:3)
	...D COMPARE
	Q
	;
H	;shift hand print fields
	N SUB,FLD
	S FLD="" F  S FLD=$O(^IBE(359.94,"C",IBBLK,FLD)) Q:'FLD  D
	.S NODE=$G(^IBE(359.94,FLD,0)) Q:NODE=""
	.S IBY=$P(NODE,"^",4),IBX=$P(NODE,"^",3) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	..I VERT S SIZE=2
	..I 'VERT S SIZE=$L($P(NODE,"^",2))+1 S NODE=$G(^IBE(359.1,$P(NODE,"^",10),0)) S SIZE=SIZE+($P(NODE,"^",6)*$S(IBFORM("WIDTH")>96:4,1:3)) I $L($P(NODE,"^",11)) S SIZE=SIZE+(2*$L($P(NODE,"^",11)))
	..D COMPARE
	Q
	;
S	;
	;just let the user do what he wants - lists automatically resize themselves to fit the block
	Q
T	;
	N TXT
	S TXT="" F  S TXT=$O(^IBE(357.8,"C",IBBLK,TXT)) Q:'TXT  D
	.S NODE=$G(^IBE(357.8,TXT,0)) Q:NODE=""
	.S IBY=$P(NODE,"^",4),IBX=$P(NODE,"^",3) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	..S SIZE=$S(VERT:$P(NODE,"^",6),1:$P(NODE,"^",5))
	..D COMPARE
	Q
L	;
	N LINE
	S LINE="" F  S LINE=$O(^IBE(357.7,"C",IBBLK,LINE)) Q:'LINE  D
	.S NODE=$G(^IBE(357.7,LINE,0)) Q:NODE=""
	.S IBY=$P(NODE,"^",3),IBX=$P(NODE,"^",2) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
	..S SIZE=$S(((($P(NODE,"^",4)="V")&VERT)!(($P(NODE,"^",4)="H")&'VERT)):$P(NODE,"^",5),1:1)
	..D COMPARE
	Q
B	;
	N BLOCK
	S BLOCK="" F  S BLOCK=$O(^IBE(357.1,"C",IBFORM,BLOCK)) Q:'BLOCK  D
	.S NODE=$G(^IBE(357.1,BLOCK,0)) Q:NODE=""
	.S SIZE=$S(VERT:$P(NODE,"^",7),1:$P(NODE,"^",6)),IBX=$P(NODE,"^",5),IBY=$P(NODE,"^",4)
	.I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D COMPARE
	;..I WAY="R" S:(IBFORM("WIDTH")-(IBX+WIDTH))<MAX MAX=(IBFORM("WIDTH")-(IBX+WIDTH)) Q
	;..I WAY="L" S:IBX<MAX MAX=IBX Q
	;..I WAY="D" S:(IBFORM("HT")-(IBY+HT))<MAX MAX=(IBFORM("HT")-(IBY+HT)) Q
	;..I WAY="U" S:IBY<MAX MAX=IBY Q
	Q
COMPARE	;
	I WAY="R" S:(AREASIZE-(IBX+SIZE))<MAX MAX=(AREASIZE-(IBX+SIZE)) Q
	I WAY="L" S:IBX<MAX MAX=IBX Q
	I WAY="D" S:(AREASIZE-(IBY+SIZE))<MAX MAX=(AREASIZE-(IBY+SIZE)) Q
	I WAY="U" S:IBY<MAX MAX=IBY Q
	Q

IBDF11
IBDF11	;ALB/CJM - ENCOUNTER FORM - (print manager setup) ;April 20,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
CLNCSUP	;edit clinic setup for print manager
	N CLINIC
	K DIR S DIR(0)="409.95,.01",DIR("A")="EDIT REPORTS TO PRINT FOR WHICH CLINIC?"
	D ^DIR K DIR
	Q:$D(DIRUT)!(+Y<0)
	S CLINIC=+Y
	K DA S DA=$O(^SD(409.95,"B",CLINIC,"")) I 'DA D
	.K DIC,DO,DD,DINUM S DIC="^SD(409.95,",DIC(0)="",X=CLINIC
	.D FILE^DICN K DIC
	.S DA=$S(+Y<1:0,1:+Y)
	Q:'DA
	K DIE,DR S DIE=409.95
	S DR="[IBDF PRINT MANAGER]" D ^DIE K DIE,DR,DA
	Q
DIVSUP	;edit division setup for print manager
	N DIVISION
	W !!,"You can now select reports that should be printed for the entire division",!
	K DIR S DIR(0)="409.96,.01",DIR("A")="EDIT REPORTS TO PRINT FOR WHICH DIVISION?"
	D ^DIR K DIR
	Q:$D(DIRUT)!(+Y<0)
	S DIVISION=+Y
	K DA S DA=$O(^SD(409.96,"B",DIVISION,"")) I 'DA D
	.K DIC,DO,DD,DINUM S DIC="^SD(409.96,",DIC(0)="",X=DIVISION
	.D FILE^DICN K DIC
	.S DA=$S(+Y<1:0,1:+Y)
	Q:'DA
	K DIE,DR S DIE=409.96
	S DR="[IBDF PRINT MANAGER]" D ^DIE K DIE,DR,DA
	Q
EDITRPRT(HLTHSMRY)	;edit package interface,type=report
	;HLTHSMRY=1 if report type is health summary, 0 otherwise
	N REPORT,IBDELETE,IBNEW,DLAYGO
	S HLTHSMRY=+$G(HLTHSMRY)
	W !!,"You can now edit the "_$S(HLTHSMRY:"Health Summaries",1:"reports")_" available through the print manager.",!
	D:'HLTHSMRY INFO^IBDF11A
	K DIC S DIC=357.6,DIC(0)="AELMQ",DIC("S")="I $P($G(^(0)),U,6)=4,"_$S(HLTHSMRY:"$P($G(^(0)),U,10)",1:"'$P($G(^(0)),U,10)"),DLAYGO=357.6
	S DIC("A")="Select a "_$S(HLTHSMRY:"Health Summary",1:"report")_" defined to the print manager: "
	S:HLTHSMRY DLAYGO=357.6
	D ^DIC K DIC
	Q:+Y<0
	S REPORT=+Y,IBNEW=$P(Y,"^",3)
	S IBDELETE=$S(IBNEW:1,1:0)
	S DA=REPORT
	K DIE,DR S DIE=357.6,DR=$S(HLTHSMRY:"[IBDF EDIT AVAILABLE HLTH SMRY]",1:"[IBDF EDIT AVAILABLE REPORT]"),DIE("NO^")="BACKOUTOK"
	D ^DIE K DIE,DR,DA
	I IBDELETE K DA S DIK="^IBE(357.6,",DA=REPORT D ^DIK K DIK,DA
	Q
CLNCSUP2	;entry point to be called by an action protocol
	D FULL^VALM1
	D CLNCSUP
	S VALMBCK="R"
	Q
DIVSUP2	;entry point to be called by an action protocol
	D FULL^VALM1
	D DIVSUP
	S VALMBCK="R"
	Q

IBDF11A
IBDF11A	;ALB/CJM - ENCOUNTER FORM - (print manager setup - INFORMATION) ;April 20,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
INFO	;N I,LINE,DIR
	F I=0:1 S LINE=$P($T(TEXT+I),";;",2) Q:LINE=""  W !,LINE I $Y>(IOSL-4) S DIR(0)="E" D ^DIR W @IOF Q:'Y
	Q
TEXT	;;Care must be taken when defining reports to the Print Manager. Please
	;;follow these rules:
	;; 
	;;  1) Entry points must involve no user interaction.
	;;  2) The device must not be changed or closed.
	;;  3) Local variables should be the same on exit as on entry.
	;; 
	;;THESE VARIABLES ARE AVAILABLE:
	;;  
	;;  DFN = ien of patient in the PATIENT file
	;;  IBCLINIC = ien of clinic in the HOSPTIAL LOCATION file
	;;  IBAPPT   = appointment date/time in FM format
	;;  
	;;FEATURES OF INTEREST, IN THE ORDER PERFORMED BY THE PRINT MANAGER:
	;;  
	;;  AVAILABLE?: The Print Manager will not print the report unless
	;;  this is set to YES.
	;; 
	;;  REQUIRED VARIABLES: You can define a list of variables that should
	;;  be defined. The Print Manager won't call the entry point unless
	;;  they are defined.
	;; 
	;;  PROTECTED VARIABLES: You can define a list of variables (without 
	;;  subscripts) that should be NEWed.
	;; 
	;;  ENTRY ACTION: Mumps code that should be Xecuted before calling
	;;  the entry point.
	;; 
	;;  EXIT ACTION: Mumps code that should be Xecuted after calling
	;;  the  entry point.
	;; 
	;;EXAMPLE: Supposing the entry point kills DFN. You could do this:
	;;  
	;;   REQUIRED VARIABLE: DFN
	;;   PROTECTED VARIABLE: IBDFN
	;;   ENTRY ACTION: S IBDFN=DFN
	;;   EXIT ACTION: S DFN=IBDFN
	;;  
	;;

IBDF12
IBDF12	;ALB/CJM - ENCOUNTER FORM - ENTRY FOR EDITING TOOLKIT FORMS ;JUN 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;*** NOTE:
	;IBTKFORM=1 while editing a tk form
	;IBTKBLK=0 while editing blocks on a tk form - because they are not tk blocks 
FORMLIST	;
	N IBTKFORM,IBTKBLK,IBDEVICE,IBAPI
	S IBTKFORM=1,IBTKBLK=0
	N IBFASTXT ;set to 1 for fast exit from system
	S IBFASTXT=0
	S IBAPI("INDEX")="D IDXFORMS^IBDF12"
	S IBAPI("SELECT")="D SELECT^IBDF12"
	D DEVICE^IBDFUA(1,.IBDEVICE)
	K XQORS,VALMEVL
	S IBCLINIC=""
	D EN^VALM("IBDF TOOL KIT FORMS")
	Q
ONENTRY	;
	D IDXFORMS
	Q
ONEXIT	;
	D KILL^%ZISS
	K ^TMP("IB",$J),^TMP("IBDF",$J),IBCLINIC,VALMY,IBQUIT,VALMBCK,X,Y,I,DA,D0
	Q
	;
IDXFORMS	;build an array of toolkit forms
	N FORM,NODE
	K @VALMAR
	S VALMCNT=0
	S FORM=0 F  S FORM=$O(^IBE(357,"C",1,FORM)) Q:'FORM  S NODE=$G(^IBE(357,FORM,0)) I +$P(NODE,"^",7),$P(NODE,"^")'="TOOL KIT",$P(NODE,"^")'="GARBAGE" D ENTRY
	Q
ENTRY	;adds an entry to the array
	S VALMCNT=VALMCNT+1,@VALMAR@(VALMCNT,0)=$J(VALMCNT,3)_"  "_$$PADRIGHT^IBDFU($P(NODE,"^",1),30)_"  "_$E($P(NODE,"^",3),1,80)
	S @VALMAR@("IDX",VALMCNT,VALMCNT)=FORM D FLDCTRL^VALM10(VALMCNT) ;set video for ID column
	S @VALMAR@("IDX",VALMCNT,VALMCNT)=FORM_"^"
	Q
HDR	;
	S VALMHDR(1)="TOOLKIT FORMS"
	Q
DELFORM	;allows user to select a form, then deletes it
	N SEL,FORM
	D EN^VALM2($G(XQORNOD(0)),"S")
	S SEL=$O(VALMY("")),FORM=""
	I SEL S FORM=+$G(@VALMAR@("IDX",SEL,SEL))
	I FORM D DELETE^IBDFU2C(FORM,357,1)
	S VALMBCK="R"
	D IDXFORMS
	Q
	;
SELECT	;
	N SEL
	S IBFORM=""
	D EN^VALM2($G(XQORNOD(0)),"S")
	S SEL=$O(VALMY(""))
	I SEL S IBFORM=+$G(@VALMAR@("IDX",SEL,SEL))
	Q

IBDF13
IBDF13	;ALB/CJM - ENCOUNTER FORM - EDITING TOOLKIT BLKS ; 24-JUN-1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
LIST	;displays list of toolkit blocks, then allows editng
	N IBFORM,IBTKFORM,IBTKBLK,IBFASTXT,IOVL,IOHL,IOBRC,IOBLC,IOTRC,IOTLC,IBBLK,BLKLIST,D0,DA,IBDEVICE
	S (IBTKFORM,IBFASTXT,IBBLK)=0,IBTKBLK=1
	S IBFORM("NAME")="LIST OF TOOLKIT BLOCKS",IBFORM("TOOLKIT")=1,IBFORM("COMPILED")=0,IBFORM("HT")=80,IBFORM("WIDTH")=133,IBFORM("PAGE_HT")=80,IBFORM("PAGES")=1,IBFORM("SCAN")=1,IBFORM("SCAN","ICR")=1,IBFORM("SCAN",1)=1
	;
	D DEVICE^IBDFUA(1,.IBDEVICE)
	K XQORS,VALMEVL
	D PRNTPRMS^IBDFU1C(.IBPRINT,0,1,0,0)
	S IBFORM=$$TKFORM^IBDFU2C
	D EN^VALM("IBDF EDIT TOOL KIT BLOCKS") ;list processor displays list of toolkit blocks
	Q
	;
SELECT()	;allows the user to select from the displayed list of TK blocks
	N CHOICE,IBBLK
	S IBBLK=""
	D EN^VALM2($G(XQORNOD(0)),"S")
	S CHOICE=$O(VALMY("")) S:CHOICE IBBLK=$G(@VALMAR@("IDX",CHOICE,CHOICE))
	Q IBBLK
EDITBLK	;allows user to select a blk, then displays it for edit
	;allows user to discard or save changes to the block
	;
	;If IBBLK and IBBLK2 are used to point to two copies of the block, one in the workspace and the other on the form
	;the copy on the form is not edited, the copy in the workspace is
	N IBBLK,IBBLK2,IBTKODR,IBJUNK,IFSAVE
	;N IBMEMARY
	S VALMBCK="R"
	S IBBLK2=""
	S IBBLK=$$SELECT
	I IBBLK D
	.S (IBBLK2,IBTKODR,IBJUNK)=""
	.D COPYBLK^IBDF5B(IBBLK,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" Q  ;sets IBBLK to the work copy, IBBLK2 to the copy actually on the form
	D:IBBLK2 EN^VALM("IBDF FORM BLOCK EDIT")
	I IBBLK,IBBLK2 D
	.S IFSAVE=$$ASKSAVE^IBDF5B
	.I IFSAVE D SAVECOPY^IBDF5B(.IBBLK,.IBBLK2,IBTKODR) S IBBLK=IBBLK2,IBBLK2=""
	.I 'IFSAVE D DLTCOPY^IBDF5B(IBBLK) S IBBLK=IBBLK2,IBBLK2=""
	S IBPRINT("WITH_DATA")=0
	D:'$G(IBFASTXT) IDXBLKS^IBDF7
	Q
DLTBLOCK	;allows user to select a blk, then deletes it
	N IBBLK
	S VALMBCK="R"
	S IBBLK=$$SELECT
	I IBBLK Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.1,IBBLK,0)),"^"))  D DLTBLK^IBDFU3(IBBLK,IBFORM,357.1),IDXBLKS^IBDF7
	Q
CHGORDER	;allows user to select a blk, then change it's order in the toolkit
	N IBBLK
	S VALMBCK="R"
	S IBBLK=$$SELECT
	I IBBLK K DIE,DA S DIE=357.1,DA=IBBLK,DR=".14R" D ^DIE K DIE,DA,DR,DIC
	D IDXBLKS^IBDF7
	Q
NEWBLK	;creates a new toolkit block
	N IBBLK
	S VALMBCK="R"
	S IBBLK=$$CREATE^IBDF5C()
	D:IBBLK IDXBLKS^IBDF7
	Q
COPYBLK	;allows the user to select a block to copy
	N IBBLK,CHOICE,NEWBLK
	S VALMBCK="R"
	D FULL^VALM1
	K DIR S DIR(0)="SO^1:ON THE LIST OF TOOLKIT BLOCKS;2:ON A TOOLKIT FORM;3:ON A FORM NOT IN THE TOOLKIT"
	S DIR("A")="WHERE IS THE BLOCK THAT YOU WANT COPIED?"
	D ^DIR K DIR
	Q:(Y=-1)!$D(DIRUT)
	S CHOICE=Y,IBBLK=""
	D:CHOICE=1 REFRESH^VALM,RESET^VALM4:VALMCC
	S:CHOICE=1 IBBLK=$$SELECT
	S:CHOICE=2 IBBLK=$$SELECT2(1)
	S:CHOICE=3 IBBLK=$$SELECT2(0)
	I IBBLK S NEWBLK=$$COPYBLK^IBDFU2(IBBLK,IBFORM,357.1,357.1,0,0,$$TKORDER()) I NEWBLK D
	.K DIE,DA S DIE=357.1,DA=NEWBLK,DR=".01;.13R;.14R" D ^DIE
	.I '$G(DA) D DLTCNTNT^IBDFU3(NEWBLK,357.1)
	.K DIE,DA,DR,DIC
	.D IDXBLKS^IBDF7
	S VALMBCK="R"
	Q
TKORDER()	;returns an unused number for the list of toolkit blocks
	N NUMBER
	F NUMBER=1:1:10000 Q:'$D(^IBE(357.1,"D",NUMBER))
	Q NUMBER
SELECT2(TK)	;allows the user to select a form, then a block from it
	;TK=0 if form is not to be chosen from the TK
	;TK=1 if the form is to be chosen from the TK
	;TK="" means ask the user whether or not the form is in the TK
	N IBFORM,IBBLK
	S IBBLK=""
	S IBFORM=$$SLCTFORM^IBDFU4($G(TK))
	I IBFORM D
	.W !!,"NOW CHOOSE THE BLOCK TO COPY!",!
	.S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,IOSL)
	Q IBBLK

IBDF14
IBDF14	;ALB/CJM - AICS LIST CLINIC SETUP ; JUL 20,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
SETUPS	; -- Lists forms/reports defined in print manager clinic setup
	;
%	N CLINIC,SETUP,NODE,COND,INTRFACE,PAGE,IBQUIT,IBHDT,X,Y,FORM,REPORT,NAME,VAUTD,DIVIS,NEWDIV,CNT
	W !!,"AICS Print Manager Clinic Setup Report",!!
	S IBQUIT=0
	D DIVIS G:IBQUIT EXIT
	D DEVICE G:IBQUIT EXIT
	D DQ
	G EXIT
	Q
	;
EXIT	; -- exit module
	K ^TMP($J,"IBCS")
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K ZTSK,ZTDESC,ZTSAVE,ZTRTN
	Q
	;
DQ	; -- entry point from task man
	K ^TMP($J,"IBCS")
	S IBQUIT=0,PAGE=1
	S IBHDT=$$HTE^XLFDT($H,1)
	D ^IBDF14A
	Q
	;
DEVICE	; -- ask device
	S %ZIS="MQ" D ^%ZIS I POP S IBQUIT=1 Q
	I $D(IO("Q")) S ZTRTN="DQ^IBDF14",ZTDESC="IBD - Print Manager Clinic Setup",ZTSAVE("VA*")="" D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS S IBQUIT=1 Q
	U IO
	Q
	;
DIVIS	; -- Select Division
	N X,Y S VAUTD=1
	I $P($G(^DG(43,1,"GL")),"^",2) D DIVISION^VAUTOMA S:Y=-1 IBQUIT=1
	I 'VAUTD S X="" F  S X=$O(VAUTD(X)) Q:'X  S ^TMP($J,"IBCS",$P($G(^DG(40.8,+X,0)),"^"))=""
	Q

IBDF14A
IBDF14A	;ALB/CJM - AICS LIST CLINIC SETUP ; JUL 20,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
%	; -- entry point from ibdf14
	I '$D(VAUTD) G ^IBDF14
	D CLINICS,PRINT
	Q
	;
CLINICS	; -- get a list of clinics with setups defined
	S CNT=0
	S CLINIC="" F  S CLINIC=$O(^SD(409.95,"B",CLINIC)) Q:'CLINIC  D
	.S SETUP=$O(^SD(409.95,"B",CLINIC,""))
	.S NAME=$P($G(^SC(CLINIC,0)),"^")
	.S DIVIS=$P($G(^SC(CLINIC,0)),"^",15)
	.S:DIVIS="" DIVIS="Unknown"
	.I 'VAUTD,'$D(VAUTD(DIVIS)) Q  ;if not all divisions or select div.
	.S:+DIVIS DIVIS=$P($G(^DG(40.8,+DIVIS,0)),"^")
	.S:NAME]"" ^TMP($J,"IBCS",DIVIS,NAME)=CLINIC_"^"_SETUP,CNT(DIVIS)=$G(CNT(DIVIS))+1
	Q
	;
PRINT	; -- Main print driver for output
	W:$E(IOST,1,2)="C-" @IOF
	S NEWDIV=0
	S DIVIS="" F  S DIVIS=$O(^TMP($J,"IBCS",DIVIS)) Q:DIVIS=""!IBQUIT  S NEWDIV=1 D
	.S NAME="" F  S NAME=$O(^TMP($J,"IBCS",DIVIS,NAME)) Q:NAME=""!IBQUIT  S CLINIC=+^(NAME),SETUP=$P(^(NAME),"^",2) D  Q:IBQUIT
	..Q:'SETUP
	..I $G(NEWDIV) D HEADER Q:IBQUIT  W !?9,"Division: ",DIVIS,! S NEWDIV=0
	..I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
	..W !,"Clinic: ",NAME I '$$ACLN^IBDFCNOF(CLINIC) W "    (Clinic Currently Inactive)"
	..D FORMS Q:IBQUIT
	..D REPORTS Q:IBQUIT
	..D EXCLUDE Q:IBQUIT
	..W !
	.I 'VAUTD,$G(CNT(DIVIS))<1 D HEADER W !,"No clinics found for division '",DIVIS,"'",!
	I $E(IOST,1,2)="C-",'IBQUIT D PAUSE
	Q
	;
FORMS	; -- prints the clinic's encounter forms to the report
	S NODE=$G(^SD(409.95,SETUP,0))
	I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
	S FORM=$P(NODE,"^",2) I FORM W !,?5,"BASIC DEFAULT FORM:  ..........................",$P($G(^IBE(357,FORM,0)),"^")
	S FORM=$P(NODE,"^",5) I FORM W !,?5,"FORM WITH NO PRE-PRINTED PATIENT DATA:  .......",$P($G(^IBE(357,FORM,0)),"^")
	I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
	S FORM=$P(NODE,"^",3) I FORM W !,?5,"SUPPLEMENTAL FORM - PATIENT WITH PRIOR VISITS: ",$P($G(^IBE(357,FORM,0)),"^")
	I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
	S FORM=$P(NODE,"^",4) I FORM W !,?5,"SUPPLEMENTAL FORM - FIRST TIME PATIENT:  ......",$P($G(^IBE(357,FORM,0)),"^")
	I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
	S FORM=$P(NODE,"^",6) I FORM W !,?5,"SUPPLEMENTAL FORM - ALL PATIENTS:  ............",$P($G(^IBE(357,FORM,0)),"^")
	I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
	S FORM=$P(NODE,"^",8) I FORM W !,?5,"SUPPLEMENTAL FORM - ALL PATIENTS:  ............",$P($G(^IBE(357,FORM,0)),"^")
	I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
	S FORM=$P(NODE,"^",9) I FORM W !,?5,"SUPPLEMENTAL FORM - ALL PATIENTS:  ............",$P($G(^IBE(357,FORM,0)),"^")
	I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
	S FORM=$P(NODE,"^",7) I FORM W !,?5,"RESERVED FOR FUTURE USE:  .....................",$P($G(^IBE(357,FORM,0)),"^")
	Q
	;
REPORTS	; -- prints the clinic's reports
	Q:'$O(^SD(409.95,SETUP,1,0))
	I ($Y>(IOSL-5)) D HEADER Q:IBQUIT
	W !!,?5,"REPORTS",?50,"PRINT CONDITION",!,?5,"=======",?50,"==============="
	S REPORT=0 F  S REPORT=$O(^SD(409.95,SETUP,1,REPORT)) Q:'REPORT  D  Q:IBQUIT
	.I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
	.S NODE=$G(^SD(409.95,SETUP,1,REPORT,0))
	.S INTRFACE=$P(NODE,"^"),COND=$P(NODE,"^",2)
	.I INTRFACE,COND S INTRFACE=$P($G(^IBE(357.6,INTRFACE,0)),"^"),COND=$P($G(^IBE(357.92,COND,0)),"^") W:INTRFACE]"" !,?5,INTRFACE,?50,COND
	Q
	;
EXCLUDE	; -- prints the division reports excluded from clinic
	Q:'$O(^SD(409.95,SETUP,2,0))
	I ($Y>(IOSL-5)) D HEADER Q:IBQUIT
	W !!,?5,"EXCLUDED REPORTS",!,?5,"================"
	S REPORT=0 F  S REPORT=$O(^SD(409.95,SETUP,2,REPORT)) Q:'REPORT  D  Q:IBQUIT
	.I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
	.S NODE=$G(^SD(409.95,SETUP,2,REPORT,0))
	.S INTRFACE=$P(NODE,"^")
	.I INTRFACE S INTRFACE=$P($G(^IBE(357.6,INTRFACE,0)),"^") W:INTRFACE]"" !,?5,INTRFACE
	Q
	;
HEADER	; -- writes the report header
	I $E(IOST,1,2)="C-",$Y>1,PAGE>1 D PAUSE Q:IBQUIT
	I PAGE>1 W @IOF
	W !,"AICS Print Manager Clinic Setup Report",?IOM-32,IBHDT,"   PAGE ",PAGE
	W !,"For Division: ",DIVIS
	W !,$TR($J(" ",IOM)," ","-")
	S PAGE=PAGE+1
	Q
	;
PAUSE	; -- hold screen
	N DIR,X,Y
	F  Q:$Y>(IOSL-2)  W !
	S DIR(0)="E" D ^DIR S IBQUIT=$S(+Y:0,1:1)
	Q

IBDF15
IBDF15	;ALB/CJM - AICS FORM USE BY DIVISION/CLINIC ; JUL 20,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
FORMUSE	; -- prints for each encounter form the clinics using it
	;
%	N FORM,FORMNAM,CLINIC,NODE,PAGE,IBQUIT,IBHDT,X,Y,CLNAME,DIVIS,DIVNAM,NEWDIV,VAUTD
	S IBQUIT=0
	W !!,"AICS List of Clinics Using Encounter Forms",!!
	D DIVIS G:IBQUIT EXIT
	D DEVICE G:IBQUIT EXIT
	D DQ G EXIT
	Q
	;
EXIT	; -- exit routine
	K ^TMP($J,"IBDCS"),^TMP($J,"IBDCN"),^TMP($J,"IBDCL")
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	Q
	;
DQ	; -- entry point from task man
	K ^TMP($J,"IBDCS"),^TMP($J,"IBDCN"),^TMP($J,"IBDCL")
	S IBQUIT=0,PAGE=1
	S IBHDT=$$HTE^XLFDT($H,1)
	D PRINT^IBDF15A
	Q
	;
DEVICE	; -- select device
	S %ZIS="MQ" D ^%ZIS I POP S IBQUIT=1 Q
	I $D(IO("Q")) S ZTRTN="DQ^IBDF15",ZTDESC="REPORT OF ENCOUNTER FORMS USED BY CLINICS",ZTSAVE("VA*")="" D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED") D HOME^%ZIS S IBQUIT=1 Q
	U IO
	Q
	;
DIVIS	; -- SETUP DIVISION
	N X,Y S VAUTD=1
	I $P($G(^DG(43,1,"GL")),"^",2) D DIVISION^VAUTOMA S:Y=-1 IBQUIT=1
	I 'VAUTD S X="" F  S X=$O(VAUTD(X)) Q:'X  S ^TMP($J,"IBDCS",$P($G(^DG(40.8,+X,0)),"^"))=""
	Q

IBDF15A
IBDF15A	;ALB/CJM - AICS FORM USE BY DIVISION/CLINIC ; JUL 20,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	; -- prints for each encounter form the clinics using it
	;
PRINT	; -- Main print driver
	W:$E(IOST,1,2)="C-" @IOF
	S FORMNAM="" F  S FORMNAM=$O(^IBE(357,"B",FORMNAM)) Q:FORMNAM=""  S FORM=$O(^IBE(357,"B",FORMNAM,0)) Q:'FORM  D  Q:IBQUIT
	.Q:$P($G(^IBE(357,FORM,0)),"^",7)  ;exclude toolkit forms
	.D CLINIC(FORM,FORMNAM)
	D LIST
	I $E(IOST,1,2)="C-",'IBQUIT D PAUSE
	Q
	;
CLINIC(FORM,FORMNAM)	;
	; -- finds the list of clinics using FORM
	;    ^TMP($J,"IBDCS",0) is number of clinics found
	;    ^TMP($J,"IBDCS",divname, div pointer, form name, form pointer,
	;                 clinic name)=clinic pointer := is list of clinics
	;
	N CLINIC,SETUP,IDX,CLNAME,DIVIS,DIVNAM,CNT
	F IDX="C","D","E","F","G","H","I","J" D
	.S SETUP="" F  S SETUP=$O(^SD(409.95,IDX,FORM,SETUP)) Q:'SETUP  D
	..S CLINIC=$P($G(^SD(409.95,SETUP,0)),"^",1)
	..Q:'CLINIC
	..S CLNAME=$P($G(^SC(CLINIC,0)),"^",1)
	..Q:CLNAME=""
	..S DIVIS=$P($G(^SC(CLINIC,0)),"^",15)
	..S DIVNAM=$P($G(^DG(40.8,+DIVIS,0)),"^")
	..S:DIVNAM="" DIVNAM="Unknown"
	..S CNT=$G(CNT)+1
	..S ^TMP($J,"IBDCS",DIVNAM,+$G(DIVIS),FORMNAM,FORM,CLNAME)=CLINIC_"^"_IDX
	..S ^TMP($J,"IBDCS",DIVNAM,+$G(DIVIS))=$G(^TMP($J,"IBDCS",DIVNAM,+$G(DIVIS)))+1
	S:$G(CNT)<1 ^TMP($J,"IBDCN",FORMNAM,FORM)="" ;forms not in use
	Q
	;
LIST	; -- lists the clinics using FORM
	N DIVNAM,DIVIS,FORMNAM,FORM,CLNAME,CLINIC,NEWDIV,IBDONE,IDX
	;
	; -- list forms not in use
	S DIVNAM="",NEWDIV=0
	F  S DIVNAM=$O(^TMP($J,"IBDCS",DIVNAM)) Q:DIVNAM=""!(IBQUIT)  S DIVIS=+$O(^TMP($J,"IBDCS",DIVNAM,"")) I VAUTD=1!($D(VAUTD(DIVIS))) D
	.;
	.S NEWDIV=1
	.K IBDONE
	.S FORMNAM=""
	.F  S FORMNAM=$O(^TMP($J,"IBDCS",DIVNAM,DIVIS,FORMNAM)) Q:FORMNAM=""!(IBQUIT)  S FORM=$O(^TMP($J,"IBDCS",DIVNAM,DIVIS,FORMNAM,0)) D
	..;
	..S CLNAME=""
	..F  S CLNAME=$O(^TMP($J,"IBDCS",DIVNAM,DIVIS,FORMNAM,FORM,CLNAME)) Q:CLNAME=""!(IBQUIT)  S CLINIC=+^(CLNAME),IDX=$P(^(CLNAME),"^",2) I '$D(IBDONE(FORM)) W ! D LINEONE,ALL(FORMNAM,CLNAME,DIVNAM)
	;
	; -- list forms not in use
	S FORMNAM="",NEWDIV=1,DIVNAM="FORMS NOT IN USE"
	F  S FORMNAM=$O(^TMP($J,"IBDCN",FORMNAM)) Q:FORMNAM=""!(IBQUIT)  S FORM=$O(^TMP($J,"IBDCN",FORMNAM,0)) D LINETWO
	Q
	;
LINEONE	; -- print on report header, lines, etc.
	;
	I NEWDIV D HEADER Q:IBQUIT  W !,?10,"Division: ",DIVNAM S NEWDIV=0
	I $Y>(IOSL-3) D HEADER Q:IBQUIT
	W !,FORMNAM,?32,$E(CLNAME,1,25),?59,$E(DIVNAM,1,20),?81,$$TYPE(IDX)
	I '$$ACLN^IBDFCNOF(CLINIC) W ?100,"  (Clinic Currently Inactive)"
	S IBDONE(FORM)=""
	Q
	;
LINETWO	; -- print lines for forms not in use
	I NEWDIV D HEADER Q:IBQUIT  S NEWDIV=0
	I $Y>(IOSL-3) D HEADER Q:IBQUIT
	W !,FORMNAM,?32,"** NOT IN USE **"
	Q
	;
LINETHR	; -- print lines for clinics in other divisions
	I $Y>(IOSL-3) D HEADER Q:IBQUIT
	W !,?32,CLNAME,?59,DIVNAM,?81,$$TYPE(IDX)
	I '$$ACLN^IBDFCNOF(CLINIC) W ?100,"  (Clinic Currently Inactive)"
	Q
	;
ALL(FORMNAM,CL1,DV1)	;
	; -- find all clinics using for irregardless of division
	;    stored in ^TMP($J,"IBDCS",DIVNAM,DIVIS,FORMNAM,FORM,CLNAME)
	;
	N FORM,CLNAME,DIVNAM,DIVIS
	S DIVNAM=""
	F  S DIVNAM=$O(^TMP($J,"IBDCS",DIVNAM)) Q:DIVNAM=""!(IBQUIT)  S DIVIS=+$O(^TMP($J,"IBDCS",DIVNAM,"")) I VAUTD=1!($D(VAUTD(DIVIS))) D
	.S FORM=+$O(^TMP($J,"IBDCS",DIVNAM,DIVIS,FORMNAM,0))
	.S CLNAME="" F  S CLNAME=$O(^TMP($J,"IBDCS",DIVNAM,DIVIS,FORMNAM,FORM,CLNAME)) Q:CLNAME=""!(IBQUIT)  S CLINIC=+^(CLNAME) D
	..Q:CL1=CLNAME&(DV1=DIVNAM)
	..D LINETHR
	Q
	;
	;S FORM=$O(^TMP($J,"IBDCL",FORMNAM,0))
	;S CLNAME="" F  S CLNAME=$O(^TMP($J,"IBDCL",FORMNAM,FORM,CLNAME)) Q:CLNAME=""!(IBQUIT)  D
	;.S DIVNAM="" F  S DIVNAM=$O(^TMP($J,"IBDCL",FORMNAM,FORM,CLNAME,DIVNAM)) Q:DIVNAM=""!(IBQUIT)  D
	;..Q:CL1=CLNAME&(DV1=DIVNAM)
	;..D LINETHR
	Q
	;
HEADER	; -- writes the report header
	I $E(IOST,1,2)="C-",$Y>1,PAGE>1 D PAUSE Q:IBQUIT
	I PAGE>1 W @IOF
	W !,"List of Encounter Forms and their Use by Clinics",?IOM-30,IBHDT,"   PAGE ",PAGE
	W !,"For Division: ",$G(DIVNAM)
	W !,"FORM NAME",?32,"CLINIC",?59,"DIVISION",?81,"FORM USAGE"
	W !,$TR($J(" ",IOM)," ","-")
	S PAGE=PAGE+1
	Q
	;
PAUSE	; -- hold screen
	N DIR,X,Y
	F  Q:$Y>(IOSL-2)  W !
	S DIR(0)="E" D ^DIR S IBQUIT=$S(+Y:0,1:1)
	Q
	;
TYPE(IDX)	;
	; -- type of form
	;    input cross reference from print Manager Clinic Setups (409.95)
	;    output name of type of form
	;    IDX="C","D","E","F","G","H","I","J"
	;
	N X
	S IDX=$E(IDX,1)
	S X="" I IDX="" G TYPEQ
	S X=$S(IDX="C":"Basic Form",IDX="D":"Supplmntl form - Establshed Pt.",IDX="E":"Supplmntl Form - First Visit",IDX="F":"Form w/o Patient Data",IDX="G":"Supplmntl Form #1",1:"")
	I X="" S X=$S(IDX="H":"Reserved",IDX="I":"Supplmntl Form #2",IDX="J":"Supplmntl Form #3",1:"")
TYPEQ	  Q X

IBDF16
IBDF16	;ALB/CJM - ENCOUNTER FORM - (edit Package Interfaces, Marking Areas) ;Jul 23,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
EDIT	;allows the user to create/edit/delete Package Interaces of type 
	;OUTPUT or SELECTION
	;does not allow Package Interfaces that are part of the toolkit
	N IBTYPE S IBTYPE=""
	W @IOF
	D WARNING,PAUSE^IBDFU5
	W @IOF
	D TYPE
	D:IBTYPE INTRFACE
	Q
TYPE	;asks the user what type of interface he wants to edit
	W !!,"OUTPUT interfaces are used to obtain data from other packages that will be",!,"displayed to DATA FIELDS."
	W !!,"SELECTION interfaces are used to obtain data from other packages that will be",!,"displayed to SELECTION LISTS."
	K DIR S DIR(0)="S^1:OUTPUT;2:SELECTION;"
	S DIR("A")="SELECT THE TYPE OF PACKAGE INTERFACE TO EDIT"
	S DIR("B")=1
	D ^DIR K DIR
	Q:$D(DIRUT)
	Q:'Y
	S IBTYPE=Y+1
	Q
INTRFACE	;edit package interface
	;IBTYPE=3 if type=selection interface
	;IBTYPE=2 if type=output interface
	N REPORT,IBDELETE,IBNEW,INTRFACE,IBACTION,DLAYGO
	I $G(IBTYPE)'=2,$G(IBTYPE)'=3 Q
	S IBDELETE=1
	K DIC S DIC=357.6,DIC(0)="AELMQ",DIC("S")="I $P($G(^(0)),U,6)="_IBTYPE_",'$P($G(^(0)),U,12)"
	S D="E^D^B"
	S DIC("DR")="06////"_IBTYPE
	S DIC("A")="Select a PACKAGE INTERFACE: "
	S DLAYGO=357.6
	D MIX^DIC1 K DIC,D,DA
	Q:+Y<0
	S INTRFACE=+Y,IBNEW=$P(Y,"^",3)
	S IBDELETE=$S(IBNEW:1,1:0)
	S DA=INTRFACE
	K DIE,DR S DIE=357.6,DR="[IBDF EDIT OUTPUT/SELECTION RTN]",DIE("NO^")="BACKOUTOK"
	D ^DIE K DIE,DR,DA
	I IBDELETE K DA S DIK="^IBE(357.6,",DA=INTRFACE D ^DIK K DIK,DA
	Q
LOOKUP	;additional help for the USER LOOKUP field
	W !!,"You can enter a list of words with which to index this interface. You will",!,"then be able to look up this interface by entering any word on the list."
	W !,"Each word should be at least 3 characters long, and words must be separated",!,"by a space.",!
	Q
WARNING	;warns the user to lookup in the technical doc how to write Package Interfaces
	W !!,"You can write your own Package Interfaces to obtain data not available"
	W !,"through the Toolkit.  Before you do so, however, please consult the technical",!,"documentation for the guidelines that must be followed.  In particular, you"
	W !,"must know where the data should be placed and what format must be used.",!
	Q
MARKING	;allows the user to create/edit/delete marking areas not in the toolkit
	N MARK,DLAYGO
	W @IOF,!!!!!
	W "You can create your own MARKING AREAS to supplement those that come with the",!,"toolkit. Marking areas are the areas on a selection list that the user",!,"marks to indicate selections from the list.",!!!!!
	D PAUSE^IBDFU5
	W @IOF
	K DIC S DIC=357.91,DIC(0)="AELMQ",DIC("S")="I '$P($G(^(0)),U,3)"
	;S DIC("A")="Select "_$S(IBTYPE=2:"an output interface",3:"a selection interface")_": "
	S DLAYGO=357.91
	D ^DIC K DIC,D,DA
	Q:+Y<0
	S MARK=+Y,IBNEW=$P(Y,"^",3)
	S IBDELETE=$S(IBNEW:1,1:0)
	S DA=MARK
	K DIE,DR S DIE=357.91,DR="[IBDF EDIT MARKING AREA]",DIE("NO^")="BACKOUTOK"
	D ^DIE K DIE,DR,DA
	I IBDELETE K DA S DIK="^IBE(357.91,",DA=MARK D ^DIK K DIK,DA
	I IBNEW,'IBDELETE W !!,"New marking area created!"
	Q

IBDF17
IBDF17	;A;B/CJM - ENCOUNTER FORM - COPY A CPT CHECK-OFF SHEET INTO A FORM ;24SEP93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;Allows the user to choose a form to copy to, and a CPT check-off sheet
	;to copy from, then creates a new block and copies the CPT codes to it
	;
	N FORM,LIST,BLOCK,SHEET
	W !!,"Select the encounter form you want to copy CPT codes to!",!
	S FORM=$$SLCTFORM^IBDFU4(0)
	Q:'FORM
	D FIND(FORM,.BLOCK,.LIST)
	I 'BLOCK W !,"There is no selection list for CPT codes to copy to!" D PAUSE^IBDFU5 Q
	;
	S SHEET=$$SLCTSHT
	Q:'SHEET
	;
	;must delete the compiled version of the block, since it will be changed
	K ^IBE(357.1,BLOCK,"S"),^("V")
	;
	D COPY(SHEET,LIST)
	Q
	;
COPY(SHEET,LIST)	;copies the CPT codes/headers from the sheet to the list
	;
	N HDR,TYPE,NODE
	;
	;find the subcolumns in LIST to write to
	D SUBCOLS(.LIST) I 'LIST("CODESC")!'LIST("TEXTSC") W !,"The CPT selection list does not contain a subcolumn for the CPT code or text!" D PAUSE^IBDFU5 Q
	;
	S HDR="" F  S HDR=$O(^IBE(350.71,"G",SHEET,HDR)) Q:'HDR  S NODE=$G(^IBE(350.71,HDR,0)),TYPE=$P(NODE,"^",3)  D:TYPE="S" COPYGRP(HDR,.NODE,.LIST)
	Q
	;
COPYGRP(HDR,NODE,LIST)	;copies the header contained in NODE to the selection list (LIST)
	;
	N HEADER,ORDER,GROUP,PROC
	S HEADER=$P(NODE,"^") Q:HEADER=""  S ORDER=$P(NODE,"^",2) Q:'ORDER
	;
	;copy the group
	K DIC,DD,D0,DINUM S DIC="^IBE(357.4,",X=HEADER,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S GROUP=$S(+Y<0:"",1:+Y)
	Q:'GROUP
	S ^IBE(357.4,GROUP,0)=HEADER_"^"_ORDER_"^"_LIST
	K DIK,DA S DIK="^IBE(357.4,",DA=GROUP
	D IX1^DIK K DIK,DA
	;
	;now find all the group's procedures and copy them
	S PROC=0 F  S PROC=$O(^IBE(350.71,"S",HDR,PROC)) Q:'PROC  D:PROC'=HDR COPYPROC(PROC,.LIST,GROUP)
	;
	W "." ;just to let the use know it's doing something
	Q
	;
COPYPROC(PROC,LIST,GROUP)	;copies the procedure contained to the selection list and group
	;
	N NODE,TEXT,ORDER,CODE,SLCTN
	S NODE=$G(^IBE(350.71,PROC,0))
	;
	;find the CPT code
	S CODE=$P(NODE,"^",6)
	Q:'CODE
	S CODE=$P($G(^SD(409.71,CODE,0)),"^")
	Q:'CODE
	S CODE=$P($G(^ICPT(CODE,0)),"^")
	Q:'CODE
	;
	;find the text and order for the proc on the sheet
	S TEXT=$P(NODE,"^") Q:TEXT=""  S ORDER=$P(NODE,"^",2) Q:'ORDER
	;
	;create the selection
	K DIC,DD,D0,DINUM S DIC="^IBE(357.3,",X=CODE,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S SLCTN=$S(+Y<0:"",1:+Y)
	Q:'SLCTN
	;
	;fill in the 0 node
	S ^IBE(357.3,SLCTN,0)=CODE_"^^"_LIST_"^"_GROUP_"^"_ORDER_"^"
	;
	;fill in the SUBCOLUM VALUE multiple with the subcolumn values
	S ^IBE(357.3,SLCTN,1,0)="^357.31IA^2^2"
	S ^IBE(357.3,SLCTN,1,2,0)=LIST("TEXTSC")_"^"_TEXT
	S ^IBE(357.3,SLCTN,1,1,0)=LIST("CODESC")_"^"_CODE
	K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN
	D IX1^DIK K DIK,DA
	Q
	;
SUBCOLS(LIST)	;finds the column containing the CPT code and the text description
	;LIST is passed by reference
	S (LIST("CODESC"),LIST("TEXTSC"))=""
	;
	N SC,PIECE,NODE S SC=0
	;
	;piece 1 of the data returned by the package interface is the code,piece 2 is the description
	F  S SC=$O(^IBE(357.2,LIST,2,SC)) Q:'SC  S NODE=$G(^IBE(357.2,LIST,2,SC,0)),PIECE=$P(NODE,"^",5) S:PIECE=1 LIST("CODESC")=$P(NODE,"^") S:PIECE=2 LIST("TEXTSC")=$P(NODE,"^") Q:LIST("CODESC")&LIST("TEXTSC")
	Q
	;
SLCTSHT()	;allows the user to select a CPT check-off sheet
	K DIC S DIC=350.7,DIC(0)="AEMQ" D ^DIC K DIC
	I $D(DINUM)!$D(DUOUT)!(Y<0) Q ""
	Q +Y
FIND(FORM,BLK,LIST)	;finds the block & list for CPT codes
	N INTRFACE,BLOCKS,I
	S (BLK,LIST,BLOCKS,I)=0
	;
	;find the package interface for selecting CPT codes
	S INTRFACE=$O(^IBE(357.6,"B","DG SELECT CPT PROCEDURE CODES",0))
	Q:'INTRFACE
	;
	;find all of the blocks with CPT lists
	S BLK="" F  S BLK=$O(^IBE(357.1,"C",FORM,BLK)) Q:'BLK  D
	.S LIST="" F  S LIST=$O(^IBE(357.2,"C",BLK,LIST)) Q:'LIST  I $P($G(^IBE(357.2,LIST,0)),"^",11)=INTRFACE S BLOCKS=BLOCKS+1,I=I+1,BLOCKS(I)=BLK_"^"_LIST
	;
	;if count of blocks <2 there is no need to ask the user to choose
	I BLOCKS<2 S BLK=+$P($G(BLOCKS(1)),"^"),LIST=$P($G(BLOCKS(1)),"^",2) Q
	;
	;if count>1 the user must choose the block from the array BLOCKS
	S (BLK,LIST)=0
	S I=$$CHOOSE(.BLOCKS)
	S BLK=+$G(BLOCKS(+I)),LIST=+$P($G(BLOCKS(+I)),"^",2)
	Q
	;
CHOOSE(BLOCKS)	;ask the user to choose
	;BLOCKS is an array passed by reference
	;
	N I
ASK	W ! S I=0 F  S I=$O(BLOCKS(I)) Q:'I  W !,I,"  ",$P($G(^IBE(357.1,+BLOCKS(I),0)),"^")
	W !!,"Select a block to put the CPT codes: (1-",BLOCKS,"): "
	R I:DTIME
	Q:'$T 0
	Q:'$G(I) 0
	I '$D(BLOCKS(I)) G ASK
	Q I

IBDF18
IBDF18	;A;B/CJM - ENCOUNTER FORM - utilities for Problem List ;15OCT93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
GETFORM()	;allows the user to select an encounter form with a Clinic Common Problem List
	;returns <the form ien, or 0 if none selected>^<form name>
	N FORM,LIST,QUIT,ANS
	S (LIST,QUIT)=0 F  D  Q:QUIT
	.S FORM=$$SLCTFORM^IBDFU4(0)
	.I 'FORM S QUIT=1 Q
	.D FIND(FORM,0,.LIST,0)
	.I LIST S QUIT=1 Q
	.W !,"The form you selected doesn't contain a Clinic Common Problem List!",!,"Do you want to select another form? "
	.R ANS:DTIME
	.S:'$T!(ANS="")!(ANS["^")!(ANS["N")!(ANS["n") QUIT=1,FORM=0
	Q FORM_"^"_$P($G(^IBE(357,FORM,0)),"^")
	;
	;
COPYFORM(FORM,ARY)	;creates a list of problem groups and problems found in FORM on the list of clinic common problems
	;returns the length of the returned list
	;FORM is the ien of an encounter form
	;@ARY is the array where the list should be placed
	;each problem will have the format 'problem ien^problem text'
	;each group will have the format '^header text to display (could be null)'
	;following each group will be the problems on it
	;
	;the ruturned list will look like this:
	;@ARY@(1)=^group header
	;@ARY@(2)=problem ien^problem text
	;@ARY@(3)=problem ien^problem text
	;
	;
	;@ARY@(k)=^next group header
	;@ARY@(k+1)=problem ien^problem text
	;....
	;
	Q:'$G(FORM) 0
	Q:'$L($G(ARY)) 0
	N BLOCK,LIST,INTRFACE,COUNT
	S (BLOCK,LIST,INTRFACE,COUNT)=0
	F  D FIND(FORM,.BLOCK,.LIST,.INTRFACE) Q:'LIST  D COPYLIST(LIST,ARY,.COUNT)
	Q COUNT
	;
COPYLIST(LIST,ARY,COUNT)	;copies the entries from LIST to @ARY, starting subscript at COUNT+1
	;
	N SLCTN,SUBCOL,TEXT,IEN,NODE,TSUBCOL,NOTREAL,NODE,GROUP,ORDER,HDR
	;
	D SUBCOL(LIST,.TSUBCOL) ;find the subcolumn containing the text
	;don't bother returning list of problems if there is no subcolumn containing the problem text
	Q:'$G(TSUBCOL)
	;
	S GROUP=0 F  S GROUP=$O(^IBE(357.3,"APO",LIST,GROUP)) Q:'GROUP  D
	.S HDR=$P($G(^IBE(357.4,GROUP,0)),"^") I HDR="BLANK" S HDR=""
	.S COUNT=COUNT+1,@ARY@(COUNT)="^"_HDR
	.S ORDER="" F  S ORDER=$O(^IBE(357.3,"APO",LIST,GROUP,ORDER)) Q:ORDER=""  S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"APO",LIST,GROUP,ORDER,SLCTN)) Q:'SLCTN  D
	..S NODE=$G(^IBE(357.3,SLCTN,0)),IEN=$P(NODE,"^"),NOTREAL=$P(NODE,"^",2)
	..Q:'IEN!(NOTREAL)
	..S SUBCOL=$O(^IBE(357.3,SLCTN,1,"B",TSUBCOL,0)) Q:'SUBCOL  S NODE=$G(^IBE(357.3,SLCTN,1,SUBCOL,0)) S:$P(NODE,"^")=TSUBCOL TEXT=$P(NODE,"^",2) I $L(TEXT) S COUNT=COUNT+1,@ARY@(COUNT)=IEN_"^"_TEXT Q
	Q
	;
	;
SUBCOL(LIST,TSUBCOL)	;finds the subcolumn containing the text
	;TSUBCOL should be passed by reference - used to return the subcolumn
	;LIST is the selection list to search
	S TSUBCOL=""
	;
	N SC,PIECE,NODE S SC=0
	;
	;refering to the data returned by the package interface, piece 2 is the description
	F  S SC=$O(^IBE(357.2,LIST,2,SC)) Q:'SC  S NODE=$G(^IBE(357.2,LIST,2,SC,0)),PIECE=$P(NODE,"^",5) I PIECE=2 S TSUBCOL=$P(NODE,"^") Q
	Q
	;
FIND(FORM,BLK,LIST,INTRFACE)	;finds the block & list containing the Clinic Common Problem List
	N INTRFACE,QUIT
	S BLK=+$G(BLK),LIST=+$G(LIST),INTRFACE=+$G(INTRFACE)
	;
	;if not already found,find the package interface for selecting PROBLEMS
	I 'INTRFACE S INTRFACE=$O(^IBE(357.6,"B","GMP SELECT CLINIC COMMON PROBL",0))
	I 'INTRFACE S (BLK,LIST)=0 QUIT
	;
	I BLK D
	.F  S LIST=$O(^IBE(357.2,"C",BLK,LIST)) Q:'LIST  I $P($G(^IBE(357.2,LIST,0)),"^",11)=INTRFACE Q
	I BLK,LIST QUIT
	S QUIT=0
	F  S BLK=$O(^IBE(357.1,"C",FORM,BLK)) Q:'BLK  D  Q:QUIT
	.S LIST=0 F  S LIST=$O(^IBE(357.2,"C",BLK,LIST)) Q:'LIST  I $P($G(^IBE(357.2,LIST,0)),"^",11)=INTRFACE S QUIT=1 Q
	I 'BLK!('LIST) S (BLK,LIST)=0
	Q

IBDF18A
IBDF18A	;ALB/CJM/AAS - ENCOUNTER FORM - utilities for PCE ;12-AUG-94
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;; -- NEW Routine in support of DATA CAPTURE project
	;
GLL(CLINIC,INTRFACE,ARY,FILTER)	; -- get lots of lists in one call
	; -- input see GETLST but pass interface by reference expects
	;    intrface(n) = name of select list in package interface file
	;
	; -- output see GETLST
	N X,COUNT
	S COUNT=0
	S X="" F  S X=$O(INTRFACE(X)) Q:X=""  D GETLST(CLINIC,INTRFACE(X),ARY,$G(FILTER),.COUNT) ;S COUNT=@ARY@(0)
	;S @ARY@(0)=COUNT
	Q
	;
GETLST(CLINIC,INTRFACE,ARY,FILTER,COUNT)	; -- returns any specified selection list for a clinic
	; -- input  CLINIC = pointer to hospital location file for clinic
	;         INTRFACE = name of selection list in package interface file
	;              ARY = name of array to return list in
	;           FILTER = predefined filters (optional, default = 1)
	;                                       1 = must be selection list
	;                                       2 = only visit cpts on list
	;
	; -- output  The format of the returned array is as follows
	;         @ARY@(0) = count of array element (0 of nothing found)
	;         @ARY@(1) = ^group header
	;         @ARY@(2) = problem ien or cpt or icd code^user defined text
	;         @ARY@(3) = problem ien or cpt or icd code^used defined text
	;         @ARY@(k) = ^next group header
	;       @ARY@(k+1) = problem ien or cpt or icd code^user define text
	;
	N I,J,X,Y,INUM,IBQUIT,FORM,SETUP,LIST,BLOCK,OLDARY,IBDTMP,IBDUP
	S (IBQUIT,LIST)=0
	S COUNT=$G(COUNT,0)
	I $G(FILTER)<1 S FILTER=1 ;default value=1
	I FILTER>1 S OLDARY=ARY,ARY="IBDTMP"
	S @ARY@(0)=+$G(@ARY@(0))
	I $G(CLINIC)="" G GETLSTQ
	I $G(^SC(CLINIC,0))="" G GETLSTQ
	I $G(INTRFACE)="" G GETLSTQ
	S INUM=$O(^IBE(357.6,"B",$E(INTRFACE,1,30),0))
	; 
	; -- find forms defined for clinic
	;    piece 2 = basic form
	;    piece 3,4,6 = supplemental forms
	S SETUP=$G(^SD(409.95,+$O(^SD(409.95,"B",CLINIC,0)),0))
	G:SETUP="" GETLSTQ
	F I=2,3,4,6,8,9 S FORM=$P(SETUP,"^",I) D  Q:IBQUIT
	.;
	.; -- find blocks on forms
	.Q:'FORM
	.S BLOCK=0 F  S BLOCK=$O(^IBE(357.1,"C",FORM,BLOCK)) Q:'BLOCK!(IBQUIT)  D
	..;
	..; -- see if package interface defined for blocks
	..S LIST=0 F  S LIST=$O(^IBE(357.2,"C",BLOCK,LIST)) Q:'LIST  I $P($G(^IBE(357.2,LIST,0)),"^",11)=INUM D  ;S IBQUIT=1 Q  ;remove first semicolon if only want first list
	...;
	...; -- copy list
	...D:LIST COPYLIST^IBDF18A1(LIST,ARY,.COUNT)
	I COUNT D URH^IBDF18A1
	S @ARY@(0)=COUNT
	I FILTER=2 D F2^IBDF18A1(OLDARY)
	;
GETLSTQ	Q
	;
	; -- here are some sample tests for different lists
TEST	K VAR D GETLST(300,"DG SELECT CPT PROCEDURE CODES","VAR",1)
	X "ZW VAR"
	;
TEST3	K VAR S TEST(1)="DG SELECT CPT PROCEDURE CODES",TEST(2)="DG SELECT VISIT TYPE CPT PROCE"
	D GLL(1,.TEST,"VAR",1)
	X "ZW VAR"
	Q
	;
TEST4	K VAR D GETLST(300,"DG SELECT VISIT TYPE CPT PROCE","VAR",2)
	X "ZW VAR"
	Q

IBDF18A1
IBDF18A1	;ALB/CJM/AAS - ENCOUNTER FORM - utilities for PCE ;12-AUG-94
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;; -- New routine in support of DATA CAPTURE project
	;
COPYLIST(LIST,ARY,COUNT)	;copies the entries from LIST to @ARY, starting subscript at COUNT+1
	;
	N SLCTN,SUBCOL,TEXT,IEN,NODE,TSUBCOL,NOTREAL,NODE,GROUP,ORDER,HDR
	;
	D SUBCOL(LIST,.TSUBCOL) ;find the subcolumn containing the text
	;don't bother returning list of problems if there is no subcolumn containing the text
	;Q:'$G(TSUBCOL)
	;
	S GROUP=0 F  S GROUP=$O(^IBE(357.3,"APO",LIST,GROUP)) Q:'GROUP  D
	.S HDR=$P($G(^IBE(357.4,GROUP,0)),"^") I HDR="BLANK" S HDR=""
	.S COUNT=COUNT+1,@ARY@(COUNT)="^"_HDR
	.S ORDER="" F  S ORDER=$O(^IBE(357.3,"APO",LIST,GROUP,ORDER)) Q:ORDER=""  S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"APO",LIST,GROUP,ORDER,SLCTN)) Q:'SLCTN  D
	..S NODE=$G(^IBE(357.3,SLCTN,0)),IEN=$P(NODE,"^"),NOTREAL=$P(NODE,"^",2)
	..Q:NOTREAL
	..S SUBCOL=$O(^IBE(357.3,SLCTN,1,"B",+TSUBCOL,0)) Q:'SUBCOL
	..S NODE=$G(^IBE(357.3,SLCTN,1,SUBCOL,0)) S:$P(NODE,"^")=TSUBCOL TEXT=$P(NODE,"^",2)
	..;
	..; -- only add to array if not duplicate.  Is dup ien or ien+text???
	..I $L(TEXT),'$D(IBDUP(IEN)) S COUNT=COUNT+1,IBDUP(IEN)="",@ARY@(COUNT)=IEN_"^"_TEXT Q  ;this line checks only ien for duplicates
	..;I $L(TEXT),'$D(IBDUP(IEN_"^"_TEXT)) S COUNT=COUNT+1,IBDUP(IEN_"^"_TEXT)="",@ARY@(COUNT)=IEN_"^"_TEXT Q  ;this line checks ien+text for duplicates
	Q
	;
	;
SUBCOL(LIST,TSUBCOL)	;finds the subcolumn containing the text
	;TSUBCOL should be passed by reference - used to return the subcolumn
	;LIST is the selection list to search
	S TSUBCOL=""
	;
	N SC,PIECE,NODE S SC=0
	;
	;refering to the data returned by the package interface, piece 2 is the description
	F  S SC=$O(^IBE(357.2,LIST,2,SC)) Q:'SC  S NODE=$G(^IBE(357.2,LIST,2,SC,0)),PIECE=$P(NODE,"^",5) I PIECE=2 S TSUBCOL=$P(NODE,"^") Q
	Q
	;
	;
F2(ARY)	; -- filter cpt code array to find only codes beginning with 992 and asssicated headers
	; -- Copy filtered array to from ibdtmp( to @ary@(
	;
	N NODE,IBQUIT,COUNT
	S (COUNT,IBQUIT)=0
	;
	I INTRFACE'="DG SELECT CPT PROCEDURE CODES" S @ARY=IBDTMP K IBDTMP
	;
	S NODE="" F  S NODE=$O(IBDTMP(NODE),-1) Q:NODE=""  I $E(IBDTMP(NODE),1,3)=992 D  ;Q:IBQUIT  ;comment out the q:ibquit if want from more than 1 list
	.;
	.S @ARY@(NODE)=IBDTMP(NODE),COUNT=COUNT+1 ;this is bottom of list
	.;
	.; -- process from bottom of list to header
	.F  S NODE=$O(IBDTMP(NODE),-1) Q:NODE=""  D  Q:IBQUIT
	..S IBQUIT=0
	..I $E(IBDTMP(NODE),1,3)=992 S @ARY@(NODE)=IBDTMP(NODE),COUNT=COUNT+1
	..I $P(IBDTMP(NODE),"^",1)="" S @ARY@(NODE)=IBDTMP(NODE),IBQUIT=1,COUNT=COUNT+1
	I COUNT S @ARY@(0)=COUNT
	Q
	;
URH	; -- UnReferenced Headers removal
	;    if a header doesn't have any data under it, then remove the header
	N X,HDR
	S X=0 F  S X=$O(@ARY@(X)) Q:'X  D
	.I '$D(HDR),$P(@ARY@(X),"^",1)="" S HDR=X Q  ;find a header
	.I $P(@ARY@(X),"^",1) K HDR Q  ; is item under header
	.I $D(HDR),$P(@ARY@(X),"^",1)="" K @ARY@(HDR) S COUNT=COUNT-1,HDR=X ;hdr doesn't have any items, kill hdr node and reset header to next header
	I $D(HDR) S X=$O(@ARY@(""),-1) I $P(@ARY@(X),"^",1)="" K @ARY@(X) S COUNT=COUNT-1,HDR=X ;last item in list is a header
	Q

IBDF18B
IBDF18B	;ALB/AAS - ENCOUNTER FORM - utilities for PCE ;04-OCT-94
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;; New routine in support of data capture project
	;
GETPRO(CLINIC,ARY)	; -- returns list of providers specified for a clinic
	; -- input  CLINIC = pointer to hospital location file for clinic
	;              ARY = name of array to return list in
	;
	; -- output  The format of the returned array is as follows
	;         @ARY@(0) = count of array element (0 of nothing found)
	;         @ARY@(1) = pointer to 200^provider name from 200 (default provider if indicated)
	;         @ARY@(2) = pointer to 200^provider name from 200
	;
	N I,J,X,Y,IBX,IBQUIT,COUNT,IBC
	S (COUNT,IBQUIT)=0
	;
	S @ARY@(0)=""
	I $G(CLINIC)="" G GETPROQ
	I $G(^SC(CLINIC,0))="" G GETPROQ
	;
	I $O(^SC(CLINIC,"PR",0))="" G GETPROQ
	;
	; -- default provider should always be listed first
	S IBX=$O(^SC("ADPR",CLINIC,0)) I IBX D
	.S X=$G(^SC(CLINIC,"PR",IBX,0))
	.D INCPR(+X)
	;
	; -- get rest of list of providers
	S IBX=0 F  S IBX=$O(^SC(CLINIC,"PR",IBX)) Q:'IBX  I IBX D
	.S X=$G(^SC(CLINIC,"PR",IBX,0))
	.D INCPR(+X)
	S @ARY@(0)=COUNT
	;
GETPROQ	Q
	;
INCPR(X)	; -- increment counter and set provider array
	Q:'X!($G(^VA(200,+X,0))="")
	Q:$D(IBX(+X))  ; -- already set
	S COUNT=COUNT+1,@ARY@(COUNT)=+X_"^"_$P(^VA(200,+X,0),"^")
	S IBX(+X)=""
	Q
	;
GETDX(CLINIC,ARY)	; -- returns list of diagnosis specified for a clinic
	; -- input  CLINIC = pointer to hospital location file for clinic
	;              ARY = name of array to return list in
	;
	; -- output  The format of the returned array is as follows
	;         @ARY@(0) = count of array element (0 of nothing found)
	;         @ARY@(1) = pointer to 200^Diagnosis name from icd9 (default provider if indicated)
	;         @ARY@(2) = pointer to 200^diagnosis name from icd9
	;
	N I,J,X,Y,IBX,IBQUIT,COUNT,IBC
	S (COUNT,IBQUIT)=0
	;
	S @ARY@(0)=""
	I $G(CLINIC)="" G GETDXQ
	I $G(^SC(CLINIC,0))="" G GETDXQ
	;
	I $O(^SC(CLINIC,"DX",0))="" G GETDXQ
	;
	; -- default diagnosis should always be listed first
	S IBX=$O(^SC("ADDX",CLINIC,0)) I IBX D
	.S X=$G(^SC(CLINIC,"DX",IBX,0))
	.D INCDX(+X)
	;
	; -- get rest of list of diagnosis
	S IBX=0 F  S IBX=$O(^SC(CLINIC,"DX",IBX)) Q:'IBX  I IBX D
	.S X=$G(^SC(CLINIC,"DX",IBX,0))
	.D INCDX(+X)
	S @ARY@(0)=COUNT
	;
GETDXQ	Q
	;
INCDX(X)	; -- increment counter and set diagnosis array
	Q:'X!($G(^ICD9(+X,0))="")
	Q:$D(IBX(+X))  ; -- already set
	S COUNT=COUNT+1,@ARY@(COUNT)=+X_"^"_$P(^ICD9(+X,0),"^")_"^"_$P(^(0),"^",3)
	S IBX(+X)=""
	Q
	;
	;
	; -- here are some sample tests for different lists
TEST	K ALAN D GETPRO(25,"ALAN")
	X "ZW ALAN"
	Q
	;
TEST0	K ALAN D GETDX(300,"ALAN")
	X "ZW ALAN"
	Q

IBDF18C
IBDF18C	;ALB/CJM/AAS - ENCOUNTER FORM - form ID utilities ;04-OCT-94
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;; -- New routine in support of DATA CAPTURE project
	;
FID(DFN,APPT,SOURCE,FORMTYPE,CLIN)	; -- Form ID Tracking
	; -- create record in the ENCOUNTER FORM TRACKING file
	;    and returned a unique FORM ID
	; -- Input    DFN    = patient internal entry number
	;             APPT   = appointment date time (fm format)
	;             SOURCE = the source of the form, ie
	;                          IB = 1
	;                      Pandas = 2
	;                      Telefr = 3
	;             FORMTYPE   = the package form definition ID - may have been exterally assigned
	;             CLIN   = pointer to 44 (optional)
	;
	; -- Output Returns  = internal form id^external form id
	;
	N I,J,X,Y,ID,EXID,INTERNAL,NODE
	S ID=-1,EXID=""
	;
	I '$G(DFN)!('$G(APPT))!('$G(SOURCE)) G FIDQ
	;
	;FORMTYPE may="", but should always be >0 for scannable forms 
	S FORMTYPE=+$G(FORMTYPE)
	;
	;determine if the FORMTYPE was exterally assigned
	S INTERNAL=$D(^IBD(357.95,"C",SOURCE,FORMTYPE))
	;
	S ID=$$FINDID(DFN,APPT,FORMTYPE) I ID S EXID=ID_"^"_$P($G(^IBD(357.96,ID,0)),"^",9) G FIDQ
	L +^IBD(357.97,1,.02):2
	S ID=+$P($G(^IBD(357.97,1,0)),"^",2)
	F ID=ID+1:1 I '$D(^IBD(357.96,ID)) S $P(^IBD(357.97,1,0),"^",2)=ID Q
	L -^IBD(357.97,1,.02)
	K DIC,DO,D0,DD,DA,DINUM S DIC="^IBD(357.96,",X=ID,DIC(0)="",DINUM=ID
	D FILE^DICN K DIC,DIE,DA,DINUM
	S ID=$S(+Y<0:"",1:+Y)
	D:ID
	.S EXID=$$EXID(ID)
	.D NOW^%DTC N IBPRDT S IBPRDT=%
	.S DIE="^IBD(357.96,",DA=ID,DR=".02////^S X=DFN;.03////^S X=APPT;.04////^S X=$S(INTERNAL:FORMTYPE,1:"""");.05////^S X=IBPRDT;.07////^S X=SOURCE;.08////^S X=$S('INTERNAL:FORMTYPE,1:"""");.09////^S X=EXID;.1////^S X=$G(CLIN);.11////1"
	.L +^IBD(357.96,ID):2 D ^DIE L -^IBD(357.96,ID) K DIE,DA,DR
	.I INTERNAL D
	..N PAGE,IEN,SCAN,CNT
	..S IEN=0
	..F  S IEN=$O(^IBD(357.95,FORMTYPE,3,IEN)) Q:'IEN  D
	...S NODE=$G(^IBD(357.95,FORMTYPE,3,IEN,0))
	...S PAGE=$P(NODE,"^"),SCAN=$P(NODE,"^",2)
	...I PAGE,SCAN S DIC="^IBD(357.96,ID,9,",DIC(0)="L",DIC("P")=$P(^DD(357.96,9,0),"^",2),DA(1)=ID,X=PAGE,DLAYGO=357.96 K DD,DO D FILE^DICN K DIC,DA,DLAYGO,DD,DO
	.K %,%H,%I
FIDQ	Q ID_"^"_EXID
	;
EXID(ID)	; -- converts external id format to internal id format
	; -- we need to decide on external id format
	Q $G(ID)
	;
INID(ID)	; -- find internal id number from external format
	; -- Input ID  = form id in external format
	;    Output    = form id in internal format or NULL if nonexistant
	;
	N EXID
	S EXID=$O(^IBD(357.96,"AEXT",ID,0))
INIDQ	Q $G(EXID)
	;
FSCND(ID,STAT,ERR)	; -- update form tracking file that 
	; -- Input  ID = entry to flag as scanned (internal format)
	;         STAT = NEW status, 1=printed, 2=scanned,3=sent to pce okay, 
	;                4=pce returned err
	;                11=pending pages, 12=input data error
	;          ERR = pce error message (required only if stat=4), i may dropthis if we get the other error handler working.
	;
	; -- Output    = 1 if successful, 0 if not
	;
	N IBI,SUCCESS,I,J,X,Y,DA,DR,DIC,DIE
	S SUCCESS=0
	I '$G(ID) G FSCNDQ
	I $G(STAT)=4,$G(ERR)="" G FSCNDQ
	S IBI=$G(^IBD(357.96,+ID,0)) I IBI="" G FSCNDQ
	;
	I $P(IBI,"^",6)="" S DIE="^IBD(357.96,",DA=ID,DR=".06///NOW;.11////^S X=$S($G(STAT):STAT,1:2);.12////^S X=$G(ERR)" D ^DIE S SUCCESS=1 G FSCNDQ
	S DIE="^IBD(357.96,",DA=ID,DR=".11////^S X=$G(STAT);.12////^S X=$G(ERR)" D ^DIE S SUCCESS=1
	;
FSCNDQ	Q SUCCESS
	;
FIDST(ID)	; -- form id status
	; -- Input   ID = form id (internal entry number)
	;
	; -- Output  STATUS = -1 if id does not exist
	;                   =  1 if id exists but not scanned (printed)
	;                   =  2 if already scanned in
	;                   =  3 if sent to pce okay
	;                   =  4 if sent to pce with error....
	;
	N STATUS,I,J,X,Y
	S STATUS=-1
	I '$G(ID) G FIDSTQ
	S X=$G(^IBD(357.96,ID,0)) I X="" G FIDSTQ
	S STATUS=$S($P(X,"^",6)="":1,1:2)
	S:$P(X,"^",11)>2 STATUS=$P(X,"^",11)
FIDSTQ	Q STATUS
	;
FINDID(DFN,APPT,FORM)	; -- Find a form id for a patient and appointment
	; -- input  DFN =  patient
	;          APPT =  appointment date time
	;          FORM =  (Optional) type of form, pointer to 357.95 or field 10 
	;
	; -- output     = form id1^form id2^form id3^form idn...
	;               = where form ids are successive form ids (in internal
	;                 format) for same appointment
	;
	N ID,I,J,X
	S ID=""
	I '$G(DFN)!('$G(APPT)) G FINDIDQ
	S X=0 F  S X=$O(^IBD(357.96,"APTAP",DFN,APPT,X)) Q:'X  D
	.I '$G(FORM) S ID=ID_X_"^" Q
	.I $G(FORM) S I=$G(^IBD(357.96,X,0)) I $P(I,"^",4)=FORM!($P(I,"^",8)=FORM) S ID=X Q
FINDIDQ	Q ID
	;
FINDPT(FORMID)	;
	; -- find patient from form id
	; -- Output  :Patient Name ^ PID ^ clinic Name ^ appt date/time (external)
	;             ^form ID ^ form status ^ DFN ^ clinic ien ^ appt date/time (fm format)
	;
	N I,J,X,Y,DFN,IBNODE,IBXX,VA,VADM,VAERR,STATNM,FORM,FORMNM
	S IBXX="Unable to identify Form^^^"
	I +$G(FORMID)<1 G FINDPTQ
	S IBNODE=$G(^IBD(357.96,+FORMID,0))
	I IBNODE="" G FINDPTQ
	S DFN=+$P(IBNODE,"^",2)
	D DEM^VADPT
	S Y=$P(IBNODE,"^",11),C=$P(^DD(357.96,.11,0),"^",2) D Y^DIQ S STATNM=Y
	S FORM=$P($G(^IBD(357.95,+$P(IBNODE,"^",4),0)),"^",21)
	S FORMNM=$P($G(^IBE(357,+FORM,0)),"^")
	;
	S IBXX=$G(VADM(1))_"^"_$G(VA("PID"))_"^"_$P($G(^SC(+$P(IBNODE,"^",10),0),"Clinic Not Specified"),"^")_"^"_$$FMTE^XLFDT($P(IBNODE,"^",3))_"^"_$P(IBNODE,"^",4)_"^"_$P(IBNODE,"^",11)_"^"_DFN
	S IBXX=IBXX_"^"_$P(IBNODE,"^",10)_"^"_$P(IBNODE,"^",3)_"^"_STATNM_"^"_FORMNM_"^"_FORM
	;
	I +$P(FORMID,"^",2)>0,$P(IBNODE,"^",4)'=+$P(FORMID,"^",2) S IBXX="Form Type and Form ID Don't match^^^"
	;
FINDPTQ	Q IBXX

IBDF18D
IBDF18D	;ALB/CJM/AAS - ENCOUNTER FORM - form type utilities ;04-OCT-94
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;; -- New routine in support of DATA CAPTURE project
	;
FORMTYPE(SOURCE)	;creates an entry in the FORM DEFINITION TABLE
	; -- input  SOURCE = the source of the form, ie
	;                     IB=1
	;                     PANDAS=2
	;                     TELEFORM=3
	;                     OTHER=99
	; -- Output Returns the ien of the table created, "" if not created
	;
	Q:'SOURCE ""
	N IBFORMID,NODE,DA,DIC,DIE,DA,DINUM,D0,DD,DIK
	S IBFORMID=""
	L +^IBD(357.97,1,.01):2 Q:'$T IBFORMID
	S IBFORMID=1+$P($G(^IBD(357.97,1,0)),"^")
	F IBFORMID=IBFORMID:1 I '$D(^IBD(357.95,IBFORMID)) S $P(^IBD(357.97,1,0),"^")=IBFORMID Q
	L -^IBD(357.97,1,.01)
	K DIC,D0,DD,DA S DIC="^IBD(357.95,",X=IBFORMID,DIC(0)="",DINUM=IBFORMID
	D FILE^DICN K DIC,DIE,DA,DINUM
	S IBFORMID=$S(+Y<0:"",1:+Y)
	I IBFORMID D
	.S $P(^IBD(357.95,IBFORMID,0),"^",3)=SOURCE,^IBD(357.95,IBFORMID,1,0)="^357.951I^0^0",^IBD(357.95,IBFORMID,2,0)="^357.952I^0^0",^IBD(357.95,IBFORMID,3,0)="^357.953^0^0"
	.S DIK="^IBD(357.95,",DA=IBFORMID D IX1^DIK
	K DIK,X,DA
	Q IBFORMID

IBDF18E
IBDF18E	;ALB/CJM - ENCOUNTER FORM - PCE DEVICE INTERFACE utilities ;04-OCT-94
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;; -- New routine in support of DATA CAPTURE project
	;
SEND(FORMID,PROVIDER,PROVTYPE,BUBBLES,HANDPRNT,CHECKOUT,PXCA,DYNAMIC)	;builds the PCXA array and passes it to PCE, updates form tracking status
	;input:
	;   FORMID = the unique id assigned to the printed form, points to the FORM TRACKING file
	;   PROVIDER=pointer to NEW PERSON file (#200) (optional)
	;   PROVTYPE= P:=primary,S:=secondary (optional)
	;   BUBBLES = an array which should be passed by reference, BUBBLES is the list of bubbles marked on the form, subscripted by pointers to the BUBBLES multiple in the FORM DEFINITION TABLE
	;   HANDPRNT is the list of hand print fields marked on the form - subscripted by pointers to the HAND PRINT FIELDS multiple in the FORM DEFINITION TABLE, the value being what was input (HANDPRINT(<ien>)=<value>) - should be passed by reference
	;   CHECKOUT = checkout data@time
	;   DYNAMIC = an array which should be passed by reference, contains the list of bubbles selected from dynamic selection lists
	;
	;output:
	;    = 0 if the data is not passed to PCE
	;    = 1 if PXCA is passed by reference, and the data is passed to PCE
	;    the PXCA array is returned, principally to aid in debugging
	;
	;example: S RETURN=$$SEND^IBDF18E(3,DOCTOR,"P",.BUBBLES,.HANDPRNT)
	;
	N NODE,FORMTYPE,PXCASTAT,IBAPPT,IBCLINIC,IBDFN,VALUE,PI,TEXT,HEADER,QLFR,BUB,STATUS,IBSOURCE,HAND,COUNT,FID,TEMP,ITEM,TYPE
	;
	; -- ISC Only
	;I $G(CHECKOUT)="" D NOW^%DTC S CHECKOUT=%
	;
	K PXCA
	S (PXCA,PXCASTAT)=""
	;
	;check that the required parameters were passed
	Q:('FORMID) 0
	;
	;there must be an entry in form tracking - retrieve it into FORMID array
	Q:'$$TRACKING(.FORMID) 0
	;
	;there must be a form definition table
	S FORMTYPE=$P(NODE,"^",4)
	I 'FORMTYPE S STATUS=$$FSCND^IBDF18C(FORMID,12) Q 0
	I '$G(^IBD(357.95,FORMTYPE,0)) S STATUS=$$FSCND^IBDF18C(FORMID,12) Q 0
	;
	S PROVIDER=$G(PROVIDER)
	S PROVTYPE=$G(PROVTYPE)
	;
	;build the encounter node and source node from form tracking
	S PXCA("ENCOUNTER")=FORMID("APPT")_"^"_FORMID("DFN")_"^"_FORMID("CLINIC")_"^"_PROVIDER_"^^^^^^^^^^"_CHECKOUT_"^"_PROVTYPE
	S PXCA("SOURCE")=+FORMID("SOURCE")_"^"_DUZ_"^"_FORMTYPE_"^^"_FORMID
	;
	;now for each bubble in BUBBLES() add to TEMP()
	S BUB=0 F  S BUB=$O(BUBBLES(BUB)) Q:BUB=""  S:BUB NODE=$G(^IBD(357.95,FORMTYPE,1,BUB,0)) D
	.N SUBHDR
	.I 'BUB!(NODE="") D LOG^IBDF18E1("!!!! BUBBLE NOT FOUND IN FORM DEFINITION") Q
	.S VALUE=$P(NODE,"^",4)
	.S PI=$P(NODE,"^",3)
	.S TEXT=$P(NODE,"^",8)
	.S SUBHDR=$G(^IBD(357.95,FORMTYPE,1,BUB,1))
	.I $L(SUBHDR),($L(SUBHDR)+$L(TEXT)<80) S TEXT=SUBHDR_" "_TEXT
	.S HEADER=$P(NODE,"^",9)
	.S FID=$P(NODE,"^",6) I FID="" S FID=$P(NODE,"^") ;PANDAS uses piece 1 to number each bubble - does not use piece 6
	.S ITEM=$P(NODE,"^",12)
	.S QLFR=$P(NODE,"^",10)
	.S TYPE=""
	.D SETTEMP^IBDF18E1
	K BUBBLES
	;
	;now for each bubble in DYNAMIC() add to TEMP()
	S FID="" F  S FID=$O(DYNAMIC(FID)) Q:FID=""  S COUNT="" F  S COUNT=$O(DYNAMIC(FID,COUNT)) Q:COUNT=""  S BUB=$O(^IBD(357.96,FORMID,"AC",FID,+COUNT,0)) S:BUB NODE=$G(^IBD(357.96,FORMID,1,BUB,0)) D
	.I 'BUB!(NODE="") D LOG^IBDF18E1("!!!! BUBBLE NOT FOUND IN FORM TRACKING") Q
	.S VALUE=$P(NODE,"^",4)
	.S PI=$P(NODE,"^",3)
	.S TEXT=$P(NODE,"^",8)
	.S HEADER=""
	.S FID=$P(NODE,"^",6)
	.S ITEM=$P(NODE,"^")
	.S QLFR=$P(NODE,"^",10)
	.S TYPE=""
	.D SETTEMP^IBDF18E1
	K DYNAMIC
	;
	;now for each hand print field in HANDPRNT() add to TEMP()
	;
	S HAND=0 F  S HAND=$O(HANDPRNT(HAND)) Q:HAND=""  S:HAND NODE=$G(^IBD(357.95,FORMTYPE,2,HAND,0)) D
	.I 'HAND!(NODE="") D LOG^IBDF18E1("!!!! HANDPRINT FIELD NOT FOUND") Q
	.S TYPE=$P(NODE,"^",17)
	.S VALUE=HANDPRNT(HAND)
	.;
	.;what was printed may need transformation/formating
	.S VALUE=$$HPTRNS^IBDFU91(TYPE,VALUE,.FORMID)
	.;
	.;!!!!!!!!!!!! what to do if the value is "", ie, failed the input transform?
	.I VALUE="" D LOG^IBDF18E1("!!!! HANDPRINT FIELD CONTAINS A VALUE THAT FAILED THE INPUT TRANSFORM") Q
	.;!!!!!!!!!!!!!!
	.;
	.S PI=$P(NODE,"^",4)
	.S TEXT=$P(NODE,"^",7)
	.S HEADER=$P(NODE,"^",9)
	.S FID=$P(NODE,"^",8)
	.S ITEM=$P(NODE,"^",12)
	.S QLFR=$P(NODE,"^",10)
	.D SETTEMP^IBDF18E1
	K HANDPRNT
	;
	D SETPXCA
	;
	; -- make sure diagnosis code is added to DIAGNOSIS/PROBLEM node
PRO	S I=0 F  S I=$O(PXCA("DIAGNOSIS/PROBLEM",I)) Q:I=""  S J=0 F  S J=$O(PXCA("DIAGNOSIS/PROBLEM",I,J)) Q:J=""  D
	.Q:+$P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^")
	.I +$P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^",3) D
	..S IBX=$P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^",3) D
	...I $D(^LEX)>1 S X="LEXU" X ^%ZOSF("TEST") I $T S IBX=$$ICDONE^LEXU(IBX) S:$L(IBX)<1 IBX=799.9 Q  ; clinical lexicon next version to be in ^LEX
	...S X="GMPTU" X ^%ZOSF("TEST") I $T S IBX=$$ICDONE^GMPTU(IBX) S:$L(IBX)<1 IBX=799.9 Q
	...S IBX=799.9
	...Q
	..S IBXI=+$O(^ICD9("BA",IBX_" ",0)) I +IBXI<1 S IBXI=+$O(^ICD9("BA",799.9_" ",0))
	..I +IBXI<1 D LOG^IBDF18E1("Pointer to ICD9 code for clin lex entry ",$P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^",3)," doesnt' exist") Q
	..S $P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^")=IBXI
	..Q
	.;
	.; -- set diagnosis code from problem list into piece 1 of array
	.I +$P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^",4) S $P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^")=$$PROBDIA^IBDFBK3(+$P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^",4))
	;
	S IBD("AICS")=1 ;flag for IBDF PCE EVENT protocal
	D:$L($T(FOREGND^PXCA)) FOREGND^PXCA(.PXCA,.PXCASTAT)
	K IBD("AICS")
	;
	S STATUS=$$FSCND^IBDF18C(FORMID,$S(PXCASTAT=0:4,PXCASTAT=1:3,1:12),$S(PXCASTAT=0:"PCE RETURNED AN ERROR",1:""))
	Q +$G(PXCASTAT)
	;
	; -- if pce returns an error unflag all pages as received and delete
	;    all scanned data so data can be re-scanned
	I $O(PXCA("ERROR",""))'="" D UNRECV^IBDFBK2
	;
SETPXCA	;set values from TEMP() into the PXCA()
	;
	N NODE,NUMBER
	S PROVIDER=+$P(PXCA("ENCOUNTER"),"^",4)
	S NODE="" F  S NODE=$O(TEMP(NODE)) Q:NODE=""  S NUMBER=0,FID="" F  S FID=$O(TEMP(NODE,FID)) Q:FID=""  S ITEM="" F  S ITEM=$O(TEMP(NODE,FID,ITEM)) Q:ITEM=""  D
	.S NUMBER=NUMBER+1
	.S PXCA(NODE,PROVIDER,NUMBER)=TEMP(NODE,FID,ITEM)
	.K TEMP(NODE,FID,ITEM)
	Q
	;
TRACKING(FORMID)	;get form tracking info,sets FORMID array, which should be passed by reference, return 0 if not found
	;
	S NODE=$G(^IBD(357.96,FORMID,0))
	Q:NODE="" 0
	S FORMID("APPT")=$P(NODE,"^",3),FORMID("CLINIC")=$P(NODE,"^",10),FORMID("DFN")=$P(NODE,"^",2),FORMID("SOURCE")=$P(NODE,"^",7)
	Q 1

IBDF18E1
IBDF18E1	;ALB/CJM - ENCOUNTER FORM - PCE DEVICE INTERFACE utilities ;04-OCT-94
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;; -- New routine in support of DATA CAPTURE project
	;
GETPI(PI,QLFR,TYPE)	;returns information about the package interface needed to map data to PCE DEVICE INTERFACE
	;input - PI is a pointer to the package interface file, MUST be passed by reference
	;      - QLFR is a pointer to the data qualifier that applies
	;      - TYPE is a pointer to file 359.1, for the type of data - applies to hand print fields
	;
	;output - sets PI="" if the mapping can not be determined,else returns PI(PI,"NODE"),PI(PI,"VAL"),PI(PI,"TXT"),PI(PI,"HDR"),PI(PI,"QLFR")
	;      - if QLFR is passed, also returns PI(PI,QLFR,"IND")
	;      - if PI(PI,QLFR,"IND")=1,meaning there is independent mapping
	;        info for this qualifier - then also returns PI(PI,QLFR,"NODE")=
	;        <the node>,PI(PI,QLFR,"VAL")=<piece for the value>,
	;        PI(PI,QLFR,"TXT")=<the piece for txt>,PI(PI,QLFR,"HDR")=
	;        <piece for the hdr>,
	;        PI(PI,QLFR,"QLFR")=<piece for the qualifier code>
	;      - if TYPE is passed , also returns PI(PI,"TYPE",TYPE,"UNIT")=
	;        <unit code> and PI(PI,"TYPE",TYPE,"VTYPE")=
	;        <vitals type code>
	;
	;NOTE - it is assumed that entries in the PI() may be left hanging around,and if so they are valid
	;
	;
	Q:'PI ""
	;
	N NODE,QNODE,PIECE,IEN
	I '$D(PI(PI)) D  Q:'PI ""
	.;
	.;type of package interface must be for input
	.I $P($G(^IBE(357.6,PI,0)),"^",6)'=1 S PI="" Q
	.;
	.S NODE=$G(^IBE(357.6,PI,12))
	.S PI(PI,"NODE")=$P(NODE,"^")
	.S PI(PI,"VAL")=$P(NODE,"^",2)
	.S PI(PI,"TXT")=$P(NODE,"^",3)
	.S PI(PI,"HDR")=$P(NODE,"^",4)
	.S PI(PI,"QLFR")=$P(NODE,"^",5)
	;
	;special rules apply for the VITALS node
	I PI(PI,"NODE")="VITALS" D  Q:'PI ""
	.;
	.;the value for the VITALS node always goes to piece 2
	.S PI(PI,"VAL")=2
	.;
	.I 'TYPE D LOG(" !!!! TYPE OF VITALS IS REQUIRED") S PI(PI,"TYPE",TYPE,"VTYPE")="",PI(PI,"TYPE",TYPE,"UNIT")="" Q
	.;
	.;may have already gotten
	.I $D(PI(PI,"TYPE",TYPE)) Q
	.;
	.S IEN=$O(^IBE(357.6,PI,13,"B",TYPE_";IBE(359.1,",""))
	.I 'IEN D LOG(" !!!! VITALS DATA TYPE NOT KNOWN TO PACKAGE INTERFACE") S PI(PI,"TYPE",TYPE,"VTYPE")="",PI(PI,"TYPE",TYPE,"UNIT")="" Q
	.S NODE=$G(^IBE(359.1,TYPE,0))
	.S PI(PI,"TYPE",TYPE,"UNIT")=$P(NODE,"^",13)
	.S PI(PI,"TYPE",TYPE,"VTYPE")=$P(NODE,"^",12)
	;
	;if not VITALS, and there is a QLFR, get independent mapping info if not gotten previously
	I PI(PI,"NODE")'="VITALS",QLFR I '$D(PI(PI,QLFR,"IND")) D  Q:'PI ""
	.S PI(PI,QLFR,"CODE")=$P($G(^IBD(357.98,QLFR,0)),"^",2)
	.S IEN=$O(^IBE(357.6,PI,13,"B",QLFR_";IBD(357.98,",""))
	.I 'IEN D LOG(" !!!! DATA QUALIFIER DOES NOT APPLY TO THIS TYPE OF DATA") S PI(PI,QLFR,"IND")=0 Q
	.S NODE=$G(^IBE(357.6,PI,13,IEN,0))
	.S PI(PI,QLFR,"IND")=$P(NODE,"^",3)
	.Q:'PI(PI,QLFR,"IND")
	.S QNODE=$P(NODE,"^",4) S:QNODE="" QNODE=PI(PI,"NODE") S PI(PI,QLFR,"NODE")=QNODE
	.S PIECE=$P(NODE,"^",8) S:('PIECE)&(PI(PI,"NODE")=PI(PI,QLFR,"NODE")) PIECE=PI(PI,"QLFR") S PI(PI,QLFR,"QLFR")=PIECE
	.;
	.;if the node isn't different for the qualifier then the value,text,and header can not be mapped independently
	.I PI(PI,"NODE")=PI(PI,QLFR,"NODE") D
	..S PI(PI,QLFR,"VAL")=PI(PI,"VAL"),PI(PI,QLFR,"TXT")=PI(PI,"TXT"),PI(PI,QLFR,"HDR")=PI(PI,"HDR")
	.E  S PI(PI,QLFR,"VAL")=$P(NODE,"^",5),PI(PI,QLFR,"TXT")=$P(NODE,"^",6),PI(PI,QLFR,"HDR")=$P(NODE,"^",7)
	.;must at least know the piece to place the returned value
	.I (PI(PI,QLFR,"NODE")="")!('PI(PI,QLFR,"VAL")) S PI=""
	;
	;must at least know the node and the piece to place the returned value
	I 'QLFR I (PI(PI,"NODE")="")!('PI(PI,"VAL")) S PI=""
	Q PI
	;
SETTEMP	;sets values for the field into TEMP() - values are merged for fields that consist of a collection
	;
	N QCODE,PHDR,PVAL,PTXT,PQLFR,SUB,NODE
	;QCODE=<qualifier code>,PHDR=<header piece>,PVAL=<value piece>,PTXT=<text piece>,PQLFR=<qualifier piece>,SUB=<PCE GDI node>,NODE=<the value of the node>
	Q:'PI
	S PI=$$GETPI(.PI,QLFR,TYPE) I 'PI D LOG("!!! PACKAGE INTERFACE MISSING OR INCOMPLETE") Q
	;
	S QCODE=$S(QLFR:PI(PI,QLFR,"CODE"),1:"")
	;
	;mapping info could come from several different sources depending on whether or not a data qualifier is involved or the node=VITALS or ENCOUNTER
	I QLFR,PI(PI,"NODE")'="VITALS",PI(PI,"NODE")'="ENCOUNTER" I PI(PI,QLFR,"IND") D
	.S PHDR=PI(PI,QLFR,"HDR"),PVAL=PI(PI,QLFR,"VAL"),PTXT=PI(PI,QLFR,"TXT"),PQLFR=PI(PI,QLFR,"QLFR"),SUB=PI(PI,QLFR,"NODE")
	E  D
	.S PHDR=PI(PI,"HDR"),PVAL=PI(PI,"VAL"),PTXT=PI(PI,"TXT"),PQLFR=PI(PI,"QLFR"),SUB=PI(PI,"NODE")
	;
	;the ENCOUNTER node is treated differently, because there is always just one of them
	S:SUB'="ENCOUNTER" NODE=$G(TEMP(SUB,$P(FID,"("),+ITEM))
	S:SUB="ENCOUNTER" NODE=$G(PXCA("ENCOUNTER"))
	;
	;the VITALS node is also treated differently
	I SUB="VITALS" D
	.S $P(NODE,"^")=PI(PI,"TYPE",TYPE,"VTYPE"),$P(NODE,"^",3)=PI(PI,"TYPE",TYPE,"UNIT"),$P(NODE,"^",2)=VALUE
	;these are nodes other than VITALS and ENCOUNTER
	E  D
	.;merge the data into the node
	.I $P(NODE,"^",PVAL)="" S $P(NODE,"^",PVAL)=VALUE
	.I PTXT I $L($P(NODE,"^",PTXT))<$L(TEXT) S $P(NODE,"^",PTXT)=TEXT
	.I PHDR I $L($P(NODE,"^",PHDR))<$L(HEADER) S $P(NODE,"^",PHDR)=HEADER
	.;
	.I QCODE'="" S $P(NODE,"^",PQLFR)=$S($P(NODE,"^",PQLFR)'="":$P(NODE,"^",PQLFR)_","_QCODE,1:QCODE)
	S:SUB'="ENCOUNTER" TEMP(SUB,$P(FID,"("),+ITEM)=NODE
	S:SUB="ENCOUNTER" PXCA(SUB)=NODE
	Q
	;
LOG(ERROR)	;report or log the error
	S XCNT=$G(XCNT)+1
	S ^TMP("IBD-SCAN-ERR",FORMID,XCNT)=ERROR
	Q

IBDF19
IBDF19	;ALB/CJM - ENCOUNTER FORM (compile forms,delete garbage);NOV 22,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
GARBAGE	;delete unused blocks (belonging to GARBAGE form)
	N IBJUNK,BLK,CR,FORM
	;
	;first delete unused workcopy blocks
	;find the form=GARBAGE, used as a work area
	S IBJUNK=+$O(^IBE(357,"B","GARBAGE",""))
	;clean up blocks not being used
	S BLK=0 F  S BLK=$O(^IBE(357.1,"C",IBJUNK,BLK)) Q:'BLK  L +^IBE(357.1,BLK):1 I $T D DLTBLK^IBDFU3(BLK,IBJUNK,357.1) L -^IBE(357.1,BLK)
	W !,"Blocks not belonging to any form have been deleted"
	;
	;delete cross-references for compilied forms if the forms have been deleted
	F CR="AT","AC","AG","AU","AB" S FORM=0 F  S FORM=$O(^IBE(357,CR,FORM)) Q:'FORM  I '$D(^IBE(357,FORM)) K ^IBE(357,CR,FORM)
	W !,"Extraneous cross-references on non-existant forms have been deleted"
	Q
	;
	;
COMPILE	;compiles IBFORM at the form level - leaves blocks already compiled alone
	;
	;lock the form while compiling
	Q:'$$LOCKFORM^IBDFU7(IBFORM)
	;compile it only if not already compiled - it could have been compiled by another process while the form was being locked
	I $$FORMDSCR^IBDFU1C(.IBFORM) I 'IBFORM("COMPILED") D
	.N IBARRAY,IBDEVICE,IBPRINT,DFN,IBCLINIC,IBAPPT,SUB
	.S (IBDEVICE("RASTER"),IBDEVICE("GRAPHICS"))=1
	.S (IBDEVICE("CRT"),IBDEVICE("LISTMAN"),IBAPPT,IBCLINIC,DFN,IBDEVICE("PCL"))=0
	.D UNCMPL(.IBFORM,0)
	.D PRNTPRMS^IBDFU1C(.IBPRINT,0,1,0,1)
	.D ARRAYS^IBDFU1C(.IBFORM,.IBARRAY)
	.K ^TMP("IB",$J,"INTERFACES")
	.S SUB="" F  S SUB=$O(IBARRAY(SUB)) Q:SUB=""  K @IBARRAY(SUB)
	.D DRWBLKS^IBDF2A
	.S:IBFORM("COMPILED")'="F" IBFORM("COMPILED")=1
	.S $P(^IBE(357,IBFORM,0),"^",5)=IBFORM("COMPILED")
	.S:$P(^IBE(357,IBFORM,0),"^",13) ^IBE(357,"ADEF",$P(^IBE(357,IBFORM,0),"^",13),IBFORM)=""
	.K ^TMP("IB",$J,"INTERFACES"),X,Y,I
	D FREEFORM^IBDFU7(IBFORM)
	Q
	;
ASKCMPL(IBFORM)	;ask if the form should be compiled or uncompiled
	Q:'$G(IBFORM)
	N BLK,QUIT S QUIT=0
	I $P($G(^IBE(357,IBFORM,0)),"^",5) D
	.W !,"The form is currently compiled. Should it be recompiled?"
	.K DIR S DIR(0)="Y",DIR("B")="YES"
	.D ^DIR K DIR
	.S:$D(DUOUT)!(Y'=1) QUIT=1
	Q:QUIT
	;uncompile the form
	D UNCMPALL(IBFORM)
	Q
	;
CMPLACTN	;action for compiling a form listed on the screen
	N IBFORM
	X IBAPI("SELECT")
	I IBFORM D ASKCMPL(IBFORM)
	S VALMBCK="R"
	Q
	;
KILLTBL(IBFORM)	;
	; -- marks the FORM DEFINITION TABLE for deletion
	;    IBFORM("TYPE") is reset to "", pass IBFORM by reference
	;
	Q:'IBFORM("TYPE")
	;
	; -- Mark forms for deletion
	S $P(^IBD(357.95,IBFORM("TYPE"),0),"^",2)=DT,^IBD(357.95,"ADEL",DT,IBFORM("TYPE"))=""
	K ^IBE(357,"ADEF",IBFORM("TYPE"),IBFORM) ; kill cross reference
	S IBFORM("TYPE")="",$P(^IBE(357,IBFORM,0),"^",13)=""
	Q
	;
UNCMPL(IBFORM,FAILED)	;marks the form as not compiled and deletes or marks for deletion the FORM DEFINITION TABLE
	;leaves the blocks compiled
	;if FAILED means compilation of form was attempted, but failed - mark form accordingly
	;IBFORM is the form - if passed by reference IBFORM("TYPE") and IBFORM("COMPILED") are set
	;
	Q:'IBFORM
	N NODE
	S NODE=$G(^IBE(357,IBFORM,0))
	S IBFORM("SCAN")=$P(NODE,"^",12),IBFORM("TYPE")=$P(NODE,"^",13)
	D:IBFORM("TYPE") KILLTBL(.IBFORM)
	S IBFORM("COMPILED")=$S($G(FAILED):"F",1:0),$P(^IBE(357,IBFORM,0),"^",5)=IBFORM("COMPILED")
	Q
	;
UNCMPALL(IBFORM)	;uncompile the form and it's blocks
	N BLK
	D UNCMPL(IBFORM,0)
	;also uncompile all of its blocks
	S BLK=0 F  S BLK=$O(^IBE(357.1,"C",IBFORM,BLK)) Q:'BLK  D UNCMPBLK^IBDF19(BLK)
	Q
BLKCHNG(FORM,BLOCK)	;call this if the block is edited - uncompiles the block and form
	D UNCMPBLK(BLOCK)
	D UNCMPL(FORM)
	Q
	;
UNCMPBLK(BLOCK)	;delete the compiled version of the block
	K ^IBE(357.1,BLOCK,"V"),^IBE(357.1,BLOCK,"S"),^IBE(357.1,BLOCK,"B"),^IBE(357.1,BLOCK,"H")
	Q
	;
KILL(TYPE)	;deletes the form definition=TYPE
	K ^IBD(357.95,"AC",TYPE),^IBD(357.95,TYPE,1)
	K ^IBD(357.95,"AD",TYPE),^IBD(357.95,TYPE,2)
	K DA S DIK="^IBD(357.95,",DA=TYPE D ^DIK K DIK,DA
	Q
	;
RECMPALL	;causes all forms to be recompiled
	N IBFORM,IBQUIT,DIR,DIRUT,DUOUT,DTOUT
	S IBQUIT=0
	I '$D(ZTQUEUED) D
	.S DIR("?")="Enter 'Yes' to cause all forms to uncompile or 'No' to do nothing.  Forms will actually recompile as they are printed."
	.S DIR(0)="Y",DIR("A")="Do you really want to Recompile all Forms"
	.D ^DIR S IBQUIT='Y
	I $G(IBQUIT) W !!,"Okay, nothing recompiled" Q
	;
	W:'$D(ZTQUEUED) !!,"Uncompiling all forms..."
	S IBFORM=0
	F  S IBFORM=$O(^IBE(357,IBFORM)) Q:'IBFORM  D
	.Q:'$$LOCKFORM^IBDFU7(IBFORM)
	.D UNCMPALL(IBFORM)
	.D FREEFORM^IBDFU7(IBFORM)
	.W:'$D(ZTQUEUED) "."
	W:'$D(ZTQUEUED) !!,"Okay, forms will be recompiled as they are printed."
	Q

IBDF1A
IBDF1A	;ALB/CJM - ENCOUNTER FORM (prints for a single patient);NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
MAIN(WITHDATA)	;
	; -- prints encounter forms, either with patient data for a patient 
	;    with no appointment (in which case it uses time of printing as
	;    the appointment time) or without patient data (only if a form
	;    is defined for the clinic for such use)
	;    $G(WITDATA) if the form should be printed with data
	;    0 if a blank form for use without patient data should be printed
	;
	N IBF,FORMS,NODE,IBPM
	;FORMS = list of forms in form^form^... format
	;IBI is a counter used to parse FORMS
	;IBPM=1 if forms defined in print manager should be printed
	S WITHDATA=+$G(WITHDATA)
	K ^TMP("IB",$J),^TMP("IBDF",$J)
	S (IBPM,IBQUIT)=0,DFN=""
	D CLINIC G:IBQUIT EXIT
	I WITHDATA D  G:IBQUIT EXIT
	.D PATIENT Q:IBQUIT
	.D NOW
	.D WHCHFORM
	I 'WITHDATA D FORM G:IBQUIT EXIT
	D DEVICE G:IBQUIT EXIT
QUEUED	;
	;input - DFN,IBAPPT,IBCLINIC
	N IBDEVICE
	;
	D DEVICE^IBDFUA(0,.IBDEVICE)
	F IBF=1:1 S IBFORM=$P(FORMS,"^",IBF) Q:'IBFORM  D DRWFORM^IBDF2A(IBFORM,WITHDATA,.IBDEVICE)
	I WITHDATA,IBPM D PRNTOTHR^IBDF1B5(IBCLINIC,"FOR EVERY APPOINTMENT"),PRNTOTHR^IBDF1B5(IBCLINIC,"ONLY FOR EARLIEST APPOINTMENT")
EXIT	;
	I $D(ZTQUEUED) S ZTREQ="@"
	E  D ^%ZISC
	D KPRNTVAR^IBDFUA ;kills the screen and graphics parameters
	K IBQUIT,IBFORM,IBCLINIC,DFN,IBAPPT,X,Y,I,^TMP("IB",$J),^TMP("IBDF",$J)
	Q
FORM	;gets the type of form to print from the clinic setup - sets FORMS
	N SETUP
	S SETUP=$O(^SD(409.95,"B",IBCLINIC,"")) I 'SETUP D ERROR S IBQUIT=1 Q
	S SETUP=$G(^SD(409.95,SETUP,0)) I SETUP="" D ERROR S IBQUIT=1 Q
	S FORMS=$P(SETUP,"^",5) I 'FORMS D ERROR S IBQUIT=1 Q
	Q
ERROR	;prints a message
	W !!,"There is no encounter form defined for this clinic that should print",!,"without patient data!",!
	Q
ERROR2	;prints a message
	W !!,"There are no forms defined to print for this clinic!",!
	Q
PATIENT	;gets the patient to print the form for
	S DIR(0)="P^2:EM",DIR("A")="PATIENT NAME" D ^DIR K DIR I $D(DIRUT)!(+Y<1)!('(+Y)) S IBQUIT=1 Q
	S DFN=+Y
	Q
DEVICE	;
	I $D(ZTQUEUED) Q
	W !,*7,"** Encounter Forms require a page size of 80 lines and 132 columns. **"
	K %IS,%ZIS,IOP S %ZIS="MQ0" D ^%ZIS I POP S IBQUIT=1 Q
	I $D(IO("Q")) D
	.S ZTRTN="QUEUED^IBDF1A",(ZTSAVE("WITHDATA"),ZTSAVE("IB*"),ZTSAVE("DFN"),ZTSAVE("FORMS"))=""
	.S ZTDESC="IBD - PRINT ENCOUNTER FORM" D ^%ZTLOAD
	.W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
	.D HOME^%ZIS S IBQUIT=1 Q
	U IO
	Q
CLINIC	;asks the user for the clinic
	K DA,DIR S DIR(0)="409.95,.01O",DIR("A")="PRINT AN ENCOUNTER FORM FOR WHICH CLINIC? " D ^DIR K DIR,DA I $D(DTOUT)!$D(DUOUT)!(+Y<0)!('(+Y)) S IBQUIT=1 Q
	S IBCLINIC=+Y
	Q
NOW	;sets IBAPPT to NOW
	N %,%H,%I,X
	D NOW^%DTC
	S IBAPPT=%
	Q
WHCHFORM	;
	I 'IBCLINIC D ASKFORM Q
	K DIR S DIR(0)="S^1:SELECT ANY FORM;2:USE CLINIC SETUP;",DIR("A")="Do you want to Select a form or Use the form(s) defined by the clinic setup?" D ^DIR K DIR I $D(DIRUT)!(+Y<0) S IBQUIT=1 Q
	S IBPM=0,FORMS=""
	I Y=1 D  Q:IBQUIT
	.D ASKFORM
	E  I Y=2 S FORMS=$$FORMS^IBDF1B2(IBCLINIC,DFN,IBAPPT),IBPM=1
	I '$P(FORMS,"^"),IBPM,'$$IFOTHR^IBDF1B5(IBCLINIC,"FOR EVERY APPOINTMENT"),'$$IFOTHR^IBDF1B5(IBCLINIC,"ONLY FOR EARLIEST APPOINTMENT") D ERROR2 S IBQUIT=1 Q
	Q
ASKFORM	;asks to select single form
	K DIC S DIC("S")="I '$P(^(0),U,7)",DIC=357,DIC(0)="AEQ",DIC("A")="Enter form to print: "
	D ^DIC K DIC I ($D(DTOUT)!$D(DUOUT)!(+Y<0)) S IBQUIT=1 Q
	S FORMS=+Y
	Q

IBDF1B
IBDF1B	;ALB/CJM - ENCOUNTER FORM (printing forms for appointments); 3/1/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;IBSRT=1 for sort by clinic/patient name
	;IBSRT=2 for sort by terminal digits
	;IBSRT=3 for sort by clinic/terminal digits
	;
	;SELECTBY="P" if user wants to select appts by patient
	;SELECTBY="C" if user wants to select appts by division/clinic
	;
	;IBDT=date for appointments
	;IBREPRNT'="" if this is a reprint of a previous job - then it's either equal to clinic name or 1st 4 terminal digits
	;IBSTRTDV is the division to start from in the case of a reprint
	;IBADDONS=1 if user wants to do add-ons only, 0 otherwise
	;
EN	;
	N IBREPRNT,SELECTBY,IBDT,IBSRT,IBADDONS,IBSTRTDV,QUIT,X
	S (IBSTRTDV,IBREPRNT)="",(QUIT,IBADDONS)=0
	;
	;set the error trap so workspace in ^TMP is erased in case of abnormal termination of the print job
	S X="ERRORTRP^IBDF1B",@^%ZOSF("TRAP")
	;
	K ^TMP("IBDF",$J),^TMP("IB",$J)
	D HOME^%ZIS
	D
	.D SELECTBY Q:QUIT  S:SELECTBY="P" IBSRT=1 ;if selecting by patient then sort by clinic/patient rather than by terminal digits
	.D:SELECTBY="C" SORTBY^IBDF1BA Q:QUIT
	.D APPTDATE Q:QUIT
	.;now allow user to makes selections, whether by patient or clinic
	.D @SELECTBY
	.;
	.;if nothing selected exit
	.Q:'$D(^TMP("IBDF",$J))
	.;
	.;since selecting by entire clinics, may want to do add-ons only or restart the job
	.I SELECTBY="C" D  Q:QUIT
	..D ADDONS Q:QUIT
	..D REPRINT Q:QUIT
	;
	;
	;if nothing selected exit
END	G:('$D(^TMP("IBDF",$J)))!QUIT EXIT
	 W !,*7,"** Encounter Forms require a page size of 80 lines and 132 columns. **"
	K %IS,%ZIS,IOP S %ZIS="QM0",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
	I $D(IO("Q")) S ZTRTN="^IBDF1B1",ZTDESC="IBDF Encounter Forms",ZTSAVE("^TMP(""IBDF"",$J,")="",ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS G EXIT
	U IO
	D ^IBDF1B1
EXIT	;
	K ^TMP("IBDF",$J),^TMP("IB",$J)
	I $D(ZTQUEUED) S ZTREQ="@" Q
	K DTOUT,DUOUT,DIRUT,DIROUT,X,Y,D0,DA
	D ^%ZISC
	Q
	;
REPRINT	;for prior job that partially completed?
	;IBSTRTDV is the division to restart from
	;IBREPRNT is the clinic or first 4 of terminal digits to restart from
	S DIR(0)="Y",DIR("A")="IS THIS A REPRINT OF A PREVIOUS RUN"
	S DIR("B")="NO",DIR("?")="ANSWER YES IF SOME OF THE FORMS WERE ALREADY PRINTED BY A PREVIOUS JOB THAT DID NOT SUCCESSFULLY COMPLETE"
	D ^DIR K DIR I $D(DIRUT)!(Y=-1) S QUIT=1 Q
	I Y D  I IBREPRNT="" S QUIT=1 Q
	.I IBSRT=2 D  ;sorting by division/terminal digit
	..;ask which division to restart from
	..S IBSTRTDV=$$STARTDIV^IBDF1BA I IBSTRTDV="" S IBREPRNT="" Q
	..;ask which terminal digit to restart from
	..D TERMSTRT^IBDF1BA Q:IBREPRNT=""
	.I (IBSRT=1)!(IBSRT=3) D CLNCSTRT^IBDF1BA ;sorting by division/clinic, ask which clinic to restart from
	Q
ADDONS	;add-ons only?
	S DIR(0)="Y",DIR("A")="WANT TO PRINT ADD-ONS ONLY"
	S DIR("B")="NO",DIR("?")="ANSWER YES TO ONLY PRINT ADD-ONS"
	D ^DIR K DIR I $D(DIRUT)!(Y=-1) S QUIT=1 Q
	S IBADDONS=Y
	Q
SELECTBY	;select by patient or clinic?
	W !,"Do you want to print forms for a particular patient or for entire clinics?",!
	K DIR S DIR("B")="Clinic",DIR(0)="SO^P:Patient;C:Clinic",DIR("A")="Select Appointment by"
	D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
	S SELECTBY=Y
	Q
	;
P	;print by patient - get patient then appointment(s) for date
	N IBTMP,IBNM,DFN
	;IBNM=patient name, IBTMP=array to store patient's appts
	F  K DIC S DIC="^DPT(",DIC(0)="AEQM" D ^DIC K DIC Q:Y<0  S DFN=+Y,IBNM=$P(Y,"^",2) D SEARCH^IBDF1BA,DISP^IBDF1BA
	Q
	;
C	;print all appointments for a clinic - find division then clinic, print all/some clinics for all/some divisions
	;
	N GROUPS,IEN
	;
	;get the PRINT MANAGER CLINIC GROUPS
	S GROUPS=""
	K DIR
	S DIR(0)="PAO^357.99:AEMQ",DIR("A")="Select Print Manager Clinic Group:",DIR("?")="You can choose from previously defined clinic groups."
	F  D ^DIR Q:((+Y<0)!$D(DIRUT))  S GROUPS(+Y)="",DIR("A")="Select another Print Manager Clinic Group:"
	S GROUPS=0 F  S GROUPS=$O(GROUPS(GROUPS)) Q:'GROUPS  D
	.S IEN=0 F  S IEN=$O(^IBD(357.99,GROUPS,10,IEN)) Q:'IEN  S IBCLN=+$G(^IBD(357.99,GROUPS,10,IEN,0)) S:IBCLN ^TMP("IBDF",$J,"C",IBCLN)=""
	.S IEN=0 F  S IEN=$O(^IBD(357.99,GROUPS,11,IEN)) Q:'IEN  S IBDIV=+$G(^IBD(357.99,GROUPS,11,IEN,0)) S:IBDIV ^TMP("IBDF",$J,"D",IBDIV)=""
	K DIR
	G:$O(GROUPS(0)) ENDC
	;
	;now ask divisions and clinics
	W !!,"Now you can select individual divisions and clinics."
	D ASK2^IBODIV G:$D(VAUTD)<11&(VAUTD=0) ENDC
	S DIC("S")="I $P(^SC(+Y,0),U,3)=""C"",$S(VAUTD:1,$D(VAUTD(+$P(^(0),U,15))):1,'+$P(^(0),U,15)&$D(VAUTD($O(^DG(40.8,0)))):1,1:0)"
	W !!,"If you want to print forms for all clinics in the divisions you have",!,"chosen (for those clinics with forms defined) then select ALL."
	W !!,"Otherwise, select the particular clinics you want.",!
	S DIC="^SC(",VAUTVB="VAUTC",VAUTNI=2,VAUTSTR="clinic" D FIRST^VAUTOMA K DIC G:$D(VAUTC)<11&(VAUTC=0) ENDC
	I VAUTC,VAUTD S ^TMP("IBDF",$J,"D","ALL")=""
	I VAUTC,'VAUTD S IBDIV="" F  S IBDIV=$O(VAUTD(IBDIV)) Q:IBDIV=""  S ^TMP("IBDF",$J,"D",IBDIV)=""
	I 'VAUTC S IBCLN="" F  S IBCLN=$O(VAUTC(IBCLN)) Q:IBCLN=""  S ^TMP("IBDF",$J,"C",IBCLN)=""
ENDC	K VAUTNI,VAUTD,VAUTC,VAUTVB,VAUTSTR,IBDIV,IBCLN,DIC
	Q
	;
APPTDATE	;print forms for appointments on what date?
	K DIR S DIR(0)="D^::AEX",DIR("B")="TODAY",DIR("A")="Appointment Date to Print Forms For"
	S DIR("?",1)="Only Clinics and Patients with Appointments on this Date will be allowed."
	S DIR("?")="Nothing will print for Appointments in Clinics/Divisions with no forms defined."
	D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
	S IBDT=Y
	Q
	;
ERRORTRP	;the error trap
	K ^TMP("IBDF",$J),^TMP("IB",$J)
	D @^%ZOSF("ERRTN")
	Q

IBDF1B1
IBDF1B1	;ALB/CJM - ENCOUNTER FORM PRINT (IBDF1B continued - print encounter forms for selected appts); 3/1/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	N IBDEVICE,IBQUIT
	;
	K DA,D0,X,Y,I
	;
	;set the error trap so workspace in ^TMP is erased in case of abnormal termination of the print job
	S X="ERRORTRP^IBDF1B",@^%ZOSF("TRAP")
	;
	S IBQUIT=0
	D DEVICE^IBDFUA(0,.IBDEVICE)
	D:$D(^TMP("IBDF",$J,"D")) ENDV^IBDF1B1B D:$D(^TMP("IBDF",$J,"C")) ENCL^IBDF1B1A
	K ^TMP("EARL",$J),^TMP("MULT",$J)
	D ENPT
	D KPRNTVAR^IBDFUA
	;K ^TMP("IBDF",$J),^TMP("IB",$J),DA,D0,X,Y,I,IBI
	K ^TMP("IBDF",$J),^TMP("IB",$J),^TMP("EARL",$J),^TMP("MULT",$J),DA,D0,X,Y,I,IBI
	I $D(ZTQUEUED) S ZTREQ="@"
	Q
ENPT	;print encounter forms for each appt
	;input ^TMP(  - contains appointment data:
	;if IBSRT=1 format is ^TMP("IBDF",$J,"P",division name,clinic name,clinic ien,patient name,dfn,appt)=""
	;if IBSRT=2 format is^TMP("IBDF",$J,"P",division name,terminal digits,dfn,appt)=clinic ien
	;if IBSRT=3 format is ^TMP("IBDF",$J,"P",division name,clinic name,clinic ien,terminal digits,dfn,appt)=""
	N DFN,CLNCNAME,IBCLINIC,PNAME,TDIGIT,IBAPPT,IBDIV
	;IBCLINIC=ien of clinic
	;IBSTRTDV is the division to start from in the case of a reprint
	;IBREPRNT is the clinic or terminal digits (1st 4) to start from in case of a reprint
	;
	S IBDIV="" F  S IBDIV=$O(^TMP("IBDF",$J,"P",IBDIV)) Q:IBQUIT!(IBDIV="")  D:(IBDIV=" ")!(IBSTRTDV']IBDIV)
	.I IBSRT=2,IBDIV]" " W !,"DIVISION: ",IBDIV,@IOF
	.D:IBSRT=1 SORT1
	.D:IBSRT=2 SORT2
	.D:IBSRT=3 SORT3
	D:'IBQUIT TRLR
	Q
	;
SORT1	;case of sort by div/clinic/patient
	S CLNCNAME=""
	;check if report was restarted, start is after this clinic
	I IBREPRNT]"" I ((IBDIV=" ")!(IBDIV=IBSTRTDV)) S CLNCNAME=$E(IBREPRNT,1,$L(IBREPRNT)-1)
	F  S CLNCNAME=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME)) Q:CLNCNAME=""!IBQUIT  S IBCLINIC="" F  S IBCLINIC=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC)) Q:'IBCLINIC!IBQUIT  D
	.D HDRPG($P($G(^SC(IBCLINIC,0)),"^"),IBDIV)
	.;D PRNTOTHR^IBDF1B5(IBCLINIC,"ONCE FOR CLINIC")
	.S PNAME="" F  S PNAME=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,PNAME)) Q:PNAME=""!IBQUIT  S DFN="" F  S DFN=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,PNAME,DFN)) Q:'DFN!IBQUIT  D
	..S IBAPPT="" F  S IBAPPT=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,PNAME,DFN,IBAPPT)) Q:'(+IBAPPT)!IBQUIT  D APPT
	Q
SORT2	;case of sort by div/terminal digit
	S TDIGIT=""
	;check if report was restarted, start is after this terminal digit
	I IBREPRNT]"" I ((IBDIV=" ")!(IBDIV=IBSTRTDV)) S TDIGIT=IBREPRNT
	F  S TDIGIT=$O(^TMP("IBDF",$J,"P",IBDIV,TDIGIT)) Q:TDIGIT=""!IBQUIT  D
	.S DFN="" F  S DFN=$O(^TMP("IBDF",$J,"P",IBDIV,TDIGIT,DFN)) Q:'DFN!IBQUIT  D
	..S IBAPPT="" F  S IBAPPT=$O(^TMP("IBDF",$J,"P",IBDIV,TDIGIT,DFN,IBAPPT)) Q:'+IBAPPT!IBQUIT  S IBCLINIC=$G(^TMP("IBDF",$J,"P",IBDIV,TDIGIT,DFN,IBAPPT)) Q:'IBCLINIC!IBQUIT  D APPT
	Q
SORT3	;case of sort by div/clinic/terminal digits
	S CLNCNAME=""
	;check if report was restarted, start is after this CLINIC
	I IBREPRNT]"" I ((IBDIV=" ")!(IBDIV=IBSTRTDV)) S CLNCNAME=$E(IBREPRNT,1,$L(IBREPRNT)-1)
	F  S CLNCNAME=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME)) Q:CLNCNAME=""!IBQUIT  S IBCLINIC="" F  S IBCLINIC=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC)) Q:'IBCLINIC!IBQUIT  D
	.D HDRPG($P($G(^SC(IBCLINIC,0)),"^"),IBDIV)
	.;D PRNTOTHR^IBDF1B5(IBCLINIC,"ONCE FOR CLINIC")
	.S TDIGIT="" F  S TDIGIT=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,TDIGIT)) Q:TDIGIT=""!IBQUIT  S DFN="" F  S DFN=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,TDIGIT,DFN)) Q:'DFN!IBQUIT  D
	..S IBAPPT="" F  S IBAPPT=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,TDIGIT,DFN,IBAPPT)) Q:'(+IBAPPT)!IBQUIT  D APPT
	Q
	;
APPT	;print everything for single appt
	;input - DFN,IBAPPT,IBCLINIC
	I $$S^%ZTLOAD S (ZTSTOP,IBQUIT)=1 W !,"TASK STOPPED AT USER'S REQUEST" Q
	D PRNTFRMS^IBDF1B2
	D PRNTOTHR^IBDF1B5(IBCLINIC,"FOR EVERY APPOINTMENT")
	;D:$$EARLIEST(DFN,IBAPPT) PRNTOTHR^IBDF1B5(IBCLINIC,"ONLY FOR EARLIEST APPOINTMENT")
	D PRNTOTHR^IBDF1B5(IBCLINIC,"ONLY FOR EARLIEST APPOINTMENT")
	D:$$MULTIPLE^IBDF1B1A(DFN,IBAPPT) PRNTOTHR^IBDF1B5(IBCLINIC,"ONLY IF MULTIPLE APPOINTMENTS")
	I $D(^DPT(DFN,"S",IBAPPT,0)) S $P(^DPT(DFN,"S",IBAPPT,0),"^",21)=1 S:IBADDONS $P(^DPT(DFN,"S",IBAPPT,0),"^",22)=1
	Q
	;
HDRPG(CLINIC,IBDIV)	;print a header page for clinic
	N LN
	S LN="BEGINNING TO PRINT ENCOUNTER FORMS FOR "_CLINIC_$S(IBDIV'=" ":" IN "_IBDIV,1:"")_" on "_$E(IBDT,4,5)_"/"_$E(IBDT,6,7)_"/"_$E(IBDT,2,3)
	I $Y W @IOF
	W !!!!!,?((IOM-$L(LN))\2),LN
	W @IOF
	Q
TRLR	;prints a trailer page
	N LN
	S LN="PRINTING OF ENCOUNTER FORMS IS COMPLETE"_" for "_$E(IBDT,4,5)_"/"_$E(IBDT,6,7)_"/"_$E(IBDT,2,3)
	W !!!!!,?((IOM-$L(LN))\2),LN
	W @IOF
	Q
EARLIEST(DFN,APPT)	;determines if APPT is the earliest appt on the list for DFN
	D GETLIST^IBDF1B1A(DFN,IBDT)
	I APPT=$O(^TMP("IBDF",$J,"APPT LIST",DFN,""))
	Q $T

IBDF1B1A
IBDF1B1A	;ALB/CJM - ENCOUNTER FORM PRINT (IBDF1B continued - user options for printing- continuation of IBDF1B1); 3/1/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
ENCL	;for every clinic choosen find patient appointments on DATE
	N DFN,CLNCNAME,IBCLINIC,PNAME,TDIGIT,IBAPPT,IBAPTYP,IBX,Y,IBDIV,FIRST4
	S IBCLINIC="" F  S IBCLINIC=$O(^TMP("IBDF",$J,"C",IBCLINIC)) Q:'IBCLINIC  D
	.;
	.;
	.;get the clinic's division
	.S IBDIV=$$DIVISION^IBDF1B5(IBCLINIC) S:IBDIV="" IBDIV="^ "
	.
	.;setup defined for clinic or division? - otherwise there is nothing to print
	.Q:'($D(^SD(409.95,"B",IBCLINIC))!$D(^SD(409.96,"B",+IBDIV)))
	.S IBDIV=$P(IBDIV,"^",2)
	.;
	.;if restart, sorting is by division/clinic, and clinic is in the starting division, make sure the clinic does not precede the starting clinic
	.I IBDIV=IBSTRTDV,((IBSRT=1)!(IBSRT=3)) S CLNCNAME=$P($G(^SC(IBCLINIC,0)),"^") I CLNCNAME'=IBREPRNT,CLNCNAME']IBREPRNT Q
	.;
	.;find the appts
	.S IBAPPT=IBDT F  S IBAPPT=$O(^SC(IBCLINIC,"S",IBAPPT)) Q:$E(IBAPPT,1,7)'=IBDT  D
	..S IBX=0 F  S IBX=$O(^SC(IBCLINIC,"S",IBAPPT,1,IBX)) Q:IBX=""  D
	...S DFN=+$G(^SC(IBCLINIC,"S",IBAPPT,1,IBX,0)),PNAME=$P($$PT^IBEFUNC(DFN),"^") Q:PNAME=""
	...;check the appt status - may be cancelled
	...S IBAPTYP=$G(^DPT(DFN,"S",IBAPPT,0)) Q:"NT,I,"'[($P(IBAPTYP,"^",2)_",")
	...; -- check parameter if inpatient and don't print inpatients then quit
	...I $P(IBAPTYP,"^",2)="I",$P($G(^IBD(357.09,1,0)),"^",5)=0 Q
	...;
	...;if only printing add-ons don't print if already printed
	...I IBADDONS,IBREPRNT="" Q:$$PRINTED(DFN,IBAPPT)
	...I IBADDONS,IBREPRNT'="" Q:'$$ADDON(DFN,IBAPPT)
	...;
	...;case of sort by clinic,patient
	...;
	...;**** when the new SAC standards go into effect, increasing the allowable global subscript length, this line should be substituted for the line following it ****
	...;I IBSRT=1 S CLNCNAME=$P($G(^SC(IBCLINIC,0)),"^") Q:CLNCNAME=""  S ^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,$E(PNAME,1,10),DFN,+IBAPPT)=""
	...I IBSRT=1 S CLNCNAME=$P($G(^SC(IBCLINIC,0)),"^") Q:CLNCNAME=""  S ^TMP("IBDF",$J,"P",$E(IBDIV,1,20),$E(CLNCNAME,1,10),IBCLINIC,$E(PNAME,1,10),DFN,+IBAPPT)=""
	...;
	...;case of sort by terminal digit
	...I IBSRT=2 D
	....S TDIGIT=$$TDG(DFN),FIRST4=$E(TDIGIT,1,$L(TDIGIT)-5)
	....;
	....;if this is a restart and clinic is in the starting division, make sure the terminal digits (1st 4) do not precede the restart position
	....I IBDIV=IBSTRTDV,FIRST4'=IBREPRNT,FIRST4<IBREPRNT Q
	....;
	....S ^TMP("IBDF",$J,"P",IBDIV,TDIGIT,DFN,+IBAPPT)=IBCLINIC
	...;
	...;case of sort by clinic/terminal digits
	...;
	...;**** when the new SAC standards go into effect, increasing the allowable global subscript length, this line should be substituted for the line following it ****
	...;I IBSRT=3 S TDIGIT=$$TDG(DFN),CLNCNAME=$P($G(^SC(IBCLINIC,0)),"^") Q:CLNCNAME=""  S ^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,TDIGIT,DFN,+IBAPPT)=""
	...I IBSRT=3 S TDIGIT=$$TDG(DFN),CLNCNAME=$P($G(^SC(IBCLINIC,0)),"^") Q:CLNCNAME=""  S ^TMP("IBDF",$J,"P",$E(IBDIV,1,20),$E(CLNCNAME,1,10),IBCLINIC,TDIGIT,DFN,+IBAPPT)=""
	;
	;don't need the list of clinics anymore
	K ^TMP("IBDF",$J,"C")
	Q
	;
TDG(DFN)	;reformat patient's SSN into terminal digit order, then turns it into a cannonic number
	; returns either 0 or ssn in terminal digit order
	N X,Y,I,SSN
	S SSN=$P($G(^DPT(DFN,0)),"^",9)
	S Y="" F I=1:1 S X=$E(SSN,I) Q:X=""  I X?1N S Y=Y_X
	S Y=$S(Y'?9N:0,1:$E(Y,8,9)_$E(Y,6,7)_$E(Y,4,5)_$E(Y,1,3))
	Q +Y
	;
PRINTED(DFN,IBAPPT)	;returns 1 if the print manager already printed forms for this appt, 0 otherwise
	Q +$P($G(^DPT(DFN,"S",IBAPPT,0)),"^",21)
ADDON(DFN,IBAPPT)	;returns 1 if the print manager already printed forms for this appt as an add-on, 0 otherwise
	Q +$P($G(^DPT(DFN,"S",IBAPPT,0)),"^",22)
	;
GETLIST(DFN,IBDT)	;creates a list of the patient's appts on IBDT
	Q:'DFN!'IBDT
	N APPT,NODE,TO
	S TO=IBDT+.999999
	S ^TMP("IBDF",$J,"APPT LIST",DFN)=""
	S APPT=IBDT-.0001 F  S APPT=$O(^DPT(DFN,"S",APPT)) Q:'APPT!(APPT>TO)  D
	.S NODE=$G(^DPT(DFN,"S",APPT,0))
	.Q:"NT,I,"'[($P(NODE,"^",2)_",")
	.; -- check parameter
	.;I $P(NODE,"^",2)="I",$P($G(^IBD(357.09,1,0)),"^",5)=0 Q
	.S ^TMP("IBDF",$J,"APPT LIST",DFN,APPT)=+NODE
	Q
MULTIPLE(DFN,APPT)	;determines if patient=DFN has multiple appts on the list and APPT is the earliest
	N APT
	D GETLIST(DFN,IBDT)
	S APT=$O(^TMP("IBDF",$J,"APPT LIST",DFN,""))
	;Q:APT'=APPT 0
	I $O(^TMP("IBDF",$J,"APPT LIST",DFN,APT))
	Q $T
	;
DIVHAS(IBDIV)	;returns >0 if the division has anything to print, 0 otherwise
	Q:'$G(IBDIV) 0
	Q $L($O(^SD(409.96,"A",IBDIV,"")))
	;
CLNCHAS(CLINIC)	;returns>0 if the clinic has something to print
	N NODE,SETUP,I,FOUND
	S SETUP=$O(^SD(409.95,"B",CLINIC,0)) Q:'SETUP 0
	S NODE=$G(^SD(409.95,SETUP,0))
	S FOUND=0 F I=2,3,4,6,8,9 I $P(NODE,"^",I) S FOUND=1 Q
	Q:FOUND 1
	Q $L($O(^SD(409.95,"A",CLINIC,"")))

IBDF1B1B
IBDF1B1B	;ALB/CJM - ENCOUNTER FORM PRINT (IBDF1B continued - user options for printing- continuation of IBDF1B1); 3/1/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
ENDV	;entire divisions were choosen, find all clinics (with encounter forms defined)
	N IBCLN,IBDIV,NODE,DIVISION,ALL
	;
	;if ^TMP("IBDF",$J,"D","ALL") exists then all divisions were chosen
	S ALL=$S($D(^TMP("IBDF",$J,"D","ALL")):1,1:0)
	;
	;user did not select ALL, so make a list of the divisions he did choose
	I 'ALL S IBDIV=0 F  S IBDIV=$O(^TMP("IBDF",$J,"D",IBDIV)) Q:'IBDIV  S DIVISION(IBDIV)=""
	;
	;loop through all the clinics finding ones in selected divisions
	S IBCLN="" F  S IBCLN=$O(^SC(IBCLN)) Q:IBCLN=""  D
	.S NODE=$G(^SC(IBCLN,0))
	.;
	.;make sure it's in one of the selected divisions
	.S IBDIV=$P(NODE,"^",15)
	.I IBDIV,'ALL Q:'$D(DIVISION(IBDIV))
	.;
	.;check that location is a clinic
	.Q:$P(NODE,"^",3)'="C"
	.;
	.;if it's a restart make sure the IBDIV does not precede the starting division
	.I IBSTRTDV]" ",IBDIV S DIVISION=$P($G(^DG(40.8,IBDIV,0)),"^") I DIVISION'=IBSTRTDV,DIVISION']IBSTRTDV Q
	.;
	.;don't put it on the list if there is nothing to print
	.I '$$DIVHAS^IBDF1B1A(IBDIV),'$$CLNCHAS^IBDF1B1A(IBCLN) Q
	.;
	.;it passed all the tests, put it on the list
	.S ^TMP("IBDF",$J,"C",IBCLN)=""
	;
	;don't need list of divisions anymore
	K ^TMP("IBDF",$J,"D")
	Q

IBDF1B2
IBDF1B2	;ALB/CJM - ENCOUNTER FORM PRINT (IBDF1B1 continued - user options for printing); 3/1/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
PRNTFRMS	;print encounter form(s) for an appointment
	N FORMS,IBFORM,IBF
	;FORMS - list of forms to print for patient
	;IBF - a counter used to parse FORMS
	S FORMS=$$FORMS(IBCLINIC,DFN,IBAPPT)
	F IBF=1:1 S IBFORM=$P(FORMS,"^",IBF) Q:'IBFORM  D DRWFORM^IBDF2A(IBFORM,1,.IBDEVICE)
	Q
	;
FORMS(CLINIC,DFN,IBAPPT)	;returns a list of forms that should be printed for this patient in this clinic and this appt.
	N FORMS,SETUP,TYPE
	S FORMS=""
	S SETUP=$O(^SD(409.95,"B",+CLINIC,0)),SETUP=$G(^SD(409.95,+SETUP,0))
	S:$P(SETUP,"^",2) FORMS=$P(SETUP,"^",2)_"^"
	S:$P(SETUP,"^",6) FORMS=FORMS_$P(SETUP,"^",6)_"^"
	S:$P(SETUP,"^",8) FORMS=FORMS_$P(SETUP,"^",8)_"^"
	S:$P(SETUP,"^",9) FORMS=FORMS_$P(SETUP,"^",9)_"^"
	I $P(SETUP,"^",3)!$P(SETUP,"^",4) D
	.D TYPE
	.I TYPE="NEW",$P(SETUP,"^",4) S FORMS=FORMS_$P(SETUP,"^",4)_"^"
	.I TYPE="OLD",$P(SETUP,"^",3) S FORMS=FORMS_$P(SETUP,"^",3)_"^"
	Q FORMS
TYPE	;determine if patient is NEW or OLD at clinic - quick and dirty
	N APPT,NODE
	S TYPE="NEW"
	S APPT=DT-10000 F  S APPT=$O(^DPT(DFN,"S",APPT)) Q:('APPT)!(APPT'<IBAPPT)  S NODE=$G(^DPT(DFN,"S",APPT,0)) I +NODE=CLINIC,(($P(NODE,"^",2)="I")!($P(NODE,"^",2)="NT")!($P(NODE,"^",2)="")) S TYPE="OLD" Q
	Q

IBDF1B3
IBDF1B3	;ALB/CJM - ENCOUNTER FORM - (lists data that did not fit on the encounter form);4/28/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
OVERFLOW	;
	;loops through @IBARRAY("OVERFLOW"), printing in list form all the data that did not fit
	;
	N IBBLK,FIELD,TYPE,ITEM,RTN,PAGE
	Q:'$D(@IBARRAY("OVERFLOW"))
	S PAGE=1
	D HDR
	S IBBLK="" F  S IBBLK=$O(@IBARRAY("OVERFLOW")@(IBBLK)) Q:'IBBLK  D
	.Q:$$BLKDESCR^IBDFU1B(.IBBLK)
	.D BLOCKBRK
	.S FIELD="" F  S FIELD=$O(@IBARRAY("OVERFLOW")@(IBBLK,FIELD)) Q:'FIELD  D
	..S TYPE="" F  S TYPE=$O(@IBARRAY("OVERFLOW")@(IBBLK,FIELD,TYPE)) Q:TYPE=""  D
	...I TYPE="DYNAMIC LIST" D LIST Q
	...D FIELD
	D FOOTER
	K @IBARRAY("OVERFLOW")
	Q
HDR	;writes header to top of page
	N HDR
	S HDR="ADDITIONAL ENCOUNTER FORM DATA"
	W !,?((IOM-$L(HDR))/2),HDR,?(IOM-10),"PAGE: ",PAGE,!
	W !,"CLINIC:   ",$P($G(^SC(IBCLINIC,0)),"^")
	W !,"PATIENT:  " I $G(DFN) W $P($G(^DPT(DFN,0)),"^")
	W !,"FORM:     ",$P($G(^IBE(357,IBFORM,0)),"^"),!
	S PAGE=PAGE+1
	Q
BLOCKBRK	;writes a line to the report with the block name
	I $Y>(IOSL-3) W @IOF D HDR
	W !!,"BLOCK:  ",$P($G(^IBE(357.1,IBBLK,0)),"^")
	Q
FOOTER	;
	N FTR S FTR="END OF REPORT"
	W !!!,?((IOM-$L(FTR))\2),FTR,@IOF
	Q
FIELD	;displays the field (if list, displays all, if record, displays subfields)
	 N LASTITEM,RTN,LABEL,XLAB,YLAB,XIO,YIO,WIO,HIO,BLK,ITEM,PIECE,SPACING,DISPLAY,VALUE,FLDNAME,RTN,LIST,IFARY
	;
	Q:'$$FLDDESCR^IBDFU1A(FIELD)  ;gets the field description
	D RTNDSCR^IBDFU1B(.RTN) ;get the rtn used by the field
	S IFARY=RTN("DATA_LOCATION")
	W !
	I RTN("DATATYPE")=5 D TXTPRINT Q  ;wordprocessing fields treated differently
	;now do other than wordprocessing
	S LIST=$S((RTN("DATATYPE")=3)!(RTN("DATATYPE")=4):1,1:0)
	I LIST,TYPE="CURRENT" S ITEM=$G(@IBARRAY("OVERFLOW")@(IBBLK,FIELD,TYPE))
	I TYPE="NEXT",LIST D
	.I $Y>(IOSL-5) W @IOF D HDR
	.S ITEM=1 W !,?5,"**** LIST OF ",$E(RTN("NAME"),$F(RTN("NAME")," "),40)," ****" F  D LISTVAL D  Q:'ITEM
	..I VALUE'="" D SUBFLDS W !
	I TYPE="CURRENT" D
	.W !,?5,"**** ",$E(RTN("NAME"),$F(RTN("NAME")," "),40)_$S(LIST:" (#"_ITEM_")",1:"")_" ****"
	.I 'LIST D SNGLVAL
	.I LIST D LISTVAL
	.D SUBFLDS
	Q
SUBFLDS	;process each subfield
	N LAST,PVALUE
	S LAST=$$SFLDDSCR^IBDFU1A(FIELD,0) Q:'LAST
	F  D  S LAST=$$SFLDDSCR^IBDFU1A(FIELD,LAST) Q:'LAST
	.I RTN("DATATYPE")=1!(RTN("DATATYPE")=3) S PIECE=1
	.S PVALUE=$P($G(VALUE),"^",PIECE)
	.;don't use the label appearing on the encounter form - it might be 'context sensitive' - use description form package interface file
	.S LABEL=$$DATANAME^IBDFU1B(RTN,PIECE)
	.I $Y>(IOSL-3) W @IOF D HDR
	.W !,?5,LABEL_": ",PVALUE
	Q
	;
LIST	;displays the list
	N RTN,LABEL,ITEM,PIECE,VALUE,LIST,IFARY
	;
	S LIST=FIELD
	Q:$$LSTDESCR^IBDFU1(.LIST)  ;gets the list description
	S RTN=LIST("RTN")
	D RTNDSCR^IBDFU1B(.RTN) ;get the PACKAGE INTERFACE used
	S IFARY=RTN("DATA_LOCATION")
	W !
	;
	D
	.I $Y>(IOSL-5) W @IOF D HDR
	.S ITEM=1 W !,?5,"**** LIST OF ",$E(RTN("NAME"),$F(RTN("NAME")," "),40)," ****" F  D LISTVAL D  Q:'ITEM
	..I VALUE'="" D SUBCOLS W !
	Q
SUBCOLS	;process each subcolumn
	N PVALUE,SUB,PIECE
	F SUB=1:1:6 D
	.Q:(LIST("SCTYPE",SUB)'=1)
	.Q:'LIST("SCPIECE",SUB)
	.S PIECE=LIST("SCPIECE",SUB)
	.S PVALUE=$P($G(VALUE),"^",PIECE)
	.;don't use the label appearing on the encounter form - it might be 'context sensitive' - use description form package interface file
	.S LABEL=$$DATANAME^IBDFU1B(RTN,PIECE)
	.I $Y>(IOSL-3) W @IOF D HDR
	.W !,?5,LABEL_": ",PVALUE
	Q
	;
SNGLVAL	;output - VALUE
	S VALUE=$G(@IFARY)
	Q
LISTVAL	;input - ITEM=prior item processes, output - VALUE,ITEM=current item processed
	;
	S VALUE=$S(ITEM:$G(@IFARY@(ITEM)),1:"")
	;increment ITEM to next item
	S ITEM=$O(@IFARY@(ITEM))
	Q
TXTPRINT	;for printing a word-processing field
	N LINE,X,DIWL,DIWR,DIWF,LABEL
	S LINE=0,DIWR=IOM-10,DIWL=0,DIWF=""
	K ^UTILITY($J,"W",1)
	F  S LINE=$O(@IFARY@(LINE)) Q:'LINE  S X=$G(@IFARY@(LINE,0)) I X'="" D ^DIWP
	S LABEL=$E(RTN("NAME"),$F(RTN("NAME")," "),40)
	I $Y>(IOSL-5) W @IOF D HDR
	W !,?5,LABEL_": "
	S X=0 F  S X=$O(^UTILITY($J,"W",0,X)) Q:'X  D
	.I $Y>(IOSL-3) W @IOF D HDR
	.W !,?10,$G(^UTILITY($J,"W",0,X,0))
	K ^UTILITY($J,"W",1)
	Q

IBDF1B5
IBDF1B5	;ALB/CJM - ENCOUNTER FORM - (prints reports defined by print manager); 5/15/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
PRNTOTHR(CLINIC,PTYPE)	;prints reports defined for CLINIC for print condition=PTYPE
	N RTN,DIVISION,TYPE,RPT,SETUP,SIDES,EXCLUDE,IBNOW
	S TYPE=$O(^IBE(357.92,"B",PTYPE,"")) Q:'TYPE  ;get ien of PTYPE
	S DIVISION=+$$DIVISION(CLINIC)
	;
	;print all the reports defined for the entire division,unless excluded for the clinic
	I DIVISION S RTN="" F  S RTN=$O(^SD(409.96,"A",DIVISION,TYPE,RTN)) Q:'RTN  D
	.;IF (FOR EVERY APPOINTMENT) AND (EXCLUDED FROM CLINIC) THEN DON'T PRINT
	.Q:(PTYPE="FOR EVERY APPOINTMENT")&$D(^SD(409.95,"AE",CLINIC,RTN))
	.;
	.;IF (NOT FOR EVERY APPOINTMENT) AND (EXCLUDED FROM EVERY CLINIC) THEN DON'T PRINT
	.;
	.I (PTYPE'="FOR EVERY APPOINTMENT") D  Q:EXCLUDE
	..N APPT,CLNC S APPT=0,EXCLUDE=1
	..D GETLIST^IBDF1B1A(DFN,$E(IBAPPT,1,7))
	..;set EXCLUDE=0 if there is a clinic that does not exclude it
	..;F  S APPT=$O(^TMP("IBDF",$J,"APPT LIST",DFN,APPT)) Q:'APPT  S CLNC=+^TMP("IBDF",$J,"APPT LIST",DFN,APPT) I '$D(^SD(409.95,"AE",CLNC,RTN)) S EXCLUDE=0 Q
	..F  S APPT=$O(^TMP("IBDF",$J,"APPT LIST",DFN,APPT)) Q:'APPT  S CLNC=+^TMP("IBDF",$J,"APPT LIST",DFN,APPT) I '$D(^SD(409.95,"AE",CLNC,RTN)) S IBFIRST="" D  I $D(IBFIRST) K IBFIRST Q
	...I CLNC=CLINIC D
	....I PTYPE="ONLY FOR EARLIEST APPOINTMENT" Q:$D(^XTMP("IBDFFIRST"_$E(APPT,1,7),DFN,RTN))  S EXCLUDE=0,^XTMP("IBDFFIRST"_$E(APPT,1,7),DFN,RTN)="" I '$D(^XTMP("IBDFFIRST"_$E(APPT,1,7),0)) D NOW,SNODE
	....I PTYPE="ONLY IF MULTIPLE APPOINTMENTS" Q:$D(^XTMP("IBDFMULT"_$E(APPT,1,7),DFN,RTN))  S EXCLUDE=0,^XTMP("IBDFMULT"_$E(APPT,1,7),DFN,RTN)="" I '$D(^XTMP("IBDFMULT"_$E(APPT,1,7),0)) D NOW,SNODE1
	....Q
	.;
	.S RPT=0,SETUP=$O(^SD(409.96,"A",DIVISION,TYPE,RTN,0)) I SETUP F  S RPT=$O(^SD(409.96,"A",DIVISION,TYPE,RTN,SETUP,RPT)) Q:'RPT  S SIDES=$P($G(^SD(409.96,SETUP,1,RPT,0)),"^",3) D PRINT(SIDES)
	;
	;print all the reports defined for the clinic
	S RTN="" F  S RTN=$O(^SD(409.95,"A",CLINIC,TYPE,RTN)) Q:'RTN  S SETUP=$O(^SD(409.95,"A",CLINIC,TYPE,RTN,0)),RPT=0 I SETUP F  S RPT=$O(^SD(409.95,"A",CLINIC,TYPE,RTN,SETUP,RPT)) Q:'RPT   D
	.S SIDES=$P($G(^SD(409.95,SETUP,1,RPT,0)),"^",3) D PRINT(SIDES)
	Q
PRINT(SIDES)	;fetches the package interface record,prints the report
	;SIDES=type of printing - simplex, duplex long-edge, duplex short-edge
	N IBRTN S IBRTN=RTN N RTN,RPT
	D RTNDSCR^IBDFU1B(.IBRTN) ;get the interface description
	Q:IBRTN("ACTION")'=4  ;quit if the interface isn't the type that prints a report
	;health summaries always use the same rtn to print
	I IBRTN("HSMRY?")=1 Q:'IBRTN("HSMRY")  S IBRTN("RTN")="PRNTSMRY^IBDFN5("_IBRTN("HSMRY")_")"
	N TYPE,DIVISION,CLINIC,QUIT,CLNCNAME,PNAME,PTYPE,TDIGIT
	;go to duplex?
	D
	.I SIDES=1,IBDEVICE("DUPLEX_LONG")]"" W IBDEVICE("DUPLEX_LONG") Q
	.I SIDES=2,IBDEVICE("DUPLEX_SHORT")]"" W IBDEVICE("DUPLEX_SHORT") Q
	.I IBDEVICE("SIMPLEX")]"" W IBDEVICE("SIMPLEX") Q
	.I $Y W @IOF
	.I SIDES=0,IBDEVICE("SIMPLEX")]"" W IBDEVICE("SIMPLEX")
	N A S A=$$DORTN^IBDFU1B(.IBRTN)
	;go back to simplex
	D
	.I SIDES=1,IBDEVICE("DUPLEX_LONG")]"",IBDEVICE("SIMPLEX")]"" W IBDEVICE("SIMPLEX") Q
	.I SIDES=2,IBDEVICE("DUPLEX_SHORT")]"",IBDEVICE("SIMPLEX")]"" W IBDEVICE("SIMPLEX") Q
	Q
DIVISION(CLINIC)	;returns the clinic's division - format is IEN^division's name
	N DIV,NAME
	Q:'$G(CLINIC) ""
	S DIV=+$P($G(^SC(CLINIC,0)),"^",15)
	I DIV S NAME=$P($G(^DG(40.8,DIV,0)),"^")
	I $L($G(NAME)) S DIV=DIV_"^"_NAME
	E  S DIV=""
	Q DIV
IFOTHR(CLINIC,TYPE)	;returns a 1 if there are reports defined for CLINIC for print condition=TYPE,0 if otherwise
	N RTN,DIVISION,COUNT
	S COUNT=0
	S TYPE=$O(^IBE(357.92,"B",TYPE,"")) Q:'TYPE 0 ;get ien of TYPE
	S DIVISION=+$$DIVISION(CLINIC)
	;counts all the reports defined for the entire division
	I DIVISION S RTN="" F  S RTN=$O(^SD(409.96,"A",DIVISION,TYPE,RTN)) Q:'RTN  S:'$D(^SD(409.95,"AE",CLINIC,RTN)) COUNT=COUNT+1 Q:COUNT
	;counts all the reports defined for the clinic
	S RTN="" F  S RTN=$O(^SD(409.95,"A",CLINIC,TYPE,RTN)) Q:'RTN  S COUNT=COUNT=COUNT+1 Q:COUNT
	Q COUNT
NOW	N %,%H,%I D NOW^%DTC S IBNOW=% Q
SNODE	S ^XTMP("IBDFFIRST"_$E(IBAPPT,1,7),0)=$E(IBAPPT,1,7)_"^"_DT Q
SNODE1	S ^XTMP("IBDFMULT"_$E(IBAPPT,1,7),0)=$E(IBAPPT,1,7)_"^"_DT Q

IBDF1BA
IBDF1BA	;ALB/CJM - ENCOUNTER FORM (user options for printing - continuation of IBDF1B); 3/1/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
TERMSTRT	;get terminal digit to restart from - OUTPUT=IBREPRNT
	S IBREPRNT="",DIR(0)="F^4:5",DIR("A")="ENTER THE LAST 4 DIGITS OF THE SSN TO BEGIN REPRINT FROM",DIR("?")="ENTER THE LAST FOUR DIGITS OF THE SSN OF THE LAST PATIENT FOR WHOM FORMS WERE PRINTED"
	F  D ^DIR Q:$D(DIRUT)!(Y=-1)  D  Q:IBREPRNT'=""
	.I Y'?4N W !,*7,"MUST BE 4 NUMBERS!" Q
	.S IBREPRNT=Y,IBREPRNT=+($E(IBREPRNT,3,4)_$E(IBREPRNT,1,2))
	K DIR
	Q
CLNCSTRT	;get clinic and division to restart from,OUTPUT=IBREPRNT (name of clinic) and IBSTRTDV (division to restart from)
	;
	N NODE
	S IBREPRNT=""
	S DIR(0)="409.95,.01",DIR("A")="ENTER CLINIC TO BEGIN REPRINT FROM",DIR("?")="ENTER THE LAST CLINIC FOR WHICH ANY FORMS WERE PRINTED"
	D ^DIR K DIR I $D(DIRUT)!(+Y<0) Q
	S NODE=$G(^SC(+Y,0))
	S IBREPRNT=$P(NODE,"^")
	S IBSTRTDV=+$P(NODE,"^",15) I IBSTRTDV S IBSTRTDV=$P($G(^DG(40.8,IBSTRTDV,0)),"^")
	Q
	;
SEARCH	;get the appointment data on a patient, put in IBTMP array, indexed by appointment
	;screens out any appts in clinics with nothing defined to print
	N IBX,IBLN,CLINIC,APPT
	S (VASD("F"),VASD("T"))=IBDT,VASD("W")=129 D SDA^VADPT Q:(VAERR!'$D(^UTILITY("VASD",$J)))
	S IBX="" F  S IBX=$O(^UTILITY("VASD",$J,IBX)) Q:IBX=""  D
	. S IBLN=^UTILITY("VASD",$J,IBX,"I"),APPT=+$P(IBLN,"^"),CLINIC=$P(IBLN,"^",2)
	.Q:'APPT!'CLINIC
	.Q:'($D(^SD(409.95,"B",CLINIC))!$D(^SD(409.96,"B",+$$DIVISION^IBDF1B5(CLINIC))))
	.;^UTILITY("VASD",$J,IBX,"E")=(EXTERNAL FORMAT) appt date time^clinic name^status^appt type
	.S IBTMP(APPT)=DFN_"^"_CLINIC_"^"_IBNM_"^"_^UTILITY("VASD",$J,IBX,"E")
	K VASD,VAERR,^UTILITY("VASD",$J)
	Q
	;
DISP	;display patients/clinics appointments found and get users choice
	;sort type is by clinic,patient
	N CLNCIEN,CLNCNAME
	I '$D(IBTMP) W !!,?5,"No Active Appointments for ",IBNM," on",!,"this date in any clinic or division that has forms or reports defined to print",! G ENDDISP
	I '$D(IBTMP) W !!,?10,"No Active Appointments in a Clinic with an Encounter Form",!,?10,"for ",IBNM," on this date.",! G ENDDISP
	W !!,"Appointments for ",IBNM,!
	S IBX="" F IBI=1:1 S IBX=$O(IBTMP(IBX)) Q:IBX=""  S IBLN=IBTMP(IBX) W !,$J(IBI,3),"  ",$E($P(IBLN,"^",5),1,20),?25,"   " F IBJ=4,6,7 W "  ",$P(IBLN,"^",IBJ)
	S DIR(0)="LO^1:"_(IBI-1),DIR("A")="    Select Appointments" D ^DIR K DIR G:$D(DIRUT) ENDDISP
	S IBX="" F IBI=1:1 S IBX=$O(IBTMP(IBX)) Q:IBX=""  I Y[(IBI_",") D
	.S CLNCIEN=$P(IBTMP(IBX),"^",2),CLNCNAME=$P(IBTMP(IBX),"^",5)
	.;
	.;list format - ^TMP("IBDF",$J,"P"," ",division name(but set it to " " because for selecting single appts sort by division not needed),clinic name,clinic ien,patient name,dfn,appt)=""
	.S ^TMP("IBDF",$J,"P"," ",$E(CLNCNAME,1,25),CLNCIEN,$E(IBNM,1,25),DFN,IBX)=""
	.;also keep an index by ...,"APPT LIST",DFN,APPT)
	.S ^TMP("IBDF",$J,"APPT LIST",DFN,IBX)=""
ENDDISP	K IBTMP,IBX,IBI,IBJ,IBLN,DTOUT,DUOUT,DIRUT,DIROUT,X,Y,^UTILITLY("VASD",$J)
	Q
	;
STARTDIV()	;asks what division to restart the job from and returns division name, or "" if user declines
	N IBDIV
	K DIC S DIC="^DG(40.8,",DIC(0)="AEQMN",DIC("A")="SELECT THE DIVISION TO START THE REPRINT FROM:"
	S IBDIV=$O(^DG(40.8,0)) S:IBDIV DIC("B")=$P($G(^DG(40.8,IBDIV,0)),"^")
	D ^DIC K DIC
	I (+Y<0)!$D(DTOUT)!$D(DUOUT) Q ""
	Q $P(Y,"^",2)
SORTBY	;sort by clinic/patient, clinic/terminal digit, or terminal digit?
	K DIR S DIR(0)="S^1:Division/Clinic/Patient Name;2:Division/Terminal Digits;3:Division/Clinic/Terminal Digits"
	S DIR("?")="Enter '1' for sorting by Division/Clinic/Patient Name or '2' to sort by Division/Terminal Digits or '3' to sort by Division/Clinic/Terminal Digits."
	S DIR("A")="How should the output be SORTED?",DIR("B")="1" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
	I Y'=1,Y'=2,Y'=3 S QUIT=1 Q
	S IBSRT=Y
	Q

IBDF1C
IBDF1C	;ALB/CJM - ENCOUNTER FORM (print sample form);FEB 11,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;This print routine forces queueing - so that allocation problems do not occur.
	;
PRINT(IBFORM)	;
	N IBQUIT,NODE,HT,WD S IBQUIT=0
	D FULL^VALM1
	S VALMBCK="R"
	;
	I ('$G(IBFORM))!$G(IBTKBLK) N IBFORM D FORM G:IBQUIT EXIT
	I $G(IBFORM) S NODE=$G(^IBE(357,IBFORM,0)),WD=$P(NODE,"^",9),HT=$P(NODE,"^",10) K NODE
	D DEVICE,HOME^%ZIS G EXIT
	;
QUEUED	; entry
	D FORM^IBDF2A(IBFORM,0)
	I $D(ZTQUEUED) S ZTREQ="@"
	;
EXIT	;
	K ZTSK,Y,X,J,D0,%,%I,D,DIC,DY,DX,I
	Q
	;
DEVICE	;
	W !,"** You must queue the form to print. **"
	W !,*7,"** This Encounter Form requires "_WD_" columns and a page length of "_HT_" lines. **",!
	;
	;queuing is automatic - the device is not opened
	K %IS,%ZIS,IOP S %ZIS="N0Q",%ZIS("A")="Printer to queue to: ",%ZIS("B")="",%ZIS("S")="I $E($P($G(^%ZIS(2,+$G(^%ZIS(1,Y,""SUBTYPE"")),0)),U),1,2)=""P-""" D ^%ZIS
	Q:POP
	S ZTRTN="QUEUED^IBDF1C",ZTSAVE("IBFORM")="",ZTDESC="ENCOUNTER FORM",ZTDTH=$H D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
	Q
	;
FORM	;returns IBFORM
	N P4
	S IBFORM=0
	;if the user used the '=' syntax then assume he wants to choose from the list
	S P4=$P(XQORNOD(0),"^",4)
	I P4["==" S P4=$P(P4,"==")_"="_$P(P4,"==",2),$P(XQORNOD(0),"^",4)=P4
	I $G(VALM("TITLE"))["FORMS",$P(P4,"=",2) D
	.X IBAPI("SELECT")
	.S:IBFORM Y(0)=$G(^IBE(357,IBFORM,0))
	E  D
	.K DIR S DIR(0)="YA",DIR("A")="Do you want to print a form from the toolkit? "
	.D ^DIR K DIR Q:(Y=-1)!($D(DIRUT))
	.K DIC S DIC("S")=$S(Y:"I $P(^(0),U,7),$P(^(0),U)'=""GARBAGE"",$P(^(0),U)'=""TOOL KIT""",1:"I '$P(^(0),U,7)"),DIC=357,DIC(0)="AEQZ",DIC("A")="Select any FORM by name: "
	.D ^DIC K DIC Q:$D(DIRUT)!(Y<0)
	.S IBFORM=+Y
	I 'IBFORM S IBQUIT=1 Q
	S WD=$P($G(Y(0)),"^",9),HT=$P($G(Y(0)),"^",10)
	Q

IBDF2A
IBDF2A	;ALB/CJM - ENCOUNTER FORM (builds form and prints it);NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
FORM(IBFORM,WITHDATA)	;prints FORM - defines IBDEVICE array
	;input variables - IBFORM=ien of the form, WITHDATA=1 if the form should be completed with data 
	;
	N IBDEVICE
	;
	D DEVICE^IBDFUA(0,.IBDEVICE)
	D DRWFORM(IBFORM,WITHDATA,.IBDEVICE)
EXIT	;
	;
	D KPRNTVAR^IBDFUA ;kills the screen and graphics parameters
	K X,Y,I
	Q
DRWFORM(IBFORM,WITHDATA,IBDEVICE)	;prints IBFORM - IBDEVICE array already defined, must be passed by reference
	N RTNLIST,NODE,IBPFID,IBARRAY,LINES,HAND,IBPRINT,TYPE,UNIT,PRINT
	;
	Q:'$$FORMDSCR^IBDFU1C(.IBFORM)
	D PRNTPRMS^IBDFU1C(.IBPRINT,WITHDATA,1,0,1)
	;
	D DEVSETUP^IBDF2A1(.IBFORM,.IBDEVICE)
	K ^TMP("IB",$J,"INTERFACES"),^TMP("IBDF",$J,"FORM"),^("OVERFLOW")
	S IBPFID=""
	;
	;for forms other than toolkit, always use compiled version
	I 'IBFORM("TOOLKIT"),'IBFORM("COMPILED") D COMPILE^IBDF19 Q:'IBFORM("COMPILED")
	;
	;if printing a form with patient data to paper get id for form tracking
	I '$G(IBDSAMP),IBFORM("COMPILED"),IBPRINT("WITH_DATA"),'IBDEVICE("CRT") S IBPFID=+$$FID^IBDF18C(DFN,IBAPPT,1,IBFORM("TYPE"),IBCLINIC)
	;
	D ARRAYS^IBDFU1C(.IBFORM,.IBARRAY)
	I 'IBFORM("TOOLKIT"),WITHDATA D JUSTDATA(WITHDATA)
	I IBFORM("TOOLKIT") D DRWBLKS
	;
	;if no graphics and not PCL replace graphics with something printable
	I 'IBDEVICE("PCL") D REPLACE
	;
	;can not do underlining on a CRT
	I IBDEVICE("CRT") S IBARRAY("UNDERLINES")="IBARRAY(""UNDERLINES"")"
	;
	;print the form
	D LNPRINT^IBDF2F($G(IBPFID))
	;
	;print the overflow report
	I IBPRINT("WITH_DATA") D OVERFLOW^IBDF1B3
	;
	K ^TMP("IB",$J,"INTERFACES"),^TMP("IBDF",$J,"FORM")
	;
	;reset printer defaults if PCL5
	I $G(IBDEVICE("PCL")) S %ZIS="0",IOP=ION_";"_IOST_";"_IOM_";"_IOSL D ^%ZIS
	Q
	;
DRWBLKS	;draws all the form's blocks
	N IBBLK,RTNLIST
	S IBBLK="" F  S IBBLK=$O(^IBE(357.1,"C",IBFORM,IBBLK)) Q:'IBBLK  D DRWBLOCK^IBDF2A1(IBBLK,0)
	Q
	;
JUSTDATA(WITHDATA)	;draws the form's data fields and dynamic selection lists, just the portion that may change with data
	;WITHDATA means to fill in with data
	;
	N IBBLK,RTNLIST,IBFLD,IBLIST,SUB,NODE,IBPRINT
	;
	D PRNTPRMS^IBDFU1C(.IBPRINT,WITHDATA,0,0,1)
	;
	I IBDEVICE("LISTMAN") N IBWARN S IBWARN=0
	S IBBLK="" F  S IBBLK=$O(^IBE(357.1,"C",IBFORM,IBBLK)) Q:'IBBLK  D
	.Q:$$BLKDESCR^IBDFU1B(.IBBLK)
	.S IBFLD="" F  S IBFLD=$O(^IBE(357.5,"C",IBBLK,IBFLD)) Q:'IBFLD  D DATAFLD^IBDF2B(IBFLD)
	.S:'IBPRINT("WITH_DATA") IBPRINT("ENTIRE")=1 S IBLIST="" F  S IBLIST=$O(^IBE(357.2,"AD",IBBLK,IBLIST)) Q:'IBLIST  D PRINTLST^IBDF2D(IBLIST)
	.I IBDEVICE("LISTMAN") S SUB=0 F  S SUB=$O(^IBE(357.1,IBBLK,"B",SUB)) Q:'SUB  S NODE=$G(^IBE(357.1,IBBLK,"B",SUB,0)) D DRWSTR^IBDFU(+$P(NODE,"^")\1,+$P(NODE,"^",2),"[ ]")
	Q
	;
REPLACE	;replace objects requiring PCL with plain text
	N IBROW,IBCOL,IBBLK
	D PRNTPRMS^IBDFU1C(.IBPRINT,0,1,0,1)
	S IBBLK("X")=0,IBBLK("Y")=0
	I 'IBDEVICE("GRAPHICS") D
	.S IBROW="" F  S IBROW=$O(@IBARRAY("GRAPHICS")@(IBROW)) Q:IBROW=""  S IBCOL="" F  S IBCOL=$O(@IBARRAY("GRAPHICS")@(IBROW,IBCOL)) Q:IBCOL=""  D DRWSTR^IBDFU(IBROW,IBCOL,$G(@IBARRAY("GRAPHICS")@(IBROW,IBCOL)),"G")
	.S IBARRAY("GRAPHICS")="IBARRAY(""GRAPHICS"")"
	;
	;replace bubbles with "[ ]"
	S IBROW="" F  S IBROW=$O(@IBARRAY("BUBBLES")@(IBROW)) Q:IBROW=""  S IBCOL="" F  S IBCOL=$O(@IBARRAY("BUBBLES")@(IBROW,IBCOL)) Q:IBCOL=""  D DRWSTR^IBDFU(IBROW\1,IBCOL,"[ ]")
	S IBARRAY("BUBBLES")="IBARRAY(""BUBBLES"")"
	;
	;now replace hand print fields
	S IBROW="" F  S IBROW=$O(@IBARRAY("HAND_PRINT")@(IBROW)) Q:IBROW=""  S IBCOL="" F  S IBCOL=$O(@IBARRAY("HAND_PRINT")@(IBROW,IBCOL)) Q:IBCOL=""  S HAND=0 F  S HAND=$O(@IBARRAY("HAND_PRINT")@(IBROW,IBCOL,HAND)) Q:'HAND  D
	.N ROW
	.S NODE=$G(@IBARRAY("HAND_PRINT")@(IBROW,IBCOL,HAND)),WIDTH=$P(NODE,"^",3),LINES=$P(NODE,"^",6),TYPE=$P(NODE,"^",14),(UNIT,PRINT)="" I $P(NODE,"^",17) S NODE=$G(^IBE(359.1,$P(NODE,"^",17),0)),UNIT=$P(NODE,"^",11),PRINT=$P(NODE,"^",5)
	.Q:('WIDTH)!('TYPE)
	.S STRING=""
	.S:LINES'>0 LINES=1
	.S ROW=IBROW
	.I TYPE=1 D CNVRTLEN^IBDF2D1(WIDTH,.WIDTH),CNVRTHT^IBDF2D1(LINES,.LINES)
	.I TYPE=2 F  Q:LINES'>0  D  S LINES=LINES-1,ROW=IBROW+2
	..N REPLACE,A,I
	..I IBFORM("WIDTH")>96 S $P(STRING,"___|",WIDTH+1)="",REPLACE("_")="    " F I=1:1:$L(PRINT) S A=$E(PRINT,I) S:A'="_" REPLACE(A)=" "_A_"  "
	..I IBFORM("WIDTH")'>96 S $P(STRING,"__|",WIDTH+1)="",REPLACE("_")="   " F I=1:1:$L(PRINT) S A=$E(PRINT,I) S:A'="_" REPLACE(A)=" "_A_" "
	..S:$L(UNIT) STRING=STRING_" "_UNIT
	..I $L(PRINT) S PRINT=$$REPLACE^XLFSTR(PRINT,.REPLACE)
	..D:$L(PRINT) DRWSTR^IBDFU(ROW,IBCOL,PRINT,"",$L(STRING))
	..D DRWSTR^IBDFU(ROW+1,IBCOL,STRING,"",$L(STRING))
	.I TYPE=1 S $P(STRING,"_",WIDTH+1)="_" D DRWSTR^IBDFU(ROW+LINES-1,IBCOL,STRING,"")
	S IBARRAY("HAND_PRINT")="IBARRAY(""HAND_PRINT"")"
	Q

IBDF2A1
IBDF2A1	;ALB/CJM - ENCOUNTER FORM (IBDF2A continued);NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
DEVSETUP(IBFORM,IBDEVICE)	;set up the device for the form
	;pass IBFORM, IBDEVICE by reference
	;sets device to no wrap
	;sets "ROW_HT" and "COL_WIDTH" in IBDEVICE
	;
	S X=0 X $G(^%ZOSF("RM")) K X ;sets device to no wrapping
	;
	I $G(IBDEVICE("PCL")) D
	.S IOSL=IBFORM("PAGE_HT")
	.W $C(27),"E"
	.S IOINHI=$C(27)_"(s3B",IOINORM=$C(27)_"(s0B"
	.S IBDEVICE("DUPLEX_SHORT")=$C(27)_"&l2S",IBDEVICE("SIMPLEX")=$C(27)_"&l0S",IBDEVICE("DUPLEX_LONG")=$C(27)_"&l1S"
	.S IORVON=$C(27)_"*v0n1o1T",IORVOFF=$C(27)_"*v0T"
	.S IOXY="W $C(27)_""&a""_DX_""c""_DY_""R"""
	.;set to paper to letter size, portrait mode
	.W $C(27),"&l2a0O"
	.D
	..I IBFORM("WIDTH")>96 W $C(27)_"(s0p16.67h8.5v0s0b0T" S IBDEVICE("COL_WIDTH")=720/16.67,(IOINHI,IOINORM)="" Q
	..I IBFORM("WIDTH")>80 W $C(27)_"(s0p12h10v0s0b0T" S IBDEVICE("COL_WIDTH")=720/12 Q
	..W $C(27)_"(s0p10h12v0s0b0T" S IBDEVICE("COL_WIDTH")=720/10
	.D
	..;!!!!!!!!!!Make the VMI a bit bigger? Seems to look good at VMI=6, and getting too cramped
	..;!!!!!!I IBFORM("PAGE_HT")>72 W $C(27),"&l5.6667C" S IBDEVICE("ROW_HT")=85.0005 Q  ;sets the VMI=5.6667, to get 8 lines per inch Q
	..I IBFORM("PAGE_HT")>72 W $C(27),"&l6C" S IBDEVICE("ROW_HT")=90 Q  ;sets the VMI=5.6667, to get 8 lines per inch Q
	..I IBFORM("PAGE_HT")>60 W $C(27),"&l6.6667C" S IBDEVICE("ROW_HT")=100.0005 Q  ;sets the VMI=6.6667, to get 7.2 lines per inch
	..W $C(27),"&l8C" S IBDEVICE("ROW_HT")=120 ;sets the VMI=8, to get 6 lines per inch
	;
	I '$G(IBDEVICE("PCL")) D
	.S (DX,DY)=0 X $G(^%ZOSF("XY")) K DX,DY ;make sure $X,$Y=0
	Q
	;
DRWBLOCK(IBBLK,NOOFFSET)	;IBBLK should be passed by reference, is an array containing the block description
	;NOOFFSET=1  means don't offset the block on the form
	;
	N IBFIELD,IBLIST,IBLINE,IBTEXT,IBWRTCNT,HDROS,BOX,OPTIONS,WIDTH,SUB,NODE,STRING,IBLINES,TYPE
	;
	;IBPRINT parameters may be altered durring this routine - make sure the original is restored after execution
	D SAVE^IBDF2A2(.IBPRINT,.IBPRINT)
	;
	Q:$$BLKDESCR^IBDFU1B(.IBBLK)
	I $G(NOOFFSET) S (IBBLK("X"),IBBLK("Y"))=0
	I (IBBLK("X")'=+IBBLK("X"))!(IBBLK("Y")'=+IBBLK("Y")) G EXIT  ;location not known
	;
	I 'IBPRINT("COMPILING_BLOCKS"),('$D(^IBE(357.1,IBBLK,"S"))!'$D(^IBE(357.1,IBBLK,"V"))!'$D(^IBE(357.1,IBBLK,"B"))!'$D(^IBE(357.1,IBBLK,"H"))) S IBPRINT("COMPILING_BLOCKS")=1,IBPRINT("WRITE_IF_COMPILING")=1
	I IBPRINT("COMPILING_BLOCKS") S (IBWRTCNT("S"),IBWRTCNT("V"),IBWRTCNT("B"),IBWRTCNT("H"))=0 D UNCMPBLK^IBDF19(IBBLK)
	I 'IBPRINT("COMPILING_BLOCKS") D WCMP^IBDF2A2
	I IBPRINT("COMPILING_BLOCKS") D  G:'IBPRINT("WRITE_IF_COMPILING") EXIT
	.N TEMP S TEMP=IBPRINT("WITH_DATA"),IBPRINT("WITH_DATA")=0
	.S IBLIST="" F  S IBLIST=$O(^IBE(357.2,"C",IBBLK,IBLIST)) Q:'IBLIST  D PRINTLST^IBDF2D(IBLIST)
	.S IBFIELD="" F  S IBFIELD=$O(^IBE(357.93,"C",IBBLK,IBFIELD)) Q:'IBFIELD  D MFLD^IBDF2G(IBFIELD)
	.S IBFIELD="" F  S IBFIELD=$O(^IBE(359.94,"C",IBBLK,IBFIELD)) Q:'IBFIELD  D HFLD^IBDF2H(IBFIELD)
	.S ^IBE(357.1,IBBLK,"S",0)="^357.11A^"_IBWRTCNT("S")_"^"_IBWRTCNT("S")
	.S ^IBE(357.1,IBBLK,"V",0)="^357.12A^"_IBWRTCNT("V")_"^"_IBWRTCNT("V")
	.S ^IBE(357.1,IBBLK,"B",0)="^357.13A^"_IBWRTCNT("B")_"^"_IBWRTCNT("B")
	.S ^IBE(357.1,IBBLK,"H",0)="^357.14A^"_IBWRTCNT("H")_"^"_IBWRTCNT("H")
	.S IBPRINT("WITH_DATA")=TEMP
	;
	;now write the uncompiled part of the block
	S IBPRINT("COMPILING_BLOCKS")=0
	K IBWRTCNT
	I IBDEVICE("LISTMAN") N IBWARN S IBWARN=0 ;flag set to 1 if a warning is already displayed - don't want to display multiple warnings, users find it aggravating
	S BOX=$S(IBBLK("BOX")=1:1,1:0)
	D:BOX DRWBOX^IBDFU(0,0,IBBLK("W"),IBBLK("H"))
	I IBBLK("HDR")'="" D
	.S HDROS=0
	.S WIDTH=IBBLK("W")-(2*BOX)
	.S OPTIONS=$TR(IBBLK("HDISP"),"C","")
	.S OPTIONS=$TR(OPTIONS,"R","r")
	.I IBBLK("HDISP")["C",$L(IBBLK("HDR"))<WIDTH S HDROS=(WIDTH-$L(IBBLK("HDR")))\2
	.I BOX D DRWSTR^IBDFU(1,1,$J("",HDROS)_$E(IBBLK("HDR"),1,WIDTH),OPTIONS,WIDTH)
	.I 'BOX D DRWSTR^IBDFU(0,0+HDROS,$E(IBBLK("HDR"),1,WIDTH),OPTIONS)
	S IBLINE="" F  S IBLINE=$O(^IBE(357.7,"C",IBBLK,IBLINE)) Q:'IBLINE  D PRNTLINE^IBDF2E(IBLINE)
	S IBTEXT="" F  S IBTEXT=$O(^IBE(357.8,"C",IBBLK,IBTEXT)) Q:'IBTEXT  D PRNTTEXT^IBDF2E(IBTEXT)
	S IBFIELD="" F  S IBFIELD=$O(^IBE(357.5,"C",IBBLK,IBFIELD)) Q:'IBFIELD  D DATAFLD^IBDF2B(IBFIELD)
	I IBPRINT("WITH_DATA") S IBPRINT("ENTIRE")=0,IBLIST="" F  S IBLIST=$O(^IBE(357.2,"AD",IBBLK,IBLIST)) Q:'IBLIST  D PRINTLST^IBDF2D(IBLIST)
	;
	;NOTE: bubbles & hand print fields have been written to file, but not to the array for list processor
	;
	G:'IBDEVICE("LISTMAN") EXIT
	S SUB=0 F  S SUB=$O(^IBE(357.1,IBBLK,"B",SUB)) Q:'SUB  S NODE=$G(^IBE(357.1,IBBLK,"B",SUB,0)) D DRWSTR^IBDFU(+$P(NODE,"^")\1,+$P(NODE,"^",2),"[ ]")
	S SUB=0 F  S SUB=$O(^IBE(357.1,IBBLK,"H",SUB)) Q:'SUB  S NODE=$G(^IBE(357.1,IBBLK,"H",SUB,0)) S TYPE=$P(NODE,"^",14),WIDTH=+$P(NODE,"^",3) I TYPE,WIDTH D
	.N UNIT,PRINT,REPLACE,A,I,TYPENODE
	.S IBLINES=$P(NODE,"^",6) S:IBLINES'>0 IBLINES=1
	.S STRING="",ROW=+NODE
	.;
	.;replace the hand print fields - overlay with print format and label for units
	.;TYPE=2 means use ICR, may have a print format and datatype
	.I TYPE=2 D
	..S TYPENODE=$P(NODE,"^",17) I TYPENODE S TYPENODE=$G(^IBE(359.1,TYPENODE,0))
	..S UNIT=$P(TYPENODE,"^",11),PRINT=$P(TYPENODE,"^",5)
	..F  Q:IBLINES'>0  D  S IBLINES=IBLINES-1,ROW=ROW+2
	...I IBFORM("WIDTH")>96 S $P(STRING,"___|",WIDTH+1)="",REPLACE("_")="    " F I=1:1:$L(PRINT) S A=$E(PRINT,I) S:A'="_" REPLACE(A)=" "_A_"  "
	...I IBFORM("WIDTH")'>96 S $P(STRING,"__|",WIDTH+1)="",REPLACE("_")="   " F I=1:1:$L(PRINT) S A=$E(PRINT,I) S:A'="_" REPLACE(A)=" "_A_" "
	...S:$L(UNIT) STRING=STRING_" "_UNIT
	...I $L(PRINT) S PRINT=$$REPLACE^XLFSTR(PRINT,.REPLACE)
	...D DRWSTR^IBDFU(ROW,+$P(NODE,"^",2),PRINT,"R",$L(STRING))
	...D DRWSTR^IBDFU(ROW+1,+$P(NODE,"^",2),STRING,"R",$L(STRING))
	.;
	.I TYPE=1 D CNVRTLEN^IBDF2D1(WIDTH,.WIDTH),CNVRTHT^IBDF2D1(IBLINES,.IBLINES) F  Q:IBLINES'>0  D  S IBLINES=IBLINES-1,ROW=ROW+1
	..D DRWSTR^IBDFU(ROW,+$P(NODE,"^",2),"","R",WIDTH)
	;
EXIT	;
	D RESTORE^IBDF2A2(.IBPRINT,.IBPRINT)
	Q

IBDF2A2
IBDF2A2	;ALB/CJM - ENCOUNTER FORM (IBDF2A continued);NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
WCMP	;write the compiled version
	N SUB,ND,WIDTH,STRING,LINES,ROW,FNAME,TYPE,UNIT,TYPENODE
	S SUB=0 F  S SUB=$O(^IBE(357.1,IBBLK,"S",SUB)) Q:'SUB  S ND=$G(^IBE(357.1,IBBLK,"S",SUB,0)) D DRWSTR^IBDFU(+$P(ND,"^"),+$P(ND,"^",2),$P(ND,"^",5,200),$P(ND,"^",3),$P(ND,"^",4))
	S SUB=0 F  S SUB=$O(^IBE(357.1,IBBLK,"V",SUB)) Q:'SUB  S ND=$G(^IBE(357.1,IBBLK,"V",SUB,0)) D DRWVLINE^IBDFU(+$P(ND,"^"),+$P(ND,"^",2),+$P(ND,"^",3),$P(ND,"^",4))
	;
	;bubbles
	S SUB=0 F  S SUB=$O(^IBE(357.1,IBBLK,"B",SUB)) Q:'SUB  S ND=$G(^IBE(357.1,IBBLK,"B",SUB,0)) D
	.D DRWBBL^IBDFM1(+$P(ND,"^"),+$P(ND,"^",2),+$P(ND,"^",3),$P(ND,"^",4),$P(ND,"^",5),$P(ND,"^",6),$P(ND,"^",7),$P(ND,"^",8),$P(ND,"^",9),$P(ND,"^",10),$P(ND,"^",11),$P(ND,"^",12),$P($G(^IBE(357.1,IBBLK,"B",SUB,1)),"^"))
	;
	;handprint
	S SUB=0 F  S SUB=$O(^IBE(357.1,IBBLK,"H",SUB)) Q:'SUB  S ND=$G(^IBE(357.1,IBBLK,"H",SUB,0)) D
	.D DRWHAND^IBDFM1(+ND,+$P(ND,"^",2),+$P(ND,"^",3),$P(ND,"^",4),$P(ND,"^",6),$P(ND,"^",7),$P(ND,"^",8),$P(ND,"^",9),$P(ND,"^",10),$P(ND,"^",12),$P(ND,"^",14),$P(ND,"^",15),$P(ND,"^",17))
	Q
	;
SAVE(ARRAY,VAR)	;saves one array to the string=VAR, pass by reference
	N SUB,I
	S I=1,SUB="" F  S SUB=$O(ARRAY(SUB)) Q:SUB=""  S $P(VAR,"^",I)=ARRAY(SUB),I=I+1
	Q
RESTORE(ARRAY,VAR)	;restores the array from the string=VAR, pass by reference
	N SUB,I
	S I=1,SUB="" F  S SUB=$O(ARRAY(SUB)) Q:SUB=""  S ARRAY(SUB)=$P(VAR,"^",I),I=I+1
	Q

IBDF2B
IBDF2B	;ALB/CJM - ENCOUNTER FORM - (prints data field);12/15/92
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
DATAFLD(FIELD)	;for printing data fields to the encounter form
	;IBPRINT("WITH_DATA") means to complete the form with data
	;RTNLIST is used to keep a list of package interface routines called - it should not be newed
	;IBPRINT("ENTIRE")=0 means just fill in the data
	;
	N LASTITEM,RTN,MAXX,MAXY,LABEL,XLAB,YLAB,XIO,YIO,WIO,HIO,BLK,ITEM,PIECE,SPACING,DISPLAY,LAST,VALUE,FLDNAME
	;LAST - the last subfield read
	Q:'$$FLDDESCR^IBDFU1A(FIELD)  ;get the 0 node of the field description
	Q:BLK='IBBLK  ;check that the field really belongs to correct block
	D RTNDSCR^IBDFU1B(.RTN) ;get the rtn used by the field
	;if this is not the first time this form is being printed, and the data does not change, quit
	I 'IBPRINT("ENTIRE"),'RTN("CHANGES") Q
	I $G(IBDEVICE("LISTMAN")) D RANGE
	I IBPRINT("WITH_DATA")!('RTN("CHANGES")) D RTN
	I RTN("DATATYPE")=5 D TXTPRINT^IBDF2B1 Q  ;wordprocessing fields treated differently
	;now do other than wordprocessing
	;process each subfield
	S LAST=$$SFLDDSCR^IBDFU1A(FIELD,0) Q:'LAST
	F  D  S LAST=$$SFLDDSCR^IBDFU1A(FIELD,LAST) Q:'LAST
	.;print labels unless it's a batch job and the form has already been computed
	.I IBPRINT("ENTIRE"),(LABEL'=""),DISPLAY'["I" D
	..D DRWSTR^IBDFU(YLAB,XLAB,LABEL,DISPLAY)
	..I IBDEVICE("LISTMAN"),((XLAB+($L(LABEL)-1))>MAXX)!(YLAB>MAXY) D WARNING
	.D PRNTDATA
	Q
RANGE	;sets MAXX and MAXY to the maximum values allowed for the X,Y coordinates
	N BOX
	S BOX=$S(IBBLK("BOX")'=2:1,1:0)
	S MAXY=IBBLK("H")-(1+BOX)
	S MAXX=IBBLK("W")-(1+BOX)
	Q
PRNTDATA	;displays the correct data to the subfield
	N PVALUE,NODE
	I RTN("DATATYPE")=1!(RTN("DATATYPE")=3) S PIECE=1
	Q:'PIECE
	S NODE=$$DATANODE^IBDFU1B(RTN,PIECE)
	S PVALUE=$P($S(NODE'="":$G(VALUE(NODE)),1:$G(VALUE)),"^",PIECE)
	I WIO,PVALUE="" D
	.;print the underscore only if the data is not variable
	.I IBDEVICE("LISTMAN") S PVALUE=$S(IBPRINT("WITH_DATA")&RTN("CHANGES"):$J("",WIO),1:$$HLINE^IBDFU(WIO)) Q
	.I 'RTN("CHANGES") S PVALUE=$$HLINE^IBDFU(WIO)
	I PVALUE'="" D
	.I ('IBDEVICE("LISTMAN")),($L(PVALUE)>WIO),RTN("FULL") D OVERFLOW("CURRENT")
	.I 'IBDEVICE("LISTMAN"),((RTN("DATATYPE")=3)!(RTN("DATATYPE")=4)),LASTITEM,$O(@RTN("DATA_LOCATION")@(ITEM)),RTN("FULL") D OVERFLOW("NEXT")
	.D DRWSTR^IBDFU(YIO,XIO,$$PADRIGHT^IBDFU(PVALUE,WIO))
	.I IBDEVICE("LISTMAN"),((XIO+WIO-1)>MAXX)!(YIO>MAXY) D WARNING
	Q
RTN	;calls the rtn specified by the pkg interface if ok
	Q:RTN("ACTION")'=2
	Q:RTN("NAME")=""
	;quit if its not the first time this form has been printed and the data is not changeable
	Q:(('IBPRINT("ENTIRE"))&('RTN("CHANGES")))
	;
	N NODE S NODE=""
	;call the interface routine if it has not already been called
	I '$D(RTNLIST(RTN("RTN"))) Q:'$$DORTN^IBDFU1B(.RTN)
	;
	;keep a list of rtns called because some routines return multiple data elements
	S:'IBDEVICE("LISTMAN") RTNLIST(RTN("RTN"))=""
	;
	;now fetch the value, unless it's wordprocessing field
	I (RTN("DATATYPE")=1)!(RTN("DATATYPE")=2) S VALUE=$G(@RTN("DATA_LOCATION")) F  S NODE=$O(@RTN("DATA_LOCATION")@(NODE)) Q:NODE=""  S VALUE(NODE)=$G(@RTN("DATA_LOCATION")@(NODE)) Q
	I (RTN("DATATYPE")=3)!(RTN("DATATYPE")=4),ITEM S VALUE=$G(@RTN("DATA_LOCATION")@(ITEM)) F  S NODE=$O(@RTN("DATA_LOCATION")@(ITEM,NODE)) Q:NODE=""  S VALUE(NODE)=$G(@RTN("DATA_LOCATION")@(ITEM,NODE))
	Q
	;
ADDLINES	;if there are unused lines writes blank lines to the form
	;LNSUSED is the number of lines used already,HIO is the total number of lines allowed
	N I,LSPACING,NUMLEFT
	Q:HIO'>0
	I LNSUSED'<HIO Q
	S LSPACING=1
	I (SPACING=2)!(SPACING=3) S LSPACING=2
	S NUMLEFT=HIO-LNSUSED
	S NUMLEFT=NUMLEFT\LSPACING
	I IBDEVICE("LISTMAN") D
	.I ((XIO+WIO-1)>MAXX)!((YIO+(NUMLEFT*LSPACING)-1)>MAXY) D WARNING
	F I=1:1:NUMLEFT D DRWSTR^IBDFU(YIO+LNSUSED+(I*LSPACING)-1,XIO,$$HLINE^IBDFU(WIO))
	Q
WARNING	; prints a warning that data field prints outside of block - meant only for display while editing a form description
	Q:IBWARN
	W !,"Data Field="_FLDNAME_" in Block="_IBBLK("NAME")_" is printing",!,"outside of the block!"
	D PAUSE^IBDFU5
	S IBWARN=1
	Q
OVERFLOW(TYPE)	;keeps track of data that does not fit on the form
	;TYPE=="CURRENT" if other than a WP field will not fit
	;    ="NEXT" if the data is from a list and the last item indicator is set
	S @IBARRAY("OVERFLOW")@(IBBLK,FIELD,TYPE)=$G(ITEM)
	Q

IBDF2B1
IBDF2B1	;ALB/CJM - ENCOUNTER FORM - (continuation of IBDF2B);12/15/92
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
TXTPRINT	;for printing a word-processing field
	;
	;if the this is not the first time this form is being printed and the data doesn't change then don't print it!
	Q:(('IBPRINT("ENTIRE"))&('RTN("CHANGES")))
	;
	N LINE,LNSUSED,SPACE,QUIT S LNSUSED=0 ;LNSUSED keeps track of number of available lines for text are used already
	S SPACE=$S(SPACING=2:2,1:1)
	I 'HIO!('WIO)!(XIO'=+XIO)!(YIO'=+YIO) Q
	I LABEL'="",(('IBPRINT("WITH_DATA"))!($G(@RTN("DATA_LOCATION")@(1,0))="")) D
	.D DRWSTR^IBDFU(YIO+SPACE-1,XIO,LABEL,DISPLAY)
	.D DRWSTR^IBDFU(YIO+SPACE-1,XIO+$L(LABEL)," "_$$HLINE^IBDFU(WIO-($L(LABEL)+1)))
	.S LNSUSED=SPACE
	I IBPRINT("WITH_DATA"),($G(@RTN("DATA_LOCATION")@(1,0))'="") D
	.D FORMAT^IBDFU6("^TMP(""IB"",$J,""INTERFACES"",+$G(DFN),RTN(""NAME""))",WIO,LABEL)
	.S (LNSUSED,LINE,QUIT)=0 F  S LINE=$O(^UTILITY($J,"W",1,LINE)) D  Q:QUIT
	..I 'LINE!(LNSUSED+SPACE>HIO) S QUIT=1 D:(LINE&('IBDEVICE("LISTMAN"))&RTN("FULL")) OVERFLOW^IBDF2B("CURRENT") Q
	..D DRWSTR^IBDFU(YIO+LNSUSED+(SPACE-1),XIO,$$PADRIGHT^IBDFU($G(^UTILITY($J,"W",1,LINE,0)),WIO))
	..S LNSUSED=LNSUSED+SPACE
	D ADDLINES^IBDF2B
	K ^UTILITY($J,"W",1)
	Q

IBDF2D
IBDF2D	;ALB/CJM - ENCOUNTER FORM - WRITE SELECTION LIST ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;prints a selection list
PRINTLST(IBLIST)	;writes the selection list to the print array
	;IBLIST - pointer to a selection list
	;
	N GROUPODR,SLCTNODR,GROUP,SLCTN,PRRGROUP,QUIT,COL,CWIDTH,CUTLEFT,CUTRIGHT,BOX,LINE,NEEDUPR,ALL,CNT,DRWBBL,TRACKBBL,LOCATION,HDR,SUBHDR
	;CWIDTH=the width of the entries, including end "|"
	;BOX=1 if the block is outlined
	;LINE=1 if the separator between subcolumns has "|"
	;NEEDUPR=1 if, when printing a group header, the row above should be underlined also - cures a defect caused when some subcolumns NOT underlined
	;ALL=0 if list is dynamic and only data should be printed
	;DRWBBL=1 while printing bubbles - can turn off printing of bubbles by setting DRWBBL=0
	;TRACKBBL=1 if bubbles are going into form tracking - for dynamic lists
	;HDR=text of group header
	;SUBHDR=text of subheader within group (defined as a place holder)
	;
	S (TRACKBBL,GROUPODR,SLCTNODR,GROUP,SLCTN,PRRGROUP,COL,QUIT,NEEDUPR,CNT,SUBHDR,HDR)=""
	S (DRWBBL,ALL)=1
	;
	Q:$$LSTDESCR^IBDFU1(.IBLIST)
	Q:IBLIST("BLK")'=IBBLK
	S BOX=$S(IBBLK("BOX")=2:0,1:1)
	S LINE=(IBLIST("SEP")["|")
	I 'IBLIST("NUMCOL") S IBLIST("NUMCOL")=8
	D SCDESCR^IBDFU1(.IBLIST,.CWIDTH)
	I IBLIST("DYNAMIC"),'IBPRINT("ENTIRE") S ALL=0
	I IBLIST("DYNAMIC"),IBPRINT("WITH_DATA") D GETDATA(.LOCATION)
	;
	;should the bubbles be written to form tracking?
	I IBLIST("DYNAMIC") I $G(IBPFID),$G(IBFORM("SCAN",IBBLK("PAGE"))),IBLIST("INPUT_RTN"),IBDEVICE("PCL") S TRACKBBL=1
	;
	;get the first column
	D GETCOL^IBDF2D1(.COL) I 'COL D:IBDEVICE("LISTMAN")  Q
	.W !!,"The LIST="_IBLIST("NAME")_" in BLOCK="_IBBLK("NAME")_" requires at least",!,CWIDTH_" columns in order to display!",!
	.D PAUSE^IBDFU5
	;
	D:ALL OTHER^IBDF2D2
	D DRWCOL^IBDF2D1(.COL)
	F  D  Q:QUIT
	.S PRRGROUP=GROUP
	.D NEXT(.GROUP,.GROUPODR,.SLCTNODR,.SLCTN) I 'SLCTN S QUIT=1 Q
	.I COL("ROWSLEFT")<(1+IBLIST("BTWN")) D GETCOL^IBDF2D1(.COL) S:'COL QUIT=1 Q:QUIT  D DRWCOL^IBDF2D1(.COL)
	.D DISPLAY^IBDF2D3(SLCTN,.COL,HDR,.SUBHDR)
	;
	;for dynamic lists, if full data is needed, add to overflow report if there is more data
	;
	I 'IBDEVICE("LISTMAN"),IBLIST("DYNAMIC"),IBLIST("OVERFLOW"),SLCTN S @IBARRAY("OVERFLOW")@(IBBLK,IBLIST,"DYNAMIC LIST")=""
	;
	;no selections left - fill in with blank selections, unless dynamic and just filling in with data
	I ALL S SLCTN="",QUIT=0 S:('IBLIST("DYNAMIC"))!('IBLIST("INPUT_RTN")) DRWBBL=0 F  Q:'COL  D
	.F  Q:(COL("ROWSLEFT")<(IBLIST("BTWN")+1))  D DISPLAY^IBDF2D3(SLCTN,.COL,HDR,.SUBHDR)
	.D GETCOL^IBDF2D1(.COL) S:'COL QUIT=1 Q:QUIT  D DRWCOL^IBDF2D1(.COL)
	;
	I IBDEVICE("LISTMAN"),GROUP D NEXT(.GROUP,.GROUPODR,.SLCTNODR,.SLCTN) I SLCTN W !,"There are entries that do not fit on the ",IBLIST("NAME")," list!",!,"Column width="_CWIDTH,!,"Make more room to display all of the entries!",! D PAUSE^IBDFU5
	;
	;
EXIT	;
	Q
	;
NEXT(GROUP,GROUPODR,SLCTNODR,SLCTN)	;finds the next selction to be printed
	;** PARAMETERS - must be passed by reference **
	N QUIT S QUIT=0
	I IBLIST("DYNAMIC") D  Q
	.I IBPRINT("WITH_DATA") S:SLCTN="" SLCTN=0 S SLCTN=$O(@LOCATION@(SLCTN))
	S GROUP=$G(GROUP),SLCTN=$G(SLCTN),GROUPODR=$G(GROUPODR),SLCTNODR=$G(SLCTNODR)
	F  Q:QUIT  D
	.I 'GROUP!(SLCTNODR="") D NXTGROUP(.GROUP,.GROUPODR) S (SLCTNODR,SLCTN)="" S:'GROUP QUIT=1 Q:QUIT  I COL D  Q:QUIT
	..I COL("ROWSLEFT")<1 D GETCOL^IBDF2D1(.COL) S:'COL QUIT=1 Q:QUIT  D DRWCOL^IBDF2D1(.COL)
	..D GROUPHDR(GROUP,.COL,.HDR,.SUBHDR)
	.I SLCTNODR="" S SLCTNODR=$O(^IBE(357.3,"APO",IBLIST,GROUP,"")) I SLCTNODR="" Q
	.S SLCTN=$O(^IBE(357.3,"APO",IBLIST,GROUP,SLCTNODR,SLCTN)) S:SLCTN QUIT=1 S:'SLCTN SLCTNODR=$O(^IBE(357.3,"APO",IBLIST,GROUP,SLCTNODR))
	Q
NXTGROUP(GROUP,GROUPODR)	;
	;** PARAMETERS - must be passed by reference **
	;
	N QUIT S QUIT=0
	F  Q:QUIT  D
	.I (GROUPODR="")!('GROUP) S GROUPODR=$O(^IBE(357.4,"APO",IBLIST,GROUPODR)),GROUP="" I GROUPODR="" S QUIT=1 Q
	.S GROUP=$O(^IBE(357.4,"APO",IBLIST,GROUPODR,GROUP)) S:GROUP QUIT=1
	Q
	;
GROUPHDR(GROUP,COL,HDR,SUBHDR)	;writes the group header to the list
	;COL is the column to write at
	;returns HDR=displayed text if passed by reference
	;
	N WIDTH,OPTIONS,OFFSET,NODE
	S HDR=""
	S SUBHDR=""
	S NODE=^IBE(357.4,GROUP,0)
	;don't print invisible headers
	Q:$P(NODE,"^",4)="I"
	S HDR=$P(NODE,"^")
	;some other special cases
	I (HDR="BLANK")!(HDR="") S HDR="" Q
	;
	S OPTIONS="",OFFSET=$L(IBLIST("SEP1")),WIDTH=CWIDTH-(2*OFFSET)
	S HDR=$E(HDR,1,WIDTH)
	S OPTIONS=$TR(IBLIST("DGHDR"),"C","")
	S OPTIONS=$TR(OPTIONS,"SR","ss")
	;
	;only affects forms with big print - bold otherwise not available
	;??? do we really want to assume bold not available for small fonts?
	;I OPTIONS["s",OPTIONS'["B",IBFORM("WIDTH")<100 S OPTIONS=OPTIONS_"B"
	;I IBFORM("WIDTH")>100 S OPTIONS=$TR(OPTIONS,"B")
	;
	I HDR=" " S OPTIONS=$TR(OPTIONS,"s","") S:'IBLIST("ULSLCTNS") OPTIONS=$TR(OPTIONS,"U","")
	I IBLIST("DGHDR")["C" S OFFSET=OFFSET+((WIDTH-$L(HDR))\2)
	I OPTIONS["U",$L(HDR)<WIDTH,'IBLIST("ULSLCTNS") D
	.D DRWSTR^IBDFU($$Y,($$X)+OFFSET,"","U",$L(HDR))
	.S OPTIONS=$TR(OPTIONS,"U","")
	;want to apply options over entire column width?
	;I IBLIST("ULSLCTNS")!(LINE&(OPTIONS["s")) D
	I IBLIST("ULSLCTNS")!(OPTIONS["s") D
	.D DRWSTR^IBDFU($$Y,($$X)+LINE,$J("",OFFSET-LINE)_HDR,OPTIONS,CWIDTH-(2*LINE))
	.I OPTIONS["U",NEEDUPR D DRWSTR^IBDFU($$Y-1,($$X)+LINE,"","U",CWIDTH-(2*LINE)) S NEEDUPR=0
	E  D DRWSTR^IBDFU($$Y,($$X)+OFFSET,HDR,OPTIONS)
	D DECREASE(.COL)
	Q
	;
DECREASE(COL)	;
	S COL("ROWSLEFT")=COL("ROWSLEFT")-1
	S COL("NEXTROW")=COL("NEXTROW")+1
	Q
X()	;
	Q COL("X")
Y()	;
	Q COL("NEXTROW")+COL("Y")
	;
GETDATA(LOCATION)	;gets the dynamic data at print time,@LOCATION=where the list was put
	;
	N RTN
	S RTN=IBLIST("RTN")
	D RTNDSCR^IBDFU1B(.RTN)
	S LOCATION=RTN("DATA_LOCATION")
	I RTN("ACTION")=3,RTN("DYNAMIC") D
	.I '$D(RTNLIST(RTN("RTN"))) Q:'$$DORTN^IBDFU1B(.RTN)
	.S:'IBDEVICE("LISTMAN") RTNLIST(RTN("RTN"))=""
	Q

IBDF2D1
IBDF2D1	;ALB/CJM - ENCOUNTER FORM - PRINT SELECTION LIST (cont'd) ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
GETCOL(COL)	;finds next column
	;COL - array where output data stored,SHOULD BE PASSED BY REFERENCE
	;COL=last column number processed
	;COL("Y")=columns starting row relative to block
	;COL("X")=column's starting column relative to block
	;COL("H")=column's height, i.e., maximum # of selections
	;
	S COL=$G(COL)+1
	S NEEDUPR=0
	I COL=1 S COL("H")=+IBLIST("H",1),COL("X")=+IBLIST("X",1),COL("Y")=+IBLIST("Y",1)
	I COL>IBLIST("NUMCOL") S COL=0 Q
	I $G(IBLIST("Y",COL))'=+$G(IBLIST("Y",COL)) D
	.I COL=1 S COL("Y")=$S(IBBLK("HDR")="":BOX,1:2+BOX)
	.I COL'=1 Q  ;leave value from prior col
	E  S COL("Y")=$G(IBLIST("Y",COL))
	I $G(IBLIST("X",COL))'=+$G(IBLIST("X",COL)) D
	.Q:COL=1
	.S COL("X")=COL("X")+CWIDTH+$S(IBLIST("SEP")=" ":2,IBLIST("SEP")="  ":4,1:0)
	E  S COL("X")=$G(IBLIST("X",COL))
	I $G(IBLIST("H",COL))'=+$G(IBLIST("H",COL)) D
	.I COL=1 S COL("H")=IBBLK("H")
	.I COL'=1 Q  ;leave value from prior col
	E  S COL("H")=$G(IBLIST("H",COL))
	I BOX,'LINE,COL("X")=0 S COL("X")=1
	I (COL("X")+CWIDTH+(('LINE)&BOX))>IBBLK("W") S COL=0 Q
	I (COL("Y")+COL("H"))>(IBBLK("H")-(2*BOX)) S COL("H")=(IBBLK("H")-(COL("Y")+BOX))
	S COL("ROWSLEFT")=COL("H"),COL("NEXTROW")=0
	Q
	;
DRWCOL(COL)	;draws one column of the selection list except for its contents and rows
	N I,OFFSET,WIDTH
	I LINE,(COL("X")'=0)!('BOX),ALL D DRWVLINE^IBDFU($$Y^IBDF2D,$$X^IBDF2D,COL("H"),"|")
	I LINE,('BOX)!(COL("X")+CWIDTH'=IBBLK("W")),ALL D DRWVLINE^IBDFU($$Y^IBDF2D,$$X^IBDF2D+(CWIDTH-1),COL("H"),"|")
	;
	;draw the column header
	I IBLIST("HDR")'="",(COL("ROWSLEFT")>0) D:ALL  D DECREASE^IBDF2D(.COL)
	.S IBLIST("DHDR")=$TR(IBLIST("DHDR"),"RS","rs")
	.;only affects forms with big print - bold otherwise not available
	.I (IBLIST("DHDR")["s")!(IBLIST("DHDR")["r"),IBLIST("DHDR")'["B",IBFORM("WIDTH")<100 S IBLIST("DHDR")=IBLIST("DHDR")_"B"
	.I IBFORM("WIDTH")>100 S IBLIST("DHDR")=$TR(IBLIST("DHDR"),"B")
	.;
	.S WIDTH=CWIDTH-(2*LINE)
	.S OFFSET=LINE
	.I IBLIST("DHDR")["C",$L(IBLIST("HDR"))<WIDTH S OFFSET=OFFSET+((WIDTH-$L(IBLIST("HDR")))\2)
	.D DRWSTR^IBDFU($$Y^IBDF2D,($$X^IBDF2D)+LINE,$J("",OFFSET)_IBLIST("HDR"),$TR(IBLIST("DHDR"),"C",""),WIDTH)
	;
	;draw the header line for the subcolumns
	I COL("ROWSLEFT")>0,IBLIST("CHDR")]"" D:ALL  D DECREASE^IBDF2D(.COL)
	.S IBLIST("DSCHDR")=$TR(IBLIST("DSCHDR"),"R","r")
	.;only affects forms with big print - bold otherwise not available
	.I IBLIST("DSCHDR")["r",IBLIST("DSCHDR")'["B",IBFORM("WIDTH")<100 S IBLIST("DSCHDR")=IBLIST("DSCHDR")_"B"
	.I IBFORM("WIDTH")>100 S IBLIST("DSCHDR")=$TR(IBLIST("DSCHDR"),"B")
	.;
	.;apply options across entire line?
	.;if nothing else applies uderline SCs (maybe)
	.I IBLIST("ULSLCTNS")!LINE!(BOX&(CWIDTH>(IBBLK("W")-3-(2*(IBLIST("SEP1")))))) D  Q
	..I IBLIST("DSCHDR")="",IBLIST("ULSLCTNS") S IBLIST("DSCHDR")=IBLIST("DSCHDR")_"U"
	..D DRWSTR^IBDFU($$Y^IBDF2D,($$X^IBDF2D)+LINE,IBLIST("CHDR"),IBLIST("DSCHDR"),CWIDTH-(2*LINE))
	.;
	.;apply display options just to the text, not accross the column
	.I IBLIST("DSCHDR")="" S IBLIST("DSCHDR")="U"
	.F I=1-IBLIST("SC0"):1:8 I IBLIST("SCTYPE",I)'="",IBLIST("SCHDR",I)'="" D DRWSTR^IBDFU($$Y^IBDF2D,(($$X^IBDF2D)+IBLIST("SCOS",I)),IBLIST("SCHDR",I),IBLIST("DSCHDR"),$L(IBLIST("SCHDR",I)))
	Q
	;
CNVRTHT(HPLINES,LINES)	;changes HPLINES=number of handprint lines into LINES=print lines on the page
	;pass LINES by reference
	S LINES=$FN(1.5*HPLINES,"",0)
	Q
	;
CNVRTLEN(HPWIDTH,WIDTH)	;changes HPWIDTH=width in terms of handprint characters into width in terms of columns(machine print characters)
	;pass WIDTH by reference
	;
	N COLWIDTH
	D
	.I IBFORM("WIDTH")>96 S COLWIDTH=720/16.67 Q
	.I IBFORM("WIDTH")>80 S COLWIDTH=60 Q
	.S COLWIDTH=72
	S WIDTH=$FN(.49+((HPWIDTH*103.65924)/COLWIDTH),"",0)
	Q

IBDF2D2
IBDF2D2	;ALB/CJM - ENCOUNTER FORM - PRINT SELECTION LIST (cont'd) ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
OTHER	;prints area at bottom of list for 'other'
	N MAX,NODE,NAR,CODE,REQLEN,WIDTH,AREA,SC,IBY,IBX,COLWIDTH,ICR,NOTICR,COLUMNS,HT,I,J,HDR
	;
	;for ICR, each char will take up 172.7654
	;for non-ICR, allocate 103.6593 for each hand printed char
	S ICR=172.7654
	S NOTICR=103.65924
	;
	;how much space for each machine printed char?
	D
	.I IBFORM("WIDTH")>96 S COLWIDTH=720/16.67 Q
	.I IBFORM("WIDTH")>80 S COLWIDTH=60 Q
	.S COLWIDTH=72
	;
	Q:'IBLIST("INPUT_RTN")
	Q:'IBLIST("OTHER")
	I IBLIST("NAR_PRINT")!IBLIST("NAR_READ") D
	.S NAR=IBLIST("NAR_DATATYPE")
	.I 'NAR S (IBLIST("NAR_READ"),IBLIST("NAR_PRINT"))=0 Q
	.D DATATYPE^IBDFU1B(.NAR)
	.S:NAR("MAX_INPUT")<NAR("SPACE") NAR("MAX_INPUT")=NAR("SPACE")
	I IBLIST("CODE_PRINT")!IBLIST("CODE_READ") D
	.S CODE=IBLIST("CODE_DATATYPE")
	.I 'CODE S (IBLIST("CODE_READ"),IBLIST("CODE_PRINT"))=0 Q
	.D DATATYPE^IBDFU1B(.CODE)
	Q:'IBLIST("CODE_PRINT")&'IBLIST("NAR_PRINT")
	;
	;print field for code in ICR format? read with ICR?
	I IBLIST("CODE_PRINT") S IBLIST("CODE_PRINT")=2
	I '$G(IBFORM("SCAN",IBBLK("PAGE"))) D
	.S (IBLIST("CODE_READ"),IBLIST("NAR_READ"))=0
	.I IBLIST("CODE_PRINT"),IBLIST("CODE_READ") S IBLIST("CODE_READ")=3 ;read without ICR, but in ICR format
	.I 'IBLIST("CODE_PRINT"),IBLIST("NAR_PRINT") S IBLIST("CODE_READ")=1 ;read the code without ICR from the narrative - not printed in ICR format
	E  I IBFORM("SCAN","ICR") D
	.I IBLIST("NAR_READ"),IBLIST("NAR_PRINT") S (IBLIST("NAR_PRINT"),IBLIST("NAR_READ"))=2
	.I IBLIST("CODE_PRINT") S IBLIST("CODE_READ")=2
	.I 'IBLIST("CODE_PRINT"),IBLIST("CODE_READ"),IBLIST("NAR_PRINT")=2 S IBLIST("CODE_PRINT")=3 ;read the code without ICR, but it is printed in ICR format
	;
	;calculate required width=REQLEN
	S MAX=IBBLK("W")-BOX
	S REQLEN=1+BOX
	F SC=1:1:8 I IBLIST("SCTYPE",SC)=2 D
	.I IBLIST("ROUTINE",SC)]"" S AREA(REQLEN)=SC,REQLEN=REQLEN+4 Q
	.I $L(IBLIST("SCSYMBOL",SC)) S AREA(REQLEN)=SC,REQLEN=REQLEN+$L(IBLIST("SCSYMBOL",SC))+1
	I REQLEN<(BOX+2) S REQLEN=BOX
	S (CODE("COL"),NAR("COL"))=REQLEN
	S:IBLIST("CODE_PRINT") REQLEN=REQLEN+$FN(((CODE("SPACE")*ICR)/COLWIDTH)+.49,"",0)
	Q:REQLEN>MAX
	;
	;use ICR format? Set WIDTH=width of a handprinted character accordingly
	S WIDTH=$S(IBFORM("SCAN","ICR")&IBLIST("NAR_READ")&$G(IBFORM("SCAN",IBBLK("PAGE"))):ICR,1:NOTICR)
	I IBLIST("NAR_PRINT") D
	.S NAR("LINES")=0
	.F  D  Q:I<MAX
	..S NAR("LINES")=NAR("LINES")+1
	..S NAR("WIDTH")=$FN((NAR("SPACE")/NAR("LINES"))+.49,"",0)
	..S I=REQLEN+$FN(.49+((NAR("WIDTH")*WIDTH)/COLWIDTH),"",0)
	.S REQLEN=I+1
	.I (MAX-REQLEN)<(CWIDTH-2),(IBLIST("OTHER")<2)!(REQLEN<((MAX\2))-2) S NAR("WIDTH")=NAR("WIDTH")+(((MAX-REQLEN)*COLWIDTH)\WIDTH) I WIDTH=ICR,NAR("WIDTH")>NAR("MAX_INPUT") S NAR("WIDTH")=NAR("MAX_INPUT")
	.;
	.S CODE("COL")=NAR("COL")+1+$FN(.49+((NAR("WIDTH")*WIDTH)/COLWIDTH),"",0)
	;
	S HT=2 S:IBLIST("NAR_PRINT") HT=NAR("LINES") D:IBLIST("NAR_PRINT")=1 CNVRTHT^IBDF2D1(HT,.HT) S:IBLIST("NAR_PRINT")=2 HT=HT*2 S:IBLIST("OTHER")>1 HT=HT+1
	S COLUMNS=1 I IBLIST("OTHER")>1 S COLUMNS=(MAX-BOX)\(REQLEN-BOX+1) S:'COLUMNS COLUMNS=1
	;
	S J=($FN((IBLIST("OTHER")/COLUMNS)+.49,"",0)*HT)+1 ;J=the hight needed
	I (J+COL("Y"))>(IBBLK("H")-BOX) S IBLIST("OTHER")=(IBBLK("H")-BOX)\(HT*COLUMNS),J=$FN((IBLIST("OTHER")/COLUMNS)+.49,"",0)*HT
	S J=J+1 ;want one line space between the 'other' and the list above it
	S I=IBBLK("H")-(COL("Y")+J+BOX) I I<COL("H") S:I<0 I=0 S (COL("ROWSLEFT"),COL("H"))=I S:IBLIST("H",2)>I IBLIST("H",2)=I S:IBLIST("H",3)>I IBLIST("H",3)=I
	S J=$FN(.49+(CWIDTH\(COLUMNS*REQLEN)),"",0)+1 ;now J=width needed
	S:($G(IBLIST("X",J))<(COLUMNS*REQLEN)) J=J+1
	I ('$D(IBLIST("X",J)))!($G(IBLIST("X",J))'<(COLUMNS*REQLEN)) I '$G(IBLIST("H",J)) S IBLIST("H",J)=99
	S IBY=COL("Y")+COL("H")+1,IBX=0
	;
	;draw the headers
	I IBLIST("NAR_PRINT") S HDR=IBLIST("NAR_HDR") D CNVRTLEN^IBDF2D1(NAR("WIDTH"),.WIDTH) I $L(HDR)>WIDTH S HDR=$E("NARRATIVE",1,WIDTH)
	F J=0:1:(COLUMNS-1) D
	.D:IBLIST("NAR_PRINT") DRWSTR^IBDFU(IBY,NAR("COL")+(J*REQLEN),HDR,"s") D:IBLIST("CODE_PRINT") DRWSTR^IBDFU(IBY,CODE("COL")+(J*REQLEN),IBLIST("CODE_HDR"),"s")
	;
	S IBY=IBY+1
	F J=0:1:(IBLIST("OTHER")-1) S I=J#COLUMNS,CNT=CNT+1 S:(I=0)&J IBY=IBY+HT D AREAS(IBY,I,CNT)
	Q
	;
AREAS(IBY,COLUMN,CNT)	;draw the bubbles, etc.
	S IBX="" F  S IBX=$O(AREA(IBX)) Q:'IBX  D
	.S SC=AREA(IBX)
	.I IBLIST("ROUTINE",SC)]"" D
	..D DRWBBL^IBDFM1((IBLIST("OTHER")>1)+IBY,IBX+(COLUMN*REQLEN),IBLIST("INPUT_RTN"),"",IBLIST("NAME"),"S"_IBLIST_"("_SC,IBLIST("RULE",SC),"OTHER#"_CNT_")","OTHER",IBLIST("QLFR",SC),0,CNT)
	.E  D
	..S I=IBLIST("SCSYMBOL",SC) I "        "[I S I=$TR(I," ","_")
	..D DRWSTR^IBDFU(1+IBY,IBX+(COLUMN*REQLEN),I)
	.;
	.D:IBLIST("SCHDR",SC)'="" DRWSTR^IBDFU(IBY+1+(IBLIST("OTHER")>1),IBX+(COLUMN*REQLEN)+((IBLIST("SCW",SC)-$L(IBLIST("SCHDR",SC)))\2),IBLIST("SCHDR",SC))
	;
	;add fields for the narrative
	I IBLIST("NAR_PRINT")!IBLIST("NAR_READ") D
	.D DRWHAND^IBDFM1(IBY+(IBLIST("OTHER")>1),NAR("COL")+(COLUMN*REQLEN),NAR("WIDTH"),IBLIST("INPUT_RTN"),NAR("LINES"),"S"_IBLIST_"(N",IBLIST("NAME")_"(OTHER)","OTHER","",CNT,IBLIST("NAR_PRINT"),IBLIST("NAR_READ"),NAR)
	.D:IBLIST("OTHER")>1 DRWSTR^IBDFU(IBY,NAR("COL")+(COLUMN*REQLEN),"(OTHER#"_CNT_")")
	;
	;add fields for the code
	I IBLIST("CODE_PRINT")!IBLIST("CODE_READ") D
	.I IBLIST("CODE_PRINT") D
	..D DRWHAND^IBDFM1(IBY+(IBLIST("OTHER")>1),CODE("COL")+(COLUMN*REQLEN),CODE("SPACE"),IBLIST("INPUT_RTN"),1,"S"_IBLIST_"(C",IBLIST("NAME")_"(OTHER)","OTHER","",CNT,IBLIST("CODE_PRINT"),IBLIST("CODE_READ"),CODE)
	.D:('IBLIST("NAR_PRINT"))&(IBLIST("OTHER")>1) DRWSTR^IBDFU(IBY,CODE("COL")+(COLUMN*REQLEN),"(OTHER#"_CNT_")")
	.;
	.;if there wasn't a field printed on the form for the code, but there was for the narrative, read the code from the narrative - ICR should not be used, rather, require the operator to key in the code
	.I ('IBLIST("CODE_PRINT"))&IBLIST("NAR_PRINT") D
	..D DRWHAND^IBDFM1(IBY+(IBLIST("OTHER")>1),NAR("COL")+(COLUMN*REQLEN),NAR("WIDTH"),IBLIST("INPUT_RTN"),NAR("LINES"),"S"_IBLIST_"(C",IBLIST("NAME")_"(OTHER)","OTHER","",CNT,0,IBLIST("CODE_READ"),CODE)
	Q

IBDF2D3
IBDF2D3	;ALB/CJM - ENCOUNTER FORM - WRITE SELECTION LIST (cont'd) ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
DISPLAY(SLCTN,COL,HEADER,SUBHDR)	;writes the selection to the list
	N J,K,DA,ENTRY,VALUE,TYPE,UNDRLINE,OFFSET,LEN,FIRST,IBROW,IBCOL,BBBLS,ID,DISPLAY,NODE,SUB,WRAP
	S UNDRLINE=$S(IBLIST("ULSLCTNS"):"U",1:"")
	S FIRST=1,(ID,HEADER,DISPLAY,NODE)=""
	;
	;get the 0 node of the selection & the selection identifier
	I SLCTN S:IBLIST("DYNAMIC") NODE=$G(@LOCATION@(SLCTN)) S:'IBLIST("DYNAMIC") NODE=$G(^IBE(357.3,SLCTN,0)) S ID=$P(NODE,"^")
	;
	;if a place holder, determine its use as a subheader - dynamic lists don't have place holders
	I 'IBLIST("DYNAMIC") D
	.I $P(NODE,"^",2) D
	..;turn of the use of any prior subhdr if it was used
	..I $P(NODE,"^",8) S SUBHDR=""
	..;determine if this is to be used as a subheader
	..S $P(NODE,"^",6)=$P(NODE,"^",6)
	..I $P(NODE,"^",7),$P(NODE,"^",6)]"" S SUBHDR=SUBHDR_" "_$$STRIP^IBDFU($P(NODE,"^",6))
	;
	;if place holder with text,just print the text and quit
	I 'IBLIST("DYNAMIC"),$P(NODE,"^",2),$P(NODE,"^",6)]"" D  Q
	.I IBLIST("ULSLCTNS") D
	..D DRWSTR^IBDFU($$Y^IBDF2D,($$X^IBDF2D)+LINE,$P(IBLIST("SEP"),"|",2)_$P(NODE,"^",6),"U",CWIDTH-(2*LINE))
	..I NEEDUPR D DRWSTR^IBDFU(($$Y^IBDF2D)-1,($$X^IBDF2D)+LINE,"","U",CWIDTH-(2*LINE)) S NEEDUPR=0
	.E  D DRWSTR^IBDFU($$Y^IBDF2D,($$X^IBDF2D)+$L(IBLIST("SEP2"))+LINE,$P(NODE,"^",6))
	.D DECREASE^IBDF2D(.COL)
	;
	;don't draw bubbles for place holders
	I 'IBLIST("DYNAMIC"),$P(NODE,"^",2) N DRWBBL S DRWBBL=0
	;
	I SLCTN,(IBLIST("DYNAMIC")!('$P(NODE,"^",2))) S CNT=CNT+1
	;
	I 'IBFORM("COMPILED") I 'SLCTN,IBLIST("DYNAMIC") D
	.S CNT=CNT+1
	.S DISPLAY="#"_CNT
	.S ID=""
	;
	F K=1:1:(+IBLIST("BTWN")+1) D  Q:COL("ROWSLEFT")<1
	.S ENTRY=""
	.S OFFSET=LINE
	.F J=1-IBLIST("SC0"):1:8 S TYPE=IBLIST("SCTYPE",J) D:TYPE'=""
	..;S VALUE=""
	..S VALUE=$S(K=2:$G(WRAP(J)),1:"")
	..I TYPE=1,K'>1,SLCTN D  S:(ID]"")&IBLIST("SCPIECE",J) DISPLAY=DISPLAY_$S(DISPLAY="":"",1:" :: ")_$E(VALUE,1,IBLIST("SCW",J)*(1+$S(IBLIST("BTWN"):1,1:0))) I IBLIST("BTWN"),$L(VALUE)>IBLIST("SCW",J) D WRAP
	...I IBLIST("SCPIECE",J)=0 S:SLCTN&(IBLIST("DYNAMIC")!('$P(NODE,"^",2))) VALUE="#"_CNT Q
	...I 'IBLIST("DYNAMIC") S DA=$O(^IBE(357.3,SLCTN,1,"B",J,"")) S:DA VALUE=$P($G(^IBE(357.3,SLCTN,1,DA,0)),"^",2) Q
	...;dynamic lists
	...S SUB=$$DATANODE^IBDFU1B(IBLIST("RTN"),IBLIST("SCPIECE",J))
	...I SUB]"" S VALUE=$P($G(@IBLIST("DATA_LOCATION")@(SUB,SLCTN)),"^",IBLIST("SCPIECE",J))
	...E  S VALUE=$P(NODE,"^",IBLIST("SCPIECE",J))
	...;
	..S:TYPE=2 VALUE=$S(K'>1:IBLIST("SCSYMBOL",J),1:$J("",IBLIST("SCW",J)))
	..;I TYPE=1 I SLCTN,ID]"",K'>1,IBLIST("SCPIECE",J) S DISPLAY=DISPLAY_$S(DISPLAY="":"",1:" :: ")_$E(VALUE,1,(IBLIST("SCW",J))
	..S:TYPE=1 VALUE=$$PADRIGHT^IBDFU(VALUE,IBLIST("SCW",J))
	..I TYPE=2 I IBLIST("ROUTINE",J)]"",K'>1,DRWBBL S IBCOL=($$X^IBDF2D)+OFFSET+$L(IBLIST("SEP2"))+$L(ENTRY)+((IBLIST("SCW",J)-3)\2),IBROW=$$Y^IBDF2D+$S(IBLIST("BTWN"):.5,1:0),BBBLS(IBCOL)=J
	..I (TYPE=1)!('IBLIST("NOUL",J))!(K'=(+IBLIST("BTWN")+1))!(UNDRLINE'="U") D 
	...S ENTRY=ENTRY_IBLIST("SEP2")_VALUE_IBLIST("SEP1")
	...S FIRST=0
	..E  D
	...S NEEDUPR=1
	...S LEN=$S(FIRST:0,1:$L(ENTRY)-LINE)
	...S ENTRY=ENTRY_IBLIST("SEP2")_VALUE_IBLIST("SEP1")
	...I OFFSET+$L(ENTRY)=CWIDTH S ENTRY=$E(ENTRY,1,$L(ENTRY)-LINE)
	...D DRWSTR^IBDFU($$Y^IBDF2D,($$X^IBDF2D)+OFFSET,ENTRY,"U",LEN)
	...S OFFSET=OFFSET+$L(ENTRY),ENTRY="",FIRST=1
	.I ENTRY'="" S ENTRY=$E(ENTRY,1,$L(ENTRY)-$L(IBLIST("SEP1"))) D DRWSTR^IBDFU($$Y^IBDF2D,($$X^IBDF2D)+OFFSET,ENTRY,$S(K'=(+IBLIST("BTWN")+1):"",1:UNDRLINE),$L(ENTRY)+$L(IBLIST("SEP2")))
	.D DECREASE^IBDF2D(.COL)
	;
	;Writting bubbles to form tracking? Is the form NOT yet compiled? Otherwise, don't need to do anything with the bubbles
	I (TRACKBBL)!('IBFORM("COMPILED")) S IBCOL="" F  S IBCOL=$O(BBBLS(IBCOL)) Q:IBCOL=""  S J=BBBLS(IBCOL) I IBLIST("ROUTINE",J)="BUBBLE" D
	.;
	.D:'TRACKBBL DRWBBL^IBDFM1(IBROW,IBCOL,IBLIST("INPUT_RTN"),ID,IBLIST("NAME"),"S"_IBLIST_"("_J,IBLIST("RULE",J),DISPLAY,HEADER,IBLIST("QLFR",J),IBLIST("DYNAMIC"),CNT,SUBHDR)
	.D:TRACKBBL TRACKBBL^IBDFM1("S"_IBLIST_"("_J,CNT,IBLIST("QLFR",J),IBLIST("INPUT_RTN"),DISPLAY,ID)
	Q
	;
WRAP	   ;
	Q:IBLIST("SCW",J)<8
	N FOUND,AT,I,CHAR S FOUND=0
	S AT=IBLIST("SCW",J)+2
	F I=0:1:IBLIST("SCW",J)\4 S AT=AT-1,CHAR=$E(VALUE,AT) I " /\-:;"[CHAR S FOUND=1 Q
	I FOUND D
	.S WRAP(J)=$E(VALUE,AT+$S(" -"[CHAR:1,1:0),AT+IBLIST("SCW",J))
	.F I=1:1:IBLIST("SCW",J) I $E(WRAP(J),I)'=" " D  Q
	..I I>1 S WRAP(J)=$E(WRAP(J),I,$L(WRAP(J)))
	.S VALUE=$E(VALUE,1,AT-1)
	E  S WRAP(J)=$E(VALUE,IBLIST("SCW",J),2*IBLIST("SCW",J)-1),VALUE=$E(VALUE,1,IBLIST("SCW",J)-1)_"-"
	Q

IBDF2E
IBDF2E	;ALB/CJM - ENCOUNTER FORM (prints a lines and text areas to the form);MAR 18,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
PRNTLINE(LINE)	;prints a line ptd to by LINE
	N NODE,XPOS,YPOS,LEN,TYPE,NUM,SPACING,CNT
	S NODE=$G(^IBE(357.7,LINE,0)) Q:NODE=""
	Q:$P(NODE,"^",6)'=IBBLK
	S XPOS=+$P(NODE,"^",2),YPOS=+$P(NODE,"^",3),TYPE=$P(NODE,"^",4),LEN=+$P(NODE,"^",5)
	I TYPE="H" D
	.S NUM=$P(NODE,"^",7),SPACING=$P(NODE,"^",8)
	.S:'NUM NUM=1 S SPACING=$S(SPACING="d":2,SPACING="t":3,1:1)
	.F CNT=1:1:NUM D DRWSTR^IBDFU((YPOS+((CNT-1)*SPACING)),XPOS,"","U",LEN)
	I TYPE="V" D DRWVLINE^IBDFU(YPOS,XPOS,LEN,"|")
	Q
PRNTTEXT(TEXT)	;prints a line ptd to by LINE
	N NODE,XPOS,YPOS,W,HT,LINE
	S NODE=$G(^IBE(357.8,TEXT,0)) Q:NODE=""
	Q:$P(NODE,"^",2)'=IBBLK
	S XPOS=+$P(NODE,"^",3),YPOS=+$P(NODE,"^",4),W=+$P(NODE,"^",5),HT=+$P(NODE,"^",6)
	S LINE=0 F  S LINE=$O(^IBE(357.8,TEXT,1,LINE)) Q:'LINE!(LINE>HT)  S NODE=$G(^(LINE,0)) D DRWSTR^IBDFU(YPOS+LINE-1,XPOS,$E(NODE,1,W))
	Q

IBDF2F
IBDF2F	;ALB/CJM - ENCOUNTER FORM - PRINT FORM(sends to printer) ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
LNPRINT(IBPFID)	;prints the form
	;IBPFID is the id for form tracking
	;
	N CURY,CURX,NXTTXT,NXTX,LINE,NXTUL,PERPAGE,STRING,STARTY,PAGE
	S PAGE=1
	;
	;determine if simplex or duplex
	;
	D
	.I IBFORM("PRINT_MODE")="DUPLEX_LONG",IBDEVICE("DUPLEX_LONG")]"" W IBDEVICE("DUPLEX_LONG") Q
	.I IBFORM("PRINT_MODE")="DUPLEX_SHORT",IBDEVICE("DUPLEX_SHORT")]"" W IBDEVICE("DUPLEX_SHORT") Q
	.I IBDEVICE("SIMPLEX")]"" W IBDEVICE("SIMPLEX") Q
	.I $Y W @IOF
	;
	S PERPAGE=IBFORM("PAGE_HT")
	I 'PERPAGE!(PERPAGE>IOSL) S PERPAGE=IOSL
	S NXTUL=$O(@IBARRAY("UNDERLINES")@("")),NXTTXT=$O(@IBARRAY("TEXT")@(""))
	S STARTY=""
	S:NXTTXT'="" LINE=$G(@IBARRAY("TEXT")@(NXTTXT))
	;
	;want this rectangular fill area to apply to underlining
	W:IBDEVICE("PCL") $C(27)_"*c35G"
	;
	D REGISTER^IBDF2F1(PAGE)
	F CURY=0:1 D  I NXTUL'>0,NXTTXT'>0 Q
	.I (CURY>0)&('(CURY#PERPAGE)) D
	..I ((NXTTXT'="")!(NXTUL'="")) D:IBDEVICE("GRAPHICS")&('IBDEVICE("PCL")) PGRPHCS(.STARTY,CURY) D:IBDEVICE("PCL") DRAW(.STARTY,CURY),WHITEOUT W @IOF S PAGE=PAGE+1 D REGISTER^IBDF2F1(PAGE)
	.E  I (CURY#PERPAGE) W !
	.I CURY=NXTTXT D
	..S CURX=0,NXTX="" F  S NXTX=$O(@IBARRAY("CONTROLS")@(NXTTXT,NXTX)) Q:NXTX=""  D
	...W $E(LINE,+CURX,NXTX),$$CTRLS^IBDFU($G(@IBARRAY("CONTROLS")@(NXTTXT,NXTX)),NXTX,NXTTXT#PERPAGE)
	...S CURX=NXTX+1
	..S STRING=$E(LINE,CURX,240) W:STRING'="" STRING
	..S NXTTXT=$O(@IBARRAY("TEXT")@(NXTTXT)) S:NXTTXT LINE=$G(@IBARRAY("TEXT")@(NXTTXT))
	.I CURY=NXTUL D UNDRLINE
	;
	;draw stuff requiring graphics mode - obsoleted by PCL, if available
	D:IBDEVICE("GRAPHICS")&('IBDEVICE("PCL")) PGRPHCS(STARTY,0)
	;
	;draw boxes,bubbles, etc. that require PCL
	D:IBDEVICE("PCL") DRAW(STARTY,0),WHITEOUT
	;
	W @IOF
	;go back to simplex
	D
	.I IBFORM("PRINT_MODE")="DUPLEX_LONG",IBDEVICE("DUPLEX_LONG")]"",IBDEVICE("SIMPLEX")]"" W IBDEVICE("SIMPLEX") Q
	.I IBFORM("PRINT_MODE")="DUPLEX_SHORT",IBDEVICE("DUPLEX_SHORT")]"",IBDEVICE("SIMPLEX")]"" W IBDEVICE("SIMPLEX")
	;
	;set the printer for other stuff to print
	S X=IOM X $G(^%ZOSF("RM")) K X ;sets device to wrap
	;set the printer to 132 col for everything else to print
	I IBDEVICE("PCL") W $C(27),"E",$C(27),"(s0p16.67h8.5v0s0b0T",!,$C(27),"&l6C" S IOSL=80
	Q
	;
UNDRLINE	;
	Q:IBDEVICE("CRT")
	N UL
	S UL=$G(@IBARRAY("UNDERLINES")@(NXTUL))
	I 'IBDEVICE("PCL") D
	.W:UL'="" $C(13),UL
	;do it a bit differently if IBDEVICE("PCL")
	I IBDEVICE("PCL") D
	.W:UL'="" $C(13),$C(27)_"*v2t1n0O",UL,$C(27)_"*v0T"
	.;!!!!!!!!! with the area fill command - needed? see above
	.;W:UL'="" $C(13),$C(27)_"*c35G",$C(27)_"*v2t1n0O",UL,$C(27)_"*v0T"
	S NXTUL=$O(@IBARRAY("UNDERLINES")@(NXTUL))
	Q
PGRPHCS(STARTY,LASTY)	;print graphics - only for raster devices
	N DX,DY,GRPHCS,LINE
	W IOG1
	S (DX,DY)=0 X IOXY
	S LINE=STARTY F  S LINE=$O(@IBARRAY("GRAPHICS")@(LINE)) Q:(LINE="")!($G(LASTY)&(LINE'<LASTY))  D
	.S DX="" F  S DX=$O(@IBARRAY("GRAPHICS")@(LINE,DX)) Q:DX=""  S GRPHCS=$G(@IBARRAY("GRAPHICS")@(LINE,DX)),GRPHCS=$$GRPHCS^IBDFU(GRPHCS) I GRPHCS'="" S DY=LINE#PERPAGE W ! X IOXY W GRPHCS
	S STARTY=LASTY-1
	W IOG0
	Q
	;
DRAW(STARTY,LASTY)	; draws the objects needing HP-GL/2 
	N ROW,COL,BLK,NODE,WIDTH,HT,IEN,PRNTTYPE
	W *27,"*p0x0Y"
	W *27,"*c5760x7200Y"
	W *27,"*c0T"
	W *27,"%1B"
	W "IN;SP1;"
	W "SC0,5760,7200,0;" ;sets up the coordinate system same as PCL
	W "AD3,16.6;" ;sets the alternate font for the labels
	;
	;draw bubbles
	W "SV1,30;" ;set fill to 30%
	W "PW.15;" ;set pen width to .15 mm
	S ROW=STARTY
	F  S ROW=$O(@IBARRAY("BUBBLES")@(ROW)) Q:(ROW="")!($G(LASTY)&(ROW'<LASTY))  S COL="" F  S COL=$O(@IBARRAY("BUBBLES")@(ROW,COL)) Q:COL=""  D DRWBBL(ROW#PERPAGE,COL)
	;
	;draw boxes
	W "PW.4;" ;set pen width to .4 mm
	;set the fill to 100%
	W "SV1,100;"
	S ROW=STARTY
	F  S ROW=$O(@IBARRAY("BOXES")@(ROW)) Q:(ROW="")!($G(LASTY)&(ROW'<(LASTY)))  S COL="" F  S COL=$O(@IBARRAY("BOXES")@(ROW,COL)) Q:COL=""  S BLK=0 F  S BLK=$O(@IBARRAY("BOXES")@(ROW,COL,BLK)) Q:'BLK  D
	.S NODE=$G(@IBARRAY("BOXES")@(ROW,COL,BLK)) S WIDTH=$P(NODE,"^"),HT=$P(NODE,"^",2) D DRWBOX(ROW#PERPAGE,COL,WIDTH,HT)
	;
	;draw hand print fields
	W "PW.15;" ;set pen width to .1 mm
	;set the fill to 40%
	W "SV1,30;"
	S ROW=STARTY
	F  S ROW=$O(@IBARRAY("HAND_PRINT")@(ROW)) Q:(ROW="")!($G(LASTY)&(ROW'<LASTY))  S COL="" F  S COL=$O(@IBARRAY("HAND_PRINT")@(ROW,COL)) Q:COL=""  S IEN=0 F  S IEN=$O(@IBARRAY("HAND_PRINT")@(ROW,COL,IEN)) Q:'IEN  D
	.S NODE=$G(@IBARRAY("HAND_PRINT")@(ROW,COL,IEN)),WIDTH=+$P(NODE,"^",3),PRNTTYPE=$P(NODE,"^",14) Q:('WIDTH)!('PRNTTYPE)
	.D HANDPRNT(ROW#PERPAGE,COL,WIDTH,$P(NODE,"^",6),PRNTTYPE,$P(NODE,"^",17))
	;
	S STARTY=LASTY-1
	W *27,"%0A"
	Q
	;
DRWBBL(Y,X)	;
	;position is in terms of col,row - change to decipoints
	S Y=(Y*IBDEVICE("ROW_HT"))+$S(IBFORM("WIDTH")>96:20,IBFORM("WIDTH")>80:30,1:40),X=(X+$S(IBFORM("WIDTH")>96:.5,IBFORM("WIDTH")>80:.75,1:1))*IBDEVICE("COL_WIDTH")
	;
	;position the pen
	W "PA"_(X)_","_(Y)_";"
	;draw the bubble (a little box)
	W "EA"_(X+87)_","_(Y+45)_";"
	Q
DRWBOX(Y,X,WIDTH,HT)	;
	;position is in terms of col,row - change to decipoints
	S Y=((Y+.75)*IBDEVICE("ROW_HT"))+15,X=(X+.5)*IBDEVICE("COL_WIDTH")
	;position the pen
	W "PA"_(X)_","_(Y)_";"
	;draw the box
	W "EA"_(X+((WIDTH-1)*IBDEVICE("COL_WIDTH")))_","_(Y+((HT-1.7)*IBDEVICE("ROW_HT")))_";"
	Q
HANDPRNT(Y,X,WIDTH,LINES,PRNTTYPE,TYPEDATA)	; draw hand print area
	;FORMAT - contains overlay for the field
	;UNIT - label to print on the right of print area
	;PRNTTYPE = could be for ICR (print comb) or not ICR (no comb, different size)
	N CHAR,FORMAT,UNIT,NODE
	S NODE=""
	I $G(TYPEDATA) S NODE=$G(^IBE(359.1,TYPEDATA,0))
	S FORMAT=$P(NODE,"^",5),UNIT=$P(NODE,"^",11)
	S:LINES'>0 LINES=1
	I PRNTTYPE=2 D
	.;change scale from col,row to decipoints
	.S Y=(Y*IBDEVICE("ROW_HT"))+$S(IBFORM("WIDTH")>96:0,IBFORM("WIDTH")>80:15,1:30),X=X*IBDEVICE("COL_WIDTH")
	.F  Q:LINES'>0  D  S LINES=LINES-1,Y=Y+(2*IBDEVICE("ROW_HT"))
	..;position the pen
	..W !,"PA"_(X)_","_(Y)_";"
	..;draw the box
	..W "EA"_(X+(172.7654*WIDTH))_","_(Y+(180))_";"
	..;print the unit of measurement
	..I $L(UNIT) W "SA;","PA"_(X+50+(172.7654*WIDTH))_",",(Y+(120))_";","LB",UNIT,$CHAR(3),"SS;"
	..;draw the comb
	..N I F I=1:1:WIDTH-1 W "PA"_(X+(172.7654*I))_",",(Y+(180))_";PD;PR0,-180;PU" S CHAR=$E(FORMAT,I+1) I CHAR'="",CHAR'="_" D
	...;character pre-slug
	...W !,"PA"_(X+50+(172.7654*I))_",",(Y+(120))_";"
	...W "LB",CHAR,$CHAR(3)
	;
	I PRNTTYPE=1 D
	.;change scale from col,row to decipoints
	.S Y=(Y*IBDEVICE("ROW_HT")),X=X*IBDEVICE("COL_WIDTH")
	.D CNVRTHT^IBDF2D1(LINES,.LINES)
	.;position the pen
	.W "PA"_(X)_","_(Y)_";"
	.;draw the box
	.W "EA"_(X+(103.6593*WIDTH))_","_(Y+(IBDEVICE("ROW_HT")*LINES))_";"
	Q
	;
WHITEOUT	;puts white space around the anchors - helps insure that the anchors can be located
	;
	;if the form isn't scannable there are no anchor marks
	Q:'IBFORM("SCAN")
	;
	W $C(27),"&a0v0H",!
	;set top margin to top of page
	W $C(27),"&l0E"
	;top left corner (ANCHOR 1)
	W $C(27),"&a354v4H",$C(27),"*c200h60v1P"
	;top middle (ANCHOR 2)
	W $C(27),"&a354v2676H",$C(27),"*c400h60v1P"
	;bottom left (ANCHOR 4)
	W $C(27),"&a7505v4H",$C(27),"*c200h60v1P"
	;top right (ANCHOR 3)
	W $C(27),"&a354v5450H",$C(27),"*c400h60v1P"
	;bottom middle (ANCHOR 5)
	W $C(27),"&a7505v2676H",$C(27),"*c400h60v1P"
	;bottom right (ANCHOR 6)
	W $C(27),"&a7505v5450H",$C(27),"*c400h60v1P"
	Q

IBDF2F1
IBDF2F1	;ALB/CJM - ENCOUNTER FORM - PRINT FORM(sends to printer) ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
REGISTER(PAGE)	;registration for scanning, form # and patient at bottom
	N PAGECHK,TYPECHK,IDCHK,VA
	I IBDEVICE("PCL") D
	.I IBFORM("SCAN") D
	..;calculate the checksums
	..S PAGECHK=(3*PAGE)#29,TYPECHK=(3*IBFORM("TYPE"))#997,IDCHK=(3*(+$G(IBPFID)))#997
	.;set top margin to top of page
	.W $C(27),"&l0E"
	.;
	.I IBFORM("SCAN") D ANCHORS
	.;
	.I $G(IBFORM("SCAN",PAGE)) D
	..; -- black box used to determine if page has data for scanning
	..;    but not for sample forms
	..I '$G(IBDSAMP) W $C(27),"&a7576v3400H",$C(27),"*c140h140v0P",$C(27)
	.;
	.;define font for OCR'd text
	.W $C(27),")s1p10h14v0s0b3T"
	.;define font for non-OCR' text
	.W $C(27)_"(s0p16.67h8.5v0s0b0T"
	.;print the form identifiers
	.W $C(27),"&a330h300V",$C(15),"FORM:",$C(27),"&a650H",$C(14),IBFORM("TYPE")
	.W $C(27),"&a1470H",$C(15),"ID:",$C(27),"&a1700H",$C(14),$G(IBPFID)
	.W $C(27),"&a4830H",$C(15),"PAGE:",$C(27),"&a5150H",$C(14),PAGE
	.;
	.;is the page going to be scanned?
	.I $G(IBFORM("SCAN",PAGE)),$G(IBPFID) D
	..;print the checksums
	..W $C(14),$C(27),"&a3400H",TYPECHK,$C(27),"&a3900H",IDCHK,$C(27),"&a4400H",PAGECHK
	.;
NAM	.;print form id, etc. on bottom of form
	.D
	..W !,$C(15),$C(27),"&a300h7710V"
	..I $G(IBDSAMP) W "Sample Form: ",$P($G(^IBE(357,+$G(IBFORM),0)),"^") Q
	..S X=$G(^TMP("IB",$J,"INTERFACES",+$G(DFN),"DPT PATIENT'S NAME"))
	..W:X'="" X W:X="" $P($G(^DPT(+$G(DFN),0)),"^")
	.;
	.D
	..W $C(27),"&a1900H"
	..I $G(IBDSAMP) W "Clinic: ",$P($G(^SC(+$G(IBCLINIC),0)),"^") Q
	..S X=$G(^TMP("IB",$J,"INTERFACES",+$G(DFN),"DPT PATIENT'S PID"))
	..W:X'="" X I X="",+$G(DFN) D PID^VADPT W VA("PID")
	.;
	.W $C(27),"&a4200H","VA FORM 10-0360  APR 1994"
	.W $C(27),"&a4200h7620V","Station: ",$P($$SITE^VASITE,"^",3)
	.;
	.;reset the primary font & top margin, position cursor at the top
	.;reset the font for body of form
	.D
	..I IBFORM("WIDTH")>96 W $C(27)_"(s0p16.67h8.5v0s0b0T" Q
	..I IBFORM("WIDTH")>80 W $C(27)_"(s0p12h10v0s0b0T" Q
	..W $C(27)_"(s0p10h12v0s0b0T"
	.;set top margin to leave 4 lines at top
	.W $C(27),"&l4E"
	.;set cursor to top left
	.W $C(27),"&a0c0R"
	;
	;move cursor to top left
	I '(IBFORM("SCAN")&IBDEVICE("PCL")),IBDEVICE("RASTER") S (DX,DY)=0 X IOXY K DX,DY
	Q
	;
ANCHORS	;draws the anchors
	W !
	;top left corner (ANCHOR 1)
	W $C(27),"&a184v4H",$C(27),"*c4h120v0P",$C(27),"*c124h4v0P"
	;top middle (ANCHOR 2)
	W $C(27),"&a184v2876H",$C(27),"*c4h120v0P",$C(27),"*c124h4v0P"
	;bottom left (ANCHOR 4)
	W $C(27),"&a7732v4H",$C(27),"*c124h4v0P",$C(27),"&a7615v4H",$C(27),"*c4h121v0P"
	;top right (ANCHOR 3)
	W $C(27),"&a184v5534H",$C(27),"*c116h4v0P",$C(27),"&a184v5650H",$C(27),"*c4h120v0P"
	;bottom middle (ANCHOR 5)
	W !,$C(27),"&a7732v2876H",$C(27),"*c123h4v0P",$C(27),"&a7615v2876H",$C(27),"*c4h121v0P"
	;bottom right (ANCHOR 6)
	W $C(27),"&a7732v5534H",$C(27),"*c116h4v0P",$C(27),"&a7616v5650H",$C(27),"*c4h120v0P"
	Q

IBDF2G
IBDF2G	;ALB/CJM - ENCOUNTER FORM - (prints input field);07/20/94
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
MFLD(FIELD)	;for printing the multiple choice field=FIELD
	N BLOCK,LABEL,ROW,COL,NODE,CHOICE,ID,DISP,FNAME,FID,ALLOWED,HDR,QLFR,PI
	Q:'$G(FIELD)
	S NODE=$G(^IBE(357.93,FIELD,0))
	S BLOCK=$P(NODE,"^",8)
	;if the input field does not belong to the right block, reindex it and quit
	I BLOCK'=IBBLK K DA S DA=FIELD,DIK="^IBE(357.93," D IX^DIK K DIK Q
	;
	;get the package interface
	S PI=$P(NODE,"^",6)
	;
	S COL=$P(NODE,"^",3)
	S ROW=$P(NODE,"^",4)
	S HDR=$P(NODE,"^",2)
	I HDR]" ",ROW=+ROW,COL=+COL
	E  S HDR=""
	S DISP=$P(NODE,"^",7)
	S FNAME=$P(NODE,"^")
	S ALLOWED=$P(NODE,"^",9)
	D:HDR]"" DRWSTR^IBDFU(+ROW,+COL,HDR,DISP)
	;
	;print the choices
	S FID="M"_FIELD
	S CHOICE=0 F  S CHOICE=$O(^IBE(357.93,FIELD,1,CHOICE)) Q:'CHOICE  D
	.S NODE=$G(^IBE(357.93,FIELD,1,CHOICE,0))
	.S ID=$P(NODE,"^",8) ;the ID of the choice
	.S LABEL=$P(NODE,"^",5)
	.S COL=$P(NODE,"^",2)
	.S ROW=$P(NODE,"^",3)
	.S DISP=$P(NODE,"^",4)
	.I LABEL]" ",ROW=+ROW,COL=+COL
	.E  S LABEL=""
	.D:LABEL]"" DRWSTR^IBDFU(ROW,COL,LABEL,DISP)
	.S COL=$P(NODE,"^",6)
	.S ROW=$P(NODE,"^",7)
	.S QLFR=$P(NODE,"^",9)
	.I ROW=+ROW,COL=+COL D DRWBBL^IBDFM1(ROW,COL,PI,ID,FNAME,FID,ALLOWED,LABEL,HDR,QLFR)
	Q

IBDF2H
IBDF2H	;ALB/CJM - ENCOUNTER FORM - (prints hand print field);07/20/94
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
HFLD(FIELD)	;for printing the input field=FIELD
	N BLOCK,LABEL,ROW,COL,NODE,DISP,FNAME,FID,TYPEDATA,PI,FORMAT,WIDTH,UNIT
	Q:'$G(FIELD)
	S NODE=$G(^IBE(359.94,FIELD,0))
	S BLOCK=$P(NODE,"^",8)
	;if the input field does not belong to the right block, reindex it and quit
	I BLOCK'=IBBLK K DA S DA=FIELD,DIK="^IBE(359.94," D IX^DIK K DIK Q
	S PI=$P(NODE,"^",6)
	S COL=$P(NODE,"^",3)
	S ROW=$P(NODE,"^",4)
	S LABEL=$P(NODE,"^",2)
	S DISP=$P(NODE,"^",5)
	S TYPEDATA=$P(NODE,"^",10)
	S FNAME=$P(NODE,"^")
	S FID="H"_FIELD
	D DRWSTR^IBDFU(+ROW,+COL,LABEL,DISP)
	;
	I TYPEDATA S NODE=$G(^IBE(359.1,TYPEDATA,0)) S FORMAT=$P(NODE,"^",5),WIDTH=$P(NODE,"^",6),UNIT=$P(NODE,"^",11)
	D DRWHAND^IBDFM1(ROW,COL+$L(LABEL)+1,WIDTH,PI,1,FID,FNAME,LABEL,"",1,2,2,TYPEDATA)
	Q

IBDF3
IBDF3	;ALB/CJM - ENCOUNTER FORM - EDIT SELECTION LIST ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
EDITLIST	;expects IBBLK to be defined
	N IBLIST,IBVALMBG
	S IBVALMBG=VALMBG,VALMBCK="R"
	D SELECT
	I IBLIST D
	.Q:$$LSTDSCR2^IBDFU1(.IBLIST)
	.I IBLIST("DYNAMIC") W !,"You can not edit the contents of this list - it is determined at print time!" D PAUSE^IBDFU5 Q
	.D EN^VALM("IBDF DISPLAY GROUPS FOR EDIT")
	.K IBLIST
	.D UNCMPBLK^IBDF19(IBBLK)
	.I '$G(IBFASTXT) D
	..D IDXBLOCK^IBDFU4
	..S VALMBCK="R",VALMBG=IBVALMBG
	Q
ONENTRY	;
	D IDXGRP
	Q
ONEXIT	;
	K @VALMAR
	Q
SELECT	; 
	; -- dic("s") passed in from ibdfgrp
	S IBLIST=""
	Q:'$G(IBBLK)
	S DIC="^IBE(357.2,",DIC(0)="EQ",D="C",X=IBBLK
	D IX^DIC K DIC
	S:+Y>0 IBLIST=+Y
	Q
ADDBLANK()	;
	N IGRP
	S GRP="" F  S GRP=$O(^IBE(357.4,"D",IBLIST,GRP)) Q:'GRP  Q:$P(^IBE(357.4,GRP,0),"^")="BLANK"
	I 'GRP D
	.K DIC,DD,DO,DINUM S DIC="^IBE(357.4,",DIC(0)="",X="BLANK",DIC(0)=""
	.D FILE^DICN K DIC
	.S GRP=$S(+Y<0:"",1:+Y)
	I GRP K DA,DIE S DA=GRP,DIE="^IBE(357.4,",DR=".02////0;.03////"_IBLIST D ^DIE K DIE,DA,DR
	Q GRP
IDXGRP	;build an index of groups in print order for list processor
	N GRP,GRPODR
	K @VALMAR
	S VALMCNT=0
	S GRPODR="" F  S GRPODR=$O(^IBE(357.4,"APO",IBLIST,GRPODR)) Q:GRPODR=""  D
	.S GRP="" F  S GRP=$O(^IBE(357.4,"APO",IBLIST,GRPODR,GRP)) Q:'GRP  D
	..;
	..;make sure the index is correct
	..I $P($G(^IBE(357.4,GRP,0)),"^",3)'=IBLIST K DIK,DA S DIK="^IBE(357.4,",DA=GRP D IX^DIK K DIK,DA,^IBE(357.4,"APO",IBLIST,GRPODR,GRP) Q
	..;
	..S VALMCNT=VALMCNT+1
	..S @VALMAR@(VALMCNT,0)=$$DISPLAY(GRP,VALMCNT),@VALMAR@("IDX",VALMCNT,VALMCNT)=GRP
	..D FLDCTRL^VALM10(VALMCNT,"ID") ;set video for ID column
	Q
LMGRPHDR	;sets the screen hdr
	S VALMHDR(1)="PRINT GROUPS CURRENTLY DEFINED FOR '"_$$LISTNAME_"' SELECTION LIST"
	Q
DISPLAY(GRP,ROW)	;
	N NODE0,NAME,INV
	S NODE0=$G(^IBE(357.4,GRP,0)),NAME=$P(NODE0,"^"),INV=$P(NODE0,"^",4)
	I NAME="BLANK" S NAME="*i  BLANK (Not Displayed)"
	I NAME'="BLANK",INV="I" S NAME="*i  "_NAME
	I NAME'="BLANK",INV'="I" S NAME="    "_NAME
	Q $$PADRIGHT^IBDFU(ROW,6)_$J($P(NODE0,"^",2),6)_$J("",3)_$$PADRIGHT^IBDFU(NAME,40)_$J($$SLCTNCNT(GRP),6)_" selection(s)"
SLCTNCNT(GRP)	;
	N CNT,SLCTN
	S CNT=0,SLCTN=""
	F  S SLCTN=$O(^IBE(357.3,"D",GRP,SLCTN)) Q:'SLCTN  S CNT=CNT+1
	Q CNT
LISTNAME()	;
	Q $P($G(^IBE(357.2,IBLIST,0)),"^",1)
ADDGRP	;
	N NAME,QUIT,GRP
	S QUIT=0
	F  D  Q:QUIT
	.K DIR S DIR(0)="357.4,.01O",DIR("B")="" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
	.S NAME=Y
	.K DIC,DD,DO,DINUM S DIC="^IBE(357.4,",X=NAME,DIC(0)=""
	.D FILE^DICN K DIC,DIE,DA
	.I +Y<0 W !,"Unable to create a new record!" D PAUSE^VALM1 S QUIT=1 Q
	.I +Y>0 K DA S DA=+Y,DIE="^IBE(357.4,",DIE("NO^")="Any value",DR=".02;.04;.03////"_IBLIST D ^DIE K DIC,DIE,DR,DA
	.W !,"Now Another!",!
	D IDXGRP
	S VALMBCK="R"
	Q
	;
ADDEMPTY	;adds a blank group - a place holder that takes up space on the form
	;
	N ORDER,QUIT,GRP
	S QUIT=0
	F  D  Q:QUIT
	.K DIR S DIR(0)="357.4,.02O",DIR("B")="" D ^DIR K DIR I (Y="")!$D(DIRUT) S QUIT=1 Q
	.S ORDER=Y
	.K DIC,DD,DO,DINUM S DIC="^IBE(357.4,",X=" ",DIC(0)=""
	.D FILE^DICN K DIC,DIE,DA
	.I +Y<0 W !,"Unable to create a new group record!" D PAUSE^VALM1 S QUIT=1 Q
	.I +Y>0 K DA S DA=+Y,DIE="^IBE(357.4,",DIE("NO^")="Any value",DR=".02////"_ORDER_";.03////"_IBLIST D ^DIE K DIC,DIE,DR,DA
	.W !,"Now Another!",!
	D IDXGRP
	S VALMBCK="R"
	Q
EDTSLCTN	;
	N SEL,IBGRP S SEL=""
	I $G(VALMCNT) D
	.D EN^VALM2($G(XQORNOD(0)),"S")
	.S SEL=$O(VALMY(""))
	I SEL="" D
	.S IBGRP=$$ADDBLANK Q:'IBGRP
	E  S IBGRP=$G(@VALMAR@("IDX",SEL,SEL))
	D:IBGRP SLCTNS^IBDF4,IDXGRP
	S VALMBCK="R"
	Q
EDITGRP	;
	N SEL,GRP
	S VALMBCK="R"
	D EN^VALM2($G(XQORNOD(0)),"S")
	S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
	.S GRP=$G(@VALMAR@("IDX",SEL,SEL))
	.D:GRP
	..K DIE,DA S DIE=357.4,DA=GRP,DR=".01;.02;.04" D ^DIE
	..I '$D(DA) D DELSLCTN
	..K DIE,DA,DR,DIC
	D IDXGRP
	S VALMBCK="R"
	Q
DELSLCTN	;deletes a group's selections
	N SLCTN
	S SLCTN="",DIK="^IBE(357.3,"
	F  S SLCTN=$O(^IBE(357.3,"D",GRP,SLCTN)) Q:'SLCTN  I $P($G(^IBE(357.3,SLCTN,0)),"^",4)=GRP K DA S DA=SLCTN D ^DIK
	K DIK,DA
	Q
DELGRP	;delete a group and all of its selections
	N SEL,GRP
	S VALMBCK="R"
	D EN^VALM2($G(XQORNOD(0)))
	S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
	.S GRP=$G(@VALMAR@("IDX",SEL,SEL))
	.Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.4,GRP,0)),"^"))
	.I GRP D DELSLCTN K DA S DIK="^IBE(357.4,",DA=GRP D ^DIK K DIK
	D IDXGRP
	S VALMBCK="R"
	Q

IBDF4
IBDF4	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(editing group's selections) ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
SLCTNS	;
	N IBRTN
	Q:IBLIST'=$P($G(^IBE(357.4,IBGRP,0)),"^",3)
	S IBRTN=IBLIST("RTN")
	D RTNDSCR^IBDFU1B(.IBRTN)
	D KILL^IBDFUA
	D EN^VALM("IBDF EDIT GROUP'S SELECTIONS") ;call the list manager
	Q
ONENTRY	;entry code for list manager
	D IDXSLCTN
	Q
ONEXIT	;exit code for the list manager
	K @VALMAR
	Q
	;
IDXSLCTN	;build an array of selections in print order for the list processor
	N SLCTN,ODR,NODE
	K @VALMAR
	S ODR="",VALMCNT=0
	F  S ODR=$O(^IBE(357.3,"APO",IBLIST,IBGRP,ODR)) Q:ODR=""  D
	.S SLCTN="" F  S SLCTN=$O(^IBE(357.3,"APO",IBLIST,IBGRP,ODR,SLCTN)) Q:'SLCTN  D
	..;check for messed up index and take appropriate action
	..S NODE=$G(^IBE(357.3,SLCTN,0))
	..I ($P(NODE,"^",3)'=IBLIST)!($P(NODE,"^",4)'=IBGRP) D  Q
	...K ^IBE(357.3,"APO",IBLIST,IBGRP,ODR,SLCTN)
	...I $P(NODE,"^",3)'=IBLIST,$P(NODE,"^",4)=IBGRP D  Q
	....K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D ^DIK K DIK,DA
	...I $P(NODE,"^",3)=IBLIST,$P($G(IBE(357.4,+IBGRP,0)),"^",3)'=IBLIST D  Q
	....K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D ^DIK K DIK,DA
	...K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D IX^DIK K DIK,DA
	..;
	..S VALMCNT=VALMCNT+1
	..S @VALMAR@(VALMCNT,0)=$$DISPLAY(SLCTN,VALMCNT),@VALMAR@("IDX",VALMCNT,VALMCNT)=SLCTN
	..D FLDCTRL^VALM10(VALMCNT,"ID") ;set video for ID column
	Q
LMGRPHDR	;header for the screen
	S VALMHDR(1)="SELECTIONS CURRENTLY DEFINED FOR '"_$$GRPNAME_"' PRINT GROUP"
	Q
	;
GRPNAME()	;the name of the selection group
	Q $P($G(^IBE(357.4,IBGRP,0)),"^",1)
	;
DISPLAY(SLCTN,COUNT)	;returns a line to display to the list containing a selection - SLCTN is a ptr to the selectin, COUNT is the number of the selection on the list
	N SC,SCDA,VAL,RET,W,NODE,ORDER
	;W - an array cotaining the widths of the subcolumns that contain text
	S VAL=""
	S RET=$$PADRIGHT^IBDFU(COUNT,4)
	S NODE=$G(^IBE(357.3,SLCTN,0))
	S ORDER=$P(NODE,"^",5),RET=RET_$J(ORDER,6,2)
	I $P(NODE,"^",2) S RET=RET_$S($P(NODE,"^",7):" SH",1:" PH")_"| "_$P(NODE,"^",6)
	I '$P(NODE,"^",2) S RET=RET_"  ",SC="" F SC=1:1:8 S SCDA=$O(^IBE(357.3,SLCTN,1,"B",SC,"")) D
	.I $G(IBLIST("SCTYPE",SC))=1 S W(SC)=IBLIST("SCW",SC)*(1+IBLIST("BTWN"))
	.S:$G(W(SC)) VAL=$$PADRIGHT^IBDFU($S(SCDA:$P($G(^IBE(357.3,SLCTN,1,SCDA,0)),"^",2),1:""),W(SC))
	.S:VAL'="" RET=RET_" | "_VAL
	.S VAL=""
	Q RET
ADDSLCTN	;allows the user to add a selection to the selection group
	N QUIT,SUB
	;
	S VALMBCK="R"
	D FULL^VALM1
	I IBRTN("ACTION")'=3 D NOGOOD G ADDEXIT
	K @IBRTN("DATA_LOCATION")
	S QUIT=0 F  D  Q:QUIT  W !!,"Now for another!"
	.I '$$DORTN^IBDFU1B(.IBRTN) S QUIT=1 D NOGOOD Q
	.I '$D(@IBRTN("DATA_LOCATION")) S QUIT=1 Q
	.D ADDREC(.QUIT) ;edits and adds the selection
	.K @IBRTN("DATA_LOCATION")
ADDEXIT	;
	D IDXSLCTN
	Q
ADDREC(QUIT,ORDER,SLCTN)	;allows the user to number the selection, edit the editable subcolumns, then adds the record - sets QUIT=1 if user quits
	N SUB,COUNT,NODE,VAL,DLAYGO
	I '$G(ORDER) D  Q:QUIT
	.K DIR S DIR(0)="357.3,.05",DIR("B")=$$NEXT^IBDF4A(IBLIST,IBGRP) D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
	.S ORDER=+Y
	S VAL=$G(@IBRTN("DATA_LOCATION"))
	F SUB=1:1:8 D  Q:QUIT
	.I $G(IBLIST("SCTYPE",SUB))=1 I IBLIST("SCPIECE",SUB),IBLIST("SCW",SUB) D
	..S NODE=$$DATANODE^IBDFU1B(IBRTN,IBLIST("SCPIECE",SUB))
	..I NODE]"" S VAL(SUB)=$P($G(@IBRTN("DATA_LOCATION")@(NODE)),"^",IBLIST("SCPIECE",SUB))
	..E  S VAL(SUB)=$P(VAL,"^",IBLIST("SCPIECE",SUB))
	..Q:('IBLIST("SCEDITABLE",SUB))!((IBRTN("WIDTH",1))&(IBLIST("SCPIECE",SUB)=1))
	..W !!,"Subcolumn Header: "_IBLIST("SCHDR",SUB) K DIR S DIR(0)="FO^0:"_(IBLIST("SCW",SUB)*(1+IBLIST("BTWN"))),DIR("A")="Edit Subcolumn "_SUB,DIR("B")=VAL(SUB)
	..D ^DIR K DIR S:$D(DTOUT)!$D(DUOUT) QUIT=1 Q:QUIT  S VAL(SUB)=Y I IBLIST("SCPIECE",SUB)=1,X="" S QUIT=1
	Q:QUIT
	;we have all the data needed to add the selection - so add it
	S NODE=$S($P(VAL,"^")'="":$P(VAL,"^"),1:ORDER)_"^^"_IBLIST_"^"_IBGRP_"^"_ORDER
	K DIC,DD,DO,DINUM S DIC="^IBE(357.3,",X=$P(NODE,"^",1),DIC(0)="FL",DLAYGO=357.3
	D FILE^DICN K DIC,DIE,DA
	S SLCTN=$S(+Y<0:"",1:+Y)
	I 'SLCTN W !,"Unable to create a new selection record!" D PAUSE^VALM1 S QUIT=1 Q
	S ^IBE(357.3,SLCTN,0)=NODE
	;add the subcolumn value multiple
	S COUNT=0 F SUB=1:1:8 I $G(VAL(SUB))'="" S COUNT=COUNT+1,^IBE(357.3,SLCTN,1,COUNT,0)=SUB_"^"_VAL(SUB)
	S ^IBE(357.3,SLCTN,1,0)="^357.31IA^"_COUNT_"^"_COUNT
	K DA S DA=SLCTN,DIK="^IBE(357.3," D IX^DIK K DIK,DA
	D NARR,TERM
	Q
	;
NARR	; -- edit provider narrative, but only for selections where the
	;    interface allows editing
	N DIE,DA,DR
	I $P($G(^IBE(357.6,+$P($G(^IBE(357.2,+IBLIST,0)),U,11),0)),U,17) D
	.S DIE="^IBE(357.3,",DA=SLCTN,DR=2.01 D ^DIE
	Q
	;
TERM	; -- map selection to clinical lexicon, but only for selections where
	;    the package interface allows editing
	N DIE,DA,DR,GMPTUN,GMPTSUB,GMPTSHOW,XTLKGLB,XTLKHLP,XTLKKSCH,XTLKSAY
	I $P($G(^IBE(357.6,+$P($G(^IBE(357.2,+IBLIST,0)),U,11),0)),U,18) D
	.;D CONFIG^GMPTSET("ICD","ICD")
	.D CONFIG^GMPTSET("GMPL","PL1")
	.S DIE="^IBE(357.3,",DA=SLCTN,DR="2.02//"_$P($G(^IBE(357.3,DA,0)),"^") D ^DIE
	Q
	;
NOGOOD	;
	W !,"The package interface routine for selection is not properly defined" D PAUSE^VALM1
	Q
	;
SEQUENCE	;allows the user to resequence all of the selections on the list
	;
	N SUBCOL,CNT,P,SORT,GROUP,NODE,VALUE,ITEM,IEN,HDR
	S VALMBCK="R"
	D FULL^VALM1
	;
	;sort by which subcolumn?
	K DIR S DIR("A")="Which subcolumn do you want to sort by?",DIR("?")=" "
	S SUBCOL=0 F  S SUBCOL=$O(IBLIST("SCTYPE",SUBCOL)) Q:'SUBCOL  I IBLIST("SCTYPE",SUBCOL)=1 S SUBCOL(SUBCOL)=""
	S (CNT,SUBCOL)=0,DIR(0)="SOX^"
	F CNT=1:1 S SUBCOL=$O(SUBCOL(SUBCOL)) Q:'SUBCOL  D
	.S P=IBLIST("SCPIECE",SUBCOL),P=$S(P=1:1,P=2:3,P=3:5,P=4:7,P=5:9,P=6:11,P=7:13,1:0),HDR=$P($G(^IBE(357.6,+IBLIST("RTN"),2)),"^",P),DIR("?",CNT)=SUBCOL_" = "_HDR
	.S HDR=$S($G(IBLIST("SCHDR",SUBCOL))="":HDR,1:IBLIST("SCHDR",SUBCOL))
	.S DIR(0)=DIR(0)_SUBCOL_":"_HDR_";"
	D ^DIR
	Q:$D(DIRUT)!(Y=-1)
	K SUBCOL S SUBCOL=+Y
	;
	;sort aphabetically or numerically?
	K DIR
	S DIR("A")="How should the list be sorted?",DIR(0)="SO^1:ALPHABETICALLY;2:NUMERICALLY;",DIR("B")="ALPHABETICALLY"
	D ^DIR
	Q:$D(DIRUT)!(Y=-1)
	S SORT=Y
	;
	;sort
	S ITEM=0 F  S ITEM=$O(^IBE(357.3,"C",IBLIST,ITEM)) Q:'ITEM  D
	.S NODE=$G(^IBE(357.3,ITEM,0))
	.I ($P(NODE,"^",3)'=IBLIST)!($P(NODE,"^",2)) Q
	.S GROUP=+$P(NODE,"^",4)
	.Q:$P($G(^IBE(357.4,GROUP,0)),"^",3)'=IBLIST
	.S IEN=$O(^IBE(357.3,ITEM,1,"B",SUBCOL,0)) Q:'IEN
	.S VALUE=$P($G(^IBE(357.3,ITEM,1,IEN,0)),"^",2)
	.S VALUE=$S(SORT=1:VALUE=" "_VALUE,1:+VALUE)
	.S ^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,$E(VALUE,1,40),ITEM)=""
	;
	;set the order
	S GROUP=0
	F  S GROUP=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP)) Q:'GROUP  D
	.S VALUE="",CNT=0
	.F  S VALUE=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,VALUE)) Q:VALUE=""  D
	..S ITEM=0 F  S ITEM=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,VALUE,ITEM)) Q:'ITEM  D
	...S CNT=CNT+1
	...K DIE,DA,DR S DIE="^IBE(357.3,",DR=".05///"_CNT,DA=ITEM D ^DIE K DIE,DA,DR
	;
	K Y,X,DIR,^TMP("IBDF",$J,"RESEQUENCE LIST")
	D IDXGRP^IBDF3
	Q

IBDF4A
IBDF4A	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(editing group's selections - continued from IBDF4) ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
EDIT	;allows editing of an existing selection
	N SEL,SUB,SLCTN,SC,NODE
	D EN^VALM2($G(XQORNOD(0)),"S")
	S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
	.W !,"Editing Entry #",SEL
	.S SLCTN=$G(@VALMAR@("IDX",SEL,SEL)) Q:'SLCTN
	.S NODE=$G(^IBE(357.3,SLCTN,0))
	.;re-index the record, to insure it is good                             
	.K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D IX^DIK K DIK
	.;edit the order of the selection - also, for placeholders, the text, then quit
	.I $P(NODE,"^",2) D  Q
	..D FULL^VALM1
	..K DA,DIE S DA=SLCTN,DIE=357.3,DR="[IBDF EDIT PLACE HOLDER]" D ^DIE
	.K DIE,DA S DA=SLCTN,DIE=357.3,DR=".05;S CONT=1" S CONT=0 D ^DIE
	.;add any missing subcolumns
	.S SC=0 F SC=1:1:8 I $G(IBLIST("SCTYPE",SC))=1 I '$D(^IBE(357.3,SLCTN,1,"B",SC)) D
	..K DA,DO,DINUM,DIC
	..N DLAYGO
	..S DIC="^IBE(357.3,"_SLCTN_",1,",DA(1)=SLCTN,X=SC,DIC(0)="L",DLAYGO=357.3 D FILE^DICN
	.;now allow the user to edit editable subcolumns - CONT=0 means the user up-arrowed out, so stop
	.I CONT S SUB=0 F  S SUB=$O(^IBE(357.3,SLCTN,1,SUB)) Q:'SUB  D
	..S SC=+$G(^IBE(357.3,SLCTN,1,SUB,0)) I $G(IBLIST("SCTYPE",SC))=1,$G(IBLIST("SCPIECE",SC)),$G(IBLIST("SCEDITABLE",SC)) D
	...I $G(^IBE(357.3,SLCTN,1,0))="" S ^IBE(357.3,SLCTN,1,0)="^357.31AI^"
	...S DIE="^IBE(357.3,"_SLCTN_",1,",DA(1)=SLCTN,DA=SUB,DR=".02;S CONT=1",CONT=0 W !!,"Editing Subcolumn "_SC_": Header="_IBLIST("SCHDR",SC) D ^DIE I 'CONT Q
	.D NARR^IBDF4 W !
	.D TERM^IBDF4 W !
	K DIE,DA,DR
	D IDXSLCTN^IBDF4
	S VALMBCK="R"
EDITEXIT	;
	Q
DELETE	;allows the user to select selections to delete
	N SEL
	D EN^VALM2($G(XQORNOD(0)))
	K DA
	S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
	.S DIK="^IBE(357.3,",DA=$G(@VALMAR@("IDX",SEL,SEL))
	.Q:'$$RUSURE^IBDFU5("Selection #"_SEL)
	.D ^DIK
	.D KILL^VALM10(SEL)
	K DIK,DA
	D IDXSLCTN^IBDF4
	S VALMBCK="R"
	Q
	;
ADDBLANK	;allows the user to add a dummy selection to the selection group
	;i.e., a place holder that will not actually print a selection
	;
	D FULL^VALM1
	D ADD
	D IDXSLCTN^IBDF4
	S VALMBCK="R"
	Q
	;
NEXT(IBLIST,IBGRP)	;returns the next print order to assign=last + 1
	Q (1+$O(^IBE(357.3,"APO",IBLIST,IBGRP,""),-1))
	;
ASKMORE()	;ask if the user wants to add another, returns 1 or 0
	K DIR
	S DIR(0)="Y",DIR("A")="Do you want to add another",DIR("B")="NO"
	D ^DIR
	K DIR
	I $D(DIRUT)!'Y Q 0
	Q 1
	;
ADD	;allows the user to add a dummy selection to the selection group
	;i.e., a place holder that will not actually print a selection
	;
	N QUIT,ORDER,SLCTN,NODE
	S QUIT=0 F  D  Q:QUIT  Q:'$$ASKMORE()
	.S ORDER=$$NEXT(IBLIST,IBGRP)
	.;we have all the data needed to add the selection - so add it
	.S NODE=ORDER_"^"_1_"^"_IBLIST_"^"_IBGRP_"^"_ORDER
	.K DIC,DD,DO,DINUM
	.N DLAYGO
	.S DIC="^IBE(357.3,",X=ORDER,DIC(0)="FL",DLAYGO=357.3
	.D FILE^DICN K DIC,DIE,DA
	.S SLCTN=$S(+Y<0:"",1:+Y)
	.I 'SLCTN W !,"Unable to create the place holder!" D PAUSE^VALM1 S QUIT=1 Q
	.S ^IBE(357.3,SLCTN,0)=NODE
	.K DA S DA=SLCTN,DIK="^IBE(357.3," D IX^DIK K DIK,DA
	.K DIE S DA=SLCTN,DIE=357.3,DR="[IBDF EDIT PLACE HOLDER]" D ^DIE K DIE,DA
	Q

IBDF5
IBDF5	;ALB/CJM - ENCOUNTER FORM (edit a form);NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;displays the form for editing using the list processor
	;
	;these variables should always be defined while editing a form
	;IBFORM - contains the form description
INIT	;
	;
	Q:'$$FORMDSCR^IBDFU1C(.IBFORM)
	D IDXFORM^IBDF5A()
	Q
EXIT	;
	K @VALMAR
	Q
HDR	;the screen header, a ruler
	S VALMHDR(1)=$$PADRIGHT^IBDFU("",4) ;VALMHDR(2)=VALMHDR(2)_0
	F I=1:1:16 S VALMHDR(1)=VALMHDR(1)_$J(I,10)
	Q
DELETE	 ;allows user to select a block for deletion
	N IBBLK,IBVALMBG,TOP,BOT
	S VALMBCK="R",IBVALMBG=$G(VALMBG)
	S VALMBG=IBVALMBG
	D FULL^VALM1
	S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,IOSL)
	Q:'IBBLK
	Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.1,IBBLK,0)),"^"))
	D TOPNBOT^IBDFU5(IBBLK,.TOP,.BOT)
	D DLTBLK^IBDFU3(IBBLK,IBFORM,357.1)
	S VALMBCK="R"
	D IDXFORM^IBDF5A(TOP,BOT)
	Q
	;
MOVE	;allows the user to select a block and move it
	N IBBLK,NODE0,BLKWIDTH,BLKHT,STARTCOL,STARTROW,TOP1,BOT1,TOP2,BOT2
	S VALMBCK="R"
	;D FULL^VALM1
	S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,5)
	I IBBLK D
	.S NODE0=$G(^IBE(357.1,IBBLK,0))
	.S BLKWIDTH=+$P(NODE0,"^",6),BLKHT=+$P(NODE0,"^",7),STARTCOL=+$P(NODE0,"^",5),STARTROW=+$P(NODE0,"^",4)
	.S TOP1=STARTROW,BOT1=(TOP1+BLKHT)-1
	.I STARTROW!(IBFORM("HT")>BLKHT) K DIR S DIR(0)="NA^1:"_(IBFORM("HT")-BLKHT+1)_":0",DIR("A")="Move the TOP MARGIN of the block to which row?: ",DIR("B")=STARTROW+1 D ^DIR K DIR Q:$D(DIRUT)  S STARTROW=X-1
	.I STARTCOL!(IBFORM("WIDTH")>BLKWIDTH) K DIR S DIR(0)="NA^1:"_(IBFORM("WIDTH")-BLKWIDTH+1)_":0",DIR("A")="Move the LEFT MARGIN of the block to which column?: ",DIR("B")=STARTCOL+1 D ^DIR K DIR Q:$D(DIRUT)  S STARTCOL=X-1
	.K DIE,DA S DIE=357.1,DA=IBBLK,DR=".04////^S X=STARTROW;.05////^S X=STARTCOL" D ^DIE K DIE,DA
	.S VALMBCK="R"
	.D TOPNBOT^IBDFU5(IBBLK,.TOP2,.BOT2) S TOP1=$S(TOP1<TOP2:TOP1,1:TOP2) S BOT1=$S(BOT1>BOT2:BOT1,1:BOT2)
	.D IDXFORM^IBDF5A(TOP1,BOT1)
	.S VALMBG=STARTROW-7 S:VALMBG<1 VALMBG=1
	Q
RESIZE	;allows user to select a block & re-size it
	N IBBLK,BLKWIDTH,BLKHT,STARTCOL,STARTROW,TOP1,TOP2,BOT1,BOT2
	S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,5)
	I IBBLK D
	.D NOWSIZE S TOP1=STARTROW,BOT1=(TOP1+BLKHT)-1
	.D NEWSIZE
	.D TOPNBOT^IBDFU5(IBBLK,.TOP2,.BOT2) S TOP1=$S(TOP1<TOP2:TOP1,1:TOP2) S BOT1=$S(BOT1>BOT2:BOT1,1:BOT2)
	.D IDXFORM^IBDF5A(TOP1,BOT1)
	S VALMBCK="R"
	Q
NOWSIZE	;what size is the block, and where does it start? returns BLKWIDTH,BLKHT,STARTROW,STARTCOL
	N NODE0
	S NODE0=$G(^IBE(357.1,IBBLK,0))
	S BLKWIDTH=+$P(NODE0,"^",6),BLKHT=+$P(NODE0,"^",7),STARTCOL=+$P(NODE0,"^",5),STARTROW=+$P(NODE0,"^",4)
	Q
NEWSIZE	;allows user to change the size of a block
	K DIR S DIR(0)="NA^"_(STARTROW+1)_":"_(IBFORM("HT"))_":0",DIR("A")="Move the BOTTOM MARGIN of the block to which row?: ",DIR("B")=(STARTROW+BLKHT) D ^DIR K DIR Q:$D(DIRUT)  S BLKHT=(X-STARTROW)
	K DIR S DIR(0)="NA^"_(STARTCOL+1)_":"_IBFORM("WIDTH")_":0",DIR("A")="Move the RIGHT MARGIN of the block to which column?: ",DIR("B")=(STARTCOL+BLKWIDTH) D ^DIR K DIR Q:$D(DIRUT)  S BLKWIDTH=(X-STARTCOL)
	K DIE,DA S DIE=357.1,DA=IBBLK,DR=".06////^S X=BLKWIDTH;.07////^S X=BLKHT" D ^DIE K DIE
	D UNCMPBLK^IBDF19(IBBLK)
	Q
SHIFT	;allows the user to shift a group of blocks within a rectangular region on the form
	D SHIFT^IBDF10("B")
	D IDXFORM^IBDF5A()
	S VALMBCK="R"
	Q

IBDF5A
IBDF5A	;ALB/CJM - ENCOUNTER FORM ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
IDXFORM(IBTOPLN,IBBOTLN)	;creates an array for the list processor
	;containing the image of the form - or just rebuilds a portion of the
	;array - if IBTOPLN,IBBOTLN defined they specify a range within which to
	;update the array - otherwise, create it from scratch
	;IBFORM should be passed by reference
	;
	N IBBLK,BLKTOP
	W !,"... BUILDING THE FORM ..."
	S VALMSG="[Editing "_IBFORM("NAME")_"]  ?? for more actions"
	I ('$D(IBTOPLN))!('$D(IBBOTLN)) D
	.K @VALMAR D KILL^VALM10()
	.S VALMCNT=IBFORM("HT")+1
	.W "."
	.D BLNKFORM(0,IBFORM("HT")-1,IBFORM("WIDTH"))
	.S I="",$P(I,"~",IBFORM("WIDTH")+1)="~"
	.S @VALMAR@(IBFORM("HT")+1,0)="    "_I
	.W "."
	E  D
	.F LN=IBTOPLN+1:1:IBBOTLN+1 D KILL^VALM10(LN)
	.D BLNKFORM(IBTOPLN,IBBOTLN,IBFORM("WIDTH")) W "."
	.I IBTOPLN'>IBFORM("HT"),IBBOTLN>(IBFORM("HT")-1) S I="",$P(I,"~",IBFORM("WIDTH")+1)="~",@VALMAR@(IBFORM("HT")+1,0)="    "_I
	S IBBLK="" F  S IBBLK=$O(^IBE(357.1,"C",IBFORM,IBBLK)) Q:'IBBLK  D
	.I $D(IBTOPLN),$D(IBBOTLN) Q:'$$BETWEEN(IBBLK,IBTOPLN,IBBOTLN,.BLKTOP)
	.I '($D(IBTOPLN)&$D(IBBOTLN)) S BLKTOP=$P($G(^IBE(357.1,IBBLK,0)),"^",4) Q:BLKTOP=""
	.D DRWBLOCK^IBDF2A1(.IBBLK) W "."
	.D PGBNDRY($G(IBBLK("Y")),$G(IBBLK("H")),IBFORM("PAGE_HT"),$G(IBBLK("NAME")))
	;
	;************************************************************
	;this is needed for Paper Keyboards anchors, but may change
	D ANCHORS
	;************************************************************
	Q
BETWEEN(BLOCK,TOP1,BOT1,BLKTOP)	;determines if the block=BLOCK falls between TOP1 and BOT!, also returns BLKTOP
	N TOP2,BOT2 S (TOP2,BOT2)=""
	D TOPNBOT^IBDFU5(BLOCK,.TOP2,.BOT2) S BLKTOP=TOP2
	I ((TOP2>BOT1)&(BOT2>BOT1))!((TOP2<TOP1)&(BOT2<TOP1)) Q 0
	Q 1
BLNKFORM(TOP,BOT,W)	;
	;creates an array of lines the length of the form with nothing but
	;line numbers on the left
	N I
	F I=TOP+1:1:BOT+1 S @VALMAR@(I,0)=$S(((I>1)&(I#$S($G(IBFORM("PAGE_HT")):IBFORM("PAGE_HT"),1:1000)=1)):"NP >",1:$J((I)#1000,3,0)_" ")_$J("",W)_":" D CNTRL^VALM10(I,4,1,IORVON,IORVOFF)
	Q
	;
ANCHORS	;blanks out the areas near the anchors
	N PAGE
	I IBFORM("SCAN") F PAGE=1:1:IBFORM("PAGES") D
	.D WHITEOUT(((PAGE-1)*IBFORM("PAGE_HT")+1),5,5)
	.D WHITEOUT(((PAGE-1)*IBFORM("PAGE_HT")+1),67,9)
	.D WHITEOUT(((PAGE-1)*IBFORM("PAGE_HT")+1),131,6)
	.D WHITEOUT((((PAGE)*IBFORM("PAGE_HT"))),5,5)
	.D WHITEOUT((((PAGE)*IBFORM("PAGE_HT"))),67,9)
	.D WHITEOUT((((PAGE)*IBFORM("PAGE_HT"))),131,6)
	Q
	;
WHITEOUT(IBY,IBX,LEN)	;erases at (IBY,IBX) for LEN characters
	N CURLINE
	S CURLINE=$G(@VALMAR@(IBY,0))
	S CURLINE=$$SETSTR^VALM1(" ",CURLINE,IBX,LEN)
	D SET^VALM10(IBY,CURLINE)
	Q
	;
PGBNDRY(ROW,HT,PGHT,NAME)	;checks the if the block=NAME starting at ROW and of hight HT overlaps a page boundry - if so a warning is displayed
	I (ROW\PGHT)<((ROW+HT-1)\PGHT) W !,"WARNING: The block = ",NAME," overlaps page boundries!" D PAUSE^IBDFU5
	Q

IBDF5B
IBDF5B	;ALB/CJM - ENCOUNTER FORM (edit a form - CONTINUED);JUL 27,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
EDITBLK	;allows the user to edit everything about the block
	;allows user to discard or save changes to the block
	;
	;If IBBLK and IBBLK2 are used to point to two copies, one copy for editing and the other in case 'undo' is needed
	; 
	N IBBLK,IBVALMBG,TOP1,TOP2,BOT1,BOT2,IBBLK2,IBTKODR,IBJUNK,IFSAVE,WDATA
	;N IBMEMARY
	;
	S IBVALMBG=VALMBG
	D FULL^VALM1
	S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,IOSL,"HEADER") ;select the block
	I IBBLK D
	.D KILL^IBDFUA
	.S (IBBLK2,IBTKODR,IBJUNK)=""
	.S WDATA=IBPRINT("WITH_DATA")
	.D COPYBLK(IBBLK,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" Q  ;sets IBBLK to the work copy, IBBLK2 to the copy actually on the form
	.D TOPNBOT^IBDFU5(IBBLK,.TOP1,.BOT1)
	.D EN^VALM("IBDF FORM BLOCK EDIT") ;call list processor
	.I IBBLK,IBBLK2 D
	..S IFSAVE=$$ASKSAVE
	..I IFSAVE D SAVECOPY(.IBBLK,.IBBLK2,IBTKODR) S IBBLK=IBBLK2,IBBLK2=""
	..I 'IFSAVE D DLTCOPY(IBBLK) S IBBLK=IBBLK2,IBBLK2=""
	..L -^IBE(357.1,IBBLK):1
	.I '$G(IBFASTXT) D
	..S VALMBG=IBVALMBG
	..S IBPRINT("WITH_DATA")=WDATA
	..D TOPNBOT^IBDFU5(IBBLK,.TOP2,.BOT2)
	..S TOP1=$S(TOP1<TOP2:TOP1,1:TOP2),BOT1=$S(BOT1>BOT2:BOT1,1:BOT2)
	..D IDXFORM^IBDF5A(TOP1,BOT1)
	S VALMBCK="R"
	Q
DLTCOPY(WORKCOPY)	;deletes the block=WORKCOPY and unlocks it
	D DLTBLK^IBDFU3(WORKCOPY,IBJUNK,357.1)
	L -^IBE(357.1,WORKCOPY)
	S WORKCOPY=""
	Q
SAVECOPY(WORKCOPY,FORMCOPY,IBTKODR)	;deletes the block=FORMCOPY,adds WORKCOPY to IBFORM
	;NOTE: upon completion WORKCOPY="",FORMCOPY points to what WORKCOPY initially did
	Q:('FORMCOPY)!('WORKCOPY)  ;something wrong!
	;
	K DIE,DA,DR S DIE="^IBE(357.1,",DA=WORKCOPY,DR=".02////"_IBFORM
	I IBTKODR S DR=DR_";.14////"_IBTKODR
	D ^DIE K DIE,DR,DA
	;
	D DLTBLK^IBDFU3(FORMCOPY,IBFORM,357.1)
	D UNCMPL^IBDF19(IBFORM,0)
	L -^IBE(357.1,FORMCOPY)
	S FORMCOPY=WORKCOPY,WORKCOPY=""
	Q
	;
COPYBLK(IBBLK,FORMCOPY,WORKCOPY,IBTKODR,IBJUNK)	;copys the IBBLK to the WORKCOPY, then puts sets FORMCOPY=IBBLK
	;IBJUNK set to the form="GARBAGE", IBTKODR set to the original value of the field TOOL KIT ORDER
	;
	N NODE
	S WORKCOPY=IBBLK,FORMCOPY=""
	Q:'IBBLK  ;no block to copy!
	S NODE=$G(^IBE(357.1,IBBLK,0))
	S IBTKODR=$P(NODE,"^",14)
	;find the form=GARBAGE, used as a work area
	S IBJUNK=+$O(^IBE(357,"B","GARBAGE",""))
	;copy the block
	S FORMCOPY=$$COPYBLK^IBDFU2(IBBLK,IBFORM,357.1,357.1)
	I 'FORMCOPY W !,"Unable to edit the block!" D PAUSE^IBDFU5 S FORMCOPY=IBBLK Q
	;
	;make sure both copies are locked
	;the working copy on IBJUNK is locked so that the option does cleanup knows which blocks are in current use - others on IBJUNK can be deleted
	L +^IBE(357.1,FORMCOPY):1
	L +^IBE(357.1,WORKCOPY):1
	;
	;mark the working copy as not being in the tk and not on IBFORM
	K DIE,DA,DR S DIE="^IBE(357.1,",DA=WORKCOPY,DR=".02////"_IBJUNK_";.14////0"
	D ^DIE K DIE,DR,DA
	Q
	;
ASKSAVE()	;asks the user if changes to the block should be saved
	;returns 1 for yes, 0 for no
	K DIR S DIR(0)="Y",DIR("A")="Save changes to the block",DIR("B")="YES"
	D ^DIR K DIR
	Q:$D(DIRUT) 0
	Q Y
DECIDE	;allows user to either save or discard changes to the block being edited
	N WHAT
	;
	S WHAT=$$DOWHAT
	I WHAT="S" D
	.D SAVECOPY(.IBBLK,.IBBLK2,IBTKODR),COPYBLK(IBBLK2,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) S VALMBCK="" I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" S VALMBCK="Q"
	I WHAT="D" D
	.D DLTCOPY(IBBLK) S IBBLK=IBBLK2,IBBLK2="" D COPYBLK(IBBLK,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK)
	.I IBBLK S VALMBCK="R" D IDXBLOCK^IBDFU4
	.I 'IBBLK S IBBLK=IBBLK2,IBBLK2="",VALMBCK="Q"
	Q
	;
DOWHAT()	;returns "D" for discard, "S" for save, "" for do nothing
	K DIR S DIR(0)="SB^S:Save Changes;D:Discard Changes;",DIR("A")="Save or Discard the recent changes to the block?"
	D ^DIR K DIR
	Q:$D(DIRUT) ""
	Q Y
	;
PRINT	;prints the form
	;
	N QUIT S QUIT=0
	S VALMBCK=""
	I $G(IBBLK),'$G(IBTKBLK) D  Q:QUIT
	.W !,"Before printing the form any changes you have made must be saved.",!,"Is that okay?"
	.K DIR S DIR(0)="Y" D ^DIR  K DIR I 'Y!$D(DIRUT) S QUIT=1 QUIT
	.D SAVECOPY(.IBBLK,.IBBLK2,IBTKODR),COPYBLK(IBBLK2,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) S VALMBCK="" I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" S VALMBCK="Q",QUIT=1
	D:'QUIT PRINT^IBDF1C(.IBFORM)
	Q

IBDF5C
IBDF5C	;ALB/CJM - ENCOUNTER FORM (creating a new block) ;MARCH 22,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
NEWBLOCK	;adds a new block, expects IBFORM to be defined
	N IBBLK,TOP,BOT
	S VALMBCK="R"
	S IBBLK=$$CREATE()
	I IBBLK D
	.D TOPNBOT^IBDFU5(IBBLK,.TOP,.BOT)
	.D IDXFORM^IBDF5A(TOP,BOT)
	Q
CREATE()	;creates the new block and allows the user to edit it
	;INPUTS: expects IBFORM to be defined
	;        expects IBTKBLK to be defined - IBTKBLK=1 means add to tk
	;returns IBBLK
	N NAME,IBBLK,NODE,IBDFDONE,IBBG,IBLFT,DLAYGO
	S IBBG=1,IBLFT=5
	S VALMBCK="R"
	I '$G(IBTKBLK) S IBBG=+$G(VALMBG),IBLFT=+$G(VALMLFT)
	S NAME=$$NEWNAME Q:NAME=-1 ""
	K DIC,DIE,DD,DO,DINUM S DIC="^IBE(357.1,",DIC(0)="FL",X=NAME,DLAYGO=357.1
	D FILE^DICN K DIC,DIE,DA
	S IBBLK=+Y
	I 'IBBLK D
	.W !,"Unable to create a new block!" K DIC,DIE D PAUSE^IBDFU5
	I IBBLK D
	.;delete everything in the block - it should be empty
	.D DLTCNTNT^IBDFU3(IBBLK,357.1)
	.;set the current position of the block to the upper left-hand corner of the screen as the default
	.S $P(^IBE(357.1,IBBLK,0),"^",4,5)=(IBBG-1)_"^"_(IBLFT-5)
	.;now let the user edit the new block - header,name,outline,etc.
	.K DIE,DA S DIE=357.1,DA=IBBLK,DR="[IBDF NEW EMPTY BLOCK]",DIE("NO^")="BACKOUTOK" D ^DIE K DIC,DIE,DR,DA
	.I 'IBDFDONE S DIK="^IBE(357.1,",DA=IBBLK K DA(1) D ^DIK K DIK,DA Q
	Q IBBLK
NEWNAME()	;
	K DIR S DIR(0)="357.1,.01A",DIR("A")="New Block Name: ",DIR("B")=""
	D ^DIR K DIR I $D(DIRUT) Q -1
	Q Y
REDRAW	;redraws the ;entire form
	S VALMBCK="R"
	D UNCMPALL^IBDF19(IBFORM)
	D IDXFORM^IBDF5A()
	Q
COPYBLK	;copies a block from another form,whether in the toolkit or not, expects IBFORM=current work form  to be defined
	N IBBLK,TOP,BOT,NEWBLOCK
	S IBBLK=$$SELECT2^IBDF13("")
	I IBBLK S NEWBLOCK=$$COPYBLK^IBDFU2(IBBLK,IBFORM,357.1,357.1,$$CURY^IBDFU4,$$CURX^IBDFU4,0,"",1) I NEWBLOCK D
	.D REFRESH^VALM,RESET^VALM4:VALMCC
	.D POS^IBDFU4(NEWBLOCK)
	.D TOPNBOT^IBDFU5(NEWBLOCK,.TOP,.BOT)
	.D IDXFORM^IBDF5A(TOP,BOT)
	S VALMBCK="R"
	Q
	;
VIEW	;toggles between viewing form with data and without data
	N STARTVAL
	S STARTVAL=IBPRINT("WITH_DATA")
	I 'IBPRINT("WITH_DATA") D
	.D FULL^VALM1
	.S DFN=$$PATIENT
	.I DFN S IBPRINT("WITH_DATA")=1 I '$G(IBAPPT) D NOW^%DTC S IBAPPT=% K %,%H,%I,X
	E  I IBPRINT("WITH_DATA") S IBPRINT("WITH_DATA")=0
	;
	;this action could be called at the form level or the block level - action depends on which
	I '$G(IBBLK) D
	.I STARTVAL'=IBPRINT("WITH_DATA") D JUSTDATA^IBDF2A(IBPRINT("WITH_DATA")) K ^TMP("IB",$J,"INTERFACES")
	I $G(IBBLK) D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	S VALMBCK="R"
	Q
	;
PATIENT()	;asks for a patient, returns the DFN
	K DIR S DIR(0)="P^2:EM",DIR("A")="Test with what Patient"
	D ^DIR K DIR I $D(DIRUT)!(+Y<1) Q 0
	Q +Y

IBDF5D
IBDF5D	;ALB/CJM - ENCOUNTER FORM - (copy page) ;DEC 12, 1994
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
COPYPAGE	;
	N FROMFORM,PAGE,TOLINE,NODE,ROW,COL,BEGIN,END,QUIT,BLOCK
	D FULL^VALM1
	S VALMBCK="R"
	S FROMFORM=$$SLCTFORM^IBDFU4("") Q:'FROMFORM
	Q:'$$FORMSIZE^IBDFU1C(.FROMFORM)
	I FROMFORM("PAGES")=1 D
	.S BEGIN=0,END=FROMFORM("PAGE_HT")-1
	E  D  Q:QUIT
	.S QUIT=0
	.K DIR S DIR(0)="N^1:"_FROMFORM("PAGES")_":0",DIR("A")="Copy Page Number",DIR("B")=1,DIR("?")="Which page do you want to copy?" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
	.S PAGE=Y I 'PAGE S QUIT=1 Q
	.S BEGIN=((PAGE-1)*FROMFORM("PAGE_HT"))-1,END=(BEGIN+FROMFORM("PAGE_HT"))-1
	K DIR S DIR(0)="N^1:"_IBFORM("HT")_":0",DIR("A")="Copy To Line Number",DIR("B")=($$CURY^IBDFU4)+1,DIR("?")="Begining at what line should the page be pasted?" D ^DIR K DIR I 'X!$D(DIRUT) S QUIT=1 Q
	I 'Y S QUIT=1 Q
	S TOLINE=Y-1
	S BLOCK=0
	F  S BLOCK=$O(^IBE(357.1,"C",FROMFORM,BLOCK)) Q:'BLOCK  S NODE=$G(^IBE(357.1,BLOCK,0)) Q:NODE=""  S ROW=$P(NODE,"^",4),COL=$P(NODE,"^",5) D
	.N NEWBLOCK
	.I '(ROW>END),'(ROW<BEGIN)  S NEWBLOCK=$$COPYBLK^IBDFU2(BLOCK,IBFORM,357.1,357.1,(ROW#FROMFORM("PAGE_HT"))+TOLINE,COL)
	D IDXFORM^IBDF5A()
	Q
	;
COPY	;ask user whether to copy a block or a page
	S VALMBCK="R"
	K DIR S DIR(0)="SB^P:PAGE COPY;B:BLOCK COPY;",DIR("A")="Copy an entire page or a single block?",DIR("?")="You can copy either a single block or an entire page."
	D ^DIR K DIR I $D(DIRUT) Q
	D:Y="P" COPYPAGE
	D:Y="B" COPYBLK^IBDF5C
	K DIR
	Q

IBDF6
IBDF6	;ALB/CJM - ENCOUNTER FORM - ENTRY FOR BUILDING A FORM ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
FORMLIST	;
	N IBTKFORM,IBDEVICE,IBAPI,IOVL,IOHL,IOBRC,IOBLC,IOTRC,IOTLC,IBFORM
	;IBDEVICE stores parameters related to device for printing forms
	D DEVICE^IBDFUA(1,.IBDEVICE)
	S IBTKFORM=0 ;IBTKFORM=1 only for toolkit forms
	S IBAPI("INDEX")="D IDXFORMS^IBDF6"
	S IBAPI("SELECT")="D SELECT^IBDF6"
	N IBFASTXT ;set to 1 for fast exit from system
	S IBFASTXT=0
	K XQORS,VALMEVL,DIR
	S IBCLINIC=""
	D CLINIC
	I IBCLINIC D EN^VALM("IBDF CLINIC FORM LIST")
	Q
ONENTRY	;
	D IDXFORMS
	Q
ONEXIT	;
	D KILL^%ZISS
	K ^TMP("IB",$J),^TMP("IBDF",$J),IBCLINIC,VALMY,IBQUIT,VALMBCK,X,Y,I,DA,D0
	Q
EDITFORM	;allows user to select a form, then displays it for edit
	N IBFORM,ARY,DFN,IBAPPT,RTNLIST,IBPRINT
	S ARY="^TMP(""IBDF"",$J,""TEMPORARY CLINIC LIST"")"
	;
	K @ARY
	S VALMBCK=""
	X IBAPI("SELECT")
	I IBFORM D CLINICS^IBDFU4(IBFORM,ARY) I $G(@ARY@(0))>1 W !,"The form is in use by other clinics!" D LIST^IBDFU4(ARY,5) S DIR(0)="Y",DIR("A")="Still want to edit",DIR("B")="N" D ^DIR K DIR I $D(DIRUT)!(Y=0) S IBFORM=""
	K ARY
	I IBFORM,'$$LOCKFRM2^IBDFU7(IBFORM) D LOCKMSG2^IBDFU7(IBFORM) S IBFORM=""
	I IBFORM D PRNTPRMS^IBDFU1C(.IBPRINT,0,1,0,1),UNCMPL^IBDF19(IBFORM,0),EN^VALM("IBDF DISPLAY FORM FOR EDIT"),UNCMPL^IBDF19(IBFORM,0),FREEFRM2^IBDFU7(IBFORM)
	S VALMBCK="R"
	Q
	;
CLINIC	K DIR,DIC,DIE,DR S DIR(0)="409.95,.01",DIR("A")="EDIT FORMS FOR WHICH CLINIC? " D ^DIR K DIR I $D(DIRUT)!(+Y<0) Q
	S IBCLINIC=+Y
	Q
	;
IDXFORMS	;build an array of forms used by IBCLINIC for the list processor
	N FORM,SETUP,NODE,SUB,SUBREC,USE,ID
	K @VALMAR
	S SETUP="",VALMCNT=0,ID=0
	S SETUP=$O(^SD(409.95,"B",IBCLINIC,"")) Q:'SETUP
	S NODE=$G(^SD(409.95,SETUP,0)) Q:NODE=""
	F SUB=2,6,8,9,3,4,5,7 S FORM=$P(NODE,"^",SUB) I FORM D
	.I $D(^IBE(357,FORM,0)) D
	.S USE=""
	.D ENTRY
	Q
ENTRY	;adds an entry to the array
	S USE=USE_$S(SUB=2:"Basic Encounter Form",SUB=3:"Supplemental Form - Established Patients",SUB=4:"Supplemental Form - New Patients",SUB=5:"Form To Print With No Patient Data",1:"")
	S:USE="" USE=USE_$S(SUB=7:"For Future Use",1:"Supplemental Form - All Patients")
	S ID=ID+1,VALMCNT=VALMCNT+1,@VALMAR@(VALMCNT,0)=$$DISPLAY1(FORM,USE,ID),@VALMAR@("IDX",VALMCNT,ID)=FORM D FLDCTRL^VALM10(VALMCNT) ;set video for ID column
	S VALMCNT=VALMCNT+1,@VALMAR@(VALMCNT,0)=$$DISPLAY2(FORM),@VALMAR@("IDX",VALMCNT,ID)=FORM_"^"_$S(SUB=2:.02,SUB=3:.03,SUB=4:.04,SUB=5:.05,SUB=6:.06,SUB=7:.07,SUB=8:.08,SUB=9:.09,1:0)
	Q
HDR	;
	S VALMHDR(1)="FORMS CURRENTLY USED BY '"_$$CLNCNAME_"' CLINIC"
	Q
CLNCNAME()	;
	Q $P($G(^SC(IBCLINIC,0)),"^",1)
DISPLAY1(FORM,USE,ID)	;
	N NODE,NAME,RET
	S RET=$J(ID,3)_$$SP(2)
	S NODE=$G(^IBE(357,FORM,0))
	S NAME=$P(NODE,"^",1)
	S RET=RET_$$PR(NAME,30)_$$SP(2)_USE
	Q RET
DISPLAY2(FORM)	;
	N NODE,DESCR,RET
	S RET=$$SP(37)
	S NODE=$G(^IBE(357,FORM,0))
	S DESCR=$P(NODE,"^",3)
	S RET=RET_$E(DESCR,1,80)
	Q RET
PR(STR,LEN)	; pad right
	Q:'$G(LEN) ""
	N B S STR=$E($G(STR),1,LEN)
	S:LEN'=$L(STR) $P(B," ",LEN-$L($G(STR)))=" "
	Q STR_$G(B)
SP(LEN)	;
	Q:'$G(LEN)
	N S S $P(S," ",LEN)=" "
	Q S
CHNGCLNC	;allows the user to change the clinic
	N SAVECLNC S SAVECLNC=IBCLINIC
	D FULL^VALM1
	S VALMBCK="R"
	D CLINIC I 'IBCLINIC S IBCLINIC=SAVECLNC Q
	D HDR
	X IBAPI("INDEX")
	Q
	;
SELECT	 ;
	N SEL
	D EN^VALM2(XQORNOD(0),"S")
	S SEL=$O(VALMY(""))
	S IBFORM=$S('SEL:"",1:+$G(@VALMAR@("IDX",2*SEL,SEL)))
	Q

IBDF6A
IBDF6A	;ALB/CJM - ENCOUNTER FORM - (new forms, deleting forms, adding to setup) ;JAN 16,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
DELFORM	;
	N CLINIC,FORM,BLOCK,NOCANDO,SETUP,ARY
	S NOCANDO=0,ARY="^TMP(""IBDF"",$J,""TEMPORARY CLINIC LIST"")"
	K @ARY
	D FULL^VALM1
	S VALMBCK="R"
	K DIC S DIC("S")="I '$P(^(0),U,7)",DIC=357,DIC(0)="AEQ",DIC("A")="Select FORM to delete: "
	D ^DIC K DIC S FORM=+Y Q:(FORM<0)
	D CLINICS^IBDFU4(FORM,ARY)
	I $G(@ARY@(0)) D
	.W !,"Cannot be deleted, the form is in use!"
	.D LIST^IBDFU4(ARY,IOSL)
	I '$G(@ARY@(0)) D DELETE^IBDFU2C(FORM,357,1)
	K @ARY
	Q
	;
NEWFORM	;
	N NAME,FORM,FLD,BLOCK,IBDELETE,IBTXTSZ,IBSCAN,IBDVR
	S (IBTXTSZ,IBSCAN)=0
	S VALMBCK="R"
	S NAME=$$NEWNAME^IBDFU2C Q:NAME=""
	D FULL^VALM1
	K DIC,DD,DO,DINUM S DIC="^IBE(357,",DIC(0)="",X=NAME
	D FILE^DICN K DIC,DIE,DA
	S FORM=+Y
	I FORM<0 D
	.W !,"Unable to create a new form!" D PAUSE^IBDFU5
	E  D
	.K DIE,DR,DA S DIE="^IBE(357,",DR="[IBDF EDIT NEW FORM]",DA=FORM,DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.I IBDELETE S DIK="^IBE(357,",DA=FORM D ^DIK K DIK,DA Q
	.D:'IBTKFORM ADDSETUP(FORM,IBCLINIC,1)
	.;the new form should be empty - make sure
	.S BLOCK="" F  S BLOCK=$O(^IBE(357.1,"C",FORM,BLOCK)) Q:'BLOCK  D
	..I $P($G(^IBE(357.1,BLOCK,0)),"^",2)'=FORM D
	...K DA S DIK="^IBE(357.1,",DA=BLOCK D IX^DIK K DIK,DA
	..E  D DLTBLK^IBDFU3(BLOCK,FORM,357.1)
	.X IBAPI("INDEX")
	Q
COPYFORM	;
	N NAME,OLDFORM,NEWFORM,IBDELETE,IBOLD,IBSCAN
	D FULL^VALM1
	S VALMBCK="R"
	S OLDFORM=$$SLCTFORM^IBDFU4("") Q:'OLDFORM
	S NAME=$$NEWNAME^IBDFU2C Q:NAME=""
	S NEWFORM=$$COPYFORM^IBDFU2C(OLDFORM,357,357,NAME,0)
	Q:'NEWFORM
	;
	;edit the form
	S IBOLD=$S($P($G(^IBE(357,NEWFORM,0)),"^",16):0,1:1)
	K DIE,DR,DA S DIE="^IBE(357,",DR="[IBDF EDIT OLD OR COPIED FORM]",DA=NEWFORM,DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	;delete the new form if the user didn't complete the edit
	I IBDELETE D DELETE^IBDFU2C(NEWFORM,357) Q
	;
	D:'IBTKFORM ADDSETUP(NEWFORM,IBCLINIC,1)
	X IBAPI("INDEX")
	Q
SETUP	;
	N FORM
	D FULL^VALM1
	S VALMBCK="R"
	K DIC S DIC("S")="I '$P(^(0),U,7)",DIC=357,DIC(0)="AEQ",DIC("A")="Select FORM for Clinic Setup: "
	D ^DIC K DIC Q:($D(DTOUT)!$D(DUOUT))  S FORM=+Y Q:FORM<0
	D ADDSETUP(FORM,IBCLINIC,0)
	X IBAPI("INDEX")
	Q
ADDSETUP(FORM,IBCLINIC,NEW)	;
	;NEW=1 if the form was just created, 0 otherwise
	N FLD,NODE,SETUP
	S NEW=+$G(NEW)
	K DA S DA=$O(^SD(409.95,"B",+$G(IBCLINIC),"")) I 'DA D
	.K DIC,DO,DD,DINUM S DIC="^SD(409.95,",DIC(0)="",X=IBCLINIC
	.D FILE^DICN K DIC
	.S DA=$S(+Y<1:0,1:+Y)
	Q:'DA
	S SETUP=DA,NODE=$G(^SD(409.95,SETUP,0))
	W !,"How should the clinic use the form?"
	K DIR
	S DIR(0)="SO^1:BASIC FORM;2:SUPPLEMENTAL FORM FOR ALL PATIENTS;3:SUPPLEMENTAL FORM FOR NEW PATIENTS;4:SUPPLEMENTAL FORM FOR ESTABLISHED PATIENTS;5:FORM TO PRINT WITHOUT PATIENT DATA;6:RESERVED FOR FUTURE USE;"
	S:NEW DIR(0)=DIR(0)_"7:WILL NOT BE USED BY CLINIC;"
	D ^DIR K DIR
	I (Y=-1)!(Y=7)!$D(DIRUT) Q
	S:Y'=2 FLD=$S(Y=1:.02,Y=3:.04,Y=4:.03,Y=5:.05,Y=6:.07,1:0)
	S:Y=2 FLD=$S('$P(NODE,"^",6):.06,'$P(NODE,"^",8):.08,1:.09)
	Q:'FLD
	I $P($G(^SD(409.95,DA,0)),"^",(100*FLD)) Q:'$$OVERLAY
	K DIE,DR S DIE=409.95
	S DR=FLD_"////"_FORM D ^DIE K DIE,DR,DA
	Q
OVERLAY()	;asks the user if the he wants to overlay the form already used for the clinic setup
	W !,"But you already have a form for that use!"
	K DIR S DIR(0)="Y",DIR("A")="Do you want to replace it"
	D ^DIR K DIR
	Q:$D(DIRUT) 0
	Q Y

IBDF6C
IBDF6C	;ALB/CJM - ENCOUNTER FORM - (deleting setup, editing form name) ;JAN 16,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
DSETUP	;allows user to select a form, then removes it from the clinic setup
	N SEL,IBFORM,SETUP
	D EN^VALM2($G(XQORNOD(0)),"S")
	S SEL=$O(VALMY("")),(IBFORM,VALMBCK)=""
	I SEL S SEL=$G(@VALMAR@("IDX",2*SEL,SEL)),IBFORM=+SEL
	I IBFORM D
	.S VALMBCK="R"
	.K DA S DA=$O(^SD(409.95,"B",+$G(IBCLINIC),"")) Q:'DA
	.S SETUP=$G(^SD(409.95,DA,0)) Q:SETUP=""
	.S DR=$P(SEL,"^",2)_"////@"
	.K DIE S DIE=409.95 D ^DIE K DIE,DR,DA
	.X IBAPI("INDEX")
	Q
EDITFORM	;allows user to select a form, then edit its name, description,  and size
	N IBFORM,IBDELETE,IBSCAN,IBOLD ;IBDELETE,IBSCAN,IBOLD appear in the input template
	X IBAPI("SELECT")
	S VALMBCK="R"
	I IBFORM D
	.D UNCMPALL^IBDF19(IBFORM)
	.D FULL^VALM1
	.S VALMBCK="R"
	.K DA,DR,DIE S DA=IBFORM
	.S DR="[IBDF EDIT OLD OR COPIED FORM]"
	.S IBOLD=$S($P($G(^IBE(357,IBFORM,0)),"^",16):0,1:1)
	.S DIE=357 D ^DIE K DIE,DR,DA
	.X IBAPI("INDEX")
	Q

IBDF7
IBDF7	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(ADDING TOOLKIT BLKS) ; 08-JAN-1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
ADD	;create a new block by copying a toolkit block
	N BLKLIST,OLDBLOCK,NEWBLOCK,TOP,BOT,IBBG,IBLFT
	S VALMBCK="R",IBBG=+$G(VALMBG),OLDBLOCK="",IBLFT=+$G(VALMLFT)
	D EN^VALM("IBDF TOOL KIT BLOCK LIST") ;list processor displays list of tool kit blocks
	I '$G(IBFASTXT) D
	.S VALMBG=IBBG S:VALMBG<1 VALMBG=1
	.Q:OLDBLOCK=""  ;selected tool kit block stored in OLDBLOCK
	.S NEWBLOCK=$$COPYBLK^IBDFU2(OLDBLOCK,IBFORM,357.1,357.1,IBBG-1,IBLFT-5,0,"",1)
	.D REFRESH^VALM,POS^IBDFU4(NEWBLOCK)
	.S VALMBCK="R"
	.D TOPNBOT^IBDFU5(NEWBLOCK,.TOP,.BOT)
	.D IDXFORM^IBDF5A(TOP,BOT)
	Q
	;
INIT	;entry code to list
	S BLKLIST="^TMP(""IBDF"",$J,""TOOL KIT BLOCK LIST"")"
	D IDXBLKS
	Q
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !
	Q
	;
EXIT	; -- exit code
	K @BLKLIST
	Q
	;
IDXBLKS	; sets up list of toolkit blocks for list processor
	N BLOCK,TK
	K @BLKLIST
	S VALMCNT=0
	S TK=0,BLOCK="" F  S TK=$O(^IBE(357.1,"D",TK)) Q:'TK  F  S BLOCK=$O(^IBE(357.1,"D",TK,BLOCK)) Q:'BLOCK  D
	.Q:'$P($G(^IBE(357.1,BLOCK,0)),"^",14)
	.S VALMCNT=VALMCNT+1
	.S @BLKLIST@(VALMCNT,0)=$$DISPLAY(BLOCK,VALMCNT,TK),@BLKLIST@("IDX",VALMCNT,VALMCNT)=BLOCK
	.D FLDCTRL^VALM10(VALMCNT,"ID") ;set video for ID column
	Q
	;
DISPLAY(BLOCK,ID,TKORDER)	;adds one toolkit block to the list array
	N NODE,NAME,DESCR,RET
	;** note: IBTKBLK=1 only if editing the tool kit blocks - display the tool kit order in that case
	S RET=$J(ID,3)_$$PADRIGHT^IBDFU("",2)
	S NODE=$G(^IBE(357.1,BLOCK,0))
	S NAME=$P(NODE,"^",1),DESCR=$P(NODE,"^",13)
	S RET=RET_$$PADRIGHT^IBDFU(NAME,30)_" "
	I $G(IBTKBLK) S RET=RET_$E($J(TKORDER,4),1,4)_"  "
	S RET=RET_$E(DESCR,1,80)
	Q RET
SELECT	;
	N CHOICE
	D EN^VALM2($G(XQORNOD(0)),"S")
	S CHOICE=$O(VALMY("")) Q:'CHOICE  S OLDBLOCK=$G(@VALMAR@("IDX",CHOICE,CHOICE))
	Q

IBDF8
IBDF8	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(display single toolkit block) ; 08-JAN-1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
VIEWBLK	;
	N QUIT,IBBLK,IBVALMBG
	;N IBMEMARY
	S QUIT=0,IBVALMBG=VALMBG
	D EN^VALM2($G(XQORNOD(0)),"S") ;select the block
	S IBBLK=$O(VALMY("")) Q:'IBBLK  S IBBLK=$G(@VALMAR@("IDX",IBBLK,IBBLK)) I IBBLK D EN^VALM("IBDF VIEW TOOL KIT BLOCK") ;call list processor to display selected block
	S VALMBCK="R",VALMBG=IBVALMBG
	Q
INIT	;
	D IDXBLOCK^IBDFU4
	Q
EXIT	;
	K @VALMAR
	Q
HDR	;
	S VALMHDR(1)="Viewing the "_$P($G(^IBE(357.1,IBBLK,0)),"^",1)_" Toolkit block"
	S (VALMHDR(2),VALMHDR(3))=$$PADRIGHT^IBDFU("",4)
	F I=1:1:16 S VALMHDR(2)=VALMHDR(2)_$J(I,10)
	Q

IBDF9
IBDF9	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(display single form block for edit) ; 08-JAN-1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
INIT	;
	D IDXBLOCK^IBDFU4
	Q
EXIT	;
	K @VALMAR
	Q
HDR	;
	S VALMHDR(1)=$$PADRIGHT^IBDFU("",4)
	F I=1:1:16 S VALMHDR(1)=VALMHDR(1)_$J(I,10)
	Q
RESIZE	;resize the block
	N IBW,IBH
	S VALMBCK="R"
	K DIR S DIR(0)="NA^1:"_IBFORM("WIDTH")_":0",DIR("A")="Move the RIGHT MARGIN of the block to which column?: ",DIR("B")=IBBLK("W") D ^DIR K DIR Q:$D(DIRUT)  S IBW=X
	S DIR(0)="NA^1:"_IBFORM("HT")_":0",DIR("A")="Move the BOTTOM MARGIN of the block to which row?: ",DIR("B")=IBBLK("H") D ^DIR K DIR Q:$D(DIRUT)  S IBH=X
	K DR,DIE,DA S DIE=357.1,DA=IBBLK,DR=".06////^S X=IBW;.07////^S X=IBH" D ^DIE K DIE,DR,DA
	S VALMBCK="R"
	D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
EDITBLK	;edit the name,brief description, header and outline
	;automatically shifts contents and changes size of block if changes in header or outline call for that
	N HDR1,HDR2 ;flags set to indicate existance of hdr before and after editing 
	N NODE,IBNAME,QUIT
	S QUIT=0,VALMBCK="R"
	D FULL^VALM1
	S NODE=$G(^IBE(357.1,IBBLK,0))
	S HDR1=$P(NODE,"^",11) S:HDR1'="" HDR1=1
	K DIR S DIR(0)="357.1,.01",DIR("B")=$P($G(^IBE(357.1,IBBLK,0)),"^") D ^DIR K DIR D  Q:QUIT
	.I (Y=-1)!$D(DIRUT) S QUIT=1 Q
	.S IBNAME=Y
	.K DA,DR,DIE S DIE=357.1,DA=IBBLK,DR="[IBDF EDIT HEADER&OUTLINE]" D ^DIE K DIE,DR,DA
	S NODE=$G(^IBE(357.1,IBBLK,0))
	S HDR2=$P(NODE,"^",11) S HDR2=$S(HDR2="":0,1:1)
	;shift contents and resize if there has been a change to existance of the header
	I HDR1'=HDR2 D
	.N TOP,BOTTOM,LEFT,RIGHT,WAY,AMOUNT
	.S TOP=0,BOTTOM=IBBLK("H"),LEFT=0,RIGHT=IBBLK("W"),AMOUNT=1
	.I HDR2 S WAY="D" D E^IBDF10 S $P(NODE,"^",7)=$P(NODE,"^",7)+1,^IBE(357.1,IBBLK,0)=NODE
	.I HDR1 S WAY="U" D E^IBDF10 S $P(NODE,"^",7)=$P(NODE,"^",7)-1,^IBE(357.1,IBBLK,0)=NODE
	D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q

IBDF9A
IBDF9A	;ALB/CJM - ENCOUNTER FORM - (create,edit,delete selection list) ;FEB 1,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
LIST	;Create, Edit, or Delete a selection list from the form
	N IBVALMBG
	S VALMBCK="R",IBVALMBG=VALMBG
	K DIR S DIR("?",1)="You can create a [N]ew list, edit its [A]ppearance, [D]elete it,",DIR("?")="edit its [Co]ntents, [P]osition or size its columns.  Choose from:"
	S DIR("B")="C",DIR(0)="SAB^A:APPEARANCE;C:CONTENTS;D:DELETE;N:NEW;P:POSITION",DIR("A")="[N]ew   [A]ppearance   [D]elete   [C]ontents   [P]osition/size columns: "
	W !!,DIR("?",1),!,DIR("?"),!
	D ^DIR K DIR I $D(DIRUT)!(Y<0) Q
	D @$S(Y="C":"EDITLIST^IBDF3",Y="A":"EDITLIST",Y="N":"NEWLIST^IBDF9A1",Y="D":"DLTLIST",Y="P":"COLUMNS",1:"NOSUCH")
	S VALMBG=IBVALMBG
	Q
NOSUCH	;
	Q
EDITLIST	;allows editing of the structure of a list
	;expects IBBLK to be defined
	;IBSC1,IBSC2,IBSWITCH,IBD,IBOLD,IBLEN  are used in the input template
	N IBLIST,IBRTN,IBSC1,IBSC2,IBSWITCH,IBD,IBOLD,IBLEN,IBDELETE,IBSCOLD,IBSCNEW,FROM,TO,IBDYN,IBINPUT
	S VALMBCK="R",(IBOLD,IBSWITCH)=1
	D FULL^VALM1
	D SELECT
	I IBLIST D
	.S (IBSCOLD,IBSCNEW)=""
	.S IBRTN=$P($G(^IBE(357.2,IBLIST,0)),"^",11)
	.D LISTTYPE(IBRTN)
	.D GETSC^IBDF9A3(.IBSCOLD,IBLIST)
	.D:IBRTN DATASIZE(IBRTN)
	.K DIE,DA,DR S DIE=357.2,DA=IBLIST,DR="[IBDF EDIT SELECTION LIST]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA,%,I
	.;
	.;if the list already had selections the subcolumns may need to be reordered/created/deleted
	.S IBSWITCH="" F  S IBSWITCH=$O(IBSWITCH(IBSWITCH)) Q:'IBSWITCH  S FROM=$P(IBSWITCH(IBSWITCH),"^"),TO=$P(IBSWITCH(IBSWITCH),"^",2) D
	..I $D(IBSCOLD(TO)) D DELSC^IBDF9A3(IBLIST,TO)
	..D SWITCH(IBLIST,FROM,TO)
	..I $D(IBSCOLD(FROM)) S IBSCOLD(TO)=IBSCOLD(FROM) K IBSCOLD(FROM)
	.D GETSC^IBDF9A3(.IBSCNEW,IBLIST)
	.N SC S SC=0 F  S SC=$O(IBSCOLD(SC)) Q:'SC  I IBSCOLD(SC)'=$G(IBSCNEW(SC)) D DELSC^IBDF9A3(IBLIST,SC)
	.S SC=0 F  S SC=$O(IBSCNEW(SC)) Q:'SC  I IBSCNEW(SC)'=$G(IBSCOLD(SC)) D ADDSC^IBDF9A3(IBLIST,SC)
	.D UNCMPBLK^IBDF19(IBBLK)
	.D IDXBLOCK^IBDFU4
	S VALMBCK="R"
	Q
COLUMNS	;allows the user to place and size the columns of the list
	;expects IBBLK to be defined
	N IBLIST
	S VALMBCK="R"
	;D FULL^VALM1
	D SELECT
	I IBLIST D
	.K DIE,DA,DR S DIE=357.2,DA=IBLIST,DR="[IBDF POSITION/SIZE COLUMNS]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	S VALMBCK="R"
	Q
SELECT	;
	S IBLIST=""
	Q:'$G(IBBLK)
	I '$O(^IBE(357.2,"C",IBBLK,0)) W !,"There is no selection list!" D PAUSE^IBDFU5 Q
AGAIN	K DIC S DIC="^IBE(357.2,",DIC(0)="EQ",D="C",X=IBBLK
	S DIC("S")="I $P($G(^(0)),U,2)=IBBLK"
	D IX^DIC K DIC
	S:+Y>0 IBLIST=+Y
	I 'IBLIST,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No selection list selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
	Q
MSG1	;called by the input template
	W !!,"Entering the number of list columns is optional. By default the list will be",!,"given as many columns as the block has space for.",!
	Q
MSG2	;called by the input template
	W !!,"Entering the information on the position of the columns and their",!,"height is optional. Appropriate default values will be used. However,",!,"you may specify your own values for up to 4 coulmns.",!
	Q
MSG3	;called by the input template
	W !!,"You can now specify the subcolumns the list should contain.",!,"There can be at most 6 subcolumns, numbered 1-6.",!
	Q
	;
DATASIZE(RTN)	;IBLEN() stores the lengths of the pieces of the record returned by the package interface
	N NODE,IEN,PIECE
	Q:'$G(RTN)
	S PIECE=0 F  S PIECE=$O(^IBE(357.6,RTN,15,"C",PIECE)) Q:'PIECE  S IEN=0 F  S IEN=$O(^IBE(357.6,RTN,15,"C",PIECE,IEN)) Q:'IEN  S NODE=$G(^IBE(357.6,RTN,15,IEN,0)) I $P(NODE,"^",3) S IBLEN($P(NODE,"^",3))=+$P(NODE,"^",2)_"^"_$P(NODE,"^",5)
	S IBLEN(0)=4
	S IBLEN(1)=$P($G(^IBE(357.6,RTN,2)),"^",2)_"^"_$P($G(^IBE(357.6,RTN,2)),"^",16)
	Q
	;
NEWNAME()	;
	K DIR S DIR(0)="357.2,.01A",DIR("A")="New Selection List Name: ",DIR("B")=""
	D ^DIR K DIR I $D(DIRUT) Q -1
	Q Y
SWITCH(IBLIST,IBSC1,IBSC2)	;finds all selections in list=IBLIST and changes subcolumn=IBSC1 into subcolumn=IBSC2
	N SLCTN,SC
	S SLCTN="" F  S SLCTN=$O(^IBE(357.3,"C",IBLIST,SLCTN)) Q:'SLCTN  D
	.S SC=0 F  S SC=$O(^IBE(357.3,SLCTN,1,"B",IBSC1,SC)) Q:'SC  D
	..I $P($G(^IBE(357.3,SLCTN,1,SC,0)),"^")=IBSC1 D
	...I $G(^IBE(357.3,SLCTN,1,0))="" S ^IBE(357.3,SLCTN,1,0)="^357.31IA^"
	...K DIE,DA,DR S DIE="^IBE(357.3,SLCTN,1,",DA(1)=SLCTN,DA=SC,DR=".01////"_IBSC2
	...D ^DIE
	...;K DIE,DA,DR S DA(1)=SLCTN,DIE="^IBE(357.3,"_DA(1)_",1,",DA=SC,DR=".01////"_IBSC2
	..E  D
	...K ^IBE(357.3,SLCTN,1,"B",IBSC1,SC)
	...K DIK,DA S DIK="^IBE(357.3,SLCTN,1,",DA(1)=SLCTN,DA=SC D IX^DIK
	K DIK,DA,DIE,DR
	Q
RTN()	;does a lookup on the package interface file using the E cross-reference, which uses the name with the prefix=namespace removed
	K DIC S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1"
	S DIC="^IBE(357.6,",DIC(0)="MQEA",D="E^D^B",DIC("A")="Select the TYPE OF DATA that the list will contain: " D MIX^DIC1 K DIC,DA
	Q $S((Y<0)!$D(DTOUT)!$D(DUOUT):0,1:+Y)
DLTLIST	;expects IBBLK to be defined
	N IBLIST
	D FULL^VALM1
	D SELECT
	I IBLIST D
	.Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.2,IBLIST,0)),"^"))
	.D DLTLIST^IBDFU3(357.2,IBBLK,IBLIST)
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
	;
LISTTYPE(RTN)	;sets IBDYN=1 if the rtn is dynamic selection,IBINPUT to the input interface
	N NODE
	I '$G(RTN) S (IBDYN,IBINPUT)=0 Q
	S NODE=$G(^IBE(357.6,RTN,0)) S IBDYN=$P(NODE,"^",14),IBINPUT=$P(NODE,"^",13)
	Q
	;
OTHEROK(PI)	;returns 1 if the selection interface=PI allows 'other', 0 otherwise
	N NODE
	Q:'$G(PI) 0
	;
	;there must be an interface for input
	Q:'$P((^IBE(357.6,PI,0)),"^",13) 0
	;
	;the selection interface must allow input of narrative or code
	S NODE=$G(^IBE(357.6,PI,16))
	I '$P(NODE,"^",2),'$P(NODE,"^",6) Q 0
	Q 1

IBDF9A1
IBDF9A1	;ALB/CJM - ENCOUNTER FORM - (create,edit,delete selection list - continued) ;FEB 1,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
NEWLIST	;creates a new list
	;expects IBBLK to be defined
	N IBLIST,IBLEN,IBP,IBRTN,NAME,IBDELETE,IBDYN,IBINPUT,IBDFLTF,IBDFLTB,IBDFLTL
	S (IBDFLTF,IBDFLTB,IBDFLTL,IBOLD,IBLIST)=0,VALMBCK="R"
	D FULL^VALM1
	S IBRTN=$$RTN^IBDF9A Q:'IBRTN
	S IBDFLTF=$$DFLTS^IBDFU5 D:IBDFLTF
	.S IBDFLTB=0 F  S IBDFLTB=$O(^IBE(357.1,"C",IBDFLTF,IBDFLTB)) Q:'IBDFLTB  D  Q:IBDFLTL
	..S IBDFLTL=0 F  S IBDFLTL=$O(^IBE(357.2,"C",IBDFLTB,IBDFLTL)) Q:'IBDFLTL  Q:$P($G(^IBE(357.2,IBDFLTL,0)),"^",11)=IBRTN
	I IBDFLTL D  Q:IBLIST
	.S IBLIST=$$COPYLIST^IBDFU2(IBDFLTL,IBDFLTB,IBBLK,357.2,357.2)
	.Q:'IBLIST
	.K DIE,DA,DR S DIE=357.2,DA=IBLIST,DR="[IBDF POSITION/SIZE COLUMNS]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.S VALMBCK="R" D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	S NAME=$$NEWNAME^IBDF9A Q:NAME=-1
	K DIC,DIE,DD,DO,DINUM,DA
	N DLAYGO
	S DIC="^IBE(357.2,",DIC(0)="FL",X=NAME,DLAYGO=357.2
	D FILE^DICN K DIC,DA
	S IBLIST=$S(+Y<0:"",1:+Y)
	I 'IBLIST D
	.W !,"Unable to create a new selection list!" D PAUSE^IBDFU5
	I IBLIST D
	.D DLISTCNT^IBDFU3(IBLIST,357.2) ;deletes anything that may have been left lying around that now points to IBLIST
	.K DIE,DA,DR S DIE=357.2,DA=IBLIST,DR="[IBDF EDIT SELECTION LIST]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.I IBDELETE K DA S DIK="^IBE(357.2,",DA=IBLIST D ^DIK K DIK,DA
	.I IBLIST,'IBDELETE D ADDGROUP("BLANK",0)
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	S VALMBCK="R"
	Q
ADDGROUP(NAME,ORDER)	;adds a group to the selection list=IBLIST
	N GROUP
	K DIC,DIE,DD,DO,DINUM,DA
	N DLAYGO
	S DIC="^IBE(357.4,",DIC(0)="FL",X=NAME,DLAYGO=357.4
	D FILE^DICN K DIC,DA
	S GROUP=$S(+Y<0:"",1:+Y)
	I GROUP D
	.S NODE=$G(^IBE(357.4,GROUP,0)) S $P(NODE,"^",2)=ORDER,$P(NODE,"^",3)=IBLIST S ^IBE(357.4,GROUP,0)=NODE
	.S DIK="^IBE(357.4,",DA=GROUP D IX1^DIK K DIK,DA
	Q
	;
FORMAT	;allows the user to format all of the selections on the list in mass
	;
	;
	;TYPE = type of formating - U=upper case,L=lower case,C=capitalize
	;SUBCOL is the subcolumn to format
	;
	N TYPE,SUBCOL,SLCTN
	;
	;ask for the subcolumn to format
	S SUBCOL=$$SUBCOL
	;
	;ask for the type of fomatting
	S TYPE=$S(SUBCOL:$$TYPE,1:"")
	;
	;find all the sections to be formatted and do so
	I TYPE'="",SUBCOL S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"C",IBLIST,SLCTN)) Q:'SLCTN  D:$P($G(^IBE(357.3,SLCTN,0)),"^",3)=IBLIST CHANGE(SLCTN,SUBCOL,TYPE)
	;
	S VALMBCK="R"
	Q
	;
FORMAT2	;allows the user to format all of the selections in the group in mass
	;
	;
	;TYPE = type of formating - U=upper case,L=lower case,C=capitalize
	;SUBCOL is the subcolumn to format
	;
	N TYPE,SUBCOL,SLCTN
	;
	;ask for the subcolumn to format
	S SUBCOL=$$SUBCOL
	;
	;ask forthe type of fomatting
	S TYPE=$S(SUBCOL:$$TYPE,1:"")
	;
	;find all the sections to be formatted and do so
	I TYPE'="",SUBCOL S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"D",IBGRP,SLCTN)) Q:'SLCTN  D:$P($G(^IBE(357.3,SLCTN,0)),"^",4)=IBGRP CHANGE(SLCTN,SUBCOL,TYPE)
	;
	D IDXSLCTN^IBDF4
	S VALMBCK="R"
	Q
	;
TYPE()	;ask the user what type of formatting
	N TYPE S TYPE=""
	K DIR S DIR(0)="SOB^UPPERCASE:U;LOWERCASE:L;CAPITALIZE:C"
	S DIR("A")="Select the type of formatting",DIR("B")="C"
	D ^DIR K DIR
	I '$D(DIRUT),Y'=-1 S TYPE=Y
	Q $E(TYPE,1)
	;
CHANGE(SLCTN,SUBCOL,TYPE)	;
	;
	N DA,NODE,STR
	S DA=$O(^IBE(357.3,SLCTN,1,"B",SUBCOL,0))
	Q:'DA
	S NODE=$G(^IBE(357.3,SLCTN,1,DA,0))
	S STR=$P(NODE,"^",2)
	D:$L(STR)
	.I TYPE="U" S STR=$$UP^XLFSTR(STR)
	.I TYPE="L" S STR=$$LOW^XLFSTR(STR)
	.I TYPE="C" S STR=$$CAPS(STR)
	.S $P(^IBE(357.3,SLCTN,1,DA,0),"^",2)=STR
	Q
	;
CAPS(STR)	;returns STR with each word in it capitalized
	N FIRST,I,CHAR,LEN
	S FIRST=1,LEN=$L(STR)
	F I=1:1 S CHAR=$E(STR,I) Q:CHAR=""  D
	.I CHAR?1A,FIRST D
	..S FIRST=0,CHAR=$$UP^XLFSTR(CHAR)
	.E  I CHAR?1A D
	..S CHAR=$$LOW^XLFSTR(CHAR)
	.E  S FIRST=1
	.S STR=$E(STR,1,I-1)_CHAR_$E(STR,I+1,LEN)
	Q STR
	;
SUBCOL()	;ask what subcolumn to format
	;SCLIST - used to record the subcolumns that can be formated - each digit will signify a subcolum
	;
	N SCLIST,NODE,SUBCOL,ANS
	;first get the list of subcolumns that can be formatted
	S SCLIST="",SUBCOL=0
	F  S SUBCOL=$O(IBLIST("SCTYPE",SUBCOL)) Q:'SUBCOL  I $G(IBLIST("SCW",SUBCOL)),IBLIST("SCTYPE",SUBCOL)=1,IBLIST("SCEDITABLE",SUBCOL) S SCLIST=SCLIST_","_SUBCOL
	;if there is at most one subcolumn that can be edited return that
	I $L(SCLIST)<3 Q $E(SCLIST,2)
	;
	;now ask what subcolumn to format
AGAIN	W !,"What subcolumn do you want formated? Choose from (",$E(SCLIST,2,10),"): "
	R ANS:DTIME
	I '$T!(ANS["^") Q ""
	I ANS?1N,SCLIST[ANS Q ANS
	G AGAIN
	Q ANS

IBDF9A3
IBDF9A3	;ALB/CJM - ENCOUNTER FORM - (create,edit,delete selection list - continued) ;NOV 5,1994
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
GETSC(ARY,LIST)	;makes a list of subcolumns having text
	N SC,NODE
	S SC=0 F  S SC=$O(^IBE(357.2,LIST,2,SC)) Q:'SC  S NODE=$G(^IBE(357.2,LIST,2,SC,0)) I $P(NODE,"^",4)=1 S ARY(+NODE)=$P(NODE,"^",5)
	Q
DELSC(LIST,SC)	;delete subcolumn=SC for selections on LIST
	N SLCTN,SCIEN
	K DA,DIK
	S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"C",LIST,SLCTN)) Q:'SLCTN  S SCIEN=0 F  S SCIEN=$O(^IBE(357.3,SLCTN,1,"B",SC,SCIEN)) Q:'SCIEN  D
	.I $P($G(^IBE(357.3,SLCTN,1,SCIEN,0)),"^")=SC D
	..S DIK="^IBE(357.3,"_SLCTN_",1,",DA(1)=SLCTN,DA=SCIEN D ^DIK
	.E  D
	..K ^IBE(357.3,SLCTN,1,"B",SC,SCIEN)
	..S DIK="^IBE(357.3,SLCTN,1,",DA(1)=SLCTN,DA=SCIEN D IX^DIK
	K DIK,DA
	Q
ADDSC(LIST,SC)	;ADD subcolumn=SC for selections on LIST if not already there, else set to blank
	N SLCTN,SCIEN
	S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"C",LIST,SLCTN)) Q:'SLCTN  D
	.;re-index the record, to insure it is good 
	.K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D IX^DIK
	.S SCIEN=$O(^IBE(357.3,SLCTN,1,"B",SC,0))
	.;
	.;should be empty if it already exists
	.I SCIEN S $P(^IBE(357.3,SLCTN,1,SCIEN,0),"^",2)="" Q
	.;
	.;it doesnt already exist, so create it
	.K DA,DIC,DO,DINUM
	.S DIC="^IBE(357.3,"_SLCTN_",1,",DA(1)=SLCTN,X=SC,DIC(0)="" D FILE^DICN
	K DIC,DO,DA,DIK
	Q
	;
OTHER	;
	N INPUT,NODE
	S NODE=$G(^IBE(357.6,16,0))
	S INPUT("NARRATIVE")=$P(NODE,"^"),INPUT("NARRATIVE","NAME")=$P(NODE,"^",2),INPUT("NARRATIVE","DATATYPE")=$P(NODE,"^",3),INPUT("CODE")=$P(NODE,"^",4),INPUT("CODE","NAME")=$P(NODE,"^",6),INPUT("CODE","DATATYPE")=$P(NODE,"^",7)
	Q

IBDF9B
IBDF9B	;ALB/CJM - ENCOUNTER FORM - (edit,delete,add data fields) ;FEB 1,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
FIELD	;Create, Edit, or Delete a data field from the form
	S VALMBCK="R"
	D FULL^VALM1
	K DIR S DIR("?",1)="A DISPLAY FIELD outputs data from DHCP, MULTIPLE CHOICE FIELDS",DIR("?")="and HAND PRINT FIELDS allow input of data, LABELS are for fixed text fields"
	W !,DIR("?",1),!,DIR("?"),!!
	S DIR("B")="D",DIR(0)="SB^D:Display Field;M:Multiple Choice Field;H:Hand Print;L:Label Only",DIR("A")="Edit fields for: [D]isplay,  [M]ultiple Choice, [H]and Print, [L]abel only"
	D ^DIR K DIR I $D(DIRUT)!(Y<0) Q
	I Y="M" D MFIELD^IBDF9B2 Q
	I Y="H" D HFIELD^IBDF9B4 Q
	I Y="L" D LABELS^IBDF9B3 Q
	;
	N IBVALMBG,QUIT
	S QUIT=0
	S IBVALMBG=VALMBG
	S VALMBCK="R"
	;
	F  D  Q:QUIT
	.D FULL^VALM1
	.K DIR S DIR("?",1)="You can Create, Edit, or Delete a data field, Shift all of the data fields",DIR("?")="within a range up or down, or List their locations ."
	.W !!,DIR("?",1),!,DIR("?"),!
	.S DIR("B")="C",DIR(0)="SB^C:Create;E:Edit;D:Delete;S:Shift;L:List;Q:Quit",DIR("A")="[C]reate,  [D]elete,  [E]dit,   [S]hift,  [L]ocations,  [Q]uit"
	.D ^DIR K DIR I $D(DIRUT)!(Y<0) S QUIT=1 Q
	.I Y="Q" S QUIT=1 Q
	.D @$S(Y="C":"NEWFLD",Y="E":"EDITFLD",Y="D":"DLTFLD",Y="S":"SHIFT",Y="L":"^IBDF9B1",1:"")
	.D REFRESH^VALM
	S VALMBCK="R",VALMBG=IBVALMBG
	Q
SHIFT	;expects IBBLK to be defined - shifts all fields within range supplied by user
	D SHIFT^IBDF10("D")
	D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
EDITFLD	;expects IBBLK to be defined
	N IBFIELD,RTN,NODE
	N IBMF,IBWP,IBLIST,IBI,IBOLD,IBX,IBY,IBW,IBP,IBLEN,IBDELETE ;these are used in the input template
	;IBMF=1 if display interface returns records,IBWP=1 display interface returns a word processing field
	D SELECT
	I IBFIELD D
	.D REFRESH^VALM,RESET^VALM4:VALMCC
	.S (IBMF,IBLIST,IBWP)=0,IBOLD=1,(IBX,IBY)=""
	.S RTN=$P($G(^IBE(357.5,IBFIELD,0)),"^",3)
	.I RTN D DATATYPE(RTN)
	.K DR,DIE,DA S DIE=357.5,DA=IBFIELD,DR="[IBDF EDIT DATA FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
SELECT	;
	S IBFIELD=0
	Q:'$G(IBBLK)
	I '$O(^IBE(357.5,"C",IBBLK,0)) W !,"There is no data field!" D PAUSE^IBDFU5 Q
AGAIN	K DIC S DIC="^IBE(357.5,",DIC(0)="EFQ",DIC("B")="",D="C",X=IBBLK
	S DIC("S")="I $P(^(0),U,2)=IBBLK,+$P(^(0),U,3)>0"
	D IX^DIC K DIC
	S:+Y>0 IBFIELD=+Y
	I 'IBFIELD,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No data field selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
	Q
DLTFLD	;expects IBBLK to be defined
	N IBFIELD
	D SELECT
	I IBFIELD D
	.Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.5,IBFIELD,0)),"^"))
	.D DLTFLD^IBDFU3(357.5,IBBLK,IBFIELD)
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
NEWFLD	;adds a new field, expects IBBLK to be defined
	N NAME,FIELD,NODE,IBRTN,DLAYGO
	N IBX,IBY,IBLIST,IBLEN,IBWP,IBMF,IBW,IBP,IBDELETE,IBOLD ;these are used in the input template
	S NAME=$$NEWNAME Q:NAME=-1
	S IBRTN=$$LOOKUP Q:'IBRTN
	S IBOLD=0,(IBX,IBY)=""
	K DIC,DIE,DD,DO,DINUM S DIC="^IBE(357.5,",DIC(0)="FL",X=NAME,DLAYGO=357.5
	D FILE^DICN K DIC,DIE,DA
	S FIELD=$S(+Y<0:"",1:+Y)
	I 'FIELD D
	.W !,"Unable to create a new data field!" D PAUSE^IBDFU5
	I FIELD D
	.S IBDELETE=1
	.K DIE,DA,DR S DIE=357.5,DA=FIELD,DR="[IBDF EDIT DATA FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA,DIC
	.I IBDELETE K DA S DIK="^IBE(357.5,",DA=FIELD D ^DIK K DIK,DA Q
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
NEWNAME()	;
	K DIR S DIR(0)="357.5,.01A",DIR("A")="New Field Name: ",DIR("B")=""
	D ^DIR K DIR I $D(DIRUT) Q -1
	Q Y
	;
DATATYPE(RTN)	;
	;INPUT - RTN is a ptr to the package interface file
	;
	;OUTPUT - IBLEN() stores the lengths of the pieces of the record returned by the package interface
	;IBLIST=1 if list,IBMF=1 if record, IBWP=1 if word processing
	;
	N IBSUB,NODE,DATATYPE
	S (IBMF,IBWP,IBLIST)=0
	Q:'$G(RTN)
	S DATATYPE=$P($G(^IBE(357.6,RTN,0)),"^",7) S:DATATYPE=5 IBWP=1 S:(DATATYPE=2)!(DATATYPE=4) IBMF=1 S:(DATATYPE=3)!(DATATYPE=4) IBLIST=1
	I 'IBWP D
	.N IEN
	.S IEN=0 F  S IEN=$O(^IBE(357.6,RTN,15,"C",IEN)) Q:'IEN  S NODE=$G(^IBE(357.6,RTN,15,IEN,0)) I $P(NODE,"^",3) S IBLEN($P(NODE,"^",3))=+$P(NODE,"^",2)
	.S IBLEN(1)=$P($G(^IBE(357.6,RTN,2)),"^",2)
	Q
	;
LOOKUP()	;does a lookup on the package interface file using the E cross-reference, which uses the name with the prefix=namespace removed
	K DIC S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1"
	S DIC="^IBE(357.6,",DIC(0)="MQEA",D="E^D^B",DIC("A")="Select the TYPE OF DATA that should be displayed:" D MIX^DIC1 K DIC,DA,D
	Q $S((Y<0)!$D(DTOUT)!$D(DUOUT):0,1:+Y)
	;

IBDF9B1
IBDF9B1	;ALB/CJM - ENCOUNTER FORM - (report data fields) ;APRIL 22,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
REPORT	;
	N TOP,BOTTOM,LEFT,RIGHT,QUIT,SCRNSIZE
	S QUIT=0,SCRNSIZE=4
	D RANGE
	D:'QUIT SEARCH(TOP,BOTTOM,LEFT,RIGHT)
	Q
RANGE	;asks the user for the range - returns TOP,BOTTOM,LEFT,RIGHT
	N I,HT,WIDTH
	S HT=IBBLK("H"),WIDTH=IBBLK("W")
	K DIR
	;get TOP
	S DIR("A")="What is the top-most row to report on?"
	S DIR(0)="N^1:"_HT_":0",DIR("B")=1
	D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
	S TOP=Y
	;now get BOTTOM
	S DIR("A")="What is the bottom-most row to report on? (optional)",DIR("?",1)="Enter the lowest row that you want to report on.",DIR("?")="Enter nothing to report all data fields below the highest row that you specified."
	K DIR("B") ;S DIR("B")=HT
	S DIR(0)="NO^"_TOP_":"_HT_":0"
	D ^DIR K DIR I (Y=-1)!$D(DTOUT)!$D(DUOUT) S QUIT=1 Q
	S BOTTOM=Y
	;get LEFT
	S DIR("A")="What is the left-most column to report on?"
	S DIR(0)="N^1:"_WIDTH_":0",DIR("B")=1
	D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
	S LEFT=Y
	;now get RIGHT
	S DIR("A")="What is the right-most column to report on? (optional)"
	S DIR("?",1)="Enter the right-most column that you want to report on.",DIR("?")="Enter nothing to report all data fields to the right of the left-most column that you specified."
	K DIR("B") ;S DIR("B")=WIDTH
	S DIR(0)="NO^"_LEFT_":"_WIDTH_":0"
	D ^DIR K DIR I (Y=-1)!$D(DTOUT)!$D(DUOUT) S QUIT=1 Q
	S RIGHT=Y
	;now change TOP,BOTTOM,LEFT,RIGHT to their internal values
	;(BOTTOM or RIGHT)="" has special meaning - means shift without limit 
	S TOP=TOP-1,LEFT=LEFT-1
	S:BOTTOM>0 BOTTOM=BOTTOM-1
	S:RIGHT>0 RIGHT=RIGHT-1
	Q
SEARCH(TOP,BOTTOM,LEFT,RIGHT)	;searches for data fields in IBBLK falling within the rectangle defined by TOP,BOTTOM,LEFT,RIGHT and reports on them
	N SUBFLD,IBX,IBY,FLD,QUIT,ARY,RTN,WP,LIST,CNT,NODE,COUNT
	S ARY="^TMP(""IBDF"",$J,""LIST OF DATA FIELDS"")"
	K @ARY
	S (COUNT,QUIT)=0
	S FLD="" F  S FLD=$O(^IBE(357.5,"C",IBBLK,FLD)) Q:QUIT!('FLD)  D
	.S FLD("NODE0")=$G(^IBE(357.5,FLD,0))
	.Q:FLD("NODE0")=""
	.S FLD("NAME")=$P(FLD("NODE0"),"^")
	.S FLD("MULTIPLE SF")="NO"
	.S (SUBFLD,CNT)=0 F  S SUBFLD=$O(^IBE(357.5,FLD,2,SUBFLD)) Q:'SUBFLD  S NODE=$G(^IBE(357.5,FLD,2,SUBFLD,0)) I $P(NODE,"^",9),$P(NODE,"^",8) S CNT=CNT+1 I CNT>1 S FLD("MULTIPLE SF")="YES" Q
	.Q:$P(FLD("NODE0"),"^",2)'=IBBLK
	.D RTNDESCR
	.I WP S IBX=+$P(FLD("NODE0"),"^",10),IBY=+$P(FLD("NODE0"),"^",11) D:$$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT)  Q
	..S FLD("MULTIPLE SF")="NO"
	..D SETARY
	.S SUBFLD=0 F  S SUBFLD=$O(^IBE(357.5,FLD,2,SUBFLD)) Q:QUIT!('SUBFLD)  D
	..S SUBFLD("NODE0")=$G(^IBE(357.5,FLD,2,SUBFLD,0)) Q:SUBFLD("NODE0")=""
	..S IBX=$P(SUBFLD("NODE0"),"^",7),IBY=$P(SUBFLD("NODE0"),"^",6) I IBX]"",IBY]"" I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D SETARY
	D PRINT
	K @ARY
	Q
RTNDESCR	;sets RTN=package interface and gets fields needed from the 0 node, sets the flags LIST, &  WP
	S RTN=$P(FLD("NODE0"),"^",3)
	I 'RTN S (WP,RTN("INTERFACE"),RTN("PRINT COMPLETE"),LIST,RTN("NODE0"))=0 Q
	S RTN("NODE0")=$G(^IBE(357.6,RTN,0))
	S LIST=$S("34"[$P(RTN("NODE0"),"^",7):1,1:0)
	S WP=$S($P(RTN("NODE0"),"^",7)=5:1,1:0)
	S RTN("INTERFACE")=$P(RTN("NODE0"),"^"),RTN("INTERFACE")=$E(RTN("INTERFACE"),$F(RTN("INTERFACE")," "),40)
	S RTN("PRINT COMPLETE")=$S($P(RTN("NODE0"),"^",8):"Y",1:"N")
	Q
PRINT	;prints @ARY
	N CNT,LINE S (QUIT,CNT)=0
	S COUNT=0 F  S COUNT=$O(@ARY@(COUNT)) Q:QUIT!('COUNT)  S IBY="" F  S IBY=$O(@ARY@(COUNT,IBY)) Q:QUIT!(IBY="")  D
	.S IBX="" F  S IBX=$O(@ARY@(COUNT,IBY,IBX)) Q:QUIT!(IBX="")  D
	..S LINE=0 F  S LINE=$O(@ARY@(COUNT,IBY,IBX,LINE)) Q:'LINE  W !,$E($G(@ARY@(COUNT,IBY,IBX,LINE)),1,IOM) S CNT=LINE
	..F  Q:(CNT>SCRNSIZE)  W ! S CNT=CNT+1
	..S QUIT=$$PAUSE
	Q
PAUSE()	;pauses after each field discription is displayed
	N ANS
	R ANS:DTIME
	Q $S('$T:1,ANS["^":1,1:0)
SETARY	;writes data field description to @ARY
	N PIECE,DATA,LINE
	S COUNT=COUNT+1
	S @ARY@(COUNT,IBY,IBX,1)="Name of Data Field: "_FLD("NAME")_"     Multiple Subfields With Data: "_FLD("MULTIPLE SF")
	S LINE="Row: "_(IBY+1)_"  Column: "_(IBX+1)_"  Length: "_$S(WP:$P(FLD("NODE0"),"^",14)_"    Lines Allocated On Form: "_$P(FLD("NODE0"),"^",12),1:$P(SUBFLD("NODE0"),"^",8))
	S @ARY@(COUNT,IBY,IBX,2)=LINE_$S(LIST:"  Number On List: "_$P(FLD("NODE0"),"^",5)_"  Last On List To Print?: "_$S($P(FLD("NODE0"),"^",4):"Y",1:"N"),1:"")
	S @ARY@(COUNT,IBY,IBX,3)="Package Interface: "_RTN("INTERFACE")_"     Print Overflowed Data?: "_RTN("PRINT COMPLETE")
	I 'WP S DATA="",PIECE=$P(SUBFLD("NODE0"),"^",9) S:'PIECE PIECE=1 S:RTN DATA=$$DATANAME^IBDFU1B(RTN,PIECE) D
	.S @ARY@(COUNT,IBY,IBX,4)="Label"_$S($P(SUBFLD("NODE0"),"^",3)["I":" (not displayed): ",1:": ")_$P(SUBFLD("NODE0"),"^")_"   Data: "_DATA
	I WP,RTN S @ARY@(COUNT,IBY,IBX,4)=$G(^IBE(357.6,RTN,1,1,0)),@ARY@(COUNT,IBY,IBX,5)=$G(^IBE(357.6,RTN,1,2,0))
	Q

IBDF9B2
IBDF9B2	;ALB/CJM - ENCOUNTER FORM - (edit,delete,add multiple choice fields) ;JUL 20,1994
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
MFIELD	;Create, Edit, or Delete a multiple choice field from the form
	;
	N IBVALMBG,QUIT
	S IBVALMBG=VALMBG
	S QUIT=0
	S VALMBCK="R"
	;
	F  D  Q:QUIT
	.D FULL^VALM1
	.K DIR S DIR("?",1)="You can Create, Edit, or Delete a multiple choice field, or Shift all of the",DIR("?")="multiple choice fields within a definable range either up or down."
	.W !!,DIR("?",1),!,DIR("?"),!
	.S DIR("B")="C",DIR(0)="SB^C:Create;E:Edit;D:Delete;S:Shift;Q:Quit",DIR("A")="[C]reate,   [D]elete,   [E]dit,   [S]hift,   [Q]uit"
	.D ^DIR K DIR I $D(DIRUT)!(Y<0) S QUIT=1 Q
	.I Y="Q" S QUIT=1 Q
	.D @$S(Y="C":"NEWFLD",Y="E":"EDITFLD",Y="D":"DLTFLD",Y="S":"SHIFT",1:"")
	.D REFRESH^VALM
	.D FULL^VALM1
	S VALMBCK="R",VALMBG=IBVALMBG
	Q
SHIFT	;expects IBBLK to be defined - shifts all input fields within range supplied by user
	D SHIFT^IBDF10("M")
	D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
EDITFLD	;expects IBBLK to be defined
	N IBFIELD,RTN,NODE
	N IBOLD,IBX,IBY,IBLEN,IBTYPE,IBLABEL,IBQUAL,IBID ;these are used in the input template
	D SELECT
	I IBFIELD D
	.D REFRESH^VALM,RESET^VALM4:VALMCC
	.S (IBX,IBY,IBLEN)=0
	.S IBOLD=1,IBTYPE=$P($G(^IBE(357.93,IBFIELD,0)),"^",6)
	.K DR,DIE,DA S DIE=357.93,DA=IBFIELD,DR="[IBDF EDIT MULT CHOICE FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA,DIC
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
SELECT	;
	S IBFIELD=0
	Q:'$G(IBBLK)
	I '$O(^IBE(357.93,"C",IBBLK,0)) W !,"There is no multiple choice field!" D PAUSE^IBDFU5 Q
AGAIN	K DIC S DIC="^IBE(357.93,",DIC(0)="EFQ",DIC("B")="",D="C",X=IBBLK
	S DIC("S")="I $P($G(^(0)),U,8)=IBBLK"
	D IX^DIC K DIC
	S:+Y>0 IBFIELD=+Y
	I 'IBFIELD,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No multiple choice field selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
	Q
DLTFLD	;expects IBBLK to be defined
	N IBFIELD
	D SELECT
	I IBFIELD D
	.Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.93,IBFIELD,0)),"^"))
	.D DLTIFLD^IBDFU3(357.93,IBBLK,IBFIELD)
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
NEWFLD	;adds a new field, expects IBBLK to be defined
	N NAME,FIELD,NODE,IBRTN,DLAYGO
	N IBX,IBY,IBLEN,IBOLD,IBTYPE,IBLABEL,IBQUAL,IBID ;these are used in the input template
	S NAME=$$NEWNAME^IBDF9B Q:NAME=-1
	S IBOLD=0,(IBX,IBY,IBLEN)=""
	K DIC,DIE,DD,DO,DINUM S DIC="^IBE(357.93,",DIC(0)="FL",X=NAME,DLAYGO=357.93
	D FILE^DICN K DIC,DIE,DA
	S FIELD=$S(+Y<0:"",1:+Y)
	I 'FIELD D
	.W !,"Unable to create a new input field!" D PAUSE^IBDFU5
	I FIELD D
	.K DIE,DA,DR S DIE=357.93,DA=FIELD,DR="[IBDF EDIT MULT CHOICE FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA,DIC
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q

IBDF9B3
IBDF9B3	;ALB/CJM - ENCOUNTER FORM - (edit,delete,add data fields) ;FEB 1,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
LABELS	;Create, Edit, or Delete LABELS from the form
	I Y="I" D LABELS^IBDF9B3 Q
	;
	N IBVALMBG,QUIT
	S QUIT=0
	S IBVALMBG=VALMBG
	S VALMBCK="R"
	;
	F  D  Q:QUIT
	.D FULL^VALM1
	.K DIR S DIR("?",1)="You can Create, Edit, or Delete labels, Shift all of the labels AND data",DIR("?")="fields within a range up or down."
	.W !!,DIR("?",1),!,DIR("?"),!
	.S DIR("B")="C",DIR(0)="SB^C:Create;E:Edit;D:Delete;S:Shift;Q:Quit",DIR("A")="[C]reate,  [D]elete,  [E]dit,   [S]hift,  [Q]uit"
	.D ^DIR K DIR I $D(DIRUT)!(Y<0) S QUIT=1 Q
	.I Y="Q" S QUIT=1 Q
	.D @$S(Y="C":"NEWFLD",Y="E":"EDITFLD",Y="D":"DLTFLD",Y="S":"SHIFT",1:"")
	.D REFRESH^VALM
	S VALMBCK="R",VALMBG=IBVALMBG
	Q
SHIFT	;expects IBBLK to be defined - shifts all fields within range supplied by user
	D SHIFT^IBDF10("D")
	D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
EDITFLD	;expects IBBLK to be defined
	N IBFIELD,NOD
	N IBI,IBOLD,IBX,IBY,IBW,IBDELETE ;these are used in the input template
	D SELECT
	I IBFIELD D
	.D REFRESH^VALM,RESET^VALM4:VALMCC
	.S IBOLD=1,(IBX,IBY)=""
	.K DR,DIE,DA S DIE=357.5,DA=IBFIELD,DR="[IBDF EDIT LABEL FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
SELECT	;
	S IBFIELD=0
	Q:'$G(IBBLK)
	I '$O(^IBE(357.5,"C",IBBLK,0)) W !,"There is no label only field!" D PAUSE^IBDFU5 Q
AGAIN	K DIC S DIC="^IBE(357.5,",DIC(0)="EFQ",DIC("B")="",D="C",X=IBBLK
	S DIC("S")="I $P(^(0),U,2)=IBBLK,+$P(^(0),U,3)=0"
	D IX^DIC K DIC
	S:+Y>0 IBFIELD=+Y
	I 'IBFIELD,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No label selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
	Q
DLTFLD	;expects IBBLK to be defined
	N IBFIELD
	D SELECT
	I IBFIELD D
	.Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.5,IBFIELD,0)),"^"))
	.D DLTFLD^IBDFU3(357.5,IBBLK,IBFIELD)
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
NEWFLD	;adds a new field, expects IBBLK to be defined
	N NAME,FIELD,NODE,IBRTN,DLAYGO
	N IBX,IBY,IBW,IBDELETE,IBOLD ;these are used in the input template
	S NAME=$$NEWNAME^IBDF9B Q:NAME=-1
	S IBOLD=0,(IBX,IBY)=""
	K DIC,DIE,DD,DO,DINUM S DIC="^IBE(357.5,",DIC(0)="FL",X=NAME,DLAYGO=357.5
	D FILE^DICN K DIC,DIE,DA
	S FIELD=$S(+Y<0:"",1:+Y)
	I 'FIELD D
	.W !,"Unable to create a new label!" D PAUSE^IBDFU5
	I FIELD D
	.S IBDELETE=1
	.D RESET^VALM4:VALMCC,REFRESH^VALM
	.K DIE,DA,DR S DIE=357.5,DA=FIELD,DR="[IBDF EDIT LABEL FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA,DIC
	.I IBDELETE K DA S DIK="^IBE(357.5,",DA=FIELD D ^DIK K DIK,DA Q
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q

IBDF9B4
IBDF9B4	;ALB/CJM - ENCOUNTER FORM - (edit,delete,add Hand Print fields) ;JUL 20,1994
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
HFIELD	;Create, Edit, or Delete a Hand Print field from the form
	;
	N IBVALMBG,QUIT
	S IBVALMBG=VALMBG
	S QUIT=0
	S VALMBCK="R"
	;
	F  D  Q:QUIT
	.D FULL^VALM1
	.K DIR S DIR("?",1)="You can Create, Edit, or Delete an hand print field, or Shift all of the hand print fields",DIR("?")="within a definable range either up or down."
	.W !!,DIR("?",1),!,DIR("?"),!
	.S DIR("B")="C",DIR(0)="SB^C:Create;E:Edit;D:Delete;S:Shift;Q:Quit",DIR("A")="[C]reate,   [D]elete,   [E]dit,   [S]hift,   [Q]uit"
	.D ^DIR K DIR I $D(DIRUT)!(Y<0) S QUIT=1 Q
	.I Y="Q" S QUIT=1 Q
	.D @$S(Y="C":"NEWFLD",Y="E":"EDITFLD",Y="D":"DLTFLD",Y="S":"SHIFT",1:"")
	.D REFRESH^VALM
	S VALMBCK="R",VALMBG=IBVALMBG
	Q
SHIFT	;expects IBBLK to be defined - shifts all hand print fields within range supplied by user
	D SHIFT^IBDF10("H")
	D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
EDITFLD	;expects IBBLK to be defined
	N IBFIELD,RTN,NODE
	N IBOLD,IBDELETE,IBX,IBY,IBLEN,IBTYPE ;these are used in the input template
	D SELECT
	I IBFIELD D
	.D REFRESH^VALM,RESET^VALM4:VALMCC
	.S (IBX,IBY,IBLEN)=0
	.S IBOLD=1,IBTYPE=$P($G(^IBE(359.94,IBFIELD,0)),"^",5)
	.K DR,DIE,DA S DIE=359.94,DA=IBFIELD,DR="[IBDF EDIT HAND PRINT FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
SELECT	;
	S IBFIELD=0
	Q:'$G(IBBLK)
	I '$O(^IBE(359.94,"C",IBBLK,0)) W !,"There is no hand print field!" D PAUSE^IBDFU5 Q
AGAIN	K DIC S DIC="^IBE(359.94,",DIC(0)="EFQ",DIC("B")="",D="C",X=IBBLK
	S DIC("S")="I $P($G(^(0)),U,8)=IBBLK"
	D IX^DIC K DIC
	S:+Y>0 IBFIELD=+Y
	I 'IBFIELD,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No hand print field selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
	Q
DLTFLD	;expects IBBLK to be defined
	N IBFIELD
	D SELECT
	I IBFIELD D
	.Q:'$$RUSURE^IBDFU5($P($G(^IBE(359.94,IBFIELD,0)),"^"))
	.D DLTHFLD^IBDFU3(359.94,IBBLK,IBFIELD)
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
NEWFLD	;adds a new field, expects IBBLK to be defined
	N NAME,FIELD,NODE,IBRTN,DLAYGO
	N IBX,IBY,IBLEN,IBDELETE,IBOLD,IBTYPE ;these are used in the input template
	S NAME=$$NEWNAME^IBDF9B Q:NAME=-1
	S IBOLD=0,(IBX,IBY,IBLEN)=""
	K DIC,DIE,DD,DO,DINUM S DIC="^IBE(359.94,",DIC(0)="FL",X=NAME,DLAYGO=359.94
	D FILE^DICN K DIC,DIE,DA
	S FIELD=$S(+Y<0:"",1:+Y)
	I 'FIELD D
	.W !,"Unable to create a new hand print field!" D PAUSE^IBDFU5
	I FIELD D
	.S IBDELETE=1
	.K DIE,DA,DR S DIE=359.94,DA=FIELD,DR="[IBDF EDIT HAND PRINT FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA,DIC
	.I IBDELETE K DA S DIK="^IBE(359.94,",DA=FIELD D ^DIK K DIK,DA Q
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
	;
LENGTHDT(TYPE)	;
	Q:'$G(TYPE) 0
	N NODE,LEN
	S NODE=$G(^IBE(359.1,TYPE,0))
	S LEN=$L($P(NODE,"^",11))
	S:LEN LEN=LEN+1
	S LEN=LEN+(4*$P(NODE,"^",6))
	Q LEN

IBDF9C
IBDF9C	;ALB/CJM - ENCOUNTER FORM - (edit header block) ;FEB 1,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
EDITHDR	;edit the header block
	N HDRBLK,HDRFLD,TOP1,BOT1,TOP2,BOT2,HDRLINES,MAXLEN,QUIT,NEWBLOCK
	S VALMBCK="R",(TOP1,TOP2,BOT1,BOT2,QUIT,NEWBLOCK)=0
	D FULL^VALM1
	S HDRBLK=$$FINDBLK I 'HDRBLK S HDRBLK=$$MAKEBLK I 'HDRBLK Q
	D TOPNBOT^IBDFU5(HDRBLK,.TOP1,.BOT1)
	S HDRFLD=$$FINDFLD I 'HDRFLD S HDRFLD=$$MAKEFLD I 'HDRFLD Q
	D EDITFLD
	D:'QUIT EDITBLK,MOVEFLD
	I HDRBLK D TOPNBOT^IBDFU5(HDRBLK,.TOP2,.BOT2),UNCMPBLK^IBDF19(HDRBLK)
	D IDXFORM^IBDF5A($S(TOP1<TOP2:TOP1,1:TOP2),$S(BOT1>BOT2:BOT1,1:BOT2))
	S VALMBCK="R"
	Q
FINDBLK()	;
	S HDRBLK="" F  S HDRBLK=$O(^IBE(357.1,"C",IBFORM,HDRBLK)) Q:'HDRBLK  Q:$P($G(^IBE(357.1,HDRBLK,0)),"^")="HEADER"
	Q HDRBLK
MAKEBLK()	;
	S NEWBLOCK=1
	K DIC,DD,DO,DINUM S DIC="^IBE(357.1,",X="HEADER",DIC(0)="",DIC("DR")=".02////"_IBFORM
	D FILE^DICN K DIC,DIE
	Q $S(+Y<0:"",1:+Y)
FINDFLD()	;
	S HDRFLD="" F  S HDRFLD=$O(^IBE(357.5,"C",HDRBLK,HDRFLD)) Q:'HDRFLD  Q:$P($G(^IBE(357.5,HDRFLD,0)),"^")="HEADER"
	Q HDRFLD
MAKEFLD()	;
	K DIC,DD,DO,DINUM S DIC="^IBE(357.5,",X="HEADER",DIC(0)="",DIC("DR")=".02////"_HDRBLK
	D FILE^DICN K DIC,DIE
	Q $S(+Y<0:"",1:+Y)
EDITFLD	;allows the user to edit the header lines
	N NODE,SUBFLD
	K DIE,DA S DIE=357.5,DA=HDRFLD,DR="[IBDF EDIT FORM HEADER]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	;find the number of lines and the maximum length
	S (HDRLINES,MAXLEN)=0
	S SUBFLD=0 F  S SUBFLD=$O(^IBE(357.5,HDRFLD,2,SUBFLD)) Q:'SUBFLD  S NODE=$G(^(SUBFLD,0)) I NODE'="" S HDRLINES=HDRLINES+1 S MAXLEN=$S(MAXLEN>$L($P(NODE,"^",1)):MAXLEN,1:$L($P(NODE,"^",1)))
	I 'MAXLEN D DLTBLK^IBDFU3(HDRBLK,IBFORM,357.1) S QUIT=1,HDRBLK=""
	Q
EDITBLK	;allows the user to position the header block & draw a box around it
	N IBBOX,IBDELETE
	S IBBOX=0,IBDELETE=1
	D RESET^VALM4:VALMCC,REFRESH^VALM
	K DIE,DA S DIE=357.1,DA=HDRBLK,DR="[IBDF EDIT HEADER BLOCK]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	I IBDELETE,NEWBLOCK D DLTBLK^IBDFU3(HDRBLK,IBFORM,357.1)
	Q
DFLTCOL()	;finds the column that would center the header block
	Q ((IBFORM("WIDTH")-(+$G(MAXLEN)+(+$G(IBBOX))))\2)+1
MOVEFLD	;centers each header line in the block
	N START,SUBFLD,HDR,LINES
	S LINES=0
	S START=$S($P($G(^IBE(357.1,HDRBLK,0)),"^",10)=1:1,1:0)
	S SUBFLD=0
	F  S SUBFLD=$O(^IBE(357.5,HDRFLD,2,SUBFLD)) Q:'SUBFLD  S NODE=$G(^IBE(357.5,HDRFLD,2,SUBFLD,0)),HDR=$P(NODE,"^",1) D
	.I HDR'="" S $P(NODE,"^",4)=((MAXLEN-$L(HDR))\2)+START,$P(NODE,"^",5)=LINES+START,LINES=LINES+1 S ^IBE(357.5,HDRFLD,2,SUBFLD,0)=NODE
	Q

IBDF9D
IBDF9D	;ALB/CJM - ENCOUNTER FORM (create/edit/delete lines);MARCH 20, 1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
LINE	;Create, Edit, or Delete a line on the block
	S VALMBCK="R"
	K DIR S DIR("?",1)="You can add vertical or horizontal lines to the block, or edit or delete",DIR("?")="a line already there IF it was created through this action."
	S DIR("B")="C",DIR(0)="SB^C:Create;E:Edit;D:Delete",DIR("A")="[C]reate , [D]elete, or [E]dit a line"
	D ^DIR K DIR I $D(DIRUT)!(Y<0) Q
	D @$S(Y="C":"NEWLINE",Y="E":"EDITLINE",Y="D":"DLTLINE",1:"")
	S VALMBCK="R"
	Q
EDITLINE	;expects IBBLK to be defined - edits an already existing line
	N IBLINE,IBDFDONE
	;IBDFDONE is used in the imput template
	D FULL^VALM1
	D SELECT
	I IBLINE D
	.D REFRESH^VALM,RESET^VALM4:VALMCC
	.K DIE,DA S DIE=357.7,DA=IBLINE,DR="[IBDF FORM LINE]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
SELECT	;select a line on the block
	S IBLINE=0
	Q:'$G(IBBLK)
	I '$O(^IBE(357.7,"C",IBBLK,0)) W !,"There is no line!" D PAUSE^IBDFU5 Q
AGAIN	K DIC S DIC="^IBE(357.7,",DIC(0)="EFQ",DIC("B")="",D="C",X=IBBLK
	S DIC("S")="I $P($G(^(0)),U,6)=IBBLK"
	D IX^DIC K DIC
	S:+Y>0 IBLINE=+Y
	I 'IBLINE,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No data line selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
	Q
DLTLINE	;expects IBBLK to be defined - deletes one of the blocks lines
	N IBLINE
	D FULL^VALM1
	D SELECT
	I IBLINE D
	.Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.7,IBLINE,0)),"^"))
	.D DLTLINE^IBDFU3(357.7,IBBLK,IBLINE)
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
NEWLINE	;adds a new line, expects IBBLK to be defined
	N IBLINE,NODE,IBDFDONE,DLAYGO
	;IBDONE - a flag used in the input template to indicate if the input template was completed - delete the line if not completed
	;S NAME=$$NEWNAME Q:NAME=-1
	K DIC,DIE,DD,DO,DINUM S DIC="^IBE(357.7,",DIC(0)="FL",X="NAME",DLAYGO=357.7
	D FILE^DICN K DIC,DIE,DA,DO
	S IBLINE=+Y
	I 'IBLINE D
	.W !,"Unable to create a new line!" D PAUSE^IBDFU5
	I IBLINE D
	.K DIE,DA S DIE=357.7,DA=IBLINE,DR="[IBDF FORM LINE]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.I 'IBDFDONE K DA S DIK="^IBE(357.7,",DA=IBLINE D ^DIK K DIK Q
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
NEWNAME(IBLINE)	;
	N NODE,NAME S NODE=$G(^IBE(357.7,IBLINE,0))
	Q:NODE="" "LINE"
	S NAME=$P(NODE,"^",4)_"("_(+$P(NODE,"^",3)+1)_","_(+$P(NODE,"^",2)+1)_")"
	Q NAME
MAXLEN()	;returns the maximum length of the line=IBLINE that will fit in the block=IBBLK
	N LEN,TYPE,NODE,POS
	S NODE=$G(^IBE(357.7,IBLINE,0))
	S TYPE=$P(NODE,"^",4)
	S POS=$S(TYPE="H":$P(NODE,"^",2),1:$P(NODE,"^",3))
	Q ((1+$S(TYPE="H":$$MAXX^IBDFU1B,1:$$MAXY^IBDFU1B))-POS)
	;
TOOMANY()	;are there too many lines in the box? returns 0 or 1
	;IBBLK is assumed to be defined=the block
	N SPACING,NODE,START,NUMBER
	Q:'$G(IBLINE) 0
	Q:'$G(IBBLK) 0
	S NODE=$G(^IBE(357.7,IBLINE,0))
	S START=$P(NODE,"^",3),SPACING=$P(NODE,"^",8),NUMBER=$P(NODE,"^",7)
	S SPACING=$S(SPACING="d":2,SPACING="t":3,1:1)
	I (START+(SPACING*NUMBER)-(SPACING-1))>$$MAXY^IBDFU1B
	Q $T

IBDF9E
IBDF9E	;ALB/CJM - ENCOUNTER FORM (create/edit/delete text areas);MARCH 20, 1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
TEXT	;Create, Edit, or Delete a text area on a block
	S VALMBCK="R"
	K DIR S DIR("?")="You can add text areas to the block, or edit or delete a text area already there."
	S DIR("B")="C",DIR(0)="SB^C:Create;E:Edit;D:Delete",DIR("A")="[C]reate , [D]elete, or [E]dit a text area"
	D ^DIR K DIR I $D(DIRUT)!(Y<0) Q
	D @$S(Y="C":"NEWTEXT",Y="E":"EDITTEXT",Y="D":"DLTTEXT",1:"")
	S VALMBCK="R"
	Q
EDITTEXT	;expects IBBLK to be defined
	N IBTEXT,IBDELETE
	;IBDELETE is used in the imput template
	D FULL^VALM1
	D SELECT
	I IBTEXT D
	.D REFRESH^VALM,RESET^VALM4:VALMCC
	.K DIE,DA S DIE=357.8,DA=IBTEXT,DR="[IBDF EDIT TEXT AREA]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
SELECT	;select a text area on the block
	S IBTEXT=0
	Q:'$G(IBBLK)
	I '$O(^IBE(357.8,"C",IBBLK,0)) W !,"There is no text area!" D PAUSE^IBDFU5 Q
AGAIN	S DIC="^IBE(357.8,",DIC(0)="EFQ",DIC("B")="",D="C",X=IBBLK
	D IX^DIC K DIC
	S:+Y>0 IBTEXT=+Y
	I 'IBTEXT,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No text area selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
	Q
DLTTEXT	;delete a text area - expects IBBLK to be defined
	N IBTEXT
	D FULL^VALM1
	D SELECT
	I IBTEXT D
	.Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.8,IBTEXT,0)),"^"))
	.D DLTTEXT^IBDFU3(357.8,IBBLK,IBTEXT)
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
NEWTEXT	;adds a new text area, expects IBBLK to be defined
	N NAME,IBTEXT,NODE,IBDELETE,DLAYGO
	;IBDELETE - a flag used in the input template to indicate if the input template was completed - if returns 1 delete the record 
	S NAME=$$NEWNAME Q:NAME=-1
	K DIC,DIE,DD,D0,DINUM S DIC="^IBE(357.8,",DIC(0)="FL",X=NAME,DLAYGO=357.8
	D FILE^DICN K DIC,DIE,DA
	S IBTEXT=$S(+Y<0:"",1:+Y)
	I 'IBTEXT D
	.W !,"Unable to create a text area!" D PAUSE^IBDFU5
	I IBTEXT D
	.K DIE,DA S DIE=357.8,DA=IBTEXT,DR="[IBDF EDIT TEXT AREA]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.I IBDELETE K DA S DIK="^IBE(357.8,",DA=IBTEXT D ^DIK K DIK Q
	.D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	Q
NEWNAME()	;
	K DIR S DIR(0)="357.8,.01A",DIR("A")="New Text Area Name: ",DIR("B")=""
	D ^DIR K DIR I $D(DIRUT) Q -1
	Q Y
FORMAT	;formats the word-processing field of IBTEXT
	N W,HT,NODE,COUNT,LINE
	S NODE=$G(^IBE(357.8,IBTEXT,0))
	S W=$P(NODE,"^",5),HT=$P(NODE,"^",6)
	D FORMAT^IBDFU6("^IBE(357.8,IBTEXT,1)",W) ;creates formated version at ^UTILITY($J,"W",1)
	K ^IBE(357.8,IBTEXT,1)
	I $G(^UTILITY($J,"W",1))>HT W !,"WARNING! The text area is too small to display all of the text." D PAUSE^IBDFU5
	S (COUNT,NUM)=0 F  S NUM=$O(^UTILITY($J,"W",1,NUM)) Q:'NUM  S LINE=$G(^(NUM,0)) D
	.;I $L(LINE)>W W !,"WARNING!  The word "_LINE_" is being truncated",!,"because it is too long." D PAUSE^IBDFU5
	.S ^IBE(357.8,IBTEXT,1,NUM,0)=$E(LINE,1,W)
	.S COUNT=COUNT+1
	S ^IBE(357.8,IBTEXT,1,0)="^^"_COUNT_"^"_COUNT_"^"_DT_"^^^^"
	K ^UTILITY($J,"W")
	Q
MAXHT()	;returns the maximum ht. of IBTEXT text area fits in the block IBBLK
	N NODE,Y
	S NODE=$G(^IBE(357.8,IBTEXT,0)) S Y=$P(NODE,"^",4)
	Q ((1+$$MAXY^IBDFU1B)-Y)
	Q
MAXW()	;returns the maximum width of IBTEXT text area fits in the block IBBLK
	N NODE,X
	S NODE=$G(^IBE(357.8,IBTEXT,0)) S X=$P(NODE,"^",3)
	Q ((1+$$MAXX^IBDFU1B)-X)

IBDFBK1
IBDFBK1	;ALB/AAS - AICS broker Utilities ;23-May-95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
GETFS(RESULT,IBDF)	;
	; -- broker call back to return the formspec in IBDFS for form FORMID
	;
	N FORMID,START,STOP,GLB,IBD
	;
	S FORMID=$G(IBDF("FORMID"))
	S START=$G(IBDF("START"),0) ; Default is zero
	S STOP=$G(IBDF("STOP"),50) ; Default is 50
	;S GLB=$G(IBDF("GLB")) ; Pass in global later.
	;
	I $G(FORMID)="" S RESULT(1)="$$FORMID INVALID$$" G GETFSQ
	I +FORMID'=FORMID S FORMID=$E($P(FORMID,"."),3,8)
	I +FORMID<1 S RESULT(1)="$$FORMID INVALID$$" G GETFSQ
	;
	K RESULT
	I '$D(^IBD(359.2,FORMID)) D SCAN^IBDFBKS(FORMID)
	;
	F IBD=START:1:STOP S RESULT(IBD)=$G(^IBD(359.2,FORMID,10,IBD,0)) I RESULT(IBD)="",$O(^IBD(359.2,FORMID,10,IBD))="" S RESULT(IBD)="$$END$$" Q
	;
GETFSQ	Q
	;
FORMID(RESULT,FORMNO)	;
	; -- broker call back to turn a formId into patient name/ssn/clinic/appt/formtype/status
	;
	N IBID
	S RESULT="^^^^"
	S IBID=+$P($G(FORMNO)," ",3)
	Q:'$G(IBID)
	S RESULT=$$FINDPT^IBDF18C(IBID)
	Q
	;
VALIDAV(IBDUSER,IBDFKEY)	;
	; -- broker call back to validate security key, make sure duz array set
	;    for xwb1t17
	; -- Output User Info 
	;    Piece 1 = DUZ           Piece 4 = Site
	;    Piece 2 = DUZ(0)        Piece 5 = UCI/VOL
	;    Piece 3 = UserName      Piece 6 = Security key if held
	;
	; -- Invalid User codes
	;    piece 1 = 0  =: Null or "^" in codes
	;    piece 1 = -1 =: Invalid access code pair
	;    piece 1 = -2 =: Invalid user (terminated, etc.)
	;
	I '$D(DT) D DT^DICRW
	N X,Y,KEY,XUM,XUSER,XQUR,XUF,XUENV,NODE
	;
	S IBDUSER="0^0"
	S IBDUSER=DUZ
	S NODE=$G(^VA(200,+IBDUSER,0))
	I '$D(DUZ(0)) S DUZ(0)=$P(NODE,"^",4)
	I '$D(DUZ(1)) S DUZ(1)=""
	I '$D(DUZ(2)) S DUZ(2)=+$O(^VA(200,DUZ,2,0))
	I +DUZ(2),'$D(DUZ("AG")) S X=$P($G(^DIC(4,DUZ(2),99)),U,5),DUZ("AG")=$S(X]"":X,1:$P(^XTV(8989.3,1,0),U,8))
	I '$D(DUZ("AG")) S DUZ("AG")="V"
	I '$D(DUZ("AUTO")) S DUZ("AUTO")=""
	I '$D(DUZ("BUF")) S DUZ("BUF")=1
	I '$D(DUZ("LANG")) S DUZ("LANG")=""
	;
	D UCI^%ZOSV S UCI=Y
	S KEY=""
	I $G(IBDFKEY)'="" I $D(^XUSEC(IBDFKEY,+IBDUSER)) S KEY=IBDFKEY
	S IBDUSER=IBDUSER_"^"_$P(NODE,"^",4)_"^"_$P(NODE,"^")_"^"_$P($$SITE^VASITE,"^",2)_"^"_UCI_"^"_KEY
	Q
	;
SECM(RESULT,IBDUZ)	;
	; -- broker call back to return array of secondary menus in array RESULT
	;
	I +$G(IBDUZ)<1 S RESULT(1)="No user Identified" G SECMQ
	;
	N COUNT,MENU,IEN
	S COUNT=0,MENU=0
	F  S MENU=$O(^VA(200,+IBDUZ,203,MENU)) Q:'MENU  D
	. S IEN=+$G(^VA(200,+IBDUZ,203,MENU,0))
	. S COUNT=COUNT+1,RESULT(COUNT)=$P($G(^DIC(19,+IEN,0),"Unknown"),"^")
	;
	I COUNT<1 S RESULT(1)="No Secondary Menus"
	;
SECMQ	Q

IBDFBK2
IBDFBK2	;ALB/AAS - AICS broker Utilities ;23-May-95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
RECV(RESULT,IBD)	; -- called by broker
	; -- receives raw data array from scanning workstation and returns
	;    data may come in spurs, IBD("MOREDATA") = 1 if more data pending
	;
	;    errors, warnings, and expanded data.
	;    Input : Result - (called by reference, see output)
	;            IBD    - (called by reference) contains the raw
	;                     data from the workstation (IBD(FD1) - IBD(FD9))
	;                     IB("MOREDATA") - if more data pending.
	;
	;    Output: RESULT - a new array element (result(lcnt) will be
	;                     created for each error, warning and
	;                      data element received
	;
	N I,J,X,Y,IBDATA,CNT,IBDATA1,IBDATA2,IBDATA3,IBDATA4,IBDATA5,LCNT,IBDJ,INODE,ZTQUEUED,IOM
	I $D(IBD)=0 S RESULT(1)="NO DATA RECEIVED" G RECVQ
	S ZTQUEUED="",IOM=80
	;
	S I=""
	S IBDJ=$J
	I $D(IBTEST) S IBDJ=$G(IBD("IBDJ"))
	F  S I=$O(IBD(I)) Q:I=""  S ^TMP("IBD-SCAN-RAWDATA",IBDJ,I)=IBD(I)
	I $G(IBD("MOREDATA")) S RESULT(1)="PARTIAL DATA RECEIVED" G RECVQ
	;
	S RESULT(1)="0^END OF DATA RECEIVED"
	;
	; -- parse strings
	;    data on workstation is built into strings upto 120 characters
	;    each data element delimited by a "~" and need to be parsed
	;    into an array IBDATA() which is then parsed into the bubbles,
	;    dynamic, and handprint arrays.  IBDATA() represents data as it
	;    is received from the scanner.
	;
	S CNT=0
	F I=1:1 S INODE="FD"_I S IBDATA=$G(^TMP("IBD-SCAN-RAWDATA",IBDJ,INODE)) Q:IBDATA=""  D
	. F J=1:1 S X=$P(IBDATA,"~",J) Q:X=""  S CNT=CNT+1,IBDF(CNT)=X
	;
	S RESULT(1)="DATA PARSED INTO FIRST ARRAY"
	K IBD
	;
	S RESULT(1)=$$PCE^IBDFBKR(.IBDF,.PXCA)
	I $D(PXCA("ERROR")) S RESULT(1)="9^DATA REJECTED BY PCE: Crital data is missing or incorrect"
	S LCNT=1
	;
	; -- Don't try to parse array if data isn't valid
	S IBQUIT=+RESULT(1),RESULT(1)=$P(RESULT(1),"^",2,99)
	G:IBQUIT<8 RECVQ
	;
	; -- create result array to pass back to workstation
	D EW(.RESULT,.PXCA,.LCNT)
	D LSTDATA^IBDFBK3(.RESULT,.PXCA,.LCNT)
	;
	I '$D(IBTEST),'$G(IBD("MOREDATA")) K ^TMP("IBD-SCAN-RAWDATA",$J)
RECVQ	I '$D(IBTEST) K PXCA,IBDF
	Q
	;
EW(RESULT,PXCA,LCNT)	;
	; -- List Errors and Warning generated in PCE
	;    Input : Result - (called by reference, see output)
	;            PXCA   - (by referencethe array of data formated to
	;                      the PCE device interface specification
	;            lcnt   - (by reference) a counter for the result array
	;    Output: RESULT - a new array element result(lcnt) will be
	;                     created for each error and warning received
	;
	N I,J,K,L,M,X,IBX
	F M="ERROR","WARNING" I $D(PXCA(M)) D
	.S I=""  F  S I=$O(PXCA(M,I)) Q:I=""  S J="" F  S J=$O(PXCA(M,I,J)) Q:J=""  D
	..S K="" F  S K=$O(PXCA(M,I,J,K)) Q:K=""  S L="" F  S L=$O(PXCA(M,I,J,K,L)) Q:L=""  S IBX=$G(PXCA(M,I,J,K,L)) D
	...S X=M_": "_$P(IBX,"^")
	...I $P(IBX,"^",2)'="" S X=X_" - "_$P(IBX,"^",2)
	...I $P(IBX,"^",3)'="" S X=X_" - "_$P(IBX,"^",3)
	...D NEWLINE^IBDFBK3(.RESULT,X,.LCNT)
EWQ	Q
	;
UNRECV(FID)	; -- used by test to un received data when testing.
	;
	I +$G(FID)<1 Q
	;I $O(^IBD(357.96,+FID,9,0))<1 Q
	S IBI=0  F  S IBI=$O(^IBD(357.96,+FID,9,IBI)) Q:'IBI  I $G(^IBD(357.96,+FID,9,IBI,0))'="" S $P(^(0),"^",2)=""
	K ^IBD(357.96,+FID,10)
	Q
	;
TESTR	;
	S IBTEST="" K ALAN
	;F I=1:1:5 S IBD("FD"_I)=$G(^ALANTEST(I))
	S IBD("MOREDATA")=0
	S IBD("IBDJ")=7
	;S IBD("IBDJ")=543176254 ;PAGE 1
	S FORMID=+$P($G(^TMP("IBD-SCAN-RAWDATA",IBD("IBDJ"),"FD1")),"FORMID=",2)
	;I +FORMID>0 D UNRECV(FORMID)
	D RECV(.ALAN,.IBD)
	W !! X "ZW ALAN W !! ZW PXCA"
	K IBTEST
	Q

IBDFBK3
IBDFBK3	;ALB/AAS - AICS broker Utilities ;23-May-95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
LSTDATA(RESULT,PXCA,LCNT)	;
	; -- expand the PXCA array data into human readable terms for
	;    display on the workstation
	;
	;    Input : Result - (called by reference, see output)
	;            PXCA   - (by referencethe array of data formated to
	;                      the PCE device interface specification
	;            lcnt   - (by reference) a counter for the result array
	;    Output: RESULT - a new array element result(lcnt) will be
	;                     created for each piece of data received
	;
	N I,J,M,X,IBX
	;
	; -- expand the encounter node
	I $D(PXCA("ENCOUNTER")) S IBX=PXCA("ENCOUNTER") D
	.S X="Checkout Date/Time: "_$$FMTE^XLFDT($P(IBX,"^",14))
	.D NEWLINE(.RESULT,X,.LCNT)
	.S X=$S($P(IBX,"^",15)="P":"Primary ",$P(IBX,"^",15)="S":"Secondary ",1:"")_"Provider: "_$P($G(^VA(200,+$P(IBX,"^",4),0)),"^")
	.D NEWLINE(.RESULT,X,.LCNT)
	.S X=$P(IBX,"^",5) I X'="" S X="Visit Type CPT: "_$P($G(^ICPT(+$G(X),0)),"^")
	.D NEWLINE(.RESULT,X,.LCNT)
	.; add sc,ao,ir,ec,elegibility,credit stop (pieces 6-9,13,17)
	.I $P(IBX,"^",6) D NEWLINE(.RESULT,"Visit for SC Condition",.LCNT)
	.I $P(IBX,"^",7) D NEWLINE(.RESULT,"Visit for Agent Orange Condition",.LCNT)
	.I $P(IBX,"^",8) D NEWLINE(.RESULT,"Visit for Ionizing Radiation Condition",.LCNT)
	.I $P(IBX,"^",9) D NEWLINE(.RESULT,"Visit for Environmental Contaminates Condition",.LCNT)
	.I $P(IBX,"^",13) D NEWLINE(.RESULT,"Eligibility for Visit: "_$P($G(^DIC(8,+$P(IBX,"^",13),0)),"^"),.LCNT)
	.I $P(IBX,"^",17) D NEWLINE(.RESULT,"Additional Credit Stop: "_$P($G(^DIC(40.7,+$P(IBX,"^",17),0)),"^"),.LCNT)
	;
	; -- expand the other nodes
	F M="DIAGNOSIS/PROBLEM","PROVIDER","DIAGNOSIS","PROCEDURE","VITALS","PROBLEM","EXAM","IMMUNIZATION","HEALTH FACTORS","SKIN TEST","PATIENT ED","LOCAL" I $D(PXCA(M)) D
	.S I="" F  S I=$O(PXCA(M,I)) Q:'I  D:M="PROVIDER" PROV S J="" F  S J=$O(PXCA(M,I,J)) Q:'J  D
	..K X S IBX=PXCA(M,I,J) D  D:$D(X) NEWLINE(.RESULT,X,.LCNT)
	...I M="DIAGNOSIS" S X=$S($P(IBX,"^",2)="P":"Primary",$P(IBX,"^",2)="S":"Secondary",1:"")_" Diagnosis: "_$P($G(^ICD9(+$P($G(IBX),"^"),0)),"^")_" - "_$P(IBX,"^",9)_" - "_$P(IBX,"^",8) Q
	...;
	...I M="PROCEDURE" S X=$S($P(IBX,"^",2)="P":"Primary ",$P(IBX,"^",2)="S":"Secondary ",1:"")_"Procedure: "_$P($G(^ICPT(+$P($G(IBX),"^"),0)),"^")_" - "_$P(IBX,"^",7)_" - "_$P(IBX,"^",6) Q
	...;
	...I M="VITALS" S X="Vital Sign: "_$$VTYPE($P(IBX,"^"))_": "_$P(IBX,"^",2) Q
	...;
	...I M="IMMUNIZATION" S X="Immunization: "_$$DSPLYIM^PXAPIIB(+IBX) Q
	...I M="EXAM" S X="Exam: "_$$DSPLYEX^PXAPIIB(+IBX) Q
	...I M="PROBLEM" S X="Problem List: "_$P(IBX,"^") Q
	...I M="HEALTH FACTORS" S X="Health Factor: "_$$DSPLYHF^PXAPIIB(+IBX) Q
	...I M="SKIN TEST" S X="Skin Tests: "_$$DSPLYSK^PXAPIIB(+IBX) Q
	...I M="PATIENT ED" S X="Patient Eduction: "_$$DSPLYED^PXAPIIB(+IBX) Q
	...I M="DIAGNOSIS/PROBLEM" D  S:X="" X="Problem/Diagnosis: unspecified"
	....N Y S X=""
	....S Y=$P(IBX,"^",2) S X=$S(Y="P":"Primary ",Y="S":"Secondary ",1:"")_"PURPOSE OF VISIT"
	....;I $P(IBX,"^",4) S X=X_$S($P(IBX,"^",6)="I":", Inactive",1:", Active")
	....I $P(IBX,"^",13)'="" S X=X_", Narrative: '"_$P(IBX,"^",14)_" "_$P(IBX,"^",13)_"'"
	....I +$P(IBX,"^",3) S X=X_", Clinical Lexicon term: "_$P($G(^GMP(757.01,+$P(IBX,"^",3),0)),"^") ;clinical lexicon term passed
	....I $P(IBX,"^",5) S X=X_", Added to Problem List"
	....I +$P(IBX,"^",4) S X=X_", Patient Active Problem"_$$PROBNAR($P(IBX,"^",4)) ;problem entry passed
	....I +IBX S IBY=$P($G(^ICD9(+IBX,0)),"^") I IBX'[IBY S X=X_", ICD Diagnosis code "_IBY
	....I $P(IBX,"^",9) S X=X_" SC Condition"
	....I $P(IBX,"^",10) S X=X_" AO Condition"
	....I $P(IBX,"^",11) S X=X_" IR Condition"
	....I $P(IBX,"^",12) S X=X_" EC Condition"
	...I M="LOCAL" S X="Local Data Received: "_IBX Q
LSTQ	Q
	;
PROV	; -- expand the additional provider node
	S X=$S($E(IBX,1)="P":"Primary",$E(IBX,1)="S":"Secondary",1:"")_"Provider: "_$P($G(^VA(200,I,0)),"^")_$S($P(IBX,"^",2)=1:"Attending",1:"")
	D NEWLINE(.RESULT,X,.LCNT)
	Q
	;
NEWLINE(RESULT,X,LCNT)	;
	; -- increment count and add new line to results array.
	S LCNT=LCNT+1
	S RESULT(LCNT)=X
	Q
	;
VTYPE(X)	;
	; -- Vital sign type from codes
	S X=$G(X)
	Q $S(X="BP":"Blood Pressure",X="HT":"Height",X="WT":"Weight",X="TMP":"Temperature",X="PU":"Pulse",1:"Other Vital")
	;
PROBNAR(IEN)	; -- display problem narrative
	;
	Q $P($G(^AUTNPOV(+$P($G(^AUPNPROB(+$G(IEN),0)),"^",5),0)),"^")
	;
PROBDIA(IEN)	; -- return problem diagnosis code pointer
	Q +$P($G(^AUPNPROB(+$G(IEN),0)),"^")

IBDFBKR
IBDFBKR	;ALB/AAS - EF utilite, receive and format data for PCE ; OCT 1,1994
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
PCE(IB,PXCA)	;
	; -- Entry point from Broker receiver to parse data and
	;    either send to PCE or store until all pages received
	;
	N %,%H,%I,I,J,X,Y,IBDATA,BUBBLES,HANDPRNT,DYNAMIC,RESULT,NEEDMORE
	S RESULT=1
	;
	; -- Move data from input format to data format
	S RESULT=$$BRKARY(.IB,.IBDATA)
	;
	; -- check for valid data
	S RESULT=$$VALIDD(.IBDATA) I RESULT>3 G PCEQ
	;
	; -- mark the page as having been received
	; -- change to use silent fm call??
	D NOW^%DTC N IBSCNDT S IBSCNDT=%
	; -- remove hard set and replace w/ DIE call
	;S $P(^IBD(357.96,IBDATA("FORMID"),9,+$O(^IBD(357.96,IBDATA("FORMID"),9,"B",+IBDATA("PAGE"),0)),0),"^",2)=%
	S DIE="^IBD(357.96,"_IBDATA("FORMID")_",9,",DA(1)=IBDATA("FORMID"),DA=$O(^IBD(357.96,IBDATA("FORMID"),9,"B",+IBDATA("PAGE"),0)),DR=".02////^S X=IBSCNDT"
	L +^IBD(357.96,IBDATA("FORMID")):2 D ^DIE L -^IBD(357.96,IBDATA("FORMID")) K DIE,DA,DR
	;
	; -- check to see if all the pages have been received
	S NEEDMORE=$$NEEDMOR(.IBDATA)
	;
	I NEEDMORE D
	.S RESULT=6
	.S I=0 F  S I=$O(IBDF(I)) Q:'I  D FILAD(IBDF(I))
	.N SUCCESS S SUCCESS=$$FSCND^IBDF18C(IBDATA("FORMID"),11)
	;
	I 'NEEDMORE D
	.N SUCCESS S SUCCESS=$$FSCND^IBDF18C(IBDATA("FORMID"),2)
	.S RESULT=7
	.S I=0 F  S I=$O(IBDF(I)) Q:'I  D ARYAD(IBDF(I))
	.;
	.; -- add to the arrays data from other pages stored in form tracking
	.S I=0
	.F  S I=$O(^IBD(357.96,IBDATA("FORMID"),10,I)) Q:'I  D ARYAD($G(^IBD(357.96,IBDATA("FORMID"),10,I,0)))
	.;
	.; -- don't need the raw data kept in form tracking anymore
	.; -- maybe we do for formtracking???
	.;K ^IBD(357.96,IBDATA("FORMID"),10)
	.;
	.I $$SEND^IBDF18E(IBDATA("FORMID"),"","",.BUBBLES,.HANDPRNT,"",.PXCA,.DYNAMIC)
	.S RESULT=8
	.;S RESULT=$S($G(PXCASTAT)=1:8,$G(PXCASTAT)=0:9,1:10)
	.Q
	;
PCEQ	Q +RESULT_"^"_$P($T(RESULT+RESULT),";;",2)
	;
FILAD(REC)	;
	; -- adds the data to the FORM TRACKING file
	; -- awaiting all of the pages to be sent
	;    REC is the line of raw data, as received
	; -- may change to FM call???
	;N CNT
	Q:REC=""
	; -- remove hard sets and replace with FM call
	;S CNT=+$P($G(^IBD(357.96,IBDATA("FORMID"),10,0)),"^",3)
	;F  S CNT=CNT+1 Q:'$D(^IBD(357.96,IBDATA("FORMID"),10,CNT))
	;S ^IBD(357.96,IBDATA("FORMID"),10,CNT,0)=REC
	;S ^IBD(357.96,IBDATA("FORMID"),10,0)=$P($G(^IBD(357.96,IBDATA("FORMID"),10,0)),1,2)_"^"_CNT_"^"_CNT
	;S ^IBD(357.96,IBDATA("FORMID"),10,"B",$E(REC,1,30),CNT)=""
	S DIC="^IBD(357.96,"_IBDATA("FORMID")_",10,",DIC(0)="L",DIC("P")=$P(^DD(357.96,10,0),"^",2),DA(1)=IBDATA("FORMID"),X=REC,DLAYGO=357.96
	K DD,DO D FILE^DICN K DIC,DA,DLAYGO,DD,DO
	Q
	;
ARYAD(DATA)	;
	; -- Input DATA
	; -- DATA format B=bubble or
	;                H=handprint>:<ien of form element in the form
	;                  definition table>:<value entered
	;                D=dynamic bubble>:<field identifier>:<number of choice>
	; -- Output Bubbles,Dynamic, or Handprint Array.
	;
	I $E(DATA,1)="""",$E(DATA,$L(DATA))="""" S DATA=$P(DATA,"""",2)
	I $P(DATA,":")="B" S BUBBLES($P(DATA,":",2))=""
	I $P(DATA,":")="D" S DYNAMIC($P(DATA,":",2),$P(DATA,":",3))=""
	I $P(DATA,":")="H" S HANDPRNT($P(DATA,":",2))=$P(DATA,":",3,10)
	Q
	;
BRKARY(IB,IBDATA)	;
	; -- break array of data into known parts
	; -- Input  IB(array) contains raw data from receiver
	;           IBDATA(array) called by reference
	; -- Output IBDATA(array) of new formated data
	;           result message indicator
	;
	N I,X,CNT
	S (I,CNT)=0
	F  S I=$O(IBDF(I)) Q:'I!(CNT>3)  D
	.I $P(IB(I),"=")="FORMTYPE" S IBDATA("FORMTYPE")=+$P(IBDF(I),"=",2),CNT=CNT+1 K IBDF(I) Q
	.I $P(IB(I),"=")="FORMID" S IBDATA("FORMID")=+$P(IBDF(I),"=",2),CNT=CNT+1 K IBDF(I) Q
	.I $P(IB(I),"=")="PAGE" S IBDATA("PAGE")=+$P(IBDF(I),"=",2),CNT=CNT+1 K IBDF(I) Q
	.I $P(IB(I),"=")="DATA" S CNT=CNT+1 K IBDF(I) Q  ; shouldn't contain data
BRKQ	Q 2
	;
VALIDD(IBDATA)	;
	; -- Determine if data contains Formtype, FormID, and Page
	; -- Does form ID and form type match entry in Form Tracking
	; -- is the form supposed to have this page?
	; -- Input  IBDATA(array)
	; -- Output result message indicator (3=valid, 4=invalid, 5=already recvd)
	;
	N X S X=4 D
	.I '$G(IBDATA("FORMTYPE")) Q
	.I '$G(IBDATA("FORMID")) Q
	.I '$G(IBDATA("PAGE")) Q
	.;
	.I $G(^IBD(357.96,+IBDATA("FORMID"),0))="" Q
	.I $P($G(^IBD(357.96,+IBDATA("FORMID"),0)),"^",4)'=IBDATA("FORMTYPE") Q
	.;
	.I '$O(^IBD(357.96,IBDATA("FORMID"),9,"B",IBDATA("PAGE"),0)) Q
	.;
	.; -- if pce returned an error then all pages flagged as not received
	.I $P(^IBD(357.96,IBDATA("FORMID"),9,+$O(^IBD(357.96,IBDATA("FORMID"),9,"B",IBDATA("PAGE"),0)),0),"^",2) S X=5 Q
	.S X=3
VQ	Q X
	;
NEEDMOR(IBDATA)	;
	; -- check to see if all the pages have been received
	N I,X
	S (I,X)=0
	F  S I=$O(^IBD(357.96,IBDATA("FORMID"),9,I)) Q:'I  D
	.I $G(^IBD(357.96,IBDATA("FORMID"),9,I,0)),'$P(^(0),"^",2) S X=1 Q
	.Q
NMQ	Q X
	;
RESULT	;;
	;;Beginning to Format Data for PCE
	;;Data Accepted, Beginning Validity Check
	;;Valid Form Identity Received
	;;Form ID Validity Rejected
	;;Data from Page already Received
	;;Waiting for more pages to be recognized
	;;Formatting data for PCE
	;;Data Sent to PCE
	;;Data Rejected by PCE
	;;Unknown result in sending data to PCE

IBDFC
IBDFC	;ALB/CJM - ENCOUNTER FORM - CONVERSION UTILTY ;FEB 30,1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
FORMLIST	;
	N IBDEVICE
	N IBFASTXT ;set to 1 for fast exit from system
	S IBFASTXT=0
	D DEVICE^IBDFUA(1,.IBDEVICE)
	K XQORS,VALMEVL
	D VALMSG
	D EN^VALM("IBDFC CONVERSION UTILITY")
	Q
ONENTRY	;
	S VALMCNT=0 K @VALMAR
	Q
ONEXIT	;
	D KILL^%ZISS
	K ^TMP("IB",$J),^TMP("IBDF",$J),VALMY,IBQUIT,VALMBCK,X,Y,I,DA,D0
	Q
	;
HDR	;
	S VALMHDR(1)="             ***  LIST OF FORMS TO CONVERT FOR SCANNING  ***"
	I $O(^IBD(359,0)) S VALMHDR(2)=" Converted Forms Exist, Use'View Conversion Log' to view converted forms"
	Q
REMOVE	;allows user to select a form, then deletes it
	N SEL,FORM,LAST
	K DIR
	D EN^VALM2($G(XQORNOD(0)),"S")
	S SEL=$O(VALMY(""))
	I SEL K @VALMAR@(SEL),@VALMAR@("IDX",SEL)
	;fill in the hole with the last form on the list
	S LAST=$S(VALMCNT<2:0,SEL=VALMCNT:0,1:VALMCNT)
	I LAST D
	.S FORM=@VALMAR@("IDX",LAST,LAST)
	.K @VALMAR@(LAST),@VALMAR@("IDX",LAST)
	.S VALMCNT=VALMCNT-1
	.D DISPLAY(SEL,FORM)
	S VALMCNT=VALMCNT-1
	D VALMSG
	S VALMBCK="R"
	Q
	;
ADDONE	;adds a single form to the list for conversion
	N FORM,NODE,CNV,CNVNM,PREV,IBQUIT
	S NODE="",IBQUIT=0
	S VALMBCK="R"
	S FORM=$$SLCTFORM^IBDFU4("",.NODE) Q:'FORM
	I $P(NODE,"^",17)>2 W !,"This form is already a version 2.1 form!" D PAUSE^IBDFU5,VALMSG Q
	;
	; -- see if form already converted
	S CNV=0 F  S CNV=$O(^IBD(359,"AORIG",FORM,CNV)) Q:'CNV  D
	.S PREV=+$G(^IBD(359,CNV,0))
	.I PREV W !,"This form previously converted, new form name = "_$P($G(^IBE(357,PREV,0)),"^") S IBQUIT=1
	I $O(^IBE(357,"B","CNV."_$E($P(NODE,"^"),1,41),0)) W !!,"Form Name "_"CNV."_$E($P(NODE,"^"),1,41)_" already exists.  Form must be renamed first!" D PAUSE^IBDFU5 Q
	D VALMSG
	I IBQUIT D PAUSE^IBDFU5
	;
	D DISPLAY(VALMCNT+1,FORM)
	D VALMSG
	Q
	;
DISPLAY(IDX,FORM)	;
	N NODE
	S NODE=$G(^IBE(357,FORM,0)) Q:NODE=""
	S VALMCNT=VALMCNT+1
	S @VALMAR@(IDX,0)=$J(IDX,3)_"  "_$$PADRIGHT^IBDFU($P(NODE,"^"),30)_"  "_$E($P(NODE,"^",3),1,80),@VALMAR@("IDX",IDX,IDX)=FORM D FLDCTRL^VALM10(IDX)
	Q
	;
CNVTLIST	;
	N IBFORM,IDX,QUIT,PRINT,DIR,DIRUT,DUOUT,DTOUT
	S (QUIT,PRINT)=0
	S VALMBCK="R"
	D FULL^VALM1
	;
	I $O(@VALMAR@("IDX",0))="" W !!,"No forms on List to convert!"  D PAUSE^IBDFU5,VALMSG Q
	;
	W !!,"Each form on the list will be made scannable.  However, the results should be",!,"carefully reviewed before putting the form into use.",!
	K DIR S DIR(0)="Y",DIR("A")="Do you want to print the form(s) after they have been converted",DIR("B")="YES"
	D ^DIR Q:(Y<0)!($D(DIRUT))  K DIR I Y=1 D  Q:QUIT
	.S PRINT=1
	.D DEVICE
	;
	S IBDASK("ADDOTHER")=$$ASKOTH^IBDFC2B Q:IBDASK("ADDOTHER")<0
	S IBDASK("AUTOCHG")=$$ASKAUTO^IBDFC2B Q:IBDASK("AUTOCHG")<0
	;
	S IDX=0 F  S IDX=$O(@VALMAR@("IDX",IDX)) Q:'IDX  S IBFORM=$G(@VALMAR@("IDX",IDX,IDX)) Q:'IDX  S IBFORM=$$CONVERT^IBDFC2(IBFORM) D:PRINT QUEUE
	I PRINT D ^%ZISC
	K @VALMAR
	D VALMSG
	Q
	;
DEVICE	;
	W !,"** You must queue the form to print. **"
	W !,*7,"** Forms require 132 columns and a page length of 80 lines. **",!
	;
	;queuing is automatic - the device is not opened
	K %IS,%ZIS,IOP S %ZIS="N0Q",%ZIS("A")="Printer to queue to: ",%ZIS("B")="",%ZIS("S")="I $E($P($G(^%ZIS(2,+$G(^%ZIS(1,Y,""SUBTYPE"")),0)),U),1,2)=""P-""" D ^%ZIS
	I POP S QUIT=1
	Q
	;
QUEUE	S ZTRTN="PRINT^IBDFC",ZTSAVE("IBFORM")="",ZTDESC="ENCOUNTER FORM - FROM CONVERSION",ZTDTH=$H D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled")
	Q
	;
PRINT	;
	D FORM^IBDF2A(IBFORM,0)
	Q
	;
VALMSG	;
	I $O(^IBD(359,0)) S VALMSG="Use 'View Conversion Log' to view converted forms."
	I '$O(^IBD(359,0)) S VALMSG="Use 'Add Form to List' to convert a form"
	Q
	;
HELP	;
	D FULL^VALM1
	W !!,"To convert a form follow the following steps:"
	W !,"   1.  Use 'Add Form to List' to select the form.   Add all the forms to"
	W !,"       the list you wish to at this time."
	W !,"   2.  Use 'Convert List' to convert the forms."
	W !,"   3.  Use 'View Conversion Log' to review the conversion process and "
	W !,"       assign the converted form to a clinic.",!
	W !,"Hint:  The conversion creates a new copy of your form with the same name"
	W !,"       as the original but prefixed with 'CNV.'.  (i.e. form PRIM CARE"
	W !,"        would be renamed CNV.PRIM CARE)"
	S X="?" D DISP^XQORM1 W !

IBDFC1
IBDFC1	;ALB/CJM - ENCOUNTER FORM - CONVERTED FORMS LIST ;MAR 3, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
LIST	;
	N IBCLINIC,IBTKFORM,IBTKBLK,IBAPI
	S (IBTKFORM,IBTKBLK,IBCLINIC)=""
	S IBAPI("INDEX")="D IDXFORMS^IBDFC1"
	S IBAPI("SELECT")="D SELECT^IBDFC1"
	D EN^VALM("IBDFC CONVERSION LOG")
	D VALMSG^IBDFC
	S VALMBCK="R"
	Q
	;
ONENTRY	;
	D IDXFORMS
	Q
ONEXIT	;
	K ^TMP("IBDF",$J,"CONVERTED FORMS")
	Q
	;
HDR	;
	S VALMHDR(1)="           *** LOG OF FORMS THAT HAVE BEEN CONVERTED FOR SCANNING ***"
	Q
	;
IDXFORMS	;build a list of converted forms
	N IEN
	K @VALMAR
	S VALMCNT=0
	S IEN=0 F  S IEN=$O(^IBD(359,IEN)) Q:'IEN  D ENTRY
	Q
	;
ENTRY	;adds an entry to the array
	N NODE,FORM,WARNING,REPLACED
	S NODE=$G(^IBD(359,IEN,0))
	Q:NODE=""
	S FORM=+NODE
	S VALMCNT=VALMCNT+1
	S WARNING=$S($O(^IBD(359,IEN,1,0)):"YES",1:"NO ")
	S REPLACED=$S($P(NODE,"^",5):"YES",1:"NO ")
	S @VALMAR@(VALMCNT,0)=$J(VALMCNT,3)_"  "_$$LJ^XLFSTR($P(NODE,"^",3),30)_"  "_$$LJ^XLFSTR($$FMTE^XLFDT($P(NODE,"^",4),"2D"),10)_"  "_$$CJ^XLFSTR(WARNING,8)_"    "_$$CJ^XLFSTR(REPLACED,18)
	D FLDCTRL^VALM10(VALMCNT) ;set video for ID column
	I WARNING="YES" D CNTRL^VALM10(VALMCNT,52,3,IOINHI,IOINORM,0)
	I REPLACED="NO " D CNTRL^VALM10(VALMCNT,69,2,IOINHI,IOINORM,0)
	S @VALMAR@("IDX",VALMCNT,VALMCNT)=FORM_"^"_IEN
	Q
	;
SELECT	;returns IBFORM,IBCNVRT
	N SEL
	K DIR
	D EN^VALM2(XQORNOD(0),"S")
	S SEL=$O(VALMY(""))
	S IBFORM=$S('SEL:"",1:+$G(@VALMAR@("IDX",SEL,SEL)))
	S IBCNVRT=$S('SEL:"",1:$P($G(@VALMAR@("IDX",SEL,SEL)),"^",2))
	Q
	;
WARNINGS	;displays conversion warnings
	N IBFORM,IBARY,IBHDRRTN,IBCNVRT
	D SELECT
	Q:'IBCNVRT
	S IBARY="^IBD(359,"_IBCNVRT_",1)"
	S IBHDRRTN="D WARNHDR^IBDFC1"
	D EN^VALM("IBDE TEXT DISPLAY")
	S VALMBCK="R"
	Q
WARNHDR	;
	S VALMHDR(1)="          *** Conversion Warnings For "_$P($G(^IBD(359,IBCNVRT,0)),"^",3)_" ***"
	Q
	;
DELFORM	;used to delete forms from other places than the clinic setup screen
	N CLINIC,IBFORM,IBCNVRT,BLOCK,NOCANDO,SETUP,ARY
	S NOCANDO=0,ARY="^TMP(""IBDF"",$J,""TEMPORARY CLINIC LIST"")"
	K @ARY
	S VALMBCK="R"
	X IBAPI("SELECT")
	Q:'IBFORM
	D CLINICS^IBDFU4(IBFORM,ARY)
	I $G(@ARY@(0)) D
	.W !,"Cannot be deleted, the form is in use!"
	.D LIST^IBDFU4(ARY,IOSL)
	I '$G(@ARY@(0)) D
	.D DELETE^IBDFU2C(.IBFORM,357,1)
	.I '$G(IBFORM) D
	..K DIK,DA S DIK="^IBD(359,",DA=IBCNVRT D ^DIK K DIK,DA
	..D IDXFORMS
	K @ARY
	Q
	;
PURGE	;purge the conversion log
	N SDATE,IBCNVRT,NODE
	S VALMBCK="R"
	W !,"What is the last dated entry in the conversion log that should be deleted?"
	K DIR S DIR(0)="D"
	S DIR("B")=$$FMTE^XLFDT($$FMADD^XLFDT(DT,-25))
	D ^DIR
	I '$D(DIRUT),Y>0,Y'>DT S SDATE=Y D
	.K DIK S DIK="^IBD(359,"
	.S IBCNVRT=0 F  S IBCNVRT=$O(^IBD(359,IBCNVRT)) Q:'IBCNVRT  S NODE=$G(^IBD(359,IBCNVRT,0)) I $P(NODE,"^",4),$P(NODE,"^",4)'>SDATE S DA=IBCNVRT D ^DIK
	.D IDXFORMS
	K DIK,Y,DIR,DA,X
	Q

IBDFC2
IBDFC2	;ALB/CJM - ENCOUNTER FORM - converts a form for scanning ;MAR 3, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
CONVERT(OLDFORM)	;
	N IBCNVRT,IBFORM,IBDASK
	S (IBCNVRT,IBFORM)=""
	S IBCNVRT("BLOCK OFFSET")=0
	;S IBDASK("ADDOTHER")=$$ASKOTH^IBDFC2B G:IBDASK("ADDOTHER")<0 CONVQ
	;S IBDASK("AUTOCHG")=$$ASKAUTO^IBDFC2B G:IBDASK("AUTOCHG")<0 CONVQ
	D COPYFORM(OLDFORM,.IBFORM,.IBCNVRT)
	G:('IBFORM)!('IBCNVRT) CONVQ
	D FILE357
	G:'$$FORMDSCR^IBDFU1C(.IBFORM) CONVQ
	D BLOCKS
	D COMPILE^IBDF19
	D PAGEINFO
	;
CONVQ	Q IBFORM
	;
PAGEINFO	;determines what pages must be scanned
	N PG,FORMTYPE,LN,TOP,BOT,IEN,NODE
	S FORMTYPE=$P($G(^IBE(357,IBFORM,0)),"^",13) Q:'FORMTYPE
	F PG=1:1:IBFORM("PAGES") D
	.S TOP=(PG-1)*IBFORM("PAGE_HT"),BOT=TOP+IBFORM("PAGE_HT")
	.S LN=$O(^IBD(357.95,FORMTYPE,1,"B",TOP-1))
	.I 'LN!(LN>BOT) S LN=$O(^IBD(357.95,FORMTYPE,2,"B",TOP-1)) Q:'LN!(LN>BOT)
	.;the page should be in file 357
	.S IEN=$O(^IBE(357,IBFORM,2,"B",PG,0)) I 'IEN D
	..S NODE=$G(^IBE(357,IBFORM,2,0))
	..F IEN=+$P(NODE,"^",3)+1:1:1 Q:'$D(^IBE(357,IBFORM,2,IEN))
	..S $P(^IBE(357,IBFORM,2,IEN,0),"^")=PG
	..S ^IBE(357,IBFORM,2,"B",PG,IEN)=""
	..S $P(NODE,"^",2)=357.01,$P(NODE,"^",4)=$P(NODE,"^",4)+1,$P(NODE,"^",3)=IEN,^IBE(357,IBFORM,2,0)=NODE
	.S $P(^IBE(357,IBFORM,2,IEN,0),"^",2)=1
	.;
	.;the page should also be in file 357.95 (form definition)
	.S IEN=$O(^IBD(357.95,FORMTYPE,3,"B",PG,0)) I 'IEN D
	..S NODE=$G(^IBD(357.95,FORMTYPE,3,0))
	..F IEN=+$P(NODE,"^",3)+1:1:1 Q:'$D(^IBD(357.95,FORMTYPE,3,IEN))
	..S $P(^IBD(357.95,FORMTYPE,3,IEN,0),"^")=PG
	..S ^IBD(357.95,FORMTYPE,3,"B",PG,IEN)=""
	..S $P(NODE,"^",2)=357.953,$P(NODE,"^",4)=$P(NODE,"^",4)+1,$P(NODE,"^",3)=IEN,^IBD(357.95,FORMTYPE,3,0)=NODE
	.S $P(^IBD(357.95,FORMTYPE,3,IEN,0),"^",2)=1
	Q
	;
FILE357	;
	N NODE,FIELD,LENGTH
	S NODE=$G(^IBE(357,IBFORM,0))
	;check right margin
	S FIELD=$P(NODE,"^",9) I FIELD'=133 S $P(NODE,"^",9)=133 D:FIELD'=132 WARNING("RIGHT MARGIN CHANGED TO 133 FROM "_FIELD)
	S (LENGTH,FIELD)=$P(NODE,"^",10) I FIELD'=80 D WARNING("PAGE LENGTH CHANGED TO 80 FROM "_LENGTH) D
	.S $P(NODE,"^",10)=80
	.I LENGTH<80 S IBCNVRT("BLOCK OFFSET")=80-LENGTH
	.I LENGTH>80 S FIELD=$P(NODE,"^",11),LENGTH=(LENGTH*FIELD)+79,LENGTH=LENGTH\80 I LENGTH'=FIELD D WARNING("THE NUMBER OF PAGES CHANGED TO "_LENGTH_" FROM "_FIELD) S $P(NODE,"^",11)=LENGTH
	S $P(NODE,"^",6)=1
	S $P(NODE,"^",12)=1
	S $P(NODE,"^",14)=1
	S $P(NODE,"^",15)="p"
	S $P(NODE,"^",16)=1
	S $P(NODE,"^",17)=+$G(^DD(357,0,"VR")) S:$P(NODE,"^",17)<2.1 $P(NODE,"^",17)=2.1
	S ^IBE(357,IBFORM,0)=NODE
	Q
COPYFORM(OLDFORM,NEWFORM,IBCNVRT)	;
	;copies OLDFORM->NEWFORM and creates an entry in file 359=IBCNVRT
	N NEWNAME,OLDNAME
	S OLDNAME=$P($G(^IBE(357,OLDFORM,0)),"^")
	S NEWNAME="CNV."_$E(OLDNAME,1,41)
	S NEWFORM=$$COPYFORM^IBDFU2C(OLDFORM,357,357,NEWNAME,0)
	S IBCNVRT=$$ADDTO359(NEWFORM,OLDFORM,OLDNAME)
	Q
	;
ADDTO359(NEWFORM,OLDFORM,OLDNAME)	;
	;create an entry in file 359, Converted Forms
	N IBCNVRT,DIC
	K DIC,DO,DA,DINUM
	S DIC="^IBD(359,",X=NEWFORM,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA,DINUM
	S IBCNVRT=+Y
	Q:IBCNVRT<0 0
	S NODE=NEWFORM_"^"_OLDFORM_"^"_OLDNAME_"^"_DT
	S ^IBD(359,IBCNVRT,0)=NODE
	S ^IBD(359,IBCNVRT,1,0)="^^0^0^^"
	S DIK="^IBD(359,",DA=IBCNVRT D IX1^DIK
	Q IBCNVRT
	;
WARNING(WARNING)	;
	;adds the warning to file 359, entry=IBCNVRT
	N CNT,NUM,NODE
	S NODE=$G(^IBD(359,IBCNVRT,1,0))
	S CNT=$P(NODE,"^",4),NUM=$P(NODE,"^",3)
	S CNT=CNT+1,NUM=NUM+1
	S WARNING(1)=NUM_") "_$E(WARNING,1,77-$L(CNT))
	S WARNING(2)=$E(WARNING,77-$L(CNT),245)
	I WARNING(2)]"" S WARNING(1)=WARNING(1)_"-",WARNING(2)="    "_WARNING(2)
	S ^IBD(359,IBCNVRT,1,CNT,0)=WARNING(1)
	I WARNING(2)]"" S CNT=CNT+1,^IBD(359,IBCNVRT,1,CNT,0)=WARNING(2)
	S $P(NODE,"^",4)=CNT,$P(NODE,"^",3)=NUM,^IBD(359,IBCNVRT,1,0)=NODE
	Q
	;
BLOCKS	;loops through the blocks
	N IBBLK,NODE,PAGE,IBLIST
	S IBBLK=0 F  S IBBLK=$O(^IBE(357.1,"C",IBFORM,IBBLK)) Q:'IBBLK  D
	.Q:$$BLKDESCR^IBDFU1B(.IBBLK)
	.I IBBLK("NAME")="FORM NUMBER" D DLTBLK^IBDFU3(IBBLK,IBFORM,357.1) Q
	.D UNCMPBLK^IBDF19(IBBLK)
	.S NODE=$G(^IBE(357.1,IBBLK,0))
	.;
	.;if the page is bigger, shift the blocks down
	.I IBCNVRT("BLOCK OFFSET") D
	..N Y
	..S Y=IBBLK("Y")+(IBCNVRT("BLOCK OFFSET")*IBBLK("PAGE"))
	..S PAGE=1+(Y\IBFORM("PAGE_HT"))
	..Q:PAGE'>1
	..S Y=IBBLK("Y")+(IBCNVRT("BLOCK OFFSET")*(PAGE-1))
	..S PAGE=1+(Y\IBFORM("PAGE_HT"))
	..S $P(NODE,"^",4)=Y,IBBLK("Y")=Y,IBBLK("PAGE")=PAGE
	.;
	.;does the block overlap page boundry?
	.S PAGE=1+((IBBLK("Y")+IBBLK("H")-1)\IBFORM("PAGE_HT"))
	.I PAGE'=IBBLK("PAGE") D WARNING("THE BLOCK '"_IBBLK("NAME")_"' OVERLAPS PAGE BOUNDRIES")
	.;
	.I IBBLK("X")+IBBLK("W")>133 D WARNING("THE BLOCK '"_IBBLK("NAME")_"' EXTENDS PAST THE RIGHT MARGIN")
	.;
	.;use reverse printing for block headers - it's new and looks good
	.I IBBLK("BOX")=1,IBBLK("HDR")'="",IBBLK("HDISP")["U",IBBLK("HDISP")["C",IBBLK("HDISP")'["R" S $P(NODE,"^",12)="RC"
	.
	.S ^IBE(357.1,IBBLK,0)=NODE
	.K NODE,PAGE,Y
	.;
	.;handle the selection lists
	.S IBLIST=0 F  S IBLIST=$O(^IBE(357.2,"C",IBBLK,IBLIST)) Q:'IBLIST  D
	..Q:$$LSTDESCR^IBDFU1(.IBLIST)
	..I $G(IBDASK("ADDOHTER")) D ADDOTHER^IBDFC2B
	..D CHKVISIT^IBDFC2B
	..D BUBBLES^IBDFC2A(.IBLIST)
	..Q:$$LSTDESCR^IBDFU1(.IBLIST)
	..D CKVALUES^IBDFC2B
	Q

IBDFC2A
IBDFC2A	;ALB/CJM - ENCOUNTER FORM - converts a form for scanning (cont'd);MAR 3, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
BUBBLES(LIST)	;changes the marking areas to bubbles
	;no conversion if there is no input interface for the data
	;pass LIST array by reference
	Q:'LIST("INPUT_RTN")
	;
	N SC,SCORDER,LARGEST,SZCHANGE,NODE,CNT,BUBBLE
	S (SZCHANGE,LARGEST)=0
	;
	;find the marking area used for bubbles
	S BUBBLE=$O(^IBE(357.91,"B","BUBBLE (use for scanning)",0)) Q:'BUBBLE
	;
	;make two lists of the subcolumns, one indexed by ien and the other by the order - also, keep track of the largest subcolumn - adjustments may have to be made to it
	S SC=0 F  S SC=$O(^IBE(357.2,LIST,2,SC)) Q:'SC  S SC(SC)=$G(^IBE(357.2,LIST,2,SC,0)),SCORDER(+SC(SC))=SC I $P(SC(SC),"^",4)=1,$P(SC(SC),"^",3)>+LARGEST S LARGEST=$P(SC(SC),"^",3)_"^"_SC
	;
	;look for the marking area subcolumns
	S SC=0 F  S SC=$O(SC(SC)) Q:'SC  I $P(SC(SC),"^",4)=2,$P(SC(SC),"^",6)'=BUBBLE,$P(SC(SC),"^",6) D
	.;
	.;don't underline the marking area
	.S $P(SC(SC),"^",8)=1
	.;
	.N MARK
	.S MARK=$P($G(^IBE(357.91,$P(SC(SC),"^",6),0)),"^",2)
	.Q:MARK=""
	.I (MARK="(A) (I)")!(MARK="(A) (I) (H)")!(MARK="(P) (S)") D
	..;break this subcolumn in two
	..N QUAL1,QUAL2,HDR1,HDR2
	..I MARK["A" D
	...S QUAL1=$O(^IBD(357.98,"B","ACTIVE",0)),QUAL2=$O(^IBD(357.98,"B","INACTIVE",0)),HDR1="A",HDR2="I"
	..E  D
	...S QUAL1=$O(^IBD(357.98,"B","PRIMARY",0)),QUAL2=$O(^IBD(357.98,"B","SECONDARY",0)),HDR1="P",HDR2="S"
	..F CNT=1:1 I '$D(^IBE(357.2,LIST,2,CNT)) Q
	..;create a new subcolumn
	..S NODE=SC(SC),$P(NODE,"^")=+SC(SC)+.5,$P(NODE,"^",2)=HDR2,$P(NODE,"^",9)=QUAL2,$P(NODE,"^",6)=BUBBLE,^IBE(357.2,LIST,2,CNT,0)=NODE,$P(^IBE(357.2,LIST,2,0),"^",4)=$P(^IBE(357.2,LIST,2,0),"^",4)+1,SC(CNT)=NODE,SCORDER(+NODE)=CNT
	..;change the original subcolumn
	..S NODE=SC(SC),$P(NODE,"^",2)=HDR1,$P(NODE,"^",9)=QUAL1,$P(NODE,"^",6)=BUBBLE,^IBE(357.2,LIST,2,SC,0)=NODE
	..;
	..;may have to make an adjustment
	..S SZCHANGE=SZCHANGE+($L(LIST("SEP"))-1)
	.;
	.;just change the marking area to bubble
	.E  D
	..S $P(^IBE(357.2,LIST,2,SC,0),"^",6)=BUBBLE
	..S SZCHANGE=SZCHANGE+(3-$L(MARK))
	..;
	;
	;adjust subcolumn size to make up for extra space required by bubbles - may truncate text
	I SZCHANGE D
	.N SLCTN,SUBCOL,ORDER,IEN,NEWSIZE,TEXT
	.S SUBCOL=$P(LARGEST,"^",2)
	.S NEWSIZE=$P(SC(SUBCOL),"^",3)-SZCHANGE
	.S $P(SC(SUBCOL),"^",3)=NEWSIZE,^IBE(357.2,LIST,2,SUBCOL,0)=SC(SUBCOL)
	.S ORDER=+SC(SUBCOL)
	.S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"C",LIST,SLCTN)) Q:'SLCTN  S IEN=$O(^IBE(357.3,SLCTN,1,"B",ORDER,0)) Q:'IEN  D
	..S TEXT=$P($G(^IBE(357.3,SLCTN,1,IEN,0)),"^",2)
	..I $L(TEXT)>NEWSIZE D WARNING^IBDFC2("IN THE LIST '"_LIST("NAME")_"' THE TEXT '"_TEXT_"' WILL BE TRUNCATED BY "_($L(TEXT)-NEWSIZE)_" CHARACTERS - MANUAL EDITING MAY BE REQUIRED")
	;
	;reorder the subcolumns
	S (CNT,SCORDER)=0
	F  S SCORDER=$O(SCORDER(SCORDER)) Q:'SCORDER  S CNT=CNT+1 I SCORDER'=CNT D
	.K ^IBE(357.2,LIST,2,"B",SCORDER,SCORDER(SCORDER))
	.S $P(^IBE(357.2,LIST,2,SCORDER(SCORDER),0),"^")=CNT,^IBE(357.2,LIST,2,"B",CNT,SCORDER(SCORDER))=""
	.;make the change in the selection due to the reordering of the subcolumns
	.I $P(SC(SCORDER(SCORDER)),"^",4)=1 D SWITCH^IBDF9A(LIST,SCORDER,CNT)
	Q

IBDFC2B
IBDFC2B	;ALB/CJM - ENCOUNTER FORM - converts a form for scanning ;MAR 3, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
ADDOTHER	;add space to the list to write in other
	N NODE
	S NODE=$G(^IBE(357.2,IBLIST,0))
	I NODE]"",$P(NODE,"^",16)="" S $P(NODE,"^",16)=1,$P(NODE,"^",17)=3,$P(NODE,"^",18)=2 S ^IBE(357.2,IBLIST,0)=NODE
	Q
	;
CKVALUES	;make sure the internal value to be passed matches the value displayed and is an active code
	;
	Q:'IBLIST("INPUT_RTN")
	N SUBCOL,I,SLCTN,IEN,TEXT,CODE,NODE
	;
	;find the subcolumn with the code
	S SUBCOL=0 F I=1:1:8 I $G(IBLIST("SCPIECE",I))=1,$G(IBLIST("SCTYPE",I))=1 S SUBCOL=I
	;
	;check that the display of the code matches its id and that it's active
	S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"C",IBLIST,SLCTN)) Q:'SLCTN  D
	.S NODE=$G(^IBE(357.3,SLCTN,0))
	.;
	.;check if place holder
	.Q:$P(NODE,"^",2)
	.;
	.S CODE=$P(NODE,"^")
	.Q:CODE=""
	.;
	.;check for inactive codes
	.I '$$CKACTIVE(CODE,IBLIST("RTN")) D
	..S TEXT=$$DISPLAY(SLCTN)
	..D WARNING^IBDFC2("IN THE SELECTION LIST '"_IBLIST("NAME")_"' THE ENTRY="_TEXT_" IS AN INACTIVE CODE")
	.;
	.;check for displayed codes that don't match their id stored on piece 1
	.Q:'SUBCOL
	.S IEN=$O(^IBE(357.3,SLCTN,1,"B",SUBCOL,0))
	.Q:'IEN
	.S TEXT=$P($G(^IBE(357.3,SLCTN,1,IEN,0)),"^",2)
	.Q:'$L(TEXT)
	.I CODE'=TEXT D
	..; -- codes doesn't match text and autochange= yes
	..I $G(IBDASK("AUTOCHG")),$$CKACTIVE(TEXT,IBLIST("RTN")) D  Q
	...; use fm to update data and x-refs S $P(^IBE(357.3,SLCTN,0),"^")=TEXT
	...S DIE=357.3,DR=".01////^S X=TEXT",DA=SLCTN D ^DIE
	...D WARNING^IBDFC2("In the Selection List '"_IBLIST("NAME")_"' the Code="_CODE_" was automatically update to match the text="_TEXT)
	...Q
	..D WARNING^IBDFC2("IN THE SELECTION LIST '"_IBLIST("NAME")_"' THE CODE="_TEXT_" IS DISPLAYED BUT THE CODE="_CODE_" WILL BE TRANSMITTED") Q
	Q
	;
CHKVISIT	;should the selection list use the new Package Interface for Type of Visit?
	;
	I ($$UP^XLFSTR(IBLIST("NAME"))["VISIT")!($$UP^XLFSTR(IBBLK("NAME"))["VISIT"),IBLIST("RTN") I $P($G(^IBE(357.6,IBLIST("RTN"),0)),"^")["SELECT CPT PROCEDURE" D
	.N SLCTN,CODE,PI,CHANGE
	.S PI=$O(^IBE(357.6,"B","DG SELECT VISIT TYPE CPT PROCE",0))
	.Q:'PI
	.S CHANGE=1,SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"C",IBLIST,SLCTN)) Q:'SLCTN  S CODE=$P($G(^IBE(357.3,SLCTN,0)),"^") I CODE I '$D(^IBE(357.69,CODE,0)) S CHANGE=0 Q
	.;change the list to visit type
	.I CHANGE D
	..N CNT,SC,NODE,SUB S (CNT,SC)=""
	..;change the package interface to type of visit
	..S $P(^IBE(357.2,IBLIST,0),"^",11)=PI
	..;set the selection rule to exactly one as long as there is only one marking subcolumn
	..F  S SC=$O(^IBE(357.2,IBLIST,2,SC)) Q:'SC  S NODE=$G(^IBE(357.2,IBLIST,2,SC,0)) I $P(NODE,"^",4)=2 S CNT=CNT+1,SUB=SC
	..I CNT=1,$P(NODE,"^",10)="" S $P(^IBE(357.2,IBLIST,2,SUB,0),"^",10)=1
	.;
	.I 'CHANGE,IBLIST("NAME")["VISIT",IBLIST("NAME")["TYPE" D WARNING^IBDFC2("THE BLOCK '"_IBBLK("NAME")_"' HAS A LIST FOR CPT PROCEDURES THAT PERHAPS SHOULD BE REPLACED WITH VISIT TYPE")
	Q
	;
CKACTIVE(X,PI)	;returns 1 if the X=an active code, 0 otherwise
	Q:'PI 1
	X $G(^IBE(357.6,PI,11))
	Q $D(X)
	;
DISPLAY(SLCTN)	;returns selection display
	N SC,SCDA,VAL,RET,W,NODE
	;W - an array cotaining the widths of the subcolumns that contain text
	S NODE=$G(^IBE(357.3,SLCTN,0))
	S RET="  ",(VAL,SC)=""
	F SC=1:1:8 S SCDA=$O(^IBE(357.3,SLCTN,1,"B",SC,"")) D
	.I $G(IBLIST("SCTYPE",SC))=1 S W(SC)=IBLIST("SCW",SC)*(1+IBLIST("BTWN"))
	.S:$G(W(SC)) VAL=$$PADRIGHT^IBDFU($S(SCDA:$P($G(^IBE(357.3,SLCTN,1,SCDA,0)),"^",2),1:""),W(SC))
	.S:VAL'="" RET=RET_"  "_VAL
	.S VAL=""
	Q RET
	;
ASKOTH()	; Function
	; -- ask if want to add other hand print field automatically
	;    Returns 1 if yes, 0 if no, or -1 if uparrow
	;
	N X,Y,ANS,DIR
	W !
	S ANS=-1
	S DIR("?")="Answer YES if you want to automatically add 1 hand print field to each selection list.  If you answer NO nothing will be added."
	S DIR("?",1)="   Hand print fields can be automatically added to your form"
	S DIR("?",2)="   if you wish. If there isn't suffient room in the block"
	S DIR("?",3)="   or on the form them adding the hand print field will cause"
	S DIR("?",4)="   part of the list to disappear."
	S DIR("?",5)=" "
	S DIR(0)="Y",DIR("B")="NO"
	S DIR("A")="Automatically Add 'Other' Hand Print Fields"
	D ^DIR
	I $D(DIRUT) G ASKOTHQ
	S ANS=Y
ASKOTHQ	Q ANS
	;
ASKAUTO()	; Function
	; -- ask if want to automatically update codes
	;    Returns 1 if yes, 0 if no, or -1 if uparrow
	;
	N X,Y,ANS,DIR
	W !
	S ANS=-1
	S DIR("?")="Answer YES if you want codes in the selection lists that will be transmitted to PCE to automatically be updated to match the displayed codes.  If you answer No, warnings will be generated but the codes will not be updated."
	S DIR(0)="Y",DIR("B")="NO"
	S DIR("A")="Automatically update codes to be transmitted"
	D ^DIR
	I $D(DIRUT) G ASKAUTQ
	S ANS=Y
ASKAUTQ	Q ANS

IBDFC3
IBDFC3	;ALB/CJM - ENCOUNTER FORM - replace original form with converted form ;MAR 3, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
REPLACE	;replaces the original form with the converted form
	N IBFORM,OLDFORM,IBCNVRT,NODE,OLDNAME,NEWNAME
	S VALMBCK="R"
	;D FULL^VALM1
	W !,"The original form will be replaced with the converted form in all of the",!,"clinics and divisions where it is used."
	K DIR S DIR(0)="Y",DIR("B")="YES",DIR("A")="Is that okay"
	D ^DIR K DIR
	I (Y=1)&'$D(DIRUT) D
	.X IBAPI("SELECT")
	.Q:'IBFORM
	.Q:'IBCNVRT
	.S NODE=$G(^IBD(359,IBCNVRT,0))
	.S OLDFORM=$P(NODE,"^",2),OLDNAME=$P(NODE,"^",3)
	.Q:'OLDFORM
	.D LOOP
	.S $P(^IBD(359,IBCNVRT,0),"^",5)=1
	.;
	.;delete the original?
	.W !,"The converted form has been substituted everywhere for the original"
	.S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you want the original form deleted"
	.D ^DIR K DIR
	.I (Y=1)&'$D(DIRUT) D
	..D DELETE^IBDFU2C(OLDFORM,357)
	..;rename the converted form to take out the CNV. prefix
	..S NAME=$P($G(^IBE(357,IBFORM,0)),"^") I $E(NAME,1,4)="CNV." S NAME=$E(NAME,5,45) S:(NAME=$E(OLDNAME,1,$L(NAME))) NAME=OLDNAME D
	...K DIE,DA,DR S DIE="^IBE(357,",DA=IBFORM,DR=".01////"_NAME D ^DIE K DIE,DA,DR
	.;
	.D IDXFORMS^IBDFC1
	K Y
	Q
	;
LOOP	;loops through the clinic setups and divisions setups, making the substitutions
	N SETUP,NODE,PIECE,FOUND
	S SETUP=0 F  S SETUP=$O(^SD(409.95,SETUP)) Q:'SETUP  D
	.S NODE=$G(^SD(409.95,SETUP,0))
	.K DR S DR=""
	.S FOUND=0
	.F PIECE=2:1:12 I $P(NODE,"^",PIECE)=OLDFORM S DR=DR_(.01*PIECE)_"////"_IBFORM_";",FOUND=1
	.I FOUND K DIE,DA S DIE="^SD(409.95,",DA=SETUP D ^DIE
	.K DIE,DR,DA
	Q

IBDFC4
IBDFC4	;ALB/CJM - ENCOUNTER FORM - print scanning form definition ;MAR 3, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
FORMDEF	;
	W !,"THIS IS NOT YET IMPLEMENTED!"
	D PAUSE^IBDFU5
	S VALMBCK="R"
	Q

IBDFCG
IBDFCG	;MAF/ALB - CLINIC GROUP FORMS SCREEN ; 09-FEB-1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
EN	; -- main entry point for IBDF EF CLINIC GROUP LT
	D EN^VALM("IBDF EF CLINIC GROUP LT")
	Q
	;
	;
HDR	; -- header code
	S VALMHDR(1)="This is a list of the Clinic Groups and the Clinics"
	S VALMHDR(2)="and Divisions under them."
	Q
	;
	;
INIT	; -- init variables and list array
	N IBDFNODE,IBDFCL,IBDIFN,IBDFCGNM,IBDFCNUM,IBDCNT,IBDCNT1,IBDVAL,IBDVAL1,IBDFVAL,IBFASTXT,IBDCG,IBDCL,IBDDV,IBDFCFLG,IBDFCIEN,IBDFCN,IBDFDFLG,IBDFDIEN,IBDFGN,IBDFX,IBDVALM
	K IBDCLN1,IBDFCG
	S (IBDCNT,IBFASTXT,IBDCNT1,VALMCNT)=0
	K ^TMP("IBMF",$J),^TMP("IBDFCG",$J),^TMP("CGIDX",$J),IBDCLN D KILL^VALM10()
	S (IBDFGN,IBDFCGNM)=0
	F IBDFGN=0:0 S IBDFCGNM=$O(^IBD(357.99,"B",IBDFCGNM)) Q:IBDFCGNM']""  F IBDIFN=0:0 S IBDIFN=$O(^IBD(357.99,"B",IBDFCGNM,IBDIFN)) Q:IBDIFN'>0  I IBDIFN]"" D ARRAY
	S (IBDFCG,IBDFCGNM)=0
	F IBDFCN=0:0 S IBDFCGNM=$O(IBDCLN1(IBDFCGNM)) Q:IBDFCGNM']""  F IBDCG=0:0 S IBDCG=$O(IBDCLN1(IBDFCGNM,IBDCG)) Q:'IBDCG  I $D(IBDCLN1(IBDFCGNM,IBDCG)) S IBDCNT1=IBDCNT1+1 D GROUPS D
	.F IBDFX=IBDFX:0 S IBDFX=$O(^TMP("IBMF",$J,IBDCG,IBDFX)) Q:'IBDFX  D SETG1
	.I $O(IBDCLN1(IBDFCGNM))]"" S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1 S X="",X=$$SETSTR^VALM1(X,X,1,80) D TMP
	;
	I '$D(^TMP("IBDFCG",$J)) D NUL
	Q
	;
	;
ARRAY	; -- Setting up array for clinic groups and the divisions and clinics
	S IBDCLN1(IBDFCGNM,IBDIFN)=IBDIFN
	S (IBDDV,IBDCL)=0 D CLIN^IBDFCG1 D DIV^IBDFCG1
	S (IBDFX,IBDDV,IBDCL,IBDFCFLG,IBDFDFLG,IBDFCIEN,IBDFDIEN)=0
	F IBDFX=0:0 S IBDFX=IBDFX+1 D:'IBDFCFLG CLIN1^IBDFCG1 D:'IBDFDFLG DIV1^IBDFCG1 Q:IBDFCFLG=1&(IBDFDFLG=1)
	Q
	;
	;
SETG1	; -- Creating the list entries
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBDFVAL=$O(^TMP("IBMF",$J,IBDCG,IBDFX,"D",0))
	S IBDFVAL=$G(^TMP("IBMF",$J,IBDCG,IBDFX,"D",+IBDFVAL)) S X=$$SETSTR^VALM1(IBDFVAL,X,28,26)
	S IBDFVAL=$O(^TMP("IBMF",$J,IBDCG,IBDFX,"C",0))
	S IBDFVAL=$G(^TMP("IBMF",$J,IBDCG,IBDFX,"C",+IBDFVAL)) S X=$$SETSTR^VALM1(IBDFVAL,X,56,23)
	D TMP
	Q
	;
	;
GROUPS	; -- Creating the Listman Clinic Name titles for the list
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S IBDFCG(IBDFCGNM)=IBDCNT_"^"_IBDCG
	S X="",X=$$SETSTR^VALM1(IBDCNT1_"  "_IBDFCGNM,X,1,26)
	S IBDFX=1
	I '$O(^TMP("IBMF",$J,IBDCG,IBDFX,"D",0)),'$O(^TMP("IBMF",$J,IBDCG,IBDFX,"C",0)) D TMP,CNTRL^VALM10(VALMCNT,1,26,IOINHI,IOINORM,0) Q
	S IBDVAL=$O(^TMP("IBMF",$J,IBDCG,IBDFX,"D",0)) I IBDVAL S IBDVAL=^TMP("IBMF",$J,IBDCG,IBDFX,"D",IBDVAL) S X=$$SETSTR^VALM1(IBDVAL,X,28,26) I '$O(^TMP("IBMF",$J,IBDCG,IBDFX,"C",0)) D TMP,CNTRL^VALM10(VALMCNT,1,26,IOINHI,IOINORM,0)
	S IBDVAL=$O(^TMP("IBMF",$J,IBDCG,IBDFX,"C",0)) I IBDVAL S IBDVAL=^TMP("IBMF",$J,IBDCG,IBDFX,"C",IBDVAL) S X=$$SETSTR^VALM1(IBDVAL,X,56,24) D TMP,CNTRL^VALM10(VALMCNT,1,26,IOINHI,IOINORM,0)
	Q
	;
	;
TMP	S ^TMP("IBDFCG",$J,IBDCNT,0)=X,^TMP("IBDFCG",$J,"IDX",VALMCNT,IBDCNT1)=""
	S ^TMP("CGIDX",$J,IBDCNT1)=VALMCNT_"^"_IBDCG
	Q
	;
	;
EDIT	; -- Edit a selected Clinic Group
	N IBDVALM,VALMY
	S VALMBCK=""
	D SEL^VALM2 G REP:'$O(VALMY(0)) S IBDVALM=0
	D FULL^VALM1 S VALMBCK="R"
	F IBDVALM=0:0 S IBDVALM=$O(VALMY(IBDVALM)) Q:'IBDVALM  S DA=^TMP("CGIDX",$J,IBDVALM),DA=$P(DA,"^",2) D
	.D MESS
	.W !!,"Clinic Group: "_$P($G(^IBD(357.99,DA,0)),"^",1)
	.S DIE="^IBD(357.99,",DA=DA,DR=".01;10;I $O(^IBD(357.99,DA,10,0)) S Y=""@99"";11;@99" D ^DIE K DA,DIE,DR
	D REP1 Q
	;
DEL	; -- Delete Clinic Group
	N IBDVALM,VALMY,DIR,DIRUT,DUOUT
	S VALMBCK=""
	D SEL^VALM2 G REP:'$O(VALMY(0)) S IBDVALM=0
	D FULL^VALM1 S VALMBCK="R"
	F IBDVALM=0:0 S IBDVALM=$O(VALMY(IBDVALM)) Q:'IBDVALM  S DA=^TMP("CGIDX",$J,IBDVALM),DA=$P(DA,"^",2) D
	.I $O(^IBD(357.09,"ACG",DA,0)) W !!,"In use by parameter group, Not deleted",! D PAUSE^VALM1 Q
	.W !!,"Clinic Group: "_$P($G(^IBD(357.99,DA,0)),"^",1)
	.W ! S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are You Sure you want to delete "_$P($G(^IBD(357.99,DA,0)),"^",1)
	.D ^DIR K DIR I Y'=1 W !,"Entry ",$P($G(^IBD(357.99,DA,0)),"^",1)," not Deleted!" Q
	.D DP1
	;
DELQ	D INIT
	S VALMBCK="R" Q
	;
DP1	; -- actual deletion
	S DIK="^IBD(357.99," D ^DIK
	W !,"Entry ",IBDVALM," Deleted"
	Q
	;
QE	; -- Quick edit Review entry
	Q
	;
MESS	; -- Message prior to editing a group
	W !!,"Enter the clinics for this clinic group.  Enter as many Clinics as you want."
	W !,"If you want all clinics for a division, do not enter any clinics but enter"
	W !,"the division name at the Select Division: prompt."
	Q
	;
ADD1	; -- Add/Edit Clinic Group
	N DLAYGO
	D FULL^VALM1
	D MESS
	W ! S DIC("A")="Select GROUP NAME: ",DIC="^IBD(357.99,",DIC(0)="AELQMN",DIC("DR")=".01",DLAYGO=357.99 D ^DIC K DIC G:Y<1 REP1 S DA=+Y
	S DIE="^IBD(357.99,",DA=DA,DR="10;I $O(^IBD(357.99,DA,10,0)) S Y=""@99"";11;@99" D ^DIE K DA,DIE,DR G ADD1
	;
	;
REP	D INIT^IBDFPE S VALMBCK="R" Q
	;
	;
REP1	D INIT^IBDFCG S VALMBCK="R" Q
	;
	;
JUMP	; -- Jump action to display a specific clinic group on the screen.
	D FULL^VALM1
	I $D(XQORNOD(0)),$P(XQORNOD(0),"^",4)]"" S X=$P(XQORNOD(0),"^",4) S X=$P(X,"=",2) I X]"" D:X?1.6N JSEL S DIC="^IBD(357.99,",DIC(0)="QEZ" D ^DIC K DIC G:Y<0 JMP S Y=+Y D JUMP1 Q
JMP	S DIC="^IBD(357.99,",DIC(0)="AEMN",DIC("A")="Select Clinic Group you wish to move to: " D ^DIC K DIC
	I X["^" S VALMBG=1,VALMBCK="R" Q
JUMP1	I Y<0 G JUMP
	N IBDFCAT
	S IBDFCAT=$P(^IBD(357.99,+Y,0),"^",1)
	I '$D(IBDFCG(IBDFCAT)) W !!,"There is no data listed for this Clinic Group" G JMP
	S VALMBG=+IBDFCG(IBDFCAT) S VALMBCK="R" Q
	Q
	;
	;
JSEL	; -- Convert number selected to name
	S IBDVALM=X I $D(^TMP("CGIDX",$J,IBDVALM)) S X=$P(^TMP("CGIDX",$J,IBDVALM),"^",2),X=$P(^IBD(357.99,X,0),"^",1)
	Q
	;
	;
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
	;
EXIT	; -- exit code
	K IBDCLN,IBDCLN1,IBDFCG
	K ^TMP("IBMF",$J)
	Q
	;
EXPND	; -- expand code
	Q
	;
NUL	; -- NULL MESSAGE
	S ^TMP("IBDFCG",$J,1,0)=" ",^TMP("IBDFCG",$J,2,0)="There are no CLINIC GROUPS listed.",^TMP("CGIDX",$J,1)=1,^TMP("CGIDX",$J,2)=2
	Q
	;
SET	; -- SET DEL NODE
	S ^DD(357.99,.01,"DEL",1,0)="I $O(^IBD(357.09,""ACG"",DA,0)) W !,""You must remove this group from any Print Parameters to Delete!"""

IBDFCG1
IBDFCG1	;ALB/MAF - CONT. of Clinic Group Enter Edit Screen - 1 1 95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
CLIN	; -- Loop thru all clinics in the clinic group to list alphabetically
	F IBDCL=0:0 S IBDCL=$O(^IBD(357.99,IBDIFN,10,IBDCL)) Q:'IBDCL  I $D(^IBD(357.99,IBDIFN,10,+IBDCL,0)) S X=+^(0),^TMP("IBMF",$J,IBDIFN,"C",$P(^SC(X,0),"^",1),X)=$P(^SC(X,0),"^",1)
	Q
	;
	;
CLIN1	;  -- Reset the clinic array
	S IBDCL=$O(^TMP("IBMF",$J,IBDIFN,"C",IBDCL)) S:IBDCL']"" IBDFCFLG=1 Q:IBDCL']""  S IBDFCIEN=$O(^TMP("IBMF",$J,IBDIFN,"C",IBDCL,0)) I IBDFCIEN S ^TMP("IBMF",$J,IBDIFN,IBDFX,"C",IBDFCIEN)=IBDCL
	Q
	;
	;
DIV	; -- Loop thru all the division that are in a clinic group to list alphabetically
	F IBDDV=0:0 S IBDDV=$O(^IBD(357.99,IBDIFN,11,IBDDV)) Q:'IBDDV  I $D(^IBD(357.99,IBDIFN,11,+IBDDV,0)) S X=+^(0),^TMP("IBMF",$J,IBDIFN,"D",$P(^DG(40.8,X,0),"^",1),X)=$P(^DG(40.8,X,0),"^",1)
	Q
	;
	;
DIV1	;  -- Reset the division array
	S IBDDV=$O(^TMP("IBMF",$J,IBDIFN,"D",IBDDV)) S:IBDDV']"" IBDFDFLG=1 Q:IBDDV']""  S IBDFDIEN=$O(^TMP("IBMF",$J,IBDIFN,"D",IBDDV,0)) I IBDFDIEN S ^TMP("IBMF",$J,IBDIFN,IBDFX,"D",IBDFDIEN)=IBDDV
	Q

IBDFCNOF
IBDFCNOF	;ALB/CJM - AICS clinics with no forms ; JUL 20,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
%	; -- list of clinics that have no encounter forms in use.
	;
	N C,X,Y,SERV,SERVICE,CLINIC,IBHDT,IBDFIFN,IBDCNO,IBDFCNO,IBDFNODE,PAGE,IBQUIT,DIVIS,DIVNAM,VAUTD
	W !!,"AICS List of Clinics with No Encounter Form in Use",!!
	S IBQUIT=0
	D DIVIS G:IBQUIT EXIT
	D DEVICE G:IBQUIT EXIT
	D DQ
	Q
	;
EXIT	; -- end of report
	K ^TMP($J,"IBDCN")
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K ZTSK,ZTDESC,ZTSAVE,ZTRTN
	Q
	;
DQ	; -- entry point from taskmanager
	K ^TMP($J,"IBDCN")
	S IBQUIT=0,PAGE=1
	S IBHDT=$$HTE^XLFDT($H,1)
	D SET,LIST G EXIT
	Q
	;
SET	; -- build list into temporary array
	N IBDFCL,DIVIS,DIVNAM,SERVICE,CLINNAM,IBDFNODE,IBQUIT
	F IBDFIFN=0:0 S IBDFIFN=$O(^SC(IBDFIFN)) Q:'IBDFIFN  S IBDCNO=$G(^SC(IBDFIFN,0)) I $P(IBDCNO,"^",3)="C" D
	.S DIVIS=+$P(IBDCNO,"^",15),DIVNAM=$P($G(^DG(40.8,+DIVIS,0)),"^") S:DIVNAM="" DIVNAM="Unknown"
	.S CLINNAM=$P(IBDCNO,"^")
	.S Y=$P(IBDCNO,"^",8),C=$P(^DD(44,9,0),"^",2) D Y^DIQ S SERVICE=Y S:SERVICE="" SERVICE="Unknown"
	.I $O(^SD(409.95,"B",IBDFIFN,0)) D  ; else follows
	..S IBDFCL=$O(^SD(409.95,"B",IBDFIFN,0))
	..S IBDFNODE=^SD(409.95,IBDFCL,0)
	..S IBQUIT=0 F X=2:1:9 S:$P(IBDFNODE,"^",X)&("^1^2^3^4^5^6^8^9^"[X) IBQUIT=1 Q:IBQUIT
	..I 'IBQUIT S ^TMP($J,"IBDCN",DIVIS,DIVNAM,SERVICE,CLINNAM)=IBDFIFN_"^"_$S($P(IBDFNODE,"^",7)]"":"FORM IN PROGRESS",1:"") S ^TMP($J,"IBDCN",DIVIS,0)=$G(^TMP($J,"IBDCN",DIVIS,0))+1
	.I '$O(^SD(409.95,"B",IBDFIFN,0)) S ^TMP($J,"IBDCN",DIVIS,DIVNAM,SERVICE,CLINNAM)=IBDFIFN,^TMP($J,"IBDCN",DIVIS,0)=$G(^TMP($J,"IBDCN",DIVIS,0))+1
	Q
	;
HEADER	; -- writes the report header
	I $E(IOST,1,2)="C-",$Y>1,PAGE>1 D PAUSE Q:IBQUIT
	I PAGE>1 W @IOF
	W !,"List of Clinics Without Encounter Forms",?IOM-32,IBHDT,"   PAGE ",PAGE
	W !,"For Division: ",DIVNAM
	;W !,"CLINICS",?27,"SERVICE",?47,"DIVISION"
	W !,"CLINICS",?27,"SERVICE",?47,"COMMENT"
	W !,$TR($J(" ",IOM)," ","-")
	S PAGE=PAGE+1
	Q
	;
PAUSE	; -- hold crt screen
	N DIR,X,Y
	F  Q:$Y>(IOSL-2)  W !
	S DIR(0)="E" D ^DIR S IBQUIT=$S(+Y:0,1:1)
	Q
	;
LIST	; -- lists the clinics using FORM
	N CLINIC,COUNT,DIR,NEWDIV,NAME,OLDDIV
	W:$E(IOST,1,2)="C-" @IOF
	I $D(^TMP($J,"IBDCN"))=0 W ?15,"No active clinics found without an assigned encounter form"
	S (NEWDIV,COUNT)=0,OLDDIV=""
	S DIVIS="" F  S DIVIS=$O(^TMP($J,"IBDCN",DIVIS)) Q:DIVIS=""!(IBQUIT)  D
	.I 'VAUTD,'$D(VAUTD(DIVIS)) Q
	.I 'VAUTD,'$D(^TMP($J,"IBDCN",DIVIS)) S DIVNAM=$P($G(^DG(40.8,+DIVIS,0)),"^") D HEADER W !,"No clinics found for division '",DIVNAM,"'",! Q
	.S DIVNAM=$O(^TMP($J,"IBDCN",DIVIS,0)) Q:DIVNAM=""
	.S NEWDIV=1
	.S SERV="" F  S SERV=$O(^TMP($J,"IBDCN",DIVIS,DIVNAM,SERV)) Q:SERV=""!(IBQUIT)  D
	..S NAME="" F  S NAME=$O(^TMP($J,"IBDCN",DIVIS,DIVNAM,SERV,NAME)) Q:NAME=""!(IBQUIT)  S CLINIC=+^(NAME) D ONELINE
	I 'IBQUIT W:OLDDIV'="" !,"----------------",!,"Division Count = ",COUNT
	Q
	;
ONELINE	; -- print line of report
	I $G(NEWDIV) D NEWDIV Q:IBQUIT
	I $Y>(IOSL-3) D HEADER Q:IBQUIT
	;W !,$E(NAME,1,25),?27,$E(SERV,1,18),?47,$E(DIVNAM,1,15)
	W !,$E(NAME,1,25),?27,$E(SERV,1,18)
	W ?47,$P(^TMP($J,"IBDCN",DIVIS,DIVNAM,SERV,NAME),"^",2),"  "
	I '$$ACLN(CLINIC) W ?4,"(Clinic Currently Inactive)"
	S COUNT=COUNT+1
	Q
	;
NEWDIV	; -- print division totals and start new division
	I 'IBQUIT W:OLDDIV'="" !,"----------------",!,"Division Count = ",COUNT
	S OLDDIV=DIVIS
	D HEADER Q:IBQUIT
	W !?10,"Division: ",DIVNAM,! S NEWDIV=0,COUNT=0
	Q
	;
DEVICE	; -- select device
	I $D(ZTQUEUED) Q
	S %ZIS="MQ" D ^%ZIS I POP S IBQUIT=1 Q
	I $D(IO("Q")) S ZTRTN="DQ^IBDFCNOF",ZTDESC="IBD - Clinics with No Forms",ZTSAVE("VA*")="" D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS S IBQUIT=1 Q
	U IO
	Q
	;
DIVIS	; -- Select division
	N X,Y S VAUTD=1
	I $P($G(^DG(43,1,"GL")),"^",2) D DIVISION^VAUTOMA S:Y=-1 IBQUIT=1
	I 'VAUTD S X="" F  S X=$O(VAUTD(X)) Q:'X  S ^TMP($J,"IBDCN",X)=""
	Q
	;
ACLN(SC)	; function
	; -- is clinic currently active
	;    Input   SC := pointer to 44
	;    Output     := 1 if currently active
	;                  0 if currently inactive
	;
	N FLAG,SDIN,SDRE S FLAG=1
	I $D(^SC(SC,"I")) S Y=^("I"),SDIN=+Y,SDRE=+$P(Y,U,2)
	I $G(SDIN),SDIN'>DT,SDRE,SDRE>DT S FLAG=0
	I $G(SDIN),SDIN'>DT,'SDRE S FLAG=0
ACLNQ	Q FLAG

IBDFDVE
IBDFDVE	;ALB/AAS - AICS edit printers file ; 24-FEB-96
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
%	; -- Edit Encounter Form Printers file (357.94)
	;
	N I,J,X,Y,DA,DIC,DR,DIE,DLAYGO
	W !!,"Add/Edit Encounter Form Printers Terminal Type"
	;
ASK	W !!
	S DLAYGO=357.94,DIC="^IBE(357.94,",DIC(0)="AEQML" D ^DIC G:Y<1 END
	S DA=+Y D EDIT
	G ASK
	Q
	;
EDIT	; -- edit entry
	S DR="[IBDF EDIT PRINTER]",DIE="^IBE(357.94,"
	D ^DIE
	Q
	;
END	Q

IBDFESP
IBDFESP	;ALB/AAS - AICS EDIT SITE PARAMS ; 19-DEC-95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
EDIT	; -- edit site parameters
	N DIC,DIE,DA,DR,X,Y
	I $G(^IBD(357.09,1,0))="" D CREATE
	S DIE="^IBD(357.09,",DA=1
	W !!,"Edit AICS Site Parameters"
	W !!,"Form Tracking Purge Parameters"
	S DR=".02;.03;1.01;W !!,""Data Entry Parameters"";.04;W !!,""Print Parameters"";.05//YES;"
	D ^DIE
	Q
	;
CREATE	; -- create entry in new parameters file 357.09
	I $G(^IBD(357.09,1,0))'="" Q
	N DLAYGO
	S DIC="^IBD(357.09,",DINUM=1,X=$P($$SITE^VASITE,"^",2),DIC(0)="L",DLAYGO=357.09 D FILE^DICN Q:+Y<1
	S $P(^IBD(357.09,1,0),"^",5)=1 ; set print inpatients to yes
	S ^IBD(357.09,1,"Q",0)="^357.091A^"
	Q

IBDFFSMP
IBDFFSMP	;ALB/MAF   -- Print a sample of all encounter forms.  - Dec 12 1995@800
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	S (IBDFFLG,IBQUIT)=0
	S (IBPM,WITHDATA)=1
	K ^TMP("IBFRMS",$J)
	;
	;  -- Ask patient name 
	D PATIENT G:IBQUIT EXIT
	;
	;  -- Loop thru Print Manager Clinic Setup to find active forms used by
	;    clinics.
	S IBCLINIC="" F  S IBCLINIC=$O(^SD(409.95,"B",IBCLINIC)) Q:IBCLINIC']""  D
	.S SETUP=$O(^SD(409.95,"B",IBCLINIC,""))
	.S NAME=$P($G(^SC(IBCLINIC,0)),"^")
	.D SET
	I '$D(^TMP("IBFRMS",$J)) W !!,"There are no forms set up for clinics...",!! G EXIT
	D NOW^IBDF1A,DEVICE  ;sets IBAPPT to NOW
	G:IBQUIT EXIT
	I 'IBDFFLG U IO D QUEUED
	G EXIT
	;
SET	;  -- Build list into array IBFORMS.  Make sure EF is one that is active
	;     Will print form only once.
	I $O(^SD(409.95,"B",IBCLINIC,0)) D
	.S IBDFNODE=^SD(409.95,SETUP,0)
	.S IBQUIT=0
	.F X=2,3,4,5,6,8,9 S:$P(IBDFNODE,"^",X)&('$D(^TMP("IBFRMS",$J,+$P(IBDFNODE,"^",X)))) ^TMP("IBFRMS",$J,$P(IBDFNODE,"^",X))=IBCLINIC  ;Loop thru the clinic setup node to find the active EF.
	.Q
	Q
	;
PATIENT	;  -- gets the patient to print the form for
	W !!
	S DIR(0)="P^2:EM",DIR("A")="Select PATIENT NAME for Samples" D ^DIR K DIR I $D(DIRUT)!(+Y<1)!('(+Y)) S IBQUIT=1 Q
	S DFN=+Y
	Q
	;
QUEUED	;
	;input - DFN,IBAPPT,IBCLINIC
	N IBDEVICE
	;
	D DEVICE^IBDFUA(0,.IBDEVICE)
	S IBDSAMP=1 ;printing sample forms don't update forms tracking, print form in name/ssn block
	F IBFORM=0:0 S IBFORM=$O(^TMP("IBFRMS",$J,IBFORM)) Q:'IBFORM  D
	.S IBCLINIC=+$G(^TMP("IBFRMS",$J,IBFORM))
	.D DRWFORM^IBDF2A(IBFORM,WITHDATA,.IBDEVICE)
	;
EXIT	;
	K IBDSAMP
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K ^TMP("IBFRMS",$J)
	D KPRNTVAR^IBDFUA ;kills the screen and graphics parameters
	K CLINIC,DFN,FORMS,IBAPPT,IBCLINIC,IBFORM,IBDFNODE,IBDFFLG,IBPM,IBQUIT,NAME,POP,SETUP,WITHDATA,X,Y,I
	Q
	;
DEVICE	;
	I $D(ZTQUEUED) Q
	W !,*7,"** Encounter Forms require a page size of 80 lines and 132 columns. **"
	K %IS,%ZIS,IOP S %ZIS="MQ" D ^%ZIS I POP S IBQUIT=1 Q
	I $D(IO("Q")) D
	.S ZTRTN="QUEUED^IBDFFSMP",(ZTSAVE("WITHDATA"),ZTSAVE("IB*"),ZTSAVE("DFN"),ZTSAVE("FORMS"))="",ZTSAVE("^TMP(""IBFRMS"",$J,")=""
	.S ZTDESC="IBD - PRINT SAMPLE ENCOUNTER FORM" D ^%ZTLOAD
	.W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
	.I $D(ZTSK) S IBDFFLG=1
	.D HOME^%ZIS S IBQUIT=1 Q
	Q

IBDFFT
IBDFFT	;ALB/MAF - FORMS TRACKING ; JUL 6 1995@800
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
OUT	S IBDF2=0 W !!,"Sort output by: CLINIC// " D ZSET1 S X="" R X:DTIME G QUIT:X="^"!('$T) I X=""!("Cc"[X) S X="1"
	S X=$S("Pp"[X:2,1:X)
	I X="?" D ZSET1,HELP1 G OUT
	S IBDFSR=$E(X) D IN^DGHELP W ! I %=-1 D ZSET1,HELP1 G OUT
	I $D(^DG(43,1,"GL")) S IBDFMUL=$P(^DG(43,1,"GL"),"^",2)
	S IBDFL=$S(IBDFSR=1:"CLN",IBDFSR=2:"PAT",IBDFSR=3:"PRV",1:"QUIT")
	I $D(IBDFMUL),IBDFMUL D DIVISION^VAUTOMA G:Y=-1 QUIT
	I 'IBDFMUL S IBDFDV=$O(^DG(40.8,0))
	D @(IBDFL) G:Y=-1 QUIT
	D DAT G:Y=-1 QUIT
	D WAIT^DICD
	D NOW^%DTC S Y=$E(%,1,12) S VADAT("W")=Y D ^VADATE S IBDFDAT=VADATE("E")
	I '$D(IBDF1) D EN^VALM("IBDF FT REPORT")
	I $D(IBDF1) D KILL,START^IBDFFT1 S VALMBCK="R",VALMBG=1
	Q
	;
	;
HDR	; -- header code
	S VALMHDR(1)="Displaying encounter forms, those printed, scanned, sent to PCE (OK, ERrors)"
	S VALMHDR(2)="pending pages, scanned/errors (not transmitted), not printed."
	Q
	;
	;
CLN	S VAUTNI=2,DIC="^SC(",DIC("S")="I $P(^(0),U,3)=""C""&$S(VAUTD:1,$D(VAUTD(+$P(^(0),U,15))):1,'+$P(^(0),U,15)&$D(VAUTD(+$O(^DG(40.8,0)))):1,1:0) D CHECK^IBDFFT(Y) I QUIT=1",VAUTSTR="clinic",VAUTVB="VAUTC" G FIRST^VAUTOMA S:Y=-1 IBDF2=1 Q:IBDF2
	Q
	;
	;
PAT	S VAUTNI=2 D PATIENT^VAUTOMA S:Y=-1 IBDF2=1 Q:IBDF2
	Q
	;
	;
CHECK(CLIN)	;  -- Check to see if clinic has a form and its one that is not for
	;     future use only.
	N IBDFNODE,IBDFCL
	S QUIT=0
	I $O(^SD(409.95,"B",+CLIN,0)) D
	.S IBDFCL=$O(^SD(409.95,"B",+CLIN,0))
	.S IBDFNODE=^SD(409.95,IBDFCL,0)
	.S QUIT=0 F X=2:1:9 S:$P(IBDFNODE,"^",X)&("^1^2^3^4^5^6^8^9^"[X) QUIT=1 Q:QUIT
	Q
	;
	;
EXIT	;  -- Code executed at action exit
	K IBDFL,IBDFL1,IBDFBG,IBDFBG1,IBDFBEG,IBDFBEG1,IBDFEND,IBDFEND1,VAUTD,VAUTN,VAUTC,IBDFC1,IBDFN1,IBDFDV1,VAUTD1,VAUTC1,VAUTN1
EXIT1	;
	K DFN,IBDFCLI,IBDFDA,IBDFDAT,IBDFIFN,IBDFMUL,IBDFSA,IBDFSR,IBDFT,IBDVAL,IBDFVAL,IBDVAL1,VADAT,VADATE,QUIT,IBDF2
	K ^TMP("CNT",$J),^TMP("FRM",$J),^TMP("FTRK",$J),^TMP("STATS",$J),^TMP("FRMIDX",$J),^TMP("STAIDX",$J),IBDFDIV,IBDFCLIN,IBDFNODE
	D CLOSE^DGUTQ Q
	;
	;
DAT	;  -- DATE RANGE
BEG	W ! S %DT="AEX",%DT("A")="BEGINNING DATE: " D ^%DT S IBDFBG=Y,IBDFBEG=Y-.0001 S:X="^"!(X="") Y=-1 Q:Y=-1
END	W ! S %DT("A")="ENDING DATE: " D ^%DT S:X="^"!(X="") Y=-1 Q:Y=-1  I Y<1 D HELP^%DTC G END
	S IBDFEND=Y_.9999
	I IBDFEND\1<IBDFBG W !!?5,"The ending date cannot be before the beginning date" G END
	Q
	;
	;
HELP1	W !!,"Choose a number or first initial :" F K=2:1:3 W !?15,$P(Z,"^",K)
	W ! Q
	;
	;
ZSET1	S Z="^1 CLINIC^2 PATIENT^" Q
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
CHGLST	;  -- Code to change list display
	D FULL^VALM1
	S IBDFL1=IBDFL,IBDFBG1=IBDFBG,IBDFBEG1=IBDFBEG,IBDFEND1=IBDFEND
	S IBDFDV1=VAUTD S:$D(VAUTC) IBDFC1=VAUTC S:$D(VAUTN) IBDFN1=VAUTN
	I VAUTD=0 F X=0:0 S X=$O(VAUTD(X)) Q:X']""  S VAUTD1(X)=VAUTD(X)
	I $D(VAUTC),VAUTC=0 F X=0:0 S X=$O(VAUTC(X)) Q:X']""  S VAUTC1(X)=VAUTC(X)
	I $D(VAUTN),VAUTN=0 F X=0:0 S X=$O(VAUTN(X)) Q:X']""  S VAUTN1(X)=VAUTN(X)
	D EXIT1,OUT
	Q
KILL	;  -- Kill extra array variables
	N IBDFXX
	S IBDFXX=$S(IBDFL="CLN":"VAUTC",1:"VAUTN")
	I IBDFXX="VAUTN" K VAUTC
	I IBDFXX="VAUTC" K VAUTN
	Q
QUIT	;  -- Kill variables and reset to last display if no change has taken place
	I $D(IBDF1) S IBDFL=IBDFL1,IBDFBG=IBDFBG1,IBDFBEG=IBDFBEG1,IBDFEND=IBDFEND1,VAUTD=IBDFDV1 S:IBDFL="CLN" VAUTC=IBDFC1 S:IBDFL="PAT" VAUTN=IBDFN1 D
	.I VAUTD=0 F X=0:0 S X=$O(VAUTD1(X)) Q:X']""  S VAUTD(X)=VAUTD1(X)
	.I $D(VAUTC),VAUTC=0 F X=0:0 S X=$O(VAUTC1(X)) Q:X']""  S VAUTC(X)=VAUTC1(X)
	.I $D(VAUTN),VAUTN=0 F X=0:0 S X=$O(VAUTN1(X)) Q:X']""  S VAUTN(X)=VAUTN1(X)
	I '$D(IBDF1) G EXIT
	D KILL,START^IBDFFT1 S VALMBCK="R",VALMBG=1
	Q

IBDFFT1
IBDFFT1	;ALB/MAF - FORMS TRACKING CONTINUED - JUL 6 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
START	;
	N IBDCNT,IBDCNT1,IBDFTIME
	S (IBDCNT,IBDCNT1,VALMCNT)=0
	D KILL^VALM10()
	D @(IBDFL)
	N IBDFDV,IBDFCL,IBDNODE,IBDFTMP,IBDFPAT,IBDFPT,IBDFT
	S (IBDFDV,IBDFCL,IBDFPT)=0
	F IBDFDIV=0:0 S IBDFDV=$O(^TMP("FTRK",$J,IBDFDV)) Q:IBDFDV']""  D:'$D(IBDFDIV(IBDFDV)) HEADER^IBDFFT2 F IBDFCLI=0:0 S IBDFCL=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL)) Q:IBDFCL']""  D:'$D(IBDFCLIN(IBDFDV,IBDFCL)) HEADER1^IBDFFT2 D
	.F IBDFPAT=0:0 S IBDFPT=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFPT)) Q:IBDFPT']""  F IBDFIFN=0:0 S IBDFIFN=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFPT,IBDFIFN)) Q:'IBDFIFN  D
	..F IBDFT=0:0 S IBDFT=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFPT,IBDFIFN,IBDFT)) Q:'IBDFT  S IBDFTMP=^(IBDFT) D SETARR
	I '$D(^TMP("FRM",$J)) D NUL^IBDFFT2
	Q
CLN	;  -- Loop thru clinics
	N IBDFCLIN
	I VAUTC=1 F IBDFCLIN=0:0 S IBDFCLIN=$O(^SC(IBDFCLIN)) Q:'IBDFCLIN  D CK(IBDFCLIN) I QUIT=1 D BLD
	I VAUTC=0 F IBDFCLIN=0:0 S IBDFCLIN=$O(VAUTC(IBDFCLIN)) Q:'IBDFCLIN  D CK(IBDFCLIN) I QUIT=1 D BLD
	Q
PAT	;  -- Loop thru patients
	N IBDFCLIN,IBDFPAT
	I VAUTN=1 F IBDFPAT=0:0 S IBDFPAT=$O(^DPT(IBDFPAT)) Q:'IBDFPAT  F IBDFT=IBDFBEG:0 S IBDFT=$O(^DPT(IBDFPAT,"S",IBDFT)) Q:'IBDFT!($P(IBDFT,".",1)>IBDFEND)  I $D(^DPT(IBDFPAT,"S",IBDFT,0)) D SET
	I VAUTN=0 F IBDFPAT=0:0 S IBDFPAT=$O(VAUTN(IBDFPAT)) Q:'IBDFPAT  F IBDFT=IBDFBEG:0 S IBDFT=$O(^DPT(IBDFPAT,"S",IBDFT)) Q:'IBDFT!($P(IBDFT,".",1)>IBDFEND)  I $D(^DPT(IBDFPAT,"S",IBDFT,0)) D SET
	Q
	;
	;
SET	S IBDFCLIN=$P(^DPT(IBDFPAT,"S",IBDFT,0),"^",1) D CK(IBDFCLIN) I QUIT=1 S DFN=IBDFPAT D CK1 Q
	Q
	;
	;
CK(XCL)	;  -- Check clinic, division, form
	Q:'$D(^SC(XCL,0))
	S QUIT=0
	S IBDFNODE=$G(^SC(XCL,0))
	Q:$P(IBDFNODE,"^",3)'="C"
	I $G(VAUTD)=0 Q:'$P(IBDFNODE,"^",15)  Q:'$D(VAUTD($P(IBDFNODE,"^",15)))
	D CHECK^IBDFFT(XCL)
	Q:QUIT=0
	S ^TMP("CNT",$J,$S($D(^DG(40.8,+$P(IBDFNODE,"^",15),0)):$P(^DG(40.8,$P(IBDFNODE,"^",15),0),"^",1),1:"NOT SPECIFIED"),$S($D(VAUTC):$P(IBDFNODE,"^",1),1:$P(^DPT(IBDFPAT,0),"^",1)))="0^0^0^0"
	Q
	;
	;
BLD	; -- scan appts
	F IBDFT=IBDFBEG:0 S IBDFT=$O(^SC(IBDFCLIN,"S",IBDFT)) Q:'IBDFT!($P(IBDFT,".",1)>IBDFEND)  D
	.F IBDFDA=0:0 S IBDFDA=$O(^SC(IBDFCLIN,"S",IBDFT,1,IBDFDA)) Q:'IBDFDA  I $D(^SC(IBDFCLIN,"S",IBDFT,1,IBDFDA,0)) S IBDFSA=^(0) S DFN=+IBDFSA D CK1
	Q
CK1	Q:"^I^"'[$P($G(^DPT(DFN,"S",IBDFT,0)),"^",2)
	N IBDFXPC,IBDFYPC
	S IBDFXPC=$S($D(VAUTC):$P(IBDFNODE,"^",1),1:$P(^DPT(IBDFPAT,0),"^",1))
	S IBDFYPC=$S($D(VAUTC):$P(^DPT(DFN,0),"^",1),1:$P(IBDFNODE,"^",1))
	I $D(^IBD(357.96,"APTAP",DFN,IBDFT)) S IBDFIFN=$O(^IBD(357.96,"APTAP",DFN,IBDFT,0)) I $D(^IBD(357.96,IBDFIFN,0)) D
	.S ^TMP("FTRK",$J,$S($D(^DG(40.8,+$P(IBDFNODE,"^",15),0)):$P(^DG(40.8,$P(IBDFNODE,"^",15),0),"^",1),1:"NOT SPECIFIED"),IBDFXPC,IBDFYPC,DFN,IBDFT)=IBDFCLIN_"^"_^IBD(357.96,IBDFIFN,0)
	.Q
	E  S ^TMP("FTRK",$J,$S($D(^DG(40.8,+$P(IBDFNODE,"^",15),0)):$P(^DG(40.8,$P(IBDFNODE,"^",15),0),"^",1),1:"NOT SPECIFIED"),IBDFXPC,IBDFYPC,DFN,IBDFT)=IBDFCLIN_"^^"_DFN_"^"_IBDFT
	Q
	;
SETARR	;  -- Set up Listman array
	S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",1)=$P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",1)+1
	S IBDCNT1=IBDCNT1+1
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBDFVAL=$J(IBDCNT1_")",5)
	S X=$$SETSTR^VALM1(IBDFVAL,X,1,5)
	S IBDFVAL=$P($G(IBDFTMP),"^",2)
	S X=$$SETSTR^VALM1(IBDFVAL,X,7,8)
	I $D(VAUTC) S IBDFVAL=$P($G(IBDFTMP),"^",3) I IBDFVAL]"" S IBDFVAL=$P(^DPT(IBDFVAL,0),"^",1)
	I $D(VAUTN) S IBDFVAL=$P($G(IBDFTMP),"^",1) I IBDFVAL]"" S IBDFVAL=$P(^SC(IBDFVAL,0),"^",1)
	S X=$$SETSTR^VALM1(IBDFVAL,X,17,15)
	S IBDFVAL=$P($G(IBDFTMP),"^",4) I IBDFVAL S VADAT("W")=IBDFVAL D ^VADATE S IBDFVAL=$E(IBDFVAL,4,5)_"/"_$E(IBDFVAL,6,7)_"/"_$E(IBDFVAL,2,3) I $P(VADATE("E"),"@",2)]"" S IBDFVAL=IBDFVAL_"@"_$P(VADATE("E"),"@",2)
	S X=$$SETSTR^VALM1(IBDFVAL,X,34,14)
	S IBDFVAL=$P($G(IBDFTMP),"^",6) I IBDFVAL]"" S IBDFVAL=$E(IBDFVAL,4,5)_"/"_$E(IBDFVAL,6,7)_"/"_$E(IBDFVAL,2,3) S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",2)=+($P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",2))+1
	S X=$$SETSTR^VALM1(IBDFVAL,X,50,10)
	S IBDFVAL=$P($G(IBDFTMP),"^",7) I IBDFVAL]"" S IBDFVAL=$E(IBDFVAL,4,5)_"/"_$E(IBDFVAL,6,7)_"/"_$E(IBDFVAL,2,3) S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",3)=+($P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",3))+1
	S X=$$SETSTR^VALM1(IBDFVAL,X,62,10)
	S IBDFVAL=$P($G(IBDFTMP),"^",12),IBDFVAL=$S(IBDFVAL=1:"PRINTD",IBDFVAL=2:"SCANND",IBDFVAL=3:"OK PCE",IBDFVAL=4:"ER PCE",IBDFVAL=11:"PENDNG",IBDFVAL=12:"NO TRN",1:"NO PRT")
	S X=$$SETSTR^VALM1(IBDFVAL,X,74,6)
	;
	;
TMP	; -- Set up TMP Array
	S ^TMP("FRM",$J,IBDCNT,0)=$$LOWER^VALM1(X),^TMP("FRM",$J,"IDX",VALMCNT,IBDCNT1)=""
	S ^TMP("FRMIDX",$J,IBDCNT1)=VALMCNT_"^"_$P(IBDFTMP,"^",2)_"^"_$P(IBDFTMP,"^",3)_"^"_$P(IBDFTMP,"^",4)_"^"_$P(IBDFTMP,"^",6)_"^"_$P(IBDFTMP,"^",7)_"^"_$P(IBDFTMP,"^",12)
	D NOW^%DTC S IBDFTIME=% S X1=$S($P(IBDFTMP,"^",7):$P(IBDFTMP,"^",7),1:IBDFTIME),X2=$P(IBDFTMP,"^",4) D ^%DTC S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",4)=+($P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",4))+X
	Q

IBDFFT2
IBDFFT2	;ALB/MAF - FORMS TRACKING ; JUL 6 1995@800
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
HEADER	;  -- Set up header line for the division display
	S IBDCNT1=IBDCNT1+1
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBDFDIV(IBDFDV)=IBDCNT
	S X=$$SETSTR^VALM1(" ",X,1,3) D TMP1
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S IBDVAL=IBDFDV
	S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR^VALM1(" ",X,1,IBDVAL1)
	S X=$$SETSTR^VALM1(IBDVAL,X,IBDVAL1,25) D TMP1,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=$$SETSTR^VALM1(" ",X,1,3) D TMP1
	S IBDCNT1=IBDCNT1-1
	Q
TMP1	; -- Set up TMP Array
	S ^TMP("FRM",$J,IBDCNT,0)=X,^TMP("FRM",$J,"IDX",VALMCNT,IBDCNT1)=""
	S ^TMP("FRMIDX",$J,IBDCNT1)=VALMCNT
	Q
	;
	;
HEADER1	;  -- Set up header line for the display
	S IBDCNT1=IBDCNT1+1
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBDFCLIN(IBDFDV,IBDFCL)=IBDCNT
	S X=$$SETSTR^VALM1(" ",X,1,3) D TMP1
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S IBDVAL=IBDFCL
	S X=$$SETSTR^VALM1(IBDVAL,X,1,25) D TMP1,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
	S IBDCNT1=IBDCNT1-1
	Q
NUL	; -- NULL MESSAGE
	S ^TMP("FRM",$J,1,0)=" ",^TMP("FRM",$J,2,0)="There are no encounter forms that meet this criteria.",^TMP("FRMIDX",$J,1)=1,^TMP("FRMIDX",$J,2)=2
	Q

IBDFFV
IBDFFV	;ALB/CMR - AICS FORM VALIDATION ; NOV 22,1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	; -- displays Form Definition values for validation
	;
	N IBDFL,X,Y,I,POP,CALL
	W !!,"AICS Form Validation Report",!!
	S IBDFL=0 ;flag
	D SORT G:IBDFL EXIT
	D DEVICE G:IBDFL EXIT
DQ	; -- entry point from task man
	N IBDFL
	K ^TMP($J,"IBFV"),^TMP($J,"IBDF","UC")
	S IBDFL=0
	D ^IBDFFV1
	I '$D(^TMP($J,"IBFV")) U IO W *7,!,"No forms found!" G EXIT
	D ^IBDFFV2 G EXIT:$G(IBDFOUT)
	I $D(^TMP($J,"IBDF","UC")) D
	.N SORT,FORM,CLIN,HEADER
	.S SORT=$O(^TMP($J,"IBDF","UC","")) Q:SORT']""
	.D HDR
	.I SORT="F" S FORM="" F  S FORM=$O(^TMP($J,"IBDF","UC",SORT,FORM)) Q:FORM']""!($G(IBDFOUT))  D PG(2) Q:$G(IBDFOUT)  W !?5,FORM
	.I SORT="C" S CLIN="" F  S CLIN=$O(^TMP($J,"IBDF","UC",SORT,CLIN)) Q:CLIN']""!($G(IBDFOUT))  D PG(5) Q:$G(IBDFOUT)  W !!,"CLINIC:  ",CLIN D
	..S FORM="" F  S FORM=$O(^TMP($J,"IBDF","UC",SORT,CLIN,FORM)) Q:FORM']""!($G(IBDFOUT))  D PG(2) Q:$G(IBDFOUT)  W !?5,FORM
	.I SORT="D"!(SORT="G") S HEADER="" F  S HEADER=$O(^TMP($J,"IBDF","UC",SORT,HEADER)) Q:HEADER']""!($G(IBDFOUT))  D PG(7) Q:$G(IBDFOUT)  W !!,$S(SORT="G":"GROUP",1:"DIVISION"),":  ",HEADER D
	..S CLIN="" F  S CLIN=$O(^TMP($J,"IBDF","UC",SORT,HEADER,CLIN)) Q:CLIN']""!($G(IBDFOUT))  D PG(5) Q:$G(IBDFOUT)  W !!?5,"CLINIC:  ",CLIN D
	...S FORM="" F  S FORM=$O(^TMP($J,"IBDF","UC",SORT,HEADER,CLIN,FORM)) Q:FORM']""!($G(IBDFOUT))  D PG(2) Q:$G(IBDFOUT)  W !?10,FORM
EXIT	; -- Clean up and quit
	K ^TMP($J,"IBDF","UC"),^TMP($J,"IBFV")
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K ZTSK,ZTDESC,ZTSAVE,ZTRTN,VAUTF,VAUTG,VAUTC,VAUTD,SORT,IBDFOUT
	Q
SORT	; -- determine sort criteria
	S DIR(0)="S^1:FORM;2:CLINIC;3:GROUP;4:DIVISION",DIR("A")="Validate forms by" D ^DIR K DIR
	I $D(DIRUT) S IBDFL=1 Q
	S SORT=Y_U_Y(0),CALL=$S(Y=2:"CLIN",Y=4:"DIV",1:Y(0))
	; -- gather selections for sort chosen
	D @CALL^IBDFUTL
	Q
DEVICE	; -- ask device
	S %ZIS="MQ" D ^%ZIS I POP S IBDLF=1 Q
	I $D(IO("Q")) S ZTRTN="DQ^IBDFFV",ZTDESC="AICS - Form Validation Report",ZTSAVE("VA*")="",ZTSAVE("SORT")="" D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS S IBDFL=1 Q
	U IO
	Q
PG(LEN)	; -- check page length
	; -- LEN equal to length to check for (optional)...will default
	I '$D(LEN) S LEN=2
	Q:$Y+LEN<IOSL
	I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR,DIRUT,DUOUT,DTOUT I 'Y S IBDFOUT=1 Q
	W @IOF
HDR	; -- write out uncompiled forms header
	W !,$$CJ^XLFSTR("ENCOUNTER FORM VALIDATION",IOM)
	W !,$$CJ^XLFSTR("REPORT OF UNCOMPILED FORMS",IOM)
	W !!!,"Validation can only be performed on compiled forms.  To compile a form,",!,"you simply print it."
	W !!!,"The following forms were found to be uncompiled:"
	Q

IBDFFV1
IBDFFV1	;ALB/CMR - AICS FORM VALIDATION ; NOV 24,1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	; -- entry point from IBDFFV
	; -- called to set up ^TMP with forms to be printed
	;
	Q:('$D(VAUTD)&('$D(VAUTG))&('$D(VAUTC))&('$D(VAUTF)))!('$D(SORT))
	D FORM:+SORT=1,CLINIC:+SORT=2,GROUP:+SORT=3,DIV:+SORT=4
	Q
FORM	; -- $O through forms
	;
	N FRM,FORM
	Q:'$D(VAUTF)
	S FRM=0 F  S FRM=$S(VAUTF:$O(^IBE(357,FRM)),1:$O(VAUTF(FRM))) Q:'FRM  S FORM=$P($G(^IBE(357,FRM,0)),U) I FORM]"" S ^TMP($J,"IBFV","F",FORM,FRM)=""
	Q
CLINIC	; -- $O through clinics
	;
	N CLIN
	Q:'$D(VAUTC)
	S CLIN=0 F  S CLIN=$S(VAUTC:$O(^SD(409.95,"B",CLIN)),1:$O(VAUTC(CLIN))) Q:'CLIN  D CLIN
	Q
GROUP	; -- $O through groups
	;
	N GRP,GROUP,CLIN
	Q:'$D(VAUTG)
	S GRP=0 F  S GRP=$S(VAUTG:$O(^IBD(357.99,GRP)),1:$O(VAUTG(GRP))) Q:'GRP  D
	.S GROUP=$P($G(^IBD(357.99,GRP,0)),U)
	.; -- find all clinics associated with group
	.S CLIN=0 F  S CLIN=$O(^IBD(357.99,GRP,10,"B",CLIN)) Q:'CLIN  D CLIN
	Q
DIV	; -- $O through divisions
	;
	N CLIN,DIV
	Q:'$D(VAUTD)
	S CLIN="" F  S CLIN=$O(^SD(409.95,"B",CLIN)) Q:'CLIN  D
	.S DIV=$P($G(^SC(CLIN,0)),U,15) Q:'DIV
	.; -- quit if division for clinic is not a chosen division
	.I 'VAUTD,'$D(VAUTD(DIV)) Q
	.S:+DIV DIV=$P($G(^DG(40.8,+DIV,0)),U) Q:DIV']""
	.D CLIN
	Q
CLIN	; -- set up TMP nodes
	N SETUP,NAME
	S SETUP=$O(^SD(409.95,"B",CLIN,"")) Q:'SETUP
	S NAME=$P($G(^SC(CLIN,0)),U) Q:NAME=""
	I +SORT=2 S ^TMP($J,"IBFV","C",NAME,SETUP)="" Q
	I +SORT=3 S ^TMP($J,"IBFV","G",GROUP,NAME,SETUP)="" Q
	I +SORT=4 S ^TMP($J,"IBFV","D",DIV,NAME,SETUP)="" Q
	Q

IBDFFV2
IBDFFV2	;ALB/CMR - AICS FORM VALIDATION ; NOV 27,1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	; -- entry point from IBDFFV
	; -- called to print out data validation
	;
	Q:'$D(^TMP($J,"IBFV"))
	W:IOST["C-" @IOF
	N SORT,DOT
	S DOT=".",$P(DOT,".",35)=".",SORT=$O(^TMP($J,"IBFV","")) Q:SORT']""
	; -- if sorted by form, gather forms to print
	I SORT="F" N FORM,TYPE,FRM,WRITE D  Q
	.S TYPE=$P($T(TYPE+1),";;",2)
	.S FORM="" F  S FORM=$O(^TMP($J,"IBFV",SORT,FORM)) Q:FORM']""!($G(IBDFOUT))  S FRM=0 F  S FRM=$O(^TMP($J,"IBFV",SORT,FORM,FRM)) Q:'FRM!($G(IBDFOUT))  D PRINT^IBDFFV3(FRM,FORM) I '$G(WRITE) D
	..S ^TMP($J,"IBDF","UC",SORT,FORM)=""
	; -- if sorted by clinic, gather clinics
	I SORT="C" N CLIN,SETUP,CL,DG D  Q
	.S CLIN="" F  S CLIN=$O(^TMP($J,"IBFV",SORT,CLIN)) Q:CLIN']""!($G(IBDFOUT))  S CL="CLINIC:  .."_DOT_"  "_CLIN,DG="",SETUP=0 F  S SETUP=$O(^TMP($J,"IBFV",SORT,CLIN,SETUP)) Q:'SETUP!($G(IBDFOUT))  D CLIN
	; -- if sorted by group, gather groups or divisions and clinics
	I SORT="G"!(SORT="D") N HEADER,CLIN,SETUP,CL,DG D  Q
	.S HEADER="" F  S HEADER=$O(^TMP($J,"IBFV",SORT,HEADER)) Q:HEADER']""!($G(IBDFOUT))  D
	..S CLIN="" F  S CLIN=$O(^TMP($J,"IBFV",SORT,HEADER,CLIN)) Q:CLIN']""!($G(IBDFOUT))  D
	...S DG=$S(SORT="G":"GROUP:  ...",SORT="D":"DIVISION:  ",1:"")
	...I DG]"" S DG=DG_DOT_"  "_HEADER
	...S CL="CLINIC:  .."_DOT_"  "_CLIN
	...S SETUP=0 F  S SETUP=$O(^TMP($J,"IBFV",SORT,HEADER,CLIN,SETUP)) Q:'SETUP!($G(IBDFOUT))  D CLIN
	Q
CLIN	; -- gather forms for clinics
	N NODE,TYPE,FRM,CHECK,WRITE,NAME
	S NODE=$G(^SD(409.95,SETUP,0))
	F I=2:1:9 S FRM=$P(NODE,U,I) I FRM D PRINT^IBDFFV3(FRM,.NAME,I,CL,DG) Q:$G(IBDFOUT)  I '$D(WRITE) D
	.I SORT="C" S ^TMP($J,"IBDF","UC",SORT,CLIN,NAME)="" Q
	.S ^TMP($J,"IBDF","UC",SORT,HEADER,CLIN,NAME)=""
	Q

IBDFFV3
IBDFFV3	;;ALB/CMR - AICS FORM VALIDATION ; FEB 23, 1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
PRINT(FRM,NAME,TYPE,CL,DG)	; -- print validation for each form
	; -- FRM = ien file 357
	; -- NAME (optional) name of form
	; -- TYPE (optional) type of form where:
	; --    1 = FORM
	; --    2 = BASIC DEFAULT FORM
	; --    3 = SUPPLEMENTAL FORM - PATIENT WITH PRIOR VISITS
	; --    4 = SUPPLEMENTAL FORM - FIRST TIME PATIENT
	; --    5 = FORM WITH NO PRE-PRINTED PATIENT DATA
	; --    6 = SUPPLEMENTAL FORM - ALL PATIENTS
	; --    7 = RESERVED FOR FUTURE USE
	; --    8 = SUPPLEMENTAL FORM - ALL PATIENTS
	; --    9 = SUPPLEMENTAL FORM - ALL PATIENTS
	; -- CL (optional) clinic header
	; -- DG (optional) group or division header
	N IEN,BUB,NODE,PG,IBDFFVAL,IBID,IBLABEL,PI,CK,CODE,GROUP
	K WRITE
	Q:'FRM!($G(^IBE(357,FRM,0))']"")
	S PG=0
	I $G(NAME)']"" S NAME=$P(^IBE(357,FRM,0),U)
	I '$G(TYPE) S TYPE=1
	S IEN=$P(^IBE(357,FRM,0),U,13) Q:'IEN!('$D(^IBD(357.95,+IEN)))
	W $$CJ^XLFSTR("ENCOUNTER FORM VALIDATION",IOM),!
	I $G(DG)]"" W !,DG
	I $G(CL)]"" W !,CL
	W !,$P($T(TYPE+TYPE),";;",2),"  ",NAME
	K BUB,HP
	; -- $o through all bubbles
	S BUB=0,GROUP="" F  S BUB=$O(^IBD(357.95,IEN,1,BUB)) Q:'BUB!($G(IBDFOUT))  S NODE=$G(^IBD(357.95,IEN,1,BUB,0)) I NODE]"" D DISP
	K BUB
	S HP=0 F  S HP=$O(^IBD(357.95,IEN,2,HP)) Q:'HP!($G(IBDFOUT))  S NODE=$G(^IBD(357.95,IEN,2,HP,0)) I NODE]"" D DISP
	Q:$G(IBDFOUT)
	D PAGE(100) ;force final page footers
	Q
DISP	; -- display data for each element
	N IBINACT
	N ERR
	; -- write out group subheader if different from previous
	I GROUP'=$P(NODE,U,5) S GROUP=$P(NODE,U,5) D PAGE(8) Q:$G(IBDFOUT)  I '$G(CK) W !!,GROUP,!
	; -- determine errors up front
	S PI=$S($D(BUB):$P(NODE,U,3),$D(HP):$P(NODE,U,4),1:"") I 'PI S ERR("PI")=""
	S DQ=$P(NODE,U,10) I 'DQ,$P($G(^IBE(357.6,+PI,0)),U,19) S ERR("DQ")=""
	K IBID,IBLABEL,IBINACT
	I $D(BUB) S X=$P(NODE,U,4) I X,PI X $G(^IBE(357.6,PI,19)) I $G(IBLABEL)']"" S ERR("CODE")=""
	I $G(IBINACT) S ERR("INACT")=""
	D PAGE(5) Q:$G(IBDFOUT)
	; -- write error flag followed by displayed text
	W ! W:$D(ERR) "*" W ?2,"[ ] ",$S($D(BUB):$P(NODE,U,8),$D(HP):$P(NODE,U,9),1:"") S WRITE=1
	; -- if bubble is dynamic s code accordingly
	I $D(BUB),($G(IBID)']""),($P(NODE,U,11)) S IBID="DYNAMIC",IBLABEL="Value determined at print time"
	I $D(HP) S IBID="HAND PRINT",IBLABEL="Value determined at scan time"
	; -- write return values
	I $G(IBID)]"" W !,?6,IBID,?22,$G(IBLABEL)
	; -- write data qualifiers
	I DQ]"" W !?6,"DATA QUALIFIER",?22,$P($G(^IBD(357.98,DQ,0)),"^")
	I $D(HP),($P(NODE,U,17)) W !?6,"DATA ELEMENT",?22,$P($G(^IBE(359.1,$P(NODE,U,17),0)),U)
	; -- process errors
	I $D(ERR) D ERROR
	Q
ERROR	;gathers errors to write
	I '$D(ERR) Q
	N CNT
	I $D(ERR("PI")) D ERRORS("*** Package Interface is missing ***")
	I $D(ERR("DQ")) D ERRORS("*** Data Qualifier is missing ***")
	I $D(ERR("CODE")) D ERRORS("*** Invalid "_GROUP_" ***")
	I $D(ERR("INACT")) D ERRORS("*** Inactive "_GROUP_" ***")
	Q
ERRORS(ERR)	; -- writes out errors
	I $G(CNT) W !
	I '$G(CNT) W !?6,"ERRORS" S CNT=1
	W ?22,ERR
	Q
PAGE(PL)	; -- check page length
	; -- adds two lines to account for footer
	K CK
	I +PL S PL=PL+2
	I '+PL S PL=5
	Q:$Y+PL<IOSL
	S PG=PG+1,CK=1
	W !!,$$CJ^XLFSTR(PG,IOM)
	I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR,DIRUT,DUOUT,DTOUT I 'Y S IBDFOUT=1 Q
	W @IOF
	I +PL<100 D
	.W !,$$CJ^XLFSTR("ENCOUNTER FORM VALIDATION",IOM)
	.W !!,$P($T(TYPE+TYPE),";;",2),"  ",NAME
	.W !!,GROUP,!
	Q
TYPE	; -- list of form types
	;;FORM:.........................................
	;;BASIC DEFAULT FORM:  .........................
	;;SUPPLEMENTAL FORM - PATIENT WITH PRIOR VISITS:
	;;SUPPLEMENTAL FORM - FIRST TIME PATIENT:  .....
	;;FORM WITH NO PRE-PRINTED PATIENT DATA:  ......
	;;SUPPLEMENTAL FORM - ALL PATIENTS:  ...........
	;;RESERVED FOR FUTURE USE:  ....................
	;;SUPPLEMENTAL FORM - ALL PATIENTS:.............
	;;SUPPLEMENTAL FORM - ALL PATIENTS:............. 

IBDFGRP
IBDFGRP	;ALB/MAF - GROUP COPY - 7/25/95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	N NEWLIST,NEWBLOCK
	S NEWLIST=IBLIST,NEWBLOCK=IBBLK
	N IBBLK,TOP,BOT,IBLIST,IBFORM
	S VALMBCK="R"
	S IBBLK=$$SELECT2()
	Q:'IBBLK
	;
	S DIC("S")="I $P(^(0),U,11)=$P($G(^IBE(357.2,+NEWLIST,0)),U,11)" D SELECT^IBDF3 K DIC
	;
	I '$G(IBLIST) W !!,"Block does not contain same type of selection list '"_$P($G(^IBE(357.6,+$P($G(^IBE(357.2,+NEWLIST,0)),U,11),0)),U)_"'.",! D PAUSE^IBDFU5
	;
	I IBLIST D EN^VALM("IBDF QUICK GRP COPY")
	Q
	;
INIT	; -- init variables and list array
	N IBDCNT,IBDCNT1
	K ^TMP("GRP",$J),^TMP("GRPIDX",$J),IBDFHDR D KILL^VALM10()
	;
	;  -- Set up arrays for new and old selection list definitions in
	;     in file 357.2.  Used to match data with the right subcolum #
	;     when copying selection lists to a form.
	;
	;        - IBDFNEW(SUBCOLUM #) = TYPE OF DATA ..5th piece  (text or code)
	;        - IBDFOLD(SUBCOLUM #) = TYPE OF DATA..5th piece  (text or code)
	D
	.N K,NODE
	.S (IBDFNEW,IBDFOLD)=0
	.I $D(IBLIST) S K=0 D
	..F  S K=$O(^IBE(357.2,IBLIST,2,K)) Q:'K  S NODE=$G(^IBE(357.2,IBLIST,2,K,0)),IBDFOLD(+NODE)=+$P(NODE,"^",5)
	..Q
	.I $D(NEWLIST) S NODE="",K=0 D
	..F  S K=$O(^IBE(357.2,NEWLIST,2,K)) Q:'K  S NODE=$G(^IBE(357.2,NEWLIST,2,K,0)),IBDFNEW(+NODE)=+$P(NODE,"^",5)
	..Q
	S (IBDCNT,IBDCNT1,VALMCNT)=0
	S IBDLSTNM=$P(^IBE(357.2,IBLIST,0),"^",1) D INTER D
	.S IBLSNODE=$G(^IBE(357.2,IBLIST,0))
	.I $D(IBDFAR) F IBDFX=0:0 S IBDFX=$O(@(IBDFAR_"("_IBDFX_")")) Q:'IBDFX  S IBDFARR=$G(@(IBDFAR_"("_IBDFX_")")) D:$P(IBDFARR,"^",1)="" HEADER D:$P(IBDFARR,"^",1)]"" SETARR
	Q:$$LSTDESCR^IBDFU1(.IBLIST) 1
	S IBRTN=IBLIST("RTN")
	D RTNDSCR^IBDFU1B(.IBRTN)
	Q
	;
SETARR	;  -- Set up Listman array
	N IBDFNODE
	S IBDFNODE=IBDFARR
	S IBDFSEL=$P(IBDFNODE,"^",4)
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBDFVAL=$P(IBDFNODE,"^",1)
	S X=$$SETSTR^VALM1(IBDFVAL,X,7,7)
	S IBDFVAL=$P(IBDFNODE,"^",6)
	S X=$$SETSTR^VALM1(IBDFVAL,X,16,5)
	S IBDFVAL=$P(IBDFNODE,"^",2)
	S X=$$SETSTR^VALM1(IBDFVAL,X,23,40)
	S IBDFVAL=$P(^IBE(357.4,$P(IBDFNODE,"^",5),0),"^",1)
	S X=$$SETSTR^VALM1(IBDFVAL,X,64,15)
TMP	; -- Set up TMP Array
	S ^TMP("GRP",$J,IBDCNT,0)=X,^TMP("GRP",$J,"IDX",VALMCNT,IBDCNT1)=IBDFSEL
	S ^TMP("GRPIDX",$J,IBDCNT1)=VALMCNT_"^"_$P(IBDFARR,"^",3)_"^"_$P(IBDFARR,"^",4)_"^"_$P(IBDFARR,"^",5) ;_"^"_IBDFX_"^"_$P(IBDFTMP,"^",4)_"^"_$P(IBDFTMP,"^",5)_"^"_$P(IBDFTMP,"^",1)_"^"_$P(IBDFTMP,"^",2)
	Q
HEADER	;  -- Set up header line for the display
	S IBDCNT1=IBDCNT1+1
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBDVAL=$S($P(IBDFARR,"^",2)]"":$P(IBDFARR,"^",2),1:"BLANK")
	S IBDFHDR(IBDVAL)=IBDCNT1_"^"_$P(IBDFARR,"^",5)
	S IBDFSEL=$P(IBDFARR,"^",5)
	S X=$$SETSTR^VALM1(IBDCNT1_")",X,1,5) D TMP
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S IBDVAL=$P(IBDFARR,"^",6)
	S X=$$SETSTR^VALM1(IBDVAL,X,16,5)
	S IBDVAL=$P(IBDFARR,"^",2)
	S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR^VALM1(" ",X,22,IBDVAL1)
	S X=$$SETSTR^VALM1(IBDVAL,X,IBDVAL1,25) D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=$$SETSTR^VALM1(" ",X,1,3) D TMP
	Q
INTER	;  -- Find Package interface for selection list
	K IBARRY S IBDFAR="IBARRY",IBDFINT=$P($G(^IBE(357.2,IBLIST,0)),"^",11),IBDFINT(1)=$P(^IBE(357.6,IBDFINT,0),"^",1) D GETLST^IBDFQSL2(IBFORM,IBBLK,IBLIST,.IBDFINT,"IBARRY",1)
	Q
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
EXIT	; -- exit code
	K IBARRY,IBDFAR,IBDFARR,IBDFHDR,IBDFINT,IBDFSEL,IBDFVAL,IBDFX,IBDLSTNM,IBDVAL,IBDVAL1,IBLIST,IBRTN,IEN,IBLSNODE,DIC,IBGRP,NODE,IBDFNEW,IBDFOLD
	K ^TMP("SEL",$J),^TMP("SELIDX",$J)
	Q
	;
EXPND	; -- expand code
	Q
	;
GRPCOPY	;  -- COPY GROUP
	N IBDVALM,GRP,VALMY,FROM,TO,IBDFCPYE
	S IBDFCPYF=1
	S (FROM,TO)="357.4"
	S VALMBCK=""
	D SEL^VALM2
	I $O(VALMY(0)) D
	.S IBDVALM=0
	.D FULL^VALM1 S VALMBCK="R"
	.F IBDVALM=0:0 S IBDVALM=$O(VALMY(IBDVALM)) Q:'IBDVALM  S (DA,GRP)=$P($G(^TMP("GRPIDX",$J,IBDVALM)),"^",4) D COPYGRP^IBDFU2A(GRP,IBLIST,NEWLIST,NEWBLOCK,FROM,TO)
	K IBDFCPYF
	Q
SELECT2()	;allows the user to select a form, then a block from it
	S IBBLK=""
	S IBFORM=$$SLCTFORM^IBDFU4(0)
	I IBFORM D
	.W !!,"NOW CHOOSE THE BLOCK TO COPY!",!
	.S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,IOSL)
	Q IBBLK

IBDFHLP
IBDFHLP	;MAF/ALB - HELP CODE FOR SPECIAL INSTRUCTIONS  ; 06-OCT-1994
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
EN	; -- main entry point for IBDF EF HELP SPEC INSTR.
	D EN^VALM("IBDF EF HELP SPEC INSTR.")
	Q
	;
HDR	; -- header code
	Q
	;
INIT	; -- init variables and list array
	S (VALMCNT,IBJCNT,IBJCNT1,IBJCOUNT)=0
	K ^TMP("IBDFHP",$J)
	F IBJX=1:1 S IBJVAL=$P($T(DISP+IBJX),";;",2) Q:IBJVAL="END"  S X="",X=$$SETSTR^VALM1(IBJVAL,X,5,75) D TMP
	Q
	;
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
EXIT	; -- exit code
	K ^TMP("IBDFHP",$J),^TMP("HPIDX",$J) Q
	;
EXPND	; -- expand code
	Q
	;
DISP	;Help frame for Special Instructions
	;;  The choices for Special Instructions are:
	;;
	;;                R - Run Regardless
	;;                I - Ignore both Weekends and Holidays
	;;                W - Ignore Weekends
	;;                H - Ignore Holidays
	;;                T - Today
	;;                N - Not Active
	;;
	;;
	;; R - Run Regardless ... The print job will run daily at the scheduled time.
	;;
	;; I - Ignore Weekends and Holidays... The print job will not run at it's
	;;     daily scheduled time if the day is a holiday or a weekend day.
	;;
	;; W - Ignore Weekends... The print job will not run at it's daily scheduled
	;;     time if the day is a weekend day.
	;;
	;; H - Ignore Holidays... The print job will not run at it's daily scheduled 
	;;     time if the day is a holiday.
	;;
	;; T - Today... The job will run today.
	;;
	;; N - Not Active... The job is considered inactive and the encounter forms
	;;     will not be printed.
	;;END
TMP	S IBJCNT=IBJCNT+1,IBJCNT1=IBJCNT1+1,VALMCNT=VALMCNT+1 S ^TMP("IBDFHP",$J,IBJCNT,0)=X,^TMP("IBDFHP",$J,"IDX",VALMCNT,IBJCNT)=""
	S ^TMP("HPIDX",$J,IBJCNT)=VALMCNT
	Q

IBDFLST
IBDFLST	;ALM/MAF - Maintenance Utility Invalid Codes List - MAY 17 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
START	;  -- Ask what invalid code you want to display CPT/ ICD9/ Visit
	N IBDFDIS
	D FULL^VALM1
	W !!,"Display invalid codes for CPT// " D ZSET1^IBDFLST1 S X="" R X:DTIME G QUIT:X="^"!('$T) I X=""!("Cc"[X) S X="1"
	S X=$S("Ii"[X:2,"Vv"[X:3,1:X)
	I X="?" D ZSET1^IBDFLST1,HELP1^IBDFLST1 G START
	S IBDFTYP=$E(X) D IN^DGHELP W ! I %=-1 D ZSET1^IBDFLST1,HELP1^IBDFLST1 G START
	S IBDFDIS=$S(IBDFTYP=1:"CPT",IBDFTYP=2:"ICD9",IBDFTYP=3:"VISIT",1:"QUIT")
	D WAIT^DICD
	D EN^VALM("IBDF UTIL COMPLETE LIST TEMP")
	Q
	;
	;
HDR	; -- header code
	S VALMHDR(1)="This screen displays the most current invalid codes for the "_IBDFDIS_" file."
	Q
	;
	;
SETSTR(S,V,X,L)	; -- insert text(S) into variable(V)
	;    S := string
	;    V := destination
	;    X := @ col X
	;    L := # of chars
	;
	Q $E(V_$J("",X-1),1,X-1)_$E(S_$J("",L),1,L)_$E(V,X+L,999)
	;
	;
INIT	;  -- Set up list for display
	N IBDFCODE,IBDFDESC,IBDFIFN,IBDFCAT
	S (IBDCNT,VALMCNT,IBDCNT1)=0
	D @(IBDFDIS)
	Q
	;
	;  -- Gets CPT listing of invalid codes
CPT	D FULL^VALM1 F IBDFIFN=0:0 S IBDFIFN=$O(^ICPT(IBDFIFN)) Q:'IBDFIFN  S IBDFNODE=$G(^ICPT(IBDFIFN,0)) I $P(IBDFNODE,"^",4)]"" D
	.S IBDFCODE=$P(IBDFNODE,"^",1),IBDFDESC=$P(IBDFNODE,"^",2),IBDFCAT=$S($P(IBDFNODE,"^",3)]"":$P(^DIC(81.1,$P(IBDFNODE,"^",3),0),"^",1),1:"UNKNOWN") D ALPHA
	D LOOP
	Q
	;
	;  -- Gets ICD9 listing onf invalid codes
ICD9	F IBDFIFN=0:0 S IBDFIFN=$O(^ICD9(IBDFIFN)) Q:'IBDFIFN  S IBDFNODE=$G(^ICD9(IBDFIFN,0)) I $P(IBDFNODE,"^",9)]"" D
	.S IBDFCODE=$P(IBDFNODE,"^",1),IBDFDESC=$P(IBDFNODE,"^",3),IBDFCAT=$S($P(IBDFNODE,"^",5)]""&($G(^ICM(+$P(IBDFNODE,"^",5),0))]""):$P(^ICM($P(IBDFNODE,"^",5),0),"^",1),1:"UNKNOWN") D ALPHA
	D LOOP
	Q
	;
	;
VISIT	;  -- Gets visit code listing of invalid codes
	N IEN
	F IBDFVST=0:0 S IBDFVST=$O(^IBE(357.69,"B",IBDFVST)) Q:'IBDFVST  S IEN=$O(^IBE(357.69,"B",IBDFVST,0)) I IEN I $D(^ICPT("B",IBDFVST)) S IEN=$O(^ICPT("B",IBDFVST,0)) I IEN I $P($G(^ICPT(IEN,0)),"^",4) D
	.S IBDFIFN=IEN
	.S IBDFNODE=$G(^ICPT(IBDFIFN,0))
	.S IBDFCODE=$P(IBDFNODE,"^",1),IBDFDESC=$P(IBDFNODE,"^",2),IBDFCAT=$S($P(IBDFNODE,"^",3)]"":$P(^DIC(81.1,$P(IBDFNODE,"^",3),0),"^",1),1:"UNKNOWN") D ALPHA
	D LOOP
	Q
	;
	;
LOOP	;  -- Loop thru global ^TMP("ALPHA",$J) alphabetic by category
	S IBDFCAT=0
	F IBDCAT=0:0 S IBDFCAT=$O(^TMP("ALPHA",$J,IBDFCAT)) Q:IBDFCAT']""  F IBDFIFN=0:0 S IBDFIFN=$O(^TMP("ALPHA",$J,IBDFCAT,IBDFIFN)) Q:'IBDFIFN  S IBDFNODE=$G(^TMP("ALPHA",$J,IBDFCAT,IBDFIFN)) D
	.S IBDFIFN=$P(IBDFNODE,"^",1)
	.S IBDFCODE=$P(IBDFNODE,"^",2)
	.S IBDFCAT=$P(IBDFNODE,"^",3)
	.S IBDFDESC=$P(IBDFNODE,"^",4)
	.D:'$D(IBDFC(IBDFCAT)) HEADER^IBDFLST1 D SET
	Q
	;
	;
SET	;  -- Set up list array
	S IBDCNT1=IBDCNT1+1
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBDFVAL=$J(IBDCNT1_")",5)
	S X=$$SETSTR(IBDFVAL,X,1,5)
	S IBDFVAL=IBDFCODE
	S X=$$SETSTR(IBDFVAL,X,7,8)
	S IBDFVAL=IBDFDESC
	S X=$$SETSTR(IBDFVAL,X,17,20)
	S IBDFVAL=IBDFCAT
	S X=$$SETSTR(IBDFVAL,X,39,20)
	;
	;
TMP	; -- Set up Array
	S ^TMP("CODE",$J,IBDCNT,0)=$$LOWER^VALM1(X),^TMP("CODE",$J,"IDX",VALMCNT,IBDCNT1)=""
	S ^TMP("CODEIDX",$J,IBDCNT1)=VALMCNT_"^"_IBDFIFN_"^"_IBDFCODE_"^"_IBDFCAT_"^"_IBDFDESC
	Q
	;
	;
ALPHA	;  - Alphabetize by category
	S ^TMP("ALPHA",$J,IBDFCAT,IBDFIFN)=IBDFIFN_"^"_IBDFCODE_"^"_IBDFCAT_"^"_IBDFDESC
	Q
	;
	;
QUIT	;  -- Kill variables and reset to last display if no change has been taken place.
	;
	;
EXIT	K ^TMP("CODE",$J),^TMP("CODEIDX",$J),^TMP("ALPHA",$J)
	K IBDFC,IBDFTYP,IBDFCNT1,IBDCAT
	Q
	;
	;
JUMP	; -- Jump action to display a specific category on the screen.
	D FULL^VALM1
	I $D(XQORNOD(0)),$P(XQORNOD(0),"^",4)]"" S X=$P(XQORNOD(0),"^",4) S X=$P(X,"=",2) I X]"" D:X?1.6N JSEL S DIC=$S(IBDFDIS="ICD9":"^ICM(",1:"^DIC(81.1,"),DIC(0)="QEZ" D ^DIC K DIC G:Y<0 JMP S Y=+Y D JUMP1 Q
JMP	S DIC=$S(IBDFDIS="ICD9":"^ICM(",1:"^DIC(81.1,"),DIC(0)="AEMN",DIC("A")="Select "_$S(IBDFDIS="ICD9":"ICD9",1:"CPT")_" category you wish to move to: "
	D ^DIC K DIC
	I X["^" S VALMBG=1,VALMBCK="R" Q
	;
	;
JUMP1	I Y<0 G JUMP
	N IBDFCAT
	S IBDFCAT=$S(IBDFDIS="ICD9":$P(^ICM(+Y,0),"^",1),1:$P(^DIC(81.1,+Y,0),"^",1))
	I '$D(IBDFC(IBDFCAT)) W !!,"There is no data listed for this Clinic Group" G JMP
	S VALMBG=+IBDFC(IBDFCAT) S VALMBCK="R" Q
	Q
	;
	;
JSEL	; -- Convert number selected to name
	S IBDVALM=X I $D(^TMP("CGIDX",$J,IBDVALM)) S X=$P(^TMP("CGIDX",$J,IBDVALM),"^",2),X=$P(^IBD(357.99,X,0),"^",1)
	Q

IBDFLST1
IBDFLST1	;ALM/MAF - Maintenance Utility Invalid Codes List - MAY 17 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
HEADER	;  -- Set up header line for the display
	S IBDCNT1=IBDCNT1+1
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBDFC(IBDFCAT)=IBDCNT_"^"_IBDFIFN
	S X=$$SETSTR(" ",X,1,3) D TMP
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S IBDVAL=IBDFCAT
	S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR(" ",X,1,IBDVAL1)
	S X=$$SETSTR(IBDVAL,X,IBDVAL1,25) D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=$$SETSTR(" ",X,1,3) D TMP
	S IBDCNT1=IBDCNT1-1
	Q
	;
	;
SETSTR(S,V,X,L)	; -- insert text(S) into variable(V)
	;    S := string
	;    V := destination
	;    X := @ col X
	;    L := # of chars
	;
	Q $E(V_$J("",X-1),1,X-1)_$E(S_$J("",L),1,L)_$E(V,X+L,999)
	;
	;
TMP	; -- Set up Array
	S ^TMP("CODE",$J,IBDCNT,0)=$$LOWER^VALM1(X),^TMP("CODE",$J,"IDX",VALMCNT,IBDCNT1)=""
	S ^TMP("CODEIDX",$J,IBDCNT1)=VALMCNT_"^"_IBDFIFN_"^"_IBDFCODE_"^"_IBDFCAT_"^"_IBDFDESC
	Q
	;
	;  -- Help code for display choices
HELP1	W !!,"Choose a number or first initial :" F K=2:1:4 W !?15,$P(Z,"^",K)
	W ! Q
	;
	;  -- Selections listed
ZSET1	S Z="^1 [C]PT^2 [I]CD9^3 [V]ISIT^" Q
	;
	;

IBDFM1
IBDFM1	;ALB/CJM - ENCOUNTER FORM (compiling bubbles and hand print fields);3/1/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
DRWBBL(ROW,COL,PI,VALUE,FNAME,FID,ALLOWED,DISPLAY,HDR,QLFR,DYN,CNT,SUBHDR)	;
	;returns "" if no bubble created, else the ien
	;
	N BUBBLE
	S DISPLAY=$E(DISPLAY,1,80),HDR=$E(HDR,1,40)
	S DYN=+$G(DYN),CNT=+$G(CNT)
	;
	;don't want to associate a value with the bubble if there is no input interface for the type of data
	I 'PI S VALUE=""
	;
	;compiling blocks?
	I IBPRINT("COMPILING_BLOCKS") D CMPBBL Q:'IBPRINT("WRITE_IF_COMPILING")
	;
	;don't draw a bubble if in the list processor
	Q:IBDEVICE("LISTMAN")
	;
	;add the offsets for the block to position
	S ROW=ROW+IBBLK("Y"),COL=COL+IBBLK("X")
	;
	;might not be creating a FORM DEFINITION TABLE - case of toolkit form
	I IBFORM("TOOLKIT") S @IBARRAY("BUBBLES")@(ROW,COL)="" Q
	;
	;case of FORM DEFINITION TABLE being created - all forms but toolkit
	Q:IBFORM("COMPILED")="F"  ;something already went wrong
	I IBFORM("TYPE") I $D(^IBD(357.95,IBFORM("TYPE"),0))
	E  S IBFORM("TYPE")=$$NEWTABLE(.IBFORM)
	I 'IBFORM("TYPE") D UNCMPL^IBDF19(.IBFORM,1) Q
	;
	;add the bubble to the table
	K DIC,D0,DINUM,DD S DIC="^IBD(357.95,"_IBFORM("TYPE")_",1,",X=ROW,DA(1)=IBFORM("TYPE"),DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S BUBBLE=$S(+Y<0:"",1:+Y)
	I 'BUBBLE D UNCMPL^IBDF19(.IBFORM,1) Q
	I BUBBLE D
	.D INPUT^IBDFU91(PI,.VALUE) I '$D(VALUE) S VALUE=""
	.S ^IBD(357.95,IBFORM("TYPE"),1,BUBBLE,0)=ROW_"^"_COL_"^"_PI_"^"_VALUE_"^"_$G(FNAME)_"^"_FID_"^"_ALLOWED_"^"_DISPLAY_"^"_HDR_"^"_QLFR_"^"_DYN_"^"_CNT
	.I $L($G(SUBHDR)) S ^IBD(357.95,IBFORM("TYPE"),1,BUBBLE,1)=$E(SUBHDR,1,250)
	.K DIK,DA S DIK="^IBD(357.95,"_IBFORM("TYPE")_",1,",DA=BUBBLE,DA(1)=IBFORM("TYPE") D IX1^DIK K DIK,DA
	Q
	;
NEWTABLE(IBFORM)	;creates a new FORM DEFINITION table
	;returns the ien of the table created, "" if not created
	N NODE,SUB,CNT
	S IBFORM("TYPE")=$$FORMTYPE^IBDF18D(1)
	Q:'IBFORM("TYPE")
	S NODE=$G(^IBE(357,IBFORM,0))
	S $P(^IBD(357.95,IBFORM("TYPE"),0),"^",9,19)=$P(NODE,"^",9,19) ;not all  19 pieces may exist
	S $P(^IBD(357.95,IBFORM("TYPE"),0),"^",20,21)=DT_"^"_IBFORM
	S $P(^IBE(357,IBFORM,0),"^",13)=IBFORM("TYPE")
	S (CNT,SUB)=0 F  S SUB=$O(^IBE(357,IBFORM,2,SUB)) Q:'SUB  S NODE=$G(^IBE(357,IBFORM,2,SUB,0)) Q:('+NODE)!('$P(NODE,"^",2))  S CNT=CNT+1,^IBD(357.95,IBFORM("TYPE"),3,CNT,0)=+NODE_"^1",^IBD(357.95,IBFORM("TYPE"),3,"B",+NODE,CNT)=""
	S $P(^IBD(357.95,IBFORM("TYPE"),3,0),"^",3,4)=CNT_"^"_CNT
	Q IBFORM("TYPE")
	;
CMPBBL	;save compiled bubbles for the block
	S IBWRTCNT("B")=IBWRTCNT("B")+1
	S ^IBE(357.1,IBBLK,"B",IBWRTCNT("B"),0)=ROW_"^"_COL_"^"_PI_"^"_VALUE_"^"_FNAME_"^"_FID_"^"_ALLOWED_"^"_DISPLAY_"^"_HDR_"^"_QLFR_"^"_DYN_"^"_CNT
	I $L($G(SUBHDR)) S ^IBE(357.1,IBBLK,"B",IBWRTCNT("B"),1)=$E(SUBHDR,1,250)
	Q
	;
CMPHAND	;save compiled hand print fields for the block
	S IBWRTCNT("H")=IBWRTCNT("H")+1
	S ^IBE(357.1,IBBLK,"H",IBWRTCNT("H"),0)=ROW_"^"_COL_"^"_WIDTH_"^"_PI_"^^"_LINES_"^"_FID_"^"_FNAME_"^"_HDR_"^"_QLFR_"^^"_ITEM_"^^"_PRINT_"^"_READ_"^^"_TYPEDATA
	Q
	;
DRWHAND(ROW,COL,WIDTH,PI,LINES,FID,FNAME,HDR,QLFR,ITEM,PRINT,READ,TYPEDATA)	;creates hand print field
	N NODE
	S NODE=""
	;
	S ITEM=$G(ITEM),PRINT=$G(PRINT),READ=$G(READ),TYPEDATA=$G(TYPEDATA)
	;returns "" if no hand print field created, else the ien
	Q:('$D(ROW))!('$D(COL))
	N HANDPRNT
	S HDR=$E(HDR,1,40)
	;
	;compiling blocks?
	I IBPRINT("COMPILING_BLOCKS") D CMPHAND Q:'IBPRINT("WRITE_IF_COMPILING")
	;
	;don't draw hand print field if in the list processor
	Q:IBDEVICE("LISTMAN")
	;
	;add the offsets for the block to position
	S ROW=ROW+IBBLK("Y"),COL=COL+IBBLK("X")
	;
	;might not be creating a FORM DEFINITION TABLE - case of toolkit form
	I IBFORM("TOOLKIT") D  Q
	.N CNT S CNT=+$G(@IBARRAY("HAND_PRINT"))+1
	.S @IBARRAY("HAND_PRINT")@(ROW,COL,CNT)=ROW_"^"_COL_"^"_WIDTH_"^"_PI_"^"_FNAME_"^"_LINES_"^^"_FID_"^"_HDR_"^"_QLFR_"^^"_ITEM_"^^"_PRINT_"^"_READ_"^^"_TYPEDATA
	;
	;case of FORM DEFINITION TABLE being created - all forms but toolkit
	Q:IBFORM("COMPILED")="F"  ;something already went wrong
	I IBFORM("TYPE") I $D(^IBD(357.95,IBFORM("TYPE"),0))
	E  S IBFORM("TYPE")=$$NEWTABLE(.IBFORM)
	;if 'IBFORM("TYPE") want to recompile this next time around
	I 'IBFORM("TYPE") D UNCMPL^IBDF19(.IBFORM,1) Q
	;
	;add the handprint field to the table
	K DIC,D0,DINUM,DD S DIC="^IBD(357.95,"_IBFORM("TYPE")_",2,",X=ROW,DA(1)=IBFORM("TYPE"),DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S HANDPRNT=$S(+Y<0:"",1:+Y)
	I 'HANDPRNT D UNCMPL^IBDF19(.IBFORM,1) Q
	I HANDPRNT D
	.S ^IBD(357.95,IBFORM("TYPE"),2,HANDPRNT,0)=ROW_"^"_COL_"^"_WIDTH_"^"_PI_"^"_FNAME_"^"_LINES_"^^"_FID_"^"_HDR_"^"_QLFR_"^^"_ITEM_"^^"_PRINT_"^"_READ_"^^"_TYPEDATA
	.K DIK,DA S DIK="^IBD(357.95,"_IBFORM("TYPE")_",2,",DA=HANDPRNT,DA(1)=IBFORM("TYPE") D IX1^DIK K DIK,DA
	Q
	;
TRACKBBL(FID,COUNT,QLFR,PI,DISPLAY,VALUE)	;
	;IBPFID, the id in form tracking, should be defined
	;
	;N SUB,NODE
	;S NODE=$G(^IBD(357.96,IBPFID,1,0))
	;S SUB=$P(NODE,"^",3)
	;S SUB=SUB+1,$P(NODE,"^",3,4)=SUB_"^"_SUB
	;D INPUT^IBDFU91(PI,.VALUE) I '$D(VALUE) S VALUE=""
	;S ^IBD(357.96,IBPFID,1,SUB,0)=COUNT_"^^"_PI_"^"_VALUE_"^^"_FID_"^^"_DISPLAY_"^^"_QLFR
	;S ^IBD(357.96,IBPFID,1,0)=NODE
	;K DIK,DA S DIK="^IBD(357.96,IBPFID,1,",DA=SUB,DA(1)=IBPFID D IX^DIK K DIK,DA
	D INPUT^IBDFU91(PI,.VALUE) I '$D(VALUE) S VALUE=""
	S DIC="^IBD(357.96,IBPFID,1,",DIC(0)="L",DIC("P")=$P(^DD(357.96,1,0),"^",2),DA(1)=IBPFID,X=COUNT,DLAYGO=357.96,DIC("DR")=".03////^S X=PI;.04////^S X=VALUE;.06////^S X=FID;.08////^S X=DISPLAY;.1////^S X=QLFR"
	K DD,DO D FILE^DICN K DIC,DA,DLAYGO,DD,DO
	Q

IBDFN
IBDFN	;ALB/CJM - ENCOUNTER FORM - INTERFACE ROUTINES ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
VADPT	;returns patient demographic data
	;input variables - DFN
	N ARY
	S ARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN))"
	D DEM^VADPT
	I VAERR S (@ARY@("DPT PATIENT'S NAME"),@ARY@("DPT PATIENT'S DOB/AGE"),@ARY@("DPT PATIENT'S SEX"),@ARY@("DPT PATIENT'S PID"),@ARY@("DPT PATIENT'S MARITAL STATUS"))=""  Q
	S @ARY@("DPT PATIENT'S NAME")=VADM(1),@ARY@("DPT PATIENT'S SEX")=$P(VADM(5),"^",2)_"^"_$E($P(VADM(5),"^",2)),@ARY@("DPT PATIENT'S DOB/AGE")=$P(VADM(3),"^",2)_"^"_VADM(4),@ARY@("DPT PATIENT'S PID")=VA("PID")
	S @ARY@("DPT PATIENT'S MARITAL STATUS")=$P(VADM(10),"^",2)
	K VADM,VA,VAERR,VAEL
	Q
EMPLMNT	;returns patient's employment status
	;input variables - DFN
	D OPD^VADPT
	I VAERR S @IBARY=""  Q
	S @IBARY=$P(VAPD(7),"^",2)
	K VAPD,VA,VAERR,VAEL
	Q
	;
DATE(Y)	; Y=date in FM form, this function translates the date to its 
	;external form
	D DD^%DT
	Q Y
	Q
	;
ELIG	;for output of eligibility information & service connected conditions
	N COUNT,ARY,VAEL,VAERR,NODE0,COND,DESCR,PERC,EC,VASV,DATA,I,SARY
	S ARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN))"
	S SARY="^TMP(""IB"",$J,""INTERFACES"")"
	D ELIG^VADPT
	I VAERR F I=1:1:6 S VAEL(I)=""
	S PERC=$P(VAEL(3),"^",2),PERC=$S(PERC="":"",1:$J(PERC,3,0))
	S @ARY@("DPT PATIENT ELIGIBILITY DATA")=$P(VAEL(1),"^",2)_"^"_$P(VAEL(2),"^",2)_"^"_$S(VAEL(3):"YES",VAEL(3)=0:"NO",1:"")_"^"_$S(VAEL(4):"YES",VAEL(4)=0:"NO",1:"")_"^"_$S(VAEL(5):"YES",VAEL(5)=0:"NO",1:"")_"^"_$P(VAEL(6),"^",2)_"^"_PERC
	S @ARY@("DPT SC HIDDEN LABELS")=$S(((+VAEL(3))!($O(^DPT(DFN,.372,0)))):"%^% - SERVICE CONNECTED^SERVICE CONNECTED:^SC CONDITIONS:^S/C",1:"  ^  ^  ^  ^  ")
	I $O(^DPT(DFN,.372,0)),VAEL(4)!$P($G(^DG(391,+VAEL(6),0)),"^",2) S (COUNT,COND)=0 F  S COND=$O(^DPT(DFN,.372,COND)) Q:COND=""  D
	.S NODE0=$G(^DPT(DFN,.372,COND,0)) Q:'$P(NODE0,"^",3)  S DESCR=$G(^DIC(31,+NODE0,0)),COUNT=COUNT+1
	.S PERC=$P(NODE0,"^",2),PERC=$S(PERC="":"",1:$J(PERC,3,0))
	.S @SARY@("DPT PATIENT'S SC CONDITIONS",COUNT)=$S($P(DESCR,"^",4)'="":$P(DESCR,"^",4),1:$P(DESCR,"^",1))_"^"_PERC_"^"_PERC_"%"_"^"_PERC_"%SC"_"^"_PERC_"% - SERVICE CONNECTED"
	;
	;get service data
	D SVC^VADPT
	I VAERR S DATA="^^^^"
	E  S DATA=$S(VASV(1):"YES",1:"NO")_"^"_$S(VASV(2):"YES",1:"NO")_"^"_$S(VASV(3):"YES",1:"NO")_"^"_$S(VASV(4):"YES",1:"NO")_"^"_$S(VASV(5):"YES",1:"NO")
	;
	;get the persian gulf indicator - not returned by VADPT
	S EC=$P($G(^DPT(DFN,.322)),"^",13)
	S @ARY@("DPT SERVICE HISTORY RELATED DATA")=DATA_"^"_$S(EC="Y":"YES",1:"NO")
	;
	;displays questions concerning treatment related to service only
	;if they apply
	;
	S DATA=$S(VAEL(3):"Was treatment for a SC condition? __ YES __ NO",1:"")_"^"
	S DATA=DATA_$S(VASV(2):"Was treatment related to exposure to Agent Orange? __ YES __ NO",1:"")_"^"
	S DATA=DATA_$S(VASV(3):"Was treatment related to exposure to Ionization Radiation? __ YES __ NO",1:"")
	S @ARY@("DPT SC TREATMENT QUESTIONS")=DATA
	;
	;note: must store the 4th question in an annex node
	S DATA="^^^"_$S(EC="Y":"Was treatment related to exposure to Environmental Contaminants? __ YES __ NO",1:"")_"^"
	I VASV(2)!VASV(3)!(EC="Y") D
	.S DATA=DATA_"Was treatment related to: "_$S(VASV(2):"AO __ ",1:"")_$S(VASV(3):"IR __ ",1:"")_$S(EC="Y":"EC __",1:"")
	E  S DATA=DATA_" "
	S @ARY@("DPT SC TREATMENT QUESTIONS",1)=DATA
	Q
	;
BLANKS	;returns NOTHING for printing blank lines
	S @IBARY=""
	Q
LABELS	;returns NOTHING for printing labels only, ie, no data
	S @IBARY=""
	Q

IBDFN1
IBDFN1	;ALB/CJM - ENCOUNTER FORM - INTERFACE ROUTINES ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
CLINIC	;returns clinic name
	S @IBARY=$S($G(IBCLINIC):$P($G(^SC(IBCLINIC,0)),"^",1),1:"UNSPECIFIED")
	Q
DIVISION	;returns the name of the division of IBCLINIC in ien^name format
	Q:'$G(IBCLINIC)
	S @IBARY=$P($$DIVISION^IBDF1B5(+IBCLINIC),"^",2)
	Q
INST	;returns the name of the institution of IBCLINIC
	Q:'$G(IBCLINIC)
	N INST
	S INST=$P($G(^SC(IBCLINIC,0)),"^",4)
	I 'INST S INST=+$$DIVISION^IBDF1B5(+IBCLINIC) S:INST INST=$P($G(^DG(40.8,INST,0)),"^",7)
	S:INST INST=$P($G(^DIC(4,INST,0)),"^")
	S @IBARY=INST
	Q
	;
SAMEDAY	;get all future, same day appts
	N TO
	S TO=(IBAPPT\1)+.999999
	D GETAPPTS(TO)
	Q
	;
ALLFUTR	;get all future appts
	D GETAPPTS()
	Q
	;
CLNCFUTR	;get all future appts for the same clinic
	Q:'$G(IBCLINIC)
	D GETAPPTS("",IBCLINIC)
	Q
	;
GETAPPTS(TO,CLINIC)	;
	Q:'$G(DFN)!('$G(IBAPPT))
	N CNT,SUB,NODE,TIME
	K VASD,VADPT
	S VASD("F")=IBAPPT
	S:$G(TO) VASD("T")=TO
	S:$G(CLINIC) VASD("C",CLINIC)=""
	D SDA^VADPT
	I '$G(VAERR) S (SUB,CNT)=0 F  S SUB=$O(^UTILITY("VASD",$J,SUB)) Q:'SUB  D
	.S NODE=$G(^UTILITY("VASD",$J,SUB,"E")) Q:NODE=""
	.S CNT=CNT+1
	.S TIME=$P(NODE,"^",1)
	.S @IBARY@(CNT)=$P(TIME,"@",1)_"^"_$P(TIME,"@",2)_"^"_NODE
	K ^UTILITY("VASD",$J),VADPT,VASD,VAERR
	Q

IBDFN10
IBDFN10	;ALB/AAS - ENCOUNTER FORM - (selection routines - mostly for PCE files) ; 5-Jun-95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;; -- Routine Modified in support of DATA CAPTURE project
	;
LOOK(DIC,SCREEN)	; -- Look up entry
	I +$G(DIC)<1 Q
	S DIC(0)="AEMQZ",DIC("S")=$G(SCREEN) D ^DIC K DIC
	Q
	;
EDTOP	; -- select Education Topics (from file 9999999.09)
	N X,Y,SCREEN
	I '$D(@IBARY@("SCREEN")) D EDSCRN
	S SCREEN=$G(@IBARY@("SCREEN"))
	D LOOK(9999999.09,SCREEN) I +Y<1 K @IBARY Q  ;kill if nothing selected
	S @IBARY=+Y_"^"_$P(Y(0),"^",1,2)
	Q
EDSCRN	;
	S @IBARY@("SCREEN")="I '$P(^(0),U,3)"
	Q
	;
IMM	; -- select Immunizations (from file 9999999.14)
	N X,Y,SCREEN
	I '$D(@IBARY@("SCREEN")) D IMSCRN
	S SCREEN=$G(@IBARY@("SCREEN"))
	D LOOK(9999999.14,SCREEN) I +Y<1 K @IBARY Q  ;kill if nothing selected
	S @IBARY=+Y_"^"_$P(Y(0),"^",1,3)
	Q
IMSCRN	;
	S @IBARY@("SCREEN")=""
	Q
	;
EXAM	; -- select Exams (from file 9999999.15)
	N X,Y,SCREEN
	I '$D(@IBARY@("SCREEN")) D EXSCRN
	S SCREEN=$G(@IBARY@("SCREEN"))
	D LOOK(9999999.15,SCREEN) I +Y<1 K @IBARY Q  ;kill if nothing selected
	S @IBARY=+Y_"^"_$P(Y(0),"^",1,3)
	Q
EXSCRN	;
	S @IBARY@("SCREEN")=""
	Q
	;
TRTMNT	; -- select treatments (from file 9999999.17)
	N X,Y,SCREEN
	I '$D(@IBARY@("SCREEN")) D TRSCRN
	S SCREEN=$G(@IBARY@("SCREEN"))
	D LOOK(9999999.17,SCREEN) I +Y<1 K @IBARY Q  ;kill if nothing selected
	S @IBARY=+Y_"^"_$P(Y(0),"^",1,2)
	Q
TRSCRN	;
	S @IBARY@("SCREEN")=""
	Q
	;
SKINTST	; -- select Skin Tests (from file 9999999.28)
	N X,Y,SCREEN
	I '$D(@IBARY@("SCREEN")) D SKSCRN
	S SCREEN=$G(@IBARY@("SCREEN"))
	D LOOK(9999999.28,SCREEN) I +Y<1 K @IBARY Q  ;kill if nothing selected
	S @IBARY=+Y_"^"_$P(Y(0),"^",1,2)
	Q
SKSCRN	;
	S @IBARY@("SCREEN")=""
	Q
	;
HF	; -- select Health Factors (from file 9999999.64)
	N X,Y,SCREEN
	I '$D(@IBARY@("SCREEN")) D HFSCRN
	S SCREEN=$G(@IBARY@("SCREEN"))
	D LOOK(9999999.64,SCREEN) I +Y<1 K @IBARY Q  ;kill if nothing selected
	S @IBARY=+Y_"^"_$P(Y(0),"^",1,5)
	Q
HFSCRN	;
	S @IBARY@("SCREEN")="I $P(^(0),U,10)=""F"""
	Q
	;
CHECKOUT	;other visit dispositions than checkout
	;the PCE GDI does not accept this now,but it may in the future
	K DIR S DIR(0)="SO^1:No-show;2:Cancel;3:Rescheduled"
	S DIR("A")="APPOINTMENT DISPOSITION TYPE"
	D ^DIR
	I $D(DIRUT) K @IBARY Q  ;kill if nothing selected
	S @IBARY=+Y_"^"_$S(+Y=1:"No-show",+Y=2:"Cancel",+Y=3:"Rescheduled",1:"")
	K DIR
	Q

IBDFN12
IBDFN12	;ALB/CJM - ENCOUNTER FORM - SELECTORS;MAY 10, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
LOOKUP(FILE,SCREEN,X,NODE)	;
	; -- lookup X in file using SCREEN
	; -- kills X if lookup not successful, else sets X to the ien and returns NODE as the 0 node
	; -- pass X and NODE by reference
	;
	I +$G(FILE)<1 K X Q
	N Y
	S (NODE,Y)=""
	K DIC S DIC=FILE,DIC("S")=SCREEN
	S DIC(0)="EMQZ"
	I $D(^DIC(FILE)) D ^DIC K DIC
	I +Y>0 D
	.S X=Y,NODE=Y(0)
	E  K X
	Q
	;
SLCTCPT(X)	;for CPT codes
	;pass X by reference
	;example of use: D SLCTCPT^IBDFN12(.X)
	;
	N NODE
	D LOOKUP(81,"I '$P(^(0),U,4)",.X,.NODE)
	I $D(X) S IBLABEL=$P(NODE,"^",2),(IBID,X)=$P(NODE,"^",1)
	Q
	;
SLCTDX(X)	;for ICD9 diagnosis codes
	;pass X by reference
	;example of use: D SLCTICD^IBDFN12(.X)
	;
	N NODE
	D LOOKUP(80,"I '$P(^(0),U,9)",.X,.NODE)
	I $D(X) S IBLABEL=$P(NODE,"^",3),(IBID,X)=$P(NODE,"^",1)
	Q
	;
SLCTVST(X)	;for VISIT TYPE codes
	;pass X by reference
	;example of use: D SLCTVST^IBDFN12(.X)
	;
	N NODE
	D LOOKUP(357.69,"I '$P(^(0),U,4)",.X,.NODE)
	I $G(X) S NODE=$G(^ICPT(+NODE,0)),(IBID,X)=$P(NODE,"^"),IBLABEL=$P(NODE,"^",2)
	Q
	;
SLCTED(X)	;for Education Topics
	;pass X by reference
	;example of use: D SLCTED^IBDFN12(.X)
	;
	N NODE
	D LOOKUP(9999999.09,"",.X,.NODE)
	I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
	Q
	;
SLCTIMM(X)	;for Immunizations
	;pass X by reference
	;example of use: D SLCTIMM^IBDFN12(.X)
	;
	N NODE
	D LOOKUP(9999999.14,"",.X,.NODE)
	I $D(X) S IBLABEL=$P(NODE,"^",2),IBID=+X,X=IBLABEL
	Q
	;
SLCTEX(X)	;for Exams
	;pass X by reference
	;example of use: D SLCTEX^IBDFN12(.X)
	;
	N NODE
	D LOOKUP(9999999.15,"",.X,.NODE)
	I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
	Q
	;
SLCTSKN(X)	;for Skin Tests
	;pass X by reference
	;example of use: D SLCTSKN^IBDFN12(.X)
	;
	N NODE
	D LOOKUP(9999999.28,"",.X,.NODE)
	I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
	Q
	;
SLCTHF(X)	;for Health Factores
	;pass X by reference
	;example of use: D SLCTHF^IBDFN12(.X)
	;
	N NODE
	D LOOKUP(9999999.64,"I $P(^(0),U,10)=""F""",.X,.NODE)
	I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
	Q
	;
SLCTYN(X)	;for selecting YES or NO
	;
	I "Yy"[$E(X) S X="YES",IBID=1 Q
	I "Nn"[$E(X) S X="NO",IBID=0 Q
	W "Enter YES or NO."
	K X
	Q
	;
SLCTCLS(PI,X)	;for visit classification
	;pass X by reference
	;*NOTE: if interactive sets IBQUAL to the qualifier, IBLABEL to the recommended label, for use in the input template
	;example of use: D INPUTCLS^IBDFN12(PI,.X)
	;
	N NODE
	D LOOKUP(357.98,"I $$DQGOOD^IBDFU9(PI,Y)",.X,.NODE)
	I $D(X) S IBID="",IBLABEL=$P(NODE,"^",3),IBQUAL=+X,X=$P(NODE,"^")
	Q

IBDFN13
IBDFN13	;ALB/CJM - ENCOUNTER FORM - (input tranforms for AICS Data Types);MAY 10, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
CKOUTTM(X,IBFORMID)	;adds the date to the time and puts in FM format- gets the date from IBFORMID("APPT")
	;pass X and IBFORMID by reference!!!
	;
	S X=($G(IBFORMID("APPT"))\1)_"."_X
	Q
CKOUT(X)	;converts X to FM date and time
	;pass X by reference!
	N %DT,Y
	S %DT="NR"
	D ^%DT
	S X=Y
	Q

IBDFN14
IBDFN14	;ALB/CMR - ENCOUNTER FORM - OUTPUTS;JAN 4, 1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
CPT(X)	; -- return external value, descr and active flag for CPT code
	; -- X passed equal to ien for cpt code
	;
	Q:'X
	S (IBID,IBLABEL,IBINACT)=""
	I $G(^ICPT(X,0))]"" S IBID=$P(^(0),"^"),IBLABEL=$P(^(0),"^",2),IBINACT=$P(^(0),"^",4)
	Q
DX(X)	; -- return external value, descr and active flag for ICD9 diagnosis
	; -- pass X equal to ien for icd9 code
	;
	Q:'X
	S (IBID,IBLABEL,IBINACT)=""
	I $G(^ICD9(X,0))]"" S IBID=$P(^(0),"^"),IBLABEL=$P(^(0),"^",3),IBINACT=$P(^(0),"^",9)
	Q
VST(X)	; -- return external value, descr and active flag for VISIT TYPE 
	; -- pass X equal to ien for visit type
	;
	Q:'X
	S (IBID,IBLABEL,IBINACT)=""
	I $G(^IBE(357.69,X,0))]"",($G(^ICPT(X,0))]"") D
	.S IBID=$P(^IBE(357.69,X,0),"^"),IBLABEL=$P(^(0),"^",3)
	.S HDR=$P(^IBE(357.69,X,0),"^",2) I $L(HDR_IBLABEL)<75 S IBLABEL=HDR_" "_IBLABEL
	.K HDR
	.S IBINACT=$S($P(^IBE(357.69,X,0),"^",4):1,$P(^ICPT(X,0),"^",4):1,1:"")
	Q
ED(X)	; -- return descr and active flag for education topics
	; -- pass X equal to ien for education topic
	;
	Q:'X
	S (IBID,IBLABEL,IBINACT)=""
	I $G(^AUTTEDT(X,0))]"" S IBID="ED TOPIC",IBLABEL=$P(^(0),"^"),IBINACT=$P(^(0),"^",3)
	Q
EXAM(X)	; -- return descr and active flag for exam
	; -- pass X equal to ien for exam
	;
	Q:'X
	S (IBID,IBLABEL,IBINACT)=""
	I $G(^AUTTEXAM(X,0))]"" S IBID="EXAM",IBLABEL=$P(^(0),"^"),IBINACT=$P(^(0),"^",4)
	Q
HF(X)	; -- return descr and active flag for health factor
	; -- pass X equal to ien for health factor
	;
	Q:'X
	S (IBID,IBLABEL,IBINACT)=""
	I $G(^AUTTHF(X,0))]"" S IBID="FACTOR",IBLABEL=$P(^(0),"^"),IBINACT=$P(^(0),"^",11)
	Q
IMMUN(X)	; -- return descr and active flag for immunization
	; -- pass X equal to ien for immunization
	;
	Q:'X
	S (IBID,IBLABEL,IBINACT)=""
	I $G(^AUTTIMM(X,0))]"" S IBID="IMMUN",IBLABEL=$P(^(0),"^"),IBINACT=$P(^(0),"^",7)
	Q
ST(X)	; -- return descr and active flag for immunization
	; -- pass X equal to ien for immunization
	;
	Q:'X
	S (IBID,IBLABEL,IBINACT)=""
	I $G(^AUTTSK(X,0))]"" S IBID="SKIN TEST",IBLABEL=$P(^(0),"^"),IBINACT=$P(^(0),"^",3)
	Q
YN(X)	; -- return descr
	; -- pass X equal to 1 or 0
	;
	Q:X']""
	S IBID="VALUE"
	S (IBLABEL,IBINACT)=""
	I X S IBLABEL="YES" Q
	S IBLABEL="NO" Q
	Q

IBDFN2
IBDFN2	;ALB/CJM - ENCOUNTER FORM - INTERFACE ROUTINES ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
APPT	;returns appt date@time^date^time
	N Y
	S Y="" I IBAPPT S Y=IBAPPT K %DT D DD^%DT
	S @IBARY=Y_"^"_$P(Y,"@")_"^"_$P(Y,"@",2)
	Q
NOW	;returns date and time
	;FORMATS:
	; MMM DD, YYYY@HH:MM:SS at the "IB DATE@TIME" subscript
	; MMM DD,YYYY at the "IB DATE" subscript
	; HH:MM:SS at the "IB TIME" subscript      
	N Y,%,%H,%I,X
	D NOW^%DTC S Y=% K %DT D DD^%DT
	S ^TMP("IB",$J,"INTERFACES",+$G(DFN),"IB CURRENT DATE@TIME")=Y
	S ^TMP("IB",$J,"INTERFACES",+$G(DFN),"IB CURRENT TIME")=$P(Y,"@",2)
	S ^TMP("IB",$J,"INTERFACES",+$G(DFN),"IB CURRENT DATE")=$P(Y,"@")
	Q
	;
SPSEMPLR	;returns spouse's employer,address, telephone
	;input variables - DFN
	N ARY,CNT S CNT=1
	S ARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN))"
	S VAOA("A")=6 D OAD^VADPT
	I VAERR S (@ARY@("DPT SPOUSE'S EMPLOYER NAME"),@ARY@("DPT SPOUSE'S EMPLOYER TELEPHONE"),@ARY@("DPT SPOUSE'S EMPLOYER ADDRESS LINES"))=""  Q
	I VAOA(1)'="" S @ARY@("DPT SPOUSE'S EMPLOYER ADDRESS LINES",CNT)=VAOA(1),CNT=CNT+1
	I VAOA(2)'="" S @ARY@("DPT SPOUSE'S EMPLOYER ADDRESS LINES",CNT)=VAOA(2),CNT=CNT+1
	I VAOA(3)'="" S @ARY@("DPT SPOUSE'S EMPLOYER ADDRESS LINES",CNT)=VAOA(3),CNT=CNT+1
	S @ARY@("DPT SPOUSE'S EMPLOYER ADDRESS LINES",CNT)=VAOA(4)_", "_$P(VAOA(5),"^",2)_" "_VAOA(6)
	S @ARY@("DPT SPOUSE'S EMPLOYER TELEPHONE")=VAOA(8)
	S @ARY@("DPT SPOUSE'S EMPLOYER NAME")=VAOA(9)
	K VAOA,VAERR
	Q
EMPLOYER	;returns employer,address, telephone
	;input variables - DFN
	N ARY,CNT S CNT=1
	S ARY="^TMP(""IB"",$J,""INTERFACES"",DFN)"
	S VAOA("A")=5 D OAD^VADPT
	I VAERR S (@ARY@("DPT PATIENT'S EMPLOYER NAME"),@ARY@("DPT PATIENT'S EMPLOYER TELEPHONE"),@ARY@("DPT PATIENT'S EMPLOYER ADDRESS LINES"))=""  Q
	I VAOA(1)'="" S @ARY@("DPT PATIENT'S EMPLOYER ADDRESS LINES",CNT)=VAOA(1),CNT=CNT+1
	I VAOA(2)'="" S @ARY@("DPT PATIENT'S EMPLOYER ADDRESS LINES",CNT)=VAOA(2),CNT=CNT+1
	I VAOA(3)'="" S @ARY@("DPT PATIENT'S EMPLOYER ADDRESS LINES",CNT)=VAOA(3),CNT=CNT+1
	S @ARY@("DPT PATIENT'S EMPLOYER ADDRESS LINES",CNT)=VAOA(4)_", "_$P(VAOA(5),"^",2)_" "_VAOA(6)
	S @ARY@("DPT PATIENT'S EMPLOYER TELEPHONE")=VAOA(8)
	S @ARY@("DPT PATIENT'S EMPLOYER NAME")=VAOA(9)
	K VAOA,VAERR
	Q
MT	;returns means test data
	N Y,RET,GET
	S GET=$$LST^DGMTU(DFN)
	S RET=$P(GET,"^",3)_"^"
	S Y=$P(GET,"^",2) D DD^%DT
	S RET=RET_Y_"^"_$P(GET,"^",4)
	S @IBARY=RET
	Q
ALLERGY	;outputs a list of the patient's allergies
	;piece #1=allergy name,#2=type of allergy(FOOD/DRUG/OTHER),#3=type of allergy(F/D/O),#4=VERFIED?(YES/NO),#5=TRUE ALLERGEN(YES/NO)
	N GMRA,GMRAL,NODE,I,COUNT,TYPE
	D:$L($T(GMRADPT^GMRADPT)) ^GMRADPT
	S (COUNT,I)=0 F  S I=$O(GMRAL(I)) Q:'I  D
	.S COUNT=COUNT+1
	.S NODE=$G(GMRAL(I))
	.S TYPE=$P(NODE,"^",3)
	.S @IBARY@(COUNT)=$P(NODE,"^",2)_"^"_$S(TYPE="D":"DRUG",TYPE="F":"FOOD",TYPE="O":"OTHER",1:"")_"^"_TYPE_"^"_$S($P(NODE,"^",4)=1:"YES",1:"NO")_"^"_$S($P(NODE,"^",5)=0:"YES",$P(NODE,"^",5)=1:"NO",1:"")
	Q

IBDFN3
IBDFN3	;ALB/CJM - ENCOUNTER FORM - (entry points for reports);5/21/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
RXPROF	;Outpatient Pharmacy Action Profile and Information Profile
	;INPUTS:
	;PSDAYS = number of days to print the medication profile for
	;PSTYPE=1 for the Action Profile, =0 for the Information Profile
	;DFN
	;
	N IBDFN,ADDR,ADDRFL,CLASS,CNDT,DRUG,HDFL,I,II,J,L,LINE,P,PAGE,PSDOB,PSIIX,PSNAME,PSOI,PSSN,PSIX,PGM,PRF,PSDATE,VAL,VAR,RX,RX0,RX2,ST,ST0,PSDAY,RF,RFS
	N PSOPRINT,X1,X2,ZTSK,X,Y,PSII,PSDT,LMI,PSCNT,PSDIS,RXCNTLN,ELN,FN,CNT,VAERR,LN,PCLASS,PSOIFSUP
	Q:(+$G(DFN)=0)
	S IBDFN=DFN
	S X1=DT,X2=-PSDAYS D C^%DTC S (PSDATE,PSDAY)=X
	S LINE=$TR($J(" ",IOM)," ","-")
	S PAGE=1 D HD^PSOSD2,PAT^PSOSD
	I PSTYPE,$L($T(RXPAD^PSOSD1)) D RXPAD^PSOSD1
	W:$Y @IOF
	S DFN=IBDFN
	K VA,VAEL,VAPA
	Q
	;
DRUGS	;prints the medication profile of Outpatient Pharmacy
	;doesn't seem to be needed, integration agreement not obtained to use this
	;INPUTS:
	;PLS=0 for long, 1 for short
	;PSRT="D" to sort by date, "M" to sort by medication, "C" to sort by class
	;DFN
	;
	;N IBDFN,DRUG,ZII,PHYS,CT,AL,I1,REF,LMI,PI,FN,Y,I,J,RX,DRX,ST,RX0,RX2,DA,D0,DIC,DIPGM,II,K,ST0,TEMP,Z,LMI,RXD,RXF,PI,AL,D0,DIPGM,II,PSCNT,PSDIV,PSLC,PSDIS
	;
	;S (FN,IBDFN,D0,DA)=DFN
	;I '$D(^PS(55,IBDFN,"P")),'$D(^("ARC")) D ^PSODEM W !?20,"NO PHARMACY INFORMATION" G RXQ
	;I '$O(^PS(55,IBDFN,"P",0)),$D(^PS(55,IBDFN,"ARC")) D ^PSODEM W !!,"PATIENT HAS ARCHIVED PRESCRIPTIONS",! G RXQ
	;D P^PSOP
RXQ	;W @IOF
	;S DFN=IBDFN
	;K ^UTILITY($J)
	Q
ROUTING	;entry point for printing a routing sheet for a single patient
	;Sets IBPRINT=1 so that it will be known that this entry point was used
	;inputs - 
	;    DFN
	;    IBAPPT - the appointment
	;    IBCLINIC - pointer to the clinic
	;protect variables that may be changed
	N %,%DT,%I,ADDR,ALL,APDATE,IBDFN,DGMT,DIC,DIV,G,GDATE,H,I,J,K,L,LL,M,NAME,NDATE,ORD,ORDER,P,POP,PRDATE
	N SC,SDA,SDATE,SDCNT,SDI,SDI1,SDIQ,SDM,SDREP,SDSP,SDSTART,SDVA,SDX,SDX1,SSN,SZ,TDO,X,X1,Y,ZIP,ZX,VAR,C,V,SDEF,A,SD,SCN,SDTD,SDSCCOND,SDPARMS
	;
	;protect DFN
	Q:(+$G(DFN)=0)
	S IBDFN=DFN N DFN S DFN=IBDFN
	;
	;set the start date to the date of the appt
	S SDPARMS("START")=IBAPPT\1
	;keep the divice open
	S SDPARMS("DO NOT CLOSE")=1
	;set DIV to the division of IBCLINIC
	S DIV=$P($G(^SC(IBCLINIC,0)),"^",15)
	D EN1^SDROUT1
	Q

IBDFN4
IBDFN4	;ALB/CJM - ENCOUNTER FORM - (entry points for selection routines);5/21/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;; -- Routine Modified in support of DATA CAPTURE project
	;
CPT	;select ambulatory procedures
	N NAME,CODE,SCREEN,IBDESCR,QUIT
	S QUIT=0
	I '$D(@IBARY@("SCREEN")) D CPTSCRN Q:QUIT
	E  S SCREEN=$G(@IBARY@("SCREEN"))
	K DIC S DIC=81,DIC(0)="AEMQZ",DIC("S")=SCREEN
	I $D(^DIC(81)) D ^DIC K DIC I +Y>0 D
	.S CODE=$P(Y(0),U),NAME=$P(Y(0),U,2),IBDESCR=$G(^ICPT(+Y,"D",1,0))_" "_$G(^ICPT(+Y,"D",2,0))
	.S @IBARY=CODE_"^"_NAME_"^"_IBDESCR
	E  K @IBARY ;kill either if file doesn't exist or nothing chosen
	Q
CPTSCRN	;
	S SCREEN="I '$P(^(0),U,4)"
	;
	;don't ask the user about categories - it doesn't work well 
	;K DIR S DIR(0)="YA",DIR("A")="Do you want to select a CPT from a particular CPT category? ",DIR("?")="Answer YES if you want to screen out all CPT codes that do not belong to a particular category",DIR("B")="NO"
	;I $D(^DIC(81.1)) D ^DIR K DIR S:$D(DIRUT) QUIT=1 Q:$D(DIRUT)  I +Y D
	;.K DIC S DIC="81.1",DIC(0)="AEQ",DIC("S")="I $P(^(0),U,2)=""m"""
	;.D ^DIC K DIC I +Y>0 S SCREEN=SCREEN_",$P($G(^DIC(81.1,+$P(^(0),U,3),0)),U,3)="_+Y
	S @IBARY@("SCREEN")=SCREEN
	Q
	;
ICD9	;select ICD-9 codes
	N IBDX,CODE,SCREEN,IBDESCR,QUIT
	S QUIT=0
	I $D(@IBARY@("SCREEN")) S SCREEN=$G(@IBARY@("SCREEN"))
	E  D ICD9SCRN Q:QUIT
	K DIC S DIC=80,DIC(0)="AEMQZI",DIC("S")=SCREEN
	I $D(^DIC(80)) D ^DIC K DIC I +Y>0 D
	.S CODE=$P(Y(0),U),IBDX=$P(Y(0),U,3),IBDESCR=$P($G(^ICD9(+Y,1)),"^")
	.S @IBARY=CODE_"^"_IBDX_"^"_IBDESCR
	E  K @IBARY ;kill if either file doesn't exist or nothing chosen - this is how to let the encounter form utilities know nothing was selected
	Q
ICD9SCRN	;
	S SCREEN="I '$P(^(0),U,9)"
	;
	;don't ask the user about categories - it doesn't work well 
	;K DIR S DIR(0)="YA",DIR("A")="Do you want to select an ICD diagnosis from a particular diagnostic category? ",DIR("B")="NO"
	;S DIR("?")="Answer YES if you want to screen out all diagnosis codes that do not belong to a particular category"
	;I $D(^DIC(80.3)) D ^DIR K DIR S:$D(DIRUT) QUIT=1 Q:$D(DIRUT)  I +Y D
	;.K DIC S DIC="80.3",DIC(0)="AEQ"
	;.D ^DIC K DIC I +Y>0 S SCREEN=SCREEN_",+$P(^(0),U,5)="_+Y
	S @IBARY@("SCREEN")=SCREEN
	Q
NULL	;returns NOTHING for selection
	S @IBARY=""
	Q
	;
VSIT	; -- Select only visit cpt codes
	N NAME,CODE,IBDESCR,QUIT,DIC,X,Y,IBHDR,IBTXT
	S QUIT=0
	;
	S DIC="^IBE(357.69,",DIC(0)="AEMQZ",DIC("S")="I '$P(^(0),U,4)"
	D ^DIC K DIC I +Y>0 D
	.S CODE=$P(Y(0),U),IBHDR=$P(Y(0),U,2),IBTXT=$P(Y(0),U,3),IBSNM=$P($G(^ICPT(+Y,0)),"^",2)
	.S @IBARY=CODE_"^"_IBTXT_"^"_IBHDR_"^"_IBSNM
	E  K @IBARY ;kill if nothing chosen
	Q
	;
PRVDR	;for selecting provider
	D GETPRO^IBDF18B(IBCLINIC,IBARY)
	Q
	;
IBPFID	;for printing the form # assigned by form tracking
	S @IBARY=$G(IBPFID)
	Q

IBDFN5
IBDFN5	;ALB/CJM - ENCOUNTER FORM - (entry points for used to print Health Summaries);6/16/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
PRNTSMRY(GMTSTYP)	;prints the health summary
	;INPUTS:
	;DFN 
	;GMTSTYP is a ptr to the HEALTH SUMMARY TYPE file
	;
	;
	;check that required variables are defined
	Q:'$G(GMTSTYP)!'$G(DFN)
	I '$L($T(ENX^GMTSDVR)),$L($T(SELTYP1^GMTS)),$L($T(EN^GMTS1)) D
	.;protect stuff that might be killed
	.N S1,S2,S2,GMI,GMTSEG,GMTSEGI,GMI,GMTSTITL,GMTSCVD,GMTSICF,GMTSCKP,GMW,GMTSEGC
	.N GMTSNPG,GMTSPG,GMTSQIT,GMTSHDR,GMTSHD2,GMTSBRK,GMTSLCMP,GMTSDTC,GMTSEGN,GMTSE,GMTSEGR,GMTSEQ,GMTSEGH,GMTSEGL,GMTSDLM,GMTSDLS,GMTSNDM,GMTSN,GMTSQ,GMTSQIT,ZTSK,GMTSDLS,GMTSN,GMTSDLM
	.N %T,DIC,GMTS,GMTSLO,GMTSPNM,GMTSRB,GMTSWARD,GMTSDOB,X,Y,VA,VAIN,VAINDT,VADM,VAEL,VAPA,VAERR,GMTSSN,GMTS0,GMTS1,GMTS2
	.N GMTSAGE,GMTSTIM,GMTSEGH,GMTSEGL,GMTSHDR,GMTSNPG,GMTSPG,GMTSX,ENTRY,Z1,GMTSDTM,GMTSLOCK,GMTSLPG,SEX,POP,C,GMTSTOF
	.S GMTSTITL=$G(^GMT(142,GMTSTYP,"T")) S:GMTSTITL="" GMTSTITL=$P($G(^GMT(142,GMTSTYP,0)),"^")
	.D SELTYP1^GMTS
	.D EN^GMTS1
	I $L($T(ENX^GMTSDVR)) D ENX^GMTSDVR(DFN,GMTSTYP)
	Q

IBDFN6
IBDFN6	;ALB/CJM - ENCOUNTER FORM - INTERFACE ROUTINES ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
ADDRESS	;returns address, telephone
	;input variables - DFN
	N ARY,CNT,LINE S CNT=1
	S ARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN))"
	D ADD^VADPT
	I VAERR S (@ARY@("DPT PATIENT ADDRESS LINES"),@ARY@("DPT PATIENT'S TELEPHONE NUMBER"),@ARY@("DPT PATIENT SHORT ADDRESS"))=""  Q
	I VAPA(1)'="" S @ARY@("DPT PATIENT ADDRESS LINES",CNT)=VAPA(1),CNT=CNT+1
	I VAPA(2)'="" S @ARY@("DPT PATIENT ADDRESS LINES",CNT)=VAPA(2),CNT=CNT+1
	I VAPA(3)'="" S @ARY@("DPT PATIENT ADDRESS LINES",CNT)=VAPA(3),CNT=CNT+1
	S @ARY@("DPT PATIENT ADDRESS LINES",CNT)=VAPA(4)_", "_$P(VAPA(5),"^",2)_" "_$P(VAPA(11),"^",2)
	;
	;short address
	F CNT=1:1:3 S LINE=VAPA(CNT) Q:LINE'=""
	S @ARY@("DPT PATIENT SHORT ADDRESS")=LINE_","_VAPA(4)_", "_$P(VAPA(5),"^",2)_" "_$P(VAPA(11),"^",2)
	;
	S @ARY@("DPT PATIENT'S TELEPHONE NUMBER")=VAPA(8)
	K VAPA,VA,VAERR,VAEL
	Q
	;
INSURANC	;returns all sorts of insurance information
	;input - DFN,ACT
	;ACT="" to return all insurance, ACT=1 to return only active insurance, ACT=2 to return active insurance and insurance that will not reimburse (Medicare)
	;
	Q:'$G(DFN)
	N NODE,SUB,ITEM,ENTRY,DATE,ARY,WHO
	I $L($T(ALL^IBCNS1)) D
	.S ARY="^TMP(""IBDF"",$J,""INSURANCE"")"
	.K @ARY
	.D ALL^IBCNS1(DFN,ARY,$G(ACT))
	;
	S SUB=0,ITEM=1,ENTRY="" F  S SUB=$O(@ARY@(SUB)) Q:'SUB  D
	.S NODE=$G(@ARY@(SUB,0)) Q:NODE=""
	.S:$P(NODE,"^") ENTRY=$P($G(^DIC(36,$P(NODE,"^"),0)),"^")
	.S Y=$P(NODE,"^",4) I Y>0 D DD^%DT S $P(ENTRY,"^",2)=Y
	.S $P(ENTRY,"^",3)=$P(NODE,"^",2)
	.S $P(ENTRY,"^",4)=$P(NODE,"^",3)
	.S $P(ENTRY,"^",5)=$P(NODE,"^",15)
	.S $P(ENTRY,"^",6)=$P(NODE,"^",17)
	.S WHO=$P(NODE,"^",6)
	.S $P(ENTRY,"^",7)=$S(WHO="v":"APPLICANT",WHO="s":"SPOUSE",WHO="o":"OTHER",1:"")
	.S @IBARY@(ITEM)=ENTRY
	.S ITEM=ITEM+1
	K @ARY
	Q
	;
INSURED	;is the patient insured?
	;input - DFN
	Q:'$G(DFN)
	N INS S INS=""
	;do it the new way?
	I $L($T(INSURED^IBCNS1)) D
	.S INS=$$INSURED^IBCNS1(DFN)
	S @IBARY=$S(INS=1:"YES",INS=0:"NO",1:"UNKNOWN")
	Q

IBDFN7
IBDFN7	;ALB/CJM - ENCOUNTER FORM - validate logic for data ;MAY 10,1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
TESTCPT	;does X point to a valid CPT4 code? Kills X if not.
	;
	I $G(X)="" K X S Y="" Q
	S X=$O(^ICPT("B",X,0)) I 'X K X S Y="" Q
	I '$D(^ICPT(X,0)) K X S Y="" Q
	I $P($G(^ICPT(X,0)),"^",4) S Y=$P(^ICPT(X,0),"^",2) K X
	Q
	;
TESTICD	; -- does X point to a valid ICD9 code? Kills X if not.
	; -- input the icd code in X
	;
	I $G(X)="" K X S Y="" Q
	S:$E(X,$L(X))'=" " X=X_" " ; use ba xref, add space to end for lookup.
	S X=$O(^ICD9("BA",X,0)) I 'X K X S Y="" Q
	I '$D(^ICD9(X,0)) K X S Y="" Q
	I $P($G(^ICD9(X,0)),"^",9) S Y=$P(^ICD9(X,0),"^",3) K X
	Q
	;
TESTVST	;does X point to a valid visit code? If not, kills X.
	;checks that X is a valid CPT4 code and that there is a corresponding entry in the TYPE OF VISIT file that is active
	N IEN
	I $G(X)="" K X S Y="" Q
	S X=$O(^ICPT("B",X,0)) I 'X K X S Y="" Q
	I '$D(^ICPT(X,0)) K X S Y="" Q
	I $P($G(^ICPT(X,0)),"^",4) S Y=$P(^ICPT(X,0),"^",2) K X
	Q:'$D(X)
	S IEN=$O(^IBE(357.69,"B",X,0)) K:'IEN X I IEN K:$P($G(^IBE(357.69,IEN,0)),"^",4) X
	Q

IBDFN8
IBDFN8	;ALB/CJM - ENCOUNTER FORM - PCE GDI INPUT TRANSFORMS;AUG 10, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
INPUTCPT(X)	;changes X,a CPT code, into its ien
	;
	S X=$S($G(X)'="":$O(^ICPT("B",X,0)),1:"")
	K:'X X
	Q
	;
INPUTICD(ICD)	;changes X, an ICD9 code, into its ien
	;
	S X=$S($G(X)'="":$O(^ICD9("BA",ICD_" ",0)),1:"")
	K:'X X
	Q
	;

IBDFN9
IBDFN9	;ALB/CJM - ENCOUNTER FORM - output transforms for data ;MAY 10, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
DSPLYCPT(IEN)	;output transform for CPT codes (file #81)
	;example of use: S Y=$$DSPLYCPT^IBDFN9(Y)
	Q $P($G(^ICPT(+$G(IEN),0)),"^")
	;
DSPLYICD(IEN)	;output transform for ICD9 codes (file #80)
	;example of use: S Y=$$DSPLYICD^IBDFN9(Y)
	Q $P($G(^ICD9(+$G(IEN),0)),"^")
	;
DSPLYPRV(IEN)	;output transform for provider (file #200)
	;example of use: S Y=$$DSPLYPRV^IBDFN9(Y)
	Q $P($G(^VA(200,+$G(IEN),0)),"^")
	;
DSPLYYN(Y)	;changes 1 to YES and 0 or "" to NO
	Q:Y=1 "YES"
	Q:(Y=0)!(Y="") "NO"
	Q " "

IBDFOSG
IBDFOSG	;ALB/MAF/AAS - SCANNED EF FOR OUTPATIENTS WITH BILLS GENERATED REPORT ;8/21/95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
%	I '$D(DT) D DT^DICRW
	D END
	W !!,"Scanned Encounter Forms with Outpatient Bills Generated."
	I $D(^DG(43,1,"GL")) D DIVISION^VAUTOMA G:Y=-1 END
	S VAUTC=1
	D NOW^%DTC S Y=$E(%,1,12) S VADAT("W")=Y D ^VADATE S IBDFDAT=VADATE("E")
	;
DATE	; -- select date
	;W !! D DATE^IBOUTL
	;I IBBDT=""!(IBEDT="") G END
	;S IBDFBEG=IBBDT,IBDFEND=IBEDT
	S (IBBDT,IBDFBEG)=2940401,(IBEDT,IBDFEND)=2960331
	;
DEV	; -- select device, run option
	W !!,"You will need a 132 column printer for this report!",!
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="DQ^IBDFOSG",ZTSAVE("IB*")="",ZTSAVE("VA*")="",ZTDESC="IBD - Scanned Encounter Forms with Bill Generation" D ^%ZTLOAD K IO("Q"),ZTSK W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS G END
	;
	U IO
	S X=132 X ^%ZOSF("RM")
DQ	D PRINT G END
	Q
	;
END	; -- Clean up
	K ^TMP("CTOT",$J),^TMP("DTOT",$J),^TMP("GTOT",$J),^TMP("MCCR",$J),^TMP("IBD-BILL",$J),^TMP("IBD-PRINTED",$J),^TMP("IBD-ENTERED",$J) W !
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K X,Y,DFN,IBPAG,IBHDT,IBDT,IBBDT,IBEDT,IBQUIT,IBDFDVE
	K IBCNT,IBDFBEG,IBDFCLI,IBDFDA,IBDFDAT,IBDFDIV,IBDFEND,IBDFIFN,IBDFNODE,IBDFNUM,IBDFSA,IBDFT,IBDFTMP,IBDFTMP1,IBDFTMP2,IBDFTPRT
	K IBFLG1,IBFLG2,IBFLG3,IBFLG4,IBFLG5,IBFLG6,IBFLG7,IBFLG8,IBFLG9,IBMCNODE,IBMCSND,IBNAM,IBTSBDT,IBTSEDT
	K VADAT,VADATE,VAUTC,VAUTD
	Q
	;
PRINT	; -- print one billing report
	;    Data sorted into ^tmp arrays
	;                    := ^tmp("mccr",$j) =
	;    Clinic Totals   := ^tmp("ctot",$j,division,clinic)=
	;    Division Totals := ^tmp("dtot",$j,division)       =
	;    Grand Totals    := ^tmp("gtot",$j)                =
	;
	S (IBPAG,IBDFDVE)=0,IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0
	S IBTSBDT=IBBDT-.1,IBTSEDT=IBEDT+.9
	D QUIT
	D START^IBDFOSG1
	;
PR	D HDR
	I '$D(^TMP("MCCR",$J)) W !!,"No Data Meeting This Criteria for the Date Range Chosen",! Q
	N IBDFDV,IBDFCL,IBDNODE,IBDFTMP,IBDFPAT,IBDFPT,IBDFT
	S (IBDFDV,IBDFCL,IBDFPT)=0
	F IBDFDIV=0:0 S IBDFDV=$O(^TMP("CTOT",$J,IBDFDV)) Q:IBDFDV=""!(IBQUIT)  D
	.D DIVH
	.S IBDFCL=0
	.F IBDFCLI=0:0 S IBDFCL=$O(^TMP("CTOT",$J,IBDFDV,IBDFCL)) Q:IBDFCL=""  D ONECL I $O(^TMP("CTOT",$J,IBDFDV,IBDFCL))="" S IBDFDVE=1 D ONEDV
	;
	;  -- Print Totals Page
	S IBDFDVE=0
	Q:IBQUIT
	D HDR
	S (IBDFDV,IBDFCL,IBDFPT)=0
	S IBFLG4=1 ;1 := on division totals page
	F IBDFDIV=0:0 S IBDFDV=$O(^TMP("DTOT",$J,IBDFDV)) Q:IBDFDV']""!(IBQUIT)  D ONEDV
	Q:IBQUIT
	D DASH
	D LINE("GRAND TOTAL",^TMP("GTOT",$J))
	Q
	;
ONECL	; -- Print one clinics data
	Q:IBQUIT
	Q:^TMP("CTOT",$J,IBDFDV,IBDFCL)="0^0^0^0^0^0^0^0^0"
	D LINE(IBDFCL,^TMP("CTOT",$J,IBDFDV,IBDFCL))
	Q
	;
ONEDV	;  -- Print Division totals
	Q:IBQUIT
	I IOSL<($Y+5) D HDR Q:IBQUIT
	Q:^TMP("DTOT",$J,IBDFDV)="0^0^0^0^0^0^0^0^0"&('$D(IBFLG4))
	I IBDFDVE=1 D DASH S IBDFDVE=0
	D LINE(IBDFDV,^TMP("DTOT",$J,IBDFDV))
	Q
	;
LINE(NAME,IBX)	;
	; -- print detail line
	;    input Name := text to be printed
	;          ibx  ;= 9 piece global node containing data
	;
	I IOSL<($Y+5) D HDR Q:IBQUIT
	W !,$E(NAME,1,25)
	W ?27,$J($P(IBX,"^",4),8)
	W ?39,$J($P(IBX,"^",3),8)
	W ?51,$J($P(IBX,"^",1),8)
	W ?63,$J($P(IBX,"^",2),8)
	S X=$S($P(IBX,"^",4)>0:$P(IBX,"^",5)/$P(IBX,"^",4),1:0)
	W ?75,$J(X,8,2) ;$J($E(X,1,8),8)
	W ?87,$J($P(IBX,"^",6),8)
	W ?99,$J($P(IBX,"^",7),8)
	W ?111,$J($P(IBX,"^",8),8)
	W ?123,$J($P(IBX,"^",9),8)
	Q
	;
HDR	; -- Print header for billing report
	Q:IBQUIT
	I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1
	W !,"Scanned Encounters with Bill Generation Data",?(IOM-33),"Page ",IBPAG,"  ",IBHDT
	W !,"For Period beginning on ",$$DAT1^IBOUTL(IBBDT)," to ",$$DAT1^IBOUTL(IBEDT)
	W !,?53,"Visits",?65,"#Bills",?75,"Avg. Days",?114,"Total",?126,"Total"
	W !,"Clinic",?27,"#Scanned",?39,"#Insured",?53,"Billed",?64,"Printed",?75,"to Print",?87,"$ Billed",?100,"$ Recvd",?114,"Bills",?125,"Visits"
	W !,$TR($J(" ",IOM)," ","-")
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 W !!,"....task stopped at user request" Q
	Q
	;
	;
QUIT	K ^TMP("CTOT",$J),^TMP("DTOT",$J),^TMP("GTOT",$J),^TMP("MCCR",$J),^TMP("IBD-BILL",$J) W !
	Q
	;
	;
DASH	W !,"------------------",?27,"--------",?39,"--------",?51,"--------",?63,"--------",?75,"--------",?87,"--------",?99,"--------",?111,"--------",?123,"--------"
	Q
	;
DIVH	;  -- Write division header
	I IOSL<($Y+5) D HDR Q:IBQUIT
	Q:^TMP("DTOT",$J,IBDFDV)="0^0^0^0^0^0^0^0^0"
	W !!,?(IOM-$L(IBDFDV)+10/2),"DIVISION: ",IBDFDV,!
	Q

IBDFOSG1
IBDFOSG1	;ALB/MAF/AAS - SCANNED ENCOUNTERS WITH BILLING DATA CONT. ; JUL 6 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
START	;  -- Loop thru clinics
	N IBDFCLIN,IBQUIT
	S IBQUIT=0
	S ^TMP("GTOT",$J)="0^0^0^0^0^0^0^0^0"
	F IBDFCLIN=0:0 S IBDFCLIN=$O(^SC(IBDFCLIN)) Q:'IBDFCLIN  D CK(IBDFCLIN),BLD:'IBQUIT
	Q
	;
CHECK(CLIN)	;
	;  -- Check to see if clinic has a form and its one that
	;     is not for future use only.
	N IBDFNODE,IBDFCL,HASFORM
	S HASFORM=1
	I $O(^SD(409.95,"B",+CLIN,0)) D
	.S IBDFCL=$O(^SD(409.95,"B",+CLIN,0))
	.S IBDFNODE=^SD(409.95,IBDFCL,0)
	Q HASFORM
	;
CK(XCL)	;  -- Check clinic, division, form
	Q:'$D(^SC(XCL,0))
	S IBQUIT=0
	S IBDFNODE=$G(^SC(XCL,0))
	Q:$P(IBDFNODE,"^",3)'="C"
	S IBDIVNM=$P($G(^DG(40.8,+$P(IBDFNODE,"^",15),0)),"^",1) S:IBDIVNM="" IBDIVNM="NOT SPECIFIED"
	I VAUTD=0 Q:'$D(VAUTD(+$P(IBDFNODE,"^",15)))
	I '$$CHECK(XCL) S IBQUIT=1 Q
	S ^TMP("CTOT",$J,IBDIVNM,$P(IBDFNODE,"^",1))="0^0^0^0^0^0^0^0^0"
	I '$D(^TMP("DTOT",$J,IBDIVNM)) S ^TMP("DTOT",$J,IBDIVNM)="0^0^0^0^0^0^0^0^0"
	Q
	;
BLD	; -- scan appts
	F IBDFT=IBDFBEG:0 S IBDFT=$O(^SC(IBDFCLIN,"S",IBDFT)) Q:'IBDFT!($P(IBDFT,".",1)>IBDFEND)  D
	.F IBDFDA=0:0 S IBDFDA=$O(^SC(IBDFCLIN,"S",IBDFT,1,IBDFDA)) Q:'IBDFDA  I $D(^SC(IBDFCLIN,"S",IBDFT,1,IBDFDA,0)) S IBDFSA=^(0) S DFN=+IBDFSA D CK1
	Q
	;
CK1	;  -- Check scheduling nodes, forms tracking, if scanned, 
	;           patient insured, bill entered, bill printed, 
	;           avg time from encounter to printed bill.
	;
	I $P($G(^DPT(DFN,"S",IBDFT,0)),"^",2)]"" Q
	N IBDFXPC,IBDFYPC
	S IBDFXPC=$P(IBDFNODE,"^",1) ;Clinic name
	S IBDFYPC=$P($G(^DPT(+$G(DFN),0)),"^",1) ;patient name
	;
	I $D(^IBD(357.96,"APTAP",DFN,IBDFT)) S IBDFIFN=$O(^IBD(357.96,"APTAP",DFN,IBDFT,0)) I $P($G(^IBD(357.96,+IBDFIFN,0)),"^",11)>1,$P(^(0),"^",11)<5 D
	.S (IBFLG1,IBFLG2,IBFLG3,IBFLG5,IBFLG6,IBFLG7,IBFLG8,IBFLG9)=0
	.I $$INSURED^IBCNS1(DFN,IBDFT) S IBFLG3=1
	.I '$D(^DGCR(399,"AOPV",DFN,$P(IBDFT,".",1))) D SET Q
	.F IBDFNUM=0:0 S IBDFNUM=$O(^DGCR(399,"AOPV",DFN,$P(IBDFT,".",1),IBDFNUM)) Q:IBDFNUM']""!(IBFLG2)  D
	..S IBMCNODE=$G(^DGCR(399,IBDFNUM,0))
	..S IBMCSND=$G(^DGCR(399,IBDFNUM,"S"))
	..Q:$P(IBMCSND,"^",17)  ;canceled date
	..I 'IBFLG1,$P(IBMCSND,"^",1) D  ;bill entered
	...S IBFLG1=1,^TMP("IBD-ENTERED",$J,IBDFNUM)="",^TMP("IBD-ENTERED",$J,IBDIVNM,IBDFNUM,DFN)=""
	..I $P(IBMCSND,"^",12),'$D(^TMP("IBD-PRINTED",$J,IBDFNUM)) S IBFLG2=1,^TMP("IBD-PRINTED",$J,IBDFNUM)="" ;bill printed
	..;
	..; -- find amount billed/received if unique bill
	..I IBFLG2,'$D(^TMP("IBD-BILL",$J,IBDFNUM)) D
	...S ^TMP("IBD-BILL",$J,IBDFNUM)=1
	...S IBFLG6=+$P(^DGCR(399,IBDFNUM,"U1"),"^")
	...S X=$$TPR^PRCAFN(IBDFNUM) S:X>0 IBFLG7=X
	...S IBFLG8=1 ;is new unique bill
	...S IBFLG9=+$P($G(^DGCR(399,IBDFNUM,"OP",0)),"^",4)
	...Q
	..Q
	.;
	.S X1=$S($P(IBMCSND,"^",12):$P(IBMCSND,"^",12),1:VADAT("W")),X2=IBDFT D ^%DTC S IBFLG5=X
	.D SET
	Q
SET	;  -- Set counters in temp arrays
	;     Piece 1 := Number bills entered
	;     Piece 2 := Number bills generated
	;     Piece 3 := Number of forms scanned for patients with INS
	;     Piece 4 := Number of forms scanned
	;     Piece 5 := Number of days from encounter date to bill printed
	;     Piece 6 := amount billed (for unique bill)
	;     Piece 7 := amount received (for unique bills)
	;     Piece 8 := number of unique bills
	;     Piece 9 := Number of visit dates on bills in 8
	;
	S ^TMP("MCCR",$J,IBDIVNM,IBDFXPC,IBDFYPC,DFN,IBDFT)=IBDFCLIN_"^"_^IBD(357.96,IBDFIFN,0)
	;
	S IBDFTMP=^TMP("CTOT",$J,IBDIVNM,$P(IBDFNODE,"^",1))
	S IBDFTMP1=^TMP("DTOT",$J,IBDIVNM)
	S IBDFTMP2=^TMP("GTOT",$J)
	;
	I IBFLG1 D INC(1,1) ;     Bills Entered
	I IBFLG2 D INC(2,1) ;     Bills Generated
	I IBFLG3 D INC(3,1) ;     With insurance
	D INC(4,1) ;              number scanned
	I IBFLG5 D INC(5,IBFLG5) ;Days from encounter to Printed Bill
	I IBFLG6 D INC(6,IBFLG6) ;Amount billed
	I IBFLG7 D INC(7,IBFLG7) ;Amount Received
	I IBFLG8 D INC(8,1) ;     Number of Bills
	I IBFLG9 D INC(9,IBFLG9) ;number of visits on bills
	;
	S ^TMP("CTOT",$J,IBDIVNM,$P(IBDFNODE,"^",1))=IBDFTMP
	S ^TMP("DTOT",$J,IBDIVNM)=IBDFTMP1
	S ^TMP("GTOT",$J)=IBDFTMP2
	Q
	;
INC(PIECE,VALUE)	;
	; -- increment counters, 
	S $P(IBDFTMP,"^",PIECE)=$P(IBDFTMP,"^",PIECE)+VALUE
	S $P(IBDFTMP1,"^",PIECE)=$P(IBDFTMP1,"^",PIECE)+VALUE
	S $P(IBDFTMP2,"^",PIECE)=$P(IBDFTMP2,"^",PIECE)+VALUE
	Q

IBDFOSG2
IBDFOSG2	;ALB/TMP - ENCOUNTERS WITH BILLING DATA CONT. - SEP 11, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
TOT2	; #2a,b
	N IBDHD,IBBY,IBFLDS
	I '$D(DT) D DT^DICRW
	S (IBFLDS,IBBY)="OPT AMT BILLED & # GEN"
	S IBDHD="(#2a,2b) OUTPT DOLLARS BILLED, # OF OUTPT BILLS GENERATED"
	D PRT("2a,b",IBFLDS,IBBY,IBDHD)
	K IOP,DQTIME
	Q
	;
TOT3	; #3a,b
	N IBDHD,IBBY,IBFLDS
	I '$D(DT) D DT^DICRW
	S (IBFLDS,IBBY)="OPT NUM BILLS GEN < 65"
	S IBDHD="(#3a) # OF OUTPT BILLS FOR PATIENTS < 65 YEARS OF AGE DATE: "
	D PRT("3a",IBFLDS,IBBY,IBDHD)
	;
	I '$D(IOP) W !,"#3b" D SELDEV Q:'$D(IOP)!('$D(DQTIME))
	S (IBFLDS,IBBY)="OPT NUM BILLS GEN 65 & UP"
	S IBDHD="(#3b) # OF OUTPT BILLS FOR PATIENTS AGE 65 AND OVER"
	D PRT("3b",IBFLDS,IBBY,IBDHD)
	K IOP,DQTIME
	Q
	;
TOT4	; #4
	N IBDHD,IBBY,IBFLDS
	I '$D(DT) D DT^DICRW
	S (IBFLDS,IBBY)="OPT # BILLS GEN < 30 DYS"
	S IBDHD="(#4) # BILLS GENERATED < 30 DAYS FROM DT OF SERVICE"
	D PRT(4,IBFLDS,IBBY,IBDHD)
	K IOP,DQTIME
	Q
	;
TOT7	; #7
	N IBDHD,IBBY,IBFLDS
	I '$D(DT) D DT^DICRW
	S (IBFLDS,IBBY)="CPT CODE - MNTH OPT BILLS"
	S IBDHD="(#7) TOTAL # CPT CODES ON OUTPATIENT BILLS FOR A MONTH"
	D PRT(7,IBFLDS,IBBY,IBDHD)
	K IOP,DQTIME
	Q
	;
TOT10	;  #10a,b
	N IBDHD,IBBY,IBFLDS
	I '$D(DT) D DT^DICRW
	S (IBFLDS,IBBY)="LAG ENC DT TO CREAT & PRT"
	S IBDHD="(#10a,10b) AVG LAG FROM ENC DATE TO CREATE AND PRINT DATES"
	D PRT(10,IBFLDS,IBBY,IBDHD)
	K IOP,DQTIME
	Q
	;
TOT11	;  #11
	N DTRNG,DTRNG1
	I '$D(DT) D DT^DICRW
	D END
	W !,"#11"
	W !!,"Scanned Encounter Forms with Outpatient Bills Generated."
	;I $D(^DG(43,1,"GL")) S IBDFMUL=$P(^DG(43,1,"GL"),"^",2)
	;I $D(IBDFMUL),IBDFMUL D DIVISION^VAUTOMA I Y=-1 G END
	;I 'IBDFMUL S IBDFDV=$O(^DG(40.8,0))
	S (VAUTD,IBDFMUL)=1
	;
	W !!,"You will need a 132 column printer for this report!",!
	D SELDEV I '$D(IOP)!('$D(DQTIME)) G END
	;
	D DTRNG ;,SELMONTH
	S IBZ=$G(DTRNG1($E(Y,1,5)_"01"))
	I IBZ,$D(DTRNG(IBZ)) S IBBDT=$P(DTRNG(IBZ),U),IBEDT=$P(DTRNG(IBZ),U,2) D PRT11
	S DIR(0)="SB^A:ALL 24 MONTHS;S:SELECTED MONTH ONLY",DIR("A")="INCLUDE ALL MONTHS OR A SELECTED MONTH",DIR("B")="A" D ^DIR K DIR
	G:$D(DIRUT) TOT11Q
	I Y="A" D  G TOT11Q
	.F IBZ=1:1:24 D PRT11
	D SELMONTH
	S IBZ=$G(DTRNG1($E(Y,1,5)_"01")) I IBZ D PRT11
	;
TOT11Q	G END
	;
PRT11	;
	I IBZ,$D(DTRNG(IBZ)) S IBBDT=$P(DTRNG(IBZ),U),IBEDT=$P(DTRNG(IBZ),U,2)
	S DIPA("DTFR")=IBBDT
	W !,"#11  MONTH: "_$$DT()
	S IBDFL="CLN",VAUTC=1
	D NOW^%DTC S Y=$E(%,1,12) S VADAT("W")=Y D ^VADATE S IBDFDAT=VADATE("E")
	S IBDFBEG=IBBDT,IBDFEND=IBEDT
	S ZTDTH=$TR(DQTIME,"@",".")
	S ZTRTN="DQ^IBDFOSG",ZTSAVE("IB*")="",ZTSAVE("VAU*")="",ZTSAVE("VAD*")="",ZTDESC="Scanned Encntr Forms Totals" D ^%ZTLOAD
	W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled")
	Q
	;
END	D END^IBDFOSG
	K DQTIME,IOP
	Q
	;
PRT(IBTOT,IBFLDS,IBBY,IBDHD,DIOBEG,DIOEND)	; Prt rpt
	N IBZ,DTRNG,DTRNG1,DIPA,Y,X
	W !,"#",IBTOT
	D:'$D(IOP) SELDEV G:'$D(IOP)!('$D(DQTIME)) PRTQ
	D DTRNG
	S DIR(0)="SB^A:ALL 24 MONTHS;S:SELECTED MONTH ONLY",DIR("A")="INCLUDE ALL MONTHS OR A SELECTED MONTH",DIR("B")="A" D ^DIR K DIR
	G:$D(DIRUT) PRTQ
	I Y="A" D  G PRTQ
	.F IBZ=1:1:24 D PRT1
	D SELMONTH
	S IBZ=$G(DTRNG1($E(Y,1,5)_"01")) I IBZ D PRT1
PRTQ	Q
	;
PRT1	I $G(IBTOT)=10 S DIOBEG="D BEG10^IBDFOSG2",DIOEND="D END10^IBDFOSG2"
	S DIPA("DTTO")=$P(DTRNG(IBZ),U,2),DIPA("DTFR")=$P(DTRNG(IBZ),U),FLDS="[EFDP "_IBFLDS_"]",BY="[EFDP "_IBBY_"]"
	S FR="3,"_DIPA("DTFR"),TO="4,"_DIPA("DTTO"),L=0,DHD=IBDHD_"   MONTH: "_$$DT(),DIC="^DGCR(399,",DIS(0)="I $O(^DGCR(399,D0,""OP"",0))'="""""
	W !,"TOTALS FOR #"_IBTOT_" ("_$$DT()_")"
	D EN1^DIP
	Q
	;
BEG10	; DIOBEG
	S ^TMP($J,"EFDPTOT",1)=0,^(2)=0,^TMP($J,"EFDPTOT",3)=0,^(4)=0
	Q
	;
END10	; DIOEND
	W !!,"(10a) AVERAGE # DAYS LAG FROM ENCOUNTER TO BILL CREATE: ",$J($S(^TMP($J,"EFDPTOT",2):^TMP($J,"EFDPTOT",1)/^TMP($J,"EFDPTOT",2),1:0),10,2)
	W !,"(10b) AVERAGE # DAYS LAG FROM ENCOUNTER TO BILL PRINT : ",$J($S(^TMP($J,"EFDPTOT",4):^TMP($J,"EFDPTOT",3)/^TMP($J,"EFDPTOT",4),1:0),10,2)
	K ^TMP($J,"EFDPTOT")
	Q
	;
LAG	; Set up lag time accumulators-from computed fld
	N X1,X2,Z,Z0,Z1
	S (Z,X)=0,Z0=+$G(^DGCR(399,D0,"S")),Z1=+$P($G(^("S")),U,12)
	F  S Z=$O(^DGCR(399,D0,"OP",Z)) S:'Z X=0 Q:'Z  D  ;loop thru opt visits
	.S X1=Z0,X2=+$G(^DGCR(399,D0,"OP",Z,0)) I X2,X1 D ^%DTC S ^TMP($J,"EFDPTOT",1)=$G(^TMP($J,"EFDPTOT",1))+X,^TMP($J,"EFDPTOT",2)=$G(^TMP($J,"EFDPTOT",2))+1 ;elapsed time and count - encounter to bill create
	.S X1=Z1,X2=+$G(^DGCR(399,D0,"OP",Z,0)) I X2,X1 D ^%DTC S ^TMP($J,"EFDPTOT",3)=$G(^TMP($J,"EFDPTOT",3))+X,^TMP($J,"EFDPTOT",4)=$G(^TMP($J,"EFDPTOT",4))+1 ;elapsed tm,ct (encntr-bill 1st prt)
	Q
	;
GEN30	; Was printed within 30 days of any visit on bill
	N X1,X2,Z,Z0
	S (Z,X)=0,Z0=+$P($G(^DGCR(399,D0,"S")),U,12) Q:'Z0
	F  S Z=$O(^DGCR(399,D0,"OP",Z)) S:'Z X=0 Q:'Z  D  Q:X  ;loop thru opt visits
	.S X1=Z0,X2=+$G(^DGCR(399,D0,"OP",Z,0)) I X2,X1 D ^%DTC S X=$S(X<30:1,1:0)
	Q
	;
DTRNG	;
	N Z,Z0,X1,X2,X
	;S Z=2931001 F Z0=1:1:23 D
	S Z=2940401 F Z0=1:1:24 D
	.S X2=-1,Z1=$E(Z,1,5)+1_"01" S:$E(Z1,4,5)=13 Z1=Z1+8800
	.S X1=Z1 D C^%DTC S DTRNG(Z0)=Z_U_X,DTRNG1(Z)=Z0,Z=Z1
	Q
	; 
SELDEV	; Device/queue tm (IOP,DQTIME returned)
	K IOP,DQTIME
	S %ZIS("A")="Select device the output will be queued to: ",%ZIS="NQ",%ZIS("B")=""
	D ^%ZIS K %ZIS
	I IO=IO(0) W !,*7,"CANNOT BE YOUR HOME DEVICE" G SELDEV
	I POP D HOME^%ZIS G SELDEVQ
	S IOP="Q;"_IO
	S %DT("A")="Select date/time to queue these reports to run: ",%DT="AEXRF",%DT("B")="NOW",%DT(0)="NOW" D ^%DT K %DT
	I Y>0 S DQTIME=$TR(Y,".","@") I $L($P(Y,"@",2))<4 S DQTIME=DQTIME_$E("0000",1,4-$L($P(DQTIME,"@",2)))
SELDEVQ	Q
	;
DT()	; Display date format
	S Y=$E(DIPA("DTFR"),1,5)_"00"
	D DD^%DT
	Q Y
	;
SELMONTH	;
	F  S %DT="AEPN",%DT(0)=-2960300,%DT("A")="SELECT MONTH: " D ^%DT K %DT Q:X="^"!($D(DTOUT))!($D(DTRNG1($E(Y,1,5)_"01")))  W !,*7,"Must choose a month from 4/94 thru 3/96"
	Q
	;

IBDFOSG3
IBDFOSG3	;ALB/MAF/AAS - NUMBER OF ENCOUNTERS WITH CPT'S AND DX'S REPORT ;3/18/96
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
%	I '$D(DT) D DT^DICRW
	D END
	W !!,"Number of Encounters with CPT, Diagnosis"
	S VAUTD=1 I $D(^DG(43,1,"GL")) D DIVISION^VAUTOMA G:Y=-1 END
	D NOW^%DTC S Y=$E(%,1,12) S VADAT("W")=Y D ^VADATE S IBDFDAT=VADATE("E")
	;
DATE	; -- select date
	S (IBBDT,IBDFBEG)=2940401,(IBEDT,IBDFEND)=2960331
	;
DEV	; -- select device, run option
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="DQ^IBDFOSG3",ZTSAVE("IB*")="",ZTSAVE("VA*")="",ZTDESC="IBD - Number of Encounters with Stop Codes, CPT, Diagnosis" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G END
	;
	U IO
	S X=132 X ^%ZOSF("RM")
DQ	D PRINT G END
	Q
	;
END	; -- Clean up
	K ^TMP("MNTH",$J),^TMP("DTOT",$J),^TMP("GTOT",$J) W !
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K IBBDT,IBCS,IBDDT,IBDDT1,IBDFMN,IBDFMN1,IBDFMNI,IBDFN,IBDIV,IBDIVNM,IBI,IBIFN,IBJ,IBMNTH,IBNODE,IBPARNT,IBPIECE,IBPR,IBPROC,IBSTOP,POP,SDCNT,U
	K IBDFBEG,IBDFDAT,IBDFDIV,IBDFDVE,IBDFEND,IBEDT,IBFLG4,IBHDT,IBQUIT,IBTSBDT,IBTSEDT,SDDXY,VADAT,VADATE,X,Y,IBCLIN,IBPAG,VAUTD
	Q
	;K X,Y,DFN,IBPAG,IBHDT,IBDT,IBBDT,IBEDT,IBQUIT,IBDFDVE
	;K IBCNT,IBDFBEG,IBDFCLI,IBDFDA,IBDFDAT,IBDFDIV,IBDFEND,IBDFIFN,IBDFNODE,IBDFNUM,IBDFSA,IBDFT,IBDFTMP,IBDFTMP1,IBDFTMP2,IBDFTPRT
	;K IBFLG1,IBFLG2,IBFLG3,IBFLG4,IBFLG5,IBFLG6,IBFLG7,IBFLG8,IBFLG9,IBMCNODE,IBMCSND,IBNAM,IBTSBDT,IBTSEDT
	;K VADAT,VADATE,VAUTC,VAUTD
	Q
	;
PRINT	; -- print report
	;    Data sorted into ^tmp arrays
	;                    
	;    Monthly Totals  := ^tmp("mnth",$j,division,year/month)=
	;    Division Totals := ^tmp("dtot",$j,division)       =
	;    Grand Totals    := ^tmp("gtot",$j)                =
	;
	S (IBPAG,IBDFDVE)=0,IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0
	S IBTSBDT=IBBDT-.1,IBTSEDT=IBEDT+.9
	D QUIT
	D START^IBDFOSG4
	;
PR	;
	I '$D(^TMP("MNTH",$J)) D HDR W !!,"No Data Meeting This Criteria for the Date Range Chosen",! Q
	N IBDFDV,IBDFCL,IBDNODE,IBDFTMP,IBDFPAT,IBDFPT,IBDFT
	S (IBDFDV,IBDFCL,IBDFPT)=0
	F IBDFDIV=0:0 S IBDFDV=$O(^TMP("MNTH",$J,IBDFDV)) Q:IBDFDV']""!(IBQUIT)  D HDR Q:IBQUIT  D
	.D DIVH
	.S IBDFMN=0
	.F IBDFMNI=0:0 S IBDFMN=$O(^TMP("MNTH",$J,IBDFDV,IBDFMN)) Q:IBDFMN=""  D ONEMN I $O(^TMP("MNTH",$J,IBDFDV,IBDFMN))="" S IBDFDVE=1 D ONEDV
	;
	;  -- Print Totals Page
	S IBDFDVE=0
	Q:IBQUIT
	D HDR
	S (IBDFDV,IBDFCL,IBDFPT)=0
	S IBFLG4=1 ;1 := on division totals page
	F IBDFDIV=0:0 S IBDFDV=$O(^TMP("DTOT",$J,IBDFDV)) Q:IBDFDV']""!(IBQUIT)  D ONEDV
	Q:IBQUIT
	D DASH
	D LINE("GRAND TOTAL",^TMP("GTOT",$J))
	Q
	;
ONEMN	; -- Print one months data
	Q:IBQUIT
	N IBDFNM1
	Q:'$D(^TMP("MNTH",$J,IBDFDV,IBDFMN))!(^TMP("MNTH",$J,IBDFDV,IBDFMN)="0^0^0")
	S Y=IBDFMN D DD^%DT S IBDFMN1=Y
	D LINE(IBDFMN1,^TMP("MNTH",$J,IBDFDV,IBDFMN))
	Q
	;
ONEDV	;  -- Print Division totals
	Q:IBQUIT
	I IOSL<($Y+5) D HDR Q:IBQUIT
	Q:^TMP("DTOT",$J,IBDFDV)="0^0^0"&('$D(IBFLG4))
	I IBDFDVE=1 D DASH S IBDFDVE=0
	D LINE($E(IBDFDV,1,25)_"  ("_$P($G(^DG(40.8,$O(^DG(40.8,"B",IBDFDV,0)),0)),"^",2)_")",^TMP("DTOT",$J,IBDFDV))
	Q
	;
LINE(NAME,IBX)	;
	; -- print detail line
	;    input Name := text to be printed
	;          ibx  ;= 3 piece global node containing data
	;
	I IOSL<($Y+5) D HDR Q:IBQUIT
	W !,$E(NAME,1,35)
	W ?39,$J($P(IBX,"^",2),8)
	W ?57,$J($P(IBX,"^",3),8)
	Q
	;
HDR	; -- Print header for report
	Q:IBQUIT
	I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1
	W !,"# Encounters / CPT's, Dx",?(IOM-33),"Page ",IBPAG,"  ",IBHDT
	W !,"For Period beginning on ",$$DAT1^IBOUTL(IBBDT)," to ",$$DAT1^IBOUTL(IBEDT)
	W !,?44,"CPT",?56,"Diagnosis"
	W !,$TR($J(" ",IOM)," ","-")
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 W !!,"....task stopped at user request" Q
	Q
	;
	;
QUIT	K ^TMP("MNTH",$J),^TMP("DTOT",$J),^TMP("GTOT",$J) W !
	Q
	;
	;
DASH	W !,"------------------",?39,"--------",?57,"--------"
	Q
	;
DIVH	;  -- Write division header
	I IOSL<($Y+5) D HDR Q:IBQUIT
	Q:^TMP("DTOT",$J,IBDFDV)="0^0^0"
	W !!,?(IOM-$L(IBDFDV)+10/2),"DIVISION: ",IBDFDV_"  ("_$P($G(^DG(40.8,$O(^DG(40.8,"B",IBDFDV,0)),0)),"^",2)_")",!
	Q

IBDFOSG4
IBDFOSG4	;ALB/MAF/AAS - NUMBER OF ENCOUNTERS WITH CPT'S AND DX'S CONT. ; 3/18/96
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
START	;  -- Loop thru MONTHS
	N IBQUIT
	S IBQUIT=0
	S ^TMP("GTOT",$J)="0^0^0"
BLD	; -- scan ENCOUNTERS
	F IBDDT=IBDFBEG:0 S IBDDT=$O(^SCE("B",IBDDT)) Q:'IBDDT!($P(IBDDT,".",1)>IBDFEND)  D
	.F IBIFN=0:0 S IBIFN=$O(^SCE("B",IBDDT,IBIFN)) Q:'IBIFN  S IBNODE=$G(^SCE(IBIFN,0)) D
	..S IBDIV=$P(IBNODE,"^",11)  ;division
	..S IBDIVNM=$P($G(^DG(40.8,+IBDIV,0)),"^",1)
	..I VAUTD=0 Q:'$D(VAUTD(+IBDIV))
	..S IBDFN=$P(IBNODE,"^",2)  ;patient
	..S IBSTOP=$P(IBNODE,"^",3)  ;stop code
	..S IBCLIN=$P(IBNODE,"^",4)  ;clinic
	..S IBPARNT=$P(IBNODE,"^",6)  ;parent
	..S IBPROC=$P(IBNODE,"^",8)  ;process
	..S IBMNTH=$E($P(IBNODE,"^"),1,3)_$E($P(IBNODE,"^"),4,5)  ;number of month
	..Q:'IBDFN
	..D PROC I $D(IBXY) S IBPIECE=2 D SET
	..D SET^SDCO4(IBIFN) I $D(SDDXY) S IBPIECE=3 D SET
	..Q
	Q
	;
	;
SET	;  -- Set totals
	I '$D(^TMP("DTOT",$J,IBDIVNM)) S ^TMP("DTOT",$J,IBDIVNM)="0^0^0"
	I '$D(^TMP("MNTH",$J,IBDIVNM,IBMNTH)) S ^TMP("MNTH",$J,IBDIVNM,IBMNTH)="0^0^0"
	S $P(^TMP("MNTH",$J,IBDIVNM,IBMNTH),"^",IBPIECE)=$P(^TMP("MNTH",$J,IBDIVNM,IBMNTH),"^",IBPIECE)+1
	S $P(^TMP("DTOT",$J,IBDIVNM),"^",IBPIECE)=$P(^TMP("DTOT",$J,IBDIVNM),"^",IBPIECE)+1
	S $P(^TMP("GTOT",$J),"^",IBPIECE)=$P(^TMP("GTOT",$J),"^",IBPIECE)+1
	Q
PROC	;  -- Check to see if there is at least one procedure for the encounter.
	N IBCNT S IBCNT=0
	K IBXY
	S IBDDT1=$P(IBDDT,"."),IBI=IBDDT1-.000001
	F  S IBI=$O(^SDV("C",IBDFN,IBI)) Q:'IBI!(IBI>(IBDDT1+.25))  D
	.S IBCS=0 F  S IBCS=$O(^SDV(IBI,"CS",IBCS)) Q:'IBCS  I $D(^SDV(IBI,"CS",IBCS,0)) I $P(^SDV(IBI,"CS",IBCS,0),"^",8)=IBIFN,$D(^SDV(IBI,"CS",IBCS,"PR")) S IBPR=^("PR") D  Q:$D(IBXY)
	..F IBJ=1:1:5 I $P(IBPR,"^",IBJ) S IBCNT=IBCNT+1,IBXY(IBCNT)=$P(IBPR,"^",IBJ)_"^"_IBI Q:$D(IBXY(IBCNT))
	Q
	;

IBDFPCE
IBDFPCE	;ALB/AAS - AICS UPDATE FROM PCE ; 12-DEC-95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
MAN	; -- called from IBDF PCE EVENT (invoked by the PXK VISIT DATA EVENT)
	;    if aics starts event, quit
	;    else
	;    find appointment date from visit node
	;    find entry in forms tracking for visit
	;    update manual data entry field to yes if new or old visit edited
	;    update manual data entry field to no if entry deleted
	;
	Q:$D(IBD("AICS"))
	N IBDVST,IBD
	S IBDVST=""
	;
	F  S IBDVST=$O(^TMP("PXKCO",$J,IBDVST)) Q:'IBDVST  D
	.S IBDVST("AFTER")=$G(^TMP("PXKCO",$J,IBDVST,"VST",IBDVST,0,"AFTER")),IBDVST("BEFORE")=$G(^("BEFORE"))
	.; -- new or old visit
	.I IBDVST("AFTER")]"",IBDVST("BEFORE")]""!(IBDVST("BEFORE")="") S IBD("APPT")=+IBDVST("AFTER"),IBD("VALUE")=1 D UPDATE(.IBD) Q
	.;
	.; -- deleted visit
	.I IBDVST("AFTER")="",IBDVST("BEFORE")]"" S IBD("APPT")=+IBDVST("BEFORE"),IBD("VALUE")=0 D UPDATE(.IBD) Q
	;
	Q
	;
UPDATE(IBD)	; -- procedure to update manual data entry detected
	;
	N X,Y,DA,DIC,DIE,DR,IBDX,IBDC
	I '$D(IBD("FORM ID")) S IBD("FORM ID")=$$FINDID^IBDF18C(DFN,IBD("APPT"))
	;
	; -- ibd(form id) can be returned with multiple pieces if more than
	;    one form for appt.
	F IBDX=1:1 S DA=+$P(IBD("FORM ID"),"^",IBDX) Q:'DA  D
	. Q:$P($G(^IBD(357.96,+DA,0)),"^",13)
	. Q:$P($G(^IBD(357.96,+DA,0)),"^",2)'=DFN
	. Q:$P($G(^IBD(357.96,+DA,0)),"^",3)'=IBD("APPT")
	. S DIE="^IBD(357.96,",DR=".13////"_+$G(IBD("VALUE"))
	. D ^DIE S IBDC=$G(IBDC)+1
	. I IBDC=1,'$D(ZTQUEUED) W !,"Updating Encounter Form Tracking (AICS)"
	Q

IBDFPE
IBDFPE	;MAF/ALB - ENCOUNTER FORMS QUEUEING PARAMETERS DISPLAY 1 31 94
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
EN	; -- main entry point for IBDF EF QUEUE PARMS
	D EN^VALM("IBDF EF QUEUE PARMS")
	Q
	;
HDR	; -- header code
	S VALMHDR(1)="This is the list of Print Manager's Queuing Parameters (PMQP) for your facility"
	S VALMHDR(2)="You may enter new ones or edit those already set up."
	Q
	;
	;
INIT	; -- init variables and list array
	N IBFASTXT
	S (IBDCAT,IBDNME,IBDTYPE,VALMCNT,IBDCNT,IBDCNT1,IBFASTXT)=0
	K ^TMP("IBDRPT",$J),^TMP("IBDIDX",$J)
	F IBDNUM=0:0 S IBDNUM=$O(^IBD(357.09,IBDNUM)) Q:'IBDNUM  F IBDNAME=0:0 S IBDNME=$O(^IBD(357.09,IBDNUM,"Q","B",IBDNME)) Q:IBDNME=""  F IBDIFN=0:0 S IBDIFN=$O(^IBD(357.09,IBDNUM,"Q","B",IBDNME,IBDIFN)) Q:IBDIFN']""  D SET1
	I '$D(^TMP("IBDRPT",$J)) D NUL
	Q
	;
	;
SET1	; -- Set up List
	S IBDNODE=$G(^IBD(357.09,1,"Q",IBDIFN,0))
	S IBDCNT1=IBDCNT1+1
	S X="",X=$$SETSTR^VALM1(IBDCNT1_")",X,1,3)
	S X=$$SETSTR^VALM1($P(IBDNODE,"^",1),X,30,40) D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
	S IBDCAT($P(IBDNODE,"^",1))=IBDCNT,IBDTYPE(IBDCNT1)=IBDIFN_"^"_IBDNUM
	S X="",X=$$SETSTR^VALM1($$LOWER^VALM1("  STARTING DATE/TIME: "),X,1,22)
	S IBDVAL=$S($P(IBDNODE,"^",2)]"":$$FDTTM^VALM1($P(IBDNODE,"^",2)),1:"")
	S X=$$SETSTR^VALM1(IBDVAL,X,23,17)
	S IBDVAL=$S($P(IBDNODE,"^",7)]"":$P(IBDNODE,"^",7),1:"")
	S X=$$SETSTR^VALM1($$LOWER^VALM1("DAYS TO PRINT AHEAD: "),X,40,21)
	S X=$$SETSTR^VALM1($J(IBDVAL,5),X,65,5) D TMP
	S X="",X=$$SETSTR^VALM1($$LOWER^VALM1("    ENDING DATE/TIME: "),X,1,22)
	S IBDVAL=$S($P(IBDNODE,"^",3)]"":$$FDTTM^VALM1($P(IBDNODE,"^",3)),1:"")
	S X=$$SETSTR^VALM1(IBDVAL,X,23,17)
	S IBDVAL=$P(IBDNODE,"^",5)
	S X=$$SETSTR^VALM1($$LOWER^VALM1("       ADD ONS ONLY: "),X,40,21)
	S X=$$SETSTR^VALM1($J($S(IBDVAL=1:"YES",1:"NO"),5),X,65,5) D TMP
	S X="",X=$$SETSTR^VALM1($$LOWER^VALM1("       CLINIC GROUPS: "),X,1,22)
	S IBDVAL=$P($G(^IBD(357.99,+$P(IBDNODE,"^",6),0)),"^",1)
	S X=$$SETSTR^VALM1(IBDVAL,X,23,17)
	S X=$$SETSTR^VALM1($$LOWER^VALM1("  LAST DATE PRINTED: "),X,40,21)
	S IBDVAL=$S($P(IBDNODE,"^",12)]"":$$FDTTM^VALM1($P(IBDNODE,"^",12)),1:"")
	S X=$$SETSTR^VALM1(IBDVAL,X,62,17) D TMP
	S IBDVAL=$P(IBDNODE,"^",4)
	S IBDVAL=$$LOWER^VALM1($S(IBDVAL=2:"DIV/TERM DIG",IBDVAL=3:"DIV/CLIN/TERM DIG",1:"DIV/CLIN/PATIENT"))
	S X="",X=$$SETSTR^VALM1($$LOWER^VALM1("             SORT BY: "),X,1,22)
	S X=$$SETSTR^VALM1(IBDVAL,X,23,18)
	S IBDVAL=$S($P(IBDNODE,"^",10)]"":$P(IBDNODE,"^",10),1:"")
	S X=$$SETSTR^VALM1($$LOWER^VALM1("     PRINT PRIORITY: "),X,40,21)
	S X=$$SETSTR^VALM1($J(IBDVAL,5),X,65,5) D TMP
	S IBDVAL=$P(IBDNODE,"^",8)
	S IBDVAL=$$LOWER^VALM1($S(IBDVAL="R":"RUN REGARDLESS",IBDVAL="I":"IGNORE HOLIDAYS/WEEKENDS",IBDVAL="H":"IGNORE HOLIDAYS",IBDVAL="W":"IGNORE WEEKENDS",IBDVAL="N":"NOT ACTIVE",1:"RUN TODAY"))
	S X="",X=$$SETSTR^VALM1($$LOWER^VALM1("SPECIAL INSTRUCTIONS: "),X,1,22)
	S X=$$SETSTR^VALM1(IBDVAL,X,23,30)
	S X=$$SETSTR^VALM1($$LOWER^VALM1("DEVICE: "),X,53,21)
	S IBDVAL=$$LOWER^VALM1($P(IBDNODE,"^",9))
	S X=$$SETSTR^VALM1(IBDVAL,X,62,17) D TMP
	S X="",X=$$SETSTR^VALM1(X,X,1,80) D TMP
	Q
	;
	;
TMP	; -- Set up Array
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S ^TMP("IBDRPT",$J,IBDCNT,0)=X,^TMP("IBDRPT",$J,"IDX",VALMCNT,IBDCNT1)=""
	S ^TMP("IBDIDX",$J,IBDCNT)=VALMCNT_"^"_IBDIFN
	Q
	;
	;
JUMP	; -- Jump to a Specific Parameter Set
	D FULL^VALM1
	I $D(XQORNOD(0)),$P(XQORNOD(0),"^",4)]"" S X=$P(XQORNOD(0),"^",4) S X=$P(X,"=",2) I X]"" D:X?1.6N JSEL S DA(1)=1,DIC="^IBD(357.09,"_DA(1)_","_"""Q"""_",",DIC(0)="QEZ" D ^DIC G:Y<0 JMP S Y=+Y D JUMP1 Q
JMP	S DA(1)=1,DIC="^IBD(357.09,"_DA(1)_","_"""Q"""_",",DIC(0)="AEMN",DIC("A")="Select Parameter Group you wish to move to: " D ^DIC K DIC
	I X["^" S VALMBG=1,VALMBCK="R" Q
JUMP1	I Y<0 G JUMP
	N IBDXCAT
	S IBDXCAT=$P(^IBD(357.09,DA(1),"Q",+Y,0),"^",1)
	I '$D(IBDCAT(IBDXCAT)) W !!,"There is no data listed for this Parameter Group" G JMP
	S VALMBG=IBDCAT(IBDXCAT) S VALMBCK="R" K DA(1) Q
	Q
	;
	;
JSEL	; -- Convert number selected to name
	S IBDVALM=X,X=$S($D(IBDTYPE(IBDVALM)):$P(IBDTYPE(IBDVALM),"^",1),1:"") I X]"" S DA(1)=1,X=$P(^IBD(357.09,DA(1),"Q",X,0),"^",1)
	Q
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
	;
EXIT	; -- exit code
	K IBDCAT,IBDNME,IBDTYPE,VALMCNT,IBDCNT,IBDCNT1,IBDNAME,IBDNUM,IBDNME,IBDIFN,IBDVAL,IBDNODE,IBFASTXT
	K ^TMP("IBDRPT",$J),^TMP("IBDIDX",$J)
	Q
	;
NUL	; -- NULL MESSAGE
	S ^TMP("IBDRPT",$J,1,0)=" ",^TMP("IBDRPT",$J,2,0)="There are no PARAMETER GROUPS listed.",^TMP("IBDIDX",$J,1)=1,^TMP("IBDIDX",$J,2)=2
	Q

IBDFPE1
IBDFPE1	;MAF/ALB - ENCOUNTER FORMS QUEUEING PARAMETERS DISPLAY CONT.; 1 31 94
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
EDT	; -- Edit Parameter Groups
	N IBDVALM,IBDAT,VALMY
	S VALMBCK=""
	D SEL^VALM2 G REP:'$O(VALMY(0)) S IBDVALM=0
	D FULL^VALM1 S VALMBCK="R"
	F IBDVALM=0:0 S IBDVALM=$O(VALMY(IBDVALM)) Q:'IBDVALM  S DA=$S($D(IBDTYPE(IBDVALM)):$P(IBDTYPE(IBDVALM),"^",1),1:"") I DA]"" D
	.S DA(1)=1,DIE="^IBD(357.09,"_DA(1)_","_"""Q"""_",",DA=DA,DR=".01;.04:.1" D ^DIE K DA,DIE,DIC,DR
	D REP Q
	;
	;
ADD	; -- Add New Print Parameters
	D FULL^VALM1
	N DLAYGO
	I '$O(^IBD(357.09,0))!($O(^IBD(357.09,0))&'$D(^IBD(357.09,+$O(^IBD(357.09,0)),"Q",0))) W ! S DIC="^IBD(357.09,",DIC(0)="AELQMN",DIC("DR")=".01",DLAYGO=357.09 D ^DIC K DIC G:Y<1 REP S DA=+Y D
	.;S DIE="^IBD(357.09,",DA=DA,DR="11",DR(2,357.091)=".04:.1" D ^DIE K DA,DIE,DR
	W ! S DA(1)=1,DIC("A")="Select Print Mgrs. Queuing Params. Name: ",DIC="^IBD(357.09,"_DA(1)_","_"""Q"""_",",DIC(0)="AELQMN",DIC("DR")=".01",DLAYGO=357.09 D ^DIC K DIC G:Y<1 REP S DA=+Y D
	.S DA(1)=1,DIE="^IBD(357.09,"_DA(1)_","_"""Q"""_",",DA=DA
	.S DR=".04//"_1_";.05//"_"NO"_";.06"_";.07//"_5_";.08//"_"R"_";.09"_";.1//"_10
	.D ^DIE K DA,DIE,DIC,DR
	.Q
REP	D INIT^IBDFPE S VALMBCK="R" Q
	;
STAT	; -- Find out the status of the queued job and kill a tasked job
	N IBDVALM,IBDAT,VALMY,IBDFNODE,IBDFSTAT
	S VALMBCK=""
	D SEL^VALM2 G REP:'$O(VALMY(0)) S IBDVALM=0
	D FULL^VALM1 S VALMBCK="R"
	F IBDVALM=0:0 S IBDVALM=$O(VALMY(IBDVALM)) Q:'IBDVALM  S DA=$S($D(IBDTYPE(IBDVALM)):$P(IBDTYPE(IBDVALM),"^",1),1:"") I DA]"" D
	.S DA(1)=1,IBDFNODE=^IBD(357.09,DA(1),"Q",DA,0) S (IBDFSTAT,ZTSK)=$P(IBDFNODE,"^",11) I IBDFSTAT]"" D:$D(IBDFSTOP) KILL^%ZTLOAD D:'$D(IBDFSTOP) STAT^%ZTLOAD D
	..D FULL^VALM1
	..W !!,"Status of Queued Job <<< "_$P(IBDFNODE,"^",1)_" >>>",!!
	..I $D(ZTSK(0)) W !,"       TASK: ",$S($D(ZTSK):ZTSK,1:"")_"  -  ",$S(ZTSK(0)=1:"Defined",1:"Undefined")
	..I $D(ZTSK(1)) W !,"STATUS CODE: ",ZTSK(1)
	..I $D(ZTSK(2)) W !,"     STATUS: ",ZTSK(2)
	..I $D(IBDFSTOP) W:ZTSK(0)=1 !,"SUCCESSFUL DELETION OF TASK" W !!,"***JOB STOPPED UPON REQUEST***"
	..Q
	I IBDFSTAT']"" W !!,"Status of Queued Job <<< "_$P(IBDFNODE,"^",1)_" >>>",!!,"JOB NOT TASKED!" I $D(IBDFSTOP) W "  NO NEED TO INTERUPT JOB!"
	K DA,DA(1)
	D PAUSE^VALM1,REP Q
	Q
	;
DEL	; -- Delete Clinic Group
	N IBDVALM,VALMY,DIR,DIRUT,DUOUT
	S VALMBCK=""
	D SEL^VALM2 G REP:'$O(VALMY(0)) S IBDVALM=0
	D FULL^VALM1 S VALMBCK="R"
	;
	F IBDVALM=0:0 S IBDVALM=$O(VALMY(IBDVALM)) Q:'IBDVALM  S DA=$S($D(IBDTYPE(IBDVALM)):$P(IBDTYPE(IBDVALM),"^",1),1:"") I DA]"" D
	.S DA(1)=1,DIK="^IBD(357.09,"_DA(1)_","_"""Q"""_","
	.W !!,"Paramater Group: "_$P($G(^IBD(357.09,1,"Q",DA,0)),"^",1)
	.W ! S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are You Sure you want to delete "_$P($G(^IBD(357.09,1,"Q",DA,0)),"^",1)
	.D ^DIR K DIR I Y'=1 W !,"Entry ",$P($G(^IBD(357.09,1,"Q",DA,0)),"^",1)," not Deleted!" Q
	.D DP1
	;
DELQ	D REP
	S VALMBCK="R" Q
	;
DP1	; -- actual deletion
	S DIK="^IBD(357.09,"_DA(1)_","_"""Q"""_"," D ^DIK
	W !,"Entry ",IBDVALM," Deleted"
	Q

IBDFPRG
IBDFPRG	;ALB/AAS - AICS PURGE UTILITY ; 4-OCT-95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
%	; -- purge utility for purging entries from the
	;    Form Definition file (357.95)
	;    Form Tracking file (357.96)
	;    Form Specification file (359.2)
	;
MANUAL	; -- Option to purge records, ask input
	N IBCNT2,IBCNT5,IBCNT6,IBD,IBHOW,IBLDT,IBDAYS,IBPURGE,IBQUIT,DIR,DIRUT,DUOUT,X,Y,IBLOG,D0,DA,D,ZTSK
	I '$D(DT) D DT^DICRW
	;
	S IBQUIT=0
	D ASK
	Q:IBQUIT
	S IBLDT=$$FMADD^XLFDT(DT,-IBDAYS)
	S ZTSAVE("IB*")="",ZTRTN="DQ^IBDFPRG",ZTDESC="IBD - Manual Purge of form tracking",ZTIO="" D ^%ZTLOAD
	W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS S IBQUIT=1 Q
	Q
	;
DQ	; -- entry point from manual task
	S IBLOG=$$ADD
	I IBPURGE("FT") D PURGFT^IBDFPRG1(IBLDT,IBHOW)
	I IBPURGE("FD") D PURGFD^IBDFPRG1(IBLDT)
	D OUTPUT
	G EXIT
	Q
	;
EXIT	; -- exit for all modes
	I $D(ZTQUEUED) S ZTREQ="@"
	Q
	;
AUTO	; -- Background option to automatically purge records
	N X,Y,IBCNT2,IBCNT5,IBCNT6,IBLDT,IBHOW,IBD,IBLOG,D0,DA,D
	I '$D(DT) D DT^DICRW
	;
	; -- if parameters not defined don't run
	I $P($G(^IBD(357.09,1,0)),"^",3)=""!($P($G(^IBD(357.09,1,0)),"^",2)="")  G AUTOQ
	S IBHOW=$P($G(^IBD(357.09,1,0)),"^",2)
	;
	; -- Compute last date to purge records
	S IBLDT=$$FMADD^XLFDT(DT,-$P($G(^IBD(357.09,1,0)),"^",3))
	S IBLOG=$$ADD
	;
	; -- purge all entries in form tracking according to parameters
	D PURGFT^IBDFPRG1(IBLDT,+$P($G(^IBD(357.09,1,0)),"^",2))
	;
	; -- purge form definition entries only if marked for deletion 
	;    and all entries are complete
	D PURGFD^IBDFPRG1(IBLDT)
	;
	D OUTPUT
	G EXIT
	;
AUTOQ	Q
	;
ADD()	; -- add new entry to purge log
	N DIC,DLAYGO
	S Y=-1
	I $G(^IBD(357.08,0))'="" S X=$$NOW^XLFDT,DIC="^IBD(357.08,",DIC(0)="L",DLAYGO=357.08 D FILE^DICN
ADDQ	Q +Y
	;
EDIT	; -- update entry after running
	N DIC,DIE,DA,DR,X,Y
	I IBLOG<1!($G(^IBD(357.08,+IBLOG,0))="") Q
	S DIE="^IBD(357.08,",DA=IBLOG
	S DR=".02////"_$G(IBHOW)_";.03////"_$G(IBLDT)_";.04////"_$G(IBCNT6)_";.05////"_$G(IBCNT5)_";.06////"_$G(IBCNT2)
	D ^DIE
	Q
	;
OUTPUT	; -- output results of purge
	;
	S IBD(1)="Purge of Form Tracking Statistics"
	S IBD(2)="Status of Form Tracking Entries Purged .......... "_$S(+$G(IBHOW)=0:"None",$G(IBHOW)=1:"Completed",$G(IBHOW)=2:"All",1:"None")
	S IBD(3)="Form Tracking entries purged upto ............... "_$$FMTE^XLFDT($G(IBLDT))
	S IBD(4)="Number of Form tracking Entries Deleted ......... "_$G(IBCNT6)
	S IBD(5)="Number of Form Definition Entries Deleted ....... "_$G(IBCNT5)
	S IBD(6)="Number of Form Specification Entries Deleted .... "_$G(IBCNT2)
	D EDIT,SEND
	;
	I '$D(ZTQUEUED) S X="" F  S X=$O(IBD(X)) Q:'X  W !,IBD(X)
	Q
	;
ASK	; -- ask what to purge
	;    Output : ibpurge("ft") := 1=yes purge form tracking, 0=no
	;             ibpurge("fd") := 1=yes purge form definition, 0=no
	;
	N DIR
	S IBPURGE("FD")=0,IBPURGE("FT")=0
	;
	S DIR(0)="Y"
	S DIR("?")="Answer YES if you want to purge Form Tracking of unneeded records"
	W !!!,"Do you want to purge Form Tracking?"
	D ^DIR
	I $D(DIRUT) S IBQUIT=1 Q
	S IBPURGE("FT")=+Y
	;
	K DIR
	S DIR(0)="Y"
	S DIR("?")="Answer YES if you want to purge Form Defintions of unneeded records"
	W !!,"Do you want to purge Form Definitions and Form Specifications?"
	D ^DIR
	I $D(DIRUT) S IBQUIT=1 Q
	S IBPURGE("FD")=+Y
	;
	; -- if the user wants to purge form tracking get needed parms
	I IBPURGE("FT")!(IBPURGE("FD")) D ASKN,ASKH
	I 'IBPURGE("FT"),'IBPURGE("FD") S IBQUIT=1
	Q
	;
ASKN	; -- ask number of days to retain
	;    Output : IBDAYS := number of days to retain
	;
	N DIR
	S IBDAYS=-1
	S DIR(0)="N^60:999:0"
	S DIR("A")="Number of Days to Retain"
	S DIR("B")=+$P($G(^IBD(357.09,1,0)),"^",3)
	S DIR("?")="Enter the number of days of form tracking data to retain"
	D ^DIR
	I $D(DIRUT) S IBQUIT=1 Q
	S IBDAYS=+Y
	Q
	;
ASKH	; -- ask how to purge
	;    Output : IBHOW  := 0=none, 1=complete, 2=all
	;
	N DIR
	S IBHOW=-1
	S DIR(0)="S^0:None;1:Purge Completed Entries;2:Purge All Entries"
	S DIR("A")="Purge what Entries"
	S DIR("B")=+$P($G(^IBD(357.09,1,0)),"^",2)
	S DIR("?")="Choose whether you want to purge only completed entries or whether to purge all entries"
	D ^DIR
	I $D(DIRUT) S IBQUIT=1 Q
	S IBHOW=+Y
	Q
	;
SEND	; -- send mail message to group if defined
	N IBDGRP,XMDUZ,XMTEXT,XMY,XMSUB,XMZ
	S XMDUZ="AICS PACKAGE",XMTEXT="IBD(",XMSUB="AICS PURGE RESULTS"
	K XMY S XMN=0
	S IBDGRP=$P($G(^XMB(3.8,+$P($G(^IBD(357.09,1,1)),"^"),0)),"^")
	Q:IBDGRP=""
	S XMY("G."_IBDGRP_"@"_^XMB("NETNAME"))=""
	D ^XMD
	Q

IBDFPRG1
IBDFPRG1	;ALB/AAS - AICS PURGE UTILITY ; 4-OCT-95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
%	; -- purge utility for purging entries from the
	;    Form Definition file (357.95)
	;    Form Tracking file (357.96)
	;    Form Specification file (359.2)
	G MANUAL^IBDFPRG
	;
	;
PURGFD(IBLDT)	; -- Procedure
	; -- purge entires in Form Definition file marked for deletion
	;    that were marked before ibldt and no incomplete entries in
	;    form tracking exist
	;
	;    Input :  ibldt  := only purge records with a date marked for
	;                       deletion older than this date
	;    Output:  ibcnt5 := number of entries in 357.95 deleted
	;             ibcnt2 := number of entries in 359.2 deleted
	;
	N IBI,IBJ,IBSTAT,X,Y
	S (IBCNT5,IBCNT2)=0
	I IBLDT=""!(IBLDT'?7N) G PURGFDQ
	S IBI=0
	F  S IBI=$O(^IBD(357.95,"ADEL",IBI)) Q:'IBI!(IBI'<IBLDT)  D
	.S IBJ=0
	.F  S IBJ=$O(^IBD(357.95,"ADEL",IBI,IBJ)) Q:'IBJ  D
	..
	..; -- "a" x-ref is special x-ref of all forms not received
	..;  for 357.95 check KILLTYPE^IBDF19
	..;
	..I $D(^IBD(357.96,"A",IBJ)) Q
	..I $D(^IBD(357.95,IBJ,0)) S X=$$DEL("^IBD(357.95,",IBJ),IBCNT5=IBCNT5+1
	..I $D(^IBD(359.2,IBJ,0)) S X=$$DEL("^IBD(359.2,",IBJ),IBCNT2=IBCNT2+1
	..Q
	.Q
	;
PURGFDQ	Q
	;
PURGFT(IBLDT,IBHOW)	; -- Procedure
	; -- purge entries from form tracking file (357.96)
	;    Input :  ibldt  := only purge records with an appointment
	;                       date older than this date
	;             ibhow  := 0=no records, 1=complete, 2=all
	;    Output:  ibcnt6 := number of entries in 357.96 deleted
	;
	N X,Y,IBI,IBJ,IBSTAT
	S IBCNT6=0
	I IBLDT=""!(IBLDT'?7N) G PURGFTQ
	S IBHOW=+$G(IBHOW)
	I IBHOW<0!(IBHOW>2) G PURGFTQ
	;
	S IBI=0
	F  S IBI=$O(^IBD(357.96,"D",IBI)) Q:'IBI!(IBI'<IBLDT)  D
	.S IBJ=0
	.F  S IBJ=$O(^IBD(357.96,"D",IBI,IBJ)) Q:'IBJ  D
	..I $$STATCHK(IBJ,IBHOW) S X=$$DEL("^IBD(357.96,",IBJ),IBCNT6=IBCNT6+1
	..Q
	.Q
PURGFTQ	Q
	;
STATCHK(ENTRY,IBHOW)	; -- Function
	; -- determine if entry in 357.96 can be deleted
	;    Input :  Entry := internal number of entry in 357.96
	;             ibhow := 0,1,2, to delete none, complete, or all
	;    Output:  Okay  := 1=okay to delete, 0=not okay
	;
	N OKAY,STATUS
	S OKAY=0
	S IBHOW=+$G(IBHOW)
	I IBHOW<1!(IBHOW>2) G STATQ ;How is none or not valid, don't delete
	I '$D(^IBD(357.96,ENTRY,0)) G STATQ ;Entry doesn't exist
	;
	; -- if delete all, okay=1
	I IBHOW=2,$P($G(^IBD(357.96,ENTRY,0)),"^",3) S OKAY=1 G STATQ
	;
	; -- if status = complete, piece 11 must equal 3, 4, or 12 to delete
	S STATUS=$P($G(^IBD(357.96,ENTRY,0)),"^",11)
	S OKAY=$S(STATUS=3:1,STATUS=4:1,STATUS=12:1,1:0)
	;
STATQ	Q OKAY
	;
DEL(FILE,DA)	; -- Function
	; -- delete one entry
	;    Input :  File  := internal file number of file or global root
	;             da    := internal number of entry, If more than DA
	;                      needs to be defined then pass da array by
	;                      reference
	;    Output:  1 := succeded, 0 := failed
	;
	N SUCCESS
	S SUCCESS=0
	I $G(FILE)=""!(+$G(DA)<1) G DELQ
	S DIK=FILE D ^DIK
	S SUCCESS=1
	W:'$D(ZTQUEUED) !,"Entry number "_DA_" in file "_DIK_" Deleted!"
DELQ	Q SUCCESS

IBDFQB
IBDFQB	;ALB/MAF - MAIN QUEUE JOB FOR ENCOUNTER FORM PRINTING - FEB 2 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
EN	;
	; -- Goes through the "SEQ" cross reference to print the 
	;    highest priority jobs first (lowest sequence number).
	N IBDFQUE
	S IBDFQUE=1
	S (IBDFNUM,IBDFNAME,IBDFIFN,IBDFSEQ,QUIT)=0
	;
	F  S IBDFSEQ=$O(^IBD(357.09,"SEQ",IBDFSEQ)) Q:IBDFSEQ']""  F  S IBDFNUM=$O(^IBD(357.09,"SEQ",IBDFSEQ,IBDFNUM)) Q:IBDFNUM']""  F  S IBDFIFN=$O(^IBD(357.09,"SEQ",IBDFSEQ,IBDFNUM,IBDFIFN)) Q:IBDFIFN']""  N IBDFARY D UP($$QUEUE(IBDFIFN))
	G EXIT
	;
	;
UP(IBTASK)	; -- store results of tasking
	Q:'$G(IBTASK)
	D TASK
	Q
	;
	;
QUEUE(IBDFIFN)	; -- Set up Queue variables
	N ZTSK,ZTDTH,ZTRTN,ZTDESC,ZTSAVE,ZTION,X,Y
	K ^TMP("IBDF",$J,"C"),^TMP("IBDF",$J,"D")
	D SET
	G:('$D(^TMP("IBDF",$J)))!QUIT CLEAR
	;
	; -- check if already tasked and running?
	I $P(IBDFNODE,"^",11)]"" S ZTSK=$P(IBDFNODE,"^",11) D STAT^%ZTLOAD I "^1^2^"[ZTSK(1) G CLEAR
	;
	F IBDT=0:0 S IBDT=$O(IBDFARY(IBDT)) Q:'IBDT  D
	.S ZTDTH=$H,ZTRTN="DQ^IBDFQB",ZTDESC="IBD - Encounter Forms for"_IBDFNAME,ZTSAVE("^TMP(""IBDF"",$J,")="",ZTSAVE("IB*")="",ZTIO=$S($P(IBDFNODE,"^",9)]"":$P(IBDFNODE,"^",9),1:"") D ^%ZTLOAD D HOME^%ZIS
	;
	; -- after queing, delete start and stop times and add task
	; -- once started add start time
	; -- once finished add stop time, delete task no.
	;
	S IBZTSK=ZTSK
	I '$D(ZTQUEUED) D ^%ZISC
	;
	;
CLEAR	; -- Clean up variables if task is not queued
	K ^TMP("IBDF",$J),^TMP("IB",$J)
	;
	I QUIT D
	.I $D(ZTSK),$D(ZTSK(1)) I "^1^2^"[ZTSK(1) K ZTSK
	.S IBZTSK=$S($D(ZTSK):ZTSK,1:"")
	;
	S QUIT=0
	Q IBZTSK
	;
DQ	; -- Generic entry points to edit
	; -- only called by jobs tasked by this routine
	S IBDFFLD=".02" D UPDT
	D ^IBDF1B1
	S IBDFFLD=".03" D UPDT
	S IBTASK="@" D TASK
	Q
	;
UPDT	; -- Update start and finish times
	D NOW^%DTC S IBDFX=$E(%,1,12),DA=IBDFIFN,DA(1)=IBDFNUM,DIE="^IBD(357.09,"_DA(1)_","_"""Q"""_",",DR=IBDFFLD_"///"_"^S X=IBDFX" D ^DIE Q
	;
	;
TASK	; -- Update Task number and last date printed
	N DA,DR,DIE
	S DA=IBDFIFN,DA(1)=IBDFNUM,DIE="^IBD(357.09,"_DA(1)_","_"""Q"""_",",DR=".11///"_IBTASK_";.12///"_IBDT D ^DIE
	Q
	;
	;
EXIT	K IBADDONS,IBCLN,IBDFDAY,IBDFIFN,IBDFINST,IBDFNAME,IBDFNODE,IBDFNOW,IBDFNUM,IBDFSEQ,IBDIV,IBDT,IBREPRNT,IBSRT,IBSTRTDV,IBDFDAY1,IBDFLAST,IBDFONE,IBDFQ,IBDFXX,IBZTSK,QUIT
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	Q
	;
	;
SET	; -- Set up variables needed for priniting of forms
	S IBDFNODE=$G(^IBD(357.09,IBDFNUM,"Q",IBDFIFN,0))
	I $P(IBDFNODE,"^",4)=""!($P(IBDFNODE,"^",5)="")!($P(IBDFNODE,"^",6)="")!($P(IBDFNODE,"^",7)="")!($P(IBDFNODE,"^",8)="")!($P(IBDFNODE,"^",9)="")!($P(IBDFNODE,"^",10)="") D  I QUIT Q
	.I '$D(IBDFQUE) W !!,"PRINT QUEUE ABORTED.... missing required parameters!!!!" D PAUSE^VALM1
	.S QUIT=1
	.Q
	I $P(IBDFNODE,"^",8)="N" D  I QUIT Q
	.I '$D(IBDFQUE)  W !!,"PRINT QUEUE ABORTED.....not an active print job... check Special Instructions" D PAUSE^VALM1
	.S QUIT=1
	.Q
	S IBSRT=$P(IBDFNODE,"^",4),SELECTBY="C",IBADDONS=$P(IBDFNODE,"^",5),IBREPRNT="",IBSTRTDV=""
	D ENTRY Q:QUIT  D
	.N GROUPS,IEN
	.; -- GET PRINT MANAGER GROUPS
	.S GROUPS=""
	.S GROUPS($P(IBDFNODE,"^",6))="" D
	..S GROUPS=0 F  S GROUPS=$O(GROUPS(GROUPS)) Q:'GROUPS  D
	...S IEN=0 F  S IEN=$O(^IBD(357.99,GROUPS,10,IEN)) Q:'IEN  S IBCLN=+$G(^IBD(357.99,GROUPS,10,IEN,0)) S:IBCLN ^TMP("IBDF",$J,"C",IBCLN)=""
	...S IEN=0 F  S IEN=$O(^IBD(357.99,GROUPS,11,IEN)) Q:'IEN  S IBDIV=+$G(^IBD(357.99,GROUPS,11,IEN,0)) S:IBDIV ^TMP("IBDF",$J,"D",IBDIV)=""
	Q
	;
	;
ENTRY	; -- Calc date and do checks on special instructions
	K IBDFARY
	N IBDFNOW,IBDFINST,IBDFDATE,IBDFDAYS,IBDFCTR
	S IBDFNOW=$P($$NOW^XLFDT(),"."),IBDFINST=$P(IBDFNODE,"^",8)
	;
	; -- if ignoring weekends and/or holidays, check current date
	I IBDFINST["W" I $$WEEKEND(IBDFNOW) S QUIT=1 Q
	I IBDFINST["H" I $$HOLIDAY(IBDFNOW) S QUIT=1 Q
	I IBDFINST["I" I $$WEEKEND(IBDFNOW)!($$HOLIDAY(IBDFNOW)) S QUIT=1 Q
	;
	; -- find date to return - returned in IBDFARY(date) array
	; -- loop adds 1 day and checks if day is restricted
	; --     if not, it adds it as a printable day and compares it
	; --     with the number of printable days ahead the user wants to prn
	S IBDFDATE=IBDFNOW,IBDFCTR=0,IBDFDAYS=+$P(IBDFNODE,"^",7)
	F  Q:IBDFCTR=IBDFDAYS  D
	.S IBDFDATE=$$FMADD^XLFDT(IBDFDATE,1)
	.I IBDFINST["W" Q:$$WEEKEND(IBDFDATE) 
	.I IBDFINST["H" Q:$$HOLIDAY(IBDFDATE)
	.I IBDFINST["I" Q:$$WEEKEND(IBDFDATE)!($$HOLIDAY(IBDFDATE))
	.S IBDFCTR=IBDFCTR+1
	S IBDFARY(IBDFDATE)=""
	Q
	;
WEEKEND(DATE)	;
	; -- DATE (defaulted to current date if not passed)
	; -- output = 1 if date is a weekend
	I '$G(DATE) S DATE=$P($$NOW^XLFDT(),".")
	I 60[$$DOW^XLFDT(DATE,1) Q 1
	Q 0
	;
HOLIDAY(DATE)	;
	; -- DATE (defaulted to current date if not passed)
	; -- output = 1 if date is a holiday
	I '$G(DATE) S DATE=$P($$NOW^XLFDT(),".")
	N X,Y,DIC
	S DIC="^HOLIDAY(",DIC(0)="",X=+$P(DATE,".")
	D ^DIC I +Y>0 Q 1
	Q 0

IBDFQEA
IBDFQEA	;ALB/CJM/MAF - ENCOUNTER FORM - BUILD FORM(editing action for group's selections list) ;JUN 16,1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
EDIT	;allows editing of an existing selection
	D FULL^VALM1
	N SEL,SUB,SLCTN,SC,NODE
	D EN^VALM2($G(XQORNOD(0)),"S")
	S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
	.W !,"Editing Entry #",SEL
	.S SLCTN=$P($G(^TMP("SELIDX",$J,SEL)),"^",3) Q:'SLCTN
	.S NODE=$G(^IBE(357.3,SLCTN,0))
	.S IBGRP=$P(NODE,"^",4),ORD=$P(NODE,"^",5)
	.;re-index the record, to insure it is good                             
	.K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D IX^DIK K DIK
	.;edit the order of the selection - also, for placeholders, the text, then quit
	.I $P(NODE,"^",2) K DA,DIE S DA=SLCTN,DIE=357.3,DR="[IBDF EDIT PLACE HOLDER]" D ^DIE Q
	.K DIE,DA S DA=SLCTN,DIE=357.3,DR=".05;S CONT=1" S CONT=0 D ^DIE
	.;add any missing subcolumns
	.S SC=0 F SC=1:1:8 I $G(IBLIST("SCTYPE",SC))=1 I '$D(^IBE(357.3,SLCTN,1,"B",SC)) D
	..K DA,DO,DINUM,DIC
	..N DLAYGO
	..S DIC="^IBE(357.3,"_SLCTN_",1,",DA(1)=SLCTN,X=SC,DIC(0)="L",DLAYGO=357.3 D FILE^DICN
	.;now allow the user to edit editable subcolumns - CONT=0 means the user up-arrowed out, so stop
	.I CONT S SUB=0 F  S SUB=$O(^IBE(357.3,SLCTN,1,SUB)) Q:'SUB  D
	..S SC=+$G(^IBE(357.3,SLCTN,1,SUB,0)) I $G(IBLIST("SCTYPE",SC))=1,$G(IBLIST("SCPIECE",SC)),$G(IBLIST("SCEDITABLE",SC)) D
	...I $G(^IBE(357.3,SLCTN,1,0))="" S ^IBE(357.3,SLCTN,1,0)="^357.31IA^"
	...S DIE="^IBE(357.3,"_SLCTN_",1,",DA(1)=SLCTN,DA=SUB,DR=".02;S CONT=1",CONT=0 W !!,"Editing Subcolumn "_SC_": Header="_IBLIST("SCHDR",SC) D ^DIE I 'CONT Q
	.D NARR^IBDF4 W !
	.D TERM^IBDF4 W !
	;
	K DIE,DA,DR
EDITEXIT	;
	G EXIT
DELETE	;allows the user to select selections to delete
	D FULL^VALM1
	N SEL
	D EN^VALM2($G(XQORNOD(0)))
	K DA
	S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
	.S DIK="^IBE(357.3,",DA=$P($G(^TMP("SELIDX",$J,SEL)),"^",3) Q:'DA
	.S NODE=$G(^IBE(357.3,DA,0))
	.S IBGRP=$P(NODE,"^",4),ORD=$P(NODE,"^",5)
	.Q:'$$RUSURE^IBDFU5("Selection #"_SEL)
	.D ^DIK
	.D KILL^VALM10(SEL)
	K DIK,DA
	G EXIT
ADDSLCTN	;allows the user to add a selection to the selection group
	N QUIT,SUB
	;
	D FULL^VALM1
	S IBRTN=IBLIST("RTN")
	D RTNDSCR^IBDFU1B(.IBRTN)
	I IBRTN("ACTION")'=3 D NOGOOD^IBDF4 G ADDEXIT
	K @IBRTN("DATA_LOCATION")
	S QUIT=0 F  D  G:QUIT EXIT  W !,"Now for another!",!
	.I '$$DORTN^IBDFU1B(.IBRTN) S QUIT=1 D NOGOOD^IBDF4 Q
	.I '$D(@IBRTN("DATA_LOCATION")) S QUIT=1 Q
	.S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $P(^IBE(357.4,+Y,0),""^"",3)=IBLIST" D ^DIC K DIC S:X="^" QUIT=1 Q:QUIT  S IBGRP=+Y I Y<0 D  Q:QUIT=1
	..W !!,"A SELECTION GROUP HEADER IS REQUIRED.... The selection will not be added if none is provided....Enter '??' for a list of choices.",!!
	..S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $P(^IBE(357.4,+Y,0),""^"",3)=IBLIST" D ^DIC K DIC S IBGRP=+Y I Y<0 S QUIT=1 Q
	.D ADDREC^IBDF4(.QUIT) ;edits and adds the selection
	.K @IBRTN("DATA_LOCATION")
ADDEXIT	;
	G EXIT
ADDBLANK	;allows the user to add a dummy selection to the selection group
	;i.e., a place holder that will not actually print a selection
	;
	;
	N IBGRP
	D FULL^VALM1
	K DIC S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $D(^IBE(357.3,""APO"",IBLIST,+Y))" D ^DIC S IBGRP=+Y K DIC
	I ('$D(DIRUT))&(Y>0) D ADD^IBDF4A
	D INIT^IBDFQSL1
	S VALMBCK="R"
	Q
FORMAT	;allows the user to format all of the selections in the group in mass
	;
	D FORMAT^IBDF9A1
	G EXIT
	;
GRPDEL	;  -- Group Delete
	D FULL^VALM1
	N GRP
	S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $P(^IBE(357.4,+Y,0),""^"",3)=IBLIST" D ^DIC K DIC S IBGRP=+Y I Y<0 G EXIT
	S GRP=+Y
	Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.4,GRP,0)),"^"))
	I GRP D DELSLCTN^IBDF3 K DA S DIK="^IBE(357.4,",DA=GRP D ^DIK K DIK
	D IDXGRP^IBDF3
	S VALMBCK="R"
	D EXIT Q
	;
GROUPADD	;  -- Add a new group to the selection list and to file 357.4.
	D FULL^VALM1
	N NAME,QUIT,GRP
	S QUIT=0
	F  D  D IDXGRP^IBDF3 G:QUIT EXIT
	.K DIR S DIR(0)="357.4,.01O",DIR("B")="" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
	.S NAME=Y
	.K DIC,DD,DO,DINUM S DIC="^IBE(357.4,",X=NAME,DIC(0)=""
	.D FILE^DICN K DIC,DIE,DA
	.I +Y<0 W !,"Unable to create a new record!" D PAUSE^VALM1 S QUIT=1 Q
	.I +Y>0 K DA S DA=+Y,DIE="^IBE(357.4,",DIE("NO^")="Any value",DR=".02;.04;.03////"_IBLIST D ^DIE K DIC,DIE,DR,DA
	.W !,"Now Another!",!
	G EXIT
	;
GRPEDIT	;
	D FULL^VALM1
	N DIC,DIE,DA,DR,GRP
	S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $P(^IBE(357.4,+Y,0),""^"",3)=IBLIST" D ^DIC K DIC S IBGRP=+Y I Y<0 G EXIT
	S GRP=+Y
	S (DIC,DIE)="^IBE(357.4,",DA=GRP,DR=".01;.02;.04" D ^DIE
	I '$D(DA) D DELSLCTN^IBDF3
	D IDXGRP^IBDF3
	S VALMBCK="R"
	D EXIT Q
	Q
	;
EXIT	D INIT^IBDFQSL1 S VALMBCK="R"
	Q

IBDFQEA1
IBDFQEA1	;ALB/MAF - ENCOUNTER FORM - BUILD FORM(editing action for group's selections list) cont. ;JUN 16,1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
FORMAT	;allows the user to format all of the selections in the group in mass
	;
	D FORMAT^IBDF9A1
	D INIT^IBDFQSL1 S VALMBCK="R"
	Q

IBDFQS
IBDFQS	;ALB/MAF -REQUEUE OF PRINT JOB FOR A SINGLE PARAMETER GROUP - FEB 9 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	; -- Queue of a single print job (parameter group)
	; -- Selection of what print group/s to be prited
	N IBDVALM,IBDAT,VALMY
	S VALMBCK=""
	D SEL^VALM2 G REP:'$O(VALMY(0)) S IBDVALM=0
	D FULL^VALM1 S VALMBCK="R"
	F IBDVALM=0:0 S IBDVALM=$O(VALMY(IBDVALM)) Q:'IBDVALM  S IBDFDA=$S($D(IBDTYPE(IBDVALM)):IBDTYPE(IBDVALM),1:"") I IBDFDA]"" D
	.N IBDFNUM,IBDFNAME,IBDFIFN,IBDFSEQ
	.S QUIT=0
	.S (DA,IBDFIFN)=$P(IBDFDA,"^",1),IBDFNUM=$P(IBDFDA,"^",2)
	.S IBDFNODE=$G(^IBD(357.09,IBDFNUM,"Q",DA,0)),IBDFNAME=$P(IBDFNODE,"^",1)
	.S IBDFSEQ=$P(IBDFNODE,"^",10)
	.D UP^IBDFQB($$QUEUE^IBDFQB(IBDFIFN))
	.Q
REP	 S VALMBCK="R" Q

IBDFQSL
IBDFQSL	;ALB/CJM/AAS/MAF - ENCOUNTER FORM - Quick selection edit ;12-Jun-95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;allows user to select a form, then displays it for edit
	N IBFORM,ARY,DFN,IBAPPT,RTNLIST,IBPRINT
	S ARY="^TMP(""IBDF"",$J,""TEMPORARY CLINIC LIST"")"
	;
	K @ARY
	S VALMBCK=""
	X IBAPI("SELECT")
	K ARY
	I IBFORM D PRNTPRMS^IBDFU1C(.IBPRINT,0,1,0,1),UNCMPL^IBDF19(IBFORM,0)
	Q:'$$FORMDSCR^IBDFU1C(.IBFORM)
EDITBLK	;allows the user to edit everything about the block
	;allows user to discard or save changes to the block
	;
	;If IBBLK and IBBLK2 are used to point to two copies, one copy for editing and the other incase 'undo' is needed
	; 
	N IBBLK,IBVALMBG,TOP1,TOP2,BOT1,BOT2,IBBLK2,IBTKODR,IBJUNK,IFSAVE
	;
	S IBVALMBG=VALMBG
	D FULL^VALM1
	S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,IOSL,"HEADER") ;select the block
	I IBBLK S IBLIST=$O(^IBE(357.2,"C",IBBLK,0)) D
	.I 'IBLIST W !!,"Block does not contain a list!  Try Again.",! D PAUSE^IBDFU5 Q
	.D KILL^IBDFUA
	.Q:$$BLKDESCR^IBDFU1B(.IBBLK) 1
	.S (IBBLK2,IBTKODR,IBJUNK)=""
	.D COPYBLK^IBDF5B(IBBLK,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" Q  ;sets IBBLK to the work copy, IBBLK2 to the copy actually on the form
	.D TOPNBOT^IBDFU5(IBBLK,.TOP1,.BOT1)
	.D EN^IBDFQSL1
	.I IBBLK,IBBLK2 D
	..S IFSAVE=$$ASKSAVE^IBDF5B
	..I IFSAVE D SAVECOPY^IBDF5B(.IBBLK,.IBBLK2,IBTKODR) S IBBLK=IBBLK2,IBBLK2="" D BLKCHNG^IBDF19(IBFORM,IBBLK)
	..I 'IFSAVE D DLTCOPY^IBDF5B(IBBLK) S IBBLK=IBBLK2,IBBLK2=""
	..L -^IBE(357.1,IBBLK):1
	.I '$G(IBFASTXT) D
	..S VALMBG=IBVALMBG
	..D TOPNBOT^IBDFU5(IBBLK,.TOP2,.BOT2)
	..S TOP1=$S(TOP1<TOP2:TOP1,1:TOP2),BOT1=$S(BOT1>BOT2:BOT1,1:BOT2)
	S VALMBCK="R"
	Q
	;

IBDFQSL1
IBDFQSL1	;ALB/CJM/AAS/MAF - ENCOUNTER FORM - Quick selection edit (cont.);12-Jun-95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
EN	; -- main entry point for IBDF QUICK SELECTION EDIT
	D EN^VALM("IBDF QUICK SELECTION EDIT")
	Q
	;
HDR	; -- header code
	S VALMHDR(1)="This screen displays the selection list for ' "_$P(^IBE(357.1,IBBLK,0),"^",1)_" '"
	S VALMHDR(2)="on Encounter Form ' "_$P(^IBE(357,IBFORM,0),"^",1)_" '"
	Q
	;
INIT	; -- init variables and list array
	N IBDCNT,IBDCNT1
	W !,"Please wait while I build the list..."
	K ^TMP("SEL",$J),^TMP("SELIDX",$J),IBDFHDR D KILL^VALM10()
	S (IBDCNT,IBDCNT1,VALMCNT)=0
	S IBDLSTNM=$P(^IBE(357.2,IBLIST,0),"^",1) D INTER D
	.S IBLSNODE=$G(^IBE(357.2,IBLIST,0))
	.I $D(IBDFAR) F IBDFX=0:0 S IBDFX=$O(@(IBDFAR_"("_IBDFX_")")) Q:'IBDFX  S IBDFARR=$G(@(IBDFAR_"("_IBDFX_")")) D:$P(IBDFARR,"^",1)="" HEADER D:$P(IBDFARR,"^",1)]"" SETARR
	Q:$$LSTDESCR^IBDFU1(.IBLIST) 1
	S IBRTN=IBLIST("RTN")
	D RTNDSCR^IBDFU1B(.IBRTN)
	I '$D(^TMP("SEL",$J)) D NUL
	Q
	;
SETARR	;  -- Set up Listman array
	N IBDFNODE
	W "."
	S IBDFNODE=IBDFARR
	S IBDFSEL=$P(IBDFNODE,"^",4)
	S IBDCNT1=IBDCNT1+1
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBDFVAL=$J(IBDCNT1_")",5)
	S X=$$SETSTR^VALM1(IBDFVAL,X,1,5)
	S IBDFVAL=$P(IBDFNODE,"^",1)
	S X=$$SETSTR^VALM1(IBDFVAL,X,7,7)
	S IBDFVAL=$P(IBDFNODE,"^",6)
	S X=$$SETSTR^VALM1(IBDFVAL,X,16,5)
	S IBDFVAL=$P(IBDFNODE,"^",2)
	S X=$$SETSTR^VALM1(IBDFVAL,X,23,40)
	S IBDFVAL=$P(^IBE(357.4,$P(IBDFNODE,"^",5),0),"^",1)
	S X=$$SETSTR^VALM1(IBDFVAL,X,64,15)
TMP	; -- Set up TMP Array
	S ^TMP("SEL",$J,IBDCNT,0)=X,^TMP("SEL",$J,"IDX",VALMCNT,IBDCNT1)=IBDFSEL
	S ^TMP("SELIDX",$J,IBDCNT1)=VALMCNT_"^"_$P(IBDFARR,"^",3)_"^"_$P(IBDFARR,"^",4)_"^"_$P(IBDFARR,"^",5) ;_"^"_IBDFX_"^"_$P(IBDFTMP,"^",4)_"^"_$P(IBDFTMP,"^",5)_"^"_$P(IBDFTMP,"^",1)_"^"_$P(IBDFTMP,"^",2)
	Q
HEADER	;  -- Set up header line for the display
	S IBDCNT1=IBDCNT1+1
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBDVAL=$S($P(IBDFARR,"^",2)]"":$P(IBDFARR,"^",2),1:"BLANK")
	S IBDFHDR(IBDVAL)=IBDCNT_"^"_$P(IBDFARR,"^",5)
	S IBDFSEL=$P(IBDFARR,"^",5)
	S X=$$SETSTR^VALM1(" ",X,1,3) D TMP
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S IBDVAL=$P(IBDFARR,"^",6)
	S X=$$SETSTR^VALM1(IBDVAL,X,16,5)
	S IBDVAL=$P(IBDFARR,"^",2)
	S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR^VALM1(" ",X,22,IBDVAL1)
	S X=$$SETSTR^VALM1(IBDVAL,X,IBDVAL1,25) D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=$$SETSTR^VALM1(" ",X,1,3) D TMP
	S IBDCNT1=IBDCNT1-1
	Q
INTER	;  -- Find Package interface for selection list
	K IBARRY S IBDFAR="IBARRY",IBDFINT=$P($G(^IBE(357.2,IBLIST,0)),"^",11),IBDFINT(1)=$P(^IBE(357.6,IBDFINT,0),"^",1) D GETLST^IBDFQSL2(IBFORM,IBBLK,IBLIST,.IBDFINT,"IBARRY",1)
	Q
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
EXIT	; -- exit code
	K IBARRY,IBDFAR,IBDFARR,IBDFHDR,IBDFINT,IBDFSEL,IBDFVAL,IBDFX,IBDLSTNM,IBDVAL,IBDVAL1,IBLIST,IBRTN,IEN,IBLSNODE,DIC,IBGRP,NODE
	K ^TMP("SEL",$J),^TMP("SELIDX",$J)
	Q
	;
EXPND	; -- expand code
	Q
	;
NUL	;  -- Null message
	S ^TMP("SEL",$J,1,0)=" ",^TMP("SEL",$J,2,0)="There are no selection lists for this block.",^TMP("SELIDX",$J,1)=1,^TMP("SELIDX",$J,2)=2
	Q

IBDFQSL2
IBDFQSL2	;ALB/CJM/AAS/MAF - ENCOUNTER FORM - Quick selection edit (cont.);12-Jun-95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;; -- NEW Routine in support of DATA CAPTURE project
	;
GETLST(FORM,BLOCK,LIST,INTRFACE,ARY,FILTER,COUNT)	; -- returns any specified selection list for a clinic
	; -- input    FORM = ien of entry in 357
	;            BLOCK = ien of entry in 357.1
	;             LIST = ien of entry in 357.2
	;         INTRFACE = name of selection list in package interface file
	;              ARY = name of array to return list in
	;           FILTER = predefined filters (optional, default = 1)
	;                                       1 = must be selection list
	;                                       2 = only visit cpts on list
	;
	; -- output  The format of the returned array is as follows
	;         @ARY@(0) = count of array element (0 of nothing found)
	;         @ARY@(1) = ^group header
	;         @ARY@(2) = problem ien or cpt or icd code^user defined text
	;         @ARY@(3) = problem ien or cpt or icd code^used defined text
	;         @ARY@(k) = ^next group header
	;       @ARY@(k+1) = problem ien or cpt or icd code^user define text
	;
	Q:'FORM!('BLOCK)!('LIST)!('INTRFACE)
	N OLDARY,IBDTMP,IBDUP
	S COUNT=$G(COUNT,0)
	I $G(FILTER)<1 S FILTER=1 ;default value=1
	I FILTER>1 S OLDARY=ARY,ARY="IBDTMP"
	S @ARY@(0)=+$G(@ARY@(0))
	D COPYLIST(LIST,ARY,.COUNT)
	S @ARY@(0)=COUNT
	I FILTER=2 D F2^IBDF18A1(OLDARY)
	Q
	;
COPYLIST(LIST,ARY,COUNT)	;copies the entries from LIST to @ARY, starting subscript at COUNT+1
	;
	N SLCTN,SUBCOL,TEXT,IEN,NODE,TSUBCOL,NOTREAL,NODE,GROUP,ORDER,HDR,GRPORDR
	;
	D SUBCOL^IBDF18A1(LIST,.TSUBCOL) ;find the subcolumn containing the text
	;
	S GRPORDR="" F  S GRPORDR=$O(^IBE(357.4,"APO",LIST,GRPORDR)) Q:GRPORDR=""  S GROUP=0 F  S GROUP=$O(^IBE(357.4,"APO",LIST,GRPORDR,GROUP)) Q:'GROUP  D
	.S HDR=$P($G(^IBE(357.4,GROUP,0)),"^") ;I HDR="BLANK" S HDR=""  If don't want to print BLANK group
	.S COUNT=COUNT+1,@ARY@(COUNT)="^"_HDR_"^^^"_GROUP_"^"_GRPORDR
	.S ORDER="" F  S ORDER=$O(^IBE(357.3,"APO",LIST,GROUP,ORDER)) Q:ORDER=""  S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"APO",LIST,GROUP,ORDER,SLCTN)) Q:'SLCTN  D
	..S NODE=$G(^IBE(357.3,SLCTN,0)),IEN=$P(NODE,"^"),NOTREAL=$P(NODE,"^",2)
	..S SUBCOL=$O(^IBE(357.3,SLCTN,1,"B",+TSUBCOL,0)) I 'SUBCOL S TEXT=$S($P(NODE,"^",6)?1E.E:$P(NODE,"^",6),1:"BLANK") S COUNT=COUNT+1,IBDUP(IEN)="",@ARY@(COUNT)=" "_"^"_TEXT_"^"_LIST_"^"_SLCTN_"^"_GROUP_"^"_ORDER Q  ;Q:'SUBCOL
	..S NODE=$G(^IBE(357.3,SLCTN,1,SUBCOL,0)) S:$P(NODE,"^")=TSUBCOL TEXT=$P(NODE,"^",2)
	..;
	..I $L(TEXT) S COUNT=COUNT+1,IBDUP(IEN)="",@ARY@(COUNT)=IEN_"^"_TEXT_"^"_LIST_"^"_SLCTN_"^"_GROUP_"^"_ORDER Q  ;set up the array with data
	Q

IBDFREG
IBDFREG	;ALB/CJM - ENCOUNTER FORM (prints for a single patient);NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
MAIN(WITHDATA)	;
	; -- prints encounter forms, either with patient data for a patient 
	;    with no appointment (in which case it uses time of printing as
	;    the appointment time) or without patient data (only if a form
	;    is defined for the clinic for such use)
	;    $G(WITDATA) if the form should be printed with data
	;    0 if a blank form for use without patient data should be printed
	;
	N IBF,FORMS,NODE,IBPM
	;FORMS = list of forms in form^form^... format
	;IBI is a counter used to parse FORMS
	;IBPM=1 if forms defined in print manager should be printed
	S WITHDATA=+$G(WITHDATA)
	K ^TMP("IB",$J),^TMP("IBDF",$J)
	S (IBPM,IBQUIT)=0
	D CLINIC G:IBQUIT EXIT
	I WITHDATA D  G:IBQUIT EXIT
	.D NOW
	.D WHCHFORM
	D DEVICE G:IBQUIT EXIT
QUEUED	;
	;input - DFN,IBAPPT,IBCLINIC
	N IBDEVICE
	;
	D DEVICE^IBDFUA(0,.IBDEVICE)
	F IBF=1:1 S IBFORM=$P(FORMS,"^",IBF) Q:'IBFORM  D DRWFORM^IBDF2A(IBFORM,WITHDATA,.IBDEVICE)
	I WITHDATA,IBPM D PRNTOTHR^IBDF1B5(IBCLINIC,"FOR EVERY APPOINTMENT"),PRNTOTHR^IBDF1B5(IBCLINIC,"ONLY FOR EARLIEST APPOINTMENT")
EXIT	;
	I $D(ZTQUEUED) S ZTREQ="@"
	E  D ^%ZISC
	D KPRNTVAR^IBDFUA ;kills the screen and graphics parameters
	K IBQUIT,IBFORM,IBCLINIC,IBAPPT,X,Y,I,^TMP("IB",$J),^TMP("IBDF",$J)
	Q
FORM	;gets the type of form to print from the clinic setup - sets FORMS
	N SETUP
	S SETUP=$O(^SD(409.95,"B",IBCLINIC,"")) I 'SETUP D ERROR S IBQUIT=1 Q
	S SETUP=$G(^SD(409.95,SETUP,0)) I SETUP="" D ERROR S IBQUIT=1 Q
	S FORMS=$P(SETUP,"^",5) I 'FORMS D ERROR S IBQUIT=1 Q
	Q
ERROR	;prints a message
	W !!,"There is no encounter form defined for this clinic that should print",!,"without patient data!",!
	Q
ERROR2	;prints a message
	W !!,"There are no forms defined to print for this clinic!",!
	Q
DEVICE	;
	; -- always ask with param as default
	S %ZIS("A")="Select Encounter Form DEVICE: "
	S %ZIS("B")=$P($G(^DG(43,1,0)),"^",48) S %ZIS="MQN" D ^%ZIS
	I POP S IBQUIT=1 Q
	S IBDFRION=ION
	;
	; -- ask only if parameter not defined
	;I $P($G(^DG(43,1,0)),"^",48)="" S %ZIS="MQN" D ^%ZIS Q:POP S IBDFRION=ION
	;
	S ZTRTN="QUEUED^IBDF1A",(ZTSAVE("WITHDATA"),ZTSAVE("IB*"),ZTSAVE("DFN"),ZTSAVE("FORMS"))="",ZTDTH=$H
	S ZTDESC="IBD - PRINT ENCOUNTER FORM" D ^%ZTLOAD
	;W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
	D HOME^%ZIS S IBQUIT=1 Q
	Q
CLINIC	;asks the user for the clinic
	K DIR S DIR(0)="409.95,.01O",DIR("A")="PRINT AN ENCOUNTER FORM FOR WHICH CLINIC? " D ^DIR K DIR I $D(DTOUT)!$D(DUOUT)!(+Y<0)!('(+Y)) S IBQUIT=1 Q
	S IBCLINIC=+Y
	Q
NOW	;sets IBAPPT to NOW
	N %,%H,%I,X
	D NOW^%DTC
	S IBAPPT=%
	Q
WHCHFORM	;
	S IBPM=0,FORMS=""
	S Y=2 S FORMS=$$FORMS^IBDF1B2(IBCLINIC,DFN,IBAPPT),IBPM=1
	I '$P(FORMS,"^"),IBPM,'$$IFOTHR^IBDF1B5(IBCLINIC,"FOR EVERY APPOINTMENT"),'$$IFOTHR^IBDF1B5(IBCLINIC,"ONLY FOR EARLIEST APPOINTMENT") D ERROR2 S IBQUIT=1 Q
	Q

IBDFSS
IBDFSS	;ALB/MAF - STATUS SELECT ROUTINE (FORMS TRACKING) ; 11-JUL-1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
START	;  -- Ask status to be displayed
	D FULL^VALM1
	K IBSTAT
	S DIR("A")="Select ENCOUNTER FORM STATUS: ",DIR(0)="SA^A:ALL;1:PRINTED;2:SCANNED;3:SENT TO PCE OK;4:SENT TO PCE WITH ERRORS;5:PENDING MORE PAGES;6:SCANNED WITH ERRORS DETECTED, NOT TRANSMITTED;7:NOT PRINTED",DIR("B")="ALL"
	S DIR("?")="Enter desired status that you would like to have listed on the report"
	S DIR("?",1)="CHOOSE FROM: "
	S DIR("?",2)="   A FOR ALL",DIR("?",3)="   1 FOR PRINTED",DIR("?",4)="   2 FOR SCANNED",DIR("?",5)="   3 FOR SENT TO PCE OK",DIR("?",6)="   4 FOR PCE WITH ERRORS"
	S DIR("?",7)="   5 FOR PENDING MORE PAGES",DIR("?",8)="   6 FOR SCAN ERRORS DETECTED NOT TRANSMITTED",DIR("?",9)="   7 FOR NOT PRINTED" D ^DIR
	I $D(DTOUT)!$D(DUOUT) Q
	I Y="A" D  K DIR Q
	.F X=0,1,2,3,4,11,12 S IBSTAT(X)=""
	D SET
	S $P(DIR(0),"^",1)=$P(DIR(0),"^",1)_"O",$P(DIR(0),"^",2)=$E($P(DIR(0),"^",2),7,999) K DIR("B")
	F I=2:1:9 S DIR("?",I)=$S($D(DIR("?",I+1)):DIR("?",I+1),1:"")
	S DIR("A")="Select another STATUS: "
ASK	D ^DIR I $D(DUOUT)!$D(DTOUT) Q
	I X]"" D SET G ASK
	K DIR Q
	;
	;
SET	S X=$S(Y=1:1,Y=2:2,Y=3:3,Y=4:4,Y=5:11,Y=6:12,1:0)
	S IBSTAT(X)=""
	Q
	;
	;
EN	; -- main entry point for IBDF FT STATUS SELECT
	D EN^VALM("IBDF FT STATUS SELECT")
	Q
	;
	;
SETARR	;  -- Set up Listman array
	S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",1)=$P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",1)+1
	S IBDCNT1=IBDCNT1+1
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBDFVAL=$J(IBDCNT1_")",5)
	S X=$$SETSTR^VALM1(IBDFVAL,X,1,5)
	S IBDFVAL=$P($G(IBDFTMP),"^",2)
	S X=$$SETSTR^VALM1(IBDFVAL,X,7,8)
	I $D(VAUTC) S IBDFVAL=$P($G(IBDFTMP),"^",3) I IBDFVAL]"" S IBDFVAL=$P(^DPT(IBDFVAL,0),"^",1)
	I $D(VAUTN) S IBDFVAL=$P($G(IBDFTMP),"^",1) I IBDFVAL]"" S IBDFVAL=$P(^SC(IBDFVAL,0),"^",1)
	S X=$$SETSTR^VALM1(IBDFVAL,X,17,15)
	S IBDFVAL=$P($G(IBDFTMP),"^",4) I IBDFVAL S VADAT("W")=IBDFVAL D ^VADATE S IBDFVAL=$E(IBDFVAL,4,5)_"/"_$E(IBDFVAL,6,7)_"/"_$E(IBDFVAL,2,3) I $P(VADATE("E"),"@",2)]"" S IBDFVAL=IBDFVAL_"@"_$P(VADATE("E"),"@",2)
	S X=$$SETSTR^VALM1(IBDFVAL,X,34,14)
	S IBDFVAL=$P($G(IBDFTMP),"^",6) I IBDFVAL]"" S IBDFVAL=$E(IBDFVAL,4,5)_"/"_$E(IBDFVAL,6,7)_"/"_$E(IBDFVAL,2,3)  S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",2)=+($P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",2))+1
	S X=$$SETSTR^VALM1(IBDFVAL,X,50,10)
	S IBDFVAL=$P($G(IBDFTMP),"^",7) I IBDFVAL]"" S IBDFVAL=$E(IBDFVAL,4,5)_"/"_$E(IBDFVAL,6,7)_"/"_$E(IBDFVAL,2,3) S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",3)=+($P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",3))+1
	S X=$$SETSTR^VALM1(IBDFVAL,X,62,10)
	S IBDFVAL=$P($G(IBDFTMP),"^",12),IBDFVAL=$S(IBDFVAL=1:"PRINTD",IBDFVAL=2:"SCANND",IBDFVAL=3:"OK PCE",IBDFVAL=4:"ER PCE",IBDFVAL=11:"PENDNG",IBDFVAL=12:"NO TRN",1:"NO PRT")
	S X=$$SETSTR^VALM1(IBDFVAL,X,74,6)
	;
	;
TMP	; -- Set up TMP Array
	S ^TMP("SSEL",$J,IBDCNT,0)=$$LOWER^VALM1(X),^TMP("SSEL",$J,"IDX",VALMCNT,IBDCNT1)=""
	S ^TMP("SELIDX",$J,IBDCNT1)=VALMCNT_"^"_$P(IBDFTMP,"^",2)_"^"_$P(IBDFTMP,"^",3)_"^"_$P(IBDFTMP,"^",4)_"^"_$P(IBDFTMP,"^",6)_"^"_$P(IBDFTMP,"^",7)_"^"_$P(IBDFTMP,"^",12)
	Q
	;
	;
HDR	; -- header code
	S VADAT("W")=IBDFBG D ^VADATE S IBDFX=$P(VADATE("E"),"@",1)
	S VADAT("W")=$P(IBDFEND,".",1) D ^VADATE S IBDFY=$P(VADATE("E"),"@",1)
	S VALMHDR(1)="Encounter forms with selected status for the date range of "
	S VALMHDR(2)=IBDFX_" to "_IBDFY
	Q
	;
	;
INIT	; -- init variables and list array
	N IBDCNT,IBDCNT1,IBDFDV,IBDFCL,IBDFTMP,IBDFPT,IBDFPAT,IBDFT
	S (IBDFDV,IBDFCL,IBDCNT,IBDCNT1,IBDFPT,VALMCNT)=0
	K ^TMP("SSEL",$J),^TMP("SELIDX",$J)
	F IBDFDIV=0:0 S IBDFDV=$O(^TMP("FTRK",$J,IBDFDV)) Q:IBDFDV']""  F IBDFCLI=0:0 S IBDFCL=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL)) Q:IBDFCL']""  F IBDFPAT=0:0 S IBDFPT=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFPT)) Q:IBDFPT']""  D 
	.F IBDFIFN=0:0 S IBDFIFN=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFPT,IBDFIFN)) Q:'IBDFIFN  F IBDFT=0:0 S IBDFT=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFPT,IBDFIFN,IBDFT)) Q:'IBDFT  S IBDFTMP=^(IBDFT) D
	..S IBDFSTAT=$P(IBDFTMP,"^",12) I $D(IBSTAT(+IBDFSTAT)) D:'$D(IBDFDIV1(IBDFDV)) HEADER^IBDFSS1 D:'$D(IBCLIN(IBDFDV,IBDFCL)) HEADER1^IBDFSS1 D SETARR
	I '$D(^TMP("SSEL",$J)) D NUL
	Q
	;
	;
NUL	; -- NULL MESSAGE
	S ^TMP("SSEL",$J,1,0)=" ",^TMP("SSEL",$J,2,0)="There are no encounter forms that meet this criteria.",^TMP("SELIDX",$J,1)=1,^TMP("SELIDX",$J,2)=2
	Q
	;
	;
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
	;
EXIT	; -- exit code
	K ^TMP("SSEL",$J),^TMP("SELIDX",$J),IBSTAT,IBCLIN,IBDFDIV1,DIR,IBDFSTAT,IBDFX,IBDFY
	Q
	;
	;
EXPND	; -- expand code
	Q
	;

IBDFSS1
IBDFSS1	;ALB/MAF - FORMS TRACKING SELECTED STATUS - JUL 6 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
HEADER	;  -- Set up header line for the display
	S IBDCNT1=IBDCNT1+1
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBDFDIV1(IBDFDV)=IBDCNT
	S X=$$SETSTR^VALM1(" ",X,1,3) D TMP1
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S IBDVAL=IBDFDV
	S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR^VALM1(" ",X,1,IBDVAL1)
	S X=$$SETSTR^VALM1(IBDVAL,X,IBDVAL1,25) D TMP1,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=$$SETSTR^VALM1(" ",X,1,3) D TMP1
	S IBDCNT1=IBDCNT1-1
	Q
	;
	;
HEADER1	;  -- Set up header line for the display
	S IBDCNT1=IBDCNT1+1
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBCLIN(IBDFDV,IBDFCL)=IBDCNT
	S X=$$SETSTR^VALM1(" ",X,1,3) D TMP1
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S IBDVAL=IBDFCL
	S X=$$SETSTR^VALM1(IBDVAL,X,1,25) D TMP1,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
	S IBDCNT1=IBDCNT1-1
	Q
	;
	;
TMP1	; -- Set up TMP Array
	S ^TMP("SSEL",$J,IBDCNT,0)=X,^TMP("SSEL",$J,"IDX",VALMCNT,IBDCNT1)=""
	S ^TMP("SELIDX",$J,IBDCNT1)=VALMCNT
	Q

IBDFST
IBDFST	;ALB/MAF - FORMS TRACKING STATISTICS - JUL 6 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
EN	; -- main entry point for IBDF FT STATS
	D EN^VALM("IBDF FT STATS")
	Q
	;
HDR	; -- header code
	S VADAT("W")=IBDFBG D ^VADATE S IBDFX=$P(VADATE("E"),"@",1)
	S VADAT("W")=$P(IBDFEND,".",1) D ^VADATE S IBDFY=$P(VADATE("E"),"@",1)
	S VALMHDR(1)="Statistical data for the date range of "_IBDFX_" to "_IBDFY
	Q
	;
	;
INIT	; -- init variables and list array
	N IBDFDV,IBDFCL,IBDFNODE,IBDCNT,IBDCNT1
	S (IBDFDV,IBDFCL,IBDCNT,IBDCNT1,VALMCNT)=0
	K IBDF,^TMP("STATS",$J),^TMP("STAIDX",$J)
	F IBDFDIV=0:0 S IBDFDV=$O(^TMP("CNT",$J,IBDFDV)) Q:IBDFDV']""  F IBDFCLI=0:0 S IBDFCL=$O(^TMP("CNT",$J,IBDFDV,IBDFCL)) Q:IBDFCL']""  S IBDFNODE=^TMP("CNT",$J,IBDFDV,IBDFCL) D:'$D(IBDF(IBDFDV)) HEADER D SETARR
	Q
	;
	;
SETARR	;  -- Set up Listman array
	S IBDCNT1=IBDCNT1+1
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBDFVAL=$$LOWER^VALM1(IBDFCL)
	S X=$$SETSTR^VALM1(IBDFVAL,X,5,20)
	S IBDFVAL=$J($P(IBDFNODE,"^",1),5)
	S X=$$SETSTR^VALM1(IBDFVAL,X,27,5)
	S IBDFVAL=$J($P(IBDFNODE,"^",2),6)
	S X=$$SETSTR^VALM1(IBDFVAL,X,34,6)
	S IBDFVAL=$J($S($P(IBDFNODE,"^",1)>0:($P(IBDFNODE,"^",2)/$P(IBDFNODE,"^",1))*100,1:0),6) I IBDFVAL>0 S IBDFVAL=$J($P(IBDFVAL,".",1)_"."_$E($P(IBDFVAL,".",2),1,2),6)
	S X=$$SETSTR^VALM1(IBDFVAL,X,42,6)
	S IBDFVAL=$J($P(IBDFNODE,"^",3),7)
	S X=$$SETSTR^VALM1(IBDFVAL,X,50,7)
	S IBDFVAL=$J($S($P(IBDFNODE,"^",1)>0:($P(IBDFNODE,"^",3)/$P(IBDFNODE,"^",1))*100,1:0),6) I IBDFVAL>0 S IBDFVAL=$J($P(IBDFVAL,".",1)_"."_$E($P(IBDFVAL,".",2),1,2),6)
	S X=$$SETSTR^VALM1(IBDFVAL,X,59,6)
	S IBDFVAL=$J($S($P(IBDFNODE,"^",1)>0:($P(IBDFNODE,"^",4)/$P(IBDFNODE,"^",1)),1:0),13) I IBDFVAL>0 S IBDFVAL=$J($P(IBDFVAL,".",1)_"."_$E($P(IBDFVAL,".",2),1,2),13)
	S X=$$SETSTR^VALM1(IBDFVAL,X,67,13)
	;
	;
TMP	; -- Set up TMP Array
	S ^TMP("STATS",$J,IBDCNT,0)=X,^TMP("STATS",$J,"IDX",VALMCNT,IBDCNT1)=""
	S ^TMP("STAIDX",$J,IBDCNT1)=VALMCNT
	Q
	;
	;
HEADER	;  -- Set up header line for the display
	S IBDCNT1=IBDCNT1+1
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBDF(IBDFDV)=IBDCNT
	S X=$$SETSTR^VALM1(" ",X,1,3) D TMP
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S IBDVAL=IBDFDV
	S X=$$SETSTR^VALM1(IBDVAL,X,1,25) D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=$$SETSTR^VALM1(" ",X,1,3) D TMP
	S IBDCNT1=IBDCNT1-1
	Q
	;
	;
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
	;
EXIT	; -- exit code
	K IBDF,IBDFX,IBDFY,^TMP("STATS",$J),^TMP("STAIDX",$J)
	Q
	;
	;
EXPND	; -- expand code
	Q
	;

IBDFU
IBDFU	;ALB/CJM - ENCOUNTER FORM (utilities) ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
DRWBOX(IBY,IBX,W,H)	;draws a box
	I W=1,H N I D  Q
	.D DRWVLINE(IBY+1,IBX,H-2)
	I H=1,W D DRWSTR(IBY,IBX,$$HLINE(W),"") Q
	I W<2,H<2 Q
	I 'IBDEVICE("LISTMAN") S @IBARRAY("BOXES")@((IBY+IBBLK("Y")),(IBX+IBBLK("X")),IBBLK)=W_"^"_H
	;if IBDEVICE("PCL") means boxes will be drawn by PCL, via @IBARRAY("BOXES") array
	Q:IBDEVICE("PCL")
	D DRWSTR(IBY,IBX,"A"_$$HLINE(W-2,"B")_"C","G")
	D DRWSTR(IBY+H-1,IBX,"F"_$$HLINE(W-2,"B")_"E","G")
	D DRWVLINE(IBY+1,IBX,H-2,"|"),DRWVLINE(IBY+1,IBX+W-1,H-2,"|")
	Q
HLINE(L,CHAR)	;returns a horizontal line
	I $G(CHAR)="" S CHAR="_"
	N LINE S LINE=""
	S $P(LINE,CHAR,L)=CHAR
	Q LINE
DRWVLINE(IBY,IBX,IBH,CHAR)	;draw vertical line
	N SAVE
	S SAVE=IBPRINT("COMPILING_BLOCKS")
	I IBPRINT("COMPILING_BLOCKS") D CMPVLINE Q:'IBPRINT("WRITE_IF_COMPILING")  S IBPRINT("COMPILING_BLOCKS")=0
	N I
	I $D(CHAR) D
	.F I=0:1:IBH-1 D DRWSTR(IBY+I,IBX,CHAR)
	I '$D(CHAR) F I=0:1:IBH-1 D DRWSTR(IBY+I,IBX,"D","G")
	S IBPRINT("COMPILING_BLOCKS")=SAVE
	Q
	;
DRWSTR(IBY,IBX,STRING,OPTIONS,IBW)	;
	;IBW is the width over which to apply OPTIONS
	;OPTIONS - B=bold,G=graphics,U=underline,R=reverse print,r=expanded reverse print,s=shaded(expanded)
	;
	N UNDRLINE,END,ON,OFF,S,CURLINE
	S OPTIONS=$G(OPTIONS),STRING=$G(STRING)
	I '$D(IBW) S IBW=$L(STRING)
	I (IBW'>0)&(STRING="") Q
	I IBPRINT("COMPILING_BLOCKS") D CMPSTR Q:'IBPRINT("WRITE_IF_COMPILING")
	S IBY=IBY+IBBLK("Y"),IBX=IBX+IBBLK("X")
	I IBDEVICE("LISTMAN"),$G(IBTOPLN),$G(IBBOTLN),((IBY<IBTOPLN)!(IBY>IBBOTLN)) Q
	S (UNDRLINE,ON,OFF)=""
	;
	I OPTIONS'="" D
	.I OPTIONS["B" S ON=ON_"B1;",OFF=OFF_"B0;"
	.I IBDEVICE("LISTMAN"),OPTIONS["U",OPTIONS'["R",OPTIONS'["r",OPTIONS'["s" S ON=ON_"U1;",OFF=OFF_"U0;"
	.I OPTIONS["R" S ON=ON_"R1,"_IBW_";",OFF=OFF_"R0;"
	.I OPTIONS["s" S ON=ON_"s1,"_IBW_";",OFF=OFF_"S0"
	.I OPTIONS["r" S ON=ON_"r1,"_IBW_";",OFF=OFF_"R0;"
	.I OPTIONS["C",IBDEVICE("LISTMAN") S OFF=OFF_$S((OPTIONS["R")!(OPTIONS["r")!(OPTIONS["s"):"R1;",OPTIONS["U":U1,1:"")
	.I 'IBDEVICE("LISTMAN"),OPTIONS["U",'IBDEVICE("CRT") S UNDRLINE=1
	I IBX+$L(STRING)>251 S STRING=$E(STRING,1,251-IBX)
	I IBX+IBW>251 S IBW=251-IBX
	;
	;for laser printing - NOT used presently
	;I '$G(IBDEVICE("LISTMAN")),$G(IBDEVICE("RASTER")) D  Q
	;.I ON'="" W ON
	;.S DX=IBX,DY=IBY X IOXY
	;.W $J($G(STRING),+IBW) I OFF'="" W OFF
	;.I UNDRLINE N ARY S ARY="ARY",ARY(IBY,IBX)=$$HLINE(IBW) D RASPRINT^IBDF2F(.ARY)
	;
	I '$G(IBDEVICE("LISTMAN")) D  Q
	.I OPTIONS["G",IBDEVICE("GRAPHICS") S @IBARRAY("GRAPHICS")@(IBY,IBX)=STRING Q
	.I OPTIONS["G" S STRING=$$GRPHCS(STRING)
	.S END=IBX+IBW-1
	.I UNDRLINE D UNDRLINE(IBY,IBX,IBW)
	.I STRING'="" D
	..S CURLINE=$G(@IBARRAY("TEXT")@(IBY))
	..S:CURLINE="" CURLINE=$J("",IBFORM("WIDTH"))
	..S CURLINE=$$PADRIGHT($E(CURLINE,1,IBX),IBX)_STRING_$E(CURLINE,IBX+1+$L(STRING),IBFORM("WIDTH"))
	..S @IBARRAY("TEXT")@(IBY)=CURLINE
	.I ON'="" S @IBARRAY("CONTROLS")@(IBY,IBX)=$G(@IBARRAY("CONTROLS")@(IBY,IBX))_ON,@IBARRAY("CONTROLS")@(IBY,END+1)=$G(@IBARRAY("CONTROLS")@(IBY,END+1))_OFF
	;
	I $G(IBDEVICE("LISTMAN")) D
	.I OPTIONS["G" S STRING=$$GRPHCS(STRING)
	.S CURLINE=$G(@VALMAR@(IBY+1,0))
	.I CURLINE="" S CURLINE=$J((IBY#1000)+1,3,0)_$J("",IBFORM("WIDTH")) D CNTRL^VALM10(IBY+1,4,1,IORVON,IORVOFF) I (IBY+1)>VALMCNT S VALMCNT=(IBY+1)
	.S CURLINE=$$PADRIGHT($E(CURLINE,1,IBX+4),IBX+4)_STRING_$E(CURLINE,IBX+5+$L(STRING),IBFORM("WIDTH")+5)
	.S @VALMAR@(IBY+1,0)=CURLINE
	.I ON]"" D CNTRL^VALM10(IBY+1,IBX+5,IBW,$$CTRLS(ON),$$CTRLS(OFF))
	Q
UNDRLINE(IBY,IBX,W)	; underlining with when not using printers underlining ability
	N LINE
	S LINE=$G(@IBARRAY("UNDERLINES")@(IBY))
	S LINE=$$PADRIGHT($E(LINE,1,IBX),IBX)_$$HLINE(W,"_")_$E(LINE,IBX+W+1,IBFORM("WIDTH"))
	S @IBARRAY("UNDERLINES")@(IBY)=LINE
	Q
PADRIGHT(STR,LEN)	; pad right
	N B S STR=$E(STR,1,LEN)
	S:LEN>255 LEN=255
	S:LEN'=$L(STR) $P(B," ",LEN-$L(STR))=" "
	Q STR_$G(B)
	;
STRIP(STR)	;strips off leading and trailing spaces
	N I
	F I=1:1:$L(STR) I $A(STR,I)>32 Q
	S STR=$E(STR,I,$L(STR))
	F I=$L(STR):-1:1 I $A(STR,I)>32 Q
	S STR=$E(STR,1,I)
	Q STR
	;
CMPSTR	;saves compiled string write
	S IBWRTCNT("S")=IBWRTCNT("S")+1
	S ^IBE(357.1,IBBLK,"S",IBWRTCNT("S"),0)=IBY_"^"_IBX_"^"_OPTIONS_"^"_IBW_"^"_STRING
	Q
CMPVLINE	;save compiled vertical line write
	S IBWRTCNT("V")=IBWRTCNT("V")+1
	S ^IBE(357.1,IBBLK,"V",IBWRTCNT("V"),0)=IBY_"^"_IBX_"^"_IBH_"^"_$G(CHAR)
	Q
CTRLS(CTRLS,IBX,IBY)	;returns the needed escape sequences
	N I,X,RET,P1,P2 S RET=""
	F I=1:1 S X=$P(CTRLS,";",I) Q:X=""  D
	.S P1=$P(X,","),P2=$P(X,",",2)
	.;
	.I 'IBDEVICE("PCL"),'IBDEVICE("LISTMAN") S P1=$TR(P1,"RrSs","UUUU")
	.;
	.;reverse printing is tricky - must draw a rectangle with black fill
	.;
	.I IBDEVICE("PCL"),P1="R1",$D(IBX),$D(IBY) W $C(27)_"&f0S",!,$C(27)_"&a"_IBY_"r"_(IBX+.05)_"C",$C(27)_"&a-1R",$C(27)_"*p+10Y",$C(27)_"*c"_(IBDEVICE("COL_WIDTH")*(+P2)-3)_"h"_((IBDEVICE("ROW_HT")-10))_"v0P",$C(27)_"&f1S"
	.I IBDEVICE("PCL"),P1="r1",$D(IBX),$D(IBY) W $C(27)_"&f0S",!,$C(27)_"&a"_IBY_"r"_(IBX-.5)_"C",$C(27)_"&a-1.005R",$C(27)_"*p+10Y",$C(27)_"*c"_(IBDEVICE("COL_WIDTH")*(+P2+1))_"h"_((IBDEVICE("ROW_HT")-10))_"v0P",$C(27)_"&f1S"
	.;
	.;test of dark gray
	.;I IBDEVICE("PCL"),P1="r1",$D(IBX),$D(IBY) D
	.;.W $C(27)_"*c70G",$C(27)_"&f0S",!,$C(27)_"&a"_IBY_"r"_(IBX-.5)_"C",$C(27)_"&a-1.005R",$C(27)_"*p+10Y",$C(27)_"*c"_(IBDEVICE("COL_WIDTH")*(+P2+1))_"h"_((IBDEVICE("ROW_HT")-10))_"v2P",$C(27)_"&f1S",$C(27)_"*c35G"
	.;
	.I IBDEVICE("PCL"),P1="s1",$D(IBX),$D(IBY) D
	..W $C(27)_"*c11G",$C(27)_"&f0S",!,$C(27)_"&a"_IBY_"r"_(IBX-.5)_"C",$C(27)_"&a-1.005R",$C(27)_"*p+10Y",$C(27)_"*c"_(IBDEVICE("COL_WIDTH")*(+P2+1))_"h"_((IBDEVICE("ROW_HT")-10))_"v2P",$C(27)_"&f1S",$C(27)_"*c35G"
	.;
	.S RET=RET_$S(P1="B0":IOINORM,P1="B1":IOINHI,P1="U0":IOUOFF_IOINORM,P1="U1":IOUON,P1="G1":IOG1,P1="G0":IOG0,(P1="R1")!(P1="r1"):IORVON,P1="R0":IORVOFF,IBDEVICE("LISTMAN")&(P1="s1"):IORVON,IBDEVICE("LISTMAN")&(P1="S0"):IORVOFF,1:"")
	Q RET
	;
GRPHCS(GRPHCS)	;returns the needed graphics characters
	N I,X,RET S RET=""
	F I=1:1 S X=$E(GRPHCS,I) Q:X=""  S RET=RET_$S(X="A":IOTLC,X="B":IOHL,X="C":IOTRC,X="D":IOVL,X="E":IOBRC,X="F":IOBLC,1:"")
	Q RET

IBDFU1
IBDFU1	;ALB/CJM - ENCOUNTER FORM ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;utilities
LSTDESCR(IBLIST)	;parses the IBLIST record pointed to by IBBLK and puts the
	;descripition in IBLIST - should be called by reference
	;returns 1 if list description not found
	N NODE,J,C
	S NODE=$G(^IBE(357.2,IBLIST,0))
	Q:NODE="" 1
	S IBLIST("NAME")=$P(NODE,"^",1)
	S IBLIST("BLK")=$P(NODE,"^",2)
	S IBLIST("DSCHDR")=$P(NODE,"^",4)
	S IBLIST("HDR")=$P(NODE,"^",5)
	S IBLIST("DHDR")=$P(NODE,"^",6)
	S IBLIST("SEP")=$P(NODE,"^",7) D
	.;how to separate subcolumns
	.I IBLIST("SEP")=1 S IBLIST("SEP")=" ",IBLIST("SEP1")=" ",IBLIST("SEP2")="" Q
	.I IBLIST("SEP")=2 S IBLIST("SEP")="  ",IBLIST("SEP1")="  ",IBLIST("SEP2")="" Q
	.I IBLIST("SEP")=3 S IBLIST("SEP")="|",IBLIST("SEP1")="|",IBLIST("SEP2")="" Q
	.I IBLIST("SEP")=4 S IBLIST("SEP")=" | ",IBLIST("SEP1")=" |",IBLIST("SEP2")=" " Q
	;
	S IBLIST("BTWN")=$P(NODE,"^",8)
	S IBLIST("DGHDR")=$P(NODE,"^",9)
	S IBLIST("RTN")=$P(NODE,"^",11)
	S IBLIST("INPUT_RTN")=$S(IBLIST("RTN"):$P($G(^IBE(357.6,IBLIST("RTN"),0)),"^",13),1:"")
	S IBLIST("ULSLCTNS")=$P(NODE,"^",12)
	S IBLIST("NUMCOL")=$P(NODE,"^",13)
	S IBLIST("DYNAMIC")=+$P(NODE,"^",14)
	S IBLIST("OVERFLOW")=+$P(NODE,"^",15)
	S IBLIST("OTHER")=$P(NODE,"^",16)
	S (IBLIST("NAR_READ"),IBLIST("NAR_PRINT"),IBLIST("CODE_READ"),IBLIST("CODE_PRINT"))=0
	I $P(NODE,"^",17)=1 S IBLIST("NAR_PRINT")=1,IBLIST("CODE_PRINT")=0
	I $P(NODE,"^",17)=2 S IBLIST("NAR_PRINT")=0,IBLIST("CODE_PRINT")=1
	I $P(NODE,"^",17)=3 S IBLIST("NAR_PRINT")=1,IBLIST("CODE_PRINT")=1
	I $P(NODE,"^",18)=1 S IBLIST("NAR_READ")=1,IBLIST("CODE_READ")=0
	I $P(NODE,"^",18)=2 S IBLIST("NAR_READ")=0,IBLIST("CODE_READ")=1
	I $P(NODE,"^",18)=3 S IBLIST("NAR_READ")=1,IBLIST("CODE_READ")=1
	;
	;go to the package interface
	S NODE="" S:IBLIST("RTN") NODE=$G(^IBE(357.6,IBLIST("RTN"),16))
	S IBLIST("NAR_DATATYPE")=$P(NODE,"^",2),IBLIST("NAR_HDR")=$P(NODE,"^",3),IBLIST("CODE_DATATYPE")=$P(NODE,"^",6),IBLIST("CODE_HDR")=$P(NODE,"^",7)
	;
	S IBLIST("SC0")=IBLIST("DYNAMIC")&IBLIST("INPUT_RTN")
	;get column information
	F J=1:1:4 S C=$O(^IBE(357.2,IBLIST,1,"B",J,"")) S NODE=$S('C:"",1:$G(^IBE(357.2,IBLIST,1,C,0))) S IBLIST("Y",J)=$P(NODE,"^",2),IBLIST("X",J)=$P(NODE,"^",3),IBLIST("H",J)=$P(NODE,"^",4)
	;get subcolumn information
	I IBLIST("SC0") S IBLIST("SCHDR",0)="",IBLIST("SCW",0)=4,IBLIST("SCTYPE",0)=1,IBLIST("SCPIECE",0)=0,IBLIST("SCEDITABLE",0)=0,IBLIST("NOUL",0)=0
	F J=1:1:8 S C=$O(^IBE(357.2,IBLIST,2,"B",J,"")) S NODE=$S('C:"",1:$G(^IBE(357.2,IBLIST,2,C,0))) D
	.S IBLIST("SCTYPE",J)=$P(NODE,"^",4) Q:'IBLIST("SCTYPE",J)
	.S IBLIST("SCHDR",J)=$P(NODE,"^",2) S:IBLIST("SCHDR",J)=" " IBLIST("SCHDR",J)="" S IBLIST("SCW",J)=$P(NODE,"^",3)
	.I IBLIST("SCTYPE",J)=1 S IBLIST("SCPIECE",J)=$P(NODE,"^",5),IBLIST("SCEDITABLE",J)=$P(NODE,"^",7),IBLIST("NOUL",J)=$P(NODE,"^",8) D
	..I IBLIST("SCPIECE",J)=1,IBLIST("RTN") S IBLIST("SCEDITABLE",J)=$S($P($G(^IBE(357.6,IBLIST("RTN"),2)),"^",2)="":1,1:0)
	.I IBLIST("SCTYPE",J)=2 D
	..S IBLIST("SCSYMBOL",J)=$P(NODE,"^",6)
	..S IBLIST("NOUL",J)=$P(NODE,"^",8),IBLIST("ROUTINE",J)=""
	..S IBLIST("QLFR",J)=$P(NODE,"^",9),IBLIST("RULE",J)=+$P(NODE,"^",10)
	..I 'IBLIST("SCSYMBOL",J) S IBLIST("SCSYMBOL",I)="",IBLIST("SCW",J)=0 Q
	..S NODE=$G(^IBE(357.91,IBLIST("SCSYMBOL",J),0))
	..I '$P(NODE,"^",4) S IBLIST("SCSYMBOL",J)=$P(NODE,"^",2),IBLIST("SCW",J)=$L(IBLIST("SCSYMBOL",J)) D  Q
	...I $L($G(IBLIST("SCHDR",J)))>IBLIST("SCW",J) S IBLIST("SCW",J)=$L(IBLIST("SCHDR",J)),IBLIST("SCSYMBOL",J)=$J($$CJ^XLFSTR(IBLIST("SCSYMBOL",J),IBLIST("SCW",J)),IBLIST("SCW",J))
	..;may need to call a special procedure if printing to a PCL printer
	..I $E($P(NODE,"^"),1,6)="BUBBLE" D
	...S IBLIST("ROUTINE",J)="BUBBLE",IBLIST("SCW",J)=3,IBLIST("SCSYMBOL",J)="   "
	...I $L(IBLIST("SCHDR",J))>IBLIST("SCW",J) S IBLIST("SCW",J)=$L(IBLIST("SCHDR",J)),IBLIST("SCSYMBOL",J)=$J(" ",IBLIST("SCW",J))
	Q 0
	;
LSTDSCR2(IBLIST)	;parses the IBLIST record pointed to by IBBLK and puts the
	;descripition in IBLIST(just what's needed while editing the selection
	;list, not for printing it) in- should be called by reference
	;returns 1 if list description not found
	N NODE,J,C
	S NODE=$G(^IBE(357.2,IBLIST,0))
	Q:NODE="" 1
	S IBLIST("RTN")=$P(NODE,"^",11)
	S IBLIST("DYNAMIC")=+$P(NODE,"^",14)
	S IBLIST("BTWN")=$P(NODE,"^",8)
	;get subcolumn information
	F J=1:1:8 S C=$O(^IBE(357.2,IBLIST,2,"B",J,"")) S NODE=$S('C:"",1:$G(^IBE(357.2,IBLIST,2,C,0))) D
	.Q:NODE=""  S IBLIST("SCTYPE",J)=$P(NODE,"^",4) Q:'IBLIST("SCTYPE",J)
	.S IBLIST("SCHDR",J)=$P(NODE,"^",2),IBLIST("SCW",J)=$P(NODE,"^",3)
	.I IBLIST("SCTYPE",J)=1 S IBLIST("SCPIECE",J)=$P(NODE,"^",5),IBLIST("SCEDITABLE",J)=$P(NODE,"^",7) I IBLIST("SCPIECE",J)=1,IBLIST("RTN") S IBLIST("SCEDITABLE",J)=$S($P($G(^IBE(357.6,IBLIST("RTN"),2)),"^",2)="":1,1:0)
	Q 0
	;
SCDESCR(LIST,CWIDTH)	;computes the offsets for each subcolumn and
	;computes the column width (CWIDTH)
	N I,SCHDR,CHDR,W,FLAG
	;CHDR will be the line with all the subcolumn headers
	S CWIDTH=LINE+$L($P(LIST("SEP"),"|",2))
	S CHDR="",FLAG=0
	F I=1-LIST("SC0"):1:8 D
	.I (LIST("SCTYPE",I)'=1)&(LIST("SCTYPE",I)'=2) S LIST("SCTYPE",I)="" Q
	.I 'LIST("SCW",I) S LIST("SCTYPE",I)="" Q
	.I LIST("SCHDR",I)'="" S FLAG=1,LIST("SCHDR",I)=$E(LIST("SCHDR",I),1,LIST("SCW",I))
	.S LIST("SCOS",I)=CWIDTH+((LIST("SCW",I)-$L(LIST("SCHDR",I)))\2)
	.S CWIDTH=CWIDTH+LIST("SCW",I)+$L(LIST("SEP"))
	.S SCHDR=LIST("SCHDR",I)
	.S W=$L(SCHDR)
	.S SCHDR=$$PADRIGHT^IBDFU($J(SCHDR,W+((LIST("SCW",I)-W)\2)),LIST("SCW",I))
	.S:CHDR'="" CHDR=CHDR_$J("",$L(LIST("SEP")))
	.S CHDR=CHDR_SCHDR
	;
	;calculate the column width
	S CWIDTH=CWIDTH-$L($P(LIST("SEP"),"|"))
	;
	;if there were no subcolumn headers then that line is empty, don't print
	I 'FLAG S LIST("CHDR")="" Q
	S LIST("CHDR")=LIST("SEP2")_CHDR
	Q

IBDFU10
IBDFU10	;ALB/CJM - ENCOUNTER FORM (uncompile forms,blocks);DEC 14,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
UNCMPILE	;
	N BLK,FORM
	;
	W !,"Beginning to Uncompile Forms and Blocks"
	;
	;set COMPILED? field for forms to 0
	S FORM=0 F  S FORM=$O(^IBE(357,FORM)) Q:'FORM  S $P(^IBE(357,FORM,0),"^",5)=0
	;
	;delete cross-references for compiled blocks
	S BLK=0 F  S BLK=$O(^IBE(357.1,BLK)) Q:'BLK  D UNCMPBLK^IBDF19(BLK)
	;
	W !,"Forms and Blocks have been Uncompiled!"
	Q

IBDFU1A
IBDFU1A	;ALB/CJM - ENCOUNTER FORM (read data field description);NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;utilities
FLDDESCR(IBFLD)	;IBFLD should be a pointer to the IB DATA FIELD file
	;parses the 0 NODE and returns the fields
	;returns 1 if the field description is not found
	N NODE
	Q:'$G(IBFLD) 0
	S:$G(IBFLD) NODE=$G(^IBE(357.5,IBFLD,0))
	Q:NODE="" 0
	S FLDNAME=$P(NODE,"^",1)
	S BLK=$P(NODE,"^",2)
	S RTN=$P(NODE,"^",3)
	S LASTITEM=$P(NODE,"^",4)
	S ITEM=+$P(NODE,"^",5)
	S LABEL=$P(NODE,"^",6)
	S DISPLAY=$P(NODE,"^",7)
	S XIO=+$P(NODE,"^",10)
	S YIO=+$P(NODE,"^",11)
	S HIO=+$P(NODE,"^",12)
	S SPACING=$P(NODE,"^",13)
	S WIO=+$P(NODE,"^",14)
	Q 1
SFLDDSCR(IBFLD,LAST)	;gets the next subfield - LAST is the last subfield processed, IBFLD  is the field
	;outputs - LABEL,XIO,YIO,WIO,XLAB,YLAB,PIECE,LENGTH,LAST
	;returns 0 if no more subfields, LAST otherwise
	;
	N NODE
	F  S LAST=$O(^IBE(357.5,IBFLD,2,LAST)) Q:'LAST  S NODE=$G(^IBE(357.5,IBFLD,2,LAST,0)) I NODE'="" D  Q
	.S LABEL=$P(NODE,"^",1),DISPLAY=$P(NODE,"^",3),XLAB=$P(NODE,"^",4),YLAB=$P(NODE,"^",5),YIO=$P(NODE,"^",6),XIO=$P(NODE,"^",7),WIO=$P(NODE,"^",8),PIECE=$P(NODE,"^",9)
	Q LAST

IBDFU1B
IBDFU1B	;ALB/CJM - ENCOUNTER FORM ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;utilities
BLKDESCR(IBBLK)	;parses the block record pointed to by IBBLK and puts the
	;descripition in IBBLK array - should be called by reference
	;returns 1 if block description is too incomplete to print block
	Q:'$G(IBBLK) 1
	N NODE0
	S NODE0=$G(^IBE(357.1,IBBLK,0))
	S IBBLK("NAME")=$P(NODE0,"^",1)
	S IBBLK("Y")=$P(NODE0,"^",4)
	S IBBLK("X")=$P(NODE0,"^",5)
	S IBBLK("W")=$P(NODE0,"^",6)
	S IBBLK("H")=$P(NODE0,"^",7)
	S IBBLK("BOX")=$P(NODE0,"^",10)
	S IBBLK("HDR")=$P(NODE0,"^",11)
	S IBBLK("HDISP")=$P(NODE0,"^",12)
	S IBBLK("S")=$P(NODE0,"^",3)
	S IBBLK("PAGE")=1+(IBBLK("Y")\IBFORM("PAGE_HT"))
	Q:NODE0="" 1
	Q 0
	;
RTNDSCR(RTN)	;RTN should be a pointer to the Package Interface file
	;RTN should be passed by reference
	;
	N NODE
	S NODE="",RTN=+$G(RTN)
	S:RTN NODE=$G(^IBE(357.6,RTN,0))
	S RTN("ACTION")=$P(NODE,"^",6)
	;
	;for input interfaces (mapping)
	I RTN("ACTION")=1 D  Q
	.S RTN("AVAIL")=$P(NODE,"^",9)
	.Q
	;
	;for output interfaces
	I RTN("ACTION")=2 D  Q
	.N NODFN
	.S NODFN=$P(NODE,"^",15)
	.S RTN("NAME")=$P(NODE,"^",1)
	.S RTN("RTN")=$P(NODE,"^",2,3)
	.S RTN("CHANGES")=$P(NODE,"^",5)
	.S RTN("DATATYPE")=$P(NODE,"^",7)
	.S RTN("FULL")=$P(NODE,"^",8)
	.S RTN("AVAIL")=$P(NODE,"^",9)
	.S RTN("ENTRY")=$S(RTN:$G(^IBE(357.6,RTN,4)),1:"")
	.S RTN("EXIT")=$S(RTN:$G(^IBE(357.6,RTN,5)),1:"")
	.;determine where the interface should put the data
	.I NODFN S RTN("DATA_LOCATION")="^TMP(""IB"",$J,""INTERFACES"","""_RTN("NAME")_""")"
	.I 'NODFN S RTN("DATA_LOCATION")="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN),"""_RTN("NAME")_""")"
	;
	;for selection interfaces
	I RTN("ACTION")=3 D  Q
	.S RTN("NAME")=$P(NODE,"^",1)
	.S RTN("RTN")=$P(NODE,"^",2,3)
	.S RTN("FULL")=$P(NODE,"^",8)
	.S RTN("AVAIL")=$P(NODE,"^",9)
	.S RTN("DYNAMIC")=$P(NODE,"^",14)
	.S RTN("ENTRY")=$S(RTN:$G(^IBE(357.6,RTN,4)),1:"")
	.S RTN("EXIT")=$S(RTN:$G(^IBE(357.6,RTN,5)),1:"")
	.S RTN("DATA_LOCATION")="^TMP(""IB"",$J,""INTERFACES"","""_RTN("NAME")_""")"
	.S RTN("NAME",1)=$$DATANAME(RTN,1),RTN("WIDTH",1)=$$DATANODE(RTN,1)
	;
	;for reports
	I RTN("ACTION")=4 D  Q
	.S RTN("RTN")=$P(NODE,"^",2,3)
	.S RTN("AVAIL")=$P(NODE,"^",9)
	.S RTN("HSMRY?")=$P(NODE,"^",10)
	.S RTN("HSMRY")=$P(NODE,"^",11)
	.S RTN("ENTRY")=$S(RTN:$G(^IBE(357.6,RTN,4)),1:"")
	.S RTN("EXIT")=$S(RTN:$G(^IBE(357.6,RTN,5)),1:"")
	;
	;in case the action type is not defined
	S RTN("NAME")=$P(NODE,"^",1)
	S RTN("RTN")=$P(NODE,"^",2,3)
	S RTN("CHANGES")=$P(NODE,"^",5)
	S RTN("DATATYPE")=$P(NODE,"^",7)
	S RTN("FULL")=$P(NODE,"^",8)
	S RTN("AVAIL")=$P(NODE,"^",9)
	S RTN("DYNAMIC")=$P(NODE,"^",14)
	S RTN("ENTRY")=$S(RTN:$G(^IBE(357.6,RTN,4)),1:"")
	S RTN("EXIT")=$S(RTN:$G(^IBE(357.6,RTN,5)),1:"")
	;
	;I FULL,RTN S IEN=0 F  S IEN=$O(^IBE(357.6,RTN,15,IEN)) Q:'IEN  S NODE=$G(^IBE(357.6,RTN,15,IEN,0)) D
	;.S I=$P(NODE,"^",3)
	;.Q:'I
	;.S RTN("NODE",I)=$P(NODE,"^",4),RTN("NAME",I)=$P(NODE,"^")
	Q
	;
WARNING(OBJECT)	; displays a warning
	S:'$D(OBJECT) OBJECT="object"
	W !,"WARNING! The "_OBJECT_" is partially outside the block."
	D PAUSE^IBDFU5
	Q
	; ** The following routines assume BLKDESCR has been called and the IBBLK array is defined
	;
MINX()	;the smallest X a block element can begin at
	Q $S((IBBLK("BOX")=1):1,1:0)
	;
MAXX()	;the largest X a block element can begin at
	Q (IBBLK("W")-(1+$S(IBBLK("BOX")=1:1,1:0)))
	;
MINY()	;the smallest Y a block element can begin at
	Q $S(IBBLK("BOX")=1:1,1:0)
	;
MAXY()	;the largest Y a block element can begin at
	Q (IBBLK("H")-(1+$S((IBBLK("BOX")=1):1,1:0)))
	;
DORTN(IBRTN)	;calls the rtn specified by the pkg interface if ok
	;IBRTN is an array containing data from the package interface in format returned by RTNDESCR and MUST be passed by reference
	;returns 0 if not successful, 1 otherwise
	N QUIT,VARIABLE,VARIEN,IBARY
	S QUIT=0
	;
	;set IBARY to node where the interface should return the data
	I (IBRTN("ACTION")=2)!(IBRTN("ACTION")=3) D
	.S IBARY=IBRTN("DATA_LOCATION")
	.K @IBARY
	;
	Q:IBRTN("AVAIL")'=1 0
	;
	;verify that required variables exist
	S VARIEN=0 F  S VARIEN=$O(^IBE(357.6,IBRTN,7,VARIEN)) Q:'VARIEN  S VARIABLE=$P($G(^IBE(357.6,IBRTN,7,VARIEN,0)),"^") I '$D(@VARIABLE) S QUIT=1 Q
	Q:QUIT 0
	;
	;new protected variables
	S VARIEN=0 F  S VARIEN=$O(^IBE(357.6,IBRTN,6,VARIEN)) Q:'VARIEN  S VARIABLE=$P($G(^IBE(357.6,IBRTN,6,VARIEN,0)),"^")  N @VARIABLE
	;
	;make sure the entry point is known
	Q:$G(IBRTN("RTN"))="" 0
	;
	;make sure the entry point exists
	Q:$P(IBRTN("RTN"),"^",2)="" 0
	I $P(IBRTN("RTN"),"^")'="" Q:'$L($T(@$P(IBRTN("RTN"),"^")^@$P($P(IBRTN("RTN"),"^",2),"("))) 0
	I $P(IBRTN("RTN"),"^")="" Q:'$L($T(^@$P($P(IBRTN("RTN"),"^",2),"("))) 0
	;
	;call the interface routine,xecute the entry and exit actions
	X IBRTN("ENTRY")
	D @IBRTN("RTN")
	X IBRTN("EXIT")
	Q 1
	;
DATANAME(RTN,PIECE)	;returns the name of the data for field=piece
	Q:'RTN!'PIECE ""
	I PIECE=1 Q $P($G(^IBE(357.6,RTN,2)),"^")
	N NODE,IEN
	S IEN=$O(^IBE(357.6,RTN,15,"C",PIECE,0))
	Q:'IEN ""
	Q $P($G(^IBE(357.6,RTN,15,IEN,0)),"^")
	;
DATANODE(RTN,PIECE)	;returns the node that the field=piece is on
	Q:'RTN!'PIECE ""
	I PIECE=1 Q ""
	S IEN=$O(^IBE(357.6,RTN,15,"C",PIECE,0))
	Q:'IEN ""
	Q $P($G(^IBE(357.6,RTN,15,IEN,0)),"^",4)
	;
DATATYPE(TYPE)	;returns the description of the datatype=TYPE
	;TYPE must be passed by reference
	;
	N NODE
	S NODE=""
	I $G(TYPE) S NODE=$G(^IBE(359.1,TYPE,0))
	S TYPE("SPACE")=$P(NODE,"^",6)
	S TYPE("MAX_INPUT")=$P(NODE,"^",2)
	S TYPE("FORMAT")=$P(NODE,"^",5)
	Q

IBDFU1C
IBDFU1C	;ALB/CJM - ENCOUNTER FORM (sets various parameters);Jan 5, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;utilities
	;
FORMDSCR(IBFORM)	;
	;IBFORM=ien of form - sets the IBFORM array with form parameterss - should be passed by reference
	;returns 1=ok, 0=failure
	;
	Q:'IBFORM 0
	N NODE,MODE,SUB
	S NODE=$G(^IBE(357,IBFORM,0))
	Q:NODE="" 0
	S IBFORM("NAME")=$P(NODE,"^")
	S IBFORM("WIDTH")=$P(NODE,"^",9) S:'IBFORM("WIDTH") IBFORM("WIDTH")=133
	S IBFORM("PAGE_HT")=$P(NODE,"^",10) S:'IBFORM("PAGE_HT") IBFORM("PAGE_HT")=80
	S IBFORM("PAGES")=$P(NODE,"^",11) S:'IBFORM("PAGES") IBFORM("PAGES")=1
	S IBFORM("HT")=IBFORM("PAGE_HT")*IBFORM("PAGES")
	S IBFORM("TOOLKIT")=$P(NODE,"^",7)
	S IBFORM("COMPILED")=+$P(NODE,"^",5)
	S IBFORM("SCAN")=$P(NODE,"^",12)
	S IBFORM("SCAN","ICR")=$S(IBFORM("SCAN"):$P(NODE,"^",6),1:0)
	S IBFORM("TYPE")=$P(NODE,"^",13)
	;
	S MODE=$P(NODE,"^",2)
	S IBFORM("PRINT_MODE")=$S(MODE=1:"DUPLEX_LONG",MODE=2:"DUPLEX_SHORT",1:"SIMPLEX")
	;
	;pages to be scanned
	I IBFORM("SCAN") S SUB=0 F  S SUB=$O(^IBE(357,IBFORM,2,SUB)) Q:'SUB  S NODE=$G(^IBE(357,IBFORM,2,SUB,0)) I +NODE,$P(NODE,"^",2) S IBFORM("SCAN",+NODE)=1
	Q 1
	;
FORMSIZE(IBFORM)	;pass IBFORM by reference
	;returns 0=failure, 1=success
	N NODE
	S NODE=$G(^IBE(357,IBFORM,0))
	Q:NODE="" 0
	S IBFORM("WIDTH")=$P(NODE,"^",9) S:'IBFORM("WIDTH") IBFORM("WIDTH")=133
	S IBFORM("PAGE_HT")=$P(NODE,"^",10) S:'IBFORM("PAGE_HT") IBFORM("PAGE_HT")=80
	S IBFORM("PAGES")=$P(NODE,"^",11) S:'IBFORM("PAGES") IBFORM("PAGES")=1
	S IBFORM("HT")=IBFORM("PAGE_HT")*IBFORM("PAGES")
	Q 1
	;
ARRAYS(IBFORM,IBARRAY)	;decide what arrays will be used to contain the form
	;pass IBFORM,IBARRAY by reference
	;
	;non-toolkit forms are compiled
	I 'IBFORM("TOOLKIT") D
	.S IBARRAY("UNDERLINES")="^IBE(357,""AU"",IBFORM)"
	.S IBARRAY("CONTROLS")="^IBE(357,""AC"",IBFORM)"
	.S IBARRAY("GRAPHICS")="^IBE(357,""AG"",IBFORM)"
	.S IBARRAY("BOXES")="^IBE(357,""AB"",IBFORM)"
	.S IBARRAY("BUBBLES")=$S(IBFORM("TYPE"):"^IBD(357.95,""AC"",IBFORM(""TYPE""))",1:"^TMP(""IBDF"",$J,""FORM"",""BUBBLES"")")
	.S IBARRAY("HAND_PRINT")=$S(IBFORM("TYPE"):"^IBD(357.95,""AD"",IBFORM(""TYPE""))",1:"^TMP(""IBDF"",$J,""FORM"",""HAND PRINT"")")
	.;
	.;if using compiled version, use a copy of the text portion so as to not change it
	.I IBFORM("COMPILED") D
	..N IBROW,TEXT
	..S IBARRAY("TEXT")="^TMP(""IBDF"",$J,""FORM"")"
	..S TEXT="^IBE(357,""AT"",IBFORM)"
	..S IBROW="" F  S IBROW=$O(@TEXT@(IBROW)) Q:IBROW=""  S @IBARRAY("TEXT")@(IBROW)=$G(@TEXT@(IBROW))
	.;
	.I 'IBFORM("COMPILED") S IBARRAY("TEXT")="^IBE(357,""AT"",IBFORM)"
	;
	;toolkit forms don't have compiled versions
	I IBFORM("TOOLKIT") D
	.S IBARRAY("CONTROLS")="^TMP(""IBDF"",$J,""FORM"",""CTRL"")"
	.S IBARRAY("UNDERLINES")="^TMP(""IBDF"",$J,""FORM"",""UNDRLN"")"
	.S IBARRAY("GRAPHICS")="^TMP(""IBDF"",$J,""FORM"",""GRPHC"")"
	.S IBARRAY("BOXES")="^TMP(""IBDF"",$J,""FORM"",""BOXES"")"
	.S IBARRAY("BUBBLES")="^TMP(""IBDF"",$J,""FORM"",""BUBBLES"")"
	.S IBARRAY("HAND_PRINT")="^TMP(""IBDF"",$J,""FORM"",""HAND PRINT"")"
	.S IBARRAY("TEXT")="^TMP(""IBDF"",$J,""FORM"")"
	S IBARRAY("OVERFLOW")="^TMP(""IBDF"",$J,""OVERFLOW"")"
	Q
	;
PRNTPRMS(IBPRINT,WITHDATA,ENTIRE,RECMPILE,WRITE)	;
	;sets pararameters in the IBPRINT array that controll printing - pass IBPRINT by reference
	;WITHDATA - whether to fill in the form with data
	;ENTIRE - whether to print the non-data parts
	;RECMPILE - whether blocks should be compiled, even if already compiled
	;WRITE - only applies if RECMPILE - whether to print the block
	;
	S IBPRINT("WITH_DATA")=WITHDATA
	S IBPRINT("ENTIRE")=ENTIRE
	S IBPRINT("COMPILING_BLOCKS")=RECMPILE
	S IBPRINT("WRITE_IF_COMPILING")=WRITE ;if IBPRINT("COMPILING_BLOCKS"),this =0 if the form isn't being printed, =1 if the form is being printed
	Q

IBDFU2
IBDFU2	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(copying blocks) ; 08-JAN-1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
COPYBLK(OLDBLOCK,IBFORM,FROMFILE,TOFILE,ROW,COL,TKORDER,NAME,RECMPILE)	;copys OLDBLOCK in FROMFILE to IBFORM in TOFILE
	;makes the new block part of IBFORM if defined
	;places block at (ROW,COL) if defined
	;sets TOOL KIT ORDER TKORDER if defined and >0
	;sets the block name to NAME if defined
	;returns the ien of the new copy
	;RECMPILE means don't copy compiled block
	;
	Q:(FROMFILE'=357.1)&(FROMFILE'=358.1) ""
	Q:(TOFILE'=357.1)&(TOFILE'=358.1) ""
	N NODE,LIST,FLD,LINE,TEXT,NEWBLOCK,FROM,TO,SUB,I
	S NEWBLOCK=""
	S NODE=$G(^IBE(FROMFILE,OLDBLOCK,0)) Q:NODE="" ""
	S $P(NODE,"^",2)=$G(IBFORM)
	S:$G(NAME)="" NAME=$P(NODE,"^")
	S RECMPILE=+$G(RECMPILE)
	;there must be a name
	Q:NAME="" ""
	S $P(NODE,"^")=NAME
	I $D(ROW),(ROW=+ROW) S $P(NODE,"^",4)=ROW
	I $D(COL),(COL=+COL) S $P(NODE,"^",5)=COL
	S:$D(TKORDER) $P(NODE,"^",14)=$S(TKORDER:TKORDER,1:"")
	K DIC,DO,DD,DINUM S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWBLOCK=$S(+Y<0:"",1:+Y)
	Q:'NEWBLOCK ""
	S ^IBE(TOFILE,NEWBLOCK,0)=NODE
	S NODE=0 F  S NODE=$O(^IBE(FROMFILE,OLDBLOCK,NODE)) Q:'NODE  S ^IBE(TOFILE,NEWBLOCK,NODE)=$G(^IBE(FROMFILE,OLDBLOCK,NODE))
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWBLOCK
	D IX1^DIK K DIK,DA
	I ('RECMPILE),TOFILE=357.1,FROMFILE=357.1,$D(^IBE(357.1,OLDBLOCK,"V")),$D(^IBE(357.1,OLDBLOCK,"S")),$D(^IBE(357.1,OLDBLOCK,"B")),$D(^IBE(357.1,OLDBLOCK,"H")) D
	.F SUB="S","V","B","H" S I=0 S ^IBE(357.1,NEWBLOCK,SUB,0)=$G(^IBE(357.1,OLDBLOCK,SUB,0)) F  S I=$O(^IBE(357.1,OLDBLOCK,SUB,I)) Q:'I  S ^IBE(357.1,NEWBLOCK,SUB,I,0)=$G(^IBE(357.1,OLDBLOCK,SUB,I,0))
	;before any new block component is created, make sure there is no garbage around with dangling pointer pointing to new block
	D DLTCNTNT^IBDFU3(NEWBLOCK,TOFILE)
	;
	;now copy the old block's contents into the newblock
	S (LIST,LINE,TEXT)=""
	;
	;copy selection lists
	S FROM=$S(FROMFILE[358:358.2,1:357.2),TO=$S(TOFILE[358:358.2,1:357.2)
	F  S LIST=$O(^IBE(FROM,"C",OLDBLOCK,LIST)) Q:'LIST  I $$COPYLIST(LIST,OLDBLOCK,NEWBLOCK,FROM,TO)
	;
	;copy data fields
	S FROM=$S(FROMFILE[358:358.5,1:357.5),TO=$S(TOFILE[358:358.5,1:357.5)
	S FLD=0 F  S FLD=$O(^IBE(FROM,"C",OLDBLOCK,FLD)) Q:'FLD  D COPYFLD^IBDFU2A(FLD,OLDBLOCK,NEWBLOCK,FROM,TO)
	;
	;copy multiple choice fields
	S FROM=$S(FROMFILE[358:358.93,1:357.93),TO=$S(TOFILE[358:358.93,1:357.93)
	S FLD=0 F  S FLD=$O(^IBE(FROM,"C",OLDBLOCK,FLD)) Q:'FLD  D COPYMFLD^IBDFU2A(FLD,OLDBLOCK,NEWBLOCK,FROM,TO)
	;
	;copy hand print fields
	S FROM=$S(FROMFILE[358:358.94,1:359.94),TO=$S(TOFILE[358:358.94,1:359.94)
	S FLD=0 F  S FLD=$O(^IBE(FROM,"C",OLDBLOCK,FLD)) Q:'FLD  D COPYHFLD^IBDFU2A(FLD,OLDBLOCK,NEWBLOCK,FROM,TO)
	;
	;copy lines
	S FROM=$S(FROMFILE[358:358.7,1:357.7),TO=$S(TOFILE[358:358.7,1:357.7)
	F  S LINE=$O(^IBE(FROM,"C",OLDBLOCK,LINE)) Q:'LINE  D COPYLINE^IBDFU2A(LINE,OLDBLOCK,NEWBLOCK,FROM,TO)
	;
	;copy text areas
	S FROM=$S(FROMFILE[358:358.8,1:357.8),TO=$S(TOFILE[358:358.8,1:357.8)
	F  S TEXT=$O(^IBE(FROM,"C",OLDBLOCK,TEXT)) Q:'TEXT  D COPYTEXT^IBDFU2A(TEXT,OLDBLOCK,NEWBLOCK,FROM,TO)
	Q NEWBLOCK
	;
COPYLIST(LIST,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE)	;
	;returns the new list copied from LIST
	Q:'$G(LIST)!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE)) 0
	Q:(FROMFILE'=357.2)&(FROMFILE'=358.2) 0
	Q:(TOFILE'=357.2)&(TOFILE'=358.2) 0
	N NODE,NAME,NEWLIST,GRP,SLCTN,COL,TO,FROM,TOPI,FROMPI,DYNAMIC
	S NEWLIST=""
	S NODE=$G(^IBE(FROMFILE,LIST,0)) Q:NODE="" 0
	S DYNAMIC=$P(NODE,"^",14)
	;make sure the list really belongs to the block being copied - if not re-index it
	I $P(NODE,"^",2)='OLDBLOCK K DA S DA=LIST,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q 0
	S NAME=$P(NODE,"^",1),$P(NODE,"^",2)=NEWBLOCK
	S FROMPI=$P(NODE,"^",11)
	S TOPI=$$GETPI^IBDFU2B(FROMPI,$S(FROMFILE[358:358.6,1:357.6),$S(TOFILE[358:358.6,1:357.6)),$P(NODE,"^",11)=TOPI
	Q:NAME="" 0
	K DIC,DD,DINUM,DO S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWLIST=$S(+Y<0:"",1:+Y)
	Q:'NEWLIST 0
	D DLISTCNT^IBDFU3(NEWLIST,TOFILE) ;clean up any dangling pointers that may be now pointing to this new, supposedly empty list
	;
	;now copy
	S ^IBE(TOFILE,NEWLIST,0)=NODE
	;
	;copy the column multiple
	S NODE=$G(^IBE(FROMFILE,LIST,1,0))
	I NODE'=""  S $P(NODE,"^",2)=TOFILE_"1I",^IBE(TOFILE,NEWLIST,1,0)=NODE S COL=0 F  S COL=$O(^IBE(FROMFILE,LIST,1,COL)) Q:'COL  S NODE=$G(^IBE(FROMFILE,LIST,1,COL,0)) S:NODE'="" ^IBE(TOFILE,NEWLIST,1,COL,0)=NODE
	;
	;now copy the subcolumn multiple
	S NODE=$G(^IBE(FROMFILE,LIST,2,0)) I NODE'=""  S $P(NODE,"^",2)=TOFILE_"2I",^IBE(TOFILE,NEWLIST,2,0)=NODE S COL=0 F  S COL=$O(^IBE(FROMFILE,LIST,2,COL)) Q:'COL  S NODE=$G(^IBE(FROMFILE,LIST,2,COL,0)) I NODE'="" D
	.S:$P(NODE,"^",6) $P(NODE,"^",6)=$$GETMA^IBDFU2B($P(NODE,"^",6),$S(FROMFILE[358:358.91,1:357.91),$S(TOFILE[358:358.91,1:357.91))
	.S:$P(NODE,"^",9) $P(NODE,"^",9)=$$GETQLFR^IBDFU2B($P(NODE,"^",9),$S(FROMFILE[358:358.98,1:357.98),$S(TOFILE[358:358.98,1:357.98))
	.S ^IBE(TOFILE,NEWLIST,2,COL,0)=NODE
	;
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWLIST
	D IX1^DIK K DIK,DA
	S FROM=$S(FROMFILE[358:358.4,1:357.4),TO=$S(TOFILE[358:358.4,1:357.4)
	;
	;don't want to copy groups and selections if the selections are not exportable or the list is dynamic
	I FROM'=TO,FROMPI,'$P($G(^IBE($S(FROM[358:358.6,1:357.6),FROMPI,2)),"^",18) Q NEWLIST
	I 'DYNAMIC S GRP="" F  S GRP=$O(^IBE(FROM,"D",LIST,GRP)) Q:'GRP  D COPYGRP^IBDFU2A(GRP,LIST,NEWLIST,NEWBLOCK,FROM,TO)
	Q NEWLIST

IBDFU2A
IBDFU2A	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(copying blocks - continued from IBDFU2) ; 08-JAN-1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
COPYLINE(LINE,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE)	;copys LINE from OLDBLOCK,FROMFILE to newly created NEWBLOCK,TOFILE
	Q:('$G(LINE))!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE))
	Q:(FROMFILE'=357.7)&(FROMFILE'=358.7)
	Q:(TOFILE'=357.7)&(TOFILE'=358.7)
	N NODE,NAME,NEWLINE
	S NEWLINE=""
	S NODE=$G(^IBE(FROMFILE,LINE,0)) Q:NODE=""
	;make sure the line really belongs to the block being copied - if not re-index it
	I $P(NODE,"^",6)'=OLDBLOCK K DA S DA=LINE,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
	S NAME=$P(NODE,"^",1),$P(NODE,"^",6)=NEWBLOCK
	K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWLINE=$S(+Y<0:"",1:+Y)
	Q:'NEWLINE
	S ^IBE(TOFILE,NEWLINE,0)=NODE
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWLINE
	D IX1^DIK K DIK,DA
	Q
	;
COPYTEXT(TEXT,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE)	;copies TEXT in OLDBLOCK,FROMFILE to NEWBLOCK,TOFILE
	Q:('$G(TEXT))!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE))
	Q:(FROMFILE'=357.8)&(FROMFILE'=358.8)
	Q:(TOFILE'=357.8)&(TOFILE'=358.8)
	N NODE,NAME,NEWTEXT,TLINE
	S NEWTEXT=""
	S NODE=$G(^IBE(FROMFILE,TEXT,0)) Q:NODE=""
	;make sure the text area really belongs to the block being copied - re-index if not
	I ($P(NODE,"^",2)'=OLDBLOCK) K DA S DA=TEXT,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
	S NAME=$P(NODE,"^",1),$P(NODE,"^",2)=NEWBLOCK
	K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWTEXT=$S(+Y<0:"",1:+Y)
	Q:'NEWTEXT
	S ^IBE(TOFILE,NEWTEXT,0)=NODE
	;now copy the word-processing field
	S NODE=$G(^IBE(FROMFILE,TEXT,1,0)) I NODE'=""  S ^IBE(TOFILE,NEWTEXT,1,0)=NODE S TLINE=0 F  S TLINE=$O(^IBE(FROMFILE,TEXT,1,TLINE)) Q:'TLINE  S NODE=$G(^IBE(FROMFILE,TEXT,1,TLINE,0)) S:NODE'="" ^IBE(TOFILE,NEWTEXT,1,TLINE,0)=NODE
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWTEXT
	D IX1^DIK K DIK,DA
	Q
	;
COPYFLD(FLD,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE)	;copies a display field=FLD in FROMFILE to NEWBLOCK in TOFILE
	Q:('$G(FLD))!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE))
	Q:(FROMFILE'=357.5)&(FROMFILE'=358.5)
	Q:(TOFILE'=357.5)&(TOFILE'=358.5)
	N NODE,NAME,NEWFLD,SUBFLD
	S NEWFLD=""
	S NODE=$G(^IBE(FROMFILE,FLD,0)) Q:NODE=""
	;make sure the field really belongs to the block being copied - if not re-index it
	I ($P(NODE,"^",2)'=OLDBLOCK) K DA S DA=FLD,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
	S NAME=$P(NODE,"^",1),$P(NODE,"^",2)=NEWBLOCK
	Q:NAME=""  ;corrupted data
	S:$P(NODE,"^",3) $P(NODE,"^",3)=$$GETPI^IBDFU2B($P(NODE,"^",3),$S(FROMFILE[358:358.6,1:357.6),$S(TOFILE[358:358.6,1:357.6))
	K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWFLD=$S(+Y<0:"",1:+Y)
	Q:'NEWFLD
	S ^IBE(TOFILE,NEWFLD,0)=NODE
	;now copy the subfields
	S NODE=$G(^IBE(FROMFILE,FLD,2,0))
	I NODE'=""  S $P(NODE,"^",2)=TOFILE_2,^IBE(TOFILE,NEWFLD,2,0)=NODE S SUBFLD=0 F  S SUBFLD=$O(^IBE(FROMFILE,FLD,2,SUBFLD)) Q:'SUBFLD  S NODE=$G(^IBE(FROMFILE,FLD,2,SUBFLD,0)) S:NODE'="" ^IBE(TOFILE,NEWFLD,2,SUBFLD,0)=NODE
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWFLD
	D IX1^DIK K DIK,DA
	Q
	;
COPYMFLD(FLD,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE)	;copies MUTLIPLE CHOICE FIELD=FLD in FROMFILE to NEWBLOCK in TOFILE
	Q:('$G(FLD))!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE))
	Q:(FROMFILE'=357.93)&(FROMFILE'=358.93)
	Q:(TOFILE'=357.93)&(TOFILE'=358.93)
	N NODE,NAME,NEWFLD,SUBFLD,FROMPI
	S NEWFLD=""
	S NODE=$G(^IBE(FROMFILE,FLD,0)) Q:NODE=""
	;make sure the field really belongs to the block being copied - if not re-index it
	I ($P(NODE,"^",8)'=OLDBLOCK) K DA S DA=FLD,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
	S NAME=$P(NODE,"^",1),$P(NODE,"^",8)=NEWBLOCK
	Q:NAME=""  ;corrupted data
	S FROMPI=$P(NODE,"^",6)
	S:FROMPI $P(NODE,"^",6)=$$GETPI^IBDFU2B(FROMPI,$S(FROMFILE[358:358.6,1:357.6),$S(TOFILE[358:358.6,1:357.6))
	K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWFLD=$S(+Y<0:"",1:+Y)
	Q:'NEWFLD
	S ^IBE(TOFILE,NEWFLD,0)=NODE
	;
	;now copy the subfields=the choices
	;don't copy choices for export if there is no package interface or choices are not exportable
	I FROMPI,(FROMFILE=TOFILE)!($P($G(^IBE($S(FROMFILE[358:358.6,1:357.6),FROMPI,2)),"^",18)) D
	.S NODE=$G(^IBE(FROMFILE,FLD,1,0)) I NODE'=""  S $P(NODE,"^",2)=TOFILE_1,^IBE(TOFILE,NEWFLD,1,0)=NODE S SUBFLD=0 F  S SUBFLD=$O(^IBE(FROMFILE,FLD,1,SUBFLD)) Q:'SUBFLD  S NODE=$G(^IBE(FROMFILE,FLD,1,SUBFLD,0)) D
	..S:$P(NODE,"^",9) $P(NODE,"^",9)=$$GETQLFR^IBDFU2B($P(NODE,"^",9),$S(FROMFILE[358:358.98,1:357.98),$S(TOFILE[358:358.98,1:357.98))
	..S:NODE'="" ^IBE(TOFILE,NEWFLD,1,SUBFLD,0)=NODE
	;
	;index the new field
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWFLD
	D IX1^DIK
	K DIK,DA
	Q
	;
COPYHFLD(FLD,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE)	;copies HAND PRINT FIELD=FLD in FROMFILE to NEWBLOCK in TOFILE
	Q:('$G(FLD))!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE))
	Q:(FROMFILE'=359.94)&(FROMFILE'=358.94)
	Q:(TOFILE'=359.94)&(TOFILE'=358.94)
	N NODE,NAME,NEWFLD,SUBFLD
	S NEWFLD=""
	S NODE=$G(^IBE(FROMFILE,FLD,0)) Q:NODE=""
	;make sure the field really belongs to the block being copied - if not re-index it
	I ($P(NODE,"^",8)'=OLDBLOCK) K DA S DA=FLD,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
	S NAME=$P(NODE,"^",1),$P(NODE,"^",8)=NEWBLOCK
	Q:NAME=""  ;corrupted data
	S:$P(NODE,"^",6) $P(NODE,"^",6)=$$GETPI^IBDFU2B($P(NODE,"^",6),$S(FROMFILE[358:358.6,1:357.6),$S(TOFILE[358:358.6,1:357.6))
	S:$P(NODE,"^",10) $P(NODE,"^",10)=$$GETADE^IBDFU2B($P(NODE,"^",10),$S(FROMFILE[358:358.99,1:359.1),$S(TOFILE[358:358.99,1:359.1))
	K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWFLD=$S(+Y<0:"",1:+Y)
	Q:'NEWFLD
	S ^IBE(TOFILE,NEWFLD,0)=NODE
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWFLD
	D IX1^DIK K DIK,DA
	Q
	;
COPYGRP(GRP,LIST,NEWLIST,BLOCK,FROMFILE,TOFILE)	;
	Q:(FROMFILE'=357.4)&(FROMFILE'=358.4)
	Q:(TOFILE'=357.4)&(TOFILE'=358.4)
	N NODE,HDR,NEWGRP,SLCTN,FROM,TO
	S NEWGRP=""
	S NODE=$G(^IBE(FROMFILE,GRP,0)) Q:NODE=""
	;make sure group belongs to list - otherwise re-index
	I $P(NODE,"^",3)'=LIST K DA S DA=GRP,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
	S HDR=$P(NODE,"^",1),$P(NODE,"^",3)=NEWLIST
	Q:HDR=""
	K DIC,DD,DO,DINUM S DIC="^IBE("_TOFILE_",",X=HDR,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWGRP=$S(+Y<0:"",1:+Y)
	Q:'NEWGRP
	S ^IBE(TOFILE,NEWGRP,0)=NODE
	S NODE=0 F  S NODE=$O(^IBE(FROMFILE,GRP,NODE)) Q:'NODE  S ^IBE(TOFILE,NEWGRP,NODE)=$G(^IBE(FROMFILE,GRP,NODE))
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWGRP
	D IX1^DIK K DIK,DA
	S FROM=$S(FROMFILE[358:358.3,1:357.3),TO=$S(TOFILE[358:358.3,1:357.3)
	S SLCTN="" F  S SLCTN=$O(^IBE(FROM,"D",GRP,SLCTN)) Q:'SLCTN  D CPYSLCTN^IBDFU2B(SLCTN,GRP,NEWGRP,LIST,NEWLIST,FROM,TO)
	Q

IBDFU2B
IBDFU2B	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(copying blocks - continued from IBDFU2) ; 08-JAN-1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
CPYSLCTN(SLCTN,GRP,NEWGRP,LIST,NEWLIST,FROMFILE,TOFILE)	;
	Q:('$G(SLCTN))!('$G(GRP))!('$G(NEWGRP))!('$G(LIST))!('$G(NEWLIST))!('$G(FROMFILE))!('$G(TOFILE))
	Q:(FROMFILE'=357.3)&(FROMFILE'=358.3)
	Q:(TOFILE'=357.3)&(TOFILE'=358.3)
	N NODE,NAME,NEWSLCTN,SC,CNT
	S NEWSLCTN=""
	S NODE=$G(^IBE(FROMFILE,SLCTN,0)) Q:NODE=""
	I ($P(NODE,"^",3)'=LIST)!($P(NODE,"^",4)'=GRP) K DA S DA=SLCTN,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
	S NAME=$P(NODE,"^",1),$P(NODE,"^",3)=NEWLIST,$P(NODE,"^",4)=NEWGRP
	Q:NAME=""
	K DIC,DD,DINUM,DO S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWSLCTN=$S(+Y<0:"",1:+Y)
	Q:'NEWSLCTN
	S ^IBE(TOFILE,NEWSLCTN,0)=NODE
	;
	; -- now copy the subcolumn value multiple
	; -- When copying selections but not same list definition (i.e.
	;    when copying selections from one list to another)
	;    find old sub columns, in 357.2 for list
	;    find and match to new sub columns in 357.2 for new list
	;
	S (SC,CNT,LAST)=0
	;S NODE=$G(^IBE(FROMFILE,SLCTN,1,0)) I NODE'=""  S ^IBE(TOFILE,NEWSLCTN,1,0)=NODE 
	F  S SC=$O(^IBE(FROMFILE,SLCTN,1,SC)) Q:'SC  S NODE=$G(^IBE(FROMFILE,SLCTN,1,SC,0)) D:$D(IBDFCPYF)  S:NODE'="" ^IBE(TOFILE,NEWSLCTN,1,+NODE,0)=NODE,CNT=CNT+1,LAST=+NODE
	.N K,IBDFI
	.S K=0,IBDFI=+NODE
	.Q:$G(IBDFNEW(IBDFI))=$G(IBDFOLD(IBDFI))
	.F  S K=$O(IBDFNEW(K)) Q:K=""  I IBDFNEW(K)=$G(IBDFOLD(+IBDFI)) S $P(NODE,"^",1)=K,NODE=NODE Q
	.Q
	S ^IBE(TOFILE,NEWSLCTN,1,0)=$S(TOFILE=357.3:"^357.31IA^",1:"^358.31IA^")_$G(LAST)_"^"_CNT
	; -- now copy 2 node if it exists
	S NODE=$G(^IBE(FROMFILE,SLCTN,2)) I NODE'="" S ^IBE(TOFILE,NEWSLCTN,2)=NODE
	;
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWSLCTN
	D IX1^DIK
	K DIK,DA
	Q
	;
GETMA(MA,FROMFILE,TOFILE)	;copys marking area=ma from file=FROMFILE to file=TOFILE if it does not already exist
	;returns the ien of the marking area existing in TOFILE
	Q:($G(FROMFILE)'=357.91)&($G(FROMFILE)'=358.91) ""
	Q:($G(TOFILE)'=357.91)&($G(TOFILE)'=358.91) ""
	Q:'$G(MA) ""
	Q:FROMFILE=TOFILE MA ;files are the same!
	N NODE,NAME,NEWMA
	S NEWMA=""
	S NODE=$G(^IBE(FROMFILE,MA,0)) Q:NODE="" ""
	S NAME=$P(NODE,"^",1)
	Q:NAME="" ""
	S NEWMA=$O(^IBE(TOFILE,"B",NAME,0)) Q:NEWMA NEWMA ;quit if it already exists
	K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWMA=$S(+Y<0:"",1:+Y)
	Q:'NEWMA ""
	S ^IBE(TOFILE,NEWMA,0)=NODE
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWMA
	D IX1^DIK K DIK,DA
	Q NEWMA
	;
GETPI(PI,FROMFILE,TOFILE)	;copies the package interface=PI from file=FROMFILE to file=TOFILE if it doesn't already exist
	;returns the ien of the package interface in the TOFILE
	Q:($G(FROMFILE)'=357.6)&($G(FROMFILE)'=358.6) ""
	Q:($G(TOFILE)'=357.6)&($G(TOFILE)'=358.6) ""
	Q:'$G(PI) ""
	Q:FROMFILE=TOFILE PI
	N NODE,NEWPI,SUB1,SUB2,RTN,ENTRYPT,TYPE
	S NEWPI=""
	S NODE=$G(^IBE(FROMFILE,PI,0)) Q:NODE="" ""
	S NAME=$P(NODE,"^"),ENTRYPT=$P(NODE,"^",2),RTN=$P(NODE,"^",3),TYPE=$P(NODE,"^",6)
	S NEWPI=$$LOOKUP(NAME,RTN,ENTRYPT,TOFILE,TYPE)
	Q:NEWPI NEWPI ;quit if copy is not needed
	K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=$P(NODE,"^"),DIC(0)=""
	Q:X="" "" ;corrupted data!
	D FILE^DICN K DIC,DIE,DA
	S NEWPI=$S(+Y<0:"",1:+Y)
	Q:'NEWPI ""
	;
	;for display or selection interfaces, if the entry point does not exist the new package interface should be marked as unavailable
	I (TYPE=2)!(TYPE=3) D
	.I RTN="" S $P(NODE,"^",9)=0 Q
	.I RTN'="" D
	..I ENTRYPT]"" I '$L($T(@ENTRYPT^@RTN)) S $P(NODE,"^",9)=0
	..I ENTRYPT="" I '$L($T(^@RTN)) S $P(NODE,"^",9)=0
	;
	S ^IBE(TOFILE,NEWPI,0)=NODE
	S:$P(NODE,"^",13) $P(NODE,"^",13)=$$GETPI($P(NODE,"^",13),$S(FROMFILE[358:358.6,1:357.6),$S(TOFILE[358:358.6,1:357.6))
	S ^IBE(TOFILE,NEWPI,0)=NODE
	F SUB1=2,3,4,5,8,9,10,11,12,14,17,18,19 S NODE=$G(^IBE(FROMFILE,PI,SUB1)) I NODE'="" S ^IBE(TOFILE,NEWPI,SUB1)=NODE
	S NODE=$G(^IBE(FROMFILE,PI,16)) I NODE'="" D
	.N TYPEDATA
	.S TYPEDATA=$P(NODE,"^",2)
	.I TYPEDATA S $P(NODE,"^",2)=$$GETADE(TYPEDATA,$S(FROMFILE[358:358.99,1:359.1),$S(TOFILE[358:358.99,1:359.1))
	.S TYPEDATA=$P(NODE,"^",6)
	.I TYPEDATA S $P(NODE,"^",6)=$$GETADE(TYPEDATA,$S(FROMFILE[358:358.99,1:359.1),$S(TOFILE[358:358.99,1:359.1))
	.S ^IBE(TOFILE,NEWPI,16)=NODE
	F SUB1=1,6,7,15 S NODE=$G(^IBE(FROMFILE,PI,SUB1,0)) D
	.I NODE'="" S ^IBE(TOFILE,NEWPI,SUB1,0)=NODE S SUB2=0 F  S SUB2=$O(^IBE(FROMFILE,PI,SUB1,SUB2)) Q:'SUB2  S NODE=$G(^IBE(FROMFILE,PI,SUB1,SUB2,0)) I NODE'="" S ^IBE(TOFILE,NEWPI,SUB1,SUB2,0)=NODE
	;
	D CPYQLFRS(FROMFILE,PI,TOFILE,NEWPI)
	;
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWPI
	D IX1^DIK K DIK,DA
	Q NEWPI
	;
CPYQLFRS(FROMFILE,PI,TOFILE,NEWPI)	;copy allowable qualifiers from the package interface=PI in NEWPI to the package interface=NEWPI in TOFILE
	;
	N NODE,SUB,VARPTR
	K ^IBE(TOFILE,NEWPI,13)
	S NODE=$G(^IBE(FROMFILE,PI,13,0)) I NODE'="" S ^IBE(TOFILE,NEWPI,13,0)=NODE S SUB=0 F  S SUB=$O(^IBE(FROMFILE,PI,13,SUB)) Q:'SUB  D
	.S NODE=$G(^IBE(FROMFILE,PI,13,SUB,0)),VARPTR=$P(NODE,"^") I +VARPTR D  I +VARPTR S $P(NODE,"^")=VARPTR,^IBE(TOFILE,NEWPI,13,SUB,0)=NODE
	..I VARPTR["IBE" S $P(VARPTR,";")=$$GETADE(+VARPTR,$S(FROMFILE[358:358.99,1:359.1),$S(TOFILE[358:358.99,1:359.1)),$P(VARPTR,"(",2)=$S(TOFILE[358:358.99,1:359.1)_"," Q
	..I VARPTR["IBD" S $P(VARPTR,";")=$$GETQLFR(+VARPTR,$S(FROMFILE[358:358.98,1:357.98),$S(TOFILE[358:358.98,1:357.98)),$P(VARPTR,"(",2)=$S(TOFILE[358:358.98,1:357.98)_","
	Q
	;
LOOKUP(NAME,RTN,ENTRYPT,TOFILE,TYPE)	;return 1 if the package interface already exists in TOFILE, 0 otherwise
	N PI,LOOKNODE,QUIT
	Q:NAME="" ""
	S (QUIT,PI)=0 F  S PI=$O(^IBE(TOFILE,"B",$E(NAME,1,30),PI)) Q:'PI  S LOOKNODE=$G(^IBE(TOFILE,PI,0)) I LOOKNODE'="" D  Q:QUIT
	.I NAME=$P(LOOKNODE,"^"),RTN=$P(LOOKNODE,"^",3),ENTRYPT=$P(LOOKNODE,"^",2),TYPE=$P(LOOKNODE,"^",6) S QUIT=1 Q  ;matches!
	Q PI
	;
GETQLFR(QLFR,FROMFILE,TOFILE)	;copys qualifier=QLFR from file=FROMFILE to file=TOFILE if it does not already exist
	;returns the ien of the qualifier existing in TOFILE
	Q:($G(FROMFILE)'=357.98)&($G(FROMFILE)'=358.98) ""
	Q:($G(TOFILE)'=357.98)&($G(TOFILE)'=358.98) ""
	Q:'$G(QLFR) ""
	Q:FROMFILE=TOFILE QLFR ;files are the same!
	N NODE,NAME,NEWQLFR
	S NEWQLFR=""
	S NODE=$G(^IBD(FROMFILE,QLFR,0)) Q:NODE="" ""
	S NAME=$P(NODE,"^",1)
	Q:NAME="" ""
	;does it already exist?
	S NEWQLFR=0 F  S NEWQLFR=$O(^IBD(TOFILE,"B",$E(NAME,1,30),NEWQLFR)) Q:'NEWQLFR  Q:$P($G(^IBD(TOFILE,NEWQLFR,0)),"^")=NAME
	Q:NEWQLFR NEWQLFR ;quit if it already exists
	K DIC,DO,DINUM,DD S DIC="^IBD("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWQLFR=$S(+Y<0:"",1:+Y)
	Q:'NEWQLFR ""
	S ^IBD(TOFILE,NEWQLFR,0)=NODE
	K DIK,DA S DIK="^IBD("_TOFILE_",",DA=NEWQLFR
	D IX1^DIK K DIK,DA
	Q NEWQLFR
	;
GETADE(ADE,FROMFILE,TOFILE)	;copys AICS Data Element=ADE from file=FROMFILE to file=TOFILE if it does not already exist
	;returns the ien of the qualifier existing in TOFILE
	Q:($G(FROMFILE)'=359.1)&($G(FROMFILE)'=358.99) ""
	Q:($G(TOFILE)'=359.1)&($G(TOFILE)'=358.99) ""
	Q:'$G(ADE) ""
	Q:FROMFILE=TOFILE ADE ;files are the same!
	N NODE,NAME,NEWADE,SUB
	S NEWADE=""
	S NODE=$G(^IBE(FROMFILE,ADE,0)) Q:NODE="" ""
	S NAME=$P(NODE,"^",1)
	Q:NAME="" ""
	S NEWADE=$O(^IBE(TOFILE,"B",NAME,0)) Q:NEWADE NEWADE ;quit if it already exists
	K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWADE=$S(+Y<0:"",1:+Y)
	Q:'NEWADE ""
	S ^IBE(TOFILE,NEWADE,0)=NODE
	;
	; -- 9/28/95 add 10 node to be moved for moved fields 
	F SUB=1,2,3,10 S NODE=$G(^IBE(FROMFILE,ADE,SUB)) I NODE'="" S ^IBE(TOFILE,NEWADE,SUB)=NODE
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWADE
	D IX1^DIK K DIK,DA
	Q NEWADE

IBDFU2C
IBDFU2C	;ALB/CJM - ENCOUNTER FORM - (COPYING FORMS) ;AUG12,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
COPYFORM(OLDFORM,FROMFILE,TOFILE,NEWNAME,TK)	;
	;copies OLDFORM from FROMFILE to TOFILE, changing the name to NEWNAME if defined (NEWNAME is optional), and the field TOOL KIT to TK if defined
	;
	Q:'$D(OLDFORM)!'$D(FROMFILE)!'$D(TOFILE) ""
	Q:(FROMFILE'=357)&(FROMFILE'=358) ""
	Q:(TOFILE'=357)&(TOFILE'=358) ""
	Q:'OLDFORM ""
	N NEWFORM,NODE,OLDBLOCK,NEWBLOCK,BLOCK,IBDELETE,FROM,TO,PAGE
	S NODE=$G(^IBE(FROMFILE,OLDFORM,0)) Q:NODE="" ""
	S:($G(NEWNAME)'="") $P(NODE,"^")=NEWNAME
	S:$G(NEWNAME)="" NEWNAME=$P(NODE,"^")
	I $G(TK)=+$G(TK) S $P(NODE,"^",7)=TK
	S $P(NODE,"^",5)=0,$P(NODE,"^",13)=""
	K DIC,DD,DO,DINUM S DIC="^IBE("_TOFILE_",",X=NEWNAME,DIC(0)=""
	D FILE^DICN K DIC,DIE
	S NEWFORM=$S(+Y<0:"",1:+Y)
	I (NEWFORM<0) W !,"Unable to create a new form!" D PAUSE^IBDFU5 Q ""
	;
	;the new form should be empty - make sure
	S FROM=$S(FROMFILE[358:358.1,1:357.1)
	S TO=$S(TOFILE[358:358.1,1:357.1)
	S BLOCK="" F  S BLOCK=$O(^IBE(TOFILE,"C",NEWFORM,BLOCK)) Q:'BLOCK  D
	.I $P($G(^IBE(TO,BLOCK,0)),"^",2)'=NEWFORM D
	..K ^IBE(TO,"C",NEWFORM,BLOCK),DA S DIK="^IBE("_TO_",",DA=BLOCK D IX1^DIK K DIK,DA
	.E  D DLTBLK^IBDFU3(BLOCK,NEWFORM,TO)
	;
	;copy old 0 node into the new form
	S ^IBE(TOFILE,NEWFORM,0)=NODE
	;
	;now the page multiple
	S NODE=$G(^IBE(FROMFILE,OLDFORM,2,0))
	I NODE'="" S $P(NODE,"^",2)=TOFILE_".02I",^IBE(TOFILE,NEWFORM,2,0)=NODE S PAGE=0 F  S PAGE=$O(^IBE(FROMFILE,OLDFORM,2,PAGE)) Q:'PAGE  S NODE=$G(^IBE(FROMFILE,OLDFORM,2,PAGE,0)) S:NODE'="" ^IBE(TOFILE,NEWFORM,2,PAGE,0)=NODE
	;
	;copy the rest of the form
	S NODE=0 F  S NODE=$O(^IBE(FROMFILE,OLDFORM,NODE)) Q:'NODE  Q:$G(^IBE(FROMFILE,OLDFORM,NODE))=""  S ^IBE(TOFILE,NEWFORM,NODE)=$G(^IBE(FROMFILE,OLDFORM,NODE))
	K DIK S DIK="^IBE("_TOFILE_",",DA=NEWFORM D IX^DIK K DIK
	;
	;now copy the blocks into the form
	S OLDBLOCK="" F  S OLDBLOCK=$O(^IBE(FROM,"C",OLDFORM,OLDBLOCK)) Q:'OLDBLOCK  I $P($G(^IBE(FROM,OLDBLOCK,0)),"^",2)=OLDFORM S NEWBLOCK=$$COPYBLK^IBDFU2(OLDBLOCK,NEWFORM,FROM,TO) W "."
	Q NEWFORM
	;
	;
DELETE(FORM,FILE,ASK)	;deletes the FORM in FILE- if ASK then asks permission first
	Q:'$G(FORM)
	Q:(FILE'=357)&(FILE'=358)
	I $G(ASK) Q:'$$RUSURE^IBDFU5($P($G(^IBE(FILE,FORM,0)),"^"))
	N BLOCK,BLKFILE,CR
	;might have to delete the bubble translation table
	I FILE=357 D
	.Q:'$$FORMDSCR^IBDFU1C(.FORM)
	.I FORM("TYPE") D KILLTBL^IBDF19(.FORM)
	S BLKFILE=FILE+.1
	S BLOCK="" F  S BLOCK=$O(^IBE(BLKFILE,"C",FORM,BLOCK)) Q:'BLOCK  D DLTBLK^IBDFU3(BLOCK,FORM,BLKFILE) W "."
	I FILE=357 F CR="AT","AC","AU","AG" K ^IBE(357,CR,FORM)
	K DA S DIK="^IBE("_FILE_",",DA=FORM D ^DIK K DIK,DA
	K FORM
	Q
NEWNAME(OLDNAME)	;asks the user to select a unique form name
	;returns "" if unsuccessfull, else the form name
	;shows OLDNAME as the default if defined
	;
	N NAME,QUIT S NAME="",QUIT=0
	K DIR S DIR(0)="357,.01A",DIR("A")="New Form Name: ",DIR("?")="Enter a unique name up to 30 characters"
	S DIR("B")="" I $G(OLDNAME)'="",'$O(IBE(357,"B",OLDNAME,0)) S DIR("B")=OLDNAME
	F  D  Q:QUIT
	.D ^DIR I $D(DIRUT) S QUIT=1 Q
	.I $O(^IBE(357,"B",Y,"")) D
	..W !,"The form name must be unique, try using the clinic in the name!"
	.E  S NAME=Y,QUIT=1
	K DIR
	Q NAME
TKFORM()	;returns the form TOOL KIT that contains all of the tool kit blocs
	N TKFORM,BLOCK,TKORDER,TK
	S TKFORM=+$O(^IBE(357,"B","TOOL KIT",""))
	I 'TKFORM D
	.K DIC,DD,DO,DINUM S DIC="^IBE(357,",DIC(0)="",X="TOOL KIT"
	.D FILE^DICN K DIC,DIE,DA
	.S TKFORM=$S(+(Y>0):+Y,1:"")
	.Q:'TKFORM
	.S ^IBE(357,TKFORM,0)="TOOL KIT^^CONTAINS ALL OF THE TOOL KIT BLOCKS^^^^1"
	.K DIK S DIK="^IBE(357,",DA=TKFORM D IX1^DIK K DIK
	.S TKORDER=0 F  S TKORDER=$O(^IBE(357.1,"D",TKORDER)) Q:'TKORDER  S BLOCK=0 F  S BLOCK=$O(^IBE(357.1,"D",TKORDER,BLOCK)) Q:'BLOCK  D
	..S TK=$P($G(^IBE(357.1,BLOCK,0)),"^",14) I 'TK K ^IBE(357.1,"D",TKORDER,BLOCK) Q
	..S FORM=$P($G(^IBE(357.1,BLOCK,0)),"^",2) I FORM'=TKFORM K ^IBE(357.1,"C",FORM,BLOCK) S $P(^IBE(357.1,BLOCK,0),"^",2)=TKFORM K DIK S DIK="^IBE(357.1,",DA=BLOCK,DIK(1)=.02 D EN1^DIK K DIK
	Q TKFORM

IBDFU3
IBDFU3	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(deleting blocks) ; 08-JAN-1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
DLTBLK(BLOCK,FORM,FILE)	;deletes BLOCK (in FILE) if not part of the toolkit (unless IBTKBLK=1) and, if FORM is passed in, the block actually is on FORM
	Q:('$G(BLOCK))
	Q:(FILE'=357.1)&(FILE'=358.1)
	N NODE,DIK,DA
	S NODE=$G(^IBE(FILE,BLOCK,0))
	K DA S DA=BLOCK,DIK="^IBE("_FILE_","
	;don't delete it if part of the toolkit or doesn't belong to the form (messed up cross-references), unless IBTKBLK=1 (means deletion is durring special option for editing the tk)
	G:$G(IBTKBLK) JUSTDOIT
	I ($P(NODE,"^",14)) D  Q
	.S $P(^IBE(FILE,BLOCK,0),"^",2)=$O(^IBE(FILE\1,"B","TOOL KIT",""))
	.I $G(FORM)'="" K ^IBE(FILE,"C",FORM,BLOCK) D IX1^DIK
	I $G(FORM)'="",($P(NODE,"^",2)'=FORM) D  Q
	.;don't delete it - instead re-index it and quit
	.K ^IBE(FILE,"C",FORM,BLOCK) D IX1^DIK
JUSTDOIT	;
	;delete its components
	D DLTCNTNT(BLOCK,FILE)
	;delete the block (DIC,DA are newed)
	D ^DIK
	Q
	;
DLTCNTNT(BLOCK,FILE)	;delete everything in BLOCK, but not the block itself
	Q:('$G(BLOCK))!('$G(FILE))
	Q:(FILE'=357.1)&(FILE'=358.1)
	N LIST,FLD,LINE,TEXT,TARGET,DIK,DA
	;delete selection lists from BLOCK
	S TARGET=$S(FILE[358:358.2,1:357.2)
	S LIST="" F  S LIST=$O(^IBE(TARGET,"C",BLOCK,LIST)) Q:'LIST  D DLTLIST(TARGET,BLOCK,LIST)
	;delete data fields
	S TARGET=$S(FILE[358:358.5,1:357.5)
	S FLD="" F  S FLD=$O(^IBE(TARGET,"C",BLOCK,FLD)) Q:'FLD  D DLTFLD(TARGET,BLOCK,FLD)
	;delete multiple choice fields
	S TARGET=$S(FILE[358:358.93,1:357.93)
	S FLD="" F  S FLD=$O(^IBE(TARGET,"C",BLOCK,FLD)) Q:'FLD  D DLTIFLD(TARGET,BLOCK,FLD)
	;delete hand print fields
	S TARGET=$S(FILE[358:358.94,1:359.94)
	S FLD="" F  S FLD=$O(^IBE(TARGET,"C",BLOCK,FLD)) Q:'FLD  D DLTHFLD(TARGET,BLOCK,FLD)
	;delete lines
	S TARGET=$S(FILE[358:358.7,1:357.7)
	S LINE="" F  S LINE=$O(^IBE(TARGET,"C",BLOCK,LINE)) Q:'LINE  D DLTLINE(TARGET,BLOCK,LINE)
	;delete text areas
	S TARGET=$S(FILE[358:358.8,1:357.8)
	S TEXT="" F  S TEXT=$O(^IBE(TARGET,"C",BLOCK,TEXT)) Q:'TEXT  D DLTTEXT(TARGET,BLOCK,TEXT)
	Q
	;
DLTLIST(FILE,BLOCK,LIST)	;delete the LIST, its selections and groups
	Q:'$G(LIST)!'$G(BLOCK)!(($G(FILE)'=357.2)&($G(FILE)'=358.2))
	N GRP,SLCTN,DIK,DA
	S DIK="^IBE("_FILE_",",DA=LIST
	;don't delete it if it does not belong to BLOCK - instead, reindex it and quit
	I $P($G(^IBE(FILE,LIST,0)),"^",2)'=BLOCK K ^IBE(FILE,"C",BLOCK,LIST) D IX1^DIK Q
	;delete its contents(DIK,DA are newed)
	D DLISTCNT(LIST,FILE)
	;delete the list
	D ^DIK
	Q
DLISTCNT(LIST,FILE)	;delete the list's selections and groups
	N GRP,SLCTN,DIK,DA,GFILE,SFILE
	Q:('$G(LIST))!('$G(FILE))
	Q:(FILE'=357.2)&(FILE'=358.2)
	S GFILE=$S(FILE[358:358.4,1:357.4)
	S SFILE=$S(FILE[358:358.3,1:357.3)
	;now delete list's contents
	S GRP="" F  S GRP=$O(^IBE(GFILE,"D",LIST,GRP)) Q:'GRP  S DA=GRP D
	.I $P($G(^IBE(GFILE,GRP,0)),"^",3)=LIST D
	..S DIK="^IBE("_GFILE_"," D ^DIK
	..S SLCTN="",DIK="^IBE("_SFILE_"," F  S SLCTN=$O(^IBE(SFILE,"D",GRP,SLCTN)) Q:'SLCTN  S DA=SLCTN D
	...I $P($G(^IBE(SFILE,SLCTN,0)),"^",4)=GRP D
	....D ^DIK
	...E  K ^IBE(SFILE,"C",LIST,SLCTN) D IX1^DIK
	.;
	.E  K ^IBE(GFILE,"D",LIST,GRP) D IX1^DIK
	S SLCTN="",DIK="^IBE("_SFILE_"," F  S SLCTN=$O(^IBE(SFILE,"C",LIST,SLCTN)) Q:'SLCTN  S DA=SLCTN D
	.I $P($G(^IBE(SFILE,SLCTN,0)),"^",3)=LIST D
	..D ^DIK
	.E  K ^IBE(SFILE,"C",LIST,SLCTN) D IX1^DIK
	Q
	;
DLTFLD(FILE,BLOCK,FLD)	;delete a display field
	Q:('$G(BLOCK))!('$G(FLD))!('$G(FILE))
	Q:(FILE'=357.5)&(FILE'=358.5)
	N DA,DIK
	S DIK="^IBE("_FILE_",",DA=FLD
	I $P($G(^IBE(FILE,FLD,0)),"^",2)=BLOCK D
	.D ^DIK
	E  K ^IBE(FILE,"C",BLOCK,FLD) D IX1^DIK
	Q
	;
DLTIFLD(FILE,BLOCK,FLD)	;delete a multiple choice field
	Q:('$G(BLOCK))!('$G(FLD))!('$G(FILE))
	Q:(FILE'=357.93)&(FILE'=358.93)
	N DA,DIK
	S DIK="^IBE("_FILE_",",DA=FLD
	I $P($G(^IBE(FILE,FLD,0)),"^",8)=BLOCK D
	.D ^DIK
	E  K ^IBE(FILE,"C",BLOCK,FLD) D IX1^DIK
	Q
DLTHFLD(FILE,BLOCK,FLD)	;delete a hand print field
	Q:('$G(BLOCK))!('$G(FLD))!('$G(FILE))
	Q:(FILE'=359.94)&(FILE'=358.94)
	N DA,DIK
	S DIK="^IBE("_FILE_",",DA=FLD
	I $P($G(^IBE(FILE,FLD,0)),"^",8)=BLOCK D
	.D ^DIK
	E  K ^IBE(FILE,"C",BLOCK,FLD) D IX1^DIK
	Q
	;
DLTTEXT(FILE,BLOCK,TEXT)	;delete the TEXT AREA
	Q:('$G(BLOCK))!('$G(TEXT))!('$G(FILE))
	Q:(FILE'=357.8)&(FILE'=358.8)
	N DA,DIK
	S DIK="^IBE("_FILE_",",DA=TEXT
	I $P($G(^IBE(FILE,TEXT,0)),"^",2)=BLOCK D
	.D ^DIK
	E  K ^IBE(FILE,"C",BLOCK,TEXT) D IX1^DIK
	Q
DLTLINE(FILE,BLOCK,LINE)	;delete the line
	Q:('$G(BLOCK))!('$G(LINE))!('$G(FILE))
	Q:(FILE'=357.7)&(FILE'=358.7)
	N DA,DIK
	S DIK="^IBE("_FILE_",",DA=LINE
	I $P($G(^IBE(FILE,LINE,0)),"^",6)=BLOCK D
	.D ^DIK
	E  K ^IBE(FILE,"C",BLOCK,LINE) D IX1^DIK
	Q
FASTEXIT	;just sets a flag signaling system should be exited
	S VALMBCK="Q"
	K DIR S DIR(0)="Y",DIR("A")="Exit Encounter Form Option",DIR("B")="NO" D ^DIR
	I $D(DIRUT)!(Y) S IBFASTXT=1
	K DIR
	Q

IBDFU4
IBDFU4	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(write single form block to array for display,position & size copied block) ; 08-JAN-1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
IDXBLOCK	; create list containing block rows for list processor
	;
	N I
	W !,"... BUILDING THE FORM BLOCK ..."
	Q:$$BLKDESCR^IBDFU1B(.IBBLK)
	;
	;keep small blocks in memory
	;I ((IBBLK("H")+1)*(IBBLK("W")+1))<4000 S VALMAR="IBMEMARY"
	;
	K @VALMAR D KILL^VALM10()
	D BLNKFORM^IBDF5A(0,IBBLK("H")-1,IBBLK("W"))
	S I="",$P(I,"~",IBBLK("W")+1)="~"
	S @VALMAR@(IBBLK("H")+1,0)="    "_I
	S VALMCNT=IBBLK("H")+1
	D DRWBLOCK^IBDF2A1(.IBBLK,1)
	Q
POS(NEWBLOCK,DFLTX,DFLTY)	;allows the user to position and size the block
	;NEWBLOCK = block to be edited
	;DFLTY - default value for starting row
	;DFLTX - default value for starting column
	N IBX,IBY ;used in the input template
	S:$G(DFLTX)=+$G(DFLTX) $P(NODE,"^",5)=DFLTX
	S:$G(DFLTY)=+$G(DFLTY) $P(NODE,"^",4)=DFLTY
	N NODE,IBBLK,IBDONE
	S IBBLK=NEWBLOCK
	S NODE=$G(^IBE(357.1,NEWBLOCK,0))
	;set defaults for starting column, starting row
	S ^IBE(357.1,NEWBLOCK,0)=NODE,IBDONE=0
	K DIE S DIE=357.1,DA=NEWBLOCK,DR="[IBDF POSITION COPIED BLOCK]"
	D ^DIE K DIE,DR,DA
	I 'IBDONE D DLTBLK^IBDFU3(NEWBLOCK,IBFORM,357.1)
	Q
CURX()	;returns the current X position (top left corner of displayed poriton of the form - internal column value)
	N IB
	S IB=+$G(VALMLFT),IB=IB-5 S:IB<0 IB=0
	Q IB
CURY()	;returns the current Y position (top left corner of displayed poriton of the form - internal row value)
	N IB
	S IB=+$G(VALMBG),IB=IB-1 S:IB<0 IB=0
	Q IB
SLCTFORM(TK,NODE)	;allows the user to select a form and returns the IEN
	;returns 0 if no form selected
	;
	;INPUTS
	;if TK=0 assumes form should not be a toolkit form
	;if TK=1 assumes form should be a toolkit form
	;otherwise, ask the user if the he wants to select fromt he toolkit
	;
	;NODE is optional - if defined it returns the 0 node of the form selected - should be passed by reference
	;
	N FORM,Y S FORM=0
	S TK=$G(TK)
	I TK'=0,TK'=1 D
	.K DIR S DIR(0)="YA",DIR("A")="Do you want to select a form from the toolkit? "
	.D ^DIR
	.I Y'=-1,'$D(DIRUT) S TK=Y
	;don't continue with the selection if it is not known whether or not the form is comming from the toolkit
	I (TK=1)!(TK=0) D
	.D:$G(IBDEVICE("LISTMAN")) FULL^VALM1
	.K DIC S DIC("S")=$S(TK:"I $P($G(^(0)),U,7),$P($G(^(0)),U)'=""TOOL KIT"",$P($G(^(0)),U)'=""GARBAGE"",$P($G(^(0)),U)'=""DEFAULTS""",1:"I '$P($G(^(0)),U,7)"),DIC=357,DIC(0)="AEQ"_$S($D(NODE):"Z",1:"")
	.S DIC("A")="Select a FORM: "
	.D ^DIC S:+Y>0 FORM=+Y
	I FORM,$D(NODE) S NODE=Y(0)
	K DIC,Y,DIR
	Q FORM
CLINICS(FORM,ARY)	;finds the list of clinics using FORM
	;@ARY@(0) is set to the number of clinics found
	;ARY is where to put the list of clinics
	;
	N CLINIC,SETUP,IDX,COUNT,NAME
	K @ARY
	S COUNT=0
	F IDX="C","D","E","F","G","H","I","J" D
	.S SETUP="" F  S SETUP=$O(^SD(409.95,IDX,FORM,SETUP)) Q:'SETUP  D
	..S CLINIC=$P($G(^SD(409.95,SETUP,0)),"^",1)
	..Q:'CLINIC
	..S NAME=$P($G(^SC(CLINIC,0)),"^",1)
	..Q:NAME=""
	..I '$D(@ARY@(NAME)) S @ARY@(NAME)=CLINIC,COUNT=COUNT+1
	S @ARY@(0)=COUNT
	Q
LIST(ARY,SCRNSIZE)	;
	;ARY is the same as in CLINICS
	N CLINIC,COUNT,DIR
	S DIR(0)="YO",DIR("B")="Y",DIR("A")="List the clinics using the form"
	D ^DIR K DIR I '$D(DIRUT),Y D
	.S (COUNT,CLINIC)=0
	.S DIR(0)="E"
	.F  S CLINIC=$O(@ARY@(CLINIC)) Q:CLINIC=""  W !,CLINIC S COUNT=COUNT+1 I COUNT=SCRNSIZE D ^DIR Q:'Y  S COUNT=0
	.D:COUNT>0 ^DIR
	Q

IBDFU5
IBDFU5	;ALB/CJM - ENCOUNTER FORM (utilities) ;JAN 16,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
TOPNBOT(BLOCK,TOP,BOT)	;finds the top and bottom of the block - pass TOP and BOT by reference
	N NODE
	S NODE=$G(^IBE(357.1,BLOCK,0))
	S TOP=+$P(NODE,"^",4),BOT=(TOP+(+$P(NODE,"^",7)))-1
	Q
RUSURE(NAME)	;obtains verification from the user for deletion- returns 1 if answered YES, otherwise NO
	;if NAME is defined it will be used in the prompt
	N RET
	S RET=1
	K DIR S DIR(0)="Y",DIR("A")=$S(NAME="":"Are you sure",1:"Are you sure "_NAME_" should be deleted"),DIR("B")="NO"
	D ^DIR K DIR I (Y<1)!$D(DIRUT) S RET=0
	Q RET
PAUSE	;
	N ANS
	W !,*7,"Press RETURN to continue..." R ANS:DTIME
	Q
	;
NOGRPHCS	;sets graphics variables to "_" and "|"
	S (IOVL,IOBLC,IOBRC)="|",(IOHL,IOTRC,IOTLC)="_"
	Q
	;
HELP1	;displays a list of the record's fields from file 357.6, IB PACKAGE INTERFACE file - EXECUTABLE HELP FOR FIELDS IN THE DATA FIELD FILE
	;
	;INPUT - D0 is a pointer to a DATA FIELD (file 357.5)
	;
	N RTN
	Q:'$G(D0)
	W !,"WHAT DATA SHOULD BE PRINTED IN THE SUBFIELD? CHOOSE FROM:"
	S RTN=$P($G(^IBE(357.5,D0,0)),"^",3) Q:'RTN
	D SHOWDATA
	Q
HELP2	;displays a list of the record's fields from file 357.6, IB PACKAGE INTERFACE file - EXECUTABLE HELP FOR FIELDS IN THE SELECTION LIST FILE
	;
	;INPUT - D0 should be a pointer to a SELECTION LIST
	;
	N RTN
	W !,"WHAT DATA SHOULD BE PRINTED IN THIS SUBCOLUMN? CHOOSE FROM:"
	Q:'$G(D0)
	S RTN=$P($G(^IBE(357.2,D0,0)),"^",11) Q:'RTN
	D SHOWDATA
	W !,"You can also enter 0 if you want the item number entered in the subcolumn.",!
	Q
	;
HELP3	;displays a list of the record's fields from file 357.6, IB PACKAGE INTERFACE file - used to display available data to the user before he enters a data field label
	;
	;INPUT - D0 is a pointer to a DATA FIELD (file 357.5)
	N RTN
	W !,"Available Data:"
	Q:'$G(D0)
	S RTN=$P($G(^IBE(357.5,D0,0)),"^",3) Q:'RTN
	D SHOWDATA
	Q
	;
HELP4	;displays a list of the record's fields from file 357.6, IB PACKAGE INTERFACE file - used to display to the user the available data before a subcolumn to a selection list
	;
	;INPUT - D0 should be a pointer to a SELECTION LIST
	;
	N RTN
	W !,"Available Data:"
	Q:'$G(D0)
	S RTN=$P($G(^IBE(357.2,D0,0)),"^",11) Q:'RTN
	D SHOWDATA
	Q
HELP5	;for number of columns in list
	I $G(IBDEVICE("LISTMAN")) D FULL^VALM1
	W !!,"A selection list COLUMN contains items on the list. It may consist of several",!,"subcolumns. For example, a typical column may have three subcolumns, one"
	W !,"containing a code, the second a description, and the third a marking area for",!,"the user to indicate his selections from the list. Besides going down the",!,"form, the list can can go across the form by having multiple columns."
	W !!,"Entering the number of columns is optional. By default the entire block will",!,"be filled with the list.",!
	I $G(IBDEVICE("LISTMAN")) D PAUSE^IBDFU5,RESET^VALM4:VALMCC,REFRESH^VALM
	Q
	;
SHOWDATA	;displays a discription of the the record returned by the package interface
	;
	;INPUT - RTN - ptr to the package interface file
	N NODE,SUB,ROW,COL,LINE,DESCR,CANSHOW,IEN
	S NODE=$G(^IBE(357.6,RTN,2))
	;
	;piece 1 may not be displayable (an ien)
	S CANSHOW=$S($P(NODE,"^",17)=0:0,1:1)
	I 'CANSHOW S NODE=""
	;
	F ROW=0:1:3 S LINE="" D  W:(LINE'="") !,LINE
	.F COL=1:1:2 S SUB=COL+(2*ROW) D  Q:LINE=""
	..S DESCR=""
	..I (SUB'=1) S NODE="",IEN=$O(^IBE(357.6,RTN,15,"C",SUB,0)) S:IEN NODE=$G(^IBE(357.6,RTN,15,IEN,0))
	..I NODE="" I (COL=1&'$D(^IBE(357.6,RTN,15,"C",SUB+1)))!((COL'=1)&(DESCR="(not applicable)")) Q
	..S DESCR=$P(NODE,"^") I DESCR'="" S DESCR=DESCR_" :"_$P(NODE,"^",2)_" char"
	..I DESCR="" S DESCR="(N/A)"
	..S LINE=LINE_$S(DESCR="":"",1:$$PADRIGHT^IBDFU("  "_SUB_"= "_DESCR,39))
	Q
	;
RESET	;resets the scrolling area of the screen to that defined by List Manager
	;I $G(IOSTBM)'="" S IOTM=IOSL-4,IOBM=IOSL W IOSC,@IOSTBM,IORC
	Q
VARIABLE(VAR)	;returns 0 if VAR is not syntactically a good local variable name, 1 otherwise
	N I,LEN,CHAR,GOOD
	S LEN=$L(VAR)
	S CHAR=$E(VAR)
	I '((CHAR?1A)!(CHAR="%")) Q 0
	S GOOD=1
	F I=2:1:LEN S CHAR=$E(VAR,I) I '((CHAR?1A)!(CHAR?1N)) S GOOD=0 Q
	Q GOOD
ID1	;writes identifier for subcolumn of selection list (file 357.2)
	N NODE,TYPE,PIECE,IEN
	S NODE=$G(^(0)) Q:NODE=""
	W "HEADER=",$$PADRIGHT^IBDFU($P(NODE,U,2),27)_"  CONTENT="
	I $P(NODE,U,4)=1 D
	.S TYPE=$P($G(^IBE(357.2,D0,0)),"^",11) Q:'TYPE
	.S PIECE=+$P(NODE,U,5)
	.W:'PIECE "#COUNT"
	.W:PIECE $$DATANAME^IBDFU1B(TYPE,PIECE)
	I $P(NODE,U,4)=2 D
	.S TYPE=$P(NODE,U,6) Q:'TYPE
	.W $P($G(^IBE(357.91,TYPE,0)),U)
	Q
	;
DFLTS()	;returns the default form if found, 0 otherwise
	N FORM
	S FORM=0 F  S FORM=$O(^IBE(357,"B","DEFAULTS",FORM)) Q:'FORM  Q:$P($G(^IBE(357,FORM,0)),"^",7)
	Q FORM
	;
OKPIECE(PI,PIECE)	;returns 1 if the piece=PIECE is selectable for the package interface=PI, 0 otherwise
	;
	I ('$G(PIECE))!('$G(PI)) Q 0
	N QUIT S QUIT=0
	I PIECE=1 S QUIT=$S($P($G(^IBE(357.6,PI,2)),"^",17)'=0:1,1:0)
	I PIECE'=1 S QUIT=$D(^IBE(357.6,PI,15,"C",PIECE))
	Q QUIT

IBDFU5A
IBDFU5A	;ALB/CJM - ENCOUNTER FORM - (contains Xecutable help);3/29/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
HELP6	;help for choosing print condition
	W "Choose FOR EVERY APPOINTMENT if the form should print for every appointment.",!
	W !,"Choose ONLY FOR EARLIEST APPOINTMENT if the form should print once per",!,"patient, even if he has multiple appointments",!
	W !,"Choose ONLY IF MULTIPLE APPOINTMENTS if the form should print only if the",!,"patient has multiple appointments. If so, it will print only for the",!,"earliest appointment.",!
	Q
	;
HELP7	;help for entering field .16 in the package interface file, type of 
	;object that may point to a package interace
	;
	W !,"This field only applies to input interfaces."
	W !,"It is used to determine what type of form objects may reference the interface."
	W !,"Enter any combination of S=selection list, M=multiple choice, H=hand print P=PANDAS"
	W !,"Example: You may enter 'SM'."
	Q

IBDFU6
IBDFU6	;ALB/CJM - ENCOUNTER FORM - (utilities for data fields);3/29/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
FORMAT(ARY,WIDTH,LABEL)	;formats the word-processing field pointed to by @ARY into a column of width=WIDTH
	N LINE,W
	K ^UTILITY($J,"W"),DIWF
	S LINE=0,DIWL=1,DIWR=WIDTH
	I $D(LABEL) S X=$E(LABEL_" ",1,WIDTH) I X'="" D ^DIWP
	F  S LINE=$O(@ARY@(LINE)) Q:'LINE  S X=$G(@ARY@(LINE,0)) I X'="" D ^DIWP
	K X,DIWL,DIWR,DIWF
	Q

IBDFU7
IBDFU7	;ALB/CJM - ENCOUNTER FORM - (utilities to handle form locks);3/29/93
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
LOCKFORM(FORM)	;locks the form - returns 0 if unsuccessful, 1 otherwise
	;this lock is used to prevent multiple processes from simultaneously compiling a form
	L +^IBE(357,FORM,"LOCK1"):10
	Q $T
	;
LOCKFRM2(FORM)	;locks the form - returns 0 if unsuccessful, 1 otherwise
	;this lock is used to prevent multiple users from editing a form simultaneously
	L +^IBE(357,FORM,"LOCK2"):5
	Q $T
	;
FREEFORM(FORM)	;unlocks the form
	L -^IBE(357,FORM,"LOCK1")
	Q
	;
FREEFRM2(FORM)	;unlocks the form locked by LOCKFRM2()
	L -^IBE(357,FORM,"LOCK2")
	Q
	;
	;
LOCKMSG2(FORM)	;displays a message to the user for forms unavailable by LOCKFRM2()
	N FORMNAME
	S FORMNAME=$P($G(^IBE(357,FORM,0)),"^",1)
	W !!,"The form = '"_FORMNAME_"' is currently not available.",!,"It is being edited by another person.",!
	D PAUSE^IBDFU5
	Q

IBDFU8
IBDFU8	;ALB/CJM - ENCOUNTER FORM - selection routines for form components;OCT 8,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
SLCTBLK(FORM,SCRNSIZE,EXCLUDE)	;SCRNSIZE is the number of lines available for scrolling
	;EXCLUDE is a block name that can be excluded (used to exclude the HEADER block from being edited)
	;returns the block selected, returns "" if none selected
	;only allows one to be selected
	;
	Q:'FORM
	S SCRNSIZE=+$G(SCRNSIZE)-1
	S:SCRNSIZE<1 SCRNSIZE=4
	S EXCLUDE=$G(EXCLUDE)
	N COUNT,CNT,PICK,BLK,ARY,NAME
	S ARY="^TMP($J,""FORM BLOCKS"")"
	K @ARY
	S CNT=$$FINDALL ;FORM,EXCLUDE,ARY are inputs to FINDALL
	;
	;if CNT=1 return the only block
	I CNT=1 S NAME=$O(@ARY@("NAME","")) Q $S(NAME'="":$O(@ARY@("NAME",NAME,0)),1:"")
	; 
	;if CNT'=1 loop through the blocks, displaying them to the user and let him choose
AGAIN	;
	S (PICK,NAME)="",COUNT=0
	F  S NAME=$O(@ARY@("NAME",NAME)) Q:(PICK'="")!(NAME="")  D
	.S BLK=0 F  S BLK=$O(@ARY@("NAME",NAME,BLK)) Q:(PICK'="")!('BLK)  D  Q:NAME=""
	..S COUNT=COUNT+1,@ARY@("#",COUNT)=BLK W !,COUNT,"   ",NAME,?38,$E($P($G(^IBE(357.1,BLK,0)),"^",13),1,42)
	..I COUNT#SCRNSIZE=0 S PICK=$$CHOOSE
	I (PICK=""),COUNT,COUNT#SCRNSIZE'=0 S PICK=$$CHOOSE
	I PICK="" K DIR S DIR(0)="Y",DIR("A")="No block selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
	I PICK="?" G AGAIN
	K @ARY
	Q $S((PICK'>0):"",1:PICK)
	;
FINDALL()	;finds all of the blocks on FORM (except the one named EXCLUDE) and puts them on @ARY,returns the cound
	N BLK,COUNT,NODE
	S BLK="",COUNT=0 F  S BLK=$O(^IBE(357.1,"C",FORM,BLK)) Q:'BLK  S NODE=$G(^IBE(357.1,BLK,0)),NAME=$P(NODE,"^") S:(NAME'="")&(NAME'=EXCLUDE)&($P(NODE,"^",2)=FORM) @ARY@("NAME",$$UP^XLFSTR(NAME),BLK)="",COUNT=COUNT+1
	Q COUNT
	;
CHOOSE()	;asks the user to select a blk - @ARY@("#", is the aray of blocks displayed so far(subscripted by the number on the list), @ARY@("NAME", the entire array (subscripted by name,ien)
	;sets NAME to " " and COUNT to 0 if ? is entered - starts display of list over
	N ANS,QUIT,PICK,NEXT1,NEXT2
	S QUIT=0
	F  Q:QUIT  D  D:'QUIT MSG
	.S (PICK,ANS)=""
	.W !,"Choose 1-",COUNT,$S(COUNT<CNT:" or hit RETURN to see more",1:""),": "
	.R ANS:DTIME
	.I '$T!($E(ANS,1)="^") S PICK=-1,QUIT=1 Q
	.I ANS="" S QUIT=1 Q
	.I $E(ANS,1)="?" D HELP Q
	.;
	.;convert to upper case
	.S ANS=$$UP^XLFSTR(ANS)
	.
	.;if user entered a displayed number then he's made his choice
	.I $D(@ARY@("#",ANS)) S PICK=$G(@ARY@("#",ANS)),QUIT=1 Q
	.;
	.;if the user entered an exact name, and the name is unique then he's made his choice
	.S PICK=$O(@ARY@("NAME",ANS,PICK)) I PICK,'$O(@ARY@("NAME",ANS,PICK)) S QUIT=1 Q
	.Q:PICK  ;don't set QUIT=1 because name is not unique
	.;
	.;if the user entered a partial name accept it if there is exactly one match
	.S NEXT1=$O(@ARY@("NAME",ANS)) Q:(NEXT1="")!($E(NEXT1,1,$L(ANS))'=ANS)
	.S NEXT2=$O(@ARY@("NAME",NEXT1)) Q:($E(NEXT2,1,$L(ANS))=ANS)  ;because user did not type in enough to uniquely identify the block
	.;make sure there are not two blocks with the same name - if ok, accept it
	.S PICK=$O(@ARY@("NAME",NEXT1,PICK)) Q:'PICK  I '$O(@ARY@("NAME",NEXT1,PICK)) S QUIT=1 Q
	Q PICK
	;
HELP	;choosing help restarts the display (by setting NAME="")
	W !,"You can choose a block by the number or by it's name.",!
	D PAUSE^IBDFU5
	S QUIT=1,NAME="",PICK="?",COUNT=0
	Q
MSG	;
	W !,"You must enter the number or name of the block!"
	D PAUSE^IBDFU5
	Q

IBDFU9
IBDFU9	;ALB/CJM - ENCOUNTER FORM - post-selection action for package interface file, screen for data qualifiers;OCT 18,1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;; -- Routine Modified in support of DATA CAPTURE project
	;
ASK	;post-slection action for package interface
	N LINE,DA,ANS,TYPE
	Q:DIC["358.6"
	S DA=+Y
	I $G(DA),$D(^IBE(357.6,DA,1)) D
	.S TYPE=$P($G(^IBE(357.6,DA,0)),"^",6)
	.;in the case of reports, the post-selection action is not executed until after the report is created in the setup - so it's not useful, just quit out
	.Q:TYPE=4
	.S TYPE=$S(TYPE=1:"type of data",TYPE=2:"type of data",TYPE=3:"type of data",TYPE=4:"report",1:"package interface")
	.S LINE=0 W ! F  S LINE=$O(^IBE(357.6,DA,1,LINE)) Q:'LINE  W !,$G(^IBE(357.6,DA,1,LINE,0))
	.W !!,"Are you sure this is the right "_TYPE_"?: "
	.R ANS:DTIME
	.I '$T S Y=-1 Q
	.I (ANS["^")!(ANS["?")!(ANS="")!("Yy"'[$E(ANS,1)) S Y=-1
	Q
	;
DQGOOD(PI,QLFR)	;screen for data modifiers
	;
	N NODE
	Q:'$G(PI) 0
	Q:'$G(QLFR) 0
	S NODE=$G(^IBE(357.6,PI,0))
	;
	;for selection interfaces, the list of data qualifiers is kept with the input interface
	I $P(NODE,"^",6)=3 S PI=$P(NODE,"^",13)
	Q:'PI 0
	Q $D(^IBE(357.6,PI,13,"B",QLFR_";IBD(357.98,"))
	;
DTGOOD(PI,TYPE)	;screen for datatypes
	;
	N NODE
	Q:'$G(PI) 0
	Q:'$G(TYPE) 0
	S NODE=$G(^IBE(357.6,PI,0))
	;
	;for selection interfaces, the list of data qualifiers is kept with the input interface
	I $P(NODE,"^",6)=3 S PI=$P(NODE,"^",13)
	Q:'PI 0
	Q $D(^IBE(357.6,PI,13,"B",TYPE_";IBE(359.1,"))

IBDFU91
IBDFU91	;ALB/CJM - ENCOUNTER FORM - transforms needed to validate,display and pass data;AUG 18,1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
OUTPUT(PI,Y)	;xecutes the output transform of the package interface on Y
	;Y should be passed by reference
	;the underlying output transform should set Y="" if the transform can not be made
	;in that case Y is set to "?"
	;
	I $G(PI),$D(Y) X $G(^IBE(357.6,PI,14)) I Y="" S Y="?"
	Q
	;
INPUT(PI,X)	;xecutes the input transform of the package interface on X
	;X should be passed by reference
	;the underlying input transform:
	;       can be interactive if $G(IBDEVICE("LISTMAN"))
	;       should set X to the form needed for passing to the database
	;       X should be killed if it can not be put into the correct form
	;       does not guarantee validity - for example, X could be an inactive code
	;
	I $G(PI),$D(X) X $G(^IBE(357.6,PI,9))
	Q
	;
CHOICE(PI,X)	;executes the selector of the package interface=PI, user input is X
	; -- X should be passed by reference.
	; -- sets IBLABEL,IBID,IBQUAL
	;
	N DIC,DIE,%,%W,%Y,C,DIPGM,DISYS,I,Q,D,D0,DO,DI,DQ,D1,%X,%Y,Y,DIX,DICR
	;execute the selector
	I $G(PI) X $G(^IBE(357.6,PI,17))
	Q
	;
FDCHOICE(PI,X)	;executes the selector of the package interface=PI,X=the user input, then runs it through the input transform for a value that can be passed to the PCE GDI
	; -- X should be passed by reference.
	;
	N DIC,DIE,%,%W,%Y,C,DIPGM,DISYS,I,Q,D,D0,DO,DI,DQ,D1,%X,%Y,Y,DIX,DICR,IBLABEL,IBQUAL,IBID
	I $G(PI) D
	.;execute the selector
	.X $G(^IBE(357.6,PI,17))
	.;the selector actually returns the ID for the selection in the variabel IBID - X is the displayable value, which may be different
	.;I $G(IBID)="" K X Q
	.;pass the selection through the input transform
	.I $D(X),$G(IBID)'="" S X=IBID D INPUT(PI,.X)
	Q
	;
HPTRNS(TYPEDATA,X,IBFORMID)	;used to transform a value read from a hand print field (X) into a value that can be passed to the database
	;TYPEDATA = data type (file 359.1)
	;IBFORMID = id in form tracking,should be passed by reference
	;  available form form tracking:
	;  IBFORMID("DFN")
	;  IBFORMID("APPT")
	;  IBFORMID("CLINIC")
	;  IBFORMID("SOURCE")
	;
	;X = the value that needs to be transformed
	;returns the transformed value
	;returns "" if it can not be put inot the correct form
	;
	;the underlying input transform:
	;       should not be interactive
	;       can use the IBFORMID array
	;       should set X to the form needed for passing to the database
	;       X should be killed if it can not be put into the correct form
	;       does not guarantee validity - for example, X could be an inactive code
	;
	I '$G(TYPEDATA)!'$D(X) I '$D(^IBE(359.1,TYPEDATA,0)) S X=""
	E  X $G(^IBE(359.1,TYPEDATA,1))
	S:'$D(X) X=""
	Q X
	;
VALIDATE(PI,X)	;used to validate the value stored with a selection(file 357.3) 
	;PI is assumed to be a selection type package interface
	;kills X if not valid, but otherwise does not change it
	;pass X by reference
	;the underlying validation transform:
	;    should not be interactive
	;    should kill X if it is not valid
	;
	I X="" K X Q
	I 'PI K X Q
	I '$D(^IBE(357.6,PI,0)) K X Q
	X $G(^IBE(357.6,PI,11))
	Q
	;
HELP(PI)	;writes the help message for the package interface
	;
	I PI W !,?6,$G(^IBE(357.6,PI,10)),!
	I PI D CHOICE(PI,"?")
	Q

IBDFUA
IBDFUA	;ALB/CJM - ENCOUNTER FORM (utilities - IBDFU continued) ;NOV 16,1992
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
PRNTVAR	;defines the screen and graphics variables needed for printing
	;
	D GSET^%ZISS,KILL^%ZISS
	S X="IOINHI;IOINORM;IOUON;IOUOFF"
	D ENDR^%ZISS
	S (IORVON,IORVOFF)=""
	K X
	Q
	;
KPRNTVAR	;kills the variables defined by PRINTVAR (actually, kills all screen paramters)
	;
	D GKILL^%ZISS,KILL^%ZISS
	Q 
	;
GRAPHICS()	; returns1 if graphic mode available with characters needed
	;sets graphics characters to "|" and "_" if graphics mode not available
	;If not a raster device, then returns 0 no matter what
	;
	N GRAPHICS S GRAPHICS=0
	I IBDEVICE("RASTER"),($G(IOG0)'=""),($G(IOG1)'=""),($G(IOVL)'=""),($G(IOHL)'=""),($G(IOBLC)'=""),($G(IOBRC)'=""),($G(IOTLC)'=""),($G(IOTRC)'="") S GRAPHICS=1
	S:IBDEVICE("PCL") GRAPHICS=1
	S:'GRAPHICS (IOVL,IOBLC,IOBRC)="|",(IOHL,IOTRC,IOTLC)="_"
	Q GRAPHICS
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;utilities
	;
DEVICE(LISTMAN,IBDEVICE)	;sets various device parameters
	;LISTMAN=1 if display for the List Manager, 0 otherwise
	;returns IBDEVICE array - pass by reference
	;Also, the required Kernel screen and graphics parameters are defined.
	;
	;IBDEVICE array elements:
	;  RASTER = 1 if IOXY defined and not a crt
	;  CRT= 1 if crt
	;  GRAPHICS=1 if graphic mode available with characters needed.
	;  PCL=1 if the printer language is PCL, version 5 or higher.
	;  SIMPLEX,DUPLEX_LONG,DUPLEX_SHORT are printer control statements for simplex, duplex long-edge binding, duplex short-edge binding - in an encounter form file until added to the TERMINAL TYPE file in future version of KERNEL
	;
	;
	I LISTMAN D  Q
	.S IBDEVICE("LISTMAN")=1
	.S IBDEVICE("CRT")=1
	.S IBDEVICE("PCL")=0
	.S IBDEVICE("GRAPHICS")=0
	.S IBDEVICE("RASTER")=0
	.D NOGRPHCS^IBDFU5
	;
	;not List Manager ->
	;
	S (IBDEVICE("LISTMAN"),IBDEVICE("RASTER"),IBDEVICE("CRT"),IBDEVICE("PCL"))=0
	I $E($G(IOST),1,2)="C-" S IBDEVICE("CRT")=1
	I $G(IOXY)'="" S IBDEVICE("RASTER")=1
	D PRNTVAR
	S (IBDEVICE("SIMPLEX"),IBDEVICE("DUPLEX_LONG"),IBDEVICE("DUPLEX_SHORT"))=""
	I 'IBDEVICE("CRT"),'LISTMAN,$G(IOST(0)) D
	.N TERMINAL,TEMP
	.S TERMINAL=$O(^IBE(357.94,"B",IOST(0),0))
	.I TERMINAL S TERMINAL=$G(^IBE(357.94,TERMINAL,0))
	.S IBDEVICE("PCL")=$S($P(TERMINAL,"^",2)=1:1,1:0)
	.I $P(TERMINAL,"^",3)]"" S TEMP="S IBDEVICE(""SIMPLEX"")="_$P(TERMINAL,"^",3) X TEMP
	.;
	.;do not define duplex mode if simplex not defined
	.Q:IBDEVICE("SIMPLEX")=""
	.I $P(TERMINAL,"^",4)]"" S TEMP="S IBDEVICE(""DUPLEX_LONG"")="_$P(TERMINAL,"^",4) X TEMP
	.I $P(TERMINAL,"^",5)]"" S TEMP="S IBDEVICE(""DUPLEX_SHORT"")="_$P(TERMINAL,"^",5) X TEMP
	;
	S IBDEVICE("GRAPHICS")=$$GRAPHICS
	Q
	;
KILL	;this can be used just before calling List Manager to save space in the symbol table
	;
	;K XQORKBD,VALMKEY,VALMDDF,VALMHDR,%,CTRLCOL,DIC,Y,X,POP,DX,DY,%I,D,ZTSK,DIC,D0,POP,SEL,DIR,DIE,DR,DA,DIK,DD,%DT,%H,IOP,COL,J
	;
	K %,CTRLCOL,DIC,Y,X,POP,DX,DY,%I,D,ZTSK,DIC,D0,POP,SEL,DIR,DIE,DR,DA,DIK,DD,%DT,%H,IOP,COL,J
	Q

IBDFUTI
IBDFUTI	;ALB/AAS - Installation utilitie Re-Compile Templates/x-refs ; 1/31/92
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	; ******* DO NOT MAP THIS ROUTINE *******
	Q
	;
EN	; Entry point to re-compile templates
	; input: IBKIND = OUTPUT or INPUT
	;
	K IBLINE S U="^",$P(IBLINE,"=",81)="",IBMAX=^DD("ROU")
	G ENQ:'$D(IBKIND),ENQ:"^OUTPUT^INPUT^"'[(U_IBKIND_U)
	I IBKIND="OUTPUT" S IBFILE="^DIPT",IBROU="EN^DIPZ"
	I IBKIND="INPUT" S IBFILE="^DIE",IBROU="EN^DIEZ"
	W !,IBLINE,!?20,"Recompilation of '",IBKIND,"' Templates",!,IBLINE
	;
	S IBDX="IBCzzz"
	F IBI=1:1 S IBDX=$O(@IBFILE@("B",IBDX)) Q:IBDX=""!($E(IBDX,1,3)'="IBD")  S Y=+$O(^(IBDX,0)) D
	.I $D(@IBFILE@(Y,"ROUOLD")),^("ROUOLD")]"",$D(^(0)) S (IBEMP,Y)=Y,X=$P(^("ROUOLD"),"^"),IB0=^(0) D COMP
	;
ENQ	K IBROU,IB0,IBDX,IBI,IBMAX,IBEMP,IBFILE,IBI,IBLINE Q
	;
COMP	; re-compile
	;
	;
	S DMAX=IBMAX D @IBROU W !!,IBLINE
COMPQ	Q
	;
ALL	; compile templates and x-refs
	S DIR(0)="Y",DIR("A")="Re-compile all AICS 'IBD' templates and cross references"
	S DIR("?",1)="Yes to re-compile",DIR("?",2)="No  to stop recompilation process",DIR("?")=" "
	D ^DIR K DIR G ALLQ:'Y
	D DIEZ W !!
	D DIPZ W !!
	D DIKZ
	W !!,"...Done.",!!,"NOTE: Recompilation should be performed on ALL systems."
ALLQ	K A,C,L,O,X1,DQ,DIE,DMAX,DIEZ,DIEZDUP,DK,DR Q
	;
DIEZ	; -- re-compile all IBD 'edit' templates
	S IBKIND="INPUT" D EN K IBKIND Q
	;
DIPZ	; -- re-compile all IB 'print' templates
	S IBKIND="OUTPUT" D EN K IBKIND Q
	;
DIKZ	; -- compile x-refs
	W !!,">>> Compiling cross references for  BILL/CLAIMS, INTEGRATED BILLING, and ENCOUNTER FORM files:"
	F IBN=357,357.1,357.2,357.3,357.4,357.5 S N=IBN W ! I $D(^DD(+N,0,"DIK"))#2 S X=^("DIK"),Y=+N,DMAX=^DD("ROU") W !,"** File "_IBN_" **",! D EN^DIKZ
	K IBN,N,DMAX
	Q

IBDFUTL
IBDFUTL	;ALB/MAF - Maintenance Utility Routine - APR 20 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;  -- Set up variables for display by clinic/form/group
OUT	S IBDFL=0 W !!,"Display output by: CLINICS// " D ZSET1 S X="" R X:DTIME G QUIT:X="^"!('$T) I X=""!("Cc"[X) S X="1"
	S X=$S("Gg"[X:2,"Ff"[X:3,"Ss"[X:4,1:X)
	I X="?" D ZSET1,HELP1 G OUT
	S IBDFSRT=$E(X) D IN^DGHELP W ! I %=-1 D ZSET1,HELP1 G OUT
	S IBDFDIS=$S(IBDFSRT=1:"CLIN",IBDFSRT=2:"GROUP",IBDFSRT=3:"FORM",1:"QUIT")
	D @(IBDFDIS) S:Y=-1 IBDFNCNG=1 G:Y=-1 QUIT
	;
	;
OUT1	;  -- Ask for what type of package interface
	S DIC="^IBE(357.6,",DIC(0)="AEMN",DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1",DIC("A")="Select Type of Code to Display: " D ^DIC K DIC G QUIT:Y<0
	S IBDFINT=+Y
	I '$D(IBDF1) K XQORS,VALMEVL D EN^VALM("IBDF UTIL PRIMARY SCREEN")
	I $D(IBDF1) D KILL,INIT S VALMBCK="R",VALMBG=1
	Q
	;
	;
HDR	; -- header code
	S VALMHDR(1)="This screen lists Invalid/Inactive codes on  Encounter Forms."
	Q
	;
	;  -- Set up list
INIT	D FULL^VALM1 S (IBDCNT,IBDCNT1,VALMCNT)=0
	K ^TMP("CPT",$J),^TMP("CPTIDX",$J) D KILL^VALM10()
	S IBDFCNT1=0 D @(IBDFDIS_"1^IBDFUTL1")
	I '$D(^TMP("CPT",$J)) D NUL
	Q
	;
	;  -- Ask for clinics one/many/all
CLIN	S VAUTVB="VAUTC",DIC="^SC(",DIC("S")="I $P(^(0),U,3)=""C""",VAUTSTR="Clinic",VAUTNI=2 D FIRST^VAUTOMA K DIC S:Y=-1 IBDFL=1 Q:IBDFL
	Q
	;
	;  -- Ask for forms one/many/all
FORM	S VAUTVB="VAUTF",DIC="^IBE(357,",VAUTSTR="Form",VAUTNI=2 D FIRST^VAUTOMA S:Y=-1 IBDFL=1 Q:IBDFL
	Q
	;
	;  -- Ask for clinic groups one/many/all
GROUP	S VAUTVB="VAUTG",DIC="^IBD(357.99,",VAUTSTR="Clinic Group",VAUTNI=2 D FIRST^VAUTOMA S:Y=-1 IBDFL=1 Q:IBDFL
	Q
	;
	; -- Ask for divisions one/many/all
DIV	S IBDFL=0 D DIVISION^VAUTOMA
	S:Y=-1 IBDFL=1 Q:IBDFL
	Q
	;  -- Help for display choices
HELP1	W !!,"Choose a number or first initial :" F K=2:1:4 W !?15,$P(Z,"^",K)
	W ! Q
	;
	;  -- Listing of selections
ZSET1	S Z="^1 [C]LINICS (Individual)^2 [G]ROUPS (CLINIC)^3 [F]ORMS^" Q
	;
	;
QUIT	;  -- Kill variables and reset to last display if no change has been taken place.
	I $D(IBDF1) S IBDFDIS=IBDFDIS1,IBDFINT=IBDFINT1
	I '$D(IBDF1) G EXIT
	D KILL,INIT K IBDFNCNG S VALMBCK="R",VALMBG=1
	Q
	;
	;
KILL	;  -- Kill extra array variables
	N IBDFXX
	S IBDFXX=$S(IBDFDIS="FORM":"VAUTF",IBDFDIS="GROUP":"VAUTG",1:"VAUTC")
	I IBDFXX="VAUTF" K VAUTG,VAUTC,^TMP("CLN",$J),^TMP("CLN1",$J),^TMP("GRP",$J),^TMP("GRP1",$J)
	I IBDFXX="VAUTC" K VAUTG,VAUTF,^TMP("FRM",$J),^TMP("FRM1",$J),^TMP("GRP1",$J)
	I IBDFXX="VAUTG" K VAUTC,VAUTF,^TMP("FRM",$J),^TMP("FRM1",$J),^TMP("CLN",$J),^TMP("CLN1",$J)
	Q
	;
	;
EXIT	;  -- Code executed at action exit
	K IBDFDIS,IBDFINT,VAUTC,VAUTF,VAUTG,IBDFINT1,IBDFDIS1,^TMP("CLN",$J)
EXIT1	K DIC,IBDBLK,IBDCLN,IBDCLNM,IBDCNODE,IBDCNT,IBDCNT1,IBDF,IBDFBK,IBDFCIFN,IBDFCLIN,IBDFL,IBDFLG,IBDFN,IBDFNAME,IBDFNM,IBDFNODE,IBDFORM1,IBDFRM,IBDFSEL,IBDFSRT,IBDFTMP,IBDFVAL,IBDFX,IBDORM,IBDVAL,IBDVAL1,IBDFCNT1,Z,IBDFRNM
	K IBCLN,IBDFCLN,IBDFCLNM,IBDFDIV,IBDFGIFN,IBDFGN,IBDFGNM,IBDIV,IBDNAM,IBDNAME,IEN,^TMP("IBDF",$J),^TMP("UTIL",$J),^TMP("CPT",$J),^TMP("CPTIDX",$J),DIVISION,IBDF Q  ;^TMP("CLN1",$J),^TMP("FRM1",$J),^TMP("GRP1",$J) Q
	;
	;
HLP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
	;
EXP	; -- expand code
	Q
NUL	; -- NULL MESSAGE
	S ^TMP("CPT",$J,1,0)=" ",^TMP("CPT",$J,2,0)="There are no invalid/inactive codes on any forms.",^TMP("CPTIDX",$J,1)=1,^TMP("CPTIDX",$J,2)=2
	Q

IBDFUTL1
IBDFUTL1	;ALB/MAF - Maintenance Utility cont. - 4 20 95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
SETSTR(S,V,X,L)	; -- insert text(S) into variable(V)
	;    S := string
	;    V := destination
	;    X := @ col X
	;    L := # of chars
	;
	Q $E(V_$J("",X-1),1,X-1)_$E(S_$J("",L),1,L)_$E(V,X+L,999)
	;
	;
SETARR	;  -- Set up Listman array
	S IBDCNT1=IBDCNT1+1
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBDFVAL=$J(IBDCNT1_")",5)
	S X=$$SETSTR^VALM1(IBDFVAL,X,1,5)
	S IBDFVAL=IBDFX
	S X=$$SETSTR^VALM1(IBDFVAL,X,7,8)
	S IBDFVAL=$P(IBDFTMP,"^",3)
	S X=$$SETSTR^VALM1(IBDFVAL,X,17,15)
	S IBDFVAL=$P(^IBE(357.1,IBDFBLK,0),"^",1)
	S X=$$SETSTR^VALM1(IBDFVAL,X,34,14)
	S IBDFVAL=$P(^IBE(357,IBDFORM1,0),"^",1)
	S X=$$SETSTR^VALM1(IBDFVAL,X,50,14)
	I $D(VAUTC)!($D(VAUTG)) S IBDFVAL=$P(IBDFTMP,"^",6) S X=$$SETSTR^VALM1(IBDFVAL,X,66,14)
	;
	;
TMP	; -- Set up TMP Array
	S ^TMP("CPT",$J,IBDCNT,0)=$$LOWER^VALM1(X),^TMP("CPT",$J,"IDX",VALMCNT,IBDCNT1)=""
	S ^TMP("CPTIDX",$J,IBDCNT1)=VALMCNT_"^"_IBDFX_"^"_$P(IBDFTMP,"^",4)_"^"_$P(IBDFTMP,"^",5)_"^"_$P(IBDFTMP,"^",1)_"^"_$P(IBDFTMP,"^",2)
	Q
	;
	;
SET	;  -- Loop thru to see if codes are valid
	F IBDFBLK=0:0 S IBDFBLK=$O(^IBE(357.1,"C",IBDFORM,IBDFBLK)) Q:'IBDFBLK  D
	.F IBDFLST=0:0 S IBDFLST=$O(^IBE(357.2,"C",IBDFBLK,IBDFLST)) Q:'IBDFLST  S IBDFNODE=$G(^IBE(357.2,IBDFLST,0)) I $P(IBDFNODE,"^",11)=IBDFINT D
	..F IBDFSEL=0:0 S IBDFSEL=$O(^IBE(357.3,"C",IBDFLST,IBDFSEL)) Q:'IBDFSEL  S IBDFX=$G(^IBE(357.3,IBDFSEL,0)) I $P(IBDFX,"^",2)']"" D
	...S (X,IBDFX)=$P(IBDFX,"^",1)
	...X $G(^IBE(357.6,IBDFINT,11))
	...I '$D(X) S ^TMP("UTIL",$J,IBDFNAME,IBDFX,$P(^IBE(357,IBDFORM,0),"^",1),$P(^IBE(357.1,IBDFBLK,0),"^",1))=IBDFORM_"^"_IBDFBLK_"^"_$S(Y]"":Y,1:"INVALID")_"^"_IBDFLST_"^"_IBDFSEL_"^"_$S($D(VAUTC):IBDFNAME,$D(VAUTG):IBDFCLNM,1:"")
	Q
	;
	;
	;  -- Set up alphabetical listing
SET1	S (IBDFORM1,IBDFBLK,IBDFLG,IBDFX,IBDFNAME,IBDORM,IBDBLK)=0
	F IBDFNM=0:0 S IBDFNAME=$O(^TMP("UTIL",$J,IBDFNAME)) Q:IBDFNAME']""  S IBDFX="" F  S IBDFX=$O(^TMP("UTIL",$J,IBDFNAME,IBDFX)) D:(IBDFX="")&($D(VAUTF)) CLINICS^IBDFUTL2 Q:IBDFX=""  D
	.F IBDFRM=0:0 S IBDORM=$O(^TMP("UTIL",$J,IBDFNAME,IBDFX,IBDORM)) Q:IBDORM']""  F IBDFBK=0:0 S IBDBLK=$O(^TMP("UTIL",$J,IBDFNAME,IBDFX,IBDORM,IBDBLK)) Q:IBDBLK']""  D
	..S IBDFTMP=^TMP("UTIL",$J,IBDFNAME,IBDFX,IBDORM,IBDBLK),IBDFORM1=$P(IBDFTMP,"^",1),IBDFBLK=$P(IBDFTMP,"^",2) D:'$D(IBDF(IBDFNAME)) HEADER^IBDFUTL2 D SETARR
	Q
	;
	;
CLIN1	;  -- Sort Display by clinic
	N IBDFBLK,IBDFLST,IBDFORM,VAUTF
	I VAUTC=1 F X=0:0 S X=$O(^SC(X)) Q:'X  I $D(^SC(X,0)) S ^TMP("CLN",$J,X)=$P(^SC(X,0),"^",1)
	I VAUTC=0 K ^TMP("CLN",$J) F IBDFCLIN=0:0 S IBDFCLIN=$O(VAUTC(IBDFCLIN)) Q:'IBDFCLIN  S X=$G(VAUTC(IBDFCLIN)) S ^TMP("CLN",$J,IBDFCLIN)=X
	I '$D(IBDFNCNG) K ^TMP("CLN1",$J)
	F IBDFCLIN=0:0 S IBDFCLIN=$O(^TMP("CLN",$J,IBDFCLIN)) Q:'IBDFCLIN  S X=$G(^TMP("CLN",$J,IBDFCLIN)) S ^TMP("CLN1",$J,X)=IBDFCLIN
	S IBDCLNM=0 F IBDCLN=0:0 S IBDCLNM=$O(^TMP("CLN1",$J,IBDCLNM)) Q:IBDCLNM']""  S IBDFCLIN=^TMP("CLN1",$J,IBDCLNM) S IBDFCIFN=$O(^SD(409.95,"B",IBDFCLIN,0)) S IBDCNODE=$G(^SD(409.95,+IBDFCIFN,0)),IBDFNAME=IBDCLNM I $D(IBDCNODE) D
	.F IBDFN=2:1:9 S IBDFORM=$P(IBDCNODE,"^",IBDFN) I IBDFORM D SET
	D SET1 Q
	;
	;
FORM1	;  -- Sort Display by form
	N IBDFBLK,IBDFLST,IBDFORM
	I VAUTF=1 S IBDFRNM=0 F IBDFRM=0:0 S IBDFRNM=$O(^IBE(357,"B",IBDFRNM)) Q:IBDFRNM']""  F IBDFORM=0:0 S IBDFORM=$O(^IBE(357,"B",IBDFRNM,IBDFORM)) Q:'IBDFORM  S IBDFNAME=IBDFRNM D SET
	I '$D(IBDFNCNG) K ^TMP("FRM1",$J)
	I VAUTF=0 F IBDFORM=0:0 S IBDFORM=$O(VAUTF(IBDFORM)) Q:'IBDFORM  S X=$G(VAUTF(IBDFORM)) S ^TMP("FRM1",$J,X)=IBDFORM
	I VAUTF=0 S IBDFRNM=0 F IBDFRM=0:0 S IBDFRNM=$O(^TMP("FRM1",$J,IBDFRNM)) Q:IBDFRNM']""  S IBDFORM=^TMP("FRM1",$J,IBDFRNM),IBDFNAME=IBDFRNM D SET
	D SET1
	Q
	;
	;
GROUP1	;  -- Sort Display by clinic group
	N IBDFBLK,IBDFLST,IBDFORM,VAUTF
	I VAUTG=1 S IBDFGNM=0 F IBDFGN=0:0 S IBDFGNM=$O(^IBD(357.99,"B",IBDFGNM)) Q:IBDFGNM']""  F IBDFGIFN=0:0 S IBDFGIFN=$O(^IBD(357.99,"B",IBDFGNM,IBDFGIFN)) Q:'IBDFGIFN  S ^TMP("GRP1",$J,IBDFGNM)=IBDFGIFN
	I VAUTG=0,'$D(IBDFNCNG) K ^TMP("GRP1",$J)
	I VAUTG=0 F IBDFGIFN=0:0 S IBDFGIFN=$O(VAUTG(IBDFGIFN)) Q:'IBDFGIFN  S ^TMP("GRP1",$J,VAUTG(IBDFGIFN))=IBDFGIFN
	S IBDFGNM=0 F IBDFGN=0:0 S IBDFGNM=$O(^TMP("GRP1",$J,IBDFGNM)) Q:IBDFGNM']""  S IBDFGIFN=^TMP("GRP1",$J,IBDFGNM) D
	.S IEN=0 F  S IEN=$O(^IBD(357.99,IBDFGIFN,10,IEN)) Q:'IEN  S IBCLN=+$G(^IBD(357.99,IBDFGIFN,10,IEN,0)) S:$D(^SC(IBCLN,0)) ^TMP("IBDF",$J,"C",IBDFGNM,$P(^SC(IBCLN,0),"^",1))=IBCLN
	.S IEN=0 F  S IEN=$O(^IBD(357.99,IBDFGIFN,11,IEN)) Q:'IEN  S IBDIV=+$G(^IBD(357.99,IBDFGIFN,11,IEN,0)) S:IBDIV ^TMP("IBDF",$J,"D",IBDFGNM,IBDIV)=""
	D:$D(^TMP("IBDF",$J,"D")) ENDV^IBDFUTL2
	S IBDFGNM=0 F IBDFGN=0:0 S IBDFGNM=$O(^TMP("IBDF",$J,"C",IBDFGNM)) Q:IBDFGNM']""  S IBDFCLNM=0 F IBDFCLN=0:0 S IBDFCLNM=$O(^TMP("IBDF",$J,"C",IBDFGNM,IBDFCLNM)) Q:IBDFCLNM']""  D
	.S IBDFCLIN=$G(^TMP("IBDF",$J,"C",IBDFGNM,IBDFCLNM)),IBDFCIFN=$O(^SD(409.95,"B",IBDFCLIN,0)) S IBDCNODE=$G(^SD(409.95,+IBDFCIFN,0)) I $D(IBDCNODE) S IBDFNAME=IBDFGNM F IBDFN=2:1:9 S IBDFORM=$P(IBDCNODE,"^",IBDFN) I IBDFORM D SET
	D SET1 Q

IBDFUTL2
IBDFUTL2	;ALB/MAF - MAINTENANCE UTILITY CONT. - 4/24/95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
ENDV	;  -- Entire divisions were choosen, find all clinics (with encounter forms defined)
	N IBCLN,IBDIV,NODE,DIVISION,ALL
	;  -- Make a list of the divisions chosen
	S IBDFGNM=0 F IBDFGN=0:0 S IBDFGNM=$O(^TMP("IBDF",$J,"D",IBDFGNM)) Q:IBDFGNM']""  S IBDIV=0 F  S IBDIV=$O(^TMP("IBDF",$J,"D",IBDFGNM,IBDIV)) Q:'IBDIV  S DIVISION(IBDIV,IBDFGNM)=""
	;
	;  -- Loop through all the clinics finding ones in selected divisions
	 S IBCLN="" F  S IBCLN=$O(^SC(IBCLN)) Q:IBCLN=""  D
	.S NODE=$G(^SC(IBCLN,0))
	.S IBDIV=$P(NODE,"^",15)
	.I IBDIV Q:'$D(DIVISION(IBDIV))
	.;  -- Check that location is a clinic
	.Q:$P(NODE,"^",3)'="C"
	.;  -- It passed all the tests, put it on the list
	.S IBDNAM=0 F IBDFDIV=0:0 S IBDFDIV=$O(DIVISION(IBDFDIV)) Q:'IBDFDIV  I IBDFDIV=IBDIV F IBDNAME=0:0 S IBDNAM=$O(DIVISION(IBDFDIV,IBDNAM)) Q:IBDNAM']""  S ^TMP("IBDF",$J,"C",IBDNAM,$P(^SC(IBCLN,0),"^",1))=IBCLN
	;
	;  -- Don't need list of divisions anymore
	K ^TMP("IBDF",$J,"D")
	Q
	;
	;
CLINICS	;  -- Clinics that use the form
	N IBDFFLG
	S IBDFFLG=0 F IDX="C","D","E","F","G","H","I","J" D
	.S SETUP="" F  S SETUP=$O(^SD(409.95,IDX,IBDFORM1,SETUP)) Q:'SETUP  D
	..S CLINIC=$P($G(^SD(409.95,SETUP,0)),"^",1)
	..Q:'CLINIC
	..S NAME=$P($G(^SC(CLINIC,0)),"^",1)
	..Q:NAME=""
	..S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	..D:'IBDFFLG TMP1 S:IBDFFLG X="" S X=$$SETSTR^VALM1($E(NAME,1,20),X,66,14) D TMP^IBDFUTL1,CNTRL^VALM10(VALMCNT,37,29,IOINHI,IOINORM,0) S IBDFFLG=1
	Q
	;
	;
TMP1	;  -- Text display set up of TMP array
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=$$SETSTR^VALM1(" ",X,1,80) D TMP^IBDFUTL1
	S X="",X=$$SETSTR^VALM1("CLINICS USING THIS FORM ARE:           ",X,37,29)
	Q
	;
	;
HEADER	;  -- Set up header line for the display
	S IBDCNT1=IBDCNT1+1
	S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=""
	S IBDF(IBDFNAME)=IBDCNT_"^"_IBDFORM1
	S X=$$SETSTR^VALM1(" ",X,1,3) D TMP^IBDFUTL1
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S IBDVAL=IBDFNAME
	S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR^VALM1(" ",X,1,IBDVAL1)
	S X=$$SETSTR^VALM1(IBDVAL,X,IBDVAL1,25) D TMP^IBDFUTL1,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
	S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
	S X=$$SETSTR^VALM1(" ",X,1,3) D TMP^IBDFUTL1
	S IBDCNT1=IBDCNT1-1
	Q
	;
	;
JUMP	; -- Jump action to display a specific clinic group on the screen.
	D FULL^VALM1
	I $D(XQORNOD(0)),$P(XQORNOD(0),"^",4)]"" S X=$P(XQORNOD(0),"^",4) S X=$P(X,"=",2) I X]"" D:X?1.6N JSEL S DIC=$S($D(VAUTF):"^IBE(357,",$D(VAUTG):"^IBD(357.99,",1:"^SC("),DIC(0)="QEZ" D ^DIC K DIC G:Y<0 JMP S Y=+Y D JUMP1 Q
JMP	S DIC=$S($D(VAUTF):"^IBE(357,",$D(VAUTG):"^IBD(357.99,",1:"^SC("),DIC(0)="AEMN",DIC("A")="Select "_$S($D(VAUTF):"Form",$D(VAUTG):"Clinic Group",1:"Clinic")_" you wish to move to: "
	S:$D(VAUTC) DIC("S")="I $P(^SC(+Y,0),U,3)=""C""" D ^DIC K DIC
	I X["^" S VALMBG=1,VALMBCK="R" Q
	;
	;
JUMP1	I Y<0 G JUMP
	N IBDFCAT
	S IBDFCAT=$S($D(VAUTF):$P(^IBE(357,+Y,0),"^",1),$D(VAUTG):$P(^IBD(357.99,+Y,0),"^",1),1:$P(^SC(+Y,0),"^",1))
	I '$D(IBDF(IBDFCAT)) W !!,"There is no data listed for this Clinic Group" G JMP
	S VALMBG=+IBDF(IBDFCAT) S VALMBCK="R" Q
	Q
	;
	;
JSEL	; -- Convert number selected to name
	S IBDVALM=X I $D(^TMP("CGIDX",$J,IBDVALM)) S X=$P(^TMP("CGIDX",$J,IBDVALM),"^",2),X=$P(^IBD(357.99,X,0),"^",1)
	Q
	;
	;
CHGLST	;  -- Code to change list display
	D FULL^VALM1
	S IBDFDIS1=IBDFDIS,IBDFINT1=IBDFINT
	D EXIT1^IBDFUTL,OUT^IBDFUTL
	Q
	;
	;
DELETE	;  -- Delete invalid code from the selection list/block
	N IBDFVALM,VALMY,IBBLK,IBFORM,DA
	S VALMBCK=""
	D SEL^VALM2 G REP:'$O(VALMY(0)) S IBDFVALM=0
	D FULL^VALM1 S VALMBCK="R"
	F IBDFVALM=0:0 S IBDFVALM=$O(VALMY(IBDFVALM)) Q:IBDFVALM']""  S DA=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",4) I DA]"" S IBFORM=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",5),IBBLK=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",6) D
	.S DIK="^IBE(357.3,",DA=DA D ^DIK K DIK D BLKCHNG^IBDF19(IBFORM,IBBLK)
	K IBDF,^TMP("UTIL",$J)
	;
	;  -- Redo list
REP	K IBDF D INIT^IBDFUTL S VALMBG=1,VALMBCK="R"
	Q

IBDFUTL3
IBDFUTL3	;ALB/MAF - MAINTENANCE UTILITY CONT. - 4/24/95
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
REPLACE	;  -- Replace invalid code with another valid code... it will be in
	;     the same place as the old invalid code.
	N IBDFVALM,VALMY,IBBLK,IBDFSLC,IBDFSLC1,IBDFSLC2,IBFORM,IBGRP,IBLIST,DA,IBSEL,ORDER,IEN
	S VALMBCK=""
	D SEL^VALM2 G REP:'$O(VALMY(0)) S IBDFVALM=0
	D FULL^VALM1 S VALMBCK="R"
	F IBDFVALM=0:0 S IBDFVALM=$O(VALMY(IBDFVALM)) Q:IBDFVALM']""  S (IBDFSEL,DA)=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",4) I DA]"" S IBDFSLC=$G(^IBE(357.3,DA,0)),IBDFSLC1=$G(^IBE(357.3,DA,1,1,0)),IBDFSLC2=$G(^IBE(357.3,DA,1,2,0)) D
	.S IBFORM=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",5)
	.S IBGRP=$P(IBDFSLC,"^",4)
	.S IBLIST=$P(IBDFSLC,"^",3)
	.S ORDER=$P(IBDFSLC,"^",5)
	.S IBBLK=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",6)
	D REPLC(IBLIST,IBGRP,ORDER,.IBSEL,IBBLK,IBFORM)
	K IBDF,^TMP("UTIL",$J) D INIT^IBDFUTL S VALMBCK="R" Q
	;
	;
REPLC(IBLIST,IBGRP,ORDER,IBSEL,IBBLK,IBFORM)	;allows the user to add a selection to the selection group for replacement - returns 0 if it was done, 1 otherwise
	N SUB,IBRTN
	;
	Q:'$$FORMDSCR^IBDFU1C(.IBFORM)
	Q:$$BLKDESCR^IBDFU1B(.IBBLK) 1
	Q:$$LSTDESCR^IBDFU1(.IBLIST) 1
	S IBRTN=IBLIST("RTN")
	D RTNDSCR^IBDFU1B(.IBRTN)
	N QUIT S QUIT=0
	I IBRTN("ACTION")'=3 D NOGOOD^IBDF4 Q 1
	K @IBRTN("DATA_LOCATION")
	I '$$DORTN^IBDFU1B(.IBRTN) D NOGOOD^IBDF4 Q 1
	I '$D(@IBRTN("DATA_LOCATION")) Q
	D ADDREC^IBDF4(.QUIT,ORDER,.IBSEL) ;edits and adds the selection
	K @IBRTN("DATA_LOCATION")
	;  -- If a selection has been chosen,  the old node is killed off and
	;     the block/selection list is updated.
	I QUIT=0 S DA=IBDFSEL,DIK="^IBE(357.3," D ^DIK K DIK D BLKCHNG^IBDF19(IBFORM,IBBLK)
	Q
REP	K IBDF D INIT^IBDFUTL S VALMBG=1,VALMBCK="R"
	Q

IBDIN001
IBDIN001	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(43)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(43,0,"GL")
	;;=^DG(43,
	;;^DIC("B","MAS PARAMETERS",43)
	;;=
	;;^DIC(43,"%D",0)
	;;=^^8^8^2940331^^^^
	;;^DIC(43,"%D",1,0)
	;;=This file contains the site specific parameters which are used by
	;;^DIC(43,"%D",2,0)
	;;=the Admission, Discharge and Transfer (ADT) modules.  The parameters
	;;^DIC(43,"%D",3,0)
	;;=are set by using the 'DGPAR' routine or the 'ADT Parameters' menu
	;;^DIC(43,"%D",4,0)
	;;=option.  The parameters are used to identify such things as your
	;;^DIC(43,"%D",5,0)
	;;=facility hemodialysis unit, your admission/discharge/transfer types,
	;;^DIC(43,"%D",6,0)
	;;=your divisions (if multi-division facility) and the devices to which
	;;^DIC(43,"%D",7,0)
	;;=you desire your 10-10's, routing slips, etc., printed to.  The ADT
	;;^DIC(43,"%D",8,0)
	;;=parameters must be set prior to running ADT.
	;;^DD(43,0)
	;;=FIELD^^1000.11^157
	;;^DD(43,0,"DDA")
	;;=N
	;;^DD(43,0,"DT")
	;;=2940504
	;;^DD(43,0,"IX","B",43,.01)
	;;=
	;;^DD(43,0,"NM","MAS PARAMETERS")
	;;=
	;;^DD(43,.01,0)
	;;=ONE^RNJ1,0^^0;1^K:+X'=X!(X>1)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(43,.01,.1)
	;;=
	;;^DD(43,.01,1,0)
	;;=^.1
	;;^DD(43,.01,1,1,0)
	;;=43^B
	;;^DD(43,.01,1,1,1)
	;;=S ^DG(43,"B",$E(X,1,30),DA)=""
	;;^DD(43,.01,1,1,2)
	;;=K ^DG(43,"B",$E(X,1,30),DA)
	;;^DD(43,.01,3)
	;;=TYPE A WHOLE NUMBER BETWEEN 0 AND 1
	;;^DD(43,.01,12)
	;;=TEST FOR ACTIVE TRANSFERS
	;;^DD(43,.01,12.1)
	;;=S DIC("S")="I $P(^(0),U,3)"
	;;^DD(43,.01,12.2)
	;;=I $P(^(0),"^",3)
	;;^DD(43,.01,21,0)
	;;=^^2^2^2920212^
	;;^DD(43,.01,21,1,0)
	;;='One' designates the 'one' MAS Parameter.  There can only be one
	;;^DD(43,.01,21,2,0)
	;;=set of parameters.
	;;^DD(43,.01,"DT")
	;;=2860415
	;;^DD(43,47,0)
	;;=PRINT ENCOUNTER FORM AT REG.^S^0:NO;1:YES;^0;47^Q
	;;^DD(43,47,21,0)
	;;=^^3^3^2960403^^^^
	;;^DD(43,47,21,1,0)
	;;=Answering "YES" will have the prompt Print Encounter Form be
	;;^DD(43,47,21,2,0)
	;;=asked at Registration.  If the encounter form is said to be 
	;;^DD(43,47,21,3,0)
	;;=printed,  the clinic(s) to print the encounter forms will be asked.
	;;^DD(43,47,23,0)
	;;=^^1^1^2960403^^^^
	;;^DD(43,47,23,1,0)
	;;= 
	;;^DD(43,47,"DT")
	;;=2960205
	;;^DD(43,48,0)
	;;=DEFAULT EF PRINTER^FX^^0;48^S L=X,X=$P(X,";",1),DIC=3.5,DIC(0)="QMEZ" D ^DIC K:Y'>0!(X=" ") X S:$D(X) X=$P(Y(0),U,1)_$S(L[";":";"_$P(L,";",2,99),1:"") S DIC=$S($D(DIE):DIE,1:DIC) K L
	;;^DD(43,48,3)
	;;=Answer must be 1-30 characters in length.
	;;^DD(43,48,4)
	;;=S DIC=3.5,DIC(0)="EM",X="?" D ^DIC S DIC=DIE
	;;^DD(43,48,21,0)
	;;=^^3^3^2960403^^^^
	;;^DD(43,48,21,1,0)
	;;=This field contains the name of the default
	;;^DD(43,48,21,2,0)
	;;=printer that will print encounter forms at
	;;^DD(43,48,21,3,0)
	;;=registration.
	;;^DD(43,48,23,0)
	;;=^^5^5^2960403^^^^
	;;^DD(43,48,23,1,0)
	;;= 
	;;^DD(43,48,23,2,0)
	;;= 
	;;^DD(43,48,23,3,0)
	;;= 
	;;^DD(43,48,23,4,0)
	;;= 
	;;^DD(43,48,23,5,0)
	;;= 
	;;^DD(43,48,"DT")
	;;=2960122

IBDIN002
IBDIN002	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357,0,"GL")
	;;=^IBE(357,
	;;^DIC("B","ENCOUNTER FORM",357)
	;;=
	;;^DIC(357,"%D",0)
	;;=^^9^9^2960402^^^^
	;;^DIC(357,"%D",1,0)
	;;=Warning: Do Not Re-Index this file.  If this file should accidentally
	;;^DIC(357,"%D",2,0)
	;;=         be re-indexed, use the option to Recompile All Forms.  This will
	;;^DIC(357,"%D",3,0)
	;;=         correct any printing problems that might occur.
	;;^DIC(357,"%D",4,0)
	;;= 
	;;^DIC(357,"%D",5,0)
	;;=This file contains the descriptive information about an encounter form.  An
	;;^DIC(357,"%D",6,0)
	;;=encounter form is composed of many encounter form blocks.  Encounter form
	;;^DIC(357,"%D",7,0)
	;;=blocks contain all the data and lists that appear on the form.  The data
	;;^DIC(357,"%D",8,0)
	;;=from this file along with the other encounter form files is used to design
	;;^DIC(357,"%D",9,0)
	;;=and print encounter forms.
	;;^DD(357,0)
	;;=FIELD^^.17^17
	;;^DD(357,0,"DDA")
	;;=N
	;;^DD(357,0,"DIK")
	;;=IBDX0
	;;^DD(357,0,"DIKOLD")
	;;=IBDX0
	;;^DD(357,0,"DT")
	;;=2951024
	;;^DD(357,0,"ID",.03)
	;;=W "   ",$P(^(0),U,3)
	;;^DD(357,0,"IX","AB",357,.01)
	;;=
	;;^DD(357,0,"IX","AC",357,.01)
	;;=
	;;^DD(357,0,"IX","ADEF",357,.13)
	;;=
	;;^DD(357,0,"IX","AG",357,.01)
	;;=
	;;^DD(357,0,"IX","AT",357,.01)
	;;=
	;;^DD(357,0,"IX","AU",357,.01)
	;;=
	;;^DD(357,0,"IX","B",357,.01)
	;;=
	;;^DD(357,0,"IX","C",357,.07)
	;;=
	;;^DD(357,0,"IX","D",357,.04)
	;;=
	;;^DD(357,0,"NM","ENCOUNTER FORM")
	;;=
	;;^DD(357,0,"PT",357.09,.04)
	;;=
	;;^DD(357,0,"PT",357.1,.02)
	;;=
	;;^DD(357,0,"PT",357.95,.21)
	;;=
	;;^DD(357,0,"PT",359,.01)
	;;=
	;;^DD(357,0,"PT",359,.02)
	;;=
	;;^DD(357,0,"PT",409.95,.02)
	;;=
	;;^DD(357,0,"PT",409.95,.03)
	;;=
	;;^DD(357,0,"PT",409.95,.04)
	;;=
	;;^DD(357,0,"PT",409.95,.05)
	;;=
	;;^DD(357,0,"PT",409.95,.06)
	;;=
	;;^DD(357,0,"PT",409.95,.07)
	;;=
	;;^DD(357,0,"PT",409.95,.08)
	;;=
	;;^DD(357,0,"PT",409.95,.09)
	;;=
	;;^DD(357,.01,0)
	;;=NAME^RFX^^0;1^S X=$$UP^XLFSTR(X) K:$L(X)>30!($L(X)<3) X
	;;^DD(357,.01,1,0)
	;;=^.1
	;;^DD(357,.01,1,1,0)
	;;=357^B
	;;^DD(357,.01,1,1,1)
	;;=S ^IBE(357,"B",$E(X,1,30),DA)=""
	;;^DD(357,.01,1,1,2)
	;;=K ^IBE(357,"B",$E(X,1,30),DA)
	;;^DD(357,.01,1,2,0)
	;;=357^AT^MUMPS
	;;^DD(357,.01,1,2,1)
	;;=Q
	;;^DD(357,.01,1,2,2)
	;;=Q
	;;^DD(357,.01,1,2,"%D",0)
	;;=^^5^5^2951017^
	;;^DD(357,.01,1,2,"%D",1,0)
	;;=This cross-reference will be used to store the text of the compiled form.
	;;^DD(357,.01,1,2,"%D",2,0)
	;;=The format will be ..."AT",form ien,row #)=text line. The index will be
	;;^DD(357,.01,1,2,"%D",3,0)
	;;=created by the 'compile' action of the encounter form utilities - it is
	;;^DD(357,.01,1,2,"%D",4,0)
	;;=optional. The option IBDF RECOMPILE ALL FORMS can be used to recompiled
	;;^DD(357,.01,1,2,"%D",5,0)
	;;=all forms.
	;;^DD(357,.01,1,2,"DT")
	;;=2931124
	;;^DD(357,.01,1,3,0)
	;;=357^AC^MUMPS
	;;^DD(357,.01,1,3,1)
	;;=Q
	;;^DD(357,.01,1,3,2)
	;;=Q
	;;^DD(357,.01,1,3,"%D",0)
	;;=^^6^6^2951017^
	;;^DD(357,.01,1,3,"%D",1,0)
	;;=This cross-reference will be used to store the special controls needed
	;;^DD(357,.01,1,3,"%D",2,0)
	;;=(bold on, bold off, etc.) to print the compiled form. The format will be
	;;^DD(357,.01,1,3,"%D",3,0)
	;;=..."AC",form ien,row #,column # )=controls. The index will be created by
	;;^DD(357,.01,1,3,"%D",4,0)
	;;=the 'compile' action of the encounter form utilities - it is optional.
	;;^DD(357,.01,1,3,"%D",5,0)
	;;=The option IBDF RECOMPILE ALL FORMS can be used to recompiled
	;;^DD(357,.01,1,3,"%D",6,0)
	;;=all forms.
	;;^DD(357,.01,1,3,"DT")
	;;=2931124
	;;^DD(357,.01,1,4,0)
	;;=357^AU^MUMPS
	;;^DD(357,.01,1,4,1)
	;;=Q
	;;^DD(357,.01,1,4,2)
	;;=Q
	;;^DD(357,.01,1,4,"%D",0)
	;;=^^5^5^2951017^^
	;;^DD(357,.01,1,4,"%D",1,0)
	;;=This cross-reference will be used to store the underlining of the compiled
	;;^DD(357,.01,1,4,"%D",2,0)
	;;=form. The format will be ...,"AU",form ien,row #)=underlining . The index
	;;^DD(357,.01,1,4,"%D",3,0)
	;;=will be created by the 'compile' action of the encounter form utilities -
	;;^DD(357,.01,1,4,"%D",4,0)
	;;=it is optional. The option IBDF RECOMPILE ALL FORMS can be used to
	;;^DD(357,.01,1,4,"%D",5,0)
	;;=recompiled all forms.
	;;^DD(357,.01,1,4,"DT")
	;;=2931124
	;;^DD(357,.01,1,5,0)
	;;=357^AG^MUMPS
	;;^DD(357,.01,1,5,1)
	;;=Q
	;;^DD(357,.01,1,5,2)
	;;=Q
	;;^DD(357,.01,1,5,"%D",0)
	;;=^^6^6^2951017^
	;;^DD(357,.01,1,5,"%D",1,0)
	;;=This cross-reference will be used to store strings of graphics characters
	;;^DD(357,.01,1,5,"%D",2,0)
	;;=(TLC,TRC, etc.) needed for the compiled form. The format will be
	;;^DD(357,.01,1,5,"%D",3,0)
	;;=..."AG",form ien,row #,column # )=graphics string . The index will be

IBDIN003
IBDIN003	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357,.01,1,5,"%D",4,0)
	;;=created by the 'compile' action of the encounter form utilities - it is
	;;^DD(357,.01,1,5,"%D",5,0)
	;;=optional. The option IBDF RECOMPILE ALL FORMS can be used to recompiled
	;;^DD(357,.01,1,5,"%D",6,0)
	;;=all forms.
	;;^DD(357,.01,1,5,"DT")
	;;=2931124
	;;^DD(357,.01,1,6,0)
	;;=357^AB^MUMPS
	;;^DD(357,.01,1,6,1)
	;;=Q
	;;^DD(357,.01,1,6,2)
	;;=Q
	;;^DD(357,.01,1,6,"%D",0)
	;;=^^5^5^2951017^
	;;^DD(357,.01,1,6,"%D",1,0)
	;;=This cross-reference will be used to store the boxes needed for the compiled
	;;^DD(357,.01,1,6,"%D",2,0)
	;;=forms. The format will be ..."AB",form ien,row #,column #, Block ien)=
	;;^DD(357,.01,1,6,"%D",3,0)
	;;=box width^box height. The index will be created by the 'compile'
	;;^DD(357,.01,1,6,"%D",4,0)
	;;=action of the encounter form utilities. The option IBDF RECOMPILE ALL
	;;^DD(357,.01,1,6,"%D",5,0)
	;;=FORMS can be used to recompiled all forms.
	;;^DD(357,.01,1,6,"DT")
	;;=2940606
	;;^DD(357,.01,3)
	;;=The form name must be 3-30 uppercase characters in length.
	;;^DD(357,.01,21,0)
	;;=^^2^2^2950717^^^
	;;^DD(357,.01,21,1,0)
	;;= 
	;;^DD(357,.01,21,2,0)
	;;=The name of the encounter form.
	;;^DD(357,.01,"DEL",1,0)
	;;=I '$G(IBDEVICE("LISTMAN")) W "...Encounter Forms can only be deleted through the",!," DELETE UNUSED FORM action in the Encounter Form Utilities!"
	;;^DD(357,.01,"DT")
	;;=2950925
	;;^DD(357,.02,0)
	;;=SIMPLEX/DUPLEX^S^0:SIMPLEX;1:DUPLEX,LONG-EDGE BINDING;2:DUPLEX,SHORT-EDGE BINDING;^0;2^Q
	;;^DD(357,.02,3)
	;;=SIMPLEX means one-sided, DUPLEX means two-sided. SHORT-EDGE BINDING is for attaching forms by the top, LONG-EDGE BINDING is for attaching forms along the side.
	;;^DD(357,.02,21,0)
	;;=^^1^1^2940628^
	;;^DD(357,.02,21,1,0)
	;;=Allows forms to be printed either one-sided or two-sided.
	;;^DD(357,.02,"DT")
	;;=2940628
	;;^DD(357,.03,0)
	;;=BRIEF DESCRIPTION^RF^^0;3^K:$L(X)>80!($L(X)<1) X
	;;^DD(357,.03,.1)
	;;=BRIEF DESCRIPTION OF FORM'S USE & CONTENT
	;;^DD(357,.03,3)
	;;=Enter a brief description of the intended use of the form or its contents.
	;;^DD(357,.03,21,0)
	;;=^^3^3^2930607^
	;;^DD(357,.03,21,1,0)
	;;= 
	;;^DD(357,.03,21,2,0)
	;;=A brief description of the contents of the form and its intended use. This
	;;^DD(357,.03,21,3,0)
	;;=description will be displayed to the user.
	;;^DD(357,.03,"DT")
	;;=2940309
	;;^DD(357,.04,0)
	;;=TYPE OF USE^R*S^0:RESERVED FOR UTILITY;1:OUTPATIENT ENCOUNTER FORM;^0;4^Q
	;;^DD(357,.04,1,0)
	;;=^.1
	;;^DD(357,.04,1,1,0)
	;;=357^D
	;;^DD(357,.04,1,1,1)
	;;=S ^IBE(357,"D",$E(X,1,30),DA)=""
	;;^DD(357,.04,1,1,2)
	;;=K ^IBE(357,"D",$E(X,1,30),DA)
	;;^DD(357,.04,1,1,"%D",0)
	;;=^^1^1^2930825^
	;;^DD(357,.04,1,1,"%D",1,0)
	;;=Used to find forms of a particular type.
	;;^DD(357,.04,1,1,"DT")
	;;=2930825
	;;^DD(357,.04,3)
	;;=How will the form be used?
	;;^DD(357,.04,12)
	;;=Does not allow users to choose RESERVED FOR UTILITY
	;;^DD(357,.04,12.1)
	;;=S DIC("S")="I Y'=0"
	;;^DD(357,.04,21,0)
	;;=^^5^5^2950721^^^^
	;;^DD(357,.04,21,1,0)
	;;=This field will be used to categorize forms by type of use. It is possible
	;;^DD(357,.04,21,2,0)
	;;=that the form generator that is part of the Encounter Form Utilities may
	;;^DD(357,.04,21,3,0)
	;;=be used to create forms other than encounter forms.
	;;^DD(357,.04,21,4,0)
	;;=The utilities use a couple of forms (GARBAGE, TOOL KIT), TYPE OF USE is
	;;^DD(357,.04,21,5,0)
	;;=RESERVED FOR UTILITY, that are not real forms.
	;;^DD(357,.04,"DT")
	;;=2930825
	;;^DD(357,.05,0)
	;;=COMPILED?^S^0:NO;1:YES;F:COMPILATION FAILED;^0;5^Q
	;;^DD(357,.05,1,0)
	;;=^.1^^0
	;;^DD(357,.05,3)
	;;=Enter YES if the form is compiled, NO otherwise.
	;;^DD(357,.05,21,0)
	;;=^^2^2^2950912^^^^
	;;^DD(357,.05,21,1,0)
	;;=This indicates whether a compiled version of the form exists. The compiled
	;;^DD(357,.05,21,2,0)
	;;=version is much faster to print.
	;;^DD(357,.05,"DT")
	;;=2951003
	;;^DD(357,.06,0)
	;;=USE ICR?^S^0:NO;1:YES;^0;6^Q
	;;^DD(357,.06,.1)
	;;=Should ICR be used to automatically read hand print on this form?
	;;^DD(357,.06,3)
	;;=ICR is 'intelligent character recognition', used to automatically read hand print. Answer YES only if your scanning software has ICR and you want to use it for this form.
	;;^DD(357,.06,"DT")
	;;=2950421
	;;^DD(357,.07,0)
	;;=TOOLKIT^RS^0:NO;1:YES;^0;7^Q
	;;^DD(357,.07,.1)
	;;=SHOULD THIS FORM BE PART OF THE TOOLKIT?
	;;^DD(357,.07,1,0)
	;;=^.1
	;;^DD(357,.07,1,1,0)
	;;=357^C
	;;^DD(357,.07,1,1,1)
	;;=S ^IBE(357,"C",$E(X,1,30),DA)=""
	;;^DD(357,.07,1,1,2)
	;;=K ^IBE(357,"C",$E(X,1,30),DA)
	;;^DD(357,.07,1,1,"%D",0)
	;;=^^1^1^2930624^

IBDIN004
IBDIN004	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357,.07,1,1,"%D",1,0)
	;;=Used to find all of the tool kit forms.
	;;^DD(357,.07,1,1,"DT")
	;;=2930624
	;;^DD(357,.07,3)
	;;=Is this form part of the toolkit?
	;;^DD(357,.07,21,0)
	;;=^^3^3^2950306^
	;;^DD(357,.07,21,1,0)
	;;= 
	;;^DD(357,.07,21,2,0)
	;;=This field, if set to YES, means that the form can not be deleted and can
	;;^DD(357,.07,21,3,0)
	;;=not be added to a clinic setup.
	;;^DD(357,.07,"DT")
	;;=2950306
	;;^DD(357,.09,0)
	;;=RIGHT MARGIN^RNJ3,0X^^0;9^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357,.09,.1)
	;;=FORM'S RIGHT MARGIN (WIDTH IN CHARACTERS)
	;;^DD(357,.09,3)
	;;=
	;;^DD(357,.09,4)
	;;=W !,"How many columns (characters) wide should the form be?"
	;;^DD(357,.09,21,0)
	;;=^^2^2^2940711^^^^
	;;^DD(357,.09,21,1,0)
	;;= 
	;;^DD(357,.09,21,2,0)
	;;=The number of characters wide the form is.
	;;^DD(357,.09,"DT")
	;;=2940711
	;;^DD(357,.1,0)
	;;=PAGE LENGTH^RNJ3,0^^0;10^K:+X'=X!(X>300)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357,.1,.1)
	;;=FORM'S PAGE LENGTH (IN LINES)
	;;^DD(357,.1,3)
	;;=How many lines should each page have?
	;;^DD(357,.1,21,0)
	;;=^^2^2^2950109^^
	;;^DD(357,.1,21,1,0)
	;;= 
	;;^DD(357,.1,21,2,0)
	;;=This is the number of usable lines on the page.
	;;^DD(357,.1,"DT")
	;;=2930420
	;;^DD(357,.11,0)
	;;=NUMBER OF PAGES^RNJ2,0^^0;11^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357,.11,3)
	;;=How many pages should the encounter form have?
	;;^DD(357,.11,21,0)
	;;=^^1^1^2930602^
	;;^DD(357,.11,21,1,0)
	;;=The encounter form may have multiple pages.
	;;^DD(357,.11,"DT")
	;;=2930602
	;;^DD(357,.12,0)
	;;=SCANNABLE?^S^0:NO;1:YES;^0;12^Q
	;;^DD(357,.12,3)
	;;=Answer YES if the form will be scanned to accomplish data entry, NO otherwise.
	;;^DD(357,.12,"DT")
	;;=2950421
	;;^DD(357,.13,0)
	;;=FORM TYPE ID^NJ9,0^^0;13^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357,.13,1,0)
	;;=^.1
	;;^DD(357,.13,1,1,0)
	;;=357^ADEF
	;;^DD(357,.13,1,1,1)
	;;=S ^IBE(357,"ADEF",$E(X,1,30),DA)=""
	;;^DD(357,.13,1,1,2)
	;;=K ^IBE(357,"ADEF",$E(X,1,30),DA)
	;;^DD(357,.13,1,1,"%D",0)
	;;=^^2^2^2951003^
	;;^DD(357,.13,1,1,"%D",1,0)
	;;=This cross reference can be used to find the current form definition
	;;^DD(357,.13,1,1,"%D",2,0)
	;;=in file 357.95 for this form.
	;;^DD(357,.13,1,1,"DT")
	;;=2951003
	;;^DD(357,.13,3)
	;;=Type a Number between 1 and 999999999, 0 Decimal Digits
	;;^DD(357,.13,21,0)
	;;=^^4^4^2960212^^^
	;;^DD(357,.13,21,1,0)
	;;=This is the current form definition entry associated with this form.  Each
	;;^DD(357,.13,21,2,0)
	;;=time the form is edited and printed or recompiled and printed a new 
	;;^DD(357,.13,21,3,0)
	;;=form definition is created leaving the old definition
	;;^DD(357,.13,21,4,0)
	;;=for use with existing forms (its used in scanning).
	;;^DD(357,.13,"DT")
	;;=2951003
	;;^DD(357,.14,0)
	;;=PAPER SIZE^S^1:LETTER (8 1/2 x 11);^0;14^Q
	;;^DD(357,.14,3)
	;;=What size paper should be used?
	;;^DD(357,.14,"DT")
	;;=2940614
	;;^DD(357,.15,0)
	;;=ORIENTATION^S^p:PORTRAIT;^0;15^Q
	;;^DD(357,.15,3)
	;;=How should the form be oriented?
	;;^DD(357,.15,"DT")
	;;=2940614
	;;^DD(357,.16,0)
	;;=TEXT SIZE^RS^1:133 COLUMNS x 80 LINES;2:96 COLUMNS x 72 LINES;3:80 COLUMNS x 60 LINES;^0;16^Q
	;;^DD(357,.16,3)
	;;=This choice will determine the size of the print and how much text will fit on the form.
	;;^DD(357,.16,"DT")
	;;=2950814
	;;^DD(357,.17,0)
	;;=VERSION^NJ4,1^^0;17^K:+X'=X!(X>99)!(X<0)!(X?.E1"."2N.N) X
	;;^DD(357,.17,3)
	;;=Type a Number between 0 and 99, 1 Decimal Digit
	;;^DD(357,.17,21,0)
	;;=^^3^3^2951116^^
	;;^DD(357,.17,21,1,0)
	;;=This is the version of AICS that created the form.  This was implemented
	;;^DD(357,.17,21,2,0)
	;;=in version 2.1.  All forms with a null entry can be treated as version
	;;^DD(357,.17,21,3,0)
	;;=2.0 forms.
	;;^DD(357,.17,"DT")
	;;=2951024
	;;^DD(357,2,0)
	;;=PAGE INFORMATION^357.02^^2;0
	;;^DD(357.02,0)
	;;=PAGE INFORMATION SUB-FIELD^^.02^2
	;;^DD(357.02,0,"DIK")
	;;=IBDX0
	;;^DD(357.02,0,"DT")
	;;=2950717
	;;^DD(357.02,0,"IX","B",357.02,.01)
	;;=
	;;^DD(357.02,0,"NM","PAGE INFORMATION")
	;;=
	;;^DD(357.02,0,"UP")
	;;=357
	;;^DD(357.02,.01,0)
	;;=PAGE INFORMATION^MNJ1,0X^^0;1^K:+X'=X!(X>8)!(X<1)!(X?.E1"."1N.N)!'$P(^IBE(357,D0,0),U,12)!(X>$P(^IBE(357,D0,0),U,11)) X
	;;^DD(357.02,.01,1,0)
	;;=^.1
	;;^DD(357.02,.01,1,1,0)
	;;=357.02^B
	;;^DD(357.02,.01,1,1,1)
	;;=S ^IBE(357,DA(1),2,"B",$E(X,1,30),DA)=""
	;;^DD(357.02,.01,1,1,2)
	;;=K ^IBE(357,DA(1),2,"B",$E(X,1,30),DA)
	;;^DD(357.02,.01,3)
	;;=Enter the pages that should be scanned.
	;;^DD(357.02,.01,"DT")
	;;=2950717
	;;^DD(357.02,.02,0)
	;;=SCANNABLE?^S^0:NO;1:YES;^0;2^Q
	;;^DD(357.02,.02,3)
	;;=Is this page meant to be scanned?

IBDIN005
IBDIN005	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.02,.02,"DT")
	;;=2950717

IBDIN006
IBDIN006	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.08)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.08,0,"GL")
	;;=^IBD(357.08,
	;;^DIC("B","AICS PURGE LOG",357.08)
	;;=
	;;^DIC(357.08,"%D",0)
	;;=^^4^4^2951208^^^
	;;^DIC(357.08,"%D",1,0)
	;;=This file will contain one entry for each time the AICS purge options
	;;^DIC(357.08,"%D",2,0)
	;;=are run.  Both the automatic and manual options cause entries.  The
	;;^DIC(357.08,"%D",3,0)
	;;=purpose of this file is to provide a historical log of the number of
	;;^DIC(357.08,"%D",4,0)
	;;=entries that are purged at each site.  
	;;^DD(357.08,0)
	;;=FIELD^^.06^6
	;;^DD(357.08,0,"DDA")
	;;=N
	;;^DD(357.08,0,"DT")
	;;=2951208
	;;^DD(357.08,0,"IX","B",357.08,.01)
	;;=
	;;^DD(357.08,0,"NM","AICS PURGE LOG")
	;;=
	;;^DD(357.08,.01,0)
	;;=RUN DATE/TIME^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(357.08,.01,1,0)
	;;=^.1
	;;^DD(357.08,.01,1,1,0)
	;;=357.08^B
	;;^DD(357.08,.01,1,1,1)
	;;=S ^IBD(357.08,"B",$E(X,1,30),DA)=""
	;;^DD(357.08,.01,1,1,2)
	;;=K ^IBD(357.08,"B",$E(X,1,30),DA)
	;;^DD(357.08,.01,3)
	;;=Enter the date time that the purge option ran.
	;;^DD(357.08,.01,21,0)
	;;=^^4^4^2951208^^
	;;^DD(357.08,.01,21,1,0)
	;;=This is the date and time that the purge option ran.  After running
	;;^DD(357.08,.01,21,2,0)
	;;=a set of brief results is stored.  A new entry is created each time the
	;;^DD(357.08,.01,21,3,0)
	;;=option runs regardless of whether or not it is a manual or automatic
	;;^DD(357.08,.01,21,4,0)
	;;=purge.
	;;^DD(357.08,.01,"DT")
	;;=2951208
	;;^DD(357.08,.02,0)
	;;=RECORDS TO PURGE THIS RUN^S^0:NONE;1:COMPLETE;2:ALL;^0;2^Q
	;;^DD(357.08,.02,21,0)
	;;=^^1^1^2951208^
	;;^DD(357.08,.02,21,1,0)
	;;=This is the status of records that were purged this run.
	;;^DD(357.08,.02,"DT")
	;;=2951208
	;;^DD(357.08,.03,0)
	;;=ENTRIES PURGE UP TO^D^^0;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
	;;^DD(357.08,.03,21,0)
	;;=^^2^2^2951208^
	;;^DD(357.08,.03,21,1,0)
	;;=This is the last date that entries were purged for based on the status
	;;^DD(357.08,.03,21,2,0)
	;;=of the records to purge this run.
	;;^DD(357.08,.03,"DT")
	;;=2951208
	;;^DD(357.08,.04,0)
	;;=FORM TRACKING ENTRIES DELETED^NJ8,0^^0;4^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.08,.04,3)
	;;=Type a Number between 0 and 99999999, 0 Decimal Digits
	;;^DD(357.08,.04,21,0)
	;;=^^2^2^2951208^
	;;^DD(357.08,.04,21,1,0)
	;;=This is the number of entries in the FORM TRACKING file that were deleted
	;;^DD(357.08,.04,21,2,0)
	;;=this run.
	;;^DD(357.08,.04,"DT")
	;;=2951208
	;;^DD(357.08,.05,0)
	;;=FORM DEFINIT. ENTRIES DELETED^NJ8,0^^0;5^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.08,.05,3)
	;;=Type a Number between 0 and 99999999, 0 Decimal Digits
	;;^DD(357.08,.05,21,0)
	;;=^^2^2^2951208^
	;;^DD(357.08,.05,21,1,0)
	;;=This is the number of entries in the form definition file that 
	;;^DD(357.08,.05,21,2,0)
	;;=were deleted this run.
	;;^DD(357.08,.05,"DT")
	;;=2951208
	;;^DD(357.08,.06,0)
	;;=FORM SPEC ENTRIES DELETED^NJ8,0^^0;6^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.08,.06,3)
	;;=Type a Number between 0 and 99999999, 0 Decimal Digits
	;;^DD(357.08,.06,21,0)
	;;=^^2^2^2951208^
	;;^DD(357.08,.06,21,1,0)
	;;=This is the number of entries in the form specification file that
	;;^DD(357.08,.06,21,2,0)
	;;=were deleted this run.
	;;^DD(357.08,.06,"DT")
	;;=2951208

IBDIN007
IBDIN007	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.09)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.09,0,"GL")
	;;=^IBD(357.09,
	;;^DIC("B","ENCOUNTER FORM PARAMETERS",357.09)
	;;=
	;;^DIC(357.09,"%D",0)
	;;=^^4^4^2951208^^
	;;^DIC(357.09,"%D",1,0)
	;;=This file contains the AICS parameters that control the operation of
	;;^DIC(357.09,"%D",2,0)
	;;=the package.  Included are parameters to manage the automatic purge
	;;^DIC(357.09,"%D",3,0)
	;;=and those necessary to create print manager jobs that automatically 
	;;^DIC(357.09,"%D",4,0)
	;;=queue encounter forms to print.
	;;^DD(357.09,0)
	;;=FIELD^^11^8
	;;^DD(357.09,0,"DDA")
	;;=N
	;;^DD(357.09,0,"DT")
	;;=2960401
	;;^DD(357.09,0,"IX","ACG",357.091,.06)
	;;=
	;;^DD(357.09,0,"IX","B",357.09,.01)
	;;=
	;;^DD(357.09,0,"IX","SEQ",357.091,.1)
	;;=
	;;^DD(357.09,0,"NM","ENCOUNTER FORM PARAMETERS")
	;;=
	;;^DD(357.09,.001,0)
	;;=NUMBER^NJ1,0^^ ^K:+X'=X!(X>1)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.09,.001,3)
	;;=Type a Number between 1 and 1, 0 Decimal Digits
	;;^DD(357.09,.001,21,0)
	;;=^^3^3^2950303^
	;;^DD(357.09,.001,21,1,0)
	;;=There is only one number in this ENCOUNTER FORM PARAMETERS file,
	;;^DD(357.09,.001,21,2,0)
	;;=and that is the number 'one' denoting there is only one Encounter Form
	;;^DD(357.09,.001,21,3,0)
	;;=Parameter.  The labels are subfields of this one parameter.
	;;^DD(357.09,.001,"DT")
	;;=2950303
	;;^DD(357.09,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.09,.01,1,0)
	;;=^.1
	;;^DD(357.09,.01,1,1,0)
	;;=357.09^B
	;;^DD(357.09,.01,1,1,1)
	;;=S ^IBD(357.09,"B",$E(X,1,30),DA)=""
	;;^DD(357.09,.01,1,1,2)
	;;=K ^IBD(357.09,"B",$E(X,1,30),DA)
	;;^DD(357.09,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.09,.01,21,0)
	;;=^^2^2^2950303^^
	;;^DD(357.09,.01,21,1,0)
	;;=This field is the name field.  There should only be one
	;;^DD(357.09,.01,21,2,0)
	;;=entry in this field.
	;;^DD(357.09,.01,23,0)
	;;=^^1^1^2950303^^
	;;^DD(357.09,.01,23,1,0)
	;;= 
	;;^DD(357.09,.01,"DT")
	;;=2950303
	;;^DD(357.09,.02,0)
	;;=RECORDS TO PURGE^S^0:NONE;1:COMPLETED;2:ALL;^0;2^Q
	;;^DD(357.09,.02,21,0)
	;;=^^14^14^2951208^^
	;;^DD(357.09,.02,21,1,0)
	;;=Enter whether you want the background purge option to purge all records
	;;^DD(357.09,.02,21,2,0)
	;;=from form tracking older that the number of days specified in the field
	;;^DD(357.09,.02,21,3,0)
	;;=FORM TRACKING RETENTION DAYS, or completed records, or no records.  
	;;^DD(357.09,.02,21,4,0)
	;;= 
	;;^DD(357.09,.02,21,5,0)
	;;=After purging records from form tracking, the purge utility will check
	;;^DD(357.09,.02,21,6,0)
	;;=to see if all forms for inactive form definitions have been received.
	;;^DD(357.09,.02,21,7,0)
	;;=If so, then the form definition and Form Specification for that form
	;;^DD(357.09,.02,21,8,0)
	;;=may be deleted.  Purging ALL Form Tracking entries will cause the
	;;^DD(357.09,.02,21,9,0)
	;;=form definition and form specification to be deleted for forms that
	;;^DD(357.09,.02,21,10,0)
	;;=have not yet been completed.  Once the form definition is deleted
	;;^DD(357.09,.02,21,11,0)
	;;=the form specification can not be recreated in DHCP, if it does not
	;;^DD(357.09,.02,21,12,0)
	;;=exist on the AICS workstation the form can not be recognized.
	;;^DD(357.09,.02,21,13,0)
	;;=This is generally not a problem as entries must be at least 60 days
	;;^DD(357.09,.02,21,14,0)
	;;=old to purge.
	;;^DD(357.09,.02,"DT")
	;;=2951208
	;;^DD(357.09,.03,0)
	;;=FORM TRACKING RETENTION DAYS^NJ4,0^^0;3^K:+X'=X!(X>9999)!(X<60)!(X?.E1"."1N.N) X
	;;^DD(357.09,.03,3)
	;;=Type a Number between 60 and 9999, 0 Decimal Digits
	;;^DD(357.09,.03,21,0)
	;;=^^5^5^2951003^
	;;^DD(357.09,.03,21,1,0)
	;;=Enter the number of days to retain form tracking information after it
	;;^DD(357.09,.03,21,2,0)
	;;=is no longer used.  The AICS purge utility will delete entries in
	;;^DD(357.09,.03,21,3,0)
	;;=the Encounter Form Definition file (357.95), the Encounter Form Tracking
	;;^DD(357.09,.03,21,4,0)
	;;=file (357.96), and the Form Specification file the number of days 
	;;^DD(357.09,.03,"DT")
	;;=2951003
	;;^DD(357.09,.04,0)
	;;=DEFAULT DATA ENTRY FORM^P357'^IBE(357,^0;4^Q
	;;^DD(357.09,.04,3)
	;;=Enter the form to be used as the default form for doing data entry when no form exists for a clinic.
	;;^DD(357.09,.04,21,0)
	;;=^^5^5^2951208^
	;;^DD(357.09,.04,21,1,0)
	;;=This is the form definition that will be used during manual data entry
	;;^DD(357.09,.04,21,2,0)
	;;=if no form for a clinic is defined.  If this is not filled in then
	;;^DD(357.09,.04,21,3,0)
	;;=the PRIMARY CARE SAMPLE (2.1) form in the tool kit will be used as the
	;;^DD(357.09,.04,21,4,0)
	;;=default form.  If that form has been deleted then provider, procedure     

IBDIN008
IBDIN008	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.09)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.09,.04,21,5,0)
	;;=and diagnosis will be asked but no quick entry features will be available.
	;;^DD(357.09,.04,"DT")
	;;=2951208
	;;^DD(357.09,.05,0)
	;;=PRINT FORMS FOR INPATIENTS^S^0:NO;1:YES;^0;5^Q
	;;^DD(357.09,.05,3)
	;;=If you would like to suppress printing of encounter forms for inpatients enter 'No'.  Answering 'Yes' or leaving blank will cause Encounter Forms for inpatients to print.
	;;^DD(357.09,.05,21,0)
	;;=2^^7^7^2951219^^^
	;;^DD(357.09,.05,21,1,0)
	;;=Enter 'Yes' if you want encounter forms printed for Inpatients or 'No'
	;;^DD(357.09,.05,21,2,0)
	;;=if no enounter forms for inpatients should be printed.  If this field
	;;^DD(357.09,.05,21,3,0)
	;;=is null, it will be treated as a 'Yes' and encounter forms for inpatients
	;;^DD(357.09,.05,21,4,0)
	;;=will be printed.
	;;^DD(357.09,.05,21,5,0)
	;;= 
	;;^DD(357.09,.05,21,6,0)
	;;=This parameter affects all options that print forms for appointments
	;;^DD(357.09,.05,21,7,0)
	;;=for a clinic, it does not affect printing individual forms.
	;;^DD(357.09,.05,23,0)
	;;=^^2^2^2951219^
	;;^DD(357.09,.05,23,1,0)
	;;=This parameter is checked twice in routine IBDF1B1A when check 
	;;^DD(357.09,.05,23,2,0)
	;;=the status of a patients appointment.
	;;^DD(357.09,.05,"DT")
	;;=2951218
	;;^DD(357.09,1.01,0)
	;;=PURGE NOTIFICATION MAIL GROUP^P3.8'^XMB(3.8,^1;1^Q
	;;^DD(357.09,1.01,3)
	;;=This mail group will automatically receive notification of purge results.  Results are also stored in the AICS PURGE LOG file and may be reviewed.  Mail notification is not required.
	;;^DD(357.09,1.01,21,0)
	;;=^^8^8^2951219^^
	;;^DD(357.09,1.01,21,1,0)
	;;=Enter the name of the mail group that should receive the automatic
	;;^DD(357.09,1.01,21,2,0)
	;;=notification of purge results.  Purge results are sent every time
	;;^DD(357.09,1.01,21,3,0)
	;;=the AICS purge runs, regardless of whether or not the auto purge or
	;;^DD(357.09,1.01,21,4,0)
	;;=manual purge is run.
	;;^DD(357.09,1.01,21,5,0)
	;;= 
	;;^DD(357.09,1.01,21,6,0)
	;;=If no group is entered then no message will be sent.  Results are
	;;^DD(357.09,1.01,21,7,0)
	;;=always stored in the AICS PURGE LOG file (357.08) and can be reviewed
	;;^DD(357.09,1.01,21,8,0)
	;;=at any time.
	;;^DD(357.09,1.01,"DT")
	;;=2951208
	;;^DD(357.09,11,0)
	;;=PRINT MGR'S QUEUING PARAM NAME^357.091A^^Q;0
	;;^DD(357.09,11,21,0)
	;;=6^^5^5^2960110^^
	;;^DD(357.09,11,21,1,0)
	;;=This field is a multiple.  This is the name of the parameter group 
	;;^DD(357.09,11,21,2,0)
	;;=for the printing of encounter forms.  The encounter form background
	;;^DD(357.09,11,21,3,0)
	;;=print job will loop through all of the parameter groups and
	;;^DD(357.09,11,21,4,0)
	;;=print the forms for the clinics that are under this parameter
	;;^DD(357.09,11,21,5,0)
	;;=the print job.
	;;^DD(357.09,11,"DT")
	;;=2960402
	;;^DD(357.091,0)
	;;=PRINT MGR'S QUEUING PARAM NAME SUB-FIELD^^.12^12
	;;^DD(357.091,0,"DT")
	;;=2960209
	;;^DD(357.091,0,"IX","B",357.091,.01)
	;;=
	;;^DD(357.091,0,"NM","PRINT MGR'S QUEUING PARAM NAME")
	;;=
	;;^DD(357.091,0,"UP")
	;;=357.09
	;;^DD(357.091,.01,0)
	;;=PRINT MGR'S QUEUING PARAM NAME^MF^^0;1^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.091,.01,1,0)
	;;=^.1
	;;^DD(357.091,.01,1,1,0)
	;;=357.091^B
	;;^DD(357.091,.01,1,1,1)
	;;=S ^IBD(357.09,DA(1),"Q","B",$E(X,1,30),DA)=""
	;;^DD(357.091,.01,1,1,2)
	;;=K ^IBD(357.09,DA(1),"Q","B",$E(X,1,30),DA)
	;;^DD(357.091,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.091,.01,21,0)
	;;=^^2^2^2951004^^^
	;;^DD(357.091,.01,21,1,0)
	;;=This field is the name of the parameter group for printing of
	;;^DD(357.091,.01,21,2,0)
	;;=encounter forms when using the background print job.
	;;^DD(357.091,.01,"DT")
	;;=2960402
	;;^DD(357.091,.02,0)
	;;=DATE/TIME STARTED^D^^0;2^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(357.091,.02,3)
	;;=This is the date/time that the print job began.
	;;^DD(357.091,.02,21,0)
	;;=^^2^2^2951004^
	;;^DD(357.091,.02,21,1,0)
	;;=This field is the date that the job started.  It is supplied by
	;;^DD(357.091,.02,21,2,0)
	;;=the system when the queued print job begins.
	;;^DD(357.091,.02,"DT")
	;;=2951004
	;;^DD(357.091,.03,0)
	;;=DATE/TIME ENDED^D^^0;3^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(357.091,.03,3)
	;;=This is the date/time the print job finished.
	;;^DD(357.091,.03,21,0)
	;;=^^2^2^2951004^
	;;^DD(357.091,.03,21,1,0)
	;;=This field contains the date that the print job finished.  This data
	;;^DD(357.091,.03,21,2,0)
	;;=is supplied by the system when the print job is finished.
	;;^DD(357.091,.03,"DT")
	;;=2951004
	;;^DD(357.091,.04,0)
	;;=CLINIC SORT BY^RS^1:DIVISION/CLINIC/PATIENT;2:DIVISION/TERMINAL DIGITS;3:DIVISION/CLINIC/TERMINAL DIGITS;^0;4^Q

IBDIN009
IBDIN009	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.09)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.091,.04,3)
	;;=Select the way the encounter forms should be sorted when printing.
	;;^DD(357.091,.04,21,0)
	;;=^^5^5^2951004^
	;;^DD(357.091,.04,21,1,0)
	;;=This field contains the sort sequence for the printing of encounter
	;;^DD(357.091,.04,21,2,0)
	;;=forms.  Its value can be:
	;;^DD(357.091,.04,21,3,0)
	;;= 1) Division/Clinic/Patient
	;;^DD(357.091,.04,21,4,0)
	;;= 2) Division/Terminal Digits
	;;^DD(357.091,.04,21,5,0)
	;;= 3) Division/Clinic/Terminal Digits
	;;^DD(357.091,.04,"DT")
	;;=2951004
	;;^DD(357.091,.05,0)
	;;=ADD ONS^S^0:NO;1:YES;^0;5^Q
	;;^DD(357.091,.05,21,0)
	;;=^^3^3^2951004^
	;;^DD(357.091,.05,21,1,0)
	;;=This field is a Yes/No field as to whether the print job will be just
	;;^DD(357.091,.05,21,2,0)
	;;=for printing add ons only.  If this field contains 'Yes', the print
	;;^DD(357.091,.05,21,3,0)
	;;=job will only print the add ons for the clinics.
	;;^DD(357.091,.05,"DT")
	;;=2951004
	;;^DD(357.091,.06,0)
	;;=CLINIC GROUPS^P357.99'^IBD(357.99,^0;6^Q
	;;^DD(357.091,.06,1,0)
	;;=^.1
	;;^DD(357.091,.06,1,1,0)
	;;=357.09^ACG
	;;^DD(357.091,.06,1,1,1)
	;;=S ^IBD(357.09,"ACG",$E(X,1,30),DA(1),DA)=""
	;;^DD(357.091,.06,1,1,2)
	;;=K ^IBD(357.09,"ACG",$E(X,1,30),DA(1),DA)
	;;^DD(357.091,.06,1,1,"%D",0)
	;;=^^3^3^2960220^
	;;^DD(357.091,.06,1,1,"%D",1,0)
	;;=Cross reference of clinic groups
	;;^DD(357.091,.06,1,1,"%D",2,0)
	;;=used to prevent deleting of clinic groups used
	;;^DD(357.091,.06,1,1,"%D",3,0)
	;;=in parameter setup.
	;;^DD(357.091,.06,1,1,"DT")
	;;=2960220
	;;^DD(357.091,.06,21,0)
	;;=^^4^4^2951004^
	;;^DD(357.091,.06,21,1,0)
	;;=This field is a pointer to the PRINT MANAGERS CLINIC GROUPS file 
	;;^DD(357.091,.06,21,2,0)
	;;=(#357.99).  This stores the name of the clinic group that the
	;;^DD(357.091,.06,21,3,0)
	;;=encounter forms should be printed for.  Each Clinic Group has one
	;;^DD(357.091,.06,21,4,0)
	;;=or more clinics assigned to it.
	;;^DD(357.091,.06,"DT")
	;;=2960220
	;;^DD(357.091,.07,0)
	;;=DAYS TO PRINT AHEAD^RNJ2,0^^0;7^K:+X'=X!(X>10)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.091,.07,3)
	;;=Type a Number between 0 and 10, 0 Decimal Digits
	;;^DD(357.091,.07,21,0)
	;;=^^2^2^2960109^^^
	;;^DD(357.091,.07,21,1,0)
	;;=This field contains a number which will be the number of days ahead
	;;^DD(357.091,.07,21,2,0)
	;;=that the encounter forms will be printed for.
	;;^DD(357.091,.07,23,0)
	;;=^^2^2^2960109^^
	;;^DD(357.091,.07,23,1,0)
	;;= 
	;;^DD(357.091,.07,23,2,0)
	;;= 
	;;^DD(357.091,.07,"DT")
	;;=2960109
	;;^DD(357.091,.08,0)
	;;=SPECIAL INSTRUCTIONS^S^R:RUN REGARDLESS;I:IGNORE BOTH WEEKENDS AND HOLIDAYS;W:IGNORE WEEKENDS;H:IGNORE HOLIDAYS;T:TODAY;N:NOT ACTIVE;^0;8^Q
	;;^DD(357.091,.08,21,0)
	;;=^^8^8^2960209^^
	;;^DD(357.091,.08,21,1,0)
	;;=This field will store the special instructions for the printing of
	;;^DD(357.091,.08,21,2,0)
	;;=the encounter forms.  The values for this field can be:
	;;^DD(357.091,.08,21,3,0)
	;;= (I) Ignore both holidays and weekends
	;;^DD(357.091,.08,21,4,0)
	;;= (R) Run Regardless
	;;^DD(357.091,.08,21,5,0)
	;;= (W) Ignore Weekends
	;;^DD(357.091,.08,21,6,0)
	;;= (H) Ignore Holidays
	;;^DD(357.091,.08,21,7,0)
	;;= (T) Today
	;;^DD(357.091,.08,21,8,0)
	;;= (N) Not active
	;;^DD(357.091,.08,"DT")
	;;=2960209
	;;^DD(357.091,.09,0)
	;;=DEVICE^FX^^0;9^N IBL S IBL=X,X=$P(X,";"),DIC=3.5,DIC(0)="EQ" D ^DIC K:Y'>0!(X=" ") X S:$D(X) X=X_$S(IBL[";":";"_$P(IBL,";",2,99),1:"") S DIC=DIE
	;;^DD(357.091,.09,3)
	;;=Answer must be 3-40 characters in length.
	;;^DD(357.091,.09,21,0)
	;;=^^3^3^2951004^
	;;^DD(357.091,.09,21,1,0)
	;;=This field contains a free text pointer to the device.  This stores the
	;;^DD(357.091,.09,21,2,0)
	;;=name of the printer where the encounter forms should be printed for
	;;^DD(357.091,.09,21,3,0)
	;;=the print job.
	;;^DD(357.091,.09,"DT")
	;;=2960402
	;;^DD(357.091,.1,0)
	;;=PRINT PRIORITY^RNJ6,2^^0;10^K:+X'=X!(X>999)!(X<1)!(X?.E1"."3N.N) X
	;;^DD(357.091,.1,1,0)
	;;=^.1
	;;^DD(357.091,.1,1,1,0)
	;;=357.09^SEQ
	;;^DD(357.091,.1,1,1,1)
	;;=S ^IBD(357.09,"SEQ",$E(X,1,30),DA(1),DA)=""
	;;^DD(357.091,.1,1,1,2)
	;;=K ^IBD(357.09,"SEQ",$E(X,1,30),DA(1),DA)
	;;^DD(357.091,.1,1,1,"%D",0)
	;;=^^1^1^2951004^
	;;^DD(357.091,.1,1,1,"%D",1,0)
	;;=Cross reference used to find sequences to print encounter forms.
	;;^DD(357.091,.1,1,1,"DT")
	;;=2951004
	;;^DD(357.091,.1,3)
	;;=Type a Number between 1 and 999, 2 Decimal Digits
	;;^DD(357.091,.1,21,0)
	;;=^^3^3^2951004^
	;;^DD(357.091,.1,21,1,0)
	;;=This field contains a number which will be used to sequence the print
	;;^DD(357.091,.1,21,2,0)
	;;=job tasks.  The lower the number, the higher the priority of the job 

IBDIN00A
IBDIN00A	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.09)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.091,.1,21,3,0)
	;;=and those will be queued to print first.
	;;^DD(357.091,.1,"DT")
	;;=2951004
	;;^DD(357.091,.11,0)
	;;=TASK NUMBER^NJ9,0^^0;11^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.091,.11,3)
	;;=Type a Number between 0 and 999999999, 0 Decimal Digits
	;;^DD(357.091,.11,21,0)
	;;=^^6^6^2951004^
	;;^DD(357.091,.11,21,1,0)
	;;=This field contains the task number from taskman, when a print job is
	;;^DD(357.091,.11,21,2,0)
	;;=queued to print.  It will delete the entry when the job finished.  This
	;;^DD(357.091,.11,21,3,0)
	;;=value is supplied by the system.  If the job has been interrupted,
	;;^DD(357.091,.11,21,4,0)
	;;=waiting to run or is running this value will be present.  This field
	;;^DD(357.091,.11,21,5,0)
	;;=is used by the action Queue Status on the Parameter Interface screen.
	;;^DD(357.091,.11,21,6,0)
	;;=That action will give the user the status of the queued job.
	;;^DD(357.091,.11,"DT")
	;;=2951004
	;;^DD(357.091,.12,0)
	;;=LAST DAY PRINTED^D^^0;12^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(357.091,.12,21,0)
	;;=^^2^2^2951004^
	;;^DD(357.091,.12,21,1,0)
	;;=This field contains the last day teh encounter forms were printed for.
	;;^DD(357.091,.12,21,2,0)
	;;=This will keep track so that the date does not get printed again.
	;;^DD(357.091,.12,"DT")
	;;=2951004

IBDIN00B
IBDIN00B	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.1,0,"GL")
	;;=^IBE(357.1,
	;;^DIC("B","ENCOUNTER FORM BLOCK",357.1)
	;;=
	;;^DIC(357.1,"%D",0)
	;;=^^8^8^2960402^^^^
	;;^DIC(357.1,"%D",1,0)
	;;=Warning: Do Not Re-Index this file.  If this file should accidentally
	;;^DIC(357.1,"%D",2,0)
	;;=         be re-indexed, use the option to Recompile All Forms.  This will
	;;^DIC(357.1,"%D",3,0)
	;;=         correct any printing problems that might occur.
	;;^DIC(357.1,"%D",4,0)
	;;= 
	;;^DIC(357.1,"%D",5,0)
	;;=This file contains the description of encounter form blocks.  A block is a
	;;^DIC(357.1,"%D",6,0)
	;;=rectangular areas on an encounter form.  Blocks are the basic building unit
	;;^DIC(357.1,"%D",7,0)
	;;=of encounter forms.  All data on a form is contained within a block and the
	;;^DIC(357.1,"%D",8,0)
	;;=block is sized and positioned to create a usable form.
	;;^DD(357.1,0)
	;;=FIELD^^4^15
	;;^DD(357.1,0,"DDA")
	;;=N
	;;^DD(357.1,0,"DIK")
	;;=IBDX1
	;;^DD(357.1,0,"DIKOLD")
	;;=IBDX1
	;;^DD(357.1,0,"DT")
	;;=2951002
	;;^DD(357.1,0,"ID",.02)
	;;=W ""
	;;^DD(357.1,0,"IX","B",357.1,.01)
	;;=
	;;^DD(357.1,0,"IX","C",357.1,.02)
	;;=
	;;^DD(357.1,0,"IX","D",357.1,.14)
	;;=
	;;^DD(357.1,0,"NM","ENCOUNTER FORM BLOCK")
	;;=
	;;^DD(357.1,0,"PT",357.2,.02)
	;;=
	;;^DD(357.1,0,"PT",357.5,.02)
	;;=
	;;^DD(357.1,0,"PT",357.7,.06)
	;;=
	;;^DD(357.1,0,"PT",357.8,.02)
	;;=
	;;^DD(357.1,0,"PT",357.93,.08)
	;;=
	;;^DD(357.1,0,"PT",358.94,.08)
	;;=
	;;^DD(357.1,0,"PT",359.94,.08)
	;;=
	;;^DD(357.1,.01,0)
	;;=NAME^RFX^^0;1^S X=$$UP^XLFSTR(X) K:$L(X)>30!($L(X)<3) X
	;;^DD(357.1,.01,1,0)
	;;=^.1
	;;^DD(357.1,.01,1,1,0)
	;;=357.1^B
	;;^DD(357.1,.01,1,1,1)
	;;=S ^IBE(357.1,"B",$E(X,1,30),DA)=""
	;;^DD(357.1,.01,1,1,2)
	;;=K ^IBE(357.1,"B",$E(X,1,30),DA)
	;;^DD(357.1,.01,3)
	;;=The block name must be 3-30 uppercase characters.
	;;^DD(357.1,.01,21,0)
	;;=^^3^3^2940610^^
	;;^DD(357.1,.01,21,1,0)
	;;= 
	;;^DD(357.1,.01,21,2,0)
	;;= 
	;;^DD(357.1,.01,21,3,0)
	;;=The name of the block.
	;;^DD(357.1,.01,"DEL",1,0)
	;;=I '$G(IBDEVICE("LISTMAN")) W "...Encounter Form Blocks can only be deleted through the Encounter Form Utilities!"
	;;^DD(357.1,.01,"DT")
	;;=2940725
	;;^DD(357.1,.02,0)
	;;=FORM^RP357'^IBE(357,^0;2^Q
	;;^DD(357.1,.02,1,0)
	;;=^.1
	;;^DD(357.1,.02,1,1,0)
	;;=357.1^C
	;;^DD(357.1,.02,1,1,1)
	;;=S ^IBE(357.1,"C",$E(X,1,30),DA)=""
	;;^DD(357.1,.02,1,1,2)
	;;=K ^IBE(357.1,"C",$E(X,1,30),DA)
	;;^DD(357.1,.02,1,1,"%D",0)
	;;=^^1^1^2921116^
	;;^DD(357.1,.02,1,1,"%D",1,0)
	;;=Used to find all the blocks belonging to a particular form.
	;;^DD(357.1,.02,1,1,"DT")
	;;=2921116
	;;^DD(357.1,.02,3)
	;;=What form should this block appear on?
	;;^DD(357.1,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.1,.02,21,1,0)
	;;= 
	;;^DD(357.1,.02,21,2,0)
	;;=The form the block appears on.
	;;^DD(357.1,.02,"DT")
	;;=2921116
	;;^DD(357.1,.04,0)
	;;=BLOCK'S STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.1,.04,.1)
	;;=WHAT ROW SHOULD THE BLOCK START IN?
	;;^DD(357.1,.04,2)
	;;=S Y(0)=Y S Y=(+Y)+1
	;;^DD(357.1,.04,2.1)
	;;=S Y=(+Y)+1
	;;^DD(357.1,.04,3)
	;;=What line should this block begin on?
	;;^DD(357.1,.04,21,0)
	;;=^^1^1^2940216^
	;;^DD(357.1,.04,21,1,0)
	;;=The row  on the encounter form that the block starts on.
	;;^DD(357.1,.04,23,0)
	;;=^^4^4^2940216^
	;;^DD(357.1,.04,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.1,.04,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.1,.04,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.1,.04,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.1,.04,"DT")
	;;=2930715
	;;^DD(357.1,.05,0)
	;;=BLOCK'S STARTING COLUMN^RNJ3,0XO^^0;5^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.1,.05,.1)
	;;=WHAT COLUMN SHOULD THE BLOCK START IN?
	;;^DD(357.1,.05,2)
	;;=S Y(0)=Y S Y=(+Y)+1
	;;^DD(357.1,.05,2.1)
	;;=S Y=(+Y)+1
	;;^DD(357.1,.05,3)
	;;=What column should this block begin on?
	;;^DD(357.1,.05,21,0)
	;;=^^1^1^2930715^^
	;;^DD(357.1,.05,21,1,0)
	;;=The column on the encounter form that the block starts on.
	;;^DD(357.1,.05,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.1,.05,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.1,.05,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.1,.05,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.1,.05,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.1,.05,"DT")
	;;=2930715

IBDIN00C
IBDIN00C	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.1,.06,0)
	;;=WIDTH IN CHARACTERS^RNJ3,0^^0;6^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.1,.06,.1)
	;;=HOW MANY CHARACTERS WIDE SHOULD THE BLOCK BE?
	;;^DD(357.1,.06,3)
	;;=How many characters wide should this block be?
	;;^DD(357.1,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.1,.06,21,1,0)
	;;= 
	;;^DD(357.1,.06,21,2,0)
	;;=The width of the block, measured in the number of characters across.
	;;^DD(357.1,.06,"DT")
	;;=2930415
	;;^DD(357.1,.07,0)
	;;=HEIGHT IN LINES^RNJ3,0^^0;7^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.1,.07,.1)
	;;=HOW MANY LINES HIGH SHOULD THE BLOCK BE?
	;;^DD(357.1,.07,3)
	;;=How many lines high should this block be?
	;;^DD(357.1,.07,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.1,.07,21,1,0)
	;;= 
	;;^DD(357.1,.07,21,2,0)
	;;=The height of the block, measured by the number of lines it takes up.
	;;^DD(357.1,.07,"DT")
	;;=2930415
	;;^DD(357.1,.1,0)
	;;=OUTLINE TYPE^RS^1:SOLID LINE;2:INVISIBLE;^0;10^Q
	;;^DD(357.1,.1,.1)
	;;=OUTLINE TYPE (SOLID/INVISIBLE)
	;;^DD(357.1,.1,3)
	;;=Enter '1' if the block should have a box around it, '2' if not.
	;;^DD(357.1,.1,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.1,.1,21,1,0)
	;;= 
	;;^DD(357.1,.1,21,2,0)
	;;=How the block is outlined on the form.
	;;^DD(357.1,.1,"DT")
	;;=2930415
	;;^DD(357.1,.11,0)
	;;=BLOCK HEADER^F^^0;11^K:$L(X)>60!($L(X)<1) X
	;;^DD(357.1,.11,.1)
	;;=WHAT HEADER SHOULD APPEAR AT THE TOP OF THE BLOCK? (OPTIONAL)
	;;^DD(357.1,.11,3)
	;;=What text should appear at the top of the block?
	;;^DD(357.1,.11,21,0)
	;;=^^2^2^2950927^^
	;;^DD(357.1,.11,21,1,0)
	;;= 
	;;^DD(357.1,.11,21,2,0)
	;;=The text appearing at the top of the block.
	;;^DD(357.1,.11,"DT")
	;;=2940216
	;;^DD(357.1,.12,0)
	;;=HEADER APPEARANCE^FX^^0;12^S X=$$UPPER^VALM1(X) K:$L(X)>4!("UBRC"'[$E(X,1))!("UBRC"'[$E(X,2))!("UBRC"'[$E(X,3))!("UBRC"'[$E(X,4)) X
	;;^DD(357.1,.12,.1)
	;;=HOW SHOULD THE BLOCK HEADER APPEAR? CHOOSE FROM {U,B,R,C}
	;;^DD(357.1,.12,3)
	;;=B=bold,U=underline,R=reverse,C=center. You can enter any combination of {B,U,R,C}.
	;;^DD(357.1,.12,21,0)
	;;=^^2^2^2940531^^^
	;;^DD(357.1,.12,21,1,0)
	;;= 
	;;^DD(357.1,.12,21,2,0)
	;;=This field determines the appearance of the block's header.
	;;^DD(357.1,.12,"DT")
	;;=2940531
	;;^DD(357.1,.13,0)
	;;=BRIEF DESCRIPTION^RF^^0;13^K:$L(X)>80!($L(X)<1) X
	;;^DD(357.1,.13,.1)
	;;=ENTER A BRIEF DESCRIPTION OF THE USE & CONTENTS OF THE BLOCK
	;;^DD(357.1,.13,3)
	;;=Answer must be 1-80 characters in length.
	;;^DD(357.1,.13,21,0)
	;;=^^2^2^2930607^
	;;^DD(357.1,.13,21,1,0)
	;;= 
	;;^DD(357.1,.13,21,2,0)
	;;=A brief description of the contents or use of the block.
	;;^DD(357.1,.13,"DT")
	;;=2930415
	;;^DD(357.1,.14,0)
	;;=TOOLKIT ORDER^NJ6,2^^0;14^K:+X'=X!(X>999.99)!(X<.01)!(X?.E1"."3N.N) X
	;;^DD(357.1,.14,1,0)
	;;=^.1
	;;^DD(357.1,.14,1,1,0)
	;;=357.1^D^MUMPS
	;;^DD(357.1,.14,1,1,1)
	;;=S:$P($G(^IBE(357,+$P(^IBE(357.1,DA,0),U,2),0)),U)="TOOL KIT" ^IBE(357.1,"D",$E(X,1,30),DA)=""
	;;^DD(357.1,.14,1,1,2)
	;;=K ^IBE(357.1,"D",$E(X,1,30),DA)
	;;^DD(357.1,.14,1,1,"%D",0)
	;;=^^2^2^2951023^
	;;^DD(357.1,.14,1,1,"%D",1,0)
	;;=This index is used to locate all the toolkit blocks that can be used
	;;^DD(357.1,.14,1,1,"%D",2,0)
	;;=as templates to create a new block to be added to a form.
	;;^DD(357.1,.14,1,1,"DT")
	;;=2951023
	;;^DD(357.1,.14,3)
	;;=Enter a number greater than 0 if this block is part of the toolkit. The number will determine its listed order.
	;;^DD(357.1,.14,21,0)
	;;=^^3^3^2950913^
	;;^DD(357.1,.14,21,1,0)
	;;=A number>0 in this field means that the block is part of the toolkit.
	;;^DD(357.1,.14,21,2,0)
	;;=The value determines the order that the block will be listed to the
	;;^DD(357.1,.14,21,3,0)
	;;=screen that displays the toolkit blocks.
	;;^DD(357.1,.14,"DT")
	;;=2951023
	;;^DD(357.1,1,0)
	;;=COMPILED STRINGS^357.11A^^S;0
	;;^DD(357.1,1,21,0)
	;;=^^3^3^2931117^^
	;;^DD(357.1,1,21,1,0)
	;;=Contains a compiled list of the calls, along with the arguments, that should
	;;^DD(357.1,1,21,2,0)
	;;=be made to the routine that prints strings to the form. Before printing, the
	;;^DD(357.1,1,21,3,0)
	;;=block offset is added to the string position.
	;;^DD(357.1,2,0)
	;;=COMPILED VERTICAL LINES^357.12A^^V;0
	;;^DD(357.1,2,21,0)
	;;=^^3^3^2940216^
	;;^DD(357.1,2,21,1,0)
	;;=A compiled list of the vertical lines that are needed to print the block.
	;;^DD(357.1,2,21,2,0)
	;;=The arguments to the routine that prints the line are included. The
	;;^DD(357.1,2,21,3,0)
	;;=block's offset is must be added to the line's position.
	;;^DD(357.1,3,0)
	;;=COMPILED BUBBLES^357.13^^B;0
	;;^DD(357.1,3,21,0)
	;;=^^3^3^2951017^^^^

IBDIN00D
IBDIN00D	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.1,3,21,1,0)
	;;=A compiled list of the bubbles appearing in the block. The arguments to the 
	;;^DD(357.1,3,21,2,0)
	;;=routine that prints the bubble are included. The block's offset must be added
	;;^DD(357.1,3,21,3,0)
	;;=to the bubbles position.
	;;^DD(357.1,4,0)
	;;=COMPILED HAND PRINT FIELDS^357.14^^H;0
	;;^DD(357.1,4,21,0)
	;;=^^3^3^2951017^
	;;^DD(357.1,4,21,1,0)
	;;=A compiled list of the hand print fields appearing in the block. The
	;;^DD(357.1,4,21,2,0)
	;;=arguments to the routine that prints the hand print fields are included.
	;;^DD(357.1,4,21,3,0)
	;;=The block's offset must be added to the hand print field's position.
	;;^DD(357.11,0)
	;;=COMPILED STRINGS SUB-FIELD^^.05^5
	;;^DD(357.11,0,"DIK")
	;;=IBDX1
	;;^DD(357.11,0,"DT")
	;;=2931115
	;;^DD(357.11,0,"IX","B",357.11,.01)
	;;=
	;;^DD(357.11,0,"NM","COMPILED STRINGS")
	;;=
	;;^DD(357.11,0,"UP")
	;;=357.1
	;;^DD(357.11,.01,0)
	;;=STRING ROW^NJ3,0^^0;1^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.11,.01,1,0)
	;;=^.1
	;;^DD(357.11,.01,1,1,0)
	;;=357.11^B
	;;^DD(357.11,.01,1,1,1)
	;;=S ^IBE(357.1,DA(1),"S","B",$E(X,1,30),DA)=""
	;;^DD(357.11,.01,1,1,2)
	;;=K ^IBE(357.1,DA(1),"S","B",$E(X,1,30),DA)
	;;^DD(357.11,.01,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.11,.01,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.11,.01,21,1,0)
	;;=The row that the string should be printed at.
	;;^DD(357.11,.01,"DT")
	;;=2931117
	;;^DD(357.11,.02,0)
	;;=COLUMN^RNJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.11,.02,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.11,.02,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.11,.02,21,1,0)
	;;=The column that the string should be printed at.
	;;^DD(357.11,.02,"DT")
	;;=2931115
	;;^DD(357.11,.03,0)
	;;=OPTIONS^F^^0;3^K:$L(X)>4!($L(X)<1) X
	;;^DD(357.11,.03,3)
	;;=Answer must be 1-4 characters in length.
	;;^DD(357.11,.03,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.11,.03,21,1,0)
	;;=The display characteristics that the string should have.
	;;^DD(357.11,.03,"DT")
	;;=2931115
	;;^DD(357.11,.04,0)
	;;=WIDTH^NJ3,0^^0;4^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.11,.04,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.11,.04,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.11,.04,21,1,0)
	;;=The width that the printed string should occupy. (optional)
	;;^DD(357.11,.04,"DT")
	;;=2931115
	;;^DD(357.11,.05,0)
	;;=STRING^F^^0;5^K:$L(X)>200!($L(X)<1) X
	;;^DD(357.11,.05,3)
	;;=Answer must be 1-200 characters in length.
	;;^DD(357.11,.05,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.11,.05,21,1,0)
	;;=The string that should be printed.
	;;^DD(357.11,.05,"DT")
	;;=2931115
	;;^DD(357.12,0)
	;;=COMPILED VERTICAL LINES SUB-FIELD^^.04^4
	;;^DD(357.12,0,"DIK")
	;;=IBDX1
	;;^DD(357.12,0,"DT")
	;;=2931117
	;;^DD(357.12,0,"IX","B",357.12,.01)
	;;=
	;;^DD(357.12,0,"NM","COMPILED VERTICAL LINES")
	;;=
	;;^DD(357.12,0,"UP")
	;;=357.1
	;;^DD(357.12,.01,0)
	;;=VERTICAL LINE ROW^NJ3,0^^0;1^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.12,.01,1,0)
	;;=^.1
	;;^DD(357.12,.01,1,1,0)
	;;=357.12^B
	;;^DD(357.12,.01,1,1,1)
	;;=S ^IBE(357.1,DA(1),"V","B",$E(X,1,30),DA)=""
	;;^DD(357.12,.01,1,1,2)
	;;=K ^IBE(357.1,DA(1),"V","B",$E(X,1,30),DA)
	;;^DD(357.12,.01,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.12,.01,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.12,.01,21,1,0)
	;;=The row that the line should begin at.
	;;^DD(357.12,.01,"DT")
	;;=2931117
	;;^DD(357.12,.02,0)
	;;=COLUMN^RNJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.12,.02,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.12,.02,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.12,.02,21,1,0)
	;;=The column that the line should begin at.
	;;^DD(357.12,.02,"DT")
	;;=2931117
	;;^DD(357.12,.03,0)
	;;=LENGTH^RNJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.12,.03,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.12,.03,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.12,.03,21,1,0)
	;;=The length of the line.
	;;^DD(357.12,.03,"DT")
	;;=2931117
	;;^DD(357.12,.04,0)
	;;=CHARACTER^F^^0;4^K:$L(X)>30!($L(X)<1) X
	;;^DD(357.12,.04,3)
	;;=Answer must be 1-30 characters in length.
	;;^DD(357.12,.04,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.12,.04,21,1,0)
	;;=The string (probably a single character) to use to create the string. (optional)
	;;^DD(357.12,.04,"DT")
	;;=2931117
	;;^DD(357.13,0)
	;;=COMPILED BUBBLES SUB-FIELD^^1^13
	;;^DD(357.13,0,"DIK")
	;;=IBDX1
	;;^DD(357.13,0,"DT")
	;;=2951002
	;;^DD(357.13,0,"IX","B",357.13,.01)
	;;=
	;;^DD(357.13,0,"NM","COMPILED BUBBLES")
	;;=
	;;^DD(357.13,0,"UP")
	;;=357.1
	;;^DD(357.13,.01,0)
	;;=ROW^MNJ3,0^^0;1^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X

IBDIN00E
IBDIN00E	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.13,.01,1,0)
	;;=^.1
	;;^DD(357.13,.01,1,1,0)
	;;=357.13^B
	;;^DD(357.13,.01,1,1,1)
	;;=S ^IBE(357.1,DA(1),"B",$E(X,1,30),DA)=""
	;;^DD(357.13,.01,1,1,2)
	;;=K ^IBE(357.1,DA(1),"B",$E(X,1,30),DA)
	;;^DD(357.13,.01,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.13,.01,"DT")
	;;=2940613
	;;^DD(357.13,.02,0)
	;;=COLUMN^RNJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.13,.02,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.13,.02,"DT")
	;;=2940613
	;;^DD(357.13,.03,0)
	;;=TYPE OF DATA^*P357.6'^IBE(357.6,^0;3^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(357.13,.03,3)
	;;=What type of data does the bubble represent?
	;;^DD(357.13,.03,12)
	;;=Must be an available package for accepting input.
	;;^DD(357.13,.03,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1"
	;;^DD(357.13,.03,21,0)
	;;=^^2^2^2940725^^^^
	;;^DD(357.13,.03,21,1,0)
	;;=The value associated with the bubble is passed to the package interface
	;;^DD(357.13,.03,21,2,0)
	;;=to pass the data to DHCP.
	;;^DD(357.13,.03,"DT")
	;;=2950912
	;;^DD(357.13,.04,0)
	;;=VALUE^F^^0;4^K:$L(X)>30!($L(X)<1) X
	;;^DD(357.13,.04,3)
	;;=Answer must be 1-30 characters in length.
	;;^DD(357.13,.04,"DT")
	;;=2940613
	;;^DD(357.13,.05,0)
	;;=FIELD NAME^RF^^0;5^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.13,.05,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.13,.05,"DT")
	;;=2940823
	;;^DD(357.13,.06,0)
	;;=FIELD ID^RF^^0;6^K:$L(X)>10!($L(X)<2) X
	;;^DD(357.13,.06,3)
	;;=Answer must be 2-10 characters in length.
	;;^DD(357.13,.06,"DT")
	;;=2940823
	;;^DD(357.13,.07,0)
	;;=SELECTION RULE^RS^0:ANY NUMBER;1:EXACTLY ONE;2:AT MOST ONE;3:AT LEAST ONE;^0;7^Q
	;;^DD(357.13,.07,3)
	;;=How should the user be allowed to select from the available choices?
	;;^DD(357.13,.07,"DT")
	;;=2940823
	;;^DD(357.13,.08,0)
	;;=DISPLAYED TEXT^RF^^0;8^K:$L(X)>100!($L(X)<1) X
	;;^DD(357.13,.08,3)
	;;=Answer must be 1-100 characters in length.
	;;^DD(357.13,.08,"DT")
	;;=2941019
	;;^DD(357.13,.09,0)
	;;=DISPLAYED HEADER^F^^0;9^K:$L(X)>40!($L(X)<1) X
	;;^DD(357.13,.09,3)
	;;=Answer must be 1-40 characters in length.
	;;^DD(357.13,.09,"DT")
	;;=2941019
	;;^DD(357.13,.1,0)
	;;=DATA QUALIFIER^P357.98'^IBD(357.98,^0;10^Q
	;;^DD(357.13,.1,3)
	;;=What data qualifier, if any, applies to the data indicated by this bubble?
	;;^DD(357.13,.1,"DT")
	;;=2941019
	;;^DD(357.13,.11,0)
	;;=DYNAMIC?^S^0:NO;1:YES;^0;11^Q
	;;^DD(357.13,.11,3)
	;;=Enter YES if the data associated with the a bubble is stored in Form Tracking.
	;;^DD(357.13,.11,"DT")
	;;=2950126
	;;^DD(357.13,.12,0)
	;;=ITEM COUNT^NJ3,0^^0;12^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.13,.12,3)
	;;=In what sequence does this item occur on the list?
	;;^DD(357.13,.12,"DT")
	;;=2950313
	;;^DD(357.13,1,0)
	;;=SUBHEADER^F^^1;1^K:$L(X)>250!($L(X)<1) X
	;;^DD(357.13,1,3)
	;;=Answer must be 1-250 characters in length.
	;;^DD(357.13,1,21,0)
	;;=^^2^2^2951002^
	;;^DD(357.13,1,21,1,0)
	;;=The subheader will be concatenated with the narrative before passing it to
	;;^DD(357.13,1,21,2,0)
	;;=PCE.
	;;^DD(357.13,1,"DT")
	;;=2951002
	;;^DD(357.14,0)
	;;=COMPILED HAND PRINT FIELDS SUB-FIELD^^.01^13
	;;^DD(357.14,0,"DIK")
	;;=IBDX1
	;;^DD(357.14,0,"DT")
	;;=2950724
	;;^DD(357.14,0,"IX","B",357.14,.01)
	;;=
	;;^DD(357.14,0,"NM","COMPILED HAND PRINT FIELDS")
	;;=
	;;^DD(357.14,0,"UP")
	;;=357.1
	;;^DD(357.14,.01,0)
	;;=ROW FOR HAND PRINT^MNJ3,0^^0;1^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.14,.01,1,0)
	;;=^.1
	;;^DD(357.14,.01,1,1,0)
	;;=357.14^B
	;;^DD(357.14,.01,1,1,1)
	;;=S ^IBE(357.1,DA(1),"H","B",$E(X,1,30),DA)=""
	;;^DD(357.14,.01,1,1,2)
	;;=K ^IBE(357.1,DA(1),"H","B",$E(X,1,30),DA)
	;;^DD(357.14,.01,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.14,.01,"DT")
	;;=2940725
	;;^DD(357.14,.02,0)
	;;=COLUMN FOR HAND PRINT^RNJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.14,.02,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.14,.02,"DT")
	;;=2940725
	;;^DD(357.14,.03,0)
	;;=WIDTH^RNJ3,0^^0;3^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.14,.03,3)
	;;=Type a Number between 1 and 200, 0 Decimal Digits
	;;^DD(357.14,.03,"DT")
	;;=2940725
	;;^DD(357.14,.04,0)
	;;=TYPE OF DATA^R*P357.6'^IBE(357.6,^0;4^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(357.14,.04,3)
	;;=What data will be printed to this field?
	;;^DD(357.14,.04,12)
	;;=Allows only available interfaces for accepting input.
	;;^DD(357.14,.04,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1"

IBDIN00F
IBDIN00F	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.14,.04,"DT")
	;;=2950912
	;;^DD(357.14,.06,0)
	;;=NUMBER OF HAND PRINT LINES^RNJ3,0^^0;6^K:+X'=X!(X>100)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.14,.06,3)
	;;=How many lines of hand print?
	;;^DD(357.14,.06,"DT")
	;;=2940816
	;;^DD(357.14,.07,0)
	;;=FIELD ID^RF^^0;7^K:$L(X)>10!($L(X)<2) X
	;;^DD(357.14,.07,3)
	;;=Answer must be 2-10 characters in length.
	;;^DD(357.14,.07,21,0)
	;;=^^1^1^2940912^
	;;^DD(357.14,.07,21,1,0)
	;;=Identifies the form block object that contains the print field.
	;;^DD(357.14,.07,"DT")
	;;=2940912
	;;^DD(357.14,.08,0)
	;;=FIELD NAME^RF^^0;8^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.14,.08,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.14,.08,21,0)
	;;=^^1^1^2940912^
	;;^DD(357.14,.08,21,1,0)
	;;=The name of the form block object that contains the print field.
	;;^DD(357.14,.08,"DT")
	;;=2950427
	;;^DD(357.14,.09,0)
	;;=DISPLAYED HEADER^F^^0;9^K:$L(X)>40!($L(X)<1) X
	;;^DD(357.14,.09,3)
	;;=Answer must be 1-40 characters in length.
	;;^DD(357.14,.09,"DT")
	;;=2941019
	;;^DD(357.14,.1,0)
	;;=DATA QUALIFIER^P357.98'^IBD(357.98,^0;10^Q
	;;^DD(357.14,.1,3)
	;;=What data qualifier, if any, applies to data entered in this field?
	;;^DD(357.14,.1,"DT")
	;;=2941019
	;;^DD(357.14,.12,0)
	;;=ITEM NUMBER^NJ3,0^^0;12^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.14,.12,3)
	;;=Type a Number between 1 and 999, 0 Decimal Digits
	;;^DD(357.14,.12,"DT")
	;;=2950427
	;;^DD(357.14,.14,0)
	;;=PRINT?^S^0:NO, DO NOT PRINT;1:YES, NOT FOR ICR;2:YES, FOR ICR;^0;14^Q
	;;^DD(357.14,.14,"DT")
	;;=2950427
	;;^DD(357.14,.15,0)
	;;=READ?^S^0:NO, DO NOT READ;1:YES, READ WITHOUT ICR;2:YES, READ WITH ICR;3:YES, ICR PRINT FORMAT, READ WITHOUT ICR;^0;15^Q
	;;^DD(357.14,.15,"DT")
	;;=2950503
	;;^DD(357.14,.17,0)
	;;=DATA ELEMENT^P359.1'^IBE(359.1,^0;17^Q
	;;^DD(357.14,.17,"DT")
	;;=2950427

IBDIN00G
IBDIN00G	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.2,0,"GL")
	;;=^IBE(357.2,
	;;^DIC("B","SELECTION LIST",357.2)
	;;=
	;;^DIC(357.2,"%D",0)
	;;=^^10^10^2951102^^^^
	;;^DIC(357.2,"%D",1,0)
	;;= 
	;;^DIC(357.2,"%D",2,0)
	;;= 
	;;^DIC(357.2,"%D",3,0)
	;;= 
	;;^DIC(357.2,"%D",4,0)
	;;= 
	;;^DIC(357.2,"%D",5,0)
	;;= 
	;;^DIC(357.2,"%D",6,0)
	;;=This file contains descriptions of 'selection lists'.  A selection list is
	;;^DIC(357.2,"%D",7,0)
	;;=a rectangular area in a block that contains a list. The list has 'columns'
	;;^DIC(357.2,"%D",8,0)
	;;=of 'selections'. The columns have 'subcolumns', which can either contain
	;;^DIC(357.2,"%D",9,0)
	;;=text or  a 'marking area'.  A marking area is an area on the form designed
	;;^DIC(357.2,"%D",10,0)
	;;=to be checked to indicate that a choice is being made from the list.
	;;^DD(357.2,0)
	;;=FIELD^^.18^18
	;;^DD(357.2,0,"DDA")
	;;=N
	;;^DD(357.2,0,"DIK")
	;;=IBDX2
	;;^DD(357.2,0,"DIKOLD")
	;;=IBDX2
	;;^DD(357.2,0,"DT")
	;;=2950424
	;;^DD(357.2,0,"ID",.02)
	;;=W ""
	;;^DD(357.2,0,"ID",.11)
	;;=W ""
	;;^DD(357.2,0,"ID","WRITE")
	;;=N IBDBLK S IBDBLK=+$P(^(0),U,2) W "   Block: ",$P($G(^IBE(357.1,IBDBLK,0)),U),"   Form: "_$P($G(^IBE(357,+$P($G(^IBE(357.1,IBDBLK,0)),U,2),0)),U)
	;;^DD(357.2,0,"IX","AC",357.2,.11)
	;;=
	;;^DD(357.2,0,"IX","AD",357.2,.14)
	;;=
	;;^DD(357.2,0,"IX","B",357.2,.01)
	;;=
	;;^DD(357.2,0,"IX","C",357.2,.02)
	;;=
	;;^DD(357.2,0,"NM","SELECTION LIST")
	;;=
	;;^DD(357.2,0,"PT",357.3,.03)
	;;=
	;;^DD(357.2,0,"PT",357.4,.03)
	;;=
	;;^DD(357.2,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.2,.01,1,0)
	;;=^.1
	;;^DD(357.2,.01,1,1,0)
	;;=357.2^B
	;;^DD(357.2,.01,1,1,1)
	;;=S ^IBE(357.2,"B",$E(X,1,30),DA)=""
	;;^DD(357.2,.01,1,1,2)
	;;=K ^IBE(357.2,"B",$E(X,1,30),DA)
	;;^DD(357.2,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.2,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.2,.01,21,1,0)
	;;= 
	;;^DD(357.2,.01,21,2,0)
	;;=The name of the list.
	;;^DD(357.2,.01,"DEL",1,0)
	;;=I '$G(IBDEVICE("LISTMAN"))!($G(IBDELETE)) W "...Selection Lists can only be deleted through the Encounter Form Utilities!"
	;;^DD(357.2,.01,"DT")
	;;=2921119
	;;^DD(357.2,.02,0)
	;;=BLOCK^RP357.1'^IBE(357.1,^0;2^Q
	;;^DD(357.2,.02,1,0)
	;;=^.1
	;;^DD(357.2,.02,1,1,0)
	;;=357.2^C
	;;^DD(357.2,.02,1,1,1)
	;;=S ^IBE(357.2,"C",$E(X,1,30),DA)=""
	;;^DD(357.2,.02,1,1,2)
	;;=K ^IBE(357.2,"C",$E(X,1,30),DA)
	;;^DD(357.2,.02,1,1,"DT")
	;;=2921207
	;;^DD(357.2,.02,3)
	;;=Enter the block that the selection list should appear in.
	;;^DD(357.2,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.2,.02,21,1,0)
	;;=The block that the list appears on. The position of the selection list is
	;;^DD(357.2,.02,21,2,0)
	;;=relative to the block.
	;;^DD(357.2,.02,"DT")
	;;=2921207
	;;^DD(357.2,.04,0)
	;;=SUBCOLUMN HEADER APPEARANCE^FX^^0;4^S X=$$UPPER^VALM1(X) K:$L(X)>1!("R"'[$E(X,1)) X
	;;^DD(357.2,.04,.1)
	;;=HOW SHOULD THE SUBCOLUMN HEADERS APPEAR? ENTER 'R' FOR REVERSE PRINTING.
	;;^DD(357.2,.04,3)
	;;=R=Reverse Printing
	;;^DD(357.2,.04,21,0)
	;;=^^2^2^2950808^
	;;^DD(357.2,.04,21,1,0)
	;;=Allows the form designer to select the appearance of the subcolumn
	;;^DD(357.2,.04,21,2,0)
	;;=headers.
	;;^DD(357.2,.04,"DT")
	;;=2940531
	;;^DD(357.2,.05,0)
	;;=COLUMN HEADER^F^^0;5^K:$L(X)>70!($L(X)<1) X
	;;^DD(357.2,.05,.1)
	;;=WHAT TEXT SHOULD APPEAR AT THE TOP OF EACH COLUMN? (OPTIONAL)
	;;^DD(357.2,.05,3)
	;;=This header will appear at the top of the column that contains the list. If there is more than one column it will appear at the top of each.
	;;^DD(357.2,.05,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.2,.05,21,1,0)
	;;= 
	;;^DD(357.2,.05,21,2,0)
	;;=The text that appears at the top of each column (NOT subcolumn).
	;;^DD(357.2,.05,"DT")
	;;=2930415
	;;^DD(357.2,.06,0)
	;;=COLUMN HEADER APPEARANCE^FX^^0;6^S X=$$UPPER^VALM1(X) K:$L(X)>4!("UBRCS"'[$E(X,1))!("UBRCS"'[$E(X,2))!("UBRCS"'[$E(X,3))!("UBRCS"'[$E(X,4)) X
	;;^DD(357.2,.06,.1)
	;;=HOW SHOULD THE COLUMN HEADER APPEAR? CHOOSE FROM {U,B,R,C,S}
	;;^DD(357.2,.06,3)
	;;=B=bold,U=underline,R=reverse,C=center,S=shade. You can enter any combination of {B,U,R,C,S}.
	;;^DD(357.2,.06,21,0)
	;;=^^2^2^2950420^^^^
	;;^DD(357.2,.06,21,1,0)
	;;= 
	;;^DD(357.2,.06,21,2,0)
	;;=The column header can be give characteristics, such as centered and bold.
	;;^DD(357.2,.06,"DT")
	;;=2950420
	;;^DD(357.2,.07,0)
	;;=SUBCOLUMNS SEPARATED WITH?^RS^1:ONE SPACE;2:TWO SPACES;3:LINE;4:SPACE/LINE/SPACE;^0;7^Q
	;;^DD(357.2,.07,.1)
	;;=HOW SHOULD THE SUBCOLUMNS BE SEPARATED?
	;;^DD(357.2,.07,3)
	;;=How should the subcolumns be separated?
	;;^DD(357.2,.07,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.2,.07,21,1,0)
	;;= 
	;;^DD(357.2,.07,21,2,0)
	;;=What characters are used to separate the subcolumns.

IBDIN00H
IBDIN00H	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.2,.07,"DT")
	;;=2930415
	;;^DD(357.2,.08,0)
	;;=EXTRA LINES FOR SELECTIONS^NJ1,0^^0;8^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.2,.08,.1)
	;;=NUMBER OF ADDITIONAL LINES FOR EACH ENTRY ON LIST?
	;;^DD(357.2,.08,3)
	;;=How many extra lines should be allocated for each selection, in addition to the 1 the selection will print on?
	;;^DD(357.2,.08,21,0)
	;;=^^4^4^2930527^
	;;^DD(357.2,.08,21,1,0)
	;;= 
	;;^DD(357.2,.08,21,2,0)
	;;=Each entry on the list prints on only one line. However, if you want
	;;^DD(357.2,.08,21,3,0)
	;;=extra space to appear below each entry on the list then this field should
	;;^DD(357.2,.08,21,4,0)
	;;=be set to the number of blank lines desired.
	;;^DD(357.2,.08,"DT")
	;;=2930427
	;;^DD(357.2,.09,0)
	;;=GROUP HEADER APPEARANCE^FX^^0;9^S X=$$UPPER^VALM1(X) K:$L(X)>4!("UBSC"'[$E(X,1))!("UBSC"'[$E(X,2))!("UBSC"'[$E(X,3))!("UBUC"'[$E(X,4)) X
	;;^DD(357.2,.09,.1)
	;;=HOW SHOULD THE HEADER FOR EACH GROUP OF ENTRIES APPEAR? CHOOSE FROM {U,B,S,C}
	;;^DD(357.2,.09,3)
	;;=B=bold,S=shade,C=center,U=underline. You can use any combination of {B,S,C,U}
	;;^DD(357.2,.09,21,0)
	;;=^^1^1^2950419^^^^
	;;^DD(357.2,.09,21,1,0)
	;;=This field determines the appearance of the group headers.
	;;^DD(357.2,.09,"DT")
	;;=2950419
	;;^DD(357.2,.11,0)
	;;=SELECTION INTERFACE^R*P357.6'^IBE(357.6,^0;11^S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(357.2,.11,1,0)
	;;=^.1
	;;^DD(357.2,.11,1,1,0)
	;;=357.2^AC^MUMPS
	;;^DD(357.2,.11,1,1,1)
	;;=S:X $P(^IBE(357.2,DA,0),U,14)=+$P($G(^IBE(357.6,X,0)),U,14) S:$P(^IBE(357.2,DA,0),U,14)&$P(^IBE(357.2,DA,0),U,2) ^IBE(357.2,"AD",$P(^IBE(357.2,DA,0),U,2),DA)=""
	;;^DD(357.2,.11,1,1,2)
	;;=Q
	;;^DD(357.2,.11,1,1,"%D",0)
	;;=^^2^2^2950623^^^
	;;^DD(357.2,.11,1,1,"%D",1,0)
	;;=Automatically sets the DYNAMIC SELECTIONS field and the "AD"
	;;^DD(357.2,.11,1,1,"%D",2,0)
	;;=cross-reference.
	;;^DD(357.2,.11,1,1,"DT")
	;;=2950619
	;;^DD(357.2,.11,3)
	;;=Enter the package interface used to obtain this list.
	;;^DD(357.2,.11,12)
	;;=Allows only available selection interfaces.
	;;^DD(357.2,.11,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1"
	;;^DD(357.2,.11,21,0)
	;;=^^2^2^2950825^^
	;;^DD(357.2,.11,21,1,0)
	;;= 
	;;^DD(357.2,.11,21,2,0)
	;;=This identifies the Package Interface that is used to fill the list.
	;;^DD(357.2,.11,"DT")
	;;=2950825
	;;^DD(357.2,.12,0)
	;;=UNDERLINE SELECTIONS?^RS^0:NO;1:YES;^0;12^Q
	;;^DD(357.2,.12,.1)
	;;=SHOULD EACH ENTRY ON THE LIST BE UNDERLINED? (YES/NO)
	;;^DD(357.2,.12,3)
	;;=Should the items on the list be underlined?
	;;^DD(357.2,.12,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.2,.12,21,1,0)
	;;= 
	;;^DD(357.2,.12,21,2,0)
	;;=Answer yes if each entry on the list should be underlined.
	;;^DD(357.2,.12,"DT")
	;;=2930414
	;;^DD(357.2,.13,0)
	;;=NUMBER OF COLUMNS^NJ2,0^^0;13^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.2,.13,.1)
	;;=HOW MANY COLUMNS OF LIST ENTRIES SHOULD THE LIST HAVE? (OPTIONAL)
	;;^DD(357.2,.13,3)
	;;=
	;;^DD(357.2,.13,4)
	;;=D HELP5^IBDFU5
	;;^DD(357.2,.13,21,0)
	;;=^^6^6^2930527^
	;;^DD(357.2,.13,21,1,0)
	;;= 
	;;^DD(357.2,.13,21,2,0)
	;;=A selection list may be displayed in an area several columns wide. The
	;;^DD(357.2,.13,21,3,0)
	;;=starting position and height of each column may be specified. However, it
	;;^DD(357.2,.13,21,4,0)
	;;=is not necessary because defaults values will be used. The defaults used
	;;^DD(357.2,.13,21,5,0)
	;;=assume that nothing else is going in the block except the selection list
	;;^DD(357.2,.13,21,6,0)
	;;=and that the entire block should be filled.
	;;^DD(357.2,.13,"DT")
	;;=2930802
	;;^DD(357.2,.14,0)
	;;=DYNAMIC SELECTIONS^SX^0:NO;1:YES;^0;14^K X
	;;^DD(357.2,.14,1,0)
	;;=^.1
	;;^DD(357.2,.14,1,1,0)
	;;=357.2^AD^MUMPS
	;;^DD(357.2,.14,1,1,1)
	;;=S:X&$P($G(^IBE(357.2,DA,0)),U,2) ^IBE(357.2,"AD",$P($G(^IBE(357.2,DA,0)),U,2),DA)=""
	;;^DD(357.2,.14,1,1,2)
	;;=K:X&$P($G(^IBE(357.2,DA,0)),U,2) ^IBE(357.2,"AD",$P($G(^IBE(357.2,DA,0)),U,2),DA)
	;;^DD(357.2,.14,1,1,"%D",0)
	;;=^^1^1^2950719^
	;;^DD(357.2,.14,1,1,"%D",1,0)
	;;=Allows all the dynamic selection lists to be found for the block.
	;;^DD(357.2,.14,1,1,"DT")
	;;=2941221
	;;^DD(357.2,.14,3)
	;;=Answer YES if the list of selections is created at print time.
	;;^DD(357.2,.14,21,0)
	;;=^^2^2^2950808^
	;;^DD(357.2,.14,21,1,0)
	;;=This is used to flag the list as being created at print time as opposed to
	;;^DD(357.2,.14,21,2,0)
	;;=design time.
	;;^DD(357.2,.14,"DT")
	;;=2941221
	;;^DD(357.2,.15,0)
	;;=PRINT COMPLETE^S^0:NO;1:YES;^0;15^Q
	;;^DD(357.2,.15,.1)
	;;=SHOULD THE LIST PRINT ON A SEPARATE PAGE IF IT DOES NOT FIT ON THE FORM?

IBDIN00I
IBDIN00I	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.2,.15,3)
	;;=If the data on the list won't fit on the form, should it be printed on a separate page?
	;;^DD(357.2,.15,21,0)
	;;=^^3^3^2950414^
	;;^DD(357.2,.15,21,1,0)
	;;=Applies only to dynamic selection lists. This controls the overflow behavior
	;;^DD(357.2,.15,21,2,0)
	;;=of the list. YES means that if the data on the list does not fit, it should
	;;^DD(357.2,.15,21,3,0)
	;;=be printed on a separate page.
	;;^DD(357.2,.15,"DT")
	;;=2950414
	;;^DD(357.2,.16,0)
	;;=NUMBER OF OTHER^NJ1,0^^0;16^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.2,.16,.1)
	;;=HOW MANY 'OTHER' DO YOU WANT TO ALLOCATE SPACE FOR?
	;;^DD(357.2,.16,3)
	;;=Allocate space for how many 'other' not found on the list?
	;;^DD(357.2,.16,21,0)
	;;=^^2^2^2950503^^
	;;^DD(357.2,.16,21,1,0)
	;;=Space will be allocated at the bottom of the selection list for the user
	;;^DD(357.2,.16,21,2,0)
	;;=to enter this number of items not found on the list.
	;;^DD(357.2,.16,"DT")
	;;=2950424
	;;^DD(357.2,.17,0)
	;;=WHAT TO ALLOCATE SPACE FOR^S^1:NARRATIVE ONLY;2:CODE ONLY;3:NARRATIVE AND CODE;^0;17^Q
	;;^DD(357.2,.17,.1)
	;;=WHAT SHOULD SPACE BE ALLOCATED FOR IN 'OTHER'?
	;;^DD(357.2,.17,3)
	;;=What should space be allocated for when making room for 'other'?
	;;^DD(357.2,.17,21,0)
	;;=^^2^2^2950718^^
	;;^DD(357.2,.17,21,1,0)
	;;=This field determines what fields to place on the form for writting in
	;;^DD(357.2,.17,21,2,0)
	;;=other items not found on the list.
	;;^DD(357.2,.17,"DT")
	;;=2950426
	;;^DD(357.2,.18,0)
	;;=WHAT TO SEND TO PCE^S^1:NARRATIVE ONLY;2:CODE ONLY;3:NARRATIVE AND CODE;^0;18^Q
	;;^DD(357.2,.18,.1)
	;;=WHAT DO YOU WANT ENTERED TO THE DATABASE?
	;;^DD(357.2,.18,3)
	;;=WHAT DO YOU WANT ENTERED INTO THE DATABASE?
	;;^DD(357.2,.18,21,0)
	;;=^^2^2^2950927^^
	;;^DD(357.2,.18,21,1,0)
	;;=This determines what is sent to PCE. For example, some types of data may
	;;^DD(357.2,.18,21,2,0)
	;;=require that a code be sent, but the narrative may be optional.
	;;^DD(357.2,.18,"DT")
	;;=2950424
	;;^DD(357.2,1,0)
	;;=LIST COLUMN^357.21IA^^1;0
	;;^DD(357.2,1,21,0)
	;;=^^2^2^2950421^^^^
	;;^DD(357.2,1,21,1,0)
	;;=A column is a rectangular area that has the necessary width to display a
	;;^DD(357.2,1,21,2,0)
	;;=single item on the list.
	;;^DD(357.2,1,"DT")
	;;=2930802
	;;^DD(357.2,2,0)
	;;=SUBCOLUMN NUMBER^357.22I^^2;0
	;;^DD(357.2,2,21,0)
	;;=^^4^4^2950308^
	;;^DD(357.2,2,21,1,0)
	;;= 
	;;^DD(357.2,2,21,2,0)
	;;=A subcolumn contains one field of the entry on the list. The subcolumn
	;;^DD(357.2,2,21,3,0)
	;;=order is the order, from left to right, that the subcolumns will appear
	;;^DD(357.2,2,21,4,0)
	;;=in.
	;;^DD(357.2,2,"DT")
	;;=2930413
	;;^DD(357.21,0)
	;;=LIST COLUMN SUB-FIELD^^.04^4
	;;^DD(357.21,0,"DIK")
	;;=IBDX2
	;;^DD(357.21,0,"DT")
	;;=2930331
	;;^DD(357.21,0,"ID","WRITE")
	;;=W "  COLUMN #",$P($G(^(0)),U)
	;;^DD(357.21,0,"IX","B",357.21,.01)
	;;=
	;;^DD(357.21,0,"NM","LIST COLUMN")
	;;=
	;;^DD(357.21,0,"UP")
	;;=357.2
	;;^DD(357.21,.01,0)
	;;=LIST COLUMN NUMBER^MNJ1,0^^0;1^K:+X'=X!(X>4)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.21,.01,1,0)
	;;=^.1
	;;^DD(357.21,.01,1,1,0)
	;;=357.21^B
	;;^DD(357.21,.01,1,1,1)
	;;=S ^IBE(357.2,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(357.21,.01,1,1,2)
	;;=K ^IBE(357.2,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(357.21,.01,3)
	;;=You can specify the position and height of up to 4 columns. Defaults will be used where needed.
	;;^DD(357.21,.01,21,0)
	;;=^^2^2^2950421^^^^
	;;^DD(357.21,.01,21,1,0)
	;;=The order that the columns will be filled. Column 1 will first be filled
	;;^DD(357.21,.01,21,2,0)
	;;=with items, then column 2, etc.
	;;^DD(357.21,.01,"DT")
	;;=2930802
	;;^DD(357.21,.02,0)
	;;=LIST COLUMN'S STARTING ROW^NJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.21,.02,.1)
	;;=WHAT ROW SHOULD THE LIST COLUMN START IN? (OPTIONAL)
	;;^DD(357.21,.02,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(357.21,.02,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(357.21,.02,3)
	;;=What row should the column begin in?
	;;^DD(357.21,.02,21,0)
	;;=^^2^2^2930715^^^
	;;^DD(357.21,.02,21,1,0)
	;;=The row, relative to the block, that the column should begin in. This is
	;;^DD(357.21,.02,21,2,0)
	;;=optional, since default values can be used.
	;;^DD(357.21,.02,23,0)
	;;=^^4^4^2930715^^
	;;^DD(357.21,.02,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.21,.02,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.21,.02,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.21,.02,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.

IBDIN00J
IBDIN00J	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.21,.02,"DT")
	;;=2930802
	;;^DD(357.21,.03,0)
	;;=LIST COLUMN'S STARTING COLUMN^NJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.21,.03,.1)
	;;=WHAT BLOCK COLUMN SHOULD THE LIST COLUMN START IN? (OPTIONAL)
	;;^DD(357.21,.03,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(357.21,.03,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(357.21,.03,3)
	;;=At what block column should the list column begin at? The first subcolumn of the list column will start one character to the right of this.
	;;^DD(357.21,.03,21,0)
	;;=^^4^4^2940216^
	;;^DD(357.21,.03,21,1,0)
	;;= 
	;;^DD(357.21,.03,21,2,0)
	;;=The column (# of characters to the right) that the list column should
	;;^DD(357.21,.03,21,3,0)
	;;=begin in, relative to the block. It is optional, since a default value can
	;;^DD(357.21,.03,21,4,0)
	;;=be used.
	;;^DD(357.21,.03,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.21,.03,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.21,.03,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.21,.03,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.21,.03,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.21,.03,"DT")
	;;=2930930
	;;^DD(357.21,.04,0)
	;;=LIST COLUMN HEIGHT^NJ3,0^^0;4^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.21,.04,.1)
	;;=HOW MANY LINES HIGH SHOULD THE LIST COLUMN BE? (OPTIONAL)
	;;^DD(357.21,.04,3)
	;;=How many lines should the column cover?
	;;^DD(357.21,.04,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.21,.04,21,1,0)
	;;= 
	;;^DD(357.21,.04,21,2,0)
	;;=The number of lines the column should occupy. This is optional - if not
	;;^DD(357.21,.04,21,3,0)
	;;=supplied the column will extend to the bottom of the block.
	;;^DD(357.21,.04,"DT")
	;;=2930802
	;;^DD(357.22,0)
	;;=SUBCOLUMN NUMBER SUB-FIELD^^.1^10
	;;^DD(357.22,0,"DIK")
	;;=IBDX2
	;;^DD(357.22,0,"DT")
	;;=2941209
	;;^DD(357.22,0,"ID","WRITE")
	;;=D ID1^IBDFU5
	;;^DD(357.22,0,"IX","B",357.22,.01)
	;;=
	;;^DD(357.22,0,"NM","SUBCOLUMN NUMBER")
	;;=
	;;^DD(357.22,0,"UP")
	;;=357.2
	;;^DD(357.22,.01,0)
	;;=SUBCOLUMN NUMBER^MRNJ1,0X^^0;1^K:+X'=X!(X>8)!(X<1)!(X?.E1"."1N.N)!($D(^IBE(357.2,DA(1),2,"B",X))) X
	;;^DD(357.22,.01,.1)
	;;=Number of the subcolumn, subcolumns being numbered 1-8, left-to-right
	;;^DD(357.22,.01,1,0)
	;;=^.1
	;;^DD(357.22,.01,1,1,0)
	;;=357.22^B
	;;^DD(357.22,.01,1,1,1)
	;;=S ^IBE(357.2,DA(1),2,"B",$E(X,1,30),DA)=""
	;;^DD(357.22,.01,1,1,2)
	;;=K ^IBE(357.2,DA(1),2,"B",$E(X,1,30),DA)
	;;^DD(357.22,.01,3)
	;;=The SUBCOLUMN NUMBER determines the order in which the subcolumns will display. There are at most 8 subcolumns, numbered 1-8.
	;;^DD(357.22,.01,21,0)
	;;=^^2^2^2950308^
	;;^DD(357.22,.01,21,1,0)
	;;= 
	;;^DD(357.22,.01,21,2,0)
	;;=The order that the subcolumn will appear on the form.
	;;^DD(357.22,.01,"DT")
	;;=2950308
	;;^DD(357.22,.02,0)
	;;=SUBCOLUMN HEADER^F^^0;2^K:$L(X)>150!($L(X)<1) X
	;;^DD(357.22,.02,.1)
	;;=WHAT TEXT SHOULD APPEAR AT THE TOP OF THE SUBCOLUMN?
	;;^DD(357.22,.02,3)
	;;=What text should appear at the top of the subcolumn?
	;;^DD(357.22,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.22,.02,21,1,0)
	;;= 
	;;^DD(357.22,.02,21,2,0)
	;;=The text that will appear at the top of the subcolumn.
	;;^DD(357.22,.02,"DT")
	;;=2930414
	;;^DD(357.22,.03,0)
	;;=SUBCOLUMN WIDTH^NJ3,0^^0;3^K:+X'=X!(X>150)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.22,.03,.1)
	;;=HOW WIDE SHOULD THE SUBCOLUMN BE?
	;;^DD(357.22,.03,3)
	;;=How wide should the subcolumn be?
	;;^DD(357.22,.03,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.22,.03,21,1,0)
	;;= 
	;;^DD(357.22,.03,21,2,0)
	;;=The width of the subcolumn. If the subcolumn contains a MARKING AREA then
	;;^DD(357.22,.03,21,3,0)
	;;=the width of the MARKING AREA overrides what ever this is.
	;;^DD(357.22,.03,"DT")
	;;=2930414
	;;^DD(357.22,.04,0)
	;;=TYPE OF SUBCOLUMN^RS^1:TEXT;2:MARKING;^0;4^Q
	;;^DD(357.22,.04,.1)
	;;=SUBCOLUMN CONTAINS TEXT, OR FOR MARKING? (TEXT/MARKING)
	;;^DD(357.22,.04,3)
	;;=Enter '1' if the subcolumn will contain text, '2' if it will be for the user to mark his selections.
	;;^DD(357.22,.04,21,0)
	;;=^^4^4^2930527^
	;;^DD(357.22,.04,21,1,0)
	;;= 
	;;^DD(357.22,.04,21,2,0)
	;;=The subcolumn can contain either text, derived from what is returned by
	;;^DD(357.22,.04,21,3,0)
	;;=the PACKAGE INTERFACE, or a MARKING AREA, which is meant to be written in
	;;^DD(357.22,.04,21,4,0)
	;;=to select an entry on the list.
	;;^DD(357.22,.04,"DT")
	;;=2930428
	;;^DD(357.22,.05,0)
	;;=SUBCOLUMN'S DATA^NJ1,0X^^0;5^K:'$$OKPIECE^IBDFU5($P($G(^IBE(357.2,D0,0)),U,11),X) X

IBDIN00K
IBDIN00K	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.22,.05,.1)
	;;=WHAT DATA SHOULD BE CONTAINED IN THE SUBCOLUMN?
	;;^DD(357.22,.05,3)
	;;=WHAT DATA SHOULD BE CONTAINED IN THE SUBCOLUMN?
	;;^DD(357.22,.05,4)
	;;=D HELP2^IBDFU5
	;;^DD(357.22,.05,21,0)
	;;=^^3^3^2940719^^
	;;^DD(357.22,.05,21,1,0)
	;;= 
	;;^DD(357.22,.05,21,2,0)
	;;=The Package Interface returns a record, which is composed of fields. This
	;;^DD(357.22,.05,21,3,0)
	;;=identifies which field goes in the subcolumn.
	;;^DD(357.22,.05,"DT")
	;;=2950919
	;;^DD(357.22,.06,0)
	;;=MARKING AREA^P357.91'^IBE(357.91,^0;6^Q
	;;^DD(357.22,.06,.1)
	;;=TYPE OF MARKING AREA
	;;^DD(357.22,.06,3)
	;;=What type of marking area should appear in the subcolumn?
	;;^DD(357.22,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.22,.06,21,1,0)
	;;= 
	;;^DD(357.22,.06,21,2,0)
	;;=This identifies which MARKING AREA should go in the subcolumn.
	;;^DD(357.22,.06,"DT")
	;;=2930414
	;;^DD(357.22,.07,0)
	;;=ALLOW EDITING OF TEXT?^S^0:NO;1:YES;^0;7^Q
	;;^DD(357.22,.07,.1)
	;;=ALLOW EDITING OF THE TEXT APPEARING IN THIS SUBCOLUMN? (YES/NO)
	;;^DD(357.22,.07,3)
	;;=Is it okay to edit the text appearing in this subcolumn?
	;;^DD(357.22,.07,21,0)
	;;=^^4^4^2950927^^
	;;^DD(357.22,.07,21,1,0)
	;;= 
	;;^DD(357.22,.07,21,2,0)
	;;=This determines whether or not the user, when selecting items to appear on
	;;^DD(357.22,.07,21,3,0)
	;;=the list, will be able to edit the text appearing in the subcolum. This is
	;;^DD(357.22,.07,21,4,0)
	;;=ignored if the subcolumn contains a MARKING AREA.
	;;^DD(357.22,.07,"DT")
	;;=2930428
	;;^DD(357.22,.08,0)
	;;=DO NOT UNDERLINE MARKING AREA?^S^0:NO;1:YES;^0;8^Q
	;;^DD(357.22,.08,3)
	;;=Enter YES if you do NOT want this subcolumn underlined.
	;;^DD(357.22,.08,21,0)
	;;=^^2^2^2950808^
	;;^DD(357.22,.08,21,1,0)
	;;=Underlining can be turned off for the subcolumn even if it is turned on
	;;^DD(357.22,.08,21,2,0)
	;;=for the list as a whole.
	;;^DD(357.22,.08,"DT")
	;;=2940607
	;;^DD(357.22,.09,0)
	;;=DATA QUALIFIER^*P357.98'^IBD(357.98,^0;9^S DIC("S")="I $$DQGOOD^IBDFU9($P($G(^IBE(357.2,DA(1),0)),""^"",11),Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(357.22,.09,3)
	;;=Does one of the qualifiers apply to the choices made in this subcolumn?
	;;^DD(357.22,.09,12)
	;;=Allows only certain data qualifiers, defined in the Package Interface file.
	;;^DD(357.22,.09,12.1)
	;;=S DIC("S")="I $$DQGOOD^IBDFU9($P($G(^IBE(357.2,DA(1),0)),""^"",11),Y)"
	;;^DD(357.22,.09,21,0)
	;;=^^2^2^2950808^
	;;^DD(357.22,.09,21,1,0)
	;;=Used to associate a data qualifier to a subcolumn that is used for making
	;;^DD(357.22,.09,21,2,0)
	;;=selections.
	;;^DD(357.22,.09,"DT")
	;;=2941206
	;;^DD(357.22,.1,0)
	;;=SELECTION RULE^S^0:ANY NUMBER;1:EXACTLY ONE;2:AT MOST ONE (0 or 1);3:AT LEAST ONE (1 or more);^0;10^Q
	;;^DD(357.22,.1,3)
	;;=Which rule applies to the choices the user can make in this subcolumn?
	;;^DD(357.22,.1,21,0)
	;;=^^2^2^2950808^
	;;^DD(357.22,.1,21,1,0)
	;;=A selection rule can be applied to a subcolumn used to make selections,
	;;^DD(357.22,.1,21,2,0)
	;;=i.e., one that contains marking areas.
	;;^DD(357.22,.1,"DT")
	;;=2941209

IBDIN00L
IBDIN00L	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.3,0,"GL")
	;;=^IBE(357.3,
	;;^DIC("B","SELECTION",357.3)
	;;=
	;;^DIC(357.3,"%D",0)
	;;=^^4^4^2960401^^^^
	;;^DIC(357.3,"%D",1,0)
	;;= 
	;;^DIC(357.3,"%D",2,0)
	;;=Contains the items appearing on the SELECTION LISTS. A selection can be
	;;^DIC(357.3,"%D",3,0)
	;;=composed of several fields, hence can occupy several subcolumns. Only the
	;;^DIC(357.3,"%D",4,0)
	;;=text is stored here, not the MARKING SYMBOLS.
	;;^DD(357.3,0)
	;;=FIELD^^2.02^11
	;;^DD(357.3,0,"DDA")
	;;=N
	;;^DD(357.3,0,"DIK")
	;;=IBDX3
	;;^DD(357.3,0,"DIKOLD")
	;;=IBDX3
	;;^DD(357.3,0,"DT")
	;;=2960401
	;;^DD(357.3,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(357.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(357.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(357.3,0,"ID",.04)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(357.4,+$P(^(0),U,4),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(357.4,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(357.3,0,"IX","APO",357.3,.03)
	;;=
	;;^DD(357.3,0,"IX","APO1",357.3,.04)
	;;=
	;;^DD(357.3,0,"IX","APO2",357.3,.05)
	;;=
	;;^DD(357.3,0,"IX","B",357.3,.01)
	;;=
	;;^DD(357.3,0,"IX","C",357.3,.03)
	;;=
	;;^DD(357.3,0,"IX","D",357.3,.04)
	;;=
	;;^DD(357.3,0,"NM","SELECTION")
	;;=
	;;^DD(357.3,.01,0)
	;;=SELECTION ID^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.3,.01,1,0)
	;;=^.1
	;;^DD(357.3,.01,1,1,0)
	;;=357.3^B
	;;^DD(357.3,.01,1,1,1)
	;;=S ^IBE(357.3,"B",$E(X,1,30),DA)=""
	;;^DD(357.3,.01,1,1,2)
	;;=K ^IBE(357.3,"B",$E(X,1,30),DA)
	;;^DD(357.3,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.3,.01,21,0)
	;;=^^2^2^2930309^
	;;^DD(357.3,.01,21,1,0)
	;;= 
	;;^DD(357.3,.01,21,2,0)
	;;=The ID passed by the package.
	;;^DD(357.3,.01,"DT")
	;;=2921119
	;;^DD(357.3,.02,0)
	;;=PLACE HOLDER ONLY^S^0:NO;1:YES;^0;2^Q
	;;^DD(357.3,.02,3)
	;;=Enter YES if this is a place holder, used to add some space to the list.
	;;^DD(357.3,.02,"DT")
	;;=2931020
	;;^DD(357.3,.03,0)
	;;=SELECTION LIST^RP357.2'^IBE(357.2,^0;3^Q
	;;^DD(357.3,.03,1,0)
	;;=^.1
	;;^DD(357.3,.03,1,1,0)
	;;=357.3^C
	;;^DD(357.3,.03,1,1,1)
	;;=S ^IBE(357.3,"C",$E(X,1,30),DA)=""
	;;^DD(357.3,.03,1,1,2)
	;;=K ^IBE(357.3,"C",$E(X,1,30),DA)
	;;^DD(357.3,.03,1,1,"DT")
	;;=2921127
	;;^DD(357.3,.03,1,2,0)
	;;=357.3^APO^MUMPS
	;;^DD(357.3,.03,1,2,1)
	;;=I $P($G(^IBE(357.3,DA,0)),U,5)]"",$P(^(0),U,4) S ^IBE(357.3,"APO",X,$P(^(0),U,4),$P(^(0),U,5),DA)=""
	;;^DD(357.3,.03,1,2,2)
	;;=I $P($G(^IBE(357.3,DA,0)),U,5)]"",$P(^(0),U,4) K ^IBE(357.3,"APO",X,$P(^(0),U,4),$P(^(0),U,5),DA)
	;;^DD(357.3,.03,1,2,"%D",0)
	;;=^^7^7^2960402^^
	;;^DD(357.3,.03,1,2,"%D",1,0)
	;;= 
	;;^DD(357.3,.03,1,2,"%D",2,0)
	;;=Allows all selections for a particular group in a selection list to be
	;;^DD(357.3,.03,1,2,"%D",3,0)
	;;=found in the order that they should appear. The subscripts are
	;;^DD(357.3,.03,1,2,"%D",4,0)
	;;=^IBE(357.3,"APO",<selection list ien>,<group ien>,<print order within
	;;^DD(357.3,.03,1,2,"%D",5,0)
	;;=group>,<selection ien>). If this field is re-indexed then the APO1 index
	;;^DD(357.3,.03,1,2,"%D",6,0)
	;;=on the .04 field and the APO2 index on the .05 field need not be
	;;^DD(357.3,.03,1,2,"%D",7,0)
	;;=re-indexed.
	;;^DD(357.3,.03,1,2,"DT")
	;;=2960402
	;;^DD(357.3,.03,21,0)
	;;=^^2^2^2921215^
	;;^DD(357.3,.03,21,1,0)
	;;= 
	;;^DD(357.3,.03,21,2,0)
	;;=Identifies the selection list that this selection belongs on.
	;;^DD(357.3,.03,"DT")
	;;=2960402
	;;^DD(357.3,.04,0)
	;;=SELECTION GROUP^RP357.4^IBE(357.4,^0;4^Q
	;;^DD(357.3,.04,1,0)
	;;=^.1
	;;^DD(357.3,.04,1,1,0)
	;;=357.3^D
	;;^DD(357.3,.04,1,1,1)
	;;=S ^IBE(357.3,"D",$E(X,1,30),DA)=""
	;;^DD(357.3,.04,1,1,2)
	;;=K ^IBE(357.3,"D",$E(X,1,30),DA)
	;;^DD(357.3,.04,1,1,"DT")
	;;=2921221
	;;^DD(357.3,.04,1,2,0)
	;;=357.3^APO1^MUMPS
	;;^DD(357.3,.04,1,2,1)
	;;=I $P($G(^IBE(357.3,DA,0)),U,5)]"",$P(^(0),U,3) S ^IBE(357.3,"APO",$P(^(0),U,3),X,$P(^(0),U,5),DA)=""
	;;^DD(357.3,.04,1,2,2)
	;;=I $P($G(^IBE(357.3,DA,0)),U,5)]"",$P(^(0),U,3) K ^IBE(357.3,"APO",$P(^(0),U,3),X,$P(^(0),U,5),DA)
	;;^DD(357.3,.04,1,2,"%D",0)
	;;=^^7^7^2960402^^
	;;^DD(357.3,.04,1,2,"%D",1,0)
	;;= 
	;;^DD(357.3,.04,1,2,"%D",2,0)
	;;=Allows all selections for a particular group in a selection list to be
	;;^DD(357.3,.04,1,2,"%D",3,0)
	;;=found in the order that they should appear. The subscripts are
	;;^DD(357.3,.04,1,2,"%D",4,0)
	;;=^IBE(357.3,"APO",<selection list ien>,<group ien>,<print order within
	;;^DD(357.3,.04,1,2,"%D",5,0)
	;;=group>,<selection ien>). If this field is re-indexed then the APO index
	;;^DD(357.3,.04,1,2,"%D",6,0)
	;;=on the .03 field and the APO2 index on the .05 field need not be

IBDIN00M
IBDIN00M	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.3,.04,1,2,"%D",7,0)
	;;=re-indexed.
	;;^DD(357.3,.04,1,2,"DT")
	;;=2960402
	;;^DD(357.3,.04,3)
	;;=Entries on a list are grouped under group headers - under which header should this entry appear?
	;;^DD(357.3,.04,21,0)
	;;=^^3^3^2930607^
	;;^DD(357.3,.04,21,1,0)
	;;= 
	;;^DD(357.3,.04,21,2,0)
	;;=The SELECTION GROUP that the selection belongs to.The selection will
	;;^DD(357.3,.04,21,3,0)
	;;=appear under the group header on the form.
	;;^DD(357.3,.04,"DT")
	;;=2960402
	;;^DD(357.3,.05,0)
	;;=PRINT ORDER WITHIN GROUP^RNJ7,2^^0;5^K:+X'=X!(X>9999.99)!(X<0)!(X?.E1"."3N.N) X
	;;^DD(357.3,.05,1,0)
	;;=^.1
	;;^DD(357.3,.05,1,1,0)
	;;=357.3^APO2^MUMPS
	;;^DD(357.3,.05,1,1,1)
	;;=I $P($G(^IBE(357.3,DA,0)),U,3),$P(^(0),U,4) S ^IBE(357.3,"APO",$P(^(0),U,3),$P(^(0),U,4),X,DA)=""
	;;^DD(357.3,.05,1,1,2)
	;;=I $P($G(^IBE(357.3,DA,0)),U,3),$P(^(0),U,4) K ^IBE(357.3,"APO",$P(^(0),U,3),$P(^(0),U,4),X,DA)
	;;^DD(357.3,.05,1,1,"%D",0)
	;;=^^7^7^2960402^^
	;;^DD(357.3,.05,1,1,"%D",1,0)
	;;= 
	;;^DD(357.3,.05,1,1,"%D",2,0)
	;;=Allows all selections for a particular group in a selection list to be
	;;^DD(357.3,.05,1,1,"%D",3,0)
	;;=found in the order that they should appear. The subscripts are
	;;^DD(357.3,.05,1,1,"%D",4,0)
	;;=^IBE(357.3,"APO",<selection list ien>,<group ien>,<print order within
	;;^DD(357.3,.05,1,1,"%D",5,0)
	;;=group>,<selection ien>). If this field is re-indexed then the APO index
	;;^DD(357.3,.05,1,1,"%D",6,0)
	;;=on the .03 field and the APO1 index on the .04 field need not be
	;;^DD(357.3,.05,1,1,"%D",7,0)
	;;=re-indexed.
	;;^DD(357.3,.05,1,1,"DT")
	;;=2960402
	;;^DD(357.3,.05,3)
	;;=Type a Number between 0 and 9999.99, 2 Decimal Digits
	;;^DD(357.3,.05,21,0)
	;;=^^2^2^2950810^^^^
	;;^DD(357.3,.05,21,1,0)
	;;=Determines the order that this selection entry will appear in under the
	;;^DD(357.3,.05,21,2,0)
	;;=header for the selection group.
	;;^DD(357.3,.05,"DT")
	;;=2960402
	;;^DD(357.3,.06,0)
	;;=PLACE HOLDER TEXT^F^^0;6^K:$L(X)>75!($L(X)<1) X
	;;^DD(357.3,.06,3)
	;;=What text should be displayed for the place holder?
	;;^DD(357.3,.06,"DT")
	;;=2950113
	;;^DD(357.3,.07,0)
	;;=USE AS SUBHEADER?^S^0:NO;1:YES;^0;7^Q
	;;^DD(357.3,.07,.1)
	;;=IS THE TEXT USED AS A SUBHEADER FOR THE FOLLOWING SELECTIONS WITHIN THE GROUP?
	;;^DD(357.3,.07,3)
	;;=If you want to use the place holder as a subheader for selections within the group, answer YES.
	;;^DD(357.3,.07,21,0)
	;;=^^9^9^2951002^
	;;^DD(357.3,.07,21,1,0)
	;;=One use that is being made of selections that are defined as place holders
	;;^DD(357.3,.07,21,2,0)
	;;=is to use them as subheaders. When this is done the text should be
	;;^DD(357.3,.07,21,3,0)
	;;=included with the header for the following selections. This field is
	;;^DD(357.3,.07,21,4,0)
	;;=used to allow that.
	;;^DD(357.3,.07,21,5,0)
	;;= 
	;;^DD(357.3,.07,21,6,0)
	;;=If this field is set to YES for a place holder that contains text, the
	;;^DD(357.3,.07,21,7,0)
	;;=text will be used as a subheader (#1) and will be concatenated to the end
	;;^DD(357.3,.07,21,8,0)
	;;=of the header passed to PCE. The subheader is in use until a place
	;;^DD(357.3,.07,21,9,0)
	;;=holder is reached that ends it, or the group ends.
	;;^DD(357.3,.07,"DT")
	;;=2950928
	;;^DD(357.3,.08,0)
	;;=STOP USING SUBHEADER?^S^0:NO;1:YES;^0;8^Q
	;;^DD(357.3,.08,.1)
	;;=SHOULD THE SUBHEADER IN USE, IF ANY, BE ENDED?
	;;^DD(357.3,.08,3)
	;;=If you have been using a place holder as a subheader for selections within the group, do you want to stop doing so?
	;;^DD(357.3,.08,21,0)
	;;=^^2^2^2951002^^^
	;;^DD(357.3,.08,21,1,0)
	;;=This field is used to signal that the subheader in use, defined by prior
	;;^DD(357.3,.08,21,2,0)
	;;=place holders, should be ended.
	;;^DD(357.3,.08,"DT")
	;;=2951002
	;;^DD(357.3,1,0)
	;;=SUBCOLUMN VALUE^357.31IA^^1;0
	;;^DD(357.3,1,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.3,1,21,1,0)
	;;= 
	;;^DD(357.3,1,21,2,0)
	;;=The selection can be composed of multiple fields. Each field occupies its
	;;^DD(357.3,1,21,3,0)
	;;=own subcolumn on the form.
	;;^DD(357.3,2.01,0)
	;;=NARRATIVE TO SEND TO PCE^F^^2;1^K:$L(X)>80!($L(X)<3) X
	;;^DD(357.3,2.01,3)
	;;=Enter the narrative to send to PCE if a provider narrative different from the description is desired.  Answer must be 3-80 characters in length.
	;;^DD(357.3,2.01,21,0)
	;;=^^7^7^2951207^^
	;;^DD(357.3,2.01,21,1,0)
	;;=Enter the narrative that should be sent to PCE when this selection is
	;;^DD(357.3,2.01,21,2,0)
	;;=scanned.  This will be the provider narrative that is shown in PCE and
	;;^DD(357.3,2.01,21,3,0)
	;;=Problem List.  If there is no entry in this field the text as it appears

IBDIN00N
IBDIN00N	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.3,2.01,21,4,0)
	;;=on the form will be sent as the narrative.
	;;^DD(357.3,2.01,21,5,0)
	;;=
	;;^DD(357.3,2.01,21,6,0)
	;;=This field can only be entered for the type of interfaces that allow
	;;^DD(357.3,2.01,21,7,0)
	;;=adding this narrative, and then send the narrative to PCE.
	;;^DD(357.3,2.01,"DT")
	;;=2951207
	;;^DD(357.3,2.02,0)
	;;=CLINICAL LEXICON ENTRY^P757.01'^GMP(757.01,^2;2^Q
	;;^DD(357.3,2.02,21,0)
	;;=^^5^5^2960401^
	;;^DD(357.3,2.02,21,1,0)
	;;=This is the clinical lexicon entry this term should be associated with.
	;;^DD(357.3,2.02,21,2,0)
	;;=Generally this is only completed for selections based on diagnosis.
	;;^DD(357.3,2.02,21,3,0)
	;;=The clinical lexicon entry will be passed to pce when this selection is
	;;^DD(357.3,2.02,21,4,0)
	;;=scanned.  This allows maintaining the patient problem list associated 
	;;^DD(357.3,2.02,21,5,0)
	;;=with clinical terms.
	;;^DD(357.3,2.02,"DT")
	;;=2960401
	;;^DD(357.31,0)
	;;=SUBCOLUMN VALUE SUB-FIELD^^.02^2
	;;^DD(357.31,0,"DIK")
	;;=IBDX3
	;;^DD(357.31,0,"DT")
	;;=2930402
	;;^DD(357.31,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(357.31,0,"IX","B",357.31,.01)
	;;=
	;;^DD(357.31,0,"NM","SUBCOLUMN VALUE")
	;;=
	;;^DD(357.31,0,"UP")
	;;=357.3
	;;^DD(357.31,.01,0)
	;;=SUBCOLUMN NUMBER^MRNJ1,0X^^0;1^K:+X'=X!(X>6)!(X<1)!(X?.E1"."1N.N)!($D(^IBE(357.3,DA(1),1,"B",X))) X
	;;^DD(357.31,.01,1,0)
	;;=^.1
	;;^DD(357.31,.01,1,1,0)
	;;=357.31^B
	;;^DD(357.31,.01,1,1,1)
	;;=S ^IBE(357.3,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(357.31,.01,1,1,2)
	;;=K ^IBE(357.3,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(357.31,.01,3)
	;;=Which subcolumn is the value for?
	;;^DD(357.31,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.31,.01,21,1,0)
	;;= 
	;;^DD(357.31,.01,21,2,0)
	;;=The order that the subcolumn should appear on the form.
	;;^DD(357.31,.01,"DT")
	;;=2930402
	;;^DD(357.31,.02,0)
	;;=SUBCOLUMN VALUE^F^^0;2^K:$L(X)>150!($L(X)<1) X
	;;^DD(357.31,.02,3)
	;;=What value should go in the subcolumn?
	;;^DD(357.31,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.31,.02,21,1,0)
	;;= 
	;;^DD(357.31,.02,21,2,0)
	;;=The text that should appear in the subcolumn.
	;;^DD(357.31,.02,"DT")
	;;=2930401

IBDIN00O
IBDIN00O	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.4,0,"GL")
	;;=^IBE(357.4,
	;;^DIC("B","SELECTION GROUP",357.4)
	;;=
	;;^DIC(357.4,"%D",0)
	;;=^^3^3^2951102^^^
	;;^DIC(357.4,"%D",1,0)
	;;= 
	;;^DIC(357.4,"%D",2,0)
	;;=A Selection Group is a set of items on a list and the header that those
	;;^DIC(357.4,"%D",3,0)
	;;=items should appear under.
	;;^DD(357.4,0)
	;;=FIELD^^.04^4
	;;^DD(357.4,0,"DDA")
	;;=N
	;;^DD(357.4,0,"DIK")
	;;=IBDX4
	;;^DD(357.4,0,"DIKOLD")
	;;=IBDX4
	;;^DD(357.4,0,"DT")
	;;=2941208
	;;^DD(357.4,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(357.4,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(357.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(357.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(357.4,0,"IX","APO",357.4,.02)
	;;=
	;;^DD(357.4,0,"IX","APO1",357.4,.03)
	;;=
	;;^DD(357.4,0,"IX","B",357.4,.01)
	;;=
	;;^DD(357.4,0,"IX","D",357.4,.03)
	;;=
	;;^DD(357.4,0,"NM","SELECTION GROUP")
	;;=
	;;^DD(357.4,0,"PT",357.3,.04)
	;;=
	;;^DD(357.4,.01,0)
	;;=HEADER^RF^^0;1^K:$L(X)>40!($L(X)<1) X
	;;^DD(357.4,.01,1,0)
	;;=^.1
	;;^DD(357.4,.01,1,1,0)
	;;=357.4^B
	;;^DD(357.4,.01,1,1,1)
	;;=S ^IBE(357.4,"B",$E(X,1,30),DA)=""
	;;^DD(357.4,.01,1,1,2)
	;;=K ^IBE(357.4,"B",$E(X,1,30),DA)
	;;^DD(357.4,.01,3)
	;;=What text do you want to appear at the top of this group?
	;;^DD(357.4,.01,21,0)
	;;=^^2^2^2960129^^^^
	;;^DD(357.4,.01,21,1,0)
	;;= 
	;;^DD(357.4,.01,21,2,0)
	;;=The name given to a group of selections appearing on a selection list.
	;;^DD(357.4,.01,"DEL",1,0)
	;;=I '$G(IBDEVICE("LISTMAN")) W "...Selection Groups can only be deleted through the Encounter Form Utilities!"
	;;^DD(357.4,.01,"DT")
	;;=2930604
	;;^DD(357.4,.02,0)
	;;=PRINT ORDER^RNJ7,2^^0;2^K:+X'=X!(X>9999.99)!(X<0)!(X?.E1"."3N.N) X
	;;^DD(357.4,.02,1,0)
	;;=^.1
	;;^DD(357.4,.02,1,1,0)
	;;=357.4^APO^MUMPS
	;;^DD(357.4,.02,1,1,1)
	;;=I $P($G(^IBE(357.4,DA,0)),U,3) S ^IBE(357.4,"APO",$P(^(0),U,3),X,DA)=""
	;;^DD(357.4,.02,1,1,2)
	;;=I $P($G(^IBE(357.4,DA,0)),U,3) K ^IBE(357.4,"APO",$P(^(0),U,3),X,DA)
	;;^DD(357.4,.02,1,1,"%D",0)
	;;=^^5^5^2960402^^
	;;^DD(357.4,.02,1,1,"%D",1,0)
	;;= 
	;;^DD(357.4,.02,1,1,"%D",2,0)
	;;=Allows all groups in a selection list to be found in the order that they
	;;^DD(357.4,.02,1,1,"%D",3,0)
	;;=should appear. The subscripts are ^IBE(357.4,"APO",<selection list
	;;^DD(357.4,.02,1,1,"%D",4,0)
	;;=ien>,<print order for group>,<group ien>). If this field is re-indexed
	;;^DD(357.4,.02,1,1,"%D",5,0)
	;;=then the APO1 index on the .03 field need not be re-indexed.
	;;^DD(357.4,.02,1,1,"DT")
	;;=2960402
	;;^DD(357.4,.02,3)
	;;=Type a Number between 0 and 9999.99, 2 Decimal Digits
	;;^DD(357.4,.02,21,0)
	;;=^^5^5^2940516^^^^
	;;^DD(357.4,.02,21,1,0)
	;;= 
	;;^DD(357.4,.02,21,2,0)
	;;=This will define the order that a group of selections will appear in as
	;;^DD(357.4,.02,21,3,0)
	;;=compared to the other groups of selections.
	;;^DD(357.4,.02,21,4,0)
	;;=A group header "BLANK" will be created by default with order number 0.
	;;^DD(357.4,.02,21,5,0)
	;;=This header will not print to the form.
	;;^DD(357.4,.02,"DT")
	;;=2960402
	;;^DD(357.4,.03,0)
	;;=SELECTION LIST^RP357.2'^IBE(357.2,^0;3^Q
	;;^DD(357.4,.03,1,0)
	;;=^.1
	;;^DD(357.4,.03,1,1,0)
	;;=357.4^D
	;;^DD(357.4,.03,1,1,1)
	;;=S ^IBE(357.4,"D",$E(X,1,30),DA)=""
	;;^DD(357.4,.03,1,1,2)
	;;=K ^IBE(357.4,"D",$E(X,1,30),DA)
	;;^DD(357.4,.03,1,1,"%D",0)
	;;=^^1^1^2921218^
	;;^DD(357.4,.03,1,1,"%D",1,0)
	;;=Used to find all the groups belonging to a selection list.
	;;^DD(357.4,.03,1,1,"DT")
	;;=2921218
	;;^DD(357.4,.03,1,2,0)
	;;=357.4^APO1^MUMPS
	;;^DD(357.4,.03,1,2,1)
	;;=I $P($G(^IBE(357.4,DA,0)),U,2)]"" S ^IBE(357.4,"APO",X,$P(^(0),U,2),DA)=""
	;;^DD(357.4,.03,1,2,2)
	;;=I $P($G(^IBE(357.4,DA,0)),U,2)]"" K ^IBE(357.4,"APO",X,$P(^(0),U,2),DA)
	;;^DD(357.4,.03,1,2,"%D",0)
	;;=^^5^5^2960402^^
	;;^DD(357.4,.03,1,2,"%D",1,0)
	;;= 
	;;^DD(357.4,.03,1,2,"%D",2,0)
	;;=Allows all groups in a selection list to be found in the order that they
	;;^DD(357.4,.03,1,2,"%D",3,0)
	;;=should appear. The subscripts are ^IBE(357.4,"APO",<selection list
	;;^DD(357.4,.03,1,2,"%D",4,0)
	;;=ien>,<print order for group>,<group ien>). If this field is re-indexed
	;;^DD(357.4,.03,1,2,"%D",5,0)
	;;=then the APO index on the .02 field need not be re-indexed.
	;;^DD(357.4,.03,1,2,"DT")
	;;=2960402
	;;^DD(357.4,.03,3)
	;;=This identifies the selection list that contains this group.
	;;^DD(357.4,.03,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.4,.03,21,1,0)
	;;= 
	;;^DD(357.4,.03,21,2,0)
	;;=The Selection List this group belongs to.
	;;^DD(357.4,.03,"DT")
	;;=2960402
	;;^DD(357.4,.04,0)
	;;=INVISIBLE^S^I:INVISIBLE;^0;4^Q

IBDIN00P
IBDIN00P	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.4,.04,3)
	;;=If you do not want the header to print, enter 'I'.
	;;^DD(357.4,.04,"DT")
	;;=2941208

IBDIN00Q
IBDIN00Q	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.5,0,"GL")
	;;=^IBE(357.5,
	;;^DIC("B","DATA FIELD",357.5)
	;;=
	;;^DIC(357.5,"%D",0)
	;;=^^6^6^2951102^^
	;;^DIC(357.5,"%D",1,0)
	;;= 
	;;^DIC(357.5,"%D",2,0)
	;;=A data field can be composed of a label, determined at the time the form
	;;^DIC(357.5,"%D",3,0)
	;;=description is created, and data, coming from the DHCP database and
	;;^DIC(357.5,"%D",4,0)
	;;=determined at the time the form prints. The label and data are printed to
	;;^DIC(357.5,"%D",5,0)
	;;=the encounter form. A data field can be composed of subfields, each
	;;^DIC(357.5,"%D",6,0)
	;;=subfield containing possibly its own label and data.
	;;^DD(357.5,0)
	;;=FIELD^^2^13
	;;^DD(357.5,0,"DDA")
	;;=N
	;;^DD(357.5,0,"DIK")
	;;=IBDX5
	;;^DD(357.5,0,"DIKOLD")
	;;=IBDX5
	;;^DD(357.5,0,"DT")
	;;=2930730
	;;^DD(357.5,0,"ID",.02)
	;;=W ""
	;;^DD(357.5,0,"ID",.03)
	;;=W ""
	;;^DD(357.5,0,"IX","B",357.5,.01)
	;;=
	;;^DD(357.5,0,"IX","C",357.5,.02)
	;;=
	;;^DD(357.5,0,"NM","DATA FIELD")
	;;=
	;;^DD(357.5,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.5,.01,1,0)
	;;=^.1
	;;^DD(357.5,.01,1,1,0)
	;;=357.5^B
	;;^DD(357.5,.01,1,1,1)
	;;=S ^IBE(357.5,"B",$E(X,1,30),DA)=""
	;;^DD(357.5,.01,1,1,2)
	;;=K ^IBE(357.5,"B",$E(X,1,30),DA)
	;;^DD(357.5,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.5,.01,21,0)
	;;=^^3^3^2930419^^^
	;;^DD(357.5,.01,21,1,0)
	;;= 
	;;^DD(357.5,.01,21,2,0)
	;;=The name is used to identify the field within a block. It can be anything
	;;^DD(357.5,.01,21,3,0)
	;;=the designer of a form wants it to be.
	;;^DD(357.5,.01,"DT")
	;;=2930419
	;;^DD(357.5,.02,0)
	;;=BLOCK^RP357.1'^IBE(357.1,^0;2^Q
	;;^DD(357.5,.02,1,0)
	;;=^.1
	;;^DD(357.5,.02,1,1,0)
	;;=357.5^C
	;;^DD(357.5,.02,1,1,1)
	;;=S ^IBE(357.5,"C",$E(X,1,30),DA)=""
	;;^DD(357.5,.02,1,1,2)
	;;=K ^IBE(357.5,"C",$E(X,1,30),DA)
	;;^DD(357.5,.02,1,1,"DT")
	;;=2921118
	;;^DD(357.5,.02,3)
	;;=What block should this data field appear in?
	;;^DD(357.5,.02,21,0)
	;;=^^2^2^2930310^
	;;^DD(357.5,.02,21,1,0)
	;;= 
	;;^DD(357.5,.02,21,2,0)
	;;=The particular block the data field should appear in.
	;;^DD(357.5,.02,"DT")
	;;=2921118
	;;^DD(357.5,.03,0)
	;;=TYPE OF DATA^*P357.6'^IBE(357.6,^0;3^S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(357.5,.03,3)
	;;=What data should be displayed in this field?
	;;^DD(357.5,.03,4)
	;;=
	;;^DD(357.5,.03,12)
	;;=Allows only available display interfaces.
	;;^DD(357.5,.03,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1"
	;;^DD(357.5,.03,21,0)
	;;=^^5^5^2950825^^^
	;;^DD(357.5,.03,21,1,0)
	;;= 
	;;^DD(357.5,.03,21,2,0)
	;;=The particular interface that should be invoked to obtain the data for
	;;^DD(357.5,.03,21,3,0)
	;;=display. Some of the interfaces don't actually return data, but are
	;;^DD(357.5,.03,21,4,0)
	;;=instead 'dummy' interfaces for the purpose of printing things like blank
	;;^DD(357.5,.03,21,5,0)
	;;=lines.
	;;^DD(357.5,.03,"DT")
	;;=2930309
	;;^DD(357.5,.04,0)
	;;=LAST ITEM INDICATOR^S^1:YES;0:NO;^0;4^Q
	;;^DD(357.5,.04,.1)
	;;=IS THIS THE LAST ONE THAT WILL FIT ON THE FORM?
	;;^DD(357.5,.04,3)
	;;=
	;;^DD(357.5,.04,4)
	;;=W "Enter YES if this is the last item that should print, else enter NO."
	;;^DD(357.5,.04,21,0)
	;;=^^4^4^2930408^^^^
	;;^DD(357.5,.04,21,1,0)
	;;= 
	;;^DD(357.5,.04,21,2,0)
	;;=This field is used to indicate which item on a list is the last to be
	;;^DD(357.5,.04,21,3,0)
	;;=printed to the form. The remaining items can be printed to a separate
	;;^DD(357.5,.04,21,4,0)
	;;=piece of paper.
	;;^DD(357.5,.04,"DT")
	;;=2930413
	;;^DD(357.5,.05,0)
	;;=NUMBER ON LIST^NJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.5,.05,.1)
	;;=WHICH ITEM ON THE LIST SHOULD BE DISPLAYED IN THIS FIELD?
	;;^DD(357.5,.05,3)
	;;=The data is a list of items. Which item on the list should be displayed?
	;;^DD(357.5,.05,21,0)
	;;=^^1^1^2930607^
	;;^DD(357.5,.05,21,1,0)
	;;=For data returned by the package interface that is in the form of a list, this field indicates which one of the items on the list should be displayed to this field.
	;;^DD(357.5,.05,"DT")
	;;=2930413
	;;^DD(357.5,.06,0)
	;;=TEXT LABEL^F^^0;6^K:$L(X)>150!($L(X)<1) X
	;;^DD(357.5,.06,.1)
	;;=WHAT LABEL SHOULD BEGIN THE TEXT (OPTIONAL)
	;;^DD(357.5,.06,3)
	;;=You can optionally begin the text with a label of your choice.
	;;^DD(357.5,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.5,.06,21,1,0)
	;;= 
	;;^DD(357.5,.06,21,2,0)
	;;=The label that should precede the text.
	;;^DD(357.5,.06,"DT")
	;;=2930825
	;;^DD(357.5,.07,0)
	;;=TEXT LABEL APPEARANCE^FX^^0;7^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBR"'[$E(X,1))!("UBR"'[$E(X,2))!("UBR"'[$E(X,3)) X

IBDIN00R
IBDIN00R	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.5,.07,.1)
	;;=HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {B,U,R}
	;;^DD(357.5,.07,3)
	;;=B=bold,U=underline,R=reverse. You can enter BU to make the label bold and underlined.
	;;^DD(357.5,.07,21,0)
	;;=^^3^3^2940527^^^
	;;^DD(357.5,.07,21,1,0)
	;;= 
	;;^DD(357.5,.07,21,2,0)
	;;=The label can have characteristics, such as being underlined or
	;;^DD(357.5,.07,21,3,0)
	;;=emboldened.
	;;^DD(357.5,.07,"DT")
	;;=2940527
	;;^DD(357.5,.1,0)
	;;=TEXT STARTING COLUMN^NJ3,0XO^^0;10^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.5,.1,.1)
	;;=WHAT BLOCK COLUMN SHOULD THE TEXT START AT?
	;;^DD(357.5,.1,2)
	;;=S:Y=+Y Y=Y+1
	;;^DD(357.5,.1,2.1)
	;;=S Y=+Y+1
	;;^DD(357.5,.1,3)
	;;=What block column should the text start at?
	;;^DD(357.5,.1,21,0)
	;;=^^2^2^2930715^^
	;;^DD(357.5,.1,21,1,0)
	;;=This field determines what column the text should begin in.
	;;^DD(357.5,.1,21,2,0)
	;;=Applies only if the Package Interface returns a word-processing field.
	;;^DD(357.5,.1,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.5,.1,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.5,.1,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.5,.1,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.5,.1,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.5,.1,"DT")
	;;=2940527
	;;^DD(357.5,.11,0)
	;;=TEXT STARTING ROW^NJ3,0XO^^0;11^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.5,.11,.1)
	;;=WHAT BLOCK ROW SHOULD THE TEXT START AT?
	;;^DD(357.5,.11,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(357.5,.11,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(357.5,.11,3)
	;;=What block row should the text begin in?
	;;^DD(357.5,.11,21,0)
	;;=^^4^4^2930715^^
	;;^DD(357.5,.11,21,1,0)
	;;= 
	;;^DD(357.5,.11,21,2,0)
	;;=Determines which line on the form, relative to the block, the text area
	;;^DD(357.5,.11,21,3,0)
	;;=should begin at. Only applies if the package interface returns a
	;;^DD(357.5,.11,21,4,0)
	;;=word-processing field.
	;;^DD(357.5,.11,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.5,.11,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.5,.11,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.5,.11,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.5,.11,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.5,.11,"DT")
	;;=2940527
	;;^DD(357.5,.12,0)
	;;=NUMBER OF FORM LINES FOR TEXT^NJ3,0^^0;12^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.5,.12,.1)
	;;=HOW MANY LINES OF THE FORM SHOULD BE ALLOCATED FOR THE TEXT?
	;;^DD(357.5,.12,3)
	;;=How many lines of the form should be allocated for the text?
	;;^DD(357.5,.12,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.5,.12,21,1,0)
	;;= 
	;;^DD(357.5,.12,21,2,0)
	;;=The number of lines on the form that should be allocated for the text.
	;;^DD(357.5,.12,"DT")
	;;=2930414
	;;^DD(357.5,.13,0)
	;;=SPACING OF TEXT LINES^S^1:SINGLE SPACED;2:DOUBLE SPACED;3:SINGLE, BUT DOUBLE IF BLANK;^0;13^Q
	;;^DD(357.5,.13,.1)
	;;=HOW SHOULD THE TEXT LINES BE SPACED?
	;;^DD(357.5,.13,3)
	;;=How do you want the text lines to be spaced?
	;;^DD(357.5,.13,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.5,.13,21,1,0)
	;;= 
	;;^DD(357.5,.13,21,2,0)
	;;=Determines the spacing between lines of text.
	;;^DD(357.5,.13,"DT")
	;;=2930414
	;;^DD(357.5,.14,0)
	;;=WIDTH OF TEXT LINES^NJ3,0^^0;14^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.5,.14,.1)
	;;=HOW MANY CHARACTERS ACROSS SHOULD THE TEXT LINES BE?
	;;^DD(357.5,.14,3)
	;;=How many columns wide do you want the text?
	;;^DD(357.5,.14,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.5,.14,21,1,0)
	;;= 
	;;^DD(357.5,.14,21,2,0)
	;;=Determines how many characters across should be allocated to the text.
	;;^DD(357.5,.14,"DT")
	;;=2930414
	;;^DD(357.5,2,0)
	;;=SUBFIELD^357.52I^^2;0
	;;^DD(357.5,2,21,0)
	;;=^^2^2^2940816^^^^
	;;^DD(357.5,2,21,1,0)
	;;=A data field can be composed of multiple subfields. Each subfield can have
	;;^DD(357.5,2,21,2,0)
	;;=a label and data.
	;;^DD(357.5,2,"DT")
	;;=2930323
	;;^DD(357.52,0)
	;;=SUBFIELD SUB-FIELD^^.09^8
	;;^DD(357.52,0,"DIK")
	;;=IBDX5
	;;^DD(357.52,0,"DT")
	;;=2930730
	;;^DD(357.52,0,"IX","B",357.52,.01)
	;;=
	;;^DD(357.52,0,"NM","SUBFIELD")
	;;=
	;;^DD(357.52,0,"UP")
	;;=357.5
	;;^DD(357.52,.01,0)
	;;=SUBFIELD LABEL^MF^^0;1^K:$L(X)>150!($L(X)<1) X
	;;^DD(357.52,.01,1,0)
	;;=^.1
	;;^DD(357.52,.01,1,1,0)
	;;=357.52^B
	;;^DD(357.52,.01,1,1,1)
	;;=S ^IBE(357.5,DA(1),2,"B",$E(X,1,30),DA)=""

IBDIN00S
IBDIN00S	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.52,.01,1,1,2)
	;;=K ^IBE(357.5,DA(1),2,"B",$E(X,1,30),DA)
	;;^DD(357.52,.01,3)
	;;=What should the subfield be named? The label will print unless it is made invisible.
	;;^DD(357.52,.01,4)
	;;=
	;;^DD(357.52,.01,21,0)
	;;=^^3^3^2931020^^^^
	;;^DD(357.52,.01,21,1,0)
	;;= 
	;;^DD(357.52,.01,21,2,0)
	;;=The name of the subfield. The label prints to the form unless it is made
	;;^DD(357.52,.01,21,3,0)
	;;=invisible.
	;;^DD(357.52,.01,"DT")
	;;=2930730
	;;^DD(357.52,.03,0)
	;;=SUBFIELD LABEL APPEARANCE^FX^^0;3^S X=$$UPPER^VALM1(X) K:$L(X)>4!("UBRI"'[$E(X,1))!("UBRI"'[$E(X,2))!("UBRI"'[$E(X,3))!("UBRI"'[$E(X,4)) X
	;;^DD(357.52,.03,.1)
	;;=HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {U,B,R,I}
	;;^DD(357.52,.03,3)
	;;=B=bold,U=underline,R=reverse,I=invisible You can enter any combination of {B,U,R,I}. The label will not print if it is made invisible.
	;;^DD(357.52,.03,4)
	;;=
	;;^DD(357.52,.03,21,0)
	;;=^^4^4^2940526^^^
	;;^DD(357.52,.03,21,1,0)
	;;= 
	;;^DD(357.52,.03,21,2,0)
	;;=The label can be made bold, underlined, or invisible. It can also be printed
	;;^DD(357.52,.03,21,3,0)
	;;= in reverse, i.e., white on black. This field determines which of those
	;;^DD(357.52,.03,21,4,0)
	;;= characteristics apply.
	;;^DD(357.52,.03,"DT")
	;;=2940816
	;;^DD(357.52,.04,0)
	;;=STARTING COLUMN FOR LABEL^NJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.52,.04,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(357.52,.04,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(357.52,.04,3)
	;;=What block column should the label start in?
	;;^DD(357.52,.04,21,0)
	;;=^^2^2^2930715^^
	;;^DD(357.52,.04,21,1,0)
	;;= 
	;;^DD(357.52,.04,21,2,0)
	;;=The column, relative to the block, that the label should start at.
	;;^DD(357.52,.04,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.52,.04,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.52,.04,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.52,.04,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.52,.04,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.52,.04,"DT")
	;;=2930617
	;;^DD(357.52,.05,0)
	;;=STARTING ROW FOR LABEL^NJ3,0XO^^0;5^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.52,.05,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(357.52,.05,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(357.52,.05,3)
	;;=What block row should the label start in?
	;;^DD(357.52,.05,21,0)
	;;=^^2^2^2930608^
	;;^DD(357.52,.05,21,1,0)
	;;= 
	;;^DD(357.52,.05,21,2,0)
	;;=The row the label should be printed on.
	;;^DD(357.52,.05,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.52,.05,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.52,.05,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.52,.05,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.52,.05,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.52,.05,"DT")
	;;=2930617
	;;^DD(357.52,.06,0)
	;;=STARTING ROW FOR DATA^NJ3,0XO^^0;6^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.52,.06,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(357.52,.06,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(357.52,.06,3)
	;;=What block row should the data begin in?
	;;^DD(357.52,.06,21,0)
	;;=^^2^2^2930715^^
	;;^DD(357.52,.06,21,1,0)
	;;= 
	;;^DD(357.52,.06,21,2,0)
	;;=The row, relative to the block, that the data should print on.
	;;^DD(357.52,.06,23,0)
	;;=^^4^4^2930715^^
	;;^DD(357.52,.06,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.52,.06,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.52,.06,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.52,.06,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.52,.06,"DT")
	;;=2930617
	;;^DD(357.52,.07,0)
	;;=STARTING COLUMN FOR DATA^NJ3,0XO^^0;7^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.52,.07,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(357.52,.07,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(357.52,.07,3)
	;;=What block column should the data begin in?
	;;^DD(357.52,.07,21,0)
	;;=^^2^2^2930608^
	;;^DD(357.52,.07,21,1,0)
	;;= 
	;;^DD(357.52,.07,21,2,0)
	;;=The column, relative to the block, that the data should print on.
	;;^DD(357.52,.07,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.52,.07,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.52,.07,23,2,0)
	;;=starts at 1. The difference is because for computing the form image

IBDIN00T
IBDIN00T	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.52,.07,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.52,.07,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.52,.07,"DT")
	;;=2930617
	;;^DD(357.52,.08,0)
	;;=LENGTH OF DATA^NJ3,0^^0;8^K:+X'=X!(X>150)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.52,.08,3)
	;;=How much space on the line should be allocated for the information to be displayed?
	;;^DD(357.52,.08,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.52,.08,21,1,0)
	;;= 
	;;^DD(357.52,.08,21,2,0)
	;;=The amount of space, in terms of characters, that should be allocated
	;;^DD(357.52,.08,21,3,0)
	;;=to the data.
	;;^DD(357.52,.08,"DT")
	;;=2930322
	;;^DD(357.52,.09,0)
	;;=DATA^NJ1,0X^^0;9^K:'$$OKPIECE^IBDFU5(+$P($G(^IBE(357.5,D0,0)),U,3),X) X
	;;^DD(357.52,.09,.1)
	;;=WHAT DATA SHOULD BE DISPLAYED IN THIS SUBFIELD?
	;;^DD(357.52,.09,3)
	;;=WHAT DATA SHOULD BE DISPLAYED IN THIS SUBFIELD?
	;;^DD(357.52,.09,4)
	;;=D HELP1^IBDFU5
	;;^DD(357.52,.09,21,0)
	;;=^^4^4^2930527^
	;;^DD(357.52,.09,21,1,0)
	;;= 
	;;^DD(357.52,.09,21,2,0)
	;;=The package interface returns a record that may be composed of multiple
	;;^DD(357.52,.09,21,3,0)
	;;=fields. This identifies which of those fields should appear in this
	;;^DD(357.52,.09,21,4,0)
	;;=subfield.
	;;^DD(357.52,.09,"DT")
	;;=2950919

IBDIN00U
IBDIN00U	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.6,0,"GL")
	;;=^IBE(357.6,
	;;^DIC("B","PACKAGE INTERFACE",357.6)
	;;=
	;;^DIC(357.6,"%D",0)
	;;=^^17^17^2950913^^^
	;;^DIC(357.6,"%D",1,0)
	;;=This file contains a description of all of the interfaces with other packages.
	;;^DIC(357.6,"%D",2,0)
	;;=The form will invoke the proper interface routines by doing a lookup on
	;;^DIC(357.6,"%D",3,0)
	;;=this file and then calling the routine by indirection. The
	;;^DIC(357.6,"%D",4,0)
	;;=Data will be exchanged between the encounter form utilities and other
	;;^DIC(357.6,"%D",5,0)
	;;=packages by putting the data in at @IBARY. Interfaces that pass a single
	;;^DIC(357.6,"%D",6,0)
	;;=value or record will will reference data as in: S DATA=@IBARY. Interfaces
	;;^DIC(357.6,"%D",7,0)
	;;=that pass lists of records or values will reference the data as in:
	;;^DIC(357.6,"%D",8,0)
	;;=S DATA=@IBARY@(<number of item on the list>).
	;;^DIC(357.6,"%D",9,0)
	;;= 
	;;^DIC(357.6,"%D",10,0)
	;;=Note that multiple entries in this file can have the same entry points
	;;^DIC(357.6,"%D",11,0)
	;;=into routines. This is for efficiency purposes. For example, patient name,
	;;^DIC(357.6,"%D",12,0)
	;;=DOB and sex are all located on the same node of the Patient file. Each of
	;;^DIC(357.6,"%D",13,0)
	;;=these items of data can have its own entry in the Package Interface file,
	;;^DIC(357.6,"%D",14,0)
	;;=but by using the same entry point there is a savings because all of the
	;;^DIC(357.6,"%D",15,0)
	;;=data on that node can be obtained at once. The routine that invokes the
	;;^DIC(357.6,"%D",16,0)
	;;=entry points keeps track of those already invoked so that they are not
	;;^DIC(357.6,"%D",17,0)
	;;=repeated.
	;;^DD(357.6,0)
	;;=FIELD^^19^69
	;;^DD(357.6,0,"ACT")
	;;=D ASK^IBDFU9
	;;^DD(357.6,0,"DDA")
	;;=N
	;;^DD(357.6,0,"DT")
	;;=2960214
	;;^DD(357.6,0,"ID",.06)
	;;=W ""
	;;^DD(357.6,0,"ID","WRITE")
	;;=W !,$E($P(^(0),U),1,40),?45,"TYPE=",$S($P(^(0),"^",6)=1:"INPUT",$P(^(0),"^",6)=2:"OUTPUT",$P(^(0),"^",6)=3:"SELECTION",1:"REPORT"),$S($P(^(0),U,6)=3&'$P(^(0),U,13):" ** NOT SCANNABLE **",1:""),!," "
	;;^DD(357.6,0,"IX","B",357.6,.01)
	;;=
	;;^DD(357.6,0,"IX","C",357.6,.04)
	;;=
	;;^DD(357.6,0,"IX","D",357.6,3)
	;;=
	;;^DD(357.6,0,"IX","E",357.6,.01)
	;;=
	;;^DD(357.6,0,"NM","PACKAGE INTERFACE")
	;;=
	;;^DD(357.6,0,"PT",357.13,.03)
	;;=
	;;^DD(357.6,0,"PT",357.14,.04)
	;;=
	;;^DD(357.6,0,"PT",357.2,.11)
	;;=
	;;^DD(357.6,0,"PT",357.5,.03)
	;;=
	;;^DD(357.6,0,"PT",357.6,.13)
	;;=
	;;^DD(357.6,0,"PT",357.93,.06)
	;;=
	;;^DD(357.6,0,"PT",357.951,.03)
	;;=
	;;^DD(357.6,0,"PT",357.952,.04)
	;;=
	;;^DD(357.6,0,"PT",357.961,.03)
	;;=
	;;^DD(357.6,0,"PT",358.94,.06)
	;;=
	;;^DD(357.6,0,"PT",359.94,.06)
	;;=
	;;^DD(357.6,0,"PT",409.9501,.01)
	;;=
	;;^DD(357.6,0,"PT",409.9502,.01)
	;;=
	;;^DD(357.6,0,"PT",409.961,.01)
	;;=
	;;^DD(357.6,.01,0)
	;;=NAME^RFX^^0;1^K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.6,.01,1,0)
	;;=^.1
	;;^DD(357.6,.01,1,1,0)
	;;=357.6^B
	;;^DD(357.6,.01,1,1,1)
	;;=S ^IBE(357.6,"B",$E(X,1,30),DA)=""
	;;^DD(357.6,.01,1,1,2)
	;;=K ^IBE(357.6,"B",$E(X,1,30),DA)
	;;^DD(357.6,.01,1,2,0)
	;;=357.6^E^MUMPS
	;;^DD(357.6,.01,1,2,1)
	;;=S ^IBE(357.6,"E",$E(X,$F(X," "),40),DA)=""
	;;^DD(357.6,.01,1,2,2)
	;;=K ^IBE(357.6,"E",$E(X,$F(X," "),40),DA)
	;;^DD(357.6,.01,1,2,"%D",0)
	;;=^^4^4^2940224^
	;;^DD(357.6,.01,1,2,"%D",1,0)
	;;= 
	;;^DD(357.6,.01,1,2,"%D",2,0)
	;;=For package interfaces that are output routines the name has the custodial
	;;^DD(357.6,.01,1,2,"%D",3,0)
	;;=package's name space as a prefix. This cross-reference removes that
	;;^DD(357.6,.01,1,2,"%D",4,0)
	;;=prefix. It is used to improve the display of output routines for the user.
	;;^DD(357.6,.01,1,2,"DT")
	;;=2930409
	;;^DD(357.6,.01,3)
	;;=The name should be prefixed with the namespace of the package that provides the data.
	;;^DD(357.6,.01,21,0)
	;;=^^3^3^2951017^
	;;^DD(357.6,.01,21,1,0)
	;;= 
	;;^DD(357.6,.01,21,2,0)
	;;=The name of the Package Interface. The name should be preceded with the
	;;^DD(357.6,.01,21,3,0)
	;;=namespace of the package.
	;;^DD(357.6,.01,23,0)
	;;=^^1^1^2951017^^^
	;;^DD(357.6,.01,23,1,0)
	;;= 
	;;^DD(357.6,.01,"DT")
	;;=2950919
	;;^DD(357.6,.02,0)
	;;=ENTRY POINT^F^^0;2^K:$L(X)>8!($L(X)<1) X
	;;^DD(357.6,.02,3)
	;;=What entry point into the routine does this package interface use?
	;;^DD(357.6,.02,21,0)
	;;=^^2^2^2941018^^
	;;^DD(357.6,.02,21,1,0)
	;;= 
	;;^DD(357.6,.02,21,2,0)
	;;=The entry point in the routine that should be called.
	;;^DD(357.6,.02,"DT")
	;;=2941018
	;;^DD(357.6,.03,0)
	;;=ROUTINE^F^^0;3^K:$L(X)>8!($L(X)<1) X
	;;^DD(357.6,.03,3)
	;;=What routine does this package interface use?

IBDIN00V
IBDIN00V	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.6,.03,21,0)
	;;=^^2^2^2941018^^
	;;^DD(357.6,.03,21,1,0)
	;;= 
	;;^DD(357.6,.03,21,2,0)
	;;=The routine that should be called.
	;;^DD(357.6,.03,"DT")
	;;=2921125
	;;^DD(357.6,.04,0)
	;;=CUSTODIAL PACKAGE^F^^0;4^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.6,.04,1,0)
	;;=^.1
	;;^DD(357.6,.04,1,1,0)
	;;=357.6^C
	;;^DD(357.6,.04,1,1,1)
	;;=S ^IBE(357.6,"C",$E(X,1,30),DA)=""
	;;^DD(357.6,.04,1,1,2)
	;;=K ^IBE(357.6,"C",$E(X,1,30),DA)
	;;^DD(357.6,.04,1,1,"DT")
	;;=2921229
	;;^DD(357.6,.04,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.6,.04,21,0)
	;;=^^2^2^2951017^^
	;;^DD(357.6,.04,21,1,0)
	;;=This is a free text pointer to the package file. It serves only to
	;;^DD(357.6,.04,21,2,0)
	;;=document the custodial package of the data.
	;;^DD(357.6,.04,"DT")
	;;=2951017
	;;^DD(357.6,.05,0)
	;;=VARIABLE DATA?^S^0:NO;1:YES;^0;5^Q
	;;^DD(357.6,.05,.1)
	;;=DOES THE DATA VARY FROM PATIENT TO PATIENT?
	;;^DD(357.6,.05,3)
	;;=Enter YES if the data returned is variable, NO if the data is always the same.
	;;^DD(357.6,.05,21,0)
	;;=^^3^3^2930726^^^
	;;^DD(357.6,.05,21,1,0)
	;;=This field is used in the batch printing of encounter forms. The purpose
	;;^DD(357.6,.05,21,2,0)
	;;=is to avoid recomputing fields whose data does not change from patient to
	;;^DD(357.6,.05,21,3,0)
	;;=patient.
	;;^DD(357.6,.05,"DT")
	;;=2931124
	;;^DD(357.6,.06,0)
	;;=ACTION TYPE^RS^1:INPUT;2:DISPLAY;3:SELECTION;4:PRINT REPORT;^0;6^Q
	;;^DD(357.6,.06,3)
	;;=Is this interface for inputting data, displaying data to a form, for creating lists that will appear on a form, or for printing reports?
	;;^DD(357.6,.06,21,0)
	;;=^^9^9^2950928^
	;;^DD(357.6,.06,21,1,0)
	;;=                                                                   
	;;^DD(357.6,.06,21,2,0)
	;;= 
	;;^DD(357.6,.06,21,3,0)
	;;=Enter 1 for INPUT if the interface accepts data input from the user
	;;^DD(357.6,.06,21,4,0)
	;;=and transmits the data to the appropriate package. Enter 2 for DISPLAY
	;;^DD(357.6,.06,21,5,0)
	;;=if the interface retrieves data for display to a form. Enter 3 for
	;;^DD(357.6,.06,21,6,0)
	;;=SELECTION if the interface is for building a list to display
	;;^DD(357.6,.06,21,7,0)
	;;=to a form. Enter 4 if the interface is for printing a report. If
	;;^DD(357.6,.06,21,8,0)
	;;=the ACTION TYPE is SELECTION then the data type must be a record and the
	;;^DD(357.6,.06,21,9,0)
	;;=first piece must be the ID use to uniquely identify the selection.
	;;^DD(357.6,.06,"DT")
	;;=2950825
	;;^DD(357.6,.07,0)
	;;=DATA TYPE^S^1:SINGLE VALUE;2:RECORD;3:LIST OF SINGLE VALUES;4:LIST OF RECORDS;5:WORD PROCESSING;^0;7^Q
	;;^DD(357.6,.07,.1)
	;;=WHAT FORMAT WILL THE DATA BE IN?
	;;^DD(357.6,.07,3)
	;;=What format will the data be in?
	;;^DD(357.6,.07,21,0)
	;;=^^9^9^2950825^
	;;^DD(357.6,.07,21,1,0)
	;;=Only applies to selection or display interfaces, both of which retrieve
	;;^DD(357.6,.07,21,2,0)
	;;=data for display to a form. It is the type of format the data should be
	;;^DD(357.6,.07,21,3,0)
	;;=in.
	;;^DD(357.6,.07,21,4,0)
	;;= 
	;;^DD(357.6,.07,21,5,0)
	;;=A single value is a string without pieces. A record is a set of strings
	;;^DD(357.6,.07,21,6,0)
	;;=concatenated together with "^" separating the pieces. A list is an
	;;^DD(357.6,.07,21,7,0)
	;;=indefinite number of values, each numbered, each containing the same type
	;;^DD(357.6,.07,21,8,0)
	;;=of information. A word processing data type will be in FM format.
	;;^DD(357.6,.07,21,9,0)
	;;=If the ACTION TYPE is SELECTION then the data type must be record.
	;;^DD(357.6,.07,"DT")
	;;=2930726
	;;^DD(357.6,.08,0)
	;;=PRINT COMPLETE^S^0:NO;1:YES;^0;8^Q
	;;^DD(357.6,.08,3)
	;;=If there is insufficient room on the form to print the data, should it be re-printed in full on a separate page?
	;;^DD(357.6,.08,21,0)
	;;=^^4^4^2930527^
	;;^DD(357.6,.08,21,1,0)
	;;= 
	;;^DD(357.6,.08,21,2,0)
	;;=This field is used to determine what should happen if the data does not
	;;^DD(357.6,.08,21,3,0)
	;;=fit in the space allocated to it on the form. If answered YES the data
	;;^DD(357.6,.08,21,4,0)
	;;=will be printed on another page.
	;;^DD(357.6,.08,"DT")
	;;=2930507
	;;^DD(357.6,.09,0)
	;;=AVAILABLE? (Y/N)^RS^0:NO;1:YES;^0;9^Q
	;;^DD(357.6,.09,3)
	;;=Is this package interface now available for use?
	;;^DD(357.6,.09,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.6,.09,21,1,0)
	;;= 
	;;^DD(357.6,.09,21,2,0)
	;;=This field should be set to YES if the interface is available, NO if it is
	;;^DD(357.6,.09,21,3,0)
	;;=not available. Interfaces that are not available are not called.
	;;^DD(357.6,.09,"DT")
	;;=2921213
	;;^DD(357.6,.1,0)
	;;=HEALTH SUMMARY?^S^0:NO;1:YES;^0;10^Q

IBDIN00W
IBDIN00W	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.6,.1,.1)
	;;=ARE YOU REQUESTING A HEALTH SUMMARY?
	;;^DD(357.6,.1,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(357.6,.1,3)
	;;= Are you requesting a HEALTH SUMMARY to print?
	;;^DD(357.6,.1,21,0)
	;;=^^7^7^2930616^
	;;^DD(357.6,.1,21,1,0)
	;;= 
	;;^DD(357.6,.1,21,2,0)
	;;=This field will determine how to go about printing the report or form. It
	;;^DD(357.6,.1,21,3,0)
	;;=applies only to Package Interfaces of ACTION TYPE = PRINT REPORT. Health
	;;^DD(357.6,.1,21,4,0)
	;;=Summaries use the field HEALTH SUMMARY to determine the type of Health
	;;^DD(357.6,.1,21,5,0)
	;;=Summary to print. The process of printing Health Summaries dos not use the
	;;^DD(357.6,.1,21,6,0)
	;;=fields ENTRY POINT or ROUTINE, since all Health Summaries are printed in
	;;^DD(357.6,.1,21,7,0)
	;;=the same way.
	;;^DD(357.6,.1,"DT")
	;;=2930616
	;;^DD(357.6,.11,0)
	;;=TYPE OF HEALTH SUMMARY^*P142'^GMT(142,^0;11^S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(357.6,.11,3)
	;;=Which Health Summary do you want printed?
	;;^DD(357.6,.11,12)
	;;=EXCLUDES AD HOC HEALTH SUMMARIES
	;;^DD(357.6,.11,12.1)
	;;=S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION"""
	;;^DD(357.6,.11,21,0)
	;;=^^4^4^2940224^
	;;^DD(357.6,.11,21,1,0)
	;;= 
	;;^DD(357.6,.11,21,2,0)
	;;=This identifies the Health Summary that should be printed when this
	;;^DD(357.6,.11,21,3,0)
	;;=Package Interface is invoked. It should be null unless the HEALTH SUMMARY?
	;;^DD(357.6,.11,21,4,0)
	;;=field #.1 is coded YES.
	;;^DD(357.6,.11,"DT")
	;;=2930617
	;;^DD(357.6,.12,0)
	;;=TOOLKIT MEMBER?^S^0:NO;1:YES;^0;12^Q
	;;^DD(357.6,.12,.1)
	;;=SHOULD THIS PACKAGE INTERFACE BE PART OF THE TOOLKIT?
	;;^DD(357.6,.12,3)
	;;=Enter YES if this PACKAGE INTERFACE was added by the package developers as part of the toolkit, enter NO otherwise.
	;;^DD(357.6,.12,21,0)
	;;=^^3^3^2950808^^
	;;^DD(357.6,.12,21,1,0)
	;;= 
	;;^DD(357.6,.12,21,2,0)
	;;=Package Interfaces that are developed for national use will be documented
	;;^DD(357.6,.12,21,3,0)
	;;=as being part of the toolkit.
	;;^DD(357.6,.12,"DT")
	;;=2950711
	;;^DD(357.6,.13,0)
	;;=PACKAGE INTERFACE FOR INPUT^*P357.6'^IBE(357.6,^0;13^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""S""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(357.6,.13,.1)
	;;=WHICH INTERFACE SHOULD THIS LIST USE FOR PASSING DATA TO THE DATA BASE?
	;;^DD(357.6,.13,3)
	;;=What interface should be used for inputting data entered on the selection list?
	;;^DD(357.6,.13,12)
	;;=Must be an available interfaces for accepting input from selection lists.
	;;^DD(357.6,.13,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""S"""
	;;^DD(357.6,.13,21,0)
	;;=^^1^1^2950825^^^^
	;;^DD(357.6,.13,21,1,0)
	;;=Used to map scanned data to DHCP.
	;;^DD(357.6,.13,"DT")
	;;=2950825
	;;^DD(357.6,.14,0)
	;;=DYNAMIC SELECTIONS^S^0:NO;1:YES;^0;14^Q
	;;^DD(357.6,.14,3)
	;;=Only for selection routines. Enter YES if the Package Interface builds the selection list each time the form is printed.
	;;^DD(357.6,.14,21,0)
	;;=^^2^2^2950719^
	;;^DD(357.6,.14,21,1,0)
	;;=This is used to indicate whether the interface is used to build selection
	;;^DD(357.6,.14,21,2,0)
	;;=lists at print time.
	;;^DD(357.6,.14,"DT")
	;;=2941221
	;;^DD(357.6,.15,0)
	;;=DO NOT USE DFN AS A SUBSCRIPT^*S^0:NO;1:YES;^0;15^Q
	;;^DD(357.6,.15,3)
	;;=If the patient DFN should not be used as a subscript when passing data enter YES.
	;;^DD(357.6,.15,12)
	;;=If the action type is not OUTPUT ROUTINE then this field should not be set to NO.
	;;^DD(357.6,.15,12.1)
	;;=S DIC("S")="I (Y=1)!($P(^IBE(357.6,DA,0),U,6)=2)"
	;;^DD(357.6,.15,21,0)
	;;=^^6^6^2950413^^^^
	;;^DD(357.6,.15,21,1,0)
	;;=Originally, the patient DFN was used as a subscript when returning data
	;;^DD(357.6,.15,21,2,0)
	;;=for Package Interfaces of type output, but not for other types of
	;;^DD(357.6,.15,21,3,0)
	;;=interfaces. It is no longer necessary for any new Package Interface to use
	;;^DD(357.6,.15,21,4,0)
	;;=DFN as a subscript, but, to maintain compatibilty, output routines
	;;^DD(357.6,.15,21,5,0)
	;;=must set this field to YES if DFN is not to be used as a subscript. This
	;;^DD(357.6,.15,21,6,0)
	;;=field has no effect on other types of interfaces.
	;;^DD(357.6,.15,"DT")
	;;=2950413
	;;^DD(357.6,.16,0)
	;;=ALLOWED OBJECT USE^FX^^0;16^S X=$$UPPER^VALM1(X) K:$L(X)>4!("SMHP"'[$E(X,1))!("SMHP"'[$E(X,2))!("SMHP"'[$E(X,3))!("SMHP"'[$E(X,4)) X
	;;^DD(357.6,.16,3)
	;;=
	;;^DD(357.6,.16,4)
	;;=D HELP7^IBDFU5A
	;;^DD(357.6,.16,21,0)
	;;=^^5^5^2950913^^^^
	;;^DD(357.6,.16,21,1,0)
	;;=This field applies only to package interfaces for input and is used to

IBDIN00X
IBDIN00X	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.6,.16,21,2,0)
	;;=determine which package interfaces a particular type of form object may
	;;^DD(357.6,.16,21,3,0)
	;;=point to. Some combinations don't make sense. For example, it would not
	;;^DD(357.6,.16,21,4,0)
	;;=make sense to allow a multiple choice question to point to vitals, which
	;;^DD(357.6,.16,21,5,0)
	;;=is used to input data such as temperature and blood pressure.
	;;^DD(357.6,.16,"DT")
	;;=2950913
	;;^DD(357.6,.17,0)
	;;=ASK FOR ADDITIONAL NARRATIVE^S^0:NO;1:YES;^0;17^Q
	;;^DD(357.6,.17,21,0)
	;;=^^7^7^2951207^
	;;^DD(357.6,.17,21,1,0)
	;;=Enter whether users should be prompt for specifying the provider narrative
	;;^DD(357.6,.17,21,2,0)
	;;=that will be sent to PCE (and problem list) when creating a selection list.
	;;^DD(357.6,.17,21,3,0)
	;;=If this is answered no and the narrative is sent to PCE then the text as it
	;;^DD(357.6,.17,21,4,0)
	;;=appears on the form will be used as the provider narrative.
	;;^DD(357.6,.17,21,5,0)
	;;= 
	;;^DD(357.6,.17,21,6,0)
	;;=Generally only dianosis and clinical lexicon entries will want this field 
	;;^DD(357.6,.17,21,7,0)
	;;=set to Yes.
	;;^DD(357.6,.17,"DT")
	;;=2951207
	;;^DD(357.6,.18,0)
	;;=ASK FOR CLINICAL LEXICON^S^0:NO;1:YES;^0;18^Q
	;;^DD(357.6,.18,3)
	;;=Enter 'Yes' if you want to map entries from this interface to the clinical lexicon
	;;^DD(357.6,.18,21,0)
	;;=^^10^10^2960205^
	;;^DD(357.6,.18,21,1,0)
	;;=If this field is answered 'Yes' then users who are editing or creating
	;;^DD(357.6,.18,21,2,0)
	;;=selection lists based on this interface will be asked to map each entry
	;;^DD(357.6,.18,21,3,0)
	;;=(thought it is optional) to a clinical lexicon entry.  This is highly
	;;^DD(357.6,.18,21,4,0)
	;;=recommended for user who are scanning diagnosis entries and trying to 
	;;^DD(357.6,.18,21,5,0)
	;;=add entries to the Patients Problem list.
	;;^DD(357.6,.18,21,6,0)
	;;= 
	;;^DD(357.6,.18,21,7,0)
	;;=The primary purpose of this field is to allow sites who have built selection
	;;^DD(357.6,.18,21,8,0)
	;;=lists using the ICD9 Diagnosis file to map each entry to the clinical lexicon.
	;;^DD(357.6,.18,21,9,0)
	;;=The Problem List EP has recommended that each problem added to the problem
	;;^DD(357.6,.18,21,10,0)
	;;=list be associated with a clinical lexicon entry.
	;;^DD(357.6,.18,"DT")
	;;=2960205
	;;^DD(357.6,.19,0)
	;;=DQ REQUIRED^S^1:YES;^0;19^Q
	;;^DD(357.6,.19,21,0)
	;;=^^2^2^2960228^^
	;;^DD(357.6,.19,21,1,0)
	;;=Field used to determine if a data qualifier is required for this
	;;^DD(357.6,.19,21,2,0)
	;;=input interface.
	;;^DD(357.6,.19,"DT")
	;;=2960212
	;;^DD(357.6,1,0)
	;;=DESCRIPTION^357.61^^1;0
	;;^DD(357.6,1,21,0)
	;;=^^1^1^2950719^^^^
	;;^DD(357.6,1,21,1,0)
	;;=Should describe the data being exchanged by the package interface.
	;;^DD(357.6,2.01,0)
	;;=PIECE 1 DESCRIPTIVE NAME^F^^2;1^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.6,2.01,.1)
	;;=WHAT IS THE FIRST PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(357.6,2.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.6,2.01,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.6,2.01,21,1,0)
	;;= 
	;;^DD(357.6,2.01,21,2,0)
	;;=Should be a descriptive name of the first field in the record returned by
	;;^DD(357.6,2.01,21,3,0)
	;;=the interface.
	;;^DD(357.6,2.01,"DT")
	;;=2930726
	;;^DD(357.6,2.02,0)
	;;=PIECE 1 MAXIMUM LENGTH^NJ3,0^^2;2^K:+X'=X!(X>210)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.6,2.02,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(357.6,2.02,3)
	;;=Type a Number between 0 and 210, 0 Decimal Digits
	;;^DD(357.6,2.02,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.6,2.02,21,1,0)
	;;= 
	;;^DD(357.6,2.02,21,2,0)
	;;=The maximum length of the first field of the record returned by the
	;;^DD(357.6,2.02,21,3,0)
	;;=interface.
	;;^DD(357.6,2.02,"DT")
	;;=2930726
	;;^DD(357.6,2.03,0)
	;;=*PIECE 2 DESCRIPTIVE NAME^F^^2;3^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.6,2.03,.1)
	;;=WHAT IS THE SECOND PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(357.6,2.03,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.6,2.03,21,0)
	;;=^^6^6^2950928^
	;;^DD(357.6,2.03,21,1,0)
	;;= 
	;;^DD(357.6,2.03,21,2,0)
	;;=A descriptive name of the second field of the record returned by the
	;;^DD(357.6,2.03,21,3,0)
	;;=interface routine.
	;;^DD(357.6,2.03,21,4,0)
	;;= 
	;;^DD(357.6,2.03,21,5,0)
	;;=This field is no longer used and is scheduled for deletion in a future
	;;^DD(357.6,2.03,21,6,0)
	;;=version.
	;;^DD(357.6,2.03,"DT")
	;;=2950330
	;;^DD(357.6,2.04,0)
	;;=*PIECE 2 MAXIMUM LENGTH^NJ3,0^^2;4^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.6,2.04,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(357.6,2.04,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits

IBDIN00Y
IBDIN00Y	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.6,2.04,21,0)
	;;=^^6^6^2950928^
	;;^DD(357.6,2.04,21,1,0)
	;;= 
	;;^DD(357.6,2.04,21,2,0)
	;;=The maximum length of the second field of the record returned by the
	;;^DD(357.6,2.04,21,3,0)
	;;=interface routine.
	;;^DD(357.6,2.04,21,4,0)
	;;= 
	;;^DD(357.6,2.04,21,5,0)
	;;=This field is no longer used and is scheduled for deletion in a future
	;;^DD(357.6,2.04,21,6,0)
	;;=version.
	;;^DD(357.6,2.04,"DT")
	;;=2950330
	;;^DD(357.6,2.05,0)
	;;=*PIECE 3 DESCRIPTIVE NAME^F^^2;5^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.6,2.05,.1)
	;;=WHAT IS THE THIRD PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(357.6,2.05,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.6,2.05,21,0)
	;;=^^6^6^2950928^^
	;;^DD(357.6,2.05,21,1,0)
	;;= 
	;;^DD(357.6,2.05,21,2,0)
	;;=A descriptive name of the third field of the record returned by the
	;;^DD(357.6,2.05,21,3,0)
	;;=interface routine.
	;;^DD(357.6,2.05,21,4,0)
	;;= 
	;;^DD(357.6,2.05,21,5,0)
	;;=This field is no longer used and is scheduled for deletion in a future
	;;^DD(357.6,2.05,21,6,0)
	;;=version.
	;;^DD(357.6,2.05,"DT")
	;;=2950330
	;;^DD(357.6,2.06,0)
	;;=*PIECE 3 MAXIMUM LENGTH^NJ3,0^^2;6^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.6,2.06,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(357.6,2.06,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(357.6,2.06,21,0)
	;;=^^5^5^2950928^^
	;;^DD(357.6,2.06,21,1,0)
	;;= 
	;;^DD(357.6,2.06,21,2,0)
	;;=The maximum length of the 3rd field returned by the interface routine.
	;;^DD(357.6,2.06,21,3,0)
	;;= 
	;;^DD(357.6,2.06,21,4,0)
	;;=This field is no longer used and is scheduled for deletion in
	;;^DD(357.6,2.06,21,5,0)
	;;=a future version.
	;;^DD(357.6,2.06,"DT")
	;;=2950330
	;;^DD(357.6,2.07,0)
	;;=*PIECE 4 DESCRIPTIVE NAME^F^^2;7^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.6,2.07,.1)
	;;=WHAT IS THE FOURTH PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(357.6,2.07,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.6,2.07,21,0)
	;;=^^5^5^2950928^
	;;^DD(357.6,2.07,21,1,0)
	;;= 
	;;^DD(357.6,2.07,21,2,0)
	;;=A descriptive name of the 4th field returned by the interface routine.
	;;^DD(357.6,2.07,21,3,0)
	;;= 
	;;^DD(357.6,2.07,21,4,0)
	;;=This field is no longer used and is scheduled for deletion in
	;;^DD(357.6,2.07,21,5,0)
	;;=a future version.
	;;^DD(357.6,2.07,"DT")
	;;=2950330
	;;^DD(357.6,2.08,0)
	;;=*PIECE 4 MAXIMUM LENGTH^NJ3,0^^2;8^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.6,2.08,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(357.6,2.08,3)
	;;=Type a Number between 1 and 200, 0 Decimal Digits
	;;^DD(357.6,2.08,21,0)
	;;=^^5^5^2950928^^
	;;^DD(357.6,2.08,21,1,0)
	;;= 
	;;^DD(357.6,2.08,21,2,0)
	;;=The maximum length of the 4th field returned by the interface routine.
	;;^DD(357.6,2.08,21,3,0)
	;;= 
	;;^DD(357.6,2.08,21,4,0)
	;;=This field is no longer used and is scheduled for deletion in a future
	;;^DD(357.6,2.08,21,5,0)
	;;=version.
	;;^DD(357.6,2.08,"DT")
	;;=2950330
	;;^DD(357.6,2.09,0)
	;;=*PIECE 5 DESCRIPTIVE NAME^F^^2;9^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.6,2.09,.1)
	;;=WHAT IS THE FIFTH PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(357.6,2.09,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.6,2.09,21,0)
	;;=^^5^5^2950928^
	;;^DD(357.6,2.09,21,1,0)
	;;= 
	;;^DD(357.6,2.09,21,2,0)
	;;=A descriptive name of the 5th field returned by the interface routine.
	;;^DD(357.6,2.09,21,3,0)
	;;= 
	;;^DD(357.6,2.09,21,4,0)
	;;=This field is no longer used and is scheduled for deletion in a future
	;;^DD(357.6,2.09,21,5,0)
	;;=version.
	;;^DD(357.6,2.09,"DT")
	;;=2950330
	;;^DD(357.6,2.1,0)
	;;=*PIECE 6 MAXIMUM LENGTH^NJ3,0^^2;10^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.6,2.1,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(357.6,2.1,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(357.6,2.1,21,0)
	;;=^^5^5^2950928^
	;;^DD(357.6,2.1,21,1,0)
	;;= 
	;;^DD(357.6,2.1,21,2,0)
	;;=The maximum length of the 5th field returned by the interface routine.
	;;^DD(357.6,2.1,21,3,0)
	;;= 
	;;^DD(357.6,2.1,21,4,0)
	;;=This field is no longer used and is scheduled for deletion in a future
	;;^DD(357.6,2.1,21,5,0)
	;;=version.
	;;^DD(357.6,2.1,"DT")
	;;=2950330
	;;^DD(357.6,2.11,0)
	;;=*PIECE 6 DESCRIPTIVE NAME^F^^2;11^K:$L(X)>20!($L(X)<3) X
	;;^DD(357.6,2.11,.1)
	;;=WHAT IS THE SIXTH PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(357.6,2.11,3)
	;;=Answer must be 3-20 characters in length.
	;;^DD(357.6,2.11,21,0)
	;;=^^5^5^2950928^
	;;^DD(357.6,2.11,21,1,0)
	;;= 
	;;^DD(357.6,2.11,21,2,0)
	;;=A descriptive name for the 6th field returned by the interface routine.
	;;^DD(357.6,2.11,21,3,0)
	;;= 

IBDIN00Z
IBDIN00Z	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.6,2.11,21,4,0)
	;;=This field is no longer used and is scheduled for deletion in a future
	;;^DD(357.6,2.11,21,5,0)
	;;=version.
	;;^DD(357.6,2.11,"DT")
	;;=2950417
	;;^DD(357.6,2.12,0)
	;;=*PIECE 6 MAXIMUM LENGTH^NJ3,0^^2;12^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.6,2.12,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(357.6,2.12,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(357.6,2.12,21,0)
	;;=^^5^5^2950928^^
	;;^DD(357.6,2.12,21,1,0)
	;;= 
	;;^DD(357.6,2.12,21,2,0)
	;;=The maximum length of the 6th field returned by the interface routine.
	;;^DD(357.6,2.12,21,3,0)
	;;= 
	;;^DD(357.6,2.12,21,4,0)
	;;=This field is no longer used and is scheduled for deletion in a future
	;;^DD(357.6,2.12,21,5,0)
	;;=version.
	;;^DD(357.6,2.12,"DT")
	;;=2950330
	;;^DD(357.6,2.13,0)
	;;=*PIECE 7 DESCRIPTIVE NAME^F^^2;13^K:$L(X)>20!($L(X)<3) X
	;;^DD(357.6,2.13,.1)
	;;=WHAT IS THE SEVENTH PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(357.6,2.13,3)
	;;=Answer must be 3-20 characters in length.
	;;^DD(357.6,2.13,21,0)
	;;=^^6^6^2950928^
	;;^DD(357.6,2.13,21,1,0)
	;;= 
	;;^DD(357.6,2.13,21,2,0)
	;;=A descriptive name for the 7th field returned by the package interface
	;;^DD(357.6,2.13,21,3,0)
	;;=routine.
	;;^DD(357.6,2.13,21,4,0)
	;;= 
	;;^DD(357.6,2.13,21,5,0)
	;;=This field is no longer used and is scheduled for deletion in
	;;^DD(357.6,2.13,21,6,0)
	;;=a future version.
	;;^DD(357.6,2.13,"DT")
	;;=2950417
	;;^DD(357.6,2.14,0)
	;;=*PIECE 7 MAXIMUM LENGTH^NJ3,0^^2;14^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.6,2.14,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(357.6,2.14,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(357.6,2.14,21,0)
	;;=^^5^5^2950928^
	;;^DD(357.6,2.14,21,1,0)
	;;= 
	;;^DD(357.6,2.14,21,2,0)
	;;=The maximum length of the 7th field returned by the interface routine.
	;;^DD(357.6,2.14,21,3,0)
	;;= 
	;;^DD(357.6,2.14,21,4,0)
	;;=This field is no longer used and is scheduled for deletion in a future
	;;^DD(357.6,2.14,21,5,0)
	;;=version.
	;;^DD(357.6,2.14,"DT")
	;;=2950330
	;;^DD(357.6,2.16,0)
	;;=PIECE 1 RECOMMENDED HEADER^F^^2;16^K:$L(X)>20!($L(X)<1) X
	;;^DD(357.6,2.16,3)
	;;=Answer must be 1-20 characters in length.
	;;^DD(357.6,2.16,21,0)
	;;=^^1^1^2950719^
	;;^DD(357.6,2.16,21,1,0)
	;;=The recommended header will be used as the default when designing a form.
	;;^DD(357.6,2.16,"DT")
	;;=2950417
	;;^DD(357.6,2.17,0)
	;;=IS PIECE 1 DISPLAYABLE?^S^0:NO;1:YES;^2;17^Q
	;;^DD(357.6,2.17,.1)
	;;=CAN THIS FIELD BE DISPLAYED TO THE USER?
	;;^DD(357.6,2.17,3)
	;;=The first piece of the returned record is reserved for the unique id of the selection. Enter no if it should not be displayed, for example, if it is a pointer.
	;;^DD(357.6,2.17,21,0)
	;;=^^3^3^2950719^^
	;;^DD(357.6,2.17,21,1,0)
	;;=This is used only for selection type interfaces. If NO, then the value can
	;;^DD(357.6,2.17,21,2,0)
	;;=not be displayed to the encounter form.  The first piece must contain the
	;;^DD(357.6,2.17,21,3,0)
	;;=unique id of the selection.
	;;^DD(357.6,2.17,"DT")
	;;=2930810
	;;^DD(357.6,2.18,0)
	;;=EXPORT SELECTIONS/CHOICES?^S^0:NO;1:YES;^2;18^Q
	;;^DD(357.6,2.18,3)
	;;=Enter NO if the ID returned by the PACKAGE INTERFACE is not constant between sites, for example, if it is a pointer. Otherwise answer YES.
	;;^DD(357.6,2.18,21,0)
	;;=^^8^8^2950825^
	;;^DD(357.6,2.18,21,1,0)
	;;= 
	;;^DD(357.6,2.18,21,2,0)
	;;= 
	;;^DD(357.6,2.18,21,3,0)
	;;=Applies to selection and input routines. Determines whether
	;;^DD(357.6,2.18,21,4,0)
	;;=selections appearing on selection lists and choices in a multiple choice
	;;^DD(357.6,2.18,21,5,0)
	;;=field will be exported along with the form that they appear on. The
	;;^DD(357.6,2.18,21,6,0)
	;;=import/export utility will not resolve pointers, so if the id used by
	;;^DD(357.6,2.18,21,7,0)
	;;=the package interface is a pointer that differs between sites
	;;^DD(357.6,2.18,21,8,0)
	;;=this field should contain NO.
	;;^DD(357.6,2.18,"DT")
	;;=2950825
	;;^DD(357.6,3,0)
	;;=USER LOOKUP^F^^3;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>240!($L(X)<1) X
	;;^DD(357.6,3,.1)
	;;=LIST OF WORDS TO MAKE LOOK-UPS EASIER
	;;^DD(357.6,3,1,0)
	;;=^.1
	;;^DD(357.6,3,1,1,0)
	;;=357.6^D^KWIC
	;;^DD(357.6,3,1,1,1)
	;;=S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^IBE(357.6,"D",I,DA)=""
	;;^DD(357.6,3,1,1,2)
	;;=S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^IBE(357.6,"D",I,DA)
	;;^DD(357.6,3,1,1,"%D",0)
	;;=^^3^3^2930409^^
	;;^DD(357.6,3,1,1,"%D",1,0)
	;;= 

IBDIN010
IBDIN010	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.6,3,1,1,"%D",2,0)
	;;=This index is meant to assist the user in locating the correct package
	;;^DD(357.6,3,1,1,"%D",3,0)
	;;=interface needed to display a particular item of data to a form.
	;;^DD(357.6,3,1,1,"DT")
	;;=2930309
	;;^DD(357.6,3,3)
	;;=Enter words separated with spaces. They will be indexed to assist in lookup.
	;;^DD(357.6,3,4)
	;;=D LOOKUP^IBDF16
	;;^DD(357.6,3,21,0)
	;;=^^4^4^2940217^
	;;^DD(357.6,3,21,1,0)
	;;= 
	;;^DD(357.6,3,21,2,0)
	;;=This field is used to create a KWIC index for this file. The purpose is to
	;;^DD(357.6,3,21,3,0)
	;;=assist the user in locating the package interface he needs to display a
	;;^DD(357.6,3,21,4,0)
	;;=particular item of data to a form.
	;;^DD(357.6,3,"DT")
	;;=2930726
	;;^DD(357.6,4.01,0)
	;;=ENTRY ACTION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(357.6,4.01,3)
	;;=This is Standard MUMPS code.
	;;^DD(357.6,4.01,9)
	;;=@
	;;^DD(357.6,4.01,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.6,4.01,21,1,0)
	;;= 
	;;^DD(357.6,4.01,21,2,0)
	;;=This code will be executed after the PROTECTED VARIABLES are newed, but
	;;^DD(357.6,4.01,21,3,0)
	;;=before the interface routine is called.
	;;^DD(357.6,4.01,"DT")
	;;=2930521
	;;^DD(357.6,5.01,0)
	;;=EXIT ACTION^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(357.6,5.01,3)
	;;=This is Standard MUMPS code.
	;;^DD(357.6,5.01,9)
	;;=@
	;;^DD(357.6,5.01,21,0)
	;;=^^3^3^2930528^
	;;^DD(357.6,5.01,21,1,0)
	;;= 
	;;^DD(357.6,5.01,21,2,0)
	;;=This code will be executed after the interface routine is called.
	;;^DD(357.6,5.01,21,3,0)
	;;=The effect of the NEW done on the PROTECTED VARIABLES is still in effect.
	;;^DD(357.6,5.01,"DT")
	;;=2930518
	;;^DD(357.6,6,0)
	;;=PROTECTED LOCAL VARIABLES^357.66^^6;0
	;;^DD(357.6,6,21,0)
	;;=^^11^11^2950719^^^
	;;^DD(357.6,6,21,1,0)
	;;= 
	;;^DD(357.6,6,21,2,0)
	;;=This is a list of variables that should be newed before the entry action
	;;^DD(357.6,6,21,3,0)
	;;=or calling the interface routine. It is protection against interfaces that
	;;^DD(357.6,6,21,4,0)
	;;=alter or kill variables, or entry actions that do so. Note that REQUIRED
	;;^DD(357.6,6,21,5,0)
	;;=VARIABLES should not also be PROTECTED VARIABLES. If an interface routine
	;;^DD(357.6,6,21,6,0)
	;;=changes a required variable, however, there is a way to protect it.
	;;^DD(357.6,6,21,7,0)
	;;=Supposing, for example, DFN is killed by the interface. This will protect
	;;^DD(357.6,6,21,8,0)
	;;=it:
	;;^DD(357.6,6,21,9,0)
	;;=     PROTECTED VARIABLE:   IBDFN
	;;^DD(357.6,6,21,10,0)
	;;=     ENTRY ACTION:  S IBDFN=DFN
	;;^DD(357.6,6,21,11,0)
	;;=     EXIT ACTION:   S DFN=IBDFN
	;;^DD(357.6,7,0)
	;;=REQUIRED LOCAL VARIABLES^357.67^^7;0
	;;^DD(357.6,7,21,0)
	;;=^^4^4^2930528^
	;;^DD(357.6,7,21,1,0)
	;;= 
	;;^DD(357.6,7,21,2,0)
	;;=The interface may require inputs. This field is a list of the required
	;;^DD(357.6,7,21,3,0)
	;;=local variables. The interface will not be called unless the variables are
	;;^DD(357.6,7,21,4,0)
	;;=determined to exist.
	;;^DD(357.6,8.01,0)
	;;=*PIECE 1 NODE^F^^8;1^K:$L(X)>10!($L(X)<1) X
	;;^DD(357.6,8.01,3)
	;;=You can optionally specify the subscript to store the data.
	;;^DD(357.6,8.01,21,0)
	;;=^^4^4^2950928^
	;;^DD(357.6,8.01,21,1,0)
	;;=For record type data, the node of the field can be optionally specified.
	;;^DD(357.6,8.01,21,2,0)
	;;= 
	;;^DD(357.6,8.01,21,3,0)
	;;=This field is no longer used and is scheduled for deletion in a future
	;;^DD(357.6,8.01,21,4,0)
	;;=version.
	;;^DD(357.6,8.01,"DT")
	;;=2950330
	;;^DD(357.6,8.02,0)
	;;=*PIECE 2 NODE^F^^8;2^K:$L(X)>10!($L(X)<1) X
	;;^DD(357.6,8.02,3)
	;;=You can optionally specify the subscript to store the data.
	;;^DD(357.6,8.02,21,0)
	;;=^^4^4^2950928^
	;;^DD(357.6,8.02,21,1,0)
	;;=For records you can optionally specify the node to store the field.
	;;^DD(357.6,8.02,21,2,0)
	;;= 
	;;^DD(357.6,8.02,21,3,0)
	;;=This field is no longer used and is scheduled for deletion in a future
	;;^DD(357.6,8.02,21,4,0)
	;;=version.
	;;^DD(357.6,8.02,"DT")
	;;=2950330
	;;^DD(357.6,8.03,0)
	;;=*PIECE 3 NODE^F^^8;3^K:$L(X)>10!($L(X)<1) X
	;;^DD(357.6,8.03,3)
	;;=You can optionally specify the subscript to store the data.
	;;^DD(357.6,8.03,21,0)
	;;=^^4^4^2950928^
	;;^DD(357.6,8.03,21,1,0)
	;;=For record type data you can optionally specify the node to store the data.
	;;^DD(357.6,8.03,21,2,0)
	;;= 
	;;^DD(357.6,8.03,21,3,0)
	;;=This field is no longer used and is scheduled for deletion in a future
	;;^DD(357.6,8.03,21,4,0)
	;;=version.
	;;^DD(357.6,8.03,"DT")
	;;=2950330
	;;^DD(357.6,8.04,0)
	;;=*PIECE 4 NODE^F^^8;4^K:$L(X)>10!($L(X)<1) X
	;;^DD(357.6,8.04,3)
	;;=You can optionally specify the subscript to store the data.

IBDIN011
IBDIN011	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.6,8.04,21,0)
	;;=^^4^4^2950928^
	;;^DD(357.6,8.04,21,1,0)
	;;=For record type data you can optionally specify the node to store the field.
	;;^DD(357.6,8.04,21,2,0)
	;;= 
	;;^DD(357.6,8.04,21,3,0)
	;;=This field is no longer used and is scheduled for deletion in a future
	;;^DD(357.6,8.04,21,4,0)
	;;=version.
	;;^DD(357.6,8.04,"DT")
	;;=2950330
	;;^DD(357.6,8.05,0)
	;;=*PIECE 5 NODE^F^^8;5^K:$L(X)>10!($L(X)<1) X
	;;^DD(357.6,8.05,3)
	;;=You can optionally specify the subscript to store the data.
	;;^DD(357.6,8.05,21,0)
	;;=^^4^4^2950928^
	;;^DD(357.6,8.05,21,1,0)
	;;=For record type data you can optionally specify the node to store the field.
	;;^DD(357.6,8.05,21,2,0)
	;;= 
	;;^DD(357.6,8.05,21,3,0)
	;;=This field is no longer used and is scheduled for deletion in a future
	;;^DD(357.6,8.05,21,4,0)
	;;=version.
	;;^DD(357.6,8.05,"DT")
	;;=2950330
	;;^DD(357.6,8.06,0)
	;;=*PIECE 6 NODE^F^^8;6^K:$L(X)>10!($L(X)<1) X
	;;^DD(357.6,8.06,3)
	;;=You can optionally specify the subscript to store the data.
	;;^DD(357.6,8.06,21,0)
	;;=^^4^4^2950928^
	;;^DD(357.6,8.06,21,1,0)
	;;=For records you can optionally specify the node to store the field.
	;;^DD(357.6,8.06,21,2,0)
	;;= 
	;;^DD(357.6,8.06,21,3,0)
	;;=This field is no longer used and is scheduled for deletion in a future
	;;^DD(357.6,8.06,21,4,0)
	;;=version.
	;;^DD(357.6,8.06,"DT")
	;;=2950330
	;;^DD(357.6,8.07,0)
	;;=*PIECE 7 NODE^F^^8;7^K:$L(X)>10!($L(X)<1) X
	;;^DD(357.6,8.07,3)
	;;=You can optionally specify the subscript to store the data.
	;;^DD(357.6,8.07,21,0)
	;;=^^4^4^2950928^
	;;^DD(357.6,8.07,21,1,0)
	;;=For records you can optionally specify the node to store the field at.
	;;^DD(357.6,8.07,21,2,0)
	;;= 
	;;^DD(357.6,8.07,21,3,0)
	;;=This field is no longer used and is scheduled for deletion in a future
	;;^DD(357.6,8.07,21,4,0)
	;;=version.
	;;^DD(357.6,8.07,"DT")
	;;=2950410
	;;^DD(357.6,9,0)
	;;=PCE DIM INPUT TRANSFORM^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(357.6,9,3)
	;;=The input transform should transform X to the value that should be passed.
	;;^DD(357.6,9,9)
	;;=@
	;;^DD(357.6,9,21,0)
	;;=^^3^3^2960401^^
	;;^DD(357.6,9,21,1,0)
	;;=Used to transform X, the identifier stored with the form object, to the
	;;^DD(357.6,9,21,2,0)
	;;=form that should be passed to the PCE Device Interface Module. It may, for
	;;^DD(357.6,9,21,3,0)
	;;=example, transform a code to an ien.
	;;^DD(357.6,9,"DT")
	;;=2960401
	;;^DD(357.6,10,0)
	;;=HELP TEXT^F^^10;1^K:$L(X)>245!($L(X)<1) X
	;;^DD(357.6,10,3)
	;;=This should provide some help to the user who is trying to enter a value associated with a bubble.
	;;^DD(357.6,10,21,0)
	;;=^^2^2^2950817^^^
	;;^DD(357.6,10,21,1,0)
	;;=This should provide some help to the user who is trying to enter a value
	;;^DD(357.6,10,21,2,0)
	;;=associated with a bubble.
	;;^DD(357.6,10,"DT")
	;;=2950522
	;;^DD(357.6,11,0)
	;;=VALIDATOR^K^^11;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(357.6,11,3)
	;;=This is Standard MUMPS code will kill X if X no longer identifies a valid code.
	;;^DD(357.6,11,9)
	;;=@
	;;^DD(357.6,11,21,0)
	;;=^^7^7^2950825^
	;;^DD(357.6,11,21,1,0)
	;;=This field is used to validate codes currently on a form. The variable X
	;;^DD(357.6,11,21,2,0)
	;;=should be set to the identifier that was returned by the Package
	;;^DD(357.6,11,21,3,0)
	;;=Interface. For selection interfaces, the identifier is always piece 1 of
	;;^DD(357.6,11,21,4,0)
	;;=the 0 node of the entry in the selection list. Xecuting this field will
	;;^DD(357.6,11,21,5,0)
	;;=result in X being killed if the value is not valid. This is used by the
	;;^DD(357.6,11,21,6,0)
	;;=maintanance utility, for example, to find CPT codes that have been
	;;^DD(357.6,11,21,7,0)
	;;=inactivated.
	;;^DD(357.6,11,"DT")
	;;=2950908
	;;^DD(357.6,12.01,0)
	;;=PCE DIM NODE^F^^12;1^K:$L(X)>30!($L(X)<1) X
	;;^DD(357.6,12.01,3)
	;;=What node will be used to pass the data?
	;;^DD(357.6,12.01,21,0)
	;;=^^1^1^2951017^^
	;;^DD(357.6,12.01,21,1,0)
	;;=The node used to pass the data to PCE, using the PCE DEVICE INTERFACE MODULE.
	;;^DD(357.6,12.01,"DT")
	;;=2951017
	;;^DD(357.6,12.02,0)
	;;=PCE DIM PIECE, VALUE^NJ2,0^^12;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.6,12.02,3)
	;;=What piece should be used to pass the value?
	;;^DD(357.6,12.02,21,0)
	;;=^^1^1^2951017^^^
	;;^DD(357.6,12.02,21,1,0)
	;;=The piece in the PXCA node used to pass the input value.
	;;^DD(357.6,12.02,"DT")
	;;=2951017
	;;^DD(357.6,12.03,0)
	;;=PCE DIM PIECE, NARRATIVE^NJ2,0^^12;3^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.6,12.03,3)
	;;=What piece should be used to pass the text displayed on the form?

IBDIN012
IBDIN012	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.6,12.03,21,0)
	;;=^^1^1^2950317^^^
	;;^DD(357.6,12.03,21,1,0)
	;;=The piece in the PCXA node used to pass the text displayed on the form.
	;;^DD(357.6,12.03,"DT")
	;;=2951017
	;;^DD(357.6,12.04,0)
	;;=PCE DIM PIECE, HEADER^NJ2,0^^12;4^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.6,12.04,3)
	;;=What piece should be used to pass the header displayed on the form?
	;;^DD(357.6,12.04,21,0)
	;;=^^2^2^2951017^
	;;^DD(357.6,12.04,21,1,0)
	;;=The piece on the node specified by the PCE DIM that the header is mapped
	;;^DD(357.6,12.04,21,2,0)
	;;=to.
	;;^DD(357.6,12.04,"DT")
	;;=2951017
	;;^DD(357.6,12.05,0)
	;;=PCE DIM PIECE, DATA QUALIFIER^NJ2,0^^12;5^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.6,12.05,3)
	;;=What piece should be used to pass the data qualifier?
	;;^DD(357.6,12.05,21,0)
	;;=^^1^1^2951017^
	;;^DD(357.6,12.05,21,1,0)
	;;=The piece of the PXCA node where the data modifier belongs.
	;;^DD(357.6,12.05,"DT")
	;;=2951017
	;;^DD(357.6,13,0)
	;;=ALLOWABLE QUALIFIERS^357.613V^^13;0
	;;^DD(357.6,13,21,0)
	;;=^^2^2^2950928^
	;;^DD(357.6,13,21,1,0)
	;;=This mulitiple contains the list of qualifiers that may apply to the
	;;^DD(357.6,13,21,2,0)
	;;=data.
	;;^DD(357.6,14,0)
	;;=PCE DIM OUTPUT TRANSFORM^K^^14;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(357.6,14,3)
	;;=This should change Y, the value to be passed, to a value suitable for display.
	;;^DD(357.6,14,9)
	;;=@
	;;^DD(357.6,14,21,0)
	;;=^^3^3^2960401^^
	;;^DD(357.6,14,21,1,0)
	;;=This transform should set Y, the value to be passed to the PCE 
	;;^DD(357.6,14,21,2,0)
	;;=Device Interface Module (DIM), to a value that is suitable for
	;;^DD(357.6,14,21,3,0)
	;;=display. It may, for example, change an ien to a code.
	;;^DD(357.6,14,"DT")
	;;=2960401
	;;^DD(357.6,15,0)
	;;=DATA DESCRIPTION^357.615I^^15;0
	;;^DD(357.6,15,21,0)
	;;=^^2^2^2950330^
	;;^DD(357.6,15,21,1,0)
	;;=For interfaces that return records, this multiple stores information on
	;;^DD(357.6,15,21,2,0)
	;;=the fields, other than the first field.
	;;^DD(357.6,16.1,0)
	;;=ALLOW INPUT OF NARRATIVE?^S^n:NO;o:OPTIONAL;r:REQUIRED;^16;1^Q
	;;^DD(357.6,16.1,3)
	;;=Should the user be allowed to enter a narrative? Answer n=NO, o=OPTIONAL, r=REQUIRED
	;;^DD(357.6,16.1,21,0)
	;;=^^2^2^2950915^
	;;^DD(357.6,16.1,21,1,0)
	;;=For selection interfaces, this field determines whether a narrative is
	;;^DD(357.6,16.1,21,2,0)
	;;=allowed by the PCE Generic Device Interface.
	;;^DD(357.6,16.1,"DT")
	;;=2950421
	;;^DD(357.6,16.2,0)
	;;=NARRATIVE DATA TYPE^P359.1'^IBE(359.1,^16;2^Q
	;;^DD(357.6,16.2,3)
	;;=What data type definition describes the narrative?
	;;^DD(357.6,16.2,21,0)
	;;=^^2^2^2950719^
	;;^DD(357.6,16.2,21,1,0)
	;;=This determines, among other things, how much space to allocate for the
	;;^DD(357.6,16.2,21,2,0)
	;;=narrative.
	;;^DD(357.6,16.2,"DT")
	;;=2950426
	;;^DD(357.6,16.3,0)
	;;=NARRATIVE HEADER^F^^16;3^K:$L(X)>40!($L(X)<1) X
	;;^DD(357.6,16.3,3)
	;;=Answer must be 1-40 characters in length.
	;;^DD(357.6,16.3,21,0)
	;;=^^1^1^2950825^
	;;^DD(357.6,16.3,21,1,0)
	;;=Used to label the narrative field.
	;;^DD(357.6,16.3,"DT")
	;;=2950815
	;;^DD(357.6,16.5,0)
	;;=ALLOW INPUT OF PRIMARY VALUE?^S^n:NO;o:OPTIONAL;r:REQUIRED;^16;5^Q
	;;^DD(357.6,16.5,3)
	;;=Should a code be entered? n=NO, o=OPTIONAL, r=REQUIRED
	;;^DD(357.6,16.5,21,0)
	;;=^^2^2^2950915^
	;;^DD(357.6,16.5,21,1,0)
	;;=For selectin interfaces this determines whether a value, other than a
	;;^DD(357.6,16.5,21,2,0)
	;;=narrative, can be entered.
	;;^DD(357.6,16.5,"DT")
	;;=2950426
	;;^DD(357.6,16.6,0)
	;;=PRIMARY VALUE DATA TYPE^P359.1'^IBE(359.1,^16;6^Q
	;;^DD(357.6,16.6,3)
	;;=What type of data is the primary value?
	;;^DD(357.6,16.6,21,0)
	;;=^^2^2^2950915^
	;;^DD(357.6,16.6,21,1,0)
	;;=For selection interfaces this determines, among other things, the data
	;;^DD(357.6,16.6,21,2,0)
	;;=type of the value to be entered.
	;;^DD(357.6,16.6,"DT")
	;;=2950426
	;;^DD(357.6,16.7,0)
	;;=PRIMARY VALUE HEADER^F^^16;7^K:$L(X)>40!($L(X)<1) X
	;;^DD(357.6,16.7,3)
	;;=Answer must be 1-40 characters in length.
	;;^DD(357.6,16.7,21,0)
	;;=^^1^1^2950815^
	;;^DD(357.6,16.7,21,1,0)
	;;=Used to label the primary value field.
	;;^DD(357.6,16.7,"DT")
	;;=2950815
	;;^DD(357.6,17,0)
	;;=SELECTOR^K^^17;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(357.6,17,3)
	;;=Enter mumps code that will allow the form designer to add a choice to a multiple choice field.
	;;^DD(357.6,17,9)
	;;=@
	;;^DD(357.6,17,21,0)
	;;=^^9^9^2951208^^^
	;;^DD(357.6,17,21,1,0)
	;;=This field only applies to input interfaces. It is executed as by an input
	;;^DD(357.6,17,21,2,0)
	;;=transform when creating a multiple choice field. It should:

IBDIN013
IBDIN013	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.6,17,21,3,0)
	;;=1) Kill X if an nothing is selected, otherwise set X to a value suitable
	;;^DD(357.6,17,21,4,0)
	;;=for display, perhaps the code.
	;;^DD(357.6,17,21,5,0)
	;;=2) Set IBLABEL to a suitable label for the choice.
	;;^DD(357.6,17,21,6,0)
	;;=3) Set IBID to an identifier. The identifier should ideally be exportable,
	;;^DD(357.6,17,21,7,0)
	;;=meaning the same from site to site. This usually means a coded value
	;;^DD(357.6,17,21,8,0)
	;;=rather than an ien. The identfier should match that of a corresponding
	;;^DD(357.6,17,21,9,0)
	;;=selection interface, if there is one.
	;;^DD(357.6,17,"DT")
	;;=2950908
	;;^DD(357.6,18,0)
	;;=MANUAL DATA ENTRY ROUTINE^K^^18;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(357.6,18,3)
	;;=Enter the code to be executed during manual data entry for this interface.  This is Standard MUMPS code.
	;;^DD(357.6,18,9)
	;;=@
	;;^DD(357.6,18,21,0)
	;;=^^10^10^2951208^
	;;^DD(357.6,18,21,1,0)
	;;=Enter the code to be executed to do manual data entry for this interface.
	;;^DD(357.6,18,21,2,0)
	;;= 
	;;^DD(357.6,18,21,3,0)
	;;=This field should only be completed for input package interfaces.  This
	;;^DD(357.6,18,21,4,0)
	;;=code will be executed to provide quick data entry for a user trying to
	;;^DD(357.6,18,21,5,0)
	;;=input data for a form.  It is expected that the output of this field will
	;;^DD(357.6,18,21,6,0)
	;;=be used to format the PXCA array prior to calling PCE to file the data
	;;^DD(357.6,18,21,7,0)
	;;=for the encounter.
	;;^DD(357.6,18,21,8,0)
	;;=
	;;^DD(357.6,18,21,9,0)
	;;=Developers writing routines for this entry should provide a roll and scroll
	;;^DD(357.6,18,21,10,0)
	;;=interface for manaul entry of items only on the form.
	;;^DD(357.6,18,"DT")
	;;=2951208
	;;^DD(357.6,19,0)
	;;=EXTERNAL DISPLAY VALUES^K^^19;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(357.6,19,3)
	;;=This is Standard MUMPS code.
	;;^DD(357.6,19,9)
	;;=@
	;;^DD(357.6,19,21,0)
	;;=^^5^5^2960228^^^^
	;;^DD(357.6,19,21,1,0)
	;;=Executable code used to translate the internal value that is to
	;;^DD(357.6,19,21,2,0)
	;;=be passed to PCE into its external value for display purposes.  It
	;;^DD(357.6,19,21,3,0)
	;;=is used by the data validation routines to display the external
	;;^DD(357.6,19,21,4,0)
	;;=values and descriptions of what is to be passed, to the
	;;^DD(357.6,19,21,5,0)
	;;=user for verification.
	;;^DD(357.6,19,"DT")
	;;=2960214
	;;^DD(357.61,0)
	;;=DESCRIPTION SUB-FIELD^^.01^1
	;;^DD(357.61,0,"DT")
	;;=2921119
	;;^DD(357.61,0,"NM","DESCRIPTION")
	;;=
	;;^DD(357.61,0,"UP")
	;;=357.6
	;;^DD(357.61,.01,0)
	;;=/6^W^^0;1^Q
	;;^DD(357.61,.01,3)
	;;=Enter a description of the data being exchanged.
	;;^DD(357.61,.01,21,0)
	;;=^^1^1^2950719^^
	;;^DD(357.61,.01,21,1,0)
	;;=This should describe the data being exchanged b the package interface.
	;;^DD(357.61,.01,"DT")
	;;=2930210
	;;^DD(357.613,0)
	;;=ALLOWABLE QUALIFIERS SUB-FIELD^^.01^6
	;;^DD(357.613,0,"DT")
	;;=2950810
	;;^DD(357.613,0,"IX","B",357.613,.01)
	;;=
	;;^DD(357.613,0,"NM","ALLOWABLE QUALIFIERS")
	;;=
	;;^DD(357.613,0,"UP")
	;;=357.6
	;;^DD(357.613,.01,0)
	;;=ALLOWABLE QUALIFIERS^MV^^0;1^Q
	;;^DD(357.613,.01,1,0)
	;;=^.1
	;;^DD(357.613,.01,1,1,0)
	;;=357.613^B
	;;^DD(357.613,.01,1,1,1)
	;;=S ^IBE(357.6,DA(1),13,"B",$E(X,1,30),DA)=""
	;;^DD(357.613,.01,1,1,2)
	;;=K ^IBE(357.6,DA(1),13,"B",$E(X,1,30),DA)
	;;^DD(357.613,.01,1,1,3)
	;;=Required Index for Variable Pointer
	;;^DD(357.613,.01,3)
	;;=Which qualifiers can apply to the data?
	;;^DD(357.613,.01,21,0)
	;;=^^1^1^2950814^^
	;;^DD(357.613,.01,21,1,0)
	;;=A qualifier that can be used by this package interface.
	;;^DD(357.613,.01,"DT")
	;;=2950426
	;;^DD(357.613,.01,"V",0)
	;;=^.12P^2^2
	;;^DD(357.613,.01,"V",1,0)
	;;=357.98^DATA QUALIFIER^1^Q^n^n
	;;^DD(357.613,.01,"V",2,0)
	;;=359.1^TYPE OF DATA^2^D^n^n
	;;^DD(357.613,.03,0)
	;;=INDEPENDENT MAPPING INFO?^RS^0:NO;1:YES;^0;3^Q
	;;^DD(357.613,.03,3)
	;;=YES means that fields on the form associated with this qualifier will have its own rules for entering the data to the database.
	;;^DD(357.613,.03,21,0)
	;;=^^1^1^2951017^
	;;^DD(357.613,.03,21,1,0)
	;;=YES means that data can be mapped into the PCE DIM based on the qualifier.
	;;^DD(357.613,.03,"DT")
	;;=2950426
	;;^DD(357.613,.04,0)
	;;=PCE DIM NODE^F^^0;4^K:$L(X)>30!($L(X)<1) X
	;;^DD(357.613,.04,3)
	;;=What node should the qualifier be placed on?
	;;^DD(357.613,.04,21,0)
	;;=^^1^1^2951017^^
	;;^DD(357.613,.04,21,1,0)
	;;=The node where the data should be placed.
	;;^DD(357.613,.04,"DT")
	;;=2951017
	;;^DD(357.613,.05,0)
	;;=PCE DIM PIECE, VALUE^NJ2,0^^0;5^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X

IBDIN014
IBDIN014	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.613,.05,3)
	;;=What piece should the primary value be located?
	;;^DD(357.613,.05,21,0)
	;;=^^1^1^2950719^
	;;^DD(357.613,.05,21,1,0)
	;;=The piece on the node where the value should be placed.
	;;^DD(357.613,.05,"DT")
	;;=2951017
	;;^DD(357.613,.07,0)
	;;=PCE DIM PIECE, HEADER^NJ2,0^^0;7^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.613,.07,3)
	;;=What piece should the header be located on?
	;;^DD(357.613,.07,21,0)
	;;=^^1^1^2951017^^
	;;^DD(357.613,.07,21,1,0)
	;;=The piece on the node where the associated header should be placed.
	;;^DD(357.613,.07,"DT")
	;;=2951017
	;;^DD(357.613,.08,0)
	;;=PCE DIM PIECE, QUALIFIER^NJ2,0^^0;8^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.613,.08,3)
	;;=What piece should the qualifier be located on?
	;;^DD(357.613,.08,21,0)
	;;=^^1^1^2950719^
	;;^DD(357.613,.08,21,1,0)
	;;=The piece where the qualifier should go.
	;;^DD(357.613,.08,"DT")
	;;=2951017
	;;^DD(357.615,0)
	;;=DATA DESCRIPTION SUB-FIELD^^.05^5
	;;^DD(357.615,0,"DT")
	;;=2950417
	;;^DD(357.615,0,"ID","WRITE")
	;;=W "  PIECE="_$P(^(0),U,3)
	;;^DD(357.615,0,"IX","B",357.615,.01)
	;;=
	;;^DD(357.615,0,"IX","C",357.615,.03)
	;;=
	;;^DD(357.615,0,"NM","DATA DESCRIPTION")
	;;=
	;;^DD(357.615,0,"UP")
	;;=357.6
	;;^DD(357.615,.01,0)
	;;=DATA^MF^^0;1^K:$L(X)>30!($L(X)<1) X
	;;^DD(357.615,.01,1,0)
	;;=^.1
	;;^DD(357.615,.01,1,1,0)
	;;=357.615^B
	;;^DD(357.615,.01,1,1,1)
	;;=S ^IBE(357.6,DA(1),15,"B",$E(X,1,30),DA)=""
	;;^DD(357.615,.01,1,1,2)
	;;=K ^IBE(357.6,DA(1),15,"B",$E(X,1,30),DA)
	;;^DD(357.615,.01,3)
	;;=Enter a descriptive name for this data field, up to 30 characters.
	;;^DD(357.615,.01,21,0)
	;;=^^1^1^2950719^
	;;^DD(357.615,.01,21,1,0)
	;;=A descriptive name for the data.
	;;^DD(357.615,.01,"DT")
	;;=2950320
	;;^DD(357.615,.02,0)
	;;=MAXIMUM LENGTH^RNJ3,0^^0;2^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.615,.02,3)
	;;=What is the maximum length of this field?
	;;^DD(357.615,.02,21,0)
	;;=^^1^1^2950719^
	;;^DD(357.615,.02,21,1,0)
	;;=The maximum length of the data.
	;;^DD(357.615,.02,"DT")
	;;=2950320
	;;^DD(357.615,.03,0)
	;;=PIECE^NJ1,0X^^0;3^K:+X'=X!(X>8)!(X<2)!(X?.E1"."1N.N)!($D(^IBE(357.6,D0,15,"C",X))) X
	;;^DD(357.615,.03,1,0)
	;;=^.1
	;;^DD(357.615,.03,1,1,0)
	;;=357.615^C
	;;^DD(357.615,.03,1,1,1)
	;;=S ^IBE(357.6,DA(1),15,"C",$E(X,1,30),DA)=""
	;;^DD(357.615,.03,1,1,2)
	;;=K ^IBE(357.6,DA(1),15,"C",$E(X,1,30),DA)
	;;^DD(357.615,.03,1,1,"%D",0)
	;;=^^1^1^2950320^
	;;^DD(357.615,.03,1,1,"%D",1,0)
	;;=Indexes the field by piece.
	;;^DD(357.615,.03,1,1,"DT")
	;;=2950320
	;;^DD(357.615,.03,3)
	;;=In the returned record, which piece will this field be?
	;;^DD(357.615,.03,21,0)
	;;=^^2^2^2950918^^
	;;^DD(357.615,.03,21,1,0)
	;;=The piece that the data will be returned as. Doesn't allow
	;;^DD(357.615,.03,21,2,0)
	;;=piece 1 because that is stored in field #2.01.
	;;^DD(357.615,.03,"DT")
	;;=2950407
	;;^DD(357.615,.04,0)
	;;=ANNEX NODE^F^^0;4^K:$L(X)>10!($L(X)<1) X
	;;^DD(357.615,.04,3)
	;;=You can optionally specify the subscript to store the data. Use this when the entire record won't fit on one node.
	;;^DD(357.615,.04,21,0)
	;;=^^2^2^2950719^
	;;^DD(357.615,.04,21,1,0)
	;;=In case all the returned data can not be returned on a single node an
	;;^DD(357.615,.04,21,2,0)
	;;=annex node can be specified.
	;;^DD(357.615,.04,"DT")
	;;=2950320
	;;^DD(357.615,.05,0)
	;;=RECOMMENDED HEADER^F^^0;5^K:$L(X)>40!($L(X)<1) X
	;;^DD(357.615,.05,3)
	;;=Answer must be 1-40 characters in length.
	;;^DD(357.615,.05,21,0)
	;;=^^1^1^2950719^^
	;;^DD(357.615,.05,21,1,0)
	;;=The recommended header will be used as the default when designing a form.
	;;^DD(357.615,.05,"DT")
	;;=2950417
	;;^DD(357.66,0)
	;;=PROTECTED LOCAL VARIABLES SUB-FIELD^^.01^1
	;;^DD(357.66,0,"DT")
	;;=2930608
	;;^DD(357.66,0,"IX","B",357.66,.01)
	;;=
	;;^DD(357.66,0,"NM","PROTECTED LOCAL VARIABLES")
	;;=
	;;^DD(357.66,0,"UP")
	;;=357.6
	;;^DD(357.66,.01,0)
	;;=PROTECTED LOCAL VARIABLES^MFX^^0;1^K:'$$VARIABLE^IBDFU5(X) X
	;;^DD(357.66,.01,1,0)
	;;=^.1
	;;^DD(357.66,.01,1,1,0)
	;;=357.66^B
	;;^DD(357.66,.01,1,1,1)
	;;=S ^IBE(357.6,DA(1),6,"B",$E(X,1,30),DA)=""
	;;^DD(357.66,.01,1,1,2)
	;;=K ^IBE(357.6,DA(1),6,"B",$E(X,1,30),DA)
	;;^DD(357.66,.01,3)
	;;=Enter variables that should be NEWED before the entry action or calling the interface.
	;;^DD(357.66,.01,21,0)
	;;=^^3^3^2950426^^
	;;^DD(357.66,.01,21,1,0)
	;;= 
	;;^DD(357.66,.01,21,2,0)
	;;=A list of variables that should be newed before the entry action or
	;;^DD(357.66,.01,21,3,0)
	;;=calling the interface.
	;;^DD(357.66,.01,"DT")
	;;=2930608
	;;^DD(357.67,0)
	;;=REQUIRED LOCAL VARIABLES SUB-FIELD^^.01^1

IBDIN015
IBDIN015	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.67,0,"DT")
	;;=2930521
	;;^DD(357.67,0,"IX","B",357.67,.01)
	;;=
	;;^DD(357.67,0,"NM","REQUIRED LOCAL VARIABLES")
	;;=
	;;^DD(357.67,0,"UP")
	;;=357.6
	;;^DD(357.67,.01,0)
	;;=REQUIRED LOCAL VARIABLE^MFX^^0;1^K:'$$VARIABLE^IBDFU5(X) X
	;;^DD(357.67,.01,1,0)
	;;=^.1
	;;^DD(357.67,.01,1,1,0)
	;;=357.67^B
	;;^DD(357.67,.01,1,1,1)
	;;=S ^IBE(357.6,DA(1),7,"B",$E(X,1,30),DA)=""
	;;^DD(357.67,.01,1,1,2)
	;;=K ^IBE(357.6,DA(1),7,"B",$E(X,1,30),DA)
	;;^DD(357.67,.01,3)
	;;=Enter any variables that must exist before the Package Interface routine is called.
	;;^DD(357.67,.01,21,0)
	;;=^^4^4^2930528^
	;;^DD(357.67,.01,21,1,0)
	;;= 
	;;^DD(357.67,.01,21,2,0)
	;;=A variable that is required input to the interface routine. The interface
	;;^DD(357.67,.01,21,3,0)
	;;=routine will not be called if all of the required variables are not
	;;^DD(357.67,.01,21,4,0)
	;;=defined.
	;;^DD(357.67,.01,"DT")
	;;=2930521

IBDIN016
IBDIN016	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6)
	;;=^IBE(357.6,
	;;^UTILITY(U,$J,357.6,0)
	;;=PACKAGE INTERFACE^357.6I^103^87
	;;^UTILITY(U,$J,357.6,1,0)
	;;=DPT PATIENT'S NAME^VADPT^IBDFN^REGISTRATION^1^2^1^1^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,1,1,0)
	;;=^^2^2^2930212^^^^
	;;^UTILITY(U,$J,357.6,1,1,1,0)
	;;= 
	;;^UTILITY(U,$J,357.6,1,1,2,0)
	;;=Patient's Name
	;;^UTILITY(U,$J,357.6,1,2)
	;;=Patient's Name^30^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,1,3)
	;;=PATIENT NAME
	;;^UTILITY(U,$J,357.6,1,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,1,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,1,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,2,0)
	;;=DPT PATIENT'S SEX^VADPT^IBDFN^REGISTRATION^1^2^2^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,2,1,0)
	;;=^^1^1^2931015^^^^
	;;^UTILITY(U,$J,357.6,2,1,1,0)
	;;=Patient's sex, either 'MALE' or 'FEMALE', or "M" or "F".
	;;^UTILITY(U,$J,357.6,2,2)
	;;=Patient's Sex^6^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,2,3)
	;;=SEX
	;;^UTILITY(U,$J,357.6,2,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,2,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,2,15,0)
	;;=^357.615I^2^2
	;;^UTILITY(U,$J,357.6,2,15,2,0)
	;;=Patient's Sex (Code)^1^2^
	;;^UTILITY(U,$J,357.6,3,0)
	;;=DPT PATIENT'S DOB/AGE^VADPT^IBDFN^REGISTRATION^1^2^2^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,3,1,0)
	;;=^^2^2^2951023^
	;;^UTILITY(U,$J,357.6,3,1,1,0)
	;;=Patient's DOB in MM DD, YYYY format
	;;^UTILITY(U,$J,357.6,3,1,2,0)
	;;=Patient's age in years.
	;;^UTILITY(U,$J,357.6,3,2)
	;;=Patient's DOB^12^Patient's Age^3^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,3,3)
	;;=PATIENT DOB AGE PIMS
	;;^UTILITY(U,$J,357.6,3,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,3,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,3,15,0)
	;;=^357.615I^2^2
	;;^UTILITY(U,$J,357.6,3,15,2,0)
	;;=Patient's Age^3^2^
	;;^UTILITY(U,$J,357.6,4,0)
	;;=GMRA PATIENT'S ALLERGIES^ALLERGY^IBDFN2^GEN. MED. REC. - ALLERGIES^1^2^4^1^1^^^1^^^1^^
	;;^UTILITY(U,$J,357.6,4,1,0)
	;;=^^7^7^2951023^
	;;^UTILITY(U,$J,357.6,4,1,1,0)
	;;=Used to display a list of the patient's allergies, both true and adverse
	;;^UTILITY(U,$J,357.6,4,1,2,0)
	;;=reactions, verified and unverified. Data returned:
	;;^UTILITY(U,$J,357.6,4,1,3,0)
	;;=  allergy name
	;;^UTILITY(U,$J,357.6,4,1,4,0)
	;;=  type of allergen
	;;^UTILITY(U,$J,357.6,4,1,5,0)
	;;=  type (code only - F=food, D=drug,O=other)
	;;^UTILITY(U,$J,357.6,4,1,6,0)
	;;=  verified? YES/NO
	;;^UTILITY(U,$J,357.6,4,1,7,0)
	;;=  true allergy? YES/NO
	;;^UTILITY(U,$J,357.6,4,2)
	;;=ALLERGY NAME^30^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,4,3)
	;;=ALLERGIES ALLERGY PATIENT
	;;^UTILITY(U,$J,357.6,4,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,4,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,4,15,0)
	;;=^357.615I^5^5
	;;^UTILITY(U,$J,357.6,4,15,2,0)
	;;=TYPE OF ALLERGEN^5^2^
	;;^UTILITY(U,$J,357.6,4,15,3,0)
	;;=TYPE (F=FOOD,D=DRUG,O=OTHER)^1^3^
	;;^UTILITY(U,$J,357.6,4,15,4,0)
	;;=VERIFIED? (YES/NO)^3^4^
	;;^UTILITY(U,$J,357.6,4,15,5,0)
	;;=TRUE ALLERGY? (YES/NO)^3^5^
	;;^UTILITY(U,$J,357.6,7,0)
	;;=DG SELECT CPT PROCEDURE CODES^CPT^IBDFN4^SCHEDULING^^3^2^^1^^^1^59^^^
	;;^UTILITY(U,$J,357.6,7,1,0)
	;;=^^2^2^2960205^^^^
	;;^UTILITY(U,$J,357.6,7,1,1,0)
	;;=Allows for the selection of CPT codes from the CPT file. Only active codes
	;;^UTILITY(U,$J,357.6,7,1,2,0)
	;;=are allowed.
	;;^UTILITY(U,$J,357.6,7,2)
	;;=CODE^5^^^^^^^^^^^^^^CODE^1^1
	;;^UTILITY(U,$J,357.6,7,3)
	;;=SELECT CPT PROCEDURE CODES
	;;^UTILITY(U,$J,357.6,7,9)
	;;=S X=$$CPT^IBDFN12(X)
	;;^UTILITY(U,$J,357.6,7,11)
	;;=D TESTCPT^IBDFN7
	;;^UTILITY(U,$J,357.6,7,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,357.6,7,15,2,0)
	;;=SHORT NAME^28^2^^PROCEDURE
	;;^UTILITY(U,$J,357.6,7,15,3,0)
	;;=DESCRIPTION^161^3^^PROCEDURE
	;;^UTILITY(U,$J,357.6,7,16)
	;;=o^18^Procedure Narrative^^r^2^CPT CODE
	;;^UTILITY(U,$J,357.6,8,0)
	;;=DPT PATIENT'S SC CONDITIONS^ELIG^IBDFN^REGISTRATION^1^2^4^1^1^^^1^^^1^
	;;^UTILITY(U,$J,357.6,8,1,0)
	;;=^^7^7^2951023^
	;;^UTILITY(U,$J,357.6,8,1,1,0)
	;;=Used to output a list of the patients service connected conditions,
	;;^UTILITY(U,$J,357.6,8,1,2,0)
	;;=along with the percentage ratings. Data returned:
	;;^UTILITY(U,$J,357.6,8,1,3,0)
	;;=  disability name
	;;^UTILITY(U,$J,357.6,8,1,4,0)
	;;=  disability percentage
	;;^UTILITY(U,$J,357.6,8,1,5,0)
	;;=  disability percentage with the label "%"
	;;^UTILITY(U,$J,357.6,8,1,6,0)
	;;=  disability percentage with the label "%SC"
	;;^UTILITY(U,$J,357.6,8,1,7,0)
	;;=  disability percentage with the label "% - SERVICE CONNECTED"
	;;^UTILITY(U,$J,357.6,8,2)
	;;=Disability Name^45^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,8,3)
	;;=SERVICE CONNECTED CONDITIONS PATIENT MAS PIMS DISABILITY DISABILITIES
	;;^UTILITY(U,$J,357.6,8,7,0)
	;;=^357.67^1^1

IBDIN017
IBDIN017	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,8,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,8,15,0)
	;;=^357.615I^5^5
	;;^UTILITY(U,$J,357.6,8,15,2,0)
	;;=Disability % (number only)^3^2^
	;;^UTILITY(U,$J,357.6,8,15,3,0)
	;;=Disability % (label=%)^4^3^
	;;^UTILITY(U,$J,357.6,8,15,4,0)
	;;=Disabilty % (label=%SC)^6^4^
	;;^UTILITY(U,$J,357.6,8,15,5,0)
	;;=Dis.%_"% - SERVICE CONNECTED"^24^5^
	;;^UTILITY(U,$J,357.6,9,0)
	;;=DG SELECT ICD-9 DIAGNOSIS CODES^ICD9^IBDFN4^SCHEDULING^^3^2^^1^^^1^69^^^^0^0
	;;^UTILITY(U,$J,357.6,9,1,0)
	;;=^^2^2^2960403^^^^
	;;^UTILITY(U,$J,357.6,9,1,1,0)
	;;=Allows the user to select ICD-9 diagnosis codes from the ICD Diagnosis
	;;^UTILITY(U,$J,357.6,9,1,2,0)
	;;=file. Allows only active codes to be selected.
	;;^UTILITY(U,$J,357.6,9,2)
	;;=CODE^7^^^^^^^^^^^^^^^1^1
	;;^UTILITY(U,$J,357.6,9,3)
	;;=SELECT ICD9 ICD-9 CODES DIAGNOSIS
	;;^UTILITY(U,$J,357.6,9,11)
	;;=D TESTICD^IBDFN7
	;;^UTILITY(U,$J,357.6,9,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,357.6,9,13,1,0)
	;;=2;IBD(357.98,
	;;^UTILITY(U,$J,357.6,9,13,2,0)
	;;=3;IBD(357.98,
	;;^UTILITY(U,$J,357.6,9,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,357.6,9,15,2,0)
	;;=DIAGNOSIS^30^2^^DIAGNOSIS
	;;^UTILITY(U,$J,357.6,9,15,3,0)
	;;=DESCRIPTION^200^3^^DIAGNOSIS
	;;^UTILITY(U,$J,357.6,9,16)
	;;=o^18^Diagnosis^^r^1^ICD-9 Code
	;;^UTILITY(U,$J,357.6,10,0)
	;;=DPT PATIENT'S PID^VADPT^IBDFN^REGISTRATION^1^2^1^1^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,10,1,0)
	;;=^^1^1^2931015^^
	;;^UTILITY(U,$J,357.6,10,1,1,0)
	;;=Used to display the patient identifier.
	;;^UTILITY(U,$J,357.6,10,2)
	;;=PATIENT IDENTIFIER^15^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,10,3)
	;;=PATIENT IDENTIFIER PID
	;;^UTILITY(U,$J,357.6,10,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,10,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,10,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,11,0)
	;;=IBDF UTILITY FOR SELECTING BLANKS^NULL^IBDFN4^AUTOMATED INFO COLLECTION SYS^^3^2^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,11,1,0)
	;;=^^2^2^2930414^^^^
	;;^UTILITY(U,$J,357.6,11,1,1,0)
	;;=No data is returned, so this interface allows the user to create a
	;;^UTILITY(U,$J,357.6,11,1,2,0)
	;;=selection list with what ever text he desires.
	;;^UTILITY(U,$J,357.6,11,2)
	;;=Enter Anything!^0^^^^^^^^^^^^^^^1^1
	;;^UTILITY(U,$J,357.6,11,3)
	;;=UTILITY SELECT NULL BLANKS
	;;^UTILITY(U,$J,357.6,11,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,12,0)
	;;=DPT PATIENT ADDRESS LINES^ADDRESS^IBDFN6^REGISTRATION^1^2^3^1^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,12,1,0)
	;;=^^1^1^2950117^^
	;;^UTILITY(U,$J,357.6,12,1,1,0)
	;;=Outputs the patient's address, up to 4 lines of 45 characters each.
	;;^UTILITY(U,$J,357.6,12,2)
	;;=ADDRESS LINE^45^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,12,3)
	;;=PATIENT ADDRESS
	;;^UTILITY(U,$J,357.6,12,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,12,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,12,15,0)
	;;=^357.615I^1^1
	;;^UTILITY(U,$J,357.6,13,0)
	;;=DPT PATIENT'S TELEPHONE NUMBER^ADDRESS^IBDFN6^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,13,1,0)
	;;=^^1^1^2930217^^
	;;^UTILITY(U,$J,357.6,13,1,1,0)
	;;=Used to display the patient's telephone number.
	;;^UTILITY(U,$J,357.6,13,2)
	;;=TELEPHONE NUMBER^20^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,13,3)
	;;=PATIENT TELEPHONE
	;;^UTILITY(U,$J,357.6,13,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,13,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,13,15,0)
	;;=^357.615I^1^1
	;;^UTILITY(U,$J,357.6,13,15,1,0)
	;;=TELEPHONE NUMBER^20^^
	;;^UTILITY(U,$J,357.6,14,0)
	;;=DPT IS PATIENT INSURED?^INSURED^IBDFN6^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,14,1,0)
	;;=^^2^2^2931130^^^^
	;;^UTILITY(U,$J,357.6,14,1,1,0)
	;;=Prints 'YES','NO', or 'UNKNOWN' based on the field COVERED BY INSURANCE?
	;;^UTILITY(U,$J,357.6,14,1,2,0)
	;;=from the patient file.
	;;^UTILITY(U,$J,357.6,14,2)
	;;=Covered by Ins?^7^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,14,3)
	;;=PATIENT INSURANCE
	;;^UTILITY(U,$J,357.6,14,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,14,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,14,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,15,0)
	;;=DPT PATIENT'S INSURANCE POLICIES^INSURANC^IBDFN6^REGISTRATION^1^2^4^1^1^^^1^^^1^^
	;;^UTILITY(U,$J,357.6,15,1,0)
	;;=^^10^10^2931201^
	;;^UTILITY(U,$J,357.6,15,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns
	;;^UTILITY(U,$J,357.6,15,1,2,0)
	;;=active insurance policies and policies that do not reimburse (Medicare).
	;;^UTILITY(U,$J,357.6,15,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,357.6,15,1,4,0)
	;;=    insurance company
	;;^UTILITY(U,$J,357.6,15,1,5,0)
	;;=    policy number
	;;^UTILITY(U,$J,357.6,15,1,6,0)
	;;=    group name
	;;^UTILITY(U,$J,357.6,15,1,7,0)
	;;=    policy holder's relationship to the patient

IBDIN018
IBDIN018	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,15,1,8,0)
	;;=    policy expiration date
	;;^UTILITY(U,$J,357.6,15,1,9,0)
	;;=    group number
	;;^UTILITY(U,$J,357.6,15,1,10,0)
	;;=    name of insured
	;;^UTILITY(U,$J,357.6,15,2)
	;;=INSURANCE COMPANY^30^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,15,3)
	;;=PATIENT INSURANCE PIMS
	;;^UTILITY(U,$J,357.6,15,4)
	;;=S ACT=2
	;;^UTILITY(U,$J,357.6,15,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,357.6,15,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,357.6,15,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,15,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,15,15,0)
	;;=^357.615I^7^7
	;;^UTILITY(U,$J,357.6,15,15,2,0)
	;;=EXPIRATION DATE^12^2^
	;;^UTILITY(U,$J,357.6,15,15,3,0)
	;;=POLICY NUMBER^20^3^
	;;^UTILITY(U,$J,357.6,15,15,4,0)
	;;=GROUP NUMBER^17^4^
	;;^UTILITY(U,$J,357.6,15,15,5,0)
	;;=GROUP NAME^20^5^
	;;^UTILITY(U,$J,357.6,15,15,6,0)
	;;=NAME OF INSURED^30^6^
	;;^UTILITY(U,$J,357.6,15,15,7,0)
	;;=HOLDER'S RELATIONSHIP^9^7^
	;;^UTILITY(U,$J,357.6,16,0)
	;;=IBDF UTILITY FOR BLANK LINES^BLANKS^IBDFN^AUTOMATED INFO COLLECTION SYS^0^2^5^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,16,1,0)
	;;=^^2^2^2930408^^
	;;^UTILITY(U,$J,357.6,16,1,1,0)
	;;=No data is returned by this interface - it's purpose is to print blank
	;;^UTILITY(U,$J,357.6,16,1,2,0)
	;;=lines to the form for data entry.
	;;^UTILITY(U,$J,357.6,16,2)
	;;=^0^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,16,3)
	;;=UTILITY BLANKS LINES
	;;^UTILITY(U,$J,357.6,16,15,0)
	;;=^357.615I^0^0
	;;^UTILITY(U,$J,357.6,17,0)
	;;=IBDF UTILITY FOR LABELS ONLY^LABELS^IBDFN^AUTOMATED INFO COLLECTION SYS^0^2^2^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,17,1,0)
	;;=^^2^2^2930210^^
	;;^UTILITY(U,$J,357.6,17,1,1,0)
	;;=This interface returns no data. Its purpose is to print labels without
	;;^UTILITY(U,$J,357.6,17,1,2,0)
	;;=data to the form.
	;;^UTILITY(U,$J,357.6,17,2)
	;;=Underscore Only^0^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,17,3)
	;;=UTILITY BLANKS LABELS
	;;^UTILITY(U,$J,357.6,17,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,18,0)
	;;=GMP PATIENT ACTIVE PROBLEMS^ACTIVE^GMPLENFM^PROBLEM LIST^1^2^4^1^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,18,1,0)
	;;=^^8^8^2960207^^^^
	;;^UTILITY(U,$J,357.6,18,1,1,0)
	;;=For displaying the patient's active problems. Returns a list.
	;;^UTILITY(U,$J,357.6,18,1,2,0)
	;;=Data returned:
	;;^UTILITY(U,$J,357.6,18,1,3,0)
	;;=  problem text
	;;^UTILITY(U,$J,357.6,18,1,4,0)
	;;=  corresponding ICD-9 code (if there is a mapping)
	;;^UTILITY(U,$J,357.6,18,1,5,0)
	;;=  date of onset (MM/DD/YY)
	;;^UTILITY(U,$J,357.6,18,1,6,0)
	;;=  SC indicator (SC/NSC/"")
	;;^UTILITY(U,$J,357.6,18,1,7,0)
	;;=  special exposure (A/I/P/"")
	;;^UTILITY(U,$J,357.6,18,1,8,0)
	;;=  special exposure (returns the full text of the type of exposure)
	;;^UTILITY(U,$J,357.6,18,2)
	;;=PROBLEM TEXT^80^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,18,3)
	;;=ACTIVE PROBLEMS LIST PATIENT
	;;^UTILITY(U,$J,357.6,18,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,18,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,18,15,0)
	;;=^357.615I^7^6
	;;^UTILITY(U,$J,357.6,18,15,2,0)
	;;=CORRESPONDNG ICD-9 Dx CODE^7^2^
	;;^UTILITY(U,$J,357.6,18,15,3,0)
	;;=DATE OF ONSET (MM/DD/YY)^8^3^
	;;^UTILITY(U,$J,357.6,18,15,4,0)
	;;=SC INDICATOR (SC/NSC/"")^3^4^
	;;^UTILITY(U,$J,357.6,18,15,5,0)
	;;=SC INDICATOR (Y/N/"")^1^5^
	;;^UTILITY(U,$J,357.6,18,15,6,0)
	;;=SPECIAL EXPOSURE (A/I/P/"")^1^6^
	;;^UTILITY(U,$J,357.6,18,15,7,0)
	;;=SPECIAL EXPOSURE (FULL TEXT)^12^7^
	;;^UTILITY(U,$J,357.6,19,0)
	;;=DPT PATIENT'S EMPLOYER NAME^EMPLOYER^IBDFN2^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,19,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,357.6,19,1,1,0)
	;;=For displaying the patient's employer.
	;;^UTILITY(U,$J,357.6,19,2)
	;;=employer name^45^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,19,3)
	;;=PATIENT EMPLOYER
	;;^UTILITY(U,$J,357.6,19,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,19,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,19,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,20,0)
	;;=DPT PATIENT'S EMPLOYER ADDRESS LINES^EMPLOYER^IBDFN2^REGISTRATION^1^2^3^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,20,1,0)
	;;=^^3^3^2930217^
	;;^UTILITY(U,$J,357.6,20,1,1,0)
	;;=For displaying the patient's employer's address. The address is in the form
	;;^UTILITY(U,$J,357.6,20,1,2,0)
	;;=of a list of address lines each up to 30 characters long. The number of lines
	;;^UTILITY(U,$J,357.6,20,1,3,0)
	;;=is variable, up to 4.
	;;^UTILITY(U,$J,357.6,20,2)
	;;=ADDRESS LINE^45^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,20,3)
	;;=PATIENT EMPLOYER ADDRESS
	;;^UTILITY(U,$J,357.6,20,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,20,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,20,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,21,0)
	;;=DPT PATIENT'S EMPLOYER TELEPHONE^EMPLOYER^IBDFN2^REGISTRATION^1^2^1^^1^^^1^^^^

IBDIN019
IBDIN019	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,21,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,357.6,21,1,1,0)
	;;=For displaying the patient's employer's telephone number.
	;;^UTILITY(U,$J,357.6,21,2)
	;;=telephone number^20^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,21,3)
	;;=PATIENT EMPLOYER TELEPHONE
	;;^UTILITY(U,$J,357.6,21,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,21,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,21,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,22,0)
	;;=DPT SPOUSE'S EMPLOYER NAME^SPSEMPLR^IBDFN2^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,22,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,357.6,22,1,1,0)
	;;=For displaying the spouse's employer.
	;;^UTILITY(U,$J,357.6,22,2)
	;;=employer name^45^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,22,3)
	;;=PATIENT SPOUSE EMPLOYER
	;;^UTILITY(U,$J,357.6,22,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,22,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,22,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,23,0)
	;;=DPT SPOUSE'S EMPLOYER ADDRESS LINES^SPSEMPLR^IBDFN2^REGISTRATION^1^2^4^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,23,1,0)
	;;=^^3^3^2951023^
	;;^UTILITY(U,$J,357.6,23,1,1,0)
	;;=For displaying the patient's spouse's employer's address. The address is in the form
	;;^UTILITY(U,$J,357.6,23,1,2,0)
	;;=of a list of address lines each up to 30 characters long. The number of line
	;;^UTILITY(U,$J,357.6,23,1,3,0)
	;;=is variable, up to 4.
	;;^UTILITY(U,$J,357.6,23,2)
	;;=address line^45^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,23,3)
	;;=PATIENT SPOUSE EMPLOYER ADDRESS
	;;^UTILITY(U,$J,357.6,23,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,23,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,23,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,24,0)
	;;=DPT SPOUSE'S EMPLOYER TELEPHONE^SPSEMPLR^IBDFN2^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,24,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,357.6,24,1,1,0)
	;;=For displaying the telephone number of the spouse's employer.
	;;^UTILITY(U,$J,357.6,24,2)
	;;=telephone number^20^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,24,3)
	;;=PATIENT SPOUSE EMPLOYER TELEPHONE WIFE HUSBAND
	;;^UTILITY(U,$J,357.6,24,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,24,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,24,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,25,0)
	;;=DPT PATIENT'S MARITAL STATUS^VADPT^IBDFN^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,25,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,357.6,25,1,1,0)
	;;=For displaying the patient's marital status.
	;;^UTILITY(U,$J,357.6,25,2)
	;;=MARITAL STATUS^15^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,25,3)
	;;=PATIENT MARITAL STATUS
	;;^UTILITY(U,$J,357.6,25,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,25,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,25,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,26,0)
	;;=DPT PATIENT'S EMPLOYMENT STATUS^EMPLMNT^IBDFN^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,26,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,357.6,26,1,1,0)
	;;=For displaying the employment status of the patient.
	;;^UTILITY(U,$J,357.6,26,2)
	;;=EMPLOYMENT STATUS^20^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,26,3)
	;;=PATIENT EMPLOYER EMPLOYMENT
	;;^UTILITY(U,$J,357.6,26,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,26,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,26,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,27,0)
	;;=SD CLINIC NAME^CLINIC^IBDFN1^SCHEDULING^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,27,1,0)
	;;=^^2^2^2930616^^
	;;^UTILITY(U,$J,357.6,27,1,1,0)
	;;= 
	;;^UTILITY(U,$J,357.6,27,1,2,0)
	;;=Outputs the name of the clinic.
	;;^UTILITY(U,$J,357.6,27,2)
	;;=CLINIC NAME^30^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,27,3)
	;;=CLINIC SCHEDULING
	;;^UTILITY(U,$J,357.6,27,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,27,7,1,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,357.6,27,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,28,0)
	;;=SD APPOINTMENT DATE/TIME^APPT^IBDFN2^SCHEDULING^1^2^2^^1^^^1^^^0^^
	;;^UTILITY(U,$J,357.6,28,1,0)
	;;=^^2^2^2950413^^^^
	;;^UTILITY(U,$J,357.6,28,1,1,0)
	;;= 
	;;^UTILITY(U,$J,357.6,28,1,2,0)
	;;=Returns the date/time of the appointment.
	;;^UTILITY(U,$J,357.6,28,2)
	;;=APPT. DATE/TIME^18^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,28,3)
	;;=APPOINTMENT DATE TIME SCHEDULING
	;;^UTILITY(U,$J,357.6,28,7,0)
	;;=^357.67^3^3
	;;^UTILITY(U,$J,357.6,28,7,1,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,357.6,28,7,2,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,28,7,3,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,357.6,28,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,357.6,28,15,2,0)
	;;=APPT. DATE (MMM DD,YYYY)^12^2^
	;;^UTILITY(U,$J,357.6,28,15,3,0)
	;;=APPT. TIME (HH:MM)^5^3^
	;;^UTILITY(U,$J,357.6,30,0)
	;;=DPT PATIENT ELIGIBILITY DATA^ELIG^IBDFN^REGISTRATION^1^2^2^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,30,1,0)
	;;=^^8^8^2931015^^^^

IBDIN01A
IBDIN01A	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,30,1,1,0)
	;;=Returns patient eligibility data. Data returned is:
	;;^UTILITY(U,$J,357.6,30,1,2,0)
	;;=   eligibility code in external form
	;;^UTILITY(U,$J,357.6,30,1,3,0)
	;;=   period of service
	;;^UTILITY(U,$J,357.6,30,1,4,0)
	;;=   service connected? YES/NO
	;;^UTILITY(U,$J,357.6,30,1,5,0)
	;;=   veteran? YES/NO
	;;^UTILITY(U,$J,357.6,30,1,6,0)
	;;=   eligible for care? YES/NO
	;;^UTILITY(U,$J,357.6,30,1,7,0)
	;;=   type of patient
	;;^UTILITY(U,$J,357.6,30,1,8,0)
	;;=   SC%
	;;^UTILITY(U,$J,357.6,30,2)
	;;=ELIGIBILTY CODE/EXTERNAL FORM^30^^^^^^^^^TYPE OF PATIENT^^^^^^1
	;;^UTILITY(U,$J,357.6,30,3)
	;;=ELIGIBLE ELIGIBILITY PATIENT PERIOD SERVICE CONNECTED VETERAN STATUS
	;;^UTILITY(U,$J,357.6,30,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,30,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,30,15,0)
	;;=^357.615I^7^7
	;;^UTILITY(U,$J,357.6,30,15,2,0)
	;;=PERIOD OF SERVICE^25^2^
	;;^UTILITY(U,$J,357.6,30,15,3,0)
	;;=SERVICE CONNECTED?^3^3^
	;;^UTILITY(U,$J,357.6,30,15,4,0)
	;;=VETERAN?^3^4^
	;;^UTILITY(U,$J,357.6,30,15,5,0)
	;;=ELIGIBLE FOR CARE?^3^5^
	;;^UTILITY(U,$J,357.6,30,15,6,0)
	;;=TYPE OF PATIENT^20^6^
	;;^UTILITY(U,$J,357.6,30,15,7,0)
	;;=SC %^3^7^
	;;^UTILITY(U,$J,357.6,31,0)
	;;=DPT SERVICE HISTORY RELATED DATA^ELIG^IBDFN^REGISTRATION^1^2^2^0^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,31,1,0)
	;;=^^7^7^2931015^^^^
	;;^UTILITY(U,$J,357.6,31,1,1,0)
	;;=For displaying service history data. Data returned:
	;;^UTILITY(U,$J,357.6,31,1,2,0)
	;;=  Vietnam service? YES/NO
	;;^UTILITY(U,$J,357.6,31,1,3,0)
	;;=  Agent Orange exposure? YES/NO
	;;^UTILITY(U,$J,357.6,31,1,4,0)
	;;=  radiation exposure? YES/NO
	;;^UTILITY(U,$J,357.6,31,1,5,0)
	;;=  combat service? YES/NO
	;;^UTILITY(U,$J,357.6,31,1,6,0)
	;;=  POW? YES/NO
	;;^UTILITY(U,$J,357.6,31,1,7,0)
	;;=  environmental contaminants exposure? YES/NO
	;;^UTILITY(U,$J,357.6,31,2)
	;;=VIETNAM SERVICE?^3^^^^^^^^^ENVIRONMENTAL CONTAMINANTS?^^^^^^1
	;;^UTILITY(U,$J,357.6,31,3)
	;;=PATIENT MAS VIETNAM SERVICE AGENT ORANGE RADIATION COMBAT POW HISTORY ENVIRONMENTAL CONTAMINANT PERSIAN
	;;^UTILITY(U,$J,357.6,31,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,31,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,31,15,0)
	;;=^357.615I^6^6
	;;^UTILITY(U,$J,357.6,31,15,2,0)
	;;=AGENT ORANGE EXPOSURE?^3^2^
	;;^UTILITY(U,$J,357.6,31,15,3,0)
	;;=RADIATION EXPOSURE?^3^3^
	;;^UTILITY(U,$J,357.6,31,15,4,0)
	;;=POW?^3^4^
	;;^UTILITY(U,$J,357.6,31,15,5,0)
	;;=COMBAT SERVICE?^3^5^
	;;^UTILITY(U,$J,357.6,31,15,6,0)
	;;=ENVIRONMENTAL CONTAMINANTS?^3^6^
	;;^UTILITY(U,$J,357.6,32,0)
	;;=DPT PATIENT'S MEANS TEST DATA^MT^IBDFN2^REGISTRATION^1^2^2^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,32,1,0)
	;;=^^5^5^2931015^^^
	;;^UTILITY(U,$J,357.6,32,1,1,0)
	;;=Returns the patient's current means test category and the date of the most
	;;^UTILITY(U,$J,357.6,32,1,2,0)
	;;=recent means test. Data returned:
	;;^UTILITY(U,$J,357.6,32,1,3,0)
	;;=  means test category
	;;^UTILITY(U,$J,357.6,32,1,4,0)
	;;=  means test code
	;;^UTILITY(U,$J,357.6,32,1,5,0)
	;;=  date of last means test
	;;^UTILITY(U,$J,357.6,32,2)
	;;=MEANS TEST CATEGORY^20^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,32,3)
	;;=MEANS TEST CATEGORY PATIENT
	;;^UTILITY(U,$J,357.6,32,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,32,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,32,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,357.6,32,15,2,0)
	;;=DATE OF LAST MEANS TEST^12^2^
	;;^UTILITY(U,$J,357.6,32,15,3,0)
	;;=MEANS TEST CODE^1^3^
	;;^UTILITY(U,$J,357.6,33,0)
	;;=GMP SELECT CLINIC COMMON PROBLEMS^SELECT^GMPLENFM^PROBLEM LIST^0^3^2^^1^^^1^103^^^
	;;^UTILITY(U,$J,357.6,33,1,0)
	;;=^^11^11^2960326^^^^
	;;^UTILITY(U,$J,357.6,33,1,1,0)
	;;=This interface allows users to build selection lists (pick lists)
	;;^UTILITY(U,$J,357.6,33,1,2,0)
	;;=using terms from the Clinical Lexicon.  These pick lists would then
	;;^UTILITY(U,$J,357.6,33,1,3,0)
	;;=be similar to pick lists created in the Problem List package.  This
	;;^UTILITY(U,$J,357.6,33,1,4,0)
	;;=is an alternative to building pick lists based on Diagnosis.  The primary
	;;^UTILITY(U,$J,357.6,33,1,5,0)
	;;=purpose is to provide lists of terms that can be the primary or a 
	;;^UTILITY(U,$J,357.6,33,1,6,0)
	;;=secondary purpose of visit and can be added to the patients active
	;;^UTILITY(U,$J,357.6,33,1,7,0)
	;;=problem list.
	;;^UTILITY(U,$J,357.6,33,1,8,0)
	;;= 
	;;^UTILITY(U,$J,357.6,33,1,9,0)
	;;=Warning: If you do not see ICD codes when creating pick lists you must
	;;^UTILITY(U,$J,357.6,33,1,10,0)
	;;=edit the Problem List User Defaults to show ICD codes.  Failure to do so
	;;^UTILITY(U,$J,357.6,33,1,11,0)
	;;=may result in inaccurate or invalid ICD codes.

IBDIN01B
IBDIN01B	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,33,2)
	;;=POINTER TO CLINICAL LEX FILE^9^^^^^^^^^^^^^^^0^1
	;;^UTILITY(U,$J,357.6,33,3)
	;;=COMMON PROBLEMS SELECT LIST
	;;^UTILITY(U,$J,357.6,33,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,357.6,33,15,2,0)
	;;=PROBLEM TEXT^210^2^^PROBLEM
	;;^UTILITY(U,$J,357.6,33,15,3,0)
	;;=CORRESPNDNG ICD-9 Dx CODE^7^3^^ICD-9
	;;^UTILITY(U,$J,357.6,40,0)
	;;=ACTION PROFILE - 45 DAYS^RXPROF^IBDFN3^OUTPATIENT PHARMACY^1^4^^^1^0^^1^^^^
	;;^UTILITY(U,$J,357.6,40,1,0)
	;;=^^2^2^2930623^^^^
	;;^UTILITY(U,$J,357.6,40,1,1,0)
	;;=The Action Profile from Outpatient Pharmacy. The  medicine profile is printed
	;;^UTILITY(U,$J,357.6,40,1,2,0)
	;;=for the last 45 days.
	;;^UTILITY(U,$J,357.6,40,3)
	;;=OUTPATIENT PHARMACY ACTION PROFILE
	;;^UTILITY(U,$J,357.6,40,4)
	;;=S PSTYPE=1,PSDAYS=45
	;;^UTILITY(U,$J,357.6,40,6,0)
	;;=^357.66^25^2
	;;^UTILITY(U,$J,357.6,40,6,23,0)
	;;=PSTYPE
	;;^UTILITY(U,$J,357.6,40,6,25,0)
	;;=PSDAYS
	;;^UTILITY(U,$J,357.6,40,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,40,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,41,0)
	;;=INFORMATION PROFILE - 45 DAYS^RXPROF^IBDFN3^OUTPATIENT PHARMACY^1^4^^^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,41,1,0)
	;;=^^3^3^2930524^^
	;;^UTILITY(U,$J,357.6,41,1,1,0)
	;;= 
	;;^UTILITY(U,$J,357.6,41,1,2,0)
	;;=Prints the Information Profile from Outpatient Pharmacy. The medication
	;;^UTILITY(U,$J,357.6,41,1,3,0)
	;;=profile is printed for 45 days.
	;;^UTILITY(U,$J,357.6,41,2)
	;;=^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,41,3)
	;;=INFORMATION PROFILE OUTPATIENT PHARMACY RX
	;;^UTILITY(U,$J,357.6,41,4)
	;;=S PSTYPE=0,PSDAYS=45
	;;^UTILITY(U,$J,357.6,41,6,0)
	;;=^357.66^2^2
	;;^UTILITY(U,$J,357.6,41,6,1,0)
	;;=PSTYPE
	;;^UTILITY(U,$J,357.6,41,6,2,0)
	;;=PSDAYS
	;;^UTILITY(U,$J,357.6,41,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,41,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,42,0)
	;;=ROUTING SLIP^ROUTING^IBDFN3^SCHEDULING^1^4^^^1^0^^1^^^^
	;;^UTILITY(U,$J,357.6,42,1,0)
	;;=^^1^1^2950814^^^^
	;;^UTILITY(U,$J,357.6,42,1,1,0)
	;;=Prints the routing slip from the scheduling package.
	;;^UTILITY(U,$J,357.6,42,3)
	;;=ROUTING SLIP SCHEDULING
	;;^UTILITY(U,$J,357.6,42,5)
	;;=
	;;^UTILITY(U,$J,357.6,42,7,0)
	;;=^357.67^3^3
	;;^UTILITY(U,$J,357.6,42,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,42,7,2,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,357.6,42,7,3,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,357.6,44,0)
	;;=IB CURRENT DATE^NOW^IBDFN2^AUTOMATED INFO COLLECTION SYS^1^2^1^0^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,44,1,0)
	;;=^^1^1^2951023^
	;;^UTILITY(U,$J,357.6,44,1,1,0)
	;;=Prints the current date in MM DD,YYYY format.
	;;^UTILITY(U,$J,357.6,44,2)
	;;=CURRENT DATE (MMM DD, YYYY)^12^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,44,3)
	;;=TODAY CURRENT DATE DAY
	;;^UTILITY(U,$J,357.6,44,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,45,0)
	;;=IB CURRENT DATE@TIME^NOW^IBDFN2^AUTOMATED INFO COLLECTION SYS^1^2^1^0^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,45,1,0)
	;;=^^1^1^2951023^
	;;^UTILITY(U,$J,357.6,45,1,1,0)
	;;=Returns the current date and time in MM DD, YYY@HH:MM:SS format.
	;;^UTILITY(U,$J,357.6,45,2)
	;;=DT/TM (MMM DD, YYYY@HH:MM:SS)^21^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,45,3)
	;;=DATE TIME NOW DAY
	;;^UTILITY(U,$J,357.6,45,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,46,0)
	;;=IB CURRENT TIME^NOW^IBDFN2^AUTOMATED INFO COLLECTION SYS^1^2^1^0^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,46,1,0)
	;;=^^1^1^2930528^
	;;^UTILITY(U,$J,357.6,46,1,1,0)
	;;=Returns the time in HH:MM:SS format.
	;;^UTILITY(U,$J,357.6,46,2)
	;;=CURRENT TIME (HH:MM:SS)^8^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,46,3)
	;;=TIME NOW
	;;^UTILITY(U,$J,357.6,46,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,47,0)
	;;=SD DIVISION NAME^DIVISION^IBDFN1^SCHEDULING^1^2^1^0^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,47,1,0)
	;;=^^1^1^2930603^^
	;;^UTILITY(U,$J,357.6,47,1,1,0)
	;;=Gets the name of the division that the clinic belongs to.
	;;^UTILITY(U,$J,357.6,47,2)
	;;=DIVISION NAME^30^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,47,3)
	;;=DIVISION PIMS FACILITY
	;;^UTILITY(U,$J,357.6,47,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,47,7,1,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,357.6,47,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,48,0)
	;;=SD INSTITUTION NAME^INST^IBDFN1^SCHEDULING^1^2^1^0^1^^^1^^^^
	;;^UTILITY(U,$J,357.6,48,1,0)
	;;=^^1^1^2930603^^
	;;^UTILITY(U,$J,357.6,48,1,1,0)
	;;=Obtains the name of the institution of the clinic of the appointment.
	;;^UTILITY(U,$J,357.6,48,2)
	;;=INSTITUTION NAME^30^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,48,3)
	;;=FACILITY INSTITUTION PIMS SCHEDULING
	;;^UTILITY(U,$J,357.6,48,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,48,7,1,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,357.6,48,15,0)
	;;=^357.615I^^0

IBDIN01C
IBDIN01C	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,49,0)
	;;=DPT PATIENT SHORT ADDRESS^ADDRESS^IBDFN6^REGISTRATION^1^2^1^1^1^0^^1^^
	;;^UTILITY(U,$J,357.6,49,1,0)
	;;=^^2^2^2931014^^^
	;;^UTILITY(U,$J,357.6,49,1,1,0)
	;;=The patient's address shortened to fit on a single line. It consists of the
	;;^UTILITY(U,$J,357.6,49,1,2,0)
	;;=first address line followed by the city, state, and ZIP.
	;;^UTILITY(U,$J,357.6,49,2)
	;;=SHORT ADDRESS - SINGLE LINE^65^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,49,3)
	;;=PATIENT SHORT ADDRESS
	;;^UTILITY(U,$J,357.6,49,6,0)
	;;=^357.66^^0
	;;^UTILITY(U,$J,357.6,49,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,49,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,49,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,357.6,50,0)
	;;=DPT SC HIDDEN LABELS^ELIG^IBDFN^REGISTRATION^1^2^2^0^1^0^^1^^^^
	;;^UTILITY(U,$J,357.6,50,1,0)
	;;=^^9^9^2931015^^
	;;^UTILITY(U,$J,357.6,50,1,1,0)
	;;=This interface gives the ability to place labels that refer to SC conditions
	;;^UTILITY(U,$J,357.6,50,1,2,0)
	;;=on the form that won't actually be displayed if the patient is not a 
	;;^UTILITY(U,$J,357.6,50,1,3,0)
	;;=service connected veteran. It consists of a list of possible labels that will
	;;^UTILITY(U,$J,357.6,50,1,4,0)
	;;=only print if the veteran is SLabels returned:
	;;^UTILITY(U,$J,357.6,50,1,5,0)
	;;=  %
	;;^UTILITY(U,$J,357.6,50,1,6,0)
	;;=  % - SERVICE CONNECTED
	;;^UTILITY(U,$J,357.6,50,1,7,0)
	;;=  S/C
	;;^UTILITY(U,$J,357.6,50,1,8,0)
	;;=  SERVICE CONNECTED
	;;^UTILITY(U,$J,357.6,50,1,9,0)
	;;=  SC CONDITIONS:
	;;^UTILITY(U,$J,357.6,50,2)
	;;= % ^1^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,50,3)
	;;=SERVICE CONNECTED HIDDEN LABELS DPT PIMS S/C
	;;^UTILITY(U,$J,357.6,50,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,50,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,50,15,0)
	;;=^357.615I^5^5
	;;^UTILITY(U,$J,357.6,50,15,2,0)
	;;=% - SERVICE CONNECTED^21^2^
	;;^UTILITY(U,$J,357.6,50,15,3,0)
	;;=SERVICE CONNECTED^17^3^
	;;^UTILITY(U,$J,357.6,50,15,4,0)
	;;=SC CONDITIONS:^13^4^
	;;^UTILITY(U,$J,357.6,50,15,5,0)
	;;=S/C^3^5^
	;;^UTILITY(U,$J,357.6,51,0)
	;;=DPT SC TREATMENT QUESTIONS^ELIG^IBDFN^REGISTRATION^1^2^2^0^1^^^1^^
	;;^UTILITY(U,$J,357.6,51,1,0)
	;;=^^8^8^2931018^^^^
	;;^UTILITY(U,$J,357.6,51,1,1,0)
	;;=Prints questions concerning whether treatment was related to service.
	;;^UTILITY(U,$J,357.6,51,1,2,0)
	;;=Each question is printed only if it applies to the patient. Questions are:
	;;^UTILITY(U,$J,357.6,51,1,3,0)
	;;= 
	;;^UTILITY(U,$J,357.6,51,1,4,0)
	;;=Was treatment for a SC condition? __ YES __ NO
	;;^UTILITY(U,$J,357.6,51,1,5,0)
	;;=Was treatment related to exposure to Agent Orange? __ YES __ NO
	;;^UTILITY(U,$J,357.6,51,1,6,0)
	;;=Was treatment related to exposure to Ionization Radiation? __ YES __ NO
	;;^UTILITY(U,$J,357.6,51,1,7,0)
	;;=Was treatment related to exposure to Environmental Contaminants? __ YES __ NO
	;;^UTILITY(U,$J,357.6,51,1,8,0)
	;;=Was treatment related to: AO __ IR __ EC __
	;;^UTILITY(U,$J,357.6,51,2)
	;;=RELATED TO SC CONDITION?^46^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,51,3)
	;;=PATIENT TREATMENT QUESTIONS SERVICE CONNECTED EXPOSURE
	;;^UTILITY(U,$J,357.6,51,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,51,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,51,8)
	;;=^^^^
	;;^UTILITY(U,$J,357.6,51,15,0)
	;;=^357.615I^5^5
	;;^UTILITY(U,$J,357.6,51,15,2,0)
	;;=RELATED TO AO?^63^2^
	;;^UTILITY(U,$J,357.6,51,15,3,0)
	;;=RELATED TO IR?^71^3^
	;;^UTILITY(U,$J,357.6,51,15,4,0)
	;;=RELATED TO EC?^77^4^1
	;;^UTILITY(U,$J,357.6,51,15,5,0)
	;;=RELATED TO AO,IR, OR EC?^43^5^1
	;;^UTILITY(U,$J,357.6,52,0)
	;;=SD FUTURE APPTS, SAME DAY^SAMEDAY^IBDFN1^SCHEDULING^1^2^4^1^1^^^1^^^1^^
	;;^UTILITY(U,$J,357.6,52,1,0)
	;;=^^8^8^2950413^^^^
	;;^UTILITY(U,$J,357.6,52,1,1,0)
	;;=Returns a list of all the patient's future appointments for the same day.
	;;^UTILITY(U,$J,357.6,52,1,2,0)
	;;= Includes:
	;;^UTILITY(U,$J,357.6,52,1,3,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,357.6,52,1,4,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,357.6,52,1,5,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,357.6,52,1,6,0)
	;;=  Clinic
	;;^UTILITY(U,$J,357.6,52,1,7,0)
	;;=  Status
	;;^UTILITY(U,$J,357.6,52,1,8,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,357.6,52,2)
	;;=DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1
	;;^UTILITY(U,$J,357.6,52,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,357.6,52,7,0)
	;;=^357.67^2^2
	;;^UTILITY(U,$J,357.6,52,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,52,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,357.6,52,15,0)
	;;=^357.615I^6^6
	;;^UTILITY(U,$J,357.6,52,15,2,0)
	;;=TIME (HH:MM)^5^2^
	;;^UTILITY(U,$J,357.6,52,15,3,0)
	;;=DATE@TIME^17^3^

IBDIN01D
IBDIN01D	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,52,15,4,0)
	;;=CLINIC^30^4^
	;;^UTILITY(U,$J,357.6,52,15,5,0)
	;;=STATUS^35^5^
	;;^UTILITY(U,$J,357.6,52,15,6,0)
	;;=APPOINTMENT TYPE^25^6^
	;;^UTILITY(U,$J,357.6,53,0)
	;;=SD FUTURE APPTS, ALL^ALLFUTR^IBDFN1^SCHEDULING^1^2^4^1^1^^^1^^^1^^
	;;^UTILITY(U,$J,357.6,53,1,0)
	;;=^^7^7^2951026^
	;;^UTILITY(U,$J,357.6,53,1,1,0)
	;;=Returns a list of all future appointments for all clinics. Includes:
	;;^UTILITY(U,$J,357.6,53,1,2,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,357.6,53,1,3,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,357.6,53,1,4,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,357.6,53,1,5,0)
	;;=  Clinic
	;;^UTILITY(U,$J,357.6,53,1,6,0)
	;;=  Status
	;;^UTILITY(U,$J,357.6,53,1,7,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,357.6,53,2)
	;;=DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1
	;;^UTILITY(U,$J,357.6,53,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,357.6,53,7,0)
	;;=^357.67^2^2
	;;^UTILITY(U,$J,357.6,53,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,53,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,357.6,53,15,0)
	;;=^357.615I^6^6
	;;^UTILITY(U,$J,357.6,53,15,2,0)
	;;=TIME^5^2^
	;;^UTILITY(U,$J,357.6,53,15,3,0)
	;;=DATE@TIME^17^3^
	;;^UTILITY(U,$J,357.6,53,15,4,0)
	;;=CLINIC^30^4^
	;;^UTILITY(U,$J,357.6,53,15,5,0)
	;;=STATUS^35^5^
	;;^UTILITY(U,$J,357.6,53,15,6,0)
	;;=APPOINTMENT TYPE^25^6^
	;;^UTILITY(U,$J,357.6,54,0)
	;;=SD FUTURE APPTS, SAME CLINIC^CLNCFUTR^IBDFN1^SCHEDULING^1^2^4^1^1^^^1^^^1^^
	;;^UTILITY(U,$J,357.6,54,1,0)
	;;=^^8^8^2950413^^
	;;^UTILITY(U,$J,357.6,54,1,1,0)
	;;=Returns a list of all the patient's future appointments for the same day
	;;^UTILITY(U,$J,357.6,54,1,2,0)
	;;=and clinic. Includes:
	;;^UTILITY(U,$J,357.6,54,1,3,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,357.6,54,1,4,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,357.6,54,1,5,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,357.6,54,1,6,0)
	;;=  Clinic
	;;^UTILITY(U,$J,357.6,54,1,7,0)
	;;=  Status
	;;^UTILITY(U,$J,357.6,54,1,8,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,357.6,54,2)
	;;=DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1
	;;^UTILITY(U,$J,357.6,54,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,357.6,54,7,0)
	;;=^357.67^3^3
	;;^UTILITY(U,$J,357.6,54,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,54,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,357.6,54,7,3,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,357.6,54,15,0)
	;;=^357.615I^6^6
	;;^UTILITY(U,$J,357.6,54,15,2,0)
	;;=TIME^5^2^
	;;^UTILITY(U,$J,357.6,54,15,3,0)
	;;=DATE@TIME^17^3^
	;;^UTILITY(U,$J,357.6,54,15,4,0)
	;;=CLINIC^30^4^
	;;^UTILITY(U,$J,357.6,54,15,5,0)
	;;=STATUS^35^5^
	;;^UTILITY(U,$J,357.6,54,15,6,0)
	;;=APPOINTMENT TYPE^25^6^
	;;^UTILITY(U,$J,357.6,55,0)
	;;=DPT PATIENT'S INSURANCE - ALL^INSURANC^IBDFN6^REGISTRATION^1^2^4^1^1^^^1^^^1^^
	;;^UTILITY(U,$J,357.6,55,1,0)
	;;=^^10^10^2950505^^
	;;^UTILITY(U,$J,357.6,55,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns
	;;^UTILITY(U,$J,357.6,55,1,2,0)
	;;=ALL insurance policies, including inactive ones.
	;;^UTILITY(U,$J,357.6,55,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,357.6,55,1,4,0)
	;;=  insurance company
	;;^UTILITY(U,$J,357.6,55,1,5,0)
	;;=  policy number
	;;^UTILITY(U,$J,357.6,55,1,6,0)
	;;=  group name
	;;^UTILITY(U,$J,357.6,55,1,7,0)
	;;=  policy holder's relationship to the patient
	;;^UTILITY(U,$J,357.6,55,1,8,0)
	;;=  policy expiration date
	;;^UTILITY(U,$J,357.6,55,1,9,0)
	;;=  group number
	;;^UTILITY(U,$J,357.6,55,1,10,0)
	;;=  name of insured
	;;^UTILITY(U,$J,357.6,55,2)
	;;=INSURANCE COMPANY^30^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,55,3)
	;;=PATIENT INSURANCE PIMS
	;;^UTILITY(U,$J,357.6,55,4)
	;;=S ACT=""
	;;^UTILITY(U,$J,357.6,55,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,357.6,55,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,357.6,55,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,55,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,55,15,0)
	;;=^357.615I^7^7
	;;^UTILITY(U,$J,357.6,55,15,2,0)
	;;=EXPIRATION DATE^12^2^
	;;^UTILITY(U,$J,357.6,55,15,3,0)
	;;=POLICY NUMBER^20^3^
	;;^UTILITY(U,$J,357.6,55,15,4,0)
	;;=GROUP NUMBER^17^4^
	;;^UTILITY(U,$J,357.6,55,15,5,0)
	;;=GROUP NAME^20^5^
	;;^UTILITY(U,$J,357.6,55,15,6,0)
	;;=NAME OF INSURED^30^6^
	;;^UTILITY(U,$J,357.6,55,15,7,0)
	;;=HOLDER'S RELATIONSHIP^9^7^
	;;^UTILITY(U,$J,357.6,56,0)
	;;=DPT PATIENT'S INSURANCE - ACTIVE ONLY^INSURANC^IBDFN6^REGISTRATION^1^2^4^1^1^^^1^^^1^^
	;;^UTILITY(U,$J,357.6,56,1,0)
	;;=^^10^10^2950412^^
	;;^UTILITY(U,$J,357.6,56,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns ONLY
	;;^UTILITY(U,$J,357.6,56,1,2,0)
	;;=active insurance, excluding policies that do not reimburse.
	;;^UTILITY(U,$J,357.6,56,1,3,0)
	;;=Data returned:

IBDIN01E
IBDIN01E	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,56,1,4,0)
	;;=  insurance company
	;;^UTILITY(U,$J,357.6,56,1,5,0)
	;;=  policy number
	;;^UTILITY(U,$J,357.6,56,1,6,0)
	;;=  group name
	;;^UTILITY(U,$J,357.6,56,1,7,0)
	;;=  policy holder's relationship to the patient
	;;^UTILITY(U,$J,357.6,56,1,8,0)
	;;=  policy expiration date
	;;^UTILITY(U,$J,357.6,56,1,9,0)
	;;=  group number
	;;^UTILITY(U,$J,357.6,56,1,10,0)
	;;=  name of insured
	;;^UTILITY(U,$J,357.6,56,2)
	;;=INSURANCE COMPANY^30^^^^^^^^^NAME OF INSURED^^^^^^1^0
	;;^UTILITY(U,$J,357.6,56,3)
	;;=PATIENT INSURANCE PIMS ACTIVE
	;;^UTILITY(U,$J,357.6,56,4)
	;;=S ACT=1
	;;^UTILITY(U,$J,357.6,56,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,357.6,56,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,357.6,56,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,56,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,56,15,0)
	;;=^357.615I^7^7
	;;^UTILITY(U,$J,357.6,56,15,2,0)
	;;=EXPIRATION DATE^12^2^
	;;^UTILITY(U,$J,357.6,56,15,3,0)
	;;=POLICY NUMBER^20^3^
	;;^UTILITY(U,$J,357.6,56,15,4,0)
	;;=GROUP NUMBER^17^4^
	;;^UTILITY(U,$J,357.6,56,15,5,0)
	;;=GROUP NAME^20^5^
	;;^UTILITY(U,$J,357.6,56,15,6,0)
	;;=NAME OF INSURED^30^6^
	;;^UTILITY(U,$J,357.6,56,15,7,0)
	;;=HOLDER'S RELATIONSHIP^9^7^
	;;^UTILITY(U,$J,357.6,59,0)
	;;=INPUT PROCEDURE CODE (CPT4)^^^PATIENT CARE ENCOUNTER^^1^4^^1^0^^1^^^^SMP^
	;;^UTILITY(U,$J,357.6,59,1,0)
	;;=^^1^1^2960205^^^^
	;;^UTILITY(U,$J,357.6,59,1,1,0)
	;;=Used for inputting CPT coded procedures performed on the patient.
	;;^UTILITY(U,$J,357.6,59,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,59,3)
	;;=CPT4 PROCEDURE CODES
	;;^UTILITY(U,$J,357.6,59,9)
	;;=D INPUTCPT^IBDFN8(.X)
	;;^UTILITY(U,$J,357.6,59,10)
	;;=Enter an active CPT procedure code.
	;;^UTILITY(U,$J,357.6,59,11)
	;;=D TESTCPT^IBDFN7
	;;^UTILITY(U,$J,357.6,59,12)
	;;=PROCEDURE^1^6^7^3^^^
	;;^UTILITY(U,$J,357.6,59,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,357.6,59,13,1,0)
	;;=2;IBD(357.98,^^0
	;;^UTILITY(U,$J,357.6,59,13,2,0)
	;;=3;IBD(357.98,^^0
	;;^UTILITY(U,$J,357.6,59,14)
	;;=S Y=$$DSPLYCPT^IBDFN9(Y)
	;;^UTILITY(U,$J,357.6,59,16)
	;;=^^^^^
	;;^UTILITY(U,$J,357.6,59,17)
	;;=D SLCTCPT^IBDFN12(.X)
	;;^UTILITY(U,$J,357.6,59,18)
	;;=D LIST^IBDFDE2(.IBDSEL,.IBDF,"CPT Procedure Code")
	;;^UTILITY(U,$J,357.6,59,19)
	;;=D CPT^IBDFN14(X)
	;;^UTILITY(U,$J,357.6,60,0)
	;;=DG SELECT VISIT TYPE CPT PROCEDURES^VSIT^IBDFN4^SCHEDULING^^3^2^^1^^^1^62^^
	;;^UTILITY(U,$J,357.6,60,1,0)
	;;=^^1^1^2941116^^^^
	;;^UTILITY(U,$J,357.6,60,1,1,0)
	;;=Allows for select of just Visit type CPT codes from the CPT file.
	;;^UTILITY(U,$J,357.6,60,2)
	;;=CODE^5^RECOMMENDED TEXT-SHORT NAME^40^RECOMMENDED HEADER^30^SHORT NAME FROM CPT FILE^28^^^^^^^^^1^1
	;;^UTILITY(U,$J,357.6,60,3)
	;;=SELECT TYPE OF VISIT CPT
	;;^UTILITY(U,$J,357.6,60,11)
	;;=D TESTVST^IBDFN7
	;;^UTILITY(U,$J,357.6,60,15,0)
	;;=^357.615I^4^4
	;;^UTILITY(U,$J,357.6,60,15,2,0)
	;;=RECOMMENDED TEXT-SHORT NAME^40^2^
	;;^UTILITY(U,$J,357.6,60,15,3,0)
	;;=RECOMMENDED HEADER^30^3^
	;;^UTILITY(U,$J,357.6,60,15,4,0)
	;;=SHORT NAME FROM CPT FILE^28^4^
	;;^UTILITY(U,$J,357.6,61,0)
	;;=INPUT PROVIDER^PRVDR^IBDFN4^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^1^^SP^^^1
	;;^UTILITY(U,$J,357.6,61,1,0)
	;;=^^1^1^2960129^^^^
	;;^UTILITY(U,$J,357.6,61,1,1,0)
	;;=Used for inputting the provider of the service.
	;;^UTILITY(U,$J,357.6,61,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,357.6,61,3)
	;;=PROVIDER DOCTOR NURSE
	;;^UTILITY(U,$J,357.6,61,12)
	;;=ENCOUNTER^4^^^15^^^
	;;^UTILITY(U,$J,357.6,61,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,357.6,61,13,1,0)
	;;=2;IBD(357.98,^^0^^^^^^
	;;^UTILITY(U,$J,357.6,61,13,2,0)
	;;=3;IBD(357.98,^^0^^^^^^
	;;^UTILITY(U,$J,357.6,61,14)
	;;=S Y=$$DSPLYPRV^IBDFN9(X)
	;;^UTILITY(U,$J,357.6,61,16)
	;;=n^^^^n
	;;^UTILITY(U,$J,357.6,61,18)
	;;=D LIST^IBDFDE2(.IBDSEL,.IBDF,"Provider")
	;;^UTILITY(U,$J,357.6,62,0)
	;;=INPUT VISIT TYPE^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP^
	;;^UTILITY(U,$J,357.6,62,1,0)
	;;=^^1^1^2951023^
	;;^UTILITY(U,$J,357.6,62,1,1,0)
	;;=Used for inputting the visit type that applies to the visit.
	;;^UTILITY(U,$J,357.6,62,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,62,3)
	;;=VISIT TYPE OF VISIT
	;;^UTILITY(U,$J,357.6,62,9)
	;;=D INPUTCPT^IBDFN8(.X)
	;;^UTILITY(U,$J,357.6,62,10)
	;;=Enter an active Visit Type code.
	;;^UTILITY(U,$J,357.6,62,11)
	;;=D TESTVST^IBDFN7
	;;^UTILITY(U,$J,357.6,62,12)
	;;=ENCOUNTER^5^^^^^^
	;;^UTILITY(U,$J,357.6,62,14)
	;;=S Y=$$DSPLYCPT^IBDFN9(X)
	;;^UTILITY(U,$J,357.6,62,17)
	;;=D SLCTVST^IBDFN12(.X)
	;;^UTILITY(U,$J,357.6,62,18)
	;;=D LIST^IBDFDE2(.IBDSEL,.IBDF,"Visit Type (EM) Code")
	;;^UTILITY(U,$J,357.6,62,19)
	;;=D VST^IBDFN14(X)
	;;^UTILITY(U,$J,357.6,63,0)
	;;=INPUT SC RELATED?^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^P

IBDIN01F
IBDIN01F	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,63,1,0)
	;;=^^2^2^2950911^^^
	;;^UTILITY(U,$J,357.6,63,1,1,0)
	;;=Used for inputting whether the visit was related to a service connected
	;;^UTILITY(U,$J,357.6,63,1,2,0)
	;;=condition.
	;;^UTILITY(U,$J,357.6,63,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,63,3)
	;;=SERVICE CONNECTED
	;;^UTILITY(U,$J,357.6,63,9)
	;;=
	;;^UTILITY(U,$J,357.6,63,10)
	;;=Enter YES or NO.
	;;^UTILITY(U,$J,357.6,63,12)
	;;=ENCOUNTER^6^^^6^^^
	;;^UTILITY(U,$J,357.6,63,14)
	;;=S Y=$$DSPLYYN^IBDFN9(Y)
	;;^UTILITY(U,$J,357.6,63,17)
	;;=D SLCTYN^IBDFN12(.X)
	;;^UTILITY(U,$J,357.6,63,19)
	;;=D YN^IBDFN14(X)
	;;^UTILITY(U,$J,357.6,64,0)
	;;=INPUT AO RELATED?^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^P
	;;^UTILITY(U,$J,357.6,64,1,0)
	;;=^^2^2^2950913^^^
	;;^UTILITY(U,$J,357.6,64,1,1,0)
	;;=Used for inputting of whether or not the visit was related to Agent Orange
	;;^UTILITY(U,$J,357.6,64,1,2,0)
	;;=exposure.
	;;^UTILITY(U,$J,357.6,64,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,64,3)
	;;=AGENT ORANGE
	;;^UTILITY(U,$J,357.6,64,9)
	;;=
	;;^UTILITY(U,$J,357.6,64,10)
	;;=Enter YES or NO.
	;;^UTILITY(U,$J,357.6,64,12)
	;;=ENCOUNTER^7^^^^^^
	;;^UTILITY(U,$J,357.6,64,14)
	;;=S Y=$$DSPLYYN^IBDFN9(Y)
	;;^UTILITY(U,$J,357.6,64,17)
	;;=D SLCTYN^IBDFN12(.X)
	;;^UTILITY(U,$J,357.6,64,19)
	;;=D YN^IBDFN14(X)
	;;^UTILITY(U,$J,357.6,65,0)
	;;=INPUT IR RELATED?^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^P
	;;^UTILITY(U,$J,357.6,65,1,0)
	;;=^^2^2^2950913^^^
	;;^UTILITY(U,$J,357.6,65,1,1,0)
	;;=Used for inputting whether or not the patient's visit was related to
	;;^UTILITY(U,$J,357.6,65,1,2,0)
	;;=ionizing radiation.
	;;^UTILITY(U,$J,357.6,65,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,65,3)
	;;=IONIZING RADIATION
	;;^UTILITY(U,$J,357.6,65,9)
	;;=
	;;^UTILITY(U,$J,357.6,65,10)
	;;=Enter YES or NO.
	;;^UTILITY(U,$J,357.6,65,12)
	;;=ENCOUNTER^8^^^9^^^
	;;^UTILITY(U,$J,357.6,65,14)
	;;=S Y=$$DSPLYYN^IBDFN9(Y)
	;;^UTILITY(U,$J,357.6,65,17)
	;;=D SLCTYN^IBDFN12(.X)
	;;^UTILITY(U,$J,357.6,65,19)
	;;=D YN^IBDFN14(X)
	;;^UTILITY(U,$J,357.6,66,0)
	;;=INPUT EC RELATED?^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^P
	;;^UTILITY(U,$J,357.6,66,1,0)
	;;=^^2^2^2950828^^
	;;^UTILITY(U,$J,357.6,66,1,1,0)
	;;=Used for inputting whether or not the visit was related to environmental
	;;^UTILITY(U,$J,357.6,66,1,2,0)
	;;=contaminants.
	;;^UTILITY(U,$J,357.6,66,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,66,3)
	;;=ENVIRONMENTAL CONTAMINANTS
	;;^UTILITY(U,$J,357.6,66,9)
	;;=
	;;^UTILITY(U,$J,357.6,66,10)
	;;=Enter YES or NO.
	;;^UTILITY(U,$J,357.6,66,12)
	;;=ENCOUNTER^^^^9^^^
	;;^UTILITY(U,$J,357.6,66,14)
	;;=S Y=$$DSPLYYN^IBDFN9(Y)
	;;^UTILITY(U,$J,357.6,66,17)
	;;=D SLCTYN^IBDFN12(.X)
	;;^UTILITY(U,$J,357.6,66,19)
	;;=D YN^IBDFN14(X)
	;;^UTILITY(U,$J,357.6,67,0)
	;;=INPUT PROVIDER INDICATOR^^^PANDAS^^1^^^0^^^1^^^^P
	;;^UTILITY(U,$J,357.6,67,1,0)
	;;=^^1^1^2950913^^
	;;^UTILITY(U,$J,357.6,67,1,1,0)
	;;=Used by PANDAS only.
	;;^UTILITY(U,$J,357.6,67,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,357.6,67,3)
	;;=PANDAS
	;;^UTILITY(U,$J,357.6,67,12)
	;;=ENCOUNTER^15^^^^^^
	;;^UTILITY(U,$J,357.6,68,0)
	;;=PX INPUT ATTENDING PHYSICIAN^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^S
	;;^UTILITY(U,$J,357.6,68,1,0)
	;;=^^1^1^2950825^
	;;^UTILITY(U,$J,357.6,68,1,1,0)
	;;=Used for inputting the attending physician.
	;;^UTILITY(U,$J,357.6,68,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,357.6,68,3)
	;;=ATTENDING PHYSICIAN DOCTOR
	;;^UTILITY(U,$J,357.6,68,12)
	;;=ENCOUNTER^16^^^^^^
	;;^UTILITY(U,$J,357.6,68,14)
	;;=S Y=$$DSPLYPRV^IBDFN9(Y)
	;;^UTILITY(U,$J,357.6,69,0)
	;;=INPUT DIAGNOSIS CODE (ICD9)^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP^^^1
	;;^UTILITY(U,$J,357.6,69,1,0)
	;;=^^1^1^2950828^^
	;;^UTILITY(U,$J,357.6,69,1,1,0)
	;;=Used for inputting ICD9 diagnosis codes.
	;;^UTILITY(U,$J,357.6,69,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,69,3)
	;;=INPUT ICD9 ICD-9 DIAGNOSIS CODES
	;;^UTILITY(U,$J,357.6,69,9)
	;;=D INPUTICD^IBDFN8(.X)
	;;^UTILITY(U,$J,357.6,69,10)
	;;=Enter an active ICD9 diagnosis code.
	;;^UTILITY(U,$J,357.6,69,11)
	;;=D TESTICD^IBDFN7
	;;^UTILITY(U,$J,357.6,69,12)
	;;=DIAGNOSIS/PROBLEM^1^13^14^2^^^
	;;^UTILITY(U,$J,357.6,69,13,0)
	;;=^357.613V^10^10
	;;^UTILITY(U,$J,357.6,69,13,1,0)
	;;=2;IBD(357.98,^^1^^^^^2^
	;;^UTILITY(U,$J,357.6,69,13,2,0)
	;;=3;IBD(357.98,^^1^^^^^2^
	;;^UTILITY(U,$J,357.6,69,13,3,0)
	;;=10;IBD(357.98,^^1^^^^^9^
	;;^UTILITY(U,$J,357.6,69,13,4,0)
	;;=1;IBE(359.1,^^0^^^^^^
	;;^UTILITY(U,$J,357.6,69,13,5,0)
	;;=11;IBD(357.98,^^1^^^^^10
	;;^UTILITY(U,$J,357.6,69,13,6,0)
	;;=12;IBD(357.98,^^1^^^^^11
	;;^UTILITY(U,$J,357.6,69,13,7,0)
	;;=13;IBD(357.98,^^1^^^^^12

IBDIN01G
IBDIN01G	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,69,13,8,0)
	;;=9;IBD(357.98,^^1^^^^^5
	;;^UTILITY(U,$J,357.6,69,13,9,0)
	;;=6;IBD(357.98,^^1^^^^^6
	;;^UTILITY(U,$J,357.6,69,13,10,0)
	;;=7;IBD(357.98,^^1^^^^^6
	;;^UTILITY(U,$J,357.6,69,14)
	;;=S Y=$$DSPLYICD^IBDFN9(Y)
	;;^UTILITY(U,$J,357.6,69,15,0)
	;;=^357.615I^0^0
	;;^UTILITY(U,$J,357.6,69,16)
	;;=^^^^^^
	;;^UTILITY(U,$J,357.6,69,17)
	;;=D SLCTDX^IBDFN12(.X)
	;;^UTILITY(U,$J,357.6,69,18)
	;;=D LIST^IBDFDE2(.IBDSEL,.IBDF,"Diagnosis Code")
	;;^UTILITY(U,$J,357.6,69,19)
	;;=D DX^IBDFN14(X)
	;;^UTILITY(U,$J,357.6,70,0)
	;;=INPUT EDIT INFORMATION^^^PANDAS^^1^1^^0^^^1^^^^P
	;;^UTILITY(U,$J,357.6,70,1,0)
	;;=^^2^2^2950913^^
	;;^UTILITY(U,$J,357.6,70,1,1,0)
	;;=This package interface was created for the Pandas forms for those fields
	;;^UTILITY(U,$J,357.6,70,1,2,0)
	;;=that require editing by hand.
	;;^UTILITY(U,$J,357.6,70,3)
	;;=PANDAS
	;;^UTILITY(U,$J,357.6,71,0)
	;;=SD SELECT PROVIDER^PRVDR^IBDFN4^SCHEDULING^1^3^4^0^1^0^^1^61^1^^
	;;^UTILITY(U,$J,357.6,71,1,0)
	;;=^^2^2^2951020^
	;;^UTILITY(U,$J,357.6,71,1,1,0)
	;;=Used to indicate the provider.  The list of providers is obtained from
	;;^UTILITY(U,$J,357.6,71,1,2,0)
	;;=scheduling.  
	;;^UTILITY(U,$J,357.6,71,2)
	;;=POINTER TO NEW PERSON^10^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,357.6,71,3)
	;;=PROVIDER DOCTOR NURSE
	;;^UTILITY(U,$J,357.6,71,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,71,7,1,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,357.6,71,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,357.6,71,13,1,0)
	;;=2;IBD(357.98,^^0^^^^^^
	;;^UTILITY(U,$J,357.6,71,13,2,0)
	;;=3;IBD(357.98,^^0^^^^^^
	;;^UTILITY(U,$J,357.6,71,15,0)
	;;=^357.615I^1^1
	;;^UTILITY(U,$J,357.6,71,15,1,0)
	;;=PROVIDER^30^2^^PROVIDER
	;;^UTILITY(U,$J,357.6,71,16)
	;;=n^^^^n
	;;^UTILITY(U,$J,357.6,72,0)
	;;=IBDF FORM ID ASSIGNED BY FORM TRACKING^IBPFID^IBDFN4^AUTOMATED INFO COLLECTION SYS^1^2^1^1^1^^^1^^
	;;^UTILITY(U,$J,357.6,72,1,0)
	;;=^^4^4^2951020^
	;;^UTILITY(U,$J,357.6,72,1,1,0)
	;;=Used to display the form number assigned by Form Tracking. DO NOT use this
	;;^UTILITY(U,$J,357.6,72,1,2,0)
	;;=for scannable forms or forms designed to be printed on a laser printer
	;;^UTILITY(U,$J,357.6,72,1,3,0)
	;;=with a page size of (133 col)x(80 lines). The form tracking number will be
	;;^UTILITY(U,$J,357.6,72,1,4,0)
	;;=printed automatically in those cases.
	;;^UTILITY(U,$J,357.6,72,2)
	;;=FORM TRACKING NUMBER^8^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,72,3)
	;;=FORM TRACKING NUMBER PRINTED FORM ID
	;;^UTILITY(U,$J,357.6,73,0)
	;;=GMP SELECT PATIENT ACTIVE PROBLEMS^DSELECT^GMPLENFM^PROBLEM LIST^1^3^4^1^1^^^1^74^1^1^
	;;^UTILITY(U,$J,357.6,73,1,0)
	;;=^^8^8^2950918^^^^
	;;^UTILITY(U,$J,357.6,73,1,1,0)
	;;=For displaying the patient's active problems. Returns a list.
	;;^UTILITY(U,$J,357.6,73,1,2,0)
	;;=Data returned:
	;;^UTILITY(U,$J,357.6,73,1,3,0)
	;;=  problem text
	;;^UTILITY(U,$J,357.6,73,1,4,0)
	;;=  corresponding ICD-9 code (if there is a mapping)
	;;^UTILITY(U,$J,357.6,73,1,5,0)
	;;=  date of onset (MM/DD/YY)
	;;^UTILITY(U,$J,357.6,73,1,6,0)
	;;=  SC indicator (SC/NSC/"")
	;;^UTILITY(U,$J,357.6,73,1,7,0)
	;;=  special exposure (A/I/P/"")
	;;^UTILITY(U,$J,357.6,73,1,8,0)
	;;=  special exposure (returns the full text of the type of exposure)
	;;^UTILITY(U,$J,357.6,73,2)
	;;=PROBLEM^10^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,357.6,73,3)
	;;=SELECT ACTIVE PROBLEMS LIST PATIENT
	;;^UTILITY(U,$J,357.6,73,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,73,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,73,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,357.6,73,13,1,0)
	;;=2;IBD(357.98,^^0^^^^^^
	;;^UTILITY(U,$J,357.6,73,13,2,0)
	;;=3;IBD(357.98,^^0^^^^^^
	;;^UTILITY(U,$J,357.6,73,15,0)
	;;=^357.615I^7^7
	;;^UTILITY(U,$J,357.6,73,15,1,0)
	;;=PROBLEM TEXT^80^2^^PROBLEM NARRATIVE/NOTES
	;;^UTILITY(U,$J,357.6,73,15,2,0)
	;;=CORRESPONDNG ICD-9 Dx CODE^7^3
	;;^UTILITY(U,$J,357.6,73,15,3,0)
	;;=DATE OF ONSET (MM/DD/YY)^8^4
	;;^UTILITY(U,$J,357.6,73,15,4,0)
	;;=SC INDICATOR (SC/NSC/"")^3^5
	;;^UTILITY(U,$J,357.6,73,15,5,0)
	;;=SC INDICATOR (Y/N/"")^1^6
	;;^UTILITY(U,$J,357.6,73,15,6,0)
	;;=SPECIAL EXPOSURE (A/I/P/"")^1^7
	;;^UTILITY(U,$J,357.6,73,15,7,0)
	;;=SPECIAL EXPOSURE (FULL TEXT)^12^8
	;;^UTILITY(U,$J,357.6,73,16)
	;;=n^^^^n
	;;^UTILITY(U,$J,357.6,74,0)
	;;=PX INPUT PATIENT ACTIVE PROBLEM^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^S
	;;^UTILITY(U,$J,357.6,74,1,0)
	;;=^^1^1^2951206^^
	;;^UTILITY(U,$J,357.6,74,1,1,0)
	;;=Used for inputting data selected from the Patient's Active Problem List.
	;;^UTILITY(U,$J,357.6,74,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,357.6,74,3)
	;;=PATIENT'S ACTIVE PROBLEM LIST

IBDIN01H
IBDIN01H	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,74,9)
	;;=
	;;^UTILITY(U,$J,357.6,74,12)
	;;=DIAGNOSIS/PROBLEM^4^13^14^2
	;;^UTILITY(U,$J,357.6,74,13,0)
	;;=^357.613V^8^8
	;;^UTILITY(U,$J,357.6,74,13,1,0)
	;;=2;IBD(357.98,^^1^^^^^2^
	;;^UTILITY(U,$J,357.6,74,13,2,0)
	;;=3;IBD(357.98,^^1^^^^^2^
	;;^UTILITY(U,$J,357.6,74,13,3,0)
	;;=10;IBD(357.98,^^1^^^^^9
	;;^UTILITY(U,$J,357.6,74,13,4,0)
	;;=11;IBD(357.98,^^1^^^^^10
	;;^UTILITY(U,$J,357.6,74,13,5,0)
	;;=12;IBD(357.98,^^1^^^^^11
	;;^UTILITY(U,$J,357.6,74,13,6,0)
	;;=13;IBD(357.98,^^1^^^^^12
	;;^UTILITY(U,$J,357.6,74,13,7,0)
	;;=6;IBD(357.98,^^1^^^^^6
	;;^UTILITY(U,$J,357.6,74,13,8,0)
	;;=7;IBD(357.98,^^1^^^^^6
	;;^UTILITY(U,$J,357.6,74,14)
	;;=
	;;^UTILITY(U,$J,357.6,75,0)
	;;=DPT PATIENT'S SC CONDITIONS^ELIG^IBDFN^REGISTRATION^1^3^4^1^1^^^1^^1^^
	;;^UTILITY(U,$J,357.6,75,1,0)
	;;=^^7^7^2951023^
	;;^UTILITY(U,$J,357.6,75,1,1,0)
	;;=Used to output a list of the patients service connected conditions,
	;;^UTILITY(U,$J,357.6,75,1,2,0)
	;;=along with the percentage ratings. Data returned:
	;;^UTILITY(U,$J,357.6,75,1,3,0)
	;;=  disability name
	;;^UTILITY(U,$J,357.6,75,1,4,0)
	;;=  disability percentage
	;;^UTILITY(U,$J,357.6,75,1,5,0)
	;;=  disability percentage with the label "%"
	;;^UTILITY(U,$J,357.6,75,1,6,0)
	;;=  disability percentage with the label "%SC"
	;;^UTILITY(U,$J,357.6,75,1,7,0)
	;;=  disability percentage with the label "% - SERVICE CONNECTED"
	;;^UTILITY(U,$J,357.6,75,2)
	;;=Disability Name^45^^^^^^^^^^^^^^DISABILITY^1^0
	;;^UTILITY(U,$J,357.6,75,3)
	;;=SERVICE CONNECTED CONDITIONS PATIENT PIMS DISABILITY DISABILITIES
	;;^UTILITY(U,$J,357.6,75,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,75,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,75,15,0)
	;;=^357.615I^5^4
	;;^UTILITY(U,$J,357.6,75,15,2,0)
	;;=Disability % (number only)^3^2
	;;^UTILITY(U,$J,357.6,75,15,3,0)
	;;=Disability % (label=%)^4^3
	;;^UTILITY(U,$J,357.6,75,15,4,0)
	;;=Disabilty % (label=%SC)^6^4
	;;^UTILITY(U,$J,357.6,75,15,5,0)
	;;=Dis.%_"% - SERVICE CONNECTED"^24^5
	;;^UTILITY(U,$J,357.6,76,0)
	;;=SD FUTURE APPTS, SAME DAY^SAMEDAY^IBDFN1^SCHEDULING^1^3^4^1^1^^^1^^1^^
	;;^UTILITY(U,$J,357.6,76,1,0)
	;;=^^8^8^2950413^^^
	;;^UTILITY(U,$J,357.6,76,1,1,0)
	;;=Returns a list of all the patient's future appointments for the same day.
	;;^UTILITY(U,$J,357.6,76,1,2,0)
	;;= Includes:
	;;^UTILITY(U,$J,357.6,76,1,3,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,357.6,76,1,4,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,357.6,76,1,5,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,357.6,76,1,6,0)
	;;=  Clinic
	;;^UTILITY(U,$J,357.6,76,1,7,0)
	;;=  Status
	;;^UTILITY(U,$J,357.6,76,1,8,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,357.6,76,2)
	;;=DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1^0
	;;^UTILITY(U,$J,357.6,76,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,357.6,76,7,0)
	;;=^357.67^2^2
	;;^UTILITY(U,$J,357.6,76,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,76,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,357.6,76,15,0)
	;;=^357.615I^6^5
	;;^UTILITY(U,$J,357.6,76,15,2,0)
	;;=TIME (HH:MM)^5^2
	;;^UTILITY(U,$J,357.6,76,15,3,0)
	;;=DATE@TIME^17^3
	;;^UTILITY(U,$J,357.6,76,15,4,0)
	;;=CLINIC^30^4
	;;^UTILITY(U,$J,357.6,76,15,5,0)
	;;=STATUS^35^5
	;;^UTILITY(U,$J,357.6,76,15,6,0)
	;;=APPOINTMENT TYPE^25^6
	;;^UTILITY(U,$J,357.6,77,0)
	;;=SD FUTURE APPTS, ALL^ALLFUTR^IBDFN1^SCHEDULING^1^3^4^1^1^^^1^^1^^
	;;^UTILITY(U,$J,357.6,77,1,0)
	;;=^^7^7^2951026^
	;;^UTILITY(U,$J,357.6,77,1,1,0)
	;;=Returns a list of all future appointments for all clinics. Includes:
	;;^UTILITY(U,$J,357.6,77,1,2,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,357.6,77,1,3,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,357.6,77,1,4,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,357.6,77,1,5,0)
	;;=  Clinic
	;;^UTILITY(U,$J,357.6,77,1,6,0)
	;;=  Status
	;;^UTILITY(U,$J,357.6,77,1,7,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,357.6,77,2)
	;;=DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1^0
	;;^UTILITY(U,$J,357.6,77,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,357.6,77,7,0)
	;;=^357.67^2^2
	;;^UTILITY(U,$J,357.6,77,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,77,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,357.6,77,15,0)
	;;=^357.615I^6^5
	;;^UTILITY(U,$J,357.6,77,15,2,0)
	;;=TIME^5^2
	;;^UTILITY(U,$J,357.6,77,15,3,0)
	;;=DATE@TIME^17^3
	;;^UTILITY(U,$J,357.6,77,15,4,0)
	;;=CLINIC^30^4
	;;^UTILITY(U,$J,357.6,77,15,5,0)
	;;=STATUS^35^5
	;;^UTILITY(U,$J,357.6,77,15,6,0)
	;;=APPOINTMENT TYPE^25^6
	;;^UTILITY(U,$J,357.6,78,0)
	;;=SD FUTURE APPTS, SAME CLINIC^CLNCFUTR^IBDFN1^SCHEDULING^1^3^4^1^1^^^1^^1^^
	;;^UTILITY(U,$J,357.6,78,1,0)
	;;=^^8^8^2950413^^^
	;;^UTILITY(U,$J,357.6,78,1,1,0)
	;;=Returns a list of all the patient's future appointments for the same day

IBDIN01I
IBDIN01I	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,78,1,2,0)
	;;=and clinic. Includes:
	;;^UTILITY(U,$J,357.6,78,1,3,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,357.6,78,1,4,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,357.6,78,1,5,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,357.6,78,1,6,0)
	;;=  Clinic
	;;^UTILITY(U,$J,357.6,78,1,7,0)
	;;=  Status
	;;^UTILITY(U,$J,357.6,78,1,8,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,357.6,78,2)
	;;=DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1^0
	;;^UTILITY(U,$J,357.6,78,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,357.6,78,7,0)
	;;=^357.67^3^3
	;;^UTILITY(U,$J,357.6,78,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,78,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,357.6,78,7,3,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,357.6,78,15,0)
	;;=^357.615I^6^5
	;;^UTILITY(U,$J,357.6,78,15,2,0)
	;;=TIME^5^2
	;;^UTILITY(U,$J,357.6,78,15,3,0)
	;;=DATE@TIME^17^3
	;;^UTILITY(U,$J,357.6,78,15,4,0)
	;;=CLINIC^30^4
	;;^UTILITY(U,$J,357.6,78,15,5,0)
	;;=STATUS^35^5
	;;^UTILITY(U,$J,357.6,78,15,6,0)
	;;=APPOINTMENT TYPE^25^6
	;;^UTILITY(U,$J,357.6,79,0)
	;;=DPT PATIENT'S INSURANCE - ALL^INSURANC^IBDFN6^REGISTRATION^1^3^4^1^1^^^1^^1^1^^
	;;^UTILITY(U,$J,357.6,79,1,0)
	;;=^^10^10^2950505^^^
	;;^UTILITY(U,$J,357.6,79,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns
	;;^UTILITY(U,$J,357.6,79,1,2,0)
	;;=ALL insurance policies, including inactive ones.
	;;^UTILITY(U,$J,357.6,79,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,357.6,79,1,4,0)
	;;=  insurance company
	;;^UTILITY(U,$J,357.6,79,1,5,0)
	;;=  policy number
	;;^UTILITY(U,$J,357.6,79,1,6,0)
	;;=  group name
	;;^UTILITY(U,$J,357.6,79,1,7,0)
	;;=  policy holder's relationship to the patient
	;;^UTILITY(U,$J,357.6,79,1,8,0)
	;;=  policy expiration date
	;;^UTILITY(U,$J,357.6,79,1,9,0)
	;;=  group number
	;;^UTILITY(U,$J,357.6,79,1,10,0)
	;;=  name of insured
	;;^UTILITY(U,$J,357.6,79,2)
	;;=INSURANCE COMPANY^30^^^^^^^^^^^^^^^1^0
	;;^UTILITY(U,$J,357.6,79,3)
	;;=PATIENT INSURANCE PIMS
	;;^UTILITY(U,$J,357.6,79,4)
	;;=S ACT=""
	;;^UTILITY(U,$J,357.6,79,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,357.6,79,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,357.6,79,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,79,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,79,15,0)
	;;=^357.615I^7^6
	;;^UTILITY(U,$J,357.6,79,15,2,0)
	;;=EXPIRATION DATE^12^2
	;;^UTILITY(U,$J,357.6,79,15,3,0)
	;;=POLICY NUMBER^20^3
	;;^UTILITY(U,$J,357.6,79,15,4,0)
	;;=GROUP NUMBER^17^4
	;;^UTILITY(U,$J,357.6,79,15,5,0)
	;;=GROUP NAME^20^5
	;;^UTILITY(U,$J,357.6,79,15,6,0)
	;;=NAME OF INSURED^30^6
	;;^UTILITY(U,$J,357.6,79,15,7,0)
	;;=HOLDER'S RELATIONSHIP^9^7
	;;^UTILITY(U,$J,357.6,80,0)
	;;=DPT PATIENT'S INSURANCE - ACTIVE ONLY^INSURANC^IBDFN6^REGISTRATION^1^3^4^1^1^^^1^^1^1^^
	;;^UTILITY(U,$J,357.6,80,1,0)
	;;=^^10^10^2950413^^^
	;;^UTILITY(U,$J,357.6,80,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns ONLY
	;;^UTILITY(U,$J,357.6,80,1,2,0)
	;;=active insurance, excluding policies that do not reimburse.
	;;^UTILITY(U,$J,357.6,80,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,357.6,80,1,4,0)
	;;=  insurance company
	;;^UTILITY(U,$J,357.6,80,1,5,0)
	;;=  policy number
	;;^UTILITY(U,$J,357.6,80,1,6,0)
	;;=  group name
	;;^UTILITY(U,$J,357.6,80,1,7,0)
	;;=  policy holder's relationship to the patient
	;;^UTILITY(U,$J,357.6,80,1,8,0)
	;;=  policy expiration date
	;;^UTILITY(U,$J,357.6,80,1,9,0)
	;;=  group number
	;;^UTILITY(U,$J,357.6,80,1,10,0)
	;;=  name of insured
	;;^UTILITY(U,$J,357.6,80,2)
	;;=INSURANCE COMPANY^30^^^^^^^^^NAME OF INSURED^^^^^^1^0
	;;^UTILITY(U,$J,357.6,80,3)
	;;=PATIENT INSURANCE PIMS ACTIVE
	;;^UTILITY(U,$J,357.6,80,4)
	;;=S ACT=1
	;;^UTILITY(U,$J,357.6,80,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,357.6,80,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,357.6,80,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,80,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,80,15,0)
	;;=^357.615I^7^6
	;;^UTILITY(U,$J,357.6,80,15,2,0)
	;;=EXPIRATION DATE^12^2
	;;^UTILITY(U,$J,357.6,80,15,3,0)
	;;=POLICY NUMBER^20^3
	;;^UTILITY(U,$J,357.6,80,15,4,0)
	;;=GROUP NUMBER^17^4
	;;^UTILITY(U,$J,357.6,80,15,5,0)
	;;=GROUP NAME^20^5
	;;^UTILITY(U,$J,357.6,80,15,6,0)
	;;=NAME OF INSURED^30^6
	;;^UTILITY(U,$J,357.6,80,15,7,0)
	;;=HOLDER'S RELATIONSHIP^9^7
	;;^UTILITY(U,$J,357.6,81,0)
	;;=DPT PATIENT'S INSURANCE POLICIES^INSURANC^IBDFN6^REGISTRATION^1^3^4^1^1^^^1^^1^1^^
	;;^UTILITY(U,$J,357.6,81,1,0)
	;;=^^10^10^2950413^^
	;;^UTILITY(U,$J,357.6,81,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns
	;;^UTILITY(U,$J,357.6,81,1,2,0)
	;;=active insurance policies and policies that do not reimburse (Medicare).

IBDIN01J
IBDIN01J	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,81,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,357.6,81,1,4,0)
	;;=    insurance company
	;;^UTILITY(U,$J,357.6,81,1,5,0)
	;;=    policy number
	;;^UTILITY(U,$J,357.6,81,1,6,0)
	;;=    group name
	;;^UTILITY(U,$J,357.6,81,1,7,0)
	;;=    policy holder's relationship to the patient
	;;^UTILITY(U,$J,357.6,81,1,8,0)
	;;=    policy expiration date
	;;^UTILITY(U,$J,357.6,81,1,9,0)
	;;=    group number
	;;^UTILITY(U,$J,357.6,81,1,10,0)
	;;=    name of insured
	;;^UTILITY(U,$J,357.6,81,2)
	;;=INSURANCE COMPANY^30^^^^^^^^^NAME OF INSURED^^^^^^1^0
	;;^UTILITY(U,$J,357.6,81,3)
	;;=PATIENT INSURANCE PIMS
	;;^UTILITY(U,$J,357.6,81,4)
	;;=S ACT=2
	;;^UTILITY(U,$J,357.6,81,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,357.6,81,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,357.6,81,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,81,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,81,15,0)
	;;=^357.615I^7^6
	;;^UTILITY(U,$J,357.6,81,15,2,0)
	;;=EXPIRATION DATE^12^2
	;;^UTILITY(U,$J,357.6,81,15,3,0)
	;;=POLICY NUMBER^20^3
	;;^UTILITY(U,$J,357.6,81,15,4,0)
	;;=GROUP NUMBER^17^4
	;;^UTILITY(U,$J,357.6,81,15,5,0)
	;;=GROUP NAME^20^5
	;;^UTILITY(U,$J,357.6,81,15,6,0)
	;;=NAME OF INSURED^30^6
	;;^UTILITY(U,$J,357.6,81,15,7,0)
	;;=HOLDER'S RELATIONSHIP^9^7
	;;^UTILITY(U,$J,357.6,82,0)
	;;=GMRA PATIENT'S ALLERGIES^ALLERGY^IBDFN2^GEN. MED. REC. - ALLERGIES^1^3^4^1^1^^^1^^1^1^^
	;;^UTILITY(U,$J,357.6,82,1,0)
	;;=^^7^7^2951023^
	;;^UTILITY(U,$J,357.6,82,1,1,0)
	;;=Used to display a list of the patient's allergies, both true and adverse
	;;^UTILITY(U,$J,357.6,82,1,2,0)
	;;=reactions, verified and unverified. Data returned:
	;;^UTILITY(U,$J,357.6,82,1,3,0)
	;;=  allergy name
	;;^UTILITY(U,$J,357.6,82,1,4,0)
	;;=  type of allergen
	;;^UTILITY(U,$J,357.6,82,1,5,0)
	;;=  type (code only - F=food, D=drug,O=other)
	;;^UTILITY(U,$J,357.6,82,1,6,0)
	;;=  verified? YES/NO
	;;^UTILITY(U,$J,357.6,82,1,7,0)
	;;=  true allergy? YES/NO
	;;^UTILITY(U,$J,357.6,82,2)
	;;=ALLERGY NAME^30^^^^^^^^^^^^^^^1^0
	;;^UTILITY(U,$J,357.6,82,3)
	;;=ALLERGIES ALLERGY PATIENT
	;;^UTILITY(U,$J,357.6,82,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,82,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,82,15,0)
	;;=^357.615I^5^4
	;;^UTILITY(U,$J,357.6,82,15,2,0)
	;;=TYPE OF ALLERGEN^5^2
	;;^UTILITY(U,$J,357.6,82,15,3,0)
	;;=TYPE (F=FOOD,D=DRUG,O=OTHER)^1^3
	;;^UTILITY(U,$J,357.6,82,15,4,0)
	;;=VERIFIED? (YES/NO)^3^4
	;;^UTILITY(U,$J,357.6,82,15,5,0)
	;;=TRUE ALLERGY? (YES/NO)^3^5
	;;^UTILITY(U,$J,357.6,85,0)
	;;=PX SELECT EDUCATION TOPICS^EDTOP^IBDFN10^PATIENT CARE ENCOUNTER^0^3^2^^0^0^^1^91^^^
	;;^UTILITY(U,$J,357.6,85,1,0)
	;;=^^1^1^2960403^^
	;;^UTILITY(U,$J,357.6,85,1,1,0)
	;;=Allows education topics from the EDUCATION TOPICS file to be selected.
	;;^UTILITY(U,$J,357.6,85,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,357.6,85,3)
	;;=EDUCATION TOPICS TRAINING
	;;^UTILITY(U,$J,357.6,85,11)
	;;=D TESTEDT^PXAPIIB
	;;^UTILITY(U,$J,357.6,85,15,0)
	;;=^357.615I^2^2
	;;^UTILITY(U,$J,357.6,85,15,1,0)
	;;=Topic^30^2^^EDUCATION TOPIC
	;;^UTILITY(U,$J,357.6,85,15,2,0)
	;;=Mneumonic^6^3
	;;^UTILITY(U,$J,357.6,85,16)
	;;=o
	;;^UTILITY(U,$J,357.6,86,0)
	;;=PX SELECT IMMUNIZATIONS^IMM^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^0^^^1^94
	;;^UTILITY(U,$J,357.6,86,1,0)
	;;=^^1^1^2950911^
	;;^UTILITY(U,$J,357.6,86,1,1,0)
	;;=Allows immunizations form the IMMUNIZATION file to be selected.
	;;^UTILITY(U,$J,357.6,86,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,357.6,86,3)
	;;=IMMUNIZATIONS SHOTS IMMUNIZE
	;;^UTILITY(U,$J,357.6,86,11)
	;;=D TESTIMM^PXAPIIB
	;;^UTILITY(U,$J,357.6,86,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,357.6,86,15,1,0)
	;;=Immunization Name^45^2^^IMMUNIZATION
	;;^UTILITY(U,$J,357.6,86,15,2,0)
	;;=Short Name^10^3
	;;^UTILITY(U,$J,357.6,86,15,3,0)
	;;=Code^2^4
	;;^UTILITY(U,$J,357.6,87,0)
	;;=PX SELECT EXAMS^EXAM^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^0^^^1^92^^^
	;;^UTILITY(U,$J,357.6,87,1,0)
	;;=^^1^1^2950911^
	;;^UTILITY(U,$J,357.6,87,1,1,0)
	;;=Allows exams from the EXAM file to be selected.
	;;^UTILITY(U,$J,357.6,87,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,357.6,87,3)
	;;=EXAMS EXAMINATIONS PATIENT
	;;^UTILITY(U,$J,357.6,87,11)
	;;=D TESTEXM^PXAPIIB
	;;^UTILITY(U,$J,357.6,87,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,357.6,87,15,1,0)
	;;=Exam Name^30^2^^EXAM
	;;^UTILITY(U,$J,357.6,87,15,2,0)
	;;=Code^2^3
	;;^UTILITY(U,$J,357.6,87,15,3,0)
	;;=Sex Specific^6^4^^FOR
	;;^UTILITY(U,$J,357.6,88,0)
	;;=PX SELECT TREATMENTS^TRTMNT^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^0^^^1^
	;;^UTILITY(U,$J,357.6,88,1,0)
	;;=^^1^1^2950911^
	;;^UTILITY(U,$J,357.6,88,1,1,0)
	;;=Allows treatments found in the TREATMENT file to be selected.

IBDIN01K
IBDIN01K	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,88,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,357.6,88,3)
	;;=TREATMENTS PATIENT
	;;^UTILITY(U,$J,357.6,88,11)
	;;=D TESTTRT^PXAPIIB
	;;^UTILITY(U,$J,357.6,88,15,0)
	;;=^357.615I^2^2
	;;^UTILITY(U,$J,357.6,88,15,1,0)
	;;=Treatment Name^30^2^^TREATMENT
	;;^UTILITY(U,$J,357.6,88,15,2,0)
	;;=Code^6^3
	;;^UTILITY(U,$J,357.6,89,0)
	;;=PX SELECT SKIN TESTS^SKINTST^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^0^^^1^97
	;;^UTILITY(U,$J,357.6,89,1,0)
	;;=^^1^1^2960228^^
	;;^UTILITY(U,$J,357.6,89,1,1,0)
	;;=Allows skin tests found in the SKIN TEST file to be selected.
	;;^UTILITY(U,$J,357.6,89,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,357.6,89,3)
	;;=SKIN TESTS
	;;^UTILITY(U,$J,357.6,89,11)
	;;=D TESTSK^PXAPIIB
	;;^UTILITY(U,$J,357.6,89,15,0)
	;;=^357.615I^2^2
	;;^UTILITY(U,$J,357.6,89,15,1,0)
	;;=Skin Test Name^30^2^^SKIN TEST
	;;^UTILITY(U,$J,357.6,89,15,2,0)
	;;=code^2^3
	;;^UTILITY(U,$J,357.6,90,0)
	;;=PX SELECT HEALTH FACTORS^HF^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^0^^^1^93
	;;^UTILITY(U,$J,357.6,90,1,0)
	;;=^^1^1^2951208^^^
	;;^UTILITY(U,$J,357.6,90,1,1,0)
	;;=Allows health factors from the HEALTH FACTORS file to be selected.
	;;^UTILITY(U,$J,357.6,90,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,357.6,90,3)
	;;=PATIENT HEALTH FACTORS
	;;^UTILITY(U,$J,357.6,90,11)
	;;=D TESTHF^PXAPIIB
	;;^UTILITY(U,$J,357.6,90,15,0)
	;;=^357.615I^4^4
	;;^UTILITY(U,$J,357.6,90,15,1,0)
	;;=Health Factor Name^30^2^^HEALTH FACTOR
	;;^UTILITY(U,$J,357.6,90,15,2,0)
	;;=Code^5^3
	;;^UTILITY(U,$J,357.6,90,15,3,0)
	;;=Short Name^10^5^^
	;;^UTILITY(U,$J,357.6,90,15,4,0)
	;;=Sex Specific^6^6^^FOR
	;;^UTILITY(U,$J,357.6,90,16)
	;;=n^^^^n
	;;^UTILITY(U,$J,357.6,91,0)
	;;=PX INPUT EDUCATION TOPICS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
	;;^UTILITY(U,$J,357.6,91,1,0)
	;;=^^1^1^2950825^
	;;^UTILITY(U,$J,357.6,91,1,1,0)
	;;=Used for inputting education topics that the patient was instructed in.
	;;^UTILITY(U,$J,357.6,91,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,357.6,91,3)
	;;=EDUCATION TOPICS TRAINING
	;;^UTILITY(U,$J,357.6,91,9)
	;;=
	;;^UTILITY(U,$J,357.6,91,10)
	;;=Enter a Patient Education Topic.
	;;^UTILITY(U,$J,357.6,91,11)
	;;=D TESTEDT^PXAPIIB
	;;^UTILITY(U,$J,357.6,91,12)
	;;=PATIENT ED^1^^^2^^^
	;;^UTILITY(U,$J,357.6,91,13,0)
	;;=^357.613V^5^5
	;;^UTILITY(U,$J,357.6,91,13,1,0)
	;;=16;IBD(357.98,^^0
	;;^UTILITY(U,$J,357.6,91,13,2,0)
	;;=17;IBD(357.98,^^0
	;;^UTILITY(U,$J,357.6,91,13,3,0)
	;;=18;IBD(357.98,^^0
	;;^UTILITY(U,$J,357.6,91,13,4,0)
	;;=19;IBD(357.98,^^0
	;;^UTILITY(U,$J,357.6,91,13,5,0)
	;;=20;IBD(357.98,^^0
	;;^UTILITY(U,$J,357.6,91,14)
	;;=S Y=$$DSPLYED^PXAPIIB(Y)
	;;^UTILITY(U,$J,357.6,91,17)
	;;=D SLCTED^IBDFN12(.X)
	;;^UTILITY(U,$J,357.6,91,19)
	;;=D ED^IBDFN14(X)
	;;^UTILITY(U,$J,357.6,92,0)
	;;=PX INPUT EXAMS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
	;;^UTILITY(U,$J,357.6,92,1,0)
	;;=^^1^1^2950921^^
	;;^UTILITY(U,$J,357.6,92,1,1,0)
	;;=Used for inputting exams that were performed on the patient.
	;;^UTILITY(U,$J,357.6,92,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,357.6,92,3)
	;;=EXAMS EXAMINATIONS
	;;^UTILITY(U,$J,357.6,92,9)
	;;=
	;;^UTILITY(U,$J,357.6,92,10)
	;;=Enter a Patient Exam.
	;;^UTILITY(U,$J,357.6,92,11)
	;;=D TESTEXM^PXAPIIB
	;;^UTILITY(U,$J,357.6,92,12)
	;;=EXAM^1^^^2^^^
	;;^UTILITY(U,$J,357.6,92,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,357.6,92,13,1,0)
	;;=14;IBD(357.98,^^0
	;;^UTILITY(U,$J,357.6,92,13,2,0)
	;;=15;IBD(357.98,^^0
	;;^UTILITY(U,$J,357.6,92,14)
	;;=S Y=$$DSPLYEX^PXAPIIB(Y)
	;;^UTILITY(U,$J,357.6,92,17)
	;;=D SLECTEX^IBDFN12(.X)
	;;^UTILITY(U,$J,357.6,92,19)
	;;=D EXAM^IBDFN14(X)
	;;^UTILITY(U,$J,357.6,93,0)
	;;=PX INPUT HEALTH FACTORS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
	;;^UTILITY(U,$J,357.6,93,1,0)
	;;=^^1^1^2951208^^^
	;;^UTILITY(U,$J,357.6,93,1,1,0)
	;;=Used for inputting health factors determined to apply to the patient.
	;;^UTILITY(U,$J,357.6,93,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,357.6,93,3)
	;;=HEALTH FACTORS
	;;^UTILITY(U,$J,357.6,93,9)
	;;=
	;;^UTILITY(U,$J,357.6,93,10)
	;;=Enter a Patient Health Factor.
	;;^UTILITY(U,$J,357.6,93,11)
	;;=D TESTHF^PXAPIIB
	;;^UTILITY(U,$J,357.6,93,12)
	;;=HEALTH FACTORS^1^^^2^^^
	;;^UTILITY(U,$J,357.6,93,13,0)
	;;=^357.613V^3^3
	;;^UTILITY(U,$J,357.6,93,13,1,0)
	;;=21;IBD(357.98,^^0
	;;^UTILITY(U,$J,357.6,93,13,2,0)
	;;=22;IBD(357.98,^^0
	;;^UTILITY(U,$J,357.6,93,13,3,0)
	;;=23;IBD(357.98,^^0
	;;^UTILITY(U,$J,357.6,93,14)
	;;=S Y=$$DSPLYHF^PXAPIIB(Y)
	;;^UTILITY(U,$J,357.6,93,17)
	;;=D SLCTHF^IBDFN12(.X)
	;;^UTILITY(U,$J,357.6,93,19)
	;;=D HF^IBDFN14(X)
	;;^UTILITY(U,$J,357.6,94,0)
	;;=PX INPUT IMMUNIZATION^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP

IBDIN01L
IBDIN01L	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,94,1,0)
	;;=^^1^1^2950825^
	;;^UTILITY(U,$J,357.6,94,1,1,0)
	;;=Used for inputting immunizations administered to the patient.
	;;^UTILITY(U,$J,357.6,94,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,357.6,94,3)
	;;=IMMUNIZATIONS SHOTS
	;;^UTILITY(U,$J,357.6,94,9)
	;;=
	;;^UTILITY(U,$J,357.6,94,10)
	;;=Enter a Patient Immunization.
	;;^UTILITY(U,$J,357.6,94,11)
	;;=D TESTIMM^PXAPIIB
	;;^UTILITY(U,$J,357.6,94,12)
	;;=IMMUNIZATION^1^1^^^^^
	;;^UTILITY(U,$J,357.6,94,14)
	;;=S Y=$$DSPLYIM^PXAPIIB(Y)
	;;^UTILITY(U,$J,357.6,94,17)
	;;=D SLCTIMM^IBDFN12(.X)
	;;^UTILITY(U,$J,357.6,94,19)
	;;=D IMMUN^IBDFN14(X)
	;;^UTILITY(U,$J,357.6,95,0)
	;;=PX INPUT CHECKOUT TIME^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^H
	;;^UTILITY(U,$J,357.6,95,1,0)
	;;=^^1^1^2950913^^^^
	;;^UTILITY(U,$J,357.6,95,1,1,0)
	;;=Allows checkout time to be entered.
	;;^UTILITY(U,$J,357.6,95,3)
	;;=CHECKOUT TIME
	;;^UTILITY(U,$J,357.6,95,12)
	;;=ENCOUNTER^14^^^^^^
	;;^UTILITY(U,$J,357.6,95,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,357.6,95,13,1,0)
	;;=17;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,95,13,2,0)
	;;=31;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,97,0)
	;;=PX INPUT SKIN TESTS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
	;;^UTILITY(U,$J,357.6,97,1,0)
	;;=^^1^1^2950825^
	;;^UTILITY(U,$J,357.6,97,1,1,0)
	;;=Used for inputting skin tests performed on the patient.
	;;^UTILITY(U,$J,357.6,97,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,357.6,97,3)
	;;=SKIN TESTS
	;;^UTILITY(U,$J,357.6,97,9)
	;;=
	;;^UTILITY(U,$J,357.6,97,10)
	;;=Enter a Patient Skin Test.
	;;^UTILITY(U,$J,357.6,97,11)
	;;=D TESTSK^PXAPIIB
	;;^UTILITY(U,$J,357.6,97,12)
	;;=SKIN TEST^1^^^^^^
	;;^UTILITY(U,$J,357.6,97,14)
	;;=S Y=$$DSPLYSK^PXAPIIB(Y)
	;;^UTILITY(U,$J,357.6,97,17)
	;;=D SLCTSKN^IBDFN12(.X)
	;;^UTILITY(U,$J,357.6,97,19)
	;;=D ST^IBDFN14(X)
	;;^UTILITY(U,$J,357.6,99,0)
	;;=PX INPUT VITALS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^H
	;;^UTILITY(U,$J,357.6,99,1,0)
	;;=^^1^1^2960307^^^
	;;^UTILITY(U,$J,357.6,99,1,1,0)
	;;=Used for inputting vitals recorded at the visit.
	;;^UTILITY(U,$J,357.6,99,3)
	;;=VITALS
	;;^UTILITY(U,$J,357.6,99,12)
	;;=VITALS^2^^^^^^
	;;^UTILITY(U,$J,357.6,99,13,0)
	;;=^357.613V^16^16
	;;^UTILITY(U,$J,357.6,99,13,1,0)
	;;=7;IBE(359.1,^^0^^^^^^^^
	;;^UTILITY(U,$J,357.6,99,13,2,0)
	;;=15;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,99,13,3,0)
	;;=6;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,99,13,4,0)
	;;=16;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,99,13,5,0)
	;;=19;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,99,13,6,0)
	;;=20;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,99,13,7,0)
	;;=21;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,99,13,8,0)
	;;=22;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,99,13,9,0)
	;;=23;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,99,13,10,0)
	;;=24;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,99,13,11,0)
	;;=25;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,99,13,12,0)
	;;=26;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,99,13,13,0)
	;;=27;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,99,13,14,0)
	;;=28;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,99,13,15,0)
	;;=29;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,99,13,16,0)
	;;=30;IBE(359.1,^^0
	;;^UTILITY(U,$J,357.6,99,18)
	;;=D HNDPR^IBDFDE3(.IBDSEL,.IBDF)
	;;^UTILITY(U,$J,357.6,100,0)
	;;=PX INPUT VISIT CLASSIFICATION^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^MP
	;;^UTILITY(U,$J,357.6,100,1,0)
	;;=^^3^3^2960202^^^
	;;^UTILITY(U,$J,357.6,100,1,1,0)
	;;=Used for inputting visit classifications. Examples classifications are
	;;^UTILITY(U,$J,357.6,100,1,2,0)
	;;=service connected, related to Agent Orange exposure, ionizing
	;;^UTILITY(U,$J,357.6,100,1,3,0)
	;;=radiation exposure, or environmental contaminants exposure. 
	;;^UTILITY(U,$J,357.6,100,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,100,3)
	;;=CLASSIFICATIONS AGENT ORANGE IONIZING RADIATION PERSIAN GULF ENVIRONMENTAL CONTAMINANTS SERVICE CONNECTED
	;;^UTILITY(U,$J,357.6,100,9)
	;;=
	;;^UTILITY(U,$J,357.6,100,10)
	;;=Enter a classification.
	;;^UTILITY(U,$J,357.6,100,12)
	;;=ENCOUNTER
	;;^UTILITY(U,$J,357.6,100,13,0)
	;;=^357.613V^4^4
	;;^UTILITY(U,$J,357.6,100,13,1,0)
	;;=13;IBD(357.98,^^1^^^^^9
	;;^UTILITY(U,$J,357.6,100,13,2,0)
	;;=10;IBD(357.98,^^1^^^^^6
	;;^UTILITY(U,$J,357.6,100,13,3,0)
	;;=11;IBD(357.98,^^1^^^^^7
	;;^UTILITY(U,$J,357.6,100,13,4,0)
	;;=12;IBD(357.98,^^1^^^^^8
	;;^UTILITY(U,$J,357.6,100,17)
	;;=D SLCTCLS^IBDFN12(PI,.X)
	;;^UTILITY(U,$J,357.6,101,0)
	;;=DG APPOINTMENT DISPOSITION^CHECKOUT^IBDFN10^SCHEDULING^^3^4^^1^^^1^^0^1^S
	;;^UTILITY(U,$J,357.6,101,1,0)
	;;=^^2^2^2950922^
	;;^UTILITY(U,$J,357.6,101,1,1,0)
	;;=*** THIS IS NOT CURRENTLY SCANNABLE ***
	;;^UTILITY(U,$J,357.6,101,1,2,0)
	;;=Allows a visit disposition to be choosen for checkout.

IBDIN01M
IBDIN01M	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,101,2)
	;;=CODE^1^^^^^^^^^^^^^^^0^1
	;;^UTILITY(U,$J,357.6,101,3)
	;;=VISIT APPOINTMENT CHECKOUT DISPOSITION ENCOUNTER
	;;^UTILITY(U,$J,357.6,101,15,0)
	;;=^357.615I^1^1
	;;^UTILITY(U,$J,357.6,101,15,1,0)
	;;=APPOINTMENT DISPOSITION^12^2
	;;^UTILITY(U,$J,357.6,101,16)
	;;=n^^^^n
	;;^UTILITY(U,$J,357.6,102,0)
	;;=PX INPUT VISIT TYPE^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
	;;^UTILITY(U,$J,357.6,102,1,0)
	;;=^^1^1^2951101^
	;;^UTILITY(U,$J,357.6,102,1,1,0)
	;;=Used for inputting the visit type that applies to the visit.
	;;^UTILITY(U,$J,357.6,102,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,102,3)
	;;=VISIT TYPE OF VISIT
	;;^UTILITY(U,$J,357.6,102,9)
	;;=D INPUTCPT^IBDFN8(.X)
	;;^UTILITY(U,$J,357.6,102,10)
	;;=Enter an active Visit Type code.
	;;^UTILITY(U,$J,357.6,102,11)
	;;=D TESTVST^IBDFN7
	;;^UTILITY(U,$J,357.6,102,12)
	;;=ENCOUNTER^5
	;;^UTILITY(U,$J,357.6,102,14)
	;;=S Y=$$DSPLYCPT^IBDFN9(X)
	;;^UTILITY(U,$J,357.6,102,17)
	;;=D SLCTVST^IBDFN12(.X)
	;;^UTILITY(U,$J,357.6,102,19)
	;;=D VST^IBDFN14(X)
	;;^UTILITY(U,$J,357.6,103,0)
	;;=GMP INPUT CLINIC COMMON PROBLEMS^^^PROBLEM LIST^^1^^^1^^^1^^^^SM
	;;^UTILITY(U,$J,357.6,103,1,0)
	;;=^^3^3^2951206^
	;;^UTILITY(U,$J,357.6,103,1,1,0)
	;;=Input interface allows inputting into DHCP of selections based on
	;;^UTILITY(U,$J,357.6,103,1,2,0)
	;;=the clinical lexicon.  Data passes to PCE with associated qualifiers
	;;^UTILITY(U,$J,357.6,103,1,3,0)
	;;=for adding to problem list, etc.
	;;^UTILITY(U,$J,357.6,103,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,357.6,103,10)
	;;=Enter an active clincical lexicon term.
	;;^UTILITY(U,$J,357.6,103,12)
	;;=DIAGNOSIS/PROBLEM^3^13^14^2
	;;^UTILITY(U,$J,357.6,103,13,0)
	;;=^357.613V^9^9
	;;^UTILITY(U,$J,357.6,103,13,1,0)
	;;=2;IBD(357.98,^^1^^^^^2
	;;^UTILITY(U,$J,357.6,103,13,2,0)
	;;=3;IBD(357.98,^^1^^^^^2
	;;^UTILITY(U,$J,357.6,103,13,3,0)
	;;=10;IBD(357.98,^^1^^^^^9
	;;^UTILITY(U,$J,357.6,103,13,4,0)
	;;=11;IBD(357.98,^^1^^^^^10
	;;^UTILITY(U,$J,357.6,103,13,5,0)
	;;=12;IBD(357.98,^^1^^^^^11
	;;^UTILITY(U,$J,357.6,103,13,6,0)
	;;=13;IBD(357.98,^^1^^^^^12
	;;^UTILITY(U,$J,357.6,103,13,7,0)
	;;=9;IBD(357.98,^^1^^^^^5
	;;^UTILITY(U,$J,357.6,103,13,8,0)
	;;=6;IBD(357.98,^^1^^^^^6
	;;^UTILITY(U,$J,357.6,103,13,9,0)
	;;=7;IBD(357.98,^^1^^^^^6

IBDIN01N
IBDIN01N	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.69)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.69,0,"GL")
	;;=^IBE(357.69,
	;;^DIC("B","TYPE OF VISIT",357.69)
	;;=
	;;^DIC(357.69,"%D",0)
	;;=^^3^3^2951019^
	;;^DIC(357.69,"%D",1,0)
	;;=This file contains the Evaluation and Management codes. They consist
	;;^DIC(357.69,"%D",2,0)
	;;=of a subset of CPT codes used to describe the level of care for an
	;;^DIC(357.69,"%D",3,0)
	;;=outpatient visit.
	;;^DD(357.69,0)
	;;=FIELD^^.04^5
	;;^DD(357.69,0,"DT")
	;;=2941026
	;;^DD(357.69,0,"ID",.02)
	;;=
	;;^DD(357.69,0,"ID",.03)
	;;=
	;;^DD(357.69,0,"ID","WRITE")
	;;=W "    ",$P(^(0),U,3)
	;;^DD(357.69,0,"IX","B",357.69,.01)
	;;=
	;;^DD(357.69,0,"NM","TYPE OF VISIT")
	;;=
	;;^DD(357.69,0,"PT",9000010,.17)
	;;=
	;;^DD(357.69,.01,0)
	;;=CODE^R*P81'X^ICPT(^0;1^S DIC("S")="I '$P(^(0),U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X S:$D(X) DINUM=X
	;;^DD(357.69,.01,1,0)
	;;=^.1
	;;^DD(357.69,.01,1,1,0)
	;;=357.69^B
	;;^DD(357.69,.01,1,1,1)
	;;=S ^IBE(357.69,"B",$E(X,1,30),DA)=""
	;;^DD(357.69,.01,1,1,2)
	;;=K ^IBE(357.69,"B",$E(X,1,30),DA)
	;;^DD(357.69,.01,3)
	;;=Enter the name of the code
	;;^DD(357.69,.01,12)
	;;=Only Active Evaluation and Management CPT codes between 99200 and 99499 are selectable.
	;;^DD(357.69,.01,12.1)
	;;=S DIC("S")="I '$P(^(0),U,4)"
	;;^DD(357.69,.01,21,0)
	;;=^^2^2^2950328^^
	;;^DD(357.69,.01,21,1,0)
	;;=Enter the Type of Visit CPT code.  These currently all begin with 992.
	;;^DD(357.69,.01,21,2,0)
	;;=This is sometimes refered to as the Level of Care CPT.
	;;^DD(357.69,.01,"DT")
	;;=2950629
	;;^DD(357.69,.015,0)
	;;=SHORT NAME^CJ30^^ ; ^X ^DD(357.69,.015,9.2) S Y(357.69,.015,101)=$S($D(^ICPT(D0,0)):^(0),1:"") S X=$P(Y(357.69,.015,101),U,2) S D0=Y(357.69,.015,80)
	;;^DD(357.69,.015,9)
	;;=^
	;;^DD(357.69,.015,9.01)
	;;=81^2;357.69^.01
	;;^DD(357.69,.015,9.1)
	;;=CODE:SHORT NAME
	;;^DD(357.69,.015,9.2)
	;;=S Y(357.69,.015,80)=$S($D(D0):D0,1:""),Y(357.69,.015,1)=$S($D(^IBE(357.69,D0,0)):^(0),1:""),D0=$P(Y(357.69,.015,1),U,1) S:'$D(^ICPT(+D0,0)) D0=-1
	;;^DD(357.69,.015,21,0)
	;;=^^1^1^2941014^
	;;^DD(357.69,.015,21,1,0)
	;;=This field displays the SHORT NAME of the Visit CPT stored in the CPT file.
	;;^DD(357.69,.02,0)
	;;=RECOMMENDED HEADER^F^^0;2^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.69,.02,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.69,.02,21,0)
	;;=^^1^1^2950721^
	;;^DD(357.69,.02,21,1,0)
	;;=The header recommended for use when designing a form.
	;;^DD(357.69,.02,"DT")
	;;=2941014
	;;^DD(357.69,.03,0)
	;;=RECOMMENDED TEXT^F^^0;3^K:$L(X)>40!($L(X)<3) X
	;;^DD(357.69,.03,3)
	;;=Answer must be 3-40 characters in length.
	;;^DD(357.69,.03,21,0)
	;;=^^1^1^2950721^
	;;^DD(357.69,.03,21,1,0)
	;;=The text that is recommended for use on a form when using this code.
	;;^DD(357.69,.03,"DT")
	;;=2941014
	;;^DD(357.69,.04,0)
	;;=INACTIVE FLAG^S^1:YES;^0;4^Q
	;;^DD(357.69,.04,3)
	;;=Set this flag when the code should no longer be used for type of visit.
	;;^DD(357.69,.04,21,0)
	;;=^^2^2^2950721^
	;;^DD(357.69,.04,21,1,0)
	;;=This field should be set to '1' when the code should no longer be used.
	;;^DD(357.69,.04,21,2,0)
	;;=Codes should not be deleted from this file.
	;;^DD(357.69,.04,"DT")
	;;=2941026

IBDIN01O
IBDIN01O	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.69)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.69)
	;;=^IBE(357.69,
	;;^UTILITY(U,$J,357.69,0)
	;;=TYPE OF VISIT^357.69IP^77432^147
	;;^UTILITY(U,$J,357.69,77419,0)
	;;=77419^Radiation Therapy^Weekly Radiation Therapy
	;;^UTILITY(U,$J,357.69,77420,0)
	;;=77420^Radiation Therapy^Weekly Radiation Therapy
	;;^UTILITY(U,$J,357.69,77425,0)
	;;=77425^Radiation Therapy^Weekly Radiation Therapy
	;;^UTILITY(U,$J,357.69,77430,0)
	;;=77430^Radiation Therapy^Weekly Radiation Therapy
	;;^UTILITY(U,$J,357.69,77431,0)
	;;=77431^Radiation Therapy^Radiation Therapy Management
	;;^UTILITY(U,$J,357.69,77432,0)
	;;=77432^Radiation Therapy^Stereotactic Radiation Trmt
	;;^UTILITY(U,$J,357.69,90801,0)
	;;=90801^Psychiatry^Interview
	;;^UTILITY(U,$J,357.69,90820,0)
	;;=90820^Psychiatry^Diagnostic Interview
	;;^UTILITY(U,$J,357.69,90825,0)
	;;=90825^Psychiatry^Evaluation of Test/Records
	;;^UTILITY(U,$J,357.69,90830,0)
	;;=90830^Psychiatry^Psychological Testing
	;;^UTILITY(U,$J,357.69,90835,0)
	;;=90835^Psychiatry^Special Interview
	;;^UTILITY(U,$J,357.69,90841,0)
	;;=90841^Psychiatry^Psychotherapy
	;;^UTILITY(U,$J,357.69,90842,0)
	;;=90842^Psychiatry^Psychotherapy, 75-80 Min
	;;^UTILITY(U,$J,357.69,90843,0)
	;;=90843^Psychiatry^Psychotherapy, 20-30 Min
	;;^UTILITY(U,$J,357.69,90844,0)
	;;=90844^Psychiatry^Psychotherapy, 45-50 Min
	;;^UTILITY(U,$J,357.69,90845,0)
	;;=90845^Psychiatry^Medical Psychoanalysis
	;;^UTILITY(U,$J,357.69,90847,0)
	;;=90847^Psychiatry^Special Family Therapy
	;;^UTILITY(U,$J,357.69,90849,0)
	;;=90849^Psychiatry^Special Family Therapy
	;;^UTILITY(U,$J,357.69,90853,0)
	;;=90853^Psychiatry^Special Group Therapy
	;;^UTILITY(U,$J,357.69,90855,0)
	;;=90855^Psychiatry^Individaul Pshycotherapy
	;;^UTILITY(U,$J,357.69,90857,0)
	;;=90857^Psychiatry^Special Group Therapy
	;;^UTILITY(U,$J,357.69,90862,0)
	;;=90862^Psychiatry^Medication Management
	;;^UTILITY(U,$J,357.69,92002,0)
	;;=92002^Eye^Eye Exam, New Patient
	;;^UTILITY(U,$J,357.69,92004,0)
	;;=92004^Eye^Eye Exam, New Patient
	;;^UTILITY(U,$J,357.69,92012,0)
	;;=92012^Eye^Eye Exam, Established Patient
	;;^UTILITY(U,$J,357.69,92014,0)
	;;=92014^Eye^Eye Exam, Established Patient
	;;^UTILITY(U,$J,357.69,97700,0)
	;;=97700^Rehab^Training Checkout
	;;^UTILITY(U,$J,357.69,97701,0)
	;;=97701^Rehab^Supplemental Checkout
	;;^UTILITY(U,$J,357.69,99024,0)
	;;=99024^Post-op^Post-Op Follow-up Visit
	;;^UTILITY(U,$J,357.69,99025,0)
	;;=99025^Other^Inital Surgical Evaluation
	;;^UTILITY(U,$J,357.69,99050,0)
	;;=99050^Post-Op^Post-Op Follow-up Visit
	;;^UTILITY(U,$J,357.69,99052,0)
	;;=99052^Other^Medical Services at Night
	;;^UTILITY(U,$J,357.69,99054,0)
	;;=99054^Other^Medical Services, Unusual Hours
	;;^UTILITY(U,$J,357.69,99056,0)
	;;=99056^Other^Non-Office Medical Services
	;;^UTILITY(U,$J,357.69,99058,0)
	;;=99058^Other^Office Emergency Care
	;;^UTILITY(U,$J,357.69,99201,0)
	;;=99201^NEW PATIENT^Brief Exam         (1-15 Min)
	;;^UTILITY(U,$J,357.69,99202,0)
	;;=99202^NEW PATIENT^Limited Exam       (16-25 Min)
	;;^UTILITY(U,$J,357.69,99203,0)
	;;=99203^NEW PATIENT^Intermediate Exam  (26-35 Min)
	;;^UTILITY(U,$J,357.69,99204,0)
	;;=99204^NEW PATIENT^Extended Exam      (36-50 Min)
	;;^UTILITY(U,$J,357.69,99205,0)
	;;=99205^NEW PATIENT^Comprehensive Exam (51-60+ Min)
	;;^UTILITY(U,$J,357.69,99211,0)
	;;=99211^ESTABLISHED PATIENT^Brief Exam         (1-5 Min)
	;;^UTILITY(U,$J,357.69,99212,0)
	;;=99212^ESTABLISHED PATIENT^Limited Exam       (6-10 Min)
	;;^UTILITY(U,$J,357.69,99213,0)
	;;=99213^ESTABLISHED PATIENT^Intermediate Exam  (11-19 Min)
	;;^UTILITY(U,$J,357.69,99214,0)
	;;=99214^ESTABLISHED PATIENT^Extended Exam      (20-30 Min)
	;;^UTILITY(U,$J,357.69,99215,0)
	;;=99215^ESTABLISHED PATIENT^Comprehensive Exam (31-40+ Min)
	;;^UTILITY(U,$J,357.69,99217,0)
	;;=99217^Observation Care^Discharge Day Mgmt.
	;;^UTILITY(U,$J,357.69,99218,0)
	;;=99218^Observation Care^w/History & Exam, Low Severity
	;;^UTILITY(U,$J,357.69,99219,0)
	;;=99219^Observation Care^w/History and Exam, Moderate Severity
	;;^UTILITY(U,$J,357.69,99220,0)
	;;=99220^Observation Care^w/History and Exam, High Severity^1
	;;^UTILITY(U,$J,357.69,99221,0)
	;;=99221^Hospital Admission^Brief Admission Care   (1-30 Min)
	;;^UTILITY(U,$J,357.69,99222,0)
	;;=99222^Hospital Admission^Intermediate Admit Care   (31-50 Min)
	;;^UTILITY(U,$J,357.69,99223,0)
	;;=99223^Hospital Admission^Comprehensive Admit Care  (51-70 Min)
	;;^UTILITY(U,$J,357.69,99231,0)
	;;=99231^Subsequent Hospital Care^Brief Hosp. Care      (1-15 Min)
	;;^UTILITY(U,$J,357.69,99232,0)
	;;=99232^Subsequent Hospital Care^Intermediate Hosp. Care  (16-25 Min)^1

IBDIN01P
IBDIN01P	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.69)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.69,99233,0)
	;;=99233^Subsequent Hospital Care^Comprehensive Hosp. Care  (26-35 Min)
	;;^UTILITY(U,$J,357.69,99238,0)
	;;=99238^Hospital Discharge^Discharge Day Mgmt.
	;;^UTILITY(U,$J,357.69,99241,0)
	;;=99241^CONSULT^Brief Exam         (1-20 Min)
	;;^UTILITY(U,$J,357.69,99242,0)
	;;=99242^CONSULT^Limited Exam       (21-35 Min)
	;;^UTILITY(U,$J,357.69,99243,0)
	;;=99243^CONSULT^Intermediate Exam  (36-50 Min)
	;;^UTILITY(U,$J,357.69,99244,0)
	;;=99244^CONSULT^Extended Exam      (51-60 Min)
	;;^UTILITY(U,$J,357.69,99245,0)
	;;=99245^CONSULT^Comprehensive Exam (71-80+ Min)
	;;^UTILITY(U,$J,357.69,99251,0)
	;;=99251^Initial Inpatient Consult^Brief Exam    (1-20 Min)
	;;^UTILITY(U,$J,357.69,99252,0)
	;;=99252^Initial Inpatient Consult^Limited Exam  (21-40 Min)
	;;^UTILITY(U,$J,357.69,99253,0)
	;;=99253^Initial Inpatient Consult^Intermediate Exam (41-55 Min)
	;;^UTILITY(U,$J,357.69,99254,0)
	;;=99254^Initial Inpatient Consult^Extended Exam (56-80 Min)
	;;^UTILITY(U,$J,357.69,99255,0)
	;;=99255^Initial Inpatient Consult^Comprehensive Exam (81-110 Min)
	;;^UTILITY(U,$J,357.69,99261,0)
	;;=99261^Follow-up Inpatient Consult^Brief Consult   (1-10 Min)
	;;^UTILITY(U,$J,357.69,99262,0)
	;;=99262^Follow-up Inpatient Consult^Intermediate Consult   (11-20 Min)
	;;^UTILITY(U,$J,357.69,99263,0)
	;;=99263^Follow-up Inpatient Consult^Comprehensive Consult   (21-30 Min)
	;;^UTILITY(U,$J,357.69,99271,0)
	;;=99271^Confirmatory Consultation^Minor Problems
	;;^UTILITY(U,$J,357.69,99272,0)
	;;=99272^Confirmatory Consultation^Low Severity Problem
	;;^UTILITY(U,$J,357.69,99273,0)
	;;=99273^Confirmatory Consultation^Moderate Severity Problem
	;;^UTILITY(U,$J,357.69,99274,0)
	;;=99274^Confirmatory Consultation^Moderate to High Severity Problem
	;;^UTILITY(U,$J,357.69,99275,0)
	;;=99275^Confirmatoy Consultation^High Severity Problem
	;;^UTILITY(U,$J,357.69,99281,0)
	;;=99281^Emergency Room Visit^Brief Exam
	;;^UTILITY(U,$J,357.69,99282,0)
	;;=99282^Emergency Room Visit^Limited Exam
	;;^UTILITY(U,$J,357.69,99283,0)
	;;=99283^Emergency Room Visit^Intermediate Exam
	;;^UTILITY(U,$J,357.69,99284,0)
	;;=99284^Emergency Room Visit^Extended Exam
	;;^UTILITY(U,$J,357.69,99285,0)
	;;=99285^Emergency Room Visit^Comprehensive Exam
	;;^UTILITY(U,$J,357.69,99288,0)
	;;=99288^Emergency Room Visit^Advanced Life Support
	;;^UTILITY(U,$J,357.69,99291,0)
	;;=99291^Critical Care^First Hour
	;;^UTILITY(U,$J,357.69,99292,0)
	;;=99292^Critical Care^Each Additional 30 Min.
	;;^UTILITY(U,$J,357.69,99295,0)
	;;=99295^Neonatal Critical Care^Admission Care
	;;^UTILITY(U,$J,357.69,99296,0)
	;;=99296^NeoNatal Critical Care^Unstable Daily Care
	;;^UTILITY(U,$J,357.69,99297,0)
	;;=99297^Neonatal Critical Care^Stable Daily Care
	;;^UTILITY(U,$J,357.69,99301,0)
	;;=99301^Nursing Home Assessment^Brief Exam    (1-30 Min)
	;;^UTILITY(U,$J,357.69,99302,0)
	;;=99302^Nursing Home Assessment^Intermediate Exam  (31-40 Min)
	;;^UTILITY(U,$J,357.69,99303,0)
	;;=99303^Nursing Home Assessment^Comprehensive Exam  (41-50 Min)
	;;^UTILITY(U,$J,357.69,99311,0)
	;;=99311^Follow-up Nursing Home Care^Brief Exam    (1-15 Min)
	;;^UTILITY(U,$J,357.69,99312,0)
	;;=99312^Follow-up Nursing Home Care^Intermediate Exam   (16-25 Min)
	;;^UTILITY(U,$J,357.69,99313,0)
	;;=99313^Follow-up Nursing Home Care^Comprehensive Exam  (26-35 Min)
	;;^UTILITY(U,$J,357.69,99321,0)
	;;=99321^Domiciliary Care, New Patient^Brief Exam
	;;^UTILITY(U,$J,357.69,99322,0)
	;;=99322^Domiciliary Care, New Patient^Intermediate Exam
	;;^UTILITY(U,$J,357.69,99323,0)
	;;=99323^Domiciliary Care, New Patient^Comprehensive Exam
	;;^UTILITY(U,$J,357.69,99331,0)
	;;=99331^Dom Care, Established Patient^Brief Exam
	;;^UTILITY(U,$J,357.69,99332,0)
	;;=99332^Dom Care, Established Patient^Intermediate Exam
	;;^UTILITY(U,$J,357.69,99333,0)
	;;=99333^Dom Care, Established Patient^Comprehensive Exam
	;;^UTILITY(U,$J,357.69,99341,0)
	;;=99341^Home Visit, New Patient^Low Severity Problem
	;;^UTILITY(U,$J,357.69,99342,0)
	;;=99342^Home Visit, New Patient^Moderate Severity Problem
	;;^UTILITY(U,$J,357.69,99343,0)
	;;=99343^Home Visit, New Patient^High Severity Problem
	;;^UTILITY(U,$J,357.69,99351,0)
	;;=99351^Home Visit, Estab. Patient^Stable or Recovering
	;;^UTILITY(U,$J,357.69,99352,0)
	;;=99352^Home Visit, Estab. Patient^Minor Complications
	;;^UTILITY(U,$J,357.69,99353,0)
	;;=99353^Home Visit, Estab. Patient^Significant Complication or New Problem
	;;^UTILITY(U,$J,357.69,99354,0)
	;;=99354^Prolonged Office Visit^First Hour
	;;^UTILITY(U,$J,357.69,99355,0)
	;;=99355^Prolonged Office Visit^Additional 30 Min

IBDIN01Q
IBDIN01Q	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.69)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.69,99356,0)
	;;=99356^Prolonged Inpatient Visit^First Hour
	;;^UTILITY(U,$J,357.69,99357,0)
	;;=99357^Prolonged Inpatient Visit^Additional 30 Min
	;;^UTILITY(U,$J,357.69,99358,0)
	;;=99358^Prolonged Service w/o Contact^First Hour
	;;^UTILITY(U,$J,357.69,99359,0)
	;;=99359^Prolonged Service w/o Contact^Additional 30 Min
	;;^UTILITY(U,$J,357.69,99360,0)
	;;=99360^Physician Standby Services^Each 30 Min.
	;;^UTILITY(U,$J,357.69,99361,0)
	;;=99361^Case Management Conferences^30 Minutes
	;;^UTILITY(U,$J,357.69,99362,0)
	;;=99362^Case Management Conferences^60 minutes
	;;^UTILITY(U,$J,357.69,99371,0)
	;;=99371^Telephone Consult^Brief Call
	;;^UTILITY(U,$J,357.69,99372,0)
	;;=99372^Telephone Consult^Intermediate Call
	;;^UTILITY(U,$J,357.69,99373,0)
	;;=99373^Telephone Consult^Complex or lenghty Call
	;;^UTILITY(U,$J,357.69,99375,0)
	;;=99375^Care Plan Oversight^30-60 minutes
	;;^UTILITY(U,$J,357.69,99376,0)
	;;=99376^Care Plan OVersight^Over 60 minutes
	;;^UTILITY(U,$J,357.69,99381,0)
	;;=99381^Preventive Care, New Patient^Infant Under 1 year
	;;^UTILITY(U,$J,357.69,99382,0)
	;;=99382^Preventive Care, New Patient^Age 1-4
	;;^UTILITY(U,$J,357.69,99383,0)
	;;=99383^Preventive Care, New Patient^Age 5-11
	;;^UTILITY(U,$J,357.69,99384,0)
	;;=99384^Preventive Care, New Patient^Age 12-17
	;;^UTILITY(U,$J,357.69,99385,0)
	;;=99385^Preventive Care, New Patient^Age 18-39
	;;^UTILITY(U,$J,357.69,99386,0)
	;;=99386^Preventive Care, New Patient^Age 40-64
	;;^UTILITY(U,$J,357.69,99387,0)
	;;=99387^Preventive Care, New Patient^Age 65 and over
	;;^UTILITY(U,$J,357.69,99391,0)
	;;=99391^Preventive Visit, Est. Patient^Infant Under 1 year
	;;^UTILITY(U,$J,357.69,99392,0)
	;;=99392^Preventive Visit, Est. Patient^Age 1-4
	;;^UTILITY(U,$J,357.69,99393,0)
	;;=99393^Preventive Visit, Est. Patient^Age 5-11
	;;^UTILITY(U,$J,357.69,99394,0)
	;;=99394^Preventive Visit, Est. Patient^Age 12-17
	;;^UTILITY(U,$J,357.69,99395,0)
	;;=99395^Preventive Visit, Est. Patient^Age 18-39
	;;^UTILITY(U,$J,357.69,99396,0)
	;;=99396^Preventive Visit, Est. Patient^Age 40-64
	;;^UTILITY(U,$J,357.69,99397,0)
	;;=99397^Preventive Visit, Est. Patient^Age 65 and over
	;;^UTILITY(U,$J,357.69,99401,0)
	;;=99401^Individual Preventive Counsel^Brief  (15 min)
	;;^UTILITY(U,$J,357.69,99402,0)
	;;=99402^Individual Preventive Counsel^Intermediate  (30 Min)
	;;^UTILITY(U,$J,357.69,99403,0)
	;;=99403^Individual Preventive Counsel^Extended (45 Min)
	;;^UTILITY(U,$J,357.69,99404,0)
	;;=99404^Individual Preventive Counsel^Comprehensive (60 Min)
	;;^UTILITY(U,$J,357.69,99411,0)
	;;=99411^Group Preventive Counseling^Brief   (30 Min)
	;;^UTILITY(U,$J,357.69,99412,0)
	;;=99412^Group Preventive Counseling^Intermediate  (60 Min)
	;;^UTILITY(U,$J,357.69,99420,0)
	;;=99420^Health Risk Assessment^Health Risk Assessment
	;;^UTILITY(U,$J,357.69,99429,0)
	;;=99429^Unlisted Services^Preventive Medicine
	;;^UTILITY(U,$J,357.69,99431,0)
	;;=99431^Newborn Care^Initial Care
	;;^UTILITY(U,$J,357.69,99432,0)
	;;=99432^Newborn Care^Office Visit
	;;^UTILITY(U,$J,357.69,99433,0)
	;;=99433^Newborn Care^Hospital Care
	;;^UTILITY(U,$J,357.69,99440,0)
	;;=99440^Newborn Care^Resuscitation
	;;^UTILITY(U,$J,357.69,99450,0)
	;;=99450^Life/Health Insurance Exam^Life/Health Insurance Exam
	;;^UTILITY(U,$J,357.69,99455,0)
	;;=99455^Disability Exam^By treating physician
	;;^UTILITY(U,$J,357.69,99456,0)
	;;=99456^Disability Exam^By other than treating physician
	;;^UTILITY(U,$J,357.69,99499,0)
	;;=99499^Unlisted Services^Evaluation and Management

IBDIN01R
IBDIN01R	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.7,0,"GL")
	;;=^IBE(357.7,
	;;^DIC("B","FORM LINE",357.7)
	;;=
	;;^DIC(357.7,"%D",0)
	;;=^^1^1^2931214^^
	;;^DIC(357.7,"%D",1,0)
	;;=Either a horizontal or vertical line appearing on the form.
	;;^DD(357.7,0)
	;;=FIELD^^.08^8
	;;^DD(357.7,0,"DT")
	;;=2941207
	;;^DD(357.7,0,"ID",.02)
	;;=W " STARTING COL=",$P(^(0),U,2)+1
	;;^DD(357.7,0,"ID",.03)
	;;=W " STARTING ROW=",$P(^(0),U,3)+1
	;;^DD(357.7,0,"ID",.06)
	;;=W ""
	;;^DD(357.7,0,"IX","B",357.7,.01)
	;;=
	;;^DD(357.7,0,"IX","C",357.7,.06)
	;;=
	;;^DD(357.7,0,"NM","FORM LINE")
	;;=
	;;^DD(357.7,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.7,.01,1,0)
	;;=^.1
	;;^DD(357.7,.01,1,1,0)
	;;=357.7^B
	;;^DD(357.7,.01,1,1,1)
	;;=S ^IBE(357.7,"B",$E(X,1,30),DA)=""
	;;^DD(357.7,.01,1,1,2)
	;;=K ^IBE(357.7,"B",$E(X,1,30),DA)
	;;^DD(357.7,.01,3)
	;;=Enter a name for the line that will allow it to be identified, such as V(1,1), meaning a vertical line starting at coordinates (1,1).
	;;^DD(357.7,.01,21,0)
	;;=^^4^4^2940217^
	;;^DD(357.7,.01,21,1,0)
	;;= 
	;;^DD(357.7,.01,21,2,0)
	;;=The name given to the line. Lines should be given names that will allow
	;;^DD(357.7,.01,21,3,0)
	;;=them to be identified, such as V(1,1), meaning a vertical line starting at
	;;^DD(357.7,.01,21,4,0)
	;;=coordinates (1,1).
	;;^DD(357.7,.01,"DT")
	;;=2940217
	;;^DD(357.7,.02,0)
	;;=LINE STARTING COLUMN^RNJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.7,.02,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(357.7,.02,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(357.7,.02,3)
	;;=Enter the block column the line should begin at.
	;;^DD(357.7,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.7,.02,21,1,0)
	;;= 
	;;^DD(357.7,.02,21,2,0)
	;;=The column, relative to the block, that the line should begin at.
	;;^DD(357.7,.02,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.7,.02,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.7,.02,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.7,.02,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.7,.02,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.7,.02,"DT")
	;;=2930715
	;;^DD(357.7,.03,0)
	;;=LINE STARTING ROW^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.7,.03,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(357.7,.03,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(357.7,.03,3)
	;;=Enter the block row the line should begin at.
	;;^DD(357.7,.03,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.7,.03,21,1,0)
	;;= 
	;;^DD(357.7,.03,21,2,0)
	;;=The row, relative to the block, that the line should begin at.
	;;^DD(357.7,.03,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.7,.03,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.7,.03,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.7,.03,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.7,.03,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.7,.03,"DT")
	;;=2930715
	;;^DD(357.7,.04,0)
	;;=ORIENTATION^RS^H:HORIZONTAL;V:VERTICAL;^0;4^Q
	;;^DD(357.7,.04,.1)
	;;=ORIENTATION (HORIZONTAL/VERTICAL)
	;;^DD(357.7,.04,3)
	;;=Should the line be horizontal or vertical?
	;;^DD(357.7,.04,21,0)
	;;=^^2^2^2930607^
	;;^DD(357.7,.04,21,1,0)
	;;= 
	;;^DD(357.7,.04,21,2,0)
	;;=The direction the line goes in.
	;;^DD(357.7,.04,"DT")
	;;=2930415
	;;^DD(357.7,.05,0)
	;;=LENGTH^RNJ3,0^^0;5^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.7,.05,3)
	;;=How long should the line be?
	;;^DD(357.7,.05,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.7,.05,21,1,0)
	;;= 
	;;^DD(357.7,.05,21,2,0)
	;;=The length of the line. For horizontal lines the length is in terms of
	;;^DD(357.7,.05,21,3,0)
	;;=characters. For vertical lines it is in terms of rows.
	;;^DD(357.7,.05,"DT")
	;;=2930319
	;;^DD(357.7,.06,0)
	;;=BLOCK^RP357.1'^IBE(357.1,^0;6^Q
	;;^DD(357.7,.06,1,0)
	;;=^.1
	;;^DD(357.7,.06,1,1,0)
	;;=357.7^C
	;;^DD(357.7,.06,1,1,1)
	;;=S ^IBE(357.7,"C",$E(X,1,30),DA)=""
	;;^DD(357.7,.06,1,1,2)
	;;=K ^IBE(357.7,"C",$E(X,1,30),DA)
	;;^DD(357.7,.06,1,1,"%D",0)
	;;=^^2^2^2930319^
	;;^DD(357.7,.06,1,1,"%D",1,0)
	;;= 
	;;^DD(357.7,.06,1,1,"%D",2,0)
	;;=This cross-reference is used to find all lines belonging to a block.
	;;^DD(357.7,.06,1,1,"DT")
	;;=2930319
	;;^DD(357.7,.06,3)
	;;=What block should the line appear in?
	;;^DD(357.7,.06,4)
	;;=
	;;^DD(357.7,.06,21,0)
	;;=^^2^2^2950927^^^^
	;;^DD(357.7,.06,21,1,0)
	;;= 
	;;^DD(357.7,.06,21,2,0)
	;;=The block the line appears in.

IBDIN01S
IBDIN01S	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.7,.06,"DT")
	;;=2930319
	;;^DD(357.7,.07,0)
	;;=NUMBER OF LINES^NJ3,0^^0;7^K:+X'=X!(X>100)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.7,.07,3)
	;;=Type a Number between 1 and 100, 0 Decimal Digits
	;;^DD(357.7,.07,"DT")
	;;=2941207
	;;^DD(357.7,.08,0)
	;;=LINE SPACING^S^s:SINGLE;d:DOUBLE;t:TRIPLE;^0;8^Q
	;;^DD(357.7,.08,3)
	;;=How should the lines be spaced?
	;;^DD(357.7,.08,"DT")
	;;=2941207

IBDIN01T
IBDIN01T	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.8,0,"GL")
	;;=^IBE(357.8,
	;;^DIC("B","TEXT AREA",357.8)
	;;=
	;;^DIC(357.8,"%D",0)
	;;=^^3^3^2931214^^
	;;^DIC(357.8,"%D",1,0)
	;;= 
	;;^DIC(357.8,"%D",2,0)
	;;=A TEXT AREA rectangular area on the form that displays a word processing
	;;^DIC(357.8,"%D",3,0)
	;;=field. The text is automatically formatted to fit within the area.
	;;^DD(357.8,0)
	;;=FIELD^^1^7
	;;^DD(357.8,0,"DDA")
	;;=N
	;;^DD(357.8,0,"DT")
	;;=2930326
	;;^DD(357.8,0,"IX","B",357.8,.01)
	;;=
	;;^DD(357.8,0,"IX","C",357.8,.02)
	;;=
	;;^DD(357.8,0,"NM","TEXT AREA")
	;;=
	;;^DD(357.8,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.8,.01,1,0)
	;;=^.1
	;;^DD(357.8,.01,1,1,0)
	;;=357.8^B
	;;^DD(357.8,.01,1,1,1)
	;;=S ^IBE(357.8,"B",$E(X,1,30),DA)=""
	;;^DD(357.8,.01,1,1,2)
	;;=K ^IBE(357.8,"B",$E(X,1,30),DA)
	;;^DD(357.8,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(357.8,.01,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.8,.01,21,1,0)
	;;= 
	;;^DD(357.8,.01,21,2,0)
	;;=The name of the text area.
	;;^DD(357.8,.02,0)
	;;=BLOCK^RP357.1'^IBE(357.1,^0;2^Q
	;;^DD(357.8,.02,1,0)
	;;=^.1
	;;^DD(357.8,.02,1,1,0)
	;;=357.8^C
	;;^DD(357.8,.02,1,1,1)
	;;=S ^IBE(357.8,"C",$E(X,1,30),DA)=""
	;;^DD(357.8,.02,1,1,2)
	;;=K ^IBE(357.8,"C",$E(X,1,30),DA)
	;;^DD(357.8,.02,1,1,"%D",0)
	;;=^^3^3^2930326^
	;;^DD(357.8,.02,1,1,"%D",1,0)
	;;= 
	;;^DD(357.8,.02,1,1,"%D",2,0)
	;;=Used to find all of the text areas that should appear on a particular
	;;^DD(357.8,.02,1,1,"%D",3,0)
	;;=block.
	;;^DD(357.8,.02,1,1,"DT")
	;;=2930326
	;;^DD(357.8,.02,3)
	;;=What block do you want the text to appear in?
	;;^DD(357.8,.02,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.8,.02,21,1,0)
	;;= 
	;;^DD(357.8,.02,21,2,0)
	;;=The block the text area is displayed in.
	;;^DD(357.8,.02,"DT")
	;;=2930326
	;;^DD(357.8,.03,0)
	;;=TEXT AREA STARTING COLUMN^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.8,.03,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(357.8,.03,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(357.8,.03,3)
	;;=What block column should the text begin in?
	;;^DD(357.8,.03,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.8,.03,21,1,0)
	;;= 
	;;^DD(357.8,.03,21,2,0)
	;;=The starting position of the text area, relative to the block.
	;;^DD(357.8,.03,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.8,.03,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.8,.03,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.8,.03,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.8,.03,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.8,.03,"DT")
	;;=2930715
	;;^DD(357.8,.04,0)
	;;=TEXT AREA STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.8,.04,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(357.8,.04,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(357.8,.04,3)
	;;=What block row should the text begin in?
	;;^DD(357.8,.04,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.8,.04,21,1,0)
	;;= 
	;;^DD(357.8,.04,21,2,0)
	;;=The starting row of the text area, relative to the block.
	;;^DD(357.8,.04,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.8,.04,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.8,.04,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.8,.04,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.8,.04,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.8,.04,"DT")
	;;=2930715
	;;^DD(357.8,.05,0)
	;;=TEXT WIDTH^RNJ3,0^^0;5^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.8,.05,3)
	;;=How many columns should be allocated on the block for the text?
	;;^DD(357.8,.05,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.8,.05,21,1,0)
	;;= 
	;;^DD(357.8,.05,21,2,0)
	;;=The width of the text area, measured in characters.
	;;^DD(357.8,.05,"DT")
	;;=2930326
	;;^DD(357.8,.06,0)
	;;=TEXT HEIGHT^RNJ3,0^^0;6^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.8,.06,3)
	;;=How many lines on the block should be allocated for the text?
	;;^DD(357.8,.06,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.8,.06,21,1,0)
	;;= 
	;;^DD(357.8,.06,21,2,0)
	;;=The height of the text area, measured in lines.
	;;^DD(357.8,.06,"DT")
	;;=2930326
	;;^DD(357.8,1,0)
	;;=TEXT^357.81^^1;0
	;;^DD(357.8,1,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.8,1,21,1,0)
	;;= 
	;;^DD(357.8,1,21,2,0)
	;;=The text that should appear within the text area.
	;;^DD(357.81,0)
	;;=TEXT SUB-FIELD^^.01^1
	;;^DD(357.81,0,"DT")
	;;=2930326
	;;^DD(357.81,0,"NM","TEXT")
	;;=

IBDIN01U
IBDIN01U	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.81,0,"UP")
	;;=357.8
	;;^DD(357.81,.01,0)
	;;=TEXT^WL^^0;1^Q
	;;^DD(357.81,.01,3)
	;;=Enter the text that you want to appear in the block.
	;;^DD(357.81,.01,"DT")
	;;=2930326

IBDIN01V
IBDIN01V	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.91)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.91,0,"GL")
	;;=^IBE(357.91,
	;;^DIC("B","MARKING AREA TYPE",357.91)
	;;=
	;;^DIC(357.91,"%D",0)
	;;=^^4^4^2931214^^
	;;^DIC(357.91,"%D",1,0)
	;;= 
	;;^DIC(357.91,"%D",2,0)
	;;=This file contains the different types of marking areas that can be
	;;^DIC(357.91,"%D",3,0)
	;;=printed to a form for the user to write in. Examples are  ( ),__, etc.
	;;^DIC(357.91,"%D",4,0)
	;;=These are for the person completing the form to mark to indicate a choice.
	;;^DD(357.91,0)
	;;=FIELD^^.04^4
	;;^DD(357.91,0,"DDA")
	;;=N
	;;^DD(357.91,0,"DT")
	;;=2940607
	;;^DD(357.91,0,"IX","B",357.91,.01)
	;;=
	;;^DD(357.91,0,"NM","MARKING AREA TYPE")
	;;=
	;;^DD(357.91,0,"PT",357.22,.06)
	;;=
	;;^DD(357.91,.01,0)
	;;=NAME^RFX^^0;1^K:$L(X)>30 X
	;;^DD(357.91,.01,1,0)
	;;=^.1
	;;^DD(357.91,.01,1,1,0)
	;;=357.91^B
	;;^DD(357.91,.01,1,1,1)
	;;=S ^IBE(357.91,"B",$E(X,1,30),DA)=""
	;;^DD(357.91,.01,1,1,2)
	;;=K ^IBE(357.91,"B",$E(X,1,30),DA)
	;;^DD(357.91,.01,3)
	;;=NAME MUST BE UNDER 31 CHARACTERS
	;;^DD(357.91,.01,21,0)
	;;=^^1^1^2930608^
	;;^DD(357.91,.01,21,1,0)
	;;=The name should describe the appearance of the marking area on the form.
	;;^DD(357.91,.02,0)
	;;=DISPLAY STRING^F^^0;2^K:$L(X)>20!($L(X)<1) X
	;;^DD(357.91,.02,3)
	;;=Answer must be 1-20 characters in length.
	;;^DD(357.91,.02,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.91,.02,21,1,0)
	;;= 
	;;^DD(357.91,.02,21,2,0)
	;;=The text that should be displayed in the MARKING AREA.
	;;^DD(357.91,.02,"DT")
	;;=2921207
	;;^DD(357.91,.03,0)
	;;=TOOL KIT MEMBER?^S^0:NO;1:YES;^0;3^Q
	;;^DD(357.91,.03,3)
	;;=Enter YES if the MARKING AREA is part of the tool kit, NO otherwise.
	;;^DD(357.91,.03,21,0)
	;;=^^2^2^2930811^
	;;^DD(357.91,.03,21,1,0)
	;;=Used to prevent local sites from editing MARKING AREAS that are part of the
	;;^DD(357.91,.03,21,2,0)
	;;=tool kit.
	;;^DD(357.91,.03,"DT")
	;;=2930811
	;;^DD(357.91,.04,0)
	;;=REQUIRES SPECIAL PROCEDURE?^S^0:NO;1:YES;^0;4^Q
	;;^DD(357.91,.04,3)
	;;=Answer NO if the Marking Area is just text, YES if it requires a special procedure to print.
	;;^DD(357.91,.04,21,0)
	;;=^^2^2^2940628^^
	;;^DD(357.91,.04,21,1,0)
	;;=NO means that the Marking Area is just text that can be printed. YES means
	;;^DD(357.91,.04,21,2,0)
	;;=that a special procedure must be called to print the Marking Area.
	;;^DD(357.91,.04,"DT")
	;;=2940628

IBDIN01W
IBDIN01W	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.91)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.91)
	;;=^IBE(357.91,
	;;^UTILITY(U,$J,357.91,0)
	;;=MARKING AREA TYPE^357.91^16^16
	;;^UTILITY(U,$J,357.91,1,0)
	;;=( )^( )^1^
	;;^UTILITY(U,$J,357.91,2,0)
	;;=_^_^1^
	;;^UTILITY(U,$J,357.91,3,0)
	;;=SPACE^ ^1^
	;;^UTILITY(U,$J,357.91,4,0)
	;;=BLANK^^1^
	;;^UTILITY(U,$J,357.91,5,0)
	;;=TWO SPACES^  ^1^
	;;^UTILITY(U,$J,357.91,6,0)
	;;=__ yes^__ yes^1^
	;;^UTILITY(U,$J,357.91,7,0)
	;;=__ no^__ no^1^
	;;^UTILITY(U,$J,357.91,8,0)
	;;=THREE SPACES^   ^1^
	;;^UTILITY(U,$J,357.91,9,0)
	;;=__^__^1^
	;;^UTILITY(U,$J,357.91,10,0)
	;;=(P) (S)^(P) (S)^1^
	;;^UTILITY(U,$J,357.91,11,0)
	;;=(Y)^(Y)^1^
	;;^UTILITY(U,$J,357.91,12,0)
	;;=(A) (I) (H)^(A) (I) (H)^1^
	;;^UTILITY(U,$J,357.91,13,0)
	;;=5 SPACES^     ^1^
	;;^UTILITY(U,$J,357.91,14,0)
	;;=(A) (I)^(A) (I)^1
	;;^UTILITY(U,$J,357.91,15,0)
	;;=BUBBLE (use for scanning)^[ ]^1^1
	;;^UTILITY(U,$J,357.91,16,0)
	;;=DATE^             ^0

IBDIN01X
IBDIN01X	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.92)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.92,0,"GL")
	;;=^IBE(357.92,
	;;^DIC("B","PRINT CONDITIONS",357.92)
	;;=
	;;^DIC(357.92,"%D",0)
	;;=^^7^7^2951017^
	;;^DIC(357.92,"%D",1,0)
	;;=This file must not be edited!
	;;^DIC(357.92,"%D",2,0)
	;;= 
	;;^DIC(357.92,"%D",3,0)
	;;=A table containing a list of conditions recognized by the print manager.
	;;^DIC(357.92,"%D",4,0)
	;;=They are used to specify the conditions under which reports should be
	;;^DIC(357.92,"%D",5,0)
	;;=printed. The print manager is a program that scans the appointments for
	;;^DIC(357.92,"%D",6,0)
	;;=selected clinics for a selected date, and prints specified reports under
	;;^DIC(357.92,"%D",7,0)
	;;=specified conditions.
	;;^DD(357.92,0)
	;;=FIELD^^.01^1
	;;^DD(357.92,0,"DT")
	;;=2930518
	;;^DD(357.92,0,"IX","B",357.92,.01)
	;;=
	;;^DD(357.92,0,"NM","PRINT CONDITIONS")
	;;=
	;;^DD(357.92,0,"PT",409.9501,.02)
	;;=
	;;^DD(357.92,0,"PT",409.961,.02)
	;;=
	;;^DD(357.92,.01,0)
	;;=PRINT CONDITION^RF^^0;1^K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.92,.01,1,0)
	;;=^.1
	;;^DD(357.92,.01,1,1,0)
	;;=357.92^B
	;;^DD(357.92,.01,1,1,1)
	;;=S ^IBE(357.92,"B",$E(X,1,30),DA)=""
	;;^DD(357.92,.01,1,1,2)
	;;=K ^IBE(357.92,"B",$E(X,1,30),DA)
	;;^DD(357.92,.01,3)
	;;=Answer must be 3-40 characters in length.
	;;^DD(357.92,.01,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.92,.01,21,1,0)
	;;= 
	;;^DD(357.92,.01,21,2,0)
	;;=A condition recognized by the Print Manager.
	;;^DD(357.92,.01,"DT")
	;;=2930518

IBDIN01Y
IBDIN01Y	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.92)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.92)
	;;=^IBE(357.92,
	;;^UTILITY(U,$J,357.92,0)
	;;=PRINT CONDITIONS^357.92^3^3
	;;^UTILITY(U,$J,357.92,1,0)
	;;=FOR EVERY APPOINTMENT
	;;^UTILITY(U,$J,357.92,2,0)
	;;=ONLY FOR EARLIEST APPOINTMENT
	;;^UTILITY(U,$J,357.92,3,0)
	;;=ONLY IF MULTIPLE APPOINTMENTS

IBDIN01Z
IBDIN01Z	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.93)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.93,0,"GL")
	;;=^IBE(357.93,
	;;^DIC("B","MULTIPLE CHOICE FIELD",357.93)
	;;=
	;;^DIC(357.93,"%D",0)
	;;=^^1^1^2951102^^^^
	;;^DIC(357.93,"%D",1,0)
	;;=This file allows multiple choice fields to be defined for forms.
	;;^DD(357.93,0)
	;;=FIELD^^1^9
	;;^DD(357.93,0,"DDA")
	;;=N
	;;^DD(357.93,0,"DT")
	;;=2950822
	;;^DD(357.93,0,"IX","B",357.93,.01)
	;;=
	;;^DD(357.93,0,"IX","C",357.93,.08)
	;;=
	;;^DD(357.93,0,"NM","MULTIPLE CHOICE FIELD")
	;;=
	;;^DD(357.93,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.93,.01,1,0)
	;;=^.1
	;;^DD(357.93,.01,1,1,0)
	;;=357.93^B
	;;^DD(357.93,.01,1,1,1)
	;;=S ^IBE(357.93,"B",$E(X,1,30),DA)=""
	;;^DD(357.93,.01,1,1,2)
	;;=K ^IBE(357.93,"B",$E(X,1,30),DA)
	;;^DD(357.93,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(357.93,.01,21,0)
	;;=^^2^2^2951017^
	;;^DD(357.93,.01,21,1,0)
	;;= 
	;;^DD(357.93,.01,21,2,0)
	;;=The name given to the field.
	;;^DD(357.93,.01,"DT")
	;;=2930518
	;;^DD(357.93,.02,0)
	;;=QUESTION OR EXPLANATION ^F^^0;2^K:$L(X)>150!($L(X)<1) X
	;;^DD(357.93,.02,.1)
	;;=YOU CAN ENTER TEXT, SUCH AS A QUESTION, TO APPEAR ON THE FORM
	;;^DD(357.93,.02,3)
	;;=You may enter text, such as a question, to appear as part of the input field.
	;;^DD(357.93,.02,21,0)
	;;=^^1^1^2950808^
	;;^DD(357.93,.02,21,1,0)
	;;=Text that precedes the list of choices.
	;;^DD(357.93,.02,"DT")
	;;=2940721
	;;^DD(357.93,.03,0)
	;;=STARTING COLUMN FOR TEXT^NJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.93,.03,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(357.93,.03,2.1)
	;;=S Y=+Y+1
	;;^DD(357.93,.03,3)
	;;=What block column should the label begin in?
	;;^DD(357.93,.03,21,0)
	;;=^^1^1^2950808^
	;;^DD(357.93,.03,21,1,0)
	;;=The starting column for the text located in the .03 field.
	;;^DD(357.93,.03,"DT")
	;;=2940721
	;;^DD(357.93,.04,0)
	;;=STARTING ROW FOR TEXT^NJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.93,.04,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(357.93,.04,2.1)
	;;=S Y=+Y+1
	;;^DD(357.93,.04,3)
	;;=What block row should the label start in?
	;;^DD(357.93,.04,21,0)
	;;=^^1^1^2950808^
	;;^DD(357.93,.04,21,1,0)
	;;=The row for the text in the .03 field.
	;;^DD(357.93,.04,"DT")
	;;=2940721
	;;^DD(357.93,.06,0)
	;;=TYPE OF DATA^R*P357.6'X^IBE(357.6,^0;6^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""M""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(357.93,.06,.1)
	;;=WHAT TYPE OF DATA WILL BE ENTERED TO THIS FIELD?
	;;^DD(357.93,.06,3)
	;;=What type of data will be entered to the field?
	;;^DD(357.93,.06,12)
	;;=Allows only available input interfaces that are defined as allowable for multiple choices form objects.
	;;^DD(357.93,.06,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""M"""
	;;^DD(357.93,.06,21,0)
	;;=^^1^1^2950825^
	;;^DD(357.93,.06,21,1,0)
	;;=Points to the package interface used to input the data.
	;;^DD(357.93,.06,"DT")
	;;=2950829
	;;^DD(357.93,.07,0)
	;;=TEXT APPEARANCE^FX^^0;7^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBR"'[$E(X,1))!("UBR"'[$E(X,2))!("UBR"'[$E(X,3)) X
	;;^DD(357.93,.07,.1)
	;;=HOW SHOULD THE TEXT APPEAR? CHOOSE FROM {U,B,R}
	;;^DD(357.93,.07,3)
	;;=B=bold,U=underline,R=reverse You can enter any combination of {B,U,R}.
	;;^DD(357.93,.07,21,0)
	;;=^^2^2^2950808^
	;;^DD(357.93,.07,21,1,0)
	;;=The display appearance of the text in the .03 field can be selected via
	;;^DD(357.93,.07,21,2,0)
	;;=this field.
	;;^DD(357.93,.07,"DT")
	;;=2940816
	;;^DD(357.93,.08,0)
	;;=BLOCK^RP357.1'^IBE(357.1,^0;8^Q
	;;^DD(357.93,.08,1,0)
	;;=^.1
	;;^DD(357.93,.08,1,1,0)
	;;=357.93^C
	;;^DD(357.93,.08,1,1,1)
	;;=S ^IBE(357.93,"C",$E(X,1,30),DA)=""
	;;^DD(357.93,.08,1,1,2)
	;;=K ^IBE(357.93,"C",$E(X,1,30),DA)
	;;^DD(357.93,.08,1,1,"%D",0)
	;;=^^1^1^2950804^
	;;^DD(357.93,.08,1,1,"%D",1,0)
	;;=Used to find all the multiple choice fields appearing in a block.
	;;^DD(357.93,.08,1,1,"DT")
	;;=2940720
	;;^DD(357.93,.08,3)
	;;=What block should this input field appear in?
	;;^DD(357.93,.08,"DT")
	;;=2940720
	;;^DD(357.93,.09,0)
	;;=SELECTION RULE^S^0:ANY NUMBER;1:EXACTLY ONE;2:AT MOST ONE (0 or 1);3:AT LEAST ONE (1 or more);^0;9^Q
	;;^DD(357.93,.09,3)
	;;=Which rule applies to the choices the user can make?
	;;^DD(357.93,.09,21,0)
	;;=^^1^1^2950808^
	;;^DD(357.93,.09,21,1,0)
	;;=A selection rule for the multiple choice question can be specified.
	;;^DD(357.93,.09,"DT")
	;;=2941209
	;;^DD(357.93,1,0)
	;;=CHOICE^357.931I^^1;0
	;;^DD(357.93,1,12)
	;;=Allows only package interfaces that print reports and that are available.
	;;^DD(357.93,1,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"

IBDIN020
IBDIN020	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.93)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.93,1,21,0)
	;;=^^1^1^2950908^^
	;;^DD(357.93,1,21,1,0)
	;;=The list of choices that make up the multiple choice field. 
	;;^DD(357.93,1,"DT")
	;;=2940721
	;;^DD(357.931,0)
	;;=CHOICE SUB-FIELD^^.09^9
	;;^DD(357.931,0,"DT")
	;;=2950822
	;;^DD(357.931,0,"ID","WRITE")
	;;=W "LABEL=",$P(^(0),U,5) W:$P(^(0),U,9) "       QUALIFIER=",$P($G(^IBD(357.98,$P(^(0),U,9),0)),U)
	;;^DD(357.931,0,"IX","B",357.931,.01)
	;;=
	;;^DD(357.931,0,"NM","CHOICE")
	;;=
	;;^DD(357.931,0,"NM","REPORT")
	;;=
	;;^DD(357.931,0,"UP")
	;;=357.93
	;;^DD(357.931,.01,0)
	;;=CHOICE^MRFX^^0;1^D CHOICE^IBDFU91($P(^IBE(357.93,D0,0),U,6),.X)
	;;^DD(357.931,.01,.1)
	;;=
	;;^DD(357.931,.01,1,0)
	;;=^.1^^-1
	;;^DD(357.931,.01,1,1,0)
	;;=357.931^B
	;;^DD(357.931,.01,1,1,1)
	;;=S ^IBE(357.93,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(357.931,.01,1,1,2)
	;;=K ^IBE(357.93,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(357.931,.01,3)
	;;=What value should be passed to the database when this choice is made?
	;;^DD(357.931,.01,4)
	;;=D HELP^IBDFU91($P(^IBE(357.93,DA,0),U,6))
	;;^DD(357.931,.01,21,0)
	;;=^^5^5^2950908^^
	;;^DD(357.931,.01,21,1,0)
	;;= 
	;;^DD(357.931,.01,21,2,0)
	;;= 
	;;^DD(357.931,.01,21,3,0)
	;;=Should be a value representing a choice that could be made. This field is
	;;^DD(357.931,.01,21,4,0)
	;;=for the external representation of the value, which could be different
	;;^DD(357.931,.01,21,5,0)
	;;=from the representation that is actually passed to the database.
	;;^DD(357.931,.01,"DT")
	;;=2950911
	;;^DD(357.931,.02,0)
	;;=STARTING COLUMN FOR LABEL^RNJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.931,.02,1,0)
	;;=^.1^^0
	;;^DD(357.931,.02,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(357.931,.02,2.1)
	;;=S Y=+Y+1
	;;^DD(357.931,.02,3)
	;;=What block column should the label begin in?
	;;^DD(357.931,.02,4)
	;;=D HELP6^IBDFU5A
	;;^DD(357.931,.02,21,0)
	;;=^^2^2^2950821^^^^
	;;^DD(357.931,.02,21,1,0)
	;;= 
	;;^DD(357.931,.02,21,2,0)
	;;=The starting column for the label. 
	;;^DD(357.931,.02,"DT")
	;;=2950822
	;;^DD(357.931,.03,0)
	;;=STARTING ROW FOR LABEL^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.931,.03,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(357.931,.03,2.1)
	;;=S Y=+Y+1
	;;^DD(357.931,.03,3)
	;;=What block row should the label be in?
	;;^DD(357.931,.03,21,0)
	;;=^^1^1^2950821^^
	;;^DD(357.931,.03,21,1,0)
	;;=The starting row the the label.
	;;^DD(357.931,.03,"DT")
	;;=2950821
	;;^DD(357.931,.04,0)
	;;=LABEL APPEARANCE^FX^^0;4^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBR"'[$E(X,1))!("UBR"'[$E(X,2))!("UBR"'[$E(X,3)) X
	;;^DD(357.931,.04,.1)
	;;=HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {U,B,R}
	;;^DD(357.931,.04,3)
	;;=B=bold,U=underline,R=reverse. You can enter any combination of {B,U,R}. (NOT REQUIRED)
	;;^DD(357.931,.04,21,0)
	;;=^^1^1^2950821^^^
	;;^DD(357.931,.04,21,1,0)
	;;=The appearance of the label can be specified.
	;;^DD(357.931,.04,"DT")
	;;=2950821
	;;^DD(357.931,.05,0)
	;;=CHOICE LABEL^RF^^0;5^K:$L(X)>120!($L(X)<1) X
	;;^DD(357.931,.05,3)
	;;=Answer must be 1-120 characters in length.
	;;^DD(357.931,.05,21,0)
	;;=^^1^1^2960118^^^^
	;;^DD(357.931,.05,21,1,0)
	;;=The label that is to appear with the choice.
	;;^DD(357.931,.05,"DT")
	;;=2950821
	;;^DD(357.931,.06,0)
	;;=BUBBLE COLUMN^RNJ3,0XO^^0;6^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.931,.06,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(357.931,.06,2.1)
	;;=S Y=+Y+1
	;;^DD(357.931,.06,3)
	;;=What block column should the bubble begin in?
	;;^DD(357.931,.06,21,0)
	;;=^^2^2^2950808^
	;;^DD(357.931,.06,21,1,0)
	;;=The starting row for the bubble associated with the choice can be
	;;^DD(357.931,.06,21,2,0)
	;;=specified.
	;;^DD(357.931,.06,"DT")
	;;=2950808
	;;^DD(357.931,.07,0)
	;;=BUBBLE ROW^RNJ3,0XO^^0;7^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.931,.07,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(357.931,.07,2.1)
	;;=S Y=+Y+1
	;;^DD(357.931,.07,3)
	;;=What block row should the bubble be in?
	;;^DD(357.931,.07,21,0)
	;;=^^1^1^2950808^
	;;^DD(357.931,.07,21,1,0)
	;;=The row for the bubble associated with the choice can be specified.
	;;^DD(357.931,.07,"DT")
	;;=2950808
	;;^DD(357.931,.08,0)
	;;=ID^RFXO^^0;8^S X=X
	;;^DD(357.931,.08,2)
	;;=S Y(0)=Y S Y=Y
	;;^DD(357.931,.08,2.1)
	;;=S Y=Y
	;;^DD(357.931,.08,3)
	;;=Enter the identifier for the choice.
	;;^DD(357.931,.08,4)
	;;=
	;;^DD(357.931,.08,21,0)
	;;=^^1^1^2950908^^^^
	;;^DD(357.931,.08,21,1,0)
	;;=The identifier for the choice made.
	;;^DD(357.931,.08,"DT")
	;;=2950908
	;;^DD(357.931,.09,0)
	;;=DATA QUALIFIER^*P357.98'^IBD(357.98,^0;9^S DIC("S")="I $$DQGOOD^IBDFU9($P($G(^IBE(357.93,DA(1),0)),""^"",6),Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X

IBDIN021
IBDIN021	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.93)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.931,.09,3)
	;;=Does one of the qualifers apply to this choice?
	;;^DD(357.931,.09,12)
	;;=Allows only certain data qualifiers, dependent on the type of data.
	;;^DD(357.931,.09,12.1)
	;;=S DIC("S")="I $$DQGOOD^IBDFU9($P($G(^IBE(357.93,DA(1),0)),""^"",6),Y)"
	;;^DD(357.931,.09,21,0)
	;;=^^1^1^2950809^^
	;;^DD(357.931,.09,21,1,0)
	;;=The data qualifier, if any, assoicated with the choice.
	;;^DD(357.931,.09,"DT")
	;;=2941207

IBDIN022
IBDIN022	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.94)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.94,0,"GL")
	;;=^IBE(357.94,
	;;^DIC("B","ENCOUNTER FORM PRINTERS",357.94)
	;;=
	;;^DIC(357.94,"%D",0)
	;;=^^4^4^2960315^
	;;^DIC(357.94,"%D",1,0)
	;;=This file contains a list of terminal types that can support either
	;;^DIC(357.94,"%D",2,0)
	;;=duplex printing or the printer control language PCL5.  Entering the
	;;^DIC(357.94,"%D",3,0)
	;;=correct information in this file will allow encounter forms printed
	;;^DIC(357.94,"%D",4,0)
	;;=to these terminal types to utilize these features.
	;;^DD(357.94,0)
	;;=FIELD^^.05^5
	;;^DD(357.94,0,"DDA")
	;;=N
	;;^DD(357.94,0,"DT")
	;;=2940627
	;;^DD(357.94,0,"IX","B",357.94,.01)
	;;=
	;;^DD(357.94,0,"NM","ENCOUNTER FORM PRINTERS")
	;;=
	;;^DD(357.94,.01,0)
	;;=TERMINAL TYPE^RP3.2'^%ZIS(2,^0;1^Q
	;;^DD(357.94,.01,1,0)
	;;=^.1
	;;^DD(357.94,.01,1,1,0)
	;;=357.94^B
	;;^DD(357.94,.01,1,1,1)
	;;=S ^IBE(357.94,"B",$E(X,1,30),DA)=""
	;;^DD(357.94,.01,1,1,2)
	;;=K ^IBE(357.94,"B",$E(X,1,30),DA)
	;;^DD(357.94,.01,3)
	;;=What type of terminal is the printer?
	;;^DD(357.94,.01,21,0)
	;;=^^6^6^2960229^^^^
	;;^DD(357.94,.01,21,1,0)
	;;=Enter the terminal type that you'd like to define for encounter forms.
	;;^DD(357.94,.01,21,2,0)
	;;=You can enter a printer control language, simplex and duplex printer
	;;^DD(357.94,.01,21,3,0)
	;;=escape sequences.  Currently only PCL5 is supported for scannable 
	;;^DD(357.94,.01,21,4,0)
	;;=encounter forms.  Simplex and Duplex printing is supported on all printers
	;;^DD(357.94,.01,21,5,0)
	;;=that have duplex printing ability.  Generally all HP printers (HP3 and 
	;;^DD(357.94,.01,21,6,0)
	;;=above) support PCL5.
	;;^DD(357.94,.01,"DT")
	;;=2940627
	;;^DD(357.94,.02,0)
	;;=PRINTER LANGUAGE TYPE^S^1:PCL5;^0;2^Q
	;;^DD(357.94,.02,21,0)
	;;=^^5^5^2960229^^
	;;^DD(357.94,.02,21,1,0)
	;;=Enter the printer control language that this terminal type supports for
	;;^DD(357.94,.02,21,2,0)
	;;=printing scannable encounter forms.  Currently only PCL5 is supported.
	;;^DD(357.94,.02,21,3,0)
	;;= 
	;;^DD(357.94,.02,21,4,0)
	;;=If this terminal type supports PCL5 then enter PCL5, otherwise this should
	;;^DD(357.94,.02,21,5,0)
	;;=be left blank.  Generally all HP printers (HP3 and above) support PCL5.
	;;^DD(357.94,.02,"DT")
	;;=2940627
	;;^DD(357.94,.03,0)
	;;=SIMPLEX^FX^^0;3^D CHECK^%ZISS1 K:$L(X)>50!($L(X)<2) X
	;;^DD(357.94,.03,3)
	;;=Enter the printer language statement that will set the printer to simplex printing.
	;;^DD(357.94,.03,21,0)
	;;=^^4^4^2960229^^
	;;^DD(357.94,.03,21,1,0)
	;;=This is the code used to put this printer into Simplex mode (one sided
	;;^DD(357.94,.03,21,2,0)
	;;=print).  For PCL5 printers this generally is $C(27)_"&l0S".  Be careful
	;;^DD(357.94,.03,21,3,0)
	;;=when typing this in, the character sequence is: Escape, ampersand, lower
	;;^DD(357.94,.03,21,4,0)
	;;=case L, numeral zero, capital S.
	;;^DD(357.94,.03,"DT")
	;;=2950927
	;;^DD(357.94,.04,0)
	;;=DUPLEX, LONG-EDGE BINDING^FX^^0;4^D CHECK^%ZISS1 K:$L(X)>50!($L(X)<2) X
	;;^DD(357.94,.04,3)
	;;=Enter the printer language statement that will set the printer to duplex printing for long-edge binding.
	;;^DD(357.94,.04,21,0)
	;;=^^6^6^2960229^
	;;^DD(357.94,.04,21,1,0)
	;;=This is the code used to put this printer into Duplex mode, long
	;;^DD(357.94,.04,21,2,0)
	;;=Edge Binding (two sided printing, like you'd use in a binder).  For 
	;;^DD(357.94,.04,21,3,0)
	;;=PCL5 printers this generally is $C(27)_"&l1S".  Be careful
	;;^DD(357.94,.04,21,4,0)
	;;=when typing this in, the character sequence is: Escape, ampersand, lower
	;;^DD(357.94,.04,21,5,0)
	;;=case L, numeral 1, capital S.
	;;^DD(357.94,.04,21,6,0)
	;;=
	;;^DD(357.94,.04,"DT")
	;;=2950927
	;;^DD(357.94,.05,0)
	;;=DUPLEX, SHORT-EDGE BINDING^FX^^0;5^D CHECK^%ZISS1 K:$L(X)>50!($L(X)<2) X
	;;^DD(357.94,.05,3)
	;;=Enter the printer language statement that will set the printer to duplex printing for short-edge binding.
	;;^DD(357.94,.05,21,0)
	;;=^^6^6^2960229^^
	;;^DD(357.94,.05,21,1,0)
	;;=This is the code used to put this printer into Duplex mode, short
	;;^DD(357.94,.05,21,2,0)
	;;=Edge Binding (two sided printing, like you'd use in a patient chart).
	;;^DD(357.94,.05,21,3,0)
	;;=For PCL5 printers this generally is $C(27)_"&l2S".  Be careful
	;;^DD(357.94,.05,21,4,0)
	;;=when typing this in, the character sequence is: Escape, ampersand, lower
	;;^DD(357.94,.05,21,5,0)
	;;=case L, numeral 2, capital S.                                            
	;;^DD(357.94,.05,21,6,0)
	;;=
	;;^DD(357.94,.05,"DT")
	;;=2950927

IBDIN023
IBDIN023	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.95)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.95,0,"GL")
	;;=^IBD(357.95,
	;;^DIC("B","FORM DEFINITION",357.95)
	;;=
	;;^DIC(357.95,"%D",0)
	;;=^^1^1^2951218^^^^
	;;^DIC(357.95,"%D",1,0)
	;;=Contains information about the form needed to process the input.
	;;^DD(357.95,0)
	;;=FIELD^^.21^21
	;;^DD(357.95,0,"DDA")
	;;=N
	;;^DD(357.95,0,"DT")
	;;=2951218
	;;^DD(357.95,0,"ID",.03)
	;;=W "   Source: ",@("$P($P($C(59)_$S($D(^DD(357.95,.03,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,3)_"":"",2),$C(59),1)")
	;;^DD(357.95,0,"ID",.2)
	;;=W "    Created: ",$E($P(^(0),U,20),4,5)_"-"_$E($P(^(0),U,20),6,7)_"-"_$E($P(^(0),U,20),2,3)
	;;^DD(357.95,0,"ID",.21)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(357,+$P(^(0),U,21),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(357,.01,0),U,2) D Y^DIQ:Y]"" W "   Form: ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(357.95,0,"IX","AC",357.951,.01)
	;;=
	;;^DD(357.95,0,"IX","AC1",357.951,.02)
	;;=
	;;^DD(357.95,0,"IX","AD",357.952,.01)
	;;=
	;;^DD(357.95,0,"IX","AD1",357.952,.02)
	;;=
	;;^DD(357.95,0,"IX","ADEL",357.95,.02)
	;;=
	;;^DD(357.95,0,"IX","AE",357.951,.03)
	;;=
	;;^DD(357.95,0,"IX","AE1",357.951,.1)
	;;=
	;;^DD(357.95,0,"IX","AE2",357.951,.04)
	;;=
	;;^DD(357.95,0,"IX","AFC",357.9501,.01)
	;;=
	;;^DD(357.95,0,"IX","B",357.95,.01)
	;;=
	;;^DD(357.95,0,"IX","C",357.95,.03)
	;;=
	;;^DD(357.95,0,"IX","D",357.95,13)
	;;=
	;;^DD(357.95,0,"NM","FORM DEFINITION")
	;;=
	;;^DD(357.95,0,"PT",357.96,.04)
	;;=
	;;^DD(357.95,.01,0)
	;;=FORM TYPE ID^RNJ9,0X^^0;1^K X
	;;^DD(357.95,.01,1,0)
	;;=^.1^^-1
	;;^DD(357.95,.01,1,1,0)
	;;=357.95^B
	;;^DD(357.95,.01,1,1,1)
	;;=S ^IBD(357.95,"B",$E(X,1,30),DA)=""
	;;^DD(357.95,.01,1,1,2)
	;;=K ^IBD(357.95,"B",$E(X,1,30),DA)
	;;^DD(357.95,.01,3)
	;;=Can not be entered through FileMan!
	;;^DD(357.95,.01,21,0)
	;;=^^2^2^2941019^^
	;;^DD(357.95,.01,21,1,0)
	;;=This number should be unique for the encounter form type. It equals the
	;;^DD(357.95,.01,21,2,0)
	;;=ien. Editing the form results in a new FORM TYPE ID being assigned.
	;;^DD(357.95,.01,"DT")
	;;=2951218
	;;^DD(357.95,.02,0)
	;;=DATE MARKED FOR DELETION^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(357.95,.02,1,0)
	;;=^.1
	;;^DD(357.95,.02,1,1,0)
	;;=357.95^ADEL
	;;^DD(357.95,.02,1,1,1)
	;;=S ^IBD(357.95,"ADEL",$E(X,1,30),DA)=""
	;;^DD(357.95,.02,1,1,2)
	;;=K ^IBD(357.95,"ADEL",$E(X,1,30),DA)
	;;^DD(357.95,.02,1,1,"%D",0)
	;;=^^2^2^2951004^
	;;^DD(357.95,.02,1,1,"%D",1,0)
	;;=Regular cross reference of file.  Used to find entries marked for deletion
	;;^DD(357.95,.02,1,1,"%D",2,0)
	;;=by purge utility
	;;^DD(357.95,.02,1,1,"DT")
	;;=2951004
	;;^DD(357.95,.02,3)
	;;=Enter the date the form was deleted or edited.
	;;^DD(357.95,.02,21,0)
	;;=^^2^2^2941215^^
	;;^DD(357.95,.02,21,1,0)
	;;=The date is when the form was deleted or edited. When the last printed
	;;^DD(357.95,.02,21,2,0)
	;;=form is accounted for the entry can be deleted.
	;;^DD(357.95,.02,"DT")
	;;=2951004
	;;^DD(357.95,.03,0)
	;;=SOURCE^RS^1:AICS;2:PANDAS;3:TELEFORM;4:PEN;99:OTHER;^0;3^Q
	;;^DD(357.95,.03,1,0)
	;;=^.1
	;;^DD(357.95,.03,1,1,0)
	;;=357.95^C
	;;^DD(357.95,.03,1,1,1)
	;;=S ^IBD(357.95,"C",$E(X,1,30),DA)=""
	;;^DD(357.95,.03,1,1,2)
	;;=K ^IBD(357.95,"C",$E(X,1,30),DA)
	;;^DD(357.95,.03,1,1,"%D",0)
	;;=^^2^2^2950928^
	;;^DD(357.95,.03,1,1,"%D",1,0)
	;;=Used to determine if the form type provided to Form Tracking was
	;;^DD(357.95,.03,1,1,"%D",2,0)
	;;=externally assigned.
	;;^DD(357.95,.03,1,1,"DT")
	;;=2941017
	;;^DD(357.95,.03,3)
	;;=What software will produce the form?
	;;^DD(357.95,.03,21,0)
	;;=^^1^1^2951218^^
	;;^DD(357.95,.03,21,1,0)
	;;=The software that produced the form.
	;;^DD(357.95,.03,"DT")
	;;=2951218
	;;^DD(357.95,.09,0)
	;;=RIGHT MARGIN^NJ3,0X^^0;9^K:+X'=X!(X>133)!(X<80)!(X?.E1"."1N.N) X
	;;^DD(357.95,.09,3)
	;;=Type a Number between 80 and 133, 0 Decimal Digits
	;;^DD(357.95,.09,21,0)
	;;=^^1^1^2950803^
	;;^DD(357.95,.09,21,1,0)
	;;=The width of the form in characters.
	;;^DD(357.95,.09,"DT")
	;;=2950919
	;;^DD(357.95,.1,0)
	;;=PAGE LENGTH^RNJ3,0^^0;10^K:+X'=X!(X>300)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.95,.1,3)
	;;=Type a Number between 1 and 300, 0 Decimal Digits
	;;^DD(357.95,.1,21,0)
	;;=^^1^1^2950803^
	;;^DD(357.95,.1,21,1,0)
	;;=The length of the page.
	;;^DD(357.95,.1,"DT")
	;;=2940823
	;;^DD(357.95,.11,0)
	;;=NUMBER OF PAGES^RNJ2,0^^0;11^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.95,.11,3)
	;;=How many pages should the encounter form have?
	;;^DD(357.95,.11,21,0)
	;;=^^1^1^2951122^
	;;^DD(357.95,.11,21,1,0)
	;;=The encounter form may have multiple pages.
	;;^DD(357.95,.11,"DT")
	;;=2951122
	;;^DD(357.95,.12,0)
	;;=SCANNABLE?^S^0:NO;1:YES;^0;12^Q

IBDIN024
IBDIN024	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.95)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.95,.12,3)
	;;=Answer YES if the form will be scanned to accomplish data entry, NO otherwise.
	;;^DD(357.95,.12,"DT")
	;;=2951122
	;;^DD(357.95,.13,0)
	;;=FORM TYPE ID^NJ9,0^^0;13^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.95,.13,3)
	;;=Type a Number between 1 and 999999999, 0 Decimal Digits
	;;^DD(357.95,.13,"DT")
	;;=2951122
	;;^DD(357.95,.14,0)
	;;=PAPER SIZE^S^1:LETTER (8 1/2 x 11);^0;14^Q
	;;^DD(357.95,.14,3)
	;;=What size paper should be used?
	;;^DD(357.95,.14,"DT")
	;;=2951122
	;;^DD(357.95,.15,0)
	;;=ORIENTATION^S^p:PORTRAIT;^0;15^Q
	;;^DD(357.95,.15,3)
	;;=How should the form be oriented?
	;;^DD(357.95,.15,"DT")
	;;=2951122
	;;^DD(357.95,.16,0)
	;;=TEXT SIZE^RS^1:133 COLUMNS x 80 LINES;2:96 COLUMNS x 72 LINES;3:80 COLUMNS x 60 LINES;^0;16^Q
	;;^DD(357.95,.16,3)
	;;=This choice will determine the size of the print and how much text will fit on the form.
	;;^DD(357.95,.16,"DT")
	;;=2951122
	;;^DD(357.95,.17,0)
	;;=VERSION^NJ5,2^^0;17^K:+X'=X!(X>99)!(X<0)!(X?.E1"."3N.N) X
	;;^DD(357.95,.17,3)
	;;=Type a Number between 0 and 99, 2 Decimal Digits
	;;^DD(357.95,.17,"DT")
	;;=2951122
	;;^DD(357.95,.2,0)
	;;=DATE CREATED^D^^0;20^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(357.95,.2,9)
	;;=^
	;;^DD(357.95,.2,21,0)
	;;=^^2^2^2951218^
	;;^DD(357.95,.2,21,1,0)
	;;=This is the date that this entry was created.  It is triggered when the
	;;^DD(357.95,.2,21,2,0)
	;;=entry is added.
	;;^DD(357.95,.2,"DT")
	;;=2951218
	;;^DD(357.95,.21,0)
	;;=FORM NAME^P357^IBE(357,^0;21^Q
	;;^DD(357.95,.21,3)
	;;=
	;;^DD(357.95,.21,9)
	;;=^
	;;^DD(357.95,.21,21,0)
	;;=^^3^3^2960212^^^
	;;^DD(357.95,.21,21,1,0)
	;;=This is the name of the form when this entry was created.  It is triggered
	;;^DD(357.95,.21,21,2,0)
	;;=when the entry is created.
	;;^DD(357.95,.21,21,3,0)
	;;=
	;;^DD(357.95,.21,23,0)
	;;=^^1^1^2960212^^
	;;^DD(357.95,.21,23,1,0)
	;;=This field is hard set when the entry is created.  See routine IBDFM1.
	;;^DD(357.95,.21,"DT")
	;;=2951218
	;;^DD(357.95,1,0)
	;;=BUBBLES^357.951I^^1;0
	;;^DD(357.95,1,21,0)
	;;=^^1^1^2951121^^
	;;^DD(357.95,1,21,1,0)
	;;=The list of bubbles appearing on the form.
	;;^DD(357.95,1,"DT")
	;;=2941020
	;;^DD(357.95,2,0)
	;;=HAND PRINT FIELDS^357.952^^2;0
	;;^DD(357.95,3,0)
	;;=PAGE INFORMATION^357.953^^3;0
	;;^DD(357.95,3,21,0)
	;;=^^2^2^2950808^^
	;;^DD(357.95,3,21,1,0)
	;;=A list of the pages of a form that requires documentation
	;;^DD(357.95,3,21,2,0)
	;;=of specific features.
	;;^DD(357.95,3,"DT")
	;;=2950306
	;;^DD(357.95,10,0)
	;;=CLINICS USING THIS FORM^357.9501P^^10;0
	;;^DD(357.95,10,21,0)
	;;=^^2^2^2950808^^
	;;^DD(357.95,10,21,1,0)
	;;=These are the clinics that use this form
	;;^DD(357.95,10,21,2,0)
	;;= 
	;;^DD(357.95,10,23,0)
	;;=^^1^1^2950808^^
	;;^DD(357.95,10,23,1,0)
	;;=This field specifically added for PANDAS.
	;;^DD(357.95,11,0)
	;;=PANDAS HEADERS^357.9511^^11;0
	;;^DD(357.95,11,21,0)
	;;=^^1^1^2950803^
	;;^DD(357.95,11,21,1,0)
	;;=A list of headers used by PANDAS.
	;;^DD(357.95,11,23,0)
	;;=^^1^1^2950803^
	;;^DD(357.95,11,23,1,0)
	;;=This field was requested by the PANDAS project.
	;;^DD(357.95,12.01,0)
	;;=PANDAS TIMESTAMP^D^^12;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(357.95,12.01,3)
	;;=When was the Pandas form last modified?
	;;^DD(357.95,12.01,21,0)
	;;=^^1^1^2950803^
	;;^DD(357.95,12.01,21,1,0)
	;;=The date and time the PANDAS form was last modified.
	;;^DD(357.95,12.01,23,0)
	;;=^^1^1^2950803^
	;;^DD(357.95,12.01,23,1,0)
	;;=This field was requested by PANDAS.
	;;^DD(357.95,12.01,"DT")
	;;=2941020
	;;^DD(357.95,13,0)
	;;=PANDAS FORMID^NJ4,0^^12;2^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.95,13,1,0)
	;;=^.1
	;;^DD(357.95,13,1,1,0)
	;;=357.95^D
	;;^DD(357.95,13,1,1,1)
	;;=S ^IBD(357.95,"D",$E(X,1,30),DA)=""
	;;^DD(357.95,13,1,1,2)
	;;=K ^IBD(357.95,"D",$E(X,1,30),DA)
	;;^DD(357.95,13,1,1,"%D",0)
	;;=^^1^1^2950322^
	;;^DD(357.95,13,1,1,"%D",1,0)
	;;=Cross-reference to determine Pandas FORM ID.
	;;^DD(357.95,13,1,1,"DT")
	;;=2950322
	;;^DD(357.95,13,3)
	;;=Type a Number between 0 and 9999, 0 Decimal Digits
	;;^DD(357.95,13,21,0)
	;;=^^1^1^2950803^
	;;^DD(357.95,13,21,1,0)
	;;=The form identifier used by PANDAS.
	;;^DD(357.95,13,23,0)
	;;=^^1^1^2950803^
	;;^DD(357.95,13,23,1,0)
	;;=This field was requested by PANDAS.
	;;^DD(357.95,13,"DT")
	;;=2950322
	;;^DD(357.9501,0)
	;;=CLINICS USING THIS FORM SUB-FIELD^^.01^1
	;;^DD(357.9501,0,"IX","B",357.9501,.01)
	;;=
	;;^DD(357.9501,0,"NM","CLINICS USING THIS FORM")
	;;=
	;;^DD(357.9501,0,"UP")
	;;=357.95
	;;^DD(357.9501,.01,0)
	;;=CLINICS USING THIS FORM^MP44'^SC(^0;1^Q
	;;^DD(357.9501,.01,1,0)
	;;=^.1

IBDIN025
IBDIN025	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.95)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.9501,.01,1,1,0)
	;;=357.9501^B
	;;^DD(357.9501,.01,1,1,1)
	;;=S ^IBD(357.95,DA(1),10,"B",$E(X,1,30),DA)=""
	;;^DD(357.9501,.01,1,1,2)
	;;=K ^IBD(357.95,DA(1),10,"B",$E(X,1,30),DA)
	;;^DD(357.9501,.01,1,2,0)
	;;=357.95^AFC
	;;^DD(357.9501,.01,1,2,1)
	;;=S ^IBD(357.95,"AFC",$E(X,1,30),DA(1),DA)=""
	;;^DD(357.9501,.01,1,2,2)
	;;=K ^IBD(357.95,"AFC",$E(X,1,30),DA(1),DA)
	;;^DD(357.9501,.01,1,2,"%D",0)
	;;=^^1^1^2941012^
	;;^DD(357.9501,.01,1,2,"%D",1,0)
	;;=Regular cross reference of forms by clinic using them
	;;^DD(357.9501,.01,1,2,"DT")
	;;=2941012
	;;^DD(357.9501,.01,3)
	;;=Enter the clinics using this form.
	;;^DD(357.9501,.01,21,0)
	;;=^^1^1^2950803^
	;;^DD(357.9501,.01,21,1,0)
	;;=A clinic that uses the form type to which this form definition applies.
	;;^DD(357.9501,.01,"DT")
	;;=2941011
	;;^DD(357.951,0)
	;;=BUBBLES SUB-FIELD^^1^13
	;;^DD(357.951,0,"DT")
	;;=2951002
	;;^DD(357.951,0,"ID","WRITE")
	;;=W "  COL = ",$P($G(^(0)),U,2),"   DISPLAY = ",$P($G(^(0)),U,8)
	;;^DD(357.951,0,"IX","B",357.951,.01)
	;;=
	;;^DD(357.951,0,"NM","BUBBLES")
	;;=
	;;^DD(357.951,0,"UP")
	;;=357.95
	;;^DD(357.951,.01,0)
	;;=BUBBLE ROW^MNJ3,0^^0;1^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.951,.01,1,0)
	;;=^.1
	;;^DD(357.951,.01,1,1,0)
	;;=357.951^B
	;;^DD(357.951,.01,1,1,1)
	;;=S ^IBD(357.95,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(357.951,.01,1,1,2)
	;;=K ^IBD(357.95,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(357.951,.01,1,2,0)
	;;=357.95^AC^MUMPS
	;;^DD(357.951,.01,1,2,1)
	;;=S:$P($G(^IBD(357.95,DA(1),1,DA,0)),"^",2)]"" ^IBD(357.95,"AC",DA(1),X,$P(^IBD(357.95,DA(1),1,DA,0),"^",2),DA)=""
	;;^DD(357.951,.01,1,2,2)
	;;=K:$P($G(^IBD(357.95,DA(1),1,DA,0)),"^",2)]"" ^IBD(357.95,"AC",DA(1),X,$P(^IBD(357.95,DA(1),1,DA,0),"^",2),DA)
	;;^DD(357.951,.01,1,2,"%D",0)
	;;=^^2^2^2960403^^^
	;;^DD(357.951,.01,1,2,"%D",1,0)
	;;=This cross-reference indexes the bubbles by location. Set by the .01 and
	;;^DD(357.951,.01,1,2,"%D",2,0)
	;;=.02 fields.
	;;^DD(357.951,.01,1,2,"DT")
	;;=2960403
	;;^DD(357.951,.01,3)
	;;=Type a Number between 0 and 999, 0 Decimal Digits
	;;^DD(357.951,.01,21,0)
	;;=^^1^1^2950928^^^^
	;;^DD(357.951,.01,21,1,0)
	;;=The row the bubble occurs on. Row 0 is at the top.
	;;^DD(357.951,.01,"DT")
	;;=2960403
	;;^DD(357.951,.02,0)
	;;=BUBBLE COLUMN^RNJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.951,.02,1,0)
	;;=^.1
	;;^DD(357.951,.02,1,1,0)
	;;=357.95^AC1^MUMPS
	;;^DD(357.951,.02,1,1,1)
	;;=S:X]"" ^IBD(357.95,"AC",DA(1),$P($G(^IBD(357.95,DA(1),1,DA,0)),"^"),X,DA)=""
	;;^DD(357.951,.02,1,1,2)
	;;=K:X]"" ^IBD(357.95,"AC",DA(1),$P($G(^IBD(357.95,DA(1),1,DA,0)),"^"),X,DA)
	;;^DD(357.951,.02,1,1,"%D",0)
	;;=^^2^2^2960403^^
	;;^DD(357.951,.02,1,1,"%D",1,0)
	;;=This cross-reference indexes the bubbles by location. Set by the .01 and
	;;^DD(357.951,.02,1,1,"%D",2,0)
	;;=.02 fields.
	;;^DD(357.951,.02,1,1,"DT")
	;;=2960403
	;;^DD(357.951,.02,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.951,.02,21,0)
	;;=^^1^1^2950803^
	;;^DD(357.951,.02,21,1,0)
	;;=The column the bubble occurs on. Columns begin at 0 on the left.
	;;^DD(357.951,.02,"DT")
	;;=2960403
	;;^DD(357.951,.03,0)
	;;=TYPE OF DATA^*P357.6'^IBE(357.6,^0;3^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""P""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(357.951,.03,1,0)
	;;=^.1
	;;^DD(357.951,.03,1,1,0)
	;;=357.95^AE^MUMPS
	;;^DD(357.951,.03,1,1,1)
	;;=I X,$P($G(^IBD(357.95,DA(1),1,DA,0)),"^",4)]"" S ^IBD(357.95,"AE",DA(1),X,+$P(^IBD(357.95,DA(1),1,DA,0),"^",10),$P(^(0),"^",4),DA)=""
	;;^DD(357.951,.03,1,1,2)
	;;=I X,$P($G(^IBD(357.95,DA(1),1,DA,0)),"^",4)]"" K ^IBD(357.95,"AE",DA(1),X,+$P(^IBD(357.95,DA(1),1,DA,0),"^",10),$P(^(0),"^",4),DA)
	;;^DD(357.951,.03,1,1,"%D",0)
	;;=^^2^2^2960403^^^^
	;;^DD(357.951,.03,1,1,"%D",1,0)
	;;=Subscripts are <form type id>, <package interface ien>, <data qualifier
	;;^DD(357.951,.03,1,1,"%D",2,0)
	;;=ien>,<value to pass>,<bubble ien>). Set by the .03 ,.04, and .1 fields.
	;;^DD(357.951,.03,1,1,"DT")
	;;=2960403
	;;^DD(357.951,.03,3)
	;;=What type of data does the bubble represent?
	;;^DD(357.951,.03,12)
	;;=The screen is only for PANDAS. It allows only certain input interfaces.
	;;^DD(357.951,.03,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""P"""
	;;^DD(357.951,.03,21,0)
	;;=^^1^1^2950913^^^^
	;;^DD(357.951,.03,21,1,0)
	;;=The type of data a bubble represents. Used to map the data to DHCP.
	;;^DD(357.951,.03,"DT")
	;;=2960403
	;;^DD(357.951,.04,0)
	;;=PRIMARY VALUE^FXO^^0;4^D FDCHOICE^IBDFU91($P(^IBD(357.95,D0,1,D1,0),U,3),.X)
	;;^DD(357.951,.04,1,0)
	;;=^.1

IBDIN026
IBDIN026	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.95)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.951,.04,1,1,0)
	;;=357.95^AE2^MUMPS
	;;^DD(357.951,.04,1,1,1)
	;;=I $P($G(^IBD(357.95,DA(1),1,DA,0)),"^",3),X]"" S ^IBD(357.95,"AE",DA(1),$P(^IBD(357.95,DA(1),1,DA,0),"^",3),+$P(^(0),"^",10),X,DA)=""
	;;^DD(357.951,.04,1,1,2)
	;;=I $P($G(^IBD(357.95,DA(1),1,DA,0)),"^",3),X]"" K ^IBD(357.95,"AE",DA(1),$P(^IBD(357.95,DA(1),1,DA,0),"^",3),+$P(^(0),"^",10),X,DA)
	;;^DD(357.951,.04,1,1,"%D",0)
	;;=^^2^2^2960403^^^^
	;;^DD(357.951,.04,1,1,"%D",1,0)
	;;=Subscripts are <form type id>, <package interface ien>, <data qualifier 
	;;^DD(357.951,.04,1,1,"%D",2,0)
	;;=ien>,<value to pass>,<bubble ien>). Set by the .03 ,.04, and .1 fields.
	;;^DD(357.951,.04,1,1,"DT")
	;;=2960403
	;;^DD(357.951,.04,2)
	;;=S Y(0)=Y D OUTPUT^IBDFU91($P(^IBD(357.95,D0,1,D1,0),U,3),.Y)
	;;^DD(357.951,.04,2.1)
	;;=D OUTPUT^IBDFU91($P(^IBD(357.95,D0,1,D1,0),U,3),.Y)
	;;^DD(357.951,.04,3)
	;;=What value should be entered to the database?
	;;^DD(357.951,.04,4)
	;;=D HELP^IBDFU91($P(^IBD(357.95,DA(1),1,DA,0),U,3))
	;;^DD(357.951,.04,21,0)
	;;=^^1^1^2950823^^^^
	;;^DD(357.951,.04,21,1,0)
	;;=The value to pass to the package interface.
	;;^DD(357.951,.04,"DT")
	;;=2960403
	;;^DD(357.951,.05,0)
	;;=FIELD NAME^RF^^0;5^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.951,.05,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.951,.05,21,0)
	;;=^^1^1^2950803^
	;;^DD(357.951,.05,21,1,0)
	;;=The name of the field that the bubble appears in.
	;;^DD(357.951,.05,"DT")
	;;=2940823
	;;^DD(357.951,.06,0)
	;;=FIELD ID^RF^^0;6^K:$L(X)>10!($L(X)<2) X
	;;^DD(357.951,.06,3)
	;;=Answer must be 2-10 characters in length.
	;;^DD(357.951,.06,21,0)
	;;=^^2^2^2951121^^
	;;^DD(357.951,.06,21,1,0)
	;;=A unique identifier for a group of one or more bubbles that is used to
	;;^DD(357.951,.06,21,2,0)
	;;=tie that group of bubbles together.
	;;^DD(357.951,.06,"DT")
	;;=2940823
	;;^DD(357.951,.07,0)
	;;=SELECTION RULE^RS^0:ANY NUMBER;1:EXACTLY ONE;2:AT MOST ONE;3:AT LEAST ONE;^0;7^Q
	;;^DD(357.951,.07,21,0)
	;;=^^2^2^2950803^
	;;^DD(357.951,.07,21,1,0)
	;;=A rule that specifies how many of the bubbles can be filled
	;;^DD(357.951,.07,21,2,0)
	;;=in for a group of bubbles identified by the same FIELD ID.
	;;^DD(357.951,.07,"DT")
	;;=2940824
	;;^DD(357.951,.08,0)
	;;=DISPLAYED TEXT^F^^0;8^K:$L(X)>80!($L(X)<1) X
	;;^DD(357.951,.08,3)
	;;=Answer must be 1-80 characters in length.
	;;^DD(357.951,.08,21,0)
	;;=^^1^1^2950803^
	;;^DD(357.951,.08,21,1,0)
	;;=The text that appears on the form and is associated with the bubble.
	;;^DD(357.951,.08,"DT")
	;;=2950427
	;;^DD(357.951,.09,0)
	;;=DISPLAYED HEADER^F^^0;9^K:$L(X)>40!($L(X)<1) X
	;;^DD(357.951,.09,3)
	;;=What group header does the selection appear under?
	;;^DD(357.951,.09,21,0)
	;;=^^1^1^2950803^
	;;^DD(357.951,.09,21,1,0)
	;;=The header, if any, that is associated with the bubble.
	;;^DD(357.951,.09,"DT")
	;;=2941019
	;;^DD(357.951,.1,0)
	;;=DATA QUALIFIER^*P357.98'X^IBD(357.98,^0;10^S DIC("S")="I $$DQGOOD^IBDFU9($P(^IBD(357.95,D0,1,D1,0),U,3),Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(357.951,.1,1,0)
	;;=^.1
	;;^DD(357.951,.1,1,1,0)
	;;=357.95^AE1^MUMPS
	;;^DD(357.951,.1,1,1,1)
	;;=I $P(^IBD(357.95,DA(1),1,DA,0),"^",3),$P(^(0),"^",4)]"" S ^IBD(357.95,"AE",DA(1),$P(^IBD(357.95,DA(1),1,DA,0),"^",3),+X,$P(^(0),"^",4),DA)=""
	;;^DD(357.951,.1,1,1,2)
	;;=I $P(^IBD(357.95,DA(1),1,DA,0),"^",3),$P(^(0),"^",4)]"" K ^IBD(357.95,"AE",DA(1),$P(^IBD(357.95,DA(1),1,DA,0),"^",3),+X,$P(^(0),"^",4),DA)
	;;^DD(357.951,.1,1,1,"%D",0)
	;;=^^2^2^2950928^
	;;^DD(357.951,.1,1,1,"%D",1,0)
	;;=Subscripts are <form type id>, <package interface ien>,+<data qualifier
	;;^DD(357.951,.1,1,1,"%D",2,0)
	;;=ien>,<value to pass>,<bubble ien>). Set by the .03, .04, and .01 fields.
	;;^DD(357.951,.1,1,1,"DT")
	;;=2941020
	;;^DD(357.951,.1,3)
	;;=What data qualifier applies to this selection?
	;;^DD(357.951,.1,12)
	;;=Allows only certain data qualifiers, dependent on the type of data.
	;;^DD(357.951,.1,12.1)
	;;=S DIC("S")="I $$DQGOOD^IBDFU9($P(^IBD(357.95,D0,1,D1,0),U,3),Y)"
	;;^DD(357.951,.1,21,0)
	;;=^^1^1^2950912^^^^
	;;^DD(357.951,.1,21,1,0)
	;;=The data qualifier associated with the bubble.
	;;^DD(357.951,.1,"DT")
	;;=2950912
	;;^DD(357.951,.11,0)
	;;=DYNAMIC?^S^0:NO;1:YES;^0;11^Q
	;;^DD(357.951,.11,3)
	;;=Enter YES if the data associated with the bubble is stored in Form Tracking.
	;;^DD(357.951,.11,21,0)
	;;=^^2^2^2950803^
	;;^DD(357.951,.11,21,1,0)
	;;=A field is dynamic if the data associated with the bubble is determined
	;;^DD(357.951,.11,21,2,0)
	;;=at print time as opposed to design time.
	;;^DD(357.951,.11,"DT")
	;;=2950123

IBDIN027
IBDIN027	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.95)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.951,.12,0)
	;;=ITEM NUMBER^NJ3,0^^0;12^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.951,.12,3)
	;;=What number on the list is the entry where this bubble occurs?
	;;^DD(357.951,.12,21,0)
	;;=^^1^1^2950803^
	;;^DD(357.951,.12,21,1,0)
	;;=The order on a list of bubbles that this bubble occurs in.
	;;^DD(357.951,.12,"DT")
	;;=2950324
	;;^DD(357.951,1,0)
	;;=SUBHEADER^F^^1;1^K:$L(X)>250!($L(X)<1) X
	;;^DD(357.951,1,3)
	;;=Answer must be 1-250 characters in length.
	;;^DD(357.951,1,21,0)
	;;=^^1^1^2951002^
	;;^DD(357.951,1,21,1,0)
	;;=The subheader will be appended to the narrative for passing to PCE.
	;;^DD(357.951,1,"DT")
	;;=2951002
	;;^DD(357.9511,0)
	;;=PANDAS HEADERS SUB-FIELD^^2^2
	;;^DD(357.9511,0,"DT")
	;;=2950322
	;;^DD(357.9511,0,"IX","B",357.9511,.01)
	;;=
	;;^DD(357.9511,0,"NM","PANDAS HEADERS")
	;;=
	;;^DD(357.9511,0,"UP")
	;;=357.95
	;;^DD(357.9511,.01,0)
	;;=HEADERS^MF^^0;1^K:$L(X)>80!($L(X)<1) X
	;;^DD(357.9511,.01,1,0)
	;;=^.1
	;;^DD(357.9511,.01,1,1,0)
	;;=357.9511^B
	;;^DD(357.9511,.01,1,1,1)
	;;=S ^IBD(357.95,DA(1),11,"B",$E(X,1,30),DA)=""
	;;^DD(357.9511,.01,1,1,2)
	;;=K ^IBD(357.95,DA(1),11,"B",$E(X,1,30),DA)
	;;^DD(357.9511,.01,3)
	;;=Answer must be 1-80 characters in length.
	;;^DD(357.9511,.01,21,0)
	;;=^^1^1^2950803^
	;;^DD(357.9511,.01,21,1,0)
	;;=A header used by PANDAS for the form.
	;;^DD(357.9511,.01,"DT")
	;;=2941019
	;;^DD(357.9511,2,0)
	;;=USE AS HEADER^S^Y:YES;N:NO;^0;2^Q
	;;^DD(357.9511,2,3)
	;;=Answer YES if you want this text to be used as a narrative category or grouper on the form.
	;;^DD(357.9511,2,21,0)
	;;=^^2^2^2950803^
	;;^DD(357.9511,2,21,1,0)
	;;=YES means that the header should be used as a narrative category or grouper
	;;^DD(357.9511,2,21,2,0)
	;;=on the form.
	;;^DD(357.9511,2,"DT")
	;;=2950322
	;;^DD(357.952,0)
	;;=HAND PRINT FIELDS SUB-FIELD^^.01^13
	;;^DD(357.952,0,"DT")
	;;=2950724
	;;^DD(357.952,0,"IX","B",357.952,.01)
	;;=
	;;^DD(357.952,0,"NM","HAND PRINT FIELDS")
	;;=
	;;^DD(357.952,0,"UP")
	;;=357.95
	;;^DD(357.952,.01,0)
	;;=HAND PRINT ROW^MNJ3,0^^0;1^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.952,.01,1,0)
	;;=^.1
	;;^DD(357.952,.01,1,1,0)
	;;=357.952^B
	;;^DD(357.952,.01,1,1,1)
	;;=S ^IBD(357.95,DA(1),2,"B",$E(X,1,30),DA)=""
	;;^DD(357.952,.01,1,1,2)
	;;=K ^IBD(357.95,DA(1),2,"B",$E(X,1,30),DA)
	;;^DD(357.952,.01,1,2,0)
	;;=357.95^AD^MUMPS
	;;^DD(357.952,.01,1,2,1)
	;;=S:$P($G(^IBD(357.95,DA(1),2,DA,0)),"^",2)]"" ^IBD(357.95,"AD",DA(1),X,$P(^IBD(357.95,DA(1),2,DA,0),"^",2),DA)=^IBD(357.95,DA(1),2,DA,0)
	;;^DD(357.952,.01,1,2,2)
	;;=K:$P($G(^IBD(357.95,DA(1),2,DA,0)),"^",2)]"" ^IBD(357.95,"AD",DA(1),X,$P(^IBD(357.95,DA(1),2,DA,0),"^",2),DA)
	;;^DD(357.952,.01,1,2,"%D",0)
	;;=^^1^1^2960402^^^^
	;;^DD(357.952,.01,1,2,"%D",1,0)
	;;=Indexes the hand print field by location. Set by the .01 and .02 fields.
	;;^DD(357.952,.01,1,2,"DT")
	;;=2960402
	;;^DD(357.952,.01,3)
	;;=Type a Number between 0 and 999, 0 Decimal Digits
	;;^DD(357.952,.01,21,0)
	;;=^^1^1^2950808^
	;;^DD(357.952,.01,21,1,0)
	;;=The row that the hand print area begins.
	;;^DD(357.952,.01,"DT")
	;;=2960402
	;;^DD(357.952,.02,0)
	;;=HAND PRINT COLUMN^RNJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.952,.02,1,0)
	;;=^.1
	;;^DD(357.952,.02,1,1,0)
	;;=357.95^AD1^MUMPS
	;;^DD(357.952,.02,1,1,1)
	;;=S:X]"" ^IBD(357.95,"AD",DA(1),$P($G(^IBD(357.95,DA(1),2,DA,0)),"^"),X,DA)=^IBD(357.95,DA(1),2,DA,0)
	;;^DD(357.952,.02,1,1,2)
	;;=K:X]"" ^IBD(357.95,"AD",DA(1),$P($G(^IBD(357.95,DA(1),2,DA,0)),"^"),X,DA)
	;;^DD(357.952,.02,1,1,"%D",0)
	;;=^^1^1^2960402^^^^
	;;^DD(357.952,.02,1,1,"%D",1,0)
	;;=Indexes the hand print field by location. Set by the .01 and .02 fields.
	;;^DD(357.952,.02,1,1,"DT")
	;;=2960402
	;;^DD(357.952,.02,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.952,.02,21,0)
	;;=^^1^1^2950808^
	;;^DD(357.952,.02,21,1,0)
	;;=The column that the hand print area begins at.
	;;^DD(357.952,.02,"DT")
	;;=2960402
	;;^DD(357.952,.03,0)
	;;=WIDTH^RNJ3,0^^0;3^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.952,.03,3)
	;;=Type a Number between 1 and 200, 0 Decimal Digits
	;;^DD(357.952,.03,21,0)
	;;=^^2^2^2950808^
	;;^DD(357.952,.03,21,1,0)
	;;=The width of the hand print area in terms of the number of characters that
	;;^DD(357.952,.03,21,2,0)
	;;=can be printed.
	;;^DD(357.952,.03,"DT")
	;;=2940725
	;;^DD(357.952,.04,0)
	;;=TYPE OF DATA^R*P357.6'^IBE(357.6,^0;4^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(357.952,.04,3)
	;;=What data will be printed in this field?
	;;^DD(357.952,.04,12)
	;;=Allows only available interfaces for input.

IBDIN028
IBDIN028	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.95)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.952,.04,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1"
	;;^DD(357.952,.04,21,0)
	;;=^^1^1^2950808^
	;;^DD(357.952,.04,21,1,0)
	;;=Identifies the package interface used for input of this field.
	;;^DD(357.952,.04,"DT")
	;;=2950912
	;;^DD(357.952,.05,0)
	;;=FIELD NAME^RF^^0;5^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.952,.05,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.952,.05,21,0)
	;;=^^1^1^2950808^
	;;^DD(357.952,.05,21,1,0)
	;;=The name of the hand print field.
	;;^DD(357.952,.05,"DT")
	;;=2940823
	;;^DD(357.952,.06,0)
	;;=NUMBER OF LINES OF HAND PRINT^RNJ3,0^^0;6^K:+X'=X!(X>100)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.952,.06,3)
	;;=How many lines of hand print?
	;;^DD(357.952,.06,21,0)
	;;=^^1^1^2950808^
	;;^DD(357.952,.06,21,1,0)
	;;=The number of lines of hand print allocated for the field.
	;;^DD(357.952,.06,"DT")
	;;=2940816
	;;^DD(357.952,.08,0)
	;;=FIELD ID^RF^^0;8^K:$L(X)>10!($L(X)<2) X
	;;^DD(357.952,.08,3)
	;;=Answer must be 2-10 characters in length.
	;;^DD(357.952,.08,21,0)
	;;=^^1^1^2950808^
	;;^DD(357.952,.08,21,1,0)
	;;=An unique identifier assigned to the field.
	;;^DD(357.952,.08,"DT")
	;;=2940907
	;;^DD(357.952,.09,0)
	;;=DISPLAYED HEADER^F^^0;9^K:$L(X)>40!($L(X)<1) X
	;;^DD(357.952,.09,3)
	;;=Answer must be 1-40 characters in length.
	;;^DD(357.952,.09,21,0)
	;;=^^1^1^2950808^
	;;^DD(357.952,.09,21,1,0)
	;;=The header, if any, associated with the field.
	;;^DD(357.952,.09,"DT")
	;;=2941019
	;;^DD(357.952,.1,0)
	;;=DATA QUALIFIER^P357.98'^IBD(357.98,^0;10^Q
	;;^DD(357.952,.1,3)
	;;=What qualifier, if any, applies to this field?
	;;^DD(357.952,.1,21,0)
	;;=^^1^1^2950808^
	;;^DD(357.952,.1,21,1,0)
	;;=The data qualifier, if any, associated with the field.
	;;^DD(357.952,.1,"DT")
	;;=2941019
	;;^DD(357.952,.12,0)
	;;=ITEM NUMBER^NJ3,0^^0;12^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.952,.12,3)
	;;=Type a Number between 1 and 999, 0 Decimal Digits
	;;^DD(357.952,.12,21,0)
	;;=^^2^2^2950808^
	;;^DD(357.952,.12,21,1,0)
	;;=If the hand print area is part of a list, the item number is the position
	;;^DD(357.952,.12,21,2,0)
	;;=on the list.
	;;^DD(357.952,.12,"DT")
	;;=2950313
	;;^DD(357.952,.14,0)
	;;=PRINT TYPE^RS^0:NO, DO NOT PRINT;1:YES, NOT FOR ICR;2:YES, FOR ICR;^0;14^Q
	;;^DD(357.952,.14,3)
	;;=How should the field be printed?
	;;^DD(357.952,.14,21,0)
	;;=^^1^1^2950808^
	;;^DD(357.952,.14,21,1,0)
	;;=The print type defines the format for printing the hand print area.
	;;^DD(357.952,.14,"DT")
	;;=2950428
	;;^DD(357.952,.15,0)
	;;=READ TYPE^RS^0:NO, DO NOT READ;1:YES, READ WITHOUT ICR;2:YES, READ WITH ICR;3:YES, ICR PRINT FORMAT, READ WITHOUT ICR;^0;15^Q
	;;^DD(357.952,.15,3)
	;;=How should the field be read by the scanning software?
	;;^DD(357.952,.15,21,0)
	;;=^^1^1^2950928^^
	;;^DD(357.952,.15,21,1,0)
	;;=This defines what type of recognition should be applied to the field.
	;;^DD(357.952,.15,"DT")
	;;=2950503
	;;^DD(357.952,.17,0)
	;;=DATA ELEMENT^P359.1'^IBE(359.1,^0;17^Q
	;;^DD(357.952,.17,3)
	;;=What item of data goes in the field?
	;;^DD(357.952,.17,21,0)
	;;=^^1^1^2950808^
	;;^DD(357.952,.17,21,1,0)
	;;=This identifies the data type of the hand print field.
	;;^DD(357.952,.17,"DT")
	;;=2950427
	;;^DD(357.953,0)
	;;=PAGE INFORMATION SUB-FIELD^^.02^2
	;;^DD(357.953,0,"DT")
	;;=2950306
	;;^DD(357.953,0,"IX","B",357.953,.01)
	;;=
	;;^DD(357.953,0,"NM","PAGE INFORMATION")
	;;=
	;;^DD(357.953,0,"UP")
	;;=357.95
	;;^DD(357.953,.01,0)
	;;=PAGE NUMBER^MNJ1,0^^0;1^K:+X'=X!(X>8)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.953,.01,1,0)
	;;=^.1
	;;^DD(357.953,.01,1,1,0)
	;;=357.953^B
	;;^DD(357.953,.01,1,1,1)
	;;=S ^IBD(357.95,DA(1),3,"B",$E(X,1,30),DA)=""
	;;^DD(357.953,.01,1,1,2)
	;;=K ^IBD(357.95,DA(1),3,"B",$E(X,1,30),DA)
	;;^DD(357.953,.01,3)
	;;=Enter the pages that require documentation of specific features.
	;;^DD(357.953,.01,21,0)
	;;=^^1^1^2950803^
	;;^DD(357.953,.01,21,1,0)
	;;=The page number of the page.
	;;^DD(357.953,.01,"DT")
	;;=2950306
	;;^DD(357.953,.02,0)
	;;=SCANNABLE?^S^0:NO;1:YES;^0;2^Q
	;;^DD(357.953,.02,3)
	;;=Is this page meant to be scanned?
	;;^DD(357.953,.02,21,0)
	;;=^^1^1^2950808^^
	;;^DD(357.953,.02,21,1,0)
	;;=This documents whether or not a particular page needs to be scanned.
	;;^DD(357.953,.02,"DT")
	;;=2950306

IBDIN029
IBDIN029	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.96)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.96,0,"GL")
	;;=^IBD(357.96,
	;;^DIC("B","ENCOUNTER FORM TRACKING",357.96)
	;;=
	;;^DIC(357.96,"%D",0)
	;;=^^2^2^2951023^^
	;;^DIC(357.96,"%D",1,0)
	;;=This file is used to track the data capture efforts associated with 
	;;^DIC(357.96,"%D",2,0)
	;;=each appointment.
	;;^DD(357.96,0)
	;;=FIELD^^10^16
	;;^DD(357.96,0,"DDA")
	;;=N
	;;^DD(357.96,0,"DT")
	;;=2951211
	;;^DD(357.96,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(357.96,0,"ID",.03)
	;;=W "   ",$E($P(^(0),U,3),4,5)_"-"_$E($P(^(0),U,3),6,7)_"-"_$E($P(^(0),U,3),2,3)
	;;^DD(357.96,0,"ID",.1)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^SC(+$P(^(0),U,10),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(44,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(357.96,0,"IX","A1",357.96,.04)
	;;=
	;;^DD(357.96,0,"IX","A2",357.96,.06)
	;;=
	;;^DD(357.96,0,"IX","AC",357.96,.04)
	;;=
	;;^DD(357.96,0,"IX","AEXT",357.96,.09)
	;;=
	;;^DD(357.96,0,"IX","APTAP",357.96,.02)
	;;=
	;;^DD(357.96,0,"IX","APTAP1",357.96,.03)
	;;=
	;;^DD(357.96,0,"IX","B",357.96,.01)
	;;=
	;;^DD(357.96,0,"IX","C",357.96,.02)
	;;=
	;;^DD(357.96,0,"IX","D",357.96,.03)
	;;=
	;;^DD(357.96,0,"IX","RECD",357.96,.01)
	;;=
	;;^DD(357.96,0,"IX","RECD2",357.96,.06)
	;;=
	;;^DD(357.96,0,"IX","RECD3",357.96,.05)
	;;=
	;;^DD(357.96,0,"NM","ENCOUNTER FORM TRACKING")
	;;=
	;;^DD(357.96,.01,0)
	;;=PRINTED FORM ID^RNJ9,0X^^0;1^K X
	;;^DD(357.96,.01,1,0)
	;;=^.1
	;;^DD(357.96,.01,1,1,0)
	;;=357.96^B
	;;^DD(357.96,.01,1,1,1)
	;;=S ^IBD(357.96,"B",$E(X,1,30),DA)=""
	;;^DD(357.96,.01,1,1,2)
	;;=K ^IBD(357.96,"B",$E(X,1,30),DA)
	;;^DD(357.96,.01,1,2,0)
	;;=357.96^RECD^MUMPS
	;;^DD(357.96,.01,1,2,1)
	;;=S ^IBD(357.96,"RECD",+$P($G(^IBD(357.96,DA,0)),"^",6),+$P($G(^IBD(357.96,DA,0)),"^",5),DA)=""
	;;^DD(357.96,.01,1,2,2)
	;;=K ^IBD(357.96,"RECD",+$P($G(^IBD(357.96,DA,0)),"^",6),+$P($G(^IBD(357.96,DA,0)),"^",5),DA)
	;;^DD(357.96,.01,1,2,"%D",0)
	;;=^^2^2^2950721^^^
	;;^DD(357.96,.01,1,2,"%D",1,0)
	;;=Used to find when the encounter forms were accounted for.
	;;^DD(357.96,.01,1,2,"%D",2,0)
	;;=Also set by the .05 and .06 fields.
	;;^DD(357.96,.01,1,2,"DT")
	;;=2940718
	;;^DD(357.96,.01,3)
	;;=Can not be edited!
	;;^DD(357.96,.01,21,0)
	;;=^^2^2^2941014^
	;;^DD(357.96,.01,21,1,0)
	;;=Uniquely identifies an instance of a printed encounter form. This is the
	;;^DD(357.96,.01,21,2,0)
	;;=same as the ien.
	;;^DD(357.96,.01,"DT")
	;;=2940718
	;;^DD(357.96,.02,0)
	;;=PATIENT^RP2'^DPT(^0;2^Q
	;;^DD(357.96,.02,1,0)
	;;=^.1
	;;^DD(357.96,.02,1,1,0)
	;;=357.96^C
	;;^DD(357.96,.02,1,1,1)
	;;=S ^IBD(357.96,"C",$E(X,1,30),DA)=""
	;;^DD(357.96,.02,1,1,2)
	;;=K ^IBD(357.96,"C",$E(X,1,30),DA)
	;;^DD(357.96,.02,1,1,"DT")
	;;=2941004
	;;^DD(357.96,.02,1,2,0)
	;;=357.96^APTAP^MUMPS
	;;^DD(357.96,.02,1,2,1)
	;;=S:$P($G(^IBD(357.96,DA,0)),"^",3) ^IBD(357.96,"APTAP",X,+$P(^IBD(357.96,DA,0),"^",3),DA)=""
	;;^DD(357.96,.02,1,2,2)
	;;=K ^IBD(357.96,"APTAP",X,+$P($G(^IBD(357.96,DA,0)),"^",3),DA)
	;;^DD(357.96,.02,1,2,"%D",0)
	;;=^^2^2^2960403^^^^
	;;^DD(357.96,.02,1,2,"%D",1,0)
	;;=Cross-reference of all form ids by patient and appointment date/time.
	;;^DD(357.96,.02,1,2,"%D",2,0)
	;;=Set by both the .02 and .03 fields.
	;;^DD(357.96,.02,1,2,"DT")
	;;=2960402
	;;^DD(357.96,.02,3)
	;;=What patient was the form printed for?
	;;^DD(357.96,.02,21,0)
	;;=^^1^1^2950803^^
	;;^DD(357.96,.02,21,1,0)
	;;=The patient that had the appointment.
	;;^DD(357.96,.02,"DT")
	;;=2960402
	;;^DD(357.96,.03,0)
	;;=APPOINTMENT^D^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(357.96,.03,1,0)
	;;=^.1
	;;^DD(357.96,.03,1,1,0)
	;;=357.96^APTAP1^MUMPS
	;;^DD(357.96,.03,1,1,1)
	;;=S:$P($G(^IBD(357.96,DA,0)),"^",2) ^IBD(357.96,"APTAP",+$P(^IBD(357.96,DA,0),"^",2),X,DA)=""
	;;^DD(357.96,.03,1,1,2)
	;;=K ^IBD(357.96,"APTAP",+$P($G(^IBD(357.96,DA,0)),"^",2),DA)
	;;^DD(357.96,.03,1,1,"%D",0)
	;;=^^2^2^2960403^^^^
	;;^DD(357.96,.03,1,1,"%D",1,0)
	;;=Cross-reference of all form ids by patient and appointment date/time.  Set by
	;;^DD(357.96,.03,1,1,"%D",2,0)
	;;=both the .02 and .03 fields.
	;;^DD(357.96,.03,1,1,"DT")
	;;=2960402
	;;^DD(357.96,.03,1,2,0)
	;;=357.96^D
	;;^DD(357.96,.03,1,2,1)
	;;=S ^IBD(357.96,"D",$E(X,1,30),DA)=""
	;;^DD(357.96,.03,1,2,2)
	;;=K ^IBD(357.96,"D",$E(X,1,30),DA)
	;;^DD(357.96,.03,1,2,"%D",0)
	;;=^^2^2^2950817^
	;;^DD(357.96,.03,1,2,"%D",1,0)
	;;=Regular cross-reference for use in looking up an encounter form tracking 
	;;^DD(357.96,.03,1,2,"%D",2,0)
	;;=entry by date.
	;;^DD(357.96,.03,1,2,"DT")
	;;=2950817

IBDIN02A
IBDIN02A	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.96)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.96,.03,3)
	;;=What was the date/time of the appointment for which the form was printed?
	;;^DD(357.96,.03,21,0)
	;;=^^1^1^2950803^
	;;^DD(357.96,.03,21,1,0)
	;;=The date/time of the appointment for which the encounter form was printed.
	;;^DD(357.96,.03,"DT")
	;;=2960402
	;;^DD(357.96,.04,0)
	;;=FORM TYPE^P357.95'^IBD(357.95,^0;4^Q
	;;^DD(357.96,.04,1,0)
	;;=^.1
	;;^DD(357.96,.04,1,1,0)
	;;=357.96^A1^MUMPS
	;;^DD(357.96,.04,1,1,1)
	;;=S:'(+$P($G(^IBD(357.96,DA,0)),"^",6)) ^IBD(357.96,"A",+X,DA)=""
	;;^DD(357.96,.04,1,1,2)
	;;=K ^IBD(357.96,"A",+X,DA)
	;;^DD(357.96,.04,1,1,"%D",0)
	;;=^^1^1^2940714^^^^
	;;^DD(357.96,.04,1,1,"%D",1,0)
	;;=Used to determine if the encounter form has been accounted for.
	;;^DD(357.96,.04,1,1,"DT")
	;;=2940712
	;;^DD(357.96,.04,1,2,0)
	;;=357.96^AC
	;;^DD(357.96,.04,1,2,1)
	;;=S ^IBD(357.96,"AC",$E(X,1,30),DA)=""
	;;^DD(357.96,.04,1,2,2)
	;;=K ^IBD(357.96,"AC",$E(X,1,30),DA)
	;;^DD(357.96,.04,1,2,"%D",0)
	;;=^^1^1^2951004^
	;;^DD(357.96,.04,1,2,"%D",1,0)
	;;=A regular cross-reference of all entries by form design number.
	;;^DD(357.96,.04,1,2,"DT")
	;;=2951004
	;;^DD(357.96,.04,3)
	;;=What FORM DEFINITION TABLE is associated with the printed encounter form?
	;;^DD(357.96,.04,21,0)
	;;=^^3^3^2951218^^^^
	;;^DD(357.96,.04,21,1,0)
	;;=If the encounter form has a FORM DEFINITION TABLE, this field points to it.
	;;^DD(357.96,.04,21,2,0)
	;;=The pointer equals the .01 field of the FORM DEFINITION TABLE entry and is
	;;^DD(357.96,.04,21,3,0)
	;;=used as the form type id.                                         
	;;^DD(357.96,.04,"DT")
	;;=2951004
	;;^DD(357.96,.05,0)
	;;=DATE/TIME PRINTED^D^^0;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(357.96,.05,1,0)
	;;=^.1
	;;^DD(357.96,.05,1,1,0)
	;;=357.96^RECD3^MUMPS
	;;^DD(357.96,.05,1,1,1)
	;;=S ^IBD(357.96,"RECD",+$P($G(^IBD(357.96,DA,0)),"^",6),+X,DA)=""
	;;^DD(357.96,.05,1,1,2)
	;;=K ^IBD(357.96,"RECD",+$P($G(^IBD(357.96,DA,0)),"^",6),+X,DA)
	;;^DD(357.96,.05,1,1,"%D",0)
	;;=^^2^2^2950721^^^
	;;^DD(357.96,.05,1,1,"%D",1,0)
	;;=Used to find when the encounter forms were accounted for.
	;;^DD(357.96,.05,1,1,"%D",2,0)
	;;=Also set by the .01 and .06 fields.
	;;^DD(357.96,.05,1,1,"DT")
	;;=2940718
	;;^DD(357.96,.05,3)
	;;=When was the form printed?
	;;^DD(357.96,.05,21,0)
	;;=^^1^1^2950721^
	;;^DD(357.96,.05,21,1,0)
	;;=When the form was printed.
	;;^DD(357.96,.05,"DT")
	;;=2940718
	;;^DD(357.96,.06,0)
	;;=DATE/TIME RECEIVED IN DHCP^D^^0;6^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(357.96,.06,1,0)
	;;=^.1
	;;^DD(357.96,.06,1,1,0)
	;;=357.96^A2^MUMPS
	;;^DD(357.96,.06,1,1,1)
	;;=K:X ^IBD(357.96,"A",+$P($G(^IBD(357.96,DA,0)),"^",4),DA) S:('X)&$P($G(^IBD(357.96,DA,0)),"^",4) ^IBD(357.96,"A",$P($G(^IBD(357.96,DA,0)),"^",4),DA)=""
	;;^DD(357.96,.06,1,1,2)
	;;=K:X ^IBD(357.96,"A",+$P($G(^IBD(357.96,DA,0)),"^",4),DA) S:('X)&$P($G(^IBD(357.96,DA,0)),"^",4) ^IBD(357.96,"A",$P($G(^IBD(357.96,DA,0)),"^",4),DA)=""
	;;^DD(357.96,.06,1,1,"%D",0)
	;;=^^1^1^2940718^^^^
	;;^DD(357.96,.06,1,1,"%D",1,0)
	;;=Used to determine if the encounter form has been accounted for.
	;;^DD(357.96,.06,1,1,"DT")
	;;=2940718
	;;^DD(357.96,.06,1,2,0)
	;;=357.96^RECD2^MUMPS
	;;^DD(357.96,.06,1,2,1)
	;;=S ^IBD(357.96,"RECD",+X,+$P($G(^IBD(357.96,DA,0)),"^",5),DA)=""
	;;^DD(357.96,.06,1,2,2)
	;;=S ^IBD(357.96,"RECD",+X,+$P($G(^IBD(357.96,DA,0)),"^",5),DA)=""
	;;^DD(357.96,.06,1,2,"%D",0)
	;;=^^2^2^2950721^^^
	;;^DD(357.96,.06,1,2,"%D",1,0)
	;;=Used to find when the encounter forms were accounted for.
	;;^DD(357.96,.06,1,2,"%D",2,0)
	;;=Also set by the .01 and .05 fields.
	;;^DD(357.96,.06,1,2,"DT")
	;;=2940718
	;;^DD(357.96,.06,3)
	;;=When was the form received?
	;;^DD(357.96,.06,21,0)
	;;=^^1^1^2950803^^
	;;^DD(357.96,.06,21,1,0)
	;;=The date and time that the form is received in DHCP.
	;;^DD(357.96,.06,23,0)
	;;=^^1^1^2950928^
	;;^DD(357.96,.06,23,1,0)
	;;=Don't mark a form as received until all of its pages are received.
	;;^DD(357.96,.06,"DT")
	;;=2940718
	;;^DD(357.96,.07,0)
	;;=SOURCE OF FORM ID^RS^1:IB;2:PANDAS;3:TELEFORM;4:PEN;5:WORKSTATION;99:OTHER;^0;7^Q
	;;^DD(357.96,.07,21,0)
	;;=^^1^1^2950721^
	;;^DD(357.96,.07,21,1,0)
	;;=This field documents which means of data capture is being used.
	;;^DD(357.96,.07,"DT")
	;;=2941004
	;;^DD(357.96,.08,0)
	;;=FORM TYPE ID (EXTERNAL SOURCE)^F^^0;8^K:$L(X)>30!($L(X)<2) X
	;;^DD(357.96,.08,3)
	;;=Answer must be 2-30 characters in length.
	;;^DD(357.96,.08,21,0)
	;;=^^2^2^2950721^^
	;;^DD(357.96,.08,21,1,0)
	;;=If the form was created externally to DHCP and was assigned
	;;^DD(357.96,.08,21,2,0)
	;;=an id externally, then this field can be used to document that.

IBDIN02B
IBDIN02B	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.96)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.96,.08,"DT")
	;;=2941017
	;;^DD(357.96,.09,0)
	;;=EXTERNAL PRINTED FORM ID^F^^0;9^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>10!($L(X)<4) X
	;;^DD(357.96,.09,1,0)
	;;=^.1
	;;^DD(357.96,.09,1,1,0)
	;;=357.96^AEXT
	;;^DD(357.96,.09,1,1,1)
	;;=S ^IBD(357.96,"AEXT",$E(X,1,30),DA)=""
	;;^DD(357.96,.09,1,1,2)
	;;=K ^IBD(357.96,"AEXT",$E(X,1,30),DA)
	;;^DD(357.96,.09,1,1,"%D",0)
	;;=^^1^1^2941004^
	;;^DD(357.96,.09,1,1,"%D",1,0)
	;;=This is a regular cross reference on the external format of the form id
	;;^DD(357.96,.09,1,1,"DT")
	;;=2941004
	;;^DD(357.96,.09,3)
	;;=Answer must be 4-10 characters in length.
	;;^DD(357.96,.09,21,0)
	;;=^^2^2^2950721^^^
	;;^DD(357.96,.09,21,1,0)
	;;=This is the external format of the form id (internal entry number)
	;;^DD(357.96,.09,21,2,0)
	;;=that can be printed on forms and used for look-up.  
	;;^DD(357.96,.09,"DT")
	;;=2941017
	;;^DD(357.96,.1,0)
	;;=CLINIC^P44'^SC(^0;10^Q
	;;^DD(357.96,.1,21,0)
	;;=^^1^1^2950721^
	;;^DD(357.96,.1,21,1,0)
	;;=This is the clinic of the appointment.
	;;^DD(357.96,.1,"DT")
	;;=2941011
	;;^DD(357.96,.11,0)
	;;=PROCESSING STATUS^S^1:PRINTED;2:SCANNED;3:SENT TO PCE OKAY;4:SENT TO PCE WITH ERROR RETURNED;11:PENDING MORE PAGES;12:SCANNED/ERRORS DETECTED,NOT TRANSMITTED;^0;11^Q
	;;^DD(357.96,.11,21,0)
	;;=^^15^15^2951211^^^
	;;^DD(357.96,.11,21,1,0)
	;;=This is the processing status of the form.  This field is automatically
	;;^DD(357.96,.11,21,2,0)
	;;=updated by the system.  When a form is printed for a patient an entry
	;;^DD(357.96,.11,21,3,0)
	;;=is created in this file and the processing status is set to printed.
	;;^DD(357.96,.11,21,4,0)
	;;=When data is received by DHCP from the scanner the status is updated
	;;^DD(357.96,.11,21,5,0)
	;;=to Scanned.  After the data is processed by PCE the status is updated
	;;^DD(357.96,.11,21,6,0)
	;;=to show the correct status. 
	;;^DD(357.96,.11,21,7,0)
	;;= 
	;;^DD(357.96,.11,21,8,0)
	;;=For multi-page forms, when not all pages have been scanned, the status
	;;^DD(357.96,.11,21,9,0)
	;;=is set to Pending Pages.  The data is stored in this file from the 
	;;^DD(357.96,.11,21,10,0)
	;;=scanned pages and merged with the rest of the data when all pages have
	;;^DD(357.96,.11,21,11,0)
	;;=been scanned.  Then the complete data is sent to PCE.
	;;^DD(357.96,.11,21,12,0)
	;;= 
	;;^DD(357.96,.11,21,13,0)
	;;=This is used to prevent sending data from a form to PCE more that once.
	;;^DD(357.96,.11,21,14,0)
	;;=The only exception is that if PCE returns an error, PCE did not store 
	;;^DD(357.96,.11,21,15,0)
	;;=any data and the form may be re-scanned.
	;;^DD(357.96,.11,"DT")
	;;=2941014
	;;^DD(357.96,.12,0)
	;;=ERROR^F^^0;12^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.96,.12,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.96,.12,21,0)
	;;=^^1^1^2950721^
	;;^DD(357.96,.12,21,1,0)
	;;=This can be used to document any error that occurred.
	;;^DD(357.96,.12,"DT")
	;;=2941012
	;;^DD(357.96,.13,0)
	;;=MANUAL DATA ENTRY DETECTED^S^0:NO;1:YES;^0;13^Q
	;;^DD(357.96,.13,3)
	;;=Enter 'Yes' if manual data entry for this form has been done.
	;;^DD(357.96,.13,21,0)
	;;=^^4^4^2951218^^
	;;^DD(357.96,.13,21,1,0)
	;;=This field is automatically set if manual data entry on a form has been
	;;^DD(357.96,.13,21,2,0)
	;;=detected by any means.  This is used to know if data from all forms has
	;;^DD(357.96,.13,21,3,0)
	;;=been received.  If manual data entry is detected then the form processing
	;;^DD(357.96,.13,21,4,0)
	;;=will be considered complete even if scanning has not been completed.
	;;^DD(357.96,.13,"DT")
	;;=2951211
	;;^DD(357.96,1,0)
	;;=DYNAMIC LIST ITEMS^357.961^^1;0
	;;^DD(357.96,1,21,0)
	;;=^^2^2^2950721^
	;;^DD(357.96,1,21,1,0)
	;;=This is used to store a lookup table for lists printed on forms
	;;^DD(357.96,1,21,2,0)
	;;=where the list was created at print time rather than design time.
	;;^DD(357.96,1,"DT")
	;;=2950721
	;;^DD(357.96,9,0)
	;;=SCANNED PAGES^357.969^^9;0
	;;^DD(357.96,9,21,0)
	;;=^^1^1^2950721^
	;;^DD(357.96,9,21,1,0)
	;;=A list of pages that should be scanned.
	;;^DD(357.96,10,0)
	;;=RAW SCANNED DATA^357.9601A^^10;0
	;;^DD(357.96,10,21,0)
	;;=^^3^3^2950721^
	;;^DD(357.96,10,21,1,0)
	;;=This mulitiple holds the raw data from pages that have been scanned,
	;;^DD(357.96,10,21,2,0)
	;;=pending the receipt of more pages. The data will not be processed
	;;^DD(357.96,10,21,3,0)
	;;=until all pages that should be scanned are received.
	;;^DD(357.9601,0)
	;;=RAW SCANNED DATA SUB-FIELD^^.01^1
	;;^DD(357.9601,0,"DT")
	;;=2950223
	;;^DD(357.9601,0,"IX","B",357.9601,.01)
	;;=
	;;^DD(357.9601,0,"NM","RAW SCANNED DATA")
	;;=

IBDIN02C
IBDIN02C	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.96)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.9601,0,"UP")
	;;=357.96
	;;^DD(357.9601,.01,0)
	;;=RAW SCANNED DATA^MF^^0;1^K:$L(X)>180!($L(X)<1) X
	;;^DD(357.9601,.01,1,0)
	;;=^.1
	;;^DD(357.9601,.01,1,1,0)
	;;=357.9601^B
	;;^DD(357.9601,.01,1,1,1)
	;;=S ^IBD(357.96,DA(1),10,"B",$E(X,1,30),DA)=""
	;;^DD(357.9601,.01,1,1,2)
	;;=K ^IBD(357.96,DA(1),10,"B",$E(X,1,30),DA)
	;;^DD(357.9601,.01,3)
	;;=Answer must be 1-180 characters in length.
	;;^DD(357.9601,.01,21,0)
	;;=^^1^1^2950721^
	;;^DD(357.9601,.01,21,1,0)
	;;=One line of the raw data.
	;;^DD(357.9601,.01,"DT")
	;;=2950223
	;;^DD(357.961,0)
	;;=DYNAMIC LIST ITEMS SUB-FIELD^^.1^6
	;;^DD(357.961,0,"DT")
	;;=2950124
	;;^DD(357.961,0,"IX","AC",357.961,.06)
	;;=
	;;^DD(357.961,0,"IX","B",357.961,.01)
	;;=
	;;^DD(357.961,0,"NM","DYNAMIC LIST ITEMS")
	;;=
	;;^DD(357.961,0,"UP")
	;;=357.96
	;;^DD(357.961,.01,0)
	;;=ITEM NUMBER^MNJ4,0^^0;1^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.961,.01,1,0)
	;;=^.1
	;;^DD(357.961,.01,1,1,0)
	;;=357.961^B
	;;^DD(357.961,.01,1,1,1)
	;;=S ^IBD(357.96,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(357.961,.01,1,1,2)
	;;=K ^IBD(357.96,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(357.961,.01,3)
	;;=Type a Number between 1 and 9999, 0 Decimal Digits
	;;^DD(357.961,.01,21,0)
	;;=^^1^1^2950721^
	;;^DD(357.961,.01,21,1,0)
	;;=The  number of the item on the particular list where it appears.
	;;^DD(357.961,.01,"DT")
	;;=2950721
	;;^DD(357.961,.03,0)
	;;=DATA TYPE^R*P357.6'^IBE(357.6,^0;3^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(357.961,.03,3)
	;;=What type of data does the bubble relate to?
	;;^DD(357.961,.03,12)
	;;=Must be an available interface for accepting input.
	;;^DD(357.961,.03,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1"
	;;^DD(357.961,.03,21,0)
	;;=^^1^1^2950721^
	;;^DD(357.961,.03,21,1,0)
	;;=The Package Interface that describes the data.
	;;^DD(357.961,.03,"DT")
	;;=2941216
	;;^DD(357.961,.04,0)
	;;=VALUE TO PASS^FXO^^0;4^X:$P($G(^IBD(357.96,D0,1,D1,0)),U,3) $G(^IBE(357.6,$P($G(^(0)),U,3),9))
	;;^DD(357.961,.04,2)
	;;=S Y(0)=Y X:$P($G(^IBD(357.96,D0,1,D1,0)),U,3) $G(^IBE(357.6,$P($G(^(0)),U,3),14))
	;;^DD(357.961,.04,2.1)
	;;=X:$P($G(^IBD(357.96,D0,1,D1,0)),U,3) $G(^IBE(357.6,$P($G(^(0)),U,3),14))
	;;^DD(357.961,.04,3)
	;;=What value should be entered into the database?
	;;^DD(357.961,.04,21,0)
	;;=^^2^2^2950927^^^
	;;^DD(357.961,.04,21,1,0)
	;;=The value associated with the item on the list. It will usually
	;;^DD(357.961,.04,21,2,0)
	;;=be a code or pointer.
	;;^DD(357.961,.04,"DT")
	;;=2941216
	;;^DD(357.961,.06,0)
	;;=FIELD ID^F^^0;6^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>10!($L(X)<1) X
	;;^DD(357.961,.06,1,0)
	;;=^.1
	;;^DD(357.961,.06,1,1,0)
	;;=357.961^AC^MUMPS
	;;^DD(357.961,.06,1,1,1)
	;;=S ^IBD(357.96,DA(1),"AC",X,$P(^IBD(357.96,DA(1),1,DA,0),"^"),DA)=""
	;;^DD(357.961,.06,1,1,2)
	;;=K ^IBD(357.96,DA(1),"AC",X,$P(^IBD(357.96,DA(1),1,DA,0),"^"),DA)
	;;^DD(357.961,.06,1,1,"DT")
	;;=2950124
	;;^DD(357.961,.06,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(357.961,.06,21,0)
	;;=^^2^2^2950721^
	;;^DD(357.961,.06,21,1,0)
	;;=This field is used to document the form object the list item
	;;^DD(357.961,.06,21,2,0)
	;;=belongs to.
	;;^DD(357.961,.06,"DT")
	;;=2950124
	;;^DD(357.961,.08,0)
	;;=DISPLAYED TEXT^F^^0;8^K:$L(X)>100!($L(X)<1) X
	;;^DD(357.961,.08,3)
	;;=What text is displayed with the bubble?
	;;^DD(357.961,.08,21,0)
	;;=^^2^2^2950721^
	;;^DD(357.961,.08,21,1,0)
	;;=The text that the provider sees appearing on the form that is 
	;;^DD(357.961,.08,21,2,0)
	;;=associated witht he item.
	;;^DD(357.961,.08,"DT")
	;;=2941216
	;;^DD(357.961,.1,0)
	;;=DATA QUALIFIER^P357.98'^IBD(357.98,^0;10^Q
	;;^DD(357.961,.1,21,0)
	;;=^^2^2^2950721^
	;;^DD(357.961,.1,21,1,0)
	;;=This is the data qualifier that may be optionally associated
	;;^DD(357.961,.1,21,2,0)
	;;=with the item.
	;;^DD(357.961,.1,"DT")
	;;=2950124
	;;^DD(357.969,0)
	;;=SCANNED PAGES SUB-FIELD^^.02^2
	;;^DD(357.969,0,"DT")
	;;=2950315
	;;^DD(357.969,0,"IX","B",357.969,.01)
	;;=
	;;^DD(357.969,0,"NM","SCANNED PAGES")
	;;=
	;;^DD(357.969,0,"UP")
	;;=357.96
	;;^DD(357.969,.01,0)
	;;=PAGE NUMBER^MNJ1,0^^0;1^K:+X'=X!(X>2)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.969,.01,1,0)
	;;=^.1
	;;^DD(357.969,.01,1,1,0)
	;;=357.969^B
	;;^DD(357.969,.01,1,1,1)
	;;=S ^IBD(357.96,DA(1),9,"B",$E(X,1,30),DA)=""
	;;^DD(357.969,.01,1,1,2)
	;;=K ^IBD(357.96,DA(1),9,"B",$E(X,1,30),DA)
	;;^DD(357.969,.01,3)
	;;=Enter the page numbers of the scannable pages.
	;;^DD(357.969,.01,21,0)
	;;=^^1^1^2950721^
	;;^DD(357.969,.01,21,1,0)
	;;=The page number of a page that should be scanned.

IBDIN02D
IBDIN02D	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.96)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.969,.01,"DT")
	;;=2950222
	;;^DD(357.969,.02,0)
	;;=DATE/TIME RECEIVED^D^^0;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
	;;^DD(357.969,.02,3)
	;;=What date and time was the page received?
	;;^DD(357.969,.02,21,0)
	;;=^^1^1^2950721^
	;;^DD(357.969,.02,21,1,0)
	;;=The date and time that the page was received, ie, input.
	;;^DD(357.969,.02,"DT")
	;;=2950315

IBDIN02E
IBDIN02E	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.97)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.97,0,"GL")
	;;=^IBD(357.97,
	;;^DIC("B","ENCOUNTER FORM COUNTERS",357.97)
	;;=
	;;^DIC(357.97,"%D",0)
	;;=^^1^1^2950905^^^
	;;^DIC(357.97,"%D",1,0)
	;;=This file contains the counters needed by the encounter form utilities.
	;;^DD(357.97,0)
	;;=FIELD^^.02^2
	;;^DD(357.97,0,"DDA")
	;;=N
	;;^DD(357.97,0,"IX","B",357.97,.01)
	;;=
	;;^DD(357.97,0,"NM","ENCOUNTER FORM COUNTERS")
	;;=
	;;^DD(357.97,.01,0)
	;;=LAST FIELD LOCATOR TABLE ID^RNJ9,0X^^0;1^K X
	;;^DD(357.97,.01,1,0)
	;;=^.1
	;;^DD(357.97,.01,1,1,0)
	;;=357.97^B
	;;^DD(357.97,.01,1,1,1)
	;;=S ^IBD(357.97,"B",$E(X,1,30),DA)=""
	;;^DD(357.97,.01,1,1,2)
	;;=K ^IBD(357.97,"B",$E(X,1,30),DA)
	;;^DD(357.97,.01,3)
	;;=Can not be edited!
	;;^DD(357.97,.01,21,0)
	;;=^^1^1^2940713^
	;;^DD(357.97,.01,21,1,0)
	;;=Used to assign a numeric ID to the FIELD LOCATOR TABLEs.
	;;^DD(357.97,.01,"DT")
	;;=2940713
	;;^DD(357.97,.02,0)
	;;=LAST PRINTED FORM ID^NJ9,0^^0;2^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.97,.02,3)
	;;=Type a Number between 0 and 999999999, 0 Decimal Digits
	;;^DD(357.97,.02,21,0)
	;;=^^1^1^2940713^
	;;^DD(357.97,.02,21,1,0)
	;;=Used to assign a numeric ID to each printed encounter form.
	;;^DD(357.97,.02,"DT")
	;;=2940713

IBDIN02F
IBDIN02F	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.98)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.98,0,"GL")
	;;=^IBD(357.98,
	;;^DIC("B","AICS DATA QUALIFIERS",357.98)
	;;=
	;;^DIC(357.98,"%D",0)
	;;=^^1^1^2950927^^^
	;;^DIC(357.98,"%D",1,0)
	;;=A table of qualifiers used by the PCE Generic Device Interface.
	;;^DD(357.98,0)
	;;=FIELD^^.03^3
	;;^DD(357.98,0,"DDA")
	;;=N
	;;^DD(357.98,0,"DT")
	;;=2950417
	;;^DD(357.98,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(357.98,0,"IX","B",357.98,.01)
	;;=
	;;^DD(357.98,0,"IX","C",357.98,.03)
	;;=
	;;^DD(357.98,0,"NM","AICS DATA QUALIFIERS")
	;;=
	;;^DD(357.98,0,"PT",357.13,.1)
	;;=
	;;^DD(357.98,0,"PT",357.14,.1)
	;;=
	;;^DD(357.98,0,"PT",357.22,.09)
	;;=
	;;^DD(357.98,0,"PT",357.6,13)
	;;=
	;;^DD(357.98,0,"PT",357.613,.01)
	;;=
	;;^DD(357.98,0,"PT",357.931,.09)
	;;=
	;;^DD(357.98,0,"PT",357.951,.1)
	;;=
	;;^DD(357.98,0,"PT",357.952,.1)
	;;=
	;;^DD(357.98,0,"PT",357.961,.1)
	;;=
	;;^DD(357.98,0,"PT",358.613,.01)
	;;=
	;;^DD(357.98,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.98,.01,1,0)
	;;=^.1
	;;^DD(357.98,.01,1,1,0)
	;;=357.98^B
	;;^DD(357.98,.01,1,1,1)
	;;=S ^IBD(357.98,"B",$E(X,1,30),DA)=""
	;;^DD(357.98,.01,1,1,2)
	;;=K ^IBD(357.98,"B",$E(X,1,30),DA)
	;;^DD(357.98,.01,3)
	;;=Answer must be 3-40 characters in length.
	;;^DD(357.98,.01,21,0)
	;;=^^1^1^2950721^
	;;^DD(357.98,.01,21,1,0)
	;;=The name given to the data qualifier.
	;;^DD(357.98,.01,"DT")
	;;=2950410
	;;^DD(357.98,.02,0)
	;;=CODE^RF^^0;2^K:$L(X)>3!($L(X)<1) X
	;;^DD(357.98,.02,3)
	;;=Answer must be 1-3 characters in length.
	;;^DD(357.98,.02,21,0)
	;;=^^2^2^2950721^
	;;^DD(357.98,.02,21,1,0)
	;;=The code for the data qualifier, as defined by the PCE Generic Device
	;;^DD(357.98,.02,21,2,0)
	;;=Interface.
	;;^DD(357.98,.02,"DT")
	;;=2941018
	;;^DD(357.98,.03,0)
	;;=RECOMMENDED HEADER^F^^0;3^K:$L(X)>12!($L(X)<1) X
	;;^DD(357.98,.03,1,0)
	;;=^.1
	;;^DD(357.98,.03,1,1,0)
	;;=357.98^C
	;;^DD(357.98,.03,1,1,1)
	;;=S ^IBD(357.98,"C",$E(X,1,30),DA)=""
	;;^DD(357.98,.03,1,1,2)
	;;=K ^IBD(357.98,"C",$E(X,1,30),DA)
	;;^DD(357.98,.03,1,1,"DT")
	;;=2950829
	;;^DD(357.98,.03,3)
	;;=Answer must be 1-12 characters in length.
	;;^DD(357.98,.03,21,0)
	;;=^^2^2^2950417^
	;;^DD(357.98,.03,21,1,0)
	;;=The recommended header will be used as the default header when designing a
	;;^DD(357.98,.03,21,2,0)
	;;=form.
	;;^DD(357.98,.03,"DT")
	;;=2950829

IBDIN02G
IBDIN02G	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(357.98)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.98)
	;;=^IBD(357.98,
	;;^UTILITY(U,$J,357.98,0)
	;;=AICS DATA QUALIFIERS^357.98I^23^21
	;;^UTILITY(U,$J,357.98,1,0)
	;;=NONE APPLICABLE^ 
	;;^UTILITY(U,$J,357.98,2,0)
	;;=PRIMARY^P^P
	;;^UTILITY(U,$J,357.98,3,0)
	;;=SECONDARY^S^S
	;;^UTILITY(U,$J,357.98,6,0)
	;;=ACTIVE^A^A
	;;^UTILITY(U,$J,357.98,7,0)
	;;=INACTIVE^I^I
	;;^UTILITY(U,$J,357.98,8,0)
	;;=HISTORICAL^H
	;;^UTILITY(U,$J,357.98,9,0)
	;;=ADD TO PROBLEM LIST^1^ADD
	;;^UTILITY(U,$J,357.98,10,0)
	;;=SERVICE CONNECTED^1^SC
	;;^UTILITY(U,$J,357.98,11,0)
	;;=AGENT ORANGE RELATED^1^AO
	;;^UTILITY(U,$J,357.98,12,0)
	;;=IONIZING RADIATION RELATED^1^IR
	;;^UTILITY(U,$J,357.98,13,0)
	;;=ENVIRONMENTAL CONTAMINANTS RELATED^1^EC
	;;^UTILITY(U,$J,357.98,14,0)
	;;=ABNORMAL RESULT^A^ABNORM
	;;^UTILITY(U,$J,357.98,15,0)
	;;=NORMAL RESULT^N^NORM
	;;^UTILITY(U,$J,357.98,16,0)
	;;=POOR UNDERSTANDING^1^POOR
	;;^UTILITY(U,$J,357.98,17,0)
	;;=FAIR UNDERSTANDING^2^FAIR
	;;^UTILITY(U,$J,357.98,18,0)
	;;=GOOD UNDERSTANDING^3^GOOD
	;;^UTILITY(U,$J,357.98,19,0)
	;;=UNDERSTANDING NOT ASSESSED^4^N/A
	;;^UTILITY(U,$J,357.98,20,0)
	;;=PATIENT ED REFUSED^5^REFUSED
	;;^UTILITY(U,$J,357.98,21,0)
	;;=MINIMAL SEVERITY^M^MINIMAL
	;;^UTILITY(U,$J,357.98,22,0)
	;;=MODERATE SEVERITY^MO^MODERATE
	;;^UTILITY(U,$J,357.98,23,0)
	;;=HEAVY SEVERITY^H^SEVERE

IBDIN02H
IBDIN02H	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(357.99)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.99,0,"GL")
	;;=^IBD(357.99,
	;;^DIC("B","PRINT MANAGER CLINIC GROUPS",357.99)
	;;=
	;;^DIC(357.99,"%D",0)
	;;=^^2^2^2951017^^^
	;;^DIC(357.99,"%D",1,0)
	;;=This file is used to create groups of clinics for use by the
	;;^DIC(357.99,"%D",2,0)
	;;=Print Manager.
	;;^DD(357.99,0)
	;;=FIELD^^11^3
	;;^DD(357.99,0,"DT")
	;;=2950201
	;;^DD(357.99,0,"IX","B",357.99,.01)
	;;=
	;;^DD(357.99,0,"NM","PRINT MANAGER CLINIC GROUPS")
	;;=
	;;^DD(357.99,0,"PT",357.091,.06)
	;;=
	;;^DD(357.99,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.99,.01,1,0)
	;;=^.1
	;;^DD(357.99,.01,1,1,0)
	;;=357.99^B
	;;^DD(357.99,.01,1,1,1)
	;;=S ^IBD(357.99,"B",$E(X,1,30),DA)=""
	;;^DD(357.99,.01,1,1,2)
	;;=K ^IBD(357.99,"B",$E(X,1,30),DA)
	;;^DD(357.99,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.99,.01,21,0)
	;;=^^1^1^2950721^
	;;^DD(357.99,.01,21,1,0)
	;;=The name given to the group of clinics.
	;;^DD(357.99,.01,"DEL",1,0)
	;;=I $O(^IBD(357.09,"ACG",DA,0)) W !,"You must remove this group from any Print Parameters to Delete!"
	;;^DD(357.99,.01,"DT")
	;;=2941208
	;;^DD(357.99,10,0)
	;;=CLINICS^357.9901PA^^10;0
	;;^DD(357.99,10,12)
	;;=Only clinics can be selected.
	;;^DD(357.99,10,12.1)
	;;=S DIC("S")="I $P(^(0),U,2)=""C"""
	;;^DD(357.99,10,21,0)
	;;=^^1^1^2950721^^^
	;;^DD(357.99,10,21,1,0)
	;;=A list of clinics contained in the group.
	;;^DD(357.99,10,23,0)
	;;=^^1^1^2950721^^^
	;;^DD(357.99,10,23,1,0)
	;;= 
	;;^DD(357.99,11,0)
	;;=DIVISION^357.9911PA^^11;0
	;;^DD(357.9901,0)
	;;=CLINICS SUB-FIELD^^.01^1
	;;^DD(357.9901,0,"DT")
	;;=2950201
	;;^DD(357.9901,0,"IX","B",357.9901,.01)
	;;=
	;;^DD(357.9901,0,"NM","CLINICS")
	;;=
	;;^DD(357.9901,0,"UP")
	;;=357.99
	;;^DD(357.9901,.01,0)
	;;=CLINICS^M*P44'^SC(^0;1^S DIC("S")="I $P(^(0),U,3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(357.9901,.01,1,0)
	;;=^.1
	;;^DD(357.9901,.01,1,1,0)
	;;=357.9901^B
	;;^DD(357.9901,.01,1,1,1)
	;;=S ^IBD(357.99,DA(1),10,"B",$E(X,1,30),DA)=""
	;;^DD(357.9901,.01,1,1,2)
	;;=K ^IBD(357.99,DA(1),10,"B",$E(X,1,30),DA)
	;;^DD(357.9901,.01,12)
	;;=Only clinics can be selected.
	;;^DD(357.9901,.01,12.1)
	;;=S DIC("S")="I $P(^(0),U,3)=""C"""
	;;^DD(357.9901,.01,21,0)
	;;=^^2^2^2950721^^
	;;^DD(357.9901,.01,21,1,0)
	;;= 
	;;^DD(357.9901,.01,21,2,0)
	;;=A clinic contained in the group.
	;;^DD(357.9901,.01,"DT")
	;;=2950201
	;;^DD(357.9911,0)
	;;=DIVISION SUB-FIELD^^.01^1
	;;^DD(357.9911,0,"DT")
	;;=2941012
	;;^DD(357.9911,0,"IX","B",357.9911,.01)
	;;=
	;;^DD(357.9911,0,"NM","DIVISION")
	;;=
	;;^DD(357.9911,0,"UP")
	;;=357.99
	;;^DD(357.9911,.01,0)
	;;=DIVISION^P40.8'^DG(40.8,^0;1^Q
	;;^DD(357.9911,.01,1,0)
	;;=^.1
	;;^DD(357.9911,.01,1,1,0)
	;;=357.9911^B
	;;^DD(357.9911,.01,1,1,1)
	;;=S ^IBD(357.99,DA(1),11,"B",$E(X,1,30),DA)=""
	;;^DD(357.9911,.01,1,1,2)
	;;=K ^IBD(357.99,DA(1),11,"B",$E(X,1,30),DA)
	;;^DD(357.9911,.01,21,0)
	;;=^^1^1^2950721^^
	;;^DD(357.9911,.01,21,1,0)
	;;=A division whose clinics belong to the group.
	;;^DD(357.9911,.01,"DT")
	;;=2941012

IBDIN02I
IBDIN02I	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358,0,"GL")
	;;=^IBE(358,
	;;^DIC("B","IMP/EXP ENCOUNTER FORM",358)
	;;=
	;;^DIC(358,"%D",0)
	;;=^^1^1^2940829^^^^
	;;^DIC(358,"%D",1,0)
	;;=Used by the import/export utility as a workspace.
	;;^DIC(358,"%D",2,0)
	;;=This file is nearly identical to file #357. It is used by the Import/Export
	;;^DIC(358,"%D",3,0)
	;;=Utility as a temporary staging area for data from that file that is being
	;;^DIC(358,"%D",4,0)
	;;=imported or exported.
	;;^DD(358,0)
	;;=FIELD^^.17^18
	;;^DD(358,0,"DDA")
	;;=N
	;;^DD(358,0,"DT")
	;;=2951024
	;;^DD(358,0,"ID",.03)
	;;=W "   ",$P(^(0),U,3)
	;;^DD(358,0,"IX","AB",358,.01)
	;;=
	;;^DD(358,0,"IX","AC",358,.01)
	;;=
	;;^DD(358,0,"IX","AG",358,.01)
	;;=
	;;^DD(358,0,"IX","AT",358,.01)
	;;=
	;;^DD(358,0,"IX","AU",358,.01)
	;;=
	;;^DD(358,0,"IX","B",358,.01)
	;;=
	;;^DD(358,0,"IX","C",358,.07)
	;;=
	;;^DD(358,0,"IX","D",358,.04)
	;;=
	;;^DD(358,0,"NM","IMP/EXP ENCOUNTER FORM")
	;;=
	;;^DD(358,0,"PT",358.1,.02)
	;;=
	;;^DD(358,.01,0)
	;;=NAME^RFX^^0;1^K:X[""""!($A(X)=45) X I $D(X) S X=$$UP^XLFSTR(X) K:$L(X)>30!($L(X)<3) X
	;;^DD(358,.01,1,0)
	;;=^.1
	;;^DD(358,.01,1,1,0)
	;;=358^B
	;;^DD(358,.01,1,1,1)
	;;=S ^IBE(358,"B",$E(X,1,30),DA)=""
	;;^DD(358,.01,1,1,2)
	;;=K ^IBE(358,"B",$E(X,1,30),DA)
	;;^DD(358,.01,1,2,0)
	;;=358^AT^MUMPS
	;;^DD(358,.01,1,2,1)
	;;=Q
	;;^DD(358,.01,1,2,2)
	;;=Q
	;;^DD(358,.01,1,2,"%D",0)
	;;=^^4^4^2931124^
	;;^DD(358,.01,1,2,"%D",1,0)
	;;=This cross-reference will be used to store the text of the compiled form.
	;;^DD(358,.01,1,2,"%D",2,0)
	;;=The format will be ..."AT",form ien,row #)=text line. The index will be
	;;^DD(358,.01,1,2,"%D",3,0)
	;;=created by the 'compile' action of the encounter form utilities - it is
	;;^DD(358,.01,1,2,"%D",4,0)
	;;=optional.
	;;^DD(358,.01,1,2,"DT")
	;;=2931124
	;;^DD(358,.01,1,3,0)
	;;=358^AC^MUMPS
	;;^DD(358,.01,1,3,1)
	;;=Q
	;;^DD(358,.01,1,3,2)
	;;=Q
	;;^DD(358,.01,1,3,"%D",0)
	;;=^^4^4^2940216^
	;;^DD(358,.01,1,3,"%D",1,0)
	;;=This cross-reference will be used to store the special controls needed
	;;^DD(358,.01,1,3,"%D",2,0)
	;;=(bold on, bold off, etc.) to print the compiled form. The format will be
	;;^DD(358,.01,1,3,"%D",3,0)
	;;=..."AC",form ien,row #,column # )=controls. The index will be created by
	;;^DD(358,.01,1,3,"%D",4,0)
	;;=the 'compile' action of the encounter form utilities - it is optional.
	;;^DD(358,.01,1,3,"DT")
	;;=2931124
	;;^DD(358,.01,1,4,0)
	;;=358^AU^MUMPS
	;;^DD(358,.01,1,4,1)
	;;=Q
	;;^DD(358,.01,1,4,2)
	;;=Q
	;;^DD(358,.01,1,4,"%D",0)
	;;=^^4^4^2931124^
	;;^DD(358,.01,1,4,"%D",1,0)
	;;=This cross-reference will be used to store the underlining of the compiled
	;;^DD(358,.01,1,4,"%D",2,0)
	;;=form. The format will be ...,"AU",form ien,row #)=underlining . The index
	;;^DD(358,.01,1,4,"%D",3,0)
	;;=will be created by the 'compile' action of the encounter form utilities -
	;;^DD(358,.01,1,4,"%D",4,0)
	;;=it is optional.
	;;^DD(358,.01,1,4,"DT")
	;;=2931124
	;;^DD(358,.01,1,5,0)
	;;=358^AG^MUMPS
	;;^DD(358,.01,1,5,1)
	;;=Q
	;;^DD(358,.01,1,5,2)
	;;=Q
	;;^DD(358,.01,1,5,"%D",0)
	;;=^^5^5^2931124^
	;;^DD(358,.01,1,5,"%D",1,0)
	;;=This cross-reference will be used to store strings of graphics characters
	;;^DD(358,.01,1,5,"%D",2,0)
	;;=(TLC,TRC, etc.) needed for the compiled form. The format will be
	;;^DD(358,.01,1,5,"%D",3,0)
	;;=..."AG",form ien,row #,column # )=graphics string . The index will be
	;;^DD(358,.01,1,5,"%D",4,0)
	;;=created by the 'compile' action of the encounter form utilities - it is
	;;^DD(358,.01,1,5,"%D",5,0)
	;;=optional.
	;;^DD(358,.01,1,5,"DT")
	;;=2931124
	;;^DD(358,.01,1,6,0)
	;;=358^AB^MUMPS
	;;^DD(358,.01,1,6,1)
	;;=Q
	;;^DD(358,.01,1,6,2)
	;;=Q
	;;^DD(358,.01,1,6,"%D",0)
	;;=^^4^4^2940606^^
	;;^DD(358,.01,1,6,"%D",1,0)
	;;=This cross-reference will be used to store the boxes needed for the compiled
	;;^DD(358,.01,1,6,"%D",2,0)
	;;=forms. The format will be ..."AB",form ien,row #,column #, Block ien)=
	;;^DD(358,.01,1,6,"%D",3,0)
	;;=box width^box height. The index will be created by the 'compile'
	;;^DD(358,.01,1,6,"%D",4,0)
	;;=action of the encounter form utilities.
	;;^DD(358,.01,1,6,"DT")
	;;=2940606
	;;^DD(358,.01,3)
	;;=The form name must be 3-30 uppercase characters in length.
	;;^DD(358,.01,21,0)
	;;=^^2^2^2931110^^
	;;^DD(358,.01,21,1,0)
	;;= 
	;;^DD(358,.01,21,2,0)
	;;=The name of the encounter form.
	;;^DD(358,.01,"DEL",1,0)
	;;=I 1 W "...Encounter Forms can only be deleted through the",!," DELETE UNUSED FORM action in the Encounter Form Utilities!"
	;;^DD(358,.01,"DT")
	;;=2940606
	;;^DD(358,.02,0)
	;;=SIMPLEX/DUPLEX^S^0:SIMPLEX;1:DUPLEX,LONG-EDGE BINDING;2:DUPLEX,SHORT-EDGE BINDING;^0;2^Q

IBDIN02J
IBDIN02J	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358,.02,3)
	;;=SIMPLEX means one-sided, DUPLEX means two-sided. SHORT-EDGE BINDING is for attaching forms by the top, LONG-EDGE BINDING is for attaching forms along the side.
	;;^DD(358,.02,21,0)
	;;=^^1^1^2940628^
	;;^DD(358,.02,21,1,0)
	;;=Allows forms to be printed either one-sided or two-sided.
	;;^DD(358,.02,"DT")
	;;=2940628
	;;^DD(358,.03,0)
	;;=BRIEF DESCRIPTION^RF^^0;3^K:$L(X)>80!($L(X)<1) X
	;;^DD(358,.03,.1)
	;;=BRIEF DESCRIPTION OF FORM'S USE & CONTENT
	;;^DD(358,.03,3)
	;;=Enter a brief description of the intended use of the form or its contents.
	;;^DD(358,.03,21,0)
	;;=^^3^3^2930607^
	;;^DD(358,.03,21,1,0)
	;;= 
	;;^DD(358,.03,21,2,0)
	;;=A brief description of the contents of the form and its intended use. This
	;;^DD(358,.03,21,3,0)
	;;=description will be displayed to the user.
	;;^DD(358,.03,"DT")
	;;=2940309
	;;^DD(358,.04,0)
	;;=TYPE OF USE^R*S^0:RESERVED FOR UTILITY;1:OUTPATIENT ENCOUNTER FORM;^0;4^Q
	;;^DD(358,.04,1,0)
	;;=^.1
	;;^DD(358,.04,1,1,0)
	;;=358^D
	;;^DD(358,.04,1,1,1)
	;;=S ^IBE(358,"D",$E(X,1,30),DA)=""
	;;^DD(358,.04,1,1,2)
	;;=K ^IBE(358,"D",$E(X,1,30),DA)
	;;^DD(358,.04,1,1,"%D",0)
	;;=^^1^1^2930825^
	;;^DD(358,.04,1,1,"%D",1,0)
	;;=Used to find forms of a particular type.
	;;^DD(358,.04,1,1,"DT")
	;;=2930825
	;;^DD(358,.04,3)
	;;=How will the form be used?
	;;^DD(358,.04,12)
	;;=Does not allow users to choose RESERVED FOR UTILITY
	;;^DD(358,.04,12.1)
	;;=S DIC("S")="I Y'=0"
	;;^DD(358,.04,21,0)
	;;=^^5^5^2930825^^^
	;;^DD(358,.04,21,1,0)
	;;=This field will be used to categorize forms by type of use. It is possible
	;;^DD(358,.04,21,2,0)
	;;=that the form generator that is part of the Encounter Form Utilities may
	;;^DD(358,.04,21,3,0)
	;;=be used to create forms other than encounter forms.
	;;^DD(358,.04,21,4,0)
	;;=The utilities use a couple of forms (GARBAGE, TOOL KIT), TYPE OF USE is
	;;^DD(358,.04,21,5,0)
	;;=RESERVED FOR UTILITY, that are not real forms.
	;;^DD(358,.04,"DT")
	;;=2930825
	;;^DD(358,.05,0)
	;;=COMPILED?^S^0:NO;1:YES;F:COMPILATION FAILED;^0;5^Q
	;;^DD(358,.05,3)
	;;=Enter yes if a compiled copy of the form should be created and stored.
	;;^DD(358,.05,21,0)
	;;=^^2^2^2940714^^^^
	;;^DD(358,.05,21,1,0)
	;;=This indicates whether a compiled version of the form exists. The compiled
	;;^DD(358,.05,21,2,0)
	;;=version is much faster to print.
	;;^DD(358,.05,"DT")
	;;=2940714
	;;^DD(358,.06,0)
	;;=USE ICR?^S^0:NO;1:YES;^0;6^Q
	;;^DD(358,.06,3)
	;;=Enter YES if you want to use ICR to read had print.
	;;^DD(358,.06,"DT")
	;;=2950717
	;;^DD(358,.07,0)
	;;=TOOL KIT^RS^0:NO;1:YES;^0;7^Q
	;;^DD(358,.07,.1)
	;;=SHOULD THIS FORM BE PART OF THE TOOL KIT?
	;;^DD(358,.07,1,0)
	;;=^.1
	;;^DD(358,.07,1,1,0)
	;;=358^C
	;;^DD(358,.07,1,1,1)
	;;=S ^IBE(358,"C",$E(X,1,30),DA)=""
	;;^DD(358,.07,1,1,2)
	;;=K ^IBE(358,"C",$E(X,1,30),DA)
	;;^DD(358,.07,1,1,"%D",0)
	;;=^^1^1^2930624^
	;;^DD(358,.07,1,1,"%D",1,0)
	;;=Used to find all of the tool kit forms.
	;;^DD(358,.07,1,1,"DT")
	;;=2930624
	;;^DD(358,.07,3)
	;;=Is this form part of the tool kit?
	;;^DD(358,.07,21,0)
	;;=^^3^3^2930607^
	;;^DD(358,.07,21,1,0)
	;;= 
	;;^DD(358,.07,21,2,0)
	;;=This field, if set to YES, means that the form can not be deleted and can
	;;^DD(358,.07,21,3,0)
	;;=not be added to a clinic setup.
	;;^DD(358,.07,"DT")
	;;=2931220
	;;^DD(358,.09,0)
	;;=RIGHT MARGIN^RNJ3,0X^^0;9^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358,.09,.1)
	;;=FORM'S RIGHT MARGIN (WIDTH IN CHARACTERS)
	;;^DD(358,.09,3)
	;;=
	;;^DD(358,.09,4)
	;;=W !,"How many columns (characters) wide should the form be?"
	;;^DD(358,.09,21,0)
	;;=^^2^2^2940711^^^^
	;;^DD(358,.09,21,1,0)
	;;= 
	;;^DD(358,.09,21,2,0)
	;;=The number of characters wide the form is.
	;;^DD(358,.09,"DT")
	;;=2940711
	;;^DD(358,.1,0)
	;;=PAGE LENGTH^RNJ3,0^^0;10^K:+X'=X!(X>300)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358,.1,.1)
	;;=FORM'S PAGE LENGTH (IN LINES)
	;;^DD(358,.1,3)
	;;=How many lines should the form have?
	;;^DD(358,.1,21,0)
	;;=^^2^2^2921213^
	;;^DD(358,.1,21,1,0)
	;;= 
	;;^DD(358,.1,21,2,0)
	;;=This is the number of usable lines on the page.
	;;^DD(358,.1,"DT")
	;;=2930420
	;;^DD(358,.11,0)
	;;=NUMBER OF PAGES^RNJ2,0^^0;11^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358,.11,3)
	;;=How many pages should the encounter form have?
	;;^DD(358,.11,21,0)
	;;=^^1^1^2930602^
	;;^DD(358,.11,21,1,0)
	;;=The encounter form may have multiple pages.
	;;^DD(358,.11,"DT")
	;;=2930602
	;;^DD(358,.12,0)
	;;=SCANNABLE?^S^0:NO;1:YES;^0;12^Q
	;;^DD(358,.12,3)
	;;=Answer YES if the form will be scanned to accomplish data entry, NO otherwise.
	;;^DD(358,.12,"DT")
	;;=2940520
	;;^DD(358,.13,0)
	;;=FORM TYPE ID^NJ9,0^^0;13^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X

IBDIN02K
IBDIN02K	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358,.13,3)
	;;=Type a Number between 1 and 999999999, 0 Decimal Digits
	;;^DD(358,.13,"DT")
	;;=2940609
	;;^DD(358,.14,0)
	;;=PAPER SIZE^S^1:LETTER (8 1/2 x 11);^0;14^Q
	;;^DD(358,.14,3)
	;;=What size paper should be used?
	;;^DD(358,.14,"DT")
	;;=2940614
	;;^DD(358,.15,0)
	;;=ORIENTATION^S^p:PORTRAIT;^0;15^Q
	;;^DD(358,.15,3)
	;;=How should the form be oriented?
	;;^DD(358,.15,"DT")
	;;=2940614
	;;^DD(358,.16,0)
	;;=TEXT SIZE^RS^1:132 COLUMNS x 80 LINES;2:96 COLUMNS x 72 LINES;3:80 COLUMNS x 60 LINES;^0;16^Q
	;;^DD(358,.16,3)
	;;=This choice will determine the size of the print and how much text will fit on the form.
	;;^DD(358,.16,"DT")
	;;=2940711
	;;^DD(358,.17,0)
	;;=VERSION^NJ4,1^^0;17^K:+X'=X!(X>99)!(X<0)!(X?.E1"."2N.N) X
	;;^DD(358,.17,3)
	;;=Type a Number between 0 and 99, 1 Decimal Digit
	;;^DD(358,.17,21,0)
	;;=^^4^4^2951024^
	;;^DD(358,.17,21,1,0)
	;;=This is the version of AICS that created this form.  This is used
	;;^DD(358,.17,21,2,0)
	;;=to prevent trying to import incompatible form formats.  This is 
	;;^DD(358,.17,21,3,0)
	;;=implemented in version 2.1.  Null entries can be assumed to be 
	;;^DD(358,.17,21,4,0)
	;;=version 2.0.
	;;^DD(358,.17,"DT")
	;;=2951024
	;;^DD(358,1,0)
	;;=EXPORT NOTES^358.01^^1;0
	;;^DD(358,1,21,0)
	;;=^^3^3^2930806^
	;;^DD(358,1,21,1,0)
	;;=Used to describe the form to other sites. The form can not be displayed
	;;^DD(358,1,21,2,0)
	;;=until after it is imported. Maybe if they knew more about it they wouldn't
	;;^DD(358,1,21,3,0)
	;;=want to import it! They will be able to read the EXPORT NOTES before importing it.
	;;^DD(358,2,0)
	;;=PAGE INFORMATION^358.02^^2;0
	;;^DD(358.01,0)
	;;=EXPORT NOTES SUB-FIELD^^.01^1
	;;^DD(358.01,0,"DT")
	;;=2930806
	;;^DD(358.01,0,"NM","EXPORT NOTES")
	;;=
	;;^DD(358.01,0,"UP")
	;;=358
	;;^DD(358.01,.01,0)
	;;=EXPORT NOTES^W^^0;1^Q
	;;^DD(358.01,.01,3)
	;;=What should other sites know about this form before importing it? The other site will not be able to display it until after they import it.
	;;^DD(358.01,.01,"DT")
	;;=2930806
	;;^DD(358.02,0)
	;;=PAGE INFORMATION SUB-FIELD^^.02^2
	;;^DD(358.02,0,"DT")
	;;=2950717
	;;^DD(358.02,0,"IX","B",358.02,.01)
	;;=
	;;^DD(358.02,0,"NM","PAGE INFORMATION")
	;;=
	;;^DD(358.02,0,"UP")
	;;=358
	;;^DD(358.02,.01,0)
	;;=PAGE NUMBER^MNJ1,0^^0;1^K:+X'=X!(X>8)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.02,.01,1,0)
	;;=^.1
	;;^DD(358.02,.01,1,1,0)
	;;=358.02^B
	;;^DD(358.02,.01,1,1,1)
	;;=S ^IBE(358,DA(1),2,"B",$E(X,1,30),DA)=""
	;;^DD(358.02,.01,1,1,2)
	;;=K ^IBE(358,DA(1),2,"B",$E(X,1,30),DA)
	;;^DD(358.02,.01,3)
	;;=Enter the pages that should be scanned.
	;;^DD(358.02,.01,"DT")
	;;=2950717
	;;^DD(358.02,.02,0)
	;;=SCANNABLE?^S^0:NO;1:YES;^0;2^Q
	;;^DD(358.02,.02,3)
	;;=Is this page meant to be scanned?
	;;^DD(358.02,.02,"DT")
	;;=2950717

IBDIN02L
IBDIN02L	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.1,0,"GL")
	;;=^IBE(358.1,
	;;^DIC("B","IMP/EXP ENCOUNTER FORM BLOCK",358.1)
	;;=
	;;^DIC(358.1,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358.1,"%D",1,0)
	;;= 
	;;^DIC(358.1,"%D",2,0)
	;;=This file is nearly identical to file #357.1. It is used by the
	;;^DIC(358.1,"%D",3,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.1,"%D",4,0)
	;;=that is being imported or exported.
	;;^DD(358.1,0)
	;;=FIELD^^1^12
	;;^DD(358.1,0,"DT")
	;;=2930806
	;;^DD(358.1,0,"ID",.02)
	;;=W ""
	;;^DD(358.1,0,"IX","B",358.1,.01)
	;;=
	;;^DD(358.1,0,"IX","C",358.1,.02)
	;;=
	;;^DD(358.1,0,"IX","D",358.1,.14)
	;;=
	;;^DD(358.1,0,"NM","IMP/EXP ENCOUNTER FORM BLOCK")
	;;=
	;;^DD(358.1,0,"PT",358.2,.02)
	;;=
	;;^DD(358.1,0,"PT",358.5,.02)
	;;=
	;;^DD(358.1,0,"PT",358.7,.06)
	;;=
	;;^DD(358.1,0,"PT",358.8,.02)
	;;=
	;;^DD(358.1,0,"PT",358.93,.08)
	;;=
	;;^DD(358.1,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.1,.01,1,0)
	;;=^.1
	;;^DD(358.1,.01,1,1,0)
	;;=358.1^B
	;;^DD(358.1,.01,1,1,1)
	;;=S ^IBE(358.1,"B",$E(X,1,30),DA)=""
	;;^DD(358.1,.01,1,1,2)
	;;=K ^IBE(358.1,"B",$E(X,1,30),DA)
	;;^DD(358.1,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.1,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.1,.01,21,1,0)
	;;= 
	;;^DD(358.1,.01,21,2,0)
	;;=The name of the block.
	;;^DD(358.1,.01,"DEL",1,0)
	;;=I '$G(IBLISTPR) W "...Encounter Form Blocks can only be deleted through the Encounter Form Utilities!"
	;;^DD(358.1,.02,0)
	;;=FORM^RP358'^IBE(358,^0;2^Q
	;;^DD(358.1,.02,1,0)
	;;=^.1
	;;^DD(358.1,.02,1,1,0)
	;;=358.1^C
	;;^DD(358.1,.02,1,1,1)
	;;=S ^IBE(358.1,"C",$E(X,1,30),DA)=""
	;;^DD(358.1,.02,1,1,2)
	;;=K ^IBE(358.1,"C",$E(X,1,30),DA)
	;;^DD(358.1,.02,1,1,"%D",0)
	;;=^^1^1^2921116^
	;;^DD(358.1,.02,1,1,"%D",1,0)
	;;=Used to find all the blocks belonging to a particular form.
	;;^DD(358.1,.02,1,1,"DT")
	;;=2921116
	;;^DD(358.1,.02,3)
	;;=What form should this block appear on?
	;;^DD(358.1,.02,21,0)
	;;=^^2^2^2930802^^
	;;^DD(358.1,.02,21,1,0)
	;;= 
	;;^DD(358.1,.02,21,2,0)
	;;=The form the block appears on.
	;;^DD(358.1,.02,"DT")
	;;=2930802
	;;^DD(358.1,.04,0)
	;;=BLOCK'S STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.1,.04,.1)
	;;=WHAT ROW SHOULD THE BLOCK START IN?
	;;^DD(358.1,.04,2)
	;;=S Y(0)=Y S Y=(+Y)+1
	;;^DD(358.1,.04,2.1)
	;;=S Y=(+Y)+1
	;;^DD(358.1,.04,3)
	;;=What line should this block begin on?
	;;^DD(358.1,.04,21,0)
	;;=^^1^1^2930715^^^
	;;^DD(358.1,.04,21,1,0)
	;;=The row  on the encounter form that the block starts on.
	;;^DD(358.1,.04,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.1,.04,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.1,.04,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.1,.04,23,3,0)
	;;=it is convenient to work with displacements fromt the top left-hand
	;;^DD(358.1,.04,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.1,.04,"DT")
	;;=2930715
	;;^DD(358.1,.05,0)
	;;=BLOCK'S STARTING COLUMN^RNJ3,0XO^^0;5^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.1,.05,.1)
	;;=WHAT COLUMN SHOULD THE BLOCK START IN?
	;;^DD(358.1,.05,2)
	;;=S Y(0)=Y S Y=(+Y)+1
	;;^DD(358.1,.05,2.1)
	;;=S Y=(+Y)+1
	;;^DD(358.1,.05,3)
	;;=What column should this block begin on?
	;;^DD(358.1,.05,21,0)
	;;=^^1^1^2930715^^
	;;^DD(358.1,.05,21,1,0)
	;;=The column on the encounter form that the block starts on.
	;;^DD(358.1,.05,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.1,.05,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.1,.05,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.1,.05,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.1,.05,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.1,.05,"DT")
	;;=2930715
	;;^DD(358.1,.06,0)
	;;=WIDTH IN CHARACTERS^RNJ3,0^^0;6^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.1,.06,.1)
	;;=HOW MANY CHARACTERS WIDE SHOULD THE BLOCK BE?
	;;^DD(358.1,.06,3)
	;;=How many characters wide should this block be?
	;;^DD(358.1,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.1,.06,21,1,0)
	;;= 
	;;^DD(358.1,.06,21,2,0)
	;;=The width of the block, measured in the number of characters across.
	;;^DD(358.1,.06,"DT")
	;;=2930415
	;;^DD(358.1,.07,0)
	;;=HEIGHT IN LINES^RNJ3,0^^0;7^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.1,.07,.1)
	;;=HOW MANY LINES HIGH SHOULD THE BLOCK BE?
	;;^DD(358.1,.07,3)
	;;=How many lines high should this block be?

IBDIN02M
IBDIN02M	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.1,.07,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.1,.07,21,1,0)
	;;= 
	;;^DD(358.1,.07,21,2,0)
	;;=The height of the block, measured by the number of lines it takes up.
	;;^DD(358.1,.07,"DT")
	;;=2930415
	;;^DD(358.1,.1,0)
	;;=OUTLINE TYPE^RS^1:SOLID LINE;2:INVISIBLE;^0;10^Q
	;;^DD(358.1,.1,.1)
	;;=OUTLINE TYPE (SOLID/INVISIBLE)
	;;^DD(358.1,.1,3)
	;;=Enter '1' if the block should have a box around it, '2' if not.
	;;^DD(358.1,.1,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.1,.1,21,1,0)
	;;= 
	;;^DD(358.1,.1,21,2,0)
	;;=How the block is outlined on the form.
	;;^DD(358.1,.1,"DT")
	;;=2930415
	;;^DD(358.1,.11,0)
	;;=BLOCK HEADER^F^^0;11^K:$L(X)>60!($L(X)<1) X
	;;^DD(358.1,.11,.1)
	;;=WHAT HEADER WOULD SHOULD APPEAR AT THE TOP OF THE BLOCK? (OPTIONAL)
	;;^DD(358.1,.11,3)
	;;=What text should appear at the top of the block?
	;;^DD(358.1,.11,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.1,.11,21,1,0)
	;;= 
	;;^DD(358.1,.11,21,2,0)
	;;=The text appearing at the top of the block.
	;;^DD(358.1,.11,"DT")
	;;=2930415
	;;^DD(358.1,.12,0)
	;;=HEADER APPEARANCE^FX^^0;12^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBC"'[$E(X,1))!("UBC"'[$E(X,2))!("UBC"'[$E(X,3)) X
	;;^DD(358.1,.12,.1)
	;;=HOW SHOULD THE BLOCK HEADER APPEAR? CHOOSE FROM {U,B,C}
	;;^DD(358.1,.12,3)
	;;=B=bold, U=underline, C=center. You can enter any combination of {B,U,C}.
	;;^DD(358.1,.12,21,0)
	;;=^^2^2^2930607^
	;;^DD(358.1,.12,21,1,0)
	;;= 
	;;^DD(358.1,.12,21,2,0)
	;;=A description of the block's contents and use.
	;;^DD(358.1,.12,"DT")
	;;=2930616
	;;^DD(358.1,.13,0)
	;;=BRIEF DESCRIPTION^RF^^0;13^K:$L(X)>80!($L(X)<1) X
	;;^DD(358.1,.13,.1)
	;;=ENTER A BRIEF DESCRIPTION OF THE USE & CONTENTS OF THE BLOCK
	;;^DD(358.1,.13,3)
	;;=Answer must be 1-80 characters in length.
	;;^DD(358.1,.13,21,0)
	;;=^^2^2^2930607^
	;;^DD(358.1,.13,21,1,0)
	;;= 
	;;^DD(358.1,.13,21,2,0)
	;;=A brief description of the contents or use of the block.
	;;^DD(358.1,.13,"DT")
	;;=2930415
	;;^DD(358.1,.14,0)
	;;=TOOL KIT ORDER^NJ6,2^^0;14^K:+X'=X!(X>999.99)!(X<0)!(X?.E1"."3N.N) X
	;;^DD(358.1,.14,1,0)
	;;=^.1
	;;^DD(358.1,.14,1,1,0)
	;;=358.1^D
	;;^DD(358.1,.14,1,1,1)
	;;=S ^IBE(358.1,"D",$E(X,1,30),DA)=""
	;;^DD(358.1,.14,1,1,2)
	;;=K ^IBE(358.1,"D",$E(X,1,30),DA)
	;;^DD(358.1,.14,1,1,"%D",0)
	;;=^^2^2^2930108^
	;;^DD(358.1,.14,1,1,"%D",1,0)
	;;=This index is used to locate all the 'tool box' blocs that can be used 
	;;^DD(358.1,.14,1,1,"%D",2,0)
	;;=as templates to create a new block to be added to a form.
	;;^DD(358.1,.14,1,1,"DT")
	;;=2930108
	;;^DD(358.1,.14,3)
	;;=Enter a numeric value >0 if this block is part of the tool kit. The number will determine its listed order.
	;;^DD(358.1,.14,21,0)
	;;=^^4^4^2930607^
	;;^DD(358.1,.14,21,1,0)
	;;= 
	;;^DD(358.1,.14,21,2,0)
	;;=A value greater than 0 means that the block belongs to the tool kit. The
	;;^DD(358.1,.14,21,3,0)
	;;=value also determines the order that the block will be listed to the
	;;^DD(358.1,.14,21,4,0)
	;;=screen that displays the tool kit blocks.
	;;^DD(358.1,.14,"DT")
	;;=2930309
	;;^DD(358.1,1,0)
	;;=EXPORT NOTES^358.11^^1;0
	;;^DD(358.1,1,21,0)
	;;=^^2^2^2930806^
	;;^DD(358.1,1,21,1,0)
	;;=Should be give other sites information that will enable them to decide
	;;^DD(358.1,1,21,2,0)
	;;=whether or not they want to import the block. Only applies to tool kit blocks.
	;;^DD(358.11,0)
	;;=EXPORT NOTES SUB-FIELD^^.01^1
	;;^DD(358.11,0,"DT")
	;;=2930806
	;;^DD(358.11,0,"NM","EXPORT NOTES")
	;;=
	;;^DD(358.11,0,"UP")
	;;=358.1
	;;^DD(358.11,.01,0)
	;;=EXPORT NOTES^W^^0;1^Q
	;;^DD(358.11,.01,3)
	;;=What should other sites know about this tool kit block before importing it?
	;;^DD(358.11,.01,"DT")
	;;=2930806

IBDIN02N
IBDIN02N	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.2,0,"GL")
	;;=^IBE(358.2,
	;;^DIC("B","IMP/EXP SELECTION LIST",358.2)
	;;=
	;;^DIC(358.2,"%D",0)
	;;=^^1^1^2940829^^^^
	;;^DIC(358.2,"%D",1,0)
	;;=Used by the import/export utility as a workspace.
	;;^DIC(358.2,"%D",2,0)
	;;= 
	;;^DIC(358.2,"%D",3,0)
	;;= 
	;;^DIC(358.2,"%D",4,0)
	;;= 
	;;^DIC(358.2,"%D",5,0)
	;;= 
	;;^DIC(358.2,"%D",6,0)
	;;= 
	;;^DIC(358.2,"%D",7,0)
	;;= 
	;;^DIC(358.2,"%D",8,0)
	;;=This file is nearly identical to file #357.2 . It is used by the
	;;^DIC(358.2,"%D",9,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.2,"%D",10,0)
	;;=that is being imported or exported.
	;;^DIC(358.2,"%D",11,0)
	;;=provisions have been made to specify up to 4 columns per list.
	;;^DD(358.2,0)
	;;=FIELD^^.18^18
	;;^DD(358.2,0,"DDA")
	;;=N
	;;^DD(358.2,0,"DT")
	;;=2960123
	;;^DD(358.2,0,"ID",.02)
	;;=W ""
	;;^DD(358.2,0,"ID",.11)
	;;=W ""
	;;^DD(358.2,0,"IX","B",358.2,.01)
	;;=
	;;^DD(358.2,0,"IX","C",358.2,.02)
	;;=
	;;^DD(358.2,0,"NM","IMP/EXP SELECTION LIST")
	;;=
	;;^DD(358.2,0,"PT",358.3,.03)
	;;=
	;;^DD(358.2,0,"PT",358.4,.03)
	;;=
	;;^DD(358.2,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.2,.01,1,0)
	;;=^.1
	;;^DD(358.2,.01,1,1,0)
	;;=358.2^B
	;;^DD(358.2,.01,1,1,1)
	;;=S ^IBE(358.2,"B",$E(X,1,30),DA)=""
	;;^DD(358.2,.01,1,1,2)
	;;=K ^IBE(358.2,"B",$E(X,1,30),DA)
	;;^DD(358.2,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.2,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.01,21,1,0)
	;;= 
	;;^DD(358.2,.01,21,2,0)
	;;=The name of the list.
	;;^DD(358.2,.01,"DEL",1,0)
	;;=I '$G(IBLISTPR) W "...Selection Lists can only be deleted through the Encounter Form Utilities!"
	;;^DD(358.2,.01,"DT")
	;;=2921119
	;;^DD(358.2,.02,0)
	;;=BLOCK^RP358.1'^IBE(358.1,^0;2^Q
	;;^DD(358.2,.02,1,0)
	;;=^.1
	;;^DD(358.2,.02,1,1,0)
	;;=358.2^C
	;;^DD(358.2,.02,1,1,1)
	;;=S ^IBE(358.2,"C",$E(X,1,30),DA)=""
	;;^DD(358.2,.02,1,1,2)
	;;=K ^IBE(358.2,"C",$E(X,1,30),DA)
	;;^DD(358.2,.02,1,1,"DT")
	;;=2921207
	;;^DD(358.2,.02,3)
	;;=Enter the block that the selection list should appear in.
	;;^DD(358.2,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.02,21,1,0)
	;;=The block that the list appears on. The position of the selection list is
	;;^DD(358.2,.02,21,2,0)
	;;=relative to the block.
	;;^DD(358.2,.02,"DT")
	;;=2921207
	;;^DD(358.2,.04,0)
	;;=SUBCOLUMN HEADER APPEARANCE^FX^^0;4^S X=$$UPPER^VALM1(X) K:$L(X)>1!("R"'[$E(X,1)) X
	;;^DD(358.2,.04,.1)
	;;=HOW SHOULD THE SUBCOLUMN HEADERS APPEAR? ENTER 'R' FOR REVERSE PRINTING.
	;;^DD(358.2,.04,3)
	;;=R=Reverse Printing
	;;^DD(358.2,.04,"DT")
	;;=2940531
	;;^DD(358.2,.05,0)
	;;=COLUMN HEADER^F^^0;5^K:$L(X)>70!($L(X)<1) X
	;;^DD(358.2,.05,.1)
	;;=WHAT TEXT SHOULD APPEAR AT THE TOP OF EACH COLUMN? (OPTIONAL)
	;;^DD(358.2,.05,3)
	;;=This header will appear at the top of the column that contains the list. If there is more than one column it will appear at the top of each.
	;;^DD(358.2,.05,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.05,21,1,0)
	;;= 
	;;^DD(358.2,.05,21,2,0)
	;;=The text that appears at the top of each column (NOT subcolumn).
	;;^DD(358.2,.05,"DT")
	;;=2930415
	;;^DD(358.2,.06,0)
	;;=COLUMN HEADER APPEARANCE^FX^^0;6^S X=$$UPPER^VALM1(X) K:$L(X)>4!("UBRC"'[$E(X,1))!("UBRC"'[$E(X,2))!("UBRC"'[$E(X,3))!("UBRC"'[$E(X,4)) X
	;;^DD(358.2,.06,.1)
	;;=HOW SHOULD THE COLUMN HEADER APPEAR? CHOOSE FROM {U,B,R,C}
	;;^DD(358.2,.06,3)
	;;=B=bold,U=underline,R=reverse,C=center. You can enter any combination of {B,U,R,C}.
	;;^DD(358.2,.06,21,0)
	;;=^^2^2^2940531^^^
	;;^DD(358.2,.06,21,1,0)
	;;= 
	;;^DD(358.2,.06,21,2,0)
	;;=The column header can be give characteristics, such as centered and bold.
	;;^DD(358.2,.06,"DT")
	;;=2940531
	;;^DD(358.2,.07,0)
	;;=SUBCOLUMNS SEPARATED WITH?^RS^1:ONE SPACE;2:TWO SPACES;3:LINE;4:SPACE/LINE/SPACE;^0;7^Q
	;;^DD(358.2,.07,.1)
	;;=HOW SHOULD THE SUBCOLUMNS BE SEPARATED?
	;;^DD(358.2,.07,3)
	;;=How should the subcolumns be separated?
	;;^DD(358.2,.07,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.07,21,1,0)
	;;= 
	;;^DD(358.2,.07,21,2,0)
	;;=What characters are used to separate the subcolumns.
	;;^DD(358.2,.07,"DT")
	;;=2930415
	;;^DD(358.2,.08,0)
	;;=EXTRA LINES FOR SELECTIONS^NJ1,0^^0;8^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.2,.08,.1)
	;;=NUMBER OF ADDITIONAL LINES FOR EACH ENTRY ON LIST?
	;;^DD(358.2,.08,3)
	;;=How many extra lines should be allocated for each selection, in addition to the 1 the selection will print on?
	;;^DD(358.2,.08,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.2,.08,21,1,0)
	;;= 
	;;^DD(358.2,.08,21,2,0)
	;;=Each entry on the list prints on only one line. However, if you want

IBDIN02O
IBDIN02O	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.2,.08,21,3,0)
	;;=extra space to appear below each entry on the list then this field should
	;;^DD(358.2,.08,21,4,0)
	;;=be set to the number of blank lines desired.
	;;^DD(358.2,.08,"DT")
	;;=2930427
	;;^DD(358.2,.09,0)
	;;=GROUP HEADER APPEARANCE^FX^^0;9^S X=$$UPPER^VALM1(X) K:$L(X)>4!("UBRC"'[$E(X,1))!("UBRC"'[$E(X,2))!("UBRC"'[$E(X,3))!("UBRC"'[$E(X,4)) X
	;;^DD(358.2,.09,.1)
	;;=HOW SHOULD THE HEADER FOR EACH GROUP OF ENTRIES APPEAR? CHOOSE FROM {U,B,R,C}
	;;^DD(358.2,.09,3)
	;;=B=bold,R=reverse,C=center,U=underline. You can use any combination of {B,R,C,U}
	;;^DD(358.2,.09,21,0)
	;;=^^1^1^2940527^^^^
	;;^DD(358.2,.09,21,1,0)
	;;=This field determines the appearance of the group headers.
	;;^DD(358.2,.09,"DT")
	;;=2940527
	;;^DD(358.2,.11,0)
	;;=SELECTION ROUTINE^R*P358.6'^IBE(358.6,^0;11^S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(358.2,.11,3)
	;;=Enter the package interface used to obtain this list.
	;;^DD(358.2,.11,12)
	;;=Allows only available selection routines.
	;;^DD(358.2,.11,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1"
	;;^DD(358.2,.11,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.11,21,1,0)
	;;= 
	;;^DD(358.2,.11,21,2,0)
	;;=This identifies the Package Interface that is used to fill the list.
	;;^DD(358.2,.11,"DT")
	;;=2930115
	;;^DD(358.2,.12,0)
	;;=UNDERLINE SELECTIONS?^RS^0:NO;1:YES;^0;12^Q
	;;^DD(358.2,.12,.1)
	;;=SHOULD EACH ENTRY ON THE LIST BE UNDERLINED? (YES/NO)
	;;^DD(358.2,.12,3)
	;;=Should the items on the list be underlined?
	;;^DD(358.2,.12,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.12,21,1,0)
	;;= 
	;;^DD(358.2,.12,21,2,0)
	;;=Answer yes if each entry on the list should be underlined.
	;;^DD(358.2,.12,"DT")
	;;=2930414
	;;^DD(358.2,.13,0)
	;;=NUMBER OF COLUMNS^NJ2,0^^0;13^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.2,.13,.1)
	;;=HOW MANY COLUMNS OF LIST ENTRIES SHOULD THE LIST HAVE? (OPTIONAL)
	;;^DD(358.2,.13,3)
	;;=
	;;^DD(358.2,.13,4)
	;;=D HELP5^IBDFU5
	;;^DD(358.2,.13,21,0)
	;;=^^6^6^2930527^
	;;^DD(358.2,.13,21,1,0)
	;;= 
	;;^DD(358.2,.13,21,2,0)
	;;=A selection list may be displayed in an area several columns wide. The
	;;^DD(358.2,.13,21,3,0)
	;;=starting position and height of each column may be specified. However, it
	;;^DD(358.2,.13,21,4,0)
	;;=is not necessary because defaults values will be used. The defaults used
	;;^DD(358.2,.13,21,5,0)
	;;=assume that nothing else is going in the block except the selection list
	;;^DD(358.2,.13,21,6,0)
	;;=and that the entire block should be filled.
	;;^DD(358.2,.13,"DT")
	;;=2930802
	;;^DD(358.2,.14,0)
	;;=DYNAMIC SELECTIONS^S^0:NO;1:YES;^0;14^Q
	;;^DD(358.2,.14,3)
	;;=Answer YES if the list of selecitons are created at print time.
	;;^DD(358.2,.14,"DT")
	;;=2950717
	;;^DD(358.2,.15,0)
	;;=PRINT COMPLETE^S^0:NO;1:YES;^0;15^Q
	;;^DD(358.2,.15,3)
	;;=If the data on the list won't fit on the form, should it be printed on a separate page?
	;;^DD(358.2,.15,21,0)
	;;=^^1^1^2950717^
	;;^DD(358.2,.15,21,1,0)
	;;=Applies only to dynamic selection lists.
	;;^DD(358.2,.15,"DT")
	;;=2950717
	;;^DD(358.2,.16,0)
	;;=NUMBER OF OTHER^NJ1,0^^0;16^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.2,.16,3)
	;;=Allocate space for how many 'other' not found on the list?
	;;^DD(358.2,.16,21,0)
	;;=^^2^2^2950717^
	;;^DD(358.2,.16,21,1,0)
	;;=Space will be allocated at the bottom of the lsit for this number of items
	;;^DD(358.2,.16,21,2,0)
	;;=not found on the list.
	;;^DD(358.2,.16,"DT")
	;;=2950717
	;;^DD(358.2,.17,0)
	;;=WHAT TO ALLOCATE SPACE FOR^S^1:NARRATIVE ONLY;2:CODE ONLY;3:NARRATIVE AND CODE;^0;17^Q
	;;^DD(358.2,.17,3)
	;;=What should space be allocated for when making room for 'other'?
	;;^DD(358.2,.17,21,0)
	;;=^^2^2^2950803^^
	;;^DD(358.2,.17,21,1,0)
	;;=This field will determine what fields will be placed on the form for
	;;^DD(358.2,.17,21,2,0)
	;;=writting in other items not found on the list.
	;;^DD(358.2,.17,"DT")
	;;=2950717
	;;^DD(358.2,.18,0)
	;;=WHAT TO SEND TO PCE^S^1:NARRATIVE ONLY;2:CODE ONLY;3:NARRATIVE AND CODE;^0;18^Q
	;;^DD(358.2,.18,3)
	;;=WHAT DO YOU WANT ENTERED INTO THE DATABASE?
	;;^DD(358.2,.18,21,0)
	;;=^^2^2^2960123^
	;;^DD(358.2,.18,21,1,0)
	;;=This determines what is sent to PCE.  For example, some types of data
	;;^DD(358.2,.18,21,2,0)
	;;=may require that a code be sent, but the narrative may be optional.
	;;^DD(358.2,.18,"DT")
	;;=2960123
	;;^DD(358.2,1,0)
	;;=LIST COLUMN^358.21I^^1;0
	;;^DD(358.2,1,21,0)
	;;=^^2^2^2940216^^^^
	;;^DD(358.2,1,21,1,0)
	;;=A column is a rectangular area that has the necessary width to display a
	;;^DD(358.2,1,21,2,0)
	;;=single item on the list.

IBDIN02P
IBDIN02P	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.2,1,"DT")
	;;=2930802
	;;^DD(358.2,2,0)
	;;=SUBCOLUMN NUMBER^358.22I^^2;0
	;;^DD(358.2,2,21,0)
	;;=^^4^4^2941020^^^^
	;;^DD(358.2,2,21,1,0)
	;;= 
	;;^DD(358.2,2,21,2,0)
	;;=A subcolumn contains one field of the entry on the list. The subcolumn
	;;^DD(358.2,2,21,3,0)
	;;=order is the order, from left to right, that the subcolumns will appear
	;;^DD(358.2,2,21,4,0)
	;;=in.
	;;^DD(358.2,2,"DT")
	;;=2930413
	;;^DD(358.21,0)
	;;=LIST COLUMN SUB-FIELD^^.04^4
	;;^DD(358.21,0,"DT")
	;;=2930331
	;;^DD(358.21,0,"ID","WRITE")
	;;=W "  COLUMN #",$P($G(^(0)),U)
	;;^DD(358.21,0,"IX","B",358.21,.01)
	;;=
	;;^DD(358.21,0,"NM","LIST COLUMN")
	;;=
	;;^DD(358.21,0,"UP")
	;;=358.2
	;;^DD(358.21,.01,0)
	;;=LIST COLUMN NUMBER^MNJ1,0^^0;1^K:+X'=X!(X>4)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.21,.01,1,0)
	;;=^.1
	;;^DD(358.21,.01,1,1,0)
	;;=358.21^B
	;;^DD(358.21,.01,1,1,1)
	;;=S ^IBE(358.2,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(358.21,.01,1,1,2)
	;;=K ^IBE(358.2,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(358.21,.01,3)
	;;=You can specify the position and height of up to 4 columns. Defaults will be used where needed.
	;;^DD(358.21,.01,21,0)
	;;=^^2^2^2930722^^
	;;^DD(358.21,.01,21,1,0)
	;;=The order that the columns will be filled. Column 1 will first be filled
	;;^DD(358.21,.01,21,2,0)
	;;=with items, then column 2, etc.
	;;^DD(358.21,.01,"DT")
	;;=2930802
	;;^DD(358.21,.02,0)
	;;=LIST COLUMN'S STARTING ROW^NJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.21,.02,.1)
	;;=WHAT ROW SHOULD THE LIST COLUMN START IN? (OPTIONAL)
	;;^DD(358.21,.02,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.21,.02,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.21,.02,3)
	;;=What row should the column begin in?
	;;^DD(358.21,.02,21,0)
	;;=^^2^2^2930715^^^
	;;^DD(358.21,.02,21,1,0)
	;;=The row, relative to the block, that the column should begin in. This is
	;;^DD(358.21,.02,21,2,0)
	;;=optional, since default values can be used.
	;;^DD(358.21,.02,23,0)
	;;=^^4^4^2930715^^
	;;^DD(358.21,.02,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.21,.02,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.21,.02,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.21,.02,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.21,.02,"DT")
	;;=2930802
	;;^DD(358.21,.03,0)
	;;=LIST COLUMN'S STARTING COLUMN^NJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.21,.03,.1)
	;;=WHAT BLOCK COLUMN SHOULD THE LIST COLUMN START IN? (OPTIONAL)
	;;^DD(358.21,.03,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.21,.03,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.21,.03,3)
	;;=At what block column should the list column begin at? The first subcolumn of the list column will start one character to the right of this.
	;;^DD(358.21,.03,21,0)
	;;=^^4^4^2940216^
	;;^DD(358.21,.03,21,1,0)
	;;= 
	;;^DD(358.21,.03,21,2,0)
	;;=The column (# of characters to the right) that the list column should
	;;^DD(358.21,.03,21,3,0)
	;;=begin in, relative to the block. It is optional, since a default value can
	;;^DD(358.21,.03,21,4,0)
	;;=be used.
	;;^DD(358.21,.03,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.21,.03,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.21,.03,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.21,.03,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.21,.03,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.21,.03,"DT")
	;;=2930930
	;;^DD(358.21,.04,0)
	;;=LIST COLUMN HEIGHT^NJ3,0^^0;4^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.21,.04,.1)
	;;=HOW MANY LINES HIGH SHOULD THE LIST COLUMN BE? (OPTIONAL)
	;;^DD(358.21,.04,3)
	;;=How many lines should the column cover?
	;;^DD(358.21,.04,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.21,.04,21,1,0)
	;;= 
	;;^DD(358.21,.04,21,2,0)
	;;=The number of lines the column should occupy. This is optional - if not
	;;^DD(358.21,.04,21,3,0)
	;;=supplied the column will extend to the bottom of the block.
	;;^DD(358.21,.04,"DT")
	;;=2930802
	;;^DD(358.22,0)
	;;=SUBCOLUMN NUMBER SUB-FIELD^^.1^10
	;;^DD(358.22,0,"DT")
	;;=2960123
	;;^DD(358.22,0,"ID","WRITE")
	;;=D ID1^IBDFU5
	;;^DD(358.22,0,"IX","B",358.22,.01)
	;;=
	;;^DD(358.22,0,"NM","SUBCOLUMN NUMBER")
	;;=
	;;^DD(358.22,0,"UP")
	;;=358.2
	;;^DD(358.22,.01,0)
	;;=SUBCOLUMN NUMBER^MRNJ1,0X^^0;1^K:+X'=X!(X>6)!(X<1)!(X?.E1"."1N.N)!($D(^IBE(358.2,DA(1),2,"B",X))) X
	;;^DD(358.22,.01,.1)
	;;=Number of the subcolumn, subcolumns being numbered 1-6, left-to-right

IBDIN02Q
IBDIN02Q	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.22,.01,1,0)
	;;=^.1
	;;^DD(358.22,.01,1,1,0)
	;;=358.22^B
	;;^DD(358.22,.01,1,1,1)
	;;=S ^IBE(358.2,DA(1),2,"B",$E(X,1,30),DA)=""
	;;^DD(358.22,.01,1,1,2)
	;;=K ^IBE(358.2,DA(1),2,"B",$E(X,1,30),DA)
	;;^DD(358.22,.01,3)
	;;=The SUBCOLUMN NUMBER determines the order in which the subcolumns will display. There are at most 6 subcolumns, numbered 1-6.
	;;^DD(358.22,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.22,.01,21,1,0)
	;;= 
	;;^DD(358.22,.01,21,2,0)
	;;=The order that the subcolumn will appear on the form.
	;;^DD(358.22,.01,"DT")
	;;=2930413
	;;^DD(358.22,.02,0)
	;;=SUBCOLUMN HEADER^F^^0;2^K:$L(X)>150!($L(X)<1) X
	;;^DD(358.22,.02,.1)
	;;=WHAT TEXT SHOULD APPEAR AT THE TOP OF THE SUBCOLUMN?
	;;^DD(358.22,.02,3)
	;;=What text should appear at the top of the subcolumn?
	;;^DD(358.22,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.22,.02,21,1,0)
	;;= 
	;;^DD(358.22,.02,21,2,0)
	;;=The text that will appear at the top of the subcolumn.
	;;^DD(358.22,.02,"DT")
	;;=2930414
	;;^DD(358.22,.03,0)
	;;=SUBCOLUMN WIDTH^NJ3,0^^0;3^K:+X'=X!(X>150)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.22,.03,.1)
	;;=HOW WIDE SHOULD THE SUBCOLUMN BE?
	;;^DD(358.22,.03,3)
	;;=How wide should the subcolumn be?
	;;^DD(358.22,.03,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.22,.03,21,1,0)
	;;= 
	;;^DD(358.22,.03,21,2,0)
	;;=The width of the subcolumn. If the subcolumn contains a MARKING AREA then
	;;^DD(358.22,.03,21,3,0)
	;;=the width of the MARKING AREA overrides what ever this is.
	;;^DD(358.22,.03,"DT")
	;;=2930414
	;;^DD(358.22,.04,0)
	;;=TYPE OF SUBCOLUMN^RS^1:TEXT;2:MARKING;^0;4^Q
	;;^DD(358.22,.04,.1)
	;;=SUBCOLUMN CONTAINS TEXT, OR FOR MARKING? (TEXT/MARKING)
	;;^DD(358.22,.04,3)
	;;=Enter '1' if the subcolumn will contain text, '2' if it will be for the user to mark his selections.
	;;^DD(358.22,.04,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.22,.04,21,1,0)
	;;= 
	;;^DD(358.22,.04,21,2,0)
	;;=The subcolumn can contain either text, derived from what is returned by
	;;^DD(358.22,.04,21,3,0)
	;;=the PACKAGE INTERFACE, or a MARKING AREA, which is meant to be written in
	;;^DD(358.22,.04,21,4,0)
	;;=to select an entry on the list.
	;;^DD(358.22,.04,"DT")
	;;=2930428
	;;^DD(358.22,.05,0)
	;;=SUBCOLUMN'S DATA^NJ1,0X^^0;5^K:+X'=X!(X>7)!(X<1)!(X?.E1"."1N.N)!($P($G(^IBE(358.6,+$P($G(^IBE(358.2,DA(1),0)),U,11),2)),U,(2*X)-1)="")!((X=1)&'$P($G(^IBE(358.6,+$P($G(^IBE(358.2,DA(1),0)),U,11),2)),U,17)) X
	;;^DD(358.22,.05,.1)
	;;=WHAT DATA SHOULD BE CONTAINED IN THE SUBCOLUMN?
	;;^DD(358.22,.05,3)
	;;=WHAT DATA SHOULD BE CONTAINED IN THE SUBCOLUMN?
	;;^DD(358.22,.05,4)
	;;=D HELP2^IBDFU5
	;;^DD(358.22,.05,21,0)
	;;=^^3^3^2940719^^
	;;^DD(358.22,.05,21,1,0)
	;;= 
	;;^DD(358.22,.05,21,2,0)
	;;=The Package Interface returns a record, which is composed of fields. This
	;;^DD(358.22,.05,21,3,0)
	;;=identifies which field goes in the subcolumn.
	;;^DD(358.22,.05,"DT")
	;;=2940719
	;;^DD(358.22,.06,0)
	;;=MARKING AREA^P358.91'^IBE(358.91,^0;6^Q
	;;^DD(358.22,.06,.1)
	;;=TYPE OF MARKING AREA
	;;^DD(358.22,.06,3)
	;;=What type of marking area should appear in the subcolumn?
	;;^DD(358.22,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.22,.06,21,1,0)
	;;= 
	;;^DD(358.22,.06,21,2,0)
	;;=This identifies which MARKING AREA should go in the subcolumn.
	;;^DD(358.22,.06,"DT")
	;;=2930414
	;;^DD(358.22,.07,0)
	;;=ALLOW EDITING OF TEXT?^S^0:NO;1:YES;^0;7^Q
	;;^DD(358.22,.07,.1)
	;;=ALLOW EDITING OF THE TEXT APPEARING IN THIS SUBCOLUMN? (YES/NO)
	;;^DD(358.22,.07,3)
	;;=Is it okey to edit the text appearing in this subcolumn?
	;;^DD(358.22,.07,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.22,.07,21,1,0)
	;;= 
	;;^DD(358.22,.07,21,2,0)
	;;=This determines whether or not the user, when selecting items to appear on
	;;^DD(358.22,.07,21,3,0)
	;;=the list, will be able to edit the text appearing in the subcolum. This is
	;;^DD(358.22,.07,21,4,0)
	;;=ignored if the subcolumn contains a MARKING AREA.
	;;^DD(358.22,.07,"DT")
	;;=2930428
	;;^DD(358.22,.08,0)
	;;=DO NOT UNDERLINE MARKING AREA?^S^0:NO;1:YES;^0;8^Q
	;;^DD(358.22,.08,3)
	;;=Enter YES if you do NOT want this subcolumn underlined.
	;;^DD(358.22,.08,"DT")
	;;=2940607
	;;^DD(358.22,.09,0)
	;;=DATA QUALIFIER^P358.98'^IBD(358.98,^0;9^Q
	;;^DD(358.22,.09,"DT")
	;;=2941020
	;;^DD(358.22,.1,0)
	;;=SELECTION RULE^S^0:ANY NUMBER;1:EXACTLY ONE;2:AT MOST ONE (0 or 1);3:AT LEAST ONE (1 or more);^0;10^Q
	;;^DD(358.22,.1,3)
	;;=Which rule applies to the choices the user can make in this subcolumn?
	;;^DD(358.22,.1,21,0)
	;;=^^2^2^2960123^
	;;^DD(358.22,.1,21,1,0)
	;;=A selection rule can be applied to a subcolumn used to make selections,
	;;^DD(358.22,.1,21,2,0)
	;;=i.e., one that contains marking areas.

IBDIN02R
IBDIN02R	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.22,.1,"DT")
	;;=2960123

IBDIN02S
IBDIN02S	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.3,0,"GL")
	;;=^IBE(358.3,
	;;^DIC("B","IMP/EXP SELECTION",358.3)
	;;=
	;;^DIC(358.3,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358.3,"%D",1,0)
	;;= 
	;;^DIC(358.3,"%D",2,0)
	;;=This file is nearly identical to file #357.3. It is used by the
	;;^DIC(358.3,"%D",3,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.3,"%D",4,0)
	;;=that is being imported or exported.
	;;^DD(358.3,0)
	;;=FIELD^^2.02^11
	;;^DD(358.3,0,"DT")
	;;=2960131
	;;^DD(358.3,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(358.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(358.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(358.3,0,"ID",.04)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(358.4,+$P(^(0),U,4),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(358.4,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(358.3,0,"IX","APO",358.3,.03)
	;;=
	;;^DD(358.3,0,"IX","APO1",358.3,.04)
	;;=
	;;^DD(358.3,0,"IX","APO2",358.3,.05)
	;;=
	;;^DD(358.3,0,"IX","B",358.3,.01)
	;;=
	;;^DD(358.3,0,"IX","C",358.3,.03)
	;;=
	;;^DD(358.3,0,"IX","D",358.3,.04)
	;;=
	;;^DD(358.3,0,"NM","IMP/EXP SELECTION")
	;;=
	;;^DD(358.3,.01,0)
	;;=SELECTION ID^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.3,.01,1,0)
	;;=^.1
	;;^DD(358.3,.01,1,1,0)
	;;=358.3^B
	;;^DD(358.3,.01,1,1,1)
	;;=S ^IBE(358.3,"B",$E(X,1,30),DA)=""
	;;^DD(358.3,.01,1,1,2)
	;;=K ^IBE(358.3,"B",$E(X,1,30),DA)
	;;^DD(358.3,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.3,.01,21,0)
	;;=^^2^2^2930309^
	;;^DD(358.3,.01,21,1,0)
	;;= 
	;;^DD(358.3,.01,21,2,0)
	;;=The ID passed by the package.
	;;^DD(358.3,.01,"DT")
	;;=2921119
	;;^DD(358.3,.02,0)
	;;=PLACE HOLDER ONLY^S^0:NO;1:YES;^0;2^Q
	;;^DD(358.3,.02,3)
	;;=Enter YES if this is a place holder, used to add some space to the list.
	;;^DD(358.3,.02,"DT")
	;;=2950717
	;;^DD(358.3,.03,0)
	;;=SELECTION LIST^RP358.2'^IBE(358.2,^0;3^Q
	;;^DD(358.3,.03,1,0)
	;;=^.1
	;;^DD(358.3,.03,1,1,0)
	;;=358.3^C
	;;^DD(358.3,.03,1,1,1)
	;;=S ^IBE(358.3,"C",$E(X,1,30),DA)=""
	;;^DD(358.3,.03,1,1,2)
	;;=K ^IBE(358.3,"C",$E(X,1,30),DA)
	;;^DD(358.3,.03,1,1,"DT")
	;;=2921127
	;;^DD(358.3,.03,1,2,0)
	;;=358.3^APO^MUMPS
	;;^DD(358.3,.03,1,2,1)
	;;=I $P($G(^IBE(358.3,DA,0)),U,5)]"",$P(^(0),U,4) S ^IBE(358.3,"APO",X,$P(^(0),U,4),$P(^(0),U,5),DA)=""
	;;^DD(358.3,.03,1,2,2)
	;;=I $P($G(^IBE(358.3,DA,0)),U,5)]"",$P(^(0),U,4) K ^IBE(358.3,"APO",X,$P(^(0),U,4),$P(^(0),U,5),DA)
	;;^DD(358.3,.03,1,2,"DT")
	;;=2960403
	;;^DD(358.3,.03,21,0)
	;;=^^2^2^2921215^
	;;^DD(358.3,.03,21,1,0)
	;;= 
	;;^DD(358.3,.03,21,2,0)
	;;=Identifies the selection list that this selection belongs on.
	;;^DD(358.3,.03,"DT")
	;;=2960403
	;;^DD(358.3,.04,0)
	;;=SELECTION GROUP^RP358.4^IBE(358.4,^0;4^Q
	;;^DD(358.3,.04,1,0)
	;;=^.1
	;;^DD(358.3,.04,1,1,0)
	;;=358.3^D
	;;^DD(358.3,.04,1,1,1)
	;;=S ^IBE(358.3,"D",$E(X,1,30),DA)=""
	;;^DD(358.3,.04,1,1,2)
	;;=K ^IBE(358.3,"D",$E(X,1,30),DA)
	;;^DD(358.3,.04,1,1,"DT")
	;;=2921221
	;;^DD(358.3,.04,1,2,0)
	;;=358.3^APO1^MUMPS
	;;^DD(358.3,.04,1,2,1)
	;;=I $P($G(^IBE(358.3,DA,0)),U,5)]"",$P(^(0),U,3) S ^IBE(358.3,"APO",$P(^(0),U,3),X,$P(^(0),U,5),DA)=""
	;;^DD(358.3,.04,1,2,2)
	;;=I $P($G(^IBE(358.3,DA,0)),U,5)]"",$P(^(0),U,3) K ^IBE(358.3,"APO",$P(^(0),U,3),X,$P(^(0),U,5),DA)
	;;^DD(358.3,.04,1,2,"DT")
	;;=2960403
	;;^DD(358.3,.04,3)
	;;=Entries on a list are grouped under group headers - under which header should this entry appear?
	;;^DD(358.3,.04,21,0)
	;;=^^3^3^2930607^
	;;^DD(358.3,.04,21,1,0)
	;;= 
	;;^DD(358.3,.04,21,2,0)
	;;=The SELECTION GROUP that the selection belongs to.The selection will
	;;^DD(358.3,.04,21,3,0)
	;;=appear under the group header on the form.
	;;^DD(358.3,.04,"DT")
	;;=2960403
	;;^DD(358.3,.05,0)
	;;=PRINT ORDER WITHIN GROUP^RNJ6,2^^0;5^K:+X'=X!(X>999.99)!(X<0)!(X?.E1"."3N.N) X
	;;^DD(358.3,.05,1,0)
	;;=^.1
	;;^DD(358.3,.05,1,1,0)
	;;=358.3^APO2^MUMPS
	;;^DD(358.3,.05,1,1,1)
	;;=I $P($G(^IBE(358.3,DA,0)),U,3),$P(^(0),U,4) S ^IBE(358.3,"APO",$P(^(0),U,3),$P(^(0),U,4),X,DA)=""
	;;^DD(358.3,.05,1,1,2)
	;;=I $P(^IBE(358.3,DA,0),U,3),$P(^(0),U,4) K ^IBE(358.3,"APO",$P(^(0),U,3),$P(^(0),U,4),X,DA)
	;;^DD(358.3,.05,1,1,"DT")
	;;=2960403
	;;^DD(358.3,.05,3)
	;;=Type a Number between 0 and 999.99, 2 Decimal Digits
	;;^DD(358.3,.05,21,0)
	;;=^^2^2^2921229^^^^
	;;^DD(358.3,.05,21,1,0)
	;;=Determines the order that this selection entry will appear in under the
	;;^DD(358.3,.05,21,2,0)
	;;=header for the selection group.
	;;^DD(358.3,.05,"DT")
	;;=2960403
	;;^DD(358.3,.06,0)
	;;=PLACE HOLDER TEXT^F^^0;6^K:$L(X)>75!($L(X)<1) X
	;;^DD(358.3,.06,3)
	;;=What text should be displayed for the place holder?

IBDIN02T
IBDIN02T	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.3,.06,"DT")
	;;=2950717
	;;^DD(358.3,.07,0)
	;;=USE AS PLACE HOLDER^S^0:NO;1:YES;^0;7^Q
	;;^DD(358.3,.07,3)
	;;=Does the place holder serve as a subheader?
	;;^DD(358.3,.07,21,0)
	;;=^^2^2^2950928^
	;;^DD(358.3,.07,21,1,0)
	;;=If the place holder is being used as a subheader its text should be
	;;^DD(358.3,.07,21,2,0)
	;;=included with the narrative. This field implements that.
	;;^DD(358.3,.07,"DT")
	;;=2950928
	;;^DD(358.3,.08,0)
	;;=END USE AS SUBHEADER?^S^0:NO;1:YES;^0;8^Q
	;;^DD(358.3,.08,3)
	;;=Should the prior subheader be discarded?
	;;^DD(358.3,.08,21,0)
	;;=^^2^2^2951002^
	;;^DD(358.3,.08,21,1,0)
	;;=This field is used to end the use of any prior subheader that is in
	;;^DD(358.3,.08,21,2,0)
	;;=effect. Applies only to selections defined to be place holders.
	;;^DD(358.3,.08,"DT")
	;;=2951002
	;;^DD(358.3,1,0)
	;;=SUBCOLUMN VALUE^358.31IA^^1;0
	;;^DD(358.3,1,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.3,1,21,1,0)
	;;= 
	;;^DD(358.3,1,21,2,0)
	;;=The selection can be composed of multiple fields. Each field occupies its
	;;^DD(358.3,1,21,3,0)
	;;=own subcolumn on the form.
	;;^DD(358.3,2.01,0)
	;;=NARRATIVE TO SEND TO PCE^F^^2;1^K:$L(X)>150!($L(X)<1) X
	;;^DD(358.3,2.01,3)
	;;=Enter the narrative to send to PCE if a provider narrative different from the description is desired.  Answer must be 3-80 characters in length.
	;;^DD(358.3,2.01,21,0)
	;;=^^6^6^2960123^
	;;^DD(358.3,2.01,21,1,0)
	;;=Enter the narrative that should be sent to PCE when this selection is
	;;^DD(358.3,2.01,21,2,0)
	;;=scanned.  This will be the provider narrative that is shown in PCE and
	;;^DD(358.3,2.01,21,3,0)
	;;=Problem List.  If there is no entry in this field the text as it appears
	;;^DD(358.3,2.01,21,4,0)
	;;=on the form will be sent as the narrative.  This field can only be
	;;^DD(358.3,2.01,21,5,0)
	;;=entered for the type of interfaces that allow adding this narrative,
	;;^DD(358.3,2.01,21,6,0)
	;;=and then send the narrative to PCE.
	;;^DD(358.3,2.01,"DT")
	;;=2960123
	;;^DD(358.3,2.02,0)
	;;=CLINICAL LEXICON ENTRY^P757.01'^GMP(757.01,^2;2^Q
	;;^DD(358.3,2.02,21,0)
	;;=^^5^5^2960131^
	;;^DD(358.3,2.02,21,1,0)
	;;=This is the clinical lexicon entry this term should be associated with.
	;;^DD(358.3,2.02,21,2,0)
	;;=Generally this is only completed for selections based on diagnosis.
	;;^DD(358.3,2.02,21,3,0)
	;;=The clinical lexicon entry will be passed to pce when this selection is
	;;^DD(358.3,2.02,21,4,0)
	;;=scanned.  This allows maintaining the patient problem list associated 
	;;^DD(358.3,2.02,21,5,0)
	;;=with clinical terms.
	;;^DD(358.3,2.02,"DT")
	;;=2960131
	;;^DD(358.31,0)
	;;=SUBCOLUMN VALUE SUB-FIELD^^.02^2
	;;^DD(358.31,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(358.31,0,"IX","B",358.31,.01)
	;;=
	;;^DD(358.31,0,"NM","SUBCOLUMN VALUE")
	;;=
	;;^DD(358.31,0,"UP")
	;;=358.3
	;;^DD(358.31,.01,0)
	;;=SUBCOLUMN NUMBER^MRNJ1,0X^^0;1^K:+X'=X!(X>6)!(X<1)!(X?.E1"."1N.N)!($D(^IBE(358.3,DA(1),1,"B",X))) X
	;;^DD(358.31,.01,1,0)
	;;=^.1
	;;^DD(358.31,.01,1,1,0)
	;;=358.31^B
	;;^DD(358.31,.01,1,1,1)
	;;=S ^IBE(358.3,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(358.31,.01,1,1,2)
	;;=K ^IBE(358.3,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(358.31,.01,3)
	;;=Which subcolumn is the value for?
	;;^DD(358.31,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.31,.01,21,1,0)
	;;= 
	;;^DD(358.31,.01,21,2,0)
	;;=The order that the subcolumn should appear on the form.
	;;^DD(358.31,.01,"DT")
	;;=2930402
	;;^DD(358.31,.02,0)
	;;=SUBCOLUMN VALUE^F^^0;2^K:$L(X)>150!($L(X)<1) X
	;;^DD(358.31,.02,3)
	;;=What value should go in the subcolumn?
	;;^DD(358.31,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.31,.02,21,1,0)
	;;= 
	;;^DD(358.31,.02,21,2,0)
	;;=The text that should appear in the subcolumn.
	;;^DD(358.31,.02,"DT")
	;;=2930401

IBDIN02U
IBDIN02U	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.4,0,"GL")
	;;=^IBE(358.4,
	;;^DIC("B","IMP/EXP SELECTION GROUP",358.4)
	;;=
	;;^DIC(358.4,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358.4,"%D",1,0)
	;;= 
	;;^DIC(358.4,"%D",2,0)
	;;=This file is nearly identical to file #357.4. It is used by the
	;;^DIC(358.4,"%D",3,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.4,"%D",4,0)
	;;=that is being imported or exported.
	;;^DD(358.4,0)
	;;=FIELD^^.04^4
	;;^DD(358.4,0,"DDA")
	;;=N
	;;^DD(358.4,0,"DT")
	;;=2950717
	;;^DD(358.4,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(358.4,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(358.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(358.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(358.4,0,"IX","APO",358.4,.02)
	;;=
	;;^DD(358.4,0,"IX","APO1",358.4,.03)
	;;=
	;;^DD(358.4,0,"IX","B",358.4,.01)
	;;=
	;;^DD(358.4,0,"IX","D",358.4,.03)
	;;=
	;;^DD(358.4,0,"NM","IMP/EXP SELECTION GROUP")
	;;=
	;;^DD(358.4,0,"PT",358.3,.04)
	;;=
	;;^DD(358.4,.01,0)
	;;=HEADER^RF^^0;1^K:$L(X)>40!($L(X)<1) X
	;;^DD(358.4,.01,1,0)
	;;=^.1
	;;^DD(358.4,.01,1,1,0)
	;;=358.4^B
	;;^DD(358.4,.01,1,1,1)
	;;=S ^IBE(358.4,"B",$E(X,1,30),DA)=""
	;;^DD(358.4,.01,1,1,2)
	;;=K ^IBE(358.4,"B",$E(X,1,30),DA)
	;;^DD(358.4,.01,3)
	;;=What text do you want to appear at the top of this group?
	;;^DD(358.4,.01,21,0)
	;;=^^2^2^2930604^^^^
	;;^DD(358.4,.01,21,1,0)
	;;= 
	;;^DD(358.4,.01,21,2,0)
	;;=The name given to a group of selections appearing on a selection list.
	;;^DD(358.4,.01,"DEL",1,0)
	;;=I '$G(IBLISTPR) W "...Selection Groups can only be deleted through the Encounter Form Utilities!"
	;;^DD(358.4,.01,"DT")
	;;=2930604
	;;^DD(358.4,.02,0)
	;;=PRINT ORDER^RNJ5,2^^0;2^K:+X'=X!(X>99.99)!(X<0)!(X?.E1"."3N.N) X
	;;^DD(358.4,.02,1,0)
	;;=^.1
	;;^DD(358.4,.02,1,1,0)
	;;=358.4^APO^MUMPS
	;;^DD(358.4,.02,1,1,1)
	;;=I $P($G(^IBE(358.4,DA,0)),U,3) S ^IBE(358.4,"APO",$P(^(0),U,3),X,DA)=""
	;;^DD(358.4,.02,1,1,2)
	;;=I $P($G(^IBE(358.4,DA,0)),U,3) K ^IBE(358.4,"APO",$P(^(0),U,3),X,DA)
	;;^DD(358.4,.02,1,1,"DT")
	;;=2960403
	;;^DD(358.4,.02,3)
	;;=Type a Number between 0 and 99.99, 2 Decimal Digits
	;;^DD(358.4,.02,21,0)
	;;=^^5^5^2921222^^^^
	;;^DD(358.4,.02,21,1,0)
	;;= 
	;;^DD(358.4,.02,21,2,0)
	;;=This will define the order that a group of selections will appear in as
	;;^DD(358.4,.02,21,3,0)
	;;=compared to the other groups of selections.
	;;^DD(358.4,.02,21,4,0)
	;;=A group header "BLANK" will be created by default with order number 0.
	;;^DD(358.4,.02,"DT")
	;;=2960403
	;;^DD(358.4,.03,0)
	;;=SELECTION LIST^RP358.2'^IBE(358.2,^0;3^Q
	;;^DD(358.4,.03,1,0)
	;;=^.1
	;;^DD(358.4,.03,1,1,0)
	;;=358.4^D
	;;^DD(358.4,.03,1,1,1)
	;;=S ^IBE(358.4,"D",$E(X,1,30),DA)=""
	;;^DD(358.4,.03,1,1,2)
	;;=K ^IBE(358.4,"D",$E(X,1,30),DA)
	;;^DD(358.4,.03,1,1,"%D",0)
	;;=^^1^1^2921218^
	;;^DD(358.4,.03,1,1,"%D",1,0)
	;;=Used to find all the groups belonging to a selection list.
	;;^DD(358.4,.03,1,1,"DT")
	;;=2921218
	;;^DD(358.4,.03,1,2,0)
	;;=358.4^APO1^MUMPS
	;;^DD(358.4,.03,1,2,1)
	;;=I $P($G(^IBE(358.4,DA,0)),U,2)]"" S ^IBE(358.4,"APO",X,$P(^(0),U,2),DA)=""
	;;^DD(358.4,.03,1,2,2)
	;;=I $P($G(^IBE(358.4,DA,0)),U,2)]"" K ^IBE(358.4,"APO",X,$P(^(0),U,2),DA)
	;;^DD(358.4,.03,1,2,"DT")
	;;=2960403
	;;^DD(358.4,.03,3)
	;;=This identifies the selection list that contains this group.
	;;^DD(358.4,.03,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.4,.03,21,1,0)
	;;= 
	;;^DD(358.4,.03,21,2,0)
	;;=The Selection List this group belongs to.
	;;^DD(358.4,.03,"DT")
	;;=2960403
	;;^DD(358.4,.04,0)
	;;=INVISIBLE^S^I:INVISIBLE;^0;4^Q
	;;^DD(358.4,.04,3)
	;;=If you do not want the header to print, enter 'I'.
	;;^DD(358.4,.04,"DT")
	;;=2950717

IBDIN02V
IBDIN02V	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.5,0,"GL")
	;;=^IBE(358.5,
	;;^DIC("B","IMP/EXP DATA FIELD",358.5)
	;;=
	;;^DIC(358.5,"%D",0)
	;;=^^1^1^2940829^^^^
	;;^DIC(358.5,"%D",1,0)
	;;=Used by the import/export utility as a workspace.
	;;^DIC(358.5,"%D",2,0)
	;;= 
	;;^DIC(358.5,"%D",3,0)
	;;= 
	;;^DIC(358.5,"%D",4,0)
	;;=This file is nearly identical to file #357.5. It is used by the
	;;^DIC(358.5,"%D",5,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.5,"%D",6,0)
	;;=that is being imported or exported.
	;;^DD(358.5,0)
	;;=FIELD^^2^13
	;;^DD(358.5,0,"DDA")
	;;=N
	;;^DD(358.5,0,"DT")
	;;=2930730
	;;^DD(358.5,0,"ID",.02)
	;;=W ""
	;;^DD(358.5,0,"ID",.03)
	;;=W ""
	;;^DD(358.5,0,"IX","B",358.5,.01)
	;;=
	;;^DD(358.5,0,"IX","C",358.5,.02)
	;;=
	;;^DD(358.5,0,"NM","IMP/EXP DATA FIELD")
	;;=
	;;^DD(358.5,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.5,.01,1,0)
	;;=^.1
	;;^DD(358.5,.01,1,1,0)
	;;=358.5^B
	;;^DD(358.5,.01,1,1,1)
	;;=S ^IBE(358.5,"B",$E(X,1,30),DA)=""
	;;^DD(358.5,.01,1,1,2)
	;;=K ^IBE(358.5,"B",$E(X,1,30),DA)
	;;^DD(358.5,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.5,.01,21,0)
	;;=^^3^3^2930419^^^
	;;^DD(358.5,.01,21,1,0)
	;;= 
	;;^DD(358.5,.01,21,2,0)
	;;=The name is used to identify the field within a block. It can be anything
	;;^DD(358.5,.01,21,3,0)
	;;=the designer of a form wants it to be.
	;;^DD(358.5,.01,"DT")
	;;=2930419
	;;^DD(358.5,.02,0)
	;;=BLOCK^RP358.1'^IBE(358.1,^0;2^Q
	;;^DD(358.5,.02,1,0)
	;;=^.1
	;;^DD(358.5,.02,1,1,0)
	;;=358.5^C
	;;^DD(358.5,.02,1,1,1)
	;;=S ^IBE(358.5,"C",$E(X,1,30),DA)=""
	;;^DD(358.5,.02,1,1,2)
	;;=K ^IBE(358.5,"C",$E(X,1,30),DA)
	;;^DD(358.5,.02,1,1,"DT")
	;;=2921118
	;;^DD(358.5,.02,3)
	;;=What block should this data field appear in?
	;;^DD(358.5,.02,21,0)
	;;=^^2^2^2930310^
	;;^DD(358.5,.02,21,1,0)
	;;= 
	;;^DD(358.5,.02,21,2,0)
	;;=The particular block the data field should appear in.
	;;^DD(358.5,.02,"DT")
	;;=2921118
	;;^DD(358.5,.03,0)
	;;=TYPE OF DATA^*P358.6'^IBE(358.6,^0;3^S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(358.5,.03,3)
	;;=What data should be displayed in this field?
	;;^DD(358.5,.03,4)
	;;=
	;;^DD(358.5,.03,12)
	;;=Allows only available output routines
	;;^DD(358.5,.03,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1"
	;;^DD(358.5,.03,21,0)
	;;=^^5^5^2930409^^
	;;^DD(358.5,.03,21,1,0)
	;;= 
	;;^DD(358.5,.03,21,2,0)
	;;=The particular interface that should be invoked to obtain the data for
	;;^DD(358.5,.03,21,3,0)
	;;=display. Some of the interfaces don't actually return data, but are
	;;^DD(358.5,.03,21,4,0)
	;;=instead 'dummy' interfaces for the purpose of printing things like blank
	;;^DD(358.5,.03,21,5,0)
	;;=lines.
	;;^DD(358.5,.03,"DT")
	;;=2930309
	;;^DD(358.5,.04,0)
	;;=LAST ITEM INDICATOR^S^1:YES;0:NO;^0;4^Q
	;;^DD(358.5,.04,.1)
	;;=IS THIS THE LAST ONE THAT WILL FIT ON THE FORM?
	;;^DD(358.5,.04,3)
	;;=
	;;^DD(358.5,.04,4)
	;;=W "Enter YES if this is the last item that should print, else enter NO."
	;;^DD(358.5,.04,21,0)
	;;=^^4^4^2930408^^^^
	;;^DD(358.5,.04,21,1,0)
	;;= 
	;;^DD(358.5,.04,21,2,0)
	;;=This field is used to indicate which item on a list is the last to be
	;;^DD(358.5,.04,21,3,0)
	;;=printed to the form. The remaining items can be printed to a separate
	;;^DD(358.5,.04,21,4,0)
	;;=piece of paper.
	;;^DD(358.5,.04,"DT")
	;;=2930413
	;;^DD(358.5,.05,0)
	;;=NUMBER ON LIST^NJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.5,.05,.1)
	;;=WHICH ITEM ON THE LIST SHOULD BE DISPLAYED IN THIS FIELD?
	;;^DD(358.5,.05,3)
	;;=The data is a list of items. Which item on the list should be displayed?
	;;^DD(358.5,.05,21,0)
	;;=^^1^1^2930607^
	;;^DD(358.5,.05,21,1,0)
	;;=For data returned by the package interface that is in the form of a list, this field indicates which one of the items on the list should be displayed to this field.
	;;^DD(358.5,.05,"DT")
	;;=2930413
	;;^DD(358.5,.06,0)
	;;=TEXT LABEL^F^^0;6^K:$L(X)>150!($L(X)<1) X
	;;^DD(358.5,.06,.1)
	;;=WHAT LABEL SHOULD BEGIN THE TEXT (OPTIONAL)
	;;^DD(358.5,.06,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(358.5,.06,2.1)
	;;=S Y=+Y+1
	;;^DD(358.5,.06,3)
	;;=You can optionally begin the text with a label of your choice.
	;;^DD(358.5,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.5,.06,21,1,0)
	;;= 
	;;^DD(358.5,.06,21,2,0)
	;;=The label that should precede the text.
	;;^DD(358.5,.06,"DT")
	;;=2930825
	;;^DD(358.5,.07,0)
	;;=TEXT LABEL APPEARANCE^FX^^0;7^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBR"'[$E(X,1))!("UBR"'[$E(X,2))!("UBR"'[$E(X,3)) X
	;;^DD(358.5,.07,.1)
	;;=HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {B,U,R}

IBDIN02W
IBDIN02W	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.5,.07,3)
	;;=B=bold,U=underline,R=reverse. You can enter BU to make the label bold and underlined.
	;;^DD(358.5,.07,21,0)
	;;=^^3^3^2940527^^^
	;;^DD(358.5,.07,21,1,0)
	;;= 
	;;^DD(358.5,.07,21,2,0)
	;;=The label can have characteristics, such as being underlined or
	;;^DD(358.5,.07,21,3,0)
	;;=emboldened.
	;;^DD(358.5,.07,"DT")
	;;=2940527
	;;^DD(358.5,.1,0)
	;;=TEXT STARTING COLUMN^NJ3,0XO^^0;10^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.5,.1,.1)
	;;=WHAT BLOCK COLUMN SHOULD THE TEXT START AT?
	;;^DD(358.5,.1,2)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.5,.1,2.1)
	;;=S Y=+Y+1
	;;^DD(358.5,.1,3)
	;;=What block column should the text start at?
	;;^DD(358.5,.1,21,0)
	;;=^^2^2^2930715^^
	;;^DD(358.5,.1,21,1,0)
	;;=This field determines what column the text should begin in.
	;;^DD(358.5,.1,21,2,0)
	;;=Applies only if the Package Interface returns a word-processing field.
	;;^DD(358.5,.1,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.5,.1,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.5,.1,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.5,.1,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.5,.1,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.5,.1,"DT")
	;;=2940527
	;;^DD(358.5,.11,0)
	;;=TEXT STARTING ROW^NJ3,0XO^^0;11^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.5,.11,.1)
	;;=WHAT BLOCK ROW SHOULD THE TEXT START AT?
	;;^DD(358.5,.11,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(358.5,.11,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.5,.11,3)
	;;=What block row should the text begin in?
	;;^DD(358.5,.11,21,0)
	;;=^^4^4^2930715^^
	;;^DD(358.5,.11,21,1,0)
	;;= 
	;;^DD(358.5,.11,21,2,0)
	;;=Determines which line on the form, relative to the block, the text area
	;;^DD(358.5,.11,21,3,0)
	;;=should begin at. Only applies if the package interface returns a
	;;^DD(358.5,.11,21,4,0)
	;;=word-processing field.
	;;^DD(358.5,.11,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.5,.11,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.5,.11,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.5,.11,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.5,.11,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.5,.11,"DT")
	;;=2940527
	;;^DD(358.5,.12,0)
	;;=NUMBER OF FORM LINES FOR TEXT^NJ3,0^^0;12^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.5,.12,.1)
	;;=HOW MANY LINES OF THE FORM SHOULD BE ALLOCATED FOR THE TEXT?
	;;^DD(358.5,.12,3)
	;;=How many lines of the form should be allocated for the text?
	;;^DD(358.5,.12,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.5,.12,21,1,0)
	;;= 
	;;^DD(358.5,.12,21,2,0)
	;;=The number of lines on the form that should be allocated for the text.
	;;^DD(358.5,.12,"DT")
	;;=2930414
	;;^DD(358.5,.13,0)
	;;=SPACING OF TEXT LINES^S^1:SINGLE SPACED;2:DOUBLE SPACED;3:SINGLE, BUT DOUBLE IF BLANK;^0;13^Q
	;;^DD(358.5,.13,.1)
	;;=HOW SHOULD THE TEXT LINES BE SPACED?
	;;^DD(358.5,.13,3)
	;;=How do you want the text lines to be spaced?
	;;^DD(358.5,.13,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.5,.13,21,1,0)
	;;= 
	;;^DD(358.5,.13,21,2,0)
	;;=Determines the spacing between lines of text.
	;;^DD(358.5,.13,"DT")
	;;=2930414
	;;^DD(358.5,.14,0)
	;;=WIDTH OF TEXT LINES^NJ3,0^^0;14^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.5,.14,.1)
	;;=HOW MANY CHARACTERS ACROSS SHOULD THE TEXT LINES BE?
	;;^DD(358.5,.14,3)
	;;=How many columns wide do you want the text?
	;;^DD(358.5,.14,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.5,.14,21,1,0)
	;;= 
	;;^DD(358.5,.14,21,2,0)
	;;=Determines how many characters across should be allocated to the text.
	;;^DD(358.5,.14,"DT")
	;;=2930414
	;;^DD(358.5,2,0)
	;;=SUBFIELD^358.52I^^2;0
	;;^DD(358.5,2,21,0)
	;;=^^2^2^2940816^^^^
	;;^DD(358.5,2,21,1,0)
	;;=A data field can be composed of multiple subfields. Each subfield can have
	;;^DD(358.5,2,21,2,0)
	;;=a label and data.
	;;^DD(358.5,2,"DT")
	;;=2930323
	;;^DD(358.52,0)
	;;=SUBFIELD SUB-FIELD^^.09^8
	;;^DD(358.52,0,"DIK")
	;;=IBXF5
	;;^DD(358.52,0,"DT")
	;;=2930730
	;;^DD(358.52,0,"IX","B",358.52,.01)
	;;=
	;;^DD(358.52,0,"NM","SUBFIELD")
	;;=
	;;^DD(358.52,0,"UP")
	;;=358.5
	;;^DD(358.52,.01,0)
	;;=SUBFIELD LABEL^MF^^0;1^K:$L(X)>150!($L(X)<1) X
	;;^DD(358.52,.01,1,0)
	;;=^.1
	;;^DD(358.52,.01,1,1,0)
	;;=358.52^B
	;;^DD(358.52,.01,1,1,1)
	;;=S ^IBE(358.5,DA(1),2,"B",$E(X,1,30),DA)=""
	;;^DD(358.52,.01,1,1,2)
	;;=K ^IBE(358.5,DA(1),2,"B",$E(X,1,30),DA)

IBDIN02X
IBDIN02X	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.52,.01,3)
	;;=What should the subfield be named? The label will print unless it is made invisible.
	;;^DD(358.52,.01,4)
	;;=
	;;^DD(358.52,.01,21,0)
	;;=^^3^3^2931020^^^^
	;;^DD(358.52,.01,21,1,0)
	;;= 
	;;^DD(358.52,.01,21,2,0)
	;;=The name of the subfield. The label prints to the form unless it is made
	;;^DD(358.52,.01,21,3,0)
	;;=invisible.
	;;^DD(358.52,.01,"DT")
	;;=2930730
	;;^DD(358.52,.03,0)
	;;=SUBFIELD LABEL APPEARANCE^FX^^0;3^S X=$$UPPER^VALM1(X) K:$L(X)>4!("UBRI"'[$E(X,1))!("UBRI"'[$E(X,2))!("UBRI"'[$E(X,3))!("UBRI"'[$E(X,4)) X
	;;^DD(358.52,.03,.1)
	;;=HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {U,B,R,I}
	;;^DD(358.52,.03,3)
	;;=B=bold,U=underline,R=reverse,I=invisible You can enter any combination of {B,U,R,I}. The label will not print if it is made invisible.
	;;^DD(358.52,.03,4)
	;;=
	;;^DD(358.52,.03,21,0)
	;;=^^4^4^2940526^^^
	;;^DD(358.52,.03,21,1,0)
	;;= 
	;;^DD(358.52,.03,21,2,0)
	;;=The label can be made bold, underlined, or invisible. It can also be printed
	;;^DD(358.52,.03,21,3,0)
	;;= in reverse, i.e., white on black. This field determines which of those
	;;^DD(358.52,.03,21,4,0)
	;;= characteristics apply.
	;;^DD(358.52,.03,"DT")
	;;=2940816
	;;^DD(358.52,.04,0)
	;;=STARTING COLUMN FOR LABEL^NJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.52,.04,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(358.52,.04,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.52,.04,3)
	;;=What block column should the label start in?
	;;^DD(358.52,.04,21,0)
	;;=^^2^2^2930715^^
	;;^DD(358.52,.04,21,1,0)
	;;= 
	;;^DD(358.52,.04,21,2,0)
	;;=The column, relative to the block, that the label should start at.
	;;^DD(358.52,.04,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.52,.04,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.52,.04,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.52,.04,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.52,.04,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.52,.04,"DT")
	;;=2930617
	;;^DD(358.52,.05,0)
	;;=STARTING ROW FOR LABEL^NJ3,0XO^^0;5^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.52,.05,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(358.52,.05,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.52,.05,3)
	;;=What block row should the label start in?
	;;^DD(358.52,.05,21,0)
	;;=^^2^2^2930608^
	;;^DD(358.52,.05,21,1,0)
	;;= 
	;;^DD(358.52,.05,21,2,0)
	;;=The row the label should be printed on.
	;;^DD(358.52,.05,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.52,.05,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.52,.05,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.52,.05,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.52,.05,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.52,.05,"DT")
	;;=2930617
	;;^DD(358.52,.06,0)
	;;=STARTING ROW FOR DATA^NJ3,0XO^^0;6^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.52,.06,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(358.52,.06,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.52,.06,3)
	;;=What block row should the data begin in?
	;;^DD(358.52,.06,21,0)
	;;=^^2^2^2930715^^
	;;^DD(358.52,.06,21,1,0)
	;;= 
	;;^DD(358.52,.06,21,2,0)
	;;=The row, relative to the block, that the data should print on.
	;;^DD(358.52,.06,23,0)
	;;=^^4^4^2930715^^
	;;^DD(358.52,.06,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.52,.06,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.52,.06,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.52,.06,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.52,.06,"DT")
	;;=2930617
	;;^DD(358.52,.07,0)
	;;=STARTING COLUMN FOR DATA^NJ3,0XO^^0;7^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.52,.07,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(358.52,.07,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.52,.07,3)
	;;=What block column should the data begin in?
	;;^DD(358.52,.07,21,0)
	;;=^^2^2^2930608^
	;;^DD(358.52,.07,21,1,0)
	;;= 
	;;^DD(358.52,.07,21,2,0)
	;;=The column, relative to the block, that the data should print on.
	;;^DD(358.52,.07,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.52,.07,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.52,.07,23,2,0)
	;;=starts at 1. The difference is because for computing the form image

IBDIN02Y
IBDIN02Y	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.52,.07,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.52,.07,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.52,.07,"DT")
	;;=2930617
	;;^DD(358.52,.08,0)
	;;=LENGTH OF DATA^NJ3,0^^0;8^K:+X'=X!(X>150)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.52,.08,3)
	;;=How much space on the line should be allocated for the information to be displayed?
	;;^DD(358.52,.08,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.52,.08,21,1,0)
	;;= 
	;;^DD(358.52,.08,21,2,0)
	;;=The amount of space, in terms of characters, that should be allocated
	;;^DD(358.52,.08,21,3,0)
	;;=to the data.
	;;^DD(358.52,.08,"DT")
	;;=2930322
	;;^DD(358.52,.09,0)
	;;=DATA^NJ1,0X^^0;9^K:+X'=X!(X>7)!(X<1)!(X?.E1"."1N.N)!($P($G(^IBE(358.6,+$P($G(^IBE(358.5,DA(1),0)),U,3),2)),U,(2*X)-1)="") X
	;;^DD(358.52,.09,.1)
	;;=WHAT DATA SHOULD BE DISPLAYED IN THIS SUBFIELD?
	;;^DD(358.52,.09,3)
	;;=WHAT DATA SHOULD BE DISPLAYED IN THIS SUBFIELD?
	;;^DD(358.52,.09,4)
	;;=D HELP1^IBDFU5
	;;^DD(358.52,.09,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.52,.09,21,1,0)
	;;= 
	;;^DD(358.52,.09,21,2,0)
	;;=The package interface returns a record that may be composed of multiple
	;;^DD(358.52,.09,21,3,0)
	;;=fields. This identifies which of those fields should appear in this
	;;^DD(358.52,.09,21,4,0)
	;;=subfield.
	;;^DD(358.52,.09,"DT")
	;;=2930526

IBDIN02Z
IBDIN02Z	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.6,0,"GL")
	;;=^IBE(358.6,
	;;^DIC("B","IMP/EXP PACKAGE INTERFACE",358.6)
	;;=
	;;^DIC(358.6,"%D",0)
	;;=^^1^1^2950927^^^^
	;;^DIC(358.6,"%D",1,0)
	;;=This file is used as a workspace by the import/export utility.
	;;^DD(358.6,0)
	;;=FIELD^^19^50
	;;^DD(358.6,0,"DDA")
	;;=N
	;;^DD(358.6,0,"DT")
	;;=2960214
	;;^DD(358.6,0,"ID",.06)
	;;=W ""
	;;^DD(358.6,0,"ID","WRITE")
	;;=W !,$E($P(^(0),U),1,40),?45,"TYPE=",$S($P(^(0),"^",6)=1:"INPUT",$P(^(0),"^",6)=2:"OUTPUT",$P(^(0),"^",6)=3:"SELECTION",1:"REPORT"),$S($P(^(0),U,6)=3&'$P(^(0),U,13):" ** NOT SCANNABLE **",1:""),!," "
	;;^DD(358.6,0,"IX","B",358.6,.01)
	;;=
	;;^DD(358.6,0,"IX","C",358.6,.04)
	;;=
	;;^DD(358.6,0,"IX","D",358.6,3)
	;;=
	;;^DD(358.6,0,"IX","E",358.6,.01)
	;;=
	;;^DD(358.6,0,"NM","IMP/EXP PACKAGE INTERFACE")
	;;=
	;;^DD(358.6,0,"PT",358.2,.11)
	;;=
	;;^DD(358.6,0,"PT",358.5,.03)
	;;=
	;;^DD(358.6,0,"PT",358.6,.13)
	;;=
	;;^DD(358.6,0,"PT",358.93,.06)
	;;=
	;;^DD(358.6,.01,0)
	;;=NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.6,.01,1,0)
	;;=^.1
	;;^DD(358.6,.01,1,1,0)
	;;=358.6^B
	;;^DD(358.6,.01,1,1,1)
	;;=S ^IBE(358.6,"B",$E(X,1,30),DA)=""
	;;^DD(358.6,.01,1,1,2)
	;;=K ^IBE(358.6,"B",$E(X,1,30),DA)
	;;^DD(358.6,.01,1,2,0)
	;;=358.6^E^MUMPS
	;;^DD(358.6,.01,1,2,1)
	;;=S ^IBE(358.6,"E",$E(X,$F(X," "),40),DA)=""
	;;^DD(358.6,.01,1,2,2)
	;;=K ^IBE(358.6,"E",$E(X,$F(X," "),40),DA)
	;;^DD(358.6,.01,1,2,"%D",0)
	;;=^^4^4^2940224^
	;;^DD(358.6,.01,1,2,"%D",1,0)
	;;= 
	;;^DD(358.6,.01,1,2,"%D",2,0)
	;;=For package interfaces that are output routines the name has the custodial
	;;^DD(358.6,.01,1,2,"%D",3,0)
	;;=package's name space as a prefix. This cross-reference removes that
	;;^DD(358.6,.01,1,2,"%D",4,0)
	;;=prefix. It is used to improve the display of output routines for the user.
	;;^DD(358.6,.01,1,2,"DT")
	;;=2930409
	;;^DD(358.6,.01,3)
	;;=Answer must be 3-40 characters in length. All entries with Action Type other than PRINT REPORT must be be prefixed with the namespace of the package that is responsible for the data.
	;;^DD(358.6,.01,21,0)
	;;=^^3^3^2950412^^^^
	;;^DD(358.6,.01,21,1,0)
	;;= 
	;;^DD(358.6,.01,21,2,0)
	;;=The name of the Package Interface. For interfaces returning data the name
	;;^DD(358.6,.01,21,3,0)
	;;=should be preceded with the namespace of the package.
	;;^DD(358.6,.01,23,0)
	;;=^^1^1^2950412^
	;;^DD(358.6,.01,23,1,0)
	;;= 
	;;^DD(358.6,.01,"DT")
	;;=2930409
	;;^DD(358.6,.02,0)
	;;=ENTRY POINT^F^^0;2^K:$L(X)>8!($L(X)<1) X
	;;^DD(358.6,.02,3)
	;;=What entry point into the routine does this package interface use?
	;;^DD(358.6,.02,21,0)
	;;=^^2^2^2941018^^
	;;^DD(358.6,.02,21,1,0)
	;;= 
	;;^DD(358.6,.02,21,2,0)
	;;=The entry point in the routine that should be called.
	;;^DD(358.6,.02,"DT")
	;;=2941018
	;;^DD(358.6,.03,0)
	;;=ROUTINE^F^^0;3^K:$L(X)>8!($L(X)<1) X
	;;^DD(358.6,.03,3)
	;;=What routine does this package interface use?
	;;^DD(358.6,.03,21,0)
	;;=^^2^2^2941018^^
	;;^DD(358.6,.03,21,1,0)
	;;= 
	;;^DD(358.6,.03,21,2,0)
	;;=The routine that should be called.
	;;^DD(358.6,.03,"DT")
	;;=2921125
	;;^DD(358.6,.04,0)
	;;=CUSTODIAL PACKAGE^F^^0;4^K:$L(X)>20!($L(X)<3) X
	;;^DD(358.6,.04,1,0)
	;;=^.1
	;;^DD(358.6,.04,1,1,0)
	;;=358.6^C
	;;^DD(358.6,.04,1,1,1)
	;;=S ^IBE(358.6,"C",$E(X,1,30),DA)=""
	;;^DD(358.6,.04,1,1,2)
	;;=K ^IBE(358.6,"C",$E(X,1,30),DA)
	;;^DD(358.6,.04,1,1,"DT")
	;;=2921229
	;;^DD(358.6,.04,3)
	;;=For Package Interfaces that return data the Custodial Package is the package that is providing the data. For Package Interfaces that print reports it is the package that is providing the report.
	;;^DD(358.6,.04,21,0)
	;;=^^2^2^2940217^
	;;^DD(358.6,.04,21,1,0)
	;;=This is a free text pointer to the package file. It serves only to
	;;^DD(358.6,.04,21,2,0)
	;;=document the custodial package of the data.
	;;^DD(358.6,.04,"DT")
	;;=2930726
	;;^DD(358.6,.05,0)
	;;=VARIABLE DATA?^S^0:NO;1:YES;^0;5^Q
	;;^DD(358.6,.05,.1)
	;;=DOES THE DATA VARY FROM PATIENT TO PATIENT?
	;;^DD(358.6,.05,3)
	;;=Enter YES if the data returned is variable, NO if the data is always the same.
	;;^DD(358.6,.05,21,0)
	;;=^^3^3^2930726^^^
	;;^DD(358.6,.05,21,1,0)
	;;=This field is used in the batch printing of encounter forms. The purpose
	;;^DD(358.6,.05,21,2,0)
	;;=is to avoid recomputing fields whose data does not change from patient to
	;;^DD(358.6,.05,21,3,0)
	;;=patient.
	;;^DD(358.6,.05,"DT")
	;;=2931124
	;;^DD(358.6,.06,0)
	;;=ACTION TYPE^RS^1:INPUT;2:DISPLAY;3:SELECTION;4:PRINT REPORT;^0;6^Q
	;;^DD(358.6,.06,3)
	;;=Is this interface for inputting data, displaying data to a form, for creating lists that will appear on a form, or for printing reports?

IBDIN030
IBDIN030	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,.06,21,0)
	;;=^^9^9^2950825^
	;;^DD(358.6,.06,21,1,0)
	;;=                                                                   
	;;^DD(358.6,.06,21,2,0)
	;;= 
	;;^DD(358.6,.06,21,3,0)
	;;=Enter 1 for INPUT if the interface accepts data input from the user
	;;^DD(358.6,.06,21,4,0)
	;;=and transmits the data to the appropriate package. Enter 2 for DISPLAY
	;;^DD(358.6,.06,21,5,0)
	;;=if the interface retrieve data for display to a form. Enter 3 for
	;;^DD(358.6,.06,21,6,0)
	;;=SELECTION if the interface is for building a list to display
	;;^DD(358.6,.06,21,7,0)
	;;=to a form. Enter 4 if the interface is for printing a report. If
	;;^DD(358.6,.06,21,8,0)
	;;=the ACTION TYPE is SELECTION then the data type must be a record and the
	;;^DD(358.6,.06,21,9,0)
	;;=first piece must be the ID use to uniquely identify the selection.
	;;^DD(358.6,.06,"DT")
	;;=2950825
	;;^DD(358.6,.07,0)
	;;=DATA TYPE^S^1:SINGLE VALUE;2:RECORD;3:LIST OF SINGLE VALUES;4:LIST OF RECORDS;5:WORD PROCESSING;^0;7^Q
	;;^DD(358.6,.07,.1)
	;;=WHAT FORMAT WILL THE DATA BE IN?
	;;^DD(358.6,.07,3)
	;;=What format will the data be in?
	;;^DD(358.6,.07,21,0)
	;;=^^9^9^2950825^
	;;^DD(358.6,.07,21,1,0)
	;;=Only applies to selection or display interfaces, both of which retrieve
	;;^DD(358.6,.07,21,2,0)
	;;=data for display to a form. It is the type of format the data should be
	;;^DD(358.6,.07,21,3,0)
	;;=in.
	;;^DD(358.6,.07,21,4,0)
	;;= 
	;;^DD(358.6,.07,21,5,0)
	;;=A single value is a string without pieces. A record is a set of strings
	;;^DD(358.6,.07,21,6,0)
	;;=concatenated together with "^" separating the pieces. A list is an
	;;^DD(358.6,.07,21,7,0)
	;;=indefinite number of values, each numbered, each containing the same type
	;;^DD(358.6,.07,21,8,0)
	;;=of information. A word processing data type will be in FM format.
	;;^DD(358.6,.07,21,9,0)
	;;=If the ACTION TYPE is SELECTION then the data type must be record.
	;;^DD(358.6,.07,"DT")
	;;=2930726
	;;^DD(358.6,.08,0)
	;;=PRINT COMPLETE^S^0:NO;1:YES;^0;8^Q
	;;^DD(358.6,.08,3)
	;;=If there is insufficient room on the form to print the data, should it be re-printed in full on a separate page?
	;;^DD(358.6,.08,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.6,.08,21,1,0)
	;;= 
	;;^DD(358.6,.08,21,2,0)
	;;=This field is used to determine what should happen if the data does not
	;;^DD(358.6,.08,21,3,0)
	;;=fit in the space allocated to it on the form. If answered YES the data
	;;^DD(358.6,.08,21,4,0)
	;;=will be printed on another page.
	;;^DD(358.6,.08,"DT")
	;;=2930507
	;;^DD(358.6,.09,0)
	;;=AVAILABLE? (Y/N)^RS^0:NO;1:YES;^0;9^Q
	;;^DD(358.6,.09,3)
	;;=Is this package interface now available for use?
	;;^DD(358.6,.09,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.6,.09,21,1,0)
	;;= 
	;;^DD(358.6,.09,21,2,0)
	;;=This field should be set to YES if the interface is available, NO if it is
	;;^DD(358.6,.09,21,3,0)
	;;=not available. Interfaces that are not available are not called.
	;;^DD(358.6,.09,"DT")
	;;=2921213
	;;^DD(358.6,.1,0)
	;;=HEALTH SUMMARY?^S^0:NO;1:YES;^0;10^Q
	;;^DD(358.6,.1,.1)
	;;=ARE YOU REQUESTING A HEALTH SUMMARY?
	;;^DD(358.6,.1,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.6,.1,3)
	;;= Are you requesting a HEALTH SUMMARY to print?
	;;^DD(358.6,.1,21,0)
	;;=^^7^7^2930616^
	;;^DD(358.6,.1,21,1,0)
	;;= 
	;;^DD(358.6,.1,21,2,0)
	;;=This field will determine how to go about printing the report or form. It
	;;^DD(358.6,.1,21,3,0)
	;;=applies only to Package Interfaces of ACTION TYPE = PRINT REPORT. Health
	;;^DD(358.6,.1,21,4,0)
	;;=Summaries use the field HEALTH SUMMARY to determine the type of Health
	;;^DD(358.6,.1,21,5,0)
	;;=Summary to print. The process of printing Health Summaries dos not use the
	;;^DD(358.6,.1,21,6,0)
	;;=fields ENTRY POINT or ROUTINE, since all Health Summaries are printed in
	;;^DD(358.6,.1,21,7,0)
	;;=the same way.
	;;^DD(358.6,.1,"DT")
	;;=2930616
	;;^DD(358.6,.11,0)
	;;=TYPE OF HEALTH SUMMARY^*P142'^GMT(142,^0;11^S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(358.6,.11,3)
	;;=Which Health Summary do you want printed?
	;;^DD(358.6,.11,12)
	;;=EXCLUDES AD HOC HEALTH SUMMARIES
	;;^DD(358.6,.11,12.1)
	;;=S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION"""
	;;^DD(358.6,.11,21,0)
	;;=^^4^4^2940224^
	;;^DD(358.6,.11,21,1,0)
	;;= 
	;;^DD(358.6,.11,21,2,0)
	;;=This identifies the Health Summary that should be printed when this
	;;^DD(358.6,.11,21,3,0)
	;;=Package Interface is invoked. It should be null unless the HEALTH SUMMARY?
	;;^DD(358.6,.11,21,4,0)
	;;=field #.1 is coded YES.
	;;^DD(358.6,.11,"DT")
	;;=2930617

IBDIN031
IBDIN031	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,.12,0)
	;;=TOOLKIT MEMBER?^S^0:NO;1:YES;^0;12^Q
	;;^DD(358.6,.12,.1)
	;;=SHOULD THIS PACKAGE INTERFACE BE PART OF THE TOOLKIT?
	;;^DD(358.6,.12,3)
	;;=Enter YES if this PACKAGE INTERFACE was added by the package developers as part of the toolkit, enter NO otherwise.
	;;^DD(358.6,.12,21,0)
	;;=^^3^3^2950808^^
	;;^DD(358.6,.12,21,1,0)
	;;= 
	;;^DD(358.6,.12,21,2,0)
	;;=Package Interfaces that are developed for national use will be documented
	;;^DD(358.6,.12,21,3,0)
	;;=as being part of the toolkit.
	;;^DD(358.6,.12,"DT")
	;;=2950711
	;;^DD(358.6,.13,0)
	;;=PACKAGE INTERFACE FOR INPUT^*P358.6'^IBE(358.6,^0;13^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""S""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(358.6,.13,.1)
	;;=WHICH INTERFACE SHOULD THIS LIST USE FOR PASSING DATA TO THE DATA BASE?
	;;^DD(358.6,.13,3)
	;;=What interface should be used for inputting data entered on the selection list?
	;;^DD(358.6,.13,12)
	;;=Must be an available interfaces for accepting input from selection lists.
	;;^DD(358.6,.13,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""S"""
	;;^DD(358.6,.13,21,0)
	;;=^^1^1^2950825^^^^
	;;^DD(358.6,.13,21,1,0)
	;;=Used to map scanned data to DHCP.
	;;^DD(358.6,.13,"DT")
	;;=2950825
	;;^DD(358.6,.14,0)
	;;=DYNAMIC SELECTIONS^S^0:NO;1:YES;^0;14^Q
	;;^DD(358.6,.14,3)
	;;=Only for selection routines. Enter YES if the Package Interface builds the selection list each time the form is printed.
	;;^DD(358.6,.14,21,0)
	;;=^^2^2^2950719^
	;;^DD(358.6,.14,21,1,0)
	;;=This is used to indicate whether the interface is used to build selection
	;;^DD(358.6,.14,21,2,0)
	;;=lists at print time.
	;;^DD(358.6,.14,"DT")
	;;=2941221
	;;^DD(358.6,.15,0)
	;;=DO NOT USE DFN AS A SUBSCRIPT^*S^0:NO;1:YES;^0;15^Q
	;;^DD(358.6,.15,3)
	;;=If the patient DFN should not be used as a subscript when passing data enter YES.
	;;^DD(358.6,.15,12)
	;;=If the action type is not OUTPUT ROUTINE then this field should not be set to NO.
	;;^DD(358.6,.15,12.1)
	;;=S DIC("S")="I (Y=1)!($P(^IBE(358.6,DA,0),U,6)=2)"
	;;^DD(358.6,.15,21,0)
	;;=^^6^6^2950413^^^^
	;;^DD(358.6,.15,21,1,0)
	;;=Originally, the patient DFN was used as a subscript when returning data
	;;^DD(358.6,.15,21,2,0)
	;;=for Package Interfaces of type output, but not for other types of
	;;^DD(358.6,.15,21,3,0)
	;;=interfaces. It is no longer necessary for any new Package Interface to use
	;;^DD(358.6,.15,21,4,0)
	;;=DFN as a subscript, but, to maintain compatibilty, output routines
	;;^DD(358.6,.15,21,5,0)
	;;=must set this field to YES if DFN is not to be used as a subscript. This
	;;^DD(358.6,.15,21,6,0)
	;;=field has no effect on other types of interfaces.
	;;^DD(358.6,.15,"DT")
	;;=2950413
	;;^DD(358.6,.16,0)
	;;=ALLOWED OBJECT USE^FX^^0;16^S X=$$UPPER^VALM1(X) K:$L(X)>4!("SMHP"'[$E(X,1))!("SMHP"'[$E(X,2))!("SMHP"'[$E(X,3))!("SMHP"'[$E(X,4)) X
	;;^DD(358.6,.16,3)
	;;=
	;;^DD(358.6,.16,4)
	;;=D HELP7^IBDFU5A
	;;^DD(358.6,.16,21,0)
	;;=^^5^5^2950913^^^^
	;;^DD(358.6,.16,21,1,0)
	;;=This field applies only to package interfaces for input and is used to
	;;^DD(358.6,.16,21,2,0)
	;;=determine which package interfaces a particular type of form object may
	;;^DD(358.6,.16,21,3,0)
	;;=point to. Some combinations don't make sense. For example, it would not
	;;^DD(358.6,.16,21,4,0)
	;;=make sense to allow a multiple choice question to point to vitals, which
	;;^DD(358.6,.16,21,5,0)
	;;=is used to input data such as temperature and blood pressure.
	;;^DD(358.6,.16,"DT")
	;;=2950913
	;;^DD(358.6,.17,0)
	;;=ASK FOR ADDITIONAL NARRATIVE^S^0:NO;1:YES;^0;17^Q
	;;^DD(358.6,.17,3)
	;;=Answer yes or no.
	;;^DD(358.6,.17,21,0)
	;;=^^8^8^2960123^
	;;^DD(358.6,.17,21,1,0)
	;;=Enter whether users should be prompted for specifying the provider
	;;^DD(358.6,.17,21,2,0)
	;;=narrative that will be sent to PCE (and problem list) when creating a
	;;^DD(358.6,.17,21,3,0)
	;;=selection list.  If this is answered no and the narrative is sent to
	;;^DD(358.6,.17,21,4,0)
	;;=PCE then the text as it appears on the form will be used as the
	;;^DD(358.6,.17,21,5,0)
	;;=provider narrative.
	;;^DD(358.6,.17,21,6,0)
	;;= 
	;;^DD(358.6,.17,21,7,0)
	;;=Generally only diagnosis and clinical lexicon entries will want this
	;;^DD(358.6,.17,21,8,0)
	;;=field set to Yes.
	;;^DD(358.6,.17,"DT")
	;;=2960123
	;;^DD(358.6,.18,0)
	;;=ASK FOR CLINICAL LEXICON^S^0:NO;1:YES;^0;18^Q
	;;^DD(358.6,.18,3)
	;;= Enter 'Yes' if you want to map entries from this interface to the clinical lexicon.
	;;^DD(358.6,.18,21,0)
	;;=^^10^10^2960205^
	;;^DD(358.6,.18,21,1,0)
	;;=If this field is answered 'Yes' then users who are editing or creating

IBDIN032
IBDIN032	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,.18,21,2,0)
	;;=selection lists based on this interface will be asked to map each entry
	;;^DD(358.6,.18,21,3,0)
	;;=(thought it is optional) to a clinical lexicon entry.  This is highly
	;;^DD(358.6,.18,21,4,0)
	;;=recommended for user who are scanning diagnosis entries and trying to 
	;;^DD(358.6,.18,21,5,0)
	;;=add entries to the Patients Problem list.
	;;^DD(358.6,.18,21,6,0)
	;;= 
	;;^DD(358.6,.18,21,7,0)
	;;=The primary purpose of this field is to allow sites who have built selection
	;;^DD(358.6,.18,21,8,0)
	;;=lists using the ICD9 Diagnosis file to map each entry to the clinical lexicon.
	;;^DD(358.6,.18,21,9,0)
	;;=The Problem List EP has recommended that each problem added to the problem
	;;^DD(358.6,.18,21,10,0)
	;;=list be associated with a clinical lexicon entry.
	;;^DD(358.6,.18,"DT")
	;;=2960205
	;;^DD(358.6,.19,0)
	;;=DQ REQUIRED^S^1:YES;^0;19^Q
	;;^DD(358.6,.19,21,0)
	;;=^^2^2^2960212^
	;;^DD(358.6,.19,21,1,0)
	;;=Field used to determine if a data qualifier is required for this
	;;^DD(358.6,.19,21,2,0)
	;;=input interface.
	;;^DD(358.6,.19,"DT")
	;;=2960212
	;;^DD(358.6,1,0)
	;;=DESCRIPTION^358.61^^1;0
	;;^DD(358.6,1,21,0)
	;;=^^1^1^2950719^^^^
	;;^DD(358.6,1,21,1,0)
	;;=Should describe the data being exchanged by the package interface.
	;;^DD(358.6,2.01,0)
	;;=PIECE 1 DESCRIPTIVE NAME^F^^2;1^K:$L(X)>30!($L(X)<3) X
	;;^DD(358.6,2.01,.1)
	;;=WHAT IS THE FIRST PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(358.6,2.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.6,2.01,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.6,2.01,21,1,0)
	;;= 
	;;^DD(358.6,2.01,21,2,0)
	;;=Should be a descriptive name of the first field in the record returned by
	;;^DD(358.6,2.01,21,3,0)
	;;=the interface.
	;;^DD(358.6,2.01,"DT")
	;;=2930726
	;;^DD(358.6,2.02,0)
	;;=PIECE 1 MAXIMUM LENGTH^NJ3,0^^2;2^K:+X'=X!(X>210)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.6,2.02,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(358.6,2.02,3)
	;;=Type a Number between 0 and 210, 0 Decimal Digits
	;;^DD(358.6,2.02,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.6,2.02,21,1,0)
	;;= 
	;;^DD(358.6,2.02,21,2,0)
	;;=The maximum length of the first field of the record returned by the
	;;^DD(358.6,2.02,21,3,0)
	;;=interface.
	;;^DD(358.6,2.02,"DT")
	;;=2930726
	;;^DD(358.6,2.16,0)
	;;=PIECE 1 RECOMMENDED HEADER^F^^2;16^K:$L(X)>20!($L(X)<1) X
	;;^DD(358.6,2.16,3)
	;;=Answer must be 1-20 characters in length.
	;;^DD(358.6,2.16,21,0)
	;;=^^1^1^2950719^
	;;^DD(358.6,2.16,21,1,0)
	;;=The recommended header will be used as the default when designing a form.
	;;^DD(358.6,2.16,"DT")
	;;=2950417
	;;^DD(358.6,2.17,0)
	;;=IS PIECE 1 DISPLAYABLE?^S^0:NO;1:YES;^2;17^Q
	;;^DD(358.6,2.17,.1)
	;;=CAN THIS FIELD BE DISPLAYED TO THE USER?
	;;^DD(358.6,2.17,3)
	;;=The first piece of the returned record is reserved for the unique id of the selection. Enter no if it should not be displayed, for example, if it is a pointer.
	;;^DD(358.6,2.17,21,0)
	;;=^^3^3^2950719^^
	;;^DD(358.6,2.17,21,1,0)
	;;=This is used only for selection type interfaces. If NO, then the value can
	;;^DD(358.6,2.17,21,2,0)
	;;=not be displayed to the encounter form.  The first piece must contain the
	;;^DD(358.6,2.17,21,3,0)
	;;=unique id of the selection.
	;;^DD(358.6,2.17,"DT")
	;;=2930810
	;;^DD(358.6,2.18,0)
	;;=EXPORT SELECTIONS/CHOICES?^S^0:NO;1:YES;^2;18^Q
	;;^DD(358.6,2.18,3)
	;;=Enter NO if the ID returned by the PACKAGE INTERFACE is not constant between sites, for example, if it is a pointer. Otherwise answer YES.
	;;^DD(358.6,2.18,21,0)
	;;=^^8^8^2950825^
	;;^DD(358.6,2.18,21,1,0)
	;;= 
	;;^DD(358.6,2.18,21,2,0)
	;;= 
	;;^DD(358.6,2.18,21,3,0)
	;;=Applies to selection and input routines. Determines whether
	;;^DD(358.6,2.18,21,4,0)
	;;=selections appearing on selection lists and choices in a multiple choice
	;;^DD(358.6,2.18,21,5,0)
	;;=field will be exported along with the form that they appear on. The
	;;^DD(358.6,2.18,21,6,0)
	;;=import/export utility will not resolve pointers, so if the id used by
	;;^DD(358.6,2.18,21,7,0)
	;;=the package interface is a pointer that differs between sites
	;;^DD(358.6,2.18,21,8,0)
	;;=this field should contain NO.
	;;^DD(358.6,2.18,"DT")
	;;=2950825
	;;^DD(358.6,3,0)
	;;=USER LOOKUP^F^^3;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>240!($L(X)<1) X
	;;^DD(358.6,3,.1)
	;;=LIST OF WORDS TO MAKE LOOK-UPS EASIER
	;;^DD(358.6,3,1,0)
	;;=^.1
	;;^DD(358.6,3,1,1,0)
	;;=358.6^D^KWIC
	;;^DD(358.6,3,1,1,1)
	;;=S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^IBE(358.6,"D",I,DA)=""

IBDIN033
IBDIN033	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,3,1,1,2)
	;;=S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^IBE(358.6,"D",I,DA)
	;;^DD(358.6,3,1,1,"%D",0)
	;;=^^3^3^2930409^^
	;;^DD(358.6,3,1,1,"%D",1,0)
	;;= 
	;;^DD(358.6,3,1,1,"%D",2,0)
	;;=This index is meant to assist the user in locating the correct package
	;;^DD(358.6,3,1,1,"%D",3,0)
	;;=interface needed to display a particular item of data to a form.
	;;^DD(358.6,3,1,1,"DT")
	;;=2930309
	;;^DD(358.6,3,3)
	;;=Enter words separated with spaces. They will be indexed to assist in lookup.
	;;^DD(358.6,3,4)
	;;=D LOOKUP^IBDF16
	;;^DD(358.6,3,21,0)
	;;=^^4^4^2940217^
	;;^DD(358.6,3,21,1,0)
	;;= 
	;;^DD(358.6,3,21,2,0)
	;;=This field is used to create a KWIC index for this file. The purpose is to
	;;^DD(358.6,3,21,3,0)
	;;=assist the user in locating the package interface he needs to display a
	;;^DD(358.6,3,21,4,0)
	;;=particular item of data to a form.
	;;^DD(358.6,3,"DT")
	;;=2930726
	;;^DD(358.6,4.01,0)
	;;=ENTRY ACTION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,4.01,3)
	;;=This is Standard MUMPS code.
	;;^DD(358.6,4.01,9)
	;;=@
	;;^DD(358.6,4.01,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.6,4.01,21,1,0)
	;;= 
	;;^DD(358.6,4.01,21,2,0)
	;;=This code will be executed after the PROTECTED VARIABLES are newed, but
	;;^DD(358.6,4.01,21,3,0)
	;;=before the interface routine is called.
	;;^DD(358.6,4.01,"DT")
	;;=2930521
	;;^DD(358.6,5.01,0)
	;;=EXIT ACTION^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,5.01,3)
	;;=This is Standard MUMPS code.
	;;^DD(358.6,5.01,9)
	;;=@
	;;^DD(358.6,5.01,21,0)
	;;=^^3^3^2930528^
	;;^DD(358.6,5.01,21,1,0)
	;;= 
	;;^DD(358.6,5.01,21,2,0)
	;;=This code will be executed after the interface routine is called.
	;;^DD(358.6,5.01,21,3,0)
	;;=The effect of the NEW done on the PROTECTED VARIABLES is still in effect.
	;;^DD(358.6,5.01,"DT")
	;;=2930518
	;;^DD(358.6,6,0)
	;;=PROTECTED LOCAL VARIABLES^358.66^^6;0
	;;^DD(358.6,6,21,0)
	;;=^^11^11^2950719^^^
	;;^DD(358.6,6,21,1,0)
	;;= 
	;;^DD(358.6,6,21,2,0)
	;;=This is a list of variables that should be newed before the entry action
	;;^DD(358.6,6,21,3,0)
	;;=or calling the interface routine. It is protection against interfaces that
	;;^DD(358.6,6,21,4,0)
	;;=alter or kill variables, or entry actions that do so. Note that REQUIRED
	;;^DD(358.6,6,21,5,0)
	;;=VARIABLES should not also be PROTECTED VARIABLES. If an interface routine
	;;^DD(358.6,6,21,6,0)
	;;=changes a required variable, however, there is a way to protect it.
	;;^DD(358.6,6,21,7,0)
	;;=Supposing, for example, DFN is killed by the interface. This will protect
	;;^DD(358.6,6,21,8,0)
	;;=it:
	;;^DD(358.6,6,21,9,0)
	;;=     PROTECTED VARIABLE:   IBDFN
	;;^DD(358.6,6,21,10,0)
	;;=     ENTRY ACTION:  S IBDFN=DFN
	;;^DD(358.6,6,21,11,0)
	;;=     EXIT ACTION:   S DFN=IBDFN
	;;^DD(358.6,7,0)
	;;=REQUIRED LOCAL VARIABLES^358.67^^7;0
	;;^DD(358.6,7,21,0)
	;;=^^4^4^2930528^
	;;^DD(358.6,7,21,1,0)
	;;= 
	;;^DD(358.6,7,21,2,0)
	;;=The interface may require inputs. This field is a list of the required
	;;^DD(358.6,7,21,3,0)
	;;=local variables. The interface will not be called unless the variables are
	;;^DD(358.6,7,21,4,0)
	;;=determined to exist.
	;;^DD(358.6,9,0)
	;;=PCE DIM INPUT TRANSFORM^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,9,3)
	;;=The input transform should transform X to the value that should be passed.
	;;^DD(358.6,9,9)
	;;=@
	;;^DD(358.6,9,21,0)
	;;=^^3^3^2960401^^^^
	;;^DD(358.6,9,21,1,0)
	;;=Used to transform X, the identifier stored with the form object, to the
	;;^DD(358.6,9,21,2,0)
	;;=form that should be passed to the PCE Device Interface Module (DIM). It may,
	;;^DD(358.6,9,21,3,0)
	;;=for example, transform a code to an ien.
	;;^DD(358.6,9,"DT")
	;;=2960401
	;;^DD(358.6,10,0)
	;;=HELP TEXT^F^^10;1^K:$L(X)>245!($L(X)<1) X
	;;^DD(358.6,10,3)
	;;=This should provide some help to the user who is trying to enter a value associated with a bubble.
	;;^DD(358.6,10,21,0)
	;;=^^2^2^2950817^^^
	;;^DD(358.6,10,21,1,0)
	;;=This should provide some help to the user who is trying to enter a value
	;;^DD(358.6,10,21,2,0)
	;;=associated with a bubble.
	;;^DD(358.6,10,"DT")
	;;=2950522
	;;^DD(358.6,11,0)
	;;=VALIDATOR^K^^11;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,11,3)
	;;=This is Standard MUMPS code will kill X if X no longer identifies a valid code.
	;;^DD(358.6,11,9)
	;;=@
	;;^DD(358.6,11,21,0)
	;;=^^7^7^2950825^
	;;^DD(358.6,11,21,1,0)
	;;=This field is used to validate codes currently on a form. The variable X
	;;^DD(358.6,11,21,2,0)
	;;=should be set to the identifier that was returned by the Package

IBDIN034
IBDIN034	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,11,21,3,0)
	;;=Interface. For selection interfaces, the identifier is always piece 1 of
	;;^DD(358.6,11,21,4,0)
	;;=the 0 node of the entry in the selection list. Xecuting this field will
	;;^DD(358.6,11,21,5,0)
	;;=result in X being killed if the value is not valid. This is used by the
	;;^DD(358.6,11,21,6,0)
	;;=maintanance utility, for example, to find CPT codes that have been
	;;^DD(358.6,11,21,7,0)
	;;=inactivated.
	;;^DD(358.6,11,"DT")
	;;=2950908
	;;^DD(358.6,12.01,0)
	;;=PCE DIM NODE^F^^12;1^K:$L(X)>30!($L(X)<1) X
	;;^DD(358.6,12.01,3)
	;;=What node will be used to pass the data?
	;;^DD(358.6,12.01,21,0)
	;;=^^1^1^2960401^^
	;;^DD(358.6,12.01,21,1,0)
	;;=The node used to pass the data to PCE, using the PCE DEVICE INTERFACE MODULE.
	;;^DD(358.6,12.01,"DT")
	;;=2960401
	;;^DD(358.6,12.02,0)
	;;=PCE DIM PIECE, VALUE^NJ2,0^^12;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,12.02,3)
	;;=What piece should be used to pass the value?
	;;^DD(358.6,12.02,21,0)
	;;=^^1^1^2960401^^^
	;;^DD(358.6,12.02,21,1,0)
	;;=The piece in the PXCA node used to pass the input value.
	;;^DD(358.6,12.02,"DT")
	;;=2960401
	;;^DD(358.6,12.03,0)
	;;=PCE DIM PIECE, NARRATIVE^NJ2,0^^12;3^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,12.03,3)
	;;=What piece should be used to pass the text displayed on the form?
	;;^DD(358.6,12.03,21,0)
	;;=^^1^1^2960401^^^^
	;;^DD(358.6,12.03,21,1,0)
	;;=The piece in the PCXA node used to pass the text displayed on the form.
	;;^DD(358.6,12.03,"DT")
	;;=2960401
	;;^DD(358.6,12.04,0)
	;;=PCE DIM PIECE, HEADER^NJ2,0^^12;4^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,12.04,3)
	;;=What piece should be used to pass the header displayed on the form?
	;;^DD(358.6,12.04,21,0)
	;;=^^2^2^2960401^^
	;;^DD(358.6,12.04,21,1,0)
	;;=The piece on the node specified by the PCE Device Interface Module
	;;^DD(358.6,12.04,21,2,0)
	;;=that the header is mapped to.
	;;^DD(358.6,12.04,"DT")
	;;=2960401
	;;^DD(358.6,12.05,0)
	;;=PCE DIM PIECE, DATA QUALIFIER^NJ2,0^^12;5^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,12.05,3)
	;;=What piece should be used to pass the data qualifier?
	;;^DD(358.6,12.05,21,0)
	;;=^^1^1^2960401^^^
	;;^DD(358.6,12.05,21,1,0)
	;;=The piece of the PXCA node where the data modifier belongs.
	;;^DD(358.6,12.05,"DT")
	;;=2960401
	;;^DD(358.6,13,0)
	;;=ALLOWABLE QUALIFIERS^358.613V^^13;0
	;;^DD(358.6,13,21,0)
	;;=^^2^2^2951018^^^^
	;;^DD(358.6,13,21,1,0)
	;;=This mulitiple contains the list of quailifiers that may apply to the
	;;^DD(358.6,13,21,2,0)
	;;=data.
	;;^DD(358.6,14,0)
	;;=PCE DIM OUTPUT TRANSFORM^K^^14;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,14,3)
	;;=This should change Y, the value to be passed, to a value suitable for display.
	;;^DD(358.6,14,9)
	;;=@
	;;^DD(358.6,14,21,0)
	;;=^^3^3^2960401^^
	;;^DD(358.6,14,21,1,0)
	;;=This transform should set Y, the value to be passed to the PCE 
	;;^DD(358.6,14,21,2,0)
	;;=Device Interface Module, to a value that is suitable for display.
	;;^DD(358.6,14,21,3,0)
	;;=It may, for example, change an ien to a code.
	;;^DD(358.6,14,"DT")
	;;=2960401
	;;^DD(358.6,15,0)
	;;=DATA DESCRIPTION^358.615I^^15;0
	;;^DD(358.6,15,21,0)
	;;=^^2^2^2950330^
	;;^DD(358.6,15,21,1,0)
	;;=For interfaces that return records, this multiple stores information on
	;;^DD(358.6,15,21,2,0)
	;;=the fields, other than the first field.
	;;^DD(358.6,16.1,0)
	;;=ALLOW INPUT OF NARRATIVE?^S^n:NO;o:OPTIONAL;r:REQUIRED;^16;1^Q
	;;^DD(358.6,16.1,3)
	;;=Should the user be allowed to enter a narrative? Answer n=NO, o=OPTIONAL, r=REQUIRED
	;;^DD(358.6,16.1,21,0)
	;;=^^2^2^2950719^
	;;^DD(358.6,16.1,21,1,0)
	;;=For input interfaces, this field determines whether a narrative is
	;;^DD(358.6,16.1,21,2,0)
	;;=allowed by the PCE Generic Device Interface.
	;;^DD(358.6,16.1,"DT")
	;;=2950421
	;;^DD(358.6,16.2,0)
	;;=NARRATIVE DATA TYPE^P358.99'^IBE(358.99,^16;2^Q
	;;^DD(358.6,16.2,3)
	;;=What data type definition describes the narrative?
	;;^DD(358.6,16.2,21,0)
	;;=^^2^2^2951018^^
	;;^DD(358.6,16.2,21,1,0)
	;;=This determines, among other things, how much space to allocate for the
	;;^DD(358.6,16.2,21,2,0)
	;;=narrative.
	;;^DD(358.6,16.2,"DT")
	;;=2951018
	;;^DD(358.6,16.3,0)
	;;=NARRATIVE HEADER^F^^16;3^K:$L(X)>40!($L(X)<1) X
	;;^DD(358.6,16.3,3)
	;;=Answer must be 1-40 characters in length.
	;;^DD(358.6,16.3,21,0)
	;;=^^1^1^2950825^
	;;^DD(358.6,16.3,21,1,0)
	;;=Used to label the narrative field.
	;;^DD(358.6,16.3,"DT")
	;;=2950815
	;;^DD(358.6,16.5,0)
	;;=ALLOW INPUT OF PRIMARY VALUE?^S^n:NO;o:OPTIONAL;r:REQUIRED;^16;5^Q
	;;^DD(358.6,16.5,3)
	;;=Should a code be entered? n=NO, o=OPTIONAL, r=REQUIRED

IBDIN035
IBDIN035	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,16.5,21,0)
	;;=^^2^2^2950719^
	;;^DD(358.6,16.5,21,1,0)
	;;=This applies only to interfaces for input and determines whether a
	;;^DD(358.6,16.5,21,2,0)
	;;=value, other than a narrative, can be entered.
	;;^DD(358.6,16.5,"DT")
	;;=2950426
	;;^DD(358.6,16.6,0)
	;;=PRIMARY VALUE DATA TYPE^P358.99'^IBE(358.99,^16;6^Q
	;;^DD(358.6,16.6,3)
	;;=What type of data is the primary value?
	;;^DD(358.6,16.6,21,0)
	;;=^^2^2^2951018^^^
	;;^DD(358.6,16.6,21,1,0)
	;;=This applies only to interfaces for input and determines, among other
	;;^DD(358.6,16.6,21,2,0)
	;;=things, the data type of the value to be entered.
	;;^DD(358.6,16.6,"DT")
	;;=2950914
	;;^DD(358.6,16.7,0)
	;;=PRIMARY VALUE HEADER^F^^16;7^K:$L(X)>40!($L(X)<1) X
	;;^DD(358.6,16.7,3)
	;;=Answer must be 1-40 characters in length.
	;;^DD(358.6,16.7,21,0)
	;;=^^1^1^2950815^
	;;^DD(358.6,16.7,21,1,0)
	;;=Used to label the primary value field.
	;;^DD(358.6,16.7,"DT")
	;;=2950815
	;;^DD(358.6,17,0)
	;;=SELECTOR^K^^17;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,17,3)
	;;=Enter mumps code that will allow the form designer to add a choice to a multiple choice field.
	;;^DD(358.6,17,9)
	;;=@
	;;^DD(358.6,17,21,0)
	;;=^^9^9^2950908^^
	;;^DD(358.6,17,21,1,0)
	;;=This field only applies to input interfaces. It is executed as by an input
	;;^DD(358.6,17,21,2,0)
	;;=transform when creating a multiple choice field. It should:
	;;^DD(358.6,17,21,3,0)
	;;=1) Kill X if an nothing is selected, otherwise set X to a value suitable
	;;^DD(358.6,17,21,4,0)
	;;=for display, perhaps the code.
	;;^DD(358.6,17,21,5,0)
	;;=2) Set IBLABEL to a suitable label for the choice.
	;;^DD(358.6,17,21,6,0)
	;;=3) Set IBID to an identifier. The identifier should ideally be exportable,
	;;^DD(358.6,17,21,7,0)
	;;=meaning the same from site to site. This usually means a coded value
	;;^DD(358.6,17,21,8,0)
	;;=rather than an ien. The identfier should match that of a corresponding
	;;^DD(358.6,17,21,9,0)
	;;=selection interface, if there is one.
	;;^DD(358.6,17,"DT")
	;;=2950908
	;;^DD(358.6,18,0)
	;;=MANUAL DATA ENTRY ROUTINE^K^^18;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,18,3)
	;;=Enter the code to be executed during manual data entry for this interface.  This is Standard MUMPS code.
	;;^DD(358.6,18,9)
	;;=@
	;;^DD(358.6,18,21,0)
	;;=^^7^7^2960123^
	;;^DD(358.6,18,21,1,0)
	;;=This field should only be completed for input package interfaces.  This
	;;^DD(358.6,18,21,2,0)
	;;=code will be executed to provide quick data entry for a user trying to
	;;^DD(358.6,18,21,3,0)
	;;=input data for a form.  It is expected that the output of this field will
	;;^DD(358.6,18,21,4,0)
	;;=be used to format the PXCA array prior to calling PCE to file the data
	;;^DD(358.6,18,21,5,0)
	;;=for the encounter.
	;;^DD(358.6,18,21,6,0)
	;;=Developers writing routines for this entry should provide a roll and
	;;^DD(358.6,18,21,7,0)
	;;=scroll interface for manual entry of items only on the form.
	;;^DD(358.6,18,"DT")
	;;=2960123
	;;^DD(358.6,19,0)
	;;=EXTERNAL DISPLAY VALUES^K^^19;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,19,3)
	;;=This is Standard MUMPS code.
	;;^DD(358.6,19,9)
	;;=@
	;;^DD(358.6,19,21,0)
	;;=^^5^5^2960214^
	;;^DD(358.6,19,21,1,0)
	;;=Executable code used to translate the internal value that is to
	;;^DD(358.6,19,21,2,0)
	;;=be passed to PCE into its external value for display purposes.  It
	;;^DD(358.6,19,21,3,0)
	;;=is used by the data validation routines to display the external
	;;^DD(358.6,19,21,4,0)
	;;=values and descriptions of the data to be passed, to the user
	;;^DD(358.6,19,21,5,0)
	;;=for verification.
	;;^DD(358.6,19,"DT")
	;;=2960214
	;;^DD(358.61,0)
	;;=DESCRIPTION SUB-FIELD^^.01^1
	;;^DD(358.61,0,"DT")
	;;=2921119
	;;^DD(358.61,0,"NM","DESCRIPTION")
	;;=
	;;^DD(358.61,0,"UP")
	;;=358.6
	;;^DD(358.61,.01,0)
	;;=/6^W^^0;1^Q
	;;^DD(358.61,.01,3)
	;;=Enter a description of the data being exchanged.
	;;^DD(358.61,.01,21,0)
	;;=^^1^1^2950719^^
	;;^DD(358.61,.01,21,1,0)
	;;=This should describe the data being exchanged b the package interface.
	;;^DD(358.61,.01,"DT")
	;;=2930210
	;;^DD(358.613,0)
	;;=ALLOWABLE QUALIFIERS SUB-FIELD^^.08^6
	;;^DD(358.613,0,"DT")
	;;=2950810
	;;^DD(358.613,0,"IX","B",358.613,.01)
	;;=
	;;^DD(358.613,0,"NM","ALLOWABLE QUALIFIERS")
	;;=
	;;^DD(358.613,0,"UP")
	;;=358.6
	;;^DD(358.613,.01,0)
	;;=ALLOWABLE QUALIFIERS^MV^^0;1^Q
	;;^DD(358.613,.01,1,0)
	;;=^.1
	;;^DD(358.613,.01,1,1,0)
	;;=358.613^B
	;;^DD(358.613,.01,1,1,1)
	;;=S ^IBE(358.6,DA(1),13,"B",$E(X,1,30),DA)=""
	;;^DD(358.613,.01,1,1,2)
	;;=K ^IBE(358.6,DA(1),13,"B",$E(X,1,30),DA)

IBDIN036
IBDIN036	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.613,.01,1,1,3)
	;;=Required Index for Variable Pointer
	;;^DD(358.613,.01,3)
	;;=Which qualifiers can apply to the data?
	;;^DD(358.613,.01,21,0)
	;;=^^1^1^2951018^^^^
	;;^DD(358.613,.01,21,1,0)
	;;=A qualifier that can be used by this package interface.
	;;^DD(358.613,.01,"DT")
	;;=2950426
	;;^DD(358.613,.01,"V",0)
	;;=^.12P^2^2
	;;^DD(358.613,.01,"V",1,0)
	;;=358.98^QUALIFIER^1^Q^n^n
	;;^DD(358.613,.01,"V",2,0)
	;;=358.99^DATA ELEMENT^2^D^n^n
	;;^DD(358.613,.03,0)
	;;=INDEPENDENT MAPPING INFO?^RS^0:NO;1:YES;^0;3^Q
	;;^DD(358.613,.03,3)
	;;=YES means that fields on the form associated with this qualifier will have its own rules for entering the data to the database.
	;;^DD(358.613,.03,21,0)
	;;=^^2^2^2950719^
	;;^DD(358.613,.03,21,1,0)
	;;=YES means that data can be mapped into the PCE Generic Device Interface
	;;^DD(358.613,.03,21,2,0)
	;;=based on the qualifier.
	;;^DD(358.613,.03,"DT")
	;;=2950426
	;;^DD(358.613,.04,0)
	;;=PCE GDI NODE^F^^0;4^K:$L(X)>30!($L(X)<1) X
	;;^DD(358.613,.04,3)
	;;=What node should the qualifier be placed on?
	;;^DD(358.613,.04,21,0)
	;;=^^1^1^2950719^
	;;^DD(358.613,.04,21,1,0)
	;;=The node where the data should be placed.
	;;^DD(358.613,.04,"DT")
	;;=2950710
	;;^DD(358.613,.05,0)
	;;=PCE GDI PIECE, VALUE^NJ2,0^^0;5^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.613,.05,3)
	;;=What piece should the primary value be located?
	;;^DD(358.613,.05,21,0)
	;;=^^1^1^2950719^
	;;^DD(358.613,.05,21,1,0)
	;;=The piece on the node where the value should be placed.
	;;^DD(358.613,.05,"DT")
	;;=2950426
	;;^DD(358.613,.07,0)
	;;=PCE GDI PIECE, HEADER^NJ2,0^^0;7^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.613,.07,3)
	;;=What piece should the header be located on?
	;;^DD(358.613,.07,21,0)
	;;=^^1^1^2950719^
	;;^DD(358.613,.07,21,1,0)
	;;=The piece on the node where the associated header should be placed.
	;;^DD(358.613,.07,"DT")
	;;=2950426
	;;^DD(358.613,.08,0)
	;;=PCE GDI PIECE, QUALIFIER^NJ2,0^^0;8^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.613,.08,3)
	;;=What piece should the qualifier be located on?
	;;^DD(358.613,.08,21,0)
	;;=^^1^1^2950719^
	;;^DD(358.613,.08,21,1,0)
	;;=The piece where the qualifier should go.
	;;^DD(358.613,.08,"DT")
	;;=2950426
	;;^DD(358.615,0)
	;;=DATA DESCRIPTION SUB-FIELD^^.05^5
	;;^DD(358.615,0,"DT")
	;;=2950417
	;;^DD(358.615,0,"ID","WRITE")
	;;=W "  PIECE="_$P(^(0),U,3)
	;;^DD(358.615,0,"IX","B",358.615,.01)
	;;=
	;;^DD(358.615,0,"IX","C",358.615,.03)
	;;=
	;;^DD(358.615,0,"NM","DATA DESCRIPTION")
	;;=
	;;^DD(358.615,0,"UP")
	;;=358.6
	;;^DD(358.615,.01,0)
	;;=DATA^MF^^0;1^K:$L(X)>30!($L(X)<1) X
	;;^DD(358.615,.01,1,0)
	;;=^.1
	;;^DD(358.615,.01,1,1,0)
	;;=358.615^B
	;;^DD(358.615,.01,1,1,1)
	;;=S ^IBE(358.6,DA(1),15,"B",$E(X,1,30),DA)=""
	;;^DD(358.615,.01,1,1,2)
	;;=K ^IBE(358.6,DA(1),15,"B",$E(X,1,30),DA)
	;;^DD(358.615,.01,3)
	;;=Enter a descriptive name for this data field, up to 30 characters.
	;;^DD(358.615,.01,21,0)
	;;=^^1^1^2950719^
	;;^DD(358.615,.01,21,1,0)
	;;=A descriptive name for the data.
	;;^DD(358.615,.01,"DT")
	;;=2950320
	;;^DD(358.615,.02,0)
	;;=MAXIMUM LENGTH^RNJ3,0^^0;2^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.615,.02,3)
	;;=What is the maximum length of this field?
	;;^DD(358.615,.02,21,0)
	;;=^^1^1^2950719^
	;;^DD(358.615,.02,21,1,0)
	;;=The maximum length of the data.
	;;^DD(358.615,.02,"DT")
	;;=2950320
	;;^DD(358.615,.03,0)
	;;=PIECE^NJ1,0X^^0;3^K:+X'=X!(X>8)!(X<2)!(X?.E1"."1N.N)!($D(^IBE(358.6,D0,15,"C",X))) X
	;;^DD(358.615,.03,1,0)
	;;=^.1
	;;^DD(358.615,.03,1,1,0)
	;;=358.615^C
	;;^DD(358.615,.03,1,1,1)
	;;=S ^IBE(358.6,DA(1),15,"C",$E(X,1,30),DA)=""
	;;^DD(358.615,.03,1,1,2)
	;;=K ^IBE(358.6,DA(1),15,"C",$E(X,1,30),DA)
	;;^DD(358.615,.03,1,1,"%D",0)
	;;=^^1^1^2950320^
	;;^DD(358.615,.03,1,1,"%D",1,0)
	;;=Indexes the field by piece.
	;;^DD(358.615,.03,1,1,"DT")
	;;=2950320
	;;^DD(358.615,.03,3)
	;;=In the returned record, which piece will this field be?
	;;^DD(358.615,.03,21,0)
	;;=^^1^1^2950719^
	;;^DD(358.615,.03,21,1,0)
	;;=The piece that the data will be returned as.
	;;^DD(358.615,.03,"DT")
	;;=2950407
	;;^DD(358.615,.04,0)
	;;=ANNEX NODE^F^^0;4^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.615,.04,3)
	;;=You can optionally specify the subscript to store the data. Use this when the entire record won't fit on one node.
	;;^DD(358.615,.04,21,0)
	;;=^^2^2^2950719^
	;;^DD(358.615,.04,21,1,0)
	;;=In case all the returned data can not be returned on a single node an
	;;^DD(358.615,.04,21,2,0)
	;;=annex node can be specified.
	;;^DD(358.615,.04,"DT")
	;;=2950320
	;;^DD(358.615,.05,0)
	;;=RECOMMENDED HEADER^F^^0;5^K:$L(X)>40!($L(X)<1) X

IBDIN037
IBDIN037	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.615,.05,3)
	;;=Answer must be 1-40 characters in length.
	;;^DD(358.615,.05,21,0)
	;;=^^1^1^2950719^^
	;;^DD(358.615,.05,21,1,0)
	;;=The recommended header will be used as the default when designing a form.
	;;^DD(358.615,.05,"DT")
	;;=2950417
	;;^DD(358.66,0)
	;;=PROTECTED LOCAL VARIABLES SUB-FIELD^^.01^1
	;;^DD(358.66,0,"DT")
	;;=2930608
	;;^DD(358.66,0,"IX","B",358.66,.01)
	;;=
	;;^DD(358.66,0,"NM","PROTECTED LOCAL VARIABLES")
	;;=
	;;^DD(358.66,0,"UP")
	;;=358.6
	;;^DD(358.66,.01,0)
	;;=PROTECTED LOCAL VARIABLES^MFX^^0;1^K:'$$VARIABLE^IBDFU5(X) X
	;;^DD(358.66,.01,1,0)
	;;=^.1
	;;^DD(358.66,.01,1,1,0)
	;;=358.66^B
	;;^DD(358.66,.01,1,1,1)
	;;=S ^IBE(358.6,DA(1),6,"B",$E(X,1,30),DA)=""
	;;^DD(358.66,.01,1,1,2)
	;;=K ^IBE(358.6,DA(1),6,"B",$E(X,1,30),DA)
	;;^DD(358.66,.01,3)
	;;=Enter variables that should be NEWED before the entry action or calling the interface.
	;;^DD(358.66,.01,21,0)
	;;=^^3^3^2950426^^
	;;^DD(358.66,.01,21,1,0)
	;;= 
	;;^DD(358.66,.01,21,2,0)
	;;=A list of variables that should be newed before the entry action or
	;;^DD(358.66,.01,21,3,0)
	;;=calling the interface.
	;;^DD(358.66,.01,"DT")
	;;=2930608
	;;^DD(358.67,0)
	;;=REQUIRED LOCAL VARIABLES SUB-FIELD^^.01^1
	;;^DD(358.67,0,"DT")
	;;=2930521
	;;^DD(358.67,0,"IX","B",358.67,.01)
	;;=
	;;^DD(358.67,0,"NM","REQUIRED LOCAL VARIABLES")
	;;=
	;;^DD(358.67,0,"UP")
	;;=358.6
	;;^DD(358.67,.01,0)
	;;=REQUIRED LOCAL VARIABLE^MFX^^0;1^K:'$$VARIABLE^IBDFU5(X) X
	;;^DD(358.67,.01,1,0)
	;;=^.1
	;;^DD(358.67,.01,1,1,0)
	;;=358.67^B
	;;^DD(358.67,.01,1,1,1)
	;;=S ^IBE(358.6,DA(1),7,"B",$E(X,1,30),DA)=""
	;;^DD(358.67,.01,1,1,2)
	;;=K ^IBE(358.6,DA(1),7,"B",$E(X,1,30),DA)
	;;^DD(358.67,.01,3)
	;;=Enter any variables that must exist before the Package Interface routine is called.
	;;^DD(358.67,.01,21,0)
	;;=^^4^4^2930528^
	;;^DD(358.67,.01,21,1,0)
	;;= 
	;;^DD(358.67,.01,21,2,0)
	;;=A variable that is required input to the interface routine. The interface
	;;^DD(358.67,.01,21,3,0)
	;;=routine will not be called if all of the required variables are not
	;;^DD(358.67,.01,21,4,0)
	;;=defined.
	;;^DD(358.67,.01,"DT")
	;;=2930521

IBDIN038
IBDIN038	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.7,0,"GL")
	;;=^IBE(358.7,
	;;^DIC("B","IMP/EXP FORM LINE",358.7)
	;;=
	;;^DIC(358.7,"%D",0)
	;;=^^3^3^2940217^
	;;^DIC(358.7,"%D",1,0)
	;;=This file is nearly identical to file #357.7. It is used by the
	;;^DIC(358.7,"%D",2,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.7,"%D",3,0)
	;;=that is being imported or exported.
	;;^DD(358.7,0)
	;;=FIELD^^.08^8
	;;^DD(358.7,0,"DDA")
	;;=N
	;;^DD(358.7,0,"DT")
	;;=2950717
	;;^DD(358.7,0,"ID",.02)
	;;=W " STARTING COL=",$P(^(0),U,2)+1
	;;^DD(358.7,0,"ID",.03)
	;;=W " STARTING ROW=",$P(^(0),U,3)+1
	;;^DD(358.7,0,"ID",.06)
	;;=W ""
	;;^DD(358.7,0,"IX","B",358.7,.01)
	;;=
	;;^DD(358.7,0,"IX","C",358.7,.06)
	;;=
	;;^DD(358.7,0,"NM","IMP/EXP FORM LINE")
	;;=
	;;^DD(358.7,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.7,.01,1,0)
	;;=^.1
	;;^DD(358.7,.01,1,1,0)
	;;=358.7^B
	;;^DD(358.7,.01,1,1,1)
	;;=S ^IBE(358.7,"B",$E(X,1,30),DA)=""
	;;^DD(358.7,.01,1,1,2)
	;;=K ^IBE(358.7,"B",$E(X,1,30),DA)
	;;^DD(358.7,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.7,.01,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.7,.01,21,1,0)
	;;= 
	;;^DD(358.7,.01,21,2,0)
	;;=The name given to the line. Lines should be given names that will allow
	;;^DD(358.7,.01,21,3,0)
	;;=them to be identifies, such as V(1,1), meaning a vertical line starting at
	;;^DD(358.7,.01,21,4,0)
	;;=coordinates (1,1).
	;;^DD(358.7,.02,0)
	;;=LINE STARTING COLUMN^RNJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.7,.02,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.7,.02,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.7,.02,3)
	;;=Enter the block column the line should begin at.
	;;^DD(358.7,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.7,.02,21,1,0)
	;;= 
	;;^DD(358.7,.02,21,2,0)
	;;=The column, relative to the block, that the line should begin at.
	;;^DD(358.7,.02,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.7,.02,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.7,.02,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.7,.02,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.7,.02,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.7,.02,"DT")
	;;=2930715
	;;^DD(358.7,.03,0)
	;;=LINE STARTING ROW^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.7,.03,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.7,.03,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.7,.03,3)
	;;=Enter the block row the line should begin at.
	;;^DD(358.7,.03,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.7,.03,21,1,0)
	;;= 
	;;^DD(358.7,.03,21,2,0)
	;;=The row, relative to the block, that the line should begin at.
	;;^DD(358.7,.03,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.7,.03,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.7,.03,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.7,.03,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.7,.03,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.7,.03,"DT")
	;;=2930715
	;;^DD(358.7,.04,0)
	;;=ORIENTATION^RS^H:HORIZONTAL;V:VERTICAL;^0;4^Q
	;;^DD(358.7,.04,.1)
	;;=ORIENTATION (HORIZONTAL/VERTICAL)
	;;^DD(358.7,.04,3)
	;;=Should the line be horizontal or vertical?
	;;^DD(358.7,.04,21,0)
	;;=^^2^2^2930607^
	;;^DD(358.7,.04,21,1,0)
	;;= 
	;;^DD(358.7,.04,21,2,0)
	;;=The direction the line goes in.
	;;^DD(358.7,.04,"DT")
	;;=2930415
	;;^DD(358.7,.05,0)
	;;=LENGTH^RNJ3,0^^0;5^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.7,.05,3)
	;;=How long should the line be?
	;;^DD(358.7,.05,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.7,.05,21,1,0)
	;;= 
	;;^DD(358.7,.05,21,2,0)
	;;=The length of the line. For horizontal lines the length is in terms of
	;;^DD(358.7,.05,21,3,0)
	;;=characters. For vertical lines it is in terms of rows.
	;;^DD(358.7,.05,"DT")
	;;=2930319
	;;^DD(358.7,.06,0)
	;;=BLOCK^RP358.1'^IBE(358.1,^0;6^Q
	;;^DD(358.7,.06,1,0)
	;;=^.1
	;;^DD(358.7,.06,1,1,0)
	;;=358.7^C
	;;^DD(358.7,.06,1,1,1)
	;;=S ^IBE(358.7,"C",$E(X,1,30),DA)=""
	;;^DD(358.7,.06,1,1,2)
	;;=K ^IBE(358.7,"C",$E(X,1,30),DA)
	;;^DD(358.7,.06,1,1,"%D",0)
	;;=^^2^2^2930319^
	;;^DD(358.7,.06,1,1,"%D",1,0)
	;;= 
	;;^DD(358.7,.06,1,1,"%D",2,0)
	;;=This cross-reference is used to find all lines belonging to a block.
	;;^DD(358.7,.06,1,1,"DT")
	;;=2930319
	;;^DD(358.7,.06,3)
	;;=What block should the line appear in?
	;;^DD(358.7,.06,4)
	;;=W "DOES THIS WORK",!

IBDIN039
IBDIN039	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.7,.06,21,0)
	;;=^^2^2^2930802^^
	;;^DD(358.7,.06,21,1,0)
	;;= 
	;;^DD(358.7,.06,21,2,0)
	;;=The block the line appears in.
	;;^DD(358.7,.06,"DT")
	;;=2930802
	;;^DD(358.7,.07,0)
	;;=NUMBER OF LINES^NJ3,0^^0;7^K:+X'=X!(X>100)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.7,.07,3)
	;;=Type a Number between 1 and 100, 0 Decimal Digits
	;;^DD(358.7,.07,"DT")
	;;=2950717
	;;^DD(358.7,.08,0)
	;;=LINE SPACING^S^s:SINGLE;d:DOUBLE;t:TRIPLE;^0;8^Q
	;;^DD(358.7,.08,3)
	;;=How should the lines be spaced?
	;;^DD(358.7,.08,"DT")
	;;=2950717

IBDIN03A
IBDIN03A	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.8,0,"GL")
	;;=^IBE(358.8,
	;;^DIC("B","IMP/EXP TEXT AREA",358.8)
	;;=
	;;^DIC(358.8,"%D",0)
	;;=^^3^3^2940217^
	;;^DIC(358.8,"%D",1,0)
	;;=This file is nearly identical to file #357.8. It is used by the
	;;^DIC(358.8,"%D",2,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.8,"%D",3,0)
	;;=that is being imported or exported.
	;;^DD(358.8,0)
	;;=FIELD^^1^7
	;;^DD(358.8,0,"DDA")
	;;=N
	;;^DD(358.8,0,"DT")
	;;=2930802
	;;^DD(358.8,0,"IX","B",358.8,.01)
	;;=
	;;^DD(358.8,0,"IX","C",358.8,.02)
	;;=
	;;^DD(358.8,0,"NM","IMP/EXP TEXT AREA")
	;;=
	;;^DD(358.8,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.8,.01,1,0)
	;;=^.1
	;;^DD(358.8,.01,1,1,0)
	;;=358.8^B
	;;^DD(358.8,.01,1,1,1)
	;;=S ^IBE(358.8,"B",$E(X,1,30),DA)=""
	;;^DD(358.8,.01,1,1,2)
	;;=K ^IBE(358.8,"B",$E(X,1,30),DA)
	;;^DD(358.8,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.8,.01,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,.01,21,1,0)
	;;= 
	;;^DD(358.8,.01,21,2,0)
	;;=The name of the text area.
	;;^DD(358.8,.02,0)
	;;=BLOCK^RP358.1'^IBE(358.1,^0;2^Q
	;;^DD(358.8,.02,1,0)
	;;=^.1
	;;^DD(358.8,.02,1,1,0)
	;;=358.8^C
	;;^DD(358.8,.02,1,1,1)
	;;=S ^IBE(358.8,"C",$E(X,1,30),DA)=""
	;;^DD(358.8,.02,1,1,2)
	;;=K ^IBE(358.8,"C",$E(X,1,30),DA)
	;;^DD(358.8,.02,1,1,"%D",0)
	;;=^^3^3^2930326^
	;;^DD(358.8,.02,1,1,"%D",1,0)
	;;= 
	;;^DD(358.8,.02,1,1,"%D",2,0)
	;;=Used to find all of the text areas that should appear on a particular
	;;^DD(358.8,.02,1,1,"%D",3,0)
	;;=block.
	;;^DD(358.8,.02,1,1,"DT")
	;;=2930326
	;;^DD(358.8,.02,3)
	;;=What block do you want the text to appear in?
	;;^DD(358.8,.02,21,0)
	;;=^^2^2^2930802^^
	;;^DD(358.8,.02,21,1,0)
	;;= 
	;;^DD(358.8,.02,21,2,0)
	;;=The block the text area is displayed in.
	;;^DD(358.8,.02,"DT")
	;;=2930802
	;;^DD(358.8,.03,0)
	;;=TEXT AREA STARTING COLUMN^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.8,.03,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.8,.03,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.8,.03,3)
	;;=What block column should the text begin in?
	;;^DD(358.8,.03,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,.03,21,1,0)
	;;= 
	;;^DD(358.8,.03,21,2,0)
	;;=The starting position of the text area, relative to the block.
	;;^DD(358.8,.03,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.8,.03,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.8,.03,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.8,.03,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.8,.03,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.8,.03,"DT")
	;;=2930715
	;;^DD(358.8,.04,0)
	;;=TEXT AREA STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.8,.04,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.8,.04,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.8,.04,3)
	;;=What block row should the text begin in?
	;;^DD(358.8,.04,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,.04,21,1,0)
	;;= 
	;;^DD(358.8,.04,21,2,0)
	;;=The starting row of the text area, relative to the block.
	;;^DD(358.8,.04,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.8,.04,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.8,.04,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.8,.04,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.8,.04,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.8,.04,"DT")
	;;=2930715
	;;^DD(358.8,.05,0)
	;;=TEXT WIDTH^RNJ3,0^^0;5^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.8,.05,3)
	;;=How many columns should be allocated on the block for the text?
	;;^DD(358.8,.05,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,.05,21,1,0)
	;;= 
	;;^DD(358.8,.05,21,2,0)
	;;=The width of the text area, measured in characters.
	;;^DD(358.8,.05,"DT")
	;;=2930326
	;;^DD(358.8,.06,0)
	;;=TEXT HEIGHT^RNJ3,0^^0;6^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.8,.06,3)
	;;=How many lines on the block should be allocated for the text?
	;;^DD(358.8,.06,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,.06,21,1,0)
	;;= 
	;;^DD(358.8,.06,21,2,0)
	;;=The height of the text area, measured in lines.
	;;^DD(358.8,.06,"DT")
	;;=2930326
	;;^DD(358.8,1,0)
	;;=TEXT^358.81^^1;0
	;;^DD(358.8,1,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,1,21,1,0)
	;;= 
	;;^DD(358.8,1,21,2,0)
	;;=The text that should appear within the text area.
	;;^DD(358.81,0)
	;;=TEXT SUB-FIELD^^.01^1
	;;^DD(358.81,0,"NM","TEXT")
	;;=

IBDIN03B
IBDIN03B	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.81,0,"UP")
	;;=358.8
	;;^DD(358.81,.01,0)
	;;=TEXT^WL^^0;1^Q
	;;^DD(358.81,.01,3)
	;;=Enter the text that you want to appear in the block.
	;;^DD(358.81,.01,"DT")
	;;=2930326

IBDIN03C
IBDIN03C	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.91)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.91,0,"GL")
	;;=^IBE(358.91,
	;;^DIC("B","IMP/EXP MARKING AREA",358.91)
	;;=
	;;^DIC(358.91,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358.91,"%D",1,0)
	;;= 
	;;^DIC(358.91,"%D",2,0)
	;;=This file is nearly identical to file #357.91. It is used by the
	;;^DIC(358.91,"%D",3,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.91,"%D",4,0)
	;;=that is being imported or exported.
	;;^DD(358.91,0)
	;;=FIELD^^.04^4
	;;^DD(358.91,0,"DT")
	;;=2960123
	;;^DD(358.91,0,"IX","B",358.91,.01)
	;;=
	;;^DD(358.91,0,"NM","IMP/EXP MARKING AREA")
	;;=
	;;^DD(358.91,0,"PT",358.22,.06)
	;;=
	;;^DD(358.91,.01,0)
	;;=NAME^RFX^^0;1^K:$L(X)>30 X
	;;^DD(358.91,.01,1,0)
	;;=^.1
	;;^DD(358.91,.01,1,1,0)
	;;=358.91^B
	;;^DD(358.91,.01,1,1,1)
	;;=S ^IBE(358.91,"B",$E(X,1,30),DA)=""
	;;^DD(358.91,.01,1,1,2)
	;;=K ^IBE(358.91,"B",$E(X,1,30),DA)
	;;^DD(358.91,.01,3)
	;;=NAME MUST BE UNDER 31 CHARACTERS
	;;^DD(358.91,.01,21,0)
	;;=^^1^1^2930608^
	;;^DD(358.91,.01,21,1,0)
	;;=The name should describe the appearance of the marking area on the form.
	;;^DD(358.91,.02,0)
	;;=DISPLAY STRING^F^^0;2^K:$L(X)>20!($L(X)<1) X
	;;^DD(358.91,.02,3)
	;;=Answer must be 1-20 characters in length.
	;;^DD(358.91,.02,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.91,.02,21,1,0)
	;;= 
	;;^DD(358.91,.02,21,2,0)
	;;=The text that should be displayed in the MARKING AREA.
	;;^DD(358.91,.02,"DT")
	;;=2921207
	;;^DD(358.91,.03,0)
	;;=TOOL KIT MEMBER?^S^0:NO;1:YES;^0;3^Q
	;;^DD(358.91,.03,3)
	;;=Enter YES if the MARKING AREA is part of the tool kit, NO otherwise.
	;;^DD(358.91,.03,21,0)
	;;=^^2^2^2960123^
	;;^DD(358.91,.03,21,1,0)
	;;=Used to prevent local sites from editing MARKING AREAS that are part of the
	;;^DD(358.91,.03,21,2,0)
	;;=tool kit.
	;;^DD(358.91,.03,"DT")
	;;=2960123
	;;^DD(358.91,.04,0)
	;;=REQUIRES SPECIAL PROCEDURE?^S^0:NO;1:YES;^0;4^Q
	;;^DD(358.91,.04,3)
	;;=Answer NO if the Marking Area is just text, YES if it requires a special procedure to print.
	;;^DD(358.91,.04,21,0)
	;;=^^2^2^2960123^
	;;^DD(358.91,.04,21,1,0)
	;;=No means that the Marking Area is just text that can be printed.  YES 
	;;^DD(358.91,.04,21,2,0)
	;;=means that a special procedure must be called to print the Marking Area.
	;;^DD(358.91,.04,"DT")
	;;=2960123

IBDIN03D
IBDIN03D	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.93)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.93,0,"GL")
	;;=^IBE(358.93,
	;;^DIC("B","IMP/EXP MULTIPLE CHOICE FIELD",358.93)
	;;=
	;;^DIC(358.93,"%D",0)
	;;=^^2^2^2951024^^^
	;;^DIC(358.93,"%D",1,0)
	;;=This file is used as a work space for the import/export utility of the
	;;^DIC(358.93,"%D",2,0)
	;;=encounter form utilities.
	;;^DD(358.93,0)
	;;=FIELD^^1^9
	;;^DD(358.93,0,"DDA")
	;;=N
	;;^DD(358.93,0,"DT")
	;;=2960119
	;;^DD(358.93,0,"IX","A",358.931,.01)
	;;=
	;;^DD(358.93,0,"IX","A1",358.931,.02)
	;;=
	;;^DD(358.93,0,"IX","B",358.93,.01)
	;;=
	;;^DD(358.93,0,"IX","C",358.93,.08)
	;;=
	;;^DD(358.93,0,"NM","IMP/EXP MULTIPLE CHOICE FIELD")
	;;=
	;;^DD(358.93,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.93,.01,1,0)
	;;=^.1
	;;^DD(358.93,.01,1,1,0)
	;;=358.93^B
	;;^DD(358.93,.01,1,1,1)
	;;=S ^IBE(358.93,"B",$E(X,1,30),DA)=""
	;;^DD(358.93,.01,1,1,2)
	;;=K ^IBE(358.93,"B",$E(X,1,30),DA)
	;;^DD(358.93,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.93,.01,21,0)
	;;=^^2^2^2930623^^^^
	;;^DD(358.93,.01,21,1,0)
	;;= 
	;;^DD(358.93,.01,21,2,0)
	;;=The division the setup is for.
	;;^DD(358.93,.01,"DT")
	;;=2930518
	;;^DD(358.93,.02,0)
	;;=QUESTION OR EXPLANATION ^F^^0;2^K:$L(X)>150!($L(X)<1) X
	;;^DD(358.93,.02,.1)
	;;=YOU CAN ENTER TEXT, SUCH AS A QUESTION, TO APPEAR ON THE FORM
	;;^DD(358.93,.02,3)
	;;=You may enter text, such as a question, to appear as part of the input field.
	;;^DD(358.93,.02,"DT")
	;;=2940721
	;;^DD(358.93,.03,0)
	;;=STARTING COLUMN FOR TEXT^NJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.93,.03,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(358.93,.03,2.1)
	;;=S Y=+Y+1
	;;^DD(358.93,.03,3)
	;;=What block column shuld the label begin in?
	;;^DD(358.93,.03,"DT")
	;;=2940721
	;;^DD(358.93,.04,0)
	;;=STARTING ROW FOR TEXT^NJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.93,.04,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(358.93,.04,2.1)
	;;=S Y=+Y+1
	;;^DD(358.93,.04,3)
	;;=What block row should the label start in?
	;;^DD(358.93,.04,"DT")
	;;=2940721
	;;^DD(358.93,.06,0)
	;;=TYPE OF DATA^R*P358.6'X^IBE(358.6,^0;6^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$D(^(9))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(358.93,.06,.1)
	;;=WHAT TYPE OF DATA WILL BE ENTERED TO THIS FIELD?
	;;^DD(358.93,.06,3)
	;;=What type of data will be entered to the field?
	;;^DD(358.93,.06,12)
	;;=Allows only available interfaces for passing data to DHCP.
	;;^DD(358.93,.06,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$D(^(9))"
	;;^DD(358.93,.06,21,0)
	;;=^^2^2^2950914^^^
	;;^DD(358.93,.06,21,1,0)
	;;=Points to the package interface file. That is where information about the
	;;^DD(358.93,.06,21,2,0)
	;;=data and how to map it to DHCP is stored.
	;;^DD(358.93,.06,"DT")
	;;=2950727
	;;^DD(358.93,.07,0)
	;;=TEXT APPEARANCE^FX^^0;7^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBR"'[$E(X,1))!("UBR"'[$E(X,2))!("UBR"'[$E(X,3)) X
	;;^DD(358.93,.07,.1)
	;;=HOW SHOULD THE TEXT APPEAR? CHOOSE FROM {U,B,R}
	;;^DD(358.93,.07,3)
	;;=B=bold,U=underline,R=reverse You can enter any combination of {B,U,R}.
	;;^DD(358.93,.07,"DT")
	;;=2940816
	;;^DD(358.93,.08,0)
	;;=BLOCK^RP358.1'^IBE(358.1,^0;8^Q
	;;^DD(358.93,.08,1,0)
	;;=^.1
	;;^DD(358.93,.08,1,1,0)
	;;=358.93^C
	;;^DD(358.93,.08,1,1,1)
	;;=S ^IBE(358.93,"C",$E(X,1,30),DA)=""
	;;^DD(358.93,.08,1,1,2)
	;;=K ^IBE(358.93,"C",$E(X,1,30),DA)
	;;^DD(358.93,.08,1,1,"%D",0)
	;;=^^1^1^2940720^
	;;^DD(358.93,.08,1,1,"%D",1,0)
	;;=Used to find all the input fields appearing in a block.
	;;^DD(358.93,.08,1,1,"DT")
	;;=2940720
	;;^DD(358.93,.08,3)
	;;=What block should this input field appear in?
	;;^DD(358.93,.08,"DT")
	;;=2940720
	;;^DD(358.93,.09,0)
	;;=SELECTION RULE^S^0:ANY NUMBER;1:EXACTLY ONE;2:AT MOST ONE (0 or 1);3:AT LEAST ONE (1 or more);^0;9^Q
	;;^DD(358.93,.09,3)
	;;=Which rule applies to the choices the user can makee?
	;;^DD(358.93,.09,"DT")
	;;=2941209
	;;^DD(358.93,1,0)
	;;=CHOICE^358.931^^1;0
	;;^DD(358.93,1,12)
	;;=Allows only package interfaces that print reports and that are available.
	;;^DD(358.93,1,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
	;;^DD(358.93,1,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.93,1,21,1,0)
	;;= 
	;;^DD(358.93,1,21,2,0)
	;;=The reports that should print.
	;;^DD(358.93,1,"DT")
	;;=2940721
	;;^DD(358.931,0)
	;;=CHOICE SUB-FIELD^^.05^9
	;;^DD(358.931,0,"DT")
	;;=2960119
	;;^DD(358.931,0,"IX","B",358.931,.01)
	;;=
	;;^DD(358.931,0,"NM","CHOICE")
	;;=
	;;^DD(358.931,0,"NM","REPORT")
	;;=
	;;^DD(358.931,0,"UP")
	;;=358.93
	;;^DD(358.931,.01,0)
	;;=CHOICE^MF^^0;1^K:$L(X)>68!($L(X)<1) X
	;;^DD(358.931,.01,.1)
	;;=LABEL APPEARING WITH THE BUBBLE

IBDIN03E
IBDIN03E	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.93)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.931,.01,1,0)
	;;=^.1
	;;^DD(358.931,.01,1,1,0)
	;;=358.931^B
	;;^DD(358.931,.01,1,1,1)
	;;=S ^IBE(358.93,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(358.931,.01,1,1,2)
	;;=K ^IBE(358.93,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(358.931,.01,1,2,0)
	;;=358.93^A^MUMPS
	;;^DD(358.931,.01,1,2,1)
	;;=I $P($G(^IBE(358.93,DA(1),1,DA,0)),U,2) S ^IBE(358.93,"A",$P(^IBE(358.93,DA(1),0),U),$P(^IBE(358.93,DA(1),1,DA,0),U,2),X,DA(1),DA)=""
	;;^DD(358.931,.01,1,2,2)
	;;=I $P($G(^IBE(358.93,DA(1),1,DA,0)),U,2) K ^IBE(358.93,"A",$P(^IBE(358.93,DA(1),0),U),$P(^IBE(358.93,DA(1),1,DA,0),U,2),X,DA(1),DA)
	;;^DD(358.931,.01,1,2,"%D",0)
	;;=^^3^3^2960402^^^^
	;;^DD(358.931,.01,1,2,"%D",1,0)
	;;= 
	;;^DD(358.931,.01,1,2,"%D",2,0)
	;;=Used to find all the reports/forms that should be printed for the division
	;;^DD(358.931,.01,1,2,"%D",3,0)
	;;=under a particular condition.
	;;^DD(358.931,.01,1,2,"DT")
	;;=2960402
	;;^DD(358.931,.01,3)
	;;=Answer must be 1-68 characters in length.
	;;^DD(358.931,.01,12)
	;;=Allows only reports installed in the Package Interface file.
	;;^DD(358.931,.01,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
	;;^DD(358.931,.01,21,0)
	;;=^^3^3^2960118^^
	;;^DD(358.931,.01,21,1,0)
	;;= 
	;;^DD(358.931,.01,21,2,0)
	;;=A report that should print. Only reports contained in the Package
	;;^DD(358.931,.01,21,3,0)
	;;=Interface file can be printed by the print manager.
	;;^DD(358.931,.01,"DT")
	;;=2960402
	;;^DD(358.931,.02,0)
	;;=STARTING COLUMN FOR LABEL^NJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.931,.02,1,0)
	;;=^.1
	;;^DD(358.931,.02,1,1,0)
	;;=358.93^A1^MUMPS
	;;^DD(358.931,.02,1,1,1)
	;;=S ^IBE(358.93,"A",$P($G(^IBE(358.93,DA(1),0)),U),X,$P($G(^IBE(358.93,DA(1),1,DA,0)),U),DA(1),DA)=""
	;;^DD(358.931,.02,1,1,2)
	;;=K ^IBE(358.93,"A",$P($G(^IBE(358.93,DA(1),0)),U),X,$P($G(^IBE(358.93,DA(1),1,DA,0)),U),DA(1),DA)
	;;^DD(358.931,.02,1,1,"%D",0)
	;;=^^3^3^2960402^^^^
	;;^DD(358.931,.02,1,1,"%D",1,0)
	;;= 
	;;^DD(358.931,.02,1,1,"%D",2,0)
	;;=Used to find all the reports/forms that should be printed for the entire
	;;^DD(358.931,.02,1,1,"%D",3,0)
	;;=division under a particular condition.
	;;^DD(358.931,.02,1,1,"DT")
	;;=2960402
	;;^DD(358.931,.02,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(358.931,.02,2.1)
	;;=S Y=+Y+1
	;;^DD(358.931,.02,3)
	;;=What block column should the label begin in?
	;;^DD(358.931,.02,4)
	;;=D HELP6^IBDFU5A
	;;^DD(358.931,.02,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.931,.02,21,1,0)
	;;= 
	;;^DD(358.931,.02,21,2,0)
	;;=The condition under which the report should print.
	;;^DD(358.931,.02,"DT")
	;;=2960402
	;;^DD(358.931,.03,0)
	;;=STARTING ROW FOR LABEL^NJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.931,.03,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(358.931,.03,2.1)
	;;=S Y=+Y+1
	;;^DD(358.931,.03,3)
	;;=What block row should the label be in?
	;;^DD(358.931,.03,"DT")
	;;=2940720
	;;^DD(358.931,.04,0)
	;;=LABEL APPEARANCE^FX^^0;4^S X=$$UPPER^VALM1(X) K:$L(X)>4!("UBRI"'[$E(X,1))!("UBRI"'[$E(X,2))!("UBRI"'[$E(X,3))!("UBRI"'[$E(X,4)) X
	;;^DD(358.931,.04,.1)
	;;=HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {U,B,R,I}
	;;^DD(358.931,.04,3)
	;;=B=bold,U=underline,R=reverse,I=invisible You can enter any combination of {B,U,R,I}. The label will not print if it is made invisible.
	;;^DD(358.931,.04,"DT")
	;;=2940816
	;;^DD(358.931,.05,0)
	;;=CHOICE LABEL^RF^^0;5^K:$L(X)>120!($L(X)<1) X
	;;^DD(358.931,.05,3)
	;;=Answer must be 1-120 characters in length.
	;;^DD(358.931,.05,21,0)
	;;=^^1^1^2960118^
	;;^DD(358.931,.05,21,1,0)
	;;=The label that is to appear with the choice.
	;;^DD(358.931,.05,"DT")
	;;=2960118
	;;^DD(358.931,.06,0)
	;;=STARTING COLUMN FOR BUBBLE^RNJ3,0XO^^0;6^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.931,.06,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(358.931,.06,2.1)
	;;=S Y=+Y+1
	;;^DD(358.931,.06,3)
	;;=What block column should the bubble begin in?
	;;^DD(358.931,.06,"DT")
	;;=2940720
	;;^DD(358.931,.07,0)
	;;=STARTING ROW FOR BUBBLE^RNJ3,0XO^^0;7^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.931,.07,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(358.931,.07,2.1)
	;;=S Y=+Y+1
	;;^DD(358.931,.07,3)
	;;=What block row should the bubble be in?
	;;^DD(358.931,.07,"DT")
	;;=2940720
	;;^DD(358.931,.08,0)
	;;=VALUE TO PASS^RFX^^0;8^S X=X
	;;^DD(358.931,.08,3)
	;;=What data should be entered into the database when this bubble is checked?
	;;^DD(358.931,.08,4)
	;;=
	;;^DD(358.931,.08,22)
	;;=t
	;;^DD(358.931,.08,"DT")
	;;=2950901
	;;^DD(358.931,.09,0)
	;;=DATA QUALIFIER^*P358.98'^IBD(358.98,^0;9^S DIC("S")="I $$DQGOOD^IBDFU9($P($G(^IBE(358.93,DA(1),0)),""^"",6),Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X

IBDIN03F
IBDIN03F	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.93)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.931,.09,3)
	;;=Does one of the qualifers appy to this choice?
	;;^DD(358.931,.09,12)
	;;=Allows only certain data qualifiers, dependent on the type of data.
	;;^DD(358.931,.09,12.1)
	;;=S DIC("S")="I $$DQGOOD^IBDFU9($P($G(^IBE(358.93,DA(1),0)),""^"",6),Y)"
	;;^DD(358.931,.09,"DT")
	;;=2941207

IBDIN03G
IBDIN03G	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.94)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.94,0,"GL")
	;;=^IBE(358.94,
	;;^DIC("B","IMP/EXP HAND PRINT FIELD",358.94)
	;;=
	;;^DIC(358.94,"%D",0)
	;;=^^1^1^2950927^^
	;;^DIC(358.94,"%D",1,0)
	;;=Used by the Import/Export utility as a workspace.
	;;^DD(358.94,0)
	;;=FIELD^^.1^8
	;;^DD(358.94,0,"DT")
	;;=2950728
	;;^DD(358.94,0,"IX","B",358.94,.01)
	;;=
	;;^DD(358.94,0,"IX","C",358.94,.08)
	;;=
	;;^DD(358.94,0,"NM","IMP/EXP HAND PRINT FIELD")
	;;=
	;;^DD(358.94,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.94,.01,1,0)
	;;=^.1
	;;^DD(358.94,.01,1,1,0)
	;;=358.94^B
	;;^DD(358.94,.01,1,1,1)
	;;=S ^IBE(358.94,"B",$E(X,1,30),DA)=""
	;;^DD(358.94,.01,1,1,2)
	;;=K ^IBE(358.94,"B",$E(X,1,30),DA)
	;;^DD(358.94,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.94,.01,21,0)
	;;=^^3^3^2950725^
	;;^DD(358.94,.01,21,1,0)
	;;= 
	;;^DD(358.94,.01,21,2,0)
	;;= 
	;;^DD(358.94,.01,21,3,0)
	;;=The name of the field. 
	;;^DD(358.94,.01,"DT")
	;;=2930518
	;;^DD(358.94,.02,0)
	;;=LABEL^RF^^0;2^K:$L(X)>150!($L(X)<1) X
	;;^DD(358.94,.02,.1)
	;;=
	;;^DD(358.94,.02,3)
	;;=What label should appear before the hand print field?
	;;^DD(358.94,.02,21,0)
	;;=^^1^1^2950728^^^^
	;;^DD(358.94,.02,21,1,0)
	;;=The text that labels the field on the form.
	;;^DD(358.94,.02,"DT")
	;;=2950728
	;;^DD(358.94,.03,0)
	;;=STARTING COLUMN^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.94,.03,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(358.94,.03,2.1)
	;;=S Y=+Y+1
	;;^DD(358.94,.03,3)
	;;=What block column should the field begin in?
	;;^DD(358.94,.03,"DT")
	;;=2950728
	;;^DD(358.94,.04,0)
	;;=STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.94,.04,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(358.94,.04,2.1)
	;;=S Y=+Y+1
	;;^DD(358.94,.04,3)
	;;=What block row should the field start in?
	;;^DD(358.94,.04,"DT")
	;;=2950728
	;;^DD(358.94,.05,0)
	;;=LABEL APPEARANCE^F^^0;5^K:$L(X)>3!($L(X)<1) X
	;;^DD(358.94,.05,3)
	;;=B=bold,U=underline,R=reverse You can enter any combination of {B,U,R}.
	;;^DD(358.94,.05,21,0)
	;;=^^1^1^2950725^
	;;^DD(358.94,.05,21,1,0)
	;;=Allows the form designer to specify the appearance of the label.
	;;^DD(358.94,.05,"DT")
	;;=2950725
	;;^DD(358.94,.06,0)
	;;=TYPE OF DATA^R*P357.6'X^IBE(357.6,^0;6^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(358.94,.06,.1)
	;;=WHAT TYPE OF DATA WILL BE ENTERED TO THIS FIELD?
	;;^DD(358.94,.06,3)
	;;=What type of data will be entered to the field?
	;;^DD(358.94,.06,12)
	;;=Allows only interfaces for passing values from user filled in fields.
	;;^DD(358.94,.06,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1"
	;;^DD(358.94,.06,21,0)
	;;=^^2^2^2950914^^^
	;;^DD(358.94,.06,21,1,0)
	;;=Points to the package interface file. That is where information about the
	;;^DD(358.94,.06,21,2,0)
	;;=data and how to map it to DHCP is stored.
	;;^DD(358.94,.06,"DT")
	;;=2950914
	;;^DD(358.94,.08,0)
	;;=BLOCK^RP357.1'^IBE(357.1,^0;8^Q
	;;^DD(358.94,.08,1,0)
	;;=^.1
	;;^DD(358.94,.08,1,1,0)
	;;=358.94^C
	;;^DD(358.94,.08,1,1,1)
	;;=S ^IBE(358.94,"C",$E(X,1,30),DA)=""
	;;^DD(358.94,.08,1,1,2)
	;;=K ^IBE(358.94,"C",$E(X,1,30),DA)
	;;^DD(358.94,.08,1,1,"%D",0)
	;;=^^1^1^2940720^
	;;^DD(358.94,.08,1,1,"%D",1,0)
	;;=Used to find all the input fields appearing in a block.
	;;^DD(358.94,.08,1,1,"DT")
	;;=2940720
	;;^DD(358.94,.08,3)
	;;=What block should this input field appear in?
	;;^DD(358.94,.08,"DT")
	;;=2940720
	;;^DD(358.94,.1,0)
	;;=DHCP DATA ELEMENT^R*P359.1'X^IBE(359.1,^0;10^S DIC("S")="I $$DTGOOD^IBDFU9($P($G(^IBE(358.94,DA,0)),""^"",6),Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(358.94,.1,3)
	;;=What data will be printed in this field?
	;;^DD(358.94,.1,12)
	;;=Allows only data elements defined as allowable for the Package Interface.
	;;^DD(358.94,.1,12.1)
	;;=S DIC("S")="I $$DTGOOD^IBDFU9($P($G(^IBE(358.94,DA,0)),""^"",6),Y)"
	;;^DD(358.94,.1,21,0)
	;;=^^1^1^2950914^^
	;;^DD(358.94,.1,21,1,0)
	;;=Specifies what data the hand print field is for.
	;;^DD(358.94,.1,"DT")
	;;=2950727

IBDIN03H
IBDIN03H	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.98)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.98,0,"GL")
	;;=^IBD(358.98,
	;;^DIC("B","IMP/EXP AICS DATA QUALIFIERS",358.98)
	;;=
	;;^DIC(358.98,"%D",0)
	;;=^^1^1^2950927^^^
	;;^DIC(358.98,"%D",1,0)
	;;=Used by the import/export utility of the encounter forms as a workspace.
	;;^DD(358.98,0)
	;;=FIELD^^.03^3
	;;^DD(358.98,0,"DDA")
	;;=N
	;;^DD(358.98,0,"DT")
	;;=2950717
	;;^DD(358.98,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(358.98,0,"IX","B",358.98,.01)
	;;=
	;;^DD(358.98,0,"NM","IMP/EXP AICS DATA QUALIFIERS")
	;;=
	;;^DD(358.98,0,"PT",358.22,.09)
	;;=
	;;^DD(358.98,0,"PT",358.613,.01)
	;;=
	;;^DD(358.98,0,"PT",358.931,.09)
	;;=
	;;^DD(358.98,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.98,.01,1,0)
	;;=^.1
	;;^DD(358.98,.01,1,1,0)
	;;=358.98^B
	;;^DD(358.98,.01,1,1,1)
	;;=S ^IBD(358.98,"B",$E(X,1,30),DA)=""
	;;^DD(358.98,.01,1,1,2)
	;;=K ^IBD(358.98,"B",$E(X,1,30),DA)
	;;^DD(358.98,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.98,.02,0)
	;;=CODE^RF^^0;2^K:$L(X)>3!($L(X)<1) X
	;;^DD(358.98,.02,3)
	;;=Answer must be 1-3 characters in length.
	;;^DD(358.98,.02,"DT")
	;;=2941018
	;;^DD(358.98,.03,0)
	;;=RECOMMENDED HEADER^F^^0;3^K:$L(X)>12!($L(X)<1) X
	;;^DD(358.98,.03,3)
	;;=Answer must be 1-12 characters in length.
	;;^DD(358.98,.03,21,0)
	;;=^^2^2^2950717^
	;;^DD(358.98,.03,21,1,0)
	;;=The recommended header will be used as the default header when designing a
	;;^DD(358.98,.03,21,2,0)
	;;=form.
	;;^DD(358.98,.03,"DT")
	;;=2950717

IBDIN03I
IBDIN03I	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.99)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.99,0,"GL")
	;;=^IBE(358.99,
	;;^DIC("B","IMP/EXP AICS DATA ELEMENTS",358.99)
	;;=
	;;^DIC(358.99,"%D",0)
	;;=^^1^1^2950914^^
	;;^DIC(358.99,"%D",1,0)
	;;=Used as a workspace for the import/export utility.
	;;^DD(358.99,0)
	;;=FIELD^^10.04^15
	;;^DD(358.99,0,"DDA")
	;;=N
	;;^DD(358.99,0,"DT")
	;;=2950928
	;;^DD(358.99,0,"IX","B",358.99,.01)
	;;=
	;;^DD(358.99,0,"NM","IMP/EXP AICS DATA ELEMENTS")
	;;=
	;;^DD(358.99,0,"PT",357.6,13)
	;;=
	;;^DD(358.99,0,"PT",357.613,.01)
	;;=
	;;^DD(358.99,0,"PT",358.6,16.2)
	;;=
	;;^DD(358.99,0,"PT",358.6,16.6)
	;;=
	;;^DD(358.99,0,"PT",358.613,.01)
	;;=
	;;^DD(358.99,.01,0)
	;;=DHCP DATA TYPE^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.99,.01,1,0)
	;;=^.1
	;;^DD(358.99,.01,1,1,0)
	;;=358.99^B
	;;^DD(358.99,.01,1,1,1)
	;;=S ^IBE(358.99,"B",$E(X,1,30),DA)=""
	;;^DD(358.99,.01,1,1,2)
	;;=K ^IBE(358.99,"B",$E(X,1,30),DA)
	;;^DD(358.99,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.99,.01,21,0)
	;;=^^2^2^2950418^
	;;^DD(358.99,.01,21,1,0)
	;;=A type of data that is recognized as such within the framework of scanning
	;;^DD(358.99,.01,21,2,0)
	;;=DHCP forms and which requires its own Paper Keyboard description.
	;;^DD(358.99,.01,"DT")
	;;=2950418
	;;^DD(358.99,.02,0)
	;;=MAXIMUM LENGTH FOR INPUT^RNJ2,0^^0;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.99,.02,3)
	;;=What is the maximum number of characters that can be input for this data?
	;;^DD(358.99,.02,21,0)
	;;=^^1^1^2950808^
	;;^DD(358.99,.02,21,1,0)
	;;=The maximum number of characters that can be input for this data type.
	;;^DD(358.99,.02,"DT")
	;;=2950504
	;;^DD(358.99,.05,0)
	;;=PRINT FORMAT^F^^0;5^K:$L(X)>64!($L(X)<1) X
	;;^DD(358.99,.05,3)
	;;=Use an underscore,'_',to indicate positions that the user should fill in. Use other characters to pre-fillthat position.
	;;^DD(358.99,.05,21,0)
	;;=^^4^4^2950811^^^
	;;^DD(358.99,.05,21,1,0)
	;;=Used to print the field. Fields for certain types of data, such
	;;^DD(358.99,.05,21,2,0)
	;;=as telephone numbers and Social Security numbers usually require certain
	;;^DD(358.99,.05,21,3,0)
	;;=formats, such as *********** for an SSN. The PRINT FORMAT allows the
	;;^DD(358.99,.05,21,4,0)
	;;=required format to be specified.
	;;^DD(358.99,.05,"DT")
	;;=2950811
	;;^DD(358.99,.06,0)
	;;=SPACE ALLOCATION^RNJ2,0^^0;6^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.99,.06,3)
	;;=What is the maximum number of characters in this field?
	;;^DD(358.99,.06,21,0)
	;;=^^2^2^2950808^^
	;;^DD(358.99,.06,21,1,0)
	;;=This is used to determine how much space on the form to allocate for the 
	;;^DD(358.99,.06,21,2,0)
	;;=hand print.
	;;^DD(358.99,.06,"DT")
	;;=2950504
	;;^DD(358.99,.07,0)
	;;=REQUIRED CONFIDENCE^NJ2,0^^0;7^K:+X'=X!(X>11)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.99,.07,3)
	;;=Enter a number between 0 and 11. 0 means that the data will not require validation, 11 means the field must always be validated.
	;;^DD(358.99,.07,21,0)
	;;=^^2^2^2950808^
	;;^DD(358.99,.07,21,1,0)
	;;=This is the confidence level (as defined by Paper Keyboard) that should be
	;;^DD(358.99,.07,21,2,0)
	;;=applied to this data type.
	;;^DD(358.99,.07,"DT")
	;;=2950601
	;;^DD(358.99,.1,0)
	;;=RECOMMENDED LABEL^F^^0;10^K:$L(X)>30!($L(X)<1) X
	;;^DD(358.99,.1,3)
	;;=Answer must be 1-30 characters in length.
	;;^DD(358.99,.1,21,0)
	;;=^^1^1^2950817^^^
	;;^DD(358.99,.1,21,1,0)
	;;=Will be used as a default label.
	;;^DD(358.99,.1,"DT")
	;;=2950817
	;;^DD(358.99,.11,0)
	;;=LABEL FOR UNIT OF MEASUREMENT^F^^0;11^K:$L(X)>20!($L(X)<1) X
	;;^DD(358.99,.11,3)
	;;=Answer must be 1-20 characters in length.
	;;^DD(358.99,.11,21,0)
	;;=^^1^1^2950815^^^
	;;^DD(358.99,.11,21,1,0)
	;;=The unit of measurement as defined by the PCE Generic Device Interface.
	;;^DD(358.99,.11,"DT")
	;;=2950815
	;;^DD(358.99,.12,0)
	;;=PCE GDI VITALS TYPE^F^^0;12^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.99,.12,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.99,.12,21,0)
	;;=^^1^1^2950811^
	;;^DD(358.99,.12,21,1,0)
	;;=The type of vitals measurement - used only for the PCE GDI VITALS node.
	;;^DD(358.99,.12,"DT")
	;;=2950811
	;;^DD(358.99,.13,0)
	;;=PCE GDI VITALS UNITS^F^^0;13^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.99,.13,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.99,.13,21,0)
	;;=^^1^1^2950811^
	;;^DD(358.99,.13,21,1,0)
	;;=The unit of measurement - used only for the PCE GDI VITALS node.
	;;^DD(358.99,.13,"DT")
	;;=2950811
	;;^DD(358.99,1,0)
	;;=PCE GDI INPUT TRANSFORM^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.99,1,3)
	;;=The M code should set X to the value to be passed, else kill X if it is not valid.

IBDIN03J
IBDIN03J	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.99)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.99,1,9)
	;;=@
	;;^DD(358.99,1,21,0)
	;;=^^4^4^2950908^
	;;^DD(358.99,1,21,1,0)
	;;=The input transform should change X into a value that can be passed to the
	;;^DD(358.99,1,21,2,0)
	;;=PCE Generic Device Interface. X should be killed if it not be transformed.
	;;^DD(358.99,1,21,3,0)
	;;=Note that the return value of X need not meet all of PCE's validation
	;;^DD(358.99,1,21,4,0)
	;;=requirments - for example, X may be an inactive code.
	;;^DD(358.99,1,"DT")
	;;=2950908
	;;^DD(358.99,2,0)
	;;=HELP FOR INPUT TRANSFORM^F^^2;1^K:$L(X)>245!($L(X)<1) X
	;;^DD(358.99,2,3)
	;;=Enter a line of help that will assist the user in entering valid data.
	;;^DD(358.99,2,21,0)
	;;=^^1^1^2950808^
	;;^DD(358.99,2,21,1,0)
	;;=Help for the user.
	;;^DD(358.99,2,"DT")
	;;=2950426
	;;^DD(358.99,10.01,0)
	;;=PAPER KEYBOARD DATA TYPE^S^a:ALPHA (any ASCII);d:DATE (MM/DD/YY);f:FLOATING POINT NUMBER;i:INTEGER;t:TIME(HHMM, VA FileMan format);^10;1^Q
	;;^DD(358.99,10.01,3)
	;;=Choose the most appropriate data type from the list.
	;;^DD(358.99,10.01,21,0)
	;;=^^4^4^2950928^
	;;^DD(358.99,10.01,21,1,0)
	;;=These are the data types provided for by Paper Keyboard.  The ALPHA
	;;^DD(358.99,10.01,21,2,0)
	;;=data type can be further described by a Paper Keyboard picture clause.
	;;^DD(358.99,10.01,21,3,0)
	;;=The Integer data type does not apply if the field can contain spaces or
	;;^DD(358.99,10.01,21,4,0)
	;;=punctuation other than a '-'.
	;;^DD(358.99,10.01,"DT")
	;;=2950928
	;;^DD(358.99,10.02,0)
	;;=PAPER KEYBOARD PICTURE^F^^10;2^K:$L(X)>60!($L(X)<1) X
	;;^DD(358.99,10.02,3)
	;;=Answer must be 1-60 characters in length.
	;;^DD(358.99,10.02,21,0)
	;;=^^6^6^2950928^
	;;^DD(358.99,10.02,21,1,0)
	;;=Enter a picture clause specific to Paper Keyboard.  A picture clause
	;;^DD(358.99,10.02,21,2,0)
	;;=describes the intended format for the data type.  This is similar to
	;;^DD(358.99,10.02,21,3,0)
	;;=an M pattern match.  For example, a CPT code is 5 characters, the
	;;^DD(358.99,10.02,21,4,0)
	;;=first character may be an alpha or numeric followed by 4 numeric
	;;^DD(358.99,10.02,21,5,0)
	;;=characaters.  To represent this picture in Paper Keyboard, one would
	;;^DD(358.99,10.02,21,6,0)
	;;=enter the picture X####.
	;;^DD(358.99,10.02,"DT")
	;;=2950928
	;;^DD(358.99,10.03,0)
	;;=DICTIONARY^F^^10;3^K:$L(X)>12!($L(X)<1) X
	;;^DD(358.99,10.03,3)
	;;=Answer must be 1-12 characters in length.
	;;^DD(358.99,10.03,21,0)
	;;=^^3^3^2950928^
	;;^DD(358.99,10.03,21,1,0)
	;;=Enter the name of a Paper Keyboard Dictionary.  A dictionary
	;;^DD(358.99,10.03,21,2,0)
	;;=can be applied to ICR data types to improve the recognition of ICR
	;;^DD(358.99,10.03,21,3,0)
	;;=fields.  This is the name of the file that Paper Keyboard uses.
	;;^DD(358.99,10.03,"DT")
	;;=2950928
	;;^DD(358.99,10.04,0)
	;;=PK PICTURES FOR SUBFIELDS^F^^10;4^K:$L(X)>120!($L(X)<1) X
	;;^DD(358.99,10.04,3)
	;;=Answer must be 1-120 characters in length.
	;;^DD(358.99,10.04,21,0)
	;;=^^7^7^2950928^
	;;^DD(358.99,10.04,21,1,0)
	;;=When using print formats for paper keyboard you should enter the 
	;;^DD(358.99,10.04,21,2,0)
	;;=picture clause in this field.  For example, the print format for
	;;^DD(358.99,10.04,21,3,0)
	;;=a SSN might look like ___-__-____.  This would cause the dashes to
	;;^DD(358.99,10.04,21,4,0)
	;;=be printed and user input to be accepted in three subfields with
	;;^DD(358.99,10.04,21,5,0)
	;;=lenghts of 3, 2, and 4 numerics.  You would then enter the picture
	;;^DD(358.99,10.04,21,6,0)
	;;=in this field as ###-##-####.  (note the # sign is used as the
	;;^DD(358.99,10.04,21,7,0)
	;;=picture for numerics)
	;;^DD(358.99,10.04,"DT")
	;;=2950928

IBDIN03K
IBDIN03K	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(359)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(359,0,"GL")
	;;=^IBD(359,
	;;^DIC("B","CONVERTED FORMS",359)
	;;=
	;;^DIC(359,"%D",0)
	;;=^^2^2^2960402^^^
	;;^DIC(359,"%D",1,0)
	;;=This file contains a list of forms created with the IB 2.0 version of the
	;;^DIC(359,"%D",2,0)
	;;=encounter form utilities that have been converted under AICS for scanning.
	;;^DD(359,0)
	;;=FIELD^^1^6
	;;^DD(359,0,"DDA")
	;;=N
	;;^DD(359,0,"DT")
	;;=2950306
	;;^DD(359,0,"IX","AORIG",359,.02)
	;;=
	;;^DD(359,0,"IX","B",359,.01)
	;;=
	;;^DD(359,0,"NM","CONVERTED FORMS")
	;;=
	;;^DD(359,.01,0)
	;;=CONVERTED FORM^RP357'^IBE(357,^0;1^Q
	;;^DD(359,.01,1,0)
	;;=^.1
	;;^DD(359,.01,1,1,0)
	;;=359^B
	;;^DD(359,.01,1,1,1)
	;;=S ^IBD(359,"B",$E(X,1,30),DA)=""
	;;^DD(359,.01,1,1,2)
	;;=K ^IBD(359,"B",$E(X,1,30),DA)
	;;^DD(359,.01,3)
	;;=What is the new form?
	;;^DD(359,.01,21,0)
	;;=^^1^1^2950302^
	;;^DD(359,.01,21,1,0)
	;;=The new form that was created.
	;;^DD(359,.01,"DT")
	;;=2950302
	;;^DD(359,.02,0)
	;;=ORIGINAL FORM^P357'^IBE(357,^0;2^Q
	;;^DD(359,.02,1,0)
	;;=^.1
	;;^DD(359,.02,1,1,0)
	;;=359^AORIG
	;;^DD(359,.02,1,1,1)
	;;=S ^IBD(359,"AORIG",$E(X,1,30),DA)=""
	;;^DD(359,.02,1,1,2)
	;;=K ^IBD(359,"AORIG",$E(X,1,30),DA)
	;;^DD(359,.02,1,1,"%D",0)
	;;=^^1^1^2951121^
	;;^DD(359,.02,1,1,"%D",1,0)
	;;=This is a regular cross reference of forms already converted
	;;^DD(359,.02,1,1,"DT")
	;;=2951121
	;;^DD(359,.02,3)
	;;=What was the original form that the new one was created from?
	;;^DD(359,.02,"DT")
	;;=2951121
	;;^DD(359,.03,0)
	;;=NAME OF ORIGINAL FORM^RF^^0;3^K:$L(X)>45!($L(X)<1) X
	;;^DD(359,.03,3)
	;;=Answer must be 1-45 characters in length.
	;;^DD(359,.03,"DT")
	;;=2950303
	;;^DD(359,.04,0)
	;;=DATE OF CONVERSION^RD^^0;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(359,.04,3)
	;;=When was the new form created?
	;;^DD(359,.04,21,0)
	;;=^^1^1^2950302^
	;;^DD(359,.04,21,1,0)
	;;=The date the converted form was created.
	;;^DD(359,.04,"DT")
	;;=2950302
	;;^DD(359,.05,0)
	;;=SUBSTITUTION OCCURRED?^S^0:NO;1:YES;^0;5^Q
	;;^DD(359,.05,3)
	;;=Has the new form been substituted in the clinics for the original form?
	;;^DD(359,.05,"DT")
	;;=2950302
	;;^DD(359,1,0)
	;;=WARNINGS^359.01^^1;0
	;;^DD(359.01,0)
	;;=WARNINGS SUB-FIELD^^.01^1
	;;^DD(359.01,0,"DT")
	;;=2950306
	;;^DD(359.01,0,"NM","WARNINGS")
	;;=
	;;^DD(359.01,0,"UP")
	;;=359
	;;^DD(359.01,.01,0)
	;;=WARNINGS^WL^^0;1^Q
	;;^DD(359.01,.01,3)
	;;=Enter warnings or problems encountered while converting the form to scanning.
	;;^DD(359.01,.01,"DT")
	;;=2950306

IBDIN03L
IBDIN03L	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(359.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(359.1,0,"GL")
	;;=^IBE(359.1,
	;;^DIC("B","AICS DATA ELEMENTS",359.1)
	;;=
	;;^DIC(359.1,"%D",0)
	;;=^^3^3^2950927^^
	;;^DIC(359.1,"%D",1,0)
	;;=Used to describe a simple data element, one that would appear as a single
	;;^DIC(359.1,"%D",2,0)
	;;=field on a form. The description includes instructions on how to print
	;;^DIC(359.1,"%D",3,0)
	;;=the field and how the scanning software should recognize it.
	;;^DD(359.1,0)
	;;=FIELD^^10.04^15
	;;^DD(359.1,0,"DDA")
	;;=N
	;;^DD(359.1,0,"DT")
	;;=2950928
	;;^DD(359.1,0,"IX","B",359.1,.01)
	;;=
	;;^DD(359.1,0,"NM","AICS DATA ELEMENTS")
	;;=
	;;^DD(359.1,0,"PT",357.14,.17)
	;;=
	;;^DD(359.1,0,"PT",357.6,13)
	;;=
	;;^DD(359.1,0,"PT",357.6,16.2)
	;;=
	;;^DD(359.1,0,"PT",357.6,16.6)
	;;=
	;;^DD(359.1,0,"PT",357.613,.01)
	;;=
	;;^DD(359.1,0,"PT",357.952,.17)
	;;=
	;;^DD(359.1,0,"PT",358.94,.1)
	;;=
	;;^DD(359.1,0,"PT",359.94,.1)
	;;=
	;;^DD(359.1,.01,0)
	;;=DATA TYPE^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(359.1,.01,1,0)
	;;=^.1
	;;^DD(359.1,.01,1,1,0)
	;;=359.1^B
	;;^DD(359.1,.01,1,1,1)
	;;=S ^IBE(359.1,"B",$E(X,1,30),DA)=""
	;;^DD(359.1,.01,1,1,2)
	;;=K ^IBE(359.1,"B",$E(X,1,30),DA)
	;;^DD(359.1,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(359.1,.01,21,0)
	;;=^^8^8^2951003^
	;;^DD(359.1,.01,21,1,0)
	;;=A type of data that is recognized as such within the framework of scanning
	;;^DD(359.1,.01,21,2,0)
	;;=DHCP forms and which requires its own description for
	;;^DD(359.1,.01,21,3,0)
	;;=scanning/recognition.
	;;^DD(359.1,.01,21,4,0)
	;;= 
	;;^DD(359.1,.01,21,5,0)
	;;=Enter a type of data that can appear on a scannable encounter form.  The
	;;^DD(359.1,.01,21,6,0)
	;;=data should require a unique description for each commercial scanning
	;;^DD(359.1,.01,21,7,0)
	;;=application in use.  For example, check out date/time or CPT procedure
	;;^DD(359.1,.01,21,8,0)
	;;=require a definition for scanning.
	;;^DD(359.1,.01,"DT")
	;;=2950928
	;;^DD(359.1,.02,0)
	;;=MAXIMUM LENGTH FOR INPUT^RNJ2,0^^0;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(359.1,.02,3)
	;;=What is the maximum number of characters that can be input for this data?
	;;^DD(359.1,.02,21,0)
	;;=^^1^1^2950808^
	;;^DD(359.1,.02,21,1,0)
	;;=The maximum number of characters that can be input for this data type.
	;;^DD(359.1,.02,"DT")
	;;=2950504
	;;^DD(359.1,.05,0)
	;;=PRINT FORMAT^F^^0;5^K:$L(X)>64!($L(X)<1) X
	;;^DD(359.1,.05,3)
	;;=Use an underscore,'_',to indicate positions that the user should fill in. Use other characters to pre-fill that position.
	;;^DD(359.1,.05,21,0)
	;;=^^4^4^2951003^^^^
	;;^DD(359.1,.05,21,1,0)
	;;=Used to print the field. Fields for certain types of data, such
	;;^DD(359.1,.05,21,2,0)
	;;=as telephone numbers and Social Security numbers usually require certain
	;;^DD(359.1,.05,21,3,0)
	;;=formats, such as *********** for an SSN. The PRINT FORMAT allows the
	;;^DD(359.1,.05,21,4,0)
	;;=required format to be specified.
	;;^DD(359.1,.05,"DT")
	;;=2950811
	;;^DD(359.1,.06,0)
	;;=SPACE ALLOCATION^RNJ2,0^^0;6^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(359.1,.06,3)
	;;=What is the maximum number of characters in this field?
	;;^DD(359.1,.06,21,0)
	;;=^^2^2^2950808^^
	;;^DD(359.1,.06,21,1,0)
	;;=This is used to determine how much space on the form to allocate for the 
	;;^DD(359.1,.06,21,2,0)
	;;=hand print.
	;;^DD(359.1,.06,"DT")
	;;=2950504
	;;^DD(359.1,.07,0)
	;;=REQUIRED CONFIDENCE^NJ2,0^^0;7^K:+X'=X!(X>11)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(359.1,.07,3)
	;;=Enter a number between 0 and 11. 0 means that the data will not require validation, 11 means the field must always be validated.
	;;^DD(359.1,.07,21,0)
	;;=^^2^2^2950808^
	;;^DD(359.1,.07,21,1,0)
	;;=This is the confidence level (as defined by Paper Keyboard) that should be
	;;^DD(359.1,.07,21,2,0)
	;;=applied to this data type.
	;;^DD(359.1,.07,"DT")
	;;=2950601
	;;^DD(359.1,.1,0)
	;;=RECOMMENDED LABEL^F^^0;10^K:$L(X)>30!($L(X)<1) X
	;;^DD(359.1,.1,3)
	;;=Answer must be 1-30 characters in length.
	;;^DD(359.1,.1,21,0)
	;;=^^1^1^2950817^^^
	;;^DD(359.1,.1,21,1,0)
	;;=Will be used as a default label.
	;;^DD(359.1,.1,"DT")
	;;=2950817
	;;^DD(359.1,.11,0)
	;;=LABEL FOR UNIT OF MEASUREMENT^F^^0;11^K:$L(X)>20!($L(X)<1) X
	;;^DD(359.1,.11,3)
	;;=Answer must be 1-20 characters in length.
	;;^DD(359.1,.11,21,0)
	;;=^^1^1^2950815^^^
	;;^DD(359.1,.11,21,1,0)
	;;=The unit of measurement as defined by the PCE Generic Device Interface.
	;;^DD(359.1,.11,"DT")
	;;=2950815
	;;^DD(359.1,.12,0)
	;;=PCE DIM VITALS TYPE^F^^0;12^K:$L(X)>10!($L(X)<1) X
	;;^DD(359.1,.12,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(359.1,.12,21,0)
	;;=^^1^1^2960401^^^

IBDIN03M
IBDIN03M	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(359.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(359.1,.12,21,1,0)
	;;=The type of vitals measurement - used only for the PCE DIM VITALS node.
	;;^DD(359.1,.12,"DT")
	;;=2960401
	;;^DD(359.1,.13,0)
	;;=PCE DIM VITALS UNITS^F^^0;13^K:$L(X)>10!($L(X)<1) X
	;;^DD(359.1,.13,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(359.1,.13,21,0)
	;;=^^2^2^2960401^^
	;;^DD(359.1,.13,21,1,0)
	;;=The unit of measurement - used only for the PCE Device Interface Mondule
	;;^DD(359.1,.13,21,2,0)
	;;=(DIM) VITALS node.
	;;^DD(359.1,.13,"DT")
	;;=2960401
	;;^DD(359.1,1,0)
	;;=PCE DIM INPUT TRANSFORM^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(359.1,1,3)
	;;=The M code should set X to the value to be passed, else kill X if it is not valid.
	;;^DD(359.1,1,9)
	;;=@
	;;^DD(359.1,1,21,0)
	;;=^^4^4^2960401^^
	;;^DD(359.1,1,21,1,0)
	;;=The input transform should change X into a value that can be passed to the
	;;^DD(359.1,1,21,2,0)
	;;=PCE Device Interface Module. X should be killed if it not be transformed.
	;;^DD(359.1,1,21,3,0)
	;;=Note that the return value of X need not meet all of PCE's validation
	;;^DD(359.1,1,21,4,0)
	;;=requirments - for example, X may be an inactive code.
	;;^DD(359.1,1,"DT")
	;;=2960401
	;;^DD(359.1,2,0)
	;;=HELP FOR INPUT TRANSFORM^F^^2;1^K:$L(X)>245!($L(X)<1) X
	;;^DD(359.1,2,3)
	;;=Enter a line of help that will assist the user in entering valid data.
	;;^DD(359.1,2,21,0)
	;;=^^1^1^2950808^
	;;^DD(359.1,2,21,1,0)
	;;=Help for the user.
	;;^DD(359.1,2,"DT")
	;;=2950426
	;;^DD(359.1,10.01,0)
	;;=PAPER KEYBOARD DATA TYPE^S^a:ALPHA (any ASCII);d:DATE (MM/DD/YY);f:FLOATING POINT NUMBER;i:INTEGER;t:TIME (HHMM, VA FileMan format);^10;1^Q
	;;^DD(359.1,10.01,3)
	;;=Choose the most appropriate data type from the list.
	;;^DD(359.1,10.01,21,0)
	;;=^^4^4^2950928^^
	;;^DD(359.1,10.01,21,1,0)
	;;=These are the data types provided for by Paper Keyboard.  The ALPHA data
	;;^DD(359.1,10.01,21,2,0)
	;;=type can be further described by a Paper Keyboard picture clause.  The 
	;;^DD(359.1,10.01,21,3,0)
	;;=Integer data type does not apply if the field can contain spaces or
	;;^DD(359.1,10.01,21,4,0)
	;;=puntuation other than a '+'.
	;;^DD(359.1,10.01,"DT")
	;;=2950928
	;;^DD(359.1,10.02,0)
	;;=PAPER KEYBOARD PICTURE^F^^10;2^K:$L(X)>60!($L(X)<1) X
	;;^DD(359.1,10.02,3)
	;;=Answer must be 1-60 characters in length.
	;;^DD(359.1,10.02,21,0)
	;;=^^6^6^2950928^^
	;;^DD(359.1,10.02,21,1,0)
	;;=Enter a picture clause specific to Paper Keyboard.  A picture clause
	;;^DD(359.1,10.02,21,2,0)
	;;=describes the intended format for the data type.  This is similar
	;;^DD(359.1,10.02,21,3,0)
	;;=to an M pattern match.  For example, a CPT code is 5 characters, the
	;;^DD(359.1,10.02,21,4,0)
	;;=first character may be an alpha or numeric followed by 4 numeric 
	;;^DD(359.1,10.02,21,5,0)
	;;=characters.  To represent this picture in Paper Keyboard, one would
	;;^DD(359.1,10.02,21,6,0)
	;;=enter the picture X####.
	;;^DD(359.1,10.02,"DT")
	;;=2950928
	;;^DD(359.1,10.03,0)
	;;=DICTIONARY^F^^10;3^K:$L(X)>12!($L(X)<1)!'(X?1.8A.1".".3A) X
	;;^DD(359.1,10.03,3)
	;;=You may optionally enter the name of a dictionary to assist in the recognition of ICR fields.  Answer must be 1-12 characters in length.
	;;^DD(359.1,10.03,21,0)
	;;=^^3^3^2951017^
	;;^DD(359.1,10.03,21,1,0)
	;;=Enter the name of a dictionary.  A dictionary can be applied to ICR data
	;;^DD(359.1,10.03,21,2,0)
	;;=types to improve the recognition of ICR fields. This is the name of the
	;;^DD(359.1,10.03,21,3,0)
	;;=file that the scanning software uses.
	;;^DD(359.1,10.03,"DT")
	;;=2950928
	;;^DD(359.1,10.04,0)
	;;=PK PICTURES FOR SUBFIELDS^F^^10;4^K:$L(X)>120!($L(X)<1) X
	;;^DD(359.1,10.04,3)
	;;=Answer must be 1-120 characters in length.
	;;^DD(359.1,10.04,21,0)
	;;=^^7^7^2950928^^^
	;;^DD(359.1,10.04,21,1,0)
	;;=When using print formats for paper keyboard you should enter the
	;;^DD(359.1,10.04,21,2,0)
	;;=picture clause in this field.  For example the print format
	;;^DD(359.1,10.04,21,3,0)
	;;=for a SSN might look like ___-__-____ .  This would cause the
	;;^DD(359.1,10.04,21,4,0)
	;;=dashes to be printed and user input to be accepted in three
	;;^DD(359.1,10.04,21,5,0)
	;;=subfields with lengths of 3, 2, and 4 numerics.  You would then
	;;^DD(359.1,10.04,21,6,0)
	;;=enter the picture in this field as ###-##-####.  (note the # sign
	;;^DD(359.1,10.04,21,7,0)
	;;=is used as the picture for numerics)
	;;^DD(359.1,10.04,"DT")
	;;=2950928

IBDIN03N
IBDIN03N	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(359.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,359.1)
	;;=^IBE(359.1,
	;;^UTILITY(U,$J,359.1,0)
	;;=AICS DATA ELEMENTS^359.1^31^21
	;;^UTILITY(U,$J,359.1,1,0)
	;;=ICD-9 DIAGNOSIS CODE^7^^^____.__^7^11^^^^^ICD-9
	;;^UTILITY(U,$J,359.1,1,1)
	;;=D INPUTICD^IBDFN8(.X)
	;;^UTILITY(U,$J,359.1,1,10)
	;;=a^#F^^####.##
	;;^UTILITY(U,$J,359.1,2,0)
	;;=CPT-4 PROCEDURE CODE^5^^^^5^11^^^^^CPT-4
	;;^UTILITY(U,$J,359.1,2,1)
	;;=D INPUTCPT^IBDFN8(.X)
	;;^UTILITY(U,$J,359.1,2,10)
	;;=a^X####^
	;;^UTILITY(U,$J,359.1,6,0)
	;;=BODY WEIGHT^5^^^___._^5^11^^^Weight:^lbs^WT^LB
	;;^UTILITY(U,$J,359.1,6,10)
	;;=f^^^###.#
	;;^UTILITY(U,$J,359.1,7,0)
	;;=BODY TEMPERATURE^5^^^___._^5^11^^^Temperature:^Fahr^TMP^F
	;;^UTILITY(U,$J,359.1,7,10)
	;;=f^^^###.#
	;;^UTILITY(U,$J,359.1,15,0)
	;;=BLOOD PRESSURE^7^^^___/___^7^11^^^Blood Press.:^systolic/diastolic^BP
	;;^UTILITY(U,$J,359.1,15,10)
	;;=a^^^###/###
	;;^UTILITY(U,$J,359.1,16,0)
	;;=AUDIOMETRY - LEFT EAR^31^^^___/___/___/___/___/___/___/___^31^11^^^^lft ear^AUD
	;;^UTILITY(U,$J,359.1,16,10)
	;;=a^^^###/###/###/###/###/###/###/###
	;;^UTILITY(U,$J,359.1,17,0)
	;;=CHECKOUT DATE@TIME^11^^^____9_@____^11^11^^^Checkout:^mmddyy@hhmm^CODT
	;;^UTILITY(U,$J,359.1,17,1)
	;;=D CKOUT^IBDFN13(.X)
	;;^UTILITY(U,$J,359.1,17,10)
	;;=a
	;;^UTILITY(U,$J,359.1,18,0)
	;;=SHORT NARRATIVE (30 CHAR)^^^^_______________________________^30^11^^^^^NARR
	;;^UTILITY(U,$J,359.1,18,10)
	;;=a^^^################################
	;;^UTILITY(U,$J,359.1,19,0)
	;;=ABDOMINAL GIRTH^^^^___^3^11^^^Abdominal Girth:^in^AG^IN
	;;^UTILITY(U,$J,359.1,19,10)
	;;=i^^^###
	;;^UTILITY(U,$J,359.1,20,0)
	;;=AUDIOMETRY - RIGHT EAR^^^^___/___/___/___/___/___/___/___^31^11^^^^rt ear^AUD
	;;^UTILITY(U,$J,359.1,20,10)
	;;=a^^^###/###/###/###/###/###/###/###
	;;^UTILITY(U,$J,359.1,21,0)
	;;=FUNDAL HEIGHT^^^^__^2^11^^^Fundal Ht:^in^FH
	;;^UTILITY(U,$J,359.1,21,10)
	;;=a^^^##
	;;^UTILITY(U,$J,359.1,22,0)
	;;=FETAL HEART TONES^^^^___^3^11^^^Fetal Heart Tone:^per sec^FT
	;;^UTILITY(U,$J,359.1,22,10)
	;;=a^^^###
	;;^UTILITY(U,$J,359.1,23,0)
	;;=HEAD CIRCUMFERENCE^^^^__._^4^11^^^Head Circumference:^in^HC^IN
	;;^UTILITY(U,$J,359.1,23,10)
	;;=f^^^##.#
	;;^UTILITY(U,$J,359.1,24,0)
	;;=HEARING^^^^_^1^11^^^Hearing:^N=normal,A=abnormal^HE^
	;;^UTILITY(U,$J,359.1,24,10)
	;;=a^^^#
	;;^UTILITY(U,$J,359.1,25,0)
	;;=BODY HEIGHT^4^^^__._^4^11^^^Height:^in^HT^IN
	;;^UTILITY(U,$J,359.1,25,10)
	;;=f^^^##.#
	;;^UTILITY(U,$J,359.1,26,0)
	;;=PULSE^3^^^___^3^11^^^Pulse^per sec^PU
	;;^UTILITY(U,$J,359.1,26,10)
	;;=i^^^###
	;;^UTILITY(U,$J,359.1,27,0)
	;;=RESPIRATION^^^^__^2^11^^^Respiration:^per sec^RS
	;;^UTILITY(U,$J,359.1,27,10)
	;;=i^^^##
	;;^UTILITY(U,$J,359.1,28,0)
	;;=TONOMETRY^^^^__/__^5^11^^^Tonometry:^lft eye/rt eye^TON
	;;^UTILITY(U,$J,359.1,28,10)
	;;=a^^^##/##
	;;^UTILITY(U,$J,359.1,29,0)
	;;=VISION CORRECTED^^^^__/__^5^11^^^Vision Corrected:^lft eye/rt eye^VC
	;;^UTILITY(U,$J,359.1,29,10)
	;;=a^^^##/##
	;;^UTILITY(U,$J,359.1,30,0)
	;;=VISION UNCORRECTED^^^^__/__^5^11^^^Vison Uncorrected:^lft eye/rt eye^VU
	;;^UTILITY(U,$J,359.1,30,10)
	;;=a^^^##/##
	;;^UTILITY(U,$J,359.1,31,0)
	;;=CHECKOUT TIME - DATE ASSUMED^4^^^____^4^11^^^Checkout:^hhmm^COTIME
	;;^UTILITY(U,$J,359.1,31,1)
	;;=D CKOUTTM^IBDFN13(.X,.IBFORMID)
	;;^UTILITY(U,$J,359.1,31,10)
	;;=t^

IBDIN03O
IBDIN03O	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(359.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(359.2,0,"GL")
	;;=^IBD(359.2,
	;;^DIC("B","FORM SPECS",359.2)
	;;=
	;;^DIC(359.2,"%D",0)
	;;=^^3^3^2951026^^
	;;^DIC(359.2,"%D",1,0)
	;;=This file contains the description of the form used by the scanning
	;;^DIC(359.2,"%D",2,0)
	;;=software. The description, for example, must contain the locations of all
	;;^DIC(359.2,"%D",3,0)
	;;=the fields to be read.
	;;^DD(359.2,0)
	;;=FIELD^^.03^4
	;;^DD(359.2,0,"DT")
	;;=2951003
	;;^DD(359.2,0,"ID",.02)
	;;=W "   Created: ",$E($P(^(0),U,2),4,5)_"-"_$E($P(^(0),U,2),6,7)_"-"_$E($P(^(0),U,2),2,3)
	;;^DD(359.2,0,"ID",.03)
	;;=W "   ",$P(^(0),U,3)
	;;^DD(359.2,0,"IX","B",359.2,.01)
	;;=
	;;^DD(359.2,0,"NM","FORM SPECS")
	;;=
	;;^DD(359.2,.01,0)
	;;=NUMBER^RNJ9,0^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(359.2,.01,1,0)
	;;=^.1
	;;^DD(359.2,.01,1,1,0)
	;;=359.2^B
	;;^DD(359.2,.01,1,1,1)
	;;=S ^IBD(359.2,"B",$E(X,1,30),DA)=""
	;;^DD(359.2,.01,1,1,2)
	;;=K ^IBD(359.2,"B",$E(X,1,30),DA)
	;;^DD(359.2,.01,1,2,0)
	;;=^^TRIGGER^359.2^.02
	;;^DD(359.2,.01,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBD(359.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,2)="" I X S X=DIV S Y(1)=$S($D(^IBD(359.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(359.2,.01,1,2,1.4)
	;;^DD(359.2,.01,1,2,1.4)
	;;=S DIH=$S($D(^IBD(359.2,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=359.2,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(359.2,.01,1,2,2)
	;;=Q
	;;^DD(359.2,.01,1,2,"%D",0)
	;;=^^2^2^2951003^
	;;^DD(359.2,.01,1,2,"%D",1,0)
	;;=This triggers the date created into the DATE CREATED field.  The
	;;^DD(359.2,.01,1,2,"%D",2,0)
	;;=date created is used by the purge utilities.
	;;^DD(359.2,.01,1,2,"CREATE CONDITION")
	;;=#.02=""
	;;^DD(359.2,.01,1,2,"CREATE VALUE")
	;;=S X=DT
	;;^DD(359.2,.01,1,2,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(359.2,.01,1,2,"DT")
	;;=2951003
	;;^DD(359.2,.01,1,2,"FIELD")
	;;=#.02
	;;^DD(359.2,.01,1,3,0)
	;;=^^TRIGGER^359.2^.03
	;;^DD(359.2,.01,1,3,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBD(359.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,3)="" I X S X=DIV S Y(1)=$S($D(^IBD(359.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y X ^DD(359.2,.01,1,3,1.1) X ^DD(359.2,.01,1,3,1.4)
	;;^DD(359.2,.01,1,3,1.1)
	;;=S X=DIV S X=$P($G(^IBE(357,+$O(^IBE(357,"ADEF",+DA,0)),0)),"^")
	;;^DD(359.2,.01,1,3,1.4)
	;;=S DIH=$S($D(^IBD(359.2,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,3)=DIV,DIH=359.2,DIG=.03 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(359.2,.01,1,3,2)
	;;=Q
	;;^DD(359.2,.01,1,3,"%D",0)
	;;=^^1^1^2951003^
	;;^DD(359.2,.01,1,3,"%D",1,0)
	;;=This triggers the name of the form into this file.
	;;^DD(359.2,.01,1,3,"CREATE CONDITION")
	;;=#.03=""
	;;^DD(359.2,.01,1,3,"CREATE VALUE")
	;;=S X=$P($G(^IBE(357,+$O(^IBE(357,"ADEF",+DA,0)),0)),"^")
	;;^DD(359.2,.01,1,3,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(359.2,.01,1,3,"DT")
	;;=2951003
	;;^DD(359.2,.01,1,3,"FIELD")
	;;=#.03
	;;^DD(359.2,.01,3)
	;;=This the form ID number.  Type a Number between 1 and 999999999, 0 Decimal Digits
	;;^DD(359.2,.01,"DT")
	;;=2951003
	;;^DD(359.2,.02,0)
	;;=DATE CREATED^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(359.2,.02,5,1,0)
	;;=359.2^.01^2
	;;^DD(359.2,.02,9)
	;;=^
	;;^DD(359.2,.02,21,0)
	;;=^^2^2^2951003^
	;;^DD(359.2,.02,21,1,0)
	;;=This is the date that this entry was created.  This is triggered by the
	;;^DD(359.2,.02,21,2,0)
	;;=creation of a new entry.
	;;^DD(359.2,.02,"DT")
	;;=2951003
	;;^DD(359.2,.03,0)
	;;=FORM NAME^F^^0;3^K:$L(X)>30!($L(X)<1) X
	;;^DD(359.2,.03,3)
	;;=Answer must be 1-30 characters in length.
	;;^DD(359.2,.03,5,1,0)
	;;=359.2^.01^3
	;;^DD(359.2,.03,9)
	;;=^
	;;^DD(359.2,.03,21,0)
	;;=^^2^2^2951003^
	;;^DD(359.2,.03,21,1,0)
	;;=This is the name of the form that this form specification is for.  This
	;;^DD(359.2,.03,21,2,0)
	;;=is triggered on creation of the entry
	;;^DD(359.2,.03,"DT")
	;;=2951003
	;;^DD(359.2,10,0)
	;;=FORM SPEC DESCRIPTION^359.21^^10;0
	;;^DD(359.21,0)
	;;=FORM SPEC DESCRIPTION SUB-FIELD^^.01^1
	;;^DD(359.21,0,"DT")
	;;=2950613
	;;^DD(359.21,0,"NM","FORM SPEC DESCRIPTION")
	;;=
	;;^DD(359.21,0,"UP")
	;;=359.2
	;;^DD(359.21,.01,0)
	;;=FORM SPEC DESCRIPTION^WL^^0;1^Q
	;;^DD(359.21,.01,21,0)
	;;=^^3^3^2950613^^^^
	;;^DD(359.21,.01,21,1,0)
	;;=This is the form spec as created by the routines IBDFBKS* and stored
	;;^DD(359.21,.01,21,2,0)
	;;=in this file.  The form spec description is then retrieved to the
	;;^DD(359.21,.01,21,3,0)
	;;=AICS workstation thru standard broker calls.
	;;^DD(359.21,.01,"DT")
	;;=2950613

IBDIN03P
IBDIN03P	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(359.94)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(359.94,0,"GL")
	;;=^IBE(359.94,
	;;^DIC("B","HAND PRINT FIELD",359.94)
	;;=
	;;^DIC(359.94,"%D",0)
	;;=^^1^1^2950728^^
	;;^DIC(359.94,"%D",1,0)
	;;=This file allows fields to be defined to print on forms for hand print.
	;;^DD(359.94,0)
	;;=FIELD^^.1^8
	;;^DD(359.94,0,"DT")
	;;=2950906
	;;^DD(359.94,0,"IX","B",359.94,.01)
	;;=
	;;^DD(359.94,0,"IX","C",359.94,.08)
	;;=
	;;^DD(359.94,0,"NM","HAND PRINT FIELD")
	;;=
	;;^DD(359.94,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(359.94,.01,1,0)
	;;=^.1
	;;^DD(359.94,.01,1,1,0)
	;;=359.94^B
	;;^DD(359.94,.01,1,1,1)
	;;=S ^IBE(359.94,"B",$E(X,1,30),DA)=""
	;;^DD(359.94,.01,1,1,2)
	;;=K ^IBE(359.94,"B",$E(X,1,30),DA)
	;;^DD(359.94,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(359.94,.01,21,0)
	;;=^^3^3^2950725^
	;;^DD(359.94,.01,21,1,0)
	;;= 
	;;^DD(359.94,.01,21,2,0)
	;;= 
	;;^DD(359.94,.01,21,3,0)
	;;=The name of the field. 
	;;^DD(359.94,.01,"DT")
	;;=2930518
	;;^DD(359.94,.02,0)
	;;=LABEL^F^^0;2^K:$L(X)>150!($L(X)<1) X
	;;^DD(359.94,.02,.1)
	;;=
	;;^DD(359.94,.02,3)
	;;=What label should appear before the hand print field?
	;;^DD(359.94,.02,21,0)
	;;=^^1^1^2950906^^^^
	;;^DD(359.94,.02,21,1,0)
	;;=The text that labels the field on the form.
	;;^DD(359.94,.02,"DT")
	;;=2950906
	;;^DD(359.94,.03,0)
	;;=STARTING COLUMN^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(359.94,.03,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(359.94,.03,2.1)
	;;=S Y=+Y+1
	;;^DD(359.94,.03,3)
	;;=What block column should the field begin in?
	;;^DD(359.94,.03,21,0)
	;;=^^1^1^2950808^
	;;^DD(359.94,.03,21,1,0)
	;;=The column the label begins at.
	;;^DD(359.94,.03,"DT")
	;;=2950728
	;;^DD(359.94,.04,0)
	;;=STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(359.94,.04,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(359.94,.04,2.1)
	;;=S Y=+Y+1
	;;^DD(359.94,.04,3)
	;;=What block row should the field start in?
	;;^DD(359.94,.04,21,0)
	;;=^^1^1^2950808^
	;;^DD(359.94,.04,21,1,0)
	;;=The row the label begins at.
	;;^DD(359.94,.04,"DT")
	;;=2950728
	;;^DD(359.94,.05,0)
	;;=LABEL APPEARANCE^F^^0;5^K:$L(X)>3!($L(X)<1) X
	;;^DD(359.94,.05,3)
	;;=B=bold,U=underline,R=reverse You can enter any combination of {B,U,R}.
	;;^DD(359.94,.05,21,0)
	;;=^^1^1^2950725^
	;;^DD(359.94,.05,21,1,0)
	;;=Allows the form designer to specify the appearance of the label.
	;;^DD(359.94,.05,"DT")
	;;=2950725
	;;^DD(359.94,.06,0)
	;;=TYPE OF DATA^R*P357.6'X^IBE(357.6,^0;6^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""H""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(359.94,.06,.1)
	;;=WHAT TYPE OF DATA WILL BE ENTERED TO THIS FIELD?
	;;^DD(359.94,.06,3)
	;;=What type of data will be entered to the field?
	;;^DD(359.94,.06,12)
	;;=Allows only available input interfaces defined as allowable for hand print fields.
	;;^DD(359.94,.06,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""H"""
	;;^DD(359.94,.06,21,0)
	;;=^^2^2^2940721^^
	;;^DD(359.94,.06,21,1,0)
	;;=Points to the package interface file. That is where information about the
	;;^DD(359.94,.06,21,2,0)
	;;=data and how to map it to DHCP is stored.
	;;^DD(359.94,.06,"DT")
	;;=2950825
	;;^DD(359.94,.08,0)
	;;=BLOCK^RP357.1'^IBE(357.1,^0;8^Q
	;;^DD(359.94,.08,1,0)
	;;=^.1
	;;^DD(359.94,.08,1,1,0)
	;;=359.94^C
	;;^DD(359.94,.08,1,1,1)
	;;=S ^IBE(359.94,"C",$E(X,1,30),DA)=""
	;;^DD(359.94,.08,1,1,2)
	;;=K ^IBE(359.94,"C",$E(X,1,30),DA)
	;;^DD(359.94,.08,1,1,"%D",0)
	;;=^^1^1^2940720^
	;;^DD(359.94,.08,1,1,"%D",1,0)
	;;=Used to find all the input fields appearing in a block.
	;;^DD(359.94,.08,1,1,"DT")
	;;=2940720
	;;^DD(359.94,.08,3)
	;;=What block should this input field appear in?
	;;^DD(359.94,.08,21,0)
	;;=^^1^1^2950808^
	;;^DD(359.94,.08,21,1,0)
	;;=The block the field belongs to.
	;;^DD(359.94,.08,"DT")
	;;=2940720
	;;^DD(359.94,.1,0)
	;;=DHCP DATA ELEMENT^R*P359.1'X^IBE(359.1,^0;10^S DIC("S")="I $$DTGOOD^IBDFU9($P($G(^IBE(359.94,DA,0)),""^"",6),Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(359.94,.1,3)
	;;=What data will be printed in this field?
	;;^DD(359.94,.1,12)
	;;=Allows only data elements defined as allowable for the Package Interface.
	;;^DD(359.94,.1,12.1)
	;;=S DIC("S")="I $$DTGOOD^IBDFU9($P($G(^IBE(359.94,DA,0)),""^"",6),Y)"
	;;^DD(359.94,.1,21,0)
	;;=^^1^1^2950725^
	;;^DD(359.94,.1,21,1,0)
	;;=Specifies what data the hand print field is for.
	;;^DD(359.94,.1,"DT")
	;;=2950727

IBDIN03Q
IBDIN03Q	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(409.95)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(409.95,0,"GL")
	;;=^SD(409.95,
	;;^DIC("B","PRINT MANAGER CLINIC SETUP",409.95)
	;;=
	;;^DIC(409.95,"%D",0)
	;;=^^6^6^2940804^^^^
	;;^DIC(409.95,"%D",1,0)
	;;=This file defines which encounter forms to use for a particular clinic.
	;;^DIC(409.95,"%D",2,0)
	;;= 
	;;^DIC(409.95,"%D",3,0)
	;;=Also, this file can be used to define other forms or reports to print,
	;;^DIC(409.95,"%D",4,0)
	;;=along with the encounter forms. The idea is that for each appointment a
	;;^DIC(409.95,"%D",5,0)
	;;=packet of forms can be printed, saving the effort of collating the forms
	;;^DIC(409.95,"%D",6,0)
	;;=manually.
	;;^DIC(409.95,"%D",7,0)
	;;=first time patients, and one for all patients.
	;;^DIC(409.95,"%D",8,0)
	;;= 
	;;^DIC(409.95,"%D",9,0)
	;;=Also, this file can be used to define other forms or reports to print,
	;;^DIC(409.95,"%D",10,0)
	;;=along with the encounter forms. The idea is that for each appointment a
	;;^DIC(409.95,"%D",11,0)
	;;=packet of forms can be printed, saving the effort of collating the forms
	;;^DIC(409.95,"%D",12,0)
	;;=manually.
	;;^DD(409.95,0)
	;;=FIELD^^.09^11
	;;^DD(409.95,0,"DDA")
	;;=N
	;;^DD(409.95,0,"DT")
	;;=2941207
	;;^DD(409.95,0,"IX","A",409.9501,.01)
	;;=
	;;^DD(409.95,0,"IX","A1",409.9501,.02)
	;;=
	;;^DD(409.95,0,"IX","AE",409.9502,.01)
	;;=
	;;^DD(409.95,0,"IX","B",409.95,.01)
	;;=
	;;^DD(409.95,0,"IX","C",409.95,.02)
	;;=
	;;^DD(409.95,0,"IX","D",409.95,.03)
	;;=
	;;^DD(409.95,0,"IX","E",409.95,.04)
	;;=
	;;^DD(409.95,0,"IX","F",409.95,.05)
	;;=
	;;^DD(409.95,0,"IX","G",409.95,.06)
	;;=
	;;^DD(409.95,0,"IX","H",409.95,.07)
	;;=
	;;^DD(409.95,0,"IX","I",409.95,.08)
	;;=
	;;^DD(409.95,0,"IX","J",409.95,.09)
	;;=
	;;^DD(409.95,0,"NM","PRINT MANAGER CLINIC SETUP")
	;;=
	;;^DD(409.95,.01,0)
	;;=CLINIC^R*P44'^SC(^0;1^S DIC("S")="I $P(^(0),U,3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.95,.01,1,0)
	;;=^.1^^-1
	;;^DD(409.95,.01,1,1,0)
	;;=409.95^B
	;;^DD(409.95,.01,1,1,1)
	;;=S ^SD(409.95,"B",$E(X,1,30),DA)=""
	;;^DD(409.95,.01,1,1,2)
	;;=K ^SD(409.95,"B",$E(X,1,30),DA)
	;;^DD(409.95,.01,3)
	;;=The clinic the print manager setup is for.
	;;^DD(409.95,.01,12)
	;;=Encounter forms are only for clinics.
	;;^DD(409.95,.01,12.1)
	;;=S DIC("S")="I $P(^(0),U,3)=""C"""
	;;^DD(409.95,.01,21,0)
	;;=^^2^2^2930804^^
	;;^DD(409.95,.01,21,1,0)
	;;= 
	;;^DD(409.95,.01,21,2,0)
	;;=The clinic that the setup is for.
	;;^DD(409.95,.01,"DT")
	;;=2930319
	;;^DD(409.95,.02,0)
	;;=BASIC DEFAULT ENCOUNTER FORM^*P357'^IBE(357,^0;2^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.95,.02,1,0)
	;;=^.1
	;;^DD(409.95,.02,1,1,0)
	;;=409.95^C
	;;^DD(409.95,.02,1,1,1)
	;;=S ^SD(409.95,"C",$E(X,1,30),DA)=""
	;;^DD(409.95,.02,1,1,2)
	;;=K ^SD(409.95,"C",$E(X,1,30),DA)
	;;^DD(409.95,.02,1,1,"DT")
	;;=2930209
	;;^DD(409.95,.02,3)
	;;=What form will be the default form printed with patient data for a patient with an appointment?
	;;^DD(409.95,.02,12)
	;;=Does not allow tool kit forms or forms of type other than encounter forms.
	;;^DD(409.95,.02,12.1)
	;;=S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
	;;^DD(409.95,.02,21,0)
	;;=^^2^2^2930806^^^
	;;^DD(409.95,.02,21,1,0)
	;;= 
	;;^DD(409.95,.02,21,2,0)
	;;=The encounter form that will be printed for every appointment.
	;;^DD(409.95,.02,"DT")
	;;=2930806
	;;^DD(409.95,.03,0)
	;;=SUPPLMNTL FORM - ESTBLSHED PT.^*P357'^IBE(357,^0;3^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.95,.03,1,0)
	;;=^.1
	;;^DD(409.95,.03,1,1,0)
	;;=409.95^D
	;;^DD(409.95,.03,1,1,1)
	;;=S ^SD(409.95,"D",$E(X,1,30),DA)=""
	;;^DD(409.95,.03,1,1,2)
	;;=K ^SD(409.95,"D",$E(X,1,30),DA)
	;;^DD(409.95,.03,1,1,"DT")
	;;=2930209
	;;^DD(409.95,.03,3)
	;;=What supplemental form should be printed for patients that have been seen before?
	;;^DD(409.95,.03,12)
	;;=Does not allow tool kit forms or forms that are not of type encounter form.
	;;^DD(409.95,.03,12.1)
	;;=S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
	;;^DD(409.95,.03,21,0)
	;;=^^3^3^2930818^^^
	;;^DD(409.95,.03,21,1,0)
	;;= 
	;;^DD(409.95,.03,21,2,0)
	;;=This is a supplemental form that will print only for patients that have
	;;^DD(409.95,.03,21,3,0)
	;;=been seen in the clinic previously.
	;;^DD(409.95,.03,"DT")
	;;=2930818
	;;^DD(409.95,.04,0)
	;;=SUPPLMNTL FORM - FIRST VISIT^*P357'^IBE(357,^0;4^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.95,.04,1,0)
	;;=^.1
	;;^DD(409.95,.04,1,1,0)
	;;=409.95^E
	;;^DD(409.95,.04,1,1,1)
	;;=S ^SD(409.95,"E",$E(X,1,30),DA)=""

IBDIN03R
IBDIN03R	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(409.95)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(409.95,.04,1,1,2)
	;;=K ^SD(409.95,"E",$E(X,1,30),DA)
	;;^DD(409.95,.04,1,1,"DT")
	;;=2930209
	;;^DD(409.95,.04,3)
	;;=What supplemental form should be printed for first time patients?
	;;^DD(409.95,.04,12)
	;;=Does not allow tool kit forms or forms that are not of type encounter form.
	;;^DD(409.95,.04,12.1)
	;;=S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
	;;^DD(409.95,.04,21,0)
	;;=^^3^3^2940216^
	;;^DD(409.95,.04,21,1,0)
	;;= 
	;;^DD(409.95,.04,21,2,0)
	;;=This is a supplemental for that will print only for patients that have
	;;^DD(409.95,.04,21,3,0)
	;;=not been seen previously at the clinic.
	;;^DD(409.95,.04,"DT")
	;;=2930806
	;;^DD(409.95,.05,0)
	;;=FORM W/O PATIENT DATA^*P357'^IBE(357,^0;5^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.95,.05,.1)
	;;=FORM TO PRINT WITH NO PATIENT DATA
	;;^DD(409.95,.05,1,0)
	;;=^.1
	;;^DD(409.95,.05,1,1,0)
	;;=409.95^F
	;;^DD(409.95,.05,1,1,1)
	;;=S ^SD(409.95,"F",$E(X,1,30),DA)=""
	;;^DD(409.95,.05,1,1,2)
	;;=K ^SD(409.95,"F",$E(X,1,30),DA)
	;;^DD(409.95,.05,1,1,"DT")
	;;=2930209
	;;^DD(409.95,.05,3)
	;;=Enter the form that should print in cases where you do not want patient data printed on the form.
	;;^DD(409.95,.05,12)
	;;=Does not allow tool kit forms or forms that are not of type encounter form.
	;;^DD(409.95,.05,12.1)
	;;=S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
	;;^DD(409.95,.05,21,0)
	;;=^^4^4^2940216^^^^
	;;^DD(409.95,.05,21,1,0)
	;;= 
	;;^DD(409.95,.05,21,2,0)
	;;=This is the encounter form that should be printed for unscheduled visits.
	;;^DD(409.95,.05,21,3,0)
	;;=It may have a space in the top left hand corner for imprinting the
	;;^DD(409.95,.05,21,4,0)
	;;=embossed patient card or space to write in the name, ssn, etc.
	;;^DD(409.95,.05,"DT")
	;;=2930910
	;;^DD(409.95,.06,0)
	;;=SUPPLMNTL FORM #1 ALL PATIENTS^*P357'^IBE(357,^0;6^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.95,.06,1,0)
	;;=^.1
	;;^DD(409.95,.06,1,1,0)
	;;=409.95^G
	;;^DD(409.95,.06,1,1,1)
	;;=S ^SD(409.95,"G",$E(X,1,30),DA)=""
	;;^DD(409.95,.06,1,1,2)
	;;=K ^SD(409.95,"G",$E(X,1,30),DA)
	;;^DD(409.95,.06,1,1,"%D",0)
	;;=^^1^1^2930719^
	;;^DD(409.95,.06,1,1,"%D",1,0)
	;;=Used to find all clinics using this form as a supplemental form for all patients.
	;;^DD(409.95,.06,1,1,"DT")
	;;=2930719
	;;^DD(409.95,.06,3)
	;;=You may require a supplemental form to be used for all appointments for this clinic.
	;;^DD(409.95,.06,12)
	;;=Does not allow tool kit forms or forms that are not of type encounter form.
	;;^DD(409.95,.06,12.1)
	;;=S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
	;;^DD(409.95,.06,21,0)
	;;=^^4^4^2940216^^
	;;^DD(409.95,.06,21,1,0)
	;;= 
	;;^DD(409.95,.06,21,2,0)
	;;=This is a supplemental form to be used by all patients of the clinic. A
	;;^DD(409.95,.06,21,3,0)
	;;=form in this category should not also be in one of the other categories
	;;^DD(409.95,.06,21,4,0)
	;;=for supplemental forms, else it will be printed twice.
	;;^DD(409.95,.06,"DT")
	;;=2941207
	;;^DD(409.95,.07,0)
	;;=RESERVED FOR FUTURE USE^*P357'^IBE(357,^0;7^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.95,.07,1,0)
	;;=^.1
	;;^DD(409.95,.07,1,1,0)
	;;=409.95^H
	;;^DD(409.95,.07,1,1,1)
	;;=S ^SD(409.95,"H",$E(X,1,30),DA)=""
	;;^DD(409.95,.07,1,1,2)
	;;=K ^SD(409.95,"H",$E(X,1,30),DA)
	;;^DD(409.95,.07,1,1,"%D",0)
	;;=^^1^1^2930729^
	;;^DD(409.95,.07,1,1,"%D",1,0)
	;;=Used to track forms assigned to a clinic but not in current use.
	;;^DD(409.95,.07,1,1,"DT")
	;;=2930729
	;;^DD(409.95,.07,3)
	;;=Assign a form to this category if you don't want it to print for appointments.
	;;^DD(409.95,.07,12)
	;;=Does not allow tool kit forms or forms that are not of type encounter form.
	;;^DD(409.95,.07,12.1)
	;;=S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
	;;^DD(409.95,.07,21,0)
	;;=^^2^2^2940524^^
	;;^DD(409.95,.07,21,1,0)
	;;=This category was created for clinics to assign new forms that are not yet
	;;^DD(409.95,.07,21,2,0)
	;;=complete without fear that they would be accidently printed.
	;;^DD(409.95,.07,"DT")
	;;=2940524
	;;^DD(409.95,.08,0)
	;;=SUPPLMNTL FORM #2 ALL PATIENTS^*P357'^IBE(357,^0;8^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.95,.08,1,0)
	;;=^.1
	;;^DD(409.95,.08,1,1,0)
	;;=409.95^I
	;;^DD(409.95,.08,1,1,1)
	;;=S ^SD(409.95,"I",$E(X,1,30),DA)=""
	;;^DD(409.95,.08,1,1,2)
	;;=K ^SD(409.95,"I",$E(X,1,30),DA)
	;;^DD(409.95,.08,1,1,"%D",0)
	;;=^^2^2^2941207^

IBDIN03S
IBDIN03S	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(409.95)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(409.95,.08,1,1,"%D",1,0)
	;;=Used to find all clinics using this form as a suplemental form for all
	;;^DD(409.95,.08,1,1,"%D",2,0)
	;;=patients.
	;;^DD(409.95,.08,1,1,"DT")
	;;=2941207
	;;^DD(409.95,.08,3)
	;;=You can require this supplmental form to be used for all appointments for this clinic.
	;;^DD(409.95,.08,12)
	;;=Does not allow toolkit forms or forms that are not of type encoutner form.
	;;^DD(409.95,.08,12.1)
	;;=S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
	;;^DD(409.95,.08,"DT")
	;;=2941207
	;;^DD(409.95,.09,0)
	;;=SUPPLMNTL FORM #3 ALL PATIENTS^*P357'^IBE(357,^0;9^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.95,.09,1,0)
	;;=^.1
	;;^DD(409.95,.09,1,1,0)
	;;=409.95^J
	;;^DD(409.95,.09,1,1,1)
	;;=S ^SD(409.95,"J",$E(X,1,30),DA)=""
	;;^DD(409.95,.09,1,1,2)
	;;=K ^SD(409.95,"J",$E(X,1,30),DA)
	;;^DD(409.95,.09,1,1,"%D",0)
	;;=^^2^2^2941207^
	;;^DD(409.95,.09,1,1,"%D",1,0)
	;;=Used to find all clinics using this form as a supplemental form for all
	;;^DD(409.95,.09,1,1,"%D",2,0)
	;;=patients.
	;;^DD(409.95,.09,1,1,"DT")
	;;=2941207
	;;^DD(409.95,.09,3)
	;;=You can require this supplemental for to be used for all appointments for this clinic.
	;;^DD(409.95,.09,12)
	;;=Does not allow toolkit forms or forms that are not of type encounter form.
	;;^DD(409.95,.09,12.1)
	;;=S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U4)'>1"
	;;^DD(409.95,.09,"DT")
	;;=2941207
	;;^DD(409.95,1,0)
	;;=REPORT^409.9501IP^^1;0
	;;^DD(409.95,1,12)
	;;=Allows only package interfaces that print reports or other forms and that are available.
	;;^DD(409.95,1,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
	;;^DD(409.95,1,21,0)
	;;=^^4^4^2940628^^^^
	;;^DD(409.95,1,21,1,0)
	;;= 
	;;^DD(409.95,1,21,2,0)
	;;=This is a list of reports or forms that should be printed under certain
	;;^DD(409.95,1,21,3,0)
	;;=circumstances. The only types of forms or reports that can be printed are
	;;^DD(409.95,1,21,4,0)
	;;=ones that are defined in the Package Interface file.
	;;^DD(409.95,1,"DT")
	;;=2930520
	;;^DD(409.95,2,0)
	;;=EXCLUDED REPORT^409.9502P^^2;0
	;;^DD(409.95,2,12)
	;;=Allows only available package interfaces that print reports.
	;;^DD(409.95,2,12.1)
	;;=S DIC("S")="I $P($G(^(0)),U,6)=4,$P($G(^(0)),U,9)=1"
	;;^DD(409.95,2,21,0)
	;;=^^3^3^2940216^^^^
	;;^DD(409.95,2,21,1,0)
	;;=Used to override reports defined to print for the division. 
	;;^DD(409.95,2,21,2,0)
	;;=Reports defined to print for the division will not print if they are
	;;^DD(409.95,2,21,3,0)
	;;=excluded for the clinic.
	;;^DD(409.9501,0)
	;;=REPORT SUB-FIELD^^.03^3
	;;^DD(409.9501,0,"DT")
	;;=2940627
	;;^DD(409.9501,0,"IX","B",409.9501,.01)
	;;=
	;;^DD(409.9501,0,"NM","REPORT")
	;;=
	;;^DD(409.9501,0,"UP")
	;;=409.95
	;;^DD(409.9501,.01,0)
	;;=REPORT^M*P357.6'^IBE(357.6,^0;1^S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.9501,.01,1,0)
	;;=^.1
	;;^DD(409.9501,.01,1,1,0)
	;;=409.9501^B
	;;^DD(409.9501,.01,1,1,1)
	;;=S ^SD(409.95,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(409.9501,.01,1,1,2)
	;;=K ^SD(409.95,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(409.9501,.01,1,2,0)
	;;=409.95^A^MUMPS
	;;^DD(409.9501,.01,1,2,1)
	;;=I $P(^SD(409.95,DA(1),1,DA,0),U,2) S ^SD(409.95,"A",$P(^SD(409.95,DA(1),0),U),$P(^SD(409.95,DA(1),1,DA,0),U,2),X,DA(1),DA)=""
	;;^DD(409.9501,.01,1,2,2)
	;;=I $P(^SD(409.95,DA(1),1,DA,0),U,2) K ^SD(409.95,"A",$P(^SD(409.95,DA(1),0),U),$P(^SD(409.95,DA(1),1,DA,0),U,2),X,DA(1),DA)
	;;^DD(409.9501,.01,1,2,"%D",0)
	;;=^^6^6^2940216^
	;;^DD(409.9501,.01,1,2,"%D",1,0)
	;;= 
	;;^DD(409.9501,.01,1,2,"%D",2,0)
	;;=Allows all of the reports that should print under certain conditons for the
	;;^DD(409.9501,.01,1,2,"%D",3,0)
	;;=clinic to be found. The subscripts are ^SD(409.95,"A",<clinic ien>,<print
	;;^DD(409.9501,.01,1,2,"%D",4,0)
	;;=condition ien >, <package interface ien>, <clinic setup ien>, <report
	;;^DD(409.9501,.01,1,2,"%D",5,0)
	;;=multiple ien>). It is not necessary to re-index the A1 cross-reference on
	;;^DD(409.9501,.01,1,2,"%D",6,0)
	;;=the PRINT CONDITION field if this field is re-indexed.
	;;^DD(409.9501,.01,1,2,"DT")
	;;=2930518
	;;^DD(409.9501,.01,3)
	;;=You can choose reports and other forms to print under conditions that you specify.
	;;^DD(409.9501,.01,12)
	;;=Allows only reports installed in the Package Interface file.
	;;^DD(409.9501,.01,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
	;;^DD(409.9501,.01,21,0)
	;;=^^4^4^2940216^
	;;^DD(409.9501,.01,21,1,0)
	;;= 
	;;^DD(409.9501,.01,21,2,0)
	;;= 
	;;^DD(409.9501,.01,21,3,0)
	;;=An entry in the Package Interface file that should identify a routine that

IBDIN03T
IBDIN03T	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(409.95)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(409.9501,.01,21,4,0)
	;;=prints the desired form or report.
	;;^DD(409.9501,.01,"DT")
	;;=2930520
	;;^DD(409.9501,.02,0)
	;;=PRINT CONDITION^RP357.92'^IBE(357.92,^0;2^Q
	;;^DD(409.9501,.02,1,0)
	;;=^.1
	;;^DD(409.9501,.02,1,1,0)
	;;=409.95^A1^MUMPS
	;;^DD(409.9501,.02,1,1,1)
	;;=S ^SD(409.95,"A",$P(^SD(409.95,DA(1),0),U),X,$P(^SD(409.95,DA(1),1,DA,0),U),DA(1),DA)=""
	;;^DD(409.9501,.02,1,1,2)
	;;=K ^SD(409.95,"A",$P(^SD(409.95,DA(1),0),U),X,$P(^SD(409.95,DA(1),1,DA,0),U),DA(1),DA)
	;;^DD(409.9501,.02,1,1,"%D",0)
	;;=^^7^7^2940216^
	;;^DD(409.9501,.02,1,1,"%D",1,0)
	;;= 
	;;^DD(409.9501,.02,1,1,"%D",2,0)
	;;= 
	;;^DD(409.9501,.02,1,1,"%D",3,0)
	;;=Allows all of the reports that should print under certain conditons for
	;;^DD(409.9501,.02,1,1,"%D",4,0)
	;;=the clinic to be found. The subscripts are ^SD(409.95,"A",<clinic
	;;^DD(409.9501,.02,1,1,"%D",5,0)
	;;=ien>,<print condition ien >, <package interface ien>, <clinic setup ien>,
	;;^DD(409.9501,.02,1,1,"%D",6,0)
	;;=<report multiple ien>). It is not necessary to re-index the A
	;;^DD(409.9501,.02,1,1,"%D",7,0)
	;;=cross-reference on the REPORT field if this field is re-indexed.
	;;^DD(409.9501,.02,1,1,"DT")
	;;=2930518
	;;^DD(409.9501,.02,3)
	;;=Under what condition should the report be printed?
	;;^DD(409.9501,.02,4)
	;;=D HELP6^IBDFU5A
	;;^DD(409.9501,.02,21,0)
	;;=^^2^2^2930528^
	;;^DD(409.9501,.02,21,1,0)
	;;= 
	;;^DD(409.9501,.02,21,2,0)
	;;=The particular condition under which the form or report should print.
	;;^DD(409.9501,.02,"DT")
	;;=2930518
	;;^DD(409.9501,.03,0)
	;;=SIMPLEX/DUPLEX^S^0:SIMPLEX;1:DUPLEX,LONG-EDGE BINDING;2:DUPLEX,SHORT-EDGE BINDING;^0;3^Q
	;;^DD(409.9501,.03,3)
	;;=SIMPLEX means one-sided, DUPLEX means two-sided. SHORT-EDGE BINDING is for attaching forms by the top, LONG-EDGE BINDING is for attaching forms along the side.
	;;^DD(409.9501,.03,21,0)
	;;=^^1^1^2940628^
	;;^DD(409.9501,.03,21,1,0)
	;;=Allows reports to be printed one-sided or two-sided.
	;;^DD(409.9501,.03,"DT")
	;;=2940627
	;;^DD(409.9502,0)
	;;=EXCLUDED REPORT SUB-FIELD^^.01^1
	;;^DD(409.9502,0,"IX","B",409.9502,.01)
	;;=
	;;^DD(409.9502,0,"NM","EXCLUDED REPORT")
	;;=
	;;^DD(409.9502,0,"UP")
	;;=409.95
	;;^DD(409.9502,.01,0)
	;;=EXCLUDED REPORT^M*P357.6'^IBE(357.6,^0;1^S DIC("S")="I $P($G(^(0)),U,6)=4,$P($G(^(0)),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.9502,.01,.1)
	;;=
	;;^DD(409.9502,.01,1,0)
	;;=^.1
	;;^DD(409.9502,.01,1,1,0)
	;;=409.9502^B
	;;^DD(409.9502,.01,1,1,1)
	;;=S ^SD(409.95,DA(1),2,"B",$E(X,1,30),DA)=""
	;;^DD(409.9502,.01,1,1,2)
	;;=K ^SD(409.95,DA(1),2,"B",$E(X,1,30),DA)
	;;^DD(409.9502,.01,1,2,0)
	;;=409.95^AE^MUMPS
	;;^DD(409.9502,.01,1,2,1)
	;;=S ^SD(409.95,"AE",$P(^SD(409.95,DA(1),0),U),X,DA(1),DA)=""
	;;^DD(409.9502,.01,1,2,2)
	;;=K ^SD(409.95,"AE",$P(^SD(409.95,DA(1),0),U),X,DA(1),DA)
	;;^DD(409.9502,.01,1,2,"%D",0)
	;;=^^1^1^2930622^
	;;^DD(409.9502,.01,1,2,"%D",1,0)
	;;=Used to determine if a particular report is defined NOT to print for a clinic.
	;;^DD(409.9502,.01,1,2,"DT")
	;;=2930622
	;;^DD(409.9502,.01,3)
	;;=You may enter reports that you DO NOT want to print for this clinic. Entering an EXCLUDED REPORT will prevent it from printing even if it is defined to print for the entire division.
	;;^DD(409.9502,.01,12)
	;;=Allows only available package interfaces that print reports.
	;;^DD(409.9502,.01,12.1)
	;;=S DIC("S")="I $P($G(^(0)),U,6)=4,$P($G(^(0)),U,9)=1"
	;;^DD(409.9502,.01,21,0)
	;;=^^3^3^2940216^
	;;^DD(409.9502,.01,21,1,0)
	;;=Used to override repots defined to print for the division. Reports
	;;^DD(409.9502,.01,21,2,0)
	;;=defined to print for the division will not print if they are excluded
	;;^DD(409.9502,.01,21,3,0)
	;;=for the clinic.
	;;^DD(409.9502,.01,"DT")
	;;=2930623

IBDIN03U
IBDIN03U	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(409.96)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(409.96,0,"GL")
	;;=^SD(409.96,
	;;^DIC("B","PRINT MANAGER DIVISION SETUP",409.96)
	;;=
	;;^DIC(409.96,"%D",0)
	;;=^^7^7^2940804^^^^
	;;^DIC(409.96,"%D",1,0)
	;;= 
	;;^DIC(409.96,"%D",2,0)
	;;= 
	;;^DIC(409.96,"%D",3,0)
	;;=This file allows the user to specify reports or forms that should print in
	;;^DIC(409.96,"%D",4,0)
	;;=addition to the encounter forms for the entire division . Only reports
	;;^DIC(409.96,"%D",5,0)
	;;=contained in the Package Interface file can be specified. The user can
	;;^DIC(409.96,"%D",6,0)
	;;=also specify the conditions under which the report should print. The
	;;^DIC(409.96,"%D",7,0)
	;;=intent is to print packets of forms that do not require manual collation.
	;;^DD(409.96,0)
	;;=FIELD^^1^2
	;;^DD(409.96,0,"DDA")
	;;=N
	;;^DD(409.96,0,"DT")
	;;=2940627
	;;^DD(409.96,0,"IX","A",409.961,.01)
	;;=
	;;^DD(409.96,0,"IX","A1",409.961,.02)
	;;=
	;;^DD(409.96,0,"IX","B",409.96,.01)
	;;=
	;;^DD(409.96,0,"NM","PRINT MANAGER DIVISION SETUP")
	;;=
	;;^DD(409.96,.01,0)
	;;=DIVISION^RP40.8'^DG(40.8,^0;1^Q
	;;^DD(409.96,.01,1,0)
	;;=^.1
	;;^DD(409.96,.01,1,1,0)
	;;=409.96^B
	;;^DD(409.96,.01,1,1,1)
	;;=S ^SD(409.96,"B",$E(X,1,30),DA)=""
	;;^DD(409.96,.01,1,1,2)
	;;=K ^SD(409.96,"B",$E(X,1,30),DA)
	;;^DD(409.96,.01,3)
	;;=Enter the division for which you want to specify forms.
	;;^DD(409.96,.01,21,0)
	;;=^^2^2^2930623^^^^
	;;^DD(409.96,.01,21,1,0)
	;;= 
	;;^DD(409.96,.01,21,2,0)
	;;=The division the setup is for.
	;;^DD(409.96,.01,"DT")
	;;=2930518
	;;^DD(409.96,1,0)
	;;=REPORT^409.961IP^^1;0
	;;^DD(409.96,1,12)
	;;=Allows only package interfaces that print reports and that are available.
	;;^DD(409.96,1,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
	;;^DD(409.96,1,21,0)
	;;=^^2^2^2940628^^^^
	;;^DD(409.96,1,21,1,0)
	;;= 
	;;^DD(409.96,1,21,2,0)
	;;=The reports that should print.
	;;^DD(409.96,1,"DT")
	;;=2930520
	;;^DD(409.961,0)
	;;=REPORT SUB-FIELD^^.03^3
	;;^DD(409.961,0,"DT")
	;;=2940627
	;;^DD(409.961,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(357.92,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(357.92,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(409.961,0,"IX","B",409.961,.01)
	;;=
	;;^DD(409.961,0,"NM","REPORT")
	;;=
	;;^DD(409.961,0,"UP")
	;;=409.96
	;;^DD(409.961,.01,0)
	;;=REPORT^M*P357.6'^IBE(357.6,^0;1^S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.961,.01,1,0)
	;;=^.1
	;;^DD(409.961,.01,1,1,0)
	;;=409.961^B
	;;^DD(409.961,.01,1,1,1)
	;;=S ^SD(409.96,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(409.961,.01,1,1,2)
	;;=K ^SD(409.96,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(409.961,.01,1,2,0)
	;;=409.96^A^MUMPS
	;;^DD(409.961,.01,1,2,1)
	;;=I $P(^SD(409.96,DA(1),1,DA,0),U,2) S ^SD(409.96,"A",$P(^SD(409.96,DA(1),0),U),$P(^SD(409.96,DA(1),1,DA,0),U,2),X,DA(1),DA)=""
	;;^DD(409.961,.01,1,2,2)
	;;=I $P(^SD(409.96,DA(1),1,DA,0),U,2) K ^SD(409.96,"A",$P(^SD(409.96,DA(1),0),U),$P(^SD(409.96,DA(1),1,DA,0),U,2),X,DA(1),DA)
	;;^DD(409.961,.01,1,2,"%D",0)
	;;=^^7^7^2940216^
	;;^DD(409.961,.01,1,2,"%D",1,0)
	;;= 
	;;^DD(409.961,.01,1,2,"%D",2,0)
	;;= 
	;;^DD(409.961,.01,1,2,"%D",3,0)
	;;=Allows all of the reports that should print under certain conditons for
	;;^DD(409.961,.01,1,2,"%D",4,0)
	;;=the division to be found. The subscripts are ^SD(409.96,"A",<division
	;;^DD(409.961,.01,1,2,"%D",5,0)
	;;=ien>,<print condition ien >, <package interface ien>, <division setup
	;;^DD(409.961,.01,1,2,"%D",6,0)
	;;=ien>, <report multiple ien>). It is not necessary to re-index the A1
	;;^DD(409.961,.01,1,2,"%D",7,0)
	;;=cross-reference on the PRINT CONDITION field if this field is re-indexed.
	;;^DD(409.961,.01,1,2,"DT")
	;;=2930518
	;;^DD(409.961,.01,3)
	;;=Enter the report or form that you want to print for the entire division.
	;;^DD(409.961,.01,12)
	;;=Allows only reports installed in the Package Interface file.
	;;^DD(409.961,.01,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
	;;^DD(409.961,.01,21,0)
	;;=^^3^3^2930528^
	;;^DD(409.961,.01,21,1,0)
	;;= 
	;;^DD(409.961,.01,21,2,0)
	;;=A report that should print. Only reports contained in the Package
	;;^DD(409.961,.01,21,3,0)
	;;=Interface file can be printed by the print manager.
	;;^DD(409.961,.01,"DT")
	;;=2930520
	;;^DD(409.961,.02,0)
	;;=PRINT CONDITION^RP357.92'^IBE(357.92,^0;2^Q
	;;^DD(409.961,.02,1,0)
	;;=^.1
	;;^DD(409.961,.02,1,1,0)
	;;=409.96^A1^MUMPS
	;;^DD(409.961,.02,1,1,1)
	;;=S ^SD(409.96,"A",$P(^SD(409.96,DA(1),0),U),X,$P(^SD(409.96,DA(1),1,DA,0),U),DA(1),DA)=""
	;;^DD(409.961,.02,1,1,2)
	;;=K ^SD(409.96,"A",$P(^SD(409.96,DA(1),0),U),X,$P(^SD(409.96,DA(1),1,DA,0),U),DA(1),DA)

IBDIN03V
IBDIN03V	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(409.96)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(409.961,.02,1,1,"%D",0)
	;;=^^6^6^2940216^
	;;^DD(409.961,.02,1,1,"%D",1,0)
	;;= 
	;;^DD(409.961,.02,1,1,"%D",2,0)
	;;=Allows all of the reports that should print under certain conditons for
	;;^DD(409.961,.02,1,1,"%D",3,0)
	;;=the division to be found. The subscripts are ^SD(409.96,"A",<division
	;;^DD(409.961,.02,1,1,"%D",4,0)
	;;=ien>,<print condition ien >, <package interface ien>, <division setup
	;;^DD(409.961,.02,1,1,"%D",5,0)
	;;=ien>, <report multiple ien>). It is not necessary to re-index the A
	;;^DD(409.961,.02,1,1,"%D",6,0)
	;;=cross-reference on the REPORT field if this field is re-indexed.
	;;^DD(409.961,.02,1,1,"DT")
	;;=2930518
	;;^DD(409.961,.02,3)
	;;=Under what condition do you want the report to print?
	;;^DD(409.961,.02,4)
	;;=D HELP6^IBDFU5A
	;;^DD(409.961,.02,21,0)
	;;=^^2^2^2930528^
	;;^DD(409.961,.02,21,1,0)
	;;= 
	;;^DD(409.961,.02,21,2,0)
	;;=The condition under which the report should print.
	;;^DD(409.961,.02,"DT")
	;;=2930518
	;;^DD(409.961,.03,0)
	;;=SIMPLEX/DUPLEX^S^0:SIMPLEX;1:DUPLEX,LONG-EDGE BINDING;2:DUPLEX,SHORT-EDGE BINDING;^0;3^Q
	;;^DD(409.961,.03,3)
	;;=SIMPLEX means one-sided, DUPLEX means two-sided. SHORT-EDGE BINDING is for attaching forms by the top, LONG-EDGE BINDING is for attaching forms along the side.
	;;^DD(409.961,.03,21,0)
	;;=^^1^1^2940628^
	;;^DD(409.961,.03,21,1,0)
	;;=Allows reports to be printed one-sided or two-sided.
	;;^DD(409.961,.03,"DT")
	;;=2940627

IBDIN03W
IBDIN03W	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	I DSEC F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(43,0,"DD")
	;;=#
	;;^DIC(43,0,"DEL")
	;;=d
	;;^DIC(43,0,"LAYGO")
	;;=d
	;;^DIC(43,0,"RD")
	;;=D
	;;^DIC(43,0,"WR")
	;;=d
	;;^DIC(357,0,"AUDIT")
	;;=@
	;;^DIC(357,0,"DD")
	;;=@
	;;^DIC(357,0,"DEL")
	;;=@
	;;^DIC(357,0,"LAYGO")
	;;=@
	;;^DIC(357,0,"RD")
	;;=@
	;;^DIC(357,0,"WR")
	;;=@
	;;^DIC(357.08,0,"AUDIT")
	;;=@
	;;^DIC(357.08,0,"DD")
	;;=@
	;;^DIC(357.08,0,"DEL")
	;;=@
	;;^DIC(357.08,0,"LAYGO")
	;;=@
	;;^DIC(357.08,0,"WR")
	;;=@
	;;^DIC(357.09,0,"AUDIT")
	;;=@
	;;^DIC(357.09,0,"DD")
	;;=@
	;;^DIC(357.09,0,"DEL")
	;;=@
	;;^DIC(357.09,0,"LAYGO")
	;;=@
	;;^DIC(357.1,0,"AUDIT")
	;;=@
	;;^DIC(357.1,0,"DD")
	;;=@
	;;^DIC(357.1,0,"DEL")
	;;=@
	;;^DIC(357.1,0,"LAYGO")
	;;=@
	;;^DIC(357.1,0,"RD")
	;;=@
	;;^DIC(357.1,0,"WR")
	;;=@
	;;^DIC(357.2,0,"AUDIT")
	;;=@
	;;^DIC(357.2,0,"DD")
	;;=@
	;;^DIC(357.2,0,"DEL")
	;;=@
	;;^DIC(357.2,0,"LAYGO")
	;;=@
	;;^DIC(357.2,0,"RD")
	;;=@
	;;^DIC(357.2,0,"WR")
	;;=@
	;;^DIC(357.3,0,"AUDIT")
	;;=@
	;;^DIC(357.3,0,"DD")
	;;=@
	;;^DIC(357.3,0,"DEL")
	;;=@
	;;^DIC(357.3,0,"LAYGO")
	;;=@
	;;^DIC(357.3,0,"RD")
	;;=@
	;;^DIC(357.3,0,"WR")
	;;=@
	;;^DIC(357.4,0,"AUDIT")
	;;=@
	;;^DIC(357.4,0,"DD")
	;;=@
	;;^DIC(357.4,0,"DEL")
	;;=@
	;;^DIC(357.4,0,"LAYGO")
	;;=@
	;;^DIC(357.4,0,"RD")
	;;=@
	;;^DIC(357.4,0,"WR")
	;;=@
	;;^DIC(357.5,0,"AUDIT")
	;;=@
	;;^DIC(357.5,0,"DD")
	;;=@
	;;^DIC(357.5,0,"DEL")
	;;=@
	;;^DIC(357.5,0,"LAYGO")
	;;=@
	;;^DIC(357.5,0,"RD")
	;;=@
	;;^DIC(357.5,0,"WR")
	;;=@
	;;^DIC(357.6,0,"AUDIT")
	;;=@
	;;^DIC(357.6,0,"DD")
	;;=@
	;;^DIC(357.6,0,"DEL")
	;;=@
	;;^DIC(357.6,0,"LAYGO")
	;;=@
	;;^DIC(357.6,0,"RD")
	;;=@
	;;^DIC(357.6,0,"WR")
	;;=@
	;;^DIC(357.69,0,"AUDIT")
	;;=@
	;;^DIC(357.69,0,"DD")
	;;=@
	;;^DIC(357.69,0,"DEL")
	;;=@
	;;^DIC(357.69,0,"LAYGO")
	;;=@
	;;^DIC(357.69,0,"RD")
	;;=@
	;;^DIC(357.69,0,"WR")
	;;=@
	;;^DIC(357.7,0,"AUDIT")
	;;=@
	;;^DIC(357.7,0,"DD")
	;;=@
	;;^DIC(357.7,0,"DEL")
	;;=@
	;;^DIC(357.7,0,"LAYGO")
	;;=@
	;;^DIC(357.7,0,"RD")
	;;=@
	;;^DIC(357.7,0,"WR")
	;;=@
	;;^DIC(357.8,0,"AUDIT")
	;;=@
	;;^DIC(357.8,0,"DD")
	;;=@
	;;^DIC(357.8,0,"DEL")
	;;=@
	;;^DIC(357.8,0,"LAYGO")
	;;=@
	;;^DIC(357.8,0,"RD")
	;;=@
	;;^DIC(357.8,0,"WR")
	;;=@
	;;^DIC(357.91,0,"AUDIT")
	;;=@
	;;^DIC(357.91,0,"DD")
	;;=@
	;;^DIC(357.91,0,"DEL")
	;;=@
	;;^DIC(357.91,0,"LAYGO")
	;;=@
	;;^DIC(357.91,0,"RD")
	;;=@
	;;^DIC(357.91,0,"WR")
	;;=@
	;;^DIC(357.92,0,"AUDIT")
	;;=@
	;;^DIC(357.92,0,"DD")
	;;=@
	;;^DIC(357.92,0,"DEL")
	;;=@
	;;^DIC(357.92,0,"LAYGO")
	;;=@
	;;^DIC(357.92,0,"RD")
	;;=@
	;;^DIC(357.92,0,"WR")
	;;=@
	;;^DIC(357.93,0,"AUDIT")
	;;=@
	;;^DIC(357.93,0,"DD")
	;;=@
	;;^DIC(357.93,0,"DEL")
	;;=@
	;;^DIC(357.93,0,"LAYGO")
	;;=@
	;;^DIC(357.93,0,"RD")
	;;=@
	;;^DIC(357.93,0,"WR")
	;;=@
	;;^DIC(357.94,0,"AUDIT")
	;;=@
	;;^DIC(357.94,0,"DD")
	;;=@
	;;^DIC(357.95,0,"AUDIT")
	;;=@
	;;^DIC(357.95,0,"DD")
	;;=@
	;;^DIC(357.95,0,"DEL")
	;;=@
	;;^DIC(357.95,0,"LAYGO")
	;;=@
	;;^DIC(357.95,0,"RD")
	;;=@
	;;^DIC(357.95,0,"WR")
	;;=@
	;;^DIC(357.96,0,"AUDIT")
	;;=@
	;;^DIC(357.96,0,"DD")
	;;=@
	;;^DIC(357.96,0,"DEL")
	;;=@
	;;^DIC(357.96,0,"LAYGO")
	;;=@
	;;^DIC(357.96,0,"RD")
	;;=@
	;;^DIC(357.96,0,"WR")
	;;=@
	;;^DIC(357.97,0,"AUDIT")
	;;=@
	;;^DIC(357.97,0,"DD")
	;;=@
	;;^DIC(357.97,0,"DEL")
	;;=@
	;;^DIC(357.97,0,"LAYGO")
	;;=@
	;;^DIC(357.97,0,"RD")
	;;=@
	;;^DIC(357.97,0,"WR")
	;;=@
	;;^DIC(357.98,0,"AUDIT")
	;;=@
	;;^DIC(357.98,0,"DD")
	;;=@
	;;^DIC(357.98,0,"DEL")
	;;=@
	;;^DIC(357.98,0,"LAYGO")
	;;=@
	;;^DIC(357.98,0,"RD")
	;;=@
	;;^DIC(357.98,0,"WR")
	;;=@
	;;^DIC(357.99,0,"AUDIT")
	;;=@
	;;^DIC(357.99,0,"DD")
	;;=@
	;;^DIC(357.99,0,"DEL")
	;;=@
	;;^DIC(357.99,0,"LAYGO")
	;;=@
	;;^DIC(357.99,0,"RD")
	;;=@
	;;^DIC(357.99,0,"WR")
	;;=@
	;;^DIC(358,0,"AUDIT")
	;;=@
	;;^DIC(358,0,"DD")
	;;=@
	;;^DIC(358,0,"DEL")
	;;=@
	;;^DIC(358,0,"LAYGO")
	;;=@
	;;^DIC(358,0,"RD")
	;;=@
	;;^DIC(358,0,"WR")
	;;=@
	;;^DIC(358.1,0,"AUDIT")
	;;=@
	;;^DIC(358.1,0,"DD")
	;;=@
	;;^DIC(358.1,0,"DEL")
	;;=@
	;;^DIC(358.1,0,"LAYGO")
	;;=@
	;;^DIC(358.1,0,"RD")
	;;=@
	;;^DIC(358.1,0,"WR")
	;;=@
	;;^DIC(358.2,0,"AUDIT")
	;;=@
	;;^DIC(358.2,0,"DD")
	;;=@
	;;^DIC(358.2,0,"DEL")
	;;=@
	;;^DIC(358.2,0,"LAYGO")
	;;=@
	;;^DIC(358.2,0,"RD")
	;;=@
	;;^DIC(358.2,0,"WR")
	;;=@
	;;^DIC(358.3,0,"AUDIT")
	;;=@
	;;^DIC(358.3,0,"DD")
	;;=@
	;;^DIC(358.3,0,"DEL")
	;;=@
	;;^DIC(358.3,0,"LAYGO")
	;;=@
	;;^DIC(358.3,0,"RD")
	;;=@
	;;^DIC(358.3,0,"WR")
	;;=@
	;;^DIC(358.4,0,"AUDIT")
	;;=@
	;;^DIC(358.4,0,"DD")
	;;=@
	;;^DIC(358.4,0,"DEL")
	;;=@
	;;^DIC(358.4,0,"LAYGO")
	;;=@
	;;^DIC(358.4,0,"RD")
	;;=@
	;;^DIC(358.4,0,"WR")
	;;=@
	;;^DIC(358.5,0,"AUDIT")
	;;=@
	;;^DIC(358.5,0,"DD")
	;;=@
	;;^DIC(358.5,0,"DEL")
	;;=@
	;;^DIC(358.5,0,"LAYGO")
	;;=@
	;;^DIC(358.5,0,"RD")
	;;=@
	;;^DIC(358.5,0,"WR")
	;;=@
	;;^DIC(358.6,0,"AUDIT")
	;;=@
	;;^DIC(358.6,0,"DD")
	;;=@
	;;^DIC(358.6,0,"DEL")
	;;=@

IBDIN03X
IBDIN03X	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	I DSEC F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.6,0,"LAYGO")
	;;=@
	;;^DIC(358.6,0,"RD")
	;;=@
	;;^DIC(358.6,0,"WR")
	;;=@
	;;^DIC(358.7,0,"AUDIT")
	;;=@
	;;^DIC(358.7,0,"DD")
	;;=@
	;;^DIC(358.7,0,"DEL")
	;;=@
	;;^DIC(358.7,0,"LAYGO")
	;;=@
	;;^DIC(358.7,0,"RD")
	;;=@
	;;^DIC(358.7,0,"WR")
	;;=@
	;;^DIC(358.8,0,"AUDIT")
	;;=@
	;;^DIC(358.8,0,"DD")
	;;=@
	;;^DIC(358.8,0,"DEL")
	;;=@
	;;^DIC(358.8,0,"LAYGO")
	;;=@
	;;^DIC(358.8,0,"RD")
	;;=@
	;;^DIC(358.8,0,"WR")
	;;=@
	;;^DIC(358.91,0,"AUDIT")
	;;=@
	;;^DIC(358.91,0,"DD")
	;;=@
	;;^DIC(358.91,0,"DEL")
	;;=@
	;;^DIC(358.91,0,"LAYGO")
	;;=@
	;;^DIC(358.91,0,"RD")
	;;=@
	;;^DIC(358.91,0,"WR")
	;;=@
	;;^DIC(358.93,0,"AUDIT")
	;;=@
	;;^DIC(358.93,0,"DD")
	;;=@
	;;^DIC(358.93,0,"DEL")
	;;=@
	;;^DIC(358.93,0,"LAYGO")
	;;=@
	;;^DIC(358.93,0,"RD")
	;;=@
	;;^DIC(358.93,0,"WR")
	;;=@
	;;^DIC(358.94,0,"AUDIT")
	;;=@
	;;^DIC(358.94,0,"DD")
	;;=@
	;;^DIC(358.94,0,"DEL")
	;;=@
	;;^DIC(358.94,0,"LAYGO")
	;;=@
	;;^DIC(358.94,0,"RD")
	;;=@
	;;^DIC(358.94,0,"WR")
	;;=@
	;;^DIC(358.98,0,"AUDIT")
	;;=@
	;;^DIC(358.98,0,"DD")
	;;=@
	;;^DIC(358.98,0,"DEL")
	;;=@
	;;^DIC(358.98,0,"LAYGO")
	;;=@
	;;^DIC(358.98,0,"RD")
	;;=@
	;;^DIC(358.98,0,"WR")
	;;=@
	;;^DIC(359,0,"AUDIT")
	;;=@
	;;^DIC(359,0,"DD")
	;;=@
	;;^DIC(359,0,"DEL")
	;;=@
	;;^DIC(359,0,"LAYGO")
	;;=@
	;;^DIC(359,0,"RD")
	;;=@
	;;^DIC(359,0,"WR")
	;;=@
	;;^DIC(359.1,0,"AUDIT")
	;;=@
	;;^DIC(359.1,0,"DD")
	;;=@
	;;^DIC(359.1,0,"DEL")
	;;=@
	;;^DIC(359.1,0,"LAYGO")
	;;=@
	;;^DIC(359.1,0,"RD")
	;;=@
	;;^DIC(359.1,0,"WR")
	;;=@
	;;^DIC(359.2,0,"AUDIT")
	;;=@
	;;^DIC(359.2,0,"DD")
	;;=@
	;;^DIC(359.2,0,"DEL")
	;;=@
	;;^DIC(359.2,0,"LAYGO")
	;;=@
	;;^DIC(359.2,0,"RD")
	;;=@
	;;^DIC(359.2,0,"WR")
	;;=@
	;;^DIC(359.94,0,"AUDIT")
	;;=@
	;;^DIC(359.94,0,"DD")
	;;=@
	;;^DIC(359.94,0,"DEL")
	;;=@
	;;^DIC(359.94,0,"LAYGO")
	;;=@
	;;^DIC(359.94,0,"RD")
	;;=@
	;;^DIC(359.94,0,"WR")
	;;=@
	;;^DIC(409.95,0,"AUDIT")
	;;=@
	;;^DIC(409.95,0,"DD")
	;;=@
	;;^DIC(409.95,0,"DEL")
	;;=@
	;;^DIC(409.95,0,"LAYGO")
	;;=@
	;;^DIC(409.95,0,"WR")
	;;=@
	;;^DIC(409.96,0,"AUDIT")
	;;=@
	;;^DIC(409.96,0,"DD")
	;;=@
	;;^DIC(409.96,0,"DEL")
	;;=@
	;;^DIC(409.96,0,"LAYGO")
	;;=@
	;;^DIC(409.96,0,"WR")
	;;=@

IBDIN03Y
IBDIN03Y	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1228,0)
	;;=IBDF POSITION COPIED BLOCK^2950224.0837^^357.1^11299^^2960227
	;;^UTILITY(U,$J,"DIE",1228,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1228,"%D",1,0)
	;;=Used to position a copied block onto a form.
	;;^UTILITY(U,$J,"DIE",1228,"DIAB",5,0,357.1,0)
	;;=.06;T;REQ
	;;^UTILITY(U,$J,"DIE",1228,"DIAB",7,0,357.1,0)
	;;=.07;T;REQ
	;;^UTILITY(U,$J,"DIE",1228,"DR",1,357.1)
	;;=.04;S IBY=X;.05;S IBX=X;.06R~T~;I (X+IBX)>$G(IBFORM("WIDTH")) W !,"WARNING!, The block extends past the right margin!";.07R~T~;I (X+IBY)>$G(IBFORM("HT")) W !,"WARNING!, The block extends past the bottom margin!";S IBDONE=1;
	;;^UTILITY(U,$J,"DIE",1229,0)
	;;=IBDF EDIT HEADER&OUTLINE^2930415.0801^^357.1^^^2960307^
	;;^UTILITY(U,$J,"DIE",1229,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1229,"%D",1,0)
	;;=Used to edit a block's header and outline.
	;;^UTILITY(U,$J,"DIE",1229,"DIAB",2,0,357.1,0)
	;;=.13;T
	;;^UTILITY(U,$J,"DIE",1229,"DIAB",3,0,357.1,0)
	;;=.11;T
	;;^UTILITY(U,$J,"DIE",1229,"DIAB",5,0,357.1,0)
	;;=.12;T
	;;^UTILITY(U,$J,"DIE",1229,"DIAB",7,0,357.1,0)
	;;=.1;T
	;;^UTILITY(U,$J,"DIE",1229,"DR",1,357.1)
	;;=.01////^S X=IBNAME;.13T~;.11T~;I $P(^IBE(357.1,D0,0),U,11)="" S Y="@1";.12T~;@1;.1T~;
	;;^UTILITY(U,$J,"DIE",1230,0)
	;;=IBDF EDIT DATA FIELD^2940527.101^^357.5^^^2960205^
	;;^UTILITY(U,$J,"DIE",1230,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1230,"%D",1,0)
	;;=Used to edit a data field.
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",1,0,357.5,1)
	;;=.1;T;REQ
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",1,1,357.52,1)
	;;=.09;"Select Subfield's Data"
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",2,0,357.5,1)
	;;=.12;T;REQ
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",3,0,357.5,1)
	;;=.13;T;REQ
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",4,0,357.5,1)
	;;=.14;T;REQ
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",4,1,357.52,0)
	;;=.03;T
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",9,0,357.5,0)
	;;=.05;T;REQ
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",10,0,357.5,0)
	;;=.04;T
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",13,0,357.5,0)
	;;=.06;T
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",15,0,357.5,0)
	;;=.07;T
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",17,0,357.5,0)
	;;=.11;T;REQ
	;;^UTILITY(U,$J,"DIE",1230,"DR",1,357.5)
	;;=.01;I IBOLD S Y="@1";.02////^S X=$G(IBBLK);.03////^S X=$G(IBRTN);D DATATYPE^IBDF9B(+$G(IBRTN));D RESET^VALM4:VALMCC,REFRESH^VALM;@1;I '$G(IBLIST) S Y="@2";.05R~T~;.04T~;@2;I '$G(IBWP) S Y="@5";.06T~;S:X="" Y="@4";.07T~;@4;.11R~T~;
	;;^UTILITY(U,$J,"DIE",1230,"DR",1,357.5,1)
	;;=.1R~T~;.12R~T~;.13R~T~;.14R~T~;S Y="@99";@5;D FULL^VALM1;D HELP3^IBDFU5;S (IBY,IBX)=1;2;@99;S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1230,"DR",2,357.52)
	;;=.01;S:X="" Y="@99" S IBW=$L(X);D RESET^VALM4:VALMCC,REFRESH^VALM;.03T~;I X["I" S Y="@7",IBW=0;.05//^S X=+IBY;S IBY=X+1;.04//^S X=+IBX;S IBX=X+2+IBW;@7;I $G(IBMF) S Y="@8";.09////^S X=1;S IBP=1;S Y="@9";@8;D HELP1^IBDFU5;
	;;^UTILITY(U,$J,"DIE",1230,"DR",2,357.52,1)
	;;=.09Select Subfield's Data~;I 'X S Y="@10";S IBP=X;@9;.08//^S X=$G(IBLEN(IBP));S IBW=+X;.06//^S X=+IBY;S IBY=X+1;.07//^S X=+IBX;S IBX=X+2+IBW;@10;D FULL^VALM1;D HELP3^IBDFU5;
	;;^UTILITY(U,$J,"DIE",1230,"ROU")
	;;=^IBDXI5
	;;^UTILITY(U,$J,"DIE",1230,"ROUOLD")
	;;=IBDXI5
	;;^UTILITY(U,$J,"DIE",1231,0)
	;;=IBDF EDIT FORM HEADER^2930730.1158^^357.5^^^2951025^
	;;^UTILITY(U,$J,"DIE",1231,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1231,"%D",1,0)
	;;=Used to edit the data field that is the form header.
	;;^UTILITY(U,$J,"DIE",1231,"DIAB",1,1,357.52,0)
	;;=.01;"HEADER LINE"
	;;^UTILITY(U,$J,"DIE",1231,"DIAB",2,1,357.52,0)
	;;=.03;"HOW SHOULD THE HEADER LINE APPEAR? CHOOSE FROM {B=bold,U=underline}"
	;;^UTILITY(U,$J,"DIE",1231,"DIAB",3,0,357.5,0)
	;;=2;"HEADER LINE"
	;;^UTILITY(U,$J,"DIE",1231,"DR",1,357.5)
	;;=W !!,"***** Each subfield entered here will be a header line *****",!;W "**** Lines will appear in the order entered ****",!;2HEADER LINE~;
	;;^UTILITY(U,$J,"DIE",1231,"DR",2,357.52)
	;;=.01HEADER LINE~;.03HOW SHOULD THE HEADER LINE APPEAR? CHOOSE FROM {B=bold,U=underline}~;
	;;^UTILITY(U,$J,"DIE",1232,0)
	;;=IBDF EDIT HEADER BLOCK^2950914.1133^^357.1^11299^^2951025
	;;^UTILITY(U,$J,"DIE",1232,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1232,"%D",1,0)
	;;=Used to edit the header block of a form.
	;;^UTILITY(U,$J,"DIE",1232,"DIAB",1,0,357.1,0)
	;;=.1//INVISIBLE;"HEADER BLOCK OUTLINE TYPE"
	;;^UTILITY(U,$J,"DIE",1232,"DIAB",5,0,357.1,0)
	;;=.04//2;"ROW TO BEGIN THE HEADER BLOCK AT"
	;;^UTILITY(U,$J,"DIE",1232,"DR",1,357.1)
	;;=.1HEADER BLOCK OUTLINE TYPE~//INVISIBLE;I X=1 S IBBOX=2;.06////^S X=+$G(MAXLEN)+IBBOX;.07////^S X=+$G(HDRLINES)+IBBOX;.04ROW TO BEGIN THE HEADER BLOCK AT~//2;.05//^S X=$$DFLTCOL^IBDF9C;S IBDELETE=0;

IBDIN03Z
IBDIN03Z	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1233,0)
	;;=IBDF FORM LINE^2950616.1517^^357.7^11299^^2960205
	;;^UTILITY(U,$J,"DIE",1233,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1233,"%D",1,0)
	;;=Used to edit a line.
	;;^UTILITY(U,$J,"DIE",1233,"DIAB",6,0,357.7,0)
	;;=.04;T
	;;^UTILITY(U,$J,"DIE",1233,"DR",1,357.7)
	;;=S IBDFDONE=0;.03;I (X<$$MINY^IBDFU1B)!(X>$$MAXY^IBDFU1B) D WARNING^IBDFU1B("line");.02;I (X<$$MINX^IBDFU1B)!(X>$$MAXX^IBDFU1B) D WARNING^IBDFU1B("line");.04T~;.05;I X>$$MAXLEN^IBDF9D D WARNING^IBDFU1B("line");
	;;^UTILITY(U,$J,"DIE",1233,"DR",1,357.7,1)
	;;=I $P($G(^IBE(357.7,IBLINE,0)),"^",4)'="H" S Y="@1";.07;I X<2 S Y="@1";.08;I $$TOOMANY^IBDF9D() D WARNING^IBDFU1B("line");@1;.01///^S X=$$NEWNAME^IBDF9D($G(IBLINE));.06////^S X=$G(IBBLK);S IBDFDONE=1;
	;;^UTILITY(U,$J,"DIE",1234,0)
	;;=IBDF NEW EMPTY BLOCK^2950417.1028^^357.1^11299^^2960212
	;;^UTILITY(U,$J,"DIE",1234,"%D",0)
	;;=^^2^2^2940308^
	;;^UTILITY(U,$J,"DIE",1234,"%D",1,0)
	;;=Used to edit the header, position, outline, and other characteristics of a
	;;^UTILITY(U,$J,"DIE",1234,"%D",2,0)
	;;=new block.
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",6,0,357.1,0)
	;;=.14;REQ
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",8,0,357.1,0)
	;;=.11;T
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",10,0,357.1,0)
	;;=.12//CR;T
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",12,0,357.1,0)
	;;=.1//SOLID LINE;T
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",14,0,357.1,0)
	;;=.04;T
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",15,0,357.1,0)
	;;=.05;T
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",17,0,357.1,0)
	;;=.06;T
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",18,0,357.1,0)
	;;=.07;T
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",19,0,357.1,0)
	;;=.13;T
	;;^UTILITY(U,$J,"DIE",1234,"DR",1,357.1)
	;;=S IBDFDONE=0;.01;.02////^S X=$G(IBFORM);S:'$G(IBTKBLK) Y="@1";.14///^S X=$$TKORDER^IBDF13();.14R~;@1;.11T~;I X="" S Y="@2";.12T~//CR;@2;.1T~//SOLID LINE;S:$G(IBTKBLK) Y="@3";.04T~;.05T~;@3;.06T~;.07T~;.13T~;S IBDFDONE=1;
	;;^UTILITY(U,$J,"DIE",1235,0)
	;;=IBDF EDIT TEXT AREA^2930730.1203^^357.8^^^2950620^
	;;^UTILITY(U,$J,"DIE",1235,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1235,"%D",1,0)
	;;=Used to edit a text area.
	;;^UTILITY(U,$J,"DIE",1235,"DR",1,357.8)
	;;=S IBDELETE=1;.01;.02////^S X=$G(IBBLK);.04;I (X<$$MINY^IBDFU1B)!(X>$$MAXY^IBDFU1B) D WARNING^IBDFU1B("text area");.03;I (X<$$MINX^IBDFU1B)!(X>$$MAXX^IBDFU1B) D WARNING^IBDFU1B("text area");.05;
	;;^UTILITY(U,$J,"DIE",1235,"DR",1,357.8,1)
	;;=I X>$$MAXW^IBDF9E D WARNING^IBDFU1B("text area");.06;I X>$$MAXHT^IBDF9E D WARNING^IBDFU1B("text area");D FULL^VALM1;1;D FORMAT^IBDF9E;S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1236,0)
	;;=IBDF EDIT SELECTION LIST^2950928.1133^^357.2^11299^^2960307
	;;^UTILITY(U,$J,"DIE",1236,"%D",0)
	;;=^^2^2^2940308^
	;;^UTILITY(U,$J,"DIE",1236,"%D",1,0)
	;;=Used to edit a selection list, except for the position and size of the
	;;^UTILITY(U,$J,"DIE",1236,"%D",2,0)
	;;=columns.
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",1,1,357.22,1)
	;;=.06//BUBBLE;T;REQ
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",2,0,357.2,1)
	;;=.09//CSU;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",2,0,357.2,2)
	;;=.17//NARRATIVE AND CODE;T;REQ
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",3,0,357.2,2)
	;;=.18//CODE ONLY;T;REQ
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",3,1,357.22,0)
	;;=.01;"SUBCOLUMN NUMBER"
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",4,0,357.2,1)
	;;=.08//0;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",4,1,357.22,2)
	;;=.02;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",5,0,357.2,1)
	;;=.12//NO;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",5,1,357.22,3)
	;;=.02;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",6,1,357.22,0)
	;;=.04//TEXT;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",10,0,357.2,0)
	;;=.15;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",10,1,357.22,2)
	;;=.05;"Select Subcolumn's Data";REQ
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",12,0,357.2,0)
	;;=.05;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",12,1,357.22,3)
	;;=.07;T;REQ
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",14,0,357.2,0)
	;;=.06;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",16,0,357.2,1)
	;;=.16//1;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",17,0,357.2,0)
	;;=.07//SPACE/LINE/SPACE;T
	;;^UTILITY(U,$J,"DIE",1236,"DR",1,357.2)
	;;=S IBDELETE=1;.01;I IBOLD S Y="@1";D FULL^VALM1;.02////^S X=$G(IBBLK);.11////^S X=$G(IBRTN);D DATASIZE^IBDF9A(+X),LISTTYPE^IBDF9A(+X);@1;S:'IBDYN Y="@5";.15T~;@5;.05T~;I X="" S Y="@2";.06T~;@2;.04;.07T~//SPACE/LINE/SPACE;
	;;^UTILITY(U,$J,"DIE",1236,"DR",1,357.2,1)
	;;=S:IBDYN Y="@4";.09T~//CSU;@4;.08T~//0;.12T~//NO;D MSG3^IBDF9A;D HELP4^IBDFU5;2;K ^DIE("NO^");I ('IBDYN)!(IBINPUT) S Y="@100";.13;D RESET^VALM4:VALMCC,REFRESH^VALM;1//1;@100;S:'$$OTHEROK^IBDF9A(IBRTN) Y="@101";.16T~//1;
	;;^UTILITY(U,$J,"DIE",1236,"DR",1,357.2,2)
	;;=S:X=0 Y="@101";.17R~T~//NARRATIVE AND CODE;.18R~T~//CODE ONLY;@101;S IBDELETE=0;

IBDIN040
IBDIN040	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1236,"DR",2,357.21)
	;;=.01;.02;.03//^S X=1+$S($G(IBBLK("BOX"))=1:1,1:0);.04;
	;;^UTILITY(U,$J,"DIE",1236,"DR",2,357.22)
	;;=S DIE("NO^")="BACK";S IBSC1=$P($G(^IBE(357.2,D0,2,D1,0)),U);.01SUBCOLUMN NUMBER~;S IBSC2=$P($G(^IBE(357.2,D0,2,D1,0)),U);S:(IBSC1'=IBSC2) IBSWITCH(+$G(IBSWITCH))=IBSC1_"^"_IBSC2,IBSWITCH=$G(IBSWITCH)+1;.04T~//TEXT;I X=1 S Y="@3";
	;;^UTILITY(U,$J,"DIE",1236,"DR",2,357.22,1)
	;;=.06R~T~//BUBBLE;I $P(^IBE(357.91,X,0),"^")'["BUBBLE" S Y="@6";.08////1;S Y="@7";@6;.08;@7;S:'$G(IBINPUT) Y="@8",IBD=0;.1;S:'$O(^IBE(357.6,IBINPUT,13,0)) Y="@8",IBD=0;.09;S IBD=+X;@8;I $P(^IBE(357.2,D0,2,D1,0),U,2)'="" S Y="@10";
	;;^UTILITY(U,$J,"DIE",1236,"DR",2,357.22,2)
	;;=.02///^S X=$S(IBD:$P($G(^IBD(357.98,IBD,0)),U,3),1:"");@10;S X=X;.02T~;I X'="" S Y="@99";.02////^S X=" ";S Y="@99";@3;D HELP2^IBDFU5;.05R~Select Subcolumn's Data~;S IBD=+X;.03//^S X=+$G(IBLEN(IBD));
	;;^UTILITY(U,$J,"DIE",1236,"DR",2,357.22,3)
	;;=I $P(^IBE(357.2,D0,2,D1,0),U,2)'="" S Y="@11";.02///^S X=$P($G(IBLEN(IBD)),U,2);@11;S X=X;.02T~;I X'="" S Y="@9";.02////^S X=" ";@9;I IBD<2 S Y="@99";I IBDYN S Y="@99";S:IBDYN Y="@99";.07R~T~;@99;D HELP4^IBDFU5;
	;;^UTILITY(U,$J,"DIE",1236,"ROU")
	;;=^IBDXI2
	;;^UTILITY(U,$J,"DIE",1236,"ROUOLD")
	;;=IBDXI2
	;;^UTILITY(U,$J,"DIE",1237,0)
	;;=IBDF EDIT SELECTION^2950127.1445^^357.3^0^^2951207
	;;^UTILITY(U,$J,"DIE",1237,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1237,"%D",1,0)
	;;=Used to edit a selection.
	;;^UTILITY(U,$J,"DIE",1237,"DR",1,357.3)
	;;=.05;1;
	;;^UTILITY(U,$J,"DIE",1237,"DR",2,357.31)
	;;=I '$G(IBDFEDIT(+$G(^IBE(357.3,D0,1,D1,0)))) S Y="@1";.02;
	;;^UTILITY(U,$J,"DIE",1238,0)
	;;=IBDF EDIT OLD OR COPIED FORM^2950814.0909^^357^11299^^2960402
	;;^UTILITY(U,$J,"DIE",1238,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1238,"%D",1,0)
	;;=Used to edit an existing form.
	;;^UTILITY(U,$J,"DIE",1238,"DIAB",5,0,357,0)
	;;=.12;REQ
	;;^UTILITY(U,$J,"DIE",1238,"DIAB",8,0,357,0)
	;;=.06;T
	;;^UTILITY(U,$J,"DIE",1238,"DIAB",11,0,357,1)
	;;=.03;T
	;;^UTILITY(U,$J,"DIE",1238,"DR",1,357)
	;;=S IBDELETE=1;.01;.02//DUPLEX,SHORT-EDGE BINDING;.04////1;.12R~;S IBSCAN=X;I 'IBSCAN S Y="@1";.06T~;.16///1;.09///133;.1///80;.11//1;W !!,"ENTER THE PAGES THAT SHOULD BE SCANNED.";2;S Y="@2";@1;S:'IBOLD Y="@3";.09;.1;.11//1;
	;;^UTILITY(U,$J,"DIE",1238,"DR",1,357,1)
	;;=S Y="@2";@3;.16//133 COLUMNS x 80 LINES;S IBTXTSZ=X;.09///^S X=$S(IBTXTSZ=1:133,IBTXTSZ=2:96,1:80);.1///^S X=$S(IBTXTSZ=1:80,IBTXTSZ=2:72,1:80);.11//1;@2;.14///1;.15///p;.03T~;.07////^S X=$S(+$G(IBTKFORM):1,1:0);S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1238,"DR",2,357.02)
	;;=.01;.02////1;
	;;^UTILITY(U,$J,"DIE",1239,0)
	;;=IBDF EDIT NEW FORM^2951103.1343^^357^1453^^2960227
	;;^UTILITY(U,$J,"DIE",1239,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1239,"%D",1,0)
	;;=Used to edit a new form.
	;;^UTILITY(U,$J,"DIE",1239,"DIAB",6,0,357,0)
	;;=.12;REQ
	;;^UTILITY(U,$J,"DIE",1239,"DIAB",9,0,357,0)
	;;=.06;T
	;;^UTILITY(U,$J,"DIE",1239,"DIAB",9,0,357,1)
	;;=.03;T
	;;^UTILITY(U,$J,"DIE",1239,"DR",1,357)
	;;=S IBDELETE=1;S IBDVR=+$G(^DD(357,0,"VR"));.01;.02//DUPLEX,SHORT-EDGE BINDING;.04////1;.12R~;S IBSCAN=X;I 'IBSCAN S Y="@1";.06T~;.16///1;.09///133;.1///80;.11//1;W !!,"ENTER THE PAGES THAT SHOULD BE SCANNED.";2;S Y="@2";@1;
	;;^UTILITY(U,$J,"DIE",1239,"DR",1,357,1)
	;;=.16//133 COLUMNS x 80 LINES;S IBTXTSZ=X;.09///^S X=$S(IBTXTSZ=1:133,IBTXTSZ=2:96,1:80);.1///^S X=$S(IBTXTSZ=1:80,IBTXTSZ=2:72,1:80);.11//1;@2;.14///1;.15///p;.03T~;.07////^S X=$S(+$G(IBTKFORM):1,1:0);S IBDELETE=0;S:IBDVR<1 Y="@10";
	;;^UTILITY(U,$J,"DIE",1239,"DR",1,357,2)
	;;=I $P(^IBE(357,DA,0),U,17)'="" S Y="@10";S:IBDVR<1 Y="@10";.17////^S X=+$G(IBDVR);@10;
	;;^UTILITY(U,$J,"DIE",1239,"DR",2,357.02)
	;;=.01;.02////1;
	;;^UTILITY(U,$J,"DIE",1244,0)
	;;=IBDF EDIT AVAILABLE REPORT^2930924.1337^^357.6^^^2950814^
	;;^UTILITY(U,$J,"DIE",1244,"%D",0)
	;;=^^2^2^2940308^
	;;^UTILITY(U,$J,"DIE",1244,"%D",1,0)
	;;=Used to define a package interface that prints a report other than a
	;;^UTILITY(U,$J,"DIE",1244,"%D",2,0)
	;;=Health Summary.
	;;^UTILITY(U,$J,"DIE",1244,"DIAB",1,1,357.66,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1244,"DIAB",1,1,357.67,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1244,"DIAB",3,0,357.6,0)
	;;=1;REQ
	;;^UTILITY(U,$J,"DIE",1244,"DIAB",5,0,357.6,0)
	;;=.04;REQ
	;;^UTILITY(U,$J,"DIE",1244,"DIAB",6,0,357.6,0)
	;;=.02;REQ
	;;^UTILITY(U,$J,"DIE",1244,"DIAB",7,0,357.6,0)
	;;=.03;REQ
	;;^UTILITY(U,$J,"DIE",1244,"DIAB",13,0,357.6,0)
	;;=.09;REQ
	;;^UTILITY(U,$J,"DIE",1244,"DR",1,357.6)
	;;=.01;.06////4;1R~;3;.04R~;.02R~;.03R~;.1///NO;4.01;5.01;6;7;.09R~;S IBDELETE=0;

IBDIN041
IBDIN041	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1244,"DR",2,357.66)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1244,"DR",2,357.67)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1247,0)
	;;=IBDF POSITION/SIZE COLUMNS^2950505.1108^^357.2^11299^^2960307
	;;^UTILITY(U,$J,"DIE",1247,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1247,"%D",1,0)
	;;=Used to edit the size and position of a selection list's columns.
	;;^UTILITY(U,$J,"DIE",1247,"DIAB",2,0,357.2,0)
	;;=.13;T
	;;^UTILITY(U,$J,"DIE",1247,"DIAB",3,1,357.21,0)
	;;=.02;T
	;;^UTILITY(U,$J,"DIE",1247,"DIAB",4,1,357.21,0)
	;;=.03//^S X=1+$S($G(IBBLK("BOX"))=1:1,1:0);T
	;;^UTILITY(U,$J,"DIE",1247,"DIAB",5,1,357.21,0)
	;;=.04;T
	;;^UTILITY(U,$J,"DIE",1247,"DR",1,357.2)
	;;=D MSG1^IBDF9A;.13T~;D FULL^VALM1;D MSG2^IBDF9A;1;
	;;^UTILITY(U,$J,"DIE",1247,"DR",2,357.21)
	;;=.01;D RESET^VALM4:VALMCC,REFRESH^VALM;.02T~;.03T~//^S X=1+$S($G(IBBLK("BOX"))=1:1,1:0);.04T~;D FULL^VALM1;
	;;^UTILITY(U,$J,"DIE",1249,0)
	;;=IBDF EDIT OUTPUT/SELECTION RTN^2950807.0837^^357.6^11299^^2950807
	;;^UTILITY(U,$J,"DIE",1249,"%D",0)
	;;=^^2^2^2940308^
	;;^UTILITY(U,$J,"DIE",1249,"%D",1,0)
	;;=Used to define a package interface of the type output routine or selection
	;;^UTILITY(U,$J,"DIE",1249,"%D",2,0)
	;;=routine.
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",1,1,357.615,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",1,1,357.66,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",1,1,357.67,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",2,0,357.6,1)
	;;=3;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",4,0,357.6,1)
	;;=.04;REQ
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",5,0,357.6,1)
	;;=.03;REQ
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",6,0,357.6,0)
	;;=1;REQ
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",6,0,357.6,1)
	;;=.02;REQ
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",8,0,357.6,0)
	;;=.07;T;REQ
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",9,0,357.6,1)
	;;=.09;REQ
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",11,0,357.6,1)
	;;=2.01;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",12,0,357.6,1)
	;;=2.02;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",14,0,357.6,1)
	;;=2.17;T;REQ
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",15,0,357.6,0)
	;;=.13;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",15,0,357.6,1)
	;;=2.18;REQ
	;;^UTILITY(U,$J,"DIE",1249,"DR",1,357.6)
	;;=W !!,"You must prefix the name with the name space of the package that is providing",!,"the data.",!;.01;Q;.1///NO;.06///^S X=IBTYPE;1R~;S:IBTYPE=3 Y="@2";.07R~T~;S IBACTION=X;.05////1;S Y="@3";@2;.07////4;S IBACTION=4;.13T~;@3;
	;;^UTILITY(U,$J,"DIE",1249,"DR",1,357.6,1)
	;;=D LOOKUP^IBDF16;3T~;.1///NO;.04R~;.03R~;.02R~;6;7;.09R~;S:IBACTION=5 Y="@1";2.01T~;2.02T~;S:IBTYPE=2 Y="@4";2.17R~T~;2.18R~;@4;S:(IBACTION=1)!(IBACTION=3) Y="@1";15;@1;S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1249,"DR",2,357.615)
	;;=.01:.05
	;;^UTILITY(U,$J,"DIE",1249,"DR",2,357.66)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1249,"DR",2,357.67)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1250,0)
	;;=IBDF EDIT MARKING AREA^2930727.0815^^357.91^^^2950814^
	;;^UTILITY(U,$J,"DIE",1250,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1250,"%D",1,0)
	;;=Used to edit a marking area.
	;;^UTILITY(U,$J,"DIE",1250,"DIAB",4,0,357.91,0)
	;;=.02;T;REQ
	;;^UTILITY(U,$J,"DIE",1250,"DR",1,357.91)
	;;=.01;.03///NO;W !!,"Enter the characters that should be printed on the form, including spaces.",!!;.02R~T~;S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1252,0)
	;;=IBDF PRINT MANAGER^2941207.1123^^409.95^11299^^2960311
	;;^UTILITY(U,$J,"DIE",1252,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1252,"%D",1,0)
	;;=Used to edit a clinic setup for the print manager.
	;;^UTILITY(U,$J,"DIE",1252,"DIAB",1,1,409.9502,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1252,"DR",1,409.95)
	;;=.01;.02;.06;.08;.09;.03;.04;.05;.07;W !!,"You can now select reports that should be printed for the clinic",!,"IN ADDITION to the encounter forms that have been selected.",!;1;
	;;^UTILITY(U,$J,"DIE",1252,"DR",1,409.95,1)
	;;=W !!," You may enter reports that you DO NOT want to print for this clinic. Entering",!,"an EXCLUDED REPORT will prevent it from printing even if it is defined",!,"to print for the entire division.",!;2;
	;;^UTILITY(U,$J,"DIE",1252,"DR",2,409.9501)
	;;=.01;.02///FOR EVERY APPOINTMENT;.03//DUPLEX,SHORT-EDGE BINDING;
	;;^UTILITY(U,$J,"DIE",1252,"DR",2,409.9502)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1253,0)
	;;=IBDF PRINT MANAGER^2940630.1352^^409.96^^^2960307^
	;;^UTILITY(U,$J,"DIE",1253,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1253,"%D",1,0)
	;;=Used to edit a division setup for the print manager.
	;;^UTILITY(U,$J,"DIE",1253,"DR",1,409.96)
	;;=.01;1;
	;;^UTILITY(U,$J,"DIE",1253,"DR",2,409.961)
	;;=.01;.02;.03//DUPLEX,SHORT-EDGE BINDING;
	;;^UTILITY(U,$J,"DIE",1302,0)
	;;=IBDF EDIT AVAILABLE HLTH SMRY^2930924.1326^^357.6^^^^

IBDIN042
IBDIN042	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1302,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1302,"%D",1,0)
	;;=Used to define a package interface that prints a Health Summary.
	;;^UTILITY(U,$J,"DIE",1302,"DIAB",3,0,357.6,0)
	;;=1;REQ
	;;^UTILITY(U,$J,"DIE",1302,"DIAB",9,0,357.6,0)
	;;=.11;REQ
	;;^UTILITY(U,$J,"DIE",1302,"DIAB",10,0,357.6,0)
	;;=.09;REQ
	;;^UTILITY(U,$J,"DIE",1302,"DR",1,357.6)
	;;=.01;.06////4;1R~;3;.02///PRNTSMRY;.03///IBDFN5;.04////^S X="HEALTH SUMMARY";.1///YES;.11R~;.09R~;S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1420,0)
	;;=IBDF EDIT MULT CHOICE FIELD^2950911.1413^^357.93^11299^^2960202
	;;^UTILITY(U,$J,"DIE",1420,"DIAB",3,0,357.93,1)
	;;=.04;REQ
	;;^UTILITY(U,$J,"DIE",1420,"DIAB",4,0,357.93,0)
	;;=.06;T
	;;^UTILITY(U,$J,"DIE",1420,"DIAB",8,0,357.93,0)
	;;=.02;T
	;;^UTILITY(U,$J,"DIE",1420,"DIAB",10,0,357.93,0)
	;;=.07;T
	;;^UTILITY(U,$J,"DIE",1420,"DIAB",11,0,357.93,0)
	;;=.03;REQ
	;;^UTILITY(U,$J,"DIE",1420,"DIAB",12,1,357.931,0)
	;;=.04;T
	;;^UTILITY(U,$J,"DIE",1420,"DR",1,357.93)
	;;=.01;I IBOLD S Y="@1";.08///^S X=$G(IBBLK);.06T~;S IBTYPE=X;D RESET^VALM4:VALMCC,REFRESH^VALM;@1;.02T~;S:$L(X) IBX=$L(X)+1 S:'$L(X) Y="@2";.07T~;.03R~;
	;;^UTILITY(U,$J,"DIE",1420,"DR",1,357.93,1)
	;;=S IBX=IBX+X+1 I (X<$$MINX^IBDFU1B)!(X>$$MAXX^IBDFU1B) D WARNING^IBDFU1B("input field");I ((IBX-3)>$$MAXX^IBDFU1B) D WARNING^IBDFU1B("input field");.04R~;
	;;^UTILITY(U,$J,"DIE",1420,"DR",1,357.93,2)
	;;=S IBY=X I (X<$$MINY^IBDFU1B)!(X>$$MAXY^IBDFU1B) D WARNING^IBDFU1B("input field");@2;D FULL^VALM1;.09;1;S Y="@99";@3;D FULL^VALM1;@99;
	;;^UTILITY(U,$J,"DIE",1420,"DR",2,357.931)
	;;=.08////^S X=$G(IBID);S DIE("NO^")="BACK";I '$D(IBQUAL) S Y="@4";.09///^S X=IBQUAL;S Y="@5";@4;.09;@5;.05//^S X=$G(IBLABEL);S IBLEN=$L(X);D RESET^VALM4:VALMCC,REFRESH^VALM;.04T~;.02//^S X=IBX+1;
	;;^UTILITY(U,$J,"DIE",1420,"DR",2,357.931,1)
	;;=S IBX=X+IBLEN+2 I (X<$$MINX^IBDFU1B)!((IBX-3)>$$MAXX^IBDFU1B) D WARNING^IBDFU1B("input field");.03//^S X=IBY+1;S IBY=X+1 I (X<$$MINY^IBDFU1B)!(X>$$MAXY^IBDFU1B) D WARNING^IBDFU1B("input field");.06//^S X=IBX;
	;;^UTILITY(U,$J,"DIE",1420,"DR",2,357.931,2)
	;;=S IBX=X+5 I (X<$$MINX^IBDFU1B)!((X+2)>$$MAXX^IBDFU1B) D WARNING^IBDFU1B("bubble");.07//^S X=IBY;S IBY=X I (X<$$MINY^IBDFU1B)!(X>$$MAXY^IBDFU1B) D WARNING^IBDFU1B("bubble");D FULL^VALM1;S DIE("NO^")="BACKOUTOK";
	;;^UTILITY(U,$J,"DIE",1420,"ROU")
	;;=^IBDXI93
	;;^UTILITY(U,$J,"DIE",1420,"ROUOLD")
	;;=IBDXI93
	;;^UTILITY(U,$J,"DIE",1452,0)
	;;=IBDF EDIT LABEL FIELD^2950417.1134^@^357.5^11299^@^2950816
	;;^UTILITY(U,$J,"DIE",1452,"DIAB",3,1,357.52,0)
	;;=.03;T
	;;^UTILITY(U,$J,"DIE",1452,"DR",1,357.5)
	;;=.01;I IBOLD S Y="@1";.02////^S X=$G(IBBLK);.03////^S X="";@1;S (IBY,IBX)=1;2;@99;S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1452,"DR",2,357.52)
	;;=.01;S:X="" Y="@99" S IBW=$L(X);.03T~;I X["I" S Y="@7",IBW=0;.05//^S X=+IBY;S IBY=X+1;.04//^S X=+IBX;S IBX=X+2+IBW;
	;;^UTILITY(U,$J,"DIE",1492,0)
	;;=IBDF EDIT HAND PRINT FIELD^2950906.1306^^359.94^11299^^2950922
	;;^UTILITY(U,$J,"DIE",1492,"DIAB",2,0,359.94,1)
	;;=.04;REQ
	;;^UTILITY(U,$J,"DIE",1492,"DIAB",4,0,359.94,0)
	;;=.06;T
	;;^UTILITY(U,$J,"DIE",1492,"DIAB",14,0,359.94,0)
	;;=.03;REQ
	;;^UTILITY(U,$J,"DIE",1492,"DR",1,359.94)
	;;=.01;I IBOLD S Y="@1";.08///^S X=$G(IBBLK);.06T~;S IBOLD=IBOLD;.1;S IBOLD=X;.02///^S X=$P(^IBE(359.1,IBOLD,0),"^",10);D RESET^VALM4:VALMCC,REFRESH^VALM;@1;.02;S IBX=$L(X)+1;.05;.03R~;
	;;^UTILITY(U,$J,"DIE",1492,"DR",1,359.94,1)
	;;=S IBX=IBX+X-1+$$LENGTHDT^IBDF9B4($P(^IBE(359.94,D0,0),"^",10)) I (X<$$MINX^IBDFU1B)!(IBX>$$MAXX^IBDFU1B) D WARNING^IBDFU1B("hand print field");.04R~;S IBY=X I (X<$$MINY^IBDFU1B)!(X>$$MAXY^IBDFU1B) D WARNING^IBDFU1B("input field");
	;;^UTILITY(U,$J,"DIE",1492,"DR",1,359.94,2)
	;;=S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1500,0)
	;;=IBDF EDIT PLACE HOLDER^2951002.0826^@^357.3^11299^@^2960328
	;;^UTILITY(U,$J,"DIE",1500,"DIAB",2,0,357.3,0)
	;;=.08;T
	;;^UTILITY(U,$J,"DIE",1500,"DR",1,357.3)
	;;=.05;.08T~;.06//^S X=" ";I X']" " S Y="@1";.07;@1;
	;;^UTILITY(U,$J,"DIE",1572,0)
	;;=IBDF EDIT PRINTER^2960229.0924^^357.94^1453^^2960402
	;;^UTILITY(U,$J,"DIE",1572,"DR",1,357.94)
	;;=.01;.02;I $P($G(^IBE(357.94,+DA,0)),"^",2)=1 S Y="@1";.03;.04;.05;S Y="@99";@1;.03//$C(27)_"&l0S";Q;.04//$C(27)_"&l1S";Q;.05//$C(27)_"&l2S";@99;
	;;^UTILITY(U,$J,"KEY",154,0)
	;;=IBDF IRM
	;;^UTILITY(U,$J,"KEY",154,1,0)
	;;=^^3^3^2930929^
	;;^UTILITY(U,$J,"KEY",154,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"KEY",154,1,2,0)
	;;=Used to prevent access to Encounter Form Utility options that are for IRM
	;;^UTILITY(U,$J,"KEY",154,1,3,0)
	;;=staffs only.

IBDIN043
IBDIN043	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4093,0)
	;;=IBDF ENCOUNTER FORM^Encounter Forms^^M^^^^^^^y^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"OPT",4093,1,0)
	;;=^^1^1^2930930^
	;;^UTILITY(U,$J,"OPT",4093,1,1,0)
	;;=Contains all of the encounter form options.
	;;^UTILITY(U,$J,"OPT",4093,10,0)
	;;=^19.01PI^12^6
	;;^UTILITY(U,$J,"OPT",4093,10,5,0)
	;;=4106^PM^3
	;;^UTILITY(U,$J,"OPT",4093,10,5,"^")
	;;=IBDF PRINT MANAGER
	;;^UTILITY(U,$J,"OPT",4093,10,8,0)
	;;=4178^TK^4
	;;^UTILITY(U,$J,"OPT",4093,10,8,"^")
	;;=IBDF EDIT TOOL KIT
	;;^UTILITY(U,$J,"OPT",4093,10,9,0)
	;;=4179^PR^2
	;;^UTILITY(U,$J,"OPT",4093,10,9,"^")
	;;=IBDF PRINT OPTIONS
	;;^UTILITY(U,$J,"OPT",4093,10,10,0)
	;;=4181^EE^1
	;;^UTILITY(U,$J,"OPT",4093,10,10,"^")
	;;=IBDF EDIT ENCOUNTER FORMS
	;;^UTILITY(U,$J,"OPT",4093,10,11,0)
	;;=4107^IR^5
	;;^UTILITY(U,$J,"OPT",4093,10,11,"^")
	;;=IBDF IRM OPTIONS
	;;^UTILITY(U,$J,"OPT",4093,10,12,0)
	;;=5278^RU
	;;^UTILITY(U,$J,"OPT",4093,10,12,"^")
	;;=IBDF REPORTS MENU
	;;^UTILITY(U,$J,"OPT",4093,99)
	;;=56592,32656
	;;^UTILITY(U,$J,"OPT",4093,"U")
	;;=ENCOUNTER FORMS
	;;^UTILITY(U,$J,"OPT",4094,0)
	;;=IBDF CLINIC SETUP/EDIT FORMS^Clinic Setup/Edit Forms^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4094,1,0)
	;;=^^1^1^2960109^^^^
	;;^UTILITY(U,$J,"OPT",4094,1,1,0)
	;;=The form generator for creating encounter forms.
	;;^UTILITY(U,$J,"OPT",4094,20)
	;;=D ^IBDF6
	;;^UTILITY(U,$J,"OPT",4094,"U")
	;;=CLINIC SETUP/EDIT FORMS
	;;^UTILITY(U,$J,"OPT",4095,0)
	;;=IBDF PRINT ENCOUNTER FORMS^Print Encounter Forms for Appointments^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4095,1,0)
	;;=^^2^2^2960301^^^^
	;;^UTILITY(U,$J,"OPT",4095,1,1,0)
	;;=For printing an encounter form for appointments, either by division,
	;;^UTILITY(U,$J,"OPT",4095,1,2,0)
	;;=clinic, or patient.
	;;^UTILITY(U,$J,"OPT",4095,20)
	;;=D ^IBDF1B
	;;^UTILITY(U,$J,"OPT",4095,"U")
	;;=PRINT ENCOUNTER FORMS FOR APPO
	;;^UTILITY(U,$J,"OPT",4096,0)
	;;=IBDF PRINT BLNK ENCOUNTER FORM^Print Blank Encounter Form^^A^^^^^^^y^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4096,1,0)
	;;=^^2^2^2960301^^^^
	;;^UTILITY(U,$J,"OPT",4096,1,1,0)
	;;=This option allows the user to select a clinic, and if an encounter form
	;;^UTILITY(U,$J,"OPT",4096,1,2,0)
	;;=is defined for use with an embossed patient card the form will be printed.
	;;^UTILITY(U,$J,"OPT",4096,20)
	;;=D MAIN^IBDF1A(0)
	;;^UTILITY(U,$J,"OPT",4096,"U")
	;;=PRINT BLANK ENCOUNTER FORM
	;;^UTILITY(U,$J,"OPT",4098,0)
	;;=IBDF PRNT FORM W/DATA NO APPT.^Print Form w/Patient Data, No Appt^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4098,1,0)
	;;=^^3^3^2960215^^^^
	;;^UTILITY(U,$J,"OPT",4098,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4098,1,2,0)
	;;=Allows an encounter form to be printed with patient data, but does not ask
	;;^UTILITY(U,$J,"OPT",4098,1,3,0)
	;;=that an appt. be selected. Uses current time as the appointment time.
	;;^UTILITY(U,$J,"OPT",4098,20)
	;;=D MAIN^IBDF1A(1)
	;;^UTILITY(U,$J,"OPT",4098,"U")
	;;=PRINT FORM W/PATIENT DATA, NO 
	;;^UTILITY(U,$J,"OPT",4102,0)
	;;=IBDF DEFINE AVAILABLE REPORT^Define Available Report (not Health Summaries)^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4102,1,0)
	;;=^^2^2^2930623^
	;;^UTILITY(U,$J,"OPT",4102,1,1,0)
	;;=Allows reports, other than Health Summaries, to be made available for
	;;^UTILITY(U,$J,"OPT",4102,1,2,0)
	;;=use by the print manager.
	;;^UTILITY(U,$J,"OPT",4102,20)
	;;=D EDITRPRT^IBDF11(0)
	;;^UTILITY(U,$J,"OPT",4102,"U")
	;;=DEFINE AVAILABLE REPORT (NOT H
	;;^UTILITY(U,$J,"OPT",4103,0)
	;;=IBDF DEFINE AVLABLE HLTH SMRY^Define Available Health Summary^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4103,1,0)
	;;=^^1^1^2930924^^
	;;^UTILITY(U,$J,"OPT",4103,1,1,0)
	;;=Allows a Health Summary to be made available for use by the print manager.
	;;^UTILITY(U,$J,"OPT",4103,20)
	;;=D EDITRPRT^IBDF11(1)
	;;^UTILITY(U,$J,"OPT",4103,"U")
	;;=DEFINE AVAILABLE HEALTH SUMMAR
	;;^UTILITY(U,$J,"OPT",4104,0)
	;;=IBDF EDIT DIVISION REPORTS^Edit Division Reports^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4104,1,0)
	;;=^^1^1^2960111^^
	;;^UTILITY(U,$J,"OPT",4104,1,1,0)
	;;=Used to select reports that should print for the entire division.
	;;^UTILITY(U,$J,"OPT",4104,20)
	;;=D DIVSUP^IBDF11
	;;^UTILITY(U,$J,"OPT",4104,99)
	;;=55762,42279
	;;^UTILITY(U,$J,"OPT",4104,"U")
	;;=EDIT DIVISION REPORTS
	;;^UTILITY(U,$J,"OPT",4105,0)
	;;=IBDF EDIT CLINIC REPORTS^Edit Clinic Reports^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4105,1,0)
	;;=^^1^1^2960222^^^

IBDIN044
IBDIN044	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4105,1,1,0)
	;;=Used to select reports that should print for the clinic.
	;;^UTILITY(U,$J,"OPT",4105,20)
	;;=D CLNCSUP^IBDF11
	;;^UTILITY(U,$J,"OPT",4105,"U")
	;;=EDIT CLINIC REPORTS
	;;^UTILITY(U,$J,"OPT",4106,0)
	;;=IBDF PRINT MANAGER^Print Manager^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"OPT",4106,1,0)
	;;=^^3^3^2951205^^^^
	;;^UTILITY(U,$J,"OPT",4106,1,1,0)
	;;=Contains all the options pertaining to the print manager, except for the
	;;^UTILITY(U,$J,"OPT",4106,1,2,0)
	;;=IBDF DEFINE AVLABLE HLTH SMRY option - that option allows the user to
	;;^UTILITY(U,$J,"OPT",4106,1,3,0)
	;;=enter mumps code, so it must be limited to IRM use.
	;;^UTILITY(U,$J,"OPT",4106,10,0)
	;;=^19.01PI^9^5
	;;^UTILITY(U,$J,"OPT",4106,10,1,0)
	;;=4104^ED^1
	;;^UTILITY(U,$J,"OPT",4106,10,1,"^")
	;;=IBDF EDIT DIVISION REPORTS
	;;^UTILITY(U,$J,"OPT",4106,10,2,0)
	;;=4105^EC^2
	;;^UTILITY(U,$J,"OPT",4106,10,2,"^")
	;;=IBDF EDIT CLINIC REPORTS
	;;^UTILITY(U,$J,"OPT",4106,10,4,0)
	;;=4103^DH^4
	;;^UTILITY(U,$J,"OPT",4106,10,4,"^")
	;;=IBDF DEFINE AVLABLE HLTH SMRY
	;;^UTILITY(U,$J,"OPT",4106,10,8,0)
	;;=4916^SQ
	;;^UTILITY(U,$J,"OPT",4106,10,8,"^")
	;;=IBDF SETUP AUTO CLINIC PRINT
	;;^UTILITY(U,$J,"OPT",4106,10,9,0)
	;;=4115^RC
	;;^UTILITY(U,$J,"OPT",4106,10,9,"^")
	;;=IBDF REPORT CLINIC SETUPS
	;;^UTILITY(U,$J,"OPT",4106,99)
	;;=56671,50883
	;;^UTILITY(U,$J,"OPT",4106,"U")
	;;=PRINT MANAGER
	;;^UTILITY(U,$J,"OPT",4107,0)
	;;=IBDF IRM OPTIONS^Encounter Form IRM Options^^M^^IBDF IRM^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"OPT",4107,1,0)
	;;=^^3^3^2960229^^^^
	;;^UTILITY(U,$J,"OPT",4107,1,1,0)
	;;=The basic intent of this menu is to contain the options that should only
	;;^UTILITY(U,$J,"OPT",4107,1,2,0)
	;;=be available to those technical users that can program in MUMPS, which is
	;;^UTILITY(U,$J,"OPT",4107,1,3,0)
	;;=a requirement, for example, when, adding a new PACKAGE INTERFACE.
	;;^UTILITY(U,$J,"OPT",4107,10,0)
	;;=^19.01PI^11^8
	;;^UTILITY(U,$J,"OPT",4107,10,3,0)
	;;=4119^EP^3
	;;^UTILITY(U,$J,"OPT",4107,10,3,"^")
	;;=IBDF EDIT PACKAGE INTERFACE
	;;^UTILITY(U,$J,"OPT",4107,10,4,0)
	;;=4120^EM^4
	;;^UTILITY(U,$J,"OPT",4107,10,4,"^")
	;;=IBDF EDIT MARKING AREA
	;;^UTILITY(U,$J,"OPT",4107,10,5,0)
	;;=4102^DR^5
	;;^UTILITY(U,$J,"OPT",4107,10,5,"^")
	;;=IBDF DEFINE AVAILABLE REPORT
	;;^UTILITY(U,$J,"OPT",4107,10,7,0)
	;;=4124^IX^7
	;;^UTILITY(U,$J,"OPT",4107,10,7,"^")
	;;=IBDF IMPORT/EXPORT UTILITY
	;;^UTILITY(U,$J,"OPT",4107,10,8,0)
	;;=4245^MC^8
	;;^UTILITY(U,$J,"OPT",4107,10,8,"^")
	;;=IBDF MISCELLANEOUS CLEANUP
	;;^UTILITY(U,$J,"OPT",4107,10,9,0)
	;;=5173^PF
	;;^UTILITY(U,$J,"OPT",4107,10,9,"^")
	;;=IBDF MANUAL PURGE FORM TRACK
	;;^UTILITY(U,$J,"OPT",4107,10,10,0)
	;;=5176^RF^7
	;;^UTILITY(U,$J,"OPT",4107,10,10,"^")
	;;=IBDF RECOMPILE ALL FORMS
	;;^UTILITY(U,$J,"OPT",4107,10,11,0)
	;;=5873^DE
	;;^UTILITY(U,$J,"OPT",4107,10,11,"^")
	;;=IBDF EDIT PRINTERS
	;;^UTILITY(U,$J,"OPT",4107,99)
	;;=56672,30824
	;;^UTILITY(U,$J,"OPT",4107,"U")
	;;=ENCOUNTER FORM IRM OPTIONS
	;;^UTILITY(U,$J,"OPT",4108,0)
	;;=IBDF EDIT TOOL KIT FORMS^Edit Tool Kit Forms^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4108,1,0)
	;;=^^1^1^2930625^
	;;^UTILITY(U,$J,"OPT",4108,1,1,0)
	;;=Allows tool kit forms to be edited, created, deleted.
	;;^UTILITY(U,$J,"OPT",4108,20)
	;;=D FORMLIST^IBDF12
	;;^UTILITY(U,$J,"OPT",4108,"U")
	;;=EDIT TOOL KIT FORMS
	;;^UTILITY(U,$J,"OPT",4109,0)
	;;=IBDF EDIT TOOL KIT BLOCKS^Edit Tool Kit Blocks^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4109,1,0)
	;;=^^1^1^2930625^
	;;^UTILITY(U,$J,"OPT",4109,1,1,0)
	;;=Allows tool kit blocks to be edited, created, deleted.
	;;^UTILITY(U,$J,"OPT",4109,20)
	;;=D LIST^IBDF13
	;;^UTILITY(U,$J,"OPT",4109,"U")
	;;=EDIT TOOL KIT BLOCKS
	;;^UTILITY(U,$J,"OPT",4115,0)
	;;=IBDF REPORT CLINIC SETUPS^Report Clinic Setups^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4115,1,0)
	;;=^^2^2^2960111^^^
	;;^UTILITY(U,$J,"OPT",4115,1,1,0)
	;;=Reports on each clinic setup, listing the encounter forms and other reports
	;;^UTILITY(U,$J,"OPT",4115,1,2,0)
	;;=defined for use by the clinic.
	;;^UTILITY(U,$J,"OPT",4115,20)
	;;=D ^IBDF14
	;;^UTILITY(U,$J,"OPT",4115,"U")
	;;=REPORT CLINIC SETUPS
	;;^UTILITY(U,$J,"OPT",4116,0)
	;;=IBDF LIST CLINICS USING FORMS^List Clinics Using Forms^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4116,1,0)
	;;=^^1^1^2951211^^^^
	;;^UTILITY(U,$J,"OPT",4116,1,1,0)
	;;=For each encounter form this option lists the clinics using it.
	;;^UTILITY(U,$J,"OPT",4116,20)
	;;=D ^IBDF15

IBDIN045
IBDIN045	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4116,"U")
	;;=LIST CLINICS USING FORMS
	;;^UTILITY(U,$J,"OPT",4119,0)
	;;=IBDF EDIT PACKAGE INTERFACE^Edit Package Interface^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4119,1,0)
	;;=^^5^5^2930726^
	;;^UTILITY(U,$J,"OPT",4119,1,1,0)
	;;=This option only allows selection routines and output routines. It allows
	;;^UTILITY(U,$J,"OPT",4119,1,2,0)
	;;=Package Interfaces to be created, edited, and deleted. However, Package Interfaces
	;;^UTILITY(U,$J,"OPT",4119,1,3,0)
	;;=that are in use in any form should not be deleted. By creating their
	;;^UTILITY(U,$J,"OPT",4119,1,4,0)
	;;=own Package Interfaces the local sites can display data to their forms that
	;;^UTILITY(U,$J,"OPT",4119,1,5,0)
	;;=is not provided for in the tool kit.
	;;^UTILITY(U,$J,"OPT",4119,20)
	;;=D EDIT^IBDF16
	;;^UTILITY(U,$J,"OPT",4119,"U")
	;;=EDIT PACKAGE INTERFACE
	;;^UTILITY(U,$J,"OPT",4120,0)
	;;=IBDF EDIT MARKING AREA^Edit Marking Area (for selection lists)^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4120,1,0)
	;;=^^3^3^2930727^
	;;^UTILITY(U,$J,"OPT",4120,1,1,0)
	;;=Allows the local sites to create their own Marking Area to supplement those
	;;^UTILITY(U,$J,"OPT",4120,1,2,0)
	;;=that come with the tool kit. Marking Areas are the areas on a selection list
	;;^UTILITY(U,$J,"OPT",4120,1,3,0)
	;;=that are used for writting in to indicate choices.
	;;^UTILITY(U,$J,"OPT",4120,20)
	;;=D MARKING^IBDF16
	;;^UTILITY(U,$J,"OPT",4120,"U")
	;;=EDIT MARKING AREA (FOR SELECTI
	;;^UTILITY(U,$J,"OPT",4124,0)
	;;=IBDF IMPORT/EXPORT UTILITY^Import/Export Utility^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4124,1,0)
	;;=^^1^1^2930819^
	;;^UTILITY(U,$J,"OPT",4124,1,1,0)
	;;=Allows forms and blocks to be transferred between sites.
	;;^UTILITY(U,$J,"OPT",4124,20)
	;;=D ^IBDE
	;;^UTILITY(U,$J,"OPT",4124,"U")
	;;=IMPORT/EXPORT UTILITY
	;;^UTILITY(U,$J,"OPT",4178,0)
	;;=IBDF EDIT TOOL KIT^Edit Tool Kit^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"OPT",4178,1,0)
	;;=^^3^3^2930924^^
	;;^UTILITY(U,$J,"OPT",4178,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4178,1,2,0)
	;;=Menu containing the options that allow the user to edit forms and blocks
	;;^UTILITY(U,$J,"OPT",4178,1,3,0)
	;;=contained in the tool kit.
	;;^UTILITY(U,$J,"OPT",4178,10,0)
	;;=^19.01PI^2^2
	;;^UTILITY(U,$J,"OPT",4178,10,1,0)
	;;=4108^EF
	;;^UTILITY(U,$J,"OPT",4178,10,1,"^")
	;;=IBDF EDIT TOOL KIT FORMS
	;;^UTILITY(U,$J,"OPT",4178,10,2,0)
	;;=4109^EB
	;;^UTILITY(U,$J,"OPT",4178,10,2,"^")
	;;=IBDF EDIT TOOL KIT BLOCKS
	;;^UTILITY(U,$J,"OPT",4178,99)
	;;=56204,45564
	;;^UTILITY(U,$J,"OPT",4178,"U")
	;;=EDIT TOOL KIT
	;;^UTILITY(U,$J,"OPT",4179,0)
	;;=IBDF PRINT OPTIONS^Print Options^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"OPT",4179,1,0)
	;;=^^2^2^2950626^^^^
	;;^UTILITY(U,$J,"OPT",4179,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4179,1,2,0)
	;;=Contains the options for printing encounter forms.
	;;^UTILITY(U,$J,"OPT",4179,10,0)
	;;=^19.01PI^3^3
	;;^UTILITY(U,$J,"OPT",4179,10,1,0)
	;;=4095^PF^1
	;;^UTILITY(U,$J,"OPT",4179,10,1,"^")
	;;=IBDF PRINT ENCOUNTER FORMS
	;;^UTILITY(U,$J,"OPT",4179,10,2,0)
	;;=4098^PD^2
	;;^UTILITY(U,$J,"OPT",4179,10,2,"^")
	;;=IBDF PRNT FORM W/DATA NO APPT.
	;;^UTILITY(U,$J,"OPT",4179,10,3,0)
	;;=4096^PB^3
	;;^UTILITY(U,$J,"OPT",4179,10,3,"^")
	;;=IBDF PRINT BLNK ENCOUNTER FORM
	;;^UTILITY(U,$J,"OPT",4179,99)
	;;=56204,45565
	;;^UTILITY(U,$J,"OPT",4179,"U")
	;;=PRINT OPTIONS
	;;^UTILITY(U,$J,"OPT",4180,0)
	;;=IBDF COPY CPTS TO FORM^Copy CPT Check-off Sheet to Encounter Form^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"OPT",4180,1,0)
	;;=^^3^3^2930930^
	;;^UTILITY(U,$J,"OPT",4180,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4180,1,2,0)
	;;=Allows the user to select a CPT Check-off Sheet and Encounter Form. The
	;;^UTILITY(U,$J,"OPT",4180,1,3,0)
	;;=Check-off Sheet's CPT codes are then copied to the Encounter Form.
	;;^UTILITY(U,$J,"OPT",4180,25)
	;;=IBDF17
	;;^UTILITY(U,$J,"OPT",4180,"U")
	;;=COPY CPT CHECK-OFF SHEET TO EN
	;;^UTILITY(U,$J,"OPT",4181,0)
	;;=IBDF EDIT ENCOUNTER FORMS^Edit Encounter Forms^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"OPT",4181,1,0)
	;;=^^2^2^2950310^^^^
	;;^UTILITY(U,$J,"OPT",4181,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4181,1,2,0)
	;;=Contains the options that involve editing encounter forms.
	;;^UTILITY(U,$J,"OPT",4181,10,0)
	;;=^19.01PI^4^4
	;;^UTILITY(U,$J,"OPT",4181,10,1,0)
	;;=4094^ED^1
	;;^UTILITY(U,$J,"OPT",4181,10,1,"^")
	;;=IBDF CLINIC SETUP/EDIT FORMS
	;;^UTILITY(U,$J,"OPT",4181,10,2,0)
	;;=4180^CC^2
	;;^UTILITY(U,$J,"OPT",4181,10,2,"^")
	;;=IBDF COPY CPTS TO FORM

IBDIN046
IBDIN046	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4181,10,3,0)
	;;=3383^CPT^3
	;;^UTILITY(U,$J,"OPT",4181,10,3,"^")
	;;=IB OUTPUT MOST COMMON OPT CPT
	;;^UTILITY(U,$J,"OPT",4181,10,4,0)
	;;=4919^CU
	;;^UTILITY(U,$J,"OPT",4181,10,4,"^")
	;;=IBDFC CONVERSION UTILITY
	;;^UTILITY(U,$J,"OPT",4181,99)
	;;=56316,30024
	;;^UTILITY(U,$J,"OPT",4181,"U")
	;;=EDIT ENCOUNTER FORMS
	;;^UTILITY(U,$J,"OPT",4245,0)
	;;=IBDF MISCELLANEOUS CLEANUP^Miscellaneous Cleanup^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4245,1,0)
	;;=^^6^6^2960311^^^
	;;^UTILITY(U,$J,"OPT",4245,1,1,0)
	;;=This option is intended to delete various data structures that are no longer
	;;^UTILITY(U,$J,"OPT",4245,1,2,0)
	;;=in use.  The Encounter Form Utilties were designed to automatically delete all
	;;^UTILITY(U,$J,"OPT",4245,1,3,0)
	;;=data structures when no longer needed, so this option is a backup that should
	;;^UTILITY(U,$J,"OPT",4245,1,4,0)
	;;=rarely be needed.  Currently, the option deletes the compiled version of forms
	;;^UTILITY(U,$J,"OPT",4245,1,5,0)
	;;=where the form itself no longer exists.  It also deletes blocks that do not
	;;^UTILITY(U,$J,"OPT",4245,1,6,0)
	;;=belong to any form.
	;;^UTILITY(U,$J,"OPT",4245,20)
	;;=D GARBAGE^IBDF19
	;;^UTILITY(U,$J,"OPT",4245,"U")
	;;=MISCELLANEOUS CLEANUP
	;;^UTILITY(U,$J,"OPT",4894,0)
	;;=IBDF BACKGRD EF PRINT QUEUE^Background EF Print^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS^^
	;;^UTILITY(U,$J,"OPT",4894,1,0)
	;;=^^3^3^2960301^^^^
	;;^UTILITY(U,$J,"OPT",4894,1,1,0)
	;;=This option prints encounter forms in the background. Jobs are run based
	;;^UTILITY(U,$J,"OPT",4894,1,2,0)
	;;=on the queuing parameters set up using the option IBDF SETUP AUTO CLINIC
	;;^UTILITY(U,$J,"OPT",4894,1,3,0)
	;;=PRINT.
	;;^UTILITY(U,$J,"OPT",4894,20)
	;;=
	;;^UTILITY(U,$J,"OPT",4894,25)
	;;=IBDFQB
	;;^UTILITY(U,$J,"OPT",4894,200)
	;;=^^1D
	;;^UTILITY(U,$J,"OPT",4894,"U")
	;;=BACKGROUND EF PRINT
	;;^UTILITY(U,$J,"OPT",4916,0)
	;;=IBDF SETUP AUTO CLINIC PRINT^Setup Automatic Print Queues^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"OPT",4916,1,0)
	;;=^^2^2^2951205^^
	;;^UTILITY(U,$J,"OPT",4916,1,1,0)
	;;=This option allows users to enter Print Manager Queuing Parameters and to
	;;^UTILITY(U,$J,"OPT",4916,1,2,0)
	;;=specify automatic queuing parameters.
	;;^UTILITY(U,$J,"OPT",4916,25)
	;;=IBDFPE
	;;^UTILITY(U,$J,"OPT",4916,"U")
	;;=SETUP AUTOMATIC PRINT QUEUES
	;;^UTILITY(U,$J,"OPT",4919,0)
	;;=IBDFC CONVERSION UTILITY^Conversion Utility For Scanning^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",4919,1,0)
	;;=^^2^2^2950310^
	;;^UTILITY(U,$J,"OPT",4919,1,1,0)
	;;=Used to convert a form that was designed for just printing to a form that
	;;^UTILITY(U,$J,"OPT",4919,1,2,0)
	;;=can be scanned.
	;;^UTILITY(U,$J,"OPT",4919,20)
	;;=D ^IBDFC
	;;^UTILITY(U,$J,"OPT",4919,"U")
	;;=CONVERSION UTILITY FOR SCANNIN
	;;^UTILITY(U,$J,"OPT",5107,0)
	;;=IBDF UTIL MAINTENANCE UTILITY^Maintenance Utility for Invalid/Inactive Codes^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS^^
	;;^UTILITY(U,$J,"OPT",5107,1,0)
	;;=^^5^5^2950518^^^
	;;^UTILITY(U,$J,"OPT",5107,1,1,0)
	;;=This is a maintenance utility for the AICS package.  It allows the user
	;;^UTILITY(U,$J,"OPT",5107,1,2,0)
	;;=to display and print a listing of the invalid ICD9, CPT and VISIT codes
	;;^UTILITY(U,$J,"OPT",5107,1,3,0)
	;;=that are on encounter forms.  It also allows the user to delete the
	;;^UTILITY(U,$J,"OPT",5107,1,4,0)
	;;=invalid codes from the forms.  Another action of this option is displaying
	;;^UTILITY(U,$J,"OPT",5107,1,5,0)
	;;=a complete listing of all invalid ICD9, CPT, and VISIT codes.
	;;^UTILITY(U,$J,"OPT",5107,20)
	;;=
	;;^UTILITY(U,$J,"OPT",5107,25)
	;;=IBDFUTL
	;;^UTILITY(U,$J,"OPT",5107,"U")
	;;=MAINTENANCE UTILITY FOR INVALI
	;;^UTILITY(U,$J,"OPT",5113,0)
	;;=IBDF LIST CLINICS WITH NO FORM^Clinics With No Encounter Forms^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",5113,1,0)
	;;=^^2^2^2951211^^^^
	;;^UTILITY(U,$J,"OPT",5113,1,1,0)
	;;=This option gives a report that lists the clinics that do not
	;;^UTILITY(U,$J,"OPT",5113,1,2,0)
	;;=have encounter forms.
	;;^UTILITY(U,$J,"OPT",5113,20)
	;;=D ^IBDFCNOF
	;;^UTILITY(U,$J,"OPT",5113,"U")
	;;=CLINICS WITH NO ENCOUNTER FORM
	;;^UTILITY(U,$J,"OPT",5143,0)
	;;=IBDF FORMS TRACKING^Forms Tracking^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS^^
	;;^UTILITY(U,$J,"OPT",5143,1,0)
	;;=^^5^5^2950721^
	;;^UTILITY(U,$J,"OPT",5143,1,1,0)
	;;=This option connects the user to the forms tracking
	;;^UTILITY(U,$J,"OPT",5143,1,2,0)
	;;=display.  This allows the user to see what encounter

IBDIN047
IBDIN047	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",5143,1,3,0)
	;;=forms have been printed, scanned and those that have not
	;;^UTILITY(U,$J,"OPT",5143,1,4,0)
	;;=not.  It also allows the user to get statistics on this
	;;^UTILITY(U,$J,"OPT",5143,1,5,0)
	;;=data as well as display forms with a specific status.
	;;^UTILITY(U,$J,"OPT",5143,20)
	;;=
	;;^UTILITY(U,$J,"OPT",5143,25)
	;;=IBDFFT
	;;^UTILITY(U,$J,"OPT",5143,"U")
	;;=FORMS TRACKING
	;;^UTILITY(U,$J,"OPT",5162,0)
	;;=IBDF SCANNED W/BILL GEN^Scanned Forms w/ Bill Gen^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"OPT",5162,1,0)
	;;=^^7^7^2950905^^
	;;^UTILITY(U,$J,"OPT",5162,1,1,0)
	;;=This option prints a report for those encounter forms that have
	;;^UTILITY(U,$J,"OPT",5162,1,2,0)
	;;=been scanned that also have bills generated.  The report displays
	;;^UTILITY(U,$J,"OPT",5162,1,3,0)
	;;=this data for all clinics using encounter forms for one/many/all
	;;^UTILITY(U,$J,"OPT",5162,1,4,0)
	;;=divisions for a specific date range.  The data that is displayed 
	;;^UTILITY(U,$J,"OPT",5162,1,5,0)
	;;=is the number scanned, number insured, number of bills entered,
	;;^UTILITY(U,$J,"OPT",5162,1,6,0)
	;;=number of bills printed, and average days from date of encounter
	;;^UTILITY(U,$J,"OPT",5162,1,7,0)
	;;=to date of bill generation (printed).
	;;^UTILITY(U,$J,"OPT",5162,25)
	;;=IBDFOSG
	;;^UTILITY(U,$J,"OPT",5162,"U")
	;;=SCANNED FORMS W/ BILL GEN
	;;^UTILITY(U,$J,"OPT",5172,0)
	;;=IBDF AUTO PURGE FORM TRACKING^Tasked purge of Form Tracking files^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"OPT",5172,1,0)
	;;=^^9^9^2951004^^
	;;^UTILITY(U,$J,"OPT",5172,1,1,0)
	;;=This option should be queued to run at the sites convienence.  It will
	;;^UTILITY(U,$J,"OPT",5172,1,2,0)
	;;=purge old data from the ENCOUNTER FORM TRACKING file (357.96), the
	;;^UTILITY(U,$J,"OPT",5172,1,3,0)
	;;=ENCOUNTER FORM DEFINITION file (357.95) and the FORM SPECIFICATION file 
	;;^UTILITY(U,$J,"OPT",5172,1,4,0)
	;;=(359.2).  Two parameters in the ENCOUNTER FORM PARAMETERS file (357.09)
	;;^UTILITY(U,$J,"OPT",5172,1,5,0)
	;;=control how this option works.
	;;^UTILITY(U,$J,"OPT",5172,1,6,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",5172,1,7,0)
	;;=The option needs no device and has no output.  It is recommended that
	;;^UTILITY(U,$J,"OPT",5172,1,8,0)
	;;=this be tasked to run at least once weekly during a weekend or other
	;;^UTILITY(U,$J,"OPT",5172,1,9,0)
	;;=slow time.
	;;^UTILITY(U,$J,"OPT",5172,25)
	;;=AUTO^IBDFPRG
	;;^UTILITY(U,$J,"OPT",5172,200)
	;;=^^7D
	;;^UTILITY(U,$J,"OPT",5172,200.9)
	;;=y
	;;^UTILITY(U,$J,"OPT",5172,"U")
	;;=TASKED PURGE OF FORM TRACKING 
	;;^UTILITY(U,$J,"OPT",5173,0)
	;;=IBDF MANUAL PURGE FORM TRACK^Purge Form Tracking files^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"OPT",5173,1,0)
	;;=^^11^11^2951004^^
	;;^UTILITY(U,$J,"OPT",5173,1,1,0)
	;;=This option should be queued to run at the sites convienence.  It will
	;;^UTILITY(U,$J,"OPT",5173,1,2,0)
	;;=purge old data from the ENCOUNTER FORM TRACKING file (357.96), the
	;;^UTILITY(U,$J,"OPT",5173,1,3,0)
	;;=ENCOUNTER FORM DEFINITION file (357.95) and the FORM SPECIFICATION file 
	;;^UTILITY(U,$J,"OPT",5173,1,4,0)
	;;=(359.2).
	;;^UTILITY(U,$J,"OPT",5173,1,5,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",5173,1,6,0)
	;;=The option needs no device and has no output.  It is recommended that
	;;^UTILITY(U,$J,"OPT",5173,1,7,0)
	;;=this be tasked to run at least once weekly during a weekend or other
	;;^UTILITY(U,$J,"OPT",5173,1,8,0)
	;;=slow time.
	;;^UTILITY(U,$J,"OPT",5173,1,9,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",5173,1,10,0)
	;;=Use the option IBDF AUTO PURGE FORM TRACKING to automatically queue this
	;;^UTILITY(U,$J,"OPT",5173,1,11,0)
	;;=option to run on a recurring basis.
	;;^UTILITY(U,$J,"OPT",5173,25)
	;;=MANUAL^IBDFPRG
	;;^UTILITY(U,$J,"OPT",5173,"U")
	;;=PURGE FORM TRACKING FILES
	;;^UTILITY(U,$J,"OPT",5176,0)
	;;=IBDF RECOMPILE ALL FORMS^Recompile All Forms^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
	;;^UTILITY(U,$J,"OPT",5176,1,0)
	;;=^^2^2^2951017^
	;;^UTILITY(U,$J,"OPT",5176,1,1,0)
	;;=Used to recompile all forms. The compiled version of every form and block
	;;^UTILITY(U,$J,"OPT",5176,1,2,0)
	;;=is deleted. Each form is compiled the first time it is printed.
	;;^UTILITY(U,$J,"OPT",5176,20)
	;;=D RECMPALL^IBDF19
	;;^UTILITY(U,$J,"OPT",5176,"U")
	;;=RECOMPILE ALL FORMS
	;;^UTILITY(U,$J,"OPT",5278,0)
	;;=IBDF REPORTS MENU^Reports and Utilities^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"OPT",5278,1,0)
	;;=^^2^2^2951211^
	;;^UTILITY(U,$J,"OPT",5278,1,1,0)
	;;=This menu option will contain the reports and utilities for AICS.

IBDIN048
IBDIN048	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",5278,1,2,0)
	;;=
	;;^UTILITY(U,$J,"OPT",5278,10,0)
	;;=^19.01IP^9^9
	;;^UTILITY(U,$J,"OPT",5278,10,1,0)
	;;=5143^FT
	;;^UTILITY(U,$J,"OPT",5278,10,1,"^")
	;;=IBDF FORMS TRACKING
	;;^UTILITY(U,$J,"OPT",5278,10,2,0)
	;;=4116^LC
	;;^UTILITY(U,$J,"OPT",5278,10,2,"^")
	;;=IBDF LIST CLINICS USING FORMS
	;;^UTILITY(U,$J,"OPT",5278,10,3,0)
	;;=5107^MU
	;;^UTILITY(U,$J,"OPT",5278,10,3,"^")
	;;=IBDF UTIL MAINTENANCE UTILITY
	;;^UTILITY(U,$J,"OPT",5278,10,4,0)
	;;=5113^NF
	;;^UTILITY(U,$J,"OPT",5278,10,4,"^")
	;;=IBDF LIST CLINICS WITH NO FORM
	;;^UTILITY(U,$J,"OPT",5278,10,5,0)
	;;=4115^RC
	;;^UTILITY(U,$J,"OPT",5278,10,5,"^")
	;;=IBDF REPORT CLINIC SETUPS
	;;^UTILITY(U,$J,"OPT",5278,10,6,0)
	;;=5162^SG
	;;^UTILITY(U,$J,"OPT",5278,10,6,"^")
	;;=IBDF SCANNED W/BILL GEN
	;;^UTILITY(U,$J,"OPT",5278,10,7,0)
	;;=5279^VF
	;;^UTILITY(U,$J,"OPT",5278,10,7,"^")
	;;=IBDF VALIDATE FORMS
	;;^UTILITY(U,$J,"OPT",5278,10,8,0)
	;;=5280^PS
	;;^UTILITY(U,$J,"OPT",5278,10,8,"^")
	;;=IBDF PRINT SAMPLE ALL CLINICS
	;;^UTILITY(U,$J,"OPT",5278,10,9,0)
	;;=5315^EP
	;;^UTILITY(U,$J,"OPT",5278,10,9,"^")
	;;=IBDF EDIT SITE PARAM
	;;^UTILITY(U,$J,"OPT",5278,99)
	;;=56671,58820
	;;^UTILITY(U,$J,"OPT",5278,"U")
	;;=REPORTS AND UTILITIES
	;;^UTILITY(U,$J,"OPT",5279,0)
	;;=IBDF VALIDATE FORMS^Validate Forms^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"OPT",5279,1,0)
	;;=^^3^3^2951214^
	;;^UTILITY(U,$J,"OPT",5279,1,1,0)
	;;=Report used to validate the data that will be passed to PCE
	;;^UTILITY(U,$J,"OPT",5279,1,2,0)
	;;=when an Encounter Form is scanned.  The report may be sorted
	;;^UTILITY(U,$J,"OPT",5279,1,3,0)
	;;=by Division, Clinic Group, Clinic or Form.
	;;^UTILITY(U,$J,"OPT",5279,25)
	;;=IBDFFV
	;;^UTILITY(U,$J,"OPT",5279,"U")
	;;=VALIDATE FORMS
	;;^UTILITY(U,$J,"OPT",5280,0)
	;;=IBDF PRINT SAMPLE ALL CLINICS^Print Sample of all Forms^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"OPT",5280,1,0)
	;;=^^4^4^2960108^^^^
	;;^UTILITY(U,$J,"OPT",5280,1,1,0)
	;;=This option will print out one copy of each form currently assigned to a
	;;^UTILITY(U,$J,"OPT",5280,1,2,0)
	;;=clinic and that is in use.  Use this to prepare a package of materials
	;;^UTILITY(U,$J,"OPT",5280,1,3,0)
	;;=for review or sharing with other facilities.
	;;^UTILITY(U,$J,"OPT",5280,1,4,0)
	;;=
	;;^UTILITY(U,$J,"OPT",5280,25)
	;;=IBDFFSMP
	;;^UTILITY(U,$J,"OPT",5280,"U")
	;;=PRINT SAMPLE OF ALL FORMS
	;;^UTILITY(U,$J,"OPT",5315,0)
	;;=IBDF EDIT SITE PARAM^Edit Site Parameters^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"OPT",5315,1,0)
	;;=^^3^3^2960109^^^
	;;^UTILITY(U,$J,"OPT",5315,1,1,0)
	;;=This option will allow editing of AICS site parameters that affect
	;;^UTILITY(U,$J,"OPT",5315,1,2,0)
	;;=the printing of forms, manual data entry, the purge utility and
	;;^UTILITY(U,$J,"OPT",5315,1,3,0)
	;;=scanning.
	;;^UTILITY(U,$J,"OPT",5315,25)
	;;=IBDFESP
	;;^UTILITY(U,$J,"OPT",5315,"U")
	;;=EDIT SITE PARAMETERS
	;;^UTILITY(U,$J,"OPT",5873,0)
	;;=IBDF EDIT PRINTERS^Device Edit^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"OPT",5873,1,0)
	;;=^^5^5^2960229^^^
	;;^UTILITY(U,$J,"OPT",5873,1,1,0)
	;;=This option allows editing of the Encounter Form Printers file.  You
	;;^UTILITY(U,$J,"OPT",5873,1,2,0)
	;;=can specify whether or not a terminal type is PCL5 compatible and the
	;;^UTILITY(U,$J,"OPT",5873,1,3,0)
	;;=proper escape sequences for simplex and duplex.  Only PCL5 compatible
	;;^UTILITY(U,$J,"OPT",5873,1,4,0)
	;;=printers can print scannable encounter forms, and must be so indicated.
	;;^UTILITY(U,$J,"OPT",5873,1,5,0)
	;;=Generally HP laser printers are PCL5 compatible.
	;;^UTILITY(U,$J,"OPT",5873,25)
	;;=IBDFDVE
	;;^UTILITY(U,$J,"OPT",5873,"U")
	;;=DEVICE EDIT
	;;^UTILITY(U,$J,"OR",311,0)
	;;=311^IBD
	;;^UTILITY(U,$J,"OR",311,1,0)
	;;=^100.9951PA^13^13
	;;^UTILITY(U,$J,"OR",311,1,1,0)
	;;=VALM PREVIOUS SCREEN
	;;^UTILITY(U,$J,"OR",311,1,1,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",311,1,1,1,1,0)
	;;=IBDF HIDDEN ACTIONS
	;;^UTILITY(U,$J,"OR",311,1,2,0)
	;;=VALM NEXT SCREEN
	;;^UTILITY(U,$J,"OR",311,1,2,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",311,1,2,1,1,0)
	;;=IBDF HIDDEN ACTIONS
	;;^UTILITY(U,$J,"OR",311,1,3,0)
	;;=VALM UP ONE LINE
	;;^UTILITY(U,$J,"OR",311,1,3,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",311,1,3,1,1,0)
	;;=IBDF HIDDEN ACTIONS
	;;^UTILITY(U,$J,"OR",311,1,4,0)
	;;=VALM DOWN A LINE
	;;^UTILITY(U,$J,"OR",311,1,4,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",311,1,4,1,1,0)
	;;=IBDF HIDDEN ACTIONS
	;;^UTILITY(U,$J,"OR",311,1,5,0)
	;;=VALM REFRESH
	;;^UTILITY(U,$J,"OR",311,1,5,1,0)
	;;=^100.99511PA^1^1

IBDIN049
IBDIN049	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OR",311,1,5,1,1,0)
	;;=IBDF HIDDEN ACTIONS
	;;^UTILITY(U,$J,"OR",311,1,6,0)
	;;=VALM PRINT LIST
	;;^UTILITY(U,$J,"OR",311,1,6,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",311,1,6,1,1,0)
	;;=IBDF HIDDEN ACTIONS
	;;^UTILITY(U,$J,"OR",311,1,7,0)
	;;=VALM RIGHT
	;;^UTILITY(U,$J,"OR",311,1,7,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",311,1,7,1,1,0)
	;;=IBDF HIDDEN ACTIONS
	;;^UTILITY(U,$J,"OR",311,1,8,0)
	;;=VALM LEFT
	;;^UTILITY(U,$J,"OR",311,1,8,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",311,1,8,1,1,0)
	;;=IBDF HIDDEN ACTIONS
	;;^UTILITY(U,$J,"OR",311,1,9,0)
	;;=VALM LAST SCREEN
	;;^UTILITY(U,$J,"OR",311,1,9,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",311,1,9,1,1,0)
	;;=IBDF HIDDEN ACTIONS
	;;^UTILITY(U,$J,"OR",311,1,10,0)
	;;=VALM FIRST SCREEN
	;;^UTILITY(U,$J,"OR",311,1,10,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",311,1,10,1,1,0)
	;;=IBDF HIDDEN ACTIONS
	;;^UTILITY(U,$J,"OR",311,1,11,0)
	;;=VALM QUIT
	;;^UTILITY(U,$J,"OR",311,1,11,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",311,1,11,1,1,0)
	;;=IBDF HIDDEN ACTIONS
	;;^UTILITY(U,$J,"OR",311,1,12,0)
	;;=VALM GOTO PAGE
	;;^UTILITY(U,$J,"OR",311,1,12,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",311,1,12,1,1,0)
	;;=IBDF HIDDEN ACTIONS
	;;^UTILITY(U,$J,"OR",311,1,13,0)
	;;=IBDF PCE EVENT
	;;^UTILITY(U,$J,"OR",311,1,13,1,0)
	;;=^100.99511PA^2^2
	;;^UTILITY(U,$J,"OR",311,1,13,1,1,0)
	;;=PXCA DATA EVENT
	;;^UTILITY(U,$J,"OR",311,1,13,1,2,0)
	;;=PXK VISIT DATA EVENT
	;;^UTILITY(U,$J,"OR",311,5,0)
	;;=^100.9955^^0
	;;^UTILITY(U,$J,"PKG",311,0)
	;;=AUTOMATED INFO COLLECTION SYS^IBD^The utilities for generating a paper encounter form.
	;;^UTILITY(U,$J,"PKG",311,1,0)
	;;=^^2^2^2960205^^^^
	;;^UTILITY(U,$J,"PKG",311,1,1,0)
	;;=The Automated Info Collection Sys consists of a set of utilities for
	;;^UTILITY(U,$J,"PKG",311,1,2,0)
	;;=designing, printing, tracking, maintaining, and scanning encounter forms.
	;;^UTILITY(U,$J,"PKG",311,2,0)
	;;=^9.42A
	;;^UTILITY(U,$J,"PKG",311,3,0)
	;;=^9.43^2^2
	;;^UTILITY(U,$J,"PKG",311,3,1,0)
	;;=IBE
	;;^UTILITY(U,$J,"PKG",311,3,2,0)
	;;=IBD
	;;^UTILITY(U,$J,"PKG",311,3,2,4,0)
	;;=^^3^3^2960205^^^^
	;;^UTILITY(U,$J,"PKG",311,3,2,4,1,0)
	;;= 
	;;^UTILITY(U,$J,"PKG",311,3,2,4,2,0)
	;;= 
	;;^UTILITY(U,$J,"PKG",311,3,2,4,3,0)
	;;= 
	;;^UTILITY(U,$J,"PKG",311,3,2,5)
	;;=M
	;;^UTILITY(U,$J,"PKG",311,3,"B","IBD",2)
	;;=
	;;^UTILITY(U,$J,"PKG",311,3,"B","IBE",1)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,0)
	;;=^9.44PA^43^42
	;;^UTILITY(U,$J,"PKG",311,4,2,0)
	;;=357.5
	;;^UTILITY(U,$J,"PKG",311,4,2,222)
	;;=y^y^^n^^^n^o^y
	;;^UTILITY(U,$J,"PKG",311,4,3,0)
	;;=357.4
	;;^UTILITY(U,$J,"PKG",311,4,3,222)
	;;=y^y^^n^^^n^o^y
	;;^UTILITY(U,$J,"PKG",311,4,4,0)
	;;=357.3
	;;^UTILITY(U,$J,"PKG",311,4,4,222)
	;;=y^y^^n^^^n^o^y
	;;^UTILITY(U,$J,"PKG",311,4,5,0)
	;;=357.2
	;;^UTILITY(U,$J,"PKG",311,4,5,222)
	;;=y^y^^n^^^n^o^y
	;;^UTILITY(U,$J,"PKG",311,4,6,0)
	;;=357.1
	;;^UTILITY(U,$J,"PKG",311,4,6,222)
	;;=y^y^^n^^^n^o^y
	;;^UTILITY(U,$J,"PKG",311,4,7,0)
	;;=357
	;;^UTILITY(U,$J,"PKG",311,4,7,222)
	;;=y^y^^n^^^n^o^y
	;;^UTILITY(U,$J,"PKG",311,4,8,0)
	;;=357.6
	;;^UTILITY(U,$J,"PKG",311,4,8,222)
	;;=y^y^^n^^^y^m^n
	;;^UTILITY(U,$J,"PKG",311,4,9,0)
	;;=357.95
	;;^UTILITY(U,$J,"PKG",311,4,9,222)
	;;=y^y^^n^^^n^m^y
	;;^UTILITY(U,$J,"PKG",311,4,10,0)
	;;=357.96
	;;^UTILITY(U,$J,"PKG",311,4,10,222)
	;;=y^y^^n^^^n^m^y
	;;^UTILITY(U,$J,"PKG",311,4,11,0)
	;;=357.91
	;;^UTILITY(U,$J,"PKG",311,4,11,222)
	;;=y^y^^n^^^y^o^y
	;;^UTILITY(U,$J,"PKG",311,4,12,0)
	;;=357.7
	;;^UTILITY(U,$J,"PKG",311,4,12,222)
	;;=y^y^^n^^^n^o^y
	;;^UTILITY(U,$J,"PKG",311,4,13,0)
	;;=357.8
	;;^UTILITY(U,$J,"PKG",311,4,13,222)
	;;=y^y^^n^^^n^o^y
	;;^UTILITY(U,$J,"PKG",311,4,14,0)
	;;=357.93
	;;^UTILITY(U,$J,"PKG",311,4,14,222)
	;;=y^y^^n^^^n^o^y
	;;^UTILITY(U,$J,"PKG",311,4,15,0)
	;;=357.94
	;;^UTILITY(U,$J,"PKG",311,4,15,222)
	;;=y^y^^n^^^n^o^y
	;;^UTILITY(U,$J,"PKG",311,4,16,0)
	;;=357.97
	;;^UTILITY(U,$J,"PKG",311,4,16,222)
	;;=y^y^^n^^^n^o^y
	;;^UTILITY(U,$J,"PKG",311,4,17,0)
	;;=357.92
	;;^UTILITY(U,$J,"PKG",311,4,17,222)
	;;=y^y^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",311,4,18,0)
	;;=359
	;;^UTILITY(U,$J,"PKG",311,4,18,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,19,0)
	;;=357.98
	;;^UTILITY(U,$J,"PKG",311,4,19,222)
	;;=y^y^^n^^^y^m^n
	;;^UTILITY(U,$J,"PKG",311,4,20,0)
	;;=357.69
	;;^UTILITY(U,$J,"PKG",311,4,20,222)
	;;=y^y^^n^^^y^m^n
	;;^UTILITY(U,$J,"PKG",311,4,21,0)
	;;=359.1
	;;^UTILITY(U,$J,"PKG",311,4,21,222)
	;;=y^y^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",311,4,22,0)
	;;=359.2
	;;^UTILITY(U,$J,"PKG",311,4,22,222)
	;;=y^y^^n^^^n^o^n
	;;^UTILITY(U,$J,"PKG",311,4,23,0)
	;;=357.99
	;;^UTILITY(U,$J,"PKG",311,4,23,222)
	;;=y^y^^n^^^n^m^y

IBDIN04A
IBDIN04A	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PKG",311,4,24,0)
	;;=358.5
	;;^UTILITY(U,$J,"PKG",311,4,24,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,25,0)
	;;=358
	;;^UTILITY(U,$J,"PKG",311,4,25,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,26,0)
	;;=358.1
	;;^UTILITY(U,$J,"PKG",311,4,26,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,27,0)
	;;=358.7
	;;^UTILITY(U,$J,"PKG",311,4,27,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,28,0)
	;;=358.94
	;;^UTILITY(U,$J,"PKG",311,4,28,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,29,0)
	;;=358.91
	;;^UTILITY(U,$J,"PKG",311,4,29,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,30,0)
	;;=358.93
	;;^UTILITY(U,$J,"PKG",311,4,30,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,31,0)
	;;=358.98
	;;^UTILITY(U,$J,"PKG",311,4,31,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,32,0)
	;;=358.6
	;;^UTILITY(U,$J,"PKG",311,4,32,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,33,0)
	;;=358.3
	;;^UTILITY(U,$J,"PKG",311,4,33,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,34,0)
	;;=358.4
	;;^UTILITY(U,$J,"PKG",311,4,34,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,35,0)
	;;=358.2
	;;^UTILITY(U,$J,"PKG",311,4,35,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,36,0)
	;;=358.8
	;;^UTILITY(U,$J,"PKG",311,4,36,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,37,0)
	;;=359.94
	;;^UTILITY(U,$J,"PKG",311,4,37,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,38,0)
	;;=358.99
	;;^UTILITY(U,$J,"PKG",311,4,38,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,39,0)
	;;=357.09
	;;^UTILITY(U,$J,"PKG",311,4,39,222)
	;;=y^y^^n^^^n^m^y
	;;^UTILITY(U,$J,"PKG",311,4,40,0)
	;;=357.08
	;;^UTILITY(U,$J,"PKG",311,4,40,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,41,0)
	;;=409.95
	;;^UTILITY(U,$J,"PKG",311,4,41,222)
	;;=y^n^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,42,0)
	;;=409.96
	;;^UTILITY(U,$J,"PKG",311,4,42,222)
	;;=y^n^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,43,0)
	;;=43
	;;^UTILITY(U,$J,"PKG",311,4,43,1,0)
	;;=^9.45A^2^2
	;;^UTILITY(U,$J,"PKG",311,4,43,1,1,0)
	;;=PRINT ENCOUNTER FORM AT REG.
	;;^UTILITY(U,$J,"PKG",311,4,43,1,2,0)
	;;=DEFAULT EF PRINTER
	;;^UTILITY(U,$J,"PKG",311,4,43,1,"B","DEFAULT EF PRINTER",2)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,43,1,"B","PRINT ENCOUNTER FORM AT REG.",1)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,43,222)
	;;=y^n^^n^^^n
	;;^UTILITY(U,$J,"PKG",311,4,"B",43,43)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357,7)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.08,40)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.09,39)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.1,6)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.2,5)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.3,4)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.4,3)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.5,2)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.6,8)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.69,20)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.7,12)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.8,13)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.91,11)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.92,17)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.93,14)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.94,15)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.95,9)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.96,10)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.97,16)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.98,19)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",357.99,23)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",358,25)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",358.1,26)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",358.2,35)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",358.3,33)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",358.4,34)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",358.5,24)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",358.6,32)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",358.7,27)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",358.8,36)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",358.91,29)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",358.93,30)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",358.94,28)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",358.98,31)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",358.99,38)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",359,18)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",359.1,21)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",359.2,22)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",359.94,37)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",409.95,41)
	;;=
	;;^UTILITY(U,$J,"PKG",311,4,"B",409.96,42)
	;;=
	;;^UTILITY(U,$J,"PKG",311,5)
	;;=ALBANY
	;;^UTILITY(U,$J,"PKG",311,11)
	;;=357^359.94
	;;^UTILITY(U,$J,"PKG",311,22,0)
	;;=^9.49I^1^1
	;;^UTILITY(U,$J,"PKG",311,22,1,0)
	;;=2.1^2960403
	;;^UTILITY(U,$J,"PKG",311,22,"B",2.1,1)
	;;=
	;;^UTILITY(U,$J,"PKG",311,"DEV")
	;;=
	;;^UTILITY(U,$J,"PKG",311,"INI")
	;;=IBD21IN^
	;;^UTILITY(U,$J,"PKG",311,"INIT")
	;;=IBD21PT^

IBDIN04B
IBDIN04B	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PKG",311,"PRE")
	;;=IBD21PRE^
	;;^UTILITY(U,$J,"SBF",43,43)
	;;=
	;;^UTILITY(U,$J,"SBF",357,357)
	;;=
	;;^UTILITY(U,$J,"SBF",357,357.02)
	;;=
	;;^UTILITY(U,$J,"SBF",357.08,357.08)
	;;=
	;;^UTILITY(U,$J,"SBF",357.09,357.09)
	;;=
	;;^UTILITY(U,$J,"SBF",357.09,357.091)
	;;=
	;;^UTILITY(U,$J,"SBF",357.1,357.1)
	;;=
	;;^UTILITY(U,$J,"SBF",357.1,357.11)
	;;=
	;;^UTILITY(U,$J,"SBF",357.1,357.12)
	;;=
	;;^UTILITY(U,$J,"SBF",357.1,357.13)
	;;=
	;;^UTILITY(U,$J,"SBF",357.1,357.14)
	;;=
	;;^UTILITY(U,$J,"SBF",357.2,357.2)
	;;=
	;;^UTILITY(U,$J,"SBF",357.2,357.21)
	;;=
	;;^UTILITY(U,$J,"SBF",357.2,357.22)
	;;=
	;;^UTILITY(U,$J,"SBF",357.3,357.3)
	;;=
	;;^UTILITY(U,$J,"SBF",357.3,357.31)
	;;=
	;;^UTILITY(U,$J,"SBF",357.4,357.4)
	;;=
	;;^UTILITY(U,$J,"SBF",357.5,357.5)
	;;=
	;;^UTILITY(U,$J,"SBF",357.5,357.52)
	;;=
	;;^UTILITY(U,$J,"SBF",357.6,357.6)
	;;=
	;;^UTILITY(U,$J,"SBF",357.6,357.61)
	;;=
	;;^UTILITY(U,$J,"SBF",357.6,357.613)
	;;=
	;;^UTILITY(U,$J,"SBF",357.6,357.615)
	;;=
	;;^UTILITY(U,$J,"SBF",357.6,357.66)
	;;=
	;;^UTILITY(U,$J,"SBF",357.6,357.67)
	;;=
	;;^UTILITY(U,$J,"SBF",357.69,357.69)
	;;=
	;;^UTILITY(U,$J,"SBF",357.7,357.7)
	;;=
	;;^UTILITY(U,$J,"SBF",357.8,357.8)
	;;=
	;;^UTILITY(U,$J,"SBF",357.8,357.81)
	;;=
	;;^UTILITY(U,$J,"SBF",357.91,357.91)
	;;=
	;;^UTILITY(U,$J,"SBF",357.92,357.92)
	;;=
	;;^UTILITY(U,$J,"SBF",357.93,357.93)
	;;=
	;;^UTILITY(U,$J,"SBF",357.93,357.931)
	;;=
	;;^UTILITY(U,$J,"SBF",357.94,357.94)
	;;=
	;;^UTILITY(U,$J,"SBF",357.95,357.95)
	;;=
	;;^UTILITY(U,$J,"SBF",357.95,357.9501)
	;;=
	;;^UTILITY(U,$J,"SBF",357.95,357.951)
	;;=
	;;^UTILITY(U,$J,"SBF",357.95,357.9511)
	;;=
	;;^UTILITY(U,$J,"SBF",357.95,357.952)
	;;=
	;;^UTILITY(U,$J,"SBF",357.95,357.953)
	;;=
	;;^UTILITY(U,$J,"SBF",357.96,357.96)
	;;=
	;;^UTILITY(U,$J,"SBF",357.96,357.9601)
	;;=
	;;^UTILITY(U,$J,"SBF",357.96,357.961)
	;;=
	;;^UTILITY(U,$J,"SBF",357.96,357.969)
	;;=
	;;^UTILITY(U,$J,"SBF",357.97,357.97)
	;;=
	;;^UTILITY(U,$J,"SBF",357.98,357.98)
	;;=
	;;^UTILITY(U,$J,"SBF",357.99,357.99)
	;;=
	;;^UTILITY(U,$J,"SBF",357.99,357.9901)
	;;=
	;;^UTILITY(U,$J,"SBF",357.99,357.9911)
	;;=
	;;^UTILITY(U,$J,"SBF",358,358)
	;;=
	;;^UTILITY(U,$J,"SBF",358,358.01)
	;;=
	;;^UTILITY(U,$J,"SBF",358,358.02)
	;;=
	;;^UTILITY(U,$J,"SBF",358.1,358.1)
	;;=
	;;^UTILITY(U,$J,"SBF",358.1,358.11)
	;;=
	;;^UTILITY(U,$J,"SBF",358.2,358.2)
	;;=
	;;^UTILITY(U,$J,"SBF",358.2,358.21)
	;;=
	;;^UTILITY(U,$J,"SBF",358.2,358.22)
	;;=
	;;^UTILITY(U,$J,"SBF",358.3,358.3)
	;;=
	;;^UTILITY(U,$J,"SBF",358.3,358.31)
	;;=
	;;^UTILITY(U,$J,"SBF",358.4,358.4)
	;;=
	;;^UTILITY(U,$J,"SBF",358.5,358.5)
	;;=
	;;^UTILITY(U,$J,"SBF",358.5,358.52)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.6)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.61)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.613)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.615)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.66)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.67)
	;;=
	;;^UTILITY(U,$J,"SBF",358.7,358.7)
	;;=
	;;^UTILITY(U,$J,"SBF",358.8,358.8)
	;;=
	;;^UTILITY(U,$J,"SBF",358.8,358.81)
	;;=
	;;^UTILITY(U,$J,"SBF",358.91,358.91)
	;;=
	;;^UTILITY(U,$J,"SBF",358.93,358.93)
	;;=
	;;^UTILITY(U,$J,"SBF",358.93,358.931)
	;;=
	;;^UTILITY(U,$J,"SBF",358.94,358.94)
	;;=
	;;^UTILITY(U,$J,"SBF",358.98,358.98)
	;;=
	;;^UTILITY(U,$J,"SBF",358.99,358.99)
	;;=
	;;^UTILITY(U,$J,"SBF",359,359)
	;;=
	;;^UTILITY(U,$J,"SBF",359,359.01)
	;;=
	;;^UTILITY(U,$J,"SBF",359.1,359.1)
	;;=
	;;^UTILITY(U,$J,"SBF",359.2,359.2)
	;;=
	;;^UTILITY(U,$J,"SBF",359.2,359.21)
	;;=
	;;^UTILITY(U,$J,"SBF",359.94,359.94)
	;;=
	;;^UTILITY(U,$J,"SBF",409.95,409.95)
	;;=
	;;^UTILITY(U,$J,"SBF",409.95,409.9501)
	;;=
	;;^UTILITY(U,$J,"SBF",409.95,409.9502)
	;;=
	;;^UTILITY(U,$J,"SBF",409.96,409.96)
	;;=
	;;^UTILITY(U,$J,"SBF",409.96,409.961)
	;;=

IBDINIS
IBDINIS	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
PAC(PKG,VER)	; called from package init (DIFROM7 created this routine)
	; PKG = $T(IXF) of the INIT routine.
	; VER is an array that is contained in DIFROM from the INIT routine
	;
	N %,%I,%H,DATE,DIFROM,NOW,PACKAGE,RUN,SERVER,SITE,START,X,XMDUZ,XMSUB,XMTEXT,XMY,Y K ^TMP("IBDINIS",$J)
	;
	; Site tracking updates only occur if run in a VA production primary domain
	; account.
	I $G(^XMB("NETNAME"))'[".VA.GOV" Q
	Q:'$D(^%ZOSF("UCI"))  Q:'$D(^%ZOSF("PROD"))
	X ^%ZOSF("UCI") I Y'=^%ZOSF("PROD") Q
	;
	S SERVER="S.A5CSTS@FORUM.VA.GOV"
	S PACKAGE=$P($P(PKG,";",3),U)
	S SITE=$G(^XMB("NETNAME"))
	S START=$P($G(^DIC(9.4,VER(0),"PRE")),U,2) I '$L(START) S START="Unknown"
	D  ; check if ok to use kernel functions
	.S X="XLFDT" X ^%ZOSF("TEST") I $T D  Q
	..S NOW=$$HTFM^XLFDT($H)
	..S RUN="Unknown" I START S RUN=$$FMDIFF^XLFDT(NOW,START,3)
	..S START=$$FMTE^XLFDT(START)
	..S DATE=NOW\1
	..S NOW=$$FMTE^XLFDT(NOW)
	.D NOW^%DTC S NOW=%,DATE=X
	.S RUN="" ; don't bother to compute
	.S Y=START D DD^%DT S START=Y
	.S Y=NOW D DD^%DT S NOW=Y
	;
	; Message for server
	S ^TMP("IBDINIS",$J,1,0)="PACKAGE INSTALL"
	S ^TMP("IBDINIS",$J,2,0)="SITE: "_SITE
	S ^TMP("IBDINIS",$J,3,0)="PACKAGE: "_PACKAGE
	S ^TMP("IBDINIS",$J,4,0)="VERSION: "_VER
	S ^TMP("IBDINIS",$J,5,0)="Start time: "_START
	S ^TMP("IBDINIS",$J,6,0)="Completion time: "_NOW
	S ^TMP("IBDINIS",$J,7,0)="Run time: "_RUN
	S ^TMP("IBDINIS",$J,8,0)="DATE: "_DATE
	;
	; Data is sent to server on FORUM - S.A5CSTS
	S XMY(SERVER)="",XMDUZ=.5,XMTEXT="^TMP(""IBDINIS"",$J,",XMSUB=PACKAGE_" VERSION "_VER_" INSTALLATION"
	D ^XMD
	K ^TMP("IBDINIS",$J)
	Q

IBDINIT
IBDINIT	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	K DIF,DIFQ,DIFQR,DIFQN,DIK,DDF,DDT,DTO,D0,DLAYGO,DIC,DIDUZ,DIR,DA,DIFROM,DFR,DTN,DIX,DZ,DIRUT,DTOUT,DUOUT
	S DIOVRD=1,U="^",DIFQ=0,DIFROM="2.1" W !,"This version (#2.1) of 'IBDINIT' was created on 03-APR-1996"
	W !?9,"(at ALBANY CAMPUS DEVELOPMENT, by VA FileMan V.21.0)",!
	I $D(^DD("VERSION")),^("VERSION")'<21 G GO
	;W !,"FIRST, I'LL FRESHEN UP YOUR VA FILEMAN...." D N^DINIT
	I ^DD("VERSION")<21 W !,"but I need version 21 of the VA FileMan!" G Q
GO	;
	W !,"I HAVE TO RUN AN ENVIRONMENT CHECK ROUTINE." D PKG,^IBD21PRE Q:'$D(DIFQ)  D NOW^%DTC S DIFROM("PRE")=%
EN	; ENTER HERE TO BYPASS THE PRE-INIT PROGRAM
	S DIFQ=0 K DIRUT,DTOUT,DUOUT
	F DIFRIR=1:1:1 S DIFRRTN="^IBDINIT"_$E("5",DIFRIR) D @DIFRRTN
	W:1 !,"I AM GOING TO SET UP THE FOLLOWING FILES:" F I=1:2:84 S DIF(I)=^UTILITY("DIF",$J,I) D 1 G Q:DIFQ!$D(DIRUT) K DIF(I)
	S DIFROM="2.1" D PKG:'$D(DIFROM(0)),^IBDINIT1 G Q:'$D(DIFQ) S DIK(0)="AB"
	F DIF=1:2:84 S %=^UTILITY("DIF",$J,DIF),DIK=$P(%,";",5),N=$P(%,";",3),D=$P(%,";",4)_U_N D D K DIFQ(N)
	K DIFQR D ^IBDINIT2,^IBDINIT3
	L  S DUZ=DIDUZ W:1 !,"NO"_$P("TE THAT FILE",U,DSEC)_" SECURITY-CODE PROTECTION HAS BEEN MADE"
	D ^IBD21PT,NOW^%DTC S DIFROM("INIT")=%
	I DIFROM F DIF=1:2:84 S %=^UTILITY("DIF",$J,DIF),N=+$P(%,";",3) I N,$P(%,";",8)="y" S ^DD(N,0,"VR")=DIFROM
	I DIFROM(0)>0 F %="PRE","INI","INIT" S:$D(DIFROM(%)) $P(^DIC(9.4,DIFROM(0),%),U,2)=DIFROM(%)
	I $G(DIFQN) S $P(^(0),U,3,4)=$P(DIFQN,U,2)_U_($P(^DIC(0),U,4)+DIFQN) K DIFQN
	I DIFROM,$D(^%ZTSK) S X="IBDINIS" X ^%ZOSF("TEST") D:$T PAC^IBDINIS($T(IXF),.DIFROM)
	S:DIFROM(0)>0 ^DIC(9.4,DIFROM(0),"VERSION")=DIFROM G Q^DIFROM0
D	S:$D(^DIC(+N,0))[0 ^(0)=D S X=$D(@(DIK_"0)")),^(0)=D_U_$S(X#2:$P(^(0),U,3,9),1:U)
	S DIFQR=DIFQR(+N) I ^DD("VERSION")>17.5,$D(^DD(+N,0,"DIK"))#2 S X=^("DIK"),Y=+N,DMAX=^DD("ROU") D EN^DIKZ
	I DIFQR D IXALL^DIK:$O(@(DIK_"0)")) W "."
	Q
R	G REP^IBDINIT2
	;
1	S N=+$P(DIF(I),";",3),DIF=$P(DIF(I),";",4),S=$P(DIF(I),";",5)
	W !!?3,N,?13,DIF,$P("  (Partial Definition)",U,$P(DIF(I),";",6)),$P("  (including data)",U,$P(DIF(I),";",13)="y") S Z=$S($D(^DIC(N,0))#2:^(0),1:"")
	I Z="" S DIFQ(N)=1,DIFQN=$G(DIFQN)+1_U_N G S
	I $L($P(Z,DIF)) W $C(7),!,"*BUT YOU ALREADY HAVE '",$P(Z,U),"' AS FILE #",N,"!" D R Q:DIFQ  G S:$D(DIFKEP(N)),1
	S DIFQ(N)=$P(DIF(I),";",7)'="n"
	I $L(Z) W $C(7),!,"Note:  You already have the '",$P(Z,U),"' File." S DIFQ(0)=1
	S %=$E(^UTILITY("DIF",$J,I+1),4,245) I %]"" X % S DIFQ(N)=$T W:'$T !,"Screen on this Data Dictionary did not pass--DD will not be installed!" G S
	I $L(Z),$P(DIF(I),";",10)="y" S DIR("A")="Shall I write over the existing Data Definition",DIR("??")="^D DD^DIFROMH1",DIR("B")="YES",DIR(0)="Y" D ^DIR S DIFQ(N)=Y
S	S DIFQR(N)=0 Q:$P(DIF(I),";",13)'="y"!$D(DIRUT)
	I $P(DIF(I),";",15)="y",$O(@(S_"0)"))>0 S DIF=$P(DIF(I),";",14)="o",DIR("A")="Want my data "_$P("merged with^to overwrite",U,DIF+1)_" yours",DIR("??")="^D DTA^DIFROMH1",DIR(0)="Y" D ^DIR S DIFQR(N)=$S('Y:Y,1:Y+DIF) Q
	S %=$P(DIF(I),";",14)="o" W !,$C(7),"I will ",$P("MERGE^OVERWRITE",U,%+1)," your data with mine." S DIFQR(N)=%+1
	Q
Q	W $C(7),!!,"NO UPDATING HAS OCCURRED!" G Q^DIFROM0
	;
PKG	S X=$P($T(IXF),";",3),DIC="^DIC(9.4,",DIC(0)="",DIC("S")="I $P(^(0),U,2)="""_$P(X,U,2)_"""",X=$P(X,U) D ^DIC S DIFROM(0)=+Y K DIC
	Q
	;
IXF	;;AUTOMATED INFO COLLECTION SYS^IBD;1453

IBDINIT1
IBDINIT1	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	; LOADS AND INDEXES DD'S
	;
	K DIF,DIK,D,DDF,DDT,DTO,D0,DLAYGO,DIC,DIDUZ,DIR,DA,DFR,DTN,DIX,DZ D DT^DICRW S %=1,U="^",DSEC=1
	S NO=$P("I 0^I $D(@X)#2,X[U",U,%) I %<1 K DIFQ Q
ASK	I %=1,$D(DIFQ(0)) W !,"SHALL I WRITE OVER FILE SECURITY CODES" S %=2 D YN^DICN S DSEC=%=1 I %<1 K DIFQ Q
	F X="DIE","KEY","OPT" D W Q:'$D(DIFQ)
	Q:'$D(DIFQ)  S %=2 W !!,"ARE YOU SURE EVERYTHING'S OK" D YN^DICN I %-1 K DIFQ Q
	D ^IBD21IN D NOW^%DTC S DIFROM("INI")=%
	I $D(DIFKEP) F DIDIU=0:0 S DIDIU=$O(DIFKEP(DIDIU)) Q:DIDIU'>0  S DIU=DIDIU,DIU(0)=DIFKEP(DIDIU) D EN^DIU2
	D DT^DICRW K ^UTILITY(U,$J),^UTILITY("DIK",$J) D WAIT^DICD
	S DN="^IBDIN" F R=1:1:155 D @(DN_$$B36(R)) W "."
	F  S D=$O(^UTILITY(U,$J,"SBF","")) Q:D'>0  K:'DIFQ(D) ^(D) S D=$O(^(D,"")) I D>0  K ^(D) D IX
DATA	W "." S (D,DDF(1),DDT(0))=$O(^UTILITY(U,$J,0)) Q:D'>0
	I DIFQR(D) S DTO=0,DMRG=1,DTO(0)=^(D),Z=^(D)_"0)",D0=^(D,0),@Z=D0,DFR(1)="^UTILITY(U,$J,DDF(1),D0,",DKP=DIFQR(D)'=2 F D0=0:0 S D0=$O(^UTILITY(U,$J,DDF(1),D0)) S:D0="" D0=-1 Q:'$D(^(D0,0))  S Z=^(0) D I^DITR
	K ^UTILITY(U,$J,DDF(1)),DDF,DDT,DTO,DFR,DFN,DTN G DATA
	;
W	S Y=$P($T(@X),";",2) W !,"NOTE: This package also contains "_Y_"S",! Q:'$D(DIFQ(0))
	S %=1 W ?6,"SHALL I WRITE OVER EXISTING "_Y_"S OF THE SAME NAME" D YN^DICN I '% W !?6,"Answer YES to replace the current "_Y_"S with the incoming ones." G W
	S:%=2 DIFQ(X)=0 K:%<0 DIFQ
	Q
	;
OPT	;OPTION
RTN	;ROUTINE DOCUMENTATION NOTE
FUN	;FUNCTION
BUL	;BULLETIN
KEY	;SECURITY KEY
HEL	;HELP FRAME
DIP	;PRINT TEMPLATE
DIE	;INPUT TEMPLATE
DIB	;SORT TEMPLATE
DIS	;FORM
	;
SBF	;FILE AND SUB FILE NUMBERS
IX	W "." S DIK="A" F %=0:0 S DIK=$O(^DD(D,DIK)) Q:DIK=""  K ^(DIK)
	S DA(1)=D,DIK="^DD("_D_"," D IXALL^DIK
	I $D(^DIC(D,"%",0)) S DIK="^DIC(D,""%""," G IXALL^DIK
	Q
B36(X)	Q $$N(X\(36*36)#36+1)_$$N(X\36#36+1)_$$N(X#36+1)
N(%)	Q $E("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",%)

IBDINIT2
IBDINIT2	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
	K ^UTILITY("DIFROM",$J),DIC S DIDUZ=0 S:$D(DUZ)#2 DIDUZ=DUZ S DUZ=.5
	I $D(^DIC(9.2,0))#2,^(0)?1"HEL".E S (DIC,DLAYGO)=9.2,N="HEL",DIC(0)="LX" G ADD
	Q
	;
ADD	F R=0:0 S R=$O(^UTILITY(U,$J,N,R)) Q:R'>0  S X=$P(^(R,0),U,1) W "." K DA D ^DIC I Y>0,'$D(DIFQ(N))!$P(Y,U,3) S ^UTILITY("DIFROM",$J,N,X)=+Y K ^DIC(9.2,+Y,1),^(2),^(3),^(10) S %X="^UTILITY(U,$J,N,R,",%Y=DIC_"+Y,",DA=+Y D %XY^%RCR
	S DIK=DIC
HELP	S R=$O(^UTILITY("DIFROM",$J,N,R)) Q:R=""  W !,"'"_R_"' Help Frame filed." S DA=^(R)
	F X=0:0 S X=$O(^DIC(9.2,DA,2,X)) Q:'X  S I=$S($D(^(X,0)):^(0),1:0),Y=$P(I,U,2) S:Y]"" Y=$O(^DIC(9.2,"B",Y,0)) S ^(0)=$P(^DIC(9.2,DA,2,X,0),U,1)_U_$S(Y>0:Y,1:"")_U_$P(^(0),U,3,99)
	S I=0 F X=0:0 S X=$O(^DIC(9.2,DA,10,X)) Q:'X  I $D(^(X,0)) S Y=$P(^(0),U),Y=$S(Y]"":$O(^MAG("B",Y,0)),1:0) S:Y $P(^DIC(9.2,DA,10,X,0),U)=Y,I=I+1,%=X I 'Y K ^DIC(9.2,DA,10,X,0)
	I I S $P(^DIC(9.2,DA,10,0),U,3,4)=%_U_I
IX	D IX1^DIK G HELP
	;
U	I $D(DIRUT) S DIFQ=1
	W ! Q
REP	S DIR(0)="Y",DIR("A")="Shall I change the NAME of the file to "_DIF
	S DIR("??")="^D REP^DIFROMH1",DIR("B")="NO" D ^DIR G U:$D(DIRUT)
	I Y S DIE=1,DIFQ=0,DA=N,DR=".01////"_DIF D ^DIE Q
	S DIR("A")="Shall I replace your file with mine"
	S DIR("??")="^D AG^DIFROMH1" D ^DIR G U:$D(DIRUT)!'Y
	S DIU(0)="E",DIR("A")="Do you want to keep the Data"
	S DIR("??")="^D CHG^DIFROMH1" D ^DIR G U:$D(DIRUT)
	S:'Y DIU(0)=DIU(0)_"D"
	S DIR("A")="Do you want to keep the Templates"
	S DIR("??")="^D TEMP^DIFROMH1" D ^DIR G U:$D(DIRUT) S:'Y DIU(0)=DIU(0)_"T"
	S DIFQ(N)=1,DIFKEP(N)=DIU(0) W !?15," (",DIF,") " Q

IBDINIT3
IBDINIT3	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
	K ^UTILITY("DIFROM",$J) S DIC(0)="LX",(DIC,DLAYGO)=3.6,N="BUL" D ADD:$D(^XMB(3.6,0))
	S X=0 F R=0:0 S X=$O(^UTILITY("DIFROM",$J,N,X)) Q:X=""  W !,"'",X,"' BULLETIN FILED -- Remember to add mail groups for new bulletins."
	I $D(^DIC(9.4,0))#2,^(0)?1"PACK".E S N="PKG",(DIC,DLAYGO)=9.4 D ADD
	G NP:'$D(DA) S %=+$O(^DIC(9.4,DA,22,"B",DIFROM,0)) I $D(^DIC(9.4,DA,22,%,0)) S $P(^(0),U,3)=DT
	I $D(^DIC(9.4,DA,0))#2 S %=$P(^(0),U,4) I %]"" S %=$O(^DIC(9.2,"B",%,0)) S:%]"" $P(^DIC(9.4,DA,0),U,4)=%
OR	I $D(^ORD(100.99))&$O(^UTILITY(U,$J,"OR","")) D EN^IBDINIT4
NP	K DIC,^UTILITY("DIFROM",$J) S DIC(0)="LX" I $D(^DIC(19,0))#2,^(0)?1"OPTION".E S (DIC,DLAYGO)=19,N="OPT" D ADD,OP
	I $D(^DIC(19.1,0))#2,($P(^(0),U)?1"SECUR".E)!($P(^(0),U)="KEY") S (DIC,DLAYGO)=19.1,N="KEY" D ADD K ^UTILITY("DIFROM",$J)
	I $D(^DIC(9.8,0))#2,^(0)?1"ROUTINE^".E S (DIC,DLAYGO)=9.8,N="RTN" D ADD
	S DIC=.5,DLAYGO=0,N="FUN" D ADD
	S DIC("S")="I $P(^(0),U,4)=DIFL" F N="DIPT","DIBT","DIE" S DIC=U_N_"(" D ADD
	K DIC("S") S N="DIST(.404,",DIC=U_N,DLAYGO=.404 D ADD
	S DIC("S")="I $P(^(0),U,8)=DIFL",N="DIST(.403,",DIC=U_N,DLAYGO=.403 D ADD
	K ^UTILITY(U,$J),DIC,DLAYGO F DIFR="DIE","DIPT" D DIEZ
	K ^UTILITY("DIFROM",$J) Q
DIEZ	I ^DD("VERSION")>17.4,'$D(DISYS) D OS^DII
	E  S DISYS=^DD("OS")
	Q:'$D(^DD("OS",DISYS,"ZS"))
	S DIFR1=""
DZ1	S DIFR1=$O(^UTILITY("DIFROM",$J,DIFR,DIFR1)) Q:DIFR1=""
	F DIFR2=0:0 S DIFR2=$O(^UTILITY("DIFROM",$J,DIFR,DIFR1,DIFR2)) Q:'DIFR2  S Y=DIFR2 I $D(@(U_DIFR_"(Y,""ROU"")")) K ^("ROU") I $D(^("ROUOLD")) S X=^("ROUOLD"),DMAX=^DD("ROU") D:X]"" @("EN^DI"_$E(DIFR,3)_"Z")
	G DZ1
	;
OP	S R=$O(^UTILITY("DIFROM",$J,N,R)) I R="" K ^UTILITY("DIFROM",$J) G Q
	W !,"'"_R_"' Option Filed" S DA=+^UTILITY("DIFROM",$J,N,R) G:$P(^(R),U,2,3)="XUCORE^"!($P(^(R),U,2,3)="XUCOMMAND^") OP
	I $D(^DIC(19,DA,220)) S %=$P(^(220),U) S:%]"" %=$O(^XMB(3.6,"B",%,0)) S $P(^DIC(19,DA,220),U)=%,%=$P(^(220),U,3) S:%]"" %=$O(^XMB(3.8,"B",%,0)) S $P(^DIC(19,DA,220),U,3)=%
	S %=$P(^DIC(19,DA,0),U,12) S:%]"" %=$O(^DIC(9.4,"B",%,0))
	S $P(^DIC(19,DA,0),U,12)=%,%=$P(^(0),U,7),(DZ,DIX)=0
	D:$D(^DIC(19,DA,10,"B")) KAD(DA) S:%]"" %=$O(^DIC(9.2,"B",%,0)) S $P(^DIC(19,DA,0),U,7)=%,%=$P(^(0),U,4),%="MOQXL"[% K ^(10,"B"),^("C")
	F X=0:0 S X=$O(^DIC(19,DA,10,X)) Q:'X  S I=$S($D(^(X,0)):^(0),1:0),Y=$S($D(^(U)):^(U),1:"") K ^DIC(19,DA,10,X) I Y]"",% S D=$O(^DIC(19,"B",Y,0)) I D S ^DIC(19,DA,10,X,0)=D_U_$P(I,U,2,9),DZ=DZ+1,DIX=X
	S:% ^DIC(19,DA,10,0)="^19.01PI^"_DIX_U_DZ D IX1^DIK G OP
	;
ADD	F R=0:0 S R=$O(^UTILITY(U,$J,N,R)) Q:R=""  S X=$P(^(R,0),U),DIFL=$S(N="DIST(.403,":$P(^(0),U,8),N="DIST(.404,":$P(^(0),U,2),1:$P(^(0),U,4)) W "." K DA D ^DIC I Y>0,'$D(DIFQ($E(N,1,3)))!$P(Y,U,3) S Y=Y_U D A
Q	Q
A	I N="BUL" K % S %(0)=$G(@(DIC_"+Y,2,0)")) F %=0:0 S %=$O(@(DIC_"+Y,2,%)")) Q:'%  S %(%)=$G(^(%,0))
	K:N'="KEY"&(N'="OPT") @(DIC_"+Y)") S ^UTILITY("DIFROM",$J,N,X)=Y S:$E(N,1,2)="DI" ^(X,+Y)="" S:N="PKG" DIFROM(0)=+Y Q:$P(Y,U,2,3)="XUCORE^"!($P(Y,U,2,3)="XUCOMMAND^")
	I N="BUL",%(0)]"" S @(DIC_"+Y,2,0)")=%(0) F %=0:0 S %=$O(%(%)) Q:'%  S @(DIC_"+Y,2,%,0)")=%(%)
	I $E(N,1,2)="DI",('DIFL)!('$D(^DD(+DIFL))) D
	.W !,"**WARNING--"_$S(N="DIE":"INPUT",N="DIPT":"PRINT",N="DIBT":"SORT",1:"FORM or BLOCK")_$S(N'["DIST":" template ",1:" ")_$P(Y,U,2)_" has been installed,",!,"but associated file "_DIFL_" is not on your system!"
	.Q
	I N="OPT" S:$P(^DIC(19,+Y,0),U,6)]"" DIOPT=$P(^(0),U,6) I $O(^UTILITY(U,$J,N,R,1,0)) K ^DIC(19,+Y,1)
	I N="DIST(.403," D BLK
	S %X="^UTILITY(U,$J,N,R,",%Y=DIC_"+Y,",DA=+Y,DIK=DIC D %XY^%RCR
	D IX1^DIK:N'="OPT" I N="OPT",$D(DIOPT) S:$P(^DIC(19,DA,0),U,6)="" $P(^(0),U,6)=DIOPT K DIOPT
	I N="DIST(.403," D
	.N DIFRVAL S DIFRVAL=$$VAL^DIFROMSS(.403,DA)
	.I DIFRVAL W !,"Compiling form: ",$P(^DIST(.403,DA,0),U) D EN^DDSZ(DA) Q
	.W !,"ERROR: Form: ",$P(^DIST(.403,DA,0),U)," cannot be compiled"
	.Q
	Q
BLK	F J=0:0 S J=$O(^UTILITY(U,$J,N,R,40,J)) Q:'J  I $D(^(J,0)) S %=$P(^(0),U,2) S:%]"" %=$O(^DIST(.404,"B",%,0)) S:% $P(^UTILITY(U,$J,N,R,40,J,0),U,2)=% D B1
	K A0,A1,A2,J,L Q
B1	F L=0:0 S L=$O(^UTILITY(U,$J,N,R,40,J,40,L)) Q:'L  S A0=$G(^(L,0)),%=$P(A0,U) I %]"" S %=$O(^DIST(.404,"B",%,0)) I % S $P(A0,U)=%,^UTILITY(U,$J,N,R,40,J,"BLK",%,0)=A0 D
	.N X S X=0
	.F  S X=$O(^UTILITY(U,$J,N,R,40,J,40,L,X)) Q:X=""  S ^UTILITY(U,$J,N,R,40,J,"BLK",%,X)=^(X)
	.Q
	S A0=$G(^UTILITY(U,$J,N,R,40,J,40,0)) Q:A0=""  K ^UTILITY(U,$J,N,R,40,J,40) S (A1,A2)=0
	F L=0:0 S L=$O(^UTILITY(U,$J,N,R,40,J,"BLK",L)) Q:'L  S ^UTILITY(U,$J,N,R,40,J,40,L,0)=^(L,0),A1=L,A2=A2+1 D
	.N X S X=0
	.F  S X=$O(^UTILITY(U,$J,N,R,40,J,"BLK",L,X)) Q:X=""  S ^UTILITY(U,$J,N,R,40,J,40,L,X)=^(X)
	.Q
	S $P(A0,U,3,4)=A1_U_A2,^UTILITY(U,$J,N,R,40,J,40,0)=A0 K ^UTILITY(U,$J,N,R,40,J,"BLK")
	Q
KAD(D0)	N D1,X
	S X=0 F  S X=$O(^DIC(19,D0,10,"B",X)) Q:X'>0  S D1=0 F  S D1=$O(^DIC(19,D0,10,"B",X,D1)) Q:D1'>0  K ^DIC(19,"AD",X,D0,D1)
	Q

IBDINIT4
IBDINIT4	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
EN	S DA(1)=1,DIK="^ORD(100.99,1,5," I $D(^ORD(100.99,1,5,DA)) D ^DIK
	S %X="^UTILITY(U,$J,""OR"","_$O(^UTILITY(U,$J,"OR",""))_",",%Y=DIK_DA_","
	S:'$D(^ORD(100.99,1,5,0)) ^(0)="^100.995P^^" S $P(^(0),U,3,4)=DA_U_($P(^(0),U,4)+1)
	D %XY^%RCR S $P(^ORD(100.99,1,5,DA,0),U)=DA,%=$P(^(0),U,4)
	I %]"" S %=$O(^ORD(100.98,"B",%,0)) I %>0 S $P(^ORD(100.99,1,5,DA,0),U,4)=%
	D OR
	S DA(1)=1 D IX1^DIK
	Q
OR	S (N,I)=0,X=""
	F  S N=$O(^ORD(100.99,1,5,DA,1,N)) Q:'N  S X=$P(^(N,0),U) I X]"" S %=$O(^ORD(101,"B",X,0)) D:'% ADDP S:% ^ORD(100.99,1,5,DA,1,N,0)=% S X=N,I=I+1,(R,J)=0,Y="" D OR1
	S:I $P(^ORD(100.99,1,5,DA,1,0),U,3,4)=X_U_I S (N,I)=0,X=""
	F  S N=$O(^ORD(100.99,1,5,DA,5,N)) Q:'N  S X=$P(^(N,0),U,3) I X]"" S %=$O(^ORD(101,"B",X,0)) D:'% ADDP S:% $P(^ORD(100.99,1,5,DA,5,N,0),U,3)=% S X=N,I=I+1
	S:I $P(^ORD(100.99,1,5,DA,5,0),U,3,4)=X_U_I K N,R,X,Y,I,J
	Q
OR1	N X F  S R=$O(^ORD(100.99,1,5,DA,1,N,1,R)) Q:'R  S X=$P(^(R,0),U) I X]"" S %=$O(^ORD(101,"B",X,0)) D:'% ADDP S:% ^ORD(100.99,1,5,DA,1,N,1,R,0)=% S Y=R,J=J+1
	S:J $P(^ORD(100.99,1,5,DA,1,N,1,0),U,3,4)=Y_U_J
	Q
ADDP	N I,J,N,R,DA,DLAYGO S %=""
	S DIC="^ORD(101,",DIC(0)="LX",DLAYGO=101 D FILE^DICN K DIC Q:Y=-1  S %=+Y Q

IBDINIT5
IBDINIT5	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	K ^UTILITY("DIF",$J) S DIFRDIFI=1 F I=1:1:84 S ^UTILITY("DIF",$J,DIFRDIFI)=$T(IXF+I),DIFRDIFI=DIFRDIFI+1
	Q
IXF	;;AUTOMATED INFO COLLECTION SYS^IBD
	;;43;MAS PARAMETERS;^DG(43,;1;y;n;;n;;;n
	;;
	;;357I;ENCOUNTER FORM;^IBE(357,;0;y;y;;n;;;n;o;y
	;;
	;;357.08D;AICS PURGE LOG;^IBD(357.08,;0;y;y;;n;;;n
	;;
	;;357.09;ENCOUNTER FORM PARAMETERS;^IBD(357.09,;0;y;y;;n;;;n;m;y
	;;
	;;357.1I;ENCOUNTER FORM BLOCK;^IBE(357.1,;0;y;y;;n;;;n;o;y
	;;
	;;357.2I;SELECTION LIST;^IBE(357.2,;0;y;y;;n;;;n;o;y
	;;
	;;357.3I;SELECTION;^IBE(357.3,;0;y;y;;n;;;n;o;y
	;;
	;;357.4I;SELECTION GROUP;^IBE(357.4,;0;y;y;;n;;;n;o;y
	;;
	;;357.5I;DATA FIELD;^IBE(357.5,;0;y;y;;n;;;n;o;y
	;;
	;;357.6I;PACKAGE INTERFACE;^IBE(357.6,;0;y;y;;n;;;y;m;n
	;;
	;;357.69IP;TYPE OF VISIT;^IBE(357.69,;0;y;y;;n;;;y;m;n
	;;
	;;357.7I;FORM LINE;^IBE(357.7,;0;y;y;;n;;;n;o;y
	;;
	;;357.8;TEXT AREA;^IBE(357.8,;0;y;y;;n;;;n;o;y
	;;
	;;357.91;MARKING AREA TYPE;^IBE(357.91,;0;y;y;;n;;;y;o;y
	;;
	;;357.92;PRINT CONDITIONS;^IBE(357.92,;0;y;y;;n;;;y;o;n
	;;
	;;357.93;MULTIPLE CHOICE FIELD;^IBE(357.93,;0;y;y;;n;;;n;o;y
	;;
	;;357.94P;ENCOUNTER FORM PRINTERS;^IBE(357.94,;0;y;y;;n;;;n;o;y
	;;
	;;357.95I;FORM DEFINITION;^IBD(357.95,;0;y;y;;n;;;n;m;y
	;;
	;;357.96I;ENCOUNTER FORM TRACKING;^IBD(357.96,;0;y;y;;n;;;n;m;y
	;;
	;;357.97;ENCOUNTER FORM COUNTERS;^IBD(357.97,;0;y;y;;n;;;n;o;y
	;;
	;;357.98I;AICS DATA QUALIFIERS;^IBD(357.98,;0;y;y;;n;;;y;m;n
	;;
	;;357.99;PRINT MANAGER CLINIC GROUPS;^IBD(357.99,;0;y;y;;n;;;n;m;y
	;;
	;;358I;IMP/EXP ENCOUNTER FORM;^IBE(358,;0;y;y;;n;;;n
	;;
	;;358.1I;IMP/EXP ENCOUNTER FORM BLOCK;^IBE(358.1,;0;y;y;;n;;;n
	;;
	;;358.2I;IMP/EXP SELECTION LIST;^IBE(358.2,;0;y;y;;n;;;n
	;;
	;;358.3I;IMP/EXP SELECTION;^IBE(358.3,;0;y;y;;n;;;n
	;;
	;;358.4I;IMP/EXP SELECTION GROUP;^IBE(358.4,;0;y;y;;n;;;n
	;;
	;;358.5I;IMP/EXP DATA FIELD;^IBE(358.5,;0;y;y;;n;;;n
	;;
	;;358.6I;IMP/EXP PACKAGE INTERFACE;^IBE(358.6,;0;y;y;;n;;;n
	;;
	;;358.7I;IMP/EXP FORM LINE;^IBE(358.7,;0;y;y;;n;;;n
	;;
	;;358.8;IMP/EXP TEXT AREA;^IBE(358.8,;0;y;y;;n;;;n
	;;
	;;358.91;IMP/EXP MARKING AREA;^IBE(358.91,;0;y;y;;n;;;n
	;;
	;;358.93;IMP/EXP MULTIPLE CHOICE FIELD;^IBE(358.93,;0;y;y;;n;;;n
	;;
	;;358.94;IMP/EXP HAND PRINT FIELD;^IBE(358.94,;0;y;y;;n;;;n
	;;
	;;358.98I;IMP/EXP AICS DATA QUALIFIERS;^IBD(358.98,;0;y;y;;n;;;n
	;;
	;;358.99;IMP/EXP AICS DATA ELEMENTS;^IBE(358.99,;0;y;y;;n;;;n
	;;
	;;359P;CONVERTED FORMS;^IBD(359,;0;y;y;;n;;;n
	;;
	;;359.1;AICS DATA ELEMENTS;^IBE(359.1,;0;y;y;;n;;;y;o;n
	;;
	;;359.2I;FORM SPECS;^IBD(359.2,;0;y;y;;n;;;n;o;n
	;;
	;;359.94;HAND PRINT FIELD;^IBE(359.94,;0;y;y;;n;;;n
	;;
	;;409.95P;PRINT MANAGER CLINIC SETUP;^SD(409.95,;0;y;n;;n;;;n
	;;
	;;409.96P;PRINT MANAGER DIVISION SETUP;^SD(409.96,;0;y;n;;n;;;n
	;;

IBDL
IBDL	; List Template Exporter ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	W !,"'IBDE IMP/EXP FORMS' List Template..."
	S DA=$O(^SD(409.61,"B","IBDE IMP/EXP FORMS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDE IMP/EXP FORMS" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDE IMP/EXP FORMS^1^1^123^7^18^1^1^FORM FOR IMP/EXP^IBDE IMP/EXP MENU FOR FORMS^Import/Export Work Space^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBDF"",$J,""IMP/EXP WS"",""FORMS"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^3^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="FORM NAME^6^30^FORM NAME^"
	.S ^SD(409.61,VALM,"COL",3,0)="BRIEF DESCRIPTION^38^80^USE & BRIEF DESCRIPTION^"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D ONEXIT^IBDE"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDE"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D ONENTRY^IBDE"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDE IMP/EXP TK BLOCKS' List Template..."
	S DA=$O(^SD(409.61,"B","IBDE IMP/EXP TK BLOCKS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDE IMP/EXP TK BLOCKS" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDE IMP/EXP TK BLOCKS^1^1^123^7^18^1^1^BLOCK FOR IMP/EXP^IBDE IMP/EXP MENU FOR BLOCKS^Import/Export Work Space^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBDF"",$J,""IMP/EXP WS"",""BLOCKS"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^3^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="BLOCK NAME^6^30^BLOCK NAME^"
	.S ^SD(409.61,VALM,"COL",3,0)="BRIEF DESCRIPTION^38^80^USE & BRIEF DESCRIPTION^"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D ONEXIT^IBDE3"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDE3"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D ONENTRY^IBDE3"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDE TEXT DISPLAY' List Template..."
	S DA=$O(^SD(409.61,"B","IBDE TEXT DISPLAY",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDE TEXT DISPLAY" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDE TEXT DISPLAY^2^1^132^4^20^1^1^TEXT^^TEXT DISPLAY^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D TEXT^IBDE1"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF CLINIC FORM LIST' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF CLINIC FORM LIST",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF CLINIC FORM LIST" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF CLINIC FORM LIST^1^^123^5^18^1^1^FORM^IBDF CLINIC'S FORMS MENU^LIST OF FORMS FOR CLINIC^1"
	.S ^SD(409.61,VALM,1)="^IBDF HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IB"",$J,""FORM LIST"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^3^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="FORM NAME^6^30^FORM NAME^"
	.S ^SD(409.61,VALM,"COL",3,0)="BRIEF DESCRIPTION^38^80^USE & BRIEF DESCRIPTION^H"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"EXP")=""
	.S ^SD(409.61,VALM,"FNL")="D ONEXIT^IBDF6"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDF6"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D ONENTRY^IBDF6"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF DISPLAY FORM FOR EDIT' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF DISPLAY FORM FOR EDIT",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF DISPLAY FORM FOR EDIT" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF DISPLAY FORM FOR EDIT^1^^200^4^18^1^1^FORM^IBDF MENU FOR EDITING DISPLAYED FORM^EDIT ENCOUNTER FORM^1"
	.S ^SD(409.61,VALM,1)="^IBDF HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IB"",$J,""FORM"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ROW^1^3^^^1"
	.S ^SD(409.61,VALM,"COL",2,0)="FORM LEFT SIDE^5^79^123456789 123456789 123456789 123456789 123456789 123456789 123456789 12345678"
	.S ^SD(409.61,VALM,"COL",3,0)="FORM RIGHT SIDE^85^80^123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDF5"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDF5"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDF5"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	G ^IBDL1

IBDL1
IBDL1	; List Template Exporter ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	W !,"'IBDF DISPLAY GROUPS FOR EDIT' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF DISPLAY GROUPS FOR EDIT",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF DISPLAY GROUPS FOR EDIT" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF DISPLAY GROUPS FOR EDIT^1^^80^4^18^1^1^SELECTION LIST PRINT GROUP^IBDF EDIT SELECTION LIST MENU^Edit Selection List^1"
	.S ^SD(409.61,VALM,1)="^IBDF HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IB"",$J,""GROUPS"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^4^4"
	.S ^SD(409.61,VALM,"COL",1,0)="PRINT ORDER^8^6^ORDER^R^0"
	.S ^SD(409.61,VALM,"COL",2,0)="HEADER^20^40^HEADER^"
	.S ^SD(409.61,VALM,"COL",3,0)="CONTAINS^65^8^CONTAINS"
	.S ^SD(409.61,VALM,"COL",4,0)="ID^1^2^^R^1"
	.S ^SD(409.61,VALM,"COL","AIDENT",0,1)=""
	.S ^SD(409.61,VALM,"COL","AIDENT",1,4)=""
	.S ^SD(409.61,VALM,"FNL")="D ONEXIT^IBDF3"
	.S ^SD(409.61,VALM,"HDR")="D LMGRPHDR^IBDF3"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D ONENTRY^IBDF3"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF EDIT GROUP'S SELECTIONS' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF EDIT GROUP'S SELECTIONS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF EDIT GROUP'S SELECTIONS" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF EDIT GROUP'S SELECTIONS^1^1^150^4^20^1^1^SELECTION^IBDF EDIT GROUP'S SELECTIONS MENU^Edit Group's Selections^1^^1"
	.S ^SD(409.61,VALM,1)="^IBDF HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IB"",$J,""SELECTIONS"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^3^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="SELECTION^16^80^****************   SELECTIONS   ****************"
	.S ^SD(409.61,VALM,"COL",3,0)="ORDER^8^6^ORDER"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D ONEXIT^IBDF4"
	.S ^SD(409.61,VALM,"HDR")="D LMGRPHDR^IBDF4"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D ONENTRY^IBDF4"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF EDIT TOOL KIT BLOCKS' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF EDIT TOOL KIT BLOCKS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF EDIT TOOL KIT BLOCKS" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF EDIT TOOL KIT BLOCKS^1^^160^4^20^1^1^TOOL KIT BLOCK^IBDF EDIT TOOL KIT BLOCKS MENU^EDIT TOOL KIT BLOCKS^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBDF"",$J,""TOOL KIT BLOCK LIST"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^4^4"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^3^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="BLOCK NAME^6^30^BLOCK NAME"
	.S ^SD(409.61,VALM,"COL",3,0)="BRIEF DESCRIPTION^43^80^BRIEF DESCRIPTION"
	.S ^SD(409.61,VALM,"COL",4,0)="TK ORDER^38^4^TK#"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDF7"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBDF7"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDF7"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF EF CLINIC GROUP LT' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF EF CLINIC GROUP LT",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF EF CLINIC GROUP LT" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF EF CLINIC GROUP LT^1^^80^5^19^1^1^Clinic Group^IBDF EF CLINIC GROUP MENU^Clinic Groups/Clinics List^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBDFCG"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="CLINIC GROUP^2^26^CLINIC GROUP"
	.S ^SD(409.61,VALM,"COL",2,0)="DIVISION^28^26^DIVISION"
	.S ^SD(409.61,VALM,"COL",3,0)="CLINIC NAME^56^24^CLINIC NAME"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDFCG"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDFCG"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBDFCG"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDFCG"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF EF HELP SPEC INSTR.' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF EF HELP SPEC INSTR.",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF EF HELP SPEC INSTR." D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF EF HELP SPEC INSTR.^1^^80^2^21^1^1^Special Instructions Help^IBDF EF HELP MENU^Special Instructions Help^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBDFHP"",$J)"
	.S ^SD(409.61,VALM,"EXP")="D EXP^IBDFHLP"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDFHLP"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDFHLP"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBDFHLP"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDFHLP"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	G ^IBDL2

IBDL2
IBDL2	; List Template Exporter ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	W !,"'IBDF EF QUEUE PARMS' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF EF QUEUE PARMS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF EF QUEUE PARMS" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF EF QUEUE PARMS^1^^80^5^18^1^1^Parameter Group^IBDF EF QUEUE PARMS MENU^Print Mgrs. Queuing Params.^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBDRPT"",$J)"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDFPE"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDFPE"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBDFPE"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDFPE"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF FORM BLOCK EDIT' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF FORM BLOCK EDIT",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF FORM BLOCK EDIT" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF FORM BLOCK EDIT^1^^200^4^18^1^1^FORM BLOCK^IBDF EDIT FORM BLOCK MENU^EDITING A FORM BLOCK^1"
	.S ^SD(409.61,VALM,1)="^IBDF HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IB"",$J,""FORM BLOCK"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ROW^1^3^^^1"
	.S ^SD(409.61,VALM,"COL",2,0)="BLOCK LEFT SIDE^5^80^123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789"
	.S ^SD(409.61,VALM,"COL",3,0)="BLOCK RIGHT SIDE^85^80^123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDF9"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDF9"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDF9"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF FT REPORT' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF FT REPORT",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF FT REPORT" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF FT REPORT^1^^80^5^19^1^1^Entry^IBDF FT MENU^Form Tracking Status Report^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""FRM"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^6^6"
	.S ^SD(409.61,VALM,"COL",1,0)="FORM ID^7^8^FORM ID"
	.S ^SD(409.61,VALM,"COL",2,0)="PATIENT^17^15^PATIENT/CLINIC"
	.S ^SD(409.61,VALM,"COL",3,0)="APPOINTMENT^34^14^APPT. D/T"
	.S ^SD(409.61,VALM,"COL",4,0)="FORM PRINTED^50^10^PRINTED"
	.S ^SD(409.61,VALM,"COL",5,0)="DATA IN DHCP^62^10^SCANNED"
	.S ^SD(409.61,VALM,"COL",6,0)="STATUS^74^6^STATUS"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDFFT"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDFFT"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBDFFT"
	.S ^SD(409.61,VALM,"INIT")="D START^IBDFFT1"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF FT STATS' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF FT STATS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF FT STATS" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF FT STATS^1^^80^5^19^1^1^Entry^IBDF FT STATS MENU^Statistics Report^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""STATS"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^8^7"
	.S ^SD(409.61,VALM,"COL",1,0)="CLINIC^5^20^CLINIC"
	.S ^SD(409.61,VALM,"COL",2,0)="TOTAL^27^5^TOTAL"
	.S ^SD(409.61,VALM,"COL",3,0)="PRINTED^34^6^#PRNTD"
	.S ^SD(409.61,VALM,"COL",4,0)="PRINTED %^42^6^%PRNTD"
	.S ^SD(409.61,VALM,"COL",5,0)="SCANNED^50^7^#SCND"
	.S ^SD(409.61,VALM,"COL",6,0)="%SCANNED^59^6^%SCND"
	.S ^SD(409.61,VALM,"COL",8,0)="AVG DAYS SCANNED^67^13^AVG DAYS SCND"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDFST"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDFST"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBDFST"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDFST"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF FT STATUS SELECT' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF FT STATUS SELECT",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF FT STATUS SELECT" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF FT STATUS SELECT^1^^80^5^19^1^1^Entry^IBDF FT STATUS SELECT MENU^Status Select Report^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""SSEL"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^6^6"
	.S ^SD(409.61,VALM,"COL",1,0)="FORM ID^7^8^FORM ID"
	.S ^SD(409.61,VALM,"COL",2,0)="PATIENT^17^15^PATIENT/CLINIC"
	.S ^SD(409.61,VALM,"COL",3,0)="APPOINTMENT^34^14^APPT. D/T"
	.S ^SD(409.61,VALM,"COL",4,0)="FORM PRINT^50^10^PRINTED"
	.S ^SD(409.61,VALM,"COL",5,0)="SCANNED^62^10^SCANNED"
	.S ^SD(409.61,VALM,"COL",6,0)="STATUS^74^6^STATUS"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDFSS"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDFSS"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBDFSS"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDFSS"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	G ^IBDL3

IBDL3
IBDL3	; List Template Exporter ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	W !,"'IBDF QUICK GRP COPY' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF QUICK GRP COPY",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF QUICK GRP COPY" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF QUICK GRP COPY^1^^80^5^20^1^1^Group^IBDF QUICK GRP MENU^IBDF QUICK GRP COPY^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""GRP"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^5^5"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^2^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="CODE^7^7^CODE"
	.S ^SD(409.61,VALM,"COL",3,0)="CODE TEXT^23^37^NARRATIVE"
	.S ^SD(409.61,VALM,"COL",4,0)="GROUP^64^15^GROUP"
	.S ^SD(409.61,VALM,"COL",5,0)="ORDER^16^5^ORDER"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDFGRP"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDFQSL1"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBDFGRP"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDFGRP"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF QUICK SELECTION EDIT' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF QUICK SELECTION EDIT",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF QUICK SELECTION EDIT" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF QUICK SELECTION EDIT^1^^80^5^18^1^1^Selection List^IBDF QUICK EDIT ACTIONS MENU^Selection List Display^1^^"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""SEL"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^6^5"
	.S ^SD(409.61,VALM,"COL",1,0)="CODE^7^7^CODE"
	.S ^SD(409.61,VALM,"COL",2,0)="CODE TEXT^23^37^NARRATIVE"
	.S ^SD(409.61,VALM,"COL",4,0)="GROUP^64^15^GROUP"
	.S ^SD(409.61,VALM,"COL",5,0)="ID^1^2^^R^1"
	.S ^SD(409.61,VALM,"COL",6,0)="ORDER^16^5^ORDER"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,5)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDFQSL1"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDFQSL1"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBDFQSL1"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDFQSL1"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF TOOL KIT BLOCK LIST' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF TOOL KIT BLOCK LIST",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF TOOL KIT BLOCK LIST" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF TOOL KIT BLOCK LIST^1^^160^4^20^1^1^TOOL KIT BLOCK^IBDF MENU FOR ADDING TOOL KIT BLOCK^LIST OF TOOL KIT BLOCKS^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBDF"",$J,""TOOL KIT BLOCK LIST"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^3^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="BLOCK NAME^6^30^BLOCK NAME"
	.S ^SD(409.61,VALM,"COL",3,0)="BRIEF DESCRIPTION^37^80^BRIEF DESCRIPTION"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDF7"
	.S ^SD(409.61,VALM,"HDR")=""
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBDF7"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDF7"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF TOOL KIT FORMS' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF TOOL KIT FORMS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF TOOL KIT FORMS" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF TOOL KIT FORMS^1^^123^5^20^1^1^FORM^IBDF TOOL KIT FORMS MENU^LIST OF TOOL KIT FORMS^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IB"",$J,""FORM LIST"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^3^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="FORM NAME^6^30^FORM NAME"
	.S ^SD(409.61,VALM,"COL",3,0)="BRIEF DESCRIPTION^38^80^BRIEF DESCRIPTION^H"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D ONEXIT^IBDF12"
	.S ^SD(409.61,VALM,"HDR")=""
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D ONENTRY^IBDF12"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF UTIL COMPLETE LIST TEMP' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF UTIL COMPLETE LIST TEMP",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF UTIL COMPLETE LIST TEMP" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF UTIL COMPLETE LIST TEMP^1^^80^5^18^1^1^Entry^IBDF UTIL COMPLETE LIST MENU^Complete Invalid List^3^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""CODE"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="CODE^7^8^CODE"
	.S ^SD(409.61,VALM,"COL",2,0)="CODE TEXT^17^25^DESCRIPTION"
	.S ^SD(409.61,VALM,"COL",3,0)="CATEGORY^44^25^CATEGORY"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDFLST"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDFLST"
	.S ^SD(409.61,VALM,"HLP")="D HLP^IBDFLST"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDFLST"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	G ^IBDL4

IBDL4
IBDL4	; List Template Exporter ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	W !,"'IBDF UTIL PRIMARY SCREEN' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF UTIL PRIMARY SCREEN",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF UTIL PRIMARY SCREEN" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF UTIL PRIMARY SCREEN^1^^80^5^18^1^1^Entry^IBDF UTIL PRIMARY PROTOCOL^Maintenance Utility^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""CPT"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^5^5"
	.S ^SD(409.61,VALM,"COL",1,0)="CODE^7^8^CODE"
	.S ^SD(409.61,VALM,"COL",2,0)="CODE TEXT^17^15^DESCRIPTION"
	.S ^SD(409.61,VALM,"COL",3,0)="BLOCK NAME^34^14^BLOCK"
	.S ^SD(409.61,VALM,"COL",4,0)="FORM NAME^50^14^FORM"
	.S ^SD(409.61,VALM,"COL",5,0)="CLINIC^66^14^CLINIC"
	.S ^SD(409.61,VALM,"EXP")="D EXP^IBDFUTL"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDFUTL"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDFUTL"
	.S ^SD(409.61,VALM,"HLP")="D HLP^IBDFUTL"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDFUTL"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF VIEW TOOL KIT BLOCK' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF VIEW TOOL KIT BLOCK",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF VIEW TOOL KIT BLOCK" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF VIEW TOOL KIT BLOCK^2^^200^5^20^1^1^TOOL KIT BLOCK^^VIEW TOOL KIT BLOCK^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IB"",$J,""TOOL KIT BLOCK"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ROW^1^3^^^1"
	.S ^SD(409.61,VALM,"COL",2,0)="BLOCK LEFT SIDE^5^80^123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789"
	.S ^SD(409.61,VALM,"COL",3,0)="BLOCK RIGHT SIDE^85^80^123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDF8"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDF8"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDF8"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDFC CONVERSION LOG' List Template..."
	S DA=$O(^SD(409.61,"B","IBDFC CONVERSION LOG",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDFC CONVERSION LOG" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDFC CONVERSION LOG^1^^80^5^19^1^1^CONVERTED FORM^IBDFC MENU FOR CONVERTED FORMS^SCANNING CONVERSION LOG^1"
	.S ^SD(409.61,VALM,1)="^IBDF HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBDF"",$J,""CONVERTED FORMS"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^5^5"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^3^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="FORM^6^30^FORM"
	.S ^SD(409.61,VALM,"COL",3,0)="DATE^38^10^ DATE^"
	.S ^SD(409.61,VALM,"COL",4,0)="WARNINGS^50^8^WARNINGS^"
	.S ^SD(409.61,VALM,"COL",5,0)="REPLACED^62^19^REPLACED IN CLINICS^"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D ONEXIT^IBDFC1"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDFC1"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D ONENTRY^IBDFC1"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDFC CONVERSION UTILITY' List Template..."
	S DA=$O(^SD(409.61,"B","IBDFC CONVERSION UTILITY",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDFC CONVERSION UTILITY" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDFC CONVERSION UTILITY^1^^123^5^20^1^1^FORM^IBDFC CONVERSION UTILITY MENU^CONVERSION UTILITY^1"
	.S ^SD(409.61,VALM,1)="^IBDF HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBDF"",$J,""FORM LIST"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^3^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="FORM NAME^6^30^FORM NAME"
	.S ^SD(409.61,VALM,"COL",3,0)="BRIEF DESCRIPTION^38^80^BRIEF DESCRIPTION^H"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D ONEXIT^IBDFC"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDFC"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBDFC"
	.S ^SD(409.61,VALM,"INIT")="D ONENTRY^IBDFC"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	K DIC,DIK,VALM,X,DA Q

IBDNTEG
IBDNTEG	;ISC/XTSUMBLD KERNEL - Package checksum checker ;2960403.144931
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;;7.3;2960403.144931
	S XT4="I 1",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
CONT	F XT1=1:1 S XT2=$T(ROU+XT1) Q:XT2=""  S X=$P(XT2," ",1),XT3=$P(XT2,";",3) X XT4 I $T W !,X X ^%ZOSF("TEST") S:'$T XT3=0 X:XT3 ^%ZOSF("RSUM") W ?10,$S('XT3:"Routine not in UCI",XT3'=Y:"Calculated "_$C(7)_Y_", off by "_(Y-XT3),1:"ok")
	G CONT^IBDNTEG0
	K %1,%2,%3,X,Y,XT1,XT2,XT3,XT4 Q
ONE	S XT4="I $D(^UTILITY($J,X))",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
	W !,"Check a subset of routines:" K ^UTILITY($J) X ^%ZOSF("RSEL")
	W ! G CONT
ROU	;;
IBD21IN	;;1275246
IBD21PRE	;;5161755
IBD21PT	;;7811532
IBD21PT1	;;3974537
IBD21PT2	;;5423870
IBDE	;;2997987
IBDE1	;;7343106
IBDE1A	;;3361379
IBDE1B	;;1339223
IBDE2	;;409473
IBDE3	;;9480134
IBDE4	;;4667773
IBDEHELP	;;7817644
IBDEI001	;;8765906
IBDEI002	;;2688947
IBDEI003	;;2945040
IBDEI004	;;14846522
IBDEI005	;;14993469
IBDEI006	;;4216749
IBDEI007	;;3116161
IBDEI008	;;5368641
IBDEI009	;;5214697
IBDEI00A	;;4915042
IBDEI00B	;;5057553
IBDEI00C	;;5184282
IBDEI00D	;;1145328
IBDEI00E	;;3773401
IBDEI00F	;;4547273
IBDEI00G	;;4540125
IBDEI00H	;;4509051
IBDEI00I	;;4512734
IBDEI00J	;;4645801
IBDEI00K	;;4587987
IBDEI00L	;;4624343
IBDEI00M	;;4650725
IBDEI00N	;;4695540
IBDEI00O	;;4556889
IBDEI00P	;;4603683
IBDEI00Q	;;4639459
IBDEI00R	;;4542934
IBDEI00S	;;4367697
IBDEI00T	;;4387916
IBDEI00U	;;4426897
IBDEI00V	;;4441672
IBDEI00W	;;4440303
IBDEI00X	;;4534679
IBDEI00Y	;;4470124
IBDEI00Z	;;4574326
IBDEI010	;;4633275
IBDEI011	;;4503865
IBDEI012	;;4480797
IBDEI013	;;4537761
IBDEI014	;;4527612
IBDEI015	;;4577432
IBDEI016	;;4581666
IBDEI017	;;4545779
IBDEI018	;;4625352
IBDEI019	;;3030718
IBDEI01A	;;3787435
IBDEI01B	;;4276942
IBDEI01C	;;2628284
IBDEI01D	;;4957469
IBDEI01E	;;5074161
IBDEI01F	;;4831415
IBDEI01G	;;2889454
IBDEI01H	;;6253708
IBDEI01I	;;7035534
IBDEI01J	;;6498544
IBDEI01K	;;8017854
IBDEI01L	;;6916648
IBDEI01M	;;6720142
IBDEI01N	;;6815268
IBDEI01O	;;6303843
IBDEI01P	;;7233450
IBDEI01Q	;;6703463
IBDEI01R	;;7288651
IBDEI01S	;;3590742
IBDEI01T	;;2862731
IBDEI01U	;;1457389
IBDEI01V	;;2187605
IBDEI01W	;;920338
IBDEI01X	;;2245165
IBDEI01Y	;;1187805
IBDEI01Z	;;2166592
IBDEI020	;;3472098
IBDEI021	;;1847384
IBDEI022	;;2143074
IBDEI023	;;1997120
IBDEI024	;;1999709
IBDEI025	;;2380227
IBDEI026	;;6049137
IBDEI027	;;1928621
IBDEI028	;;5235045
IBDEI029	;;1349671
IBDEINI1	;;4882488
IBDEINI2	;;5232516
IBDEINI3	;;16805482
IBDEINI4	;;3357688
IBDEINI5	;;2331499
IBDEINIS	;;2205388
IBDEINIT	;;10609833
IBDEPRE	;;2898430
IBDEPT	;;289595
IBDF10	;;11910548
IBDF10A	;;14844945
IBDF10B	;;4334206
IBDF10C	;;7145394
IBDF11	;;3746255
IBDF11A	;;3372216
IBDF12	;;2427119
IBDF13	;;6119900
IBDF14	;;2438154
IBDF14A	;;7994396
IBDF15	;;2477742
IBDF15A	;;8958967
IBDF16	;;8212382
IBDF17	;;7034989
IBDF18	;;5760005
IBDF18A	;;3405755
IBDF18A1	;;7917847
IBDF18B	;;1396543
IBDF18C	;;7864874
IBDF18D	;;1716549
IBDF18E	;;11597748
IBDF18E1	;;7661299
IBDF19	;;6387101
IBDF1A	;;7133317
IBDF1B	;;13659488
IBDF1B1	;;10758139
IBDF1B1A	;;12271173
IBDF1B1B	;;1767481
IBDF1B2	;;2289984
IBDF1B3	;;6697443
IBDF1B5	;;11412680
IBDF1BA	;;11317405
IBDF1C	;;4095614
IBDF2A	;;12547336
IBDF2A1	;;16598738
IBDF2A2	;;4885051
IBDF2B	;;7733441
IBDF2B1	;;2426473
IBDF2D	;;11059247
IBDF2D1	;;7091947
IBDF2D2	;;20452649
IBDF2D3	;;11823745
IBDF2E	;;1625292
IBDF2F	;;15758095
IBDF2F1	;;4601612
IBDF2G	;;1305076
IBDF2H	;;1131607
IBDF3	;;7478886
IBDF4	;;12293774
IBDF4A	;;5178675
IBDF5	;;9157407
IBDF5A	;;4140889
IBDF5B	;;6693096
IBDF5C	;;3863246

IBDNTEG0
IBDNTEG0	;ISC/XTSUMBLD KERNEL - Package checksum checker ;2960403.144931
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;;7.3;2960403.144931
	S XT4="I 1",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
CONT	F XT1=1:1 S XT2=$T(ROU+XT1) Q:XT2=""  S X=$P(XT2," ",1),XT3=$P(XT2,";",3) X XT4 I $T W !,X X ^%ZOSF("TEST") S:'$T XT3=0 X:XT3 ^%ZOSF("RSUM") W ?10,$S('XT3:"Routine not in UCI",XT3'=Y:"Calculated "_$C(7)_Y_", off by "_(Y-XT3),1:"ok")
	G CONT^IBDNTEG1
	K %1,%2,%3,X,Y,XT1,XT2,XT3,XT4 Q
ONE	S XT4="I $D(^UTILITY($J,X))",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
	W !,"Check a subset of routines:" K ^UTILITY($J) X ^%ZOSF("RSEL")
	W ! G CONT
ROU	;;
IBDF5D	;;5086357
IBDF6	;;8555484
IBDF6A	;;6144443
IBDF6C	;;961289
IBDF7	;;2575918
IBDF8	;;1630744
IBDF9	;;3819084
IBDF9A	;;15224917
IBDF9A1	;;7479813
IBDF9A3	;;3755359
IBDF9B	;;11210755
IBDF9B1	;;13740809
IBDF9B2	;;6382340
IBDF9B3	;;5263320
IBDF9B4	;;6180090
IBDF9C	;;5445479
IBDF9D	;;5203845
IBDF9E	;;5975025
IBDFBK1	;;2964557
IBDFBK2	;;3322712
IBDFBK3	;;11400682
IBDFBKR	;;6455916
IBDFC	;;11282603
IBDFC1	;;4737097
IBDFC2	;;8730589
IBDFC2A	;;7809111
IBDFC2B	;;13081560
IBDFC3	;;3078465
IBDFC4	;;60053
IBDFCG	;;16685814
IBDFCG1	;;4218637
IBDFCNOF	;;9110526
IBDFDVE	;;387328
IBDFESP	;;1015764
IBDFFSMP	;;4973666
IBDFFT	;;9089035
IBDFFT1	;;19108703
IBDFFT2	;;2322061
IBDFFV	;;7421703
IBDFFV1	;;2385105
IBDFFV2	;;4347225
IBDFFV3	;;5257927
IBDFGRP	;;9119472
IBDFHLP	;;3402730
IBDFLST	;;11571848
IBDFLST1	;;1683695
IBDFM1	;;12163655
IBDFN	;;10241699
IBDFN1	;;1212542
IBDFN10	;;2777682
IBDFN12	;;1612905
IBDFN13	;;66244
IBDFN14	;;2226507
IBDFN2	;;5752688
IBDFN3	;;2544648
IBDFN4	;;3010247
IBDFN5	;;3054776
IBDFN6	;;2853724
IBDFN7	;;957098
IBDFN8	;;124808
IBDFN9	;;126782
IBDFOSG	;;9981416
IBDFOSG1	;;6857171
IBDFOSG2	;;13416717
IBDFOSG3	;;7374113
IBDFOSG4	;;3704465
IBDFPCE	;;2069056
IBDFPE	;;11422382
IBDFPE1	;;8084519
IBDFPRG	;;7022910
IBDFPRG1	;;2138924
IBDFQB	;;10459002
IBDFQEA	;;9350554
IBDFQEA1	;;44681
IBDFQS	;;1008535
IBDFQSL	;;2986153
IBDFQSL1	;;7189090
IBDFQSL2	;;5739986
IBDFREG	;;4685997
IBDFSS	;;16073816
IBDFSS1	;;1572612
IBDFST	;;5672250
IBDFU	;;15610352
IBDFU1	;;12896586
IBDFU10	;;522009
IBDFU1A	;;1409234
IBDFU1B	;;5299958
IBDFU1C	;;6547180
IBDFU2	;;13601497
IBDFU2A	;;14139503
IBDFU2B	;;14366890
IBDFU2C	;;9269483
IBDFU3	;;5569853
IBDFU4	;;3611011
IBDFU5	;;8584071
IBDFU5A	;;3373891
IBDFU6	;;331661
IBDFU7	;;665770
IBDFU8	;;6550892
IBDFU9	;;2615590
IBDFU91	;;1906803
IBDFUA	;;3142592
IBDFUTI	;;3380251
IBDFUTL	;;9211054
IBDFUTL1	;;19312376
IBDFUTL2	;;10934138
IBDFUTL3	;;3176951
IBDIN001	;;5753365
IBDIN002	;;8506549
IBDIN003	;;10980238
IBDIN004	;;7923896
IBDIN005	;;835184
IBDIN006	;;6217679
IBDIN007	;;10017401
IBDIN008	;;11617512
IBDIN009	;;8773123
IBDIN00A	;;3538637
IBDIN00B	;;8397933
IBDIN00C	;;9078571
IBDIN00D	;;7180872
IBDIN00E	;;7781716
IBDIN00F	;;3698548
IBDIN00G	;;9764844
IBDIN00H	;;10074995
IBDIN00I	;;9351529
IBDIN00J	;;9955790
IBDIN00K	;;6870021
IBDIN00L	;;8906514
IBDIN00M	;;11072134
IBDIN00N	;;4111852
IBDIN00O	;;8507969
IBDIN00P	;;987776
IBDIN00Q	;;9193569
IBDIN00R	;;8841725
IBDIN00S	;;10354738
IBDIN00T	;;3244876
IBDIN00U	;;9562947
IBDIN00V	;;10434194
IBDIN00W	;;11538305
IBDIN00X	;;9881591
IBDIN00Y	;;8229481
IBDIN00Z	;;10510410
IBDIN010	;;9407614
IBDIN011	;;9844925
IBDIN012	;;9075095
IBDIN013	;;9498792
IBDIN014	;;7545803
IBDIN015	;;2289317
IBDIN016	;;6990893
IBDIN017	;;7548092
IBDIN018	;;7489054
IBDIN019	;;7187185
IBDIN01A	;;8164012
IBDIN01B	;;7221154
IBDIN01C	;;7828204
IBDIN01D	;;6761134
IBDIN01E	;;6675520
IBDIN01F	;;6353678
IBDIN01G	;;7489507

IBDNTEG1
IBDNTEG1	;ISC/XTSUMBLD KERNEL - Package checksum checker ;2960403.144931
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;;7.3;2960403.144931
	S XT4="I 1",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
CONT	F XT1=1:1 S XT2=$T(ROU+XT1) Q:XT2=""  S X=$P(XT2," ",1),XT3=$P(XT2,";",3) X XT4 I $T W !,X X ^%ZOSF("TEST") S:'$T XT3=0 X:XT3 ^%ZOSF("RSUM") W ?10,$S('XT3:"Routine not in UCI",XT3'=Y:"Calculated "_$C(7)_Y_", off by "_(Y-XT3),1:"ok")
	G CONT^IBDNTEG2
	K %1,%2,%3,X,Y,XT1,XT2,XT3,XT4 Q
ONE	S XT4="I $D(^UTILITY($J,X))",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
	W !,"Check a subset of routines:" K ^UTILITY($J) X ^%ZOSF("RSEL")
	W ! G CONT
ROU	;;
IBDIN01H	;;6874335
IBDIN01I	;;6738882
IBDIN01J	;;6832751
IBDIN01K	;;6484330
IBDIN01L	;;6683756
IBDIN01M	;;3697447
IBDIN01N	;;6336690
IBDIN01O	;;8333149
IBDIN01P	;;9604077
IBDIN01Q	;;6932711
IBDIN01R	;;8319679
IBDIN01S	;;1340717
IBDIN01T	;;7774980
IBDIN01U	;;1047984
IBDIN01V	;;4619470
IBDIN01W	;;1546854
IBDIN01X	;;2933426
IBDIN01Y	;;1107113
IBDIN01Z	;;8528267
IBDIN020	;;7944196
IBDIN021	;;1617888
IBDIN022	;;10211469
IBDIN023	;;7585287
IBDIN024	;;6954295
IBDIN025	;;8464700
IBDIN026	;;9567487
IBDIN027	;;8121124
IBDIN028	;;7072945
IBDIN029	;;7668488
IBDIN02A	;;8637968
IBDIN02B	;;9846945
IBDIN02C	;;6935905
IBDIN02D	;;1337444
IBDIN02E	;;2441095
IBDIN02F	;;3302733
IBDIN02G	;;2052401
IBDIN02H	;;4148199
IBDIN02I	;;9072276
IBDIN02J	;;8805532
IBDIN02K	;;5820015
IBDIN02L	;;8106273
IBDIN02M	;;6982171
IBDIN02N	;;9174433
IBDIN02O	;;9913147
IBDIN02P	;;9800760
IBDIN02Q	;;9955149
IBDIN02R	;;853018
IBDIN02S	;;8667622
IBDIN02T	;;7861097
IBDIN02U	;;6613222
IBDIN02V	;;8868179
IBDIN02W	;;8798342
IBDIN02X	;;10292459
IBDIN02Y	;;3507741
IBDIN02Z	;;11839021
IBDIN030	;;10438534
IBDIN031	;;11806412
IBDIN032	;;10870896
IBDIN033	;;9885712
IBDIN034	;;9234515
IBDIN035	;;9379638
IBDIN036	;;7895454
IBDIN037	;;4105906
IBDIN038	;;8040620
IBDIN039	;;1449598
IBDIN03A	;;7830646
IBDIN03B	;;1047905
IBDIN03C	;;4423522
IBDIN03D	;;7789416
IBDIN03E	;;9494570
IBDIN03F	;;1406272
IBDIN03G	;;7106912
IBDIN03H	;;2728064
IBDIN03I	;;9235082
IBDIN03J	;;8375490
IBDIN03K	;;4018051
IBDIN03L	;;9470526
IBDIN03M	;;10335429
IBDIN03N	;;5949755
IBDIN03O	;;9757663
IBDIN03P	;;7770315
IBDIN03Q	;;9061871
IBDIN03R	;;10264542
IBDIN03S	;;10269861
IBDIN03T	;;9210749
IBDIN03U	;;9225202
IBDIN03V	;;4324897
IBDIN03W	;;3216503
IBDIN03X	;;1878908
IBDIN03Y	;;13989024
IBDIN03Z	;;14471106
IBDIN040	;;16538404
IBDIN041	;;12509560
IBDIN042	;;15325962
IBDIN043	;;9547373
IBDIN044	;;8023935
IBDIN045	;;9072824
IBDIN046	;;10321369
IBDIN047	;;9991990
IBDIN048	;;7450790
IBDIN049	;;5320363
IBDIN04A	;;5036501
IBDIN04B	;;4004905
IBDINIS	;;2165737
IBDINIT	;;10609196
IBDINIT1	;;4933004
IBDINIT2	;;5232604
IBDINIT3	;;16806468
IBDINIT4	;;3357776
IBDINIT5	;;5204705
IBDL	;;10105257
IBDL1	;;11086949
IBDL2	;;10495658
IBDL3	;;10376868
IBDL4	;;9029132
IBDON001	;;6331679
IBDON002	;;6795777
IBDON003	;;6781550
IBDON004	;;6936505
IBDON005	;;6684664
IBDON006	;;7220573
IBDON007	;;7833941
IBDON008	;;7871443
IBDON009	;;6485954
IBDON010	;;7058563
IBDON011	;;7543954
IBDON012	;;7309209
IBDON013	;;8352157
IBDON014	;;6866071
IBDON015	;;7410282
IBDON016	;;7459045
IBDON017	;;7684022
IBDON018	;;7208275
IBDON019	;;6545962
IBDONIT	;;984757
IBDONIT1	;;1698090
IBDONIT2	;;82824
IBDONIT3	;;10576586
IBDPI001	;;11838682
IBDPI002	;;10438532
IBDPI003	;;11806410
IBDPI004	;;10870894
IBDPI005	;;9885710
IBDPI006	;;9234513
IBDPI007	;;9379636
IBDPI008	;;7895452
IBDPI009	;;4105904
IBDPI00A	;;6503148
IBDPI00B	;;6812149
IBDPI00C	;;7529530
IBDPI00D	;;7718044
IBDPI00E	;;6757649

IBDNTEG2
IBDNTEG2	;ISC/XTSUMBLD KERNEL - Package checksum checker ;2960403.144931
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;;7.3;2960403.144931
	S XT4="I 1",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
CONT	F XT1=1:1 S XT2=$T(ROU+XT1) Q:XT2=""  S X=$P(XT2," ",1),XT3=$P(XT2,";",3) X XT4 I $T W !,X X ^%ZOSF("TEST") S:'$T XT3=0 X:XT3 ^%ZOSF("RSUM") W ?10,$S('XT3:"Routine not in UCI",XT3'=Y:"Calculated "_$C(7)_Y_", off by "_(Y-XT3),1:"ok")
	;
	K %1,%2,%3,X,Y,XT1,XT2,XT3,XT4 Q
ONE	S XT4="I $D(^UTILITY($J,X))",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
	W !,"Check a subset of routines:" K ^UTILITY($J) X ^%ZOSF("RSEL")
	W ! G CONT
ROU	;;
IBDPI00F	;;8445000
IBDPI00G	;;7216253
IBDPI00H	;;7652665
IBDPI00I	;;6599236
IBDPI00J	;;6823303
IBDPI00K	;;7612706
IBDPI00L	;;6839529
IBDPI00M	;;6564796
IBDPI00N	;;6938556
IBDPI00O	;;6476196
IBDPI00P	;;6605021
IBDPI00Q	;;3495161
IBDPI00R	;;2728126
IBDPI00S	;;1999987
IBDPI00T	;;9235152
IBDPI00U	;;8375560
IBDPI00V	;;6049498
IBDPI00W	;;939804
IBDPI00X	;;2593040
IBDPINI1	;;4882594
IBDPINI2	;;5232560
IBDPINI3	;;16806164
IBDPINI4	;;3357732
IBDPINI5	;;867896
IBDPINIS	;;2208281
IBDPINIT	;;10589831
IBDPPRE	;;2504995
IBDPPT	;;292463

IBDON001
IBDON001	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",634,0)
	;;=VALM NEXT SCREEN^Next Screen^^A^^^^^^^^LIST MANAGER
	;;^UTILITY(U,$J,"PRO",634,1,0)
	;;=^^2^2^2920519^^^
	;;^UTILITY(U,$J,"PRO",634,1,1,0)
	;;=This action will allow the user to view the next screen
	;;^UTILITY(U,$J,"PRO",634,1,2,0)
	;;=of entries, if any exist.
	;;^UTILITY(U,$J,"PRO",634,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",634,2,1,0)
	;;=NX
	;;^UTILITY(U,$J,"PRO",634,2,"B","NX",1)
	;;=
	;;^UTILITY(U,$J,"PRO",634,15)
	;;=
	;;^UTILITY(U,$J,"PRO",634,20)
	;;=D NEXT^VALM4
	;;^UTILITY(U,$J,"PRO",634,99)
	;;=56433,56737
	;;^UTILITY(U,$J,"PRO",634,"MEN","IBDF HIDDEN ACTIONS")
	;;=634^+^11
	;;^UTILITY(U,$J,"PRO",635,0)
	;;=VALM PREVIOUS SCREEN^Previous Screen^^A^^^^^^^^LIST MANAGER
	;;^UTILITY(U,$J,"PRO",635,1,0)
	;;=^^2^2^2920113^^
	;;^UTILITY(U,$J,"PRO",635,1,1,0)
	;;=This action will allow the user to view the previous screen
	;;^UTILITY(U,$J,"PRO",635,1,2,0)
	;;=of entries, if any exist.
	;;^UTILITY(U,$J,"PRO",635,2,0)
	;;=^101.02A^3^2
	;;^UTILITY(U,$J,"PRO",635,2,1,0)
	;;=PR
	;;^UTILITY(U,$J,"PRO",635,2,2,0)
	;;=BK
	;;^UTILITY(U,$J,"PRO",635,2,3,0)
	;;=PR
	;;^UTILITY(U,$J,"PRO",635,2,"B","BK",2)
	;;=
	;;^UTILITY(U,$J,"PRO",635,2,"B","PR",1)
	;;=
	;;^UTILITY(U,$J,"PRO",635,2,"B","PR",3)
	;;=
	;;^UTILITY(U,$J,"PRO",635,20)
	;;=D PREV^VALM4
	;;^UTILITY(U,$J,"PRO",635,99)
	;;=56433,56737
	;;^UTILITY(U,$J,"PRO",635,"MEN","IBDF HIDDEN ACTIONS")
	;;=635^-^12
	;;^UTILITY(U,$J,"PRO",636,0)
	;;=VALM REFRESH^Re-Display Screen^^A^^^^^^^^LIST MANAGER
	;;^UTILITY(U,$J,"PRO",636,1,0)
	;;=^^1^1^2911024^
	;;^UTILITY(U,$J,"PRO",636,1,1,0)
	;;=This actions allows the user to re-display the current screen.
	;;^UTILITY(U,$J,"PRO",636,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",636,2,1,0)
	;;=RE
	;;^UTILITY(U,$J,"PRO",636,2,"B","RE",1)
	;;=
	;;^UTILITY(U,$J,"PRO",636,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",636,20)
	;;=D RE^VALM4
	;;^UTILITY(U,$J,"PRO",636,99)
	;;=56433,56741
	;;^UTILITY(U,$J,"PRO",636,"MEN","IBDF HIDDEN ACTIONS")
	;;=636^RD^24
	;;^UTILITY(U,$J,"PRO",637,0)
	;;=VALM LAST SCREEN^Last Screen^^A^^^^^^^^LIST MANAGER
	;;^UTILITY(U,$J,"PRO",637,1,0)
	;;=^^1^1^2911026^
	;;^UTILITY(U,$J,"PRO",637,1,1,0)
	;;=The action will display the last items.
	;;^UTILITY(U,$J,"PRO",637,20)
	;;=D LAST^VALM4
	;;^UTILITY(U,$J,"PRO",637,99)
	;;=56433,56736
	;;^UTILITY(U,$J,"PRO",637,"MEN","IBDF HIDDEN ACTIONS")
	;;=637^LS^22
	;;^UTILITY(U,$J,"PRO",638,0)
	;;=VALM FIRST SCREEN^First Screen^^A^^^^^^^^LIST MANAGER
	;;^UTILITY(U,$J,"PRO",638,1,0)
	;;=^^1^1^2911026^
	;;^UTILITY(U,$J,"PRO",638,1,1,0)
	;;=This action will display the first screen.
	;;^UTILITY(U,$J,"PRO",638,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",638,15)
	;;=
	;;^UTILITY(U,$J,"PRO",638,20)
	;;=D FIRST^VALM4
	;;^UTILITY(U,$J,"PRO",638,99)
	;;=56433,56736
	;;^UTILITY(U,$J,"PRO",638,"MEN","IBDF HIDDEN ACTIONS")
	;;=638^FS^21
	;;^UTILITY(U,$J,"PRO",639,0)
	;;=VALM UP ONE LINE^Up a Line^^A^^^^^^^^LIST MANAGER
	;;^UTILITY(U,$J,"PRO",639,1,0)
	;;=^^1^1^2911027^
	;;^UTILITY(U,$J,"PRO",639,1,1,0)
	;;=Move up a line
	;;^UTILITY(U,$J,"PRO",639,20)
	;;=D UP^VALM40
	;;^UTILITY(U,$J,"PRO",639,99)
	;;=56433,56742
	;;^UTILITY(U,$J,"PRO",639,"MEN","IBDF HIDDEN ACTIONS")
	;;=639^UP^13
	;;^UTILITY(U,$J,"PRO",640,0)
	;;=VALM DOWN A LINE^Down a Line^^A^^^^^^^^LIST MANAGER
	;;^UTILITY(U,$J,"PRO",640,1,0)
	;;=^^2^2^2911027^
	;;^UTILITY(U,$J,"PRO",640,1,1,0)
	;;=Move down a line.
	;;^UTILITY(U,$J,"PRO",640,1,2,0)
	;;=
	;;^UTILITY(U,$J,"PRO",640,20)
	;;=D DOWN^VALM40
	;;^UTILITY(U,$J,"PRO",640,99)
	;;=56433,56735
	;;^UTILITY(U,$J,"PRO",640,"MEN","IBDF HIDDEN ACTIONS")
	;;=640^DN^14
	;;^UTILITY(U,$J,"PRO",642,0)
	;;=VALM QUIT^Quit^^A^^^^^^^^LIST MANAGER
	;;^UTILITY(U,$J,"PRO",642,.1)
	;;= 
	;;^UTILITY(U,$J,"PRO",642,1,0)
	;;=^^1^1^2911105^
	;;^UTILITY(U,$J,"PRO",642,1,1,0)
	;;=This protocol can be used as a generic 'quit' action.
	;;^UTILITY(U,$J,"PRO",642,2,0)
	;;=^101.02A^2^2
	;;^UTILITY(U,$J,"PRO",642,2,1,0)
	;;=EXIT
	;;^UTILITY(U,$J,"PRO",642,2,2,0)
	;;=QUIT
	;;^UTILITY(U,$J,"PRO",642,2,"B","EXIT",1)
	;;=
	;;^UTILITY(U,$J,"PRO",642,2,"B","QUIT",2)
	;;=
	;;^UTILITY(U,$J,"PRO",642,20)
	;;=Q
	;;^UTILITY(U,$J,"PRO",642,99)
	;;=56433,56738
	;;^UTILITY(U,$J,"PRO",642,"MEN","IBDF HIDDEN ACTIONS")
	;;=642^QU^34^^^Quit Screen
	;;^UTILITY(U,$J,"PRO",644,0)
	;;=VALM PRINT LIST^Print List^^A^^^^^^^^LIST MANAGER
	;;^UTILITY(U,$J,"PRO",644,1,0)
	;;=^^2^2^2920113^
	;;^UTILITY(U,$J,"PRO",644,1,1,0)
	;;=This action allws the user to print the entire list of
	;;^UTILITY(U,$J,"PRO",644,1,2,0)
	;;=entries currently being displayed.
	;;^UTILITY(U,$J,"PRO",644,20)
	;;=D PRTL^VALM1
	;;^UTILITY(U,$J,"PRO",644,99)
	;;=56433,56737

IBDON002
IBDON002	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",644,"MEN","IBDF HIDDEN ACTIONS")
	;;=644^PL^26
	;;^UTILITY(U,$J,"PRO",659,0)
	;;=VALM RIGHT^Shift View to Right^^A^^^^^^^^LIST MANAGER
	;;^UTILITY(U,$J,"PRO",659,20)
	;;=D RIGHT^VALM40(XQORNOD(0))
	;;^UTILITY(U,$J,"PRO",659,99)
	;;=56222,29860
	;;^UTILITY(U,$J,"PRO",659,"MEN","IBDF HIDDEN ACTIONS")
	;;=659^>^15
	;;^UTILITY(U,$J,"PRO",660,0)
	;;=VALM LEFT^Shift View to Left^^A^^^^^^^^LIST MANAGER
	;;^UTILITY(U,$J,"PRO",660,20)
	;;=D LEFT^VALM40(XQORNOD(0))
	;;^UTILITY(U,$J,"PRO",660,99)
	;;=56222,29860
	;;^UTILITY(U,$J,"PRO",660,"MEN","IBDF HIDDEN ACTIONS")
	;;=660^<^16
	;;^UTILITY(U,$J,"PRO",663,0)
	;;=VALM GOTO PAGE^Go to Page^^A^^^^^^^^LIST MANAGER
	;;^UTILITY(U,$J,"PRO",663,1,0)
	;;=^^1^1^2930113^
	;;^UTILITY(U,$J,"PRO",663,1,1,0)
	;;=
	;;^UTILITY(U,$J,"PRO",663,20)
	;;=D GOTO^VALM40
	;;^UTILITY(U,$J,"PRO",663,99)
	;;=56433,56736
	;;^UTILITY(U,$J,"PRO",663,"MEN","IBDF HIDDEN ACTIONS")
	;;=663^GO^23
	;;^UTILITY(U,$J,"PRO",794,0)
	;;=IBDF EDIT SELECTION LIST MENU^EDIT LIST^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",794,1,0)
	;;=^^2^2^2950414^^^
	;;^UTILITY(U,$J,"PRO",794,1,1,0)
	;;=Displays all the selection groups defined for the list and provides
	;;^UTILITY(U,$J,"PRO",794,1,2,0)
	;;=a menu of actions for editing the contents of the list.
	;;^UTILITY(U,$J,"PRO",794,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",794,10,0)
	;;=^101.01PA^7^8
	;;^UTILITY(U,$J,"PRO",794,10,1,0)
	;;=795^AG^1^^^Add Group
	;;^UTILITY(U,$J,"PRO",794,10,1,"^")
	;;=IBDF ADD GROUP
	;;^UTILITY(U,$J,"PRO",794,10,2,0)
	;;=796^DG^2^^^Delete Group
	;;^UTILITY(U,$J,"PRO",794,10,2,"^")
	;;=IBDF DELETE GROUP
	;;^UTILITY(U,$J,"PRO",794,10,3,0)
	;;=797^GH^4^^^Group Header/Order
	;;^UTILITY(U,$J,"PRO",794,10,3,"^")
	;;=IBDF EDIT GROUP HDR/ORDER
	;;^UTILITY(U,$J,"PRO",794,10,4,0)
	;;=800^GC^3^^^Group's Contents
	;;^UTILITY(U,$J,"PRO",794,10,4,"^")
	;;=IBDF DISPLAY GRP'S SLCTNS FOR EDIT
	;;^UTILITY(U,$J,"PRO",794,10,6,0)
	;;=1070^AB^5^^^Add Blank
	;;^UTILITY(U,$J,"PRO",794,10,6,"^")
	;;=IBDF ADD BLANK GROUP
	;;^UTILITY(U,$J,"PRO",794,10,7,0)
	;;=1071^FA^6^^^Format All
	;;^UTILITY(U,$J,"PRO",794,10,7,"^")
	;;=IBDF FORMAT ALL SELECTIONS
	;;^UTILITY(U,$J,"PRO",794,10,8,0)
	;;=1310^RS^7^^^Resequence List
	;;^UTILITY(U,$J,"PRO",794,10,8,"^")
	;;=IBDF RESEQUENCE LIST
	;;^UTILITY(U,$J,"PRO",794,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",794,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",794,99)
	;;=56351,49141
	;;^UTILITY(U,$J,"PRO",795,0)
	;;=IBDF ADD GROUP^Add Group^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",795,1,0)
	;;=^^1^1^2950203^^^^
	;;^UTILITY(U,$J,"PRO",795,1,1,0)
	;;=Adds a new group to the selection list.
	;;^UTILITY(U,$J,"PRO",795,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",795,2,1,0)
	;;=AG
	;;^UTILITY(U,$J,"PRO",795,2,"B","AG",1)
	;;=
	;;^UTILITY(U,$J,"PRO",795,20)
	;;=D ADDGRP^IBDF3
	;;^UTILITY(U,$J,"PRO",795,99)
	;;=56301,49959
	;;^UTILITY(U,$J,"PRO",796,0)
	;;=IBDF DELETE GROUP^Delete Group^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",796,1,0)
	;;=^^3^3^2930510^
	;;^UTILITY(U,$J,"PRO",796,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",796,1,2,0)
	;;=Allows the user to select a group. The selected group, along with all of
	;;^UTILITY(U,$J,"PRO",796,1,3,0)
	;;=its selections, is deleted.
	;;^UTILITY(U,$J,"PRO",796,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",796,2,1,0)
	;;=DG
	;;^UTILITY(U,$J,"PRO",796,2,"B","DG",1)
	;;=
	;;^UTILITY(U,$J,"PRO",796,20)
	;;=D DELGRP^IBDF3
	;;^UTILITY(U,$J,"PRO",796,99)
	;;=56301,49960
	;;^UTILITY(U,$J,"PRO",797,0)
	;;=IBDF EDIT GROUP HDR/ORDER^Group Header/Order^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",797,1,0)
	;;=^^3^3^2930510^
	;;^UTILITY(U,$J,"PRO",797,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",797,1,2,0)
	;;=Allows a group to be selected. Then the header and print order can be
	;;^UTILITY(U,$J,"PRO",797,1,3,0)
	;;=edited.
	;;^UTILITY(U,$J,"PRO",797,2,0)
	;;=^101.02A^2^2
	;;^UTILITY(U,$J,"PRO",797,2,1,0)
	;;=EG
	;;^UTILITY(U,$J,"PRO",797,2,2,0)
	;;=EH
	;;^UTILITY(U,$J,"PRO",797,2,"B","EG",1)
	;;=
	;;^UTILITY(U,$J,"PRO",797,2,"B","EH",2)
	;;=
	;;^UTILITY(U,$J,"PRO",797,20)
	;;=D EDITGRP^IBDF3
	;;^UTILITY(U,$J,"PRO",797,99)
	;;=56301,49963
	;;^UTILITY(U,$J,"PRO",798,0)
	;;=IBDF EDIT GROUP'S SELECTIONS MENU^Edit Contents^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",798,1,0)
	;;=^^1^1^2930212^^^^
	;;^UTILITY(U,$J,"PRO",798,1,1,0)
	;;=Used to edit a group's selections.
	;;^UTILITY(U,$J,"PRO",798,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",798,2,1,0)
	;;=EC
	;;^UTILITY(U,$J,"PRO",798,2,"B","EC",1)
	;;=
	;;^UTILITY(U,$J,"PRO",798,4)
	;;=26^4

IBDON003
IBDON003	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",798,10,0)
	;;=^101.01PA^5^6
	;;^UTILITY(U,$J,"PRO",798,10,1,0)
	;;=799^AD^1^^^Add Selection
	;;^UTILITY(U,$J,"PRO",798,10,1,"^")
	;;=IBDF ADD SELECTION
	;;^UTILITY(U,$J,"PRO",798,10,2,0)
	;;=808^ED^2^^^Edit
	;;^UTILITY(U,$J,"PRO",798,10,2,"^")
	;;=IBDF EDIT SELECTION
	;;^UTILITY(U,$J,"PRO",798,10,3,0)
	;;=809^DS^3^^^Delete
	;;^UTILITY(U,$J,"PRO",798,10,3,1)
	;;=Delete
	;;^UTILITY(U,$J,"PRO",798,10,3,"^")
	;;=IBDF DELETE SELECTION
	;;^UTILITY(U,$J,"PRO",798,10,5,0)
	;;=1069^PH^4^^^New Place Holder
	;;^UTILITY(U,$J,"PRO",798,10,5,"^")
	;;=IBDF ADD BLANK SELECTION
	;;^UTILITY(U,$J,"PRO",798,10,6,0)
	;;=1072^FA^5^^^Format All
	;;^UTILITY(U,$J,"PRO",798,10,6,"^")
	;;=IBDF FORMAT GROUP'S SELECTIONS
	;;^UTILITY(U,$J,"PRO",798,15)
	;;=
	;;^UTILITY(U,$J,"PRO",798,20)
	;;=
	;;^UTILITY(U,$J,"PRO",798,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",798,99)
	;;=56523,50755
	;;^UTILITY(U,$J,"PRO",799,0)
	;;=IBDF ADD SELECTION^Add To List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",799,1,0)
	;;=^^1^1^2930607^^
	;;^UTILITY(U,$J,"PRO",799,1,1,0)
	;;=Adds a new selection to the selection list.
	;;^UTILITY(U,$J,"PRO",799,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",799,2,1,0)
	;;=AL
	;;^UTILITY(U,$J,"PRO",799,2,"B","AL",1)
	;;=
	;;^UTILITY(U,$J,"PRO",799,15)
	;;=
	;;^UTILITY(U,$J,"PRO",799,20)
	;;=D ADDSLCTN^IBDF4
	;;^UTILITY(U,$J,"PRO",799,99)
	;;=56351,48728
	;;^UTILITY(U,$J,"PRO",800,0)
	;;=IBDF DISPLAY GRP'S SLCTNS FOR EDIT^Group's Contents^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",800,1,0)
	;;=^^1^1^2930510^
	;;^UTILITY(U,$J,"PRO",800,1,1,0)
	;;=Displays the group's selections and a menu of edit actions.
	;;^UTILITY(U,$J,"PRO",800,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",800,2,1,0)
	;;=ES
	;;^UTILITY(U,$J,"PRO",800,2,"B","ES",1)
	;;=
	;;^UTILITY(U,$J,"PRO",800,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",800,20)
	;;=D EDTSLCTN^IBDF3
	;;^UTILITY(U,$J,"PRO",800,99)
	;;=56301,49961
	;;^UTILITY(U,$J,"PRO",801,0)
	;;=IBDF CLINIC'S FORMS MENU^Clinic's Setup^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",801,1,0)
	;;=^^3^3^2960110^^^^
	;;^UTILITY(U,$J,"PRO",801,1,1,0)
	;;=Displays all of the forms used by a particular clinic. Allows the user
	;;^UTILITY(U,$J,"PRO",801,1,2,0)
	;;=to change the clinic setup, create new blank forms, copy forms, delete
	;;^UTILITY(U,$J,"PRO",801,1,3,0)
	;;=to change the clinic setup, create new blank forms, copy forms, delete
	;;^UTILITY(U,$J,"PRO",801,2,0)
	;;=^101.02A^^0
	;;^UTILITY(U,$J,"PRO",801,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",801,10,0)
	;;=^101.01PA^10^12
	;;^UTILITY(U,$J,"PRO",801,10,1,0)
	;;=802^EF^8^^^Edit Form
	;;^UTILITY(U,$J,"PRO",801,10,1,"^")
	;;=IBDF EDIT FORM
	;;^UTILITY(U,$J,"PRO",801,10,2,0)
	;;=815^CR^6^^^Create Blank Form
	;;^UTILITY(U,$J,"PRO",801,10,2,"^")
	;;=IBDF CREATE BLANK FORM
	;;^UTILITY(U,$J,"PRO",801,10,3,0)
	;;=816^CF^5^^^Copy Form
	;;^UTILITY(U,$J,"PRO",801,10,3,1)
	;;=Copy Form:
	;;^UTILITY(U,$J,"PRO",801,10,3,"^")
	;;=IBDF COPY FORM
	;;^UTILITY(U,$J,"PRO",801,10,4,0)
	;;=817^AS^3^^^Add Form to Setup
	;;^UTILITY(U,$J,"PRO",801,10,4,"^")
	;;=IBDF ADD TO CLINIC SETUP
	;;^UTILITY(U,$J,"PRO",801,10,5,0)
	;;=818^DS^4^^^Delete from Setup
	;;^UTILITY(U,$J,"PRO",801,10,5,"^")
	;;=IBDF DELETE FROM CLINIC SETUP
	;;^UTILITY(U,$J,"PRO",801,10,7,0)
	;;=827^DF^7^^^Delete Unused Form
	;;^UTILITY(U,$J,"PRO",801,10,7,"^")
	;;=IBDF DELETE FORM
	;;^UTILITY(U,$J,"PRO",801,10,8,0)
	;;=830^CC^1^^^Change Clinic
	;;^UTILITY(U,$J,"PRO",801,10,8,"^")
	;;=IBDF CHANGE CLINIC
	;;^UTILITY(U,$J,"PRO",801,10,9,0)
	;;=831^NM^2^^^Form Name/Descr/Size
	;;^UTILITY(U,$J,"PRO",801,10,9,"^")
	;;=IBDF EDIT FORM NAME/DESCR/SIZE
	;;^UTILITY(U,$J,"PRO",801,10,11,0)
	;;=1082^RC^10^^^Recompile Form
	;;^UTILITY(U,$J,"PRO",801,10,11,"^")
	;;=IBDF COMPILE FORM
	;;^UTILITY(U,$J,"PRO",801,10,12,0)
	;;=1466^FS^9^^^Fast Selection Edit
	;;^UTILITY(U,$J,"PRO",801,10,12,"^")
	;;=IBDF QUICK SELECTION EDIT
	;;^UTILITY(U,$J,"PRO",801,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",801,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",801,99)
	;;=56468,52362
	;;^UTILITY(U,$J,"PRO",802,0)
	;;=IBDF EDIT FORM^Edit Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",802,1,0)
	;;=^^2^2^2941117^^^
	;;^UTILITY(U,$J,"PRO",802,1,1,0)
	;;=This protocol calls the list manager to display an encounter form. There
	;;^UTILITY(U,$J,"PRO",802,1,2,0)
	;;=is a menu of actions that allows the form description to be edited.
	;;^UTILITY(U,$J,"PRO",802,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",802,2,1,0)
	;;=EF
	;;^UTILITY(U,$J,"PRO",802,2,"B","EF",1)
	;;=

IBDON004
IBDON004	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",802,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",802,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",802,20)
	;;=D EDITFORM^IBDF6
	;;^UTILITY(U,$J,"PRO",802,28)
	;;=Edit Form: 
	;;^UTILITY(U,$J,"PRO",802,99)
	;;=56301,49961
	;;^UTILITY(U,$J,"PRO",803,0)
	;;=IBDF DISPLAY TOOL KIT BLOCKS FOR ADDING^Add Toolkit Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",803,1,0)
	;;=^^1^1^2931015^^^^
	;;^UTILITY(U,$J,"PRO",803,1,1,0)
	;;=Allows the user to select a block from the tool kit and add it to the form.
	;;^UTILITY(U,$J,"PRO",803,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",803,2,1,0)
	;;=AT
	;;^UTILITY(U,$J,"PRO",803,2,"B","AT",1)
	;;=
	;;^UTILITY(U,$J,"PRO",803,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",803,20)
	;;=D ADD^IBDF7
	;;^UTILITY(U,$J,"PRO",803,28)
	;;=Add Tool Kit Block: 
	;;^UTILITY(U,$J,"PRO",803,99)
	;;=56301,49961
	;;^UTILITY(U,$J,"PRO",804,0)
	;;=IBDF MENU FOR EDITING DISPLAYED FORM^Add Tool Kit Block^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",804,1,0)
	;;=^^1^1^2941206^^^^
	;;^UTILITY(U,$J,"PRO",804,1,1,0)
	;;=Allows the user to edit the form.
	;;^UTILITY(U,$J,"PRO",804,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",804,10,0)
	;;=^101.01PA^12^16
	;;^UTILITY(U,$J,"PRO",804,10,1,0)
	;;=803^AT^1
	;;^UTILITY(U,$J,"PRO",804,10,1,"^")
	;;=IBDF DISPLAY TOOL KIT BLOCKS FOR ADDING
	;;^UTILITY(U,$J,"PRO",804,10,2,0)
	;;=810^MV^4^^^Move Block
	;;^UTILITY(U,$J,"PRO",804,10,2,"^")
	;;=IBDF MOVE BLOCK
	;;^UTILITY(U,$J,"PRO",804,10,3,0)
	;;=811^BS^6
	;;^UTILITY(U,$J,"PRO",804,10,3,"^")
	;;=IBDF RESIZE BLOCK (WHILE EDITING FORM)
	;;^UTILITY(U,$J,"PRO",804,10,4,0)
	;;=812^EB^8^^^Edit Block
	;;^UTILITY(U,$J,"PRO",804,10,4,"^")
	;;=IBDF DISPLAY FORM BLOCK FOR EDIT
	;;^UTILITY(U,$J,"PRO",804,10,5,0)
	;;=819^DB^7^^^Delete Block
	;;^UTILITY(U,$J,"PRO",804,10,5,"^")
	;;=IBDF DELETE A BLOCK
	;;^UTILITY(U,$J,"PRO",804,10,7,0)
	;;=825^FH^10^^^Form Header
	;;^UTILITY(U,$J,"PRO",804,10,7,"^")
	;;=IBDF EDIT HEADER BLOCK
	;;^UTILITY(U,$J,"PRO",804,10,8,0)
	;;=828^NB^2^^^New Block
	;;^UTILITY(U,$J,"PRO",804,10,8,1)
	;;=New Block
	;;^UTILITY(U,$J,"PRO",804,10,8,"^")
	;;=IBDF CREATE EMPTY BLOCK
	;;^UTILITY(U,$J,"PRO",804,10,9,0)
	;;=833^RD^11^^^Re Display Screen
	;;^UTILITY(U,$J,"PRO",804,10,9,"^")
	;;=IBDF REDRAW FORM
	;;^UTILITY(U,$J,"PRO",804,10,13,0)
	;;=852^SH^5^^^Shift Blocks
	;;^UTILITY(U,$J,"PRO",804,10,13,"^")
	;;=IBDF SHIFT BLOCKS
	;;^UTILITY(U,$J,"PRO",804,10,14,0)
	;;=1073^VD^12^^^View w/wo Data (Toggle)
	;;^UTILITY(U,$J,"PRO",804,10,14,"^")
	;;=IBDF VIEW FORM W/WO DATA
	;;^UTILITY(U,$J,"PRO",804,10,15,0)
	;;=846^CF^3^^^Copy From Other Form
	;;^UTILITY(U,$J,"PRO",804,10,15,"^")
	;;=IBDF COPY FORM BLOCK
	;;^UTILITY(U,$J,"PRO",804,10,16,0)
	;;=1543^FE^9^^^Fast Selection Edit
	;;^UTILITY(U,$J,"PRO",804,10,16,"^")
	;;=IBDF QUICK SELECTION EDIT 2ND SCREEN
	;;^UTILITY(U,$J,"PRO",804,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",804,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",804,99)
	;;=56468,47481
	;;^UTILITY(U,$J,"PRO",805,0)
	;;=IBDF SELECT TOOL KIT BLOCK^Add Tool Kit Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",805,1,0)
	;;=^^4^4^2930510^
	;;^UTILITY(U,$J,"PRO",805,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",805,1,2,0)
	;;=Allows the user to select a block from the list of toolkit blocks. The
	;;^UTILITY(U,$J,"PRO",805,1,3,0)
	;;=block is then pasted to the form at a position given by the user. He can
	;;^UTILITY(U,$J,"PRO",805,1,4,0)
	;;=also change the header, size, and description of the block.
	;;^UTILITY(U,$J,"PRO",805,2,0)
	;;=^101.02A^2^2
	;;^UTILITY(U,$J,"PRO",805,2,1,0)
	;;=ST
	;;^UTILITY(U,$J,"PRO",805,2,2,0)
	;;=SB
	;;^UTILITY(U,$J,"PRO",805,2,"B","SB",2)
	;;=
	;;^UTILITY(U,$J,"PRO",805,2,"B","ST",1)
	;;=
	;;^UTILITY(U,$J,"PRO",805,20)
	;;=D SELECT^IBDF7
	;;^UTILITY(U,$J,"PRO",805,99)
	;;=56301,49966
	;;^UTILITY(U,$J,"PRO",806,0)
	;;=IBDF MENU FOR ADDING TOOL KIT BLOCK^Add Toolkit Block^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",806,1,0)
	;;=^^2^2^2931015^^^
	;;^UTILITY(U,$J,"PRO",806,1,1,0)
	;;=A menu of actions available in connection with adding a block from the 
	;;^UTILITY(U,$J,"PRO",806,1,2,0)
	;;=tool kit to a form.
	;;^UTILITY(U,$J,"PRO",806,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",806,2,1,0)
	;;=AT
	;;^UTILITY(U,$J,"PRO",806,2,"B","AT",1)
	;;=
	;;^UTILITY(U,$J,"PRO",806,4)
	;;=40^4
	;;^UTILITY(U,$J,"PRO",806,10,0)
	;;=^101.01PA^3^3
	;;^UTILITY(U,$J,"PRO",806,10,1,0)
	;;=805^AT^2
	;;^UTILITY(U,$J,"PRO",806,10,1,"^")
	;;=IBDF SELECT TOOL KIT BLOCK
	;;^UTILITY(U,$J,"PRO",806,10,2,0)
	;;=807^VB^1

IBDON005
IBDON005	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",806,10,2,"^")
	;;=IBDF VIEW TOOL KIT BLOCK
	;;^UTILITY(U,$J,"PRO",806,10,3,0)
	;;=824^EX^3^^^Exit
	;;^UTILITY(U,$J,"PRO",806,10,3,"^")
	;;=IBDF EF QUIT
	;;^UTILITY(U,$J,"PRO",806,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",806,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",806,99)
	;;=56473,40767
	;;^UTILITY(U,$J,"PRO",807,0)
	;;=IBDF VIEW TOOL KIT BLOCK^View Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",807,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",807,2,1,0)
	;;=VB
	;;^UTILITY(U,$J,"PRO",807,2,"B","VB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",807,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",807,20)
	;;=D VIEWBLK^IBDF8
	;;^UTILITY(U,$J,"PRO",807,28)
	;;=View Block:
	;;^UTILITY(U,$J,"PRO",807,99)
	;;=56301,49967
	;;^UTILITY(U,$J,"PRO",808,0)
	;;=IBDF EDIT SELECTION^Edit List Item^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",808,1,0)
	;;=^^1^1^2950414^^^^
	;;^UTILITY(U,$J,"PRO",808,1,1,0)
	;;=Allows editing of an existing selection
	;;^UTILITY(U,$J,"PRO",808,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",808,2,1,0)
	;;=EI
	;;^UTILITY(U,$J,"PRO",808,2,"B","EI",1)
	;;=
	;;^UTILITY(U,$J,"PRO",808,20)
	;;=D EDIT^IBDF4A
	;;^UTILITY(U,$J,"PRO",808,28)
	;;=Edit List Item: 
	;;^UTILITY(U,$J,"PRO",808,99)
	;;=56351,48951
	;;^UTILITY(U,$J,"PRO",809,0)
	;;=IBDF DELETE SELECTION^Delete From List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",809,1,0)
	;;=^^1^1^2950414^^
	;;^UTILITY(U,$J,"PRO",809,1,1,0)
	;;=Allows the user to choose existing selections for deletion.
	;;^UTILITY(U,$J,"PRO",809,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",809,2,1,0)
	;;=DL
	;;^UTILITY(U,$J,"PRO",809,2,"B","DL",1)
	;;=
	;;^UTILITY(U,$J,"PRO",809,20)
	;;=D DELETE^IBDF4A
	;;^UTILITY(U,$J,"PRO",809,99)
	;;=56351,48774
	;;^UTILITY(U,$J,"PRO",810,0)
	;;=IBDF MOVE BLOCK^Move Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",810,1,0)
	;;=^^1^1^2930119^^^^
	;;^UTILITY(U,$J,"PRO",810,1,1,0)
	;;=Moves a block to any position on the form.
	;;^UTILITY(U,$J,"PRO",810,2,0)
	;;=^101.02A^2^2
	;;^UTILITY(U,$J,"PRO",810,2,1,0)
	;;=MB
	;;^UTILITY(U,$J,"PRO",810,2,2,0)
	;;=MV
	;;^UTILITY(U,$J,"PRO",810,2,"B","MB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",810,2,"B","MV",2)
	;;=
	;;^UTILITY(U,$J,"PRO",810,15)
	;;=
	;;^UTILITY(U,$J,"PRO",810,20)
	;;=D MOVE^IBDF5
	;;^UTILITY(U,$J,"PRO",810,28)
	;;=Move Block: 
	;;^UTILITY(U,$J,"PRO",810,99)
	;;=56301,49966
	;;^UTILITY(U,$J,"PRO",811,0)
	;;=IBDF RESIZE BLOCK (WHILE EDITING FORM)^Block Size^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",811,1,0)
	;;=^^1^1^2930510^
	;;^UTILITY(U,$J,"PRO",811,1,1,0)
	;;=Allows the user to change the height and width of the block.
	;;^UTILITY(U,$J,"PRO",811,2,0)
	;;=^101.02A^2^2
	;;^UTILITY(U,$J,"PRO",811,2,1,0)
	;;=RS
	;;^UTILITY(U,$J,"PRO",811,2,2,0)
	;;=BS
	;;^UTILITY(U,$J,"PRO",811,2,"B","BS",2)
	;;=
	;;^UTILITY(U,$J,"PRO",811,2,"B","RS",1)
	;;=
	;;^UTILITY(U,$J,"PRO",811,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",811,20)
	;;=D RESIZE^IBDF5
	;;^UTILITY(U,$J,"PRO",811,28)
	;;=Resize Block: 
	;;^UTILITY(U,$J,"PRO",811,99)
	;;=56301,49966
	;;^UTILITY(U,$J,"PRO",812,0)
	;;=IBDF DISPLAY FORM BLOCK FOR EDIT^Edit Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",812,1,0)
	;;=^^1^1^2930727^^^
	;;^UTILITY(U,$J,"PRO",812,1,1,0)
	;;=Allows the user to select a block from the form for editing.
	;;^UTILITY(U,$J,"PRO",812,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",812,2,1,0)
	;;=ED
	;;^UTILITY(U,$J,"PRO",812,2,"B","ED",1)
	;;=
	;;^UTILITY(U,$J,"PRO",812,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",812,20)
	;;=D EDITBLK^IBDF5B
	;;^UTILITY(U,$J,"PRO",812,28)
	;;=Edit Block: 
	;;^UTILITY(U,$J,"PRO",812,99)
	;;=56301,49961
	;;^UTILITY(U,$J,"PRO",813,0)
	;;=IBDF EDIT FORM BLOCK MENU^Edit Form Block Menu^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",813,1,0)
	;;=^^1^1^2930120^^^^
	;;^UTILITY(U,$J,"PRO",813,1,1,0)
	;;=A menu of actions the user can use to define what is inside a form block.
	;;^UTILITY(U,$J,"PRO",813,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",813,10,0)
	;;=^101.01PA^9^10
	;;^UTILITY(U,$J,"PRO",813,10,1,0)
	;;=814^LT^3^^^List
	;;^UTILITY(U,$J,"PRO",813,10,1,"^")
	;;=IBDF SELECTION LIST
	;;^UTILITY(U,$J,"PRO",813,10,2,0)
	;;=820^BS^2
	;;^UTILITY(U,$J,"PRO",813,10,2,"^")
	;;=IBDF RESIZE BLOCK (WHILE EDITING BLOCK)
	;;^UTILITY(U,$J,"PRO",813,10,3,0)
	;;=821^EH^1^^^Header/Descr/Outline
	;;^UTILITY(U,$J,"PRO",813,10,3,"^")
	;;=IBDF EDIT NAME,HEADER,OUTLINE
	;;^UTILITY(U,$J,"PRO",813,10,4,0)
	;;=822^DF^4^^^Data Field
	;;^UTILITY(U,$J,"PRO",813,10,4,"^")
	;;=IBDF DATA FIELD

IBDON006
IBDON006	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",813,10,5,0)
	;;=823^LN^5^^^Straight Line
	;;^UTILITY(U,$J,"PRO",813,10,5,"^")
	;;=IBDF STRAIGHT LINE
	;;^UTILITY(U,$J,"PRO",813,10,7,0)
	;;=829^TA^6^^^Text Area
	;;^UTILITY(U,$J,"PRO",813,10,7,"^")
	;;=IBDF TEXT AREA
	;;^UTILITY(U,$J,"PRO",813,10,8,0)
	;;=832^SH^7^^^Shift Contents
	;;^UTILITY(U,$J,"PRO",813,10,8,"^")
	;;=IBDF SHIFT BLOCK CONTENTS
	;;^UTILITY(U,$J,"PRO",813,10,9,0)
	;;=853^SD^9^^^Save/Discard Changes
	;;^UTILITY(U,$J,"PRO",813,10,9,"^")
	;;=IBDF SAVE/DISCARD BLOCK CHANGES
	;;^UTILITY(U,$J,"PRO",813,10,10,0)
	;;=1073^VD^8^^^View w/wo Data (Toggle)
	;;^UTILITY(U,$J,"PRO",813,10,10,"^")
	;;=IBDF VIEW FORM W/WO DATA
	;;^UTILITY(U,$J,"PRO",813,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",813,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",813,99)
	;;=56505,38482
	;;^UTILITY(U,$J,"PRO",814,0)
	;;=IBDF SELECTION LIST^Selection List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",814,1,0)
	;;=^^2^2^2930322^
	;;^UTILITY(U,$J,"PRO",814,1,1,0)
	;;=Allows the user to create a new selection list, delete or edit an already
	;;^UTILITY(U,$J,"PRO",814,1,2,0)
	;;=existing one, or change the contents of a list.
	;;^UTILITY(U,$J,"PRO",814,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",814,2,1,0)
	;;=SE
	;;^UTILITY(U,$J,"PRO",814,2,"B","SE",1)
	;;=
	;;^UTILITY(U,$J,"PRO",814,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",814,20)
	;;=D LIST^IBDF9A
	;;^UTILITY(U,$J,"PRO",814,28)
	;;=
	;;^UTILITY(U,$J,"PRO",814,99)
	;;=56301,49966
	;;^UTILITY(U,$J,"PRO",815,0)
	;;=IBDF CREATE BLANK FORM^Create Blank Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",815,1,0)
	;;=^^1^1^2951024^^^^
	;;^UTILITY(U,$J,"PRO",815,1,1,0)
	;;=Creates a new blank form and allows the user to add it to the clinic setup.
	;;^UTILITY(U,$J,"PRO",815,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",815,2,1,0)
	;;=CR
	;;^UTILITY(U,$J,"PRO",815,2,"B","CR",1)
	;;=
	;;^UTILITY(U,$J,"PRO",815,20)
	;;=D NEWFORM^IBDF6A
	;;^UTILITY(U,$J,"PRO",815,28)
	;;=Create Blank Form: 
	;;^UTILITY(U,$J,"PRO",815,99)
	;;=56301,49960
	;;^UTILITY(U,$J,"PRO",816,0)
	;;=IBDF COPY FORM^Copy Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",816,1,0)
	;;=^^2^2^2930127^
	;;^UTILITY(U,$J,"PRO",816,1,1,0)
	;;=Allows the user to choose any form and and copy it, giving it a new name. 
	;;^UTILITY(U,$J,"PRO",816,1,2,0)
	;;=He can then add it to the clinic setup.
	;;^UTILITY(U,$J,"PRO",816,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",816,2,1,0)
	;;=CP
	;;^UTILITY(U,$J,"PRO",816,2,"B","CP",1)
	;;=
	;;^UTILITY(U,$J,"PRO",816,20)
	;;=D COPYFORM^IBDF6A
	;;^UTILITY(U,$J,"PRO",816,28)
	;;=Copy Form: 
	;;^UTILITY(U,$J,"PRO",816,99)
	;;=56301,49960
	;;^UTILITY(U,$J,"PRO",817,0)
	;;=IBDF ADD TO CLINIC SETUP^Add Form to Setup^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",817,1,0)
	;;=^^1^1^2930127^
	;;^UTILITY(U,$J,"PRO",817,1,1,0)
	;;=Allows the user to add a form to the clinic setup.
	;;^UTILITY(U,$J,"PRO",817,2,0)
	;;=^101.02A^2^2
	;;^UTILITY(U,$J,"PRO",817,2,1,0)
	;;=CS
	;;^UTILITY(U,$J,"PRO",817,2,2,0)
	;;=AC
	;;^UTILITY(U,$J,"PRO",817,2,"B","AC",2)
	;;=
	;;^UTILITY(U,$J,"PRO",817,2,"B","CS",1)
	;;=
	;;^UTILITY(U,$J,"PRO",817,20)
	;;=D SETUP^IBDF6A
	;;^UTILITY(U,$J,"PRO",817,28)
	;;=Add to Setup: 
	;;^UTILITY(U,$J,"PRO",817,99)
	;;=56301,49959
	;;^UTILITY(U,$J,"PRO",818,0)
	;;=IBDF DELETE FROM CLINIC SETUP^Delete from Setup^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",818,1,0)
	;;=^^1^1^2930127^
	;;^UTILITY(U,$J,"PRO",818,1,1,0)
	;;=Allows the user to select a form and deletes it from the clinic setup.
	;;^UTILITY(U,$J,"PRO",818,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",818,2,1,0)
	;;=DC
	;;^UTILITY(U,$J,"PRO",818,2,"B","DC",1)
	;;=
	;;^UTILITY(U,$J,"PRO",818,20)
	;;=D DSETUP^IBDF6C
	;;^UTILITY(U,$J,"PRO",818,28)
	;;=Delete From Clinic Setup: 
	;;^UTILITY(U,$J,"PRO",818,99)
	;;=56301,49960
	;;^UTILITY(U,$J,"PRO",819,0)
	;;=IBDF DELETE A BLOCK^Delete Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",819,1,0)
	;;=^^1^1^2930127^^
	;;^UTILITY(U,$J,"PRO",819,1,1,0)
	;;=Allows the user to select a block from the form and delete it.
	;;^UTILITY(U,$J,"PRO",819,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",819,2,1,0)
	;;=DB
	;;^UTILITY(U,$J,"PRO",819,2,"B","DB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",819,20)
	;;=D DELETE^IBDF5
	;;^UTILITY(U,$J,"PRO",819,28)
	;;=Delete a Block: 
	;;^UTILITY(U,$J,"PRO",819,99)
	;;=56301,49960
	;;^UTILITY(U,$J,"PRO",820,0)
	;;=IBDF RESIZE BLOCK (WHILE EDITING BLOCK)^Block Size^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",820,1,0)
	;;=^^2^2^2930510^

IBDON007
IBDON007	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",820,1,1,0)
	;;=This allows the user to change the height and width of the block while he
	;;^UTILITY(U,$J,"PRO",820,1,2,0)
	;;=is editing the block.
	;;^UTILITY(U,$J,"PRO",820,2,0)
	;;=^101.02A^2^2
	;;^UTILITY(U,$J,"PRO",820,2,1,0)
	;;=RS
	;;^UTILITY(U,$J,"PRO",820,2,2,0)
	;;=BS
	;;^UTILITY(U,$J,"PRO",820,2,"B","BS",2)
	;;=
	;;^UTILITY(U,$J,"PRO",820,2,"B","RS",1)
	;;=
	;;^UTILITY(U,$J,"PRO",820,20)
	;;=D RESIZE^IBDF9
	;;^UTILITY(U,$J,"PRO",820,99)
	;;=56301,49966
	;;^UTILITY(U,$J,"PRO",821,0)
	;;=IBDF EDIT NAME,HEADER,OUTLINE^Header/Descr/Outline^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",821,1,0)
	;;=^^1^1^2930201^
	;;^UTILITY(U,$J,"PRO",821,1,1,0)
	;;=Allows editing of the block header and outline type.
	;;^UTILITY(U,$J,"PRO",821,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",821,2,1,0)
	;;=EH
	;;^UTILITY(U,$J,"PRO",821,2,"B","EH",1)
	;;=
	;;^UTILITY(U,$J,"PRO",821,20)
	;;=D EDITBLK^IBDF9
	;;^UTILITY(U,$J,"PRO",821,99)
	;;=56301,49963
	;;^UTILITY(U,$J,"PRO",822,0)
	;;=IBDF DATA FIELD^Data Field^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",822,1,0)
	;;=^^2^2^2930322^
	;;^UTILITY(U,$J,"PRO",822,1,1,0)
	;;=Allows the user to create a new data field or edit or delete an already
	;;^UTILITY(U,$J,"PRO",822,1,2,0)
	;;=existing one.
	;;^UTILITY(U,$J,"PRO",822,2,0)
	;;=^101.02A^2^1
	;;^UTILITY(U,$J,"PRO",822,2,2,0)
	;;=DF
	;;^UTILITY(U,$J,"PRO",822,2,"B","DF",2)
	;;=
	;;^UTILITY(U,$J,"PRO",822,20)
	;;=D FIELD^IBDF9B
	;;^UTILITY(U,$J,"PRO",822,99)
	;;=56301,49960
	;;^UTILITY(U,$J,"PRO",823,0)
	;;=IBDF STRAIGHT LINE^Straight Line^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",823,1,0)
	;;=^^2^2^2930324^^
	;;^UTILITY(U,$J,"PRO",823,1,1,0)
	;;=Allows a straight line, either horizontal or vertical, to be created,
	;;^UTILITY(U,$J,"PRO",823,1,2,0)
	;;=deleted or edited.
	;;^UTILITY(U,$J,"PRO",823,2,0)
	;;=^101.02A^2^1
	;;^UTILITY(U,$J,"PRO",823,2,2,0)
	;;=LN
	;;^UTILITY(U,$J,"PRO",823,2,"B","LN",2)
	;;=
	;;^UTILITY(U,$J,"PRO",823,20)
	;;=D LINE^IBDF9D
	;;^UTILITY(U,$J,"PRO",823,99)
	;;=56301,49966
	;;^UTILITY(U,$J,"PRO",824,0)
	;;=IBDF EF QUIT^EXIT^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",824,.1)
	;;=EXIT
	;;^UTILITY(U,$J,"PRO",824,1,0)
	;;=^^2^2^2950809^^^^
	;;^UTILITY(U,$J,"PRO",824,1,1,0)
	;;=Allows the user to exit the system without quitting through the hierarchy of
	;;^UTILITY(U,$J,"PRO",824,1,2,0)
	;;=screens, or the user can exit to the previous screen.
	;;^UTILITY(U,$J,"PRO",824,2,0)
	;;=^101.02A^2^1
	;;^UTILITY(U,$J,"PRO",824,2,2,0)
	;;=EXIT
	;;^UTILITY(U,$J,"PRO",824,2,"B","EXIT",2)
	;;=
	;;^UTILITY(U,$J,"PRO",824,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",824,20)
	;;=D FASTEXIT^IBDFU3
	;;^UTILITY(U,$J,"PRO",824,99)
	;;=56468,47910
	;;^UTILITY(U,$J,"PRO",824,101.0431,0)
	;;=^^3^3^2950809^^
	;;^UTILITY(U,$J,"PRO",824,101.0431,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",824,101.0431,2,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",824,101.0431,3,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",825,0)
	;;=IBDF EDIT HEADER BLOCK^Form Header^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",825,1,0)
	;;=^^1^1^2930211^
	;;^UTILITY(U,$J,"PRO",825,1,1,0)
	;;=Allows the form header to be edited
	;;^UTILITY(U,$J,"PRO",825,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",825,2,1,0)
	;;=FH
	;;^UTILITY(U,$J,"PRO",825,2,"B","FH",1)
	;;=
	;;^UTILITY(U,$J,"PRO",825,20)
	;;=D EDITHDR^IBDF9C
	;;^UTILITY(U,$J,"PRO",825,99)
	;;=56301,49963
	;;^UTILITY(U,$J,"PRO",826,0)
	;;=IBDF PRINT SAMPLE FORM^Print Sample Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",826,1,0)
	;;=^^1^1^2950130^^^^
	;;^UTILITY(U,$J,"PRO",826,1,1,0)
	;;=Allows a sample form, without patient information, to be printed.
	;;^UTILITY(U,$J,"PRO",826,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",826,2,1,0)
	;;=PF
	;;^UTILITY(U,$J,"PRO",826,2,"B","PF",1)
	;;=
	;;^UTILITY(U,$J,"PRO",826,15)
	;;=
	;;^UTILITY(U,$J,"PRO",826,20)
	;;=D PRINT^IBDF5B
	;;^UTILITY(U,$J,"PRO",826,99)
	;;=56301,49966
	;;^UTILITY(U,$J,"PRO",827,0)
	;;=IBDF DELETE FORM^Delete Unused Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",827,1,0)
	;;=^^6^6^2930224^
	;;^UTILITY(U,$J,"PRO",827,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",827,1,2,0)
	;;=Allows the user to delete a form. Deletion is not allowed if the form is
	;;^UTILITY(U,$J,"PRO",827,1,3,0)
	;;=in use by any clinic. In that case the form must first be deleted from the
	;;^UTILITY(U,$J,"PRO",827,1,4,0)
	;;=clinic setup, and then actually deleted using this action. This two step
	;;^UTILITY(U,$J,"PRO",827,1,5,0)
	;;=process is used to be on the safe side, since a form may be in use by more

IBDON008
IBDON008	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",827,1,6,0)
	;;=than one clinic.
	;;^UTILITY(U,$J,"PRO",827,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",827,2,1,0)
	;;=DF
	;;^UTILITY(U,$J,"PRO",827,2,"B","DF",1)
	;;=
	;;^UTILITY(U,$J,"PRO",827,20)
	;;=D DELFORM^IBDF6A
	;;^UTILITY(U,$J,"PRO",827,99)
	;;=56301,49960
	;;^UTILITY(U,$J,"PRO",828,0)
	;;=IBDF CREATE EMPTY BLOCK^New Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",828,1,0)
	;;=^^2^2^2930322^
	;;^UTILITY(U,$J,"PRO",828,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",828,1,2,0)
	;;=Allows the user to add a new empty block to the form.
	;;^UTILITY(U,$J,"PRO",828,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",828,2,1,0)
	;;=NB
	;;^UTILITY(U,$J,"PRO",828,2,"B","NB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",828,20)
	;;=D NEWBLOCK^IBDF5C
	;;^UTILITY(U,$J,"PRO",828,99)
	;;=56301,49960
	;;^UTILITY(U,$J,"PRO",829,0)
	;;=IBDF TEXT AREA^Text Area^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",829,1,0)
	;;=^^3^3^2930326^
	;;^UTILITY(U,$J,"PRO",829,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",829,1,2,0)
	;;=Allows the user to specify text and a rectangular area on the block that
	;;^UTILITY(U,$J,"PRO",829,1,3,0)
	;;=the text should appear in.
	;;^UTILITY(U,$J,"PRO",829,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",829,2,1,0)
	;;=TA
	;;^UTILITY(U,$J,"PRO",829,2,"B","TA",1)
	;;=
	;;^UTILITY(U,$J,"PRO",829,20)
	;;=D TEXT^IBDF9E
	;;^UTILITY(U,$J,"PRO",829,99)
	;;=56301,49967
	;;^UTILITY(U,$J,"PRO",830,0)
	;;=IBDF CHANGE CLINIC^Change Clinic^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",830,1,0)
	;;=^^3^3^2930413^
	;;^UTILITY(U,$J,"PRO",830,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",830,1,2,0)
	;;=Allows the user to specify a different clinic. The  setup for the new
	;;^UTILITY(U,$J,"PRO",830,1,3,0)
	;;=clinic will then be displayed.
	;;^UTILITY(U,$J,"PRO",830,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",830,2,1,0)
	;;=CC
	;;^UTILITY(U,$J,"PRO",830,2,"B","CC",1)
	;;=
	;;^UTILITY(U,$J,"PRO",830,20)
	;;=D CHNGCLNC^IBDF6
	;;^UTILITY(U,$J,"PRO",830,99)
	;;=56301,49959
	;;^UTILITY(U,$J,"PRO",831,0)
	;;=IBDF EDIT FORM NAME/DESCR/SIZE^Form Name/Descr/Size^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",831,1,0)
	;;=^^1^1^2930420^
	;;^UTILITY(U,$J,"PRO",831,1,1,0)
	;;=Allows the user to select a form, then edit its name, description, and size.
	;;^UTILITY(U,$J,"PRO",831,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",831,2,1,0)
	;;=NM
	;;^UTILITY(U,$J,"PRO",831,2,"B","NM",1)
	;;=
	;;^UTILITY(U,$J,"PRO",831,20)
	;;=D EDITFORM^IBDF6C
	;;^UTILITY(U,$J,"PRO",831,99)
	;;=56301,49963
	;;^UTILITY(U,$J,"PRO",832,0)
	;;=IBDF SHIFT BLOCK CONTENTS^Shift Contents^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",832,1,0)
	;;=^^4^4^2930510^
	;;^UTILITY(U,$J,"PRO",832,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",832,1,2,0)
	;;=The user can use this action to move the contents of a block. He can
	;;^UTILITY(U,$J,"PRO",832,1,3,0)
	;;=specify the type of object to shift, the area to be affected and the
	;;^UTILITY(U,$J,"PRO",832,1,4,0)
	;;=direction and distance of the shift.
	;;^UTILITY(U,$J,"PRO",832,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",832,2,1,0)
	;;=SH
	;;^UTILITY(U,$J,"PRO",832,2,"B","SH",1)
	;;=
	;;^UTILITY(U,$J,"PRO",832,15)
	;;=D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
	;;^UTILITY(U,$J,"PRO",832,20)
	;;=D SHIFT^IBDF10()
	;;^UTILITY(U,$J,"PRO",832,99)
	;;=56301,49966
	;;^UTILITY(U,$J,"PRO",833,0)
	;;=IBDF REDRAW FORM^Re Display Screen^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",833,1,0)
	;;=^^5^5^2930510^
	;;^UTILITY(U,$J,"PRO",833,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",833,1,2,0)
	;;=Causes the form to be re-displayed. Should be used if it is suspected that
	;;^UTILITY(U,$J,"PRO",833,1,3,0)
	;;=the display is incorrect. This differs from the refresh action that comes
	;;^UTILITY(U,$J,"PRO",833,1,4,0)
	;;=with the List Processor in that the array which contains the list of form
	;;^UTILITY(U,$J,"PRO",833,1,5,0)
	;;=lines is re-built.
	;;^UTILITY(U,$J,"PRO",833,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",833,2,1,0)
	;;=RD
	;;^UTILITY(U,$J,"PRO",833,2,"B","RD",1)
	;;=
	;;^UTILITY(U,$J,"PRO",833,20)
	;;=D REDRAW^IBDF5C
	;;^UTILITY(U,$J,"PRO",833,99)
	;;=56301,49966
	;;^UTILITY(U,$J,"PRO",839,0)
	;;=IBDF TOOL KIT FORMS MENU^IBDF TOOL KIT FORMS MENU^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",839,1,0)
	;;=^^2^2^2930624^^^
	;;^UTILITY(U,$J,"PRO",839,1,1,0)
	;;=Displays the tool kit forms. Allows the user to edit them, create new ones,
	;;^UTILITY(U,$J,"PRO",839,1,2,0)
	;;=etc.
	;;^UTILITY(U,$J,"PRO",839,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",839,10,0)
	;;=^101.01PA^6^10

IBDON009
IBDON009	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",839,10,1,0)
	;;=802^EF^^^^Edit Form
	;;^UTILITY(U,$J,"PRO",839,10,1,"^")
	;;=IBDF EDIT FORM
	;;^UTILITY(U,$J,"PRO",839,10,2,0)
	;;=815^CR^^^^Create Blank Form
	;;^UTILITY(U,$J,"PRO",839,10,2,"^")
	;;=IBDF CREATE BLANK FORM
	;;^UTILITY(U,$J,"PRO",839,10,3,0)
	;;=816^CF^^^^Copy Form
	;;^UTILITY(U,$J,"PRO",839,10,3,1)
	;;=Copy Form:
	;;^UTILITY(U,$J,"PRO",839,10,3,"^")
	;;=IBDF COPY FORM
	;;^UTILITY(U,$J,"PRO",839,10,6,0)
	;;=826^PR^^^^Print Sample Form
	;;^UTILITY(U,$J,"PRO",839,10,6,"^")
	;;=IBDF PRINT SAMPLE FORM
	;;^UTILITY(U,$J,"PRO",839,10,9,0)
	;;=831^NM^2^^^Form Name/Descr/Size
	;;^UTILITY(U,$J,"PRO",839,10,9,"^")
	;;=IBDF EDIT FORM NAME/DESCR/SIZE
	;;^UTILITY(U,$J,"PRO",839,10,10,0)
	;;=840^DF^3^^^Delete Form
	;;^UTILITY(U,$J,"PRO",839,10,10,"^")
	;;=IBDF DELETE TOOL KIT FORM
	;;^UTILITY(U,$J,"PRO",839,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",839,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",839,99)
	;;=56301,49967
	;;^UTILITY(U,$J,"PRO",840,0)
	;;=IBDF DELETE TOOL KIT FORM^Delete Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",840,1,0)
	;;=^^1^1^2930624^
	;;^UTILITY(U,$J,"PRO",840,1,1,0)
	;;=Allows the user to delete a form from the tool kit.
	;;^UTILITY(U,$J,"PRO",840,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",840,2,1,0)
	;;=DT
	;;^UTILITY(U,$J,"PRO",840,2,"B","DT",1)
	;;=
	;;^UTILITY(U,$J,"PRO",840,20)
	;;=D DELFORM^IBDF12
	;;^UTILITY(U,$J,"PRO",840,99)
	;;=56301,49960
	;;^UTILITY(U,$J,"PRO",841,0)
	;;=IBDF EDIT TOOL KIT BLOCKS MENU^EDIT TOOL KIT BLOCKS MENU^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",841,1,0)
	;;=^^1^1^2941117^^^^
	;;^UTILITY(U,$J,"PRO",841,1,1,0)
	;;=Allows the user to edit tool kit blocks.
	;;^UTILITY(U,$J,"PRO",841,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",841,2,1,0)
	;;=EB
	;;^UTILITY(U,$J,"PRO",841,2,"B","EB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",841,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",841,10,0)
	;;=^101.01PA^5^14
	;;^UTILITY(U,$J,"PRO",841,10,10,0)
	;;=842^EB^1^^^Edit Block
	;;^UTILITY(U,$J,"PRO",841,10,10,"^")
	;;=IBDF EDIT TOOL KIT BLOCK
	;;^UTILITY(U,$J,"PRO",841,10,11,0)
	;;=843^NB^2^^^New Block
	;;^UTILITY(U,$J,"PRO",841,10,11,"^")
	;;=IBDF NEW TOOL KIT BLOCK
	;;^UTILITY(U,$J,"PRO",841,10,12,0)
	;;=844^DB^3^^^Delete Block
	;;^UTILITY(U,$J,"PRO",841,10,12,"^")
	;;=IBDF DELETE TOOL KIT BLOCK
	;;^UTILITY(U,$J,"PRO",841,10,13,0)
	;;=845^CB^^^^Copy Block
	;;^UTILITY(U,$J,"PRO",841,10,13,"^")
	;;=IBDF COPY BLOCK INTO TOOL KIT
	;;^UTILITY(U,$J,"PRO",841,10,14,0)
	;;=875^CH^5^^^Change TK Order
	;;^UTILITY(U,$J,"PRO",841,10,14,"^")
	;;=IBDF CHANGE BLOCK TK ORDER
	;;^UTILITY(U,$J,"PRO",841,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",841,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",841,99)
	;;=56505,40444
	;;^UTILITY(U,$J,"PRO",842,0)
	;;=IBDF EDIT TOOL KIT BLOCK^Edit Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",842,1,0)
	;;=^^1^1^2930727^^^
	;;^UTILITY(U,$J,"PRO",842,1,1,0)
	;;=Allows the user to edit a tool kit block.
	;;^UTILITY(U,$J,"PRO",842,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",842,2,1,0)
	;;=EB
	;;^UTILITY(U,$J,"PRO",842,2,"B","EB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",842,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",842,20)
	;;=D EDITBLK^IBDF13
	;;^UTILITY(U,$J,"PRO",842,99)
	;;=56301,49963
	;;^UTILITY(U,$J,"PRO",843,0)
	;;=IBDF NEW TOOL KIT BLOCK^New Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",843,1,0)
	;;=^^1^1^2930624^
	;;^UTILITY(U,$J,"PRO",843,1,1,0)
	;;=Allows the user to create a new tool kit block.
	;;^UTILITY(U,$J,"PRO",843,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",843,2,1,0)
	;;=NB
	;;^UTILITY(U,$J,"PRO",843,2,"B","NB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",843,20)
	;;=D NEWBLK^IBDF13
	;;^UTILITY(U,$J,"PRO",843,99)
	;;=56301,49966
	;;^UTILITY(U,$J,"PRO",844,0)
	;;=IBDF DELETE TOOL KIT BLOCK^Delete Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",844,1,0)
	;;=^^1^1^2930625^
	;;^UTILITY(U,$J,"PRO",844,1,1,0)
	;;=Allows the user to delete a block from the tool kit.
	;;^UTILITY(U,$J,"PRO",844,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",844,2,1,0)
	;;=DB
	;;^UTILITY(U,$J,"PRO",844,2,"B","DB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",844,20)
	;;=D DLTBLOCK^IBDF13
	;;^UTILITY(U,$J,"PRO",844,99)
	;;=56301,49960
	;;^UTILITY(U,$J,"PRO",845,0)
	;;=IBDF COPY BLOCK INTO TOOL KIT^Copy Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",845,1,0)
	;;=^^1^1^2930625^
	;;^UTILITY(U,$J,"PRO",845,1,1,0)
	;;=Allows the user to select any block and copy it into the tool kit.
	;;^UTILITY(U,$J,"PRO",845,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",845,2,1,0)
	;;=CB

IBDON010
IBDON010	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",845,2,"B","CB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",845,20)
	;;=D COPYBLK^IBDF13
	;;^UTILITY(U,$J,"PRO",845,99)
	;;=56301,49960
	;;^UTILITY(U,$J,"PRO",846,0)
	;;=IBDF COPY FORM BLOCK^Copy From Other Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",846,.1)
	;;=
	;;^UTILITY(U,$J,"PRO",846,1,0)
	;;=^^2^2^2941206^^^
	;;^UTILITY(U,$J,"PRO",846,1,1,0)
	;;=Allows a block or page from any form to be selected and pasted to the
	;;^UTILITY(U,$J,"PRO",846,1,2,0)
	;;=current form.
	;;^UTILITY(U,$J,"PRO",846,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",846,2,1,0)
	;;=CF
	;;^UTILITY(U,$J,"PRO",846,2,"B","CF",1)
	;;=
	;;^UTILITY(U,$J,"PRO",846,20)
	;;=D COPY^IBDF5D
	;;^UTILITY(U,$J,"PRO",846,99)
	;;=56301,49960
	;;^UTILITY(U,$J,"PRO",852,0)
	;;=IBDF SHIFT BLOCKS^Shift Blocks^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",852,1,0)
	;;=^^3^3^2930716^
	;;^UTILITY(U,$J,"PRO",852,1,1,0)
	;;=Allows the user to shift a group of blocks. The user is asked to specify
	;;^UTILITY(U,$J,"PRO",852,1,2,0)
	;;=a rectangular region where the shift should occur, the direction of movement
	;;^UTILITY(U,$J,"PRO",852,1,3,0)
	;;=and distance.
	;;^UTILITY(U,$J,"PRO",852,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",852,2,1,0)
	;;=SB
	;;^UTILITY(U,$J,"PRO",852,2,"B","SB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",852,20)
	;;=D SHIFT^IBDF5
	;;^UTILITY(U,$J,"PRO",852,99)
	;;=56301,49966
	;;^UTILITY(U,$J,"PRO",853,0)
	;;=IBDF SAVE/DISCARD BLOCK CHANGES^Save/Discard Changes^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",853,1,0)
	;;=^^1^1^2930728^^
	;;^UTILITY(U,$J,"PRO",853,1,1,0)
	;;=Allows the user to save the changes to the block he is currently editing.
	;;^UTILITY(U,$J,"PRO",853,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",853,2,1,0)
	;;=SD
	;;^UTILITY(U,$J,"PRO",853,2,"B","SD",1)
	;;=
	;;^UTILITY(U,$J,"PRO",853,20)
	;;=D DECIDE^IBDF5B
	;;^UTILITY(U,$J,"PRO",853,99)
	;;=56301,49966
	;;^UTILITY(U,$J,"PRO",854,0)
	;;=IBDF QUIT^Exit^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",854,1,0)
	;;=^^1^1^2930729^^
	;;^UTILITY(U,$J,"PRO",854,1,1,0)
	;;=Quits to the prior level.
	;;^UTILITY(U,$J,"PRO",854,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",854,2,1,0)
	;;=Ex
	;;^UTILITY(U,$J,"PRO",854,2,"B","Ex",1)
	;;=
	;;^UTILITY(U,$J,"PRO",854,15)
	;;=S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",854,99)
	;;=56301,49966
	;;^UTILITY(U,$J,"PRO",858,0)
	;;=IBDE IMP/EXP MENU FOR FORMS^List Forms^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",858,1,0)
	;;=^^2^2^2930813^^^^
	;;^UTILITY(U,$J,"PRO",858,1,1,0)
	;;=The main menu of the import/export utility, which allows forms and
	;;^UTILITY(U,$J,"PRO",858,1,2,0)
	;;=tool kit blocks to be transferred between sites.
	;;^UTILITY(U,$J,"PRO",858,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",858,10,0)
	;;=^101.01PA^10^11
	;;^UTILITY(U,$J,"PRO",858,10,2,0)
	;;=859^AE^6^^^Add Entry
	;;^UTILITY(U,$J,"PRO",858,10,2,"^")
	;;=IBDE ADD FORM TO IMP/EXP WS
	;;^UTILITY(U,$J,"PRO",858,10,3,0)
	;;=860^DE^5^^^Delete Entry
	;;^UTILITY(U,$J,"PRO",858,10,3,"^")
	;;=IBDE DELETE FORM FROM IMP/EXP FILES
	;;^UTILITY(U,$J,"PRO",858,10,4,0)
	;;=861^CW^4^^^Clear Work Space
	;;^UTILITY(U,$J,"PRO",858,10,4,"^")
	;;=IBDE DELETE IMP/EXP FILES
	;;^UTILITY(U,$J,"PRO",858,10,5,0)
	;;=862^EI^8^^^Edit Imp/Exp Notes
	;;^UTILITY(U,$J,"PRO",858,10,5,"^")
	;;=IBDE EDIT FORM'S IMP/EXP NOTES
	;;^UTILITY(U,$J,"PRO",858,10,6,0)
	;;=863^VI^7^^^View Imp/Exp Notes
	;;^UTILITY(U,$J,"PRO",858,10,6,"^")
	;;=IBDE VIEW FORM'S IMP/EXP NOTES
	;;^UTILITY(U,$J,"PRO",858,10,7,0)
	;;=864^IE^3^^^Import Entry
	;;^UTILITY(U,$J,"PRO",858,10,7,"^")
	;;=IBDE IMPORT FORM
	;;^UTILITY(U,$J,"PRO",858,10,8,0)
	;;=865^HE^1^^^Help
	;;^UTILITY(U,$J,"PRO",858,10,8,"^")
	;;=IBDE IMP/EXP HELP
	;;^UTILITY(U,$J,"PRO",858,10,9,0)
	;;=866^DI^9^^^DIFROM
	;;^UTILITY(U,$J,"PRO",858,10,9,"^")
	;;=IBDE EXECUTE DIFROM
	;;^UTILITY(U,$J,"PRO",858,10,10,0)
	;;=867^RI^10^^^Run Inits
	;;^UTILITY(U,$J,"PRO",858,10,10,"^")
	;;=IBDE EXECUTE INITS
	;;^UTILITY(U,$J,"PRO",858,10,11,0)
	;;=869^LB^2^^^List TK Blocks
	;;^UTILITY(U,$J,"PRO",858,10,11,"^")
	;;=IBDE DISPLAY TK BLOCKS
	;;^UTILITY(U,$J,"PRO",858,20)
	;;=
	;;^UTILITY(U,$J,"PRO",858,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",858,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",858,99)
	;;=56309,52661
	;;^UTILITY(U,$J,"PRO",859,0)
	;;=IBDE ADD FORM TO IMP/EXP WS^Add Entry^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",859,.1)
	;;=
	;;^UTILITY(U,$J,"PRO",859,1,0)
	;;=^^1^1^2960205^^^
	;;^UTILITY(U,$J,"PRO",859,1,1,0)
	;;=Allows the user to add a form to the IMP/EXP files.
	;;^UTILITY(U,$J,"PRO",859,2,0)
	;;=^101.02A^3^3

IBDON011
IBDON011	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",859,2,1,0)
	;;=TEST
	;;^UTILITY(U,$J,"PRO",859,2,2,0)
	;;=ADD
	;;^UTILITY(U,$J,"PRO",859,2,3,0)
	;;=AW
	;;^UTILITY(U,$J,"PRO",859,2,"B","ADD",2)
	;;=
	;;^UTILITY(U,$J,"PRO",859,2,"B","AW",3)
	;;=
	;;^UTILITY(U,$J,"PRO",859,2,"B","TEST",1)
	;;=
	;;^UTILITY(U,$J,"PRO",859,20)
	;;=D ADD^IBDE1
	;;^UTILITY(U,$J,"PRO",859,99)
	;;=56222,29861
	;;^UTILITY(U,$J,"PRO",860,0)
	;;=IBDE DELETE FORM FROM IMP/EXP FILES^Delete Entry^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",860,1,0)
	;;=^^1^1^2930813^
	;;^UTILITY(U,$J,"PRO",860,1,1,0)
	;;=Allows the user to select a form in the imp/exp files and deletes it.
	;;^UTILITY(U,$J,"PRO",860,2,0)
	;;=^101.02A^2^2
	;;^UTILITY(U,$J,"PRO",860,2,1,0)
	;;=DEL
	;;^UTILITY(U,$J,"PRO",860,2,2,0)
	;;=DW
	;;^UTILITY(U,$J,"PRO",860,2,"B","DEL",1)
	;;=
	;;^UTILITY(U,$J,"PRO",860,2,"B","DW",2)
	;;=
	;;^UTILITY(U,$J,"PRO",860,20)
	;;=D DELETE^IBDE1
	;;^UTILITY(U,$J,"PRO",860,99)
	;;=56222,29861
	;;^UTILITY(U,$J,"PRO",861,0)
	;;=IBDE DELETE IMP/EXP FILES^Clear Work Space^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",861,1,0)
	;;=^^1^1^2930813^^
	;;^UTILITY(U,$J,"PRO",861,1,1,0)
	;;=Deletes all of the imp/exp files (358 range).
	;;^UTILITY(U,$J,"PRO",861,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",861,2,1,0)
	;;=CW
	;;^UTILITY(U,$J,"PRO",861,2,"B","CW",1)
	;;=
	;;^UTILITY(U,$J,"PRO",861,20)
	;;=D DLTALL^IBDE2
	;;^UTILITY(U,$J,"PRO",861,99)
	;;=56222,29861
	;;^UTILITY(U,$J,"PRO",862,0)
	;;=IBDE EDIT FORM'S IMP/EXP NOTES^Edit Imp/Exp Notes^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",862,1,0)
	;;=^^2^2^2930813^^
	;;^UTILITY(U,$J,"PRO",862,1,1,0)
	;;=Allows the user to select a form form from the imp/exp files, then allows
	;;^UTILITY(U,$J,"PRO",862,1,2,0)
	;;=the user to edit the imp/exp notes.
	;;^UTILITY(U,$J,"PRO",862,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",862,2,1,0)
	;;=EE
	;;^UTILITY(U,$J,"PRO",862,2,"B","EE",1)
	;;=
	;;^UTILITY(U,$J,"PRO",862,20)
	;;=D EDIT^IBDE1
	;;^UTILITY(U,$J,"PRO",862,99)
	;;=56222,29861
	;;^UTILITY(U,$J,"PRO",863,0)
	;;=IBDE VIEW FORM'S IMP/EXP NOTES^View Imp/Exp Notes^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",863,1,0)
	;;=^^2^2^2930813^
	;;^UTILITY(U,$J,"PRO",863,1,1,0)
	;;=Allows the user to select a form from the IMP/EXP files, then displays
	;;^UTILITY(U,$J,"PRO",863,1,2,0)
	;;=the imp/exp notes.
	;;^UTILITY(U,$J,"PRO",863,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",863,2,1,0)
	;;=VI
	;;^UTILITY(U,$J,"PRO",863,2,"B","VI",1)
	;;=
	;;^UTILITY(U,$J,"PRO",863,20)
	;;=D VIEW^IBDE1
	;;^UTILITY(U,$J,"PRO",863,99)
	;;=56222,29861
	;;^UTILITY(U,$J,"PRO",864,0)
	;;=IBDE IMPORT FORM^Import Entry^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",864,1,0)
	;;=^^1^1^2960105^^^^
	;;^UTILITY(U,$J,"PRO",864,1,1,0)
	;;=Allows the user to select a form from the work space, then imports it.
	;;^UTILITY(U,$J,"PRO",864,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",864,2,1,0)
	;;=IE
	;;^UTILITY(U,$J,"PRO",864,2,"B","IE",1)
	;;=
	;;^UTILITY(U,$J,"PRO",864,20)
	;;=D IMPORT^IBDE1
	;;^UTILITY(U,$J,"PRO",864,99)
	;;=56222,29861
	;;^UTILITY(U,$J,"PRO",865,0)
	;;=IBDE IMP/EXP HELP^Help^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",865,1,0)
	;;=^^2^2^2930813^
	;;^UTILITY(U,$J,"PRO",865,1,1,0)
	;;=Displays help information about the import/export procedures that the user
	;;^UTILITY(U,$J,"PRO",865,1,2,0)
	;;=must follow.
	;;^UTILITY(U,$J,"PRO",865,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",865,2,1,0)
	;;=HE
	;;^UTILITY(U,$J,"PRO",865,2,"B","HE",1)
	;;=
	;;^UTILITY(U,$J,"PRO",865,20)
	;;=D HELP^IBDEHELP
	;;^UTILITY(U,$J,"PRO",865,99)
	;;=56222,29861
	;;^UTILITY(U,$J,"PRO",866,0)
	;;=IBDE EXECUTE DIFROM^DIFROM^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",866,1,0)
	;;=^^1^1^2930813^
	;;^UTILITY(U,$J,"PRO",866,1,1,0)
	;;=Allows the user to execute ^DIFROM without leaving the imp/exp utility.
	;;^UTILITY(U,$J,"PRO",866,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",866,2,1,0)
	;;=DI
	;;^UTILITY(U,$J,"PRO",866,2,"B","DI",1)
	;;=
	;;^UTILITY(U,$J,"PRO",866,20)
	;;=D DIFROM^IBDE1
	;;^UTILITY(U,$J,"PRO",866,99)
	;;=56222,29861
	;;^UTILITY(U,$J,"PRO",867,0)
	;;=IBDE EXECUTE INITS^Run Inits^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",867,1,0)
	;;=^^1^1^2930813^
	;;^UTILITY(U,$J,"PRO",867,1,1,0)
	;;=Allows the user to execute the inits without leaving the imp/exp utilities.
	;;^UTILITY(U,$J,"PRO",867,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",867,2,1,0)
	;;=RI
	;;^UTILITY(U,$J,"PRO",867,2,"B","RI",1)
	;;=
	;;^UTILITY(U,$J,"PRO",867,20)
	;;=D INITS^IBDE1

IBDON012
IBDON012	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",867,99)
	;;=56222,29861
	;;^UTILITY(U,$J,"PRO",868,0)
	;;=IBDE IMP/EXP MENU FOR BLOCKS^List TK Blocks^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",868,1,0)
	;;=^^1^1^2930813^^^^
	;;^UTILITY(U,$J,"PRO",868,1,1,0)
	;;=The menu of actions that apply to tool kit blocks in the imp/exp files.
	;;^UTILITY(U,$J,"PRO",868,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",868,2,1,0)
	;;=SB
	;;^UTILITY(U,$J,"PRO",868,2,"B","SB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",868,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",868,10,0)
	;;=^101.01PA^10^16
	;;^UTILITY(U,$J,"PRO",868,10,4,0)
	;;=861^CW^4^^^Clear Work Space
	;;^UTILITY(U,$J,"PRO",868,10,4,"^")
	;;=IBDE DELETE IMP/EXP FILES
	;;^UTILITY(U,$J,"PRO",868,10,8,0)
	;;=865^HE^1^^^Help
	;;^UTILITY(U,$J,"PRO",868,10,8,"^")
	;;=IBDE IMP/EXP HELP
	;;^UTILITY(U,$J,"PRO",868,10,9,0)
	;;=866^DI^9^^^DIFROM
	;;^UTILITY(U,$J,"PRO",868,10,9,"^")
	;;=IBDE EXECUTE DIFROM
	;;^UTILITY(U,$J,"PRO",868,10,10,0)
	;;=867^RI^10^^^Run Inits
	;;^UTILITY(U,$J,"PRO",868,10,10,"^")
	;;=IBDE EXECUTE INITS
	;;^UTILITY(U,$J,"PRO",868,10,11,0)
	;;=870^DE^5^^^Delete Entry
	;;^UTILITY(U,$J,"PRO",868,10,11,"^")
	;;=IBDE DELTE TK BLOCK FROM IMP/EXP FILES
	;;^UTILITY(U,$J,"PRO",868,10,12,0)
	;;=871^AE^6^^^Add Entry
	;;^UTILITY(U,$J,"PRO",868,10,12,"^")
	;;=IBDE ADD BLOCK TO IMP/EXP WS
	;;^UTILITY(U,$J,"PRO",868,10,13,0)
	;;=872^EI^8^^^Edit Imp/Exp Notes
	;;^UTILITY(U,$J,"PRO",868,10,13,"^")
	;;=IBDE EDIT BLOCK'S IMP/EXP NOTES
	;;^UTILITY(U,$J,"PRO",868,10,14,0)
	;;=873^VI^7^^^View Imp/Exp Notes
	;;^UTILITY(U,$J,"PRO",868,10,14,"^")
	;;=IBDE VIEW BLOCK'S IMP/EXP NOTES
	;;^UTILITY(U,$J,"PRO",868,10,15,0)
	;;=874^IE^3^^^Import Entry
	;;^UTILITY(U,$J,"PRO",868,10,15,"^")
	;;=IBDE IMPORT TK BLOCK
	;;^UTILITY(U,$J,"PRO",868,10,16,0)
	;;=854^LF^2^^^List Forms
	;;^UTILITY(U,$J,"PRO",868,10,16,"^")
	;;=IBDF QUIT
	;;^UTILITY(U,$J,"PRO",868,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",868,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",868,99)
	;;=56328,46572
	;;^UTILITY(U,$J,"PRO",869,0)
	;;=IBDE DISPLAY TK BLOCKS^List TK Blocks^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",869,1,0)
	;;=^^1^1^2930813^
	;;^UTILITY(U,$J,"PRO",869,1,1,0)
	;;=Displays the list of tool kit blocks that are in the imp/exp files.
	;;^UTILITY(U,$J,"PRO",869,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",869,2,1,0)
	;;=DB
	;;^UTILITY(U,$J,"PRO",869,2,"B","DB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",869,20)
	;;=D BLOCKS^IBDE1
	;;^UTILITY(U,$J,"PRO",869,99)
	;;=56222,29861
	;;^UTILITY(U,$J,"PRO",870,0)
	;;=IBDE DELTE TK BLOCK FROM IMP/EXP FILES^Delete Entry^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",870,1,0)
	;;=^^1^1^2930813^
	;;^UTILITY(U,$J,"PRO",870,1,1,0)
	;;=Allows the user to select a TK block, then deletes it.
	;;^UTILITY(U,$J,"PRO",870,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",870,2,1,0)
	;;=DE
	;;^UTILITY(U,$J,"PRO",870,2,"B","DE",1)
	;;=
	;;^UTILITY(U,$J,"PRO",870,20)
	;;=D DELETE^IBDE3
	;;^UTILITY(U,$J,"PRO",870,99)
	;;=56222,29861
	;;^UTILITY(U,$J,"PRO",871,0)
	;;=IBDE ADD BLOCK TO IMP/EXP WS^Add Entry^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",871,1,0)
	;;=^^1^1^2960205^^^
	;;^UTILITY(U,$J,"PRO",871,1,1,0)
	;;=Allows the user to choose any block and adds it to the import/export files.
	;;^UTILITY(U,$J,"PRO",871,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",871,2,1,0)
	;;=AE
	;;^UTILITY(U,$J,"PRO",871,2,"B","AE",1)
	;;=
	;;^UTILITY(U,$J,"PRO",871,20)
	;;=D ADD^IBDE3
	;;^UTILITY(U,$J,"PRO",871,99)
	;;=56222,29861
	;;^UTILITY(U,$J,"PRO",872,0)
	;;=IBDE EDIT BLOCK'S IMP/EXP NOTES^Edit Imp/Exp Notes^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",872,1,0)
	;;=^^2^2^2930816^
	;;^UTILITY(U,$J,"PRO",872,1,1,0)
	;;=Allows the user to select a tool kit block from the imp/exp files, then
	;;^UTILITY(U,$J,"PRO",872,1,2,0)
	;;=allows him to edit the imp/exp notes.
	;;^UTILITY(U,$J,"PRO",872,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",872,2,1,0)
	;;=EI
	;;^UTILITY(U,$J,"PRO",872,2,"B","EI",1)
	;;=
	;;^UTILITY(U,$J,"PRO",872,20)
	;;=D EDIT^IBDE3
	;;^UTILITY(U,$J,"PRO",872,99)
	;;=56222,29861
	;;^UTILITY(U,$J,"PRO",873,0)
	;;=IBDE VIEW BLOCK'S IMP/EXP NOTES^View Imp/Exp Notes^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",873,1,0)
	;;=^^2^2^2930816^
	;;^UTILITY(U,$J,"PRO",873,1,1,0)
	;;=Allows the user to select a tool kit block from the imp/exp files, then
	;;^UTILITY(U,$J,"PRO",873,1,2,0)
	;;=allows him to view the imp/exp notes.
	;;^UTILITY(U,$J,"PRO",873,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",873,2,1,0)
	;;=VI
	;;^UTILITY(U,$J,"PRO",873,2,"B","VI",1)
	;;=

IBDON013
IBDON013	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",873,20)
	;;=D VIEW^IBDE3
	;;^UTILITY(U,$J,"PRO",873,99)
	;;=56222,29861
	;;^UTILITY(U,$J,"PRO",874,0)
	;;=IBDE IMPORT TK BLOCK^Import Entry^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",874,1,0)
	;;=^^1^1^2930817^
	;;^UTILITY(U,$J,"PRO",874,1,1,0)
	;;=Allows the user to select a tool kit block from the list, then imports it.
	;;^UTILITY(U,$J,"PRO",874,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",874,2,1,0)
	;;=IE
	;;^UTILITY(U,$J,"PRO",874,2,"B","IE",1)
	;;=
	;;^UTILITY(U,$J,"PRO",874,20)
	;;=D IMPORT^IBDE3
	;;^UTILITY(U,$J,"PRO",874,99)
	;;=56222,29861
	;;^UTILITY(U,$J,"PRO",875,0)
	;;=IBDF CHANGE BLOCK TK ORDER^Change TK Order^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",875,1,0)
	;;=^^1^1^2930820^
	;;^UTILITY(U,$J,"PRO",875,1,1,0)
	;;=Allows the user to select a block from the tool kit, then change it's order.
	;;^UTILITY(U,$J,"PRO",875,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",875,2,1,0)
	;;=CH
	;;^UTILITY(U,$J,"PRO",875,2,"B","CH",1)
	;;=
	;;^UTILITY(U,$J,"PRO",875,20)
	;;=D CHGORDER^IBDF13
	;;^UTILITY(U,$J,"PRO",875,99)
	;;=56301,49959
	;;^UTILITY(U,$J,"PRO",876,0)
	;;=IBDF PRINT MANAGER CLINIC SETUP^Clinic Print Manager^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",876,1,0)
	;;=^^2^2^2930831^^
	;;^UTILITY(U,$J,"PRO",876,1,1,0)
	;;=Allows the user to edit the setup used by the Print Manager in determining 
	;;^UTILITY(U,$J,"PRO",876,1,2,0)
	;;=what forms to print for an appointment at the clinic level.
	;;^UTILITY(U,$J,"PRO",876,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",876,2,1,0)
	;;=CL
	;;^UTILITY(U,$J,"PRO",876,2,"B","CL",1)
	;;=
	;;^UTILITY(U,$J,"PRO",876,20)
	;;=D CLNCSUP2^IBDF11
	;;^UTILITY(U,$J,"PRO",876,99)
	;;=56301,49966
	;;^UTILITY(U,$J,"PRO",877,0)
	;;=IBDF PRINT MANAGER DIVISION SETUP^Div Print Manager^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",877,1,0)
	;;=^^2^2^2930831^
	;;^UTILITY(U,$J,"PRO",877,1,1,0)
	;;=Allows the user to edit the setup used by the Print Manager in determining
	;;^UTILITY(U,$J,"PRO",877,1,2,0)
	;;=what forms to print for an appointment at the division level.
	;;^UTILITY(U,$J,"PRO",877,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",877,2,1,0)
	;;=DV
	;;^UTILITY(U,$J,"PRO",877,2,"B","DV",1)
	;;=
	;;^UTILITY(U,$J,"PRO",877,20)
	;;=D DIVSUP2^IBDF11
	;;^UTILITY(U,$J,"PRO",877,99)
	;;=56301,49966
	;;^UTILITY(U,$J,"PRO",1069,0)
	;;=IBDF ADD BLANK SELECTION^Add Blank^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1069,1,0)
	;;=^^2^2^2931020^
	;;^UTILITY(U,$J,"PRO",1069,1,1,0)
	;;=Allows the user to add a blank selection, i.e., a place holder that takes
	;;^UTILITY(U,$J,"PRO",1069,1,2,0)
	;;=up space on the selection list but has no data that is displayed.
	;;^UTILITY(U,$J,"PRO",1069,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1069,2,1,0)
	;;=AB
	;;^UTILITY(U,$J,"PRO",1069,2,"B","AB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1069,20)
	;;=D ADDBLANK^IBDF4A
	;;^UTILITY(U,$J,"PRO",1069,99)
	;;=56301,49959
	;;^UTILITY(U,$J,"PRO",1070,0)
	;;=IBDF ADD BLANK GROUP^Add Blank^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1070,1,0)
	;;=^^2^2^2931020^
	;;^UTILITY(U,$J,"PRO",1070,1,1,0)
	;;=Allows the user to add a group that has no displayable text - i.e., it is 
	;;^UTILITY(U,$J,"PRO",1070,1,2,0)
	;;=blank - serves to add space to the list.
	;;^UTILITY(U,$J,"PRO",1070,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1070,2,1,0)
	;;=AB
	;;^UTILITY(U,$J,"PRO",1070,2,"B","AB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1070,20)
	;;=D ADDEMPTY^IBDF3
	;;^UTILITY(U,$J,"PRO",1070,99)
	;;=56301,49959
	;;^UTILITY(U,$J,"PRO",1071,0)
	;;=IBDF FORMAT ALL SELECTIONS^Format All^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1071,1,0)
	;;=^^1^1^2931020^
	;;^UTILITY(U,$J,"PRO",1071,1,1,0)
	;;=Allows the user to format all the selections on the selection list all at once.
	;;^UTILITY(U,$J,"PRO",1071,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1071,2,1,0)
	;;=FA
	;;^UTILITY(U,$J,"PRO",1071,2,"B","FA",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1071,20)
	;;=D FORMAT^IBDF9A1
	;;^UTILITY(U,$J,"PRO",1071,99)
	;;=56301,49965
	;;^UTILITY(U,$J,"PRO",1072,0)
	;;=IBDF FORMAT GROUP'S SELECTIONS^Format All^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1072,1,0)
	;;=^^1^1^2931021^
	;;^UTILITY(U,$J,"PRO",1072,1,1,0)
	;;=Allows the user to format in mass all the selections in the group.
	;;^UTILITY(U,$J,"PRO",1072,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1072,2,1,0)
	;;=FA
	;;^UTILITY(U,$J,"PRO",1072,2,"B","FA",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1072,20)
	;;=D FORMAT2^IBDF9A1
	;;^UTILITY(U,$J,"PRO",1072,99)
	;;=56301,49965

IBDON014
IBDON014	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",1073,0)
	;;=IBDF VIEW FORM W/WO DATA^View w/wo Data (Toggle)^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1073,1,0)
	;;=^^2^2^2931022^
	;;^UTILITY(U,$J,"PRO",1073,1,1,0)
	;;=Allows the user to either view the form with or without data. When viewing
	;;^UTILITY(U,$J,"PRO",1073,1,2,0)
	;;=with data the user must select a test patient.
	;;^UTILITY(U,$J,"PRO",1073,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1073,2,1,0)
	;;=VD
	;;^UTILITY(U,$J,"PRO",1073,2,"B","VD",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1073,10,0)
	;;=^101.01PA^^
	;;^UTILITY(U,$J,"PRO",1073,20)
	;;=D VIEW^IBDF5C
	;;^UTILITY(U,$J,"PRO",1073,99)
	;;=56301,49967
	;;^UTILITY(U,$J,"PRO",1082,0)
	;;=IBDF COMPILE FORM^Recompile Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1082,1,0)
	;;=^^1^1^2931124^
	;;^UTILITY(U,$J,"PRO",1082,1,1,0)
	;;=Allows forms to be compiled into a format that is very fast to print.
	;;^UTILITY(U,$J,"PRO",1082,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1082,2,1,0)
	;;=RC
	;;^UTILITY(U,$J,"PRO",1082,2,"B","RC",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1082,20)
	;;=D CMPLACTN^IBDF19
	;;^UTILITY(U,$J,"PRO",1082,99)
	;;=56301,49960
	;;^UTILITY(U,$J,"PRO",1228,0)
	;;=IBDF HIDDEN ACTIONS^HIDDEN ACTIONS^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1228,4)
	;;=26
	;;^UTILITY(U,$J,"PRO",1228,10,0)
	;;=^101.01PA^2^22
	;;^UTILITY(U,$J,"PRO",1228,10,12,0)
	;;=826^PR^33
	;;^UTILITY(U,$J,"PRO",1228,10,12,"^")
	;;=IBDF PRINT SAMPLE FORM
	;;^UTILITY(U,$J,"PRO",1228,10,21,0)
	;;=824^EX^35^^^Exit Option
	;;^UTILITY(U,$J,"PRO",1228,10,21,"^")
	;;=IBDF EF QUIT
	;;^UTILITY(U,$J,"PRO",1228,99)
	;;=56468,48617
	;;^UTILITY(U,$J,"PRO",1229,0)
	;;=IBDF EF QUEUE PARMS MENU^EF Queue Parameters^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1229,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1229,10,0)
	;;=^101.01PA^10^12
	;;^UTILITY(U,$J,"PRO",1229,10,1,0)
	;;=1230^EP^11
	;;^UTILITY(U,$J,"PRO",1229,10,1,"^")
	;;=IBDF EF EDIT QUEUE PARMS
	;;^UTILITY(U,$J,"PRO",1229,10,2,0)
	;;=1231^AP^12
	;;^UTILITY(U,$J,"PRO",1229,10,2,"^")
	;;=IBDF EF ADD QUEUE PARMS
	;;^UTILITY(U,$J,"PRO",1229,10,5,0)
	;;=1234^JP^13
	;;^UTILITY(U,$J,"PRO",1229,10,5,"^")
	;;=IBDF EF PARAMETER GROUP JUMP
	;;^UTILITY(U,$J,"PRO",1229,10,6,0)
	;;=1237^PF^34
	;;^UTILITY(U,$J,"PRO",1229,10,6,"^")
	;;=IBDF EF QUEUE PRINT FORMS
	;;^UTILITY(U,$J,"PRO",1229,10,7,0)
	;;=1241^CG^31
	;;^UTILITY(U,$J,"PRO",1229,10,7,"^")
	;;=IBDF EF CLINIC GROUP MENU ACTION
	;;^UTILITY(U,$J,"PRO",1229,10,8,0)
	;;=1244^QS^35
	;;^UTILITY(U,$J,"PRO",1229,10,8,"^")
	;;=IBDF EF QUEUE STATS
	;;^UTILITY(U,$J,"PRO",1229,10,9,0)
	;;=1274^EX^99
	;;^UTILITY(U,$J,"PRO",1229,10,9,"^")
	;;=IBDF EF EXIT
	;;^UTILITY(U,$J,"PRO",1229,10,10,0)
	;;=1324^HL^34
	;;^UTILITY(U,$J,"PRO",1229,10,10,"^")
	;;=IBDF EF HELP SPEC INST
	;;^UTILITY(U,$J,"PRO",1229,10,11,0)
	;;=1340^TI^36
	;;^UTILITY(U,$J,"PRO",1229,10,11,"^")
	;;=IBDF EF TASK INTERUPT
	;;^UTILITY(U,$J,"PRO",1229,10,12,0)
	;;=1758^DG^50
	;;^UTILITY(U,$J,"PRO",1229,10,12,"^")
	;;=IBDF EF DELETE QUEUE PARMS
	;;^UTILITY(U,$J,"PRO",1229,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1229,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1229,99)
	;;=56666,36077
	;;^UTILITY(U,$J,"PRO",1230,0)
	;;=IBDF EF EDIT QUEUE PARMS^Edit Parameter Grp.^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1230,20)
	;;=D EDT^IBDFPE1
	;;^UTILITY(U,$J,"PRO",1230,99)
	;;=56305,55126
	;;^UTILITY(U,$J,"PRO",1231,0)
	;;=IBDF EF ADD QUEUE PARMS^Add Parameter Grp.^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1231,20)
	;;=D ADD^IBDFPE1
	;;^UTILITY(U,$J,"PRO",1231,99)
	;;=56305,54982
	;;^UTILITY(U,$J,"PRO",1232,0)
	;;=IBDF EF CLINIC GROUP ADD^Add Clinic Group^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1232,20)
	;;=D ADD1^IBDFCG
	;;^UTILITY(U,$J,"PRO",1232,99)
	;;=56305,55010
	;;^UTILITY(U,$J,"PRO",1233,0)
	;;=IBDF EF CLINIC GROUP MENU^Clinic Group Menu w/actions^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1233,1,0)
	;;=^^2^2^2960220^^^^
	;;^UTILITY(U,$J,"PRO",1233,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",1233,1,2,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",1233,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1233,10,0)
	;;=^101.01PA^5^6
	;;^UTILITY(U,$J,"PRO",1233,10,1,0)
	;;=1232^AC^11
	;;^UTILITY(U,$J,"PRO",1233,10,1,"^")
	;;=IBDF EF CLINIC GROUP ADD
	;;^UTILITY(U,$J,"PRO",1233,10,2,0)
	;;=1242^JP^21
	;;^UTILITY(U,$J,"PRO",1233,10,2,"^")
	;;=IBDF EF CLINIC GROUP JUMP
	;;^UTILITY(U,$J,"PRO",1233,10,4,0)
	;;=1275^EC^13
	;;^UTILITY(U,$J,"PRO",1233,10,4,"^")
	;;=IBDF EF CLINIC GROUP EDIT
	;;^UTILITY(U,$J,"PRO",1233,10,5,0)
	;;=824^EX^90

IBDON015
IBDON015	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",1233,10,5,"^")
	;;=IBDF EF QUIT
	;;^UTILITY(U,$J,"PRO",1233,10,6,0)
	;;=1730^DG^80
	;;^UTILITY(U,$J,"PRO",1233,10,6,"^")
	;;=IBDF EF CLINIC GROUP DELETE
	;;^UTILITY(U,$J,"PRO",1233,20)
	;;=
	;;^UTILITY(U,$J,"PRO",1233,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1233,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1233,99)
	;;=56663,40772
	;;^UTILITY(U,$J,"PRO",1234,0)
	;;=IBDF EF PARAMETER GROUP JUMP^Jump to Param. Grp.^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1234,20)
	;;=D JUMP^IBDFPE
	;;^UTILITY(U,$J,"PRO",1234,99)
	;;=56305,55211
	;;^UTILITY(U,$J,"PRO",1237,0)
	;;=IBDF EF QUEUE PRINT FORMS^Print Forms One Group^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1237,20)
	;;=D ^IBDFQS
	;;^UTILITY(U,$J,"PRO",1237,99)
	;;=56301,49965
	;;^UTILITY(U,$J,"PRO",1241,0)
	;;=IBDF EF CLINIC GROUP MENU ACTION^Clinic Group Menu^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1241,10,0)
	;;=^101.01PA^^
	;;^UTILITY(U,$J,"PRO",1241,15)
	;;=K IBDFCG I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",1241,20)
	;;=D EN^IBDFCG
	;;^UTILITY(U,$J,"PRO",1241,28)
	;;=
	;;^UTILITY(U,$J,"PRO",1241,99)
	;;=56301,49964
	;;^UTILITY(U,$J,"PRO",1242,0)
	;;=IBDF EF CLINIC GROUP JUMP^Jump to Clinic Grp.^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1242,20)
	;;=D JUMP^IBDFCG
	;;^UTILITY(U,$J,"PRO",1242,99)
	;;=56305,55076
	;;^UTILITY(U,$J,"PRO",1244,0)
	;;=IBDF EF QUEUE STATS^Queue Status^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1244,20)
	;;=D STAT^IBDFPE1
	;;^UTILITY(U,$J,"PRO",1244,99)
	;;=56301,49965
	;;^UTILITY(U,$J,"PRO",1274,0)
	;;=IBDF EF EXIT^Exit^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1274,20)
	;;=S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",1274,99)
	;;=56308,45775
	;;^UTILITY(U,$J,"PRO",1275,0)
	;;=IBDF EF CLINIC GROUP EDIT^Edit Clinic Group^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1275,20)
	;;=D EDIT^IBDFCG
	;;^UTILITY(U,$J,"PRO",1275,99)
	;;=56305,55050
	;;^UTILITY(U,$J,"PRO",1310,0)
	;;=IBDF RESEQUENCE LIST^RESEQUENCE LIST^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1310,1,0)
	;;=^^1^1^2950224^
	;;^UTILITY(U,$J,"PRO",1310,1,1,0)
	;;=Allows the list to be resequenced by any subcolumn.
	;;^UTILITY(U,$J,"PRO",1310,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1310,2,1,0)
	;;=RS
	;;^UTILITY(U,$J,"PRO",1310,2,"B","RS",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1310,20)
	;;=D SEQUENCE^IBDF4
	;;^UTILITY(U,$J,"PRO",1310,99)
	;;=56302,51941
	;;^UTILITY(U,$J,"PRO",1313,0)
	;;=IBDFC ADD FORM TO LIST^ADD FORM TO LIST^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1313,1,0)
	;;=^^1^1^2950228^
	;;^UTILITY(U,$J,"PRO",1313,1,1,0)
	;;=Allows a single form to be added to the list for conversion.
	;;^UTILITY(U,$J,"PRO",1313,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1313,2,1,0)
	;;=AF
	;;^UTILITY(U,$J,"PRO",1313,2,"B","AF",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1313,20)
	;;=D ADDONE^IBDFC
	;;^UTILITY(U,$J,"PRO",1313,99)
	;;=56308,34262
	;;^UTILITY(U,$J,"PRO",1315,0)
	;;=IBDFC CONVERSION UTILITY MENU^CONVERSION UTILITY^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1315,1,0)
	;;=^^1^1^2950228^^^
	;;^UTILITY(U,$J,"PRO",1315,1,1,0)
	;;=Menu for the conversion utility screen.
	;;^UTILITY(U,$J,"PRO",1315,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1315,2,1,0)
	;;=CNV
	;;^UTILITY(U,$J,"PRO",1315,2,"B","CNV",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1315,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1315,10,0)
	;;=^101.01PA^4^4
	;;^UTILITY(U,$J,"PRO",1315,10,1,0)
	;;=1313^AF^1^^^Add Form To List
	;;^UTILITY(U,$J,"PRO",1315,10,1,"^")
	;;=IBDFC ADD FORM TO LIST
	;;^UTILITY(U,$J,"PRO",1315,10,2,0)
	;;=1319^RF^3^^^Remove From List
	;;^UTILITY(U,$J,"PRO",1315,10,2,"^")
	;;=IBDFC REMOVE FORM FROM LIST
	;;^UTILITY(U,$J,"PRO",1315,10,3,0)
	;;=1323^VL^6^^^View Conversion Log
	;;^UTILITY(U,$J,"PRO",1315,10,3,"^")
	;;=IBDFC LIST CONVERTED FORMS
	;;^UTILITY(U,$J,"PRO",1315,10,4,0)
	;;=1327^CL^5
	;;^UTILITY(U,$J,"PRO",1315,10,4,"^")
	;;=IBDFC CONVERT LISTED FORMS
	;;^UTILITY(U,$J,"PRO",1315,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1315,99)
	;;=56315,34435
	;;^UTILITY(U,$J,"PRO",1319,0)
	;;=IBDFC REMOVE FORM FROM LIST^REMOVE FROM LIST^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1319,1,0)
	;;=^^2^2^2950302^
	;;^UTILITY(U,$J,"PRO",1319,1,1,0)
	;;=Used to remove a form from the current list of forms to be converted for
	;;^UTILITY(U,$J,"PRO",1319,1,2,0)
	;;=scanning.
	;;^UTILITY(U,$J,"PRO",1319,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1319,2,1,0)
	;;=RF
	;;^UTILITY(U,$J,"PRO",1319,2,"B","RF",1)
	;;=

IBDON016
IBDON016	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",1319,20)
	;;=D REMOVE^IBDFC
	;;^UTILITY(U,$J,"PRO",1319,99)
	;;=56308,34056
	;;^UTILITY(U,$J,"PRO",1322,0)
	;;=IBDFC MENU FOR CONVERTED FORMS^MENU FOR CONVERTED FORMS^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1322,1,0)
	;;=^^1^1^2950302^
	;;^UTILITY(U,$J,"PRO",1322,1,1,0)
	;;=Menu for working with the list of converted forms.
	;;^UTILITY(U,$J,"PRO",1322,2,0)
	;;=^101.02A^2^1
	;;^UTILITY(U,$J,"PRO",1322,2,2,0)
	;;=LIST
	;;^UTILITY(U,$J,"PRO",1322,2,"B","LIST",2)
	;;=
	;;^UTILITY(U,$J,"PRO",1322,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1322,10,0)
	;;=^101.01PA^7^7
	;;^UTILITY(U,$J,"PRO",1322,10,1,0)
	;;=802^EF^2
	;;^UTILITY(U,$J,"PRO",1322,10,1,"^")
	;;=IBDF EDIT FORM
	;;^UTILITY(U,$J,"PRO",1322,10,2,0)
	;;=831^NM^1
	;;^UTILITY(U,$J,"PRO",1322,10,2,"^")
	;;=IBDF EDIT FORM NAME/DESCR/SIZE
	;;^UTILITY(U,$J,"PRO",1322,10,3,0)
	;;=1331^VW^3
	;;^UTILITY(U,$J,"PRO",1322,10,3,"^")
	;;=IBDFC VIEW SCANNING WARNINGS
	;;^UTILITY(U,$J,"PRO",1322,10,4,0)
	;;=1333^SI^4
	;;^UTILITY(U,$J,"PRO",1322,10,4,"^")
	;;=IBDF PRINT FORM DEFINITION
	;;^UTILITY(U,$J,"PRO",1322,10,5,0)
	;;=1332^RC^5
	;;^UTILITY(U,$J,"PRO",1322,10,5,"^")
	;;=IBDFC REPLACE IN CLINICS
	;;^UTILITY(U,$J,"PRO",1322,10,6,0)
	;;=1336^DF^6
	;;^UTILITY(U,$J,"PRO",1322,10,6,"^")
	;;=IBDFC DELETE CONVERTED FORM
	;;^UTILITY(U,$J,"PRO",1322,10,7,0)
	;;=1337^PL^8
	;;^UTILITY(U,$J,"PRO",1322,10,7,"^")
	;;=IBDFC PURGE CONVERSION LOG
	;;^UTILITY(U,$J,"PRO",1322,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1322,99)
	;;=56315,38241
	;;^UTILITY(U,$J,"PRO",1323,0)
	;;=IBDFC LIST CONVERTED FORMS^View Conversion Log^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1323,1,0)
	;;=^^1^1^2950306^^
	;;^UTILITY(U,$J,"PRO",1323,1,1,0)
	;;=Used to go to the screen that lists all of the converted forms.
	;;^UTILITY(U,$J,"PRO",1323,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1323,2,1,0)
	;;=VL
	;;^UTILITY(U,$J,"PRO",1323,2,"B","VL",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1323,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",1323,20)
	;;=D LIST^IBDFC1
	;;^UTILITY(U,$J,"PRO",1323,99)
	;;=56315,34334
	;;^UTILITY(U,$J,"PRO",1324,0)
	;;=IBDF EF HELP SPEC INST^Special Instruc Help^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1324,20)
	;;=D EN^IBDFHLP
	;;^UTILITY(U,$J,"PRO",1324,99)
	;;=56308,50064
	;;^UTILITY(U,$J,"PRO",1325,0)
	;;=IBDF EF HELP MENU^Help Menu^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1325,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1325,10,0)
	;;=^101.01PA^^
	;;^UTILITY(U,$J,"PRO",1325,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1325,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1325,99)
	;;=56308,51083
	;;^UTILITY(U,$J,"PRO",1327,0)
	;;=IBDFC CONVERT LISTED FORMS^Convert List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1327,1,0)
	;;=^^3^3^2951208^^
	;;^UTILITY(U,$J,"PRO",1327,1,1,0)
	;;=Converts all the forms on the list. The original forms are left unchanged.
	;;^UTILITY(U,$J,"PRO",1327,1,2,0)
	;;=The forms are copied, the copied form is renamed with a CNV. prefix, and
	;;^UTILITY(U,$J,"PRO",1327,1,3,0)
	;;=it is the copy that is converted.
	;;^UTILITY(U,$J,"PRO",1327,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1327,2,1,0)
	;;=CL
	;;^UTILITY(U,$J,"PRO",1327,2,"B","CL",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1327,20)
	;;=D CNVTLIST^IBDFC
	;;^UTILITY(U,$J,"PRO",1327,99)
	;;=56309,30915
	;;^UTILITY(U,$J,"PRO",1331,0)
	;;=IBDFC VIEW SCANNING WARNINGS^View Warnings^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1331,1,0)
	;;=^^2^2^2950306^^^
	;;^UTILITY(U,$J,"PRO",1331,1,1,0)
	;;=Allows the potential problems discovered durring the conversion process to
	;;^UTILITY(U,$J,"PRO",1331,1,2,0)
	;;=be viewed.
	;;^UTILITY(U,$J,"PRO",1331,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1331,2,1,0)
	;;=VW
	;;^UTILITY(U,$J,"PRO",1331,2,"B","VW",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1331,20)
	;;=D WARNINGS^IBDFC1
	;;^UTILITY(U,$J,"PRO",1331,99)
	;;=56309,40232
	;;^UTILITY(U,$J,"PRO",1332,0)
	;;=IBDFC REPLACE IN CLINICS^Replace In Clinics^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1332,1,0)
	;;=^^2^2^2950306^^^
	;;^UTILITY(U,$J,"PRO",1332,1,1,0)
	;;=Used to substitute the converted forms for the original forms in the
	;;^UTILITY(U,$J,"PRO",1332,1,2,0)
	;;=clinics.
	;;^UTILITY(U,$J,"PRO",1332,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1332,2,1,0)
	;;=RC
	;;^UTILITY(U,$J,"PRO",1332,2,"B","RC",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1332,20)
	;;=D REPLACE^IBDFC3
	;;^UTILITY(U,$J,"PRO",1332,99)
	;;=56309,40377
	;;^UTILITY(U,$J,"PRO",1333,0)
	;;=IBDF PRINT FORM DEFINITION^Scanning Info^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS

IBDON017
IBDON017	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",1333,1,0)
	;;=^^2^2^2950309^^
	;;^UTILITY(U,$J,"PRO",1333,1,1,0)
	;;=Allows the information in the Form Definition table to be printed. This is
	;;^UTILITY(U,$J,"PRO",1333,1,2,0)
	;;=the information used form scanning.
	;;^UTILITY(U,$J,"PRO",1333,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1333,2,1,0)
	;;=SI
	;;^UTILITY(U,$J,"PRO",1333,2,"B","SI",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1333,20)
	;;=D FORMDEF^IBDFC4
	;;^UTILITY(U,$J,"PRO",1333,99)
	;;=56309,43590
	;;^UTILITY(U,$J,"PRO",1336,0)
	;;=IBDFC DELETE CONVERTED FORM^Delete Converted Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1336,1,0)
	;;=^^2^2^2950309^
	;;^UTILITY(U,$J,"PRO",1336,1,1,0)
	;;=Allows a form listed in the conversion log to be deleted if it is not in
	;;^UTILITY(U,$J,"PRO",1336,1,2,0)
	;;=use.
	;;^UTILITY(U,$J,"PRO",1336,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1336,2,1,0)
	;;=DF
	;;^UTILITY(U,$J,"PRO",1336,2,"B","DF",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1336,20)
	;;=D DELFORM^IBDFC1
	;;^UTILITY(U,$J,"PRO",1336,99)
	;;=56315,35803
	;;^UTILITY(U,$J,"PRO",1337,0)
	;;=IBDFC PURGE CONVERSION LOG^Purge Conversion Log^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1337,1,0)
	;;=^^1^1^2950309^
	;;^UTILITY(U,$J,"PRO",1337,1,1,0)
	;;=Allows the log to be purged.
	;;^UTILITY(U,$J,"PRO",1337,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1337,2,1,0)
	;;=PL
	;;^UTILITY(U,$J,"PRO",1337,2,"B","PL",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1337,20)
	;;=D PURGE^IBDFC1
	;;^UTILITY(U,$J,"PRO",1337,99)
	;;=56315,37875
	;;^UTILITY(U,$J,"PRO",1340,0)
	;;=IBDF EF TASK INTERUPT^Task Interupt^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1340,15)
	;;=K IBDFSTOP
	;;^UTILITY(U,$J,"PRO",1340,20)
	;;=S IBDFSTOP=1 D STAT^IBDFPE1
	;;^UTILITY(U,$J,"PRO",1340,99)
	;;=56326,34725
	;;^UTILITY(U,$J,"PRO",1355,0)
	;;=IBDF UTIL PRIMARY PROTOCOL^Utility Protocol^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1355,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1355,10,0)
	;;=^101.01PA^5^7
	;;^UTILITY(U,$J,"PRO",1355,10,2,0)
	;;=1378^JP^33
	;;^UTILITY(U,$J,"PRO",1355,10,2,"^")
	;;=IBDF UTIL JUMP
	;;^UTILITY(U,$J,"PRO",1355,10,3,0)
	;;=1379^CL^23
	;;^UTILITY(U,$J,"PRO",1355,10,3,"^")
	;;=IBDF UTIL CHANGE LIST
	;;^UTILITY(U,$J,"PRO",1355,10,4,0)
	;;=1393^DL^24
	;;^UTILITY(U,$J,"PRO",1355,10,4,"^")
	;;=IBDF UTIL DELETE FROM SELECTION LIST
	;;^UTILITY(U,$J,"PRO",1355,10,5,0)
	;;=1394^IC^26
	;;^UTILITY(U,$J,"PRO",1355,10,5,"^")
	;;=IBDF UTIL COMPLETE INVALID LIST
	;;^UTILITY(U,$J,"PRO",1355,10,6,0)
	;;=1465^RC^23
	;;^UTILITY(U,$J,"PRO",1355,10,6,"^")
	;;=IBDF UTIL REPLACE CODE
	;;^UTILITY(U,$J,"PRO",1355,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1355,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1355,99)
	;;=56438,52613
	;;^UTILITY(U,$J,"PRO",1378,0)
	;;=IBDF UTIL JUMP^Jump^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1378,20)
	;;=D JUMP^IBDFUTL2
	;;^UTILITY(U,$J,"PRO",1378,99)
	;;=56371,36884
	;;^UTILITY(U,$J,"PRO",1379,0)
	;;=IBDF UTIL CHANGE LIST^Change List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1379,15)
	;;=K IBDF1
	;;^UTILITY(U,$J,"PRO",1379,20)
	;;=S IBDF1=1 D CHGLST^IBDFUTL2
	;;^UTILITY(U,$J,"PRO",1379,99)
	;;=56371,43807
	;;^UTILITY(U,$J,"PRO",1393,0)
	;;=IBDF UTIL DELETE FROM SELECTION LIST^Delete From List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1393,20)
	;;=D DELETE^IBDFUTL2
	;;^UTILITY(U,$J,"PRO",1393,99)
	;;=56378,37723
	;;^UTILITY(U,$J,"PRO",1394,0)
	;;=IBDF UTIL COMPLETE INVALID LIST^Invalid Code List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1394,20)
	;;=D START^IBDFLST
	;;^UTILITY(U,$J,"PRO",1394,99)
	;;=56384,49181
	;;^UTILITY(U,$J,"PRO",1395,0)
	;;=IBDF UTIL COMPLETE LIST MENU^Complete List Menu^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1395,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1395,10,0)
	;;=^101.01PA^1^1
	;;^UTILITY(U,$J,"PRO",1395,10,1,0)
	;;=1461^JP^11
	;;^UTILITY(U,$J,"PRO",1395,10,1,"^")
	;;=IBDF UTIL INVALID CODES JUMP
	;;^UTILITY(U,$J,"PRO",1395,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1395,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1395,99)
	;;=56439,27573
	;;^UTILITY(U,$J,"PRO",1461,0)
	;;=IBDF UTIL INVALID CODES JUMP^Jump^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1461,20)
	;;=D JUMP^IBDFLST
	;;^UTILITY(U,$J,"PRO",1461,99)
	;;=56439,27188
	;;^UTILITY(U,$J,"PRO",1465,0)
	;;=IBDF UTIL REPLACE CODE^Replace Code^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1465,20)
	;;=D REPLACE^IBDFUTL3
	;;^UTILITY(U,$J,"PRO",1465,99)
	;;=56391,43512
	;;^UTILITY(U,$J,"PRO",1466,0)
	;;=IBDF QUICK SELECTION EDIT^Quick Selection Edit^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS

IBDON018
IBDON018	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",1466,20)
	;;=D ^IBDFQSL
	;;^UTILITY(U,$J,"PRO",1466,99)
	;;=56399,38106
	;;^UTILITY(U,$J,"PRO",1467,0)
	;;=IBDF QUICK EDIT ACTIONS MENU^Quick Edit Menu^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1467,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1467,10,0)
	;;=^101.01PA^9^9
	;;^UTILITY(U,$J,"PRO",1467,10,1,0)
	;;=1468^ES^2
	;;^UTILITY(U,$J,"PRO",1467,10,1,"^")
	;;=IBDF QUICK ACTION EDIT
	;;^UTILITY(U,$J,"PRO",1467,10,2,0)
	;;=1469^DS^3^^^Delete Selection
	;;^UTILITY(U,$J,"PRO",1467,10,2,"^")
	;;=IBDF QUICK ACTION DELETE
	;;^UTILITY(U,$J,"PRO",1467,10,3,0)
	;;=1470^AS^1^^^Add Selection
	;;^UTILITY(U,$J,"PRO",1467,10,3,"^")
	;;=IBDF QUICK ACTION ADD
	;;^UTILITY(U,$J,"PRO",1467,10,4,0)
	;;=1476^PH^4^^^New Place Holder
	;;^UTILITY(U,$J,"PRO",1467,10,4,"^")
	;;=IBDF QUICK ACTION ADD BLANK
	;;^UTILITY(U,$J,"PRO",1467,10,5,0)
	;;=1477^FA^5
	;;^UTILITY(U,$J,"PRO",1467,10,5,"^")
	;;=IBDF QUICK ACTION FORMAT GROUP
	;;^UTILITY(U,$J,"PRO",1467,10,6,0)
	;;=1479^GA^6
	;;^UTILITY(U,$J,"PRO",1467,10,6,"^")
	;;=IBDF QUICK GROUP ADD
	;;^UTILITY(U,$J,"PRO",1467,10,7,0)
	;;=1643^GC^7
	;;^UTILITY(U,$J,"PRO",1467,10,7,"^")
	;;=IBDF QUICK GRP COPY
	;;^UTILITY(U,$J,"PRO",1467,10,8,0)
	;;=1646^GD^8
	;;^UTILITY(U,$J,"PRO",1467,10,8,"^")
	;;=IBDF QUICK GRP DELETE
	;;^UTILITY(U,$J,"PRO",1467,10,9,0)
	;;=1656^GE^9
	;;^UTILITY(U,$J,"PRO",1467,10,9,"^")
	;;=IBDF QUICK EDIT GRP
	;;^UTILITY(U,$J,"PRO",1467,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1467,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1467,99)
	;;=56545,39912
	;;^UTILITY(U,$J,"PRO",1468,0)
	;;=IBDF QUICK ACTION EDIT^Edit Selection^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1468,20)
	;;=D EDIT^IBDFQEA
	;;^UTILITY(U,$J,"PRO",1468,99)
	;;=56406,32395
	;;^UTILITY(U,$J,"PRO",1469,0)
	;;=IBDF QUICK ACTION DELETE^Delete Selection^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1469,20)
	;;=D DELETE^IBDFQEA
	;;^UTILITY(U,$J,"PRO",1469,99)
	;;=56406,32449
	;;^UTILITY(U,$J,"PRO",1470,0)
	;;=IBDF QUICK ACTION ADD^Add Selection^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1470,20)
	;;=D ADDSLCTN^IBDFQEA
	;;^UTILITY(U,$J,"PRO",1470,99)
	;;=56406,35052
	;;^UTILITY(U,$J,"PRO",1476,0)
	;;=IBDF QUICK ACTION ADD BLANK^Add Blank^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1476,20)
	;;=D ADDBLANK^IBDFQEA
	;;^UTILITY(U,$J,"PRO",1476,99)
	;;=56410,36802
	;;^UTILITY(U,$J,"PRO",1477,0)
	;;=IBDF QUICK ACTION FORMAT GROUP^Format All^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1477,20)
	;;=D FORMAT^IBDFQEA
	;;^UTILITY(U,$J,"PRO",1477,99)
	;;=56410,44471
	;;^UTILITY(U,$J,"PRO",1479,0)
	;;=IBDF QUICK GROUP ADD^Group Add^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1479,20)
	;;=D GROUPADD^IBDFQEA
	;;^UTILITY(U,$J,"PRO",1479,99)
	;;=56411,35854
	;;^UTILITY(U,$J,"PRO",1543,0)
	;;=IBDF QUICK SELECTION EDIT 2ND SCREEN^Quick Selection Edit^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1543,20)
	;;=D EDITBLK^IBDFQSL,IDXFORM^IBDF5A()
	;;^UTILITY(U,$J,"PRO",1543,99)
	;;=56424,47070
	;;^UTILITY(U,$J,"PRO",1630,0)
	;;=IBDF FT MENU^Form Tracking Menu^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1630,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1630,10,0)
	;;=^101.01PA^3^3
	;;^UTILITY(U,$J,"PRO",1630,10,1,0)
	;;=1631^SA^1
	;;^UTILITY(U,$J,"PRO",1630,10,1,"^")
	;;=IBDF FT STATISTICS
	;;^UTILITY(U,$J,"PRO",1630,10,2,0)
	;;=1633^SS^2
	;;^UTILITY(U,$J,"PRO",1630,10,2,"^")
	;;=IBDF FT STATUS SELECT
	;;^UTILITY(U,$J,"PRO",1630,10,4,0)
	;;=1647^CL^4
	;;^UTILITY(U,$J,"PRO",1630,10,4,"^")
	;;=IBDF FT CHANGE LIST
	;;^UTILITY(U,$J,"PRO",1630,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1630,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1630,99)
	;;=56650,42648
	;;^UTILITY(U,$J,"PRO",1631,0)
	;;=IBDF FT STATISTICS^Statistics^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1631,20)
	;;=D EN^IBDFST
	;;^UTILITY(U,$J,"PRO",1631,99)
	;;=56439,37424
	;;^UTILITY(U,$J,"PRO",1632,0)
	;;=IBDF FT STATS MENU^Statistics^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1632,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1632,10,0)
	;;=^101.01PA^0^1
	;;^UTILITY(U,$J,"PRO",1632,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1632,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1632,99)
	;;=56448,49727
	;;^UTILITY(U,$J,"PRO",1633,0)
	;;=IBDF FT STATUS SELECT^Status Select^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1633,20)
	;;=D START^IBDFSS,EN^IBDFSS
	;;^UTILITY(U,$J,"PRO",1633,99)
	;;=56440,31040
	;;^UTILITY(U,$J,"PRO",1634,0)
	;;=IBDF FT STATUS SELECT MENU^Status Select Menu^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS

IBDON019
IBDON019	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",1634,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1634,10,0)
	;;=^101.01PA^0^1
	;;^UTILITY(U,$J,"PRO",1634,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1634,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1634,99)
	;;=56448,48414
	;;^UTILITY(U,$J,"PRO",1643,0)
	;;=IBDF QUICK GRP COPY^Group Copy^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1643,15)
	;;=D INIT^IBDFQSL1 S VALMBCK="R"
	;;^UTILITY(U,$J,"PRO",1643,20)
	;;=D ^IBDFGRP
	;;^UTILITY(U,$J,"PRO",1643,99)
	;;=56454,36624
	;;^UTILITY(U,$J,"PRO",1644,0)
	;;=IBDF QUICK GRP MENU^Group Copy Menu^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1644,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1644,10,0)
	;;=^101.01PA^1^1
	;;^UTILITY(U,$J,"PRO",1644,10,1,0)
	;;=1645^GC^1
	;;^UTILITY(U,$J,"PRO",1644,10,1,"^")
	;;=IBDF QUICK GROUP COPY SELECTION
	;;^UTILITY(U,$J,"PRO",1644,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1644,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1644,99)
	;;=56455,30838
	;;^UTILITY(U,$J,"PRO",1645,0)
	;;=IBDF QUICK GROUP COPY SELECTION^Group Copy Selection^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1645,20)
	;;=D GRPCOPY^IBDFGRP
	;;^UTILITY(U,$J,"PRO",1645,99)
	;;=56455,30711
	;;^UTILITY(U,$J,"PRO",1646,0)
	;;=IBDF QUICK GRP DELETE^Group Delete^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1646,20)
	;;=D GRPDEL^IBDFQEA
	;;^UTILITY(U,$J,"PRO",1646,99)
	;;=56460,50794
	;;^UTILITY(U,$J,"PRO",1647,0)
	;;=IBDF FT CHANGE LIST^Change List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1647,15)
	;;=K IBDF1
	;;^UTILITY(U,$J,"PRO",1647,20)
	;;=S IBDF1=1 D CHGLST^IBDFFT
	;;^UTILITY(U,$J,"PRO",1647,99)
	;;=56467,48515
	;;^UTILITY(U,$J,"PRO",1656,0)
	;;=IBDF QUICK EDIT GRP^Group Edit^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1656,20)
	;;=D GRPEDIT^IBDFQEA
	;;^UTILITY(U,$J,"PRO",1656,99)
	;;=56545,39596
	;;^UTILITY(U,$J,"PRO",1665,0)
	;;=IBDF PCE EVENT^Process events from PCE^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1665,1,0)
	;;=^^14^14^2951214^
	;;^UTILITY(U,$J,"PRO",1665,1,1,0)
	;;=This protocol is the event handler attached
	;;^UTILITY(U,$J,"PRO",1665,1,2,0)
	;;=to the PXK VISIT DATA EVENT protocol.
	;;^UTILITY(U,$J,"PRO",1665,1,3,0)
	;;=
	;;^UTILITY(U,$J,"PRO",1665,1,4,0)
	;;=In order to determine if all data from encounter
	;;^UTILITY(U,$J,"PRO",1665,1,5,0)
	;;=forms has been collected it is necessary to flag
	;;^UTILITY(U,$J,"PRO",1665,1,6,0)
	;;=all printed forms as having data input.  If the
	;;^UTILITY(U,$J,"PRO",1665,1,7,0)
	;;=input is from AICS then the Form Tracking file is
	;;^UTILITY(U,$J,"PRO",1665,1,8,0)
	;;=automatically updated.  If data entry is done through
	;;^UTILITY(U,$J,"PRO",1665,1,9,0)
	;;=Scheduling or PCE then the form tracking file is not
	;;^UTILITY(U,$J,"PRO",1665,1,10,0)
	;;=updated.
	;;^UTILITY(U,$J,"PRO",1665,1,11,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",1665,1,12,0)
	;;=This protocol ensures that data during data entry
	;;^UTILITY(U,$J,"PRO",1665,1,13,0)
	;;=through PCE or scheduling flags a manual data entry
	;;^UTILITY(U,$J,"PRO",1665,1,14,0)
	;;=field in the Form Tracking file.
	;;^UTILITY(U,$J,"PRO",1665,20)
	;;=D MAN^IBDFPCE
	;;^UTILITY(U,$J,"PRO",1665,99)
	;;=56595,34005
	;;^UTILITY(U,$J,"PRO",1665,"MEN","PXCA DATA EVENT")
	;;=1665
	;;^UTILITY(U,$J,"PRO",1665,"MEN","PXK VISIT DATA EVENT")
	;;=1665
	;;^UTILITY(U,$J,"PRO",1730,0)
	;;=IBDF EF CLINIC GROUP DELETE^Delete Clinic Grp^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1730,20)
	;;=D DEL^IBDFCG
	;;^UTILITY(U,$J,"PRO",1730,99)
	;;=56663,40648
	;;^UTILITY(U,$J,"PRO",1758,0)
	;;=IBDF EF DELETE QUEUE PARMS^Delete Param Grp^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
	;;^UTILITY(U,$J,"PRO",1758,20)
	;;=D DEL^IBDFPE1
	;;^UTILITY(U,$J,"PRO",1758,99)
	;;=56666,34654

IBDONIT
IBDONIT	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	K DIF,DIK,DDF,DDT,DTO,D0,DLAYGO,DIC,DIR,DA,ORVROM,DFR,DTN,DIX,DZ
	S DIFQ=0,ORVROM=22 W !!,"This version of 'IBDONIT' was created on 03-APR-1996"
	W !?9,"(at ALBANY CAMPUS DEVELOPMENT, by OE/RR V.2.5)",!
	G Q:DIFQ D ^IBDONIT1 G Q:'$D(DIFQ) S DIK(0)="B"
	D ^IBDONIT2,^IBDONIT3
	L  W !,*7,"OK, Protocol Installation is Complete.",!
	K %ZW,%,%H,D0,DA,DIF,DIFQ,DIG,DIH,DIK,DIU,DIV,DSEC,I,J,KEY,DIY,N,NM,NO,ORVROM,R,X,X0
	Q
	;
Q	W *7,!!,"NO UPDATING HAS OCCURRED!" Q
	;
IXF	;;IBD

IBDONIT1
IBDONIT1	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	; LOADS
	;
	I $S('$D(DUZ)#2:1,'$D(DUZ(0))#2:1,1:0) W !,"DUZ and DUZ(0) must be defined to continue." K DIFQ Q
	K DIF,DIK,D,DDF,DDT,DTO,D0,DLAYGO,DIC,DIR,DA,DFR,DTN,DIX,DZ D DT^IBDONIT2 S %=1,U="^",DSEC=1
	S NO=$P("I 0^I $D(@X)#2,X[U",U,%) I %<1 K DIFQ Q
	W !,"    PROTOCOL INSTALLATION"
	Q:'$D(DIFQ)  ;S %=0 W !!,"ARE YOU SURE YOU WANT TO CONTINUE" D YN^DICN I %-1 K DIFQ Q
	D DT^IBDONIT2 K ^UTILITY(U,$J),^UTILITY("DIK",$J) W !,"...OK, this may take a while, hold on please..." F R=1001:1:1019 D @("^IBDON"_$E(R,2,4)) W "."

IBDONIT2
IBDONIT2	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
	K ^UTILITY("ORVROM",$J),DIC
	Q
DT	W !
	I '$D(DTIME) S DTIME=999
	K %DT D NOW^%DTC S DT=X
	K DIK,DIC,%I,DICS Q
	;

IBDONIT3
IBDONIT3	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
	K ^UTILITY("ORVROM",$J) S DIC(0)="LX",ORNMCHK=1 I $D(^ORD(101,0))#2,^(0)?1"PROTOCOL".E S DIC="^ORD(101,",DLAYGO=101,N="PRO" D ADD,OP
	K ^UTILITY(U,$J),DIC,DLAYGO
	Q
DIEZ	I ^DD("VERSION")>17.4,'$D(DISYS),$D(^%ZOSF("OS"))#2 S DISYS=+$P(^("OS"),"^",2)
	E  S DISYS=^DD("OS")
	Q:'$D(^DD("OS",DISYS,"ZS"))
	S N=$O(^UTILITY("ORVROM",$J,DIR,0)) Q:N=""  S Y=+^(N) K ^(N)
	I $D(@("^"_DIR_"(Y,""ROU"")")) K ^("ROU") I $D(^("ROUOLD")) S X=^("ROUOLD"),DMAX=^DD("ROU") D:X]"" @("EN^DI"_$E(DIR,3)_"Z")
	G DIEZ
	;
OP	S NM=$O(^UTILITY("ORVROM",$J,N,NM)) I NM="" K ^UTILITY("ORVROM",$J) G Q
	S R=$O(^UTILITY("ORVROM",$J,N,NM,0)) G:R="" OP
	W !,"'"_NM_"' Protocol Filed" S DA=+^UTILITY("ORVROM",$J,N,NM,R)
	S %=$P(^ORD(101,DA,0),U,12) S:%]"" %=$O(^DIC(9.4,"B",%,0))
	S $P(^ORD(101,DA,0),U,12)=%,(ORDZ,ORDIX)=0
	S %=$S($D(^ORD(101,DA,5)):$P(^(5),"^"),1:"") I $L(%) S $P(^(5),"^")="",X=$P(%,";",2),%=$P(%,";") I $D(@("^"_X_"""B"","""_%_""")")) S %=$O(^(%,0)) S %=$S(%:%_";"_X,1:""),$P(^ORD(101,DA,5),"^")=%
	I $D(^ORD(101,DA,3,0)) S I=0 F  S I=$O(^ORD(101,DA,3,I)) Q:I<1  S KEY=^(I,0) K ^(0) I $D(^DIC(19.1,"B",KEY)) S KEY=$O(^(KEY,0)) I KEY S ^ORD(101,DA,3,I,0)=KEY
	I $D(^ORD(101,DA,3)) S I=0 F  S I=$O(^ORD(101,DA,3,I)) Q:I<1  S ORDZ=ORDZ+1,ORDIX=X
	I  S $P(^ORD(101,DA,3,0),"^",3,4)=ORDIX_"^"_ORDZ
	I $D(^UTILITY("ORVROM",$J,N,NM,R,10)) S X=0 F  S X=$O(^UTILITY("ORVROM",$J,N,NM,R,10,X)) Q:X<1  D A1
	S (ORDZ,ORDIX)=0 S X=0 F  S X=$O(^ORD(101,DA,10,X)) Q:X<1  S ORDZ=ORDZ+1,ORDIX=X
	S:$D(^ORD(101,DA,10,0)) ^(0)="^101.01PA^"_ORDIX_U_ORDZ D IX1^DIK
	I $D(^UTILITY("ORVROM",$J,N,NM,R,"MEN")) S IMEN=0 F  S IMEN=$O(^UTILITY("ORVROM",$J,N,NM,R,"MEN",IMEN)) Q:IMEN=""  S OMEN=^(IMEN),MEN=IMEN D MEN
	K MEN,IMEN,OMEN
	G OP
	;
ADD	S R=0 F  S R=$O(^UTILITY(U,$J,N,R)) Q:R=""  S X=$P(^(R,0),U),I=$P(^(0),U,4) D
	. I $L($T(DOT^ORVOM)) D DOT^ORVOM
	. I '$L($T(DOT^ORVOM)) W "."
	. I $O(^ORD(101,"B",X,0)) S Y=$O(^(0)),ORA=Y,Y=Y_U D A Q
	. D ^DIC I Y>0,'$D(DIFQ(N))!$P(Y,U,3) S ORA=Y,Y=Y_U D A
Q	K ORA,MEN,OMEN,ORNMCHK,ORDZ,ORDIX S (NM,R)=0 Q
A	S ^UTILITY("ORVROM",$J,N,X,R)=Y
	I $O(^UTILITY(U,$J,N,R,1,0))>0 K ^ORD(101,+Y,1)
	I $O(^UTILITY(U,$J,N,R,10,0))>0 S %X="^UTILITY(U,$J,N,R,10,",%Y="^UTILITY(""ORVROM"",$J,N,X,R,10," D %XY^%RCR K ^UTILITY(U,$J,N,R,10)
	I $D(^UTILITY(U,$J,N,R,"MEN")) S %X="^UTILITY(U,$J,N,R,""MEN"",",%Y="^UTILITY(""ORVROM"",$J,N,X,R,""MEN""," D %XY^%RCR K ^UTILITY(U,$J,N,R,"MEN")
	S %X="^UTILITY(U,$J,N,R,",%Y=DIC_"+ORA,",DA=+ORA,DIK=DIC D %XY^%RCR
	Q
A1	S ORA=DA N DA,DIC,ORI S Y="",ORI=0,DIC="^ORD(101,"_+ORA_",10,",DIC(0)="L",DA(1)=+ORA S:'$D(^ORD(101,DA(1),10,0)) ^(0)="^101.01PA^^"
	F  S ORI=$O(^UTILITY("ORVROM",$J,N,NM,R,10,ORI)) Q:ORI<1  S X0=^(ORI,0),X=$S($D(^(U)):^(U),1:"") I $L(X) D A2
	K DA,^UTILITY("ORVROM",$J,N,NM,R,10)
	Q
A2	N X1 S DLAYGO=101 D ^DIC Q:'Y
	I $P(Y,"^",3) W !?2,X_" added as item to "_$P(^ORD(101,DA(1),0),"^")_"."
	S X0=^UTILITY("ORVROM",$J,N,NM,R,10,ORI,0)
	S %=$P(X0,"^",4) I $L(%) S %=$O(^ORD(101,"B",%,0)) S:% $P(X0,"^",4)=%
	S $P(^ORD(101,DA(1),10,+Y,0),"^",2,99)=$P(X0,"^",2,99)
	S X1=0 F  S X1=$O(^UTILITY("ORVROM",$J,N,NM,R,10,ORI,X1)) Q:X1=""  I X1'["^" S X0=^UTILITY("ORVROM",$J,N,NM,R,10,ORI,X1),^ORD(101,DA(1),10,+Y,X1)=X0
	Q
MEN	S MEN=$S($D(^ORD(101,"B",MEN)):$O(^(MEN,0)),1:"") I 'MEN K ^UTILITY("ORVROM",$J,N,NM,R,"MEN") Q
	S X=NM,X0=OMEN,DIC="^ORD(101,"_MEN_",10,",DIC(0)="L",DA(1)=MEN S:'$D(^ORD(101,DA(1),10,0)) ^(0)="^101.01PA^^"
	S DIC("DR")="2///"_$P(X0,"^",2)_";3///"_$P(X0,"^",3)_";4///"_$P(X0,"^",4)_";5///"_$P(X0,"^",5)_";6///"_$P(X0,"^",6),DLAYGO=101 D ^DIC
	I $P(Y,"^",3) W !?2,X_" added as item to "_$P(^ORD(101,DA(1),0),"^")_"."
	Q

IBDPI001
IBDPI001	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.6,0,"GL")
	;;=^IBE(358.6,
	;;^DIC("B","IMP/EXP PACKAGE INTERFACE",358.6)
	;;=
	;;^DIC(358.6,"%D",0)
	;;=^^1^1^2950927^^^^
	;;^DIC(358.6,"%D",1,0)
	;;=This file is used as a workspace by the import/export utility.
	;;^DD(358.6,0)
	;;=FIELD^^19^50
	;;^DD(358.6,0,"DDA")
	;;=N
	;;^DD(358.6,0,"DT")
	;;=2960214
	;;^DD(358.6,0,"ID",.06)
	;;=W ""
	;;^DD(358.6,0,"ID","WRITE")
	;;=W !,$E($P(^(0),U),1,40),?45,"TYPE=",$S($P(^(0),"^",6)=1:"INPUT",$P(^(0),"^",6)=2:"OUTPUT",$P(^(0),"^",6)=3:"SELECTION",1:"REPORT"),$S($P(^(0),U,6)=3&'$P(^(0),U,13):" ** NOT SCANNABLE **",1:""),!," "
	;;^DD(358.6,0,"IX","B",358.6,.01)
	;;=
	;;^DD(358.6,0,"IX","C",358.6,.04)
	;;=
	;;^DD(358.6,0,"IX","D",358.6,3)
	;;=
	;;^DD(358.6,0,"IX","E",358.6,.01)
	;;=
	;;^DD(358.6,0,"NM","IMP/EXP PACKAGE INTERFACE")
	;;=
	;;^DD(358.6,0,"PT",358.2,.11)
	;;=
	;;^DD(358.6,0,"PT",358.5,.03)
	;;=
	;;^DD(358.6,0,"PT",358.6,.13)
	;;=
	;;^DD(358.6,0,"PT",358.93,.06)
	;;=
	;;^DD(358.6,.01,0)
	;;=NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.6,.01,1,0)
	;;=^.1
	;;^DD(358.6,.01,1,1,0)
	;;=358.6^B
	;;^DD(358.6,.01,1,1,1)
	;;=S ^IBE(358.6,"B",$E(X,1,30),DA)=""
	;;^DD(358.6,.01,1,1,2)
	;;=K ^IBE(358.6,"B",$E(X,1,30),DA)
	;;^DD(358.6,.01,1,2,0)
	;;=358.6^E^MUMPS
	;;^DD(358.6,.01,1,2,1)
	;;=S ^IBE(358.6,"E",$E(X,$F(X," "),40),DA)=""
	;;^DD(358.6,.01,1,2,2)
	;;=K ^IBE(358.6,"E",$E(X,$F(X," "),40),DA)
	;;^DD(358.6,.01,1,2,"%D",0)
	;;=^^4^4^2940224^
	;;^DD(358.6,.01,1,2,"%D",1,0)
	;;= 
	;;^DD(358.6,.01,1,2,"%D",2,0)
	;;=For package interfaces that are output routines the name has the custodial
	;;^DD(358.6,.01,1,2,"%D",3,0)
	;;=package's name space as a prefix. This cross-reference removes that
	;;^DD(358.6,.01,1,2,"%D",4,0)
	;;=prefix. It is used to improve the display of output routines for the user.
	;;^DD(358.6,.01,1,2,"DT")
	;;=2930409
	;;^DD(358.6,.01,3)
	;;=Answer must be 3-40 characters in length. All entries with Action Type other than PRINT REPORT must be be prefixed with the namespace of the package that is responsible for the data.
	;;^DD(358.6,.01,21,0)
	;;=^^3^3^2950412^^^^
	;;^DD(358.6,.01,21,1,0)
	;;= 
	;;^DD(358.6,.01,21,2,0)
	;;=The name of the Package Interface. For interfaces returning data the name
	;;^DD(358.6,.01,21,3,0)
	;;=should be preceded with the namespace of the package.
	;;^DD(358.6,.01,23,0)
	;;=^^1^1^2950412^
	;;^DD(358.6,.01,23,1,0)
	;;= 
	;;^DD(358.6,.01,"DT")
	;;=2930409
	;;^DD(358.6,.02,0)
	;;=ENTRY POINT^F^^0;2^K:$L(X)>8!($L(X)<1) X
	;;^DD(358.6,.02,3)
	;;=What entry point into the routine does this package interface use?
	;;^DD(358.6,.02,21,0)
	;;=^^2^2^2941018^^
	;;^DD(358.6,.02,21,1,0)
	;;= 
	;;^DD(358.6,.02,21,2,0)
	;;=The entry point in the routine that should be called.
	;;^DD(358.6,.02,"DT")
	;;=2941018
	;;^DD(358.6,.03,0)
	;;=ROUTINE^F^^0;3^K:$L(X)>8!($L(X)<1) X
	;;^DD(358.6,.03,3)
	;;=What routine does this package interface use?
	;;^DD(358.6,.03,21,0)
	;;=^^2^2^2941018^^
	;;^DD(358.6,.03,21,1,0)
	;;= 
	;;^DD(358.6,.03,21,2,0)
	;;=The routine that should be called.
	;;^DD(358.6,.03,"DT")
	;;=2921125
	;;^DD(358.6,.04,0)
	;;=CUSTODIAL PACKAGE^F^^0;4^K:$L(X)>20!($L(X)<3) X
	;;^DD(358.6,.04,1,0)
	;;=^.1
	;;^DD(358.6,.04,1,1,0)
	;;=358.6^C
	;;^DD(358.6,.04,1,1,1)
	;;=S ^IBE(358.6,"C",$E(X,1,30),DA)=""
	;;^DD(358.6,.04,1,1,2)
	;;=K ^IBE(358.6,"C",$E(X,1,30),DA)
	;;^DD(358.6,.04,1,1,"DT")
	;;=2921229
	;;^DD(358.6,.04,3)
	;;=For Package Interfaces that return data the Custodial Package is the package that is providing the data. For Package Interfaces that print reports it is the package that is providing the report.
	;;^DD(358.6,.04,21,0)
	;;=^^2^2^2940217^
	;;^DD(358.6,.04,21,1,0)
	;;=This is a free text pointer to the package file. It serves only to
	;;^DD(358.6,.04,21,2,0)
	;;=document the custodial package of the data.
	;;^DD(358.6,.04,"DT")
	;;=2930726
	;;^DD(358.6,.05,0)
	;;=VARIABLE DATA?^S^0:NO;1:YES;^0;5^Q
	;;^DD(358.6,.05,.1)
	;;=DOES THE DATA VARY FROM PATIENT TO PATIENT?
	;;^DD(358.6,.05,3)
	;;=Enter YES if the data returned is variable, NO if the data is always the same.
	;;^DD(358.6,.05,21,0)
	;;=^^3^3^2930726^^^
	;;^DD(358.6,.05,21,1,0)
	;;=This field is used in the batch printing of encounter forms. The purpose
	;;^DD(358.6,.05,21,2,0)
	;;=is to avoid recomputing fields whose data does not change from patient to
	;;^DD(358.6,.05,21,3,0)
	;;=patient.
	;;^DD(358.6,.05,"DT")
	;;=2931124
	;;^DD(358.6,.06,0)
	;;=ACTION TYPE^RS^1:INPUT;2:DISPLAY;3:SELECTION;4:PRINT REPORT;^0;6^Q
	;;^DD(358.6,.06,3)
	;;=Is this interface for inputting data, displaying data to a form, for creating lists that will appear on a form, or for printing reports?

IBDPI002
IBDPI002	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,.06,21,0)
	;;=^^9^9^2950825^
	;;^DD(358.6,.06,21,1,0)
	;;=                                                                   
	;;^DD(358.6,.06,21,2,0)
	;;= 
	;;^DD(358.6,.06,21,3,0)
	;;=Enter 1 for INPUT if the interface accepts data input from the user
	;;^DD(358.6,.06,21,4,0)
	;;=and transmits the data to the appropriate package. Enter 2 for DISPLAY
	;;^DD(358.6,.06,21,5,0)
	;;=if the interface retrieve data for display to a form. Enter 3 for
	;;^DD(358.6,.06,21,6,0)
	;;=SELECTION if the interface is for building a list to display
	;;^DD(358.6,.06,21,7,0)
	;;=to a form. Enter 4 if the interface is for printing a report. If
	;;^DD(358.6,.06,21,8,0)
	;;=the ACTION TYPE is SELECTION then the data type must be a record and the
	;;^DD(358.6,.06,21,9,0)
	;;=first piece must be the ID use to uniquely identify the selection.
	;;^DD(358.6,.06,"DT")
	;;=2950825
	;;^DD(358.6,.07,0)
	;;=DATA TYPE^S^1:SINGLE VALUE;2:RECORD;3:LIST OF SINGLE VALUES;4:LIST OF RECORDS;5:WORD PROCESSING;^0;7^Q
	;;^DD(358.6,.07,.1)
	;;=WHAT FORMAT WILL THE DATA BE IN?
	;;^DD(358.6,.07,3)
	;;=What format will the data be in?
	;;^DD(358.6,.07,21,0)
	;;=^^9^9^2950825^
	;;^DD(358.6,.07,21,1,0)
	;;=Only applies to selection or display interfaces, both of which retrieve
	;;^DD(358.6,.07,21,2,0)
	;;=data for display to a form. It is the type of format the data should be
	;;^DD(358.6,.07,21,3,0)
	;;=in.
	;;^DD(358.6,.07,21,4,0)
	;;= 
	;;^DD(358.6,.07,21,5,0)
	;;=A single value is a string without pieces. A record is a set of strings
	;;^DD(358.6,.07,21,6,0)
	;;=concatenated together with "^" separating the pieces. A list is an
	;;^DD(358.6,.07,21,7,0)
	;;=indefinite number of values, each numbered, each containing the same type
	;;^DD(358.6,.07,21,8,0)
	;;=of information. A word processing data type will be in FM format.
	;;^DD(358.6,.07,21,9,0)
	;;=If the ACTION TYPE is SELECTION then the data type must be record.
	;;^DD(358.6,.07,"DT")
	;;=2930726
	;;^DD(358.6,.08,0)
	;;=PRINT COMPLETE^S^0:NO;1:YES;^0;8^Q
	;;^DD(358.6,.08,3)
	;;=If there is insufficient room on the form to print the data, should it be re-printed in full on a separate page?
	;;^DD(358.6,.08,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.6,.08,21,1,0)
	;;= 
	;;^DD(358.6,.08,21,2,0)
	;;=This field is used to determine what should happen if the data does not
	;;^DD(358.6,.08,21,3,0)
	;;=fit in the space allocated to it on the form. If answered YES the data
	;;^DD(358.6,.08,21,4,0)
	;;=will be printed on another page.
	;;^DD(358.6,.08,"DT")
	;;=2930507
	;;^DD(358.6,.09,0)
	;;=AVAILABLE? (Y/N)^RS^0:NO;1:YES;^0;9^Q
	;;^DD(358.6,.09,3)
	;;=Is this package interface now available for use?
	;;^DD(358.6,.09,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.6,.09,21,1,0)
	;;= 
	;;^DD(358.6,.09,21,2,0)
	;;=This field should be set to YES if the interface is available, NO if it is
	;;^DD(358.6,.09,21,3,0)
	;;=not available. Interfaces that are not available are not called.
	;;^DD(358.6,.09,"DT")
	;;=2921213
	;;^DD(358.6,.1,0)
	;;=HEALTH SUMMARY?^S^0:NO;1:YES;^0;10^Q
	;;^DD(358.6,.1,.1)
	;;=ARE YOU REQUESTING A HEALTH SUMMARY?
	;;^DD(358.6,.1,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.6,.1,3)
	;;= Are you requesting a HEALTH SUMMARY to print?
	;;^DD(358.6,.1,21,0)
	;;=^^7^7^2930616^
	;;^DD(358.6,.1,21,1,0)
	;;= 
	;;^DD(358.6,.1,21,2,0)
	;;=This field will determine how to go about printing the report or form. It
	;;^DD(358.6,.1,21,3,0)
	;;=applies only to Package Interfaces of ACTION TYPE = PRINT REPORT. Health
	;;^DD(358.6,.1,21,4,0)
	;;=Summaries use the field HEALTH SUMMARY to determine the type of Health
	;;^DD(358.6,.1,21,5,0)
	;;=Summary to print. The process of printing Health Summaries dos not use the
	;;^DD(358.6,.1,21,6,0)
	;;=fields ENTRY POINT or ROUTINE, since all Health Summaries are printed in
	;;^DD(358.6,.1,21,7,0)
	;;=the same way.
	;;^DD(358.6,.1,"DT")
	;;=2930616
	;;^DD(358.6,.11,0)
	;;=TYPE OF HEALTH SUMMARY^*P142'^GMT(142,^0;11^S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(358.6,.11,3)
	;;=Which Health Summary do you want printed?
	;;^DD(358.6,.11,12)
	;;=EXCLUDES AD HOC HEALTH SUMMARIES
	;;^DD(358.6,.11,12.1)
	;;=S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION"""
	;;^DD(358.6,.11,21,0)
	;;=^^4^4^2940224^
	;;^DD(358.6,.11,21,1,0)
	;;= 
	;;^DD(358.6,.11,21,2,0)
	;;=This identifies the Health Summary that should be printed when this
	;;^DD(358.6,.11,21,3,0)
	;;=Package Interface is invoked. It should be null unless the HEALTH SUMMARY?
	;;^DD(358.6,.11,21,4,0)
	;;=field #.1 is coded YES.
	;;^DD(358.6,.11,"DT")
	;;=2930617

IBDPI003
IBDPI003	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,.12,0)
	;;=TOOLKIT MEMBER?^S^0:NO;1:YES;^0;12^Q
	;;^DD(358.6,.12,.1)
	;;=SHOULD THIS PACKAGE INTERFACE BE PART OF THE TOOLKIT?
	;;^DD(358.6,.12,3)
	;;=Enter YES if this PACKAGE INTERFACE was added by the package developers as part of the toolkit, enter NO otherwise.
	;;^DD(358.6,.12,21,0)
	;;=^^3^3^2950808^^
	;;^DD(358.6,.12,21,1,0)
	;;= 
	;;^DD(358.6,.12,21,2,0)
	;;=Package Interfaces that are developed for national use will be documented
	;;^DD(358.6,.12,21,3,0)
	;;=as being part of the toolkit.
	;;^DD(358.6,.12,"DT")
	;;=2950711
	;;^DD(358.6,.13,0)
	;;=PACKAGE INTERFACE FOR INPUT^*P358.6'^IBE(358.6,^0;13^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""S""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(358.6,.13,.1)
	;;=WHICH INTERFACE SHOULD THIS LIST USE FOR PASSING DATA TO THE DATA BASE?
	;;^DD(358.6,.13,3)
	;;=What interface should be used for inputting data entered on the selection list?
	;;^DD(358.6,.13,12)
	;;=Must be an available interfaces for accepting input from selection lists.
	;;^DD(358.6,.13,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""S"""
	;;^DD(358.6,.13,21,0)
	;;=^^1^1^2950825^^^^
	;;^DD(358.6,.13,21,1,0)
	;;=Used to map scanned data to DHCP.
	;;^DD(358.6,.13,"DT")
	;;=2950825
	;;^DD(358.6,.14,0)
	;;=DYNAMIC SELECTIONS^S^0:NO;1:YES;^0;14^Q
	;;^DD(358.6,.14,3)
	;;=Only for selection routines. Enter YES if the Package Interface builds the selection list each time the form is printed.
	;;^DD(358.6,.14,21,0)
	;;=^^2^2^2950719^
	;;^DD(358.6,.14,21,1,0)
	;;=This is used to indicate whether the interface is used to build selection
	;;^DD(358.6,.14,21,2,0)
	;;=lists at print time.
	;;^DD(358.6,.14,"DT")
	;;=2941221
	;;^DD(358.6,.15,0)
	;;=DO NOT USE DFN AS A SUBSCRIPT^*S^0:NO;1:YES;^0;15^Q
	;;^DD(358.6,.15,3)
	;;=If the patient DFN should not be used as a subscript when passing data enter YES.
	;;^DD(358.6,.15,12)
	;;=If the action type is not OUTPUT ROUTINE then this field should not be set to NO.
	;;^DD(358.6,.15,12.1)
	;;=S DIC("S")="I (Y=1)!($P(^IBE(358.6,DA,0),U,6)=2)"
	;;^DD(358.6,.15,21,0)
	;;=^^6^6^2950413^^^^
	;;^DD(358.6,.15,21,1,0)
	;;=Originally, the patient DFN was used as a subscript when returning data
	;;^DD(358.6,.15,21,2,0)
	;;=for Package Interfaces of type output, but not for other types of
	;;^DD(358.6,.15,21,3,0)
	;;=interfaces. It is no longer necessary for any new Package Interface to use
	;;^DD(358.6,.15,21,4,0)
	;;=DFN as a subscript, but, to maintain compatibilty, output routines
	;;^DD(358.6,.15,21,5,0)
	;;=must set this field to YES if DFN is not to be used as a subscript. This
	;;^DD(358.6,.15,21,6,0)
	;;=field has no effect on other types of interfaces.
	;;^DD(358.6,.15,"DT")
	;;=2950413
	;;^DD(358.6,.16,0)
	;;=ALLOWED OBJECT USE^FX^^0;16^S X=$$UPPER^VALM1(X) K:$L(X)>4!("SMHP"'[$E(X,1))!("SMHP"'[$E(X,2))!("SMHP"'[$E(X,3))!("SMHP"'[$E(X,4)) X
	;;^DD(358.6,.16,3)
	;;=
	;;^DD(358.6,.16,4)
	;;=D HELP7^IBDFU5A
	;;^DD(358.6,.16,21,0)
	;;=^^5^5^2950913^^^^
	;;^DD(358.6,.16,21,1,0)
	;;=This field applies only to package interfaces for input and is used to
	;;^DD(358.6,.16,21,2,0)
	;;=determine which package interfaces a particular type of form object may
	;;^DD(358.6,.16,21,3,0)
	;;=point to. Some combinations don't make sense. For example, it would not
	;;^DD(358.6,.16,21,4,0)
	;;=make sense to allow a multiple choice question to point to vitals, which
	;;^DD(358.6,.16,21,5,0)
	;;=is used to input data such as temperature and blood pressure.
	;;^DD(358.6,.16,"DT")
	;;=2950913
	;;^DD(358.6,.17,0)
	;;=ASK FOR ADDITIONAL NARRATIVE^S^0:NO;1:YES;^0;17^Q
	;;^DD(358.6,.17,3)
	;;=Answer yes or no.
	;;^DD(358.6,.17,21,0)
	;;=^^8^8^2960123^
	;;^DD(358.6,.17,21,1,0)
	;;=Enter whether users should be prompted for specifying the provider
	;;^DD(358.6,.17,21,2,0)
	;;=narrative that will be sent to PCE (and problem list) when creating a
	;;^DD(358.6,.17,21,3,0)
	;;=selection list.  If this is answered no and the narrative is sent to
	;;^DD(358.6,.17,21,4,0)
	;;=PCE then the text as it appears on the form will be used as the
	;;^DD(358.6,.17,21,5,0)
	;;=provider narrative.
	;;^DD(358.6,.17,21,6,0)
	;;= 
	;;^DD(358.6,.17,21,7,0)
	;;=Generally only diagnosis and clinical lexicon entries will want this
	;;^DD(358.6,.17,21,8,0)
	;;=field set to Yes.
	;;^DD(358.6,.17,"DT")
	;;=2960123
	;;^DD(358.6,.18,0)
	;;=ASK FOR CLINICAL LEXICON^S^0:NO;1:YES;^0;18^Q
	;;^DD(358.6,.18,3)
	;;= Enter 'Yes' if you want to map entries from this interface to the clinical lexicon.
	;;^DD(358.6,.18,21,0)
	;;=^^10^10^2960205^
	;;^DD(358.6,.18,21,1,0)
	;;=If this field is answered 'Yes' then users who are editing or creating

IBDPI004
IBDPI004	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,.18,21,2,0)
	;;=selection lists based on this interface will be asked to map each entry
	;;^DD(358.6,.18,21,3,0)
	;;=(thought it is optional) to a clinical lexicon entry.  This is highly
	;;^DD(358.6,.18,21,4,0)
	;;=recommended for user who are scanning diagnosis entries and trying to 
	;;^DD(358.6,.18,21,5,0)
	;;=add entries to the Patients Problem list.
	;;^DD(358.6,.18,21,6,0)
	;;= 
	;;^DD(358.6,.18,21,7,0)
	;;=The primary purpose of this field is to allow sites who have built selection
	;;^DD(358.6,.18,21,8,0)
	;;=lists using the ICD9 Diagnosis file to map each entry to the clinical lexicon.
	;;^DD(358.6,.18,21,9,0)
	;;=The Problem List EP has recommended that each problem added to the problem
	;;^DD(358.6,.18,21,10,0)
	;;=list be associated with a clinical lexicon entry.
	;;^DD(358.6,.18,"DT")
	;;=2960205
	;;^DD(358.6,.19,0)
	;;=DQ REQUIRED^S^1:YES;^0;19^Q
	;;^DD(358.6,.19,21,0)
	;;=^^2^2^2960212^
	;;^DD(358.6,.19,21,1,0)
	;;=Field used to determine if a data qualifier is required for this
	;;^DD(358.6,.19,21,2,0)
	;;=input interface.
	;;^DD(358.6,.19,"DT")
	;;=2960212
	;;^DD(358.6,1,0)
	;;=DESCRIPTION^358.61^^1;0
	;;^DD(358.6,1,21,0)
	;;=^^1^1^2950719^^^^
	;;^DD(358.6,1,21,1,0)
	;;=Should describe the data being exchanged by the package interface.
	;;^DD(358.6,2.01,0)
	;;=PIECE 1 DESCRIPTIVE NAME^F^^2;1^K:$L(X)>30!($L(X)<3) X
	;;^DD(358.6,2.01,.1)
	;;=WHAT IS THE FIRST PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(358.6,2.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.6,2.01,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.6,2.01,21,1,0)
	;;= 
	;;^DD(358.6,2.01,21,2,0)
	;;=Should be a descriptive name of the first field in the record returned by
	;;^DD(358.6,2.01,21,3,0)
	;;=the interface.
	;;^DD(358.6,2.01,"DT")
	;;=2930726
	;;^DD(358.6,2.02,0)
	;;=PIECE 1 MAXIMUM LENGTH^NJ3,0^^2;2^K:+X'=X!(X>210)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.6,2.02,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(358.6,2.02,3)
	;;=Type a Number between 0 and 210, 0 Decimal Digits
	;;^DD(358.6,2.02,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.6,2.02,21,1,0)
	;;= 
	;;^DD(358.6,2.02,21,2,0)
	;;=The maximum length of the first field of the record returned by the
	;;^DD(358.6,2.02,21,3,0)
	;;=interface.
	;;^DD(358.6,2.02,"DT")
	;;=2930726
	;;^DD(358.6,2.16,0)
	;;=PIECE 1 RECOMMENDED HEADER^F^^2;16^K:$L(X)>20!($L(X)<1) X
	;;^DD(358.6,2.16,3)
	;;=Answer must be 1-20 characters in length.
	;;^DD(358.6,2.16,21,0)
	;;=^^1^1^2950719^
	;;^DD(358.6,2.16,21,1,0)
	;;=The recommended header will be used as the default when designing a form.
	;;^DD(358.6,2.16,"DT")
	;;=2950417
	;;^DD(358.6,2.17,0)
	;;=IS PIECE 1 DISPLAYABLE?^S^0:NO;1:YES;^2;17^Q
	;;^DD(358.6,2.17,.1)
	;;=CAN THIS FIELD BE DISPLAYED TO THE USER?
	;;^DD(358.6,2.17,3)
	;;=The first piece of the returned record is reserved for the unique id of the selection. Enter no if it should not be displayed, for example, if it is a pointer.
	;;^DD(358.6,2.17,21,0)
	;;=^^3^3^2950719^^
	;;^DD(358.6,2.17,21,1,0)
	;;=This is used only for selection type interfaces. If NO, then the value can
	;;^DD(358.6,2.17,21,2,0)
	;;=not be displayed to the encounter form.  The first piece must contain the
	;;^DD(358.6,2.17,21,3,0)
	;;=unique id of the selection.
	;;^DD(358.6,2.17,"DT")
	;;=2930810
	;;^DD(358.6,2.18,0)
	;;=EXPORT SELECTIONS/CHOICES?^S^0:NO;1:YES;^2;18^Q
	;;^DD(358.6,2.18,3)
	;;=Enter NO if the ID returned by the PACKAGE INTERFACE is not constant between sites, for example, if it is a pointer. Otherwise answer YES.
	;;^DD(358.6,2.18,21,0)
	;;=^^8^8^2950825^
	;;^DD(358.6,2.18,21,1,0)
	;;= 
	;;^DD(358.6,2.18,21,2,0)
	;;= 
	;;^DD(358.6,2.18,21,3,0)
	;;=Applies to selection and input routines. Determines whether
	;;^DD(358.6,2.18,21,4,0)
	;;=selections appearing on selection lists and choices in a multiple choice
	;;^DD(358.6,2.18,21,5,0)
	;;=field will be exported along with the form that they appear on. The
	;;^DD(358.6,2.18,21,6,0)
	;;=import/export utility will not resolve pointers, so if the id used by
	;;^DD(358.6,2.18,21,7,0)
	;;=the package interface is a pointer that differs between sites
	;;^DD(358.6,2.18,21,8,0)
	;;=this field should contain NO.
	;;^DD(358.6,2.18,"DT")
	;;=2950825
	;;^DD(358.6,3,0)
	;;=USER LOOKUP^F^^3;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>240!($L(X)<1) X
	;;^DD(358.6,3,.1)
	;;=LIST OF WORDS TO MAKE LOOK-UPS EASIER
	;;^DD(358.6,3,1,0)
	;;=^.1
	;;^DD(358.6,3,1,1,0)
	;;=358.6^D^KWIC
	;;^DD(358.6,3,1,1,1)
	;;=S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^IBE(358.6,"D",I,DA)=""

IBDPI005
IBDPI005	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,3,1,1,2)
	;;=S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^IBE(358.6,"D",I,DA)
	;;^DD(358.6,3,1,1,"%D",0)
	;;=^^3^3^2930409^^
	;;^DD(358.6,3,1,1,"%D",1,0)
	;;= 
	;;^DD(358.6,3,1,1,"%D",2,0)
	;;=This index is meant to assist the user in locating the correct package
	;;^DD(358.6,3,1,1,"%D",3,0)
	;;=interface needed to display a particular item of data to a form.
	;;^DD(358.6,3,1,1,"DT")
	;;=2930309
	;;^DD(358.6,3,3)
	;;=Enter words separated with spaces. They will be indexed to assist in lookup.
	;;^DD(358.6,3,4)
	;;=D LOOKUP^IBDF16
	;;^DD(358.6,3,21,0)
	;;=^^4^4^2940217^
	;;^DD(358.6,3,21,1,0)
	;;= 
	;;^DD(358.6,3,21,2,0)
	;;=This field is used to create a KWIC index for this file. The purpose is to
	;;^DD(358.6,3,21,3,0)
	;;=assist the user in locating the package interface he needs to display a
	;;^DD(358.6,3,21,4,0)
	;;=particular item of data to a form.
	;;^DD(358.6,3,"DT")
	;;=2930726
	;;^DD(358.6,4.01,0)
	;;=ENTRY ACTION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,4.01,3)
	;;=This is Standard MUMPS code.
	;;^DD(358.6,4.01,9)
	;;=@
	;;^DD(358.6,4.01,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.6,4.01,21,1,0)
	;;= 
	;;^DD(358.6,4.01,21,2,0)
	;;=This code will be executed after the PROTECTED VARIABLES are newed, but
	;;^DD(358.6,4.01,21,3,0)
	;;=before the interface routine is called.
	;;^DD(358.6,4.01,"DT")
	;;=2930521
	;;^DD(358.6,5.01,0)
	;;=EXIT ACTION^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,5.01,3)
	;;=This is Standard MUMPS code.
	;;^DD(358.6,5.01,9)
	;;=@
	;;^DD(358.6,5.01,21,0)
	;;=^^3^3^2930528^
	;;^DD(358.6,5.01,21,1,0)
	;;= 
	;;^DD(358.6,5.01,21,2,0)
	;;=This code will be executed after the interface routine is called.
	;;^DD(358.6,5.01,21,3,0)
	;;=The effect of the NEW done on the PROTECTED VARIABLES is still in effect.
	;;^DD(358.6,5.01,"DT")
	;;=2930518
	;;^DD(358.6,6,0)
	;;=PROTECTED LOCAL VARIABLES^358.66^^6;0
	;;^DD(358.6,6,21,0)
	;;=^^11^11^2950719^^^
	;;^DD(358.6,6,21,1,0)
	;;= 
	;;^DD(358.6,6,21,2,0)
	;;=This is a list of variables that should be newed before the entry action
	;;^DD(358.6,6,21,3,0)
	;;=or calling the interface routine. It is protection against interfaces that
	;;^DD(358.6,6,21,4,0)
	;;=alter or kill variables, or entry actions that do so. Note that REQUIRED
	;;^DD(358.6,6,21,5,0)
	;;=VARIABLES should not also be PROTECTED VARIABLES. If an interface routine
	;;^DD(358.6,6,21,6,0)
	;;=changes a required variable, however, there is a way to protect it.
	;;^DD(358.6,6,21,7,0)
	;;=Supposing, for example, DFN is killed by the interface. This will protect
	;;^DD(358.6,6,21,8,0)
	;;=it:
	;;^DD(358.6,6,21,9,0)
	;;=     PROTECTED VARIABLE:   IBDFN
	;;^DD(358.6,6,21,10,0)
	;;=     ENTRY ACTION:  S IBDFN=DFN
	;;^DD(358.6,6,21,11,0)
	;;=     EXIT ACTION:   S DFN=IBDFN
	;;^DD(358.6,7,0)
	;;=REQUIRED LOCAL VARIABLES^358.67^^7;0
	;;^DD(358.6,7,21,0)
	;;=^^4^4^2930528^
	;;^DD(358.6,7,21,1,0)
	;;= 
	;;^DD(358.6,7,21,2,0)
	;;=The interface may require inputs. This field is a list of the required
	;;^DD(358.6,7,21,3,0)
	;;=local variables. The interface will not be called unless the variables are
	;;^DD(358.6,7,21,4,0)
	;;=determined to exist.
	;;^DD(358.6,9,0)
	;;=PCE DIM INPUT TRANSFORM^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,9,3)
	;;=The input transform should transform X to the value that should be passed.
	;;^DD(358.6,9,9)
	;;=@
	;;^DD(358.6,9,21,0)
	;;=^^3^3^2960401^^^^
	;;^DD(358.6,9,21,1,0)
	;;=Used to transform X, the identifier stored with the form object, to the
	;;^DD(358.6,9,21,2,0)
	;;=form that should be passed to the PCE Device Interface Module (DIM). It may,
	;;^DD(358.6,9,21,3,0)
	;;=for example, transform a code to an ien.
	;;^DD(358.6,9,"DT")
	;;=2960401
	;;^DD(358.6,10,0)
	;;=HELP TEXT^F^^10;1^K:$L(X)>245!($L(X)<1) X
	;;^DD(358.6,10,3)
	;;=This should provide some help to the user who is trying to enter a value associated with a bubble.
	;;^DD(358.6,10,21,0)
	;;=^^2^2^2950817^^^
	;;^DD(358.6,10,21,1,0)
	;;=This should provide some help to the user who is trying to enter a value
	;;^DD(358.6,10,21,2,0)
	;;=associated with a bubble.
	;;^DD(358.6,10,"DT")
	;;=2950522
	;;^DD(358.6,11,0)
	;;=VALIDATOR^K^^11;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,11,3)
	;;=This is Standard MUMPS code will kill X if X no longer identifies a valid code.
	;;^DD(358.6,11,9)
	;;=@
	;;^DD(358.6,11,21,0)
	;;=^^7^7^2950825^
	;;^DD(358.6,11,21,1,0)
	;;=This field is used to validate codes currently on a form. The variable X
	;;^DD(358.6,11,21,2,0)
	;;=should be set to the identifier that was returned by the Package

IBDPI006
IBDPI006	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,11,21,3,0)
	;;=Interface. For selection interfaces, the identifier is always piece 1 of
	;;^DD(358.6,11,21,4,0)
	;;=the 0 node of the entry in the selection list. Xecuting this field will
	;;^DD(358.6,11,21,5,0)
	;;=result in X being killed if the value is not valid. This is used by the
	;;^DD(358.6,11,21,6,0)
	;;=maintanance utility, for example, to find CPT codes that have been
	;;^DD(358.6,11,21,7,0)
	;;=inactivated.
	;;^DD(358.6,11,"DT")
	;;=2950908
	;;^DD(358.6,12.01,0)
	;;=PCE DIM NODE^F^^12;1^K:$L(X)>30!($L(X)<1) X
	;;^DD(358.6,12.01,3)
	;;=What node will be used to pass the data?
	;;^DD(358.6,12.01,21,0)
	;;=^^1^1^2960401^^
	;;^DD(358.6,12.01,21,1,0)
	;;=The node used to pass the data to PCE, using the PCE DEVICE INTERFACE MODULE.
	;;^DD(358.6,12.01,"DT")
	;;=2960401
	;;^DD(358.6,12.02,0)
	;;=PCE DIM PIECE, VALUE^NJ2,0^^12;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,12.02,3)
	;;=What piece should be used to pass the value?
	;;^DD(358.6,12.02,21,0)
	;;=^^1^1^2960401^^^
	;;^DD(358.6,12.02,21,1,0)
	;;=The piece in the PXCA node used to pass the input value.
	;;^DD(358.6,12.02,"DT")
	;;=2960401
	;;^DD(358.6,12.03,0)
	;;=PCE DIM PIECE, NARRATIVE^NJ2,0^^12;3^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,12.03,3)
	;;=What piece should be used to pass the text displayed on the form?
	;;^DD(358.6,12.03,21,0)
	;;=^^1^1^2960401^^^^
	;;^DD(358.6,12.03,21,1,0)
	;;=The piece in the PCXA node used to pass the text displayed on the form.
	;;^DD(358.6,12.03,"DT")
	;;=2960401
	;;^DD(358.6,12.04,0)
	;;=PCE DIM PIECE, HEADER^NJ2,0^^12;4^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,12.04,3)
	;;=What piece should be used to pass the header displayed on the form?
	;;^DD(358.6,12.04,21,0)
	;;=^^2^2^2960401^^
	;;^DD(358.6,12.04,21,1,0)
	;;=The piece on the node specified by the PCE Device Interface Module
	;;^DD(358.6,12.04,21,2,0)
	;;=that the header is mapped to.
	;;^DD(358.6,12.04,"DT")
	;;=2960401
	;;^DD(358.6,12.05,0)
	;;=PCE DIM PIECE, DATA QUALIFIER^NJ2,0^^12;5^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,12.05,3)
	;;=What piece should be used to pass the data qualifier?
	;;^DD(358.6,12.05,21,0)
	;;=^^1^1^2960401^^^
	;;^DD(358.6,12.05,21,1,0)
	;;=The piece of the PXCA node where the data modifier belongs.
	;;^DD(358.6,12.05,"DT")
	;;=2960401
	;;^DD(358.6,13,0)
	;;=ALLOWABLE QUALIFIERS^358.613V^^13;0
	;;^DD(358.6,13,21,0)
	;;=^^2^2^2951018^^^^
	;;^DD(358.6,13,21,1,0)
	;;=This mulitiple contains the list of quailifiers that may apply to the
	;;^DD(358.6,13,21,2,0)
	;;=data.
	;;^DD(358.6,14,0)
	;;=PCE DIM OUTPUT TRANSFORM^K^^14;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,14,3)
	;;=This should change Y, the value to be passed, to a value suitable for display.
	;;^DD(358.6,14,9)
	;;=@
	;;^DD(358.6,14,21,0)
	;;=^^3^3^2960401^^
	;;^DD(358.6,14,21,1,0)
	;;=This transform should set Y, the value to be passed to the PCE 
	;;^DD(358.6,14,21,2,0)
	;;=Device Interface Module, to a value that is suitable for display.
	;;^DD(358.6,14,21,3,0)
	;;=It may, for example, change an ien to a code.
	;;^DD(358.6,14,"DT")
	;;=2960401
	;;^DD(358.6,15,0)
	;;=DATA DESCRIPTION^358.615I^^15;0
	;;^DD(358.6,15,21,0)
	;;=^^2^2^2950330^
	;;^DD(358.6,15,21,1,0)
	;;=For interfaces that return records, this multiple stores information on
	;;^DD(358.6,15,21,2,0)
	;;=the fields, other than the first field.
	;;^DD(358.6,16.1,0)
	;;=ALLOW INPUT OF NARRATIVE?^S^n:NO;o:OPTIONAL;r:REQUIRED;^16;1^Q
	;;^DD(358.6,16.1,3)
	;;=Should the user be allowed to enter a narrative? Answer n=NO, o=OPTIONAL, r=REQUIRED
	;;^DD(358.6,16.1,21,0)
	;;=^^2^2^2950719^
	;;^DD(358.6,16.1,21,1,0)
	;;=For input interfaces, this field determines whether a narrative is
	;;^DD(358.6,16.1,21,2,0)
	;;=allowed by the PCE Generic Device Interface.
	;;^DD(358.6,16.1,"DT")
	;;=2950421
	;;^DD(358.6,16.2,0)
	;;=NARRATIVE DATA TYPE^P358.99'^IBE(358.99,^16;2^Q
	;;^DD(358.6,16.2,3)
	;;=What data type definition describes the narrative?
	;;^DD(358.6,16.2,21,0)
	;;=^^2^2^2951018^^
	;;^DD(358.6,16.2,21,1,0)
	;;=This determines, among other things, how much space to allocate for the
	;;^DD(358.6,16.2,21,2,0)
	;;=narrative.
	;;^DD(358.6,16.2,"DT")
	;;=2951018
	;;^DD(358.6,16.3,0)
	;;=NARRATIVE HEADER^F^^16;3^K:$L(X)>40!($L(X)<1) X
	;;^DD(358.6,16.3,3)
	;;=Answer must be 1-40 characters in length.
	;;^DD(358.6,16.3,21,0)
	;;=^^1^1^2950825^
	;;^DD(358.6,16.3,21,1,0)
	;;=Used to label the narrative field.
	;;^DD(358.6,16.3,"DT")
	;;=2950815
	;;^DD(358.6,16.5,0)
	;;=ALLOW INPUT OF PRIMARY VALUE?^S^n:NO;o:OPTIONAL;r:REQUIRED;^16;5^Q
	;;^DD(358.6,16.5,3)
	;;=Should a code be entered? n=NO, o=OPTIONAL, r=REQUIRED

IBDPI007
IBDPI007	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,16.5,21,0)
	;;=^^2^2^2950719^
	;;^DD(358.6,16.5,21,1,0)
	;;=This applies only to interfaces for input and determines whether a
	;;^DD(358.6,16.5,21,2,0)
	;;=value, other than a narrative, can be entered.
	;;^DD(358.6,16.5,"DT")
	;;=2950426
	;;^DD(358.6,16.6,0)
	;;=PRIMARY VALUE DATA TYPE^P358.99'^IBE(358.99,^16;6^Q
	;;^DD(358.6,16.6,3)
	;;=What type of data is the primary value?
	;;^DD(358.6,16.6,21,0)
	;;=^^2^2^2951018^^^
	;;^DD(358.6,16.6,21,1,0)
	;;=This applies only to interfaces for input and determines, among other
	;;^DD(358.6,16.6,21,2,0)
	;;=things, the data type of the value to be entered.
	;;^DD(358.6,16.6,"DT")
	;;=2950914
	;;^DD(358.6,16.7,0)
	;;=PRIMARY VALUE HEADER^F^^16;7^K:$L(X)>40!($L(X)<1) X
	;;^DD(358.6,16.7,3)
	;;=Answer must be 1-40 characters in length.
	;;^DD(358.6,16.7,21,0)
	;;=^^1^1^2950815^
	;;^DD(358.6,16.7,21,1,0)
	;;=Used to label the primary value field.
	;;^DD(358.6,16.7,"DT")
	;;=2950815
	;;^DD(358.6,17,0)
	;;=SELECTOR^K^^17;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,17,3)
	;;=Enter mumps code that will allow the form designer to add a choice to a multiple choice field.
	;;^DD(358.6,17,9)
	;;=@
	;;^DD(358.6,17,21,0)
	;;=^^9^9^2950908^^
	;;^DD(358.6,17,21,1,0)
	;;=This field only applies to input interfaces. It is executed as by an input
	;;^DD(358.6,17,21,2,0)
	;;=transform when creating a multiple choice field. It should:
	;;^DD(358.6,17,21,3,0)
	;;=1) Kill X if an nothing is selected, otherwise set X to a value suitable
	;;^DD(358.6,17,21,4,0)
	;;=for display, perhaps the code.
	;;^DD(358.6,17,21,5,0)
	;;=2) Set IBLABEL to a suitable label for the choice.
	;;^DD(358.6,17,21,6,0)
	;;=3) Set IBID to an identifier. The identifier should ideally be exportable,
	;;^DD(358.6,17,21,7,0)
	;;=meaning the same from site to site. This usually means a coded value
	;;^DD(358.6,17,21,8,0)
	;;=rather than an ien. The identfier should match that of a corresponding
	;;^DD(358.6,17,21,9,0)
	;;=selection interface, if there is one.
	;;^DD(358.6,17,"DT")
	;;=2950908
	;;^DD(358.6,18,0)
	;;=MANUAL DATA ENTRY ROUTINE^K^^18;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,18,3)
	;;=Enter the code to be executed during manual data entry for this interface.  This is Standard MUMPS code.
	;;^DD(358.6,18,9)
	;;=@
	;;^DD(358.6,18,21,0)
	;;=^^7^7^2960123^
	;;^DD(358.6,18,21,1,0)
	;;=This field should only be completed for input package interfaces.  This
	;;^DD(358.6,18,21,2,0)
	;;=code will be executed to provide quick data entry for a user trying to
	;;^DD(358.6,18,21,3,0)
	;;=input data for a form.  It is expected that the output of this field will
	;;^DD(358.6,18,21,4,0)
	;;=be used to format the PXCA array prior to calling PCE to file the data
	;;^DD(358.6,18,21,5,0)
	;;=for the encounter.
	;;^DD(358.6,18,21,6,0)
	;;=Developers writing routines for this entry should provide a roll and
	;;^DD(358.6,18,21,7,0)
	;;=scroll interface for manual entry of items only on the form.
	;;^DD(358.6,18,"DT")
	;;=2960123
	;;^DD(358.6,19,0)
	;;=EXTERNAL DISPLAY VALUES^K^^19;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,19,3)
	;;=This is Standard MUMPS code.
	;;^DD(358.6,19,9)
	;;=@
	;;^DD(358.6,19,21,0)
	;;=^^5^5^2960214^
	;;^DD(358.6,19,21,1,0)
	;;=Executable code used to translate the internal value that is to
	;;^DD(358.6,19,21,2,0)
	;;=be passed to PCE into its external value for display purposes.  It
	;;^DD(358.6,19,21,3,0)
	;;=is used by the data validation routines to display the external
	;;^DD(358.6,19,21,4,0)
	;;=values and descriptions of the data to be passed, to the user
	;;^DD(358.6,19,21,5,0)
	;;=for verification.
	;;^DD(358.6,19,"DT")
	;;=2960214
	;;^DD(358.61,0)
	;;=DESCRIPTION SUB-FIELD^^.01^1
	;;^DD(358.61,0,"DT")
	;;=2921119
	;;^DD(358.61,0,"NM","DESCRIPTION")
	;;=
	;;^DD(358.61,0,"UP")
	;;=358.6
	;;^DD(358.61,.01,0)
	;;=/6^W^^0;1^Q
	;;^DD(358.61,.01,3)
	;;=Enter a description of the data being exchanged.
	;;^DD(358.61,.01,21,0)
	;;=^^1^1^2950719^^
	;;^DD(358.61,.01,21,1,0)
	;;=This should describe the data being exchanged b the package interface.
	;;^DD(358.61,.01,"DT")
	;;=2930210
	;;^DD(358.613,0)
	;;=ALLOWABLE QUALIFIERS SUB-FIELD^^.08^6
	;;^DD(358.613,0,"DT")
	;;=2950810
	;;^DD(358.613,0,"IX","B",358.613,.01)
	;;=
	;;^DD(358.613,0,"NM","ALLOWABLE QUALIFIERS")
	;;=
	;;^DD(358.613,0,"UP")
	;;=358.6
	;;^DD(358.613,.01,0)
	;;=ALLOWABLE QUALIFIERS^MV^^0;1^Q
	;;^DD(358.613,.01,1,0)
	;;=^.1
	;;^DD(358.613,.01,1,1,0)
	;;=358.613^B
	;;^DD(358.613,.01,1,1,1)
	;;=S ^IBE(358.6,DA(1),13,"B",$E(X,1,30),DA)=""
	;;^DD(358.613,.01,1,1,2)
	;;=K ^IBE(358.6,DA(1),13,"B",$E(X,1,30),DA)

IBDPI008
IBDPI008	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.613,.01,1,1,3)
	;;=Required Index for Variable Pointer
	;;^DD(358.613,.01,3)
	;;=Which qualifiers can apply to the data?
	;;^DD(358.613,.01,21,0)
	;;=^^1^1^2951018^^^^
	;;^DD(358.613,.01,21,1,0)
	;;=A qualifier that can be used by this package interface.
	;;^DD(358.613,.01,"DT")
	;;=2950426
	;;^DD(358.613,.01,"V",0)
	;;=^.12P^2^2
	;;^DD(358.613,.01,"V",1,0)
	;;=358.98^QUALIFIER^1^Q^n^n
	;;^DD(358.613,.01,"V",2,0)
	;;=358.99^DATA ELEMENT^2^D^n^n
	;;^DD(358.613,.03,0)
	;;=INDEPENDENT MAPPING INFO?^RS^0:NO;1:YES;^0;3^Q
	;;^DD(358.613,.03,3)
	;;=YES means that fields on the form associated with this qualifier will have its own rules for entering the data to the database.
	;;^DD(358.613,.03,21,0)
	;;=^^2^2^2950719^
	;;^DD(358.613,.03,21,1,0)
	;;=YES means that data can be mapped into the PCE Generic Device Interface
	;;^DD(358.613,.03,21,2,0)
	;;=based on the qualifier.
	;;^DD(358.613,.03,"DT")
	;;=2950426
	;;^DD(358.613,.04,0)
	;;=PCE GDI NODE^F^^0;4^K:$L(X)>30!($L(X)<1) X
	;;^DD(358.613,.04,3)
	;;=What node should the qualifier be placed on?
	;;^DD(358.613,.04,21,0)
	;;=^^1^1^2950719^
	;;^DD(358.613,.04,21,1,0)
	;;=The node where the data should be placed.
	;;^DD(358.613,.04,"DT")
	;;=2950710
	;;^DD(358.613,.05,0)
	;;=PCE GDI PIECE, VALUE^NJ2,0^^0;5^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.613,.05,3)
	;;=What piece should the primary value be located?
	;;^DD(358.613,.05,21,0)
	;;=^^1^1^2950719^
	;;^DD(358.613,.05,21,1,0)
	;;=The piece on the node where the value should be placed.
	;;^DD(358.613,.05,"DT")
	;;=2950426
	;;^DD(358.613,.07,0)
	;;=PCE GDI PIECE, HEADER^NJ2,0^^0;7^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.613,.07,3)
	;;=What piece should the header be located on?
	;;^DD(358.613,.07,21,0)
	;;=^^1^1^2950719^
	;;^DD(358.613,.07,21,1,0)
	;;=The piece on the node where the associated header should be placed.
	;;^DD(358.613,.07,"DT")
	;;=2950426
	;;^DD(358.613,.08,0)
	;;=PCE GDI PIECE, QUALIFIER^NJ2,0^^0;8^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.613,.08,3)
	;;=What piece should the qualifier be located on?
	;;^DD(358.613,.08,21,0)
	;;=^^1^1^2950719^
	;;^DD(358.613,.08,21,1,0)
	;;=The piece where the qualifier should go.
	;;^DD(358.613,.08,"DT")
	;;=2950426
	;;^DD(358.615,0)
	;;=DATA DESCRIPTION SUB-FIELD^^.05^5
	;;^DD(358.615,0,"DT")
	;;=2950417
	;;^DD(358.615,0,"ID","WRITE")
	;;=W "  PIECE="_$P(^(0),U,3)
	;;^DD(358.615,0,"IX","B",358.615,.01)
	;;=
	;;^DD(358.615,0,"IX","C",358.615,.03)
	;;=
	;;^DD(358.615,0,"NM","DATA DESCRIPTION")
	;;=
	;;^DD(358.615,0,"UP")
	;;=358.6
	;;^DD(358.615,.01,0)
	;;=DATA^MF^^0;1^K:$L(X)>30!($L(X)<1) X
	;;^DD(358.615,.01,1,0)
	;;=^.1
	;;^DD(358.615,.01,1,1,0)
	;;=358.615^B
	;;^DD(358.615,.01,1,1,1)
	;;=S ^IBE(358.6,DA(1),15,"B",$E(X,1,30),DA)=""
	;;^DD(358.615,.01,1,1,2)
	;;=K ^IBE(358.6,DA(1),15,"B",$E(X,1,30),DA)
	;;^DD(358.615,.01,3)
	;;=Enter a descriptive name for this data field, up to 30 characters.
	;;^DD(358.615,.01,21,0)
	;;=^^1^1^2950719^
	;;^DD(358.615,.01,21,1,0)
	;;=A descriptive name for the data.
	;;^DD(358.615,.01,"DT")
	;;=2950320
	;;^DD(358.615,.02,0)
	;;=MAXIMUM LENGTH^RNJ3,0^^0;2^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.615,.02,3)
	;;=What is the maximum length of this field?
	;;^DD(358.615,.02,21,0)
	;;=^^1^1^2950719^
	;;^DD(358.615,.02,21,1,0)
	;;=The maximum length of the data.
	;;^DD(358.615,.02,"DT")
	;;=2950320
	;;^DD(358.615,.03,0)
	;;=PIECE^NJ1,0X^^0;3^K:+X'=X!(X>8)!(X<2)!(X?.E1"."1N.N)!($D(^IBE(358.6,D0,15,"C",X))) X
	;;^DD(358.615,.03,1,0)
	;;=^.1
	;;^DD(358.615,.03,1,1,0)
	;;=358.615^C
	;;^DD(358.615,.03,1,1,1)
	;;=S ^IBE(358.6,DA(1),15,"C",$E(X,1,30),DA)=""
	;;^DD(358.615,.03,1,1,2)
	;;=K ^IBE(358.6,DA(1),15,"C",$E(X,1,30),DA)
	;;^DD(358.615,.03,1,1,"%D",0)
	;;=^^1^1^2950320^
	;;^DD(358.615,.03,1,1,"%D",1,0)
	;;=Indexes the field by piece.
	;;^DD(358.615,.03,1,1,"DT")
	;;=2950320
	;;^DD(358.615,.03,3)
	;;=In the returned record, which piece will this field be?
	;;^DD(358.615,.03,21,0)
	;;=^^1^1^2950719^
	;;^DD(358.615,.03,21,1,0)
	;;=The piece that the data will be returned as.
	;;^DD(358.615,.03,"DT")
	;;=2950407
	;;^DD(358.615,.04,0)
	;;=ANNEX NODE^F^^0;4^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.615,.04,3)
	;;=You can optionally specify the subscript to store the data. Use this when the entire record won't fit on one node.
	;;^DD(358.615,.04,21,0)
	;;=^^2^2^2950719^
	;;^DD(358.615,.04,21,1,0)
	;;=In case all the returned data can not be returned on a single node an
	;;^DD(358.615,.04,21,2,0)
	;;=annex node can be specified.
	;;^DD(358.615,.04,"DT")
	;;=2950320
	;;^DD(358.615,.05,0)
	;;=RECOMMENDED HEADER^F^^0;5^K:$L(X)>40!($L(X)<1) X

IBDPI009
IBDPI009	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.615,.05,3)
	;;=Answer must be 1-40 characters in length.
	;;^DD(358.615,.05,21,0)
	;;=^^1^1^2950719^^
	;;^DD(358.615,.05,21,1,0)
	;;=The recommended header will be used as the default when designing a form.
	;;^DD(358.615,.05,"DT")
	;;=2950417
	;;^DD(358.66,0)
	;;=PROTECTED LOCAL VARIABLES SUB-FIELD^^.01^1
	;;^DD(358.66,0,"DT")
	;;=2930608
	;;^DD(358.66,0,"IX","B",358.66,.01)
	;;=
	;;^DD(358.66,0,"NM","PROTECTED LOCAL VARIABLES")
	;;=
	;;^DD(358.66,0,"UP")
	;;=358.6
	;;^DD(358.66,.01,0)
	;;=PROTECTED LOCAL VARIABLES^MFX^^0;1^K:'$$VARIABLE^IBDFU5(X) X
	;;^DD(358.66,.01,1,0)
	;;=^.1
	;;^DD(358.66,.01,1,1,0)
	;;=358.66^B
	;;^DD(358.66,.01,1,1,1)
	;;=S ^IBE(358.6,DA(1),6,"B",$E(X,1,30),DA)=""
	;;^DD(358.66,.01,1,1,2)
	;;=K ^IBE(358.6,DA(1),6,"B",$E(X,1,30),DA)
	;;^DD(358.66,.01,3)
	;;=Enter variables that should be NEWED before the entry action or calling the interface.
	;;^DD(358.66,.01,21,0)
	;;=^^3^3^2950426^^
	;;^DD(358.66,.01,21,1,0)
	;;= 
	;;^DD(358.66,.01,21,2,0)
	;;=A list of variables that should be newed before the entry action or
	;;^DD(358.66,.01,21,3,0)
	;;=calling the interface.
	;;^DD(358.66,.01,"DT")
	;;=2930608
	;;^DD(358.67,0)
	;;=REQUIRED LOCAL VARIABLES SUB-FIELD^^.01^1
	;;^DD(358.67,0,"DT")
	;;=2930521
	;;^DD(358.67,0,"IX","B",358.67,.01)
	;;=
	;;^DD(358.67,0,"NM","REQUIRED LOCAL VARIABLES")
	;;=
	;;^DD(358.67,0,"UP")
	;;=358.6
	;;^DD(358.67,.01,0)
	;;=REQUIRED LOCAL VARIABLE^MFX^^0;1^K:'$$VARIABLE^IBDFU5(X) X
	;;^DD(358.67,.01,1,0)
	;;=^.1
	;;^DD(358.67,.01,1,1,0)
	;;=358.67^B
	;;^DD(358.67,.01,1,1,1)
	;;=S ^IBE(358.6,DA(1),7,"B",$E(X,1,30),DA)=""
	;;^DD(358.67,.01,1,1,2)
	;;=K ^IBE(358.6,DA(1),7,"B",$E(X,1,30),DA)
	;;^DD(358.67,.01,3)
	;;=Enter any variables that must exist before the Package Interface routine is called.
	;;^DD(358.67,.01,21,0)
	;;=^^4^4^2930528^
	;;^DD(358.67,.01,21,1,0)
	;;= 
	;;^DD(358.67,.01,21,2,0)
	;;=A variable that is required input to the interface routine. The interface
	;;^DD(358.67,.01,21,3,0)
	;;=routine will not be called if all of the required variables are not
	;;^DD(358.67,.01,21,4,0)
	;;=defined.
	;;^DD(358.67,.01,"DT")
	;;=2930521

IBDPI00A
IBDPI00A	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6)
	;;=^IBE(358.6,
	;;^UTILITY(U,$J,358.6,0)
	;;=IMP/EXP PACKAGE INTERFACE^358.6I^87^87
	;;^UTILITY(U,$J,358.6,1,0)
	;;=DPT PATIENT'S NAME^VADPT^IBDFN^REGISTRATION^1^2^1^1^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,1,1,0)
	;;=^^2^2^2930212^^^^
	;;^UTILITY(U,$J,358.6,1,1,1,0)
	;;= 
	;;^UTILITY(U,$J,358.6,1,1,2,0)
	;;=Patient's Name
	;;^UTILITY(U,$J,358.6,1,2)
	;;=Patient's Name^30^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,1,3)
	;;=PATIENT NAME
	;;^UTILITY(U,$J,358.6,1,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,1,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,1,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,2,0)
	;;=DPT PATIENT'S SEX^VADPT^IBDFN^REGISTRATION^1^2^2^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,2,1,0)
	;;=^^1^1^2931015^^^^
	;;^UTILITY(U,$J,358.6,2,1,1,0)
	;;=Patient's sex, either 'MALE' or 'FEMALE', or "M" or "F".
	;;^UTILITY(U,$J,358.6,2,2)
	;;=Patient's Sex^6^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,2,3)
	;;=SEX
	;;^UTILITY(U,$J,358.6,2,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,2,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,2,15,0)
	;;=^357.615I^2^2
	;;^UTILITY(U,$J,358.6,2,15,2,0)
	;;=Patient's Sex (Code)^1^2^
	;;^UTILITY(U,$J,358.6,3,0)
	;;=DPT PATIENT'S DOB/AGE^VADPT^IBDFN^REGISTRATION^1^2^2^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,3,1,0)
	;;=^^2^2^2951023^
	;;^UTILITY(U,$J,358.6,3,1,1,0)
	;;=Patient's DOB in MM DD, YYYY format
	;;^UTILITY(U,$J,358.6,3,1,2,0)
	;;=Patient's age in years.
	;;^UTILITY(U,$J,358.6,3,2)
	;;=Patient's DOB^12^Patient's Age^3^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,3,3)
	;;=PATIENT DOB AGE PIMS
	;;^UTILITY(U,$J,358.6,3,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,3,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,3,15,0)
	;;=^357.615I^2^2
	;;^UTILITY(U,$J,358.6,3,15,2,0)
	;;=Patient's Age^3^2^
	;;^UTILITY(U,$J,358.6,4,0)
	;;=GMRA PATIENT'S ALLERGIES^ALLERGY^IBDFN2^GEN. MED. REC. - ALLERGIES^1^2^4^1^1^^^1^^^1^^
	;;^UTILITY(U,$J,358.6,4,1,0)
	;;=^^7^7^2951023^
	;;^UTILITY(U,$J,358.6,4,1,1,0)
	;;=Used to display a list of the patient's allergies, both true and adverse
	;;^UTILITY(U,$J,358.6,4,1,2,0)
	;;=reactions, verified and unverified. Data returned:
	;;^UTILITY(U,$J,358.6,4,1,3,0)
	;;=  allergy name
	;;^UTILITY(U,$J,358.6,4,1,4,0)
	;;=  type of allergen
	;;^UTILITY(U,$J,358.6,4,1,5,0)
	;;=  type (code only - F=food, D=drug,O=other)
	;;^UTILITY(U,$J,358.6,4,1,6,0)
	;;=  verified? YES/NO
	;;^UTILITY(U,$J,358.6,4,1,7,0)
	;;=  true allergy? YES/NO
	;;^UTILITY(U,$J,358.6,4,2)
	;;=ALLERGY NAME^30^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,4,3)
	;;=ALLERGIES ALLERGY PATIENT
	;;^UTILITY(U,$J,358.6,4,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,4,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,4,15,0)
	;;=^357.615I^5^5
	;;^UTILITY(U,$J,358.6,4,15,2,0)
	;;=TYPE OF ALLERGEN^5^2^
	;;^UTILITY(U,$J,358.6,4,15,3,0)
	;;=TYPE (F=FOOD,D=DRUG,O=OTHER)^1^3^
	;;^UTILITY(U,$J,358.6,4,15,4,0)
	;;=VERIFIED? (YES/NO)^3^4^
	;;^UTILITY(U,$J,358.6,4,15,5,0)
	;;=TRUE ALLERGY? (YES/NO)^3^5^
	;;^UTILITY(U,$J,358.6,5,0)
	;;=DG SELECT CPT PROCEDURE CODES^CPT^IBDFN4^SCHEDULING^^3^2^^1^^^1^6^^^
	;;^UTILITY(U,$J,358.6,5,1,0)
	;;=^^2^2^2960205^^^^
	;;^UTILITY(U,$J,358.6,5,1,1,0)
	;;=Allows for the selection of CPT codes from the CPT file. Only active codes
	;;^UTILITY(U,$J,358.6,5,1,2,0)
	;;=are allowed.
	;;^UTILITY(U,$J,358.6,5,2)
	;;=CODE^5^^^^^^^^^^^^^^CODE^1^1
	;;^UTILITY(U,$J,358.6,5,3)
	;;=SELECT CPT PROCEDURE CODES
	;;^UTILITY(U,$J,358.6,5,9)
	;;=S X=$$CPT^IBDFN12(X)
	;;^UTILITY(U,$J,358.6,5,11)
	;;=D TESTCPT^IBDFN7
	;;^UTILITY(U,$J,358.6,5,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,358.6,5,15,2,0)
	;;=SHORT NAME^28^2^^PROCEDURE
	;;^UTILITY(U,$J,358.6,5,15,3,0)
	;;=DESCRIPTION^161^3^^PROCEDURE
	;;^UTILITY(U,$J,358.6,5,16)
	;;=o^1^Procedure Narrative^^r^2^CPT CODE
	;;^UTILITY(U,$J,358.6,6,0)
	;;=INPUT PROCEDURE CODE (CPT4)^^^PATIENT CARE ENCOUNTER^^1^4^^1^0^^1^^^^SMP^
	;;^UTILITY(U,$J,358.6,6,1,0)
	;;=^^1^1^2960205^^^^
	;;^UTILITY(U,$J,358.6,6,1,1,0)
	;;=Used for inputting CPT coded procedures performed on the patient.
	;;^UTILITY(U,$J,358.6,6,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,6,3)
	;;=CPT4 PROCEDURE CODES
	;;^UTILITY(U,$J,358.6,6,9)
	;;=D INPUTCPT^IBDFN8(.X)
	;;^UTILITY(U,$J,358.6,6,10)
	;;=Enter an active CPT procedure code.
	;;^UTILITY(U,$J,358.6,6,11)
	;;=D TESTCPT^IBDFN7
	;;^UTILITY(U,$J,358.6,6,12)
	;;=PROCEDURE^1^6^7^3^^^
	;;^UTILITY(U,$J,358.6,6,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,358.6,6,13,1,0)
	;;=1;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,6,13,2,0)
	;;=2;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,6,14)
	;;=S Y=$$DSPLYCPT^IBDFN9(Y)
	;;^UTILITY(U,$J,358.6,6,16)
	;;=^^^^^
	;;^UTILITY(U,$J,358.6,6,17)
	;;=D SLCTCPT^IBDFN12(.X)

IBDPI00B
IBDPI00B	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,6,18)
	;;=D LIST^IBDFDE2(.IBDSEL,.IBDF,"CPT Procedure Code")
	;;^UTILITY(U,$J,358.6,6,19)
	;;=D CPT^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,7,0)
	;;=DPT PATIENT'S SC CONDITIONS^ELIG^IBDFN^REGISTRATION^1^2^4^1^1^^^1^^^1^
	;;^UTILITY(U,$J,358.6,7,1,0)
	;;=^^7^7^2951023^
	;;^UTILITY(U,$J,358.6,7,1,1,0)
	;;=Used to output a list of the patients service connected conditions,
	;;^UTILITY(U,$J,358.6,7,1,2,0)
	;;=along with the percentage ratings. Data returned:
	;;^UTILITY(U,$J,358.6,7,1,3,0)
	;;=  disability name
	;;^UTILITY(U,$J,358.6,7,1,4,0)
	;;=  disability percentage
	;;^UTILITY(U,$J,358.6,7,1,5,0)
	;;=  disability percentage with the label "%"
	;;^UTILITY(U,$J,358.6,7,1,6,0)
	;;=  disability percentage with the label "%SC"
	;;^UTILITY(U,$J,358.6,7,1,7,0)
	;;=  disability percentage with the label "% - SERVICE CONNECTED"
	;;^UTILITY(U,$J,358.6,7,2)
	;;=Disability Name^45^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,7,3)
	;;=SERVICE CONNECTED CONDITIONS PATIENT MAS PIMS DISABILITY DISABILITIES
	;;^UTILITY(U,$J,358.6,7,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,7,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,7,15,0)
	;;=^357.615I^5^5
	;;^UTILITY(U,$J,358.6,7,15,2,0)
	;;=Disability % (number only)^3^2^
	;;^UTILITY(U,$J,358.6,7,15,3,0)
	;;=Disability % (label=%)^4^3^
	;;^UTILITY(U,$J,358.6,7,15,4,0)
	;;=Disabilty % (label=%SC)^6^4^
	;;^UTILITY(U,$J,358.6,7,15,5,0)
	;;=Dis.%_"% - SERVICE CONNECTED"^24^5^
	;;^UTILITY(U,$J,358.6,8,0)
	;;=DG SELECT ICD-9 DIAGNOSIS CODES^ICD9^IBDFN4^SCHEDULING^^3^2^^1^^^1^9^^^^0^0
	;;^UTILITY(U,$J,358.6,8,1,0)
	;;=^^2^2^2960403^^^^
	;;^UTILITY(U,$J,358.6,8,1,1,0)
	;;=Allows the user to select ICD-9 diagnosis codes from the ICD Diagnosis
	;;^UTILITY(U,$J,358.6,8,1,2,0)
	;;=file. Allows only active codes to be selected.
	;;^UTILITY(U,$J,358.6,8,2)
	;;=CODE^7^^^^^^^^^^^^^^^1^1
	;;^UTILITY(U,$J,358.6,8,3)
	;;=SELECT ICD9 ICD-9 CODES DIAGNOSIS
	;;^UTILITY(U,$J,358.6,8,11)
	;;=D TESTICD^IBDFN7
	;;^UTILITY(U,$J,358.6,8,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,358.6,8,13,1,0)
	;;=1;IBD(358.98,
	;;^UTILITY(U,$J,358.6,8,13,2,0)
	;;=2;IBD(358.98,
	;;^UTILITY(U,$J,358.6,8,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,358.6,8,15,2,0)
	;;=DIAGNOSIS^30^2^^DIAGNOSIS
	;;^UTILITY(U,$J,358.6,8,15,3,0)
	;;=DESCRIPTION^200^3^^DIAGNOSIS
	;;^UTILITY(U,$J,358.6,8,16)
	;;=o^1^Diagnosis^^r^3^ICD-9 Code
	;;^UTILITY(U,$J,358.6,9,0)
	;;=INPUT DIAGNOSIS CODE (ICD9)^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP^^^1
	;;^UTILITY(U,$J,358.6,9,1,0)
	;;=^^1^1^2950828^^
	;;^UTILITY(U,$J,358.6,9,1,1,0)
	;;=Used for inputting ICD9 diagnosis codes.
	;;^UTILITY(U,$J,358.6,9,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,9,3)
	;;=INPUT ICD9 ICD-9 DIAGNOSIS CODES
	;;^UTILITY(U,$J,358.6,9,9)
	;;=D INPUTICD^IBDFN8(.X)
	;;^UTILITY(U,$J,358.6,9,10)
	;;=Enter an active ICD9 diagnosis code.
	;;^UTILITY(U,$J,358.6,9,11)
	;;=D TESTICD^IBDFN7
	;;^UTILITY(U,$J,358.6,9,12)
	;;=DIAGNOSIS/PROBLEM^1^13^14^2^^^
	;;^UTILITY(U,$J,358.6,9,13,0)
	;;=^357.613V^10^10
	;;^UTILITY(U,$J,358.6,9,13,1,0)
	;;=1;IBD(358.98,^^1^^^^^2^
	;;^UTILITY(U,$J,358.6,9,13,2,0)
	;;=2;IBD(358.98,^^1^^^^^2^
	;;^UTILITY(U,$J,358.6,9,13,3,0)
	;;=3;IBD(358.98,^^1^^^^^9^
	;;^UTILITY(U,$J,358.6,9,13,4,0)
	;;=3;IBE(358.99,^^0^^^^^^
	;;^UTILITY(U,$J,358.6,9,13,5,0)
	;;=4;IBD(358.98,^^1^^^^^10
	;;^UTILITY(U,$J,358.6,9,13,6,0)
	;;=5;IBD(358.98,^^1^^^^^11
	;;^UTILITY(U,$J,358.6,9,13,7,0)
	;;=6;IBD(358.98,^^1^^^^^12
	;;^UTILITY(U,$J,358.6,9,13,8,0)
	;;=7;IBD(358.98,^^1^^^^^5
	;;^UTILITY(U,$J,358.6,9,13,9,0)
	;;=8;IBD(358.98,^^1^^^^^6
	;;^UTILITY(U,$J,358.6,9,13,10,0)
	;;=9;IBD(358.98,^^1^^^^^6
	;;^UTILITY(U,$J,358.6,9,14)
	;;=S Y=$$DSPLYICD^IBDFN9(Y)
	;;^UTILITY(U,$J,358.6,9,15,0)
	;;=^357.615I^0^0
	;;^UTILITY(U,$J,358.6,9,16)
	;;=^^^^^^
	;;^UTILITY(U,$J,358.6,9,17)
	;;=D SLCTDX^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,9,18)
	;;=D LIST^IBDFDE2(.IBDSEL,.IBDF,"Diagnosis Code")
	;;^UTILITY(U,$J,358.6,9,19)
	;;=D DX^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,10,0)
	;;=DPT PATIENT'S PID^VADPT^IBDFN^REGISTRATION^1^2^1^1^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,10,1,0)
	;;=^^1^1^2931015^^
	;;^UTILITY(U,$J,358.6,10,1,1,0)
	;;=Used to display the patient identifier.
	;;^UTILITY(U,$J,358.6,10,2)
	;;=PATIENT IDENTIFIER^15^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,10,3)
	;;=PATIENT IDENTIFIER PID
	;;^UTILITY(U,$J,358.6,10,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,10,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,10,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,11,0)
	;;=IBDF UTILITY FOR SELECTING BLANKS^NULL^IBDFN4^AUTOMATED INFO COLLECTION SYS^^3^2^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,11,1,0)
	;;=^^2^2^2930414^^^^

IBDPI00C
IBDPI00C	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,11,1,1,0)
	;;=No data is returned, so this interface allows the user to create a
	;;^UTILITY(U,$J,358.6,11,1,2,0)
	;;=selection list with what ever text he desires.
	;;^UTILITY(U,$J,358.6,11,2)
	;;=Enter Anything!^0^^^^^^^^^^^^^^^1^1
	;;^UTILITY(U,$J,358.6,11,3)
	;;=UTILITY SELECT NULL BLANKS
	;;^UTILITY(U,$J,358.6,11,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,12,0)
	;;=DPT PATIENT ADDRESS LINES^ADDRESS^IBDFN6^REGISTRATION^1^2^3^1^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,12,1,0)
	;;=^^1^1^2950117^^
	;;^UTILITY(U,$J,358.6,12,1,1,0)
	;;=Outputs the patient's address, up to 4 lines of 45 characters each.
	;;^UTILITY(U,$J,358.6,12,2)
	;;=ADDRESS LINE^45^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,12,3)
	;;=PATIENT ADDRESS
	;;^UTILITY(U,$J,358.6,12,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,12,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,12,15,0)
	;;=^357.615I^1^1
	;;^UTILITY(U,$J,358.6,13,0)
	;;=DPT PATIENT'S TELEPHONE NUMBER^ADDRESS^IBDFN6^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,13,1,0)
	;;=^^1^1^2930217^^
	;;^UTILITY(U,$J,358.6,13,1,1,0)
	;;=Used to display the patient's telephone number.
	;;^UTILITY(U,$J,358.6,13,2)
	;;=TELEPHONE NUMBER^20^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,13,3)
	;;=PATIENT TELEPHONE
	;;^UTILITY(U,$J,358.6,13,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,13,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,13,15,0)
	;;=^357.615I^1^1
	;;^UTILITY(U,$J,358.6,13,15,1,0)
	;;=TELEPHONE NUMBER^20^^
	;;^UTILITY(U,$J,358.6,14,0)
	;;=DPT IS PATIENT INSURED?^INSURED^IBDFN6^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,14,1,0)
	;;=^^2^2^2931130^^^^
	;;^UTILITY(U,$J,358.6,14,1,1,0)
	;;=Prints 'YES','NO', or 'UNKNOWN' based on the field COVERED BY INSURANCE?
	;;^UTILITY(U,$J,358.6,14,1,2,0)
	;;=from the patient file.
	;;^UTILITY(U,$J,358.6,14,2)
	;;=Covered by Ins?^7^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,14,3)
	;;=PATIENT INSURANCE
	;;^UTILITY(U,$J,358.6,14,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,14,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,14,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,15,0)
	;;=DPT PATIENT'S INSURANCE POLICIES^INSURANC^IBDFN6^REGISTRATION^1^2^4^1^1^^^1^^^1^^
	;;^UTILITY(U,$J,358.6,15,1,0)
	;;=^^10^10^2931201^
	;;^UTILITY(U,$J,358.6,15,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns
	;;^UTILITY(U,$J,358.6,15,1,2,0)
	;;=active insurance policies and policies that do not reimburse (Medicare).
	;;^UTILITY(U,$J,358.6,15,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,358.6,15,1,4,0)
	;;=    insurance company
	;;^UTILITY(U,$J,358.6,15,1,5,0)
	;;=    policy number
	;;^UTILITY(U,$J,358.6,15,1,6,0)
	;;=    group name
	;;^UTILITY(U,$J,358.6,15,1,7,0)
	;;=    policy holder's relationship to the patient
	;;^UTILITY(U,$J,358.6,15,1,8,0)
	;;=    policy expiration date
	;;^UTILITY(U,$J,358.6,15,1,9,0)
	;;=    group number
	;;^UTILITY(U,$J,358.6,15,1,10,0)
	;;=    name of insured
	;;^UTILITY(U,$J,358.6,15,2)
	;;=INSURANCE COMPANY^30^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,15,3)
	;;=PATIENT INSURANCE PIMS
	;;^UTILITY(U,$J,358.6,15,4)
	;;=S ACT=2
	;;^UTILITY(U,$J,358.6,15,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,358.6,15,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,358.6,15,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,15,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,15,15,0)
	;;=^357.615I^7^7
	;;^UTILITY(U,$J,358.6,15,15,2,0)
	;;=EXPIRATION DATE^12^2^
	;;^UTILITY(U,$J,358.6,15,15,3,0)
	;;=POLICY NUMBER^20^3^
	;;^UTILITY(U,$J,358.6,15,15,4,0)
	;;=GROUP NUMBER^17^4^
	;;^UTILITY(U,$J,358.6,15,15,5,0)
	;;=GROUP NAME^20^5^
	;;^UTILITY(U,$J,358.6,15,15,6,0)
	;;=NAME OF INSURED^30^6^
	;;^UTILITY(U,$J,358.6,15,15,7,0)
	;;=HOLDER'S RELATIONSHIP^9^7^
	;;^UTILITY(U,$J,358.6,16,0)
	;;=IBDF UTILITY FOR BLANK LINES^BLANKS^IBDFN^AUTOMATED INFO COLLECTION SYS^0^2^5^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,16,1,0)
	;;=^^2^2^2930408^^
	;;^UTILITY(U,$J,358.6,16,1,1,0)
	;;=No data is returned by this interface - it's purpose is to print blank
	;;^UTILITY(U,$J,358.6,16,1,2,0)
	;;=lines to the form for data entry.
	;;^UTILITY(U,$J,358.6,16,2)
	;;=^0^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,16,3)
	;;=UTILITY BLANKS LINES
	;;^UTILITY(U,$J,358.6,16,15,0)
	;;=^357.615I^0^0
	;;^UTILITY(U,$J,358.6,17,0)
	;;=IBDF UTILITY FOR LABELS ONLY^LABELS^IBDFN^AUTOMATED INFO COLLECTION SYS^0^2^2^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,17,1,0)
	;;=^^2^2^2930210^^
	;;^UTILITY(U,$J,358.6,17,1,1,0)
	;;=This interface returns no data. Its purpose is to print labels without
	;;^UTILITY(U,$J,358.6,17,1,2,0)
	;;=data to the form.
	;;^UTILITY(U,$J,358.6,17,2)
	;;=Underscore Only^0^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,17,3)
	;;=UTILITY BLANKS LABELS

IBDPI00D
IBDPI00D	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,17,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,18,0)
	;;=GMP PATIENT ACTIVE PROBLEMS^ACTIVE^GMPLENFM^PROBLEM LIST^1^2^4^1^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,18,1,0)
	;;=^^8^8^2960207^^^^
	;;^UTILITY(U,$J,358.6,18,1,1,0)
	;;=For displaying the patient's active problems. Returns a list.
	;;^UTILITY(U,$J,358.6,18,1,2,0)
	;;=Data returned:
	;;^UTILITY(U,$J,358.6,18,1,3,0)
	;;=  problem text
	;;^UTILITY(U,$J,358.6,18,1,4,0)
	;;=  corresponding ICD-9 code (if there is a mapping)
	;;^UTILITY(U,$J,358.6,18,1,5,0)
	;;=  date of onset (MM/DD/YY)
	;;^UTILITY(U,$J,358.6,18,1,6,0)
	;;=  SC indicator (SC/NSC/"")
	;;^UTILITY(U,$J,358.6,18,1,7,0)
	;;=  special exposure (A/I/P/"")
	;;^UTILITY(U,$J,358.6,18,1,8,0)
	;;=  special exposure (returns the full text of the type of exposure)
	;;^UTILITY(U,$J,358.6,18,2)
	;;=PROBLEM TEXT^80^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,18,3)
	;;=ACTIVE PROBLEMS LIST PATIENT
	;;^UTILITY(U,$J,358.6,18,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,18,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,18,15,0)
	;;=^357.615I^7^6
	;;^UTILITY(U,$J,358.6,18,15,2,0)
	;;=CORRESPONDNG ICD-9 Dx CODE^7^2^
	;;^UTILITY(U,$J,358.6,18,15,3,0)
	;;=DATE OF ONSET (MM/DD/YY)^8^3^
	;;^UTILITY(U,$J,358.6,18,15,4,0)
	;;=SC INDICATOR (SC/NSC/"")^3^4^
	;;^UTILITY(U,$J,358.6,18,15,5,0)
	;;=SC INDICATOR (Y/N/"")^1^5^
	;;^UTILITY(U,$J,358.6,18,15,6,0)
	;;=SPECIAL EXPOSURE (A/I/P/"")^1^6^
	;;^UTILITY(U,$J,358.6,18,15,7,0)
	;;=SPECIAL EXPOSURE (FULL TEXT)^12^7^
	;;^UTILITY(U,$J,358.6,19,0)
	;;=DPT PATIENT'S EMPLOYER NAME^EMPLOYER^IBDFN2^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,19,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,358.6,19,1,1,0)
	;;=For displaying the patient's employer.
	;;^UTILITY(U,$J,358.6,19,2)
	;;=employer name^45^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,19,3)
	;;=PATIENT EMPLOYER
	;;^UTILITY(U,$J,358.6,19,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,19,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,19,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,20,0)
	;;=DPT PATIENT'S EMPLOYER ADDRESS LINES^EMPLOYER^IBDFN2^REGISTRATION^1^2^3^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,20,1,0)
	;;=^^3^3^2930217^
	;;^UTILITY(U,$J,358.6,20,1,1,0)
	;;=For displaying the patient's employer's address. The address is in the form
	;;^UTILITY(U,$J,358.6,20,1,2,0)
	;;=of a list of address lines each up to 30 characters long. The number of lines
	;;^UTILITY(U,$J,358.6,20,1,3,0)
	;;=is variable, up to 4.
	;;^UTILITY(U,$J,358.6,20,2)
	;;=ADDRESS LINE^45^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,20,3)
	;;=PATIENT EMPLOYER ADDRESS
	;;^UTILITY(U,$J,358.6,20,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,20,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,20,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,21,0)
	;;=DPT PATIENT'S EMPLOYER TELEPHONE^EMPLOYER^IBDFN2^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,21,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,358.6,21,1,1,0)
	;;=For displaying the patient's employer's telephone number.
	;;^UTILITY(U,$J,358.6,21,2)
	;;=telephone number^20^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,21,3)
	;;=PATIENT EMPLOYER TELEPHONE
	;;^UTILITY(U,$J,358.6,21,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,21,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,21,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,22,0)
	;;=DPT SPOUSE'S EMPLOYER NAME^SPSEMPLR^IBDFN2^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,22,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,358.6,22,1,1,0)
	;;=For displaying the spouse's employer.
	;;^UTILITY(U,$J,358.6,22,2)
	;;=employer name^45^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,22,3)
	;;=PATIENT SPOUSE EMPLOYER
	;;^UTILITY(U,$J,358.6,22,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,22,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,22,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,23,0)
	;;=DPT SPOUSE'S EMPLOYER ADDRESS LINES^SPSEMPLR^IBDFN2^REGISTRATION^1^2^4^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,23,1,0)
	;;=^^3^3^2951023^
	;;^UTILITY(U,$J,358.6,23,1,1,0)
	;;=For displaying the patient's spouse's employer's address. The address is in the form
	;;^UTILITY(U,$J,358.6,23,1,2,0)
	;;=of a list of address lines each up to 30 characters long. The number of line
	;;^UTILITY(U,$J,358.6,23,1,3,0)
	;;=is variable, up to 4.
	;;^UTILITY(U,$J,358.6,23,2)
	;;=address line^45^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,23,3)
	;;=PATIENT SPOUSE EMPLOYER ADDRESS
	;;^UTILITY(U,$J,358.6,23,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,23,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,23,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,24,0)
	;;=DPT SPOUSE'S EMPLOYER TELEPHONE^SPSEMPLR^IBDFN2^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,24,1,0)
	;;=^^1^1^2930217^

IBDPI00E
IBDPI00E	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,24,1,1,0)
	;;=For displaying the telephone number of the spouse's employer.
	;;^UTILITY(U,$J,358.6,24,2)
	;;=telephone number^20^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,24,3)
	;;=PATIENT SPOUSE EMPLOYER TELEPHONE WIFE HUSBAND
	;;^UTILITY(U,$J,358.6,24,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,24,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,24,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,25,0)
	;;=DPT PATIENT'S MARITAL STATUS^VADPT^IBDFN^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,25,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,358.6,25,1,1,0)
	;;=For displaying the patient's marital status.
	;;^UTILITY(U,$J,358.6,25,2)
	;;=MARITAL STATUS^15^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,25,3)
	;;=PATIENT MARITAL STATUS
	;;^UTILITY(U,$J,358.6,25,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,25,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,25,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,26,0)
	;;=DPT PATIENT'S EMPLOYMENT STATUS^EMPLMNT^IBDFN^REGISTRATION^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,26,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,358.6,26,1,1,0)
	;;=For displaying the employment status of the patient.
	;;^UTILITY(U,$J,358.6,26,2)
	;;=EMPLOYMENT STATUS^20^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,26,3)
	;;=PATIENT EMPLOYER EMPLOYMENT
	;;^UTILITY(U,$J,358.6,26,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,26,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,26,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,27,0)
	;;=SD CLINIC NAME^CLINIC^IBDFN1^SCHEDULING^1^2^1^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,27,1,0)
	;;=^^2^2^2930616^^
	;;^UTILITY(U,$J,358.6,27,1,1,0)
	;;= 
	;;^UTILITY(U,$J,358.6,27,1,2,0)
	;;=Outputs the name of the clinic.
	;;^UTILITY(U,$J,358.6,27,2)
	;;=CLINIC NAME^30^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,27,3)
	;;=CLINIC SCHEDULING
	;;^UTILITY(U,$J,358.6,27,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,27,7,1,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,358.6,27,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,28,0)
	;;=SD APPOINTMENT DATE/TIME^APPT^IBDFN2^SCHEDULING^1^2^2^^1^^^1^^^0^^
	;;^UTILITY(U,$J,358.6,28,1,0)
	;;=^^2^2^2950413^^^^
	;;^UTILITY(U,$J,358.6,28,1,1,0)
	;;= 
	;;^UTILITY(U,$J,358.6,28,1,2,0)
	;;=Returns the date/time of the appointment.
	;;^UTILITY(U,$J,358.6,28,2)
	;;=APPT. DATE/TIME^18^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,28,3)
	;;=APPOINTMENT DATE TIME SCHEDULING
	;;^UTILITY(U,$J,358.6,28,7,0)
	;;=^357.67^3^3
	;;^UTILITY(U,$J,358.6,28,7,1,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,358.6,28,7,2,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,28,7,3,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,358.6,28,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,358.6,28,15,2,0)
	;;=APPT. DATE (MMM DD,YYYY)^12^2^
	;;^UTILITY(U,$J,358.6,28,15,3,0)
	;;=APPT. TIME (HH:MM)^5^3^
	;;^UTILITY(U,$J,358.6,29,0)
	;;=DPT PATIENT ELIGIBILITY DATA^ELIG^IBDFN^REGISTRATION^1^2^2^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,29,1,0)
	;;=^^8^8^2931015^^^^
	;;^UTILITY(U,$J,358.6,29,1,1,0)
	;;=Returns patient eligibility data. Data returned is:
	;;^UTILITY(U,$J,358.6,29,1,2,0)
	;;=   eligibility code in external form
	;;^UTILITY(U,$J,358.6,29,1,3,0)
	;;=   period of service
	;;^UTILITY(U,$J,358.6,29,1,4,0)
	;;=   service connected? YES/NO
	;;^UTILITY(U,$J,358.6,29,1,5,0)
	;;=   veteran? YES/NO
	;;^UTILITY(U,$J,358.6,29,1,6,0)
	;;=   eligible for care? YES/NO
	;;^UTILITY(U,$J,358.6,29,1,7,0)
	;;=   type of patient
	;;^UTILITY(U,$J,358.6,29,1,8,0)
	;;=   SC%
	;;^UTILITY(U,$J,358.6,29,2)
	;;=ELIGIBILTY CODE/EXTERNAL FORM^30^^^^^^^^^TYPE OF PATIENT^^^^^^1
	;;^UTILITY(U,$J,358.6,29,3)
	;;=ELIGIBLE ELIGIBILITY PATIENT PERIOD SERVICE CONNECTED VETERAN STATUS
	;;^UTILITY(U,$J,358.6,29,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,29,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,29,15,0)
	;;=^357.615I^7^7
	;;^UTILITY(U,$J,358.6,29,15,2,0)
	;;=PERIOD OF SERVICE^25^2^
	;;^UTILITY(U,$J,358.6,29,15,3,0)
	;;=SERVICE CONNECTED?^3^3^
	;;^UTILITY(U,$J,358.6,29,15,4,0)
	;;=VETERAN?^3^4^
	;;^UTILITY(U,$J,358.6,29,15,5,0)
	;;=ELIGIBLE FOR CARE?^3^5^
	;;^UTILITY(U,$J,358.6,29,15,6,0)
	;;=TYPE OF PATIENT^20^6^
	;;^UTILITY(U,$J,358.6,29,15,7,0)
	;;=SC %^3^7^
	;;^UTILITY(U,$J,358.6,30,0)
	;;=DPT SERVICE HISTORY RELATED DATA^ELIG^IBDFN^REGISTRATION^1^2^2^0^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,30,1,0)
	;;=^^7^7^2931015^^^^
	;;^UTILITY(U,$J,358.6,30,1,1,0)
	;;=For displaying service history data. Data returned:
	;;^UTILITY(U,$J,358.6,30,1,2,0)
	;;=  Vietnam service? YES/NO
	;;^UTILITY(U,$J,358.6,30,1,3,0)
	;;=  Agent Orange exposure? YES/NO
	;;^UTILITY(U,$J,358.6,30,1,4,0)
	;;=  radiation exposure? YES/NO
	;;^UTILITY(U,$J,358.6,30,1,5,0)
	;;=  combat service? YES/NO
	;;^UTILITY(U,$J,358.6,30,1,6,0)
	;;=  POW? YES/NO
	;;^UTILITY(U,$J,358.6,30,1,7,0)
	;;=  environmental contaminants exposure? YES/NO

IBDPI00F
IBDPI00F	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,30,2)
	;;=VIETNAM SERVICE?^3^^^^^^^^^ENVIRONMENTAL CONTAMINANTS?^^^^^^1
	;;^UTILITY(U,$J,358.6,30,3)
	;;=PATIENT MAS VIETNAM SERVICE AGENT ORANGE RADIATION COMBAT POW HISTORY ENVIRONMENTAL CONTAMINANT PERSIAN
	;;^UTILITY(U,$J,358.6,30,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,30,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,30,15,0)
	;;=^357.615I^6^6
	;;^UTILITY(U,$J,358.6,30,15,2,0)
	;;=AGENT ORANGE EXPOSURE?^3^2^
	;;^UTILITY(U,$J,358.6,30,15,3,0)
	;;=RADIATION EXPOSURE?^3^3^
	;;^UTILITY(U,$J,358.6,30,15,4,0)
	;;=POW?^3^4^
	;;^UTILITY(U,$J,358.6,30,15,5,0)
	;;=COMBAT SERVICE?^3^5^
	;;^UTILITY(U,$J,358.6,30,15,6,0)
	;;=ENVIRONMENTAL CONTAMINANTS?^3^6^
	;;^UTILITY(U,$J,358.6,31,0)
	;;=DPT PATIENT'S MEANS TEST DATA^MT^IBDFN2^REGISTRATION^1^2^2^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,31,1,0)
	;;=^^5^5^2931015^^^
	;;^UTILITY(U,$J,358.6,31,1,1,0)
	;;=Returns the patient's current means test category and the date of the most
	;;^UTILITY(U,$J,358.6,31,1,2,0)
	;;=recent means test. Data returned:
	;;^UTILITY(U,$J,358.6,31,1,3,0)
	;;=  means test category
	;;^UTILITY(U,$J,358.6,31,1,4,0)
	;;=  means test code
	;;^UTILITY(U,$J,358.6,31,1,5,0)
	;;=  date of last means test
	;;^UTILITY(U,$J,358.6,31,2)
	;;=MEANS TEST CATEGORY^20^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,31,3)
	;;=MEANS TEST CATEGORY PATIENT
	;;^UTILITY(U,$J,358.6,31,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,31,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,31,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,358.6,31,15,2,0)
	;;=DATE OF LAST MEANS TEST^12^2^
	;;^UTILITY(U,$J,358.6,31,15,3,0)
	;;=MEANS TEST CODE^1^3^
	;;^UTILITY(U,$J,358.6,32,0)
	;;=GMP SELECT CLINIC COMMON PROBLEMS^SELECT^GMPLENFM^PROBLEM LIST^0^3^2^^1^^^1^33^^^
	;;^UTILITY(U,$J,358.6,32,1,0)
	;;=^^11^11^2960326^^^^
	;;^UTILITY(U,$J,358.6,32,1,1,0)
	;;=This interface allows users to build selection lists (pick lists)
	;;^UTILITY(U,$J,358.6,32,1,2,0)
	;;=using terms from the Clinical Lexicon.  These pick lists would then
	;;^UTILITY(U,$J,358.6,32,1,3,0)
	;;=be similar to pick lists created in the Problem List package.  This
	;;^UTILITY(U,$J,358.6,32,1,4,0)
	;;=is an alternative to building pick lists based on Diagnosis.  The primary
	;;^UTILITY(U,$J,358.6,32,1,5,0)
	;;=purpose is to provide lists of terms that can be the primary or a 
	;;^UTILITY(U,$J,358.6,32,1,6,0)
	;;=secondary purpose of visit and can be added to the patients active
	;;^UTILITY(U,$J,358.6,32,1,7,0)
	;;=problem list.
	;;^UTILITY(U,$J,358.6,32,1,8,0)
	;;= 
	;;^UTILITY(U,$J,358.6,32,1,9,0)
	;;=Warning: If you do not see ICD codes when creating pick lists you must
	;;^UTILITY(U,$J,358.6,32,1,10,0)
	;;=edit the Problem List User Defaults to show ICD codes.  Failure to do so
	;;^UTILITY(U,$J,358.6,32,1,11,0)
	;;=may result in inaccurate or invalid ICD codes.
	;;^UTILITY(U,$J,358.6,32,2)
	;;=POINTER TO CLINICAL LEX FILE^9^^^^^^^^^^^^^^^0^1
	;;^UTILITY(U,$J,358.6,32,3)
	;;=COMMON PROBLEMS SELECT LIST
	;;^UTILITY(U,$J,358.6,32,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,358.6,32,15,2,0)
	;;=PROBLEM TEXT^210^2^^PROBLEM
	;;^UTILITY(U,$J,358.6,32,15,3,0)
	;;=CORRESPNDNG ICD-9 Dx CODE^7^3^^ICD-9
	;;^UTILITY(U,$J,358.6,33,0)
	;;=GMP INPUT CLINIC COMMON PROBLEMS^^^PROBLEM LIST^^1^^^1^^^1^^^^SM
	;;^UTILITY(U,$J,358.6,33,1,0)
	;;=^^3^3^2951206^
	;;^UTILITY(U,$J,358.6,33,1,1,0)
	;;=Input interface allows inputting into DHCP of selections based on
	;;^UTILITY(U,$J,358.6,33,1,2,0)
	;;=the clinical lexicon.  Data passes to PCE with associated qualifiers
	;;^UTILITY(U,$J,358.6,33,1,3,0)
	;;=for adding to problem list, etc.
	;;^UTILITY(U,$J,358.6,33,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,33,10)
	;;=Enter an active clincical lexicon term.
	;;^UTILITY(U,$J,358.6,33,12)
	;;=DIAGNOSIS/PROBLEM^3^13^14^2
	;;^UTILITY(U,$J,358.6,33,13,0)
	;;=^357.613V^9^9
	;;^UTILITY(U,$J,358.6,33,13,1,0)
	;;=1;IBD(358.98,^^1^^^^^2
	;;^UTILITY(U,$J,358.6,33,13,2,0)
	;;=2;IBD(358.98,^^1^^^^^2
	;;^UTILITY(U,$J,358.6,33,13,3,0)
	;;=3;IBD(358.98,^^1^^^^^9
	;;^UTILITY(U,$J,358.6,33,13,4,0)
	;;=4;IBD(358.98,^^1^^^^^10
	;;^UTILITY(U,$J,358.6,33,13,5,0)
	;;=5;IBD(358.98,^^1^^^^^11
	;;^UTILITY(U,$J,358.6,33,13,6,0)
	;;=6;IBD(358.98,^^1^^^^^12
	;;^UTILITY(U,$J,358.6,33,13,7,0)
	;;=7;IBD(358.98,^^1^^^^^5
	;;^UTILITY(U,$J,358.6,33,13,8,0)
	;;=8;IBD(358.98,^^1^^^^^6
	;;^UTILITY(U,$J,358.6,33,13,9,0)
	;;=9;IBD(358.98,^^1^^^^^6
	;;^UTILITY(U,$J,358.6,34,0)
	;;=ACTION PROFILE - 45 DAYS^RXPROF^IBDFN3^OUTPATIENT PHARMACY^1^4^^^1^0^^1^^^^
	;;^UTILITY(U,$J,358.6,34,1,0)
	;;=^^2^2^2930623^^^^
	;;^UTILITY(U,$J,358.6,34,1,1,0)
	;;=The Action Profile from Outpatient Pharmacy. The  medicine profile is printed

IBDPI00G
IBDPI00G	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,34,1,2,0)
	;;=for the last 45 days.
	;;^UTILITY(U,$J,358.6,34,3)
	;;=OUTPATIENT PHARMACY ACTION PROFILE
	;;^UTILITY(U,$J,358.6,34,4)
	;;=S PSTYPE=1,PSDAYS=45
	;;^UTILITY(U,$J,358.6,34,6,0)
	;;=^357.66^25^2
	;;^UTILITY(U,$J,358.6,34,6,23,0)
	;;=PSTYPE
	;;^UTILITY(U,$J,358.6,34,6,25,0)
	;;=PSDAYS
	;;^UTILITY(U,$J,358.6,34,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,34,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,35,0)
	;;=INFORMATION PROFILE - 45 DAYS^RXPROF^IBDFN3^OUTPATIENT PHARMACY^1^4^^^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,35,1,0)
	;;=^^3^3^2930524^^
	;;^UTILITY(U,$J,358.6,35,1,1,0)
	;;= 
	;;^UTILITY(U,$J,358.6,35,1,2,0)
	;;=Prints the Information Profile from Outpatient Pharmacy. The medication
	;;^UTILITY(U,$J,358.6,35,1,3,0)
	;;=profile is printed for 45 days.
	;;^UTILITY(U,$J,358.6,35,2)
	;;=^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,35,3)
	;;=INFORMATION PROFILE OUTPATIENT PHARMACY RX
	;;^UTILITY(U,$J,358.6,35,4)
	;;=S PSTYPE=0,PSDAYS=45
	;;^UTILITY(U,$J,358.6,35,6,0)
	;;=^357.66^2^2
	;;^UTILITY(U,$J,358.6,35,6,1,0)
	;;=PSTYPE
	;;^UTILITY(U,$J,358.6,35,6,2,0)
	;;=PSDAYS
	;;^UTILITY(U,$J,358.6,35,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,35,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,36,0)
	;;=ROUTING SLIP^ROUTING^IBDFN3^SCHEDULING^1^4^^^1^0^^1^^^^
	;;^UTILITY(U,$J,358.6,36,1,0)
	;;=^^1^1^2950814^^^^
	;;^UTILITY(U,$J,358.6,36,1,1,0)
	;;=Prints the routing slip from the scheduling package.
	;;^UTILITY(U,$J,358.6,36,3)
	;;=ROUTING SLIP SCHEDULING
	;;^UTILITY(U,$J,358.6,36,7,0)
	;;=^357.67^3^3
	;;^UTILITY(U,$J,358.6,36,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,36,7,2,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,358.6,36,7,3,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,358.6,37,0)
	;;=IB CURRENT DATE^NOW^IBDFN2^AUTOMATED INFO COLLECTION SYS^1^2^1^0^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,37,1,0)
	;;=^^1^1^2951023^
	;;^UTILITY(U,$J,358.6,37,1,1,0)
	;;=Prints the current date in MM DD,YYYY format.
	;;^UTILITY(U,$J,358.6,37,2)
	;;=CURRENT DATE (MMM DD, YYYY)^12^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,37,3)
	;;=TODAY CURRENT DATE DAY
	;;^UTILITY(U,$J,358.6,37,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,38,0)
	;;=IB CURRENT DATE@TIME^NOW^IBDFN2^AUTOMATED INFO COLLECTION SYS^1^2^1^0^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,38,1,0)
	;;=^^1^1^2951023^
	;;^UTILITY(U,$J,358.6,38,1,1,0)
	;;=Returns the current date and time in MM DD, YYY@HH:MM:SS format.
	;;^UTILITY(U,$J,358.6,38,2)
	;;=DT/TM (MMM DD, YYYY@HH:MM:SS)^21^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,38,3)
	;;=DATE TIME NOW DAY
	;;^UTILITY(U,$J,358.6,38,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,39,0)
	;;=IB CURRENT TIME^NOW^IBDFN2^AUTOMATED INFO COLLECTION SYS^1^2^1^0^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,39,1,0)
	;;=^^1^1^2930528^
	;;^UTILITY(U,$J,358.6,39,1,1,0)
	;;=Returns the time in HH:MM:SS format.
	;;^UTILITY(U,$J,358.6,39,2)
	;;=CURRENT TIME (HH:MM:SS)^8^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,39,3)
	;;=TIME NOW
	;;^UTILITY(U,$J,358.6,39,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,40,0)
	;;=SD DIVISION NAME^DIVISION^IBDFN1^SCHEDULING^1^2^1^0^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,40,1,0)
	;;=^^1^1^2930603^^
	;;^UTILITY(U,$J,358.6,40,1,1,0)
	;;=Gets the name of the division that the clinic belongs to.
	;;^UTILITY(U,$J,358.6,40,2)
	;;=DIVISION NAME^30^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,40,3)
	;;=DIVISION PIMS FACILITY
	;;^UTILITY(U,$J,358.6,40,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,40,7,1,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,358.6,40,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,41,0)
	;;=SD INSTITUTION NAME^INST^IBDFN1^SCHEDULING^1^2^1^0^1^^^1^^^^
	;;^UTILITY(U,$J,358.6,41,1,0)
	;;=^^1^1^2930603^^
	;;^UTILITY(U,$J,358.6,41,1,1,0)
	;;=Obtains the name of the institution of the clinic of the appointment.
	;;^UTILITY(U,$J,358.6,41,2)
	;;=INSTITUTION NAME^30^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,41,3)
	;;=FACILITY INSTITUTION PIMS SCHEDULING
	;;^UTILITY(U,$J,358.6,41,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,41,7,1,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,358.6,41,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,42,0)
	;;=DPT PATIENT SHORT ADDRESS^ADDRESS^IBDFN6^REGISTRATION^1^2^1^1^1^0^^1^^
	;;^UTILITY(U,$J,358.6,42,1,0)
	;;=^^2^2^2931014^^^
	;;^UTILITY(U,$J,358.6,42,1,1,0)
	;;=The patient's address shortened to fit on a single line. It consists of the
	;;^UTILITY(U,$J,358.6,42,1,2,0)
	;;=first address line followed by the city, state, and ZIP.
	;;^UTILITY(U,$J,358.6,42,2)
	;;=SHORT ADDRESS - SINGLE LINE^65^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,42,3)
	;;=PATIENT SHORT ADDRESS
	;;^UTILITY(U,$J,358.6,42,6,0)
	;;=^357.66^^0
	;;^UTILITY(U,$J,358.6,42,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,42,7,1,0)
	;;=DFN

IBDPI00H
IBDPI00H	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,42,15,0)
	;;=^357.615I^^0
	;;^UTILITY(U,$J,358.6,43,0)
	;;=DPT SC HIDDEN LABELS^ELIG^IBDFN^REGISTRATION^1^2^2^0^1^0^^1^^^^
	;;^UTILITY(U,$J,358.6,43,1,0)
	;;=^^9^9^2931015^^
	;;^UTILITY(U,$J,358.6,43,1,1,0)
	;;=This interface gives the ability to place labels that refer to SC conditions
	;;^UTILITY(U,$J,358.6,43,1,2,0)
	;;=on the form that won't actually be displayed if the patient is not a 
	;;^UTILITY(U,$J,358.6,43,1,3,0)
	;;=service connected veteran. It consists of a list of possible labels that will
	;;^UTILITY(U,$J,358.6,43,1,4,0)
	;;=only print if the veteran is SLabels returned:
	;;^UTILITY(U,$J,358.6,43,1,5,0)
	;;=  %
	;;^UTILITY(U,$J,358.6,43,1,6,0)
	;;=  % - SERVICE CONNECTED
	;;^UTILITY(U,$J,358.6,43,1,7,0)
	;;=  S/C
	;;^UTILITY(U,$J,358.6,43,1,8,0)
	;;=  SERVICE CONNECTED
	;;^UTILITY(U,$J,358.6,43,1,9,0)
	;;=  SC CONDITIONS:
	;;^UTILITY(U,$J,358.6,43,2)
	;;= % ^1^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,43,3)
	;;=SERVICE CONNECTED HIDDEN LABELS DPT PIMS S/C
	;;^UTILITY(U,$J,358.6,43,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,43,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,43,15,0)
	;;=^357.615I^5^5
	;;^UTILITY(U,$J,358.6,43,15,2,0)
	;;=% - SERVICE CONNECTED^21^2^
	;;^UTILITY(U,$J,358.6,43,15,3,0)
	;;=SERVICE CONNECTED^17^3^
	;;^UTILITY(U,$J,358.6,43,15,4,0)
	;;=SC CONDITIONS:^13^4^
	;;^UTILITY(U,$J,358.6,43,15,5,0)
	;;=S/C^3^5^
	;;^UTILITY(U,$J,358.6,44,0)
	;;=DPT SC TREATMENT QUESTIONS^ELIG^IBDFN^REGISTRATION^1^2^2^0^1^^^1^^
	;;^UTILITY(U,$J,358.6,44,1,0)
	;;=^^8^8^2931018^^^^
	;;^UTILITY(U,$J,358.6,44,1,1,0)
	;;=Prints questions concerning whether treatment was related to service.
	;;^UTILITY(U,$J,358.6,44,1,2,0)
	;;=Each question is printed only if it applies to the patient. Questions are:
	;;^UTILITY(U,$J,358.6,44,1,3,0)
	;;= 
	;;^UTILITY(U,$J,358.6,44,1,4,0)
	;;=Was treatment for a SC condition? __ YES __ NO
	;;^UTILITY(U,$J,358.6,44,1,5,0)
	;;=Was treatment related to exposure to Agent Orange? __ YES __ NO
	;;^UTILITY(U,$J,358.6,44,1,6,0)
	;;=Was treatment related to exposure to Ionization Radiation? __ YES __ NO
	;;^UTILITY(U,$J,358.6,44,1,7,0)
	;;=Was treatment related to exposure to Environmental Contaminants? __ YES __ NO
	;;^UTILITY(U,$J,358.6,44,1,8,0)
	;;=Was treatment related to: AO __ IR __ EC __
	;;^UTILITY(U,$J,358.6,44,2)
	;;=RELATED TO SC CONDITION?^46^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,44,3)
	;;=PATIENT TREATMENT QUESTIONS SERVICE CONNECTED EXPOSURE
	;;^UTILITY(U,$J,358.6,44,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,44,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,44,8)
	;;=^^^^
	;;^UTILITY(U,$J,358.6,44,15,0)
	;;=^357.615I^5^5
	;;^UTILITY(U,$J,358.6,44,15,2,0)
	;;=RELATED TO AO?^63^2^
	;;^UTILITY(U,$J,358.6,44,15,3,0)
	;;=RELATED TO IR?^71^3^
	;;^UTILITY(U,$J,358.6,44,15,4,0)
	;;=RELATED TO EC?^77^4^1
	;;^UTILITY(U,$J,358.6,44,15,5,0)
	;;=RELATED TO AO,IR, OR EC?^43^5^1
	;;^UTILITY(U,$J,358.6,45,0)
	;;=SD FUTURE APPTS, SAME DAY^SAMEDAY^IBDFN1^SCHEDULING^1^2^4^1^1^^^1^^^1^^
	;;^UTILITY(U,$J,358.6,45,1,0)
	;;=^^8^8^2950413^^^^
	;;^UTILITY(U,$J,358.6,45,1,1,0)
	;;=Returns a list of all the patient's future appointments for the same day.
	;;^UTILITY(U,$J,358.6,45,1,2,0)
	;;= Includes:
	;;^UTILITY(U,$J,358.6,45,1,3,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,358.6,45,1,4,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,358.6,45,1,5,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,358.6,45,1,6,0)
	;;=  Clinic
	;;^UTILITY(U,$J,358.6,45,1,7,0)
	;;=  Status
	;;^UTILITY(U,$J,358.6,45,1,8,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,358.6,45,2)
	;;=DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1
	;;^UTILITY(U,$J,358.6,45,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,358.6,45,7,0)
	;;=^357.67^2^2
	;;^UTILITY(U,$J,358.6,45,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,45,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,358.6,45,15,0)
	;;=^357.615I^6^6
	;;^UTILITY(U,$J,358.6,45,15,2,0)
	;;=TIME (HH:MM)^5^2^
	;;^UTILITY(U,$J,358.6,45,15,3,0)
	;;=DATE@TIME^17^3^
	;;^UTILITY(U,$J,358.6,45,15,4,0)
	;;=CLINIC^30^4^
	;;^UTILITY(U,$J,358.6,45,15,5,0)
	;;=STATUS^35^5^
	;;^UTILITY(U,$J,358.6,45,15,6,0)
	;;=APPOINTMENT TYPE^25^6^
	;;^UTILITY(U,$J,358.6,46,0)
	;;=SD FUTURE APPTS, ALL^ALLFUTR^IBDFN1^SCHEDULING^1^2^4^1^1^^^1^^^1^^
	;;^UTILITY(U,$J,358.6,46,1,0)
	;;=^^7^7^2951026^
	;;^UTILITY(U,$J,358.6,46,1,1,0)
	;;=Returns a list of all future appointments for all clinics. Includes:
	;;^UTILITY(U,$J,358.6,46,1,2,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,358.6,46,1,3,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,358.6,46,1,4,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,358.6,46,1,5,0)
	;;=  Clinic

IBDPI00I
IBDPI00I	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,46,1,6,0)
	;;=  Status
	;;^UTILITY(U,$J,358.6,46,1,7,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,358.6,46,2)
	;;=DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1
	;;^UTILITY(U,$J,358.6,46,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,358.6,46,7,0)
	;;=^357.67^2^2
	;;^UTILITY(U,$J,358.6,46,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,46,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,358.6,46,15,0)
	;;=^357.615I^6^6
	;;^UTILITY(U,$J,358.6,46,15,2,0)
	;;=TIME^5^2^
	;;^UTILITY(U,$J,358.6,46,15,3,0)
	;;=DATE@TIME^17^3^
	;;^UTILITY(U,$J,358.6,46,15,4,0)
	;;=CLINIC^30^4^
	;;^UTILITY(U,$J,358.6,46,15,5,0)
	;;=STATUS^35^5^
	;;^UTILITY(U,$J,358.6,46,15,6,0)
	;;=APPOINTMENT TYPE^25^6^
	;;^UTILITY(U,$J,358.6,47,0)
	;;=SD FUTURE APPTS, SAME CLINIC^CLNCFUTR^IBDFN1^SCHEDULING^1^2^4^1^1^^^1^^^1^^
	;;^UTILITY(U,$J,358.6,47,1,0)
	;;=^^8^8^2950413^^
	;;^UTILITY(U,$J,358.6,47,1,1,0)
	;;=Returns a list of all the patient's future appointments for the same day
	;;^UTILITY(U,$J,358.6,47,1,2,0)
	;;=and clinic. Includes:
	;;^UTILITY(U,$J,358.6,47,1,3,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,358.6,47,1,4,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,358.6,47,1,5,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,358.6,47,1,6,0)
	;;=  Clinic
	;;^UTILITY(U,$J,358.6,47,1,7,0)
	;;=  Status
	;;^UTILITY(U,$J,358.6,47,1,8,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,358.6,47,2)
	;;=DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1
	;;^UTILITY(U,$J,358.6,47,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,358.6,47,7,0)
	;;=^357.67^3^3
	;;^UTILITY(U,$J,358.6,47,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,47,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,358.6,47,7,3,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,358.6,47,15,0)
	;;=^357.615I^6^6
	;;^UTILITY(U,$J,358.6,47,15,2,0)
	;;=TIME^5^2^
	;;^UTILITY(U,$J,358.6,47,15,3,0)
	;;=DATE@TIME^17^3^
	;;^UTILITY(U,$J,358.6,47,15,4,0)
	;;=CLINIC^30^4^
	;;^UTILITY(U,$J,358.6,47,15,5,0)
	;;=STATUS^35^5^
	;;^UTILITY(U,$J,358.6,47,15,6,0)
	;;=APPOINTMENT TYPE^25^6^
	;;^UTILITY(U,$J,358.6,48,0)
	;;=DPT PATIENT'S INSURANCE - ALL^INSURANC^IBDFN6^REGISTRATION^1^2^4^1^1^^^1^^^1^^
	;;^UTILITY(U,$J,358.6,48,1,0)
	;;=^^10^10^2950505^^
	;;^UTILITY(U,$J,358.6,48,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns
	;;^UTILITY(U,$J,358.6,48,1,2,0)
	;;=ALL insurance policies, including inactive ones.
	;;^UTILITY(U,$J,358.6,48,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,358.6,48,1,4,0)
	;;=  insurance company
	;;^UTILITY(U,$J,358.6,48,1,5,0)
	;;=  policy number
	;;^UTILITY(U,$J,358.6,48,1,6,0)
	;;=  group name
	;;^UTILITY(U,$J,358.6,48,1,7,0)
	;;=  policy holder's relationship to the patient
	;;^UTILITY(U,$J,358.6,48,1,8,0)
	;;=  policy expiration date
	;;^UTILITY(U,$J,358.6,48,1,9,0)
	;;=  group number
	;;^UTILITY(U,$J,358.6,48,1,10,0)
	;;=  name of insured
	;;^UTILITY(U,$J,358.6,48,2)
	;;=INSURANCE COMPANY^30^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,48,3)
	;;=PATIENT INSURANCE PIMS
	;;^UTILITY(U,$J,358.6,48,4)
	;;=S ACT=""
	;;^UTILITY(U,$J,358.6,48,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,358.6,48,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,358.6,48,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,48,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,48,15,0)
	;;=^357.615I^7^7
	;;^UTILITY(U,$J,358.6,48,15,2,0)
	;;=EXPIRATION DATE^12^2^
	;;^UTILITY(U,$J,358.6,48,15,3,0)
	;;=POLICY NUMBER^20^3^
	;;^UTILITY(U,$J,358.6,48,15,4,0)
	;;=GROUP NUMBER^17^4^
	;;^UTILITY(U,$J,358.6,48,15,5,0)
	;;=GROUP NAME^20^5^
	;;^UTILITY(U,$J,358.6,48,15,6,0)
	;;=NAME OF INSURED^30^6^
	;;^UTILITY(U,$J,358.6,48,15,7,0)
	;;=HOLDER'S RELATIONSHIP^9^7^
	;;^UTILITY(U,$J,358.6,49,0)
	;;=DPT PATIENT'S INSURANCE - ACTIVE ONLY^INSURANC^IBDFN6^REGISTRATION^1^2^4^1^1^^^1^^^1^^
	;;^UTILITY(U,$J,358.6,49,1,0)
	;;=^^10^10^2950412^^
	;;^UTILITY(U,$J,358.6,49,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns ONLY
	;;^UTILITY(U,$J,358.6,49,1,2,0)
	;;=active insurance, excluding policies that do not reimburse.
	;;^UTILITY(U,$J,358.6,49,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,358.6,49,1,4,0)
	;;=  insurance company
	;;^UTILITY(U,$J,358.6,49,1,5,0)
	;;=  policy number
	;;^UTILITY(U,$J,358.6,49,1,6,0)
	;;=  group name
	;;^UTILITY(U,$J,358.6,49,1,7,0)
	;;=  policy holder's relationship to the patient
	;;^UTILITY(U,$J,358.6,49,1,8,0)
	;;=  policy expiration date
	;;^UTILITY(U,$J,358.6,49,1,9,0)
	;;=  group number
	;;^UTILITY(U,$J,358.6,49,1,10,0)
	;;=  name of insured
	;;^UTILITY(U,$J,358.6,49,2)
	;;=INSURANCE COMPANY^30^^^^^^^^^NAME OF INSURED^^^^^^1^0
	;;^UTILITY(U,$J,358.6,49,3)
	;;=PATIENT INSURANCE PIMS ACTIVE
	;;^UTILITY(U,$J,358.6,49,4)
	;;=S ACT=1

IBDPI00J
IBDPI00J	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,49,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,358.6,49,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,358.6,49,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,49,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,49,15,0)
	;;=^357.615I^7^7
	;;^UTILITY(U,$J,358.6,49,15,2,0)
	;;=EXPIRATION DATE^12^2^
	;;^UTILITY(U,$J,358.6,49,15,3,0)
	;;=POLICY NUMBER^20^3^
	;;^UTILITY(U,$J,358.6,49,15,4,0)
	;;=GROUP NUMBER^17^4^
	;;^UTILITY(U,$J,358.6,49,15,5,0)
	;;=GROUP NAME^20^5^
	;;^UTILITY(U,$J,358.6,49,15,6,0)
	;;=NAME OF INSURED^30^6^
	;;^UTILITY(U,$J,358.6,49,15,7,0)
	;;=HOLDER'S RELATIONSHIP^9^7^
	;;^UTILITY(U,$J,358.6,50,0)
	;;=DG SELECT VISIT TYPE CPT PROCEDURES^VSIT^IBDFN4^SCHEDULING^^3^2^^1^^^1^51^^
	;;^UTILITY(U,$J,358.6,50,1,0)
	;;=^^1^1^2941116^^^^
	;;^UTILITY(U,$J,358.6,50,1,1,0)
	;;=Allows for select of just Visit type CPT codes from the CPT file.
	;;^UTILITY(U,$J,358.6,50,2)
	;;=CODE^5^RECOMMENDED TEXT-SHORT NAME^40^RECOMMENDED HEADER^30^SHORT NAME FROM CPT FILE^28^^^^^^^^^1^1
	;;^UTILITY(U,$J,358.6,50,3)
	;;=SELECT TYPE OF VISIT CPT
	;;^UTILITY(U,$J,358.6,50,11)
	;;=D TESTVST^IBDFN7
	;;^UTILITY(U,$J,358.6,50,15,0)
	;;=^357.615I^4^4
	;;^UTILITY(U,$J,358.6,50,15,2,0)
	;;=RECOMMENDED TEXT-SHORT NAME^40^2^
	;;^UTILITY(U,$J,358.6,50,15,3,0)
	;;=RECOMMENDED HEADER^30^3^
	;;^UTILITY(U,$J,358.6,50,15,4,0)
	;;=SHORT NAME FROM CPT FILE^28^4^
	;;^UTILITY(U,$J,358.6,51,0)
	;;=INPUT VISIT TYPE^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP^
	;;^UTILITY(U,$J,358.6,51,1,0)
	;;=^^1^1^2951023^
	;;^UTILITY(U,$J,358.6,51,1,1,0)
	;;=Used for inputting the visit type that applies to the visit.
	;;^UTILITY(U,$J,358.6,51,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,51,3)
	;;=VISIT TYPE OF VISIT
	;;^UTILITY(U,$J,358.6,51,9)
	;;=D INPUTCPT^IBDFN8(.X)
	;;^UTILITY(U,$J,358.6,51,10)
	;;=Enter an active Visit Type code.
	;;^UTILITY(U,$J,358.6,51,11)
	;;=D TESTVST^IBDFN7
	;;^UTILITY(U,$J,358.6,51,12)
	;;=ENCOUNTER^5^^^^^^
	;;^UTILITY(U,$J,358.6,51,14)
	;;=S Y=$$DSPLYCPT^IBDFN9(X)
	;;^UTILITY(U,$J,358.6,51,17)
	;;=D SLCTVST^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,51,18)
	;;=D LIST^IBDFDE2(.IBDSEL,.IBDF,"Visit Type (EM) Code")
	;;^UTILITY(U,$J,358.6,51,19)
	;;=D VST^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,52,0)
	;;=INPUT PROVIDER^PRVDR^IBDFN4^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^1^^SP^^^1
	;;^UTILITY(U,$J,358.6,52,1,0)
	;;=^^1^1^2960129^^^^
	;;^UTILITY(U,$J,358.6,52,1,1,0)
	;;=Used for inputting the provider of the service.
	;;^UTILITY(U,$J,358.6,52,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,358.6,52,3)
	;;=PROVIDER DOCTOR NURSE
	;;^UTILITY(U,$J,358.6,52,12)
	;;=ENCOUNTER^4^^^15^^^
	;;^UTILITY(U,$J,358.6,52,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,358.6,52,13,1,0)
	;;=1;IBD(358.98,^^0^^^^^^
	;;^UTILITY(U,$J,358.6,52,13,2,0)
	;;=2;IBD(358.98,^^0^^^^^^
	;;^UTILITY(U,$J,358.6,52,14)
	;;=S Y=$$DSPLYPRV^IBDFN9(X)
	;;^UTILITY(U,$J,358.6,52,16)
	;;=n^^^^n
	;;^UTILITY(U,$J,358.6,52,18)
	;;=D LIST^IBDFDE2(.IBDSEL,.IBDF,"Provider")
	;;^UTILITY(U,$J,358.6,53,0)
	;;=INPUT SC RELATED?^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^P
	;;^UTILITY(U,$J,358.6,53,1,0)
	;;=^^2^2^2950911^^^
	;;^UTILITY(U,$J,358.6,53,1,1,0)
	;;=Used for inputting whether the visit was related to a service connected
	;;^UTILITY(U,$J,358.6,53,1,2,0)
	;;=condition.
	;;^UTILITY(U,$J,358.6,53,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,53,3)
	;;=SERVICE CONNECTED
	;;^UTILITY(U,$J,358.6,53,10)
	;;=Enter YES or NO.
	;;^UTILITY(U,$J,358.6,53,12)
	;;=ENCOUNTER^6^^^6^^^
	;;^UTILITY(U,$J,358.6,53,14)
	;;=S Y=$$DSPLYYN^IBDFN9(Y)
	;;^UTILITY(U,$J,358.6,53,17)
	;;=D SLCTYN^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,53,19)
	;;=D YN^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,54,0)
	;;=INPUT AO RELATED?^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^P
	;;^UTILITY(U,$J,358.6,54,1,0)
	;;=^^2^2^2950913^^^
	;;^UTILITY(U,$J,358.6,54,1,1,0)
	;;=Used for inputting of whether or not the visit was related to Agent Orange
	;;^UTILITY(U,$J,358.6,54,1,2,0)
	;;=exposure.
	;;^UTILITY(U,$J,358.6,54,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,54,3)
	;;=AGENT ORANGE
	;;^UTILITY(U,$J,358.6,54,10)
	;;=Enter YES or NO.
	;;^UTILITY(U,$J,358.6,54,12)
	;;=ENCOUNTER^7^^^^^^
	;;^UTILITY(U,$J,358.6,54,14)
	;;=S Y=$$DSPLYYN^IBDFN9(Y)
	;;^UTILITY(U,$J,358.6,54,17)
	;;=D SLCTYN^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,54,19)
	;;=D YN^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,55,0)
	;;=INPUT IR RELATED?^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^P
	;;^UTILITY(U,$J,358.6,55,1,0)
	;;=^^2^2^2950913^^^
	;;^UTILITY(U,$J,358.6,55,1,1,0)
	;;=Used for inputting whether or not the patient's visit was related to
	;;^UTILITY(U,$J,358.6,55,1,2,0)
	;;=ionizing radiation.
	;;^UTILITY(U,$J,358.6,55,2)
	;;=^^^^^^^^^^^^^^^^^1

IBDPI00K
IBDPI00K	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,55,3)
	;;=IONIZING RADIATION
	;;^UTILITY(U,$J,358.6,55,10)
	;;=Enter YES or NO.
	;;^UTILITY(U,$J,358.6,55,12)
	;;=ENCOUNTER^8^^^9^^^
	;;^UTILITY(U,$J,358.6,55,14)
	;;=S Y=$$DSPLYYN^IBDFN9(Y)
	;;^UTILITY(U,$J,358.6,55,17)
	;;=D SLCTYN^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,55,19)
	;;=D YN^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,56,0)
	;;=INPUT EC RELATED?^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^P
	;;^UTILITY(U,$J,358.6,56,1,0)
	;;=^^2^2^2950828^^
	;;^UTILITY(U,$J,358.6,56,1,1,0)
	;;=Used for inputting whether or not the visit was related to environmental
	;;^UTILITY(U,$J,358.6,56,1,2,0)
	;;=contaminants.
	;;^UTILITY(U,$J,358.6,56,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,56,3)
	;;=ENVIRONMENTAL CONTAMINANTS
	;;^UTILITY(U,$J,358.6,56,10)
	;;=Enter YES or NO.
	;;^UTILITY(U,$J,358.6,56,12)
	;;=ENCOUNTER^^^^9^^^
	;;^UTILITY(U,$J,358.6,56,14)
	;;=S Y=$$DSPLYYN^IBDFN9(Y)
	;;^UTILITY(U,$J,358.6,56,17)
	;;=D SLCTYN^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,56,19)
	;;=D YN^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,57,0)
	;;=INPUT PROVIDER INDICATOR^^^PANDAS^^1^^^0^^^1^^^^P
	;;^UTILITY(U,$J,358.6,57,1,0)
	;;=^^1^1^2950913^^
	;;^UTILITY(U,$J,358.6,57,1,1,0)
	;;=Used by PANDAS only.
	;;^UTILITY(U,$J,358.6,57,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,358.6,57,3)
	;;=PANDAS
	;;^UTILITY(U,$J,358.6,57,12)
	;;=ENCOUNTER^15^^^^^^
	;;^UTILITY(U,$J,358.6,58,0)
	;;=PX INPUT ATTENDING PHYSICIAN^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^S
	;;^UTILITY(U,$J,358.6,58,1,0)
	;;=^^1^1^2950825^
	;;^UTILITY(U,$J,358.6,58,1,1,0)
	;;=Used for inputting the attending physician.
	;;^UTILITY(U,$J,358.6,58,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,358.6,58,3)
	;;=ATTENDING PHYSICIAN DOCTOR
	;;^UTILITY(U,$J,358.6,58,12)
	;;=ENCOUNTER^16^^^^^^
	;;^UTILITY(U,$J,358.6,58,14)
	;;=S Y=$$DSPLYPRV^IBDFN9(Y)
	;;^UTILITY(U,$J,358.6,59,0)
	;;=INPUT EDIT INFORMATION^^^PANDAS^^1^1^^0^^^1^^^^P
	;;^UTILITY(U,$J,358.6,59,1,0)
	;;=^^2^2^2950913^^
	;;^UTILITY(U,$J,358.6,59,1,1,0)
	;;=This package interface was created for the Pandas forms for those fields
	;;^UTILITY(U,$J,358.6,59,1,2,0)
	;;=that require editing by hand.
	;;^UTILITY(U,$J,358.6,59,3)
	;;=PANDAS
	;;^UTILITY(U,$J,358.6,60,0)
	;;=SD SELECT PROVIDER^PRVDR^IBDFN4^SCHEDULING^1^3^4^0^1^0^^1^52^1^^
	;;^UTILITY(U,$J,358.6,60,1,0)
	;;=^^2^2^2951020^
	;;^UTILITY(U,$J,358.6,60,1,1,0)
	;;=Used to indicate the provider.  The list of providers is obtained from
	;;^UTILITY(U,$J,358.6,60,1,2,0)
	;;=scheduling.  
	;;^UTILITY(U,$J,358.6,60,2)
	;;=POINTER TO NEW PERSON^10^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,358.6,60,3)
	;;=PROVIDER DOCTOR NURSE
	;;^UTILITY(U,$J,358.6,60,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,60,7,1,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,358.6,60,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,358.6,60,13,1,0)
	;;=1;IBD(358.98,^^0^^^^^^
	;;^UTILITY(U,$J,358.6,60,13,2,0)
	;;=2;IBD(358.98,^^0^^^^^^
	;;^UTILITY(U,$J,358.6,60,15,0)
	;;=^357.615I^1^1
	;;^UTILITY(U,$J,358.6,60,15,1,0)
	;;=PROVIDER^30^2^^PROVIDER
	;;^UTILITY(U,$J,358.6,60,16)
	;;=n^^^^n
	;;^UTILITY(U,$J,358.6,61,0)
	;;=IBDF FORM ID ASSIGNED BY FORM TRACKING^IBPFID^IBDFN4^AUTOMATED INFO COLLECTION SYS^1^2^1^1^1^^^1^^
	;;^UTILITY(U,$J,358.6,61,1,0)
	;;=^^4^4^2951020^
	;;^UTILITY(U,$J,358.6,61,1,1,0)
	;;=Used to display the form number assigned by Form Tracking. DO NOT use this
	;;^UTILITY(U,$J,358.6,61,1,2,0)
	;;=for scannable forms or forms designed to be printed on a laser printer
	;;^UTILITY(U,$J,358.6,61,1,3,0)
	;;=with a page size of (133 col)x(80 lines). The form tracking number will be
	;;^UTILITY(U,$J,358.6,61,1,4,0)
	;;=printed automatically in those cases.
	;;^UTILITY(U,$J,358.6,61,2)
	;;=FORM TRACKING NUMBER^8^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,61,3)
	;;=FORM TRACKING NUMBER PRINTED FORM ID
	;;^UTILITY(U,$J,358.6,62,0)
	;;=GMP SELECT PATIENT ACTIVE PROBLEMS^DSELECT^GMPLENFM^PROBLEM LIST^1^3^4^1^1^^^1^63^1^1^
	;;^UTILITY(U,$J,358.6,62,1,0)
	;;=^^8^8^2950918^^^^
	;;^UTILITY(U,$J,358.6,62,1,1,0)
	;;=For displaying the patient's active problems. Returns a list.
	;;^UTILITY(U,$J,358.6,62,1,2,0)
	;;=Data returned:
	;;^UTILITY(U,$J,358.6,62,1,3,0)
	;;=  problem text
	;;^UTILITY(U,$J,358.6,62,1,4,0)
	;;=  corresponding ICD-9 code (if there is a mapping)
	;;^UTILITY(U,$J,358.6,62,1,5,0)
	;;=  date of onset (MM/DD/YY)
	;;^UTILITY(U,$J,358.6,62,1,6,0)
	;;=  SC indicator (SC/NSC/"")
	;;^UTILITY(U,$J,358.6,62,1,7,0)
	;;=  special exposure (A/I/P/"")
	;;^UTILITY(U,$J,358.6,62,1,8,0)
	;;=  special exposure (returns the full text of the type of exposure)
	;;^UTILITY(U,$J,358.6,62,2)
	;;=PROBLEM^10^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,358.6,62,3)
	;;=SELECT ACTIVE PROBLEMS LIST PATIENT

IBDPI00L
IBDPI00L	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,62,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,62,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,62,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,358.6,62,13,1,0)
	;;=1;IBD(358.98,^^0^^^^^^
	;;^UTILITY(U,$J,358.6,62,13,2,0)
	;;=2;IBD(358.98,^^0^^^^^^
	;;^UTILITY(U,$J,358.6,62,15,0)
	;;=^357.615I^7^7
	;;^UTILITY(U,$J,358.6,62,15,1,0)
	;;=PROBLEM TEXT^80^2^^PROBLEM NARRATIVE/NOTES
	;;^UTILITY(U,$J,358.6,62,15,2,0)
	;;=CORRESPONDNG ICD-9 Dx CODE^7^3
	;;^UTILITY(U,$J,358.6,62,15,3,0)
	;;=DATE OF ONSET (MM/DD/YY)^8^4
	;;^UTILITY(U,$J,358.6,62,15,4,0)
	;;=SC INDICATOR (SC/NSC/"")^3^5
	;;^UTILITY(U,$J,358.6,62,15,5,0)
	;;=SC INDICATOR (Y/N/"")^1^6
	;;^UTILITY(U,$J,358.6,62,15,6,0)
	;;=SPECIAL EXPOSURE (A/I/P/"")^1^7
	;;^UTILITY(U,$J,358.6,62,15,7,0)
	;;=SPECIAL EXPOSURE (FULL TEXT)^12^8
	;;^UTILITY(U,$J,358.6,62,16)
	;;=n^^^^n
	;;^UTILITY(U,$J,358.6,63,0)
	;;=PX INPUT PATIENT ACTIVE PROBLEM^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^S
	;;^UTILITY(U,$J,358.6,63,1,0)
	;;=^^1^1^2951206^^
	;;^UTILITY(U,$J,358.6,63,1,1,0)
	;;=Used for inputting data selected from the Patient's Active Problem List.
	;;^UTILITY(U,$J,358.6,63,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,358.6,63,3)
	;;=PATIENT'S ACTIVE PROBLEM LIST
	;;^UTILITY(U,$J,358.6,63,12)
	;;=DIAGNOSIS/PROBLEM^4^13^14^2
	;;^UTILITY(U,$J,358.6,63,13,0)
	;;=^357.613V^8^8
	;;^UTILITY(U,$J,358.6,63,13,1,0)
	;;=1;IBD(358.98,^^1^^^^^2^
	;;^UTILITY(U,$J,358.6,63,13,2,0)
	;;=2;IBD(358.98,^^1^^^^^2^
	;;^UTILITY(U,$J,358.6,63,13,3,0)
	;;=3;IBD(358.98,^^1^^^^^9
	;;^UTILITY(U,$J,358.6,63,13,4,0)
	;;=4;IBD(358.98,^^1^^^^^10
	;;^UTILITY(U,$J,358.6,63,13,5,0)
	;;=5;IBD(358.98,^^1^^^^^11
	;;^UTILITY(U,$J,358.6,63,13,6,0)
	;;=6;IBD(358.98,^^1^^^^^12
	;;^UTILITY(U,$J,358.6,63,13,7,0)
	;;=8;IBD(358.98,^^1^^^^^6
	;;^UTILITY(U,$J,358.6,63,13,8,0)
	;;=9;IBD(358.98,^^1^^^^^6
	;;^UTILITY(U,$J,358.6,64,0)
	;;=DPT PATIENT'S SC CONDITIONS^ELIG^IBDFN^REGISTRATION^1^3^4^1^1^^^1^^1^^
	;;^UTILITY(U,$J,358.6,64,1,0)
	;;=^^7^7^2951023^
	;;^UTILITY(U,$J,358.6,64,1,1,0)
	;;=Used to output a list of the patients service connected conditions,
	;;^UTILITY(U,$J,358.6,64,1,2,0)
	;;=along with the percentage ratings. Data returned:
	;;^UTILITY(U,$J,358.6,64,1,3,0)
	;;=  disability name
	;;^UTILITY(U,$J,358.6,64,1,4,0)
	;;=  disability percentage
	;;^UTILITY(U,$J,358.6,64,1,5,0)
	;;=  disability percentage with the label "%"
	;;^UTILITY(U,$J,358.6,64,1,6,0)
	;;=  disability percentage with the label "%SC"
	;;^UTILITY(U,$J,358.6,64,1,7,0)
	;;=  disability percentage with the label "% - SERVICE CONNECTED"
	;;^UTILITY(U,$J,358.6,64,2)
	;;=Disability Name^45^^^^^^^^^^^^^^DISABILITY^1^0
	;;^UTILITY(U,$J,358.6,64,3)
	;;=SERVICE CONNECTED CONDITIONS PATIENT PIMS DISABILITY DISABILITIES
	;;^UTILITY(U,$J,358.6,64,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,64,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,64,15,0)
	;;=^357.615I^5^4
	;;^UTILITY(U,$J,358.6,64,15,2,0)
	;;=Disability % (number only)^3^2
	;;^UTILITY(U,$J,358.6,64,15,3,0)
	;;=Disability % (label=%)^4^3
	;;^UTILITY(U,$J,358.6,64,15,4,0)
	;;=Disabilty % (label=%SC)^6^4
	;;^UTILITY(U,$J,358.6,64,15,5,0)
	;;=Dis.%_"% - SERVICE CONNECTED"^24^5
	;;^UTILITY(U,$J,358.6,65,0)
	;;=SD FUTURE APPTS, SAME DAY^SAMEDAY^IBDFN1^SCHEDULING^1^3^4^1^1^^^1^^1^^
	;;^UTILITY(U,$J,358.6,65,1,0)
	;;=^^8^8^2950413^^^
	;;^UTILITY(U,$J,358.6,65,1,1,0)
	;;=Returns a list of all the patient's future appointments for the same day.
	;;^UTILITY(U,$J,358.6,65,1,2,0)
	;;= Includes:
	;;^UTILITY(U,$J,358.6,65,1,3,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,358.6,65,1,4,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,358.6,65,1,5,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,358.6,65,1,6,0)
	;;=  Clinic
	;;^UTILITY(U,$J,358.6,65,1,7,0)
	;;=  Status
	;;^UTILITY(U,$J,358.6,65,1,8,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,358.6,65,2)
	;;=DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1^0
	;;^UTILITY(U,$J,358.6,65,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,358.6,65,7,0)
	;;=^357.67^2^2
	;;^UTILITY(U,$J,358.6,65,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,65,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,358.6,65,15,0)
	;;=^357.615I^6^5
	;;^UTILITY(U,$J,358.6,65,15,2,0)
	;;=TIME (HH:MM)^5^2
	;;^UTILITY(U,$J,358.6,65,15,3,0)
	;;=DATE@TIME^17^3
	;;^UTILITY(U,$J,358.6,65,15,4,0)
	;;=CLINIC^30^4
	;;^UTILITY(U,$J,358.6,65,15,5,0)
	;;=STATUS^35^5
	;;^UTILITY(U,$J,358.6,65,15,6,0)
	;;=APPOINTMENT TYPE^25^6
	;;^UTILITY(U,$J,358.6,66,0)
	;;=SD FUTURE APPTS, ALL^ALLFUTR^IBDFN1^SCHEDULING^1^3^4^1^1^^^1^^1^^
	;;^UTILITY(U,$J,358.6,66,1,0)
	;;=^^7^7^2951026^
	;;^UTILITY(U,$J,358.6,66,1,1,0)
	;;=Returns a list of all future appointments for all clinics. Includes:

IBDPI00M
IBDPI00M	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,66,1,2,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,358.6,66,1,3,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,358.6,66,1,4,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,358.6,66,1,5,0)
	;;=  Clinic
	;;^UTILITY(U,$J,358.6,66,1,6,0)
	;;=  Status
	;;^UTILITY(U,$J,358.6,66,1,7,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,358.6,66,2)
	;;=DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1^0
	;;^UTILITY(U,$J,358.6,66,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,358.6,66,7,0)
	;;=^357.67^2^2
	;;^UTILITY(U,$J,358.6,66,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,66,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,358.6,66,15,0)
	;;=^357.615I^6^5
	;;^UTILITY(U,$J,358.6,66,15,2,0)
	;;=TIME^5^2
	;;^UTILITY(U,$J,358.6,66,15,3,0)
	;;=DATE@TIME^17^3
	;;^UTILITY(U,$J,358.6,66,15,4,0)
	;;=CLINIC^30^4
	;;^UTILITY(U,$J,358.6,66,15,5,0)
	;;=STATUS^35^5
	;;^UTILITY(U,$J,358.6,66,15,6,0)
	;;=APPOINTMENT TYPE^25^6
	;;^UTILITY(U,$J,358.6,67,0)
	;;=SD FUTURE APPTS, SAME CLINIC^CLNCFUTR^IBDFN1^SCHEDULING^1^3^4^1^1^^^1^^1^^
	;;^UTILITY(U,$J,358.6,67,1,0)
	;;=^^8^8^2950413^^^
	;;^UTILITY(U,$J,358.6,67,1,1,0)
	;;=Returns a list of all the patient's future appointments for the same day
	;;^UTILITY(U,$J,358.6,67,1,2,0)
	;;=and clinic. Includes:
	;;^UTILITY(U,$J,358.6,67,1,3,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,358.6,67,1,4,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,358.6,67,1,5,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,358.6,67,1,6,0)
	;;=  Clinic
	;;^UTILITY(U,$J,358.6,67,1,7,0)
	;;=  Status
	;;^UTILITY(U,$J,358.6,67,1,8,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,358.6,67,2)
	;;=DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1^0
	;;^UTILITY(U,$J,358.6,67,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,358.6,67,7,0)
	;;=^357.67^3^3
	;;^UTILITY(U,$J,358.6,67,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,67,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,358.6,67,7,3,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,358.6,67,15,0)
	;;=^357.615I^6^5
	;;^UTILITY(U,$J,358.6,67,15,2,0)
	;;=TIME^5^2
	;;^UTILITY(U,$J,358.6,67,15,3,0)
	;;=DATE@TIME^17^3
	;;^UTILITY(U,$J,358.6,67,15,4,0)
	;;=CLINIC^30^4
	;;^UTILITY(U,$J,358.6,67,15,5,0)
	;;=STATUS^35^5
	;;^UTILITY(U,$J,358.6,67,15,6,0)
	;;=APPOINTMENT TYPE^25^6
	;;^UTILITY(U,$J,358.6,68,0)
	;;=DPT PATIENT'S INSURANCE - ALL^INSURANC^IBDFN6^REGISTRATION^1^3^4^1^1^^^1^^1^1^^
	;;^UTILITY(U,$J,358.6,68,1,0)
	;;=^^10^10^2950505^^^
	;;^UTILITY(U,$J,358.6,68,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns
	;;^UTILITY(U,$J,358.6,68,1,2,0)
	;;=ALL insurance policies, including inactive ones.
	;;^UTILITY(U,$J,358.6,68,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,358.6,68,1,4,0)
	;;=  insurance company
	;;^UTILITY(U,$J,358.6,68,1,5,0)
	;;=  policy number
	;;^UTILITY(U,$J,358.6,68,1,6,0)
	;;=  group name
	;;^UTILITY(U,$J,358.6,68,1,7,0)
	;;=  policy holder's relationship to the patient
	;;^UTILITY(U,$J,358.6,68,1,8,0)
	;;=  policy expiration date
	;;^UTILITY(U,$J,358.6,68,1,9,0)
	;;=  group number
	;;^UTILITY(U,$J,358.6,68,1,10,0)
	;;=  name of insured
	;;^UTILITY(U,$J,358.6,68,2)
	;;=INSURANCE COMPANY^30^^^^^^^^^^^^^^^1^0
	;;^UTILITY(U,$J,358.6,68,3)
	;;=PATIENT INSURANCE PIMS
	;;^UTILITY(U,$J,358.6,68,4)
	;;=S ACT=""
	;;^UTILITY(U,$J,358.6,68,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,358.6,68,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,358.6,68,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,68,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,68,15,0)
	;;=^357.615I^7^6
	;;^UTILITY(U,$J,358.6,68,15,2,0)
	;;=EXPIRATION DATE^12^2
	;;^UTILITY(U,$J,358.6,68,15,3,0)
	;;=POLICY NUMBER^20^3
	;;^UTILITY(U,$J,358.6,68,15,4,0)
	;;=GROUP NUMBER^17^4
	;;^UTILITY(U,$J,358.6,68,15,5,0)
	;;=GROUP NAME^20^5
	;;^UTILITY(U,$J,358.6,68,15,6,0)
	;;=NAME OF INSURED^30^6
	;;^UTILITY(U,$J,358.6,68,15,7,0)
	;;=HOLDER'S RELATIONSHIP^9^7
	;;^UTILITY(U,$J,358.6,69,0)
	;;=DPT PATIENT'S INSURANCE - ACTIVE ONLY^INSURANC^IBDFN6^REGISTRATION^1^3^4^1^1^^^1^^1^1^^
	;;^UTILITY(U,$J,358.6,69,1,0)
	;;=^^10^10^2950413^^^
	;;^UTILITY(U,$J,358.6,69,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns ONLY
	;;^UTILITY(U,$J,358.6,69,1,2,0)
	;;=active insurance, excluding policies that do not reimburse.
	;;^UTILITY(U,$J,358.6,69,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,358.6,69,1,4,0)
	;;=  insurance company
	;;^UTILITY(U,$J,358.6,69,1,5,0)
	;;=  policy number
	;;^UTILITY(U,$J,358.6,69,1,6,0)
	;;=  group name
	;;^UTILITY(U,$J,358.6,69,1,7,0)
	;;=  policy holder's relationship to the patient
	;;^UTILITY(U,$J,358.6,69,1,8,0)
	;;=  policy expiration date
	;;^UTILITY(U,$J,358.6,69,1,9,0)
	;;=  group number
	;;^UTILITY(U,$J,358.6,69,1,10,0)
	;;=  name of insured

IBDPI00N
IBDPI00N	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,69,2)
	;;=INSURANCE COMPANY^30^^^^^^^^^NAME OF INSURED^^^^^^1^0
	;;^UTILITY(U,$J,358.6,69,3)
	;;=PATIENT INSURANCE PIMS ACTIVE
	;;^UTILITY(U,$J,358.6,69,4)
	;;=S ACT=1
	;;^UTILITY(U,$J,358.6,69,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,358.6,69,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,358.6,69,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,69,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,69,15,0)
	;;=^357.615I^7^6
	;;^UTILITY(U,$J,358.6,69,15,2,0)
	;;=EXPIRATION DATE^12^2
	;;^UTILITY(U,$J,358.6,69,15,3,0)
	;;=POLICY NUMBER^20^3
	;;^UTILITY(U,$J,358.6,69,15,4,0)
	;;=GROUP NUMBER^17^4
	;;^UTILITY(U,$J,358.6,69,15,5,0)
	;;=GROUP NAME^20^5
	;;^UTILITY(U,$J,358.6,69,15,6,0)
	;;=NAME OF INSURED^30^6
	;;^UTILITY(U,$J,358.6,69,15,7,0)
	;;=HOLDER'S RELATIONSHIP^9^7
	;;^UTILITY(U,$J,358.6,70,0)
	;;=DPT PATIENT'S INSURANCE POLICIES^INSURANC^IBDFN6^REGISTRATION^1^3^4^1^1^^^1^^1^1^^
	;;^UTILITY(U,$J,358.6,70,1,0)
	;;=^^10^10^2950413^^
	;;^UTILITY(U,$J,358.6,70,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns
	;;^UTILITY(U,$J,358.6,70,1,2,0)
	;;=active insurance policies and policies that do not reimburse (Medicare).
	;;^UTILITY(U,$J,358.6,70,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,358.6,70,1,4,0)
	;;=    insurance company
	;;^UTILITY(U,$J,358.6,70,1,5,0)
	;;=    policy number
	;;^UTILITY(U,$J,358.6,70,1,6,0)
	;;=    group name
	;;^UTILITY(U,$J,358.6,70,1,7,0)
	;;=    policy holder's relationship to the patient
	;;^UTILITY(U,$J,358.6,70,1,8,0)
	;;=    policy expiration date
	;;^UTILITY(U,$J,358.6,70,1,9,0)
	;;=    group number
	;;^UTILITY(U,$J,358.6,70,1,10,0)
	;;=    name of insured
	;;^UTILITY(U,$J,358.6,70,2)
	;;=INSURANCE COMPANY^30^^^^^^^^^NAME OF INSURED^^^^^^1^0
	;;^UTILITY(U,$J,358.6,70,3)
	;;=PATIENT INSURANCE PIMS
	;;^UTILITY(U,$J,358.6,70,4)
	;;=S ACT=2
	;;^UTILITY(U,$J,358.6,70,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,358.6,70,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,358.6,70,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,70,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,70,15,0)
	;;=^357.615I^7^6
	;;^UTILITY(U,$J,358.6,70,15,2,0)
	;;=EXPIRATION DATE^12^2
	;;^UTILITY(U,$J,358.6,70,15,3,0)
	;;=POLICY NUMBER^20^3
	;;^UTILITY(U,$J,358.6,70,15,4,0)
	;;=GROUP NUMBER^17^4
	;;^UTILITY(U,$J,358.6,70,15,5,0)
	;;=GROUP NAME^20^5
	;;^UTILITY(U,$J,358.6,70,15,6,0)
	;;=NAME OF INSURED^30^6
	;;^UTILITY(U,$J,358.6,70,15,7,0)
	;;=HOLDER'S RELATIONSHIP^9^7
	;;^UTILITY(U,$J,358.6,71,0)
	;;=GMRA PATIENT'S ALLERGIES^ALLERGY^IBDFN2^GEN. MED. REC. - ALLERGIES^1^3^4^1^1^^^1^^1^1^^
	;;^UTILITY(U,$J,358.6,71,1,0)
	;;=^^7^7^2951023^
	;;^UTILITY(U,$J,358.6,71,1,1,0)
	;;=Used to display a list of the patient's allergies, both true and adverse
	;;^UTILITY(U,$J,358.6,71,1,2,0)
	;;=reactions, verified and unverified. Data returned:
	;;^UTILITY(U,$J,358.6,71,1,3,0)
	;;=  allergy name
	;;^UTILITY(U,$J,358.6,71,1,4,0)
	;;=  type of allergen
	;;^UTILITY(U,$J,358.6,71,1,5,0)
	;;=  type (code only - F=food, D=drug,O=other)
	;;^UTILITY(U,$J,358.6,71,1,6,0)
	;;=  verified? YES/NO
	;;^UTILITY(U,$J,358.6,71,1,7,0)
	;;=  true allergy? YES/NO
	;;^UTILITY(U,$J,358.6,71,2)
	;;=ALLERGY NAME^30^^^^^^^^^^^^^^^1^0
	;;^UTILITY(U,$J,358.6,71,3)
	;;=ALLERGIES ALLERGY PATIENT
	;;^UTILITY(U,$J,358.6,71,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,71,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,71,15,0)
	;;=^357.615I^5^4
	;;^UTILITY(U,$J,358.6,71,15,2,0)
	;;=TYPE OF ALLERGEN^5^2
	;;^UTILITY(U,$J,358.6,71,15,3,0)
	;;=TYPE (F=FOOD,D=DRUG,O=OTHER)^1^3
	;;^UTILITY(U,$J,358.6,71,15,4,0)
	;;=VERIFIED? (YES/NO)^3^4
	;;^UTILITY(U,$J,358.6,71,15,5,0)
	;;=TRUE ALLERGY? (YES/NO)^3^5
	;;^UTILITY(U,$J,358.6,72,0)
	;;=PX SELECT EDUCATION TOPICS^EDTOP^IBDFN10^PATIENT CARE ENCOUNTER^0^3^2^^0^0^^1^73^^^
	;;^UTILITY(U,$J,358.6,72,1,0)
	;;=^^1^1^2960403^^
	;;^UTILITY(U,$J,358.6,72,1,1,0)
	;;=Allows education topics from the EDUCATION TOPICS file to be selected.
	;;^UTILITY(U,$J,358.6,72,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,358.6,72,3)
	;;=EDUCATION TOPICS TRAINING
	;;^UTILITY(U,$J,358.6,72,11)
	;;=D TESTEDT^PXAPIIB
	;;^UTILITY(U,$J,358.6,72,15,0)
	;;=^357.615I^2^2
	;;^UTILITY(U,$J,358.6,72,15,1,0)
	;;=Topic^30^2^^EDUCATION TOPIC
	;;^UTILITY(U,$J,358.6,72,15,2,0)
	;;=Mneumonic^6^3
	;;^UTILITY(U,$J,358.6,72,16)
	;;=o
	;;^UTILITY(U,$J,358.6,73,0)
	;;=PX INPUT EDUCATION TOPICS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
	;;^UTILITY(U,$J,358.6,73,1,0)
	;;=^^1^1^2950825^
	;;^UTILITY(U,$J,358.6,73,1,1,0)
	;;=Used for inputting education topics that the patient was instructed in.
	;;^UTILITY(U,$J,358.6,73,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,358.6,73,3)
	;;=EDUCATION TOPICS TRAINING

IBDPI00O
IBDPI00O	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,73,10)
	;;=Enter a Patient Education Topic.
	;;^UTILITY(U,$J,358.6,73,11)
	;;=D TESTEDT^PXAPIIB
	;;^UTILITY(U,$J,358.6,73,12)
	;;=PATIENT ED^1^^^2^^^
	;;^UTILITY(U,$J,358.6,73,13,0)
	;;=^357.613V^5^5
	;;^UTILITY(U,$J,358.6,73,13,1,0)
	;;=10;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,73,13,2,0)
	;;=11;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,73,13,3,0)
	;;=12;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,73,13,4,0)
	;;=13;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,73,13,5,0)
	;;=14;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,73,14)
	;;=S Y=$$DSPLYED^PXAPIIB(Y)
	;;^UTILITY(U,$J,358.6,73,17)
	;;=D SLCTED^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,73,19)
	;;=D ED^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,74,0)
	;;=PX SELECT IMMUNIZATIONS^IMM^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^0^^^1^75
	;;^UTILITY(U,$J,358.6,74,1,0)
	;;=^^1^1^2950911^
	;;^UTILITY(U,$J,358.6,74,1,1,0)
	;;=Allows immunizations form the IMMUNIZATION file to be selected.
	;;^UTILITY(U,$J,358.6,74,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,358.6,74,3)
	;;=IMMUNIZATIONS SHOTS IMMUNIZE
	;;^UTILITY(U,$J,358.6,74,11)
	;;=D TESTIMM^PXAPIIB
	;;^UTILITY(U,$J,358.6,74,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,358.6,74,15,1,0)
	;;=Immunization Name^45^2^^IMMUNIZATION
	;;^UTILITY(U,$J,358.6,74,15,2,0)
	;;=Short Name^10^3
	;;^UTILITY(U,$J,358.6,74,15,3,0)
	;;=Code^2^4
	;;^UTILITY(U,$J,358.6,75,0)
	;;=PX INPUT IMMUNIZATION^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
	;;^UTILITY(U,$J,358.6,75,1,0)
	;;=^^1^1^2950825^
	;;^UTILITY(U,$J,358.6,75,1,1,0)
	;;=Used for inputting immunizations administered to the patient.
	;;^UTILITY(U,$J,358.6,75,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,358.6,75,3)
	;;=IMMUNIZATIONS SHOTS
	;;^UTILITY(U,$J,358.6,75,10)
	;;=Enter a Patient Immunization.
	;;^UTILITY(U,$J,358.6,75,11)
	;;=D TESTIMM^PXAPIIB
	;;^UTILITY(U,$J,358.6,75,12)
	;;=IMMUNIZATION^1^1^^^^^
	;;^UTILITY(U,$J,358.6,75,14)
	;;=S Y=$$DSPLYIM^PXAPIIB(Y)
	;;^UTILITY(U,$J,358.6,75,17)
	;;=D SLCTIMM^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,75,19)
	;;=D IMMUN^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,76,0)
	;;=PX SELECT EXAMS^EXAM^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^0^^^1^77^^^
	;;^UTILITY(U,$J,358.6,76,1,0)
	;;=^^1^1^2950911^
	;;^UTILITY(U,$J,358.6,76,1,1,0)
	;;=Allows exams from the EXAM file to be selected.
	;;^UTILITY(U,$J,358.6,76,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,358.6,76,3)
	;;=EXAMS EXAMINATIONS PATIENT
	;;^UTILITY(U,$J,358.6,76,11)
	;;=D TESTEXM^PXAPIIB
	;;^UTILITY(U,$J,358.6,76,15,0)
	;;=^357.615I^3^3
	;;^UTILITY(U,$J,358.6,76,15,1,0)
	;;=Exam Name^30^2^^EXAM
	;;^UTILITY(U,$J,358.6,76,15,2,0)
	;;=Code^2^3
	;;^UTILITY(U,$J,358.6,76,15,3,0)
	;;=Sex Specific^6^4^^FOR
	;;^UTILITY(U,$J,358.6,77,0)
	;;=PX INPUT EXAMS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
	;;^UTILITY(U,$J,358.6,77,1,0)
	;;=^^1^1^2950921^^
	;;^UTILITY(U,$J,358.6,77,1,1,0)
	;;=Used for inputting exams that were performed on the patient.
	;;^UTILITY(U,$J,358.6,77,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,358.6,77,3)
	;;=EXAMS EXAMINATIONS
	;;^UTILITY(U,$J,358.6,77,10)
	;;=Enter a Patient Exam.
	;;^UTILITY(U,$J,358.6,77,11)
	;;=D TESTEXM^PXAPIIB
	;;^UTILITY(U,$J,358.6,77,12)
	;;=EXAM^1^^^2^^^
	;;^UTILITY(U,$J,358.6,77,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,358.6,77,13,1,0)
	;;=15;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,77,13,2,0)
	;;=16;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,77,14)
	;;=S Y=$$DSPLYEX^PXAPIIB(Y)
	;;^UTILITY(U,$J,358.6,77,17)
	;;=D SLECTEX^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,77,19)
	;;=D EXAM^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,78,0)
	;;=PX SELECT TREATMENTS^TRTMNT^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^0^^^1^
	;;^UTILITY(U,$J,358.6,78,1,0)
	;;=^^1^1^2950911^
	;;^UTILITY(U,$J,358.6,78,1,1,0)
	;;=Allows treatments found in the TREATMENT file to be selected.
	;;^UTILITY(U,$J,358.6,78,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,358.6,78,3)
	;;=TREATMENTS PATIENT
	;;^UTILITY(U,$J,358.6,78,11)
	;;=D TESTTRT^PXAPIIB
	;;^UTILITY(U,$J,358.6,78,15,0)
	;;=^357.615I^2^2
	;;^UTILITY(U,$J,358.6,78,15,1,0)
	;;=Treatment Name^30^2^^TREATMENT
	;;^UTILITY(U,$J,358.6,78,15,2,0)
	;;=Code^6^3
	;;^UTILITY(U,$J,358.6,79,0)
	;;=PX SELECT SKIN TESTS^SKINTST^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^0^^^1^80
	;;^UTILITY(U,$J,358.6,79,1,0)
	;;=^^1^1^2960228^^
	;;^UTILITY(U,$J,358.6,79,1,1,0)
	;;=Allows skin tests found in the SKIN TEST file to be selected.
	;;^UTILITY(U,$J,358.6,79,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,358.6,79,3)
	;;=SKIN TESTS
	;;^UTILITY(U,$J,358.6,79,11)
	;;=D TESTSK^PXAPIIB
	;;^UTILITY(U,$J,358.6,79,15,0)
	;;=^357.615I^2^2
	;;^UTILITY(U,$J,358.6,79,15,1,0)
	;;=Skin Test Name^30^2^^SKIN TEST

IBDPI00P
IBDPI00P	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,79,15,2,0)
	;;=code^2^3
	;;^UTILITY(U,$J,358.6,80,0)
	;;=PX INPUT SKIN TESTS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
	;;^UTILITY(U,$J,358.6,80,1,0)
	;;=^^1^1^2950825^
	;;^UTILITY(U,$J,358.6,80,1,1,0)
	;;=Used for inputting skin tests performed on the patient.
	;;^UTILITY(U,$J,358.6,80,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,358.6,80,3)
	;;=SKIN TESTS
	;;^UTILITY(U,$J,358.6,80,10)
	;;=Enter a Patient Skin Test.
	;;^UTILITY(U,$J,358.6,80,11)
	;;=D TESTSK^PXAPIIB
	;;^UTILITY(U,$J,358.6,80,12)
	;;=SKIN TEST^1^^^^^^
	;;^UTILITY(U,$J,358.6,80,14)
	;;=S Y=$$DSPLYSK^PXAPIIB(Y)
	;;^UTILITY(U,$J,358.6,80,17)
	;;=D SLCTSKN^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,80,19)
	;;=D ST^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,81,0)
	;;=PX SELECT HEALTH FACTORS^HF^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^0^^^1^82
	;;^UTILITY(U,$J,358.6,81,1,0)
	;;=^^1^1^2951208^^^
	;;^UTILITY(U,$J,358.6,81,1,1,0)
	;;=Allows health factors from the HEALTH FACTORS file to be selected.
	;;^UTILITY(U,$J,358.6,81,2)
	;;=Internal Number^9^^^^^^^^^^^^^^^0^0
	;;^UTILITY(U,$J,358.6,81,3)
	;;=PATIENT HEALTH FACTORS
	;;^UTILITY(U,$J,358.6,81,11)
	;;=D TESTHF^PXAPIIB
	;;^UTILITY(U,$J,358.6,81,15,0)
	;;=^357.615I^4^4
	;;^UTILITY(U,$J,358.6,81,15,1,0)
	;;=Health Factor Name^30^2^^HEALTH FACTOR
	;;^UTILITY(U,$J,358.6,81,15,2,0)
	;;=Code^5^3
	;;^UTILITY(U,$J,358.6,81,15,3,0)
	;;=Short Name^10^5^^
	;;^UTILITY(U,$J,358.6,81,15,4,0)
	;;=Sex Specific^6^6^^FOR
	;;^UTILITY(U,$J,358.6,81,16)
	;;=n^^^^n
	;;^UTILITY(U,$J,358.6,82,0)
	;;=PX INPUT HEALTH FACTORS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
	;;^UTILITY(U,$J,358.6,82,1,0)
	;;=^^1^1^2951208^^^
	;;^UTILITY(U,$J,358.6,82,1,1,0)
	;;=Used for inputting health factors determined to apply to the patient.
	;;^UTILITY(U,$J,358.6,82,2)
	;;=^^^^^^^^^^^^^^^^^0
	;;^UTILITY(U,$J,358.6,82,3)
	;;=HEALTH FACTORS
	;;^UTILITY(U,$J,358.6,82,10)
	;;=Enter a Patient Health Factor.
	;;^UTILITY(U,$J,358.6,82,11)
	;;=D TESTHF^PXAPIIB
	;;^UTILITY(U,$J,358.6,82,12)
	;;=HEALTH FACTORS^1^^^2^^^
	;;^UTILITY(U,$J,358.6,82,13,0)
	;;=^357.613V^3^3
	;;^UTILITY(U,$J,358.6,82,13,1,0)
	;;=17;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,82,13,2,0)
	;;=18;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,82,13,3,0)
	;;=19;IBD(358.98,^^0
	;;^UTILITY(U,$J,358.6,82,14)
	;;=S Y=$$DSPLYHF^PXAPIIB(Y)
	;;^UTILITY(U,$J,358.6,82,17)
	;;=D SLCTHF^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,82,19)
	;;=D HF^IBDFN14(X)
	;;^UTILITY(U,$J,358.6,83,0)
	;;=PX INPUT CHECKOUT TIME^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^H
	;;^UTILITY(U,$J,358.6,83,1,0)
	;;=^^1^1^2950913^^^^
	;;^UTILITY(U,$J,358.6,83,1,1,0)
	;;=Allows checkout time to be entered.
	;;^UTILITY(U,$J,358.6,83,3)
	;;=CHECKOUT TIME
	;;^UTILITY(U,$J,358.6,83,12)
	;;=ENCOUNTER^14^^^^^^
	;;^UTILITY(U,$J,358.6,83,13,0)
	;;=^357.613V^2^2
	;;^UTILITY(U,$J,358.6,83,13,1,0)
	;;=4;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,83,13,2,0)
	;;=5;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,84,0)
	;;=PX INPUT VITALS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^H
	;;^UTILITY(U,$J,358.6,84,1,0)
	;;=^^1^1^2960307^^^
	;;^UTILITY(U,$J,358.6,84,1,1,0)
	;;=Used for inputting vitals recorded at the visit.
	;;^UTILITY(U,$J,358.6,84,3)
	;;=VITALS
	;;^UTILITY(U,$J,358.6,84,12)
	;;=VITALS^2^^^^^^
	;;^UTILITY(U,$J,358.6,84,13,0)
	;;=^357.613V^16^16
	;;^UTILITY(U,$J,358.6,84,13,1,0)
	;;=6;IBE(358.99,^^0^^^^^^^^
	;;^UTILITY(U,$J,358.6,84,13,2,0)
	;;=7;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,84,13,3,0)
	;;=8;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,84,13,4,0)
	;;=9;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,84,13,5,0)
	;;=10;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,84,13,6,0)
	;;=11;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,84,13,7,0)
	;;=12;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,84,13,8,0)
	;;=13;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,84,13,9,0)
	;;=14;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,84,13,10,0)
	;;=15;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,84,13,11,0)
	;;=16;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,84,13,12,0)
	;;=17;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,84,13,13,0)
	;;=18;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,84,13,14,0)
	;;=19;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,84,13,15,0)
	;;=20;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,84,13,16,0)
	;;=21;IBE(358.99,^^0
	;;^UTILITY(U,$J,358.6,84,18)
	;;=D HNDPR^IBDFDE3(.IBDSEL,.IBDF)
	;;^UTILITY(U,$J,358.6,85,0)
	;;=PX INPUT VISIT CLASSIFICATION^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^MP
	;;^UTILITY(U,$J,358.6,85,1,0)
	;;=^^3^3^2960202^^^
	;;^UTILITY(U,$J,358.6,85,1,1,0)
	;;=Used for inputting visit classifications. Examples classifications are
	;;^UTILITY(U,$J,358.6,85,1,2,0)
	;;=service connected, related to Agent Orange exposure, ionizing
	;;^UTILITY(U,$J,358.6,85,1,3,0)
	;;=radiation exposure, or environmental contaminants exposure. 

IBDPI00Q
IBDPI00Q	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,85,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,85,3)
	;;=CLASSIFICATIONS AGENT ORANGE IONIZING RADIATION PERSIAN GULF ENVIRONMENTAL CONTAMINANTS SERVICE CONNECTED
	;;^UTILITY(U,$J,358.6,85,10)
	;;=Enter a classification.
	;;^UTILITY(U,$J,358.6,85,12)
	;;=ENCOUNTER
	;;^UTILITY(U,$J,358.6,85,13,0)
	;;=^357.613V^4^4
	;;^UTILITY(U,$J,358.6,85,13,1,0)
	;;=6;IBD(358.98,^^1^^^^^9
	;;^UTILITY(U,$J,358.6,85,13,2,0)
	;;=3;IBD(358.98,^^1^^^^^6
	;;^UTILITY(U,$J,358.6,85,13,3,0)
	;;=4;IBD(358.98,^^1^^^^^7
	;;^UTILITY(U,$J,358.6,85,13,4,0)
	;;=5;IBD(358.98,^^1^^^^^8
	;;^UTILITY(U,$J,358.6,85,17)
	;;=D SLCTCLS^IBDFN12(PI,.X)
	;;^UTILITY(U,$J,358.6,86,0)
	;;=DG APPOINTMENT DISPOSITION^CHECKOUT^IBDFN10^SCHEDULING^^3^4^^1^^^1^^0^1^S
	;;^UTILITY(U,$J,358.6,86,1,0)
	;;=^^2^2^2950922^
	;;^UTILITY(U,$J,358.6,86,1,1,0)
	;;=*** THIS IS NOT CURRENTLY SCANNABLE ***
	;;^UTILITY(U,$J,358.6,86,1,2,0)
	;;=Allows a visit disposition to be choosen for checkout.
	;;^UTILITY(U,$J,358.6,86,2)
	;;=CODE^1^^^^^^^^^^^^^^^0^1
	;;^UTILITY(U,$J,358.6,86,3)
	;;=VISIT APPOINTMENT CHECKOUT DISPOSITION ENCOUNTER
	;;^UTILITY(U,$J,358.6,86,15,0)
	;;=^357.615I^1^1
	;;^UTILITY(U,$J,358.6,86,15,1,0)
	;;=APPOINTMENT DISPOSITION^12^2
	;;^UTILITY(U,$J,358.6,86,16)
	;;=n^^^^n
	;;^UTILITY(U,$J,358.6,87,0)
	;;=PX INPUT VISIT TYPE^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
	;;^UTILITY(U,$J,358.6,87,1,0)
	;;=^^1^1^2951101^
	;;^UTILITY(U,$J,358.6,87,1,1,0)
	;;=Used for inputting the visit type that applies to the visit.
	;;^UTILITY(U,$J,358.6,87,2)
	;;=^^^^^^^^^^^^^^^^^1
	;;^UTILITY(U,$J,358.6,87,3)
	;;=VISIT TYPE OF VISIT
	;;^UTILITY(U,$J,358.6,87,9)
	;;=D INPUTCPT^IBDFN8(.X)
	;;^UTILITY(U,$J,358.6,87,10)
	;;=Enter an active Visit Type code.
	;;^UTILITY(U,$J,358.6,87,11)
	;;=D TESTVST^IBDFN7
	;;^UTILITY(U,$J,358.6,87,12)
	;;=ENCOUNTER^5
	;;^UTILITY(U,$J,358.6,87,14)
	;;=S Y=$$DSPLYCPT^IBDFN9(X)
	;;^UTILITY(U,$J,358.6,87,17)
	;;=D SLCTVST^IBDFN12(.X)
	;;^UTILITY(U,$J,358.6,87,19)
	;;=D VST^IBDFN14(X)

IBDPI00R
IBDPI00R	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.98)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.98,0,"GL")
	;;=^IBD(358.98,
	;;^DIC("B","IMP/EXP AICS DATA QUALIFIERS",358.98)
	;;=
	;;^DIC(358.98,"%D",0)
	;;=^^1^1^2950927^^^
	;;^DIC(358.98,"%D",1,0)
	;;=Used by the import/export utility of the encounter forms as a workspace.
	;;^DD(358.98,0)
	;;=FIELD^^.03^3
	;;^DD(358.98,0,"DDA")
	;;=N
	;;^DD(358.98,0,"DT")
	;;=2950717
	;;^DD(358.98,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(358.98,0,"IX","B",358.98,.01)
	;;=
	;;^DD(358.98,0,"NM","IMP/EXP AICS DATA QUALIFIERS")
	;;=
	;;^DD(358.98,0,"PT",358.22,.09)
	;;=
	;;^DD(358.98,0,"PT",358.613,.01)
	;;=
	;;^DD(358.98,0,"PT",358.931,.09)
	;;=
	;;^DD(358.98,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.98,.01,1,0)
	;;=^.1
	;;^DD(358.98,.01,1,1,0)
	;;=358.98^B
	;;^DD(358.98,.01,1,1,1)
	;;=S ^IBD(358.98,"B",$E(X,1,30),DA)=""
	;;^DD(358.98,.01,1,1,2)
	;;=K ^IBD(358.98,"B",$E(X,1,30),DA)
	;;^DD(358.98,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.98,.02,0)
	;;=CODE^RF^^0;2^K:$L(X)>3!($L(X)<1) X
	;;^DD(358.98,.02,3)
	;;=Answer must be 1-3 characters in length.
	;;^DD(358.98,.02,"DT")
	;;=2941018
	;;^DD(358.98,.03,0)
	;;=RECOMMENDED HEADER^F^^0;3^K:$L(X)>12!($L(X)<1) X
	;;^DD(358.98,.03,3)
	;;=Answer must be 1-12 characters in length.
	;;^DD(358.98,.03,21,0)
	;;=^^2^2^2950717^
	;;^DD(358.98,.03,21,1,0)
	;;=The recommended header will be used as the default header when designing a
	;;^DD(358.98,.03,21,2,0)
	;;=form.
	;;^DD(358.98,.03,"DT")
	;;=2950717

IBDPI00S
IBDPI00S	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.98)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.98)
	;;=^IBD(358.98,
	;;^UTILITY(U,$J,358.98,0)
	;;=IMP/EXP AICS DATA QUALIFIERS^358.98I^19^19
	;;^UTILITY(U,$J,358.98,1,0)
	;;=PRIMARY^P^P
	;;^UTILITY(U,$J,358.98,2,0)
	;;=SECONDARY^S^S
	;;^UTILITY(U,$J,358.98,3,0)
	;;=SERVICE CONNECTED^1^SC
	;;^UTILITY(U,$J,358.98,4,0)
	;;=AGENT ORANGE RELATED^1^AO
	;;^UTILITY(U,$J,358.98,5,0)
	;;=IONIZING RADIATION RELATED^1^IR
	;;^UTILITY(U,$J,358.98,6,0)
	;;=ENVIRONMENTAL CONTAMINANTS RELATED^1^EC
	;;^UTILITY(U,$J,358.98,7,0)
	;;=ADD TO PROBLEM LIST^1^ADD
	;;^UTILITY(U,$J,358.98,8,0)
	;;=ACTIVE^A^A
	;;^UTILITY(U,$J,358.98,9,0)
	;;=INACTIVE^I^I
	;;^UTILITY(U,$J,358.98,10,0)
	;;=POOR UNDERSTANDING^1^POOR
	;;^UTILITY(U,$J,358.98,11,0)
	;;=FAIR UNDERSTANDING^2^FAIR
	;;^UTILITY(U,$J,358.98,12,0)
	;;=GOOD UNDERSTANDING^3^GOOD
	;;^UTILITY(U,$J,358.98,13,0)
	;;=UNDERSTANDING NOT ASSESSED^4^N/A
	;;^UTILITY(U,$J,358.98,14,0)
	;;=PATIENT ED REFUSED^5^REFUSED
	;;^UTILITY(U,$J,358.98,15,0)
	;;=ABNORMAL RESULT^A^ABNORM
	;;^UTILITY(U,$J,358.98,16,0)
	;;=NORMAL RESULT^N^NORM
	;;^UTILITY(U,$J,358.98,17,0)
	;;=MINIMAL SEVERITY^M^MINIMAL
	;;^UTILITY(U,$J,358.98,18,0)
	;;=MODERATE SEVERITY^MO^MODERATE
	;;^UTILITY(U,$J,358.98,19,0)
	;;=HEAVY SEVERITY^H^SEVERE

IBDPI00T
IBDPI00T	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.99)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.99,0,"GL")
	;;=^IBE(358.99,
	;;^DIC("B","IMP/EXP AICS DATA ELEMENTS",358.99)
	;;=
	;;^DIC(358.99,"%D",0)
	;;=^^1^1^2950914^^
	;;^DIC(358.99,"%D",1,0)
	;;=Used as a workspace for the import/export utility.
	;;^DD(358.99,0)
	;;=FIELD^^10.04^15
	;;^DD(358.99,0,"DDA")
	;;=N
	;;^DD(358.99,0,"DT")
	;;=2950928
	;;^DD(358.99,0,"IX","B",358.99,.01)
	;;=
	;;^DD(358.99,0,"NM","IMP/EXP AICS DATA ELEMENTS")
	;;=
	;;^DD(358.99,0,"PT",357.6,13)
	;;=
	;;^DD(358.99,0,"PT",357.613,.01)
	;;=
	;;^DD(358.99,0,"PT",358.6,16.2)
	;;=
	;;^DD(358.99,0,"PT",358.6,16.6)
	;;=
	;;^DD(358.99,0,"PT",358.613,.01)
	;;=
	;;^DD(358.99,.01,0)
	;;=DHCP DATA TYPE^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.99,.01,1,0)
	;;=^.1
	;;^DD(358.99,.01,1,1,0)
	;;=358.99^B
	;;^DD(358.99,.01,1,1,1)
	;;=S ^IBE(358.99,"B",$E(X,1,30),DA)=""
	;;^DD(358.99,.01,1,1,2)
	;;=K ^IBE(358.99,"B",$E(X,1,30),DA)
	;;^DD(358.99,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.99,.01,21,0)
	;;=^^2^2^2950418^
	;;^DD(358.99,.01,21,1,0)
	;;=A type of data that is recognized as such within the framework of scanning
	;;^DD(358.99,.01,21,2,0)
	;;=DHCP forms and which requires its own Paper Keyboard description.
	;;^DD(358.99,.01,"DT")
	;;=2950418
	;;^DD(358.99,.02,0)
	;;=MAXIMUM LENGTH FOR INPUT^RNJ2,0^^0;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.99,.02,3)
	;;=What is the maximum number of characters that can be input for this data?
	;;^DD(358.99,.02,21,0)
	;;=^^1^1^2950808^
	;;^DD(358.99,.02,21,1,0)
	;;=The maximum number of characters that can be input for this data type.
	;;^DD(358.99,.02,"DT")
	;;=2950504
	;;^DD(358.99,.05,0)
	;;=PRINT FORMAT^F^^0;5^K:$L(X)>64!($L(X)<1) X
	;;^DD(358.99,.05,3)
	;;=Use an underscore,'_',to indicate positions that the user should fill in. Use other characters to pre-fillthat position.
	;;^DD(358.99,.05,21,0)
	;;=^^4^4^2950811^^^
	;;^DD(358.99,.05,21,1,0)
	;;=Used to print the field. Fields for certain types of data, such
	;;^DD(358.99,.05,21,2,0)
	;;=as telephone numbers and Social Security numbers usually require certain
	;;^DD(358.99,.05,21,3,0)
	;;=formats, such as *********** for an SSN. The PRINT FORMAT allows the
	;;^DD(358.99,.05,21,4,0)
	;;=required format to be specified.
	;;^DD(358.99,.05,"DT")
	;;=2950811
	;;^DD(358.99,.06,0)
	;;=SPACE ALLOCATION^RNJ2,0^^0;6^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.99,.06,3)
	;;=What is the maximum number of characters in this field?
	;;^DD(358.99,.06,21,0)
	;;=^^2^2^2950808^^
	;;^DD(358.99,.06,21,1,0)
	;;=This is used to determine how much space on the form to allocate for the 
	;;^DD(358.99,.06,21,2,0)
	;;=hand print.
	;;^DD(358.99,.06,"DT")
	;;=2950504
	;;^DD(358.99,.07,0)
	;;=REQUIRED CONFIDENCE^NJ2,0^^0;7^K:+X'=X!(X>11)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.99,.07,3)
	;;=Enter a number between 0 and 11. 0 means that the data will not require validation, 11 means the field must always be validated.
	;;^DD(358.99,.07,21,0)
	;;=^^2^2^2950808^
	;;^DD(358.99,.07,21,1,0)
	;;=This is the confidence level (as defined by Paper Keyboard) that should be
	;;^DD(358.99,.07,21,2,0)
	;;=applied to this data type.
	;;^DD(358.99,.07,"DT")
	;;=2950601
	;;^DD(358.99,.1,0)
	;;=RECOMMENDED LABEL^F^^0;10^K:$L(X)>30!($L(X)<1) X
	;;^DD(358.99,.1,3)
	;;=Answer must be 1-30 characters in length.
	;;^DD(358.99,.1,21,0)
	;;=^^1^1^2950817^^^
	;;^DD(358.99,.1,21,1,0)
	;;=Will be used as a default label.
	;;^DD(358.99,.1,"DT")
	;;=2950817
	;;^DD(358.99,.11,0)
	;;=LABEL FOR UNIT OF MEASUREMENT^F^^0;11^K:$L(X)>20!($L(X)<1) X
	;;^DD(358.99,.11,3)
	;;=Answer must be 1-20 characters in length.
	;;^DD(358.99,.11,21,0)
	;;=^^1^1^2950815^^^
	;;^DD(358.99,.11,21,1,0)
	;;=The unit of measurement as defined by the PCE Generic Device Interface.
	;;^DD(358.99,.11,"DT")
	;;=2950815
	;;^DD(358.99,.12,0)
	;;=PCE GDI VITALS TYPE^F^^0;12^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.99,.12,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.99,.12,21,0)
	;;=^^1^1^2950811^
	;;^DD(358.99,.12,21,1,0)
	;;=The type of vitals measurement - used only for the PCE GDI VITALS node.
	;;^DD(358.99,.12,"DT")
	;;=2950811
	;;^DD(358.99,.13,0)
	;;=PCE GDI VITALS UNITS^F^^0;13^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.99,.13,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.99,.13,21,0)
	;;=^^1^1^2950811^
	;;^DD(358.99,.13,21,1,0)
	;;=The unit of measurement - used only for the PCE GDI VITALS node.
	;;^DD(358.99,.13,"DT")
	;;=2950811
	;;^DD(358.99,1,0)
	;;=PCE GDI INPUT TRANSFORM^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.99,1,3)
	;;=The M code should set X to the value to be passed, else kill X if it is not valid.

IBDPI00U
IBDPI00U	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQ(358.99)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.99,1,9)
	;;=@
	;;^DD(358.99,1,21,0)
	;;=^^4^4^2950908^
	;;^DD(358.99,1,21,1,0)
	;;=The input transform should change X into a value that can be passed to the
	;;^DD(358.99,1,21,2,0)
	;;=PCE Generic Device Interface. X should be killed if it not be transformed.
	;;^DD(358.99,1,21,3,0)
	;;=Note that the return value of X need not meet all of PCE's validation
	;;^DD(358.99,1,21,4,0)
	;;=requirments - for example, X may be an inactive code.
	;;^DD(358.99,1,"DT")
	;;=2950908
	;;^DD(358.99,2,0)
	;;=HELP FOR INPUT TRANSFORM^F^^2;1^K:$L(X)>245!($L(X)<1) X
	;;^DD(358.99,2,3)
	;;=Enter a line of help that will assist the user in entering valid data.
	;;^DD(358.99,2,21,0)
	;;=^^1^1^2950808^
	;;^DD(358.99,2,21,1,0)
	;;=Help for the user.
	;;^DD(358.99,2,"DT")
	;;=2950426
	;;^DD(358.99,10.01,0)
	;;=PAPER KEYBOARD DATA TYPE^S^a:ALPHA (any ASCII);d:DATE (MM/DD/YY);f:FLOATING POINT NUMBER;i:INTEGER;t:TIME(HHMM, VA FileMan format);^10;1^Q
	;;^DD(358.99,10.01,3)
	;;=Choose the most appropriate data type from the list.
	;;^DD(358.99,10.01,21,0)
	;;=^^4^4^2950928^
	;;^DD(358.99,10.01,21,1,0)
	;;=These are the data types provided for by Paper Keyboard.  The ALPHA
	;;^DD(358.99,10.01,21,2,0)
	;;=data type can be further described by a Paper Keyboard picture clause.
	;;^DD(358.99,10.01,21,3,0)
	;;=The Integer data type does not apply if the field can contain spaces or
	;;^DD(358.99,10.01,21,4,0)
	;;=punctuation other than a '-'.
	;;^DD(358.99,10.01,"DT")
	;;=2950928
	;;^DD(358.99,10.02,0)
	;;=PAPER KEYBOARD PICTURE^F^^10;2^K:$L(X)>60!($L(X)<1) X
	;;^DD(358.99,10.02,3)
	;;=Answer must be 1-60 characters in length.
	;;^DD(358.99,10.02,21,0)
	;;=^^6^6^2950928^
	;;^DD(358.99,10.02,21,1,0)
	;;=Enter a picture clause specific to Paper Keyboard.  A picture clause
	;;^DD(358.99,10.02,21,2,0)
	;;=describes the intended format for the data type.  This is similar to
	;;^DD(358.99,10.02,21,3,0)
	;;=an M pattern match.  For example, a CPT code is 5 characters, the
	;;^DD(358.99,10.02,21,4,0)
	;;=first character may be an alpha or numeric followed by 4 numeric
	;;^DD(358.99,10.02,21,5,0)
	;;=characaters.  To represent this picture in Paper Keyboard, one would
	;;^DD(358.99,10.02,21,6,0)
	;;=enter the picture X####.
	;;^DD(358.99,10.02,"DT")
	;;=2950928
	;;^DD(358.99,10.03,0)
	;;=DICTIONARY^F^^10;3^K:$L(X)>12!($L(X)<1) X
	;;^DD(358.99,10.03,3)
	;;=Answer must be 1-12 characters in length.
	;;^DD(358.99,10.03,21,0)
	;;=^^3^3^2950928^
	;;^DD(358.99,10.03,21,1,0)
	;;=Enter the name of a Paper Keyboard Dictionary.  A dictionary
	;;^DD(358.99,10.03,21,2,0)
	;;=can be applied to ICR data types to improve the recognition of ICR
	;;^DD(358.99,10.03,21,3,0)
	;;=fields.  This is the name of the file that Paper Keyboard uses.
	;;^DD(358.99,10.03,"DT")
	;;=2950928
	;;^DD(358.99,10.04,0)
	;;=PK PICTURES FOR SUBFIELDS^F^^10;4^K:$L(X)>120!($L(X)<1) X
	;;^DD(358.99,10.04,3)
	;;=Answer must be 1-120 characters in length.
	;;^DD(358.99,10.04,21,0)
	;;=^^7^7^2950928^
	;;^DD(358.99,10.04,21,1,0)
	;;=When using print formats for paper keyboard you should enter the 
	;;^DD(358.99,10.04,21,2,0)
	;;=picture clause in this field.  For example, the print format for
	;;^DD(358.99,10.04,21,3,0)
	;;=a SSN might look like ___-__-____.  This would cause the dashes to
	;;^DD(358.99,10.04,21,4,0)
	;;=be printed and user input to be accepted in three subfields with
	;;^DD(358.99,10.04,21,5,0)
	;;=lenghts of 3, 2, and 4 numerics.  You would then enter the picture
	;;^DD(358.99,10.04,21,6,0)
	;;=in this field as ###-##-####.  (note the # sign is used as the
	;;^DD(358.99,10.04,21,7,0)
	;;=picture for numerics)
	;;^DD(358.99,10.04,"DT")
	;;=2950928

IBDPI00V
IBDPI00V	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	Q:'DIFQR(358.99)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.99)
	;;=^IBE(358.99,
	;;^UTILITY(U,$J,358.99,0)
	;;=IMP/EXP AICS DATA ELEMENTS^358.99^21^21
	;;^UTILITY(U,$J,358.99,1,0)
	;;=SHORT NARRATIVE (30 CHAR)^^^^_______________________________^30^11^^^^^NARR
	;;^UTILITY(U,$J,358.99,1,10)
	;;=a^^^################################
	;;^UTILITY(U,$J,358.99,2,0)
	;;=CPT-4 PROCEDURE CODE^5^^^^5^11^^^^^CPT-4
	;;^UTILITY(U,$J,358.99,2,1)
	;;=D INPUTCPT^IBDFN8(.X)
	;;^UTILITY(U,$J,358.99,2,10)
	;;=a^X####^
	;;^UTILITY(U,$J,358.99,3,0)
	;;=ICD-9 DIAGNOSIS CODE^7^^^____.__^7^11^^^^^ICD-9
	;;^UTILITY(U,$J,358.99,3,1)
	;;=D INPUTICD^IBDFN8(.X)
	;;^UTILITY(U,$J,358.99,3,10)
	;;=a^#F^^####.##
	;;^UTILITY(U,$J,358.99,4,0)
	;;=CHECKOUT DATE@TIME^11^^^____9_@____^11^11^^^Checkout:^mmddyy@hhmm^CODT
	;;^UTILITY(U,$J,358.99,4,1)
	;;=D CKOUT^IBDFN13(.X)
	;;^UTILITY(U,$J,358.99,4,10)
	;;=a
	;;^UTILITY(U,$J,358.99,5,0)
	;;=CHECKOUT TIME - DATE ASSUMED^4^^^____^4^11^^^Checkout:^hhmm^COTIME
	;;^UTILITY(U,$J,358.99,5,1)
	;;=D CKOUTTM^IBDFN13(.X,.IBFORMID)
	;;^UTILITY(U,$J,358.99,5,10)
	;;=t^
	;;^UTILITY(U,$J,358.99,6,0)
	;;=BODY TEMPERATURE^5^^^___._^5^11^^^Temperature:^Fahr^TMP^F
	;;^UTILITY(U,$J,358.99,6,10)
	;;=f^^^###.#
	;;^UTILITY(U,$J,358.99,7,0)
	;;=BLOOD PRESSURE^7^^^___/___^7^11^^^Blood Press.:^systolic/diastolic^BP
	;;^UTILITY(U,$J,358.99,7,10)
	;;=a^^^###/###
	;;^UTILITY(U,$J,358.99,8,0)
	;;=BODY WEIGHT^5^^^___._^5^11^^^Weight:^lbs^WT^LB
	;;^UTILITY(U,$J,358.99,8,10)
	;;=f^^^###.#
	;;^UTILITY(U,$J,358.99,9,0)
	;;=AUDIOMETRY - LEFT EAR^31^^^___/___/___/___/___/___/___/___^31^11^^^^lft ear^AUD
	;;^UTILITY(U,$J,358.99,9,10)
	;;=a^^^###/###/###/###/###/###/###/###
	;;^UTILITY(U,$J,358.99,10,0)
	;;=ABDOMINAL GIRTH^^^^___^3^11^^^Abdominal Girth:^in^AG^IN
	;;^UTILITY(U,$J,358.99,10,10)
	;;=i^^^###
	;;^UTILITY(U,$J,358.99,11,0)
	;;=AUDIOMETRY - RIGHT EAR^^^^___/___/___/___/___/___/___/___^31^11^^^^rt ear^AUD
	;;^UTILITY(U,$J,358.99,11,10)
	;;=a^^^###/###/###/###/###/###/###/###
	;;^UTILITY(U,$J,358.99,12,0)
	;;=FUNDAL HEIGHT^^^^__^2^11^^^Fundal Ht:^in^FH
	;;^UTILITY(U,$J,358.99,12,10)
	;;=a^^^##
	;;^UTILITY(U,$J,358.99,13,0)
	;;=FETAL HEART TONES^^^^___^3^11^^^Fetal Heart Tone:^per sec^FT
	;;^UTILITY(U,$J,358.99,13,10)
	;;=a^^^###
	;;^UTILITY(U,$J,358.99,14,0)
	;;=HEAD CIRCUMFERENCE^^^^__._^4^11^^^Head Circumference:^in^HC^IN
	;;^UTILITY(U,$J,358.99,14,10)
	;;=f^^^##.#
	;;^UTILITY(U,$J,358.99,15,0)
	;;=HEARING^^^^_^1^11^^^Hearing:^N=normal,A=abnormal^HE^
	;;^UTILITY(U,$J,358.99,15,10)
	;;=a^^^#
	;;^UTILITY(U,$J,358.99,16,0)
	;;=BODY HEIGHT^4^^^__._^4^11^^^Height:^in^HT^IN
	;;^UTILITY(U,$J,358.99,16,10)
	;;=f^^^##.#
	;;^UTILITY(U,$J,358.99,17,0)
	;;=PULSE^3^^^___^3^11^^^Pulse^per sec^PU
	;;^UTILITY(U,$J,358.99,17,10)
	;;=i^^^###
	;;^UTILITY(U,$J,358.99,18,0)
	;;=RESPIRATION^^^^__^2^11^^^Respiration:^per sec^RS
	;;^UTILITY(U,$J,358.99,18,10)
	;;=i^^^##
	;;^UTILITY(U,$J,358.99,19,0)
	;;=TONOMETRY^^^^__/__^5^11^^^Tonometry:^lft eye/rt eye^TON
	;;^UTILITY(U,$J,358.99,19,10)
	;;=a^^^##/##
	;;^UTILITY(U,$J,358.99,20,0)
	;;=VISION CORRECTED^^^^__/__^5^11^^^Vision Corrected:^lft eye/rt eye^VC
	;;^UTILITY(U,$J,358.99,20,10)
	;;=a^^^##/##
	;;^UTILITY(U,$J,358.99,21,0)
	;;=VISION UNCORRECTED^^^^__/__^5^11^^^Vison Uncorrected:^lft eye/rt eye^VU
	;;^UTILITY(U,$J,358.99,21,10)
	;;=a^^^##/##

IBDPI00W
IBDPI00W	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	I DSEC F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.6,0,"AUDIT")
	;;=@
	;;^DIC(358.6,0,"DD")
	;;=@
	;;^DIC(358.6,0,"DEL")
	;;=@
	;;^DIC(358.6,0,"LAYGO")
	;;=@
	;;^DIC(358.6,0,"RD")
	;;=@
	;;^DIC(358.6,0,"WR")
	;;=@
	;;^DIC(358.98,0,"AUDIT")
	;;=@
	;;^DIC(358.98,0,"DD")
	;;=@
	;;^DIC(358.98,0,"DEL")
	;;=@
	;;^DIC(358.98,0,"LAYGO")
	;;=@
	;;^DIC(358.98,0,"RD")
	;;=@
	;;^DIC(358.98,0,"WR")
	;;=@

IBDPI00X
IBDPI00X	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PKG",353,0)
	;;=AICS PACKAGE INTERFACES^IBDP^Needed for installation of AICS package interfaces.
	;;^UTILITY(U,$J,"PKG",353,1,0)
	;;=^^2^2^2960402^^^^
	;;^UTILITY(U,$J,"PKG",353,1,1,0)
	;;=Used to install the package interfaces. Because of the pointers which
	;;^UTILITY(U,$J,"PKG",353,1,2,0)
	;;=must be resolved, the IMP/EXP utilities workspace is used.
	;;^UTILITY(U,$J,"PKG",353,4,0)
	;;=^9.44PA^3^3
	;;^UTILITY(U,$J,"PKG",353,4,1,0)
	;;=358.99
	;;^UTILITY(U,$J,"PKG",353,4,1,222)
	;;=y^y^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",353,4,2,0)
	;;=358.98
	;;^UTILITY(U,$J,"PKG",353,4,2,222)
	;;=y^y^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",353,4,3,0)
	;;=358.6
	;;^UTILITY(U,$J,"PKG",353,4,3,222)
	;;=y^y^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",353,4,"B",358.6,3)
	;;=
	;;^UTILITY(U,$J,"PKG",353,4,"B",358.98,2)
	;;=
	;;^UTILITY(U,$J,"PKG",353,4,"B",358.99,1)
	;;=
	;;^UTILITY(U,$J,"PKG",353,5)
	;;=ALB
	;;^UTILITY(U,$J,"PKG",353,22,0)
	;;=^9.49I^1^1
	;;^UTILITY(U,$J,"PKG",353,22,1,0)
	;;=2.1^2960403
	;;^UTILITY(U,$J,"PKG",353,22,"B",2.1,1)
	;;=
	;;^UTILITY(U,$J,"PKG",353,"DEV")
	;;=
	;;^UTILITY(U,$J,"PKG",353,"INI")
	;;=IBDE2^
	;;^UTILITY(U,$J,"PKG",353,"INIT")
	;;=IBDPPT^
	;;^UTILITY(U,$J,"PKG",353,"PRE")
	;;=IBDPPRE^
	;;^UTILITY(U,$J,"SBF",358.6,358.6)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.61)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.613)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.615)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.66)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.67)
	;;=
	;;^UTILITY(U,$J,"SBF",358.98,358.98)
	;;=
	;;^UTILITY(U,$J,"SBF",358.99,358.99)
	;;=

IBDPINI1
IBDPINI1	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	; LOADS AND INDEXES DD'S
	;
	K DIF,DIK,D,DDF,DDT,DTO,D0,DLAYGO,DIC,DIDUZ,DIR,DA,DFR,DTN,DIX,DZ D DT^DICRW S %=1,U="^",DSEC=1
	S NO=$P("I 0^I $D(@X)#2,X[U",U,%) I %<1 K DIFQ Q
ASK	I %=1,$D(DIFQ(0)) W !,"SHALL I WRITE OVER FILE SECURITY CODES" S %=2 D YN^DICN S DSEC=%=1 I %<1 K DIFQ Q
	Q:'$D(DIFQ)  S %=2 W !!,"ARE YOU SURE EVERYTHING'S OK" D YN^DICN I %-1 K DIFQ Q
	D ^IBDE2 D NOW^%DTC S DIFROM("INI")=%
	I $D(DIFKEP) F DIDIU=0:0 S DIDIU=$O(DIFKEP(DIDIU)) Q:DIDIU'>0  S DIU=DIDIU,DIU(0)=DIFKEP(DIDIU) D EN^DIU2
	D DT^DICRW K ^UTILITY(U,$J),^UTILITY("DIK",$J) D WAIT^DICD
	S DN="^IBDPI" F R=1:1:33 D @(DN_$$B36(R)) W "."
	F  S D=$O(^UTILITY(U,$J,"SBF","")) Q:D'>0  K:'DIFQ(D) ^(D) S D=$O(^(D,"")) I D>0  K ^(D) D IX
DATA	W "." S (D,DDF(1),DDT(0))=$O(^UTILITY(U,$J,0)) Q:D'>0
	I DIFQR(D) S DTO=0,DMRG=1,DTO(0)=^(D),Z=^(D)_"0)",D0=^(D,0),@Z=D0,DFR(1)="^UTILITY(U,$J,DDF(1),D0,",DKP=DIFQR(D)'=2 F D0=0:0 S D0=$O(^UTILITY(U,$J,DDF(1),D0)) S:D0="" D0=-1 Q:'$D(^(D0,0))  S Z=^(0) D I^DITR
	K ^UTILITY(U,$J,DDF(1)),DDF,DDT,DTO,DFR,DFN,DTN G DATA
	;
W	S Y=$P($T(@X),";",2) W !,"NOTE: This package also contains "_Y_"S",! Q:'$D(DIFQ(0))
	S %=1 W ?6,"SHALL I WRITE OVER EXISTING "_Y_"S OF THE SAME NAME" D YN^DICN I '% W !?6,"Answer YES to replace the current "_Y_"S with the incoming ones." G W
	S:%=2 DIFQ(X)=0 K:%<0 DIFQ
	Q
	;
OPT	;OPTION
RTN	;ROUTINE DOCUMENTATION NOTE
FUN	;FUNCTION
BUL	;BULLETIN
KEY	;SECURITY KEY
HEL	;HELP FRAME
DIP	;PRINT TEMPLATE
DIE	;INPUT TEMPLATE
DIB	;SORT TEMPLATE
DIS	;FORM
	;
SBF	;FILE AND SUB FILE NUMBERS
IX	W "." S DIK="A" F %=0:0 S DIK=$O(^DD(D,DIK)) Q:DIK=""  K ^(DIK)
	S DA(1)=D,DIK="^DD("_D_"," D IXALL^DIK
	I $D(^DIC(D,"%",0)) S DIK="^DIC(D,""%""," G IXALL^DIK
	Q
B36(X)	Q $$N(X\(36*36)#36+1)_$$N(X\36#36+1)_$$N(X#36+1)
N(%)	Q $E("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",%)

IBDPINI2
IBDPINI2	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
	K ^UTILITY("DIFROM",$J),DIC S DIDUZ=0 S:$D(DUZ)#2 DIDUZ=DUZ S DUZ=.5
	I $D(^DIC(9.2,0))#2,^(0)?1"HEL".E S (DIC,DLAYGO)=9.2,N="HEL",DIC(0)="LX" G ADD
	Q
	;
ADD	F R=0:0 S R=$O(^UTILITY(U,$J,N,R)) Q:R'>0  S X=$P(^(R,0),U,1) W "." K DA D ^DIC I Y>0,'$D(DIFQ(N))!$P(Y,U,3) S ^UTILITY("DIFROM",$J,N,X)=+Y K ^DIC(9.2,+Y,1),^(2),^(3),^(10) S %X="^UTILITY(U,$J,N,R,",%Y=DIC_"+Y,",DA=+Y D %XY^%RCR
	S DIK=DIC
HELP	S R=$O(^UTILITY("DIFROM",$J,N,R)) Q:R=""  W !,"'"_R_"' Help Frame filed." S DA=^(R)
	F X=0:0 S X=$O(^DIC(9.2,DA,2,X)) Q:'X  S I=$S($D(^(X,0)):^(0),1:0),Y=$P(I,U,2) S:Y]"" Y=$O(^DIC(9.2,"B",Y,0)) S ^(0)=$P(^DIC(9.2,DA,2,X,0),U,1)_U_$S(Y>0:Y,1:"")_U_$P(^(0),U,3,99)
	S I=0 F X=0:0 S X=$O(^DIC(9.2,DA,10,X)) Q:'X  I $D(^(X,0)) S Y=$P(^(0),U),Y=$S(Y]"":$O(^MAG("B",Y,0)),1:0) S:Y $P(^DIC(9.2,DA,10,X,0),U)=Y,I=I+1,%=X I 'Y K ^DIC(9.2,DA,10,X,0)
	I I S $P(^DIC(9.2,DA,10,0),U,3,4)=%_U_I
IX	D IX1^DIK G HELP
	;
U	I $D(DIRUT) S DIFQ=1
	W ! Q
REP	S DIR(0)="Y",DIR("A")="Shall I change the NAME of the file to "_DIF
	S DIR("??")="^D REP^DIFROMH1",DIR("B")="NO" D ^DIR G U:$D(DIRUT)
	I Y S DIE=1,DIFQ=0,DA=N,DR=".01////"_DIF D ^DIE Q
	S DIR("A")="Shall I replace your file with mine"
	S DIR("??")="^D AG^DIFROMH1" D ^DIR G U:$D(DIRUT)!'Y
	S DIU(0)="E",DIR("A")="Do you want to keep the Data"
	S DIR("??")="^D CHG^DIFROMH1" D ^DIR G U:$D(DIRUT)
	S:'Y DIU(0)=DIU(0)_"D"
	S DIR("A")="Do you want to keep the Templates"
	S DIR("??")="^D TEMP^DIFROMH1" D ^DIR G U:$D(DIRUT) S:'Y DIU(0)=DIU(0)_"T"
	S DIFQ(N)=1,DIFKEP(N)=DIU(0) W !?15," (",DIF,") " Q

IBDPINI3
IBDPINI3	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
	K ^UTILITY("DIFROM",$J) S DIC(0)="LX",(DIC,DLAYGO)=3.6,N="BUL" D ADD:$D(^XMB(3.6,0))
	S X=0 F R=0:0 S X=$O(^UTILITY("DIFROM",$J,N,X)) Q:X=""  W !,"'",X,"' BULLETIN FILED -- Remember to add mail groups for new bulletins."
	I $D(^DIC(9.4,0))#2,^(0)?1"PACK".E S N="PKG",(DIC,DLAYGO)=9.4 D ADD
	G NP:'$D(DA) S %=+$O(^DIC(9.4,DA,22,"B",DIFROM,0)) I $D(^DIC(9.4,DA,22,%,0)) S $P(^(0),U,3)=DT
	I $D(^DIC(9.4,DA,0))#2 S %=$P(^(0),U,4) I %]"" S %=$O(^DIC(9.2,"B",%,0)) S:%]"" $P(^DIC(9.4,DA,0),U,4)=%
OR	I $D(^ORD(100.99))&$O(^UTILITY(U,$J,"OR","")) D EN^IBDPINI4
NP	K DIC,^UTILITY("DIFROM",$J) S DIC(0)="LX" I $D(^DIC(19,0))#2,^(0)?1"OPTION".E S (DIC,DLAYGO)=19,N="OPT" D ADD,OP
	I $D(^DIC(19.1,0))#2,($P(^(0),U)?1"SECUR".E)!($P(^(0),U)="KEY") S (DIC,DLAYGO)=19.1,N="KEY" D ADD K ^UTILITY("DIFROM",$J)
	I $D(^DIC(9.8,0))#2,^(0)?1"ROUTINE^".E S (DIC,DLAYGO)=9.8,N="RTN" D ADD
	S DIC=.5,DLAYGO=0,N="FUN" D ADD
	S DIC("S")="I $P(^(0),U,4)=DIFL" F N="DIPT","DIBT","DIE" S DIC=U_N_"(" D ADD
	K DIC("S") S N="DIST(.404,",DIC=U_N,DLAYGO=.404 D ADD
	S DIC("S")="I $P(^(0),U,8)=DIFL",N="DIST(.403,",DIC=U_N,DLAYGO=.403 D ADD
	K ^UTILITY(U,$J),DIC,DLAYGO F DIFR="DIE","DIPT" D DIEZ
	K ^UTILITY("DIFROM",$J) Q
DIEZ	I ^DD("VERSION")>17.4,'$D(DISYS) D OS^DII
	E  S DISYS=^DD("OS")
	Q:'$D(^DD("OS",DISYS,"ZS"))
	S DIFR1=""
DZ1	S DIFR1=$O(^UTILITY("DIFROM",$J,DIFR,DIFR1)) Q:DIFR1=""
	F DIFR2=0:0 S DIFR2=$O(^UTILITY("DIFROM",$J,DIFR,DIFR1,DIFR2)) Q:'DIFR2  S Y=DIFR2 I $D(@(U_DIFR_"(Y,""ROU"")")) K ^("ROU") I $D(^("ROUOLD")) S X=^("ROUOLD"),DMAX=^DD("ROU") D:X]"" @("EN^DI"_$E(DIFR,3)_"Z")
	G DZ1
	;
OP	S R=$O(^UTILITY("DIFROM",$J,N,R)) I R="" K ^UTILITY("DIFROM",$J) G Q
	W !,"'"_R_"' Option Filed" S DA=+^UTILITY("DIFROM",$J,N,R) G:$P(^(R),U,2,3)="XUCORE^"!($P(^(R),U,2,3)="XUCOMMAND^") OP
	I $D(^DIC(19,DA,220)) S %=$P(^(220),U) S:%]"" %=$O(^XMB(3.6,"B",%,0)) S $P(^DIC(19,DA,220),U)=%,%=$P(^(220),U,3) S:%]"" %=$O(^XMB(3.8,"B",%,0)) S $P(^DIC(19,DA,220),U,3)=%
	S %=$P(^DIC(19,DA,0),U,12) S:%]"" %=$O(^DIC(9.4,"B",%,0))
	S $P(^DIC(19,DA,0),U,12)=%,%=$P(^(0),U,7),(DZ,DIX)=0
	D:$D(^DIC(19,DA,10,"B")) KAD(DA) S:%]"" %=$O(^DIC(9.2,"B",%,0)) S $P(^DIC(19,DA,0),U,7)=%,%=$P(^(0),U,4),%="MOQXL"[% K ^(10,"B"),^("C")
	F X=0:0 S X=$O(^DIC(19,DA,10,X)) Q:'X  S I=$S($D(^(X,0)):^(0),1:0),Y=$S($D(^(U)):^(U),1:"") K ^DIC(19,DA,10,X) I Y]"",% S D=$O(^DIC(19,"B",Y,0)) I D S ^DIC(19,DA,10,X,0)=D_U_$P(I,U,2,9),DZ=DZ+1,DIX=X
	S:% ^DIC(19,DA,10,0)="^19.01PI^"_DIX_U_DZ D IX1^DIK G OP
	;
ADD	F R=0:0 S R=$O(^UTILITY(U,$J,N,R)) Q:R=""  S X=$P(^(R,0),U),DIFL=$S(N="DIST(.403,":$P(^(0),U,8),N="DIST(.404,":$P(^(0),U,2),1:$P(^(0),U,4)) W "." K DA D ^DIC I Y>0,'$D(DIFQ($E(N,1,3)))!$P(Y,U,3) S Y=Y_U D A
Q	Q
A	I N="BUL" K % S %(0)=$G(@(DIC_"+Y,2,0)")) F %=0:0 S %=$O(@(DIC_"+Y,2,%)")) Q:'%  S %(%)=$G(^(%,0))
	K:N'="KEY"&(N'="OPT") @(DIC_"+Y)") S ^UTILITY("DIFROM",$J,N,X)=Y S:$E(N,1,2)="DI" ^(X,+Y)="" S:N="PKG" DIFROM(0)=+Y Q:$P(Y,U,2,3)="XUCORE^"!($P(Y,U,2,3)="XUCOMMAND^")
	I N="BUL",%(0)]"" S @(DIC_"+Y,2,0)")=%(0) F %=0:0 S %=$O(%(%)) Q:'%  S @(DIC_"+Y,2,%,0)")=%(%)
	I $E(N,1,2)="DI",('DIFL)!('$D(^DD(+DIFL))) D
	.W !,"**WARNING--"_$S(N="DIE":"INPUT",N="DIPT":"PRINT",N="DIBT":"SORT",1:"FORM or BLOCK")_$S(N'["DIST":" template ",1:" ")_$P(Y,U,2)_" has been installed,",!,"but associated file "_DIFL_" is not on your system!"
	.Q
	I N="OPT" S:$P(^DIC(19,+Y,0),U,6)]"" DIOPT=$P(^(0),U,6) I $O(^UTILITY(U,$J,N,R,1,0)) K ^DIC(19,+Y,1)
	I N="DIST(.403," D BLK
	S %X="^UTILITY(U,$J,N,R,",%Y=DIC_"+Y,",DA=+Y,DIK=DIC D %XY^%RCR
	D IX1^DIK:N'="OPT" I N="OPT",$D(DIOPT) S:$P(^DIC(19,DA,0),U,6)="" $P(^(0),U,6)=DIOPT K DIOPT
	I N="DIST(.403," D
	.N DIFRVAL S DIFRVAL=$$VAL^DIFROMSS(.403,DA)
	.I DIFRVAL W !,"Compiling form: ",$P(^DIST(.403,DA,0),U) D EN^DDSZ(DA) Q
	.W !,"ERROR: Form: ",$P(^DIST(.403,DA,0),U)," cannot be compiled"
	.Q
	Q
BLK	F J=0:0 S J=$O(^UTILITY(U,$J,N,R,40,J)) Q:'J  I $D(^(J,0)) S %=$P(^(0),U,2) S:%]"" %=$O(^DIST(.404,"B",%,0)) S:% $P(^UTILITY(U,$J,N,R,40,J,0),U,2)=% D B1
	K A0,A1,A2,J,L Q
B1	F L=0:0 S L=$O(^UTILITY(U,$J,N,R,40,J,40,L)) Q:'L  S A0=$G(^(L,0)),%=$P(A0,U) I %]"" S %=$O(^DIST(.404,"B",%,0)) I % S $P(A0,U)=%,^UTILITY(U,$J,N,R,40,J,"BLK",%,0)=A0 D
	.N X S X=0
	.F  S X=$O(^UTILITY(U,$J,N,R,40,J,40,L,X)) Q:X=""  S ^UTILITY(U,$J,N,R,40,J,"BLK",%,X)=^(X)
	.Q
	S A0=$G(^UTILITY(U,$J,N,R,40,J,40,0)) Q:A0=""  K ^UTILITY(U,$J,N,R,40,J,40) S (A1,A2)=0
	F L=0:0 S L=$O(^UTILITY(U,$J,N,R,40,J,"BLK",L)) Q:'L  S ^UTILITY(U,$J,N,R,40,J,40,L,0)=^(L,0),A1=L,A2=A2+1 D
	.N X S X=0
	.F  S X=$O(^UTILITY(U,$J,N,R,40,J,"BLK",L,X)) Q:X=""  S ^UTILITY(U,$J,N,R,40,J,40,L,X)=^(X)
	.Q
	S $P(A0,U,3,4)=A1_U_A2,^UTILITY(U,$J,N,R,40,J,40,0)=A0 K ^UTILITY(U,$J,N,R,40,J,"BLK")
	Q
KAD(D0)	N D1,X
	S X=0 F  S X=$O(^DIC(19,D0,10,"B",X)) Q:X'>0  S D1=0 F  S D1=$O(^DIC(19,D0,10,"B",X,D1)) Q:D1'>0  K ^DIC(19,"AD",X,D0,D1)
	Q

IBDPINI4
IBDPINI4	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	;
EN	S DA(1)=1,DIK="^ORD(100.99,1,5," I $D(^ORD(100.99,1,5,DA)) D ^DIK
	S %X="^UTILITY(U,$J,""OR"","_$O(^UTILITY(U,$J,"OR",""))_",",%Y=DIK_DA_","
	S:'$D(^ORD(100.99,1,5,0)) ^(0)="^100.995P^^" S $P(^(0),U,3,4)=DA_U_($P(^(0),U,4)+1)
	D %XY^%RCR S $P(^ORD(100.99,1,5,DA,0),U)=DA,%=$P(^(0),U,4)
	I %]"" S %=$O(^ORD(100.98,"B",%,0)) I %>0 S $P(^ORD(100.99,1,5,DA,0),U,4)=%
	D OR
	S DA(1)=1 D IX1^DIK
	Q
OR	S (N,I)=0,X=""
	F  S N=$O(^ORD(100.99,1,5,DA,1,N)) Q:'N  S X=$P(^(N,0),U) I X]"" S %=$O(^ORD(101,"B",X,0)) D:'% ADDP S:% ^ORD(100.99,1,5,DA,1,N,0)=% S X=N,I=I+1,(R,J)=0,Y="" D OR1
	S:I $P(^ORD(100.99,1,5,DA,1,0),U,3,4)=X_U_I S (N,I)=0,X=""
	F  S N=$O(^ORD(100.99,1,5,DA,5,N)) Q:'N  S X=$P(^(N,0),U,3) I X]"" S %=$O(^ORD(101,"B",X,0)) D:'% ADDP S:% $P(^ORD(100.99,1,5,DA,5,N,0),U,3)=% S X=N,I=I+1
	S:I $P(^ORD(100.99,1,5,DA,5,0),U,3,4)=X_U_I K N,R,X,Y,I,J
	Q
OR1	N X F  S R=$O(^ORD(100.99,1,5,DA,1,N,1,R)) Q:'R  S X=$P(^(R,0),U) I X]"" S %=$O(^ORD(101,"B",X,0)) D:'% ADDP S:% ^ORD(100.99,1,5,DA,1,N,1,R,0)=% S Y=R,J=J+1
	S:J $P(^ORD(100.99,1,5,DA,1,N,1,0),U,3,4)=Y_U_J
	Q
ADDP	N I,J,N,R,DA,DLAYGO S %=""
	S DIC="^ORD(101,",DIC(0)="LX",DLAYGO=101 D FILE^DICN K DIC Q:Y=-1  S %=+Y Q

IBDPINI5
IBDPINI5	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	K ^UTILITY("DIF",$J) S DIFRDIFI=1 F I=1:1:6 S ^UTILITY("DIF",$J,DIFRDIFI)=$T(IXF+I),DIFRDIFI=DIFRDIFI+1
	Q
IXF	;;AICS PACKAGE INTERFACES^IBDP
	;;358.6I;IMP/EXP PACKAGE INTERFACE;^IBE(358.6,;0;y;y;;n;;;y;o;n
	;;
	;;358.98I;IMP/EXP AICS DATA QUALIFIERS;^IBD(358.98,;0;y;y;;n;;;y;o;n
	;;
	;;358.99;IMP/EXP AICS DATA ELEMENTS;^IBE(358.99,;0;y;y;;n;;;y;o;n
	;;

IBDPINIS
IBDPINIS	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
PAC(PKG,VER)	; called from package init (DIFROM7 created this routine)
	; PKG = $T(IXF) of the INIT routine.
	; VER is an array that is contained in DIFROM from the INIT routine
	;
	N %,%I,%H,DATE,DIFROM,NOW,PACKAGE,RUN,SERVER,SITE,START,X,XMDUZ,XMSUB,XMTEXT,XMY,Y K ^TMP("IBDPINIS",$J)
	;
	; Site tracking updates only occur if run in a VA production primary domain
	; account.
	I $G(^XMB("NETNAME"))'[".VA.GOV" Q
	Q:'$D(^%ZOSF("UCI"))  Q:'$D(^%ZOSF("PROD"))
	X ^%ZOSF("UCI") I Y'=^%ZOSF("PROD") Q
	;
	S SERVER="S.A5CSTS@FORUM.VA.GOV"
	S PACKAGE=$P($P(PKG,";",3),U)
	S SITE=$G(^XMB("NETNAME"))
	S START=$P($G(^DIC(9.4,VER(0),"PRE")),U,2) I '$L(START) S START="Unknown"
	D  ; check if ok to use kernel functions
	.S X="XLFDT" X ^%ZOSF("TEST") I $T D  Q
	..S NOW=$$HTFM^XLFDT($H)
	..S RUN="Unknown" I START S RUN=$$FMDIFF^XLFDT(NOW,START,3)
	..S START=$$FMTE^XLFDT(START)
	..S DATE=NOW\1
	..S NOW=$$FMTE^XLFDT(NOW)
	.D NOW^%DTC S NOW=%,DATE=X
	.S RUN="" ; don't bother to compute
	.S Y=START D DD^%DT S START=Y
	.S Y=NOW D DD^%DT S NOW=Y
	;
	; Message for server
	S ^TMP("IBDPINIS",$J,1,0)="PACKAGE INSTALL"
	S ^TMP("IBDPINIS",$J,2,0)="SITE: "_SITE
	S ^TMP("IBDPINIS",$J,3,0)="PACKAGE: "_PACKAGE
	S ^TMP("IBDPINIS",$J,4,0)="VERSION: "_VER
	S ^TMP("IBDPINIS",$J,5,0)="Start time: "_START
	S ^TMP("IBDPINIS",$J,6,0)="Completion time: "_NOW
	S ^TMP("IBDPINIS",$J,7,0)="Run time: "_RUN
	S ^TMP("IBDPINIS",$J,8,0)="DATE: "_DATE
	;
	; Data is sent to server on FORUM - S.A5CSTS
	S XMY(SERVER)="",XMDUZ=.5,XMTEXT="^TMP(""IBDPINIS"",$J,",XMSUB=PACKAGE_" VERSION "_VER_" INSTALLATION"
	D ^XMD
	K ^TMP("IBDPINIS",$J)
	Q

IBDPINIT
IBDPINIT	; ; 03-APR-1996
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	K DIF,DIFQ,DIFQR,DIFQN,DIK,DDF,DDT,DTO,D0,DLAYGO,DIC,DIDUZ,DIR,DA,DIFROM,DFR,DTN,DIX,DZ,DIRUT,DTOUT,DUOUT
	S DIOVRD=1,U="^",DIFQ=0,DIFROM="2.1" W !,"This version (#2.1) of 'IBDPINIT' was created on 03-APR-1996"
	W !?9,"(at ALBANY CAMPUS DEVELOPMENT, by VA FileMan V.21.0)",!
	I $D(^DD("VERSION")),^("VERSION")'<21 G GO
	;W !,"FIRST, I'LL FRESHEN UP YOUR VA FILEMAN...." D N^DINIT
	I ^DD("VERSION")<21 W !,"but I need version 21 of the VA FileMan!" G Q
GO	;
	W !,"I HAVE TO RUN AN ENVIRONMENT CHECK ROUTINE." D PKG,^IBDPPRE Q:'$D(DIFQ)  D NOW^%DTC S DIFROM("PRE")=%
EN	; ENTER HERE TO BYPASS THE PRE-INIT PROGRAM
	S DIFQ=0 K DIRUT,DTOUT,DUOUT
	F DIFRIR=1:1:1 S DIFRRTN="^IBDPINI"_$E("5",DIFRIR) D @DIFRRTN
	W:1 !,"I AM GOING TO SET UP THE FOLLOWING FILES:" F I=1:2:6 S DIF(I)=^UTILITY("DIF",$J,I) D 1 G Q:DIFQ!$D(DIRUT) K DIF(I)
	S DIFROM="2.1" D PKG:'$D(DIFROM(0)),^IBDPINI1 G Q:'$D(DIFQ) S DIK(0)="AB"
	F DIF=1:2:6 S %=^UTILITY("DIF",$J,DIF),DIK=$P(%,";",5),N=$P(%,";",3),D=$P(%,";",4)_U_N D D K DIFQ(N)
	K DIFQR D ^IBDPINI2,^IBDPINI3
	L  S DUZ=DIDUZ W:1 !,"NO"_$P("TE THAT FILE",U,DSEC)_" SECURITY-CODE PROTECTION HAS BEEN MADE"
	D ^IBDPPT,NOW^%DTC S DIFROM("INIT")=%
	I DIFROM F DIF=1:2:6 S %=^UTILITY("DIF",$J,DIF),N=+$P(%,";",3) I N,$P(%,";",8)="y" S ^DD(N,0,"VR")=DIFROM
	I DIFROM(0)>0 F %="PRE","INI","INIT" S:$D(DIFROM(%)) $P(^DIC(9.4,DIFROM(0),%),U,2)=DIFROM(%)
	I $G(DIFQN) S $P(^(0),U,3,4)=$P(DIFQN,U,2)_U_($P(^DIC(0),U,4)+DIFQN) K DIFQN
	I DIFROM,$D(^%ZTSK) S X="IBDPINIS" X ^%ZOSF("TEST") D:$T PAC^IBDPINIS($T(IXF),.DIFROM)
	S:DIFROM(0)>0 ^DIC(9.4,DIFROM(0),"VERSION")=DIFROM G Q^DIFROM0
D	S:$D(^DIC(+N,0))[0 ^(0)=D S X=$D(@(DIK_"0)")),^(0)=D_U_$S(X#2:$P(^(0),U,3,9),1:U)
	S DIFQR=DIFQR(+N) I ^DD("VERSION")>17.5,$D(^DD(+N,0,"DIK"))#2 S X=^("DIK"),Y=+N,DMAX=^DD("ROU") D EN^DIKZ
	I DIFQR D IXALL^DIK:$O(@(DIK_"0)")) W "."
	Q
R	G REP^IBDPINI2
	;
1	S N=+$P(DIF(I),";",3),DIF=$P(DIF(I),";",4),S=$P(DIF(I),";",5)
	W !!?3,N,?13,DIF,$P("  (Partial Definition)",U,$P(DIF(I),";",6)),$P("  (including data)",U,$P(DIF(I),";",13)="y") S Z=$S($D(^DIC(N,0))#2:^(0),1:"")
	I Z="" S DIFQ(N)=1,DIFQN=$G(DIFQN)+1_U_N G S
	I $L($P(Z,DIF)) W $C(7),!,"*BUT YOU ALREADY HAVE '",$P(Z,U),"' AS FILE #",N,"!" D R Q:DIFQ  G S:$D(DIFKEP(N)),1
	S DIFQ(N)=$P(DIF(I),";",7)'="n"
	I $L(Z) W $C(7),!,"Note:  You already have the '",$P(Z,U),"' File." S DIFQ(0)=1
	S %=$E(^UTILITY("DIF",$J,I+1),4,245) I %]"" X % S DIFQ(N)=$T W:'$T !,"Screen on this Data Dictionary did not pass--DD will not be installed!" G S
	I $L(Z),$P(DIF(I),";",10)="y" S DIR("A")="Shall I write over the existing Data Definition",DIR("??")="^D DD^DIFROMH1",DIR("B")="YES",DIR(0)="Y" D ^DIR S DIFQ(N)=Y
S	S DIFQR(N)=0 Q:$P(DIF(I),";",13)'="y"!$D(DIRUT)
	I $P(DIF(I),";",15)="y",$O(@(S_"0)"))>0 S DIF=$P(DIF(I),";",14)="o",DIR("A")="Want my data "_$P("merged with^to overwrite",U,DIF+1)_" yours",DIR("??")="^D DTA^DIFROMH1",DIR(0)="Y" D ^DIR S DIFQR(N)=$S('Y:Y,1:Y+DIF) Q
	S %=$P(DIF(I),";",14)="o" W !,$C(7),"I will ",$P("MERGE^OVERWRITE",U,%+1)," your data with mine." S DIFQR(N)=%+1
	Q
Q	W $C(7),!!,"NO UPDATING HAS OCCURRED!" G Q^DIFROM0
	;
PKG	S X=$P($T(IXF),";",3),DIC="^DIC(9.4,",DIC(0)="",DIC("S")="I $P(^(0),U,2)="""_$P(X,U,2)_"""",X=$P(X,U) D ^DIC S DIFROM(0)=+Y K DIC
	Q
	;
IXF	;;AICS PACKAGE INTERFACES^IBDP;1453

IBDPPRE
IBDPPRE	; ALB/ISC - PREINIT FOR USE BY IMP/EXP UTILITY ;AUG 13, 1993
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
	D NOW^%DTC S IBDBDT("IBDP")=$H,DT=$$DT^XLFDT,Y=% W !!,"Initialization Started: " D DT^DIQ
	;
PRE	W !! D HELP^IBD21PRE W !!
	D USER^IBD21PRE
	Q:'$D(DIFQ)
	;
CHECK	;checks if there is anything in the workspace
	N COUNT,FILE,QUIT
	S (QUIT,COUNT)=0
	F  S FILE=$P($T(FILES+COUNT),";;",2) Q:QUIT!(FILE="")  D  Q:QUIT
	.S COUNT=COUNT+1
	.I $O(@FILE@(0)) D
	..K DIR S DIR(0)="Y",DIR("B")="YES"
	..W !,"Please check your work space from the import/export utility option.",!!,"These INITS require that your work space be clear, currently it is not.",!,"Would you like to clear the work space now?"
	..D ^DIR
	..I $D(DIRUT)!(Y=0) K DIFQ
	..S QUIT=1
	;
	I '$D(DIFQ) W !,"INITIALIZATION ABORTED" K IBDBDT
	K DIR,DIRUT,DUOUT
	Q
	;
FILES	;;^IBE(358)
	;;^IBE(358.1)

IBDPPT
IBDPPT	;ALB/CJM - ENCOUNTER FORM - installation routine for AICS 2.1 ;OCT 5, 1995
	;;Version 2.1 ; AUTOMATED INFO COLLECTION SYS ;; 3-APR-96
	;
DONE	; Installation has completed - display final messages
	;
	D NOW^%DTC S IBDEDT("IBDP")=$H
	S IBDINIT="IBDP" D DONE^IBD21PT
	D MSG
	Q
	;
MSG	W !!!,$TR($J("",79)," ","*")
	W !!,"The installation of Package Interfaces is complete."
	W !,"Now run ^IBDINIT."
	;
	W !!,$TR($J("",79)," ","*")
	Q


