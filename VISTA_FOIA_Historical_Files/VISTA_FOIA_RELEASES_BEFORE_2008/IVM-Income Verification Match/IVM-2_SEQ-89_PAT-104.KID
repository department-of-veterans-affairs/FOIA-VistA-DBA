Released IVM*2*104 SEQ #89
Extracted from mail message
**KIDS**:IVM*2.0*104^

**INSTALL NAME**
IVM*2.0*104
"BLD",6007,0)
IVM*2.0*104^INCOME VERIFICATION MATCH^0^3050518^y
"BLD",6007,4,0)
^9.64PA^^
"BLD",6007,"KRN",0)
^9.67PA^8989.52^19
"BLD",6007,"KRN",.4,0)
.4
"BLD",6007,"KRN",.401,0)
.401
"BLD",6007,"KRN",.402,0)
.402
"BLD",6007,"KRN",.403,0)
.403
"BLD",6007,"KRN",.5,0)
.5
"BLD",6007,"KRN",.84,0)
.84
"BLD",6007,"KRN",3.6,0)
3.6
"BLD",6007,"KRN",3.8,0)
3.8
"BLD",6007,"KRN",9.2,0)
9.2
"BLD",6007,"KRN",9.8,0)
9.8
"BLD",6007,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",6007,"KRN",9.8,"NM",1,0)
IVMCZMT^^0^B58017973
"BLD",6007,"KRN",9.8,"NM",2,0)
IVMPTRN8^^0^B52985930
"BLD",6007,"KRN",9.8,"NM","B","IVMCZMT",1)
 
"BLD",6007,"KRN",9.8,"NM","B","IVMPTRN8",2)
 
"BLD",6007,"KRN",19,0)
19
"BLD",6007,"KRN",19.1,0)
19.1
"BLD",6007,"KRN",101,0)
101
"BLD",6007,"KRN",409.61,0)
409.61
"BLD",6007,"KRN",771,0)
771
"BLD",6007,"KRN",870,0)
870
"BLD",6007,"KRN",8989.51,0)
8989.51
"BLD",6007,"KRN",8989.52,0)
8989.52
"BLD",6007,"KRN",8994,0)
8994
"BLD",6007,"KRN","B",.4,.4)
 
"BLD",6007,"KRN","B",.401,.401)
 
"BLD",6007,"KRN","B",.402,.402)
 
"BLD",6007,"KRN","B",.403,.403)
 
"BLD",6007,"KRN","B",.5,.5)
 
"BLD",6007,"KRN","B",.84,.84)
 
"BLD",6007,"KRN","B",3.6,3.6)
 
"BLD",6007,"KRN","B",3.8,3.8)
 
"BLD",6007,"KRN","B",9.2,9.2)
 
"BLD",6007,"KRN","B",9.8,9.8)
 
"BLD",6007,"KRN","B",19,19)
 
"BLD",6007,"KRN","B",19.1,19.1)
 
"BLD",6007,"KRN","B",101,101)
 
"BLD",6007,"KRN","B",409.61,409.61)
 
"BLD",6007,"KRN","B",771,771)
 
"BLD",6007,"KRN","B",870,870)
 
"BLD",6007,"KRN","B",8989.51,8989.51)
 
"BLD",6007,"KRN","B",8989.52,8989.52)
 
"BLD",6007,"KRN","B",8994,8994)
 
"BLD",6007,"QUES",0)
^9.62^^
"BLD",6007,"REQB",0)
^9.611^2^2
"BLD",6007,"REQB",1,0)
IVM*2.0*89^2
"BLD",6007,"REQB",2,0)
IVM*2.0*97^2
"BLD",6007,"REQB","B","IVM*2.0*89",1)
 
"BLD",6007,"REQB","B","IVM*2.0*97",2)
 
"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
104^3050518
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")
 
"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IVMCZMT")
0^1^B58017973
"RTN","IVMCZMT",1,0)
IVMCZMT ;ALB/MLI/LD/CKN/TDM,EG - Creation of  HL7 ZMT (means test) segment ;05/11/2005 7:18 AM
"RTN","IVMCZMT",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**17,53,49,58,81,89,104**;21-OCT-94
"RTN","IVMCZMT",3,0)
 ;
"RTN","IVMCZMT",4,0)
 ; This routine returns the ZMT segment which contains means test
"RTN","IVMCZMT",5,0)
 ; data for a selected patient. It differs from the standard segment
"RTN","IVMCZMT",6,0)
 ; builder in that it will add default values where needed for
"RTN","IVMCZMT",7,0)
 ; fields added by means test sharing - these fields may not have
"RTN","IVMCZMT",8,0)
 ; values for old tests, though for new tests the values should be there.
"RTN","IVMCZMT",9,0)
 ;
"RTN","IVMCZMT",10,0)
 ;
"RTN","IVMCZMT",11,0)
 ;
"RTN","IVMCZMT",12,0)
EN(DFN,VAFSTR,VAFMTDT,VAFTYPE,SETID,DELETE,LIMIT)       ; Entry point to get ZMT segment
"RTN","IVMCZMT",13,0)
 ;
"RTN","IVMCZMT",14,0)
 ;  Input:
"RTN","IVMCZMT",15,0)
 ;      DFN - as the IEN or corresponding patient in the PATIENT file
"RTN","IVMCZMT",16,0)
 ;   VAFSTR - as string of segment fields needed separated by commas
"RTN","IVMCZMT",17,0)
 ;  VAFMTDT - (optional) as date of desired means test (defaults to latest MT)
"RTN","IVMCZMT",18,0)
 ;  VAFTYPE - (optional) as type of test:  1 - Means Test (default=1)
"RTN","IVMCZMT",19,0)
 ;      2 - Copay Test
"RTN","IVMCZMT",20,0)
 ;      4 - LTC Copay Exemption Test
"RTN","IVMCZMT",21,0)
 ;  SETID -  (optional) value to use for SEQ 1, the set id field (1 used
"RTN","IVMCZMT",22,0)
 ;     as default if not passed.)
"RTN","IVMCZMT",23,0)
 ;  DELETE - (optional, pass by reference) This array is used to
"RTN","IVMCZMT",24,0)
 ;    indicate whether the segment is being used to notify of the
"RTN","IVMCZMT",25,0)
 ;    the deletion of a means test, pharmacy copay test, or a
"RTN","IVMCZMT",26,0)
 ;    hardship determinatin.  If a means test or hardship is being
"RTN","IVMCZMT",27,0)
 ;    deleted, then VAFTYPE must equal 1.  If an Rx copay test is
"RTN","IVMCZMT",28,0)
 ;    being deleted, then VAFTYPE must equal 2.  The subscripts
"RTN","IVMCZMT",29,0)
 ;    are as follows:
"RTN","IVMCZMT",30,0)
 ;    DELETE("DATE OF TEST")=<date of test> - indicates
"RTN","IVMCZMT",31,0)
 ;    the income year of the test that the deletion flags
"RTN","IVMCZMT",32,0)
 ;    refer to
"RTN","IVMCZMT",33,0)
 ;    DELETE("HARDSHIP") -  if $G(DELETE("HARDSHIP"))=1 then the
"RTN","IVMCZMT",34,0)
 ;    segment will be created to delete the hardship.
"RTN","IVMCZMT",35,0)
 ;    DELETE("MT") - if $G(DELETE("MT"))=1 then
"RTN","IVMCZMT",36,0)
 ;    the segment will be created to delete a means test.
"RTN","IVMCZMT",37,0)
 ;    DELETE("RX")= if $G(DELETE("RX"))=1 then
"RTN","IVMCZMT",38,0)
 ;    the segment will be created to delete a pharmacy
"RTN","IVMCZMT",39,0)
 ;    copay test.
"RTN","IVMCZMT",40,0)
 ;    DELETE("LTC")= if $G(DELETE("LTC"))=1 then
"RTN","IVMCZMT",41,0)
 ;    the segment will be created to delete a Long term
"RTN","IVMCZMT",42,0)
 ;    care copay exemption test.
"RTN","IVMCZMT",43,0)
 ;  LIMIT - (optional) if $G(LIMIT)=1 then this indicates that a test in
"RTN","IVMCZMT",44,0)
 ;    an income year other than indicated in the IVM Patient File
"RTN","IVMCZMT",45,0)
 ;    should NOT be returned in the ZMT segment
"RTN","IVMCZMT",46,0)
 ;
"RTN","IVMCZMT",47,0)
 ;      ****Also assumes all HL7 variables are defined as returned ****
"RTN","IVMCZMT",48,0)
 ;   by the INIT^HLTRANS call
"RTN","IVMCZMT",49,0)
 ;
"RTN","IVMCZMT",50,0)
 ; Output - string in the form of the DHCP HL7 ZMT segment
"RTN","IVMCZMT",51,0)
 ;
"RTN","IVMCZMT",52,0)
 ;
"RTN","IVMCZMT",53,0)
 N NODE,PRIM,X,Y,VAFY,NODE2,MTIEN
"RTN","IVMCZMT",54,0)
 ;
"RTN","IVMCZMT",55,0)
 I '$G(DFN)!($G(VAFSTR)']"") G QUIT
"RTN","IVMCZMT",56,0)
 S $P(VAFY,HLFS,22)="",VAFSTR=","_VAFSTR_","
"RTN","IVMCZMT",57,0)
 S VAFTYPE=$S($G(VAFTYPE):VAFTYPE,1:1)
"RTN","IVMCZMT",58,0)
 S VAFMTDT=$S($G(VAFMTDT):VAFMTDT,1:DT)
"RTN","IVMCZMT",59,0)
 S $P(VAFY,HLFS,1)=$S($G(SETID):SETID,1:1)
"RTN","IVMCZMT",60,0)
 S (NODE,NODE2,PRIM)=""
"RTN","IVMCZMT",61,0)
 ;
"RTN","IVMCZMT",62,0)
 ;handle deletions of a test
"RTN","IVMCZMT",63,0)
 I ($G(DELETE("MT"))=1),VAFTYPE=1 D  G QUIT
"RTN","IVMCZMT",64,0)
 .S $P(VAFY,HLFS,2)=$$HLDATE^HLFNC(DELETE("DATE OF TEST")) ; MT Date
"RTN","IVMCZMT",65,0)
 .S $P(VAFY,HLFS,3)=HLQ
"RTN","IVMCZMT",66,0)
 .I ($G(DELETE("HARDSHIP"))=1) S $P(VAFY,HLFS,24)=HLQ
"RTN","IVMCZMT",67,0)
 .S $P(VAFY,HLFS,17)=VAFTYPE ; Type Of Test
"RTN","IVMCZMT",68,0)
 ;
"RTN","IVMCZMT",69,0)
 I ($G(DELETE("RX"))=1),VAFTYPE=2 D  G QUIT
"RTN","IVMCZMT",70,0)
 .S $P(VAFY,HLFS,2)=$$HLDATE^HLFNC(DELETE("DATE OF TEST")) ; MT Date
"RTN","IVMCZMT",71,0)
 .S $P(VAFY,HLFS,3)=HLQ
"RTN","IVMCZMT",72,0)
 .S $P(VAFY,HLFS,17)=VAFTYPE ; Type Of Test
"RTN","IVMCZMT",73,0)
 ;
"RTN","IVMCZMT",74,0)
 I ($G(DELETE("LTC"))=1),VAFTYPE=4 D  G QUIT
"RTN","IVMCZMT",75,0)
 .S $P(VAFY,HLFS,2)=$$HLDATE^HLFNC(DELETE("DATE OF TEST")) ; MT Date
"RTN","IVMCZMT",76,0)
 .S $P(VAFY,HLFS,3)=HLQ
"RTN","IVMCZMT",77,0)
 .S $P(VAFY,HLFS,17)=VAFTYPE ; Type Of Test
"RTN","IVMCZMT",78,0)
 ;
"RTN","IVMCZMT",79,0)
 ; Income Year requiring transmission from IVM Patient File (301.5)
"RTN","IVMCZMT",80,0)
 S IVMIY=$S($D(IVMIY):IVMIY,1:(VAFMTDT-10000))
"RTN","IVMCZMT",81,0)
 ;
"RTN","IVMCZMT",82,0)
 ; Check for a future dated Income Test
"RTN","IVMCZMT",83,0)
 S MTIEN=""
"RTN","IVMCZMT",84,0)
 N EC S EC=0
"RTN","IVMCZMT",85,0)
 I VAFTYPE'=4 D
"RTN","IVMCZMT",86,0)
 . S MTIEN=+$$FUT^DGMTU(DFN,"",$S($G(VAFTYPE):VAFTYPE,1:1))
"RTN","IVMCZMT",87,0)
 . I MTIEN D
"RTN","IVMCZMT",88,0)
 . . S NODE=$G(^DGMT(408.31,MTIEN,0)),PRIM=$G(^("PRIM")),NODE2=$G(^DGMT(408.31,MTIEN,2))
"RTN","IVMCZMT",89,0)
 . . ;the FUT API works off the a XREF that is not deleted if the test
"RTN","IVMCZMT",90,0)
 . . ;is no longer future.  As a result, you may pick up the wrong income
"RTN","IVMCZMT",91,0)
 . . ;year as a return.  The check $E(IVMIY,1,3)+1'=$E(+NODE,1,3) must be
"RTN","IVMCZMT",92,0)
 . . ;performed here and after the current Primary icnome test section below
"RTN","IVMCZMT",93,0)
 . . I ($G(LIMIT)=1),($E(IVMIY,1,3)+1)'=$E(+NODE,1,3) S EC=1
"RTN","IVMCZMT",94,0)
 . . Q
"RTN","IVMCZMT",95,0)
 . Q
"RTN","IVMCZMT",96,0)
 I VAFTYPE'=4,EC S (NODE,NODE2,MTIEN,PRIM)="" Q "ZMT"_HLFS_$G(VAFY)
"RTN","IVMCZMT",97,0)
 ;
"RTN","IVMCZMT",98,0)
 ; Check for a current Primary Income Test
"RTN","IVMCZMT",99,0)
 I 'MTIEN S MTIEN=+$$LST^DGMTU(DFN,VAFMTDT,$S($G(VAFTYPE):VAFTYPE,1:1))
"RTN","IVMCZMT",100,0)
 S:(NODE="") NODE=$G(^DGMT(408.31,MTIEN,0)),PRIM=$G(^("PRIM")),NODE2=$G(^DGMT(408.31,MTIEN,2))
"RTN","IVMCZMT",101,0)
 ;
"RTN","IVMCZMT",102,0)
 ;if the wrong income yr, and told to ignore it ($G(LIMIT)=1,
"RTN","IVMCZMT",103,0)
 ;send blank means test
"RTN","IVMCZMT",104,0)
 I ($G(LIMIT)=1),($E(IVMIY,1,3)+1)'=$E(+NODE,1,3) S (NODE,NODE2,MTIEN,PRIM)="" Q "ZMT"_HLFS_$G(VAFY)
"RTN","IVMCZMT",105,0)
 ;
"RTN","IVMCZMT",106,0)
 ;
"RTN","IVMCZMT",107,0)
 I NODE'="" D
"RTN","IVMCZMT",108,0)
 .;add default values to new means test sharing fields
"RTN","IVMCZMT",109,0)
 .N STATUS,CODE,TDSTATUS,TDCODE,HARDSHIP,DATA,SOURCE,TIME
"RTN","IVMCZMT",110,0)
 .S TDSTATUS=$P(NODE2,"^",3)
"RTN","IVMCZMT",111,0)
 .S HARDSHIP=$P(NODE,"^",20)
"RTN","IVMCZMT",112,0)
 .I TDSTATUS="" D
"RTN","IVMCZMT",113,0)
 ..S STATUS=$P(NODE,"^",3)
"RTN","IVMCZMT",114,0)
 ..Q:'STATUS
"RTN","IVMCZMT",115,0)
 ..S CODE=$$GETCODE^DGMTH(STATUS)
"RTN","IVMCZMT",116,0)
 ..I CODE'="","ABCEGMP"[CODE D
"RTN","IVMCZMT",117,0)
 ...I VAFTYPE=1,HARDSHIP D
"RTN","IVMCZMT",118,0)
 ....I "AG"[CODE D  Q
"RTN","IVMCZMT",119,0)
 .....I CODE="A",($P(NODE,"^",4)'>$P(NODE,"^",27)) S TDSTATUS=$$GETSTAT^DGMTH("G",1) Q  ;Income <= GMT Threshold
"RTN","IVMCZMT",120,0)
 .....S TDSTATUS=$$GETSTAT^DGMTH("C",1)
"RTN","IVMCZMT",121,0)
 ....S TDSTATUS=STATUS
"RTN","IVMCZMT",122,0)
 ...S DATA(2.03)=TDSTATUS,$P(NODE2,"^",3)=TDSTATUS
"RTN","IVMCZMT",123,0)
 .S SOURCE=$P(NODE,"^",23)
"RTN","IVMCZMT",124,0)
 .I SOURCE=1 D
"RTN","IVMCZMT",125,0)
 ..S TIME=$P(NODE2,"^",2)
"RTN","IVMCZMT",126,0)
 ..I TIME="" S TIME=$$NOW^XLFDT,$P(NODE2,"^",2)=TIME,DATA(2.02)=TIME
"RTN","IVMCZMT",127,0)
 ..I $P(NODE2,"^",5)="",$P(NODE,"^",6) S $P(NODE2,"^",5)=$$GETSITE^DGMTU4($P(NODE,"^",6)),DATA(2.05)=$P(NODE2,"^",5)
"RTN","IVMCZMT",128,0)
 .I HARDSHIP,$P(NODE2,"^",4)="",$P(NODE,"^",22) S $P(NODE2,"^",4)=$$GETSITE^DGMTU4($P(NODE,"^",22)),DATA(2.04)=$P(NODE2,"^",4)
"RTN","IVMCZMT",129,0)
 .I $D(DATA),$$UPD^DGENDBS(408.31,MTIEN,.DATA)
"RTN","IVMCZMT",130,0)
 .;
"RTN","IVMCZMT",131,0)
 I VAFSTR[",2," S $P(VAFY,HLFS,2)=$S(+NODE:$$HLDATE^HLFNC(+NODE),1:HLQ) ; MT Date
"RTN","IVMCZMT",132,0)
 I VAFSTR[",3," S X=$P($G(^DG(408.32,+$P(NODE,"^",3),0)),"^",2),$P(VAFY,HLFS,3)=$S(X]"":X,1:"") ; MT Status
"RTN","IVMCZMT",133,0)
 I VAFSTR[",4," S $P(VAFY,HLFS,4)=$S($P(NODE,"^",4)]"":$P(NODE,"^",4),1:HLQ) ; Income
"RTN","IVMCZMT",134,0)
 I VAFSTR[",5," S $P(VAFY,HLFS,5)=$S($P(NODE,"^",5)]"":$P(NODE,"^",5),1:HLQ) ; Net Worth
"RTN","IVMCZMT",135,0)
 I VAFSTR[",6," S $P(VAFY,HLFS,6)=$S($P(NODE,"^",10):$$HLDATE^HLFNC($P(NODE,"^",10)),1:HLQ) ; Adjudication Date/Time
"RTN","IVMCZMT",136,0)
 I VAFSTR[",7," S $P(VAFY,HLFS,7)=$$YN^VAFHLFNC($P(NODE,"^",11)) ;Agreed To Pay
"RTN","IVMCZMT",137,0)
 I VAFSTR[",8," S $P(VAFY,HLFS,8)=$S($P(NODE,"^",12):$P(NODE,"^",12),1:HLQ) ; Threshold A
"RTN","IVMCZMT",138,0)
 I VAFSTR[",9," S $P(VAFY,HLFS,9)=$S($P(NODE,"^",15)]"":$P(NODE,"^",15),1:HLQ) ; Deductible Expenses
"RTN","IVMCZMT",139,0)
 I VAFSTR[",10," S $P(VAFY,HLFS,10)=$S($P(NODE,"^",7):$$HLDATE^HLFNC($P(NODE,"^",7)),1:HLQ) ; Date/Time Completed
"RTN","IVMCZMT",140,0)
 I VAFSTR[",11," S $P(VAFY,HLFS,11)=$$YN^VAFHLFNC($P(NODE,"^",16)) ;Previous Year Means Test Threshold Flag
"RTN","IVMCZMT",141,0)
 I VAFSTR[",12," S $P(VAFY,HLFS,12)=$S($P(NODE,"^",18)]"":$P(NODE,"^",18),1:HLQ) ; Total Dependents
"RTN","IVMCZMT",142,0)
 I VAFSTR[",13," S $P(VAFY,HLFS,13)=$$YN^VAFHLFNC($P(NODE,"^",20)) ;Hardship
"RTN","IVMCZMT",143,0)
 I VAFSTR[",14," S $P(VAFY,HLFS,14)=$S($P(NODE,"^",21):$$HLDATE^HLFNC($P(NODE,"^",21)),1:HLQ) ; Hardship Review Date
"RTN","IVMCZMT",144,0)
 I VAFSTR[",15," S $P(VAFY,HLFS,15)=$S($P(NODE,"^",24):$$HLDATE^HLFNC($P(NODE,"^",24)),1:HLQ) ; Date Vet Signed Test
"RTN","IVMCZMT",145,0)
 I VAFSTR[",16," S $P(VAFY,HLFS,16)=$$YN^VAFHLFNC($P(NODE,"^",14)) ;Declines To Give Income Info
"RTN","IVMCZMT",146,0)
 I VAFSTR[",17," S $P(VAFY,HLFS,17)=$S($P(NODE,"^",19):$P(NODE,"^",19),1:VAFTYPE) ; Type Of Test
"RTN","IVMCZMT",147,0)
 I VAFSTR[",18," S $P(VAFY,HLFS,18)=$S($P(NODE,"^",23)]"":$P(NODE,"^",23),1:HLQ) ; Source Of Test
"RTN","IVMCZMT",148,0)
 I VAFSTR[",19," S $P(VAFY,HLFS,19)=$$YN^VAFHLFNC(PRIM) ; Primary Test?
"RTN","IVMCZMT",149,0)
 I VAFSTR[",20," S $P(VAFY,HLFS,20)=$S($P(NODE,"^",25):$$HLDATE^HLFNC($P(NODE,"^",25)),1:HLQ) ; Date IVM Verified MT Completed
"RTN","IVMCZMT",150,0)
 I VAFSTR[",21," S $P(VAFY,HLFS,21)=$$YN^VAFHLFNC($P(NODE,"^",26)) ;Refused To Sign
"RTN","IVMCZMT",151,0)
 ;
"RTN","IVMCZMT",152,0)
 ;
"RTN","IVMCZMT",153,0)
 I VAFSTR[",22," S $P(VAFY,HLFS,22)=$P(NODE2,"^",5) ;Site Conducting Test
"RTN","IVMCZMT",154,0)
 I VAFSTR[",23," S $P(VAFY,HLFS,23)=$P(NODE2,"^",4) ;Site Granting Hardship
"RTN","IVMCZMT",155,0)
 I VAFSTR[",24," S $P(VAFY,HLFS,24)=$S($P(NODE2,"^"):$$HLDATE^HLFNC($P(NODE2,"^")),1:"") ;Hardship Effective Date
"RTN","IVMCZMT",156,0)
 I VAFSTR[",25," S $P(VAFY,HLFS,25)=$S($P(NODE2,"^",2):$$HLDATE^HLFNC($P(NODE2,"^",2)),1:"") ;Dt/Tm Test Last Edited
"RTN","IVMCZMT",157,0)
 I VAFSTR[",26," S $P(VAFY,HLFS,26)=$S($P(NODE2,"^",3):$$GETCODE^DGMTH($P(NODE2,"^",3)),1:"") ; Test Determined Status
"RTN","IVMCZMT",158,0)
 I VAFSTR[",28," S $P(VAFY,HLFS,28)=$P(NODE,"^",27)  ;GMT Threshold
"RTN","IVMCZMT",159,0)
 I VAFSTR[",29," S $P(VAFY,HLFS,29)=$P(NODE2,"^",9)  ;Hardship Reason
"RTN","IVMCZMT",160,0)
 ;
"RTN","IVMCZMT",161,0)
 ;can only transmit the deletion of a hardship if the segment is for a means test - and the income years must match if there is a means test
"RTN","IVMCZMT",162,0)
 ;
"RTN","IVMCZMT",163,0)
 I VAFTYPE=1,($G(DELETE("HARDSHIP"))=1),('(+NODE)!($E(DELETE("DATE OF TEST"),1,3)=$E((+NODE),1,3))) S $P(VAFY,HLFS,24)=HLQ
"RTN","IVMCZMT",164,0)
 ;
"RTN","IVMCZMT",165,0)
QUIT    Q "ZMT"_HLFS_$G(VAFY)
"RTN","IVMPTRN8")
0^2^B52985930
"RTN","IVMPTRN8",1,0)
IVMPTRN8 ;ALB/RKS/PDJ/BRM/TDM - HL7 FULL DATA TRANSMISSION (Z07) BUILDER ; 5/18/2005 10:22 AM
"RTN","IVMPTRN8",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**9,11,19,12,21,17,24,36,37,47,48,42,34,77,76,75,79,85,89,98,56,97,104**; 21-OCT-94
"RTN","IVMPTRN8",3,0)
 ;
"RTN","IVMPTRN8",4,0)
 ;
"RTN","IVMPTRN8",5,0)
BUILD(DFN,IVMMTDT,IVMCT,IVMQUERY) ; --
"RTN","IVMPTRN8",6,0)
 ;  Description: This entry point will be used to create an HL7 
"RTN","IVMPTRN8",7,0)
 ;  "Full Data Transmission" message for a patient.
"RTN","IVMPTRN8",8,0)
 ;
"RTN","IVMPTRN8",9,0)
 ;  Input:
"RTN","IVMPTRN8",10,0)
 ;        DFN - Patient IEN
"RTN","IVMPTRN8",11,0)
 ;    IVMMTDT - date of the patient's Means Test or Copay Test
"RTN","IVMPTRN8",12,0)
 ;      IVMCT - count of hl7 segments transmitted, pass by reference
"RTN","IVMPTRN8",13,0)
 ;   IVMQUERY - array passed in by reference where
"RTN","IVMPTRN8",14,0)
 ;    IVMQUERY("LTD") -- # of the QUERY that is currently open or
"RTN","IVMPTRN8",15,0)
 ;                undefined, zero, or null if no QUERY opened for
"RTN","IVMPTRN8",16,0)
 ;                last treatment date
"RTN","IVMPTRN8",17,0)
 ;    IVMQUERY("OVIS") -- # of the QUERY that is currently open or
"RTN","IVMPTRN8",18,0)
 ;                undefined, zero, or null if no QUERY opened for
"RTN","IVMPTRN8",19,0)
 ;                finding outpatient visits
"RTN","IVMPTRN8",20,0)
 ;
"RTN","IVMPTRN8",21,0)
 ;  HL7 variables as defined by call to INIT^IVMUFNC:
"RTN","IVMPTRN8",22,0)
 ;      HLEVN - HL7 message event counter 
"RTN","IVMPTRN8",23,0)
 ;      HLSDT - a flag that indicates that the data to be sent is
"RTN","IVMPTRN8",24,0)
 ;              stored in the ^TMP("HLS") global array.
"RTN","IVMPTRN8",25,0)
 ;
"RTN","IVMPTRN8",26,0)
 ;  The following variables returned by the INIT^HLTRANS entry point:
"RTN","IVMPTRN8",27,0)
 ;    HLNDAP - Non-DHCP Application Pointer from file 770
"RTN","IVMPTRN8",28,0)
 ;   HLNDAP0 - Zero node from file 770 corresponding to HLNDAP
"RTN","IVMPTRN8",29,0)
 ;     HLDAP - DHCP Application Pointer from file 771
"RTN","IVMPTRN8",30,0)
 ;     HLDAN - The DHCP Application Name (.01 field, file 771) for HLDAP
"RTN","IVMPTRN8",31,0)
 ;     HLPID - HL7 processing ID from file 770
"RTN","IVMPTRN8",32,0)
 ;     HLVER - HL7 version number from file 770
"RTN","IVMPTRN8",33,0)
 ;      HLFS - HL7 Field Separator from the 'FS' node of file 771
"RTN","IVMPTRN8",34,0)
 ;     HLECH - HL7 Encoding Characters from the 'EC' node of file 771
"RTN","IVMPTRN8",35,0)
 ;       HLQ - Double quotes ("") for use in building HL7 segments
"RTN","IVMPTRN8",36,0)
 ;     HLERR - if an error is encountered, an error message is returned
"RTN","IVMPTRN8",37,0)
 ;             in the HLERR variable.
"RTN","IVMPTRN8",38,0)
 ;      HLDA - the internal entry number for the entry created in
"RTN","IVMPTRN8",39,0)
 ;             file #772.
"RTN","IVMPTRN8",40,0)
 ;      HLDT - transmission date/time (associated with the entry in file
"RTN","IVMPTRN8",41,0)
 ;             #772 identified by HLDA) in internal VA FileMan format.
"RTN","IVMPTRN8",42,0)
 ;     HLDT1 - the same transmission date/time as the HLDT variable, 
"RTN","IVMPTRN8",43,0)
 ;             only in HL7 format.
"RTN","IVMPTRN8",44,0)
 ;
"RTN","IVMPTRN8",45,0)
 ; Output:
"RTN","IVMPTRN8",46,0)
 ;  ^TMP("HLS",$J,IVMCT) - global array containing all segments of the HL7 message that the VistA application wishes to send.  The HLSDT variable is defined above and the IVMCT variable is a sequential number incremented by 1.
"RTN","IVMPTRN8",47,0)
 ;
"RTN","IVMPTRN8",48,0)
 ;
"RTN","IVMPTRN8",49,0)
 N DGINC,DGIR,DGREL,I,IVMNTE,IVMPID,IVMSUB,IVMZRD,VAFPID,VAFZEL,FBZFE,IVMZCD,DELETE,NODE,IVMPIEN,TEST,IVMPNODE,TESTTYPE,SEQS,TESTCODE,HARDSHIP,ACTVIEN,IVMZMH,IVMSEQ
"RTN","IVMPTRN8",50,0)
 N EDBMTZ06,ZMHSQ,SETID
"RTN","IVMPTRN8",51,0)
 ;
"RTN","IVMPTRN8",52,0)
 ; create (PID) Patient Identification segment
"RTN","IVMPTRN8",53,0)
 S IVMSEQ="3,5,7,8,11,12,13,14,19"
"RTN","IVMPTRN8",54,0)
 ; do not transmit seq 11 and 12 if the Bad Address Indicator is set
"RTN","IVMPTRN8",55,0)
 ; or other address filters do not pass
"RTN","IVMPTRN8",56,0)
 S:$$FILTER^IVMPTRN9(DFN) IVMSEQ="3,5,7,8,13,14,19"
"RTN","IVMPTRN8",57,0)
 S IVMPID=$$EN^VAFHLPID(DFN,"1,"_IVMSEQ)        ;add SEQ 1 for PID
"RTN","IVMPTRN8",58,0)
 ;
"RTN","IVMPTRN8",59,0)
 ; **** Add ICN to 2nd piece PID segment for MPI@HEC.
"RTN","IVMPTRN8",60,0)
 S IVMCMOR="1,2"
"RTN","IVMPTRN8",61,0)
 ; check to see if site is a legacy site.  If not add ICN to PID segment.
"RTN","IVMPTRN8",62,0)
 I '$D(^PPP(1020.128,"AC",$P($$SITE^VASITE,"^",3))) D
"RTN","IVMPTRN8",63,0)
 .I +$$GETICN^MPIF001(DFN)>0,($$IFLOCAL^MPIF001(DFN)=0) S IVMPID=$$EN^VAFCPID(DFN,"1,2,"_IVMSEQ),IVMCMOR="1,2,3"  ;add SEQ 1 and 2 for PID
"RTN","IVMPTRN8",64,0)
 ;
"RTN","IVMPTRN8",65,0)
 I $D(VAFPID(1)) S IVMPID(1)=VAFPID(1)
"RTN","IVMPTRN8",66,0)
 ; send SSN indicating pseudo
"RTN","IVMPTRN8",67,0)
 ; I $P(IVMPID_$G(IVMPID(1)),HLFS,20)["P" D PSEUDO^IVMPTRN1  ; strip 'P' from pseudo SSNs
"RTN","IVMPTRN8",68,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID
"RTN","IVMPTRN8",69,0)
 I $D(IVMPID(1)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID(1)
"RTN","IVMPTRN8",70,0)
 ;
"RTN","IVMPTRN8",71,0)
 ; **** create (PD1) Patient CMOR segment for MPI@HEC.
"RTN","IVMPTRN8",72,0)
 S:'$D(HL("FS")) HL("FS")=HLFS
"RTN","IVMPTRN8",73,0)
 S:'$D(HL("ECH")) HL("ECH")=HLECH
"RTN","IVMPTRN8",74,0)
 S:'$D(HL("Q")) HL("Q")=HLQ
"RTN","IVMPTRN8",75,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLPD1(DFN,IVMCMOR)
"RTN","IVMPTRN8",76,0)
 ;
"RTN","IVMPTRN8",77,0)
 ; create (ZPD) Patient Dependent Info. segment
"RTN","IVMPTRN8",78,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN1^VAFHLZPD(DFN,"1,8,9,11,12,13,17,19,31,32,33"),IVMINS=$P(^(IVMCT),HLFS,12)
"RTN","IVMPTRN8",79,0)
 ;
"RTN","IVMPTRN8",80,0)
 ; create (ZTA) Temporary Address segment
"RTN","IVMPTRN8",81,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZTA(DFN,"1,2,3,4,5,6,7")
"RTN","IVMPTRN8",82,0)
 ;
"RTN","IVMPTRN8",83,0)
 ; create (ZIE) Ineligible segment
"RTN","IVMPTRN8",84,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIE(DFN,"1,2,3",1)
"RTN","IVMPTRN8",85,0)
 ;
"RTN","IVMPTRN8",86,0)
 ; create (ZEL) Eligibility segment(s) 
"RTN","IVMPTRN8",87,0)
 ; **** Add 5th piece to ZEL to correct consistency check
"RTN","IVMPTRN8",88,0)
 D EN1^VAFHLZEL(DFN,"1,2,5,6,7,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,29,34,35,37,38",2,.VAFZEL)
"RTN","IVMPTRN8",89,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(VAFZEL(1))  ; Primary Eligibility
"RTN","IVMPTRN8",90,0)
 ; - other entitled eligibilities
"RTN","IVMPTRN8",91,0)
 F IVMSUB=1:0 S IVMSUB=+$O(VAFZEL(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",92,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(VAFZEL(+IVMSUB))
"RTN","IVMPTRN8",93,0)
 ;
"RTN","IVMPTRN8",94,0)
 ; create (ZEN) Enrollment segment
"RTN","IVMPTRN8",95,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEN(DFN)
"RTN","IVMPTRN8",96,0)
 ;
"RTN","IVMPTRN8",97,0)
 ; create (ZCD) Catastrophic Disability segment(s)
"RTN","IVMPTRN8",98,0)
 D BUILD^VAFHLZCD(.IVMZCD,DFN,,HLQ,HLFS)
"RTN","IVMPTRN8",99,0)
 F IVMSUB=0:0 S IVMSUB=+$O(IVMZCD(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",100,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(IVMZCD(+IVMSUB))
"RTN","IVMPTRN8",101,0)
 ;
"RTN","IVMPTRN8",102,0)
 ; Optionally create (ZMH) Military History segments
"RTN","IVMPTRN8",103,0)
 D ENTER^VAFHLZMH(DFN,"IVMZMH")
"RTN","IVMPTRN8",104,0)
 S (ZMHSQ,SETID)=0
"RTN","IVMPTRN8",105,0)
 I $D(IVMZMH) F  S ZMHSQ=$O(IVMZMH(ZMHSQ)) Q:ZMHSQ=""  D
"RTN","IVMPTRN8",106,0)
 .Q:$TR($P(IVMZMH(ZMHSQ,0),HLFS,4,5),"""^~")=""
"RTN","IVMPTRN8",107,0)
 .S SETID=SETID+1,IVMCT=IVMCT+1
"RTN","IVMPTRN8",108,0)
 .S ^TMP("HLS",$J,IVMCT)="ZMH"_HLFS_SETID_HLFS_$P(IVMZMH(ZMHSQ,0),HLFS,3,5)
"RTN","IVMPTRN8",109,0)
 ;
"RTN","IVMPTRN8",110,0)
 ; create (ZRD) Rated Disabilities segment(s)
"RTN","IVMPTRN8",111,0)
 D EN^VAFHLZRD(DFN,"1,2,3,4",HLQ,HLFS,"IVMZRD")
"RTN","IVMPTRN8",112,0)
 F IVMSUB=0:0 S IVMSUB=+$O(IVMZRD(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",113,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(IVMZRD(+IVMSUB,0))
"RTN","IVMPTRN8",114,0)
 ;
"RTN","IVMPTRN8",115,0)
 ; create (ZCT) Emergency Contact segment
"RTN","IVMPTRN8",116,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZCT(DFN,"1,2,3,4,5,6,7")
"RTN","IVMPTRN8",117,0)
 ;
"RTN","IVMPTRN8",118,0)
 ; create (ZEM) Employment Info. segment for (1) Patient & (2) Spouse
"RTN","IVMPTRN8",119,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEM(DFN,"1,2,3")
"RTN","IVMPTRN8",120,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEM(DFN,"1,2,3",2,2)
"RTN","IVMPTRN8",121,0)
 ;
"RTN","IVMPTRN8",122,0)
 ; create (ZGD) Guardian segment for (1) VA & (2) Civil 
"RTN","IVMPTRN8",123,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZGD(DFN,"1,2,3,4,5,6,7,8",1)
"RTN","IVMPTRN8",124,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZGD(DFN,"1,2,3,4,5,6,7,8",2)
"RTN","IVMPTRN8",125,0)
 ;
"RTN","IVMPTRN8",126,0)
 ; Income Year requiring transmission from IVM Patient File (301.5)
"RTN","IVMPTRN8",127,0)
 S IVMIY=$S($D(IVMIY):IVMIY,1:(IVMMTDT-10000))
"RTN","IVMPTRN8",128,0)
 N MTINFO S MTINFO=$$FUT^DGMTU(DFN)
"RTN","IVMPTRN8",129,0)
 I ($E(IVMIY,1,3)+1)=$E($P(MTINFO,U,2),1,3) S IVMMTDT=$P(MTINFO,U,2)
"RTN","IVMPTRN8",130,0)
 ;get the primary test for the income year
"RTN","IVMPTRN8",131,0)
 S TESTTYPE=$$GETTYPE^IVMPTRN9(DFN,IVMMTDT,.TESTCODE,.HARDSHIP,.ACTVIEN)
"RTN","IVMPTRN8",132,0)
 ;
"RTN","IVMPTRN8",133,0)
 ; The following function call returns:
"RTN","IVMPTRN8",134,0)
 ;   - Patient Relation IEN array in DGREL
"RTN","IVMPTRN8",135,0)
 ;   - Individual Annual Income IEN array in DGINC
"RTN","IVMPTRN8",136,0)
 ;   - Income Relation IEN array in DGINR
"RTN","IVMPTRN8",137,0)
 D ALL^DGMTU21(DFN,"VSC",IVMMTDT,"IPR",ACTVIEN)
"RTN","IVMPTRN8",138,0)
 ;
"RTN","IVMPTRN8",139,0)
 S EDBMTZ06=0 I $$VERZ06^EASPTRN1(DFN) S EDBMTZ06=1
"RTN","IVMPTRN8",140,0)
 ; create (ZIC) Income segment for veteran
"RTN","IVMPTRN8",141,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("V")),"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20")
"RTN","IVMPTRN8",142,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",143,0)
 ;use IVMIY not IVMMTDT. For LTC copay exemption, IVMMTDT is not correct
"RTN","IVMPTRN8",144,0)
 S $P(^TMP("HLS",$J,IVMCT),"^",3)=$$HLDATE^HLFNC(IVMIY)
"RTN","IVMPTRN8",145,0)
 ;
"RTN","IVMPTRN8",146,0)
 ; create (ZIR) Income Relation segment for veteran
"RTN","IVMPTRN8",147,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("V")),"1,2,3,4,5,10")
"RTN","IVMPTRN8",148,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^1"
"RTN","IVMPTRN8",149,0)
 ;
"RTN","IVMPTRN8",150,0)
 ; create (ZDP) Patient Dependent Info. segment for spouse
"RTN","IVMPTRN8",151,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZDP(+$G(DGREL("S")),"1,2,3,4,5,6,7,8,9")
"RTN","IVMPTRN8",152,0)
 I $P(^TMP("HLS",$J,IVMCT),HLFS,3)'=HLQ,($P($G(^(IVMCT)),HLFS,6)=HLQ) D
"RTN","IVMPTRN8",153,0)
 .; - pass non-existant SSNs as 0s
"RTN","IVMPTRN8",154,0)
 .S $P(X,HLFS,6)="000000000"
"RTN","IVMPTRN8",155,0)
 ;
"RTN","IVMPTRN8",156,0)
 ; create (ZIC) Income segment for spouse
"RTN","IVMPTRN8",157,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("S")),"1,2,3,4,5,6,7,8,9,10,11,12,16,17,18,19,20")
"RTN","IVMPTRN8",158,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",159,0)
 ;
"RTN","IVMPTRN8",160,0)
 ; create (ZIR) Income Relation segment for spouse
"RTN","IVMPTRN8",161,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("S")),"1,2,3")
"RTN","IVMPTRN8",162,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^"_$P(^TMP("HLS",$J,IVMCT),"^",2)
"RTN","IVMPTRN8",163,0)
 ;
"RTN","IVMPTRN8",164,0)
 ;
"RTN","IVMPTRN8",165,0)
 ; create ZDP, ZIC, and ZIR segments for all Means Test dependents
"RTN","IVMPTRN8",166,0)
 F IVMSUB=0:0 S IVMSUB=$O(DGREL("C",IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",167,0)
 .;
"RTN","IVMPTRN8",168,0)
 .; - create (ZDP) Dependent Info. segment for dependent child
"RTN","IVMPTRN8",169,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZDP(+$G(DGREL("C",IVMSUB)),"1,2,3,4,5,6,7,9")
"RTN","IVMPTRN8",170,0)
 .I $P(^TMP("HLS",$J,IVMCT),HLFS,3)'=HLQ,($P($G(^(IVMCT)),HLFS,6)=HLQ) D
"RTN","IVMPTRN8",171,0)
 ..; - pass non-existant SSNs as 0s
"RTN","IVMPTRN8",172,0)
 ..S $P(X,HLFS,6)="000000000"
"RTN","IVMPTRN8",173,0)
 .;
"RTN","IVMPTRN8",174,0)
 .; - create (ZIC) Income segment for dependent child
"RTN","IVMPTRN8",175,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("C",IVMSUB)),"1,2,3,4,5,6,7,8,9,10,11,12,15")
"RTN","IVMPTRN8",176,0)
 .I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",177,0)
 .;
"RTN","IVMPTRN8",178,0)
 .; - create (ZIR) Income Relation segment for dependent child
"RTN","IVMPTRN8",179,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("C",IVMSUB)),"1,2,3,6,7,8,9")
"RTN","IVMPTRN8",180,0)
 .I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^"_$P(^TMP("HLS",$J,IVMCT),"^",2)
"RTN","IVMPTRN8",181,0)
 .; 
"RTN","IVMPTRN8",182,0)
 ;
"RTN","IVMPTRN8",183,0)
 ; create (ZIO) Inpatient/Outpatient segment for veteran
"RTN","IVMPTRN8",184,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)="ZIO^1^"_$$EN^IVMUFNC1(DFN,IVMMTDT,.IVMQUERY)_"^"_$$LTD^IVMUFNC(DFN,.IVMQUERY)
"RTN","IVMPTRN8",185,0)
 ;
"RTN","IVMPTRN8",186,0)
 ; create (NTE) Notes and Comments segment
"RTN","IVMPTRN8",187,0)
 D NTE^IVMUFNC4(DFN,.IVMNTE,IVMMTDT)
"RTN","IVMPTRN8",188,0)
 I '$D(IVMNTE) D
"RTN","IVMPTRN8",189,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)="NTE^1"
"RTN","IVMPTRN8",190,0)
 I $D(IVMNTE) D
"RTN","IVMPTRN8",191,0)
 .; - get notes and comments
"RTN","IVMPTRN8",192,0)
 .F IVMSUB=0:0 S IVMSUB=$O(IVMNTE(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",193,0)
 ..S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMNTE(IVMSUB)
"RTN","IVMPTRN8",194,0)
 ;
"RTN","IVMPTRN8",195,0)
 ; create (IN1) Insurance segment(s) for all active insurance
"RTN","IVMPTRN8",196,0)
 K ^TMP("VAFIN1",$J)
"RTN","IVMPTRN8",197,0)
 D EN^VAFHLIN1(DFN,"1,4,5,7,8,9,12,13,15,16,17,28,36")
"RTN","IVMPTRN8",198,0)
 F IVMSUB=0:0 S IVMSUB=$O(^TMP("VAFIN1",$J,IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",199,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=^TMP("VAFIN1",$J,+IVMSUB,0)
"RTN","IVMPTRN8",200,0)
 ;
"RTN","IVMPTRN8",201,0)
 D GOTO^IVMPTRN9
"RTN","IVMPTRN8",202,0)
 Q
"VER")
8.0^22.0
"BLD",6007,6)
^SEQ #89
**END**
**END**
