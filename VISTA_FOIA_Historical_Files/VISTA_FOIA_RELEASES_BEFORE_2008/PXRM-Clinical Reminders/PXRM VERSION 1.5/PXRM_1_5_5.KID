KIDS Distribution saved on Jul 24, 2001@11:10:21
PXRM*1.5*5 Build 07/24/2001
**KIDS**:PXRM*1.5*5^

**INSTALL NAME**
PXRM*1.5*5
"BLD",2862,0)
PXRM*1.5*5^CLINICAL REMINDERS^0^3010724^y
"BLD",2862,1,0)
^^2^2^3010322^^^
"BLD",2862,1,1,0)
This patch update the Exchange Utility so it is compatible with version
"BLD",2862,1,2,0)
1.5 of Clinical Reminders.
"BLD",2862,4,0)
^9.64PA^811.9^7
"BLD",2862,4,801.41,0)
801.41
"BLD",2862,4,801.41,222)
y^y^f^^^^n
"BLD",2862,4,811.2,0)
811.2
"BLD",2862,4,811.2,222)
y^y^f^^^^n
"BLD",2862,4,811.4,0)
811.4
"BLD",2862,4,811.4,222)
y^y^f^^^^n
"BLD",2862,4,811.5,0)
811.5
"BLD",2862,4,811.5,222)
y^y^f^^^^n
"BLD",2862,4,811.6,0)
811.6
"BLD",2862,4,811.6,222)
y^y^f^^^^n
"BLD",2862,4,811.8,0)
811.8
"BLD",2862,4,811.8,222)
y^y^f^^n^^n^o^n
"BLD",2862,4,811.8,224)

"BLD",2862,4,811.9,0)
811.9
"BLD",2862,4,811.9,222)
y^y^f^^^^n
"BLD",2862,4,"B",801.41,801.41)

"BLD",2862,4,"B",811.2,811.2)

"BLD",2862,4,"B",811.4,811.4)

"BLD",2862,4,"B",811.5,811.5)

"BLD",2862,4,"B",811.6,811.6)

"BLD",2862,4,"B",811.8,811.8)

"BLD",2862,4,"B",811.9,811.9)

"BLD",2862,"INI")
PRE^PXRMP5I
"BLD",2862,"INIT")
POST^PXRMP5I
"BLD",2862,"KRN",0)
^9.67PA^19^17
"BLD",2862,"KRN",.4,0)
.4
"BLD",2862,"KRN",.4,"NM",0)
^9.68A^15^15
"BLD",2862,"KRN",.4,"NM",1,0)
PXRM REMINDER DIALOG    FILE #801.41^801.41^0
"BLD",2862,"KRN",.4,"NM",2,0)
PXRM DIALOG GROUP    FILE #801.41^801.41^0
"BLD",2862,"KRN",.4,"NM",3,0)
PXRM DEFINITION INQUIRY    FILE #811.9^811.9^0
"BLD",2862,"KRN",.4,"NM",4,0)
PXRM DEFINITION LIST    FILE #811.9^811.9^0
"BLD",2862,"KRN",.4,"NM",5,0)
PXRM TAXONOMY INQUIRY    FILE #811.2^811.2^0
"BLD",2862,"KRN",.4,"NM",6,0)
PXRM COMPUTED FINDING LIST    FILE #811.4^811.4^0
"BLD",2862,"KRN",.4,"NM",7,0)
PXRM CF LIST HEADER    FILE #811.4^811.4^1^
"BLD",2862,"KRN",.4,"NM",8,0)
PXRM TERM INQUIRY    FILE #811.5^811.5^0
"BLD",2862,"KRN",.4,"NM",9,0)
PXRM TERM LIST    FILE #811.5^811.5^0
"BLD",2862,"KRN",.4,"NM",10,0)
PXRM RESULT ELEMENT    FILE #801.41^801.41^0
"BLD",2862,"KRN",.4,"NM",11,0)
PXRM RESULT GROUP    FILE #801.41^801.41^0
"BLD",2862,"KRN",.4,"NM",12,0)
PXRM DIALOG FORCED VALUE    FILE #801.41^801.41^0
"BLD",2862,"KRN",.4,"NM",13,0)
PXRM DIALOG PROMPT    FILE #801.41^801.41^0
"BLD",2862,"KRN",.4,"NM",14,0)
PXRM DIALOG ELEMENT    FILE #801.41^801.41^0
"BLD",2862,"KRN",.4,"NM",15,0)
PXRM SPONSOR LIST    FILE #811.6^811.6^0
"BLD",2862,"KRN",.4,"NM","B","PXRM CF LIST HEADER    FILE #811.4",7)

"BLD",2862,"KRN",.4,"NM","B","PXRM COMPUTED FINDING LIST    FILE #811.4",6)

"BLD",2862,"KRN",.4,"NM","B","PXRM DEFINITION INQUIRY    FILE #811.9",3)

"BLD",2862,"KRN",.4,"NM","B","PXRM DEFINITION LIST    FILE #811.9",4)

"BLD",2862,"KRN",.4,"NM","B","PXRM DIALOG ELEMENT    FILE #801.41",14)

"BLD",2862,"KRN",.4,"NM","B","PXRM DIALOG FORCED VALUE    FILE #801.41",12)

"BLD",2862,"KRN",.4,"NM","B","PXRM DIALOG GROUP    FILE #801.41",2)

"BLD",2862,"KRN",.4,"NM","B","PXRM DIALOG PROMPT    FILE #801.41",13)

"BLD",2862,"KRN",.4,"NM","B","PXRM REMINDER DIALOG    FILE #801.41",1)

"BLD",2862,"KRN",.4,"NM","B","PXRM RESULT ELEMENT    FILE #801.41",10)

"BLD",2862,"KRN",.4,"NM","B","PXRM RESULT GROUP    FILE #801.41",11)

"BLD",2862,"KRN",.4,"NM","B","PXRM SPONSOR LIST    FILE #811.6",15)

"BLD",2862,"KRN",.4,"NM","B","PXRM TAXONOMY INQUIRY    FILE #811.2",5)

"BLD",2862,"KRN",.4,"NM","B","PXRM TERM INQUIRY    FILE #811.5",8)

"BLD",2862,"KRN",.4,"NM","B","PXRM TERM LIST    FILE #811.5",9)

"BLD",2862,"KRN",.401,0)
.401
"BLD",2862,"KRN",.402,0)
.402
"BLD",2862,"KRN",.402,"NM",0)
^9.68A^10^10
"BLD",2862,"KRN",.402,"NM",1,0)
PXRM EDIT ELEMENT    FILE #801.41^801.41^0
"BLD",2862,"KRN",.402,"NM",2,0)
PXRM EDIT PROMPT    FILE #801.41^801.41^0
"BLD",2862,"KRN",.402,"NM",3,0)
PXRM EDIT FORCED VALUE    FILE #801.41^801.41^0
"BLD",2862,"KRN",.402,"NM",4,0)
PXRM EDIT GROUP    FILE #801.41^801.41^0
"BLD",2862,"KRN",.402,"NM",5,0)
PXRM EDIT REMINDER DIALOG    FILE #801.41^801.41^0
"BLD",2862,"KRN",.402,"NM",6,0)
PXRM RESULT ELEMENT    FILE #801.41^801.41^0
"BLD",2862,"KRN",.402,"NM",7,0)
PXRM RESULT GROUP    FILE #801.41^801.41^0
"BLD",2862,"KRN",.402,"NM",8,0)
PXRM EDIT REMINDER TERM    FILE #811.5^811.5^0
"BLD",2862,"KRN",.402,"NM",9,0)
PXRM EDIT NATIONAL TERM    FILE #811.5^811.5^0
"BLD",2862,"KRN",.402,"NM",10,0)
PXRM SPONSOR EDIT    FILE #811.6^811.6^0
"BLD",2862,"KRN",.402,"NM","B","PXRM EDIT ELEMENT    FILE #801.41",1)

"BLD",2862,"KRN",.402,"NM","B","PXRM EDIT FORCED VALUE    FILE #801.41",3)

"BLD",2862,"KRN",.402,"NM","B","PXRM EDIT GROUP    FILE #801.41",4)

"BLD",2862,"KRN",.402,"NM","B","PXRM EDIT NATIONAL TERM    FILE #811.5",9)

"BLD",2862,"KRN",.402,"NM","B","PXRM EDIT PROMPT    FILE #801.41",2)

"BLD",2862,"KRN",.402,"NM","B","PXRM EDIT REMINDER DIALOG    FILE #801.41",5)

"BLD",2862,"KRN",.402,"NM","B","PXRM EDIT REMINDER TERM    FILE #811.5",8)

"BLD",2862,"KRN",.402,"NM","B","PXRM RESULT ELEMENT    FILE #801.41",6)

"BLD",2862,"KRN",.402,"NM","B","PXRM RESULT GROUP    FILE #801.41",7)

"BLD",2862,"KRN",.402,"NM","B","PXRM SPONSOR EDIT    FILE #811.6",10)

"BLD",2862,"KRN",.403,0)
.403
"BLD",2862,"KRN",.5,0)
.5
"BLD",2862,"KRN",.84,0)
.84
"BLD",2862,"KRN",3.6,0)
3.6
"BLD",2862,"KRN",3.8,0)
3.8
"BLD",2862,"KRN",9.2,0)
9.2
"BLD",2862,"KRN",9.8,0)
9.8
"BLD",2862,"KRN",9.8,"NM",0)
^9.68A^64^61
"BLD",2862,"KRN",9.8,"NM",1,0)
PXRMEXCF^^0^B6628639
"BLD",2862,"KRN",9.8,"NM",2,0)
PXRMEXCS^^0^B4047044
"BLD",2862,"KRN",9.8,"NM",3,0)
PXRMEXDG^^0^B36417883
"BLD",2862,"KRN",9.8,"NM",4,0)
PXRMEXDH^^0^B6409535
"BLD",2862,"KRN",9.8,"NM",5,0)
PXRMEXFI^^0^B10059048
"BLD",2862,"KRN",9.8,"NM",6,0)
PXRMEXHF^^0^B44645176
"BLD",2862,"KRN",9.8,"NM",7,0)
PXRMEXIC^^0^B31385042
"BLD",2862,"KRN",9.8,"NM",8,0)
PXRMEXID^^0^B46494297
"BLD",2862,"KRN",9.8,"NM",9,0)
PXRMEXIU^^0^B59490470
"BLD",2862,"KRN",9.8,"NM",10,0)
PXRMEXIX^^0^B25620048
"BLD",2862,"KRN",9.8,"NM",11,0)
PXRMEXLC^^0^B33248406
"BLD",2862,"KRN",9.8,"NM",12,0)
PXRMEXLD^^0^B87950593
"BLD",2862,"KRN",9.8,"NM",13,0)
PXRMEXLI^^0^B19848962
"BLD",2862,"KRN",9.8,"NM",14,0)
PXRMEXLB^^0^B30257852
"BLD",2862,"KRN",9.8,"NM",15,0)
PXRMEXLM^^0^B50803667
"BLD",2862,"KRN",9.8,"NM",16,0)
PXRMEXLR^^0^B47800679
"BLD",2862,"KRN",9.8,"NM",17,0)
PXRMEXMH^^0^B9663752
"BLD",2862,"KRN",9.8,"NM",18,0)
PXRMEXMM^^0^B26158504
"BLD",2862,"KRN",9.8,"NM",19,0)
PXRMEXPR^^0^B30366184
"BLD",2862,"KRN",9.8,"NM",20,0)
PXRMEXPU^^0^B36825886
"BLD",2862,"KRN",9.8,"NM",21,0)
PXRMEXU1^^0^B74216949
"BLD",2862,"KRN",9.8,"NM",22,0)
PXRMEXU2^^0^B63347518
"BLD",2862,"KRN",9.8,"NM",23,0)
PXRMEXU3^^0^B3563686
"BLD",2862,"KRN",9.8,"NM",24,0)
PXRMEXU4^^0^B30902708
"BLD",2862,"KRN",9.8,"NM",25,0)
PXRMLIST^^0^B6550942
"BLD",2862,"KRN",9.8,"NM",26,0)
PXRMEX^^1^
"BLD",2862,"KRN",9.8,"NM",27,0)
PXRMEXIR^^1^
"BLD",2862,"KRN",9.8,"NM",28,0)
PXRMEXIS^^1^
"BLD",2862,"KRN",9.8,"NM",29,0)
PXRMEXMR^^1^
"BLD",2862,"KRN",9.8,"NM",32,0)
PXRMEXSR^^1^
"BLD",2862,"KRN",9.8,"NM",33,0)
PXRMEXSI^^0^B9204601
"BLD",2862,"KRN",9.8,"NM",34,0)
PXRMP5I^^0^B83757940
"BLD",2862,"KRN",9.8,"NM",35,0)
PXRMREDT^^0^B27940182
"BLD",2862,"KRN",9.8,"NM",36,0)
PXRMUTIL^^0^B45922639
"BLD",2862,"KRN",9.8,"NM",37,0)
PXRMTEDT^^0^B3460121
"BLD",2862,"KRN",9.8,"NM",38,0)
PXRMPTTR^^0^B10615637
"BLD",2862,"KRN",9.8,"NM",39,0)
PXRMDEDT^^0^B74124196
"BLD",2862,"KRN",9.8,"NM",40,0)
PXRMDCPY^^0^B30632926
"BLD",2862,"KRN",9.8,"NM",41,0)
PXRMDBL3^^0^B28881523
"BLD",2862,"KRN",9.8,"NM",42,0)
PXRMTMED^^0^B1357107
"BLD",2862,"KRN",9.8,"NM",43,0)
PXRMDLGZ^^0^B38127018
"BLD",2862,"KRN",9.8,"NM",45,0)
PXRMAGE^^0^B16536289
"BLD",2862,"KRN",9.8,"NM",46,0)
PXRMLOG^^0^B52088886
"BLD",2862,"KRN",9.8,"NM",47,0)
PXRMCOPY^^0^B19113729
"BLD",2862,"KRN",9.8,"NM",48,0)
PXRMCFED^^0^B1548855
"BLD",2862,"KRN",9.8,"NM",49,0)
PXRMINTR^^0^B34877012
"BLD",2862,"KRN",9.8,"NM",50,0)
PXRMLAB^^0^B13514802
"BLD",2862,"KRN",9.8,"NM",51,0)
PXRMDLG1^^0^B73326910
"BLD",2862,"KRN",9.8,"NM",52,0)
PXRMINQ^^0^B15377401
"BLD",2862,"KRN",9.8,"NM",53,0)
PXRMDLL^^0^B73738931
"BLD",2862,"KRN",9.8,"NM",54,0)
PXRMDLLA^^0^B71641482
"BLD",2862,"KRN",9.8,"NM",55,0)
PXRMSPED^^0^B4249360
"BLD",2862,"KRN",9.8,"NM",56,0)
PXRMRPCA^^0^B60476937
"BLD",2862,"KRN",9.8,"NM",57,0)
PXRMRPCD^^0^B10641481
"BLD",2862,"KRN",9.8,"NM",58,0)
PXRMPTDF^^0^B34822019
"BLD",2862,"KRN",9.8,"NM",59,0)
PXRMDGEN^^0^B12325726
"BLD",2862,"KRN",9.8,"NM",60,0)
PXRMDRCL^^0^B12534102
"BLD",2862,"KRN",9.8,"NM",61,0)
PXRMDRUG^^0^B41036660
"BLD",2862,"KRN",9.8,"NM",62,0)
PXRMREDF^^0^B9086331
"BLD",2862,"KRN",9.8,"NM",63,0)
PXRMERRH^^0^B9074765
"BLD",2862,"KRN",9.8,"NM",64,0)
PXRMP5IA^^0^B31582998
"BLD",2862,"KRN",9.8,"NM","B","PXRMAGE",45)

"BLD",2862,"KRN",9.8,"NM","B","PXRMCFED",48)

"BLD",2862,"KRN",9.8,"NM","B","PXRMCOPY",47)

"BLD",2862,"KRN",9.8,"NM","B","PXRMDBL3",41)

"BLD",2862,"KRN",9.8,"NM","B","PXRMDCPY",40)

"BLD",2862,"KRN",9.8,"NM","B","PXRMDEDT",39)

"BLD",2862,"KRN",9.8,"NM","B","PXRMDGEN",59)

"BLD",2862,"KRN",9.8,"NM","B","PXRMDLG1",51)

"BLD",2862,"KRN",9.8,"NM","B","PXRMDLGZ",43)

"BLD",2862,"KRN",9.8,"NM","B","PXRMDLL",53)

"BLD",2862,"KRN",9.8,"NM","B","PXRMDLLA",54)

"BLD",2862,"KRN",9.8,"NM","B","PXRMDRCL",60)

"BLD",2862,"KRN",9.8,"NM","B","PXRMDRUG",61)

"BLD",2862,"KRN",9.8,"NM","B","PXRMERRH",63)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEX",26)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXCF",1)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXCS",2)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXDG",3)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXDH",4)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXFI",5)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXHF",6)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXIC",7)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXID",8)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXIR",27)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXIS",28)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXIU",9)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXIX",10)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXLB",14)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXLC",11)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXLD",12)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXLI",13)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXLM",15)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXLR",16)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXMH",17)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXMM",18)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXMR",29)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXPR",19)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXPU",20)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXSI",33)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXSR",32)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXU1",21)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXU2",22)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXU3",23)

"BLD",2862,"KRN",9.8,"NM","B","PXRMEXU4",24)

"BLD",2862,"KRN",9.8,"NM","B","PXRMINQ",52)

"BLD",2862,"KRN",9.8,"NM","B","PXRMINTR",49)

"BLD",2862,"KRN",9.8,"NM","B","PXRMLAB",50)

"BLD",2862,"KRN",9.8,"NM","B","PXRMLIST",25)

"BLD",2862,"KRN",9.8,"NM","B","PXRMLOG",46)

"BLD",2862,"KRN",9.8,"NM","B","PXRMP5I",34)

"BLD",2862,"KRN",9.8,"NM","B","PXRMP5IA",64)

"BLD",2862,"KRN",9.8,"NM","B","PXRMPTDF",58)

"BLD",2862,"KRN",9.8,"NM","B","PXRMPTTR",38)

"BLD",2862,"KRN",9.8,"NM","B","PXRMREDF",62)

"BLD",2862,"KRN",9.8,"NM","B","PXRMREDT",35)

"BLD",2862,"KRN",9.8,"NM","B","PXRMRPCA",56)

"BLD",2862,"KRN",9.8,"NM","B","PXRMRPCD",57)

"BLD",2862,"KRN",9.8,"NM","B","PXRMSPED",55)

"BLD",2862,"KRN",9.8,"NM","B","PXRMTEDT",37)

"BLD",2862,"KRN",9.8,"NM","B","PXRMTMED",42)

"BLD",2862,"KRN",9.8,"NM","B","PXRMUTIL",36)

"BLD",2862,"KRN",19,0)
19
"BLD",2862,"KRN",19,"NM",0)
^9.68A^51^49
"BLD",2862,"KRN",19,"NM",1,0)
PXRM REMINDER EXCHANGE^^0
"BLD",2862,"KRN",19,"NM",2,0)
PXRM MANAGERS MENU^^0
"BLD",2862,"KRN",19,"NM",3,0)
PXRM SPONSOR EDIT^^0
"BLD",2862,"KRN",19,"NM",4,0)
PXRM SPONSOR LIST^^0
"BLD",2862,"KRN",19,"NM",5,0)
PXRM SPONSOR MANAGEMENT^^0
"BLD",2862,"KRN",19,"NM",6,0)
PXRM CF MANAGEMENT^^0^
"BLD",2862,"KRN",19,"NM",7,0)
PXRM DIALOG MANAGEMENT^^0^
"BLD",2862,"KRN",19,"NM",8,0)
PXRM REMINDER MANAGEMENT^^0^
"BLD",2862,"KRN",19,"NM",9,0)
PXRM TAXONOMY MANAGEMENT^^0^
"BLD",2862,"KRN",19,"NM",10,0)
PXRM TERM MANAGEMENT^^0^
"BLD",2862,"KRN",19,"NM",11,0)
PXRM REMINDER TEST^^4^
"BLD",2862,"KRN",19,"NM",12,0)
PXRM OTHER SUPPORTING MENUS^^0^
"BLD",2862,"KRN",19,"NM",13,0)
PXRM INFO ONLY^^0^
"BLD",2862,"KRN",19,"NM",14,0)
PXRM REMINDER REPORTS^^0^
"BLD",2862,"KRN",19,"NM",15,0)
PXRM CPRS CONFIGURATION^^0^
"BLD",2862,"KRN",19,"NM",16,0)
PXRM COMPUTED FINDING EDIT^^4^
"BLD",2862,"KRN",19,"NM",17,0)
PXRM COMPUTED FINDING LIST^^4^
"BLD",2862,"KRN",19,"NM",18,0)
PXRM DEFINITION LIST^^4^
"BLD",2862,"KRN",19,"NM",19,0)
PXRM DEFINITION INQUIRY^^4^
"BLD",2862,"KRN",19,"NM",20,0)
PXRM DEFINITION EDIT^^4^
"BLD",2862,"KRN",19,"NM",21,0)
PXRM DEFINITION COPY^^4^
"BLD",2862,"KRN",19,"NM",22,0)
PXRM (IN)/ACTIVATE REMINDERS^^4^
"BLD",2862,"KRN",19,"NM",23,0)
PXRM TAXONOMY LIST^^4^
"BLD",2862,"KRN",19,"NM",24,0)
PXRM TAXONOMY INQUIRY^^4^
"BLD",2862,"KRN",19,"NM",25,0)
PXRM TAXONOMY EDIT^^4^
"BLD",2862,"KRN",19,"NM",26,0)
PXRM TAXONOMY COPY^^4^
"BLD",2862,"KRN",19,"NM",27,0)
PXRM TERM LIST^^4^
"BLD",2862,"KRN",19,"NM",28,0)
PXRM TERM INQUIRY^^4^
"BLD",2862,"KRN",19,"NM",29,0)
PXRM TERM EDIT^^4^
"BLD",2862,"KRN",19,"NM",30,0)
PXRM TERM COPY^^4^
"BLD",2862,"KRN",19,"NM",31,0)
PXRM DIALOG/COMPONENT EDIT^^4^
"BLD",2862,"KRN",19,"NM",32,0)
PXRM DIALOG PARAMETERS^^4^
"BLD",2862,"KRN",19,"NM",33,0)
PXRM REMINDERS DUE^^4^
"BLD",2862,"KRN",19,"NM",34,0)
PXRM EXTRACT EPI FINDING LIST^^4^
"BLD",2862,"KRN",19,"NM",35,0)
PXRM EXTRACT EPI TOTALS^^4^
"BLD",2862,"KRN",19,"NM",38,0)
GMTS COORDINATOR^^4^
"BLD",2862,"KRN",19,"NM",39,0)
IBDF PRINT BLNK ENCOUNTER FORM^^4^
"BLD",2862,"KRN",19,"NM",40,0)
ORCM QUICK ORDERS^^4^
"BLD",2862,"KRN",19,"NM",41,0)
PX PCE COORDINATOR MENU^^4^
"BLD",2862,"KRN",19,"NM",42,0)
PXTT TABLE MAINTENANCE^^4^
"BLD",2862,"KRN",19,"NM",43,0)
PXRM CPRS COVER SHEET LIST^^4^
"BLD",2862,"KRN",19,"NM",44,0)
PXRM CPRS LOOKUP CATEGORIES^^4^
"BLD",2862,"KRN",19,"NM",45,0)
PXRM CATEGORY EDIT/INQUIRE^^4^
"BLD",2862,"KRN",19,"NM",46,0)
PXRM PROGRESS NOTE HEADERS^^4^
"BLD",2862,"KRN",19,"NM",47,0)
PXRM MENTAL HEALTH ACTIVE^^4^
"BLD",2862,"KRN",19,"NM",48,0)
PXRM GUI REMINDERS ACTIVE^^4^
"BLD",2862,"KRN",19,"NM",49,0)
PXRM NEW REMINDER PARAMETERS^^4^
"BLD",2862,"KRN",19,"NM",50,0)
PXRM DEFAULT LOCATION^^4^
"BLD",2862,"KRN",19,"NM",51,0)
PXRM TEXT AT CURSOR^^4^
"BLD",2862,"KRN",19,"NM","B","GMTS COORDINATOR",38)

"BLD",2862,"KRN",19,"NM","B","IBDF PRINT BLNK ENCOUNTER FORM",39)

"BLD",2862,"KRN",19,"NM","B","ORCM QUICK ORDERS",40)

"BLD",2862,"KRN",19,"NM","B","PX PCE COORDINATOR MENU",41)

"BLD",2862,"KRN",19,"NM","B","PXRM (IN)/ACTIVATE REMINDERS",22)

"BLD",2862,"KRN",19,"NM","B","PXRM CATEGORY EDIT/INQUIRE",45)

"BLD",2862,"KRN",19,"NM","B","PXRM CF MANAGEMENT",6)

"BLD",2862,"KRN",19,"NM","B","PXRM COMPUTED FINDING EDIT",16)

"BLD",2862,"KRN",19,"NM","B","PXRM COMPUTED FINDING LIST",17)

"BLD",2862,"KRN",19,"NM","B","PXRM CPRS CONFIGURATION",15)

"BLD",2862,"KRN",19,"NM","B","PXRM CPRS COVER SHEET LIST",43)

"BLD",2862,"KRN",19,"NM","B","PXRM CPRS LOOKUP CATEGORIES",44)

"BLD",2862,"KRN",19,"NM","B","PXRM DEFAULT LOCATION",50)

"BLD",2862,"KRN",19,"NM","B","PXRM DEFINITION COPY",21)

"BLD",2862,"KRN",19,"NM","B","PXRM DEFINITION EDIT",20)

"BLD",2862,"KRN",19,"NM","B","PXRM DEFINITION INQUIRY",19)

"BLD",2862,"KRN",19,"NM","B","PXRM DEFINITION LIST",18)

"BLD",2862,"KRN",19,"NM","B","PXRM DIALOG MANAGEMENT",7)

"BLD",2862,"KRN",19,"NM","B","PXRM DIALOG PARAMETERS",32)

"BLD",2862,"KRN",19,"NM","B","PXRM DIALOG/COMPONENT EDIT",31)

"BLD",2862,"KRN",19,"NM","B","PXRM EXTRACT EPI FINDING LIST",34)

"BLD",2862,"KRN",19,"NM","B","PXRM EXTRACT EPI TOTALS",35)

"BLD",2862,"KRN",19,"NM","B","PXRM GUI REMINDERS ACTIVE",48)

"BLD",2862,"KRN",19,"NM","B","PXRM INFO ONLY",13)

"BLD",2862,"KRN",19,"NM","B","PXRM MANAGERS MENU",2)

"BLD",2862,"KRN",19,"NM","B","PXRM MENTAL HEALTH ACTIVE",47)

"BLD",2862,"KRN",19,"NM","B","PXRM NEW REMINDER PARAMETERS",49)

"BLD",2862,"KRN",19,"NM","B","PXRM OTHER SUPPORTING MENUS",12)

"BLD",2862,"KRN",19,"NM","B","PXRM PROGRESS NOTE HEADERS",46)

"BLD",2862,"KRN",19,"NM","B","PXRM REMINDER EXCHANGE",1)

"BLD",2862,"KRN",19,"NM","B","PXRM REMINDER MANAGEMENT",8)

"BLD",2862,"KRN",19,"NM","B","PXRM REMINDER REPORTS",14)

"BLD",2862,"KRN",19,"NM","B","PXRM REMINDER TEST",11)

"BLD",2862,"KRN",19,"NM","B","PXRM REMINDERS DUE",33)

"BLD",2862,"KRN",19,"NM","B","PXRM SPONSOR EDIT",3)

"BLD",2862,"KRN",19,"NM","B","PXRM SPONSOR LIST",4)

"BLD",2862,"KRN",19,"NM","B","PXRM SPONSOR MANAGEMENT",5)

"BLD",2862,"KRN",19,"NM","B","PXRM TAXONOMY COPY",26)

"BLD",2862,"KRN",19,"NM","B","PXRM TAXONOMY EDIT",25)

"BLD",2862,"KRN",19,"NM","B","PXRM TAXONOMY INQUIRY",24)

"BLD",2862,"KRN",19,"NM","B","PXRM TAXONOMY LIST",23)

"BLD",2862,"KRN",19,"NM","B","PXRM TAXONOMY MANAGEMENT",9)

"BLD",2862,"KRN",19,"NM","B","PXRM TERM COPY",30)

"BLD",2862,"KRN",19,"NM","B","PXRM TERM EDIT",29)

"BLD",2862,"KRN",19,"NM","B","PXRM TERM INQUIRY",28)

"BLD",2862,"KRN",19,"NM","B","PXRM TERM LIST",27)

"BLD",2862,"KRN",19,"NM","B","PXRM TERM MANAGEMENT",10)

"BLD",2862,"KRN",19,"NM","B","PXRM TEXT AT CURSOR",51)

"BLD",2862,"KRN",19,"NM","B","PXTT TABLE MAINTENANCE",42)

"BLD",2862,"KRN",19.1,0)
19.1
"BLD",2862,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",2862,"KRN",101,0)
101
"BLD",2862,"KRN",101,"NM",0)
^9.68A^41^41
"BLD",2862,"KRN",101,"NM",1,0)
PXRM EXCH CREATE HOST FILE^^0
"BLD",2862,"KRN",101,"NM",2,0)
PXRM EXCH CREATE MAILMAN^^0
"BLD",2862,"KRN",101,"NM",3,0)
PXRM EXCH CREATE FILE ENTRY^^0
"BLD",2862,"KRN",101,"NM",4,0)
PXRM EXCH DIALOG DETAILS^^0
"BLD",2862,"KRN",101,"NM",5,0)
PXRM EXCH DIALOG EXIT^^0
"BLD",2862,"KRN",101,"NM",6,0)
PXRM EXCH DIALOG FINDINGS^^0
"BLD",2862,"KRN",101,"NM",7,0)
PXRM EXCH DIALOG MENU^^0
"BLD",2862,"KRN",101,"NM",8,0)
PXRM EXCH DIALOG SUMMARY^^0
"BLD",2862,"KRN",101,"NM",9,0)
PXRM EXCH DIALOG TEXT^^0
"BLD",2862,"KRN",101,"NM",10,0)
PXRM EXCH DIALOG USAGE^^0
"BLD",2862,"KRN",101,"NM",11,0)
PXRM EXCH DEFINITION INQUIRY^^0
"BLD",2862,"KRN",101,"NM",12,0)
PXRM EXCH DELETE FILE ENTRY^^0
"BLD",2862,"KRN",101,"NM",13,0)
PXRM EXCH DELETE INSTALLATION HISTORY^^0
"BLD",2862,"KRN",101,"NM",14,0)
PXRM EXCH INSTALL ALL COMPONENTS^^0
"BLD",2862,"KRN",101,"NM",15,0)
PXRM EXCH INSTALL DIALOG (ALL)^^0
"BLD",2862,"KRN",101,"NM",16,0)
PXRM EXCH INSTALL DIALOG (SELECTED)^^0
"BLD",2862,"KRN",101,"NM",17,0)
PXRM EXCH INSTALL FILE ENTRY^^0
"BLD",2862,"KRN",101,"NM",18,0)
PXRM EXCH INSTALL MENU^^0
"BLD",2862,"KRN",101,"NM",19,0)
PXRM EXCH INSTALL SELECTED COMPONENTS^^0
"BLD",2862,"KRN",101,"NM",20,0)
PXRM EXCH INSTALLATION DETAILS^^0
"BLD",2862,"KRN",101,"NM",21,0)
PXRM EXCH INSTALLATION HISTORY^^0
"BLD",2862,"KRN",101,"NM",22,0)
PXRM EXCH INSTALLATION HISTORY MENU^^0
"BLD",2862,"KRN",101,"NM",23,0)
PXRM EXCH LOAD HOST FILE^^0
"BLD",2862,"KRN",101,"NM",24,0)
PXRM EXCH LOAD MAILMAN^^0
"BLD",2862,"KRN",101,"NM",25,0)
PXRM EXCH MENU^^0
"BLD",2862,"KRN",101,"NM",26,0)
PXRM EXCH SELECT COMPONENT^^0
"BLD",2862,"KRN",101,"NM",27,0)
PXRM EXCH SELECT DIALOG^^0
"BLD",2862,"KRN",101,"NM",28,0)
PXRM EXCH SELECT ENTRY^^0
"BLD",2862,"KRN",101,"NM",29,0)
PXRM EXCH SELECT HISTORY^^0
"BLD",2862,"KRN",101,"NM",30,0)
PXRM EXCH QUIT^^0
"BLD",2862,"KRN",101,"NM",31,0)
PXRM HANDLE HOST FILE^^1^
"BLD",2862,"KRN",101,"NM",32,0)
PXRM HANDLE MAIL MESSAGE^^1^
"BLD",2862,"KRN",101,"NM",33,0)
PXRM INSTALL REMINDER COMPONENTS^^1^
"BLD",2862,"KRN",101,"NM",34,0)
PXRM INSTALLATION SUMMARY^^1^
"BLD",2862,"KRN",101,"NM",35,0)
PXRM LIST COMPONENTS^^1^
"BLD",2862,"KRN",101,"NM",36,0)
PXRM LIST REMINDERS^^0^
"BLD",2862,"KRN",101,"NM",37,0)
PXRM MAIL REMINDER^^1^
"BLD",2862,"KRN",101,"NM",38,0)
PXRM REMINDER INQUIRY^^1^
"BLD",2862,"KRN",101,"NM",39,0)
PXRM SAVE REMINDER^^1^
"BLD",2862,"KRN",101,"NM",40,0)
PXRM SELECT HOST FILE^^1^
"BLD",2862,"KRN",101,"NM",41,0)
PXRM SELECT MESSAGE^^1^
"BLD",2862,"KRN",101,"NM","B","PXRM EXCH CREATE FILE ENTRY",3)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH CREATE HOST FILE",1)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH CREATE MAILMAN",2)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH DEFINITION INQUIRY",11)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH DELETE FILE ENTRY",12)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH DELETE INSTALLATION HISTORY",13)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH DIALOG DETAILS",4)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH DIALOG EXIT",5)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH DIALOG FINDINGS",6)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH DIALOG MENU",7)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH DIALOG SUMMARY",8)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH DIALOG TEXT",9)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH DIALOG USAGE",10)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH INSTALL ALL COMPONENTS",14)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH INSTALL DIALOG (ALL)",15)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH INSTALL DIALOG (SELECTED)",16)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH INSTALL FILE ENTRY",17)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH INSTALL MENU",18)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH INSTALL SELECTED COMPONENTS",19)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH INSTALLATION DETAILS",20)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH INSTALLATION HISTORY",21)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH INSTALLATION HISTORY MENU",22)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH LOAD HOST FILE",23)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH LOAD MAILMAN",24)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH MENU",25)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH QUIT",30)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH SELECT COMPONENT",26)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH SELECT DIALOG",27)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH SELECT ENTRY",28)

"BLD",2862,"KRN",101,"NM","B","PXRM EXCH SELECT HISTORY",29)

"BLD",2862,"KRN",101,"NM","B","PXRM HANDLE HOST FILE",31)

"BLD",2862,"KRN",101,"NM","B","PXRM HANDLE MAIL MESSAGE",32)

"BLD",2862,"KRN",101,"NM","B","PXRM INSTALL REMINDER COMPONENTS",33)

"BLD",2862,"KRN",101,"NM","B","PXRM INSTALLATION SUMMARY",34)

"BLD",2862,"KRN",101,"NM","B","PXRM LIST COMPONENTS",35)

"BLD",2862,"KRN",101,"NM","B","PXRM LIST REMINDERS",36)

"BLD",2862,"KRN",101,"NM","B","PXRM MAIL REMINDER",37)

"BLD",2862,"KRN",101,"NM","B","PXRM REMINDER INQUIRY",38)

"BLD",2862,"KRN",101,"NM","B","PXRM SAVE REMINDER",39)

"BLD",2862,"KRN",101,"NM","B","PXRM SELECT HOST FILE",40)

"BLD",2862,"KRN",101,"NM","B","PXRM SELECT MESSAGE",41)

"BLD",2862,"KRN",409.61,0)
409.61
"BLD",2862,"KRN",409.61,"NM",0)
^9.68A^15^13
"BLD",2862,"KRN",409.61,"NM",1,0)
PXRM EX DEFINITION INQUIRY^^0
"BLD",2862,"KRN",409.61,"NM",2,0)
PXRM EX DIALOG HELP^^0
"BLD",2862,"KRN",409.61,"NM",5,0)
PXRM EX INSTALLATION DETAIL^^0
"BLD",2862,"KRN",409.61,"NM",6,0)
PXRM EX INSTALLATION HISTORY^^0
"BLD",2862,"KRN",409.61,"NM",7,0)
PXRM EX LIST COMPONENTS^^0
"BLD",2862,"KRN",409.61,"NM",8,0)
PXRM EX LIST DIALOG^^0
"BLD",2862,"KRN",409.61,"NM",9,0)
PXRM EX MAIN HELP^^0
"BLD",2862,"KRN",409.61,"NM",10,0)
PXRM EX REMINDER EXCHANGE^^0
"BLD",2862,"KRN",409.61,"NM",11,0)
PXRM EX REMINDER LIST^^0
"BLD",2862,"KRN",409.61,"NM",12,0)
PXRM EX HOST FILE^^1^
"BLD",2862,"KRN",409.61,"NM",13,0)
PXRM EX INSTALL SUMMARY^^1^
"BLD",2862,"KRN",409.61,"NM",14,0)
PXRM EX MAILMAN MESSAGE^^1^
"BLD",2862,"KRN",409.61,"NM",15,0)
PXRM REMINDER EXCHANGE^^1^
"BLD",2862,"KRN",409.61,"NM","B","PXRM EX DEFINITION INQUIRY",1)

"BLD",2862,"KRN",409.61,"NM","B","PXRM EX DIALOG HELP",2)

"BLD",2862,"KRN",409.61,"NM","B","PXRM EX HOST FILE",12)

"BLD",2862,"KRN",409.61,"NM","B","PXRM EX INSTALL SUMMARY",13)

"BLD",2862,"KRN",409.61,"NM","B","PXRM EX INSTALLATION DETAIL",5)

"BLD",2862,"KRN",409.61,"NM","B","PXRM EX INSTALLATION HISTORY",6)

"BLD",2862,"KRN",409.61,"NM","B","PXRM EX LIST COMPONENTS",7)

"BLD",2862,"KRN",409.61,"NM","B","PXRM EX LIST DIALOG",8)

"BLD",2862,"KRN",409.61,"NM","B","PXRM EX MAILMAN MESSAGE",14)

"BLD",2862,"KRN",409.61,"NM","B","PXRM EX MAIN HELP",9)

"BLD",2862,"KRN",409.61,"NM","B","PXRM EX REMINDER EXCHANGE",10)

"BLD",2862,"KRN",409.61,"NM","B","PXRM EX REMINDER LIST",11)

"BLD",2862,"KRN",409.61,"NM","B","PXRM REMINDER EXCHANGE",15)

"BLD",2862,"KRN",771,0)
771
"BLD",2862,"KRN",870,0)
870
"BLD",2862,"KRN",8994,0)
8994
"BLD",2862,"KRN",8994,"NM",0)
^9.68A^^0
"BLD",2862,"KRN","B",.4,.4)

"BLD",2862,"KRN","B",.401,.401)

"BLD",2862,"KRN","B",.402,.402)

"BLD",2862,"KRN","B",.403,.403)

"BLD",2862,"KRN","B",.5,.5)

"BLD",2862,"KRN","B",.84,.84)

"BLD",2862,"KRN","B",3.6,3.6)

"BLD",2862,"KRN","B",3.8,3.8)

"BLD",2862,"KRN","B",9.2,9.2)

"BLD",2862,"KRN","B",9.8,9.8)

"BLD",2862,"KRN","B",19,19)

"BLD",2862,"KRN","B",19.1,19.1)

"BLD",2862,"KRN","B",101,101)

"BLD",2862,"KRN","B",409.61,409.61)

"BLD",2862,"KRN","B",771,771)

"BLD",2862,"KRN","B",870,870)

"BLD",2862,"KRN","B",8994,8994)

"BLD",2862,"QUES",0)
^9.62^^
"BLD",2862,"REQB",0)
^9.611^2^2
"BLD",2862,"REQB",1,0)
PXRM*1.5*4^2
"BLD",2862,"REQB",2,0)
DI*22.0*72^2
"BLD",2862,"REQB","B","DI*22.0*72",2)

"BLD",2862,"REQB","B","PXRM*1.5*4",1)

"FIA",801.41)
REMINDER DIALOG
"FIA",801.41,0)
^PXRMD(801.41,
"FIA",801.41,0,0)
801.41IO
"FIA",801.41,0,1)
y^y^f^^^^n
"FIA",801.41,0,10)

"FIA",801.41,0,11)

"FIA",801.41,0,"RLRO")

"FIA",801.41,0,"VR")
1.5^PXRM
"FIA",801.41,801.41)
0
"FIA",801.41,801.4118)
0
"FIA",801.41,801.412)
0
"FIA",801.41,801.4125)
0
"FIA",801.41,801.4135)
0
"FIA",801.41,801.4145)
0
"FIA",801.41,801.44)
0
"FIA",801.41,801.442)
0
"FIA",811.2)
REMINDER TAXONOMY
"FIA",811.2,0)
^PXD(811.2,
"FIA",811.2,0,0)
811.2IO
"FIA",811.2,0,1)
y^y^f^^^^n
"FIA",811.2,0,10)

"FIA",811.2,0,11)

"FIA",811.2,0,"RLRO")

"FIA",811.2,0,"VR")
1.5^PXRM
"FIA",811.2,811.2)
0
"FIA",811.2,811.21)
0
"FIA",811.2,811.212)
0
"FIA",811.2,811.22102)
0
"FIA",811.2,811.22103)
0
"FIA",811.2,811.22104)
0
"FIA",811.2,811.23102)
0
"FIA",811.2,811.23104)
0
"FIA",811.4)
REMINDER COMPUTED FINDINGS
"FIA",811.4,0)
^PXRMD(811.4,
"FIA",811.4,0,0)
811.4OI
"FIA",811.4,0,1)
y^y^f^^^^n
"FIA",811.4,0,10)

"FIA",811.4,0,11)

"FIA",811.4,0,"RLRO")

"FIA",811.4,0,"VR")
1.5^PXRM
"FIA",811.4,811.4)
0
"FIA",811.4,811.41)
0
"FIA",811.4,811.42)
0
"FIA",811.4,811.422)
0
"FIA",811.5)
REMINDER TERM
"FIA",811.5,0)
^PXRMD(811.5,
"FIA",811.5,0,0)
811.5IO
"FIA",811.5,0,1)
y^y^f^^^^n
"FIA",811.5,0,10)

"FIA",811.5,0,11)

"FIA",811.5,0,"RLRO")

"FIA",811.5,0,"VR")
1.5^PXRM
"FIA",811.5,811.5)
0
"FIA",811.5,811.51)
0
"FIA",811.5,811.52)
0
"FIA",811.5,811.53)
0
"FIA",811.5,811.532)
0
"FIA",811.6)
REMINDER SPONSOR
"FIA",811.6,0)
^PXRMD(811.6,
"FIA",811.6,0,0)
811.6Is
"FIA",811.6,0,1)
y^y^f^^^^n
"FIA",811.6,0,10)

"FIA",811.6,0,11)

"FIA",811.6,0,"RLRO")

"FIA",811.6,0,"VR")
1.5^PXRM
"FIA",811.6,811.6)
0
"FIA",811.8)
REMINDER EXCHANGE FILE
"FIA",811.8,0)
^PXD(811.8,
"FIA",811.8,0,0)
811.8s
"FIA",811.8,0,1)
y^y^f^^n^^n^o^n
"FIA",811.8,0,10)

"FIA",811.8,0,11)

"FIA",811.8,0,"RLRO")

"FIA",811.8,0,"VR")
1.5^PXRM
"FIA",811.8,811.8)
0
"FIA",811.8,811.801)
0
"FIA",811.8,811.802)
0
"FIA",811.8,811.8021)
0
"FIA",811.8,811.803)
0
"FIA",811.8,811.8031)
0
"FIA",811.8,811.80315)
0
"FIA",811.8,811.804)
0
"FIA",811.9)
REMINDER DEFINITION
"FIA",811.9,0)
^PXD(811.9,
"FIA",811.9,0,0)
811.9I
"FIA",811.9,0,1)
y^y^f^^^^n
"FIA",811.9,0,10)

"FIA",811.9,0,11)

"FIA",811.9,0,"RLRO")

"FIA",811.9,0,"VR")
1.5^PXRM
"FIA",811.9,811.9)
0
"FIA",811.9,811.9001)
0
"FIA",811.9,811.90012)
0
"FIA",811.9,811.9002)
0
"FIA",811.9,811.90021)
0
"FIA",811.9,811.9003)
0
"FIA",811.9,811.902)
0
"FIA",811.9,811.9024)
0
"FIA",811.9,811.9025)
0
"FIA",811.9,811.92)
0
"FIA",811.9,811.93)
0
"FIA",811.9,811.961)
0
"FIA",811.9,811.965)
0
"FIA",811.9,811.966)
0
"FIA",811.9,811.97)
0
"FIA",811.9,811.973)
0
"FIA",811.9,811.974)
0
"INI")
PRE^PXRMP5I
"INIT")
POST^PXRMP5I
"IX",801.41,801.41,"B",0)
801.41^B^B Cross-reference^R^^F^IR^I^801.41^^^^^LS
"IX",801.41,801.41,"B",.1,0)
^^1^1^3001103^^
"IX",801.41,801.41,"B",.1,1,0)
This is the "B" cross-reference redone as a new style cross reference.
"IX",801.41,801.41,"B",1)
S ^PXRMD(801.41,"B",$E(X,1,63),DA)=""
"IX",801.41,801.41,"B",2)
K ^PXRMD(801.41,"B",$E(X,1,63),DA)
"IX",801.41,801.41,"B",2.5)
K ^PXRMD(801.41,"B")
"IX",801.41,801.41,"B",11.1,0)
^.114IA^1^1
"IX",801.41,801.41,"B",11.1,1,0)
1^F^801.41^.01^63^1^F
"IX",801.41,801.41,"B",11.1,1,3)

"IX",811.2,811.2,"B",0)
811.2^B^New style B cross-reference^R^^F^IR^I^811.2^^^^^LS
"IX",811.2,811.2,"B",1)
S ^PXD(811.2,"B",$E(X,1,35),DA)=""
"IX",811.2,811.2,"B",2)
K ^PXD(811.2,"B",$E(X,1,35),DA)
"IX",811.2,811.2,"B",2.5)
K ^PXD(811.2,"B")
"IX",811.2,811.2,"B",11.1,0)
^.114IA^1^1
"IX",811.2,811.2,"B",11.1,1,0)
1^F^811.2^.01^35^1^F
"IX",811.2,811.2,"B",11.1,1,3)

"IX",811.2,811.22102,"AD",0)
811.22102^AD^Whenever ICD9 entries are edited rebuild expanded taxonomy^MU^^R^IR^I^811.22102^^^^^A
"IX",811.2,811.22102,"AD",1)
D TAXEDIT^PXRMTAX(DA(1),"")
"IX",811.2,811.22102,"AD",2)
D TAXEDIT^PXRMTAX(DA(1),DA)
"IX",811.2,811.22102,"AD",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.2,811.22102,"AD",2.5)
D TAXKILL^PXRMTAX(DA(1))
"IX",811.2,811.22102,"AD",11.1,0)
^.114IA^2^2
"IX",811.2,811.22102,"AD",11.1,1,0)
1^F^811.22102^.01^^^F
"IX",811.2,811.22102,"AD",11.1,2,0)
2^F^811.22102^1^^^F
"IX",811.2,811.22103,"AC",0)
811.22103^AC^Whenever ICD0 entries are changed rebuild the expanded taxonomy^MU^^R^IR^I^811.22103^^^^^A
"IX",811.2,811.22103,"AC",1)
D TAXEDIT^PXRMTAX(DA(1),"")
"IX",811.2,811.22103,"AC",2)
D TAXEDIT^PXRMTAX(DA(1),DA)
"IX",811.2,811.22103,"AC",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.2,811.22103,"AC",2.5)
D TAXKILL^PXRMTAX(DA(1))
"IX",811.2,811.22103,"AC",11.1,0)
^.114IA^2^2
"IX",811.2,811.22103,"AC",11.1,1,0)
1^F^811.22103^.01^^^F
"IX",811.2,811.22103,"AC",11.1,2,0)
2^F^811.22103^1^^^F
"IX",811.2,811.22104,"AE",0)
811.22104^AE^Whenever CPT entries are changed rebuild the expanded taxonomy^MU^^R^IR^I^811.22104^^^^^A
"IX",811.2,811.22104,"AE",1)
D TAXEDIT^PXRMTAX(DA(1),"")
"IX",811.2,811.22104,"AE",2)
D TAXEDIT^PXRMTAX(DA(1),DA)
"IX",811.2,811.22104,"AE",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.2,811.22104,"AE",2.5)
D TAXKILL^PXRMTAX(DA(1))
"IX",811.2,811.22104,"AE",11.1,0)
^.114IA^2^2
"IX",811.2,811.22104,"AE",11.1,1,0)
1^F^811.22104^.01^^^F
"IX",811.2,811.22104,"AE",11.1,2,0)
2^F^811.22104^1^^^F
"IX",811.4,811.4,"B",0)
811.4^B^New style B cross-reference^R^^F^IR^I^811.4^^^^^LS
"IX",811.4,811.4,"B",1)
S ^PXRMD(811.4,"B",$E(X,1,30),DA)=""
"IX",811.4,811.4,"B",2)
K ^PXRMD(811.4,"B",$E(X,1,30),DA)
"IX",811.4,811.4,"B",2.5)
K ^PXRMD(811.4,"B")
"IX",811.4,811.4,"B",11.1,0)
^.114IA^1^1
"IX",811.4,811.4,"B",11.1,1,0)
1^F^811.4^.01^30^1^F
"IX",811.4,811.4,"B",11.1,1,3)

"IX",811.5,811.5,"B",0)
811.5^B^New style B cross-reference^R^^F^IR^I^811.5^^^^^LS
"IX",811.5,811.5,"B",1)
S ^PXRMD(811.5,"B",$E(X,1,64),DA)=""
"IX",811.5,811.5,"B",2)
K ^PXRMD(811.5,"B",$E(X,1,64),DA)
"IX",811.5,811.5,"B",2.5)
K ^PXRMD(811.5,"B")
"IX",811.5,811.5,"B",11.1,0)
^.114IA^1^1
"IX",811.5,811.5,"B",11.1,1,0)
1^F^811.5^.01^64^1^F
"IX",811.5,811.5,"B",11.1,1,3)

"IX",811.6,811.6,"B",0)
811.6^B^This is a new style B cross-reference^R^^F^IR^I^811.6^^^^^LS
"IX",811.6,811.6,"B",1)
S ^PXRMD(811.6,"B",$E(X,1,64),DA)=""
"IX",811.6,811.6,"B",2)
K ^PXRMD(811.6,"B",$E(X,1,64),DA)
"IX",811.6,811.6,"B",2.5)
K ^PXRMD(811.6,"B")
"IX",811.6,811.6,"B",11.1,0)
^.114IA^1^1
"IX",811.6,811.6,"B",11.1,1,0)
1^F^811.6^.01^64^1^F
"IX",811.8,811.8,"B",0)
811.8^B^Uniqueness Index for Key 'A' of File #811.8^R^^R^IR^I^811.8^^^^^LS
"IX",811.8,811.8,"B",1)
S ^PXD(811.8,"B",X(1),X(2),DA)=""
"IX",811.8,811.8,"B",2)
K ^PXD(811.8,"B",X(1),X(2),DA)
"IX",811.8,811.8,"B",2.5)
K ^PXD(811.8,"B")
"IX",811.8,811.8,"B",11.1,0)
^.114IA^2^2
"IX",811.8,811.8,"B",11.1,1,0)
1^F^811.8^.01^^1
"IX",811.8,811.8,"B",11.1,2,0)
2^F^811.8^.03^^2
"IX",811.8,811.8,"D",0)
811.8^D^Cross-reference on date and time^R^^F^IR^I^811.8^^^^^LS
"IX",811.8,811.8,"D",1)
S ^PXD(811.8,"D",X,DA)=""
"IX",811.8,811.8,"D",2)
K ^PXD(811.8,"D",X,DA)
"IX",811.8,811.8,"D",2.5)
K ^PXD(811.8,"D")
"IX",811.8,811.8,"D",11.1,0)
^.114IA^1^1
"IX",811.8,811.8,"D",11.1,1,0)
1^F^811.8^.03^^1^F
"IX",811.8,811.8,"D",11.1,1,3)

"IX",811.8,811.802,"B",0)
811.802^B^New style B cross-reference^R^^F^IR^I^811.802^^^^^LS
"IX",811.8,811.802,"B",1)
S ^PXD(811.8,DA(1),120,"B",$E(X,1,64),DA)=""
"IX",811.8,811.802,"B",2)
K ^PXD(811.8,DA(1),120,"B",$E(X,1,64),DA)
"IX",811.8,811.802,"B",2.5)
K ^PXD(811.8,DA(1),120,"B")
"IX",811.8,811.802,"B",11.1,0)
^.114IA^1^1
"IX",811.8,811.802,"B",11.1,1,0)
1^F^811.802^.01^64^1^F
"IX",811.8,811.802,"B",11.1,1,3)

"IX",811.8,811.803,"B",0)
811.803^B^New style B cross-reference^R^^F^IR^I^811.803^^^^^LS
"IX",811.8,811.803,"B",1)
S ^PXD(811.8,DA(1),130,"B",X,DA)=""
"IX",811.8,811.803,"B",2)
K ^PXD(811.8,DA(1),130,"B",X,DA)
"IX",811.8,811.803,"B",2.5)
K ^PXD(811.8,DA(1),130,"B")
"IX",811.8,811.803,"B",11.1,0)
^.114IA^1^1
"IX",811.8,811.803,"B",11.1,1,0)
1^F^811.803^.01^^1^F
"IX",811.9,811.9,"AE",0)
811.9^AE^Build the internal patient cohort logic^MU^^F^I^I^811.9^^^^^A
"IX",811.9,811.9,"AE",.1,0)
^^1^1^3000110^
"IX",811.9,811.9,"AE",.1,1,0)
This cross-reference builds the internal patient cohort logic.
"IX",811.9,811.9,"AE",1)
D CPPCLS^PXRMLOGX(DA,X),BLDINFL^PXRMLOGX(DA)
"IX",811.9,811.9,"AE",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.9,"AE",2)
D BLDPCLS^PXRMLOGX(DA),BLDINFL^PXRMLOGX(DA)
"IX",811.9,811.9,"AE",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.9,"AE",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"AE",11.1,1,0)
1^F^811.9^30^^^F
"IX",811.9,811.9,"AF",0)
811.9^AF^Cross-reference for building internal resolution logic^MU^^F^I^I^811.9^^^^^A
"IX",811.9,811.9,"AF",.1,0)
^^1^1^3000110^
"IX",811.9,811.9,"AF",.1,1,0)
This cross-reference builds the internal resolution logic.
"IX",811.9,811.9,"AF",1)
D CPRESLS^PXRMLOGX(DA,X),BLDINFL^PXRMLOGX(DA)
"IX",811.9,811.9,"AF",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.9,"AF",2)
D BLDRESLS^PXRMLOGX(DA),BLDINFL^PXRMLOGX(DA)
"IX",811.9,811.9,"AF",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.9,"AF",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"AF",11.1,1,0)
1^F^811.9^34^^^F
"IX",811.9,811.9,"B",0)
811.9^B^B cross-reference^R^^F^IR^I^811.9^^^^^LS
"IX",811.9,811.9,"B",.1,0)
^^1^1^3000222^
"IX",811.9,811.9,"B",.1,1,0)
This is the "B" cross-reference redone as a new style cross-reference.
"IX",811.9,811.9,"B",1)
S ^PXD(811.9,"B",$E(X,1,35),DA)=""
"IX",811.9,811.9,"B",2)
K ^PXD(811.9,"B",$E(X,1,35),DA)
"IX",811.9,811.9,"B",2.5)
K ^PXD(811.9,"B")
"IX",811.9,811.9,"B",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"B",11.1,1,0)
1^F^811.9^.01^35^1^F
"IX",811.9,811.9,"B",11.1,1,3)

"IX",811.9,811.9,"D",0)
811.9^D^Look up by Print Name^R^^F^IR^I^811.9^^^^^LS
"IX",811.9,811.9,"D",.1,0)
^^1^1^3000216^
"IX",811.9,811.9,"D",.1,1,0)
This cross-reference is used for look-up by the reminder's Print Name.
"IX",811.9,811.9,"D",1)
S ^PXD(811.9,"D",$E(X,1,35),DA)=""
"IX",811.9,811.9,"D",2)
K ^PXD(811.9,"D",$E(X,1,35),DA)
"IX",811.9,811.9,"D",2.5)
K ^PXD(811.9,"D")
"IX",811.9,811.9,"D",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"D",11.1,1,0)
1^F^811.9^1.2^35^1^F
"IX",811.9,811.9002,"B",0)
811.9002^B^New style B cross-reference^R^^F^IR^I^811.9002^^^^^LS
"IX",811.9,811.9002,"B",1)
S ^PXD(811.9,DA(1),50,"B",$E(X,1,128),DA)=""
"IX",811.9,811.9002,"B",2)
K ^PXD(811.9,DA(1),50,"B",$E(X,1,128),DA)
"IX",811.9,811.9002,"B",2.5)
K ^PXD(811.9,DA(1),50,"B")
"IX",811.9,811.9002,"B",11.1,0)
^.114IA^1^1
"IX",811.9,811.9002,"B",11.1,1,0)
1^F^811.9002^.01^128^1^F
"IX",811.9,811.9002,"B",11.1,1,3)

"IX",811.9,811.902,"AE",0)
811.902^AE^Build all logic strings^MU^^R^IR^I^811.902^^^^^A
"IX",811.9,811.902,"AE",1)
D BLDALL^PXRMLOGX(DA(1),"")
"IX",811.9,811.902,"AE",2)
D BLDALL^PXRMLOGX(DA(1),DA)
"IX",811.9,811.902,"AE",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AE",11.1,0)
^.114IA^1^1
"IX",811.9,811.902,"AE",11.1,1,0)
1^F^811.902^.01^^1^F
"IX",811.9,811.902,"AE",11.1,1,3)

"IX",811.9,811.902,"AF",0)
811.902^AF^Check for rebuild of age findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AF",.1,0)
^^2^2^2990924^
"IX",811.9,811.902,"AF",.1,1,0)
When MINIMUM AGE, MAXIMUM AGE, or REMINDER FREQUENCY are changed then
"IX",811.9,811.902,"AF",.1,2,0)
rebuild the age findings list.
"IX",811.9,811.902,"AF",1)
D BLDAFL^PXRMLOGX(DA(1),"")
"IX",811.9,811.902,"AF",1.4)
S X=1 I $$DELNXR^PXRMLOGX(.X2) S X=0
"IX",811.9,811.902,"AF",2)
D BLDAFL^PXRMLOGX(DA(1),DA)
"IX",811.9,811.902,"AF",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AF",11.1,0)
^.114IA^4^3
"IX",811.9,811.902,"AF",11.1,2,0)
1^F^811.902^1^^^F
"IX",811.9,811.902,"AF",11.1,3,0)
2^F^811.902^2^^^F
"IX",811.9,811.902,"AF",11.1,4,0)
3^F^811.902^3^^^F
"IX",811.9,811.902,"AG",0)
811.902^AG^Check for rebuild of resolution findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AG",.1,0)
^^2^2^2990924^
"IX",811.9,811.902,"AG",.1,1,0)
When USE IN RESOLUTION LOGIC is changed then rebuild the resolution
"IX",811.9,811.902,"AG",.1,2,0)
findings list.
"IX",811.9,811.902,"AG",1)
D BLDRESLS^PXRMLOGX(DA(1),"")
"IX",811.9,811.902,"AG",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.902,"AG",2)
D BLDRESLS^PXRMLOGX(DA(1),DA)
"IX",811.9,811.902,"AG",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AG",11.1,0)
^.114IA^3^1
"IX",811.9,811.902,"AG",11.1,3,0)
1^F^811.902^7^^^F
"IX",811.9,811.902,"AH",0)
811.902^AH^Check for rebuild of patient cohort findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AH",.1,0)
^^2^2^2990924^
"IX",811.9,811.902,"AH",.1,1,0)
Whenever USE IN PATIENT COHORT LOGIC is changed rebuild the patient cohort
"IX",811.9,811.902,"AH",.1,2,0)
logic list.
"IX",811.9,811.902,"AH",1)
D BLDPCLS^PXRMLOGX(DA(1),"")
"IX",811.9,811.902,"AH",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.902,"AH",2)
D BLDPCLS^PXRMLOGX(DA(1),DA)
"IX",811.9,811.902,"AH",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AH",11.1,0)
^.114IA^2^1
"IX",811.9,811.902,"AH",11.1,2,0)
1^F^811.902^8^^^F
"IX",811.9,811.902,"AI",0)
811.902^AI^Check for rebuild of information findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AI",.1,0)
^^3^3^2990924^
"IX",811.9,811.902,"AI",.1,1,0)
Whenever any of the following changes rebuild the information findings list:
"IX",811.9,811.902,"AI",.1,2,0)
MINIMUM AGE, MAXIMUM AGE, REMINDER FREQUENCY, USE IN RESOLUTION LOGIC,
"IX",811.9,811.902,"AI",.1,3,0)
USE IN PATIENT COHORT LOGIC
"IX",811.9,811.902,"AI",1)
D BLDINFL^PXRMLOGX(DA(1),"")
"IX",811.9,811.902,"AI",1.4)
S X=1 I $$DELNXR^PXRMLOGX(.X2) S X=0
"IX",811.9,811.902,"AI",2)
D BLDINFL^PXRMLOGX(DA(1),DA)
"IX",811.9,811.902,"AI",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AI",11.1,0)
^.114IA^7^6
"IX",811.9,811.902,"AI",11.1,2,0)
1^F^811.902^1^^^F
"IX",811.9,811.902,"AI",11.1,3,0)
2^F^811.902^1^^^F
"IX",811.9,811.902,"AI",11.1,4,0)
3^F^811.902^2^^^F
"IX",811.9,811.902,"AI",11.1,5,0)
4^F^811.902^3^^^F
"IX",811.9,811.902,"AI",11.1,6,0)
5^F^811.902^7^^^F
"IX",811.9,811.902,"AI",11.1,7,0)
6^F^811.902^8^^^F
"KEY",801.41,801.41,"B",0)
801.41^B^P^16
"KEY",801.41,801.41,"B",2,0)
^.312IA^1^1
"KEY",801.41,801.41,"B",2,1,0)
.01^801.41^1
"KEY",811.2,811.2,"A",0)
811.2^A^P^19
"KEY",811.2,811.2,"A",2,0)
^.312IA^1^1
"KEY",811.2,811.2,"A",2,1,0)
.01^811.2^1
"KEY",811.4,811.4,"A",0)
811.4^A^P^28
"KEY",811.4,811.4,"A",2,0)
^.312IA^1^1
"KEY",811.4,811.4,"A",2,1,0)
.01^811.4^1
"KEY",811.5,811.5,"A",0)
811.5^A^P^29
"KEY",811.5,811.5,"A",2,0)
^.312IA^1^1
"KEY",811.5,811.5,"A",2,1,0)
.01^811.5^1
"KEY",811.6,811.6,"A",0)
811.6^A^P^39
"KEY",811.6,811.6,"A",2,0)
^.312IA^1^1
"KEY",811.6,811.6,"A",2,1,0)
.01^811.6^1
"KEY",811.8,811.8,"A",0)
811.8^A^P^54
"KEY",811.8,811.8,"A",2,0)
^.312IA^2^2
"KEY",811.8,811.8,"A",2,1,0)
.01^811.8^1
"KEY",811.8,811.8,"A",2,2,0)
.03^811.8^2
"KEY",811.9,811.9,"B",0)
811.9^B^P^43
"KEY",811.9,811.9,"B",2,0)
^.312IA^1^1
"KEY",811.9,811.9,"B",2,1,0)
.01^811.9^1
"KEYPTR",801.41,801.41,"B")
801.41^B
"KEYPTR",811.2,811.2,"A")
811.2^B
"KEYPTR",811.4,811.4,"A")
811.4^B
"KEYPTR",811.5,811.5,"A")
811.5^B
"KEYPTR",811.6,811.6,"A")
811.6^B
"KEYPTR",811.8,811.8,"A")
811.8^B
"KEYPTR",811.9,811.9,"B")
811.9^B
"KRN",.4,948,-1)
0^3
"KRN",.4,948,0)
PXRM DEFINITION INQUIRY^3010606.1712^@^811.9^^@^3010724
"KRN",.4,948,"%D",0)
^^2^2^3000505^
"KRN",.4,948,"%D",1,0)
This template will print the contents of the reminder definition that will
"KRN",.4,948,"%D",2,0)
be used to evaluate the reminder with Clinical Reminders 1.5.  
"KRN",.4,948,"F",1)
.01;C1;X~"No.";C36~0;C41;X~1.6;C55;X~"--------------------------------------------";C1~"Print Name:";C1;S1~1.2;C31;X~"Class:";C1;S1~100;C31;X~
"KRN",.4,948,"F",2)
"Sponsor:";C1;S1~101;C31;X~"Review Date:";C1;S1~102;C31;X~"Usage:";C1;S1~D USAGE^PXRMPTDF;X;Z;"D USAGE^PXRMPTDF"~"Related VA-* Reminder:";C1;S1~
"KRN",.4,948,"F",3)
1.4;C31;X~"Reminder Dialog:";C1;S1~51;C31;X~"Priority:";C1;S1~1.91;C31;X;L~"Reminder Description:";C1;S1~2,.01;C5;X;S1~"Technical Description:";C1;S1~
"KRN",.4,948,"F",4)
3,.01;C5;X;S1~"Edit History:";C1;S1~110,"Edit Date:";C5;S1~110,.01;C16;X~110,"Edit By:";C41~110,1;C50;X~110,"Edit Comments:";C5~110,2,.01;W~
"KRN",.4,948,"F",5)
"Baseline Frequency:";C1;S2~"Do In Advance Time Frame:";R31;S1~D DUEWI^PXRMPTDF;X;Z;"D DUEWI^PXRMPTDF"~"Sex Specific:";C1;R31~1.9~
"KRN",.4,948,"F",6)
"Ignore on N/A:";C1;R31~1.8~"Frequency for Age Range:";C1;R31~7,D AFREQ^PXRMPTDF;X;Z;"D AFREQ^PXRMPTDF"~7,"Match Text:";C1;R31~7,3,.01~
"KRN",.4,948,"F",7)
7,"No Match Text:";C1;R31~7,4,.01;~"Findings:";C1;S2~D PFIND^PXRMPTDF;Z;"D PFIND^PXRMPTDF"~D ^DIWW;Z;"D ^DIWW"~
"KRN",.4,948,"F",8)
"General Patient Cohort Found Text:";C1;S1~60,.01;C5~"General Patient Cohort Not Found Text:";C1;S1~61,.01;C5~"General Resolution Found Text:";C1;S1~
"KRN",.4,948,"F",9)
65,.01;C5~"General Resolution Not Found Text:";C1;S1~66,.01;C5~D DISLOG^PXRMPTL;S1;X;Z;"D DISLOG^PXRMPTL"~"Web Sites:";C1;S2~50,"Web Site URL:";S1;C2~
"KRN",.4,948,"F",10)
50,.01~50,"Web Site Title:";S1;C2~50,.02~50,"";S1~50,1,.01~
"KRN",.4,948,"H")
CLINICAL REMINDER DEFINITION LIST
"KRN",.4,950,-1)
0^1
"KRN",.4,950,0)
PXRM REMINDER DIALOG^3010427.1324^@^801.41^^@^3010717
"KRN",.4,950,"%D",0)
^^1^1^2991020^
"KRN",.4,950,"%D",1,0)
Dialog template used by both PXRM DIALOG EDIT and PXRM DIALOG INQUIRE/EDIT
"KRN",.4,950,"F",1)
"";C1;~"DIALOG NAME: ";C3;S1~.01;C19;X~3;C55;L20;X~"Type: ";C10~4;C19;X;L21~"Associated reminder: ";C10;S1~2;C32;X;L25~"Class: ";C1;R30~100;C32;X~
"KRN",.4,950,"F",2)
"Sponsor: ";C1;R30~101;C32;X~"Review Date: ";C1;R30~102;C32;X~"Edit History:";C3;S1~110,"Edit Date:";C5;S1~110,.01;C16;X~110,"Edit By:";C41~
"KRN",.4,950,"F",3)
110,1;C50;X~110,"Edit Comments:";C5~110,2,.01;W~"DIALOG COMPONENTS:";C1;R24;S1~10,"Sequence:";C1;R24;S1~10,.01;L2~10,"Element/Group:";C1;R24~10,2;L35~
"KRN",.4,950,"F",4)
10,"Text:";C20~10,D PROMPT^PXRMDLST;X;Z;"D PROMPT^PXRMDLST"~"";C1;S2~
"KRN",.4,950,"H")
REMINDER DIALOG LIST
"KRN",.4,955,-1)
0^14
"KRN",.4,955,0)
PXRM DIALOG ELEMENT^3010427.1311^@^801.41^^@^3010618
"KRN",.4,955,"F",1)
"";C1~"Name:";C1;R22;S1~.01;L35~3;C65;L10;X~"Type:";C1;R22~4;L21~"Class:";C1;R22~100;L21~"Sponsor:";C1;R22~101;L21~"Review Date:";C1;R22~102;L21~
"KRN",.4,955,"F",2)
"Edit History:";R22;S1~110,"Edit Date:";C5;S1~110,.01;C16;X~110,"Edit By:";C41~110,1;C50;X~110,"Edit Comments:";C5~110,2,.01;W~"Used by:";C1;R22;S1~
"KRN",.4,955,"F",3)
D USE^PXRMDLST(D0,24,"");X;Z;"D USE^PXRMDLST(D0,24,"")"~"Dialog Text:";C1;R22;S1~25,.01~"Alternate P/N Text:";C1;R22~35,.01~"Exclude from P/N:";C1;R22~
"KRN",.4,955,"F",4)
23~"Resolution type:";C1;R22~13~"Finding Item:";C1;R22~15~"Vital Prompt Caption:";C1;R22~24~"Orderable item:";C1;R22~
"KRN",.4,955,"F",5)
D ORDER^PXRMDLST;X;Z;"D ORDER^PXRMDLST"~"Suppress Checkbox:";C1;R22~51~"Exclude Mental Health ";C1;R22~"Test Text from P/N:";C1;R22~54~
"KRN",.4,955,"F",6)
"ADDITIONAL FINDINGS:";C1;R22~18,"Finding item:";C1;R22~18,.01;L35~"Result Element/Group:";C1;R22~55;L40~"ELEMENT COMPONENTS:";C1;R24;S1~
"KRN",.4,955,"F",7)
10,"Sequence:";C1;R24;S1~10,.01;L2~10,"Additional prompt:";C1;R24~10,2;L35~10,"Prompt caption:";C10~10,D PROMPT^PXRMDLST;X;C27;Z;"D PROMPT^PXRMDLST"~
"KRN",.4,955,"F",8)
10,"Override caption: ";C8~10,6;X;C27~10,"Start new line: ";C10~10,7;X;C27~10,"Exclude from P/N: ";C8~10,8;X;C27~10,"Required: ";C16~10,9;X;C27~
"KRN",.4,955,"F",9)
"";C1;S1~
"KRN",.4,955,"H")
REMINDER DIALOG LIST
"KRN",.4,956,-1)
0^2
"KRN",.4,956,0)
PXRM DIALOG GROUP^3010427.1313^@^801.41^^@^3010612
"KRN",.4,956,"F",1)
"";C1;~"Name:";C1;R31~.01;L35~3;C55;L10;X~"Class:";C1;R31~100;C32;X~"Sponsor:";C1;R31~101;C32;X~"Review Date:";C1;R31~102;C32;X~"Edit History:";C3;S1~
"KRN",.4,956,"F",2)
110,"Edit Date:";C5;S1~110,.01;C16;X~110,"Edit By:";C41~110,1;C50;X~110,"Edit Comments:";C5~110,2,.01;W~"Resolution type:";C1;R31;S1~13~
"KRN",.4,956,"F",3)
"Finding item:";C1;R31~15~"Vital Prompt Caption:";C1;R31~24~"Group Caption:";C1;R31~5~"Box around the Components:";C1;R31~6~
"KRN",.4,956,"F",4)
"Share common prompts:";C1;R31~8~"Multiple Selection:";C1;R31~9~"Hide/Show Group:";C1;R31~50~"No. of Indents:";C1;R31~7;L2~
"KRN",.4,956,"F",5)
"Indent Progress Note Text:";C1;R31~52~"Dialog text:";C1;R31~25,.01~"Alternate P/N text:";C1;R31~35,.01~"Exclude from PN:";C1;R31~23~
"KRN",.4,956,"F",6)
"Suppress Checkbox:";C1;R31~51~"ADDITIONAL FINDINGS:";C1;R31~18,"Finding item:";C1;R31~18,.01;L35~"GROUP COMPONENTS:";C1;R31;S1~
"KRN",.4,956,"F",7)
10,"Sequence:";C1;R31;S1~10,.01;L2~10,"Dialog Element:";C1;R31~10,2;C34;L35~
"KRN",.4,956,"H")
REMINDER DIALOG LIST
"KRN",.4,957,-1)
0^13
"KRN",.4,957,0)
PXRM DIALOG PROMPT^3010427.1313^@^801.41^^@^3010723
"KRN",.4,957,"F",1)
"";C1~"Name:";C1;R29;S1~.01;L35~"Disabled:";C1;R29~3;L35~"Class: ";C1;R30~100;C32;X~"Sponsor: ";C1;R30~101;C32;X~"Review Date:";C1;R30~102;C32;X~
"KRN",.4,957,"F",2)
"Edit History:";C3;S1~110,"Edit Date:";C5;S1~110,.01;C16;X~110,"Edit By:";C41~110,1;C50;X~110,"Edit Comments:";C5~110,2,.01;W~
"KRN",.4,957,"F",3)
"Prompt Caption:";C1;R29;S1~24~"Exclude from P/N:";C1;R29~23~"Default value:";C1;R29~21;L35~"Additional Checkbox:";C1;R29~45,.01;C1;R32~45,2;L40~
"KRN",.4,957,"H")
REMINDER DIALOG LIST
"KRN",.4,961,-1)
0^8
"KRN",.4,961,0)
PXRM TERM INQUIRY^3010427.1226^@^811.5^^@^3010705
"KRN",.4,961,"%D",0)
^^1^1^3000505^
"KRN",.4,961,"%D",1,0)
This template prints a single reminder term definition.
"KRN",.4,961,"F",1)
.01;C1;X~"No.";C64~0;C67;X;L11~"----------------------------------------------------------------------------";C1~"Class:";C1~100;C25;X~"Sponsor:";C1~
"KRN",.4,961,"F",2)
101;C25;X~"Date Created: ";C1~.04;C25;X~"Review Date:";C1~102;C25;X~"Description:";C1;S1~1,.01;C5;X~"Edit History:";C1;S1~110,"Edit Date:";C5;S1~
"KRN",.4,961,"F",3)
110,.01;C16;X~110,"Edit By:";C41~110,1;C50;X~110,"Edit Comments:";C5~110,2,.01;W~"Findings: ";C1;S1~D PFIND^PXRMPTTR;Z;"D PFIND^PXRMPTTR"~" ";C1;S1~
"KRN",.4,961,"H")
REMINDER TERM LIST
"KRN",.4,962,-1)
0^5
"KRN",.4,962,0)
PXRM TAXONOMY INQUIRY^3010425.1213^@^811.2^^@^3010719
"KRN",.4,962,"F",1)
.01;C1;S1;X~1.6;C55;;X~"-----------------------------------";C1~"Brief Description:";C1;S1~.02;C5;X~"Class:";C1;S1~100;C31;X~"Sponsor:";C1;S1~
"KRN",.4,962,"F",2)
101;C31;X~"Review Date:";C1;S1~102;C31;X~"Edit History:";C1;S1~110,"Edit Date:";C5;S1~110,.01;C16;X~110,"Edit By:";C41~110,1;C50;X~
"KRN",.4,962,"F",3)
110,"Edit Comments:";C5~110,2,.01;W~"Patient Data Source:";C1;S1~4;C5;X~"Use Inactive Problems:";C1;S1~10;C5;X~"ICD9 Codes:";C1;S1~2102,"Range ";C5;S1~
"KRN",.4,962,"F",4)
2102,.01;C12;X~2102,"-"~2102,1;X~2102,D ICD9LIST^PXRMPTTX;Z;"D ICD9LIST^PXRMPTTX"~"ICD0 Codes:";C1;S2~2103,"Range ";C5;S1~2103,.01;C12;X~2103,"-"~
"KRN",.4,962,"F",5)
2103,1;X~2103,D ICD0LIST^PXRMPTTX;Z;"D ICD0LIST^PXRMPTTX"~"CPT Codes:";C1;S2~2104,"Range ";C5;S1~2104,.01;C12;X~2104,"-"~2104,1;X~
"KRN",.4,962,"F",6)
2104,D ICPTLIST^PXRMPTTX;Z;"D ICPTLIST^PXRMPTTX"~
"KRN",.4,962,"H")
REMINDER TAXONOMY LIST
"KRN",.4,964,-1)
0^12
"KRN",.4,964,0)
PXRM DIALOG FORCED VALUE^3010427.1314^@^801.41^^@^3010523
"KRN",.4,964,"F",1)
"";C1~"Name:";C1;R29;S1~.01;L35~"Disabled:";C1;R29~3;L35~"Class: ";C1;R30~100;C32;X~"Sponsor: ";C1;R30~101;C32;X~"Review Date:";C1;R30~102;C32;X~
"KRN",.4,964,"F",2)
"Edit History:";C3;S1~110,"Edit Date:";C5;S1~110,.01;C16;X~110,"Edit By:";C41~110,1;C50;X~110,"Edit Comments:";C5~110,2,.01;W~
"KRN",.4,964,"F",3)
"Forced value:";C1;R29;S1~22;L35~"Used only for finding type:";C1;R29~14~
"KRN",.4,964,"H")
REMINDER DIALOG LIST
"KRN",.4,973,-1)
0^6
"KRN",.4,973,0)
PXRM COMPUTED FINDING LIST^3010619.146^@^811.4^^@^3010723
"KRN",.4,973,"F",1)
"Name:";C1;S1~.01;C7;X~"Print Name:";C40;X~.04;C52;X~"Entry Point:";C1~.03;C14;X~"Routine:";C40;X~.02;C49;X~"Class:";C1~100;C8;X~"Sponsor:";C40~
"KRN",.4,973,"F",2)
101;C48;L32;X~"Review Date:";C1~102;C14;X~110,"Edit Date:";C5;S1~110,.01;C16;X~110,"Edit By:";C41~110,1;C50;X~110,"Edit Comments:";C5~110,2,.01;W~
"KRN",.4,973,"H")
Computed Finding List
"KRN",.4,973,"SUB")
1
"KRN",.4,976,-1)
0^4
"KRN",.4,976,0)
PXRM DEFINITION LIST^3010606.1723^@^811.9^^@^3010621
"KRN",.4,976,"%D",0)
^^1^1^3000229^^
"KRN",.4,976,"%D",1,0)
Print template for reminder definition list.
"KRN",.4,976,"F",1)
"-----------------------------------";C1;S1~"Name:";C1~.01;C14;X~1.6;C55;X~"Print Name:";C1~1.2;C14;X~"Class:";C1;S1~100;C31;X~"Sponsor:";C1;S1~
"KRN",.4,976,"F",2)
101;C31;X~"Review Date:";C1;S1~102;C31;X~"Usage:";C1;S1~D USAGE^PXRMPTDF;X;Z;"D USAGE^PXRMPTDF"~"Priority:";C1;S1~1.91;C14;X;L~
"KRN",.4,976,"F",3)
"Reminder Description:";C1;S1~2,.01;C5;X;S1~"Findings:";C1;S1~20,"Finding Item:";C3~20,.01;""~20,W $$GENIEN^PXRMPTDF(D1);X;Z;"W $$GENIEN^PXRMPTDF(D1)"~
"KRN",.4,976,"F",4)
D DISLOG^PXRMPTL;"";S1;Z;"D DISLOG^PXRMPTL"~
"KRN",.4,976,"H")
REMINDER DEFINITION LIST
"KRN",.4,976,"SUB")
1
"KRN",.4,977,-1)
0^10
"KRN",.4,977,0)
PXRM RESULT ELEMENT^3010427.1312^@^801.41^^@^3010427
"KRN",.4,977,"F",1)
"";C1~"Name:";C1;R31;S1~.01;L35~"Type:";C1;R31~4;L21~"Class:";C1;R31~100;C32;X~"Sponsor:";C1;R31~101;C32;X~"Review Date:";C1;R31~102;C32;X~
"KRN",.4,977,"F",2)
"Edit History:";C3;S1~110,"Edit Date:";C5;S1~110,.01;C16;X~110,"Edit By:";C41~110,1;C50;X~110,"Edit Comments:";C5~110,2,.01;W~
"KRN",.4,977,"F",3)
"Result Condition:";C1;R20;S1~53;L40~"P/N Text:";C1;R20~35,.01~"";C1;S1~
"KRN",.4,977,"H")
REMINDER DIALOG LIST
"KRN",.4,978,-1)
0^11
"KRN",.4,978,0)
PXRM RESULT GROUP^3010427.1312^@^801.41^^@^3010427
"KRN",.4,978,"F",1)
"";C1;~"Name:";C1;R31~.01;L35~"Type:";C1;R31~4;L35~"Class:";C1;R31~100~"Sponsor:";C1;R31~101~"Review Date:";C1;R31~102~"Exclude from PN:";C1;R31~23~
"KRN",.4,978,"F",2)
"Edit History:";C3;S1~110,"Edit Date:";C5;S1~110,.01;C16;X~110,"Edit By:";C41~110,1;C50;X~110,"Edit Comments:";C5~110,2,.01;W~
"KRN",.4,978,"F",3)
"GROUP COMPONENTS:";C1;R18;S1~10,"Sequence:";C1;R18;S1~10,.01;L2~10,"Result Element:";C1;R18~10,D OUT^PXRMDLR(X);Z;"D OUT^PXRMDLR(X)"~"";C1;S1~
"KRN",.4,978,"H")
REMINDER DIALOG LIST
"KRN",.4,979,-1)
0^9
"KRN",.4,979,0)
PXRM TERM LIST^3010427.1227^@^811.5^^@^3010629
"KRN",.4,979,"%D",0)
^^1^1^3000505^
"KRN",.4,979,"%D",1,0)
This print template is used to list reminder terms.
"KRN",.4,979,"F",1)
.01;C1;X~"Class:";C5~100;C20;X~"Date Created:";C5~.04;C20;X~"Sponsor:";C5~101;X;C20;L59~"Review Date:";C5~102;C20;X~"Description:";C5~1,.01;C20;X~
"KRN",.4,979,"F",2)
"Findings:";C5~20,.01;C20;L59;X~20,W $$GENIEN^PXRMPTTR(D1);X;Z;"W $$GENIEN^PXRMPTTR(D1)"~" ";C5~
"KRN",.4,979,"H")
REMINDER TERM LIST
"KRN",.4,1100,-1)
0^15
"KRN",.4,1100,0)
PXRM SPONSOR LIST^3010605.0951^@^811.6^^@^3010723
"KRN",.4,1100,"F",2)
.01~.02~
"KRN",.4,1100,"H")
REMINDER SPONSOR LIST
"KRN",.4,1105,-1)
1^7
"KRN",.4,1105,0)
PXRM CF LIST HEADER    FILE #811.4
"KRN",.402,1305,-1)
0^2
"KRN",.402,1305,0)
PXRM EDIT PROMPT^3010530.1444^@^801.41^^@^3010723
"KRN",.402,1305,"DR",1,801.41)
.01Prompt NAME~;3DISABLE Prompt~;100;101;102;24;23;21;45ADDITIONAL CHECKBOX~;
"KRN",.402,1306,-1)
0^1
"KRN",.402,1306,0)
PXRM EDIT ELEMENT^3010530.1442^@^801.41^^@^3010724
"KRN",.402,1306,"DR",1,801.41)
.01;3;100;101;102;13;17;15;S:X'["YTT(601" Y=25 S:X["GMRD(120.51" Y=24;54;S Y=25;24VITALS PROMPT CAPTION~;25;35;23;51;18;55;10;
"KRN",.402,1306,"DR",2,801.4118)
.01;
"KRN",.402,1306,"DR",2,801.412)
.01;2ADDITIONAL PROMPT/FORCED VALUE~;6;7;8;9;
"KRN",.402,1321,-1)
0^5
"KRN",.402,1321,0)
PXRM EDIT REMINDER DIALOG^3010427.1443^@^801.41^^@^3010723
"KRN",.402,1321,"DR",1,801.41)
.01;3;100;101;102;2;10;
"KRN",.402,1321,"DR",2,801.412)
.01;2DIALOG ELEMENT/GROUP~;
"KRN",.402,1322,-1)
0^4
"KRN",.402,1322,0)
PXRM EDIT GROUP^3010615.0821^@^801.41^^@^3010724
"KRN",.402,1322,"DR",1,801.41)
.01;3;100;101;102;13;17;15;I X'["GMRD(120.51" S Y=5;24VITALS PROMPT CAPTION~;5GROUP CAPTION~;6PUT A BOX AROUND THE GROUP~;8SHARE COMMON PROMPTS~;9MULTIPLE SELECTION~;50;25GROUP HEADER DIALOG TEXT~;
"KRN",.402,1322,"DR",1,801.41,1)
35GROUP HEADER ALTERNATE P/N TEXT~;23;51;7;52;18;10;
"KRN",.402,1322,"DR",2,801.4118)
.01;
"KRN",.402,1322,"DR",2,801.412)
.01;2DIALOG ELEMENT~;8;
"KRN",.402,1324,-1)
0^8
"KRN",.402,1324,0)
PXRM EDIT REMINDER TERM^3010607.1047^@^811.5^^@^3010622
"KRN",.402,1324,"DIAB",1,1,811.52,0)
ALL
"KRN",.402,1324,"DR",1,811.5)
.01;100;102;1;20;
"KRN",.402,1324,"DR",2,811.52)
.01:16
"KRN",.402,1325,-1)
0^3
"KRN",.402,1325,0)
PXRM EDIT FORCED VALUE^3010530.144^@^801.41^^@^3010604
"KRN",.402,1325,"DR",1,801.41)
.01Forced value NAME~;3DISABLE Forced value~;100;101;102;22;14RESTRICTED TO FINDING TYPE~;
"KRN",.402,1336,-1)
0^6
"KRN",.402,1336,0)
PXRM RESULT ELEMENT^3010530.1445^@^801.41^^@^3010530
"KRN",.402,1336,"DR",1,801.41)
.01;100;101;102;53;35PROGRESS NOTE TEXT~;
"KRN",.402,1337,-1)
0^7
"KRN",.402,1337,0)
PXRM RESULT GROUP^3010530.1445^@^801.41^^@^3010530
"KRN",.402,1337,"DR",1,801.41)
.01;100;101;102;23;10;
"KRN",.402,1337,"DR",2,801.412)
.01;2;
"KRN",.402,1339,-1)
0^9
"KRN",.402,1339,0)
PXRM EDIT NATIONAL TERM^3010607.1051^@^811.5^^@^3010705
"KRN",.402,1339,"DIAB",1,1,811.52,0)
ALL
"KRN",.402,1339,"DR",1,811.5)
20;
"KRN",.402,1339,"DR",2,811.52)
.01:16
"KRN",.402,1396,-1)
0^10
"KRN",.402,1396,0)
PXRM SPONSOR EDIT^3010605.1003^@^811.6^^@^3010619
"KRN",.402,1396,"DIAB",1,0,811.6,0)
ALL
"KRN",.402,1396,"DR",1,811.6)
.01:.02
"KRN",19,1988,-1)
4^38
"KRN",19,1988,0)
GMTS COORDINATOR
"KRN",19,4647,-1)
4^39
"KRN",19,4647,0)
IBDF PRINT BLNK ENCOUNTER FORM
"KRN",19,5302,-1)
4^42
"KRN",19,5302,0)
PXTT TABLE MAINTENANCE
"KRN",19,5322,-1)
4^41
"KRN",19,5322,0)
PX PCE COORDINATOR MENU
"KRN",19,5417,-1)
4^20
"KRN",19,5417,0)
PXRM DEFINITION EDIT
"KRN",19,5419,-1)
4^19
"KRN",19,5419,0)
PXRM DEFINITION INQUIRY
"KRN",19,5421,-1)
4^23
"KRN",19,5421,0)
PXRM TAXONOMY LIST
"KRN",19,5423,-1)
4^26
"KRN",19,5423,0)
PXRM TAXONOMY COPY
"KRN",19,5424,-1)
4^24
"KRN",19,5424,0)
PXRM TAXONOMY INQUIRY
"KRN",19,5425,-1)
4^11
"KRN",19,5425,0)
PXRM REMINDER TEST
"KRN",19,5441,-1)
4^21
"KRN",19,5441,0)
PXRM DEFINITION COPY
"KRN",19,5442,-1)
4^25
"KRN",19,5442,0)
PXRM TAXONOMY EDIT
"KRN",19,5445,-1)
4^22
"KRN",19,5445,0)
PXRM (IN)/ACTIVATE REMINDERS
"KRN",19,6449,-1)
4^40
"KRN",19,6449,0)
ORCM QUICK ORDERS
"KRN",19,7700,-1)
0^1
"KRN",19,7700,0)
PXRM REMINDER EXCHANGE^Reminder Exchange^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,7700,1,0)
^19.06^2^2^3000711^^^^
"KRN",19,7700,1,1,0)
This option allows sites to exchange reminder definitions via MailMan
"KRN",19,7700,1,2,0)
messages and host files.
"KRN",19,7700,25)
EN^PXRMEXLM
"KRN",19,7700,"U")
REMINDER EXCHANGE
"KRN",19,7709,-1)
4^33
"KRN",19,7709,0)
PXRM REMINDERS DUE
"KRN",19,7710,-1)
0^14
"KRN",19,7710,0)
PXRM REMINDER REPORTS^Reminder Reports^^M^^^^^^^^CLINICAL REMINDERS
"KRN",19,7710,1,0)
^19.06^9^9^3010628^^^^
"KRN",19,7710,1,1,0)
This is a menu of Clinical Reminder reports that clinicians can use for
"KRN",19,7710,1,2,0)
summary and detailed level information about patients' reminders due and 
"KRN",19,7710,1,3,0)
satisfied.  This option also contains reports that clinical coordinators
"KRN",19,7710,1,4,0)
can use to review data extracted based on reminder definitions. 
"KRN",19,7710,1,5,0)
 
"KRN",19,7710,1,6,0)
The EPI extract finding list and total options are specific to the
"KRN",19,7710,1,7,0)
Hepatitis C Extract project.  The extracted data is based on the following
"KRN",19,7710,1,8,0)
reminders: VA-HEP C RISK ASSESSMENT, VA-NATIONAL EPI LAB EXTRACT, and
"KRN",19,7710,1,9,0)
VA-NATIONAL EPI RX EXTRACT.
"KRN",19,7710,10,0)
^19.01IP^6^6
"KRN",19,7710,10,1,0)
7709^D^1
"KRN",19,7710,10,1,"^")
PXRM REMINDERS DUE
"KRN",19,7710,10,2,0)
8108^L^11
"KRN",19,7710,10,2,"^")
PXRM EXTRACT EPI FINDING LIST
"KRN",19,7710,10,3,0)
8109^T^10
"KRN",19,7710,10,3,"^")
PXRM EXTRACT EPI TOTALS
"KRN",19,7710,99)
58618,49829
"KRN",19,7710,"U")
REMINDER REPORTS
"KRN",19,7790,-1)
4^45
"KRN",19,7790,0)
PXRM CATEGORY EDIT/INQUIRE
"KRN",19,7807,-1)
0^7
"KRN",19,7807,0)
PXRM DIALOG MANAGEMENT^Reminder Dialog Management^^M^^^^^^^^CLINICAL REMINDERS^n
"KRN",19,7807,1,0)
^^2^2^3000313^
"KRN",19,7807,1,1,0)
This menu allows maintenance of the parameters used by CPRS for reminder
"KRN",19,7807,1,2,0)
dialog processing.
"KRN",19,7807,10,0)
^19.01IP^19^19
"KRN",19,7807,10,18,0)
7963^DI^9
"KRN",19,7807,10,18,"^")
PXRM DIALOG/COMPONENT EDIT
"KRN",19,7807,10,19,0)
7972^DP^1
"KRN",19,7807,10,19,"^")
PXRM DIALOG PARAMETERS
"KRN",19,7807,25)

"KRN",19,7807,99)
58247,36256
"KRN",19,7807,"U")
REMINDER DIALOG MANAGEMENT
"KRN",19,7899,-1)
0^8
"KRN",19,7899,0)
PXRM REMINDER MANAGEMENT^Reminder Definition Management^^M^^^^^^^^
"KRN",19,7899,1,0)
^^2^2^3000313^
"KRN",19,7899,1,1,0)
This menu allows maintenance of the parameters used by CPRS for reminder
"KRN",19,7899,1,2,0)
processing.
"KRN",19,7899,10,0)
^19.01IP^5^5
"KRN",19,7899,10,1,0)
7993^RL^5
"KRN",19,7899,10,1,"^")
PXRM DEFINITION LIST
"KRN",19,7899,10,2,0)
5419^RI^10
"KRN",19,7899,10,2,"^")
PXRM DEFINITION INQUIRY
"KRN",19,7899,10,3,0)
5417^RE^15
"KRN",19,7899,10,3,"^")
PXRM DEFINITION EDIT
"KRN",19,7899,10,4,0)
5441^RC^20
"KRN",19,7899,10,4,"^")
PXRM DEFINITION COPY
"KRN",19,7899,10,5,0)
5445^RA^25
"KRN",19,7899,10,5,"^")
PXRM (IN)/ACTIVATE REMINDERS
"KRN",19,7899,99)
58247,36262
"KRN",19,7899,99.1)
58638,36019
"KRN",19,7899,"U")
REMINDER DEFINITION MANAGEMENT
"KRN",19,7900,-1)
0^9
"KRN",19,7900,0)
PXRM TAXONOMY MANAGEMENT^Reminder Taxonomy Management^^M^^^^^^^^
"KRN",19,7900,1,0)
^^2^2^3000313^
"KRN",19,7900,1,1,0)
This menu allows maintenance of the parameters used by CPRS for reminder
"KRN",19,7900,1,2,0)
taxonomy processing.
"KRN",19,7900,10,0)
^19.01IP^4^4
"KRN",19,7900,10,1,0)
5421^TL^5
"KRN",19,7900,10,1,"^")
PXRM TAXONOMY LIST
"KRN",19,7900,10,2,0)
5424^TI^10
"KRN",19,7900,10,2,"^")
PXRM TAXONOMY INQUIRY
"KRN",19,7900,10,3,0)
5442^TE^15
"KRN",19,7900,10,3,"^")
PXRM TAXONOMY EDIT
"KRN",19,7900,10,4,0)
5423^TC^20
"KRN",19,7900,10,4,"^")
PXRM TAXONOMY COPY
"KRN",19,7900,99)
58541,52527
"KRN",19,7900,"U")
REMINDER TAXONOMY MANAGEMENT
"KRN",19,7901,-1)
0^13
"KRN",19,7901,0)
PXRM INFO ONLY^Reminder Information Only Menu^^M^^^^^^^^
"KRN",19,7901,1,0)
^19.06^2^2^3000313^^
"KRN",19,7901,1,1,0)
Provides information only options for users who need information about
"KRN",19,7901,1,2,0)
reminders but do not need the ability to make changes.
"KRN",19,7901,10,0)
^19.01IP^7^7
"KRN",19,7901,10,1,0)
7993^RL^5
"KRN",19,7901,10,1,"^")
PXRM DEFINITION LIST
"KRN",19,7901,10,2,0)
5419^RI^10
"KRN",19,7901,10,2,"^")
PXRM DEFINITION INQUIRY
"KRN",19,7901,10,3,0)
5421^TXL^15
"KRN",19,7901,10,3,"^")
PXRM TAXONOMY LIST
"KRN",19,7901,10,4,0)
5424^TXI^20
"KRN",19,7901,10,4,"^")
PXRM TAXONOMY INQUIRY
"KRN",19,7901,10,5,0)
8012^TRL^25
"KRN",19,7901,10,5,"^")
PXRM TERM LIST
"KRN",19,7901,10,6,0)
7940^TRI^30
"KRN",19,7901,10,6,"^")
PXRM TERM INQUIRY
"KRN",19,7901,10,7,0)
8603^SL^35
"KRN",19,7901,10,7,"^")
PXRM SPONSOR LIST
"KRN",19,7901,99)
58601,50899
"KRN",19,7901,"U")
REMINDER INFORMATION ONLY MENU
"KRN",19,7902,-1)
0^12
"KRN",19,7902,0)
PXRM OTHER SUPPORTING MENUS^Other Supporting Menus^^M^^^^^^^^
"KRN",19,7902,1,0)
^19.06^2^2^3000424^^^^
"KRN",19,7902,1,1,0)
This menu allows maintenance of the PCE and reminder parameters used by
"KRN",19,7902,1,2,0)
CPRS for reminder processing.
"KRN",19,7902,10,0)
^19.01IP^5^5
"KRN",19,7902,10,1,0)
5302^TM^5
"KRN",19,7902,10,1,"^")
PXTT TABLE MAINTENANCE
"KRN",19,7902,10,2,0)
5322^PC^10
"KRN",19,7902,10,2,"^")
PX PCE COORDINATOR MENU
"KRN",19,7902,10,3,0)
1988^HS^15
"KRN",19,7902,10,3,"^")
GMTS COORDINATOR
"KRN",19,7902,10,4,0)
4647^EF^20
"KRN",19,7902,10,4,"^")
IBDF PRINT BLNK ENCOUNTER FORM
"KRN",19,7902,10,5,0)
6449^QO^25
"KRN",19,7902,10,5,"^")
ORCM QUICK ORDERS
"KRN",19,7902,99)
58420,27614
"KRN",19,7902,"U")
OTHER SUPPORTING MENUS
"KRN",19,7903,-1)
4^43
"KRN",19,7903,0)
PXRM CPRS COVER SHEET LIST
"KRN",19,7922,-1)
4^44
"KRN",19,7922,0)
PXRM CPRS LOOKUP CATEGORIES
"KRN",19,7938,-1)
4^30
"KRN",19,7938,0)
PXRM TERM COPY
"KRN",19,7939,-1)
4^29
"KRN",19,7939,0)
PXRM TERM EDIT
"KRN",19,7940,-1)
4^28
"KRN",19,7940,0)
PXRM TERM INQUIRY
"KRN",19,7941,-1)
0^10
"KRN",19,7941,0)
PXRM TERM MANAGEMENT^Reminder Term Management^^M^^^^^^^^
"KRN",19,7941,1,0)
^^2^2^3000313^
"KRN",19,7941,1,1,0)
This menu allows maintenance of the parameters used by CPRS for reminder
"KRN",19,7941,1,2,0)
term processing.
"KRN",19,7941,10,0)
^19.01IP^4^4
"KRN",19,7941,10,1,0)
8012^TL^5
"KRN",19,7941,10,1,"^")
PXRM TERM LIST
"KRN",19,7941,10,2,0)
7940^TI^10
"KRN",19,7941,10,2,"^")
PXRM TERM INQUIRY
"KRN",19,7941,10,3,0)
7939^TE^15
"KRN",19,7941,10,3,"^")
PXRM TERM EDIT
"KRN",19,7941,10,4,0)
7938^TC^20
"KRN",19,7941,10,4,"^")
PXRM TERM COPY
"KRN",19,7941,99)
58247,36262
"KRN",19,7941,"U")
REMINDER TERM MANAGEMENT
"KRN",19,7963,-1)
4^31
"KRN",19,7963,0)
PXRM DIALOG/COMPONENT EDIT
"KRN",19,7972,-1)
4^32
"KRN",19,7972,0)
PXRM DIALOG PARAMETERS
"KRN",19,7974,-1)
4^46
"KRN",19,7974,0)
PXRM PROGRESS NOTE HEADERS
"KRN",19,7984,-1)
4^17
"KRN",19,7984,0)
PXRM COMPUTED FINDING LIST
"KRN",19,7985,-1)
0^6
"KRN",19,7985,0)
PXRM CF MANAGEMENT^Reminder Computed Finding Management^^M^^^^^^^y^CLINICAL REMINDERS
"KRN",19,7985,1,0)
^^1^1^3000128^^^
"KRN",19,7985,1,1,0)
This option provides tools for management of reminder computed findings.
"KRN",19,7985,10,0)
^19.01IP^2^2
"KRN",19,7985,10,1,0)
7984^CFL^5
"KRN",19,7985,10,1,"^")
PXRM COMPUTED FINDING LIST
"KRN",19,7985,10,2,0)
7986^CFE^10
"KRN",19,7985,10,2,"^")
PXRM COMPUTED FINDING EDIT
"KRN",19,7985,99)
58556,35102
"KRN",19,7985,"U")
REMINDER COMPUTED FINDING MANA
"KRN",19,7986,-1)
4^16
"KRN",19,7986,0)
PXRM COMPUTED FINDING EDIT
"KRN",19,7993,-1)
4^18
"KRN",19,7993,0)
PXRM DEFINITION LIST
"KRN",19,8012,-1)
4^27
"KRN",19,8012,0)
PXRM TERM LIST
"KRN",19,8040,-1)
4^47
"KRN",19,8040,0)
PXRM MENTAL HEALTH ACTIVE
"KRN",19,8041,-1)
4^48
"KRN",19,8041,0)
PXRM GUI REMINDERS ACTIVE
"KRN",19,8069,-1)
0^15
"KRN",19,8069,0)
PXRM CPRS CONFIGURATION^CPRS Reminder Configuration^^M^^^^^^^^CLINICAL REMINDERS
"KRN",19,8069,1,0)
^19.06^2^2^3010410^^^^
"KRN",19,8069,1,1,0)
This menu allows maintenance of the reminder parameters used by CPRS for
"KRN",19,8069,1,2,0)
reminder processing.
"KRN",19,8069,10,0)
^19.01IP^9^9
"KRN",19,8069,10,1,0)
7903^CS^15
"KRN",19,8069,10,1,"^")
PXRM CPRS COVER SHEET LIST
"KRN",19,8069,10,2,0)
7922^CL^10
"KRN",19,8069,10,2,"^")
PXRM CPRS LOOKUP CATEGORIES
"KRN",19,8069,10,3,0)
7790^CA^5
"KRN",19,8069,10,3,"^")
PXRM CATEGORY EDIT/INQUIRE
"KRN",19,8069,10,4,0)
7974^PN^25
"KRN",19,8069,10,4,"^")
PXRM PROGRESS NOTE HEADERS
"KRN",19,8069,10,5,0)
8040^MH^20
"KRN",19,8069,10,5,"^")
PXRM MENTAL HEALTH ACTIVE
"KRN",19,8069,10,6,0)
8041^RA^30
"KRN",19,8069,10,6,"^")
PXRM GUI REMINDERS ACTIVE
"KRN",19,8069,10,7,0)
8547^NP^99
"KRN",19,8069,10,7,"^")
PXRM NEW REMINDER PARAMETERS
"KRN",19,8069,10,8,0)
8577^DL^85
"KRN",19,8069,10,8,"^")
PXRM DEFAULT LOCATION
"KRN",19,8069,10,9,0)
8578^PT^89
"KRN",19,8069,10,9,"^")
PXRM TEXT AT CURSOR
"KRN",19,8069,99)
58539,56350
"KRN",19,8069,99.1)
58638,36019
"KRN",19,8069,"U")
CPRS REMINDER CONFIGURATION
"KRN",19,8108,-1)
4^34
"KRN",19,8108,0)
PXRM EXTRACT EPI FINDING LIST
"KRN",19,8109,-1)
4^35
"KRN",19,8109,0)
PXRM EXTRACT EPI TOTALS
"KRN",19,8547,-1)
4^49
"KRN",19,8547,0)
PXRM NEW REMINDER PARAMETERS
"KRN",19,8577,-1)
4^50
"KRN",19,8577,0)
PXRM DEFAULT LOCATION
"KRN",19,8578,-1)
4^51
"KRN",19,8578,0)
PXRM TEXT AT CURSOR
"KRN",19,8601,-1)
0^3
"KRN",19,8601,0)
PXRM SPONSOR EDIT^Edit Reminder Sponsor^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,8601,1,0)
^19.06^1^1^3010605^^^^
"KRN",19,8601,1,1,0)
The option allows for editing of Reminder Sponsors.
"KRN",19,8601,25)
PXRMSPED
"KRN",19,8601,30)

"KRN",19,8601,50)

"KRN",19,8601,51)

"KRN",19,8601,63)

"KRN",19,8601,"U")
EDIT REMINDER SPONSOR
"KRN",19,8602,-1)
0^5
"KRN",19,8602,0)
PXRM SPONSOR MANAGEMENT^Reminder Sponsor Management^^M^^^^^^^^CLINICAL REMINDERS
"KRN",19,8602,1,0)
^19.06^1^1^3010605^^
"KRN",19,8602,1,1,0)
This option provides the functions for Reminder Sponsor Management.
"KRN",19,8602,10,0)
^19.01IP^2^2
"KRN",19,8602,10,1,0)
8603^SL^5
"KRN",19,8602,10,1,"^")
PXRM SPONSOR LIST
"KRN",19,8602,10,2,0)
8601^SE^10
"KRN",19,8602,10,2,"^")
PXRM SPONSOR EDIT
"KRN",19,8602,99)
58595,42825
"KRN",19,8602,"U")
REMINDER SPONSOR MANAGEMENT
"KRN",19,8603,-1)
0^4
"KRN",19,8603,0)
PXRM SPONSOR LIST^List Reminder Sponsors^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,8603,1,0)
^19.06^1^1^3010605^^
"KRN",19,8603,1,1,0)
This option is used to get a list of Reminder Sponsors.
"KRN",19,8603,25)
SPONSOR^PXRMLIST
"KRN",19,8603,30)

"KRN",19,8603,"U")
LIST REMINDER SPONSORS
"KRN",19,8604,-1)
0^2
"KRN",19,8604,0)
PXRM MANAGERS MENU^Reminder Managers Menu^^M^^^^^^^^CLINICAL REMINDERS
"KRN",19,8604,1,0)
^19.06^2^2^3010618^^
"KRN",19,8604,1,1,0)
This option provides functions for all aspects of Clinical Reminder
"KRN",19,8604,1,2,0)
management.
"KRN",19,8604,10,0)
^19.01IP^12^12
"KRN",19,8604,10,1,0)
7985^CF^5
"KRN",19,8604,10,1,"^")
PXRM CF MANAGEMENT
"KRN",19,8604,10,2,0)
7899^RM^10
"KRN",19,8604,10,2,"^")
PXRM REMINDER MANAGEMENT
"KRN",19,8604,10,3,0)
8602^SM^15
"KRN",19,8604,10,3,"^")
PXRM SPONSOR MANAGEMENT
"KRN",19,8604,10,4,0)
7900^TXM^20
"KRN",19,8604,10,4,"^")
PXRM TAXONOMY MANAGEMENT
"KRN",19,8604,10,5,0)
7941^TRM^25
"KRN",19,8604,10,5,"^")
PXRM TERM MANAGEMENT
"KRN",19,8604,10,6,0)
7700^RX^30
"KRN",19,8604,10,6,"^")
PXRM REMINDER EXCHANGE
"KRN",19,8604,10,7,0)
5425^RT^35
"KRN",19,8604,10,7,"^")
PXRM REMINDER TEST
"KRN",19,8604,10,8,0)
7902^OS^40
"KRN",19,8604,10,8,"^")
PXRM OTHER SUPPORTING MENUS
"KRN",19,8604,10,9,0)
7901^INFO^45
"KRN",19,8604,10,9,"^")
PXRM INFO ONLY
"KRN",19,8604,10,10,0)
7807^DM^50
"KRN",19,8604,10,10,"^")
PXRM DIALOG MANAGEMENT
"KRN",19,8604,10,11,0)
8069^CP^55
"KRN",19,8604,10,11,"^")
PXRM CPRS CONFIGURATION
"KRN",19,8604,10,12,0)
7710^RP^60
"KRN",19,8604,10,12,"^")
PXRM REMINDER REPORTS
"KRN",19,8604,99)
58595,43449
"KRN",19,8604,"U")
REMINDER MANAGERS MENU
"KRN",101,5343,-1)
0^36
"KRN",101,5343,0)
PXRM LIST REMINDERS^List Reminder Definitions^^A^^^^^^^^
"KRN",101,5343,1,0)
^101.06^1^1^3000707^^^
"KRN",101,5343,1,1,0)
This protocol builds a list of all the reminders defined at a site.
"KRN",101,5343,2,0)
^101.02A^1^1
"KRN",101,5343,2,1,0)
LR
"KRN",101,5343,2,"B","LR",1)

"KRN",101,5343,4)
^^^PXRM REM LIST
"KRN",101,5343,5)
^
"KRN",101,5343,10,0)
^101.01PA^2^2
"KRN",101,5343,10,1,0)
5345^^^
"KRN",101,5343,10,1,"^")
PXRM EXCH DEFINITION INQUIRY
"KRN",101,5343,15)

"KRN",101,5343,20)
D LRDEF^PXRMEXLM
"KRN",101,5343,26)

"KRN",101,5343,28)

"KRN",101,5343,99)
58367,41137
"KRN",101,5344,-1)
0^30
"KRN",101,5344,0)
PXRM EXCH QUIT^Quit^^A^^^^^^^^
"KRN",101,5344,1,0)
^101.06^2^2^3001027^^^
"KRN",101,5344,1,1,0)
This protocol provides the actions for the quit option on the main
"KRN",101,5344,1,2,0)
Reminder Exchange screen.
"KRN",101,5344,4)
^^^Reminder Exchange Quit
"KRN",101,5344,20)
D EXIT^PXRMEXLM
"KRN",101,5344,99)
58247,36166
"KRN",101,5345,-1)
0^11
"KRN",101,5345,0)
PXRM EXCH DEFINITION INQUIRY^Reminder Definition Inquiry^^A^^^^^^^^
"KRN",101,5345,1,0)
^101.06^2^2^3001020^^^
"KRN",101,5345,1,1,0)
This protocol displays a reminder inquiry, which is a listing of a complete
"KRN",101,5345,1,2,0)
reminder definition.
"KRN",101,5345,15)
S VALMBCK="R"
"KRN",101,5345,20)
D DEFINQ^PXRMEXLM
"KRN",101,5345,26)

"KRN",101,5345,28)

"KRN",101,5345,99)
58367,41137
"KRN",101,5660,-1)
0^3
"KRN",101,5660,0)
PXRM EXCH CREATE FILE ENTRY^Create Exchange File Entry^^A^^^^^^^^
"KRN",101,5660,.1)
CFE
"KRN",101,5660,1,0)
^101.06^2^2^3010208^^^^
"KRN",101,5660,1,1,0)
This protocol is used to create an exchange file entry (packed reminder) and
"KRN",101,5660,1,2,0)
store it.
"KRN",101,5660,2,0)
^101.02A^4^4
"KRN",101,5660,2,1,0)
CP
"KRN",101,5660,2,2,0)
CRE
"KRN",101,5660,2,3,0)
CE
"KRN",101,5660,2,4,0)
CFE
"KRN",101,5660,2,"B","CE",3)

"KRN",101,5660,2,"B","CFE",4)

"KRN",101,5660,2,"B","CP",1)

"KRN",101,5660,2,"B","CRE",2)

"KRN",101,5660,20)
D CRE^PXRMEXLM
"KRN",101,5660,99)
58563,34090
"KRN",101,5662,-1)
0^25
"KRN",101,5662,0)
PXRM EXCH MENU^PXRM EXCH MENU^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5662,1,0)
^^1^1^3010504^
"KRN",101,5662,1,1,0)
This is the main menu for the Clinical Reminder Exchange Utility.
"KRN",101,5662,4)
40
"KRN",101,5662,10,0)
^101.01PA^10^10
"KRN",101,5662,10,1,0)
5660^CFE^10^
"KRN",101,5662,10,1,"^")
PXRM EXCH CREATE FILE ENTRY
"KRN",101,5662,10,2,0)
5667^CHF^20^
"KRN",101,5662,10,2,"^")
PXRM EXCH CREATE HOST FILE
"KRN",101,5662,10,3,0)
5668^CMM^30^
"KRN",101,5662,10,3,"^")
PXRM EXCH CREATE MAILMAN
"KRN",101,5662,10,4,0)
5664^DFE^40^
"KRN",101,5662,10,4,"^")
PXRM EXCH DELETE FILE ENTRY
"KRN",101,5662,10,5,0)
5663^IFE^50^
"KRN",101,5662,10,5,"^")
PXRM EXCH INSTALL FILE ENTRY
"KRN",101,5662,10,6,0)
5742^IH^60^
"KRN",101,5662,10,6,"^")
PXRM EXCH INSTALLATION HISTORY
"KRN",101,5662,10,7,0)
5665^LHF^70^
"KRN",101,5662,10,7,"^")
PXRM EXCH LOAD HOST FILE
"KRN",101,5662,10,8,0)
5666^LMM^80^
"KRN",101,5662,10,8,"^")
PXRM EXCH LOAD MAILMAN
"KRN",101,5662,10,9,0)
5343^LR^90^
"KRN",101,5662,10,9,"^")
PXRM LIST REMINDERS
"KRN",101,5662,10,10,0)
5345^RI^100^
"KRN",101,5662,10,10,"^")
PXRM EXCH DEFINITION INQUIRY
"KRN",101,5662,15)
D PEXIT^PXRMEXLM
"KRN",101,5662,26)
D SHOW^VALM
"KRN",101,5662,99)
58563,34161
"KRN",101,5663,-1)
0^17
"KRN",101,5663,0)
PXRM EXCH INSTALL FILE ENTRY^Install Exchange File Entry^^A^^^^^^^^
"KRN",101,5663,2,0)
^101.02A^1^1
"KRN",101,5663,2,1,0)
IFE
"KRN",101,5663,2,"B","IFE",1)

"KRN",101,5663,20)
D INSTALL^PXRMEXLR
"KRN",101,5663,99)
58478,50634
"KRN",101,5664,-1)
0^12
"KRN",101,5664,0)
PXRM EXCH DELETE FILE ENTRY^Delete Exchange File Entry^^A^^^^^^^^
"KRN",101,5664,2,0)
^101.02A^1^1
"KRN",101,5664,2,1,0)
DFE
"KRN",101,5664,2,"B","DFE",1)

"KRN",101,5664,20)
D DELETE^PXRMEXLR
"KRN",101,5664,99)
58478,50595
"KRN",101,5665,-1)
0^23
"KRN",101,5665,0)
PXRM EXCH LOAD HOST FILE^Load Host File^^A^^^^^^^^
"KRN",101,5665,10,0)
^101.01PA^4^4
"KRN",101,5665,10,1,0)
5666^LMM^70^
"KRN",101,5665,10,1,"^")
PXRM EXCH LOAD MAILMAN
"KRN",101,5665,10,2,0)
5345^RI^80^
"KRN",101,5665,10,2,"^")
PXRM EXCH DEFINITION INQUIRY
"KRN",101,5665,10,4,0)
5343^RL^90^
"KRN",101,5665,10,4,"^")
PXRM LIST REMINDERS
"KRN",101,5665,20)
D LDHF^PXRMEXLM
"KRN",101,5665,99)
58367,41137
"KRN",101,5666,-1)
0^24
"KRN",101,5666,0)
PXRM EXCH LOAD MAILMAN^Load MailMan Message^^A^^^^^^^^
"KRN",101,5666,20)
D LDMM^PXRMEXLM
"KRN",101,5666,99)
58266,52277
"KRN",101,5667,-1)
0^1
"KRN",101,5667,0)
PXRM EXCH CREATE HOST FILE^Create Host File^^A^^^^^^^^
"KRN",101,5667,20)
D CHF^PXRMEXLR
"KRN",101,5667,99)
58563,34118
"KRN",101,5668,-1)
0^2
"KRN",101,5668,0)
PXRM EXCH CREATE MAILMAN^Create MailMan Message^^A^^^^^^^^
"KRN",101,5668,20)
D CMM^PXRMEXLR
"KRN",101,5668,99)
58563,34145
"KRN",101,5681,-1)
0^19
"KRN",101,5681,0)
PXRM EXCH INSTALL SELECTED COMPONENTS^Install Selected Component^^A^^^^^^^^
"KRN",101,5681,20)
D INSSEL^PXRMEXLI
"KRN",101,5681,99)
58301,48040
"KRN",101,5682,-1)
0^14
"KRN",101,5682,0)
PXRM EXCH INSTALL ALL COMPONENTS^Install all Components^^A^^^^^^^^
"KRN",101,5682,20)
D INSALL^PXRMEXLI
"KRN",101,5682,99)
58301,48306
"KRN",101,5683,-1)
0^18
"KRN",101,5683,0)
PXRM EXCH INSTALL MENU^^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5683,4)
40
"KRN",101,5683,10,0)
^101.01PA^2^2
"KRN",101,5683,10,1,0)
5682^IA^5^
"KRN",101,5683,10,1,"^")
PXRM EXCH INSTALL ALL COMPONENTS
"KRN",101,5683,10,2,0)
5681^IS^10^
"KRN",101,5683,10,2,"^")
PXRM EXCH INSTALL SELECTED COMPONENTS
"KRN",101,5683,15)
D PEXIT^PXRMEXLI
"KRN",101,5683,26)
D SHOW^VALM
"KRN",101,5683,28)
Select Action:
"KRN",101,5683,99)
58308,42089
"KRN",101,5737,-1)
0^7
"KRN",101,5737,0)
PXRM EXCH DIALOG MENU^^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5737,4)
25
"KRN",101,5737,10,0)
^101.01PA^8^8
"KRN",101,5737,10,1,0)
5750^IS^10^^^
"KRN",101,5737,10,1,"^")
PXRM EXCH INSTALL DIALOG (SELECTED)
"KRN",101,5737,10,2,0)
5749^IA^8^^^
"KRN",101,5737,10,2,"^")
PXRM EXCH INSTALL DIALOG (ALL)
"KRN",101,5737,10,3,0)
5738^DT^4^
"KRN",101,5737,10,3,"^")
PXRM EXCH DIALOG TEXT
"KRN",101,5737,10,4,0)
5739^DF^2^
"KRN",101,5737,10,4,"^")
PXRM EXCH DIALOG FINDINGS
"KRN",101,5737,10,5,0)
5746^DD^1^^^
"KRN",101,5737,10,5,1)

"KRN",101,5737,10,5,"^")
PXRM EXCH DIALOG DETAILS
"KRN",101,5737,10,6,0)
5748^QU^99^
"KRN",101,5737,10,6,"^")
PXRM EXCH DIALOG EXIT
"KRN",101,5737,10,7,0)
5884^DS^3^
"KRN",101,5737,10,7,"^")
PXRM EXCH DIALOG SUMMARY
"KRN",101,5737,10,8,0)
5888^DU^5^
"KRN",101,5737,10,8,"^")
PXRM EXCH DIALOG USAGE
"KRN",101,5737,15)
D PEXIT^PXRMEXLD
"KRN",101,5737,20)

"KRN",101,5737,26)
D SHOW^VALM
"KRN",101,5737,28)
Select Action: 
"KRN",101,5737,99)
58464,44164
"KRN",101,5738,-1)
0^9
"KRN",101,5738,0)
PXRM EXCH DIALOG TEXT^Dialog Text^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5738,20)
D TEXT^PXRMEXLD
"KRN",101,5738,99)
58360,60407
"KRN",101,5739,-1)
0^6
"KRN",101,5739,0)
PXRM EXCH DIALOG FINDINGS^Dialog Findings^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5739,20)
D FIND^PXRMEXLD
"KRN",101,5739,99)
58422,31053
"KRN",101,5742,-1)
0^21
"KRN",101,5742,0)
PXRM EXCH INSTALLATION HISTORY^Installation History^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5742,10,0)
^101.01PA^^0
"KRN",101,5742,20)
D IH^PXRMEXLR
"KRN",101,5742,99)
58394,54150
"KRN",101,5746,-1)
0^4
"KRN",101,5746,0)
PXRM EXCH DIALOG DETAILS^Dialog Details^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5746,2,0)
^101.02A^1^1
"KRN",101,5746,2,1,0)
DD
"KRN",101,5746,2,"B","DD",1)

"KRN",101,5746,20)
D DETAIL^PXRMEXLD
"KRN",101,5746,99)
58398,61796
"KRN",101,5748,-1)
0^5
"KRN",101,5748,0)
PXRM EXCH DIALOG EXIT^Quit^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5748,2,0)
^101.02A^1^1
"KRN",101,5748,2,1,0)
QU
"KRN",101,5748,2,"B","QU",1)

"KRN",101,5748,15)
D EXIT^PXRMEXLD
"KRN",101,5748,99)
58393,40400
"KRN",101,5749,-1)
0^15
"KRN",101,5749,0)
PXRM EXCH INSTALL DIALOG (ALL)^Install All^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5749,2,0)
^101.02A^2^1
"KRN",101,5749,2,2,0)
IA
"KRN",101,5749,2,"B","IA",2)

"KRN",101,5749,20)
D INSALL^PXRMEXID
"KRN",101,5749,99)
58393,41034
"KRN",101,5750,-1)
0^16
"KRN",101,5750,0)
PXRM EXCH INSTALL DIALOG (SELECTED)^Install Selected^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5750,2,0)
^101.02A^1^1
"KRN",101,5750,2,1,0)
IS
"KRN",101,5750,2,"B","IS",1)

"KRN",101,5750,20)
D INSSEL^PXRMEXID
"KRN",101,5750,99)
58393,41115
"KRN",101,5752,-1)
0^13
"KRN",101,5752,0)
PXRM EXCH DELETE INSTALLATION HISTORY^Delete Install History^^A^^^^^^^^
"KRN",101,5752,20)
D DELHIST^PXRMEXLR
"KRN",101,5752,99)
58394,51297
"KRN",101,5753,-1)
0^20
"KRN",101,5753,0)
PXRM EXCH INSTALLATION DETAILS^Installation Details^^A^^^^^^^^
"KRN",101,5753,20)
D INDETAIL^PXRMEXLR
"KRN",101,5753,26)

"KRN",101,5753,99)
58394,51444
"KRN",101,5754,-1)
0^22
"KRN",101,5754,0)
PXRM EXCH INSTALLATION HISTORY MENU^^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5754,4)
40
"KRN",101,5754,10,0)
^101.01PA^2^2
"KRN",101,5754,10,1,0)
5752^DH^5^
"KRN",101,5754,10,1,"^")
PXRM EXCH DELETE INSTALLATION HISTORY
"KRN",101,5754,10,2,0)
5753^ID^10^
"KRN",101,5754,10,2,"^")
PXRM EXCH INSTALLATION DETAILS
"KRN",101,5754,15)
D PEXIT^PXRMEXLR
"KRN",101,5754,26)
D SHOW^VALM
"KRN",101,5754,99)
58394,54886
"KRN",101,5757,-1)
0^27
"KRN",101,5757,0)
PXRM EXCH SELECT DIALOG^Select an Item^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5757,1,0)
^^2^2^3001215^
"KRN",101,5757,1,1,0)
This protocol is used by the list PXRM EX LIST DIALOG. The protocol is
"KRN",101,5757,1,2,0)
set-up by the ENTRY action in this list.
"KRN",101,5757,20)
D XSEL^PXRMEXLD
"KRN",101,5757,99)
58423,59168
"KRN",101,5884,-1)
0^8
"KRN",101,5884,0)
PXRM EXCH DIALOG SUMMARY^Dialog Summary^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5884,2,0)
^101.02A^1^1
"KRN",101,5884,2,1,0)
DS
"KRN",101,5884,2,"B","DS",1)

"KRN",101,5884,20)
D SUM^PXRMEXLD
"KRN",101,5884,99)
58457,39718
"KRN",101,5887,-1)
0^26
"KRN",101,5887,0)
PXRM EXCH SELECT COMPONENT^Select an Item^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5887,1,0)
^101.06^1^1^3010212^^
"KRN",101,5887,1,1,0)
This protocol is used by PXRM EX LIST COMPONENTS. The protocol is set-up by the entry action in this list.
"KRN",101,5887,20)
D XSEL^PXRMEXLI
"KRN",101,5887,99)
58461,55537
"KRN",101,5888,-1)
0^10
"KRN",101,5888,0)
PXRM EXCH DIALOG USAGE^Dialog Usage^^A^^^^^^^^
"KRN",101,5888,20)
D USE^PXRMEXLD
"KRN",101,5888,99)
58464,44055
"KRN",101,5889,-1)
0^28
"KRN",101,5889,0)
PXRM EXCH SELECT ENTRY^Select an Item^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5889,1,0)
^101.06^2^2^3010212^^^
"KRN",101,5889,1,1,0)
This protocol is used by PXRM EX REMINDER EXCHANGE. The protocol is set-up
"KRN",101,5889,1,2,0)
by the entry action in this list.
"KRN",101,5889,20)
D XSEL^PXRMEXLM
"KRN",101,5889,99)
58477,54170
"KRN",101,5890,-1)
0^29
"KRN",101,5890,0)
PXRM EXCH SELECT HISTORY^Select an Item^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5890,1,0)
^101.06^2^2^3010214^^^
"KRN",101,5890,1,1,0)
This protocol is used by PXRM EX INSTALLATION HISTORY. The protocol is
"KRN",101,5890,1,2,0)
set-up by the entry action in this list.
"KRN",101,5890,20)
D XSEL^PXRMEXLR
"KRN",101,5890,99)
58484,61502
"KRN",101,5919,-1)
1^31
"KRN",101,5919,0)
PXRM HANDLE HOST FILE
"KRN",101,5920,-1)
1^32
"KRN",101,5920,0)
PXRM HANDLE MAIL MESSAGE
"KRN",101,5921,-1)
1^33
"KRN",101,5921,0)
PXRM INSTALL REMINDER COMPONENTS
"KRN",101,5922,-1)
1^34
"KRN",101,5922,0)
PXRM INSTALLATION SUMMARY
"KRN",101,5923,-1)
1^35
"KRN",101,5923,0)
PXRM LIST COMPONENTS
"KRN",101,5924,-1)
1^37
"KRN",101,5924,0)
PXRM MAIL REMINDER
"KRN",101,5925,-1)
1^38
"KRN",101,5925,0)
PXRM REMINDER INQUIRY
"KRN",101,5926,-1)
1^39
"KRN",101,5926,0)
PXRM SAVE REMINDER
"KRN",101,5927,-1)
1^40
"KRN",101,5927,0)
PXRM SELECT HOST FILE
"KRN",101,5928,-1)
1^41
"KRN",101,5928,0)
PXRM SELECT MESSAGE
"KRN",409.61,730,-1)
0^7
"KRN",409.61,730,0)
PXRM EX LIST COMPONENTS^1^^80^5^20^^1^Component^PXRM EXCH INSTALL MENU^Exchange File Components
"KRN",409.61,730,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,730,"ARRAY")
 ^TMP("PXRMEXLC",$J)
"KRN",409.61,730,"COL",0)
^409.621^5^3
"KRN",409.61,730,"COL",1,0)
COMPONENT^7^10^Component
"KRN",409.61,730,"COL",4,0)
EXISTS^74^6^Exists
"KRN",409.61,730,"COL",5,0)
CATEGORY^61^8^Category
"KRN",409.61,730,"COL","B","CATEGORY",5)

"KRN",409.61,730,"COL","B","COMPONENT",1)

"KRN",409.61,730,"COL","B","EXISTS",4)

"KRN",409.61,730,"FNL")

"KRN",409.61,730,"INIT")
D INSTALL^PXRMEXLI
"KRN",409.61,731,-1)
0^9
"KRN",409.61,731,0)
PXRM EX MAIN HELP^2^^80^3^20^^1^^^Reminder Exchange Main Help
"KRN",409.61,731,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,731,"ARRAY")
 ^TMP("PXRMEXMH",$J)
"KRN",409.61,731,"FNL")

"KRN",409.61,731,"HDR")

"KRN",409.61,731,"INIT")
D LOAD^PXRMEXMH
"KRN",409.61,775,-1)
0^10
"KRN",409.61,775,0)
PXRM EX REMINDER EXCHANGE^1^^80^5^14^0^1^Entry^PXRM EXCH MENU^Clinical Reminder Exchange^1^^1
"KRN",409.61,775,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,775,"ARRAY")
 ^TMP("PXRMEXLR",$J)
"KRN",409.61,775,"COL",0)
^409.621^3^3
"KRN",409.61,775,"COL",1,0)
FILE ENTRY^12^10^Entry
"KRN",409.61,775,"COL",2,0)
SOURCE^40^23^Source
"KRN",409.61,775,"COL",3,0)
DATE PACKED^65^11^Date Packed
"KRN",409.61,775,"COL","B","DATE PACKED",3)

"KRN",409.61,775,"COL","B","FILE ENTRY",1)

"KRN",409.61,775,"COL","B","SOURCE",2)

"KRN",409.61,775,"FNL")
D EXIT^PXRMEXLM
"KRN",409.61,775,"HDR")
D HDR^PXRMEXLM
"KRN",409.61,775,"HLP")
D HELP^PXRMEXLM
"KRN",409.61,775,"INIT")
D ENTRY^PXRMEXLM
"KRN",409.61,777,-1)
0^1
"KRN",409.61,777,0)
PXRM EX DEFINITION INQUIRY^2^^80^4^21^0^1^Definition^PXRM REMINDER INQUIRY^Reminder Definition Inquiry
"KRN",409.61,777,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,777,"ARRAY")
 ^TMP("PXRMRINQ",$J)
"KRN",409.61,783,-1)
0^8
"KRN",409.61,783,0)
PXRM EX LIST DIALOG^1^^80^5^19^0^1^Dialog^PXRM EXCH DIALOG MENU^Dialog Components^^^1
"KRN",409.61,783,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,783,"ARRAY")
 ^TMP("PXRMEXLD",$J)
"KRN",409.61,783,"COL",0)
^409.621^5^5
"KRN",409.61,783,"COL",1,0)
HEADER2^13^25^Dialog Details
"KRN",409.61,783,"COL",2,0)
HEADER4^74^6^Exists
"KRN",409.61,783,"COL",3,0)
HEADER3^66^8^Type
"KRN",409.61,783,"COL",4,0)
HEADER1^8^5^Seq.
"KRN",409.61,783,"COL",5,0)
HEADER0^2^5^Item
"KRN",409.61,783,"COL","B","HEADER0",5)

"KRN",409.61,783,"COL","B","HEADER1",4)

"KRN",409.61,783,"COL","B","HEADER2",1)

"KRN",409.61,783,"COL","B","HEADER3",3)

"KRN",409.61,783,"COL","B","HEADER4",2)

"KRN",409.61,783,"FNL")
D EXIT^PXRMEXLD
"KRN",409.61,783,"HDR")
D HDR^PXRMEXLD
"KRN",409.61,783,"HLP")
D HELP^PXRMEXLD
"KRN",409.61,783,"INIT")
D ENTRY^PXRMEXLD
"KRN",409.61,784,-1)
0^11
"KRN",409.61,784,0)
PXRM EX REMINDER LIST^2^^80^4^21^0^1^^^Reminder Definition List^1
"KRN",409.61,784,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,784,"ARRAY")
 ^TMP("PXRMEXLD",$J)
"KRN",409.61,784,"COL",0)
^409.621^3^3
"KRN",409.61,784,"COL",1,0)
RNAME^2^35^Reminder Name
"KRN",409.61,784,"COL",2,0)
PNAME^40^35^Print Name
"KRN",409.61,784,"COL",3,0)
INACTIVE^73^8^Inactive
"KRN",409.61,784,"COL","B","INACTIVE",3)

"KRN",409.61,784,"COL","B","PNAME",2)

"KRN",409.61,784,"COL","B","RNAME",1)

"KRN",409.61,787,-1)
0^2
"KRN",409.61,787,0)
PXRM EX DIALOG HELP^2^^80^3^20^^1
"KRN",409.61,787,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,787,"ARRAY")
 ^TMP("PXRMEXDH",$J)
"KRN",409.61,787,"INIT")
D LOAD^PXRMEXDH
"KRN",409.61,788,-1)
0^6
"KRN",409.61,788,0)
PXRM EX INSTALLATION HISTORY^1^^80^4^18^0^1^Date^PXRM EXCH INSTALLATION HISTORY MENU^Installation History^1
"KRN",409.61,788,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,788,"ARRAY")
 ^TMP("PXRMEXIH",$J)
"KRN",409.61,788,"COL",0)
^409.621^3^3
"KRN",409.61,788,"COL",1,0)
ENTRY^8^30^Entry
"KRN",409.61,788,"COL",2,0)
SOURCE^38^20^Source
"KRN",409.61,788,"COL",3,0)
DATE PACKED^63^17^Date Packed
"KRN",409.61,788,"COL","B","DATE PACKED",3)

"KRN",409.61,788,"COL","B","ENTRY",1)

"KRN",409.61,788,"COL","B","SOURCE",2)

"KRN",409.61,788,"INIT")
D XQORM^PXRMEXLR
"KRN",409.61,789,-1)
0^5
"KRN",409.61,789,0)
PXRM EX INSTALLATION DETAIL^2^^80^4^20^0^1^^^Installation Detail^1
"KRN",409.61,789,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,789,"ARRAY")
 ^TMP("PXRMEXID",$J)
"KRN",409.61,789,"COL",0)
^409.621^3^3
"KRN",409.61,789,"COL",1,0)
ENTRY^8^38^Entry
"KRN",409.61,789,"COL",2,0)
DATE PACKED^40^19^  Date Packed
"KRN",409.61,789,"COL",3,0)
DATE INSTALLED^60^19^  Date Installed
"KRN",409.61,789,"COL","B","DATE INSTALLED",3)

"KRN",409.61,789,"COL","B","DATE PACKED",2)

"KRN",409.61,789,"COL","B","ENTRY",1)

"KRN",409.61,812,-1)
1^12
"KRN",409.61,812,0)
PXRM EX HOST FILE
"KRN",409.61,813,-1)
1^13
"KRN",409.61,813,0)
PXRM EX INSTALL SUMMARY
"KRN",409.61,814,-1)
1^14
"KRN",409.61,814,0)
PXRM EX MAILMAN MESSAGE
"KRN",409.61,815,-1)
1^15
"KRN",409.61,815,0)
PXRM REMINDER EXCHANGE
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",364,-1)
1^1
"PKG",364,0)
CLINICAL REMINDERS^PXRM^Clinical Reminders^^^3010627
"PKG",364,20,0)
^9.402P^^
"PKG",364,22,0)
^9.49I^1^1
"PKG",364,22,1,0)
1.5^3000619^3000622^1342
"PKG",364,22,1,"PAH",1,0)
5^3010724
"PKG",364,22,1,"PAH",1,1,0)
^^2^2^3010724
"PKG",364,22,1,"PAH",1,1,1,0)
This patch update the Exchange Utility so it is compatible with version
"PKG",364,22,1,"PAH",1,1,2,0)
1.5 of Clinical Reminders.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
61
"RTN","PXRMAGE")
0^45^B16536289
"RTN","PXRMAGE",1,0)
PXRMAGE ; SLC/PKR - Utilities for age calculations. ;05/03/2001
"RTN","PXRMAGE",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMAGE",3,0)
 ;
"RTN","PXRMAGE",4,0)
 ;=======================================================================
"RTN","PXRMAGE",5,0)
AGE(DOB,DATE) ;Given a date of birth and a date return the age on that date.
"RTN","PXRMAGE",6,0)
 ;Both dates should be in VA Fileman format.
"RTN","PXRMAGE",7,0)
 Q (DATE-DOB)\10000
"RTN","PXRMAGE",8,0)
 ;
"RTN","PXRMAGE",9,0)
 ;=======================================================================
"RTN","PXRMAGE",10,0)
AGECHECK(AGE,MINAGE,MAXAGE) ;Given an AGE, MINimumAGE, and MAXimumAGE
"RTN","PXRMAGE",11,0)
 ;return true if age lies within the range.
"RTN","PXRMAGE",12,0)
 ;Special values of NULL or 0 mean there are no limits.
"RTN","PXRMAGE",13,0)
 ;
"RTN","PXRMAGE",14,0)
 S MAXAGE=+MAXAGE
"RTN","PXRMAGE",15,0)
 S MINAGE=+MINAGE
"RTN","PXRMAGE",16,0)
 ;See if too old.
"RTN","PXRMAGE",17,0)
 I (AGE>MAXAGE)&(MAXAGE>0) Q 0
"RTN","PXRMAGE",18,0)
 ;
"RTN","PXRMAGE",19,0)
 ;See if too young.
"RTN","PXRMAGE",20,0)
 I MINAGE=0 Q 1
"RTN","PXRMAGE",21,0)
 I AGE<MINAGE Q 0
"RTN","PXRMAGE",22,0)
 Q 1
"RTN","PXRMAGE",23,0)
 ;
"RTN","PXRMAGE",24,0)
 ;=======================================================================
"RTN","PXRMAGE",25,0)
FMTAGE(MINAGE,MAXAGE) ;Format the minimum age and maximum age for display.
"RTN","PXRMAGE",26,0)
 N STR
"RTN","PXRMAGE",27,0)
 I $L(MINAGE)!$L(MAXAGE) D
"RTN","PXRMAGE",28,0)
 . I $L(MINAGE)&$L(MAXAGE) S STR=" for ages "_MINAGE_" to "_MAXAGE Q
"RTN","PXRMAGE",29,0)
 . I $L(MINAGE) S STR=" for ages "_MINAGE_" and older" Q
"RTN","PXRMAGE",30,0)
 . I $L(MAXAGE) S STR=" for ages "_MAXAGE_" and younger" Q
"RTN","PXRMAGE",31,0)
 E  S STR=" for all ages"
"RTN","PXRMAGE",32,0)
 Q STR
"RTN","PXRMAGE",33,0)
 ;
"RTN","PXRMAGE",34,0)
 ;=======================================================================
"RTN","PXRMAGE",35,0)
FMTFREQ(FREQ) ;Format the frequency for display.
"RTN","PXRMAGE",36,0)
 ;This is based on FREQ^PXRMPT.
"RTN","PXRMAGE",37,0)
 N STR
"RTN","PXRMAGE",38,0)
 I +FREQ=0 S STR=FREQ_" - Not Indicated" Q STR
"RTN","PXRMAGE",39,0)
 I FREQ?1"99Y" S STR="99Y - Once"
"RTN","PXRMAGE",40,0)
 E  S STR=+FREQ_($S(FREQ["D":" day",FREQ["M":" month",FREQ["Y":" year",1:""))_$S(+FREQ>1:"s",1:"")
"RTN","PXRMAGE",41,0)
 Q STR
"RTN","PXRMAGE",42,0)
 ;
"RTN","PXRMAGE",43,0)
 ;=======================================================================
"RTN","PXRMAGE",44,0)
MMF(MINAGE,MAXAGE,FREQ,FIEVAL) ;Set the baseline minimum age, maximum
"RTN","PXRMAGE",45,0)
 ;age, and frequency.  If there are multiple intervals they cannot
"RTN","PXRMAGE",46,0)
 ;overlap.
"RTN","PXRMAGE",47,0)
 N FR,IC,INDEX,MATCH,MAXA,MINA,NAR,TEMP
"RTN","PXRMAGE",48,0)
 ;
"RTN","PXRMAGE",49,0)
 ;Initialize MINAGE, MAXAGE, and FREQ.
"RTN","PXRMAGE",50,0)
 S (MINAGE,MAXAGE,FREQ)=""
"RTN","PXRMAGE",51,0)
 ;
"RTN","PXRMAGE",52,0)
 S IC=0
"RTN","PXRMAGE",53,0)
 S NAR=0
"RTN","PXRMAGE",54,0)
 F  S IC=$O(^PXD(811.9,PXRMITEM,7,IC)) Q:+IC=0  D
"RTN","PXRMAGE",55,0)
 . S NAR=NAR+1
"RTN","PXRMAGE",56,0)
 . S TEMP=$G(^PXD(811.9,PXRMITEM,7,IC,0))
"RTN","PXRMAGE",57,0)
 . S FR(NAR)=$$UP^XLFSTR($P(TEMP,U,1))
"RTN","PXRMAGE",58,0)
 . S MINA(NAR)=$P(TEMP,U,2)
"RTN","PXRMAGE",59,0)
 . S MAXA(NAR)=$P(TEMP,U,3)
"RTN","PXRMAGE",60,0)
 . S INDEX(NAR)=IC
"RTN","PXRMAGE",61,0)
 . S FIEVAL("AGE",IC)=0
"RTN","PXRMAGE",62,0)
 I NAR=0 Q
"RTN","PXRMAGE",63,0)
 ;
"RTN","PXRMAGE",64,0)
 ;Make sure that none of the age ranges overlap.
"RTN","PXRMAGE",65,0)
 I $$OVERLAP(NAR,.MINA,.MAXA) Q
"RTN","PXRMAGE",66,0)
 ;
"RTN","PXRMAGE",67,0)
 ;Look for an age range match.
"RTN","PXRMAGE",68,0)
 S FREQ=-1
"RTN","PXRMAGE",69,0)
 S MATCH=0
"RTN","PXRMAGE",70,0)
 F IC=1:1:NAR Q:MATCH  D
"RTN","PXRMAGE",71,0)
 . I $$AGECHECK(PXRMAGE,MINA(IC),MAXA(IC)) D
"RTN","PXRMAGE",72,0)
 .. S MATCH=1
"RTN","PXRMAGE",73,0)
 .. S MINAGE=MINA(IC)
"RTN","PXRMAGE",74,0)
 .. S MAXAGE=MAXA(IC)
"RTN","PXRMAGE",75,0)
 .. S FREQ=FR(IC)
"RTN","PXRMAGE",76,0)
 .. S FIEVAL("AGE",INDEX(IC))=1
"RTN","PXRMAGE",77,0)
 Q
"RTN","PXRMAGE",78,0)
 ;
"RTN","PXRMAGE",79,0)
 ;=======================================================================
"RTN","PXRMAGE",80,0)
MNMT(NLINES,FIEVAL) ;Output the AGE match/no match text.
"RTN","PXRMAGE",81,0)
 N IC,IND,LC,TEXT
"RTN","PXRMAGE",82,0)
 I '$D(FIEVAL("AGE")) Q
"RTN","PXRMAGE",83,0)
 S IC=""
"RTN","PXRMAGE",84,0)
 F  S IC=$O(FIEVAL("AGE",IC)) Q:IC=""  D
"RTN","PXRMAGE",85,0)
 . I FIEVAL("AGE",IC)=1 S IND=1
"RTN","PXRMAGE",86,0)
 . E  S IND=2
"RTN","PXRMAGE",87,0)
 . S LC=0
"RTN","PXRMAGE",88,0)
 . F  S LC=$O(^PXD(811.9,PXRMITEM,7,IC,IND,LC)) Q:LC=""  D
"RTN","PXRMAGE",89,0)
 .. S TEXT=$G(^PXD(811.9,PXRMITEM,7,IC,IND,LC,0))
"RTN","PXRMAGE",90,0)
 .. D ADDTXT^PXRMOPT(.NLINES,TEXT)
"RTN","PXRMAGE",91,0)
 . I $D(PXRMDEV) D
"RTN","PXRMAGE",92,0)
 .. N DES,UID
"RTN","PXRMAGE",93,0)
 .. S DES="AGE"_IC_IND
"RTN","PXRMAGE",94,0)
 .. S UID=DES_$$NTOAN^PXRMUTIL(LC)
"RTN","PXRMAGE",95,0)
 .. S ^TMP(PXRMPID,$J,PXRMITEM,UID)=FIEVAL("AGE",IC)
"RTN","PXRMAGE",96,0)
 Q
"RTN","PXRMAGE",97,0)
 ;
"RTN","PXRMAGE",98,0)
 ;=======================================================================
"RTN","PXRMAGE",99,0)
OVERLAP(NAR,MINA,MAXA) ;Check age ranges for overlap.  Return an error message
"RTN","PXRMAGE",100,0)
 ;if an overlap is found.
"RTN","PXRMAGE",101,0)
 I NAR'>1 Q 0
"RTN","PXRMAGE",102,0)
 N IC,IN,JC,MAXI,MAXJ,MINI,MINJ,OVRLAP
"RTN","PXRMAGE",103,0)
 S OVRLAP=0
"RTN","PXRMAGE",104,0)
 F IC=1:1:NAR-1 D
"RTN","PXRMAGE",105,0)
 . S MAXI=MAXA(IC)
"RTN","PXRMAGE",106,0)
 . I MAXI="" S MAXI=1000
"RTN","PXRMAGE",107,0)
 . S MINI=MINA(IC)
"RTN","PXRMAGE",108,0)
 . I MINI="" S MINI=0
"RTN","PXRMAGE",109,0)
 . F JC=IC+1:1:NAR D
"RTN","PXRMAGE",110,0)
 .. S MAXJ=MAXA(JC)
"RTN","PXRMAGE",111,0)
 .. I MAXJ="" S MAXJ=1000
"RTN","PXRMAGE",112,0)
 .. S MINJ=MINA(JC)
"RTN","PXRMAGE",113,0)
 .. I MINJ="" S MINJ=0
"RTN","PXRMAGE",114,0)
 .. S IN=0
"RTN","PXRMAGE",115,0)
 .. I (MINJ'<MINI)&(MINJ'>MAXI) S IN=1
"RTN","PXRMAGE",116,0)
 .. I (MAXJ'<MINI)&(MAXJ'>MAXI) S IN=1
"RTN","PXRMAGE",117,0)
 .. I IN D
"RTN","PXRMAGE",118,0)
 ... S OVRLAP=OVRLAP+1
"RTN","PXRMAGE",119,0)
 ... S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","AGE OVERLAP",OVRLAP)=MINA(IC)_" to "_MAXA(IC)_" and "_MINA(JC)_" to "_MAXA(JC)
"RTN","PXRMAGE",120,0)
 I OVRLAP>1 S OVRLAP=1
"RTN","PXRMAGE",121,0)
 Q OVRLAP
"RTN","PXRMAGE",122,0)
 ;
"RTN","PXRMAGE",123,0)
 ;=======================================================================
"RTN","PXRMAGE",124,0)
RESTORE(SOURCE,INDEX,FREQ,MINAGE,MAXAGE) ;Restore FREQ, MINAGE, and
"RTN","PXRMAGE",125,0)
 ;MAXAGE back to the original form.
"RTN","PXRMAGE",126,0)
 N IND,TEMP
"RTN","PXRMAGE",127,0)
 I SOURCE="CFIND" D
"RTN","PXRMAGE",128,0)
 . S IND=$O(^PXD(811.9,PXRMITEM,10,"B",INDEX,""))
"RTN","PXRMAGE",129,0)
 . S TEMP=^PXD(811.9,PXRMITEM,10,IND,0)
"RTN","PXRMAGE",130,0)
 ;
"RTN","PXRMAGE",131,0)
 I SOURCE="HFIND" D
"RTN","PXRMAGE",132,0)
 . S IND=$O(^PXD(811.9,PXRMITEM,6,"B",INDEX,""))
"RTN","PXRMAGE",133,0)
 . S TEMP=^PXD(811.9,PXRMITEM,6,IND,0)
"RTN","PXRMAGE",134,0)
 ;
"RTN","PXRMAGE",135,0)
 I SOURCE="TFIND" D
"RTN","PXRMAGE",136,0)
 . S IND=$O(^PXD(811.9,PXRMITEM,4,"B",INDEX,""))
"RTN","PXRMAGE",137,0)
 . S TEMP=^PXD(811.9,PXRMITEM,4,IND,0)
"RTN","PXRMAGE",138,0)
 ;
"RTN","PXRMAGE",139,0)
 S MINAGE=$P(TEMP,U,2)
"RTN","PXRMAGE",140,0)
 S MAXAGE=$P(TEMP,U,3)
"RTN","PXRMAGE",141,0)
 S FREQ=$P(TEMP,U,4)
"RTN","PXRMAGE",142,0)
 Q
"RTN","PXRMAGE",143,0)
 ;
"RTN","PXRMCFED")
0^48^B1548855
"RTN","PXRMCFED",1,0)
PXRMCFED ; SLC/PKR - Edit a reminder computed finding. ;06/19/2001
"RTN","PXRMCFED",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMCFED",3,0)
 ;
"RTN","PXRMCFED",4,0)
 ;=======================================================================
"RTN","PXRMCFED",5,0)
 N CS1,CS2,DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMCFED",6,0)
GETNAME ;Get the name of the computed finding to edit.
"RTN","PXRMCFED",7,0)
 ;Make sure the user has programmer access.
"RTN","PXRMCFED",8,0)
 I DUZ(0)'="@" D  Q
"RTN","PXRMCFED",9,0)
 . W !!,"Only those with programmer's access can perform this function."
"RTN","PXRMCFED",10,0)
 K DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMCFED",11,0)
 S DIC="^PXRMD(811.4,"
"RTN","PXRMCFED",12,0)
 S DIC(0)="AEMQL"
"RTN","PXRMCFED",13,0)
 S DIC("A")="Select Reminder Computed Finding: "
"RTN","PXRMCFED",14,0)
 S DIC("S")="I $P(^(0),U,1)'[""VA-"""
"RTN","PXRMCFED",15,0)
 S DLAYGO=811.4
"RTN","PXRMCFED",16,0)
 ;Set the starting place for additions.
"RTN","PXRMCFED",17,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMCFED",18,0)
 W !
"RTN","PXRMCFED",19,0)
 D ^DIC
"RTN","PXRMCFED",20,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMCFED",21,0)
 I Y=-1 G END
"RTN","PXRMCFED",22,0)
 S DA=$P(Y,U,1)
"RTN","PXRMCFED",23,0)
 S CS1=$$FILE^PXRMEXCS(811.4,DA)
"RTN","PXRMCFED",24,0)
 D EDIT(DIC,DA)
"RTN","PXRMCFED",25,0)
 S CS2=$$FILE^PXRMEXCS(811.4,DA)
"RTN","PXRMCFED",26,0)
 I CS2=0 Q
"RTN","PXRMCFED",27,0)
 I CS2'=CS1 D SEHIST^PXRMUTIL(811.4,DIC,DA)
"RTN","PXRMCFED",28,0)
 G GETNAME
"RTN","PXRMCFED",29,0)
END ;
"RTN","PXRMCFED",30,0)
 Q
"RTN","PXRMCFED",31,0)
 ;
"RTN","PXRMCFED",32,0)
 ;=======================================================================
"RTN","PXRMCFED",33,0)
EDIT(ROOT,DA) ;
"RTN","PXRMCFED",34,0)
 N DIE,DR,DIDEL
"RTN","PXRMCFED",35,0)
 S DIE=ROOT,DIDEL=811.4
"RTN","PXRMCFED",36,0)
 S DR="[PXRM EDIT REMINDER CF]"
"RTN","PXRMCFED",37,0)
 D ^DIE
"RTN","PXRMCFED",38,0)
 Q
"RTN","PXRMCFED",39,0)
 ;
"RTN","PXRMCOPY")
0^47^B19113729
"RTN","PXRMCOPY",1,0)
PXRMCOPY ; SLC/PKR,PJH - Copy various reminder files. ;05/11/2001
"RTN","PXRMCOPY",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMCOPY",3,0)
 ;
"RTN","PXRMCOPY",4,0)
 ;=======================================================================
"RTN","PXRMCOPY",5,0)
COPY(PROMPT,ROOT,WHAT) ;Copy an entry of ROOT into a new entry.
"RTN","PXRMCOPY",6,0)
 N DIROUT,DTOUT,DUOUT
"RTN","PXRMCOPY",7,0)
 ;
"RTN","PXRMCOPY",8,0)
 F  D GETORGR Q:$D(DIROUT)  Q:$D(DTOUT)
"RTN","PXRMCOPY",9,0)
 Q
"RTN","PXRMCOPY",10,0)
 ;
"RTN","PXRMCOPY",11,0)
 ;=======================================================================
"RTN","PXRMCOPY",12,0)
GETORGR ;Look-up logic to get and copy source entry to destination.
"RTN","PXRMCOPY",13,0)
 N DA,DIE,DIC,DIK,DIR,FDA,FIELDLEN
"RTN","PXRMCOPY",14,0)
 N IENN,IENO,IENS,MSG,NAME,ORGNAME,X,Y
"RTN","PXRMCOPY",15,0)
 S DIC=ROOT,DIC(0)="AEQ",DIC("A")=PROMPT
"RTN","PXRMCOPY",16,0)
 W !
"RTN","PXRMCOPY",17,0)
 D ^DIC
"RTN","PXRMCOPY",18,0)
 I $D(DUOUT)!$D(DTOUT) S DIROUT="" Q
"RTN","PXRMCOPY",19,0)
 S IENO=$P(Y,U,1)
"RTN","PXRMCOPY",20,0)
 I IENO=-1 S DIROUT="" Q
"RTN","PXRMCOPY",21,0)
 ;
"RTN","PXRMCOPY",22,0)
 ;Set the starting place for additions.
"RTN","PXRMCOPY",23,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMCOPY",24,0)
 S IENN=$$GETFOIEN(ROOT)
"RTN","PXRMCOPY",25,0)
 D MERGE(IENN,IENO,ROOT)
"RTN","PXRMCOPY",26,0)
 ;
"RTN","PXRMCOPY",27,0)
 ;Get the new name.
"RTN","PXRMCOPY",28,0)
 S ORGNAME=$P(@(ROOT_IENO_",0)"),U,1)
"RTN","PXRMCOPY",29,0)
 S FILE=$$FNFR^PXRMUTIL(ROOT)
"RTN","PXRMCOPY",30,0)
 S FIELDLEN=$$GET1^DID(FILE,.01,"","FIELD LENGTH")
"RTN","PXRMCOPY",31,0)
 S DIR(0)="F"_U_"3:"_FIELDLEN_U_"K:(X?.N)!'(X'?1P.E) X"
"RTN","PXRMCOPY",32,0)
 S DIR("A")="PLEASE ENTER A UNIQUE NAME"
"RTN","PXRMCOPY",33,0)
GETNAM D ^DIR
"RTN","PXRMCOPY",34,0)
 I $D(DIRUT) D DELETE(ROOT,IENN) Q
"RTN","PXRMCOPY",35,0)
 S NAME=Y
"RTN","PXRMCOPY",36,0)
 ;
"RTN","PXRMCOPY",37,0)
 ;Make sure the new name is valid.
"RTN","PXRMCOPY",38,0)
 I '$$VNAME^PXRMINTR(NAME,FILE) G GETNAM
"RTN","PXRMCOPY",39,0)
 ;
"RTN","PXRMCOPY",40,0)
 ;Change to the new name.
"RTN","PXRMCOPY",41,0)
 S IENS=IENN_","
"RTN","PXRMCOPY",42,0)
 S FDA(FILE,IENS,.01)=NAME
"RTN","PXRMCOPY",43,0)
 K MSG
"RTN","PXRMCOPY",44,0)
 D FILE^DIE("","FDA","MSG")
"RTN","PXRMCOPY",45,0)
 ;Check to make sure the name was not a duplicate.
"RTN","PXRMCOPY",46,0)
 I $G(MSG("DIERR",1))=740 D  G GETNAM
"RTN","PXRMCOPY",47,0)
 . W !,NAME," is not a unique name!"
"RTN","PXRMCOPY",48,0)
 ;Change the class to local and delete the sponsor.
"RTN","PXRMCOPY",49,0)
 D SCAS(FILE,IENN,"L","")
"RTN","PXRMCOPY",50,0)
 ;Initialize the edit history.
"RTN","PXRMCOPY",51,0)
 D INIEH(FILE,ROOT,IENN,IENO)
"RTN","PXRMCOPY",52,0)
 ;
"RTN","PXRMCOPY",53,0)
 ;Reindex the cross-references.
"RTN","PXRMCOPY",54,0)
 S DIK=ROOT,DA=IENN
"RTN","PXRMCOPY",55,0)
 D IX^DIK
"RTN","PXRMCOPY",56,0)
 W !
"RTN","PXRMCOPY",57,0)
 ;
"RTN","PXRMCOPY",58,0)
 ;Tell the user what has happened and allow for editing of the new item.
"RTN","PXRMCOPY",59,0)
 S DIR(0)="Y"
"RTN","PXRMCOPY",60,0)
 S DIR("A")="Do you want to edit it now"
"RTN","PXRMCOPY",61,0)
 S DIR("A",1)="The original "_WHAT_" "_ORGNAME_" has been copied into "_NAME_"."
"RTN","PXRMCOPY",62,0)
 D ^DIR Q:$D(DIRUT)
"RTN","PXRMCOPY",63,0)
 I Y D EDIT^PXRMEDIT(ROOT,IENN)
"RTN","PXRMCOPY",64,0)
 Q
"RTN","PXRMCOPY",65,0)
 ;
"RTN","PXRMCOPY",66,0)
 ;=======================================================================
"RTN","PXRMCOPY",67,0)
COPYREM ;Copy a reminder definition.
"RTN","PXRMCOPY",68,0)
 N PROMPT,ROOT,WHAT
"RTN","PXRMCOPY",69,0)
 S WHAT="reminder"
"RTN","PXRMCOPY",70,0)
 S ROOT="^PXD(811.9,"
"RTN","PXRMCOPY",71,0)
 S PROMPT="Select the reminder item to copy: "
"RTN","PXRMCOPY",72,0)
 D COPY(PROMPT,ROOT,WHAT)
"RTN","PXRMCOPY",73,0)
 Q
"RTN","PXRMCOPY",74,0)
 ;
"RTN","PXRMCOPY",75,0)
 ;=======================================================================
"RTN","PXRMCOPY",76,0)
COPYTAX ;Copy a taxonomy.
"RTN","PXRMCOPY",77,0)
 N PROMPT,ROOT,WHAT
"RTN","PXRMCOPY",78,0)
 S WHAT="taxonomy"
"RTN","PXRMCOPY",79,0)
 S ROOT="^PXD(811.2,"
"RTN","PXRMCOPY",80,0)
 S PROMPT="Select the taxonomy item to copy: "
"RTN","PXRMCOPY",81,0)
 D COPY(PROMPT,ROOT,WHAT)
"RTN","PXRMCOPY",82,0)
 Q
"RTN","PXRMCOPY",83,0)
 ;
"RTN","PXRMCOPY",84,0)
 ;=======================================================================
"RTN","PXRMCOPY",85,0)
COPYTERM ;Copy a reminder term.
"RTN","PXRMCOPY",86,0)
 N PROMPT,ROOT,WHAT
"RTN","PXRMCOPY",87,0)
 S WHAT="reminder term"
"RTN","PXRMCOPY",88,0)
 S ROOT="^PXRMD(811.5,"
"RTN","PXRMCOPY",89,0)
 S PROMPT="Select the reminder term to copy: "
"RTN","PXRMCOPY",90,0)
 D COPY(PROMPT,ROOT,WHAT)
"RTN","PXRMCOPY",91,0)
 Q
"RTN","PXRMCOPY",92,0)
 ;
"RTN","PXRMCOPY",93,0)
 ;=======================================================================
"RTN","PXRMCOPY",94,0)
DELETE(DIK,DA) ;Delete the entry just added. 
"RTN","PXRMCOPY",95,0)
 D ^DIK
"RTN","PXRMCOPY",96,0)
 W !!,"New entry not created due to invalid name!",!
"RTN","PXRMCOPY",97,0)
 Q
"RTN","PXRMCOPY",98,0)
 ;
"RTN","PXRMCOPY",99,0)
 ;=======================================================================
"RTN","PXRMCOPY",100,0)
GETFOIEN(ROOT) ;Return the first open IEN in ROOT. This should be called
"RTN","PXRMCOPY",101,0)
 ;after a call to SETSTART.
"RTN","PXRMCOPY",102,0)
 N ENTRY,NIEN,OIEN
"RTN","PXRMCOPY",103,0)
 S ENTRY=ROOT_0_")"
"RTN","PXRMCOPY",104,0)
 S OIEN=$P(@ENTRY,U,3)
"RTN","PXRMCOPY",105,0)
 S ENTRY=ROOT_OIEN_")"
"RTN","PXRMCOPY",106,0)
 F  S NIEN=$O(@ENTRY) Q:+(NIEN-OIEN)>1  Q:+NIEN'>0  S OIEN=NIEN,ENTRY=ROOT_NIEN_")"
"RTN","PXRMCOPY",107,0)
 Q OIEN+1
"RTN","PXRMCOPY",108,0)
 ;
"RTN","PXRMCOPY",109,0)
 ;=======================================================================
"RTN","PXRMCOPY",110,0)
INIEH(FILENUM,ROOT,IENN,IENO) ;Initialize the edit history after a copy.
"RTN","PXRMCOPY",111,0)
 ;First delete any existing history entries.
"RTN","PXRMCOPY",112,0)
 N ENTRY,IND,IENS,FDA,FDAIEN,MSG,SFN,TARGET,WP
"RTN","PXRMCOPY",113,0)
 D FIELD^DID(FILENUM,"EDIT HISTORY","","SPECIFIER","TARGET")
"RTN","PXRMCOPY",114,0)
 S SFN=+$G(TARGET("SPECIFIER"))
"RTN","PXRMCOPY",115,0)
 I SFN=0 Q
"RTN","PXRMCOPY",116,0)
 S ENTRY=ROOT_IENN_",110)"
"RTN","PXRMCOPY",117,0)
 S IND=0
"RTN","PXRMCOPY",118,0)
 F  S IND=$O(@ENTRY@(IND)) Q:+IND=0  D
"RTN","PXRMCOPY",119,0)
 . S IENS=IND_","_IENN_","
"RTN","PXRMCOPY",120,0)
 . S FDA(SFN,IENS,.01)="@"
"RTN","PXRMCOPY",121,0)
 I $D(FDA(SFN)) D FILE^DIE("K","FDA","MSG")
"RTN","PXRMCOPY",122,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMCOPY",123,0)
 ;Establish an initial entry in the edit history.
"RTN","PXRMCOPY",124,0)
 K FDA,MSG
"RTN","PXRMCOPY",125,0)
 S IENS="+1,"_IENN_","
"RTN","PXRMCOPY",126,0)
 S FDAIEN(IENN)=IENN
"RTN","PXRMCOPY",127,0)
 S FDA(SFN,IENS,.01)=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMCOPY",128,0)
 S FDA(SFN,IENS,1)=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMCOPY",129,0)
 S FDA(SFN,IENS,2)="WP(1,1)"
"RTN","PXRMCOPY",130,0)
 S WP(1,1,1)="Copied from "_$$GET1^DIQ(FILENUM,IENO,.01)
"RTN","PXRMCOPY",131,0)
 D UPDATE^DIE("E","FDA","FDAIEN","MSG")
"RTN","PXRMCOPY",132,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMCOPY",133,0)
 Q
"RTN","PXRMCOPY",134,0)
 ;
"RTN","PXRMCOPY",135,0)
 ;=======================================================================
"RTN","PXRMCOPY",136,0)
MERGE(IENN,IENO,ROOT) ;Use MERGE to copy ROOT(IENO into ROOT(IENN.
"RTN","PXRMCOPY",137,0)
 N DEST,SOURCE
"RTN","PXRMCOPY",138,0)
 S DEST=ROOT_IENN_")"
"RTN","PXRMCOPY",139,0)
 ;Lock the file before merging.
"RTN","PXRMCOPY",140,0)
 L +@DEST:10
"RTN","PXRMCOPY",141,0)
 S SOURCE=ROOT_IENO_")"
"RTN","PXRMCOPY",142,0)
 M @DEST=@SOURCE
"RTN","PXRMCOPY",143,0)
 ;Unlock the file
"RTN","PXRMCOPY",144,0)
 L -@DEST
"RTN","PXRMCOPY",145,0)
 Q
"RTN","PXRMCOPY",146,0)
 ;
"RTN","PXRMCOPY",147,0)
 ;=======================================================================
"RTN","PXRMCOPY",148,0)
SCAS(FILENUM,IEN,CLASS,SPONSOR) ;Set the class field to CLASS and the sponsor
"RTN","PXRMCOPY",149,0)
 ;field to SPONSOR.
"RTN","PXRMCOPY",150,0)
 N IENS,FDA,MSG
"RTN","PXRMCOPY",151,0)
 S IENS=IEN_","
"RTN","PXRMCOPY",152,0)
 S FDA(FILENUM,IENS,100)=CLASS
"RTN","PXRMCOPY",153,0)
 S FDA(FILENUM,IENS,101)=SPONSOR
"RTN","PXRMCOPY",154,0)
 D FILE^DIE("K","FDA","MSG")
"RTN","PXRMCOPY",155,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMCOPY",156,0)
 Q
"RTN","PXRMCOPY",157,0)
 ;
"RTN","PXRMCOPY",158,0)
 ;=======================================================================
"RTN","PXRMCOPY",159,0)
SETSTART(ROOT) ;Set the starting value to add new entries. Start
"RTN","PXRMCOPY",160,0)
 ;at the begining so empty spaces are filled in.
"RTN","PXRMCOPY",161,0)
 N CUR,ENTRY
"RTN","PXRMCOPY",162,0)
 S ENTRY=ROOT_"0)"
"RTN","PXRMCOPY",163,0)
 S $P(@ENTRY,U,3)=1
"RTN","PXRMCOPY",164,0)
 Q
"RTN","PXRMCOPY",165,0)
 ;
"RTN","PXRMDBL3")
0^41^B28881523
"RTN","PXRMDBL3",1,0)
PXRMDBL3 ; SLC/PJH - Reminder Dialog Generation. (overflow) ;04/30/2001
"RTN","PXRMDBL3",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMDBL3",3,0)
 ;
"RTN","PXRMDBL3",4,0)
 ; Called from PXRMDBL1
"RTN","PXRMDBL3",5,0)
 ;
"RTN","PXRMDBL3",6,0)
 ;Set number range for site
"RTN","PXRMDBL3",7,0)
START D SETSTART^PXRMCOPY("^PXRMD(801.41,")
"RTN","PXRMDBL3",8,0)
 ;Update dialog file for individual dialog items
"RTN","PXRMDBL3",9,0)
 D UPDATE(.ARRAY,.WPTXT,"E")
"RTN","PXRMDBL3",10,0)
 ;Create reminder dialog
"RTN","PXRMDBL3",11,0)
 D UPDATE(.DSET,"","R")
"RTN","PXRMDBL3",12,0)
 ;
"RTN","PXRMDBL3",13,0)
 W !!,"Dialog build complete" H 3
"RTN","PXRMDBL3",14,0)
END Q
"RTN","PXRMDBL3",15,0)
 ;
"RTN","PXRMDBL3",16,0)
 ;Error Handler
"RTN","PXRMDBL3",17,0)
 ;-------------
"RTN","PXRMDBL3",18,0)
ERR(DESC) ;
"RTN","PXRMDBL3",19,0)
 N ERROR,IC,REF
"RTN","PXRMDBL3",20,0)
 S ERROR(1)="Unable to update dialog file : "_DESC
"RTN","PXRMDBL3",21,0)
 S ERROR(2)="Error in UPDATE^DIE, needs further investigation"
"RTN","PXRMDBL3",22,0)
 ;Move MSG into ERROR
"RTN","PXRMDBL3",23,0)
 S REF="MSG"
"RTN","PXRMDBL3",24,0)
 F IC=3:1 S REF=$Q(@REF) Q:REF=""  S ERROR(IC)=REF_"="_@REF
"RTN","PXRMDBL3",25,0)
 ;Screen message
"RTN","PXRMDBL3",26,0)
 D BMES^XPDUTL(.ERROR)
"RTN","PXRMDBL3",27,0)
 Q
"RTN","PXRMDBL3",28,0)
 ;
"RTN","PXRMDBL3",29,0)
 ;Check if dialog element already exists
"RTN","PXRMDBL3",30,0)
 ;--------------------------------------
"RTN","PXRMDBL3",31,0)
EXISTS(NAME) ;
"RTN","PXRMDBL3",32,0)
 N IEN S IEN=$O(^PXRMD(801.41,"B",NAME,""))
"RTN","PXRMDBL3",33,0)
 I IEN S DSET(1,CNT*5)=IEN Q 1
"RTN","PXRMDBL3",34,0)
 Q 0
"RTN","PXRMDBL3",35,0)
 ;
"RTN","PXRMDBL3",36,0)
 ;Update edit history
"RTN","PXRMDBL3",37,0)
 ;-------------------
"RTN","PXRMDBL3",38,0)
HIS(IENN) ;
"RTN","PXRMDBL3",39,0)
 ;First delete any existing history entries.
"RTN","PXRMDBL3",40,0)
 N ENTRY,IND,IENS,FDA,FDAIEN,MSG,WP
"RTN","PXRMDBL3",41,0)
 S ENTRY="^PXRMD(801.41,"_IENN_",110)"
"RTN","PXRMDBL3",42,0)
 S IND=0
"RTN","PXRMDBL3",43,0)
 F  S IND=$O(@ENTRY@(IND)) Q:+IND=0  D
"RTN","PXRMDBL3",44,0)
 . S IENS=IND_","_IENN_","
"RTN","PXRMDBL3",45,0)
 . S FDA(801.44,IENS,.01)="@"
"RTN","PXRMDBL3",46,0)
 I $D(FDA(801.44)) D
"RTN","PXRMDBL3",47,0)
 .D FILE^DIE("K","FDA","MSG") I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMDBL3",48,0)
 ;Establish an initial entry in the edit history.
"RTN","PXRMDBL3",49,0)
 K FDA,MSG
"RTN","PXRMDBL3",50,0)
 S IENS="+1,"_IENN_","
"RTN","PXRMDBL3",51,0)
 S FDAIEN(IENN)=IENN
"RTN","PXRMDBL3",52,0)
 S FDA(801.44,IENS,.01)=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMDBL3",53,0)
 S FDA(801.44,IENS,1)=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMDBL3",54,0)
 S FDA(801.44,IENS,2)="WP(1,1)"
"RTN","PXRMDBL3",55,0)
 S WP(1,1,1)="Autogenerated"
"RTN","PXRMDBL3",56,0)
 D UPDATE^DIE("E","FDA","FDAIEN","MSG")
"RTN","PXRMDBL3",57,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMDBL3",58,0)
 Q
"RTN","PXRMDBL3",59,0)
 ;
"RTN","PXRMDBL3",60,0)
 ;Mental Health
"RTN","PXRMDBL3",61,0)
 ;-------------
"RTN","PXRMDBL3",62,0)
MHOK(IEN) ;
"RTN","PXRMDBL3",63,0)
 N RNAME,TEST,YT S YT=""
"RTN","PXRMDBL3",64,0)
 ;Convert ien to name
"RTN","PXRMDBL3",65,0)
 S YT("CODE")=$P($G(^YTT(601,IEN,0)),U)
"RTN","PXRMDBL3",66,0)
 ;Quit if no code found
"RTN","PXRMDBL3",67,0)
 I YT("CODE")="" Q 0
"RTN","PXRMDBL3",68,0)
 ;Check if this is an allowable GUI test
"RTN","PXRMDBL3",69,0)
 I (YT("CODE")'="GAF"),($P($G(^YTT(601.6,IEN,0)),U,4)'="Y") Q 0
"RTN","PXRMDBL3",70,0)
 ;Get details of test
"RTN","PXRMDBL3",71,0)
 D SHOWALL^YTAPI3(.TEST,.YT)
"RTN","PXRMDBL3",72,0)
 ;Check if valid
"RTN","PXRMDBL3",73,0)
 I TEST(1)["[ERROR]" Q 0
"RTN","PXRMDBL3",74,0)
 ;
"RTN","PXRMDBL3",75,0)
 S DNAME=FTYP_" "_YT("CODE")
"RTN","PXRMDBL3",76,0)
 ;Create arrays
"RTN","PXRMDBL3",77,0)
 S CNT=CNT+1
"RTN","PXRMDBL3",78,0)
 ;Convert dialog item name to UC
"RTN","PXRMDBL3",79,0)
 S DNAME=$TR(DNAME,LOWER,UPPER)
"RTN","PXRMDBL3",80,0)
 ;Truncate the item name - without finesse
"RTN","PXRMDBL3",81,0)
 S DSHORT=DNAME
"RTN","PXRMDBL3",82,0)
 I $L(DSHORT)>40 S DSHORT=$E(DNAME,1,40)
"RTN","PXRMDBL3",83,0)
 ;Dialog item name, finding item and result 
"RTN","PXRMDBL3",84,0)
 S ARRAY(CNT)=DSHORT_U_U_RESN_U
"RTN","PXRMDBL3",85,0)
 ;Result group name
"RTN","PXRMDBL3",86,0)
 S RNAME="PXRM "_YT("CODE")_" RESULT GROUP"
"RTN","PXRMDBL3",87,0)
 ;Result pointer
"RTN","PXRMDBL3",88,0)
 S $P(ARRAY(CNT),U,7)=$O(^PXRMD(801.41,"B",RNAME,""))
"RTN","PXRMDBL3",89,0)
 ;If aims exclude from p/n
"RTN","PXRMDBL3",90,0)
 I YT("CODE")="AIMS" S $P(ARRAY(CNT),U,6)=1
"RTN","PXRMDBL3",91,0)
 ;Prompt text
"RTN","PXRMDBL3",92,0)
 S WPTXT(CNT,1)=YT("CODE")_" (Mental Health Instrument)"
"RTN","PXRMDBL3",93,0)
 ;test
"RTN","PXRMDBL3",94,0)
 W !!,CNT,?5,WPTXT(CNT,1)
"RTN","PXRMDBL3",95,0)
 Q 1
"RTN","PXRMDBL3",96,0)
 ;
"RTN","PXRMDBL3",97,0)
 ;Sub-routine to update dialog file #801.41
"RTN","PXRMDBL3",98,0)
 ;-----------------------------------------
"RTN","PXRMDBL3",99,0)
UPDATE(INP,WPTXT,DTYPE) ;
"RTN","PXRMDBL3",100,0)
 N CNT,DATA,DESC,IEN,STRING,SUB,TEXT
"RTN","PXRMDBL3",101,0)
 N FDA,FDAIEN,MSG
"RTN","PXRMDBL3",102,0)
 ;Get each dialog line in turn
"RTN","PXRMDBL3",103,0)
 S STRING="Updating "_$S(DTYPE="E":"Dialog Elements",1:"Reminder Dialog")
"RTN","PXRMDBL3",104,0)
 D BMES^XPDUTL(STRING)
"RTN","PXRMDBL3",105,0)
 ;
"RTN","PXRMDBL3",106,0)
 ;Create FDA for each entry in array
"RTN","PXRMDBL3",107,0)
 S CNT=""
"RTN","PXRMDBL3",108,0)
 F  S CNT=$O(INP(CNT)) Q:CNT=""  D  Q:$D(MSG)
"RTN","PXRMDBL3",109,0)
 .;If finding is a finding item parameter no need to build an element
"RTN","PXRMDBL3",110,0)
 .I DTYPE="E",$P(INP(CNT),U)=801.43 D  Q
"RTN","PXRMDBL3",111,0)
 ..S DSET(1,CNT)=$P(INP(CNT),U,2)
"RTN","PXRMDBL3",112,0)
 .;Build FDA array
"RTN","PXRMDBL3",113,0)
 .K FDAIEN,FDA
"RTN","PXRMDBL3",114,0)
 .;If existing element and not in replace mode don't update FDA
"RTN","PXRMDBL3",115,0)
 .I DTYPE="E",'PXRMREPL Q:$$EXISTS($P(INP(CNT),U))
"RTN","PXRMDBL3",116,0)
 .;Name
"RTN","PXRMDBL3",117,0)
 .S FDA(801.41,"?+1,",.01)=$P(INP(CNT),U)
"RTN","PXRMDBL3",118,0)
 .;Dialog type
"RTN","PXRMDBL3",119,0)
 .S FDA(801.41,"?+1,",4)=DTYPE
"RTN","PXRMDBL3",120,0)
 .;Class
"RTN","PXRMDBL3",121,0)
 .S FDA(801.41,"?+1,",100)="L"
"RTN","PXRMDBL3",122,0)
 .;Sponsor
"RTN","PXRMDBL3",123,0)
 .S FDA(801.41,"?+1,",101)=""
"RTN","PXRMDBL3",124,0)
 .;Prompt text/finding entries
"RTN","PXRMDBL3",125,0)
 .I DTYPE="E" D
"RTN","PXRMDBL3",126,0)
 ..S FDA(801.41,"?+1,",13)=$P(INP(CNT),U,2)
"RTN","PXRMDBL3",127,0)
 ..S FDA(801.41,"?+1,",15)=$P(INP(CNT),U,3)
"RTN","PXRMDBL3",128,0)
 ..S FDA(801.41,"?+1,",17)=$P(INP(CNT),U,4)
"RTN","PXRMDBL3",129,0)
 ..S FDA(801.41,"?+1,",25)="WPTXT("_CNT_")"
"RTN","PXRMDBL3",130,0)
 ..;MH fields (exclude from P/N and results pointer)
"RTN","PXRMDBL3",131,0)
 ..S:$P(INP(CNT),U,6) FDA(801.41,"?+1,",54)=$P(INP(CNT),U,6)
"RTN","PXRMDBL3",132,0)
 ..S:$P(INP(CNT),U,7) FDA(801.41,"?+1,",55)=$P(INP(CNT),U,7)
"RTN","PXRMDBL3",133,0)
 .;Reminder dialog associated reminder/DISABLE
"RTN","PXRMDBL3",134,0)
 .I DTYPE="R" D
"RTN","PXRMDBL3",135,0)
 ..S FDA(801.41,"?+1,",2)=REM
"RTN","PXRMDBL3",136,0)
 ..I PXRMENAB'="Y" S FDA(801.41,"?+1,",3)="DISABLED AT AUTO GENERATE"
"RTN","PXRMDBL3",137,0)
 .;Dialog items point to prompts and actions, Sets point to dialog items
"RTN","PXRMDBL3",138,0)
 .N ACNT,SUB
"RTN","PXRMDBL3",139,0)
 .;S ACNT=0,SUB=2
"RTN","PXRMDBL3",140,0)
 .S ACNT=0,SUB=1
"RTN","PXRMDBL3",141,0)
 .F  S ACNT=$O(INP(CNT,ACNT)) Q:ACNT=""  D
"RTN","PXRMDBL3",142,0)
 ..S SUB=SUB+1,FDA(801.412,"?+"_SUB_",?+1,",.01)=ACNT
"RTN","PXRMDBL3",143,0)
 ..S FDA(801.412,"?+"_SUB_",?+1,",2)=$P(INP(CNT,ACNT),U)
"RTN","PXRMDBL3",144,0)
 ..S FDA(801.412,"?+"_SUB_",?+1,",6)=$P(INP(CNT,ACNT),U,2)
"RTN","PXRMDBL3",145,0)
 ..S FDA(801.412,"?+"_SUB_",?+1,",7)=$P(INP(CNT,ACNT),U,3)
"RTN","PXRMDBL3",146,0)
 ..S FDA(801.412,"?+"_SUB_",?+1,",8)=$P(INP(CNT,ACNT),U,4)
"RTN","PXRMDBL3",147,0)
 ..S FDA(801.412,"?+"_SUB_",?+1,",9)=$P(INP(CNT,ACNT),U,5)
"RTN","PXRMDBL3",148,0)
 .;Update #801.41
"RTN","PXRMDBL3",149,0)
 .D UPDATE^DIE("","FDA","FDAIEN","MSG")
"RTN","PXRMDBL3",150,0)
 .I $D(MSG) D ERR($G(INP(CNT))) Q
"RTN","PXRMDBL3",151,0)
 .;Save IEN of dialog created/used for later use in building dialog set 
"RTN","PXRMDBL3",152,0)
 .I DTYPE="E" S DSET(1,CNT*5)=FDAIEN(1)
"RTN","PXRMDBL3",153,0)
 .;Insert link to reminder
"RTN","PXRMDBL3",154,0)
 .I DTYPE="R",PXRMLINK="Y" D
"RTN","PXRMDBL3",155,0)
 ..S $P(^PXD(811.9,REM,51),U)=FDAIEN(1),^PXD(811.9,"AG",FDAIEN(1),REM)=""
"RTN","PXRMDBL3",156,0)
 .;Update Edit History
"RTN","PXRMDBL3",157,0)
 .D HIS(FDAIEN(1))
"RTN","PXRMDBL3",158,0)
 Q
"RTN","PXRMDCPY")
0^40^B30632926
"RTN","PXRMDCPY",1,0)
PXRMDCPY ; SLC/PJH - Copy dialog files. ;05/04/2001
"RTN","PXRMDCPY",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMDCPY",3,0)
 ;
"RTN","PXRMDCPY",4,0)
 ;Called by label from PXRMDEDT
"RTN","PXRMDCPY",5,0)
 ;
"RTN","PXRMDCPY",6,0)
 ;Yes/No prompts
"RTN","PXRMDCPY",7,0)
 ;--------------
"RTN","PXRMDCPY",8,0)
ASK(YESNO,TEXT,HLP) ;
"RTN","PXRMDCPY",9,0)
 N X,Y,DIR
"RTN","PXRMDCPY",10,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDCPY",11,0)
 S DIR(0)="YA0"
"RTN","PXRMDCPY",12,0)
 S DIR("A")=TEXT
"RTN","PXRMDCPY",13,0)
 S DIR("B")="Y"
"RTN","PXRMDCPY",14,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDCPY",15,0)
 S DIR("??")=U_"D HELP^PXRMDEDT(HLP)"
"RTN","PXRMDCPY",16,0)
 D ^DIR K DIR
"RTN","PXRMDCPY",17,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDCPY",18,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDCPY",19,0)
 S YESNO=$E(Y(0))
"RTN","PXRMDCPY",20,0)
 Q
"RTN","PXRMDCPY",21,0)
 ;
"RTN","PXRMDCPY",22,0)
 ;Copy any dialog
"RTN","PXRMDCPY",23,0)
 ;---------------
"RTN","PXRMDCPY",24,0)
ANY W IORESET
"RTN","PXRMDCPY",25,0)
 N DIC,DUOUT,DTOUT,DIROUT,DIRUT,SIEN,IENN,IENO,X,Y
"RTN","PXRMDCPY",26,0)
 N PROMPT,ROOT,WHAT
"RTN","PXRMDCPY",27,0)
 S WHAT="dialog",ROOT="^PXRMD(801.41,",PROMPT="Select the dialog to copy: "
"RTN","PXRMDCPY",28,0)
 ;
"RTN","PXRMDCPY",29,0)
 S DIC=ROOT,DIC(0)="AEQ",DIC("A")=PROMPT
"RTN","PXRMDCPY",30,0)
 S DIC("S")="I $P(^(0),U,4)=PXRMDTYP"
"RTN","PXRMDCPY",31,0)
 W !
"RTN","PXRMDCPY",32,0)
 D ^DIC
"RTN","PXRMDCPY",33,0)
 I $D(DUOUT)!$D(DTOUT) S DIROUT="" Q
"RTN","PXRMDCPY",34,0)
 S IENO=$P(Y,U,1) I IENO=-1 S DIROUT="" Q
"RTN","PXRMDCPY",35,0)
 ;
"RTN","PXRMDCPY",36,0)
 ;Copy the dialog
"RTN","PXRMDCPY",37,0)
 D COPY(IENO,.IENN,0) Q:$D(DUOUT)
"RTN","PXRMDCPY",38,0)
 ;
"RTN","PXRMDCPY",39,0)
 ;Prompts may become forced values
"RTN","PXRMDCPY",40,0)
 I "PF"[$P(@(ROOT_IENN_",0)"),U,4) D
"RTN","PXRMDCPY",41,0)
 .;Get original process ID
"RTN","PXRMDCPY",42,0)
 .N SUB S SUB=$P($G(^PXRMD(801.41,IENO,46)),U)
"RTN","PXRMDCPY",43,0)
 .;Update GUI process in 801.41
"RTN","PXRMDCPY",44,0)
 .I SUB S DR="46///"_SUB,DIE=ROOT,DA=IENN D ^DIE
"RTN","PXRMDCPY",45,0)
 .;check if a prompt
"RTN","PXRMDCPY",46,0)
 .I $P(@(ROOT_IENN_",0)"),U,4)="P" D
"RTN","PXRMDCPY",47,0)
 ..;Allow PXRM prompts to be changed into forced values
"RTN","PXRMDCPY",48,0)
 ..N ANS,TEXT
"RTN","PXRMDCPY",49,0)
 ..S TEXT="Change the new prompt into a forced value :"
"RTN","PXRMDCPY",50,0)
 ..D ASK(.ANS,TEXT,4) Q:$D(DUOUT)!$D(DTOUT)  Q:ANS'="Y"
"RTN","PXRMDCPY",51,0)
 ..;Store the dialog type
"RTN","PXRMDCPY",52,0)
 ..S DR="4///F",DIE=ROOT,DA=IENN
"RTN","PXRMDCPY",53,0)
 ..D ^DIE
"RTN","PXRMDCPY",54,0)
 .Q
"RTN","PXRMDCPY",55,0)
 ;
"RTN","PXRMDCPY",56,0)
 Q
"RTN","PXRMDCPY",57,0)
 ;
"RTN","PXRMDCPY",58,0)
 ;Copy original dialog
"RTN","PXRMDCPY",59,0)
 ;--------------------
"RTN","PXRMDCPY",60,0)
COPY(IENO,IENN,RDIEN) ;
"RTN","PXRMDCPY",61,0)
 D SETSTART^PXRMCOPY(ROOT)
"RTN","PXRMDCPY",62,0)
 S IENN=$$GETFOIEN(ROOT)
"RTN","PXRMDCPY",63,0)
 D MERGE(IENN,IENO,ROOT) Q:$D(DUOUT)
"RTN","PXRMDCPY",64,0)
 ;
"RTN","PXRMDCPY",65,0)
 N DA,DIE,DIK,DIR,DR,NAME,ORGNAME,X
"RTN","PXRMDCPY",66,0)
 S ORGNAME=$P(@(ROOT_IENO_",0)"),U,1),NAME=""
"RTN","PXRMDCPY",67,0)
 ;Get the new name.
"RTN","PXRMDCPY",68,0)
 F  D  Q:$D(DTOUT)!$D(DUOUT)  Q:NAME]""
"RTN","PXRMDCPY",69,0)
 .S DIR(0)="F"_U_"3:63"_U_"K:(X?.N)!'(X'?1P.E) X"
"RTN","PXRMDCPY",70,0)
 .S DIR("A")="ENTER A UNIQUE NAME"
"RTN","PXRMDCPY",71,0)
 .;If  give a default name
"RTN","PXRMDCPY",72,0)
 .S:RDIEN DIR("B")=$$NAME(IENO,ORGNAME)
"RTN","PXRMDCPY",73,0)
 .D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDCPY",74,0)
 .I Y["""" D EN^DDIOL(" name cannot contain quotes!") Q
"RTN","PXRMDCPY",75,0)
 .I $E(Y,1,4)="PXRM" D EN^DDIOL(" name cannot begin with PXRM!") Q
"RTN","PXRMDCPY",76,0)
 .I '$$VNAME^PXRMINTR(Y,801.41) Q
"RTN","PXRMDCPY",77,0)
 .I $$UNIQNAME(Y,ROOT) S NAME=Y Q
"RTN","PXRMDCPY",78,0)
 .D EN^DDIOL(" is not a unique name!")
"RTN","PXRMDCPY",79,0)
 ;
"RTN","PXRMDCPY",80,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDCPY",81,0)
 ;
"RTN","PXRMDCPY",82,0)
 ;Store the unique name
"RTN","PXRMDCPY",83,0)
 S DR=".01///^S X=NAME",DIE=ROOT,DA=IENN
"RTN","PXRMDCPY",84,0)
 D ^DIE
"RTN","PXRMDCPY",85,0)
 ;
"RTN","PXRMDCPY",86,0)
 ;Change the class to local and delete the sponsor
"RTN","PXRMDCPY",87,0)
 D SCAS^PXRMCOPY(801.41,IENN,"L","")
"RTN","PXRMDCPY",88,0)
 ;Initialize the edit history
"RTN","PXRMDCPY",89,0)
 D INIEH^PXRMCOPY(801.41,ROOT,IENN,IENO)
"RTN","PXRMDCPY",90,0)
 ;Reindex the cross-references.
"RTN","PXRMDCPY",91,0)
 S DIK=ROOT,DA=IENN
"RTN","PXRMDCPY",92,0)
 D IX^DIK
"RTN","PXRMDCPY",93,0)
 ;
"RTN","PXRMDCPY",94,0)
 W !!,"Completed copy of '"_ORGNAME_"'"
"RTN","PXRMDCPY",95,0)
 W !,"into '"_NAME_"'",! H 2
"RTN","PXRMDCPY",96,0)
 ;
"RTN","PXRMDCPY",97,0)
 Q
"RTN","PXRMDCPY",98,0)
 ;
"RTN","PXRMDCPY",99,0)
 ;Delete the entry just added
"RTN","PXRMDCPY",100,0)
 ;--------------------------- 
"RTN","PXRMDCPY",101,0)
DELETE S DIK=ROOT,DA=IENN D ^DIK
"RTN","PXRMDCPY",102,0)
 W !!,"New entry not created due to invalid name!",!
"RTN","PXRMDCPY",103,0)
 Q
"RTN","PXRMDCPY",104,0)
 ;
"RTN","PXRMDCPY",105,0)
 ;Error Handler
"RTN","PXRMDCPY",106,0)
 ;-------------
"RTN","PXRMDCPY",107,0)
ERR(DESC) ;
"RTN","PXRMDCPY",108,0)
 N ERROR,IC,REF
"RTN","PXRMDCPY",109,0)
 S ERROR(1)="Unable to update GUI PROCESS file : "_DESC
"RTN","PXRMDCPY",110,0)
 S ERROR(2)="Error in UPDATE^DIE, needs further investigation"
"RTN","PXRMDCPY",111,0)
 ;Move MSG into ERROR
"RTN","PXRMDCPY",112,0)
 S REF="MSG"
"RTN","PXRMDCPY",113,0)
 F IC=3:1 S REF=$Q(@REF) Q:REF=""  S ERROR(IC)=REF_"="_@REF
"RTN","PXRMDCPY",114,0)
 ;Screen message
"RTN","PXRMDCPY",115,0)
 D BMES^XPDUTL(.ERROR)
"RTN","PXRMDCPY",116,0)
 Q
"RTN","PXRMDCPY",117,0)
 ;
"RTN","PXRMDCPY",118,0)
 ;Given ROOT return the first
"RTN","PXRMDCPY",119,0)
 ;---------------------------
"RTN","PXRMDCPY",120,0)
GETFOIEN(ROOT) ;Return the first open IEN in ROOT. This should be called
"RTN","PXRMDCPY",121,0)
 ;after a call to SETSTART.
"RTN","PXRMDCPY",122,0)
 N ENTRY,NIEN,OIEN
"RTN","PXRMDCPY",123,0)
 S ENTRY=ROOT_0_")"
"RTN","PXRMDCPY",124,0)
 S OIEN=$P(@ENTRY,U,3)
"RTN","PXRMDCPY",125,0)
 S ENTRY=ROOT_OIEN_")"
"RTN","PXRMDCPY",126,0)
 F  S NIEN=$O(@ENTRY) Q:+(NIEN-OIEN)>1  Q:+NIEN'>0  S OIEN=NIEN,ENTRY=ROOT_NIEN_")"
"RTN","PXRMDCPY",127,0)
 Q OIEN+1
"RTN","PXRMDCPY",128,0)
 ;
"RTN","PXRMDCPY",129,0)
 ;Use MERGE to copy ROOT(IENO into ROOT(IENN
"RTN","PXRMDCPY",130,0)
 ;------------------------------------------
"RTN","PXRMDCPY",131,0)
MERGE(IENN,IENO,ROOT) ;
"RTN","PXRMDCPY",132,0)
 N DEST,SOURCE
"RTN","PXRMDCPY",133,0)
 ;
"RTN","PXRMDCPY",134,0)
 S DEST=ROOT_IENN_")"
"RTN","PXRMDCPY",135,0)
 ;Lock the file before merging.
"RTN","PXRMDCPY",136,0)
 L +@DEST:10
"RTN","PXRMDCPY",137,0)
 E  W !,"Another user is editing this file, try later" H 2 S DUOUT=1 Q
"RTN","PXRMDCPY",138,0)
 S SOURCE=ROOT_IENO_")"
"RTN","PXRMDCPY",139,0)
 M @DEST=@SOURCE
"RTN","PXRMDCPY",140,0)
 ;Unlock the file
"RTN","PXRMDCPY",141,0)
 L -@DEST
"RTN","PXRMDCPY",142,0)
 Q
"RTN","PXRMDCPY",143,0)
 ;
"RTN","PXRMDCPY",144,0)
 ;Get default name
"RTN","PXRMDCPY",145,0)
 ;----------------
"RTN","PXRMDCPY",146,0)
NAME(IEN,ORG) ;
"RTN","PXRMDCPY",147,0)
 N CNT,NAME,PREV
"RTN","PXRMDCPY",148,0)
 ;
"RTN","PXRMDCPY",149,0)
 S PREV=0
"RTN","PXRMDCPY",150,0)
 I $E(ORG,$L(ORG))=")",ORG[" (" D
"RTN","PXRMDCPY",151,0)
 .S PREV=+$P(ORG," (",2) S:PREV>0 ORG=$P(ORG," (",1)
"RTN","PXRMDCPY",152,0)
 F CNT=PREV+1:1 S NAME=ORG_" ("_CNT_")" Q:'$D(^PXRMD(801.41,"B",NAME))
"RTN","PXRMDCPY",153,0)
 Q NAME
"RTN","PXRMDCPY",154,0)
 ;
"RTN","PXRMDCPY",155,0)
 ;Copy selected dialog element OR reminder dialog
"RTN","PXRMDCPY",156,0)
 ;-----------------------------------------------
"RTN","PXRMDCPY",157,0)
SEL(IENO,RDIEN) ;
"RTN","PXRMDCPY",158,0)
 W IORESET S VALMBCK="R"
"RTN","PXRMDCPY",159,0)
 N ANS,IENN,PROMPT,ROOT,TEXT,WHAT
"RTN","PXRMDCPY",160,0)
 S WHAT="dialog element"
"RTN","PXRMDCPY",161,0)
 S ROOT="^PXRMD(801.41,"
"RTN","PXRMDCPY",162,0)
 S PROMPT="Select the dialog to copy: "
"RTN","PXRMDCPY",163,0)
 S TEXT=$P($G(^PXRMD(801.41,IENO,0)),U)
"RTN","PXRMDCPY",164,0)
 ;
"RTN","PXRMDCPY",165,0)
 I RDIEN S TEXT="COPY AND REPLACE '"_TEXT_"'  "
"RTN","PXRMDCPY",166,0)
 I 'RDIEN S TEXT="COPY REMINDER DIALOG '"_TEXT_"'  "
"RTN","PXRMDCPY",167,0)
 D ASK(.ANS,TEXT,2) Q:$D(DUOUT)!$D(DTOUT)  Q:ANS'="Y"
"RTN","PXRMDCPY",168,0)
 ;Copy
"RTN","PXRMDCPY",169,0)
 D COPY(IENO,.IENN,RDIEN) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMDCPY",170,0)
 ;Replace dialog element in reminder dialog
"RTN","PXRMDCPY",171,0)
 I RDIEN D
"RTN","PXRMDCPY",172,0)
 .N DR,DA,DIE
"RTN","PXRMDCPY",173,0)
 .S DA=$O(^PXRMD(801.41,RDIEN,10,"D",IENO,"")) Q:'DA
"RTN","PXRMDCPY",174,0)
 .S DA(1)=RDIEN
"RTN","PXRMDCPY",175,0)
 .S DR="2///"_IENN
"RTN","PXRMDCPY",176,0)
 .S DIE=ROOT_RDIEN_",10,"
"RTN","PXRMDCPY",177,0)
 .D ^DIE
"RTN","PXRMDCPY",178,0)
 .W !,"Replaced element'"_$P(@(ROOT_IENO_",0)"),U)_"'"
"RTN","PXRMDCPY",179,0)
 .W !,"with '"_$P(@(ROOT_IENN_",0)"),U)_"'"
"RTN","PXRMDCPY",180,0)
 .W !,"on this dialog.",!
"RTN","PXRMDCPY",181,0)
 ;
"RTN","PXRMDCPY",182,0)
 ;Quit screen for edit = yes
"RTN","PXRMDCPY",183,0)
 I 'RDIEN S VALMBCK="Q" Q
"RTN","PXRMDCPY",184,0)
 ;
"RTN","PXRMDCPY",185,0)
 N DIR
"RTN","PXRMDCPY",186,0)
 S DIR(0)="YAO"
"RTN","PXRMDCPY",187,0)
 S DIR("A")="Do you want to edit now  "
"RTN","PXRMDCPY",188,0)
 S DIR("B")="Y"
"RTN","PXRMDCPY",189,0)
 D ^DIR
"RTN","PXRMDCPY",190,0)
 I $D(DIRUT) S DUOUT=1 Q
"RTN","PXRMDCPY",191,0)
 I $E(Y(0))'="Y" S DUOUT=1 Q
"RTN","PXRMDCPY",192,0)
 W !
"RTN","PXRMDCPY",193,0)
 ;Reset dialog element ien
"RTN","PXRMDCPY",194,0)
 S IENO=IENN
"RTN","PXRMDCPY",195,0)
 Q
"RTN","PXRMDCPY",196,0)
 ;
"RTN","PXRMDCPY",197,0)
 ;Return TRUE (1) if NAME is unique 
"RTN","PXRMDCPY",198,0)
 ;---------------------------------
"RTN","PXRMDCPY",199,0)
UNIQNAME(NAME,ROOT) ;
"RTN","PXRMDCPY",200,0)
 N RETVAL,REF
"RTN","PXRMDCPY",201,0)
 S RETVAL=1,REF=ROOT_"""B"""_","_""""_NAME_""""_")"
"RTN","PXRMDCPY",202,0)
 I $D(@REF) S RETVAL=0
"RTN","PXRMDCPY",203,0)
 Q RETVAL
"RTN","PXRMDEDT")
0^39^B74124196
"RTN","PXRMDEDT",1,0)
PXRMDEDT ; SLC/PJH - Edit PXRM reminder dialog. ;05/30/2001
"RTN","PXRMDEDT",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMDEDT",3,0)
 ;
"RTN","PXRMDEDT",4,0)
 ;Used by protocol PXRM SELECTION ADD/PXRM GENERAL ADD
"RTN","PXRMDEDT",5,0)
 ;
"RTN","PXRMDEDT",6,0)
 ;Add Dialog
"RTN","PXRMDEDT",7,0)
 ;----------
"RTN","PXRMDEDT",8,0)
ADD N DA,DIC,Y,DTOUT,DUOUT,DTYP,DLAYGO,HED
"RTN","PXRMDEDT",9,0)
 S HED="ADD DIALOG"
"RTN","PXRMDEDT",10,0)
 W IORESET
"RTN","PXRMDEDT",11,0)
 F  D  Q:$D(DTOUT)
"RTN","PXRMDEDT",12,0)
 .S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",13,0)
 .;Set the starting place for additions.
"RTN","PXRMDEDT",14,0)
 .D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMDEDT",15,0)
 .S DIC(0)="AELMQ",DLAYGO=801.41
"RTN","PXRMDEDT",16,0)
 .S DIC("A")="Select DIALOG to add: "
"RTN","PXRMDEDT",17,0)
 .S DIC("DR")="4///"_$G(PXRMDTYP)
"RTN","PXRMDEDT",18,0)
 .D ^DIC
"RTN","PXRMDEDT",19,0)
 .I $D(DUOUT) S DTOUT=1
"RTN","PXRMDEDT",20,0)
 .I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMDEDT",21,0)
 .I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMDEDT",22,0)
 .I $P(Y,U,3)'=1 W !,"This dialog name already exists" Q
"RTN","PXRMDEDT",23,0)
 .S DA=$P(Y,U,1)
"RTN","PXRMDEDT",24,0)
 .;Determine dialog type
"RTN","PXRMDEDT",25,0)
 .S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",26,0)
 .;Enter dialog type if a new entry
"RTN","PXRMDEDT",27,0)
 .I DTYP="" D  Q:$D(Y)
"RTN","PXRMDEDT",28,0)
 ..N DIE,DR
"RTN","PXRMDEDT",29,0)
 ..S DIE=801.41,DR=4
"RTN","PXRMDEDT",30,0)
 ..D ^DIE
"RTN","PXRMDEDT",31,0)
 .;
"RTN","PXRMDEDT",32,0)
 .;Edit Dialog
"RTN","PXRMDEDT",33,0)
 .D EDIT(DTYP,DA)
"RTN","PXRMDEDT",34,0)
 Q
"RTN","PXRMDEDT",35,0)
 ;
"RTN","PXRMDEDT",36,0)
 ;Delete a line from the reminder dialog
"RTN","PXRMDEDT",37,0)
 ;--------------------------------------
"RTN","PXRMDEDT",38,0)
DEL(DIEN,PXRMDIEN) ;
"RTN","PXRMDEDT",39,0)
 N DA,DIK
"RTN","PXRMDEDT",40,0)
 S DA(1)=PXRMDIEN,DA=$O(^PXRMD(801.41,PXRMDIEN,10,"D",DIEN,"")) Q:'DA
"RTN","PXRMDEDT",41,0)
 S DIK="^PXRMD(801.41,"_DA(1)_",10,"
"RTN","PXRMDEDT",42,0)
 D ^DIK
"RTN","PXRMDEDT",43,0)
 Q
"RTN","PXRMDEDT",44,0)
 ;
"RTN","PXRMDEDT",45,0)
 ;called by protocol PXRM DIALOG EDIT
"RTN","PXRMDEDT",46,0)
 ;-----------------------------------
"RTN","PXRMDEDT",47,0)
EDIT(TYP,DA) ;
"RTN","PXRMDEDT",48,0)
 Q:'$$LOCK(DA)
"RTN","PXRMDEDT",49,0)
 W IORESET
"RTN","PXRMDEDT",50,0)
 N CS1,CS2,DIC,DIDEL,DIE,DR,DTOUT,DUOUT,DINUSE,TYP,ODA,Y
"RTN","PXRMDEDT",51,0)
 ;Save checksum
"RTN","PXRMDEDT",52,0)
 S CS1=$$FILE^PXRMEXCS(801.41,DA)
"RTN","PXRMDEDT",53,0)
 ;Check dialog type
"RTN","PXRMDEDT",54,0)
 S TYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",55,0)
 S DIE="^PXRMD(801.41,",DIDEL=801.41,DINUSE=0,ODA=DA
"RTN","PXRMDEDT",56,0)
 ;Prevent deletion of unused national class
"RTN","PXRMDEDT",57,0)
 I $P($G(^PXRMD(801.41,DA,100)),U)="N" S DINUSE=1
"RTN","PXRMDEDT",58,0)
 ;Reminder Dialog
"RTN","PXRMDEDT",59,0)
 I TYP="R" S DR="[PXRM EDIT REMINDER DIALOG]"
"RTN","PXRMDEDT",60,0)
 ;Dialog Element
"RTN","PXRMDEDT",61,0)
 I TYP="E" S DR="[PXRM EDIT ELEMENT]"
"RTN","PXRMDEDT",62,0)
 ;Additional Prompt
"RTN","PXRMDEDT",63,0)
 I TYP="P" S DR="[PXRM EDIT PROMPT]"
"RTN","PXRMDEDT",64,0)
 ;Forced Value
"RTN","PXRMDEDT",65,0)
 I TYP="F" S DR="[PXRM EDIT FORCED VALUE]"
"RTN","PXRMDEDT",66,0)
 ;Dialog Group (Finding item dialog)
"RTN","PXRMDEDT",67,0)
 I TYP="G" S DR="[PXRM EDIT GROUP]"
"RTN","PXRMDEDT",68,0)
 ;Result Group
"RTN","PXRMDEDT",69,0)
 I TYP="S" S DR="[PXRM RESULT GROUP]"
"RTN","PXRMDEDT",70,0)
 ;Result Element
"RTN","PXRMDEDT",71,0)
 I TYP="T" S DR="[PXRM RESULT ELEMENT]"
"RTN","PXRMDEDT",72,0)
 ;
"RTN","PXRMDEDT",73,0)
 I "GEPF"[TYP D
"RTN","PXRMDEDT",74,0)
 .I '$D(^PXRMD(801.41,"AD",DA)) W !,"Not used by any other dialog",! Q
"RTN","PXRMDEDT",75,0)
 .I PXRMGTYP'="DLG" S DINUSE=1 Q
"RTN","PXRMDEDT",76,0)
 .I PXRMGTYP="DLG" D  Q
"RTN","PXRMDEDT",77,0)
 ..N SUB
"RTN","PXRMDEDT",78,0)
 ..S SUB=0
"RTN","PXRMDEDT",79,0)
 ..F  S SUB=$O(^PXRMD(801.41,"AD",DA,SUB)) Q:'SUB  Q:DINUSE  D
"RTN","PXRMDEDT",80,0)
 ...I SUB'=PXRMDIEN S DINUSE=1
"RTN","PXRMDEDT",81,0)
 I DINUSE D
"RTN","PXRMDEDT",82,0)
 .W !,"CURRENT DIALOG ELEMENT/GROUP NAME: "_$P($G(^PXRMD(801.41,DA,0)),U)
"RTN","PXRMDEDT",83,0)
 .;S DIE("NO^")="OUTOK"
"RTN","PXRMDEDT",84,0)
 .I TYP="S" Q
"RTN","PXRMDEDT",85,0)
 .I PXRMGTYP="DLGE" W !,"Used by:" D USE^PXRMDLST(DA,10,"")
"RTN","PXRMDEDT",86,0)
 .I PXRMGTYP'="DLGE" W !,"Used by:" D USE^PXRMDLST(DA,10,PXRMDIEN)
"RTN","PXRMDEDT",87,0)
 ;
"RTN","PXRMDEDT",88,0)
 ;Edit dialog then unlock
"RTN","PXRMDEDT",89,0)
 D ^DIE,UNLOCK(ODA)
"RTN","PXRMDEDT",90,0)
 ;Deleted ???
"RTN","PXRMDEDT",91,0)
 I '$D(DA) D:$D(PXRMDIEN) PURGE(PXRMDIEN) S VALMBCK="Q" Q
"RTN","PXRMDEDT",92,0)
 ;
"RTN","PXRMDEDT",93,0)
 ;Update edit history
"RTN","PXRMDEDT",94,0)
 I (TYP'="R") D
"RTN","PXRMDEDT",95,0)
 .S CS2=$$FILE^PXRMEXCS(801.41,DA) Q:CS2=CS1  Q:+CS2=0
"RTN","PXRMDEDT",96,0)
 .D SEHIST^PXRMUTIL(801.41,DIC,DA)
"RTN","PXRMDEDT",97,0)
 ;
"RTN","PXRMDEDT",98,0)
 ;Redisplay changes (reminder dialog option only)
"RTN","PXRMDEDT",99,0)
 I PXRMGTYP="DLG",TYP="R" D
"RTN","PXRMDEDT",100,0)
 .;Get name of reminder dialog again
"RTN","PXRMDEDT",101,0)
 .S Y=$P($G(^PXRMD(801.41,DA,0)),U)
"RTN","PXRMDEDT",102,0)
 .;Format headings to include dialog name
"RTN","PXRMDEDT",103,0)
 .S PXRMHD="REMINDER DIALOG NAME: "_$P(Y,U)
"RTN","PXRMDEDT",104,0)
 .;Check if the set is disable and add to header if disabled
"RTN","PXRMDEDT",105,0)
 .I $P(^PXRMD(801.41,DA,0),U,3)]"" S PXRMHD=PXRMHD_" (DISABLED)"
"RTN","PXRMDEDT",106,0)
 .;Reset header in case name has changed
"RTN","PXRMDEDT",107,0)
 .S HEADER=PXRMHD,VALMHDR(1)=HEADER
"RTN","PXRMDEDT",108,0)
 Q
"RTN","PXRMDEDT",109,0)
 ;
"RTN","PXRMDEDT",110,0)
 ;Add SINGLE dialog element (protocol PXRM DIALOG SELECTION ITEM)
"RTN","PXRMDEDT",111,0)
 ;-------------------------
"RTN","PXRMDEDT",112,0)
ESEL(PXRMDIEN,SEL) ;
"RTN","PXRMDEDT",113,0)
 N DA,DIC,DLAYGO,DNEW,DTOUT,DUOUT,DTYP,Y
"RTN","PXRMDEDT",114,0)
 ;
"RTN","PXRMDEDT",115,0)
 S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",116,0)
 S DLAYGO="801.41"
"RTN","PXRMDEDT",117,0)
 ;Set the starting place for additions.
"RTN","PXRMDEDT",118,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMDEDT",119,0)
 S DIC(0)="AEMQL"
"RTN","PXRMDEDT",120,0)
 S DIC("A")="Select new DIALOG ELEMENT: "
"RTN","PXRMDEDT",121,0)
 S DIC("S")="I ""EG""[$P(^PXRMD(801.41,Y,0),U,4)&(Y'=PXRMDIEN)"
"RTN","PXRMDEDT",122,0)
 S DIC("DR")="4///E"
"RTN","PXRMDEDT",123,0)
 W !
"RTN","PXRMDEDT",124,0)
 D ^DIC
"RTN","PXRMDEDT",125,0)
 I $D(DUOUT) S DTOUT=1
"RTN","PXRMDEDT",126,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMDEDT",127,0)
 I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMDEDT",128,0)
 S DA=$P(Y,U,1) Q:'DA
"RTN","PXRMDEDT",129,0)
 S DNEW=$P(Y,U,3)
"RTN","PXRMDEDT",130,0)
 ;Add to dialog
"RTN","PXRMDEDT",131,0)
 D EADD(SEL,DA,PXRMDIEN)
"RTN","PXRMDEDT",132,0)
 ;Determine dialog type
"RTN","PXRMDEDT",133,0)
 S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",134,0)
 ;
"RTN","PXRMDEDT",135,0)
 ;Edit Dialog
"RTN","PXRMDEDT",136,0)
 I DNEW D EDIT(DTYP,DA)
"RTN","PXRMDEDT",137,0)
 Q
"RTN","PXRMDEDT",138,0)
 ;
"RTN","PXRMDEDT",139,0)
 ;Update dialog component multiple
"RTN","PXRMDEDT",140,0)
 ;--------------------------------
"RTN","PXRMDEDT",141,0)
EADD(SEL,NSUB,PXRMDIEN) ;
"RTN","PXRMDEDT",142,0)
 N DA,DATA,NEXT
"RTN","PXRMDEDT",143,0)
 S DATA=$G(^PXRMD(801.41,PXRMDIEN,10,0)),NEXT=$P(DATA,U,3)+1
"RTN","PXRMDEDT",144,0)
 I DATA="" S DATA="^801.412IA"
"RTN","PXRMDEDT",145,0)
 S DA=NSUB,DA(1)=PXRMDIEN
"RTN","PXRMDEDT",146,0)
 S ^PXRMD(801.41,PXRMDIEN,10,NEXT,0)=SEL_U_DA_"^^^^^^^"
"RTN","PXRMDEDT",147,0)
 ;Update next slot
"RTN","PXRMDEDT",148,0)
 S $P(DATA,U,4)=$P(DATA,U,4)+1,$P(DATA,U,3)=NEXT
"RTN","PXRMDEDT",149,0)
 S ^PXRMD(801.41,PXRMDIEN,10,0)=DATA
"RTN","PXRMDEDT",150,0)
 ;Re-index
"RTN","PXRMDEDT",151,0)
 N DIK,DA S DIK="^PXRMD(801.41,",DA=PXRMDIEN
"RTN","PXRMDEDT",152,0)
 D IX^DIK
"RTN","PXRMDEDT",153,0)
 Q
"RTN","PXRMDEDT",154,0)
 ;
"RTN","PXRMDEDT",155,0)
 ;Edit individual element (protocol PXRM DIALOG SELECTION ITEM)
"RTN","PXRMDEDT",156,0)
 ;-----------------------
"RTN","PXRMDEDT",157,0)
IND(DIEN) ;
"RTN","PXRMDEDT",158,0)
 W IORESET
"RTN","PXRMDEDT",159,0)
 N DIC,DIDEL,DR,DTOUT,DUOUT,DINUSE,HED,Y
"RTN","PXRMDEDT",160,0)
 W !,"CURRENT DIALOG ELEMENT NAME: "_$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMDEDT",161,0)
 ;Ask what to do with it
"RTN","PXRMDEDT",162,0)
 N ANS D PROMPT(.ANS) Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDEDT",163,0)
 ;Delete line
"RTN","PXRMDEDT",164,0)
 I ANS="D" D DEL(DIEN,PXRMDIEN) Q
"RTN","PXRMDEDT",165,0)
 ;Copy and Replace option
"RTN","PXRMDEDT",166,0)
 I ANS="C" D SEL^PXRMDCPY(.DIEN,PXRMDIEN) Q:$D(DTOUT)!$D(DUOUT) 
"RTN","PXRMDEDT",167,0)
 ;Determine if a taxonomy dialog
"RTN","PXRMDEDT",168,0)
 N FIND
"RTN","PXRMDEDT",169,0)
 S FIND=$P($G(^PXRMD(801.41,IEN,1)),U,5),VALMBCK="R"
"RTN","PXRMDEDT",170,0)
 ;Edit taxomomy dialog
"RTN","PXRMDEDT",171,0)
 I $P(FIND,";",2)="PXD(811.2," D EDIT^PXRMGEDT("DTAX",$P(FIND,";"),0) Q
"RTN","PXRMDEDT",172,0)
 ;Determine dialog type
"RTN","PXRMDEDT",173,0)
 S DTYP=$P($G(^PXRMD(801.41,DIEN,0)),U,4) Q:DTYP=""
"RTN","PXRMDEDT",174,0)
 ;Option to change an element to a group
"RTN","PXRMDEDT",175,0)
 I DTYP="E" D NTYP(.DTYP) Q:$D(DUOUT)!$D(DTOUT)  D:DTYP="G"
"RTN","PXRMDEDT",176,0)
 .S $P(^PXRMD(801.41,DIEN,0),U,4)=DTYP
"RTN","PXRMDEDT",177,0)
 .W !,"Dialog element changed to a dialog group"
"RTN","PXRMDEDT",178,0)
 ;Edit Element
"RTN","PXRMDEDT",179,0)
 D EDIT(DTYP,DIEN)
"RTN","PXRMDEDT",180,0)
 Q
"RTN","PXRMDEDT",181,0)
 ;
"RTN","PXRMDEDT",182,0)
 ;Change Dialog Element Type
"RTN","PXRMDEDT",183,0)
 ;--------------------------
"RTN","PXRMDEDT",184,0)
NTYP(TYP) ;
"RTN","PXRMDEDT",185,0)
 N X,Y,DIR K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEDT",186,0)
 S DIR(0)="SA"_U_"E:Element;"
"RTN","PXRMDEDT",187,0)
 S DIR(0)=DIR(0)_"G:Group;"
"RTN","PXRMDEDT",188,0)
 S DIR("A")="Dialog Element Type: "
"RTN","PXRMDEDT",189,0)
 S DIR("B")="E"
"RTN","PXRMDEDT",190,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMDEDT",191,0)
 S DIR("??")=U_"D HELP^PXRMDEDT(3)"
"RTN","PXRMDEDT",192,0)
 D ^DIR K DIR
"RTN","PXRMDEDT",193,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEDT",194,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEDT",195,0)
 S TYP=Y
"RTN","PXRMDEDT",196,0)
 Q
"RTN","PXRMDEDT",197,0)
 ;
"RTN","PXRMDEDT",198,0)
 ;Select Dialog Element Action
"RTN","PXRMDEDT",199,0)
 ;----------------------------
"RTN","PXRMDEDT",200,0)
PROMPT(ANS) ;
"RTN","PXRMDEDT",201,0)
 N X,Y,DIR K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEDT",202,0)
 S DIR(0)="S"_U_"E:Edit;"
"RTN","PXRMDEDT",203,0)
 S DIR(0)=DIR(0)_"C:Copy and Replace current element;"
"RTN","PXRMDEDT",204,0)
 S DIR(0)=DIR(0)_"D:Delete element from this dialog;"
"RTN","PXRMDEDT",205,0)
 S DIR("A")="Select Dialog Element Action"
"RTN","PXRMDEDT",206,0)
 S DIR("B")="E"
"RTN","PXRMDEDT",207,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMDEDT",208,0)
 S DIR("??")=U_"D HELP^PXRMDEDT(1)"
"RTN","PXRMDEDT",209,0)
 D ^DIR K DIR
"RTN","PXRMDEDT",210,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEDT",211,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEDT",212,0)
 S ANS=Y
"RTN","PXRMDEDT",213,0)
 Q
"RTN","PXRMDEDT",214,0)
 ;
"RTN","PXRMDEDT",215,0)
 ;Clear pointers from the reminder file and process ID file
"RTN","PXRMDEDT",216,0)
 ;---------------------------------------------------------
"RTN","PXRMDEDT",217,0)
PURGE(DIEN) ;
"RTN","PXRMDEDT",218,0)
 ;Purge pointers to this dialog from reminder file
"RTN","PXRMDEDT",219,0)
 N RIEN
"RTN","PXRMDEDT",220,0)
 S RIEN=0
"RTN","PXRMDEDT",221,0)
 F  S RIEN=$O(^PXD(811.9,"AG",DIEN,RIEN)) Q:'RIEN  D
"RTN","PXRMDEDT",222,0)
 .K ^PXD(811.9,RIEN,51),^PXD(811.9,"AG",DIEN,RIEN)
"RTN","PXRMDEDT",223,0)
 ;
"RTN","PXRMDEDT",224,0)
 Q
"RTN","PXRMDEDT",225,0)
 ;
"RTN","PXRMDEDT",226,0)
 ;General help text routine. Write out the text in the HTEXT array.
"RTN","PXRMDEDT",227,0)
HELP(CALL) ;
"RTN","PXRMDEDT",228,0)
 N HTEXT
"RTN","PXRMDEDT",229,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDEDT",230,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMDEDT",231,0)
 ;
"RTN","PXRMDEDT",232,0)
 I CALL=1 D
"RTN","PXRMDEDT",233,0)
 .S HTEXT(1)="Select E to edit dialog element. If you wish to create"
"RTN","PXRMDEDT",234,0)
 .S HTEXT(2)="a new dialog element just for this reminder dialog select"
"RTN","PXRMDEDT",235,0)
 .S HTEXT(3)="C to copy and replace the current element. Select D to"
"RTN","PXRMDEDT",236,0)
 .S HTEXT(4)="delete the sequence number/element from the dialog."
"RTN","PXRMDEDT",237,0)
 I CALL=2 D
"RTN","PXRMDEDT",238,0)
 .S HTEXT(1)="Enter Y to copy the current dialog element to a new name"
"RTN","PXRMDEDT",239,0)
 .S HTEXT(2)="and then use this new element in the reminder dialog."
"RTN","PXRMDEDT",240,0)
 I CALL=3 D
"RTN","PXRMDEDT",241,0)
 .S HTEXT(1)="Enter G to change the current dialog element into a dialog"
"RTN","PXRMDEDT",242,0)
 .S HTEXT(2)="group so that additional elements can be added. Enter E to"
"RTN","PXRMDEDT",243,0)
 .S HTEXT(3)="leave the type of the dialog element unchanged."
"RTN","PXRMDEDT",244,0)
 I CALL=4 D
"RTN","PXRMDEDT",245,0)
 .S HTEXT(1)="Enter Y to change the dialog prompt created into a forced"
"RTN","PXRMDEDT",246,0)
 .S HTEXT(2)="value. To edit the new forced value switch to the forced"
"RTN","PXRMDEDT",247,0)
 .S HTEXT(3)="value screen using CV. This option only applies to prompts"
"RTN","PXRMDEDT",248,0)
 .S HTEXT(4)="which update PCE or vitals."
"RTN","PXRMDEDT",249,0)
 .S HTEXT(5)="Enter N to leave the dialog prompt unchanged."
"RTN","PXRMDEDT",250,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDT",251,0)
 S IC=""
"RTN","PXRMDEDT",252,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDEDT",253,0)
 . S X=HTEXT(IC)
"RTN","PXRMDEDT",254,0)
 . D ^DIWP
"RTN","PXRMDEDT",255,0)
 W !
"RTN","PXRMDEDT",256,0)
 S IC=0
"RTN","PXRMDEDT",257,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDEDT",258,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDEDT",259,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDT",260,0)
 W !
"RTN","PXRMDEDT",261,0)
 Q
"RTN","PXRMDEDT",262,0)
 ;
"RTN","PXRMDEDT",263,0)
LOCK(DA) ;Lock the record
"RTN","PXRMDEDT",264,0)
 I '$$VEDIT^PXRMUTIL("^PXRMD(801.41,",DA) D  Q 0
"RTN","PXRMDEDT",265,0)
 .W !!,?5,"VA- and national class dialogs may not be edited" H 2
"RTN","PXRMDEDT",266,0)
 ;
"RTN","PXRMDEDT",267,0)
 L +^PXRMD(801.41,DA):0 I  Q 1
"RTN","PXRMDEDT",268,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMDEDT",269,0)
 ;
"RTN","PXRMDEDT",270,0)
 ;
"RTN","PXRMDEDT",271,0)
UNLOCK(DA) ;Unlock the record
"RTN","PXRMDEDT",272,0)
 L -^PXRMD(801.41,DA)
"RTN","PXRMDEDT",273,0)
 Q
"RTN","PXRMDGEN")
0^59^B12325726
"RTN","PXRMDGEN",1,0)
PXRMDGEN ; SLC/PKR - Handle VA GENERIC drug findings. ;06/07/2001
"RTN","PXRMDGEN",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMDGEN",3,0)
 ;
"RTN","PXRMDGEN",4,0)
 ;=======================================================================
"RTN","PXRMDGEN",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate VA GENERIC (file #50.6) findings.
"RTN","PXRMDGEN",6,0)
 N FIND0,FINDING,VAGIEN
"RTN","PXRMDGEN",7,0)
 S VAGIEN=""
"RTN","PXRMDGEN",8,0)
 F  S VAGIEN=$O(^PXD(811.9,PXRMITEM,20,"E","PSNDF(50.6,",VAGIEN)) Q:+VAGIEN=0  D
"RTN","PXRMDGEN",9,0)
 . S FINDING=""
"RTN","PXRMDGEN",10,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","PSNDF(50.6,",VAGIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMDGEN",11,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDGEN",12,0)
 .. D FIEVAL(DFN,VAGIEN,FIND0,"",FINDING,.FIEVAL)
"RTN","PXRMDGEN",13,0)
 Q
"RTN","PXRMDGEN",14,0)
 ;
"RTN","PXRMDGEN",15,0)
 ;=======================================================================
"RTN","PXRMDGEN",16,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate VA GENERIC (file #50.6) terms.
"RTN","PXRMDGEN",17,0)
 N FIND0,TFIND0,TFINDING,VAGIEN
"RTN","PXRMDGEN",18,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDGEN",19,0)
 S VAGIEN=""
"RTN","PXRMDGEN",20,0)
 F  S VAGIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","PSNDF(50.6,",VAGIEN)) Q:+VAGIEN=0  D
"RTN","PXRMDGEN",21,0)
 . S TFINDING=""
"RTN","PXRMDGEN",22,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","PSNDF(50.6,",VAGIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMDGEN",23,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMDGEN",24,0)
 .. D FIEVAL(DFN,VAGIEN,FIND0,TFIND0,TFINDING,.TFIEVAL)
"RTN","PXRMDGEN",25,0)
 Q
"RTN","PXRMDGEN",26,0)
 ;
"RTN","PXRMDGEN",27,0)
 ;=======================================================================
"RTN","PXRMDGEN",28,0)
FIEVAL(DFN,VAGIEN,FIND0,TFIND0,FINDING,FIEVAL) ;
"RTN","PXRMDGEN",29,0)
 N DRUG,DRUGIEN,DSUP,LDATE,RDATE,RXTYPE,SDATE,STATUS,VAGEN,VALID
"RTN","PXRMDGEN",30,0)
 S RXTYPE=$P(TFIND0,U,13)
"RTN","PXRMDGEN",31,0)
 I RXTYPE="" S RXTYPE=$P(FIND0,U,13)
"RTN","PXRMDGEN",32,0)
 I RXTYPE="B" S RXTYPE=""
"RTN","PXRMDGEN",33,0)
 S VAGEN=$$VAGN^PSNAPIS(VAGIEN)
"RTN","PXRMDGEN",34,0)
 ;Use the "AND" cross-reference on file 50 to find all drugs in this
"RTN","PXRMDGEN",35,0)
 ;generic group.
"RTN","PXRMDGEN",36,0)
 S DATE=0
"RTN","PXRMDGEN",37,0)
 S DRUGIEN=0
"RTN","PXRMDGEN",38,0)
 F  S DRUGIEN=$O(^PSDRUG("AND",VAGIEN,DRUGIEN)) Q:+DRUGIEN=0  D
"RTN","PXRMDGEN",39,0)
 . S DRUG=$$GET1^DIQ(50,DRUGIEN,.01)
"RTN","PXRMDGEN",40,0)
 . D LDATE^PXRMDRUG(DFN,DRUG,RXTYPE,.DSUP,.LDATE,.RDATE,.SDATE,.STATUS)
"RTN","PXRMDGEN",41,0)
 . I LDATE>DATE D
"RTN","PXRMDGEN",42,0)
 .. S DATE=LDATE
"RTN","PXRMDGEN",43,0)
 .. S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMDGEN",44,0)
 .. S FIEVAL(FINDING,"DRUG")=DRUG
"RTN","PXRMDGEN",45,0)
 .. I DSUP>0 S FIEVAL(FINDING,"DSUP")=DSUP
"RTN","PXRMDGEN",46,0)
 .. I RDATE>0 S FIEVAL(FINDING,"RDATE")=RDATE
"RTN","PXRMDGEN",47,0)
 .. I SDATE>0 S FIEVAL(FINDING,"SDATE")=SDATE
"RTN","PXRMDGEN",48,0)
 .. S FIEVAL(FINDING,"STATUS")=STATUS
"RTN","PXRMDGEN",49,0)
 ;If the last date is 0 then there is no release date and the finding
"RTN","PXRMDGEN",50,0)
 ;is false.
"RTN","PXRMDGEN",51,0)
 I +DATE=0 D  Q
"RTN","PXRMDGEN",52,0)
 . K FIEVAL(FINDING)
"RTN","PXRMDGEN",53,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMDGEN",54,0)
 ;Save the rest of the finding information.
"RTN","PXRMDGEN",55,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMDGEN",56,0)
 S FIEVAL(FINDING,"GENERIC")=VAGEN
"RTN","PXRMDGEN",57,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMDGEN",58,0)
 S FIEVAL(FINDING,"FINDING")=VAGIEN_";PSNDF(50.6,"
"RTN","PXRMDGEN",59,0)
 ;Determine if the finding has expired.
"RTN","PXRMDGEN",60,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMDGEN",61,0)
 I 'VALID D
"RTN","PXRMDGEN",62,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMDGEN",63,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMDGEN",64,0)
 Q
"RTN","PXRMDGEN",65,0)
 ;
"RTN","PXRMDGEN",66,0)
 ;=======================================================================
"RTN","PXRMDGEN",67,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMDGEN",68,0)
 ;maintenance output.
"RTN","PXRMDGEN",69,0)
 N DATE,DRUG,TEMP,VAGEN
"RTN","PXRMDGEN",70,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMDGEN",71,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMDGEN",72,0)
 S TEMP=TEMP_" VA GENERIC Drug: "
"RTN","PXRMDGEN",73,0)
 S VAGEN=FIEVAL(FINDING,"GENERIC")
"RTN","PXRMDGEN",74,0)
 S TEMP=TEMP_VAGEN
"RTN","PXRMDGEN",75,0)
 S DRUG=FIEVAL(FINDING,"DRUG")
"RTN","PXRMDGEN",76,0)
 S TEMP=TEMP_" (Drug: "_DRUG_")"
"RTN","PXRMDGEN",77,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMDGEN",78,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMDGEN",79,0)
 S NLINES=NLINES+1
"RTN","PXRMDGEN",80,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDGEN",81,0)
 S TEMP="Status: "_FIEVAL(FINDING,"STATUS")
"RTN","PXRMDGEN",82,0)
 I $D(FIEVAL(FINDING,"RDATE")) S TEMP=TEMP_" Last release date:"_$$EDATE^PXRMDATE(FIEVAL(FINDING,"RDATE"))
"RTN","PXRMDGEN",83,0)
 I $D(FIEVAL(FINDING,"DSUP")) S TEMP=TEMP_" Days supply:"_FIEVAL(FINDING,"DSUP")
"RTN","PXRMDGEN",84,0)
 I $D(FIEVAL(FINDING,"SDATE")) S TEMP=TEMP_" Stop date:"_$$EDATE^PXRMDATE(FIEVAL(FINDING,"SDATE"))
"RTN","PXRMDGEN",85,0)
 S NLINES=NLINES+1
"RTN","PXRMDGEN",86,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDGEN",87,0)
 I $D(PXRMDEV) D
"RTN","PXRMDGEN",88,0)
 . N UID
"RTN","PXRMDGEN",89,0)
 . S UID="VA GENERIC DRUG "_VAGEN
"RTN","PXRMDGEN",90,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMDGEN",91,0)
 Q
"RTN","PXRMDGEN",92,0)
 ;
"RTN","PXRMDLG1")
0^51^B73326910
"RTN","PXRMDLG1",1,0)
PXRMDLG1 ; SLC/PJH - Reminder Dialog Edit/Inquiry (overflow) ;05/29/2001
"RTN","PXRMDLG1",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMDLG1",3,0)
 ;
"RTN","PXRMDLG1",4,0)
 ;Get selectable codes for a taxonomy
"RTN","PXRMDLG1",5,0)
 ;-----------------------------------
"RTN","PXRMDLG1",6,0)
CODES(FILE,TIEN) ;
"RTN","PXRMDLG1",7,0)
 N CODES,CODE,DESC,DTEXT,SUB,TAB,TEXT
"RTN","PXRMDLG1",8,0)
 ;Display text
"RTN","PXRMDLG1",9,0)
 S TEXT="Selectable codes: ",TAB=18
"RTN","PXRMDLG1",10,0)
 ;Get array
"RTN","PXRMDLG1",11,0)
 D CODES^PXRMDLLA(FILE,TIEN,.CODES)
"RTN","PXRMDLG1",12,0)
 ;Move results into workfile
"RTN","PXRMDLG1",13,0)
 S SUB=""
"RTN","PXRMDLG1",14,0)
 F  S SUB=$O(CODES(SUB)) Q:SUB=""  D
"RTN","PXRMDLG1",15,0)
 .S CODE=$P(CODES(SUB),U,2),DESC=$P(CODES(SUB),U,3)
"RTN","PXRMDLG1",16,0)
 .S DTEXT=CODE_$J("",7-$L(CODE))_DESC
"RTN","PXRMDLG1",17,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",18,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_$G(TEXT)_DTEXT
"RTN","PXRMDLG1",19,0)
 .S TEXT=$J("",TAB)
"RTN","PXRMDLG1",20,0)
 Q
"RTN","PXRMDLG1",21,0)
 ;
"RTN","PXRMDLG1",22,0)
 ;Either dialog text or P/N text
"RTN","PXRMDLG1",23,0)
 ;------------------------------
"RTN","PXRMDLG1",24,0)
TSUB(IEN,VIEW) ;
"RTN","PXRMDLG1",25,0)
 ;Dialog View uses Dialog text
"RTN","PXRMDLG1",26,0)
 I VIEW=1 Q 25
"RTN","PXRMDLG1",27,0)
 ;P/N View uses P/N TEXT if defined
"RTN","PXRMDLG1",28,0)
 I $D(^PXRMD(801.41,IEN,35)) Q 35
"RTN","PXRMDLG1",29,0)
 ;Otherwise Dialog Text
"RTN","PXRMDLG1",30,0)
 Q 25
"RTN","PXRMDLG1",31,0)
 ;
"RTN","PXRMDLG1",32,0)
 ;Progress note text (DP)
"RTN","PXRMDLG1",33,0)
 ;-----------------------
"RTN","PXRMDLG1",34,0)
VIEW(IEN,VIEW) ;
"RTN","PXRMDLG1",35,0)
 N DCAP,TSUB
"RTN","PXRMDLG1",36,0)
 ;Dialog Group process
"RTN","PXRMDLG1",37,0)
 I DGRP D  Q
"RTN","PXRMDLG1",38,0)
 .N DATA,DGBEG,DGIEN,DGSEQ,DGSUB
"RTN","PXRMDLG1",39,0)
 .;Update index
"RTN","PXRMDLG1",40,0)
 .S ^TMP("PXRMDLG",$J,"IDX",SEQ,IEN)=""
"RTN","PXRMDLG1",41,0)
 .;Get GROUP text
"RTN","PXRMDLG1",42,0)
 .S DGSUB=0,DGBEG=$J(SEQ,3),TSUB=$$TSUB(IEN,VIEW)
"RTN","PXRMDLG1",43,0)
 .F  S DGSUB=$O(^PXRMD(801.41,IEN,TSUB,DGSUB)) Q:'DGSUB  D
"RTN","PXRMDLG1",44,0)
 ..S DTXT=$G(^PXRMD(801.41,IEN,TSUB,DGSUB,0))
"RTN","PXRMDLG1",45,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",46,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=DGBEG_$J("",12)_DTXT,DGBEG=$J("",3)
"RTN","PXRMDLG1",47,0)
 .;Get additional prompts
"RTN","PXRMDLG1",48,0)
 .D PROMPT(IEN,0,"","")
"RTN","PXRMDLG1",49,0)
 .;Group caption text
"RTN","PXRMDLG1",50,0)
 .S DTXT=$P($G(^PXRMD(801.41,IEN,0)),U,5),DCAP=" [group caption]"
"RTN","PXRMDLG1",51,0)
 .I DTXT="" S DCAP="[no caption for this group]"
"RTN","PXRMDLG1",52,0)
 .;Text of caption
"RTN","PXRMDLG1",53,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",54,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=DGBEG_$J("",12)_DTXT_DCAP,DGBEG=$J("",3)
"RTN","PXRMDLG1",55,0)
 .;Get dialog group sub-elements
"RTN","PXRMDLG1",56,0)
 .S SUB=0
"RTN","PXRMDLG1",57,0)
 .F  S SUB=$O(^PXRMD(801.41,IEN,10,SUB)) Q:'SUB  D
"RTN","PXRMDLG1",58,0)
 ..S DGIEN=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,2) Q:'DGIEN
"RTN","PXRMDLG1",59,0)
 ..;Ignore forced values and prompts
"RTN","PXRMDLG1",60,0)
 ..Q:"PF"[$P($G(^PXRMD(801.41,DGIEN,0)),U,4)
"RTN","PXRMDLG1",61,0)
 ..S DGSEQ=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U)
"RTN","PXRMDLG1",62,0)
 ..S DGBEG=$J(SEQ,3)_"."_DGSEQ
"RTN","PXRMDLG1",63,0)
 ..;Get Resolution/Finding details
"RTN","PXRMDLG1",64,0)
 ..S FIEN=$P($G(^PXRMD(801.41,DGIEN,1)),U,5)
"RTN","PXRMDLG1",65,0)
 ..;If taxonomy generate 
"RTN","PXRMDLG1",66,0)
 ..I $P(FIEN,";",2)="PXD(811.2," D TAX(FIEN,DGBEG,DGIEN) Q
"RTN","PXRMDLG1",67,0)
 ..;Otherwise get text from dialog element
"RTN","PXRMDLG1",68,0)
 ..S DGSUB=0,TSUB=$$TSUB(DGIEN,VIEW)
"RTN","PXRMDLG1",69,0)
 ..F  S DGSUB=$O(^PXRMD(801.41,DGIEN,TSUB,DGSUB)) Q:'DGSUB  D
"RTN","PXRMDLG1",70,0)
 ...S DTXT=$G(^PXRMD(801.41,DGIEN,TSUB,DGSUB,0))
"RTN","PXRMDLG1",71,0)
 ...S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",72,0)
 ...S ^TMP("PXRMDLG",$J,VALMCNT,0)=DGBEG_$J("",10)_DTXT,DGBEG=$J("",5)
"RTN","PXRMDLG1",73,0)
 ...;Get additional prompts
"RTN","PXRMDLG1",74,0)
 ..D PROMPT(DGIEN,0,"","")
"RTN","PXRMDLG1",75,0)
 ..;Final linefeed
"RTN","PXRMDLG1",76,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",77,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",78,0)
 ;
"RTN","PXRMDLG1",79,0)
 N TAX,SUB
"RTN","PXRMDLG1",80,0)
 ;Get Resolution/Finding details
"RTN","PXRMDLG1",81,0)
 S DATA=$G(^PXRMD(801.41,IEN,1)),FIEN=$P(DATA,U,5),TAX=0
"RTN","PXRMDLG1",82,0)
 ;Mental Health
"RTN","PXRMDLG1",83,0)
 I $P(FIEN,";",2)="YTT(601," D MENTAL(FIEN) Q
"RTN","PXRMDLG1",84,0)
 ;Check if taxonomy
"RTN","PXRMDLG1",85,0)
 I $P(FIEN,";",2)="PXD(811.2," S TAX=1
"RTN","PXRMDLG1",86,0)
 ;If a taxonomy use the dialog text from taxonomy file
"RTN","PXRMDLG1",87,0)
 I TAX D TAX(FIEN,SEQ,IEN) Q
"RTN","PXRMDLG1",88,0)
 ;If not a taxonomy use dialog file
"RTN","PXRMDLG1",89,0)
 I 'TAX D  Q
"RTN","PXRMDLG1",90,0)
 .S TSUB=$$TSUB(IEN,VIEW)
"RTN","PXRMDLG1",91,0)
 .S DTXT=$G(^PXRMD(801.41,IEN,TSUB,1,0))
"RTN","PXRMDLG1",92,0)
 .;Text of the first prompt
"RTN","PXRMDLG1",93,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",94,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J(SEQ,3)_$J("",12)_DTXT
"RTN","PXRMDLG1",95,0)
 .S ^TMP("PXRMDLG",$J,"IDX",SEQ,IEN)=""
"RTN","PXRMDLG1",96,0)
 .;Text or subsequent lines
"RTN","PXRMDLG1",97,0)
 .S SUB=1
"RTN","PXRMDLG1",98,0)
 .F  S SUB=$O(^PXRMD(801.41,IEN,TSUB,SUB)) Q:'SUB  D
"RTN","PXRMDLG1",99,0)
 ..S DTXT=$G(^PXRMD(801.41,IEN,TSUB,SUB,0))
"RTN","PXRMDLG1",100,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",101,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_DTXT
"RTN","PXRMDLG1",102,0)
 .;Get additional prompts
"RTN","PXRMDLG1",103,0)
 .D PROMPT(IEN,0,"","")
"RTN","PXRMDLG1",104,0)
 ;
"RTN","PXRMDLG1",105,0)
 Q
"RTN","PXRMDLG1",106,0)
 ;
"RTN","PXRMDLG1",107,0)
 ;additional prompts in 801.45
"RTN","PXRMDLG1",108,0)
 ;----------------------------
"RTN","PXRMDLG1",109,0)
FPROMPT(FNODE,RSUB,CNT,ARRAY) ;
"RTN","PXRMDLG1",110,0)
 ;Get all additional fields for this resolution type
"RTN","PXRMDLG1",111,0)
 S ASUB=0,ACNT=0
"RTN","PXRMDLG1",112,0)
 F  S ASUB=$O(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB)) Q:'ASUB  D
"RTN","PXRMDLG1",113,0)
 .S DNODE=$G(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB,0)) Q:DNODE=""
"RTN","PXRMDLG1",114,0)
 .;Ignore if disabled
"RTN","PXRMDLG1",115,0)
 .I $P(DNODE,U,3)=1 Q
"RTN","PXRMDLG1",116,0)
 .S DNODE=$P(DNODE,U) Q:DNODE=""
"RTN","PXRMDLG1",117,0)
 .S ATXT=$P($G(^PXRMD(801.41,DNODE,0)),U) Q:ATXT=""
"RTN","PXRMDLG1",118,0)
 .;S ATXT=$TR(ATXT,UPPER,LOWER)
"RTN","PXRMDLG1",119,0)
 .S ACNT=ACNT+1
"RTN","PXRMDLG1",120,0)
 .S ARRAY(CNT,ACNT)=DNODE
"RTN","PXRMDLG1",121,0)
 Q
"RTN","PXRMDLG1",122,0)
 ;
"RTN","PXRMDLG1",123,0)
 ;Group text and caption
"RTN","PXRMDLG1",124,0)
 ;----------------------
"RTN","PXRMDLG1",125,0)
GROUP(IEN,VIEW) ;
"RTN","PXRMDLG1",126,0)
 N DDATA,DGIEN,DGSUB,DTXT
"RTN","PXRMDLG1",127,0)
 ;Get GROUP text
"RTN","PXRMDLG1",128,0)
 S DGSUB=0,TSUB=$$TSUB(IEN,VIEW)
"RTN","PXRMDLG1",129,0)
 F  S DGSUB=$O(^PXRMD(801.41,IEN,TSUB,DGSUB)) Q:'DGSUB  D
"RTN","PXRMDLG1",130,0)
 .S DTXT=$G(^PXRMD(801.41,IEN,TSUB,DGSUB,0))
"RTN","PXRMDLG1",131,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",132,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",12)_DTXT
"RTN","PXRMDLG1",133,0)
 ;Group caption text
"RTN","PXRMDLG1",134,0)
 S DDATA=$G(^PXRMD(801.41,IEN,0))
"RTN","PXRMDLG1",135,0)
 S DTXT=$P(DDATA,U,5),DCAP=" [group caption]"
"RTN","PXRMDLG1",136,0)
 I DTXT="" S DCAP="[no caption for this group]"
"RTN","PXRMDLG1",137,0)
 ;Text of caption
"RTN","PXRMDLG1",138,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",139,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",12)_DTXT_DCAP
"RTN","PXRMDLG1",140,0)
 ;Get additional group prompts
"RTN","PXRMDLG1",141,0)
 D PROMPT(IEN,0,"","")
"RTN","PXRMDLG1",142,0)
 ;Other group fields
"RTN","PXRMDLG1",143,0)
 N DBOX,DSUPP,DSHOW,DMULT
"RTN","PXRMDLG1",144,0)
 S DBOX=$S($P(DDATA,U,6)="Y":"BOX",1:"NO BOX")
"RTN","PXRMDLG1",145,0)
 S DSUPP=$S($P(DDATA,U,11):"SUPPRESS",1:"NO SUPPRESS")
"RTN","PXRMDLG1",146,0)
 S DSHOW=$S($P(DDATA,U,10):"HIDE",1:"SHOW")
"RTN","PXRMDLG1",147,0)
 S DMULT=$P(DDATA,U,9)
"RTN","PXRMDLG1",148,0)
 S DMULT=$S(DMULT=1:"ONE ONLY",DMULT=2:"ONE OR MORE",DMULT=3:"NONE OR ONE",1:"NO SELECTION")
"RTN","PXRMDLG1",149,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",150,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",12)_"["_DBOX_", "_DSUPP_", "_DSHOW_", "_DMULT_"]"
"RTN","PXRMDLG1",151,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",152,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",153,0)
 Q
"RTN","PXRMDLG1",154,0)
 ;
"RTN","PXRMDLG1",155,0)
 ;Mental Healt Instrument
"RTN","PXRMDLG1",156,0)
 ;-----------------------
"RTN","PXRMDLG1",157,0)
MENTAL(RESN) ;
"RTN","PXRMDLG1",158,0)
 N ARRAY,CNT,SUB,TXT,TYP,YT,YIEN,YNAM,YSEQ
"RTN","PXRMDLG1",159,0)
 S YIEN=$P(RESN,";") Q:'YIEN
"RTN","PXRMDLG1",160,0)
 S YNAM=$P($G(^YTT(601,YIEN,0)),U) Q:YNAM=""
"RTN","PXRMDLG1",161,0)
 S YT("CODE")=YNAM
"RTN","PXRMDLG1",162,0)
 ;Get test details
"RTN","PXRMDLG1",163,0)
 D SHOWALL^YTAPI3(.ARRAY,.YT)
"RTN","PXRMDLG1",164,0)
 ;Quit if invalid test
"RTN","PXRMDLG1",165,0)
 I ARRAY(1)["[ERROR]" Q
"RTN","PXRMDLG1",166,0)
 ;Get Name
"RTN","PXRMDLG1",167,0)
 S TXT=$G(ARRAY(2)),TXT=$P(TXT,U)_" : "_$P(TXT,U,2)
"RTN","PXRMDLG1",168,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",169,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J(SEQ,3)_$J("",12)_TXT
"RTN","PXRMDLG1",170,0)
 S ^TMP("PXRMDLG",$J,"IDX",SEQ,IEN)=""
"RTN","PXRMDLG1",171,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",172,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",173,0)
 ;Get caption
"RTN","PXRMDLG1",174,0)
 S SUB=0
"RTN","PXRMDLG1",175,0)
 F  S SUB=$O(ARRAY(1,"I",SUB)) Q:'SUB  D
"RTN","PXRMDLG1",176,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",177,0)
 .S TXT=$J("",15)_ARRAY(1,"I",SUB)
"RTN","PXRMDLG1",178,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=TXT
"RTN","PXRMDLG1",179,0)
 ;
"RTN","PXRMDLG1",180,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",181,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",182,0)
 S CNT=0
"RTN","PXRMDLG1",183,0)
 F  S CNT=$O(ARRAY(CNT)) Q:CNT=""  D
"RTN","PXRMDLG1",184,0)
 .S YSEQ=$J(SEQ,3)_"."_CNT,SUB=0
"RTN","PXRMDLG1",185,0)
 .;Get question
"RTN","PXRMDLG1",186,0)
 .F  S SUB=$O(ARRAY(CNT,"T",SUB)) Q:'SUB  D
"RTN","PXRMDLG1",187,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",188,0)
 ..S TXT=YSEQ_$J("",15-$L(YSEQ))_ARRAY(CNT,"T",SUB),YSEQ=""
"RTN","PXRMDLG1",189,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=TXT
"RTN","PXRMDLG1",190,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",191,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",192,0)
 Q
"RTN","PXRMDLG1",193,0)
 ;
"RTN","PXRMDLG1",194,0)
 ;additional prompts in the dialog file
"RTN","PXRMDLG1",195,0)
 ;-------------------------------------
"RTN","PXRMDLG1",196,0)
PROMPT(IEN,TAB,TEXT,DGRP) ;
"RTN","PXRMDLG1",197,0)
 N DATA,DDIS,DGSEQ,DSUB,DTITLE,DTXT,DTYP,SEQ,SUB
"RTN","PXRMDLG1",198,0)
 S SEQ=0
"RTN","PXRMDLG1",199,0)
 F  S SEQ=$O(^PXRMD(801.41,IEN,10,"B",SEQ)) Q:'SEQ  D
"RTN","PXRMDLG1",200,0)
 .S SUB=$O(^PXRMD(801.41,IEN,10,"B",SEQ,"")) Q:'SUB
"RTN","PXRMDLG1",201,0)
 .S DSUB=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,2) Q:'DSUB
"RTN","PXRMDLG1",202,0)
 .S DATA=$G(^PXRMD(801.41,DSUB,0)) Q:DATA=""
"RTN","PXRMDLG1",203,0)
 .S DNAME=$P(DATA,U),DDIS=$P(DATA,U,3),DTYP=$P(DATA,U,4)
"RTN","PXRMDLG1",204,0)
 .I VIEW,('DGRP),(DTYP'="P") Q
"RTN","PXRMDLG1",205,0)
 .I ('VIEW),('DGRP),("FP"'[DTYP) Q
"RTN","PXRMDLG1",206,0)
 .S:VIEW DDIS=""
"RTN","PXRMDLG1",207,0)
 .I DTYP="F" S DNAME=DNAME_" (forced value)"
"RTN","PXRMDLG1",208,0)
 .I DGRP D
"RTN","PXRMDLG1",209,0)
 ..S DGSEQ=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U)
"RTN","PXRMDLG1",210,0)
 ..S DNAME=DGSEQ_$J("",3-$L(DGSEQ))_DNAME
"RTN","PXRMDLG1",211,0)
 .I TAB=0,DTYP="P" D
"RTN","PXRMDLG1",212,0)
 ..;Override prompt caption
"RTN","PXRMDLG1",213,0)
 ..S DTITLE=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,6)
"RTN","PXRMDLG1",214,0)
 ..I DTITLE="" S DTITLE=$P($G(^PXRMD(801.41,DSUB,2)),U,4)
"RTN","PXRMDLG1",215,0)
 ..S DNAME=$J("",3)_DTITLE
"RTN","PXRMDLG1",216,0)
 .I TAB=0,DTYP="F" S DNAME=$J("",3)_DNAME
"RTN","PXRMDLG1",217,0)
 .S DNAME=$J("",15)_$G(TEXT)_DNAME
"RTN","PXRMDLG1",218,0)
 .S:DDIS]"" DNAME=DNAME_$J("",72-$L(DNAME))_DDIS
"RTN","PXRMDLG1",219,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",220,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=DNAME
"RTN","PXRMDLG1",221,0)
 .S TEXT=$J("",TAB)
"RTN","PXRMDLG1",222,0)
 Q
"RTN","PXRMDLG1",223,0)
 ;
"RTN","PXRMDLG1",224,0)
 ;
"RTN","PXRMDLG1",225,0)
 ;Taxonomy Questions
"RTN","PXRMDLG1",226,0)
 ;------------------
"RTN","PXRMDLG1",227,0)
TAX(FIEN,SEQ,DIEN) ;
"RTN","PXRMDLG1",228,0)
 N ARRAY,CNT,TIEN,TSEQ
"RTN","PXRMDLG1",229,0)
 S TIEN=$P(FIEN,";") Q:TIEN=""
"RTN","PXRMDLG1",230,0)
 ;Get associated codes
"RTN","PXRMDLG1",231,0)
 D TAX^PXRMDLL(TIEN,.ARRAY)
"RTN","PXRMDLG1",232,0)
 ;Taxonomy header
"RTN","PXRMDLG1",233,0)
 S TSEQ=SEQ I $L(SEQ)<3 S TSEQ=$J(SEQ,3)_"  "
"RTN","PXRMDLG1",234,0)
 S CNT=0,VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",235,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=TSEQ_$J("",15-$L(TSEQ))_ARRAY
"RTN","PXRMDLG1",236,0)
 S ^TMP("PXRMDLG",$J,"IDX",SEQ,DIEN)=""
"RTN","PXRMDLG1",237,0)
 ;Dialog and Procedure entries
"RTN","PXRMDLG1",238,0)
 F  S CNT=$O(ARRAY(CNT)) Q:CNT=""  D
"RTN","PXRMDLG1",239,0)
 .S TSEQ=$J(SEQ,3)_"."_CNT
"RTN","PXRMDLG1",240,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",241,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=TSEQ_$J("",15-$L(TSEQ))_$P(ARRAY(CNT),U)
"RTN","PXRMDLG1",242,0)
 .D CODES($P(ARRAY(CNT),U,2),TIEN)
"RTN","PXRMDLG1",243,0)
 .;Get additional prompts (from finding parameter file)
"RTN","PXRMDLG1",244,0)
 .D TPROMPT(ARRAY(CNT),0,"")
"RTN","PXRMDLG1",245,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",246,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",247,0)
 Q
"RTN","PXRMDLG1",248,0)
 ;
"RTN","PXRMDLG1",249,0)
 ;additional prompts for a taxonomy
"RTN","PXRMDLG1",250,0)
 ;---------------------------------
"RTN","PXRMDLG1",251,0)
TPROMPT(DATA,TAB,TEXT) ;
"RTN","PXRMDLG1",252,0)
 N FNODE,FTYP,RSUB,SEQ,DSUB,DTXT,DTYP
"RTN","PXRMDLG1",253,0)
 ;Finding type
"RTN","PXRMDLG1",254,0)
 S FTYP=$P(DATA,U,4) Q:FTYP=""
"RTN","PXRMDLG1",255,0)
 ;Get parameter file node for this finding type
"RTN","PXRMDLG1",256,0)
 S FNODE=$O(^PXRMD(801.45,"B",FTYP,"")) Q:FNODE=""
"RTN","PXRMDLG1",257,0)
 ;Resolution type
"RTN","PXRMDLG1",258,0)
 S RSUB=$P(DATA,U,3) Q:'RSUB
"RTN","PXRMDLG1",259,0)
 ;Get details from  parameter file 
"RTN","PXRMDLG1",260,0)
 D FPROMPT(FNODE,RSUB,CNT,.ARRAY)
"RTN","PXRMDLG1",261,0)
 S SEQ=0
"RTN","PXRMDLG1",262,0)
 F  S SEQ=$O(ARRAY(CNT,SEQ)) Q:'SEQ  D
"RTN","PXRMDLG1",263,0)
 .S DSUB=ARRAY(CNT,SEQ) Q:'DSUB
"RTN","PXRMDLG1",264,0)
 .S DNAME=$P($G(^PXRMD(801.41,DSUB,0)),U)
"RTN","PXRMDLG1",265,0)
 .S DTYP=$P($G(^PXRMD(801.41,DSUB,0)),U,4)
"RTN","PXRMDLG1",266,0)
 .I DTYP="F" S DNAME=DNAME_" (forced value)"
"RTN","PXRMDLG1",267,0)
 .I TAB=0,DTYP="F" S DNAME=$J("",3)_DNAME
"RTN","PXRMDLG1",268,0)
 .I TAB=0,DTYP="P" S DNAME=$J("",3)_$P($G(^PXRMD(801.41,DSUB,2)),U,4)
"RTN","PXRMDLG1",269,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",270,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_$G(TEXT)_DNAME
"RTN","PXRMDLG1",271,0)
 .S TEXT=$J("",TAB)
"RTN","PXRMDLG1",272,0)
 Q
"RTN","PXRMDLGZ")
0^43^B38127018
"RTN","PXRMDLGZ",1,0)
PXRMDLGZ ; SLC/PJH - Link reminder to dialog. ;03/05/2001
"RTN","PXRMDLGZ",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMDLGZ",3,0)
 ;
"RTN","PXRMDLGZ",4,0)
 ;Called by option PXRM DIALOG/COMPONENT EDIT
"RTN","PXRMDLGZ",5,0)
 ;
"RTN","PXRMDLGZ",6,0)
START N BY,DATA,DDES,DHD,DIC,DNAM,DTYP,FLDS,FR,L,LOGIC,NOW,PNAM,TO,Y
"RTN","PXRMDLGZ",7,0)
 N PXRMBG,PXRMHD,PXRMDIEN,PXRMGTYP,PXRMDTYP,PXRMITEM,PXRMMODE,PXRMNAME
"RTN","PXRMDLGZ",8,0)
 N PXRMOPT,PXRMTEMP,PXRMTITL,PXRMVIEW
"RTN","PXRMDLGZ",9,0)
 ;Refresh on return
"RTN","PXRMDLGZ",10,0)
 S VALMBCK="R"
"RTN","PXRMDLGZ",11,0)
 ;Default is display dialog elements
"RTN","PXRMDLGZ",12,0)
 S PXRMDTYP="R",PXRMGTYP="DLGR",PXRMOPT=0,PXRMVIEW="AN"
"RTN","PXRMDLGZ",13,0)
 ;Select dialog for display
"RTN","PXRMDLGZ",14,0)
 F  D  Q:'PXRMTEMP
"RTN","PXRMDLGZ",15,0)
 .S PXRMTEMP=""
"RTN","PXRMDLGZ",16,0)
 .D START^PXRMSEL(.PXRMHD,.PXRMGTYP,"PXRMTEMP") Q:'PXRMTEMP
"RTN","PXRMDLGZ",17,0)
 .N X S X="IORESET"
"RTN","PXRMDLGZ",18,0)
 .D ENDR^%ZISS,@(PXRMGTYP_"("_PXRMTEMP_")")
"RTN","PXRMDLGZ",19,0)
END Q
"RTN","PXRMDLGZ",20,0)
 ;
"RTN","PXRMDLGZ",21,0)
 ;Reminder View
"RTN","PXRMDLGZ",22,0)
 ;-------------
"RTN","PXRMDLGZ",23,0)
DLGR(PXRMITEM) ;
"RTN","PXRMDLGZ",24,0)
 N PXRMDIEN,PXRMCS1,PXRMCS2
"RTN","PXRMDLGZ",25,0)
 ;Format headings to include reminder and name
"RTN","PXRMDLGZ",26,0)
 S DATA=$G(^PXD(811.9,PXRMITEM,0)),RNAM=$P(DATA,U),PNAM=$P(DATA,U,3)
"RTN","PXRMDLGZ",27,0)
 S PXRMHD="REMINDER NAME: "_RNAM
"RTN","PXRMDLGZ",28,0)
 ;
"RTN","PXRMDLGZ",29,0)
 ;Dialog History
"RTN","PXRMDLGZ",30,0)
 F  D  Q:'PXRMDIEN
"RTN","PXRMDLGZ",31,0)
 .D START^PXRMDLGH(PXRMITEM,.PXRMDIEN,"PXRMDIEN") Q:'PXRMDIEN
"RTN","PXRMDLGZ",32,0)
 .N PXRMHD,VALMBCK,VALMBG,VALMSG,X,XMZ
"RTN","PXRMDLGZ",33,0)
 .S DNAM=$P($G(^PXRMD(801.41,PXRMDIEN,0)),U)
"RTN","PXRMDLGZ",34,0)
 .I $P($G(^PXRMD(801.41,PXRMDIEN,0)),U,3)]"" S DNAM=DNAM_" (DISABLED)"
"RTN","PXRMDLGZ",35,0)
 .S PXRMHD="REMINDER DIALOG NAME: "_DNAM
"RTN","PXRMDLGZ",36,0)
 .S PXRMCS1=$$FILE^PXRMEXCS(801.41,PXRMDIEN)
"RTN","PXRMDLGZ",37,0)
 .S X="IORESET"
"RTN","PXRMDLGZ",38,0)
 .D ENDR^%ZISS,EN^VALM("PXRM DIALOG LIST")
"RTN","PXRMDLGZ",39,0)
 .I PXRMDIEN,$D(^PXRMD(801.41,PXRMDIEN,0)) D
"RTN","PXRMDLGZ",40,0)
 ..S PXRMCS2=$$FILE^PXRMEXCS(801.41,PXRMDIEN) Q:+PXRMCS2=0
"RTN","PXRMDLGZ",41,0)
 ..Q:PXRMCS1=PXRMCS2
"RTN","PXRMDLGZ",42,0)
 ..D SEHIST^PXRMUTIL(801.41,"^PXRMD(801,41,",PXRMDIEN)
"RTN","PXRMDLGZ",43,0)
 .W IORESET
"RTN","PXRMDLGZ",44,0)
 .D KILL^%ZISS
"RTN","PXRMDLGZ",45,0)
 Q
"RTN","PXRMDLGZ",46,0)
 ;
"RTN","PXRMDLGZ",47,0)
 ;Edit element/prompt/group
"RTN","PXRMDLGZ",48,0)
 ;-------------------------
"RTN","PXRMDLGZ",49,0)
DLGE(PXRMDIEN) ;
"RTN","PXRMDLGZ",50,0)
 S PXRMHD="Dialog Name: ",PXRMDIEN=PXRMTEMP
"RTN","PXRMDLGZ",51,0)
 ;Format headings to include dialog name
"RTN","PXRMDLGZ",52,0)
 S DATA=$G(^PXRMD(801.41,PXRMDIEN,0)),DDES=$P(DATA,U),DTYP=$P(DATA,U,4)
"RTN","PXRMDLGZ",53,0)
 ;Test
"RTN","PXRMDLGZ",54,0)
 I DTYP="G" D DLG(PXRMDIEN) Q
"RTN","PXRMDLGZ",55,0)
 ;
"RTN","PXRMDLGZ",56,0)
 S PXRMHD=PXRMHD_" "_DDES W PXRMHD,!
"RTN","PXRMDLGZ",57,0)
 ;Edit selected dialog
"RTN","PXRMDLGZ",58,0)
 D EDIT^PXRMDEDT(DTYP,PXRMDIEN)
"RTN","PXRMDLGZ",59,0)
 Q
"RTN","PXRMDLGZ",60,0)
 ;
"RTN","PXRMDLGZ",61,0)
 ;Reminder dialog view
"RTN","PXRMDLGZ",62,0)
 ;--------------------
"RTN","PXRMDLGZ",63,0)
DLG(PXRMDIEN) ;
"RTN","PXRMDLGZ",64,0)
 S PXRMDIEN=PXRMTEMP
"RTN","PXRMDLGZ",65,0)
 S PXRMNAME=$P($G(^PXRMD(801.41,PXRMDIEN,0)),U)
"RTN","PXRMDLGZ",66,0)
 S PXRMITEM=$P($G(^PXRMD(801.41,PXRMDIEN,0)),U,2)
"RTN","PXRMDLGZ",67,0)
 ;Format headings to include dialog name
"RTN","PXRMDLGZ",68,0)
 S PXRMHD=PXRMHD_PXRMNAME
"RTN","PXRMDLGZ",69,0)
 ;Check if the set is disable and add to header if disabled
"RTN","PXRMDLGZ",70,0)
 I $P(^PXRMD(801.41,PXRMDIEN,0),U,3)]"" S PXRMHD=PXRMHD_" (DISABLED)"
"RTN","PXRMDLGZ",71,0)
 ;Listman option
"RTN","PXRMDLGZ",72,0)
 D EN^VALM("PXRM DIALOG LIST")
"RTN","PXRMDLGZ",73,0)
 W IORESET
"RTN","PXRMDLGZ",74,0)
 D KILL^%ZISS
"RTN","PXRMDLGZ",75,0)
 Q
"RTN","PXRMDLGZ",76,0)
 ;
"RTN","PXRMDLGZ",77,0)
 ;Other subroutines
"RTN","PXRMDLGZ",78,0)
 ;
"RTN","PXRMDLGZ",79,0)
 ;Ask update or no
"RTN","PXRMDLGZ",80,0)
 ;----------------
"RTN","PXRMDLGZ",81,0)
ASK(YESNO) ;
"RTN","PXRMDLGZ",82,0)
 N X,Y,TEXT,DIR
"RTN","PXRMDLGZ",83,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDLGZ",84,0)
 S DIR(0)="YA0"
"RTN","PXRMDLGZ",85,0)
 S DIR("A")="LINK THIS REMINDER TO DIALOG - "_$P(PXRMHD,": ",2)_": "
"RTN","PXRMDLGZ",86,0)
 S DIR("B")="Y"
"RTN","PXRMDLGZ",87,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDLGZ",88,0)
 S DIR("??")=U_"D HLP^PXRMDLGY(1)"
"RTN","PXRMDLGZ",89,0)
 D ^DIR K DIR
"RTN","PXRMDLGZ",90,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDLGZ",91,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDLGZ",92,0)
 S YESNO=$E(Y(0))
"RTN","PXRMDLGZ",93,0)
 Q
"RTN","PXRMDLGZ",94,0)
 ;
"RTN","PXRMDLGZ",95,0)
 ;Display dialogs autogenerated from this reminder
"RTN","PXRMDLGZ",96,0)
 ;------------------------------------------------
"RTN","PXRMDLGZ",97,0)
DISP(RIEN) ;
"RTN","PXRMDLGZ",98,0)
 N ARRAY,DSUB,FIRST
"RTN","PXRMDLGZ",99,0)
 ;Get OTHER dialogs
"RTN","PXRMDLGZ",100,0)
 S FIRST=1,DSUB=""
"RTN","PXRMDLGZ",101,0)
 F  S DSUB=$O(^PXRMD(801.41,"AG",RIEN,DSUB)) Q:'DSUB  D
"RTN","PXRMDLGZ",102,0)
 .W !
"RTN","PXRMDLGZ",103,0)
 .D:FIRST
"RTN","PXRMDLGZ",104,0)
 ..W "DIALOGS ALREADY GENERATED FROM THIS REMINDER:",!! S FIRST=0
"RTN","PXRMDLGZ",105,0)
 .W ?20,$P($G(^PXRMD(801.41,DSUB,0)),U)
"RTN","PXRMDLGZ",106,0)
 ;
"RTN","PXRMDLGZ",107,0)
 I 'FIRST W !
"RTN","PXRMDLGZ",108,0)
 ;
"RTN","PXRMDLGZ",109,0)
 Q
"RTN","PXRMDLGZ",110,0)
 ;
"RTN","PXRMDLGZ",111,0)
 ;Display linked reminders
"RTN","PXRMDLGZ",112,0)
 ;------------------------
"RTN","PXRMDLGZ",113,0)
DISPL(DIEN) ;
"RTN","PXRMDLGZ",114,0)
 N ARRAY,DLG,RSUB,FIRST,RNAM
"RTN","PXRMDLGZ",115,0)
 S RSUB=$P($G(^PXRMD(801.41,DIEN,0)),U,2)
"RTN","PXRMDLGZ",116,0)
 I RSUB W !!,"SOURCE REMINDER: "_$P($G(^PXD(811.9,RSUB,0)),U)
"RTN","PXRMDLGZ",117,0)
 ;Linked reminders
"RTN","PXRMDLGZ",118,0)
 S FIRST=1,RNAM=""
"RTN","PXRMDLGZ",119,0)
 F  S RNAM=$O(^PXD(811.9,"B",RNAM)) Q:RNAM=""  D
"RTN","PXRMDLGZ",120,0)
 .S RSUB=$O(^PXD(811.9,"B",RNAM,"")) Q:'RSUB
"RTN","PXRMDLGZ",121,0)
 .S DLG=$P($G(^PXD(811.9,RSUB,51)),U) Q:DLG'=DIEN
"RTN","PXRMDLGZ",122,0)
 .W ! I FIRST W !,"REMINDERS ALREADY LINKED TO THIS DIALOG:",!! S FIRST=0
"RTN","PXRMDLGZ",123,0)
 .W ?18,$P($G(^PXD(811.9,RSUB,0)),U)
"RTN","PXRMDLGZ",124,0)
 Q
"RTN","PXRMDLGZ",125,0)
 ;
"RTN","PXRMDLGZ",126,0)
 ;Link a dialog (called by protocol PXRM DIALOG/REMINDER LINK)
"RTN","PXRMDLGZ",127,0)
 ;-------------
"RTN","PXRMDLGZ",128,0)
LINK(DIEN) ;
"RTN","PXRMDLGZ",129,0)
 F  D  Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDLGZ",130,0)
 .W IORESET
"RTN","PXRMDLGZ",131,0)
 .S VALMBCK="R"
"RTN","PXRMDLGZ",132,0)
 .;Display linked reminders
"RTN","PXRMDLGZ",133,0)
 .D DISPL(DIEN)
"RTN","PXRMDLGZ",134,0)
 .;
"RTN","PXRMDLGZ",135,0)
 .N ANS,DIC,DIR,DLG,LIT1,PNAME,PXRMREM,REM
"RTN","PXRMDLGZ",136,0)
 .S DIC("A")="SELECT A REMINDER TO LINK OR CHANGE: "
"RTN","PXRMDLGZ",137,0)
 .S LIT1="You must select a reminder!"
"RTN","PXRMDLGZ",138,0)
 .D SEL(811.9,"AEQMZ",.PXRMREM)
"RTN","PXRMDLGZ",139,0)
 .Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDLGZ",140,0)
 .S REM=$P(PXRMREM(1),U),PNAME=$P(PXRMREM(1),U,3)
"RTN","PXRMDLGZ",141,0)
 .I PNAME]"" W !!,"REMINDER PRINT NAME: "_PNAME,!
"RTN","PXRMDLGZ",142,0)
 .;Display related dialogs
"RTN","PXRMDLGZ",143,0)
 .D DISP(REM)
"RTN","PXRMDLGZ",144,0)
 .;Check if already linked
"RTN","PXRMDLGZ",145,0)
 .S DLG=$P($G(^PXD(811.9,REM,51)),U)
"RTN","PXRMDLGZ",146,0)
 .;Reconfirm to link reminder
"RTN","PXRMDLGZ",147,0)
 .I 'DLG S ANS="" D ASK(.ANS) Q:ANS'="Y"
"RTN","PXRMDLGZ",148,0)
 .;
"RTN","PXRMDLGZ",149,0)
 .N DA,DR,DIE
"RTN","PXRMDLGZ",150,0)
 .;Edit selected reminder
"RTN","PXRMDLGZ",151,0)
 .S DA=REM
"RTN","PXRMDLGZ",152,0)
 .;Settup local variables
"RTN","PXRMDLGZ",153,0)
 .S DIE="^PXD(811.9,",DR=51
"RTN","PXRMDLGZ",154,0)
 .;If no link force entry
"RTN","PXRMDLGZ",155,0)
 .I 'DLG S DR=DR_"///"_PXRMNAME
"RTN","PXRMDLGZ",156,0)
 .D ^DIE
"RTN","PXRMDLGZ",157,0)
 Q
"RTN","PXRMDLGZ",158,0)
 ;
"RTN","PXRMDLGZ",159,0)
 ;Link a Reminder (called by protocol PXRM DIALOG LINK)
"RTN","PXRMDLGZ",160,0)
 ;---------------
"RTN","PXRMDLGZ",161,0)
RLINK(REM) ;
"RTN","PXRMDLGZ",162,0)
 N DLG
"RTN","PXRMDLGZ",163,0)
 ;Re-display reminder name
"RTN","PXRMDLGZ",164,0)
 W IORESET
"RTN","PXRMDLGZ",165,0)
 W !,PXRMHD
"RTN","PXRMDLGZ",166,0)
 ;
"RTN","PXRMDLGZ",167,0)
 N DA,DR,DIE
"RTN","PXRMDLGZ",168,0)
 ;Edit selected reminder
"RTN","PXRMDLGZ",169,0)
 S DA=REM
"RTN","PXRMDLGZ",170,0)
 ;Settup local variables
"RTN","PXRMDLGZ",171,0)
 S DIE="^PXD(811.9,",DR=51
"RTN","PXRMDLGZ",172,0)
 ;If no link force entry
"RTN","PXRMDLGZ",173,0)
 D ^DIE
"RTN","PXRMDLGZ",174,0)
 Q
"RTN","PXRMDLGZ",175,0)
 ;
"RTN","PXRMDLGZ",176,0)
 ;General help text routine.
"RTN","PXRMDLGZ",177,0)
 ;--------------------------
"RTN","PXRMDLGZ",178,0)
HLP(CALL) ;
"RTN","PXRMDLGZ",179,0)
 N HTEXT
"RTN","PXRMDLGZ",180,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDLGZ",181,0)
 S DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMDLGZ",182,0)
 ;
"RTN","PXRMDLGZ",183,0)
 I CALL=1 D
"RTN","PXRMDLGZ",184,0)
 .S HTEXT(1)="Enter Yes to link reminder to this dialog."
"RTN","PXRMDLGZ",185,0)
 I CALL=2 D
"RTN","PXRMDLGZ",186,0)
 .S HTEXT(1)="Enter Yes to link reminder to this dialog."
"RTN","PXRMDLGZ",187,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDLGZ",188,0)
 S IC=""
"RTN","PXRMDLGZ",189,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDLGZ",190,0)
 . S X=HTEXT(IC)
"RTN","PXRMDLGZ",191,0)
 . D ^DIWP
"RTN","PXRMDLGZ",192,0)
 W !
"RTN","PXRMDLGZ",193,0)
 S IC=0
"RTN","PXRMDLGZ",194,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDLGZ",195,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDLGZ",196,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDLGZ",197,0)
 W !
"RTN","PXRMDLGZ",198,0)
 Q
"RTN","PXRMDLGZ",199,0)
 ;
"RTN","PXRMDLGZ",200,0)
 ;Reminder selection
"RTN","PXRMDLGZ",201,0)
 ;------------------
"RTN","PXRMDLGZ",202,0)
SEL(FILE,MODE,ARRAY) ;
"RTN","PXRMDLGZ",203,0)
 N X,Y,CNT
"RTN","PXRMDLGZ",204,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDLGZ",205,0)
 S CNT=0
"RTN","PXRMDLGZ",206,0)
 W !
"RTN","PXRMDLGZ",207,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:CNT>0  Q:(Y=-1)&(CNT>0)
"RTN","PXRMDLGZ",208,0)
 .S DIC=FILE,DIC(0)=MODE
"RTN","PXRMDLGZ",209,0)
 .D ^DIC
"RTN","PXRMDLGZ",210,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMDLGZ",211,0)
 .I '$D(DTOUT),('$D(DUOUT)) D
"RTN","PXRMDLGZ",212,0)
 ..I +Y'=-1 D  Q
"RTN","PXRMDLGZ",213,0)
 ...S CNT=CNT+1,ARRAY(CNT)=Y_U_Y(0,0)_U_$P(Y(0),U,3)
"RTN","PXRMDLGZ",214,0)
 ..W:CNT=0 !,LIT1
"RTN","PXRMDLGZ",215,0)
 .K DIC
"RTN","PXRMDLGZ",216,0)
 Q
"RTN","PXRMDLGZ",217,0)
 ;
"RTN","PXRMDLGZ",218,0)
 ;Input transform for FINDING ITEM in 801.41
"RTN","PXRMDLGZ",219,0)
XINP(X) ;Taxonomy findings are not allowed for dialog groups
"RTN","PXRMDLGZ",220,0)
 I $P(X,";",2)="PXD(811.2,",$P($G(^PXRMD(801.41,DA,0)),U,4)="G" D  Q 0
"RTN","PXRMDLGZ",221,0)
 .W *7,!,"A taxonomy cannot be entered as the finding item for a group"
"RTN","PXRMDLGZ",222,0)
 ;Only applies to MH
"RTN","PXRMDLGZ",223,0)
 I $P(X,";",2)'="YTT(601," Q 1
"RTN","PXRMDLGZ",224,0)
 ;GAF
"RTN","PXRMDLGZ",225,0)
 I $P($G(^YTT(601,$P(X,";"),0)),U)="GAF" Q 1
"RTN","PXRMDLGZ",226,0)
 ;Check if a VALID GUI test
"RTN","PXRMDLGZ",227,0)
 I $P($G(^YTT(601.6,$P(X,";"),0)),U,4)="Y" Q 1
"RTN","PXRMDLGZ",228,0)
 ;else
"RTN","PXRMDLGZ",229,0)
 W *7,!,"This test is not appropriate for the GUI",!
"RTN","PXRMDLGZ",230,0)
 Q 0
"RTN","PXRMDLL")
0^53^B73738931
"RTN","PXRMDLL",1,0)
PXRMDLL ;SLC/PJH - REMINDER DIALOG LOADER ;06/27/2001
"RTN","PXRMDLL",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMDLL",3,0)
 ;
"RTN","PXRMDLL",4,0)
OK(DIEN) ;Check if mental health test is for GUI
"RTN","PXRMDLL",5,0)
 I 'DFIEN Q 0
"RTN","PXRMDLL",6,0)
 I $P($G(^YTT(601.6,DFIEN,0)),U,4)="Y" Q 1
"RTN","PXRMDLL",7,0)
 I $P($G(^YTT(601,DFIEN,0)),U)="GAF" Q 1
"RTN","PXRMDLL",8,0)
 Q 0
"RTN","PXRMDLL",9,0)
 ;
"RTN","PXRMDLL",10,0)
TXT ;Format text
"RTN","PXRMDLL",11,0)
 N NULL
"RTN","PXRMDLL",12,0)
 S TEXT=DTXT(SUB),NULL=0
"RTN","PXRMDLL",13,0)
 I ($E(TEXT)=" ")!(TEXT="") S NULL=1
"RTN","PXRMDLL",14,0)
 I LAST,'NULL S TEXT="<br>"_TEXT
"RTN","PXRMDLL",15,0)
 S LAST=0 I NULL S TEXT="<br>"_TEXT,LAST=1
"RTN","PXRMDLL",16,0)
 Q
"RTN","PXRMDLL",17,0)
 ; 
"RTN","PXRMDLL",18,0)
EXP(TIEN,DITEM,DSUB) ;Expand taxonomy codes
"RTN","PXRMDLL",19,0)
 N ACNT,AHIS,ATYP,ARRAY,CODES,CNT,DPCE,DTAX
"RTN","PXRMDLL",20,0)
 ;Get taxonomy file details
"RTN","PXRMDLL",21,0)
 D TAX(TIEN,.ARRAY)
"RTN","PXRMDLL",22,0)
 ;
"RTN","PXRMDLL",23,0)
 ;Build dialog from the returned array
"RTN","PXRMDLL",24,0)
 ;
"RTN","PXRMDLL",25,0)
 ;Main Taxonomy prompt
"RTN","PXRMDLL",26,0)
 S DTXT=ARRAY
"RTN","PXRMDLL",27,0)
 S OCNT=OCNT+1
"RTN","PXRMDLL",28,0)
 S ORY(OCNT)=1_U_DITEM_U_DSUB_U_"S"_U_DEXC
"RTN","PXRMDLL",29,0)
 ;Default group indents and selection entry
"RTN","PXRMDLL",30,0)
 S $P(ORY(OCNT),U,16)=2,$P(ORY(OCNT),U,18)=2
"RTN","PXRMDLL",31,0)
 S OCNT=OCNT+1
"RTN","PXRMDLL",32,0)
 S ORY(OCNT)=2_U_DITEM_U_DSUB_U_DTXT
"RTN","PXRMDLL",33,0)
 ;
"RTN","PXRMDLL",34,0)
 ;Taxonomy CPT/POV resolution prompts
"RTN","PXRMDLL",35,0)
 S ACNT=""
"RTN","PXRMDLL",36,0)
 F  S ACNT=$O(ARRAY(ACNT)) Q:ACNT=""  D
"RTN","PXRMDLL",37,0)
 .;Prompt text
"RTN","PXRMDLL",38,0)
 .S DTXT=$P(ARRAY(ACNT),U),DPCE=$P(ARRAY(ACNT),U,4)
"RTN","PXRMDLL",39,0)
 .;Historical/Current flag
"RTN","PXRMDLL",40,0)
 .S AHIS=0 I $P(ARRAY(ACNT),U,3)=2 S AHIS=1
"RTN","PXRMDLL",41,0)
 .;CPT/POV
"RTN","PXRMDLL",42,0)
 .S ATYP="POV" I $P(ARRAY(ACNT),U,2)=81 S ATYP="CPT"
"RTN","PXRMDLL",43,0)
 .;Initial display
"RTN","PXRMDLL",44,0)
 .S DHIDE=0,DCHECK=0,DDIS=0
"RTN","PXRMDLL",45,0)
 .;Construct ien for this level
"RTN","PXRMDLL",46,0)
 .S DTAX=DSUB_"."_ACNT
"RTN","PXRMDLL",47,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLL",48,0)
 .S ORY(OCNT)=1_U_DITEM_U_DTAX_U_"T"_U_DEXC_U_U_ATYP_U_AHIS
"RTN","PXRMDLL",49,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLL",50,0)
 .S ORY(OCNT)=2_U_DITEM_U_DTAX_U_DTXT
"RTN","PXRMDLL",51,0)
 Q
"RTN","PXRMDLL",52,0)
 ;
"RTN","PXRMDLL",53,0)
GROUP(DIEN,DSUB) ;Dialog group
"RTN","PXRMDLL",54,0)
 N DATA,DBOX,DCAP,DCHK,DENTRY,DEXC,DGIEN,DGRP,DGSEQ,DGSUB,DHIDE,DIND
"RTN","PXRMDLL",55,0)
 N DINDPN,DMHEX,DRESL,DSHARE,SUB
"RTN","PXRMDLL",56,0)
 ;Group caption text
"RTN","PXRMDLL",57,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0))
"RTN","PXRMDLL",58,0)
 S DCAP=$P(DATA,U,5),DBOX=$P(DATA,U,6),DIND=$P(DATA,U,7)
"RTN","PXRMDLL",59,0)
 S DSHARE=$P(DATA,U,8),DENTRY=$P(DATA,U,9),DHIDE=$P(DATA,U,10)
"RTN","PXRMDLL",60,0)
 S DINDPN=$P(DATA,U,12) S:DINDPN="" DINDPN=0
"RTN","PXRMDLL",61,0)
 S DBOX=$S(DBOX="Y":1,1:"")
"RTN","PXRMDLL",62,0)
 ;group header is display only if SUPPRESS CHECKBOX
"RTN","PXRMDLL",63,0)
 S DCHK="S" I ('DHIDE)&(DSUPP) S DCHK="D",DHIDE=0
"RTN","PXRMDLL",64,0)
 ;Default group setting to hide
"RTN","PXRMDLL",65,0)
 I DHIDE="" S DHIDE=1
"RTN","PXRMDLL",66,0)
 ;
"RTN","PXRMDLL",67,0)
 S DEXC=$P($G(^PXRMD(801.41,DIEN,2)),U,3)
"RTN","PXRMDLL",68,0)
 ;
"RTN","PXRMDLL",69,0)
 S OCNT=OCNT+1,ORY(OCNT)=1_U_DIEN_U_DSUB_U_DCHK_U_DEXC
"RTN","PXRMDLL",70,0)
 S $P(ORY(OCNT),U,15)=DHIDE,$P(ORY(OCNT),U,16)=DIND
"RTN","PXRMDLL",71,0)
 S $P(ORY(OCNT),U,17)=DSHARE,$P(ORY(OCNT),U,18)=DENTRY
"RTN","PXRMDLL",72,0)
 S $P(ORY(OCNT),U,19)=DBOX,$P(ORY(OCNT),U,20)=DCAP
"RTN","PXRMDLL",73,0)
 S $P(ORY(OCNT),U,21)=DINDPN
"RTN","PXRMDLL",74,0)
 ;Create type 2 records if if here is additional group text
"RTN","PXRMDLL",75,0)
 N LAST,TEXT
"RTN","PXRMDLL",76,0)
 S SUB=0,LAST=0 F  S SUB=$O(DTXT(SUB)) Q:'SUB  D
"RTN","PXRMDLL",77,0)
 .D TXT
"RTN","PXRMDLL",78,0)
 .S OCNT=OCNT+1,ORY(OCNT)=2_U_DIEN_U_DSUB_U_TEXT
"RTN","PXRMDLL",79,0)
 ;Get dialog group sub-elements
"RTN","PXRMDLL",80,0)
 N DTYP,DSUPP,DDIS S DGSEQ=0
"RTN","PXRMDLL",81,0)
 F  S DGSEQ=$O(^PXRMD(801.41,DIEN,10,"B",DGSEQ)) Q:'DGSEQ  D
"RTN","PXRMDLL",82,0)
 .S DGSUB=$O(^PXRMD(801.41,DIEN,10,"B",DGSEQ,"")) Q:'DGSUB
"RTN","PXRMDLL",83,0)
 .S DATA=$G(^PXRMD(801.41,DIEN,10,DGSUB,0))
"RTN","PXRMDLL",84,0)
 .S DGIEN=$P(DATA,U,2) Q:'DGIEN
"RTN","PXRMDLL",85,0)
 .;Exclude from P/N
"RTN","PXRMDLL",86,0)
 .S DEXC=$P(DATA,U,8)
"RTN","PXRMDLL",87,0)
 .;If the actual element is exclude from P/N override
"RTN","PXRMDLL",88,0)
 .I $P($G(^PXRMD(801.41,DGIEN,2)),U,3) S DEXC=1
"RTN","PXRMDLL",89,0)
 .K DTXT S SUB=0 F  S SUB=$O(^PXRMD(801.41,DGIEN,25,SUB)) Q:'SUB  D
"RTN","PXRMDLL",90,0)
 ..S DTXT(SUB)=$G(^PXRMD(801.41,DGIEN,25,SUB,0))
"RTN","PXRMDLL",91,0)
 .;Check if element is disabled/invalid
"RTN","PXRMDLL",92,0)
 .S DATA=$G(^PXRMD(801.41,DGIEN,0)) Q:DATA=""  Q:$P(DATA,U,3)]""
"RTN","PXRMDLL",93,0)
 .S DTYP=$P(DATA,U,4),DSUPP=$P(DATA,U,11) Q:"EG"'[DTYP
"RTN","PXRMDLL",94,0)
 .S DMHEX=$P(DATA,U,14),DRESL=$P(DATA,U,15)
"RTN","PXRMDLL",95,0)
 .S DRES=$P($G(^PXRMD(801.41,DGIEN,1)),U,3)
"RTN","PXRMDLL",96,0)
 .;Done Elsewhere (historical)
"RTN","PXRMDLL",97,0)
 .S DHIS=0 S:DRES=2 DHIS=1
"RTN","PXRMDLL",98,0)
 .S DFIND=$P($G(^PXRMD(801.41,DGIEN,1)),U,5)
"RTN","PXRMDLL",99,0)
 .S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2)
"RTN","PXRMDLL",100,0)
 .S DPCE="" I DFTYP'="" S DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLL",101,0)
 .;If mental Health ignore if not GUI
"RTN","PXRMDLL",102,0)
 .I DPCE="MH" Q:'$$OK(DFIEN)
"RTN","PXRMDLL",103,0)
 .S DGRP=DSUB_"."_DGSUB
"RTN","PXRMDLL",104,0)
 .;Taxonomy codes need expanding
"RTN","PXRMDLL",105,0)
 .I DPCE="T" D EXP(DFIEN,DGIEN,DGRP) Q
"RTN","PXRMDLL",106,0)
 .;Translate vitals ien to PCE code - This will need a DBIA
"RTN","PXRMDLL",107,0)
 .I DPCE="VIT" S DFIEN=$$GET1^DIQ(120.51,DFIEN,7,"E")
"RTN","PXRMDLL",108,0)
 .;Embedded Dialog Group
"RTN","PXRMDLL",109,0)
 .I DTYP="G" D GROUP(DGIEN,DGRP) Q
"RTN","PXRMDLL",110,0)
 .S DDIS="S" I DSUPP=1 S DDIS="D"
"RTN","PXRMDLL",111,0)
 .S DGRP=DSUB_"."_DGSUB,OCNT=OCNT+1
"RTN","PXRMDLL",112,0)
 .S ORY(OCNT)=1_U_DGIEN_U_DGRP_U_DDIS_U_DEXC_U_U_U_DHIS_U_DMHEX_U_DRESL
"RTN","PXRMDLL",113,0)
 .N LAST,TEXT
"RTN","PXRMDLL",114,0)
 .S SUB=0,LAST=0 F  S SUB=$O(DTXT(SUB)) Q:'SUB  D
"RTN","PXRMDLL",115,0)
 ..D TXT
"RTN","PXRMDLL",116,0)
 ..S OCNT=OCNT+1,ORY(OCNT)=2_U_DGIEN_U_DGRP_U_TEXT
"RTN","PXRMDLL",117,0)
 Q
"RTN","PXRMDLL",118,0)
 ;
"RTN","PXRMDLL",119,0)
LOAD(DIEN) ;Load dialog questions into array
"RTN","PXRMDLL",120,0)
 N DARRAY,DATA,DITEM,DFIND,DFIEN,DFTYP,DPCE,DRES,DSEQ,DSUB,DTXT,DTYP,OCNT
"RTN","PXRMDLL",121,0)
 N DDIS,DEXC,DHIDE,DCHECK,DDIS,DHIS,DMHEX,DRESL,DSUPP,SUB
"RTN","PXRMDLL",122,0)
 ;Check Status of dialog
"RTN","PXRMDLL",123,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0)) Q:DATA=""
"RTN","PXRMDLL",124,0)
 ;If disabled ignore
"RTN","PXRMDLL",125,0)
 I $P(DATA,U,3)]"" Q
"RTN","PXRMDLL",126,0)
 ;Ignore if not a reminder dialog
"RTN","PXRMDLL",127,0)
 I $P(DATA,U,4)'="R" Q
"RTN","PXRMDLL",128,0)
 ;
"RTN","PXRMDLL",129,0)
 ;List of PCE codes
"RTN","PXRMDLL",130,0)
 S DARRAY("AUTTEDT(")="PED"
"RTN","PXRMDLL",131,0)
 S DARRAY("AUTTEXAM(")="XAM"
"RTN","PXRMDLL",132,0)
 S DARRAY("AUTTHF(")="HF"
"RTN","PXRMDLL",133,0)
 S DARRAY("AUTTIMM(")="IMM"
"RTN","PXRMDLL",134,0)
 S DARRAY("AUTTSK(")="SK"
"RTN","PXRMDLL",135,0)
 S DARRAY("GMRD(120.51,")="VIT"
"RTN","PXRMDLL",136,0)
 S DARRAY("ORD(101.41,")="Q"
"RTN","PXRMDLL",137,0)
 S DARRAY("YTT(601,")="MH"
"RTN","PXRMDLL",138,0)
 S DARRAY("ICD9(")="POV"
"RTN","PXRMDLL",139,0)
 S DARRAY("ICPT(")="CPT"
"RTN","PXRMDLL",140,0)
 S DARRAY("PXD(811.2,")="T"
"RTN","PXRMDLL",141,0)
 ;
"RTN","PXRMDLL",142,0)
 ;Get elements for the dialog
"RTN","PXRMDLL",143,0)
 S DSEQ=0,OCNT=0
"RTN","PXRMDLL",144,0)
 F  S DSEQ=$O(^PXRMD(801.41,DIEN,10,"B",DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLL",145,0)
 .S DSUB=$O(^PXRMD(801.41,DIEN,10,"B",DSEQ,"")) Q:'DSUB
"RTN","PXRMDLL",146,0)
 .S DATA=$G(^PXRMD(801.41,DIEN,10,DSUB,0))
"RTN","PXRMDLL",147,0)
 .S DITEM=$P(DATA,U,2) Q:DITEM=""
"RTN","PXRMDLL",148,0)
 .;Ignore disabled elements
"RTN","PXRMDLL",149,0)
 .S DATA=$G(^PXRMD(801.41,DITEM,0)) Q:DATA=""  Q:$P(DATA,U,3)]""
"RTN","PXRMDLL",150,0)
 .S DTYP=$P(DATA,U,4),DSUPP=$P(DATA,U,11)
"RTN","PXRMDLL",151,0)
 .S DMHEX=$P(DATA,U,14),DRESL=$P(DATA,U,15)
"RTN","PXRMDLL",152,0)
 .K DTXT S SUB=0
"RTN","PXRMDLL",153,0)
 .F  S SUB=$O(^PXRMD(801.41,DITEM,25,SUB)) Q:'SUB  D
"RTN","PXRMDLL",154,0)
 ..S DTXT(SUB)=$G(^PXRMD(801.41,DITEM,25,SUB,0))
"RTN","PXRMDLL",155,0)
 .S DRES=$P($G(^PXRMD(801.41,DITEM,1)),U,3)
"RTN","PXRMDLL",156,0)
 .S DFIND=$P($G(^PXRMD(801.41,DITEM,1)),U,5)
"RTN","PXRMDLL",157,0)
 .S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2)
"RTN","PXRMDLL",158,0)
 .S DPCE="" I DFTYP'="" S DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLL",159,0)
 .;If mental Health ignore if not GUI
"RTN","PXRMDLL",160,0)
 .I DPCE="MH" Q:'$$OK(DFIEN)
"RTN","PXRMDLL",161,0)
 .;Exclude from PN
"RTN","PXRMDLL",162,0)
 .S DEXC=$P($G(^PXRMD(801.41,DITEM,2)),U,3)
"RTN","PXRMDLL",163,0)
 .;Taxonomy codes need expanding
"RTN","PXRMDLL",164,0)
 .I DPCE="T" D EXP(DFIEN,DITEM,DSUB) Q
"RTN","PXRMDLL",165,0)
 .;Translate vitals ien to PCE code - This will need a DBIA
"RTN","PXRMDLL",166,0)
 .I DPCE="VIT" S DFIEN=$P($G(^GMRD(120.51,DFIEN,0)),U,7)
"RTN","PXRMDLL",167,0)
 .;Done Elsewhere (historical)
"RTN","PXRMDLL",168,0)
 .S DHIS=$$AHIS(DITEM)
"RTN","PXRMDLL",169,0)
 .;Dialog Group
"RTN","PXRMDLL",170,0)
 .I DTYP="G" D GROUP(DITEM,DSUB) Q
"RTN","PXRMDLL",171,0)
 .;Dialog type/text and resolution 
"RTN","PXRMDLL",172,0)
 .S OCNT=OCNT+1,DDIS="S"
"RTN","PXRMDLL",173,0)
 .I DSUPP=1 S DDIS="D"
"RTN","PXRMDLL",174,0)
 .S ORY(OCNT)=1_U_DITEM_U_DSUB_U_DDIS_U_DEXC_U_U_U_DHIS_U_DMHEX_U_DRESL
"RTN","PXRMDLL",175,0)
 .N LAST,TEXT
"RTN","PXRMDLL",176,0)
 .S SUB=0,LAST=0 F  S SUB=$O(DTXT(SUB)) Q:'SUB  D
"RTN","PXRMDLL",177,0)
 ..D TXT
"RTN","PXRMDLL",178,0)
 ..S OCNT=OCNT+1,ORY(OCNT)=2_U_DITEM_U_DSUB_U_TEXT
"RTN","PXRMDLL",179,0)
 Q
"RTN","PXRMDLL",180,0)
 ;
"RTN","PXRMDLL",181,0)
TAX(TXIEN,ARRAY) ;Return list of resolutions/codes for taxonomy
"RTN","PXRMDLL",182,0)
 N CNT,DTXT,FNODE,RSUB,TDX,TNAME,TPAR,TPR,TYP
"RTN","PXRMDLL",183,0)
 N TCUR,TDTXT,TDHTXT,THIS,TPTXT,TPHTXT
"RTN","PXRMDLL",184,0)
 ;
"RTN","PXRMDLL",185,0)
 ;Get taxonomy name
"RTN","PXRMDLL",186,0)
 S TNAME=$P($G(^PXD(811.2,TXIEN,0)),U,1)
"RTN","PXRMDLL",187,0)
 ;
"RTN","PXRMDLL",188,0)
 ;Check what type of taxonomy codes exist
"RTN","PXRMDLL",189,0)
 S TDX=$$TOK^PXRMDLLA(TXIEN,"SDX")
"RTN","PXRMDLL",190,0)
 S TPR=$$TOK^PXRMDLLA(TXIEN,"SPR")
"RTN","PXRMDLL",191,0)
 ;
"RTN","PXRMDLL",192,0)
 ;Taxonomy dialog text
"RTN","PXRMDLL",193,0)
 S DTXT=$P($G(^PXD(811.2,TXIEN,0)),U,3)
"RTN","PXRMDLL",194,0)
 ;default to taxonomy description if null
"RTN","PXRMDLL",195,0)
 I DTXT="" S DTXT=$P($G(^PXD(811.2,TXIEN,0)),U,2)
"RTN","PXRMDLL",196,0)
 ;default to taxonomy name if null
"RTN","PXRMDLL",197,0)
 I DTXT="" S DTXT=$P($G(^PXD(811.2,TXIEN,0)),U,1)
"RTN","PXRMDLL",198,0)
 ;
"RTN","PXRMDLL",199,0)
 S CNT=0,ARRAY=DTXT
"RTN","PXRMDLL",200,0)
 ;
"RTN","PXRMDLL",201,0)
 ;Diagnoses
"RTN","PXRMDLL",202,0)
 I TDX D
"RTN","PXRMDLL",203,0)
 .;Diagnosis texts
"RTN","PXRMDLL",204,0)
 .S TPAR=$G(^PXD(811.2,TXIEN,"SDZ"))
"RTN","PXRMDLL",205,0)
 .;Get parameter file node for this finding type
"RTN","PXRMDLL",206,0)
 .S FNODE=$O(^PXRMD(801.45,"B","POV","")) Q:FNODE=""
"RTN","PXRMDLL",207,0)
 .;check if finding parameters are disabled
"RTN","PXRMDLL",208,0)
 .S TCUR=$P($G(^PXRMD(801.45,FNODE,1,1,0)),U,2)
"RTN","PXRMDLL",209,0)
 .S THIS=$P($G(^PXRMD(801.45,FNODE,1,2,0)),U,2)
"RTN","PXRMDLL",210,0)
 .;get category text (diagnoses)
"RTN","PXRMDLL",211,0)
 .I 'TCUR D  ; Current
"RTN","PXRMDLL",212,0)
 ..S TDTXT=$P(TPAR,U,2) S:TDTXT="" TDTXT=TNAME
"RTN","PXRMDLL",213,0)
 ..S CNT=CNT+1,ARRAY(CNT)=TDTXT_U_80_U_1_U_"POV"
"RTN","PXRMDLL",214,0)
 .I 'THIS D  ; Historical
"RTN","PXRMDLL",215,0)
 ..S TDHTXT=$P(TPAR,U,3) S:TDHTXT="" TDHTXT=TNAME_" (HISTORICAL)"
"RTN","PXRMDLL",216,0)
 ..S CNT=CNT+1,ARRAY(CNT)=TDHTXT_U_80_U_2_U_"POV"
"RTN","PXRMDLL",217,0)
 ;Procedures
"RTN","PXRMDLL",218,0)
 I TPR D
"RTN","PXRMDLL",219,0)
 .;Procedure texts
"RTN","PXRMDLL",220,0)
 .S TPAR=$G(^PXD(811.2,TXIEN,"SPZ"))
"RTN","PXRMDLL",221,0)
 .;Get parameter file node for this finding type
"RTN","PXRMDLL",222,0)
 .S FNODE=$O(^PXRMD(801.45,"B","CPT","")) Q:FNODE=""
"RTN","PXRMDLL",223,0)
 .;check if finding parameters are disabled
"RTN","PXRMDLL",224,0)
 .S TCUR=$P($G(^PXRMD(801.45,FNODE,1,1,0)),U,2)
"RTN","PXRMDLL",225,0)
 .S THIS=$P($G(^PXRMD(801.45,FNODE,1,2,0)),U,2)
"RTN","PXRMDLL",226,0)
 .;get category text (procedures)
"RTN","PXRMDLL",227,0)
 .I 'TCUR D  ; Current
"RTN","PXRMDLL",228,0)
 ..S TPTXT=$P(TPAR,U,2) S:TPTXT="" TPTXT=TNAME
"RTN","PXRMDLL",229,0)
 ..S CNT=CNT+1,ARRAY(CNT)=TPTXT_U_81_U_1_U_"CPT"
"RTN","PXRMDLL",230,0)
 .I 'THIS D  ; Historical
"RTN","PXRMDLL",231,0)
 ..S TPHTXT=$P(TPAR,U,3) S:TPHTXT="" TPHTXT=TNAME_" (HISTORICAL)"
"RTN","PXRMDLL",232,0)
 ..S CNT=CNT+1,ARRAY(CNT)=TPHTXT_U_81_U_2_U_"CPT"
"RTN","PXRMDLL",233,0)
 ;
"RTN","PXRMDLL",234,0)
 Q
"RTN","PXRMDLL",235,0)
 ;
"RTN","PXRMDLL",236,0)
AHIS(DITEM) ;
"RTN","PXRMDLL",237,0)
 N RSIEN,RSNAM
"RTN","PXRMDLL",238,0)
 S RSIEN=$P($G(^PXRMD(801.41,DITEM,1)),U,3)
"RTN","PXRMDLL",239,0)
 I RSIEN="" Q 0
"RTN","PXRMDLL",240,0)
 S RSNAM=$P($G(^PXRMD(801.9,RSIEN,0)),U)
"RTN","PXRMDLL",241,0)
 I RSNAM="DONE ELSEWHERE" Q 1
"RTN","PXRMDLL",242,0)
 N GUI,PIEN,PFOUND
"RTN","PXRMDLL",243,0)
 S PIEN=0,PFOUND=0
"RTN","PXRMDLL",244,0)
 F  S PIEN=$O(^PXRMD(801.41,DITEM,10,"D",PIEN)) Q:'PIEN  D  Q:PFOUND
"RTN","PXRMDLL",245,0)
 .;GUI Process
"RTN","PXRMDLL",246,0)
 .S GUI=$P($G(^PXRMD(801.41,PIEN,46)),U) Q:'GUI
"RTN","PXRMDLL",247,0)
 .;Check if this is PXRM VISIT DATE (or a copy of it)
"RTN","PXRMDLL",248,0)
 .I $P($G(^PXRMD(801.42,GUI,0)),U)="VST_DATE" S PFOUND=1
"RTN","PXRMDLL",249,0)
 Q PFOUND
"RTN","PXRMDLLA")
0^54^B71641482
"RTN","PXRMDLLA",1,0)
PXRMDLLA ;SLC/PJH - REMINDER DIALOG LOADER ;06/15/2001
"RTN","PXRMDLLA",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMDLLA",3,0)
 ;
"RTN","PXRMDLLA",4,0)
CODE(DFIEN,DFTYP) ;
"RTN","PXRMDLLA",5,0)
 Q:DFIEN="" ""
"RTN","PXRMDLLA",6,0)
 Q:DFTYP["ICD9" $P($G(^ICD9(DFIEN,0)),U)
"RTN","PXRMDLLA",7,0)
 Q:DFTYP["ICPT" $P($$CPT^ICPTCOD(DFIEN),U,2)
"RTN","PXRMDLLA",8,0)
 Q ""
"RTN","PXRMDLLA",9,0)
 ;
"RTN","PXRMDLLA",10,0)
CODES(FILE,TXIEN,ARRAY) ;Return list of selectable codes from taxonomy file
"RTN","PXRMDLLA",11,0)
 N CNT,CODE,DATA,IEN,TEMP,TEXT,NODE,SUB
"RTN","PXRMDLLA",12,0)
 S SUB=0,CNT=0,NODE=$S(FILE=80:"SDX",FILE=81:"SPR")
"RTN","PXRMDLLA",13,0)
 F  S SUB=$O(^PXD(811.2,TXIEN,NODE,SUB)) Q:'SUB  D
"RTN","PXRMDLLA",14,0)
 .S DATA=$G(^PXD(811.2,TXIEN,NODE,SUB,0)) Q:DATA=""
"RTN","PXRMDLLA",15,0)
 .;Ignore if disabled
"RTN","PXRMDLLA",16,0)
 .I $P(DATA,U,3)=1 Q
"RTN","PXRMDLLA",17,0)
 .;Get ien of code
"RTN","PXRMDLLA",18,0)
 .S IEN=$P(DATA,U) Q:IEN=""
"RTN","PXRMDLLA",19,0)
 .;Translate ien to code
"RTN","PXRMDLLA",20,0)
 .I FILE=80 S CODE=$P($G(^ICD9(IEN,0)),U)
"RTN","PXRMDLLA",21,0)
 .I FILE=81 S CODE=$P($$CPT^ICPTCOD(IEN),U,2)
"RTN","PXRMDLLA",22,0)
 .;Ignore invalid codes
"RTN","PXRMDLLA",23,0)
 .S TEMP=$$CODE^PXRMVAL(CODE,FILE) Q:'$P(TEMP,U)  Q:$P(TEMP,U,9)=1
"RTN","PXRMDLLA",24,0)
 .;Set display text from taxonomy selectable code text
"RTN","PXRMDLLA",25,0)
 .S TEXT=$P(DATA,U,2)
"RTN","PXRMDLLA",26,0)
 .;otherwise use icd9/cpt description
"RTN","PXRMDLLA",27,0)
 .I TEXT="",FILE=80 S TEXT=$G(^ICD9(IEN,1))
"RTN","PXRMDLLA",28,0)
 .I TEXT="",FILE=80 S TEXT=$P($G(^ICD9(IEN,0)),U,3)
"RTN","PXRMDLLA",29,0)
 .I TEXT="",FILE=81 S TEXT=$P($$CPT^ICPTCOD(IEN),U,3)
"RTN","PXRMDLLA",30,0)
 .S CNT=CNT+1,ARRAY(CNT)=IEN_U_CODE_U_TEXT
"RTN","PXRMDLLA",31,0)
 Q
"RTN","PXRMDLLA",32,0)
 ;
"RTN","PXRMDLLA",33,0)
EXP(TIEN,DCUR,DTTYP) ;Expand taxonomy codes
"RTN","PXRMDLLA",34,0)
 N CODES,CNT,FILE,LIT,CAT
"RTN","PXRMDLLA",35,0)
 S FILE=$S(DTTYP="POV":80,DTTYP="CPT":81,1:"") Q:'FILE
"RTN","PXRMDLLA",36,0)
 S LIT="Selectable "_$S(FILE=80:"Diagnoses:",1:"Procedures:")
"RTN","PXRMDLLA",37,0)
 S CAT=$P($G(^PXD(811.2,TIEN,0)),U)
"RTN","PXRMDLLA",38,0)
 ;
"RTN","PXRMDLLA",39,0)
 S OCNT=OCNT+1
"RTN","PXRMDLLA",40,0)
 S ORY(OCNT)=3_U_DITEM_U_U_DTTYP_U_U_U_U_U_CAT_U_LIT
"RTN","PXRMDLLA",41,0)
 ;Get selectable codes
"RTN","PXRMDLLA",42,0)
 D CODES(FILE,TIEN,.CODES)
"RTN","PXRMDLLA",43,0)
 S CNT=0
"RTN","PXRMDLLA",44,0)
 ;Save selectable codes as type 5 records
"RTN","PXRMDLLA",45,0)
 F  S CNT=$O(CODES(CNT)) Q:'CNT  D
"RTN","PXRMDLLA",46,0)
 .S OCNT=OCNT+1,ORY(OCNT)=5_U_DITEM_U_U_DTTYP_U_U_CODES(CNT)
"RTN","PXRMDLLA",47,0)
 Q
"RTN","PXRMDLLA",48,0)
 ;
"RTN","PXRMDLLA",49,0)
FREC(DFIEN,DFTYP) ;Build type 3 record
"RTN","PXRMDLLA",50,0)
 ;Dialog type/text and resolution  
"RTN","PXRMDLLA",51,0)
 S DNAM=$$NAME(DFIEN,DFTYP),DCOD=$$CODE(DFIEN,DFTYP)
"RTN","PXRMDLLA",52,0)
 ;Translate vitals ien to PCE code - This will need a DBIA
"RTN","PXRMDLLA",53,0)
 I DPCE="VIT" D
"RTN","PXRMDLLA",54,0)
 .S DFIEN=$$GET1^DIQ(120.51,DFIEN,7,"E")
"RTN","PXRMDLLA",55,0)
 .;Vitals Caption
"RTN","PXRMDLLA",56,0)
 .S DVIT=$P($G(^PXRMD(801.41,DITEM,2)),U,4)
"RTN","PXRMDLLA",57,0)
 I DFTYP]"" D
"RTN","PXRMDLLA",58,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLLA",59,0)
 .S ORY(OCNT)=3_U_DITEM_U_U_DPCE_U_DEXC_U_DFIEN_U_DCOD_U_DNAM_U_U_DVIT
"RTN","PXRMDLLA",60,0)
 .;Get order type for orderable items
"RTN","PXRMDLLA",61,0)
 .S:DPCE="Q" $P(ORY(OCNT),U,11)=$P($G(^ORD(101.41,DFIEN,0)),U,4)
"RTN","PXRMDLLA",62,0)
 .;If mental health check if a GAF score
"RTN","PXRMDLLA",63,0)
 .I DPCE="MH",DFIEN D
"RTN","PXRMDLLA",64,0)
 ..I $P($G(^YTT(601,DFIEN,0)),U)="GAF" S $P(ORY(OCNT),U,12)=1
"RTN","PXRMDLLA",65,0)
 Q
"RTN","PXRMDLLA",66,0)
 ;
"RTN","PXRMDLLA",67,0)
GUI(IEN) ;Work out prompt type for PCE
"RTN","PXRMDLLA",68,0)
 Q:IEN="" ""
"RTN","PXRMDLLA",69,0)
 N SUB S SUB=$P($G(^PXRMD(801.41,IEN,46)),U)
"RTN","PXRMDLLA",70,0)
 Q:'SUB ""
"RTN","PXRMDLLA",71,0)
 Q $P($G(^PXRMD(801.42,SUB,0)),U)
"RTN","PXRMDLLA",72,0)
 ;
"RTN","PXRMDLLA",73,0)
LOAD(DITEM,DCUR,DTTYP) ;Load dialog questions into array
"RTN","PXRMDLLA",74,0)
 N DARRAY,DCOD,DEXC,DFIND,DFIEN,DFTYP,DNAM,DPCE,DRES,DSEQ,DSUB,DTYP,OCNT
"RTN","PXRMDLLA",75,0)
 N DVIT
"RTN","PXRMDLLA",76,0)
 ;
"RTN","PXRMDLLA",77,0)
 ;Build list of PCE codes
"RTN","PXRMDLLA",78,0)
 S DARRAY("AUTTEDT(")="PED"
"RTN","PXRMDLLA",79,0)
 S DARRAY("AUTTEXAM(")="XAM"
"RTN","PXRMDLLA",80,0)
 S DARRAY("AUTTHF(")="HF"
"RTN","PXRMDLLA",81,0)
 S DARRAY("AUTTIMM(")="IMM"
"RTN","PXRMDLLA",82,0)
 S DARRAY("AUTTSK(")="SK"
"RTN","PXRMDLLA",83,0)
 ;
"RTN","PXRMDLLA",84,0)
 S DARRAY("GMRD(120.51,")="VIT"
"RTN","PXRMDLLA",85,0)
 S DARRAY("ORD(101.41,")="Q"
"RTN","PXRMDLLA",86,0)
 S DARRAY("YTT(601,")="MH"
"RTN","PXRMDLLA",87,0)
 ;
"RTN","PXRMDLLA",88,0)
 S DARRAY("ICD9(")="POV"
"RTN","PXRMDLLA",89,0)
 S DARRAY("ICPT(")="CPT"
"RTN","PXRMDLLA",90,0)
 ;
"RTN","PXRMDLLA",91,0)
 S DARRAY("PXD(811.2,")="T" ;dialog cpt/pov is generated from taxonomy
"RTN","PXRMDLLA",92,0)
 ;
"RTN","PXRMDLLA",93,0)
 ;Get the dialog element
"RTN","PXRMDLLA",94,0)
 S OCNT=0,DTYP=$P($G(^PXRMD(801.41,DITEM,0)),U,4)
"RTN","PXRMDLLA",95,0)
 ;Finding detail
"RTN","PXRMDLLA",96,0)
 S DRES=$P($G(^PXRMD(801.41,DITEM,1)),U,3)
"RTN","PXRMDLLA",97,0)
 S DFIND=$P($G(^PXRMD(801.41,DITEM,1)),U,5)
"RTN","PXRMDLLA",98,0)
 S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2)
"RTN","PXRMDLLA",99,0)
 S DPCE="",DVIT="" I DFTYP'="" S DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLLA",100,0)
 ;Exclude from P/N
"RTN","PXRMDLLA",101,0)
 S DEXC=$P($G(^PXRMD(801.41,DITEM,2)),U,3)
"RTN","PXRMDLLA",102,0)
 ;
"RTN","PXRMDLLA",103,0)
 ;Non taxonomy codes (3 - finding record)
"RTN","PXRMDLLA",104,0)
 I DPCE'="T" D FREC(DFIEN,DFTYP)
"RTN","PXRMDLLA",105,0)
 ;
"RTN","PXRMDLLA",106,0)
 ;Taxonomy codes need expanding (3 - finding record)
"RTN","PXRMDLLA",107,0)
 I DPCE="T" D EXP(DFIEN,DCUR,DTTYP)
"RTN","PXRMDLLA",108,0)
 ;
"RTN","PXRMDLLA",109,0)
 ;Prompt details (4 - prompt records)
"RTN","PXRMDLLA",110,0)
 N ARRAY,DTITLE,DREQ,DSEQ,DSSEQ,DSUB,DTYP
"RTN","PXRMDLLA",111,0)
 ;If not a taxonomy get prompts from dialog file
"RTN","PXRMDLLA",112,0)
 I DPCE'="T" D PROTH(DITEM)
"RTN","PXRMDLLA",113,0)
 ;If a taxonomy get details from general finding parameters (CPT/POV)
"RTN","PXRMDLLA",114,0)
 I DPCE="T" D
"RTN","PXRMDLLA",115,0)
 .;Quit if finding type not passed
"RTN","PXRMDLLA",116,0)
 .Q:DTTYP=""
"RTN","PXRMDLLA",117,0)
 .N RSUB,FNODE
"RTN","PXRMDLLA",118,0)
 .;Get parameter file node for this finding type
"RTN","PXRMDLLA",119,0)
 .S FNODE=$O(^PXRMD(801.45,"B",DTTYP,"")) Q:FNODE=""
"RTN","PXRMDLLA",120,0)
 .;Derive resolution from line ien 1=done 2=done elsewhere
"RTN","PXRMDLLA",121,0)
 .S RSUB=DCUR+1 I (RSUB<1)!(RSUB>2) Q
"RTN","PXRMDLLA",122,0)
 .;Get details from 811.5
"RTN","PXRMDLLA",123,0)
 .D PRTAX(FNODE,RSUB)
"RTN","PXRMDLLA",124,0)
 ;Return array of type 4 records
"RTN","PXRMDLLA",125,0)
 S DSEQ=""
"RTN","PXRMDLLA",126,0)
 F  S DSEQ=$O(ARRAY(DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLLA",127,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLLA",128,0)
 .S ORY(OCNT)=4_U_DITEM_U_DSEQ_U_ARRAY(DSEQ)
"RTN","PXRMDLLA",129,0)
 .S DSSEQ=""
"RTN","PXRMDLLA",130,0)
 .F  S DSSEQ=$O(ARRAY(DSEQ,DSSEQ)) Q:'DSSEQ  D
"RTN","PXRMDLLA",131,0)
 ..S OCNT=OCNT+1
"RTN","PXRMDLLA",132,0)
 ..S ORY(OCNT)=4_U_DITEM_U_DSEQ_"."_DSSEQ_U_ARRAY(DSEQ,DSSEQ)
"RTN","PXRMDLLA",133,0)
 ;
"RTN","PXRMDLLA",134,0)
 ;Get progress note text if defined
"RTN","PXRMDLLA",135,0)
 I DPCE'="T" D:'DEXC PTXT(DITEM)
"RTN","PXRMDLLA",136,0)
 ;Additional findings
"RTN","PXRMDLLA",137,0)
 N FASUB
"RTN","PXRMDLLA",138,0)
 S FASUB=0
"RTN","PXRMDLLA",139,0)
 F  S FASUB=$O(^PXRMD(801.41,DITEM,3,FASUB)) Q:'FASUB  D
"RTN","PXRMDLLA",140,0)
 .S DFIND=$P($G(^PXRMD(801.41,DITEM,3,FASUB,0)),U)
"RTN","PXRMDLLA",141,0)
 .S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2) Q:DFTYP=""  Q:DFIEN=""
"RTN","PXRMDLLA",142,0)
 .S DVIT="",DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLLA",143,0)
 .I DPCE'="" D FREC(DFIEN,DFTYP)
"RTN","PXRMDLLA",144,0)
 Q
"RTN","PXRMDLLA",145,0)
 ;
"RTN","PXRMDLLA",146,0)
 ;Returns item name
"RTN","PXRMDLLA",147,0)
NAME(DFIEN,DFTYP) ;
"RTN","PXRMDLLA",148,0)
 Q:DFTYP="" ""
"RTN","PXRMDLLA",149,0)
 Q:DFIEN="" ""
"RTN","PXRMDLLA",150,0)
 N NAME,FGLOB,POSN
"RTN","PXRMDLLA",151,0)
 I DFTYP["ICD9" S NAME=$P($G(^ICD9(DFIEN,1)),U) Q:NAME]"" NAME
"RTN","PXRMDLLA",152,0)
 S POSN=2
"RTN","PXRMDLLA",153,0)
 S:DFTYP["AUTT" POSN=1 S:DFTYP["AUTTEDT" POSN=4 S:DFTYP["ICD" POSN=3
"RTN","PXRMDLLA",154,0)
 S FGLOB=U_DFTYP_DFIEN_",0)",NAME=$P($G(@FGLOB),U,POSN)
"RTN","PXRMDLLA",155,0)
 I (POSN>1),NAME="" S NAME=$P($G(@FGLOB),U)
"RTN","PXRMDLLA",156,0)
 I NAME="" S NAME=DFIEN
"RTN","PXRMDLLA",157,0)
 Q NAME
"RTN","PXRMDLLA",158,0)
 ;
"RTN","PXRMDLLA",159,0)
PROTH(IEN) ; Additional prompts defined in 801.41
"RTN","PXRMDLLA",160,0)
 N DDATA,DDEF,DIEN,DEXC,DGUI,DNAME,DOVR,DREQ,DSEQ,DSNL,DSUB,DTXT,DTYP
"RTN","PXRMDLLA",161,0)
 S DSEQ=0
"RTN","PXRMDLLA",162,0)
 F  S DSEQ=$O(^PXRMD(801.41,IEN,10,"B",DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLLA",163,0)
 .;Get prompts in sequence
"RTN","PXRMDLLA",164,0)
 .S DSUB=$O(^PXRMD(801.41,IEN,10,"B",DSEQ,"")) Q:'DSUB
"RTN","PXRMDLLA",165,0)
 .;Prompt ien
"RTN","PXRMDLLA",166,0)
 .S DIEN=$P($G(^PXRMD(801.41,IEN,10,DSUB,0)),U,2) Q:'DIEN
"RTN","PXRMDLLA",167,0)
 .;Ignore disabled components, and those that are not prompts
"RTN","PXRMDLLA",168,0)
 .Q:($P($G(^PXRMD(801.41,DIEN,0)),U,3)]"")!("PF"'[$P($G(^(0)),U,4))
"RTN","PXRMDLLA",169,0)
 .;Set defaults to null
"RTN","PXRMDLLA",170,0)
 .S DDEF="",DEXC="",DREQ="",DSNL=""
"RTN","PXRMDLLA",171,0)
 .;Prompt name and GUI process (quit if null)
"RTN","PXRMDLLA",172,0)
 .S DNAME=$P($G(^PXRMD(801.41,DIEN,0)),U),DGUI=$$GUI(DIEN)
"RTN","PXRMDLLA",173,0)
 .;Type Prompt or Forced
"RTN","PXRMDLLA",174,0)
 .S DTYP=$P($G(^PXRMD(801.41,DIEN,0)),U,4)
"RTN","PXRMDLLA",175,0)
 .I "PF"[DTYP D
"RTN","PXRMDLLA",176,0)
 ..;Required/Prompt caption
"RTN","PXRMDLLA",177,0)
 ..S DDATA=$G(^PXRMD(801.41,DIEN,2)),DTXT=$P(DDATA,U,4)
"RTN","PXRMDLLA",178,0)
 ..;Default value or forced value
"RTN","PXRMDLLA",179,0)
 ..S:DTYP="P" DDEF=$P(DDATA,U) S:DTYP="F" DDEF=$P(DDATA,U,2)
"RTN","PXRMDLLA",180,0)
 ..;Override caption/start new line/exclude PN from dialog file
"RTN","PXRMDLLA",181,0)
 ..S DDATA=$G(^PXRMD(801.41,IEN,10,DSUB,0)),DREQ=$P(DDATA,U,9)
"RTN","PXRMDLLA",182,0)
 ..S DOVR=$P(DDATA,U,6),DSNL=$P(DDATA,U,7),DEXC=$P(DDATA,U,8)
"RTN","PXRMDLLA",183,0)
 ..S DNAME=DTXT I DOVR]"" S DNAME=DOVR
"RTN","PXRMDLLA",184,0)
 ..;Convert date to fileman format
"RTN","PXRMDLLA",185,0)
 ..I DGUI="VST_DATE",DDEF["T" S DDEF=$$DT^XLFDT()
"RTN","PXRMDLLA",186,0)
 .S ARRAY(DSEQ)=DGUI_U_DEXC_U_DDEF_U_DTYP_U_DNAME_U_DSNL_U_DREQ
"RTN","PXRMDLLA",187,0)
 .;Additional checkboxes
"RTN","PXRMDLLA",188,0)
 .I DGUI="COM",DIEN>1 D
"RTN","PXRMDLLA",189,0)
 ..N DSSEQ,DSUB,DTEXT
"RTN","PXRMDLLA",190,0)
 ..S DSSEQ=0
"RTN","PXRMDLLA",191,0)
 ..F  S DSSEQ=$O(^PXRMD(801.41,DIEN,45,"B",DSSEQ)) Q:'DSSEQ  D
"RTN","PXRMDLLA",192,0)
 ...S DSUB=$O(^PXRMD(801.41,DIEN,45,"B",DSSEQ,"")) Q:'DSUB
"RTN","PXRMDLLA",193,0)
 ...S DTEXT=$P($G(^PXRMD(801.41,DIEN,45,DSUB,0)),U,2) Q:DTEXT=""
"RTN","PXRMDLLA",194,0)
 ...S ARRAY(DSEQ,DSSEQ)=U_DEXC_U_DDEF_U_DTYP_U_DTEXT_U_DSNL_U_DREQ
"RTN","PXRMDLLA",195,0)
 Q
"RTN","PXRMDLLA",196,0)
 ;
"RTN","PXRMDLLA",197,0)
PRTAX(FNODE,RSUB) ;Get all additional fields for this resolution type
"RTN","PXRMDLLA",198,0)
 N ACNT,ASUB
"RTN","PXRMDLLA",199,0)
 N DDATA,DDEF,DEXC,DGUI,DNAME,DREQ,DSEQ,DSUB,DTYP
"RTN","PXRMDLLA",200,0)
 S ASUB=0,DSEQ=0
"RTN","PXRMDLLA",201,0)
 F  S ASUB=$O(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB)) Q:'ASUB  D
"RTN","PXRMDLLA",202,0)
 .S DDATA=$G(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB,0)) Q:DDATA=""
"RTN","PXRMDLLA",203,0)
 .;Ignore if disabled
"RTN","PXRMDLLA",204,0)
 .I $P(DDATA,U,3)=1 Q
"RTN","PXRMDLLA",205,0)
 .S DSUB=$P(DDATA,U) Q:DDATA=""
"RTN","PXRMDLLA",206,0)
 .S DSEQ=DSEQ+1
"RTN","PXRMDLLA",207,0)
 .;Set defaults to null
"RTN","PXRMDLLA",208,0)
 .S DDEF="",DEXC="",DREQ="",DSNL=""
"RTN","PXRMDLLA",209,0)
 .;Prompt name and GUI process (quit if null)
"RTN","PXRMDLLA",210,0)
 .S DNAME=$P($G(^PXRMD(801.41,DSUB,0)),U),DGUI=$$GUI(DSUB)
"RTN","PXRMDLLA",211,0)
 .;Type Prompt or Forced
"RTN","PXRMDLLA",212,0)
 .S DTYP=$P($G(^PXRMD(801.41,DSUB,0)),U,4)
"RTN","PXRMDLLA",213,0)
 .I DTYP="P" D
"RTN","PXRMDLLA",214,0)
 ..S DREQ=$P(DDATA,U,2),DTXT=$P($G(^PXRMD(801.41,DSUB,2)),U,4)
"RTN","PXRMDLLA",215,0)
 ..;Override caption/start new line/exclude from PN from finding type 
"RTN","PXRMDLLA",216,0)
 ..S DOVR=$P(DDATA,U,5),DSNL=$P(DDATA,U,6),DEXC=$P(DDATA,U,7)
"RTN","PXRMDLLA",217,0)
 ..S DNAME=DTXT I DOVR]"" S DNAME=DOVR
"RTN","PXRMDLLA",218,0)
 ..;Required/Prompt caption
"RTN","PXRMDLLA",219,0)
 ..S DDATA=$G(^PXRMD(801.41,DSUB,2))
"RTN","PXRMDLLA",220,0)
 .S ARRAY(DSEQ)=DGUI_U_DEXC_U_DDEF_U_DTYP_U_DNAME_U_DSNL_U_DREQ
"RTN","PXRMDLLA",221,0)
 Q
"RTN","PXRMDLLA",222,0)
 ;
"RTN","PXRMDLLA",223,0)
PTXT(ITEM) ;Get progress note (WP) text for type 6 records
"RTN","PXRMDLLA",224,0)
 N LAST,NULL,SUB,TEXT S SUB=0,LAST=0
"RTN","PXRMDLLA",225,0)
 F  S SUB=$O(^PXRMD(801.41,ITEM,35,SUB)) Q:'SUB  D
"RTN","PXRMDLLA",226,0)
 .S TEXT=$G(^PXRMD(801.41,ITEM,35,SUB,0))
"RTN","PXRMDLLA",227,0)
 .S NULL=0 I (TEXT="")!($E(TEXT)=" ") S NULL=1
"RTN","PXRMDLLA",228,0)
 .I LAST,'NULL S TEXT="<br>"_TEXT
"RTN","PXRMDLLA",229,0)
 .S LAST=0 I NULL S TEXT="<br>"_TEXT,LAST=1
"RTN","PXRMDLLA",230,0)
 .S OCNT=OCNT+1,ORY(OCNT)=6_U_ITEM_U_U_TEXT
"RTN","PXRMDLLA",231,0)
 Q
"RTN","PXRMDLLA",232,0)
 ;
"RTN","PXRMDLLA",233,0)
TOK(TIEN,TYPE) ;Check if selectable codes exist
"RTN","PXRMDLLA",234,0)
 N DATA,FOUND,SUB
"RTN","PXRMDLLA",235,0)
 S FOUND=0,SUB=0
"RTN","PXRMDLLA",236,0)
 F  S SUB=$O(^PXD(811.2,TIEN,TYPE,SUB)) Q:'SUB  D  Q:FOUND
"RTN","PXRMDLLA",237,0)
 .S DATA=$G(^PXD(811.2,TIEN,TYPE,SUB,0)) Q:DATA=""
"RTN","PXRMDLLA",238,0)
 .;Ignore disabled codes
"RTN","PXRMDLLA",239,0)
 .I '$P(DATA,U,3) S FOUND=1
"RTN","PXRMDLLA",240,0)
 Q FOUND
"RTN","PXRMDLLA",241,0)
 ;
"RTN","PXRMDLLA",242,0)
TEST(ORY,DITEM,DCUR,DTTYP) ;
"RTN","PXRMDLLA",243,0)
 D LOAD(DITEM,DCUR,DTTYP)
"RTN","PXRMDLLA",244,0)
 Q
"RTN","PXRMDRCL")
0^60^B12534102
"RTN","PXRMDRCL",1,0)
PXRMDRCL ; SLC/PKR - Handle VA DRUG CLASS findings. ;06/07/2001
"RTN","PXRMDRCL",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMDRCL",3,0)
 ;
"RTN","PXRMDRCL",4,0)
 ;=======================================================================
"RTN","PXRMDRCL",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate drug class (file #50.605) findings.
"RTN","PXRMDRCL",6,0)
 N DRCLIEN,FIND0,FINDING
"RTN","PXRMDRCL",7,0)
 S DRCLIEN=""
"RTN","PXRMDRCL",8,0)
 F  S DRCLIEN=$O(^PXD(811.9,PXRMITEM,20,"E","PS(50.605,",DRCLIEN)) Q:+DRCLIEN=0  D
"RTN","PXRMDRCL",9,0)
 . S FINDING=""
"RTN","PXRMDRCL",10,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","PS(50.605,",DRCLIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMDRCL",11,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDRCL",12,0)
 .. D FIEVAL(DFN,DRCLIEN,FIND0,"",FINDING,.FIEVAL)
"RTN","PXRMDRCL",13,0)
 Q
"RTN","PXRMDRCL",14,0)
 ;
"RTN","PXRMDRCL",15,0)
 ;=======================================================================
"RTN","PXRMDRCL",16,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate drug class (file #50.605) terms.
"RTN","PXRMDRCL",17,0)
 N DRCLIEN,FIND0,TFIND0,TFINDING
"RTN","PXRMDRCL",18,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDRCL",19,0)
 S DRCLIEN=""
"RTN","PXRMDRCL",20,0)
 F  S DRCLIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","PS(50.605,",DRCLIEN)) Q:+DRCLIEN=0  D
"RTN","PXRMDRCL",21,0)
 . S TFINDING=""
"RTN","PXRMDRCL",22,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","PS(50.605,",DRCLIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMDRCL",23,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMDRCL",24,0)
 .. D FIEVAL(DFN,DRCLIEN,FIND0,TFIND0,TFINDING,.TFIEVAL)
"RTN","PXRMDRCL",25,0)
 Q
"RTN","PXRMDRCL",26,0)
 ;
"RTN","PXRMDRCL",27,0)
 ;=======================================================================
"RTN","PXRMDRCL",28,0)
FIEVAL(DFN,DRCLIEN,FIND0,TFIND0,FINDING,FIEVAL) ;
"RTN","PXRMDRCL",29,0)
 N DATE,DRUGCLAS,DRUG,DRUGIEN,DSUP,LDATE,RDATE,RXTYPE,SDATE,STATUS,VALID
"RTN","PXRMDRCL",30,0)
 S RXTYPE=$P(TFIND0,U,13)
"RTN","PXRMDRCL",31,0)
 I RXTYPE="" S RXTYPE=$P(FIND0,U,13)
"RTN","PXRMDRCL",32,0)
 I RXTYPE="B" S RXTYPE=""
"RTN","PXRMDRCL",33,0)
 S DRUGCLAS=$$CLASS2^PSNAPIS(DRCLIEN)
"RTN","PXRMDRCL",34,0)
 ;Use the "VAC" cross-reference on file 50 to find all drugs in this
"RTN","PXRMDRCL",35,0)
 ;class
"RTN","PXRMDRCL",36,0)
 S DATE=0
"RTN","PXRMDRCL",37,0)
 S DRUGIEN=0
"RTN","PXRMDRCL",38,0)
 F  S DRUGIEN=$O(^PSDRUG("VAC",DRCLIEN,DRUGIEN)) Q:+DRUGIEN=0  D
"RTN","PXRMDRCL",39,0)
 . S DRUG=$$GET1^DIQ(50,DRUGIEN,.01)
"RTN","PXRMDRCL",40,0)
 . D LDATE^PXRMDRUG(DFN,DRUG,RXTYPE,.DSUP,.LDATE,.RDATE,.SDATE,.STATUS)
"RTN","PXRMDRCL",41,0)
 . I LDATE>DATE D
"RTN","PXRMDRCL",42,0)
 .. S DATE=LDATE
"RTN","PXRMDRCL",43,0)
 .. S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMDRCL",44,0)
 .. S FIEVAL(FINDING,"DRUG")=DRUG
"RTN","PXRMDRCL",45,0)
 .. I DSUP>0 S FIEVAL(FINDING,"DSUP")=DSUP
"RTN","PXRMDRCL",46,0)
 .. I RDATE>0 S FIEVAL(FINDING,"RDATE")=RDATE
"RTN","PXRMDRCL",47,0)
 .. I SDATE>0 S FIEVAL(FINDING,"SDATE")=SDATE
"RTN","PXRMDRCL",48,0)
 .. S FIEVAL(FINDING,"STATUS")=STATUS
"RTN","PXRMDRCL",49,0)
 ;If the last date is 0 then there is no release date or stop date
"RTN","PXRMDRCL",50,0)
 ;and the finding is false.
"RTN","PXRMDRCL",51,0)
 I +DATE=0 D  Q
"RTN","PXRMDRCL",52,0)
 . K FIEVAL(FINDING)
"RTN","PXRMDRCL",53,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMDRCL",54,0)
 ;Save the rest of the finding information.
"RTN","PXRMDRCL",55,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMDRCL",56,0)
 S FIEVAL(FINDING,"DRUG CLASS")=DRUGCLAS
"RTN","PXRMDRCL",57,0)
 S FIEVAL(FINDING,"FINDING")=DRCLIEN_";PS(50.605,"
"RTN","PXRMDRCL",58,0)
 ;Determine if the finding has expired.
"RTN","PXRMDRCL",59,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMDRCL",60,0)
 I 'VALID D
"RTN","PXRMDRCL",61,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMDRCL",62,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMDRCL",63,0)
 Q
"RTN","PXRMDRCL",64,0)
 ;
"RTN","PXRMDRCL",65,0)
 ;=======================================================================
"RTN","PXRMDRCL",66,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMDRCL",67,0)
 ;maintenance output.
"RTN","PXRMDRCL",68,0)
 N DATE,DRUG,DRUGCLAS,TEMP
"RTN","PXRMDRCL",69,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMDRCL",70,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMDRCL",71,0)
 S TEMP=TEMP_" Drug Class: "
"RTN","PXRMDRCL",72,0)
 S DRUGCLAS=FIEVAL(FINDING,"DRUG CLASS")
"RTN","PXRMDRCL",73,0)
 S TEMP=TEMP_$P(DRUGCLAS,U,1)_"-"_$P(DRUGCLAS,U,2)
"RTN","PXRMDRCL",74,0)
 S DRUG=FIEVAL(FINDING,"DRUG")
"RTN","PXRMDRCL",75,0)
 S TEMP=TEMP_" (Drug: "_DRUG_")"
"RTN","PXRMDRCL",76,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMDRCL",77,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMDRCL",78,0)
 S NLINES=NLINES+1
"RTN","PXRMDRCL",79,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDRCL",80,0)
 S TEMP="Status: "_FIEVAL(FINDING,"STATUS")
"RTN","PXRMDRCL",81,0)
 I $D(FIEVAL(FINDING,"RDATE")) S TEMP=TEMP_" Last release date:"_$$EDATE^PXRMDATE(FIEVAL(FINDING,"RDATE"))
"RTN","PXRMDRCL",82,0)
 I $D(FIEVAL(FINDING,"DSUP")) S TEMP=TEMP_" Days supply:"_FIEVAL(FINDING,"DSUP")
"RTN","PXRMDRCL",83,0)
 I $D(FIEVAL(FINDING,"SDATE")) S TEMP=TEMP_" Stop date:"_$$EDATE^PXRMDATE(FIEVAL(FINDING,"SDATE"))
"RTN","PXRMDRCL",84,0)
 S NLINES=NLINES+1
"RTN","PXRMDRCL",85,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDRCL",86,0)
 I $D(PXRMDEV) D
"RTN","PXRMDRCL",87,0)
 . N UID
"RTN","PXRMDRCL",88,0)
 . S UID="DRUG CLASS "_DRUGCLAS
"RTN","PXRMDRCL",89,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMDRCL",90,0)
 Q
"RTN","PXRMDRCL",91,0)
 ;
"RTN","PXRMDRUG")
0^61^B41036660
"RTN","PXRMDRUG",1,0)
PXRMDRUG ; SLC/PKR - Handle drug findings. ;07/11/2001
"RTN","PXRMDRUG",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMDRUG",3,0)
 ;
"RTN","PXRMDRUG",4,0)
 ;=======================================================================
"RTN","PXRMDRUG",5,0)
BLDCACHE(DFN) ;Build the patient drug cache.
"RTN","PXRMDRUG",6,0)
 N PXRMDFN S PXRMDFN="PXRMDFN"_DFN
"RTN","PXRMDRUG",7,0)
 K ^TMP("PS",$J),^XTMP(PXRMDFN,"PSDRUG")
"RTN","PXRMDRUG",8,0)
 N DRUG,DRUGIEN,DSUP,IND,OITEM,ORDER,POI,RDATE,SDATE,STATUS,TEMP
"RTN","PXRMDRUG",9,0)
 ;Start the search for drugs on the patient's date of birth
"RTN","PXRMDRUG",10,0)
 ;to make sure we get all of them.
"RTN","PXRMDRUG",11,0)
 D OCL^PSOORRL(DFN,PXRMDOB,"")
"RTN","PXRMDRUG",12,0)
 S IND=0
"RTN","PXRMDRUG",13,0)
 F  S IND=$O(^TMP("PS",$J,IND)) Q:+IND=0  D
"RTN","PXRMDRUG",14,0)
 . S TEMP=^TMP("PS",$J,IND,0)
"RTN","PXRMDRUG",15,0)
 . S ORDER=$P(TEMP,U,1)
"RTN","PXRMDRUG",16,0)
 . I $L(ORDER)=0 Q
"RTN","PXRMDRUG",17,0)
 . S DRUG=$P(TEMP,U,2)
"RTN","PXRMDRUG",18,0)
 . S STATUS=$P(TEMP,U,9)
"RTN","PXRMDRUG",19,0)
 .;Look for DRUG file entries, if not there then probably pharmacy
"RTN","PXRMDRUG",20,0)
 .;orderable item.
"RTN","PXRMDRUG",21,0)
 . I $L(DRUG)=0 S DRUGIEN=0
"RTN","PXRMDRUG",22,0)
 . E  S DRUGIEN=+$O(^PSDRUG("B",DRUG,""))
"RTN","PXRMDRUG",23,0)
 . I DRUGIEN>0 D
"RTN","PXRMDRUG",24,0)
 .. I ORDER["O" D
"RTN","PXRMDRUG",25,0)
 ... S RDATE=+$P(TEMP,U,16)
"RTN","PXRMDRUG",26,0)
 ... S DSUP=+$P(TEMP,U,17)
"RTN","PXRMDRUG",27,0)
 ... S DATE=+$$FMADD^XLFDT(RDATE,DSUP)
"RTN","PXRMDRUG",28,0)
 ... S ^XTMP(PXRMDFN,"PSDRUG",DRUG,DATE)=ORDER_U_STATUS_U_RDATE_U_DSUP
"RTN","PXRMDRUG",29,0)
 .. I ORDER["I" D
"RTN","PXRMDRUG",30,0)
 ... S SDATE=+$P(TEMP,U,4)
"RTN","PXRMDRUG",31,0)
 ... I SDATE=0 D SDERR(ORDER)  Q
"RTN","PXRMDRUG",32,0)
 ... S ^XTMP(PXRMDFN,"PSDRUG",DRUG,SDATE)=ORDER_U_STATUS_SDATE
"RTN","PXRMDRUG",33,0)
 . E  S POI(ORDER)=""
"RTN","PXRMDRUG",34,0)
 K ^TMP("PS",$J)
"RTN","PXRMDRUG",35,0)
 ;Process the pharmacy orderable item list.
"RTN","PXRMDRUG",36,0)
 S ORDER=""
"RTN","PXRMDRUG",37,0)
 F  S ORDER=$O(POI(ORDER)) Q:ORDER=""  D
"RTN","PXRMDRUG",38,0)
 . D OEL^PSOORRL(DFN,ORDER)
"RTN","PXRMDRUG",39,0)
 . I '$D(^TMP("PS",$J,"DD")) K ^TMP("PS",$J) Q
"RTN","PXRMDRUG",40,0)
 . S SDATE=+$P(^TMP("PS",$J,0),U,3)
"RTN","PXRMDRUG",41,0)
 . I SDATE=0 D SDERR(ORDER)  Q
"RTN","PXRMDRUG",42,0)
 . F IND=+$G(^TMP("PS",$J,"DD",0)) Q:+IND=0  D
"RTN","PXRMDRUG",43,0)
 ..;Get the dispense drug.
"RTN","PXRMDRUG",44,0)
 .. S DRUGIEN=+$P(^TMP("PS",$J,"DD",IND,0),U,1)
"RTN","PXRMDRUG",45,0)
 .. I (DRUGIEN=0) D  Q
"RTN","PXRMDRUG",46,0)
 ... I ($P(ORDER,";",1)'["P")!($P(ORDER,";",2)'="I") D
"RTN","PXRMDRUG",47,0)
 .... N XMSUB
"RTN","PXRMDRUG",48,0)
 .... K ^TMP("PXRMXMZ",$J)
"RTN","PXRMDRUG",49,0)
 .... S XMSUB="CLINICAL REMINDER DATA PROBLEM, INPATIENT MEDICATION"
"RTN","PXRMDRUG",50,0)
 .... S ^TMP("PXRMXMZ",$J,1,0)="Warning - Pharmacy order "_ORDER_", for patient DFN= "_DFN_","
"RTN","PXRMDRUG",51,0)
 .... S ^TMP("PXRMXMZ",$J,2,0)="is missing the dispense drug."
"RTN","PXRMDRUG",52,0)
 .... S OITEM=+$P(^TMP("PS",$J,"DD",IND,0),U,4)
"RTN","PXRMDRUG",53,0)
 .... I OITEM>0 S OITEM=$P(^ORD(101.43,OITEM,0),U,1)
"RTN","PXRMDRUG",54,0)
 .... E  S OITEM="Missing"
"RTN","PXRMDRUG",55,0)
 .... S ^TMP("PXRMXMZ",$J,3,0)="Orderable item: "_OITEM
"RTN","PXRMDRUG",56,0)
 .... S ^TMP("PXRMXMZ",$J,4,0)="This indicates a possible data problem."
"RTN","PXRMDRUG",57,0)
 .... D SEND^PXRMMSG(XMSUB)
"RTN","PXRMDRUG",58,0)
 .. S DRUG=$P(^PSDRUG(DRUGIEN,0),U,1)
"RTN","PXRMDRUG",59,0)
 .. S ^XTMP(PXRMDFN,"PSDRUG",DRUG,SDATE)=ORDER_U_STATUS_U_SDATE
"RTN","PXRMDRUG",60,0)
 . K ^TMP("PS",$J)
"RTN","PXRMDRUG",61,0)
 K ^TMP("PS",$J)
"RTN","PXRMDRUG",62,0)
 Q
"RTN","PXRMDRUG",63,0)
 ;
"RTN","PXRMDRUG",64,0)
 ;=======================================================================
"RTN","PXRMDRUG",65,0)
EVALFI(DFN,FIEVAL) ;Evaluate drug (file #50) findings.
"RTN","PXRMDRUG",66,0)
 N DRUGIEN,FIND0,FIND3,FINDING
"RTN","PXRMDRUG",67,0)
 S DRUGIEN=""
"RTN","PXRMDRUG",68,0)
 F  S DRUGIEN=$O(^PXD(811.9,PXRMITEM,20,"E","PSDRUG(",DRUGIEN)) Q:+DRUGIEN=0  D
"RTN","PXRMDRUG",69,0)
 . S FINDING=""
"RTN","PXRMDRUG",70,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","PSDRUG(",DRUGIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMDRUG",71,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDRUG",72,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMDRUG",73,0)
 .. D FIEVAL(DFN,DRUGIEN,FIND0,FIND3,"","",FINDING,.FIEVAL)
"RTN","PXRMDRUG",74,0)
 Q
"RTN","PXRMDRUG",75,0)
 ;
"RTN","PXRMDRUG",76,0)
 ;=======================================================================
"RTN","PXRMDRUG",77,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate drug (file #50) terms.
"RTN","PXRMDRUG",78,0)
 N DRUGIEN,FIND0,FIND3,TFIND0,TFIND3,TFINDING
"RTN","PXRMDRUG",79,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDRUG",80,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMDRUG",81,0)
 S DRUGIEN=""
"RTN","PXRMDRUG",82,0)
 F  S DRUGIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","PSDRUG(",DRUGIEN)) Q:+DRUGIEN=0  D
"RTN","PXRMDRUG",83,0)
 . S TFINDING=""
"RTN","PXRMDRUG",84,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","PSDRUG(",DRUGIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMDRUG",85,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMDRUG",86,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMDRUG",87,0)
 .. D FIEVAL(DFN,DRUGIEN,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL)
"RTN","PXRMDRUG",88,0)
 Q
"RTN","PXRMDRUG",89,0)
 ;
"RTN","PXRMDRUG",90,0)
 ;=======================================================================
"RTN","PXRMDRUG",91,0)
FIEVAL(DFN,DRUGIEN,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL) ;
"RTN","PXRMDRUG",92,0)
 N CONVAL,DRUG,DSUP,LDATE,RDATE,RXTYPE,SDATE,STATUS,VALID
"RTN","PXRMDRUG",93,0)
 S RXTYPE=$P(TFIND0,U,13)
"RTN","PXRMDRUG",94,0)
 I RXTYPE="" S RXTYPE=$P(FIND0,U,13)
"RTN","PXRMDRUG",95,0)
 I RXTYPE="B" S RXTYPE=""
"RTN","PXRMDRUG",96,0)
 S DRUG=$P(^PSDRUG(DRUGIEN,0),U,1)
"RTN","PXRMDRUG",97,0)
 D LDATE(DFN,DRUG,RXTYPE,.DSUP,.LDATE,.RDATE,.SDATE,.STATUS)
"RTN","PXRMDRUG",98,0)
 ;If the last date is 0 then there is no release or stop date and the
"RTN","PXRMDRUG",99,0)
 ;finding is false.
"RTN","PXRMDRUG",100,0)
 I +LDATE=0 S FIEVAL(FINDING)=0 Q
"RTN","PXRMDRUG",101,0)
 ;Save the rest of the finding information.
"RTN","PXRMDRUG",102,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMDRUG",103,0)
 S FIEVAL(FINDING,"DATE")=LDATE
"RTN","PXRMDRUG",104,0)
 S FIEVAL(FINDING,"DRUG")=DRUG
"RTN","PXRMDRUG",105,0)
 I DSUP>0 S FIEVAL(FINDING,"DSUP")=DSUP
"RTN","PXRMDRUG",106,0)
 I RDATE>0 S FIEVAL(FINDING,"RDATE")=RDATE
"RTN","PXRMDRUG",107,0)
 I SDATE>0 S FIEVAL(FINDING,"SDATE")=SDATE
"RTN","PXRMDRUG",108,0)
 S FIEVAL(FINDING,"STATUS")=STATUS
"RTN","PXRMDRUG",109,0)
 S FIEVAL(FINDING,"FINDING")=DRUGIEN_";PSDRUG("
"RTN","PXRMDRUG",110,0)
 ;Determine if the finding has expired.
"RTN","PXRMDRUG",111,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,LDATE)
"RTN","PXRMDRUG",112,0)
 I 'VALID D
"RTN","PXRMDRUG",113,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMDRUG",114,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMDRUG",115,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMDRUG",116,0)
 S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,"")
"RTN","PXRMDRUG",117,0)
 I CONVAL'="" D
"RTN","PXRMDRUG",118,0)
 . I CONVAL D
"RTN","PXRMDRUG",119,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMDRUG",120,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMDRUG",121,0)
 . E  D
"RTN","PXRMDRUG",122,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMDRUG",123,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMDRUG",124,0)
 Q
"RTN","PXRMDRUG",125,0)
 ;
"RTN","PXRMDRUG",126,0)
 ;=======================================================================
"RTN","PXRMDRUG",127,0)
LDATE(DFN,DRUG,RXTYPE,DSUP,LDATE,RDATE,SDATE,STATUS) ;Return last date
"RTN","PXRMDRUG",128,0)
 ;patient is on drug, refill date, days supply, or stop date, and status.
"RTN","PXRMDRUG",129,0)
 N DATE,ORDER,TEMP
"RTN","PXRMDRUG",130,0)
 I '$D(^XTMP(PXRMDFN,"PSDRUG")) D BLDCACHE(DFN)
"RTN","PXRMDRUG",131,0)
 I '$D(^XTMP(PXRMDFN,"PSDRUG",DRUG))="" S FIEVAL(FINDING)=0 Q 0
"RTN","PXRMDRUG",132,0)
 S (DSUP,RDATE,SDATE)=0
"RTN","PXRMDRUG",133,0)
 S LDATE=+$O(^XTMP(PXRMDFN,"PSDRUG",DRUG,""),-1)
"RTN","PXRMDRUG",134,0)
 I LDATE=0 Q
"RTN","PXRMDRUG",135,0)
 S TEMP=^XTMP(PXRMDFN,"PSDRUG",DRUG,LDATE)
"RTN","PXRMDRUG",136,0)
 S ORDER=$P(TEMP,U,1)
"RTN","PXRMDRUG",137,0)
 ;Make sure the Rx Type is in the order. Null RXTYPE is contained in
"RTN","PXRMDRUG",138,0)
 ;both I and O orders.
"RTN","PXRMDRUG",139,0)
 I ORDER[RXTYPE S STATUS=$P(TEMP,U,2)
"RTN","PXRMDRUG",140,0)
 E  S LDATE=0  Q
"RTN","PXRMDRUG",141,0)
 S DATE=$P(TEMP,U,3)
"RTN","PXRMDRUG",142,0)
 I ORDER["O" D
"RTN","PXRMDRUG",143,0)
 . S RDATE=DATE
"RTN","PXRMDRUG",144,0)
 . S DSUP=$P(TEMP,U,4)
"RTN","PXRMDRUG",145,0)
 E  S SDATE=DATE
"RTN","PXRMDRUG",146,0)
 Q
"RTN","PXRMDRUG",147,0)
 ;
"RTN","PXRMDRUG",148,0)
 ;=======================================================================
"RTN","PXRMDRUG",149,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMDRUG",150,0)
 ;maintenance output.
"RTN","PXRMDRUG",151,0)
 N DATE,DRUG,TEMP
"RTN","PXRMDRUG",152,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMDRUG",153,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMDRUG",154,0)
 S TEMP=TEMP_" Drug: "
"RTN","PXRMDRUG",155,0)
 S DRUG=FIEVAL(FINDING,"DRUG")
"RTN","PXRMDRUG",156,0)
 S TEMP=TEMP_DRUG
"RTN","PXRMDRUG",157,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMDRUG",158,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMDRUG",159,0)
 S NLINES=NLINES+1
"RTN","PXRMDRUG",160,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDRUG",161,0)
 S TEMP="Status: "_FIEVAL(FINDING,"STATUS")
"RTN","PXRMDRUG",162,0)
 I $D(FIEVAL(FINDING,"RDATE")) S TEMP=TEMP_" Last release date: "_$$EDATE^PXRMDATE(FIEVAL(FINDING,"RDATE"))
"RTN","PXRMDRUG",163,0)
 I $D(FIEVAL(FINDING,"DSUP")) S TEMP=TEMP_" Days supply: "_FIEVAL(FINDING,"DSUP")
"RTN","PXRMDRUG",164,0)
 I $D(FIEVAL(FINDING,"SDATE")) S TEMP=TEMP_" Stop date: "_$$EDATE^PXRMDATE(FIEVAL(FINDING,"SDATE"))
"RTN","PXRMDRUG",165,0)
 S NLINES=NLINES+1
"RTN","PXRMDRUG",166,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDRUG",167,0)
 I $D(PXRMDEV) D
"RTN","PXRMDRUG",168,0)
 . N UID
"RTN","PXRMDRUG",169,0)
 . S UID="DRUG "_DRUG
"RTN","PXRMDRUG",170,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMDRUG",171,0)
 Q
"RTN","PXRMDRUG",172,0)
 ;
"RTN","PXRMDRUG",173,0)
 ;=======================================================================
"RTN","PXRMDRUG",174,0)
SDERR(ORDER) ;If the Stop Date is missing and the order is not pending
"RTN","PXRMDRUG",175,0)
 ;send an error message.
"RTN","PXRMDRUG",176,0)
 I ($P(ORDER,";",1)["P") Q
"RTN","PXRMDRUG",177,0)
 N XMSUB
"RTN","PXRMDRUG",178,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMDRUG",179,0)
 S XMSUB="CLINICAL REMINDER DATA PROBLEM, INPATIENT MEDICATION"
"RTN","PXRMDRUG",180,0)
 S ^TMP("PXRMXMZ",$J,1,0)="Warning - Pharmacy order "_ORDER_", for patient DFN= "_DFN_","
"RTN","PXRMDRUG",181,0)
 S ^TMP("PXRMXMZ",$J,2,0)="is missing the stop date."
"RTN","PXRMDRUG",182,0)
 S ^TMP("PXRMXMZ",$J,3,0)="This indicates a possible data problem."
"RTN","PXRMDRUG",183,0)
 D SEND^PXRMMSG(XMSUB)
"RTN","PXRMDRUG",184,0)
 Q
"RTN","PXRMDRUG",185,0)
 ;
"RTN","PXRMERRH")
0^63^B9074765
"RTN","PXRMERRH",1,0)
PXRMERRH ; SLC/PKR - Error handling routines. ;06/07/2001
"RTN","PXRMERRH",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMERRH",3,0)
 ;
"RTN","PXRMERRH",4,0)
 ;======================================================================
"RTN","PXRMERRH",5,0)
ERRHDLR ;PXRM error handler. Send a MailMan message to the mail group defined
"RTN","PXRMERRH",6,0)
 ;by the site and put the error in the error trap.
"RTN","PXRMERRH",7,0)
 N ERROR,MGIEN,MGROUP,NL,REMINDER,XMDUZ,XMSUB,XMY,XMZ
"RTN","PXRMERRH",8,0)
 ;
"RTN","PXRMERRH",9,0)
 ;Save the error then put it in the error trap, this saves the correct
"RTN","PXRMERRH",10,0)
 ;last global reference.
"RTN","PXRMERRH",11,0)
 S ERROR=$$EC^%ZOSV
"RTN","PXRMERRH",12,0)
 D ^%ZTER
"RTN","PXRMERRH",13,0)
 ;
"RTN","PXRMERRH",14,0)
 ;If this is a test run write out the error.
"RTN","PXRMERRH",15,0)
 I $D(PXRMDEV) W !,ERROR
"RTN","PXRMERRH",16,0)
 ;
"RTN","PXRMERRH",17,0)
 ;Make the sender the Postmaster.
"RTN","PXRMERRH",18,0)
 S XMDUZ=0.5
"RTN","PXRMERRH",19,0)
 S XMSUB="ERROR EVALUATING CLINICAL REMINDER"
"RTN","PXRMERRH",20,0)
 ;
"RTN","PXRMERRH",21,0)
RETRY ;Get the message number.
"RTN","PXRMERRH",22,0)
 D XMZ^XMA2
"RTN","PXRMERRH",23,0)
 I XMZ<1 G RETRY
"RTN","PXRMERRH",24,0)
 ;
"RTN","PXRMERRH",25,0)
 ;Load the message
"RTN","PXRMERRH",26,0)
 S ^XMB(3.9,XMZ,2,1,0)="The following error occurred:"
"RTN","PXRMERRH",27,0)
 S ^XMB(3.9,XMZ,2,2,0)=ERROR
"RTN","PXRMERRH",28,0)
 I +$G(PXRMITEM)>0 S REMINDER=$P(^PXD(811.9,PXRMITEM,0),U,1)
"RTN","PXRMERRH",29,0)
 E  D
"RTN","PXRMERRH",30,0)
 . S PXRMITEM=999999
"RTN","PXRMERRH",31,0)
 . S REMINDER="?"
"RTN","PXRMERRH",32,0)
 S ^XMB(3.9,XMZ,2,3,0)="While evaluating reminder "_REMINDER
"RTN","PXRMERRH",33,0)
 S ^XMB(3.9,XMZ,2,4,0)="For patient DFN="_DFN
"RTN","PXRMERRH",34,0)
 S ^XMB(3.9,XMZ,2,5,0)="The time of the error was "_$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMERRH",35,0)
 S ^XMB(3.9,XMZ,2,6,0)="See the error trap for complete details."
"RTN","PXRMERRH",36,0)
 S NL=6
"RTN","PXRMERRH",37,0)
 ;Look for specific error text to append to the message.
"RTN","PXRMERRH",38,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP")) D
"RTN","PXRMERRH",39,0)
 . N ESOURCE,IND
"RTN","PXRMERRH",40,0)
 . S ESOURCE=""
"RTN","PXRMERRH",41,0)
 . F  S ESOURCE=$O(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP",ESOURCE)) Q:ESOURCE=""  D
"RTN","PXRMERRH",42,0)
 .. S IND=0
"RTN","PXRMERRH",43,0)
 .. F  S IND=$O(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP",ESOURCE,IND)) Q:IND=""  D
"RTN","PXRMERRH",44,0)
 ... S NL=NL+1
"RTN","PXRMERRH",45,0)
 ... S ^XMB(3.9,XMZ,2,NL,0)=^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP",ESOURCE,IND)
"RTN","PXRMERRH",46,0)
 ;
"RTN","PXRMERRH",47,0)
 ;Send the message to the site defined mailgroup.
"RTN","PXRMERRH",48,0)
 S MGIEN=$G(^PXRM(800,1,"MGFE"))
"RTN","PXRMERRH",49,0)
 ;If the mailgroup has not been defined send the message to the user.
"RTN","PXRMERRH",50,0)
 I MGIEN="" D
"RTN","PXRMERRH",51,0)
 . S MGROUP=DUZ
"RTN","PXRMERRH",52,0)
 . S NL=NL+1,^XMB(3.9,XMZ,2,NL,0)=" "
"RTN","PXRMERRH",53,0)
 . S NL=NL+1,^XMB(3.9,XMZ,2,NL,0)="You received this message because your IRM has not set up a mailgroup"
"RTN","PXRMERRH",54,0)
 . S NL=NL+1,^XMB(3.9,XMZ,2,NL,0)="to receive Clinical Reminder errors; please notify them."
"RTN","PXRMERRH",55,0)
 . S ^XMB(3.9,XMZ,2,0)="^3.92^"_+NL_U_+NL_U_DT
"RTN","PXRMERRH",56,0)
 E  S MGROUP="G."_$$GET1^DIQ(3.8,MGIEN,.01)
"RTN","PXRMERRH",57,0)
 ;
"RTN","PXRMERRH",58,0)
 S XMY(MGROUP)=""
"RTN","PXRMERRH",59,0)
 D ENT1^XMD
"RTN","PXRMERRH",60,0)
 ;
"RTN","PXRMERRH",61,0)
 ;Mark that an error occured.
"RTN","PXRMERRH",62,0)
 I PXRMITEM=999999 Q
"RTN","PXRMERRH",63,0)
 S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP")=""
"RTN","PXRMERRH",64,0)
 N PCLOGIC,DUE,DUEDATE,RESDATE,FREQ,FIEVAL
"RTN","PXRMERRH",65,0)
 S (PCLOGIC,DUE,DUEDATE,RESDATE,FREQ)=""
"RTN","PXRMERRH",66,0)
 D FINAL^PXRMFOUT(PCLOGIC,DUE,DUEDATE,RESDATE,FREQ,.FIEVAL)
"RTN","PXRMERRH",67,0)
 ;
"RTN","PXRMERRH",68,0)
 ;Set the first line of ^TMP("PXRHM") to ERROR.
"RTN","PXRMERRH",69,0)
 S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="ERROR"
"RTN","PXRMERRH",70,0)
 ;
"RTN","PXRMERRH",71,0)
 ;Make sure patient cache is unlocked.
"RTN","PXRMERRH",72,0)
 D UNLOCKPC^PXRMPINF(PXRMDFN)
"RTN","PXRMERRH",73,0)
 ;
"RTN","PXRMERRH",74,0)
 ;Clean up globals.
"RTN","PXRMERRH",75,0)
 K ^TMP("PXRM",$J)
"RTN","PXRMERRH",76,0)
 K ^TMP("PXRHM",$J)
"RTN","PXRMERRH",77,0)
 K ^TMP(PXRMPID,$J)
"RTN","PXRMERRH",78,0)
 ;
"RTN","PXRMERRH",79,0)
 ;Unwind the stack.
"RTN","PXRMERRH",80,0)
 D UNWIND^%ZTER
"RTN","PXRMERRH",81,0)
 Q
"RTN","PXRMERRH",82,0)
 ;
"RTN","PXRMEX")
1^26
"RTN","PXRMEXCF")
0^1^B6628639
"RTN","PXRMEXCF",1,0)
PXRMEXCF ; SLC/PKR - Utilities for computed findings/routines. ;05/11/2001
"RTN","PXRMEXCF",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXCF",3,0)
 ;======================================================================
"RTN","PXRMEXCF",4,0)
EXISTS(ROUTINE) ;Return true if routine ROUTINE exists.
"RTN","PXRMEXCF",5,0)
 I ROUTINE="" Q 0
"RTN","PXRMEXCF",6,0)
 N X
"RTN","PXRMEXCF",7,0)
 S X=ROUTINE
"RTN","PXRMEXCF",8,0)
 X ^%ZOSF("TEST")
"RTN","PXRMEXCF",9,0)
 I $T Q 1
"RTN","PXRMEXCF",10,0)
 Q 0
"RTN","PXRMEXCF",11,0)
 ;
"RTN","PXRMEXCF",12,0)
 ;======================================================================
"RTN","PXRMEXCF",13,0)
GETRACT(ATTR,NEWNAME,NAMECHG,RTN,EXISTS) ;Get the action for a routine.
"RTN","PXRMEXCF",14,0)
 N ACTION,CHOICES,ECS,IND,MSG,PCS,ROUTINE,SAME,TEXT,X,Y
"RTN","PXRMEXCF",15,0)
 ;
"RTN","PXRMEXCF",16,0)
 S CHOICES="CIQS"
"RTN","PXRMEXCF",17,0)
 S NEWNAME=""
"RTN","PXRMEXCF",18,0)
 ;If the routine exists compare the existing routine checksum with the
"RTN","PXRMEXCF",19,0)
 ;the checksum of the routine in the packed definition.
"RTN","PXRMEXCF",20,0)
 S ROUTINE=ATTR("NAME")
"RTN","PXRMEXCF",21,0)
 I EXISTS="" S EXISTS=$$EXISTS^PXRMEXCF(ROUTINE)
"RTN","PXRMEXCF",22,0)
 I EXISTS D
"RTN","PXRMEXCF",23,0)
 . S SAME=$$SAME(.ATTR,.RTN)
"RTN","PXRMEXCF",24,0)
 . S TEXT(1)="Routine "_ROUTINE_" already EXISTS,"
"RTN","PXRMEXCF",25,0)
 . I SAME S TEXT(2)="what do you want to do?"
"RTN","PXRMEXCF",26,0)
 . I 'SAME S TEXT(2)="but packed routine is different, what do you want to do?"
"RTN","PXRMEXCF",27,0)
 . W !,TEXT(1),!,TEXT(2)
"RTN","PXRMEXCF",28,0)
 . S DIR("B")="S"
"RTN","PXRMEXCF",29,0)
 . S ACTION=$$GETACT^PXRMEXIU(CHOICES)
"RTN","PXRMEXCF",30,0)
 E  D
"RTN","PXRMEXCF",31,0)
 . W !!,"Routine "_ROUTINE_" is NEW, what do you want to do?"
"RTN","PXRMEXCF",32,0)
 . S DIR("B")="I"
"RTN","PXRMEXCF",33,0)
 . S ACTION=$$GETACT^PXRMEXIU(CHOICES)
"RTN","PXRMEXCF",34,0)
 ;
"RTN","PXRMEXCF",35,0)
 I ACTION="Q" Q ACTION
"RTN","PXRMEXCF",36,0)
 ;
"RTN","PXRMEXCF",37,0)
 I ACTION="C" D
"RTN","PXRMEXCF",38,0)
 . N CDONE
"RTN","PXRMEXCF",39,0)
 . S CDONE=0
"RTN","PXRMEXCF",40,0)
 . F  Q:CDONE  D
"RTN","PXRMEXCF",41,0)
 .. S NEWNAME=$$GETNAME^PXRMEXIU(ATTR("MIN FIELD LENGTH"),ATTR("FIELD LENGTH"))
"RTN","PXRMEXCF",42,0)
 .. I NEWNAME="" S ACTION="S",CDONE=1 Q
"RTN","PXRMEXCF",43,0)
 .. S EXISTS=$$EXISTS^PXRMEXCF(NEWNAME)
"RTN","PXRMEXCF",44,0)
 .. I EXISTS W !,"Routine ",NEWNAME," already exits, try again."
"RTN","PXRMEXCF",45,0)
 .. E  D  Q
"RTN","PXRMEXCF",46,0)
 ... S CDONE=1
"RTN","PXRMEXCF",47,0)
 ... S NAMECHG(ATTR("FILE NUMBER"),ROUTINE)=NEWNAME
"RTN","PXRMEXCF",48,0)
 ;
"RTN","PXRMEXCF",49,0)
 I (ACTION="I")&(EXISTS) D
"RTN","PXRMEXCF",50,0)
 .;If the action is overwrite double check that overwrite is what the
"RTN","PXRMEXCF",51,0)
 .;user really wants to do.
"RTN","PXRMEXCF",52,0)
 . K X,Y
"RTN","PXRMEXCF",53,0)
 . S DIR(0)="Y"_U_"A"
"RTN","PXRMEXCF",54,0)
 . S DIR("A")="Are you sure you want to overwrite"
"RTN","PXRMEXCF",55,0)
 . S DIR("B")="N"
"RTN","PXRMEXCF",56,0)
 . D ^DIR K DIR
"RTN","PXRMEXCF",57,0)
 . I 'Y S ACTION="S"
"RTN","PXRMEXCF",58,0)
 . S NAMECHG(ATTR("FILE NUMBER"),ROUTINE)=NEWNAME
"RTN","PXRMEXCF",59,0)
 Q ACTION
"RTN","PXRMEXCF",60,0)
 ;
"RTN","PXRMEXCF",61,0)
 ;======================================================================
"RTN","PXRMEXCF",62,0)
SAME(ATTR,RTN) ;Compare the existing routine and the new version
"RTN","PXRMEXCF",63,0)
 ;in RTN to see if they are the same.
"RTN","PXRMEXCF",64,0)
 N ECS,DIF,NEWCS,RT,SAME,X,XCNP
"RTN","PXRMEXCF",65,0)
 S XCNP=0
"RTN","PXRMEXCF",66,0)
 S DIF="RT("
"RTN","PXRMEXCF",67,0)
 S X=ATTR("NAME")
"RTN","PXRMEXCF",68,0)
 X ^%ZOSF("LOAD")
"RTN","PXRMEXCF",69,0)
 S ECS=$$ROUTINE^PXRMEXCS(.RT)
"RTN","PXRMEXCF",70,0)
 K RT
"RTN","PXRMEXCF",71,0)
 S NEWCS=$$ROUTINE^PXRMEXCS(.RTN)
"RTN","PXRMEXCF",72,0)
 I ECS=NEWCS S SAME=1
"RTN","PXRMEXCF",73,0)
 E  S SAME=0
"RTN","PXRMEXCF",74,0)
 Q SAME
"RTN","PXRMEXCF",75,0)
 ;
"RTN","PXRMEXCS")
0^2^B4047044
"RTN","PXRMEXCS",1,0)
PXRMEXCS ; SLC/PKR - Routines to compute checksums. ;05/16/2001
"RTN","PXRMEXCS",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXCS",3,0)
 ;======================================================================
"RTN","PXRMEXCS",4,0)
FILE(FILENUM,IEN) ;Return checksum for entry IEN in file FILENUM.
"RTN","PXRMEXCS",5,0)
 N CS,IND,LC,REF,ROOT,TARGET
"RTN","PXRMEXCS",6,0)
 D FILE^DID(FILENUM,"","GLOBAL NAME","TARGET")
"RTN","PXRMEXCS",7,0)
 S ROOT=$$CREF^DILF(TARGET("GLOBAL NAME"))
"RTN","PXRMEXCS",8,0)
 M ^TMP("PXRMEXCS",$J)=@ROOT@(IEN)
"RTN","PXRMEXCS",9,0)
 S REF="^TMP(""PXRMEXCS"",$J)"
"RTN","PXRMEXCS",10,0)
 S REF=$NA(@REF)
"RTN","PXRMEXCS",11,0)
 S (CS,LC)=0
"RTN","PXRMEXCS",12,0)
 S IND=""
"RTN","PXRMEXCS",13,0)
 F  S REF=$Q(@REF) Q:REF'["PXRMEXCS"  D
"RTN","PXRMEXCS",14,0)
 . S LC=LC+1
"RTN","PXRMEXCS",15,0)
 . S CS=CS+$$LINECS(LC,@REF)
"RTN","PXRMEXCS",16,0)
 K ^TMP("PXRMEXCS",$J)
"RTN","PXRMEXCS",17,0)
 Q CS
"RTN","PXRMEXCS",18,0)
 ;
"RTN","PXRMEXCS",19,0)
 ;======================================================================
"RTN","PXRMEXCS",20,0)
HFCS(PATH,FILENAME) ;Return checksum for host file.
"RTN","PXRMEXCS",21,0)
 N CS,GBL,GBLZISH,SUCCESS
"RTN","PXRMEXCS",22,0)
 K ^TMP("PXRMHFCS",$J)
"RTN","PXRMEXCS",23,0)
 S GBL="^TMP(""PXRMHFCS"",$J)"
"RTN","PXRMEXCS",24,0)
 S GBLZISH="^TMP(""PXRMHFCS"",$J,1)"
"RTN","PXRMEXCS",25,0)
 S GBLZISH=$NA(@GBLZISH)
"RTN","PXRMEXCS",26,0)
 S SUCCESS=$$FTG^%ZISH(PATH,FILENAME,GBLZISH,3)
"RTN","PXRMEXCS",27,0)
 I SUCCESS S CS=$$HFCSGBL(GBL)
"RTN","PXRMEXCS",28,0)
 E  S CS=-1
"RTN","PXRMEXCS",29,0)
 K ^TMP("PXRMHFCS",$J)
"RTN","PXRMEXCS",30,0)
 Q CS
"RTN","PXRMEXCS",31,0)
 ;
"RTN","PXRMEXCS",32,0)
 ;======================================================================
"RTN","PXRMEXCS",33,0)
HFCSGBL(GBL) ;Return checksum for host file loaded into global GBL.
"RTN","PXRMEXCS",34,0)
 N IND,LINE
"RTN","PXRMEXCS",35,0)
 S (CS,IND)=0
"RTN","PXRMEXCS",36,0)
 F  S IND=$O(@GBL@(IND)) Q:+IND=0  D
"RTN","PXRMEXCS",37,0)
 . S LINE=@GBL@(IND)
"RTN","PXRMEXCS",38,0)
 . S CS=CS+$$LINECS(IND,LINE)
"RTN","PXRMEXCS",39,0)
 Q CS
"RTN","PXRMEXCS",40,0)
 ;
"RTN","PXRMEXCS",41,0)
 ;======================================================================
"RTN","PXRMEXCS",42,0)
LINECS(LINENUM,STRING) ;Return checksum of line number LINEUM whose contents
"RTN","PXRMEXCS",43,0)
 ;is STRING.
"RTN","PXRMEXCS",44,0)
 N CS,IND,LEN
"RTN","PXRMEXCS",45,0)
 S CS=0
"RTN","PXRMEXCS",46,0)
 S LEN=$L(STRING)
"RTN","PXRMEXCS",47,0)
 F IND=1:1:LEN D
"RTN","PXRMEXCS",48,0)
 . S CS=CS+($A(STRING,IND)*(LINENUM+IND))
"RTN","PXRMEXCS",49,0)
 Q CS
"RTN","PXRMEXCS",50,0)
 ;
"RTN","PXRMEXCS",51,0)
 ;======================================================================
"RTN","PXRMEXCS",52,0)
MMCS(XMZ) ;Return checksum for MailMan message ien XMZ.
"RTN","PXRMEXCS",53,0)
 N CS,IND,LINE,NLINES
"RTN","PXRMEXCS",54,0)
 S NLINES=+$P($G(^XMB(3.9,XMZ,2,0)),U,3)
"RTN","PXRMEXCS",55,0)
 S CS=0
"RTN","PXRMEXCS",56,0)
 F IND=1:1:NLINES D
"RTN","PXRMEXCS",57,0)
 . S LINE=$G(^XMB(3.9,XMZ,2,IND,0))
"RTN","PXRMEXCS",58,0)
 . S CS=CS+$$LINECS(IND,LINE)
"RTN","PXRMEXCS",59,0)
 Q CS
"RTN","PXRMEXCS",60,0)
 ;
"RTN","PXRMEXCS",61,0)
 ;======================================================================
"RTN","PXRMEXCS",62,0)
ROUTINE(RA) ;Return checksum for a routine loaded in array RA. RA has the
"RTN","PXRMEXCS",63,0)
 ;form created by ^%ZOSF("LOAD") i.e, RA(1,0) ... RA(N,0).
"RTN","PXRMEXCS",64,0)
 N CS,IND,LINE
"RTN","PXRMEXCS",65,0)
 S (CS,IND)=0
"RTN","PXRMEXCS",66,0)
 F  S IND=$O(RA(IND)) Q:+IND=0  D
"RTN","PXRMEXCS",67,0)
 . S CS=CS+$$LINECS(IND,RA(IND,0))
"RTN","PXRMEXCS",68,0)
 Q CS
"RTN","PXRMEXCS",69,0)
 ;
"RTN","PXRMEXCS",70,0)
 ;======================================================================
"RTN","PXRMEXCS",71,0)
RTN(ROUTINE) ;Return checksum for a routine ROUTINE.
"RTN","PXRMEXCS",72,0)
 N CS,DIF,RA,X,XCNP
"RTN","PXRMEXCS",73,0)
 S XCNP=0
"RTN","PXRMEXCS",74,0)
 S DIF="RA("
"RTN","PXRMEXCS",75,0)
 S X=ROUTINE
"RTN","PXRMEXCS",76,0)
 ;Make sure the routine exists.
"RTN","PXRMEXCS",77,0)
 X ^%ZOSF("TEST")
"RTN","PXRMEXCS",78,0)
 I $T D
"RTN","PXRMEXCS",79,0)
 . X ^%ZOSF("LOAD")
"RTN","PXRMEXCS",80,0)
 . S CS=$$ROUTINE(.RA)
"RTN","PXRMEXCS",81,0)
 E  S CS=-1
"RTN","PXRMEXCS",82,0)
 Q CS
"RTN","PXRMEXCS",83,0)
 ;
"RTN","PXRMEXDG")
0^3^B36417883
"RTN","PXRMEXDG",1,0)
PXRMEXDG ;SLC/PJH - Reminder Dialog Exchange index build ;07/13/2001
"RTN","PXRMEXDG",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXDG",3,0)
 ;
"RTN","PXRMEXDG",4,0)
 ;=====================================================================
"RTN","PXRMEXDG",5,0)
DIALOG(RIEN,DLIST,FLIST,OLIST,TLIST) ;
"RTN","PXRMEXDG",6,0)
 ;
"RTN","PXRMEXDG",7,0)
 ;Routine to get dialog details for a given reminder
"RTN","PXRMEXDG",8,0)
 ;
"RTN","PXRMEXDG",9,0)
 ;Called as DIALOG^PXRMEXDG(RIEN,.DLIST,.FLIST)
"RTN","PXRMEXDG",10,0)
 ;
"RTN","PXRMEXDG",11,0)
 ;RIEN   - Reminder IEN
"RTN","PXRMEXDG",12,0)
 ;DLIST  - List of dialogs (components first)
"RTN","PXRMEXDG",13,0)
 ;FLIST  - Finding list used by PXRMEXPR
"RTN","PXRMEXDG",14,0)
 ;OLIST  - List of embedded TIU objects
"RTN","PXRMEXDG",15,0)
 ;TLIST  - List of embedded TIU templates
"RTN","PXRMEXDG",16,0)
 ;
"RTN","PXRMEXDG",17,0)
 ;Initialize
"RTN","PXRMEXDG",18,0)
 K DLIST
"RTN","PXRMEXDG",19,0)
 N DARRAY,DCNT,DIALOG,DIEN,FCNT,FINDING,OCNT,RCNT,RESULT,TEMP
"RTN","PXRMEXDG",20,0)
 ;Check if reminder exists
"RTN","PXRMEXDG",21,0)
 Q:'$D(^PXD(811.9,RIEN,0))
"RTN","PXRMEXDG",22,0)
 ;Get dialog ien from reminder definition
"RTN","PXRMEXDG",23,0)
 S DIEN=$P($G(^PXD(811.9,RIEN,51)),U) Q:'DIEN
"RTN","PXRMEXDG",24,0)
 ;Check dialog pointer is valid
"RTN","PXRMEXDG",25,0)
 Q:'$D(^PXRMD(801.41,DIEN))
"RTN","PXRMEXDG",26,0)
 ;Dialog and Finding count
"RTN","PXRMEXDG",27,0)
 S DCNT=0,FCNT=0,RCNT=0,TCNT=0
"RTN","PXRMEXDG",28,0)
 ;Get details
"RTN","PXRMEXDG",29,0)
 D DGET(DIEN)
"RTN","PXRMEXDG",30,0)
 ;
"RTN","PXRMEXDG",31,0)
 ;Now build the dialog list (components first)
"RTN","PXRMEXDG",32,0)
 S DCNT="",OCNT=0
"RTN","PXRMEXDG",33,0)
 F  S DCNT=$O(DARRAY(DCNT),-1) Q:'DCNT  D
"RTN","PXRMEXDG",34,0)
 .;Ignore dialogs previously encountered
"RTN","PXRMEXDG",35,0)
 .S DIEN=DARRAY(DCNT) Q:$D(DIALOG(DIEN))
"RTN","PXRMEXDG",36,0)
 .;Save dialog in output array
"RTN","PXRMEXDG",37,0)
 .S OCNT=OCNT+1,DIALOG(DIEN)="",TEMP("DIALOG",OCNT)=DIEN
"RTN","PXRMEXDG",38,0)
 ;
"RTN","PXRMEXDG",39,0)
 ;Save the dialog and result details to DLIST
"RTN","PXRMEXDG",40,0)
 N CNT,COUNT,DTYP
"RTN","PXRMEXDG",41,0)
 S COUNT=0
"RTN","PXRMEXDG",42,0)
 F DTYP="RESULT","DIALOG" D
"RTN","PXRMEXDG",43,0)
 .F CNT=1:1 S DIEN=$G(TEMP(DTYP,CNT)) Q:'DIEN  D
"RTN","PXRMEXDG",44,0)
 ..S COUNT=COUNT+1,DLIST("DIALOG",COUNT,DIEN)=""
"RTN","PXRMEXDG",45,0)
 ;
"RTN","PXRMEXDG",46,0)
 I COUNT>0 S DLIST("DIALOG")=801.41
"RTN","PXRMEXDG",47,0)
 ;
"RTN","PXRMEXDG",48,0)
 ;Add Dialog Findings to FLIST if not aready present
"RTN","PXRMEXDG",49,0)
 N DIC,DO,IEN,FNAME,FNUM,SUB
"RTN","PXRMEXDG",50,0)
 S SUB=0
"RTN","PXRMEXDG",51,0)
 F  S SUB=$O(TEMP("FINDING",SUB)) Q:'SUB  D
"RTN","PXRMEXDG",52,0)
 .S IEN=$P(TEMP("FINDING",SUB),";"),DIC=U_$P(TEMP("FINDING",SUB),";",2)
"RTN","PXRMEXDG",53,0)
 .K DO D DO^DIC1
"RTN","PXRMEXDG",54,0)
 .S FNUM=+DO(2),FNAME=$P(DO,U) I ('FNUM)!(FNAME="") Q
"RTN","PXRMEXDG",55,0)
 .;Check if present in FLIST
"RTN","PXRMEXDG",56,0)
 .I $D(FLIST(FNAME,"F",IEN)) Q
"RTN","PXRMEXDG",57,0)
 .;Otherwise add to list
"RTN","PXRMEXDG",58,0)
 .S:'$D(FLIST(FNAME)) FLIST(FNAME)=FNUM S FLIST(FNAME,"F",IEN)=""
"RTN","PXRMEXDG",59,0)
 .;Add the Health Factor category to FLIST
"RTN","PXRMEXDG",60,0)
 .I FNAME="HEALTH FACTORS" D
"RTN","PXRMEXDG",61,0)
 ..N HFCAT
"RTN","PXRMEXDG",62,0)
 ..S HFCAT=$P($G(^AUTTHF(IEN,0)),U,3) S:HFCAT FLIST(FNAME,"C",HFCAT)=""
"RTN","PXRMEXDG",63,0)
 ;
"RTN","PXRMEXDG",64,0)
 ;Store any TIU components
"RTN","PXRMEXDG",65,0)
 N GLOB,DIEN,CNT
"RTN","PXRMEXDG",66,0)
 ;Set global for search
"RTN","PXRMEXDG",67,0)
 S GLOB="^PXRMD(801.41,"
"RTN","PXRMEXDG",68,0)
 ;Search through all component dialogs
"RTN","PXRMEXDG",69,0)
 S CNT=0
"RTN","PXRMEXDG",70,0)
 F  S CNT=$O(DLIST("DIALOG",CNT)) Q:'CNT  D
"RTN","PXRMEXDG",71,0)
 .S DIEN=$O(DLIST("DIALOG",CNT,"")) Q:'DIEN
"RTN","PXRMEXDG",72,0)
 .;Search Dialog Text for TIU Objects and Templates
"RTN","PXRMEXDG",73,0)
 .D TIUSRCH(GLOB,DIEN,25,.OLIST,.TLIST)
"RTN","PXRMEXDG",74,0)
 .;Search P/N Text for TIU Objects and Templates
"RTN","PXRMEXDG",75,0)
 .D TIUSRCH(GLOB,DIEN,35,.OLIST,.TLIST)
"RTN","PXRMEXDG",76,0)
 ;
"RTN","PXRMEXDG",77,0)
 Q
"RTN","PXRMEXDG",78,0)
 ;
"RTN","PXRMEXDG",79,0)
 ;Get the dialog components
"RTN","PXRMEXDG",80,0)
 ;-------------------------
"RTN","PXRMEXDG",81,0)
DGET(D0) ;Save dialog ien
"RTN","PXRMEXDG",82,0)
 S DCNT=DCNT+1,DARRAY(DCNT)=D0
"RTN","PXRMEXDG",83,0)
 ;And details (except for reminder dialog)
"RTN","PXRMEXDG",84,0)
 I DCNT>1 D
"RTN","PXRMEXDG",85,0)
 .;Finding items
"RTN","PXRMEXDG",86,0)
 .D DFIND(D0)
"RTN","PXRMEXDG",87,0)
 .;Additional Finding Items
"RTN","PXRMEXDG",88,0)
 .D DFINDA(D0)
"RTN","PXRMEXDG",89,0)
 .;Result groups
"RTN","PXRMEXDG",90,0)
 .D DRESULT(D0)
"RTN","PXRMEXDG",91,0)
 ;
"RTN","PXRMEXDG",92,0)
 ;Dialog components
"RTN","PXRMEXDG",93,0)
 N DCOMP,DDATA,DSUB
"RTN","PXRMEXDG",94,0)
 S DSUB=0
"RTN","PXRMEXDG",95,0)
 F  S DSUB=$O(^PXRMD(801.41,D0,10,DSUB)) Q:'DSUB  D
"RTN","PXRMEXDG",96,0)
 .;Get any component dialogs
"RTN","PXRMEXDG",97,0)
 .S DCOMP=$P($G(^PXRMD(801.41,D0,10,DSUB,0)),U,2) Q:'DCOMP
"RTN","PXRMEXDG",98,0)
 .;If component exists get sub-components
"RTN","PXRMEXDG",99,0)
 .S DDATA=$G(^PXRMD(801.41,DCOMP,0)) Q:DDATA=""
"RTN","PXRMEXDG",100,0)
 .;Exclude national prompts
"RTN","PXRMEXDG",101,0)
 .I $P($G(^PXRMD(801.41,DCOMP,100)),U)'="N" D DGET(DCOMP)
"RTN","PXRMEXDG",102,0)
 Q
"RTN","PXRMEXDG",103,0)
 ;
"RTN","PXRMEXDG",104,0)
 ;Build list of finding items
"RTN","PXRMEXDG",105,0)
 ;---------------------------
"RTN","PXRMEXDG",106,0)
DFIND(DIEN) ;
"RTN","PXRMEXDG",107,0)
 N FIND,FIEN,FGLOB,FNAM
"RTN","PXRMEXDG",108,0)
 ;Finding Item
"RTN","PXRMEXDG",109,0)
 S FIND=$P($G(^PXRMD(801.41,DIEN,1)),U,5)
"RTN","PXRMEXDG",110,0)
 ;If a finding item exists check and save
"RTN","PXRMEXDG",111,0)
 I FIND]"" D
"RTN","PXRMEXDG",112,0)
 .;Finding item defined
"RTN","PXRMEXDG",113,0)
 .S FIEN=$P(FIND,";"),FGLOB=$P(FIND,";",2) Q:'FIEN  Q:FGLOB=""
"RTN","PXRMEXDG",114,0)
 .;And finding item exists
"RTN","PXRMEXDG",115,0)
 .Q:'$D(@(U_FGLOB_FIEN_",0)"))
"RTN","PXRMEXDG",116,0)
 .;Finding name
"RTN","PXRMEXDG",117,0)
 .S FNAM=$P($G(@(U_FGLOB_FIEN_",0)")),U) S:FNAM="" FNAM="???"
"RTN","PXRMEXDG",118,0)
 .;And not previously saved
"RTN","PXRMEXDG",119,0)
 .I '$D(FINDING(FIND)) D
"RTN","PXRMEXDG",120,0)
 ..S FCNT=FCNT+1,FINDING(FIND)="",TEMP("FINDING",FCNT)=FIND
"RTN","PXRMEXDG",121,0)
 Q
"RTN","PXRMEXDG",122,0)
 ;
"RTN","PXRMEXDG",123,0)
 ;Build list of additional findings
"RTN","PXRMEXDG",124,0)
 ;---------------------------------
"RTN","PXRMEXDG",125,0)
DFINDA(DIEN) ;
"RTN","PXRMEXDG",126,0)
 N FIND,FIEN,FGLOB,FNAM,FSUB
"RTN","PXRMEXDG",127,0)
 S FSUB=0
"RTN","PXRMEXDG",128,0)
 F  S FSUB=$O(^PXRMD(801.41,DIEN,3,FSUB)) Q:'FSUB  D
"RTN","PXRMEXDG",129,0)
 .;Additional Finding Item
"RTN","PXRMEXDG",130,0)
 .S FIND=$P($G(^PXRMD(801.41,DIEN,3,FSUB,0)),U)
"RTN","PXRMEXDG",131,0)
 .;If a finding item exists check and save
"RTN","PXRMEXDG",132,0)
 .I FIND]"" D
"RTN","PXRMEXDG",133,0)
 ..;Finding item defined
"RTN","PXRMEXDG",134,0)
 ..S FIEN=$P(FIND,";"),FGLOB=$P(FIND,";",2) Q:'FIEN  Q:FGLOB=""
"RTN","PXRMEXDG",135,0)
 ..;And finding item exists
"RTN","PXRMEXDG",136,0)
 ..Q:'$D(@(U_FGLOB_FIEN_",0)"))
"RTN","PXRMEXDG",137,0)
 ..;Finding name
"RTN","PXRMEXDG",138,0)
 ..S FNAM=$P($G(@(U_FGLOB_FIEN_",0)")),U) S:FNAM="" FNAM="???"
"RTN","PXRMEXDG",139,0)
 ..;And not previously saved
"RTN","PXRMEXDG",140,0)
 ..I '$D(FINDING(FIND)) D
"RTN","PXRMEXDG",141,0)
 ...S FCNT=FCNT+1,FINDING(FIND)="",TEMP("FINDING",FCNT)=FIND
"RTN","PXRMEXDG",142,0)
 Q
"RTN","PXRMEXDG",143,0)
 ;
"RTN","PXRMEXDG",144,0)
 ;Build list of result groups
"RTN","PXRMEXDG",145,0)
 ;---------------------------
"RTN","PXRMEXDG",146,0)
DRESULT(DIEN) ;
"RTN","PXRMEXDG",147,0)
 N RIEN
"RTN","PXRMEXDG",148,0)
 ;Result Group/Element pointer
"RTN","PXRMEXDG",149,0)
 S RIEN=$P($G(^PXRMD(801.41,DIEN,0)),U,15) Q:'RIEN  Q:$D(RESULT(RIEN))
"RTN","PXRMEXDG",150,0)
 ;Result group compoments
"RTN","PXRMEXDG",151,0)
 N DSUB,REIEN
"RTN","PXRMEXDG",152,0)
 S DSUB=0
"RTN","PXRMEXDG",153,0)
 F  S DSUB=$O(^PXRMD(801.41,RIEN,10,DSUB)) Q:'DSUB  D
"RTN","PXRMEXDG",154,0)
 .;Get result element
"RTN","PXRMEXDG",155,0)
 .S REIEN=$P($G(^PXRMD(801.41,RIEN,10,DSUB,0)),U,2) Q:'REIEN
"RTN","PXRMEXDG",156,0)
 .Q:'$D(^PXRMD(801.41,REIEN,0))
"RTN","PXRMEXDG",157,0)
 .;If element exists get save it
"RTN","PXRMEXDG",158,0)
 .S RCNT=RCNT+1,OUTPUT("RESULT",RCNT)=REIEN
"RTN","PXRMEXDG",159,0)
 ;
"RTN","PXRMEXDG",160,0)
 ;Save result group
"RTN","PXRMEXDG",161,0)
 S RCNT=RCNT+1,RESULT(RIEN)="",TEMP("RESULT",RCNT)=RIEN
"RTN","PXRMEXDG",162,0)
 Q
"RTN","PXRMEXDG",163,0)
 ;
"RTN","PXRMEXDG",164,0)
 ;Extract TIU Objects/Templates from any WP text
"RTN","PXRMEXDG",165,0)
 ;----------------------------------------------
"RTN","PXRMEXDG",166,0)
TIUSRCH(GLOB,IEN,NODE,OLIST,TLIST) ;
"RTN","PXRMEXDG",167,0)
 N OCNT,TCNT,TEXT
"RTN","PXRMEXDG",168,0)
 ;Add to existing arrays
"RTN","PXRMEXDG",169,0)
 S OCNT=+$O(OLIST(""),-1),TCNT=+$O(TLIST(""),-1),SUB=0
"RTN","PXRMEXDG",170,0)
 ;Scan WP fields
"RTN","PXRMEXDG",171,0)
 F  S SUB=$O(@(GLOB_IEN_","_NODE_","_SUB_")")) Q:'SUB  D
"RTN","PXRMEXDG",172,0)
 .;Get individual line
"RTN","PXRMEXDG",173,0)
 .S TEXT=$G(@(GLOB_IEN_","_NODE_","_SUB_",0)")) Q:TEXT=""
"RTN","PXRMEXDG",174,0)
 .;Most text lines will have no TIU link so ignore them
"RTN","PXRMEXDG",175,0)
 .I (TEXT'["|")&(TEXT'["{FLD:") Q
"RTN","PXRMEXDG",176,0)
 .;Templates are in format {FLD:fldname} (only applies to dialogs)
"RTN","PXRMEXDG",177,0)
 .I GLOB[801.41 D TIUXTR("{FLD:","}",TEXT,.TLIST,.TCNT)
"RTN","PXRMEXDG",178,0)
 .;Objects are in format |Objectname|
"RTN","PXRMEXDG",179,0)
 .D TIUXTR("|","|",TEXT,.OLIST,.OCNT)
"RTN","PXRMEXDG",180,0)
 Q
"RTN","PXRMEXDG",181,0)
 ;
"RTN","PXRMEXDG",182,0)
TIUXTR(SRCH,SRCH1,TEXT,OUTPUT,CNT) ;
"RTN","PXRMEXDG",183,0)
 N TXT,ONAME
"RTN","PXRMEXDG",184,0)
 S TXT=TEXT
"RTN","PXRMEXDG",185,0)
 F  D  Q:TXT'[SRCH
"RTN","PXRMEXDG",186,0)
 .S TXT=$E(TXT,$F(TXT,SRCH),$L(TXT)) Q:TXT'[SRCH1
"RTN","PXRMEXDG",187,0)
 .S ONAME=$P(TXT,SRCH1) Q:ONAME=""
"RTN","PXRMEXDG",188,0)
 .;Save array of object/template names
"RTN","PXRMEXDG",189,0)
 .S CNT=CNT+1,OUTPUT(CNT)=ONAME
"RTN","PXRMEXDG",190,0)
 Q
"RTN","PXRMEXDH")
0^4^B6409535
"RTN","PXRMEXDH",1,0)
PXRMEXDH ; SLC/PJH - Reminder Exchange Dialog help. ;01/25/2001
"RTN","PXRMEXDH",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXDH",3,0)
 ;
"RTN","PXRMEXDH",4,0)
 ; Entry action for list PXRM EX DIALOG HELP 
"RTN","PXRMEXDH",5,0)
 ;
"RTN","PXRMEXDH",6,0)
LOAD N DONE,IND,TEXT
"RTN","PXRMEXDH",7,0)
 S DONE=0
"RTN","PXRMEXDH",8,0)
 K ^TMP("PXRMEXDH",$J)
"RTN","PXRMEXDH",9,0)
 S VALMCNT=0
"RTN","PXRMEXDH",10,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMEXDH",11,0)
 . S TEXT=$P($T(@PXRMTAG+IND),";",3)
"RTN","PXRMEXDH",12,0)
 . I TEXT="**End Text**" S DONE=1 Q
"RTN","PXRMEXDH",13,0)
 . S VALMCNT=VALMCNT+1
"RTN","PXRMEXDH",14,0)
 . S ^TMP("PXRMEXDH",$J,VALMCNT,0)=TEXT
"RTN","PXRMEXDH",15,0)
 S ^TMP("PXRMEXDH",$J,"VALMCNT")=VALMCNT
"RTN","PXRMEXDH",16,0)
 Q
"RTN","PXRMEXDH",17,0)
 ;
"RTN","PXRMEXDH",18,0)
DLG ;Dialog Help text
"RTN","PXRMEXDH",19,0)
 ;;The following actions are available:
"RTN","PXRMEXDH",20,0)
 ;;
"RTN","PXRMEXDH",21,0)
 ;;DD  Dialog Details
"RTN","PXRMEXDH",22,0)
 ;;    Display all dialog component names for this reminder dialog.
"RTN","PXRMEXDH",23,0)
 ;;    (Include PXRM type additional prompts and forced values.)
"RTN","PXRMEXDH",24,0)
 ;;
"RTN","PXRMEXDH",25,0)
 ;;DF  Dialog Findings
"RTN","PXRMEXDH",26,0)
 ;;    Display the finding items associated with the dialog and
"RTN","PXRMEXDH",27,0)
 ;;    show if the finding already exists.
"RTN","PXRMEXDH",28,0)
 ;;
"RTN","PXRMEXDH",29,0)
 ;;DS  Dialog Summary (default)
"RTN","PXRMEXDH",30,0)
 ;;    Display dialog component names for this reminder dialog.
"RTN","PXRMEXDH",31,0)
 ;;    (Exclude PXRM type additional prompts and forced values.)
"RTN","PXRMEXDH",32,0)
 ;;
"RTN","PXRMEXDH",33,0)
 ;;DT  Dialog Text
"RTN","PXRMEXDH",34,0)
 ;;    Display the dialog text as it should appear in CPRS.
"RTN","PXRMEXDH",35,0)
 ;;
"RTN","PXRMEXDH",36,0)
 ;;DU  Dialog Usage
"RTN","PXRMEXDH",37,0)
 ;;    If components of the reminder dialog already exists display
"RTN","PXRMEXDH",38,0)
 ;;    any other reminder dialogs and groups also use these components.
"RTN","PXRMEXDH",39,0)
 ;;
"RTN","PXRMEXDH",40,0)
 ;;IA  Install All
"RTN","PXRMEXDH",41,0)
 ;;    Install the reminder dialog and all its components. The reminder
"RTN","PXRMEXDH",42,0)
 ;;    dialog may also be selected by entering the item number '1'.
"RTN","PXRMEXDH",43,0)
 ;;
"RTN","PXRMEXDH",44,0)
 ;;IS  Install Selected
"RTN","PXRMEXDH",45,0)
 ;;    Install selected components from this reminder dialog. The
"RTN","PXRMEXDH",46,0)
 ;;    individual components may also be selected by entering an 
"RTN","PXRMEXDH",47,0)
 ;;    item number.
"RTN","PXRMEXDH",48,0)
 ;;
"RTN","PXRMEXDH",49,0)
 ;;QU  Quit
"RTN","PXRMEXDH",50,0)
 ;;**End Text**
"RTN","PXRMEXFI")
0^5^B10059048
"RTN","PXRMEXFI",1,0)
PXRMEXFI ; SLC/PKR/PJH - Exchange utilities for file entries. ;07/15/2001
"RTN","PXRMEXFI",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXFI",3,0)
 ;======================================================================
"RTN","PXRMEXFI",4,0)
DELETE(FILENUM,DA) ;Delete a file entry.
"RTN","PXRMEXFI",5,0)
 N DIK
"RTN","PXRMEXFI",6,0)
 S DIK=$$ROOT^DILFD(FILENUM)
"RTN","PXRMEXFI",7,0)
 D ^DIK
"RTN","PXRMEXFI",8,0)
 Q
"RTN","PXRMEXFI",9,0)
 ;
"RTN","PXRMEXFI",10,0)
 ;======================================================================
"RTN","PXRMEXFI",11,0)
FOKTI(FILENUM) ;Check if it is ok to install/transport this FILE.
"RTN","PXRMEXFI",12,0)
 ;
"RTN","PXRMEXFI",13,0)
 ;Drugs not allowed.
"RTN","PXRMEXFI",14,0)
 I FILENUM=50 Q 0
"RTN","PXRMEXFI",15,0)
 ;
"RTN","PXRMEXFI",16,0)
 ;VA Generic not allowed.
"RTN","PXRMEXFI",17,0)
 I FILENUM=50.6 Q 0
"RTN","PXRMEXFI",18,0)
 ;
"RTN","PXRMEXFI",19,0)
 ;VA Drug Class not allowed.
"RTN","PXRMEXFI",20,0)
 I FILENUM=50.605 Q 0
"RTN","PXRMEXFI",21,0)
 ;
"RTN","PXRMEXFI",22,0)
 ;Lab tests not allowed.
"RTN","PXRMEXFI",23,0)
 I FILENUM=60 Q 0
"RTN","PXRMEXFI",24,0)
 ;
"RTN","PXRMEXFI",25,0)
 ;Radiology procedures not allowed.
"RTN","PXRMEXFI",26,0)
 I FILENUM=71 Q 0
"RTN","PXRMEXFI",27,0)
 ;
"RTN","PXRMEXFI",28,0)
 ;ICD9 (used in Dialogs) not allowed.
"RTN","PXRMEXFI",29,0)
 I FILENUM=80 Q 0
"RTN","PXRMEXFI",30,0)
 ;
"RTN","PXRMEXFI",31,0)
 ;ICD0 not allowed.
"RTN","PXRMEXFI",32,0)
 I FILENUM=80.1 Q 0
"RTN","PXRMEXFI",33,0)
 ;
"RTN","PXRMEXFI",34,0)
 ;CPT (used in Dialogs) not allowed.
"RTN","PXRMEXFI",35,0)
 I FILENUM=81 Q 0
"RTN","PXRMEXFI",36,0)
 ;
"RTN","PXRMEXFI",37,0)
 ;Order Dialogs not allowed.
"RTN","PXRMEXFI",38,0)
 I FILENUM=101.41 Q 0
"RTN","PXRMEXFI",39,0)
 ;
"RTN","PXRMEXFI",40,0)
 ;Orderable Items not allowed.
"RTN","PXRMEXFI",41,0)
 I FILENUM=101.43 Q 0
"RTN","PXRMEXFI",42,0)
 ;
"RTN","PXRMEXFI",43,0)
 ;Sites cannot create entries in GMRV VITAL TYPE.
"RTN","PXRMEXFI",44,0)
 I FILENUM=120.51 Q 0
"RTN","PXRMEXFI",45,0)
 ;
"RTN","PXRMEXFI",46,0)
 ;Mental Health Instruments not allowed.
"RTN","PXRMEXFI",47,0)
 I FILENUM=601 Q 0
"RTN","PXRMEXFI",48,0)
 ;
"RTN","PXRMEXFI",49,0)
 ;If control gets to here then it is an allowed file type.
"RTN","PXRMEXFI",50,0)
 Q 1
"RTN","PXRMEXFI",51,0)
 ;
"RTN","PXRMEXFI",52,0)
 ;======================================================================
"RTN","PXRMEXFI",53,0)
GETFACT(PT01,ATTR,NEWPT01,NAMECHG,EXISTS) ;Get the action for a file.
"RTN","PXRMEXFI",54,0)
 N ACTION,CHOICES,MSG,RESULT,X,Y
"RTN","PXRMEXFI",55,0)
 ;See if this entry is already defined.
"RTN","PXRMEXFI",56,0)
CHK ;
"RTN","PXRMEXFI",57,0)
 S NEWPT01=""
"RTN","PXRMEXFI",58,0)
 S ATTR("PT01")=PT01
"RTN","PXRMEXFI",59,0)
 S CHOICES="CIQS"
"RTN","PXRMEXFI",60,0)
 I EXISTS="" S EXISTS=$$EXISTS^PXRMEXIU(FILENUM,PT01)
"RTN","PXRMEXFI",61,0)
 I EXISTS D
"RTN","PXRMEXFI",62,0)
 . W !!,ATTR("FILE NAME")," entry ",PT01," already EXISTS,"
"RTN","PXRMEXFI",63,0)
 . W !,"what do you want to do?"
"RTN","PXRMEXFI",64,0)
 . S DIR("B")="S"
"RTN","PXRMEXFI",65,0)
 . S ACTION=$$GETACT^PXRMEXIU(CHOICES)
"RTN","PXRMEXFI",66,0)
 E  D
"RTN","PXRMEXFI",67,0)
 . W !!,ATTR("FILE NAME")," entry ",PT01," is NEW,"
"RTN","PXRMEXFI",68,0)
 . W !,"what do you want to do?"
"RTN","PXRMEXFI",69,0)
 . S DIR("B")="I"
"RTN","PXRMEXFI",70,0)
 . S ACTION=$$GETACT^PXRMEXIU(CHOICES)
"RTN","PXRMEXFI",71,0)
 ;
"RTN","PXRMEXFI",72,0)
 I ACTION="Q" Q ACTION
"RTN","PXRMEXFI",73,0)
 I ACTION="C" D
"RTN","PXRMEXFI",74,0)
 . S NEWPT01=$$GETUNAME^PXRMEXIU(.ATTR,.TA)
"RTN","PXRMEXFI",75,0)
 .;Make sure the NEW .01 passes any input transforms.
"RTN","PXRMEXFI",76,0)
 . I NEWPT01="" S ACTION="S"
"RTN","PXRMEXFI",77,0)
 . E  D CHK^DIE(ATTR("FILE NUMBER"),.01,"",NEWPT01,.RESULT,"MSG")
"RTN","PXRMEXFI",78,0)
 I $G(RESULT)="^" D  G CHK
"RTN","PXRMEXFI",79,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXFI",80,0)
 . K RESULT
"RTN","PXRMEXFI",81,0)
 ;
"RTN","PXRMEXFI",82,0)
 I (ACTION="I")&(+EXISTS>0) D
"RTN","PXRMEXFI",83,0)
 .;If the action is overwrite double check that is what the user
"RTN","PXRMEXFI",84,0)
 .;really wants to do.
"RTN","PXRMEXFI",85,0)
 . K X,Y
"RTN","PXRMEXFI",86,0)
 . S DIR(0)="Y"_U_"A"
"RTN","PXRMEXFI",87,0)
 . S DIR("A")="Are you sure you want to overwrite"
"RTN","PXRMEXFI",88,0)
 . S DIR("B")="N"
"RTN","PXRMEXFI",89,0)
 . D ^DIR K DIR
"RTN","PXRMEXFI",90,0)
 . I Y S ACTION="O"
"RTN","PXRMEXFI",91,0)
 . E  S ACTION="S"
"RTN","PXRMEXFI",92,0)
 ;
"RTN","PXRMEXFI",93,0)
 I ACTION="P" D
"RTN","PXRMEXFI",94,0)
 . N DIC,Y
"RTN","PXRMEXFI",95,0)
 . S DIC=ATTR("FILE NUMBER")
"RTN","PXRMEXFI",96,0)
 . S DIC(0)="AEMQ"
"RTN","PXRMEXFI",97,0)
 . D ^DIC
"RTN","PXRMEXFI",98,0)
 . I Y=-1 S ACTION="S"
"RTN","PXRMEXFI",99,0)
 . E  S NEWPT01=$P(Y,U,2)
"RTN","PXRMEXFI",100,0)
 ;
"RTN","PXRMEXFI",101,0)
 I NEWPT01'="" S NAMECHG(ATTR("FILE NUMBER"),PT01)=NEWPT01
"RTN","PXRMEXFI",102,0)
 Q ACTION
"RTN","PXRMEXFI",103,0)
 ;
"RTN","PXRMEXFI",104,0)
 ;======================================================================
"RTN","PXRMEXFI",105,0)
SETATTR(ATTR,FILE) ;Set the file attributes for the file FILE.
"RTN","PXRMEXFI",106,0)
 N MSG
"RTN","PXRMEXFI",107,0)
 S ATTR("FILE NUMBER")=FILE
"RTN","PXRMEXFI",108,0)
 S ATTR("FILE NAME")=$$GET1^DID(FILE,"","","NAME","","MSG")
"RTN","PXRMEXFI",109,0)
 ;This call gets the field length.
"RTN","PXRMEXFI",110,0)
 D FIELD^DID(FILE,.01,"","FIELD LENGTH","ATTR","MSG")
"RTN","PXRMEXFI",111,0)
 S ATTR("MIN FIELD LENGTH")=3
"RTN","PXRMEXFI",112,0)
 ;This read of DD is covered by DBIA 2023.
"RTN","PXRMEXFI",113,0)
 ;S ATTR("811.9 PTR")=$O(^DD(FILE,0,"PT",811.89))
"RTN","PXRMEXFI",114,0)
 Q
"RTN","PXRMEXFI",115,0)
 ;
"RTN","PXRMEXHF")
0^6^B44645176
"RTN","PXRMEXHF",1,0)
PXRMEXHF ; SLC/PKR - Routines to select and deal with host files. ;06/15/2001
"RTN","PXRMEXHF",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXHF",3,0)
 ;======================================================================
"RTN","PXRMEXHF",4,0)
CHF(SUCCESS,LIST,PATH,FILE) ;Put the repository entries in LIST into the
"RTN","PXRMEXHF",5,0)
 ;host file specified by PATH and FILE.
"RTN","PXRMEXHF",6,0)
 N GBL,LIEN,RIEN
"RTN","PXRMEXHF",7,0)
 S SUCCESS=1
"RTN","PXRMEXHF",8,0)
 S LIEN=$O(LIST(""))
"RTN","PXRMEXHF",9,0)
 I LIEN="" Q
"RTN","PXRMEXHF",10,0)
 S RIEN=$$RIEN^PXRMEXU1(LIEN)
"RTN","PXRMEXHF",11,0)
 S GBL="^PXD(811.8,"_RIEN_",100,1,0)"
"RTN","PXRMEXHF",12,0)
 ;Save the first entry.
"RTN","PXRMEXHF",13,0)
 S SUCCESS(LIEN)=$$GTF^%ZISH(GBL,4,PATH,FILE)
"RTN","PXRMEXHF",14,0)
 I SUCCESS(LIEN)=0 Q
"RTN","PXRMEXHF",15,0)
 ;Append any remaining entries.
"RTN","PXRMEXHF",16,0)
 F  S LIEN=$O(LIST(LIEN)) Q:+LIEN=0  D
"RTN","PXRMEXHF",17,0)
 . S RIEN=$$RIEN^PXRMEXU1(LIEN)
"RTN","PXRMEXHF",18,0)
 . S GBL="^PXD(811.8,"_RIEN_",100,1,0)"
"RTN","PXRMEXHF",19,0)
 . S SUCCESS(LIEN)=$$GATF^%ZISH(GBL,4,PATH,FILE)
"RTN","PXRMEXHF",20,0)
 Q
"RTN","PXRMEXHF",21,0)
 ;
"RTN","PXRMEXHF",22,0)
 ;======================================================================
"RTN","PXRMEXHF",23,0)
GETEHF() ;Get an existing host file.
"RTN","PXRMEXHF",24,0)
 ;Build a list of all .PRD files in the current directory.
"RTN","PXRMEXHF",25,0)
 N FILESPEC,FILELIST,PATH
"RTN","PXRMEXHF",26,0)
 S FILESPEC("*.PRD")=""
"RTN","PXRMEXHF",27,0)
 S PATH=$$PWD^%ZISH
"RTN","PXRMEXHF",28,0)
 N DIR,X,Y
"RTN","PXRMEXHF",29,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXHF",30,0)
 S DIR(0)="FAU"_U_"1:32"
"RTN","PXRMEXHF",31,0)
 S DIR("A")="Enter a path: "
"RTN","PXRMEXHF",32,0)
 S DIR("B")=PATH
"RTN","PXRMEXHF",33,0)
 S DIR("?",1)="A host file is a file on your host system."
"RTN","PXRMEXHF",34,0)
 S DIR("?",2)="A complete host file consists of a path, file name, and extension"
"RTN","PXRMEXHF",35,0)
 S DIR("?",3)="A path consists of a device and directory name."
"RTN","PXRMEXHF",36,0)
 S DIR("?",4)="The default extension is prd (Packed Reminder Definition)."
"RTN","PXRMEXHF",37,0)
 S DIR("?")="The default path is "_PATH
"RTN","PXRMEXHF",38,0)
 D ^DIR K DIR
"RTN","PXRMEXHF",39,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXHF",40,0)
 I $D(DIRUT) S DTOUT=1
"RTN","PXRMEXHF",41,0)
 I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","PXRMEXHF",42,0)
 S PATH=Y
"RTN","PXRMEXHF",43,0)
 S Y=$$LIST^%ZISH(PATH,"FILESPEC","FILELIST")
"RTN","PXRMEXHF",44,0)
 I Y D
"RTN","PXRMEXHF",45,0)
 . W !,"The following PRD files were found in ",PATH
"RTN","PXRMEXHF",46,0)
 . S FILE=""
"RTN","PXRMEXHF",47,0)
 . F  S FILE=$O(FILELIST(FILE)) Q:FILE=""  D
"RTN","PXRMEXHF",48,0)
 .. W !,?2,FILE
"RTN","PXRMEXHF",49,0)
 E  W !,"No PRD files were found in path ",PATH
"RTN","PXRMEXHF",50,0)
 ;
"RTN","PXRMEXHF",51,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXHF",52,0)
 S DIR(0)="FAOU"_U_"1:32"
"RTN","PXRMEXHF",53,0)
 S DIR("A")="Enter a file name: "
"RTN","PXRMEXHF",54,0)
 S DIR("?",1)="A file name has the format NAME.EXTENSION, the default extension is PRD"
"RTN","PXRMEXHF",55,0)
 S DIR("?",2)="Therefore if you type in FILE for the file name, the host file will be"
"RTN","PXRMEXHF",56,0)
 S DIR("?")="  "_PATH_"FILE.PRD"
"RTN","PXRMEXHF",57,0)
 D ^DIR K DIR
"RTN","PXRMEXHF",58,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXHF",59,0)
 I $D(DIRUT) S DTOUT=1
"RTN","PXRMEXHF",60,0)
 I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","PXRMEXHF",61,0)
 S FILE=Y
"RTN","PXRMEXHF",62,0)
 ;Add the default extension if there isn't one.
"RTN","PXRMEXHF",63,0)
 I FILE'["." S FILE=FILE_".PRD"
"RTN","PXRMEXHF",64,0)
 Q PATH_U_FILE
"RTN","PXRMEXHF",65,0)
 ;
"RTN","PXRMEXHF",66,0)
 ;======================================================================
"RTN","PXRMEXHF",67,0)
GETHFS() ;Get the name of a host file to store repository entries in.
"RTN","PXRMEXHF",68,0)
 N DIROUT,DIRUT,DTOUT,DUOUT,FILE,HFNAME,PATH
"RTN","PXRMEXHF",69,0)
GETHF ;As a default set the path to the current directory.
"RTN","PXRMEXHF",70,0)
 S PATH=$$PWD^%ZISH
"RTN","PXRMEXHF",71,0)
 N DIR,X,Y
"RTN","PXRMEXHF",72,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXHF",73,0)
 S DIR(0)="FAU"_U_"1:32"
"RTN","PXRMEXHF",74,0)
 S DIR("A")="Enter a path: "
"RTN","PXRMEXHF",75,0)
 S DIR("B")=PATH
"RTN","PXRMEXHF",76,0)
 S DIR("?",1)="A host file is a file on your host system."
"RTN","PXRMEXHF",77,0)
 S DIR("?",2)="A complete host file consists of a path, file name, and extension"
"RTN","PXRMEXHF",78,0)
 S DIR("?",3)="A path consists of a device and directory name."
"RTN","PXRMEXHF",79,0)
 S DIR("?",4)="The default extension is prd (Packed Reminder Definition)."
"RTN","PXRMEXHF",80,0)
 S DIR("?")="The default path is "_PATH
"RTN","PXRMEXHF",81,0)
 D ^DIR K DIR
"RTN","PXRMEXHF",82,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXHF",83,0)
 I $D(DIRUT) S DTOUT=1
"RTN","PXRMEXHF",84,0)
 I $D(DTOUT)!($D(DUOUT)) Q 0
"RTN","PXRMEXHF",85,0)
 S PATH=Y
"RTN","PXRMEXHF",86,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXHF",87,0)
 S DIR(0)="FAU"_U_"1:32"
"RTN","PXRMEXHF",88,0)
 S DIR("A")="Enter a file name: "
"RTN","PXRMEXHF",89,0)
 S DIR("?",1)="A file name has the format NAME.EXTENSION, the default extension is PRD"
"RTN","PXRMEXHF",90,0)
 S DIR("?",2)="Therefore if you type in FILE for the file name, the host file will be"
"RTN","PXRMEXHF",91,0)
 S DIR("?")="  "_PATH_"FILE.PRD"
"RTN","PXRMEXHF",92,0)
 D ^DIR K DIR
"RTN","PXRMEXHF",93,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXHF",94,0)
 I $D(DIRUT) S DTOUT=1
"RTN","PXRMEXHF",95,0)
 I $D(DTOUT)!($D(DUOUT)) Q 0
"RTN","PXRMEXHF",96,0)
 S FILE=Y
"RTN","PXRMEXHF",97,0)
 ;Add the default extension if there isn't one.
"RTN","PXRMEXHF",98,0)
 I FILE'["." S FILE=FILE_".PRD"
"RTN","PXRMEXHF",99,0)
 S HFNAME=PATH_FILE
"RTN","PXRMEXHF",100,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXHF",101,0)
 S DIR(0)="YAO"
"RTN","PXRMEXHF",102,0)
 S DIR("A")="Will save selected entries to host file "_HFNAME_"?: "
"RTN","PXRMEXHF",103,0)
 S DIR("B")="Y"
"RTN","PXRMEXHF",104,0)
 D ^DIR K DIR
"RTN","PXRMEXHF",105,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXHF",106,0)
 I $D(DIRUT) S DTOUT=1
"RTN","PXRMEXHF",107,0)
 I $D(DTOUT)!($D(DUOUT)) Q 0
"RTN","PXRMEXHF",108,0)
 I 'Y G GETHF
"RTN","PXRMEXHF",109,0)
 Q PATH_U_FILE
"RTN","PXRMEXHF",110,0)
 ;
"RTN","PXRMEXHF",111,0)
 ;======================================================================
"RTN","PXRMEXHF",112,0)
LHF(SUCCESS,PATH,FILE) ;Load a host file containing repository entries into
"RTN","PXRMEXHF",113,0)
 ;the repository.
"RTN","PXRMEXHF",114,0)
 N CURRL,CSUM,DATEP,DONE,FDA,GBL,IENROOT,IND,LINE,MSG,NENTRY,NLINES
"RTN","PXRMEXHF",115,0)
 N RETMP,RNAME,SITE,SOURCE,SSOURCE,US,USER,VRSN
"RTN","PXRMEXHF",116,0)
 K ^TMP("PXRMEXHF",$J)
"RTN","PXRMEXHF",117,0)
 S GBL="^TMP(""PXRMEXHF"",$J,1,0)"
"RTN","PXRMEXHF",118,0)
 S GBL=$NA(@GBL)
"RTN","PXRMEXHF",119,0)
 S SUCCESS=$$FTG^%ZISH(PATH,FILE,GBL,3)
"RTN","PXRMEXHF",120,0)
 I 'SUCCESS Q
"RTN","PXRMEXHF",121,0)
 ;Make sure it has the correct format.
"RTN","PXRMEXHF",122,0)
 I (^TMP("PXRMEXHF",$J,1,0)'["xml")!(^TMP("PXRMEXHF",$J,2,0)'="<REMINDER_EXCHANGE_FILE_ENTRY>") D  Q
"RTN","PXRMEXHF",123,0)
 . W !,"This host file does not have the correct format!"
"RTN","PXRMEXHF",124,0)
 . H 2
"RTN","PXRMEXHF",125,0)
 . S SUCCESS=0
"RTN","PXRMEXHF",126,0)
 . K ^TMP("PXRMEXHF",$J)
"RTN","PXRMEXHF",127,0)
 W !,"Loading host file ",PATH,FILE
"RTN","PXRMEXHF",128,0)
 S RETMP="^TMP(""PXRMEXLHF"",$J)"
"RTN","PXRMEXHF",129,0)
 S (CURRL,DONE,NENTRY,NLINES,SSOURCE)=0
"RTN","PXRMEXHF",130,0)
 F  Q:DONE  D
"RTN","PXRMEXHF",131,0)
 . S CURRL=CURRL+1
"RTN","PXRMEXHF",132,0)
 . S LINE=$G(^TMP("PXRMEXHF",$J,CURRL,0))
"RTN","PXRMEXHF",133,0)
 . I LINE="" S DONE=1 Q
"RTN","PXRMEXHF",134,0)
 . S NLINES=NLINES+1
"RTN","PXRMEXHF",135,0)
 . S ^TMP("PXRMEXLHF",$J,NLINES,0)=LINE
"RTN","PXRMEXHF",136,0)
 . I LINE["<PACKAGE_VERSION>" S VRSN=$$GETTAGV^PXRMEXU3(LINE,"<PACKAGE_VERSION>")
"RTN","PXRMEXHF",137,0)
 . I LINE="<SOURCE>" S SSOURCE=1
"RTN","PXRMEXHF",138,0)
 . I SSOURCE D
"RTN","PXRMEXHF",139,0)
 .. I LINE["<NAME>" S RNAME=$$GETTAGV^PXRMEXU3(LINE,"<NAME>")
"RTN","PXRMEXHF",140,0)
 .. I LINE["<USER>" S USER=$$GETTAGV^PXRMEXU3(LINE,"<USER>")
"RTN","PXRMEXHF",141,0)
 .. I LINE["<SITE>" S SITE=$$GETTAGV^PXRMEXU3(LINE,"<SITE>")
"RTN","PXRMEXHF",142,0)
 .. I LINE["<DATE_PACKED>" S DATEP=$$GETTAGV^PXRMEXU3(LINE,"<DATE_PACKED>")
"RTN","PXRMEXHF",143,0)
 . I LINE="</SOURCE>" D
"RTN","PXRMEXHF",144,0)
 .. S SSOURCE=0
"RTN","PXRMEXHF",145,0)
 .. S SOURCE=USER_" at "_SITE
"RTN","PXRMEXHF",146,0)
 .;See if the entry is loaded into the temporary storage.
"RTN","PXRMEXHF",147,0)
 . I LINE="</REMINDER_EXCHANGE_FILE_ENTRY>" D
"RTN","PXRMEXHF",148,0)
 .. S NLINES=0
"RTN","PXRMEXHF",149,0)
 .. S NENTRY=NENTRY+1
"RTN","PXRMEXHF",150,0)
 ..;Make sure it has the correct format.
"RTN","PXRMEXHF",151,0)
 .. I (^TMP("PXRMEXLHF",$J,1,0)'["xml")!(^TMP("PXRMEXLHF",$J,2,0)'="<REMINDER_EXCHANGE_FILE_ENTRY>") D  Q
"RTN","PXRMEXHF",152,0)
 ... W !,"There is a problem reading this host file try a new copy of it."
"RTN","PXRMEXHF",153,0)
 ... S SUCCESS=0
"RTN","PXRMEXHF",154,0)
 ... H 2
"RTN","PXRMEXHF",155,0)
 ..;Make sure this entry does not already exist.
"RTN","PXRMEXHF",156,0)
 .. I $$REXISTS^PXRMEXIU(RNAME,DATEP) D
"RTN","PXRMEXHF",157,0)
 ... W !,RNAME," with a date packed of ",DATEP
"RTN","PXRMEXHF",158,0)
 ... W !,"is already in the Exchange File."
"RTN","PXRMEXHF",159,0)
 ... S SUCCESS(NENTRY)=0
"RTN","PXRMEXHF",160,0)
 ... H 2
"RTN","PXRMEXHF",161,0)
 .. E  D
"RTN","PXRMEXHF",162,0)
 ... K FDA,IENROOT
"RTN","PXRMEXHF",163,0)
 ... S FDA(811.8,"+1,",.01)=RNAME
"RTN","PXRMEXHF",164,0)
 ... S FDA(811.8,"+1,",.02)=SOURCE
"RTN","PXRMEXHF",165,0)
 ... S FDA(811.8,"+1,",.03)=DATEP
"RTN","PXRMEXHF",166,0)
 ... D UPDATE^PXRMEXPU(.US,.FDA,.IENROOT)
"RTN","PXRMEXHF",167,0)
 ... S SUCCESS(NENTRY)=US
"RTN","PXRMEXHF",168,0)
 ...;Create the description and save the data.
"RTN","PXRMEXHF",169,0)
 ... N DESCT,KEYWORDT
"RTN","PXRMEXHF",170,0)
 ... D DESC^PXRMEXU3(RETMP,.DESCT)
"RTN","PXRMEXHF",171,0)
 ... D KEYWORD^PXRMEXU3(RETMP,.KEYWORDT)
"RTN","PXRMEXHF",172,0)
 ... D DESC^PXRMEXU1(IENROOT(1),RNAME,SOURCE,DATEP,"DESCT","KEYWORDT")
"RTN","PXRMEXHF",173,0)
 ... M ^PXD(811.8,IENROOT(1),100)=^TMP("PXRMEXLHF",$J)
"RTN","PXRMEXHF",174,0)
 .. K ^TMP("PXRMEXLHF",$J)
"RTN","PXRMEXHF",175,0)
 ;
"RTN","PXRMEXHF",176,0)
 ;Check the success of the entry installs.
"RTN","PXRMEXHF",177,0)
 S SUCCESS=1
"RTN","PXRMEXHF",178,0)
 S IND=""
"RTN","PXRMEXHF",179,0)
 F  S IND=$O(SUCCESS(IND)) Q:+IND=0  D
"RTN","PXRMEXHF",180,0)
 . I 'SUCCESS(IND) S SUCCESS=0 Q
"RTN","PXRMEXHF",181,0)
 K ^TMP("PXRMEXHF",$J)
"RTN","PXRMEXHF",182,0)
 K ^TMP("PXRMEXLHF",$J)
"RTN","PXRMEXHF",183,0)
 Q
"RTN","PXRMEXHF",184,0)
 ;
"RTN","PXRMEXIC")
0^7^B31385042
"RTN","PXRMEXIC",1,0)
PXRMEXIC ; SLC/PKR/PJH - Routines to install repository entry components. ;06/07/2001
"RTN","PXRMEXIC",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXIC",3,0)
 ;======================================================================
"RTN","PXRMEXIC",4,0)
FILE(PXRMRIEN,IND120,JND120,ACTION,ATTR,NAMECHG) ;Read and process a
"RTN","PXRMEXIC",5,0)
 ;file entry in repository entry PXRMRIEN. IND120 and JND120 are the
"RTN","PXRMEXIC",6,0)
 ;indexes for the component list. ACTION is the possible actions, they
"RTN","PXRMEXIC",7,0)
 ;are I=install, O=overwrite, C=copy to a new name. If the action is
"RTN","PXRMEXIC",8,0)
 ;C then NAMECHG will contain the new name.
"RTN","PXRMEXIC",9,0)
 N DATA,FDA,FDAEND,FDASTART,FIELD,FILENUM
"RTN","PXRMEXIC",10,0)
 N IEN,IENS,IENREND,IENROOT,IENRSTR,IND,INDICES
"RTN","PXRMEXIC",11,0)
 N LINE,MSG,OFDA,ORGIEN,NEW01,PXRMEDOK,PXRMEXCH
"RTN","PXRMEXIC",12,0)
 N SRCIEN,TEMP,TOPFNUM
"RTN","PXRMEXIC",13,0)
 N WPLCNT,WPTMP
"RTN","PXRMEXIC",14,0)
 ;Set PXRMEDOK so files pointing to sponsors can be installed.
"RTN","PXRMEXIC",15,0)
 ;Set PXRMEXCH so national entries can be installed and prevent
"RTN","PXRMEXIC",16,0)
 ;execution of the input transform for custom logic fields.
"RTN","PXRMEXIC",17,0)
 S (PXRMEDOK,PXRMEXCH)=1
"RTN","PXRMEXIC",18,0)
 S TEMP=^PXD(811.8,PXRMRIEN,120,IND120,1,JND120,0)
"RTN","PXRMEXIC",19,0)
 S FDASTART=+$P(TEMP,U,2)
"RTN","PXRMEXIC",20,0)
 S FDAEND=+$P(TEMP,U,3)
"RTN","PXRMEXIC",21,0)
 S IENRSTR=+$P(TEMP,U,4)
"RTN","PXRMEXIC",22,0)
 S IENREND=+$P(TEMP,U,5)
"RTN","PXRMEXIC",23,0)
 F IND=FDASTART:1:FDAEND D
"RTN","PXRMEXIC",24,0)
 . S LINE=^PXD(811.8,PXRMRIEN,100,IND,0)
"RTN","PXRMEXIC",25,0)
 . S INDICES=$P(LINE,"~",1)
"RTN","PXRMEXIC",26,0)
 . S DATA=$P(LINE,"~",2)
"RTN","PXRMEXIC",27,0)
 . S FILENUM=$P(INDICES,";",1)
"RTN","PXRMEXIC",28,0)
 . S IENS=$P(INDICES,";",2)
"RTN","PXRMEXIC",29,0)
 . I IND=START S SRCIEN=+IENS
"RTN","PXRMEXIC",30,0)
 . S FIELD=$P(INDICES,";",3)
"RTN","PXRMEXIC",31,0)
 . I LINE["WP-start" D
"RTN","PXRMEXIC",32,0)
 .. S DATA="WPTMP("_IND_","_+FIELD_")"
"RTN","PXRMEXIC",33,0)
 .. S WPLCNT=$P(LINE,"~",3)
"RTN","PXRMEXIC",34,0)
 .. D WORDPROC(PXRMRIEN,.WPTMP,IND,+FIELD,.IND,WPLCNT)
"RTN","PXRMEXIC",35,0)
 . I (IND=START)&(FIELD=.01) D
"RTN","PXRMEXIC",36,0)
 ..;Save the top level file number.
"RTN","PXRMEXIC",37,0)
 .. S TOPFNUM=FILENUM
"RTN","PXRMEXIC",38,0)
 ..;If the action is copy let FileMan determine where to put it.
"RTN","PXRMEXIC",39,0)
 .. I ACTION="C" S IENROOT(SRCIEN)=""
"RTN","PXRMEXIC",40,0)
 ..;
"RTN","PXRMEXIC",41,0)
 ..;If the action is install try to install at the source ien. If
"RTN","PXRMEXIC",42,0)
 ..;an entry already exists at the source ien let FileMan determine
"RTN","PXRMEXIC",43,0)
 ..;where to put it.
"RTN","PXRMEXIC",44,0)
 .. I ACTION="I" D
"RTN","PXRMEXIC",45,0)
 ... S ORGIEN=+$$FIND1^DIC(FILENUM,"","Q","`"_SRCIEN)
"RTN","PXRMEXIC",46,0)
 ... I ORGIEN>0 S IENROOT(SRCIEN)=""
"RTN","PXRMEXIC",47,0)
 ... E  S IENROOT(SRCIEN)=SRCIEN
"RTN","PXRMEXIC",48,0)
 ..;
"RTN","PXRMEXIC",49,0)
 ..;If the action is overwrite delete the original entry and put
"RTN","PXRMEXIC",50,0)
 ..;the replacement at the same ien.
"RTN","PXRMEXIC",51,0)
 .. I ACTION="O" D
"RTN","PXRMEXIC",52,0)
 ... S ORGIEN=$$EXISTS^PXRMEXIU(FILENUM,DATA)
"RTN","PXRMEXIC",53,0)
 ... ;D DELETE^PXRMEXFI(FILENUM,ORGIEN)
"RTN","PXRMEXIC",54,0)
 ... ;S IENROOT(SRCIEN)=ORGIEN
"RTN","PXRMEXIC",55,0)
 ... S IENROOT(SRCIEN)=""
"RTN","PXRMEXIC",56,0)
 .;
"RTN","PXRMEXIC",57,0)
 . S FDA(FILENUM,IENS,FIELD)=DATA
"RTN","PXRMEXIC",58,0)
 ;
"RTN","PXRMEXIC",59,0)
 ;Initialize the edit history.
"RTN","PXRMEXIC",60,0)
 D INIEH(TOPFNUM,IENS,.FDA,.WPTMP)
"RTN","PXRMEXIC",61,0)
 ;Build the IENROOT
"RTN","PXRMEXIC",62,0)
 F IND=IENRSTR:1:IENREND D
"RTN","PXRMEXIC",63,0)
 . I IND=0 Q
"RTN","PXRMEXIC",64,0)
 . S TEMP=^PXD(811.8,PXRMRIEN,100,IND,0)
"RTN","PXRMEXIC",65,0)
 . S IENROOT($P(TEMP,U,1))=$P(TEMP,U,2)
"RTN","PXRMEXIC",66,0)
 ;Check for name changes, i.e., the copy action.
"RTN","PXRMEXIC",67,0)
 D NAMECHG(.FDA,.NAMECHG,TOPFNUM)
"RTN","PXRMEXIC",68,0)
 ;Special handling for file 801.41
"RTN","PXRMEXIC",69,0)
 I TOPFNUM=801.41 D  Q:PXRMDONE
"RTN","PXRMEXIC",70,0)
 . D DLG^PXRMEXU4(.FDA,.NAMECHG)
"RTN","PXRMEXIC",71,0)
 ;
"RTN","PXRMEXIC",72,0)
 ;If the file number is 811.4 the user must have programmer
"RTN","PXRMEXIC",73,0)
 ;access to install it.
"RTN","PXRMEXIC",74,0)
 I (TOPFNUM=811.4)&(DUZ(0)'="@") D  Q
"RTN","PXRMEXIC",75,0)
 . W !,"Only programmers can install Reminder Computed Findings."
"RTN","PXRMEXIC",76,0)
 ;
"RTN","PXRMEXIC",77,0)
 ;Special handling for file 811.5.
"RTN","PXRMEXIC",78,0)
 I TOPFNUM=811.5 D
"RTN","PXRMEXIC",79,0)
 . D TERM^PXRMEXIU(.FDA,.NAMECHG)
"RTN","PXRMEXIC",80,0)
 ;
"RTN","PXRMEXIC",81,0)
 ;Special handling for file 811.9.
"RTN","PXRMEXIC",82,0)
 I TOPFNUM=811.9 D
"RTN","PXRMEXIC",83,0)
 . D DEF^PXRMEXIU(.FDA,.NAMECHG)
"RTN","PXRMEXIC",84,0)
 .;Don't execute the input transform for custom logic fields.
"RTN","PXRMEXIC",85,0)
 . S PXRMEXCH=1
"RTN","PXRMEXIC",86,0)
 ;
"RTN","PXRMEXIC",87,0)
 ;Special handling for file 9999999.64.
"RTN","PXRMEXIC",88,0)
 I TOPFNUM=9999999.64 D
"RTN","PXRMEXIC",89,0)
 . D HF^PXRMEXIU(.FDA,.NAMECHG)
"RTN","PXRMEXIC",90,0)
 ;
"RTN","PXRMEXIC",91,0)
 I ACTION="O" D
"RTN","PXRMEXIC",92,0)
 . K OFDA M OFDA=FDA
"RTN","PXRMEXIC",93,0)
 .;Make the .01 unique for the test install.
"RTN","PXRMEXIC",94,0)
 . S IENS=$O(FDA(TOPFNUM,""))
"RTN","PXRMEXIC",95,0)
 . S FDA(TOPFNUM,IENS,.01)="tmp"_$E(FDA(TOPFNUM,IENS,.01),1,32)
"RTN","PXRMEXIC",96,0)
 I $D(FDA) D UPDATE^DIE("E","FDA","IENROOT","MSG")
"RTN","PXRMEXIC",97,0)
 I $D(MSG) D
"RTN","PXRMEXIC",98,0)
 . W !,"The update failed, UPDATE^DIE returned the following error message:"
"RTN","PXRMEXIC",99,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXIC",100,0)
 . W !!,ATTR("FILE NAME")," entry ",ATTR("PT01")," did not get installed!"
"RTN","PXRMEXIC",101,0)
 . W !,"Examine the above error message for the reason.",!
"RTN","PXRMEXIC",102,0)
 . H 2
"RTN","PXRMEXIC",103,0)
 ;
"RTN","PXRMEXIC",104,0)
 ;If the action was overwrite and the orginal update worked put the
"RTN","PXRMEXIC",105,0)
 ;entry at its original ien.
"RTN","PXRMEXIC",106,0)
 I (ACTION="O")&('$D(MSG)) D
"RTN","PXRMEXIC",107,0)
 . D DELETE^PXRMEXFI(TOPFNUM,IENROOT(SRCIEN))
"RTN","PXRMEXIC",108,0)
 . D DELETE^PXRMEXFI(TOPFNUM,ORGIEN)
"RTN","PXRMEXIC",109,0)
 . S IENROOT(SRCIEN)=ORGIEN
"RTN","PXRMEXIC",110,0)
 . D UPDATE^DIE("E","OFDA","IENROOT","MSG")
"RTN","PXRMEXIC",111,0)
 Q
"RTN","PXRMEXIC",112,0)
 ;
"RTN","PXRMEXIC",113,0)
 ;======================================================================
"RTN","PXRMEXIC",114,0)
INIEH(FILENUM,IENS,FDA,WPTMP) ;If the file is a clinical reminder file and
"RTN","PXRMEXIC",115,0)
 ;it has an edit history initialize the history.
"RTN","PXRMEXIC",116,0)
 I (FILENUM<800)!(FILENUM>811.9) Q
"RTN","PXRMEXIC",117,0)
 ;
"RTN","PXRMEXIC",118,0)
 N IENS,SFN,TARGET,WP
"RTN","PXRMEXIC",119,0)
 D FIELD^DID(FILENUM,"EDIT HISTORY","","SPECIFIER","TARGET")
"RTN","PXRMEXIC",120,0)
 S SFN=+$G(TARGET("SPECIFIER"))
"RTN","PXRMEXIC",121,0)
 I SFN=0 Q
"RTN","PXRMEXIC",122,0)
 S IENS=$O(FDA(SFN,""))
"RTN","PXRMEXIC",123,0)
 I IENS="" Q
"RTN","PXRMEXIC",124,0)
 S FDA(SFN,IENS,.01)=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMEXIC",125,0)
 S FDA(SFN,IENS,1)=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMEXIC",126,0)
 ;The word-processing field is set when the packing is done.
"RTN","PXRMEXIC",127,0)
 S WP=FDA(SFN,IENS,2)
"RTN","PXRMEXIC",128,0)
 K @WP
"RTN","PXRMEXIC",129,0)
 S @WP@(1)="Exchange Install"
"RTN","PXRMEXIC",130,0)
 Q
"RTN","PXRMEXIC",131,0)
 ;
"RTN","PXRMEXIC",132,0)
 ;======================================================================
"RTN","PXRMEXIC",133,0)
NAMECHG(FDA,NAMECHG,FILENUM) ;If this component has been copied to a new
"RTN","PXRMEXIC",134,0)
 ;name make the change.
"RTN","PXRMEXIC",135,0)
 N CLASS,IENS,PT01
"RTN","PXRMEXIC",136,0)
 S IENS=$O(FDA(FILENUM,""))
"RTN","PXRMEXIC",137,0)
 S PT01=FDA(FILENUM,IENS,.01)
"RTN","PXRMEXIC",138,0)
 I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXIC",139,0)
 . S FDA(FILENUM,IENS,.01)=NAMECHG(FILENUM,PT01)
"RTN","PXRMEXIC",140,0)
 . I (FILENUM<801.41)!(FILENUM>811.9) Q
"RTN","PXRMEXIC",141,0)
 .;Once a component has been copied CLASS can no longer be national.
"RTN","PXRMEXIC",142,0)
 . S CLASS=$G(FDA(FILENUM,IENS,100))
"RTN","PXRMEXIC",143,0)
 . I CLASS["N" S FDA(FILENUM,IENS,100)="LOCAL"
"RTN","PXRMEXIC",144,0)
 .;The Sponsor is also removed.
"RTN","PXRMEXIC",145,0)
 . K FDA(FILENUM,IENS,101)
"RTN","PXRMEXIC",146,0)
 Q
"RTN","PXRMEXIC",147,0)
 ;
"RTN","PXRMEXIC",148,0)
 ;======================================================================
"RTN","PXRMEXIC",149,0)
RTNLD(PXRMRIEN,START,END,ATTR,RTN) ;Load a routine from the repository into
"RTN","PXRMEXIC",150,0)
 ;the array RTN.
"RTN","PXRMEXIC",151,0)
 N IND,LINE,LN,ROUTINE
"RTN","PXRMEXIC",152,0)
 S LINE=^PXD(811.8,PXRMRIEN,100,START,0)
"RTN","PXRMEXIC",153,0)
 S ROUTINE=$P(LINE,";",1)
"RTN","PXRMEXIC",154,0)
 S ROUTINE=$TR(ROUTINE," ","")
"RTN","PXRMEXIC",155,0)
 S ATTR("FILE NUMBER")=0
"RTN","PXRMEXIC",156,0)
 S ATTR("NAME")=$P(LINE,";",1)
"RTN","PXRMEXIC",157,0)
 S ATTR("NAME")=$TR(ATTR("NAME")," ","")
"RTN","PXRMEXIC",158,0)
 S ATTR("MIN FIELD LENGTH")=3
"RTN","PXRMEXIC",159,0)
 S ATTR("FIELD LENGTH")=8
"RTN","PXRMEXIC",160,0)
 S LN=0
"RTN","PXRMEXIC",161,0)
 F IND=START:1:END D
"RTN","PXRMEXIC",162,0)
 . S LN=LN+1
"RTN","PXRMEXIC",163,0)
 . S LINE=^PXD(811.8,PXRMRIEN,100,IND,0)
"RTN","PXRMEXIC",164,0)
 . S RTN(LN,0)=LINE
"RTN","PXRMEXIC",165,0)
 Q
"RTN","PXRMEXIC",166,0)
 ;
"RTN","PXRMEXIC",167,0)
 ;======================================================================
"RTN","PXRMEXIC",168,0)
RTNSAVE(RTN,NAME) ;Save the routine loaded in RTN to the name
"RTN","PXRMEXIC",169,0)
 ;found in NAMECHG.
"RTN","PXRMEXIC",170,0)
 N DIE,XCN
"RTN","PXRMEXIC",171,0)
 ;%ZOSF("SAVE") requires a global.
"RTN","PXRMEXIC",172,0)
 K ^TMP($J,"PXRMRTN")
"RTN","PXRMEXIC",173,0)
 S DIE="^TMP($J,""PXRMRTN"","
"RTN","PXRMEXIC",174,0)
 M ^TMP($J,"PXRMRTN")=RTN
"RTN","PXRMEXIC",175,0)
 S XCN=0
"RTN","PXRMEXIC",176,0)
 S X=NAME
"RTN","PXRMEXIC",177,0)
 X ^%ZOSF("SAVE")
"RTN","PXRMEXIC",178,0)
 K ^TMP($J,"PXRMRTN")
"RTN","PXRMEXIC",179,0)
 Q
"RTN","PXRMEXIC",180,0)
 ;
"RTN","PXRMEXIC",181,0)
 ;======================================================================
"RTN","PXRMEXIC",182,0)
WORDPROC(PXRMRIEN,WPTMP,I1,I2,IND,WPLCNT) ;Load WPTMP with the word
"RTN","PXRMEXIC",183,0)
 ;processing field.
"RTN","PXRMEXIC",184,0)
 N I3
"RTN","PXRMEXIC",185,0)
 F I3=1:1:WPLCNT D
"RTN","PXRMEXIC",186,0)
 . S IND=IND+1
"RTN","PXRMEXIC",187,0)
 . S WPTMP(I1,I2,I3)=^PXD(811.8,PXRMRIEN,100,IND,0)
"RTN","PXRMEXIC",188,0)
 Q
"RTN","PXRMEXIC",189,0)
 ;
"RTN","PXRMEXID")
0^8^B46494297
"RTN","PXRMEXID",1,0)
PXRMEXID ;SLC/PJH - Reminder Dialog Exchange Install Routine. ;06/12/2001
"RTN","PXRMEXID",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2001
"RTN","PXRMEXID",3,0)
 ;
"RTN","PXRMEXID",4,0)
 ;=====================================================================
"RTN","PXRMEXID",5,0)
 ;
"RTN","PXRMEXID",6,0)
 ;Install all components in an exchange file entry
"RTN","PXRMEXID",7,0)
 ;------------------------------------------------
"RTN","PXRMEXID",8,0)
INSALL N ALL,IND,PXRMDONE
"RTN","PXRMEXID",9,0)
 N DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXID",10,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXID",11,0)
 K PXRMNMCH
"RTN","PXRMEXID",12,0)
 ;
"RTN","PXRMEXID",13,0)
 ;Set the install date and time.
"RTN","PXRMEXID",14,0)
 S IND="",PXRMDONE=0,^TMP("PXRMEXIA",$J,"DT")=$$NOW^XLFDT
"RTN","PXRMEXID",15,0)
 ;
"RTN","PXRMEXID",16,0)
 ;Go to full screen mode.
"RTN","PXRMEXID",17,0)
 D FULL^VALM1
"RTN","PXRMEXID",18,0)
 ;
"RTN","PXRMEXID",19,0)
 ;Check if all or none exists - option to install all unchanged
"RTN","PXRMEXID",20,0)
 N DNAME
"RTN","PXRMEXID",21,0)
 S DNAME=$G(^TMP("PXRMEXTMP",$J,"PXRMDNAM"))
"RTN","PXRMEXID",22,0)
 D EXIST^PXRMEXIX(.ALL,DNAME,"reminder dialog","")
"RTN","PXRMEXID",23,0)
 ;
"RTN","PXRMEXID",24,0)
 ;Lock the entire file
"RTN","PXRMEXID",25,0)
 Q:'$$LOCK
"RTN","PXRMEXID",26,0)
 ;
"RTN","PXRMEXID",27,0)
 ;Install all components
"RTN","PXRMEXID",28,0)
 F  S IND=$O(^TMP("PXRMEXLD",$J,"SEL",IND),-1) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMEXID",29,0)
 .D INSCOM(IND,1)
"RTN","PXRMEXID",30,0)
 ;
"RTN","PXRMEXID",31,0)
 ;Clear lock
"RTN","PXRMEXID",32,0)
 D UNLOCK
"RTN","PXRMEXID",33,0)
 ;
"RTN","PXRMEXID",34,0)
 ;Rebuild display workfile
"RTN","PXRMEXID",35,0)
 D DISP^PXRMEXLD(PXRMMODE)
"RTN","PXRMEXID",36,0)
 Q
"RTN","PXRMEXID",37,0)
 ;
"RTN","PXRMEXID",38,0)
 ;Build list of descendents names
"RTN","PXRMEXID",39,0)
 ;-------------------------------
"RTN","PXRMEXID",40,0)
INSBLD(NAME,INAME) ;
"RTN","PXRMEXID",41,0)
 N DNAME,IDATA,ISEQ
"RTN","PXRMEXID",42,0)
 S ISEQ=0
"RTN","PXRMEXID",43,0)
 F  S ISEQ=$O(^TMP("PXRMEXTMP",$J,"DMAP",NAME,ISEQ)) Q:'ISEQ  D
"RTN","PXRMEXID",44,0)
 .S IDATA=$G(^TMP("PXRMEXTMP",$J,"DMAP",NAME,ISEQ)) Q:IDATA=""
"RTN","PXRMEXID",45,0)
 .S DNAME=$P(IDATA,U) Q:DNAME=""  Q:$$PXRM(DNAME)  S INAME(DNAME)=""
"RTN","PXRMEXID",46,0)
 .;Check for descendants
"RTN","PXRMEXID",47,0)
 .I $D(^TMP("PXRMEXTMP",$J,"DMAP",DNAME)) D INSBLD(DNAME,.INAME)
"RTN","PXRMEXID",48,0)
 Q
"RTN","PXRMEXID",49,0)
 ;
"RTN","PXRMEXID",50,0)
 ;Install component IND
"RTN","PXRMEXID",51,0)
 ;---------------------
"RTN","PXRMEXID",52,0)
INSCOM(IND,SILENT) ;
"RTN","PXRMEXID",53,0)
 N ACTION,ATTR,DTYP,END,EXISTS,FILENUM,IND120,JND120
"RTN","PXRMEXID",54,0)
 N NEWPT01,PT01,START,TEMP
"RTN","PXRMEXID",55,0)
 S TEMP=^TMP("PXRMEXLD",$J,"SEL",IND),FILENUM=$P(TEMP,U,1)
"RTN","PXRMEXID",56,0)
 S EXISTS=$P(TEMP,U,4),START=$P(TEMP,U,2),END=$P(TEMP,U,3) Q:START=""
"RTN","PXRMEXID",57,0)
 S JND120=$P(TEMP,U,6) Q:'JND120
"RTN","PXRMEXID",58,0)
 S IND120=$P(TEMP,U,5) Q:'IND120
"RTN","PXRMEXID",59,0)
 S TEMP=^PXD(811.8,PXRMRIEN,100,START,0),PT01=$P(TEMP,"~",2) Q:PT01=""
"RTN","PXRMEXID",60,0)
 S DTYP=$G(^TMP("PXRMEXTMP",$J,"DTYP",PT01))
"RTN","PXRMEXID",61,0)
 I DTYP="dialog" S DTYP="reminder dialog"
"RTN","PXRMEXID",62,0)
 ;
"RTN","PXRMEXID",63,0)
 ;Go to full screen mode.
"RTN","PXRMEXID",64,0)
 D FULL^VALM1
"RTN","PXRMEXID",65,0)
 ;
"RTN","PXRMEXID",66,0)
 ;Check for descendents
"RTN","PXRMEXID",67,0)
 I 'SILENT,$$INSDSC(PT01) D  Q:PXRMDONE
"RTN","PXRMEXID",68,0)
 .N ANS,INDS,TEXT
"RTN","PXRMEXID",69,0)
 .S TEXT(1)=PT01_" ("_DTYP_") contains sub-components."
"RTN","PXRMEXID",70,0)
 .S TEXT="Install all sub-components with the "_DTYP_": "
"RTN","PXRMEXID",71,0)
 .;Give option to install all descendents
"RTN","PXRMEXID",72,0)
 .D ASK^PXRMEXIX(.ANS,.TEXT,1) Q:PXRMDONE
"RTN","PXRMEXID",73,0)
 .I $G(ANS)="Y" D
"RTN","PXRMEXID",74,0)
 ..S INDS=IND
"RTN","PXRMEXID",75,0)
 ..N IDATA,INAME,IND
"RTN","PXRMEXID",76,0)
 ..;Build list of decendents to install
"RTN","PXRMEXID",77,0)
 ..D INSBLD(PT01,.INAME)
"RTN","PXRMEXID",78,0)
 ..;Check if all or none exists - option to install all unchanged
"RTN","PXRMEXID",79,0)
 ..D EXIST^PXRMEXIX(.ALL,PT01,DTYP,.INAME) Q:PXRMDONE
"RTN","PXRMEXID",80,0)
 ..;Start at the end of the list
"RTN","PXRMEXID",81,0)
 ..S IND=""
"RTN","PXRMEXID",82,0)
 ..F  S IND=$O(^TMP("PXRMEXLD",$J,"SEL",IND),-1) Q:PXRMDONE!(IND=INDS)  D
"RTN","PXRMEXID",83,0)
 ...N PT01,START,TEMP
"RTN","PXRMEXID",84,0)
 ...S TEMP=^TMP("PXRMEXLD",$J,"SEL",IND),START=$P(TEMP,U,2) Q:START=""
"RTN","PXRMEXID",85,0)
 ...S PT01=$P(^PXD(811.8,PXRMRIEN,100,START,0),"~",2) Q:PT01=""
"RTN","PXRMEXID",86,0)
 ...;Ignore namechanges
"RTN","PXRMEXID",87,0)
 ...I $D(PXRMNMCH(801.41,PT01)) Q
"RTN","PXRMEXID",88,0)
 ...;Only install descendents
"RTN","PXRMEXID",89,0)
 ...I $D(INAME(PT01)) D INSCOM(IND,1)
"RTN","PXRMEXID",90,0)
 ;
"RTN","PXRMEXID",91,0)
 D SETATTR^PXRMEXFI(.ATTR,FILENUM)
"RTN","PXRMEXID",92,0)
 ;Double check that it hasn't been installed
"RTN","PXRMEXID",93,0)
 I 'EXISTS S EXISTS=$$EXISTS^PXRMEXIU(801.41,PT01)
"RTN","PXRMEXID",94,0)
 ;If all components installed the default is 'Install or Overwrite'
"RTN","PXRMEXID",95,0)
 S:ALL ACTION=$S(EXISTS:"O",1:"I"),ATTR("PT01")=PT01,PXRMNMCH="",NEWPT01=""
"RTN","PXRMEXID",96,0)
 S:'ALL ACTION=$$GETFACT^PXRMEXFI(PT01,.ATTR,.NEWPT01,.PXRMNMCH,EXISTS)
"RTN","PXRMEXID",97,0)
 ;Save what was done for the installation summary.
"RTN","PXRMEXID",98,0)
 S ^TMP("PXRMEXIA",$J,IND,ATTR("FILE NAME"),ATTR("PT01"),ACTION)=NEWPT01
"RTN","PXRMEXID",99,0)
 ;Clear heading
"RTN","PXRMEXID",100,0)
 S VALMHDR(2)=""
"RTN","PXRMEXID",101,0)
 ;If the ACTION is Quit then quit the entire install.
"RTN","PXRMEXID",102,0)
 I ACTION="Q" S PXRMDONE=1 S VALMHDR(2)="Install not completed" Q
"RTN","PXRMEXID",103,0)
 ;If the ACTION is Skip then skip this component.
"RTN","PXRMEXID",104,0)
 I ACTION="S" S VALMBCK="R" Q
"RTN","PXRMEXID",105,0)
 ;If the ACTION is Replace then skip this component.
"RTN","PXRMEXID",106,0)
 I ACTION="P" S VALMBCK="R",VALMHDR(2)=PT01_" replaced with "_NEWPT01 Q
"RTN","PXRMEXID",107,0)
 ;Install this component.
"RTN","PXRMEXID",108,0)
 D FILE^PXRMEXIC(PXRMRIEN,IND120,JND120,ACTION,.ATTR,.PXRMNMCH)
"RTN","PXRMEXID",109,0)
 S VALMBCK="R"
"RTN","PXRMEXID",110,0)
 I PXRMDONE S VALMHDR(2)="Install aborted" Q
"RTN","PXRMEXID",111,0)
 I NEWPT01="" S VALMHDR(2)=PT01_" ("_DTYP_") installed from exchange file."
"RTN","PXRMEXID",112,0)
 I NEWPT01'="" S VALMHDR(2)=PT01_" installed as "_NEWPT01_"."
"RTN","PXRMEXID",113,0)
 ;If reminder dialog - disable and give option to link
"RTN","PXRMEXID",114,0)
 I DTYP="reminder dialog" D
"RTN","PXRMEXID",115,0)
 .N DNAME
"RTN","PXRMEXID",116,0)
 .S DNAME=PT01
"RTN","PXRMEXID",117,0)
 .I NEWPT01'="" S DNAME=NEWPT01
"RTN","PXRMEXID",118,0)
 .D INSLNK(DNAME)
"RTN","PXRMEXID",119,0)
 Q
"RTN","PXRMEXID",120,0)
 ;
"RTN","PXRMEXID",121,0)
 ;Check for descendents (either elements or prompts)
"RTN","PXRMEXID",122,0)
 ;--------------------------------------------------
"RTN","PXRMEXID",123,0)
INSDSC(NAME) ;
"RTN","PXRMEXID",124,0)
 N DATA,DFOUND,SUB
"RTN","PXRMEXID",125,0)
 S DFOUND=0,SUB=0
"RTN","PXRMEXID",126,0)
 F  S SUB=$O(^TMP("PXRMEXTMP",$J,"DMAP",NAME,SUB)) Q:'SUB  D  Q:DFOUND
"RTN","PXRMEXID",127,0)
 .S DATA=$G(^TMP("PXRMEXTMP",$J,"DMAP",NAME,SUB)) Q:DATA=""
"RTN","PXRMEXID",128,0)
 .I '$$PXRM($P(DATA,U)) S DFOUND=1
"RTN","PXRMEXID",129,0)
 Q DFOUND
"RTN","PXRMEXID",130,0)
 ;
"RTN","PXRMEXID",131,0)
 ;Option to link dialog to a reminder
"RTN","PXRMEXID",132,0)
 ;-----------------------------------
"RTN","PXRMEXID",133,0)
INSLNK(DNAME) ;
"RTN","PXRMEXID",134,0)
 N DIEN,DISABLE,DSRC,RNAME
"RTN","PXRMEXID",135,0)
 N DA,DIE,DR
"RTN","PXRMEXID",136,0)
 ;Disable
"RTN","PXRMEXID",137,0)
 S DIEN=$O(^PXRMD(801.41,"B",DNAME,"")) Q:'DIEN
"RTN","PXRMEXID",138,0)
 ;Set dialog as disabled
"RTN","PXRMEXID",139,0)
 S DISABLE="DISABLED IN EXCHANGE"
"RTN","PXRMEXID",140,0)
 S DR="3///^S X=DISABLE",DIE="^PXRMD(801.41,",DA=$P(DIEN,U)
"RTN","PXRMEXID",141,0)
 D ^DIE
"RTN","PXRMEXID",142,0)
 ;
"RTN","PXRMEXID",143,0)
 ;Quit if already linked
"RTN","PXRMEXID",144,0)
 I $D(^PXD(811.9,"AG",DIEN)) Q
"RTN","PXRMEXID",145,0)
 ;
"RTN","PXRMEXID",146,0)
 S RNAME=""
"RTN","PXRMEXID",147,0)
 ;If reminder was renamed use as default
"RTN","PXRMEXID",148,0)
 I $D(PXRMNMCH(811.9)) D
"RTN","PXRMEXID",149,0)
 .S RNAME=$O(PXRMNMCH(811.9,"")) Q:RNAME=""
"RTN","PXRMEXID",150,0)
 .S RNAME=$G(PXRMNMCH(811.9,RNAME))
"RTN","PXRMEXID",151,0)
 ;Otherwise use original reminder name as default
"RTN","PXRMEXID",152,0)
 I RNAME="" D
"RTN","PXRMEXID",153,0)
 .N DATA,FOUND,RIEN,SUB
"RTN","PXRMEXID",154,0)
 .S SUB=0,FOUND=0
"RTN","PXRMEXID",155,0)
 .F  S SUB=$O(^TMP("PXRMEXLC",$J,"SEL",SUB),-1) Q:'SUB  Q:FOUND  D
"RTN","PXRMEXID",156,0)
 ..S DATA=$G(^TMP("PXRMEXLC",$J,"SEL",SUB)) Q:$P(DATA,U)'=811.9
"RTN","PXRMEXID",157,0)
 ..S RIEN=$P(DATA,U,4),FOUND=1 Q:'RIEN
"RTN","PXRMEXID",158,0)
 ..S RNAME=$P($G(^PXD(811.9,RIEN,0)),U)
"RTN","PXRMEXID",159,0)
 ;
"RTN","PXRMEXID",160,0)
 W !!,"Reminder Dialog "_DNAME_" is not linked to a reminder.",!
"RTN","PXRMEXID",161,0)
 ;Select reminder to link
"RTN","PXRMEXID",162,0)
 S IEN=$$SELECT^PXRMINQ("^PXD(811.9,","Select Reminder to Link: ",RNAME)
"RTN","PXRMEXID",163,0)
 ;Update reminder link in #811.9
"RTN","PXRMEXID",164,0)
 I $P(IEN,U)'=-1 D
"RTN","PXRMEXID",165,0)
 .N DA,DIE,DIK,DR
"RTN","PXRMEXID",166,0)
 .;Set reminder to dialog pointer
"RTN","PXRMEXID",167,0)
 .S DR="51///^S X=DNAME",DIE="^PXD(811.9,",DA=$P(IEN,U)
"RTN","PXRMEXID",168,0)
 .D ^DIE
"RTN","PXRMEXID",169,0)
 .;Reindex the AG cross-references.
"RTN","PXRMEXID",170,0)
 .S DIK="^PXD(811.9,",DA=$P(IEN,U)
"RTN","PXRMEXID",171,0)
 .D IX^DIK
"RTN","PXRMEXID",172,0)
 .;If source reminder is null replace with linked reminder
"RTN","PXRMEXID",173,0)
 .S DSRC=$P($G(PXRMD(801.41,DIEN,0)),U,2) Q:DSRC
"RTN","PXRMEXID",174,0)
 .S DSRC=$P(IEN,U)
"RTN","PXRMEXID",175,0)
 .S DR="2///^S X=DSRC",DIE="^PXRMD(801.41,",DA=$P(DIEN,U)
"RTN","PXRMEXID",176,0)
 .D ^DIE
"RTN","PXRMEXID",177,0)
 ;
"RTN","PXRMEXID",178,0)
 Q
"RTN","PXRMEXID",179,0)
 ;Install Selected Components
"RTN","PXRMEXID",180,0)
 ;---------------------------
"RTN","PXRMEXID",181,0)
INSSEL N ALL,IND,PXRMDONE,VALMY
"RTN","PXRMEXID",182,0)
 N DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXID",183,0)
 N VALMBG,VALMLST
"RTN","PXRMEXID",184,0)
 S VALMBG=1,VALMLST=+$O(^TMP("PXRMEXLD",$J,"IDX",""),-1)
"RTN","PXRMEXID",185,0)
 ;Get the list to install.
"RTN","PXRMEXID",186,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEXID",187,0)
 ;
"RTN","PXRMEXID",188,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXID",189,0)
 ;Set the install date and time.
"RTN","PXRMEXID",190,0)
 S ALL="",PXRMDONE=0,^TMP("PXRMEXIA",$J,"DT")=$$NOW^XLFDT
"RTN","PXRMEXID",191,0)
 ;
"RTN","PXRMEXID",192,0)
 ;Lock the entire file
"RTN","PXRMEXID",193,0)
 Q:'$$LOCK
"RTN","PXRMEXID",194,0)
 ;
"RTN","PXRMEXID",195,0)
 S IND=0
"RTN","PXRMEXID",196,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMEXID",197,0)
 .D INSCOM(IND,0)
"RTN","PXRMEXID",198,0)
 ;
"RTN","PXRMEXID",199,0)
 ;Clear locks
"RTN","PXRMEXID",200,0)
 D UNLOCK
"RTN","PXRMEXID",201,0)
 ;
"RTN","PXRMEXID",202,0)
 ;Rebuild workfile
"RTN","PXRMEXID",203,0)
 D DISP^PXRMEXLD(PXRMMODE)
"RTN","PXRMEXID",204,0)
 ;
"RTN","PXRMEXID",205,0)
 Q
"RTN","PXRMEXID",206,0)
 ;
"RTN","PXRMEXID",207,0)
 ;Install the exchange entry PXRMRIEN
"RTN","PXRMEXID",208,0)
 ;-----------------------------------
"RTN","PXRMEXID",209,0)
INSTALL N IEN,IND,VALMY
"RTN","PXRMEXID",210,0)
 ;Make sure the component list exists for this entry. PXRMRIEN is
"RTN","PXRMEXID",211,0)
 ;set in INSTALL^PXRMEXLR.
"RTN","PXRMEXID",212,0)
 I '$D(^PXD(811.8,PXRMRIEN,120)) D CLIST^PXRMEXU1(.PXRMRIEN)
"RTN","PXRMEXID",213,0)
 I PXRMRIEN=-1 Q
"RTN","PXRMEXID",214,0)
 ;Format the component list for display.
"RTN","PXRMEXID",215,0)
 D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXID",216,0)
 S VALMBCK="R",VALMCNT=$O(^TMP("PXRMEXLD",$J,"IDX"),-1)
"RTN","PXRMEXID",217,0)
 Q
"RTN","PXRMEXID",218,0)
 ;
"RTN","PXRMEXID",219,0)
PXRM(NAME) ;Validate prompts
"RTN","PXRMEXID",220,0)
 ;
"RTN","PXRMEXID",221,0)
 ;Ignore non-PXRM
"RTN","PXRMEXID",222,0)
 I $E(NAME,1,4)'="PXRM" Q 0
"RTN","PXRMEXID",223,0)
 ;
"RTN","PXRMEXID",224,0)
 ;Check if this is a national code
"RTN","PXRMEXID",225,0)
 N DIEN
"RTN","PXRMEXID",226,0)
 S DIEN=$O(^PXRMD(801.41,"B",NAME,""))
"RTN","PXRMEXID",227,0)
 ;If not found abort
"RTN","PXRMEXID",228,0)
 I 'DIEN Q 0
"RTN","PXRMEXID",229,0)
 ;Check class
"RTN","PXRMEXID",230,0)
 I $P($G(^PXRMD(801.41,DIEN,100)),U)="N" Q 1
"RTN","PXRMEXID",231,0)
 ;Otherwise local
"RTN","PXRMEXID",232,0)
 Q 0
"RTN","PXRMEXID",233,0)
 ;
"RTN","PXRMEXID",234,0)
 ;Lock the dialog file
"RTN","PXRMEXID",235,0)
LOCK() ;
"RTN","PXRMEXID",236,0)
 L +^PXRMD(801.41):0 I  Q 1
"RTN","PXRMEXID",237,0)
 E  W !,"Another user is editing this file, try later" H 2
"RTN","PXRMEXID",238,0)
 Q 0
"RTN","PXRMEXID",239,0)
 ;
"RTN","PXRMEXID",240,0)
 ;Clear lock
"RTN","PXRMEXID",241,0)
UNLOCK L -^PXRMD(801.41)
"RTN","PXRMEXID",242,0)
 Q
"RTN","PXRMEXIR")
1^27
"RTN","PXRMEXIS")
1^28
"RTN","PXRMEXIU")
0^9^B59490470
"RTN","PXRMEXIU",1,0)
PXRMEXIU ; SLC/PKR - Utilities for installing repository entries. ;06/15/2001
"RTN","PXRMEXIU",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXIU",3,0)
 ;======================================================================
"RTN","PXRMEXIU",4,0)
DEF(FDA,NAMECHG) ;Check the reminder definition to make sure the related
"RTN","PXRMEXIU",5,0)
 ;reminder exists and all the findings exist.
"RTN","PXRMEXIU",6,0)
 N ABBR,ALIST,IEN,IENS,FILENUM,FINDING,LRD,OFINDING,PT01
"RTN","PXRMEXIU",7,0)
 N RRG,SPONSOR,TEXT
"RTN","PXRMEXIU",8,0)
 S IENS=$O(FDA(811.9,""))
"RTN","PXRMEXIU",9,0)
 ;
"RTN","PXRMEXIU",10,0)
 ;Related reminder guideline field 1.4.
"RTN","PXRMEXIU",11,0)
 I $D(FDA(811.9,IENS,1.4)) D
"RTN","PXRMEXIU",12,0)
 . S RRG=FDA(811.9,IENS,1.4)
"RTN","PXRMEXIU",13,0)
 . S IEN=$$EXISTS^PXRMEXIU(811.9,RRG)
"RTN","PXRMEXIU",14,0)
 . I IEN=0 D
"RTN","PXRMEXIU",15,0)
 ..;Get replacement.
"RTN","PXRMEXIU",16,0)
 .. N DIC,X,Y
"RTN","PXRMEXIU",17,0)
 .. S TEXT(1)=" "
"RTN","PXRMEXIU",18,0)
 .. S TEXT(2)="The Related Reminder Guideline does not exist on your system!"
"RTN","PXRMEXIU",19,0)
 .. S TEXT(3)="It is "_RRG_" input a replacement or ^ to leave it empty."
"RTN","PXRMEXIU",20,0)
 .. D MES^XPDUTL(.TEXT)
"RTN","PXRMEXIU",21,0)
 ..;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",22,0)
 .. I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",23,0)
 .. S DIC=811.9,DIC(0)="AEMQ"
"RTN","PXRMEXIU",24,0)
 .. D ^DIC
"RTN","PXRMEXIU",25,0)
 .. I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",26,0)
 .. I Y=-1 K FDA(811.9,IENS,1.4)
"RTN","PXRMEXIU",27,0)
 .. E  S FDA(811.9,IENS,1.4)=$P(Y,U,2)
"RTN","PXRMEXIU",28,0)
 ;
"RTN","PXRMEXIU",29,0)
 ;Sponsor field 101.
"RTN","PXRMEXIU",30,0)
 I $D(FDA(811.9,IENS,101)) D
"RTN","PXRMEXIU",31,0)
 . S SPONSOR=FDA(811.9,IENS,101)
"RTN","PXRMEXIU",32,0)
 . S IEN=$$FIND1^DIC(811.6,"","",SPONSOR)
"RTN","PXRMEXIU",33,0)
 . I IEN=0 D
"RTN","PXRMEXIU",34,0)
 ..;Get replacement.
"RTN","PXRMEXIU",35,0)
 .. N DIC,X,Y
"RTN","PXRMEXIU",36,0)
 .. S TEXT(1)=" "
"RTN","PXRMEXIU",37,0)
 .. S TEXT(2)="The Sponsor does not exist on your system!"
"RTN","PXRMEXIU",38,0)
 .. S TEXT(3)="It is "_SPONSOR_" input a replacement or ^ to leave it empty."
"RTN","PXRMEXIU",39,0)
 .. D MES^XPDUTL(.TEXT)
"RTN","PXRMEXIU",40,0)
 ..;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",41,0)
 .. I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",42,0)
 .. S DIC=811.6,DIC(0)="AEMQ"
"RTN","PXRMEXIU",43,0)
 .. D ^DIC
"RTN","PXRMEXIU",44,0)
 .. I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",45,0)
 .. I Y=-1 K FDA(811.9,IENS,101)
"RTN","PXRMEXIU",46,0)
 .. E  S FDA(811.9,IENS,101)=$P(Y,U,2)
"RTN","PXRMEXIU",47,0)
 ;
"RTN","PXRMEXIU",48,0)
 ;Linked reminder dialog field 51.
"RTN","PXRMEXIU",49,0)
 S LRD=+$G(FDA(811.9,IENS,51))
"RTN","PXRMEXIU",50,0)
 S IEN=$$EXISTS^PXRMEXIU(801.41,LRD)
"RTN","PXRMEXIU",51,0)
 I IEN=0 K FDA(811.9,IENS,51)
"RTN","PXRMEXIU",52,0)
 ;
"RTN","PXRMEXIU",53,0)
 ;Search the finding multiple for replacements and missing findings.
"RTN","PXRMEXIU",54,0)
 D BLDALIST^PXRMVPTR(811.902,.01,.ALIST)
"RTN","PXRMEXIU",55,0)
 S IENS=""
"RTN","PXRMEXIU",56,0)
 F  S IENS=$O(FDA(811.902,IENS)) Q:IENS=""  D
"RTN","PXRMEXIU",57,0)
 . S (FINDING,OFINDING)=FDA(811.902,IENS,.01)
"RTN","PXRMEXIU",58,0)
 . S ABBR=$P(FINDING,".",1)
"RTN","PXRMEXIU",59,0)
 . S PT01=$P(FINDING,".",2)
"RTN","PXRMEXIU",60,0)
 . S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXIU",61,0)
 . I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXIU",62,0)
 .. S FINDING=ABBR_"."_NAMECHG(FILENUM,PT01)
"RTN","PXRMEXIU",63,0)
 .. S FDA(811.902,IENS,.01)=FINDING
"RTN","PXRMEXIU",64,0)
 . S IEN=+$$VFIND1(FINDING,.ALIST)
"RTN","PXRMEXIU",65,0)
 . I IEN=0 D
"RTN","PXRMEXIU",66,0)
 ..;Get replacement
"RTN","PXRMEXIU",67,0)
 .. N DIC,DUOUT,TEXT,X,Y
"RTN","PXRMEXIU",68,0)
 .. S TEXT="Finding "_FINDING_" does not exist input a replacement or ^ to quit the install."
"RTN","PXRMEXIU",69,0)
 .. D BMES^XPDUTL(TEXT)
"RTN","PXRMEXIU",70,0)
 .. S DIC=FILENUM
"RTN","PXRMEXIU",71,0)
 .. S DIC(0)="AEMNQ"
"RTN","PXRMEXIU",72,0)
 .. S Y=-1
"RTN","PXRMEXIU",73,0)
 .. F  Q:+Y'=-1  D
"RTN","PXRMEXIU",74,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",75,0)
 ... I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",76,0)
 ... D ^DIC
"RTN","PXRMEXIU",77,0)
 ... I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",78,0)
 ... I $D(DUOUT) D
"RTN","PXRMEXIU",79,0)
 .... S Y=""
"RTN","PXRMEXIU",80,0)
 .... K FDA
"RTN","PXRMEXIU",81,0)
 .. I Y="" K FDA(811.902,IENS)
"RTN","PXRMEXIU",82,0)
 .. E  D
"RTN","PXRMEXIU",83,0)
 ... S FINDING=ABBR_"."_$P(Y,U,2)
"RTN","PXRMEXIU",84,0)
 ... S FDA(811.902,IENS,.01)=FINDING
"RTN","PXRMEXIU",85,0)
 .;Save the finding information for the history.
"RTN","PXRMEXIU",86,0)
 . S ^TMP("PXRMEXIA",$J,"DEFF",$P(IENS,",",1),OFINDING)=FINDING
"RTN","PXRMEXIU",87,0)
 Q
"RTN","PXRMEXIU",88,0)
 ;
"RTN","PXRMEXIU",89,0)
 ;======================================================================
"RTN","PXRMEXIU",90,0)
EXISTS(FILENUM,NAME) ;Check for existence of an entry with the same name.
"RTN","PXRMEXIU",91,0)
 ;Return ;the ien if it does, 0 otherwise.
"RTN","PXRMEXIU",92,0)
 N IEN
"RTN","PXRMEXIU",93,0)
 I FILENUM=0 S IEN=$$EXISTS^PXRMEXCF(NAME) Q
"RTN","PXRMEXIU",94,0)
 N FLAGS
"RTN","PXRMEXIU",95,0)
 ;Special lookup for files 80 and 80.1, they do not have a standard "B"
"RTN","PXRMEXIU",96,0)
 ;cross-reference.
"RTN","PXRMEXIU",97,0)
 I (FILENUM=80)!(FILENUM=80.1) D
"RTN","PXRMEXIU",98,0)
 .;Name may or may not have the necessary space appended, make sure
"RTN","PXRMEXIU",99,0)
 .;it does.
"RTN","PXRMEXIU",100,0)
 . S RESULT=$S($E(NAME,$L(NAME))'=" ":NAME_" ",1:NAME)
"RTN","PXRMEXIU",101,0)
 . S FLAGS="MX"
"RTN","PXRMEXIU",102,0)
 E  S FLAGS="BX"
"RTN","PXRMEXIU",103,0)
 I FILENUM=811.6 S FLAGS=FLAGS_"U"
"RTN","PXRMEXIU",104,0)
 ;File 8927.1 only allows upper case .01s.
"RTN","PXRMEXIU",105,0)
 I FILENUM=8927.1 S NAME=$$UP^XLFSTR(NAME)
"RTN","PXRMEXIU",106,0)
 S IEN=$$FIND1^DIC(FILENUM,"",FLAGS,NAME)
"RTN","PXRMEXIU",107,0)
 ;If IEN is null then there was an error try FIND^DIC.
"RTN","PXRMEXIU",108,0)
 I IEN="" D
"RTN","PXRMEXIU",109,0)
 . N FILENAME,LIST,MSG,NENTRIES,TEXT
"RTN","PXRMEXIU",110,0)
 . S FILENAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXRMEXIU",111,0)
 . D FIND^DIC(FILENUM,"","",FLAGS,NAME,"","","","","LIST","MSG")
"RTN","PXRMEXIU",112,0)
 . S NENTRIES=+$P(LIST("DILIST",0),U,1)
"RTN","PXRMEXIU",113,0)
 . S TEXT="Warning there are "_NENTRIES_" "_FILENAME_" entries with the name "_NAME_"!"
"RTN","PXRMEXIU",114,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMEXIU",115,0)
 . D EN^DDIOL("You should stop and fix this problem now, if you continue")
"RTN","PXRMEXIU",116,0)
 . D EN^DDIOL("you will probably get a number of errors.")
"RTN","PXRMEXIU",117,0)
 . H 3
"RTN","PXRMEXIU",118,0)
 .;Set the IEN to the first entry in the list.
"RTN","PXRMEXIU",119,0)
 . S IEN=LIST("DILIST",2,1)
"RTN","PXRMEXIU",120,0)
 Q IEN
"RTN","PXRMEXIU",121,0)
 ;
"RTN","PXRMEXIU",122,0)
 ;======================================================================
"RTN","PXRMEXIU",123,0)
GETACT(CHOICES) ;Get the action
"RTN","PXRMEXIU",124,0)
 ;If CHOICES is empty the only action is skip.
"RTN","PXRMEXIU",125,0)
 I CHOICES="" Q "S"
"RTN","PXRMEXIU",126,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXIU",127,0)
 S DIR(0)="S"_U
"RTN","PXRMEXIU",128,0)
 I CHOICES["C" S DIR(0)=DIR(0)_"C:Create a new entry by copying to a new name"
"RTN","PXRMEXIU",129,0)
 I CHOICES["D" S DIR(0)=DIR(0)_";D:Delete (from the reminder/dialog)"
"RTN","PXRMEXIU",130,0)
 I CHOICES["I" S DIR(0)=DIR(0)_";I:Install or Overwrite the current entry"
"RTN","PXRMEXIU",131,0)
 I CHOICES["P" S DIR(0)=DIR(0)_";P:Replace (in the reminder/dialog) with an existing entry"
"RTN","PXRMEXIU",132,0)
 I CHOICES["Q" S DIR(0)=DIR(0)_";Q:Quit the install"
"RTN","PXRMEXIU",133,0)
 I CHOICES["R" S DIR(0)=DIR(0)_";R:Restart"
"RTN","PXRMEXIU",134,0)
 I CHOICES["S" S DIR(0)=DIR(0)_";S:Skip, do not install this entry"
"RTN","PXRMEXIU",135,0)
 D ^DIR K DIR
"RTN","PXRMEXIU",136,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXIU",137,0)
 I $D(DTOUT)!($D(DUOUT)) S Y="S"
"RTN","PXRMEXIU",138,0)
 Q Y
"RTN","PXRMEXIU",139,0)
 ;
"RTN","PXRMEXIU",140,0)
 ;======================================================================
"RTN","PXRMEXIU",141,0)
GETNAME(MIN,MAX) ;Get a name to use.
"RTN","PXRMEXIU",142,0)
 N X,Y
"RTN","PXRMEXIU",143,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXIU",144,0)
 S DIR(0)="FAOU"_U_MIN_":"_MAX
"RTN","PXRMEXIU",145,0)
 S DIR("A")="Input the new name: "
"RTN","PXRMEXIU",146,0)
 D ^DIR K DIR
"RTN","PXRMEXIU",147,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXIU",148,0)
 I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","PXRMEXIU",149,0)
 Q Y
"RTN","PXRMEXIU",150,0)
 ;
"RTN","PXRMEXIU",151,0)
 ;======================================================================
"RTN","PXRMEXIU",152,0)
GETUNAME(ATTR,TA) ;Get a unique name to use.
"RTN","PXRMEXIU",153,0)
 ;ATTR holds the attributes, TA is a temporary array holding what is
"RTN","PXRMEXIU",154,0)
 ;in the packed reminder.
"RTN","PXRMEXIU",155,0)
 N IEN,NEWPT01,SAME,TEXT
"RTN","PXRMEXIU",156,0)
GNEW ;
"RTN","PXRMEXIU",157,0)
 S NEWPT01=$$GETNAME(ATTR("MIN FIELD LENGTH"),ATTR("FIELD LENGTH"))
"RTN","PXRMEXIU",158,0)
 S IEN=+$$EXISTS(ATTR("FILE NUMBER"),NEWPT01)
"RTN","PXRMEXIU",159,0)
 ;If an entry with the same name exists, see if the old and new are
"RTN","PXRMEXIU",160,0)
 ;identical.
"RTN","PXRMEXIU",161,0)
 I IEN>0 D  G GNEW
"RTN","PXRMEXIU",162,0)
 . S TEXT(1)=ATTR("FILE NAME")_" entry "_NEWPT01_" already EXISTS,"
"RTN","PXRMEXIU",163,0)
 . S SAME=$$SAME(.ATTR,.TA,NEWPT01)
"RTN","PXRMEXIU",164,0)
 . I SAME S TEXT(2)="what do you want to do?"
"RTN","PXRMEXIU",165,0)
 . I 'SAME S TEXT(2)="but packed routine is different, what do you want to do?"
"RTN","PXRMEXIU",166,0)
 . W !,TEXT(1),!,TEXT(2)
"RTN","PXRMEXIU",167,0)
 E  S ATTR("NAME")=NEWPT01
"RTN","PXRMEXIU",168,0)
 Q NEWPT01
"RTN","PXRMEXIU",169,0)
 ;
"RTN","PXRMEXIU",170,0)
 ;======================================================================
"RTN","PXRMEXIU",171,0)
HF(FDA,NAMECHG) ;Check the health factor to make sure a category does not
"RTN","PXRMEXIU",172,0)
 ;have a category.
"RTN","PXRMEXIU",173,0)
 N IENS
"RTN","PXRMEXIU",174,0)
 S IENS=$O(FDA(9999999.64,""))
"RTN","PXRMEXIU",175,0)
 I IENS="" Q
"RTN","PXRMEXIU",176,0)
 I FDA(9999999.64,IENS,.1)="CATEGORY" K FDA(9999999.64,IENS,.03)
"RTN","PXRMEXIU",177,0)
 Q
"RTN","PXRMEXIU",178,0)
 ;
"RTN","PXRMEXIU",179,0)
 ;===============================================================
"RTN","PXRMEXIU",180,0)
REXISTS(NAME,DATEP) ;See if this Exchange File entry already exists.
"RTN","PXRMEXIU",181,0)
 N IEN,LUVALUE
"RTN","PXRMEXIU",182,0)
 S LUVALUE(1)=NAME
"RTN","PXRMEXIU",183,0)
 S LUVALUE(2)=DATEP
"RTN","PXRMEXIU",184,0)
 S IEN=+$$FIND1^DIC(811.8,"","KU",.LUVALUE)
"RTN","PXRMEXIU",185,0)
 Q IEN
"RTN","PXRMEXIU",186,0)
 ;
"RTN","PXRMEXIU",187,0)
 ;======================================================================
"RTN","PXRMEXIU",188,0)
SAME(ATTR,TA,NAME) ;Check existing entry and entry in packed reminder
"RTN","PXRMEXIU",189,0)
 ;definition to see if they are identical.
"RTN","PXRMEXIU",190,0)
 ;Present version only works for computed finding routines, other
"RTN","PXRMEXIU",191,0)
 ;types of entries can be added later.
"RTN","PXRMEXIU",192,0)
 N SAME
"RTN","PXRMEXIU",193,0)
 I ATTR("FILE NAME")="COMPUTED FINDING ROUTINE" S SAME=$$SAME^PXRMEXCF(.ATTR,.TA,NAME)
"RTN","PXRMEXIU",194,0)
 E  S SAME=1
"RTN","PXRMEXIU",195,0)
 Q SAME
"RTN","PXRMEXIU",196,0)
 ;
"RTN","PXRMEXIU",197,0)
 ;======================================================================
"RTN","PXRMEXIU",198,0)
TERM(FDA,NAMECHG) ;Check the reminder term to make sure all the
"RTN","PXRMEXIU",199,0)
 ;findings exist.
"RTN","PXRMEXIU",200,0)
 N ABBR,ALIST,IEN,IENS,FILENUM,FINDING,OFINDING,PT01
"RTN","PXRMEXIU",201,0)
 ;
"RTN","PXRMEXIU",202,0)
 ;Search the finding multiple for replacements and missing findings.
"RTN","PXRMEXIU",203,0)
 D BLDALIST^PXRMVPTR(811.52,.01,.ALIST)
"RTN","PXRMEXIU",204,0)
 S IENS=""
"RTN","PXRMEXIU",205,0)
 F  S IENS=$O(FDA(811.52,IENS)) Q:IENS=""  D
"RTN","PXRMEXIU",206,0)
 . S (FINDING,OFINDING)=FDA(811.52,IENS,.01)
"RTN","PXRMEXIU",207,0)
 . S ABBR=$P(FINDING,".",1)
"RTN","PXRMEXIU",208,0)
 . S PT01=$P(FINDING,".",2)
"RTN","PXRMEXIU",209,0)
 . S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXIU",210,0)
 . I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXIU",211,0)
 .. S FINDING=ABBR_"."_NAMECHG(FILENUM,PT01)
"RTN","PXRMEXIU",212,0)
 .. S FDA(811.52,IENS,.01)=FINDING
"RTN","PXRMEXIU",213,0)
 . S IEN=+$$VFIND1(FINDING,.ALIST)
"RTN","PXRMEXIU",214,0)
 . I IEN=0 D
"RTN","PXRMEXIU",215,0)
 ..;Get replacement
"RTN","PXRMEXIU",216,0)
 .. N DIC,DUOUT,TEXT,X,Y
"RTN","PXRMEXIU",217,0)
 .. S TEXT="Finding "_FINDING_" does not exist input a replacement or ^ to quit the install."
"RTN","PXRMEXIU",218,0)
 .. D BMES^XPDUTL(TEXT)
"RTN","PXRMEXIU",219,0)
 .. S DIC=FILENUM
"RTN","PXRMEXIU",220,0)
 .. S DIC(0)="AEMNQ"
"RTN","PXRMEXIU",221,0)
 .. S Y=-1
"RTN","PXRMEXIU",222,0)
 .. F  Q:+Y'=-1  D
"RTN","PXRMEXIU",223,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",224,0)
 ... I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",225,0)
 ... D ^DIC
"RTN","PXRMEXIU",226,0)
 ... I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",227,0)
 ... I $D(DUOUT) D
"RTN","PXRMEXIU",228,0)
 .... S Y=""
"RTN","PXRMEXIU",229,0)
 .... K FDA
"RTN","PXRMEXIU",230,0)
 .. I Y="" K FDA(811.52,IENS)
"RTN","PXRMEXIU",231,0)
 .. E  D
"RTN","PXRMEXIU",232,0)
 ... S FINDING=ABBR_"."_$P(Y,U,2)
"RTN","PXRMEXIU",233,0)
 ... S FDA(811.52,IENS,.01)=FINDING
"RTN","PXRMEXIU",234,0)
 .;Save the finding information for the history.
"RTN","PXRMEXIU",235,0)
 . S ^TMP("PXRMEXIA",$J,"TRMF",$P(IENS,",",1),OFINDING)=FINDING
"RTN","PXRMEXIU",236,0)
 Q
"RTN","PXRMEXIU",237,0)
 ;
"RTN","PXRMEXIU",238,0)
 ;======================================================================
"RTN","PXRMEXIU",239,0)
VFIND1(VPTR,ALIST) ;Given a variable pointer of the form ABBR.NAME
"RTN","PXRMEXIU",240,0)
 ;and ALIST which contains the link between abbreviations and files
"RTN","PXRMEXIU",241,0)
 ;return the IEN if it exists and 0 if no match if found.
"RTN","PXRMEXIU",242,0)
 N ABBR,IEN,FILENUM,PT01,RESULT
"RTN","PXRMEXIU",243,0)
 S IEN=0
"RTN","PXRMEXIU",244,0)
 S ABBR=$P(VPTR,".",1)
"RTN","PXRMEXIU",245,0)
 S PT01=$P(VPTR,".",2,99)
"RTN","PXRMEXIU",246,0)
 S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXIU",247,0)
 S IEN=$$EXISTS(FILENUM,PT01)
"RTN","PXRMEXIU",248,0)
 Q IEN
"RTN","PXRMEXIU",249,0)
 ;
"RTN","PXRMEXIX")
0^10^B25620048
"RTN","PXRMEXIX",1,0)
PXRMEXIX ;SLC/PJH - Reminder Dialog Exchange checks. ;05/18/2001
"RTN","PXRMEXIX",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXIX",3,0)
 ;
"RTN","PXRMEXIX",4,0)
 ;=====================================================================
"RTN","PXRMEXIX",5,0)
 ;
"RTN","PXRMEXIX",6,0)
 ;Yes/No Prompts
"RTN","PXRMEXIX",7,0)
 ;--------------
"RTN","PXRMEXIX",8,0)
ASK(YESNO,TEXT,HELP) ;
"RTN","PXRMEXIX",9,0)
 W !
"RTN","PXRMEXIX",10,0)
 N DIR,X,Y
"RTN","PXRMEXIX",11,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXIX",12,0)
 S DIR(0)="YA0"
"RTN","PXRMEXIX",13,0)
 M DIR("A")=TEXT
"RTN","PXRMEXIX",14,0)
 S DIR("B")="Y"
"RTN","PXRMEXIX",15,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMEXIX",16,0)
 S DIR("??")=U_"D HLP^PXRMEXIX(HELP)"
"RTN","PXRMEXIX",17,0)
 D ^DIR K DIR
"RTN","PXRMEXIX",18,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXIX",19,0)
 I $D(DTOUT)!($D(DUOUT)) S PXRMDONE=1 Q
"RTN","PXRMEXIX",20,0)
 S YESNO=$E(Y(0))
"RTN","PXRMEXIX",21,0)
 Q
"RTN","PXRMEXIX",22,0)
 ;
"RTN","PXRMEXIX",23,0)
 ;Dialog check - all exist, none exist or some exist
"RTN","PXRMEXIX",24,0)
 ;--------------------------------------------------
"RTN","PXRMEXIX",25,0)
EXIST(ALL,DNAME,DTYP,INAME) ;
"RTN","PXRMEXIX",26,0)
 ;0 - None exist
"RTN","PXRMEXIX",27,0)
 ;1 - All exist
"RTN","PXRMEXIX",28,0)
 ;2 - Some exist
"RTN","PXRMEXIX",29,0)
 ;
"RTN","PXRMEXIX",30,0)
 ;Look for component dialogs in DMAP node from PXRMEXIC
"RTN","PXRMEXIX",31,0)
 N DONE,DOTHER,EXISTS,FILE,MODE
"RTN","PXRMEXIX",32,0)
 S ALL="",DONE=0,MODE="",NAME=""
"RTN","PXRMEXIX",33,0)
 ;
"RTN","PXRMEXIX",34,0)
 I DTYP="reminder dialog" D
"RTN","PXRMEXIX",35,0)
 .F  S NAME=$O(^TMP("PXRMEXTMP",$J,"DMAP",NAME)) Q:NAME=""  D  Q:DONE
"RTN","PXRMEXIX",36,0)
 ..;Check if dialog exists
"RTN","PXRMEXIX",37,0)
 ..S EXISTS=$$EXISTS^PXRMEXIU(801.41,NAME)
"RTN","PXRMEXIX",38,0)
 ..;If exists accumulate list of ancestors
"RTN","PXRMEXIX",39,0)
 ..I EXISTS D OTHER(NAME,.DOTHER)
"RTN","PXRMEXIX",40,0)
 ..;Quit if some exist and some don't
"RTN","PXRMEXIX",41,0)
 ..I MODE=1,'EXISTS S MODE=2,DONE=1 Q
"RTN","PXRMEXIX",42,0)
 ..I MODE=0,EXISTS S MODE=2,DONE=1 Q
"RTN","PXRMEXIX",43,0)
 ..;Set all exists flag if dialog found
"RTN","PXRMEXIX",44,0)
 ..I MODE="",EXISTS S MODE=1
"RTN","PXRMEXIX",45,0)
 ..;Set none exists flag if dialog not found
"RTN","PXRMEXIX",46,0)
 ..I MODE="",'EXISTS S MODE=0
"RTN","PXRMEXIX",47,0)
 ;
"RTN","PXRMEXIX",48,0)
 I DTYP'="reminder dialog" D
"RTN","PXRMEXIX",49,0)
 .F  S NAME=$O(INAME(NAME)) Q:NAME=""  D  Q:DONE
"RTN","PXRMEXIX",50,0)
 ..;Treat namechanges as 'done'
"RTN","PXRMEXIX",51,0)
 ..I $D(PXRMNMCH(801.41,NAME)) Q
"RTN","PXRMEXIX",52,0)
 ..;Check if dialog exists
"RTN","PXRMEXIX",53,0)
 ..S EXISTS=$$EXISTS^PXRMEXIU(801.41,NAME)
"RTN","PXRMEXIX",54,0)
 ..;If exists accumulate list of ancestors
"RTN","PXRMEXIX",55,0)
 ..I EXISTS D OTHER(NAME,.DOTHER)
"RTN","PXRMEXIX",56,0)
 ..;Quit if some exist and some don't
"RTN","PXRMEXIX",57,0)
 ..I MODE=1,'EXISTS S MODE=2,DONE=1 Q
"RTN","PXRMEXIX",58,0)
 ..I MODE=0,EXISTS S MODE=2,DONE=1 Q
"RTN","PXRMEXIX",59,0)
 ..;Set all exists flag if dialog found
"RTN","PXRMEXIX",60,0)
 ..I MODE="",EXISTS S MODE=1
"RTN","PXRMEXIX",61,0)
 ..;Set none exists flag if dialog not found
"RTN","PXRMEXIX",62,0)
 ..I MODE="",'EXISTS S MODE=0
"RTN","PXRMEXIX",63,0)
 ;
"RTN","PXRMEXIX",64,0)
 ;If all or none exist give option to install all without prompting
"RTN","PXRMEXIX",65,0)
 N ANS,TEXT
"RTN","PXRMEXIX",66,0)
 I MODE=0 D 
"RTN","PXRMEXIX",67,0)
 .S TEXT(1)="All dialog components for "_DNAME_" are new."
"RTN","PXRMEXIX",68,0)
 I MODE=1 D
"RTN","PXRMEXIX",69,0)
 .S TEXT(1)="All dialog components for "_DNAME_" already exist."
"RTN","PXRMEXIX",70,0)
 .S TEXT(2)="",TEXT(4)=""
"RTN","PXRMEXIX",71,0)
 .S TEXT(3)="Components not used by any other dialogs."
"RTN","PXRMEXIX",72,0)
 .;Warn if used by other dialogs
"RTN","PXRMEXIX",73,0)
 .I $D(DOTHER) D
"RTN","PXRMEXIX",74,0)
 ..S TEXT(3)="WARNING - some components already used by:"
"RTN","PXRMEXIX",75,0)
 ..N CNT,DLIT,DNAME,DTYP,FIRST,NAME
"RTN","PXRMEXIX",76,0)
 ..S CNT=4,DNAME="",TEXT(CNT)=""
"RTN","PXRMEXIX",77,0)
 ..F  S DNAME=$O(DOTHER(DNAME)) Q:DNAME=""  D
"RTN","PXRMEXIX",78,0)
 ...S NAME="",FIRST=1,CNT=CNT+1
"RTN","PXRMEXIX",79,0)
 ...;F  S NAME=$O(DOTHER(DNAME,NAME)) Q:NAME=""  D
"RTN","PXRMEXIX",80,0)
 ...;.S DTYP=DOTHER(DNAME,NAME),DLIT=DNAME_" used by "
"RTN","PXRMEXIX",81,0)
 ...;.I 'FIRST S DLIT=$J("",$L(DLIT))
"RTN","PXRMEXIX",82,0)
 ...S DTYP=DOTHER(DNAME)
"RTN","PXRMEXIX",83,0)
 ...I DTYP="R" S DTYP="Reminder Dialog"
"RTN","PXRMEXIX",84,0)
 ...I DTYP="G" S DTYP="Dialog Group"
"RTN","PXRMEXIX",85,0)
 ...I DTYP="E" S DTYP="Dialog Element"
"RTN","PXRMEXIX",86,0)
 ...;S CNT=CNT+1,FIRST=0,TEXT(CNT)=DLIT_NAME_" ("_DTYP_")"
"RTN","PXRMEXIX",87,0)
 ...S CNT=CNT+1,FIRST=0,TEXT(CNT)=DNAME_" ("_DTYP_")"
"RTN","PXRMEXIX",88,0)
 ..S CNT=CNT+1,TEXT(CNT)=""
"RTN","PXRMEXIX",89,0)
 S TEXT="Install "_DTYP_" and all components with no further changes:"
"RTN","PXRMEXIX",90,0)
 ;Give option to install all descendents
"RTN","PXRMEXIX",91,0)
 D ASK(.ANS,.TEXT,2) I $G(ANS)="Y" S ALL=1
"RTN","PXRMEXIX",92,0)
 Q
"RTN","PXRMEXIX",93,0)
 ;
"RTN","PXRMEXIX",94,0)
 ;Check if used by other dialogs
"RTN","PXRMEXIX",95,0)
 ;------------------------------
"RTN","PXRMEXIX",96,0)
OTHER(NAME,LIST) ;
"RTN","PXRMEXIX",97,0)
 N DDATA,DIEN,DNAME,DTYP,IEN
"RTN","PXRMEXIX",98,0)
 S IEN=$O(^PXRMD(801.41,"B",NAME,0)) Q:'IEN
"RTN","PXRMEXIX",99,0)
 ;Check if used by other dialogs
"RTN","PXRMEXIX",100,0)
 I '$D(^PXRMD(801.41,"AD",IEN)) Q
"RTN","PXRMEXIX",101,0)
 ;Build list of dialogs using this component
"RTN","PXRMEXIX",102,0)
 S DIEN=0
"RTN","PXRMEXIX",103,0)
 F  S DIEN=$O(^PXRMD(801.41,"AD",IEN,DIEN)) Q:'DIEN  D
"RTN","PXRMEXIX",104,0)
 .S DDATA=$G(^PXRMD(801.41,DIEN,0)) Q:DDATA=""
"RTN","PXRMEXIX",105,0)
 .S DNAME=$P(DDATA,U),DTYP=$P(DDATA,U,4) Q:DNAME=""
"RTN","PXRMEXIX",106,0)
 .;Include only dialogs that are not part of this reminder dialog
"RTN","PXRMEXIX",107,0)
 .I $D(^TMP("PXRMEXTMP",$J,"DMAP",DNAME)) Q
"RTN","PXRMEXIX",108,0)
 .S LIST(DNAME)=DTYP
"RTN","PXRMEXIX",109,0)
 Q
"RTN","PXRMEXIX",110,0)
 ;
"RTN","PXRMEXIX",111,0)
 ;General help text routine.
"RTN","PXRMEXIX",112,0)
 ;--------------------------
"RTN","PXRMEXIX",113,0)
HLP(CALL) ;
"RTN","PXRMEXIX",114,0)
 N HTEXT
"RTN","PXRMEXIX",115,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMEXIX",116,0)
 S DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMEXIX",117,0)
 ;
"RTN","PXRMEXIX",118,0)
 I CALL=1 D
"RTN","PXRMEXIX",119,0)
 .S HTEXT(1)="Enter 'Yes' to if you are installing all sub-components or"
"RTN","PXRMEXIX",120,0)
 .S HTEXT(2)="enter 'No' to install only the selected dialog."
"RTN","PXRMEXIX",121,0)
 I CALL=2 D
"RTN","PXRMEXIX",122,0)
 .S HTEXT(1)="Enter 'Yes' to if you are installing without changes."
"RTN","PXRMEXIX",123,0)
 .S HTEXT(2)="enter 'No' to install with changes."
"RTN","PXRMEXIX",124,0)
 I CALL=3 D
"RTN","PXRMEXIX",125,0)
 .S HTEXT(1)="Select IFE to INSTALL reminder or dialog from this exchange"
"RTN","PXRMEXIX",126,0)
 .S HTEXT(2)="entry. Select DFE to DELETE this entry from the exchange file. "
"RTN","PXRMEXIX",127,0)
 .S HTEXT(3)="Select IH to view the installation HISTORY for this entry."
"RTN","PXRMEXIX",128,0)
 K ^UTILITY($J,"W")
"RTN","PXRMEXIX",129,0)
 S IC=""
"RTN","PXRMEXIX",130,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMEXIX",131,0)
 . S X=HTEXT(IC)
"RTN","PXRMEXIX",132,0)
 . D ^DIWP
"RTN","PXRMEXIX",133,0)
 W !
"RTN","PXRMEXIX",134,0)
 S IC=0
"RTN","PXRMEXIX",135,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMEXIX",136,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMEXIX",137,0)
 K ^UTILITY($J,"W")
"RTN","PXRMEXIX",138,0)
 W !
"RTN","PXRMEXIX",139,0)
 Q
"RTN","PXRMEXLB")
0^14^B30257852
"RTN","PXRMEXLB",1,0)
PXRMEXLB ;SLC/PJH - Reminder Dialog Exchange. ;05/18/2001
"RTN","PXRMEXLB",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXLB",3,0)
 ;
"RTN","PXRMEXLB",4,0)
 ;=====================================================================
"RTN","PXRMEXLB",5,0)
 ;
"RTN","PXRMEXLB",6,0)
 ;Build list of dialog components - called once from PXRMEXLC
"RTN","PXRMEXLB",7,0)
 ;-------------------------------
"RTN","PXRMEXLB",8,0)
DBUILD(IND,NITEMS,FILENUM) ;
"RTN","PXRMEXLB",9,0)
 N DARRAY,DDATA,DDLG,DEND,DLOC,DMAP,DNAM,DNODE,DSEQ,DSTRT,DSUB,JND
"RTN","PXRMEXLB",10,0)
 ;
"RTN","PXRMEXLB",11,0)
 K ^TMP("PXRMEXTMP",$J),^TMP("PXRMEXFND",$J)
"RTN","PXRMEXLB",12,0)
 ;
"RTN","PXRMEXLB",13,0)
 ;Scan dialog components in 120 and save name and type
"RTN","PXRMEXLB",14,0)
 S JND=0
"RTN","PXRMEXLB",15,0)
 F  S JND=$O(^PXD(811.8,IEN,120,IND,1,JND)) Q:'JND  D
"RTN","PXRMEXLB",16,0)
 .S DDATA=$G(^PXD(811.8,IEN,120,IND,1,JND,0)) Q:DDATA=""
"RTN","PXRMEXLB",17,0)
 .S DNAM=$P(DDATA,U),DSTRT=$P(DDATA,U,2),DEND=$P(DDATA,U,3)
"RTN","PXRMEXLB",18,0)
 .;Extract dialog type and text and findings from exchange file
"RTN","PXRMEXLB",19,0)
 .D DPARSE
"RTN","PXRMEXLB",20,0)
 ;Scan dialog components in 120 and save dialog links
"RTN","PXRMEXLB",21,0)
 S JND="B"
"RTN","PXRMEXLB",22,0)
 F  S JND=$O(^PXD(811.8,IEN,120,IND,1,JND),-1) Q:'JND  D
"RTN","PXRMEXLB",23,0)
 .S DDATA=$G(^PXD(811.8,IEN,120,IND,1,JND,0)) Q:DDATA=""
"RTN","PXRMEXLB",24,0)
 .S DSTRT=$P(DDATA,U,2),DEND=$P(DDATA,U,3)
"RTN","PXRMEXLB",25,0)
 .S DDLG=$P(DDATA,U),DSUB=DSTRT+2
"RTN","PXRMEXLB",26,0)
 .I JND=NITEMS S ^TMP("PXRMEXTMP",$J,"PXRMDNAM")=DDLG
"RTN","PXRMEXLB",27,0)
 .F  S DSUB=$O(^PXD(811.8,IEN,100,DSUB)) Q:DSUB>DEND  D
"RTN","PXRMEXLB",28,0)
 ..S DNODE=$G(^PXD(811.8,IEN,100,DSUB,0)) I $P(DNODE,";")'="801.412" Q
"RTN","PXRMEXLB",29,0)
 ..S DNODE=$P(DNODE,";",3) I $E(DNODE,1,4)'=".01~" Q
"RTN","PXRMEXLB",30,0)
 ..S DSEQ=$P(DNODE,"~",2) Q:DSEQ=""
"RTN","PXRMEXLB",31,0)
 ..S DNODE=$G(^PXD(811.8,IEN,100,DSUB+1,0)) I $P(DNODE,";")'="801.412" Q
"RTN","PXRMEXLB",32,0)
 ..S DNODE=$P(DNODE,";",3) I $E(DNODE,1,2)'="2~" Q
"RTN","PXRMEXLB",33,0)
 ..S DNAM=$P(DNODE,"~",2) Q:DNAM=""
"RTN","PXRMEXLB",34,0)
 ..S DLOC=$G(^TMP("PXRMEXTMP",$J,"DLOC",DNAM))
"RTN","PXRMEXLB",35,0)
 ..S ^TMP("PXRMEXTMP",$J,"DMAP",DDLG,DSEQ)=DNAM_U_DLOC
"RTN","PXRMEXLB",36,0)
 ;
"RTN","PXRMEXLB",37,0)
 ;Build index of dialog findings by name
"RTN","PXRMEXLB",38,0)
 ;
"RTN","PXRMEXLB",39,0)
 ;// This index will be unique with PKR's changes to the way findings
"RTN","PXRMEXLB",40,0)
 ;// are stored in FDA. The section number may be needed to determine 
"RTN","PXRMEXLB",41,0)
 ;// if a rename has been done.
"RTN","PXRMEXLB",42,0)
 ;
"RTN","PXRMEXLB",43,0)
 N FDATA,FILENAM,FILENUM,FNAME
"RTN","PXRMEXLB",44,0)
 S IND=0
"RTN","PXRMEXLB",45,0)
 F  S IND=$O(^PXD(811.8,IEN,120,IND)) Q:'IND  D
"RTN","PXRMEXLB",46,0)
 .S FDATA=$G(^PXD(811.8,IEN,120,IND,0)) Q:FDATA=""
"RTN","PXRMEXLB",47,0)
 .S FILENAM=$P(FDATA,U),FILENUM=$P(FDATA,U,2) Q:FILENAM=""  Q:'FILENUM
"RTN","PXRMEXLB",48,0)
 .;Ignore reminder dialogs
"RTN","PXRMEXLB",49,0)
 .I FILENAM="REMINDER DIALOG" Q
"RTN","PXRMEXLB",50,0)
 .;Strip off trailing S in finding file name
"RTN","PXRMEXLB",51,0)
 .I $E(FILENAM,$L(FILENAM))="S" S $E(FILENAM,$L(FILENAM))=""
"RTN","PXRMEXLB",52,0)
 .S JND=0
"RTN","PXRMEXLB",53,0)
 .F  S JND=$O(^PXD(811.8,IEN,120,IND,1,JND)) Q:'JND  D
"RTN","PXRMEXLB",54,0)
 ..S FNAME=$P($G(^PXD(811.8,IEN,120,IND,1,JND,0)),U) Q:FNAME=""
"RTN","PXRMEXLB",55,0)
 ..;Save entry
"RTN","PXRMEXLB",56,0)
 ..S ^TMP("PXRMEXFND",$J,FNAME)=FILENUM_U_FILENAM_U_IND
"RTN","PXRMEXLB",57,0)
 Q
"RTN","PXRMEXLB",58,0)
 ;
"RTN","PXRMEXLB",59,0)
 ;Scan exchange file to get dialog fields
"RTN","PXRMEXLB",60,0)
 ;---------------------------------------
"RTN","PXRMEXLB",61,0)
DPARSE N DCNT,DFIND,DFIAD,DFNAM,DFQUIT,DLCT,DLINES,DSUB,DTEXT,DTXT,DTYP
"RTN","PXRMEXLB",62,0)
 ;
"RTN","PXRMEXLB",63,0)
 ;Find where all the field numbers are kept
"RTN","PXRMEXLB",64,0)
 N DARRAY,DDATA,DFNUM,DRAW,DSTRING
"RTN","PXRMEXLB",65,0)
 S DSUB=DSTRT,DSTRING=";4;15;24;25;"
"RTN","PXRMEXLB",66,0)
 F  S DSUB=$O(^PXD(811.8,IEN,100,DSUB)) Q:'DSUB  D  Q:DSUB>DEND
"RTN","PXRMEXLB",67,0)
 .S DDATA=$G(^PXD(811.8,IEN,100,DSUB,0)) Q:DDATA=""
"RTN","PXRMEXLB",68,0)
 .I $P(DDATA,";")'=801.41 Q
"RTN","PXRMEXLB",69,0)
 .S DFNUM=$P(DDATA,";",3),DFNUM=$P(DFNUM,"~") Q:DFNUM=""
"RTN","PXRMEXLB",70,0)
 .I DSTRING[(";"_DFNUM_";") S DARRAY(DFNUM)=DSUB
"RTN","PXRMEXLB",71,0)
 ;
"RTN","PXRMEXLB",72,0)
 ;Determine dialog component type
"RTN","PXRMEXLB",73,0)
 S DSUB=DARRAY(4) Q:'DSUB
"RTN","PXRMEXLB",74,0)
 S DTYP=$P($G(^PXD(811.8,IEN,100,DSUB,0)),"~",2)
"RTN","PXRMEXLB",75,0)
 S:DTYP[" " DTYP=$P(DTYP," ",2) S:DTYP="value" DTYP="forced"
"RTN","PXRMEXLB",76,0)
 ;
"RTN","PXRMEXLB",77,0)
 ;Initialise text and finding fields
"RTN","PXRMEXLB",78,0)
 S DTXT="*NONE*",DFIND=""
"RTN","PXRMEXLB",79,0)
 ;Get text appropriate for the type of component
"RTN","PXRMEXLB",80,0)
 I (DTYP="element")!(DTYP="group") D
"RTN","PXRMEXLB",81,0)
 .;search for WP text
"RTN","PXRMEXLB",82,0)
 .S DSUB=$G(DARRAY(25)) D:DSUB
"RTN","PXRMEXLB",83,0)
 ..S DTEXT=$P($G(^PXD(811.8,IEN,100,DSUB,0)),";",3) Q:DTEXT=""
"RTN","PXRMEXLB",84,0)
 ..;Get the line count
"RTN","PXRMEXLB",85,0)
 ..S DLINES=$P(DTEXT,"~",3),DCNT=0
"RTN","PXRMEXLB",86,0)
 ..;Get the wp text lines
"RTN","PXRMEXLB",87,0)
 ..F DLCT=DSUB+1:1:DSUB+DLINES D
"RTN","PXRMEXLB",88,0)
 ...S DTEXT=$G(^PXD(811.8,IEN,100,DLCT,0))
"RTN","PXRMEXLB",89,0)
 ...S DCNT=DCNT+1,DTXT(DCNT)=DTEXT
"RTN","PXRMEXLB",90,0)
 ...;Check for embedded TIU templates
"RTN","PXRMEXLB",91,0)
 ...D DTIU(DNAM,DTEXT)
"RTN","PXRMEXLB",92,0)
 ..;Reformat text to 50 characters
"RTN","PXRMEXLB",93,0)
 ..D DWP(.DTXT)
"RTN","PXRMEXLB",94,0)
 .;
"RTN","PXRMEXLB",95,0)
 .;Search for finding item
"RTN","PXRMEXLB",96,0)
 .S DSUB=$G(DARRAY(15)) D:DSUB
"RTN","PXRMEXLB",97,0)
 ..S DFIND=$P($G(^PXD(811.8,IEN,100,DSUB,0)),";",3) Q:DFIND=""
"RTN","PXRMEXLB",98,0)
 ..;Finding name
"RTN","PXRMEXLB",99,0)
 ..S DFIND=$P(DFIND,"~",2) Q:DFIND=""
"RTN","PXRMEXLB",100,0)
 .;
"RTN","PXRMEXLB",101,0)
 .;Search for additional finding - start after WP text
"RTN","PXRMEXLB",102,0)
 .S DSUB=+$G(DARRAY(25)) D:DSUB
"RTN","PXRMEXLB",103,0)
 ..S DCNT=0,DFQUIT=0
"RTN","PXRMEXLB",104,0)
 ..F DLCT=DSUB+1+DLINES:1 D  Q:DFQUIT  Q:DLCT>DEND
"RTN","PXRMEXLB",105,0)
 ...S DTEXT=$G(^PXD(811.8,IEN,100,DLCT,0))
"RTN","PXRMEXLB",106,0)
 ...;Ignore line if this is not an additional finding
"RTN","PXRMEXLB",107,0)
 ...I $P(DTEXT,";")'=801.4118 S:$P(DTEXT,";")>801.4118 DFQUIT=1 Q
"RTN","PXRMEXLB",108,0)
 ...S DFNAM=$P(DTEXT,"~",2) Q:DFNAM=""
"RTN","PXRMEXLB",109,0)
 ...S DCNT=DCNT+1,DFIAD(DCNT)=DFNAM
"RTN","PXRMEXLB",110,0)
 ;
"RTN","PXRMEXLB",111,0)
 I DTYP="prompt" D
"RTN","PXRMEXLB",112,0)
 .;search for prompt caption
"RTN","PXRMEXLB",113,0)
 .S DSUB=$G(DARRAY(24)) Q:'DSUB
"RTN","PXRMEXLB",114,0)
 .S DTEXT=$P($G(^PXD(811.8,IEN,100,DSUB,0)),";",3) Q:DTEXT=""
"RTN","PXRMEXLB",115,0)
 .S DTXT=$P(DTEXT,"~",2)
"RTN","PXRMEXLB",116,0)
 ;
"RTN","PXRMEXLB",117,0)
 I DTYP="group" D
"RTN","PXRMEXLB",118,0)
 .;search for group caption
"RTN","PXRMEXLB",119,0)
 .S DSUB=$G(DARRAY(15)) Q:'DSUB
"RTN","PXRMEXLB",120,0)
 .S DTEXT=$P($G(^PXD(811.8,IEN,100,DSUB,0)),";",3) Q:DTEXT=""
"RTN","PXRMEXLB",121,0)
 .S DTXT=$P(DTEXT,"~",2)
"RTN","PXRMEXLB",122,0)
 ;
"RTN","PXRMEXLB",123,0)
 ;Save dialog type
"RTN","PXRMEXLB",124,0)
 S ^TMP("PXRMEXTMP",$J,"DTYP",DNAM)=DTYP
"RTN","PXRMEXLB",125,0)
 ;Save dialog component text (first line only)
"RTN","PXRMEXLB",126,0)
 S ^TMP("PXRMEXTMP",$J,"DTXT",DNAM)=DTXT
"RTN","PXRMEXLB",127,0)
 ;
"RTN","PXRMEXLB",128,0)
 ;Save main finding
"RTN","PXRMEXLB",129,0)
 I DFIND]"" S ^TMP("PXRMEXTMP",$J,"DFND",DNAM,1)=$P(DFIND,".",2,99)
"RTN","PXRMEXLB",130,0)
 ;Save additional findings
"RTN","PXRMEXLB",131,0)
 S DSUB=0
"RTN","PXRMEXLB",132,0)
 F   S DSUB=$O(DFIAD(DSUB)) Q:'DSUB  D
"RTN","PXRMEXLB",133,0)
 .S ^TMP("PXRMEXTMP",$J,"DFND",DNAM,DSUB+1)=$P(DFIAD(DSUB),".",2,99)
"RTN","PXRMEXLB",134,0)
 ;
"RTN","PXRMEXLB",135,0)
 ;Save additional WP text lines
"RTN","PXRMEXLB",136,0)
 S DSUB=0
"RTN","PXRMEXLB",137,0)
 F   S DSUB=$O(DTXT(DSUB)) Q:'DSUB  D
"RTN","PXRMEXLB",138,0)
 .S ^TMP("PXRMEXTMP",$J,"DTXT",DNAM,DSUB)=DTXT(DSUB)
"RTN","PXRMEXLB",139,0)
 ;
"RTN","PXRMEXLB",140,0)
 ;Save dialog's position in exchange file
"RTN","PXRMEXLB",141,0)
 S ^TMP("PXRMEXTMP",$J,"DLOC",DNAM)=DSTRT_U_DEND_U_IND_U_JND
"RTN","PXRMEXLB",142,0)
 Q
"RTN","PXRMEXLB",143,0)
 ;
"RTN","PXRMEXLB",144,0)
 ;Extract any TIU templates
"RTN","PXRMEXLB",145,0)
 ;-------------------------
"RTN","PXRMEXLB",146,0)
DTIU(DNAM,TEXT) ;
"RTN","PXRMEXLB",147,0)
 N IC,TCNT,TLIST,TNAM
"RTN","PXRMEXLB",148,0)
 ;Templates are in format {FLD:fldname}
"RTN","PXRMEXLB",149,0)
 S TCNT=0 D TIUXTR^PXRMEXDG("{FLD:","}",TEXT,.TLIST,.TCNT) Q:'TCNT
"RTN","PXRMEXLB",150,0)
 ;
"RTN","PXRMEXLB",151,0)
 F IC=1:1:TCNT D
"RTN","PXRMEXLB",152,0)
 .S TNAM=$G(TLIST(TCNT)) Q:TNAM=""
"RTN","PXRMEXLB",153,0)
 .S ^TMP("PXRMEXTMP",$J,"DTIU",DNAM,TNAM)=""
"RTN","PXRMEXLB",154,0)
 Q
"RTN","PXRMEXLB",155,0)
 ;
"RTN","PXRMEXLB",156,0)
 ;Process WP fields
"RTN","PXRMEXLB",157,0)
 ;-----------------
"RTN","PXRMEXLB",158,0)
DWP(TEXT) ;
"RTN","PXRMEXLB",159,0)
 N DIWF,DIWL,DIWR,IC,X
"RTN","PXRMEXLB",160,0)
 S DIWF="C50",DIWL=0,DIWR=50
"RTN","PXRMEXLB",161,0)
 ;
"RTN","PXRMEXLB",162,0)
 K ^UTILITY($J,"W")
"RTN","PXRMEXLB",163,0)
 S IC=""
"RTN","PXRMEXLB",164,0)
 F  S IC=$O(TEXT(IC)) Q:IC=""  D
"RTN","PXRMEXLB",165,0)
 .S X=TEXT(IC)
"RTN","PXRMEXLB",166,0)
 .D ^DIWP
"RTN","PXRMEXLB",167,0)
 ;
"RTN","PXRMEXLB",168,0)
 K TEXT
"RTN","PXRMEXLB",169,0)
 S IC=0
"RTN","PXRMEXLB",170,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMEXLB",171,0)
 .S DTEXT=$G(^UTILITY($J,"W",0,IC,0))
"RTN","PXRMEXLB",172,0)
 .I IC=1 S TEXT=DTEXT Q
"RTN","PXRMEXLB",173,0)
 .S TEXT(IC-1)=DTEXT
"RTN","PXRMEXLB",174,0)
 ;
"RTN","PXRMEXLB",175,0)
 K ^UTILITY($J,"W")
"RTN","PXRMEXLB",176,0)
 Q
"RTN","PXRMEXLC")
0^11^B33248406
"RTN","PXRMEXLC",1,0)
PXRMEXLC ; SLC/PKR/PJH - Routines to display repository entry components. ;06/01/2001
"RTN","PXRMEXLC",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXLC",3,0)
 ;======================================================================
"RTN","PXRMEXLC",4,0)
BLDLIST(FORCE) ;Build a list of all repository entries.
"RTN","PXRMEXLC",5,0)
 ;If FORCE is true then force rebuilding of the list.
"RTN","PXRMEXLC",6,0)
 I FORCE K ^TMP("PXRMEXLR",$J)
"RTN","PXRMEXLC",7,0)
 I $D(^TMP("PXRMEXLR",$J,"VALMCNT")) S VALMCNT=^TMP("PXRMEXLR",$J,"VALMCNT")
"RTN","PXRMEXLC",8,0)
 E  D
"RTN","PXRMEXLC",9,0)
 . N IEN,RELIST
"RTN","PXRMEXLC",10,0)
 . D RE^PXRMLIST(.RELIST,.IEN)
"RTN","PXRMEXLC",11,0)
 . M ^TMP("PXRMEXLR",$J)=RELIST
"RTN","PXRMEXLC",12,0)
 . S VALMCNT=RELIST("VALMCNT")
"RTN","PXRMEXLC",13,0)
 . F IND=1:1:VALMCNT D
"RTN","PXRMEXLC",14,0)
 .. S ^TMP("PXRMEXLR",$J,"IDX",IND,IND)=IEN(IND)
"RTN","PXRMEXLC",15,0)
 Q
"RTN","PXRMEXLC",16,0)
 ;
"RTN","PXRMEXLC",17,0)
 ;======================================================================
"RTN","PXRMEXLC",18,0)
CDISP(IEN) ;Format component list for display.
"RTN","PXRMEXLC",19,0)
 N CAT,CMPNT,END,EOKTI,EXISTS,FILENUM,FOKTI,IND,INDEX,JND,JNDS,KND
"RTN","PXRMEXLC",20,0)
 N MSG,NCMPNT,NDLINE,NDSEL,NITEMS,NLINE,NSEL,PT01,START,TEMP,TEMP0,TYPE
"RTN","PXRMEXLC",21,0)
 K ^TMP("PXRMEXLC",$J)
"RTN","PXRMEXLC",22,0)
 K ^TMP("PXRMEXLD",$J)
"RTN","PXRMEXLC",23,0)
 S (NDLINE,NLINE)=0
"RTN","PXRMEXLC",24,0)
 S (NDSEL,NSEL)=1
"RTN","PXRMEXLC",25,0)
 ;Load the description.
"RTN","PXRMEXLC",26,0)
 F IND=1:1:$P(^PXD(811.8,IEN,110,0),U,4) D
"RTN","PXRMEXLC",27,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",28,0)
 . S ^TMP("PXRMEXLC",$J,NLINE,0)=^PXD(811.8,IEN,110,IND,0)
"RTN","PXRMEXLC",29,0)
 . S ^TMP("PXRMEXLC",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",30,0)
 S NLINE=NLINE+1
"RTN","PXRMEXLC",31,0)
 S ^TMP("PXRMEXLC",$J,NLINE,0)=" "
"RTN","PXRMEXLC",32,0)
 S ^TMP("PXRMEXLC",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",33,0)
 S NCMPNT=^PXD(811.8,IEN,119)
"RTN","PXRMEXLC",34,0)
 ;Load the text for display.
"RTN","PXRMEXLC",35,0)
 F IND=1:1:NCMPNT D
"RTN","PXRMEXLC",36,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",37,0)
 . S TEMP=^PXD(811.8,IEN,120,IND,0)
"RTN","PXRMEXLC",38,0)
 . S ^TMP("PXRMEXLC",$J,NLINE,0)=$P(TEMP,U,1)
"RTN","PXRMEXLC",39,0)
 . S ^TMP("PXRMEXLC",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",40,0)
 . S FILENUM=$P(TEMP,U,2)
"RTN","PXRMEXLC",41,0)
 . S FOKTI=$$FOKTI^PXRMEXFI(FILENUM)
"RTN","PXRMEXLC",42,0)
 . S NITEMS=$P(TEMP,U,3)
"RTN","PXRMEXLC",43,0)
 . I $P(TEMP,U,1)="REMINDER DIALOG" D
"RTN","PXRMEXLC",44,0)
 ..;Save details of the dialog in ^TMP("PXRMEXTMP")
"RTN","PXRMEXLC",45,0)
 .. S JNDS=NITEMS D DBUILD^PXRMEXLB(IND,NITEMS,FILENUM)
"RTN","PXRMEXLC",46,0)
 . E  S JNDS=1
"RTN","PXRMEXLC",47,0)
 . F JND=JNDS:1:NITEMS D
"RTN","PXRMEXLC",48,0)
 .. S TEMP=^PXD(811.8,IEN,120,IND,1,JND,0)
"RTN","PXRMEXLC",49,0)
 .. S EOKTI=FOKTI
"RTN","PXRMEXLC",50,0)
 .. S PT01=$P(TEMP,U,1)
"RTN","PXRMEXLC",51,0)
 .. I FILENUM=0 S EXISTS=$$EXISTS^PXRMEXCF(PT01)
"RTN","PXRMEXLC",52,0)
 .. E  S EXISTS=$$EXISTS^PXRMEXIU(FILENUM,PT01)
"RTN","PXRMEXLC",53,0)
 ..;If this is an education topic and it starts with VA- it
"RTN","PXRMEXLC",54,0)
 ..;cannot be transported.
"RTN","PXRMEXLC",55,0)
 .. I (FILENUM=9999999.09)&(PT01["VA-") S EOKTI=0
"RTN","PXRMEXLC",56,0)
 ..;If this is a health factor see if it is a category.
"RTN","PXRMEXLC",57,0)
 .. S CAT=""
"RTN","PXRMEXLC",58,0)
 .. I (FILENUM=9999999.64) D
"RTN","PXRMEXLC",59,0)
 ... S TYPE=""
"RTN","PXRMEXLC",60,0)
 ... S START=$P(TEMP,U,2)
"RTN","PXRMEXLC",61,0)
 ... S END=$P(TEMP,U,3)
"RTN","PXRMEXLC",62,0)
 ... F KND=START:1:END D
"RTN","PXRMEXLC",63,0)
 .... S TEMP0=$P(^PXD(811.8,IEN,100,KND,0),";",3)
"RTN","PXRMEXLC",64,0)
 .... I $P(TEMP0,"~",1)=.1 S TYPE=$P(TEMP0,"~",2)
"RTN","PXRMEXLC",65,0)
 ... I TYPE="CATEGORY" S CAT="X"
"RTN","PXRMEXLC",66,0)
 .. S NLINE=NLINE+1
"RTN","PXRMEXLC",67,0)
 .. I IND=1,JND=1 S NSEL=1,INDEX=$S(EOKTI:NSEL,1:"")
"RTN","PXRMEXLC",68,0)
 .. E  D
"RTN","PXRMEXLC",69,0)
 ...;If entries in this file are ok to install add them to the
"RTN","PXRMEXLC",70,0)
 ...;selectable list. Make sure the first selectable entry exists
"RTN","PXRMEXLC",71,0)
 ...;before incrementing NSEL.
"RTN","PXRMEXLC",72,0)
 ... I EOKTI S NSEL=$S($D(^TMP("PXRMEXLC",$J,"SEL",1)):NSEL+1,1:NSEL),INDEX=NSEL
"RTN","PXRMEXLC",73,0)
 ... E  S INDEX=""
"RTN","PXRMEXLC",74,0)
 .. S ^TMP("PXRMEXLC",$J,NLINE,0)=$$FMTDATA(INDEX,PT01,CAT,EXISTS)
"RTN","PXRMEXLC",75,0)
 .. S ^TMP("PXRMEXLC",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",76,0)
 ..;Store the file number, node 120 indexes and the ien if it exists.
"RTN","PXRMEXLC",77,0)
 .. I INDEX=NSEL S ^TMP("PXRMEXLC",$J,"SEL",NSEL)=FILENUM_U_IND_U_JND_U_EXISTS
"RTN","PXRMEXLC",78,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",79,0)
 . S ^TMP("PXRMEXLC",$J,NLINE,0)=""
"RTN","PXRMEXLC",80,0)
 . S ^TMP("PXRMEXLC",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",81,0)
 Q
"RTN","PXRMEXLC",82,0)
 ;
"RTN","PXRMEXLC",83,0)
 ;======================================================================
"RTN","PXRMEXLC",84,0)
DDISP(IND,NITEMS,FILENUM) ;Setup dialog display list.
"RTN","PXRMEXLC",85,0)
 N JND,NLINE,NSEL,TEMP
"RTN","PXRMEXLC",86,0)
 S (NLINE,NSEL)=0
"RTN","PXRMEXLC",87,0)
 F JND=1:1:NITEMS D
"RTN","PXRMEXLC",88,0)
 . S TEMP=^PXD(811.8,IEN,120,IND,1,JND,0)
"RTN","PXRMEXLC",89,0)
 . S PT01=$P(TEMP,U,1)
"RTN","PXRMEXLC",90,0)
 . S EXISTS=$$EXISTS^PXRMEXIU(FILENUM,PT01)
"RTN","PXRMEXLC",91,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",92,0)
 . S NSEL=NSEL+1
"RTN","PXRMEXLC",93,0)
 . S ^TMP("PXRMEXLD",$J,NLINE,0)=$$FMTDATA(NSEL,PT01,CAT,EXISTS)
"RTN","PXRMEXLC",94,0)
 . S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",95,0)
 .;Store the file number, start and stop line in the repository.
"RTN","PXRMEXLC",96,0)
 . S ^TMP("PXRMEXLD",$J,"SEL",NSEL)=FILENUM_U_$P(TEMP,U,2,3)
"RTN","PXRMEXLC",97,0)
 Q
"RTN","PXRMEXLC",98,0)
 ;
"RTN","PXRMEXLC",99,0)
 ;======================================================================
"RTN","PXRMEXLC",100,0)
FMTDATA(NSEL,PT01,CAT,EXISTS) ;Format items for display.
"RTN","PXRMEXLC",101,0)
 N NSTI,TEMP
"RTN","PXRMEXLC",102,0)
 S TEMP=$$RJ^XLFSTR(NSEL,4," ")_"  "_PT01
"RTN","PXRMEXLC",103,0)
 I CAT="X" D
"RTN","PXRMEXLC",104,0)
 . S NSTI=63-$L(TEMP)
"RTN","PXRMEXLC",105,0)
 . S TEMP=TEMP_$$INSCHR(NSTI," ")_"X"
"RTN","PXRMEXLC",106,0)
 I EXISTS D
"RTN","PXRMEXLC",107,0)
 . S NSTI=75-$L(TEMP)
"RTN","PXRMEXLC",108,0)
 . S TEMP=TEMP_$$INSCHR(NSTI," ")_"X"
"RTN","PXRMEXLC",109,0)
 Q TEMP
"RTN","PXRMEXLC",110,0)
 ;
"RTN","PXRMEXLC",111,0)
 ;======================================================================
"RTN","PXRMEXLC",112,0)
HISTLIST(LIST,VALMCNT) ;Build a list of install histories in
"RTN","PXRMEXLC",113,0)
 ;^TMP("PXRMEXIH",$J).
"RTN","PXRMEXLC",114,0)
 N DATE,DC,ENTRY,IHIND,IND,INDONE,NLINE,NSEL,RIEN,SOURCE,TEMP,USER
"RTN","PXRMEXLC",115,0)
 K ^TMP("PXRMEXIH",$J)
"RTN","PXRMEXLC",116,0)
 S (NLINE,NSEL)=0
"RTN","PXRMEXLC",117,0)
 S IND=""
"RTN","PXRMEXLC",118,0)
 F  S IND=$O(LIST(IND)) Q:IND=""  D
"RTN","PXRMEXLC",119,0)
 . S RIEN=^TMP("PXRMEXLR",$J,"IDX",IND,IND)
"RTN","PXRMEXLC",120,0)
 . I $D(^PXD(811.8,RIEN,130)) S INDONE=1
"RTN","PXRMEXLC",121,0)
 . E  S INDONE=0
"RTN","PXRMEXLC",122,0)
 . S TEMP=^PXD(811.8,RIEN,0)
"RTN","PXRMEXLC",123,0)
 . S ENTRY=$P(TEMP,U,1)
"RTN","PXRMEXLC",124,0)
 . S SOURCE=$P(TEMP,U,2)
"RTN","PXRMEXLC",125,0)
 . S DATE=$P(TEMP,U,3)
"RTN","PXRMEXLC",126,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",127,0)
 . I INDONE S NSEL=NSEL+1
"RTN","PXRMEXLC",128,0)
 . S ^TMP("PXRMEXIH",$J,NLINE,0)=$$FRE^PXRMLIST(" ",ENTRY,SOURCE,DATE)
"RTN","PXRMEXLC",129,0)
 . I INDONE S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",130,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",131,0)
 . S ^TMP("PXRMEXIH",$J,NLINE,0)="     Installation Date       Installed By"
"RTN","PXRMEXLC",132,0)
 . I INDONE S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",133,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",134,0)
 . S ^TMP("PXRMEXIH",$J,NLINE,0)="     -----------------       ------------"
"RTN","PXRMEXLC",135,0)
 . I INDONE S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",136,0)
 . I 'INDONE D  Q
"RTN","PXRMEXLC",137,0)
 .. S NLINE=NLINE+1
"RTN","PXRMEXLC",138,0)
 .. S ^TMP("PXRMEXIH",$J,NLINE,0)="      none"
"RTN","PXRMEXLC",139,0)
 .. S NLINE=NLINE+1
"RTN","PXRMEXLC",140,0)
 .. S ^TMP("PXRMEXIH",$J,NLINE,0)=" "
"RTN","PXRMEXLC",141,0)
 . S DATE=""
"RTN","PXRMEXLC",142,0)
 . S DC=0
"RTN","PXRMEXLC",143,0)
 . F  S DATE=$O(^PXD(811.8,RIEN,130,"B",DATE)) Q:DATE=""  D
"RTN","PXRMEXLC",144,0)
 .. S NLINE=NLINE+1
"RTN","PXRMEXLC",145,0)
 .. S DC=DC+1
"RTN","PXRMEXLC",146,0)
 .. I DC>1 S NSEL=NSEL+1
"RTN","PXRMEXLC",147,0)
 .. S IHIND=$O(^PXD(811.8,RIEN,130,"B",DATE,""))
"RTN","PXRMEXLC",148,0)
 .. S TEMP=^PXD(811.8,RIEN,130,IHIND,0)
"RTN","PXRMEXLC",149,0)
 .. S ^TMP("PXRMEXIH",$J,NLINE,0)=$$RJ^XLFSTR(NSEL,4," ")_" "_$$FMTE^XLFDT($P(TEMP,U,1),"5Z")_"   "_$P(TEMP,U,2)
"RTN","PXRMEXLC",150,0)
 .. S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",151,0)
 .. S ^TMP("PXRMEXIH",$J,"SEL",NSEL)=RIEN_U_IHIND
"RTN","PXRMEXLC",152,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",153,0)
 . S ^TMP("PXRMEXIH",$J,NLINE,0)=" "
"RTN","PXRMEXLC",154,0)
 . S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",155,0)
 S VALMCNT=NLINE
"RTN","PXRMEXLC",156,0)
 Q
"RTN","PXRMEXLC",157,0)
 ;
"RTN","PXRMEXLC",158,0)
 ;======================================================================
"RTN","PXRMEXLC",159,0)
INSCHR(NUM,CHR) ;Return a string of NUM characters (CHR).
"RTN","PXRMEXLC",160,0)
 N IND,TEMP
"RTN","PXRMEXLC",161,0)
 S TEMP=""
"RTN","PXRMEXLC",162,0)
 I NUM<1 Q TEMP
"RTN","PXRMEXLC",163,0)
 F IND=1:1:NUM S TEMP=TEMP_CHR
"RTN","PXRMEXLC",164,0)
 Q TEMP
"RTN","PXRMEXLC",165,0)
 ;
"RTN","PXRMEXLD")
0^12^B87950593
"RTN","PXRMEXLD",1,0)
PXRMEXLD ;SLC/PJH - Reminder Dialog Exchange Main Routine. ;05/18/2001
"RTN","PXRMEXLD",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXLD",3,0)
 ;
"RTN","PXRMEXLD",4,0)
 ;=====================================================================
"RTN","PXRMEXLD",5,0)
 ;
"RTN","PXRMEXLD",6,0)
 ;List Manager Functions (PXRM EX LIST DIALOG) called from PXRMEXLI
"RTN","PXRMEXLD",7,0)
 ;--------------------------------------------
"RTN","PXRMEXLD",8,0)
START N PXRMBG,PXRMMODE,VALMBCK,VALMBG,VALMCNT,VALMSG,X,XMZ
"RTN","PXRMEXLD",9,0)
 S X="IORESET"
"RTN","PXRMEXLD",10,0)
 D EN^VALM("PXRM EX LIST DIALOG")
"RTN","PXRMEXLD",11,0)
 ;
"RTN","PXRMEXLD",12,0)
 ;Rebuild Display
"RTN","PXRMEXLD",13,0)
 D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXLD",14,0)
 Q
"RTN","PXRMEXLD",15,0)
 ;
"RTN","PXRMEXLD",16,0)
 ;Entry action for list PXRM EX LIST DIALOG
"RTN","PXRMEXLD",17,0)
 ;-----------------------------------------
"RTN","PXRMEXLD",18,0)
ENTRY D FIND Q
"RTN","PXRMEXLD",19,0)
 ;
"RTN","PXRMEXLD",20,0)
 ;Display Dialog Details
"RTN","PXRMEXLD",21,0)
 ;----------------------
"RTN","PXRMEXLD",22,0)
DETAIL S PXRMMODE=0 D DISP(PXRMMODE) Q
"RTN","PXRMEXLD",23,0)
 ;
"RTN","PXRMEXLD",24,0)
 ;Display Findings
"RTN","PXRMEXLD",25,0)
 ;--------------------------
"RTN","PXRMEXLD",26,0)
FIND S PXRMMODE=2 D DISP(PXRMMODE) Q
"RTN","PXRMEXLD",27,0)
 ;
"RTN","PXRMEXLD",28,0)
 ;Display Dialog Summary
"RTN","PXRMEXLD",29,0)
 ;----------------------
"RTN","PXRMEXLD",30,0)
SUM S PXRMMODE=3 D DISP(PXRMMODE) Q
"RTN","PXRMEXLD",31,0)
 ;
"RTN","PXRMEXLD",32,0)
 ;Display Dialog Usage
"RTN","PXRMEXLD",33,0)
 ;--------------------
"RTN","PXRMEXLD",34,0)
USE S PXRMMODE=4 D DISP(PXRMMODE) Q
"RTN","PXRMEXLD",35,0)
 ;
"RTN","PXRMEXLD",36,0)
 ;Display Dialog Text
"RTN","PXRMEXLD",37,0)
 ;-------------------
"RTN","PXRMEXLD",38,0)
TEXT S PXRMMODE=1 D DISP(PXRMMODE) Q
"RTN","PXRMEXLD",39,0)
 ;
"RTN","PXRMEXLD",40,0)
EXIT K ^TMP("PXRMEXLD",$J) Q
"RTN","PXRMEXLD",41,0)
 ;
"RTN","PXRMEXLD",42,0)
PEXIT ;PXRM EXCH DIALOG MENU protocol exit code
"RTN","PXRMEXLD",43,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEXLD",44,0)
 ;Reset after page up/down etc
"RTN","PXRMEXLD",45,0)
 D XQORM
"RTN","PXRMEXLD",46,0)
 Q
"RTN","PXRMEXLD",47,0)
 ;
"RTN","PXRMEXLD",48,0)
HELP N ORU,ORUPRMT,XQORM,PXRMTAG S PXRMTAG="DLG"
"RTN","PXRMEXLD",49,0)
 D EN^VALM("PXRM EX DIALOG HELP")
"RTN","PXRMEXLD",50,0)
 Q
"RTN","PXRMEXLD",51,0)
 ;
"RTN","PXRMEXLD",52,0)
HDR S VALMHDR(1)="Packed reminder dialog: "
"RTN","PXRMEXLD",53,0)
 S VALMHDR(1)=VALMHDR(1)_$G(^TMP("PXRMEXTMP",$J,"PXRMDNAM"))
"RTN","PXRMEXLD",54,0)
 S VALMHDR("TITLE")=VALMHDR(1)
"RTN","PXRMEXLD",55,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEXLD",56,0)
 Q
"RTN","PXRMEXLD",57,0)
 ;
"RTN","PXRMEXLD",58,0)
 ;Build list manager workfile from ^TMP("PXRMEXTMP" (see ^PXRMEXLB)
"RTN","PXRMEXLD",59,0)
 ;-------------------------------------------------
"RTN","PXRMEXLD",60,0)
DISP(VIEW) ;
"RTN","PXRMEXLD",61,0)
 K ^TMP("PXRMEXLD",$J)
"RTN","PXRMEXLD",62,0)
 N DDATA,DDLG,DEND,DREP,DSTRT,IND,JND,NLINE,NSEL
"RTN","PXRMEXLD",63,0)
 S NLINE=0,NSEL=0,VALMBCK="R",VALMCNT=NLINE
"RTN","PXRMEXLD",64,0)
 S DDLG=$G(^TMP("PXRMEXTMP",$J,"PXRMDNAM")) Q:DDLG=""
"RTN","PXRMEXLD",65,0)
 ;
"RTN","PXRMEXLD",66,0)
 ;Save reminder dialog
"RTN","PXRMEXLD",67,0)
 S DDATA=^TMP("PXRMEXTMP",$J,"DLOC",DDLG)
"RTN","PXRMEXLD",68,0)
 S DSTRT=$P(DDATA,U,1),DEND=$P(DDATA,U,2)
"RTN","PXRMEXLD",69,0)
 S IND=$P(DDATA,U,3),JND=$P(DDATA,U,4),DREP=""
"RTN","PXRMEXLD",70,0)
 D DLINE(DDLG,"","")
"RTN","PXRMEXLD",71,0)
 S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLD",72,0)
 S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",73,0)
 ;Process components
"RTN","PXRMEXLD",74,0)
 D DCMP(DDLG,"")
"RTN","PXRMEXLD",75,0)
 ;Change header
"RTN","PXRMEXLD",76,0)
 I VIEW=0 D CHGCAP^VALM("HEADER2","Dialog Details")
"RTN","PXRMEXLD",77,0)
 I VIEW=1 D CHGCAP^VALM("HEADER2","Dialog Text")
"RTN","PXRMEXLD",78,0)
 I VIEW=2 D CHGCAP^VALM("HEADER2","Dialog Findings")
"RTN","PXRMEXLD",79,0)
 I VIEW=3 D CHGCAP^VALM("HEADER2","Dialog Summary")
"RTN","PXRMEXLD",80,0)
 I VIEW=4 D CHGCAP^VALM("HEADER2","Dialog Usage")
"RTN","PXRMEXLD",81,0)
 ;
"RTN","PXRMEXLD",82,0)
 S VALMCNT=NLINE,^TMP("PXRMEXLD",$J,"VALMCNT")=VALMCNT,VALMBG=1
"RTN","PXRMEXLD",83,0)
 ;
"RTN","PXRMEXLD",84,0)
 ;Reset protocol
"RTN","PXRMEXLD",85,0)
 D XQORM
"RTN","PXRMEXLD",86,0)
 Q
"RTN","PXRMEXLD",87,0)
 ;
"RTN","PXRMEXLD",88,0)
 ;Update workfile
"RTN","PXRMEXLD",89,0)
 ;---------------
"RTN","PXRMEXLD",90,0)
DLINE(DNAM,LEV,DSEQ) ;
"RTN","PXRMEXLD",91,0)
 ;Check if standard PXRM prompt
"RTN","PXRMEXLD",92,0)
 N DPXRM S DPXRM=$$PXRM^PXRMEXID(DNAM)
"RTN","PXRMEXLD",93,0)
 ;
"RTN","PXRMEXLD",94,0)
 ;Ignore PXRM prompts if doing a finding view (DF)
"RTN","PXRMEXLD",95,0)
 I VIEW>1,DPXRM Q
"RTN","PXRMEXLD",96,0)
 ;
"RTN","PXRMEXLD",97,0)
 N DEXIST,DPTX,DTXT,DTYP,EXIST,ITEM,TEMP,SEP
"RTN","PXRMEXLD",98,0)
 S ITEM=""
"RTN","PXRMEXLD",99,0)
 I DPXRM=0 S NSEL=NSEL+1,ITEM=NSEL
"RTN","PXRMEXLD",100,0)
 S NLINE=NLINE+1,SEP=$E(LEV,$L(LEV)),DEXIST=0
"RTN","PXRMEXLD",101,0)
 S TEMP=$J(ITEM,3)_$J("",4)_LEV_DSEQ
"RTN","PXRMEXLD",102,0)
 ;Determine type
"RTN","PXRMEXLD",103,0)
 S DTYP=$G(^TMP("PXRMEXTMP",$J,"DTYP",DNAM))
"RTN","PXRMEXLD",104,0)
 ;Dialog component display
"RTN","PXRMEXLD",105,0)
 I (VIEW'=1) D
"RTN","PXRMEXLD",106,0)
 .I $L(TEMP)<13 S TEMP=TEMP_$J("",12+$L(SEP)-$L(TEMP))_$E(DNAM,1,50)
"RTN","PXRMEXLD",107,0)
 .E  S TEMP=TEMP_" "_$E(DNAM,1,50)
"RTN","PXRMEXLD",108,0)
 I VIEW=1 D
"RTN","PXRMEXLD",109,0)
 .I DTYP]"" S DTXT=$G(^TMP("PXRMEXTMP",$J,"DTXT",DNAM))
"RTN","PXRMEXLD",110,0)
 .I DTYP="" S DTXT=DNAM
"RTN","PXRMEXLD",111,0)
 .I DREP'="" S DTXT=DNAM
"RTN","PXRMEXLD",112,0)
 .I $L(TEMP)<13 S TEMP=TEMP_$J("",12+$L(SEP)-$L(TEMP))_$E(DTXT,1,50)
"RTN","PXRMEXLD",113,0)
 .E  S TEMP=TEMP_" "_$E(DTXT,1,50)
"RTN","PXRMEXLD",114,0)
 ;Add Type
"RTN","PXRMEXLD",115,0)
 S TEMP=TEMP_$J("",65-$L(TEMP))_DTYP
"RTN","PXRMEXLD",116,0)
 ;Exists flag
"RTN","PXRMEXLD",117,0)
 I DPXRM=0,$$EXISTS^PXRMEXIU(801.41,DNAM) D
"RTN","PXRMEXLD",118,0)
 .S TEMP=TEMP_$J("",75-$L(TEMP))_"X",DEXIST=1
"RTN","PXRMEXLD",119,0)
 S ^TMP("PXRMEXLD",$J,NLINE,0)=TEMP
"RTN","PXRMEXLD",120,0)
 ;
"RTN","PXRMEXLD",121,0)
 ;Set up selection index
"RTN","PXRMEXLD",122,0)
 S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)="" Q:DPXRM=1
"RTN","PXRMEXLD",123,0)
 ;Store the file number, start and stop line in the exchange file.
"RTN","PXRMEXLD",124,0)
 S ^TMP("PXRMEXLD",$J,"SEL",NSEL)=FILENUM_U_DSTRT_U_DEND_U_DEXIST_U_IND_U_JND
"RTN","PXRMEXLD",125,0)
 ;
"RTN","PXRMEXLD",126,0)
 ;Check for replacements
"RTN","PXRMEXLD",127,0)
 I DREP'="" D
"RTN","PXRMEXLD",128,0)
 .N TEMP
"RTN","PXRMEXLD",129,0)
 .S TEMP=$J("",12+$L(SEP))_"(Replaced with "_PXRMNMCH(FILENUM,DNAM)_")"
"RTN","PXRMEXLD",130,0)
 .S TEMP=$E(TEMP,1,74),TEMP=TEMP_$J("",75-$L(TEMP))_"X"
"RTN","PXRMEXLD",131,0)
 .S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=TEMP
"RTN","PXRMEXLD",132,0)
 .S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",133,0)
 .S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLD",134,0)
 .S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",135,0)
 ;
"RTN","PXRMEXLD",136,0)
 ;Insert additional text lines
"RTN","PXRMEXLD",137,0)
 I VIEW=1,DREP="" D
"RTN","PXRMEXLD",138,0)
 .N DSUB,DTXT,FILENUM
"RTN","PXRMEXLD",139,0)
 .S DSUB=0,FILENUM=8927.1
"RTN","PXRMEXLD",140,0)
 .F  S DSUB=$O(^TMP("PXRMEXTMP",$J,"DTXT",DNAM,DSUB)) Q:'DSUB  D
"RTN","PXRMEXLD",141,0)
 ..S DTXT=$G(^TMP("PXRMEXTMP",$J,"DTXT",DNAM,DSUB)),NLINE=NLINE+1
"RTN","PXRMEXLD",142,0)
 ..S ^TMP("PXRMEXLD",$J,NLINE,0)=$J("",12+$L(SEP))_$E(DTXT,1,50)
"RTN","PXRMEXLD",143,0)
 ..S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",144,0)
 .;TIU template changes
"RTN","PXRMEXLD",145,0)
 .I $D(PXRMNMCH(FILENUM)),$D(^TMP("PXRMEXTMP",$J,"DTIU",DNAM)) D
"RTN","PXRMEXLD",146,0)
 ..N TEMP,TNAM,TNNAM
"RTN","PXRMEXLD",147,0)
 ..S TNAM=""
"RTN","PXRMEXLD",148,0)
 ..F  S TNAM=$O(^TMP("PXRMEXTMP",$J,"DTIU",DNAM,TNAM)) Q:TNAM=""  D
"RTN","PXRMEXLD",149,0)
 ...S TNNAM=$G(PXRMNMCH(FILENUM,TNAM)) Q:TNNAM=""
"RTN","PXRMEXLD",150,0)
 ...S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLD",151,0)
 ...S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",152,0)
 ...S TEMP=$J("",12+$L(SEP))_"(TIU template "_TNAM_" copied to "_TNNAM_")"
"RTN","PXRMEXLD",153,0)
 ...S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=TEMP
"RTN","PXRMEXLD",154,0)
 ...S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",155,0)
 ...S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLD",156,0)
 ...S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",157,0)
 ;Insert finding items
"RTN","PXRMEXLD",158,0)
 I VIEW=2,("element;group"[DTYP),DREP="" D
"RTN","PXRMEXLD",159,0)
 .N DSUB,FDATA,FILENUM,FLIT,FLONG,FNAME,FOUND,FREP,FTAB,FTYP,TEMP
"RTN","PXRMEXLD",160,0)
 .;Findings and additional findings
"RTN","PXRMEXLD",161,0)
 .S DSUB=0,FOUND=0
"RTN","PXRMEXLD",162,0)
 .F  S DSUB=$O(^TMP("PXRMEXTMP",$J,"DFND",DNAM,DSUB)) Q:'DSUB  D
"RTN","PXRMEXLD",163,0)
 ..S FNAME=$G(^TMP("PXRMEXTMP",$J,"DFND",DNAM,DSUB)) Q:FNAME=""
"RTN","PXRMEXLD",164,0)
 ..S FDATA=$G(^TMP("PXRMEXFND",$J,FNAME))
"RTN","PXRMEXLD",165,0)
 ..S FILENUM=$P(FDATA,U),FTYP=$P(FDATA,U,2) Q:'FILENUM
"RTN","PXRMEXLD",166,0)
 ..S FREP=$G(PXRMNMCH(FILENUM,FNAME))
"RTN","PXRMEXLD",167,0)
 ..S NLINE=NLINE+1,EXIST=$$EXISTS^PXRMEXIU(FILENUM,FNAME),FOUND=1
"RTN","PXRMEXLD",168,0)
 ..I DSUB=1 S FLIT="Finding: "
"RTN","PXRMEXLD",169,0)
 ..I DSUB>1 S FLIT="Add. Finding: "
"RTN","PXRMEXLD",170,0)
 ..S FLONG=0 I $L(FLIT_FNAME_" ("_FTYP_")")>60 S FLONG=1
"RTN","PXRMEXLD",171,0)
 ..I 'FLONG S FNAME=FLIT_FNAME_" ("_FTYP_")"
"RTN","PXRMEXLD",172,0)
 ..I FLONG S FNAME=FLIT_FNAME
"RTN","PXRMEXLD",173,0)
 ..S TEMP=$J("",12+$L(SEP))_$E(FNAME,1,60)_$J("",60-$L(FNAME))
"RTN","PXRMEXLD",174,0)
 ..I EXIST S TEMP=TEMP_$J("",75-$L(TEMP))_"X"
"RTN","PXRMEXLD",175,0)
 ..S ^TMP("PXRMEXLD",$J,NLINE,0)=TEMP
"RTN","PXRMEXLD",176,0)
 ..S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",177,0)
 ..I FLONG D
"RTN","PXRMEXLD",178,0)
 ...S NLINE=NLINE+1
"RTN","PXRMEXLD",179,0)
 ...S FTAB=$S(DSUB=1:21,1:26)
"RTN","PXRMEXLD",180,0)
 ...S ^TMP("PXRMEXLD",$J,NLINE,0)=$J("",FTAB)_"("_FTYP_")"
"RTN","PXRMEXLD",181,0)
 ...S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",182,0)
 ..I FREP'="" D
"RTN","PXRMEXLD",183,0)
 ...S NLINE=NLINE+1
"RTN","PXRMEXLD",184,0)
 ...S FTAB=$S(DSUB=1:21,1:26)
"RTN","PXRMEXLD",185,0)
 ...S ^TMP("PXRMEXLD",$J,NLINE,0)=$J("",FTAB)_"(Replaced by "_FREP_")"
"RTN","PXRMEXLD",186,0)
 ...S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",187,0)
 .;If no findings
"RTN","PXRMEXLD",188,0)
 .I 'FOUND D
"RTN","PXRMEXLD",189,0)
 ..S NLINE=NLINE+1
"RTN","PXRMEXLD",190,0)
 ..S ^TMP("PXRMEXLD",$J,NLINE,0)=$J("",12+$L(SEP))_"Finding: *NONE*"
"RTN","PXRMEXLD",191,0)
 ..S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",192,0)
 ;
"RTN","PXRMEXLD",193,0)
 ;Usage screen
"RTN","PXRMEXLD",194,0)
 I VIEW=4,DREP="" D
"RTN","PXRMEXLD",195,0)
 .N DOTHER,DTXT,DTYPE,OTHER,TYPE
"RTN","PXRMEXLD",196,0)
 .D OTHER(DNAM,.DOTHER) Q:'$D(DOTHER)
"RTN","PXRMEXLD",197,0)
 .S OTHER=""
"RTN","PXRMEXLD",198,0)
 .F  S OTHER=$O(DOTHER(OTHER)) Q:OTHER=""  D
"RTN","PXRMEXLD",199,0)
 ..S TYPE=DOTHER(OTHER),NLINE=NLINE+1,DTYPE="REMINDER DIALOG"
"RTN","PXRMEXLD",200,0)
 ..I TYPE="G" S DTYPE="DIALOG GROUP"
"RTN","PXRMEXLD",201,0)
 ..I TYPE="E" S DTYPE="DIALOG ELEMENT"
"RTN","PXRMEXLD",202,0)
 ..S DTXT="USED BY: "_OTHER_" ("_DTYPE_")"
"RTN","PXRMEXLD",203,0)
 ..S ^TMP("PXRMEXLD",$J,NLINE,0)=$J("",12+$L(SEP))_DTXT
"RTN","PXRMEXLD",204,0)
 ..S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",205,0)
 Q
"RTN","PXRMEXLD",206,0)
 ;
"RTN","PXRMEXLD",207,0)
 ;Save details of dialog components for display
"RTN","PXRMEXLD",208,0)
 ;---------------------------------------------
"RTN","PXRMEXLD",209,0)
DCMP(DLG,LEV) ;
"RTN","PXRMEXLD",210,0)
 N DDATA,DDLG,DEND,DNAM,DSEQ,DSTRT,IND,JND
"RTN","PXRMEXLD",211,0)
 S DSEQ=0
"RTN","PXRMEXLD",212,0)
 F  S DSEQ=$O(^TMP("PXRMEXTMP",$J,"DMAP",DLG,DSEQ)) Q:'DSEQ  D
"RTN","PXRMEXLD",213,0)
 .S DDATA=^TMP("PXRMEXTMP",$J,"DMAP",DLG,DSEQ)
"RTN","PXRMEXLD",214,0)
 .S DNAM=$P(DDATA,U),DSTRT=$P(DDATA,U,2),DEND=$P(DDATA,U,3) Q:DNAM=""
"RTN","PXRMEXLD",215,0)
 .S IND=$P(DDATA,U,4),JND=$P(DDATA,U,5)
"RTN","PXRMEXLD",216,0)
 .;Check if this component has been replaced
"RTN","PXRMEXLD",217,0)
 .S DREP=$G(PXRMNMCH(FILENUM,DNAM)) I DREP=DNAM S DREP=""
"RTN","PXRMEXLD",218,0)
 .;Save line in workfile
"RTN","PXRMEXLD",219,0)
 .D DLINE(DNAM,LEV,DSEQ) Q:DREP'=""
"RTN","PXRMEXLD",220,0)
 .;
"RTN","PXRMEXLD",221,0)
 .;Process any sub-components
"RTN","PXRMEXLD",222,0)
 .I $D(^TMP("PXRMEXTMP",$J,"DMAP",DNAM)) D DCMP(DNAM,LEV_DSEQ_".")
"RTN","PXRMEXLD",223,0)
 .;Extra line feed
"RTN","PXRMEXLD",224,0)
 .I LEV="" D
"RTN","PXRMEXLD",225,0)
 ..S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLD",226,0)
 ..S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",227,0)
 Q
"RTN","PXRMEXLD",228,0)
 ;
"RTN","PXRMEXLD",229,0)
 ;Rebuild string in ascending or descending order
"RTN","PXRMEXLD",230,0)
 ;-----------------------------------------------
"RTN","PXRMEXLD",231,0)
ORDER(STRING,ORDER) ;
"RTN","PXRMEXLD",232,0)
 N ARRAY,ITEM,CNT
"RTN","PXRMEXLD",233,0)
 F CNT=1:1 S ITEM=$P(STRING,",",CNT) Q:'ITEM  S ARRAY(ITEM)=""
"RTN","PXRMEXLD",234,0)
 K STRING
"RTN","PXRMEXLD",235,0)
 F CNT=1:1 S ITEM=$O(ARRAY(ITEM),ORDER) Q:'ITEM  D
"RTN","PXRMEXLD",236,0)
 .S $P(STRING,",",CNT)=ITEM
"RTN","PXRMEXLD",237,0)
 Q
"RTN","PXRMEXLD",238,0)
 ;
"RTN","PXRMEXLD",239,0)
 ;Check if used by other dialogs
"RTN","PXRMEXLD",240,0)
 ;------------------------------
"RTN","PXRMEXLD",241,0)
OTHER(NAME,LIST) ;
"RTN","PXRMEXLD",242,0)
 N DDATA,DIEN,DNAME,DTYP,IEN
"RTN","PXRMEXLD",243,0)
 S IEN=$O(^PXRMD(801.41,"B",NAME,0)) Q:'IEN
"RTN","PXRMEXLD",244,0)
 ;Check if used by other dialogs
"RTN","PXRMEXLD",245,0)
 I '$D(^PXRMD(801.41,"AD",IEN)) Q
"RTN","PXRMEXLD",246,0)
 ;Build list of dialogs using this component
"RTN","PXRMEXLD",247,0)
 S DIEN=0
"RTN","PXRMEXLD",248,0)
 F  S DIEN=$O(^PXRMD(801.41,"AD",IEN,DIEN)) Q:'DIEN  D
"RTN","PXRMEXLD",249,0)
 .S DDATA=$G(^PXRMD(801.41,DIEN,0)) Q:DDATA=""
"RTN","PXRMEXLD",250,0)
 .S DNAME=$P(DDATA,U),DTYP=$P(DDATA,U,4) Q:DNAME=""
"RTN","PXRMEXLD",251,0)
 .;Include only dialogs that are not part of this reminder dialog
"RTN","PXRMEXLD",252,0)
 .I $D(^TMP("PXRMEXTMP",$J,"DMAP",DNAME)) Q
"RTN","PXRMEXLD",253,0)
 .S LIST(DNAME)=DTYP
"RTN","PXRMEXLD",254,0)
 Q
"RTN","PXRMEXLD",255,0)
 ;
"RTN","PXRMEXLD",256,0)
 ;Validate sequence numbers
"RTN","PXRMEXLD",257,0)
 ;-------------------------
"RTN","PXRMEXLD",258,0)
VALID(STRING) ;
"RTN","PXRMEXLD",259,0)
 N CNT,FOUND,OK
"RTN","PXRMEXLD",260,0)
 S FOUND=0,OK=1
"RTN","PXRMEXLD",261,0)
 F CNT=1:1 S SEL=$P(STRING,",",CNT) Q:'SEL  D
"RTN","PXRMEXLD",262,0)
 .;Invalid selection
"RTN","PXRMEXLD",263,0)
 .I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("SEL",SEL))) D  Q
"RTN","PXRMEXLD",264,0)
 ..S OK=0 W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMEXLD",265,0)
 .S FOUND=1
"RTN","PXRMEXLD",266,0)
 Q:OK&FOUND 1
"RTN","PXRMEXLD",267,0)
 Q 0
"RTN","PXRMEXLD",268,0)
 ;
"RTN","PXRMEXLD",269,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM EXCH SELECT DIALOG",0))_U_"1:"_VALMCNT
"RTN","PXRMEXLD",270,0)
 S XQORM("A")="Select Action: "
"RTN","PXRMEXLD",271,0)
 Q
"RTN","PXRMEXLD",272,0)
 ;
"RTN","PXRMEXLD",273,0)
XSEL ;PXRM EXCH SELECT DIALOG validation
"RTN","PXRMEXLD",274,0)
 N ALL,CNT,ERR,IEN,IND,PXRMDONE,SELECT,SEL
"RTN","PXRMEXLD",275,0)
 S ALL="",PXRMDONE=0,PXRMBG=$G(VALMBG)
"RTN","PXRMEXLD",276,0)
 ;Invalid selection
"RTN","PXRMEXLD",277,0)
 S SELECT=$P(XQORNOD(0),"=",2) I '$$VALID(SELECT) S VALMBCK="R" Q
"RTN","PXRMEXLD",278,0)
 ;
"RTN","PXRMEXLD",279,0)
 ;Sort the SELECTION into reverse order
"RTN","PXRMEXLD",280,0)
 D ORDER(.SELECT,-1)
"RTN","PXRMEXLD",281,0)
 ;
"RTN","PXRMEXLD",282,0)
 ;Lock the file
"RTN","PXRMEXLD",283,0)
 I '$$LOCK^PXRMEXID S VALMBCK="R" Q
"RTN","PXRMEXLD",284,0)
 ;
"RTN","PXRMEXLD",285,0)
 ;Install dialog component(s)
"RTN","PXRMEXLD",286,0)
 S CNT=0
"RTN","PXRMEXLD",287,0)
 F CNT=1:1 S SEL=$P(SELECT,",",CNT) Q:'SEL  D  Q:PXRMDONE
"RTN","PXRMEXLD",288,0)
 .D INSCOM^PXRMEXID(SEL,0)
"RTN","PXRMEXLD",289,0)
 ;
"RTN","PXRMEXLD",290,0)
 ;Unlock file
"RTN","PXRMEXLD",291,0)
 D UNLOCK^PXRMEXID
"RTN","PXRMEXLD",292,0)
 ;
"RTN","PXRMEXLD",293,0)
 ;
"RTN","PXRMEXLD",294,0)
 ;Rebuild Workfile
"RTN","PXRMEXLD",295,0)
 D DISP^PXRMEXLD(PXRMMODE)
"RTN","PXRMEXLD",296,0)
 ;
"RTN","PXRMEXLD",297,0)
 ;Refresh
"RTN","PXRMEXLD",298,0)
 S VALMBCK="R" I $D(PXRMBG) S VALMBG=PXRMBG
"RTN","PXRMEXLD",299,0)
 Q
"RTN","PXRMEXLI")
0^13^B19848962
"RTN","PXRMEXLI",1,0)
PXRMEXLI ; SLC/PKR - List Manager routines for repository entry install. ;06/18/2001
"RTN","PXRMEXLI",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXLI",3,0)
 ;
"RTN","PXRMEXLI",4,0)
 ;======================================================================
"RTN","PXRMEXLI",5,0)
INSALL ;Install all components in a repository entry.
"RTN","PXRMEXLI",6,0)
 N IND,INSTALL
"RTN","PXRMEXLI",7,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXLI",8,0)
 ;Set the install date and time.
"RTN","PXRMEXLI",9,0)
 S ^TMP("PXRMEXIA",$J,"DT")=$$NOW^XLFDT
"RTN","PXRMEXLI",10,0)
 ;Initialize the name change storage.
"RTN","PXRMEXLI",11,0)
 K PXRMNMCH
"RTN","PXRMEXLI",12,0)
 S (IND,INSTALL)=0
"RTN","PXRMEXLI",13,0)
 F  S IND=$O(^TMP("PXRMEXLC",$J,"SEL",IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMEXLI",14,0)
 . D INSCOM(IND,.INSTALL)
"RTN","PXRMEXLI",15,0)
 ;
"RTN","PXRMEXLI",16,0)
 ;If anything was installed rebuild the display.
"RTN","PXRMEXLI",17,0)
 I INSTALL D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXLI",18,0)
 ;
"RTN","PXRMEXLI",19,0)
 ;Save the install history in the repository.
"RTN","PXRMEXLI",20,0)
 D SAVHIST^PXRMEXU1
"RTN","PXRMEXLI",21,0)
 Q
"RTN","PXRMEXLI",22,0)
 ;
"RTN","PXRMEXLI",23,0)
 ;======================================================================
"RTN","PXRMEXLI",24,0)
INSCOM(IND,INSTALL) ;Install component IND.
"RTN","PXRMEXLI",25,0)
 ;PXRMRIEN is not passed because this is invoked by the ListManger
"RTN","PXRMEXLI",26,0)
 ;action to install a repository entry.
"RTN","PXRMEXLI",27,0)
 N ACTION,ATTR,END,EXISTS,FIELDNUM,FILENUM,IND120,JND120,NEWPT01
"RTN","PXRMEXLI",28,0)
 N PT01,RTN,START,TEMP,TEMP0
"RTN","PXRMEXLI",29,0)
 S TEMP=^TMP("PXRMEXLC",$J,"SEL",IND)
"RTN","PXRMEXLI",30,0)
 S FILENUM=$P(TEMP,U,1)
"RTN","PXRMEXLI",31,0)
 S EXISTS=$P(TEMP,U,4)
"RTN","PXRMEXLI",32,0)
 ;Dialogs use their own installation screen.
"RTN","PXRMEXLI",33,0)
 I FILENUM=801.41 D  Q
"RTN","PXRMEXLI",34,0)
 . D START^PXRMEXLD
"RTN","PXRMEXLI",35,0)
 . S VALMBCK="R"
"RTN","PXRMEXLI",36,0)
 S IND120=$P(TEMP,U,2)
"RTN","PXRMEXLI",37,0)
 S JND120=$P(TEMP,U,3)
"RTN","PXRMEXLI",38,0)
 S TEMP=^PXD(811.8,PXRMRIEN,120,IND120,1,JND120,0)
"RTN","PXRMEXLI",39,0)
 S START=$P(TEMP,U,2)
"RTN","PXRMEXLI",40,0)
 S END=$P(TEMP,U,3)
"RTN","PXRMEXLI",41,0)
 S TEMP=^PXD(811.8,PXRMRIEN,100,START,0)
"RTN","PXRMEXLI",42,0)
 ;Go to full screen mode.
"RTN","PXRMEXLI",43,0)
 D FULL^VALM1
"RTN","PXRMEXLI",44,0)
 I ((FILENUM=0)!(FILENUM=811.4)),DUZ(0)'="@" D  Q
"RTN","PXRMEXLI",45,0)
 . I FILENUM=0 W !,"Only programmers can install routines."
"RTN","PXRMEXLI",46,0)
 . I FILENUM=811.4 W !,"Only programmers can install Reminder Computed Findings."
"RTN","PXRMEXLI",47,0)
 . H 2
"RTN","PXRMEXLI",48,0)
 . S VALMBCK="R"
"RTN","PXRMEXLI",49,0)
 I FILENUM=0 D
"RTN","PXRMEXLI",50,0)
 . D RTNLD^PXRMEXIC(PXRMRIEN,START,END,.ATTR,.RTN)
"RTN","PXRMEXLI",51,0)
 . S ACTION=$$GETRACT^PXRMEXCF(.ATTR,.NEWNAME,.PXRMNMCH,.RTN,EXISTS)
"RTN","PXRMEXLI",52,0)
 .;Save what was done for the installation summary.
"RTN","PXRMEXLI",53,0)
 . S ^TMP("PXRMEXIA",$J,IND,"ROUTINE",ATTR("NAME"),ACTION)=NEWNAME
"RTN","PXRMEXLI",54,0)
 E  D
"RTN","PXRMEXLI",55,0)
 .;Make sure we have the .01, some files have .001.
"RTN","PXRMEXLI",56,0)
 . S TEMP0=$P(TEMP,";",3)
"RTN","PXRMEXLI",57,0)
 . S FIELDNUM=$P(TEMP0,"~",1)
"RTN","PXRMEXLI",58,0)
 . I FIELDNUM=.001 S TEMP=^PXD(811.8,PXRMRIEN,100,(START+1),0)
"RTN","PXRMEXLI",59,0)
 . S PT01=$P(TEMP,"~",2)
"RTN","PXRMEXLI",60,0)
 . D SETATTR^PXRMEXFI(.ATTR,FILENUM)
"RTN","PXRMEXLI",61,0)
 . S ACTION=$$GETFACT^PXRMEXFI(PT01,.ATTR,.NEWPT01,.PXRMNMCH,EXISTS)
"RTN","PXRMEXLI",62,0)
 .;Save what was done for the installation summary.
"RTN","PXRMEXLI",63,0)
 . S ^TMP("PXRMEXIA",$J,IND,ATTR("FILE NAME"),ATTR("PT01"),ACTION)=NEWPT01
"RTN","PXRMEXLI",64,0)
 ;If the ACTION is Quit then quit the entire install.
"RTN","PXRMEXLI",65,0)
 I ACTION="Q" S PXRMDONE=1 Q
"RTN","PXRMEXLI",66,0)
 ;If the ACTION is Skip then skip this component.
"RTN","PXRMEXLI",67,0)
 I ACTION="S" S VALMBCK="R" Q
"RTN","PXRMEXLI",68,0)
 ;If the ACTION is rePlace then skip this component.
"RTN","PXRMEXLI",69,0)
 I ACTION="P" S VALMBCK="R" Q
"RTN","PXRMEXLI",70,0)
 ;Install this component.
"RTN","PXRMEXLI",71,0)
 I FILENUM=0 D
"RTN","PXRMEXLI",72,0)
 . S NEWPT01=$P($G(PXRMNMCH(ATTR("FILE NUMBER"),ATTR("NAME"))),"~",2)
"RTN","PXRMEXLI",73,0)
 . I NEWPT01="" S NEWPT01=ATTR("NAME")
"RTN","PXRMEXLI",74,0)
 . D RTNSAVE^PXRMEXIC(.RTN,NEWPT01)
"RTN","PXRMEXLI",75,0)
 . S INSTALL=1
"RTN","PXRMEXLI",76,0)
 E  D
"RTN","PXRMEXLI",77,0)
 . D FILE^PXRMEXIC(PXRMRIEN,IND120,JND120,ACTION,.ATTR,.PXRMNMCH)
"RTN","PXRMEXLI",78,0)
 . S INSTALL=1
"RTN","PXRMEXLI",79,0)
 S VALMBCK="R"
"RTN","PXRMEXLI",80,0)
 Q
"RTN","PXRMEXLI",81,0)
 ;
"RTN","PXRMEXLI",82,0)
 ;======================================================================
"RTN","PXRMEXLI",83,0)
INSSEL ;Get a list of components to install.
"RTN","PXRMEXLI",84,0)
 N IND,INSTALL,VALMBG,VALMLST,VALMY
"RTN","PXRMEXLI",85,0)
 ;
"RTN","PXRMEXLI",86,0)
 S VALMBG=1,VALMLST=+$O(^TMP("PXRMEXLC",$J,"IDX",""),-1)
"RTN","PXRMEXLI",87,0)
 ;
"RTN","PXRMEXLI",88,0)
 ;Get the list to install.
"RTN","PXRMEXLI",89,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEXLI",90,0)
 ;If there is no list quit.
"RTN","PXRMEXLI",91,0)
 I '$D(VALMY) Q
"RTN","PXRMEXLI",92,0)
 ;
"RTN","PXRMEXLI",93,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXLI",94,0)
 ;Set the install date and time.
"RTN","PXRMEXLI",95,0)
 S ^TMP("PXRMEXIA",$J,"DT")=$$NOW^XLFDT
"RTN","PXRMEXLI",96,0)
 ;
"RTN","PXRMEXLI",97,0)
 ;Initialize the name change storage.
"RTN","PXRMEXLI",98,0)
 K PXRMNMCH
"RTN","PXRMEXLI",99,0)
 S (IND,INSTALL)=0
"RTN","PXRMEXLI",100,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMEXLI",101,0)
 .D INSCOM(IND,.INSTALL)
"RTN","PXRMEXLI",102,0)
 ;
"RTN","PXRMEXLI",103,0)
 ;If anything was installed rebuild the display.
"RTN","PXRMEXLI",104,0)
 I INSTALL D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXLI",105,0)
 ;
"RTN","PXRMEXLI",106,0)
 ;Save the install history in the repository.
"RTN","PXRMEXLI",107,0)
 D SAVHIST^PXRMEXU1
"RTN","PXRMEXLI",108,0)
 Q
"RTN","PXRMEXLI",109,0)
 ;
"RTN","PXRMEXLI",110,0)
 ;======================================================================
"RTN","PXRMEXLI",111,0)
INSTALL ;Install the repository entry PXRMRIEN.
"RTN","PXRMEXLI",112,0)
 N IEN,IND,VALMY
"RTN","PXRMEXLI",113,0)
 ;Make sure the component list exists for this entry. PXRMRIEN is
"RTN","PXRMEXLI",114,0)
 ;set in INSTALL^PXRMEXLR.
"RTN","PXRMEXLI",115,0)
 I '$D(^PXD(811.8,PXRMRIEN,120)) D CLIST^PXRMEXU1(.PXRMRIEN)
"RTN","PXRMEXLI",116,0)
 I PXRMRIEN=-1 Q
"RTN","PXRMEXLI",117,0)
 ;Format the component list for display.
"RTN","PXRMEXLI",118,0)
 D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXLI",119,0)
 S VALMCNT=$O(^TMP("PXRMEXLC",$J,"IDX"),-1)
"RTN","PXRMEXLI",120,0)
 S VALMBCK="R"
"RTN","PXRMEXLI",121,0)
 D XQORM
"RTN","PXRMEXLI",122,0)
 Q
"RTN","PXRMEXLI",123,0)
 ;
"RTN","PXRMEXLI",124,0)
 ;Exit action added to PXRM EXCH INSTALL MENU
"RTN","PXRMEXLI",125,0)
PEXIT ;PXRM EXCH INSTALL MENU protocol exit code
"RTN","PXRMEXLI",126,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEXLI",127,0)
 ;Reset after page up/down etc
"RTN","PXRMEXLI",128,0)
 D XQORM
"RTN","PXRMEXLI",129,0)
 Q
"RTN","PXRMEXLI",130,0)
 ;
"RTN","PXRMEXLI",131,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM EXCH SELECT COMPONENT",0))_U_"1:"_VALMCNT
"RTN","PXRMEXLI",132,0)
 S XQORM("A")="Select Action: "
"RTN","PXRMEXLI",133,0)
 Q
"RTN","PXRMEXLI",134,0)
 ;
"RTN","PXRMEXLI",135,0)
XSEL ;PXRM EXCH SELECT COMPONENT validation
"RTN","PXRMEXLI",136,0)
 N CNT,SELECT,SEL,PXRMDONE
"RTN","PXRMEXLI",137,0)
 S SELECT=$P(XQORNOD(0),"=",2)
"RTN","PXRMEXLI",138,0)
 I '$$VALID^PXRMEXLD(SELECT) S VALMBCK="R" Q
"RTN","PXRMEXLI",139,0)
 ;
"RTN","PXRMEXLI",140,0)
 ;Sort selections into ascending sequence order
"RTN","PXRMEXLI",141,0)
 D ORDER^PXRMEXLD(.SELECT,1)
"RTN","PXRMEXLI",142,0)
 ;
"RTN","PXRMEXLI",143,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXLI",144,0)
 ;Set the install date and time.
"RTN","PXRMEXLI",145,0)
 S ^TMP("PXRMEXIA",$J,"DT")=$$NOW^XLFDT
"RTN","PXRMEXLI",146,0)
 ;
"RTN","PXRMEXLI",147,0)
 ;Install selected component
"RTN","PXRMEXLI",148,0)
 N INSTALL
"RTN","PXRMEXLI",149,0)
 S INSTALL=0,CNT=0,PXRMDONE=0
"RTN","PXRMEXLI",150,0)
 F CNT=1:1 S SEL=$P(SELECT,",",CNT) Q:'SEL  D  Q:PXRMDONE
"RTN","PXRMEXLI",151,0)
 .D INSCOM(SEL,.INSTALL)
"RTN","PXRMEXLI",152,0)
 ;
"RTN","PXRMEXLI",153,0)
 ;If anything was installed rebuild the display.
"RTN","PXRMEXLI",154,0)
 I INSTALL D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXLI",155,0)
 ;
"RTN","PXRMEXLI",156,0)
 ;Save the install history in the repository.
"RTN","PXRMEXLI",157,0)
 D SAVHIST^PXRMEXU1
"RTN","PXRMEXLI",158,0)
 ;
"RTN","PXRMEXLI",159,0)
 ;Clear any renames made in the last session
"RTN","PXRMEXLI",160,0)
 K PXRMNMCH
"RTN","PXRMEXLI",161,0)
 Q
"RTN","PXRMEXLM")
0^15^B50803667
"RTN","PXRMEXLM",1,0)
PXRMEXLM ; SLC/PKR/PJH - Clinical Reminder Exchange List Manager routines. ;06/15/2001
"RTN","PXRMEXLM",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXLM",3,0)
 ;
"RTN","PXRMEXLM",4,0)
 ;======================================================================
"RTN","PXRMEXLM",5,0)
CRE ;Create a packed reminder and store it in the repository.
"RTN","PXRMEXLM",6,0)
 N RTP,SUCCESS,TMPIND
"RTN","PXRMEXLM",7,0)
 S RTP=$$GETREM^PXRMEXPU("pack")
"RTN","PXRMEXLM",8,0)
 S TMPIND="PXRMEXPR"
"RTN","PXRMEXLM",9,0)
 D PACK^PXRMEXPR(RTP,TMPIND)
"RTN","PXRMEXLM",10,0)
 D STOREPR^PXRMEXU2(.SUCCESS,RTP,TMPIND)
"RTN","PXRMEXLM",11,0)
 I SUCCESS D
"RTN","PXRMEXLM",12,0)
 . S VALMHDR(1)="Packed reminder for "_$P(RTP,U,2)
"RTN","PXRMEXLM",13,0)
 . S VALMHDR(2)="was saved in Exchange File."
"RTN","PXRMEXLM",14,0)
 . D BLDLIST^PXRMEXLC(1)
"RTN","PXRMEXLM",15,0)
 E  D
"RTN","PXRMEXLM",16,0)
 . S VALMHDR(1)="Creation of packed reminder for "_$P(RTP,U,2)
"RTN","PXRMEXLM",17,0)
 . S VALMHDR(2)="failed; it was not saved!"
"RTN","PXRMEXLM",18,0)
 ;
"RTN","PXRMEXLM",19,0)
 S VALMBCK="R"
"RTN","PXRMEXLM",20,0)
 Q
"RTN","PXRMEXLM",21,0)
 ;
"RTN","PXRMEXLM",22,0)
 ;======================================================================
"RTN","PXRMEXLM",23,0)
DEFINQ ;Reminder definition inquiry.
"RTN","PXRMEXLM",24,0)
 N GBL,IEN,PXRMROOT,VALMCNT
"RTN","PXRMEXLM",25,0)
 S GBL="^TMP(""PXRMRINQ"",$J)"
"RTN","PXRMEXLM",26,0)
 S GBL=$NA(@GBL)
"RTN","PXRMEXLM",27,0)
 S PXRMROOT="^PXD(811.9,"
"RTN","PXRMEXLM",28,0)
 S IEN=$$SELECT^PXRMINQ(PXRMROOT,"Select Reminder Definition: ","")
"RTN","PXRMEXLM",29,0)
 S IEN=$P(IEN,U,1)
"RTN","PXRMEXLM",30,0)
 I IEN=-1 S VALMBCK="R" Q
"RTN","PXRMEXLM",31,0)
 K ^TMP("PXRMRINQ",$J)
"RTN","PXRMEXLM",32,0)
 D REMVAR^PXRMINQ(GBL,IEN)
"RTN","PXRMEXLM",33,0)
 S VALMCNT=$O(^TMP("PXRMRINQ",$J,""),-1)
"RTN","PXRMEXLM",34,0)
 D EN^VALM("PXRM EX DEFINITION INQUIRY")
"RTN","PXRMEXLM",35,0)
 K ^TMP("PXRMRINQ",$J)
"RTN","PXRMEXLM",36,0)
 S VALMBCK="R"
"RTN","PXRMEXLM",37,0)
 Q
"RTN","PXRMEXLM",38,0)
 ;
"RTN","PXRMEXLM",39,0)
 ;======================================================================
"RTN","PXRMEXLM",40,0)
EN ;Main entry point for PXRM EXCHANGE
"RTN","PXRMEXLM",41,0)
 N PXRMDONE,PXRMNMCH
"RTN","PXRMEXLM",42,0)
 ;PXRMDONE is set to true if the user enters an action of Quit.
"RTN","PXRMEXLM",43,0)
 S PXRMDONE=0
"RTN","PXRMEXLM",44,0)
 ;PXRMNMCH is used to store name change information. If a finding
"RTN","PXRMEXLM",45,0)
 ;is copied to a new name or is replaced by another finding the
"RTN","PXRMEXLM",46,0)
 ;information is stored here. It is used when installing definitions
"RTN","PXRMEXLM",47,0)
 ;or dialogs so they use the new or replaced finding.
"RTN","PXRMEXLM",48,0)
 N VALMBCK,VALMSG,X,XMZ
"RTN","PXRMEXLM",49,0)
 S X="IORESET"
"RTN","PXRMEXLM",50,0)
 D ENDR^%ZISS
"RTN","PXRMEXLM",51,0)
 D BLDLIST^PXRMEXLC(0)
"RTN","PXRMEXLM",52,0)
 D EN^VALM("PXRM EX REMINDER EXCHANGE")
"RTN","PXRMEXLM",53,0)
 W IORESET
"RTN","PXRMEXLM",54,0)
 D KILL^%ZISS
"RTN","PXRMEXLM",55,0)
 Q
"RTN","PXRMEXLM",56,0)
 ;
"RTN","PXRMEXLM",57,0)
 ;======================================================================
"RTN","PXRMEXLM",58,0)
ENTRY ;Entry code
"RTN","PXRMEXLM",59,0)
 D XQORM
"RTN","PXRMEXLM",60,0)
 Q
"RTN","PXRMEXLM",61,0)
 ;
"RTN","PXRMEXLM",62,0)
 ;======================================================================
"RTN","PXRMEXLM",63,0)
EXIT ;Exit code
"RTN","PXRMEXLM",64,0)
 K ^TMP("PXRMEXDH",$J)
"RTN","PXRMEXLM",65,0)
 K ^TMP("PXRMEXHF",$J)
"RTN","PXRMEXLM",66,0)
 K ^TMP("PXRMEXFND",$J)
"RTN","PXRMEXLM",67,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXLM",68,0)
 K ^TMP("PXRMEXID",$J)
"RTN","PXRMEXLM",69,0)
 K ^TMP("PXRMEXIH",$J)
"RTN","PXRMEXLM",70,0)
 K ^TMP("PXRMEXLC",$J)
"RTN","PXRMEXLM",71,0)
 K ^TMP("PXRMEXLD",$J)
"RTN","PXRMEXLM",72,0)
 K ^TMP("PXRMEXLHF",$J)
"RTN","PXRMEXLM",73,0)
 K ^TMP("PXRMEXLMM",$J)
"RTN","PXRMEXLM",74,0)
 K ^TMP("PXRMEXLR",$J)
"RTN","PXRMEXLM",75,0)
 K ^TMP("PXRMEXMH",$J)
"RTN","PXRMEXLM",76,0)
 K ^TMP("PXRMEXMM",$J)
"RTN","PXRMEXLM",77,0)
 K ^TMP("PXRMEXRI",$J)
"RTN","PXRMEXLM",78,0)
 K ^TMP("PXRMEXTMP",$J)
"RTN","PXRMEXLM",79,0)
 K ^TMP("PXRMEXTXT",$J)
"RTN","PXRMEXLM",80,0)
 D CLEAN^VALM10
"RTN","PXRMEXLM",81,0)
 D FULL^VALM1
"RTN","PXRMEXLM",82,0)
 S VALMBCK="Q"
"RTN","PXRMEXLM",83,0)
 Q
"RTN","PXRMEXLM",84,0)
 ;
"RTN","PXRMEXLM",85,0)
 ;======================================================================
"RTN","PXRMEXLM",86,0)
HDR ; Header code
"RTN","PXRMEXLM",87,0)
 S VALMHDR(1)="Exchange File Entries."
"RTN","PXRMEXLM",88,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEXLM",89,0)
 Q
"RTN","PXRMEXLM",90,0)
 ;
"RTN","PXRMEXLM",91,0)
 ;======================================================================
"RTN","PXRMEXLM",92,0)
HELP ;Help code
"RTN","PXRMEXLM",93,0)
 ;The following variables have to be newed so that when we return
"RTN","PXRMEXLM",94,0)
 ;from the help display they will be defined.
"RTN","PXRMEXLM",95,0)
 N ORU,ORUPRMT,XQORM
"RTN","PXRMEXLM",96,0)
 D EN^VALM("PXRM EX MAIN HELP")
"RTN","PXRMEXLM",97,0)
 Q
"RTN","PXRMEXLM",98,0)
 ;
"RTN","PXRMEXLM",99,0)
 ;======================================================================
"RTN","PXRMEXLM",100,0)
INIT ;Init
"RTN","PXRMEXLM",101,0)
 S VALMCNT=0
"RTN","PXRMEXLM",102,0)
 Q
"RTN","PXRMEXLM",103,0)
 ;
"RTN","PXRMEXLM",104,0)
 ;======================================================================
"RTN","PXRMEXLM",105,0)
LDHF ;Load host file into repository.
"RTN","PXRMEXLM",106,0)
 N IND,FILE,PATH,RBL,SUCCESS,TEMP
"RTN","PXRMEXLM",107,0)
 ;Select the host file to load.
"RTN","PXRMEXLM",108,0)
 D CLEAR^VALM1
"RTN","PXRMEXLM",109,0)
 S TEMP=$$GETEHF^PXRMEXHF
"RTN","PXRMEXLM",110,0)
 I TEMP="" S VALMBCK="R" Q
"RTN","PXRMEXLM",111,0)
 S PATH=$P(TEMP,U,1)
"RTN","PXRMEXLM",112,0)
 S FILE=$P(TEMP,U,2)
"RTN","PXRMEXLM",113,0)
 D LHF^PXRMEXHF(.SUCCESS,PATH,FILE)
"RTN","PXRMEXLM",114,0)
 S RBL=SUCCESS
"RTN","PXRMEXLM",115,0)
 I SUCCESS D
"RTN","PXRMEXLM",116,0)
 . S VALMHDR(1)="Host file "_PATH_FILE_" successfully loaded."
"RTN","PXRMEXLM",117,0)
 E  D
"RTN","PXRMEXLM",118,0)
 . S VALMHDR(1)="There were problems loading host file "_PATH_FILE_"."
"RTN","PXRMEXLM",119,0)
 . S TEMP=""
"RTN","PXRMEXLM",120,0)
 . S IND=""
"RTN","PXRMEXLM",121,0)
 . F  S IND=$O(SUCCESS(IND)) Q:+IND=0  D
"RTN","PXRMEXLM",122,0)
 .. I SUCCESS(IND) S RBL=1 Q
"RTN","PXRMEXLM",123,0)
 .. I +$O(SUCCESS(IND))=0 S TEMP=TEMP_IND
"RTN","PXRMEXLM",124,0)
 .. E  S TEMP=TEMP_IND_", "
"RTN","PXRMEXLM",125,0)
 . S VALMHDR(2)="Entries with problems were "_TEMP_"."
"RTN","PXRMEXLM",126,0)
 ;Rebuild the list for display.
"RTN","PXRMEXLM",127,0)
 D BLDLIST^PXRMEXLC(RBL)
"RTN","PXRMEXLM",128,0)
 S VALMBCK="R"
"RTN","PXRMEXLM",129,0)
 Q
"RTN","PXRMEXLM",130,0)
 ;
"RTN","PXRMEXLM",131,0)
 ;======================================================================
"RTN","PXRMEXLM",132,0)
LDMM ;Load MailMan message into repository.
"RTN","PXRMEXLM",133,0)
 N IND,RBL,TEMP,XMZ
"RTN","PXRMEXLM",134,0)
 ;Select the MailMan message to load.
"RTN","PXRMEXLM",135,0)
 D CLEAR^VALM1
"RTN","PXRMEXLM",136,0)
 S XMZ=$$GETMESSN^PXRMEXMM
"RTN","PXRMEXLM",137,0)
 I XMZ=-1 W !,"No packed reminder definitions selected/found!" H 2
"RTN","PXRMEXLM",138,0)
 I +XMZ'>0 S VALMBCK="R" Q
"RTN","PXRMEXLM",139,0)
 D LMM^PXRMEXMM(.SUCCESS,XMZ)
"RTN","PXRMEXLM",140,0)
 S RBL=SUCCESS
"RTN","PXRMEXLM",141,0)
 I SUCCESS D
"RTN","PXRMEXLM",142,0)
 . S VALMHDR(1)="MailMan message "_XMZ_" successfully loaded."
"RTN","PXRMEXLM",143,0)
 .;Rebuild the list for display.
"RTN","PXRMEXLM",144,0)
 . D BLDLIST^PXRMEXLC(1)
"RTN","PXRMEXLM",145,0)
 E  D
"RTN","PXRMEXLM",146,0)
 . S VALMHDR(1)="There were problems loading MailMan message "_XMZ_"."
"RTN","PXRMEXLM",147,0)
 . S TEMP=""
"RTN","PXRMEXLM",148,0)
 . S IND=""
"RTN","PXRMEXLM",149,0)
 . F  S IND=$O(SUCCESS(IND)) Q:+IND=0  D
"RTN","PXRMEXLM",150,0)
 .. I SUCCESS(IND) S RBL=1 Q
"RTN","PXRMEXLM",151,0)
 .. I +$O(SUCCESS(IND))=0 S TEMP=TEMP_IND
"RTN","PXRMEXLM",152,0)
 .. E  S TEMP=TEMP_IND_", "
"RTN","PXRMEXLM",153,0)
 . S VALMHDR(2)="Entries with problems were "_TEMP_"."
"RTN","PXRMEXLM",154,0)
 ;Rebuild the list for display.
"RTN","PXRMEXLM",155,0)
 D BLDLIST^PXRMEXLC(RBL)
"RTN","PXRMEXLM",156,0)
 S VALMBCK="R"
"RTN","PXRMEXLM",157,0)
 Q
"RTN","PXRMEXLM",158,0)
 ;
"RTN","PXRMEXLM",159,0)
 ;======================================================================
"RTN","PXRMEXLM",160,0)
LRDEF ;List the name and print name of all reminder definitions.
"RTN","PXRMEXLM",161,0)
 N VALMCNT
"RTN","PXRMEXLM",162,0)
 I $D(^TMP("PXRMEXLD",$J,"VALMCNT")) S VALMCNT=^TMP("PXRMEXLD",$J,"VALMCNT")
"RTN","PXRMEXLM",163,0)
 E  D
"RTN","PXRMEXLM",164,0)
 . N ARO,DEFLIST
"RTN","PXRMEXLM",165,0)
 . S ARO=$$QUERYAO^PXRMLIST
"RTN","PXRMEXLM",166,0)
 . S ^TMP("PXRMEXLD",$J,"ARO")=ARO
"RTN","PXRMEXLM",167,0)
 . D RDEF^PXRMLIST(.DEFLIST,ARO)
"RTN","PXRMEXLM",168,0)
 . M ^TMP("PXRMEXLD",$J)=DEFLIST
"RTN","PXRMEXLM",169,0)
 . S VALMCNT=DEFLIST("VALMCNT")
"RTN","PXRMEXLM",170,0)
 I '$G(^TMP("PXRMEXLD",$J,"ARO")) D CHGCAP^VALM("INACTIVE","Inactive")
"RTN","PXRMEXLM",171,0)
 D EN^VALM("PXRM EX REMINDER LIST")
"RTN","PXRMEXLM",172,0)
 Q
"RTN","PXRMEXLM",173,0)
 ;
"RTN","PXRMEXLM",174,0)
 ;======================================================================
"RTN","PXRMEXLM",175,0)
PEXIT ;PXRM EXCH MENU protocol exit code
"RTN","PXRMEXLM",176,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEXLM",177,0)
 ;Reset after page up/down etc
"RTN","PXRMEXLM",178,0)
 D XQORM
"RTN","PXRMEXLM",179,0)
 Q
"RTN","PXRMEXLM",180,0)
 ;
"RTN","PXRMEXLM",181,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM EXCH SELECT ENTRY",0))_U_"1:"_VALMCNT
"RTN","PXRMEXLM",182,0)
 S XQORM("A")="Select Action: "
"RTN","PXRMEXLM",183,0)
 Q
"RTN","PXRMEXLM",184,0)
 ;
"RTN","PXRMEXLM",185,0)
XSEL ;PXRM EXCH SELECT COMPONENT validation
"RTN","PXRMEXLM",186,0)
 N SEL,PXRMRIEN
"RTN","PXRMEXLM",187,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXRMEXLM",188,0)
 ;Remove trailing ,
"RTN","PXRMEXLM",189,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXRMEXLM",190,0)
 ;Invalid selection
"RTN","PXRMEXLM",191,0)
 I SEL["," D  Q
"RTN","PXRMEXLM",192,0)
 .W $C(7),!,"Only one item number allowed." H 2
"RTN","PXRMEXLM",193,0)
 .S VALMBCK="R"
"RTN","PXRMEXLM",194,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("IDX",SEL))) D  Q
"RTN","PXRMEXLM",195,0)
 .W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMEXLM",196,0)
 .S VALMBCK="R"
"RTN","PXRMEXLM",197,0)
 ;
"RTN","PXRMEXLM",198,0)
 ;Get the repository ien.
"RTN","PXRMEXLM",199,0)
 S PXRMRIEN=^TMP("PXRMEXLR",$J,"IDX",SEL,SEL)
"RTN","PXRMEXLM",200,0)
 ;
"RTN","PXRMEXLM",201,0)
 ;Full screen mode
"RTN","PXRMEXLM",202,0)
 D FULL^VALM1
"RTN","PXRMEXLM",203,0)
 ;
"RTN","PXRMEXLM",204,0)
 ;Option to Install, Delete or Install History
"RTN","PXRMEXLM",205,0)
 N X,Y,DIR,OPTION K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXLM",206,0)
 S DIR(0)="SBM"_U_"IFE:Install Exchange File Entry;"
"RTN","PXRMEXLM",207,0)
 S DIR(0)=DIR(0)_"DFE:Delete Exchange File Entry;"
"RTN","PXRMEXLM",208,0)
 S DIR(0)=DIR(0)_"IH:Installation History;"
"RTN","PXRMEXLM",209,0)
 S DIR("A")="Select Action: "
"RTN","PXRMEXLM",210,0)
 S DIR("B")="IFE"
"RTN","PXRMEXLM",211,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMEXLM",212,0)
 S DIR("??")=U_"D HLP^PXRMEXIX(3)"
"RTN","PXRMEXLM",213,0)
 D ^DIR K DIR
"RTN","PXRMEXLM",214,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXLM",215,0)
 I $D(DTOUT)!($D(DUOUT)) S VALMBCK="R" Q
"RTN","PXRMEXLM",216,0)
 S OPTION=Y
"RTN","PXRMEXLM",217,0)
 ;
"RTN","PXRMEXLM",218,0)
 ;Install
"RTN","PXRMEXLM",219,0)
 I OPTION="IFE" D
"RTN","PXRMEXLM",220,0)
 .D EN^VALM("PXRM EX LIST COMPONENTS")
"RTN","PXRMEXLM",221,0)
 .K ^TMP("PXRMEXLC",$J)
"RTN","PXRMEXLM",222,0)
 ;
"RTN","PXRMEXLM",223,0)
 I OPTION="DFE" D
"RTN","PXRMEXLM",224,0)
 .N COUNT,DELLIST,IEN,IND,RELIST,VALMY
"RTN","PXRMEXLM",225,0)
 .S DELLIST(PXRMRIEN)=""
"RTN","PXRMEXLM",226,0)
 .D DELETE^PXRMEXU1(.DELLIST)
"RTN","PXRMEXLM",227,0)
 .;Rebuild the list for List Manager to display.
"RTN","PXRMEXLM",228,0)
 .K ^TMP("PXRMEXLR",$J)
"RTN","PXRMEXLM",229,0)
 .D RE^PXRMLIST(.RELIST,.IEN)
"RTN","PXRMEXLM",230,0)
 .M ^TMP("PXRMEXLR",$J)=RELIST
"RTN","PXRMEXLM",231,0)
 .S VALMCNT=RELIST("VALMCNT")
"RTN","PXRMEXLM",232,0)
 .F IND=1:1:VALMCNT D
"RTN","PXRMEXLM",233,0)
 ..S ^TMP("PXRMEXLR",$J,"IDX",IND,IND)=IEN(IND)
"RTN","PXRMEXLM",234,0)
 .;
"RTN","PXRMEXLM",235,0)
 .S VALMHDR(1)="Deleted 1 exchange file entry",VALMHDR(2)=" ",VALMBCK="R"
"RTN","PXRMEXLM",236,0)
 ;
"RTN","PXRMEXLM",237,0)
 I OPTION="IH" D
"RTN","PXRMEXLM",238,0)
 .N HISLIST,VALMCNT
"RTN","PXRMEXLM",239,0)
 .S HISLIST(SEL)=""
"RTN","PXRMEXLM",240,0)
 .D HISTLIST^PXRMEXLC(.HISLIST,.VALMCNT)
"RTN","PXRMEXLM",241,0)
 .D EN^VALM("PXRM EX INSTALLATION HISTORY")
"RTN","PXRMEXLM",242,0)
 .K ^TMP("PXRMEXIH",$J)
"RTN","PXRMEXLM",243,0)
 ;
"RTN","PXRMEXLM",244,0)
 S VALMBCK="R"
"RTN","PXRMEXLM",245,0)
 Q
"RTN","PXRMEXLR")
0^16^B47800679
"RTN","PXRMEXLR",1,0)
PXRMEXLR ; SLC/PKR/PJH - List Manager routines for existing repository entries. ;05/04/2001
"RTN","PXRMEXLR",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXLR",3,0)
 ;======================================================================
"RTN","PXRMEXLR",4,0)
CHF ;Create a host file containing repository entries.
"RTN","PXRMEXLR",5,0)
 N IND,FILE,LENH2,PATH,SUCCESS,TEMP,VALMY
"RTN","PXRMEXLR",6,0)
 ;Get the list to store.
"RTN","PXRMEXLR",7,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEXLR",8,0)
 ;If there is no list quit.
"RTN","PXRMEXLR",9,0)
 I '$D(VALMY) Q
"RTN","PXRMEXLR",10,0)
 ;Get the host file to use.
"RTN","PXRMEXLR",11,0)
 D CLEAR^VALM1
"RTN","PXRMEXLR",12,0)
 S TEMP=$$GETHFS^PXRMEXHF
"RTN","PXRMEXLR",13,0)
 I TEMP=0 S VALMBCK="R" Q
"RTN","PXRMEXLR",14,0)
 S PATH=$P(TEMP,U,1)
"RTN","PXRMEXLR",15,0)
 S FILE=$P(TEMP,U,2)
"RTN","PXRMEXLR",16,0)
 D CHF^PXRMEXHF(.SUCCESS,.VALMY,PATH,FILE)
"RTN","PXRMEXLR",17,0)
 S IND=""
"RTN","PXRMEXLR",18,0)
 S VALMHDR(1)="Successfully stored entries"
"RTN","PXRMEXLR",19,0)
 S VALMHDR(2)="Failed to store entries"
"RTN","PXRMEXLR",20,0)
 S LENH2=$L(VALMHDR(2))
"RTN","PXRMEXLR",21,0)
 F  S IND=$O(SUCCESS(IND)) Q:+IND=0  D
"RTN","PXRMEXLR",22,0)
 . I SUCCESS(IND) S VALMHDR(1)=VALMHDR(1)_" "_IND
"RTN","PXRMEXLR",23,0)
 . E  S VALMHDR(2)=VALMHDR(2)_" "_IND
"RTN","PXRMEXLR",24,0)
 I $L(VALMHDR(2))=LENH2 K VALMHDR(2)
"RTN","PXRMEXLR",25,0)
 S VALMBCK="R"
"RTN","PXRMEXLR",26,0)
 Q
"RTN","PXRMEXLR",27,0)
 ;
"RTN","PXRMEXLR",28,0)
 ;======================================================================
"RTN","PXRMEXLR",29,0)
CMM ;Create a MailMan message containing packed reminders.
"RTN","PXRMEXLR",30,0)
 N SUCCESS,TEMP,VALMY
"RTN","PXRMEXLR",31,0)
 ;Get the list to store.
"RTN","PXRMEXLR",32,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEXLR",33,0)
 ;If there is no list quit.
"RTN","PXRMEXLR",34,0)
 I '$D(VALMY) Q
"RTN","PXRMEXLR",35,0)
 ;Get a new message number to store the entries in.
"RTN","PXRMEXLR",36,0)
 D CMM^PXRMEXMM(.SUCCESS,.VALMY)
"RTN","PXRMEXLR",37,0)
 I $D(SUCCESS("XMZ")) S VALMHDR(1)="Successfully stored entries in message "_SUCCESS("XMZ")_"."
"RTN","PXRMEXLR",38,0)
 E  S VALMHDR(1)="Failed to store entries"
"RTN","PXRMEXLR",39,0)
 S VALMBCK="R"
"RTN","PXRMEXLR",40,0)
 Q
"RTN","PXRMEXLR",41,0)
 ;
"RTN","PXRMEXLR",42,0)
 ;======================================================================
"RTN","PXRMEXLR",43,0)
DELETE ;Get a list of repository entries and delete them.
"RTN","PXRMEXLR",44,0)
 N COUNT,DELLIST,IEN,IND,RELIST,VALMY
"RTN","PXRMEXLR",45,0)
 ;Get the list to delete.
"RTN","PXRMEXLR",46,0)
 D MIENLIST(.DELLIST)
"RTN","PXRMEXLR",47,0)
 S COUNT=+$G(DELLIST("COUNT"))
"RTN","PXRMEXLR",48,0)
 I COUNT=0 Q
"RTN","PXRMEXLR",49,0)
 D DELETE^PXRMEXU1(.DELLIST)
"RTN","PXRMEXLR",50,0)
 ;Rebuild the list for List Manager to display.
"RTN","PXRMEXLR",51,0)
 K ^TMP("PXRMEXLR",$J)
"RTN","PXRMEXLR",52,0)
 D RE^PXRMLIST(.RELIST,.IEN)
"RTN","PXRMEXLR",53,0)
 M ^TMP("PXRMEXLR",$J)=RELIST
"RTN","PXRMEXLR",54,0)
 S VALMCNT=RELIST("VALMCNT")
"RTN","PXRMEXLR",55,0)
 F IND=1:1:VALMCNT D
"RTN","PXRMEXLR",56,0)
 . S ^TMP("PXRMEXLR",$J,"IDX",IND,IND)=IEN(IND)
"RTN","PXRMEXLR",57,0)
 ;
"RTN","PXRMEXLR",58,0)
 S VALMHDR(1)="Deleted "_DELLIST("COUNT")_" Exchange File"
"RTN","PXRMEXLR",59,0)
 I COUNT>1 S VALMHDR(1)=VALMHDR(1)_" entries."
"RTN","PXRMEXLR",60,0)
 I COUNT=1 S VALMHDR(1)=VALMHDR(1)_" entry."
"RTN","PXRMEXLR",61,0)
 I COUNT=0 S VALMHDR(1)="No entries selected."
"RTN","PXRMEXLR",62,0)
 S VALMHDR(2)=" "
"RTN","PXRMEXLR",63,0)
 S VALMBCK="R"
"RTN","PXRMEXLR",64,0)
 Q
"RTN","PXRMEXLR",65,0)
 ;
"RTN","PXRMEXLR",66,0)
 ;======================================================================
"RTN","PXRMEXLR",67,0)
DELHIST ;Get a list of repository installation entries and delete them.
"RTN","PXRMEXLR",68,0)
 ;Save the original list, it contains the selected repository entries.
"RTN","PXRMEXLR",69,0)
 N VALMYO
"RTN","PXRMEXLR",70,0)
 M VALMYO=VALMY
"RTN","PXRMEXLR",71,0)
 N IHIND,IND,RIEN,TEMP,VALMY
"RTN","PXRMEXLR",72,0)
 N VALMBG,VALMLST
"RTN","PXRMEXLR",73,0)
 ;
"RTN","PXRMEXLR",74,0)
 S VALMBG=1,VALMLST=+$O(^TMP("PXRMEXIH",$J,"IDX",""),-1)
"RTN","PXRMEXLR",75,0)
 ;Get the list to delete.
"RTN","PXRMEXLR",76,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEXLR",77,0)
 ;If there is no list quit.
"RTN","PXRMEXLR",78,0)
 I '$D(VALMY) Q
"RTN","PXRMEXLR",79,0)
 S IND=""
"RTN","PXRMEXLR",80,0)
 F  S IND=$O(VALMY(IND)) Q:IND=""  D
"RTN","PXRMEXLR",81,0)
 . S TEMP=^TMP("PXRMEXIH",$J,"SEL",IND)
"RTN","PXRMEXLR",82,0)
 . S RIEN=$P(TEMP,U,1)
"RTN","PXRMEXLR",83,0)
 . S IHIND=$P(TEMP,U,2)
"RTN","PXRMEXLR",84,0)
 . D DELHIST^PXRMEXU1(RIEN,IHIND)
"RTN","PXRMEXLR",85,0)
 ;Rebuild the display list.
"RTN","PXRMEXLR",86,0)
 D HISTLIST^PXRMEXLC(.VALMYO,.VALMCNT)
"RTN","PXRMEXLR",87,0)
 S VALMBCK="R"
"RTN","PXRMEXLR",88,0)
 Q
"RTN","PXRMEXLR",89,0)
 ;
"RTN","PXRMEXLR",90,0)
 ;======================================================================
"RTN","PXRMEXLR",91,0)
EXIT ; Exit code
"RTN","PXRMEXLR",92,0)
 D CLEAN^VALM10
"RTN","PXRMEXLR",93,0)
 D FULL^VALM1
"RTN","PXRMEXLR",94,0)
 S VALMBCK="R"
"RTN","PXRMEXLR",95,0)
 K ^TMP("PXRMEXLR",$J)
"RTN","PXRMEXLR",96,0)
 Q
"RTN","PXRMEXLR",97,0)
 ;
"RTN","PXRMEXLR",98,0)
 ;======================================================================
"RTN","PXRMEXLR",99,0)
IH ;Get a list of repository entries and show their installation history.
"RTN","PXRMEXLR",100,0)
 N VALMCNT,VALMY
"RTN","PXRMEXLR",101,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEXLR",102,0)
 ;If there is no list quit.
"RTN","PXRMEXLR",103,0)
 I '$D(VALMY) Q
"RTN","PXRMEXLR",104,0)
 ;Build a history list.
"RTN","PXRMEXLR",105,0)
 D HISTLIST^PXRMEXLC(.VALMY,.VALMCNT)
"RTN","PXRMEXLR",106,0)
 D EN^VALM("PXRM EX INSTALLATION HISTORY")
"RTN","PXRMEXLR",107,0)
 K ^TMP("PXRMEXIH",$J)
"RTN","PXRMEXLR",108,0)
 S VALMBCK="R"
"RTN","PXRMEXLR",109,0)
 Q
"RTN","PXRMEXLR",110,0)
 ;
"RTN","PXRMEXLR",111,0)
 ;======================================================================
"RTN","PXRMEXLR",112,0)
INDETAIL ;Output the details of an installation.
"RTN","PXRMEXLR",113,0)
 N VALMBG,VALMCNT,VALMHDR,VALMLST,VALMY
"RTN","PXRMEXLR",114,0)
 ;
"RTN","PXRMEXLR",115,0)
 S VALMBG=1,VALMLST=+$O(^TMP("PXRMEXIH",$J,"IDX",""),-1)
"RTN","PXRMEXLR",116,0)
 ;Get the list to display.
"RTN","PXRMEXLR",117,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEXLR",118,0)
 ;If there is no list quit.
"RTN","PXRMEXLR",119,0)
 I '$D(VALMY) Q
"RTN","PXRMEXLR",120,0)
 D INDISP(.VALMY)
"RTN","PXRMEXLR",121,0)
 Q
"RTN","PXRMEXLR",122,0)
 ;
"RTN","PXRMEXLR",123,0)
 ;======================================================================
"RTN","PXRMEXLR",124,0)
INDISP(ARRAY) ;Display details list
"RTN","PXRMEXLR",125,0)
 N ACTION,CMPNT,DI,DP,ENTRY,IHIND,IND,INDEX,JND,KND
"RTN","PXRMEXLR",126,0)
 N NAME,NEWNAME,NLINE,RIEN,TEMP
"RTN","PXRMEXLR",127,0)
 K ^TMP("PXRMEXID",$J)
"RTN","PXRMEXLR",128,0)
 ;If there are no items then quit.
"RTN","PXRMEXLR",129,0)
 I '$D(ARRAY) Q
"RTN","PXRMEXLR",130,0)
 S (IND,NLINE)=0
"RTN","PXRMEXLR",131,0)
 F  S IND=$O(ARRAY(IND)) Q:IND=""  D
"RTN","PXRMEXLR",132,0)
 . S TEMP=^TMP("PXRMEXIH",$J,"SEL",IND)
"RTN","PXRMEXLR",133,0)
 . S RIEN=$P(TEMP,U,1)
"RTN","PXRMEXLR",134,0)
 . S IHIND=$P(TEMP,U,2)
"RTN","PXRMEXLR",135,0)
 . S TEMP=^PXD(811.8,RIEN,0)
"RTN","PXRMEXLR",136,0)
 . S ENTRY=$E($P(TEMP,U,1),1,38)
"RTN","PXRMEXLR",137,0)
 . S ENTRY=$$LJ^XLFSTR(ENTRY,38," ")
"RTN","PXRMEXLR",138,0)
 . S DP=$$FMTE^XLFDT($P(TEMP,U,3),"5Z")
"RTN","PXRMEXLR",139,0)
 . S DI=$$FMTE^XLFDT(^PXD(811.8,RIEN,130,IHIND,0),"5Z")
"RTN","PXRMEXLR",140,0)
 . I NLINE>1 D
"RTN","PXRMEXLR",141,0)
 .. S NLINE=NLINE+1
"RTN","PXRMEXLR",142,0)
 .. S ^TMP("PXRMEXID",$J,NLINE,0)="------------------------------------------------------------------------------"
"RTN","PXRMEXLR",143,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLR",144,0)
 . S ^TMP("PXRMEXID",$J,NLINE,0)=ENTRY_" "_DP_"  "_DI
"RTN","PXRMEXLR",145,0)
 .;Write the header line here.
"RTN","PXRMEXLR",146,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLR",147,0)
 . S ^TMP("PXRMEXID",$J,NLINE,0)="     Component                         Action  New Name"
"RTN","PXRMEXLR",148,0)
 . S CMPNT=""
"RTN","PXRMEXLR",149,0)
 . S JND=0
"RTN","PXRMEXLR",150,0)
 . F  S JND=$O(^PXD(811.8,RIEN,130,IHIND,1,JND)) Q:JND=""  D
"RTN","PXRMEXLR",151,0)
 .. S TEMP=^PXD(811.8,RIEN,130,IHIND,1,JND,0)
"RTN","PXRMEXLR",152,0)
 .. I $P(TEMP,U,2)'=CMPNT D
"RTN","PXRMEXLR",153,0)
 ... S NLINE=NLINE+1
"RTN","PXRMEXLR",154,0)
 ... S ^TMP("PXRMEXID",$J,NLINE,0)=" "
"RTN","PXRMEXLR",155,0)
 ... S CMPNT=$P(TEMP,U,2)
"RTN","PXRMEXLR",156,0)
 ... S NLINE=NLINE+1
"RTN","PXRMEXLR",157,0)
 ... S ^TMP("PXRMEXID",$J,NLINE,0)=CMPNT
"RTN","PXRMEXLR",158,0)
 .. S INDEX=$$RJ^XLFSTR($P(TEMP,U,1),4," ")
"RTN","PXRMEXLR",159,0)
 .. S NAME=$E($P(TEMP,U,3),1,36)
"RTN","PXRMEXLR",160,0)
 .. S NAME=$$LJ^XLFSTR(NAME,36," ")
"RTN","PXRMEXLR",161,0)
 .. S ACTION=$P(TEMP,U,4)
"RTN","PXRMEXLR",162,0)
 .. S NEWNAME=$E($P(TEMP,U,5),1,36)
"RTN","PXRMEXLR",163,0)
 .. S NEWNAME=$$LJ^XLFSTR(NEWNAME,36," ")
"RTN","PXRMEXLR",164,0)
 .. S NLINE=NLINE+1
"RTN","PXRMEXLR",165,0)
 .. S ^TMP("PXRMEXID",$J,NLINE,0)=INDEX_" "_NAME_" "_ACTION_"    "_NEWNAME
"RTN","PXRMEXLR",166,0)
 ..;If there are Additional Details add them to the display.
"RTN","PXRMEXLR",167,0)
 .. S KND=0
"RTN","PXRMEXLR",168,0)
 .. F  S KND=$O(^PXD(811.8,RIEN,130,IHIND,1,JND,1,KND)) Q:KND=""  D
"RTN","PXRMEXLR",169,0)
 ... S NLINE=NLINE+1
"RTN","PXRMEXLR",170,0)
 ... S ^TMP("PXRMEXID",$J,NLINE,0)=^PXD(811.8,RIEN,130,IHIND,1,JND,1,KND,0)
"RTN","PXRMEXLR",171,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLR",172,0)
 . S ^TMP("PXRMEXID",$J,NLINE,0)=" "
"RTN","PXRMEXLR",173,0)
 S VALMHDR(1)=^PXD(811.8,RIEN,0)_"  "_^TMP("PXRMEXID",$J,1,0)
"RTN","PXRMEXLR",174,0)
 S VALMCNT=NLINE
"RTN","PXRMEXLR",175,0)
 D EN^VALM("PXRM EX INSTALLATION DETAIL")
"RTN","PXRMEXLR",176,0)
 K ^TMP("PXRMEXID",$J)
"RTN","PXRMEXLR",177,0)
 S VALMBCK="R"
"RTN","PXRMEXLR",178,0)
 Q
"RTN","PXRMEXLR",179,0)
 ;
"RTN","PXRMEXLR",180,0)
 ;======================================================================
"RTN","PXRMEXLR",181,0)
INSTALL ;Get a list of repository entries and install them.
"RTN","PXRMEXLR",182,0)
 N IND,PXRMRIEN,VALMY
"RTN","PXRMEXLR",183,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEXLR",184,0)
 ;If there is no list quit.
"RTN","PXRMEXLR",185,0)
 I '$D(VALMY) Q
"RTN","PXRMEXLR",186,0)
 ;PXRMDONE is newed in PXRMEXLM
"RTN","PXRMEXLR",187,0)
 S PXRMDONE=0
"RTN","PXRMEXLR",188,0)
 S IND=""
"RTN","PXRMEXLR",189,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMEXLR",190,0)
 .;Get the repository ien.
"RTN","PXRMEXLR",191,0)
 . S PXRMRIEN=^TMP("PXRMEXLR",$J,"IDX",IND,IND)
"RTN","PXRMEXLR",192,0)
 .;The list template calls INSTALL^PXRMEXLI
"RTN","PXRMEXLR",193,0)
 . D EN^VALM("PXRM EX LIST COMPONENTS")
"RTN","PXRMEXLR",194,0)
 . K ^TMP("PXRMEXLC",$J)
"RTN","PXRMEXLR",195,0)
 Q
"RTN","PXRMEXLR",196,0)
 ;
"RTN","PXRMEXLR",197,0)
 ;======================================================================
"RTN","PXRMEXLR",198,0)
HDR ; Header code
"RTN","PXRMEXLR",199,0)
 S VALMHDR(1)=""
"RTN","PXRMEXLR",200,0)
 D CHGCAP^VALM("RNAME","Reminder Name")
"RTN","PXRMEXLR",201,0)
 D CHGCAP^VALM("PNAME","Date Loaded")
"RTN","PXRMEXLR",202,0)
 Q
"RTN","PXRMEXLR",203,0)
 ;
"RTN","PXRMEXLR",204,0)
 ;======================================================================
"RTN","PXRMEXLR",205,0)
HELP ; Help code
"RTN","PXRMEXLR",206,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","PXRMEXLR",207,0)
 Q
"RTN","PXRMEXLR",208,0)
 ;
"RTN","PXRMEXLR",209,0)
 ;======================================================================
"RTN","PXRMEXLR",210,0)
IS ;Get a list of packed reminders and print the installation summary.
"RTN","PXRMEXLR",211,0)
 N VALMY
"RTN","PXRMEXLR",212,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEXLR",213,0)
 ;If there is no list quit.
"RTN","PXRMEXLR",214,0)
 I '$D(VALMY) Q
"RTN","PXRMEXLR",215,0)
 Q
"RTN","PXRMEXLR",216,0)
 ;
"RTN","PXRMEXLR",217,0)
 ;======================================================================
"RTN","PXRMEXLR",218,0)
MIENLIST(LIST) ;Get a list of List Manager repository entries and turn it
"RTN","PXRMEXLR",219,0)
 ;into iens.
"RTN","PXRMEXLR",220,0)
 N COUNT,IEN,VALMY
"RTN","PXRMEXLR",221,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEXLR",222,0)
 ;If there is no list quit.
"RTN","PXRMEXLR",223,0)
 I '$D(VALMY) Q
"RTN","PXRMEXLR",224,0)
 S COUNT=0
"RTN","PXRMEXLR",225,0)
 S IND=""
"RTN","PXRMEXLR",226,0)
 F  S IND=$O(VALMY(IND)) Q:+IND=0  D
"RTN","PXRMEXLR",227,0)
 . S COUNT=COUNT+1
"RTN","PXRMEXLR",228,0)
 . S IEN=^TMP("PXRMEXLR",$J,"IDX",IND,IND)
"RTN","PXRMEXLR",229,0)
 . S LIST(IEN)=""
"RTN","PXRMEXLR",230,0)
 S LIST("COUNT")=COUNT
"RTN","PXRMEXLR",231,0)
 Q
"RTN","PXRMEXLR",232,0)
 ;
"RTN","PXRMEXLR",233,0)
PEXIT ;PXRM EXCH INSTALLATION MENU protocol exit code
"RTN","PXRMEXLR",234,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEXLR",235,0)
 ;Reset after page up/down etc
"RTN","PXRMEXLR",236,0)
 D XQORM
"RTN","PXRMEXLR",237,0)
 Q
"RTN","PXRMEXLR",238,0)
 ;
"RTN","PXRMEXLR",239,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM EXCH SELECT HISTORY",0))_U_"1:"_VALMCNT
"RTN","PXRMEXLR",240,0)
 S XQORM("A")="Select Action: "
"RTN","PXRMEXLR",241,0)
 Q
"RTN","PXRMEXLR",242,0)
 ;
"RTN","PXRMEXLR",243,0)
XSEL ;PXRM EXCH SELECT HISTORY validation
"RTN","PXRMEXLR",244,0)
 N ARRAY,CNT,SELECT,SEL
"RTN","PXRMEXLR",245,0)
 S SELECT=$P(XQORNOD(0),"=",2)
"RTN","PXRMEXLR",246,0)
 I '$$VALID^PXRMEXLD(SELECT) S VALMBCK="R" Q
"RTN","PXRMEXLR",247,0)
 ;
"RTN","PXRMEXLR",248,0)
 ;Build array of selected items
"RTN","PXRMEXLR",249,0)
 F CNT=1:1 S SEL=$P(SELECT,",",CNT) Q:'SEL  D
"RTN","PXRMEXLR",250,0)
 .S ARRAY(SEL)=""
"RTN","PXRMEXLR",251,0)
 ;
"RTN","PXRMEXLR",252,0)
 ;Display Selected Histories
"RTN","PXRMEXLR",253,0)
 D INDISP(.ARRAY)
"RTN","PXRMEXLR",254,0)
 Q
"RTN","PXRMEXMH")
0^17^B9663752
"RTN","PXRMEXMH",1,0)
PXRMEXMH ; SLC/PKR - Clinical Reminder Exchange main help. ;05/14/2001
"RTN","PXRMEXMH",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXMH",3,0)
 ;======================================================================
"RTN","PXRMEXMH",4,0)
LOAD ;If necessary load the help text into the ^TMP array.
"RTN","PXRMEXMH",5,0)
 ;Check if the help text has already been loaded.
"RTN","PXRMEXMH",6,0)
 I $D(^TMP("PXRMEXMH",$J,"VALMCNT")) D  Q
"RTN","PXRMEXMH",7,0)
 . S VALMCNT=^TMP("PXRMEXMH",$J,"VALMCNT")
"RTN","PXRMEXMH",8,0)
 ;
"RTN","PXRMEXMH",9,0)
 N DONE,IND,TEXT
"RTN","PXRMEXMH",10,0)
 S DONE=0
"RTN","PXRMEXMH",11,0)
 S VALMCNT=0
"RTN","PXRMEXMH",12,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMEXMH",13,0)
 . S TEXT=$P($T(TEXT+IND),";",3)
"RTN","PXRMEXMH",14,0)
 . I TEXT="**End Text**" S DONE=1 Q
"RTN","PXRMEXMH",15,0)
 . S VALMCNT=VALMCNT+1
"RTN","PXRMEXMH",16,0)
 . S ^TMP("PXRMEXMH",$J,VALMCNT,0)=TEXT
"RTN","PXRMEXMH",17,0)
 S ^TMP("PXRMEXMH",$J,"VALMCNT")=VALMCNT
"RTN","PXRMEXMH",18,0)
 Q
"RTN","PXRMEXMH",19,0)
 ;
"RTN","PXRMEXMH",20,0)
 ;======================================================================
"RTN","PXRMEXMH",21,0)
TEXT ;Help text
"RTN","PXRMEXMH",22,0)
 ;;The following actions are available:
"RTN","PXRMEXMH",23,0)
 ;;
"RTN","PXRMEXMH",24,0)
 ;;CFE Create Exchange File Entry
"RTN","PXRMEXMH",25,0)
 ;;    Create an entry in the Exchange File; this is also called
"RTN","PXRMEXMH",26,0)
 ;;    a packed reminder definition. When you select this action
"RTN","PXRMEXMH",27,0)
 ;;    you will be prompted for a reminder definition. All the
"RTN","PXRMEXMH",28,0)
 ;;    components used in the definition will be "packed" up and
"RTN","PXRMEXMH",29,0)
 ;;    included in the packed definition.
"RTN","PXRMEXMH",30,0)
 ;;
"RTN","PXRMEXMH",31,0)
 ;;CHF Create Host File
"RTN","PXRMEXMH",32,0)
 ;;    Create a host file containing selected entries from the
"RTN","PXRMEXMH",33,0)
 ;;    Exchange File.
"RTN","PXRMEXMH",34,0)
 ;;
"RTN","PXRMEXMH",35,0)
 ;;CMM Create MailMan Message
"RTN","PXRMEXMH",36,0)
 ;;    Create a MailMan message containing selected entries from
"RTN","PXRMEXMH",37,0)
 ;;    the Exchange File.
"RTN","PXRMEXMH",38,0)
 ;;
"RTN","PXRMEXMH",39,0)
 ;;DFE Delete Exchange File Entry
"RTN","PXRMEXMH",40,0)
 ;;    Delete selected entries from the Exchange File.
"RTN","PXRMEXMH",41,0)
 ;;
"RTN","PXRMEXMH",42,0)
 ;;IFE Install Exchange File Entry
"RTN","PXRMEXMH",43,0)
 ;;    Install selected Exchange File entries. Once an entry has
"RTN","PXRMEXMH",44,0)
 ;;    been selected you will have the option of installing all
"RTN","PXRMEXMH",45,0)
 ;;    the components in the packed reminder or selected
"RTN","PXRMEXMH",46,0)
 ;;    components.
"RTN","PXRMEXMH",47,0)
 ;;
"RTN","PXRMEXMH",48,0)
 ;;IH  Installation History
"RTN","PXRMEXMH",49,0)
 ;;    Show the installation history of selected Exchange File
"RTN","PXRMEXMH",50,0)
 ;;    entries.
"RTN","PXRMEXMH",51,0)
 ;;
"RTN","PXRMEXMH",52,0)
 ;;LHF Load Host File
"RTN","PXRMEXMH",53,0)
 ;;    Load a host file containing packed reminder definitions
"RTN","PXRMEXMH",54,0)
 ;;    into the Exchange File.
"RTN","PXRMEXMH",55,0)
 ;;
"RTN","PXRMEXMH",56,0)
 ;;LMM Load MailMan Message
"RTN","PXRMEXMH",57,0)
 ;;    Load a MailMan message containing packed reminders
"RTN","PXRMEXMH",58,0)
 ;;    into the Exchange File.
"RTN","PXRMEXMH",59,0)
 ;;
"RTN","PXRMEXMH",60,0)
 ;;LR  List Reminder Definitions
"RTN","PXRMEXMH",61,0)
 ;;    Display a list of all the reminders that are defined in the
"RTN","PXRMEXMH",62,0)
 ;;    current UCI.
"RTN","PXRMEXMH",63,0)
 ;;
"RTN","PXRMEXMH",64,0)
 ;;RI  Reminder Definition Inquiry
"RTN","PXRMEXMH",65,0)
 ;;    Display the reminder definition for the selected reminder.
"RTN","PXRMEXMH",66,0)
 ;;
"RTN","PXRMEXMH",67,0)
 ;;QU  Quit
"RTN","PXRMEXMH",68,0)
 ;;
"RTN","PXRMEXMH",69,0)
 ;;**End Text**
"RTN","PXRMEXMH",70,0)
 Q
"RTN","PXRMEXMH",71,0)
 ;
"RTN","PXRMEXMM")
0^18^B26158504
"RTN","PXRMEXMM",1,0)
PXRMEXMM ; SLC/PKR - Routines to select and deal with MailMan messages. ;06/15/2001
"RTN","PXRMEXMM",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXMM",3,0)
 ;======================================================================
"RTN","PXRMEXMM",4,0)
CMM(SUCCESS,LIST) ;Create a MailMan message containing the repository
"RTN","PXRMEXMM",5,0)
 ;entries in LIST.
"RTN","PXRMEXMM",6,0)
 ;Get a new MailMan message number.
"RTN","PXRMEXMM",7,0)
 N IC,IND,LC,LIEN,RIEN,TEMP,TLC,XMSUB
"RTN","PXRMEXMM",8,0)
 S XMSUB="Clinical Reminder Exchange File Entries"
"RTN","PXRMEXMM",9,0)
 S TEMP=$$GETSUB
"RTN","PXRMEXMM",10,0)
 I TEMP["^" Q
"RTN","PXRMEXMM",11,0)
 S XMSUB="CREX: "_TEMP
"RTN","PXRMEXMM",12,0)
 S TEMP=$$SUBCHK^XMGAPI0(XMSUB,0)
"RTN","PXRMEXMM",13,0)
 I $P(TEMP,U,1)'="" S XMSUB=$E(XMSUB,1,65)
"RTN","PXRMEXMM",14,0)
RETRY ;
"RTN","PXRMEXMM",15,0)
 D XMZ^XMA2
"RTN","PXRMEXMM",16,0)
 I XMZ<1 G RETRY
"RTN","PXRMEXMM",17,0)
 S SUCCESS("XMZ")=XMZ
"RTN","PXRMEXMM",18,0)
 S SUCCESS("SUB")=XMSUB
"RTN","PXRMEXMM",19,0)
 ;
"RTN","PXRMEXMM",20,0)
 S (IC,TLC)=0
"RTN","PXRMEXMM",21,0)
 S LIEN=""
"RTN","PXRMEXMM",22,0)
 F  S LIEN=$O(LIST(LIEN)) Q:+LIEN=0  D
"RTN","PXRMEXMM",23,0)
 . S RIEN=$$RIEN^PXRMEXU1(LIEN)
"RTN","PXRMEXMM",24,0)
 . S LC=$O(^PXD(811.8,RIEN,100,""),-1)
"RTN","PXRMEXMM",25,0)
 . S TLC=TLC+LC
"RTN","PXRMEXMM",26,0)
 . F IND=1:1:LC D
"RTN","PXRMEXMM",27,0)
 .. S IC=IC+1
"RTN","PXRMEXMM",28,0)
 .. S ^XMB(3.9,XMZ,2,IC,0)=^PXD(811.8,RIEN,100,IND,0)
"RTN","PXRMEXMM",29,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92^"_TLC_"^"_TLC_"^"_DT
"RTN","PXRMEXMM",30,0)
 ;
"RTN","PXRMEXMM",31,0)
 ;Make the message information only.
"RTN","PXRMEXMM",32,0)
 S $P(^XMB(3.9,XMZ,0),U,12)="Y"
"RTN","PXRMEXMM",33,0)
 ;
"RTN","PXRMEXMM",34,0)
 ;Get a list of who to send it to and send it.
"RTN","PXRMEXMM",35,0)
 D ENT2^XMD
"RTN","PXRMEXMM",36,0)
 Q
"RTN","PXRMEXMM",37,0)
 ;
"RTN","PXRMEXMM",38,0)
 ;======================================================================
"RTN","PXRMEXMM",39,0)
FLUSH(XMZ) ;Read to the end of the message so the pointer is reset.
"RTN","PXRMEXMM",40,0)
 N LINE
"RTN","PXRMEXMM",41,0)
 F  S LINE=$$READ^XMGAPI1 Q:+$G(XMER)=-1
"RTN","PXRMEXMM",42,0)
 Q
"RTN","PXRMEXMM",43,0)
 ;
"RTN","PXRMEXMM",44,0)
 ;======================================================================
"RTN","PXRMEXMM",45,0)
GETMESSN() ;Get the message number.
"RTN","PXRMEXMM",46,0)
 N DIC,TEMP,WBN,X,Y
"RTN","PXRMEXMM",47,0)
 K DIRUT,DTOUT,DUOUT
"RTN","PXRMEXMM",48,0)
 ;
"RTN","PXRMEXMM",49,0)
 S DIC("A")="Select a MailMan message: "
"RTN","PXRMEXMM",50,0)
 S DIC=3.9
"RTN","PXRMEXMM",51,0)
 S DIC(0)="EQV"
"RTN","PXRMEXMM",52,0)
 S X="CREX: "
"RTN","PXRMEXMM",53,0)
 ;Look in every mailbox except WASTE.
"RTN","PXRMEXMM",54,0)
 S WBN=$$BSKT^XMAD2("WASTE",DUZ)
"RTN","PXRMEXMM",55,0)
 S DIC("S")="I $D(^XMB(3.7,""M"",+Y,DUZ))&'$D(^XMB(3.7,""M"",+Y,DUZ,WBN))"
"RTN","PXRMEXMM",56,0)
 S DIC("W")="N SAVEY S SAVEY=+Y N Y S TEMP=$$NET^XMRENT(+SAVEY) W !,""         "",$P(TEMP,U,3),"" "",$P(TEMP,U,1),!"
"RTN","PXRMEXMM",57,0)
 W !
"RTN","PXRMEXMM",58,0)
 D ^DIC K DIC
"RTN","PXRMEXMM",59,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMEXMM",60,0)
 I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","PXRMEXMM",61,0)
 Q $P(Y,U,1)
"RTN","PXRMEXMM",62,0)
 ;
"RTN","PXRMEXMM",63,0)
 ;======================================================================
"RTN","PXRMEXMM",64,0)
GETSUB() ;Prompt the user for a subject.
"RTN","PXRMEXMM",65,0)
 N DIR,X,Y
"RTN","PXRMEXMM",66,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXMM",67,0)
 S DIR(0)="FAU"_U_"1:59"
"RTN","PXRMEXMM",68,0)
 S DIR("A")="Enter a subject: "
"RTN","PXRMEXMM",69,0)
 D ^DIR K DIR
"RTN","PXRMEXMM",70,0)
 Q Y
"RTN","PXRMEXMM",71,0)
 ;
"RTN","PXRMEXMM",72,0)
 ;======================================================================
"RTN","PXRMEXMM",73,0)
LMM(SUCCESS,XMZ) ;Load repository entries from a MailMan message.
"RTN","PXRMEXMM",74,0)
 N CSUM,DATE,FDA,FDAIEN,IND,LINE,MSG,NENTRY,NLINES,RETMP
"RTN","PXRMEXMM",75,0)
 N RNAME,SOURCE,SSOURCE,TEMP,US,VRSN,XMVAR
"RTN","PXRMEXMM",76,0)
 ;Get the message information
"RTN","PXRMEXMM",77,0)
 S TEMP=$$HDR^XMGAPI2(XMZ,.XMVAR,0)
"RTN","PXRMEXMM",78,0)
 I TEMP'=0 D  Q
"RTN","PXRMEXMM",79,0)
 . W !,"This MailMan message has a corrupted header."
"RTN","PXRMEXMM",80,0)
 . S SUCCESS=0
"RTN","PXRMEXMM",81,0)
 . H 2
"RTN","PXRMEXMM",82,0)
 .;Read all the way to the end of this entry to reset the line pointer.
"RTN","PXRMEXMM",83,0)
 . D FLUSH(XMZ)
"RTN","PXRMEXMM",84,0)
 ;Load the message
"RTN","PXRMEXMM",85,0)
 W !,"Loading MailMan message number ",XMZ
"RTN","PXRMEXMM",86,0)
 K ^TMP("PXRMEXLMM",$J)
"RTN","PXRMEXMM",87,0)
 S RETMP="^TMP(""PXRMEXLMM"",$J)"
"RTN","PXRMEXMM",88,0)
 S (NENTRY,NLINES,SSOURCE)=0
"RTN","PXRMEXMM",89,0)
 F  S LINE=$$READ^XMGAPI1 Q:+$G(XMER)=-1  D
"RTN","PXRMEXMM",90,0)
 . S NLINES=NLINES+1
"RTN","PXRMEXMM",91,0)
 . S ^TMP("PXRMEXLMM",$J,NLINES,0)=LINE
"RTN","PXRMEXMM",92,0)
 . I LINE["<PACKAGE_VERSION>" S VRSN=$$GETTAGV^PXRMEXU3(LINE,"<PACKAGE_VERSION>")
"RTN","PXRMEXMM",93,0)
 . I LINE="<SOURCE>" S SSOURCE=1
"RTN","PXRMEXMM",94,0)
 . I SSOURCE D
"RTN","PXRMEXMM",95,0)
 .. I LINE["<NAME>" S RNAME=$$GETTAGV^PXRMEXU3(LINE,"<NAME>")
"RTN","PXRMEXMM",96,0)
 .. I LINE["<USER>" S USER=$$GETTAGV^PXRMEXU3(LINE,"<USER>")
"RTN","PXRMEXMM",97,0)
 .. I LINE["<SITE>" S SITE=$$GETTAGV^PXRMEXU3(LINE,"<SITE>")
"RTN","PXRMEXMM",98,0)
 .. I LINE["<DATE_PACKED>" S DATEP=$$GETTAGV^PXRMEXU3(LINE,"<DATE_PACKED>")
"RTN","PXRMEXMM",99,0)
 . I LINE="</SOURCE>" D
"RTN","PXRMEXMM",100,0)
 .. S SSOURCE=0
"RTN","PXRMEXMM",101,0)
 .. S SOURCE=USER_" at "_SITE
"RTN","PXRMEXMM",102,0)
 .;See if the entry is loaded into the temporary storage.
"RTN","PXRMEXMM",103,0)
 . I LINE="</REMINDER_EXCHANGE_FILE_ENTRY>" D
"RTN","PXRMEXMM",104,0)
 .. S NLINES=0
"RTN","PXRMEXMM",105,0)
 .. S NENTRY=NENTRY+1
"RTN","PXRMEXMM",106,0)
 ..;Make sure it has the correct format.
"RTN","PXRMEXMM",107,0)
 .. I (^TMP("PXRMEXLMM",$J,1,0)'["xml")!(^TMP("PXRMEXLMM",$J,2,0)'="<REMINDER_EXCHANGE_FILE_ENTRY>") D  Q
"RTN","PXRMEXMM",108,0)
 ... W !,"There is a problem reading this MailMan message, try it again."
"RTN","PXRMEXMM",109,0)
 ... W !,"If it fails twice it is not in the proper reminder exchange format."
"RTN","PXRMEXMM",110,0)
 ... S SUCCESS=0
"RTN","PXRMEXMM",111,0)
 ... H 2
"RTN","PXRMEXMM",112,0)
 ...;Read all the way to the end of this entry to reset the line pointer.
"RTN","PXRMEXMM",113,0)
 ... D FLUSH(XMZ)
"RTN","PXRMEXMM",114,0)
 ... S XMER=-1
"RTN","PXRMEXMM",115,0)
 ..;Make sure this entry does not already exist.
"RTN","PXRMEXMM",116,0)
 .. I $$REXISTS^PXRMEXIU(RNAME,DATEP) D
"RTN","PXRMEXMM",117,0)
 ... W !,RNAME," with a date packed of ",DATEP
"RTN","PXRMEXMM",118,0)
 ... W !,"is already in the Exchange File."
"RTN","PXRMEXMM",119,0)
 ... S SUCCESS(NENTRY)=0
"RTN","PXRMEXMM",120,0)
 ... H 2
"RTN","PXRMEXMM",121,0)
 .. E  D
"RTN","PXRMEXMM",122,0)
 ... K FDA,IENROOT
"RTN","PXRMEXMM",123,0)
 ... S FDA(811.8,"+1,",.01)=RNAME
"RTN","PXRMEXMM",124,0)
 ... S FDA(811.8,"+1,",.02)=SOURCE
"RTN","PXRMEXMM",125,0)
 ... S FDA(811.8,"+1,",.03)=DATEP
"RTN","PXRMEXMM",126,0)
 ... D UPDATE^PXRMEXPU(.US,.FDA,.IENROOT)
"RTN","PXRMEXMM",127,0)
 ... S SUCCESS(NENTRY)=US
"RTN","PXRMEXMM",128,0)
 ...;Create the description and save the data.
"RTN","PXRMEXMM",129,0)
 ... N DESCT,KEYWORDT
"RTN","PXRMEXMM",130,0)
 ... D DESC^PXRMEXU3(RETMP,.DESCT)
"RTN","PXRMEXMM",131,0)
 ... D KEYWORD^PXRMEXU3(RETMP,.KEYWORDT)
"RTN","PXRMEXMM",132,0)
 ... D DESC^PXRMEXU1(IENROOT(1),RNAME,SOURCE,DATEP,"DESCT","KEYWORDT")
"RTN","PXRMEXMM",133,0)
 ... M ^PXD(811.8,IENROOT(1),100)=^TMP("PXRMEXLMM",$J)
"RTN","PXRMEXMM",134,0)
 .. K ^TMP("PXRMEXLMM",$J)
"RTN","PXRMEXMM",135,0)
 ;Check the success of the entry installs.
"RTN","PXRMEXMM",136,0)
 S SUCCESS=1
"RTN","PXRMEXMM",137,0)
 S IND=""
"RTN","PXRMEXMM",138,0)
 F  S IND=$O(SUCCESS(IND)) Q:+IND=0  D
"RTN","PXRMEXMM",139,0)
 . I 'SUCCESS(IND) S SUCCESS=0 Q
"RTN","PXRMEXMM",140,0)
 ;Read all the way to the end of the message.
"RTN","PXRMEXMM",141,0)
 D FLUSH(XMZ)
"RTN","PXRMEXMM",142,0)
 Q
"RTN","PXRMEXMM",143,0)
 ;
"RTN","PXRMEXMR")
1^29
"RTN","PXRMEXPR")
0^19^B30366184
"RTN","PXRMEXPR",1,0)
PXRMEXPR ; SLC/PKR/PJH - Routines to create packed reminder definitions. ;07/13/2001
"RTN","PXRMEXPR",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXPR",3,0)
 ;======================================================================
"RTN","PXRMEXPR",4,0)
ADDFILE(FLIST,ROOT,FILENAME) ;Add a file to the list of finding files.
"RTN","PXRMEXPR",5,0)
 N DIC,DO,FILENUM
"RTN","PXRMEXPR",6,0)
 S DIC="^"_ROOT
"RTN","PXRMEXPR",7,0)
 K DO
"RTN","PXRMEXPR",8,0)
 D DO^DIC1
"RTN","PXRMEXPR",9,0)
 S FILENUM=+DO(2)
"RTN","PXRMEXPR",10,0)
 S FILENAME=$P(DO,U,1)
"RTN","PXRMEXPR",11,0)
 S FLIST(FILENAME)=FILENUM
"RTN","PXRMEXPR",12,0)
 Q
"RTN","PXRMEXPR",13,0)
 ;
"RTN","PXRMEXPR",14,0)
 ;======================================================================
"RTN","PXRMEXPR",15,0)
ADDFIND(FLIST,FILENAME,IEN) ;Add a finding to the list of findings.
"RTN","PXRMEXPR",16,0)
 S FLIST(FILENAME,"F",IEN)=""
"RTN","PXRMEXPR",17,0)
 ;Make sure categories are included for any health factors and they
"RTN","PXRMEXPR",18,0)
 ;come first in the list of health factors.
"RTN","PXRMEXPR",19,0)
 I FILENAME="HEALTH FACTORS" D
"RTN","PXRMEXPR",20,0)
 . N CAT
"RTN","PXRMEXPR",21,0)
 . S CAT=$P(^AUTTHF(IEN,0),U,3)
"RTN","PXRMEXPR",22,0)
 . S FLIST(FILENAME,"C",CAT)=""
"RTN","PXRMEXPR",23,0)
 Q
"RTN","PXRMEXPR",24,0)
 ;
"RTN","PXRMEXPR",25,0)
 ;======================================================================
"RTN","PXRMEXPR",26,0)
BLDTEXT(TMPIND) ;Combine the source information and the users input into the
"RTN","PXRMEXPR",27,0)
 ;"TEXT" array.
"RTN","PXRMEXPR",28,0)
 N IC,IND
"RTN","PXRMEXPR",29,0)
 S (IC,IND)=0
"RTN","PXRMEXPR",30,0)
 F  S IC=$O(^TMP(TMPIND,$J,"SRC",IC)) Q:+IC=0  D
"RTN","PXRMEXPR",31,0)
 . S IND=IND+1
"RTN","PXRMEXPR",32,0)
 . S ^TMP(TMPIND,$J,"TEXT",1,IND)=^TMP(TMPIND,$J,"SRC",IC)
"RTN","PXRMEXPR",33,0)
 ;
"RTN","PXRMEXPR",34,0)
 S IC=0
"RTN","PXRMEXPR",35,0)
 F  S IC=$O(^TMP(TMPIND,$J,"TXT",1,IC)) Q:+IC=0  D
"RTN","PXRMEXPR",36,0)
 . S IND=IND+1
"RTN","PXRMEXPR",37,0)
 . S ^TMP(TMPIND,$J,"TEXT",1,IND)=^TMP(TMPIND,$J,"TXT",1,IC,0)
"RTN","PXRMEXPR",38,0)
 Q
"RTN","PXRMEXPR",39,0)
 ;
"RTN","PXRMEXPR",40,0)
 ;======================================================================
"RTN","PXRMEXPR",41,0)
GETDFIND(RIEN,FLIST) ;Build the list of definition findings.
"RTN","PXRMEXPR",42,0)
 ;FLIST has the format FLIST(FILENAME)=file number, and for each
"RTN","PXRMEXPR",43,0)
 ;finding from the file FLIST(FILENAME,"F",IEN)="". For Health Factors
"RTN","PXRMEXPR",44,0)
 ;category entries are FLIST(FILENAME,"C",IEN)="".
"RTN","PXRMEXPR",45,0)
 N FILENAME,IEN,ROOT
"RTN","PXRMEXPR",46,0)
 S ROOT=""
"RTN","PXRMEXPR",47,0)
 F  S ROOT=$O(^PXD(811.9,RIEN,20,"E",ROOT)) Q:ROOT=""  D
"RTN","PXRMEXPR",48,0)
 . D ADDFILE(.FLIST,ROOT,.FILENAME)
"RTN","PXRMEXPR",49,0)
 . S IEN=0
"RTN","PXRMEXPR",50,0)
 . F  S IEN=$O(^PXD(811.9,RIEN,20,"E",ROOT,IEN)) Q:+IEN=0  D
"RTN","PXRMEXPR",51,0)
 .. D ADDFIND(.FLIST,FILENAME,IEN)
"RTN","PXRMEXPR",52,0)
 Q
"RTN","PXRMEXPR",53,0)
 ;
"RTN","PXRMEXPR",54,0)
 ;======================================================================
"RTN","PXRMEXPR",55,0)
GETSPON(ROOT,IEN,SPONLIST) ;Add sponsors to the sponsor list.
"RTN","PXRMEXPR",56,0)
 N ENTRY,SPONSOR
"RTN","PXRMEXPR",57,0)
 S ENTRY=ROOT_IEN_",100)"
"RTN","PXRMEXPR",58,0)
 S ENTRY=$G(@ENTRY)
"RTN","PXRMEXPR",59,0)
 S SPONSOR=$P(ENTRY,U,2)
"RTN","PXRMEXPR",60,0)
 I SPONSOR'="" S SPONLIST(SPONSOR)=""
"RTN","PXRMEXPR",61,0)
 Q
"RTN","PXRMEXPR",62,0)
 ;
"RTN","PXRMEXPR",63,0)
 ;======================================================================
"RTN","PXRMEXPR",64,0)
GETTFIND(FLIST) ;If there are any terms in the list of findings go through
"RTN","PXRMEXPR",65,0)
 ;them and add the mapped findings to the list of findings.
"RTN","PXRMEXPR",66,0)
 I '$D(FLIST("REMINDER TERM")) Q
"RTN","PXRMEXPR",67,0)
 N FILENAME,ROOT,TIEN
"RTN","PXRMEXPR",68,0)
 S TIEN=0
"RTN","PXRMEXPR",69,0)
 F  S TIEN=$O(FLIST("REMINDER TERM","F",TIEN)) Q:+TIEN=0  D
"RTN","PXRMEXPR",70,0)
 . S ROOT=""
"RTN","PXRMEXPR",71,0)
 . F  S ROOT=$O(^PXRMD(811.5,TIEN,20,"E",ROOT)) Q:ROOT=""  D
"RTN","PXRMEXPR",72,0)
 .. D ADDFILE(.FLIST,ROOT,.FILENAME)
"RTN","PXRMEXPR",73,0)
 .. S IEN=0
"RTN","PXRMEXPR",74,0)
 .. F  S IEN=$O(^PXRMD(811.5,TIEN,20,"E",ROOT,IEN)) Q:+IEN=0  D
"RTN","PXRMEXPR",75,0)
 ... D ADDFIND(.FLIST,FILENAME,IEN)
"RTN","PXRMEXPR",76,0)
 Q
"RTN","PXRMEXPR",77,0)
 ;
"RTN","PXRMEXPR",78,0)
 ;======================================================================
"RTN","PXRMEXPR",79,0)
GETTEXT(RIEN,TMPIND,INDEX) ;Let the user input some text.
"RTN","PXRMEXPR",80,0)
 N DIC,DWLW,DWPK
"RTN","PXRMEXPR",81,0)
 ;If this is the description text, load the reminder description as
"RTN","PXRMEXPR",82,0)
 ;the default.
"RTN","PXRMEXPR",83,0)
 S RIEN=+RIEN
"RTN","PXRMEXPR",84,0)
 I RIEN>0 M ^TMP(TMPIND,$J,INDEX,1)=^PXD(811.9,RIEN,1)
"RTN","PXRMEXPR",85,0)
 S DIC="^TMP(TMPIND,$J,"""_INDEX_""",1,"
"RTN","PXRMEXPR",86,0)
 S DWLW=72
"RTN","PXRMEXPR",87,0)
 S DWPK=1
"RTN","PXRMEXPR",88,0)
 D EN^DIWE
"RTN","PXRMEXPR",89,0)
 Q
"RTN","PXRMEXPR",90,0)
 ;
"RTN","PXRMEXPR",91,0)
 ;======================================================================
"RTN","PXRMEXPR",92,0)
PACK(RTP,TMPIND) ;Create the packed reminder, store it in
"RTN","PXRMEXPR",93,0)
 ;^TMP(TMPIND,$J). TMPIND should be namespaced and set by the caller.
"RTN","PXRMEXPR",94,0)
 ;Save the source information
"RTN","PXRMEXPR",95,0)
 I +RTP'>0 Q
"RTN","PXRMEXPR",96,0)
 K ^TMP(TMPIND,$J)
"RTN","PXRMEXPR",97,0)
 D PUTSRC(RTP,TMPIND)
"RTN","PXRMEXPR",98,0)
 ;
"RTN","PXRMEXPR",99,0)
 ;Have the user input text that describes the reminder.
"RTN","PXRMEXPR",100,0)
 W !,"Enter a description of the reminder you are packing." H 3
"RTN","PXRMEXPR",101,0)
 D GETTEXT(RTP,TMPIND,"DESC")
"RTN","PXRMEXPR",102,0)
 ;
"RTN","PXRMEXPR",103,0)
 ;Have the user input keywords for indexing the reminder.
"RTN","PXRMEXPR",104,0)
 W !,"Enter keywords or phrases to help index the reminder you are packing."
"RTN","PXRMEXPR",105,0)
 W !,"Separate the keywords or phrases on each line with commas." H 3
"RTN","PXRMEXPR",106,0)
 D GETTEXT(0,TMPIND,"KEYWORD")
"RTN","PXRMEXPR",107,0)
 ;
"RTN","PXRMEXPR",108,0)
 ;Combine the source and input text into the "TEXT" array.
"RTN","PXRMEXPR",109,0)
 D BLDTEXT(TMPIND)
"RTN","PXRMEXPR",110,0)
 ;
"RTN","PXRMEXPR",111,0)
 W !,"Packing the reminder ... "
"RTN","PXRMEXPR",112,0)
 ;Build lists of the various reminder components.
"RTN","PXRMEXPR",113,0)
 N CF,IEN,IND0,FINDLIST,FILELIST,FILENAME,FILENUM,DLGLIST
"RTN","PXRMEXPR",114,0)
 N NUMF,NUMR,OBJLIST,RIEN,ROUTINE,RTNLIST
"RTN","PXRMEXPR",115,0)
 N SERROR,SPONLIST,TEMLIST
"RTN","PXRMEXPR",116,0)
 S RIEN=$P(RTP,U,1)
"RTN","PXRMEXPR",117,0)
 ;
"RTN","PXRMEXPR",118,0)
 ;Get the list of definition findings and start the sponsor list.
"RTN","PXRMEXPR",119,0)
 D GETDFIND(RIEN,.FINDLIST)
"RTN","PXRMEXPR",120,0)
 D GETSPON("^PXD(811.9,",RIEN,.SPONLIST)
"RTN","PXRMEXPR",121,0)
 ;
"RTN","PXRMEXPR",122,0)
 ;Add term findings to the list.
"RTN","PXRMEXPR",123,0)
 D GETTFIND(.FINDLIST)
"RTN","PXRMEXPR",124,0)
 ;
"RTN","PXRMEXPR",125,0)
 ;If a dialog exists for this reminder add it and its findings to the
"RTN","PXRMEXPR",126,0)
 ;list. Also collect any embedded TIU objects or templates
"RTN","PXRMEXPR",127,0)
 D DIALOG^PXRMEXDG(RIEN,.DLGLIST,.FINDLIST,.OBJLIST,.TEMLIST)
"RTN","PXRMEXPR",128,0)
 ;
"RTN","PXRMEXPR",129,0)
 ;The finding list is complete, search through all the findings for
"RTN","PXRMEXPR",130,0)
 ;any additional sponsors.
"RTN","PXRMEXPR",131,0)
 ;
"RTN","PXRMEXPR",132,0)
 ;Look for any computed findings and put the associated routines
"RTN","PXRMEXPR",133,0)
 ;on the routine list.
"RTN","PXRMEXPR",134,0)
 S (IEN,NUMR)=0
"RTN","PXRMEXPR",135,0)
 F  S IEN=$O(FINDLIST("REMINDER COMPUTED FINDINGS","F",IEN)) Q:IEN=""  D
"RTN","PXRMEXPR",136,0)
 . S ROUTINE=$P(^PXRMD(811.4,IEN,0),U,2)
"RTN","PXRMEXPR",137,0)
 . S NUMR=NUMR+1
"RTN","PXRMEXPR",138,0)
 . S RTNLIST(NUMR)=ROUTINE
"RTN","PXRMEXPR",139,0)
 ;Go through the finding list and create the file list in the same
"RTN","PXRMEXPR",140,0)
 ;order as the finding list.
"RTN","PXRMEXPR",141,0)
 S NUMF=0
"RTN","PXRMEXPR",142,0)
 S FILENAME=""
"RTN","PXRMEXPR",143,0)
 F  S FILENAME=$O(FINDLIST(FILENAME)) Q:FILENAME=""  D
"RTN","PXRMEXPR",144,0)
 . S FILENUM=FINDLIST(FILENAME)
"RTN","PXRMEXPR",145,0)
 . S IND0=""
"RTN","PXRMEXPR",146,0)
 . F  S IND0=$O(FINDLIST(FILENAME,IND0)) Q:IND0=""  D
"RTN","PXRMEXPR",147,0)
 .. S IEN=0
"RTN","PXRMEXPR",148,0)
 .. F  S IEN=$O(FINDLIST(FILENAME,IND0,IEN)) Q:IEN=""  D
"RTN","PXRMEXPR",149,0)
 ... S NUMF=NUMF+1
"RTN","PXRMEXPR",150,0)
 ... S FILELIST(NUMF)=FILENAME_U_FILENUM_U_IEN
"RTN","PXRMEXPR",151,0)
 ;
"RTN","PXRMEXPR",152,0)
 ;Add TIU templates to the file list.
"RTN","PXRMEXPR",153,0)
 S IND0=0
"RTN","PXRMEXPR",154,0)
 F  S IND0=$O(TEMLIST(IND0)) Q:IND0=""  D
"RTN","PXRMEXPR",155,0)
 . S IEN=$$EXISTS^PXRMEXIU(8927.1,TEMLIST(IND0))
"RTN","PXRMEXPR",156,0)
 . S NUMF=NUMF+1
"RTN","PXRMEXPR",157,0)
 . S FILELIST(NUMF)="TIU TEMPLATE FIELD"_U_8927.1_U_IEN
"RTN","PXRMEXPR",158,0)
 ;
"RTN","PXRMEXPR",159,0)
 ;Add sponsors.
"RTN","PXRMEXPR",160,0)
 S IND0=0
"RTN","PXRMEXPR",161,0)
 F  S IND0=$O(SPONLIST(IND0)) Q:IND0=""  D
"RTN","PXRMEXPR",162,0)
 . S NUMF=NUMF+1
"RTN","PXRMEXPR",163,0)
 . S FILELIST(NUMF)="REMINDER SPONSOR"_U_811.6_U_IND0
"RTN","PXRMEXPR",164,0)
 ;
"RTN","PXRMEXPR",165,0)
 ;Put the reminder at next to last.
"RTN","PXRMEXPR",166,0)
 S NUMF=NUMF+1
"RTN","PXRMEXPR",167,0)
 S FILELIST(NUMF)="REMINDER DEFINITION"_U_811.9_U_RIEN
"RTN","PXRMEXPR",168,0)
 ;
"RTN","PXRMEXPR",169,0)
 ;Put dialogs last on the file list.
"RTN","PXRMEXPR",170,0)
 S FILENUM=$G(DLGLIST("DIALOG"))
"RTN","PXRMEXPR",171,0)
 S IND0=""
"RTN","PXRMEXPR",172,0)
 F  S IND0=$O(DLGLIST("DIALOG",IND0)) Q:IND0=""  D
"RTN","PXRMEXPR",173,0)
 . S IEN=""
"RTN","PXRMEXPR",174,0)
 . F  S IEN=$O(DLGLIST("DIALOG",IND0,IEN)) Q:IEN=""  D
"RTN","PXRMEXPR",175,0)
 .. S NUMF=NUMF+1
"RTN","PXRMEXPR",176,0)
 .. S FILELIST(NUMF)="REMINDER DIALOG"_U_FILENUM_U_IEN
"RTN","PXRMEXPR",177,0)
 ;
"RTN","PXRMEXPR",178,0)
 S SERROR=0
"RTN","PXRMEXPR",179,0)
 ;Put any routines into the ^TMP array.
"RTN","PXRMEXPR",180,0)
 D GRTN^PXRMEXPU(.RTNLIST,NUMR,TMPIND,.SERROR)
"RTN","PXRMEXPR",181,0)
 ;Put the GETS^DIQ extracts of the findings, dialogs, and
"RTN","PXRMEXPR",182,0)
 ;reminder definition into the ^TMP array.
"RTN","PXRMEXPR",183,0)
 D GDIQF^PXRMEXPU(.FILELIST,NUMF,TMPIND,.SERROR)
"RTN","PXRMEXPR",184,0)
 ;
"RTN","PXRMEXPR",185,0)
 ;If there were any errors saving the data kill the ^TMP array.
"RTN","PXRMEXPR",186,0)
 I SERROR K ^TMP(TMPIND,$J)
"RTN","PXRMEXPR",187,0)
 Q
"RTN","PXRMEXPR",188,0)
 ;
"RTN","PXRMEXPR",189,0)
 ;======================================================================
"RTN","PXRMEXPR",190,0)
PUTSRC(RTP,TMPIND) ;Save the source information
"RTN","PXRMEXPR",191,0)
 N LOC
"RTN","PXRMEXPR",192,0)
 S LOC=$$SITE^VASITE
"RTN","PXRMEXPR",193,0)
 S ^TMP(TMPIND,$J,"SRC","REMINDER")=$P(RTP,U,2)
"RTN","PXRMEXPR",194,0)
 S ^TMP(TMPIND,$J,"SRC","USER")=$P(^VA(200,DUZ,0),U,1)
"RTN","PXRMEXPR",195,0)
 S ^TMP(TMPIND,$J,"SRC","SITE")=$P(LOC,U,2)
"RTN","PXRMEXPR",196,0)
 S ^TMP(TMPIND,$J,"SRC","DATE")=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMEXPR",197,0)
 Q
"RTN","PXRMEXPR",198,0)
 ;
"RTN","PXRMEXPU")
0^20^B36825886
"RTN","PXRMEXPU",1,0)
PXRMEXPU ; SLC/PKR - Utilities for packing and unpacking repository entries. ;06/18/2001
"RTN","PXRMEXPU",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXPU",3,0)
 ;======================================================================
"RTN","PXRMEXPU",4,0)
ASSAF(LIENS,LASTI) ;Assemble the stored pieces of the IENS.
"RTN","PXRMEXPU",5,0)
 N IENSA,IND
"RTN","PXRMEXPU",6,0)
 S IENSA=""
"RTN","PXRMEXPU",7,0)
 F IND=LIENS:-1:1 D
"RTN","PXRMEXPU",8,0)
 . S IENSA=IENSA_LASTI(IND)
"RTN","PXRMEXPU",9,0)
 Q IENSA
"RTN","PXRMEXPU",10,0)
 ;
"RTN","PXRMEXPU",11,0)
 ;======================================================================
"RTN","PXRMEXPU",12,0)
CONTOFDA(DIQOUT,IENROOT,IEN) ;Convert the iens from the form returned by
"RTN","PXRMEXPU",13,0)
 ;GETS^DIQ to the FDA laygo form used by UPDATE^DIE. DIQOUT contains
"RTN","PXRMEXPU",14,0)
 ;the GETS^DIQ output. If any of the fields are variable pointers
"RTN","PXRMEXPU",15,0)
 ;change them to the resolved form.
"RTN","PXRMEXPU",16,0)
 N IENS,IENSA,INTERNAL,FIELD,FILENUM
"RTN","PXRMEXPU",17,0)
 N LASTI,LIENS,LINE,PTRTO,ROOT,TEMP,TYPE,VLIST,VPTRLIST,WPLCNT
"RTN","PXRMEXPU",18,0)
 S LASTI(1)="+"_IEN
"RTN","PXRMEXPU",19,0)
 S LASTI(2)=0
"RTN","PXRMEXPU",20,0)
 S FILENUM=""
"RTN","PXRMEXPU",21,0)
 F  S FILENUM=$O(DIQOUT(FILENUM)) Q:FILENUM=""  D
"RTN","PXRMEXPU",22,0)
 . K TYPE,VPTRLIST
"RTN","PXRMEXPU",23,0)
 . S IENS=""
"RTN","PXRMEXPU",24,0)
 . F  S IENS=$O(DIQOUT(FILENUM,IENS)) Q:IENS=""  D
"RTN","PXRMEXPU",25,0)
 .. S LIENS=$L(IENS,",")-1
"RTN","PXRMEXPU",26,0)
 .. D SETLASTI(LIENS,.LASTI)
"RTN","PXRMEXPU",27,0)
 ..;Assemble the adding form of the IENS.
"RTN","PXRMEXPU",28,0)
 .. S IENSA=$$ASSAF(LIENS,.LASTI)
"RTN","PXRMEXPU",29,0)
 ..;Save IENROOT for UPDATE^DIE so all nodes will be installed at
"RTN","PXRMEXPU",30,0)
 ..;their original locations.
"RTN","PXRMEXPU",31,0)
 .. I LIENS>1 S IENROOT(+LASTI(LIENS))=$P(IENS,",",1)
"RTN","PXRMEXPU",32,0)
 .. S FIELD=""
"RTN","PXRMEXPU",33,0)
 .. F  S FIELD=$O(DIQOUT(FILENUM,IENS,FIELD)) Q:FIELD=""  D
"RTN","PXRMEXPU",34,0)
 ...;If there is no data then don't keep this entry.
"RTN","PXRMEXPU",35,0)
 ... I DIQOUT(FILENUM,IENS,FIELD)="" K DIQOUT(FILENUM,IENS,FIELD) Q
"RTN","PXRMEXPU",36,0)
 ...;Get the field type, if it is a variable-pointer then set up
"RTN","PXRMEXPU",37,0)
 ...;the resolved form.
"RTN","PXRMEXPU",38,0)
 ... I '$D(TYPE(FILENUM,FIELD)) S TYPE(FILENUM,FIELD)=$$GET1^DID(FILENUM,FIELD,"","TYPE")
"RTN","PXRMEXPU",39,0)
 ... I TYPE(FILENUM,FIELD)="POINTER" S PTRTO=$$GET1^DID(FILENUM,FIELD,"","POINTER")
"RTN","PXRMEXPU",40,0)
 ... E  S PTRTO=""
"RTN","PXRMEXPU",41,0)
 ... I TYPE(FILENUM,FIELD)="VARIABLE-POINTER" D
"RTN","PXRMEXPU",42,0)
 .... I '$D(VPTRLIST(FILENUM,FIELD)) D
"RTN","PXRMEXPU",43,0)
 ..... K VLIST
"RTN","PXRMEXPU",44,0)
 ..... D BLDRLIST^PXRMVPTR(FILENUM,FIELD,.VLIST)
"RTN","PXRMEXPU",45,0)
 ..... M VPTRLIST(FILENUM,FIELD)=VLIST
"RTN","PXRMEXPU",46,0)
 .... S INTERNAL=$$GET1^DIQ(FILENUM,IENS,FIELD,"I")
"RTN","PXRMEXPU",47,0)
 .... S (PTRTO,ROOT)=$P(INTERNAL,";",2)
"RTN","PXRMEXPU",48,0)
 .... S ABBR=$P(VPTRLIST(FILENUM,FIELD,ROOT),U,4)
"RTN","PXRMEXPU",49,0)
 .... S DIQOUT(FILENUM,IENS,FIELD)=ABBR_"."_DIQOUT(FILENUM,IENS,FIELD)
"RTN","PXRMEXPU",50,0)
 ... I TYPE(FILENUM,FIELD)="WORD-PROCESSING" D
"RTN","PXRMEXPU",51,0)
 .... S (LINE,WPLCNT)=0
"RTN","PXRMEXPU",52,0)
 .... F  S LINE=$O(DIQOUT(FILENUM,IENS,FIELD,LINE)) Q:LINE=""  D
"RTN","PXRMEXPU",53,0)
 ..... S WPLCNT=WPLCNT+1
"RTN","PXRMEXPU",54,0)
 ..... S DIQOUT(FILENUM,IENSA,FIELD,LINE)=DIQOUT(FILENUM,IENS,FIELD,LINE)
"RTN","PXRMEXPU",55,0)
 .... I WPLCNT>0 S DIQOUT(FILENUM,IENS,FIELD)="WP-start~"_WPLCNT
"RTN","PXRMEXPU",56,0)
 .... E  K DIQOUT(FILENUM,IENS,FIELD)
"RTN","PXRMEXPU",57,0)
 ...;Done processing, save the adding form.
"RTN","PXRMEXPU",58,0)
 ... S TEMP=DIQOUT(FILENUM,IENS,FIELD)
"RTN","PXRMEXPU",59,0)
 ...;For fields that point to files 80 and 80.1 we have to append a space
"RTN","PXRMEXPU",60,0)
 ...;so FileMan can resolve the pointers when installing a component.
"RTN","PXRMEXPU",61,0)
 ... I PTRTO["ICD" S TEMP=TEMP_" "
"RTN","PXRMEXPU",62,0)
 ... S DIQOUT(FILENUM,IENSA,FIELD)=TEMP
"RTN","PXRMEXPU",63,0)
 ... K DIQOUT(FILENUM,IENS,FIELD)
"RTN","PXRMEXPU",64,0)
 Q
"RTN","PXRMEXPU",65,0)
 ;
"RTN","PXRMEXPU",66,0)
 ;======================================================================
"RTN","PXRMEXPU",67,0)
GDIQF(LIST,NUM,TMPIND,SERROR) ;Save file entries into ^TMP(TMPIND,$J).
"RTN","PXRMEXPU",68,0)
 N DIQOUT,IENROOT,IND,FIELD,FILENAME,IENS,MSG,PT01,TEMP
"RTN","PXRMEXPU",69,0)
 S ^TMP(TMPIND,$J,"NUMF")=NUM
"RTN","PXRMEXPU",70,0)
 F IND=1:1:NUM D
"RTN","PXRMEXPU",71,0)
 . S TEMP=LIST(IND)
"RTN","PXRMEXPU",72,0)
 . S FILENAME=$P(TEMP,U,1)
"RTN","PXRMEXPU",73,0)
 . S FILENUM=$P(TEMP,U,2)
"RTN","PXRMEXPU",74,0)
 . S IEN=$P(TEMP,U,3)_","
"RTN","PXRMEXPU",75,0)
 . K DIQOUT,IENROOT
"RTN","PXRMEXPU",76,0)
 .;If the file entry is ok to install then get the entire entry,
"RTN","PXRMEXPU",77,0)
 .;otherwise just get the .01.
"RTN","PXRMEXPU",78,0)
 . I $$FOKTI^PXRMEXFI(FILENUM) S FIELD="**"
"RTN","PXRMEXPU",79,0)
 . E  S FIELD=.01
"RTN","PXRMEXPU",80,0)
 .;For PCE education topics VA- entries cannot be transported.
"RTN","PXRMEXPU",81,0)
 . I FILENUM=9999999.09 D
"RTN","PXRMEXPU",82,0)
 .. S PT01=$$GET1^DIQ(FILENUM,IEN,.01)
"RTN","PXRMEXPU",83,0)
 .. I PT01["VA-" S FIELD=.01
"RTN","PXRMEXPU",84,0)
 . D GETS^DIQ(FILENUM,IEN,FIELD,"","DIQOUT","MSG")
"RTN","PXRMEXPU",85,0)
 . I $D(MSG) D  Q
"RTN","PXRMEXPU",86,0)
 .. S SERROR=1,IND=NUM
"RTN","PXRMEXPU",87,0)
 .. N ETEXT
"RTN","PXRMEXPU",88,0)
 .. S ETEXT="GETS^DIQ failed for "_FILENAME_", it returned the following error message:"
"RTN","PXRMEXPU",89,0)
 .. W !,ETEXT
"RTN","PXRMEXPU",90,0)
 .. D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXPU",91,0)
 .. H 2
"RTN","PXRMEXPU",92,0)
 .. K MSG
"RTN","PXRMEXPU",93,0)
 .;Remove edit history from all reminder files.
"RTN","PXRMEXPU",94,0)
 . D RMEH(FILENUM,.DIQOUT)
"RTN","PXRMEXPU",95,0)
 .;Convert the iens to the FDA adding form.
"RTN","PXRMEXPU",96,0)
 . D CONTOFDA(.DIQOUT,.IENROOT,IEN)
"RTN","PXRMEXPU",97,0)
 .;Load the converted DIQOUT into TMP.
"RTN","PXRMEXPU",98,0)
 . M ^TMP(TMPIND,$J,IND,FILENAME)=DIQOUT
"RTN","PXRMEXPU",99,0)
 . M ^TMP(TMPIND,$J,IND,FILENAME_"_IENROOT")=IENROOT
"RTN","PXRMEXPU",100,0)
 Q
"RTN","PXRMEXPU",101,0)
 ;
"RTN","PXRMEXPU",102,0)
 ;======================================================================
"RTN","PXRMEXPU",103,0)
GETREM(ACTION) ;Get the reminder to save.
"RTN","PXRMEXPU",104,0)
 N DIC,Y
"RTN","PXRMEXPU",105,0)
 S DIC="^PXD(811.9,"
"RTN","PXRMEXPU",106,0)
 S DIC(0)="AEMQ"
"RTN","PXRMEXPU",107,0)
 S DIC("A")="Select Reminder Definition to "_ACTION_": "
"RTN","PXRMEXPU",108,0)
 D ^DIC
"RTN","PXRMEXPU",109,0)
 G:Y=-1 END
"RTN","PXRMEXPU",110,0)
END ;
"RTN","PXRMEXPU",111,0)
 Q Y
"RTN","PXRMEXPU",112,0)
 ;
"RTN","PXRMEXPU",113,0)
 ;======================================================================
"RTN","PXRMEXPU",114,0)
GRTN(LIST,NUM,TMPIND,SERROR) ;Save routines into ^TMP(TMPIND,$J).
"RTN","PXRMEXPU",115,0)
 N DIF,IEN,IND,TEMP,X,XCNP
"RTN","PXRMEXPU",116,0)
 S ^TMP(TMPIND,$J,"NUMR")=NUM
"RTN","PXRMEXPU",117,0)
 S X=""
"RTN","PXRMEXPU",118,0)
 F IND=1:1:NUM D
"RTN","PXRMEXPU",119,0)
 .;Make sure the routine exists.
"RTN","PXRMEXPU",120,0)
 . S X=LIST(IND)
"RTN","PXRMEXPU",121,0)
 . X ^%ZOSF("TEST")
"RTN","PXRMEXPU",122,0)
 . I $T D
"RTN","PXRMEXPU",123,0)
 .. S DIF="^TMP(TMPIND,$J,""ROUTINE"","""_X_""","
"RTN","PXRMEXPU",124,0)
 .. S XCNP=0
"RTN","PXRMEXPU",125,0)
 .. X ^%ZOSF("LOAD")
"RTN","PXRMEXPU",126,0)
 . E  D
"RTN","PXRMEXPU",127,0)
 .. S SERROR=1
"RTN","PXRMEXPU",128,0)
 .. W !,"Warning could not find routine ",X
"RTN","PXRMEXPU",129,0)
 .. H 2
"RTN","PXRMEXPU",130,0)
 Q
"RTN","PXRMEXPU",131,0)
 ;
"RTN","PXRMEXPU",132,0)
 ;======================================================================
"RTN","PXRMEXPU",133,0)
RMEH(FILENUM,DIQOUT) ;Clear the edit history from all reminder files.
"RTN","PXRMEXPU",134,0)
 ;Leave a stub so it can be filled in when the file is installed.
"RTN","PXRMEXPU",135,0)
 I (FILENUM<800)!(FILENUM>811.9) Q
"RTN","PXRMEXPU",136,0)
 N IEN,SFN,TARGET
"RTN","PXRMEXPU",137,0)
 ;Edit History is stored in node 110 for all files, get the
"RTN","PXRMEXPU",138,0)
 ;subfile number.
"RTN","PXRMEXPU",139,0)
 D FIELD^DID(FILENUM,110,"","SPECIFIER","TARGET")
"RTN","PXRMEXPU",140,0)
 S SFN=+$G(TARGET("SPECIFIER"))
"RTN","PXRMEXPU",141,0)
 I SFN=0 Q
"RTN","PXRMEXPU",142,0)
 ;Clean out the history.
"RTN","PXRMEXPU",143,0)
 S IENS=""
"RTN","PXRMEXPU",144,0)
 F  S IENS=$O(DIQOUT(SFN,IENS)) Q:IENS=""  K DIQOUT(SFN,IENS)
"RTN","PXRMEXPU",145,0)
 ;Create a stub for the install.
"RTN","PXRMEXPU",146,0)
 S IENS="1,"_$O(DIQOUT(FILENUM,""))
"RTN","PXRMEXPU",147,0)
 S DIQOUT(SFN,IENS,.01)=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMEXPU",148,0)
 S DIQOUT(SFN,IENS,1)=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMEXPU",149,0)
 S DIQOUT(SFN,IENS,2)="DIQOUT("_SFN_","_IENS_"2)"
"RTN","PXRMEXPU",150,0)
 S DIQOUT(SFN,IENS,2,1)="Exchange Stub"
"RTN","PXRMEXPU",151,0)
 Q
"RTN","PXRMEXPU",152,0)
 ;
"RTN","PXRMEXPU",153,0)
 ;======================================================================
"RTN","PXRMEXPU",154,0)
SETLASTI(LIENS,LASTI) ;Assemble the pieces of the IENS for the
"RTN","PXRMEXPU",155,0)
 ;FDA in the adding form. Note in this scheme we go from right to left.
"RTN","PXRMEXPU",156,0)
 ;The first index is fixed don't do anything with it.
"RTN","PXRMEXPU",157,0)
 I LIENS=1 Q
"RTN","PXRMEXPU",158,0)
 ;The second index is just incremented.
"RTN","PXRMEXPU",159,0)
 I LIENS=2 D  Q
"RTN","PXRMEXPU",160,0)
 . N T2
"RTN","PXRMEXPU",161,0)
 . S T2=+LASTI(LIENS)+1
"RTN","PXRMEXPU",162,0)
 . I T2=+LASTI(1) S T2=T2+1
"RTN","PXRMEXPU",163,0)
 . S LASTI(LIENS)="+"_T2_","
"RTN","PXRMEXPU",164,0)
 ;For the third and higher index make sure it is one higher than the
"RTN","PXRMEXPU",165,0)
 ;previous index.
"RTN","PXRMEXPU",166,0)
 I $G(LASTI(LIENS))<LASTI(LIENS-1) S LASTI(LIENS)="+"_(LASTI(LIENS-1)+1)_","
"RTN","PXRMEXPU",167,0)
 E  S LASTI(LIENS)="+"_(LASTI(LIENS)+1)_","
"RTN","PXRMEXPU",168,0)
 Q
"RTN","PXRMEXPU",169,0)
 ;
"RTN","PXRMEXPU",170,0)
 ;======================================================================
"RTN","PXRMEXPU",171,0)
UPDATE(SUCCESS,FDA,FDAIEN) ;Call to add new entries to the repository.
"RTN","PXRMEXPU",172,0)
 N MSG
"RTN","PXRMEXPU",173,0)
 ;Try to eliminate gaps in the repository.
"RTN","PXRMEXPU",174,0)
 S $P(^PXD(811.8,0),U,3)=0
"RTN","PXRMEXPU",175,0)
 D UPDATE^DIE("E","FDA","FDAIEN","MSG")
"RTN","PXRMEXPU",176,0)
 I $D(MSG) D
"RTN","PXRMEXPU",177,0)
 . N DATE,RNAME
"RTN","PXRMEXPU",178,0)
 . S SUCCESS=0
"RTN","PXRMEXPU",179,0)
 . W !,"The update failed, UPDATE^DIE returned the following error message:"
"RTN","PXRMEXPU",180,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXPU",181,0)
 . S RNAME=FDA(811.8,"+1,",.01)
"RTN","PXRMEXPU",182,0)
 . S DATE=FDA(811.8,"+1,",.03)
"RTN","PXRMEXPU",183,0)
 . W !!,"Exchange File entry ",RNAME," date packed ",DATE," did not get stored!"
"RTN","PXRMEXPU",184,0)
 . W !,"Examine the above error message for the reason.",!
"RTN","PXRMEXPU",185,0)
 . H 2
"RTN","PXRMEXPU",186,0)
 E  S SUCCESS=1
"RTN","PXRMEXPU",187,0)
 Q
"RTN","PXRMEXPU",188,0)
 ;
"RTN","PXRMEXSI")
0^33^B9204601
"RTN","PXRMEXSI",1,0)
PXRMEXSI ; SLC/PKR/PJH - Silent repository entry install. ;06/01/2001
"RTN","PXRMEXSI",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXSI",3,0)
 ;
"RTN","PXRMEXSI",4,0)
 ;======================================================================
"RTN","PXRMEXSI",5,0)
INITMPG ;Initialize ^TMP arrays.
"RTN","PXRMEXSI",6,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXSI",7,0)
 K ^TMP("PXRMEXLC",$J)
"RTN","PXRMEXSI",8,0)
 K ^TMP("PXRMEXLD",$J)
"RTN","PXRMEXSI",9,0)
 K ^TMP("PXRMEXTMP",$J)
"RTN","PXRMEXSI",10,0)
 Q
"RTN","PXRMEXSI",11,0)
 ;
"RTN","PXRMEXSI",12,0)
 ;======================================================================
"RTN","PXRMEXSI",13,0)
INSTALL(PXRMRIEN) ;Install all components in a repository entry.
"RTN","PXRMEXSI",14,0)
 N DNAME,IND,PXRMNMCH,REMNAME
"RTN","PXRMEXSI",15,0)
 ;Initialize TMP globals.
"RTN","PXRMEXSI",16,0)
 D INITMPG
"RTN","PXRMEXSI",17,0)
 ;Build the component list.
"RTN","PXRMEXSI",18,0)
 K ^PXD(811.8,PXRMRIEN,120)
"RTN","PXRMEXSI",19,0)
 D CLIST^PXRMEXU1(.PXRMRIEN)
"RTN","PXRMEXSI",20,0)
 I PXRMRIEN=-1 Q
"RTN","PXRMEXSI",21,0)
 ;Build the selectable list.
"RTN","PXRMEXSI",22,0)
 D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXSI",23,0)
 ;Set the install date and time.
"RTN","PXRMEXSI",24,0)
 S ^TMP("PXRMEXIA",$J,"DT")=$$NOW^XLFDT
"RTN","PXRMEXSI",25,0)
 ;Initialize the name change storage.
"RTN","PXRMEXSI",26,0)
 K PXRMNMCH
"RTN","PXRMEXSI",27,0)
 S (IND,INSTALL)=0
"RTN","PXRMEXSI",28,0)
 F  S IND=$O(^TMP("PXRMEXLC",$J,"SEL",IND)) Q:+IND=0  D
"RTN","PXRMEXSI",29,0)
 . D INSCOM(PXRMRIEN,IND)
"RTN","PXRMEXSI",30,0)
 ;
"RTN","PXRMEXSI",31,0)
 ;Get the dialog name
"RTN","PXRMEXSI",32,0)
 S DNAME=$G(^TMP("PXRMEXTMP",$J,"PXRMDNAM"))
"RTN","PXRMEXSI",33,0)
 ;Link the dialog if it exists
"RTN","PXRMEXSI",34,0)
 I DNAME'="" D
"RTN","PXRMEXSI",35,0)
 .N DIEN,RIEN
"RTN","PXRMEXSI",36,0)
 .;Get the dialog ien
"RTN","PXRMEXSI",37,0)
 .S DIEN=$$EXISTS^PXRMEXIU(801.41,DNAME) Q:'DIEN
"RTN","PXRMEXSI",38,0)
 .;Get the reminder ien
"RTN","PXRMEXSI",39,0)
 .S RIEN=$$EXISTS^PXRMEXIU(811.9,REMNAME) Q:'RIEN
"RTN","PXRMEXSI",40,0)
 .N DA,DIE,DIK,DR
"RTN","PXRMEXSI",41,0)
 .;Set reminder to dialog pointer
"RTN","PXRMEXSI",42,0)
 .S DR="51///^S X=DNAME",DIE="^PXD(811.9,",DA=RIEN
"RTN","PXRMEXSI",43,0)
 .D ^DIE
"RTN","PXRMEXSI",44,0)
 .;Reindex the AG cross-references.
"RTN","PXRMEXSI",45,0)
 .S DIK="^PXD(811.9,",DA=$P(IEN,U)
"RTN","PXRMEXSI",46,0)
 .D IX^DIK
"RTN","PXRMEXSI",47,0)
 ;
"RTN","PXRMEXSI",48,0)
 ;Save the install history.
"RTN","PXRMEXSI",49,0)
 D SAVHIST^PXRMEXU1
"RTN","PXRMEXSI",50,0)
 ;Cleanup TMP globals.
"RTN","PXRMEXSI",51,0)
 D INITMPG
"RTN","PXRMEXSI",52,0)
 Q
"RTN","PXRMEXSI",53,0)
 ;
"RTN","PXRMEXSI",54,0)
 ;======================================================================
"RTN","PXRMEXSI",55,0)
INSCOM(PXRMRIEN,IND) ;Install component IND of PXRMRIEN.
"RTN","PXRMEXSI",56,0)
 N ACTION,ATTR,END,EXISTS,FILENUM,IND120,JND120,NAME
"RTN","PXRMEXSI",57,0)
 N PT01,RTN,START,TEMP
"RTN","PXRMEXSI",58,0)
 S TEMP=^TMP("PXRMEXLC",$J,"SEL",IND)
"RTN","PXRMEXSI",59,0)
 S FILENUM=$P(TEMP,U,1),EXISTS=$P(TEMP,U,4)
"RTN","PXRMEXSI",60,0)
 S IND120=$P(TEMP,U,2),JND120=$P(TEMP,U,3)
"RTN","PXRMEXSI",61,0)
 S TEMP=^PXD(811.8,PXRMRIEN,120,IND120,1,JND120,0)
"RTN","PXRMEXSI",62,0)
 ;Save reminder name for dialog link
"RTN","PXRMEXSI",63,0)
 S REMNAME=$P(TEMP,U)
"RTN","PXRMEXSI",64,0)
 ;If the component already exists then skip it, save the skip in history.
"RTN","PXRMEXSI",65,0)
 I EXISTS D  Q
"RTN","PXRMEXSI",66,0)
 . N FNAME
"RTN","PXRMEXSI",67,0)
 . I FILENUM=0 S FNAME="ROUTINE"
"RTN","PXRMEXSI",68,0)
 . E  S FNAME=$$GET1^DID(FILENUM,"","","NAME","","MSG")
"RTN","PXRMEXSI",69,0)
 . S NAME=$P(TEMP,U,1)
"RTN","PXRMEXSI",70,0)
 . S ^TMP("PXRMEXIA",$J,IND,FNAME,NAME,"S")=""
"RTN","PXRMEXSI",71,0)
 S START=$P(TEMP,U,2)
"RTN","PXRMEXSI",72,0)
 S END=$P(TEMP,U,3)
"RTN","PXRMEXSI",73,0)
 S TEMP=^PXD(811.8,PXRMRIEN,100,START,0)
"RTN","PXRMEXSI",74,0)
 I FILENUM=0 D
"RTN","PXRMEXSI",75,0)
 . D RTNLD^PXRMEXIC(PXRMRIEN,START,END,.ATTR,.RTN)
"RTN","PXRMEXSI",76,0)
 . S ACTION="I"
"RTN","PXRMEXSI",77,0)
 .;Save what was done for the installation summary.
"RTN","PXRMEXSI",78,0)
 . S ^TMP("PXRMEXIA",$J,IND,"ROUTINE",ATTR("NAME"),ACTION)=""
"RTN","PXRMEXSI",79,0)
 E  D 
"RTN","PXRMEXSI",80,0)
 . S PT01=$P(TEMP,"~",2)
"RTN","PXRMEXSI",81,0)
 . D SETATTR^PXRMEXFI(.ATTR,FILENUM)
"RTN","PXRMEXSI",82,0)
 . S ACTION="I"
"RTN","PXRMEXSI",83,0)
 .;Save what was done for the installation summary.
"RTN","PXRMEXSI",84,0)
 . S ^TMP("PXRMEXIA",$J,IND,ATTR("FILE NAME"),PT01,ACTION)=""
"RTN","PXRMEXSI",85,0)
 ;Install this component.
"RTN","PXRMEXSI",86,0)
 I FILENUM=0 D RTNSAVE^PXRMEXIC(.RTN,ATTR("NAME"))
"RTN","PXRMEXSI",87,0)
 E  D FILE^PXRMEXIC(PXRMRIEN,IND120,JND120,ACTION,.ATTR,.PXRMNMCH)
"RTN","PXRMEXSI",88,0)
 Q
"RTN","PXRMEXSI",89,0)
 ;
"RTN","PXRMEXSR")
1^32
"RTN","PXRMEXU1")
0^21^B74216949
"RTN","PXRMEXU1",1,0)
PXRMEXU1 ; SLC/PKR/PJH - Reminder exchange repository utilities, #1. ;06/01/2001
"RTN","PXRMEXU1",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXU1",3,0)
 ;======================================================================
"RTN","PXRMEXU1",4,0)
CLIST(IEN) ;Build the list of components for the repository
"RTN","PXRMEXU1",5,0)
 ;entry IEN.
"RTN","PXRMEXU1",6,0)
 N CMPNT,COMIND,CSTART,CSUM,END,FILENAME,FILENUM,IND,INDEXAT,JND,LINE
"RTN","PXRMEXU1",7,0)
 N NCMPNT,NCTYPE,NITEMS,NLINES,PT01,START,TEMP,TAG,TYPE,UCOM,VRSN
"RTN","PXRMEXU1",8,0)
 S LINE=^PXD(811.8,IEN,100,1,0)
"RTN","PXRMEXU1",9,0)
 ;Make sure it is XML version 1.
"RTN","PXRMEXU1",10,0)
 I LINE'["<?xml version=""1.0""" D  Q
"RTN","PXRMEXU1",11,0)
 . W !,"Exchange file entry not in proper format!"
"RTN","PXRMEXU1",12,0)
 . S IEN=-1
"RTN","PXRMEXU1",13,0)
 . H 2
"RTN","PXRMEXU1",14,0)
 S LINE=^PXD(811.8,IEN,100,2,0)
"RTN","PXRMEXU1",15,0)
 I LINE'="<REMINDER_EXCHANGE_FILE_ENTRY>" D  Q
"RTN","PXRMEXU1",16,0)
 . W !,"Not an Exchange File entry!"
"RTN","PXRMEXU1",17,0)
 . S IEN=-1
"RTN","PXRMEXU1",18,0)
 . H 2
"RTN","PXRMEXU1",19,0)
 ;S CSUM=$P(LINE,U,2)
"RTN","PXRMEXU1",20,0)
 S LINE=^PXD(811.8,IEN,100,3,0)
"RTN","PXRMEXU1",21,0)
 S VRSN=$$GETTAGV^PXRMEXU3(LINE,"<PACKAGE_VERSION>")
"RTN","PXRMEXU1",22,0)
 S LINE=^PXD(811.8,IEN,100,4,0)
"RTN","PXRMEXU1",23,0)
 S INDEXAT=+$P(LINE,"<INDEX_AT>",2)
"RTN","PXRMEXU1",24,0)
 S LINE=^PXD(811.8,IEN,100,INDEXAT,0)
"RTN","PXRMEXU1",25,0)
 I LINE'="<INDEX>" D  Q
"RTN","PXRMEXU1",26,0)
 . W !,"Index missing, cannot continue!"
"RTN","PXRMEXU1",27,0)
 . S IEN=-1
"RTN","PXRMEXU1",28,0)
 . H 2
"RTN","PXRMEXU1",29,0)
 S JND=INDEXAT+1
"RTN","PXRMEXU1",30,0)
 S LINE=^PXD(811.8,IEN,100,JND,0)
"RTN","PXRMEXU1",31,0)
 S NCMPNT=+$$GETTAGV^PXRMEXU3(LINE,"<NUMBER_OF_COMPONENTS>")
"RTN","PXRMEXU1",32,0)
 F IND=1:1:NCMPNT D
"RTN","PXRMEXU1",33,0)
 . K END,START
"RTN","PXRMEXU1",34,0)
 . F  S JND=JND+1,LINE=^PXD(811.8,IEN,100,JND,0) Q:LINE="</COMPONENT>"  D
"RTN","PXRMEXU1",35,0)
 .. S TAG=$$GETTAG^PXRMEXU3(LINE)
"RTN","PXRMEXU1",36,0)
 .. I TAG["START" S START(TAG)=+$$GETTAGV^PXRMEXU3(LINE,TAG)
"RTN","PXRMEXU1",37,0)
 .. I TAG["END" S END(TAG)=+$$GETTAGV^PXRMEXU3(LINE,TAG)
"RTN","PXRMEXU1",38,0)
 . I $D(START("<M_ROUTINE_START>")) D
"RTN","PXRMEXU1",39,0)
 .. S CSTART=START("<M_ROUTINE_START>")
"RTN","PXRMEXU1",40,0)
 .. S CMPNT(IND,"TYPE")="ROUTINE"
"RTN","PXRMEXU1",41,0)
 .. S LINE=^PXD(811.8,IEN,100,CSTART+1,0)
"RTN","PXRMEXU1",42,0)
 .. S CMPNT(IND,"NAME")=$$GETTAGV^PXRMEXU3(LINE,"<ROUTINE_NAME>")
"RTN","PXRMEXU1",43,0)
 .. S CMPNT(IND,"FILENUM")=0
"RTN","PXRMEXU1",44,0)
 ..;Save the actual start and end of the code.
"RTN","PXRMEXU1",45,0)
 .. S CMPNT(IND,"START")=START("<ROUTINE_CODE_START>")
"RTN","PXRMEXU1",46,0)
 .. S CMPNT(IND,"END")=END("<ROUTINE_CODE_END>")
"RTN","PXRMEXU1",47,0)
 . I $D(START("<FILE_START>")) D
"RTN","PXRMEXU1",48,0)
 .. S CSTART=START("<FILE_START>")
"RTN","PXRMEXU1",49,0)
 .. S LINE=^PXD(811.8,IEN,100,CSTART+1,0)
"RTN","PXRMEXU1",50,0)
 .. S (CMPNT(IND,"TYPE"),CMPNT(IND,"FILENAME"))=$$GETTAGV^PXRMEXU3(LINE,"<FILE_NAME>")
"RTN","PXRMEXU1",51,0)
 .. S LINE=^PXD(811.8,IEN,100,CSTART+2,0)
"RTN","PXRMEXU1",52,0)
 .. S CMPNT(IND,"FILENUM")=$$GETTAGV^PXRMEXU3(LINE,"<FILE_NUMBER>")
"RTN","PXRMEXU1",53,0)
 .. S LINE=^PXD(811.8,IEN,100,CSTART+3,0)
"RTN","PXRMEXU1",54,0)
 .. S (CMPNT(IND,"NAME"),CMPNT(IND,"POINT_01"))=$$GETTAGV^PXRMEXU3(LINE,"<POINT_01>")
"RTN","PXRMEXU1",55,0)
 ..;Save the actual start and end of the FileMan FDA.
"RTN","PXRMEXU1",56,0)
 .. S CMPNT(IND,"FDA_START")=START("<FDA_START>")
"RTN","PXRMEXU1",57,0)
 .. S CMPNT(IND,"FDA_END")=END("<FDA_END>")
"RTN","PXRMEXU1",58,0)
 .. S CMPNT(IND,"IEN_ROOT_START")=$G(START("<IEN_ROOT_START>"))
"RTN","PXRMEXU1",59,0)
 .. S CMPNT(IND,"IEN_ROOT_END")=$G(END("<IEN_ROOT_END>"))
"RTN","PXRMEXU1",60,0)
 ;Build some indexes to order the component list.
"RTN","PXRMEXU1",61,0)
 F IND=1:1:NCMPNT D
"RTN","PXRMEXU1",62,0)
 . S TYPE=CMPNT(IND,"TYPE")
"RTN","PXRMEXU1",63,0)
 . S COMIND(TYPE,IND)=""
"RTN","PXRMEXU1",64,0)
 . S UCOM(TYPE)=""
"RTN","PXRMEXU1",65,0)
 ;Set the 0 node.
"RTN","PXRMEXU1",66,0)
 S ^PXD(811.8,IEN,120,0)=U_"811.802A"_U_NCMPNT_U_NCMPNT
"RTN","PXRMEXU1",67,0)
 ;Save the components in the order routines, findings, dialog, and
"RTN","PXRMEXU1",68,0)
 ;definition.
"RTN","PXRMEXU1",69,0)
 S NCTYPE=0
"RTN","PXRMEXU1",70,0)
 S TYPE="ROUTINE"
"RTN","PXRMEXU1",71,0)
 S NITEMS=0
"RTN","PXRMEXU1",72,0)
 S IND=""
"RTN","PXRMEXU1",73,0)
 F  S IND=$O(COMIND(TYPE,IND)) Q:IND=""  D
"RTN","PXRMEXU1",74,0)
 . S NITEMS=NITEMS+1
"RTN","PXRMEXU1",75,0)
 . I NITEMS=1 D
"RTN","PXRMEXU1",76,0)
 .. S NCTYPE=NCTYPE+1
"RTN","PXRMEXU1",77,0)
 .. S TEMP=TYPE_U_CMPNT(IND,"FILENUM")
"RTN","PXRMEXU1",78,0)
 . S ^PXD(811.8,IEN,120,NCTYPE,1,NITEMS,0)=CMPNT(IND,"NAME")_U_CMPNT(IND,"START")_U_CMPNT(IND,"END")
"RTN","PXRMEXU1",79,0)
 I NCTYPE>0 D
"RTN","PXRMEXU1",80,0)
 . S ^PXD(811.8,IEN,120,NCTYPE,0)=TEMP_U_NITEMS
"RTN","PXRMEXU1",81,0)
 . S ^PXD(811.8,IEN,120,NCTYPE,1,0)=U_"811.8021A"_U_NITEMS_U_NITEMS
"RTN","PXRMEXU1",82,0)
 ;
"RTN","PXRMEXU1",83,0)
 ;Do the other findings.
"RTN","PXRMEXU1",84,0)
 K UCOM("ROUTINE")
"RTN","PXRMEXU1",85,0)
 S TYPE=""
"RTN","PXRMEXU1",86,0)
 F  S TYPE=$O(UCOM(TYPE)) Q:TYPE=""  D
"RTN","PXRMEXU1",87,0)
 . I (TYPE="REMINDER DIALOG")!(TYPE="REMINDER DEFINITION") Q
"RTN","PXRMEXU1",88,0)
 . S NITEMS=0
"RTN","PXRMEXU1",89,0)
 . S IND=""
"RTN","PXRMEXU1",90,0)
 . F  S IND=$O(COMIND(TYPE,IND)) Q:IND=""  D
"RTN","PXRMEXU1",91,0)
 .. S NITEMS=NITEMS+1
"RTN","PXRMEXU1",92,0)
 .. I NITEMS=1 D
"RTN","PXRMEXU1",93,0)
 ... S NCTYPE=NCTYPE+1
"RTN","PXRMEXU1",94,0)
 ... S TEMP=TYPE_U_CMPNT(IND,"FILENUM")
"RTN","PXRMEXU1",95,0)
 .. S ^PXD(811.8,IEN,120,NCTYPE,1,NITEMS,0)=CMPNT(IND,"NAME")_U_CMPNT(IND,"FDA_START")_U_CMPNT(IND,"FDA_END")_U_$G(CMPNT(IND,"IEN_ROOT_START"))_U_$G(CMPNT(IND,"IEN_ROOT_END"))
"RTN","PXRMEXU1",96,0)
 . I NCTYPE>0 D
"RTN","PXRMEXU1",97,0)
 .. S ^PXD(811.8,IEN,120,NCTYPE,0)=TEMP_U_NITEMS
"RTN","PXRMEXU1",98,0)
 .. S ^PXD(811.8,IEN,120,NCTYPE,1,0)=U_"811.8021A"_U_NITEMS_U_NITEMS
"RTN","PXRMEXU1",99,0)
 ;
"RTN","PXRMEXU1",100,0)
 ;Do any reminder dialogs and the reminder definition.
"RTN","PXRMEXU1",101,0)
 F TYPE="REMINDER DEFINITION","REMINDER DIALOG" D
"RTN","PXRMEXU1",102,0)
 . I '$D(UCOM(TYPE)) Q
"RTN","PXRMEXU1",103,0)
 . S NITEMS=0
"RTN","PXRMEXU1",104,0)
 . S IND=""
"RTN","PXRMEXU1",105,0)
 . F  S IND=$O(COMIND(TYPE,IND)) Q:IND=""  D
"RTN","PXRMEXU1",106,0)
 .. S NITEMS=NITEMS+1
"RTN","PXRMEXU1",107,0)
 .. I NITEMS=1 D
"RTN","PXRMEXU1",108,0)
 ... S NCTYPE=NCTYPE+1
"RTN","PXRMEXU1",109,0)
 ... S TEMP=TYPE_U_CMPNT(IND,"FILENUM")
"RTN","PXRMEXU1",110,0)
 .. S ^PXD(811.8,IEN,120,NCTYPE,1,NITEMS,0)=CMPNT(IND,"NAME")_U_CMPNT(IND,"FDA_START")_U_CMPNT(IND,"FDA_END")_U_$G(CMPNT(IND,"IEN_ROOT_START"))_U_$G(CMPNT(IND,"IEN_ROOT_END"))
"RTN","PXRMEXU1",111,0)
 . I NCTYPE>0 D
"RTN","PXRMEXU1",112,0)
 .. S ^PXD(811.8,IEN,120,NCTYPE,0)=TEMP_U_NITEMS
"RTN","PXRMEXU1",113,0)
 .. S ^PXD(811.8,IEN,120,NCTYPE,1,0)=U_"811.8021A"_U_NITEMS_U_NITEMS
"RTN","PXRMEXU1",114,0)
 ;
"RTN","PXRMEXU1",115,0)
 ;Save the number of component types.
"RTN","PXRMEXU1",116,0)
 S ^PXD(811.8,IEN,119)=NCTYPE
"RTN","PXRMEXU1",117,0)
 Q
"RTN","PXRMEXU1",118,0)
 ;
"RTN","PXRMEXU1",119,0)
 ;======================================================================
"RTN","PXRMEXU1",120,0)
DELETE(LIST) ;Delete the repository entries in LIST.
"RTN","PXRMEXU1",121,0)
 N DA,DIK
"RTN","PXRMEXU1",122,0)
 S DIK="^PXD(811.8,"
"RTN","PXRMEXU1",123,0)
 S DA=""
"RTN","PXRMEXU1",124,0)
 F  S DA=$O(LIST(DA)) Q:+DA=0  D ^DIK
"RTN","PXRMEXU1",125,0)
 Q
"RTN","PXRMEXU1",126,0)
 ;
"RTN","PXRMEXU1",127,0)
 ;======================================================================
"RTN","PXRMEXU1",128,0)
DELHIST(RIEN,IHIND) ;Delete install history IHIND in repository entry RIEN.
"RTN","PXRMEXU1",129,0)
 N DATE
"RTN","PXRMEXU1",130,0)
 S DATE=$P(^PXD(811.8,RIEN,130,IHIND,0),U)
"RTN","PXRMEXU1",131,0)
 K ^PXD(811.8,RIEN,130,IHIND)
"RTN","PXRMEXU1",132,0)
 K ^PXD(811.8,RIEN,130,"B",DATE)
"RTN","PXRMEXU1",133,0)
 Q
"RTN","PXRMEXU1",134,0)
 ;
"RTN","PXRMEXU1",135,0)
 ;======================================================================
"RTN","PXRMEXU1",136,0)
DESC(RIEN,RNAME,SOURCE,DATEP,DESC,KEYWORD) ;Build the description.
"RTN","PXRMEXU1",137,0)
 N JND,LC,NKEYW
"RTN","PXRMEXU1",138,0)
 S LC=1
"RTN","PXRMEXU1",139,0)
 S ^PXD(811.8,RIEN,110,LC,0)="Reminder:    "_RNAME
"RTN","PXRMEXU1",140,0)
 S LC=LC+1
"RTN","PXRMEXU1",141,0)
 S ^PXD(811.8,RIEN,110,LC,0)="Source:      "_SOURCE
"RTN","PXRMEXU1",142,0)
 S LC=LC+1
"RTN","PXRMEXU1",143,0)
 S ^PXD(811.8,RIEN,110,LC,0)="Date Packed: "_DATEP
"RTN","PXRMEXU1",144,0)
 S LC=LC+1
"RTN","PXRMEXU1",145,0)
 S ^PXD(811.8,RIEN,110,LC,0)=""
"RTN","PXRMEXU1",146,0)
 ;Add the user's description.
"RTN","PXRMEXU1",147,0)
 S LC=LC+1
"RTN","PXRMEXU1",148,0)
 S ^PXD(811.8,RIEN,110,LC,0)="Description:"
"RTN","PXRMEXU1",149,0)
 F JND=1:1:+$P($G(@DESC@(1,0)),U,4) D
"RTN","PXRMEXU1",150,0)
 . S LC=LC+1
"RTN","PXRMEXU1",151,0)
 . S ^PXD(811.8,RIEN,110,LC,0)=@DESC@(1,JND,0)
"RTN","PXRMEXU1",152,0)
 S LC=LC+1
"RTN","PXRMEXU1",153,0)
 S ^PXD(811.8,RIEN,110,LC,0)=""
"RTN","PXRMEXU1",154,0)
 ;Add the keywords.
"RTN","PXRMEXU1",155,0)
 S LC=LC+1
"RTN","PXRMEXU1",156,0)
 S ^PXD(811.8,RIEN,110,LC,0)="Keywords:"
"RTN","PXRMEXU1",157,0)
 S NKEYW=+$P($G(@KEYWORD@(1,0)),U,4)
"RTN","PXRMEXU1",158,0)
 I NKEYW=0 D
"RTN","PXRMEXU1",159,0)
 . S LC=LC+1
"RTN","PXRMEXU1",160,0)
 . S ^PXD(811.8,RIEN,110,LC,0)="No keywords given"
"RTN","PXRMEXU1",161,0)
 F JND=1:1:NKEYW D
"RTN","PXRMEXU1",162,0)
 . S LC=LC+1
"RTN","PXRMEXU1",163,0)
 . S ^PXD(811.8,RIEN,110,LC,0)=@KEYWORD@(1,JND,0)
"RTN","PXRMEXU1",164,0)
 S LC=LC+1
"RTN","PXRMEXU1",165,0)
 S ^PXD(811.8,RIEN,110,LC,0)=""
"RTN","PXRMEXU1",166,0)
 S LC=LC+1
"RTN","PXRMEXU1",167,0)
 S ^PXD(811.8,RIEN,110,LC,0)="Components:"
"RTN","PXRMEXU1",168,0)
 S ^PXD(811.8,RIEN,110,0)=U_811.804_U_LC_U_LC
"RTN","PXRMEXU1",169,0)
 Q
"RTN","PXRMEXU1",170,0)
 ;
"RTN","PXRMEXU1",171,0)
 ;======================================================================
"RTN","PXRMEXU1",172,0)
RIEN(LIEN) ;Given the list ien return the repository ien.
"RTN","PXRMEXU1",173,0)
 N RIEN
"RTN","PXRMEXU1",174,0)
 S RIEN=$G(^TMP("PXRMEXLR",$J,"IDX",LIEN,LIEN))
"RTN","PXRMEXU1",175,0)
 Q RIEN
"RTN","PXRMEXU1",176,0)
 ;
"RTN","PXRMEXU1",177,0)
 ;======================================================================
"RTN","PXRMEXU1",178,0)
SAVHIST ;Save the installation history in the repository.
"RTN","PXRMEXU1",179,0)
 N ACTION,DATE,CMPNT,FTYPE,IND,INDEX,ITEM,JND,NEWNAME,TEMP,USER
"RTN","PXRMEXU1",180,0)
 ;Find the first open spot in the Installation History node.
"RTN","PXRMEXU1",181,0)
 S (IND,JND)=0
"RTN","PXRMEXU1",182,0)
 F  S IND=+$O(^PXD(811.8,PXRMRIEN,130,IND)) S JND=JND+1 Q:(IND=0)!(JND>IND)
"RTN","PXRMEXU1",183,0)
 ;Set the 0 node.
"RTN","PXRMEXU1",184,0)
 S ^PXD(811.8,PXRMRIEN,130,0)=U_"811.803DA"_U_JND_U_JND
"RTN","PXRMEXU1",185,0)
 S IND=JND
"RTN","PXRMEXU1",186,0)
 S DATE=^TMP("PXRMEXIA",$J,"DT")
"RTN","PXRMEXU1",187,0)
 S USER=$$GET1^DIQ(200,DUZ,.01,"")
"RTN","PXRMEXU1",188,0)
 S ^PXD(811.8,PXRMRIEN,130,IND,0)=DATE_U_USER
"RTN","PXRMEXU1",189,0)
 S ^PXD(811.8,PXRMRIEN,130,"B",DATE,IND)=""
"RTN","PXRMEXU1",190,0)
 S (INDEX,JND)=0
"RTN","PXRMEXU1",191,0)
 F  S INDEX=$O(^TMP("PXRMEXIA",$J,INDEX)) Q:+INDEX=0  D
"RTN","PXRMEXU1",192,0)
 . S JND=JND+1
"RTN","PXRMEXU1",193,0)
 . S CMPNT=$O(^TMP("PXRMEXIA",$J,INDEX,""))
"RTN","PXRMEXU1",194,0)
 . S ITEM=$O(^TMP("PXRMEXIA",$J,INDEX,CMPNT,""))
"RTN","PXRMEXU1",195,0)
 . S ACTION=$O(^TMP("PXRMEXIA",$J,INDEX,CMPNT,ITEM,""))
"RTN","PXRMEXU1",196,0)
 . S NEWNAME=$G(^TMP("PXRMEXIA",$J,INDEX,CMPNT,ITEM,ACTION))
"RTN","PXRMEXU1",197,0)
 . S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,0)=INDEX_U_CMPNT_U_ITEM_U_ACTION_U_NEWNAME
"RTN","PXRMEXU1",198,0)
 .;Set the 0 node.
"RTN","PXRMEXU1",199,0)
 . S ^PXD(811.8,PXRMRIEN,130,IND,1,0)=U_"811.8031A"_U_JND_U_JND
"RTN","PXRMEXU1",200,0)
 .;Check for finding item changes and save them.
"RTN","PXRMEXU1",201,0)
 . S FTYPE=""
"RTN","PXRMEXU1",202,0)
 . I CMPNT["DEFINITION" S FTYPE="DEFF"
"RTN","PXRMEXU1",203,0)
 . I CMPNT["DIALOG" S FTYPE="DIAF"
"RTN","PXRMEXU1",204,0)
 . I CMPNT["TERM" S FTYPE="TRMF"
"RTN","PXRMEXU1",205,0)
 . I (FTYPE'=""),($D(^TMP("PXRMEXIA",$J,FTYPE))) D
"RTN","PXRMEXU1",206,0)
 .. N FI,FINDING,KND,OFINDING
"RTN","PXRMEXU1",207,0)
 .. S KND=2
"RTN","PXRMEXU1",208,0)
 .. S FI=""
"RTN","PXRMEXU1",209,0)
 .. F  S FI=$O(^TMP("PXRMEXIA",$J,FTYPE,FI)) Q:FI=""  D
"RTN","PXRMEXU1",210,0)
 ... S OFINDING=$O(^TMP("PXRMEXIA",$J,FTYPE,FI,""))
"RTN","PXRMEXU1",211,0)
 ... S FINDING=^TMP("PXRMEXIA",$J,FTYPE,FI,OFINDING)
"RTN","PXRMEXU1",212,0)
 ... I OFINDING=FINDING Q
"RTN","PXRMEXU1",213,0)
 ... S KND=KND+1
"RTN","PXRMEXU1",214,0)
 ... S TEMP=$E(OFINDING,1,33)
"RTN","PXRMEXU1",215,0)
 ... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,KND,0)="    "_TEMP_$$INSCHR^PXRMEXLC((35-$L(TEMP))," ")_FINDING
"RTN","PXRMEXU1",216,0)
 .. S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,0)=U_"811.80315A"_U_KND_U_KND
"RTN","PXRMEXU1",217,0)
 .. I KND>2 D
"RTN","PXRMEXU1",218,0)
 ... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,1,0)="   Finding Changes"
"RTN","PXRMEXU1",219,0)
 ... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,2,0)="     Original"_$$INSCHR^PXRMEXLC(27," ")_"New"
"RTN","PXRMEXU1",220,0)
 .;
"RTN","PXRMEXU1",221,0)
 .;Check for TIU template replacements and save them.
"RTN","PXRMEXU1",222,0)
 . I CMPNT["DIALOG" S FTYPE="DIATIU"
"RTN","PXRMEXU1",223,0)
 . E  S FTYPE=""
"RTN","PXRMEXU1",224,0)
 . I (FTYPE'=""),($D(^TMP("PXRMEXIA",$J,FTYPE))) D
"RTN","PXRMEXU1",225,0)
 .. N KND,OTIUT,TIUT,TYPE
"RTN","PXRMEXU1",226,0)
 .. S TYPE=""
"RTN","PXRMEXU1",227,0)
 .. S KND=2
"RTN","PXRMEXU1",228,0)
 .. F  S TYPE=$O(^TMP("PXRMEXIA",$J,FTYPE,TYPE)) Q:TYPE=""  D
"RTN","PXRMEXU1",229,0)
 ... S OTIUT=""
"RTN","PXRMEXU1",230,0)
 ... F  S OTIUT=$O(^TMP("PXRMEXIA",$J,FTYPE,TYPE,OTIUT)) Q:OTIUT=""  D
"RTN","PXRMEXU1",231,0)
 .... S TIUT=$G(^TMP("PXRMEXIA",$J,FTYPE,TYPE,OTIUT))
"RTN","PXRMEXU1",232,0)
 .... I OTIUT=TIUT Q
"RTN","PXRMEXU1",233,0)
 .... I '$D(^TMP("PXRMEXIA",$J,FTYPE,TYPE,OTIUT,ITEM)) Q
"RTN","PXRMEXU1",234,0)
 .... S KND=KND+1
"RTN","PXRMEXU1",235,0)
 .... S TEMP=$E(OTIUT,1,33)
"RTN","PXRMEXU1",236,0)
 .... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,KND,0)="    "_TEMP_$$INSCHR^PXRMEXLC((35-$L(TEMP))," ")_TIUT
"RTN","PXRMEXU1",237,0)
 ... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,0)=U_"811.80315A"_U_KND_U_KND
"RTN","PXRMEXU1",238,0)
 ... I KND>2 D
"RTN","PXRMEXU1",239,0)
 .... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,1,0)="   "_TYPE
"RTN","PXRMEXU1",240,0)
 .... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,2,0)="     Original"_$$INSCHR^PXRMEXLC(27," ")_"New"
"RTN","PXRMEXU1",241,0)
 ;
"RTN","PXRMEXU1",242,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXU1",243,0)
 Q
"RTN","PXRMEXU1",244,0)
 ;
"RTN","PXRMEXU2")
0^22^B63347518
"RTN","PXRMEXU2",1,0)
PXRMEXU2 ; SLC/PKR/PJH - Reminder exchange repository utilities, #2. ;05/30/2001
"RTN","PXRMEXU2",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXU2",3,0)
 ;======================================================================
"RTN","PXRMEXU2",4,0)
FDA(IND,LC,TMPIND,FILENAME) ;Build the XML FDA output.
"RTN","PXRMEXU2",5,0)
 N FIELD,FILENUM,INDEX,INDEX0,JND,SIENS,WPC
"RTN","PXRMEXU2",6,0)
 S LC=LC+1
"RTN","PXRMEXU2",7,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="<FILEMAN_FDA>"
"RTN","PXRMEXU2",8,0)
 S LC=LC+1
"RTN","PXRMEXU2",9,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="<![CDATA["
"RTN","PXRMEXU2",10,0)
 ;Get the file number.
"RTN","PXRMEXU2",11,0)
 S FILENUM=""
"RTN","PXRMEXU2",12,0)
 F  S FILENUM=$O(^TMP(TMPIND,$J,IND,FILENAME,FILENUM)) Q:FILENUM=""  D
"RTN","PXRMEXU2",13,0)
 .;Get the source ien string.
"RTN","PXRMEXU2",14,0)
 . S SIENS=""
"RTN","PXRMEXU2",15,0)
 . F  S SIENS=$O(^TMP(TMPIND,$J,IND,FILENAME,FILENUM,SIENS)) Q:SIENS=""  D
"RTN","PXRMEXU2",16,0)
 .. S INDEX0=FILENUM_";"_SIENS
"RTN","PXRMEXU2",17,0)
 ..;Get the field number and store the data.
"RTN","PXRMEXU2",18,0)
 .. S FIELD=""
"RTN","PXRMEXU2",19,0)
 .. F  S FIELD=$O(^TMP(TMPIND,$J,IND,FILENAME,FILENUM,SIENS,FIELD)) Q:FIELD=""  D
"RTN","PXRMEXU2",20,0)
 ... S INDEX=INDEX0_";"_FIELD
"RTN","PXRMEXU2",21,0)
 ...;If there is another index past the field then this is a
"RTN","PXRMEXU2",22,0)
 ...;word-processing field.
"RTN","PXRMEXU2",23,0)
 ... I $D(^TMP(TMPIND,$J,IND,FILENAME,FILENUM,SIENS,FIELD))=11 D
"RTN","PXRMEXU2",24,0)
 .... S WPC=$O(^TMP(TMPIND,$J,IND,FILENAME,FILENUM,SIENS,FIELD,""),-1)
"RTN","PXRMEXU2",25,0)
 .... S LC=LC+1
"RTN","PXRMEXU2",26,0)
 .... S ^TMP("PXRMEXRS",$J,LC,0)=INDEX_"~WP-start~"_WPC
"RTN","PXRMEXU2",27,0)
 .... F JND=1:1:WPC D
"RTN","PXRMEXU2",28,0)
 ..... S LC=LC+1
"RTN","PXRMEXU2",29,0)
 ..... S ^TMP("PXRMEXRS",$J,LC,0)=^TMP(TMPIND,$J,IND,FILENAME,FILENUM,SIENS,FIELD,JND)
"RTN","PXRMEXU2",30,0)
 ... E  D
"RTN","PXRMEXU2",31,0)
 .... S LC=LC+1
"RTN","PXRMEXU2",32,0)
 .... S ^TMP("PXRMEXRS",$J,LC,0)=INDEX_"~"_^TMP(TMPIND,$J,IND,FILENAME,FILENUM,SIENS,FIELD)
"RTN","PXRMEXU2",33,0)
 S LC=LC+1
"RTN","PXRMEXU2",34,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="]]>"
"RTN","PXRMEXU2",35,0)
 S LC=LC+1
"RTN","PXRMEXU2",36,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="</FILEMAN_FDA>"
"RTN","PXRMEXU2",37,0)
 Q
"RTN","PXRMEXU2",38,0)
 ;
"RTN","PXRMEXU2",39,0)
 ;======================================================================
"RTN","PXRMEXU2",40,0)
IENROOT(IND,LC,TMPIND,FILENAME) ;Build the XML IEN_ROOT output.
"RTN","PXRMEXU2",41,0)
 N INDEX,VALUE
"RTN","PXRMEXU2",42,0)
 S LC=LC+1
"RTN","PXRMEXU2",43,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="<IEN_ROOT>"
"RTN","PXRMEXU2",44,0)
 S LC=LC+1
"RTN","PXRMEXU2",45,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="<![CDATA["
"RTN","PXRMEXU2",46,0)
 S INDEX=0
"RTN","PXRMEXU2",47,0)
 F  S INDEX=$O(^TMP(TMPIND,$J,IND,FILENAME,INDEX)) Q:INDEX=""  D
"RTN","PXRMEXU2",48,0)
 . S LC=LC+1
"RTN","PXRMEXU2",49,0)
 . S ^TMP("PXRMEXRS",$J,LC,0)=INDEX_U_^TMP(TMPIND,$J,IND,FILENAME,INDEX)
"RTN","PXRMEXU2",50,0)
 S LC=LC+1
"RTN","PXRMEXU2",51,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="]]>"
"RTN","PXRMEXU2",52,0)
 S LC=LC+1
"RTN","PXRMEXU2",53,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="</IEN_ROOT>"
"RTN","PXRMEXU2",54,0)
 Q
"RTN","PXRMEXU2",55,0)
 ;
"RTN","PXRMEXU2",56,0)
 ;======================================================================
"RTN","PXRMEXU2",57,0)
STOREPR(SUCCESS,RTM,TMPIND) ;^TMP(TMPIND,$J contains data to be
"RTN","PXRMEXU2",58,0)
 ;stored in the repository. Routines will be found in
"RTN","PXRMEXU2",59,0)
 ;^TMP(TMPIND,$J,"ROUTINE",ROUTINE NAME,n) where n is the line number.
"RTN","PXRMEXU2",60,0)
 ;File entries will be found in ^TMP(TMPIND,$J,N,FILENAME,indexes).
"RTN","PXRMEXU2",61,0)
 ;This is output from the GETS^DIQ call. There are NUMF file entries.
"RTN","PXRMEXU2",62,0)
 ;Format and store it as XML in the repository.
"RTN","PXRMEXU2",63,0)
 N CS,DATE,DTEST,EINDEX,FDA,FILENAME,FILENUM
"RTN","PXRMEXU2",64,0)
 N IENROOT,IND,JND,LC,NCMPNT,NEWFILE,NUMF,PT01,RNAME
"RTN","PXRMEXU2",65,0)
 N SIENS,SOURCE,TEMP,VERSN
"RTN","PXRMEXU2",66,0)
 ;If anything went wrong in the packing process then ^TMP(TMPIND,$J
"RTN","PXRMEXU2",67,0)
 ;will not exist.
"RTN","PXRMEXU2",68,0)
 I '$D(^TMP(TMPIND,$J)) S SUCCESS=0 Q
"RTN","PXRMEXU2",69,0)
 ;
"RTN","PXRMEXU2",70,0)
 K ^TMP("PXRMEXRS",$J)
"RTN","PXRMEXU2",71,0)
 S ^TMP("PXRMEXRS",$J,1,0)="<?xml version=""1.0"" standalone=""yes""?>"
"RTN","PXRMEXU2",72,0)
 S ^TMP("PXRMEXRS",$J,2,0)="<REMINDER_EXCHANGE_FILE_ENTRY>"
"RTN","PXRMEXU2",73,0)
 S VERSN=^PXRM(800,1,"VERSION")
"RTN","PXRMEXU2",74,0)
 S ^TMP("PXRMEXRS",$J,3,0)="<PACKAGE_VERSION>"_VERSN_"</PACKAGE_VERSION>"
"RTN","PXRMEXU2",75,0)
 ;The pointer to the index will be on line 4 so leave room.
"RTN","PXRMEXU2",76,0)
 S LC=4
"RTN","PXRMEXU2",77,0)
 ;Save the source information.
"RTN","PXRMEXU2",78,0)
 S LC=LC+1
"RTN","PXRMEXU2",79,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="<SOURCE>"
"RTN","PXRMEXU2",80,0)
 S LC=LC+1
"RTN","PXRMEXU2",81,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="<NAME>"_^TMP(TMPIND,$J,"SRC","REMINDER")_"</NAME>"
"RTN","PXRMEXU2",82,0)
 S LC=LC+1
"RTN","PXRMEXU2",83,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="<USER>"_^TMP(TMPIND,$J,"SRC","USER")_"</USER>"
"RTN","PXRMEXU2",84,0)
 S LC=LC+1
"RTN","PXRMEXU2",85,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="<SITE>"_^TMP(TMPIND,$J,"SRC","SITE")_"</SITE>"
"RTN","PXRMEXU2",86,0)
 S LC=LC+1
"RTN","PXRMEXU2",87,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="<DATE_PACKED>"_^TMP(TMPIND,$J,"SRC","DATE")_"</DATE_PACKED>"
"RTN","PXRMEXU2",88,0)
 S LC=LC+1
"RTN","PXRMEXU2",89,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="</SOURCE>"
"RTN","PXRMEXU2",90,0)
 ;
"RTN","PXRMEXU2",91,0)
 ;Save the description.
"RTN","PXRMEXU2",92,0)
 S LC=LC+1
"RTN","PXRMEXU2",93,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="<DESCRIPTION><![CDATA["
"RTN","PXRMEXU2",94,0)
 S IND=0
"RTN","PXRMEXU2",95,0)
 F  S IND=$O(^TMP(TMPIND,$J,"DESC",1,IND)) Q:+IND=0  D
"RTN","PXRMEXU2",96,0)
 . S LC=LC+1
"RTN","PXRMEXU2",97,0)
 . S ^TMP("PXRMEXRS",$J,LC,0)=^TMP(TMPIND,$J,"DESC",1,IND,0)
"RTN","PXRMEXU2",98,0)
 S LC=LC+1
"RTN","PXRMEXU2",99,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="]]></DESCRIPTION>"
"RTN","PXRMEXU2",100,0)
 ;
"RTN","PXRMEXU2",101,0)
 ;Save the keywords or phrases.
"RTN","PXRMEXU2",102,0)
 S LC=LC+1
"RTN","PXRMEXU2",103,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="<KEYWORDS>"
"RTN","PXRMEXU2",104,0)
 S IND=0
"RTN","PXRMEXU2",105,0)
 F  S IND=$O(^TMP(TMPIND,$J,"KEYWORD",1,IND)) Q:+IND=0  D
"RTN","PXRMEXU2",106,0)
 . S TEMP=^TMP(TMPIND,$J,"KEYWORD",1,IND,0)
"RTN","PXRMEXU2",107,0)
 . I TEMP["," D
"RTN","PXRMEXU2",108,0)
 .. F JND=1:1:$L(TEMP,",") D
"RTN","PXRMEXU2",109,0)
 ... S LC=LC+1
"RTN","PXRMEXU2",110,0)
 ... S ^TMP("PXRMEXRS",$J,LC,0)="<KEYWORD>"_$P(TEMP,",",JND)_"</KEYWORD>"
"RTN","PXRMEXU2",111,0)
 . E  D
"RTN","PXRMEXU2",112,0)
 .. S LC=LC+1
"RTN","PXRMEXU2",113,0)
 .. S ^TMP("PXRMEXRS",$J,LC,0)="<KEYWORD>"_TEMP_"</KEYWORD>"
"RTN","PXRMEXU2",114,0)
 S LC=LC+1
"RTN","PXRMEXU2",115,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="</KEYWORDS>"
"RTN","PXRMEXU2",116,0)
 ;
"RTN","PXRMEXU2",117,0)
 S NCMPNT=0
"RTN","PXRMEXU2",118,0)
 ;Do routines first.
"RTN","PXRMEXU2",119,0)
 S RNAME=""
"RTN","PXRMEXU2",120,0)
 F  S RNAME=$O(^TMP(TMPIND,$J,"ROUTINE",RNAME)) Q:RNAME=""  D
"RTN","PXRMEXU2",121,0)
 . S LC=LC+1
"RTN","PXRMEXU2",122,0)
 . S ^TMP("PXRMEXRS",$J,LC,0)="<M_ROUTINE>"
"RTN","PXRMEXU2",123,0)
 . S NCMPNT=NCMPNT+1
"RTN","PXRMEXU2",124,0)
 . S EINDEX(NCMPNT,"M_ROUTINE_START")=LC
"RTN","PXRMEXU2",125,0)
 . S LC=LC+1
"RTN","PXRMEXU2",126,0)
 . S ^TMP("PXRMEXRS",$J,LC,0)="<ROUTINE_NAME>"_RNAME_"</ROUTINE_NAME>"
"RTN","PXRMEXU2",127,0)
 . S LC=LC+1
"RTN","PXRMEXU2",128,0)
 . S ^TMP("PXRMEXRS",$J,LC,0)="<CODE>"
"RTN","PXRMEXU2",129,0)
 . S LC=LC+1
"RTN","PXRMEXU2",130,0)
 . S ^TMP("PXRMEXRS",$J,LC,0)="<![CDATA["
"RTN","PXRMEXU2",131,0)
 . S EINDEX(NCMPNT,"ROUTINE_CODE_START")=LC+1
"RTN","PXRMEXU2",132,0)
 . S LINE=0
"RTN","PXRMEXU2",133,0)
 . F  S LINE=$O(^TMP(TMPIND,$J,"ROUTINE",RNAME,LINE)) Q:LINE=""  D
"RTN","PXRMEXU2",134,0)
 .. S LC=LC+1
"RTN","PXRMEXU2",135,0)
 .. S ^TMP("PXRMEXRS",$J,LC,0)=^TMP(TMPIND,$J,"ROUTINE",RNAME,LINE,0)
"RTN","PXRMEXU2",136,0)
 . S LC=LC+1
"RTN","PXRMEXU2",137,0)
 . S ^TMP("PXRMEXRS",$J,LC,0)="]]>"
"RTN","PXRMEXU2",138,0)
 . S LC=LC+1
"RTN","PXRMEXU2",139,0)
 . S ^TMP("PXRMEXRS",$J,LC,0)="</CODE>"
"RTN","PXRMEXU2",140,0)
 . S LC=LC+1
"RTN","PXRMEXU2",141,0)
 . S ^TMP("PXRMEXRS",$J,LC,0)="</M_ROUTINE>"
"RTN","PXRMEXU2",142,0)
 . S EINDEX(NCMPNT,"ROUTINE_CODE_END")=LC-3
"RTN","PXRMEXU2",143,0)
 ;
"RTN","PXRMEXU2",144,0)
 ;Do file entries.
"RTN","PXRMEXU2",145,0)
 ;For word processing fields the first line is
"RTN","PXRMEXU2",146,0)
 ;file number;source ien string;field~WP-start~line count
"RTN","PXRMEXU2",147,0)
 ;The next line count lines are the WP data.
"RTN","PXRMEXU2",148,0)
 S NUMF=+$G(^TMP(TMPIND,$J,"NUMF"))
"RTN","PXRMEXU2",149,0)
 S FILENAME=""
"RTN","PXRMEXU2",150,0)
 F IND=1:1:NUMF D
"RTN","PXRMEXU2",151,0)
 . F  S FILENAME=$O(^TMP(TMPIND,$J,IND,FILENAME)) Q:FILENAME=""  D
"RTN","PXRMEXU2",152,0)
 .. I FILENAME["IENROOT" D
"RTN","PXRMEXU2",153,0)
 ... S NEWFILE=0
"RTN","PXRMEXU2",154,0)
 ... S IENROOT=1
"RTN","PXRMEXU2",155,0)
 .. E  D
"RTN","PXRMEXU2",156,0)
 ... S NEWFILE=1
"RTN","PXRMEXU2",157,0)
 ... S IENROOT=0
"RTN","PXRMEXU2",158,0)
 .. I NEWFILE D
"RTN","PXRMEXU2",159,0)
 ... S FILENUM=$O(^TMP(TMPIND,$J,IND,FILENAME,""))
"RTN","PXRMEXU2",160,0)
 ... S SIENS=$O(^TMP(TMPIND,$J,IND,FILENAME,FILENUM,""))
"RTN","PXRMEXU2",161,0)
 ... S LC=LC+1
"RTN","PXRMEXU2",162,0)
 ... S ^TMP("PXRMEXRS",$J,LC,0)="<FILEMAN_FILE>"
"RTN","PXRMEXU2",163,0)
 ... S NCMPNT=NCMPNT+1
"RTN","PXRMEXU2",164,0)
 ... S EINDEX(NCMPNT,"FILE_START")=LC
"RTN","PXRMEXU2",165,0)
 ... S LC=LC+1
"RTN","PXRMEXU2",166,0)
 ... S ^TMP("PXRMEXRS",$J,LC,0)="<FILE_NAME>"_FILENAME_"</FILE_NAME>"
"RTN","PXRMEXU2",167,0)
 ... S LC=LC+1
"RTN","PXRMEXU2",168,0)
 ... S ^TMP("PXRMEXRS",$J,LC,0)="<FILE_NUMBER>"_FILENUM_"</FILE_NUMBER>"
"RTN","PXRMEXU2",169,0)
 ... S LC=LC+1
"RTN","PXRMEXU2",170,0)
 ... S PT01=^TMP(TMPIND,$J,IND,FILENAME,FILENUM,SIENS,.01)
"RTN","PXRMEXU2",171,0)
 ... S ^TMP("PXRMEXRS",$J,LC,0)="<POINT_01>"_PT01_"</POINT_01>"
"RTN","PXRMEXU2",172,0)
 ... S LC=LC+1
"RTN","PXRMEXU2",173,0)
 ... S ^TMP("PXRMEXRS",$J,LC,0)="<INTERNAL_ENTRY_NUMBER>"_+SIENS_"</INTERNAL_ENTRY_NUMBER>"
"RTN","PXRMEXU2",174,0)
 ... S EINDEX(NCMPNT,"FDA_START")=LC+3
"RTN","PXRMEXU2",175,0)
 ... D FDA(IND,.LC,TMPIND,FILENAME)
"RTN","PXRMEXU2",176,0)
 ... S EINDEX(NCMPNT,"FDA_END")=LC-2
"RTN","PXRMEXU2",177,0)
 ..;The ien root information always comes after the FDA.
"RTN","PXRMEXU2",178,0)
 .. I IENROOT D
"RTN","PXRMEXU2",179,0)
 ... S EINDEX(NCMPNT,"IEN_ROOT_START")=LC+3
"RTN","PXRMEXU2",180,0)
 ... D IENROOT(IND,.LC,TMPIND,FILENAME)
"RTN","PXRMEXU2",181,0)
 ... S EINDEX(NCMPNT,"IEN_ROOT_END")=LC-2
"RTN","PXRMEXU2",182,0)
 . S LC=LC+1
"RTN","PXRMEXU2",183,0)
 . S ^TMP("PXRMEXRS",$J,LC,0)="</FILEMAN_FILE>"
"RTN","PXRMEXU2",184,0)
 ;Save the index.
"RTN","PXRMEXU2",185,0)
 S LC=LC+1
"RTN","PXRMEXU2",186,0)
 S ^TMP("PXRMEXRS",$J,4,0)="<INDEX_AT>"_LC_"</INDEX_AT>"
"RTN","PXRMEXU2",187,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="<INDEX>"
"RTN","PXRMEXU2",188,0)
 S LC=LC+1
"RTN","PXRMEXU2",189,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="<NUMBER_OF_COMPONENTS>"_NCMPNT_"</NUMBER_OF_COMPONENTS>"
"RTN","PXRMEXU2",190,0)
 F IND=1:1:NCMPNT D
"RTN","PXRMEXU2",191,0)
 . S LC=LC+1
"RTN","PXRMEXU2",192,0)
 . S ^TMP("PXRMEXRS",$J,LC,0)="<COMPONENT>"
"RTN","PXRMEXU2",193,0)
 . S JND=""
"RTN","PXRMEXU2",194,0)
 . F  S JND=$O(EINDEX(IND,JND)) Q:JND=""  D
"RTN","PXRMEXU2",195,0)
 .. S LC=LC+1
"RTN","PXRMEXU2",196,0)
 .. S ^TMP("PXRMEXRS",$J,LC,0)="<"_JND_">"_EINDEX(IND,JND)_"</"_JND_">"
"RTN","PXRMEXU2",197,0)
 . S LC=LC+1
"RTN","PXRMEXU2",198,0)
 . S ^TMP("PXRMEXRS",$J,LC,0)="</COMPONENT>"
"RTN","PXRMEXU2",199,0)
 S LC=LC+1
"RTN","PXRMEXU2",200,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="</INDEX>"
"RTN","PXRMEXU2",201,0)
 S LC=LC+1
"RTN","PXRMEXU2",202,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="</REMINDER_EXCHANGE_FILE_ENTRY>"
"RTN","PXRMEXU2",203,0)
 ;Save the line count, checksum, and version number
"RTN","PXRMEXU2",204,0)
 ;S GBL="^TMP(""PXRMEXRS"",$J)"
"RTN","PXRMEXU2",205,0)
 ;S GBL=$NA(@GBL)
"RTN","PXRMEXU2",206,0)
 ;S CS=$$HFCSGBL^PXRMEXCS(GBL)
"RTN","PXRMEXU2",207,0)
 ;S ^TMP("PXRMEXRS",$J,1,0)=LC_U_CS_U_VERSN
"RTN","PXRMEXU2",208,0)
 ;Establish the entry in the repository.
"RTN","PXRMEXU2",209,0)
 S RNAME=$P(RTM,U,2)
"RTN","PXRMEXU2",210,0)
 S SOURCE=^TMP(TMPIND,$J,"SRC","USER")_" at "_^TMP(TMPIND,$J,"SRC","SITE")
"RTN","PXRMEXU2",211,0)
 S DATE=^TMP(TMPIND,$J,"SRC","DATE")
"RTN","PXRMEXU2",212,0)
 S FDA(811.8,"+1,",.01)=RNAME
"RTN","PXRMEXU2",213,0)
 S FDA(811.8,"+1,",.02)=SOURCE
"RTN","PXRMEXU2",214,0)
 S FDA(811.8,"+1,",.03)=DATE
"RTN","PXRMEXU2",215,0)
 D UPDATE^PXRMEXPU(.SUCCESS,.FDA,.IENROOT)
"RTN","PXRMEXU2",216,0)
 I SUCCESS D
"RTN","PXRMEXU2",217,0)
 . M ^PXD(811.8,IENROOT(1),100)=^TMP("PXRMEXRS",$J)
"RTN","PXRMEXU2",218,0)
 .;Set the 0 node.
"RTN","PXRMEXU2",219,0)
 . S ^PXD(811.8,IENROOT(1),100,0)=U_811.801_U_LC_U_LC
"RTN","PXRMEXU2",220,0)
 .;Create the description for this repository entry.
"RTN","PXRMEXU2",221,0)
 . N DATEP,DESC,KEYWORD,RNAME,SOURCE
"RTN","PXRMEXU2",222,0)
 . S RNAME=^TMP(TMPIND,$J,"SRC","REMINDER")
"RTN","PXRMEXU2",223,0)
 . S SOURCE=^TMP(TMPIND,$J,"SRC","USER")_" at "_^TMP(TMPIND,$J,"SRC","SITE")
"RTN","PXRMEXU2",224,0)
 . S DATEP=^TMP(TMPIND,$J,"SRC","DATE")
"RTN","PXRMEXU2",225,0)
 . S DESC="^TMP(TMPIND,$J,""DESC"")"
"RTN","PXRMEXU2",226,0)
 . S KEYWORD="^TMP(TMPIND,$J,""KEYWORD"")"
"RTN","PXRMEXU2",227,0)
 . D DESC^PXRMEXU1(IENROOT(1),RNAME,SOURCE,DATEP,$NA(@DESC),$NA(@KEYWORD))
"RTN","PXRMEXU2",228,0)
 K ^TMP("PXRMEXRS",$J)
"RTN","PXRMEXU2",229,0)
 K ^TMP(TMPIND,$J)
"RTN","PXRMEXU2",230,0)
 Q
"RTN","PXRMEXU2",231,0)
 ;
"RTN","PXRMEXU2",232,0)
 ;======================================================================
"RTN","PXRMEXU2",233,0)
XMLOUT(IEN) ;Write out the XML content of repository entry ien.
"RTN","PXRMEXU2",234,0)
 N LC,NLINES
"RTN","PXRMEXU2",235,0)
 S NLINES=$O(^PXD(811.8,IEN,100,""),-1)
"RTN","PXRMEXU2",236,0)
 F LC=1:1:NLINES D
"RTN","PXRMEXU2",237,0)
 . W !,^PXD(811.8,IEN,100,LC,0)
"RTN","PXRMEXU2",238,0)
 Q
"RTN","PXRMEXU2",239,0)
 ;
"RTN","PXRMEXU3")
0^23^B3563686
"RTN","PXRMEXU3",1,0)
PXRMEXU3 ; SLC/PKR - Reminder exchange XML utilities, #3. ;06/15/2001
"RTN","PXRMEXU3",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXU3",3,0)
 ;======================================================================
"RTN","PXRMEXU3",4,0)
DESC(XMLSRC,DESC) ;Find the description in the XML source and load it
"RTN","PXRMEXU3",5,0)
 ;into DESC.
"RTN","PXRMEXU3",6,0)
 N DFOUND,DONE,IND,JND,SAVE,TAG,XMLLINE
"RTN","PXRMEXU3",7,0)
 S (DFOUND,DONE,JND,SAVE)=0
"RTN","PXRMEXU3",8,0)
 F IND=1:1  Q:DONE  D
"RTN","PXRMEXU3",9,0)
 . S XMLLINE=@XMLSRC@(IND,0)
"RTN","PXRMEXU3",10,0)
 . I 'DFOUND S TAG=$$GETTAG(XMLLINE)
"RTN","PXRMEXU3",11,0)
 . I TAG="<DESCRIPTION>" S DFOUND=1,TAG=""
"RTN","PXRMEXU3",12,0)
 . I DFOUND,'SAVE,XMLLINE["<![CDATA[" S SAVE=1 Q
"RTN","PXRMEXU3",13,0)
 . I SAVE,XMLLINE["]]>" S SAVE=0
"RTN","PXRMEXU3",14,0)
 . I 'SAVE,XMLLINE["</DESCRIPTION>" S DONE=1 Q
"RTN","PXRMEXU3",15,0)
 . I SAVE D
"RTN","PXRMEXU3",16,0)
 .. S JND=JND+1
"RTN","PXRMEXU3",17,0)
 .. S DESC(1,JND,0)=XMLLINE
"RTN","PXRMEXU3",18,0)
 . S DESC(1,0)=U_U_U_JND
"RTN","PXRMEXU3",19,0)
 Q
"RTN","PXRMEXU3",20,0)
 ;
"RTN","PXRMEXU3",21,0)
 ;======================================================================
"RTN","PXRMEXU3",22,0)
GETTAG(XMLLINE) ;Return the XML tag.
"RTN","PXRMEXU3",23,0)
 N END,START,VALUE
"RTN","PXRMEXU3",24,0)
 S START=$F(XMLLINE,"<",1)-1
"RTN","PXRMEXU3",25,0)
 S END=$F(XMLLINE,">",START)-1
"RTN","PXRMEXU3",26,0)
 S VALUE=$E(XMLLINE,START,END)
"RTN","PXRMEXU3",27,0)
 Q VALUE
"RTN","PXRMEXU3",28,0)
 ;
"RTN","PXRMEXU3",29,0)
 ;======================================================================
"RTN","PXRMEXU3",30,0)
GETTAGV(XMLLINE,TAG) ;Return the value associated with the XML tag.
"RTN","PXRMEXU3",31,0)
 N END,ENDTAG,START,TAGL,VALUE
"RTN","PXRMEXU3",32,0)
 S TAGL=$L(TAG)
"RTN","PXRMEXU3",33,0)
 S ENDTAG="</"_$E(TAG,2,TAGL)
"RTN","PXRMEXU3",34,0)
 S START=$F(XMLLINE,TAG,1)
"RTN","PXRMEXU3",35,0)
 S END=$F(XMLLINE,ENDTAG,START)-(TAGL+2)
"RTN","PXRMEXU3",36,0)
 S VALUE=$E(XMLLINE,START,END)
"RTN","PXRMEXU3",37,0)
 Q VALUE
"RTN","PXRMEXU3",38,0)
 ;
"RTN","PXRMEXU3",39,0)
 ;======================================================================
"RTN","PXRMEXU3",40,0)
GETATTR(XMLLINE,ATTR) ;Return the value of attribute ATTR from the XML line
"RTN","PXRMEXU3",41,0)
 ;XMLINE
"RTN","PXRMEXU3",42,0)
 N END,START,VALUE
"RTN","PXRMEXU3",43,0)
 S ATTR=ATTR_"="""
"RTN","PXRMEXU3",44,0)
 S START=$F(XMLLINE,ATTR,1)
"RTN","PXRMEXU3",45,0)
 S END=$F(XMLLINE,"""",START)-2
"RTN","PXRMEXU3",46,0)
 S VALUE=$E(XMLLINE,START,END)
"RTN","PXRMEXU3",47,0)
 Q VALUE
"RTN","PXRMEXU3",48,0)
 ;
"RTN","PXRMEXU3",49,0)
 ;======================================================================
"RTN","PXRMEXU3",50,0)
KEYWORD(XMLSRC,KEYWORD) ;Find the keywords in the XML source and load it
"RTN","PXRMEXU3",51,0)
 ;into KEYWORD.
"RTN","PXRMEXU3",52,0)
 N DONE,IND,JND,TAG,XMLLINE
"RTN","PXRMEXU3",53,0)
 S (DONE,JND)=0
"RTN","PXRMEXU3",54,0)
 F IND=1:1  Q:DONE  D
"RTN","PXRMEXU3",55,0)
 . S XMLLINE=@XMLSRC@(IND,0)
"RTN","PXRMEXU3",56,0)
 . S TAG=$$GETTAG(XMLLINE)
"RTN","PXRMEXU3",57,0)
 . I TAG="<KEYWORD>" D  Q
"RTN","PXRMEXU3",58,0)
 .. S JND=JND+1
"RTN","PXRMEXU3",59,0)
 .. S KEYWORD(1,JND,0)=$$GETTAGV(XMLLINE,TAG)
"RTN","PXRMEXU3",60,0)
 . I TAG="</KEYWORDS>" S DONE=1 Q
"RTN","PXRMEXU3",61,0)
 S KEYWORD(1,0)=U_U_U_JND
"RTN","PXRMEXU3",62,0)
 Q
"RTN","PXRMEXU3",63,0)
 ;
"RTN","PXRMEXU4")
0^24^B30902708
"RTN","PXRMEXU4",1,0)
PXRMEXU4 ; SLC/PJH,PKR - Reminder Exchange #4, dialog changes. ;06/21/2001
"RTN","PXRMEXU4",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMEXU4",3,0)
 ;======================================================================
"RTN","PXRMEXU4",4,0)
DLG(FDA,NAMECHG) ;Check the dialog for renamed entries
"RTN","PXRMEXU4",5,0)
 N ABBR,ACTION,ALIST,DNAM,IEN,IENS,FILENUM,FINDING,NEWNAM,OFINDING
"RTN","PXRMEXU4",6,0)
 N PT01,RESULT,RRG,SRC,WP
"RTN","PXRMEXU4",7,0)
 S IENS=$O(FDA(801.41,""))
"RTN","PXRMEXU4",8,0)
 ;Definition .01
"RTN","PXRMEXU4",9,0)
 S (PT01,DNAM)=FDA(801.41,IENS,.01)
"RTN","PXRMEXU4",10,0)
 I $D(NAMECHG(801.41,PT01)) D
"RTN","PXRMEXU4",11,0)
 .S (FDA(801.41,IENS,.01),DNAM)=NAMECHG(801.41,PT01)
"RTN","PXRMEXU4",12,0)
 ;
"RTN","PXRMEXU4",13,0)
 ;Build list of finding types
"RTN","PXRMEXU4",14,0)
 D BLDALIST^PXRMVPTR(801.4118,.01,.ALIST)
"RTN","PXRMEXU4",15,0)
 ;Plus field 15 files
"RTN","PXRMEXU4",16,0)
 S ALIST("MH")=601,ALIST("TX")=811.2
"RTN","PXRMEXU4",17,0)
 ;
"RTN","PXRMEXU4",18,0)
 ;Process SOURCE REMINDER
"RTN","PXRMEXU4",19,0)
 S SRC=+$G(FDA(801.41,IENS,2))
"RTN","PXRMEXU4",20,0)
 S IEN=$$EXISTS^PXRMEXIU(811.9,SRC)
"RTN","PXRMEXU4",21,0)
 I IEN=0 K FDA(801.41,IENS,2)
"RTN","PXRMEXU4",22,0)
 ;
"RTN","PXRMEXU4",23,0)
 ;Clear RESULT if not defined
"RTN","PXRMEXU4",24,0)
 S RESULT=+$G(FDA(801.41,IENS,55))
"RTN","PXRMEXU4",25,0)
 S IEN=$$EXISTS^PXRMEXIU(801.41,RESULT)
"RTN","PXRMEXU4",26,0)
 I IEN=0 K FDA(801.41,IENS,55)
"RTN","PXRMEXU4",27,0)
 ;
"RTN","PXRMEXU4",28,0)
 ;Process FINDING ITEM
"RTN","PXRMEXU4",29,0)
 S (FINDING,OFINDING)=$G(FDA(801.41,IENS,15)),ACTION=""
"RTN","PXRMEXU4",30,0)
 I FINDING'="" D  I ACTION="Q" K FDA S PXRMDONE=1 Q
"RTN","PXRMEXU4",31,0)
 .S ABBR=$P(FINDING,".",1)
"RTN","PXRMEXU4",32,0)
 .S PT01=$P(FINDING,".",2)
"RTN","PXRMEXU4",33,0)
 .S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXU4",34,0)
 .I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXU4",35,0)
 ..S FINDING=ABBR_"."_NAMECHG(FILENUM,PT01)
"RTN","PXRMEXU4",36,0)
 ..S FDA(801.41,IENS,15)=FINDING
"RTN","PXRMEXU4",37,0)
 . S IEN=+$$VFIND1^PXRMEXIU(FINDING,.ALIST)
"RTN","PXRMEXU4",38,0)
 . I IEN=0 D
"RTN","PXRMEXU4",39,0)
 ..;Get replacement
"RTN","PXRMEXU4",40,0)
 ..N DIC,DUOUT,MSG,X,Y
"RTN","PXRMEXU4",41,0)
 ..S MSG(1)=" "
"RTN","PXRMEXU4",42,0)
 ..S MSG(2)="FINDING entry "_FINDING_" does not exist."
"RTN","PXRMEXU4",43,0)
 ..D MES^XPDUTL(.MSG)
"RTN","PXRMEXU4",44,0)
 ..S ACTION=$$GETACT^PXRMEXIU("DPQ") I ACTION="S" S ACTION="Q"
"RTN","PXRMEXU4",45,0)
 ..I ACTION="Q" Q
"RTN","PXRMEXU4",46,0)
 ..I ACTION="D" K FDA(801.41,IENS,15) Q
"RTN","PXRMEXU4",47,0)
 ..S DIC=FILENUM
"RTN","PXRMEXU4",48,0)
 ..S DIC(0)="AEMNQ"
"RTN","PXRMEXU4",49,0)
 ..S Y=-1
"RTN","PXRMEXU4",50,0)
 ..F  Q:+Y'=-1  D
"RTN","PXRMEXU4",51,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",52,0)
 ...I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXU4",53,0)
 ...D ^DIC
"RTN","PXRMEXU4",54,0)
 ...I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXU4",55,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",56,0)
 ...I $D(DUOUT) S Y="" Q
"RTN","PXRMEXU4",57,0)
 ...I Y=-1 D BMES^XPDUTL(,"You must input a replacement!")
"RTN","PXRMEXU4",58,0)
 ..I Y="" S ACTION="Q" Q
"RTN","PXRMEXU4",59,0)
 ..S FINDING=ABBR_"."_$P(Y,U,2)
"RTN","PXRMEXU4",60,0)
 ..S FDA(801.41,IENS,15)=FINDING
"RTN","PXRMEXU4",61,0)
 .;Save the finding information for the history.
"RTN","PXRMEXU4",62,0)
 .I FINDING'=OFINDING D
"RTN","PXRMEXU4",63,0)
 .. S ^TMP("PXRMEXIA",$J,"DIAF",$P(IENS,",",1),OFINDING)=FINDING
"RTN","PXRMEXU4",64,0)
 ;
"RTN","PXRMEXU4",65,0)
 ;Look for replacements of TIU templates.
"RTN","PXRMEXU4",66,0)
 I $D(NAMECHG(8927.1)) D
"RTN","PXRMEXU4",67,0)
 .S WP=$G(FDA(801.41,IENS,25))
"RTN","PXRMEXU4",68,0)
 .I WP'="" D TIURPL("{FLD:",WP,.NAMECHG,8927.1)
"RTN","PXRMEXU4",69,0)
 .S WP=$G(FDA(801.41,IENS,35))
"RTN","PXRMEXU4",70,0)
 ;
"RTN","PXRMEXU4",71,0)
 ;Process ADDITIONAL FINDINGS
"RTN","PXRMEXU4",72,0)
 S IENS="",ACTION=""
"RTN","PXRMEXU4",73,0)
 F  S IENS=$O(FDA(801.4118,IENS)) Q:IENS=""  D  I ACTION="Q" K FDA S PXRMDONE=1 Q
"RTN","PXRMEXU4",74,0)
 . S (FINDING,OFINDING)=FDA(801.4118,IENS,.01)
"RTN","PXRMEXU4",75,0)
 . S ABBR=$P(FINDING,".",1)
"RTN","PXRMEXU4",76,0)
 . S PT01=$P(FINDING,".",2)
"RTN","PXRMEXU4",77,0)
 . S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXU4",78,0)
 . I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXU4",79,0)
 .. S FINDING=ABBR_"."_NAMECHG(FILENUM,PT01)
"RTN","PXRMEXU4",80,0)
 .. S FDA(801.4118,IENS,.01)=FINDING
"RTN","PXRMEXU4",81,0)
 . S IEN=+$$VFIND1^PXRMEXIU(FINDING,.ALIST)
"RTN","PXRMEXU4",82,0)
 . I IEN=0 D  Q:ACTION="Q"
"RTN","PXRMEXU4",83,0)
 ..;Get replacement
"RTN","PXRMEXU4",84,0)
 .. N DIC,DUOUT,MSG,X,Y
"RTN","PXRMEXU4",85,0)
 .. S MSG(1)=" "
"RTN","PXRMEXU4",86,0)
 .. S MSG(2)="ADDITIONAL FINDING entry "_FINDING_" does not exist."
"RTN","PXRMEXU4",87,0)
 .. D MES^XPDUTL(.MSG)
"RTN","PXRMEXU4",88,0)
 .. S ACTION=$$GETACT^PXRMEXIU("DPQ")
"RTN","PXRMEXU4",89,0)
 .. I ACTION="S" S ACTION="Q"
"RTN","PXRMEXU4",90,0)
 .. I ACTION="Q" Q
"RTN","PXRMEXU4",91,0)
 .. I ACTION="D" K FDA(801.4118,IENS) Q
"RTN","PXRMEXU4",92,0)
 .. S DIC=FILENUM
"RTN","PXRMEXU4",93,0)
 .. S DIC(0)="AEMNQ"
"RTN","PXRMEXU4",94,0)
 .. S Y=-1
"RTN","PXRMEXU4",95,0)
 .. F  Q:+Y'=-1  D
"RTN","PXRMEXU4",96,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",97,0)
 ... I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXU4",98,0)
 ... D ^DIC
"RTN","PXRMEXU4",99,0)
 ... I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXU4",100,0)
 ... I $D(DUOUT) S Y="" Q
"RTN","PXRMEXU4",101,0)
 ... I Y=-1 D BMES^XPDUTL("You must input a replacement!")
"RTN","PXRMEXU4",102,0)
 .. I Y="" S ACTION="Q" Q
"RTN","PXRMEXU4",103,0)
 .. S FINDING=ABBR_"."_$P(Y,U,2)
"RTN","PXRMEXU4",104,0)
 .. S FDA(801.4118,IENS,.01)=FINDING
"RTN","PXRMEXU4",105,0)
 . ;Save the finding information for the history.
"RTN","PXRMEXU4",106,0)
 . I FINDING'=OFINDING D
"RTN","PXRMEXU4",107,0)
 .. S ^TMP("PXRMEXIA",$J,"DIAF",$P(IENS,",",1),OFINDING)=FINDING
"RTN","PXRMEXU4",108,0)
 ;
"RTN","PXRMEXU4",109,0)
 ;
"RTN","PXRMEXU4",110,0)
 ;Process DIALOG COMPONENT
"RTN","PXRMEXU4",111,0)
 S IENS="",ACTION=""
"RTN","PXRMEXU4",112,0)
 F  S IENS=$O(FDA(801.412,IENS)) Q:IENS=""  D  I ACTION="Q" K FDA S PXRMDONE=1 Q
"RTN","PXRMEXU4",113,0)
 . S PT01=$G(FDA(801.412,IENS,2)) Q:PT01=""
"RTN","PXRMEXU4",114,0)
 . S FILENUM=801.41,NEWNAM=$G(NAMECHG(FILENUM,PT01))
"RTN","PXRMEXU4",115,0)
 .I NEWNAM'="" D
"RTN","PXRMEXU4",116,0)
 .. S FDA(801.412,IENS,2)=NEWNAM,PT01=NEWNAM
"RTN","PXRMEXU4",117,0)
 .S IEN=$$EXISTS^PXRMEXIU(FILENUM,PT01)
"RTN","PXRMEXU4",118,0)
 .I IEN=0 D
"RTN","PXRMEXU4",119,0)
 ..;Get replacement
"RTN","PXRMEXU4",120,0)
 .. N DIC,DUOUT,MSG,X,Y
"RTN","PXRMEXU4",121,0)
 .. S MSG(1)=" "
"RTN","PXRMEXU4",122,0)
 .. S MSG(2)="COMPONENT DIALOG entry "_PT01_" does not exist."
"RTN","PXRMEXU4",123,0)
 .. D MES^XPDUTL(.MSG)
"RTN","PXRMEXU4",124,0)
 .. S ACTION=$$GETACT^PXRMEXIU("DPQ")
"RTN","PXRMEXU4",125,0)
 .. I ACTION="S" S ACTION="Q"
"RTN","PXRMEXU4",126,0)
 .. I ACTION="Q" Q
"RTN","PXRMEXU4",127,0)
 .. I ACTION="D" K FDA(801.412,IENS) Q
"RTN","PXRMEXU4",128,0)
 .. S DIC=FILENUM
"RTN","PXRMEXU4",129,0)
 .. S DIC(0)="AEMNQ"
"RTN","PXRMEXU4",130,0)
 .. S DIC("S")="I ""EG""[$P(^PXRMD(801.41,Y,0),U,4)"
"RTN","PXRMEXU4",131,0)
 .. S Y=-1
"RTN","PXRMEXU4",132,0)
 .. F  Q:+Y'=-1  D
"RTN","PXRMEXU4",133,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",134,0)
 ... I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXU4",135,0)
 ... D ^DIC
"RTN","PXRMEXU4",136,0)
 ... I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXU4",137,0)
 ... I $D(DUOUT) S Y="" Q
"RTN","PXRMEXU4",138,0)
 ... I Y=-1 D BMES^XPDUTL("You must input a replacement!")
"RTN","PXRMEXU4",139,0)
 .. I Y="" S ACTION="Q" Q
"RTN","PXRMEXU4",140,0)
 .. I Y'="" S FDA(801.412,IENS,2)=$P(Y,U,2)
"RTN","PXRMEXU4",141,0)
 ;
"RTN","PXRMEXU4",142,0)
 Q
"RTN","PXRMEXU4",143,0)
 ;
"RTN","PXRMEXU4",144,0)
 ;======================================================================
"RTN","PXRMEXU4",145,0)
TIURPL(SRCH,WP,NAMEGHC,FILENUM) ;Replace TIU templates whose names have
"RTN","PXRMEXU4",146,0)
 ;changed.
"RTN","PXRMEXU4",147,0)
 N IND,RS,TEXT,TS,TYPE
"RTN","PXRMEXU4",148,0)
 I FILENUM=8927.1 S TYPE="TIU TEMPLATE"
"RTN","PXRMEXU4",149,0)
 E  S TYPE="TIU OBJECT"
"RTN","PXRMEXU4",150,0)
 S IND=1
"RTN","PXRMEXU4",151,0)
 F  S TEXT=$G(@WP@(IND)) Q:TEXT=""  D
"RTN","PXRMEXU4",152,0)
 .I TEXT[SRCH D
"RTN","PXRMEXU4",153,0)
 ..S TS=""
"RTN","PXRMEXU4",154,0)
 ..F  S TS=$O(NAMECHG(FILENUM,TS)) Q:TS=""  D
"RTN","PXRMEXU4",155,0)
 ...S RS=NAMECHG(FILENUM,TS) Q:TEXT'[TS
"RTN","PXRMEXU4",156,0)
 ...S @WP@(IND)=$$STRREP^PXRMUTIL(TEXT,TS,RS)
"RTN","PXRMEXU4",157,0)
 ...;Save the replacement information for the history.
"RTN","PXRMEXU4",158,0)
 ...S ^TMP("PXRMEXIA",$J,"DIATIU",TYPE,TS)=RS
"RTN","PXRMEXU4",159,0)
 ...S ^TMP("PXRMEXIA",$J,"DIATIU",TYPE,TS,DNAM)=""
"RTN","PXRMEXU4",160,0)
 .S IND=IND+1
"RTN","PXRMEXU4",161,0)
 Q
"RTN","PXRMEXU4",162,0)
 ;
"RTN","PXRMINQ")
0^52^B15377401
"RTN","PXRMINQ",1,0)
PXRMINQ ; SLC/PKR - Clinical Reminder inquiry routines. ;06/01/2001
"RTN","PXRMINQ",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMINQ",3,0)
 ;
"RTN","PXRMINQ",4,0)
 ;======================================================================
"RTN","PXRMINQ",5,0)
DISP(DIC,FLDS) ;Display detail.
"RTN","PXRMINQ",6,0)
 N L
"RTN","PXRMINQ",7,0)
 S L=0
"RTN","PXRMINQ",8,0)
 D EN1^DIP
"RTN","PXRMINQ",9,0)
 Q
"RTN","PXRMINQ",10,0)
 ;
"RTN","PXRMINQ",11,0)
 ;======================================================================
"RTN","PXRMINQ",12,0)
HEADER(TEXT) ;Display Header (see DHD variable).
"RTN","PXRMINQ",13,0)
 N TEMP,TEXTLEN,TEXTUND
"RTN","PXRMINQ",14,0)
 S TEXTUND=$TR($J("",IOM)," ","-")
"RTN","PXRMINQ",15,0)
 S TEMP=NOW_"  Page "_DC
"RTN","PXRMINQ",16,0)
 S TEXTLEN=$L(TEMP)
"RTN","PXRMINQ",17,0)
 W TEXT
"RTN","PXRMINQ",18,0)
 W ?(IOM-TEXTLEN),TEMP
"RTN","PXRMINQ",19,0)
 W !,TEXTUND,!!
"RTN","PXRMINQ",20,0)
 Q
"RTN","PXRMINQ",21,0)
 ;
"RTN","PXRMINQ",22,0)
 ;======================================================================
"RTN","PXRMINQ",23,0)
REM ;Do reminder inquiry.
"RTN","PXRMINQ",24,0)
 N BY,DC,DHD,FLDS,FROM,IENN,NOW,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",25,0)
 ;Build the finding variable pointer information.
"RTN","PXRMINQ",26,0)
 D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMINQ",27,0)
 S FLDS="[PXRM DEFINITION INQUIRY]"
"RTN","PXRMINQ",28,0)
 S IENN=0
"RTN","PXRMINQ",29,0)
 S PXRMROOT="^PXD(811.9,"
"RTN","PXRMINQ",30,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",31,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Definition: ","")
"RTN","PXRMINQ",32,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",33,0)
 . D SET(IENN,"REMINDER DEFINITION INQUIRY")
"RTN","PXRMINQ",34,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",35,0)
 Q
"RTN","PXRMINQ",36,0)
 ;
"RTN","PXRMINQ",37,0)
 ;======================================================================
"RTN","PXRMINQ",38,0)
REMVAR(VAR,IEN) ;Do reminder inquiry for reminder IEN return formatted
"RTN","PXRMINQ",39,0)
 ;output in VAR. VAR can be either a local variable or a global.
"RTN","PXRMINQ",40,0)
 ;If it is a local it is indexed for the broker. If it is a global
"RTN","PXRMINQ",41,0)
 ;it should be passed in closed form i.e., ^TMP("PXRMTEST",$J).
"RTN","PXRMINQ",42,0)
 ;It will be returned formatted for ListMan i.e.,
"RTN","PXRMINQ",43,0)
 ;^TMP("PXRMTEST",$J,N,0).
"RTN","PXRMINQ",44,0)
 N %ZIS,BY,DC,DHD,DONE,FF,FILENAME,FILESPEC,FLDS,FROM,GBL,HFNAME
"RTN","PXRMINQ",45,0)
 N IND,IOP,NOW,PATH,PXRMFVPL,PXRMROOT,SUCCESS,TO,UNIQN
"RTN","PXRMINQ",46,0)
 ;Build the finding variable pointer information.
"RTN","PXRMINQ",47,0)
 D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMINQ",48,0)
 S FLDS="[PXRM DEFINITION INQUIRY]"
"RTN","PXRMINQ",49,0)
 S PXRMROOT="^PXD(811.9,"
"RTN","PXRMINQ",50,0)
 D SET(IEN,"")
"RTN","PXRMINQ",51,0)
 ;Make sure the PXRM WORKSTATION device exists.
"RTN","PXRMINQ",52,0)
 D MKWSDEV^PXRMHOST
"RTN","PXRMINQ",53,0)
 ;Set up the output file before DIP is called.
"RTN","PXRMINQ",54,0)
 S PATH=$$PWD^%ZISH
"RTN","PXRMINQ",55,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMINQ",56,0)
 S NOW=$TR(NOW,".","")
"RTN","PXRMINQ",57,0)
 S UNIQN=$J_NOW
"RTN","PXRMINQ",58,0)
 S FILENAME="PXRMWSD"_UNIQN_".DAT"
"RTN","PXRMINQ",59,0)
 S HFNAME=PATH_FILENAME
"RTN","PXRMINQ",60,0)
 S IOP="PXRM WORKSTATION;80"
"RTN","PXRMINQ",61,0)
 S %ZIS("HFSMODE")="W"
"RTN","PXRMINQ",62,0)
 S %ZIS("HFSNAME")=HFNAME
"RTN","PXRMINQ",63,0)
 D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",64,0)
 ;Move the host file into a global.
"RTN","PXRMINQ",65,0)
 S GBL="^TMP(""PXRMINQ"",$J,1,0)"
"RTN","PXRMINQ",66,0)
 S GBL=$NA(@GBL)
"RTN","PXRMINQ",67,0)
 K ^TMP("PXRMINQ",$J)
"RTN","PXRMINQ",68,0)
 S SUCCESS=$$FTG^%ZISH(PATH,FILENAME,GBL,3)
"RTN","PXRMINQ",69,0)
 ;Look for a form feed, remove it and all subsequent lines.
"RTN","PXRMINQ",70,0)
 S FF=$C(12)
"RTN","PXRMINQ",71,0)
 I $G(VAR)["^" D
"RTN","PXRMINQ",72,0)
 . S VAR=$NA(@VAR)
"RTN","PXRMINQ",73,0)
 . S VAR=$P(VAR,")",1)
"RTN","PXRMINQ",74,0)
 . S VAR=VAR_",IND,0)"
"RTN","PXRMINQ",75,0)
 . S (DONE,IND)=0
"RTN","PXRMINQ",76,0)
 . F  Q:DONE  S IND=$O(^TMP("PXRMINQ",$J,IND)) Q:+IND=0  D
"RTN","PXRMINQ",77,0)
 .. I ^TMP("PXRMINQ",$J,IND,0)=FF S DONE=1 Q
"RTN","PXRMINQ",78,0)
 .. S @VAR=^TMP("PXRMINQ",$J,IND,0)
"RTN","PXRMINQ",79,0)
 E  D
"RTN","PXRMINQ",80,0)
 . S (DONE,IND)=0
"RTN","PXRMINQ",81,0)
 . F  Q:DONE  S IND=$O(^TMP("PXRMINQ",$J,IND)) Q:+IND=0  D
"RTN","PXRMINQ",82,0)
 .. S VAR(IND)=^TMP("PXRMINQ",$J,IND,0)
"RTN","PXRMINQ",83,0)
 .. I VAR(IND)=FF K ARRAY(IND) S DONE=1
"RTN","PXRMINQ",84,0)
 K ^TMP("PXRMINQ",$J)
"RTN","PXRMINQ",85,0)
 ;Delete the host file.
"RTN","PXRMINQ",86,0)
 S FILESPEC(FILENAME)=""
"RTN","PXRMINQ",87,0)
 S SUCCESS=$$DEL^%ZISH(PATH,$NA(FILESPEC))
"RTN","PXRMINQ",88,0)
 Q
"RTN","PXRMINQ",89,0)
 ;
"RTN","PXRMINQ",90,0)
 ;======================================================================
"RTN","PXRMINQ",91,0)
SELECT(ROOT,PROMPT,DEFAULT) ;Select the entry.
"RTN","PXRMINQ",92,0)
 N DIC,Y
"RTN","PXRMINQ",93,0)
 S DIC=ROOT
"RTN","PXRMINQ",94,0)
 S DIC(0)="AEMQ"
"RTN","PXRMINQ",95,0)
 S DIC("A")=PROMPT
"RTN","PXRMINQ",96,0)
 I $G(DEFAULT)'="" S DIC("B")=DEFAULT
"RTN","PXRMINQ",97,0)
 D ^DIC
"RTN","PXRMINQ",98,0)
 Q Y
"RTN","PXRMINQ",99,0)
 ;
"RTN","PXRMINQ",100,0)
 ;======================================================================
"RTN","PXRMINQ",101,0)
SET(Y,TEXT) ;Set data for entry selection and the header.
"RTN","PXRMINQ",102,0)
 ;
"RTN","PXRMINQ",103,0)
 ;These variables need to be setup every time because DIP kills them.
"RTN","PXRMINQ",104,0)
 S BY="NUMBER"
"RTN","PXRMINQ",105,0)
 S (FR,TO)=+$P(Y,U,1)
"RTN","PXRMINQ",106,0)
 ;
"RTN","PXRMINQ",107,0)
 ;If TEXT is null then no header.
"RTN","PXRMINQ",108,0)
 I $L(TEXT)>0 D
"RTN","PXRMINQ",109,0)
 . S NOW=$$NOW^XLFDT
"RTN","PXRMINQ",110,0)
 . S NOW=$$FMTE^XLFDT(NOW,"1P")
"RTN","PXRMINQ",111,0)
 . S DHD="W ?0 D HEADER^PXRMINQ("""_TEXT_""")"
"RTN","PXRMINQ",112,0)
 E  S DHD="@@"
"RTN","PXRMINQ",113,0)
 Q
"RTN","PXRMINQ",114,0)
 ;
"RTN","PXRMINQ",115,0)
 ;======================================================================
"RTN","PXRMINQ",116,0)
TAX ;Do taxonomy inquiry.
"RTN","PXRMINQ",117,0)
 N BY,DC,DHD,FLDS,FROM,IENN,NOW,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",118,0)
 S FLDS="[PXRM TAXONOMY INQUIRY]"
"RTN","PXRMINQ",119,0)
 S IENN=0
"RTN","PXRMINQ",120,0)
 S PXRMROOT="^PXD(811.2,"
"RTN","PXRMINQ",121,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",122,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Taxonomy: ","")
"RTN","PXRMINQ",123,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",124,0)
 . D SET(IENN,"REMINDER TAXONOMY INQUIRY")
"RTN","PXRMINQ",125,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",126,0)
 Q
"RTN","PXRMINQ",127,0)
 ;
"RTN","PXRMINQ",128,0)
 ;======================================================================
"RTN","PXRMINQ",129,0)
TERM ;Do term inquiry.
"RTN","PXRMINQ",130,0)
 N BY,DC,DHD,FLDS,FROM,IENN,NOW,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",131,0)
 ;Build the finding variable pointer information
"RTN","PXRMINQ",132,0)
 D BLDRLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMINQ",133,0)
 S FLDS="[PXRM TERM INQUIRY]"
"RTN","PXRMINQ",134,0)
 S IENN=0
"RTN","PXRMINQ",135,0)
 S PXRMROOT="^PXRMD(811.5,"
"RTN","PXRMINQ",136,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",137,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Term: ","")
"RTN","PXRMINQ",138,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",139,0)
 . D SET(IENN,"REMINDER TERM INQUIRY")
"RTN","PXRMINQ",140,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",141,0)
 Q
"RTN","PXRMINQ",142,0)
 ;
"RTN","PXRMINTR")
0^49^B34877012
"RTN","PXRMINTR",1,0)
PXRMINTR ; SLC/PKR/PJH - Input transforms for Clinical Reminders. ;06/06/2001
"RTN","PXRMINTR",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMINTR",3,0)
 ;=======================================================================
"RTN","PXRMINTR",4,0)
VCLASS(X) ;Check for valid CLASS field, ordinary users cannot create
"RTN","PXRMINTR",5,0)
 ;National classes.
"RTN","PXRMINTR",6,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",7,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",8,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",9,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",10,0)
 I (X["N"),(($G(PXRMINST)'=1)!(DUZ(0)'="@")) D  Q 0
"RTN","PXRMINTR",11,0)
 . D EN^DDIOL("You are not allowed to create a NATIONAL class")
"RTN","PXRMINTR",12,0)
 E  Q 1
"RTN","PXRMINTR",13,0)
 ;
"RTN","PXRMINTR",14,0)
 ;=======================================================================
"RTN","PXRMINTR",15,0)
VCOND(X) ;Make sure X is a valid CONDITION.
"RTN","PXRMINTR",16,0)
 I '$D(X) Q
"RTN","PXRMINTR",17,0)
 ;The CONDITION must start with "I ".
"RTN","PXRMINTR",18,0)
 I $E(X,1,2)'="I " D  Q
"RTN","PXRMINTR",19,0)
 . K X
"RTN","PXRMINTR",20,0)
 . D EN^DDIOL("CONDITION must start with ""I"" followed by a single space")
"RTN","PXRMINTR",21,0)
 N COND,CS,RS
"RTN","PXRMINTR",22,0)
 ;Find the condition and the left and right sides.
"RTN","PXRMINTR",23,0)
 S (CS,RS)=""
"RTN","PXRMINTR",24,0)
 F COND="=",">","<","[","]" Q:CS'=""  D
"RTN","PXRMINTR",25,0)
 . S RS=$P(X,COND,2)
"RTN","PXRMINTR",26,0)
 . I RS'="" S CS=COND
"RTN","PXRMINTR",27,0)
 I CS="" D  Q
"RTN","PXRMINTR",28,0)
 . K X
"RTN","PXRMINTR",29,0)
 . D EN^DDIOL("CONDITION must use a conditional operator i.e., =, >, <, [, or ]")
"RTN","PXRMINTR",30,0)
 ;As a safety measure everything after the "I " cannot contain space
"RTN","PXRMINTR",31,0)
 ;or ^.
"RTN","PXRMINTR",32,0)
 S RS=$E(X,3,$L(X))
"RTN","PXRMINTR",33,0)
 S RS=$TR(RS," ^","~")
"RTN","PXRMINTR",34,0)
 S X="I "_RS
"RTN","PXRMINTR",35,0)
 D ^DIM
"RTN","PXRMINTR",36,0)
 I '$D(X) D EN^DDIOL("This is not a valid CONDITION")
"RTN","PXRMINTR",37,0)
 Q
"RTN","PXRMINTR",38,0)
 ;
"RTN","PXRMINTR",39,0)
 ;=======================================================================
"RTN","PXRMINTR",40,0)
VFINDING(X) ;Check X to see if it is a valid finding. This is the input
"RTN","PXRMINTR",41,0)
 ;transform on the .01 field of the reminder findings multiple. Data
"RTN","PXRMINTR",42,0)
 ;element 811.902,.01.
"RTN","PXRMINTR",43,0)
 ;Include stubs for all possible finding types in case we need input
"RTN","PXRMINTR",44,0)
 ;transforms on them.
"RTN","PXRMINTR",45,0)
 ;I X["AUTTEDT(" Q 1
"RTN","PXRMINTR",46,0)
 ;I X["AUTTEXAM(" Q 1
"RTN","PXRMINTR",47,0)
 I X["AUTTHF(" Q $$VHF(X)
"RTN","PXRMINTR",48,0)
 ;I X["AUTTIMM(" Q 1
"RTN","PXRMINTR",49,0)
 ;I X["AUTTSK(" Q 1
"RTN","PXRMINTR",50,0)
 ;I X["GMRD(120.51," Q 1
"RTN","PXRMINTR",51,0)
 I X["LAB(60," Q $$VLAB(X)
"RTN","PXRMINTR",52,0)
 ;I X["ORD(101.43," Q 1
"RTN","PXRMINTR",53,0)
 I X["PXD(811.2," Q $$VTAX(X)
"RTN","PXRMINTR",54,0)
 ;I X["PXRMD(811.4," Q 1
"RTN","PXRMINTR",55,0)
 ;I X["PXRMD(811.5," Q 1
"RTN","PXRMINTR",56,0)
 ;I X["PS(50.605," Q 1
"RTN","PXRMINTR",57,0)
 ;I X["PSDRUG(" Q 1
"RTN","PXRMINTR",58,0)
 ;I X["PSNDF(50.6," Q 1
"RTN","PXRMINTR",59,0)
 ;I X["RAMIS(71," Q 1
"RTN","PXRMINTR",60,0)
 I X["YTT(601," Q $$VMH(X)
"RTN","PXRMINTR",61,0)
 Q 1
"RTN","PXRMINTR",62,0)
 ;
"RTN","PXRMINTR",63,0)
 ;=======================================================================
"RTN","PXRMINTR",64,0)
VHF(X) ;Check for valid health factor findings. It must be a factor, not
"RTN","PXRMINTR",65,0)
 ;a category.
"RTN","PXRMINTR",66,0)
 N CAT,IEN,TEMP,TYPE
"RTN","PXRMINTR",67,0)
 S IEN=$P(X,";",1)
"RTN","PXRMINTR",68,0)
 S TEMP=$G(^AUTTHF(IEN,0))
"RTN","PXRMINTR",69,0)
 S TYPE=$P(TEMP,U,10)
"RTN","PXRMINTR",70,0)
 I TYPE="C" D  Q 0
"RTN","PXRMINTR",71,0)
 . D EN^DDIOL("Category health factors cannot be used in reminder definitions!")
"RTN","PXRMINTR",72,0)
 I TYPE'="F" D  Q 0
"RTN","PXRMINTR",73,0)
 . D EN^DDIOL("Only factor health factors can be used in reminder definitions!")
"RTN","PXRMINTR",74,0)
 ;Make sure that the health factor has a category.
"RTN","PXRMINTR",75,0)
 S CAT=$P(TEMP,U,3)
"RTN","PXRMINTR",76,0)
 I CAT="" D  Q 0
"RTN","PXRMINTR",77,0)
 . D EN^DDIOL("Factor health factors must have a category!")
"RTN","PXRMINTR",78,0)
 Q 1
"RTN","PXRMINTR",79,0)
 ;
"RTN","PXRMINTR",80,0)
 ;=======================================================================
"RTN","PXRMINTR",81,0)
VIGNAC(X) ;Check X to see if it contains valid IGNORE ON N/A codes.
"RTN","PXRMINTR",82,0)
 ;This is part of the input transform for this field. The length of the
"RTN","PXRMINTR",83,0)
 ;IGNORE ON N/A field is 8 characters. The valid codes are:
"RTN","PXRMINTR",84,0)
 ;   A - age
"RTN","PXRMINTR",85,0)
 ;   I - inactive
"RTN","PXRMINTR",86,0)
 ;   R - race
"RTN","PXRMINTR",87,0)
 ;   S - sex
"RTN","PXRMINTR",88,0)
 ;   * - wildcard matches anything.
"RTN","PXRMINTR",89,0)
 N LEN
"RTN","PXRMINTR",90,0)
 S LEN=$L(X)
"RTN","PXRMINTR",91,0)
 I (LEN>8)!(LEN<1) Q 0
"RTN","PXRMINTR",92,0)
 ;
"RTN","PXRMINTR",93,0)
 N TEMP,TEXT
"RTN","PXRMINTR",94,0)
 S TEMP=X
"RTN","PXRMINTR",95,0)
 S TEMP=$TR(TEMP,"A","")
"RTN","PXRMINTR",96,0)
 S TEMP=$TR(TEMP,"I","")
"RTN","PXRMINTR",97,0)
 S TEMP=$TR(TEMP,"R","")
"RTN","PXRMINTR",98,0)
 S TEMP=$TR(TEMP,"S","")
"RTN","PXRMINTR",99,0)
 S TEMP=$TR(TEMP,"*","")
"RTN","PXRMINTR",100,0)
 ;At this point TEMP should be NULL,if it is not then there are
"RTN","PXRMINTR",101,0)
 ;bad codes.
"RTN","PXRMINTR",102,0)
 S LEN=$L(TEMP)
"RTN","PXRMINTR",103,0)
 I LEN=1 D  Q 0
"RTN","PXRMINTR",104,0)
 . S TEXT=TEMP_" is not a valid IGNORE ON N/A code!"
"RTN","PXRMINTR",105,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",106,0)
 I LEN>1 D  Q 0
"RTN","PXRMINTR",107,0)
 . S TEXT=TEMP_" are not valid IGNORE ON N/A codes!"
"RTN","PXRMINTR",108,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",109,0)
 Q 1
"RTN","PXRMINTR",110,0)
 ;
"RTN","PXRMINTR",111,0)
 ;=======================================================================
"RTN","PXRMINTR",112,0)
VLAB(X) ;Check for valid lab findings. They must be in the
"RTN","PXRMINTR",113,0)
 ;chemistry/hematology node and are not a panel.
"RTN","PXRMINTR",114,0)
 I X'["LAB(60" Q 1
"RTN","PXRMINTR",115,0)
 N LAB0,LABTEST,TEST,WARN
"RTN","PXRMINTR",116,0)
 S LABTEST=$P(X,";",1)
"RTN","PXRMINTR",117,0)
 S LAB0=^LAB(60,LABTEST,0)
"RTN","PXRMINTR",118,0)
 S WARN='+$P(X,";",3)
"RTN","PXRMINTR",119,0)
 I $P(LAB0,U,4)'["CH" D  Q 0
"RTN","PXRMINTR",120,0)
 . I WARN D
"RTN","PXRMINTR",121,0)
 .. S TEXT(1)=$P(LAB0,U,1)_" is not a ""CH"" subscript lab, cannot be used for a reminder!"
"RTN","PXRMINTR",122,0)
 .. S TEXT(2)="Contact your Lab ADPAC for help"
"RTN","PXRMINTR",123,0)
 .. D EN^DDIOL(.TEXT)
"RTN","PXRMINTR",124,0)
 I $P($P(LAB0,U,5),";",2)="" D  Q 0
"RTN","PXRMINTR",125,0)
 . I WARN D
"RTN","PXRMINTR",126,0)
 .. S TEXT(1)=$P(LAB0,U,1)_" is a lab panel, cannot be used for a reminder!"
"RTN","PXRMINTR",127,0)
 .. S TEXT(2)="Contact your Lab ADPAC for help"
"RTN","PXRMINTR",128,0)
 .. D EN^DDIOL(.TEXT)
"RTN","PXRMINTR",129,0)
 Q 1
"RTN","PXRMINTR",130,0)
 ;
"RTN","PXRMINTR",131,0)
 ;=======================================================================
"RTN","PXRMINTR",132,0)
VMH(X) ;The site must have the routine YTAPI installed in order to use
"RTN","PXRMINTR",133,0)
 ;mental health instrument findings.
"RTN","PXRMINTR",134,0)
 N EXISTS
"RTN","PXRMINTR",135,0)
 S EXISTS=$$EXISTS^PXRMEXCF("YTAPI")
"RTN","PXRMINTR",136,0)
 I EXISTS Q 1
"RTN","PXRMINTR",137,0)
 N TEXT
"RTN","PXRMINTR",138,0)
 S TEXT(1)="Your site does not have the routine YTAPI installed."
"RTN","PXRMINTR",139,0)
 S TEXT(2)="It is required in order to use Mental Instrument findings."
"RTN","PXRMINTR",140,0)
 S TEXT(3)="The routine was originally released in patch YS*5.01*53."
"RTN","PXRMINTR",141,0)
 S TEXT(4)=" "
"RTN","PXRMINTR",142,0)
 D EN^DDIOL(.TEXT)
"RTN","PXRMINTR",143,0)
 Q 0
"RTN","PXRMINTR",144,0)
 ;
"RTN","PXRMINTR",145,0)
 ;=======================================================================
"RTN","PXRMINTR",146,0)
VNAME(NAME,FILE) ;Check for valid .01 value.
"RTN","PXRMINTR",147,0)
 ;For files 801.41, 811.2, 811.4 and 811.9 the name cannot start with VA-
"RTN","PXRMINTR",148,0)
 ;unless this is a national reminder.
"RTN","PXRMINTR",149,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",150,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",151,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",152,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",153,0)
 N STEXT,TEXT,VALID
"RTN","PXRMINTR",154,0)
 S VALID=1
"RTN","PXRMINTR",155,0)
 I (FILE=811.2)!(FILE=811.4)!(FILE=811.9)!(FILE=801.41) D
"RTN","PXRMINTR",156,0)
 . S STEXT=$E(NAME,1,3)
"RTN","PXRMINTR",157,0)
 . I (STEXT="VA-"),(($G(PXRMINST)'=1)!(DUZ(0)'="@")) D
"RTN","PXRMINTR",158,0)
 .. S TEXT=NAME_" cannot start with ""VA-"", reserved for national distribution!"
"RTN","PXRMINTR",159,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMINTR",160,0)
 .. H 2
"RTN","PXRMINTR",161,0)
 .. S VALID=0
"RTN","PXRMINTR",162,0)
 Q VALID
"RTN","PXRMINTR",163,0)
 ;
"RTN","PXRMINTR",164,0)
 ;=======================================================================
"RTN","PXRMINTR",165,0)
VSPONSOR(X) ;Make sure file Class and Sponsor Class match.
"RTN","PXRMINTR",166,0)
 N FCLASS,SCLASS,TEXT,VALID
"RTN","PXRMINTR",167,0)
 S VALID=1
"RTN","PXRMINTR",168,0)
 S FCLASS=$P(@(DIC_DA_",100)"),U,1)
"RTN","PXRMINTR",169,0)
 S SCLASS=$P(^PXRMD(811.6,X,0),U,2)
"RTN","PXRMINTR",170,0)
 I SCLASS'=FCLASS D
"RTN","PXRMINTR",171,0)
 . S FCLASS=$$EXTERNAL^DILFD(811.6,.02,"",FCLASS)
"RTN","PXRMINTR",172,0)
 . S SCLASS=$$EXTERNAL^DILFD(811.6,.02,"",SCLASS)
"RTN","PXRMINTR",173,0)
 . S TEXT="Sponsor Class is "_SCLASS_", File Class is "_FCLASS_" they must match!"
"RTN","PXRMINTR",174,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",175,0)
 . S VALID=0
"RTN","PXRMINTR",176,0)
 Q VALID
"RTN","PXRMINTR",177,0)
 ;
"RTN","PXRMINTR",178,0)
 ;=======================================================================
"RTN","PXRMINTR",179,0)
VTAX(X) ;Make sure the taxonomy is active.
"RTN","PXRMINTR",180,0)
 N IEN,INACTIVE
"RTN","PXRMINTR",181,0)
 S IEN=$P(X,";",1)
"RTN","PXRMINTR",182,0)
 S INACTIVE=$P(^PXD(811.2,IEN,0),U,6)
"RTN","PXRMINTR",183,0)
 I INACTIVE D  Q 0
"RTN","PXRMINTR",184,0)
 . D EN^DDIOL("This taxonomy is inactive and cannot be selected.")
"RTN","PXRMINTR",185,0)
 E  Q 1
"RTN","PXRMINTR",186,0)
 ;
"RTN","PXRMINTR",187,0)
 ;=======================================================================
"RTN","PXRMINTR",188,0)
VTPER(X) ;Check for valid time period. They must be of the form NS,
"RTN","PXRMINTR",189,0)
 ; where N is a number and S is D for days, M for months, or Y for years.
"RTN","PXRMINTR",190,0)
 N LEN
"RTN","PXRMINTR",191,0)
 S X=$$UP^XLFSTR(X)
"RTN","PXRMINTR",192,0)
 S LEN=$L(X)
"RTN","PXRMINTR",193,0)
 I (LEN>5)!(LEN<2) Q 0
"RTN","PXRMINTR",194,0)
 I ((X'?1N.N1"D")&(X'?1N.N1"M")&(X'?1N.N1"Y")) Q 0
"RTN","PXRMINTR",195,0)
 Q 1
"RTN","PXRMINTR",196,0)
 ;
"RTN","PXRMINTR",197,0)
 ;=======================================================================
"RTN","PXRMINTR",198,0)
VUSAGE(X) ;Check X to see if it contains valid USAGE codes.
"RTN","PXRMINTR",199,0)
 ;This is part of the input transform for this field. The length of the
"RTN","PXRMINTR",200,0)
 ;USAGE field is 10 characters. The valid codes are:
"RTN","PXRMINTR",201,0)
 ;   C - CPRS
"RTN","PXRMINTR",202,0)
 ;   R - reports
"RTN","PXRMINTR",203,0)
 ;   X - extracts
"RTN","PXRMINTR",204,0)
 ;   * - wildcard matches anything.
"RTN","PXRMINTR",205,0)
 N LEN
"RTN","PXRMINTR",206,0)
 S LEN=$L(X)
"RTN","PXRMINTR",207,0)
 I (LEN>10)!(LEN<1) Q 0
"RTN","PXRMINTR",208,0)
 ;
"RTN","PXRMINTR",209,0)
 N TEMP,TEXT
"RTN","PXRMINTR",210,0)
 S TEMP=X
"RTN","PXRMINTR",211,0)
 S TEMP=$TR(TEMP,"C","")
"RTN","PXRMINTR",212,0)
 S TEMP=$TR(TEMP,"R","")
"RTN","PXRMINTR",213,0)
 S TEMP=$TR(TEMP,"X","")
"RTN","PXRMINTR",214,0)
 S TEMP=$TR(TEMP,"*","")
"RTN","PXRMINTR",215,0)
 ;At this point TEMP should be NULL,if it is not then there are
"RTN","PXRMINTR",216,0)
 ;bad codes.
"RTN","PXRMINTR",217,0)
 S LEN=$L(TEMP)
"RTN","PXRMINTR",218,0)
 I LEN=1 D  Q 0
"RTN","PXRMINTR",219,0)
 . S TEXT=TEMP_" is not a valid USAGE code!"
"RTN","PXRMINTR",220,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",221,0)
 I LEN>1 D  Q 0
"RTN","PXRMINTR",222,0)
 . S TEXT=TEMP_" are not valid USAGE codes!"
"RTN","PXRMINTR",223,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",224,0)
 Q 1
"RTN","PXRMLAB")
0^50^B13514802
"RTN","PXRMLAB",1,0)
PXRMLAB ; SLC/PKR - Handle laboratory test findings. ;05/16/2001
"RTN","PXRMLAB",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMLAB",3,0)
 ;
"RTN","PXRMLAB",4,0)
 ;=======================================================================
"RTN","PXRMLAB",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate laboratory test findings.
"RTN","PXRMLAB",6,0)
 N FIND0,FIND3,FINDING,LABIEN
"RTN","PXRMLAB",7,0)
 S LABIEN=""
"RTN","PXRMLAB",8,0)
 F  S LABIEN=$O(^PXD(811.9,PXRMITEM,20,"E","LAB(60,",LABIEN)) Q:+LABIEN=0  D
"RTN","PXRMLAB",9,0)
 . S FINDING=""
"RTN","PXRMLAB",10,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","LAB(60,",LABIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMLAB",11,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMLAB",12,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMLAB",13,0)
 .. D FIEVAL(DFN,LABIEN,FIND0,FIND3,"","",FINDING,.FIEVAL)
"RTN","PXRMLAB",14,0)
 Q
"RTN","PXRMLAB",15,0)
 ;
"RTN","PXRMLAB",16,0)
 ;=======================================================================
"RTN","PXRMLAB",17,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate laboratory test terms.
"RTN","PXRMLAB",18,0)
 N FIND0,FIND3,LABIEN,LFIEVAL,TFIND0,TFIND3,TFINDING
"RTN","PXRMLAB",19,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMLAB",20,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMLAB",21,0)
 S LABIEN=""
"RTN","PXRMLAB",22,0)
 F  S LABIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","LAB(60,",LABIEN)) Q:+LABIEN=0  D
"RTN","PXRMLAB",23,0)
 . S TFINDING=""
"RTN","PXRMLAB",24,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","LAB(60,",LABIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMLAB",25,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMLAB",26,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMLAB",27,0)
 .. D FIEVAL(DFN,LABIEN,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL)
"RTN","PXRMLAB",28,0)
 Q
"RTN","PXRMLAB",29,0)
 ;
"RTN","PXRMLAB",30,0)
 ;=======================================================================
"RTN","PXRMLAB",31,0)
FIEVAL(DFN,LABIEN,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL) ;
"RTN","PXRMLAB",32,0)
 N CONVAL,DATA,DATE,IEN,IND,INVDATE,LRT
"RTN","PXRMLAB",33,0)
 N SEQ,RESULT,STATUS,VALID,VALUE
"RTN","PXRMLAB",34,0)
 K ^TMP("LRRR",$J)
"RTN","PXRMLAB",35,0)
 D RR^LR7OR1(DFN,"","","","CH",LABIEN,"",10)
"RTN","PXRMLAB",36,0)
 S INVDATE=$O(^TMP("LRRR",$J,DFN,"CH",""))
"RTN","PXRMLAB",37,0)
 I INVDATE="" S FIEVAL(FINDING)=0 K ^TMP("LRRR",$J) Q
"RTN","PXRMLAB",38,0)
 ;Order the results putting cancelled or pending last.
"RTN","PXRMLAB",39,0)
 S INVDATE=""
"RTN","PXRMLAB",40,0)
 F  S INVDATE=$O(^TMP("LRRR",$J,DFN,"CH",INVDATE)) Q:+INVDATE=0  D
"RTN","PXRMLAB",41,0)
 . S SEQ=""
"RTN","PXRMLAB",42,0)
 . F  S SEQ=$O(^TMP("LRRR",$J,DFN,"CH",INVDATE,SEQ)) Q:+SEQ=0  D
"RTN","PXRMLAB",43,0)
 .. S DATA=^TMP("LRRR",$J,DFN,"CH",INVDATE,SEQ)
"RTN","PXRMLAB",44,0)
 .. S RESULT=$P(DATA,U,2)
"RTN","PXRMLAB",45,0)
 .. I (RESULT="canc")!(RESULT="pending") S STATUS=1
"RTN","PXRMLAB",46,0)
 .. E  S STATUS=0
"RTN","PXRMLAB",47,0)
 .. S LRT(STATUS,INVDATE)=DATA
"RTN","PXRMLAB",48,0)
 K ^TMP("LRRR",$J)
"RTN","PXRMLAB",49,0)
 ;Process the list.
"RTN","PXRMLAB",50,0)
 S STATUS=""
"RTN","PXRMLAB",51,0)
 S STATUS=$O(LRT(STATUS))
"RTN","PXRMLAB",52,0)
 I STATUS'=0 S FIEVAL(FINDING)=0 Q
"RTN","PXRMLAB",53,0)
 S INVDATE=$O(LRT(STATUS,INVDATE))
"RTN","PXRMLAB",54,0)
 S DATE=$$FMDFINVL^PXRMDATE(INVDATE,0)
"RTN","PXRMLAB",55,0)
 ;Save the rest of the finding information.
"RTN","PXRMLAB",56,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMLAB",57,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMLAB",58,0)
 S FIEVAL(FINDING,"FINDING")=LABIEN_";LAB(60,"
"RTN","PXRMLAB",59,0)
 S DATA=LRT(STATUS,INVDATE)
"RTN","PXRMLAB",60,0)
 S FIEVAL(FINDING,"DATA")=DATA
"RTN","PXRMLAB",61,0)
 S VALUE=$P(DATA,U,2)
"RTN","PXRMLAB",62,0)
 S FIEVAL(FINDING,"RESULT")=$P(DATA,U,2)
"RTN","PXRMLAB",63,0)
 S FIEVAL(FINDING,"VALUE")=FIEVAL(FINDING,"RESULT")
"RTN","PXRMLAB",64,0)
 ;Determine if the finding has expired.
"RTN","PXRMLAB",65,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMLAB",66,0)
 I 'VALID D  Q
"RTN","PXRMLAB",67,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMLAB",68,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMLAB",69,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMLAB",70,0)
 S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,FIEVAL(FINDING,"VALUE"))
"RTN","PXRMLAB",71,0)
 I CONVAL'="" D
"RTN","PXRMLAB",72,0)
 . I CONVAL D
"RTN","PXRMLAB",73,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMLAB",74,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMLAB",75,0)
 . E  D
"RTN","PXRMLAB",76,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMLAB",77,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMLAB",78,0)
 Q
"RTN","PXRMLAB",79,0)
 ;
"RTN","PXRMLAB",80,0)
 ;=======================================================================
"RTN","PXRMLAB",81,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMLAB",82,0)
 ;maintenance output.
"RTN","PXRMLAB",83,0)
 N DATA,DATE,LABIEN,PNAME,TEMP,VALUE
"RTN","PXRMLAB",84,0)
 S DATA=FIEVAL(FINDING,"DATA")
"RTN","PXRMLAB",85,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMLAB",86,0)
 S VALUE=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMLAB",87,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMLAB",88,0)
 S TEMP=TEMP_" Laboratory test: "
"RTN","PXRMLAB",89,0)
 S PNAME=$P(DATA,U,10)
"RTN","PXRMLAB",90,0)
 I $L(PNAME)=0 S PNAME=$P(DATA,U,15)
"RTN","PXRMLAB",91,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMLAB",92,0)
 I $L(VALUE)>0 D
"RTN","PXRMLAB",93,0)
 . S TEMP=TEMP_"; value - "
"RTN","PXRMLAB",94,0)
 . S TEMP=TEMP_VALUE
"RTN","PXRMLAB",95,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMLAB",96,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMLAB",97,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMLAB",98,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMLAB",99,0)
 S NLINES=NLINES+1
"RTN","PXRMLAB",100,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMLAB",101,0)
 I $D(PXRMDEV) D
"RTN","PXRMLAB",102,0)
 . N UID
"RTN","PXRMLAB",103,0)
 . S UID="LAB "_PNAME
"RTN","PXRMLAB",104,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMLAB",105,0)
 Q
"RTN","PXRMLAB",106,0)
 ;
"RTN","PXRMLIST")
0^25^B6550942
"RTN","PXRMLIST",1,0)
PXRMLIST ; SLC/PKR - Clinical Reminders list functions. ;06/05/2001
"RTN","PXRMLIST",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMLIST",3,0)
 ;Used in the reminder exchange utility.
"RTN","PXRMLIST",4,0)
 ;======================================================================
"RTN","PXRMLIST",5,0)
FRDEF(NAME,PNAME) ;Format the reminder name and print name.
"RTN","PXRMLIST",6,0)
 N IND,LEN,TEMP
"RTN","PXRMLIST",7,0)
 S TEMP=$$LJ^XLFSTR(NAME,40," ")
"RTN","PXRMLIST",8,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMLIST",9,0)
 Q TEMP
"RTN","PXRMLIST",10,0)
 ;
"RTN","PXRMLIST",11,0)
 ;======================================================================
"RTN","PXRMLIST",12,0)
FRE(NUMBER,NAME,SOURCE,DATE) ;Format  entry number, name, source,
"RTN","PXRMLIST",13,0)
 ;and date packed.
"RTN","PXRMLIST",14,0)
 N TEMP,TNAME,TSOURCE
"RTN","PXRMLIST",15,0)
 S TEMP=$$RJ^XLFSTR(NUMBER,4," ")
"RTN","PXRMLIST",16,0)
 S TNAME=$E(NAME,1,27)
"RTN","PXRMLIST",17,0)
 S TEMP=TEMP_"  "_$$LJ^XLFSTR(TNAME,29," ")
"RTN","PXRMLIST",18,0)
 S TSOURCE=$E($P(SOURCE,",",1),1,12)_"@"_$E($P(SOURCE," at ",2),1,12)
"RTN","PXRMLIST",19,0)
 S TEMP=TEMP_$$LJ^XLFSTR(TSOURCE,23," ")
"RTN","PXRMLIST",20,0)
 S DATE=$$FMTE^XLFDT(DATE,"5Z")
"RTN","PXRMLIST",21,0)
 S TEMP=TEMP_"  "_$$LJ^XLFSTR(DATE,30," ")
"RTN","PXRMLIST",22,0)
 Q TEMP
"RTN","PXRMLIST",23,0)
 ;
"RTN","PXRMLIST",24,0)
 ;======================================================================
"RTN","PXRMLIST",25,0)
MRKINACT(TEXT) ;Append the inactive mark to TEXT in column 77.
"RTN","PXRMLIST",26,0)
 N IC,NSPA
"RTN","PXRMLIST",27,0)
 S NSPA=77-$L(TEXT)
"RTN","PXRMLIST",28,0)
 F IC=1:1:NSPA S TEXT=TEXT_" "
"RTN","PXRMLIST",29,0)
 S TEXT=TEXT_"X"
"RTN","PXRMLIST",30,0)
 Q TEXT
"RTN","PXRMLIST",31,0)
 ;
"RTN","PXRMLIST",32,0)
 ;======================================================================
"RTN","PXRMLIST",33,0)
QUERYAO() ;See if the user wants only active reminders listed.
"RTN","PXRMLIST",34,0)
 N X,Y
"RTN","PXRMLIST",35,0)
 K DIRUT,DTOUT,DUOUT
"RTN","PXRMLIST",36,0)
 S DIR(0)="YA"
"RTN","PXRMLIST",37,0)
 S DIR("A")="List active reminders only? "
"RTN","PXRMLIST",38,0)
 S DIR("B")="Y"
"RTN","PXRMLIST",39,0)
 W !
"RTN","PXRMLIST",40,0)
 D ^DIR K DIR
"RTN","PXRMLIST",41,0)
 Q Y
"RTN","PXRMLIST",42,0)
 ;
"RTN","PXRMLIST",43,0)
 ;======================================================================
"RTN","PXRMLIST",44,0)
RDEF(DEFLIST,ARO) ;Build a list of the name and print name of all
"RTN","PXRMLIST",45,0)
 ;reminder definitions.
"RTN","PXRMLIST",46,0)
 N INACTIVE,IEN,NAME,PNAME,REMINDER
"RTN","PXRMLIST",47,0)
 S INACTIVE=""
"RTN","PXRMLIST",48,0)
 ;Build the list of reminders in alphabetical order.
"RTN","PXRMLIST",49,0)
 S VALMCNT=0
"RTN","PXRMLIST",50,0)
 S NAME=""
"RTN","PXRMLIST",51,0)
 F  S NAME=$O(^PXD(811.9,"B",NAME)) Q:NAME=""  D
"RTN","PXRMLIST",52,0)
 . S IEN=$O(^PXD(811.9,"B",NAME,""))
"RTN","PXRMLIST",53,0)
 . S REMINDER=^PXD(811.9,IEN,0)
"RTN","PXRMLIST",54,0)
 . S INACTIVE=$P(REMINDER,U,6)
"RTN","PXRMLIST",55,0)
 . I (ARO)&(INACTIVE) Q
"RTN","PXRMLIST",56,0)
 . S VALMCNT=VALMCNT+1
"RTN","PXRMLIST",57,0)
 . S PNAME=$P(REMINDER,U,3)
"RTN","PXRMLIST",58,0)
 . S DEFLIST(VALMCNT,0)=$$FRDEF(NAME,PNAME)
"RTN","PXRMLIST",59,0)
 . I INACTIVE D
"RTN","PXRMLIST",60,0)
 .. S DEFLIST(VALMCNT,0)=$$MRKINACT(DEFLIST(VALMCNT,0))
"RTN","PXRMLIST",61,0)
 S DEFLIST("VALMCNT")=VALMCNT
"RTN","PXRMLIST",62,0)
 Q
"RTN","PXRMLIST",63,0)
 ;
"RTN","PXRMLIST",64,0)
 ;======================================================================
"RTN","PXRMLIST",65,0)
RE(RLIST,IEN) ;Build a list of repository entries.
"RTN","PXRMLIST",66,0)
 N DATE,IND,NAME,SOURCE
"RTN","PXRMLIST",67,0)
 ;Build the list in alphabetical order.
"RTN","PXRMLIST",68,0)
 S VALMCNT=0
"RTN","PXRMLIST",69,0)
 S NAME=""
"RTN","PXRMLIST",70,0)
 F  S NAME=$O(^PXD(811.8,"B",NAME)) Q:NAME=""  D
"RTN","PXRMLIST",71,0)
 . S DATE=""
"RTN","PXRMLIST",72,0)
 . F  S DATE=$O(^PXD(811.8,"B",NAME,DATE)) Q:DATE=""  D
"RTN","PXRMLIST",73,0)
 .. S IND=$O(^PXD(811.8,"B",NAME,DATE,""))
"RTN","PXRMLIST",74,0)
 .. S SOURCE=$P(^PXD(811.8,IND,0),U,2)
"RTN","PXRMLIST",75,0)
 .. S VALMCNT=VALMCNT+1
"RTN","PXRMLIST",76,0)
 .. S RLIST(VALMCNT,0)=$$FRE(VALMCNT,NAME,SOURCE,DATE)
"RTN","PXRMLIST",77,0)
 .. S IEN(VALMCNT)=IND
"RTN","PXRMLIST",78,0)
 S RLIST("VALMCNT")=VALMCNT
"RTN","PXRMLIST",79,0)
 Q
"RTN","PXRMLIST",80,0)
 ;
"RTN","PXRMLIST",81,0)
 ;======================================================================
"RTN","PXRMLIST",82,0)
SPONSOR ;Print a list of Sponsors.
"RTN","PXRMLIST",83,0)
 N BY,DIC,FLDS,FR,L,PXRMEDOK
"RTN","PXRMLIST",84,0)
 S PXRMEDOK=1
"RTN","PXRMLIST",85,0)
 S BY=".01"
"RTN","PXRMLIST",86,0)
 S DIC="^PXRMD(811.6,"
"RTN","PXRMLIST",87,0)
 S FLDS="[PXRM SPONSOR LIST]"
"RTN","PXRMLIST",88,0)
 S FR=""
"RTN","PXRMLIST",89,0)
 S L=0
"RTN","PXRMLIST",90,0)
 D EN1^DIP
"RTN","PXRMLIST",91,0)
 Q
"RTN","PXRMLIST",92,0)
 ;
"RTN","PXRMLOG")
0^46^B52088886
"RTN","PXRMLOG",1,0)
PXRMLOG ; SLC/PKR - Clinical Reminders logic routines. ;05/14/2001
"RTN","PXRMLOG",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMLOG",3,0)
 ;
"RTN","PXRMLOG",4,0)
 ;=======================================================================
"RTN","PXRMLOG",5,0)
EVALPCL(FREQ,PCLOGIC,FIEVAL) ;Evaluate the Patient Cohort Logic.
"RTN","PXRMLOG",6,0)
 ;Determine the applicable frequency age range set.
"RTN","PXRMLOG",7,0)
 ;Get the baseline
"RTN","PXRMLOG",8,0)
 N MAXAGE,MINAGE
"RTN","PXRMLOG",9,0)
 N AGEFI,IND,FINDING,FLIST,FREQDAY,NOFREQ,NUMAFI
"RTN","PXRMLOG",10,0)
 N RANKAR,RANK,RANKFI,TEMP
"RTN","PXRMLOG",11,0)
 D MMF^PXRMAGE(.MINAGE,.MAXAGE,.FREQ,.FIEVAL)
"RTN","PXRMLOG",12,0)
 ;If there is no match with any of the baseline values FREQ=-1.
"RTN","PXRMLOG",13,0)
 ;If there was no frequency in the definition then FREQ="".
"RTN","PXRMLOG",14,0)
 ;
"RTN","PXRMLOG",15,0)
 ;See if any findings override the baseline.
"RTN","PXRMLOG",16,0)
 S TEMP=$G(^PXD(811.9,PXRMITEM,40))
"RTN","PXRMLOG",17,0)
 S NUMAFI=+$P(TEMP,U,1)
"RTN","PXRMLOG",18,0)
 ;If there are no age findings use the baseline.
"RTN","PXRMLOG",19,0)
 I NUMAFI=0 G ACHK
"RTN","PXRMLOG",20,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOG",21,0)
 F IND=1:1:NUMAFI D
"RTN","PXRMLOG",22,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",23,0)
 . I (FIEVAL(FINDING))&('$D(FIEVAL(FINDING,"EXPIRED"))) D
"RTN","PXRMLOG",24,0)
 .. S TEMP=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMLOG",25,0)
 .. S RANK=+$P(TEMP,U,5)
"RTN","PXRMLOG",26,0)
 .. I RANK=0 S RANK=9999
"RTN","PXRMLOG",27,0)
 .. S FREQDAY=$$FRQINDAY^PXRMDATE($P(TEMP,U,4))
"RTN","PXRMLOG",28,0)
 ..;If there is no frequency with this rank ignore it.
"RTN","PXRMLOG",29,0)
 .. I FREQDAY>0 S RANKAR(RANK,FREQDAY,FINDING)=""
"RTN","PXRMLOG",30,0)
 ;If there was a ranking use it otherwise use the greatest frequency.
"RTN","PXRMLOG",31,0)
 I '$D(RANKAR) G ACHK
"RTN","PXRMLOG",32,0)
 S RANK=0
"RTN","PXRMLOG",33,0)
 S RANK=+$O(RANKAR(RANK))
"RTN","PXRMLOG",34,0)
 S FREQDAY=+$O(RANKAR(RANK,""))
"RTN","PXRMLOG",35,0)
 S FINDING=+$O(RANKAR(RANK,FREQDAY,""))
"RTN","PXRMLOG",36,0)
 I FINDING>0 D
"RTN","PXRMLOG",37,0)
 . S TEMP=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMLOG",38,0)
 . S FREQ=$P(TEMP,U,4)
"RTN","PXRMLOG",39,0)
 . S MINAGE=$P(TEMP,U,2)
"RTN","PXRMLOG",40,0)
 . S MAXAGE=$P(TEMP,U,3)
"RTN","PXRMLOG",41,0)
 .;Remove the baseline age findings since they have been overridden.
"RTN","PXRMLOG",42,0)
 . K FIEVAL("AGE")
"RTN","PXRMLOG",43,0)
ACHK ;
"RTN","PXRMLOG",44,0)
 I FREQ="" D
"RTN","PXRMLOG",45,0)
 . S NOFREQ=1
"RTN","PXRMLOG",46,0)
 . S AGEFI=0
"RTN","PXRMLOG",47,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","FREQ")="There is no reminder frequency!"
"RTN","PXRMLOG",48,0)
 E  D
"RTN","PXRMLOG",49,0)
 . S NOFREQ=0
"RTN","PXRMLOG",50,0)
 . I FREQ=-1 S AGEFI=0
"RTN","PXRMLOG",51,0)
 . E  S AGEFI=$$AGECHECK^PXRMAGE(PXRMAGE,MINAGE,MAXAGE)
"RTN","PXRMLOG",52,0)
 I 'AGEFI D
"RTN","PXRMLOG",53,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","AGE")=""
"RTN","PXRMLOG",54,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","AGE")="Patient does not meet any age criteria!"
"RTN","PXRMLOG",55,0)
 E  D
"RTN","PXRMLOG",56,0)
 .;Save the final frequency and age range for display.
"RTN","PXRMLOG",57,0)
 . S TEMP="Due every "_$$FMTFREQ^PXRMAGE(FREQ)_$$FMTAGE^PXRMAGE(MINAGE,MAXAGE)
"RTN","PXRMLOG",58,0)
 .;Use the z so this will be the last of the info text.
"RTN","PXRMLOG",59,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"zFREQARNG")=TEMP
"RTN","PXRMLOG",60,0)
 ;
"RTN","PXRMLOG",61,0)
 ;Evaluate the patient cohort logic
"RTN","PXRMLOG",62,0)
 N NUM,PCLOG,PCLSTR,SEXFI,TEST
"RTN","PXRMLOG",63,0)
 S SEXFI=1
"RTN","PXRMLOG",64,0)
 S TEMP=$G(^PXD(811.9,PXRMITEM,32))
"RTN","PXRMLOG",65,0)
 S NUM=+$P(TEMP,U,1)
"RTN","PXRMLOG",66,0)
 S (PCLOG,PCLSTR)=^PXD(811.9,PXRMITEM,31)
"RTN","PXRMLOG",67,0)
 S PCLOG=$$STRREP^PXRMUTIL(PCLOG,"SEX",SEXFI)
"RTN","PXRMLOG",68,0)
 S PCLOG=$$STRREP^PXRMUTIL(PCLOG,"AGE",AGEFI)
"RTN","PXRMLOG",69,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOG",70,0)
 F IND=1:1:NUM D
"RTN","PXRMLOG",71,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",72,0)
 . S TEMP="FI("_FINDING_")"
"RTN","PXRMLOG",73,0)
 . S PCLOG=$$STRREP^PXRMUTIL(PCLOG,TEMP,FIEVAL(FINDING))
"RTN","PXRMLOG",74,0)
 I @PCLOG
"RTN","PXRMLOG",75,0)
 S TEST=$T
"RTN","PXRMLOG",76,0)
 ;Check for a dead patient.
"RTN","PXRMLOG",77,0)
 I +$G(^XTMP(PXRMDFN,"DOD"))>0 S PCLOGIC=0_U_PCLSTR_U_PCLOG
"RTN","PXRMLOG",78,0)
 E  S PCLOGIC=TEST_U_PCLSTR_U_PCLOG
"RTN","PXRMLOG",79,0)
 I 'TEST S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","COHORT")=""
"RTN","PXRMLOG",80,0)
 I $D(PXRMDEV) S ^TMP(PXRMPID,$J,PXRMITEM,"PATIENT COHORT LOGIC")=PCLOGIC
"RTN","PXRMLOG",81,0)
 Q
"RTN","PXRMLOG",82,0)
 ;
"RTN","PXRMLOG",83,0)
 ;=======================================================================
"RTN","PXRMLOG",84,0)
EVALRESL(RESDATE,RESLOGIC,FIEVAL) ;Evaluate the Resolution Logic.
"RTN","PXRMLOG",85,0)
 N IND,FINDING,FIV,FLIST,NUM,RESLOG,RESLSTR,TEST
"RTN","PXRMLOG",86,0)
 S TEMP=$G(^PXD(811.9,PXRMITEM,36))
"RTN","PXRMLOG",87,0)
 S NUM=+$P(TEMP,U,1)
"RTN","PXRMLOG",88,0)
 I NUM=0 Q
"RTN","PXRMLOG",89,0)
 S (RESLOG,RESLSTR)=^PXD(811.9,PXRMITEM,35)
"RTN","PXRMLOG",90,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOG",91,0)
 F IND=1:1:NUM D
"RTN","PXRMLOG",92,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",93,0)
 . S TEMP="FI("_FINDING_")"
"RTN","PXRMLOG",94,0)
 . S RESLOG=$$STRREP^PXRMUTIL(RESLOG,TEMP,FIEVAL(FINDING))
"RTN","PXRMLOG",95,0)
 I @RESLOG
"RTN","PXRMLOG",96,0)
 S TEST=$T
"RTN","PXRMLOG",97,0)
 S RESLOGIC=TEST_U_RESLSTR_U_RESLOG
"RTN","PXRMLOG",98,0)
 I $D(PXRMDEV) S ^TMP(PXRMPID,$J,PXRMITEM,"RESOLUTION LOGIC")=RESLOGIC
"RTN","PXRMLOG",99,0)
 I TEST S RESDATE=$$RESDATE(RESLSTR,.FIEVAL)
"RTN","PXRMLOG",100,0)
 E  S RESDATE=0
"RTN","PXRMLOG",101,0)
 ;
"RTN","PXRMLOG",102,0)
 ;If the reminder was not resolved because of an expired finding
"RTN","PXRMLOG",103,0)
 ;find and save the expired resolution date for display.
"RTN","PXRMLOG",104,0)
 I RESDATE=0 D
"RTN","PXRMLOG",105,0)
 . S RESLOG=RESLSTR
"RTN","PXRMLOG",106,0)
 . F IND=1:1:NUM D
"RTN","PXRMLOG",107,0)
 .. S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",108,0)
 .. S FIV=FIEVAL(FINDING)
"RTN","PXRMLOG",109,0)
 .. I $D(FIEVAL(FINDING,"EXPIRED")) D
"RTN","PXRMLOG",110,0)
 ... S FIV=1
"RTN","PXRMLOG",111,0)
 .. S TEMP="FI("_FINDING_")"
"RTN","PXRMLOG",112,0)
 .. S RESLOG=$$STRREP^PXRMUTIL(RESLOG,TEMP,FIV)
"RTN","PXRMLOG",113,0)
 . I @RESLOG
"RTN","PXRMLOG",114,0)
 . S TEST=$T
"RTN","PXRMLOG",115,0)
 . I TEST S RESDATE=$$RESDATE(RESLSTR,.FIEVAL)_"X"
"RTN","PXRMLOG",116,0)
 Q
"RTN","PXRMLOG",117,0)
 ;
"RTN","PXRMLOG",118,0)
 ;=======================================================================
"RTN","PXRMLOG",119,0)
MINRD(DT1,DT2) ;Return the minimum date. If one of the dates is 0 then return
"RTN","PXRMLOG",120,0)
 ;the other date.
"RTN","PXRMLOG",121,0)
 S DT1=+DT1
"RTN","PXRMLOG",122,0)
 S DT2=+DT2
"RTN","PXRMLOG",123,0)
 I DT1=0 Q DT2
"RTN","PXRMLOG",124,0)
 I DT2=0 Q DT1
"RTN","PXRMLOG",125,0)
 Q $$MIN^XLFMTH(DT1,DT2)
"RTN","PXRMLOG",126,0)
 ;
"RTN","PXRMLOG",127,0)
 ;=======================================================================
"RTN","PXRMLOG",128,0)
POP(STACK,SP) ;Pop an element off of the stack.
"RTN","PXRMLOG",129,0)
 N TEMP
"RTN","PXRMLOG",130,0)
 S TEMP=STACK(SP)
"RTN","PXRMLOG",131,0)
 K STACK(SP)
"RTN","PXRMLOG",132,0)
 S SP=SP-1
"RTN","PXRMLOG",133,0)
 Q TEMP
"RTN","PXRMLOG",134,0)
 ;
"RTN","PXRMLOG",135,0)
 ;=======================================================================
"RTN","PXRMLOG",136,0)
PUSH(STACK,SP,ELEM) ;Push an element on the stack.
"RTN","PXRMLOG",137,0)
 S SP=SP+1
"RTN","PXRMLOG",138,0)
 S STACK(SP)=ELEM
"RTN","PXRMLOG",139,0)
 Q
"RTN","PXRMLOG",140,0)
 ;
"RTN","PXRMLOG",141,0)
 ;=======================================================================
"RTN","PXRMLOG",142,0)
LOGOP(DT1,DT2,LOP) ;Given two dates return the most recent if the logical
"RTN","PXRMLOG",143,0)
 ;operator is ! and the oldest if it is &.
"RTN","PXRMLOG",144,0)
 I LOP="!" Q $$MAX^XLFMTH(DT1,DT2)
"RTN","PXRMLOG",145,0)
 I LOP="&" Q $$MINRD(DT1,DT2)
"RTN","PXRMLOG",146,0)
 Q
"RTN","PXRMLOG",147,0)
 ;
"RTN","PXRMLOG",148,0)
 ;=======================================================================
"RTN","PXRMLOG",149,0)
RESDATE(RESLSTR,FIEVAL) ;Return the resolution date based on the following
"RTN","PXRMLOG",150,0)
 ;rules:
"RTN","PXRMLOG",151,0)
 ; Dates that are ORed use the most recent.
"RTN","PXRMLOG",152,0)
 ; Dates that are ANDed use the oldest.
"RTN","PXRMLOG",153,0)
 N DATE,DSTRING,DT1,DT2,DT3,FITEMP,IND,INDEX,JND,LEN
"RTN","PXRMLOG",154,0)
 N NOT,OPER,PFSTACK,SP,STACK,TEMP
"RTN","PXRMLOG",155,0)
 ;Remove leading (n) entries.
"RTN","PXRMLOG",156,0)
 I ($E(RESLSTR,1,4)="(0)!")!($E(RESLSTR,1,4)="(1)&") S $E(RESLSTR,1,4)=""
"RTN","PXRMLOG",157,0)
 ;The NOT operator is not relevant for the date calculation so remove
"RTN","PXRMLOG",158,0)
 ;any NOTs.
"RTN","PXRMLOG",159,0)
 S DSTRING=$TR(RESLSTR,"'","")
"RTN","PXRMLOG",160,0)
 ;Replace true findings with their dates. This includes false findings
"RTN","PXRMLOG",161,0)
 ;that are notted in the logic.
"RTN","PXRMLOG",162,0)
 S SP=1
"RTN","PXRMLOG",163,0)
 F  Q:SP=0  D
"RTN","PXRMLOG",164,0)
 . S IND=$F(RESLSTR,"FI(",SP)
"RTN","PXRMLOG",165,0)
 . I $E(RESLSTR,IND-4)="'" S NOT=1
"RTN","PXRMLOG",166,0)
 . E  S NOT=0
"RTN","PXRMLOG",167,0)
 . I IND=0 S SP=0 Q
"RTN","PXRMLOG",168,0)
 . S JND=$F(RESLSTR,")",IND)
"RTN","PXRMLOG",169,0)
 . S INDEX=$E(RESLSTR,IND,JND-2)
"RTN","PXRMLOG",170,0)
 . S SP=JND
"RTN","PXRMLOG",171,0)
 . S TEMP="FI("_INDEX_")"
"RTN","PXRMLOG",172,0)
 . I NOT S FITEMP="'"_"FIEVAL("_INDEX_")"
"RTN","PXRMLOG",173,0)
 . E  S FITEMP="FIEVAL("_INDEX_")"
"RTN","PXRMLOG",174,0)
 . I @FITEMP S DATE=+$G(FIEVAL(INDEX,"DATE"))
"RTN","PXRMLOG",175,0)
 . E  S DATE=0
"RTN","PXRMLOG",176,0)
 . S DSTRING=$$STRREP^PXRMUTIL(DSTRING,TEMP,DATE)
"RTN","PXRMLOG",177,0)
 ;
"RTN","PXRMLOG",178,0)
 ;Convert the string to postfix form for evaluation.
"RTN","PXRMLOG",179,0)
 D POSTFIX^PXRMUTIL(.PFSTACK,DSTRING,"!&")
"RTN","PXRMLOG",180,0)
 ;Set the allowable logic operators.
"RTN","PXRMLOG",181,0)
 S OPER="!&"
"RTN","PXRMLOG",182,0)
 S SP=0
"RTN","PXRMLOG",183,0)
 F IND=1:1:PFSTACK(0) D
"RTN","PXRMLOG",184,0)
 . S TEMP=PFSTACK(IND)
"RTN","PXRMLOG",185,0)
 . I OPER[TEMP D
"RTN","PXRMLOG",186,0)
 ..;Pop the top two elements on the stack and do the operation.
"RTN","PXRMLOG",187,0)
 .. S DT1=$$POP(.STACK,.SP)
"RTN","PXRMLOG",188,0)
 .. S DT2=$$POP(.STACK,.SP)
"RTN","PXRMLOG",189,0)
 .. S DT3=$$LOGOP(DT1,DT2,TEMP)
"RTN","PXRMLOG",190,0)
 ..;Save the result back on the stack
"RTN","PXRMLOG",191,0)
 .. D PUSH(.STACK,.SP,DT3)
"RTN","PXRMLOG",192,0)
 . E  D PUSH(.STACK,.SP,TEMP)
"RTN","PXRMLOG",193,0)
 ;The result is the only thing left on the stack.
"RTN","PXRMLOG",194,0)
 Q $$POP(.STACK,.SP)
"RTN","PXRMLOG",195,0)
 ;
"RTN","PXRMLOG",196,0)
 ;=======================================================================
"RTN","PXRMLOG",197,0)
SEX() ;Return FALSE (0) if the patient is the wrong sex for
"RTN","PXRMLOG",198,0)
 ; the reminder, TRUE (1) is the patient is the right sex.
"RTN","PXRMLOG",199,0)
 N REMSEX
"RTN","PXRMLOG",200,0)
 S REMSEX=$P($G(^PXD(811.9,PXRMITEM,0)),U,9)
"RTN","PXRMLOG",201,0)
 I ($P(PXRMSEX,U,1)=REMSEX)!(REMSEX="") Q 1
"RTN","PXRMLOG",202,0)
 E  D  Q 0
"RTN","PXRMLOG",203,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","SEX")=""
"RTN","PXRMLOG",204,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","SEX")="Patient is the wrong sex!"
"RTN","PXRMLOG",205,0)
 Q
"RTN","PXRMLOG",206,0)
 ;
"RTN","PXRMLOG",207,0)
 ;=======================================================================
"RTN","PXRMLOG",208,0)
VALID(LOGSTR,MINLEN,MAXLEN) ;Make sure that LOGSTR is a valid logic string.
"RTN","PXRMLOG",209,0)
 ;This is called by the input transform for PATIENT COHORT LOGIC and
"RTN","PXRMLOG",210,0)
 ;RESOLUTION LOGIC. Return 1 if LOGSTR is ok.
"RTN","PXRMLOG",211,0)
 ;
"RTN","PXRMLOG",212,0)
 ;Don't do this if this is being called as a result of an install
"RTN","PXRMLOG",213,0)
 ;through the Exchange Utility.
"RTN","PXRMLOG",214,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMLOG",215,0)
 I LOGSTR="" Q 0
"RTN","PXRMLOG",216,0)
 ;
"RTN","PXRMLOG",217,0)
 ;Check the length.
"RTN","PXRMLOG",218,0)
 N LEN
"RTN","PXRMLOG",219,0)
 S LEN=$L(LOGSTR)
"RTN","PXRMLOG",220,0)
 I (LEN<MINLEN)!(LEN>MAXLEN) Q 0
"RTN","PXRMLOG",221,0)
 ;
"RTN","PXRMLOG",222,0)
 ;Use the FileMan code validator to check the code.
"RTN","PXRMLOG",223,0)
 N X
"RTN","PXRMLOG",224,0)
 S X="S Y="_$TR(LOGSTR,";","")
"RTN","PXRMLOG",225,0)
 D ^DIM
"RTN","PXRMLOG",226,0)
 I $D(X)=0 D  Q 0
"RTN","PXRMLOG",227,0)
 . S TEXT(1)="LOGIC string: "_LOGSTR
"RTN","PXRMLOG",228,0)
 . S TEXT(2)="contains invalid MUMPS code!"
"RTN","PXRMLOG",229,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMLOG",230,0)
 ;
"RTN","PXRMLOG",231,0)
 N IC,IND,SE,SS,TEXT,TS,TSTSTR,VALID,VLE
"RTN","PXRMLOG",232,0)
 ;Make sure the entries in LOGSTR correspond with components in
"RTN","PXRMLOG",233,0)
 ;the reminder definition.
"RTN","PXRMLOG",234,0)
 S TSTSTR=LOGSTR
"RTN","PXRMLOG",235,0)
 ;Replace the Boolean operators with the standard separator.
"RTN","PXRMLOG",236,0)
 S TSTSTR=$$STRREP^PXRMUTIL(TSTSTR,"&'",U)
"RTN","PXRMLOG",237,0)
 S TSTSTR=$$STRREP^PXRMUTIL(TSTSTR,"&",U)
"RTN","PXRMLOG",238,0)
 S TSTSTR=$$STRREP^PXRMUTIL(TSTSTR,"!'",U)
"RTN","PXRMLOG",239,0)
 S TSTSTR=$$STRREP^PXRMUTIL(TSTSTR,"!",U)
"RTN","PXRMLOG",240,0)
 S VALID=1
"RTN","PXRMLOG",241,0)
 S LEN=$L(TSTSTR,U)
"RTN","PXRMLOG",242,0)
 F IC=1:1:LEN D
"RTN","PXRMLOG",243,0)
 . S VLE=0
"RTN","PXRMLOG",244,0)
 . S TS=$P(TSTSTR,U,IC)
"RTN","PXRMLOG",245,0)
 .;
"RTN","PXRMLOG",246,0)
 . S SS=$F(TS,"FI(")
"RTN","PXRMLOG",247,0)
 . I SS>0 D
"RTN","PXRMLOG",248,0)
 .. S VLE=1
"RTN","PXRMLOG",249,0)
 .. S SE=$F(TS,")")-2
"RTN","PXRMLOG",250,0)
 .. S IND=$E(TS,SS,SE)
"RTN","PXRMLOG",251,0)
 .. I '$D(^PXD(811.9,DA,20,IND)) D
"RTN","PXRMLOG",252,0)
 ... S TEXT="FI("_IND_") is not in this reminder definition!"
"RTN","PXRMLOG",253,0)
 ... D EN^DDIOL(TEXT)
"RTN","PXRMLOG",254,0)
 ... S VALID=0
"RTN","PXRMLOG",255,0)
 .;
"RTN","PXRMLOG",256,0)
 .;Now check for other valid logic elements.
"RTN","PXRMLOG",257,0)
 . I 'VLE D
"RTN","PXRMLOG",258,0)
 .. I TS["AGE" S VLE=1
"RTN","PXRMLOG",259,0)
 .. I TS["SEX" S VLE=1
"RTN","PXRMLOG",260,0)
 . I 'VLE D
"RTN","PXRMLOG",261,0)
 .. S TEXT=TS_" is not a valid logic element!"
"RTN","PXRMLOG",262,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMLOG",263,0)
 .. S VALID=0
"RTN","PXRMLOG",264,0)
 ;
"RTN","PXRMLOG",265,0)
 Q VALID
"RTN","PXRMLOG",266,0)
 ;
"RTN","PXRMP5I")
0^34^B83757940
"RTN","PXRMP5I",1,0)
PXRMP5I ; SLC/PKR/PJH - Patch 5 inits. ;06/25/2001
"RTN","PXRMP5I",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMP5I",3,0)
 ;
"RTN","PXRMP5I",4,0)
 Q
"RTN","PXRMP5I",5,0)
 ;===============================================================
"RTN","PXRMP5I",6,0)
DELDD ;Delete the old data dictionary and data for 811.8.
"RTN","PXRMP5I",7,0)
 N DIU
"RTN","PXRMP5I",8,0)
 S DIU="^PXD(811.8,"
"RTN","PXRMP5I",9,0)
 S DIU(0)="DT"
"RTN","PXRMP5I",10,0)
 D EN^DIU2
"RTN","PXRMP5I",11,0)
 ;Delete the other data dictionaries leaving the data.
"RTN","PXRMP5I",12,0)
 S DIU(0)=""
"RTN","PXRMP5I",13,0)
 F DIU=801.41,811.2,811.4,811.5,811.9 D EN^DIU2
"RTN","PXRMP5I",14,0)
 Q
"RTN","PXRMP5I",15,0)
 ;
"RTN","PXRMP5I",16,0)
 ;===============================================================
"RTN","PXRMP5I",17,0)
DEL99 ;Clear old autogenerate dates/null prompts
"RTN","PXRMP5I",18,0)
 N DIEN,DSUB
"RTN","PXRMP5I",19,0)
 S DIEN=0
"RTN","PXRMP5I",20,0)
 F  S DIEN=$O(^PXRMD(801.41,DIEN)) Q:'DIEN  D
"RTN","PXRMP5I",21,0)
 .K ^PXRMD(801.41,DIEN,99)
"RTN","PXRMP5I",22,0)
 .S DSUB=0
"RTN","PXRMP5I",23,0)
 .F  S DSUB=$O(^PXRMD(801.41,DIEN,10,DSUB)) Q:'DSUB  D
"RTN","PXRMP5I",24,0)
 ..I $P($G(^PXRMD(801.41,DIEN,10,DSUB,0)),U,2) Q
"RTN","PXRMP5I",25,0)
 ..N DA,DIK
"RTN","PXRMP5I",26,0)
 ..S DA=DSUB,DA(1)=DIEN
"RTN","PXRMP5I",27,0)
 ..S DIK="^PXRMD(801.41,"_DA(1)_",10,"
"RTN","PXRMP5I",28,0)
 ..D ^DIK
"RTN","PXRMP5I",29,0)
 Q
"RTN","PXRMP5I",30,0)
 ;
"RTN","PXRMP5I",31,0)
 ;===============================================================
"RTN","PXRMP5I",32,0)
PRE ;Pre-inits
"RTN","PXRMP5I",33,0)
 D TERMSAVE
"RTN","PXRMP5I",34,0)
 D DELDD
"RTN","PXRMP5I",35,0)
 D DEL99
"RTN","PXRMP5I",36,0)
 Q
"RTN","PXRMP5I",37,0)
 ;
"RTN","PXRMP5I",38,0)
 ;===============================================================
"RTN","PXRMP5I",39,0)
POST ;Post-inits
"RTN","PXRMP5I",40,0)
 D SSEC
"RTN","PXRMP5I",41,0)
 D SCLASS
"RTN","PXRMP5I",42,0)
 D TERMUPD
"RTN","PXRMP5I",43,0)
 D TERMRM
"RTN","PXRMP5I",44,0)
 D TERMHS
"RTN","PXRMP5I",45,0)
 D TERMS^PXRMP5IA
"RTN","PXRMP5I",46,0)
 D PROCID
"RTN","PXRMP5I",47,0)
 D RIURL
"RTN","PXRMP5I",48,0)
 D USAGE
"RTN","PXRMP5I",49,0)
 D XCLUDE
"RTN","PXRMP5I",50,0)
 ;D SMITEST
"RTN","PXRMP5I",51,0)
 Q
"RTN","PXRMP5I",52,0)
 ;
"RTN","PXRMP5I",53,0)
 ;===============================================================
"RTN","PXRMP5I",54,0)
PROCID  ;Set GUI process ID field
"RTN","PXRMP5I",55,0)
 N DA,DIE,DIEN,DSUB,DR
"RTN","PXRMP5I",56,0)
 S DIEN=0
"RTN","PXRMP5I",57,0)
 ;Find existing dialogs with GUI Process ID
"RTN","PXRMP5I",58,0)
 F  S DIEN=$O(^PXRMD(801.42,"AB",DIEN)) Q:'DIEN  D
"RTN","PXRMP5I",59,0)
 .;Determine process ID
"RTN","PXRMP5I",60,0)
 .S DSUB=$O(^PXRMD(801.42,"AB",DIEN,0)) Q:'DSUB
"RTN","PXRMP5I",61,0)
 .;Check that the dialog exists
"RTN","PXRMP5I",62,0)
 .I '$D(^PXRMD(801.41,DIEN,0)) Q
"RTN","PXRMP5I",63,0)
 .;Update new field in dialog file
"RTN","PXRMP5I",64,0)
 .S DA=DIEN,DIE="^PXRMD(801.41,",DR="46///"_DSUB D ^DIE
"RTN","PXRMP5I",65,0)
 ;
"RTN","PXRMP5I",66,0)
 ;Re-index dialog file
"RTN","PXRMP5I",67,0)
 N DIK S DIK="^PXRMD(801.41," D IXALL^DIK
"RTN","PXRMP5I",68,0)
 Q
"RTN","PXRMP5I",69,0)
 ;
"RTN","PXRMP5I",70,0)
PXRM(NAME,ARRAY) ;Validate prompts
"RTN","PXRMP5I",71,0)
 ;
"RTN","PXRMP5I",72,0)
 ;Ignore non-PXRM
"RTN","PXRMP5I",73,0)
 I $E(NAME,1,4)'="PXRM" Q 0
"RTN","PXRMP5I",74,0)
 ;
"RTN","PXRMP5I",75,0)
 I '$D(ARRAY) D
"RTN","PXRMP5I",76,0)
 .S ARRAY("PXRM ADD TO PROBLEM LIST")=""
"RTN","PXRMP5I",77,0)
 .S ARRAY("PXRM AIMS RESULT ELEMENT 1")=""
"RTN","PXRMP5I",78,0)
 .S ARRAY("PXRM AIMS RESULT GROUP")=""
"RTN","PXRMP5I",79,0)
 .S ARRAY("PXRM AUDC RESULT ELEMENT 1")=""
"RTN","PXRMP5I",80,0)
 .S ARRAY("PXRM AUDC RESULT ELEMENT 2")=""
"RTN","PXRMP5I",81,0)
 .S ARRAY("PXRM AUDC RESULT GROUP")=""
"RTN","PXRMP5I",82,0)
 .S ARRAY("PXRM AUDIT RESULT ELEMENT 1")=""
"RTN","PXRMP5I",83,0)
 .S ARRAY("PXRM AUDIT RESULT ELEMENT 2")=""
"RTN","PXRMP5I",84,0)
 .S ARRAY("PXRM AUDIT RESULT GROUP")=""
"RTN","PXRMP5I",85,0)
 .S ARRAY("PXRM BDI RESULT ELEMENT 1")=""
"RTN","PXRMP5I",86,0)
 .S ARRAY("PXRM BDI RESULT ELEMENT 2")=""
"RTN","PXRMP5I",87,0)
 .S ARRAY("PXRM BDI RESULT ELEMENT 3")=""
"RTN","PXRMP5I",88,0)
 .S ARRAY("PXRM BDI RESULT ELEMENT 4")=""
"RTN","PXRMP5I",89,0)
 .S ARRAY("PXRM BDI RESULT GROUP")=""
"RTN","PXRMP5I",90,0)
 .S ARRAY("PXRM CAGE RESULT ELEMENT 1")=""
"RTN","PXRMP5I",91,0)
 .S ARRAY("PXRM CAGE RESULT ELEMENT 2")=""
"RTN","PXRMP5I",92,0)
 .S ARRAY("PXRM CAGE RESULT GROUP")=""
"RTN","PXRMP5I",93,0)
 .S ARRAY("PXRM COMMENT")=""
"RTN","PXRMP5I",94,0)
 .S ARRAY("PXRM CONTRAINDICATED")=""
"RTN","PXRMP5I",95,0)
 .S ARRAY("PXRM DOM80 RESULT ELEMENT 1")=""
"RTN","PXRMP5I",96,0)
 .S ARRAY("PXRM DOM80 RESULT ELEMENT 2")=""
"RTN","PXRMP5I",97,0)
 .S ARRAY("PXRM DOM80 RESULT GROUP")=""
"RTN","PXRMP5I",98,0)
 .S ARRAY("PXRM DOMG RESULT ELEMENT 1")=""
"RTN","PXRMP5I",99,0)
 .S ARRAY("PXRM DOMG RESULT ELEMENT 2")=""
"RTN","PXRMP5I",100,0)
 .S ARRAY("PXRM DOMG RESULT GROUP")=""
"RTN","PXRMP5I",101,0)
 .S ARRAY("PXRM LEVEL OF SEVERITY")=""
"RTN","PXRMP5I",102,0)
 .S ARRAY("PXRM LEVEL OF UNDERSTANDING")=""
"RTN","PXRMP5I",103,0)
 .S ARRAY("PXRM MISS RESULT ELEMENT 1")=""
"RTN","PXRMP5I",104,0)
 .S ARRAY("PXRM MISS RESULT ELEMENT 2")=""
"RTN","PXRMP5I",105,0)
 .S ARRAY("PXRM MISS RESULT GROUP")=""
"RTN","PXRMP5I",106,0)
 .S ARRAY("PXRM OUTSIDE LOCATION")=""
"RTN","PXRMP5I",107,0)
 .S ARRAY("PXRM PRIMARY DIAGNOSIS")=""
"RTN","PXRMP5I",108,0)
 .S ARRAY("PXRM QUANTITY")=""
"RTN","PXRMP5I",109,0)
 .S ARRAY("PXRM REACTION")=""
"RTN","PXRMP5I",110,0)
 .S ARRAY("PXRM READING")=""
"RTN","PXRMP5I",111,0)
 .S ARRAY("PXRM REFUSED")=""
"RTN","PXRMP5I",112,0)
 .S ARRAY("PXRM REPEAT CONTRAINDICATED")=""
"RTN","PXRMP5I",113,0)
 .S ARRAY("PXRM RESULT (EXAM)")=""
"RTN","PXRMP5I",114,0)
 .S ARRAY("PXRM RESULT (SKIN TEST)")=""
"RTN","PXRMP5I",115,0)
 .S ARRAY("PXRM SERIES")=""
"RTN","PXRMP5I",116,0)
 .S ARRAY("PXRM VISIT DATE")=""
"RTN","PXRMP5I",117,0)
 .S ARRAY("PXRM ZUNG RESULT ELEMENT 1")=""
"RTN","PXRMP5I",118,0)
 .S ARRAY("PXRM ZUNG RESULT ELEMENT 2")=""
"RTN","PXRMP5I",119,0)
 .S ARRAY("PXRM ZUNG RESULT ELEMENT 3")=""
"RTN","PXRMP5I",120,0)
 .S ARRAY("PXRM ZUNG RESULT GROUP")=""
"RTN","PXRMP5I",121,0)
 ;Check if this is a national code
"RTN","PXRMP5I",122,0)
 Q $D(ARRAY(NAME))
"RTN","PXRMP5I",123,0)
 ;
"RTN","PXRMP5I",124,0)
 ;===============================================================
"RTN","PXRMP5I",125,0)
RIURL ;The new 811.9 DD contains a new style B cross-reference
"RTN","PXRMP5I",126,0)
 ;for the URL, rebuild the index.
"RTN","PXRMP5I",127,0)
 N DA,DIK,IEN
"RTN","PXRMP5I",128,0)
 S DIK(1)=".01^B"
"RTN","PXRMP5I",129,0)
 S IEN=0
"RTN","PXRMP5I",130,0)
 F  S IEN=$O(^PXD(811.9,IEN)) Q:+IEN=0  D
"RTN","PXRMP5I",131,0)
 . S DIK="^PXD(811.9,"_IEN_",50,"
"RTN","PXRMP5I",132,0)
 . S DA(1)=IEN
"RTN","PXRMP5I",133,0)
 . K ^PXD(811.9,IEN,50,"B")
"RTN","PXRMP5I",134,0)
 . S DA=0
"RTN","PXRMP5I",135,0)
 . F  S DA=$O(^PXD(811.9,IEN,50,DA)) Q:+DA=0  D
"RTN","PXRMP5I",136,0)
 .. D EN1^DIK
"RTN","PXRMP5I",137,0)
 Q
"RTN","PXRMP5I",138,0)
 ;
"RTN","PXRMP5I",139,0)
 ;===============================================================
"RTN","PXRMP5I",140,0)
SCLASS ;Set the class for existing entries.
"RTN","PXRMP5I",141,0)
 N ARRAY,CLASS,ENTRY,IEN,FILENUM,PT01,ROOT,TARGET
"RTN","PXRMP5I",142,0)
 F FILENUM=801.41,811.2,811.4,811.9 D
"RTN","PXRMP5I",143,0)
 . K TARGET
"RTN","PXRMP5I",144,0)
 . D FILE^DID(FILENUM,"","GLOBAL NAME","TARGET")
"RTN","PXRMP5I",145,0)
 . S ROOT=$$CREF^DILF(TARGET("GLOBAL NAME"))
"RTN","PXRMP5I",146,0)
 . S IEN=0
"RTN","PXRMP5I",147,0)
 . F  S IEN=$O(@ROOT@(IEN)) Q:+IEN=0  D
"RTN","PXRMP5I",148,0)
 .. S PT01=$P(@ROOT@(IEN,0),U,1),CLASS="L"
"RTN","PXRMP5I",149,0)
 .. I (PT01["VA-") S CLASS="N"
"RTN","PXRMP5I",150,0)
 .. I FILENUM=801.41,$$PXRM(PT01,.ARRAY) S CLASS="N"
"RTN","PXRMP5I",151,0)
 .. S $P(@ROOT@(IEN,100),U,1,2)=CLASS_U_""
"RTN","PXRMP5I",152,0)
 Q
"RTN","PXRMP5I",153,0)
 ;
"RTN","PXRMP5I",154,0)
 ;======================================================================
"RTN","PXRMP5I",155,0)
SSEC ;Set the security codes on file 811.8.
"RTN","PXRMP5I",156,0)
 N FILENUM,SECURITY
"RTN","PXRMP5I",157,0)
 S SECURITY("AUDIT")="@"
"RTN","PXRMP5I",158,0)
 S SECURITY("DD")="@"
"RTN","PXRMP5I",159,0)
 S SECURITY("DEL")="@"
"RTN","PXRMP5I",160,0)
 S SECURITY("LAYGO")="@"
"RTN","PXRMP5I",161,0)
 S SECURITY("RD")=""
"RTN","PXRMP5I",162,0)
 S SECURITY("WR")="@"
"RTN","PXRMP5I",163,0)
 F FILENUM=811.8 D
"RTN","PXRMP5I",164,0)
 . D FILESEC^DDMOD(FILENUM,.SECURITY)
"RTN","PXRMP5I",165,0)
 Q
"RTN","PXRMP5I",166,0)
 ;
"RTN","PXRMP5I",167,0)
 ;===============================================================
"RTN","PXRMP5I",168,0)
SMITEST ;Test silent mode install.
"RTN","PXRMP5I",169,0)
 N IEN,LUVALUE
"RTN","PXRMP5I",170,0)
 S LUVALUE(1)="Patch5 Pain Screening"
"RTN","PXRMP5I",171,0)
 S LUVALUE(2)="06/08/2001@13:27:23"
"RTN","PXRMP5I",172,0)
 S IEN=+$$FIND1^DIC(811.8,"","KU",.LUVALUE)
"RTN","PXRMP5I",173,0)
 I IEN'=0 D INSTALL^PXRMEXSI(IEN)
"RTN","PXRMP5I",174,0)
 Q
"RTN","PXRMP5I",175,0)
 ;
"RTN","PXRMP5I",176,0)
 ;===============================================================
"RTN","PXRMP5I",177,0)
TERMHS ;For test sites, make sure that Edit History 0 node is properly set.
"RTN","PXRMP5I",178,0)
 N DA,DIK,IEN,LASTEH
"RTN","PXRMP5I",179,0)
 S IEN=0
"RTN","PXRMP5I",180,0)
 F  S IEN=+$O(^PXRMD(811.5,IEN)) Q:IEN=0  D
"RTN","PXRMP5I",181,0)
 . I '$D(^PXRMD(811.5,IEN,110)) Q
"RTN","PXRMP5I",182,0)
 . I $D(^PXRMD(811.5,IEN,110,0)) Q
"RTN","PXRMP5I",183,0)
 . K DA,DIK
"RTN","PXRMP5I",184,0)
 . S LASTEH=+$O(^PXRMD(811.5,IEN,110,""),-1)
"RTN","PXRMP5I",185,0)
 . S ^PXRMD(811.5,IEN,110,0)=U_"811.53D"_U_LASTEH_U_LASTEH
"RTN","PXRMP5I",186,0)
 . S DIK(1)=".01^B"
"RTN","PXRMP5I",187,0)
 . S DIK="^PXRMD(811.5,"_IEN_",110,"
"RTN","PXRMP5I",188,0)
 . S DA(1)=IEN
"RTN","PXRMP5I",189,0)
 . S DA=LASTEH
"RTN","PXRMP5I",190,0)
 . D EN1^DIK
"RTN","PXRMP5I",191,0)
 Q
"RTN","PXRMP5I",192,0)
 ;
"RTN","PXRMP5I",193,0)
 ;===============================================================
"RTN","PXRMP5I",194,0)
TERMRM ;Remove the data from the obsolete fields in the Term file.
"RTN","PXRMP5I",195,0)
 ;Make sure the data has been successfully moved before the deletion.
"RTN","PXRMP5I",196,0)
 N CLASS,DLM,ED,IEN,NPROB,PROBLIST,SPON,SPONO,TEMP,TYPE
"RTN","PXRMP5I",197,0)
 ;If the old fields no longer exist skip this.
"RTN","PXRMP5I",198,0)
 S TEMP=$$GET1^DID(811.5,.02,"","LABEL")
"RTN","PXRMP5I",199,0)
 I TEMP="" Q
"RTN","PXRMP5I",200,0)
 S NPROB=0
"RTN","PXRMP5I",201,0)
 S IEN=0
"RTN","PXRMP5I",202,0)
 F  S IEN=$O(^PXRMD(811.5,IEN)) Q:+IEN=0  D
"RTN","PXRMP5I",203,0)
 . S TEMP=^PXRMD(811.5,IEN,0)
"RTN","PXRMP5I",204,0)
 . S TYPE=$P(TEMP,U,2)
"RTN","PXRMP5I",205,0)
 . S SPONO=$P(TEMP,U,3)
"RTN","PXRMP5I",206,0)
 . S DLM=$P(TEMP,U,5)
"RTN","PXRMP5I",207,0)
 . S TEMP=^PXRMD(811.5,IEN,100)
"RTN","PXRMP5I",208,0)
 . S CLASS=$P(TEMP,U,1)
"RTN","PXRMP5I",209,0)
 . S SPON=$P(TEMP,U,2)
"RTN","PXRMP5I",210,0)
 . S ED=$G(^PXRMD(811.5,IEN,110,1,0))
"RTN","PXRMP5I",211,0)
 . I CLASS'=TYPE D
"RTN","PXRMP5I",212,0)
 .. S NPROB=NPROB+1
"RTN","PXRMP5I",213,0)
 .. S PROBLIST(NPROB)="Term "_IEN_": CLASS does not match TYPE"
"RTN","PXRMP5I",214,0)
 . I SPON'=SPONO D
"RTN","PXRMP5I",215,0)
 .. S NPROB=NPROB+1
"RTN","PXRMP5I",216,0)
 .. S PROBLIST(NPROB)="Term "_IEN_": Sponsors do not match"
"RTN","PXRMP5I",217,0)
 . I ED'=DLM D
"RTN","PXRMP5I",218,0)
 .. S NPROB=NPROB+1
"RTN","PXRMP5I",219,0)
 .. S PROBLIST(NPROB)="Term "_IEN_": EDIT DATE does not match DATE LAST MODIFIED"
"RTN","PXRMP5I",220,0)
 ;If any problems were found print the list.
"RTN","PXRMP5I",221,0)
 I NPROB>0 D
"RTN","PXRMP5I",222,0)
 . D BMES^XPDUTL("There were errors updating the TERM file")
"RTN","PXRMP5I",223,0)
 . F IEN=1:1:NPROB D BMES^XPDUTL(PROBLIST(IEN))
"RTN","PXRMP5I",224,0)
 E  D
"RTN","PXRMP5I",225,0)
 .;No problems, delete the obsolete fields.
"RTN","PXRMP5I",226,0)
 . S IEN=0
"RTN","PXRMP5I",227,0)
 . F  S IEN=$O(^PXRMD(811.5,IEN)) Q:+IEN=0  D
"RTN","PXRMP5I",228,0)
 .. S $P(^PXRMD(811.5,IEN,0),U,2)=""
"RTN","PXRMP5I",229,0)
 .. S $P(^PXRMD(811.5,IEN,0),U,3)=""
"RTN","PXRMP5I",230,0)
 .. S $P(^PXRMD(811.5,IEN,0),U,5)=""
"RTN","PXRMP5I",231,0)
 Q
"RTN","PXRMP5I",232,0)
 ;
"RTN","PXRMP5I",233,0)
 ;===============================================================
"RTN","PXRMP5I",234,0)
TERMSAVE ;Save TERM TYPE, SPONSOR, and DATE LAST MODIFIED so they
"RTN","PXRMP5I",235,0)
 ;can be moved to the new locations.
"RTN","PXRMP5I",236,0)
 N IEN,TEMP,TEMP1,TEMP2
"RTN","PXRMP5I",237,0)
 ;If the old fields no longer exist skip this.
"RTN","PXRMP5I",238,0)
 S TEMP=$$GET1^DID(811.5,.02,"","LABEL")
"RTN","PXRMP5I",239,0)
 I TEMP="" Q
"RTN","PXRMP5I",240,0)
 S ^XTMP("PXRMTERMSAVE",0)=$$FMADD^XLFDT(DT,1)_U_DT_U_"PATCH 5 TERM SAVE"
"RTN","PXRMP5I",241,0)
 S IEN=0
"RTN","PXRMP5I",242,0)
 F  S IEN=$O(^PXRMD(811.5,IEN)) Q:+IEN=0  D
"RTN","PXRMP5I",243,0)
 .;Save CLASS and SPONSOR.
"RTN","PXRMP5I",244,0)
 . S TEMP=^PXRMD(811.5,IEN,0)
"RTN","PXRMP5I",245,0)
 . S TEMP1=$P(TEMP,U,2)_U_$P(TEMP,U,3)
"RTN","PXRMP5I",246,0)
 .;If there is a DATE LAST MODIFIED save it.
"RTN","PXRMP5I",247,0)
 . S TEMP2=$P(TEMP,U,5)
"RTN","PXRMP5I",248,0)
 . I $L(TEMP2)>0 S TEMP1=TEMP1_U_TEMP2
"RTN","PXRMP5I",249,0)
 . S ^XTMP("PXRMTERMSAVE",IEN)=TEMP1
"RTN","PXRMP5I",250,0)
 Q
"RTN","PXRMP5I",251,0)
 ;
"RTN","PXRMP5I",252,0)
 ;===============================================================
"RTN","PXRMP5I",253,0)
TERMUPD ;Update the term file to use the new fields.
"RTN","PXRMP5I",254,0)
 N IEN,TEMP,TEMP1
"RTN","PXRMP5I",255,0)
 ;If the old fields no longer exist skip this.
"RTN","PXRMP5I",256,0)
 S TEMP=$$GET1^DID(811.5,.02,"","LABEL")
"RTN","PXRMP5I",257,0)
 I TEMP="" Q
"RTN","PXRMP5I",258,0)
 S IEN=0
"RTN","PXRMP5I",259,0)
 F  S IEN=$O(^PXRMD(811.5,IEN)) Q:+IEN=0  D
"RTN","PXRMP5I",260,0)
 .;Set CLASS and SPONSOR.
"RTN","PXRMP5I",261,0)
 . S TEMP=^XTMP("PXRMTERMSAVE",IEN)
"RTN","PXRMP5I",262,0)
 . S ^PXRMD(811.5,IEN,100)=$P(TEMP,U,1,2)
"RTN","PXRMP5I",263,0)
 .;If there is a DATE LAST MODIFIED move it into EDIT HISTORY multiple
"RTN","PXRMP5I",264,0)
 .;LAST EDIT DATE.
"RTN","PXRMP5I",265,0)
 . S TEMP1=$P(TEMP,U,3)
"RTN","PXRMP5I",266,0)
 . I $L(TEMP1)>0 D
"RTN","PXRMP5I",267,0)
 .. N DA,DIK
"RTN","PXRMP5I",268,0)
 .. S ^PXRMD(811.5,IEN,110,0)=U_"811.53D"_U_1_U_1
"RTN","PXRMP5I",269,0)
 .. S ^PXRMD(811.5,IEN,110,1,0)=TEMP1
"RTN","PXRMP5I",270,0)
 .. S DIK(1)=".01^B"
"RTN","PXRMP5I",271,0)
 .. S DIK="^PXRMD(811.5,"_IEN_",110,"
"RTN","PXRMP5I",272,0)
 .. S DA(1)=IEN
"RTN","PXRMP5I",273,0)
 .. S DA=LASTEH
"RTN","PXRMP5I",274,0)
 .. D EN1^DIK
"RTN","PXRMP5I",275,0)
 ;
"RTN","PXRMP5I",276,0)
 K ^XTMP("PXRMTERMSAVE")
"RTN","PXRMP5I",277,0)
 Q
"RTN","PXRMP5I",278,0)
 ;
"RTN","PXRMP5I",279,0)
 ;===============================================================
"RTN","PXRMP5I",280,0)
USAGE ;Set all reminders for Clinician Usage (to appear in CPRS)
"RTN","PXRMP5I",281,0)
 N DIEN,USAGE
"RTN","PXRMP5I",282,0)
 S DIEN=0,USAGE="C"
"RTN","PXRMP5I",283,0)
 F  S DIEN=$O(^PXD(811.9,DIEN)) Q:'DIEN  D
"RTN","PXRMP5I",284,0)
 .N DA,DIE,DR
"RTN","PXRMP5I",285,0)
 .S DR="103///^S X=USAGE",DIE="^PXD(811.9,",DA=DIEN
"RTN","PXRMP5I",286,0)
 .D ^DIE
"RTN","PXRMP5I",287,0)
 Q
"RTN","PXRMP5I",288,0)
 ;
"RTN","PXRMP5I",289,0)
 ;===============================================================
"RTN","PXRMP5I",290,0)
XCLUDE ;Modify Exclude from P/N flag on dialog group components
"RTN","PXRMP5I",291,0)
 N DIEN,DSUBIEN,DSUB,DSUBTYP
"RTN","PXRMP5I",292,0)
 S DIEN=0
"RTN","PXRMP5I",293,0)
 ;Scan reminder dialog file
"RTN","PXRMP5I",294,0)
 F  S DIEN=$O(^PXRMD(801.41,DIEN)) Q:'DIEN  D
"RTN","PXRMP5I",295,0)
 .;Ignore anything that's not a group
"RTN","PXRMP5I",296,0)
 .I $P($G(^PXRMD(801.41,DIEN,0)),U,4)'="G" Q
"RTN","PXRMP5I",297,0)
 .;Ignore group if not exclude from P/N
"RTN","PXRMP5I",298,0)
 .I '$P($G(^PXRMD(801.41,DIEN,2)),U,3) Q
"RTN","PXRMP5I",299,0)
 .;Ignore group if suppress checkbox
"RTN","PXRMP5I",300,0)
 .I $P($G(^PXRMD(801.41,DIEN,0)),U,11) Q
"RTN","PXRMP5I",301,0)
 .S DSUB=0
"RTN","PXRMP5I",302,0)
 .;Scan through group components
"RTN","PXRMP5I",303,0)
 .F  S DSUB=$O(^PXRMD(801.41,DIEN,10,DSUB)) Q:'DSUB  D
"RTN","PXRMP5I",304,0)
 ..;Get component ien
"RTN","PXRMP5I",305,0)
 ..S DSUBIEN=$P($G(^PXRMD(801.41,DIEN,10,DSUB,0)),U,2) Q:'DSUBIEN
"RTN","PXRMP5I",306,0)
 ..;If this is a group ignore
"RTN","PXRMP5I",307,0)
 ..I $P($G(^PXRMD(801.41,DSUBIEN,0)),U,4)="G" Q
"RTN","PXRMP5I",308,0)
 ..;Otherwise set the component as exclude (within the group)
"RTN","PXRMP5I",309,0)
 ..S $P(^PXRMD(801.41,DIEN,10,DSUB,0),U,8)=1
"RTN","PXRMP5I",310,0)
 Q
"RTN","PXRMP5IA")
0^64^B31582998
"RTN","PXRMP5IA",1,0)
PXRMP5IA ; SLC/PJH - Patch 5 Reformat Dialogs. ;06/25/2001
"RTN","PXRMP5IA",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMP5IA",3,0)
 ;
"RTN","PXRMP5IA",4,0)
 Q
"RTN","PXRMP5IA",5,0)
 ;
"RTN","PXRMP5IA",6,0)
 ;Build array of national term names
"RTN","PXRMP5IA",7,0)
 ;----------------------------------
"RTN","PXRMP5IA",8,0)
ARRAY1 S ARRAY1("ALANINE AMINO (ALT) (SGPT)")=""
"RTN","PXRMP5IA",9,0)
 S ARRAY1("BILIRUBIN")=""
"RTN","PXRMP5IA",10,0)
 S ARRAY1("DECLINED HEP C RISK ASSESSMENT")=""
"RTN","PXRMP5IA",11,0)
 S ARRAY1("HAV Ab positive")=""
"RTN","PXRMP5IA",12,0)
 S ARRAY1("HAV IgG positive")=""
"RTN","PXRMP5IA",13,0)
 S ARRAY1("HAV IgM Ab positive")=""
"RTN","PXRMP5IA",14,0)
 S ARRAY1("HBc Ab IgM positive")=""
"RTN","PXRMP5IA",15,0)
 S ARRAY1("HBe Ag positive")=""
"RTN","PXRMP5IA",16,0)
 S ARRAY1("HBs Ab positive")=""
"RTN","PXRMP5IA",17,0)
 S ARRAY1("HBs Ag positive")=""
"RTN","PXRMP5IA",18,0)
 S ARRAY1("HEP C VIRUS ANTIBODY NEGATIVE")=""
"RTN","PXRMP5IA",19,0)
 S ARRAY1("HEP C VIRUS ANTIBODY POSITIVE")=""
"RTN","PXRMP5IA",20,0)
 S ARRAY1("HEPATITIS C INFECTION")=""
"RTN","PXRMP5IA",21,0)
 S ARRAY1("INTERFERON ALFA-2A")=""
"RTN","PXRMP5IA",22,0)
 S ARRAY1("INTERFERON ALFA-2B")=""
"RTN","PXRMP5IA",23,0)
 S ARRAY1("INTERFERON ALFA-2B/RIBAVIRIN")=""
"RTN","PXRMP5IA",24,0)
 S ARRAY1("INTERFERON ALFA-3N")=""
"RTN","PXRMP5IA",25,0)
 S ARRAY1("INTERFERON ALFACON-1")=""
"RTN","PXRMP5IA",26,0)
 S ARRAY1("INTERFERON BETA-1A")=""
"RTN","PXRMP5IA",27,0)
 S ARRAY1("INTERFERON BETA-1B")=""
"RTN","PXRMP5IA",28,0)
 S ARRAY1("NO RISK FACTORS FOR HEP C")=""
"RTN","PXRMP5IA",29,0)
 S ARRAY1("PREVIOUSLY ASSESSED HEP C RISK")=""
"RTN","PXRMP5IA",30,0)
 S ARRAY1("PXRM*1.5*5")=""
"RTN","PXRMP5IA",31,0)
 S ARRAY1("Pain Screen")=""
"RTN","PXRMP5IA",32,0)
 S ARRAY1("RIBAVIRIN")=""
"RTN","PXRMP5IA",33,0)
 S ARRAY1("RISK FACTOR FOR HEPATITIS C")=""
"RTN","PXRMP5IA",34,0)
 S ARRAY1("TRANSFERASE (AST) (SGOT)")=""
"RTN","PXRMP5IA",35,0)
 Q
"RTN","PXRMP5IA",36,0)
 ;
"RTN","PXRMP5IA",37,0)
 ;
"RTN","PXRMP5IA",38,0)
 ;Check for terms with no class
"RTN","PXRMP5IA",39,0)
 ;-----------------------------
"RTN","PXRMP5IA",40,0)
TERMS N ARRAY1,CLASS,TERMIEN,TERMNAME
"RTN","PXRMP5IA",41,0)
 ;
"RTN","PXRMP5IA",42,0)
 ;
"RTN","PXRMP5IA",43,0)
 S TERMIEN=0
"RTN","PXRMP5IA",44,0)
 ;Scan term file
"RTN","PXRMP5IA",45,0)
 F  S TERMIEN=$O(^PXRMD(811.5,TERMIEN)) Q:'TERMIEN  D
"RTN","PXRMP5IA",46,0)
 .;Ignore terms which have a class entry
"RTN","PXRMP5IA",47,0)
 .I $P($G(^PXRMD(811.5,TERMIEN,100)),U)'="" Q 
"RTN","PXRMP5IA",48,0)
 .;Build list of national terms
"RTN","PXRMP5IA",49,0)
 .I '$D(ARRAY1) D ARRAY1
"RTN","PXRMP5IA",50,0)
 .;Term name
"RTN","PXRMP5IA",51,0)
 .S TERMNAME=$P($G(^PXRMD(811.5,TERMIEN,0)),U) Q:TERMNAME=""
"RTN","PXRMP5IA",52,0)
 .;Determine if national or local
"RTN","PXRMP5IA",53,0)
 .S CLASS="L" I $D(ARRAY1(TERMNAME)) S CLASS="N"
"RTN","PXRMP5IA",54,0)
 .;Update
"RTN","PXRMP5IA",55,0)
 .S $P(^PXRMD(811.5,TERMIEN,100),U)=CLASS
"RTN","PXRMP5IA",56,0)
 Q
"RTN","PXRMP5IA",57,0)
 ;
"RTN","PXRMP5IA",58,0)
 ;==============================================================
"RTN","PXRMP5IA",59,0)
 ;
"RTN","PXRMP5IA",60,0)
 ;This routine detects old style dialog elements using local prompts
"RTN","PXRMP5IA",61,0)
 ;to create comment checkboxes. The old local prompts and PXRM COMMENT
"RTN","PXRMP5IA",62,0)
 ;are deleted and replaced in the dialog with a new prompt. The new 
"RTN","PXRMP5IA",63,0)
 ;prompt is a copy of PXRM COMMENT using the new CHECKBOX multiple.
"RTN","PXRMP5IA",64,0)
 ;
"RTN","PXRMP5IA",65,0)
 ;The new prompts are namespaced PXRM*1.5*5_Element Name
"RTN","PXRMP5IA",66,0)
 ;
"RTN","PXRMP5IA",67,0)
 ;Search for checkbox type additional prompts
"RTN","PXRMP5IA",68,0)
 ;-------------------------------------------
"RTN","PXRMP5IA",69,0)
SCAN N CAPTION,COMMENT,DIEN,DGUI,DONE,DSUB,IENN,PROMPT,PIEN,PNAME,PTEXT,SCNT
"RTN","PXRMP5IA",70,0)
 K ^TMP("PXRMP5I",$J)
"RTN","PXRMP5IA",71,0)
 ;
"RTN","PXRMP5IA",72,0)
 S DIEN=0,DONE=0
"RTN","PXRMP5IA",73,0)
 F  S DIEN=$O(^PXRMD(801.41,DIEN)) Q:'DIEN  Q:DONE  D
"RTN","PXRMP5IA",74,0)
 .;Output array
"RTN","PXRMP5IA",75,0)
 .N ARRAY
"RTN","PXRMP5IA",76,0)
 .;Ignore if not an element
"RTN","PXRMP5IA",77,0)
 .I $P($G(^PXRMD(801.41,DIEN,0)),U,4)'="E" Q
"RTN","PXRMP5IA",78,0)
 .;Scan sub-components
"RTN","PXRMP5IA",79,0)
 .S DSUB=0,COMMENT=0,PROMPT=0,SCNT=0,CAPTION=""
"RTN","PXRMP5IA",80,0)
 .F  S DSUB=$O(^PXRMD(801.41,DIEN,10,DSUB)) Q:'DSUB  D
"RTN","PXRMP5IA",81,0)
 ..;Sub-component/prompt ien
"RTN","PXRMP5IA",82,0)
 ..S PIEN=$P($G(^PXRMD(801.41,DIEN,10,DSUB,0)),U,2) Q:'PIEN
"RTN","PXRMP5IA",83,0)
 ..;Ignore if not a prompt
"RTN","PXRMP5IA",84,0)
 ..I $P($G(^PXRMD(801.41,PIEN,0)),U,4)'="P" Q
"RTN","PXRMP5IA",85,0)
 ..;Find the process ID (from GUI process id file)
"RTN","PXRMP5IA",86,0)
 ..S DGUI=$$GUI^PXRMDLLA(PIEN)
"RTN","PXRMP5IA",87,0)
 ..;Save caption
"RTN","PXRMP5IA",88,0)
 ..I DGUI="COM" D  Q
"RTN","PXRMP5IA",89,0)
 ...S COMMENT=PIEN,CAPTION=$P($G(^PXRMD(801.41,PIEN,2)),U,4)
"RTN","PXRMP5IA",90,0)
 ..;If the process ID is not null ignore (all PXRM prompts and copies)
"RTN","PXRMP5IA",91,0)
 ..I DGUI'="" Q
"RTN","PXRMP5IA",92,0)
 ..;Get prompt name and caption
"RTN","PXRMP5IA",93,0)
 ..S PNAME=$P($G(^PXRMD(801.41,PIEN,0)),U),PROMPT=1
"RTN","PXRMP5IA",94,0)
 ..S PTEXT=$P($G(^PXRMD(801.41,PIEN,2)),U,4)
"RTN","PXRMP5IA",95,0)
 ..;Save to array of checkbox text
"RTN","PXRMP5IA",96,0)
 ..S SCNT=SCNT+1,ARRAY(SCNT)=PNAME_U_PTEXT_U_PIEN
"RTN","PXRMP5IA",97,0)
 .;If PXRM COMMENT and prompts were found build new prompt
"RTN","PXRMP5IA",98,0)
 .I COMMENT,PROMPT D UPDATE(.ARRAY,DIEN,COMMENT,CAPTION)
"RTN","PXRMP5IA",99,0)
 ;
"RTN","PXRMP5IA",100,0)
 ;Abort
"RTN","PXRMP5IA",101,0)
 I DONE=1 D BMES^XPDUTL("Conversion has already been run") Q
"RTN","PXRMP5IA",102,0)
 ;
"RTN","PXRMP5IA",103,0)
 ;Finally delete the old style prompts
"RTN","PXRMP5IA",104,0)
 S PIEN=0
"RTN","PXRMP5IA",105,0)
 F  S PIEN=$O(^TMP("PXRMP5I",$J,PIEN)) Q:'PIEN  D
"RTN","PXRMP5IA",106,0)
 .;Ignore if used elsewhere
"RTN","PXRMP5IA",107,0)
 .I $D(^PXRMD(801.41,"AD",PIEN)) Q
"RTN","PXRMP5IA",108,0)
 .;Delete
"RTN","PXRMP5IA",109,0)
 .N DA,DIK
"RTN","PXRMP5IA",110,0)
 .S DA=PIEN,DIK="^PXRMD(801.41,"
"RTN","PXRMP5IA",111,0)
 .D ^DIK
"RTN","PXRMP5IA",112,0)
 ;
"RTN","PXRMP5IA",113,0)
 ;Clear workfile
"RTN","PXRMP5IA",114,0)
 K ^TMP("PXRMP5I",$J)
"RTN","PXRMP5IA",115,0)
 Q
"RTN","PXRMP5IA",116,0)
 ;
"RTN","PXRMP5IA",117,0)
 ;Build new additional prompt
"RTN","PXRMP5IA",118,0)
 ;---------------------------
"RTN","PXRMP5IA",119,0)
UPDATE(ARRAY,DIEN,COMMENT,CAPTION) ;
"RTN","PXRMP5IA",120,0)
 N DNAME,FDA,FDAIEN,IC,IENN,MSG,SUB
"RTN","PXRMP5IA",121,0)
 ;Create new prompt
"RTN","PXRMP5IA",122,0)
 I COMMENT=1 D
"RTN","PXRMP5IA",123,0)
 .S DNAME="PXRM*1.5*5 "_$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMP5IA",124,0)
 ;Abort if already done
"RTN","PXRMP5IA",125,0)
 I COMMENT=1,$D(^PXRMD(801.41,"B",DNAME)) S DONE=1 Q
"RTN","PXRMP5IA",126,0)
 ;Or if checkboxes exist
"RTN","PXRMP5IA",127,0)
 I COMMENT'=1,$D(^PXRMD(801.41,COMMENT,45)) Q
"RTN","PXRMP5IA",128,0)
 ;Prompt already exists
"RTN","PXRMP5IA",129,0)
 I COMMENT'=1 D
"RTN","PXRMP5IA",130,0)
 .S DNAME=$P($G(^PXRMD(801.41,COMMENT,0)),U)
"RTN","PXRMP5IA",131,0)
 ;FDA
"RTN","PXRMP5IA",132,0)
 ;Build FDA array
"RTN","PXRMP5IA",133,0)
 S FDA(801.41,"?+1,",.01)=DNAME
"RTN","PXRMP5IA",134,0)
 S FDA(801.41,"?+1,",4)="P"
"RTN","PXRMP5IA",135,0)
 S FDA(801.41,"?+1,",5)=CAPTION
"RTN","PXRMP5IA",136,0)
 S FDA(801.41,"?+1,",46)=1
"RTN","PXRMP5IA",137,0)
 S FDA(801.41,"?+1,",100)="L"
"RTN","PXRMP5IA",138,0)
 ;Update checkbox multiple
"RTN","PXRMP5IA",139,0)
 S SCNT=0,IC=1
"RTN","PXRMP5IA",140,0)
 F  S SCNT=$O(ARRAY(SCNT)) Q:'SCNT  D
"RTN","PXRMP5IA",141,0)
 .S TEXT=$P(ARRAY(SCNT),U,2) Q:TEXT=""
"RTN","PXRMP5IA",142,0)
 .S IC=IC+1,SUB="+"_IC_",?+1,"
"RTN","PXRMP5IA",143,0)
 .S FDA(801.4145,SUB,.01)=IC
"RTN","PXRMP5IA",144,0)
 .S FDA(801.4145,SUB,2)=TEXT
"RTN","PXRMP5IA",145,0)
 ;Call updater to create new prompt
"RTN","PXRMP5IA",146,0)
 D UPDATE^DIE("","FDA","FDAIEN","MSG")
"RTN","PXRMP5IA",147,0)
 ;Halt conversion if update fails
"RTN","PXRMP5IA",148,0)
 I $D(MSG) D ERR^PXRMDBL3(DNAME) Q
"RTN","PXRMP5IA",149,0)
 ;IEN of new prompt
"RTN","PXRMP5IA",150,0)
 S IENN=FDAIEN(1)
"RTN","PXRMP5IA",151,0)
 ;
"RTN","PXRMP5IA",152,0)
 ;Save the prompts to be deleted into ^TMP
"RTN","PXRMP5IA",153,0)
 N DSUB,FIRST,PIEN,PNAME,SCNT
"RTN","PXRMP5IA",154,0)
 S SCNT=0
"RTN","PXRMP5IA",155,0)
 F  S SCNT=$O(ARRAY(SCNT)) Q:'SCNT  D
"RTN","PXRMP5IA",156,0)
 .S PNAME=$P(ARRAY(SCNT),U),PIEN=$P(ARRAY(SCNT),U,3)
"RTN","PXRMP5IA",157,0)
 .S ^TMP("PXRMP5I",$J,PIEN)=PNAME
"RTN","PXRMP5IA",158,0)
 ;
"RTN","PXRMP5IA",159,0)
 ;Replace PXRM COMMENT and delete old style prompts from dialog
"RTN","PXRMP5IA",160,0)
 S DSUB=0,FIRST=1
"RTN","PXRMP5IA",161,0)
 F  S DSUB=$O(^PXRMD(801.41,DIEN,10,DSUB)) Q:'DSUB  D
"RTN","PXRMP5IA",162,0)
 .;Sub-component/prompt ien
"RTN","PXRMP5IA",163,0)
 .S PIEN=$P($G(^PXRMD(801.41,DIEN,10,DSUB,0)),U,2) Q:'PIEN
"RTN","PXRMP5IA",164,0)
 .;Ignore if not a prompt
"RTN","PXRMP5IA",165,0)
 .I $P($G(^PXRMD(801.41,PIEN,0)),U,4)'="P" Q
"RTN","PXRMP5IA",166,0)
 .;Find the process ID (from GUI process id file)
"RTN","PXRMP5IA",167,0)
 .S DGUI=$$GUI^PXRMDLLA(PIEN)
"RTN","PXRMP5IA",168,0)
 .;PXRM COMMENT (or copy) is found replace
"RTN","PXRMP5IA",169,0)
 .I DGUI="COM" D  Q
"RTN","PXRMP5IA",170,0)
 ..S:FIRST $P(^PXRMD(801.41,DIEN,10,DSUB,0),U,2)=IENN,FIRST=0
"RTN","PXRMP5IA",171,0)
 .;Ignore PCE prompts
"RTN","PXRMP5IA",172,0)
 .I DGUI'="" Q
"RTN","PXRMP5IA",173,0)
 .;Otherwise remove
"RTN","PXRMP5IA",174,0)
 .N DA,DIK
"RTN","PXRMP5IA",175,0)
 .S DA=DSUB,DA(1)=DIEN
"RTN","PXRMP5IA",176,0)
 .S DIK="^PXRMD(801.41,"_DA(1)_",10,"
"RTN","PXRMP5IA",177,0)
 .D ^DIK
"RTN","PXRMP5IA",178,0)
 ;
"RTN","PXRMP5IA",179,0)
 ;Re-index
"RTN","PXRMP5IA",180,0)
 N DIK,DA S DIK="^PXRMD(801.41,",DA=DIEN
"RTN","PXRMP5IA",181,0)
 D IX^DIK
"RTN","PXRMP5IA",182,0)
 Q
"RTN","PXRMPTDF")
0^58^B34822019
"RTN","PXRMPTDF",1,0)
PXRMPTDF ; SLC/PKR/PJH - Routines for definition print templates ;06/07/2001
"RTN","PXRMPTDF",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMPTDF",3,0)
 ;
"RTN","PXRMPTDF",4,0)
 ;======================================================================
"RTN","PXRMPTDF",5,0)
AFREQ ; Print baseline FREQUENCY/AGE RANGE.
"RTN","PXRMPTDF",6,0)
 N PXAMAX,PXAMIN,PXF,PXF0,PXW
"RTN","PXRMPTDF",7,0)
 S PXF0=$G(^PXD(811.9,D0,7,D1,0))
"RTN","PXRMPTDF",8,0)
 S PXF=$P(PXF0,U,1)
"RTN","PXRMPTDF",9,0)
 S PXAMIN=$P(PXF0,U,2)
"RTN","PXRMPTDF",10,0)
 S PXAMAX=$P(PXF0,U,3)
"RTN","PXRMPTDF",11,0)
 I PXF="" S PXW="MISSING FREQUENCY"
"RTN","PXRMPTDF",12,0)
 S PXW=$$FREQ(PXF)
"RTN","PXRMPTDF",13,0)
 S PXW=PXW_$$FMTAGE^PXRMAGE(PXAMIN,PXAMAX)
"RTN","PXRMPTDF",14,0)
 W "  ",PXW
"RTN","PXRMPTDF",15,0)
 Q
"RTN","PXRMPTDF",16,0)
 ;
"RTN","PXRMPTDF",17,0)
 ;======================================================================
"RTN","PXRMPTDF",18,0)
DUEWI ;Print DO WITHIN time frame
"RTN","PXRMPTDF",19,0)
 N PXF,PXW
"RTN","PXRMPTDF",20,0)
 S PXF=$P($G(^PXD(811.9,D0,0)),U,4)
"RTN","PXRMPTDF",21,0)
 I (PXF="")!(+PXF=0) W "  Wait until actually DUE" Q
"RTN","PXRMPTDF",22,0)
 S PXW=$$FREQ(PXF)
"RTN","PXRMPTDF",23,0)
 W "  Do if DUE within "_PXW
"RTN","PXRMPTDF",24,0)
 Q
"RTN","PXRMPTDF",25,0)
 ;
"RTN","PXRMPTDF",26,0)
 ;======================================================================
"RTN","PXRMPTDF",27,0)
ENTRYNAM(VPTR) ;Given the variable pointer return the entry name. The
"RTN","PXRMPTDF",28,0)
 ;variable pointer list contains the information necessary to do the
"RTN","PXRMPTDF",29,0)
 ;look up.
"RTN","PXRMPTDF",30,0)
 N IEN,FILENUM,NAME,ROOT
"RTN","PXRMPTDF",31,0)
 S IEN=$P(VPTR,";",1)
"RTN","PXRMPTDF",32,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTDF",33,0)
 S FILENUM=$P(PXRMFVPL(ROOT),U,1)
"RTN","PXRMPTDF",34,0)
 S NAME=$$GET1^DIQ(FILENUM,IEN,.01,"","","")
"RTN","PXRMPTDF",35,0)
 Q NAME
"RTN","PXRMPTDF",36,0)
 ;
"RTN","PXRMPTDF",37,0)
 ;======================================================================
"RTN","PXRMPTDF",38,0)
FREQ(FREQ) ;Format frequency.
"RTN","PXRMPTDF",39,0)
 N STR
"RTN","PXRMPTDF",40,0)
 I +FREQ=0 S STR=FREQ_" - Not Indicated" Q STR
"RTN","PXRMPTDF",41,0)
 I FREQ?1"99Y" S STR="99Y - Once"
"RTN","PXRMPTDF",42,0)
 E  S STR=+FREQ_($S(FREQ?1N.N1"D":" day",FREQ?1N.N1"M":" month",FREQ?1N.N1"Y":" year",1:""))_$S(+FREQ>1:"s",1:"")
"RTN","PXRMPTDF",43,0)
 Q STR
"RTN","PXRMPTDF",44,0)
 ;
"RTN","PXRMPTDF",45,0)
 ;======================================================================
"RTN","PXRMPTDF",46,0)
FTYPE(VPTR) ;Return finding type.
"RTN","PXRMPTDF",47,0)
 N FTYPE,ROOT
"RTN","PXRMPTDF",48,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTDF",49,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMPTDF",50,0)
 S FTYPE=$P(PXRMFVPL(ROOT),U,2)
"RTN","PXRMPTDF",51,0)
 Q FTYPE
"RTN","PXRMPTDF",52,0)
 ;
"RTN","PXRMPTDF",53,0)
 ;======================================================================
"RTN","PXRMPTDF",54,0)
GENFREQ(PXF0) ;Print age range frequency set for findings.
"RTN","PXRMPTDF",55,0)
 N PXF,PXW,PXAMIN,PXAMAX
"RTN","PXRMPTDF",56,0)
 S PXF=$P(PXF0,U,4)
"RTN","PXRMPTDF",57,0)
 I PXF="" Q ""
"RTN","PXRMPTDF",58,0)
 S PXAMIN=$P(PXF0,U,2)
"RTN","PXRMPTDF",59,0)
 S PXAMAX=$P(PXF0,U,3)
"RTN","PXRMPTDF",60,0)
 S PXW=$$FREQ(PXF)
"RTN","PXRMPTDF",61,0)
 S PXW=PXW_$$FMTAGE^PXRMAGE(PXAMIN,PXAMAX)
"RTN","PXRMPTDF",62,0)
 Q PXW
"RTN","PXRMPTDF",63,0)
 ;
"RTN","PXRMPTDF",64,0)
 ;======================================================================
"RTN","PXRMPTDF",65,0)
GENIEN(FINDING) ;Return internal entry number for findings.
"RTN","PXRMPTDF",66,0)
 N F0,IEN,PREFIX,ROOT,VPTR
"RTN","PXRMPTDF",67,0)
 S ROOT="^PXD(811.9,D0,20,FINDING,0)"
"RTN","PXRMPTDF",68,0)
 S F0=@ROOT
"RTN","PXRMPTDF",69,0)
 S VPTR=$P(F0,U,1)
"RTN","PXRMPTDF",70,0)
 S IEN=$P(VPTR,";",1)
"RTN","PXRMPTDF",71,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTDF",72,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMPTDF",73,0)
 S VPTR=PXRMFVPL(ROOT)
"RTN","PXRMPTDF",74,0)
 S PREFIX=$P(VPTR,U,4)
"RTN","PXRMPTDF",75,0)
 Q " (FI("_+FINDING_")="_PREFIX_"("_IEN_"))"
"RTN","PXRMPTDF",76,0)
 ;
"RTN","PXRMPTDF",77,0)
 ;======================================================================
"RTN","PXRMPTDF",78,0)
PFIND ;Print the reminder definition finding multiple.
"RTN","PXRMPTDF",79,0)
 N DIWF,FIELD,FINDING,FIND0,PAD,PADS,RJC,XEXT
"RTN","PXRMPTDF",80,0)
 ;If called by a FileMan print build the variable pointer list.
"RTN","PXRMPTDF",81,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMPTDF",82,0)
 ;Because of the way DIWP works we need to format all the found and
"RTN","PXRMPTDF",83,0)
 ;not found text first and store it in ^TMP.
"RTN","PXRMPTDF",84,0)
 K ^TMP($J,"W")
"RTN","PXRMPTDF",85,0)
 S RJC=29
"RTN","PXRMPTDF",86,0)
 S PAD=" "
"RTN","PXRMPTDF",87,0)
 S PADS=""
"RTN","PXRMPTDF",88,0)
 F IND=1:1:(RJC+2) S PADS=PADS_PAD
"RTN","PXRMPTDF",89,0)
 S FINDING=0
"RTN","PXRMPTDF",90,0)
 F  S FINDING=$O(^PXD(811.9,D0,20,FINDING)) Q:+FINDING=0  D
"RTN","PXRMPTDF",91,0)
 . D WPFORMAT(FINDING,RJC,1)
"RTN","PXRMPTDF",92,0)
 . D WPFORMAT(FINDING,RJC,2)
"RTN","PXRMPTDF",93,0)
 S DIWF="C80",DIWL=2
"RTN","PXRMPTDF",94,0)
 K ^UTILITY($J,"W")
"RTN","PXRMPTDF",95,0)
 S FINDING=0
"RTN","PXRMPTDF",96,0)
 F  S FINDING=$O(^PXD(811.9,D0,20,FINDING)) Q:+FINDING=0  D
"RTN","PXRMPTDF",97,0)
 . S FIND0=^PXD(811.9,D0,20,FINDING,0)
"RTN","PXRMPTDF",98,0)
 . S FIELD=$P(FIND0,U,1)
"RTN","PXRMPTDF",99,0)
 . S X=" "
"RTN","PXRMPTDF",100,0)
 . D ^DIWP
"RTN","PXRMPTDF",101,0)
 . S X=$$RJ^XLFSTR("Finding Item:",RJC,PAD)
"RTN","PXRMPTDF",102,0)
 . S X=X_" "_$$ENTRYNAM(FIELD)
"RTN","PXRMPTDF",103,0)
 . S X=X_" "_$$GENIEN(FINDING)
"RTN","PXRMPTDF",104,0)
 . D ^DIWP
"RTN","PXRMPTDF",105,0)
 .;
"RTN","PXRMPTDF",106,0)
 . S X=$$RJ^XLFSTR("Finding Type:",RJC,PAD)
"RTN","PXRMPTDF",107,0)
 . S X=X_" "_$$FTYPE(FIELD)
"RTN","PXRMPTDF",108,0)
 . D ^DIWP
"RTN","PXRMPTDF",109,0)
 .;
"RTN","PXRMPTDF",110,0)
 . S FIELD=$P(FIND0,U,4)
"RTN","PXRMPTDF",111,0)
 . I $L(FIELD)>0 D
"RTN","PXRMPTDF",112,0)
 .. S X=$$RJ^XLFSTR("Match Frequency/Age:",RJC,PAD)
"RTN","PXRMPTDF",113,0)
 .. S X=X_" "_$$GENFREQ(FIND0)
"RTN","PXRMPTDF",114,0)
 .. D ^DIWP
"RTN","PXRMPTDF",115,0)
 .;
"RTN","PXRMPTDF",116,0)
 . D SFDISP(FIND0,5,6,"Rank Frequency:",RJC,PAD)
"RTN","PXRMPTDF",117,0)
 . D SFDISP(FIND0,6,7,"Use in Resolution Logic:",RJC,PAD)
"RTN","PXRMPTDF",118,0)
 . D SFDISP(FIND0,7,8,"Use in Patient Cohort Logic:",RJC,PAD)
"RTN","PXRMPTDF",119,0)
 . D SFDISP(FIND0,8,9,"Effective Period:",RJC,PAD)
"RTN","PXRMPTDF",120,0)
 . D SFDISP(FIND0,11,12,"Effective Date:",RJC,PAD)
"RTN","PXRMPTDF",121,0)
 . D SFDISP(FIND0,9,10,"Use Inactive Problems:",RJC,PAD)
"RTN","PXRMPTDF",122,0)
 . D SFDISP(FIND0,10,11,"Within Category Rank:",RJC,PAD)
"RTN","PXRMPTDF",123,0)
 . D SFDISP(FIND0,12,13,"MH Scale:",RJC,PAD)
"RTN","PXRMPTDF",124,0)
 . D SFDISP(FIND0,13,16,"Rx Type:",RJC,PAD)
"RTN","PXRMPTDF",125,0)
 .;
"RTN","PXRMPTDF",126,0)
 . S FIND0=$G(^PXD(811.9,D0,20,FINDING,3))
"RTN","PXRMPTDF",127,0)
 . D SFDISP(FIND0,1,14,"Condition:",RJC,PAD)
"RTN","PXRMPTDF",128,0)
 . D SFDISP(FIND0,2,15,"Condition Case Sensitive:",RJC,PAD)
"RTN","PXRMPTDF",129,0)
 .;
"RTN","PXRMPTDF",130,0)
 . D WPOUT(FINDING,"Found Text:",RJC,PAD,PADS,1)
"RTN","PXRMPTDF",131,0)
 . D WPOUT(FINDING,"Not Found Text:",RJC,PAD,PADS,2)
"RTN","PXRMPTDF",132,0)
 .;
"RTN","PXRMPTDF",133,0)
 ;
"RTN","PXRMPTDF",134,0)
 K ^TMP($J,"W")
"RTN","PXRMPTDF",135,0)
 ;^UTILITY($J,"W") will be killed by ^DIWW in the print template.
"RTN","PXRMPTDF",136,0)
 Q
"RTN","PXRMPTDF",137,0)
 ;
"RTN","PXRMPTDF",138,0)
 ;======================================================================
"RTN","PXRMPTDF",139,0)
SFDISP(FIND0,PIECE,FLDNUM,TITLE,RJC,PAD) ;Standard finding multiple
"RTN","PXRMPTDF",140,0)
 ;field display.
"RTN","PXRMPTDF",141,0)
 N FIELD,X
"RTN","PXRMPTDF",142,0)
 S FIELD=$P(FIND0,U,PIECE)
"RTN","PXRMPTDF",143,0)
 I $L(FIELD)>0 D
"RTN","PXRMPTDF",144,0)
 . S X=$$RJ^XLFSTR(TITLE,RJC,PAD)
"RTN","PXRMPTDF",145,0)
 . S X=X_" "_$$EXTERNAL^DILFD(811.902,FLDNUM,"",FIELD,"")
"RTN","PXRMPTDF",146,0)
 . D ^DIWP
"RTN","PXRMPTDF",147,0)
 Q
"RTN","PXRMPTDF",148,0)
 ;
"RTN","PXRMPTDF",149,0)
 ;======================================================================
"RTN","PXRMPTDF",150,0)
USAGE ;Format usage string
"RTN","PXRMPTDF",151,0)
 W ?30,$$XFORM($P($G(^PXD(811.9,D0,100)),U,4))
"RTN","PXRMPTDF",152,0)
 Q
"RTN","PXRMPTDF",153,0)
 ;
"RTN","PXRMPTDF",154,0)
 ;======================================================================
"RTN","PXRMPTDF",155,0)
WPFORMAT(FINDING,RJC,INDEX) ;Format found/not found word processing text.
"RTN","PXRMPTDF",156,0)
 I '$D(^PXD(811.9,D0,20,FINDING,INDEX,1,0)) Q
"RTN","PXRMPTDF",157,0)
 ;Save the title using the current format for DIWP.
"RTN","PXRMPTDF",158,0)
 N DIWF,DIWL,DIWR,IND,NLINES,SC,TEXT,X
"RTN","PXRMPTDF",159,0)
 K ^UTILITY($J,"W")
"RTN","PXRMPTDF",160,0)
 S DIWF="|",DIWL=RJC+2,DIWR=78
"RTN","PXRMPTDF",161,0)
 S IND=0
"RTN","PXRMPTDF",162,0)
 F  S IND=$O(^PXD(811.9,D0,20,FINDING,INDEX,IND)) Q:+IND=0  D
"RTN","PXRMPTDF",163,0)
 . S X=$G(^PXD(811.9,D0,20,FINDING,INDEX,IND,0))
"RTN","PXRMPTDF",164,0)
 . D ^DIWP
"RTN","PXRMPTDF",165,0)
 ;Find where this stuff went.
"RTN","PXRMPTDF",166,0)
 S SC=$O(^UTILITY($J,"W",""))
"RTN","PXRMPTDF",167,0)
 ;Save into ^TMP.
"RTN","PXRMPTDF",168,0)
 S NLINES=^UTILITY($J,"W",SC)
"RTN","PXRMPTDF",169,0)
 S ^TMP($J,"W",FINDING,INDEX)=NLINES
"RTN","PXRMPTDF",170,0)
 F IND=1:1:NLINES D
"RTN","PXRMPTDF",171,0)
 . S ^TMP($J,"W",FINDING,INDEX,IND)=^UTILITY($J,"W",SC,IND,0)
"RTN","PXRMPTDF",172,0)
 K ^UTILITY($J,"W")
"RTN","PXRMPTDF",173,0)
 Q
"RTN","PXRMPTDF",174,0)
 ;
"RTN","PXRMPTDF",175,0)
 ;======================================================================
"RTN","PXRMPTDF",176,0)
WPOUT(FINDING,TITLE,RJC,PAD,PADS,INDEX) ;Output found/not found word processing
"RTN","PXRMPTDF",177,0)
 ;text.
"RTN","PXRMPTDF",178,0)
 I $D(^TMP($J,"W",FINDING,INDEX)) D
"RTN","PXRMPTDF",179,0)
 . N IND,X
"RTN","PXRMPTDF",180,0)
 . S X=$$RJ^XLFSTR(TITLE,RJC,PAD)_" "_^TMP($J,"W",FINDING,INDEX,1)
"RTN","PXRMPTDF",181,0)
 . D ^DIWP
"RTN","PXRMPTDF",182,0)
 . F IND=2:1:^TMP($J,"W",FINDING,INDEX) D
"RTN","PXRMPTDF",183,0)
 .. S X=PADS_^TMP($J,"W",FINDING,INDEX,IND)
"RTN","PXRMPTDF",184,0)
 .. D ^DIWP
"RTN","PXRMPTDF",185,0)
 Q
"RTN","PXRMPTDF",186,0)
 ;
"RTN","PXRMPTDF",187,0)
 ;=======================================================================
"RTN","PXRMPTDF",188,0)
XFORM(Y) ;Print transform for field 103 in file #811.9
"RTN","PXRMPTDF",189,0)
 ;If ALL
"RTN","PXRMPTDF",190,0)
 I Y["*" Q "CPRS, DATA EXTRACT, REPORTS"
"RTN","PXRMPTDF",191,0)
 ;Otherwise
"RTN","PXRMPTDF",192,0)
 N ARRAY,IC,LIT,OUPUT,X
"RTN","PXRMPTDF",193,0)
 F IC=1:1:$L(Y) D
"RTN","PXRMPTDF",194,0)
 .S X=$E(Y,IC)
"RTN","PXRMPTDF",195,0)
 .S LIT=$S(X="C":"CPRS",X="X":"DATA EXTRACT",X="R":"REPORTS",1:"")
"RTN","PXRMPTDF",196,0)
 .I LIT'="" S ARRAY(LIT)=""
"RTN","PXRMPTDF",197,0)
 ;
"RTN","PXRMPTDF",198,0)
 S LIT="",OUTPUT=""
"RTN","PXRMPTDF",199,0)
 F  S LIT=$O(ARRAY(LIT)) Q:LIT=""  D
"RTN","PXRMPTDF",200,0)
 .S OUTPUT=OUTPUT_", "_LIT
"RTN","PXRMPTDF",201,0)
 ;
"RTN","PXRMPTDF",202,0)
 Q $E(OUTPUT,3,$L(OUTPUT))
"RTN","PXRMPTTR")
0^38^B10615637
"RTN","PXRMPTTR",1,0)
PXRMPTTR ;SLC/PKR - Routines for term print templates ;06/07/2001
"RTN","PXRMPTTR",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMPTTR",3,0)
 ;
"RTN","PXRMPTTR",4,0)
 ;======================================================================
"RTN","PXRMPTTR",5,0)
GENIEN(FINDING) ;Return internal entry number for findings.
"RTN","PXRMPTTR",6,0)
 N F0,IEN,PREFIX,ROOT,VPTR
"RTN","PXRMPTTR",7,0)
 S ROOT="^PXRMD(811.5,D0,20,FINDING,0)"
"RTN","PXRMPTTR",8,0)
 S F0=@ROOT
"RTN","PXRMPTTR",9,0)
 S VPTR=$P(F0,U,1)
"RTN","PXRMPTTR",10,0)
 S IEN=$P(VPTR,";",1)
"RTN","PXRMPTTR",11,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTTR",12,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMPTTR",13,0)
 S VPTR=PXRMFVPL(ROOT)
"RTN","PXRMPTTR",14,0)
 S PREFIX=$P(VPTR,U,4)
"RTN","PXRMPTTR",15,0)
 Q " (FI("_+FINDING_")="_PREFIX_"("_IEN_"))"
"RTN","PXRMPTTR",16,0)
 ;
"RTN","PXRMPTTR",17,0)
 ;======================================================================
"RTN","PXRMPTTR",18,0)
ENTRYNAM(VPTR) ;Given the variable pointer return the entry name. The
"RTN","PXRMPTTR",19,0)
 ;variable pointer list contains the information necessary to do the
"RTN","PXRMPTTR",20,0)
 ;look up.
"RTN","PXRMPTTR",21,0)
 N IEN,FILENUM,NAME,ROOT
"RTN","PXRMPTTR",22,0)
 S IEN=$P(VPTR,";",1)
"RTN","PXRMPTTR",23,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTTR",24,0)
 S FILENUM=$P(PXRMFVPL(ROOT),U,1)
"RTN","PXRMPTTR",25,0)
 S NAME=$$GET1^DIQ(FILENUM,IEN,.01,"","","")
"RTN","PXRMPTTR",26,0)
 Q NAME
"RTN","PXRMPTTR",27,0)
 ;
"RTN","PXRMPTTR",28,0)
 ;======================================================================
"RTN","PXRMPTTR",29,0)
PFIND ;Print the reminder term finding multiple.
"RTN","PXRMPTTR",30,0)
 N FIELD,FINDING,FIND0,PAD,PXRMFVPL,RJC,TEXT
"RTN","PXRMPTTR",31,0)
 ;If called by a FileMan print build the variable pointer list.
"RTN","PXRMPTTR",32,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMPTTR",33,0)
 S PAD=" ",RJC=31
"RTN","PXRMPTTR",34,0)
 S FINDING=0
"RTN","PXRMPTTR",35,0)
 F  S FINDING=$O(^PXRMD(811.5,D0,20,FINDING)) Q:+FINDING=0  D
"RTN","PXRMPTTR",36,0)
 . S FIND0=^PXRMD(811.5,D0,20,FINDING,0)
"RTN","PXRMPTTR",37,0)
 . S FIELD=$P(FIND0,U,1)
"RTN","PXRMPTTR",38,0)
 . S TEXT=$$RJ^XLFSTR("Finding Item:",RJC,PAD)
"RTN","PXRMPTTR",39,0)
 . S TEXT=TEXT_"  "_$$ENTRYNAM(FIELD)
"RTN","PXRMPTTR",40,0)
 . S TEXT=TEXT_" "_$$TRMIEN(FINDING)
"RTN","PXRMPTTR",41,0)
 . W !!,TEXT
"RTN","PXRMPTTR",42,0)
 .;
"RTN","PXRMPTTR",43,0)
 . S TEXT=$$RJ^XLFSTR("Finding Type:",RJC,PAD)
"RTN","PXRMPTTR",44,0)
 . S TEXT=TEXT_"  "_$$TFTYPE(FIELD)
"RTN","PXRMPTTR",45,0)
 . W !,TEXT
"RTN","PXRMPTTR",46,0)
 .;
"RTN","PXRMPTTR",47,0)
 . S FIELD=$P(FIND0,U,4)
"RTN","PXRMPTTR",48,0)
 . I $L(FIELD)>0 D
"RTN","PXRMPTTR",49,0)
 .. S TEXT=$$RJ^XLFSTR("Match Frequency/Age:",RJC,PAD)
"RTN","PXRMPTTR",50,0)
 .. S TEXT=TEXT_"  "_$$GENFREQ^PXRMPTDF(FIND0)
"RTN","PXRMPTTR",51,0)
 .. W !,TEXT
"RTN","PXRMPTTR",52,0)
 .;
"RTN","PXRMPTTR",53,0)
 . D SFDISP(FIND0,8,9,"Effective Period:",RJC,PAD)
"RTN","PXRMPTTR",54,0)
 . D SFDISP(FIND0,9,10,"Use Inactive Problems:",RJC,PAD)
"RTN","PXRMPTTR",55,0)
 . D SFDISP(FIND0,10,11,"Within Category Rank:",RJC,PAD)
"RTN","PXRMPTTR",56,0)
 . D SFDISP(FIND0,11,12,"Effective Date:",RJC,PAD)
"RTN","PXRMPTTR",57,0)
 . D SFDISP(FIND0,12,13,"MH Scale:",RJC,PAD)
"RTN","PXRMPTTR",58,0)
 . D SFDISP(FIND0,13,16,"Rx Type:",RJC,PAD)
"RTN","PXRMPTTR",59,0)
 .;
"RTN","PXRMPTTR",60,0)
 . S FIND0=$G(^PXRMD(811.5,D0,20,FINDING,3))
"RTN","PXRMPTTR",61,0)
 . D SFDISP(FIND0,1,14,"Condition:",RJC,PAD)
"RTN","PXRMPTTR",62,0)
 . D SFDISP(FIND0,2,15,"Condition Case Sensitive:",RJC,PAD)
"RTN","PXRMPTTR",63,0)
 Q
"RTN","PXRMPTTR",64,0)
 ;
"RTN","PXRMPTTR",65,0)
 ;======================================================================
"RTN","PXRMPTTR",66,0)
SFDISP(FIND0,PIECE,FLDNUM,TITLE,RJC,PAD) ;Standard finding multiple
"RTN","PXRMPTTR",67,0)
 ;field display.
"RTN","PXRMPTTR",68,0)
 N FIELD,TEXT
"RTN","PXRMPTTR",69,0)
 S FIELD=$P(FIND0,U,PIECE)
"RTN","PXRMPTTR",70,0)
 I $L(FIELD)>0 D
"RTN","PXRMPTTR",71,0)
 . S TEXT=$$RJ^XLFSTR(TITLE,RJC,PAD)
"RTN","PXRMPTTR",72,0)
 . S TEXT=TEXT_"  "_$$EXTERNAL^DILFD(811.52,FLDNUM,"",FIELD,"")
"RTN","PXRMPTTR",73,0)
 . W !,TEXT
"RTN","PXRMPTTR",74,0)
 Q
"RTN","PXRMPTTR",75,0)
 ;
"RTN","PXRMPTTR",76,0)
 ;====================================================================
"RTN","PXRMPTTR",77,0)
TFTYPE(VPTR) ;Return Term finding type
"RTN","PXRMPTTR",78,0)
 N ROOT,TFTYPE
"RTN","PXRMPTTR",79,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTTR",80,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMPTTR",81,0)
 S TFTYPE=$P(PXRMFVPL(ROOT),U,2)
"RTN","PXRMPTTR",82,0)
 Q TFTYPE
"RTN","PXRMPTTR",83,0)
 ;
"RTN","PXRMPTTR",84,0)
 ;======================================================================
"RTN","PXRMPTTR",85,0)
TRMIEN(FINDING) ;Return internal entry number for TERM findings.
"RTN","PXRMPTTR",86,0)
 N F0,IEN,PREFIX,ROOT,VPTR
"RTN","PXRMPTTR",87,0)
 S ROOT="^PXRMD(811.5,D0,20,FINDING,0)"
"RTN","PXRMPTTR",88,0)
 S F0=@ROOT
"RTN","PXRMPTTR",89,0)
 S VPTR=$P(F0,U,1)
"RTN","PXRMPTTR",90,0)
 S IEN=$P(VPTR,";",1)
"RTN","PXRMPTTR",91,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTTR",92,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMPTTR",93,0)
 S VPTR=PXRMFVPL(ROOT)
"RTN","PXRMPTTR",94,0)
 S PREFIX=$P(VPTR,U,4)
"RTN","PXRMPTTR",95,0)
 Q " (FI("_+FINDING_")="_PREFIX_"("_IEN_"))"
"RTN","PXRMPTTR",96,0)
 ;
"RTN","PXRMREDF")
0^62^B9086331
"RTN","PXRMREDF",1,0)
PXRMREDF ; SLC/PJH - Edit PXRM reminder findings. ;06/07/2001
"RTN","PXRMREDF",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMREDF",3,0)
 ;
"RTN","PXRMREDF",4,0)
 ; Called by PXRMREDT
"RTN","PXRMREDF",5,0)
 ;
"RTN","PXRMREDF",6,0)
SET S:'$D(^PXD(811.9,DA,20,0)) ^PXD(811.9,DA,20,0)="^811.902V" Q
"RTN","PXRMREDF",7,0)
 ;
"RTN","PXRMREDF",8,0)
 ;Edit Findings (excludes Terms)
"RTN","PXRMREDF",9,0)
 ;------------------------------
"RTN","PXRMREDF",10,0)
FIND D SET ; Check if node defined
"RTN","PXRMREDF",11,0)
 F  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDF",12,0)
 .;Display list of existing findings
"RTN","PXRMREDF",13,0)
 .W !!,"Findings"
"RTN","PXRMREDF",14,0)
 .D DSPALL
"RTN","PXRMREDF",15,0)
 .;Edit findings
"RTN","PXRMREDF",16,0)
 .D FEDIT(DA) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDF",17,0)
 .;Update list with term modifications
"RTN","PXRMREDF",18,0)
 .D LIST^PXRMREDT(.LIST)
"RTN","PXRMREDF",19,0)
 K DUOUT,DTOUT
"RTN","PXRMREDF",20,0)
 Q
"RTN","PXRMREDF",21,0)
 ;
"RTN","PXRMREDF",22,0)
 ;Display ALL findings
"RTN","PXRMREDF",23,0)
 ;--------------------
"RTN","PXRMREDF",24,0)
DSPALL N SUB,FIRST S FIRST=1,SUB="",SUB1=""
"RTN","PXRMREDF",25,0)
 F  S SUB=$O(LIST(SUB)) Q:SUB=""  D
"RTN","PXRMREDF",26,0)
 .S SUB1=0
"RTN","PXRMREDF",27,0)
 .F  S SUB1=$O(LIST(SUB,SUB1)) Q:SUB1=""  D
"RTN","PXRMREDF",28,0)
 ..I FIRST S FIRST=0 W !!,"Choose from:",!
"RTN","PXRMREDF",29,0)
 ..W SUB
"RTN","PXRMREDF",30,0)
 ..W ?8,SUB1,!
"RTN","PXRMREDF",31,0)
 I FIRST W !!,"Reminder has no findings",!
"RTN","PXRMREDF",32,0)
 ;Update list
"RTN","PXRMREDF",33,0)
 D LIST^PXRMREDT(.LIST)
"RTN","PXRMREDF",34,0)
 Q
"RTN","PXRMREDF",35,0)
 ;
"RTN","PXRMREDF",36,0)
 ;Display findings for file type selected
"RTN","PXRMREDF",37,0)
 ;---------------------------------------
"RTN","PXRMREDF",38,0)
DSP(TYPE) ;
"RTN","PXRMREDF",39,0)
 N SUB,FIRST S FIRST=1,SUB=""
"RTN","PXRMREDF",40,0)
 F  S SUB=$O(LIST(TYPE,SUB)) Q:SUB=""  D
"RTN","PXRMREDF",41,0)
 .I FIRST S FIRST=0 W !!,"Choose from:",!
"RTN","PXRMREDF",42,0)
 .W SUB
"RTN","PXRMREDF",43,0)
 .W !
"RTN","PXRMREDF",44,0)
 I FIRST W !!,"Reminder has no "_$G(DEF2(TYPE))_" findings",!
"RTN","PXRMREDF",45,0)
 Q
"RTN","PXRMREDF",46,0)
 ;
"RTN","PXRMREDF",47,0)
 ;Edit individual FINDING entry
"RTN","PXRMREDF",48,0)
 ;-----------------------------
"RTN","PXRMREDF",49,0)
FEDIT(IEN) ;
"RTN","PXRMREDF",50,0)
 N DA,DIC,DIE,DUOUT,DR,GLOB,Y
"RTN","PXRMREDF",51,0)
 S DA(1)=IEN
"RTN","PXRMREDF",52,0)
 S DIC="^PXD(811.9,"_IEN_",20,"
"RTN","PXRMREDF",53,0)
 S DIC(0)="QEAL"
"RTN","PXRMREDF",54,0)
 S DIC("A")="Select FINDING: "
"RTN","PXRMREDF",55,0)
 S DIC("P")="811.902V"
"RTN","PXRMREDF",56,0)
 D ^DIC I Y=-1 S DTOUT=1 Q
"RTN","PXRMREDF",57,0)
 S DIE=DIC K DIC
"RTN","PXRMREDF",58,0)
 S DA=+Y,GLOB=$P($P(Y,U,2),";",2) Q:GLOB=""
"RTN","PXRMREDF",59,0)
 S TYPE=$G(DEF1(GLOB))
"RTN","PXRMREDF",60,0)
 ;Finding record fields
"RTN","PXRMREDF",61,0)
 S DR=".01;1;2;3;6;7;8;9;12"
"RTN","PXRMREDF",62,0)
 ;Taxonomy - use inactive problems
"RTN","PXRMREDF",63,0)
 I TYPE="TX" S DR=DR_";10"
"RTN","PXRMREDF",64,0)
 ;Health Factor - within category rank
"RTN","PXRMREDF",65,0)
 I TYPE="HF" S DR=DR_";11"
"RTN","PXRMREDF",66,0)
 ;Mental Health - scale
"RTN","PXRMREDF",67,0)
 I TYPE="MH" S DR=DR_";13"
"RTN","PXRMREDF",68,0)
 ;Rx Type
"RTN","PXRMREDF",69,0)
 I (TYPE="DC")!(TYPE="DG")!(TYPE="DR") S DR=DR_";16"
"RTN","PXRMREDF",70,0)
 ;Condition
"RTN","PXRMREDF",71,0)
 S DR=DR_";14;15"
"RTN","PXRMREDF",72,0)
 ;Found/not found text
"RTN","PXRMREDF",73,0)
 S DR=DR_";4;5"
"RTN","PXRMREDF",74,0)
 ;
"RTN","PXRMREDF",75,0)
 ;Edit finding record
"RTN","PXRMREDF",76,0)
 D ^DIE
"RTN","PXRMREDF",77,0)
 Q
"RTN","PXRMREDF",78,0)
 ;
"RTN","PXRMREDF",79,0)
 ;General help text routine
"RTN","PXRMREDF",80,0)
 ;-------------------------
"RTN","PXRMREDF",81,0)
HELP(CALL) ;
"RTN","PXRMREDF",82,0)
 N HTEXT
"RTN","PXRMREDF",83,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMREDF",84,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMREDF",85,0)
 ;
"RTN","PXRMREDF",86,0)
 I CALL=1 D
"RTN","PXRMREDF",87,0)
 .S HTEXT(1)="Select the type of finding you wish to change or add."
"RTN","PXRMREDF",88,0)
 .S HTEXT(2)="Type '?' for a list of the available finding types."
"RTN","PXRMREDF",89,0)
 I CALL=2 D
"RTN","PXRMREDF",90,0)
 .S HTEXT(1)="Select section of the reminder you wish to edit or 'All'"
"RTN","PXRMREDF",91,0)
 .S HTEXT(2)="to step through all sections of the reminder definition."
"RTN","PXRMREDF",92,0)
 ;
"RTN","PXRMREDF",93,0)
 K ^UTILITY($J,"W")
"RTN","PXRMREDF",94,0)
 S IC=""
"RTN","PXRMREDF",95,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMREDF",96,0)
 . S X=HTEXT(IC)
"RTN","PXRMREDF",97,0)
 . D ^DIWP
"RTN","PXRMREDF",98,0)
 W !
"RTN","PXRMREDF",99,0)
 S IC=0
"RTN","PXRMREDF",100,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMREDF",101,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMREDF",102,0)
 K ^UTILITY($J,"W")
"RTN","PXRMREDF",103,0)
 W !
"RTN","PXRMREDF",104,0)
 Q
"RTN","PXRMREDT")
0^35^B27940182
"RTN","PXRMREDT",1,0)
PXRMREDT ; SLC/PKR,PJH - Edit PXRM reminder definition. ;06/06/2001
"RTN","PXRMREDT",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMREDT",3,0)
 ;
"RTN","PXRMREDT",4,0)
 ;=======================================================================
"RTN","PXRMREDT",5,0)
 ;Build list of finding file definitions.
"RTN","PXRMREDT",6,0)
 N DEF,DEF1,DEF2
"RTN","PXRMREDT",7,0)
 D DEF^PXRMRUTL(.DEF,.DEF1,.DEF2)
"RTN","PXRMREDT",8,0)
 ;
"RTN","PXRMREDT",9,0)
 N DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMREDT",10,0)
 S DIC="^PXD(811.9,"
"RTN","PXRMREDT",11,0)
 S DIC(0)="AEMQL"
"RTN","PXRMREDT",12,0)
 S DIC("A")="Select Reminder Definition: "
"RTN","PXRMREDT",13,0)
 S DIC("S")="I $$VEDIT^PXRMUTIL(DIC,Y)"
"RTN","PXRMREDT",14,0)
 S DLAYGO=811.9
"RTN","PXRMREDT",15,0)
GETNAME ;Get the name of the reminder definition to edit.
"RTN","PXRMREDT",16,0)
 ;Set the starting place for additions.
"RTN","PXRMREDT",17,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMREDT",18,0)
 W !
"RTN","PXRMREDT",19,0)
 D ^DIC
"RTN","PXRMREDT",20,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMREDT",21,0)
 I Y=-1 G END
"RTN","PXRMREDT",22,0)
 S DA=$P(Y,U,1)
"RTN","PXRMREDT",23,0)
 D ALL(DIC,DA)
"RTN","PXRMREDT",24,0)
 G GETNAME
"RTN","PXRMREDT",25,0)
END ;
"RTN","PXRMREDT",26,0)
 Q
"RTN","PXRMREDT",27,0)
 ;
"RTN","PXRMREDT",28,0)
 ;=======================================================================
"RTN","PXRMREDT",29,0)
 ;Select section of reminder to edit, also called at ALL by PXRMEDIT.
"RTN","PXRMREDT",30,0)
 ;----------------------------------
"RTN","PXRMREDT",31,0)
ALL(DIC,DA) ;
"RTN","PXRMREDT",32,0)
 ;Get list of findings/terms for reminder
"RTN","PXRMREDT",33,0)
 N CS1,CS2,BLDLOGIC,LIST,TYPE,FILE,LIST,OPTION
"RTN","PXRMREDT",34,0)
 S BLDLOGIC=0
"RTN","PXRMREDT",35,0)
 ;Save the original checksum.
"RTN","PXRMREDT",36,0)
 S CS1=$$FILE^PXRMEXCS(811.9,DA)
"RTN","PXRMREDT",37,0)
 D LIST(.LIST)
"RTN","PXRMREDT",38,0)
 ;If this is a new reminder enter all fields
"RTN","PXRMREDT",39,0)
 I $P(Y,U,3)=1 D EDIT(DIC,DA) Q 
"RTN","PXRMREDT",40,0)
 ;Otherwise choose fields to edit
"RTN","PXRMREDT",41,0)
 F  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDT",42,0)
 .D OPTION Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDT",43,0)
 .;All details
"RTN","PXRMREDT",44,0)
 .I OPTION="A" D
"RTN","PXRMREDT",45,0)
 .. S BLDLOGIC=1
"RTN","PXRMREDT",46,0)
 .. D EDIT(DIC,DA)
"RTN","PXRMREDT",47,0)
 .;Set up local variables
"RTN","PXRMREDT",48,0)
 .N DIE,DR S DIE=DIC N DIC
"RTN","PXRMREDT",49,0)
 .;Descriptions
"RTN","PXRMREDT",50,0)
 .I OPTION="G" D
"RTN","PXRMREDT",51,0)
 ..D GEN
"RTN","PXRMREDT",52,0)
 .;Baseline Frequency
"RTN","PXRMREDT",53,0)
 .I OPTION="B" D
"RTN","PXRMREDT",54,0)
 ..S BLDLOGIC=1
"RTN","PXRMREDT",55,0)
 ..D BASE
"RTN","PXRMREDT",56,0)
 .;Findings
"RTN","PXRMREDT",57,0)
 .I OPTION="F"  D
"RTN","PXRMREDT",58,0)
 ..S BLDLOGIC=1
"RTN","PXRMREDT",59,0)
 ..D FIND
"RTN","PXRMREDT",60,0)
 .;Logic
"RTN","PXRMREDT",61,0)
 .I OPTION="L" D
"RTN","PXRMREDT",62,0)
 ..S BLDLOGIC=1
"RTN","PXRMREDT",63,0)
 ..D LOGIC
"RTN","PXRMREDT",64,0)
 .;Dialog
"RTN","PXRMREDT",65,0)
 .I OPTION="D" D
"RTN","PXRMREDT",66,0)
 ..D DIALOG
"RTN","PXRMREDT",67,0)
 .;Web addresses
"RTN","PXRMREDT",68,0)
 .I OPTION="W" D
"RTN","PXRMREDT",69,0)
 ..D WEB
"RTN","PXRMREDT",70,0)
 .;If necessary build the internal logic strings.
"RTN","PXRMREDT",71,0)
 .I BLDLOGIC D
"RTN","PXRMREDT",72,0)
 ..D BLDALL^PXRMLOGX(DA,"")
"RTN","PXRMREDT",73,0)
 ;See if any changes have been made.
"RTN","PXRMREDT",74,0)
 S CS2=$$FILE^PXRMEXCS(811.9,DA)
"RTN","PXRMREDT",75,0)
 I CS2=0 Q
"RTN","PXRMREDT",76,0)
 ;If the file has been edited, do the edit history.
"RTN","PXRMREDT",77,0)
 I CS2'=CS1 D SEHIST^PXRMUTIL(811.9,DIC,DA)
"RTN","PXRMREDT",78,0)
 Q
"RTN","PXRMREDT",79,0)
 ;
"RTN","PXRMREDT",80,0)
 ;Reminder Edit
"RTN","PXRMREDT",81,0)
 ;-------------
"RTN","PXRMREDT",82,0)
EDIT(ROOT,DA) ;
"RTN","PXRMREDT",83,0)
 N DIC,DIDEL,DIE,DR,TAX
"RTN","PXRMREDT",84,0)
 S DIE=ROOT,DIDEL=811.9
"RTN","PXRMREDT",85,0)
 ;
"RTN","PXRMREDT",86,0)
 ;Edit the fields in the same order they are printed by a reminder
"RTN","PXRMREDT",87,0)
 ;inquiry.
"RTN","PXRMREDT",88,0)
 ;Reminder name
"RTN","PXRMREDT",89,0)
 W !!
"RTN","PXRMREDT",90,0)
 S DR=".01"
"RTN","PXRMREDT",91,0)
 D ^DIE
"RTN","PXRMREDT",92,0)
 ;If DA is undefined then the entry was deleted and we are done.
"RTN","PXRMREDT",93,0)
 I '$D(DA) S DTOUT=1 Q
"RTN","PXRMREDT",94,0)
 I $D(Y) S DTOUT=1 Q
"RTN","PXRMREDT",95,0)
 ;
"RTN","PXRMREDT",96,0)
 ;Other fields
"RTN","PXRMREDT",97,0)
 D GEN Q:$D(Y)
"RTN","PXRMREDT",98,0)
 D BASE Q:$D(Y)
"RTN","PXRMREDT",99,0)
 D FIND Q:$D(Y)
"RTN","PXRMREDT",100,0)
 D LOGIC Q:$D(Y)
"RTN","PXRMREDT",101,0)
 D DIALOG Q:$D(Y)
"RTN","PXRMREDT",102,0)
 D WEB Q:$D(Y)
"RTN","PXRMREDT",103,0)
 Q
"RTN","PXRMREDT",104,0)
 ;
"RTN","PXRMREDT",105,0)
GEN ;Print name
"RTN","PXRMREDT",106,0)
 W !!
"RTN","PXRMREDT",107,0)
 S DR="1.2"
"RTN","PXRMREDT",108,0)
 D ^DIE
"RTN","PXRMREDT",109,0)
 I $D(Y) Q
"RTN","PXRMREDT",110,0)
 ;
"RTN","PXRMREDT",111,0)
 ;Class, sponsor, review date, usage
"RTN","PXRMREDT",112,0)
 W !!
"RTN","PXRMREDT",113,0)
 S DR="100;101;102;103"
"RTN","PXRMREDT",114,0)
 D ^DIE
"RTN","PXRMREDT",115,0)
 I $D(Y) Q
"RTN","PXRMREDT",116,0)
 ;
"RTN","PXRMREDT",117,0)
 ;Related VA-* reminder
"RTN","PXRMREDT",118,0)
 W !!
"RTN","PXRMREDT",119,0)
 S DR="1.4"
"RTN","PXRMREDT",120,0)
 D ^DIE
"RTN","PXRMREDT",121,0)
 I $D(Y) Q
"RTN","PXRMREDT",122,0)
 ;
"RTN","PXRMREDT",123,0)
 ;Inactive flag
"RTN","PXRMREDT",124,0)
 W !!
"RTN","PXRMREDT",125,0)
 S DR="1.6"
"RTN","PXRMREDT",126,0)
 D ^DIE
"RTN","PXRMREDT",127,0)
 I $D(Y) Q
"RTN","PXRMREDT",128,0)
 ;
"RTN","PXRMREDT",129,0)
 ;Reminder description
"RTN","PXRMREDT",130,0)
 W !!
"RTN","PXRMREDT",131,0)
 S DR="2"
"RTN","PXRMREDT",132,0)
 D ^DIE
"RTN","PXRMREDT",133,0)
 I $D(Y) Q
"RTN","PXRMREDT",134,0)
 ;
"RTN","PXRMREDT",135,0)
 ;Technical description
"RTN","PXRMREDT",136,0)
 W !!
"RTN","PXRMREDT",137,0)
 S DR="3"
"RTN","PXRMREDT",138,0)
 D ^DIE
"RTN","PXRMREDT",139,0)
 ;
"RTN","PXRMREDT",140,0)
 ;Priority
"RTN","PXRMREDT",141,0)
 W !!
"RTN","PXRMREDT",142,0)
 S DR="1.91"
"RTN","PXRMREDT",143,0)
 D ^DIE
"RTN","PXRMREDT",144,0)
 Q
"RTN","PXRMREDT",145,0)
 ;
"RTN","PXRMREDT",146,0)
BASE W !!,"Baseline Frequency"
"RTN","PXRMREDT",147,0)
 ;Do in advance time frame
"RTN","PXRMREDT",148,0)
 S DR=1.3
"RTN","PXRMREDT",149,0)
 D ^DIE
"RTN","PXRMREDT",150,0)
 I $D(Y) Q
"RTN","PXRMREDT",151,0)
 ;
"RTN","PXRMREDT",152,0)
 ;Sex specific
"RTN","PXRMREDT",153,0)
 S DR=1.9
"RTN","PXRMREDT",154,0)
 D ^DIE
"RTN","PXRMREDT",155,0)
 I $D(Y) Q
"RTN","PXRMREDT",156,0)
 ;
"RTN","PXRMREDT",157,0)
 ;Ignore on N/A
"RTN","PXRMREDT",158,0)
 S DR=1.8
"RTN","PXRMREDT",159,0)
 D ^DIE
"RTN","PXRMREDT",160,0)
 I $D(Y) Q
"RTN","PXRMREDT",161,0)
 ;
"RTN","PXRMREDT",162,0)
 W !!,"Baseline frequency age range set"
"RTN","PXRMREDT",163,0)
 S DR="7"
"RTN","PXRMREDT",164,0)
 D ^DIE
"RTN","PXRMREDT",165,0)
 Q
"RTN","PXRMREDT",166,0)
 ;
"RTN","PXRMREDT",167,0)
FIND ;Edit findings (multiple)
"RTN","PXRMREDT",168,0)
 D FIND^PXRMREDF
"RTN","PXRMREDT",169,0)
 Q
"RTN","PXRMREDT",170,0)
 ;
"RTN","PXRMREDT",171,0)
LOGIC W !!,"Patient Cohort and Resolution Logic"
"RTN","PXRMREDT",172,0)
 S DR="30T;60T;61T;34T;65T;66T"
"RTN","PXRMREDT",173,0)
 D ^DIE
"RTN","PXRMREDT",174,0)
 ;Make sure the Patient Cohort Logic at least contains the default.
"RTN","PXRMREDT",175,0)
 I $G(^PXD(811.9,DA,31))="" S ^PXD(811.9,DA,31)="(SEX)&(AGE)"
"RTN","PXRMREDT",176,0)
 Q
"RTN","PXRMREDT",177,0)
 ;
"RTN","PXRMREDT",178,0)
DIALOG W !!,"Reminder Dialog"
"RTN","PXRMREDT",179,0)
 S DR="51"
"RTN","PXRMREDT",180,0)
 D ^DIE
"RTN","PXRMREDT",181,0)
 Q
"RTN","PXRMREDT",182,0)
 ;
"RTN","PXRMREDT",183,0)
WEB W !!,"Web Addresses for Reminder Information"
"RTN","PXRMREDT",184,0)
 S DR="50"
"RTN","PXRMREDT",185,0)
 D ^DIE
"RTN","PXRMREDT",186,0)
 Q
"RTN","PXRMREDT",187,0)
 ;
"RTN","PXRMREDT",188,0)
 ;
"RTN","PXRMREDT",189,0)
 ;Get full list of findings
"RTN","PXRMREDT",190,0)
 ;-------------------------
"RTN","PXRMREDT",191,0)
LIST(ARRAY) ;
"RTN","PXRMREDT",192,0)
 N TYPE,DATA,GLOB,IEN,NAME,NODE,SUB
"RTN","PXRMREDT",193,0)
 ;Clear passed arrays
"RTN","PXRMREDT",194,0)
 K ARRAY
"RTN","PXRMREDT",195,0)
 ;Build cross reference global to file number
"RTN","PXRMREDT",196,0)
 ;Get each finding
"RTN","PXRMREDT",197,0)
 S SUB=0 F  S SUB=$O(^PXD(811.9,DA,20,SUB)) Q:'SUB  D
"RTN","PXRMREDT",198,0)
 .S DATA=$G(^PXD(811.9,DA,20,SUB,0)) I DATA="" Q
"RTN","PXRMREDT",199,0)
 .;Determine global and global ien
"RTN","PXRMREDT",200,0)
 .S NODE=$P(DATA,U),GLOB=$P(NODE,";",2),IEN=$P(NODE,";")
"RTN","PXRMREDT",201,0)
 .;Ignore null entries
"RTN","PXRMREDT",202,0)
 .I (GLOB="")!(IEN="") Q
"RTN","PXRMREDT",203,0)
 .;Work out the file type
"RTN","PXRMREDT",204,0)
 .S TYPE=$G(DEF1(GLOB)) Q:TYPE=""
"RTN","PXRMREDT",205,0)
 .S NAME=$P($G(@(U_GLOB_IEN_",0)")),U)
"RTN","PXRMREDT",206,0)
 .S ARRAY(TYPE,NAME)=""
"RTN","PXRMREDT",207,0)
 Q
"RTN","PXRMREDT",208,0)
 ;
"RTN","PXRMREDT",209,0)
 ;Choose which part of Reminder to edit
"RTN","PXRMREDT",210,0)
 ;-------------------------------------
"RTN","PXRMREDT",211,0)
OPTION N X,Y,DIR,IC,IND
"RTN","PXRMREDT",212,0)
 ;Display warning message if un-mapped terms exist
"RTN","PXRMREDT",213,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMREDT",214,0)
 S DIR(0)="SO"_U
"RTN","PXRMREDT",215,0)
 S DIR(0)=DIR(0)_"A:All reminder details;"
"RTN","PXRMREDT",216,0)
 S DIR(0)=DIR(0)_"G:General;"
"RTN","PXRMREDT",217,0)
 S DIR(0)=DIR(0)_"B:Baseline Frequency;"
"RTN","PXRMREDT",218,0)
 S DIR(0)=DIR(0)_"F:Findings;"
"RTN","PXRMREDT",219,0)
 S DIR(0)=DIR(0)_"L:Logic;"
"RTN","PXRMREDT",220,0)
 S DIR(0)=DIR(0)_"D:Reminder Dialog;"
"RTN","PXRMREDT",221,0)
 S DIR(0)=DIR(0)_"W:Web Addresses;"
"RTN","PXRMREDT",222,0)
 S DIR("A")="Select section to edit"
"RTN","PXRMREDT",223,0)
 S DIR("?")="Select which section of the reminder you wish to edit."
"RTN","PXRMREDT",224,0)
 S DIR("??")="^D HELP^PXRMREDF(2)"
"RTN","PXRMREDT",225,0)
 D ^DIR K DIR
"RTN","PXRMREDT",226,0)
 I Y="" S DUOUT=1 Q
"RTN","PXRMREDT",227,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMREDT",228,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMREDT",229,0)
 S OPTION=Y
"RTN","PXRMREDT",230,0)
 Q
"RTN","PXRMREDT",231,0)
 ;
"RTN","PXRMRPCA")
0^56^B60476937
"RTN","PXRMRPCA",1,0)
PXRMRPCA ; SLC/PJH - Functions returning REMINDER data ;06/06/2001
"RTN","PXRMRPCA",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMRPCA",3,0)
 Q
"RTN","PXRMRPCA",4,0)
 ;
"RTN","PXRMRPCA",5,0)
ALL(ORY) ;All active reminders
"RTN","PXRMRPCA",6,0)
 ;print name^ien
"RTN","PXRMRPCA",7,0)
 N ARR,DATA,NAME,ORREM,OCNT,SUB,USAGE
"RTN","PXRMRPCA",8,0)
 S ORREM=0
"RTN","PXRMRPCA",9,0)
 F  S ORREM=$O(^PXD(811.9,ORREM)) Q:'ORREM  D
"RTN","PXRMRPCA",10,0)
 .;Include only CPRS reminders
"RTN","PXRMRPCA",11,0)
 .S USAGE=$P($G(^PXD(811.9,ORREM,100)),U,4) I USAGE'["C",USAGE'["*" Q
"RTN","PXRMRPCA",12,0)
 .S DATA=$G(^PXD(811.9,ORREM,0)) Q:DATA=""
"RTN","PXRMRPCA",13,0)
 .;Skip inactive reminders
"RTN","PXRMRPCA",14,0)
 .I $P(DATA,U,6) Q
"RTN","PXRMRPCA",15,0)
 .;Skip reminders with no name
"RTN","PXRMRPCA",16,0)
 .S NAME=$P(DATA,U,3) I NAME="" Q
"RTN","PXRMRPCA",17,0)
 .;Sort by name
"RTN","PXRMRPCA",18,0)
 .S ARR(NAME_U_ORREM)=""
"RTN","PXRMRPCA",19,0)
 ; Build output arrray
"RTN","PXRMRPCA",20,0)
 S SUB="",OCNT=0
"RTN","PXRMRPCA",21,0)
 F  S SUB=$O(ARR(SUB)) Q:SUB=""  D
"RTN","PXRMRPCA",22,0)
 .S OCNT=OCNT+1
"RTN","PXRMRPCA",23,0)
 .S ORY(OCNT)=SUB
"RTN","PXRMRPCA",24,0)
 Q
"RTN","PXRMRPCA",25,0)
 ;
"RTN","PXRMRPCA",26,0)
APPL(ORY,ORPT,ORLOC) ;Applicable reminders for cover sheet
"RTN","PXRMRPCA",27,0)
 ;format file 811.9 ien^reminder print name^date due^last occur^prty^due.
"RTN","PXRMRPCA",28,0)
 N ORSRV,TMPLST,ERR,ORI,ORJ,ORIEN,ORTXT,ORX,ORLASTDT,ORDUEDT
"RTN","PXRMRPCA",29,0)
 N ORDUE,ORPRI,ORSTA,PASS
"RTN","PXRMRPCA",30,0)
 S ORJ=0
"RTN","PXRMRPCA",31,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","PXRMRPCA",32,0)
 I ORLOC S PASS="USR^LOC.`"_$G(ORLOC)_"^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",33,0)
 I 'ORLOC S PASS="USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",34,0)
 D GETLST^XPAR(.TMPLST,PASS,"ORQQPX SEARCH ITEMS","Q",.ERR) ; DBIA 3076
"RTN","PXRMRPCA",35,0)
 I ERR>0 S ORY(1)=U_"Error: "_$P(ERR,U,2) Q
"RTN","PXRMRPCA",36,0)
 D AVAL(.TMPLST,2) ;Evaluate reminders
"RTN","PXRMRPCA",37,0)
 Q
"RTN","PXRMRPCA",38,0)
 ;
"RTN","PXRMRPCA",39,0)
ALIST(ORY,ORPT,LIST) ;Evaluate specific reminders
"RTN","PXRMRPCA",40,0)
 N ORSRV,ORI,ORJ,ORIEN,ORTXT,ORX,ORLASTDT,ORDUEDT,ORLOC
"RTN","PXRMRPCA",41,0)
 N ORDUE,ORPRI,ORSTA
"RTN","PXRMRPCA",42,0)
 S ORJ=0
"RTN","PXRMRPCA",43,0)
 D AVAL(.LIST,1)
"RTN","PXRMRPCA",44,0)
 Q
"RTN","PXRMRPCA",45,0)
 ;
"RTN","PXRMRPCA",46,0)
AVAL(ARRAY,POS) ;Evaluate array of reminders
"RTN","PXRMRPCA",47,0)
 S ORI=0 F  S ORI=$O(ARRAY(ORI)) Q:'ORI  D
"RTN","PXRMRPCA",48,0)
 .S ORIEN=$P(ARRAY(ORI),U,POS)
"RTN","PXRMRPCA",49,0)
 .K ^TMP("PXRHM",$J)
"RTN","PXRMRPCA",50,0)
 .;Evaluate reminder
"RTN","PXRMRPCA",51,0)
 .D MAIN^PXRM(ORPT,ORIEN,1,1)
"RTN","PXRMRPCA",52,0)
 .;Not applicable is default
"RTN","PXRMRPCA",53,0)
 .S ORDUE=2 D  Q:ORTXT=""
"RTN","PXRMRPCA",54,0)
 ..S ORTXT="",ORTXT=$O(^TMP("PXRHM",$J,ORIEN,ORTXT)) Q:ORTXT=""
"RTN","PXRMRPCA",55,0)
 ..;Exclude dead patients from applicable
"RTN","PXRMRPCA",56,0)
 ..I $G(^XTMP("PXRMDFN"_ORPT,"DOD"))'="" Q
"RTN","PXRMRPCA",57,0)
 ..;Determine status
"RTN","PXRMRPCA",58,0)
 ..S ORX=^TMP("PXRHM",$J,ORIEN,ORTXT) Q:ORX=""
"RTN","PXRMRPCA",59,0)
 ..S ORSTA=$P(ORX,U)
"RTN","PXRMRPCA",60,0)
 ..;Ignore reminders that are not applicable
"RTN","PXRMRPCA",61,0)
 ..I (ORSTA=" ")!(ORSTA["NEVER")!(ORSTA="N/A")!(ORSTA="ERROR") Q
"RTN","PXRMRPCA",62,0)
 ..;Differentiate due and applicable
"RTN","PXRMRPCA",63,0)
 ..S ORDUE=0 I ORSTA["DUE" S ORDUE=1
"RTN","PXRMRPCA",64,0)
 ..;Get next due and last done dates 
"RTN","PXRMRPCA",65,0)
 ..S ORDUEDT=$P(ORX,U,2),ORLASTDT=$P(ORX,U,3)
"RTN","PXRMRPCA",66,0)
 ..S ORLASTDT=$S(+$G(ORLASTDT)>0:ORLASTDT,1:"")  ;null if not a date
"RTN","PXRMRPCA",67,0)
 ..;Reminder priority
"RTN","PXRMRPCA",68,0)
 ..S ORPRI=$P($G(^PXD(811.9,ORIEN,0)),U,10)
"RTN","PXRMRPCA",69,0)
 ..;Default is 2 for medium
"RTN","PXRMRPCA",70,0)
 ..I ORPRI="" S ORPRI=2
"RTN","PXRMRPCA",71,0)
 ..S ORJ=ORJ+1
"RTN","PXRMRPCA",72,0)
 ..S ORY(ORJ)=ORIEN_U_ORTXT_U_ORDUEDT_U_ORLASTDT_U_ORPRI_U_ORDUE_U_$$DLG(ORIEN)
"RTN","PXRMRPCA",73,0)
 .;Save not applicables also (IF a valid reminder)
"RTN","PXRMRPCA",74,0)
 .I ORDUE=2 D
"RTN","PXRMRPCA",75,0)
 ..S ORJ=ORJ+1
"RTN","PXRMRPCA",76,0)
 ..S ORY(ORJ)=ORIEN_U_ORTXT_U_U_U_U_ORDUE_U_$$DLG(ORIEN)
"RTN","PXRMRPCA",77,0)
 K ^TMP("PXRHM",$J)
"RTN","PXRMRPCA",78,0)
 Q
"RTN","PXRMRPCA",79,0)
 ;
"RTN","PXRMRPCA",80,0)
CATEGORY(ORY,ORPT,ORLOC) ;Reminder Categories
"RTN","PXRMRPCA",81,0)
 ;type^name^ien^parent^child^etc
"RTN","PXRMRPCA",82,0)
 N ERR,IC,ORSRV,PASS,TEMPLST
"RTN","PXRMRPCA",83,0)
 ;Get user's service 
"RTN","PXRMRPCA",84,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","PXRMRPCA",85,0)
 ;Build list of locations and services required
"RTN","PXRMRPCA",86,0)
 I ORLOC S PASS="USR^LOC.`"_$G(ORLOC)_"^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",87,0)
 I 'ORLOC S PASS="USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",88,0)
 ;
"RTN","PXRMRPCA",89,0)
 ;Get list of categories from GUI parameters file
"RTN","PXRMRPCA",90,0)
 D GETLST^XPAR(.TMPLST,PASS,"PXRM CPRS LOOKUP CATEGORIES","Q",.ERR)
"RTN","PXRMRPCA",91,0)
 ;If error return error type
"RTN","PXRMRPCA",92,0)
 I ERR>0 S ORY(1)=U_"Error: "_$P(ERR,U,2) Q
"RTN","PXRMRPCA",93,0)
 ;
"RTN","PXRMRPCA",94,0)
 ;For each category build tree of reminders/subcategories
"RTN","PXRMRPCA",95,0)
 N CNT,LEVEL,ORCAT,UNIQ
"RTN","PXRMRPCA",96,0)
 S CNT="",IC=0,LEVEL=0,UNIQ=0
"RTN","PXRMRPCA",97,0)
 ;For each category in 'PXRM CPRS LOOKUP CATEGORIES'
"RTN","PXRMRPCA",98,0)
 F  S CNT=$O(TMPLST(CNT)) Q:'CNT  D
"RTN","PXRMRPCA",99,0)
 .;Get category ien
"RTN","PXRMRPCA",100,0)
 .S ORCAT=$P(TMPLST(CNT),U,2)
"RTN","PXRMRPCA",101,0)
 .;Update unique number
"RTN","PXRMRPCA",102,0)
 .S UNIQ=UNIQ+1
"RTN","PXRMRPCA",103,0)
 .;Add category and associated reminders/subcategories to output array
"RTN","PXRMRPCA",104,0)
 .D GETLST(0,ORCAT,0,UNIQ)
"RTN","PXRMRPCA",105,0)
 Q
"RTN","PXRMRPCA",106,0)
 ;
"RTN","PXRMRPCA",107,0)
DLG(REM) ;Dialog check
"RTN","PXRMRPCA",108,0)
 N DATA,DIEN,DOK
"RTN","PXRMRPCA",109,0)
 S DIEN=$P($G(^PXD(811.9,REM,51)),U) Q:'DIEN 0
"RTN","PXRMRPCA",110,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0))
"RTN","PXRMRPCA",111,0)
 I $P(DATA,U,4)="R",$P(DATA,U,3)="" Q 1
"RTN","PXRMRPCA",112,0)
 Q 0
"RTN","PXRMRPCA",113,0)
 ;
"RTN","PXRMRPCA",114,0)
GETLST(D0,D1,LEVEL,PARENT) ;Add to output array
"RTN","PXRMRPCA",115,0)
 N DATA,NAME,ORREM,ORSCAT,PCAT,SEQ,SUB,TEMP,USAGE
"RTN","PXRMRPCA",116,0)
 ;Get category ien if this is a sub-category
"RTN","PXRMRPCA",117,0)
 S PCAT=0 I LEVEL>0 D  Q:ORSCAT=""  S UNIQ=UNIQ+1,PARENT=UNIQ
"RTN","PXRMRPCA",118,0)
 .S ORSCAT=$P($G(^PXRMD(811.7,D0,10,D1,0)),U),PCAT=PARENT
"RTN","PXRMRPCA",119,0)
 ;Otherwise use passed ien
"RTN","PXRMRPCA",120,0)
 I LEVEL=0 S ORSCAT=D1
"RTN","PXRMRPCA",121,0)
 ;Get category name
"RTN","PXRMRPCA",122,0)
 S NAME=$G(^PXRMD(811.7,ORSCAT,0)) I NAME="" Q
"RTN","PXRMRPCA",123,0)
 ;
"RTN","PXRMRPCA",124,0)
 ;Create category entry in output array
"RTN","PXRMRPCA",125,0)
 ;unique number^type^name^parent^reminder ien
"RTN","PXRMRPCA",126,0)
 ;
"RTN","PXRMRPCA",127,0)
 S IC=IC+1,ORY(IC)=PARENT_U_"C"_U_NAME_U_PCAT_U
"RTN","PXRMRPCA",128,0)
 ;Increment tab
"RTN","PXRMRPCA",129,0)
 S LEVEL=LEVEL+1
"RTN","PXRMRPCA",130,0)
 ;
"RTN","PXRMRPCA",131,0)
 ;Sort Reminders from this category into display sequence
"RTN","PXRMRPCA",132,0)
 S SUB=0 K TEMP
"RTN","PXRMRPCA",133,0)
 F  S SUB=$O(^PXRMD(811.7,ORSCAT,2,SUB)) Q:SUB=""  D
"RTN","PXRMRPCA",134,0)
 .S DATA=$G(^PXRMD(811.7,ORSCAT,2,SUB,0)) Q:DATA=""
"RTN","PXRMRPCA",135,0)
 .S ORREM=$P(DATA,U) Q:ORREM=""
"RTN","PXRMRPCA",136,0)
 .S SEQ=$P(DATA,U,2)_0
"RTN","PXRMRPCA",137,0)
 .;Skip inactive reminders
"RTN","PXRMRPCA",138,0)
 .S DATA=$G(^PXD(811.9,ORREM,0)) Q:DATA=""  Q:$P(DATA,U,6)
"RTN","PXRMRPCA",139,0)
 .;Include only CPRS reminders
"RTN","PXRMRPCA",140,0)
 .S USAGE=$P($G(^PXD(811.9,ORREM,100)),U,4) I USAGE'["C",USAGE'["*" Q
"RTN","PXRMRPCA",141,0)
 .S NAME=$P(DATA,U) I NAME="" S NAME="Unknown"
"RTN","PXRMRPCA",142,0)
 .;or printname
"RTN","PXRMRPCA",143,0)
 .S NAME=$P(DATA,U,3)
"RTN","PXRMRPCA",144,0)
 .S TEMP(SEQ)=NAME_U_ORREM
"RTN","PXRMRPCA",145,0)
 ;
"RTN","PXRMRPCA",146,0)
 ;Re-save reminders in output array for display
"RTN","PXRMRPCA",147,0)
 ;unique number^type^name^parent^reminder ien
"RTN","PXRMRPCA",148,0)
 ;
"RTN","PXRMRPCA",149,0)
 S SEQ=""
"RTN","PXRMRPCA",150,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMRPCA",151,0)
 .S NAME=$P(TEMP(SEQ),U),ORREM=$P(TEMP(SEQ),U,2)
"RTN","PXRMRPCA",152,0)
 .S UNIQ=UNIQ+1
"RTN","PXRMRPCA",153,0)
 .S IC=IC+1,ORY(IC)=UNIQ_U_"R"_U_NAME_U_PARENT_U_ORREM_U_$$DLG(ORREM)
"RTN","PXRMRPCA",154,0)
 ;
"RTN","PXRMRPCA",155,0)
 ;Sort Sub-Categories for this category into display order
"RTN","PXRMRPCA",156,0)
 S SUB=0 K TEMP
"RTN","PXRMRPCA",157,0)
 F  S SUB=$O(^PXRMD(811.7,ORSCAT,10,SUB)) Q:SUB=""  D
"RTN","PXRMRPCA",158,0)
 .S DATA=$G(^PXRMD(811.7,ORSCAT,10,SUB,0)) Q:DATA=""
"RTN","PXRMRPCA",159,0)
 .S SEQ=$P(DATA,U,2),TEMP(SEQ)=SUB
"RTN","PXRMRPCA",160,0)
 ;
"RTN","PXRMRPCA",161,0)
 ;Process sub-sub categories in the same manner
"RTN","PXRMRPCA",162,0)
 S SEQ=""
"RTN","PXRMRPCA",163,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMRPCA",164,0)
 .S SUB=TEMP(SEQ)
"RTN","PXRMRPCA",165,0)
 .D GETLST(ORSCAT,SUB,LEVEL,PARENT)
"RTN","PXRMRPCA",166,0)
 Q
"RTN","PXRMRPCA",167,0)
 ;
"RTN","PXRMRPCA",168,0)
LIST(ORY,ORPT,ORLOC) ;Reminders for this patient location (not evaluated)
"RTN","PXRMRPCA",169,0)
 ;format file 811.9 ien
"RTN","PXRMRPCA",170,0)
 N ORSRV,TMPLST,ERR,ORI,ORJ,ORIEN,ORTXT,ORX,ORLASTDT,ORDUEDT
"RTN","PXRMRPCA",171,0)
 N CNT,ORIEN,ORDUE,ORPRI,ORSTA,PASS,SUB
"RTN","PXRMRPCA",172,0)
 S ORJ=0
"RTN","PXRMRPCA",173,0)
 ;
"RTN","PXRMRPCA",174,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","PXRMRPCA",175,0)
 I ORLOC S PASS="USR^LOC.`"_$G(ORLOC)_"^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",176,0)
 I 'ORLOC S PASS="USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",177,0)
 D GETLST^XPAR(.TMPLST,PASS,"ORQQPX SEARCH ITEMS","Q",.ERR) ; DBIA 3076
"RTN","PXRMRPCA",178,0)
 I ERR>0 S ORY(1)=U_"Error: "_$P(ERR,U,2) Q
"RTN","PXRMRPCA",179,0)
 ;
"RTN","PXRMRPCA",180,0)
 S CNT=0,SUB=""
"RTN","PXRMRPCA",181,0)
 F  S SUB=$O(TMPLST(SUB)) Q:'SUB  D
"RTN","PXRMRPCA",182,0)
 .S ORIEN=$P(TMPLST(SUB),U,2) Q:'ORIEN  Q:'$D(^PXD(811.9,ORIEN,0))
"RTN","PXRMRPCA",183,0)
 .S CNT=CNT+1,ORY(CNT)=ORIEN
"RTN","PXRMRPCA",184,0)
 Q
"RTN","PXRMRPCA",185,0)
 ;
"RTN","PXRMRPCA",186,0)
REMDET(ORY,ORPT,ORIEN) ;return detail for a pt's clinical reminder
"RTN","PXRMRPCA",187,0)
 ; ORY - return array
"RTN","PXRMRPCA",188,0)
 ; ORPT - patient DFN
"RTN","PXRMRPCA",189,0)
 ; ORIEN - clinical reminder (811.9 ien)
"RTN","PXRMRPCA",190,0)
 K ^TMP("PXRHM",$J)
"RTN","PXRMRPCA",191,0)
 D MAIN^PXRM(ORPT,ORIEN,5,1)     ; 5 returns all reminder info
"RTN","PXRMRPCA",192,0)
 N CR,I,J,ORTXT,SCT,STA,STA1,STA2,STA3 S I=1,J=0
"RTN","PXRMRPCA",193,0)
 S ORTXT="",ORTXT=$O(^TMP("PXRHM",$J,ORIEN,ORTXT)) Q:ORTXT=""
"RTN","PXRMRPCA",194,0)
 S STA=$G(^TMP("PXRHM",$J,ORIEN,ORTXT)) I STA'="" D
"RTN","PXRMRPCA",195,0)
 .S STA(1)=$P(STA,U),STA(2)=$P(STA,U,2),STA(3)=$P(STA,U,3)
"RTN","PXRMRPCA",196,0)
 .F SCT=1,2,3 I STA(SCT) S STA(SCT)=$$FMTE^XLFDT(STA(SCT),"5D")
"RTN","PXRMRPCA",197,0)
 .S ORY(I)="  --STATUS--  --DUE DATE--  --LAST DONE--",I=I+1
"RTN","PXRMRPCA",198,0)
 .S ORY(I)=$J(STA(1),10)_$J(STA(2),13)_$J(STA(3),14),I=I+1
"RTN","PXRMRPCA",199,0)
 F  S J=$O(^TMP("PXRHM",$J,ORIEN,ORTXT,"TXT",J)) Q:J=""  D
"RTN","PXRMRPCA",200,0)
 .S ORY(I)=^TMP("PXRHM",$J,ORIEN,ORTXT,"TXT",J),I=I+1
"RTN","PXRMRPCA",201,0)
 K ^TMP("PXRHM",$J)
"RTN","PXRMRPCA",202,0)
 Q
"RTN","PXRMRPCA",203,0)
 ;
"RTN","PXRMRPCA",204,0)
WEB(ORY,ORRM) ;web page call
"RTN","PXRMRPCA",205,0)
 ;web site description^address
"RTN","PXRMRPCA",206,0)
 N ADDR,CNT,DATA,DESC,LINE,SUB,TITLE,TXT,UNIQ
"RTN","PXRMRPCA",207,0)
 S DESC="",CNT=0,UNIQ=0
"RTN","PXRMRPCA",208,0)
 ;Get the reminder specific web sites in alpha order
"RTN","PXRMRPCA",209,0)
 I ORRM]"" D
"RTN","PXRMRPCA",210,0)
 .F  S DESC=$O(^PXD(811.9,ORRM,50,"B",DESC)) Q:DESC=""  D
"RTN","PXRMRPCA",211,0)
 ..S SUB=0
"RTN","PXRMRPCA",212,0)
 ..F  S SUB=$O(^PXD(811.9,ORRM,50,"B",DESC,SUB)) Q:'SUB  D
"RTN","PXRMRPCA",213,0)
 ...S ADDR=$P($G(^PXD(811.9,ORRM,50,SUB,0)),U) Q:ADDR=""
"RTN","PXRMRPCA",214,0)
 ...S TITLE=$P($G(^PXD(811.9,ORRM,50,SUB,0)),U,2)
"RTN","PXRMRPCA",215,0)
 ...S UNIQ=UNIQ+1,CNT=CNT+1,ORY(CNT)=1_U_UNIQ_U_ADDR_U_TITLE,LINE=0
"RTN","PXRMRPCA",216,0)
 ...F  S LINE=$O(^PXD(811.9,ORRM,50,SUB,1,LINE)) Q:'LINE  D
"RTN","PXRMRPCA",217,0)
 ....S TXT=$G(^PXD(811.9,ORRM,50,SUB,1,LINE,0)) Q:TXT=""
"RTN","PXRMRPCA",218,0)
 ....S CNT=CNT+1,ORY(CNT)=2_U_UNIQ_U_TXT
"RTN","PXRMRPCA",219,0)
 ;Get the general web sites in alpha order
"RTN","PXRMRPCA",220,0)
 F  S DESC=$O(^PXRM(800,1,1,"B",DESC)) Q:DESC=""  D
"RTN","PXRMRPCA",221,0)
 .S SUB=0
"RTN","PXRMRPCA",222,0)
 .F  S SUB=$O(^PXRM(800,1,1,"B",DESC,SUB)) Q:'SUB  D
"RTN","PXRMRPCA",223,0)
 ..S ADDR=$P($G(^PXRM(800,1,1,SUB,0)),U) Q:ADDR=""
"RTN","PXRMRPCA",224,0)
 ..S TITLE=$P($G(^PXRM(800,1,1,SUB,0)),U,2)
"RTN","PXRMRPCA",225,0)
 ..S UNIQ=UNIQ+1,CNT=CNT+1,ORY(CNT)=1_U_UNIQ_U_ADDR_U_TITLE,LINE=0
"RTN","PXRMRPCA",226,0)
 ..F  S LINE=$O(^PXRM(800,1,1,SUB,1,LINE)) Q:'LINE  D
"RTN","PXRMRPCA",227,0)
 ...S TXT=$G(^PXRM(800,1,1,SUB,1,LINE,0)) Q:TXT=""
"RTN","PXRMRPCA",228,0)
 ...S CNT=CNT+1,ORY(CNT)=2_U_UNIQ_U_TXT
"RTN","PXRMRPCA",229,0)
 Q
"RTN","PXRMRPCD")
0^57^B10641481
"RTN","PXRMRPCD",1,0)
PXRMRPCD ;SLC/PJH - PXRM REMINDER DIALOG ;06/08/2001
"RTN","PXRMRPCD",2,0)
 ;;1.5;CLINICAL REMINDERS;**4,5**;Jun 19, 2000
"RTN","PXRMRPCD",3,0)
 ;
"RTN","PXRMRPCD",4,0)
 ; Used by CPRS - see DBIA 3295/3296/3332
"RTN","PXRMRPCD",5,0)
 ;
"RTN","PXRMRPCD",6,0)
 ;
"RTN","PXRMRPCD",7,0)
CATEGORY(ORY,CIEN) ;Get category information
"RTN","PXRMRPCD",8,0)
 ;
"RTN","PXRMRPCD",9,0)
 ; Input parameter Category ien [#811.7]
"RTN","PXRMRPCD",10,0)
 ;
"RTN","PXRMRPCD",11,0)
 N DATA,IC,IEN,NAME,PNAME,RIEN,SEQ,SUB,TEMP,USAGE
"RTN","PXRMRPCD",12,0)
 S IC=0
"RTN","PXRMRPCD",13,0)
 ;Get category name
"RTN","PXRMRPCD",14,0)
 S NAME=$G(^PXRMD(811.7,CIEN,0)) I NAME="" Q
"RTN","PXRMRPCD",15,0)
 ;
"RTN","PXRMRPCD",16,0)
 ;Sort Reminders from this category into display sequence
"RTN","PXRMRPCD",17,0)
 S SUB=0 K TEMP
"RTN","PXRMRPCD",18,0)
 F  S SUB=$O(^PXRMD(811.7,CIEN,2,SUB)) Q:SUB=""  D
"RTN","PXRMRPCD",19,0)
 .S DATA=$G(^PXRMD(811.7,CIEN,2,SUB,0)) Q:DATA=""
"RTN","PXRMRPCD",20,0)
 .S RIEN=$P(DATA,U) Q:'RIEN
"RTN","PXRMRPCD",21,0)
 .S SEQ=$P(DATA,U,2)_0
"RTN","PXRMRPCD",22,0)
 .;Include only CPRS reminders
"RTN","PXRMRPCD",23,0)
 .S USAGE=$P($G(^PXD(811.9,RIEN,100)),U,4) I USAGE'["C",USAGE'["*" Q
"RTN","PXRMRPCD",24,0)
 .;Skip inactive reminders
"RTN","PXRMRPCD",25,0)
 .S DATA=$G(^PXD(811.9,RIEN,0)) Q:DATA=""  Q:$P(DATA,U,6)
"RTN","PXRMRPCD",26,0)
 .S NAME=$P(DATA,U) I NAME="" S NAME="Unknown"
"RTN","PXRMRPCD",27,0)
 .;or printname
"RTN","PXRMRPCD",28,0)
 .S PNAME=$P(DATA,U,3)
"RTN","PXRMRPCD",29,0)
 .S TEMP(SEQ)=RIEN_U_NAME_U_PNAME
"RTN","PXRMRPCD",30,0)
 ;
"RTN","PXRMRPCD",31,0)
 ;Re-save reminders in output array for display
"RTN","PXRMRPCD",32,0)
 ;type^reminder ien^name
"RTN","PXRMRPCD",33,0)
 ;
"RTN","PXRMRPCD",34,0)
 S SEQ=""
"RTN","PXRMRPCD",35,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMRPCD",36,0)
 .S IC=IC+1,ORY(IC)="R"_U_TEMP(SEQ)
"RTN","PXRMRPCD",37,0)
 ;
"RTN","PXRMRPCD",38,0)
 ;Sort Sub-Categories for this category into display order
"RTN","PXRMRPCD",39,0)
 S SUB=0 K TEMP
"RTN","PXRMRPCD",40,0)
 F  S SUB=$O(^PXRMD(811.7,CIEN,10,SUB)) Q:SUB=""  D
"RTN","PXRMRPCD",41,0)
 .S DATA=$G(^PXRMD(811.7,CIEN,10,SUB,0)) Q:DATA=""
"RTN","PXRMRPCD",42,0)
 .S IEN=$P(DATA,U) Q:'IEN
"RTN","PXRMRPCD",43,0)
 .S SEQ=$P(DATA,U,2),TEMP(SEQ)=IEN
"RTN","PXRMRPCD",44,0)
 ;
"RTN","PXRMRPCD",45,0)
 ;Save sub categories
"RTN","PXRMRPCD",46,0)
 S SEQ=""
"RTN","PXRMRPCD",47,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMRPCD",48,0)
 .S SUB=TEMP(SEQ) Q:'SUB
"RTN","PXRMRPCD",49,0)
 .S NAME=$P($G(^PXRMD(811.7,SUB,0)),U) Q:NAME=""
"RTN","PXRMRPCD",50,0)
 .S IC=IC+1,ORY(IC)="C"_U_SUB_U_NAME
"RTN","PXRMRPCD",51,0)
 Q
"RTN","PXRMRPCD",52,0)
 ;
"RTN","PXRMRPCD",53,0)
DIALOG(ORY,ORDLG) ;Load dialog
"RTN","PXRMRPCD",54,0)
 ;
"RTN","PXRMRPCD",55,0)
 ; Input parameter ORDLG - dialog ien [#801.41]
"RTN","PXRMRPCD",56,0)
 ;
"RTN","PXRMRPCD",57,0)
 I 'ORDLG S ORY(1)="-1^dialog ien not specified" Q
"RTN","PXRMRPCD",58,0)
 ;
"RTN","PXRMRPCD",59,0)
 ;Check if a reminder dialog and enabled
"RTN","PXRMRPCD",60,0)
 N DATA
"RTN","PXRMRPCD",61,0)
 S DATA=$G(^PXRMD(801.41,ORDLG,0))
"RTN","PXRMRPCD",62,0)
 ;
"RTN","PXRMRPCD",63,0)
 I $P(DATA,U,4)'="R" S ORY(1)="-1^reminder dialog invalid" Q
"RTN","PXRMRPCD",64,0)
 ;
"RTN","PXRMRPCD",65,0)
 I $P(DATA,U,3) S ORY(1)="-1^reminder dialog disabled" Q
"RTN","PXRMRPCD",66,0)
 ;
"RTN","PXRMRPCD",67,0)
 ;Load dialog lines into local array
"RTN","PXRMRPCD",68,0)
 D LOAD^PXRMDLL(ORDLG)
"RTN","PXRMRPCD",69,0)
 Q
"RTN","PXRMRPCD",70,0)
 ;
"RTN","PXRMRPCD",71,0)
EDITPAR(PAR) ;Edit CPRS GUI Version 15 parameters
"RTN","PXRMRPCD",72,0)
 ;
"RTN","PXRMRPCD",73,0)
 ;This is an entry action in the PXRM CPRS CONFIGURATION menu options
"RTN","PXRMRPCD",74,0)
 ;
"RTN","PXRMRPCD",75,0)
 ;Check if Patch 85 has been installed
"RTN","PXRMRPCD",76,0)
 I '$$FIND1^DIC(8989.51,"","AMX",PAR) D  Q
"RTN","PXRMRPCD",77,0)
 .W !!,"This option requires CPRS GUI Version 15",*7 H 1
"RTN","PXRMRPCD",78,0)
 ;
"RTN","PXRMRPCD",79,0)
 ;Edit Parameter Definition
"RTN","PXRMRPCD",80,0)
 D EDITPAR^XPAREDIT(PAR)
"RTN","PXRMRPCD",81,0)
 Q
"RTN","PXRMRPCD",82,0)
 ;
"RTN","PXRMRPCD",83,0)
SEL(ORY) ;Selectable reminders and categories
"RTN","PXRMRPCD",84,0)
 N CIEN,CNAM,CNT,DATA,RCLASS,RNAM,RPNAM,RIEN,TYPE,USAGE
"RTN","PXRMRPCD",85,0)
 ;
"RTN","PXRMRPCD",86,0)
 ;Reminders in print name order
"RTN","PXRMRPCD",87,0)
 S TYPE="R",RPNAM="",CNT=0
"RTN","PXRMRPCD",88,0)
 F  S RPNAM=$O(^PXD(811.9,"D",RPNAM)) Q:RPNAM=""  D
"RTN","PXRMRPCD",89,0)
 .S RIEN=0
"RTN","PXRMRPCD",90,0)
 .F  S RIEN=$O(^PXD(811.9,"D",RPNAM,RIEN)) Q:'RIEN  D
"RTN","PXRMRPCD",91,0)
 ..;Include only CPRS reminders
"RTN","PXRMRPCD",92,0)
 ..S USAGE=$P($G(^PXD(811.9,RIEN,100)),U,4) I USAGE'["C",USAGE'["*" Q
"RTN","PXRMRPCD",93,0)
 ..;Skip inactive reminders
"RTN","PXRMRPCD",94,0)
 ..S DATA=$G(^PXD(811.9,RIEN,0)) Q:DATA=""  Q:$P(DATA,U,6)
"RTN","PXRMRPCD",95,0)
 ..S RNAM=$P(DATA,U),RCLASS=$P($G(^PXD(811.9,RIEN,100)),U)
"RTN","PXRMRPCD",96,0)
 ..S CNT=CNT+1,ORY(CNT)=TYPE_U_RIEN_U_RPNAM_U_RNAM_U_RCLASS
"RTN","PXRMRPCD",97,0)
 ;
"RTN","PXRMRPCD",98,0)
 ;Categories in name order
"RTN","PXRMRPCD",99,0)
 S TYPE="C",CNAM=""
"RTN","PXRMRPCD",100,0)
 F  S CNAM=$O(^PXRMD(811.7,"B",CNAM)) Q:CNAM=""  D
"RTN","PXRMRPCD",101,0)
 .S CIEN=$O(^PXRMD(811.7,"B",CNAM,"")) Q:'CIEN
"RTN","PXRMRPCD",102,0)
 .S CNT=CNT+1,ORY(CNT)=TYPE_U_CIEN_U_CNAM
"RTN","PXRMRPCD",103,0)
 Q
"RTN","PXRMSPED")
0^55^B4249360
"RTN","PXRMSPED",1,0)
PXRMSPED ; SLC/PKR - Edit a reminder sponsor. ;06/07/2001
"RTN","PXRMSPED",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMSPED",3,0)
 ;
"RTN","PXRMSPED",4,0)
 ;=======================================================================
"RTN","PXRMSPED",5,0)
 N DA,DIC,DLAYGO,DTOUT,DUOUT,FILEA,IENA,NUM,Y
"RTN","PXRMSPED",6,0)
GETNAME ;Get the name of the computed finding to edit.
"RTN","PXRMSPED",7,0)
 K CLASS,DA,DIC,DLAYGO,DTOUT,DUOUT,INUSE,PXRMEDOK,Y
"RTN","PXRMSPED",8,0)
 S PXRMEDOK=1
"RTN","PXRMSPED",9,0)
 S DIC="^PXRMD(811.6,"
"RTN","PXRMSPED",10,0)
 S DIC(0)="AEMQL"
"RTN","PXRMSPED",11,0)
 S DIC("A")="Select Reminder Sponsor: "
"RTN","PXRMSPED",12,0)
 S DLAYGO=811.6
"RTN","PXRMSPED",13,0)
 ;Set the starting place for additions.
"RTN","PXRMSPED",14,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMSPED",15,0)
 W !
"RTN","PXRMSPED",16,0)
 D ^DIC
"RTN","PXRMSPED",17,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMSPED",18,0)
 I Y=-1 G END
"RTN","PXRMSPED",19,0)
 S DA=$P(Y,U,1)
"RTN","PXRMSPED",20,0)
 S CLASS=$P($G(^PXRMD(811.6,DA,0)),U,2)
"RTN","PXRMSPED",21,0)
 I (CLASS="N")&('$G(PXRMINST)) D  G GETNAME
"RTN","PXRMSPED",22,0)
 . W !,"You cannot edit National Class Sponsors!"
"RTN","PXRMSPED",23,0)
 D INUSE(DA,.NUM,.FILEA,.IENA)
"RTN","PXRMSPED",24,0)
 I NUM>0 D
"RTN","PXRMSPED",25,0)
 . W !,"This Sponsor is in use by the following so it cannot be edited."
"RTN","PXRMSPED",26,0)
 . W !!,"FILE",?35,"ENTRY"
"RTN","PXRMSPED",27,0)
 . W !,"----",?35,"-----"
"RTN","PXRMSPED",28,0)
 . F IND=1:1:NUM W !,FILEA(IND),?35,IENA(IND)
"RTN","PXRMSPED",29,0)
 E  D EDIT(DIC,DA)
"RTN","PXRMSPED",30,0)
 G GETNAME
"RTN","PXRMSPED",31,0)
END ;
"RTN","PXRMSPED",32,0)
 Q
"RTN","PXRMSPED",33,0)
 ;
"RTN","PXRMSPED",34,0)
 ;=======================================================================
"RTN","PXRMSPED",35,0)
EDIT(ROOT,DA) ;
"RTN","PXRMSPED",36,0)
 N DIE,DR,DIDEL
"RTN","PXRMSPED",37,0)
 S DIE=ROOT,DIDEL=811.6
"RTN","PXRMSPED",38,0)
 S DR="[PXRM SPONSOR EDIT]"
"RTN","PXRMSPED",39,0)
 D ^DIE
"RTN","PXRMSPED",40,0)
 Q
"RTN","PXRMSPED",41,0)
 ;
"RTN","PXRMSPED",42,0)
 ;=======================================================================
"RTN","PXRMSPED",43,0)
INUSE(SIEN,NUM,FILEA,IENA) ;Set INUSE to true if Sponsor SIEN is
"RTN","PXRMSPED",44,0)
 ;inuse. Return a list of files, FILEA, and entries, IENA, using SIEN.
"RTN","PXRMSPED",45,0)
 N FILE,IEN,IENT,IND,LIST,SP
"RTN","PXRMSPED",46,0)
 W !,"Checking usage ..."
"RTN","PXRMSPED",47,0)
 S NUM=0
"RTN","PXRMSPED",48,0)
 K IENA,FILEA
"RTN","PXRMSPED",49,0)
 F FILE=801.41,811.2,811.4,811.5,811.9 D
"RTN","PXRMSPED",50,0)
 . K LIST
"RTN","PXRMSPED",51,0)
 . D LIST^DIC(811.9,"","@","","","","","","","","LIST")
"RTN","PXRMSPED",52,0)
 . S IENT=$P(LIST("DILIST",0),U,1)
"RTN","PXRMSPED",53,0)
 . F IND=1:1:IENT D
"RTN","PXRMSPED",54,0)
 .. S IEN=LIST("DILIST",2,IND)
"RTN","PXRMSPED",55,0)
 .. S SP=+$$GET1^DIQ(FILE,IEN,101,"I")
"RTN","PXRMSPED",56,0)
 .. I SP=SIEN D
"RTN","PXRMSPED",57,0)
 ... S NUM=NUM+1
"RTN","PXRMSPED",58,0)
 ... S FILEA(NUM)=FILE
"RTN","PXRMSPED",59,0)
 ... S IENA(NUM)=IEN
"RTN","PXRMSPED",60,0)
 I NUM>0 D
"RTN","PXRMSPED",61,0)
 . F IND=1:1:NUM D
"RTN","PXRMSPED",62,0)
 .. S IENA(IND)=$$GET1^DIQ(FILEA(IND),IENA(IND),.01)
"RTN","PXRMSPED",63,0)
 .. S FILEA(IND)=$$GET1^DID(FILEA(IND),"","","NAME")
"RTN","PXRMSPED",64,0)
 Q
"RTN","PXRMSPED",65,0)
 ;
"RTN","PXRMTEDT")
0^37^B3460121
"RTN","PXRMTEDT",1,0)
PXRMTEDT ; SLC/PKR - Edit a taxonomy item. ;05/03/2001
"RTN","PXRMTEDT",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMTEDT",3,0)
 ;
"RTN","PXRMTEDT",4,0)
 ;=======================================================================
"RTN","PXRMTEDT",5,0)
 N CS1,CS2,DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMTEDT",6,0)
GETNAME ;Get the name of the reminder taxonomy to edit.
"RTN","PXRMTEDT",7,0)
 K DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMTEDT",8,0)
 S DIC="^PXD(811.2,"
"RTN","PXRMTEDT",9,0)
 S DIC(0)="AEMQL"
"RTN","PXRMTEDT",10,0)
 S DIC("A")="Select Reminder Taxonomy: "
"RTN","PXRMTEDT",11,0)
 S DIC("S")="I $$VEDIT^PXRMUTIL(DIC,Y)"
"RTN","PXRMTEDT",12,0)
 S DLAYGO=811.2
"RTN","PXRMTEDT",13,0)
 ;Set the starting place for additions.
"RTN","PXRMTEDT",14,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMTEDT",15,0)
 W !
"RTN","PXRMTEDT",16,0)
 D ^DIC
"RTN","PXRMTEDT",17,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMTEDT",18,0)
 I Y=-1 G END
"RTN","PXRMTEDT",19,0)
 S DA=$P(Y,U,1)
"RTN","PXRMTEDT",20,0)
 I $$LOCKXTL^PXRMBXTL(DA) D
"RTN","PXRMTEDT",21,0)
 . S CS1=$$FILE^PXRMEXCS(811.2,DA)
"RTN","PXRMTEDT",22,0)
 . D EDIT(DIC,DA)
"RTN","PXRMTEDT",23,0)
 .;See if any changes have been made, if so do the edit history.
"RTN","PXRMTEDT",24,0)
 . S CS2=$$FILE^PXRMEXCS(811.2,DA)
"RTN","PXRMTEDT",25,0)
 . I CS2'=0,CS2'=CS1 D SEHIST^PXRMUTIL(811.2,DIC,DA)
"RTN","PXRMTEDT",26,0)
 D ULOCKXTL^PXRMBXTL(DA)
"RTN","PXRMTEDT",27,0)
 G GETNAME
"RTN","PXRMTEDT",28,0)
END ;
"RTN","PXRMTEDT",29,0)
 Q
"RTN","PXRMTEDT",30,0)
 ;
"RTN","PXRMTEDT",31,0)
 ;=======================================================================
"RTN","PXRMTEDT",32,0)
EDIT(ROOT,DA) ;
"RTN","PXRMTEDT",33,0)
 N DIE,DR,DIDEL
"RTN","PXRMTEDT",34,0)
 S DIE=ROOT,DIDEL=811.2
"RTN","PXRMTEDT",35,0)
 W !!,"General Taxonomy Data"
"RTN","PXRMTEDT",36,0)
 S DR=".01"
"RTN","PXRMTEDT",37,0)
 D ^DIE
"RTN","PXRMTEDT",38,0)
 ;If DA is undefined that the entry was deleted.
"RTN","PXRMTEDT",39,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",40,0)
 I $D(Y) Q
"RTN","PXRMTEDT",41,0)
 ;
"RTN","PXRMTEDT",42,0)
 S DR=".02"
"RTN","PXRMTEDT",43,0)
 D ^DIE
"RTN","PXRMTEDT",44,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",45,0)
 I $D(Y) Q
"RTN","PXRMTEDT",46,0)
 ;
"RTN","PXRMTEDT",47,0)
 ;Class, sponsor, review date
"RTN","PXRMTEDT",48,0)
 W !!
"RTN","PXRMTEDT",49,0)
 S DR="100;101;102"
"RTN","PXRMTEDT",50,0)
 D ^DIE
"RTN","PXRMTEDT",51,0)
 I $D(Y) Q
"RTN","PXRMTEDT",52,0)
 ;
"RTN","PXRMTEDT",53,0)
 W !!
"RTN","PXRMTEDT",54,0)
 S DR="4"
"RTN","PXRMTEDT",55,0)
 D ^DIE
"RTN","PXRMTEDT",56,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",57,0)
 I $D(Y) Q
"RTN","PXRMTEDT",58,0)
 ;
"RTN","PXRMTEDT",59,0)
 S DR="10"
"RTN","PXRMTEDT",60,0)
 D ^DIE
"RTN","PXRMTEDT",61,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",62,0)
 I $D(Y) Q
"RTN","PXRMTEDT",63,0)
 ;
"RTN","PXRMTEDT",64,0)
 S DR="1.6"
"RTN","PXRMTEDT",65,0)
 D ^DIE
"RTN","PXRMTEDT",66,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",67,0)
 I $D(Y) Q
"RTN","PXRMTEDT",68,0)
 ;
"RTN","PXRMTEDT",69,0)
 W !!,"ICD0 Range of Coded Values"
"RTN","PXRMTEDT",70,0)
 S DR="2103"
"RTN","PXRMTEDT",71,0)
 D ^DIE
"RTN","PXRMTEDT",72,0)
 I $D(Y) Q
"RTN","PXRMTEDT",73,0)
 ;
"RTN","PXRMTEDT",74,0)
 W !!,"ICD9 Range of Coded Values"
"RTN","PXRMTEDT",75,0)
 S DR="2102"
"RTN","PXRMTEDT",76,0)
 D ^DIE
"RTN","PXRMTEDT",77,0)
 I $D(Y) Q
"RTN","PXRMTEDT",78,0)
 ;
"RTN","PXRMTEDT",79,0)
 W !!,"CPT Range of Coded Values"
"RTN","PXRMTEDT",80,0)
 S DR="2104"
"RTN","PXRMTEDT",81,0)
 D ^DIE
"RTN","PXRMTEDT",82,0)
 I $D(Y) Q
"RTN","PXRMTEDT",83,0)
 Q
"RTN","PXRMTMED")
0^42^B1357107
"RTN","PXRMTMED",1,0)
PXRMTMED ; SLC/PKR/PJH - Edit a reminder term. ;05/03/2001
"RTN","PXRMTMED",2,0)
 ;;1.5;CLINICAL REMINDERS;**5**;Jun 19, 2000
"RTN","PXRMTMED",3,0)
 ;
"RTN","PXRMTMED",4,0)
 ;=======================================================================
"RTN","PXRMTMED",5,0)
 N CS1,CS2,DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMTMED",6,0)
GETNAME ;Get the name of the term to edit.
"RTN","PXRMTMED",7,0)
 K DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMTMED",8,0)
 S DIC="^PXRMD(811.5,"
"RTN","PXRMTMED",9,0)
 S DIC(0)="AEMQL"
"RTN","PXRMTMED",10,0)
 S DIC("A")="Select Reminder Term: "
"RTN","PXRMTMED",11,0)
 S DLAYGO=811.5
"RTN","PXRMTMED",12,0)
 ;Set the starting place for additions.
"RTN","PXRMTMED",13,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMTMED",14,0)
 W !
"RTN","PXRMTMED",15,0)
 D ^DIC
"RTN","PXRMTMED",16,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMTMED",17,0)
 I Y=-1 G END
"RTN","PXRMTMED",18,0)
 S DA=$P(Y,U,1)
"RTN","PXRMTMED",19,0)
 S CS1=$$FILE^PXRMEXCS(811.5,DA)
"RTN","PXRMTMED",20,0)
 D EDIT(DIC,DA)
"RTN","PXRMTMED",21,0)
 S CS2=$$FILE^PXRMEXCS(811.5,DA)
"RTN","PXRMTMED",22,0)
 I CS2=0 Q
"RTN","PXRMTMED",23,0)
 I CS2'=CS1 D SEHIST^PXRMUTIL(811.5,DIC,DA)
"RTN","PXRMTMED",24,0)
 G GETNAME
"RTN","PXRMTMED",25,0)
END ;
"RTN","PXRMTMED",26,0)
 Q
"RTN","PXRMTMED",27,0)
 ;
"RTN","PXRMTMED",28,0)
 ;=======================================================================
"RTN","PXRMTMED",29,0)
EDIT(ROOT,DA) ;
"RTN","PXRMTMED",30,0)
 N CLASS,DIE,DR,DIDEL
"RTN","PXRMTMED",31,0)
 S CLASS=$P($G(^PXRMD(811.5,DA,100)),U,1)
"RTN","PXRMTMED",32,0)
 S DIE=ROOT,DR="[PXRM EDIT REMINDER TERM]",DIDEL=811.5
"RTN","PXRMTMED",33,0)
 I CLASS="N" S DR="[PXRM EDIT NATIONAL TERM]"
"RTN","PXRMTMED",34,0)
 D ^DIE
"RTN","PXRMTMED",35,0)
 Q
"RTN","PXRMTMED",36,0)
 ;
"RTN","PXRMUTIL")
0^36^B45922639
"RTN","PXRMUTIL",1,0)
PXRMUTIL ; SLC/PKR - Utility routines for use by PXRM. ;06/19/2001
"RTN","PXRMUTIL",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5**;Jun 19, 2000
"RTN","PXRMUTIL",3,0)
 ;
"RTN","PXRMUTIL",4,0)
 ;=======================================================================
"RTN","PXRMUTIL",5,0)
ANTON(ANUM) ;Convert an alphabetic number to its decimal form. This is the
"RTN","PXRMUTIL",6,0)
 ;inverse of NTOAN.
"RTN","PXRMUTIL",7,0)
 N INT
"RTN","PXRMUTIL",8,0)
 S INT("A")=0,INT("B")=1,INT("C")=2,INT("D")=3,INT("E")=4,INT("F")=5
"RTN","PXRMUTIL",9,0)
 S INT("G")=6,INT("H")=7,INT("I")=8,INT("J")=9,INT("K")=10,INT("L")=11
"RTN","PXRMUTIL",10,0)
 S INT("M")=12,INT("N")=13,INT("O")=14,INT("P")=15,INT("Q")=16
"RTN","PXRMUTIL",11,0)
 S INT("R")=17,INT("S")=18,INT("T")=19,INT("U")=20,INT("V")=21
"RTN","PXRMUTIL",12,0)
 S INT("W")=22,INT("X")=23,INT("Y")=24,INT("Z")=25
"RTN","PXRMUTIL",13,0)
 ;
"RTN","PXRMUTIL",14,0)
 N LEN,NUMBR,P26,PWR
"RTN","PXRMUTIL",15,0)
 S LEN=$L(ANUM),NUMBER=0,P26=1
"RTN","PXRMUTIL",16,0)
 F DC=LEN:-1:1 D
"RTN","PXRMUTIL",17,0)
 . S DIGIT=$E(ANUM,DC)
"RTN","PXRMUTIL",18,0)
 . S NUMBER=NUMBER+(P26*INT(DIGIT))
"RTN","PXRMUTIL",19,0)
 . S P26=26*P26
"RTN","PXRMUTIL",20,0)
 Q NUMBER
"RTN","PXRMUTIL",21,0)
 ;
"RTN","PXRMUTIL",22,0)
 ;=======================================================================
"RTN","PXRMUTIL",23,0)
AWRITE(REF) ;Write all the descendants of the array reference.
"RTN","PXRMUTIL",24,0)
 ;REF is the starting array reference, for example A or ^TMP("PXRM",$J).
"RTN","PXRMUTIL",25,0)
 N DONE,IC,IND,LEN,PROOT,ROOT,START,TEMP
"RTN","PXRMUTIL",26,0)
 I REF="" Q
"RTN","PXRMUTIL",27,0)
 S PROOT=$P(REF,")",1)
"RTN","PXRMUTIL",28,0)
 ;Build the root so we can tell when we are done.
"RTN","PXRMUTIL",29,0)
 S TEMP=$NA(@REF)
"RTN","PXRMUTIL",30,0)
 S ROOT=$P(TEMP,")",1)
"RTN","PXRMUTIL",31,0)
 S REF=$Q(@REF)
"RTN","PXRMUTIL",32,0)
 I REF'[ROOT Q
"RTN","PXRMUTIL",33,0)
 S DONE=0
"RTN","PXRMUTIL",34,0)
 F IC=0:0 Q:(REF="")!(DONE)  D
"RTN","PXRMUTIL",35,0)
 . S START=$F(REF,ROOT)
"RTN","PXRMUTIL",36,0)
 . S LEN=$L(REF)
"RTN","PXRMUTIL",37,0)
 . S IND=$E(REF,START,LEN)
"RTN","PXRMUTIL",38,0)
 . W !,PROOT_IND,"=",@REF
"RTN","PXRMUTIL",39,0)
 . S REF=$Q(@REF)
"RTN","PXRMUTIL",40,0)
 . I REF'[ROOT S DONE=1
"RTN","PXRMUTIL",41,0)
 Q
"RTN","PXRMUTIL",42,0)
 ;
"RTN","PXRMUTIL",43,0)
 ;=======================================================================
"RTN","PXRMUTIL",44,0)
COND(FIND3,TFIND3,V) ;Evaluate the finding condition. TFIND3 will be defined
"RTN","PXRMUTIL",45,0)
 ;if this is being called from a term evaluation. V is the value.
"RTN","PXRMUTIL",46,0)
 N CASESEN,COND,CONVAL
"RTN","PXRMUTIL",47,0)
 S CONVAL=""
"RTN","PXRMUTIL",48,0)
 S COND=$P(TFIND3,U,1)
"RTN","PXRMUTIL",49,0)
 S CASESEN=$P(TFIND3,U,2)
"RTN","PXRMUTIL",50,0)
 I COND="" D
"RTN","PXRMUTIL",51,0)
 . S COND=$P(FIND3,U,1)
"RTN","PXRMUTIL",52,0)
 . S CASESEN=$P(FIND3,U,2)
"RTN","PXRMUTIL",53,0)
 . I CASESEN="" S CASESEN=2
"RTN","PXRMUTIL",54,0)
 I $L(COND)>0 D
"RTN","PXRMUTIL",55,0)
 . S V=$TR(V," ","~")
"RTN","PXRMUTIL",56,0)
 . I 'CASESEN D
"RTN","PXRMUTIL",57,0)
 .. S COND=$$UP^XLFSTR(COND)
"RTN","PXRMUTIL",58,0)
 .. S V=$$UP^XLFSTR(V)
"RTN","PXRMUTIL",59,0)
 . X COND
"RTN","PXRMUTIL",60,0)
 . S CONVAL=$T
"RTN","PXRMUTIL",61,0)
 Q CONVAL
"RTN","PXRMUTIL",62,0)
 ;
"RTN","PXRMUTIL",63,0)
 ;=======================================================================
"RTN","PXRMUTIL",64,0)
DIWPS(DIWF,DIWL,DIWR) ;Setup the formatting for the DIWP call. The variables
"RTN","PXRMUTIL",65,0)
 ;should be NEWED by the caller.
"RTN","PXRMUTIL",66,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMUTIL",67,0)
DIWPK ;
"RTN","PXRMUTIL",68,0)
 K ^UTILITY($J,"W")
"RTN","PXRMUTIL",69,0)
 Q
"RTN","PXRMUTIL",70,0)
 ;
"RTN","PXRMUTIL",71,0)
 ;=======================================================================
"RTN","PXRMUTIL",72,0)
FNFR(ROOT) ;Given the root of a file return the file number.
"RTN","PXRMUTIL",73,0)
 Q +$P(@(ROOT_"0)"),U,2)
"RTN","PXRMUTIL",74,0)
 ;
"RTN","PXRMUTIL",75,0)
 ;=======================================================================
"RTN","PXRMUTIL",76,0)
MATCH(N1,ARRAY1,KEY1,N2,ARRAY2,KEY2,NMAT,MARRAY) ;Given two sorted
"RTN","PXRMUTIL",77,0)
 ;arrays look for matches between the KEY1 piece of ARRAY1 and the KEY2
"RTN","PXRMUTIL",78,0)
 ;piece of ARRAY2. Return ARRAY1_U_ARRAY2 matches in MARRAY.
"RTN","PXRMUTIL",79,0)
 ;Initialize the number of matches to 0.
"RTN","PXRMUTIL",80,0)
 S NMAT=0
"RTN","PXRMUTIL",81,0)
 I (N1'>0)!(N2'>0) Q
"RTN","PXRMUTIL",82,0)
 N A1,A2,IC,JC
"RTN","PXRMUTIL",83,0)
 S (IC,JC)=1
"RTN","PXRMUTIL",84,0)
ML ;
"RTN","PXRMUTIL",85,0)
 S A1=$P(@ARRAY1@(IC),U,KEY1),A2=$P(@ARRAY2@(JC),U,KEY2)
"RTN","PXRMUTIL",86,0)
 I A1=A2 D  Q:IC>N1  Q:JC>N2  G ML
"RTN","PXRMUTIL",87,0)
 . S NMAT=NMAT+1
"RTN","PXRMUTIL",88,0)
 . S @MARRAY@(NMAT)=@ARRAY1@(IC)_U_@ARRAY2@(JC)
"RTN","PXRMUTIL",89,0)
 . S IC=IC+1,JC=JC+1
"RTN","PXRMUTIL",90,0)
 I A1<A2 S IC=IC+1 Q:IC>N1  G ML
"RTN","PXRMUTIL",91,0)
 S JC=JC+1 Q:JC>N2  G ML
"RTN","PXRMUTIL",92,0)
 Q
"RTN","PXRMUTIL",93,0)
 ;
"RTN","PXRMUTIL",94,0)
 ;=======================================================================
"RTN","PXRMUTIL",95,0)
NTOAN(NUMBER) ;Given an integer N return an alphabetic string that can be
"RTN","PXRMUTIL",96,0)
 ;used for sorting. This will be modulus 26. For example N=0 returns
"RTN","PXRMUTIL",97,0)
 ;A, N=26 returns BA etc.
"RTN","PXRMUTIL",98,0)
 N ALPH
"RTN","PXRMUTIL",99,0)
 S ALPH(0)="A",ALPH(1)="B",ALPH(2)="C",ALPH(3)="D",ALPH(4)="E"
"RTN","PXRMUTIL",100,0)
 S ALPH(5)="F",ALPH(6)="G",ALPH(7)="H",ALPH(8)="I",ALPH(9)="J"
"RTN","PXRMUTIL",101,0)
 S ALPH(10)="K",ALPH(11)="L",ALPH(12)="M",ALPH(13)="N",ALPH(14)="O"
"RTN","PXRMUTIL",102,0)
 S ALPH(15)="P",ALPH(16)="Q",ALPH(17)="R",ALPH(18)="S",ALPH(19)="T"
"RTN","PXRMUTIL",103,0)
 S ALPH(20)="U",ALPH(21)="V",ALPH(22)="W",ALPH(23)="X",ALPH(24)="Y"
"RTN","PXRMUTIL",104,0)
 S ALPH(25)="Z"
"RTN","PXRMUTIL",105,0)
 ;
"RTN","PXRMUTIL",106,0)
 N ANUM,DIGIT,NUM,P26,PC,PWR
"RTN","PXRMUTIL",107,0)
 S ANUM="",NUM=NUMBER,PWR=0
"RTN","PXRMUTIL",108,0)
 S P26(PWR)=1
"RTN","PXRMUTIL",109,0)
 F PWR=1:1 S P26(PWR)=26*P26(PWR-1) I P26(PWR)>NUMBER Q
"RTN","PXRMUTIL",110,0)
 S PWR=PWR-1
"RTN","PXRMUTIL",111,0)
 F PC=PWR:-1:0 D
"RTN","PXRMUTIL",112,0)
 . S DIGIT=NUM\P26(PC)
"RTN","PXRMUTIL",113,0)
 . S ANUM=ANUM_ALPH(DIGIT)
"RTN","PXRMUTIL",114,0)
 . S NUM=NUM-(DIGIT*P26(PC))
"RTN","PXRMUTIL",115,0)
 Q ANUM
"RTN","PXRMUTIL",116,0)
 ;
"RTN","PXRMUTIL",117,0)
 ;=======================================================================
"RTN","PXRMUTIL",118,0)
POSTFIX(PFSTACK,EXPR,OPER) ;Given an expression, EXPR, in infix notation
"RTN","PXRMUTIL",119,0)
 ;convert it to postfix and return the result in PFSTACK. PFSTACK(0)
"RTN","PXRMUTIL",120,0)
 ;will contain the number of elements in PFSTACK. OPER is a
"RTN","PXRMUTIL",121,0)
 ;string containing allowable operators.
"RTN","PXRMUTIL",122,0)
 N CHAR,IND,LEN,OPERP,PFP,SP,SPACE,STACK,SYM,SYMP,SYMT,TAB,TEMP
"RTN","PXRMUTIL",123,0)
 S SPACE=$C(32)
"RTN","PXRMUTIL",124,0)
 S TAB=$C(9)
"RTN","PXRMUTIL",125,0)
 S TEMP=""
"RTN","PXRMUTIL",126,0)
 S OPERP=OPER_"()"
"RTN","PXRMUTIL",127,0)
 S SYMP=0
"RTN","PXRMUTIL",128,0)
 S LEN=$L(EXPR)
"RTN","PXRMUTIL",129,0)
 ;Break the expression into (, ), operators, and operands.
"RTN","PXRMUTIL",130,0)
 ;Remove spaces and tabs and put the symbols onto the symbol
"RTN","PXRMUTIL",131,0)
 ;stack in left to right order. Symbol number 1 is SYM(1).
"RTN","PXRMUTIL",132,0)
 F IND=1:1:LEN D
"RTN","PXRMUTIL",133,0)
 . S CHAR=$E(EXPR,IND)
"RTN","PXRMUTIL",134,0)
 . I (CHAR=SPACE)!(CHAR=TAB) Q
"RTN","PXRMUTIL",135,0)
 . I OPERP[CHAR D
"RTN","PXRMUTIL",136,0)
 .. I $L(TEMP)>0 D
"RTN","PXRMUTIL",137,0)
 ... S SYMP=SYMP+1
"RTN","PXRMUTIL",138,0)
 ... S SYM(SYMP)=TEMP
"RTN","PXRMUTIL",139,0)
 ... S TEMP=""
"RTN","PXRMUTIL",140,0)
 .. S SYMP=SYMP+1
"RTN","PXRMUTIL",141,0)
 .. S SYM(SYMP)=CHAR
"RTN","PXRMUTIL",142,0)
 . E  S TEMP=TEMP_CHAR
"RTN","PXRMUTIL",143,0)
 . I (IND=LEN)&(TEMP'="") D
"RTN","PXRMUTIL",144,0)
 .. S SYMP=SYMP+1
"RTN","PXRMUTIL",145,0)
 .. S SYM(SYMP)=TEMP
"RTN","PXRMUTIL",146,0)
 ;Process the symbols.
"RTN","PXRMUTIL",147,0)
 S (PFP,SP)=0
"RTN","PXRMUTIL",148,0)
 S LEN=SYMP
"RTN","PXRMUTIL",149,0)
 F SYMP=1:1:LEN D
"RTN","PXRMUTIL",150,0)
 . S SYMT=SYM(SYMP)
"RTN","PXRMUTIL",151,0)
 .;
"RTN","PXRMUTIL",152,0)
 .;Symbol is "("
"RTN","PXRMUTIL",153,0)
 . I SYMT="(" D  Q
"RTN","PXRMUTIL",154,0)
 .. S SP=SP+1
"RTN","PXRMUTIL",155,0)
 .. S STACK(SP)=SYMT
"RTN","PXRMUTIL",156,0)
 .;
"RTN","PXRMUTIL",157,0)
 .;Symbol is an operator
"RTN","PXRMUTIL",158,0)
 . I OPER[SYMT D  Q
"RTN","PXRMUTIL",159,0)
 .. S LEN=SP
"RTN","PXRMUTIL",160,0)
 .. F IND=LEN:-1:1 S TEMP=STACK(IND) Q:TEMP="("  D
"RTN","PXRMUTIL",161,0)
 ...;M has no operator precedence so we don't need to check.
"RTN","PXRMUTIL",162,0)
 ... S PFP=PFP+1
"RTN","PXRMUTIL",163,0)
 ... S PFSTACK(PFP)=TEMP
"RTN","PXRMUTIL",164,0)
 ... K STACK(SP)
"RTN","PXRMUTIL",165,0)
 ... S SP=SP-1
"RTN","PXRMUTIL",166,0)
 .. S SP=SP+1
"RTN","PXRMUTIL",167,0)
 .. S STACK(SP)=SYMT
"RTN","PXRMUTIL",168,0)
 .;
"RTN","PXRMUTIL",169,0)
 .;Symbol is ")"
"RTN","PXRMUTIL",170,0)
 . I SYMT=")" D  Q
"RTN","PXRMUTIL",171,0)
 .. S LEN=SP
"RTN","PXRMUTIL",172,0)
 .. F IND=LEN:-1:1 S TEMP=STACK(IND) Q:TEMP="("  D
"RTN","PXRMUTIL",173,0)
 ... S PFP=PFP+1
"RTN","PXRMUTIL",174,0)
 ... S PFSTACK(PFP)=TEMP
"RTN","PXRMUTIL",175,0)
 ... K STACK(SP)
"RTN","PXRMUTIL",176,0)
 ... S SP=SP-1
"RTN","PXRMUTIL",177,0)
 ..;Pop the "(" at the top of the stack.
"RTN","PXRMUTIL",178,0)
 .. K STACK(SP)
"RTN","PXRMUTIL",179,0)
 .. S SP=SP-1
"RTN","PXRMUTIL",180,0)
 .;
"RTN","PXRMUTIL",181,0)
 .;If we get to here then symbol is an operand.
"RTN","PXRMUTIL",182,0)
 . S PFP=PFP+1
"RTN","PXRMUTIL",183,0)
 . S PFSTACK(PFP)=SYMT
"RTN","PXRMUTIL",184,0)
 ;
"RTN","PXRMUTIL",185,0)
 ;Pop and output anything left on the stack.
"RTN","PXRMUTIL",186,0)
 F IND=SP:-1:1 D
"RTN","PXRMUTIL",187,0)
 . S PFP=PFP+1
"RTN","PXRMUTIL",188,0)
 . S PFSTACK(PFP)=STACK(IND)
"RTN","PXRMUTIL",189,0)
 ;
"RTN","PXRMUTIL",190,0)
 ;Save the number of elements in PFSTACK.
"RTN","PXRMUTIL",191,0)
 S PFSTACK(0)=PFP
"RTN","PXRMUTIL",192,0)
 Q
"RTN","PXRMUTIL",193,0)
 ;
"RTN","PXRMUTIL",194,0)
 ;=======================================================================
"RTN","PXRMUTIL",195,0)
SEHIST(FILENUM,ROOT,IEN) ;Set the edit date and edit by and prompt the
"RTN","PXRMUTIL",196,0)
 ;user for the edit comment.
"RTN","PXRMUTIL",197,0)
 N DIC,DIR,DWLW,DWPK,ENTRY,FDA,FDAIEN,IENS,IND,MSG,SFN,TARGET,X,Y
"RTN","PXRMUTIL",198,0)
 K ^TMP("PXRMWP",$J)
"RTN","PXRMUTIL",199,0)
 D FIELD^DID(FILENUM,"EDIT HISTORY","","SPECIFIER","TARGET")
"RTN","PXRMUTIL",200,0)
 S SFN=+$G(TARGET("SPECIFIER"))
"RTN","PXRMUTIL",201,0)
 I SFN=0 Q
"RTN","PXRMUTIL",202,0)
 S ENTRY=ROOT_IEN_",110)"
"RTN","PXRMUTIL",203,0)
 S IND=$O(@ENTRY@("B"),-1)
"RTN","PXRMUTIL",204,0)
 S IND=IND+1
"RTN","PXRMUTIL",205,0)
 S IENS="+"_IND_","_IEN_","
"RTN","PXRMUTIL",206,0)
 S FDAIEN(IEN)=IEN
"RTN","PXRMUTIL",207,0)
 S FDA(SFN,IENS,.01)=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMUTIL",208,0)
 S FDA(SFN,IENS,1)=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMUTIL",209,0)
 ;Prompt the user for edit comments.
"RTN","PXRMUTIL",210,0)
 S DIC="^TMP(""PXRMWP"",$J,"
"RTN","PXRMUTIL",211,0)
 S DWLW=72
"RTN","PXRMUTIL",212,0)
 S DWPK=1
"RTN","PXRMUTIL",213,0)
 W !,"Input your edit comments."
"RTN","PXRMUTIL",214,0)
 S DIR(0)="Y"_U_"AO"
"RTN","PXRMUTIL",215,0)
 S DIR("A")="Edit"
"RTN","PXRMUTIL",216,0)
 S DIR("B")="NO"
"RTN","PXRMUTIL",217,0)
 D ^DIR
"RTN","PXRMUTIL",218,0)
 I Y D
"RTN","PXRMUTIL",219,0)
 . D EN^DIWE
"RTN","PXRMUTIL",220,0)
 . K ^TMP("PXRMWP",$J,0)
"RTN","PXRMUTIL",221,0)
 . I $D(^TMP("PXRMWP",$J)) S FDA(SFN,IENS,2)="^TMP(""PXRMWP"",$J)"
"RTN","PXRMUTIL",222,0)
 D UPDATE^DIE("E","FDA","FDAIEN","MSG")
"RTN","PXRMUTIL",223,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMUTIL",224,0)
 K ^TMP("PXRMWP",$J)
"RTN","PXRMUTIL",225,0)
 Q
"RTN","PXRMUTIL",226,0)
 ;
"RTN","PXRMUTIL",227,0)
 ;=======================================================================
"RTN","PXRMUTIL",228,0)
SORT(N,ARRAY,KEY) ;Sort an ARRAY with N elements into ascending order,
"RTN","PXRMUTIL",229,0)
 ;return the number of unique elements. KEY is the piece of ARRAY on
"RTN","PXRMUTIL",230,0)
 ;which to base the sort. The default is the first piece.
"RTN","PXRMUTIL",231,0)
 ;
"RTN","PXRMUTIL",232,0)
 I (N'>0)!(N=1) Q N
"RTN","PXRMUTIL",233,0)
 N IC,IND,TEMP
"RTN","PXRMUTIL",234,0)
 I '$D(KEY) S KEY=1
"RTN","PXRMUTIL",235,0)
 F IC=1:1:N D
"RTN","PXRMUTIL",236,0)
 . S TEMP=@ARRAY@(IC)
"RTN","PXRMUTIL",237,0)
 . S ^TMP($J,"SORT",$P(TEMP,U,KEY))=TEMP
"RTN","PXRMUTIL",238,0)
 S IND=""
"RTN","PXRMUTIL",239,0)
 F IC=1:1 S IND=$O(^TMP($J,"SORT",IND)) Q:IND=""  D
"RTN","PXRMUTIL",240,0)
 . S @ARRAY@(IC)=^TMP($J,"SORT",IND)
"RTN","PXRMUTIL",241,0)
 K ^TMP($J,"SORT")
"RTN","PXRMUTIL",242,0)
 ;Get rid of any redundant elements.
"RTN","PXRMUTIL",243,0)
 F IND=IC:1:N K @ARRAY@(IND)
"RTN","PXRMUTIL",244,0)
 Q IC-1
"RTN","PXRMUTIL",245,0)
 ;
"RTN","PXRMUTIL",246,0)
 ;=======================================================================
"RTN","PXRMUTIL",247,0)
STRREP(STRING,TS,RS) ;Replace every occurence of the target string (TS)
"RTN","PXRMUTIL",248,0)
 ;in STRING with the replacement string (RS).
"RTN","PXRMUTIL",249,0)
 ;Example 9.19 (page 220) in "The Complete Mumps" by John Lewkowicz:
"RTN","PXRMUTIL",250,0)
 ;  F  Q:STRING'[TS  S STRING=$P(STRING,TS)_RS_$P(STRING,TS,2,999)
"RTN","PXRMUTIL",251,0)
 ;fails if any portion of the target string is contained in the with
"RTN","PXRMUTIL",252,0)
 ;string. Therefore a more elaborate version is required.
"RTN","PXRMUTIL",253,0)
 ;
"RTN","PXRMUTIL",254,0)
 N IND,NPCS,STR
"RTN","PXRMUTIL",255,0)
 I STRING'[TS Q STRING
"RTN","PXRMUTIL",256,0)
 ;Count the number of pieces using the target string as the delimiter.
"RTN","PXRMUTIL",257,0)
 S NPCS=$L(STRING,TS)
"RTN","PXRMUTIL",258,0)
 ;Extract the pieces and concatenate RS
"RTN","PXRMUTIL",259,0)
 S STR=""
"RTN","PXRMUTIL",260,0)
 F IND=1:1:NPCS-1 S STR=STR_$P(STRING,TS,IND)_RS
"RTN","PXRMUTIL",261,0)
 S STR=STR_$P(STRING,TS,NPCS)
"RTN","PXRMUTIL",262,0)
 Q STR
"RTN","PXRMUTIL",263,0)
 ;
"RTN","PXRMUTIL",264,0)
 ;=======================================================================
"RTN","PXRMUTIL",265,0)
VEDIT(ROOT,IEN) ;This is used as a DIC("S") screen to select which entries
"RTN","PXRMUTIL",266,0)
 ;a user can edit.
"RTN","PXRMUTIL",267,0)
 N CLASS,ENTRY,VALID
"RTN","PXRMUTIL",268,0)
 S ENTRY=ROOT_IEN_")"
"RTN","PXRMUTIL",269,0)
 S CLASS=$P($G(@ENTRY@(100)),U,1)
"RTN","PXRMUTIL",270,0)
 I CLASS="N" D
"RTN","PXRMUTIL",271,0)
 . I ($G(PXRMINST)=1),(DUZ(0)="@") S VALID=1
"RTN","PXRMUTIL",272,0)
 . E  S VALID=0
"RTN","PXRMUTIL",273,0)
 E  S VALID=1
"RTN","PXRMUTIL",274,0)
 Q VALID
"RTN","PXRMUTIL",275,0)
 ;
"SEC","^DIC",801.41,801.41,0,"AUDIT")
@
"SEC","^DIC",801.41,801.41,0,"DD")
@
"SEC","^DIC",801.41,801.41,0,"DEL")
@
"SEC","^DIC",801.41,801.41,0,"LAYGO")
@
"SEC","^DIC",801.41,801.41,0,"RD")

"SEC","^DIC",801.41,801.41,0,"WR")
@
"SEC","^DIC",811.2,811.2,0,"AUDIT")
@
"SEC","^DIC",811.2,811.2,0,"DD")
@
"SEC","^DIC",811.2,811.2,0,"DEL")
@
"SEC","^DIC",811.2,811.2,0,"LAYGO")
@
"SEC","^DIC",811.2,811.2,0,"RD")

"SEC","^DIC",811.2,811.2,0,"WR")
@
"SEC","^DIC",811.4,811.4,0,"AUDIT")
@
"SEC","^DIC",811.4,811.4,0,"DD")
@
"SEC","^DIC",811.4,811.4,0,"DEL")
@
"SEC","^DIC",811.4,811.4,0,"LAYGO")
@
"SEC","^DIC",811.4,811.4,0,"RD")

"SEC","^DIC",811.4,811.4,0,"WR")
@
"SEC","^DIC",811.5,811.5,0,"AUDIT")
@
"SEC","^DIC",811.5,811.5,0,"DD")
@
"SEC","^DIC",811.5,811.5,0,"DEL")
@
"SEC","^DIC",811.5,811.5,0,"LAYGO")
@
"SEC","^DIC",811.5,811.5,0,"RD")

"SEC","^DIC",811.5,811.5,0,"WR")
@
"SEC","^DIC",811.6,811.6,0,"AUDIT")
@
"SEC","^DIC",811.6,811.6,0,"DD")
@
"SEC","^DIC",811.6,811.6,0,"DEL")
@
"SEC","^DIC",811.6,811.6,0,"LAYGO")
@
"SEC","^DIC",811.6,811.6,0,"RD")

"SEC","^DIC",811.6,811.6,0,"WR")
@
"SEC","^DIC",811.8,811.8,0,"AUDIT")
@
"SEC","^DIC",811.8,811.8,0,"DD")
@
"SEC","^DIC",811.8,811.8,0,"DEL")
@
"SEC","^DIC",811.8,811.8,0,"LAYGO")
@
"SEC","^DIC",811.8,811.8,0,"RD")

"SEC","^DIC",811.8,811.8,0,"WR")
@
"SEC","^DIC",811.9,811.9,0,"AUDIT")
@
"SEC","^DIC",811.9,811.9,0,"DD")
@
"SEC","^DIC",811.9,811.9,0,"DEL")
@
"SEC","^DIC",811.9,811.9,0,"LAYGO")
@
"SEC","^DIC",811.9,811.9,0,"RD")

"SEC","^DIC",811.9,811.9,0,"WR")
@
"VER")
8.0^22.0
"^DD",801.41,801.41,0)
FIELD^^110^33
"^DD",801.41,801.41,0,"DDA")
N
"^DD",801.41,801.41,0,"DT")
3010518
"^DD",801.41,801.41,0,"ID",4)
W "   ",@("$P($P($C(59)_$S($D(^DD(801.41,4,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,4)_"":"",2),$C(59),1)")
"^DD",801.41,801.41,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(801.41,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",801.41,801.41,0,"IX","AD",801.412,2)

"^DD",801.41,801.41,0,"IX","AG",801.41,2)

"^DD",801.41,801.41,0,"NM","REMINDER DIALOG")

"^DD",801.41,801.41,0,"PT",801.41,55)

"^DD",801.41,801.41,0,"PT",801.412,2)

"^DD",801.41,801.41,0,"PT",801.422,.01)

"^DD",801.41,801.41,0,"PT",801.43,.04)

"^DD",801.41,801.41,0,"PT",801.4515,.01)

"^DD",801.41,801.41,0,"PT",811.9,51)

"^DD",801.41,801.41,0,"PT",8927,.15)

"^DD",801.41,801.41,0,"VRPK")
PXRM
"^DD",801.41,801.41,.01,0)
NAME^RFX^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>63!($L(X)<3)!'$$VNAME^PXRMINTR(X,801.41)!'(X'?1P.E) X
"^DD",801.41,801.41,.01,.1)

"^DD",801.41,801.41,.01,1,0)
^.1^^0
"^DD",801.41,801.41,.01,3)
Enter up to a 63 character name to represent this dialog entry.
"^DD",801.41,801.41,.01,21,0)
^.001^19^19^3010302^^^^
"^DD",801.41,801.41,.01,21,1,0)
This is the name of the dialog entry. Reminder dialog entries will
"^DD",801.41,801.41,.01,21,2,0)
default to the name of the reminder for ease in identifying the
"^DD",801.41,801.41,.01,21,3,0)
reminder dialog entry. Dialog elements that are auto-generated use the
"^DD",801.41,801.41,.01,21,4,0)
following naming convention:  Finding type prefix_ _Name from finding
"^DD",801.41,801.41,.01,21,5,0)
file_ _Resolution Status. An example of two dialog element entry names
"^DD",801.41,801.41,.01,21,6,0)
generated from an Exam file entry for DIABETIC EYE EXAM follow.
"^DD",801.41,801.41,.01,21,7,0)
    EX DIABETIC EYE EXAM DONE
"^DD",801.41,801.41,.01,21,8,0)
    EX DIABETIC EYE EXAM DONE ELSEWHERE
"^DD",801.41,801.41,.01,21,9,0)
 
"^DD",801.41,801.41,.01,21,10,0)
Your site may want to create special namespacing for dialog entries
"^DD",801.41,801.41,.01,21,11,0)
that you create locally.
"^DD",801.41,801.41,.01,21,12,0)
 
"^DD",801.41,801.41,.01,21,13,0)
Entries prefixed with PXRM are prompts, result groups, and result
"^DD",801.41,801.41,.01,21,14,0)
elements that were distributed with the Clinical Reminders package. 
"^DD",801.41,801.41,.01,21,15,0)
The PXRM prefixed prompts are the additional prompts that can be asked
"^DD",801.41,801.41,.01,21,16,0)
for particular types of PCE findings. For example: PXRM COMMENT can be
"^DD",801.41,801.41,.01,21,17,0)
added to any PCE file to allow the user to enter an additional COMMENT
"^DD",801.41,801.41,.01,21,18,0)
beyond the dialog elements progress note text, and the PXRM LEVEL OF
"^DD",801.41,801.41,.01,21,19,0)
UNDERSTANDING can only be used with PCE Education Topic findings.
"^DD",801.41,801.41,.01,"DEL",1,0)
I +$G(PXRMEXCH)=0,$D(^PXRMD(801.41,"AD",DA)) W !,*7,"IN USE - CANNOT BE DELETED"
"^DD",801.41,801.41,.01,"DT")
3010503
"^DD",801.41,801.41,2,0)
SOURCE REMINDER^P811.9'^PXD(811.9,^0;2^Q
"^DD",801.41,801.41,2,1,0)
^.1
"^DD",801.41,801.41,2,1,1,0)
801.41^AG
"^DD",801.41,801.41,2,1,1,1)
S ^PXRMD(801.41,"AG",$E(X,1,30),DA)=""
"^DD",801.41,801.41,2,1,1,2)
K ^PXRMD(801.41,"AG",$E(X,1,30),DA)
"^DD",801.41,801.41,2,1,1,"%D",0)
^^1^1^2991217^
"^DD",801.41,801.41,2,1,1,"%D",1,0)
Index of dialogs by source reminder.
"^DD",801.41,801.41,2,1,1,"DT")
2991217
"^DD",801.41,801.41,2,3)
Enter the associated reminder for this reminder dialog.
"^DD",801.41,801.41,2,21,0)
^.001^3^3^3010302^^
"^DD",801.41,801.41,2,21,1,0)
This identifies which reminder definition is associated with this
"^DD",801.41,801.41,2,21,2,0)
"Reminder Dialog" entry.  "Reminder Dialog" type entries are the only
"^DD",801.41,801.41,2,21,3,0)
entries that require this field.
"^DD",801.41,801.41,2,"DT")
2991217
"^DD",801.41,801.41,3,0)
DISABLE^F^^0;3^K:$L(X)>40!($L(X)<1) X
"^DD",801.41,801.41,3,3)
Enter a message here to disable this dialog, 1-40 characters in length.
"^DD",801.41,801.41,3,21,0)
^.001^3^3^3010302^^^^
"^DD",801.41,801.41,3,21,1,0)
This field disables use of this dialog when it contains text. The text
"^DD",801.41,801.41,3,21,2,0)
should be a short message explaining why use of this dialog has been
"^DD",801.41,801.41,3,21,3,0)
disabled, as it will be displayed if this dialog is selected.
"^DD",801.41,801.41,3,"DT")
2950112
"^DD",801.41,801.41,4,0)
TYPE^RS^P:prompt;E:dialog element;R:reminder dialog;F:forced value;G:dialog group;S:result group;T:result element;^0;4^Q
"^DD",801.41,801.41,4,3)
Specify a type for this entry.
"^DD",801.41,801.41,4,21,0)
^.001^80^80^3010419^^^
"^DD",801.41,801.41,4,21,1,0)
This field defines what type of dialog component this entry is. The
"^DD",801.41,801.41,4,21,2,0)
type determines the processing that can occur with this entry. 
"^DD",801.41,801.41,4,21,3,0)
 
"^DD",801.41,801.41,4,21,4,0)
Reminder dialogs are the dialog entries that can be mapped to a
"^DD",801.41,801.41,4,21,5,0)
reminder definition. Reminder dialogs will typically contain several
"^DD",801.41,801.41,4,21,6,0)
dialog elements and/or dialog groups. 
"^DD",801.41,801.41,4,21,7,0)
 
"^DD",801.41,801.41,4,21,8,0)
Dialog elements that are auto-generated represent a finding item and
"^DD",801.41,801.41,4,21,9,0)
resolution status combination, based on the Finding Type Parameters for
"^DD",801.41,801.41,4,21,10,0)
auto-generation. The dialog elements can be defined manually if
"^DD",801.41,801.41,4,21,11,0)
needed. Dialog elements must have the FINDING ITEM field defined in
"^DD",801.41,801.41,4,21,12,0)
order to cause the finding to be updated automatically. When no
"^DD",801.41,801.41,4,21,13,0)
finding item is defined, the dialog element is treated as a header or
"^DD",801.41,801.41,4,21,14,0)
instruction text in the CPRS GUI. Sites can also add Additional Finding
"^DD",801.41,801.41,4,21,15,0)
items to automatically update when a dialog element is checked off. An
"^DD",801.41,801.41,4,21,16,0)
example of using the additional finding would be for a dialog element
"^DD",801.41,801.41,4,21,17,0)
for a diagnosis, that must always be recorded with a second diagnosis.
"^DD",801.41,801.41,4,21,18,0)
Another example is when an Exam or Education Topic dialog element
"^DD",801.41,801.41,4,21,19,0)
checked off should automatically add an additional ICD9 and/or CPT
"^DD",801.41,801.41,4,21,20,0)
finding to PCE.
"^DD",801.41,801.41,4,21,21,0)
 
"^DD",801.41,801.41,4,21,22,0)
Dialog elements will use the DIALOG/PROGRESS NOTE TEXT to display in
"^DD",801.41,801.41,4,21,23,0)
the CPRS GUI window. This text will also be added to the progress note,
"^DD",801.41,801.41,4,21,24,0)
unless the optional ALTERNATE PROGRESS NOTE TEXT field is defined. If
"^DD",801.41,801.41,4,21,25,0)
the dialog text to display to the user needs to be different from the
"^DD",801.41,801.41,4,21,26,0)
text to add to the progress note, use the ALTERNATE PROGRESS NOTE TEXT
"^DD",801.41,801.41,4,21,27,0)
field to define the progress note text.
"^DD",801.41,801.41,4,21,28,0)
 
"^DD",801.41,801.41,4,21,29,0)
Dialog Groups can be used to group dialog elements together. Groups
"^DD",801.41,801.41,4,21,30,0)
can be displayed with a box around them and have selection rules
"^DD",801.41,801.41,4,21,31,0)
applied to them (e.g., select one, one or more)  A dialog element can
"^DD",801.41,801.41,4,21,32,0)
be changed to a dialog group by changing its TYPE.
"^DD",801.41,801.41,4,21,33,0)
Prompts are distributed in the PXRM namespace to represent additional
"^DD",801.41,801.41,4,21,34,0)
fields that the user can enter when an element is checked off. Prompts
"^DD",801.41,801.41,4,21,35,0)
are added to dialog elements during auto-generation based on the
"^DD",801.41,801.41,4,21,36,0)
finding type parameters. The PXRM COMMENT field is a generic comment
"^DD",801.41,801.41,4,21,37,0)
field that can be used on all PCE related finding items. Dialog
"^DD",801.41,801.41,4,21,38,0)
elements for "DONE ELSEWHERE" need to require the historical visit date
"^DD",801.41,801.41,4,21,39,0)
prompt. The forced value is similar to a prompt, accept it represents
"^DD",801.41,801.41,4,21,40,0)
a stuffed prompt which doesn't need to be presented to answer. The PXRM
"^DD",801.41,801.41,4,21,41,0)
prompts can be copied for local modification to create additional
"^DD",801.41,801.41,4,21,42,0)
forced value entries if necessary.
"^DD",801.41,801.41,4,21,43,0)
 
"^DD",801.41,801.41,4,21,44,0)
Prompts created locally (not copies of PXRM prompts) are treated as
"^DD",801.41,801.41,4,21,45,0)
display text with checkboxes which when checked off add text to a
"^DD",801.41,801.41,4,21,46,0)
comment field which is added to the progress note text. Refer to these
"^DD",801.41,801.41,4,21,47,0)
as Local Comment Prompts.
"^DD",801.41,801.41,4,21,48,0)
 
"^DD",801.41,801.41,4,21,49,0)
Result Groups and Result Elements are distributed in the PXRM namespace
"^DD",801.41,801.41,4,21,50,0)
and are associated with Mental Health Instrument finding items during
"^DD",801.41,801.41,4,21,51,0)
auto-generation of a reminder dialog. When the mental health instrument
"^DD",801.41,801.41,4,21,52,0)
finding item dialog element is selected by the CPRS GUI user, a window
"^DD",801.41,801.41,4,21,53,0)
will be opened which contains the tests questions and probable answers.
"^DD",801.41,801.41,4,21,54,0)
The selected answers are sent to the mental health package when the
"^DD",801.41,801.41,4,21,55,0)
user selects OK. The mental health package returns the score and
"^DD",801.41,801.41,4,21,56,0)
results which can be used within sentences. These sentences are defined
"^DD",801.41,801.41,4,21,57,0)
as Result Elements, and can vary depending on the test score. If
"^DD",801.41,801.41,4,21,58,0)
multiple sentences are possible depending on the score, the result
"^DD",801.41,801.41,4,21,59,0)
elements should be defined in a result group. The result group should
"^DD",801.41,801.41,4,21,60,0)
be added to the mental health tests dialog elements RESULT
"^DD",801.41,801.41,4,21,61,0)
GROUP/ELEMENT field. Mental Health tests for use by Mental Health
"^DD",801.41,801.41,4,21,62,0)
clinicians only, are not available for CPRS reminder resolution.
"^DD",801.41,801.41,4,21,63,0)
 
"^DD",801.41,801.41,4,21,64,0)
A reminder dialog can be made into a dialog group and added to another
"^DD",801.41,801.41,4,21,65,0)
reminders dialog. This allows multiple reminders to be addressed by
"^DD",801.41,801.41,4,21,66,0)
one reminder dialog.
"^DD",801.41,801.41,4,21,67,0)
 
"^DD",801.41,801.41,4,21,68,0)
Reminder Dialogs can include dialog elements that don't have anything
"^DD",801.41,801.41,4,21,69,0)
to do with the findings defined in the reminder.
"^DD",801.41,801.41,4,21,70,0)
 
"^DD",801.41,801.41,4,21,71,0)
Taxonomy dialogs are auto-generated based on the Taxonomy Dialog
"^DD",801.41,801.41,4,21,72,0)
Parameters. The taxonomy dialog can be used as a black box that allows
"^DD",801.41,801.41,4,21,73,0)
the users to enter current or historical encounter diagnosis or
"^DD",801.41,801.41,4,21,74,0)
procedures based on the selectable list of diagnoses parameters. 
"^DD",801.41,801.41,4,21,75,0)
Alternatively, a taxonomy can have individual dialog elements created
"^DD",801.41,801.41,4,21,76,0)
for each coded value in the selectable list of diagnosis and
"^DD",801.41,801.41,4,21,77,0)
procedures. It may be more useful for sites to create dialog elements
"^DD",801.41,801.41,4,21,78,0)
for the common diagnosis and procedures they actively use and add them
"^DD",801.41,801.41,4,21,79,0)
to groups, similar to the encounter form section and coded value
"^DD",801.41,801.41,4,21,80,0)
groupings.
"^DD",801.41,801.41,4,"DT")
3000223
"^DD",801.41,801.41,5,0)
CAPTION^F^^0;5^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.41,5,3)
Enter a caption to use for this component.
"^DD",801.41,801.41,5,21,0)
^.001^7^7^3010302^^
"^DD",801.41,801.41,5,21,1,0)
The caption is used for prompt, dialog group, and reminder components.
"^DD",801.41,801.41,5,21,2,0)
When a prompt has a caption defined, this is the text that should be
"^DD",801.41,801.41,5,21,3,0)
used whenever the prompt is asked (e.g., Comment:). A dialog group can
"^DD",801.41,801.41,5,21,4,0)
use the caption field to specify a header to use on a box around the
"^DD",801.41,801.41,5,21,5,0)
group of dialog elements. The reminder dialog component can use the
"^DD",801.41,801.41,5,21,6,0)
caption to specify a header to use on a box around the the dialog
"^DD",801.41,801.41,5,21,7,0)
elements for a reminder.
"^DD",801.41,801.41,5,"DT")
2990923
"^DD",801.41,801.41,6,0)
BOX^S^Y:YES;N:NO;^0;6^Q
"^DD",801.41,801.41,6,3)
Enter Y to add a box around the components.
"^DD",801.41,801.41,6,21,0)
^.001^3^3^3010302^^
"^DD",801.41,801.41,6,21,1,0)
This flag will be used to determine whether the components will be
"^DD",801.41,801.41,6,21,2,0)
presented to the user in a box. If the caption field is defined, it
"^DD",801.41,801.41,6,21,3,0)
will appear as header text within in the top line of the box.
"^DD",801.41,801.41,6,"DT")
2990923
"^DD",801.41,801.41,7,0)
NUMBER OF INDENTS^NJ1,0^^0;7^K:+X'=X!(X>4)!(X<0)!(X?.E1"."1N.N) X
"^DD",801.41,801.41,7,3)
Enter the number of indents required (between 0 and 4).
"^DD",801.41,801.41,7,21,0)
^.001^2^2^3010302^^^
"^DD",801.41,801.41,7,21,1,0)
This is the number of indents that should be made before presenting the
"^DD",801.41,801.41,7,21,2,0)
group's components/elements. Indent is used only for dialog groups.
"^DD",801.41,801.41,7,"DT")
2990923
"^DD",801.41,801.41,8,0)
SHARE COMMON PROMPTS^S^1:YES;0:NO;^0;8^Q
"^DD",801.41,801.41,8,3)
Enter No if the common prompts must be prompted for each dialog element separately.
"^DD",801.41,801.41,8,21,0)
^.001^3^3^3010302^^^
"^DD",801.41,801.41,8,21,1,0)
This field is used only for a dialog group where different dialog
"^DD",801.41,801.41,8,21,2,0)
elements have common prompts. Prompts will be shared for all dialog
"^DD",801.41,801.41,8,21,3,0)
elements unless otherwise selected.
"^DD",801.41,801.41,8,"DT")
2991124
"^DD",801.41,801.41,9,0)
GROUP ENTRY^S^1:ONE SELECTION ONLY;2:ONE OR MORE SELECTIONS;3:NONE OR ONE SELECTION;0:NO SELECTION REQUIRED;^0;9^Q
"^DD",801.41,801.41,9,3)
Enter 1 for one selection only. Enter 2 for one or more. Enter 3 for none or one selection. Enter 0 for no selection required.
"^DD",801.41,801.41,9,21,0)
^.001^6^6^3001107^^
"^DD",801.41,801.41,9,21,1,0)
Used for dialog groups only.
"^DD",801.41,801.41,9,21,2,0)
 
"^DD",801.41,801.41,9,21,3,0)
1 indicates that only one element in the dialog group may be selected.
"^DD",801.41,801.41,9,21,4,0)
2 indicates that one or more elements must be selected.
"^DD",801.41,801.41,9,21,5,0)
3 indicates that either none or one selection is required.
"^DD",801.41,801.41,9,21,6,0)
0 or null indicates no selection required.
"^DD",801.41,801.41,9,"DT")
3001107
"^DD",801.41,801.41,10,0)
COMPONENTS^801.412IA^^10;0
"^DD",801.41,801.41,10,21,0)
^.001^7^7^3010607^^^^
"^DD",801.41,801.41,10,21,1,0)
This field contains the components that are used to process a
"^DD",801.41,801.41,10,21,2,0)
reminder.  Generally the components relate to the TYPE of entry in the
"^DD",801.41,801.41,10,21,3,0)
Reminder Dialog File:
"^DD",801.41,801.41,10,21,4,0)
 
"^DD",801.41,801.41,10,21,5,0)
     Reminder dialogs have dialog group or dialog element components.
"^DD",801.41,801.41,10,21,6,0)
     Dialog groups have a combination of dialog element components.
"^DD",801.41,801.41,10,21,7,0)
     Dialog elements have prompt and forced value components.
"^DD",801.41,801.41,10,"DT")
2990923
"^DD",801.41,801.41,13,0)
RESOLUTION TYPE^P801.9'^PXRMD(801.9,^1;3^Q
"^DD",801.41,801.41,13,3)
Enter the resolution status to use when this item is selected.
"^DD",801.41,801.41,13,21,0)
^^2^2^2990628^
"^DD",801.41,801.41,13,21,1,0)
This field contains what type of resolution is represented by this
"^DD",801.41,801.41,13,21,2,0)
dialog entry.
"^DD",801.41,801.41,13,"DT")
2990628
"^DD",801.41,801.41,14,0)
FINDING TYPE^P801.45'^PXRMD(801.45,^1;4^Q
"^DD",801.41,801.41,14,3)
Enter finding type if the additional prompt is intended for use with only one type of finding item.
"^DD",801.41,801.41,14,21,0)
^.001^16^16^3010302^^^^
"^DD",801.41,801.41,14,21,1,0)
If an additional prompt is restricted to use with only one type of
"^DD",801.41,801.41,14,21,2,0)
finding item this field contains the mnemonic of the finding type. The
"^DD",801.41,801.41,14,21,3,0)
mnemonics allowed are:
"^DD",801.41,801.41,14,21,4,0)
 
"^DD",801.41,801.41,14,21,5,0)
   CPT  Procedure      
"^DD",801.41,801.41,14,21,6,0)
   ED   Education Topic
"^DD",801.41,801.41,14,21,7,0)
   EX   Exam
"^DD",801.41,801.41,14,21,8,0)
   HF   Health Factor
"^DD",801.41,801.41,14,21,9,0)
   IM   Immunization
"^DD",801.41,801.41,14,21,10,0)
   OI   Orderable Item
"^DD",801.41,801.41,14,21,11,0)
   POV  Diagnosis (ICD9) 
"^DD",801.41,801.41,14,21,12,0)
   ST   Skin Test
"^DD",801.41,801.41,14,21,13,0)
   VM   Vital Measurement
"^DD",801.41,801.41,14,21,14,0)
 
"^DD",801.41,801.41,14,21,15,0)
(e.g. PXRM Contraindicated is restricted to IMMUNIZATION, 
"^DD",801.41,801.41,14,21,16,0)
finding type IM)
"^DD",801.41,801.41,14,"DT")
2990629
"^DD",801.41,801.41,15,0)
FINDING ITEM^V^^1;5^Q
"^DD",801.41,801.41,15,3)
Enter the finding item for this dialog element.
"^DD",801.41,801.41,15,21,0)
^.001^3^3^3010302^^
"^DD",801.41,801.41,15,21,1,0)
This is the finding item that should be created if the dialog
"^DD",801.41,801.41,15,21,2,0)
element/group is checked in CPRS. Additional findings may be entered
"^DD",801.41,801.41,15,21,3,0)
into the additional findings field.
"^DD",801.41,801.41,15,"DT")
3000503
"^DD",801.41,801.41,15,"V",0)
^.12P^11^11
"^DD",801.41,801.41,15,"V",1,0)
9999999.09^EDUCATION TOPICS^5^ED^n^n
"^DD",801.41,801.41,15,"V",2,0)
9999999.14^IMMUNIZATION^10^IM^n^n
"^DD",801.41,801.41,15,"V",3,0)
9999999.28^SKIN TEST^15^ST^n^n
"^DD",801.41,801.41,15,"V",4,0)
9999999.15^EXAM^20^EX^n^n
"^DD",801.41,801.41,15,"V",5,0)
9999999.64^HEALTH FACTOR^25^HF^y^n
"^DD",801.41,801.41,15,"V",5,1)
S DIC("S")="I $P(^(0),U,10)'=""C"""
"^DD",801.41,801.41,15,"V",5,2)
IGNORE CATEGORIES
"^DD",801.41,801.41,15,"V",6,0)
81^PROCEDURE^30^CPT^n^n
"^DD",801.41,801.41,15,"V",7,0)
80^ICD9 DIAGNOSIS^35^ICD9^n^n
"^DD",801.41,801.41,15,"V",8,0)
120.51^VITAL TYPE^40^VM^^n
"^DD",801.41,801.41,15,"V",9,0)
811.2^TAXONOMY^45^TX^^n
"^DD",801.41,801.41,15,"V",10,0)
101.41^ORDER DIALOG^50^Q^^n
"^DD",801.41,801.41,15,"V",11,0)
601^MENTAL HEALTH^55^MH^n^n
"^DD",801.41,801.41,17,0)
ORDERABLE ITEM^P101.43'^ORD(101.43,^1;7^Q
"^DD",801.41,801.41,17,3)

"^DD",801.41,801.41,17,21,0)
^^1^1^2991029^^
"^DD",801.41,801.41,17,21,1,0)
Orderable item from the reminder definition.
"^DD",801.41,801.41,17,23,0)
^^1^1^2991029^^
"^DD",801.41,801.41,17,23,1,0)
This field is used only in the dialog display.
"^DD",801.41,801.41,17,"DT")
2991029
"^DD",801.41,801.41,18,0)
ADDITIONAL FINDINGS^801.4118AV^^3;0
"^DD",801.41,801.41,21,0)
DEFAULT VALUE^F^^2;1^K:$L(X)>60!($L(X)<1) X
"^DD",801.41,801.41,21,3)
Answer must be 1-60 characters in length.
"^DD",801.41,801.41,21,21,0)
^^1^1^3000511^
"^DD",801.41,801.41,21,21,1,0)
This is the default value for an additional prompt.
"^DD",801.41,801.41,21,"DT")
2990714
"^DD",801.41,801.41,22,0)
FORCED VALUE^F^^2;2^K:$L(X)>60!($L(X)<1) X
"^DD",801.41,801.41,22,3)
Answer must be 1-60 characters in length.
"^DD",801.41,801.41,22,21,0)
^^1^1^3000511^
"^DD",801.41,801.41,22,21,1,0)
This is the value that will be used for a forced value type dialog.
"^DD",801.41,801.41,22,"DT")
2990714
"^DD",801.41,801.41,23,0)
EXCLUDE FROM PROGRESS NOTE^S^1:YES;0:NO;^2;3^Q
"^DD",801.41,801.41,23,3)
Enter Y to stop the question text being added to the progress note.
"^DD",801.41,801.41,23,21,0)
^.001^2^2^3010302^^^^
"^DD",801.41,801.41,23,21,1,0)
This field indicates that the question text of the dialog element will
"^DD",801.41,801.41,23,21,2,0)
be excluded from the progress note.
"^DD",801.41,801.41,23,"DT")
2991102
"^DD",801.41,801.41,24,0)
PROMPT CAPTION^F^^2;4^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.41,24,3)
Enter a 3-30 character prompt caption.
"^DD",801.41,801.41,24,21,0)
^.001^3^3^3010302^^
"^DD",801.41,801.41,24,21,1,0)
This is the caption that will be used for this prompt.  This caption
"^DD",801.41,801.41,24,21,2,0)
can be overriden by the OVERRIDE PROMPT CAPTION field in the ITEMS
"^DD",801.41,801.41,24,21,3,0)
multiple, which can be more specific for the instance of the prompt.
"^DD",801.41,801.41,24,"DT")
2990923
"^DD",801.41,801.41,25,0)
DIALOG/PROGRESS NOTE TEXT^801.4125^^25;0
"^DD",801.41,801.41,25,21,0)
^.001^2^2^3000511^^
"^DD",801.41,801.41,25,21,1,0)
This is the sentence text that will appear in the reminder dialog and
"^DD",801.41,801.41,25,21,2,0)
progress note.
"^DD",801.41,801.41,25,"DT")
3000420
"^DD",801.41,801.41,35,0)
ALTERNATE PROGRESS NOTE TEXT^801.4135^^35;0
"^DD",801.41,801.41,35,21,0)
^.001^2^2^3000503^^^^
"^DD",801.41,801.41,35,21,1,0)
This field is only required if the text on the progress note differs
"^DD",801.41,801.41,35,21,2,0)
from the dialog text.
"^DD",801.41,801.41,35,"DT")
3000503
"^DD",801.41,801.41,45,0)
CHECKBOX SEQUENCE^801.4145I^^45;0
"^DD",801.41,801.41,45,21,0)
^.001^2^2^3010713^^^^
"^DD",801.41,801.41,45,21,1,0)
Comment prompts (with a GUI Process ID of COM) may have a number
"^DD",801.41,801.41,45,21,2,0)
of checkboxes associated with the comment prompt.
"^DD",801.41,801.41,45,"DT")
3010424
"^DD",801.41,801.41,46,0)
GUI PROCESS ID^P801.42'^PXRMD(801.42,^46;1^Q
"^DD",801.41,801.41,46,3)
Enter GUI Process ID for additional prompts and forced values.
"^DD",801.41,801.41,46,21,0)
^^4^4^3010502^
"^DD",801.41,801.41,46,21,1,0)
Additional prompts and forced values which update PCE should have a
"^DD",801.41,801.41,46,21,2,0)
GUI Process ID. If a additional prompt or forced value is created by
"^DD",801.41,801.41,46,21,3,0)
copying one of the PXRM prompts the GUI Process ID field will automatically
"^DD",801.41,801.41,46,21,4,0)
be populated by the copy process.
"^DD",801.41,801.41,46,"DT")
3010502
"^DD",801.41,801.41,50,0)
HIDE/SHOW GROUP^S^1:HIDE;0:SHOW;^0;10^Q
"^DD",801.41,801.41,50,3)
Enter HIDE or SHOW
"^DD",801.41,801.41,50,21,0)
^^4^4^2991124^
"^DD",801.41,801.41,50,21,1,0)
Used for dialog groups.
"^DD",801.41,801.41,50,21,2,0)
 
"^DD",801.41,801.41,50,21,3,0)
1 indicates that the group will be hidden until checked
"^DD",801.41,801.41,50,21,4,0)
0 indicates that the group will be displayed 
"^DD",801.41,801.41,50,"DT")
2991124
"^DD",801.41,801.41,51,0)
SUPPRESS CHECKBOX^S^1:SUPPRESS;^0;11^Q
"^DD",801.41,801.41,51,3)
Enter 1 if the WP text is for display only.
"^DD",801.41,801.41,51,21,0)
^.001^10^10^3010302^^
"^DD",801.41,801.41,51,21,1,0)
If the field is set to SUPPRESS the dialog element or group header will
"^DD",801.41,801.41,51,21,2,0)
be displayed without a checkbox. Otherwise the WP text will be
"^DD",801.41,801.41,51,21,3,0)
presented with a checkbox.
"^DD",801.41,801.41,51,21,4,0)
 
"^DD",801.41,801.41,51,21,5,0)
If the dialog element or group header has a finding item associated
"^DD",801.41,801.41,51,21,6,0)
with it the SUPPRESS CHECKBOX flag will be ignored.
"^DD",801.41,801.41,51,21,7,0)
 
"^DD",801.41,801.41,51,21,8,0)
Also if the HIDE/SHOW GROUP field is set to hide then the SUPPRESS
"^DD",801.41,801.41,51,21,9,0)
CHECKBOX field will be ignored (the group header question must be a
"^DD",801.41,801.41,51,21,10,0)
checkbox).
"^DD",801.41,801.41,51,"DT")
2991201
"^DD",801.41,801.41,52,0)
INDENT PROGRESS NOTE TEXT^S^1:INDENT;0:NO INDENT;^0;12^Q
"^DD",801.41,801.41,52,3)
Enter 1 if the progress note text should be indented. Enter 0 if no indent is required.
"^DD",801.41,801.41,52,21,0)
^.001^2^2^3010302^^^^
"^DD",801.41,801.41,52,21,1,0)
In a dialog group the dialog questions may be indented. This field
"^DD",801.41,801.41,52,21,2,0)
allows the progress note text to be indented also.
"^DD",801.41,801.41,52,"DT")
3000110
"^DD",801.41,801.41,53,0)
RESULT CONDITION^FXO^^0;13^K:$L(X)>40!($L(X)<3) X D VCOND^PXRMINTR(.X)
"^DD",801.41,801.41,53,2)
S Y(0)=Y S Y=$TR(Y,"~"," ")
"^DD",801.41,801.41,53,2.1)
S Y=$TR(Y,"~"," ")
"^DD",801.41,801.41,53,3)
Answer must be 3-40 characters in length.
"^DD",801.41,801.41,53,21,0)
^.001^5^5^3010302^^^^
"^DD",801.41,801.41,53,21,1,0)
This field is used for dialog result elements only. The result
"^DD",801.41,801.41,53,21,2,0)
condition determines if the progress note text of the result element
"^DD",801.41,801.41,53,21,3,0)
will be included in the progress note e.g., I SCORE<2 will insert the
"^DD",801.41,801.41,53,21,4,0)
text in the progress note if the SCORE from the mental health test is
"^DD",801.41,801.41,53,21,5,0)
below 2.
"^DD",801.41,801.41,53,"DT")
3000609
"^DD",801.41,801.41,54,0)
EXCLUDE MH TEST FROM PN TEXT^S^1:YES;0:NO;^0;14^Q
"^DD",801.41,801.41,54,3)
Enter Y to stop the test questions from being added to the note text.
"^DD",801.41,801.41,54,21,0)
^.001^3^3^3010302^^
"^DD",801.41,801.41,54,21,1,0)
This flag is used to control whether or not a mental health instrument
"^DD",801.41,801.41,54,21,2,0)
questions will be excluded from the progress note text when the
"^DD",801.41,801.41,54,21,3,0)
component is acted upon.
"^DD",801.41,801.41,54,"DT")
3000225
"^DD",801.41,801.41,55,0)
RESULT GROUP/ELEMENT^*P801.41'^PXRMD(801.41,^0;15^S DIC("S")="I ""ST""[$P(^(0),U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",801.41,801.41,55,3)
Enter the result group or element for additional findings.
"^DD",801.41,801.41,55,12)
Only result elements and result groups allowed
"^DD",801.41,801.41,55,12.1)
S DIC("S")="I ""ST""[$P(^(0),U,4)"
"^DD",801.41,801.41,55,21,0)
^.001^4^4^3010302^^^^
"^DD",801.41,801.41,55,21,1,0)
The result group or element is called on completion of a dialog and
"^DD",801.41,801.41,55,21,2,0)
allows additional findings or progress note text to be added
"^DD",801.41,801.41,55,21,3,0)
conditionally. Standard result groups for mental health tests are
"^DD",801.41,801.41,55,21,4,0)
released with the package.
"^DD",801.41,801.41,55,"DT")
3000225
"^DD",801.41,801.41,100,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^100;1^K:'$$VCLASS^PXRMINTR(X) X
"^DD",801.41,801.41,100,3)
Enter the class.
"^DD",801.41,801.41,100,21,0)
^.001^1^1^3010518^^
"^DD",801.41,801.41,100,21,1,0)
This is the class of dialog. National dialogs cannot be edited.
"^DD",801.41,801.41,100,"DT")
3010518
"^DD",801.41,801.41,101,0)
SPONSOR^P811.6^PXRMD(811.6,^100;2^Q
"^DD",801.41,801.41,101,3)
Enter the sponsor.
"^DD",801.41,801.41,101,21,0)
^^1^1^3010501^
"^DD",801.41,801.41,101,21,1,0)
This is the organization or group that sponsors this dialog.
"^DD",801.41,801.41,101,"DT")
3010424
"^DD",801.41,801.41,102,0)
REVIEW DATE^D^^100;3^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",801.41,801.41,102,3)
Enter the review date.
"^DD",801.41,801.41,102,21,0)
^^2^2^3010501^
"^DD",801.41,801.41,102,21,1,0)
The REVIEW DATE is used to determine when the dialog should be reviewed
"^DD",801.41,801.41,102,21,2,0)
to verify that it is current with the latest standards and guidelines.
"^DD",801.41,801.41,102,"DT")
3010424
"^DD",801.41,801.41,110,0)
EDIT HISTORY^801.44D^^110;0
"^DD",801.41,801.41,110,21,0)
^.001^1^1^3010502^^
"^DD",801.41,801.41,110,21,1,0)
This multiple is used to record a history of changes to the dialog.
"^DD",801.41,801.4118,0)
ADDITIONAL FINDINGS SUB-FIELD^^.01^1
"^DD",801.41,801.4118,0,"DT")
3000303
"^DD",801.41,801.4118,0,"IX","B",801.4118,.01)

"^DD",801.41,801.4118,0,"NM","ADDITIONAL FINDINGS")

"^DD",801.41,801.4118,0,"UP")
801.41
"^DD",801.41,801.4118,.01,0)
ADDITIONAL FINDINGS^MV^^0;1^Q
"^DD",801.41,801.4118,.01,1,0)
^.1
"^DD",801.41,801.4118,.01,1,1,0)
801.4118^B
"^DD",801.41,801.4118,.01,1,1,1)
S ^PXRMD(801.41,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.4118,.01,1,1,2)
K ^PXRMD(801.41,DA(1),3,"B",$E(X,1,30),DA)
"^DD",801.41,801.4118,.01,1,1,3)
Required Index for Variable Pointer
"^DD",801.41,801.4118,.01,3)
Enter additional finding items for this dialog element.
"^DD",801.41,801.4118,.01,21,0)
^.001^3^3^3010302^^^
"^DD",801.41,801.4118,.01,21,1,0)
If additional finding items should be posted if the dialog is checked
"^DD",801.41,801.4118,.01,21,2,0)
then they should be entered in this field. The field is relevant to
"^DD",801.41,801.4118,.01,21,3,0)
both dialog element and dialog group type records.
"^DD",801.41,801.4118,.01,"DT")
3000303
"^DD",801.41,801.4118,.01,"V",0)
^.12P^9^9
"^DD",801.41,801.4118,.01,"V",1,0)
9999999.09^EDUCATION TOPICS^5^ED^n^n
"^DD",801.41,801.4118,.01,"V",2,0)
9999999.14^IMMUNIZATIONS^10^IM^n^n
"^DD",801.41,801.4118,.01,"V",3,0)
9999999.28^SKIN TEST^15^ST^n^n
"^DD",801.41,801.4118,.01,"V",4,0)
9999999.15^EXAM^20^EX^n^n
"^DD",801.41,801.4118,.01,"V",5,0)
9999999.64^HEALTH FACTORS^25^HF^y^n
"^DD",801.41,801.4118,.01,"V",5,1)
S DIC("S")="I $P(^(0),U,10)'=""C"""
"^DD",801.41,801.4118,.01,"V",5,2)
Health Factor categories are not allowed.
"^DD",801.41,801.4118,.01,"V",6,0)
81^PROCEDURE^30^CPT^n^n
"^DD",801.41,801.4118,.01,"V",7,0)
80^ICD9 DIAGNOSIS^35^ICD9^n^n
"^DD",801.41,801.4118,.01,"V",8,0)
120.51^VITAL TYPE^40^VM^n^n
"^DD",801.41,801.4118,.01,"V",9,0)
101.41^ORDER DIALOG^45^Q^n^n
"^DD",801.41,801.412,0)
COMPONENTS SUB-FIELD^^9^6
"^DD",801.41,801.412,0,"DT")
3000822
"^DD",801.41,801.412,0,"ID","WRITE")
N OR0,ORNM S OR0=^(0) I $P(OR0,U,2) S ORNM=$P($G(^PXRMD(801.41,+$P(OR0,U,2),0)),U) D:$L(ORNM) EN^DDIOL(ORNM,,"?10")
"^DD",801.41,801.412,0,"IX","B",801.412,.01)

"^DD",801.41,801.412,0,"IX","D",801.412,2)

"^DD",801.41,801.412,0,"IX","DAD1",801.412,.01)

"^DD",801.41,801.412,0,"NM","COMPONENTS")

"^DD",801.41,801.412,0,"UP")
801.41
"^DD",801.41,801.412,.01,0)
SEQUENCE^MNJ5,1X^^0;1^K:+X'=X!(X>999.9)!(X<.1)!(X?.E1"."2N.N) X I $G(X)]"" K:$D(^PXRMD(801.41,DA(1),10,"B",X)) X
"^DD",801.41,801.412,.01,1,0)
^.1^^-1
"^DD",801.41,801.412,.01,1,1,0)
801.412^B
"^DD",801.41,801.412,.01,1,1,1)
S ^PXRMD(801.41,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.412,.01,1,1,2)
K ^PXRMD(801.41,DA(1),10,"B",$E(X,1,30),DA)
"^DD",801.41,801.412,.01,1,2,0)
801.412^DAD1^MUMPS
"^DD",801.41,801.412,.01,1,2,1)
N PXRMP S PXRMP=$P(^PXRMD(801.41,DA(1),10,DA,0),U,11) S:PXRMP ^PXRMD(801.41,DA(1),10,"DAD",PXRMP,X,DA)=""
"^DD",801.41,801.412,.01,1,2,2)
N PXRMP S PXRMP=$P(^PXRMD(801.41,DA(1),10,DA,0),U,11) K:PXRMP ^PXRMD(801.41,DA(1),10,"DAD",PXRMP,X,DA)
"^DD",801.41,801.412,.01,1,2,"%D",0)
^^1^1^2990624^^
"^DD",801.41,801.412,.01,1,2,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",801.41,801.412,.01,1,2,"DT")
2990624
"^DD",801.41,801.412,.01,3)
Type a Number between .1 and 999.9, 1 Decimal Digit
"^DD",801.41,801.412,.01,21,0)
^.001^2^2^3010302^^^^
"^DD",801.41,801.412,.01,21,1,0)
This field specifies the order in which this item will be displayed or
"^DD",801.41,801.412,.01,21,2,0)
processed.
"^DD",801.41,801.412,.01,"DT")
3010502
"^DD",801.41,801.412,2,0)
ITEM^R*P801.41'X^PXRMD(801.41,^0;2^D SCREEN^PXRMDD41 D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",801.41,801.412,2,1,0)
^.1^^-1
"^DD",801.41,801.412,2,1,1,0)
801.41^AD
"^DD",801.41,801.412,2,1,1,1)
S ^PXRMD(801.41,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",801.41,801.412,2,1,1,2)
K ^PXRMD(801.41,"AD",$E(X,1,30),DA(1),DA)
"^DD",801.41,801.412,2,1,1,"DT")
2950123
"^DD",801.41,801.412,2,1,2,0)
801.412^D
"^DD",801.41,801.412,2,1,2,1)
S ^PXRMD(801.41,DA(1),10,"D",$E(X,1,30),DA)=""
"^DD",801.41,801.412,2,1,2,2)
K ^PXRMD(801.41,DA(1),10,"D",$E(X,1,30),DA)
"^DD",801.41,801.412,2,1,2,"DT")
2950411
"^DD",801.41,801.412,2,3)
Enter an dialog; a dialog that is an ancestor may not also be a sub-item. The dialog type of the sub-item must be valid for the ancestor.
"^DD",801.41,801.412,2,12)
The item must be valid for this dialog type.
"^DD",801.41,801.412,2,12.1)
D SCREEN^PXRMDD41
"^DD",801.41,801.412,2,21,0)
^.001^3^3^3010607^^^^
"^DD",801.41,801.412,2,21,1,0)
This field points to a dialog which is subordinate to this dialog.
"^DD",801.41,801.412,2,21,2,0)
NOTE:  The parent dialog menu or one of its ancestors may not be entered
"^DD",801.41,801.412,2,21,3,0)
as an item.
"^DD",801.41,801.412,2,"DT")
3010502
"^DD",801.41,801.412,6,0)
OVERRIDE PROMPT CAPTION^F^^0;6^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.412,6,3)
This is the caption that should override the prompt's default caption.
"^DD",801.41,801.412,6,21,0)
^^3^3^2990923^
"^DD",801.41,801.412,6,21,1,0)
This text will override the caption for this component in the reminder
"^DD",801.41,801.412,6,21,2,0)
dialog, when the component is a prompt.  When the text is blank, the
"^DD",801.41,801.412,6,21,3,0)
caption from the prompt entry will be used.
"^DD",801.41,801.412,6,"DT")
2990923
"^DD",801.41,801.412,7,0)
START NEW LINE^S^1:YES;0:NO;^0;7^Q
"^DD",801.41,801.412,7,3)
Answer Y/N to control whether to prompt on a new line.
"^DD",801.41,801.412,7,21,0)
^.001^2^2^3010302^^
"^DD",801.41,801.412,7,21,1,0)
This flag is used to allow the user to have some control of the display
"^DD",801.41,801.412,7,21,2,0)
of prompts related to a dialog element.
"^DD",801.41,801.412,7,"DT")
2990923
"^DD",801.41,801.412,8,0)
EXCLUDE FROM PN TEXT^S^1:YES;0:NO;^0;8^Q
"^DD",801.41,801.412,8,3)
Enter Y to stop the component activity from being added to the note text.
"^DD",801.41,801.412,8,21,0)
^.001^2^2^3010302^^^
"^DD",801.41,801.412,8,21,1,0)
This flag is used to control whether or not a component will be
"^DD",801.41,801.412,8,21,2,0)
excluded from the progress note text when the component is acted upon.
"^DD",801.41,801.412,8,"DT")
2991102
"^DD",801.41,801.412,9,0)
REQUIRED^S^1:YES;0:NO;^0;9^Q
"^DD",801.41,801.412,9,"DT")
2991102
"^DD",801.41,801.4125,0)
DIALOG/PROGRESS NOTE TEXT SUB-FIELD^^.01^1
"^DD",801.41,801.4125,0,"DT")
2990628
"^DD",801.41,801.4125,0,"NM","DIALOG/PROGRESS NOTE TEXT")

"^DD",801.41,801.4125,0,"UP")
801.41
"^DD",801.41,801.4125,.01,0)
DIALOG/PROGRESS NOTE TEXT^W^^0;1^Q
"^DD",801.41,801.4125,.01,3)
Enter the lines that should be used in the Progress Note when this item is checked off.
"^DD",801.41,801.4125,.01,"DT")
3000503
"^DD",801.41,801.4135,0)
ALTERNATE PROGRESS NOTE TEXT SUB-FIELD^^.01^1
"^DD",801.41,801.4135,0,"DT")
3000209
"^DD",801.41,801.4135,0,"NM","ALTERNATE PROGRESS NOTE TEXT")

"^DD",801.41,801.4135,0,"UP")
801.41
"^DD",801.41,801.4135,.01,0)
ALTERNATE PROGRESS NOTE TEXT^W^^0;1^Q
"^DD",801.41,801.4135,.01,.1)

"^DD",801.41,801.4135,.01,3)
Enter text to appear on the progress note. Only required if the text on the progress note differs from the dialog text.
"^DD",801.41,801.4135,.01,21,0)
^^8^8^3000503^
"^DD",801.41,801.4135,.01,21,1,0)
This field is used to define an alternate text to add to the progress note
"^DD",801.41,801.4135,.01,21,2,0)
when the progress note text needs to be different from the dialog text.
"^DD",801.41,801.4135,.01,21,3,0)
(e.g., Dialog/Progress Note Text displayed is "Place Influenza Order", but
"^DD",801.41,801.4135,.01,21,4,0)
the Alternate Progress Note Text is "Ordered Influenza Vaccine at this
"^DD",801.41,801.4135,.01,21,5,0)
encounter.")
"^DD",801.41,801.4135,.01,21,6,0)
 
"^DD",801.41,801.4135,.01,21,7,0)
If there is no text in this alternate text field the dialog/progress note
"^DD",801.41,801.4135,.01,21,8,0)
text will be added to the progress note.
"^DD",801.41,801.4135,.01,"DT")
3000503
"^DD",801.41,801.4145,0)
CHECKBOX SUB-FIELD^^2^2
"^DD",801.41,801.4145,0,"DT")
3010503
"^DD",801.41,801.4145,0,"ID",2)
W "   ",$P(^(0),U,2)
"^DD",801.41,801.4145,0,"IX","B",801.4145,.01)

"^DD",801.41,801.4145,0,"NM","CHECKBOX SEQUENCE")

"^DD",801.41,801.4145,0,"UP")
801.41
"^DD",801.41,801.4145,.01,0)
CHECKBOX SEQUENCE^MNJ2,0X^^0;1^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X I $G(X)]"" K:$D(^PXRMD(801.41,DA(1),45,"B",X)) X
"^DD",801.41,801.4145,.01,.1)

"^DD",801.41,801.4145,.01,1,0)
^.1
"^DD",801.41,801.4145,.01,1,1,0)
801.4145^B
"^DD",801.41,801.4145,.01,1,1,1)
S ^PXRMD(801.41,DA(1),45,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.4145,.01,1,1,2)
K ^PXRMD(801.41,DA(1),45,"B",$E(X,1,30),DA)
"^DD",801.41,801.4145,.01,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",801.41,801.4145,.01,"DT")
3010503
"^DD",801.41,801.4145,2,0)
TEXT^F^^0;2^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.4145,2,.1)

"^DD",801.41,801.4145,2,3)
Answer must be 3-30 characters in length.
"^DD",801.41,801.4145,2,"DT")
3010503
"^DD",801.41,801.44,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",801.41,801.44,0,"DT")
3010424
"^DD",801.41,801.44,0,"IX","B",801.44,.01)

"^DD",801.41,801.44,0,"NM","EDIT HISTORY")

"^DD",801.41,801.44,0,"UP")
801.41
"^DD",801.41,801.44,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",801.41,801.44,.01,1,0)
^.1
"^DD",801.41,801.44,.01,1,1,0)
801.44^B
"^DD",801.41,801.44,.01,1,1,1)
S ^PXRMD(801.41,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.44,.01,1,1,2)
K ^PXRMD(801.41,DA(1),110,"B",$E(X,1,30),DA)
"^DD",801.41,801.44,.01,21,0)
^^2^2^3010501^
"^DD",801.41,801.44,.01,21,1,0)
This is the date and time when the editing was done. This field is set
"^DD",801.41,801.44,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",801.41,801.44,.01,"DT")
3010424
"^DD",801.41,801.44,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",801.41,801.44,1,21,0)
^^2^2^3010501^
"^DD",801.41,801.44,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",801.41,801.44,1,21,2,0)
and should not be changed by the user.
"^DD",801.41,801.44,1,"DT")
3010424
"^DD",801.41,801.44,2,0)
EDIT COMMENTS^801.442^^1;0
"^DD",801.41,801.44,2,21,0)
^.001^2^2^3010502^^
"^DD",801.41,801.44,2,21,1,0)
This word-processing field can be used to record the changes made
"^DD",801.41,801.44,2,21,2,0)
during the editing session.
"^DD",801.41,801.44,2,"DT")
3010425
"^DD",801.41,801.442,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",801.41,801.442,0,"DT")
3010424
"^DD",801.41,801.442,0,"NM","EDIT COMMENTS")

"^DD",801.41,801.442,0,"UP")
801.44
"^DD",801.41,801.442,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",801.41,801.442,.01,3)
Enter your edit comments.
"^DD",801.41,801.442,.01,"DT")
3010425
"^DD",811.2,811.2,0)
FIELD^^3112^21
"^DD",811.2,811.2,0,"DDA")
N
"^DD",811.2,811.2,0,"DT")
3010518
"^DD",811.2,811.2,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",811.2,811.2,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(811.2,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",811.2,811.2,0,"NM","REMINDER TAXONOMY")

"^DD",811.2,811.2,0,"PT",801.41,15)

"^DD",811.2,811.2,0,"PT",810.31,.04)

"^DD",811.2,811.2,0,"PT",810.32,.01)

"^DD",811.2,811.2,0,"PT",811.3,.01)

"^DD",811.2,811.2,0,"PT",811.52,.01)

"^DD",811.2,811.2,0,"PT",811.902,.01)

"^DD",811.2,811.2,0,"VRPK")
PXRM
"^DD",811.2,811.2,.01,0)
NAME^RFX^^0;1^K:$L(X)>35!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(X,811.2)) X
"^DD",811.2,811.2,.01,1,0)
^.1^^0
"^DD",811.2,811.2,.01,3)
Answer must be 3-35 characters in length.
"^DD",811.2,811.2,.01,21,0)
^.001^1^1^3000505^^^^
"^DD",811.2,811.2,.01,21,1,0)
This is the name of the taxonomy. It must be unique.
"^DD",811.2,811.2,.01,"DT")
3000601
"^DD",811.2,811.2,.02,0)
BRIEF DESCRIPTION^F^^0;2^K:$L(X)>80!($L(X)<3) X
"^DD",811.2,811.2,.02,3)
Answer must be 3-80 characters in length.
"^DD",811.2,811.2,.02,21,0)
^.001^2^2^3000505^^^^
"^DD",811.2,811.2,.02,21,1,0)
This is a brief description of what the taxonomy represents. This may be
"^DD",811.2,811.2,.02,21,2,0)
used to further define the intended use of this taxonomy.
"^DD",811.2,811.2,.02,"DT")
3000502
"^DD",811.2,811.2,.03,0)
DIALOG HEADER TEXT^F^^0;3^K:$L(X)>80!($L(X)<3) X
"^DD",811.2,811.2,.03,3)
Answer must be 3-80 characters in length.
"^DD",811.2,811.2,.03,21,0)
^.001^2^2^3000502^^^
"^DD",811.2,811.2,.03,21,1,0)
This text will be displayed as a checkbox in the reminder dialog for this
"^DD",811.2,811.2,.03,21,2,0)
taxonomy.
"^DD",811.2,811.2,.03,"DT")
2991025
"^DD",811.2,811.2,1.6,0)
INACTIVE FLAG^S^1:INACTIVE;^0;6^Q
"^DD",811.2,811.2,1.6,3)
Enter a 1 to inactivate this taxonomy.
"^DD",811.2,811.2,1.6,21,0)
^.001^6^6^3000502^^
"^DD",811.2,811.2,1.6,21,1,0)
Enter "1" to inactivate the taxonomy.  This flag is set to ACTIVE in
"^DD",811.2,811.2,1.6,21,2,0)
the distribution. As part of the installation, each site should review
"^DD",811.2,811.2,1.6,21,3,0)
the taxonomy definitions and inactivate those that do not meet the
"^DD",811.2,811.2,1.6,21,4,0)
site's needs. If desired, a site can copy a distributed taxonomy, using
"^DD",811.2,811.2,1.6,21,5,0)
the taxomony copy option, to a local version and edit it to meet the
"^DD",811.2,811.2,1.6,21,6,0)
site's needs.
"^DD",811.2,811.2,1.6,23,0)
^.001^2^2^3000502^^
"^DD",811.2,811.2,1.6,23,1,0)
This flag controls whether or not taxonomies may be selected as a
"^DD",811.2,811.2,1.6,23,2,0)
Clinical Reminder finding.
"^DD",811.2,811.2,1.6,"DT")
2960730
"^DD",811.2,811.2,4,0)
PATIENT DATA SOURCE^FX^^0;4^K:$L(X)>40!($L(X)<1) X D VPDS^PXRMTAX
"^DD",811.2,811.2,4,3)
Answer must be 1-40 characters in length.
"^DD",811.2,811.2,4,4)
D PDSXHELP^PXRMTAX
"^DD",811.2,811.2,4,21,0)
^.001^2^2^3000502^^^^
"^DD",811.2,811.2,4,21,1,0)
PATIENT DATA SOURCE specifies where to search for patient data. It is a
"^DD",811.2,811.2,4,21,2,0)
string of comma-separated key words.
"^DD",811.2,811.2,4,"DT")
3000403
"^DD",811.2,811.2,10,0)
USE INACTIVE PROBLEMS^S^1:YES;^0;9^Q
"^DD",811.2,811.2,10,3)
Enter YES if you want to use both active and inactive problems.
"^DD",811.2,811.2,10,21,0)
^.001^6^6^3000505^^^^
"^DD",811.2,811.2,10,21,1,0)
USE INACTIVE PROBLEMS applies only to searches in Problem List. Normally
"^DD",811.2,811.2,10,21,2,0)
inactive problems are not used. However, when this field is set to YES
"^DD",811.2,811.2,10,21,3,0)
then both active and inactive problems are used. This field works just
"^DD",811.2,811.2,10,21,4,0)
like the field with the same name that can be specified for a reminder
"^DD",811.2,811.2,10,21,5,0)
definition finding or a reminder term finding. The order of precedence
"^DD",811.2,811.2,10,21,6,0)
is taxonomy > term > definition.
"^DD",811.2,811.2,10,"DT")
3000403
"^DD",811.2,811.2,100,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^100;1^K:'$$VCLASS^PXRMINTR(X) X
"^DD",811.2,811.2,100,3)
Enter the class.
"^DD",811.2,811.2,100,21,0)
^.001^1^1^3010518^^^
"^DD",811.2,811.2,100,21,1,0)
This is the class of definition. National taxonomies cannot be edited.
"^DD",811.2,811.2,100,"DT")
3010518
"^DD",811.2,811.2,101,0)
SPONSOR^P811.6^PXRMD(811.6,^100;2^Q
"^DD",811.2,811.2,101,3)
Enter the sponsor.
"^DD",811.2,811.2,101,21,0)
^^1^1^3010501^
"^DD",811.2,811.2,101,21,1,0)
This is the organization or group that sponsors this taxonomy.
"^DD",811.2,811.2,101,"DT")
3010419
"^DD",811.2,811.2,102,0)
REVIEW DATE^D^^100;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",811.2,811.2,102,3)
Enter the review date.
"^DD",811.2,811.2,102,21,0)
^^3^3^3010501^
"^DD",811.2,811.2,102,21,1,0)
The REVIEW DATE is used to determine when the taxonomy should be
"^DD",811.2,811.2,102,21,2,0)
reviewed to verify that it is current with the latest standards and
"^DD",811.2,811.2,102,21,3,0)
guidelines.
"^DD",811.2,811.2,102,"DT")
3010419
"^DD",811.2,811.2,110,0)
EDIT HISTORY^811.21D^^110;0
"^DD",811.2,811.2,110,21,0)
^.001^2^2^3010502^^
"^DD",811.2,811.2,110,21,1,0)
This multiple is used to record a history of changes made to the
"^DD",811.2,811.2,110,21,2,0)
taxonomy.
"^DD",811.2,811.2,2102,0)
ICD9 RANGE OF CODED VALUES^811.22102^^80;0
"^DD",811.2,811.2,2102,21,0)
^.001^5^5^3000502^^^^
"^DD",811.2,811.2,2102,21,1,0)
This multiple is used to define ranges of ICD9 coded values which
"^DD",811.2,811.2,2102,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.2,2102,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.2,2102,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.2,2102,21,5,0)

"^DD",811.2,811.2,2102,"DT")
2980803
"^DD",811.2,811.2,2103,0)
ICD0 RANGE OF CODED VALUES^811.22103^^80.1;0
"^DD",811.2,811.2,2103,21,0)
^.001^4^4^3000502^^^^
"^DD",811.2,811.2,2103,21,1,0)
This multiple is used to define ranges of ICD0 coded values which
"^DD",811.2,811.2,2103,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.2,2103,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.2,2103,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.2,2103,"DT")
2980803
"^DD",811.2,811.2,2104,0)
CPT RANGE OF CODED VALUES^811.22104^^81;0
"^DD",811.2,811.2,2104,21,0)
^.001^5^5^3000502^^^^
"^DD",811.2,811.2,2104,21,1,0)
This multiple is used to define ranges of CPT coded values which
"^DD",811.2,811.2,2104,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.2,2104,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.2,2104,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.2,2104,21,5,0)

"^DD",811.2,811.2,2104,"DT")
2980803
"^DD",811.2,811.2,3102,0)
SELECTABLE DIAGNOSIS^811.23102IP^^SDX;0
"^DD",811.2,811.2,3102,21,0)
^.001^4^4^3000505^^
"^DD",811.2,811.2,3102,21,1,0)
These are the diagnosis codes that may be selected when processing a
"^DD",811.2,811.2,3102,21,2,0)
taxonomy dialog within CPRS. The list of codes is built from the code
"^DD",811.2,811.2,3102,21,3,0)
ranges within the taxonomy when the Clinical Reminders package is
"^DD",811.2,811.2,3102,21,4,0)
installed and includes only active codes.
"^DD",811.2,811.2,3104,0)
SELECTABLE PROCEDURE^811.23104IP^^SPR;0
"^DD",811.2,811.2,3104,21,0)
^.001^4^4^3000505^^
"^DD",811.2,811.2,3104,21,1,0)
These are the procedure codes that may be selected when processing a
"^DD",811.2,811.2,3104,21,2,0)
taxonomy dialog within CPRS. The list of codes is built from the code
"^DD",811.2,811.2,3104,21,3,0)
ranges within the taxonomy when the Clinical Reminders package is
"^DD",811.2,811.2,3104,21,4,0)
installed and includes only active codes.
"^DD",811.2,811.2,3106,0)
GENERATE DIALOG DX PARAMETER^S^1:INDIVIDUAL DIALOG FOR EACH DIAGNOSIS CODE;^SDZ;1^Q
"^DD",811.2,811.2,3106,3)
Enter 1 if each selectable diagnosis should be a separate prompt.
"^DD",811.2,811.2,3106,21,0)
^^6^6^3000505^
"^DD",811.2,811.2,3106,21,1,0)
If this parameter is set then each active code in the selectable diagnosis
"^DD",811.2,811.2,3106,21,2,0)
list will be presented as a separate question in CPRS with text generated
"^DD",811.2,811.2,3106,21,3,0)
from the finding parameter file.
"^DD",811.2,811.2,3106,21,4,0)
 
"^DD",811.2,811.2,3106,21,5,0)
Otherwise the active selectable diagnoses will be displayed as a checkbox
"^DD",811.2,811.2,3106,21,6,0)
with the dialog header text for diagnoses. This is the default option.
"^DD",811.2,811.2,3106,"DT")
2990908
"^DD",811.2,811.2,3107,0)
CURRENT VISIT DX DIALOG HDR^F^^SDZ;2^K:$L(X)>80!($L(X)<1) X
"^DD",811.2,811.2,3107,.1)

"^DD",811.2,811.2,3107,3)
Enter 1-80 character header text for current visit diagnosis selection.
"^DD",811.2,811.2,3107,21,0)
^.001^6^6^3000503^^^
"^DD",811.2,811.2,3107,21,1,0)
This is the diagnosis dialog sub-header text that will be selectable for
"^DD",811.2,811.2,3107,21,2,0)
CPRS users to document a diagnosis from the taxonomy as treated at the
"^DD",811.2,811.2,3107,21,3,0)
current visit. The header text will display with a check box which CPRS
"^DD",811.2,811.2,3107,21,4,0)
users can select to see the selectable diagnoses list. 
"^DD",811.2,811.2,3107,21,5,0)
 
"^DD",811.2,811.2,3107,21,6,0)
If this field is not present the taxonomy name will be used.
"^DD",811.2,811.2,3107,"DT")
3000503
"^DD",811.2,811.2,3108,0)
HISTORICAL VISIT DX DIALOG HDR^F^^SDZ;3^K:$L(X)>80!($L(X)<1) X
"^DD",811.2,811.2,3108,3)
Enter 1-80 character header text for historical visit diagnosis selection.
"^DD",811.2,811.2,3108,21,0)
^^7^7^3000503^
"^DD",811.2,811.2,3108,21,1,0)
This is the diagnosis dialog sub-header text that will be selectable for
"^DD",811.2,811.2,3108,21,2,0)
CPRS users to document a diagnosis from the taxonomy as a historical
"^DD",811.2,811.2,3108,21,3,0)
diagnosis. The header text will display with a check box which CPRS users
"^DD",811.2,811.2,3108,21,4,0)
can select to see the selectable diagnoses list.  Historical diagnoses
"^DD",811.2,811.2,3108,21,5,0)
selected will require the CPRS user to enter a visit date.
"^DD",811.2,811.2,3108,21,6,0)
 
"^DD",811.2,811.2,3108,21,7,0)
If this field is not present the taxonomy name will be used.
"^DD",811.2,811.2,3108,"DT")
3000503
"^DD",811.2,811.2,3110,0)
GENERATE DIALOG PR PARAMETER^S^1:INDIVIDUAL DIALOG FOR EACH PROCEDURE;^SPZ;1^Q
"^DD",811.2,811.2,3110,3)
Enter 1 if each selectable procedure should be a separate prompt.
"^DD",811.2,811.2,3110,21,0)
^^6^6^3000505^
"^DD",811.2,811.2,3110,21,1,0)
If this parameter is set then each active code in the selectable procedure
"^DD",811.2,811.2,3110,21,2,0)
list will be presented as a separate question in CPRS with text generated
"^DD",811.2,811.2,3110,21,3,0)
from the finding parameter file.
"^DD",811.2,811.2,3110,21,4,0)
                                  
"^DD",811.2,811.2,3110,21,5,0)
Otherwise the active selectable procedures will be displayed as a checkbox
"^DD",811.2,811.2,3110,21,6,0)
with the dialog header text for procedures. This is the default option.
"^DD",811.2,811.2,3110,"DT")
2990909
"^DD",811.2,811.2,3111,0)
CURRENT VISIT PR DIALOG HDR^F^^SPZ;2^K:$L(X)>80!($L(X)<1) X
"^DD",811.2,811.2,3111,3)
Enter 1-80 character header text for current visit procedure selection.
"^DD",811.2,811.2,3111,21,0)
^.001^6^6^3000503^^
"^DD",811.2,811.2,3111,21,1,0)
This is the procedure dialog sub-header text that will be selectable for
"^DD",811.2,811.2,3111,21,2,0)
CPRS users to document a procedure from the taxonomy as done at the
"^DD",811.2,811.2,3111,21,3,0)
current visit. The header text will display with a check box which CPRS
"^DD",811.2,811.2,3111,21,4,0)
users can select to see the selectable procedure list. 
"^DD",811.2,811.2,3111,21,5,0)
 
"^DD",811.2,811.2,3111,21,6,0)
If this field is not present the taxonomy name will be used.
"^DD",811.2,811.2,3111,"DT")
3000503
"^DD",811.2,811.2,3112,0)
HISTORICAL VISIT PR DIALOG HDR^F^^SPZ;3^K:$L(X)>80!($L(X)<1) X
"^DD",811.2,811.2,3112,3)
Enter 1-80 character header text for historical visit procedure selection.
"^DD",811.2,811.2,3112,21,0)
^.001^7^7^3000503^^
"^DD",811.2,811.2,3112,21,1,0)
This is the procedure dialog sub-header text that will be selectable for
"^DD",811.2,811.2,3112,21,2,0)
CPRS users to document a procedure from the taxonomy as a historical
"^DD",811.2,811.2,3112,21,3,0)
procedure. The header text will display with a check box which CPRS users
"^DD",811.2,811.2,3112,21,4,0)
can select to see the selectable procedure list.  Historical procedures
"^DD",811.2,811.2,3112,21,5,0)
selected will require the CPRS user to enter a visit date.
"^DD",811.2,811.2,3112,21,6,0)
 
"^DD",811.2,811.2,3112,21,7,0)
If this field is not present the taxonomy name will be used.
"^DD",811.2,811.2,3112,"DT")
3000503
"^DD",811.2,811.21,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",811.2,811.21,0,"DT")
3010419
"^DD",811.2,811.21,0,"IX","B",811.21,.01)

"^DD",811.2,811.21,0,"NM","EDIT HISTORY")

"^DD",811.2,811.21,0,"UP")
811.2
"^DD",811.2,811.21,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",811.2,811.21,.01,1,0)
^.1
"^DD",811.2,811.21,.01,1,1,0)
811.21^B
"^DD",811.2,811.21,.01,1,1,1)
S ^PXD(811.2,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",811.2,811.21,.01,1,1,2)
K ^PXD(811.2,DA(1),110,"B",$E(X,1,30),DA)
"^DD",811.2,811.21,.01,21,0)
^^2^2^3010501^
"^DD",811.2,811.21,.01,21,1,0)
This is the date and time when the editing was done. This field is set
"^DD",811.2,811.21,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",811.2,811.21,.01,"DT")
3010419
"^DD",811.2,811.21,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",811.2,811.21,1,21,0)
^^2^2^3010501^
"^DD",811.2,811.21,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",811.2,811.21,1,21,2,0)
and should not be changed by the user.
"^DD",811.2,811.21,1,"DT")
3010419
"^DD",811.2,811.21,2,0)
EDIT COMMENTS^811.212^^1;0
"^DD",811.2,811.21,2,21,0)
^.001^2^2^3010502^^
"^DD",811.2,811.21,2,21,1,0)
This word-processing field can be used to the record the changes made
"^DD",811.2,811.21,2,21,2,0)
during the editing session.
"^DD",811.2,811.21,2,"DT")
3010425
"^DD",811.2,811.212,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",811.2,811.212,0,"DT")
3010419
"^DD",811.2,811.212,0,"NM","EDIT COMMENTS")

"^DD",811.2,811.212,0,"UP")
811.21
"^DD",811.2,811.212,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",811.2,811.212,.01,3)
Enter your edit comments.
"^DD",811.2,811.212,.01,"DT")
3010425
"^DD",811.2,811.22102,0)
ICD9 RANGE OF CODED VALUES SUB-FIELD^^1^2
"^DD",811.2,811.22102,0,"DT")
2980817
"^DD",811.2,811.22102,0,"IX","AC",811.22102,.01)

"^DD",811.2,811.22102,0,"IX","B",811.22102,.01)

"^DD",811.2,811.22102,0,"NM","ICD9 RANGE OF CODED VALUES")

"^DD",811.2,811.22102,0,"UP")
811.2
"^DD",811.2,811.22102,.01,0)
ICD9 LOW CODED VALUE^MFX^^0;1^K:$L(X)>7!($L(X)<3) X D VCICD9^PXRMCODE
"^DD",811.2,811.22102,.01,1,0)
^.1^^-1
"^DD",811.2,811.22102,.01,1,1,0)
811.22102^B
"^DD",811.2,811.22102,.01,1,1,1)
S ^PXD(811.2,DA(1),80,"B",$E(X,1,30),DA)=""
"^DD",811.2,811.22102,.01,1,1,2)
K ^PXD(811.2,DA(1),80,"B",$E(X,1,30),DA)
"^DD",811.2,811.22102,.01,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22102,.01,21,0)
^^4^4^3000502^
"^DD",811.2,811.22102,.01,21,1,0)
This multiple is used to define ranges of ICD9 coded values which
"^DD",811.2,811.22102,.01,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22102,.01,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22102,.01,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22102,.01,"DT")
3000328
"^DD",811.2,811.22102,1,0)
ICD9 HIGH CODED VALUE^FX^^0;2^K:$L(X)>7!($L(X)<3) X D VCICD9^PXRMCODE
"^DD",811.2,811.22102,1,1,0)
^.1^^0
"^DD",811.2,811.22102,1,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22102,1,21,0)
^^4^4^3000502^
"^DD",811.2,811.22102,1,21,1,0)
This multiple is used to define ranges of ICD9 coded values which
"^DD",811.2,811.22102,1,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22102,1,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22102,1,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22102,1,"DT")
3000328
"^DD",811.2,811.22103,0)
ICD0 RANGE OF CODED VALUES SUB-FIELD^^1^2
"^DD",811.2,811.22103,0,"DT")
2980817
"^DD",811.2,811.22103,0,"IX","B",811.22103,.01)

"^DD",811.2,811.22103,0,"NM","ICD0 RANGE OF CODED VALUES")

"^DD",811.2,811.22103,0,"UP")
811.2
"^DD",811.2,811.22103,.01,0)
ICD0 LOW CODED VALUE^MFX^^0;1^K:$L(X)>7!($L(X)<3) X D VCICD0^PXRMCODE
"^DD",811.2,811.22103,.01,1,0)
^.1^^-1
"^DD",811.2,811.22103,.01,1,1,0)
811.22103^B
"^DD",811.2,811.22103,.01,1,1,1)
S ^PXD(811.2,DA(1),80.1,"B",$E(X,1,30),DA)=""
"^DD",811.2,811.22103,.01,1,1,2)
K ^PXD(811.2,DA(1),80.1,"B",$E(X,1,30),DA)
"^DD",811.2,811.22103,.01,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22103,.01,21,0)
^^4^4^3000502^
"^DD",811.2,811.22103,.01,21,1,0)
This multiple is used to define ranges of ICD0 coded values which
"^DD",811.2,811.22103,.01,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22103,.01,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22103,.01,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22103,.01,"DT")
3000328
"^DD",811.2,811.22103,1,0)
ICD0 HIGH CODED VALUE^FX^^0;2^K:$L(X)>7!($L(X)<3) X D VCICD0^PXRMCODE
"^DD",811.2,811.22103,1,1,0)
^.1^^0
"^DD",811.2,811.22103,1,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22103,1,21,0)
^^4^4^3000502^
"^DD",811.2,811.22103,1,21,1,0)
This multiple is used to define ranges of ICD0 coded values which
"^DD",811.2,811.22103,1,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22103,1,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22103,1,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22103,1,"DT")
3000328
"^DD",811.2,811.22104,0)
CPT RANGE OF CODED VALUES SUB-FIELD^^1^2
"^DD",811.2,811.22104,0,"DT")
2980817
"^DD",811.2,811.22104,0,"IX","B",811.22104,.01)

"^DD",811.2,811.22104,0,"NM","CPT RANGE OF CODED VALUES")

"^DD",811.2,811.22104,0,"UP")
811.2
"^DD",811.2,811.22104,.01,0)
CPT LOW CODED VALUE^MFX^^0;1^K:$L(X)>7!($L(X)<3) X D VCICPT^PXRMCODE
"^DD",811.2,811.22104,.01,1,0)
^.1^^-1
"^DD",811.2,811.22104,.01,1,1,0)
811.22104^B
"^DD",811.2,811.22104,.01,1,1,1)
S ^PXD(811.2,DA(1),81,"B",$E(X,1,30),DA)=""
"^DD",811.2,811.22104,.01,1,1,2)
K ^PXD(811.2,DA(1),81,"B",$E(X,1,30),DA)
"^DD",811.2,811.22104,.01,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22104,.01,21,0)
^^4^4^3000502^
"^DD",811.2,811.22104,.01,21,1,0)
This multiple is used to define ranges of CPT coded values which
"^DD",811.2,811.22104,.01,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22104,.01,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22104,.01,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22104,.01,"DT")
3000328
"^DD",811.2,811.22104,1,0)
CPT HIGH CODED VALUE^FX^^0;2^K:$L(X)>7!($L(X)<3) X D VCICPT^PXRMCODE
"^DD",811.2,811.22104,1,1,0)
^.1^^0
"^DD",811.2,811.22104,1,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22104,1,21,0)
^^4^4^3000502^
"^DD",811.2,811.22104,1,21,1,0)
This multiple is used to define ranges of CPT coded values which
"^DD",811.2,811.22104,1,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22104,1,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22104,1,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22104,1,"DT")
3000328
"^DD",811.2,811.23102,0)
SELECTABLE DIAGNOSIS SUB-FIELD^^2^3
"^DD",811.2,811.23102,0,"DT")
2991025
"^DD",811.2,811.23102,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",811.2,811.23102,0,"IX","B",811.23102,.01)

"^DD",811.2,811.23102,0,"NM","SELECTABLE DIAGNOSIS")

"^DD",811.2,811.23102,0,"UP")
811.2
"^DD",811.2,811.23102,.01,0)
SELECTABLE DIAGNOSIS^MP80'^ICD9(^0;1^Q
"^DD",811.2,811.23102,.01,1,0)
^.1
"^DD",811.2,811.23102,.01,1,1,0)
811.23102^B
"^DD",811.2,811.23102,.01,1,1,1)
S ^PXD(811.2,DA(1),"SDX","B",$E(X,1,30),DA)=""
"^DD",811.2,811.23102,.01,1,1,2)
K ^PXD(811.2,DA(1),"SDX","B",$E(X,1,30),DA)
"^DD",811.2,811.23102,.01,3)
Enter a ICD9 code that can be entered in CPRS to satisfy a reminder.
"^DD",811.2,811.23102,.01,21,0)
^.001^2^2^3000503^^
"^DD",811.2,811.23102,.01,21,1,0)
This is the selectable diagnosis code that will appear in the taxonomy
"^DD",811.2,811.23102,.01,21,2,0)
dialog. Only active codes may be selected.
"^DD",811.2,811.23102,.01,"DT")
2991025
"^DD",811.2,811.23102,1,0)
DISPLAY TEXT^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",811.2,811.23102,1,3)
Answer must be 1-40 characters in length.
"^DD",811.2,811.23102,1,21,0)
^.001^3^3^3000502^^
"^DD",811.2,811.23102,1,21,1,0)
This is the description of the diagnosis code that will appear in the
"^DD",811.2,811.23102,1,21,2,0)
taxonomy dialog in CPRS. The field is optional - the standard diagnosis
"^DD",811.2,811.23102,1,21,3,0)
code name is the default.
"^DD",811.2,811.23102,1,"DT")
2991025
"^DD",811.2,811.23102,2,0)
DISABLED^S^1:DISABLED;^0;3^Q
"^DD",811.2,811.23102,2,21,0)
^^2^2^3000502^
"^DD",811.2,811.23102,2,21,1,0)
This field should be input if a selectable code is to be excluded
"^DD",811.2,811.23102,2,21,2,0)
temporarily from the taxonomy dialog in CPRS.
"^DD",811.2,811.23102,2,"DT")
2991025
"^DD",811.2,811.23104,0)
SELECTABLE PROCEDURE SUB-FIELD^^2^3
"^DD",811.2,811.23104,0,"DT")
2991025
"^DD",811.2,811.23104,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",811.2,811.23104,0,"IX","B",811.23104,.01)

"^DD",811.2,811.23104,0,"NM","SELECTABLE PROCEDURE")

"^DD",811.2,811.23104,0,"UP")
811.2
"^DD",811.2,811.23104,.01,0)
SELECTABLE PROCEDURE^MP81'^ICPT(^0;1^Q
"^DD",811.2,811.23104,.01,1,0)
^.1
"^DD",811.2,811.23104,.01,1,1,0)
811.23104^B
"^DD",811.2,811.23104,.01,1,1,1)
S ^PXD(811.2,DA(1),"SPR","B",$E(X,1,30),DA)=""
"^DD",811.2,811.23104,.01,1,1,2)
K ^PXD(811.2,DA(1),"SPR","B",$E(X,1,30),DA)
"^DD",811.2,811.23104,.01,3)
Enter a CPT code that can be entered in CPRS to satisfy a reminder
"^DD",811.2,811.23104,.01,21,0)
^^2^2^3000502^
"^DD",811.2,811.23104,.01,21,1,0)
This is the selectable procedure code that will appear in the taxonomy
"^DD",811.2,811.23104,.01,21,2,0)
dialog. Only active codes may be selected.
"^DD",811.2,811.23104,.01,"DT")
2991025
"^DD",811.2,811.23104,1,0)
DISPLAY TEXT^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",811.2,811.23104,1,3)
Answer must be 1-40 characters in length.
"^DD",811.2,811.23104,1,21,0)
^^3^3^3000502^
"^DD",811.2,811.23104,1,21,1,0)
This is the description of the procedure code that will appear in the
"^DD",811.2,811.23104,1,21,2,0)
taxonomy dialog in CPRS. The field is optional - the standard standard
"^DD",811.2,811.23104,1,21,3,0)
code name is the default.
"^DD",811.2,811.23104,1,"DT")
2991025
"^DD",811.2,811.23104,2,0)
DISABLED^S^1:DISABLED;^0;3^Q
"^DD",811.2,811.23104,2,21,0)
^^2^2^3000502^
"^DD",811.2,811.23104,2,21,1,0)
This field should be input if a selectable code is to be excluded
"^DD",811.2,811.23104,2,21,2,0)
temporarily from the taxonomy dialog in CPRS.
"^DD",811.2,811.23104,2,"DT")
2991025
"^DD",811.4,811.4,0)
FIELD^^110^9
"^DD",811.4,811.4,0,"DDA")
N
"^DD",811.4,811.4,0,"DT")
3010518
"^DD",811.4,811.4,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(811.4,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",811.4,811.4,0,"NM","REMINDER COMPUTED FINDINGS")

"^DD",811.4,811.4,0,"PT",810.31,.04)

"^DD",811.4,811.4,0,"PT",810.32,.01)

"^DD",811.4,811.4,0,"PT",811.52,.01)

"^DD",811.4,811.4,0,"PT",811.902,.01)

"^DD",811.4,811.4,0,"VRPK")
CLINICAL REMINDERS
"^DD",811.4,811.4,.01,0)
NAME^RFX^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(X,811.4)) X
"^DD",811.4,811.4,.01,1,0)
^.1^^0
"^DD",811.4,811.4,.01,3)
Enter the name of the computed finding, up to 30 characters.
"^DD",811.4,811.4,.01,21,0)
^.001^1^1^3000505^^
"^DD",811.4,811.4,.01,21,1,0)
This is the name of the computed finding.
"^DD",811.4,811.4,.01,"DT")
3000602
"^DD",811.4,811.4,.02,0)
ROUTINE^F^^0;2^K:$L(X)>8!($L(X)<3) X
"^DD",811.4,811.4,.02,3)
Enter the M routine name.
"^DD",811.4,811.4,.02,8.5)
@
"^DD",811.4,811.4,.02,9)
@
"^DD",811.4,811.4,.02,21,0)
^.001^3^3^3000609^^^^
"^DD",811.4,811.4,.02,21,1,0)
This is the name of an M routine that contains the code for the
"^DD",811.4,811.4,.02,21,2,0)
computed finding. The entry point to use is specified in the ENTRY
"^DD",811.4,811.4,.02,21,3,0)
POINT field.
"^DD",811.4,811.4,.02,"DT")
2990526
"^DD",811.4,811.4,.03,0)
ENTRY POINT^F^^0;3^K:$L(X)>8!($L(X)<2) X
"^DD",811.4,811.4,.03,3)
Enter the entry point, must be 2-8 characters in length.
"^DD",811.4,811.4,.03,8.5)
@
"^DD",811.4,811.4,.03,9)
@
"^DD",811.4,811.4,.03,21,0)
^.001^2^2^3000609^^^^
"^DD",811.4,811.4,.03,21,1,0)
This is the entry point in the routine specified in the ROUTINE
"^DD",811.4,811.4,.03,21,2,0)
field.
"^DD",811.4,811.4,.03,"DT")
2990527
"^DD",811.4,811.4,.04,0)
PRINT NAME^F^^0;4^K:$L(X)>40!($L(X)<1) X
"^DD",811.4,811.4,.04,3)
Enter the PRINT NAME, up to 40 characters.
"^DD",811.4,811.4,.04,21,0)
^.001^2^2^3000505^^
"^DD",811.4,811.4,.04,21,1,0)
The PRINT NAME will be displayed in the Clinical Maintenance output for
"^DD",811.4,811.4,.04,21,2,0)
computed findings.
"^DD",811.4,811.4,.04,"DT")
3000113
"^DD",811.4,811.4,1,0)
DESCRIPTION^811.41^^1;0
"^DD",811.4,811.4,1,21,0)
^.001^1^1^3000505^^
"^DD",811.4,811.4,1,21,1,0)
This is the description of the computed finding.
"^DD",811.4,811.4,100,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^100;1^K:'$$VCLASS^PXRMINTR(X) X
"^DD",811.4,811.4,100,3)
Enter the class.
"^DD",811.4,811.4,100,21,0)
^.001^2^2^3010518^^^
"^DD",811.4,811.4,100,21,1,0)
This is the class of computed finding. National computed findings
"^DD",811.4,811.4,100,21,2,0)
cannot be edited.
"^DD",811.4,811.4,100,"DT")
3010518
"^DD",811.4,811.4,101,0)
SPONSOR^P811.6^PXRMD(811.6,^100;2^Q
"^DD",811.4,811.4,101,3)
Enter the sponsor.
"^DD",811.4,811.4,101,21,0)
^^1^1^3010502^
"^DD",811.4,811.4,101,21,1,0)
This is the organization or group that sponsors this computed finding.
"^DD",811.4,811.4,101,"DT")
3010419
"^DD",811.4,811.4,102,0)
REVIEW DATE^D^^100;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",811.4,811.4,102,3)
Enter the review date.
"^DD",811.4,811.4,102,21,0)
^^3^3^3010502^
"^DD",811.4,811.4,102,21,1,0)
The REVIEW DATE is used to determine when the computed finding should
"^DD",811.4,811.4,102,21,2,0)
be reviewed to verify that it is current with the latest standards and
"^DD",811.4,811.4,102,21,3,0)
guidelines.
"^DD",811.4,811.4,102,"DT")
3010419
"^DD",811.4,811.4,110,0)
EDIT HISTORY^811.42D^^110;0
"^DD",811.4,811.4,110,21,0)
^.001^2^2^3010502^^^
"^DD",811.4,811.4,110,21,1,0)
This multiple is used to record a history of changes made to the
"^DD",811.4,811.4,110,21,2,0)
computed finding.
"^DD",811.4,811.41,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.4,811.41,0,"DT")
3000405
"^DD",811.4,811.41,0,"NM","DESCRIPTION")

"^DD",811.4,811.41,0,"UP")
811.4
"^DD",811.4,811.41,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",811.4,811.41,.01,3)
Enter a description for this computed finding.
"^DD",811.4,811.41,.01,21,0)
^.001^4^4^3000505^^^
"^DD",811.4,811.41,.01,21,1,0)
This is the description of what this computed findings does. If a VALUE
"^DD",811.4,811.41,.01,21,2,0)
is used it should include a description what kind of data is returned
"^DD",811.4,811.41,.01,21,3,0)
as the VALUE. The VALUE returned can be used in the reminder finding
"^DD",811.4,811.41,.01,21,4,0)
CONDITION field.
"^DD",811.4,811.41,.01,"DT")
3000405
"^DD",811.4,811.42,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",811.4,811.42,0,"DT")
3010419
"^DD",811.4,811.42,0,"IX","B",811.42,.01)

"^DD",811.4,811.42,0,"NM","EDIT HISTORY")

"^DD",811.4,811.42,0,"UP")
811.4
"^DD",811.4,811.42,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",811.4,811.42,.01,1,0)
^.1
"^DD",811.4,811.42,.01,1,1,0)
811.42^B
"^DD",811.4,811.42,.01,1,1,1)
S ^PXRMD(811.4,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",811.4,811.42,.01,1,1,2)
K ^PXRMD(811.4,DA(1),110,"B",$E(X,1,30),DA)
"^DD",811.4,811.42,.01,21,0)
^^2^2^3010502^
"^DD",811.4,811.42,.01,21,1,0)
This is the date and time when editing was done. This field is set
"^DD",811.4,811.42,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",811.4,811.42,.01,"DT")
3010419
"^DD",811.4,811.42,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",811.4,811.42,1,21,0)
^^2^2^3010502^
"^DD",811.4,811.42,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",811.4,811.42,1,21,2,0)
and should not be changed by the user.
"^DD",811.4,811.42,1,"DT")
3010419
"^DD",811.4,811.42,2,0)
EDIT COMMENTS^811.422^^1;0
"^DD",811.4,811.42,2,21,0)
^.001^2^2^3010502^^
"^DD",811.4,811.42,2,21,1,0)
This word-processing field can be used to record the changes made
"^DD",811.4,811.42,2,21,2,0)
during the editing session.
"^DD",811.4,811.42,2,"DT")
3010425
"^DD",811.4,811.422,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",811.4,811.422,0,"DT")
3010419
"^DD",811.4,811.422,0,"NM","EDIT COMMENTS")

"^DD",811.4,811.422,0,"UP")
811.42
"^DD",811.4,811.422,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",811.4,811.422,.01,3)
Enter your edit comments.
"^DD",811.4,811.422,.01,"DT")
3010425
"^DD",811.5,811.5,0)
FIELD^^110^8
"^DD",811.5,811.5,0,"DDA")
N
"^DD",811.5,811.5,0,"DT")
3010607
"^DD",811.5,811.5,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(811.5,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",811.5,811.5,0,"NM","REMINDER TERM")

"^DD",811.5,811.5,0,"PT",810.31,.03)

"^DD",811.5,811.5,0,"PT",810.31,.04)

"^DD",811.5,811.5,0,"PT",810.32,.01)

"^DD",811.5,811.5,0,"PT",811.902,.01)

"^DD",811.5,811.5,0,"VRPK")
PXRM
"^DD",811.5,811.5,.01,0)
NAME^RF^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E) X
"^DD",811.5,811.5,.01,1,0)
^.1^^0
"^DD",811.5,811.5,.01,3)
Enter the name of the term, up to 64 characters.
"^DD",811.5,811.5,.01,21,0)
^^1^1^3000505^
"^DD",811.5,811.5,.01,21,1,0)
This is the name of the term.
"^DD",811.5,811.5,.01,"DT")
3000601
"^DD",811.5,811.5,.04,0)
DATE CREATED^RD^^0;4^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",811.5,811.5,.04,21,0)
^.001^1^1^3000508^^
"^DD",811.5,811.5,.04,21,1,0)
This is the date when the term was created.
"^DD",811.5,811.5,.04,"DT")
3000505
"^DD",811.5,811.5,1,0)
DESCRIPTION^811.51^^1;0
"^DD",811.5,811.5,1,21,0)
^^1^1^3000505^
"^DD",811.5,811.5,1,21,1,0)
This is a description of the term.
"^DD",811.5,811.5,20,0)
FINDINGS^811.52V^^20;0
"^DD",811.5,811.5,20,21,0)
^.001^4^4^3010607^^^^
"^DD",811.5,811.5,20,21,1,0)
This multiple identifies which finding items have been selected to
"^DD",811.5,811.5,20,21,2,0)
represent the term. If there is more than one finding item they will
"^DD",811.5,811.5,20,21,3,0)
all be evaluated and the most recent TRUE finding will represent the
"^DD",811.5,811.5,20,21,4,0)
term.
"^DD",811.5,811.5,20,"DT")
2990914
"^DD",811.5,811.5,100,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^100;1^K:'$$VCLASS^PXRMINTR(X) X
"^DD",811.5,811.5,100,3)
Enter the class.
"^DD",811.5,811.5,100,21,0)
^.001^2^2^3010518^^^
"^DD",811.5,811.5,100,21,1,0)
This is the class of the term. For national terms only the finding list
"^DD",811.5,811.5,100,21,2,0)
can be edited.
"^DD",811.5,811.5,100,"DT")
3010518
"^DD",811.5,811.5,101,0)
SPONSOR^P811.6^PXRMD(811.6,^100;2^Q
"^DD",811.5,811.5,101,3)
Enter the sponsor.
"^DD",811.5,811.5,101,21,0)
^.001^1^1^3010713^^
"^DD",811.5,811.5,101,21,1,0)
This is the organization or group that sponsors this term.
"^DD",811.5,811.5,101,"DT")
3010427
"^DD",811.5,811.5,102,0)
REVIEW DATE^D^^100;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",811.5,811.5,102,3)
Enter the review date.
"^DD",811.5,811.5,102,21,0)
^^2^2^3010502^
"^DD",811.5,811.5,102,21,1,0)
The REVIEW DATE is used to determine when the term should be reviewed
"^DD",811.5,811.5,102,21,2,0)
to verify that it is current with the latest standards and guidelines.
"^DD",811.5,811.5,102,"DT")
3010419
"^DD",811.5,811.5,110,0)
EDIT HISTORY^811.53D^^110;0
"^DD",811.5,811.5,110,21,0)
^^1^1^3010502^
"^DD",811.5,811.5,110,21,1,0)
This multiple is used to record a history of changes made to the term.
"^DD",811.5,811.51,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.5,811.51,0,"DT")
2990512
"^DD",811.5,811.51,0,"NM","DESCRIPTION")

"^DD",811.5,811.51,0,"UP")
811.5
"^DD",811.5,811.51,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",811.5,811.51,.01,3)
Enter the description of the term.
"^DD",811.5,811.51,.01,"DT")
2990512
"^DD",811.5,811.52,0)
FINDINGS SUB-FIELD^^16^9
"^DD",811.5,811.52,0,"DT")
3010607
"^DD",811.5,811.52,0,"IX","B",811.52,.01)

"^DD",811.5,811.52,0,"IX","E",811.52,.01)

"^DD",811.5,811.52,0,"NM","FINDINGS")

"^DD",811.5,811.52,0,"UP")
811.5
"^DD",811.5,811.52,.01,0)
FINDING ITEM^MVX^^0;1^K:'$$VFINDING^PXRMINTR(X) X
"^DD",811.5,811.52,.01,1,0)
^.1
"^DD",811.5,811.52,.01,1,1,0)
811.52^B
"^DD",811.5,811.52,.01,1,1,1)
S ^PXRMD(811.5,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",811.5,811.52,.01,1,1,2)
K ^PXRMD(811.5,DA(1),20,"B",$E(X,1,30),DA)
"^DD",811.5,811.52,.01,1,1,3)
Required Index for Variable Pointer
"^DD",811.5,811.52,.01,1,2,0)
811.52^E^MUMPS
"^DD",811.5,811.52,.01,1,2,1)
S ^PXRMD(811.5,DA(1),20,"E",$P(X,";",2),$P(X,";",1),DA)=""
"^DD",811.5,811.52,.01,1,2,2)
K ^PXRMD(811.5,DA(1),20,"E",$P(X,";",2),$P(X,";",1),DA)
"^DD",811.5,811.52,.01,1,2,"%D",0)
^^1^1^2990913^
"^DD",811.5,811.52,.01,1,2,"%D",1,0)
This cross-reference is used to group findings by type.
"^DD",811.5,811.52,.01,1,2,"DT")
2990913
"^DD",811.5,811.52,.01,3)
Enter a new finding item
"^DD",811.5,811.52,.01,"DT")
3000421
"^DD",811.5,811.52,.01,"V",0)
^.12P^15^15
"^DD",811.5,811.52,.01,"V",1,0)
50^DRUG^5^DR^n^n
"^DD",811.5,811.52,.01,"V",2,0)
9999999.09^EDUCATION TOPIC^10^ED^n^n
"^DD",811.5,811.52,.01,"V",3,0)
9999999.15^EXAM^15^EX^n^n
"^DD",811.5,811.52,.01,"V",4,0)
9999999.64^HEALTH FACTOR^20^HF^n^n
"^DD",811.5,811.52,.01,"V",5,0)
9999999.14^IMMUNIZATION^25^IM^n^n
"^DD",811.5,811.52,.01,"V",6,0)
60^LABORATORY TEST^30^LT^n^n
"^DD",811.5,811.52,.01,"V",7,0)
601^MENTAL HEALTH INSTRUMENT^35^MH^n^n
"^DD",811.5,811.52,.01,"V",8,0)
101.43^ORDERABLE ITEM^40^OI^n^n
"^DD",811.5,811.52,.01,"V",9,0)
71^RADIOLOGY PROCEDURE^45^RP^n^n
"^DD",811.5,811.52,.01,"V",10,0)
811.4^REMINDER COMPUTED FINDING^50^CF^n^n
"^DD",811.5,811.52,.01,"V",11,0)
811.2^REMINDER TAXONOMY^55^TX^n^n
"^DD",811.5,811.52,.01,"V",12,0)
9999999.28^SKIN TEST^65^ST^n^n
"^DD",811.5,811.52,.01,"V",13,0)
50.605^VA DRUG CLASS^70^DC^n^n
"^DD",811.5,811.52,.01,"V",14,0)
50.6^VA GENERIC^75^DG^n^n
"^DD",811.5,811.52,.01,"V",15,0)
120.51^VITAL MEASUREMENT^80^VM^n^n
"^DD",811.5,811.52,9,0)
EFFECTIVE PERIOD^FX^^0;8^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.5,811.52,9,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.5,811.52,9,21,0)
^^6^6^3000505^
"^DD",811.5,811.52,9,21,1,0)
This is the amount of time the finding will remain valid. For example,
"^DD",811.5,811.52,9,21,2,0)
if the EFFECTIVE PERIOD is 1Y and the date of the finding is less than
"^DD",811.5,811.52,9,21,3,0)
one year ago the finding will be true. If the date is more than a year
"^DD",811.5,811.52,9,21,4,0)
ago the finding will have expired and be false. If this field is left
"^DD",811.5,811.52,9,21,5,0)
empty then the finding never expires.
"^DD",811.5,811.52,9,21,6,0)

"^DD",811.5,811.52,9,"DT")
3000427
"^DD",811.5,811.52,10,0)
USE INACTIVE PROBLEMS^S^1:YES;0:NO;^0;9^Q
"^DD",811.5,811.52,10,3)
Enter a 1 or YES if you want inactive problems used.
"^DD",811.5,811.52,10,21,0)
^^5^5^3000505^
"^DD",811.5,811.52,10,21,1,0)
Normally only active problems from the Problem List will be used in the
"^DD",811.5,811.52,10,21,2,0)
reminder evaluation. If USE INACTIVE PROBLEMS is set to YES then both
"^DD",811.5,811.52,10,21,3,0)
active and inactive problems will be used. Note that this field applies
"^DD",811.5,811.52,10,21,4,0)
only to taxonomy findings.
"^DD",811.5,811.52,10,21,5,0)

"^DD",811.5,811.52,10,"DT")
3000314
"^DD",811.5,811.52,11,0)
WITHIN CATEGORY RANK^NJ3,0^^0;10^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.5,811.52,11,3)
Type a number between 0 and 999, 0 decimal digits.
"^DD",811.5,811.52,11,21,0)
^.001^17^17^3000508^^^^
"^DD",811.5,811.52,11,21,1,0)
This field applies only to health factors. In order to understand how
"^DD",811.5,811.52,11,21,2,0)
it works, you need to understand how health factors work in the
"^DD",811.5,811.52,11,21,3,0)
reminder evaluation process. If you are not clear about this, see the
"^DD",811.5,811.52,11,21,4,0)
health factor section of the Clinical Reminders Manager Manual.
"^DD",811.5,811.52,11,21,5,0)

"^DD",811.5,811.52,11,21,6,0)
The default behavior is to use only the most recent health factor
"^DD",811.5,811.52,11,21,7,0)
within a category. A problem can arise if there are two or more health
"^DD",811.5,811.52,11,21,8,0)
factors within a category and they both have the same date. (This can
"^DD",811.5,811.52,11,21,9,0)
happen if both health factors are given during the same encounter). 
"^DD",811.5,811.52,11,21,10,0)
When the dates are the same, the health factor with the highest WITHIN
"^DD",811.5,811.52,11,21,11,0)
CATEGORY RANK will be used. This is a numerical value like RANK
"^DD",811.5,811.52,11,21,12,0)
FREQUENCY with 1 being the highest rank.
"^DD",811.5,811.52,11,21,13,0)

"^DD",811.5,811.52,11,21,14,0)
If WITHIN CATEGORY RANK has the special value of 0 then the
"^DD",811.5,811.52,11,21,15,0)
categorization of health factors will be ignored and the health factor
"^DD",811.5,811.52,11,21,16,0)
will be treated as a distinct finding.
"^DD",811.5,811.52,11,21,17,0)

"^DD",811.5,811.52,11,"DT")
3000505
"^DD",811.5,811.52,12,0)
EFFECTIVE DATE^D^^0;11^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",811.5,811.52,12,3)
Enter the EFFECTIVE DATE
"^DD",811.5,811.52,12,21,0)
^.001^2^2^3001004^^^^
"^DD",811.5,811.52,12,21,1,0)
Any findings with a date older than the EFFECTIVE DATE are expired and
"^DD",811.5,811.52,12,21,2,0)
will be treated as false during the reminder evaluation.
"^DD",811.5,811.52,12,"DT")
3001010
"^DD",811.5,811.52,13,0)
MH SCALE^FX^^0;12^K:$L(X)>79!($L(X)<1) X D VSCALET^PXRMMH
"^DD",811.5,811.52,13,3)
Enter the scale number or scale name.
"^DD",811.5,811.52,13,4)
D SCHELPT^PXRMMH
"^DD",811.5,811.52,13,21,0)
^^3^3^3000505^
"^DD",811.5,811.52,13,21,1,0)
This applies only to Mental Health Instrument findings. It specifies
"^DD",811.5,811.52,13,21,2,0)
which scale to use when scoring the test.
"^DD",811.5,811.52,13,21,3,0)

"^DD",811.5,811.52,13,"DT")
3000321
"^DD",811.5,811.52,14,0)
CONDITION^FXO^^3;1^K:$L(X)>225!($L(X)<3) X D VCOND^PXRMINTR(.X)
"^DD",811.5,811.52,14,2)
S Y(0)=Y S Y=$TR(Y,"~"," ")
"^DD",811.5,811.52,14,2.1)
S Y=$TR(Y,"~"," ")
"^DD",811.5,811.52,14,3)
Enter logic to evaluate findings value
"^DD",811.5,811.52,14,21,0)
^.001^49^49^3001004^^
"^DD",811.5,811.52,14,21,1,0)
The CONDITION must be written in M code based on the value returned from
"^DD",811.5,811.52,14,21,2,0)
the patient results for the finding. Each type of finding has a specific
"^DD",811.5,811.52,14,21,3,0)
field that provides the value available to use in the CONDITION logic.
"^DD",811.5,811.52,14,21,4,0)
If the finding value is text, enclose the condition value in quotes 
"^DD",811.5,811.52,14,21,5,0)
(e.g., "positive"). If the finding value is numeric, do not use quotes
"^DD",811.5,811.52,14,21,6,0)
(e.g., 3).
"^DD",811.5,811.52,14,21,7,0)
 
"^DD",811.5,811.52,14,21,8,0)
An IF statement is used to evaluate the value.  The value is always
"^DD",811.5,811.52,14,21,9,0)
identified as V in the statement regardless of the type of finding. If 
"^DD",811.5,811.52,14,21,10,0)
the condition logic statement evaluates to true, the finding is 
"^DD",811.5,811.52,14,21,11,0)
considered as found (true), otherwise the finding is considered as not
"^DD",811.5,811.52,14,21,12,0)
found (false).
"^DD",811.5,811.52,14,21,13,0)
 
"^DD",811.5,811.52,14,21,14,0)
Relational operators that may be used include: = equals, < less than, >
"^DD",811.5,811.52,14,21,15,0)
greater than, [ contains, ] follows and ? pattern matches. Logical
"^DD",811.5,811.52,14,21,16,0)
operators may be used to check multiple values: & And, ! Or, ' Not. 
"^DD",811.5,811.52,14,21,17,0)
         
"^DD",811.5,811.52,14,21,18,0)
Typical examples of M code are as follows:
"^DD",811.5,811.52,14,21,19,0)
    I V=3 for Education Topic's Level of Understanding = 3
"^DD",811.5,811.52,14,21,20,0)
    I V="H" for Health Factor's Level/Severity="H"
"^DD",811.5,811.52,14,21,21,0)
    I ($P(V,"/",1)>140)&($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.5,811.52,14,21,22,0)
    systolic and diastolic values
"^DD",811.5,811.52,14,21,23,0)
    I ($P(V,"/",1)>140)!($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.5,811.52,14,21,24,0)
    systolic or diastolic values
"^DD",811.5,811.52,14,21,25,0)
    I V["BLACK" for VA-RACE computed finding where race contains BLACK
"^DD",811.5,811.52,14,21,26,0)
 
"^DD",811.5,811.52,14,21,27,0)
Below is a brief summary for each finding type, the related field to use
"^DD",811.5,811.52,14,21,28,0)
for the value and examples:
"^DD",811.5,811.52,14,21,29,0)
 
"^DD",811.5,811.52,14,21,30,0)
Finding type                Field Value Used        Example M Code
"^DD",811.5,811.52,14,21,31,0)
 
"^DD",811.5,811.52,14,21,32,0)
 Drug                       None
"^DD",811.5,811.52,14,21,33,0)
 Education Topic            Level of understanding  I V=3
"^DD",811.5,811.52,14,21,34,0)
 Exam                       Result                  I V="N"
"^DD",811.5,811.52,14,21,35,0)
 Health Factor              Level/severity          I V="H"
"^DD",811.5,811.52,14,21,36,0)
 Immunization               Series                  I V="P"
"^DD",811.5,811.52,14,21,37,0)
 Laboratory Test            Result Value            I V>130
"^DD",811.5,811.52,14,21,38,0)
 Mental Health Instrument   Raw score               I V=1
"^DD",811.5,811.52,14,21,39,0)
 Orderable Item             Status                  I V="complete"
"^DD",811.5,811.52,14,21,40,0)
 Radiology Procedure        None
"^DD",811.5,811.52,14,21,41,0)
 Reminder Computed Finding  Determined by programmer-See Manager Manual
"^DD",811.5,811.52,14,21,42,0)
 Reminder Taxonomy          None
"^DD",811.5,811.52,14,21,43,0)
 Skin Test                  Result                  I V="N"
"^DD",811.5,811.52,14,21,44,0)
 VA Drug Class              None
"^DD",811.5,811.52,14,21,45,0)
 VA Generic                 None
"^DD",811.5,811.52,14,21,46,0)
 Vital Measurement          Rate                    I V>27
"^DD",811.5,811.52,14,21,47,0)
 
"^DD",811.5,811.52,14,21,48,0)
For details about allowed CONDITIONS for each finding type see the
"^DD",811.5,811.52,14,21,49,0)
Clinical Reminders Manager Manual.
"^DD",811.5,811.52,14,"DT")
3001004
"^DD",811.5,811.52,15,0)
CONDITION CASE SENSITIVE^S^0:NO;1:YES;^3;2^Q
"^DD",811.5,811.52,15,3)
Enter NO to make the condition case insensitive
"^DD",811.5,811.52,15,21,0)
^.001^3^3^3010215^^^
"^DD",811.5,811.52,15,21,1,0)
When CONDITION CASE SENSITIVE is NO then the CONDITION will be
"^DD",811.5,811.52,15,21,2,0)
evaluated without regards to case. The default is YES so that CONDITION
"^DD",811.5,811.52,15,21,3,0)
evaluation is case sensitive.  
"^DD",811.5,811.52,15,"DT")
3010215
"^DD",811.5,811.52,16,0)
RX TYPE^S^B:BOTH;I:INPATIENT;O:OUTPATIENT;^0;13^Q
"^DD",811.5,811.52,16,3)
Enter the Rx Type
"^DD",811.5,811.52,16,21,0)
^^3^3^3010607^
"^DD",811.5,811.52,16,21,1,0)
Rx Type applies only to drug findings. It can be use to make the
"^DD",811.5,811.52,16,21,2,0)
finding so it will use only inpatient or only outpatient drugs. If this
"^DD",811.5,811.52,16,21,3,0)
field is empty is will use both.
"^DD",811.5,811.52,16,"DT")
3010607
"^DD",811.5,811.53,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",811.5,811.53,0,"DT")
3010419
"^DD",811.5,811.53,0,"IX","B",811.53,.01)

"^DD",811.5,811.53,0,"NM","EDIT HISTORY")

"^DD",811.5,811.53,0,"UP")
811.5
"^DD",811.5,811.53,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",811.5,811.53,.01,1,0)
^.1
"^DD",811.5,811.53,.01,1,1,0)
811.53^B
"^DD",811.5,811.53,.01,1,1,1)
S ^PXRMD(811.5,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",811.5,811.53,.01,1,1,2)
K ^PXRMD(811.5,DA(1),110,"B",$E(X,1,30),DA)
"^DD",811.5,811.53,.01,21,0)
^^2^2^3010502^
"^DD",811.5,811.53,.01,21,1,0)
This is the date and time when the editing was done. This field is set
"^DD",811.5,811.53,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",811.5,811.53,.01,"DT")
3010419
"^DD",811.5,811.53,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",811.5,811.53,1,21,0)
^^2^2^3010502^
"^DD",811.5,811.53,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",811.5,811.53,1,21,2,0)
and should not be changed by the user.
"^DD",811.5,811.53,1,"DT")
3010419
"^DD",811.5,811.53,2,0)
EDIT COMMENTS^811.532^^1;0
"^DD",811.5,811.53,2,21,0)
^^2^2^3010502^
"^DD",811.5,811.53,2,21,1,0)
This word-processing field can be used to record the changes made
"^DD",811.5,811.53,2,21,2,0)
during the editing session.
"^DD",811.5,811.53,2,"DT")
3010425
"^DD",811.5,811.532,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",811.5,811.532,0,"DT")
3010419
"^DD",811.5,811.532,0,"NM","EDIT COMMENTS")

"^DD",811.5,811.532,0,"UP")
811.53
"^DD",811.5,811.532,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",811.5,811.532,.01,3)
Enter your edit comments.
"^DD",811.5,811.532,.01,"DT")
3010425
"^DD",811.6,811.6,0)
FIELD^^.02^2
"^DD",811.6,811.6,0,"DDA")
N
"^DD",811.6,811.6,0,"DT")
3010501
"^DD",811.6,811.6,0,"ID",.02)
W "   ",@("$P($P($C(59)_$S($D(^DD(811.6,.02,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,2)_"":"",2),$C(59),1)")
"^DD",811.6,811.6,0,"NM","REMINDER SPONSOR")

"^DD",811.6,811.6,0,"PT",801.41,101)

"^DD",811.6,811.6,0,"PT",811.2,101)

"^DD",811.6,811.6,0,"PT",811.4,101)

"^DD",811.6,811.6,0,"PT",811.5,101)

"^DD",811.6,811.6,0,"PT",811.9,101)

"^DD",811.6,811.6,0,"SCR")
I +$G(PXRMEDOK)
"^DD",811.6,811.6,0,"VRPK")
CLINICAL REMINDERS
"^DD",811.6,811.6,.01,0)
NAME^RFX^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E) X
"^DD",811.6,811.6,.01,1,0)
^.1^^0
"^DD",811.6,811.6,.01,3)
Enter the  sponsor, up to 64 characters.
"^DD",811.6,811.6,.01,21,0)
^.001^2^2^3010604^^^^
"^DD",811.6,811.6,.01,21,1,0)
This is the name of a group or organization that sponsors reminder
"^DD",811.6,811.6,.01,21,2,0)
components.
"^DD",811.6,811.6,.01,"DT")
3010606
"^DD",811.6,811.6,.02,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^0;2^K:'$$VCLASS^PXRMINTR(X) X
"^DD",811.6,811.6,.02,3)
Enter the class.
"^DD",811.6,811.6,.02,21,0)
^.001^1^1^3010501^^^^
"^DD",811.6,811.6,.02,21,1,0)
This is the class of organization or group that the sponsor is.
"^DD",811.6,811.6,.02,"DT")
3010605
"^DD",811.8,811.8,0)
FIELD^^110^8
"^DD",811.8,811.8,0,"DDA")
N
"^DD",811.8,811.8,0,"DT")
3010313
"^DD",811.8,811.8,0,"NM","REMINDER EXCHANGE FILE")

"^DD",811.8,811.8,0,"SCR")
I 0>1
"^DD",811.8,811.8,0,"VRPK")
PCE PATIENT CARE ENCOUNTER
"^DD",811.8,811.8,.01,0)
NAME^RFX^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E) X
"^DD",811.8,811.8,.01,.1)

"^DD",811.8,811.8,.01,1,0)
^.1^^0
"^DD",811.8,811.8,.01,3)
Answer must be 3-64 characters in length.
"^DD",811.8,811.8,.01,21,0)
^.001^2^2^3010316^^^^
"^DD",811.8,811.8,.01,21,1,0)
This is the name of the entry in the Exchange File. It will be the same
"^DD",811.8,811.8,.01,21,2,0)
as the name of the reminder definition that was packed.
"^DD",811.8,811.8,.01,"DT")
3010601
"^DD",811.8,811.8,.02,0)
SOURCE^F^^0;2^K:$L(X)>64!($L(X)<3) X
"^DD",811.8,811.8,.02,3)
Answer must be 3-64 characters in length.
"^DD",811.8,811.8,.02,21,0)
^^2^2^3010316^
"^DD",811.8,811.8,.02,21,1,0)
This is the source of the packed reminder. It will contain the name of
"^DD",811.8,811.8,.02,21,2,0)
person who packed it and their site.
"^DD",811.8,811.8,.02,"DT")
3000706
"^DD",811.8,811.8,.03,0)
DATE PACKED^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",811.8,811.8,.03,21,0)
^^3^3^3010316^
"^DD",811.8,811.8,.03,21,1,0)
This is the date and time the reminder was originally packed. When a
"^DD",811.8,811.8,.03,21,2,0)
packed reminder is put into the Exchange File from a MailMan message or
"^DD",811.8,811.8,.03,21,3,0)
a host file this will reflect the original packing date and time.
"^DD",811.8,811.8,.03,"DT")
3000712
"^DD",811.8,811.8,100,0)
DATA^811.801A^^100;0
"^DD",811.8,811.8,100,21,0)
^^1^1^3010316^
"^DD",811.8,811.8,100,21,1,0)
This node contains the actual packed reminder as XML data.
"^DD",811.8,811.8,110,0)
DESCRIPTION^811.804^^110;0
"^DD",811.8,811.8,110,21,0)
^.001^4^4^3010530^^^
"^DD",811.8,811.8,110,21,1,0)
This contains formatted information about the Exchange File entry. It
"^DD",811.8,811.8,110,21,2,0)
includes source information, a brief description, and keywords. This
"^DD",811.8,811.8,110,21,3,0)
information will be displayed when an entry is selected for possible
"^DD",811.8,811.8,110,21,4,0)
installation.
"^DD",811.8,811.8,119,0)
NUMBER OF UNIQUE COMPONENTS^NJ6,0^^110;1^K:+X'=X!(X>100000)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.8,811.8,119,3)
Type a Number between 0 and 100000, 0 Decimal Digits
"^DD",811.8,811.8,119,21,0)
^^1^1^3010316^
"^DD",811.8,811.8,119,21,1,0)
This is the number of unique components in the packed reminder.
"^DD",811.8,811.8,119,"DT")
3001103
"^DD",811.8,811.8,120,0)
COMPONENT LIST^811.802A^^120;0
"^DD",811.8,811.8,120,21,0)
^.001^1^1^3010316^^
"^DD",811.8,811.8,120,21,1,0)
This is a list of components that are included in the packed reminder.
"^DD",811.8,811.8,130,0)
INSTALLATION HISTORY^811.803DA^^130;0
"^DD",811.8,811.8,130,21,0)
^.001^2^2^3010316^^
"^DD",811.8,811.8,130,21,1,0)
This multiple is used to record a history of every time a packed
"^DD",811.8,811.8,130,21,2,0)
reminder is installed.
"^DD",811.8,811.801,0)
DATA SUB-FIELD^I^.01^1
"^DD",811.8,811.801,0,"DT")
3000706
"^DD",811.8,811.801,0,"IX","B",811.801,.01)

"^DD",811.8,811.801,0,"NM","DATA")

"^DD",811.8,811.801,0,"UP")
811.8
"^DD",811.8,811.801,.01,0)
DATA^F^^0;1^K:$L(X)>245!($L(X)<1) X
"^DD",811.8,811.801,.01,1,0)
^.1
"^DD",811.8,811.801,.01,1,1,0)
811.801^B
"^DD",811.8,811.801,.01,1,1,1)
S ^PXD(811.8,DA(1),100,"B",$E(X,1,30),DA)=""
"^DD",811.8,811.801,.01,1,1,2)
K ^PXD(811.8,DA(1),100,"B",$E(X,1,30),DA)
"^DD",811.8,811.801,.01,3)
Answer must be 1-245 characters in length.
"^DD",811.8,811.801,.01,21,0)
^^1^1^3010316^
"^DD",811.8,811.801,.01,21,1,0)
This is a line of XML data.
"^DD",811.8,811.801,.01,"DT")
3000706
"^DD",811.8,811.802,0)
COMPONENT LIST SUB-FIELD^^1^4
"^DD",811.8,811.802,0,"DT")
3010130
"^DD",811.8,811.802,0,"NM","COMPONENT LIST")

"^DD",811.8,811.802,0,"UP")
811.8
"^DD",811.8,811.802,.01,0)
COMPONENT^F^^0;1^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.802,.01,1,0)
^.1^^0
"^DD",811.8,811.802,.01,3)
Answer must be 1-64 characters in length.
"^DD",811.8,811.802,.01,21,0)
^^1^1^3010316^
"^DD",811.8,811.802,.01,21,1,0)
This is the name of the component, for example ROUTINE or EDUCATION TOPIC.
"^DD",811.8,811.802,.01,"DT")
3000728
"^DD",811.8,811.802,.02,0)
FILE NUMBER^NJ14,4^^0;2^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."5N.N) X
"^DD",811.8,811.802,.02,3)
Type a Number between 1 and 999999999, 4 Decimal Digits
"^DD",811.8,811.802,.02,21,0)
^^2^2^3010316^
"^DD",811.8,811.802,.02,21,1,0)
This is the file number of the component. If the component is a routine
"^DD",811.8,811.802,.02,21,2,0)
then the file number will be 0.
"^DD",811.8,811.802,.02,"DT")
3001101
"^DD",811.8,811.802,.03,0)
NUMBER OF ITEMS^NJ4,0^^0;3^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.802,.03,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",811.8,811.802,.03,21,0)
^^4^4^3010316^
"^DD",811.8,811.802,.03,21,1,0)
This is the number of this type of component that are included in the
"^DD",811.8,811.802,.03,21,2,0)
packed reminder. For example, if this particular component is Health
"^DD",811.8,811.802,.03,21,3,0)
Factors and there are three of them in the packed reminder the NUMBER
"^DD",811.8,811.802,.03,21,4,0)
OF ITEMS would be 3.
"^DD",811.8,811.802,.03,"DT")
3001101
"^DD",811.8,811.802,1,0)
ITEM LIST^811.8021A^^1;0
"^DD",811.8,811.802,1,21,0)
^^3^3^3010316^
"^DD",811.8,811.802,1,21,1,0)
This is the list of items of the component type. For example, if the
"^DD",811.8,811.802,1,21,2,0)
component type is health factors and there are three of them the three
"^DD",811.8,811.802,1,21,3,0)
entries are specified in this list.
"^DD",811.8,811.8021,0)
ITEM LIST SUB-FIELD^^2^5
"^DD",811.8,811.8021,0,"DT")
3010130
"^DD",811.8,811.8021,0,"IX","B",811.8021,.01)

"^DD",811.8,811.8021,0,"NM","ITEM LIST")

"^DD",811.8,811.8021,0,"UP")
811.802
"^DD",811.8,811.8021,.01,0)
ITEM^F^^0;1^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.8021,.01,1,0)
^.1
"^DD",811.8,811.8021,.01,1,1,0)
811.8021^B
"^DD",811.8,811.8021,.01,1,1,1)
S ^PXD(811.8,DA(2),120,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",811.8,811.8021,.01,1,1,2)
K ^PXD(811.8,DA(2),120,DA(1),1,"B",$E(X,1,30),DA)
"^DD",811.8,811.8021,.01,3)
Answer must be 1-64 characters in length.
"^DD",811.8,811.8021,.01,21,0)
^^1^1^3010316^
"^DD",811.8,811.8021,.01,21,1,0)
This is the name of the item.
"^DD",811.8,811.8021,.01,"DT")
3000728
"^DD",811.8,811.8021,.02,0)
START LINE^NJ4,0^^0;2^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.8021,.02,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",811.8,811.8021,.02,21,0)
^^1^1^3010316^
"^DD",811.8,811.8021,.02,21,1,0)
This is the line in node 100 where the data for this item starts.
"^DD",811.8,811.8021,.02,"DT")
3000728
"^DD",811.8,811.8021,.03,0)
END LINE^NJ4,0^^0;3^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.8021,.03,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",811.8,811.8021,.03,21,0)
^^1^1^3010316^
"^DD",811.8,811.8021,.03,21,1,0)
This is the line in node 100 where the data for this item ends.
"^DD",811.8,811.8021,.03,"DT")
3000728
"^DD",811.8,811.8021,1,0)
IEN ROOT START LINE^NJ4,0^^0;4^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.8021,1,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",811.8,811.8021,1,21,0)
^^1^1^3010316^
"^DD",811.8,811.8021,1,21,1,0)
This is the line in node 100 where the ien root for this item starts.
"^DD",811.8,811.8021,1,"DT")
3010130
"^DD",811.8,811.8021,2,0)
IEN ROOT END LINE^NJ4,0^^0;5^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.8021,2,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",811.8,811.8021,2,21,0)
^^1^1^3010316^
"^DD",811.8,811.8021,2,21,1,0)
This is the line in node 100 where the ien root ends.
"^DD",811.8,811.8021,2,"DT")
3010130
"^DD",811.8,811.803,0)
INSTALLATION HISTORY SUB-FIELD^^.02^3
"^DD",811.8,811.803,0,"DT")
3010313
"^DD",811.8,811.803,0,"NM","INSTALLATION HISTORY")

"^DD",811.8,811.803,0,"UP")
811.8
"^DD",811.8,811.803,.01,0)
INSTALLATION DATE AND TIME^D^^0;1^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",811.8,811.803,.01,1,0)
^.1^^0
"^DD",811.8,811.803,.01,21,0)
^^1^1^3010316^
"^DD",811.8,811.803,.01,21,1,0)
This is the date and time of the installation.
"^DD",811.8,811.803,.01,"DT")
3001121
"^DD",811.8,811.803,.02,0)
INSTALLED BY^F^^0;2^K:$L(X)>45!($L(X)<1) X
"^DD",811.8,811.803,.02,3)
Answer must be 1-45 characters in length.
"^DD",811.8,811.803,.02,21,0)
^^1^1^3010316^
"^DD",811.8,811.803,.02,21,1,0)
This is the person who did the installation.
"^DD",811.8,811.803,.02,"DT")
3001116
"^DD",811.8,811.803,1,0)
COMPONENT LIST^811.8031A^^1;0
"^DD",811.8,811.803,1,21,0)
^.001^2^2^3010316^^
"^DD",811.8,811.803,1,21,1,0)
This list contains a multiple of the packed reminder components that
"^DD",811.8,811.803,1,21,2,0)
were selected as part of this installation.
"^DD",811.8,811.8031,0)
COMPONENT LIST SUB-FIELD^^5^6
"^DD",811.8,811.8031,0,"DT")
3010313
"^DD",811.8,811.8031,0,"IX","B",811.8031,.01)

"^DD",811.8,811.8031,0,"NM","COMPONENT LIST")

"^DD",811.8,811.8031,0,"UP")
811.803
"^DD",811.8,811.8031,.01,0)
INDEX^NJ6,0^^0;1^K:+X'=X!(X>100000)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.8,811.8031,.01,1,0)
^.1
"^DD",811.8,811.8031,.01,1,1,0)
811.8031^B
"^DD",811.8,811.8031,.01,1,1,1)
S ^PXD(811.8,DA(2),130,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",811.8,811.8031,.01,1,1,2)
K ^PXD(811.8,DA(2),130,DA(1),1,"B",$E(X,1,30),DA)
"^DD",811.8,811.8031,.01,3)
Type a Number between 0 and 100000, 0 Decimal Digits
"^DD",811.8,811.8031,.01,21,0)
^.001^2^2^3010316^^
"^DD",811.8,811.8031,.01,21,1,0)
This number corresponds to the item number in the ListManager display
"^DD",811.8,811.8031,.01,21,2,0)
of the components in the Exchange File entry.
"^DD",811.8,811.8031,.01,"DT")
3001115
"^DD",811.8,811.8031,1,0)
COMPONENT^F^^0;2^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.8031,1,3)
Answer must be 1-64 characters in length.
"^DD",811.8,811.8031,1,21,0)
^^1^1^3010316^
"^DD",811.8,811.8031,1,21,1,0)
This is the type of component, Education Topic, Health Factor, etc.
"^DD",811.8,811.8031,1,"DT")
3001115
"^DD",811.8,811.8031,2,0)
ITEM^F^^0;3^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.8031,2,3)
Answer must be 1-64 characters in length.
"^DD",811.8,811.8031,2,21,0)
^^2^2^3010316^
"^DD",811.8,811.8031,2,21,1,0)
This is the name of the component. For example, if the component is a
"^DD",811.8,811.8031,2,21,2,0)
health factor then this is the name of the health factor.
"^DD",811.8,811.8031,2,"DT")
3001115
"^DD",811.8,811.8031,3,0)
ACTION^F^^0;4^K:$L(X)>4!($L(X)<1) X
"^DD",811.8,811.8031,3,3)
Answer must be 1-4 characters in length.
"^DD",811.8,811.8031,3,21,0)
^^1^1^3010316^
"^DD",811.8,811.8031,3,21,1,0)
This is the action that was taken with the item.
"^DD",811.8,811.8031,3,"DT")
3001115
"^DD",811.8,811.8031,4,0)
NEWNAME^F^^0;5^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.8031,4,3)
Answer must be 1-64 characters in length.
"^DD",811.8,811.8031,4,21,0)
^^1^1^3010316^
"^DD",811.8,811.8031,4,21,1,0)
If the item was copied to a new name then the new name is stored here.
"^DD",811.8,811.8031,4,"DT")
3001115
"^DD",811.8,811.8031,5,0)
ADDITIONAL DETAILS^811.80315A^^1;0
"^DD",811.8,811.8031,5,21,0)
^.001^3^3^3010316^^
"^DD",811.8,811.8031,5,21,1,0)
This multiple is used to store additional details about the
"^DD",811.8,811.8031,5,21,2,0)
installation. As an example, if a finding in a reminder definition is
"^DD",811.8,811.8031,5,21,3,0)
replaced with another finding that information is stored here.
"^DD",811.8,811.80315,0)
ADDITIONAL DETAILS SUB-FIELD^^.01^1
"^DD",811.8,811.80315,0,"DT")
3010313
"^DD",811.8,811.80315,0,"IX","B",811.80315,.01)

"^DD",811.8,811.80315,0,"NM","ADDITIONAL DETAILS")

"^DD",811.8,811.80315,0,"UP")
811.8031
"^DD",811.8,811.80315,.01,0)
ADDITIONAL DETAILS^F^^0;1^K:$L(X)>80!($L(X)<1) X
"^DD",811.8,811.80315,.01,1,0)
^.1
"^DD",811.8,811.80315,.01,1,1,0)
811.80315^B
"^DD",811.8,811.80315,.01,1,1,1)
S ^PXD(811.8,DA(3),130,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",811.8,811.80315,.01,1,1,2)
K ^PXD(811.8,DA(3),130,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",811.8,811.80315,.01,3)
Answer must be 1-80 characters in length.
"^DD",811.8,811.80315,.01,21,0)
^^1^1^3010316^
"^DD",811.8,811.80315,.01,21,1,0)
This is a line of additional information.
"^DD",811.8,811.80315,.01,"DT")
3010313
"^DD",811.8,811.804,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.8,811.804,0,"DT")
3001221
"^DD",811.8,811.804,0,"NM","DESCRIPTION")

"^DD",811.8,811.804,0,"UP")
811.8
"^DD",811.8,811.804,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",811.8,811.804,.01,"DT")
3001221
"^DD",811.9,811.9,0)
FIELD^^7^36
"^DD",811.9,811.9,0,"DDA")
N
"^DD",811.9,811.9,0,"DT")
3010607
"^DD",811.9,811.9,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(811.9,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",811.9,811.9,0,"IX","AD",811.9,.01)

"^DD",811.9,811.9,0,"IX","AG",811.9,51)

"^DD",811.9,811.9,0,"IX","E",811.902,.01)

"^DD",811.9,811.9,0,"NM","REMINDER DEFINITION")

"^DD",811.9,811.9,0,"PT",142.14,.01)

"^DD",811.9,811.9,0,"PT",801.41,2)

"^DD",811.9,811.9,0,"PT",811.72,.01)

"^DD",811.9,811.9,0,"PT",811.9,1.4)

"^DD",811.9,811.9,0,"VRPK")
PXRM
"^DD",811.9,811.9,.01,0)
NAME^RFX^^0;1^K:$L(X)>35!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(X,811.9)) X
"^DD",811.9,811.9,.01,1,0)
^.1^^-1
"^DD",811.9,811.9,.01,1,2,0)
811.9^AD^MUMPS
"^DD",811.9,811.9,.01,1,2,1)
Q
"^DD",811.9,811.9,.01,1,2,2)
D DELEXTL^PXRMBXTL(DA)
"^DD",811.9,811.9,.01,1,2,"DT")
2980619
"^DD",811.9,811.9,.01,3)
Enter the name of the clinical reminder.
"^DD",811.9,811.9,.01,21,0)
^.001^8^8^3000505^^^^
"^DD",811.9,811.9,.01,21,1,0)
This field is the name of a clinical reminder definition. Nationally
"^DD",811.9,811.9,.01,21,2,0)
distributed reminder definition names are prefixed with "VA-". The VA-
"^DD",811.9,811.9,.01,21,3,0)
prefixed reminder definitions cannot be altered by a site, but may be
"^DD",811.9,811.9,.01,21,4,0)
inactivated so they will not be selectable.
"^DD",811.9,811.9,.01,21,5,0)
 
"^DD",811.9,811.9,.01,21,6,0)
Local modifications can be made to any "VA-" reminder definition by
"^DD",811.9,811.9,.01,21,7,0)
copying the definition to a new one with a unique name and then making
"^DD",811.9,811.9,.01,21,8,0)
modifications to the new definition which meet local criteria.
"^DD",811.9,811.9,.01,23,0)
^.001^6^6^3000505^^^^
"^DD",811.9,811.9,.01,23,1,0)
Reminders created by a site are stored at internal entry numbers
"^DD",811.9,811.9,.01,23,2,0)
consisting of the primary facilities institution number concatenated
"^DD",811.9,811.9,.01,23,3,0)
with an incremented unique number beginning with "000".  
"^DD",811.9,811.9,.01,23,4,0)
 
"^DD",811.9,811.9,.01,23,5,0)
Any entries in the file preceding 100000 will not be alterable by a
"^DD",811.9,811.9,.01,23,6,0)
site. These are the nationally distributed reminders.
"^DD",811.9,811.9,.01,"DT")
3000601
"^DD",811.9,811.9,1.2,0)
PRINT NAME^F^^0;3^K:$L(X)>35!($L(X)<3) X
"^DD",811.9,811.9,1.2,1,0)
^.1^^0
"^DD",811.9,811.9,1.2,3)
Enter the print name.
"^DD",811.9,811.9,1.2,21,0)
^^2^2^3000426^
"^DD",811.9,811.9,1.2,21,1,0)
This is the name that is used when the results of a reminder evaluation
"^DD",811.9,811.9,1.2,21,2,0)
are displayed.
"^DD",811.9,811.9,1.2,"DT")
3000216
"^DD",811.9,811.9,1.3,0)
DO IN ADVANCE TIME FRAME^FX^^0;4^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.9,811.9,1.3,3)
Enter time period to mark the reminder due in advance (e.g., 6M,1Y).
"^DD",811.9,811.9,1.3,21,0)
^.001^6^6^3000503^^
"^DD",811.9,811.9,1.3,21,1,0)
This field is used to let a reminder become due earlier than the date
"^DD",811.9,811.9,1.3,21,2,0)
determined by adding the frequency to the date when the reminder was
"^DD",811.9,811.9,1.3,21,3,0)
last resolved. For example, if the frequency is 1Y (one year) and the
"^DD",811.9,811.9,1.3,21,4,0)
DO IN ADVANCE TIME FRAME is 1M (one month) the reminder would have a
"^DD",811.9,811.9,1.3,21,5,0)
status of "DUE SOON" 11 months after it was last resolved. After one
"^DD",811.9,811.9,1.3,21,6,0)
year has passed the STATUS would be "DUE."
"^DD",811.9,811.9,1.3,"DT")
3000427
"^DD",811.9,811.9,1.4,0)
RELATED REMINDER GUIDELINE^*P811.9^PXD(811.9,^0;5^S DIC("S")="I $E($P(^(0),U,1),1,4)=""VA-*""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",811.9,811.9,1.4,3)
Enter the related national standard reminder if this reminder replaces the standard.
"^DD",811.9,811.9,1.4,12)
Look-up on National standard reminders for Congressional reporting
"^DD",811.9,811.9,1.4,12.1)
S DIC("S")="I $E($P(^(0),U,1),1,4)=""VA-*"""
"^DD",811.9,811.9,1.4,21,0)
^.001^9^9^3010223^^^^
"^DD",811.9,811.9,1.4,21,1,0)
If this local reminder replaces an NCHP related reminder, then identify
"^DD",811.9,811.9,1.4,21,2,0)
the related NCHP reminder here.
"^DD",811.9,811.9,1.4,21,3,0)
 
"^DD",811.9,811.9,1.4,21,4,0)
The National Center for Health Promotion (NCHP) has identified
"^DD",811.9,811.9,1.4,21,5,0)
reminders which must be tracked at local facilities and reported on to
"^DD",811.9,811.9,1.4,21,6,0)
Congress. The reminders that address the NCHP reminders are prefixed
"^DD",811.9,811.9,1.4,21,7,0)
with "VA-*".  These reminders may be used in the Health Summary
"^DD",811.9,811.9,1.4,21,8,0)
Components, or replaced by a local reminder that also satisfies the
"^DD",811.9,811.9,1.4,21,9,0)
NCHP guideline. 
"^DD",811.9,811.9,1.4,"DT")
2970509
"^DD",811.9,811.9,1.6,0)
INACTIVE FLAG^SX^1:INACTIVE;^0;6^Q
"^DD",811.9,811.9,1.6,1,0)
^.1
"^DD",811.9,811.9,1.6,1,1,0)
^^TRIGGER^811.9^1.7
"^DD",811.9,811.9,1.6,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^PXD(811.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y X ^DD(811.9,1.6,1,1,1.1) X ^DD(811.9,1.6,1,1,1.4)
"^DD",811.9,811.9,1.6,1,1,1.1)
S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
"^DD",811.9,811.9,1.6,1,1,1.4)
S DIH=$S($D(^PXD(811.9,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=811.9,DIG=1.7 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",811.9,811.9,1.6,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^PXD(811.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y X ^DD(811.9,1.6,1,1,2.1) X ^DD(811.9,1.6,1,1,2.4)
"^DD",811.9,811.9,1.6,1,1,2.1)
S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
"^DD",811.9,811.9,1.6,1,1,2.4)
S DIH=$S($D(^PXD(811.9,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=811.9,DIG=1.7 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",811.9,811.9,1.6,1,1,"CREATE VALUE")
NOW
"^DD",811.9,811.9,1.6,1,1,"DELETE VALUE")
NOW
"^DD",811.9,811.9,1.6,1,1,"DT")
2971008
"^DD",811.9,811.9,1.6,1,1,"FIELD")
INACTIVE DATE
"^DD",811.9,811.9,1.6,3)
Enter "1" to inactivate the reminder.
"^DD",811.9,811.9,1.6,21,0)
^.001^6^6^3000503^^^^
"^DD",811.9,811.9,1.6,21,1,0)
Reminders that are inactive will not be evaluated. The Clinical
"^DD",811.9,811.9,1.6,21,2,0)
Maintenance component will return a message stating the reminder is
"^DD",811.9,811.9,1.6,21,3,0)
inactive and the date when it was made inactive.
"^DD",811.9,811.9,1.6,21,4,0)

"^DD",811.9,811.9,1.6,21,5,0)
Other applications that use reminders may use this flag to determine if
"^DD",811.9,811.9,1.6,21,6,0)
a reminder can be selected for inclusion.
"^DD",811.9,811.9,1.6,23,0)
^^7^7^3000503^
"^DD",811.9,811.9,1.6,23,1,0)
When a reminder is inactive the following will occur:
"^DD",811.9,811.9,1.6,23,2,0)
1. It cannot be selected for inclusion on a Health Summary. (Other
"^DD",811.9,811.9,1.6,23,3,0)
packages that use Reminders should follow this rule.)
"^DD",811.9,811.9,1.6,23,4,0)
2. In the Clinical Maintenance mode a message will be returned stating the
"^DD",811.9,811.9,1.6,23,5,0)
reminder is inactive along with the date and time when it was made
"^DD",811.9,811.9,1.6,23,6,0)
inactive.
"^DD",811.9,811.9,1.6,23,7,0)
3. In any other mode nothing will be returned.
"^DD",811.9,811.9,1.6,"DT")
2971008
"^DD",811.9,811.9,1.7,0)
INACTIVE CHANGE DATE^DX^^0;7^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",811.9,811.9,1.7,5,1,0)
811.9^1.6^1
"^DD",811.9,811.9,1.7,9)
^
"^DD",811.9,811.9,1.7,21,0)
^.001^2^2^3000428^^
"^DD",811.9,811.9,1.7,21,1,0)
This is the date and time when the INACTIVE FLAG was last changed. It
"^DD",811.9,811.9,1.7,21,2,0)
is set automatically. Users should never edit this field.
"^DD",811.9,811.9,1.7,23,0)
^.001^1^1^3000428^^
"^DD",811.9,811.9,1.7,23,1,0)
This field is set by a trigger on INACTIVE FLAG.
"^DD",811.9,811.9,1.7,"DT")
2971008
"^DD",811.9,811.9,1.8,0)
IGNORE ON N/A^FX^^0;8^S X=$$UP^XLFSTR(X) K:'$$VIGNAC^PXRMINTR(X) X
"^DD",811.9,811.9,1.8,3)
Input a string of N/A code(s)
"^DD",811.9,811.9,1.8,21,0)
^.001^10^10^3000428^^^^
"^DD",811.9,811.9,1.8,21,1,0)
This field allows the user to stop reminders from being printed in the
"^DD",811.9,811.9,1.8,21,2,0)
Clinical Maintenance component if the reminder is N/A. This is free
"^DD",811.9,811.9,1.8,21,3,0)
text field that can contain any combination of the following codes:
"^DD",811.9,811.9,1.8,21,4,0)
 
"^DD",811.9,811.9,1.8,21,5,0)
Code  Description
"^DD",811.9,811.9,1.8,21,6,0)
 A    N/A due to not meeting age criteria.
"^DD",811.9,811.9,1.8,21,7,0)
 I    N/A due to inactive reminder.
"^DD",811.9,811.9,1.8,21,8,0)
 R    N/A due to the wrong race.
"^DD",811.9,811.9,1.8,21,9,0)
 S    N/A due to the wrong sex.
"^DD",811.9,811.9,1.8,21,10,0)
 *    N/A for any reason.
"^DD",811.9,811.9,1.8,"DT")
2991103
"^DD",811.9,811.9,1.9,0)
SEX SPECIFIC^S^F:FEMALE;M:MALE;^0;9^Q
"^DD",811.9,811.9,1.9,3)
Enter M or F if this reminder is sex specific.
"^DD",811.9,811.9,1.9,21,0)
^.001^5^5^3000428^^^^
"^DD",811.9,811.9,1.9,21,1,0)
This field is used to make a reminder sex specific. If an "F" is
"^DD",811.9,811.9,1.9,21,2,0)
entered the reminder applies only to females. If an "M" is entered the
"^DD",811.9,811.9,1.9,21,3,0)
reminder applies only to males. If it is left blank then the reminder
"^DD",811.9,811.9,1.9,21,4,0)
is applicable to either sex.
"^DD",811.9,811.9,1.9,21,5,0)

"^DD",811.9,811.9,1.9,"DT")
2951109
"^DD",811.9,811.9,1.91,0)
PRIORITY^S^1:HIGH;2:MEDIUM;3:LOW;^0;10^Q
"^DD",811.9,811.9,1.91,3)
Enter the reminder priority.
"^DD",811.9,811.9,1.91,21,0)
^.001^1^1^3000428^^^^
"^DD",811.9,811.9,1.91,21,1,0)
The reminder priority is used by the CPRS GUI for sorting purposes.
"^DD",811.9,811.9,1.91,"DT")
2990716
"^DD",811.9,811.9,2,0)
REMINDER DESCRIPTION^811.92^^1;0
"^DD",811.9,811.9,2,21,0)
^.001^1^1^3000428^^^^
"^DD",811.9,811.9,2,21,1,0)
This field contains a clinical description of the clinical reminder.
"^DD",811.9,811.9,2,"DT")
2960131
"^DD",811.9,811.9,3,0)
TECHNICAL DESCRIPTION^811.93^^2;0
"^DD",811.9,811.9,3,21,0)
^.001^2^2^3000428^^^^
"^DD",811.9,811.9,3,21,1,0)
The technical description describes how a reminder is supposed to work and
"^DD",811.9,811.9,3,21,2,0)
why the definition is set up the way it is.
"^DD",811.9,811.9,3,"DT")
2960131
"^DD",811.9,811.9,7,0)
BASELINE AGE FINDINGS^811.97^^7;0
"^DD",811.9,811.9,7,21,0)
^.001^2^2^3010302^^^^
"^DD",811.9,811.9,7,21,1,0)
This allows the user to define reminder frequencies for age ranges. An
"^DD",811.9,811.9,7,21,2,0)
age range is defined by a minimum and maximum age (in years).
"^DD",811.9,811.9,7,"DT")
2970711
"^DD",811.9,811.9,20,0)
FINDINGS^811.902V^^20;0
"^DD",811.9,811.9,20,21,0)
^.001^17^17^3010607^^^^
"^DD",811.9,811.9,20,21,1,0)
This multiple identifies which finding items to use when evaluating the
"^DD",811.9,811.9,20,21,2,0)
reminder. Finding items may be categorized into 3 types of findings
"^DD",811.9,811.9,20,21,3,0)
(patient cohort, resolution, or informational). How patient findings
"^DD",811.9,811.9,20,21,4,0)
will be used depends on the additional fields defined, or not defined,
"^DD",811.9,811.9,20,21,5,0)
for the finding items:
"^DD",811.9,811.9,20,21,6,0)
 
"^DD",811.9,811.9,20,21,7,0)
1. To define a finding item to use in the patient cohort logic, add
"^DD",811.9,811.9,20,21,8,0)
the finding item and define its USE IN PATIENT COHORT LOGIC field.
"^DD",811.9,811.9,20,21,9,0)
 
"^DD",811.9,811.9,20,21,10,0)
2. To define a finding item to use in the resolution logic, add the
"^DD",811.9,811.9,20,21,11,0)
finding item and define its USE IN RESOLUTION LOGIC field.
"^DD",811.9,811.9,20,21,12,0)
 
"^DD",811.9,811.9,20,21,13,0)
3. To define a finding item to use for information only, leave the USE IN
"^DD",811.9,811.9,20,21,14,0)
PATIENT COHORT LOGIC and USE IN RESOLUTION LOGIC fields blank.
"^DD",811.9,811.9,20,21,15,0)
 
"^DD",811.9,811.9,20,21,16,0)
Any type of finding above can be used to override the baseline frequency
"^DD",811.9,811.9,20,21,17,0)
age range set.
"^DD",811.9,811.9,20,"DT")
2990702
"^DD",811.9,811.9,30,0)
CUSTOMIZED COHORT LOGIC^FX^^30;1^K:'$$VALID^PXRMLOG(X,3,245) X
"^DD",811.9,811.9,30,.1)
CUSTOMIZED PATIENT COHORT LOGIC (OPTIONAL)
"^DD",811.9,811.9,30,1,0)
^.1^^0
"^DD",811.9,811.9,30,3)
Enter a Boolean string from 3-245 characters that uses findings to define the patient cohort.
"^DD",811.9,811.9,30,21,0)
^.001^12^12^3010302^^^
"^DD",811.9,811.9,30,21,1,0)
This field may be optionally used to define a customized Boolean logic
"^DD",811.9,811.9,30,21,2,0)
string that defines how and what findings in a reminder should be used
"^DD",811.9,811.9,30,21,3,0)
to determine if the reminder applies to the patient. The INTERNAL
"^DD",811.9,811.9,30,21,4,0)
PATIENT COHORT LOGIC field is automatically defined for you based on
"^DD",811.9,811.9,30,21,5,0)
the USE IN PATIENT COHORT LOGIC fields on findings. The customized
"^DD",811.9,811.9,30,21,6,0)
logic is used when the USE IN PATIENT COHORT LOGIC fields associated
"^DD",811.9,811.9,30,21,7,0)
with each finding do not provide the ability to create the required
"^DD",811.9,811.9,30,21,8,0)
logic string. (e.g., grouping various findings within parenthesis)
"^DD",811.9,811.9,30,21,9,0)
 
"^DD",811.9,811.9,30,21,10,0)
Tip:  Before defining the Boolean string, review the default logic
"^DD",811.9,811.9,30,21,11,0)
defined in the INTERNAL PATIENT COHORT LOGIC field using the reminder
"^DD",811.9,811.9,30,21,12,0)
inquiry option.
"^DD",811.9,811.9,30,"DT")
3000504
"^DD",811.9,811.9,31,0)
INTERNAL PATIENT COHORT LOGIC^FX^^31;1^K:$L(X)>245!($L(X)<3) X
"^DD",811.9,811.9,31,3)
Do not edit this field.
"^DD",811.9,811.9,31,21,0)
^.001^2^2^3000503^^^
"^DD",811.9,811.9,31,21,1,0)
This filed is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,31,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,31,23,0)
^.001^4^4^3000503^^^
"^DD",811.9,811.9,31,23,1,0)
This field is computed by the Clinical Reminders software. If there is
"^DD",811.9,811.9,31,23,2,0)
a user input Patient Cohort Logic then it is copied into this field.
"^DD",811.9,811.9,31,23,3,0)
Otherwise this field is determined using the USE IN PATIENT COHORT
"^DD",811.9,811.9,31,23,4,0)
LOGIC fields for each finding in the reminder definition.
"^DD",811.9,811.9,31,"DT")
2990928
"^DD",811.9,811.9,32,0)
PATIENT COHORT FINDINGS COUNT^NJ2,0^^32;1^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,32,3)
Do not edit this field.
"^DD",811.9,811.9,32,21,0)
^.001^2^2^3000503^^^
"^DD",811.9,811.9,32,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,32,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,32,23,0)
^.001^3^3^3000503^^^
"^DD",811.9,811.9,32,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,32,23,2,0)
the number of findings that are in the INTERNAL PATIENT COHORT LOGIC
"^DD",811.9,811.9,32,23,3,0)
field.
"^DD",811.9,811.9,32,"DT")
2990421
"^DD",811.9,811.9,33,0)
PATIENT COHORT FINDINGS LIST^F^^32;2^K:$L(X)>243!($L(X)<1) X
"^DD",811.9,811.9,33,3)
Do not edit this field.
"^DD",811.9,811.9,33,21,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,33,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,33,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,33,23,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,33,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,33,23,2,0)
a list of the findings in the INTERNAL PATIENT COHORT LOGIC field.
"^DD",811.9,811.9,33,"DT")
3000301
"^DD",811.9,811.9,34,0)
CUSTOMIZED RESOLUTION LOGIC^FX^^34;1^K:'$$VALID^PXRMLOG(X,5,245) X
"^DD",811.9,811.9,34,.1)
CUSTOMIZED RESOLUTION LOGIC (OPTIONAL)
"^DD",811.9,811.9,34,1,0)
^.1^^0
"^DD",811.9,811.9,34,3)
Enter a Boolean string from 3-245 characters that includes findings that resolve the reminder.
"^DD",811.9,811.9,34,21,0)
^.001^12^12^3010302^^^
"^DD",811.9,811.9,34,21,1,0)
This field may be used to define a customized Boolean logic string that
"^DD",811.9,811.9,34,21,2,0)
defines how and what reminder findings should be used to determine
"^DD",811.9,811.9,34,21,3,0)
if the reminder has been resolved. The INTERNAL RESOLUTION LOGIC field
"^DD",811.9,811.9,34,21,4,0)
is automatically defined for you based on the USE IN RESOLUTION LOGIC
"^DD",811.9,811.9,34,21,5,0)
fields on findings. The customized logic is used when the USE IN
"^DD",811.9,811.9,34,21,6,0)
RESOLUTION LOGIC fields associated with each finding do not provide the
"^DD",811.9,811.9,34,21,7,0)
ability to create the required logic string. (e.g., grouping various
"^DD",811.9,811.9,34,21,8,0)
findings within parenthesis)
"^DD",811.9,811.9,34,21,9,0)
 
"^DD",811.9,811.9,34,21,10,0)
Tip:  Before defining the Boolean string, review the default logic
"^DD",811.9,811.9,34,21,11,0)
defined in the INTERNAL RESOLUTION LOGIC field using the reminder
"^DD",811.9,811.9,34,21,12,0)
inquiry option.
"^DD",811.9,811.9,34,"DT")
3000504
"^DD",811.9,811.9,35,0)
INTERNAL RESOLUTION LOGIC^F^^35;1^K:$L(X)>245!($L(X)<5) X
"^DD",811.9,811.9,35,3)
Do not edit this field.
"^DD",811.9,811.9,35,21,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,35,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,35,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,35,23,0)
^.001^4^4^3000503^^
"^DD",811.9,811.9,35,23,1,0)
This field is computed by the Clinical Reminders software. If there is
"^DD",811.9,811.9,35,23,2,0)
a user input Resolution Logic then it is copied into this field.
"^DD",811.9,811.9,35,23,3,0)
Otherwise this field is determined using the USE IN RESOLUTION
"^DD",811.9,811.9,35,23,4,0)
LOGIC fields for each finding in the reminder definition.
"^DD",811.9,811.9,35,"DT")
2990420
"^DD",811.9,811.9,36,0)
RESOLUTION FINDINGS COUNT^NJ2,0^^36;1^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,36,3)
Do not edit this field.
"^DD",811.9,811.9,36,21,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,36,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,36,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,36,23,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,36,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,36,23,2,0)
the number of findings in the INTERNAL RESOLUTION LOGIC field.
"^DD",811.9,811.9,36,"DT")
2990421
"^DD",811.9,811.9,37,0)
RESOLUTION FINDINGS LIST^F^^36;2^K:$L(X)>243!($L(X)<1) X
"^DD",811.9,811.9,37,3)
Do not edit this field.
"^DD",811.9,811.9,37,21,0)
^.001^2^2^3000503^^^
"^DD",811.9,811.9,37,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,37,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,37,23,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,37,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,37,23,2,0)
the list of findings in the INTERNAL RESOLUTION LOGIC field.
"^DD",811.9,811.9,37,"DT")
2990421
"^DD",811.9,811.9,40,0)
AGE FINDINGS COUNT^NJ2,0^^40;1^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,40,3)
Do not edit this field.
"^DD",811.9,811.9,40,21,0)
^^2^2^3000501^
"^DD",811.9,811.9,40,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,40,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,40,23,0)
^^3^3^3000501^
"^DD",811.9,811.9,40,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,40,23,2,0)
the number of findings that can override the baseline age range frequency
"^DD",811.9,811.9,40,23,3,0)
set. It should never be edited by hand.
"^DD",811.9,811.9,40,"DT")
2990421
"^DD",811.9,811.9,41,0)
AGE FINDINGS LIST^F^^40;2^K:$L(X)>243!($L(X)<1) X
"^DD",811.9,811.9,41,3)
Do not edit this field.
"^DD",811.9,811.9,41,21,0)
^^2^2^3000501^
"^DD",811.9,811.9,41,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,41,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,41,23,0)
^^3^3^3000501^
"^DD",811.9,811.9,41,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,41,23,2,0)
a list of the findings that can override the baseline age range frequency.
"^DD",811.9,811.9,41,23,3,0)
It should never be edited by hand.
"^DD",811.9,811.9,41,"DT")
2990415
"^DD",811.9,811.9,42,0)
INFORMATION FINDINGS COUNT^NJ2,0^^42;1^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,42,3)
Do not edit this field.
"^DD",811.9,811.9,42,21,0)
^.001^2^2^3000501^^
"^DD",811.9,811.9,42,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,42,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,42,23,0)
^.001^3^3^3000501^^
"^DD",811.9,811.9,42,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,42,23,2,0)
the number of findings that are information only. It should never be edited
"^DD",811.9,811.9,42,23,3,0)
by hand.
"^DD",811.9,811.9,42,"DT")
2990421
"^DD",811.9,811.9,43,0)
INFORMATION FINDINGS LIST^F^^42;2^K:$L(X)>243!($L(X)<1) X
"^DD",811.9,811.9,43,3)
Do not edit this field.
"^DD",811.9,811.9,43,21,0)
^.001^2^2^3000503^^^
"^DD",811.9,811.9,43,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,43,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,43,23,0)
^.001^2^2^3000503^^^
"^DD",811.9,811.9,43,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,43,23,2,0)
the number of findings. It should never be edited by hand.
"^DD",811.9,811.9,43,"DT")
2990421
"^DD",811.9,811.9,50,0)
WEB SITES^811.9002^^50;0
"^DD",811.9,811.9,50,21,0)
^.001^1^1^3010302^^^^
"^DD",811.9,811.9,50,21,1,0)
This multiple contains Web site(s) for information related to this reminder.
"^DD",811.9,811.9,50,"DT")
2991129
"^DD",811.9,811.9,51,0)
LINKED REMINDER DIALOG^*P801.41'^PXRMD(801.41,^51;1^S DIC("S")="I $P(^(0),U,4)=""R""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",811.9,811.9,51,1,0)
^.1
"^DD",811.9,811.9,51,1,1,0)
811.9^AG
"^DD",811.9,811.9,51,1,1,1)
S ^PXD(811.9,"AG",$E(X,1,30),DA)=""
"^DD",811.9,811.9,51,1,1,2)
K ^PXD(811.9,"AG",$E(X,1,30),DA)
"^DD",811.9,811.9,51,1,1,"DT")
2991005
"^DD",811.9,811.9,51,3)
Enter dialog to be used in CPRS to resolve this reminder. 
"^DD",811.9,811.9,51,12)
Reminders may only point to reminder dialog entries
"^DD",811.9,811.9,51,12.1)
S DIC("S")="I $P(^(0),U,4)=""R"""
"^DD",811.9,811.9,51,21,0)
^.001^2^2^3000505^^
"^DD",811.9,811.9,51,21,1,0)
This is the Reminder Dialog that will be used when the reminder is
"^DD",811.9,811.9,51,21,2,0)
processed in the CPRS GUI.
"^DD",811.9,811.9,51,"DT")
3000423
"^DD",811.9,811.9,60,0)
GENERAL COHORT FOUND TEXT^811.9003^^60;0
"^DD",811.9,811.9,60,21,0)
^^5^5^3000505^
"^DD",811.9,811.9,60,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.9,60,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.9,60,21,3,0)
made the Patient Cohort Logic true.  This is general text, not specific to
"^DD",811.9,811.9,60,21,4,0)
a finding, that will display when the patient is found to be in the
"^DD",811.9,811.9,60,21,5,0)
patient cohort.
"^DD",811.9,811.9,60,"DT")
3000504
"^DD",811.9,811.9,61,0)
GENERAL COHORT NOT FOUND TEXT^811.961^^61;0
"^DD",811.9,811.9,61,21,0)
^^5^5^3000505^
"^DD",811.9,811.9,61,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.9,61,21,2,0)
component when the patient's findings during reminder evaluation made the
"^DD",811.9,811.9,61,21,3,0)
Patient Cohort Logic false. This is general text, not specific to a
"^DD",811.9,811.9,61,21,4,0)
finding, that will display when the patient is not found to be in the
"^DD",811.9,811.9,61,21,5,0)
patient cohort.
"^DD",811.9,811.9,61,"DT")
3000504
"^DD",811.9,811.9,65,0)
GENERAL RESOLUTION FOUND TEXT^811.965^^65;0
"^DD",811.9,811.9,65,21,0)
^^5^5^3000505^
"^DD",811.9,811.9,65,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.9,65,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.9,65,21,3,0)
made the Resolution Logic true.  This is general text, not specific to
"^DD",811.9,811.9,65,21,4,0)
a finding, that will display when the patient's findings resolve the
"^DD",811.9,811.9,65,21,5,0)
reminder.
"^DD",811.9,811.9,65,"DT")
3000504
"^DD",811.9,811.9,66,0)
GENERAL RESOL NOT FOUND TEXT^811.966^^66;0
"^DD",811.9,811.9,66,21,0)
^.001^4^4^3000505^^
"^DD",811.9,811.9,66,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.9,66,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.9,66,21,3,0)
made the Resolution Logic false.  This is general text, not specific to
"^DD",811.9,811.9,66,21,4,0)
a finding, that will display when the reminder has not been resolved.
"^DD",811.9,811.9,66,"DT")
3000504
"^DD",811.9,811.9,100,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^100;1^K:'$$VCLASS^PXRMINTR(X) X
"^DD",811.9,811.9,100,3)
Enter the class.
"^DD",811.9,811.9,100,21,0)
^.001^1^1^3010518^^^^
"^DD",811.9,811.9,100,21,1,0)
This is the class of definition. National definitions cannot edited.
"^DD",811.9,811.9,100,"DT")
3010518
"^DD",811.9,811.9,101,0)
SPONSOR^P811.6X^PXRMD(811.6,^100;2^K:'$$VSPONSOR^PXRMINTR(X) X
"^DD",811.9,811.9,101,3)
Enter the sponsor.
"^DD",811.9,811.9,101,21,0)
^^1^1^3010501^
"^DD",811.9,811.9,101,21,1,0)
This is the organization or group that sponsors this definition.
"^DD",811.9,811.9,101,"DT")
3010604
"^DD",811.9,811.9,102,0)
REVIEW DATE^D^^100;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",811.9,811.9,102,3)
Enter the review date.
"^DD",811.9,811.9,102,21,0)
^.001^3^3^3010501^^^
"^DD",811.9,811.9,102,21,1,0)
The REVIEW DATE is used to determine when the definition should be
"^DD",811.9,811.9,102,21,2,0)
reviewed to verify that it is current with the latest standards and
"^DD",811.9,811.9,102,21,3,0)
guidelines.
"^DD",811.9,811.9,102,"DT")
3010416
"^DD",811.9,811.9,103,0)
USAGE^RFX^^100;4^S X=$$UP^XLFSTR(X) K:'$$VUSAGE^PXRMINTR(X) X
"^DD",811.9,811.9,103,3)
Enter Usage codes.
"^DD",811.9,811.9,103,21,0)
^^11^11^3010606^
"^DD",811.9,811.9,103,21,1,0)
The USAGE field describes how the reminder definition will be used. This
"^DD",811.9,811.9,103,21,2,0)
field must contain C if the reminder is to be selected in CPRS.
"^DD",811.9,811.9,103,21,3,0)
 
"^DD",811.9,811.9,103,21,4,0)
This is free text field and can contain any combination of the following
"^DD",811.9,811.9,103,21,5,0)
codes: 
"^DD",811.9,811.9,103,21,6,0)
                                 
"^DD",811.9,811.9,103,21,7,0)
             Code  Usage 
"^DD",811.9,811.9,103,21,8,0)
              C    CPRS  
"^DD",811.9,811.9,103,21,9,0)
              R    Reminder Reports  
"^DD",811.9,811.9,103,21,10,0)
              X    Reminder Extracts  
"^DD",811.9,811.9,103,21,11,0)
              *    All of the above 
"^DD",811.9,811.9,103,"DT")
3010606
"^DD",811.9,811.9,110,0)
EDIT HISTORY^811.9001D^^110;0
"^DD",811.9,811.9,110,21,0)
^.001^2^2^3010502^^^^
"^DD",811.9,811.9,110,21,1,0)
This multiple is used to record a history of changes made to the
"^DD",811.9,811.9,110,21,2,0)
definition.
"^DD",811.9,811.9001,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",811.9,811.9001,0,"DT")
3010416
"^DD",811.9,811.9001,0,"IX","B",811.9001,.01)

"^DD",811.9,811.9001,0,"NM","EDIT HISTORY")

"^DD",811.9,811.9001,0,"UP")
811.9
"^DD",811.9,811.9001,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",811.9,811.9001,.01,1,0)
^.1
"^DD",811.9,811.9001,.01,1,1,0)
811.9001^B
"^DD",811.9,811.9001,.01,1,1,1)
S ^PXD(811.9,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.9001,.01,1,1,2)
K ^PXD(811.9,DA(1),110,"B",$E(X,1,30),DA)
"^DD",811.9,811.9001,.01,21,0)
^^2^2^3010501^
"^DD",811.9,811.9001,.01,21,1,0)
This is the date and time when the editing was done. This field is set
"^DD",811.9,811.9001,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",811.9,811.9001,.01,"DT")
3010416
"^DD",811.9,811.9001,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",811.9,811.9001,1,21,0)
^.001^2^2^3010501^^
"^DD",811.9,811.9001,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",811.9,811.9001,1,21,2,0)
and should not be changed by the user.
"^DD",811.9,811.9001,1,"DT")
3010416
"^DD",811.9,811.9001,2,0)
EDIT COMMENTS^811.90012^^1;0
"^DD",811.9,811.9001,2,21,0)
^.001^2^2^3010502^^^^
"^DD",811.9,811.9001,2,21,1,0)
This word-processing field can be used to record the changes made
"^DD",811.9,811.9001,2,21,2,0)
during the editing session.
"^DD",811.9,811.9001,2,"DT")
3010425
"^DD",811.9,811.90012,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",811.9,811.90012,0,"DT")
3010416
"^DD",811.9,811.90012,0,"NM","EDIT COMMENTS")

"^DD",811.9,811.90012,0,"UP")
811.9001
"^DD",811.9,811.90012,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",811.9,811.90012,.01,3)
Enter your edit comments.
"^DD",811.9,811.90012,.01,"DT")
3010425
"^DD",811.9,811.9002,0)
WEB SITES SUB-FIELD^^1^3
"^DD",811.9,811.9002,0,"DT")
2991130
"^DD",811.9,811.9002,0,"IX","C",811.9002,.01)

"^DD",811.9,811.9002,0,"NM","WEB SITES")

"^DD",811.9,811.9002,0,"UP")
811.9
"^DD",811.9,811.9002,.01,0)
URL^MF^^0;1^K:$L(X)>128!($L(X)<1) X
"^DD",811.9,811.9002,.01,1,0)
^.1
"^DD",811.9,811.9002,.01,1,1,0)
811.9002^C
"^DD",811.9,811.9002,.01,1,1,1)
S ^PXD(811.9,DA(1),50,"C",$E(X,1,30),DA)=""
"^DD",811.9,811.9002,.01,1,1,2)
K ^PXD(811.9,DA(1),50,"C",$E(X,1,30),DA)
"^DD",811.9,811.9002,.01,1,1,"DT")
3010502
"^DD",811.9,811.9002,.01,3)
Answer must be 1-128 characters in length.
"^DD",811.9,811.9002,.01,21,0)
^.001^1^1^3000501^^^^
"^DD",811.9,811.9002,.01,21,1,0)
This is the URL for the web site.
"^DD",811.9,811.9002,.01,"DT")
3010502
"^DD",811.9,811.9002,.02,0)
WEB SITE TITLE^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",811.9,811.9002,.02,3)
Answer must be 1-60 characters in length.
"^DD",811.9,811.9002,.02,21,0)
^.001^2^2^3010302^^^
"^DD",811.9,811.9002,.02,21,1,0)
This is the web site title that is used by the CPRS GUI. It will appear
"^DD",811.9,811.9002,.02,21,2,0)
after a right click allowing the user to select the web site.
"^DD",811.9,811.9002,.02,"DT")
2991130
"^DD",811.9,811.9002,1,0)
WEB SITE DESCRIPTION^811.90021^^1;0
"^DD",811.9,811.9002,1,21,0)
^.001^1^1^3010302^^^
"^DD",811.9,811.9002,1,21,1,0)
This field contains a description of the Web site.
"^DD",811.9,811.90021,0)
WEB SITE DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.9,811.90021,0,"DT")
2991130
"^DD",811.9,811.90021,0,"NM","WEB SITE DESCRIPTION")

"^DD",811.9,811.90021,0,"UP")
811.9002
"^DD",811.9,811.90021,.01,0)
WEB SITE DESCRIPTION^W^^0;1^Q
"^DD",811.9,811.90021,.01,3)
Enter the Web site description.
"^DD",811.9,811.90021,.01,"DT")
2991130
"^DD",811.9,811.9003,0)
GENERAL COHORT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9003,0,"DT")
3000110
"^DD",811.9,811.9003,0,"NM","GENERAL COHORT FOUND TEXT")

"^DD",811.9,811.9003,0,"UP")
811.9
"^DD",811.9,811.9003,.01,0)
GENERAL COHORT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9003,.01,.1)
GENERAL PATIENT COHORT FOUND TEXT
"^DD",811.9,811.9003,.01,3)
Enter general text to display when the patient is found to be in the patient cohort.
"^DD",811.9,811.9003,.01,21,0)
^^5^5^3000505^
"^DD",811.9,811.9003,.01,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.9003,.01,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.9003,.01,21,3,0)
made the Patient Cohort Logic true.  This is general text, not specific to
"^DD",811.9,811.9003,.01,21,4,0)
a finding, that will display when the patient is found to be in the
"^DD",811.9,811.9003,.01,21,5,0)
patient cohort.
"^DD",811.9,811.9003,.01,"DT")
3000504
"^DD",811.9,811.902,0)
FINDINGS SUB-FIELD^^16^17
"^DD",811.9,811.902,0,"DT")
3010607
"^DD",811.9,811.902,0,"IX","B",811.902,.01)

"^DD",811.9,811.902,0,"NM","FINDINGS")

"^DD",811.9,811.902,0,"UP")
811.9
"^DD",811.9,811.902,.01,0)
FINDING ITEM^MVX^^0;1^K:'$$VFINDING^PXRMINTR(X) X
"^DD",811.9,811.902,.01,1,0)
^.1^^-1
"^DD",811.9,811.902,.01,1,1,0)
811.902^B
"^DD",811.9,811.902,.01,1,1,1)
S ^PXD(811.9,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.902,.01,1,1,2)
K ^PXD(811.9,DA(1),20,"B",$E(X,1,30),DA)
"^DD",811.9,811.902,.01,1,1,3)
Required Index for Variable Pointer
"^DD",811.9,811.902,.01,1,2,0)
811.9^E^MUMPS
"^DD",811.9,811.902,.01,1,2,1)
S ^PXD(811.9,DA(1),20,"E",$P(X,";",2),$P(X,";",1),DA)=""
"^DD",811.9,811.902,.01,1,2,2)
K ^PXD(811.9,DA(1),20,"E",$P(X,";",2),$P(X,";",1),DA)
"^DD",811.9,811.902,.01,1,2,"%D",0)
^^1^1^2990913^^^
"^DD",811.9,811.902,.01,1,2,"%D",1,0)
This cross-reference is used to group findings by type.
"^DD",811.9,811.902,.01,1,2,"DT")
2990401
"^DD",811.9,811.902,.01,3)
Enter a finding item in the format: Prefix.Name
"^DD",811.9,811.902,.01,21,0)
^.001^18^18^3010223^^^
"^DD",811.9,811.902,.01,21,1,0)
This field identifies finding items to use in the reminder evaluation
"^DD",811.9,811.902,.01,21,2,0)
process. A finding item may be used to determine the patient cohort,
"^DD",811.9,811.902,.01,21,3,0)
resolve the reminder, or provide information to the provider.
"^DD",811.9,811.902,.01,21,4,0)
 
"^DD",811.9,811.902,.01,21,5,0)
How this finding item will be used depends on the additional fields
"^DD",811.9,811.902,.01,21,6,0)
defined, or not defined, for this finding item:
"^DD",811.9,811.902,.01,21,7,0)

"^DD",811.9,811.902,.01,21,8,0)
1. To define a finding item to use in the patient cohort logic, add the
"^DD",811.9,811.902,.01,21,9,0)
finding item and define its USE IN PATIENT COHORT LOGIC field.
"^DD",811.9,811.902,.01,21,10,0)
 
"^DD",811.9,811.902,.01,21,11,0)
2. To define a finding item to use in the resolution logic, add the
"^DD",811.9,811.902,.01,21,12,0)
finding item and define its USE IN RESOLUTION LOGIC field.
"^DD",811.9,811.902,.01,21,13,0)
 
"^DD",811.9,811.902,.01,21,14,0)
3. To define a finding item to use for information only, leave the USE
"^DD",811.9,811.902,.01,21,15,0)
IN PATIENT COHORT LOGIC and USE IN RESOLUTION LOGIC fields blank.
"^DD",811.9,811.902,.01,21,16,0)
 
"^DD",811.9,811.902,.01,21,17,0)
This finding item can be used to override the baseline frequency age
"^DD",811.9,811.902,.01,21,18,0)
range set.
"^DD",811.9,811.902,.01,"DT")
3000503
"^DD",811.9,811.902,.01,"V",0)
^.12P^16^16
"^DD",811.9,811.902,.01,"V",1,0)
50^DRUG^5^DR^n^n
"^DD",811.9,811.902,.01,"V",2,0)
9999999.09^EDUCATION TOPIC^10^ED^n^n
"^DD",811.9,811.902,.01,"V",3,0)
9999999.15^EXAM^15^EX^n^n
"^DD",811.9,811.902,.01,"V",4,0)
9999999.64^HEALTH FACTOR^20^HF^n^n
"^DD",811.9,811.902,.01,"V",5,0)
9999999.14^IMMUNIZATION^25^IM^n^n
"^DD",811.9,811.902,.01,"V",6,0)
60^LABORATORY TEST^30^LT^n^n
"^DD",811.9,811.902,.01,"V",7,0)
601^MENTAL HEALTH INSTRUMENT^35^MH^n^n
"^DD",811.9,811.902,.01,"V",8,0)
101.43^ORDERABLE ITEM^40^OI^n^n
"^DD",811.9,811.902,.01,"V",9,0)
71^RADIOLOGY PROCEDURE^45^RP^n^n
"^DD",811.9,811.902,.01,"V",10,0)
811.4^REMINDER COMPUTED FINDING^50^CF^n^n
"^DD",811.9,811.902,.01,"V",11,0)
811.2^REMINDER TAXONOMY^55^TX^n^n
"^DD",811.9,811.902,.01,"V",12,0)
811.5^REMINDER TERM^60^RT^n^n
"^DD",811.9,811.902,.01,"V",13,0)
9999999.28^SKIN TEST^65^ST^n^n
"^DD",811.9,811.902,.01,"V",14,0)
50.605^VA DRUG CLASS^70^DC^n^n
"^DD",811.9,811.902,.01,"V",15,0)
50.6^VA GENERIC^75^DG^n^n
"^DD",811.9,811.902,.01,"V",16,0)
120.51^VITAL MEASUREMENT^80^VM^n^n
"^DD",811.9,811.902,1,0)
MINIMUM AGE^NJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,1,1,0)
^.1^^0
"^DD",811.9,811.902,1,3)
Enter the minimum age for the frequency associated with this finding.
"^DD",811.9,811.902,1,21,0)
^^2^2^3000428^
"^DD",811.9,811.902,1,21,1,0)
This field specifies the minimum age for defining an age range
"^DD",811.9,811.902,1,21,2,0)
associated with a frequency. Leave it blank if there is no minimum age.
"^DD",811.9,811.902,1,"DT")
2991027
"^DD",811.9,811.902,2,0)
MAXIMUM AGE^NJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,2,1,0)
^.1^^0
"^DD",811.9,811.902,2,3)
Enter the maximum age for the frequency associated with this finding.
"^DD",811.9,811.902,2,21,0)
^^2^2^3000428^
"^DD",811.9,811.902,2,21,1,0)
This field specifies the maximum age for defining an age range
"^DD",811.9,811.902,2,21,2,0)
associated with a frequency. Leave it blank if there is no maximum age.
"^DD",811.9,811.902,2,"DT")
2991027
"^DD",811.9,811.902,3,0)
REMINDER FREQUENCY^FX^^0;4^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.9,811.902,3,1,0)
^.1^^0
"^DD",811.9,811.902,3,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.902,3,21,0)
^.001^6^6^3000428^^
"^DD",811.9,811.902,3,21,1,0)
If this finding is true (found) then use this frequency and the age
"^DD",811.9,811.902,3,21,2,0)
range specified by the minimum and maximum ages to override the
"^DD",811.9,811.902,3,21,3,0)
baseline frequency age range set. The frequency is input as nD, nM, or
"^DD",811.9,811.902,3,21,4,0)
nY, where D stands for days, M for months, Y for years, and n is a
"^DD",811.9,811.902,3,21,5,0)
number. Thus, for a reminder that is to be given once a year, the
"^DD",811.9,811.902,3,21,6,0)
values 365D, 12M, or 1Y would all work.
"^DD",811.9,811.902,3,"DT")
3000427
"^DD",811.9,811.902,4,0)
FOUND TEXT^811.9024^^1;0
"^DD",811.9,811.902,4,21,0)
^.001^2^2^3000501^^
"^DD",811.9,811.902,4,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.902,4,21,2,0)
output if this finding is found (true).
"^DD",811.9,811.902,5,0)
NOT FOUND TEXT^811.9025^^2;0
"^DD",811.9,811.902,5,21,0)
^.001^2^2^3000501^^
"^DD",811.9,811.902,5,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.902,5,21,2,0)
output if the finding is not found (false).
"^DD",811.9,811.902,6,0)
RANK FREQUENCY^NJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,6,3)
Enter an optional rank from 1 to 999 or leave blank.
"^DD",811.9,811.902,6,21,0)
^.001^11^11^3000428^^^^
"^DD",811.9,811.902,6,21,1,0)
This field is used to rank the frequency and age range sets associated
"^DD",811.9,811.902,6,21,2,0)
with a finding. If there is more than one true finding that can
"^DD",811.9,811.902,6,21,3,0)
override the baseline frequency age range set then the determination of
"^DD",811.9,811.902,6,21,4,0)
which one to use is made based on the finding with the highest rank.
"^DD",811.9,811.902,6,21,5,0)
Ranks can range from 1 to 999 with 1 being the highest rank.
"^DD",811.9,811.902,6,21,6,0)
 
"^DD",811.9,811.902,6,21,7,0)
When the Rank field is blank (null) for all true findings that can
"^DD",811.9,811.902,6,21,8,0)
override the baseline frequency age range set then the frequency that
"^DD",811.9,811.902,6,21,9,0)
will cause the reminder to be given most often will be used. For
"^DD",811.9,811.902,6,21,10,0)
example, if finding 1 has a frequency of 6 months, and finding 2 has a
"^DD",811.9,811.902,6,21,11,0)
frequency of 1 year finding 1 will be used to override the baseline.
"^DD",811.9,811.902,6,"DT")
2990325
"^DD",811.9,811.902,7,0)
USE IN RESOLUTION LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;6^Q
"^DD",811.9,811.902,7,1,0)
^.1^^0
"^DD",811.9,811.902,7,3)
Enter the logic operator to be used in the default Internal Resolution Logic.
"^DD",811.9,811.902,7,21,0)
^.001^28^28^3010223^^
"^DD",811.9,811.902,7,21,1,0)
This optional field is used to indicate that this finding item should
"^DD",811.9,811.902,7,21,2,0)
be included as part of the default INTERNAL RESOLUTION LOGIC field for
"^DD",811.9,811.902,7,21,3,0)
this reminder. The INTERNAL RESOLUTION LOGIC, or the CUSTOMIZED
"^DD",811.9,811.902,7,21,4,0)
RESOLUTION LOGIC if defined, is used in the reminder evaluation process
"^DD",811.9,811.902,7,21,5,0)
to determine whether or not a reminder is resolved (satisfied).
"^DD",811.9,811.902,7,21,6,0)
 
"^DD",811.9,811.902,7,21,7,0)
Valid entries for the USE IN RESOLUTION LOGIC field are:
"^DD",811.9,811.902,7,21,8,0)
 
"^DD",811.9,811.902,7,21,9,0)
                       EQUATES TO BOOLEAN
"^DD",811.9,811.902,7,21,10,0)
  OPERATOR   VALUE     OPERATOR LOGIC
"^DD",811.9,811.902,7,21,11,0)
  --------   -----     ------------------
"^DD",811.9,811.902,7,21,12,0)
             BLANK     not included in Resolution Logic
"^DD",811.9,811.902,7,21,13,0)
                       (Use @ to delete value)
"^DD",811.9,811.902,7,21,14,0)
   &         AND       &(Finding)
"^DD",811.9,811.902,7,21,15,0)
   !         OR        !(Finding)
"^DD",811.9,811.902,7,21,16,0)
   &'        AND NOT   &'(Finding)
"^DD",811.9,811.902,7,21,17,0)
   !'        OR NOT    !'(Finding)
"^DD",811.9,811.902,7,21,18,0)
 
"^DD",811.9,811.902,7,21,19,0)
The finding item and operator are used to automatically create the
"^DD",811.9,811.902,7,21,20,0)
default resolution Boolean logic string.
"^DD",811.9,811.902,7,21,21,0)
 
"^DD",811.9,811.902,7,21,22,0)
Each finding is used in the evaluation process to find the most recent
"^DD",811.9,811.902,7,21,23,0)
entry for the finding. After all findings are evaluated, the Resolution
"^DD",811.9,811.902,7,21,24,0)
Logic is evaluated by logically combining the true (found) and false
"^DD",811.9,811.902,7,21,25,0)
(not found) values of the findings. If the Resolution Logic evaluates
"^DD",811.9,811.902,7,21,26,0)
to true then the reminder is considered to be resolved.
"^DD",811.9,811.902,7,21,27,0)
 
"^DD",811.9,811.902,7,21,28,0)
To see the INTERNAL RESOLUTION LOGIC, use the reminder inquiry option.
"^DD",811.9,811.902,7,"DT")
2991027
"^DD",811.9,811.902,8,0)
USE IN PATIENT COHORT LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;7^Q
"^DD",811.9,811.902,8,1,0)
^.1^^0
"^DD",811.9,811.902,8,3)
Enter the logic operator to be used in the default Internal Patient Cohort Logic
"^DD",811.9,811.902,8,21,0)
^.001^36^36^3010223^^
"^DD",811.9,811.902,8,21,1,0)
This optional field is used to indicate that this finding item should
"^DD",811.9,811.902,8,21,2,0)
be included as part of the default INTERNAL PATIENT COHORT LOGIC field
"^DD",811.9,811.902,8,21,3,0)
for this reminder. The INTERNAL PATIENT COHORT LOGIC, or the CUSTOMIZED
"^DD",811.9,811.902,8,21,4,0)
COHORT LOGIC if defined, is used in the reminder evaluation process to
"^DD",811.9,811.902,8,21,5,0)
determine whether or not a reminder is applicable to a patient.
"^DD",811.9,811.902,8,21,6,0)
 
"^DD",811.9,811.902,8,21,7,0)
Valid entries for the USE IN PATIENT COHORT LOGIC field are:
"^DD",811.9,811.902,8,21,8,0)
 
"^DD",811.9,811.902,8,21,9,0)
                     EQUATES TO BOOLEAN
"^DD",811.9,811.902,8,21,10,0)
  OPERATOR  VALUE     OPERATOR LOGIC
"^DD",811.9,811.902,8,21,11,0)
  --------  -----     ------------------
"^DD",811.9,811.902,8,21,12,0)
            BLANK     not included in Patient Cohort Logic
"^DD",811.9,811.902,8,21,13,0)
                      (Use @ to delete value)
"^DD",811.9,811.902,8,21,14,0)
   &        AND       &(Finding)
"^DD",811.9,811.902,8,21,15,0)
   !        OR        !(Finding)
"^DD",811.9,811.902,8,21,16,0)
   &'       AND NOT   &'(Finding)
"^DD",811.9,811.902,8,21,17,0)
   !'       OR NOT    !'(Finding)
"^DD",811.9,811.902,8,21,18,0)
 
"^DD",811.9,811.902,8,21,19,0)
The finding item and operator are used to automatically create the
"^DD",811.9,811.902,8,21,20,0)
default Boolean INTERNAL PATIENT COHORT LOGIC string. The default logic
"^DD",811.9,811.902,8,21,21,0)
string initially includes (SEX)&(AGE), regardless of whether the
"^DD",811.9,811.902,8,21,22,0)
baseline specifies SEX and AGE criteria. Each finding item with a value
"^DD",811.9,811.902,8,21,23,0)
in the USE IN PATIENT COHORT LOGIC field is appended to the string by
"^DD",811.9,811.902,8,21,24,0)
using the finding item and operator. For example if finding item 2 had
"^DD",811.9,811.902,8,21,25,0)
an operator for this field of "&" then the string would be
"^DD",811.9,811.902,8,21,26,0)
(SEX)&(AGE)&FI(2).
"^DD",811.9,811.902,8,21,27,0)
 
"^DD",811.9,811.902,8,21,28,0)
Each finding item is used in the evaluation process to find the most
"^DD",811.9,811.902,8,21,29,0)
recent entry for the finding. After all findings are evaluated, the
"^DD",811.9,811.902,8,21,30,0)
Patient Cohort Logic is evaluated by logically combining the true
"^DD",811.9,811.902,8,21,31,0)
(found) and false (not found) values of the finding items. If the
"^DD",811.9,811.902,8,21,32,0)
Patient Cohort Logic evaluates to true then the patient is in the
"^DD",811.9,811.902,8,21,33,0)
cohort and the reminder is applicable to the patient.
"^DD",811.9,811.902,8,21,34,0)
      
"^DD",811.9,811.902,8,21,35,0)
To see the INTERNAL PATIENT COHORT LOGIC, use the reminder inquiry
"^DD",811.9,811.902,8,21,36,0)
option.
"^DD",811.9,811.902,8,"DT")
2991027
"^DD",811.9,811.902,9,0)
EFFECTIVE PERIOD^FX^^0;8^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.9,811.902,9,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.902,9,21,0)
^.001^5^5^3000821^^^^
"^DD",811.9,811.902,9,21,1,0)
This is the amount of time the finding will remain valid. For example,
"^DD",811.9,811.902,9,21,2,0)
if the EFFECTIVE PERIOD is 1Y and the date of the finding is less than
"^DD",811.9,811.902,9,21,3,0)
one year ago the finding will be true. If the date is more than a year
"^DD",811.9,811.902,9,21,4,0)
ago the finding will have expired and be false. If this field is left
"^DD",811.9,811.902,9,21,5,0)
empty then the finding never expires.
"^DD",811.9,811.902,9,"DT")
3000509
"^DD",811.9,811.902,10,0)
USE INACTIVE PROBLEMS^S^1:YES;0:N;^0;9^Q
"^DD",811.9,811.902,10,3)
Enter a 1 or YES if you want inactive problems used.
"^DD",811.9,811.902,10,21,0)
^.001^4^4^3000505^^^^
"^DD",811.9,811.902,10,21,1,0)
Normally only active problems from the Problem List will be used in the
"^DD",811.9,811.902,10,21,2,0)
reminder evaluation. If USE INACTIVE PROBLEMS is set to YES then both
"^DD",811.9,811.902,10,21,3,0)
active and inactive problems will be used. Note that this field applies
"^DD",811.9,811.902,10,21,4,0)
only to taxonomy findings.
"^DD",811.9,811.902,10,"DT")
2990325
"^DD",811.9,811.902,11,0)
WITHIN CATEGORY RANK^NJ3,0^^0;10^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,11,3)
Enter a number between 0 and 999.
"^DD",811.9,811.902,11,21,0)
^.001^16^16^3000505^^^
"^DD",811.9,811.902,11,21,1,0)
This field applies only to health factors. In order to understand how
"^DD",811.9,811.902,11,21,2,0)
it works, you need to understand how health factors work in the
"^DD",811.9,811.902,11,21,3,0)
reminder evaluation process. If you are not clear about this, see the
"^DD",811.9,811.902,11,21,4,0)
health factor section of the Clinical Reminder Manager Manual.
"^DD",811.9,811.902,11,21,5,0)

"^DD",811.9,811.902,11,21,6,0)
The default behavior is to use only the most recent health factor
"^DD",811.9,811.902,11,21,7,0)
within a category. A problem can arise if there are two or more health
"^DD",811.9,811.902,11,21,8,0)
factors within a category and they both have the same date. (This can
"^DD",811.9,811.902,11,21,9,0)
happen if both health factors are given during the same encounter). 
"^DD",811.9,811.902,11,21,10,0)
When the dates are the same, the health factor with the highest Within
"^DD",811.9,811.902,11,21,11,0)
Category Rank will be used. This is a numerical value like Rank
"^DD",811.9,811.902,11,21,12,0)
Frequency with 1 being the highest rank.
"^DD",811.9,811.902,11,21,13,0)

"^DD",811.9,811.902,11,21,14,0)
If WITHIN CATEGORY RANK has the special value of 0 then the
"^DD",811.9,811.902,11,21,15,0)
categorization of health factors will be ignored and the health factor
"^DD",811.9,811.902,11,21,16,0)
will be treated as a distinct finding.
"^DD",811.9,811.902,11,"DT")
3000501
"^DD",811.9,811.902,12,0)
EFFECTIVE DATE^D^^0;11^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",811.9,811.902,12,3)
Enter the EFFECTIVE DATE
"^DD",811.9,811.902,12,21,0)
^.001^2^2^3001004^^^^
"^DD",811.9,811.902,12,21,1,0)
Any findings with a date older than the EFFECTIVE DATE are expired and
"^DD",811.9,811.902,12,21,2,0)
will be treated as false during the reminder evaluation.
"^DD",811.9,811.902,12,"DT")
3001010
"^DD",811.9,811.902,13,0)
MH SCALE^FX^^0;12^K:$L(X)>79!($L(X)<1) X D VSCALEF^PXRMMH
"^DD",811.9,811.902,13,3)
Enter the scale number or scale name.
"^DD",811.9,811.902,13,4)
D SCHELPF^PXRMMH
"^DD",811.9,811.902,13,21,0)
^.001^2^2^3000505^^
"^DD",811.9,811.902,13,21,1,0)
This applies only to Mental Health Instrument findings. It specifies
"^DD",811.9,811.902,13,21,2,0)
which scale to use when scoring the test.
"^DD",811.9,811.902,13,"DT")
3000321
"^DD",811.9,811.902,14,0)
CONDITION^FXO^^3;1^K:$L(X)>225!($L(X)<3) X D VCOND^PXRMINTR(.X)
"^DD",811.9,811.902,14,2)
S Y(0)=Y S Y=$TR(Y,"~"," ")
"^DD",811.9,811.902,14,2.1)
S Y=$TR(Y,"~"," ")
"^DD",811.9,811.902,14,3)
Answer must be 3-225 characters in length.
"^DD",811.9,811.902,14,21,0)
^.001^49^49^3001004^^^
"^DD",811.9,811.902,14,21,1,0)
The CONDITION must be written in M code based on the value returned from
"^DD",811.9,811.902,14,21,2,0)
the patient results for the finding. Each type of finding has a specific
"^DD",811.9,811.902,14,21,3,0)
field that provides the value available to use in the CONDITION logic.
"^DD",811.9,811.902,14,21,4,0)
If the finding value is text, enclose the condition value in quotes 
"^DD",811.9,811.902,14,21,5,0)
(e.g., "positive"). If the finding value is numeric, do not use quotes
"^DD",811.9,811.902,14,21,6,0)
(e.g., 3).
"^DD",811.9,811.902,14,21,7,0)
 
"^DD",811.9,811.902,14,21,8,0)
An IF statement is used to evaluate the value.  The value is always
"^DD",811.9,811.902,14,21,9,0)
identified as V in the statement regardless of the type of finding. If 
"^DD",811.9,811.902,14,21,10,0)
the condition logic statement evaluates to true, the finding is 
"^DD",811.9,811.902,14,21,11,0)
considered as found (true), otherwise the finding is considered as not
"^DD",811.9,811.902,14,21,12,0)
found (false).
"^DD",811.9,811.902,14,21,13,0)
 
"^DD",811.9,811.902,14,21,14,0)
Relational operators that may be used include: = equals, < less than, >
"^DD",811.9,811.902,14,21,15,0)
greater than, [ contains, ] follows and ? pattern matches. Logical
"^DD",811.9,811.902,14,21,16,0)
operators may be used to check multiple values: & And, ! Or, ' Not. 
"^DD",811.9,811.902,14,21,17,0)
         
"^DD",811.9,811.902,14,21,18,0)
Typical examples of M code are as follows:
"^DD",811.9,811.902,14,21,19,0)
    I V=3 for Education Topic's Level of Understanding = 3
"^DD",811.9,811.902,14,21,20,0)
    I V="H" for Health Factor's Level/Severity="H"
"^DD",811.9,811.902,14,21,21,0)
    I ($P(V,"/",1)>140)&($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.9,811.902,14,21,22,0)
    systolic and diastolic values
"^DD",811.9,811.902,14,21,23,0)
    I ($P(V,"/",1)>140)!($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.9,811.902,14,21,24,0)
    systolic or diastolic values
"^DD",811.9,811.902,14,21,25,0)
    I V["BLACK" for VA-RACE computed finding where race contains BLACK
"^DD",811.9,811.902,14,21,26,0)
 
"^DD",811.9,811.902,14,21,27,0)
Below is a brief summary for each finding type, the related field to use
"^DD",811.9,811.902,14,21,28,0)
for the value and examples:
"^DD",811.9,811.902,14,21,29,0)
 
"^DD",811.9,811.902,14,21,30,0)
Finding type                Field Value Used        Example M Code
"^DD",811.9,811.902,14,21,31,0)
 
"^DD",811.9,811.902,14,21,32,0)
 Drug                       None
"^DD",811.9,811.902,14,21,33,0)
 Education Topic            Level of understanding  I V=3
"^DD",811.9,811.902,14,21,34,0)
 Exam                       Result                  I V="N"
"^DD",811.9,811.902,14,21,35,0)
 Health Factor              Level/severity          I V="H"
"^DD",811.9,811.902,14,21,36,0)
 Immunization               Series                  I V="P"
"^DD",811.9,811.902,14,21,37,0)
 Laboratory Test            Result Value            I V>130
"^DD",811.9,811.902,14,21,38,0)
 Mental Health Instrument   Raw score               I V=1
"^DD",811.9,811.902,14,21,39,0)
 Orderable Item             Status                  I V="complete"
"^DD",811.9,811.902,14,21,40,0)
 Radiology Procedure        None
"^DD",811.9,811.902,14,21,41,0)
 Reminder Computed Finding  Determined by programmer-See Manager Manual
"^DD",811.9,811.902,14,21,42,0)
 Reminder Taxonomy          None
"^DD",811.9,811.902,14,21,43,0)
 Skin Test                  Result                  I V="N"
"^DD",811.9,811.902,14,21,44,0)
 VA Drug Class              None
"^DD",811.9,811.902,14,21,45,0)
 VA Generic                 None
"^DD",811.9,811.902,14,21,46,0)
 Vital Measurement          Rate                    I V>27
"^DD",811.9,811.902,14,21,47,0)
 
"^DD",811.9,811.902,14,21,48,0)
For details about allowed CONDITIONS for each finding type see the
"^DD",811.9,811.902,14,21,49,0)
Clinical Reminders Manager Manual.
"^DD",811.9,811.902,14,"DT")
3001004
"^DD",811.9,811.902,15,0)
CONDITION CASE SENSITIVE^S^0:NO;1:YES;^3;2^Q
"^DD",811.9,811.902,15,3)
Enter NO to make the condition case insensitive
"^DD",811.9,811.902,15,21,0)
^.001^3^3^3001129^^^
"^DD",811.9,811.902,15,21,1,0)
When CONDITION CASE SENSITIVE is NO then the CONDITION will be
"^DD",811.9,811.902,15,21,2,0)
evaluated without regards to case. The default is YES so that
"^DD",811.9,811.902,15,21,3,0)
CONDITION evaluation is case sensitive.
"^DD",811.9,811.902,15,"DT")
3001129
"^DD",811.9,811.902,16,0)
RX TYPE^S^B:BOTH;I:INPATIENT;O:OUTPATIENT;^0;13^Q
"^DD",811.9,811.902,16,3)
Enter the Rx Type
"^DD",811.9,811.902,16,21,0)
^.001^3^3^3010607^^
"^DD",811.9,811.902,16,21,1,0)
Rx Type applies only to drug findings. It can be used to make the
"^DD",811.9,811.902,16,21,2,0)
finding so it will use only inpatient or only outpatient drugs. If this
"^DD",811.9,811.902,16,21,3,0)
field is empty it will use both.
"^DD",811.9,811.902,16,"DT")
3010607
"^DD",811.9,811.9024,0)
FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9024,0,"DT")
2990325
"^DD",811.9,811.9024,0,"NM","FOUND TEXT")

"^DD",811.9,811.9024,0,"UP")
811.902
"^DD",811.9,811.9024,.01,0)
FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9024,.01,3)
Enter the found text.
"^DD",811.9,811.9024,.01,"DT")
2990325
"^DD",811.9,811.9025,0)
NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9025,0,"DT")
2990325
"^DD",811.9,811.9025,0,"NM","NOT FOUND TEXT")

"^DD",811.9,811.9025,0,"UP")
811.902
"^DD",811.9,811.9025,.01,0)
NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9025,.01,3)
Enter the not found text.
"^DD",811.9,811.9025,.01,"DT")
2990325
"^DD",811.9,811.92,0)
REMINDER DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.9,811.92,0,"NM","REMINDER DESCRIPTION")

"^DD",811.9,811.92,0,"UP")
811.9
"^DD",811.9,811.92,.01,0)
REMINDER DESCRIPTION^W^^0;1^Q
"^DD",811.9,811.92,.01,3)

"^DD",811.9,811.92,.01,"DT")
2960131
"^DD",811.9,811.93,0)
TECHNICAL DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.9,811.93,0,"NM","TECHNICAL DESCRIPTION")

"^DD",811.9,811.93,0,"UP")
811.9
"^DD",811.9,811.93,.01,0)
TECHNICAL DESCRIPTION^W^^0;1^Q
"^DD",811.9,811.93,.01,.1)
 
"^DD",811.9,811.93,.01,"DT")
2960131
"^DD",811.9,811.961,0)
GENERAL COHORT NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.961,0,"DT")
3000110
"^DD",811.9,811.961,0,"NM","GENERAL COHORT NOT FOUND TEXT")

"^DD",811.9,811.961,0,"UP")
811.9
"^DD",811.9,811.961,.01,0)
GENERAL COHORT NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.961,.01,.1)
GENERAL PATIENT COHORT NOT FOUND TEXT
"^DD",811.9,811.961,.01,3)
Enter general text to display when the patient is not found to be in the patient cohort. 
"^DD",811.9,811.961,.01,21,0)
^^5^5^3000505^
"^DD",811.9,811.961,.01,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.961,.01,21,2,0)
component when the patient's findings during reminder evaluation made the
"^DD",811.9,811.961,.01,21,3,0)
Patient Cohort Logic false. This is general text, not specific to a
"^DD",811.9,811.961,.01,21,4,0)
finding, that will display when the patient is not found to be in the
"^DD",811.9,811.961,.01,21,5,0)
patient cohort.
"^DD",811.9,811.961,.01,"DT")
3000504
"^DD",811.9,811.965,0)
GENERAL RESOLUTION FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.965,0,"DT")
3000110
"^DD",811.9,811.965,0,"NM","GENERAL RESOLUTION FOUND TEXT")

"^DD",811.9,811.965,0,"UP")
811.9
"^DD",811.9,811.965,.01,0)
GENERAL RESOLUTION FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.965,.01,.1)
GENERAL RESOLUTION FOUND TEXT
"^DD",811.9,811.965,.01,3)
Enter general text to display when the patient's findings resolve the reminder. 
"^DD",811.9,811.965,.01,21,0)
^^5^5^3000505^
"^DD",811.9,811.965,.01,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.965,.01,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.965,.01,21,3,0)
made the Resolution Logic true.  This is general text, not specific to
"^DD",811.9,811.965,.01,21,4,0)
a finding, that will display when the patient's findings resolve the
"^DD",811.9,811.965,.01,21,5,0)
reminder.
"^DD",811.9,811.965,.01,"DT")
3000504
"^DD",811.9,811.966,0)
GENERAL RESOL NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.966,0,"DT")
3000110
"^DD",811.9,811.966,0,"NM","GENERAL RESOL NOT FOUND TEXT")

"^DD",811.9,811.966,0,"UP")
811.9
"^DD",811.9,811.966,.01,0)
GENERAL RESOL NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.966,.01,.1)
GENERAL RESOLUTION NOT FOUND TEXT
"^DD",811.9,811.966,.01,3)
Enter general text to display when the patient's findings do not resolve the reminder.
"^DD",811.9,811.966,.01,21,0)
^^4^4^3000505^
"^DD",811.9,811.966,.01,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.966,.01,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.966,.01,21,3,0)
made the Resolution Logic false.  This is general text, not specific to
"^DD",811.9,811.966,.01,21,4,0)
a finding, that will display when the reminder has not been resolved.
"^DD",811.9,811.966,.01,"DT")
3000504
"^DD",811.9,811.97,0)
BASELINE AGE FINDINGS SUB-FIELD^^4^5
"^DD",811.9,811.97,0,"DT")
2960201
"^DD",811.9,811.97,0,"IX","B",811.97,.01)

"^DD",811.9,811.97,0,"NM","BASELINE AGE FINDINGS")

"^DD",811.9,811.97,0,"UP")
811.9
"^DD",811.9,811.97,.01,0)
REMINDER FREQUENCY^MFX^^0;1^S X=$$UP^XLFSTR(X) K:($L(X)>5)!($L(X)<2)!((X'?1N.N1"D")&(X'?1N.N1"M")&(X'?1N.N1"Y")) X
"^DD",811.9,811.97,.01,1,0)
^.1
"^DD",811.9,811.97,.01,1,1,0)
811.97^B
"^DD",811.9,811.97,.01,1,1,1)
S ^PXD(811.9,DA(1),7,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.97,.01,1,1,2)
K ^PXD(811.9,DA(1),7,"B",$E(X,1,30),DA)
"^DD",811.9,811.97,.01,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.97,.01,21,0)
^.001^5^5^3010302^^^^
"^DD",811.9,811.97,.01,21,1,0)
This is the frequency to give the reminder. It is input as nD, nM, or
"^DD",811.9,811.97,.01,21,2,0)
nY, where D stands for days, M for months, Y for years, and n is a
"^DD",811.9,811.97,.01,21,3,0)
number. Thus, for a reminder that is to be given once a year, the
"^DD",811.9,811.97,.01,21,4,0)
values 365D, 12M, or 1Y would all work. If a reminder is only to be
"^DD",811.9,811.97,.01,21,5,0)
given once in a lifetime use a frequency of 99Y.
"^DD",811.9,811.97,.01,"DT")
2970505
"^DD",811.9,811.97,1,0)
MINIMUM AGE^NJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.97,1,3)
Enter the minimum age for this reminder frequency.
"^DD",811.9,811.97,1,21,0)
^.001^2^2^3000428^^^
"^DD",811.9,811.97,1,21,1,0)
This field specifies the minimum age for defining an age range
"^DD",811.9,811.97,1,21,2,0)
associated with a frequency. Leave it blank if there is no minimum age.
"^DD",811.9,811.97,1,"DT")
2960201
"^DD",811.9,811.97,2,0)
MAXIMUM AGE^NJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.97,2,3)
Enter the maximum age for this reminder frequency.
"^DD",811.9,811.97,2,21,0)
^.001^2^2^3000428^^^
"^DD",811.9,811.97,2,21,1,0)
This field specifies the maximum age for defining an age range
"^DD",811.9,811.97,2,21,2,0)
associated with a frequency. Leave it blank if there is no maximum age.
"^DD",811.9,811.97,2,"DT")
2960201
"^DD",811.9,811.97,3,0)
AGE MATCH TEXT^811.973^^1;0
"^DD",811.9,811.97,3,21,0)
^^2^2^3000428^
"^DD",811.9,811.97,3,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.97,3,21,2,0)
component if the patient's age falls within the age range.
"^DD",811.9,811.97,4,0)
AGE NO MATCH TEXT^811.974^^2;0
"^DD",811.9,811.97,4,21,0)
^^2^2^3000428^
"^DD",811.9,811.97,4,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.97,4,21,2,0)
component if the patient's age does not fall in the age range.
"^DD",811.9,811.97,4,"DT")
2960201
"^DD",811.9,811.973,0)
AGE MATCH TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.973,0,"DT")
2960201
"^DD",811.9,811.973,0,"NM","AGE MATCH TEXT")

"^DD",811.9,811.973,0,"UP")
811.97
"^DD",811.9,811.973,.01,0)
AGE MATCH TEXT^W^^0;1^Q
"^DD",811.9,811.973,.01,3)
Enter text to display for a match on age range.
"^DD",811.9,811.973,.01,"DT")
2960201
"^DD",811.9,811.974,0)
AGE NO MATCH TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.974,0,"DT")
2960201
"^DD",811.9,811.974,0,"NM","AGE NO MATCH TEXT")

"^DD",811.9,811.974,0,"UP")
811.97
"^DD",811.9,811.974,.01,0)
AGE NO MATCH TEXT^W^^0;1^Q
"^DD",811.9,811.974,.01,3)
Enter the text to display for no match on age range.
"^DD",811.9,811.974,.01,"DT")
2960201
"^DIC",801.41,801.41,0)
REMINDER DIALOG^801.41
"^DIC",801.41,801.41,0,"GL")
^PXRMD(801.41,
"^DIC",801.41,801.41,"%",0)
^1.005^^0
"^DIC",801.41,801.41,"%D",0)
^^58^58^3000609^^^^
"^DIC",801.41,801.41,"%D",1,0)
This file is used to define all of the components that work together to
"^DIC",801.41,801.41,"%D",2,0)
define a reminder dialog. Reminder dialog definitions are used by the CPRS
"^DIC",801.41,801.41,"%D",3,0)
GUI for reminder resolution.
"^DIC",801.41,801.41,"%D",4,0)
 
"^DIC",801.41,801.41,"%D",5,0)
This file contains a combination of nationally distributed entries, local
"^DIC",801.41,801.41,"%D",6,0)
auto-generated entries, site and VISN exchanged entries and local manually
"^DIC",801.41,801.41,"%D",7,0)
created entries. Any local entries are assigned an internal entry number
"^DIC",801.41,801.41,"%D",8,0)
prefixed with your site number. Nationally distributed entries have their
"^DIC",801.41,801.41,"%D",9,0)
name prefixed with PXRM. Entries in this file may be auto-generated via
"^DIC",801.41,801.41,"%D",10,0)
the Dialog Management Menu option. Manually created dialog entries should
"^DIC",801.41,801.41,"%D",11,0)
use local namespacing conventions.
"^DIC",801.41,801.41,"%D",12,0)
 
"^DIC",801.41,801.41,"%D",13,0)
This file is similar to the option file where there are different types of
"^DIC",801.41,801.41,"%D",14,0)
entries (reminder dialog, dialog elements (sentences), prompts, and groups
"^DIC",801.41,801.41,"%D",15,0)
of elements, result elements and groups of result elements). Where an
"^DIC",801.41,801.41,"%D",16,0)
option has menu items, the dialog file has components that are
"^DIC",801.41,801.41,"%D",17,0)
entered with the sequence field as the .01 field. 
"^DIC",801.41,801.41,"%D",18,0)
 
"^DIC",801.41,801.41,"%D",19,0)
A prompt is defined for PCE prompts or as locally created comment
"^DIC",801.41,801.41,"%D",20,0)
check-boxes. The prompts will not have any components within them.
"^DIC",801.41,801.41,"%D",21,0)
PXRM prefixed prompts are distributed in this file with the Clinical
"^DIC",801.41,801.41,"%D",22,0)
Reminder package.
"^DIC",801.41,801.41,"%D",23,0)
 
"^DIC",801.41,801.41,"%D",24,0)
A dialog element is defined primarily to represent sentences to display in
"^DIC",801.41,801.41,"%D",25,0)
the CPRS window with a check box. When the user checks the sentence off,
"^DIC",801.41,801.41,"%D",26,0)
the FINDING ITEM in the dialog element and the ADDITIONAL FINDINGS will be
"^DIC",801.41,801.41,"%D",27,0)
added to the list of PCE updates, orders, and mental health tests. The
"^DIC",801.41,801.41,"%D",28,0)
updates won't occur on the CPRS GUI until the user clicks on the FINISH
"^DIC",801.41,801.41,"%D",29,0)
button. Dialog elements may have components added to it. Auto-generated
"^DIC",801.41,801.41,"%D",30,0)
components will be based on the additional prompts defined in the Finding
"^DIC",801.41,801.41,"%D",31,0)
Type Parameters. Once a dialog element is auto-generated, the sites can
"^DIC",801.41,801.41,"%D",32,0)
modify them.
"^DIC",801.41,801.41,"%D",33,0)
 
"^DIC",801.41,801.41,"%D",34,0)
Dialog elements may also be instructional text or a header. The FINDING
"^DIC",801.41,801.41,"%D",35,0)
ITEM and components would not be defined in dialog elements.
"^DIC",801.41,801.41,"%D",36,0)
 
"^DIC",801.41,801.41,"%D",37,0)
A dialog group is similar to menu options. They group dialog elements and
"^DIC",801.41,801.41,"%D",38,0)
dialog groups within its component multiple. The dialog group can be
"^DIC",801.41,801.41,"%D",39,0)
defined with a finding item and check-box. The components in the group
"^DIC",801.41,801.41,"%D",40,0)
can be hidden from the CPRS GUI window until the dialog group is checked
"^DIC",801.41,801.41,"%D",41,0)
off. 
"^DIC",801.41,801.41,"%D",42,0)
 
"^DIC",801.41,801.41,"%D",43,0)
A result element contains special logic that uses information entered
"^DIC",801.41,801.41,"%D",44,0)
during the resolution process to create a sentence to add to the progress
"^DIC",801.41,801.41,"%D",45,0)
note. The special logic contains a CONDITION that, when true, will use the
"^DIC",801.41,801.41,"%D",46,0)
ALTERNATE PROGRESS NOTE TEXT field to update the progress note. A separate
"^DIC",801.41,801.41,"%D",47,0)
result element is used for each separate sentence needed. The result
"^DIC",801.41,801.41,"%D",48,0)
element is only used with mental health test finding items. Default
"^DIC",801.41,801.41,"%D",49,0)
result elements are distributed for common mental health tests, prefixed
"^DIC",801.41,801.41,"%D",50,0)
with PXRM and the mental health test name. Sites may copy them and modify
"^DIC",801.41,801.41,"%D",51,0)
their local versions as needed.
"^DIC",801.41,801.41,"%D",52,0)
 
"^DIC",801.41,801.41,"%D",53,0)
A result group contains all of the result elements that need to be checked
"^DIC",801.41,801.41,"%D",54,0)
to create sentences for one mental health test finding. The dialog
"^DIC",801.41,801.41,"%D",55,0)
element for the test will have its RESULT GROUP/ELEMENT field defined with
"^DIC",801.41,801.41,"%D",56,0)
the result group. Default result groups for mental health tests are
"^DIC",801.41,801.41,"%D",57,0)
distributed with the Clinical Reminders package. Sites may copy them and
"^DIC",801.41,801.41,"%D",58,0)
modify their local versions as needed.
"^DIC",801.41,"B","REMINDER DIALOG",801.41)

"^DIC",811.2,811.2,0)
REMINDER TAXONOMY^811.2I
"^DIC",811.2,811.2,0,"GL")
^PXD(811.2,
"^DIC",811.2,811.2,"%",0)
^1.005^^0
"^DIC",811.2,811.2,"%D",0)
^^8^8^3000609^^^^
"^DIC",811.2,811.2,"%D",1,0)
This file stores the Clinical Reminder taxonomies. A taxonomy is just a
"^DIC",811.2,811.2,"%D",2,0)
way to give a name to a set of codes. These codes can be ICD Diagnosis,
"^DIC",811.2,811.2,"%D",3,0)
ICD Operation/Procedure or CPT.
"^DIC",811.2,811.2,"%D",4,0)

"^DIC",811.2,811.2,"%D",5,0)
This file contains a combination of nationally distributed and local
"^DIC",811.2,811.2,"%D",6,0)
entries. Any local entries are assigned an internal entry number
"^DIC",811.2,811.2,"%D",7,0)
prefixed with your site number. Nationally distributed entries have
"^DIC",811.2,811.2,"%D",8,0)
their name prefixed with VA-. Local entry names cannot start with VA-.
"^DIC",811.2,"B","REMINDER TAXONOMY",811.2)

"^DIC",811.4,811.4,0)
REMINDER COMPUTED FINDINGS^811.4
"^DIC",811.4,811.4,0,"GL")
^PXRMD(811.4,
"^DIC",811.4,811.4,"%",0)
^1.005^^0
"^DIC",811.4,811.4,"%D",0)
^^24^24^3000609^^^^
"^DIC",811.4,811.4,"%D",1,0)
When none of the standard finding types will work a computed finding
"^DIC",811.4,811.4,"%D",2,0)
can be created. There are two steps in creating a computed finding.
"^DIC",811.4,811.4,"%D",3,0)
First a MUMPS routine must be written. Information about how to do this
"^DIC",811.4,811.4,"%D",4,0)
can be found in the Clinical Reminders Manager Manual. The second step
"^DIC",811.4,811.4,"%D",5,0)
is to make an entry in this file, which contains a list of reminder
"^DIC",811.4,811.4,"%D",6,0)
computed findings. There are four fields for each entry, they are:
"^DIC",811.4,811.4,"%D",7,0)
 
"^DIC",811.4,811.4,"%D",8,0)
NAME - this is the name of the computed finding. When adding a computed
"^DIC",811.4,811.4,"%D",9,0)
finding as finding to a reminder definition it is done using the name.
"^DIC",811.4,811.4,"%D",10,0)
For example you would type CF.VA-BMI to add the exported VA-BMI
"^DIC",811.4,811.4,"%D",11,0)
computed finding to your reminder definition.
"^DIC",811.4,811.4,"%D",12,0)
 
"^DIC",811.4,811.4,"%D",13,0)
ROUTINE - this is the name of the MUMPS routine.
"^DIC",811.4,811.4,"%D",14,0)
 
"^DIC",811.4,811.4,"%D",15,0)
ENTRY - this is the entry point in the MUMPS routine.
"^DIC",811.4,811.4,"%D",16,0)
 
"^DIC",811.4,811.4,"%D",17,0)
PRINT NAME - this will be displayed on the Clinical Maintenance
"^DIC",811.4,811.4,"%D",18,0)
component as the name of the computed finding. If it is blank then NAME
"^DIC",811.4,811.4,"%D",19,0)
will be used.
"^DIC",811.4,811.4,"%D",20,0)

"^DIC",811.4,811.4,"%D",21,0)
This file contains a combination of nationally distributed and local
"^DIC",811.4,811.4,"%D",22,0)
entries. Any local entries are assigned an internal entry number
"^DIC",811.4,811.4,"%D",23,0)
prefixed with your site number. Nationally distributed entries have
"^DIC",811.4,811.4,"%D",24,0)
their name prefixed with VA-. Local entry names cannot start with VA-.
"^DIC",811.4,"B","REMINDER COMPUTED FINDINGS",811.4)

"^DIC",811.5,811.5,0)
REMINDER TERM^811.5
"^DIC",811.5,811.5,0,"GL")
^PXRMD(811.5,
"^DIC",811.5,811.5,"%",0)
^1.005^^0
"^DIC",811.5,811.5,"%D",0)
^^17^17^3010427^^
"^DIC",811.5,811.5,"%D",1,0)
This file defines terms that may be used within reminder definitions.
"^DIC",811.5,811.5,"%D",2,0)
Reminder terms are useful for national reminders involving findings that
"^DIC",811.5,811.5,"%D",3,0)
are based on local file definitions (e.g., laboratory test, drug file,
"^DIC",811.5,811.5,"%D",4,0)
radiology). National reminder terms have limited editing capabilities
"^DIC",811.5,811.5,"%D",5,0)
which allow sites to map their local finding items to a term. Sites may
"^DIC",811.5,811.5,"%D",6,0)
create local reminder terms, providing an easy way to group a variety of
"^DIC",811.5,811.5,"%D",7,0)
findings and treat them the same way in a reminder.
"^DIC",811.5,811.5,"%D",8,0)
 
"^DIC",811.5,811.5,"%D",9,0)
When a reminder with terms is evaluated, the finding items mapped to the
"^DIC",811.5,811.5,"%D",10,0)
term are used to find the patient data, but the patient data is reported
"^DIC",811.5,811.5,"%D",11,0)
based on the term the data is mapped to. The most recent true finding will
"^DIC",811.5,811.5,"%D",12,0)
be used to represent the term.
"^DIC",811.5,811.5,"%D",13,0)
 
"^DIC",811.5,811.5,"%D",14,0)
This file contains a combination of national, local, and VISN level
"^DIC",811.5,811.5,"%D",15,0)
terms. Nationally distributed entries will have a CLASS of "National".
"^DIC",811.5,811.5,"%D",16,0)
Any terms created at your site should have a CLASS of "Local". Terms
"^DIC",811.5,811.5,"%D",17,0)
created for VISN use will have a CLASS of "VISN"
"^DIC",811.5,"B","REMINDER TERM",811.5)

"^DIC",811.6,811.6,0)
REMINDER SPONSOR^811.6
"^DIC",811.6,811.6,0,"GL")
^PXRMD(811.6,
"^DIC",811.6,811.6,"%",0)
^1.005^^0
"^DIC",811.6,811.6,"%D",0)
^^5^5^3010607^^^^
"^DIC",811.6,811.6,"%D",1,0)
This file contains the names of groups or organizations that are sponsors
"^DIC",811.6,811.6,"%D",2,0)
of reminder components such as definitions, terms, and dialogs.
"^DIC",811.6,811.6,"%D",3,0)

"^DIC",811.6,811.6,"%D",4,0)
Entries cannot be edited using FileMan, you must use the Reminder
"^DIC",811.6,811.6,"%D",5,0)
Sponsor Edit option.
"^DIC",811.6,"B","REMINDER SPONSOR",811.6)

"^DIC",811.8,811.8,0)
REMINDER EXCHANGE FILE^811.8
"^DIC",811.8,811.8,0,"GL")
^PXD(811.8,
"^DIC",811.8,811.8,"%",0)
^1.005^^
"^DIC",811.8,811.8,"%D",0)
^^2^2^3010601^^^^
"^DIC",811.8,811.8,"%D",1,0)
The Reminder Exchange File is used to store packed reminder
"^DIC",811.8,811.8,"%D",2,0)
definitions. Entries in this file should never be edited.
"^DIC",811.8,"B","REMINDER EXCHANGE FILE",811.8)

"^DIC",811.9,811.9,0)
REMINDER DEFINITION^811.9
"^DIC",811.9,811.9,0,"GL")
^PXD(811.9,
"^DIC",811.9,811.9,"%",0)
^1.005^1^1
"^DIC",811.9,811.9,"%",1,0)
GMTS
"^DIC",811.9,811.9,"%","B","GMTS",1)

"^DIC",811.9,811.9,"%D",0)
^^9^9^3000609^^^^
"^DIC",811.9,811.9,"%D",1,0)
This file contains Clinical Reminder definitions. For a detailed
"^DIC",811.9,811.9,"%D",2,0)
description of the contents of this file see the Clinical Reminders
"^DIC",811.9,811.9,"%D",3,0)
Manager Manual. Additional information may be found at the Clinical
"^DIC",811.9,811.9,"%D",4,0)
Reminders web site: http//vista.med.va.gov/reminders
"^DIC",811.9,811.9,"%D",5,0)

"^DIC",811.9,811.9,"%D",6,0)
This file contains a combination of nationally distributed and local
"^DIC",811.9,811.9,"%D",7,0)
entries. Any local entries are assigned an internal entry number
"^DIC",811.9,811.9,"%D",8,0)
prefixed with your site number. Nationally distributed entries have
"^DIC",811.9,811.9,"%D",9,0)
their name prefixed with VA-. Local entry names cannot start with VA-.
"^DIC",811.9,"B","REMINDER DEFINITION",811.9)

**END**
**END**
