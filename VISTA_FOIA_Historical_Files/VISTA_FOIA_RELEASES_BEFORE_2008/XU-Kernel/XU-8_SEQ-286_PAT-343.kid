Released XU*8*343 SEQ #286
Extracted from mail message
**KIDS**:XU*8.0*343^

**INSTALL NAME**
XU*8.0*343
"BLD",5594,0)
XU*8.0*343^KERNEL^0^3040716^y
"BLD",5594,4,0)
^9.64PA^^0
"BLD",5594,"INIT")
POST^XU8343P
"BLD",5594,"KRN",0)
^9.67PA^8989.52^19
"BLD",5594,"KRN",.4,0)
.4
"BLD",5594,"KRN",.401,0)
.401
"BLD",5594,"KRN",.402,0)
.402
"BLD",5594,"KRN",.403,0)
.403
"BLD",5594,"KRN",.403,"NM",0)
^9.68A^3^3
"BLD",5594,"KRN",.403,"NM",1,0)
XUEXISTING USER    FILE #200^200^0
"BLD",5594,"KRN",.403,"NM",2,0)
XUNEW USER    FILE #200^200^0
"BLD",5594,"KRN",.403,"NM",3,0)
XUREACT USER    FILE #200^200^0
"BLD",5594,"KRN",.403,"NM","B","XUEXISTING USER    FILE #200",1)

"BLD",5594,"KRN",.403,"NM","B","XUNEW USER    FILE #200",2)

"BLD",5594,"KRN",.403,"NM","B","XUREACT USER    FILE #200",3)

"BLD",5594,"KRN",.5,0)
.5
"BLD",5594,"KRN",.84,0)
.84
"BLD",5594,"KRN",3.6,0)
3.6
"BLD",5594,"KRN",3.8,0)
3.8
"BLD",5594,"KRN",9.2,0)
9.2
"BLD",5594,"KRN",9.8,0)
9.8
"BLD",5594,"KRN",9.8,"NM",0)
^9.68A^20^10
"BLD",5594,"KRN",9.8,"NM",2,0)
XU8343P^^0^B9373861
"BLD",5594,"KRN",9.8,"NM",10,0)
XU8343R^^0^B22502690
"BLD",5594,"KRN",9.8,"NM",12,0)
XLFNAME2^^0^B10615051
"BLD",5594,"KRN",9.8,"NM",14,0)
XUPSNAME^^1^
"BLD",5594,"KRN",9.8,"NM",15,0)
XUPSNM1^^1^
"BLD",5594,"KRN",9.8,"NM",16,0)
XLFNAME7^^0^B12212938
"BLD",5594,"KRN",9.8,"NM",17,0)
XLFNAME8^^0^B28193744
"BLD",5594,"KRN",9.8,"NM",18,0)
XUPSPAID^^0^B105719762
"BLD",5594,"KRN",9.8,"NM",19,0)
XU8343Q^^0^B1464204
"BLD",5594,"KRN",9.8,"NM",20,0)
XU8343S^^0^B76423668
"BLD",5594,"KRN",9.8,"NM","B","XLFNAME2",12)

"BLD",5594,"KRN",9.8,"NM","B","XLFNAME7",16)

"BLD",5594,"KRN",9.8,"NM","B","XLFNAME8",17)

"BLD",5594,"KRN",9.8,"NM","B","XU8343P",2)

"BLD",5594,"KRN",9.8,"NM","B","XU8343Q",19)

"BLD",5594,"KRN",9.8,"NM","B","XU8343R",10)

"BLD",5594,"KRN",9.8,"NM","B","XU8343S",20)

"BLD",5594,"KRN",9.8,"NM","B","XUPSNAME",14)

"BLD",5594,"KRN",9.8,"NM","B","XUPSNM1",15)

"BLD",5594,"KRN",9.8,"NM","B","XUPSPAID",18)

"BLD",5594,"KRN",19,0)
19
"BLD",5594,"KRN",19,"NM",0)
^9.68A^^
"BLD",5594,"KRN",19.1,0)
19.1
"BLD",5594,"KRN",101,0)
101
"BLD",5594,"KRN",409.61,0)
409.61
"BLD",5594,"KRN",771,0)
771
"BLD",5594,"KRN",870,0)
870
"BLD",5594,"KRN",8989.51,0)
8989.51
"BLD",5594,"KRN",8989.52,0)
8989.52
"BLD",5594,"KRN",8994,0)
8994
"BLD",5594,"KRN","B",.4,.4)

"BLD",5594,"KRN","B",.401,.401)

"BLD",5594,"KRN","B",.402,.402)

"BLD",5594,"KRN","B",.403,.403)

"BLD",5594,"KRN","B",.5,.5)

"BLD",5594,"KRN","B",.84,.84)

"BLD",5594,"KRN","B",3.6,3.6)

"BLD",5594,"KRN","B",3.8,3.8)

"BLD",5594,"KRN","B",9.2,9.2)

"BLD",5594,"KRN","B",9.8,9.8)

"BLD",5594,"KRN","B",19,19)

"BLD",5594,"KRN","B",19.1,19.1)

"BLD",5594,"KRN","B",101,101)

"BLD",5594,"KRN","B",409.61,409.61)

"BLD",5594,"KRN","B",771,771)

"BLD",5594,"KRN","B",870,870)

"BLD",5594,"KRN","B",8989.51,8989.51)

"BLD",5594,"KRN","B",8989.52,8989.52)

"BLD",5594,"KRN","B",8994,8994)

"BLD",5594,"QUES",0)
^9.62^^
"BLD",5594,"REQB",0)
^9.611^4^3
"BLD",5594,"REQB",2,0)
XU*8.0*301^2
"BLD",5594,"REQB",3,0)
XU*8.0*309^2
"BLD",5594,"REQB",4,0)
XU*8.0*251^2
"BLD",5594,"REQB","B","XU*8.0*251",4)

"BLD",5594,"REQB","B","XU*8.0*301",2)

"BLD",5594,"REQB","B","XU*8.0*309",3)

"INIT")
POST^XU8343P
"KRN",.403,2,-1)
0^1
"KRN",.403,2,0)
XUEXISTING USER^^^^2920804^^^200^0^0^1
"KRN",.403,2,2)
1;33
"KRN",.403,2,11)
S XUNOTRIG=1 D CHKPTR^XLFNAME2,REQ^XUSER2()
"KRN",.403,2,12)
K XUNOTRIG,XUITNAME
"KRN",.403,2,40,0)
^.4031I^10^8
"KRN",.403,2,40,1,0)
1^^1,1^2^5
"KRN",.403,2,40,1,1)
Page 1
"KRN",.403,2,40,1,40,0)
^.4032PI^57^2
"KRN",.403,2,40,1,40,4,0)
XUEXISTING USER 1^2^2,1^e
"KRN",.403,2,40,1,40,57,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,2,40,2,0)
2^^1,1^3^1
"KRN",.403,2,40,2,1)
Page 2
"KRN",.403,2,40,2,15,0)
^^1^1^2941114^
"KRN",.403,2,40,2,15,1,0)
This is Page 2 of the edit existing user.
"KRN",.403,2,40,2,40,0)
^.4032PI^57^2
"KRN",.403,2,40,2,40,5,0)
XUEXISTING USER 2^2^2,1^e
"KRN",.403,2,40,2,40,57,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,2,40,3,0)
1.1^^11,9^^^1^17,66^^
"KRN",.403,2,40,3,1)
SECONDARY MENU OPTIONS Subpage
"KRN",.403,2,40,3,40,0)
^.4032PI^6^1
"KRN",.403,2,40,3,40,6,0)
XUEXISTING USER 3^1^2,3^e
"KRN",.403,2,40,4,0)
1.2^^8,16^^^1^13,59^^
"KRN",.403,2,40,4,1)
DIVISION Subpage
"KRN",.403,2,40,4,40,0)
^.4032PI^7^1
"KRN",.403,2,40,4,40,7,0)
XUEXISTING USER 4^1^2,3^e
"KRN",.403,2,40,5,0)
3^^1,1^4^2
"KRN",.403,2,40,5,1)
Page 3
"KRN",.403,2,40,5,40,0)
^.4032PI^96^3
"KRN",.403,2,40,5,40,57,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,2,40,5,40,60,0)
XUEXISTING USER 5^2^2,1^e
"KRN",.403,2,40,5,40,96,0)
XU-PERSON CLASS 2^3^12,1^e
"KRN",.403,2,40,5,40,96,2)
6^!IEN^n
"KRN",.403,2,40,8,0)
1.3^^8,12^^^1^17,65
"KRN",.403,2,40,8,1)
Page 1.3^
"KRN",.403,2,40,8,11)

"KRN",.403,2,40,8,12)
D:XLFNEW'=XLFNAME PUT^DDSVAL(200,XLFNDA,.01,XLFNEW,"","I") K XLFNDA,XLFNAME,XLFNEW
"KRN",.403,2,40,8,40,0)
^.4032IP^336^1
"KRN",.403,2,40,8,40,336,0)
XUEXISTING USER NAME COMPONENT^1^1,1^e
"KRN",.403,2,40,8,40,336,1)
10.1
"KRN",.403,2,40,9,0)
4^^1,1^5^3
"KRN",.403,2,40,9,1)
Page 4
"KRN",.403,2,40,9,40,0)
^.4032IP^387^3
"KRN",.403,2,40,9,40,57,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,2,40,9,40,386,0)
XUEXISTING USER CPRS^2^2,1^e
"KRN",.403,2,40,9,40,387,0)
XUEXISTING USER CPRS TAB^3^8,1^e
"KRN",.403,2,40,9,40,387,2)
10^!IEN^n^^^
"KRN",.403,2,40,10,0)
5^^1,1^1^4
"KRN",.403,2,40,10,1)
Page 5
"KRN",.403,2,40,10,40,0)
^.4032IP^409^2
"KRN",.403,2,40,10,40,57,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,2,40,10,40,409,0)
XUEXISTING USER TRAINEE^2^2,1^e
"KRN",.403,16,-1)
0^3
"KRN",.403,16,0)
XUREACT USER^^@^^2950327.1641^^^200^0^0^1
"KRN",.403,16,11)
S XUNOTRIG=1 D CHKPTR^XLFNAME2,REQ^XUSER2()
"KRN",.403,16,12)
K XUNOTRIG,XUITNAME
"KRN",.403,16,40,0)
^.4031I^8^8
"KRN",.403,16,40,1,0)
1^^1,1^2^5
"KRN",.403,16,40,1,1)
Page 1
"KRN",.403,16,40,1,11)
N % S %=$$GET^DDSVAL(200,XUN,2) D:%="" HLP^DDSUTL("USER has no ACCESS CODE")
"KRN",.403,16,40,1,40,0)
^.4032IP^57^2
"KRN",.403,16,40,1,40,4,0)
XUEXISTING USER 1^2^2,1^e
"KRN",.403,16,40,1,40,4,11)
D PUT^DDSVAL(DIE,.DA,9.2,"@"),PUT^DDSVAL(DIE,.DA,7,"@")
"KRN",.403,16,40,1,40,57,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,16,40,2,0)
2^^1,1^3^1
"KRN",.403,16,40,2,1)
Page 2
"KRN",.403,16,40,2,40,0)
^.4032IP^57^2
"KRN",.403,16,40,2,40,5,0)
XUEXISTING USER 2^2^2,1^e
"KRN",.403,16,40,2,40,57,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,16,40,3,0)
3^^1,1^4^2
"KRN",.403,16,40,3,1)
Page 3
"KRN",.403,16,40,3,40,0)
^.4032IP^96^3
"KRN",.403,16,40,3,40,57,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,16,40,3,40,60,0)
XUEXISTING USER 5^2^2,1^e
"KRN",.403,16,40,3,40,96,0)
XU-PERSON CLASS 2^3^13,1^e
"KRN",.403,16,40,3,40,96,2)
4^!IEN^n
"KRN",.403,16,40,4,0)
1.1^^11,9^^^1^17,66
"KRN",.403,16,40,4,1)
Page 1.1
"KRN",.403,16,40,4,40,0)
^.4032IP^6^1
"KRN",.403,16,40,4,40,6,0)
XUEXISTING USER 3^1^2,3^e
"KRN",.403,16,40,5,0)
1.2^^8,16^^^1^13,59
"KRN",.403,16,40,5,1)
Page 1.2
"KRN",.403,16,40,5,40,0)
^.4032IP^7^1
"KRN",.403,16,40,5,40,7,0)
XUEXISTING USER 4^1^2,2^e
"KRN",.403,16,40,6,0)
1.3^^8,12^^^1^17,65
"KRN",.403,16,40,6,1)
Page 1.3
"KRN",.403,16,40,6,12)
D:XLFNEW'=XLFNAME PUT^DDSVAL(200,XLFNDA,.01,XLFNEW,"","I") K XLFNDA,XLFNAME,XLFNEW
"KRN",.403,16,40,6,40,0)
^.4032IP^336^1
"KRN",.403,16,40,6,40,336,0)
XUEXISTING USER NAME COMPONENT^1^1,1^e
"KRN",.403,16,40,6,40,336,1)
10.1
"KRN",.403,16,40,7,0)
4^^1,1^5^3
"KRN",.403,16,40,7,1)
Page 4
"KRN",.403,16,40,7,40,0)
^.4032IP^387^3
"KRN",.403,16,40,7,40,57,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,16,40,7,40,386,0)
XUEXISTING USER CPRS^2^2,1^e
"KRN",.403,16,40,7,40,387,0)
XUEXISTING USER CPRS TAB^3^8,1^e
"KRN",.403,16,40,7,40,387,2)
10^!IEN^n
"KRN",.403,16,40,8,0)
5^^1,1^1^4
"KRN",.403,16,40,8,1)
Page 5
"KRN",.403,16,40,8,40,0)
^.4032IP^409^2
"KRN",.403,16,40,8,40,57,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,16,40,8,40,409,0)
XUEXISTING USER TRAINEE^2^2,1^e
"KRN",.403,32,-1)
0^2
"KRN",.403,32,0)
XUNEW USER^ ^@^^2960729.0925^^^200^0^0^1
"KRN",.403,32,11)
S (XUNOTRIG,XLFCOMP,XUITNAME)=1 D REQ^XUSER2()
"KRN",.403,32,12)
K XUNOTRIG,XUITNAME
"KRN",.403,32,40,0)
^.4031I^8^8
"KRN",.403,32,40,1,0)
1^^1,1^2^5
"KRN",.403,32,40,1,1)
Page 1
"KRN",.403,32,40,1,40,0)
^.4032IP^57^2
"KRN",.403,32,40,1,40,4,0)
XUEXISTING USER 1^2^2,1^e
"KRN",.403,32,40,1,40,57,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,32,40,2,0)
2^^1,1^3^1
"KRN",.403,32,40,2,1)
Page 2
"KRN",.403,32,40,2,40,0)
^.4032IP^57^2
"KRN",.403,32,40,2,40,5,0)
XUEXISTING USER 2^2^2,1^e
"KRN",.403,32,40,2,40,57,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,32,40,3,0)
3^^1,1^4^2
"KRN",.403,32,40,3,1)
Page 3
"KRN",.403,32,40,3,40,0)
^.4032IP^97^4
"KRN",.403,32,40,3,40,57,0)
XUEXISTING USER 0^2^1,1^e
"KRN",.403,32,40,3,40,60,0)
XUEXISTING USER 5^3^2,1^e
"KRN",.403,32,40,3,40,96,0)
XU-PERSON CLASS 2^4^13,1^e
"KRN",.403,32,40,3,40,96,2)
4^!IEN^n
"KRN",.403,32,40,3,40,97,0)
XUNEW USER^1^1,1^e
"KRN",.403,32,40,4,0)
1.1^^11,9^^^1^17,66
"KRN",.403,32,40,4,1)
Page 1.1
"KRN",.403,32,40,4,40,0)
^.4032IP^6^1
"KRN",.403,32,40,4,40,6,0)
XUEXISTING USER 3^1^2,3^e
"KRN",.403,32,40,5,0)
1.2^^8,16^^^1^13,59
"KRN",.403,32,40,5,1)
Page 1.2
"KRN",.403,32,40,5,40,0)
^.4032IP^7^1
"KRN",.403,32,40,5,40,7,0)
XUEXISTING USER 4^1^2,3^e
"KRN",.403,32,40,6,0)
1.3^^8,12^^^1^17,65
"KRN",.403,32,40,6,1)
Page 1.3
"KRN",.403,32,40,6,12)
D:XLFNEW'=XLFNAME PUT^DDSVAL(200,XLFNDA,.01,XLFNEW,"","I") K XLFNDA,XLFNAME,XLFNEW
"KRN",.403,32,40,6,40,0)
^.4032IP^336^1
"KRN",.403,32,40,6,40,336,0)
XUEXISTING USER NAME COMPONENT^1^1,1^e
"KRN",.403,32,40,6,40,336,1)
10.1
"KRN",.403,32,40,7,0)
4^^1,1^5^3
"KRN",.403,32,40,7,1)
Page 4
"KRN",.403,32,40,7,40,0)
^.4032IP^387^3
"KRN",.403,32,40,7,40,57,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,32,40,7,40,386,0)
XUEXISTING USER CPRS^2^2,1^e
"KRN",.403,32,40,7,40,387,0)
XUEXISTING USER CPRS TAB^3^8,1^e
"KRN",.403,32,40,7,40,387,2)
10^!IEN^n^^^
"KRN",.403,32,40,8,0)
5^^1,1^1^4
"KRN",.403,32,40,8,1)
Page 5
"KRN",.403,32,40,8,40,0)
^.4032IP^409^2
"KRN",.403,32,40,8,40,57,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,32,40,8,40,409,0)
XUEXISTING USER TRAINEE^2^2,1^e
"KRN",.404,4,0)
XUEXISTING USER 1^200^^^
"KRN",.404,4,40,0)
^.4044I^21^19
"KRN",.404,4,40,1,0)
2^NAME...^3
"KRN",.404,4,40,1,1)
.01
"KRN",.404,4,40,1,2)
3,12^35^3,4^1
"KRN",.404,4,40,1,10)
S XLFNDA=DA,XLFNAME=X,DDSBR="GIVEN^^1.3"
"KRN",.404,4,40,1,11)
S XUITNAME=1 D:'$D(XLFCOMP) HLP^DDSUTL(" *** Press <RET> to edit the component parts of this name. ***") I $D(XLFCOMP) S XLFNDA=DA,XLFNAME=X,DDSBR="GIVEN^^1.3" K XLFCOMP
"KRN",.404,4,40,1,13)
S XLFNDA=DA,XLFNAME=X,DDSBR="GIVEN^^1.3",XLFNCHG=1
"KRN",.404,4,40,2,0)
4^TITLE^3^^F4
"KRN",.404,4,40,2,1)
8
"KRN",.404,4,40,2,2)
4,12^30^4,5
"KRN",.404,4,40,3,0)
3^INITIAL^3
"KRN",.404,4,40,3,1)
1
"KRN",.404,4,40,3,2)
3,65^5^3,56
"KRN",.404,4,40,4,0)
5^NICK NAME^3
"KRN",.404,4,40,4,1)
13
"KRN",.404,4,40,4,2)
4,65^10^4,54
"KRN",.404,4,40,5,0)
13^PRIMARY MENU OPTION^3^
"KRN",.404,4,40,5,1)
201
"KRN",.404,4,40,5,2)
10,33^30^10,12
"KRN",.404,4,40,6,0)
14^Select SECONDARY MENU OPTIONS^3
"KRN",.404,4,40,6,1)
203
"KRN",.404,4,40,6,2)
11,33^30^11,2
"KRN",.404,4,40,6,7)
^1.1
"KRN",.404,4,40,7,0)
15^Want to edit ACCESS CODE (Y/N)^3
"KRN",.404,4,40,7,1)
2.1
"KRN",.404,4,40,7,2)
12,33^3^12,1
"KRN",.404,4,40,8,0)
17^Want to edit VERIFY CODE (Y/N)^3
"KRN",.404,4,40,8,1)
11.1
"KRN",.404,4,40,8,2)
13,33^3^13,1
"KRN",.404,4,40,9,0)
16^FILE MANAGER ACCESS CODE^3
"KRN",.404,4,40,9,1)
3
"KRN",.404,4,40,9,2)
12,65^15^12,39
"KRN",.404,4,40,12,0)
18^Select DIVISION^3
"KRN",.404,4,40,12,1)
16
"KRN",.404,4,40,12,2)
15,33^30^15,16
"KRN",.404,4,40,12,7)
^1.2
"KRN",.404,4,40,13,0)
19^SERVICE/SECTION^3^^
"KRN",.404,4,40,13,1)
29
"KRN",.404,4,40,13,2)
16,33^30^16,16
"KRN",.404,4,40,14,0)
9^MAIL CODE^3
"KRN",.404,4,40,14,1)
28
"KRN",.404,4,40,14,2)
6,65^10^6,54
"KRN",.404,4,40,15,0)
1^1^1^
"KRN",.404,4,40,15,2)
^^1,74
"KRN",.404,4,40,16,0)
6^SSN^3^^F1
"KRN",.404,4,40,16,1)
9
"KRN",.404,4,40,16,2)
5,12^9^5,7
"KRN",.404,4,40,17,0)
8^DEGREE^3^^F8
"KRN",.404,4,40,17,1)
10.6
"KRN",.404,4,40,17,2)
6,12^10^6,4
"KRN",.404,4,40,18,0)
10^DISUSER^3
"KRN",.404,4,40,18,1)
7
"KRN",.404,4,40,18,2)
7,12^3^7,3
"KRN",.404,4,40,19,0)
11^TERMINATION DATE^3
"KRN",.404,4,40,19,1)
9.2
"KRN",.404,4,40,19,2)
7,65^11^7,47
"KRN",.404,4,40,20,0)
12^Termination Reason^3
"KRN",.404,4,40,20,1)
9.4
"KRN",.404,4,40,20,2)
8,23^45^8,3
"KRN",.404,4,40,21,0)
7^DOB^3^^F2
"KRN",.404,4,40,21,1)
5
"KRN",.404,4,40,21,2)
5,65^11^5,60
"KRN",.404,5,0)
XUEXISTING USER 2^200^^^
"KRN",.404,5,40,0)
^.4044I^18^15
"KRN",.404,5,40,1,0)
2^TIMED READ (# OF SECONDS)^3
"KRN",.404,5,40,1,1)
200.1
"KRN",.404,5,40,1,2)
4,31^5^4,4
"KRN",.404,5,40,2,0)
3^MULTIPLE SIGN-ON^3
"KRN",.404,5,40,2,1)
200.04
"KRN",.404,5,40,2,2)
6,31^11^6,13
"KRN",.404,5,40,2,11)
D EN^DDIOL("If you select 'Only one IP' be sure to put a value into the MULTIPLE SIGN-ON LIMIT field so users can sign-on at least once.")
"KRN",.404,5,40,3,0)
5.2^AUTO MENU^3
"KRN",.404,5,40,3,1)
200.06
"KRN",.404,5,40,3,2)
7,60^20^7,49
"KRN",.404,5,40,4,0)
5^ASK DEVICE TYPE AT SIGN-ON^3
"KRN",.404,5,40,4,1)
200.05
"KRN",.404,5,40,4,2)
7,31^9^7,3
"KRN",.404,5,40,5,0)
6^TYPE-AHEAD^3
"KRN",.404,5,40,5,1)
200.09
"KRN",.404,5,40,5,2)
8,60^11^8,48
"KRN",.404,5,40,6,0)
7^PROHIBITED TIMES FOR SIGN-ON^3
"KRN",.404,5,40,6,1)
15
"KRN",.404,5,40,6,2)
8,31^9^8,1
"KRN",.404,5,40,7,0)
10^ALLOWED TO USE SPOOLER^3
"KRN",.404,5,40,7,1)
41
"KRN",.404,5,40,7,2)
12,31^3^12,7
"KRN",.404,5,40,8,0)
12^CAN MAKE INTO A MAIL MESSAGE^3
"KRN",.404,5,40,8,1)
41.2
"KRN",.404,5,40,8,2)
13,31^3^13,1
"KRN",.404,5,40,10,0)
13^FILE RANGE^3
"KRN",.404,5,40,10,1)
31.1
"KRN",.404,5,40,10,2)
15,31^30^15,19
"KRN",.404,5,40,12,0)
14^ALWAYS SHOW SECONDARIES^3
"KRN",.404,5,40,12,1)
200.11
"KRN",.404,5,40,12,2)
16,31^3^16,6
"KRN",.404,5,40,13,0)
1^2^1^
"KRN",.404,5,40,13,2)
^^1,74^1
"KRN",.404,5,40,14,0)
11^PAC^3
"KRN",.404,5,40,14,1)
14
"KRN",.404,5,40,14,2)
12,63^8^12,58
"KRN",.404,5,40,16,0)
8^AUTO SIGN-ON^3
"KRN",.404,5,40,16,1)
200.18
"KRN",.404,5,40,16,2)
9,60^3^9,46
"KRN",.404,5,40,17,0)
9^Preferred Editor^3
"KRN",.404,5,40,17,1)
31.3
"KRN",.404,5,40,17,2)
10,31^30^10,13
"KRN",.404,5,40,17,3)
SCREEN EDITOR
"KRN",.404,5,40,18,0)
3.2^MULTIPLE SIGN-ON LIMIT^3
"KRN",.404,5,40,18,1)
200.19
"KRN",.404,5,40,18,2)
6,70^3^6,46
"KRN",.404,6,0)
XUEXISTING USER 3^200.03
"KRN",.404,6,40,0)
^.4044I^3^3
"KRN",.404,6,40,1,0)
1^SECONDARY MENU OPTIONS^1^
"KRN",.404,6,40,1,2)
^^1,33^
"KRN",.404,6,40,2,0)
2^SECONDARY MENU OPTIONS^3
"KRN",.404,6,40,2,1)
.01
"KRN",.404,6,40,2,2)
3,25^30^3,1
"KRN",.404,6,40,3,0)
3^SYNONYM^3
"KRN",.404,6,40,3,1)
2
"KRN",.404,6,40,3,2)
4,25^4^4,16
"KRN",.404,7,0)
XUEXISTING USER 4^200.02
"KRN",.404,7,40,0)
^.4044I^3^3
"KRN",.404,7,40,1,0)
1^DIVISION^1^
"KRN",.404,7,40,1,2)
^^1,33^
"KRN",.404,7,40,2,0)
2^DIVISION^3
"KRN",.404,7,40,2,1)
.01
"KRN",.404,7,40,2,2)
3,11^30^3,1
"KRN",.404,7,40,3,0)
3^DEFAULT^3
"KRN",.404,7,40,3,1)
1
"KRN",.404,7,40,3,2)
4,11^3^4,2
"KRN",.404,57,0)
XUEXISTING USER 0^200^
"KRN",.404,57,40,0)
^.4044I^6^5
"KRN",.404,57,40,1,0)
2^NAME^3
"KRN",.404,57,40,1,1)
.01
"KRN",.404,57,40,1,2)
2,7^30^2,1
"KRN",.404,57,40,1,4)
^^^1
"KRN",.404,57,40,2,0)
1^Edit an Existing User^1^
"KRN",.404,57,40,2,2)
^^1,30^1
"KRN",.404,57,40,3,0)
3^Page^1^
"KRN",.404,57,40,3,2)
^^2,69
"KRN",.404,57,40,5,0)
4^of 5^1^
"KRN",.404,57,40,5,2)
^^2,76
"KRN",.404,57,40,6,0)
5^_______________________________________________________________________________^1
"KRN",.404,57,40,6,2)
^^3,1
"KRN",.404,60,0)
XUEXISTING USER 5^200
"KRN",.404,60,40,0)
^.4044I^10^10
"KRN",.404,60,40,1,0)
1^3^1^
"KRN",.404,60,40,1,2)
^^1,74^
"KRN",.404,60,40,2,0)
2^PROHIBITED TIMES FOR SIGN-ON^3
"KRN",.404,60,40,2,1)
15
"KRN",.404,60,40,2,2)
3,31^21^3,1
"KRN",.404,60,40,3,0)
3^PHONE^3
"KRN",.404,60,40,3,1)
.131
"KRN",.404,60,40,3,2)
5,19^20^5,12
"KRN",.404,60,40,4,0)
4^OFFICE PHONE^3
"KRN",.404,60,40,4,1)
.132
"KRN",.404,60,40,4,2)
5,56^20^5,42
"KRN",.404,60,40,5,0)
7^VOICE PAGER^3
"KRN",.404,60,40,5,1)
.137
"KRN",.404,60,40,5,2)
7,19^20^7,6
"KRN",.404,60,40,6,0)
6^FAX NUMBER^3
"KRN",.404,60,40,6,1)
.136
"KRN",.404,60,40,6,2)
6,56^20^6,44
"KRN",.404,60,40,7,0)
5^COMMERCIAL PHONE^3
"KRN",.404,60,40,7,1)
.135
"KRN",.404,60,40,7,2)
6,19^20^6,1
"KRN",.404,60,40,8,0)
8^DIGITAL PAGER^3
"KRN",.404,60,40,8,1)
.138
"KRN",.404,60,40,8,2)
7,56^20^7,41
"KRN",.404,60,40,9,0)
9^LANGUAGE^3
"KRN",.404,60,40,9,1)
200.07
"KRN",.404,60,40,9,2)
8,19^10^8,9
"KRN",.404,60,40,10,0)
10^Person Class                                         Effective     Expired^1
"KRN",.404,60,40,10,2)
^^10,2
"KRN",.404,96,0)
XU-PERSON CLASS 2^200.05
"KRN",.404,96,40,0)
^.4044I^3^3
"KRN",.404,96,40,1,0)
1^^3
"KRN",.404,96,40,1,1)
.01
"KRN",.404,96,40,1,2)
1,2^40
"KRN",.404,96,40,1,11)
D DDS1^XUA4A72
"KRN",.404,96,40,1,14)
S:$L(DDSOLD)&(X'=DDSOLD) DDSERROR=1
"KRN",.404,96,40,2,0)
2^^3
"KRN",.404,96,40,2,1)
2
"KRN",.404,96,40,2,2)
1,52^12
"KRN",.404,96,40,2,4)
^^^0
"KRN",.404,96,40,2,12)
D DDS2^XUA4A72
"KRN",.404,96,40,2,14)
D DDS3^XUA4A72(2)
"KRN",.404,96,40,3,0)
3^^3
"KRN",.404,96,40,3,1)
3
"KRN",.404,96,40,3,2)
1,67^12
"KRN",.404,96,40,3,14)
D DDS3^XUA4A72(3)
"KRN",.404,97,0)
XUNEW USER^200
"KRN",.404,336,0)
XUEXISTING USER NAME COMPONENT^20
"KRN",.404,336,11)
I $G(XLFNCHG),$D(XLFNC) N FLD,NC,SUB M NC=XLFNC K XLFNC S (XLFNAME,XLFNEW)=NC K XLFNCHG S FLD=0 F SUB="FAMILY","GIVEN","MIDDLE","","SUFFIX" S FLD=FLD+1 D:SUB]"" PUT^DDSVAL(DIE,DA,FLD,$G(NC(SUB)),"","I")
"KRN",.404,336,40,0)
^.4044I^8^7
"KRN",.404,336,40,1,0)
1^NAME COMPONENTS^1
"KRN",.404,336,40,1,2)
^^2,38
"KRN",.404,336,40,2,0)
5^Family (Last)^3
"KRN",.404,336,40,2,1)
1
"KRN",.404,336,40,2,2)
6,18^35^6,3
"KRN",.404,336,40,3,0)
3^Given (First)^3^^GIVEN
"KRN",.404,336,40,3,1)
2
"KRN",.404,336,40,3,2)
4,18^25^4,3
"KRN",.404,336,40,4,0)
4^Middle^3
"KRN",.404,336,40,4,1)
3
"KRN",.404,336,40,4,2)
5,18^25^5,10
"KRN",.404,336,40,5,0)
2^Prefix^3
"KRN",.404,336,40,5,1)
4
"KRN",.404,336,40,5,2)
3,18^10^3,10
"KRN",.404,336,40,6,0)
6^Suffix^3
"KRN",.404,336,40,6,1)
5
"KRN",.404,336,40,6,2)
7,18^10^7,10
"KRN",.404,336,40,8,0)
8^^4
"KRN",.404,336,40,8,2)
9,3^35
"KRN",.404,336,40,8,30)
N NC S NC("FAMILY")={1},NC("GIVEN")={2},NC("MIDDLE")={3},NC("SUFFIX")={5},(XLFNEW,Y)=$$BLDNAME^XLFNAME8(.NC,35)
"KRN",.404,386,0)
XUEXISTING USER CPRS^200
"KRN",.404,386,40,0)
^.4044I^8^8
"KRN",.404,386,40,1,0)
1^4^1
"KRN",.404,386,40,1,2)
^^1,74
"KRN",.404,386,40,2,0)
2^RESTRICT PATIENT SELECTION^3
"KRN",.404,386,40,2,1)
101.01
"KRN",.404,386,40,2,2)
3,29^3^3,1
"KRN",.404,386,40,3,0)
3^OE/RR LIST^3
"KRN",.404,386,40,3,1)
101.02
"KRN",.404,386,40,3,2)
3,48^30^3,36
"KRN",.404,386,40,4,0)
4^CPRS TAB ACCESS:^1
"KRN",.404,386,40,4,2)
^^5,1
"KRN",.404,386,40,5,0)
5^Effective Date^1
"KRN",.404,386,40,5,2)
^^6,46
"KRN",.404,386,40,6,0)
6^Expiration Date^1
"KRN",.404,386,40,6,2)
^^6,62
"KRN",.404,386,40,7,0)
7^Name^1
"KRN",.404,386,40,7,2)
^^6,3
"KRN",.404,386,40,8,0)
8^Description^1
"KRN",.404,386,40,8,2)
^^6,9
"KRN",.404,387,0)
XUEXISTING USER CPRS TAB^200.010113
"KRN",.404,387,40,0)
^.4044I^4^4
"KRN",.404,387,40,1,0)
1^^3
"KRN",.404,387,40,1,1)
.01
"KRN",.404,387,40,1,2)
1,3^3
"KRN",.404,387,40,2,0)
2^^3
"KRN",.404,387,40,2,1)
.02
"KRN",.404,387,40,2,2)
1,47^11
"KRN",.404,387,40,3,0)
3^^3
"KRN",.404,387,40,3,1)
.03
"KRN",.404,387,40,3,2)
1,64^11
"KRN",.404,387,40,3,14)
I X]"" N XUD,XUM S XUD=$$GET^DDSVAL(DIE,.DA,.02,"","I") S XUM=$S(XUD="":"You must first enter an EFFECTIVE DATE.",X<XUD:"The EXPIRATION DATE must not precede the EFFECTIVE DATE.",1:"") I $G(XUM)]"" S DDSERROR=1 D HLP^DDSUTL(XUM)
"KRN",.404,387,40,4,0)
4^^4
"KRN",.404,387,40,4,2)
1,9^35
"KRN",.404,387,40,4,30)
=$S($D(^DD(101.13,1,0))#2:$$GET^DDSVAL(101.13,{.01;I},1),1:"")
"KRN",.404,409,0)
XUEXISTING USER TRAINEE^200
"KRN",.404,409,40,0)
^.4044I^13^13
"KRN",.404,409,40,1,0)
1^5^1
"KRN",.404,409,40,1,2)
^^1,74
"KRN",.404,409,40,2,0)
2^PERMANENT ADDRESS:^1
"KRN",.404,409,40,2,2)
^^3,1
"KRN",.404,409,40,3,0)
3^Street 1^3^^F3
"KRN",.404,409,40,3,1)
.111
"KRN",.404,409,40,3,2)
4,21^50^4,11
"KRN",.404,409,40,4,0)
4^Street 2^3^^F4
"KRN",.404,409,40,4,1)
.112
"KRN",.404,409,40,4,2)
5,21^50^5,11
"KRN",.404,409,40,5,0)
5^Street 3^3^^F5
"KRN",.404,409,40,5,1)
.113
"KRN",.404,409,40,5,2)
6,21^50^6,11
"KRN",.404,409,40,6,0)
6^City^3^^F6
"KRN",.404,409,40,6,1)
.114
"KRN",.404,409,40,6,2)
7,21^30^7,15
"KRN",.404,409,40,7,0)
7^State^3^^F7
"KRN",.404,409,40,7,1)
.115
"KRN",.404,409,40,7,2)
8,21^30^8,14
"KRN",.404,409,40,8,0)
8^Zip Code^3^^F8
"KRN",.404,409,40,8,1)
.116
"KRN",.404,409,40,8,2)
9,21^10^9,11
"KRN",.404,409,40,9,0)
9^E-Mail Address^3^^F9
"KRN",.404,409,40,9,1)
.151
"KRN",.404,409,40,9,2)
10,21^50^10,5
"KRN",.404,409,40,10,0)
10^Is this person a Clinical Trainee?^2^^TR
"KRN",.404,409,40,10,2)
12,37^3^12,1^1
"KRN",.404,409,40,10,3)
!M
"KRN",.404,409,40,10,3.1)
S Y=$S($$GET^DDSVAL(200,DA,12.2):"YES",1:"NO")
"KRN",.404,409,40,10,13)
D REQ^XUSER2(X)
"KRN",.404,409,40,10,20)
Y
"KRN",.404,409,40,11,0)
11^Current Degree Lvl^3^^12.1F
"KRN",.404,409,40,11,1)
12.1
"KRN",.404,409,40,11,2)
14,21^59^14,1
"KRN",.404,409,40,12,0)
12^Program of Study^3^^12.2F
"KRN",.404,409,40,12,1)
12.2
"KRN",.404,409,40,12,2)
15,21^59^15,3
"KRN",.404,409,40,12,11)
D:X]"" HLP^DDSUTL($P($G(^USC(8932.2,+$G(X),0)),U))
"KRN",.404,409,40,13,0)
14^Last Training Year^3^^12.3F
"KRN",.404,409,40,13,1)
12.3
"KRN",.404,409,40,13,2)
16,21^4^16,1
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"PKG",172,-1)
1^1
"PKG",172,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",172,20,0)
^9.402P^^
"PKG",172,22,0)
^9.49I^1^1
"PKG",172,22,1,0)
8.0^2950703^2981210
"PKG",172,22,1,"PAH",1,0)
343^3040716^100824
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","XLFNAME2")
0^12^B10615051
"RTN","XLFNAME2",1,0)
XLFNAME2 ;CIOFO-SF/MKO-UPDATE ENTRY POINTS;1:07 PM  24 Apr 2003
"RTN","XLFNAME2",2,0)
 ;;8.0;KERNEL;**134,211,301,343**;Jul 10, 1995
"RTN","XLFNAME2",3,0)
 ;
"RTN","XLFNAME2",4,0)
UPDNAME(XUFIL,XUREC,XUFLD,XUCOMP,XUFLAG) ;Update source name field
"RTN","XLFNAME2",5,0)
 ;Called from "ANAME" MUMPS xref on file #20.
"RTN","XLFNAME2",6,0)
 ;
"RTN","XLFNAME2",7,0)
 N XUIENS,XUFDA,XUMAX,XUMSG,XUNAME,DIERR
"RTN","XLFNAME2",8,0)
 I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1
"RTN","XLFNAME2",9,0)
 S:$G(XUFLAG)="" XUFLAG="CLS"
"RTN","XLFNAME2",10,0)
 ;
"RTN","XLFNAME2",11,0)
 ;Get IENS from XUREC
"RTN","XLFNAME2",12,0)
 I $G(XUREC)'["," S XUIENS=$$IENS^DILF(.XUREC)
"RTN","XLFNAME2",13,0)
 E  S XUIENS=XUREC S:XUIENS'?.E1"," XUIENS=XUIENS_","
"RTN","XLFNAME2",14,0)
 ;
"RTN","XLFNAME2",15,0)
 ;Get maximum length of source field
"RTN","XLFNAME2",16,0)
 I XUFLAG["L",'$P(XUFLAG,"L",2) D
"RTN","XLFNAME2",17,0)
 . S XUFLAG=$TR(XUFLAG,"L")_"L"_+$$GET1^DID(XUFIL,XUFLD,"","FIELD LENGTH","","XUMSG")
"RTN","XLFNAME2",18,0)
 . K DIERR,XUMSG
"RTN","XLFNAME2",19,0)
 ;
"RTN","XLFNAME2",20,0)
 ;Get name from components; quit if source name = new name
"RTN","XLFNAME2",21,0)
 S XUNAME=$$BLDNAME^XLFNAME8(.XUCOMP,35)
"RTN","XLFNAME2",22,0)
 ;S XUNAME=$$NAMEFMT^XLFNAME(.XUCOMP,"F",XUFLAG)
"RTN","XLFNAME2",23,0)
 ;
"RTN","XLFNAME2",24,0)
 Q:XUNAME=$$GET1^DIQ(XUFIL,XUIENS,XUFLD,"I","","XUMSG")  K DIERR,XUMSG
"RTN","XLFNAME2",25,0)
 ;
"RTN","XLFNAME2",26,0)
 ;Call Filer to edit entry in source file
"RTN","XLFNAME2",27,0)
 S XUFDA(XUFIL,XUIENS,XUFLD)=XUNAME
"RTN","XLFNAME2",28,0)
 D FILE^DIE("","XUFDA","XUMSG") K DIERR,XUMSG
"RTN","XLFNAME2",29,0)
 Q
"RTN","XLFNAME2",30,0)
 ;
"RTN","XLFNAME2",31,0)
UPDCOMP(XUFIL,XUREC,XUFLD,XUNAME,XUPTR,XUPVAL,XUFLAG) ;Update Name Components entry
"RTN","XLFNAME2",32,0)
 ;Called from set logic of "ANAME" MUMPS xref of file #200,
"RTN","XLFNAME2",33,0)
 ;Called from UPDATE^XLFNAME3 to update components during conversion.
"RTN","XLFNAME2",34,0)
 N XUDEG,XUIEN,XUIENS,XUFDA,XUMSG,DIERR
"RTN","XLFNAME2",35,0)
 I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1
"RTN","XLFNAME2",36,0)
 ;
"RTN","XLFNAME2",37,0)
 ;Get IENS from XUREC
"RTN","XLFNAME2",38,0)
 I $G(XUREC)'["," S XUIENS=$$IENS^DILF(.XUREC)
"RTN","XLFNAME2",39,0)
 E  S XUIENS=XUREC S:XUIENS'?.E1"," XUIENS=XUIENS_","
"RTN","XLFNAME2",40,0)
 ;
"RTN","XLFNAME2",41,0)
 ;Get name components from XUNAME
"RTN","XLFNAME2",42,0)
 I $D(XUNAME)=1,XUNAME]"" D NAMECOMP^XLFNAME(.XUNAME)
"RTN","XLFNAME2",43,0)
 ;
"RTN","XLFNAME2",44,0)
 ;Call updater to add or edit entry in Name Component file
"RTN","XLFNAME2",45,0)
 S XUFDA(20,"?+1,",.01)=XUFIL
"RTN","XLFNAME2",46,0)
 S XUFDA(20,"?+1,",.02)=XUFLD
"RTN","XLFNAME2",47,0)
 S XUFDA(20,"?+1,",.03)=XUIENS
"RTN","XLFNAME2",48,0)
 S:$D(XUNAME("FAMILY"))#2 XUFDA(20,"?+1,",1)=XUNAME("FAMILY")
"RTN","XLFNAME2",49,0)
 S:$D(XUNAME("GIVEN"))#2 XUFDA(20,"?+1,",2)=XUNAME("GIVEN")
"RTN","XLFNAME2",50,0)
 S:$D(XUNAME("MIDDLE"))#2 XUFDA(20,"?+1,",3)=XUNAME("MIDDLE")
"RTN","XLFNAME2",51,0)
 S:$D(XUNAME("PREFIX"))#2 XUFDA(20,"?+1,",4)=XUNAME("PREFIX")
"RTN","XLFNAME2",52,0)
 S:$D(XUNAME("SUFFIX"))#2 XUFDA(20,"?+1,",5)=XUNAME("SUFFIX")
"RTN","XLFNAME2",53,0)
 S:$D(XUNAME("DEGREE"))#2 XUFDA(20,"?+1,",6)=XUNAME("DEGREE")
"RTN","XLFNAME2",54,0)
 S:$D(XUNAME("NOTES"))#2 XUFDA(20,"?+1,",11)=XUNAME("NOTES")
"RTN","XLFNAME2",55,0)
 S:$D(XUFLAG)#2 XUFDA(20,"?+1,",7)=XUFLAG
"RTN","XLFNAME2",56,0)
 D UPDATE^DIE("K","XUFDA","XUIEN","XUMSG") K DIERR,XUMSG
"RTN","XLFNAME2",57,0)
 ;
"RTN","XLFNAME2",58,0)
 ;Update pointer
"RTN","XLFNAME2",59,0)
 I $G(XUPTR),$G(XUIEN(1)),$G(XUIEN(1))'=$G(XUPVAL) D
"RTN","XLFNAME2",60,0)
 . S XUPVAL=XUIEN(1)
"RTN","XLFNAME2",61,0)
 . S XUFDA(XUFIL,XUIENS,XUPTR)=XUPVAL
"RTN","XLFNAME2",62,0)
 . D FILE^DIE("","XUFDA","XUMSG") K DIERR,XUMSG
"RTN","XLFNAME2",63,0)
 Q
"RTN","XLFNAME2",64,0)
 ;
"RTN","XLFNAME2",65,0)
DELCOMP(XUFIL,XUREC,XUFLD,XUPTR) ;Delete Name Components entry
"RTN","XLFNAME2",66,0)
 ;Called from kill logic "ANAME" MUMPS xref of file #200
"RTN","XLFNAME2",67,0)
 N DA,DIK,XUFDA,XUIENS,XUMSG,XUVAL,DIERR
"RTN","XLFNAME2",68,0)
 ;
"RTN","XLFNAME2",69,0)
 ;Get IENS from XUREC
"RTN","XLFNAME2",70,0)
 I $G(XUREC)'["," S XUIENS=$$IENS^DILF(.XUREC)
"RTN","XLFNAME2",71,0)
 E  S XUIENS=XUREC S:XUIENS'?.E1"," XUIENS=XUIENS_","
"RTN","XLFNAME2",72,0)
 ;
"RTN","XLFNAME2",73,0)
 ;Lookup entry in Name Components file
"RTN","XLFNAME2",74,0)
 S XUVAL(1)=XUFIL,XUVAL(2)=XUFLD,XUVAL(3)=XUIENS
"RTN","XLFNAME2",75,0)
 S DA=$$FIND1^DIC(20,"","X",.XUVAL,"BB","","XUMSG") ;8*301
"RTN","XLFNAME2",76,0)
 Q:$G(DIERR)
"RTN","XLFNAME2",77,0)
 ;
"RTN","XLFNAME2",78,0)
 ;Delete entry from Name Components file
"RTN","XLFNAME2",79,0)
 S DIK="^VA(20,"
"RTN","XLFNAME2",80,0)
 D ^DIK
"RTN","XLFNAME2",81,0)
 ;
"RTN","XLFNAME2",82,0)
 ;Delete pointer value
"RTN","XLFNAME2",83,0)
 I $G(XUPTR) D
"RTN","XLFNAME2",84,0)
 . K XUFDA S XUFDA(XUFIL,XUIENS,XUPTR)=""
"RTN","XLFNAME2",85,0)
 . D FILE^DIE("","XUFDA","XUMSG") K XUMSG,DIERR
"RTN","XLFNAME2",86,0)
 Q
"RTN","XLFNAME2",87,0)
 ;
"RTN","XLFNAME2",88,0)
CHKPTR ;Make sure entry contains a valid pointer to Name Components file.
"RTN","XLFNAME2",89,0)
 ;Called from the pre-action on the XUEXISTING USER form.
"RTN","XLFNAME2",90,0)
 N AIEN,DEG,FDA,NAM,PTR,DIERR
"RTN","XLFNAME2",91,0)
 ;
"RTN","XLFNAME2",92,0)
 ;Get current pointer value
"RTN","XLFNAME2",93,0)
 S PTR=+$P($G(^VA(200,DA,3.1)),U)
"RTN","XLFNAME2",94,0)
 ;
"RTN","XLFNAME2",95,0)
 ;If not valid, get standard name, and update the Name Components file
"RTN","XLFNAME2",96,0)
 I 'PTR!($D(^VA(20,PTR,0))[0) D
"RTN","XLFNAME2",97,0)
 . K PTR
"RTN","XLFNAME2",98,0)
 . S NAM=$P($G(^VA(200,DA,0)),U)
"RTN","XLFNAME2",99,0)
 . S DEG=$P($G(^VA(200,DA,3.1)),U,6)
"RTN","XLFNAME2",100,0)
 . D STDNAME^XLFNAME(.NAM,"C")
"RTN","XLFNAME2",101,0)
 . D UPDCOMP(200,DA_",",.01,.NAM,10.1)
"RTN","XLFNAME2",102,0)
 Q
"RTN","XLFNAME7")
0^16^B12212938
"RTN","XLFNAME7",1,0)
XLFNAME7 ;BPOIFO/KEITH - NAME STANDARDIZATION ; 27 Jan 2002 11:05 PM
"RTN","XLFNAME7",2,0)
 ;;8.0;KERNEL;**343**; Jul 10, 1995;
"RTN","XLFNAME7",3,0)
 ;
"RTN","XLFNAME7",4,0)
FORMAT(XUNAME,XUMINL,XUMAXL,XUNOP,XUCOMA,XUAUDIT,XUFAM,XUDNC) ;Format name value
"RTN","XLFNAME7",5,0)
 ;Input: XUNAME=text value representing person name to transform
"RTN","XLFNAME7",6,0)
 ;       XUMINL=minimum length (optional), default 3
"RTN","XLFNAME7",7,0)
 ;       XUMAXL=maximum length (optional), default 30
"RTN","XLFNAME7",8,0)
 ;        XUNOP=1 to standardize last name for 'NOP' x-ref 
"RTN","XLFNAME7",9,0)
 ;                (for the PAITNE file). (optional)
"RTN","XLFNAME7",10,0)
 ;       XUCOMA=0 to not require a comma
"RTN","XLFNAME7",11,0)
 ;              1 to require a comma in the input value
"RTN","XLFNAME7",12,0)
 ;              2 to add a comma if none
"RTN","XLFNAME7",13,0)
 ;              3 to prohibit (remove) commas
"RTN","XLFNAME7",14,0)
 ;              (optional) default if not specified is 1
"RTN","XLFNAME7",15,0)
 ;
"RTN","XLFNAME7",16,0)
 ;      XUAUDIT=variable to return audit, pass by reference (optional),
"RTN","XLFNAME7",17,0)
 ;              returned values:  
"RTN","XLFNAME7",18,0)
 ;              XUAUDIT=0 if no change was made
"RTN","XLFNAME7",19,0)
 ;                      1 if name is changed
"RTN","XLFNAME7",20,0)
 ;                      2 if name could not be converted
"RTN","XLFNAME7",21,0)
 ;             XUAUDIT(1) defined if name contains no comma
"RTN","XLFNAME7",22,0)
 ;             XUAUDIT(2) defined if parenthetical text is removed
"RTN","XLFNAME7",23,0)
 ;             XUAUDIT(3) defined if value is unconvertible
"RTN","XLFNAME7",24,0)
 ;             XUAUDIT(4) defined if characters are removed or changed
"RTN","XLFNAME7",25,0)
 ;        XUFAM='1' if just the family name, '0' otherwise (optional)
"RTN","XLFNAME7",26,0)
 ;        XUDNC='1' to prevent componentization (optional)
"RTN","XLFNAME7",27,0)
 ;             ='2' to return components before standardize
"RTN","XLFNAME7",28,0)
 ;
"RTN","XLFNAME7",29,0)
 ;Output: XUNAME in specified format or null if length of transformed value is less than XUMINL
"RTN","XLFNAME7",30,0)
 ;
"RTN","XLFNAME7",31,0)
 N XUX,XUOX,XUOLDN,XUAX,XUI,XUNEWN
"RTN","XLFNAME7",32,0)
 ;Initialize variables
"RTN","XLFNAME7",33,0)
 K XUAUDIT
"RTN","XLFNAME7",34,0)
 S XUOLDN=XUNAME M XUX=XUNAME
"RTN","XLFNAME7",35,0)
 S XUDNC=$G(XUDNC) D COMP^XLFNAME8(.XUX,.XUDNC)
"RTN","XLFNAME7",36,0)
 S XUMINL=+$G(XUMINL) S:XUMINL<1 XUMINL=3
"RTN","XLFNAME7",37,0)
 S XUMAXL=+$G(XUMAXL) S:XUMAXL<XUMINL XUMAXL=30
"RTN","XLFNAME7",38,0)
 S XUNOP=$S($G(XUNOP)=1:"S",1:"")
"RTN","XLFNAME7",39,0)
 S:'$L($G(XUCOMA)) XUCOMA=1 S XUCOMA=+XUCOMA
"RTN","XLFNAME7",40,0)
 S XUFAM=$S($G(XUFAM)=1:"F",1:"")
"RTN","XLFNAME7",41,0)
 ;
"RTN","XLFNAME7",42,0)
 ;Check for comma
"RTN","XLFNAME7",43,0)
 I XUX'["," S XUAUDIT(1)=""
"RTN","XLFNAME7",44,0)
 I XUCOMA=1,XUX'["," S XUAUDIT=2,XUAUDIT(3)=""  Q ""
"RTN","XLFNAME7",45,0)
 ;Clean input value
"RTN","XLFNAME7",46,0)
 F  Q:'$$F1^XLFNAME8(.XUX,XUCOMA)
"RTN","XLFNAME7",47,0)
 I XUX'=XUOLDN S XUAUDIT(4)=""
"RTN","XLFNAME7",48,0)
 ;Add comma if necessary
"RTN","XLFNAME7",49,0)
 I XUCOMA=2,XUX'[" ",XUX'["," S XUX=XUX_","
"RTN","XLFNAME7",50,0)
 I XUX=XUOLDN K XUAUDIT(4)
"RTN","XLFNAME7",51,0)
 ;Quit if result is too short
"RTN","XLFNAME7",52,0)
 I $L(XUX)<XUMINL S XUAUDIT=2,XUAUDIT(3)="" K XUNAME Q ""
"RTN","XLFNAME7",53,0)
 S XUNAME=XUX I XUDNC'=1 D
"RTN","XLFNAME7",54,0)
 .;Parse the name
"RTN","XLFNAME7",55,0)
 .D STDNAME^XLFNAME(.XUX,XUFAM_"CP",.XUAX)
"RTN","XLFNAME7",56,0)
 .I $D(XUAX("STRIP")) S XUAUDIT(2)=""
"RTN","XLFNAME7",57,0)
 .I $D(XUAX("NM"))!$D(XUAX("PERIOD")) S XUAUDIT(4)=""
"RTN","XLFNAME7",58,0)
 .I $D(XUAX("PUNC"))!($D(XUAX("SPACE"))&'$L(XUFAM)) S XUAUDIT(4)=""
"RTN","XLFNAME7",59,0)
 .I $D(XUAX("SPACE")),$L(XUFAM),XUNAME'=$G(XUX("FAMILY")) S XUAUDIT(4)=""
"RTN","XLFNAME7",60,0)
 .;Standardize the suffix
"RTN","XLFNAME7",61,0)
 .S XUX("SUFFIX")=$$CLEANC^XLFNAME(XUX("SUFFIX"))
"RTN","XLFNAME7",62,0)
 .;Post-clean components
"RTN","XLFNAME7",63,0)
 .S XUI="" F  S XUI=$O(XUX(XUI)) Q:XUI=""  S XUX(XUI)=$$POSTC(XUX(XUI))
"RTN","XLFNAME7",64,0)
 .;Reconstruct name from components
"RTN","XLFNAME7",65,0)
 .S XUNAME=$$NAMEFMT^XLFNAME(.XUX,"F","CL"_XUMAXL_XUNOP)
"RTN","XLFNAME7",66,0)
 .;Adjust name for 'do not componentize'
"RTN","XLFNAME7",67,0)
 .;I XUDNC S XUNAME=XUX("FAMILY")
"RTN","XLFNAME7",68,0)
 ;Return comma for single value names
"RTN","XLFNAME7",69,0)
 I XUCOMA,XUCOMA'=3,XUNAME'["," S XUNAME=XUNAME_","
"RTN","XLFNAME7",70,0)
 ;Check length again
"RTN","XLFNAME7",71,0)
 I $L(XUNAME)<XUMINL S XUAUDIT=2,XUAUDIT(3)="" K XUNAME Q ""
"RTN","XLFNAME7",72,0)
 ;Enforce minimum 2 character last name rule
"RTN","XLFNAME7",73,0)
 ;I '$L(XUFAM),$L($P(XUNAME,","))<3,$P(XUNAME,",")'?2U D  Q ""
"RTN","XLFNAME7",74,0)
 ;.S XUAUDIT=2,XUAUDIT(3)="" K XUNAME
"RTN","XLFNAME7",75,0)
 ;.Q
"RTN","XLFNAME7",76,0)
 ;Remove hyphens and apostrophes for 'NOP' x-ref
"RTN","XLFNAME7",77,0)
 S XUX=XUNAME I XUNOP="S" S XUNAME=$TR(XUNAME,"'-")
"RTN","XLFNAME7",78,0)
 I XUNAME'=XUX S XUAUDIT(4)=""
"RTN","XLFNAME7",79,0)
 I XUNAME=XUOLDN K XUAUDIT
"RTN","XLFNAME7",80,0)
 S XUAUDIT=XUNAME'=XUOLDN I XUAUDIT,$D(XUAUDIT)<10 S XUAUDIT(4)=""
"RTN","XLFNAME7",81,0)
 S XUNEWN=XUNAME M XUNAME=XUX S XUNAME=XUNEWN
"RTN","XLFNAME7",82,0)
 ;Return components before standardization if asked to
"RTN","XLFNAME7",83,0)
 I XUDNC=2 D
"RTN","XLFNAME7",84,0)
 . N XUNAMEC
"RTN","XLFNAME7",85,0)
 . S XUNAMEC=XUNAME
"RTN","XLFNAME7",86,0)
 . I XUOLDN["`" S XUOLDN=$TR(XUOLDN,"`","'")
"RTN","XLFNAME7",87,0)
 . D STDNAME^XLFNAME(.XUOLDN,"C")
"RTN","XLFNAME7",88,0)
 . M XUNAME=XUOLDN
"RTN","XLFNAME7",89,0)
 . S XUNAME=XUNAMEC
"RTN","XLFNAME7",90,0)
 Q XUNAME
"RTN","XLFNAME7",91,0)
 ;
"RTN","XLFNAME7",92,0)
POSTC(XUX) ;Post-clean components
"RTN","XLFNAME7",93,0)
 ;Remove parenthesis if not removed by Kernel
"RTN","XLFNAME7",94,0)
 N XUI,XUXOLD
"RTN","XLFNAME7",95,0)
 S XUXOLD=XUX,XUX=$TR(XUX,"()[]{}")
"RTN","XLFNAME7",96,0)
 ;Check for numbers left behind by Kernel
"RTN","XLFNAME7",97,0)
 F XUI=0:1:9 S XUX=$TR(XUX,XUI)
"RTN","XLFNAME7",98,0)
 I XUX'=XUXOLD S XUAUDIT(4)=""
"RTN","XLFNAME7",99,0)
 Q XUX
"RTN","XLFNAME7",100,0)
 ;
"RTN","XLFNAME7",101,0)
NOP(XUX) ;Produce 'NOP' x-ref value
"RTN","XLFNAME7",102,0)
 ;Input: XUX=name value to evaluate
"RTN","XLFNAME7",103,0)
 ;Output : Standardized name or null if the same as input value
"RTN","XLFNAME7",104,0)
 N XUNEWX
"RTN","XLFNAME7",105,0)
 S XUNEWX=$$FORMAT(XUX,3,30,1)
"RTN","XLFNAME7",106,0)
 Q $S(XUX=XUNEWX:"",1:XUNEWX)
"RTN","XLFNAME7",107,0)
 ;
"RTN","XLFNAME7",108,0)
NARY(XU20NAME) ;Set up name array
"RTN","XLFNAME7",109,0)
 ;Input: XU20NAME=full name value
"RTN","XLFNAME7",110,0)
 ;       XU20NAME(component_names)=corresponding value--if undefined,
"RTN","XLFNAME7",111,0)
 ;                these will get set up
"RTN","XLFNAME7",112,0)
 ;
"RTN","XLFNAME7",113,0)
 N XUX M XUX=XU20NAME
"RTN","XLFNAME7",114,0)
 D STDNAME^XLFNAME(.XU20NAME,"FC")
"RTN","XLFNAME7",115,0)
 M XU20NAME=XUX
"RTN","XLFNAME7",116,0)
 S XU20NAME("NOTES")=$$NOTES^XLFNAME8()
"RTN","XLFNAME7",117,0)
 Q
"RTN","XLFNAME7",118,0)
 ;
"RTN","XLFNAME8")
0^17^B28193744
"RTN","XLFNAME8",1,0)
XLFNAME8 ;BPOIFO/KEITH/DW - NAME STANDARDIZATION ; 12 Aug 2002@20:20
"RTN","XLFNAME8",2,0)
 ;;8.0;KERNEL;**343**; Jul 10, 1995;
"RTN","XLFNAME8",3,0)
 ;
"RTN","XLFNAME8",4,0)
FAMILY ;Family name help text
"RTN","XLFNAME8",5,0)
 S XUM("LENGTH")="1-35"
"RTN","XLFNAME8",6,0)
 Q
"RTN","XLFNAME8",7,0)
       ;
"RTN","XLFNAME8",8,0)
GIVEN ;Given name help text
"RTN","XLFNAME8",9,0)
 S XUM("LENGTH")="1-25"
"RTN","XLFNAME8",10,0)
 Q
"RTN","XLFNAME8",11,0)
 ;
"RTN","XLFNAME8",12,0)
MIDDLE ;Middle name help text
"RTN","XLFNAME8",13,0)
 S XUM("LENGTH")="1-25"
"RTN","XLFNAME8",14,0)
 Q
"RTN","XLFNAME8",15,0)
 ;
"RTN","XLFNAME8",16,0)
PREFIX ;Name prefix help text
"RTN","XLFNAME8",17,0)
 S XUM("LENGTH")="1-10"
"RTN","XLFNAME8",18,0)
 Q
"RTN","XLFNAME8",19,0)
 ;
"RTN","XLFNAME8",20,0)
SUFFIX ;Name suffix help text
"RTN","XLFNAME8",21,0)
 S XUM("LENGTH")="1-10"
"RTN","XLFNAME8",22,0)
 Q
"RTN","XLFNAME8",23,0)
 ;
"RTN","XLFNAME8",24,0)
DEGREE ;Name degree help text
"RTN","XLFNAME8",25,0)
 S XUM("LENGTH")="1-10"
"RTN","XLFNAME8",26,0)
 Q
"RTN","XLFNAME8",27,0)
 ;
"RTN","XLFNAME8",28,0)
CVALID(XUC,XUX,XUM) ;Name component validation
"RTN","XLFNAME8",29,0)
 ; Input: XUC=name component (e.g. FAMILY, GIVEN, etc.)
"RTN","XLFNAME8",30,0)
 ;        XUX=input value to validate
"RTN","XLFNAME8",31,0)
 ;        XUM=array to return results and errors (pass by reference)
"RTN","XLFNAME8",32,0)
 ;
"RTN","XLFNAME8",33,0)
 ;Output: XUM array in the format:
"RTN","XLFNAME8",34,0)
 ;       XUM("ERROR",n)=error text (if any) 
"RTN","XLFNAME8",35,0)
 ;       XUM("HELP",n)=help text          
"RTN","XLFNAME8",36,0)
 ;       XUM("LENGTH")=field length in length (e.g. 3-30) 
"RTN","XLFNAME8",37,0)
 ;       XUM("RESULT")=transformed name value (null if invalid entry)
"RTN","XLFNAME8",38,0)
 ; 
"RTN","XLFNAME8",39,0)
 N XUL,XUF,XUI,XUR,XUMSG,DIERR
"RTN","XLFNAME8",40,0)
 S XUF="FAMILY^GIVEN^MIDDLE^PREFIX^SUFFIX^DEGREE"
"RTN","XLFNAME8",41,0)
 S XUF=$P(XUF,XUC),XUF=$L(XUF,U)
"RTN","XLFNAME8",42,0)
 D @XUC  ;Set up length and help text 
"RTN","XLFNAME8",43,0)
 S XUL=+$P(XUM("LENGTH"),"-")_U_+$P(XUM("LENGTH"),"-",2)
"RTN","XLFNAME8",44,0)
 ;Transform suffixes
"RTN","XLFNAME8",45,0)
 I XUC="SUFFIX" S XUX=$$CLEANC^XLFNAME(XUX)
"RTN","XLFNAME8",46,0)
 ;Clean/format input value 
"RTN","XLFNAME8",47,0)
 S XUX=$$FORMAT^XLFNAME7(XUX,$P(XUL,U),$P(XUL,U,2),,3,,1,1)
"RTN","XLFNAME8",48,0)
 ;Validate against file 20 
"RTN","XLFNAME8",49,0)
 D CHK^DIE(20,XUF,"E",XUX,.XUR,"XUMSG")
"RTN","XLFNAME8",50,0)
 I $D(XUMSG("DIERR","E",701)) D
"RTN","XLFNAME8",51,0)
 .S XUI=$O(XUMSG("DIERR","E",701,""))
"RTN","XLFNAME8",52,0)
 .M XUM("ERROR")=XUMSG("DIERR",XUI,"TEXT")
"RTN","XLFNAME8",53,0)
 .Q
"RTN","XLFNAME8",54,0)
 S XUM("RESULT")=$S(XUR=U:"",1:XUR)
"RTN","XLFNAME8",55,0)
 Q
"RTN","XLFNAME8",56,0)
 ;
"RTN","XLFNAME8",57,0)
NOTES() ;Produce value for the file #20 NOTES ABOUT NAME field
"RTN","XLFNAME8",58,0)
 ;Output: string representing when, who and how editing occurred
"RTN","XLFNAME8",59,0)
 ;
"RTN","XLFNAME8",60,0)
 N XUWHEN,XUWHO,XUHOW
"RTN","XLFNAME8",61,0)
 S XUWHEN=$$FMTE^XLFDT($$NOW^XLFDT())
"RTN","XLFNAME8",62,0)
 S XUWHO=$S($G(DUZ)>0:$$GET1^DIQ(200,DUZ_",",.01),1:"Unknown")
"RTN","XLFNAME8",63,0)
 S XUWHO=XUWHO_" ("_$G(DUZ)_")"
"RTN","XLFNAME8",64,0)
 S XUHOW=$P($G(XQY0),U)
"RTN","XLFNAME8",65,0)
 Q "Edited: "_XUWHEN_" By: "_XUWHO_" With: "_XUHOW
"RTN","XLFNAME8",66,0)
 ;
"RTN","XLFNAME8",67,0)
COMP(XUX,XUDNC) ;Use existing name array
"RTN","XLFNAME8",68,0)
 ;Input: XUX=name array (pass by reference)
"RTN","XLFNAME8",69,0)
 ;     XUDNC='do not componentize' flag (pass by reference)
"RTN","XLFNAME8",70,0)
 ;
"RTN","XLFNAME8",71,0)
 N XUY,XUI,XUZ
"RTN","XLFNAME8",72,0)
 Q:$D(XUX)<10  Q:(XUDNC=0)!(XUDNC=2)
"RTN","XLFNAME8",73,0)
 S XUDNC=1,XUY="FAMILY^GIVEN^MIDDLE^PREFIX^SUFFIX^DEGREE"
"RTN","XLFNAME8",74,0)
 F XUI=1:1:6 S XUZ=$P(XUY,U,XUI) S:'$D(XUX(XUZ)) XUX(XUZ)=""
"RTN","XLFNAME8",75,0)
 Q
"RTN","XLFNAME8",76,0)
 ;
"RTN","XLFNAME8",77,0)
F1(XUX,XUCOMA)  ;Transform text value
"RTN","XLFNAME8",78,0)
 ;Input: XUX=text value to transform (pass by reference)
"RTN","XLFNAME8",79,0)
 ;    XUCOMA=comma indicator
"RTN","XLFNAME8",80,0)
 ;Output: 1 if changed, 0 otherwise
"RTN","XLFNAME8",81,0)
 ;
"RTN","XLFNAME8",82,0)
 N XUI,XUII,XUC,XUY,XUZ,XUOLDX S XUOLDX=XUX
"RTN","XLFNAME8",83,0)
 ;Transform accent grave to apostrophe
"RTN","XLFNAME8",84,0)
 S XUX=$TR(XUX,"`","'")
"RTN","XLFNAME8",85,0)
 ;Transform single characters
"RTN","XLFNAME8",86,0)
 F XUI=1:1:$L(XUX) S XUC=$E(XUX,XUI) D:$$FC1(.XUC,XUCOMA)
"RTN","XLFNAME8",87,0)
 .S XUX=$E(XUX,0,XUI-1)_XUC_$E(XUX,XUI+1,999)
"RTN","XLFNAME8",88,0)
 .Q
"RTN","XLFNAME8",89,0)
 ;Transform double character combinations
"RTN","XLFNAME8",90,0)
 S XUY="  ^--^,,^''^,-^,'^ ,^-,^',^ -^ '^- ^' ^-'^'-"
"RTN","XLFNAME8",91,0)
 S XUZ=" ^-^,^'^,^,^,^,^,^ ^ ^ ^ ^-^-"
"RTN","XLFNAME8",92,0)
 F XUI=1:1 S XUC=$P(XUY,U,XUI) Q:XUC=""  D
"RTN","XLFNAME8",93,0)
 .Q:XUX'[XUC
"RTN","XLFNAME8",94,0)
 .F XUII=1:1:$L(XUX,XUC)-1 D
"RTN","XLFNAME8",95,0)
 ..S XUX=$P(XUX,XUC,0,XUII)_$P(XUZ,U,XUI)_$P(XUX,XUC,XUII+1,999)
"RTN","XLFNAME8",96,0)
 ..Q
"RTN","XLFNAME8",97,0)
 .Q
"RTN","XLFNAME8",98,0)
 ;Remove NMI and NMN
"RTN","XLFNAME8",99,0)
 F XUY="NMI","NMN" I XUX[XUY,XUCOMA=3 D
"RTN","XLFNAME8",100,0)
 .S XUC=$F(XUX,XUY)
"RTN","XLFNAME8",101,0)
 .I " ,"[$E(XUX,(XUC-4))," ,"[$E(XUX,XUC) D
"RTN","XLFNAME8",102,0)
 ..S XUX=$E(XUX,0,(XUC-4))_$E(XUX,(XUC),999)
"RTN","XLFNAME8",103,0)
 ..F XUY="  ",",," I XUX[XUY D
"RTN","XLFNAME8",104,0)
 ...S XUC=$F(XUX,XUY) S XUX=$E(XUX,0,(XUC-3))_$E(XUX,(XUC-1),999) Q
"RTN","XLFNAME8",105,0)
 ..F XUZ=" ","," F XUC=1,$L(XUX) D
"RTN","XLFNAME8",106,0)
 ...I $E(XUX,XUC)=XUZ S XUX=$E(XUX,0,(XUC-1))_$E(XUX,(XUC+1),999) Q
"RTN","XLFNAME8",107,0)
 ..Q
"RTN","XLFNAME8",108,0)
 .Q
"RTN","XLFNAME8",109,0)
 ;Clean up numerics
"RTN","XLFNAME8",110,0)
 I XUX?.E1N.E D
"RTN","XLFNAME8",111,0)
 .S XUY="1ST^2ND^3RD^4TH^5TH^6TH^7TH^8TH^9TH"
"RTN","XLFNAME8",112,0)
 .F XUI=1:1:$L(XUX) S XUC=$E(XUX,XUI) D:XUC?1N
"RTN","XLFNAME8",113,0)
 ..I XUC," ,"[$E(XUX,XUI-1),$E(XUX,XUI,XUI+2)=$P(XUY,U,XUC)," ,"[$E(XUX,XUI+3) Q
"RTN","XLFNAME8",114,0)
 ..I XUC=1," ,"[$E(XUX,XUI-1),$E(XUX,XUI,XUI+3)="10TH"," ,"[$E(XUX,XUI+4) S XUI=XUI+1 Q
"RTN","XLFNAME8",115,0)
 ..S XUX=$E(XUX,0,XUI-1)_$E(XUX,XUI+1,999)
"RTN","XLFNAME8",116,0)
 ..Q
"RTN","XLFNAME8",117,0)
 .Q
"RTN","XLFNAME8",118,0)
 ;Check for dangling apostrophes
"RTN","XLFNAME8",119,0)
 I XUX["'" F XUI=1:1:$L(XUX) S XUC=$E(XUX,XUI) D:XUC?1"'"
"RTN","XLFNAME8",120,0)
 .I $E(XUX,(XUI-1))?1U,$E(XUX,(XUI+1))?1U Q
"RTN","XLFNAME8",121,0)
 .S XUX=$E(XUX,0,(XUI-1))_$E(XUX,(XUI+1),99),XUI=1
"RTN","XLFNAME8",122,0)
 .Q
"RTN","XLFNAME8",123,0)
 ;Remove parenthetical text from name value
"RTN","XLFNAME8",124,0)
 N XUCH S XUOLDX(2)=XUX,XUCH=1 F  Q:'XUCH  D
"RTN","XLFNAME8",125,0)
 .S XUCH=0,XUOLDX(1)=XUX,XUY="()[]{}" D
"RTN","XLFNAME8",126,0)
 ..F XUI=1,3,5 S XUC(1)=$E(XUY,XUI),XUC(2)=$E(XUY,XUI+1) D
"RTN","XLFNAME8",127,0)
 ...S XUZ(1)=$$CLAST(XUX,XUC(1)) Q:'XUZ(1)  S XUZ(2)=$F(XUX,XUC(2),XUZ(1))
"RTN","XLFNAME8",128,0)
 ...I XUZ(2)>XUZ(1) S XUX=$E(XUX,0,(XUZ(1)-2))_$E(XUX,XUZ(2),999)
"RTN","XLFNAME8",129,0)
 ...S XUCH=(XUX'=XUOLDX(1)) Q
"RTN","XLFNAME8",130,0)
 ..Q
"RTN","XLFNAME8",131,0)
 .Q
"RTN","XLFNAME8",132,0)
 S:XUX'=XUOLDX(2) XUAUDIT(2)=""
"RTN","XLFNAME8",133,0)
 F XUI=1:1:6 S XUC=$E(XUY,XUI) D
"RTN","XLFNAME8",134,0)
 .F  Q:XUX'[XUC  S XUX=$P(XUX,XUC)_$P(XUX,XUC,2,999)
"RTN","XLFNAME8",135,0)
 .Q
"RTN","XLFNAME8",136,0)
 ;Insure value begins and ends with an alpha character
"RTN","XLFNAME8",137,0)
 F  Q:'$L(XUX)!($E(XUX,1)?1A)  S XUX=$E(XUX,2,999)
"RTN","XLFNAME8",138,0)
 F  Q:'$L(XUX)!($E(XUX,$L(XUX))?1A)  Q:($L(XUX,",")=2)&($E(XUX,$L(XUX))=",")  S XUX=$E(XUX,1,($L(XUX)-1))
"RTN","XLFNAME8",139,0)
 Q XUX'=XUOLDX
"RTN","XLFNAME8",140,0)
 ;
"RTN","XLFNAME8",141,0)
CLAST(XUX,XUC) ;Find last instance of character
"RTN","XLFNAME8",142,0)
 N XUY,XUZ
"RTN","XLFNAME8",143,0)
 S XUZ=$F(XUX,XUC) Q:'XUZ XUZ
"RTN","XLFNAME8",144,0)
 F  S XUY=$F(XUX,XUC,XUZ) Q:'XUY  S XUZ=XUY
"RTN","XLFNAME8",145,0)
 Q XUZ
"RTN","XLFNAME8",146,0)
 ;
"RTN","XLFNAME8",147,0)
FC1(XUC,XUCOMA) ;Transform single character
"RTN","XLFNAME8",148,0)
 ;Input: XUC=character to transform (pass by reference)
"RTN","XLFNAME8",149,0)
 ;    XUCOMA=comma indicator
"RTN","XLFNAME8",150,0)
 ;Output: 1 if value is changed, 0 otherwise
"RTN","XLFNAME8",151,0)
 ;
"RTN","XLFNAME8",152,0)
 S XUC=$E(XUC) Q:'$L(XUC) 0
"RTN","XLFNAME8",153,0)
 ;See if comma stays
"RTN","XLFNAME8",154,0)
 I XUCOMA'=3,XUC?1"," Q 0
"RTN","XLFNAME8",155,0)
 ;Retain uppercase, numeric, hyphen, apostrophe and space
"RTN","XLFNAME8",156,0)
 Q:XUC?1U!(XUC?1N)!(XUC?1"-")!(XUC?1"'")!(XUC?1" ") 0
"RTN","XLFNAME8",157,0)
 ;Retain parenthesis, bracket and brace characters
"RTN","XLFNAME8",158,0)
 Q:XUC?1"("!(XUC?1")")!(XUC?1"[")!(XUC?1"]")!(XUC?1"{")!(XUC?1"}") 0
"RTN","XLFNAME8",159,0)
 ;Transform lowercase to uppercase
"RTN","XLFNAME8",160,0)
 I XUC?1L S XUC=$C($A(XUC)-32) Q 1
"RTN","XLFNAME8",161,0)
 ;Set all other characters to space
"RTN","XLFNAME8",162,0)
 S XUC=" " Q 1
"RTN","XLFNAME8",163,0)
 ;
"RTN","XLFNAME8",164,0)
CMP(XUNC) ;Cleanup name components
"RTN","XLFNAME8",165,0)
 ;
"RTN","XLFNAME8",166,0)
 N XUCOM,XUI,XUCOMP,XUM
"RTN","XLFNAME8",167,0)
 ;
"RTN","XLFNAME8",168,0)
 S XUCOM="FAMILY^GIVEN^MIDDLE^SUFFIX"
"RTN","XLFNAME8",169,0)
 F XUI=1:1:4 D
"RTN","XLFNAME8",170,0)
 . S XUCOMP=$P(XUCOM,U,XUI)
"RTN","XLFNAME8",171,0)
 . D CVALID^XLFNAME8(XUCOMP,$G(XUNC(XUCOMP)),.XUM)
"RTN","XLFNAME8",172,0)
 . S XUNC(XUCOMP)=$G(XUM("RESULT"))
"RTN","XLFNAME8",173,0)
 Q
"RTN","XLFNAME8",174,0)
 ;
"RTN","XLFNAME8",175,0)
BLDNAME(XUNC,XUMAX) ;Build standard name from components
"RTN","XLFNAME8",176,0)
 ;Called by XU forms
"RTN","XLFNAME8",177,0)
 ;Modified version of BLDNAME^XLFNAME
"RTN","XLFNAME8",178,0)
 ;
"RTN","XLFNAME8",179,0)
 D CMP(.XUNC)
"RTN","XLFNAME8",180,0)
 Q $$NAMEFMT^XLFNAME(.XUNC,"F","CL"_+$G(XUMAX))
"RTN","XLFNAME8",181,0)
 ;
"RTN","XU8343P")
0^2^B9373861
"RTN","XU8343P",1,0)
XU8343P ;BPOIFO/DW - Post-init for XU*8*343 ; 14 April 2004
"RTN","XU8343P",2,0)
 ;;8.0;KERNEL;**343**; Jul 10, 1995;
"RTN","XU8343P",3,0)
 ;
"RTN","XU8343P",4,0)
 Q
"RTN","XU8343P",5,0)
 ;
"RTN","XU8343P",6,0)
POST ;Post-init functions
"RTN","XU8343P",7,0)
 ;
"RTN","XU8343P",8,0)
 N XUMSG
"RTN","XU8343P",9,0)
 ;Make sure the user has a DUZ to receive MailMan messages
"RTN","XU8343P",10,0)
 S XUMSG="Please make sure that you have a valid DUZ, so that you will receive the reports via MailMan."
"RTN","XU8343P",11,0)
 I $G(DUZ)<1 D  Q
"RTN","XU8343P",12,0)
 . D BMES^XPDUTL(.XUMSG)
"RTN","XU8343P",13,0)
 I $P($G(^VA(200,DUZ,0)),U)="" D  Q
"RTN","XU8343P",14,0)
 . D BMES^XPDUTL(.XUMSG)
"RTN","XU8343P",15,0)
 K XUMSG
"RTN","XU8343P",16,0)
 ;
"RTN","XU8343P",17,0)
 ;Update input transforms and field description for field #.01
"RTN","XU8343P",18,0)
 D ITXDES
"RTN","XU8343P",19,0)
 D NEWXR^XU8343Q
"RTN","XU8343P",20,0)
 ;
"RTN","XU8343P",21,0)
 ;Recompile input templates
"RTN","XU8343P",22,0)
 D RECOMP
"RTN","XU8343P",23,0)
 ;
"RTN","XU8343P",24,0)
 ;Update triggered fields
"RTN","XU8343P",25,0)
 D TRIG
"RTN","XU8343P",26,0)
 ;
"RTN","XU8343P",27,0)
 ;Convert existing names
"RTN","XU8343P",28,0)
 D POST^XU8343S
"RTN","XU8343P",29,0)
 ;
"RTN","XU8343P",30,0)
 Q
"RTN","XU8343P",31,0)
 ;
"RTN","XU8343P",32,0)
ITXDES ;Set input transforms and field descriptions
"RTN","XU8343P",33,0)
 D BMES^XPDUTL("Setting field descriptions and input transforms")
"RTN","XU8343P",34,0)
 ;
"RTN","XU8343P",35,0)
 S $P(^DD(200,.01,0),U,5,99)="K XLFNC K:($L(X,"","")'=2) X I $D(X) S XLFNC=X,(X,XLFNC)=$$FORMAT^XLFNAME7(.XLFNC,3,35,,,,,2) K:$L(X)>35!($L(X)<3)!($L(X,"","")'=2)!(X'?1.E1"",""1.E) X,XLFNC K:'$G(XUITNAME) XLFNC"
"RTN","XU8343P",36,0)
 ;
"RTN","XU8343P",37,0)
 K ^DD(200,.01,21)
"RTN","XU8343P",38,0)
 S ^DD(200,.01,21,0)="^^6^6^3040421^"
"RTN","XU8343P",39,0)
 S ^DD(200,.01,21,1,0)="Enter only data that is actually part of the person's name. Do not"
"RTN","XU8343P",40,0)
 S ^DD(200,.01,21,2,0)="include extra titles, identification, flags, local information, etc."
"RTN","XU8343P",41,0)
 S ^DD(200,.01,21,3,0)="Enter the person's name in 'LAST,FIRST MIDDLE SUFFIX' format."
"RTN","XU8343P",42,0)
 S ^DD(200,.01,21,4,0)="This value must be 3-35 characters in length and may contain only"
"RTN","XU8343P",43,0)
 S ^DD(200,.01,21,5,0)="uppercase alpha characters, spaces, apostrophes, hyphens and one comma."
"RTN","XU8343P",44,0)
 S ^DD(200,.01,21,6,0)="All other characters and parenthetical text will be removed."
"RTN","XU8343P",45,0)
 Q
"RTN","XU8343P",46,0)
 ;
"RTN","XU8343P",47,0)
RECOMP ;Recompile input templates
"RTN","XU8343P",48,0)
 D BMES^XPDUTL("Recompiling templates...")
"RTN","XU8343P",49,0)
 ;
"RTN","XU8343P",50,0)
 N XUFLD
"RTN","XU8343P",51,0)
 S XUFLD(200,.01)=""
"RTN","XU8343P",52,0)
 D DIEZ^DIKCUTL3(200,.XUFLD)
"RTN","XU8343P",53,0)
 ;
"RTN","XU8343P",54,0)
 Q
"RTN","XU8343P",55,0)
 ;
"RTN","XU8343P",56,0)
TRIG ;Update triggered fields
"RTN","XU8343P",57,0)
 D BMES^XPDUTL("Updating trigger field definitions...")
"RTN","XU8343P",58,0)
 ;
"RTN","XU8343P",59,0)
 N XUFLD,XUOUT
"RTN","XU8343P",60,0)
 S XUFLD(200,.01)=""
"RTN","XU8343P",61,0)
 D TRIG^DICR(.XUFLD,.XUOUT)
"RTN","XU8343P",62,0)
 ;
"RTN","XU8343P",63,0)
 N XUFL,XUFD
"RTN","XU8343P",64,0)
 S XUFL=0 F  S XUFL=$O(XUOUT(XUFL)) Q:'XUFL  D
"RTN","XU8343P",65,0)
 . S XUFD=0 F  S XUFD=$O(XUOUT(XUFL,XUFD)) Q:'XUFD  D
"RTN","XU8343P",66,0)
 .. D MES^XPDUTL("         Field #"_XUFD_" of file #"_XUFL_" updated.")
"RTN","XU8343P",67,0)
 ;
"RTN","XU8343P",68,0)
 Q
"RTN","XU8343P",69,0)
 ;
"RTN","XU8343Q")
0^19^B1464204
"RTN","XU8343Q",1,0)
XU8343Q ;BPOIFO/DW-UPDATE NEW-STYLE XREF FOR XU*8*343;9:19 AM  22 Jun 2004
"RTN","XU8343Q",2,0)
 ;;8.0;KERNEL;**343**; Jul 10, 1995;
"RTN","XU8343Q",3,0)
 ;
"RTN","XU8343Q",4,0)
NEWXR ;Update the new-style "B" cross-reference of file #200
"RTN","XU8343Q",5,0)
 D BMES^XPDUTL("Updating the B cross-reference...")
"RTN","XU8343Q",6,0)
 ;
"RTN","XU8343Q",7,0)
 N XUXR,XURES,XUOUT
"RTN","XU8343Q",8,0)
 S XUXR("FILE")=200
"RTN","XU8343Q",9,0)
 S XUXR("NAME")="B"
"RTN","XU8343Q",10,0)
 S XUXR("TYPE")="R"
"RTN","XU8343Q",11,0)
 S XUXR("USE")="LS"
"RTN","XU8343Q",12,0)
 S XUXR("EXECUTION")="F"
"RTN","XU8343Q",13,0)
 S XUXR("ACTIVITY")="IR"
"RTN","XU8343Q",14,0)
 S XUXR("SHORT DESCR")="Regular ""B"" index on .01 field with transform, length 35."
"RTN","XU8343Q",15,0)
 S XUXR("VAL",1)=.01
"RTN","XU8343Q",16,0)
 S XUXR("VAL",1,"SUBSCRIPT")=1
"RTN","XU8343Q",17,0)
 S XUXR("VAL",1,"LENGTH")=35
"RTN","XU8343Q",18,0)
 S XUXR("VAL",1,"COLLATION")="F"
"RTN","XU8343Q",19,0)
 S XUXR("VAL",1,"XFORM FOR LOOKUP")="N XLFNAME S XLFNAME=X S X=$$FORMAT^XLFNAME7(.XLFNAME,3,35,,0)"
"RTN","XU8343Q",20,0)
 D CREIXN^DDMOD(.XUXR,"SW",.XURES,"XUOUT")
"RTN","XU8343Q",21,0)
 Q
"RTN","XU8343R")
0^10^B22502690
"RTN","XU8343R",1,0)
XU8343R ;BPOIFO/DW - Post-install for XU*8*343 continued ; 14 April 2004
"RTN","XU8343R",2,0)
 ;;8.0;KERNEL;**343**; Jul 10, 1995;
"RTN","XU8343R",3,0)
 Q
"RTN","XU8343R",4,0)
 ;
"RTN","XU8343R",5,0)
NOTICE(XUT) ;Send a notification when the conversion process is stopped\done
"RTN","XU8343R",6,0)
 ;IN:
"RTN","XU8343R",7,0)
 ; XUT(1)=Number of records processed
"RTN","XU8343R",8,0)
 ; XUT(2)=Last processed IEN
"RTN","XU8343R",9,0)
 ; XUT(3)=Total NPF entries
"RTN","XU8343R",10,0)
 ; XUT(4)=1 if the conversion process was cancelled, 0 if it was done.
"RTN","XU8343R",11,0)
 ;
"RTN","XU8343R",12,0)
 ;If called within a task, protect variables
"RTN","XU8343R",13,0)
 N %,DIFROM
"RTN","XU8343R",14,0)
 ;I $D(ZTQUEUED) N %,DIFROM
"RTN","XU8343R",15,0)
 ;
"RTN","XU8343R",16,0)
 N RDT,Y
"RTN","XU8343R",17,0)
 D NOW^%DTC S Y=% X ^DD("DD")
"RTN","XU8343R",18,0)
 S RDT=$P(Y,"@",1)_"@"_$P($P(Y,"@",2),":",1,2)
"RTN","XU8343R",19,0)
 ;
"RTN","XU8343R",20,0)
 N XMY,XMTEXT,XMDUZ,XUSUB,XUWHAT,XUSITE,XUPLACE,XUNUM,XUSTOP,XMSUB
"RTN","XU8343R",21,0)
 ;
"RTN","XU8343R",22,0)
 S XUSITE=$$SITE^VASITE
"RTN","XU8343R",23,0)
 S XUPLACE=$P(XUSITE,"^",2)
"RTN","XU8343R",24,0)
 S XUNUM=$P(XUSITE,"^",3)
"RTN","XU8343R",25,0)
 ;
"RTN","XU8343R",26,0)
 S XMDUZ=.5
"RTN","XU8343R",27,0)
 S XMY(DUZ)=""
"RTN","XU8343R",28,0)
 S XMY("G.XUPS IDENTITY MANAGEMENT@FORUM.VA.GOV")=""
"RTN","XU8343R",29,0)
 S XMSUB="XUPS NPF NAME STANDARDIZATION - "_XUPLACE_"("_XUNUM_")"
"RTN","XU8343R",30,0)
 ;
"RTN","XU8343R",31,0)
 S XUSTOP=$S(XUT(4):"cancelled.",1:"DONE!")
"RTN","XU8343R",32,0)
 S XUWHAT(1)=" New Person file name conversion (XU*8*343) is "_XUSTOP
"RTN","XU8343R",33,0)
 S XUWHAT(2)=""
"RTN","XU8343R",34,0)
 S XUWHAT(3)="                 Facility Name: "_XUPLACE
"RTN","XU8343R",35,0)
 S XUWHAT(4)="                Station Number: "_XUNUM
"RTN","XU8343R",36,0)
 S XUWHAT(5)=""
"RTN","XU8343R",37,0)
 S XUWHAT(6)=" Total records to be processed: "_XUT(3)
"RTN","XU8343R",38,0)
 S XUWHAT(7)="   Number of records processed: "_XUT(1)
"RTN","XU8343R",39,0)
 S XUWHAT(8)="            Last IEN processed: "_XUT(2)
"RTN","XU8343R",40,0)
 S XUWHAT(9)=""
"RTN","XU8343R",41,0)
 S XUWHAT(10)="                    Date/Time: "_RDT
"RTN","XU8343R",42,0)
 ;
"RTN","XU8343R",43,0)
 S XMTEXT="XUWHAT("
"RTN","XU8343R",44,0)
 ;
"RTN","XU8343R",45,0)
 D ^XMD
"RTN","XU8343R",46,0)
 ;
"RTN","XU8343R",47,0)
 Q
"RTN","XU8343R",48,0)
 ;
"RTN","XU8343R",49,0)
HEADER(XULINE,XUSUB) ;Report Header
"RTN","XU8343R",50,0)
 N C1,C0
"RTN","XU8343R",51,0)
 S XULINE=XULINE+1
"RTN","XU8343R",52,0)
 S ^TMP(XUNMSP,$J,XULINE)=""
"RTN","XU8343R",53,0)
 ;
"RTN","XU8343R",54,0)
 I '$D(^XTMP(XUNMSP,XUSUB)) D  Q
"RTN","XU8343R",55,0)
 . S XULINE=XULINE+1
"RTN","XU8343R",56,0)
 . S ^TMP(XUNMSP,$J,XULINE)="None."
"RTN","XU8343R",57,0)
 ;
"RTN","XU8343R",58,0)
 I XUSUB="CHANGED" D
"RTN","XU8343R",59,0)
 . S C0=$$LJ^XLFSTR("IEN",15," ")
"RTN","XU8343R",60,0)
 . S C1=$$LJ^XLFSTR("NAME",35," ")
"RTN","XU8343R",61,0)
 . S XULINE=XULINE+1
"RTN","XU8343R",62,0)
 . S ^TMP(XUNMSP,$J,XULINE)=C0_" "_C1
"RTN","XU8343R",63,0)
 . S C1=$$LJ^XLFSTR("=============== ==============================",51," ")
"RTN","XU8343R",64,0)
 . S XULINE=XULINE+1
"RTN","XU8343R",65,0)
 . S ^TMP(XUNMSP,$J,XULINE)=C1
"RTN","XU8343R",66,0)
 ;
"RTN","XU8343R",67,0)
 I XUSUB="UNCHANGED" D
"RTN","XU8343R",68,0)
 . S C0=$$LJ^XLFSTR("IEN",15," ")
"RTN","XU8343R",69,0)
 . S C1=$$LJ^XLFSTR("NAME",35," ")
"RTN","XU8343R",70,0)
 . S XULINE=XULINE+1
"RTN","XU8343R",71,0)
 . S ^TMP(XUNMSP,$J,XULINE)=C0_" "_C1
"RTN","XU8343R",72,0)
 . S C1=$$LJ^XLFSTR("=============== ==============================",51," ")
"RTN","XU8343R",73,0)
 . S XULINE=XULINE+1
"RTN","XU8343R",74,0)
 . S ^TMP(XUNMSP,$J,XULINE)=C1
"RTN","XU8343R",75,0)
 Q
"RTN","XU8343R",76,0)
 ;
"RTN","XU8343R",77,0)
REPORT ;Report
"RTN","XU8343R",78,0)
 S:'$G(XUNMSP) XUNMSP="XUNAME"
"RTN","XU8343R",79,0)
 N XULINE,XUSUB,XUIEN,XUOLD,XUNEW,C1,C2,C0,C,XUC,XU20P
"RTN","XU8343R",80,0)
 S XULINE=0
"RTN","XU8343R",81,0)
 S C=$$LJ^XLFSTR(" ",15," ")
"RTN","XU8343R",82,0)
 F XUSUB="CHANGED","UNCHANGED" D
"RTN","XU8343R",83,0)
 . K ^TMP(XUNMSP,$J)
"RTN","XU8343R",84,0)
 . I XUSUB="CHANGED" S XUT="are converted"
"RTN","XU8343R",85,0)
 . I XUSUB="UNCHANGED" S XUT="could not be converted"
"RTN","XU8343R",86,0)
 . S XULINE=XULINE+1
"RTN","XU8343R",87,0)
 . S ^TMP(XUNMSP,$J,XULINE)="The following names "_XUT_":"
"RTN","XU8343R",88,0)
 . D HEADER(.XULINE,XUSUB)
"RTN","XU8343R",89,0)
 . S XUIEN=0 F  S XUIEN=$O(^XTMP(XUNMSP,XUSUB,XUIEN)) Q:XUIEN=""  D
"RTN","XU8343R",90,0)
 .. S XUOLD=$G(^XTMP(XUNMSP,XUSUB,XUIEN,"OLD"))
"RTN","XU8343R",91,0)
 .. S XUNEW=$G(^XTMP(XUNMSP,XUSUB,XUIEN,"NEW"))
"RTN","XU8343R",92,0)
 .. S XULINE=XULINE+1
"RTN","XU8343R",93,0)
 .. S C0=$$LJ^XLFSTR(XUIEN,15," ")
"RTN","XU8343R",94,0)
 .. S C1=$$LJ^XLFSTR(XUOLD,35," ")
"RTN","XU8343R",95,0)
 .. S C2=$$LJ^XLFSTR(XUNEW,35," ")
"RTN","XU8343R",96,0)
 .. I XUSUB="CHANGED" D
"RTN","XU8343R",97,0)
 ... S ^TMP(XUNMSP,$J,XULINE)=C0_" Old: "_C1
"RTN","XU8343R",98,0)
 ... S XULINE=XULINE+1
"RTN","XU8343R",99,0)
 ... S ^TMP(XUNMSP,$J,XULINE)=C_" New: "_C2
"RTN","XU8343R",100,0)
 ... K XUC D NMCOM(XUIEN,.XUC)
"RTN","XU8343R",101,0)
 ... S XULINE=XULINE+1
"RTN","XU8343R",102,0)
 ... S ^TMP(XUNMSP,$J,XULINE)=C_"      Given: "_$G(XUC("GIVEN"))
"RTN","XU8343R",103,0)
 ... S XULINE=XULINE+1
"RTN","XU8343R",104,0)
 ... S ^TMP(XUNMSP,$J,XULINE)=C_"     Middle: "_$G(XUC("MIDDLE"))
"RTN","XU8343R",105,0)
 ... S XULINE=XULINE+1
"RTN","XU8343R",106,0)
 ... S ^TMP(XUNMSP,$J,XULINE)=C_"     Family: "_$G(XUC("FAMILY"))
"RTN","XU8343R",107,0)
 ... S XULINE=XULINE+1
"RTN","XU8343R",108,0)
 ... S ^TMP(XUNMSP,$J,XULINE)=C_"     Suffix: "_$G(XUC("SUFFIX"))
"RTN","XU8343R",109,0)
 ... S XULINE=XULINE+1
"RTN","XU8343R",110,0)
 ... S ^TMP(XUNMSP,$J,XULINE)=""
"RTN","XU8343R",111,0)
 .. I XUSUB="UNCHANGED" S ^TMP(XUNMSP,$J,XULINE)=C0_" "_C1
"RTN","XU8343R",112,0)
 . D EMAIL(XUNMSP)
"RTN","XU8343R",113,0)
 . K ^TMP(XUNMSP,$J)
"RTN","XU8343R",114,0)
 Q
"RTN","XU8343R",115,0)
 ;
"RTN","XU8343R",116,0)
NMCOM(XUIEN,XUC) ;Get name components from file #20.
"RTN","XU8343R",117,0)
 N DIC,DR,DA,DIQ,XUR,XUCOM,XUI,XUCOMP,XUNC,C,XU20P,X,Y
"RTN","XU8343R",118,0)
 ;
"RTN","XU8343R",119,0)
 S XU20P=$P($G(^VA(200,XUIEN,3.1)),U)
"RTN","XU8343R",120,0)
 ;
"RTN","XU8343R",121,0)
 S DIC=20
"RTN","XU8343R",122,0)
 S DR="1;2;3;4;5;6"
"RTN","XU8343R",123,0)
 S DA=XU20P
"RTN","XU8343R",124,0)
 S DIQ="XUR"
"RTN","XU8343R",125,0)
 D EN^DIQ1
"RTN","XU8343R",126,0)
 ;
"RTN","XU8343R",127,0)
 S XUCOM="FAMILY^GIVEN^MIDDLE^PREFIX^SUFFIX^DEGREE"
"RTN","XU8343R",128,0)
 F XUI=1:1:6 D
"RTN","XU8343R",129,0)
 . S XUCOMP=$P(XUCOM,U,XUI)
"RTN","XU8343R",130,0)
 . S XUC(XUCOMP)=$G(XUR(20,XU20P,XUI))
"RTN","XU8343R",131,0)
 Q
"RTN","XU8343R",132,0)
 ;
"RTN","XU8343R",133,0)
EMAIL(XUNMSP) ;SEND THE REPORT
"RTN","XU8343R",134,0)
 N %,DIFROM
"RTN","XU8343R",135,0)
 ;I $D(ZTQUEUED) N %,DIFROM
"RTN","XU8343R",136,0)
 ;
"RTN","XU8343R",137,0)
 N RDT,Y
"RTN","XU8343R",138,0)
 D NOW^%DTC S Y=% X ^DD("DD")
"RTN","XU8343R",139,0)
 S RDT=$P(Y,"@",1)_"@"_$P($P(Y,"@",2),":",1,2)
"RTN","XU8343R",140,0)
 ;
"RTN","XU8343R",141,0)
 N XMY,XMTEXT,XMDUZ,XMSUB
"RTN","XU8343R",142,0)
 ;
"RTN","XU8343R",143,0)
 S XMY(DUZ)="",XMDUZ=.5
"RTN","XU8343R",144,0)
 S XMSUB="NEW PERSON File Name Conversion Report"
"RTN","XU8343R",145,0)
 S XMTEXT="^TMP("""_XUNMSP_""",$J,"
"RTN","XU8343R",146,0)
 D ^XMD
"RTN","XU8343R",147,0)
 Q
"RTN","XU8343S")
0^20^B76423668
"RTN","XU8343S",1,0)
XU8343S ;BPOIFO/DW-CONVERSION OF NEW PERSON FILE ENTRIES ;10:39 AM  10 Mar 2000
"RTN","XU8343S",2,0)
 ;;8.0;KERNEL;**343**;Jul 10, 1995
"RTN","XU8343S",3,0)
 ; Modified from XLFNAME3 by MKO.
"RTN","XU8343S",4,0)
NEWPERS(XUFLAG,XUIEN) ;Convert New Person file names
"RTN","XU8343S",5,0)
 ;In: XUFLAG [ "C"  : Update Name Components file (#20) and pointer
"RTN","XU8343S",6,0)
 ;           [ "K"  : Kill ^XTMP("XLFNAME") up front
"RTN","XU8343S",7,0)
 ;           [ "P"  : Update New Person Names
"RTN","XU8343S",8,0)
 ;           [ "R"  : Record changes/problems in ^XTMP
"RTN","XU8343S",9,0)
 ;    XUIEN  = ien of last record converted;
"RTN","XU8343S",10,0)
 ;             conversion will begin with the next record
"RTN","XU8343S",11,0)
 ;
"RTN","XU8343S",12,0)
 N XUCNT,XUDEG,XUF,XUIENL,XUIENS,XUMSG,XUNAM,XUNMSP,XUNODEGT,XUNOTRIG
"RTN","XU8343S",13,0)
 N XUNOSIGT,XUPVAL,XUSTOP,XPDIDTOT,I,XUT,XUINV,XUIN
"RTN","XU8343S",14,0)
 S XUFLAG=$G(XUFLAG)_"M35"
"RTN","XU8343S",15,0)
 S (XUNOTRIG,XUNOSIGT,XUNODEGT)=1
"RTN","XU8343S",16,0)
 S XUNMSP="XUNAME",XUCNT=0
"RTN","XU8343S",17,0)
 ;
"RTN","XU8343S",18,0)
 K:XUFLAG["K" ^XTMP(XUNMSP)
"RTN","XU8343S",19,0)
 S:XUFLAG["R" $P(^XTMP(XUNMSP,0),U,1,2)=$$FMADD^XLFDT(DT,90)_"^"_DT
"RTN","XU8343S",20,0)
 ;
"RTN","XU8343S",21,0)
 ;Loop through New Person file
"RTN","XU8343S",22,0)
 I '$D(ZTQUEUED),'$D(XPDNM) D
"RTN","XU8343S",23,0)
 . W !!," NOTE: To cancel this process, type '^' at any time."
"RTN","XU8343S",24,0)
 . W !," Please wait..."
"RTN","XU8343S",25,0)
 ;
"RTN","XU8343S",26,0)
 S XUIEN=+$G(XUIEN)
"RTN","XU8343S",27,0)
 ;
"RTN","XU8343S",28,0)
 ;Get XPDIDTOT = total number of entries to convert
"RTN","XU8343S",29,0)
 I XUFLAG["P" D
"RTN","XU8343S",30,0)
 . I 'XUIEN S XPDIDTOT=$P($G(^VA(200,0)),U,4) Q:XPDIDTOT>0
"RTN","XU8343S",31,0)
 . S XUMSG="   Obtaining number of entries to convert. Please wait..."
"RTN","XU8343S",32,0)
 . I '$D(XPDNM) W !,XUMSG
"RTN","XU8343S",33,0)
 . E  D MES^XPDUTL(XUMSG)
"RTN","XU8343S",34,0)
 . K XUMSG
"RTN","XU8343S",35,0)
 . S I=XUIEN,XPDIDTOT=0
"RTN","XU8343S",36,0)
 . F  S I=$O(^VA(200,I)) Q:'I  S:$P($G(^(I,0)),U)]"" XPDIDTOT=XPDIDTOT+1
"RTN","XU8343S",37,0)
 . S:'XUIEN $P(^VA(200,0),U,4)=XPDIDTOT
"RTN","XU8343S",38,0)
 ;
"RTN","XU8343S",39,0)
 S XUMSG="   Converting New Person Names..."
"RTN","XU8343S",40,0)
 I '$D(XPDNM) W !,XUMSG
"RTN","XU8343S",41,0)
 E  D MES^XPDUTL(XUMSG)
"RTN","XU8343S",42,0)
 K XUMSG
"RTN","XU8343S",43,0)
 ;
"RTN","XU8343S",44,0)
 S XUSTOP=0
"RTN","XU8343S",45,0)
 F  S XUIEN=$O(^VA(200,XUIEN)) Q:'XUIEN  D  D STPCHK Q:XUSTOP
"RTN","XU8343S",46,0)
 . S XUNAM=$P($G(^VA(200,XUIEN,0)),U)
"RTN","XU8343S",47,0)
 . S:XUNAM'="" XUCNT=XUCNT+1
"RTN","XU8343S",48,0)
 . I XUNAM=""!$D(^VA(200,XUIEN,-9))!(XUNAM?1"MERGING INTO".E) Q
"RTN","XU8343S",49,0)
 . S XUIENS=XUIEN_","
"RTN","XU8343S",50,0)
 . ;
"RTN","XU8343S",51,0)
 . S XUPVAL=$P($G(^VA(200,XUIEN,3.1)),U)
"RTN","XU8343S",52,0)
 . S XUDEG=$P($G(^VA(200,XUIEN,3.1)),U,6)
"RTN","XU8343S",53,0)
 . ;
"RTN","XU8343S",54,0)
 . ;Process .01 field of file 200
"RTN","XU8343S",55,0)
 . S XUF=$S(XUNAM="POSTMASTER"&(XUIEN=.5):$TR(XUFLAG,"R"),1:XUFLAG)
"RTN","XU8343S",56,0)
 . D UPDATE(XUF,200,XUIENS,.01,XUNAM,10.1,XUPVAL,XUNMSP,XUDEG) K XUF
"RTN","XU8343S",57,0)
 . ;
"RTN","XU8343S",58,0)
 . ;Remember this ien if entries are being converted
"RTN","XU8343S",59,0)
 . I XUFLAG["P",XUFLAG["R" S $P(^XTMP(XUNMSP,0),U,4)=XUIEN
"RTN","XU8343S",60,0)
 ;
"RTN","XU8343S",61,0)
 S XUMSG(1)=$S(XUSTOP:"   Process cancelled.",1:"   DONE!")
"RTN","XU8343S",62,0)
 S XUMSG(2)="   Number of records processed: "_XUCNT
"RTN","XU8343S",63,0)
 S:XUCNT XUMSG(3)="   Entry number last processed: "_$G(XUIENL)
"RTN","XU8343S",64,0)
 I '$D(XPDNM) W ! F I=1:1:3 W:$D(XUMSG(I))#2 !,XUMSG(I)
"RTN","XU8343S",65,0)
 E  D MES^XPDUTL(.XUMSG)
"RTN","XU8343S",66,0)
 ;
"RTN","XU8343S",67,0)
 S XUT(1)=$G(XUCNT)
"RTN","XU8343S",68,0)
 S XUT(2)=$G(XUIENL)
"RTN","XU8343S",69,0)
 S XUT(3)=$G(XPDIDTOT)
"RTN","XU8343S",70,0)
 S XUT(4)=$G(XUSTOP)
"RTN","XU8343S",71,0)
 D NOTICE^XU8343R(.XUT)
"RTN","XU8343S",72,0)
 ;
"RTN","XU8343S",73,0)
 D REPORT^XU8343R
"RTN","XU8343S",74,0)
 ;
"RTN","XU8343S",75,0)
 Q
"RTN","XU8343S",76,0)
 ;
"RTN","XU8343S",77,0)
STPCHK ;Every 200 records, check whether to stop
"RTN","XU8343S",78,0)
 S XUIENL=XUIEN
"RTN","XU8343S",79,0)
 D:'(XUCNT#200)
"RTN","XU8343S",80,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (ZTSTOP,XUSTOP)=1 Q
"RTN","XU8343S",81,0)
 . I '$D(ZTQUEUED),'$D(XPDNM) W "." I $$STOP S XUSTOP=1 Q
"RTN","XU8343S",82,0)
 . I '$D(ZTQUEUED),$D(XPDNM) D UPDATE^XPDID(XUCNT)
"RTN","XU8343S",83,0)
 Q
"RTN","XU8343S",84,0)
 ;
"RTN","XU8343S",85,0)
UPDATE(XUFLAG,XUFIL,XUIENS,XUFLD,XUNAM,XUPTR,XUPVAL,XUNMSP,XUDEG) ;Process name field
"RTN","XU8343S",86,0)
 N XUAUD,XUDA,XUFDA,XUMAX,XUMSG,XUORIG,DIERR,XUOLD,XUNAME,XUCHG
"RTN","XU8343S",87,0)
 S XUFLAG=$G(XUFLAG)
"RTN","XU8343S",88,0)
 S XUOLD=XUNAM
"RTN","XU8343S",89,0)
 I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1
"RTN","XU8343S",90,0)
 ;
"RTN","XU8343S",91,0)
 ;Get maximum length of standard name
"RTN","XU8343S",92,0)
 S XUMAX=+$P(XUFLAG,"M",2,999)
"RTN","XU8343S",93,0)
 ;
"RTN","XU8343S",94,0)
 ;Standardize/parse name; Record uncertainties in ^XTMP
"RTN","XU8343S",95,0)
 ;Have name components before standardization
"RTN","XU8343S",96,0)
 S XUNAME=$$FORMAT^XLFNAME7(.XUNAM,3,XUMAX,,,.XUAUD,0,2)
"RTN","XU8343S",97,0)
 ;
"RTN","XU8343S",98,0)
 S XUCHG=$$CHANGED(.XUAUD,XUNAME)
"RTN","XU8343S",99,0)
 ;
"RTN","XU8343S",100,0)
 I XUCHG'=0 D RCD(XUNAME,XUCHG,XUNMSP,XUIENS,XUOLD)
"RTN","XU8343S",101,0)
 ;
"RTN","XU8343S",102,0)
 ;Update file #20 and pointer to file #20
"RTN","XU8343S",103,0)
 I XUFLAG["C",$G(XUCHG)=1 D
"RTN","XU8343S",104,0)
 . S:$D(XUDEG)#2 XUNAM("DEGREE")=XUDEG
"RTN","XU8343S",105,0)
 . D UPDCOMP^XLFNAME2(XUFIL,XUIENS,XUFLD,.XUNAM,XUPTR,.XUPVAL)
"RTN","XU8343S",106,0)
 ;
"RTN","XU8343S",107,0)
 ;Update source name if different
"RTN","XU8343S",108,0)
 I XUFLAG["P",$G(XUCHG)=1 D
"RTN","XU8343S",109,0)
 . S XUFDA(XUFIL,XUIENS,XUFLD)=XUNAME
"RTN","XU8343S",110,0)
 . D FILE^DIE("","XUFDA","XUMSG") K DIERR,XUMSG
"RTN","XU8343S",111,0)
 Q
"RTN","XU8343S",112,0)
 ;
"RTN","XU8343S",113,0)
RCD(XUNAME,XUCHG,XUNMSP,XUIENS,XUOLD) ;Record changes & problems
"RTN","XU8343S",114,0)
 ;XUOLD = Name before conversion
"RTN","XU8343S",115,0)
 ;XUNAME = Name after conversion
"RTN","XU8343S",116,0)
 ;
"RTN","XU8343S",117,0)
 S XUNAME=$G(XUNAME),XUIENS=$G(XUIENS),XUOLD=$G(XUOLD)
"RTN","XU8343S",118,0)
 ;
"RTN","XU8343S",119,0)
 ;Do not record if no change was made
"RTN","XU8343S",120,0)
 Q:$G(XUCHG)=0
"RTN","XU8343S",121,0)
 ;
"RTN","XU8343S",122,0)
 N XUSUB
"RTN","XU8343S",123,0)
 S XUSUB="REST"
"RTN","XU8343S",124,0)
 S XUCHG=$G(XUCHG)
"RTN","XU8343S",125,0)
 ;
"RTN","XU8343S",126,0)
 ;If name is changed
"RTN","XU8343S",127,0)
 I XUCHG=1 S XUSUB="CHANGED"
"RTN","XU8343S",128,0)
 ;If name could not be converted
"RTN","XU8343S",129,0)
 I XUCHG=2 S XUSUB="UNCHANGED"
"RTN","XU8343S",130,0)
 ;
"RTN","XU8343S",131,0)
 ;Get IEN from XUIENS
"RTN","XU8343S",132,0)
 S XUINV=$P(XUIENS,",")
"RTN","XU8343S",133,0)
 ;
"RTN","XU8343S",134,0)
 S ^XTMP(XUNMSP,XUSUB,XUINV,"OLD")=XUOLD
"RTN","XU8343S",135,0)
 S ^XTMP(XUNMSP,XUSUB,XUINV,"NEW")=XUNAME
"RTN","XU8343S",136,0)
 Q
"RTN","XU8343S",137,0)
 ;
"RTN","XU8343S",138,0)
STOP() ;Check whether to stop
"RTN","XU8343S",139,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","XU8343S",140,0)
 ;R Y#1:0 Q:Y="" 0
"RTN","XU8343S",141,0)
 ;F  R *X:0 E  Q
"RTN","XU8343S",142,0)
 R Y:0 Q:Y="" 0
"RTN","XU8343S",143,0)
 S Y=$E(Y,1,1)
"RTN","XU8343S",144,0)
 Q:Y'=U 0
"RTN","XU8343S",145,0)
 S DIR(0)="Y",DIR("A")="Are you sure you want to stop",DIR("B")="NO"
"RTN","XU8343S",146,0)
 S:XUFLAG["P" DIR("?")="If you stop a conversion, you can continue later where you left off."
"RTN","XU8343S",147,0)
 W ! D ^DIR
"RTN","XU8343S",148,0)
 Q Y=1
"RTN","XU8343S",149,0)
 ;
"RTN","XU8343S",150,0)
POST ;The Post-Install entry point (run conversion)
"RTN","XU8343S",151,0)
 N XUIEN,XUNMSP
"RTN","XU8343S",152,0)
 S XUNMSP="XUNAME"
"RTN","XU8343S",153,0)
 S XUIEN=+$P($G(^XTMP(XUNMSP,0)),U,4)
"RTN","XU8343S",154,0)
 D NEWPERS("CPR"_$E("K",'XUIEN),+XUIEN)
"RTN","XU8343S",155,0)
 I $D(^XTMP(XUNMSP,0))#2,XUIEN'=+$P(^XTMP(XUNMSP,0),U,4) S $P(^XTMP(XUNMSP,0),U,3)="Created by POST~XU8343P (Post Install Conversion of XU*8.0*343)"
"RTN","XU8343S",156,0)
 Q
"RTN","XU8343S",157,0)
 ;
"RTN","XU8343S",158,0)
CHANGED(XUAUD,XUNAME) ;Decide if the name is convertible.
"RTN","XU8343S",159,0)
 ; RESULT: 2 if the name is not convertible
"RTN","XU8343S",160,0)
 ;         1 if the name is convertible
"RTN","XU8343S",161,0)
 ;         0 if the name is not changed 
"RTN","XU8343S",162,0)
 N XUR
"RTN","XU8343S",163,0)
 S XUR=1
"RTN","XU8343S",164,0)
 I $G(XUAUD)=0 Q 0
"RTN","XU8343S",165,0)
 I $G(XUAUD)=2 Q 2
"RTN","XU8343S",166,0)
 ;
"RTN","XU8343S",167,0)
 S XUNAME=$G(XUNAME)
"RTN","XU8343S",168,0)
 I $L(XUNAME)>35!($L(XUNAME)<3)!($L(XUNAME,",")'=2)!(XUNAME'?1.E1","1.E) Q 2
"RTN","XU8343S",169,0)
 Q XUR
"RTN","XU8343S",170,0)
 ;
"RTN","XU8343S",171,0)
CONVERT ;Convert Names
"RTN","XU8343S",172,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,XUIEN,XUNMSP,X,Y
"RTN","XU8343S",173,0)
 I $G(XUNMSP)="" S XUNMSP="XUNAME"
"RTN","XU8343S",174,0)
 ;
"RTN","XU8343S",175,0)
 W !,"This routine will run the New Person Name Standardization conversion."
"RTN","XU8343S",176,0)
 W !!,"It will loop through the entries in the New Person file, convert "
"RTN","XU8343S",177,0)
 W !,"the Name field (#.01) of the New Person file to standard form, and"
"RTN","XU8343S",178,0)
 W !,"update the corresponding Name Component entries of converted names."
"RTN","XU8343S",179,0)
 ;
"RTN","XU8343S",180,0)
 S DIR(0)="YO",DIR("A")="Do you wish to continue"
"RTN","XU8343S",181,0)
 S DIR("?",1)="  Enter 'Y' to convert the Names in the New Person file"
"RTN","XU8343S",182,0)
 S DIR("?",2)="  to standard form, and to update the corresponding"
"RTN","XU8343S",183,0)
 S DIR("?")="  entries of changed Names in the Name Components file."
"RTN","XU8343S",184,0)
 W ! D ^DIR K DIR Q:$D(DIRUT)!'Y
"RTN","XU8343S",185,0)
 ;
"RTN","XU8343S",186,0)
 ;Check if the conversion was already run.
"RTN","XU8343S",187,0)
 ;Determine which record to start with.
"RTN","XU8343S",188,0)
 S XUIEN=+$P($G(^XTMP(XUNMSP,0)),U,4)
"RTN","XU8343S",189,0)
 I XUIEN D  Q:$D(DIRUT)
"RTN","XU8343S",190,0)
 . I $O(^VA(200,XUIEN)) D
"RTN","XU8343S",191,0)
 .. W !!,"It appears that the conversion has already been performed through"
"RTN","XU8343S",192,0)
 .. W !,"record #"_XUIEN_" in the New Person file."
"RTN","XU8343S",193,0)
 .. W !!,"Do you want to continue the conversion from after this point"
"RTN","XU8343S",194,0)
 .. W !,"or convert the entries from the beginning of the file."
"RTN","XU8343S",195,0)
 .. S DIR(0)="S^C:Continue the conversion after record #"_XUIEN_";S:Start again from the beginning of the file"
"RTN","XU8343S",196,0)
 .. S DIR("?",1)="  Enter 'C' to start the conversion and parsing process from the"
"RTN","XU8343S",197,0)
 .. S DIR("?",2)="  after record #"_XUIEN_" in the New Person file."
"RTN","XU8343S",198,0)
 .. S DIR("?",3)=" "
"RTN","XU8343S",199,0)
 .. S DIR("?",4)="  Enter 'B' to start the conversion and parsing process from the"
"RTN","XU8343S",200,0)
 .. S DIR("?",5)="  the beginning of the New Person file."
"RTN","XU8343S",201,0)
 .. S DIR("?",6)=" "
"RTN","XU8343S",202,0)
 .. S DIR("?",7)="  NOTE: There is no harm in running the conversion again from the"
"RTN","XU8343S",203,0)
 .. S DIR("?",8)="  beginning. However, if the conversion routine previously parsed a name"
"RTN","XU8343S",204,0)
 .. S DIR("?",9)="  into its component parts incorrectly, and you corrected those problems"
"RTN","XU8343S",205,0)
 .. S DIR("?",10)="  by manually editing the name components, your corrections will be lost"
"RTN","XU8343S",206,0)
 .. S DIR("?")="  if you run the conversion again."
"RTN","XU8343S",207,0)
 .. D ^DIR K DIR Q:$D(DIRUT)
"RTN","XU8343S",208,0)
 .. S:Y="S" XUIEN=0
"RTN","XU8343S",209,0)
 . E  D
"RTN","XU8343S",210,0)
 .. W !!,"It appears that the conversion has already been performed on all entries"
"RTN","XU8343S",211,0)
 .. W !,"in the New person file.",!
"RTN","XU8343S",212,0)
 .. S DIR(0)="YO",DIR("A")="Do you want to run the conversion again"
"RTN","XU8343S",213,0)
 .. S DIR("?",1)="  Enter 'Y' if you wish to run the New Person Name conversion again."
"RTN","XU8343S",214,0)
 .. S DIR("?",2)=" "
"RTN","XU8343S",215,0)
 .. S DIR("?",3)="  NOTE: There is no harm in running the conversion again. However, if the"
"RTN","XU8343S",216,0)
 .. S DIR("?",4)="  conversion routine previously parsed a name into its component parts"
"RTN","XU8343S",217,0)
 .. S DIR("?",5)="  incorrectly, and you corrected those problems by manually editing the"
"RTN","XU8343S",218,0)
 .. D ^DIR K DIR S:'Y DIRUT=1 Q:$D(DIRUT)
"RTN","XU8343S",219,0)
 .. S XUIEN=0
"RTN","XU8343S",220,0)
 ;
"RTN","XU8343S",221,0)
 D NEWPERS^XU8343S("CPR"_$E("K",'XUIEN),+XUIEN)
"RTN","XU8343S",222,0)
 S:$D(^XTMP(XUNMSP,0))#2 $P(^(0),U,3)="Created by CONVERT~XU8343S"
"RTN","XU8343S",223,0)
 Q
"RTN","XUPSNAME")
1^14
"RTN","XUPSNM1")
1^15
"RTN","XUPSPAID")
0^18^B105719762
"RTN","XUPSPAID",1,0)
XUPSPAID ;CS/GRR/RAM/DW - New Person file Update & Report ; 1 Jan 2004
"RTN","XUPSPAID",2,0)
 ;;8.0;KERNEL;**309,343**; Jul 10, 1995;
"RTN","XUPSPAID",3,0)
 ;
"RTN","XUPSPAID",4,0)
 Q
"RTN","XUPSPAID",5,0)
 ;
"RTN","XUPSPAID",6,0)
EN ; - entry point
"RTN","XUPSPAID",7,0)
 ;
"RTN","XUPSPAID",8,0)
 N DIRUT,X,Y
"RTN","XUPSPAID",9,0)
 ;
"RTN","XUPSPAID",10,0)
 I $E(XUPSACT,1)="U" D
"RTN","XUPSPAID",11,0)
 . W !!,"  *********************************************"
"RTN","XUPSPAID",12,0)
 . W !,"  *This option will UPDATE eligible New Person*"
"RTN","XUPSPAID",13,0)
 . W !,"  *file (#200) entries with missing DOB or SEX*"
"RTN","XUPSPAID",14,0)
 . W !,"  *********************************************"
"RTN","XUPSPAID",15,0)
 ;
"RTN","XUPSPAID",16,0)
 W !!,"The reports will be sent to you via MailMan",!
"RTN","XUPSPAID",17,0)
 ;
"RTN","XUPSPAID",18,0)
 S DIR(0)="YA",DIR("B")="Yes",DIR("A")="Do you wish to continue? "
"RTN","XUPSPAID",19,0)
 S DIR("?")="Enter 'Yes' to continue or 'No' to quit"
"RTN","XUPSPAID",20,0)
 D ^DIR K DIR ;ask user if they want to continue with option
"RTN","XUPSPAID",21,0)
 Q:'Y!($D(DIRUT))  ;user responded No or with '^' to exit
"RTN","XUPSPAID",22,0)
 ;
"RTN","XUPSPAID",23,0)
 D QUE
"RTN","XUPSPAID",24,0)
 ;
"RTN","XUPSPAID",25,0)
 K XUPSACT
"RTN","XUPSPAID",26,0)
 Q
"RTN","XUPSPAID",27,0)
 ;
"RTN","XUPSPAID",28,0)
QUE ;Que the task
"RTN","XUPSPAID",29,0)
 N ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK,ZUSR,POP,X,ERR,IOP
"RTN","XUPSPAID",30,0)
 W !
"RTN","XUPSPAID",31,0)
 S ZTIO=""
"RTN","XUPSPAID",32,0)
 S ZTRTN="EN1^XUPSPAID"
"RTN","XUPSPAID",33,0)
 S ZTSAVE("XUPSACT")=""
"RTN","XUPSPAID",34,0)
 I $E(XUPSACT,1)="U" S ZTDESC="XUPS NPF UPDATE"
"RTN","XUPSPAID",35,0)
 I $E(XUPSACT,1)="P" S ZTDESC="XUPS NPF PREUPDATE REPORT"
"RTN","XUPSPAID",36,0)
 D ^%ZTLOAD
"RTN","XUPSPAID",37,0)
 D ^%ZISC,HOME^%ZIS
"RTN","XUPSPAID",38,0)
 W !,$S($D(ZTSK):"REQUEST QUEUED AS TASK#"_ZTSK,1:"REQUEST CANCELLED!")
"RTN","XUPSPAID",39,0)
 ;
"RTN","XUPSPAID",40,0)
 Q
"RTN","XUPSPAID",41,0)
 ;
"RTN","XUPSPAID",42,0)
EN1 ;
"RTN","XUPSPAID",43,0)
 N IEN,XUPSDIFF,XUPSUPD,XUT,XUNPFT,XUUPDT
"RTN","XUPSPAID",44,0)
 S (XUNPFT,XUUPDT)=0
"RTN","XUPSPAID",45,0)
 ;
"RTN","XUPSPAID",46,0)
 K ^TMP("XUPS PAID",$J)
"RTN","XUPSPAID",47,0)
 K ^TMP("XUPS DIFF",$J)
"RTN","XUPSPAID",48,0)
 K ^TMP("XUPS UPD",$J)
"RTN","XUPSPAID",49,0)
 ;
"RTN","XUPSPAID",50,0)
 S XUPSDIFF("SSN")=0
"RTN","XUPSPAID",51,0)
 S XUPSDIFF("NAME")=0
"RTN","XUPSPAID",52,0)
 S XUPSDIFF("SEX")=0
"RTN","XUPSPAID",53,0)
 S XUPSDIFF("DOB")=0
"RTN","XUPSPAID",54,0)
 ;
"RTN","XUPSPAID",55,0)
 S XUPSUPD("SEX")=0
"RTN","XUPSPAID",56,0)
 S XUPSUPD("DOB")=0
"RTN","XUPSPAID",57,0)
 ;
"RTN","XUPSPAID",58,0)
 S IEN=0
"RTN","XUPSPAID",59,0)
 F  S IEN=$O(^PRSPC(IEN)) Q:'IEN  D RECORD
"RTN","XUPSPAID",60,0)
 ;
"RTN","XUPSPAID",61,0)
 S XUT(1)=$G(XUNPFT)
"RTN","XUPSPAID",62,0)
 S XUT(2)=$G(XUUPDT)
"RTN","XUPSPAID",63,0)
 I $E(XUPSACT,1)="U" D NOTICE^XUPSPD1(.XUT)
"RTN","XUPSPAID",64,0)
 ;
"RTN","XUPSPAID",65,0)
 D REPORT
"RTN","XUPSPAID",66,0)
 ;
"RTN","XUPSPAID",67,0)
 Q
"RTN","XUPSPAID",68,0)
 ;
"RTN","XUPSPAID",69,0)
REPORT ;Pre-update reports
"RTN","XUPSPAID",70,0)
 ;
"RTN","XUPSPAID",71,0)
 N CNTG,DATA,DATA1,IEN,CNT,CNTU,CNTD
"RTN","XUPSPAID",72,0)
 S (CNTG,CNT,CNTU,CNTD)=0
"RTN","XUPSPAID",73,0)
 ;
"RTN","XUPSPAID",74,0)
 ;The difference report
"RTN","XUPSPAID",75,0)
 D HD("XUPS DIFF")
"RTN","XUPSPAID",76,0)
 S IEN=0
"RTN","XUPSPAID",77,0)
 F  S IEN=$O(^TMP("XUPS PAID",$J,"DIFF",IEN)) Q:'IEN  D
"RTN","XUPSPAID",78,0)
 .S DATA=^TMP("XUPS PAID",$J,"DIFF",IEN)
"RTN","XUPSPAID",79,0)
 .D FL("XUPS DIFF",DATA)
"RTN","XUPSPAID",80,0)
 .S CNTD=$G(CNTD)+1
"RTN","XUPSPAID",81,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",82,0)
 S ^TMP("XUPS DIFF",$J,CNT)=""
"RTN","XUPSPAID",83,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",84,0)
 S ^TMP("XUPS DIFF",$J,CNT)="                                 Totals"
"RTN","XUPSPAID",85,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",86,0)
 S ^TMP("XUPS DIFF",$J,CNT)="           Different LastName,FirstName: "_$G(XUPSDIFF("NAME"))
"RTN","XUPSPAID",87,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",88,0)
 S ^TMP("XUPS DIFF",$J,CNT)=" Same LastName,FirstName, different Sex: "_$G(XUPSDIFF("SEX"))
"RTN","XUPSPAID",89,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",90,0)
 S ^TMP("XUPS DIFF",$J,CNT)=" Same LastName,FirstName, different DOB: "_$G(XUPSDIFF("DOB"))
"RTN","XUPSPAID",91,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",92,0)
 S ^TMP("XUPS DIFF",$J,CNT)="                New Person file entries: "_$G(CNTD)
"RTN","XUPSPAID",93,0)
 ;
"RTN","XUPSPAID",94,0)
 ;The update report
"RTN","XUPSPAID",95,0)
 S CNT=0
"RTN","XUPSPAID",96,0)
 D HD1("XUPS UPD")
"RTN","XUPSPAID",97,0)
 S IEN=0
"RTN","XUPSPAID",98,0)
 F  S IEN=$O(^TMP("XUPS PAID",$J,"UPD",IEN)) Q:'IEN  D
"RTN","XUPSPAID",99,0)
 .S DATA=^TMP("XUPS PAID",$J,"UPD",IEN)
"RTN","XUPSPAID",100,0)
 .D FL1("XUPS UPD",DATA)
"RTN","XUPSPAID",101,0)
 .S CNTU=$G(CNTU)+1
"RTN","XUPSPAID",102,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",103,0)
 S ^TMP("XUPS UPD",$J,CNT)=""
"RTN","XUPSPAID",104,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",105,0)
 S ^TMP("XUPS UPD",$J,CNT)="             Totals"
"RTN","XUPSPAID",106,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",107,0)
 S ^TMP("XUPS UPD",$J,CNT)="         Sex fields: "_XUPSUPD("SEX")
"RTN","XUPSPAID",108,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",109,0)
 S ^TMP("XUPS UPD",$J,CNT)="         DOB fields: "_XUPSUPD("DOB")
"RTN","XUPSPAID",110,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",111,0)
 S ^TMP("XUPS UPD",$J,CNT)=" New Person entries: "_$G(CNTU)
"RTN","XUPSPAID",112,0)
 ;
"RTN","XUPSPAID",113,0)
 D XM("Update NPF with PAID data - Sex and DOB","XUPS UPD")
"RTN","XUPSPAID",114,0)
 D XM("Differences between NPF and PAID files","XUPS DIFF")
"RTN","XUPSPAID",115,0)
 ;
"RTN","XUPSPAID",116,0)
 K ^TMP("XUPS PAID",$J)
"RTN","XUPSPAID",117,0)
 K ^TMP("XUPS DIFF",$J)
"RTN","XUPSPAID",118,0)
 K ^TMP("XUPS UPD",$J)
"RTN","XUPSPAID",119,0)
 ;
"RTN","XUPSPAID",120,0)
 Q
"RTN","XUPSPAID",121,0)
 ;
"RTN","XUPSPAID",122,0)
RECORD ;Process the record
"RTN","XUPSPAID",123,0)
 ;
"RTN","XUPSPAID",124,0)
 N IEN200,DATA,DATA1
"RTN","XUPSPAID",125,0)
 N PAIDNM,PAIDOB,PAIDSSN,PAIDSEX
"RTN","XUPSPAID",126,0)
 N NPFNM,NPFSEX,NPFDOB,NPFSSN
"RTN","XUPSPAID",127,0)
 ;
"RTN","XUPSPAID",128,0)
 ; NPF IEN
"RTN","XUPSPAID",129,0)
 S IEN200=$P($G(^PRSPC(IEN,200)),"^",1)
"RTN","XUPSPAID",130,0)
 ;
"RTN","XUPSPAID",131,0)
 Q:'IEN200
"RTN","XUPSPAID",132,0)
 S XUNPFT=$G(XUNPFT)+1
"RTN","XUPSPAID",133,0)
 ;
"RTN","XUPSPAID",134,0)
 ; PAID file
"RTN","XUPSPAID",135,0)
 S DATA=$G(^PRSPC(IEN,0))
"RTN","XUPSPAID",136,0)
 S PAIDNM=$P(DATA,"^",1)
"RTN","XUPSPAID",137,0)
 S PAIDDOB=$P(DATA,"^",33)
"RTN","XUPSPAID",138,0)
 S PAIDSSN=$P(DATA,"^",9)
"RTN","XUPSPAID",139,0)
 S PAIDSEX=$P(DATA,"^",32)
"RTN","XUPSPAID",140,0)
 ; transform SEX code PAID to NPF
"RTN","XUPSPAID",141,0)
 S PAIDSEX=$S(PAIDSEX="":"",PAIDSEX=1:"M",PAIDSEX=2:"F",1:"")
"RTN","XUPSPAID",142,0)
 ;
"RTN","XUPSPAID",143,0)
 ; New Person File
"RTN","XUPSPAID",144,0)
 S DATA=$G(^VA(200,IEN200,1))
"RTN","XUPSPAID",145,0)
 S NPFNM=$P($G(^VA(200,IEN200,0)),U)
"RTN","XUPSPAID",146,0)
 S NPFSEX=$P(DATA,"^",2)
"RTN","XUPSPAID",147,0)
 S NPFDOB=$P(DATA,"^",3)
"RTN","XUPSPAID",148,0)
 S NPFSSN=$P(DATA,"^",9)
"RTN","XUPSPAID",149,0)
 ;
"RTN","XUPSPAID",150,0)
 Q:NPFSSN'=PAIDSSN
"RTN","XUPSPAID",151,0)
 ;
"RTN","XUPSPAID",152,0)
 S DATA=NPFNM_U_NPFSEX_U_NPFDOB_U_NPFSSN
"RTN","XUPSPAID",153,0)
 S DATA=DATA_U_PAIDNM_U_PAIDSEX_U_PAIDDOB_U_PAIDSSN_U_IEN200
"RTN","XUPSPAID",154,0)
 ;
"RTN","XUPSPAID",155,0)
 S DATA1=NPFSSN_U_NPFNM_U_U_U_IEN200
"RTN","XUPSPAID",156,0)
 ;
"RTN","XUPSPAID",157,0)
 I $$NAME(NPFNM)'=$$NAME(PAIDNM) D  Q
"RTN","XUPSPAID",158,0)
 .S XUPSDIFF("NAME")=XUPSDIFF("NAME")+1
"RTN","XUPSPAID",159,0)
 .S ^TMP("XUPS PAID",$J,"DIFF",IEN200)=DATA
"RTN","XUPSPAID",160,0)
 ;
"RTN","XUPSPAID",161,0)
 I PAIDSEX'="" D
"RTN","XUPSPAID",162,0)
 .I NPFSEX="" D  Q
"RTN","XUPSPAID",163,0)
 ..S $P(DATA1,U,3)=PAIDSEX
"RTN","XUPSPAID",164,0)
 ..S XUPSUPD("SEX")=XUPSUPD("SEX")+1
"RTN","XUPSPAID",165,0)
 ..S ^TMP("XUPS PAID",$J,"UPD",IEN200)=DATA1
"RTN","XUPSPAID",166,0)
 ..I $E(XUPSACT,1)="U" D
"RTN","XUPSPAID",167,0)
 ... D UPDSEX
"RTN","XUPSPAID",168,0)
 ... S XUUPDT=$G(XUUPDT)+1
"RTN","XUPSPAID",169,0)
 .I NPFSEX'=PAIDSEX D  Q
"RTN","XUPSPAID",170,0)
 ..S XUPSDIFF("SEX")=XUPSDIFF("SEX")+1
"RTN","XUPSPAID",171,0)
 ..S ^TMP("XUPS PAID",$J,"DIFF",IEN200)=DATA
"RTN","XUPSPAID",172,0)
 ;
"RTN","XUPSPAID",173,0)
 I PAIDDOB'="" D
"RTN","XUPSPAID",174,0)
 .I NPFDOB="" D  Q
"RTN","XUPSPAID",175,0)
 ..S $P(DATA1,U,4)=PAIDDOB
"RTN","XUPSPAID",176,0)
 ..S XUPSUPD("DOB")=XUPSUPD("DOB")+1
"RTN","XUPSPAID",177,0)
 ..S ^TMP("XUPS PAID",$J,"UPD",IEN200)=DATA1
"RTN","XUPSPAID",178,0)
 ..I $E(XUPSACT,1)="U" D
"RTN","XUPSPAID",179,0)
 ... D UPDDOB
"RTN","XUPSPAID",180,0)
 ... S XUUPDT=$G(XUUPDT)+1
"RTN","XUPSPAID",181,0)
 .I NPFDOB'=PAIDDOB D  Q
"RTN","XUPSPAID",182,0)
 ..S XUPSDIFF("DOB")=XUPSDIFF("DOB")+1
"RTN","XUPSPAID",183,0)
 ..S ^TMP("XUPS PAID",$J,"DIFF",IEN200)=DATA
"RTN","XUPSPAID",184,0)
 ;
"RTN","XUPSPAID",185,0)
 Q
"RTN","XUPSPAID",186,0)
 ;
"RTN","XUPSPAID",187,0)
HD(NODE) ; -- Report header
"RTN","XUPSPAID",188,0)
 N C1,C2,C3,C4,C5
"RTN","XUPSPAID",189,0)
 ;
"RTN","XUPSPAID",190,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",191,0)
 S ^TMP(NODE,$J,CNT)=""
"RTN","XUPSPAID",192,0)
 ;
"RTN","XUPSPAID",193,0)
 I NODE="XUPS DIFF" D
"RTN","XUPSPAID",194,0)
 . S CNT=$G(CNT)+1
"RTN","XUPSPAID",195,0)
 . S ^TMP(NODE,$J,CNT)="The following New Person File entries have different LastName,FirstName,"
"RTN","XUPSPAID",196,0)
 . S CNT=$G(CNT)+1
"RTN","XUPSPAID",197,0)
 . S ^TMP(NODE,$J,CNT)="or same LastName,FirstName but different Sex or DOB with their linked PAID"
"RTN","XUPSPAID",198,0)
 . S CNT=$G(CNT)+1
"RTN","XUPSPAID",199,0)
 . S ^TMP(NODE,$J,CNT)="Employee entries."
"RTN","XUPSPAID",200,0)
 ;
"RTN","XUPSPAID",201,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",202,0)
 S ^TMP(NODE,$J,CNT)=""
"RTN","XUPSPAID",203,0)
 ;
"RTN","XUPSPAID",204,0)
 S C1=$$LJ^XLFSTR("NPF  - Name",30," ")
"RTN","XUPSPAID",205,0)
 S C2=$$CJ^XLFSTR("SEX",3," ")
"RTN","XUPSPAID",206,0)
 S C3=$$LJ^XLFSTR("DOB",11," ")
"RTN","XUPSPAID",207,0)
 S C4=$$LJ^XLFSTR("SSN",9," ")
"RTN","XUPSPAID",208,0)
 S C5=$$RJ^XLFSTR("IEN",14," ")
"RTN","XUPSPAID",209,0)
 ;
"RTN","XUPSPAID",210,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",211,0)
 S ^TMP(NODE,$J,CNT)=C1_C2_"  "_C3_"  "_C4_"  "_C5
"RTN","XUPSPAID",212,0)
 ;
"RTN","XUPSPAID",213,0)
 S C1=$$LJ^XLFSTR("PAID -",30," ")
"RTN","XUPSPAID",214,0)
 S C2=$$CJ^XLFSTR("",3," ")
"RTN","XUPSPAID",215,0)
 S C3=$$LJ^XLFSTR("",11," ")
"RTN","XUPSPAID",216,0)
 S C4=$$LJ^XLFSTR("",9," ")
"RTN","XUPSPAID",217,0)
 S C5=$$RJ^XLFSTR("",14," ")
"RTN","XUPSPAID",218,0)
 ;
"RTN","XUPSPAID",219,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",220,0)
 S ^TMP(NODE,$J,CNT)=C1_C2_"  "_C3_"  "_C4_"  "_C5
"RTN","XUPSPAID",221,0)
 ;
"RTN","XUPSPAID",222,0)
 S C1=$$LJ^XLFSTR("=================",30," ")
"RTN","XUPSPAID",223,0)
 S C2=$$CJ^XLFSTR("===",3," ")
"RTN","XUPSPAID",224,0)
 S C3=$$LJ^XLFSTR("==========",11," ")
"RTN","XUPSPAID",225,0)
 S C4=$$LJ^XLFSTR("=========",9," ")
"RTN","XUPSPAID",226,0)
 S C5=$$RJ^XLFSTR("===",14," ")
"RTN","XUPSPAID",227,0)
 ;
"RTN","XUPSPAID",228,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",229,0)
 S ^TMP(NODE,$J,CNT)=C1_C2_"  "_C3_"  "_C4_"  "_C5
"RTN","XUPSPAID",230,0)
 ;
"RTN","XUPSPAID",231,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",232,0)
 S ^TMP(NODE,$J,CNT)=""
"RTN","XUPSPAID",233,0)
 ;
"RTN","XUPSPAID",234,0)
 Q
"RTN","XUPSPAID",235,0)
 ;
"RTN","XUPSPAID",236,0)
FL(NODE,DATA) ; -- format line
"RTN","XUPSPAID",237,0)
 ;
"RTN","XUPSPAID",238,0)
 N NPFNM,NPFSEX,NPFDOB,NPFSSN,NPFIEN
"RTN","XUPSPAID",239,0)
 N PAIDNM,PAIDSEX,PAIDDOB,PAIDSSN
"RTN","XUPSPAID",240,0)
 ;
"RTN","XUPSPAID",241,0)
 S NPFNM=$P(DATA,U,1)
"RTN","XUPSPAID",242,0)
 S NPFSEX=$P(DATA,U,2)
"RTN","XUPSPAID",243,0)
 S NPFDOB=$P(DATA,U,3)
"RTN","XUPSPAID",244,0)
 S NPFSSN=$P(DATA,U,4)
"RTN","XUPSPAID",245,0)
 S NPFIEN=$P(DATA,U,9)
"RTN","XUPSPAID",246,0)
 S PAIDNM=$P(DATA,U,5)
"RTN","XUPSPAID",247,0)
 S PAIDSEX=$P(DATA,U,6)
"RTN","XUPSPAID",248,0)
 S PAIDDOB=$P(DATA,U,7)
"RTN","XUPSPAID",249,0)
 S PAIDSSN=$P(DATA,U,8)
"RTN","XUPSPAID",250,0)
 ;
"RTN","XUPSPAID",251,0)
 N C1,C2,C3,C4,C5
"RTN","XUPSPAID",252,0)
 ;
"RTN","XUPSPAID",253,0)
 ;NPF values
"RTN","XUPSPAID",254,0)
 S C1=$$LJ^XLFSTR(NPFNM,30," ")
"RTN","XUPSPAID",255,0)
 S C2=$$CJ^XLFSTR(NPFSEX,3," ")
"RTN","XUPSPAID",256,0)
 S C3=$$LJ^XLFSTR($$DOB(NPFDOB),11," ")
"RTN","XUPSPAID",257,0)
 S C4=$$LJ^XLFSTR(NPFSSN,9," ")
"RTN","XUPSPAID",258,0)
 S C5=$$RJ^XLFSTR(NPFIEN,14," ")
"RTN","XUPSPAID",259,0)
 ;
"RTN","XUPSPAID",260,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",261,0)
 S ^TMP(NODE,$J,CNT)=C1_C2_"  "_C3_"  "_C4_"  "_C5
"RTN","XUPSPAID",262,0)
 ;
"RTN","XUPSPAID",263,0)
 ;PAID values
"RTN","XUPSPAID",264,0)
 S C1=$$LJ^XLFSTR(PAIDNM,30," ")
"RTN","XUPSPAID",265,0)
 S C2=$$CJ^XLFSTR(PAIDSEX,3," ")
"RTN","XUPSPAID",266,0)
 S C3=$$LJ^XLFSTR($$DOB(PAIDDOB),11," ")
"RTN","XUPSPAID",267,0)
 S C4=$$LJ^XLFSTR(PAIDSSN,9," ")
"RTN","XUPSPAID",268,0)
 S C5=$$RJ^XLFSTR(" ",14," ")
"RTN","XUPSPAID",269,0)
 ;
"RTN","XUPSPAID",270,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",271,0)
 S ^TMP(NODE,$J,CNT)=C1_C2_"  "_C3_"  "_C4_"  "_C5
"RTN","XUPSPAID",272,0)
 ;
"RTN","XUPSPAID",273,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",274,0)
 S ^TMP(NODE,$J,CNT)=""
"RTN","XUPSPAID",275,0)
 ;
"RTN","XUPSPAID",276,0)
 Q
"RTN","XUPSPAID",277,0)
 ;
"RTN","XUPSPAID",278,0)
HD1(NODE) ; -- Report header
"RTN","XUPSPAID",279,0)
 ;
"RTN","XUPSPAID",280,0)
 N C1,C2,C3,C4,C5
"RTN","XUPSPAID",281,0)
 ;
"RTN","XUPSPAID",282,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",283,0)
 S ^TMP(NODE,$J,CNT)=""
"RTN","XUPSPAID",284,0)
 ;
"RTN","XUPSPAID",285,0)
 I NODE="XUPS UPD" D
"RTN","XUPSPAID",286,0)
 . S CNT=$G(CNT)+1
"RTN","XUPSPAID",287,0)
 . S ^TMP(NODE,$J,CNT)="The following New Person File entries will be updated."
"RTN","XUPSPAID",288,0)
 . S CNT=$G(CNT)+1
"RTN","XUPSPAID",289,0)
 . S ^TMP(NODE,$J,CNT)="The DOB or Sex fields to be updated are shown with the PAID values;"
"RTN","XUPSPAID",290,0)
 . S CNT=$G(CNT)+1
"RTN","XUPSPAID",291,0)
 . S ^TMP(NODE,$J,CNT)="The DOB or Sex fields not to be updated are shown with ""-""."
"RTN","XUPSPAID",292,0)
 ;
"RTN","XUPSPAID",293,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",294,0)
 S ^TMP(NODE,$J,CNT)=""
"RTN","XUPSPAID",295,0)
 ;
"RTN","XUPSPAID",296,0)
 S C1=$$LJ^XLFSTR("SSN",9," ")
"RTN","XUPSPAID",297,0)
 S C2=$$LJ^XLFSTR("NPF Name",30," ")
"RTN","XUPSPAID",298,0)
 S C3=$$LJ^XLFSTR("SEX",3," ")
"RTN","XUPSPAID",299,0)
 S C4=$$LJ^XLFSTR("DOB",11," ")
"RTN","XUPSPAID",300,0)
 S C5=$$RJ^XLFSTR("IEN",14," ")
"RTN","XUPSPAID",301,0)
 ;
"RTN","XUPSPAID",302,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",303,0)
 S ^TMP(NODE,$J,CNT)=C1_"  "_C2_"  "_C3_"  "_C4_"  "_C5
"RTN","XUPSPAID",304,0)
 ;
"RTN","XUPSPAID",305,0)
 S C1=$$LJ^XLFSTR("=========",9," ")
"RTN","XUPSPAID",306,0)
 S C2=$$LJ^XLFSTR("=================",30," ")
"RTN","XUPSPAID",307,0)
 S C3=$$CJ^XLFSTR("===",3," ")
"RTN","XUPSPAID",308,0)
 S C4=$$LJ^XLFSTR("==========",11," ")
"RTN","XUPSPAID",309,0)
 S C5=$$RJ^XLFSTR("===",14," ")
"RTN","XUPSPAID",310,0)
 ;
"RTN","XUPSPAID",311,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",312,0)
 S ^TMP(NODE,$J,CNT)=C1_"  "_C2_"  "_C3_"  "_C4_"  "_C5
"RTN","XUPSPAID",313,0)
 ;
"RTN","XUPSPAID",314,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",315,0)
 S ^TMP(NODE,$J,CNT)=""
"RTN","XUPSPAID",316,0)
 ;
"RTN","XUPSPAID",317,0)
 Q
"RTN","XUPSPAID",318,0)
 ;
"RTN","XUPSPAID",319,0)
FL1(NODE,DATA) ; -- format line
"RTN","XUPSPAID",320,0)
 ;
"RTN","XUPSPAID",321,0)
 N NPFSSN,NPFNM,NPFSEX,NPFDOB,NPFIEN
"RTN","XUPSPAID",322,0)
 ;
"RTN","XUPSPAID",323,0)
 S NPFSSN=$P(DATA,U,1)
"RTN","XUPSPAID",324,0)
 S NPFNM=$P(DATA,U,2)
"RTN","XUPSPAID",325,0)
 S NPFSEX=$P(DATA,U,3)
"RTN","XUPSPAID",326,0)
 I NPFSEX="" S NPFSEX="-"
"RTN","XUPSPAID",327,0)
 S NPFDOB=$P(DATA,U,4)
"RTN","XUPSPAID",328,0)
 S NPFIEN=$P(DATA,U,5)
"RTN","XUPSPAID",329,0)
 ;
"RTN","XUPSPAID",330,0)
 N C1,C2,C3,C4,C5
"RTN","XUPSPAID",331,0)
 ;
"RTN","XUPSPAID",332,0)
 ;NPF values
"RTN","XUPSPAID",333,0)
 S C1=$$LJ^XLFSTR(NPFSSN,9," ")
"RTN","XUPSPAID",334,0)
 S C2=$$LJ^XLFSTR(NPFNM,30," ")
"RTN","XUPSPAID",335,0)
 S C3=$$CJ^XLFSTR(NPFSEX,3," ")
"RTN","XUPSPAID",336,0)
 I NPFDOB="" S C4="---------- "
"RTN","XUPSPAID",337,0)
 I NPFDOB'="" S C4=$$LJ^XLFSTR($$DOB(NPFDOB),11," ")
"RTN","XUPSPAID",338,0)
 S C5=$$RJ^XLFSTR(NPFIEN,14," ")
"RTN","XUPSPAID",339,0)
 ;
"RTN","XUPSPAID",340,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",341,0)
 S ^TMP(NODE,$J,CNT)=C1_"  "_C2_"  "_C3_"  "_C4_"  "_C5
"RTN","XUPSPAID",342,0)
 ;
"RTN","XUPSPAID",343,0)
 S CNT=$G(CNT)+1
"RTN","XUPSPAID",344,0)
 S ^TMP(NODE,$J,CNT)=""
"RTN","XUPSPAID",345,0)
 ;
"RTN","XUPSPAID",346,0)
 Q
"RTN","XUPSPAID",347,0)
 ;
"RTN","XUPSPAID",348,0)
UPDSEX ;Update SEX if NPF SEX is null
"RTN","XUPSPAID",349,0)
 I $E(XUPSACT,1)'="U" Q
"RTN","XUPSPAID",350,0)
 ;
"RTN","XUPSPAID",351,0)
 N DIE,DA,DR
"RTN","XUPSPAID",352,0)
 S DIE=200,DA=IEN200
"RTN","XUPSPAID",353,0)
 I NPFSEX="" D
"RTN","XUPSPAID",354,0)
 . S DR="4///^S X=PAIDSEX"
"RTN","XUPSPAID",355,0)
 . D ^DIE
"RTN","XUPSPAID",356,0)
 Q
"RTN","XUPSPAID",357,0)
 ;
"RTN","XUPSPAID",358,0)
UPDDOB ;Update DOB if NPF DOB is null
"RTN","XUPSPAID",359,0)
 I $E(XUPSACT,1)'="U" Q
"RTN","XUPSPAID",360,0)
 ;
"RTN","XUPSPAID",361,0)
 N DIE,DA,DR
"RTN","XUPSPAID",362,0)
 S DIE=200,DA=IEN200
"RTN","XUPSPAID",363,0)
 I NPFDOB="" D
"RTN","XUPSPAID",364,0)
 . S DR="5///^S X=PAIDDOB"
"RTN","XUPSPAID",365,0)
 . D ^DIE
"RTN","XUPSPAID",366,0)
 Q
"RTN","XUPSPAID",367,0)
 ;
"RTN","XUPSPAID",368,0)
NAME(NAME) ; Return "LastName,FirstName".
"RTN","XUPSPAID",369,0)
 ;
"RTN","XUPSPAID",370,0)
 N RESULT,STDNM
"RTN","XUPSPAID",371,0)
 ;
"RTN","XUPSPAID",372,0)
 S RESULT=""
"RTN","XUPSPAID",373,0)
 ;
"RTN","XUPSPAID",374,0)
 ; CALL FORMAT^XLFNAME7
"RTN","XUPSPAID",375,0)
 S STDNM=$$FORMAT^XLFNAME7(.NAME,3,35)
"RTN","XUPSPAID",376,0)
 ;
"RTN","XUPSPAID",377,0)
 ; Return LastName,FirstName
"RTN","XUPSPAID",378,0)
 S RESULT=$P($G(STDNM)," ",1)
"RTN","XUPSPAID",379,0)
 ;
"RTN","XUPSPAID",380,0)
 Q RESULT
"RTN","XUPSPAID",381,0)
 ;
"RTN","XUPSPAID",382,0)
DOB(DOB) ; format DOB
"RTN","XUPSPAID",383,0)
 ;
"RTN","XUPSPAID",384,0)
 Q:DOB="" ""
"RTN","XUPSPAID",385,0)
 ;
"RTN","XUPSPAID",386,0)
 Q $E(DOB,4,5)_"/"_$E(DOB,6,7)_"/"_(1700+$E(DOB,1,3))
"RTN","XUPSPAID",387,0)
 ;
"RTN","XUPSPAID",388,0)
PSDT() ; format date
"RTN","XUPSPAID",389,0)
 ;
"RTN","XUPSPAID",390,0)
 N %
"RTN","XUPSPAID",391,0)
 ;
"RTN","XUPSPAID",392,0)
 D NOW^%DTC S Y=% D DD^%DT
"RTN","XUPSPAID",393,0)
 ;
"RTN","XUPSPAID",394,0)
 Q Y
"RTN","XUPSPAID",395,0)
 ;
"RTN","XUPSPAID",396,0)
XM(XMSUB,X) ;Email the report
"RTN","XUPSPAID",397,0)
 ;If called within a task, protect variables
"RTN","XUPSPAID",398,0)
 I $D(ZTQUEUED) N %,DIFROM
"RTN","XUPSPAID",399,0)
 ;
"RTN","XUPSPAID",400,0)
 N XMY,XMTEXT,XMDUZ
"RTN","XUPSPAID",401,0)
 S XMY(DUZ)="",XMDUZ=.5
"RTN","XUPSPAID",402,0)
 S XMTEXT="^TMP("""_X_""",$J,"
"RTN","XUPSPAID",403,0)
 D ^XMD
"RTN","XUPSPAID",404,0)
 ;
"RTN","XUPSPAID",405,0)
 Q
"RTN","XUPSPAID",406,0)
 ;
"VER")
8.0^22
**END**
**END**
