Released IB*2*286 SEQ #296
Extracted from mail message
**KIDS**:IB*2.0*286^

**INSTALL NAME**
IB*2.0*286
"BLD",5816,0)
IB*2.0*286^INTEGRATED BILLING^0^3051219^y
"BLD",5816,4,0)
^9.64PA^372^3
"BLD",5816,4,372,0)
372
"BLD",5816,4,372,222)
y^y^f^^^^n
"BLD",5816,4,373,0)
373
"BLD",5816,4,373,222)
y^y^f^^^^n
"BLD",5816,4,375,0)
375
"BLD",5816,4,375,222)
y^y^f^^^^n
"BLD",5816,4,"B",372,372)

"BLD",5816,4,"B",373,373)

"BLD",5816,4,"B",375,375)

"BLD",5816,"ABPKG")
n^y
"BLD",5816,"INID")
^n
"BLD",5816,"INIT")
IB20P286
"BLD",5816,"KRN",0)
^9.67PA^8989.52^19
"BLD",5816,"KRN",.4,0)
.4
"BLD",5816,"KRN",.401,0)
.401
"BLD",5816,"KRN",.402,0)
.402
"BLD",5816,"KRN",.403,0)
.403
"BLD",5816,"KRN",.5,0)
.5
"BLD",5816,"KRN",.84,0)
.84
"BLD",5816,"KRN",3.6,0)
3.6
"BLD",5816,"KRN",3.8,0)
3.8
"BLD",5816,"KRN",3.8,"NM",0)
^9.68A^2^2
"BLD",5816,"KRN",3.8,"NM",1,0)
IBB PFSS DATA TRANS ERROR^^0
"BLD",5816,"KRN",3.8,"NM",2,0)
IBB PFSS CHARGE ERRORS^^0
"BLD",5816,"KRN",3.8,"NM","B","IBB PFSS CHARGE ERRORS",2)

"BLD",5816,"KRN",3.8,"NM","B","IBB PFSS DATA TRANS ERROR",1)

"BLD",5816,"KRN",9.2,0)
9.2
"BLD",5816,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",5816,"KRN",9.8,0)
9.8
"BLD",5816,"KRN",9.8,"NM",0)
^9.68A^9^9
"BLD",5816,"KRN",9.8,"NM",1,0)
IBBAACCT^^0^B32887998
"BLD",5816,"KRN",9.8,"NM",2,0)
IBBAADTI^^0^B49644433
"BLD",5816,"KRN",9.8,"NM",3,0)
IBBACDM^^0^B1943255
"BLD",5816,"KRN",9.8,"NM",4,0)
IBBACHRG^^0^B31941477
"BLD",5816,"KRN",9.8,"NM",5,0)
IBBADFTO^^0^B930780
"BLD",5816,"KRN",9.8,"NM",6,0)
IBBAPI^^0^B3356759
"BLD",5816,"KRN",9.8,"NM",7,0)
IBBDOC^^0^B657364
"BLD",5816,"KRN",9.8,"NM",8,0)
IBBAADD^^0^B4110066
"BLD",5816,"KRN",9.8,"NM",9,0)
IB20P286^^0^B1896750
"BLD",5816,"KRN",9.8,"NM","B","IB20P286",9)

"BLD",5816,"KRN",9.8,"NM","B","IBBAACCT",1)

"BLD",5816,"KRN",9.8,"NM","B","IBBAADD",8)

"BLD",5816,"KRN",9.8,"NM","B","IBBAADTI",2)

"BLD",5816,"KRN",9.8,"NM","B","IBBACDM",3)

"BLD",5816,"KRN",9.8,"NM","B","IBBACHRG",4)

"BLD",5816,"KRN",9.8,"NM","B","IBBADFTO",5)

"BLD",5816,"KRN",9.8,"NM","B","IBBAPI",6)

"BLD",5816,"KRN",9.8,"NM","B","IBBDOC",7)

"BLD",5816,"KRN",19,0)
19
"BLD",5816,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",5816,"KRN",19,"NM",1,0)
IBBA BATCH DFT^^0
"BLD",5816,"KRN",19,"NM","B","IBBA BATCH DFT",1)

"BLD",5816,"KRN",19.1,0)
19.1
"BLD",5816,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",5816,"KRN",101,0)
101
"BLD",5816,"KRN",101,"NM",0)
^9.68A^4^4
"BLD",5816,"KRN",101,"NM",1,0)
IBB PFSS ADT-A04 SERVER^^0
"BLD",5816,"KRN",101,"NM",2,0)
IBB PFSS ADT-A04 CLIENT^^0
"BLD",5816,"KRN",101,"NM",3,0)
IBB PFSS ADT-A05 SERVER^^0
"BLD",5816,"KRN",101,"NM",4,0)
IBB PFSS ADT-A05 CLIENT^^0
"BLD",5816,"KRN",101,"NM","B","IBB PFSS ADT-A04 CLIENT",2)

"BLD",5816,"KRN",101,"NM","B","IBB PFSS ADT-A04 SERVER",1)

"BLD",5816,"KRN",101,"NM","B","IBB PFSS ADT-A05 CLIENT",4)

"BLD",5816,"KRN",101,"NM","B","IBB PFSS ADT-A05 SERVER",3)

"BLD",5816,"KRN",409.61,0)
409.61
"BLD",5816,"KRN",771,0)
771
"BLD",5816,"KRN",771,"NM",0)
^9.68A^2^2
"BLD",5816,"KRN",771,"NM",1,0)
IBB PFSS RECV^^0
"BLD",5816,"KRN",771,"NM",2,0)
IBB PFSS SENDING^^0
"BLD",5816,"KRN",771,"NM","B","IBB PFSS RECV",1)

"BLD",5816,"KRN",771,"NM","B","IBB PFSS SENDING",2)

"BLD",5816,"KRN",870,0)
870
"BLD",5816,"KRN",8989.51,0)
8989.51
"BLD",5816,"KRN",8989.52,0)
8989.52
"BLD",5816,"KRN",8994,0)
8994
"BLD",5816,"KRN","B",.4,.4)

"BLD",5816,"KRN","B",.401,.401)

"BLD",5816,"KRN","B",.402,.402)

"BLD",5816,"KRN","B",.403,.403)

"BLD",5816,"KRN","B",.5,.5)

"BLD",5816,"KRN","B",.84,.84)

"BLD",5816,"KRN","B",3.6,3.6)

"BLD",5816,"KRN","B",3.8,3.8)

"BLD",5816,"KRN","B",9.2,9.2)

"BLD",5816,"KRN","B",9.8,9.8)

"BLD",5816,"KRN","B",19,19)

"BLD",5816,"KRN","B",19.1,19.1)

"BLD",5816,"KRN","B",101,101)

"BLD",5816,"KRN","B",409.61,409.61)

"BLD",5816,"KRN","B",771,771)

"BLD",5816,"KRN","B",870,870)

"BLD",5816,"KRN","B",8989.51,8989.51)

"BLD",5816,"KRN","B",8989.52,8989.52)

"BLD",5816,"KRN","B",8994,8994)

"BLD",5816,"QUES",0)
^9.62^^
"BLD",5816,"REQB",0)
^9.611^4^2
"BLD",5816,"REQB",3,0)
HL*1.6*118^2
"BLD",5816,"REQB",4,0)
IB*2.0*260^2
"BLD",5816,"REQB","B","HL*1.6*118",3)

"BLD",5816,"REQB","B","IB*2.0*260",4)

"FIA",372)
PFSS SITE PARAMETERS
"FIA",372,0)
^IBBAS(372,
"FIA",372,0,0)
372P
"FIA",372,0,1)
y^y^f^^^^n
"FIA",372,0,10)

"FIA",372,0,11)

"FIA",372,0,"RLRO")

"FIA",372,0,"VR")
2.0^IB
"FIA",372,372)
0
"FIA",372,372.01)
0
"FIA",372,372.011)
0
"FIA",373)
PFSS CHARGE CACHE
"FIA",373,0)
^IBBAD(373,
"FIA",373,0,0)
373
"FIA",373,0,1)
y^y^f^^^^n
"FIA",373,0,10)

"FIA",373,0,11)

"FIA",373,0,"RLRO")

"FIA",373,0,"VR")
2.0^IB
"FIA",373,373)
0
"FIA",373,373.04)
0
"FIA",373,373.05)
0
"FIA",375)
PFSS ACCOUNT
"FIA",375,0)
^IBBAA(375,
"FIA",375,0,0)
375
"FIA",375,0,1)
y^y^f^^^^n
"FIA",375,0,10)

"FIA",375,0,11)

"FIA",375,0,"RLRO")

"FIA",375,0,"VR")
2.0^IB
"FIA",375,375)
0
"FIA",375,375.04)
0
"FIA",375,375.05)
0
"FIA",375,375.099)
0
"INIT")
IB20P286
"IX",375,375,"AC",0)
375^AC^Set and kill the critical "AC" cross-reference.^R^^R^IR^I^375^^^^^S
"IX",375,375,"AC",.1,0)
^^4^4^3050620^^^
"IX",375,375,"AC",.1,1,0)
S ^IBBAA(375,"AC",X1,X3,X2,DA)=""
"IX",375,375,"AC",.1,2,0)
   where:  X1=field #.03
"IX",375,375,"AC",.1,3,0)
           X2=field #1.03
"IX",375,375,"AC",.1,4,0)
           X3=field #1.44
"IX",375,375,"AC",1)
S ^IBBAA(375,"AC",X(1),X(2),X(3),DA)=""
"IX",375,375,"AC",2)
K ^IBBAA(375,"AC",X(1),X(2),X(3),DA)
"IX",375,375,"AC",2.5)
K ^IBBAA(375,"AC")
"IX",375,375,"AC",11.1,0)
^.114IA^3^3
"IX",375,375,"AC",11.1,1,0)
1^F^375^.03^^1^F
"IX",375,375,"AC",11.1,2,0)
2^F^375^1.44^^2^F
"IX",375,375,"AC",11.1,3,0)
3^F^375^1.03^^3^F
"IX",375,375,"AF",0)
375^AF^Set critical "AF" cross-reference.^R^^R^IR^I^375^^^^^S
"IX",375,375,"AF",.1,0)
^^4^4^3050620^
"IX",375,375,"AF",.1,1,0)
S ^IBBAA(375,"AF",X1,X3,X2,DA)=""
"IX",375,375,"AF",.1,2,0)
   where:  X1=field #.03
"IX",375,375,"AF",.1,3,0)
           X2=field #16.01
"IX",375,375,"AF",.1,4,0)
           X3=field #1.44
"IX",375,375,"AF",1)
S ^IBBAA(375,"AF",X(1),X(2),$E(X(3),1,30),DA)=""
"IX",375,375,"AF",2)
K ^IBBAA(375,"AF",X(1),X(2),$E(X(3),1,30),DA)
"IX",375,375,"AF",2.5)
K ^IBBAA(375,"AF")
"IX",375,375,"AF",11.1,0)
^.114IA^3^3
"IX",375,375,"AF",11.1,1,0)
1^F^375^.03^^1^F
"IX",375,375,"AF",11.1,1,3)

"IX",375,375,"AF",11.1,2,0)
2^F^375^1.44^^2^F
"IX",375,375,"AF",11.1,2,3)

"IX",375,375,"AF",11.1,3,0)
3^F^375^16.01^30^3^F
"IX",375,375,"AF",11.1,3,3)

"KRN",3.8,369,-1)
0^1
"KRN",3.8,369,0)
IBB PFSS DATA TRANS ERROR^PU^n^^^^
"KRN",3.8,369,2,0)
^3.801^2^2^3051011^^^^
"KRN",3.8,369,2,1,0)
This Mailgroup will receive a message whenever an error is
"KRN",3.8,369,2,2,0)
encountered while building an HL7 message for PFSS.
"KRN",3.8,369,3)

"KRN",3.8,377,-1)
0^2
"KRN",3.8,377,0)
IBB PFSS CHARGE ERRORS^PU^n^^^^
"KRN",3.8,377,2,0)
^3.801^8^8^3050920^^^
"KRN",3.8,377,2,1,0)
The purpose of this mail group is to receive any error message generated
"KRN",3.8,377,2,2,0)
in IBB during processing of charge transaction data.  Processing of a
"KRN",3.8,377,2,3,0)
charge transaction is initiated by a call from a clinical application
"KRN",3.8,377,2,4,0)
to CHARGE^IBBAPI.
"KRN",3.8,377,2,5,0)
  
"KRN",3.8,377,2,6,0)
This mail group is added to the MAIL GROUP file via patch IB*2.0*286.
"KRN",3.8,377,2,7,0)
A post-installation routine adds this mail group to the MAIL GROUP FOR
"KRN",3.8,377,2,8,0)
CHARGE field (#.06) in the PFSS SITE PARAMETERS file (#372).
"KRN",3.8,377,3)

"KRN",19,12453,-1)
0^1
"KRN",19,12453,0)
IBBA BATCH DFT^PFSS Charge Batch Processing^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,12453,1,0)
^^18^18^3050607^
"KRN",19,12453,1,1,0)
The menu option is used to schedule via TaskManager the PFSS Charge
"KRN",19,12453,1,2,0)
Batch Processor.  Normally, this option should be scheduled to run
"KRN",19,12453,1,3,0)
once daily at a time of low system activity.
"KRN",19,12453,1,4,0)
  
"KRN",19,12453,1,5,0)
When the batch processor starts, it will set data into two fields
"KRN",19,12453,1,6,0)
in the PFSS SITE PARAMETERS file (#372):
"KRN",19,12453,1,7,0)
(1) The CHARGE PROCESSOR RUNNING field (#.1) will be set to "YES".
"KRN",19,12453,1,8,0)
(2) The CHARGE PROCESS START TIME field (#.11) will be set to the
"KRN",19,12453,1,9,0)
current system date/time.
"KRN",19,12453,1,10,0)
  
"KRN",19,12453,1,11,0)
When charge batch processing is complete, then:
"KRN",19,12453,1,12,0)
(1) The CHARGE PROCESSOR RUNNING field (#.1) will be set to "NO".
"KRN",19,12453,1,13,0)
(2) The CHARGE PROCESS START TIME field (#.11) will be deleted.
"KRN",19,12453,1,14,0)
  
"KRN",19,12453,1,15,0)
When a charge batch processor job is started, it always checks the
"KRN",19,12453,1,16,0)
status of the CHARGE PROCESSOR RUNNING field.  If this field is set to
"KRN",19,12453,1,17,0)
"YES", then the job quits immediately.  This insures that only one
"KRN",19,12453,1,18,0)
batch processor is running at any given time.
"KRN",19,12453,25)
EN^IBBADFTO
"KRN",19,12453,200.9)
y
"KRN",19,12453,"U")
PFSS CHARGE BATCH PROCESSING
"KRN",101,7993,-1)
0^3
"KRN",101,7993,0)
IBB PFSS ADT-A05 SERVER^PFSS/IBB ADT-A05 Receiver^^E^^^^^^^^
"KRN",101,7993,99)
60247,35956
"KRN",101,7993,770)
IBB PFSS SENDING^^ADT^A05^^^^AL^AL^2.4^
"KRN",101,7993,775,0)
^101.0775PA^1^1
"KRN",101,7993,775,1,0)
7994
"KRN",101,7993,775,1,"^")
IBB PFSS ADT-A05 CLIENT
"KRN",101,7994,-1)
0^4
"KRN",101,7994,0)
IBB PFSS ADT-A05 CLIENT^^^S^^^^^^^^
"KRN",101,7994,770)
^IBB PFSS RECV^^A05^^^^^^^ADT
"KRN",101,7994,771)
D A05^IBBAADTI
"KRN",101,7994,773)
0^1
"KRN",101,7995,-1)
0^1
"KRN",101,7995,0)
IBB PFSS ADT-A04 SERVER^PFSS/IBB ADT-A04 Receiver^^E^^^^^^^^
"KRN",101,7995,99)
60247,35956
"KRN",101,7995,770)
IBB PFSS SENDING^^ADT^A04^122^^^AL^AL^2.4^
"KRN",101,7995,775,0)
^101.0775PA^1^1
"KRN",101,7995,775,1,0)
7996
"KRN",101,7995,775,1,"^")
IBB PFSS ADT-A04 CLIENT
"KRN",101,7996,-1)
0^2
"KRN",101,7996,0)
IBB PFSS ADT-A04 CLIENT^^^S^^^^^^^^
"KRN",101,7996,770)
^IBB PFSS RECV^^A04^^^^^^^ADT
"KRN",101,7996,771)
D A04^IBBAADTI
"KRN",101,7996,773)
0^1
"KRN",771,208,-1)
0^2
"KRN",771,208,0)
IBB PFSS SENDING^a^^^^^US
"KRN",771,208,"EC")
^~\&
"KRN",771,208,"FS")
|
"KRN",771,209,-1)
0^1
"KRN",771,209,0)
IBB PFSS RECV^a^^^^^US
"KRN",771,209,"EC")
^~\&
"KRN",771,209,"FS")
|
"MBREQ")
0
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^2^1
"PKG",200,20,2,0)
2^^IBAXDR
"PKG",200,20,2,1)

"PKG",200,20,"B",2,2)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
286^3051219
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3050516
"PKG",200,22,1,"PAH",1,1,1,0)
This patch is the IB part of PFSS.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","IB20P286")
0^9^B1896750
"RTN","IB20P286",1,0)
IB20P286 ;OAK/ELZ - POST INSTALL FOR IB*2*313 ;19-SEP-2005
"RTN","IB20P286",2,0)
 ;;2.0;INTEGRATED BILLING;**286**;21-MAR-94
"RTN","IB20P286",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IB20P286",4,0)
 ;
"RTN","IB20P286",5,0)
 ; This is the post install routine for IB*2*286.  This routine will
"RTN","IB20P286",6,0)
 ; add IBB PFSS CHARGE ERRORS mail group to file #372;
"RTN","IB20P286",7,0)
 ; this mail group receives any error message generated in IBB 
"RTN","IB20P286",8,0)
 ; after a call to CHARGE^IBBAPI.
"RTN","IB20P286",9,0)
 ;
"RTN","IB20P286",10,0)
POST ;
"RTN","IB20P286",11,0)
 N X,GROUP,FDA,IENS,ERR,IBB,IBBERROR
"RTN","IB20P286",12,0)
 S GROUP="IBB PFSS CHARGE ERRORS"
"RTN","IB20P286",13,0)
 D BMES^XPDUTL("Updating MAIL GROUP FOR CHARGE field in PFSS Site Parameter file...")
"RTN","IB20P286",14,0)
 S IENS="1,"
"RTN","IB20P286",15,0)
 S ERR="IBB(""DIERR"")"
"RTN","IB20P286",16,0)
 S FDA(372,IENS,.06)=GROUP
"RTN","IB20P286",17,0)
 D FILE^DIE("E","FDA",ERR)
"RTN","IB20P286",18,0)
 I $D(IBB("DIERR")) S IBBERROR=IBB("DIERR","DIERR",1,"TEXT",1)
"RTN","IB20P286",19,0)
 I $G(IBBERROR)'="" D
"RTN","IB20P286",20,0)
 .D BMES^XPDUTL("Update failed.")
"RTN","IB20P286",21,0)
 .D BMES^XPDUTL(IBBERROR)
"RTN","IB20P286",22,0)
 I $G(IBBERROR)="" D
"RTN","IB20P286",23,0)
 .D BMES^XPDUTL("Successfully updated.")
"RTN","IB20P286",24,0)
 .D BMES^XPDUTL("Add members to group "_GROUP_" as recommended by your VISN.")
"RTN","IB20P286",25,0)
 D BMES^XPDUTL(" ")
"RTN","IB20P286",26,0)
 Q
"RTN","IBBAACCT")
0^1^B32887998
"RTN","IBBAACCT",1,0)
IBBAACCT ;OAK/ELZ - PFSS ACCOUNT API ;15-MAR-2005
"RTN","IBBAACCT",2,0)
 ;;2.0;INTEGRATED BILLING;**286**;21-MAR-94
"RTN","IBBAACCT",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBBAACCT",4,0)
 ;
"RTN","IBBAACCT",5,0)
GET(IBBDFN,IBBARFN,IBBEVENT,IBBAPLR,IBBPV1,IBBPV2,IBBPR1,IBBDG1,IBBZCL,IBBDIV,IBBRAIEN,IBBSURG) ;
"RTN","IBBAACCT",6,0)
 ;
"RTN","IBBAACCT",7,0)
 N IBB,IBBIEN,IBBIENS,IBBERR,IBBVERR,IBBSUBTY,IBBVDEF,FDA,OUT,J,J1,X,Y,X1,X2,X3
"RTN","IBBAACCT",8,0)
 I '$G(IBBDFN)!($G(IBBEVENT)="") Q 0
"RTN","IBBAACCT",9,0)
 I $D(IBBPV1)<10 Q 0
"RTN","IBBAACCT",10,0)
 ;
"RTN","IBBAACCT",11,0)
 ;update account record
"RTN","IBBAACCT",12,0)
 S OUT=0
"RTN","IBBAACCT",13,0)
 I IBBARFN'="" D
"RTN","IBBAACCT",14,0)
 .S IBBIEN=IBBARFN
"RTN","IBBAACCT",15,0)
 .I IBBDFN'=$P($G(^IBBAA(375,IBBIEN,0)),U,3) S OUT=1 Q
"RTN","IBBAACCT",16,0)
 .;visit data
"RTN","IBBAACCT",17,0)
 .I $D(IBBPV1)>1 D
"RTN","IBBAACCT",18,0)
 ..I $G(IBBPV1(44))="" S IBBPV1(44)=$G(IBBPV2(8))
"RTN","IBBAACCT",19,0)
 ..I $P($G(^IBBAA(375,IBBIEN,"PV1")),U,44),$G(IBBPV1(44))'=$P($G(^IBBAA(375,IBBIEN,"PV1")),U,44),$P(^IBBAA(375,IBBIEN,0),U,2) D KAC144^IBBAADD(IBBIEN)
"RTN","IBBAACCT",20,0)
 ..S J=0 F  S J=$O(IBBPV1(J)) Q:'J  S $P(^IBBAA(375,IBBIEN,"PV1"),U,J)=IBBPV1(J)
"RTN","IBBAACCT",21,0)
 ..I $G(IBBPV1(50)) S $P(^IBBAA(375,IBBIEN,"PV1"),U,50)=IBBPV1(50)_";;;;OPP"
"RTN","IBBAACCT",22,0)
 .I $D(IBBPV2)>1 D
"RTN","IBBAACCT",23,0)
 ..S J=0 F  S J=$O(IBBPV2(J)) Q:'J  S $P(^IBBAA(375,IBBIEN,"PV2"),U,J)=IBBPV2(J)
"RTN","IBBAACCT",24,0)
 .;procedure
"RTN","IBBAACCT",25,0)
 .I $D(IBBPR1)>1 D
"RTN","IBBAACCT",26,0)
 ..S J=0,X="" F  S J=$O(IBBPR1(J)) Q:'J  I J'=4 S $P(X,U,J)=IBBPR1(J)
"RTN","IBBAACCT",27,0)
 ..S ^IBBAA(375,IBBIEN,"PR1")=X
"RTN","IBBAACCT",28,0)
 ..I $G(IBBPR1(4))'="" S ^IBBAA(375,IBBIEN,11)=IBBPR1(4)
"RTN","IBBAACCT",29,0)
 .;diagnosis
"RTN","IBBAACCT",30,0)
 .;if any dx sent, remove existing dx
"RTN","IBBAACCT",31,0)
 .I $D(IBBDG1)>1,$G(IBBDG1(1,3))=+$G(IBBDG1(1,3)) K ^IBBAA(375,IBBIEN,"DG1") D DX^IBBAACCT(.IBBDG1,IBBIEN)
"RTN","IBBAACCT",32,0)
 .I $G(IBBDG1(1,4)) S ^IBBAA(375,IBBIEN,12)=IBBDG1(1,4)
"RTN","IBBAACCT",33,0)
 .;classification
"RTN","IBBAACCT",34,0)
 .;if any classification sent, remove existing classification
"RTN","IBBAACCT",35,0)
 .I $D(IBBZCL)>1 D
"RTN","IBBAACCT",36,0)
 ..K ^IBBAA(375,IBBIEN,"ZCL")
"RTN","IBBAACCT",37,0)
 ..S (J,J1)=0 F  S J=$O(IBBZCL(J)) Q:'J  S J1=J1+1,X=J1_U_IBBZCL(J,2)_U_IBBZCL(J,3),^IBBAA(375,IBBIEN,"ZCL",J1,0)=X
"RTN","IBBAACCT",38,0)
 ..S ^IBBAA(375,IBBIEN,"ZCL",0)="^375.05A^"_J1_U_J1
"RTN","IBBAACCT",39,0)
 .;miscellaneous
"RTN","IBBAACCT",40,0)
 .I $G(IBBDIV) S ^IBBAA(375,IBBIEN,13)=IBBDIV
"RTN","IBBAACCT",41,0)
 .I $D(IBBSURG)>1 S ^IBBAA(375,IBBIEN,14)=$G(IBBSURG(1))_U_$G(IBBSURG(2))
"RTN","IBBAACCT",42,0)
 .I $G(IBBRAIEN) S ^IBBAA(375,IBBIEN,15)=$G(IBBRAIEN)
"RTN","IBBAACCT",43,0)
 .I $G(IBBSURG(1)) S $P(^IBBAA(375,IBBIEN,"PV1"),U,50)=IBBSURG(1)_";;;;SUR"
"RTN","IBBAACCT",44,0)
 I OUT Q 0
"RTN","IBBAACCT",45,0)
 ;
"RTN","IBBAACCT",46,0)
 ;request account reference number
"RTN","IBBAACCT",47,0)
 I IBBARFN="" D
"RTN","IBBAACCT",48,0)
 .I $G(IBBAPLR)'="" D
"RTN","IBBAACCT",49,0)
 ..S IBBAPLR=$E($TR(IBBAPLR,U,";"),1,25)
"RTN","IBBAACCT",50,0)
 ..I IBBAPLR'[";" S IBBAPLR=";"_IBBAPLR
"RTN","IBBAACCT",51,0)
 .L +^IBBAA(375,0):5
"RTN","IBBAACCT",52,0)
 .Q:'$T
"RTN","IBBAACCT",53,0)
 .S IBBIEN=$P(^IBBAA(375,0),U,3)+1,$P(^IBBAA(375,0),U,3)=IBBIEN
"RTN","IBBAACCT",54,0)
 .L -^IBBAA(375,0)
"RTN","IBBAACCT",55,0)
 .S ^IBBAA(375,IBBIEN,0)=IBBIEN
"RTN","IBBAACCT",56,0)
 .S IBBIENS=IBBIEN_","
"RTN","IBBAACCT",57,0)
 .S IBBERR="IBB(""DIERR"")"
"RTN","IBBAACCT",58,0)
 .S FDA(375,IBBIENS,.02)="G"
"RTN","IBBAACCT",59,0)
 .S FDA(375,IBBIENS,.03)=IBBDFN
"RTN","IBBAACCT",60,0)
 .S FDA(375,IBBIENS,.04)=$G(IBBAPLR)
"RTN","IBBAACCT",61,0)
 .D FILE^DIE("","FDA",IBBERR)
"RTN","IBBAACCT",62,0)
 .Q:$D(IBB("DIERR"))
"RTN","IBBAACCT",63,0)
 .S IBBARFN=IBBIEN
"RTN","IBBAACCT",64,0)
 .;visit data
"RTN","IBBAACCT",65,0)
 .I $D(IBBPV1)>1 D
"RTN","IBBAACCT",66,0)
 ..I $G(IBBPV1(44))="" S IBBPV1(44)=$G(IBBPV2(8))
"RTN","IBBAACCT",67,0)
 ..S J=0,X="" F  S J=$O(IBBPV1(J)) Q:'J  S $P(X,U,J)=IBBPV1(J)
"RTN","IBBAACCT",68,0)
 ..S ^IBBAA(375,IBBIEN,"PV1")=X
"RTN","IBBAACCT",69,0)
 ..I $G(IBBPV1(50)) S $P(^IBBAA(375,IBBIEN,"PV1"),U,50)=IBBPV1(50)_";;;;OPP"
"RTN","IBBAACCT",70,0)
 ..I $G(IBBPV1(3))="FEE BASIS" D
"RTN","IBBAACCT",71,0)
 ...S IBBPV1(44)=$P($G(IBBPV1(44)),".",1)
"RTN","IBBAACCT",72,0)
 ...S $P(^IBBAA(375,IBBIEN,"PV1"),U,3)="",$P(^("PV1"),U,44)=IBBPV1(44)
"RTN","IBBAACCT",73,0)
 ...S ^IBBAA(375,IBBIEN,16)=IBBPV1(3)
"RTN","IBBAACCT",74,0)
 .I $D(IBBPV2)>1 D
"RTN","IBBAACCT",75,0)
 ..S J=0,X="" F  S J=$O(IBBPV2(J)) Q:'J  S $P(X,U,J)=IBBPV2(J)
"RTN","IBBAACCT",76,0)
 ..S ^IBBAA(375,IBBIEN,"PV2")=X
"RTN","IBBAACCT",77,0)
 .;procedure
"RTN","IBBAACCT",78,0)
 .I $D(IBBPR1)>1 D
"RTN","IBBAACCT",79,0)
 ..I $D(IBBPR1(4)) S ^IBBAA(375,IBBIEN,11)=IBBPR1(4)
"RTN","IBBAACCT",80,0)
 ..S J=0,X="" F  S J=$O(IBBPR1(J)) Q:'J  I J'=4 S $P(X,U,J)=IBBPR1(J)
"RTN","IBBAACCT",81,0)
 ..S ^IBBAA(375,IBBIEN,"PR1")=X
"RTN","IBBAACCT",82,0)
 .;diagnosis
"RTN","IBBAACCT",83,0)
 .I $D(IBBDG1)>1 D
"RTN","IBBAACCT",84,0)
 ..I $D(IBBDG1(1,4)) S ^IBBAA(375,IBBIEN,12)=IBBDG1(1,4)
"RTN","IBBAACCT",85,0)
 ..I $G(IBBDG1(1,3))=+$G(IBBDG1(1,3)) D DX^IBBAACCT(.IBBDG1,IBBIEN)
"RTN","IBBAACCT",86,0)
 .;classification
"RTN","IBBAACCT",87,0)
 .I $D(IBBZCL)>1 D
"RTN","IBBAACCT",88,0)
 ..S (J,J1)=0 F  S J=$O(IBBZCL(J)) Q:'J  S J1=J1+1,X=J1_U_IBBZCL(J,2)_U_IBBZCL(J,3),^IBBAA(375,IBBIEN,"ZCL",J1,0)=X
"RTN","IBBAACCT",89,0)
 ..S ^IBBAA(375,IBBIEN,"ZCL",0)="^375.05A^"_J1_U_J1
"RTN","IBBAACCT",90,0)
 .;miscellaneous
"RTN","IBBAACCT",91,0)
 .I $G(IBBDIV) S ^IBBAA(375,IBBIEN,13)=IBBDIV
"RTN","IBBAACCT",92,0)
 .I $D(IBBSURG)>1 S ^IBBAA(375,IBBIEN,14)=$G(IBBSURG(1))_U_$G(IBBSURG(2))
"RTN","IBBAACCT",93,0)
 .I $G(IBBRAIEN) S ^IBBAA(375,IBBIEN,15)=$G(IBBRAIEN)
"RTN","IBBAACCT",94,0)
 .I $G(IBBSURG(1)) S $P(^IBBAA(375,IBBIEN,"PV1"),U,50)=IBBSURG(1)_";;;;SUR"
"RTN","IBBAACCT",95,0)
 ;
"RTN","IBBAACCT",96,0)
 ;exit here if lock failed or FM error (??)
"RTN","IBBAACCT",97,0)
 I 'IBBARFN Q +IBBARFN
"RTN","IBBAACCT",98,0)
 ;
"RTN","IBBAACCT",99,0)
 ;update event history
"RTN","IBBAACCT",100,0)
 I $L(IBBEVENT)=3 D EVENT^IBBAACCT(IBBARFN,IBBEVENT,"R")
"RTN","IBBAACCT",101,0)
 ;
"RTN","IBBAACCT",102,0)
 ;set xref
"RTN","IBBAACCT",103,0)
 S X1=IBBDFN,X2=$G(IBBPV1(3)),X3=$G(IBBPV1(44)) I X3 D
"RTN","IBBAACCT",104,0)
 .I X2'=+X2 S ^IBBAA(375,"AF",X1,X3,X2,IBBARFN)=""
"RTN","IBBAACCT",105,0)
 .I X2=+X2 S ^IBBAA(375,"AC",X1,X3,X2,IBBARFN)=""
"RTN","IBBAACCT",106,0)
 ;
"RTN","IBBAACCT",107,0)
 ;quit if test patient
"RTN","IBBAACCT",108,0)
 I $$TESTPAT^VADPT(IBBDFN) S $P(^IBBAA(375,IBBIEN,0),U,20)=1 Q IBBARFN
"RTN","IBBAACCT",109,0)
 ;
"RTN","IBBAACCT",110,0)
 ;call VDEF
"RTN","IBBAACCT",111,0)
 S IBBVDEF=0,X=IBBEVENT
"RTN","IBBAACCT",112,0)
 S IBBSUBTY=$S(X="A01":"PFAN",X="A03":"PFDE",X="A04":"PFOA",X="A05":"PFPA",X="A08":"PFUPI",X="A11":"PFCAN",X="A13":"PFCDE",X="A38":"PFCPA",1:"")
"RTN","IBBAACCT",113,0)
 I IBBSUBTY'="" S X=$T(QUEUE^VDEFQM) I X'="" S IBBVDEF=$$QUEUE^VDEFQM("ADT^"_IBBEVENT,"SUBTYPE="_IBBSUBTY_"^IEN="_IBBARFN,.IBBVERR,"PFSS OUTBOUND")
"RTN","IBBAACCT",114,0)
 ;
"RTN","IBBAACCT",115,0)
 Q +IBBARFN
"RTN","IBBAACCT",116,0)
 ;
"RTN","IBBAACCT",117,0)
DX(DG1,IEN) ;file diagnosis on subfile #375.04
"RTN","IBBAACCT",118,0)
 N J,IBB,IBBIEN,IBBIENS,IBBERR,FDA
"RTN","IBBAACCT",119,0)
 S J=0 F  S J=$O(DG1(J)) Q:'J  Q:(DG1(J,3)'=+DG1(J,3))  D
"RTN","IBBAACCT",120,0)
 .S IBBIEN(1)=J
"RTN","IBBAACCT",121,0)
 .S IBBIENS="+1,"_IEN_","
"RTN","IBBAACCT",122,0)
 .S IBBERR="IBB(""DIERR"")"
"RTN","IBBAACCT",123,0)
 .S FDA(375.04,IBBIENS,.01)=J
"RTN","IBBAACCT",124,0)
 .S FDA(375.04,IBBIENS,.03)=DG1(J,3)
"RTN","IBBAACCT",125,0)
 .S FDA(375.04,IBBIENS,.06)=$G(DG1(J,6))
"RTN","IBBAACCT",126,0)
 .D UPDATE^DIE("","FDA","IBBIEN",IBBERR)
"RTN","IBBAACCT",127,0)
 Q
"RTN","IBBAACCT",128,0)
 ;
"RTN","IBBAACCT",129,0)
EVENT(IBBARFN,IBBEVENT,IBBREAS,IBBHLMSG) ;update the event history subfile #375.099
"RTN","IBBAACCT",130,0)
 ;
"RTN","IBBAACCT",131,0)
 ;update event history
"RTN","IBBAACCT",132,0)
 N IBB,IBBIEN,IBBIENS,IBBERR,FDA
"RTN","IBBAACCT",133,0)
 Q:'$G(IBBARFN)  Q:$G(IBBEVENT)=""
"RTN","IBBAACCT",134,0)
 S IBBIEN(1)=""
"RTN","IBBAACCT",135,0)
 S IBBIENS="+1,"_IBBARFN_","
"RTN","IBBAACCT",136,0)
 S IBBERR="IBB(""DIERR"")"
"RTN","IBBAACCT",137,0)
 S FDA(375.099,IBBIENS,.01)=$$NOW^XLFDT()
"RTN","IBBAACCT",138,0)
 S FDA(375.099,IBBIENS,.02)=IBBEVENT
"RTN","IBBAACCT",139,0)
 S FDA(375.099,IBBIENS,.03)=$G(IBBREAS)
"RTN","IBBAACCT",140,0)
 S FDA(375.099,IBBIENS,.04)=$G(IBBHLMSG)
"RTN","IBBAACCT",141,0)
 D UPDATE^DIE("","FDA","IBBIEN",IBBERR)
"RTN","IBBAACCT",142,0)
 Q
"RTN","IBBAACCT",143,0)
 ;
"RTN","IBBAACCT",144,0)
EXTNUM(IBBDFN,IBBARFN) ;find external visit number
"RTN","IBBAACCT",145,0)
 N IBBIEN,IBBEXVN,IBBARRY,IBBERR
"RTN","IBBAACCT",146,0)
 S IBBEXVN="",IBBIEN=IBBARFN
"RTN","IBBAACCT",147,0)
 D GETS^DIQ(375,IBBIEN_",",".02;.03","I","IBBARRY","IBBERR")
"RTN","IBBAACCT",148,0)
 I $D(IBBERR("DIERR")) Q IBBEXVN
"RTN","IBBAACCT",149,0)
 I IBBARRY(375,IBBIEN_",",.03,"I")=IBBDFN S IBBEXVN=IBBARRY(375,IBBIEN_",",.02,"I")
"RTN","IBBAACCT",150,0)
 Q IBBEXVN
"RTN","IBBAADD")
0^8^B4110066
"RTN","IBBAADD",1,0)
IBBAADD ;OAK/ELZ - PFSS FILE INDEXING ;15-MAR-2005
"RTN","IBBAADD",2,0)
 ;;2.0;INTEGRATED BILLING;**286**;21-MAR-94
"RTN","IBBAADD",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBBAADD",4,0)
 ;
"RTN","IBBAADD",5,0)
SAC(DA) ;set AC xref on file #375
"RTN","IBBAADD",6,0)
 N X1,X2,X3
"RTN","IBBAADD",7,0)
 S X2=+$P($G(^IBBAA(375,DA,"PV1")),U,3)
"RTN","IBBAADD",8,0)
 Q:'X2
"RTN","IBBAADD",9,0)
 S X1=$P(^IBBAA(375,DA,0),U,3)
"RTN","IBBAADD",10,0)
 S X3=$P(^IBBAA(375,DA,"PV1"),U,44)
"RTN","IBBAADD",11,0)
 I X3'="" S ^IBBAA(375,"AC",X1,X3,X2,DA)=""
"RTN","IBBAADD",12,0)
 Q
"RTN","IBBAADD",13,0)
 ;
"RTN","IBBAADD",14,0)
KAC144(DA) ;kill AC xref on file #375
"RTN","IBBAADD",15,0)
 N X1,X2,X3
"RTN","IBBAADD",16,0)
 S X2=+$P($G(^IBBAA(375,DA,"PV1")),U,3)
"RTN","IBBAADD",17,0)
 Q:'X2
"RTN","IBBAADD",18,0)
 S X1=$P(^IBBAA(375,DA,0),U,3)
"RTN","IBBAADD",19,0)
 S X3=$P(^IBBAA(375,DA,"PV1"),U,44)
"RTN","IBBAADD",20,0)
 I X3'="" K ^IBBAA(375,"AC",X1,X3,X2,DA)
"RTN","IBBAADD",21,0)
 Q
"RTN","IBBAADD",22,0)
 ;
"RTN","IBBAADD",23,0)
SAF(DA) ;set AF xref on file #375
"RTN","IBBAADD",24,0)
 N X1,X2,X3
"RTN","IBBAADD",25,0)
 S X2=$G(^IBBAA(375,DA,16))
"RTN","IBBAADD",26,0)
 Q:X2=""
"RTN","IBBAADD",27,0)
 S X1=$P(^IBBAA(375,DA,0),U,3)
"RTN","IBBAADD",28,0)
 S X3=$P($G(^IBBAA(375,DA,"PV1")),U,44)
"RTN","IBBAADD",29,0)
 I X3'="" S ^IBBAA(375,"AF",X1,X3,X2,DA)=""
"RTN","IBBAADD",30,0)
 Q
"RTN","IBBAADD",31,0)
 ;
"RTN","IBBAADD",32,0)
KAF(DA) ;kill AF xref on file #375
"RTN","IBBAADD",33,0)
 N X1,X2,X3
"RTN","IBBAADD",34,0)
 S X2=$G(^IBBAA(375,DA,16))
"RTN","IBBAADD",35,0)
 Q:X2=""
"RTN","IBBAADD",36,0)
 S X1=$P(^IBBAA(375,DA,0),U,3)
"RTN","IBBAADD",37,0)
 S X3=$P($G(^IBBAA(375,DA,"PV1")),U,44)
"RTN","IBBAADD",38,0)
 I X3'="" K ^IBBAA(375,"AC",X1,X3,X2,DA)
"RTN","IBBAADD",39,0)
 Q
"RTN","IBBAADD",40,0)
 ;
"RTN","IBBAADD",41,0)
SAOX(DA,DFN,IBBTEST) ;set AX or OX xref on file #373
"RTN","IBBAADD",42,0)
 N X,X1,X2,X3,X4
"RTN","IBBAADD",43,0)
 ;do not set if test patient
"RTN","IBBAADD",44,0)
 I $$TESTPAT^VADPT($G(DFN)) S IBBTEST=1 Q
"RTN","IBBAADD",45,0)
 S X=$G(^IBBAD(373,DA,0))
"RTN","IBBAADD",46,0)
 S X1=$P(X,U,3),X2=$P(X,U,4),X3=$P(X,U,6),X4=$P(X,U,11)
"RTN","IBBAADD",47,0)
 I X4="" D
"RTN","IBBAADD",48,0)
 .I X3=419 S ^IBBAD(373,"AX",X1,X2,DA)=""
"RTN","IBBAADD",49,0)
 .E  S ^IBBAD(373,"OX",X1,X2,DA)=""
"RTN","IBBAADD",50,0)
 Q
"RTN","IBBAADD",51,0)
 ;
"RTN","IBBAADD",52,0)
KAOX(DA) ;kill AX or OX xref on file #373
"RTN","IBBAADD",53,0)
 N X,X1,X2,X3,X4
"RTN","IBBAADD",54,0)
 S X=$G(^IBBAD(373,DA,0))
"RTN","IBBAADD",55,0)
 S X1=$P(X,U,3),X2=$P(X,U,4),X3=$P(X,U,6),X4=$P(X,U,11)
"RTN","IBBAADD",56,0)
 I X4 D
"RTN","IBBAADD",57,0)
 .I X3=419 K ^IBBAD(373,"AX",X1,X2,DA)
"RTN","IBBAADD",58,0)
 .E  K ^IBBAD(373,"OX",X1,X2,DA)
"RTN","IBBAADD",59,0)
 Q
"RTN","IBBAADD",60,0)
 ;
"RTN","IBBAADD",61,0)
SAA(DA) ;set AA xref on file #374
"RTN","IBBAADD",62,0)
 N XX,X1,X2,X3
"RTN","IBBAADD",63,0)
 S XX=^IBBAS(374,DA(1),1,DA,0),X1=$P(XX,U,1),X2=$P(XX,U,2),X3=$P(XX,U,3)
"RTN","IBBAADD",64,0)
 I X3=1 S ^IBBAS(374,"AA",X1,X2,DA(1),DA)=""
"RTN","IBBAADD",65,0)
 Q
"RTN","IBBAADTI")
0^2^B49644433
"RTN","IBBAADTI",1,0)
IBBAADTI ;OAK/ELZ - PFSS INBOUND FILER ;15-MAR-2005
"RTN","IBBAADTI",2,0)
 ;;2.0;INTEGRATED BILLING;**286**;21-MAR-94
"RTN","IBBAADTI",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBBAADTI",4,0)
 ;
"RTN","IBBAADTI",5,0)
A04 ;receiver for returned A04 messages to create account
"RTN","IBBAADTI",6,0)
 N IBBHDR,IBBMSG,IBBDFN,IBBARFN,IBBEXVN,HLERR
"RTN","IBBAADTI",7,0)
 Q:'$$STARTMSG^HLPRS(.IBBMSG,HLMTIENS,.IBBHDR)
"RTN","IBBAADTI",8,0)
 I $G(IBBHDR("EVENT"))'="A04" Q
"RTN","IBBAADTI",9,0)
 S IBBDFN=+$$PID()
"RTN","IBBAADTI",10,0)
 I 'IBBDFN S HLERR="Patient data could not be matched to database." D NAK Q
"RTN","IBBAADTI",11,0)
 S IBBEXVN=+$$EXVN()
"RTN","IBBAADTI",12,0)
 I 'IBBEXVN S HLERR="External billing system account # is not defined." D NAK Q
"RTN","IBBAADTI",13,0)
 S IBBARFN=$$SET(IBBDFN,HLMTIENS)
"RTN","IBBAADTI",14,0)
 I 'IBBARFN S HLERR="External billing system account # could not be filed." D NAK Q
"RTN","IBBAADTI",15,0)
 I IBBARFN D ACK
"RTN","IBBAADTI",16,0)
 Q
"RTN","IBBAADTI",17,0)
 ;
"RTN","IBBAADTI",18,0)
A05 ;receiver for returned A05 messages to create account
"RTN","IBBAADTI",19,0)
 N IBBHDR,IBBMSG,IBBDFN,IBBARFN,IBBEXVN,HLERR
"RTN","IBBAADTI",20,0)
 Q:'$$STARTMSG^HLPRS(.IBBMSG,HLMTIENS,.IBBHDR)
"RTN","IBBAADTI",21,0)
 I $G(IBBHDR("EVENT"))'="A05" Q
"RTN","IBBAADTI",22,0)
 S IBBDFN=$$PID()
"RTN","IBBAADTI",23,0)
 I 'IBBDFN S HLERR="Patient data could not be matched to database." D NAK Q
"RTN","IBBAADTI",24,0)
 S IBBEXVN=+$$EXVN()
"RTN","IBBAADTI",25,0)
 I 'IBBEXVN S HLERR="External billing system account # is not defined." D NAK Q
"RTN","IBBAADTI",26,0)
 S IBBARFN=$$SET(IBBDFN,HLMTIENS)
"RTN","IBBAADTI",27,0)
 I 'IBBARFN S HLERR="External billing system account # could not be filed." D NAK Q
"RTN","IBBAADTI",28,0)
 I IBBARFN D ACK
"RTN","IBBAADTI",29,0)
 Q
"RTN","IBBAADTI",30,0)
 ;
"RTN","IBBAADTI",31,0)
SET(IBBDFN,HLMTIENS) ;set returned external account number in file #375
"RTN","IBBAADTI",32,0)
 N DIC,IEN1,IEN2,IENS,REC,PHYS,PHYSX,ALTNUM,ALTNUMX,PROC,PROCX,OUT,OK,X,XX
"RTN","IBBAADTI",33,0)
 N IBBEVENT,IBBEXVN,IBBWHEN,IBBWHERE,IBBARFN,IBBIEN,IBBMSG,IBBHDR,IBBSEG,IBBARRAY
"RTN","IBBAADTI",34,0)
 S IBBARFN=""
"RTN","IBBAADTI",35,0)
 Q:'$G(HLMTIENS) IBBARFN
"RTN","IBBAADTI",36,0)
 Q:'$G(IBBDFN) IBBARFN
"RTN","IBBAADTI",37,0)
 Q:'$$STARTMSG^HLPRS(.IBBMSG,HLMTIENS,.IBBHDR) IBBARFN
"RTN","IBBAADTI",38,0)
 ;parse critical data elements from HL7 msg
"RTN","IBBAADTI",39,0)
 S OUT=0
"RTN","IBBAADTI",40,0)
 F  Q:OUT  Q:'$$NEXTSEG^HLPRS(.IBBMSG,.IBBSEG)  D
"RTN","IBBAADTI",41,0)
 .I IBBSEG("SEGMENT TYPE")="EVN" D  Q
"RTN","IBBAADTI",42,0)
 ..S (XX,IBBEVENT)=$$GET^HLOPRS(.IBBSEG,1,1,)
"RTN","IBBAADTI",43,0)
 ..I ";A01;A04;A05;"'[(";"_XX_";") S OUT=1
"RTN","IBBAADTI",44,0)
 .I IBBSEG("SEGMENT TYPE")="PV1" D  Q
"RTN","IBBAADTI",45,0)
 ..S IBBWHERE=$$GET^HLOPRS(.IBBSEG,3,1)
"RTN","IBBAADTI",46,0)
 ..S PHYS=$E($$GET^HLOPRS(.IBBSEG,7,1),4,99)
"RTN","IBBAADTI",47,0)
 ..S IBBARFN=$$GET^HLOPRS(.IBBSEG,5,1)
"RTN","IBBAADTI",48,0)
 ..S IBBEXVN=$$GET^HLOPRS(.IBBSEG,19,1)
"RTN","IBBAADTI",49,0)
 ..S ALTNUM=$$GET^HLOPRS(.IBBSEG,50,1)
"RTN","IBBAADTI",50,0)
 ..S XX=$$GET^HLOPRS(.IBBSEG,44,1),IBBWHEN=$$FMDATE^HLFNC(XX)
"RTN","IBBAADTI",51,0)
 .I IBBSEG("SEGMENT TYPE")="PR1" D  Q
"RTN","IBBAADTI",52,0)
 ..S PROC=$$GET^HLOPRS(.IBBSEG,3,1)
"RTN","IBBAADTI",53,0)
 ;exit if not event type of interest
"RTN","IBBAADTI",54,0)
 Q:OUT IBBARFN
"RTN","IBBAADTI",55,0)
 ;exit if external visit already known for A01 event
"RTN","IBBAADTI",56,0)
 I IBBEVENT="A01",IBBWHERE'="FEE BASIS" S X=$$INTNUM(IBBEXVN) I X S IBBARFN=X Q IBBARFN
"RTN","IBBAADTI",57,0)
 ;resolve location
"RTN","IBBAADTI",58,0)
 I IBBWHERE'="FEE BASIS" D
"RTN","IBBAADTI",59,0)
 .K Y S DIC=44,DIC(0)="MXZ",X=IBBWHERE
"RTN","IBBAADTI",60,0)
 .D ^DIC
"RTN","IBBAADTI",61,0)
 .I $P($G(Y),U,2)=IBBWHERE S IBBWHERE=+Y
"RTN","IBBAADTI",62,0)
 I IBBWHERE="FEE BASIS" S IBBWHEN=$P(IBBWHEN,".",1)
"RTN","IBBAADTI",63,0)
 ;verify account record if IBBARFN is not null
"RTN","IBBAADTI",64,0)
 I IBBARFN D  I 'OK S IBBARFN=""
"RTN","IBBAADTI",65,0)
 .S OK=1,IBBIEN=0
"RTN","IBBAADTI",66,0)
 .S IENS=IBBARFN_"," D GETS^DIQ(375,IENS,".01;.03;1.03;1.44;16.01","I","IBBARRAY")
"RTN","IBBAADTI",67,0)
 .I IBBARFN'=$G(IBBARRAY(375,IENS,.01,"I")) S OK=0 Q
"RTN","IBBAADTI",68,0)
 .I IBBDFN'=$G(IBBARRAY(375,IENS,.03,"I")) S OK=0 Q
"RTN","IBBAADTI",69,0)
 .I IBBWHEN'=$G(IBBARRAY(375,IENS,1.44,"I")) S OK=0 Q
"RTN","IBBAADTI",70,0)
 .I IBBEVENT="A01",IBBWHERE'=$G(IBBARRAY(375,IENS,16.01,"I")) S OK=0 Q
"RTN","IBBAADTI",71,0)
 .I ((IBBEVENT="A04")!(IBBEVENT="A05"))&(IBBWHERE'=$G(IBBARRAY(375,IENS,1.03,"I"))) S OK=0 Q
"RTN","IBBAADTI",72,0)
 .S IBBIEN=IBBARFN
"RTN","IBBAADTI",73,0)
 ;find account record if IBBARFN is null; should be used (normally) only for inpatient A01
"RTN","IBBAADTI",74,0)
 I 'IBBARFN D
"RTN","IBBAADTI",75,0)
 .S IBBIEN=0
"RTN","IBBAADTI",76,0)
 .I IBBWHERE=+IBBWHERE D
"RTN","IBBAADTI",77,0)
 ..S IEN1=+$O(^IBBAA(375,"AC",IBBDFN,IBBWHEN,IBBWHERE,0))
"RTN","IBBAADTI",78,0)
 ..S IEN2=+$O(^IBBAA(375,"AC",IBBDFN,IBBWHEN,IBBWHERE,IEN1))
"RTN","IBBAADTI",79,0)
 .I IBBWHERE'=+IBBWHERE D
"RTN","IBBAADTI",80,0)
 ..S IEN1=+$O(^IBBAA(375,"AF",IBBDFN,IBBWHEN,IBBWHERE,0))
"RTN","IBBAADTI",81,0)
 ..S IEN2=+$O(^IBBAA(375,"AF",IBBDFN,IBBWHEN,IBBWHERE,IEN1))
"RTN","IBBAADTI",82,0)
 .;inpatient admission
"RTN","IBBAADTI",83,0)
 .I 'IEN1,IBBEVENT="A01",IBBWHERE'="FEE BASIS" S IBBIEN=$$INPT() Q
"RTN","IBBAADTI",84,0)
 .;unique index entry
"RTN","IBBAADTI",85,0)
 .I IEN1,'IEN2 S IBBIEN=IEN1
"RTN","IBBAADTI",86,0)
 .;multiple index entries
"RTN","IBBAADTI",87,0)
 .I 'IBBIEN,IEN2,IBBWHERE=+IBBWHERE D
"RTN","IBBAADTI",88,0)
 ..S IEN1=0 F  S IEN1=+$O(^IBBAA(375,"AC",IBBDFN,IBBWHEN,IBBWHERE,IEN1)) Q:'IEN1  D  Q:IBBIEN
"RTN","IBBAADTI",89,0)
 ...S REC=$G(^IBBAA(375,IEN1,"PV1")),ALTNUMX=+$P(REC,U,50)
"RTN","IBBAADTI",90,0)
 ...I $G(ALTNUM),ALTNUMX=ALTNUM S IBBIEN=IEN1 Q
"RTN","IBBAADTI",91,0)
 ...I $G(ALTNUM),ALTNUMX'=ALTNUM Q
"RTN","IBBAADTI",92,0)
 ...S PHYSX=$P(REC,U,7)
"RTN","IBBAADTI",93,0)
 ...I $G(PHYS),PHYSX=PHYS S IBBIEN=IEN1 Q
"RTN","IBBAADTI",94,0)
 ...I $G(PHYS),PHYSX'=PHYS Q
"RTN","IBBAADTI",95,0)
 ...I $G(PROC)'="" S PROC=$$CODEN^ICPTCOD(PROC),PROCX=$P($G(^IBBAA(375,IEN1,"PR1")),U,3)
"RTN","IBBAADTI",96,0)
 ...I +PROC,PROCX=PROC S IBBIEN=IEN1 Q
"RTN","IBBAADTI",97,0)
 ;store external visit #
"RTN","IBBAADTI",98,0)
 I $G(IBBIEN) D
"RTN","IBBAADTI",99,0)
 .S:('IBBARFN) IBBARFN=IBBIEN
"RTN","IBBAADTI",100,0)
 .I $P(^IBBAA(375,IBBIEN,0),U,2)="" D
"RTN","IBBAADTI",101,0)
 ..S $P(^IBBAA(375,IBBIEN,0),U,2)=IBBEXVN
"RTN","IBBAADTI",102,0)
 ..S $P(^IBBAA(375,IBBIEN,0),U,5)=$$NOW^XLFDT()
"RTN","IBBAADTI",103,0)
 ..D EVENT^IBBAACCT(IBBIEN,IBBEVENT,"I")
"RTN","IBBAADTI",104,0)
 Q IBBARFN
"RTN","IBBAADTI",105,0)
 ;
"RTN","IBBAADTI",106,0)
INPT() ;set new account record for inpatient admission
"RTN","IBBAADTI",107,0)
 N IBB,IBBARFN,IBBIEN,IBBIENS,IBBERR,FDA,X
"RTN","IBBAADTI",108,0)
 S IBBARFN=0
"RTN","IBBAADTI",109,0)
 L +^IBBAA(375,0):5
"RTN","IBBAADTI",110,0)
 Q:'$T 0
"RTN","IBBAADTI",111,0)
 S IBBIEN=$P(^IBBAA(375,0),U,3)+1
"RTN","IBBAADTI",112,0)
 S IBBIEN(1)=IBBIEN
"RTN","IBBAADTI",113,0)
 S IBBIENS="+1,"
"RTN","IBBAADTI",114,0)
 S IBBERR="IBB(""DIERR"")"
"RTN","IBBAADTI",115,0)
 S FDA(375,IBBIENS,.01)=IBBIEN
"RTN","IBBAADTI",116,0)
 S FDA(375,IBBIENS,.02)=IBBEXVN
"RTN","IBBAADTI",117,0)
 S FDA(375,IBBIENS,.03)=IBBDFN
"RTN","IBBAADTI",118,0)
 S FDA(375,IBBIENS,.04)="COTS_SYSTEM"
"RTN","IBBAADTI",119,0)
 S FDA(375,IBBIENS,.05)=$$NOW^XLFDT
"RTN","IBBAADTI",120,0)
 D UPDATE^DIE("","FDA","IBBIEN",IBBERR)
"RTN","IBBAADTI",121,0)
 L -^IBBAA(375,0)
"RTN","IBBAADTI",122,0)
 I '$D(IBB("DIERR")) D
"RTN","IBBAADTI",123,0)
 .S IBBARFN=IBBIEN
"RTN","IBBAADTI",124,0)
 .S X="",$P(X,U,2)="I",$P(X,U,3)=IBBWHERE,$P(X,U,44)=IBBWHEN
"RTN","IBBAADTI",125,0)
 .S ^IBBAA(375,IBBIEN,"PV1")=X
"RTN","IBBAADTI",126,0)
 .D EVENT^IBBAACCT(IBBIEN,IBBEVENT,"I")
"RTN","IBBAADTI",127,0)
 .S ^IBBAA(375,"AC",IBBDFN,IBBWHEN,IBBWHERE,IBBIEN)=""
"RTN","IBBAADTI",128,0)
 Q IBBARFN
"RTN","IBBAADTI",129,0)
 ;
"RTN","IBBAADTI",130,0)
INTNUM(IBBEXVN) ;return PFSS Account Reference using external visit number
"RTN","IBBAADTI",131,0)
 N IBBARFN,XX
"RTN","IBBAADTI",132,0)
 S IBBARFN=""
"RTN","IBBAADTI",133,0)
 Q:'$G(IBBEXVN) IBBARFN
"RTN","IBBAADTI",134,0)
 S XX=$O(^IBBAA(375,"C",IBBEXVN,0))
"RTN","IBBAADTI",135,0)
 I XX S IBBARFN=XX
"RTN","IBBAADTI",136,0)
 Q IBBARFN
"RTN","IBBAADTI",137,0)
 ;
"RTN","IBBAADTI",138,0)
PID() ;get DFN from HL7 message; compare to file #2 data
"RTN","IBBAADTI",139,0)
 N IBBARRY,OUT,REP,FILE,FIELD,IENS,XID,XTYP,XSITE,XSSN,XNAME,XX
"RTN","IBBAADTI",140,0)
 S OUT=0,XID=0,XSSN=0
"RTN","IBBAADTI",141,0)
 F  Q:OUT  Q:'$$NEXTSEG^HLPRS(.IBBMSG,.IBBSEG)  I IBBSEG("SEGMENT TYPE")="PID"  D
"RTN","IBBAADTI",142,0)
 .S XNAME=$$GET^HLOPRS(.IBBSEG,5,1,1)
"RTN","IBBAADTI",143,0)
 .F REP=1:1 Q:OUT  D
"RTN","IBBAADTI",144,0)
 ..S XTYP=$$GET^HLOPRS(.IBBSEG,3,5,1,REP)
"RTN","IBBAADTI",145,0)
 ..I XTYP="PI" D
"RTN","IBBAADTI",146,0)
 ...S XX=$$GET^HLOPRS(.IBBSEG,3,1,1,REP)
"RTN","IBBAADTI",147,0)
 ...S XSITE=+$E(XX,1,3),XID=+$E(XX,4,99)
"RTN","IBBAADTI",148,0)
 ..I XTYP="SS" S XSSN=$$GET^HLOPRS(.IBBSEG,3,1,1,REP)
"RTN","IBBAADTI",149,0)
 ..I XID&XSSN S OUT=1
"RTN","IBBAADTI",150,0)
 I XSITE=$P($$SITE^VASITE(),U,3) D
"RTN","IBBAADTI",151,0)
 .S FILE=2,IENS=XID_",",FIELD=".01;.09"
"RTN","IBBAADTI",152,0)
 .D GETS^DIQ(FILE,IENS,FIELD,"","IBBARRY")
"RTN","IBBAADTI",153,0)
 .I XSSN'=$G(IBBARRY(2,IENS,.09)) S XID=0
"RTN","IBBAADTI",154,0)
 .I XNAME'=$P($G(IBBARRY(2,IENS,.01)),",",1) S XID=0
"RTN","IBBAADTI",155,0)
 Q XID
"RTN","IBBAADTI",156,0)
 ;
"RTN","IBBAADTI",157,0)
EXVN() ;external account/visit number must be non-null
"RTN","IBBAADTI",158,0)
 N OUT,IBBEXVN
"RTN","IBBAADTI",159,0)
 S IBBEXVN="",OUT=0
"RTN","IBBAADTI",160,0)
 F  Q:OUT  Q:'$$NEXTSEG^HLPRS(.IBBMSG,.IBBSEG)  D
"RTN","IBBAADTI",161,0)
 .I IBBSEG("SEGMENT TYPE")="PV1" D  Q
"RTN","IBBAADTI",162,0)
 ..S IBBEXVN=$$GET^HLOPRS(.IBBSEG,19,1),OUT=1
"RTN","IBBAADTI",163,0)
 Q IBBEXVN
"RTN","IBBAADTI",164,0)
 ;
"RTN","IBBAADTI",165,0)
ACK ; prepare positive acknowledgement (AA) message
"RTN","IBBAADTI",166,0)
 N HLA,HLRESULT
"RTN","IBBAADTI",167,0)
 S XX=$$SETPURG^HLUTIL(0)
"RTN","IBBAADTI",168,0)
 S HLA("HLA",$J,1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")
"RTN","IBBAADTI",169,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLRESULT)
"RTN","IBBAADTI",170,0)
 Q
"RTN","IBBAADTI",171,0)
 ;
"RTN","IBBAADTI",172,0)
NAK ;prepare negative acknowledgement (AE) message
"RTN","IBBAADTI",173,0)
 N HLA,HLRESULT
"RTN","IBBAADTI",174,0)
 S XX=$$SETPURG^HLUTIL(1)
"RTN","IBBAADTI",175,0)
 S HLA("HLA",$J,1)="MSA"_HL("FS")_"AE"_HL("FS")_HL("MID")_HL("FS")_HLERR
"RTN","IBBAADTI",176,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLRESULT)
"RTN","IBBAADTI",177,0)
 Q
"RTN","IBBAADTI",178,0)
 ;
"RTN","IBBAADTI",179,0)
IBBACONV(IBBDFN,IBBTYPE,IBBWHEN,IBBWHERE,IBBEXVN) ;new account record for converted inpatient or outpatient
"RTN","IBBAADTI",180,0)
 ;called only from DG or SD routine during back-load of converted data
"RTN","IBBAADTI",181,0)
 ;input  IBBDFN   = pointer to file #2
"RTN","IBBAADTI",182,0)
 ;       IBBTYPE  = I(npatient) or O(utpatient)
"RTN","IBBAADTI",183,0)
 ;       IBBWHEN  = date/time of visit; internal FM format
"RTN","IBBAADTI",184,0)
 ;       IBBWHERE = location of visit; pointer to file #44
"RTN","IBBAADTI",185,0)
 ;       IBBEXVN  = external system visit #
"RTN","IBBAADTI",186,0)
 ;output IBBARFN  = ien in file #375; PFSS Account Reference
"RTN","IBBAADTI",187,0)
 ;       
"RTN","IBBAADTI",188,0)
 N IBB,IBBARFN,IBBIEN,IBBIENS,IBBERR,FDA,X
"RTN","IBBAADTI",189,0)
 S IBBARFN=0
"RTN","IBBAADTI",190,0)
 L +^IBBAA(375,0):5
"RTN","IBBAADTI",191,0)
 Q:'$T 0
"RTN","IBBAADTI",192,0)
 S IBBIEN=$P(^IBBAA(375,0),U,3)+1
"RTN","IBBAADTI",193,0)
 S IBBIEN(1)=IBBIEN
"RTN","IBBAADTI",194,0)
 S IBBIENS="+1,"
"RTN","IBBAADTI",195,0)
 S IBBERR="IBB(""DIERR"")"
"RTN","IBBAADTI",196,0)
 S FDA(375,IBBIENS,.01)=IBBIEN
"RTN","IBBAADTI",197,0)
 S FDA(375,IBBIENS,.02)=$G(IBBEXVN)
"RTN","IBBAADTI",198,0)
 S FDA(375,IBBIENS,.03)=$G(IBBDFN)
"RTN","IBBAADTI",199,0)
 S FDA(375,IBBIENS,.04)="CONVERSION"
"RTN","IBBAADTI",200,0)
 S FDA(375,IBBIENS,.05)=$$NOW^XLFDT
"RTN","IBBAADTI",201,0)
 D UPDATE^DIE("","FDA","IBBIEN",IBBERR)
"RTN","IBBAADTI",202,0)
 L -^IBBAA(375,0)
"RTN","IBBAADTI",203,0)
 I '$D(IBB("DIERR")) D
"RTN","IBBAADTI",204,0)
 .S IBBARFN=IBBIEN
"RTN","IBBAADTI",205,0)
 .S X="",$P(X,U,2)=$G(IBBTYPE),$P(X,U,3)=$G(IBBWHERE),$P(X,U,44)=$G(IBBWHEN)
"RTN","IBBAADTI",206,0)
 .S ^IBBAA(375,IBBIEN,"PV1")=X
"RTN","IBBAADTI",207,0)
 .I IBBTYPE="O" S $P(^IBBAA(375,IBBIEN,"PV2"),U,8)=$G(IBBWHEN)
"RTN","IBBAADTI",208,0)
 .I $G(IBBDFN),$G(IBBWHEN),$G(IBBWHERE) S ^IBBAA(375,"AC",IBBDFN,IBBWHEN,IBBWHERE,IBBIEN)=""
"RTN","IBBAADTI",209,0)
 Q IBBARFN
"RTN","IBBACDM")
0^3^B1943255
"RTN","IBBACDM",1,0)
IBBACDM ;OAK/ELZ - PFSS SERVICE MASTER API ;15-MAR-2005
"RTN","IBBACDM",2,0)
 ;;2.0;INTEGRATED BILLING;**286**;21-MAR-94
"RTN","IBBACDM",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBBACDM",4,0)
 ;
"RTN","IBBACDM",5,0)
GETCODE(IBBCPT,IBBCPTDT) ;return service code based on cpt/hcpcs and date of service
"RTN","IBBACDM",6,0)
 ;
"RTN","IBBACDM",7,0)
 ;input IBBCPT = pointer to file #81
"RTN","IBBACDM",8,0)
 ;      IBBCPTDT = service date
"RTN","IBBACDM",9,0)
 ;output IBBBSRVC = ien in file #374
"RTN","IBBACDM",10,0)
 ;       RETURN = service_code^activation_date^inactivation_date
"RTN","IBBACDM",11,0)
 N IBBSRVC,ACTDT,INACTDT,IEN,SUBIEN,NEXTSUB,RETURN,X,XX,XD
"RTN","IBBACDM",12,0)
 S IBBSRVC=999999
"RTN","IBBACDM",13,0)
 Q:'$G(IBBCPT) IBBSRVC_"^^"
"RTN","IBBACDM",14,0)
 Q:'$G(IBBCPTDT) IBBSRVC_"^^"
"RTN","IBBACDM",15,0)
 S ACTDT="",INACTDT="",IEN="",SUBIEN=""
"RTN","IBBACDM",16,0)
 S XD=9999999 F  S XD=$O(^IBBAS(374,"AA",IBBCPT,XD),-1) Q:'XD  D  Q:$G(ACTDT)
"RTN","IBBACDM",17,0)
 .Q:(XD>IBBCPTDT)
"RTN","IBBACDM",18,0)
 .S ACTDT=XD
"RTN","IBBACDM",19,0)
 .S IEN=$O(^IBBAS(374,"AA",IBBCPT,ACTDT,0)),SUBIEN=$O(^IBBAS(374,"AA",IBBCPT,ACTDT,IEN,0))
"RTN","IBBACDM",20,0)
 .S NEXTSUB=$O(^IBBAS(374,IEN,1,SUBIEN)) I 'NEXTSUB Q
"RTN","IBBACDM",21,0)
 .S INACTDT=$P(^IBBAS(374,IEN,1,NEXTSUB,0),"^",2)
"RTN","IBBACDM",22,0)
 .I INACTDT'>IBBCPTDT S IEN=""
"RTN","IBBACDM",23,0)
 I IEN S IBBSRVC=IEN,RETURN=IBBSRVC_"^"_ACTDT_"^"_INACTDT
"RTN","IBBACDM",24,0)
 E  S RETURN=IBBSRVC_"^^"
"RTN","IBBACDM",25,0)
 Q RETURN
"RTN","IBBACDM",26,0)
 ;
"RTN","IBBACHRG")
0^4^B31941477
"RTN","IBBACHRG",1,0)
IBBACHRG ;OAK/ELZ - PFSS CHARGE API ;15-MAR-2005
"RTN","IBBACHRG",2,0)
 ;;2.0;INTEGRATED BILLING;**286**;21-MAR-94
"RTN","IBBACHRG",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBBACHRG",4,0)
 ;
"RTN","IBBACHRG",5,0)
CHARGE(IBBDFN,IBBARFN,IBBCTYPE,IBBUCID,IBBFT1,IBBPR1,IBBDG1,IBBZCL,IBBRXE,IBBORIEN,IBBPROS) ;
"RTN","IBBACHRG",6,0)
 ;add transaction to charge cache
"RTN","IBBACHRG",7,0)
 N IBB,IBBIEN,IBBIENS,IBBERR,FDA,J,J1,X,XX
"RTN","IBBACHRG",8,0)
 N IBBCPTC,IBBCPTDT,IBBCDM,IBBSECVN,IBBTEST
"RTN","IBBACHRG",9,0)
 ;required parameters
"RTN","IBBACHRG",10,0)
 I ('$G(IBBDFN)!'$G(IBBARFN)!'$G(IBBUCID)!($G(IBBCTYPE)="")) D ERRMSG("MISSING DATA") Q 0
"RTN","IBBACHRG",11,0)
 ;add charge record
"RTN","IBBACHRG",12,0)
 L +^IBBAD(373,0):5
"RTN","IBBACHRG",13,0)
 I '$T D ERRMSG("LOCK FAILURE") Q 0
"RTN","IBBACHRG",14,0)
 S IBBIEN=$P(^IBBAD(373,0),U,3)+1,$P(^IBBAD(373,0),U,3)=IBBIEN
"RTN","IBBACHRG",15,0)
 L -^IBBAD(373,0)
"RTN","IBBACHRG",16,0)
 S ^IBBAD(373,IBBIEN,0)=IBBIEN
"RTN","IBBACHRG",17,0)
 S IBBIENS=IBBIEN_","
"RTN","IBBACHRG",18,0)
 S IBBERR="IBB(""DIERR"")"
"RTN","IBBACHRG",19,0)
 S FDA(373,IBBIENS,.02)=IBBARFN
"RTN","IBBACHRG",20,0)
 S FDA(373,IBBIENS,.03)=IBBDFN
"RTN","IBBACHRG",21,0)
 S FDA(373,IBBIENS,.04)=IBBUCID
"RTN","IBBACHRG",22,0)
 S FDA(373,IBBIENS,.05)=IBBCTYPE
"RTN","IBBACHRG",23,0)
 S FDA(373,IBBIENS,.1)=$$NOW^XLFDT()
"RTN","IBBACHRG",24,0)
 D FILE^DIE("","FDA",IBBERR)
"RTN","IBBACHRG",25,0)
 ;exit on error
"RTN","IBBACHRG",26,0)
 I $D(IBB("DIERR")) D ERRMSG("FILEMAN ERROR") Q 0
"RTN","IBBACHRG",27,0)
 ;get service charge code
"RTN","IBBACHRG",28,0)
 S IBBCDM=$G(IBBFT1(7))
"RTN","IBBACHRG",29,0)
 I $G(IBBFT1(13))'=160 D
"RTN","IBBACHRG",30,0)
 .S IBBCPTC=+$G(IBBPR1(3))
"RTN","IBBACHRG",31,0)
 .S IBBCPTDT=+$G(IBBPR1(5)) I 'IBBCPTDT S IBBCPTDT=+$G(IBBFT1(4))
"RTN","IBBACHRG",32,0)
 .S IBBCDM=$P($$GETCODE^IBBACDM(IBBCPTC,IBBCPTDT),U,1)
"RTN","IBBACHRG",33,0)
 ;financial transaction
"RTN","IBBACHRG",34,0)
 I $D(IBBFT1)>1 D
"RTN","IBBACHRG",35,0)
 .S J=0,X="" F  S J=$O(IBBFT1(J)) Q:'J  S $P(X,U,J)=IBBFT1(J)
"RTN","IBBACHRG",36,0)
 .S $P(X,U,2)="",$P(X,U,6)=IBBCTYPE
"RTN","IBBACHRG",37,0)
 .S XX=+$G(IBBFT1(13)) S XX=$S('XX:999,$L(XX)'=3:999,1:XX)
"RTN","IBBACHRG",38,0)
 .S $P(X,U,7)=XX_IBBCDM
"RTN","IBBACHRG",39,0)
 .S ^IBBAD(373,IBBIEN,"FT1")=X
"RTN","IBBACHRG",40,0)
 ;update PV1.50 for radiology in file #375
"RTN","IBBACHRG",41,0)
 I (",105,109,115,150,151,152,421,703,")[(","_IBBFT1(13)_",") D
"RTN","IBBACHRG",42,0)
 .S XX="",IBBSECVN=""
"RTN","IBBACHRG",43,0)
 .I $G(IBBORIEN) S X=$T(ORACTREF^ORWPFSS) I $E(X,9)="(" D
"RTN","IBBACHRG",44,0)
 ..D ORACTREF^ORWPFSS(.XX,IBBORIEN)
"RTN","IBBACHRG",45,0)
 ..S IBBSECVN=$$EXTNUM^IBBAACCT(IBBDFN,XX)
"RTN","IBBACHRG",46,0)
 ..I IBBSECVN'="" S $P(^IBBAA(375,IBBARFN,"PV1"),U,50)=IBBSECVN_";;;;RAD"
"RTN","IBBACHRG",47,0)
 ;procedure
"RTN","IBBACHRG",48,0)
 I $D(IBBPR1)>1 D
"RTN","IBBACHRG",49,0)
 .I '$G(IBBPR1(5)) S IBBPR1(5)=+$G(IBBFT1(4))
"RTN","IBBACHRG",50,0)
 .S X="" F J=3,5,6,16 S $P(X,U,J)=$G(IBBPR1(J))
"RTN","IBBACHRG",51,0)
 .;surgery-only
"RTN","IBBACHRG",52,0)
 .I $D(IBBPR1(11))>1 D
"RTN","IBBACHRG",53,0)
 ..S $P(X,U,11)=$G(IBBPR1(11,1)),$P(X,U,12)=$G(IBBPR1(11,2))
"RTN","IBBACHRG",54,0)
 .S ^IBBAD(373,IBBIEN,"PR1")=X
"RTN","IBBACHRG",55,0)
 .I $G(IBBPR1(4))'="" S ^IBBAD(373,IBBIEN,11)=IBBPR1(4)
"RTN","IBBACHRG",56,0)
 ;diagnosis
"RTN","IBBACHRG",57,0)
 I $D(IBBDG1)>1 D
"RTN","IBBACHRG",58,0)
 .I $G(IBBDG1(1,3))=+$G(IBBDG1(1,3)) D DX^IBBACHRG(.IBBDG1,IBBIEN)
"RTN","IBBACHRG",59,0)
 ;classification
"RTN","IBBACHRG",60,0)
 I $D(IBBZCL)>1 D
"RTN","IBBACHRG",61,0)
 .S (J,J1)=0 F  S J=$O(IBBZCL(J)) Q:'J  S J1=J1+1,X=J1_U_$G(IBBZCL(J,2))_U_$G(IBBZCL(J,3)),^IBBAD(373,IBBIEN,"ZCL",J1,0)=X
"RTN","IBBACHRG",62,0)
 .S ^IBBAD(373,IBBIEN,"ZCL",0)="^373.05A^"_J1_U_J1
"RTN","IBBACHRG",63,0)
 ;pharmacy-only
"RTN","IBBACHRG",64,0)
 I $D(IBBRXE)>1 D
"RTN","IBBACHRG",65,0)
 .S J=0,X="" F  S J=$O(IBBRXE(J)) Q:'J  S $P(X,U,J)=IBBRXE(J)
"RTN","IBBACHRG",66,0)
 .S XX=$P(^IBBAA(375,IBBARFN,"PV1"),U,50) I $P(XX,";",5)="OPP" S XX=+XX,$P(X,U,15)=XX
"RTN","IBBACHRG",67,0)
 .S ^IBBAD(373,IBBIEN,"RXE")=X
"RTN","IBBACHRG",68,0)
 ;prosthetics-only
"RTN","IBBACHRG",69,0)
 I $D(IBBPROS)>1 D
"RTN","IBBACHRG",70,0)
 .S X=$G(IBBPROS(1))_U_$G(IBBPROS(2))
"RTN","IBBACHRG",71,0)
 .I X'=U S ^IBBAD(373,IBBIEN,23)=X
"RTN","IBBACHRG",72,0)
 ;add department, service code, order ien, clinical event id to 0-node
"RTN","IBBACHRG",73,0)
 S X=^IBBAD(373,IBBIEN,0)
"RTN","IBBACHRG",74,0)
 S $P(X,U,6)=$S($G(IBBFT1(13)):IBBFT1(13),1:999),$P(X,U,7)=$G(IBBCDM),$P(X,U,8)=$G(IBBORIEN),$P(X,U,9)=$G(IBBFT1(2))
"RTN","IBBACHRG",75,0)
 S ^IBBAD(373,IBBIEN,0)=X
"RTN","IBBACHRG",76,0)
 ;set "AOX" xref
"RTN","IBBACHRG",77,0)
 S IBBTEST="" D SAOX^IBBAADD(IBBIEN,IBBDFN,.IBBTEST)
"RTN","IBBACHRG",78,0)
 I IBBTEST S $P(^IBBAD(373,IBBIEN,0),U,20)=1
"RTN","IBBACHRG",79,0)
 ;
"RTN","IBBACHRG",80,0)
 Q 1
"RTN","IBBACHRG",81,0)
 ;
"RTN","IBBACHRG",82,0)
DX(DG1,IEN) ;file diagnosis on subfile #373.04
"RTN","IBBACHRG",83,0)
 N J,IBB,IBBIEN,IBBIENS,IBBERR,FDA
"RTN","IBBACHRG",84,0)
 S J=0 F  S J=$O(DG1(J)) Q:'J  Q:(DG1(J,3)'=+DG1(J,3))  D
"RTN","IBBACHRG",85,0)
 .S IBBIEN(1)=J
"RTN","IBBACHRG",86,0)
 .S IBBIENS="+1,"_IEN_","
"RTN","IBBACHRG",87,0)
 .S IBBERR="IBB(""DIERR"")"
"RTN","IBBACHRG",88,0)
 .S FDA(373.04,IBBIENS,.01)=J
"RTN","IBBACHRG",89,0)
 .S FDA(373.04,IBBIENS,.03)=DG1(J,3)
"RTN","IBBACHRG",90,0)
 .S FDA(373.04,IBBIENS,.06)=$G(DG1(J,6))
"RTN","IBBACHRG",91,0)
 .D UPDATE^DIE("","FDA","IBBIEN",IBBERR)
"RTN","IBBACHRG",92,0)
 Q
"RTN","IBBACHRG",93,0)
 ;
"RTN","IBBACHRG",94,0)
GETCHGID() ;
"RTN","IBBACHRG",95,0)
 ;get next unique charge identifier
"RTN","IBBACHRG",96,0)
 N X
"RTN","IBBACHRG",97,0)
 L +^IBBAS(372,1,2):5
"RTN","IBBACHRG",98,0)
 Q:'$T 0
"RTN","IBBACHRG",99,0)
 S X=1+$G(^IBBAS(372,1,2))
"RTN","IBBACHRG",100,0)
 I X>99999999 S X=1
"RTN","IBBACHRG",101,0)
 S ^IBBAS(372,1,2)=X
"RTN","IBBACHRG",102,0)
 L -^IBBAS(372,1,2)
"RTN","IBBACHRG",103,0)
 Q X
"RTN","IBBACHRG",104,0)
 ;
"RTN","IBBACHRG",105,0)
ERRMSG(MSG) ;generate error msg if charge failure
"RTN","IBBACHRG",106,0)
 N LINE,J,X
"RTN","IBBACHRG",107,0)
 S LINE=0,SETLN="S LINE=LINE+1,^TMP(""PFSS CHG ERROR"",$J,LINE,0)=X"
"RTN","IBBACHRG",108,0)
 I MSG="MISSING DATA" D
"RTN","IBBACHRG",109,0)
 .I '$G(IBBDFN) S MSG=MSG_": DFN" Q
"RTN","IBBACHRG",110,0)
 .I '$G(IBBARFN) S MSG=MSG_": PFSS Account Reference" Q
"RTN","IBBACHRG",111,0)
 .I '$G(IBBUCID) S MSG=MSG_": Unique Charge ID" Q
"RTN","IBBACHRG",112,0)
 .I $G(IBBCTYPE)="" S MSG=MSG_": Charge Type" Q
"RTN","IBBACHRG",113,0)
 I MSG="FILEMAN ERROR" D
"RTN","IBBACHRG",114,0)
 .I $D(IBB("DIERR")) S MSG="FM ERROR: "_$G(IBB("DIERR","DIERR",1,"TEXT",1))
"RTN","IBBACHRG",115,0)
 I MSG="LOCK FAILURE" S MSG="Lock request failure on ^IBBAD(373,0)"
"RTN","IBBACHRG",116,0)
 S X=MSG X SETLN
"RTN","IBBACHRG",117,0)
 S X=" " X SETLN
"RTN","IBBACHRG",118,0)
 S X="Input Parameters" X SETLN
"RTN","IBBACHRG",119,0)
 S X="----------------" X SETLN
"RTN","IBBACHRG",120,0)
 S X="IBBDFN="_$G(IBBDFN) X SETLN
"RTN","IBBACHRG",121,0)
 S X="IBBARFN="_$G(IBBARFN) X SETLN
"RTN","IBBACHRG",122,0)
 S X="IBBCTYPE="_$G(IBBCTYPE) X SETLN
"RTN","IBBACHRG",123,0)
 S X="IBBUCID="_$G(IBBUCID) X SETLN
"RTN","IBBACHRG",124,0)
 I $D(IBBFT1)>1 D
"RTN","IBBACHRG",125,0)
 .S J=0 F  S J=$O(IBBFT1(J)) Q:'J  S X="IBBFT1("_J_")="_IBBFT1(J) X SETLN
"RTN","IBBACHRG",126,0)
 I $D(IBBPR1)>1 D
"RTN","IBBACHRG",127,0)
 .S J=0 F  S J=$O(IBBPR1(J)) Q:'J  I J'=11 S X="IBBPR1("_J_")="_IBBPR1(J) X SETLN
"RTN","IBBACHRG",128,0)
 .I $G(IBBPR1(11,1)) S X="IBBPR1(11,1)="_IBBPR1(11,1) X SETLN
"RTN","IBBACHRG",129,0)
 .I $G(IBBPR1(11,2)) S X="IBBPR1(11,2)="_IBBPR1(11,2) X SETLN
"RTN","IBBACHRG",130,0)
 I $D(IBBDG1)>1 D
"RTN","IBBACHRG",131,0)
 .S J=0 F  S J=$O(IBBDG1(J)) Q:'J  S J1=0 F  S J1=$O(IBBDG1(J,J1)) Q:'J1  S X="IBBDG1("_J_","_J1_")="_IBBDG1(J,J1) X SETLN
"RTN","IBBACHRG",132,0)
 I $D(IBBZCL)>1 D
"RTN","IBBACHRG",133,0)
 .S J=0 F  S J=$O(IBBZCL(J)) Q:'J  S J1=0 F  S J1=$O(IBBZCL(J,J1)) Q:'J1  S X="IBBZCL("_J_","_J1_")="_IBBZCL(J,J1) X SETLN
"RTN","IBBACHRG",134,0)
 I $D(IBBRXE)>1 D
"RTN","IBBACHRG",135,0)
 .S J=0 F  S J=$O(IBBRXE(J)) Q:'J  S X="IBBRXE("_J_")="_IBBRXE(J) X SETLN
"RTN","IBBACHRG",136,0)
 I $G(IBBORIEN) S X="IBBORIEN="_IBBORIEN X SETLN
"RTN","IBBACHRG",137,0)
 I $D(IBBPROS)>1 D
"RTN","IBBACHRG",138,0)
 .S J=0 F  S J=$O(IBBPROS(J)) Q:'J  S X="IBBPROS("_J_")="_IBBPROS(J) X SETLN
"RTN","IBBACHRG",139,0)
 D MAIL
"RTN","IBBACHRG",140,0)
 Q
"RTN","IBBACHRG",141,0)
 ;
"RTN","IBBACHRG",142,0)
MAIL ;send error message to mail group
"RTN","IBBACHRG",143,0)
 N MMGROUP,IENS,XMY,XMSUB,XMDUZ,XMTEXT,XMZ
"RTN","IBBACHRG",144,0)
 S XMSUB="IBB CHARGE FAILURE at "_$$NOW^XLFDT(),XMDUZ=.5
"RTN","IBBACHRG",145,0)
 S MMGROUP=$P($G(^IBBAS(372,1,0)),U,6)
"RTN","IBBACHRG",146,0)
 I MMGROUP D
"RTN","IBBACHRG",147,0)
 .S IENS=MMGROUP_","
"RTN","IBBACHRG",148,0)
 .S MMGROUP=$$GET1^DIQ(3.8,IENS,.01)
"RTN","IBBACHRG",149,0)
 .S XMY("G."_MMGROUP_"@"_^XMB("NETNAME"))=""
"RTN","IBBACHRG",150,0)
 S XMTEXT="^TMP(""PFSS CHG ERROR"",$J,"
"RTN","IBBACHRG",151,0)
 D ^XMD
"RTN","IBBACHRG",152,0)
 K ^TMP("PFSS CHG ERROR",$J)
"RTN","IBBACHRG",153,0)
 Q
"RTN","IBBADFTO")
0^5^B930780
"RTN","IBBADFTO",1,0)
IBBADFTO ;OAK/ELZ - PFSS DFT BATCH MESSAGING ;15-MAR-2005
"RTN","IBBADFTO",2,0)
 ;;2.0;INTEGRATED BILLING;**286**;21-MAR-94
"RTN","IBBADFTO",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBBADFTO",4,0)
 ;
"RTN","IBBADFTO",5,0)
EN ;entry point from menu option IBBA BATCH DFT
"RTN","IBBADFTO",6,0)
 N IBBMMAX,X
"RTN","IBBADFTO",7,0)
 S X=$T(SWSTAT^IBBASWCH)
"RTN","IBBADFTO",8,0)
 Q:(X="")
"RTN","IBBADFTO",9,0)
 Q:'(+$$SWSTAT^IBBASWCH())
"RTN","IBBADFTO",10,0)
 Q:'$D(^IBBAS(372,1,0))
"RTN","IBBADFTO",11,0)
 Q:+$P(^IBBAS(372,1,0),U,10)
"RTN","IBBADFTO",12,0)
 ;set batch running flag
"RTN","IBBADFTO",13,0)
 S $P(^IBBAS(372,1,0),U,10)=1,$P(^(0),U,11)=$$NOW^XLFDT()
"RTN","IBBADFTO",14,0)
 S IBBMMAX=+$P(^IBBAS(372,1,0),U,3) S:'IBBMMAX IBBMMAX=999
"RTN","IBBADFTO",15,0)
 ;call batch builder
"RTN","IBBADFTO",16,0)
 S X=$T(BATCH^IBBVP03) I X'="" D BATCH^IBBVP03(IBBMMAX)
"RTN","IBBADFTO",17,0)
 ;clear batch running flag
"RTN","IBBADFTO",18,0)
 S $P(^IBBAS(372,1,0),U,10)=0,$P(^(0),U,11)=""
"RTN","IBBADFTO",19,0)
 Q
"RTN","IBBAPI")
0^6^B3356759
"RTN","IBBAPI",1,0)
IBBAPI ;OAK/ELZ - APIS FOR OTHER PACKAGES FOR PFSS ;6-MAY-2003
"RTN","IBBAPI",2,0)
 ;;2.0;INTEGRATED BILLING;**256,228,267,260,286**;21-MAR-94
"RTN","IBBAPI",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBBAPI",4,0)
 ;
"RTN","IBBAPI",5,0)
 ; -- See IBBDOC for API details
"RTN","IBBAPI",6,0)
 ;
"RTN","IBBAPI",7,0)
INSUR(DFN,IBDT,IBSTAT,IBR,IBFLDS) ; Return Patient Insurance Information
"RTN","IBBAPI",8,0)
 ;
"RTN","IBBAPI",9,0)
 Q $$INSUR^IBBFAPI($G(DFN),$G(IBDT),$G(IBSTAT),.IBR,$G(IBFLDS))
"RTN","IBBAPI",10,0)
 ;
"RTN","IBBAPI",11,0)
 ;
"RTN","IBBAPI",12,0)
CIDC(DFN) ; Return if CIDC questions should be asked for DFN
"RTN","IBBAPI",13,0)
 ;
"RTN","IBBAPI",14,0)
 Q $$CIDC^IBBASCI($G(DFN))
"RTN","IBBAPI",15,0)
 ;
"RTN","IBBAPI",16,0)
SWSTAT() ;Return the PFSS Master switch status
"RTN","IBBAPI",17,0)
 ;
"RTN","IBBAPI",18,0)
 Q $$SWSTAT^IBBASWCH()
"RTN","IBBAPI",19,0)
 ;
"RTN","IBBAPI",20,0)
GETACCT(IBBDFN,IBBARFN,IBBEVENT,IBBAPLR,IBBPV1,IBBPV2,IBBPR1,IBBDG1,IBBZCL,IBBDIV,IBBRAIEN,IBBSURG) ;
"RTN","IBBAPI",21,0)
 ;Send visit data to external medical billing system
"RTN","IBBAPI",22,0)
 ;
"RTN","IBBAPI",23,0)
 Q $$GET^IBBAACCT(IBBDFN,IBBARFN,IBBEVENT,$G(IBBAPLR),.IBBPV1,.IBBPV2,.IBBPR1,.IBBDG1,.IBBZCL,$G(IBBDIV),$G(IBBRAIEN),.IBBSURG)
"RTN","IBBAPI",24,0)
 ;
"RTN","IBBAPI",25,0)
GETCHGID() ;Obtain unique charge id for service being charged
"RTN","IBBAPI",26,0)
 ;
"RTN","IBBAPI",27,0)
 Q $$GETCHGID^IBBACHRG()
"RTN","IBBAPI",28,0)
 ;
"RTN","IBBAPI",29,0)
CHARGE(IBBDFN,IBBARFN,IBBCTYPE,IBBUCID,IBBFT1,IBBPR1,IBBDG1,IBBZCL,IBBRXE,IBBORIEN,IBBPROS) ;
"RTN","IBBAPI",30,0)
 ;Send charge data to external medical billing system
"RTN","IBBAPI",31,0)
 ;
"RTN","IBBAPI",32,0)
 Q $$CHARGE^IBBACHRG(IBBDFN,IBBARFN,IBBCTYPE,IBBUCID,.IBBFT1,.IBBPR1,.IBBDG1,.IBBZCL,.IBBRXE,$G(IBBORIEN),.IBBPROS)
"RTN","IBBAPI",33,0)
 ;
"RTN","IBBAPI",34,0)
SETACCT(IBBDFN,HLMTIENS) ;Store external medical billing system's visit# in file #375 record
"RTN","IBBAPI",35,0)
 ;
"RTN","IBBAPI",36,0)
 Q $$SET^IBBAADTI(IBBDFN,HLMTIENS)
"RTN","IBBAPI",37,0)
 ;
"RTN","IBBAPI",38,0)
EXTNUM(IBBDFN,IBBARFN) ;Get external medical billing system's visit#
"RTN","IBBAPI",39,0)
 ;
"RTN","IBBAPI",40,0)
 Q $$EXTNUM^IBBAACCT(IBBDFN,IBBARFN)
"RTN","IBBAPI",41,0)
 ;
"RTN","IBBDOC")
0^7^B657364
"RTN","IBBDOC",1,0)
IBBDOC ;OAK/ELZ - APIS FOR OTHER PACKAGES FOR PFSS - DOCUMENT ;5-AUG-2004
"RTN","IBBDOC",2,0)
 ;;2.0;INTEGRATED BILLING;**267,260,286**;21-MAR-94
"RTN","IBBDOC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBBDOC",4,0)
 ;
"RTN","IBBDOC",5,0)
 ; Documents the calls to the routine IBBAPI.
"RTN","IBBDOC",6,0)
 ;
"RTN","IBBDOC",7,0)
INSUR ;(DFN,IBDT,IBSTAT,IBR,IBFLDS)
"RTN","IBBDOC",8,0)
 ; Function to return patient insurance information
"RTN","IBBDOC",9,0)
 ; --Input:
"RTN","IBBDOC",10,0)
 ;   DFN    = patient
"RTN","IBBDOC",11,0)
 ;   IBDT   = date insured (optional - default is today's date)
"RTN","IBBDOC",12,0)
 ;   IBSTAT = Insurance Status filter (combinable based on groups below)
"RTN","IBBDOC",13,0)
 ;      Group 1
"RTN","IBBDOC",14,0)
 ;          A = Inactive included (Default is active only)
"RTN","IBBDOC",15,0)
 ;      Group 2
"RTN","IBBDOC",16,0)
 ;          R = Not reimbursable included (Default is reimbursable only)
"RTN","IBBDOC",17,0)
 ;          B = Indemnity included (Default is not included)
"RTN","IBBDOC",18,0)
 ;      Group 3
"RTN","IBBDOC",19,0)
 ;          P = Prescription coverage required (Default is all coverages)
"RTN","IBBDOC",20,0)
 ;          O = Outpatient coverage required (Default is all coverages)
"RTN","IBBDOC",21,0)
 ;          I = Inpatient coverage only (Default is all coverages)
"RTN","IBBDOC",22,0)
 ;
"RTN","IBBDOC",23,0)
 ;   IBR    = Array to return insurance information - passed by reference
"RTN","IBBDOC",24,0)
 ;   IBFLDS = Lists of fields to return (1-19) in a comma separated list
"RTN","IBBDOC",25,0)
 ;
"RTN","IBBDOC",26,0)
 ; --Output:
"RTN","IBBDOC",27,0)
 ;   -1     = error occurred (error message passed back in
"RTN","IBBDOC",28,0)
 ;            IBR("IBBAPI","INSUR","ERROR",x) where x is error number
"RTN","IBBDOC",29,0)
 ;            between 101 & 111
"RTN","IBBDOC",30,0)
 ;    0     = No insurance found based on parameters
"RTN","IBBDOC",31,0)
 ;    1     = Insurance found
"RTN","IBBDOC",32,0)
 ;
"RTN","IBBDOC",33,0)
 ;
"RTN","IBBDOC",34,0)
CIDC ; (DFN)
"RTN","IBBDOC",35,0)
 ; Input:    DFN for the patient in question.
"RTN","IBBDOC",36,0)
 ; Output:   1 = Ask CIDC questions for the specified patient
"RTN","IBBDOC",37,0)
 ;           0 = Don't ask CIDC questions for the specified patient
"RTN","IBBDOC",38,0)
 ;
"RTN","IBBDOC",39,0)
 ; The API will evaluate both a CIDC switch and the patient's insurance
"RTN","IBBDOC",40,0)
 ; to determine if the CIDC questions should be asked.
"RTN","IBBDOC",41,0)
 ;
"RTN","IBBDOC",42,0)
 ; The switch will have three internal values:
"RTN","IBBDOC",43,0)
 ;    0 = Don't ask any patients
"RTN","IBBDOC",44,0)
 ;    1 = Ask for patients only with active billable insurance
"RTN","IBBDOC",45,0)
 ;    2 = Ask for all patients
"RTN","IBBDOC",46,0)
 ;
"RTN","IBBDOC",47,0)
 ;
"RTN","IBBDOC",48,0)
SWSTAT ; ()
"RTN","IBBDOC",49,0)
 ; Returns the current status of the PFSS On/Off Switch
"RTN","IBBDOC",50,0)
 ;
"RTN","IBBDOC",51,0)
 ; Output:   <switch_status>^<status_date/time>
"RTN","IBBDOC",52,0)
 ; 
"RTN","IBBDOC",53,0)
 ; <switch_status> will be one of the following:
"RTN","IBBDOC",54,0)
 ;    0 = OFF
"RTN","IBBDOC",55,0)
 ;    1 = ON
"RTN","IBBDOC",56,0)
 ;
"RTN","IBBDOC",57,0)
GETACCT ; (IBBDFN,IBBARFN,IBBEVENT,IBBAPLR,IBBPV1,IBBPV2,IBBPR1,IBBDG1,IBBZCL,IBBDIV,IBBRAIEN,IBBSURG)
"RTN","IBBDOC",58,0)
 ; Pass data to IBB for account/visit (ADT) messaging.
"RTN","IBBDOC",59,0)
 ;
"RTN","IBBDOC",60,0)
 ; Input:
"RTN","IBBDOC",61,0)
 ; IBBDFN   = Patient; IEN to file #2 [required]
"RTN","IBBDOC",62,0)
 ; IBBARFN  = Account Reference; 
"RTN","IBBDOC",63,0)
 ;            IEN to file #375 or null [required]
"RTN","IBBDOC",64,0)
 ; IBBEVENT = HL7 Event Code; e.g., "A04" [required]
"RTN","IBBDOC",65,0)
 ; IBBAPLR  = Calling Application; 
"RTN","IBBDOC",66,0)
 ;            <routine> or <tag>_;_<routine> 
"RTN","IBBDOC",67,0)
 ; IBBPV1   = array for PV1 segment data [required]
"RTN","IBBDOC",68,0)
 ;   IBBPV1(2)  - Patient Class (O=Outpatient;I=Inpatient)
"RTN","IBBDOC",69,0)
 ;   IBBPV1(3)  - IEN to file #44, or "FEE BASIS"
"RTN","IBBDOC",70,0)
 ;   IBBPV1(4)  - Appointment Type; IEN to file #409.1
"RTN","IBBDOC",71,0)
 ;   IBBPV1(7)  - Attending Physician; IEN to file #200
"RTN","IBBDOC",72,0)
 ;   IBBVP1(9)  - Consulting Physician; IEN to file #200
"RTN","IBBDOC",73,0)
 ;   IBBPV1(10) - Purpose of Visit; 
"RTN","IBBDOC",74,0)
 ;                (Scheduling: 1=C&P;2=10-10;3=SV;4=UV)
"RTN","IBBDOC",75,0)
 ;   IBBPV1(17) - Admitting Physician or Surgeon; 
"RTN","IBBDOC",76,0)
 ;                IEN to file #200
"RTN","IBBDOC",77,0)
 ;   IBBPV1(18) - Primary Stop Code; IEN to file #40.7
"RTN","IBBDOC",78,0)
 ;   IBBPV1(25) - Check-In Date/Time (Scheduling)
"RTN","IBBDOC",79,0)
 ;   IBBPV1(41) - Credit Stop Code; IEN to file #40.7
"RTN","IBBDOC",80,0)
 ;   IBBPV1(44) - Admit Date/Time
"RTN","IBBDOC",81,0)
 ;   IBBPV1(45) - Check-Out Date/Time (Scheduling)
"RTN","IBBDOC",82,0)
 ;   IBBPV1(50) - Prescription #; IEN to file #52 (Pharmacy)
"RTN","IBBDOC",83,0)
 ;   IBBPV1(52) - Other Provider; IEN to file #200
"RTN","IBBDOC",84,0)
 ; IBBPV2   = array for PV2 segment data
"RTN","IBBDOC",85,0)
 ;   IBBPV2(7)  - Eligibility of Visit; IEN to file #8.1
"RTN","IBBDOC",86,0)
 ;   IBBPV2(8)  - Expected Admit/Visit Date/Time
"RTN","IBBDOC",87,0)
 ;   IBBPV2(24) - Appointment Status; 
"RTN","IBBDOC",88,0)
 ;                (Scheduling:
"RTN","IBBDOC",89,0)
 ;                 R=Scheduled/Kept;I=Inpatient;
"RTN","IBBDOC",90,0)
 ;                 NS=No-Show;NSR=No-Show, Rescheduled;
"RTN","IBBDOC",91,0)
 ;                 CP=Cancelled by Patient;
"RTN","IBBDOC",92,0)
 ;                 CPR=Cancelled by Patient, Rescheduled;
"RTN","IBBDOC",93,0)
 ;                 CC=Cancelled by Clinic;
"RTN","IBBDOC",94,0)
 ;                 CCR=Cancelled by Clinic, Rescheduled;
"RTN","IBBDOC",95,0)
 ;                 NT=No Action Taken)
"RTN","IBBDOC",96,0)
 ;   IBBPV2(46) - Date Appointment Made (Scheduling)
"RTN","IBBDOC",97,0)
 ; IBBPR1   = array for PR1 segment data
"RTN","IBBDOC",98,0)
 ;   IBBPR1(3)  - Procedure; IEN to file #81
"RTN","IBBDOC",99,0)
 ;   IBBPR1(4)  - Procedure; free text
"RTN","IBBDOC",100,0)
 ;   IBBPR1(5)  - Procedure Date/Time
"RTN","IBBDOC",101,0)
 ;   IBBPR1(6)  - Functional Type;
"RTN","IBBDOC",102,0)
 ;                (Prosthetics: 
"RTN","IBBDOC",103,0)
 ;                 O=Home Oxygen;P=Purchasing;
"RTN","IBBDOC",104,0)
 ;                 I=Stock Issue)
"RTN","IBBDOC",105,0)
 ;                (Radiology: 
"RTN","IBBDOC",106,0)
 ;                 ANI=Angio/Neuro/Interventional;
"RTN","IBBDOC",107,0)
 ;                 CARD=Cardiology Studies;CT=CT Scan;
"RTN","IBBDOC",108,0)
 ;                 RAD=General Radiology;
"RTN","IBBDOC",109,0)
 ;                 MRI=Magnetic Resonance Imaging;
"RTN","IBBDOC",110,0)
 ;                 MAM=Mammography;NM=Nuclear Medicine;
"RTN","IBBDOC",111,0)
 ;                 US=Ultrasound;VAS=Vascular Lab)
"RTN","IBBDOC",112,0)
 ;   IBBPR1(11) - Surgeon; IEN to file #200
"RTN","IBBDOC",113,0)
 ;   IBBPR1(16) - <modifier>;<modifier>;<modifier>;... 
"RTN","IBBDOC",114,0)
 ;                where each <modifier> is an IEN to file #81.3
"RTN","IBBDOC",115,0)
 ; IBBDG1   = array for DG1 segment data
"RTN","IBBDOC",116,0)
 ;   IBBDG1(n,3) - Diagnosis; IEN to file #80
"RTN","IBBDOC",117,0)
 ;   IBBDG1(1,4) - Diagnosis; free text; only one allowed
"RTN","IBBDOC",118,0)
 ;   IBBDG1(n,6) - Diagnosis Type; (A=Admitting;
"RTN","IBBDOC",119,0)
 ;                                  W=Working;
"RTN","IBBDOC",120,0)
 ;                                  D=Discharge;
"RTN","IBBDOC",121,0)
 ;                                  F=Final)
"RTN","IBBDOC",122,0)
 ; IBBZCL   = array for ZCL segment data
"RTN","IBBDOC",123,0)
 ;   IBBZCL(n,2) - Classification Type; 
"RTN","IBBDOC",124,0)
 ;                 (1=AO;2=IR;3=SC;4=EC;5=MST;6=HNC;
"RTN","IBBDOC",125,0)
 ;                  7=CV;8=SHAD)
"RTN","IBBDOC",126,0)
 ;   IBBZCL(n,3) - Classification Value; (1=YES;0=NO)
"RTN","IBBDOC",127,0)
 ; IBBDIV   = IEN to file #40.8
"RTN","IBBDOC",128,0)
 ; IBBRAIEN = IEN to file #75.1
"RTN","IBBDOC",129,0)
 ; IBBSURG  = array for special Surgery data
"RTN","IBBDOC",130,0)
 ;   IBBSURG(1) - Surgical Case #; IEN to file #130
"RTN","IBBDOC",131,0)
 ;   IBBSURG(2) - Surgical Specialty; IEN to file #45.3
"RTN","IBBDOC",132,0)
 ;
"RTN","IBBDOC",133,0)
 ; Returns the pointer to the PFSS ACCOUNT file (#375) where 
"RTN","IBBDOC",134,0)
 ; all application input data is stored.
"RTN","IBBDOC",135,0)
 ;
"RTN","IBBDOC",136,0)
 ; Output:  IEN to file #375, or 0, if unsuccessful
"RTN","IBBDOC",137,0)
 ; 
"RTN","IBBDOC",138,0)
GETCHGID ; ()
"RTN","IBBDOC",139,0)
 ; Returns a Unique Charge ID.
"RTN","IBBDOC",140,0)
 ;
"RTN","IBBDOC",141,0)
 ; Output: 1 + current value of field #2 of file #372.
"RTN","IBBDOC",142,0)
 ;
"RTN","IBBDOC",143,0)
CHARGE ; (IBBDFN,IBBARFN,IBBCTYPE,IBBUCID,IBBFT1,IBBPR1,IBBDG1,IBBZCL,IBBRXE,IBBORIEN,IBBPROS)
"RTN","IBBDOC",144,0)
 ; Pass data to IBB for charge (DFT) messaging.
"RTN","IBBDOC",145,0)
 ;
"RTN","IBBDOC",146,0)
 ; Input:
"RTN","IBBDOC",147,0)
 ; IBBDFN   = Patient; IEN to file #2 [required]
"RTN","IBBDOC",148,0)
 ; IBBARFN  = Account Reference; IEN to file #375 [required]
"RTN","IBBDOC",149,0)
 ; IBBCTYPE = Charge Type; (CG=debit;CD=credit) [required]
"RTN","IBBDOC",150,0)
 ; IBBUCID  = Unique Charge ID [required]
"RTN","IBBDOC",151,0)
 ; IBBFT1   = array for FT1 segment data [required]
"RTN","IBBDOC",152,0)
 ;   IBBFT1(4)  - Transaction Date/Time
"RTN","IBBDOC",153,0)
 ;   IBBFT1(7)  - Pharmacy Service Code
"RTN","IBBDOC",154,0)
 ;   IBBFT1(10) - Transaction Quantity
"RTN","IBBDOC",155,0)
 ;   IBBFT1(13) - Department Code
"RTN","IBBDOC",156,0)
 ;   IBBFT1(16) - Patient Location; IEN to file #44
"RTN","IBBDOC",157,0)
 ;   IBBFT1(18) - Patient Status; (Pharmacy: 1=Rx Copay Exempt;
"RTN","IBBDOC",158,0)
 ;                                           0=Not Exempt)
"RTN","IBBDOC",159,0)
 ;   IBBFT1(20) - Rendering Provider; IEN to file #200
"RTN","IBBDOC",160,0)
 ;   IBBFT1(21) - Ordering Provider; IEN to file #200
"RTN","IBBDOC",161,0)
 ;   IBBFT1(22) - Unit Cost
"RTN","IBBDOC",162,0)
 ;   IBBFT1(29) - <NDC>;<generic_name>
"RTN","IBBDOC",163,0)
 ;   IBBFT1(31) - Transaction Type; 
"RTN","IBBDOC",164,0)
 ;                (Pharmacy: 1=PSO NSC Rx Copay;
"RTN","IBBDOC",165,0)
 ;                           2=PSO SC Rx Copay;
"RTN","IBBDOC",166,0)
 ;                           3=PSO NSC Rx Copay Cancel
"RTN","IBBDOC",167,0)
 ;                           4=PSO NSC Rx Copay Update
"RTN","IBBDOC",168,0)
 ;                           5=PSO SC Rx Copay Cancel
"RTN","IBBDOC",169,0)
 ;                           6=PSO SC Rx Copay Update)
"RTN","IBBDOC",170,0)
 ; IBBPR1   = array for PR1 segment data;
"RTN","IBBDOC",171,0)
 ;            (required except Pharmacy)
"RTN","IBBDOC",172,0)
 ;   IBBPR1(3)    - Procedure; IEN to file #81
"RTN","IBBDOC",173,0)
 ;   IBBPR1(4)    - Procedure; free text
"RTN","IBBDOC",174,0)
 ;   IBBPR1(5)    - Procedure Date/Time
"RTN","IBBDOC",175,0)
 ;   IBBPR1(6)    - Functional Type; 
"RTN","IBBDOC",176,0)
 ;                  (Prosthetics: O=Home Oxygen;
"RTN","IBBDOC",177,0)
 ;                                P=Purchasing;
"RTN","IBBDOC",178,0)
 ;                                I=Stock Issue)
"RTN","IBBDOC",179,0)
 ;   IBBPR1(11,1) - Surgeon; IEN to file #200
"RTN","IBBDOC",180,0)
 ;   IBBPR1(11,2) - Attending Surgeon; IEN to file #200
"RTN","IBBDOC",181,0)
 ;   IBBPR1(16)   - <modifier>;<modifier>;<modifier>;...;
"RTN","IBBDOC",182,0)
 ;                  each <modifier> is an IEN to file #81.3
"RTN","IBBDOC",183,0)
 ; IBBDG1   = array for DG1 segment data
"RTN","IBBDOC",184,0)
 ;   IBBDG1(n,3) - DIagnosis; IEN to file #80
"RTN","IBBDOC",185,0)
 ;   IBBDG1(n,6) - Diagnosis Type; (A=Admitting;W=Working;
"RTN","IBBDOC",186,0)
 ;                                  D=Discharge;F=Final)
"RTN","IBBDOC",187,0)
 ; IBBZCL   = array for ZCL segment data
"RTN","IBBDOC",188,0)
 ;   IBBZCL(n,2) - Classification Type; 
"RTN","IBBDOC",189,0)
 ;                 (1=AO;2=IR;3=SC;4=EC;5=MST;
"RTN","IBBDOC",190,0)
 ;                  6=HNC;7=CV;8=SHAD)
"RTN","IBBDOC",191,0)
 ;   IBBZCL(n,3) - Classification Value; (1=YES;0=NO)
"RTN","IBBDOC",192,0)
 ; IBBRXE   = data for RXE segment data (Pharmacy only)
"RTN","IBBDOC",193,0)
 ;   IBBRXE(1)  - <quantity>_;_<days_supply>
"RTN","IBBDOC",194,0)
 ;   IBBRXE(17) - Refills Dispensed
"RTN","IBBDOC",195,0)
 ;   IBBRXE(18) - Release Date/Time
"RTN","IBBDOC",196,0)
 ;   IBBRXE(31) - DEA, Special Handling codes
"RTN","IBBDOC",197,0)
 ; IBBPROS  = array for special Prosthetics data
"RTN","IBBDOC",198,0)
 ;   IBBPROS(1) - Vendor; IEN to file #440
"RTN","IBBDOC",199,0)
 ;   IBBPROS(2) - OBL#
"RTN","IBBDOC",200,0)
 ;
"RTN","IBBDOC",201,0)
 ; Returns success indicator.
"RTN","IBBDOC",202,0)
 ;
"RTN","IBBDOC",203,0)
 ; Output: 1, if successful; 0 otherwise
"RTN","IBBDOC",204,0)
 ;
"RTN","IBBDOC",205,0)
SETACCT ; (IBBDFN,HLMTIENS)
"RTN","IBBDOC",206,0)
 ; Store visit/account # from external billing system in PFSS
"RTN","IBBDOC",207,0)
 ; ACCOUNT record; the file #375 record is found based on data
"RTN","IBBDOC",208,0)
 ; contained in the HL7 message referenced by HLMTIENS.
"RTN","IBBDOC",209,0)
 ; Most of the ADT messages involved originate in VistA and 
"RTN","IBBDOC",210,0)
 ; are returned by the external billing system with visit#
"RTN","IBBDOC",211,0)
 ; attached.
"RTN","IBBDOC",212,0)
 ; Some ADT-A01 messages originate in the external billing
"RTN","IBBDOC",213,0)
 ; system; these cause a new record to be created in file #375.
"RTN","IBBDOC",214,0)
 ; 
"RTN","IBBDOC",215,0)
 ; Input:
"RTN","IBBDOC",216,0)
 ; IBBDFN   = Patient; IEN to file #2 [required]
"RTN","IBBDOC",217,0)
 ; HLMTIENS = HL7 Message (standard VistA HL7 variable); 
"RTN","IBBDOC",218,0)
 ;            IEN to file #773 [required]
"RTN","IBBDOC",219,0)
 ;
"RTN","IBBDOC",220,0)
 ; Returns PFSS Account Reference.
"RTN","IBBDOC",221,0)
 ;
"RTN","IBBDOC",222,0)
 ; Output: IEN to file #375
"RTN","IBBDOC",223,0)
 ;
"RTN","IBBDOC",224,0)
EXTNUM ; (IBBDFN,IBBARFN)
"RTN","IBBDOC",225,0)
 ; Obtain the visit/account # of the external billing system
"RTN","IBBDOC",226,0)
 ; that has been associated with the PFSS ACCOUNT file (#375)
"RTN","IBBDOC",227,0)
 ; record.
"RTN","IBBDOC",228,0)
 ; 
"RTN","IBBDOC",229,0)
 ; Input:
"RTN","IBBDOC",230,0)
 ; IBBDFN   = Patient; IEN to file #2 [required]
"RTN","IBBDOC",231,0)
 ; IBBARFN  = Account Reference; IEN to file #375 [required]
"RTN","IBBDOC",232,0)
 ;
"RTN","IBBDOC",233,0)
 ; Returns the value of field #.02 from the file #375 record.
"RTN","IBBDOC",234,0)
 ;
"RTN","IBBDOC",235,0)
 ; Output: external visit/account #, or 0, if unsuccessful
"RTN","IBBDOC",236,0)
 ;
"SEC","^DIC",372,372,0,"AUDIT")
@
"SEC","^DIC",372,372,0,"DD")
@
"SEC","^DIC",372,372,0,"DEL")
@
"SEC","^DIC",372,372,0,"LAYGO")
@
"SEC","^DIC",372,372,0,"RD")
@
"SEC","^DIC",372,372,0,"WR")
@
"SEC","^DIC",373,373,0,"AUDIT")
@
"SEC","^DIC",373,373,0,"DD")
@
"SEC","^DIC",373,373,0,"DEL")
@
"SEC","^DIC",373,373,0,"LAYGO")
@
"SEC","^DIC",373,373,0,"RD")
@
"SEC","^DIC",373,373,0,"WR")
@
"SEC","^DIC",375,375,0,"AUDIT")
@
"SEC","^DIC",375,375,0,"DD")
@
"SEC","^DIC",375,375,0,"DEL")
@
"SEC","^DIC",375,375,0,"LAYGO")
@
"SEC","^DIC",375,375,0,"RD")
@
"SEC","^DIC",375,375,0,"WR")
@
"VER")
8.0^22.0
"^DD",372,372,0)
FIELD^^.06^12
"^DD",372,372,0,"DDA")
N
"^DD",372,372,0,"DT")
3050919
"^DD",372,372,0,"IX","B",372,.01)

"^DD",372,372,0,"NM","PFSS SITE PARAMETERS")

"^DD",372,372,0,"VRPK")
IB
"^DD",372,372,.01,0)
SITE^RP4'XI^DIC(4,^0;1^K:+$G(^IBBAS(372,1,0)) X
"^DD",372,372,.01,1,0)
^.1
"^DD",372,372,.01,1,1,0)
372^B
"^DD",372,372,.01,1,1,1)
S ^IBBAS(372,"B",$E(X,1,30),DA)=""
"^DD",372,372,.01,1,1,2)
K ^IBBAS(372,"B",$E(X,1,30),DA)
"^DD",372,372,.01,3)
The SITE field is populated at installation.  Additional records may not be created.
"^DD",372,372,.01,4)

"^DD",372,372,.01,21,0)
^^4^4^3050518^
"^DD",372,372,.01,21,1,0)
The SITE field (#.01) is populated during the initial installation
"^DD",372,372,.01,21,2,0)
of this file.  Once set, it may not be edited or deleted, nor can
"^DD",372,372,.01,21,3,0)
additional records be added to the file.  Only one record exists and its
"^DD",372,372,.01,21,4,0)
internal entry number is 1.
"^DD",372,372,.01,"DT")
3050518
"^DD",372,372,.03,0)
MESSAGES PER BATCH^RNJ3,0^^0;3^K:+X'=X!(X>999)!(X<10)!(X?.E1"."1N.N) X
"^DD",372,372,.03,3)
Type a Number between 10 and 999, 0 Decimal Digits
"^DD",372,372,.03,21,0)
^.001^5^5^3050527^^
"^DD",372,372,.03,21,1,0)
The value in this field determines the maximum number of charge records to
"^DD",372,372,.03,21,2,0)
be inserted into a Charge Batch when running the background job associated 
"^DD",372,372,.03,21,3,0)
with the PFSS Charge Batch Processing [IBBA BATCH DFT] menu option.  The 
"^DD",372,372,.03,21,4,0)
field is site configurable from a minimum of 10 records to a maximum of 
"^DD",372,372,.03,21,5,0)
999 records per batch message.
"^DD",372,372,.03,"DT")
3051103
"^DD",372,372,.04,0)
SERVICE MASTER DIRECTORY^F^^0;4^K:$L(X)>40!($L(X)<3) X
"^DD",372,372,.04,3)
Answer must be 3-40 characters in length.
"^DD",372,372,.04,21,0)
^.001^2^2^3050426^^
"^DD",372,372,.04,21,1,0)
The system directory which will hold the text file used for seeding
"^DD",372,372,.04,21,2,0)
or updating the PFSS SERVICE MASTER file (#374).
"^DD",372,372,.04,"DT")
3050419
"^DD",372,372,.05,0)
MAIL GROUP FOR SERVICE MASTER^P3.8'^XMB(3.8,^0;5^Q
"^DD",372,372,.05,21,0)
^^3^3^3050802^
"^DD",372,372,.05,21,1,0)
This selection of the appropriate mail group is left to the local
"^DD",372,372,.05,21,2,0)
site.  This mail group will receive the Error Reports issued from
"^DD",372,372,.05,21,3,0)
the PFSS SERVICE MASTER file (#374) seeding and maintenance processes.
"^DD",372,372,.05,"DT")
3050802
"^DD",372,372,.06,0)
MAIL GROUP FOR CHARGE^P3.8'^XMB(3.8,^0;6^Q
"^DD",372,372,.06,21,0)
^^2^2^3050919^
"^DD",372,372,.06,21,1,0)
This is the Mail Group that will receive all error messages generated
"^DD",372,372,.06,21,2,0)
in IBB during charge transaction prcessing initiated by CHARGE^IBBAPI.
"^DD",372,372,.06,"DT")
3050919
"^DD",372,372,.1,0)
CHARGE PROCESSOR RUNNING^SI^1:YES;0:NO;^0;10^Q
"^DD",372,372,.1,21,0)
^^9^9^3050426^
"^DD",372,372,.1,21,1,0)
When menu option IBBA BATCH DFT invokes EN^IBBADFTO, the setting of this 
"^DD",372,372,.1,21,2,0)
field is immediately checked.  This is intended to prevent concurrent jobs 
"^DD",372,372,.1,21,3,0)
from processing the Charge Cache.
"^DD",372,372,.1,21,4,0)
 
"^DD",372,372,.1,21,5,0)
If this field is set to "YES , then EN^IBBADFTO exits immediately.
"^DD",372,372,.1,21,6,0)
If this field is set to "NO , then it is set to "YES  and processing in 
"^DD",372,372,.1,21,7,0)
EN^IBBADFTO continues.
"^DD",372,372,.1,21,8,0)
When processing of the Charge Cache is completed, just before EN^IBBADFTO 
"^DD",372,372,.1,21,9,0)
exits, this field is set to "NO .
"^DD",372,372,.1,"DT")
3050609
"^DD",372,372,.11,0)
CHARGE PROCESS START TIME^DI^^0;11^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",372,372,.11,21,0)
^^6^6^3050426^
"^DD",372,372,.11,21,1,0)
The CHARGE PROCESS START TIME indicates the exact date/time when charge 
"^DD",372,372,.11,21,2,0)
processing is started via EN^IBBADFTO.
"^DD",372,372,.11,21,3,0)
 
"^DD",372,372,.11,21,4,0)
When field #.1 is set to "YES , then current system date/time is set 
"^DD",372,372,.11,21,5,0)
into field #.11.
"^DD",372,372,.11,21,6,0)
When field #.1 is set to "NO , then any data in field #.11 is deleted.
"^DD",372,372,.11,"DT")
3050609
"^DD",372,372,1.01,0)
MASTER SWITCH^RSI^1:ON;0:OFF;^1;1^Q
"^DD",372,372,1.01,21,0)
^^2^2^3050426^
"^DD",372,372,1.01,21,1,0)
This is the PFSS On/Off Switch which determines whether the PFSS 
"^DD",372,372,1.01,21,2,0)
functionality is in use ("ON ) or not in use ("OFF ).
"^DD",372,372,1.01,"DT")
3050404
"^DD",372,372,1.02,0)
EFFECTIVE DATE/TIME^RDI^^1;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",372,372,1.02,21,0)
^^2^2^3050426^
"^DD",372,372,1.02,21,1,0)
This is the exact date/time at which the PFSS On/Off Switch enters the 
"^DD",372,372,1.02,21,2,0)
status shown in field #1 as determined by the local site/user.
"^DD",372,372,1.02,"DT")
3050404
"^DD",372,372,2,0)
CURRENT CHARGE ID^NJ8,0I^^2;1^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",372,372,2,3)
Type a Number between 1 and 99999999, 0 Decimal Digits
"^DD",372,372,2,21,0)
^.001^9^9^3050527^^^
"^DD",372,372,2,21,1,0)
This is the current setting of the PFSS Charge Identifier.  Applications
"^DD",372,372,2,21,2,0)
using PFSS must tag each charge transaction with a unique identifying 
"^DD",372,372,2,21,3,0)
number, which is stored within the application's file structure,
"^DD",372,372,2,21,4,0)
and sent within the HL7 charge message to the external medical billing.
"^DD",372,372,2,21,5,0)
system.
"^DD",372,372,2,21,6,0)
 
"^DD",372,372,2,21,7,0)
To obtain a PFSS Charge Identifier the application calls 
"^DD",372,372,2,21,8,0)
$$GETCHGID^IBBAPI().  That function increments the CURRENT CHARGE ID
"^DD",372,372,2,21,9,0)
by 1 and returns that value to the calling application.
"^DD",372,372,2,"DT")
3050609
"^DD",372,372,10,0)
SWITCH HISTORY^372.01DA^^H;0
"^DD",372,372,10,21,0)
^^3^3^3050426^
"^DD",372,372,10,21,1,0)
This is a multiple field which will be automatically updated each time 
"^DD",372,372,10,21,2,0)
the IBBA MASTER SWITCH menu option is used to change the setting of the 
"^DD",372,372,10,21,3,0)
MASTER SWITCH field (#1).
"^DD",372,372,11,0)
SERVICE MASTER HISTORY^372.011DA^^11;0
"^DD",372,372,11,21,0)
^^3^3^3050426^
"^DD",372,372,11,21,1,0)
This is a multiple field (subfile) which will be automatically updated 
"^DD",372,372,11,21,2,0)
each time the PFSS SERVICE MASTER file (#374) is updated via a text file 
"^DD",372,372,11,21,3,0)
from an external source.
"^DD",372,372.01,0)
SWITCH HISTORY SUB-FIELD^^.04^4
"^DD",372,372.01,0,"DT")
3050404
"^DD",372,372.01,0,"IX","B",372.01,.01)

"^DD",372,372.01,0,"NM","SWITCH HISTORY")

"^DD",372,372.01,0,"UP")
372
"^DD",372,372.01,.01,0)
DATE/TIME OF CHANGE^RDI^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",372,372.01,.01,1,0)
^.1
"^DD",372,372.01,.01,1,1,0)
372.01^B
"^DD",372,372.01,.01,1,1,1)
S ^IBBAS(372,DA(1),"H","B",$E(X,1,30),DA)=""
"^DD",372,372.01,.01,1,1,2)
K ^IBBAS(372,DA(1),"H","B",$E(X,1,30),DA)
"^DD",372,372.01,.01,21,0)
^^2^2^3050426^
"^DD",372,372.01,.01,21,1,0)
This is the date/time at which the setting of the MASTER SWITCH 
"^DD",372,372.01,.01,21,2,0)
(field #1.01) was changed.
"^DD",372,372.01,.01,"DT")
3050609
"^DD",372,372.01,.02,0)
PREVIOUS STATUS^RSI^1:ON;0:OFF;^0;2^Q
"^DD",372,372.01,.02,21,0)
^^2^2^3050426^
"^DD",372,372.01,.02,21,1,0)
This is the setting of the MASTER SWITCH field (#1.01) of file #372 
"^DD",372,372.01,.02,21,2,0)
before the change is made.
"^DD",372,372.01,.02,"DT")
3050609
"^DD",372,372.01,.03,0)
CHANGED BY^RP200'I^VA(200,^0;3^Q
"^DD",372,372.01,.03,21,0)
^^2^2^3050426^
"^DD",372,372.01,.03,21,1,0)
This is the identity of the user that changed the setting of the 
"^DD",372,372.01,.03,21,2,0)
MASTER SWITCH field (#1.01) of file #372.
"^DD",372,372.01,.03,"DT")
3050609
"^DD",372,372.01,.04,0)
REASON^RFI^^0;4^K:$L(X)>80!($L(X)<10) X
"^DD",372,372.01,.04,3)
Answer must be 10-80 characters in length.
"^DD",372,372.01,.04,21,0)
^^2^2^3050426^
"^DD",372,372.01,.04,21,1,0)
This is the reason provided by the user for the change to the MASTER 
"^DD",372,372.01,.04,21,2,0)
SWITCH (field #1.01) setting in the PFSS MASTER file (#372).
"^DD",372,372.01,.04,"DT")
3050609
"^DD",372,372.011,0)
SERVICE MASTER HISTORY SUB-FIELD^^.03^3
"^DD",372,372.011,0,"DT")
3050527
"^DD",372,372.011,0,"IX","B",372.011,.01)

"^DD",372,372.011,0,"NM","SERVICE MASTER HISTORY")

"^DD",372,372.011,0,"UP")
372
"^DD",372,372.011,.01,0)
DATE/TIME UPDATE STARTED^DI^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",372,372.011,.01,1,0)
^.1
"^DD",372,372.011,.01,1,1,0)
372.011^B
"^DD",372,372.011,.01,1,1,1)
S ^IBBAS(372,DA(1),11,"B",$E(X,1,30),DA)=""
"^DD",372,372.011,.01,1,1,2)
K ^IBBAS(372,DA(1),11,"B",$E(X,1,30),DA)
"^DD",372,372.011,.01,21,0)
^.001^2^2^3050426^^^
"^DD",372,372.011,.01,21,1,0)
The date/time at which a seeding or update operation on PFSS SERVICE
"^DD",372,372.011,.01,21,2,0)
MASTER file (#374) was started.
"^DD",372,372.011,.01,"DT")
3050609
"^DD",372,372.011,.02,0)
UPDATE FILE NAME^FI^^0;2^K:$L(X)>50!($L(X)<3) X
"^DD",372,372.011,.02,1,0)
^.1^^0
"^DD",372,372.011,.02,3)
Answer must be 3-50 characters in length.
"^DD",372,372.011,.02,21,0)
^.001^2^2^3050426^^
"^DD",372,372.011,.02,21,1,0)
The name of the text file used for a seeding or update operation on
"^DD",372,372.011,.02,21,2,0)
the PFSS SERVICE MASTER file (#374).
"^DD",372,372.011,.02,"DT")
3050803
"^DD",372,372.011,.03,0)
DATE/TIME UPDATED COMPLETED^DI^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",372,372.011,.03,21,0)
^.001^2^2^3050426^^
"^DD",372,372.011,.03,21,1,0)
The date/time at which a seeding or update operation on PFSS SERVICE
"^DD",372,372.011,.03,21,2,0)
MASTER file (#374) was completed.
"^DD",372,372.011,.03,"DT")
3050803
"^DD",373,373,0)
FIELD^^.09^43
"^DD",373,373,0,"DDA")
N
"^DD",373,373,0,"DT")
3051103
"^DD",373,373,0,"IX","AC",373,.03)

"^DD",373,373,0,"IX","AOX",373,.06)

"^DD",373,373,0,"IX","AOX",373,.11)

"^DD",373,373,0,"IX","C",373,.04)

"^DD",373,373,0,"NM","PFSS CHARGE CACHE")

"^DD",373,373,.01,0)
CHARGE NUMBER^RNJ10,0X^^0;1^S DINUM=X K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",373,373,.01,1,0)
^.1^^0
"^DD",373,373,.01,3)

"^DD",373,373,.01,21,0)
^.001^2^2^3050426^^
"^DD",373,373,.01,21,1,0)
A sequential integer used for both the internal entry number and #.01 
"^DD",373,373,.01,21,2,0)
field for each record created in the file.
"^DD",373,373,.01,23,0)
^.001^2^2^3050426^^^^
"^DD",373,373,.01,23,1,0)
The file is DINUM'd; the internal entry number and #.01 field are the
"^DD",373,373,.01,23,2,0)
same value.
"^DD",373,373,.01,"DT")
3050426
"^DD",373,373,.02,0)
PFSS ACCOUNT REFERENCE^RP375'^IBBAA(375,^0;2^Q
"^DD",373,373,.02,21,0)
^.001^3^3^3050601^^^
"^DD",373,373,.02,21,1,0)
The PFSS Account Reference (i.e., internal entry number to PFSS ACCOUNT
"^DD",373,373,.02,21,2,0)
file #375) associated with the charge (debit or credit) contained in this 
"^DD",373,373,.02,21,3,0)
record.
"^DD",373,373,.02,23,0)
^^5^5^3050601^
"^DD",373,373,.02,23,1,0)
This pointer to the PFSS ACCOUNT file (#375) is used to retrieve the
"^DD",373,373,.02,23,2,0)
value in the EXTERNAL ACCOUNT NUMBER field (#02) for the PFSS HL7
"^DD",373,373,.02,23,3,0)
DFT message, PV1 Segment, Sequence 19.  All additional data for both
"^DD",373,373,.02,23,4,0)
the PV1 and PV2 Segments is also taken directly from the PFSS ACCOUNT
"^DD",373,373,.02,23,5,0)
record.
"^DD",373,373,.02,"DT")
3050610
"^DD",373,373,.03,0)
PATIENT^RP2'^DPT(^0;3^Q
"^DD",373,373,.03,1,0)
^.1
"^DD",373,373,.03,1,1,0)
373^AC
"^DD",373,373,.03,1,1,1)
S ^IBBAD(373,"AC",$E(X,1,30),DA)=""
"^DD",373,373,.03,1,1,2)
K ^IBBAD(373,"AC",$E(X,1,30),DA)
"^DD",373,373,.03,1,1,"%D",0)
^.101^4^4^3051116^^^^
"^DD",373,373,.03,1,1,"%D",1,0)
The is a regular cross-reference by PATIENT (field #.03).  The principal
"^DD",373,373,.03,1,1,"%D",2,0)
purpose of this cross-reference is to allow the Patient Merge processor
"^DD",373,373,.03,1,1,"%D",3,0)
(Kernel) to operate efficiently in the event that patient's with
"^DD",373,373,.03,1,1,"%D",4,0)
records in file #373 are merged.
"^DD",373,373,.03,1,1,"DT")
3050602
"^DD",373,373,.03,21,0)
^^2^2^3050426^
"^DD",373,373,.03,21,1,0)
The Patient identifier associated with the billing account identified 
"^DD",373,373,.03,21,2,0)
in field #.02.
"^DD",373,373,.03,23,0)
^.001^11^11^3050614^^^^
"^DD",373,373,.03,23,1,0)
This pointer to the PATIENT file (#2) is used to construct the
"^DD",373,373,.03,23,2,0)
HL7 PID Segment for PFSS DFT messages.
"^DD",373,373,.03,23,3,0)
  
"^DD",373,373,.03,23,4,0)
The "OX" cross-reference depends upon field #.03.
"^DD",373,373,.03,23,5,0)
  
"^DD",373,373,.03,23,6,0)
S ^IBBAD(373,"OX",X1,X2,DA)=""
"^DD",373,373,.03,23,7,0)
   where:  X1=field #.03
"^DD",373,373,.03,23,8,0)
           X2=field #.04
"^DD",373,373,.03,23,9,0)
  
"^DD",373,373,.03,23,10,0)
The "OX" cross-reference should be set only through SAOX^IBBAADD; it
"^DD",373,373,.03,23,11,0)
should be killed only through KAOX^IBBAADD.
"^DD",373,373,.03,"DT")
3050602
"^DD",373,373,.04,0)
UNIQUE CHARGE ID^RNJ8,0^^0;4^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",373,373,.04,1,0)
^.1
"^DD",373,373,.04,1,1,0)
373^C
"^DD",373,373,.04,1,1,1)
S ^IBBAD(373,"C",$E(X,1,30),DA)=""
"^DD",373,373,.04,1,1,2)
K ^IBBAD(373,"C",$E(X,1,30),DA)
"^DD",373,373,.04,1,1,"%D",0)
^.101^1^1^3051116^^^
"^DD",373,373,.04,1,1,"%D",1,0)
A simple cross-reference using the Unique Charge ID.
"^DD",373,373,.04,1,1,"DT")
3050426
"^DD",373,373,.04,3)
Type a Number between 0 and 0, 0 Decimal Digits
"^DD",373,373,.04,21,0)
^.001^5^5^3050920^^^^
"^DD",373,373,.04,21,1,0)
A numeric identifier of not more than 8 digits that uniquely identifies the
"^DD",373,373,.04,21,2,0)
charge item in the external medical billing system.
"^DD",373,373,.04,21,3,0)
  
"^DD",373,373,.04,21,4,0)
This data item is referred to as the "PFSS Charge Identifier" within
"^DD",373,373,.04,21,5,0)
the PFSS project documentation.
"^DD",373,373,.04,23,0)
^.001^12^12^3050920^^^^
"^DD",373,373,.04,23,1,0)
The application providing the data to the PFSS CHARGE CACHE file
"^DD",373,373,.04,23,2,0)
uses $$GETCHGID^IBBAPI to obtain a unique identifying number for
"^DD",373,373,.04,23,3,0)
the original charge.
"^DD",373,373,.04,23,4,0)
  
"^DD",373,373,.04,23,5,0)
The "OX" cross-reference depends upon field #.04.
"^DD",373,373,.04,23,6,0)
  
"^DD",373,373,.04,23,7,0)
S ^IBBAD(373,"OX",X1,X2,DA)=""
"^DD",373,373,.04,23,8,0)
   where:  X1=field #.03
"^DD",373,373,.04,23,9,0)
           X2=field #.04
"^DD",373,373,.04,23,10,0)
  
"^DD",373,373,.04,23,11,0)
The "OX" cross-reference should be set only through SAOX^IBBAADD; it
"^DD",373,373,.04,23,12,0)
should be killed only through KAOX^IBBAADD.
"^DD",373,373,.04,"DT")
3050920
"^DD",373,373,.05,0)
TYPE^RS^CG:CHARGE;CD:CREDIT;^0;5^Q
"^DD",373,373,.05,21,0)
^^1^1^3050426^
"^DD",373,373,.05,21,1,0)
Identifies the charge item as either account debit or account credit.
"^DD",373,373,.05,"DT")
3050224
"^DD",373,373,.06,0)
DEPARTMENT^RF^^0;6^K:$L(X)>3!($L(X)<3) X
"^DD",373,373,.06,1,0)
^.1
"^DD",373,373,.06,1,1,0)
373^AOX^MUMPS
"^DD",373,373,.06,1,1,1)
I X D SAOX^IBBAADD(DA)
"^DD",373,373,.06,1,1,2)
Q
"^DD",373,373,.06,1,1,"DT")
3050418
"^DD",373,373,.06,3)
Answer must be 3 characters in length.
"^DD",373,373,.06,21,0)
^.001^41^41^3050601^^^^
"^DD",373,373,.06,21,1,0)
The Department code associated by the sending-application with the charge.
"^DD",373,373,.06,21,2,0)
  
"^DD",373,373,.06,21,3,0)
Department Codes are defined as follows for the various service areas:
"^DD",373,373,.06,21,4,0)
  
"^DD",373,373,.06,21,5,0)
108 - Laboratory; 
"^DD",373,373,.06,21,6,0)
160 - Pharmacy; 
"^DD",373,373,.06,21,7,0)
419 - Anesthesiology; 
"^DD",373,373,.06,21,8,0)
423 - Prosthetics;
"^DD",373,373,.06,21,9,0)
  
"^DD",373,373,.06,21,10,0)
Surgery (based on Surgical Specialty):
"^DD",373,373,.06,21,11,0)
180 - Oral Surgery; 
"^DD",373,373,.06,21,12,0)
401 - General Surgery; 
"^DD",373,373,.06,21,13,0)
402 - Cardiac Surgery; 
"^DD",373,373,.06,21,14,0)
403 - Otorhinolaryngology (ENT); 
"^DD",373,373,.06,21,15,0)
404 - Gynecology; 
"^DD",373,373,.06,21,16,0)
406 - Neurosurgery; 
"^DD",373,373,.06,21,17,0)
407 - Ophthalmology; 
"^DD",373,373,.06,21,18,0)
409 - Orthopedics; 
"^DD",373,373,.06,21,19,0)
410 - Plastic Surgery (inc. H&N); 
"^DD",373,373,.06,21,20,0)
411 - Podiatry; 
"^DD",373,373,.06,21,21,0)
412 - Proctology; 
"^DD",373,373,.06,21,22,0)
413 - Thoracic Surgery; 
"^DD",373,373,.06,21,23,0)
415 - Peripheral Vascular; 
"^DD",373,373,.06,21,24,0)
457 - Transplantation;
"^DD",373,373,.06,21,25,0)
  
"^DD",373,373,.06,21,26,0)
Radiology (based on Imaging Type):
"^DD",373,373,.06,21,27,0)
105 - General Radiology; 
"^DD",373,373,.06,21,28,0)
109 - Nuclear Medicine; 
"^DD",373,373,.06,21,29,0)
109 - Cardiology Studies (Nuc Med); 
"^DD",373,373,.06,21,30,0)
115 - Ultrasound; 
"^DD",373,373,.06,21,31,0)
150 - CT Scan; 
"^DD",373,373,.06,21,32,0)
151 - Magnetic Resonance Imaging; 
"^DD",373,373,.06,21,33,0)
152 - Angio-Neuro-Interventional; 
"^DD",373,373,.06,21,34,0)
421 - Vascular Lab; 
"^DD",373,373,.06,21,35,0)
703 - Mammography;
"^DD",373,373,.06,21,36,0)
  
"^DD",373,373,.06,21,37,0)
All CPT-based charges coming through PCE, which are not already associated
"^DD",373,373,.06,21,38,0)
with one of the Department Codes listed above, are assigned a Department 
"^DD",373,373,.06,21,39,0)
Code.  The Department Code assigned is the Stop Code associated (in the 
"^DD",373,373,.06,21,40,0)
HOSPITAL LOCATION file, #44) with the Hospital Location of the patient 
"^DD",373,373,.06,21,41,0)
visit/encounter.
"^DD",373,373,.06,"DT")
3050418
"^DD",373,373,.07,0)
SERVICE CODE^RF^^0;7^K:$L(X)>6!($L(X)<6) X
"^DD",373,373,.07,3)
Answer must be 6 characters in length.
"^DD",373,373,.07,21,0)
^.001^6^6^3050527^^^^
"^DD",373,373,.07,21,1,0)
The value for SERVICE CODE is taken from the PFSS SERVICE MASTER
"^DD",373,373,.07,21,2,0)
file (#374), SERVICE CODE field (#.01).
"^DD",373,373,.07,21,3,0)
 
"^DD",373,373,.07,21,4,0)
Selection of a SERVICE CODE from file #374 is based upon the
"^DD",373,373,.07,21,5,0)
CPT or HCPCS Code and Date of Service provided by the application
"^DD",373,373,.07,21,6,0)
sending data to the PFSS CHARGE CACHE file.
"^DD",373,373,.07,"DT")
3050224
"^DD",373,373,.08,0)
ORDER IEN^P100'^OR(100,^0;8^Q
"^DD",373,373,.08,21,0)
^.001^12^12^3050527^^^^
"^DD",373,373,.08,21,1,0)
The ORDER file (#100) internal entry number for the service order which
"^DD",373,373,.08,21,2,0)
resulted in this charge in PFSS.
"^DD",373,373,.08,21,3,0)
  
"^DD",373,373,.08,21,4,0)
All data provided to the PFSS CHARGE CACHE file by PCE will include
"^DD",373,373,.08,21,5,0)
the ORDER file IEN, if known by PCE.  If the charge is the result of a
"^DD",373,373,.08,21,6,0)
Radiology exam, then IBB will query OERR to obtain the PFSS Account
"^DD",373,373,.08,21,7,0)
Reference associated with the order IEN.  IBB will then convert that
"^DD",373,373,.08,21,8,0)
PFSS Account Reference to its external medical billing system
"^DD",373,373,.08,21,9,0)
equivalent using $$EXTNUM^IBBAACCT.  This external billing system
"^DD",373,373,.08,21,10,0)
number is included in the outbound charge message as a Secondary Visit
"^DD",373,373,.08,21,11,0)
Number, so that the Radiology charge can be related to back to the
"^DD",373,373,.08,21,12,0)
original outpatient visit or inpatient episode by the billing system.
"^DD",373,373,.08,"DT")
3050318
"^DD",373,373,.09,0)
CLINICAL EVENT ID^F^^0;9^K:$L(X)>18!($L(X)<3) X
"^DD",373,373,.09,3)
Answer must be 3-18 characters in length.
"^DD",373,373,.09,21,0)
^^7^7^3051103^
"^DD",373,373,.09,21,1,0)
The Clinical Event Identifier is passed to CHARGE^IBBAPI in IBBFT1(2).
"^DD",373,373,.09,21,2,0)
The free text data item is used by certain applications, such as PCE,
"^DD",373,373,.09,21,3,0)
as a way of linking billable items to a specific event (e.g., visit).
"^DD",373,373,.09,21,4,0)
  
"^DD",373,373,.09,21,5,0)
The format of the identifier is
"^DD",373,373,.09,21,6,0)
   <package_namespace>_<package_file_ien>
"^DD",373,373,.09,21,7,0)
  
"^DD",373,373,.09,"DT")
3051103
"^DD",373,373,.1,0)
DATE/TIME CREATED^RD^^0;10^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",373,373,.1,21,0)
^^1^1^3050426^
"^DD",373,373,.1,21,1,0)
The date/time at which the charge cache record was created.
"^DD",373,373,.1,"DT")
3050224
"^DD",373,373,.11,0)
HL7 MESSAGE ID^F^^0;11^K:$L(X)>24!($L(X)<3) X
"^DD",373,373,.11,1,0)
^.1
"^DD",373,373,.11,1,1,0)
373^AOX^MUMPS
"^DD",373,373,.11,1,1,1)
I X'="" D KAOX^IBBAADD(DA)
"^DD",373,373,.11,1,1,2)
Q
"^DD",373,373,.11,1,1,"DT")
3050418
"^DD",373,373,.11,3)
Answer must be 3-24 characters in length.
"^DD",373,373,.11,21,0)
^^4^4^3050426^
"^DD",373,373,.11,21,1,0)
he batch message identifier (from CREATE^HLTF) followed by a hyphen and
"^DD",373,373,.11,21,2,0)
the sequence number for the individual charge message.  Identifies the
"^DD",373,373,.11,21,3,0)
exact batch location in which data from this charge record is transmitted
"^DD",373,373,.11,21,4,0)
to the external medical billing system.
"^DD",373,373,.11,"DT")
3050418
"^DD",373,373,.2,0)
TEST PATIENT^S^1:YES;^0;20^Q
"^DD",373,373,.2,21,0)
^^2^2^3050511^
"^DD",373,373,.2,21,1,0)
If the DFN for this patient indicates a test patient as a result
"^DD",373,373,.2,21,2,0)
of a call to $$TESTPAT^VADPT, then this field is set to "YES".
"^DD",373,373,.2,23,0)
^^2^2^3050601^
"^DD",373,373,.2,23,1,0)
PFSS HL7 messages will not be constructed for any record in this
"^DD",373,373,.2,23,2,0)
file where TEST PATIENT = "YES".
"^DD",373,373,.2,"DT")
3050511
"^DD",373,373,3.03,0)
PROCEDURE CODE^RP81'^ICPT(^PR1;3^Q
"^DD",373,373,3.03,21,0)
^.001^9^9^3050531^^^^
"^DD",373,373,3.03,21,1,0)
Charge data being filed into the PFSS CHARGE CACHE comes from one of
"^DD",373,373,3.03,21,2,0)
three sources - Outpatient Pharmacy, Prosthetics, or PCE.
"^DD",373,373,3.03,21,3,0)
  
"^DD",373,373,3.03,21,4,0)
Charges passed to IBB via PCE are ultimately based on CPT Codes, 
"^DD",373,373,3.03,21,5,0)
while those from Prosthetics are based on HCPCS Codes, both of which
"^DD",373,373,3.03,21,6,0)
are found in the CPT file (#81).  This field holds the file #81
"^DD",373,373,3.03,21,7,0)
pointer related to the charge from PCE or Prosthetics.
"^DD",373,373,3.03,21,8,0)
  
"^DD",373,373,3.03,21,9,0)
Outpatient Pharmacy charges are not associated with file #81.
"^DD",373,373,3.03,23,0)
^.001^1^1^3050601^^^^
"^DD",373,373,3.03,23,1,0)
PFSS HL7 DFT message data; PR1 Segment, Sequence 3.
"^DD",373,373,3.03,"DT")
3050224
"^DD",373,373,3.05,0)
PROCEDURE DATE/TIME^RD^^PR1;5^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",373,373,3.05,21,0)
^^7^7^3050527^
"^DD",373,373,3.05,21,1,0)
Charge data being filed into the PFSS CHARGE CACHE comes from one of
"^DD",373,373,3.05,21,2,0)
three sources - Outpatient Pharmacy, Prosthetics, or PCE.
"^DD",373,373,3.05,21,3,0)
  
"^DD",373,373,3.05,21,4,0)
For charges passed to IBB via PCE this field contains the EVENT DATE
"^DD",373,373,3.05,21,5,0)
AND TIME (field #1201) from the V CPT file (#900010.18).
"^DD",373,373,3.05,21,6,0)
  
"^DD",373,373,3.05,21,7,0)
Outpatient Pharmacy and Prosthetics charges do not use this field.
"^DD",373,373,3.05,23,0)
^.001^1^1^3050601^^^
"^DD",373,373,3.05,23,1,0)
PFSS HL7 DFT message data; PR1 Segment, Sequence 5.
"^DD",373,373,3.05,"DT")
3050224
"^DD",373,373,3.06,0)
FUNCTIONAL TYPE^F^^PR1;6^K:$L(X)>1!($L(X)<1) X
"^DD",373,373,3.06,3)
Answer must be 1 character in length.
"^DD",373,373,3.06,21,0)
^.001^10^10^3050527^^^
"^DD",373,373,3.06,21,1,0)
Charge data being filed into the PFSS CHARGE CACHE comes from one of
"^DD",373,373,3.06,21,2,0)
three sources - Outpatient Pharmacy, Prosthetics, or PCE.
"^DD",373,373,3.06,21,3,0)
  
"^DD",373,373,3.06,21,4,0)
For charges passed to IBB by Prosthetics, this field contains a
"^DD",373,373,3.06,21,5,0)
coded-value as follows:
"^DD",373,373,3.06,21,6,0)
   O = Home Oxygen
"^DD",373,373,3.06,21,7,0)
   P = Purchasing
"^DD",373,373,3.06,21,8,0)
   I = Stock Issue
"^DD",373,373,3.06,21,9,0)
  
"^DD",373,373,3.06,21,10,0)
Outpatient Pharmacy and PCE charges do not use this field.
"^DD",373,373,3.06,23,0)
^.001^1^1^3050601^^^
"^DD",373,373,3.06,23,1,0)
PFSS HL7 ADT message data; PR1 Segment; Sequence 6.
"^DD",373,373,3.06,"DT")
3050527
"^DD",373,373,3.11,0)
SURGEON^P200'^VA(200,^PR1;11^Q
"^DD",373,373,3.11,21,0)
^.001^8^8^3050531^^^^
"^DD",373,373,3.11,21,1,0)
Charge data being filed into the PFSS CHARGE CACHE comes from one of
"^DD",373,373,3.11,21,2,0)
three sources - Outpatient Pharmacy, Prosthetics, or PCE.
"^DD",373,373,3.11,21,3,0)
  
"^DD",373,373,3.11,21,4,0)
If PCE passes to IBB charge data that originated in Surgery, then this
"^DD",373,373,3.11,21,5,0)
field provides the identity of the Principal Surgeon as a pointer to the
"^DD",373,373,3.11,21,6,0)
NEW PERSON file (#200).
"^DD",373,373,3.11,21,7,0)
  
"^DD",373,373,3.11,21,8,0)
Outpatient Pharmacy and Prosthetics charges do not use this field.
"^DD",373,373,3.11,23,0)
^.001^1^1^3050601^^^^
"^DD",373,373,3.11,23,1,0)
PFSS HL7 DFT message data; PR1 Segment, Sequence 11.
"^DD",373,373,3.11,"DT")
3050526
"^DD",373,373,3.12,0)
ATTENDING SURGEON^P200'^VA(200,^PR1;12^Q
"^DD",373,373,3.12,21,0)
^.001^8^8^3050527^^^
"^DD",373,373,3.12,21,1,0)
Charge data being filed into the PFSS CHARGE CACHE comes from one of
"^DD",373,373,3.12,21,2,0)
three sources - Outpatient Pharmacy, Prosthetics, or PCE.
"^DD",373,373,3.12,21,3,0)
  
"^DD",373,373,3.12,21,4,0)
If PCE passes to IBB charge data that originated in Surgery, then this
"^DD",373,373,3.12,21,5,0)
field provides the identity of the Attending Surgeon as a pointer to the
"^DD",373,373,3.12,21,6,0)
NEW PERSON file (#200).
"^DD",373,373,3.12,21,7,0)
  
"^DD",373,373,3.12,21,8,0)
Outpatient Pharmacy and Prosthetics charges do not use this field.
"^DD",373,373,3.12,23,0)
^.001^1^1^3050601^^^
"^DD",373,373,3.12,23,1,0)
PFSS HL7 DFT message data; PR1 Segment, Sequence 12.
"^DD",373,373,3.12,"DT")
3050526
"^DD",373,373,3.16,0)
PROCEDURE CODE MODIFIER(S)^F^^PR1;16^K:$L(X)>25!($L(X)<1) X
"^DD",373,373,3.16,3)
Answer must be 1-25 characters in length.
"^DD",373,373,3.16,21,0)
^.001^14^14^3050531^^^^
"^DD",373,373,3.16,21,1,0)
Charge data being filed into the PFSS CHARGE CACHE comes from one of
"^DD",373,373,3.16,21,2,0)
three sources - Outpatient Pharmacy, Prosthetics, or PCE.
"^DD",373,373,3.16,21,3,0)
  
"^DD",373,373,3.16,21,4,0)
Charges passed to IBB via PCE or from Prosthetics are based on codes
"^DD",373,373,3.16,21,5,0)
contained the CPT file (#81).  These CPT or HCPCS codes may be
"^DD",373,373,3.16,21,6,0)
"modified" by the sending application using codes found in the CPT
"^DD",373,373,3.16,21,7,0)
MODIFIER file (#81.3).
"^DD",373,373,3.16,21,8,0)
  
"^DD",373,373,3.16,21,9,0)
This field may contain one or more modifiers as a string of numbers
"^DD",373,373,3.16,21,10,0)
delimited by semi-colons; each number is a pointer to the CPT MODIFIER
"^DD",373,373,3.16,21,11,0)
file (#81.3).
"^DD",373,373,3.16,21,12,0)
Example: 68;245;74;318;
"^DD",373,373,3.16,21,13,0)
  
"^DD",373,373,3.16,21,14,0)
Outpatient Pharmacy charges do not use this field.
"^DD",373,373,3.16,23,0)
^.001^1^1^3050601^^^^
"^DD",373,373,3.16,23,1,0)
PFSS HL7 DFT message data; PR1 Segment, Sequence 16.
"^DD",373,373,3.16,"DT")
3050224
"^DD",373,373,4,0)
DIAGNOSIS^373.04A^^DG1;0
"^DD",373,373,4,21,0)
^.001^2^2^3050426^^
"^DD",373,373,4,21,1,0)
Multiple DG1 Segments are allowed within a DFT-PO3 message.  Each subrecord
"^DD",373,373,4,21,2,0)
in subfile #373.04 contains data for an individual DG1 Segment.
"^DD",373,373,5,0)
SC/EI CLASSIFICATION^373.05A^^ZCL;0
"^DD",373,373,5,21,0)
^^2^2^3050426^
"^DD",373,373,5,21,1,0)
Multiple ZCL Segments are allowed within a DFT-PO3 message.  Each
"^DD",373,373,5,21,2,0)
subrecord in subfile #373.05 contains data for an individual ZCL Segment.
"^DD",373,373,5,"DT")
3050304
"^DD",373,373,6.04,0)
TRANSACTION DATE^D^^FT1;4^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",373,373,6.04,21,0)
^.001^5^5^3050714^^
"^DD",373,373,6.04,21,1,0)
The definition of this data item depends upon the application that
"^DD",373,373,6.04,21,2,0)
is the originating source of the data.
"^DD",373,373,6.04,21,3,0)
PCE - Event Date and Time
"^DD",373,373,6.04,21,4,0)
OP PHARMACY - Fill Date or Refill Date
"^DD",373,373,6.04,21,5,0)
PROSTHETICS - Delivery Date
"^DD",373,373,6.04,23,0)
^.001^1^1^3050714^^^
"^DD",373,373,6.04,23,1,0)
PFSS HL7 DFT message data; FT1 Segment, Sequence 4.
"^DD",373,373,6.04,"DT")
3050714
"^DD",373,373,6.06,0)
TRANSACTION TYPE^RS^CG:CHARGE;CD:CREDIT;^FT1;6^Q
"^DD",373,373,6.06,21,0)
^.001^3^3^3050714^^^^
"^DD",373,373,6.06,21,1,0)
An indicator to the external medical billing system that tells
"^DD",373,373,6.06,21,2,0)
whether the data in this charge transaction should be handled as
"^DD",373,373,6.06,21,3,0)
a debit ("CG") or a credit ("CD") to the account.
"^DD",373,373,6.06,23,0)
^.001^1^1^3050714^^
"^DD",373,373,6.06,23,1,0)
PFSS HL7 DFT message data; FT1 Segment, Sequence 6.
"^DD",373,373,6.06,"DT")
3050224
"^DD",373,373,6.07,0)
CHARGE CODE^NJ9,0^^FT1;7^K:+X'=X!(X>999999999)!(X<100000000)!(X?.E1"."1N.N) X
"^DD",373,373,6.07,3)
Type a Number between 100000000 and 999999999, 0 Decimal Digits
"^DD",373,373,6.07,21,0)
^.001^3^3^3050601^^^
"^DD",373,373,6.07,21,1,0)
The value in this field descibes the charge and is formed by
"^DD",373,373,6.07,21,2,0)
concatenating the 6-digit SERVICE CODE (field #.07) to the
"^DD",373,373,6.07,21,3,0)
3-digit DEPARTMENT CODE (field #.06).
"^DD",373,373,6.07,23,0)
^^1^1^3050601^
"^DD",373,373,6.07,23,1,0)
PFSS HL7 DFT message data; FT1 Segment, Sequence 7.
"^DD",373,373,6.07,"DT")
3050511
"^DD",373,373,6.1,0)
TRANSACTION QUANTITY^NJ5,0^^FT1;10^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",373,373,6.1,3)
Type a Number between 1 and 99999, 0 Decimal Digits
"^DD",373,373,6.1,21,0)
^.001^2^2^3050601^^^^
"^DD",373,373,6.1,21,1,0)
This field will hold an integer value that describes the quantity
"^DD",373,373,6.1,21,2,0)
being charged.
"^DD",373,373,6.1,23,0)
^.001^1^1^3050601^^
"^DD",373,373,6.1,23,1,0)
PFSS HL7 DFT message data; FT1 Segment, Sequence 10.
"^DD",373,373,6.1,"DT")
3050224
"^DD",373,373,6.13,0)
DEPARTMENT CODE^RF^^FT1;13^K:$L(X)>3!($L(X)<3) X
"^DD",373,373,6.13,3)
Answer must be 3 characters in length.
"^DD",373,373,6.13,21,0)
^^3^3^3050601^
"^DD",373,373,6.13,21,1,0)
The 3-digit Department Code provided by the sending application.
"^DD",373,373,6.13,21,2,0)
The data value in this field is the same as in field #.06, DEPARTMENT.
"^DD",373,373,6.13,21,3,0)
It is placed here to simplify the message build.
"^DD",373,373,6.13,23,0)
^.001^1^1^3050601^^^
"^DD",373,373,6.13,23,1,0)
PFSS HL7 DFT message data; FT1 Segment, Sequence 13.
"^DD",373,373,6.13,"DT")
3050224
"^DD",373,373,6.16,0)
ASSIGNED PATIENT LOCATION^P44'^SC(^FT1;16^Q
"^DD",373,373,6.16,23,0)
^^1^1^3050601^
"^DD",373,373,6.16,23,1,0)
PFSS HL7 DFT message data; FT1 Segment, Sequence 16.
"^DD",373,373,6.16,"DT")
3050224
"^DD",373,373,6.18,0)
PATIENT TYPE^S^0:NOT RX COPAY EXEMPT;1:RX COPAY EXEMPT;^FT1;18^Q
"^DD",373,373,6.18,21,0)
^.001^3^3^3050601^^^
"^DD",373,373,6.18,21,1,0)
Used by Ooutpatient Pharmacy only; holds an indicator to show
"^DD",373,373,6.18,21,2,0)
whether the patient being charged for the prescription is "Rx Copay
"^DD",373,373,6.18,21,3,0)
Exempt" or "Not Exempt".
"^DD",373,373,6.18,23,0)
^.001^1^1^3050601^^
"^DD",373,373,6.18,23,1,0)
PFSS HL7 DFT message data; FT1 Segment; Sequence 18.
"^DD",373,373,6.18,"DT")
3050324
"^DD",373,373,6.2,0)
PERFORMED BY^P200'^VA(200,^FT1;20^Q
"^DD",373,373,6.2,21,0)
^^3^3^3050601^
"^DD",373,373,6.2,21,1,0)
Used for charge data from PCE only; a pointer to the NEW PERSON
"^DD",373,373,6.2,21,2,0)
file (#200) which supplies the identity of the Rendering Provider
"^DD",373,373,6.2,21,3,0)
for the procedure.
"^DD",373,373,6.2,23,0)
^.001^1^1^3050601^^
"^DD",373,373,6.2,23,1,0)
PFSS HL7 DFT message data; FT1 Segment, Sequence 20.
"^DD",373,373,6.2,"DT")
3050224
"^DD",373,373,6.21,0)
ORDERED BY^P200'^VA(200,^FT1;21^Q
"^DD",373,373,6.21,21,0)
^^3^3^3050601^
"^DD",373,373,6.21,21,1,0)
A pointer to the NEW PERSON file (#200) which supplies the identity of the 
"^DD",373,373,6.21,21,2,0)
Odering Provider for the CPT procedure, HCPCS item, or Prescription 
"^DD",373,373,6.21,21,3,0)
Fill/Refill.
"^DD",373,373,6.21,23,0)
^.001^1^1^3050601^^
"^DD",373,373,6.21,23,1,0)
PFSS HL7 DFT message data; FT1 Segment, Sequence 21.
"^DD",373,373,6.21,"DT")
3050713
"^DD",373,373,6.22,0)
UNIT COST^NJ8,2^^FT1;22^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999.99)!(X<0) X
"^DD",373,373,6.22,3)
Type a Dollar Amount between 0 and 99999.99, 2 Decimal Digits
"^DD",373,373,6.22,21,0)
^^2^2^3050601^
"^DD",373,373,6.22,21,1,0)
Used by Outpatient Pharmacy and Prosthetics to indicate the cost per
"^DD",373,373,6.22,21,2,0)
unit of the HCPCS item or pharmacy item being charged.
"^DD",373,373,6.22,23,0)
^.001^1^1^3050601^^
"^DD",373,373,6.22,23,1,0)
PFSS HL7 DFT message data; FT1 Segment, Sequence 22.
"^DD",373,373,6.22,"DT")
3050224
"^DD",373,373,6.29,0)
NDC^F^^FT1;29^K:$L(X)>65!($L(X)<3) X
"^DD",373,373,6.29,3)
Answer must be 3-65 characters in length.
"^DD",373,373,6.29,21,0)
^.001^5^5^3050601^^^^
"^DD",373,373,6.29,21,1,0)
Used by Outpatient Pharmacy only to provide the National Drug Code
"^DD",373,373,6.29,21,2,0)
and Generic Drug Name for the prescription being charged.
"^DD",373,373,6.29,21,3,0)
 
"^DD",373,373,6.29,21,4,0)
1st ";  piece is NDC Code and 2nd ";  piece is Generic Drug Name.
"^DD",373,373,6.29,21,5,0)
Example: 0258-3581-05;THEOPHYLLINE (THEOCHRON) 300MG SA TAB
"^DD",373,373,6.29,23,0)
^.001^1^1^3050601^^^^
"^DD",373,373,6.29,23,1,0)
PFSS HL7 DFT message data; FT1 Segment, Sequence 29.
"^DD",373,373,6.29,"DT")
3050324
"^DD",373,373,6.31,0)
TRANSACTION REF. KEY^S^1:PSO NSC RX COPAY;2:PSO SC RX COPAY;3:PSO NSC RX COPAY CANCEL;4:PSO NSC RX COPAY UPDATE;5:PSO SC RX COPAY CANCEL;6:PSO SC RX COPAY UPDATE;^FT1;31^Q
"^DD",373,373,6.31,21,0)
^.001^9^9^3050601^^^
"^DD",373,373,6.31,21,1,0)
Used by Outpatient Pharmacy only; indicates the type of copay
"^DD",373,373,6.31,21,2,0)
transaction that has been associated with the pharmacy item.
"^DD",373,373,6.31,21,3,0)
The following types are available:
"^DD",373,373,6.31,21,4,0)
PSO NSC RX COPAY; 
"^DD",373,373,6.31,21,5,0)
FOR PSO SC RX COPAY; 
"^DD",373,373,6.31,21,6,0)
FOR PSO NSC RX COPAY CANCEL; 
"^DD",373,373,6.31,21,7,0)
FOR PSO NSC RX COPAY UPDATE; 
"^DD",373,373,6.31,21,8,0)
FOR PSO SC RX COPAY CANCEL; 
"^DD",373,373,6.31,21,9,0)
FOR PSO SC RX COPAY UPDATE.
"^DD",373,373,6.31,23,0)
^.001^1^1^3050601^^
"^DD",373,373,6.31,23,1,0)
PFSS HL7 DFT message data; FT1 Segment; Sequence 31.
"^DD",373,373,6.31,"DT")
3050505
"^DD",373,373,7.01,0)
QUANTITY/TIMING^F^^RXE;1^K:$L(X)>12!($L(X)<3) X
"^DD",373,373,7.01,3)
Answer must be 3-12 characters in length.
"^DD",373,373,7.01,21,0)
^.001^5^5^3050601^^^
"^DD",373,373,7.01,21,1,0)
Used by Outpatient Pharmacy only to specify the Quantity and
"^DD",373,373,7.01,21,2,0)
Days Supply for the pharmacy item being charged.
"^DD",373,373,7.01,21,3,0)
 
"^DD",373,373,7.01,21,4,0)
1st ";" piece is Quantity and 3rd ";" piece is Days Supply.
"^DD",373,373,7.01,21,5,0)
Example:  180;;90
"^DD",373,373,7.01,23,0)
^.001^1^1^3050601^^^
"^DD",373,373,7.01,23,1,0)
PFSS HL7 DFT message data; RXE Segment; Sequence 1.
"^DD",373,373,7.01,"DT")
3050324
"^DD",373,373,7.15,0)
RX NUMBER^F^^RXE;15^K:$L(X)>20!($L(X)<1) X
"^DD",373,373,7.15,3)
Answer must be 1-20 characters in length.
"^DD",373,373,7.15,21,0)
^^3^3^3050613^
"^DD",373,373,7.15,21,1,0)
The Rx number for the presciption fill/refill being charged.
"^DD",373,373,7.15,21,2,0)
Data is taken from field #1.5 of the PFSS ACCOUNT file (#375)
"^DD",373,373,7.15,21,3,0)
record pointed to by field #.02 of this record.
"^DD",373,373,7.15,"DT")
3050613
"^DD",373,373,7.17,0)
REFILLS DISPENSED^NJ2,0^^RXE;17^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",373,373,7.17,3)
Type a Number between 0 and 99, 0 Decimal Digits
"^DD",373,373,7.17,21,0)
^^3^3^3050601^
"^DD",373,373,7.17,21,1,0)
Used by Outpatient Pharmacy only to indicate the number of refills
"^DD",373,373,7.17,21,2,0)
dispensed for the prescription being charged.  The charge data for the
"^DD",373,373,7.17,21,3,0)
original fill will show 0 in this field.
"^DD",373,373,7.17,23,0)
^.001^1^1^3050601^^
"^DD",373,373,7.17,23,1,0)
PFSS HL7 DFT message data; RXE Segment; Sequence 17.
"^DD",373,373,7.17,"DT")
3050324
"^DD",373,373,7.18,0)
DATE OF MOST RECENT FILL^D^^RXE;18^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",373,373,7.18,21,0)
^.001^2^2^3050601^^^
"^DD",373,373,7.18,21,1,0)
Used by Outpatient Pharmacy only to indicate the date/time of the
"^DD",373,373,7.18,21,2,0)
most recent fill for the prescription being charged.
"^DD",373,373,7.18,23,0)
^.001^1^1^3050601^^^^
"^DD",373,373,7.18,23,1,0)
PFSS HL7 DFT message data; RXE Segment; Sequence 18.
"^DD",373,373,7.18,"DT")
3050601
"^DD",373,373,7.31,0)
SUPPLEMENTARY CODE^F^^RXE;31^K:$L(X)>6!($L(X)<1) X
"^DD",373,373,7.31,3)
Answer must be 1-6 characters in length.
"^DD",373,373,7.31,21,0)
^^2^2^3050601^
"^DD",373,373,7.31,21,1,0)
Used by Outpatient Pharmacy only to send all DEA and Special
"^DD",373,373,7.31,21,2,0)
Handling codes associated with the prescription being charged.
"^DD",373,373,7.31,23,0)
^.001^1^1^3050601^^
"^DD",373,373,7.31,23,1,0)
PFSS HL7 DFT message data; RXE Segment; Sequence 31.
"^DD",373,373,7.31,"DT")
3050324
"^DD",373,373,11,0)
PROCEDURE TEXT^F^^11;1^K:$L(X)>200!($L(X)<3) X
"^DD",373,373,11,3)
Answer must be 3-200 characters in length.
"^DD",373,373,11,21,0)
^^3^3^3050601^
"^DD",373,373,11,21,1,0)
The calling application may provide data for this field that is
"^DD",373,373,11,21,2,0)
used to enhance or add detail to the CPT or HCPCS code provided in
"^DD",373,373,11,21,3,0)
field #3.03.
"^DD",373,373,11,23,0)
^.001^1^1^3050601^^^
"^DD",373,373,11,23,1,0)
PFSS HL7 DFT message data; PR1 Segment; Sequence 4.
"^DD",373,373,11,"DT")
3050505
"^DD",373,373,23.01,0)
VENDOR^P440'^PRC(440,^23;1^Q
"^DD",373,373,23.01,21,0)
^.001^3^3^3050601^^
"^DD",373,373,23.01,21,1,0)
Used for charges related to Prosthetics only; the Vendor associated with
"^DD",373,373,23.01,21,2,0)
the Prosthetics item.  Provided by Prosthetics as a pointer to 
"^DD",373,373,23.01,21,3,0)
the VENDOR file (#440).
"^DD",373,373,23.01,23,0)
^^1^1^3050601^
"^DD",373,373,23.01,23,1,0)
PFSS HL7 DFT message data; RQ1 Segment, Sequence 4.
"^DD",373,373,23.01,"DT")
3050317
"^DD",373,373,23.02,0)
OBL#^F^^23;2^K:$L(X)>30!($L(X)<1) X
"^DD",373,373,23.02,3)
Answer must be 1-30 characters in length.
"^DD",373,373,23.02,21,0)
^.001^2^2^3050601^^
"^DD",373,373,23.02,21,1,0)
Used for charges related to Prosthetics only; the OBL# associated with
"^DD",373,373,23.02,21,2,0)
the Prosthetics item.
"^DD",373,373,23.02,23,0)
^^1^1^3050601^
"^DD",373,373,23.02,23,1,0)
PFSS HL7 DFT message data; RQ1 Segment, Sequence 5.
"^DD",373,373,23.02,"DT")
3050317
"^DD",373,373,99.01,0)
STATUS^S^E:ERROR;^99;1^Q
"^DD",373,373,99.01,21,0)
^^2^2^3050426^
"^DD",373,373,99.01,21,1,0)
The status of the charge record.  A status of "Error  indicates that a
"^DD",373,373,99.01,21,2,0)
fatal HL7 error condition was encountered during batch charge processing.
"^DD",373,373,99.01,"DT")
3050224
"^DD",373,373,99.02,0)
ERROR TEXT^F^^99;2^K:$L(X)>200!($L(X)<3) X
"^DD",373,373,99.02,3)
Answer must be 3-200 characters in length.
"^DD",373,373,99.02,21,0)
^^3^3^3050426^
"^DD",373,373,99.02,21,1,0)
If a fatal HL7 error condition was encountered during batch charge
"^DD",373,373,99.02,21,2,0)
processing on this record, the HL7 error text will be placed in this
"^DD",373,373,99.02,21,3,0)
field.
"^DD",373,373,99.02,"DT")
3050426
"^DD",373,373,99.03,0)
ERROR DATE/TIME^D^^99;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",373,373,99.03,21,0)
^^3^3^3050426^
"^DD",373,373,99.03,21,1,0)
If a fatal HL7 error condition was encountered during batch charge
"^DD",373,373,99.03,21,2,0)
processing on this record, the error date/time will be placed in
"^DD",373,373,99.03,21,3,0)
this field.
"^DD",373,373,99.03,"DT")
3050426
"^DD",373,373.04,0)
DIAGNOSIS SUB-FIELD^^.06^3
"^DD",373,373.04,0,"DT")
3050420
"^DD",373,373.04,0,"IX","B",373.04,.01)

"^DD",373,373.04,0,"NM","DIAGNOSIS")

"^DD",373,373.04,0,"UP")
373
"^DD",373,373.04,.01,0)
SET ID^RNJ2,0^^0;1^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",373,373.04,.01,1,0)
^.1
"^DD",373,373.04,.01,1,1,0)
373.04^B
"^DD",373,373.04,.01,1,1,1)
S ^IBBAD(373,DA(1),"DG1","B",$E(X,1,30),DA)=""
"^DD",373,373.04,.01,1,1,2)
K ^IBBAD(373,DA(1),"DG1","B",$E(X,1,30),DA)
"^DD",373,373.04,.01,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",373,373.04,.01,21,0)
^.001^11^11^3050531^^^^
"^DD",373,373.04,.01,21,1,0)
Charge data being filed into the PFSS CHARGE CACHE comes from one of
"^DD",373,373.04,.01,21,2,0)
three sources - Outpatient Pharmacy, Prosthetics, or PCE.
"^DD",373,373.04,.01,21,3,0)
  
"^DD",373,373.04,.01,21,4,0)
Each application sending charge data to IBB will provide one or
"^DD",373,373.04,.01,21,5,0)
more related diagnoses.  If more than one, then these diagnoses
"^DD",373,373.04,.01,21,6,0)
are passed to IBB in priority order; i.e., the first diagnosis is
"^DD",373,373.04,.01,21,7,0)
the primary diagnosis related to the charge, the second diagnosis
"^DD",373,373.04,.01,21,8,0)
is the secondary diagnosis related to the charge, etc.  IBB files
"^DD",373,373.04,.01,21,9,0)
the data into subfile #373.04 in that same order.  This field
"^DD",373,373.04,.01,21,10,0)
indicates the exact order in which the diagnoses were received and
"^DD",373,373.04,.01,21,11,0)
filed.
"^DD",373,373.04,.01,23,0)
^.001^1^1^3050601^^^
"^DD",373,373.04,.01,23,1,0)
PFSS HL7 DFT message data; DG1 Segment, Sequence 1.
"^DD",373,373.04,.01,"DT")
3050224
"^DD",373,373.04,.03,0)
DIAGNOSIS CODE^RP80'^ICD9(^0;3^Q
"^DD",373,373.04,.03,21,0)
^.001^6^6^3050531^^
"^DD",373,373.04,.03,21,1,0)
Charge data being filed into the PFSS CHARGE CACHE comes from one of
"^DD",373,373.04,.03,21,2,0)
three sources - Outpatient Pharmacy, Prosthetics, or PCE.
"^DD",373,373.04,.03,21,3,0)
  
"^DD",373,373.04,.03,21,4,0)
The applications sending charge data to IBB will provide one or
"^DD",373,373.04,.03,21,5,0)
more related diagnoses.  Each diagnosis is provided as a pointer to
"^DD",373,373.04,.03,21,6,0)
the ICD DIAGNOSIS file (#80).
"^DD",373,373.04,.03,23,0)
^.001^1^1^3050601^^^^
"^DD",373,373.04,.03,23,1,0)
PFSS HL7 DFT message data; DG1 Segment, Sequence 3.
"^DD",373,373.04,.03,"DT")
3050224
"^DD",373,373.04,.06,0)
DIAGNOSIS TYPE^RS^A:ADMITTING;D:DISCHARGE;W:WORKING;F:FINAL;^0;6^Q
"^DD",373,373.04,.06,21,0)
^.001^3^3^3050531^^
"^DD",373,373.04,.06,21,1,0)
The applications passing charge data to IBB must define each diagnosis
"^DD",373,373.04,.06,21,2,0)
code included in the charge data as being one of the following:
"^DD",373,373.04,.06,21,3,0)
A(dmitting), W(orking), D(ischarging), or F(inal).
"^DD",373,373.04,.06,23,0)
^.001^1^1^3050601^^^
"^DD",373,373.04,.06,23,1,0)
PFSS HL7 DFT message data; DG1 Segment, Sequence 6.
"^DD",373,373.04,.06,"DT")
3050420
"^DD",373,373.05,0)
SC/EI CLASSIFICATION SUB-FIELD^^.03^3
"^DD",373,373.05,0,"DT")
3050526
"^DD",373,373.05,0,"NM","SC/EI CLASSIFICATION")

"^DD",373,373.05,0,"UP")
373
"^DD",373,373.05,.01,0)
SET ID^NJ1,0^^0;1^K:+X'=X!(X>9)!(X<1)!(X?.E1"."1N.N) X
"^DD",373,373.05,.01,1,0)
^.1^^0
"^DD",373,373.05,.01,3)
Type a Number between 1 and 9, 0 Decimal Digits
"^DD",373,373.05,.01,21,0)
^.001^4^4^3050531^^
"^DD",373,373.05,.01,21,1,0)
SC/EI Classification data related to the charge is usually a set of
"^DD",373,373.05,.01,21,2,0)
classification codes, which causes multiple records to be created in
"^DD",373,373.05,.01,21,3,0)
subfile #373.05.  The value in this field merely indicates the order
"^DD",373,373.05,.01,21,4,0)
in which the subfile record was created.
"^DD",373,373.05,.01,23,0)
^.001^1^1^3050601^^^^
"^DD",373,373.05,.01,23,1,0)
PFSS HL7 DFT message data; ZCL Segment, Sequence 1.
"^DD",373,373.05,.01,"DT")
3050714
"^DD",373,373.05,.02,0)
TYPE^S^1:AO;2:IR;3:SC;4:EC;5:MST;6:HNC;7:CV;8:SHAD;^0;2^Q
"^DD",373,373.05,.02,21,0)
^.001^2^2^3050531^^
"^DD",373,373.05,.02,21,1,0)
SC/EI Classification data related to the charge can only be one of
"^DD",373,373.05,.02,21,2,0)
the following types: AO, IR, SC, EC, MST, HNC, CV, or SHAD.
"^DD",373,373.05,.02,23,0)
^.001^1^1^3050601^^^^
"^DD",373,373.05,.02,23,1,0)
PFSS HL7 DFT message data; ZCL Segment, Sequence 2.
"^DD",373,373.05,.02,"DT")
3050526
"^DD",373,373.05,.03,0)
VALUE^S^1:YES;0:NO;^0;3^Q
"^DD",373,373.05,.03,21,0)
^.001^2^2^3050531^^
"^DD",373,373.05,.03,21,1,0)
SC/EI Classification data related to the charge can have any of the
"^DD",373,373.05,.03,21,2,0)
following values: Yes (1), No (0), or Unknown (null).
"^DD",373,373.05,.03,23,0)
^.001^1^1^3050601^^^^
"^DD",373,373.05,.03,23,1,0)
PFSS HL7 DFT message data; ZCL Segment, Sequence 3.
"^DD",373,373.05,.03,"DT")
3050304
"^DD",375,375,0)
FIELD^^1.51^39
"^DD",375,375,0,"DDA")
N
"^DD",375,375,0,"DT")
3050630
"^DD",375,375,0,"IX","AA",375,.03)

"^DD",375,375,0,"IX","C",375,.02)

"^DD",375,375,0,"IX","G",375.099,.04)

"^DD",375,375,0,"NM","PFSS ACCOUNT")

"^DD",375,375,0,"PT",45,15)

"^DD",375,375,0,"PT",52,125)

"^DD",375,375,0,"PT",52.1,21)

"^DD",375,375,0,"PT",75.1,90)

"^DD",375,375,0,"PT",100,97)

"^DD",375,375,0,"PT",130,500)

"^DD",375,375,0,"PT",350,.22)

"^DD",375,375,0,"PT",373,.02)

"^DD",375,375,0,"PT",405,.3)

"^DD",375,375,0,"PT",409.55,.04)

"^DD",375,375,0,"PT",660,100)

"^DD",375,375,0,"PT",665.194,101)

"^DD",375,375,0,"PT",665.723191,100)

"^DD",375,375,0,"PT",9000010,.26)

"^DD",375,375,.01,0)
ACCOUNT REFERENCE^RNJ9,0X^^0;1^S DINUM=X K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",375,375,.01,1,0)
^.1^^0
"^DD",375,375,.01,3)

"^DD",375,375,.01,21,0)
^.001^3^3^3050531^^^
"^DD",375,375,.01,21,1,0)
The number by which all VistA applications will reference an external
"^DD",375,375,.01,21,2,0)
medical billing system account number for purposes of attaching charges
"^DD",375,375,.01,21,3,0)
for 1st or 3rd party billing.
"^DD",375,375,.01,23,0)
^.001^2^2^3050531^^^
"^DD",375,375,.01,23,1,0)
The file is DINUM'd; the internal entry number and #.01 field are the
"^DD",375,375,.01,23,2,0)
same value.
"^DD",375,375,.01,"DT")
3050606
"^DD",375,375,.02,0)
EXTERNAL ACCOUNT NUMBER^F^^0;2^K:$L(X)>20!($L(X)<1) X
"^DD",375,375,.02,1,0)
^.1
"^DD",375,375,.02,1,1,0)
375^C
"^DD",375,375,.02,1,1,1)
S ^IBBAA(375,"C",$E(X,1,30),DA)=""
"^DD",375,375,.02,1,1,2)
K ^IBBAA(375,"C",$E(X,1,30),DA)
"^DD",375,375,.02,1,1,"DT")
3050401
"^DD",375,375,.02,3)
Answer must be 1-20 characters in length.
"^DD",375,375,.02,21,0)
^.001^2^2^3050531^^^
"^DD",375,375,.02,21,1,0)
The number provided by the external medical billing system for purposes
"^DD",375,375,.02,21,2,0)
of attaching charges for 1st or 3rd party billing.
"^DD",375,375,.02,23,0)
^.001^1^1^3050531^^
"^DD",375,375,.02,23,1,0)
PFSS HL7 ADT message data; PV1 Segment; Sequence 19.
"^DD",375,375,.02,"DT")
3050630
"^DD",375,375,.03,0)
PATIENT^RP2'X^DPT(^0;3^Q
"^DD",375,375,.03,1,0)
^.1^^-1
"^DD",375,375,.03,1,3,0)
375^AA
"^DD",375,375,.03,1,3,1)
S ^IBBAA(375,"AA",$E(X,1,30),DA)=""
"^DD",375,375,.03,1,3,2)
K ^IBBAA(375,"AA",$E(X,1,30),DA)
"^DD",375,375,.03,1,3,"%D",0)
^^4^4^3050615^
"^DD",375,375,.03,1,3,"%D",1,0)
The is a regular cross-reference by PATIENT (field #.03).  The principal
"^DD",375,375,.03,1,3,"%D",2,0)
purpose of this cross-reference is to allow the Patient Merge processor
"^DD",375,375,.03,1,3,"%D",3,0)
(Kernel) to operate efficiently in the event that patient's with
"^DD",375,375,.03,1,3,"%D",4,0)
records in file #375 are merged.
"^DD",375,375,.03,1,3,"DT")
3050615
"^DD",375,375,.03,21,0)
^.001^2^2^3050620^^^
"^DD",375,375,.03,21,1,0)
The Patient identifier associated with the billing account.
"^DD",375,375,.03,21,2,0)
An internal entry number to the PATIENT file (#2).
"^DD",375,375,.03,23,0)
^.001^16^16^3050620^^^^
"^DD",375,375,.03,23,1,0)
This pointer to the PATIENT file (#2) is used to construct the
"^DD",375,375,.03,23,2,0)
HL7 PID Segment for PFSS ADT messages.
"^DD",375,375,.03,23,3,0)
  
"^DD",375,375,.03,23,4,0)
Both the "AC" cross-reference, which uses field #1.03, and the "AF"
"^DD",375,375,.03,23,5,0)
cross-reference, which uses field #16.01, depend on field #.03.
"^DD",375,375,.03,23,6,0)
 
"^DD",375,375,.03,23,7,0)
S ^IBBAA(375,"AC",X1,X3,X2,DA)=""
"^DD",375,375,.03,23,8,0)
   where:  X1=field #.03
"^DD",375,375,.03,23,9,0)
           X2=field #1.03
"^DD",375,375,.03,23,10,0)
           X3=field #1.44
"^DD",375,375,.03,23,11,0)
  
"^DD",375,375,.03,23,12,0)
S ^IBBAA(375,"AF",X1,X3,X2,DA)=""
"^DD",375,375,.03,23,13,0)
   where:  X1=field #.03
"^DD",375,375,.03,23,14,0)
           X2=field #16.01
"^DD",375,375,.03,23,15,0)
           X3=field #1.44
"^DD",375,375,.03,23,16,0)
 
"^DD",375,375,.03,"DT")
3050620
"^DD",375,375,.04,0)
APPLICATION REFERENCE^F^^0;4^K:$L(X)>25!($L(X)<3) X
"^DD",375,375,.04,3)
Answer must be 3-25 characters in length.
"^DD",375,375,.04,21,0)
^.001^2^2^3050627^^^^
"^DD",375,375,.04,21,1,0)
This field value indicates where in application processing the
"^DD",375,375,.04,21,2,0)
GETACCT^IBBAPI function is called.
"^DD",375,375,.04,23,0)
^.001^1^1^3050531^^^^
"^DD",375,375,.04,23,1,0)
";"_<routine_name> or <tag>_";"_<routine_name>
"^DD",375,375,.04,"DT")
3050627
"^DD",375,375,.05,0)
EXTERNAL ACCT REC'D^D^^0;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",375,375,.05,21,0)
^.001^2^2^3050531^^
"^DD",375,375,.05,21,1,0)
The date/time at which the External Account Number was received and
"^DD",375,375,.05,21,2,0)
processed into file #375, field #.02.
"^DD",375,375,.05,"DT")
3050223
"^DD",375,375,.2,0)
TEST PATIENT^S^1:YES;^0;20^Q
"^DD",375,375,.2,21,0)
^.001^2^2^3050531^^
"^DD",375,375,.2,21,1,0)
If the DFN for this patient indicates a test patient as a result
"^DD",375,375,.2,21,2,0)
of a call to $$TESTPAT^VADPT, then this field is set to "YES".
"^DD",375,375,.2,23,0)
^.001^2^2^3050601^^
"^DD",375,375,.2,23,1,0)
PFSS HL7 messages will not be constructed for any record in this
"^DD",375,375,.2,23,2,0)
file where TEST PATIENT = "YES".
"^DD",375,375,.2,"DT")
3050511
"^DD",375,375,1.02,0)
PATIENT CLASS^RS^I:INPATIENT;O:OUTPATIENT;^PV1;2^Q
"^DD",375,375,1.02,21,0)
^.001^2^2^3050531^^
"^DD",375,375,1.02,21,1,0)
The Patient associated with this account is classified as either
"^DD",375,375,1.02,21,2,0)
"I" (Inpatient) or "O" (Outpatient).
"^DD",375,375,1.02,23,0)
^.001^1^1^3050531^^^
"^DD",375,375,1.02,23,1,0)
PFSS HL7 ADT and DFT message data; PV1 Segment; Sequence 2.
"^DD",375,375,1.02,"DT")
3050224
"^DD",375,375,1.03,0)
PATIENT LOCATION^P44'^SC(^PV1;3^Q
"^DD",375,375,1.03,21,0)
^.001^3^3^3050620^^^
"^DD",375,375,1.03,21,1,0)
The sending application provides a pointer to the HOSPITAL LOCATION
"^DD",375,375,1.03,21,2,0)
file (#44), which provides the a medical center location where
"^DD",375,375,1.03,21,3,0)
the patient visit took place or where service was provided.
"^DD",375,375,1.03,23,0)
^.001^9^9^3050620^^^^
"^DD",375,375,1.03,23,1,0)
PFSS HL7 ADT and DFT message data; PV1 Segment; Sequence 3.
"^DD",375,375,1.03,23,2,0)
  
"^DD",375,375,1.03,23,3,0)
The "AC" cross-reference uses field #1.03.
"^DD",375,375,1.03,23,4,0)
  
"^DD",375,375,1.03,23,5,0)
S ^IBBAA(375,"AC",X1,X3,X2,DA)=""
"^DD",375,375,1.03,23,6,0)
   where:  X1=field #.03
"^DD",375,375,1.03,23,7,0)
           X2=field #1.03
"^DD",375,375,1.03,23,8,0)
           X3=field #1.44
"^DD",375,375,1.03,23,9,0)
 
"^DD",375,375,1.03,"DT")
3050620
"^DD",375,375,1.04,0)
APPOINTMENT TYPE^P409.1'^SD(409.1,^PV1;4^Q
"^DD",375,375,1.04,21,0)
^^3^3^3050531^
"^DD",375,375,1.04,21,1,0)
If the account is setup for an actual outpatient visit (i.e., a
"^DD",375,375,1.04,21,2,0)
Scheduled appointment), this field will contain a pointer to the
"^DD",375,375,1.04,21,3,0)
APPOINTMENT TYPE file (#409.1).
"^DD",375,375,1.04,23,0)
^.001^1^1^3050531^^
"^DD",375,375,1.04,23,1,0)
PFSS HL7 ADT and DFT message data; PV1 Segment; Sequence 4.
"^DD",375,375,1.04,"DT")
3050224
"^DD",375,375,1.07,0)
ATTENDING PHYSICIAN^P200'^VA(200,^PV1;7^Q
"^DD",375,375,1.07,21,0)
^^2^2^3050531^
"^DD",375,375,1.07,21,1,0)
The sending application may provide data on the Attending Physician
"^DD",375,375,1.07,21,2,0)
or Ordering Provided as a pointer to the NEW PERSON file (#200).
"^DD",375,375,1.07,23,0)
^.001^1^1^3050531^^
"^DD",375,375,1.07,23,1,0)
PFSS HL7 ADT and DFT message data; PV1 Segment; Sequence 7.
"^DD",375,375,1.07,"DT")
3050224
"^DD",375,375,1.09,0)
CONSULTING PHYSICIAN^P200'^VA(200,^PV1;9^Q
"^DD",375,375,1.09,21,0)
^.001^3^3^3050531^^^
"^DD",375,375,1.09,21,1,0)
The sending application may provide data on the Consulting
"^DD",375,375,1.09,21,2,0)
Physician related to a patient visit as a pointer to the NEW
"^DD",375,375,1.09,21,3,0)
PERSON file (#200).
"^DD",375,375,1.09,23,0)
^^1^1^3050531^
"^DD",375,375,1.09,23,1,0)
PFSS HL7 ADT and DFT message data; PV1 Segment; Sequence 9.
"^DD",375,375,1.09,"DT")
3050224
"^DD",375,375,1.1,0)
PURPOSE OF VISIT^S^1:C&P;2:10-10;3:SV;4:UV;^PV1;10^Q
"^DD",375,375,1.1,21,0)
^^6^6^3050531^
"^DD",375,375,1.1,21,1,0)
This field may contain a code to indicate the general type of the
"^DD",375,375,1.1,21,2,0)
outpatient visit associated with this account:
"^DD",375,375,1.1,21,3,0)
   C&P = Compensation & Pension
"^DD",375,375,1.1,21,4,0)
   10-10 = Registration 10-10
"^DD",375,375,1.1,21,5,0)
   SV = Scheduled Visit
"^DD",375,375,1.1,21,6,0)
   UV = Unscheduled Visit.
"^DD",375,375,1.1,23,0)
^.001^1^1^3050531^^
"^DD",375,375,1.1,23,1,0)
PFSS HL7 ADT and DFT message data; PV1 Segment; Sequence 10.
"^DD",375,375,1.1,"DT")
3050224
"^DD",375,375,1.17,0)
ADMITTING PHYSICIAN^P200'^VA(200,^PV1;17^Q
"^DD",375,375,1.17,21,0)
^^4^4^3050531^
"^DD",375,375,1.17,21,1,0)
The sending application may provide data on the Admitting
"^DD",375,375,1.17,21,2,0)
Physician, Surgeon, or Primary Provider associated with the
"^DD",375,375,1.17,21,3,0)
visit/encounter.  The data is provided as a pointer to the
"^DD",375,375,1.17,21,4,0)
NEW PERSON file (#200).
"^DD",375,375,1.17,23,0)
^.001^1^1^3050531^^
"^DD",375,375,1.17,23,1,0)
PFSS HL7 ADT and DFT message data; PV1 Segment; Sequence 17.
"^DD",375,375,1.17,"DT")
3050224
"^DD",375,375,1.18,0)
PRIMARY STOP CODE^P40.7'^DIC(40.7,^PV1;18^Q
"^DD",375,375,1.18,21,0)
^.001^3^3^3050531^^
"^DD",375,375,1.18,21,1,0)
The sending application may provide a pointer to the CLINIC STOP
"^DD",375,375,1.18,21,2,0)
file (#40.7) in order to identify the Primary Stop Code associated
"^DD",375,375,1.18,21,3,0)
with the visit, encounter, or occasion of service.
"^DD",375,375,1.18,23,0)
^.001^1^1^3050531^^^
"^DD",375,375,1.18,23,1,0)
PFSS HL7 ADT and DFT message data; PV1 Segment; Sequence 18.
"^DD",375,375,1.18,"DT")
3050224
"^DD",375,375,1.25,0)
CHECK-IN DATE/TIME^D^^PV1;25^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",375,375,1.25,21,0)
^^2^2^3050531^
"^DD",375,375,1.25,21,1,0)
Normally only used when SCHEDULING is the sending application, this
"^DD",375,375,1.25,21,2,0)
indicates the date/time of the clinic visit check-in.
"^DD",375,375,1.25,23,0)
^.001^1^1^3050531^^
"^DD",375,375,1.25,23,1,0)
PFSS HL7 ADT and DFT message data; PV1 Segment; Sequence 25.
"^DD",375,375,1.25,"DT")
3050224
"^DD",375,375,1.41,0)
CREDIT STOP CODE^P40.7'^DIC(40.7,^PV1;41^Q
"^DD",375,375,1.41,21,0)
^^3^3^3050531^
"^DD",375,375,1.41,21,1,0)
The sending application may provide a pointer to the CLINIC STOP
"^DD",375,375,1.41,21,2,0)
file (#40.7) in order to identify the Credit Stop Code associated
"^DD",375,375,1.41,21,3,0)
with the visit, encounter, or occasion of service.
"^DD",375,375,1.41,23,0)
^.001^1^1^3050531^^
"^DD",375,375,1.41,23,1,0)
PFSS HL7 ADT and DFT message data; PV1 Segment; Sequence 41.
"^DD",375,375,1.41,"DT")
3050224
"^DD",375,375,1.44,0)
ADMIT DATE/TIME^DX^^PV1;44^D KAC144^IBBAADD(DA) S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",375,375,1.44,1,0)
^.1^^0
"^DD",375,375,1.44,21,0)
^^9^9^3050627^
"^DD",375,375,1.44,21,1,0)
The definition of this data element is dependent upon the application
"^DD",375,375,1.44,21,2,0)
that is the originating source of the data in the account record.
"^DD",375,375,1.44,21,3,0)
   SCHEDULING -- Appointment Date/Time
"^DD",375,375,1.44,21,4,0)
   PCE -- Visit Date/Time
"^DD",375,375,1.44,21,5,0)
   PTF/FEE BASIS -- Admit Date
"^DD",375,375,1.44,21,6,0)
   RADIOLOGY -- Date Exam Desired
"^DD",375,375,1.44,21,7,0)
   PROSTHETICS -- Entry Date
"^DD",375,375,1.44,21,8,0)
   OP PHARMACY -- Fill/Refill Date
"^DD",375,375,1.44,21,9,0)
   SURGERY -- Date of Operation
"^DD",375,375,1.44,23,0)
^.001^22^22^3050620^^^^
"^DD",375,375,1.44,23,1,0)
PFSS HL7 ADT and DFT message data; PV1 Segment; Sequence 44.
"^DD",375,375,1.44,23,2,0)
  
"^DD",375,375,1.44,23,3,0)
Both the "AC" cross-reference, which uses field #1.03, and the "AF"
"^DD",375,375,1.44,23,4,0)
cross-reference, which uses field #16.01, depend on field #1.44.  Some
"^DD",375,375,1.44,23,5,0)
input to $$GETACCT^IBBAPI does not contain a data for field #1.44.
"^DD",375,375,1.44,23,6,0)
An example would be input for a Pre-Admit (A05) message.  It contains
"^DD",375,375,1.44,23,7,0)
data for field #2.08 (Expected Admit Date/Time), but normally does
"^DD",375,375,1.44,23,8,0)
not contain data for field #1.44 (Admit Date/Time).  In these cases,
"^DD",375,375,1.44,23,9,0)
the data for field #2.08 is also placed in field #1.44, so that
"^DD",375,375,1.44,23,10,0)
field #1.44 will be non-null, and both "AC" and "AF" cross-references
"^DD",375,375,1.44,23,11,0)
can be set. 
"^DD",375,375,1.44,23,12,0)
  
"^DD",375,375,1.44,23,13,0)
S ^IBBAA(375,"AC",X1,X3,X2,DA)=""
"^DD",375,375,1.44,23,14,0)
   where:  X1=field #.03
"^DD",375,375,1.44,23,15,0)
           X2=field #1.03
"^DD",375,375,1.44,23,16,0)
           X3=field #1.44
"^DD",375,375,1.44,23,17,0)
  
"^DD",375,375,1.44,23,18,0)
S ^IBBAA(375,"AF",X1,X3,X2,DA)=""
"^DD",375,375,1.44,23,19,0)
   where:  X1=field #.03
"^DD",375,375,1.44,23,20,0)
           X2=field #16.01
"^DD",375,375,1.44,23,21,0)
           X3=field #1.44
"^DD",375,375,1.44,23,22,0)
  
"^DD",375,375,1.44,"DT")
3050627
"^DD",375,375,1.45,0)
DISCHARGE DATE/TIME^D^^PV1;45^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",375,375,1.45,21,0)
^^2^2^3050531^
"^DD",375,375,1.45,21,1,0)
Used only by Scheduling to indicate the Check-Out Date/Time for
"^DD",375,375,1.45,21,2,0)
the outpatient appointment.
"^DD",375,375,1.45,23,0)
^.001^1^1^3050531^^
"^DD",375,375,1.45,23,1,0)
PFSS HL7 ADT and DFT message data; PV1 Segment; Sequence 45.
"^DD",375,375,1.45,"DT")
3050224
"^DD",375,375,1.5,0)
ALTERNATE VISIT ID^F^^PV1;50^K:$L(X)>30!($L(X)<3) X
"^DD",375,375,1.5,3)
Answer must be 3-30 characters in length.
"^DD",375,375,1.5,21,0)
^^11^11^3050531^
"^DD",375,375,1.5,21,1,0)
Radiology   Secondary Visit Number; used for Radiology charges; the 
"^DD",375,375,1.5,21,2,0)
external billing system's Visit Number associated with the CPRS ORDER (#100)
"^DD",375,375,1.5,21,3,0)
for the outpatient or inpatient Radiology order.  
"^DD",375,375,1.5,21,4,0)
Concatenate ";;;;RAD  to numeric string.
"^DD",375,375,1.5,21,5,0)
 
"^DD",375,375,1.5,21,6,0)
Surgery   Surgical Case Number; used for Surgery account creation.  
"^DD",375,375,1.5,21,7,0)
Concatenate ";;;;SUR  to numeric string.
"^DD",375,375,1.5,21,8,0)
 
"^DD",375,375,1.5,21,9,0)
OP Pharmacy   IEN to PRESCRIPTION file (#52); used for Pharmacy account 
"^DD",375,375,1.5,21,10,0)
creation.  
"^DD",375,375,1.5,21,11,0)
Concatenate ";;;;OPP  to numeric string.
"^DD",375,375,1.5,23,0)
^^1^1^3050531^
"^DD",375,375,1.5,23,1,0)
PFSS HL7 ADT and DFT message data; PV1 Segment; Sequence 50.
"^DD",375,375,1.5,"DT")
3050517
"^DD",375,375,1.51,0)
WORKLOAD NON-COUNT^S^Y:WNC;N:WC;^PV1;51^Q
"^DD",375,375,1.51,21,0)
^.001^3^3^3051020^^
"^DD",375,375,1.51,21,1,0)
Normally only used when SCHEDULING is the sending application, this
"^DD",375,375,1.51,21,2,0)
defines the clinic location found in field #1.03 as "count" or
"^DD",375,375,1.51,21,3,0)
"non-count" for workload purposes.
"^DD",375,375,1.51,23,0)
^.001^1^1^3051020^^
"^DD",375,375,1.51,23,1,0)
PFSS HL7 ADT and DFT message data; PV1 Segment; Sequence 51.
"^DD",375,375,1.51,"DT")
3050608
"^DD",375,375,1.52,0)
OTHER PROVIDER^P200'^VA(200,^PV1;52^Q
"^DD",375,375,1.52,21,0)
^^2^2^3050531^
"^DD",375,375,1.52,21,1,0)
Data for an additional Provider to be supplied by the calling
"^DD",375,375,1.52,21,2,0)
application as a pointer to the NEW PERSON file (#200).
"^DD",375,375,1.52,23,0)
^.001^1^1^3050531^^
"^DD",375,375,1.52,23,1,0)
PFSS HL7 ADT and DFT message data; PV1 Segment; Sequence 52.
"^DD",375,375,1.52,"DT")
3050224
"^DD",375,375,2.07,0)
ELIGIBILITY OF VISIT^P8.1'^DIC(8.1,^PV2;7^Q
"^DD",375,375,2.07,21,0)
^^4^4^3050531^
"^DD",375,375,2.07,21,1,0)
Only used by SCHEDULING or PCE to indicate the patient's Eligibility
"^DD",375,375,2.07,21,2,0)
related to the outpatient visit with which this account record is 
"^DD",375,375,2.07,21,3,0)
associated.  Data is provided as a pointer to the MAS ELIGIBILITY
"^DD",375,375,2.07,21,4,0)
CODE file (#8.1).
"^DD",375,375,2.07,23,0)
^.001^1^1^3050531^^^
"^DD",375,375,2.07,23,1,0)
PFSS HL7 ADT or DFT message data; PV2 Segment, Sequence 7.
"^DD",375,375,2.07,"DT")
3050224
"^DD",375,375,2.08,0)
EXPECTED ADMIT DATE/TIME^DX^^PV2;8^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",375,375,2.08,1,0)
^.1^^0
"^DD",375,375,2.08,21,0)
^.001^6^6^3050607^^^
"^DD",375,375,2.08,21,1,0)
The definition of this data element is dependent upon the application
"^DD",375,375,2.08,21,2,0)
that is the originating source of the data.
"^DD",375,375,2.08,21,3,0)
   SCHEDULING -- Appointment Date/Time
"^DD",375,375,2.08,21,4,0)
   PROSTHETICS -- Entry Date/Time
"^DD",375,375,2.08,21,5,0)
   SURGERY -- Planned Date of Operation
"^DD",375,375,2.08,21,6,0)
   RADIOLOGY -- Date Desired for Exam
"^DD",375,375,2.08,23,0)
^^1^1^3050607^
"^DD",375,375,2.08,23,1,0)
PFSS HL7 ADT or DFT message data; PV2 Segment, Sequence 8.
"^DD",375,375,2.08,"DT")
3050607
"^DD",375,375,2.24,0)
APPOINTMENT STATUS^S^R:SCHEDULED/KEPT;I:INPATIENT;NS:NO-SHOW;NSR:NO-SHOW/RESCHEDULED;CP:CANCELLED BY PATIENT;CPR:CANCELLED BY PATIENT/RESCHEDULED;CC:CANCELLED BY CLINIC;CCR:CANCELLED BY CLINIC/RESCHEDULED;NT:NO ACTION TAKEN;^PV2;24^Q
"^DD",375,375,2.24,23,0)
^^1^1^3050531^
"^DD",375,375,2.24,23,1,0)
PFSS HL7 ADT or DFT message data; PV2 Segment, Sequence 24.
"^DD",375,375,2.24,"DT")
3050224
"^DD",375,375,2.46,0)
PT STATUS EFFECTIVE DATE^D^^PV2;46^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",375,375,2.46,21,0)
^.001^4^4^3050713^^^
"^DD",375,375,2.46,21,1,0)
The definition of this data element is dependent upon the application
"^DD",375,375,2.46,21,2,0)
that is the originating source of the data.
"^DD",375,375,2.46,21,3,0)
   SCHEDULING - Date Appointment Made.
"^DD",375,375,2.46,21,4,0)
   PROSTHETICS - Date Ordered/Suspense Date.
"^DD",375,375,2.46,23,0)
^.001^1^1^3050713^^^^
"^DD",375,375,2.46,23,1,0)
PFSS HL7 ADT or DFT message data; PV2 Segment, Sequence 46.
"^DD",375,375,2.46,"DT")
3050317
"^DD",375,375,3.03,0)
PROCEDURE CODE^P81'^ICPT(^PR1;3^Q
"^DD",375,375,3.03,21,0)
^^4^4^3050627^
"^DD",375,375,3.03,21,1,0)
The applications sending account data to IBB may provide a purpose
"^DD",375,375,3.03,21,2,0)
for the visit, encounter, or occasion of service, in the form of a
"^DD",375,375,3.03,21,3,0)
pointer value to the CPT file (#81).  The pointer is used to derive
"^DD",375,375,3.03,21,4,0)
a specific CPT or HCPCS code.
"^DD",375,375,3.03,23,0)
^.001^1^1^3050601^^^^
"^DD",375,375,3.03,23,1,0)
PFSS HL7 ADT message data; PR1 Segment, Sequence 3.
"^DD",375,375,3.03,"DT")
3050627
"^DD",375,375,3.06,0)
FUNCTIONAL TYPE^F^^PR1;6^K:$L(X)>4!($L(X)<1) X
"^DD",375,375,3.06,3)
Answer must be 1-4 characters in length.
"^DD",375,375,3.06,21,0)
^.001^15^15^3050713^^
"^DD",375,375,3.06,21,1,0)
Radiology - Imaging Type Abbreviation.
"^DD",375,375,3.06,21,2,0)
   ANI  = ANGIO/NEURO/INTERVENTIONAL
"^DD",375,375,3.06,21,3,0)
   CARD = CARDIOLOGY STUDIES (NUC MED)
"^DD",375,375,3.06,21,4,0)
   CT   = CT SCAN
"^DD",375,375,3.06,21,5,0)
   RAD  = GENERAL RADIOLOGY
"^DD",375,375,3.06,21,6,0)
   MRI  = MAGNETIC RESONANCE IMAGING
"^DD",375,375,3.06,21,7,0)
   MAM  = MAMMOGRAPHY
"^DD",375,375,3.06,21,8,0)
   NM   = NUCLEAR MEDICINE
"^DD",375,375,3.06,21,9,0)
   US   = ULTRASOUND
"^DD",375,375,3.06,21,10,0)
   VAS  = VASCULAR LAB
"^DD",375,375,3.06,21,11,0)
  
"^DD",375,375,3.06,21,12,0)
Prosthetics - Prosthetics Flag.
"^DD",375,375,3.06,21,13,0)
   O = Home Oxygen
"^DD",375,375,3.06,21,14,0)
   P = Purchasing
"^DD",375,375,3.06,21,15,0)
   I = Stock Issue
"^DD",375,375,3.06,23,0)
^.001^1^1^3050713^^^^
"^DD",375,375,3.06,23,1,0)
PFSS HL7 ADT message data; PR1 Segment, Sequence 6.
"^DD",375,375,3.06,"DT")
3050318
"^DD",375,375,3.11,0)
SURGEON^P200'^VA(200,^PR1;11^Q
"^DD",375,375,3.11,21,0)
^.001^3^3^3050531^^^^
"^DD",375,375,3.11,21,1,0)
If SURGERY passes to IBB data for setup of an account, then this field
"^DD",375,375,3.11,21,2,0)
provides the identity of the Principal Surgeon as a pointer to the
"^DD",375,375,3.11,21,3,0)
NEW PERSON file (#200).
"^DD",375,375,3.11,23,0)
^.001^1^1^3050531^^
"^DD",375,375,3.11,23,1,0)
PFSS HL7 ADT message data; PR1 Segment; Sequence 11.
"^DD",375,375,3.11,"DT")
3050318
"^DD",375,375,3.16,0)
PROCEDURE CODE MODIFIER(S)^F^^PR1;16^K:$L(X)>25!($L(X)<1) X
"^DD",375,375,3.16,3)
Answer must be 1-25 characters in length.
"^DD",375,375,3.16,21,0)
^.001^5^5^3050531^^^^
"^DD",375,375,3.16,21,1,0)
Data may only be contained here if field #3.03 holds a pointer to
"^DD",375,375,3.16,21,2,0)
the CPT file (#81), which may be resolved to a CPT or HCPCS code.
"^DD",375,375,3.16,21,3,0)
A string of numbers delimited by semi-colons; each number is a pointer to
"^DD",375,375,3.16,21,4,0)
the CPT MODIFIER file (#81.3).
"^DD",375,375,3.16,21,5,0)
Example: 68;245;74;318;
"^DD",375,375,3.16,23,0)
^.001^1^1^3050531^^^^
"^DD",375,375,3.16,23,1,0)
PFSS HL7 ADT message data; PR1 Segment; Sequence 16.
"^DD",375,375,3.16,"DT")
3050224
"^DD",375,375,4,0)
DIAGNOSIS^375.04A^^DG1;0
"^DD",375,375,4,21,0)
^.001^2^2^3050531^^
"^DD",375,375,4,21,1,0)
Multiple DG1 Segments are allowed within an ADT message.  Each subrecord
"^DD",375,375,4,21,2,0)
in subfile #375.04 contains data for an individual DG1 Segment.
"^DD",375,375,5,0)
SC/EI CLASSIFICATION^375.05A^^ZCL;0
"^DD",375,375,5,21,0)
^^2^2^3050426^
"^DD",375,375,5,21,1,0)
Multiple ZCL Segments are allowed within an ADT message.  Each subrecord
"^DD",375,375,5,21,2,0)
in subfile #375.05 contains data for an individual ZCL Segment.
"^DD",375,375,11,0)
PROCEDURE TEXT^F^^11;1^K:$L(X)>200!($L(X)<3) X
"^DD",375,375,11,3)
Answer must be 3-200 characters in length.
"^DD",375,375,11,21,0)
^.001^7^7^3050531^^^^
"^DD",375,375,11,21,1,0)
If the application calling GETACCT^IBBAPI does not yet have Procedure
"^DD",375,375,11,21,2,0)
data as a pointer to the CPT file (#81), then Procedure may be supplied as
"^DD",375,375,11,21,3,0)
free text.
"^DD",375,375,11,21,4,0)
  
"^DD",375,375,11,21,5,0)
The calling application may also provide data for this field that is
"^DD",375,375,11,21,6,0)
used to enhance or add detail to the CPT or HCPCS code provided in
"^DD",375,375,11,21,7,0)
field #3.03.
"^DD",375,375,11,23,0)
^.001^1^1^3050531^^^^
"^DD",375,375,11,23,1,0)
PFSS HL7 ADT message data; PR1 Segment; Sequence 4.
"^DD",375,375,11,"DT")
3050302
"^DD",375,375,12,0)
DIAGNOSIS TEXT^F^^12;1^K:$L(X)>200!($L(X)<3) X
"^DD",375,375,12,3)
Answer must be 3-200 characters in length.
"^DD",375,375,12,21,0)
^.001^3^3^3050531^^^^
"^DD",375,375,12,21,1,0)
If the application calling GETACCT^IBBAPI does not yet have Diagnosis data
"^DD",375,375,12,21,2,0)
as a pointer to the ICD DIAGNOSIS file (#80), then Diagnosis may be supplied
"^DD",375,375,12,21,3,0)
as free text.
"^DD",375,375,12,23,0)
^.001^1^1^3050531^^^^
"^DD",375,375,12,23,1,0)
PFSS HL7 ADT message data; DG1 Segment; Sequence 4.
"^DD",375,375,12,"DT")
3050609
"^DD",375,375,13,0)
FACILITY ID^P40.8'^DG(40.8,^13;1^Q
"^DD",375,375,13,21,0)
^.001^2^2^3050531^^
"^DD",375,375,13,21,1,0)
Identifies the facility (i.e., medical center division) associated
"^DD",375,375,13,21,2,0)
with the patient service.
"^DD",375,375,13,23,0)
^.001^1^1^3050531^^
"^DD",375,375,13,23,1,0)
PFSS HL7 ADT message data; EVN Segment; Sequence 6.
"^DD",375,375,13,"DT")
3050309
"^DD",375,375,14.01,0)
SURGICAL CASE #^P130'^SRF(^14;1^Q
"^DD",375,375,14.01,21,0)
^.001^1^1^3050531^^
"^DD",375,375,14.01,21,1,0)
Surgical Case # for any account setup by Surgery package.
"^DD",375,375,14.01,23,0)
^.001^1^1^3050531^^
"^DD",375,375,14.01,23,1,0)
PFSS HL7 ADT message data; PV1 Segment; Sequence 50.
"^DD",375,375,14.01,"DT")
3050309
"^DD",375,375,14.02,0)
SURGICAL SPECIALTY^P45.3'^DIC(45.3,^14;2^Q
"^DD",375,375,14.02,21,0)
^.001^1^1^3050531^^
"^DD",375,375,14.02,21,1,0)
Surgical Specialty for any account setup by Surgery package.
"^DD",375,375,14.02,23,0)
^.001^1^1^3050531^^
"^DD",375,375,14.02,23,1,0)
PFSS HL7 ADT message data; PV2 Segment; Sequence 12.
"^DD",375,375,14.02,"DT")
3050309
"^DD",375,375,15.01,0)
RADIOLOGY CLINICAL HX^P75.1'^RAO(75.1,^15;1^Q
"^DD",375,375,15.01,21,0)
^.001^2^2^3050531^^
"^DD",375,375,15.01,21,1,0)
The Clinical History for the Radiology exam can be obtained by using this
"^DD",375,375,15.01,21,2,0)
pointer value to the RAD/NUC MED ORDERS file (#75.1).
"^DD",375,375,15.01,23,0)
^.001^1^1^3050531^^
"^DD",375,375,15.01,23,1,0)
PFSS HL7 ADT message data; OBX Segment; Sequence 5.
"^DD",375,375,15.01,"DT")
3050318
"^DD",375,375,16.01,0)
OUTSIDE LOCATION^F^^16;1^K:$L(X)>50!($L(X)<2) X
"^DD",375,375,16.01,1,0)
^.1^^0
"^DD",375,375,16.01,3)
Answer must be 2-50 characters in length.
"^DD",375,375,16.01,21,0)
^.001^6^6^3050620^^^^
"^DD",375,375,16.01,21,1,0)
If the Patient Location for the visit/encounter/service is outside
"^DD",375,375,16.01,21,2,0)
the VAMC, then the name of that location is stored here as free text.
"^DD",375,375,16.01,21,3,0)
  
"^DD",375,375,16.01,21,4,0)
For A01 event messages related to inpatient admissions to outside
"^DD",375,375,16.01,21,5,0)
hospitals, the PTF application will use "FEE BASIS" as a generic
"^DD",375,375,16.01,21,6,0)
location descriptor.
"^DD",375,375,16.01,23,0)
^.001^9^9^3050620^^^^
"^DD",375,375,16.01,23,1,0)
PFSS HL7 ADT message data; PV1 Segment; Sequence 3.
"^DD",375,375,16.01,23,2,0)
 
"^DD",375,375,16.01,23,3,0)
The "AF" cross-reference uses field #16.01.
"^DD",375,375,16.01,23,4,0)
 
"^DD",375,375,16.01,23,5,0)
S ^IBBAA(375,"AF",X1,X3,X2,DA)=""
"^DD",375,375,16.01,23,6,0)
   where:  X1=field #.03
"^DD",375,375,16.01,23,7,0)
           X2=field #16.01
"^DD",375,375,16.01,23,8,0)
           X3=field #1.44
"^DD",375,375,16.01,23,9,0)
 
"^DD",375,375,16.01,"DT")
3050620
"^DD",375,375,99,0)
EVENT HISTORY^375.099DA^^99;0
"^DD",375,375,99,21,0)
^.001^2^2^3050531^^
"^DD",375,375,99,21,1,0)
This subfile stores a history of the HL7 ADT events that are sent/received
"^DD",375,375,99,21,2,0)
for this PFSS ACCOUNT record.
"^DD",375,375.04,0)
DIAGNOSIS SUB-FIELD^^.06^3
"^DD",375,375.04,0,"DT")
3050420
"^DD",375,375.04,0,"IX","B",375.04,.01)

"^DD",375,375.04,0,"NM","DIAGNOSIS")

"^DD",375,375.04,0,"UP")
375
"^DD",375,375.04,.01,0)
SET ID^NJ2,0^^0;1^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",375,375.04,.01,1,0)
^.1
"^DD",375,375.04,.01,1,1,0)
375.04^B
"^DD",375,375.04,.01,1,1,1)
S ^IBBAA(375,DA(1),"DG1","B",$E(X,1,30),DA)=""
"^DD",375,375.04,.01,1,1,2)
K ^IBBAA(375,DA(1),"DG1","B",$E(X,1,30),DA)
"^DD",375,375.04,.01,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",375,375.04,.01,21,0)
^^11^11^3050627^
"^DD",375,375.04,.01,21,1,0)
Unique, sequential integer.  The Diagnosis with SET ID=1 should be 
"^DD",375,375.04,.01,21,2,0)
interpreted as the Primary Diagnosis.
"^DD",375,375.04,.01,21,3,0)
  
"^DD",375,375.04,.01,21,4,0)
Each application sending account data to IBB may provide one or
"^DD",375,375.04,.01,21,5,0)
more related diagnoses.  If more than one, then these diagnoses
"^DD",375,375.04,.01,21,6,0)
are passed to IBB in priority order; i.e., the first diagnosis is
"^DD",375,375.04,.01,21,7,0)
the primary diagnosis related to the charge, the second diagnosis
"^DD",375,375.04,.01,21,8,0)
is the secondary diagnosis related to the charge, etc.  IBB files
"^DD",375,375.04,.01,21,9,0)
the data into subfile #375.04 in that same order.  This field
"^DD",375,375.04,.01,21,10,0)
indicates the exact order in which the diagnoses were received and
"^DD",375,375.04,.01,21,11,0)
filed.
"^DD",375,375.04,.01,"DT")
3050627
"^DD",375,375.04,.03,0)
DIAGNOSIS CODE^RP80'^ICD9(^0;3^Q
"^DD",375,375.04,.03,21,0)
^.001^3^3^3050531^^^^
"^DD",375,375.04,.03,21,1,0)
The applications sending account data to IBB may provide one or
"^DD",375,375.04,.03,21,2,0)
more related diagnoses.  Each diagnosis is provided as a pointer to
"^DD",375,375.04,.03,21,3,0)
the ICD DIAGNOSIS file (#80).
"^DD",375,375.04,.03,23,0)
^.001^1^1^3050531^^
"^DD",375,375.04,.03,23,1,0)
PFSS HL7 ADT message data; DG1 Segment, Sequence 3.
"^DD",375,375.04,.03,"DT")
3050224
"^DD",375,375.04,.06,0)
DIAGNOSIS TYPE^RS^A:ADMITTING;D:DISCHARGE;W:WORKING;F:FINAL;^0;6^Q
"^DD",375,375.04,.06,21,0)
^^3^3^3050531^
"^DD",375,375.04,.06,21,1,0)
The applications passing account data to IBB must define each diagnosis
"^DD",375,375.04,.06,21,2,0)
code included in the charge data as being one of the following:
"^DD",375,375.04,.06,21,3,0)
A(dmitting), W(orking), D(ischarging), or F(inal).
"^DD",375,375.04,.06,23,0)
^.001^1^1^3050531^^
"^DD",375,375.04,.06,23,1,0)
PFSS HL7 ADT message data; DG1 Segment, Sequence 6.
"^DD",375,375.04,.06,"DT")
3050420
"^DD",375,375.05,0)
SC/EI CLASSIFICATION SUB-FIELD^^.03^3
"^DD",375,375.05,0,"DT")
3050526
"^DD",375,375.05,0,"NM","SC/EI CLASSIFICATION")

"^DD",375,375.05,0,"UP")
375
"^DD",375,375.05,.01,0)
SET ID^NJ1,0^^0;1^K:+X'=X!(X>9)!(X<1)!(X?.E1"."1N.N) X
"^DD",375,375.05,.01,1,0)
^.1^^0
"^DD",375,375.05,.01,3)
Type a Number between 1 and 9, 0 Decimal Digits
"^DD",375,375.05,.01,21,0)
^.001^4^4^3050531^^^^
"^DD",375,375.05,.01,21,1,0)
SC/EI Classification data related to the charge is usually a set of
"^DD",375,375.05,.01,21,2,0)
classification codes, which causes multiple records to be created in
"^DD",375,375.05,.01,21,3,0)
subfile #375.05.  The value in this field merely indicates the order
"^DD",375,375.05,.01,21,4,0)
in which the subfile record was created.
"^DD",375,375.05,.01,23,0)
^.001^1^1^3050531^^^^
"^DD",375,375.05,.01,23,1,0)
PFSS HL7 ADT message data; ZCL Segment; Sequence 1.
"^DD",375,375.05,.01,"DT")
3050712
"^DD",375,375.05,.02,0)
TYPE^S^1:AO;2:IR;3:SC;4:EC;5:MST;6:HNC;7:CV;8:SHAD;^0;2^Q
"^DD",375,375.05,.02,21,0)
^.001^2^2^3050531^^^
"^DD",375,375.05,.02,21,1,0)
SC/EI Classification data related to the charge can only be one of
"^DD",375,375.05,.02,21,2,0)
the following types: AO, IR, SC, EC, MST, HNC, CV, or SHAD.
"^DD",375,375.05,.02,23,0)
^^1^1^3050531^
"^DD",375,375.05,.02,23,1,0)
PFSS HL7 ADT message data; ZCL Segment; Sequence 2.
"^DD",375,375.05,.02,"DT")
3050526
"^DD",375,375.05,.03,0)
VALUE^S^1:YES;0:NO;^0;3^Q
"^DD",375,375.05,.03,21,0)
^.001^2^2^3050531^^
"^DD",375,375.05,.03,21,1,0)
SC/EI Classification data related to the charge can have any of the
"^DD",375,375.05,.03,21,2,0)
following values: Yes (1), No (0), or Unknown (null).
"^DD",375,375.05,.03,23,0)
^^1^1^3050531^
"^DD",375,375.05,.03,23,1,0)
PFSS HL7 ADT message data; ZCL Segment; Sequence 3.
"^DD",375,375.05,.03,"DT")
3050304
"^DD",375,375.099,0)
EVENT HISTORY SUB-FIELD^^.04^4
"^DD",375,375.099,0,"DT")
3050428
"^DD",375,375.099,0,"IX","B",375.099,.01)

"^DD",375,375.099,0,"NM","EVENT HISTORY")

"^DD",375,375.099,0,"UP")
375
"^DD",375,375.099,.01,0)
CREATE DATE/TIME^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",375,375.099,.01,1,0)
^.1
"^DD",375,375.099,.01,1,1,0)
375.099^B
"^DD",375,375.099,.01,1,1,1)
S ^IBBAA(375,DA(1),99,"B",$E(X,1,30),DA)=""
"^DD",375,375.099,.01,1,1,2)
K ^IBBAA(375,DA(1),99,"B",$E(X,1,30),DA)
"^DD",375,375.099,.01,3)

"^DD",375,375.099,.01,21,0)
^.001^1^1^3050627^^^
"^DD",375,375.099,.01,21,1,0)
Date/time at which the subrecord was created. 
"^DD",375,375.099,.01,23,0)
^^10^10^3050627^
"^DD",375,375.099,.01,23,1,0)
This may represent any of the following:
"^DD",375,375.099,.01,23,2,0)
(1) The date/time at which the VistA application called the GETACCT^IBBAPI
"^DD",375,375.099,.01,23,3,0)
    in order to send data to the external billing system for the purpose of
"^DD",375,375.099,.01,23,4,0)
    either establishing a new account/visit or updating an existing 
"^DD",375,375.099,.01,23,5,0)
    account/visit.
"^DD",375,375.099,.01,23,6,0)
(2) The date/time at which an ADT message was sent to the external billing 
"^DD",375,375.099,.01,23,7,0)
    system via the outbound HL7 interface after processing by EN^IBBAADTO.
"^DD",375,375.099,.01,23,8,0)
(3) The date/time at which an ADT message was received from the external 
"^DD",375,375.099,.01,23,9,0)
    billing system and processed by EN^IBBAADTI via the inbound HL7
"^DD",375,375.099,.01,23,10,0)
    interface.
"^DD",375,375.099,.01,"DT")
3050627
"^DD",375,375.099,.02,0)
HL7 EVENT^RF^^0;2^K:$L(X)>3!($L(X)<3) X
"^DD",375,375.099,.02,3)
Answer must be 3 characters in length.
"^DD",375,375.099,.02,21,0)
^.001^2^2^3050531^^^
"^DD",375,375.099,.02,21,1,0)
The HL7 ADT event code, which may be one of the following:
"^DD",375,375.099,.02,21,2,0)
A01, A03, A04, A05, A08, A11, A13, A38.
"^DD",375,375.099,.02,23,0)
^.001^5^5^3050531^^^
"^DD",375,375.099,.02,23,1,0)
The HL7 Event code specified by the VistA application in order to send 
"^DD",375,375.099,.02,23,2,0)
visit-level data to the external billing system.
"^DD",375,375.099,.02,23,3,0)
OR
"^DD",375,375.099,.02,23,4,0)
The HL7 Event code contained in an inbound message from the external 
"^DD",375,375.099,.02,23,5,0)
billing system and processed by IBB.
"^DD",375,375.099,.02,"DT")
3050224
"^DD",375,375.099,.03,0)
REASON^RS^R:REQUEST;O:OUTBOUND;I:INBOUND;^0;3^Q
"^DD",375,375.099,.03,21,0)
^.001^19^19^3050531^^^^
"^DD",375,375.099,.03,21,1,0)
Indicates the reason for the entry into the EVENT HISTORY subfile.
"^DD",375,375.099,.03,21,2,0)
  
"^DD",375,375.099,.03,21,3,0)
There are only three points in the history of the ADT message event
"^DD",375,375.099,.03,21,4,0)
that are tracked by IBB:
"^DD",375,375.099,.03,21,5,0)
  
"^DD",375,375.099,.03,21,6,0)
(1) Date/time of original request by application;
"^DD",375,375.099,.03,21,7,0)
    Reason = "R" (Request)
"^DD",375,375.099,.03,21,8,0)
  
"^DD",375,375.099,.03,21,9,0)
(2) Date/time at which VDEF sent the message to VistA HL7;
"^DD",375,375.099,.03,21,10,0)
    Reason = "O" (Outbound)
"^DD",375,375.099,.03,21,11,0)
  
"^DD",375,375.099,.03,21,12,0)
(3) Date/time at which a incoming message from the external medical
"^DD",375,375.099,.03,21,13,0)
    billing system was received;
"^DD",375,375.099,.03,21,14,0)
    Reason = "I" (Inbound)
"^DD",375,375.099,.03,21,15,0)
  
"^DD",375,375.099,.03,21,16,0)
    Note: The incoming message could be either a response to an
"^DD",375,375.099,.03,21,17,0)
    outbound ADT message that originated in VistA, or it may be
"^DD",375,375.099,.03,21,18,0)
    an ADT message related to inpatient bed control that originated
"^DD",375,375.099,.03,21,19,0)
    in the external medical billing system.
"^DD",375,375.099,.03,"DT")
3050224
"^DD",375,375.099,.04,0)
HL7 MESSAGE^P772'^HL(772,^0;4^Q
"^DD",375,375.099,.04,1,0)
^.1
"^DD",375,375.099,.04,1,1,0)
375^G^MUMPS
"^DD",375,375.099,.04,1,1,1)
I X,$P(^IBBAA(375,DA(1),0),U,2)="G" S $P(^(0),U,2)="" K ^IBBAA(375,"C","G",DA(1))
"^DD",375,375.099,.04,1,1,2)
Q
"^DD",375,375.099,.04,1,1,"%D",0)
^.101^3^3^3050906^^^^
"^DD",375,375.099,.04,1,1,"%D",1,0)
Whenever field #.04 in subfile #375.099 is set then the HL7 message
"^DD",375,375.099,.04,1,1,"%D",2,0)
(at least one) has been sent for this Account.  At that point, if the
"^DD",375,375.099,.04,1,1,"%D",3,0)
EXTERNAL ACCOUNT NUMBER (field #.02) is set to "G", then remove "G".
"^DD",375,375.099,.04,1,1,"DT")
3050713
"^DD",375,375.099,.04,21,0)
^.001^2^2^3050531^^
"^DD",375,375.099,.04,21,1,0)
The pointer to the HL7 MESSAGE TEXT file (#772) where the outbound
"^DD",375,375.099,.04,21,2,0)
ADT message resides.
"^DD",375,375.099,.04,23,0)
^^3^3^3050531^
"^DD",375,375.099,.04,23,1,0)
This data item is provided by the VDEF message builder; it will
"^DD",375,375.099,.04,23,2,0)
only be present in the subfile #375.099 record if field #.03 is
"^DD",375,375.099,.04,23,3,0)
set to "OUTBOUND".
"^DD",375,375.099,.04,"DT")
3050713
"^DIC",372,372,0)
PFSS SITE PARAMETERS^372
"^DIC",372,372,0,"GL")
^IBBAS(372,
"^DIC",372,372,"%D",0)
^1.001^5^5^3050426^^
"^DIC",372,372,"%D",1,0)
The PFSS SITE PARAMETERS file holds data required for proper function
"^DIC",372,372,"%D",2,0)
of the IBB software, which provides common utilities and procedures
"^DIC",372,372,"%D",3,0)
for PFSS.
"^DIC",372,372,"%D",4,0)
 
"^DIC",372,372,"%D",5,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",372,"B","PFSS SITE PARAMETERS",372)

"^DIC",373,373,0)
PFSS CHARGE CACHE^373
"^DIC",373,373,0,"GL")
^IBBAD(373,
"^DIC",373,373,"%",0)
^1.005^^
"^DIC",373,373,"%D",0)
^1.001^9^9^3050602^^^^
"^DIC",373,373,"%D",1,0)
This file is used to store charge data from various VistA applications
"^DIC",373,373,"%D",2,0)
so that a background process can create an HL7 P03 message from each record.
"^DIC",373,373,"%D",3,0)
The messages are batched and sent to the external medical billing system.
"^DIC",373,373,"%D",4,0)
  
"^DIC",373,373,"%D",5,0)
Under no circumstances may records be created or modified directly via
"^DIC",373,373,"%D",6,0)
FileMan or other methods.  Record creation and data update is allowed
"^DIC",373,373,"%D",7,0)
only through CHARGE^IBBAPI.
"^DIC",373,373,"%D",8,0)
 
"^DIC",373,373,"%D",9,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",373,"B","PFSS CHARGE CACHE",373)

"^DIC",375,375,0)
PFSS ACCOUNT^375
"^DIC",375,375,0,"GL")
^IBBAA(375,
"^DIC",375,375,"%",0)
^1.005^^
"^DIC",375,375,"%D",0)
^1.001^9^9^3050602^^^^
"^DIC",375,375,"%D",1,0)
This file is used to store visit/encounter data from various VistA 
"^DIC",375,375,"%D",2,0)
applications, so that a background process can create HL7 ADT messages 
"^DIC",375,375,"%D",3,0)
that are sent to the external medical billing system.
"^DIC",375,375,"%D",4,0)
  
"^DIC",375,375,"%D",5,0)
Under no circumstances may records be created or modified directly via
"^DIC",375,375,"%D",6,0)
FileMan or other methods.  Record creation and data update is allowed
"^DIC",375,375,"%D",7,0)
only through GETACCT^IBBAPI.
"^DIC",375,375,"%D",8,0)
 
"^DIC",375,375,"%D",9,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",375,"B","PFSS ACCOUNT",375)

"BLD",5816,6)
^296
**END**
**END**
