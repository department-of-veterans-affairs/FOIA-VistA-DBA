Released RA*5*80 SEQ #72
Extracted from mail message
**KIDS**:RA*5.0*80^

**INSTALL NAME**
RA*5.0*80
"BLD",6319,0)
RA*5.0*80^RADIOLOGY/NUCLEAR MEDICINE^0^3070823^y
"BLD",6319,1,0)
^^2^2^3061017^
"BLD",6319,1,1,0)
This patch adds a menu option to the Radiology HL7 menu that resends HL7 
"BLD",6319,1,2,0)
messages by date range.
"BLD",6319,4,0)
^9.64PA^^
"BLD",6319,6)
1^
"BLD",6319,6.3)
19
"BLD",6319,"INID")
^
"BLD",6319,"INIT")

"BLD",6319,"KRN",0)
^9.67PA^8989.52^19
"BLD",6319,"KRN",.4,0)
.4
"BLD",6319,"KRN",.4,"NM",0)
^9.68A^^
"BLD",6319,"KRN",.401,0)
.401
"BLD",6319,"KRN",.401,"NM",0)
^9.68A^^
"BLD",6319,"KRN",.402,0)
.402
"BLD",6319,"KRN",.403,0)
.403
"BLD",6319,"KRN",.5,0)
.5
"BLD",6319,"KRN",.84,0)
.84
"BLD",6319,"KRN",3.6,0)
3.6
"BLD",6319,"KRN",3.8,0)
3.8
"BLD",6319,"KRN",9.2,0)
9.2
"BLD",6319,"KRN",9.8,0)
9.8
"BLD",6319,"KRN",9.8,"NM",0)
^9.68A^6^4
"BLD",6319,"KRN",9.8,"NM",3,0)
RAHLRS1^^0^B51416412
"BLD",6319,"KRN",9.8,"NM",4,0)
RAHLR^^0^B48962117
"BLD",6319,"KRN",9.8,"NM",5,0)
RAHLRPT^^0^B70244672
"BLD",6319,"KRN",9.8,"NM",6,0)
RAHLO2^^0^B19096682
"BLD",6319,"KRN",9.8,"NM","B","RAHLO2",6)

"BLD",6319,"KRN",9.8,"NM","B","RAHLR",4)

"BLD",6319,"KRN",9.8,"NM","B","RAHLRPT",5)

"BLD",6319,"KRN",9.8,"NM","B","RAHLRS1",3)

"BLD",6319,"KRN",19,0)
19
"BLD",6319,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",6319,"KRN",19,"NM",1,0)
RA HL7 RESEND BY DATE RANGE^^0
"BLD",6319,"KRN",19,"NM",2,0)
RA HL7 MENU^^2
"BLD",6319,"KRN",19,"NM","B","RA HL7 MENU",2)

"BLD",6319,"KRN",19,"NM","B","RA HL7 RESEND BY DATE RANGE",1)

"BLD",6319,"KRN",19.1,0)
19.1
"BLD",6319,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",6319,"KRN",101,0)
101
"BLD",6319,"KRN",409.61,0)
409.61
"BLD",6319,"KRN",771,0)
771
"BLD",6319,"KRN",870,0)
870
"BLD",6319,"KRN",8989.51,0)
8989.51
"BLD",6319,"KRN",8989.52,0)
8989.52
"BLD",6319,"KRN",8994,0)
8994
"BLD",6319,"KRN","B",.4,.4)

"BLD",6319,"KRN","B",.401,.401)

"BLD",6319,"KRN","B",.402,.402)

"BLD",6319,"KRN","B",.403,.403)

"BLD",6319,"KRN","B",.5,.5)

"BLD",6319,"KRN","B",.84,.84)

"BLD",6319,"KRN","B",3.6,3.6)

"BLD",6319,"KRN","B",3.8,3.8)

"BLD",6319,"KRN","B",9.2,9.2)

"BLD",6319,"KRN","B",9.8,9.8)

"BLD",6319,"KRN","B",19,19)

"BLD",6319,"KRN","B",19.1,19.1)

"BLD",6319,"KRN","B",101,101)

"BLD",6319,"KRN","B",409.61,409.61)

"BLD",6319,"KRN","B",771,771)

"BLD",6319,"KRN","B",870,870)

"BLD",6319,"KRN","B",8989.51,8989.51)

"BLD",6319,"KRN","B",8989.52,8989.52)

"BLD",6319,"KRN","B",8994,8994)

"BLD",6319,"QUES",0)
^9.62^^
"BLD",6319,"REQB",0)
^9.611^3^3
"BLD",6319,"REQB",1,0)
RA*5.0*75^1
"BLD",6319,"REQB",2,0)
RA*5.0*81^1
"BLD",6319,"REQB",3,0)
RA*5.0*55^1
"BLD",6319,"REQB","B","RA*5.0*55",3)

"BLD",6319,"REQB","B","RA*5.0*75",1)

"BLD",6319,"REQB","B","RA*5.0*81",2)

"KRN",19,11177,-1)
2^2
"KRN",19,11177,0)
RA HL7 MENU^Radiology HL7 Menu^^M^2177^^^^^^^18
"KRN",19,11177,10,0)
^19.01IP^3^3
"KRN",19,11177,10,3,0)
12559^RSD
"KRN",19,11177,10,3,"^")
RA HL7 RESEND BY DATE RANGE
"KRN",19,11177,"U")
RADIOLOGY HL7 MENU
"KRN",19,12559,-1)
0^1
"KRN",19,12559,0)
RA HL7 RESEND BY DATE RANGE^Resend Radiology HL7 Messages By Date Range^^R^^RA MGR^^^^^y^RADIOLOGY/NUCLEAR MEDICINE
"KRN",19,12559,1,0)
^^2^2^3070628^
"KRN",19,12559,1,1,0)
This option can be used to resend HL7 messages to selected subscribers by 
"KRN",19,12559,1,2,0)
date range.
"KRN",19,12559,25)
RAHLRS1
"KRN",19,12559,668000,0)
^19.0668^1^1
"KRN",19,12559,668000,1,0)
RSD
"KRN",19,12559,"U")
RESEND RADIOLOGY HL7 MESSAGES 
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",18,-1)
1^1
"PKG",18,0)
RADIOLOGY/NUCLEAR MEDICINE^RA^REGISTERS PATIENTS,RECORDS EXAMS,PROFILES,AMIS REPORTS
"PKG",18,20,0)
^9.402P^^
"PKG",18,22,0)
^9.49I^1^1
"PKG",18,22,1,0)
5.0^3051109^2980407^50
"PKG",18,22,1,"PAH",1,0)
80^3070823^4627
"PKG",18,22,1,"PAH",1,1,0)
^^2^2^3070823
"PKG",18,22,1,"PAH",1,1,1,0)
This patch adds a menu option to the Radiology HL7 menu that resends HL7 
"PKG",18,22,1,"PAH",1,1,2,0)
messages by date range.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","RAHLO2")
0^6^B19096682^B17806463
"RTN","RAHLO2",1,0)
RAHLO2 ;HIRMFO/GJC-File rpt (data from bridge program) ;10/30/97  09:02
"RTN","RAHLO2",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**55,80**;Mar 16, 1998;Build 19
"RTN","RAHLO2",3,0)
ADENDUM ; store new lines at the end of existing text
"RTN","RAHLO2",4,0)
 F A="I","R" D
"RTN","RAHLO2",5,0)
 . I $O(^TMP("RARPT-REC",$J,RASUB,$S(A="I":"RAIMP",1:"RATXT"),0)) D
"RTN","RAHLO2",6,0)
 .. S RACNT=+$O(^RARPT(RARPT,A,9999999),-1),RASTRNDE=RACNT+1
"RTN","RAHLO2",7,0)
 .. ; Check if the impression an/or report text sent with the addendum
"RTN","RAHLO2",8,0)
 .. ; is to be the initial text added to the word processing multiples.
"RTN","RAHLO2",9,0)
 .. ; RASTRNDE=the first subscript where impression/report data is to
"RTN","RAHLO2",10,0)
 .. ; be stored.  If no existing impression/report text data, RASTRNDE
"RTN","RAHLO2",11,0)
 .. ; equals one.  If one & RACNT equals one, don't add a blank line
"RTN","RAHLO2",12,0)
 .. ; before adding addendum text.  If RASTRNDE & RACNT both >1, add
"RTN","RAHLO2",13,0)
 .. ; the blank line.
"RTN","RAHLO2",14,0)
 .. S I=0 F  S I=$O(^TMP("RARPT-REC",$J,RASUB,$S(A="I":"RAIMP",1:"RATXT"),I)) Q:I'>0  D
"RTN","RAHLO2",15,0)
 ... S RACNT=RACNT+1,L=$G(^TMP("RARPT-REC",$J,RASUB,$S(A="I":"RAIMP",1:"RATXT"),I))
"RTN","RAHLO2",16,0)
 ... S:I=$O(^TMP("RARPT-REC",$J,RASUB,$S(A="I":"RAIMP",1:"RATXT"),0)) L="Addendum: "_L ; if the first line, append 'addendum:'
"RTN","RAHLO2",17,0)
 ... I (RASTRNDE=RACNT),(RACNT>1) S ^RARPT(RARPT,A,RACNT,0)=" ",RACNT=RACNT+1
"RTN","RAHLO2",18,0)
 ... S ^RARPT(RARPT,A,RACNT,0)=L
"RTN","RAHLO2",19,0)
 ... Q
"RTN","RAHLO2",20,0)
 .. S ^RARPT(RARPT,A,0)="^^"_RACNT_"^"_RACNT_"^"_RADATE
"RTN","RAHLO2",21,0)
 .. Q
"RTN","RAHLO2",22,0)
 . Q
"RTN","RAHLO2",23,0)
 K A,I,L,RACNT,RASTRNDE
"RTN","RAHLO2",24,0)
 Q
"RTN","RAHLO2",25,0)
ERR(A) ; Invalid impression/report text message.
"RTN","RAHLO2",26,0)
 ; Input: 'A' - either "I" for impression, or "R" for report
"RTN","RAHLO2",27,0)
 ; Output: the appropriate error message
"RTN","RAHLO2",28,0)
 Q "Invalid "_$S(A="I":"Impression",1:"Report")_" Text"
"RTN","RAHLO2",29,0)
 ;
"RTN","RAHLO2",30,0)
DIAG ; Check if the Diagnostic Codes passed are valid.  Set RADX equal
"RTN","RAHLO2",31,0)
 ; to primary Dx code pntr value.  Set RASECDX(x) to the secondary
"RTN","RAHLO2",32,0)
 ; Dx code(s) if any.
"RTN","RAHLO2",33,0)
 N RAXFIRST
"RTN","RAHLO2",34,0)
 S I=0,RAXFIRST=1
"RTN","RAHLO2",35,0)
 K RASECDX
"RTN","RAHLO2",36,0)
 F  S I=$O(^TMP("RARPT-REC",$J,RASUB,"RADX",I)) Q:I'>0  D  Q:$D(RAERR)
"RTN","RAHLO2",37,0)
 . S RADIAG=$G(^TMP("RARPT-REC",$J,RASUB,"RADX",I))
"RTN","RAHLO2",38,0)
 . ;S:RADIAG']"" RAERR="Missing Diagnostic Code" Q:$D(RAERR)
"RTN","RAHLO2",39,0)
 . Q:RADIAG']""  ;Missing Diagnostic Code  Patch 80
"RTN","RAHLO2",40,0)
 . ; If RADXIEN is a number, set RADXIEN to what is assumed to be a
"RTN","RAHLO2",41,0)
 . ; valid pointer (ien) for file 78.3
"RTN","RAHLO2",42,0)
 . I +RADIAG=RADIAG S RADXIEN=RADIAG
"RTN","RAHLO2",43,0)
 . ; If RADIAG is in a free text format, convert the external value
"RTN","RAHLO2",44,0)
 . ; into the ien for file 78.3
"RTN","RAHLO2",45,0)
 . I +RADIAG'=RADIAG S RADXIEN=$$FIND1^DIC(78.3,"","X",RADIAG)
"RTN","RAHLO2",46,0)
 . I '$D(^RA(78.3,RADXIEN,0)) S RAERR="Invalid Diagnostic Code" Q
"RTN","RAHLO2",47,0)
 . IF RAXFIRST S RADX=RADXIEN,RAXFIRST=0 Q  ; RADX=pri. Dx Code
"RTN","RAHLO2",48,0)
 . ; are any of the sec. Dx codes equal to our pri. Dx code?
"RTN","RAHLO2",49,0)
 . ;S:RADXIEN=RADX RAERR="Secondary Dx codes must differ from the primary Dx code." Q:$D(RAERR)
"RTN","RAHLO2",50,0)
 . Q:RADXIEN=RADX  ;Secondary Dx codes must differ from the primary Dx code  Patch 80
"RTN","RAHLO2",51,0)
 . ;S:$D(RASECDX(RADXIEN))#2 RAERR="Duplicate secondary Dx codes." Q:$D(RAERR)
"RTN","RAHLO2",52,0)
 . Q:$D(RASECDX(RADXIEN))#2  ;Duplicate secondary Dx codes. Patch 80
"RTN","RAHLO2",53,0)
 . S RASECDX(RADXIEN)="" ; set the sec. Dx array
"RTN","RAHLO2",54,0)
 . Q
"RTN","RAHLO2",55,0)
 K I,RADIAG,RADXIEN
"RTN","RAHLO2",56,0)
 Q
"RTN","RAHLO2",57,0)
SECDX ; Kill old sec. Dx nodes, and add the new ones into the 70.14 multiple
"RTN","RAHLO2",58,0)
 ; called from RAHLO.  Needs RADFN,RADTI & RACNI to function.
"RTN","RAHLO2",59,0)
 Q:'$D(RADFN)!('$D(RADTI))!('$D(RACNI))
"RTN","RAHLO2",60,0)
 I $O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",0)) D KILSECDG^RAHLO4
"RTN","RAHLO2",61,0)
 ;K RAFDA N RAX S RAX=0,RAFDA(70,"?1,",.01)=RADFN
"RTN","RAHLO2",62,0)
 ;S RAFDA(70.02,"?2,?1,",.01)=(9999999.9999-RADTI)
"RTN","RAHLO2",63,0)
 ;S RAFDA(70.03,"?3,?2,?1,",.01)=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)),"^")
"RTN","RAHLO2",64,0)
 ;F  S RAX=$O(RASECDX(RAX)) Q:RAX'>0  D
"RTN","RAHLO2",65,0)
 ;. S RAFDA(70.14,"?"_RAX_"9,?3,?2,?1,",.01)=RAX
"RTN","RAHLO2",66,0)
 ;. Q
"RTN","RAHLO2",67,0)
 ;D UPDATE^DIE("","RAFDA",,"RAERR")
"RTN","RAHLO2",68,0)
 ;I $D(RAERR) M ^TMP("ERR")=RAERR
"RTN","RAHLO2",69,0)
 ;
"RTN","RAHLO2",70,0)
 N RAX S RAX=0
"RTN","RAHLO2",71,0)
 N RAFDA,RA2
"RTN","RAHLO2",72,0)
 K RAFDA
"RTN","RAHLO2",73,0)
 ; K ^TMP("RAERR",$J)
"RTN","RAHLO2",74,0)
 S RA2=RACNI_","_RADTI_","_RADFN
"RTN","RAHLO2",75,0)
 F  S RAX=$O(RASECDX(RAX)) Q:RAX'>0  D
"RTN","RAHLO2",76,0)
 . S RAFDA(70.14,"?+"_RAX_"9,"_RA2_",",.01)=RAX
"RTN","RAHLO2",77,0)
 D UPDATE^DIE("","RAFDA",,"RAERR")
"RTN","RAHLO2",78,0)
 ; I $D(RAERR) M ^TMP("RAERR",$J)=RAERR
"RTN","RAHLO2",79,0)
 ;
"RTN","RAHLO2",80,0)
 Q
"RTN","RAHLO2",81,0)
IMPTXT ; Check if the impression text consists only of the string
"RTN","RAHLO2",82,0)
 ; 'impression:".  If 'impression:' is the only set of characters,
"RTN","RAHLO2",83,0)
 ; (spaces are excluded) then delete the "RAIMP" node.
"RTN","RAHLO2",84,0)
 N RA1 S RA1=$O(^TMP("RARPT-REC",$J,RASUB,"RAIMP",0))
"RTN","RAHLO2",85,0)
 Q:'RA1  N RAIMP S RAIMP=$G(^TMP("RARPT-REC",$J,RASUB,"RAIMP",RA1))
"RTN","RAHLO2",86,0)
 I $$UP^XLFSTR($E(RAIMP,1,11))="IMPRESSION:" D
"RTN","RAHLO2",87,0)
 . S $E(RAIMP,1,11)="" ; strip out 'impression:' if it is the first
"RTN","RAHLO2",88,0)
 . ;                     eleven chars of the impression text
"RTN","RAHLO2",89,0)
 . ; now strip off leading spaces from the remaining
"RTN","RAHLO2",90,0)
 . ; text that led with 'impression:' if present
"RTN","RAHLO2",91,0)
 . F I1=1:1 S:$E(RAIMP,I1)'=" " RAIMP=$E(RAIMP,I1,99999) Q:$E(RAIMP)'=" "
"RTN","RAHLO2",92,0)
 . S ^TMP("RARPT-REC",$J,RASUB,"RAIMP",RA1)=RAIMP
"RTN","RAHLO2",93,0)
 . Q
"RTN","RAHLO2",94,0)
 Q:$O(^TMP("RARPT-REC",$J,RASUB,"RAIMP",RA1))  ; more imp. text follows
"RTN","RAHLO2",95,0)
 K:$G(^TMP("RARPT-REC",$J,RASUB,"RAIMP",RA1))="" ^TMP("RARPT-REC",$J,RASUB,"RAIMP",RA1) ; if only "RAIMP" node null, delete "RAIMP" node
"RTN","RAHLO2",96,0)
 Q
"RTN","RAHLR")
0^4^B48962117^B47516973
"RTN","RAHLR",1,0)
RAHLR ;HISC/CAH/BNT - Generate Common Order (ORM) Message ;11/10/99  10:42
"RTN","RAHLR",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**2,12,10,25,71,82,75,80**;Mar 16, 1998;Build 19
"RTN","RAHLR",3,0)
 ;Generates msg whenever a case is registered or cancelled or examined
"RTN","RAHLR",4,0)
 ;              registered        cancelled        examined
"RTN","RAHLR",5,0)
 ; Order control : NW                CA               XO
"RTN","RAHLR",6,0)
 ; Order status  : IP                CA               CM
"RTN","RAHLR",7,0)
 ;02/14/2006 BAY/KAM RA*5*71 Add ability to update exam data to V/R
"RTN","RAHLR",8,0)
 S:$D(HLNDAP) ZTSAVE("HLNDAP")="" S:$D(HLDAP) ZTSAVE("HLDAP")="" S:$D(RAEXMDUN) ZTSAVE("RAEXMDUN")=""
"RTN","RAHLR",9,0)
 S:$D(RAEXEDT) ZTSAVE("RAEXEDT")=""
"RTN","RAHLR",10,0)
 S ZTSAVE("RADFN")="",ZTSAVE("RADTI")="",ZTSAVE("RACNI")="",ZTIO="",ZTDTH=$H,ZTDESC="Rad/Nuc Med Compiling HL7 Common Order",ZTRTN="EN^RAHLR" D ^%ZTLOAD
"RTN","RAHLR",11,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE Q
"RTN","RAHLR",12,0)
EN ; Called from the RA REG & RA CANCEL & RA EXAMINED protocols
"RTN","RAHLR",13,0)
 ; Input Variables:
"RTN","RAHLR",14,0)
 ;   RADFN=file 2 IEN (DFN)
"RTN","RAHLR",15,0)
 ;   RADTI=file 70 Exam subrec IEN (reverse date/time of exam)
"RTN","RAHLR",16,0)
 ;   RACNI=file 70 Case subrecord IEN
"RTN","RAHLR",17,0)
 ;   RAEID=ien of the event driver protocol (defined in RAHLRPC)
"RTN","RAHLR",18,0)
 ; Output Variables:
"RTN","RAHLR",19,0)
 ;   HLA("HLS") array containing HL7 msg
"RTN","RAHLR",20,0)
 ;
"RTN","RAHLR",21,0)
 N EID,HL,INT,HLQ,HLFS,HLECH,HLA,HLCS,HLSCS,HLREP,HLECH
"RTN","RAHLR",22,0)
 N DFN,DIWF,DIWL,DIWR,GMRAL,PI,RACANC,RACN0,RACPT,RACPTNDE,RADTE,RAI,RAN,RAOBR4,RAPRCNDE,RAPROC,RAPROCIT,RAPRV,RAX0,VA,VADM,VAERR,X,X0,Y,X1,OBR36
"RTN","RAHLR",23,0)
 ;
"RTN","RAHLR",24,0)
 D INIT ; initialize some HL7 variables
"RTN","RAHLR",25,0)
 ;RAEXMDUN passed from EXM^RAHLRPC if conditions are met
"RTN","RAHLR",26,0)
 Q:+$G(HL)=15  ;no known client(item) linked to the event driver protocol
"RTN","RAHLR",27,0)
 Q:$O(HL(""))=""  ;disabled server appl, or no server appl
"RTN","RAHLR",28,0)
 ;** branch to new HL7 logic when the HL7 version surpasses 2.3 **
"RTN","RAHLR",29,0)
 ;I HL("VER")]2.3 D EN^RAHLR1(RADFN,RADTI,RACNI,RAEID) Q
"RTN","RAHLR",30,0)
 ;** branch to new HL7 logic when the HL7 version surpasses 2.3 **
"RTN","RAHLR",31,0)
 S RACN0=$S($D(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)):^(0),1:"") Q:RACN0']""
"RTN","RAHLR",32,0)
 ;Generate Message Text
"RTN","RAHLR",33,0)
 S RAPROC=+$P(RACN0,U,2) I 'RAPROC Q  ;If case entered via 'Enter Last Past Visit before DHCP option, and procedure 'OTHER' is inactive, RAPROC will be null and will cause bomb-out unless we quit here
"RTN","RAHLR",34,0)
 S RAPROCIT=+$P($G(^RAMIS(71,RAPROC,0)),U,12),RAPROCIT=$P(^RA(79.2,RAPROCIT,0),U,1)
"RTN","RAHLR",35,0)
 S (RADTE,OBR36)=9999999.9999-RADTI,RADTE=$E(RADTE,4,7)_$E(RADTE,2,3)_"-"_+RACN0,RACANC=$S($D(^RA(72,"AA",RAPROCIT,0,+$P(RACN0,"^",3))):1,1:0)
"RTN","RAHLR",36,0)
 S RAPRCNDE=$G(^RAMIS(71,+RAPROC,0)),RACPT=+$P(RAPRCNDE,U,9),RACPTNDE=$$NAMCODE^RACPTMSC(RACPT,DT)
"RTN","RAHLR",37,0)
 ;RA*5*82 RAEXEDT= Override the EXM conditions if Case edited
"RTN","RAHLR",38,0)
 I $G(RAEXMDUN)=1,'$G(RAEXEDT),$P(RACN0,U,30)'="" Q  ;last chance to stop exm'd msg if it's already been sent
"RTN","RAHLR",39,0)
 ;Compile 'PID' Segment
"RTN","RAHLR",40,0)
 K VA,VADM,VAERR,RAVADM S DFN=RADFN D DEM^VADPT I VADM(1)']"" S HLP("ERRTEXT")="Invalid Patient Identifier" G EXIT
"RTN","RAHLR",41,0)
 S RAVADM(3)=$S($E(+VADM(3),6,7)="00":"",1:+VADM(3)) ; NOTE: Check
"RTN","RAHLR",42,0)
 ; for an inexact date of birth.  If inexact, pass null for DOB in
"RTN","RAHLR",43,0)
 ; the 'PID' segment.  Some COTS systems can't handle inexact DOB's.
"RTN","RAHLR",44,0)
 I HL("VER")']"2.2" D
"RTN","RAHLR",45,0)
 .S HLA("HLS",1)="PID"_HLFS_HLFS_$G(VA("PID"))_HLFS_$$M11^HLFNC(RADFN)_HLFS_HLFS_$$HLNAME^HLFNC(VADM(1))_HLFS_HLFS_$$HLDATE^HLFNC(RAVADM(3))_HLFS_$S(VADM(5)]"":$S("MF"[$P(VADM(5),"^"):$P(VADM(5),"^"),1:"O"),1:"U")
"RTN","RAHLR",46,0)
 .S:$P(VADM(2),"^")]"" $P(HLA("HLS",1),HLFS,20)=$P(VADM(2),"^")
"RTN","RAHLR",47,0)
 I HL("VER")]"2.2" S HLA("HLS",1)=$$EN^VAFHLPID(DFN,"2,3,5,7,8,19,20")
"RTN","RAHLR",48,0)
 K RAVADM
"RTN","RAHLR",49,0)
 ;Compile 'ORC' Segment
"RTN","RAHLR",50,0)
 S X0="" ;if exam-set or print-set, store parent name if order exists
"RTN","RAHLR",51,0)
 I $P(RACN0,U,25) S X0=$P(RACN0,U,11),X0=$P($G(^RAO(75.1,+X0,0)),U,2),X0=$P($G(^RAMIS(71,+X0,0)),U),X0=$S(X0="":"ORIGINAL ORDER PURGED",1:X0),X0=$S($P(RACN0,U,25)=1:"EXAM",1:"PRINT")_"SET: "_X0
"RTN","RAHLR",52,0)
 ; BNT - Added ORC4 Placer Group Number for Printset identification.
"RTN","RAHLR",53,0)
 ; ORC4 is a combination of SSN with the order inverted date/time.
"RTN","RAHLR",54,0)
 S RAORC4="" I $P($G(RACN0),U,25)=2 D
"RTN","RAHLR",55,0)
 . S:$P(VADM(2),"^")]"" RAORC4=$P(VADM(2),"^")
"RTN","RAHLR",56,0)
 . S RAORC4=$G(RAORC4)_RADTI
"RTN","RAHLR",57,0)
 S HLA("HLS",2)="ORC"_HLFS_$S(RACANC:"CA",$G(RAEXMDUN)=1:"XO",1:"NW")_HLFS_HLFS_HLFS_RAORC4_HLFS_$S(RACANC:"CA",$G(RAEXMDUN)=1:"CM",1:"IP")_HLFS_HLFS_HLFS_X0_HLFS_HLDT1
"RTN","RAHLR",58,0)
 K RAORC4
"RTN","RAHLR",59,0)
 ;Compile 'OBR' Segment
"RTN","RAHLR",60,0)
 S RAOBR4=$P(RACPTNDE,U)_$E(HLECH)_$P(RACPTNDE,U,2)_$E(HLECH)_"C4"_$E(HLECH)_+RAPROC_$E(HLECH)_$P(RAPRCNDE,U)_$E(HLECH)_"99RAP"
"RTN","RAHLR",61,0)
 ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLR",62,0)
 ; S RAOBR4=$P(RACPTNDE,U)_$E(HLECH)_$$ESCAPE^RAHLRU($P(RACPTNDE,U,2))_$E(HLECH)_"C4"_$E(HLECH)_+RAPROC_$E(HLECH)_$$ESCAPE^RAHLRU($P(RAPRCNDE,U))_$E(HLECH)_"99RAP"
"RTN","RAHLR",63,0)
 I $P(RACPTNDE,U)']"" S $P(RAOBR4,$E(HLECH),1,3)=$P(RAOBR4,$E(HLECH),4,5)_$E(HLECH)_"LOCAL"
"RTN","RAHLR",64,0)
 S HLA("HLS",3)="OBR"_HLFS_HLFS_RADTE_HLFS_RADTI_"-"_RACNI_$E(HLECH)_RADTE_$E(HLECH)_"L"_HLFS_RAOBR4_HLFS_HLFS_HLFS_HLDT1
"RTN","RAHLR",65,0)
 S HLA("HLS",3)=HLA("HLS",3)_HLFS_HLQ_HLFS_HLQ_HLFS_HLFS_HLFS_HLFS_HLFS_HLQ_HLFS_HLFS
"RTN","RAHLR",66,0)
 S RAPRV=$$GET1^DIQ(200,+$P(RACN0,"^",14),.01)
"RTN","RAHLR",67,0)
 S HLA("HLS",3)=HLA("HLS",3)_$S(RAPRV]"":+$P(RACN0,"^",14)_$E(HLECH)_$$HLNAME^HLFNC(RAPRV),1:"")
"RTN","RAHLR",68,0)
 ;
"RTN","RAHLR",69,0)
 N RACN00,RA20 S RACN00=$G(^RADPT(RADFN,"DT",RADTI,0))
"RTN","RAHLR",70,0)
 ;Seg's fld 20 = pce 21 --> ien file #79.1~name of img loc~stn #~stn name
"RTN","RAHLR",71,0)
 S RA20=+$G(^RA(79.1,+$P(RACN00,U,4),0))
"RTN","RAHLR",72,0)
 S $P(HLA("HLS",3),HLFS,21)=$P(RACN00,U,4)_$E(HLECH)_$P($G(^SC(RA20,0)),U)_$E(HLECH)_$P(RACN00,U,3)_$E(HLECH)_$P($G(^DIC(4,+$P(RACN00,U,3),0)),U)
"RTN","RAHLR",73,0)
 S $P(HLA("HLS",3),HLFS,21)=$P(HLA("HLS",3),HLFS,21)
"RTN","RAHLR",74,0)
 ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLR",75,0)
 ; S $P(HLA("HLS",3),HLFS,21)=$$ESCAPE^RAHLRU($P(HLA("HLS",3),HLFS,21))
"RTN","RAHLR",76,0)
 ;Seg's fld 21 = pce 22 --> abbrv I-type~Img type name
"RTN","RAHLR",77,0)
 S RA20=$G(^RA(79.2,+$P(RACN00,U,2),0))
"RTN","RAHLR",78,0)
 S $P(HLA("HLS",3),HLFS,22)=$P(RA20,U,3)_$E(HLECH)_$P(RA20,U)
"RTN","RAHLR",79,0)
 S $P(HLA("HLS",3),HLFS,22)=$P(HLA("HLS",3),HLFS,22)
"RTN","RAHLR",80,0)
 ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLR",81,0)
 ; S $P(HLA("HLS",3),HLFS,22)=$$ESCAPE^RAHLRU($P(HLA("HLS",3),HLFS,22))
"RTN","RAHLR",82,0)
 ;
"RTN","RAHLR",83,0)
 S $P(HLA("HLS",3),HLFS,23)=HLDT1,$P(HLA("HLS",3),HLFS,19)=$S($D(^DIC(42,+$P(RACN0,"^",6),0)):$P(^(0),"^"),$D(^SC(+$P(RACN0,"^",8),0)):$P(^(0),"^"),1:"Unknown")
"RTN","RAHLR",84,0)
 ;
"RTN","RAHLR",85,0)
 ; OBR-31.2 = Reason for Study P75
"RTN","RAHLR",86,0)
 S $P(HLA("HLS",3),HLFS,32)=$E(HLECH)_$$ESCAPE^RAHLRU($P($G(^RAO(75.1,+$P(RACN0,"^",11),.1)),U))
"RTN","RAHLR",87,0)
 ;
"RTN","RAHLR",88,0)
 ; OBR-36 = Exam Date/Time
"RTN","RAHLR",89,0)
 S $P(HLA("HLS",3),HLFS,37)=$$FMTHL7^XLFDT(OBR36)
"RTN","RAHLR",90,0)
 ;
"RTN","RAHLR",91,0)
 I 'RACANC S X=$P($G(^RAO(75.1,+$P(RACN0,"^",11),0)),"^",6),$P(HLA("HLS",3),HLFS,28)=$E(HLECH)_$E(HLECH)_$E(HLECH)_$E(HLECH)_$E(HLECH)_$TR(X,"129","SAR")
"RTN","RAHLR",92,0)
 ; if long str, break so 2nd str begins with separator to avoid abend
"RTN","RAHLR",93,0)
 I $L(HLA("HLS",3))>245 N RAPART,RA1 S RA1=HLA("HLS",3) F RAPART=5:1:15 S RAPART(1)=$P(RA1,HLFS,1,RAPART),RAPART(2)=$P(RA1,HLFS,RAPART+1,99) Q:$L(RAPART(1))<245&($L(RAPART(2))<245)&($P(RAPART(2),HLFS)="")
"RTN","RAHLR",94,0)
 I $D(RAPART) K:RAPART=15 RAPART ;if RAPART reaches 15, then something's wrong so kill RAPART to allow abend due "string too long"
"RTN","RAHLR",95,0)
 I $D(RAPART) S HLA("HLS",3)=$P(RAPART(1),HLFS)_HLFS,HLA("HLS",3,1)=$P(RAPART(1),HLFS,2,99)_HLFS,HLA("HLS",3,2)=RAPART(2) K RAPART,RA1
"RTN","RAHLR",96,0)
OBXPRC ;Compile 'OBX' Segment for Procedure
"RTN","RAHLR",97,0)
 S RAN=4 D OBXPRC^RAHLRU
"RTN","RAHLR",98,0)
OBXMOD ;Compile 'OBX' Segment for two types of Modifiers
"RTN","RAHLR",99,0)
 S RAN=5 D OBXMOD^RAHLRU
"RTN","RAHLR",100,0)
OBXHIST ;Compile 'OBX' Segment for Clinical History
"RTN","RAHLR",101,0)
 I '$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"H",0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"H"_$E(HLECH)_"HISTORY"_$E(HLECH)_"L"_HLFS_HLFS_"None Entered" D OBX11^RAHLRU G ALLER
"RTN","RAHLR",102,0)
 K ^UTILITY($J,"W") S DIWF="",DIWR=80,DIWL=1 F RAI=0:0 S RAI=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"H",RAI)) Q:'RAI  I $D(^(RAI,0)) S X=^(0) D ^DIWP
"RTN","RAHLR",103,0)
 F RAI=0:0 S RAI=$O(^UTILITY($J,"W",DIWL,RAI)) Q:'RAI  I $D(^(RAI,0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"H"_$E(HLECH)_"HISTORY"_$E(HLECH)_"L"_HLFS_HLFS_^(0) D OBX11^RAHLRU
"RTN","RAHLR",104,0)
ALLER ;Compile 'OBX' Segment for Allergies
"RTN","RAHLR",105,0)
 S DFN=RADFN D ALLERGY^RADEM S X="" I $D(GMRAL) S RAI=0 F  S RAI=$O(PI(RAI)) Q:RAI'>0  S X0=PI(RAI) I X0]"" Q:($L(X)+$L(X0))>200  S X=X_X0_", "
"RTN","RAHLR",106,0)
 I $L(X) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"A"_$E(HLECH)_"ALLERGIES"_$E(HLECH)_"L"_HLFS_HLFS_X D OBX11^RAHLRU
"RTN","RAHLR",107,0)
OBXTCM ;Compile 'OBX' Segment for Tech Comment
"RTN","RAHLR",108,0)
 D OBXTCM^RAHLRU
"RTN","RAHLR",109,0)
EXIT ; set HL7 message type & return to protocol
"RTN","RAHLR",110,0)
 K ^UTILITY($J,"W")
"RTN","RAHLR",111,0)
 S HL("MTN")="ORM"
"RTN","RAHLR",112,0)
 N HLEID,HLARYTYP,HLFORMAT,HLMTIEN,HLP
"RTN","RAHLR",113,0)
 S HLEID=EID,HLARYTYP="LM",HLFORMAT=1,HLMTIEN="",HLP("PRIORITY")="I"
"RTN","RAHLR",114,0)
 D:$D(RASSSX(HLEID)) GETHLP^RAHLRS1(HLEID,.HLP)
"RTN","RAHLR",115,0)
 D GENERATE^HLMA(HLEID,HLARYTYP,HLFORMAT,.HLRESLT,HLMTIEN,.HLP)
"RTN","RAHLR",116,0)
 Q
"RTN","RAHLR",117,0)
Q ;Entry Point to Process an ORR Message (Just a Quit Since No Processing is Required)
"RTN","RAHLR",118,0)
 Q
"RTN","RAHLR",119,0)
INIT ; initialize HL7 variables
"RTN","RAHLR",120,0)
 D NOW^%DTC S HLDT=%,HLDT1=$$HLDATE^HLFNC(%)
"RTN","RAHLR",121,0)
 Q:'$G(RAEID)  S EID=RAEID
"RTN","RAHLR",122,0)
 S HL="HLS(""HLS"")",INT=1
"RTN","RAHLR",123,0)
 D INIT^HLFNC2(EID,.HL,INT)
"RTN","RAHLR",124,0)
 Q:'$D(HL("Q"))  ;no server application defined
"RTN","RAHLR",125,0)
 S HLQ=HL("Q"),HLFS=HL("FS")
"RTN","RAHLR",126,0)
 S HLECH=HL("ECH")
"RTN","RAHLR",127,0)
 S HLFS=HL("FS")
"RTN","RAHLR",128,0)
 S HLCS=$E(HL("ECH"))
"RTN","RAHLR",129,0)
 S HLSCS=$E(HL("ECH"),4)
"RTN","RAHLR",130,0)
 S HLREP=$E(HL("ECH"),2)
"RTN","RAHLR",131,0)
 Q
"RTN","RAHLRPT")
0^5^B70244672^B70016688
"RTN","RAHLRPT",1,0)
RAHLRPT ;HISC/CAH AISC/SAW-Compiles HL7 'ORU' Message Type ; 4/26/01 10:40am
"RTN","RAHLRPT",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**2,12,10,25,81,80**;Mar 16, 1998;Build 19
"RTN","RAHLRPT",3,0)
EN ; Called from RA RPT and RA RPT 2.3 protocol entry action
"RTN","RAHLRPT",4,0)
 ; Input variables:
"RTN","RAHLRPT",5,0)
 ;   RADFN=file 2 IEN (DFN)
"RTN","RAHLRPT",6,0)
 ;   RADTI=file 70 Exam subrecord IEN (reverse date/time)
"RTN","RAHLRPT",7,0)
 ;   RACNI=file 70 Case subrecord IEN
"RTN","RAHLRPT",8,0)
 ;   RARPT=file 74 Report IEN
"RTN","RAHLRPT",9,0)
 ;   RASSS=List of Subscribers passed into GENERATE^HLMA  will be set into HLP array.
"RTN","RAHLRPT",10,0)
 ; Output variables:
"RTN","RAHLRPT",11,0)
 ;   HLA("HLS", array containing HL7 msg
"RTN","RAHLRPT",12,0)
 ;
"RTN","RAHLRPT",13,0)
 N RASET,RACN0
"RTN","RAHLRPT",14,0)
 S RASET=0
"RTN","RAHLRPT",15,0)
 S RACN0=^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)
"RTN","RAHLRPT",16,0)
 S:'$D(RARPT) RARPT=+$P(RACN0,"^",17)
"RTN","RAHLRPT",17,0)
 I +$P(RACN0,U,25)=2 D  Q  ; printset
"RTN","RAHLRPT",18,0)
 .; loop through all cases in set and create message
"RTN","RAHLRPT",19,0)
 .S RASET=1
"RTN","RAHLRPT",20,0)
 .N RACNI,RAII S RAII=0
"RTN","RAHLRPT",21,0)
 .F  S RAII=$O(^RADPT(RADFN,"DT",RADTI,"P",RAII)) Q:RAII'>0  D
"RTN","RAHLRPT",22,0)
 .. Q:$P(^RADPT(RADFN,"DT",RADTI,"P",RAII,0),U,25)'=2
"RTN","RAHLRPT",23,0)
 .. S RACNI=RAII
"RTN","RAHLRPT",24,0)
 .. D NEW
"RTN","RAHLRPT",25,0)
NEW ; new variables
"RTN","RAHLRPT",26,0)
 S:$D(ZTQUEUED) ZTREQ="@" ; delete task from task global
"RTN","RAHLRPT",27,0)
 N DFN,DIWF,DIWL,DIWR,RACPT,RACPTNDE,RADTECN,RADTE0,RADTV,RAI,RAN,RAOBR4,RAPRCNDE,RAPROC,RAPROCIT,RAPRV,RARPT0
"RTN","RAHLRPT",28,0)
 N VADM,VAERR,X,X1,X2,XX2,Y,X0,OBR36,EID,HL,INT,HLQ,HLFS,HLECH,HLA,RAN K RAVADM
"RTN","RAHLRPT",29,0)
 D INIT^RAHLRU ;initialize HL7 variables
"RTN","RAHLRPT",30,0)
 Q:+$G(HL)=15  ;no known client(item) linked to the event driver protocol
"RTN","RAHLRPT",31,0)
 Q:$O(HL(""))=""  ;failed return from init^hlfnc2
"RTN","RAHLRPT",32,0)
 ;
"RTN","RAHLRPT",33,0)
 ;** branch to new HL7 logic when the HL7 version surpasses 2.3 **
"RTN","RAHLRPT",34,0)
 ;I HL("VER")]2.3 D EN^RAHLRPT1(RADFN,RADTI,RACNI,RAEID),EXIT Q
"RTN","RAHLRPT",35,0)
 ;** branch to new HL7 logic when the HL7 version surpasses 2.3 **
"RTN","RAHLRPT",36,0)
 ;
"RTN","RAHLRPT",37,0)
 S DFN=RADFN D DEM^VADPT
"RTN","RAHLRPT",38,0)
 I VADM(1)']"" S HLP("ERRTEXT")="Invalid Patient Identifier" G EXIT
"RTN","RAHLRPT",39,0)
 S RAN=0
"RTN","RAHLRPT",40,0)
 S RAVADM(3)=$S($E(+VADM(3),6,7)="00":"",1:+VADM(3)) ; NOTE: Check
"RTN","RAHLRPT",41,0)
 ; for an inexact date of birth.  If inexact, pass null for DOB in
"RTN","RAHLRPT",42,0)
 ; the 'PID' segment.  Some COTS systems can't handle inexact DOB's.
"RTN","RAHLRPT",43,0)
 D SETUP,PID,OBR,OBXPRC,OBXIMP,OBXDIA,OBXRPT,OBXMOD,OBXTCM
"RTN","RAHLRPT",44,0)
EXIT ; set HL7 message type & return to RA RPT protocol
"RTN","RAHLRPT",45,0)
 S HL("MTN")="ORU"
"RTN","RAHLRPT",46,0)
 N HLEID,HLARYTYP,HLFORMAT,HLMTIEN,HLP
"RTN","RAHLRPT",47,0)
 S HLEID=RAEID,HLARYTYP="LM",HLFORMAT=1,HLMTIEN="",HLP("PRIORITY")="I"
"RTN","RAHLRPT",48,0)
 M:$D(RASSS) HLP=RASSS
"RTN","RAHLRPT",49,0)
 D:$D(RASSSX(HLEID)) GETHLP^RAHLRS1(HLEID,.HLP)
"RTN","RAHLRPT",50,0)
 D GENERATE^HLMA(HLEID,HLARYTYP,HLFORMAT,.HLRESLT,HLMTIEN,.HLP)
"RTN","RAHLRPT",51,0)
 K RAVADM
"RTN","RAHLRPT",52,0)
 Q
"RTN","RAHLRPT",53,0)
 ;
"RTN","RAHLRPT",54,0)
OBR ;Compile 'OBR' Segment
"RTN","RAHLRPT",55,0)
 S RAOBR4=$P(RACPTNDE,U)_$E(HLECH)_$P(RACPTNDE,U,2)_$E(HLECH)_"C4"_$E(HLECH)_+RAPROC_$E(HLECH)_$P(RAPRCNDE,U)_$E(HLECH)_"99RAP"
"RTN","RAHLRPT",56,0)
 ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRPT",57,0)
 ; S RAOBR4=$P(RACPTNDE,U)_$E(HLECH)_$$ESCAPE^RAHLRU($P(RACPTNDE,U,2))_$E(HLECH)_"C4"_$E(HLECH)_+RAPROC_$E(HLECH)_$$ESCAPE^RAHLRU($P(RAPRCNDE,U))_$E(HLECH)_"99RAP"
"RTN","RAHLRPT",58,0)
 ; Have to use LOCAL code if Broad Procedure - no CPT code
"RTN","RAHLRPT",59,0)
 I $P(RAOBR4,$E(HLECH))=""!($P(RAOBR4,$E(HLECH),2)="") S $P(RAOBR4,$E(HLECH),1,3)=$P(RAOBR4,$E(HLECH),4,5)_$E(HLECH)_"LOCAL"
"RTN","RAHLRPT",60,0)
 S X1="OBR"_HLFS_HLFS_HLFS_RADTI_"-"_RACNI_$E(HLECH)_RADTECN_$E(HLECH)_"L"_HLFS_RAOBR4_HLFS_HLFS_HLFS_RADTE0_HLFS_HLQ_HLFS_HLQ_HLFS_HLFS_HLFS_HLFS_HLFS,Y=$$HLDATE^HLFNC($P(RARPT0,"^",6)) S X1=X1_Y_HLFS_HLFS
"RTN","RAHLRPT",61,0)
 S RAPRV=$$GET1^DIQ(200,+$P(RACN0,"^",14),.01)
"RTN","RAHLRPT",62,0)
 S Y=$$HLNAME^HLFNC(RAPRV) S X1=X1_$S(Y]"":+$P(RACN0,"^",14)_$E(HLECH)_Y,1:"")
"RTN","RAHLRPT",63,0)
 S $P(X1,HLFS,19)=$S($D(^DIC(42,+$P(RACN0,"^",6),0)):$P(^(0),"^"),$D(^SC(+$P(RACN0,"^",8),0)):$P(^(0),"^"),1:"Unknown")
"RTN","RAHLRPT",64,0)
 ; PCE 21 -> ien file #79.1~name of img loc~stn #~stn name
"RTN","RAHLRPT",65,0)
 N RACN00,RA20 S RACN00=$G(^RADPT(RADFN,"DT",RADTI,0))
"RTN","RAHLRPT",66,0)
 S RA20=+$G(^RA(79.1,+$P(RACN00,U,4),0))
"RTN","RAHLRPT",67,0)
 S $P(X1,HLFS,21)=$P(RACN00,"^",4)_$E(HLECH)_$P($G(^SC(RA20,0)),"^")_$E(HLECH)_$P(RACN00,"^",3)_$E(HLECH)_$P($G(^DIC(4,$P(RACN00,U,3),0)),"^")
"RTN","RAHLRPT",68,0)
 S $P(X1,HLFS,21)=$P(X1,HLFS,21)
"RTN","RAHLRPT",69,0)
 ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRPT",70,0)
 ; S $P(X1,HLFS,21)=$$ESCAPE^RAHLRU($P(X1,HLFS,21))
"RTN","RAHLRPT",71,0)
 ;
"RTN","RAHLRPT",72,0)
 S OBR36=9999999.9999-RADTI
"RTN","RAHLRPT",73,0)
 S $P(X1,HLFS,37)=$$FMTHL7^XLFDT(OBR36)
"RTN","RAHLRPT",74,0)
 ;
"RTN","RAHLRPT",75,0)
 S RADTV=HLDT1 I $P(RARPT0,"^",5)="V",$P(RARPT0,"^",7) K RADTV S RADTV=$$HLDATE^HLFNC($P(RARPT0,"^",7))
"RTN","RAHLRPT",76,0)
 S $P(X1,HLFS,23)=RADTV,$P(X1,HLFS,26)=$S($P(RARPT0,"^",5)="V":"F",1:"R")
"RTN","RAHLRPT",77,0)
 ;Principal Result Interpreter = Verifying Physician
"RTN","RAHLRPT",78,0)
 S $P(X1,HLFS,33)="" I $P(RARPT0,"^",9) D
"RTN","RAHLRPT",79,0)
 .S X2=$$GET1^DIQ(200,$P(RARPT0,"^",9),.01) Q:X2']""
"RTN","RAHLRPT",80,0)
 .S Y=$$HLNAME^HLFNC(X2) Q:Y']""
"RTN","RAHLRPT",81,0)
 .S $P(X1,HLFS,33)=$P(RARPT0,"^",9)_$E(HLECH)_Y
"RTN","RAHLRPT",82,0)
 ;Assistant Result Interpreter = Primary Interpreting Staff OR Resident
"RTN","RAHLRPT",83,0)
 S $P(X1,HLFS,34)="" I $P(RACN0,"^",15) D
"RTN","RAHLRPT",84,0)
 .S X2=$$GET1^DIQ(200,$P(RACN0,"^",15),.01) Q:X2']""
"RTN","RAHLRPT",85,0)
 .S Y=$$HLNAME^HLFNC(X2) Q:Y']""
"RTN","RAHLRPT",86,0)
 .S $P(X1,HLFS,34)=$P(RACN0,"^",15)_$E(HLECH)_Y
"RTN","RAHLRPT",87,0)
 I $P(RACN0,"^",12) D
"RTN","RAHLRPT",88,0)
 .S X2=$$GET1^DIQ(200,$P(RACN0,"^",12),.01) Q:X2']""
"RTN","RAHLRPT",89,0)
 .S Y=$$HLNAME^HLFNC(X2) Q:Y']""
"RTN","RAHLRPT",90,0)
 .S $P(X1,HLFS,34)=$P(RACN0,"^",12)_$E(HLECH)_Y
"RTN","RAHLRPT",91,0)
 ;Technician = Technologist
"RTN","RAHLRPT",92,0)
 S $P(X1,HLFS,35)="" I $O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"TC",0)) D
"RTN","RAHLRPT",93,0)
 .S X2=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"TC",0)) I X2']"" Q
"RTN","RAHLRPT",94,0)
 .S X2=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"TC",X2,0)) I X2']"" Q
"RTN","RAHLRPT",95,0)
 .S XX2=$$GET1^DIQ(200,X2,.01) Q:XX2']""
"RTN","RAHLRPT",96,0)
 .S Y=$$HLNAME^HLFNC(XX2) I Y']"" Q
"RTN","RAHLRPT",97,0)
 .S $P(X1,HLFS,35)=X2_$E(HLECH)_Y
"RTN","RAHLRPT",98,0)
 ;Transcriptionist
"RTN","RAHLRPT",99,0)
 S $P(X1,HLFS,36)="" I $G(^RARPT(RARPT,"T")) D
"RTN","RAHLRPT",100,0)
 .S X2=$$GET1^DIQ(200,^RARPT(RARPT,"T"),.01) I X2']"" Q
"RTN","RAHLRPT",101,0)
 .S Y=$$HLNAME^HLFNC(X2) I Y']"" Q
"RTN","RAHLRPT",102,0)
 .S $P(X1,HLFS,36)=^RARPT(RARPT,"T")_$E(HLECH)_Y
"RTN","RAHLRPT",103,0)
 ;
"RTN","RAHLRPT",104,0)
 ; if long str, break so 2nd str begins with separator to avoid abend
"RTN","RAHLRPT",105,0)
 I $L(X1)>245 N RAPART F RAPART=5:1:18 S RAPART(1)=$P(X1,HLFS,1,RAPART),RAPART(2)=$P(X1,HLFS,RAPART+1,99) Q:$L(RAPART(1))<245&($L(RAPART(2))<245)&($P(RAPART(2),HLFS)="")
"RTN","RAHLRPT",106,0)
 I $D(RAPART) K:RAPART=18 RAPART ;if RAPART reaches 18, then something's wrong, so kill RAPART to allow abend due "string too long"
"RTN","RAHLRPT",107,0)
 S RAN=RAN+1
"RTN","RAHLRPT",108,0)
 I $D(RAPART) S HLA("HLS",RAN)=$P(RAPART(1),HLFS)_HLFS,HLA("HLS",RAN,1)=$P(RAPART(1),HLFS,2,99)_HLFS,HLA("HLS",RAN,2)=RAPART(2) K RAPART Q
"RTN","RAHLRPT",109,0)
 S HLA("HLS",RAN)=X1
"RTN","RAHLRPT",110,0)
 Q
"RTN","RAHLRPT",111,0)
OBXDIA ;Compile 'OBX' Segment for Diagnostic Code
"RTN","RAHLRPT",112,0)
 S RAI=$P($G(^RA(78.3,+$P(RACN0,"^",13),0)),"^") I RAI]"" D
"RTN","RAHLRPT",113,0)
 .S RAN=RAN+1
"RTN","RAHLRPT",114,0)
 .I $$PATCH^XPDUTL("MAG*2.5*1")!(+$$VERSION^XPDUTL("MAG")>2.5) D
"RTN","RAHLRPT",115,0)
 ..S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"CE"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_+$P(RACN0,"^",13)_$E(HLECH)_RAI_$E(HLECH)_"L"
"RTN","RAHLRPT",116,0)
 ..; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRPT",117,0)
 ..; S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"CE"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_+$P(RACN0,"^",13)_$E(HLECH)_$$ESCAPE^RAHLRU(RAI)_$E(HLECH)_"L"
"RTN","RAHLRPT",118,0)
 .E  D
"RTN","RAHLRPT",119,0)
 ..S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"ST"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_RAI
"RTN","RAHLRPT",120,0)
 .D OBX11^RAHLRU
"RTN","RAHLRPT",121,0)
 Q:'$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",0))  ;any secondary dx
"RTN","RAHLRPT",122,0)
 S X2=0
"RTN","RAHLRPT",123,0)
OBXDIA2 S X2=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",X2)) Q:'X2
"RTN","RAHLRPT",124,0)
 S Y=+^(X2,0),X=$P($G(^RA(78.3,+Y,0)),U)
"RTN","RAHLRPT",125,0)
 I X]"" D
"RTN","RAHLRPT",126,0)
 .S RAN=RAN+1
"RTN","RAHLRPT",127,0)
 .I $$PATCH^XPDUTL("MAG*2.5*1")!(+$$VERSION^XPDUTL("MAG")>2.5) D
"RTN","RAHLRPT",128,0)
 ..S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"CE"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_Y_$E(HLECH)_X_$E(HLECH)_"L"
"RTN","RAHLRPT",129,0)
 ..; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRPT",130,0)
 ..; S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"CE"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_Y_$E(HLECH)_$$ESCAPE^RAHLRU(X)_$E(HLECH)_"L"
"RTN","RAHLRPT",131,0)
 .E  D
"RTN","RAHLRPT",132,0)
 ..S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"ST"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_X
"RTN","RAHLRPT",133,0)
 .D OBX11^RAHLRU
"RTN","RAHLRPT",134,0)
 G OBXDIA2
"RTN","RAHLRPT",135,0)
 ;
"RTN","RAHLRPT",136,0)
OBXIMP ;Compile 'OBX' segment for Impression
"RTN","RAHLRPT",137,0)
 I '$O(^RARPT(RARPT,"I",0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"I"_$E(HLECH)_"IMPRESSION"_$E(HLECH)_"L"_HLFS_HLFS_"None Entered" D OBX11^RAHLRU Q
"RTN","RAHLRPT",138,0)
 K ^UTILITY($J,"W") S DIWF="",DIWR=80,DIWL=1 F RAI=0:0 S RAI=$O(^RARPT(RARPT,"I",RAI)) Q:'RAI  I $D(^(RAI,0)) S X=^(0) D ^DIWP
"RTN","RAHLRPT",139,0)
 F RAI=0:0 S RAI=$O(^UTILITY($J,"W",DIWL,RAI)) Q:'RAI  I $D(^(RAI,0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"I"_$E(HLECH)_"IMPRESSION"_$E(HLECH)_"L"_HLFS_HLFS_^(0) D OBX11^RAHLRU
"RTN","RAHLRPT",140,0)
 Q
"RTN","RAHLRPT",141,0)
OBXMOD ;Compile 'OBX' Segment for Modifiers
"RTN","RAHLRPT",142,0)
 S RAN=RAN+1 D OBXMOD^RAHLRU
"RTN","RAHLRPT",143,0)
 Q
"RTN","RAHLRPT",144,0)
OBXPRC ;Compile 'OBX' Segment for Procedure
"RTN","RAHLRPT",145,0)
 S RAN=RAN+1 D OBXPRC^RAHLRU
"RTN","RAHLRPT",146,0)
 Q
"RTN","RAHLRPT",147,0)
OBXTCM ; Compile 'OBX' Segment for Tech Comments
"RTN","RAHLRPT",148,0)
 D OBXTCM^RAHLRU
"RTN","RAHLRPT",149,0)
 Q
"RTN","RAHLRPT",150,0)
OBXRPT ;Compile 'OBX' Segment for Radiology Report Text
"RTN","RAHLRPT",151,0)
 I '$O(^RARPT(RARPT,"R",0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"R"_$E(HLECH)_"REPORT"_$E(HLECH)_"L"_HLFS_HLFS_"None Entered" D OBX11^RAHLRU Q
"RTN","RAHLRPT",152,0)
 K ^UTILITY($J,"W") S DIWF="",DIWR=80,DIWL=1 F RAI=0:0 S RAI=$O(^RARPT(RARPT,"R",RAI)) Q:'RAI  I $D(^(RAI,0)) S X=^(0) D ^DIWP
"RTN","RAHLRPT",153,0)
 F RAI=0:0 S RAI=$O(^UTILITY($J,"W",DIWL,RAI)) Q:'RAI  I $D(^(RAI,0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"R"_$E(HLECH)_"REPORT"_$E(HLECH)_"L"_HLFS_HLFS_^(0) D OBX11^RAHLRU
"RTN","RAHLRPT",154,0)
 ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRPT",155,0)
 ; F RAI=0:0 S RAI=$O(^UTILITY($J,"W",DIWL,RAI)) Q:'RAI  I $D(^(RAI,0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"R"_$E(HLECH)_"REPORT"_$E(HLECH)_"L"_HLFS_HLFS_$$ESCAPE^RAHLRU(^(0)) D OBX11^RAHLRU
"RTN","RAHLRPT",156,0)
 Q
"RTN","RAHLRPT",157,0)
PID ;Compile 'PID' Segment
"RTN","RAHLRPT",158,0)
 I HL("VER")']"2.2" D
"RTN","RAHLRPT",159,0)
 .S X1="",X1="PID"_HLFS_HLFS_$G(VA("PID"))_HLFS_Y_HLFS_HLFS S X=VADM(1),Y=$$HLNAME^HLFNC(X) S X1=X1_Y_HLFS_HLFS
"RTN","RAHLRPT",160,0)
 .S X=RAVADM(3),Y=$$HLDATE^HLFNC(X) S X1=X1_Y_HLFS_$S(VADM(5)]"":$S("MF"[$P(VADM(5),"^"):$P(VADM(5),"^"),1:"O"),1:"U") S:$P(VADM(2),"^")]"" $P(X1,HLFS,20)=$P(VADM(2),"^") S RAN=RAN+1,HLA("HLS",RAN)=X1
"RTN","RAHLRPT",161,0)
 I HL("VER")]"2.2" S RAN=RAN+1,HLA("HLS",RAN)=$$EN^VAFHLPID(DFN,"2,3,5,7,8,19,20")
"RTN","RAHLRPT",162,0)
 Q
"RTN","RAHLRPT",163,0)
SETUP ; Setup basic examination information
"RTN","RAHLRPT",164,0)
 S:RASET RACN0=^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)
"RTN","RAHLRPT",165,0)
 S RADTE0=9999999.9999-RADTI,RADTECN=$E(RADTE0,4,7)_$E(RADTE0,2,3)_"-"_+RACN0,RARPT0=^RARPT(RARPT,0)
"RTN","RAHLRPT",166,0)
 S RAPROC=+$P(RACN0,U,2),RAPROCIT=+$P($G(^RAMIS(71,RAPROC,0)),U,12),RAPROCIT=$P(^RA(79.2,RAPROCIT,0),U,1)
"RTN","RAHLRPT",167,0)
 S RAPRCNDE=$G(^RAMIS(71,+RAPROC,0)),RACPT=+$P(RAPRCNDE,U,9)
"RTN","RAHLRPT",168,0)
 S RACPTNDE=$$NAMCODE^RACPTMSC(RACPT,DT)
"RTN","RAHLRPT",169,0)
 S Y=$$HLDATE^HLFNC(RADTE0) S RADTE0=$S(Y:Y,1:HLQ),Y=$$M11^HLFNC(RADFN)
"RTN","RAHLRPT",170,0)
 Q
"RTN","RAHLRS1")
0^3^B51416412^n/a
"RTN","RAHLRS1",1,0)
RAHLRS1 ;HIRMFO/ROB/PAVEL - Resend HL7 messages for selected Timeframe ; 4/2/07 3:42pm
"RTN","RAHLRS1",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**80**;Mar 01, 2007;Build 19
"RTN","RAHLRS1",3,0)
 ;
"RTN","RAHLRS1",4,0)
 ; Utility to RESEND HL7 messages for selected Timeframe
"RTN","RAHLRS1",5,0)
 ;
"RTN","RAHLRS1",6,0)
 N RACNI,RADFN,RADTI,RARPT,X,RAED,RABD,RASHBD,RASHED,RASHTD,RASHTM,DIC,DA,XX,YY
"RTN","RAHLRS1",7,0)
 N RALOCK,RASSS,RASSSX,RASSSL,I,X S RALOCK=0
"RTN","RAHLRS1",8,0)
CHECK ;
"RTN","RAHLRS1",9,0)
 D SETVARS Q:$G(RAIMGTY)=""
"RTN","RAHLRS1",10,0)
 W !!,"This option re-sends HL7 messages for a date range and for designated Recipients.",!
"RTN","RAHLRS1",11,0)
 W !,"It is strongly recommended you task this to run off hours.",!!
"RTN","RAHLRS1",12,0)
 S:'$D(U) U="^" S:'$D(DTIME) DTIME=9999
"RTN","RAHLRS1",13,0)
1 W ! K %DT S %DT="AEX",%DT("A")="Beginning Date: " D ^%DT
"RTN","RAHLRS1",14,0)
 G:Y<0!($D(DTOUT))!($D(DUOUT)) STOP
"RTN","RAHLRS1",15,0)
 S RABD=Y
"RTN","RAHLRS1",16,0)
 X ^DD("DD") S RASHBD=Y
"RTN","RAHLRS1",17,0)
 S X1=RABD,X2=-1 D C^%DTC S RABD=X
"RTN","RAHLRS1",18,0)
 S RABD=RABD_"."_9999
"RTN","RAHLRS1",19,0)
 ;
"RTN","RAHLRS1",20,0)
 W ! K %DT S %DT="AEX",%DT("A")="Ending Date: ",%DT("B")="NOW" D ^%DT
"RTN","RAHLRS1",21,0)
 G:Y<0!($D(DTOUT))!($D(DUOUT)) STOP
"RTN","RAHLRS1",22,0)
 S RAED=Y
"RTN","RAHLRS1",23,0)
 X ^DD("DD") S RASHED=Y
"RTN","RAHLRS1",24,0)
 S RAED=RAED_"."_9999
"RTN","RAHLRS1",25,0)
 K XX G:'$$GETAP(.XX) STOP
"RTN","RAHLRS1",26,0)
 W !!,"****Pick the application to send the RAD data to*****",!!
"RTN","RAHLRS1",27,0)
 F I=1:1 Q:'$D(XX(I))  W !,"  #",I,"   ",$O(XX(I,""))
"RTN","RAHLRS1",28,0)
2 S DIR(0)="N"
"RTN","RAHLRS1",29,0)
 W ! S DIR("?")="Please select an available application from the list"
"RTN","RAHLRS1",30,0)
 D ^DIR Q:$D(DIRUT)  I (X'<1),(X'<I) W "Please select an available application from the list" G 2
"RTN","RAHLRS1",31,0)
 W !!,"The: ",$O(XX(+X,"")),"   will be the recipient"
"RTN","RAHLRS1",32,0)
 W !!,"Reviewing exams for selected time period... (This may take a few minutes)... "
"RTN","RAHLRS1",33,0)
 S Y=$$GETSUM(RABD,RAED)
"RTN","RAHLRS1",34,0)
 I 'Y W !!,"No exams exist for selected period, change the time frame !!!" H 3 W ! G 1
"RTN","RAHLRS1",35,0)
 W !!,"During this period of time ",Y," Exams were performed and app Run time= ",Y\5000," Hours."
"RTN","RAHLRS1",36,0)
 S RASSS(XX(X,$O(XX(+X,""))))="" D GETSUB(.RASSS,.RASSSX,.RASSSL)
"RTN","RAHLRS1",37,0)
 K ZTSAVE
"RTN","RAHLRS1",38,0)
 S ZTSAVE("RASSSX(")="",ZTSAVE("RASSSL(")="",ZTSAVE("RABD")="",ZTSAVE("RAED")="",ZTSAVE("RADFN")=""
"RTN","RAHLRS1",39,0)
 S ZTSAVE("RADTI")="",ZTSAVE("RACNI")="",ZTSAVE("RASHBD")="",ZTSAVE("RASHED")="",ZTIO=""
"RTN","RAHLRS1",40,0)
 S ZTDESC="Rad/Nuc Med Compiling HL7 Common Order",ZTRTN="TM^RAHLRS1"
"RTN","RAHLRS1",41,0)
 W ! K %DT S %DT="AEXT",%DT("A")="Scheduled time to run: ",%DT("B")="TODAY@23:59" D ^%DT
"RTN","RAHLRS1",42,0)
 G:Y<0!($D(DTOUT))!($D(DUOUT)) STOP
"RTN","RAHLRS1",43,0)
 S X=Y,YY=Y D H^%DTC S ZTDTH=$G(%H)_","_$G(%T)
"RTN","RAHLRS1",44,0)
 S Y=YY X ^DD("DD") S RASHTM=Y
"RTN","RAHLRS1",45,0)
 D ^%ZTLOAD
"RTN","RAHLRS1",46,0)
 W !,"Task ",$S('$D(ZTSK):" Has Not been Tasked !!!",1:"#:"_ZTSK_" Has been Tasked")
"RTN","RAHLRS1",47,0)
 D:$D(ZTSK)
"RTN","RAHLRS1",48,0)
 .N X,RAMPG,XMSUB,XMY,XMTEXT
"RTN","RAHLRS1",49,0)
 .S X(1)="Task #"_$G(ZTSK)_" is scheduled to run the option: "
"RTN","RAHLRS1",50,0)
 .S X(2)=">>Re-send HL7 messages for a date range and for designated Recipient.<<"
"RTN","RAHLRS1",51,0)
 .S X(3)=" Scheduled time to run: "_RASHTM
"RTN","RAHLRS1",52,0)
 .S X(4)="Date range from: "_$G(RASHBD)_" to: "_$G(RASHED)
"RTN","RAHLRS1",53,0)
 .S XMSUB="TASKMAN SCHEDULE NOTIFICATION/INFO"
"RTN","RAHLRS1",54,0)
 .S RAMPG="G.RAD HL7 MESSAGES"
"RTN","RAHLRS1",55,0)
 .S XMY(RAMPG)="",XMDUZ=.5
"RTN","RAHLRS1",56,0)
 .S XMTEXT="X("
"RTN","RAHLRS1",57,0)
 .D ^XMD
"RTN","RAHLRS1",58,0)
 Q
"RTN","RAHLRS1",59,0)
 ;
"RTN","RAHLRS1",60,0)
TM ;Taskman Entry...
"RTN","RAHLRS1",61,0)
 N RASTIME,RASUM7,RASUM7R,RASUM7E
"RTN","RAHLRS1",62,0)
 S RASTIME=$H,(RASUM7,RASUM7R,RASUM7E)=0
"RTN","RAHLRS1",63,0)
 F  S RABD=$O(^RADPT("AR",RABD)) Q:'RABD!(RABD>RAED)  D
"RTN","RAHLRS1",64,0)
 .S RADFN=0 F  S RADFN=$O(^RADPT("AR",RABD,RADFN)) Q:'RADFN  D
"RTN","RAHLRS1",65,0)
 ..S RADTI=0 F  S RADTI=$O(^RADPT("AR",RABD,RADFN,RADTI)) Q:'RADTI  D
"RTN","RAHLRS1",66,0)
 ...S RACNI=0 F  S RACNI=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI)) Q:'RACNI  D RESEND(RADFN,RADTI,RACNI)
"RTN","RAHLRS1",67,0)
 K X S X(1)="Task #"_$G(ZTSK)_" successfully completed the option: "
"RTN","RAHLRS1",68,0)
 S X(2)=">>Re-send HL7 messages for a date range and for designated Recipient.<<"
"RTN","RAHLRS1",69,0)
 S X(3)="Date range from: "_$G(RASHBD)_" to: "_$G(RASHED)
"RTN","RAHLRS1",70,0)
 S X(4)="# Of RAD Reports transferred: "_$G(RASUM7R)
"RTN","RAHLRS1",71,0)
 S X(5)="# Of Exams transferred:      "_$G(RASUM7)
"RTN","RAHLRS1",72,0)
 S:$G(RASUM7E) X(6)="# Of Exams not transferred because of ""BAD DATA"": "_$G(RASUM7E)
"RTN","RAHLRS1",73,0)
 S XMSUB="TASKMAN ""RESEND HL7 OPTION"" COMPLETED/INFO"
"RTN","RAHLRS1",74,0)
 S RAMPG="G.RAD HL7 MESSAGES"
"RTN","RAHLRS1",75,0)
 S XMY(RAMPG)="",XMDUZ=.5
"RTN","RAHLRS1",76,0)
 S XMTEXT="X("
"RTN","RAHLRS1",77,0)
 D ^XMD
"RTN","RAHLRS1",78,0)
 G STOP
"RTN","RAHLRS1",79,0)
 Q
"RTN","RAHLRS1",80,0)
 ;
"RTN","RAHLRS1",81,0)
RESEND(RADFN,RADTI,RACNI) ; re-send exam message(s) to HL7 subscribers
"RTN","RAHLRS1",82,0)
 ; for every 10 messages sent, make sure queue is not clogged... $$HANG
"RTN","RAHLRS1",83,0)
 I '(+^(RACNI,0)) S RASUM7E=RASUM7E+1 Q
"RTN","RAHLRS1",84,0)
 I '$P(^(0),U,2) S RASUM7E=RASUM7E+1 Q
"RTN","RAHLRS1",85,0)
 N RABD,RAED,QUIT
"RTN","RAHLRS1",86,0)
 ;
"RTN","RAHLRS1",87,0)
 I '$D(DT) D ^%DT S DT=Y
"RTN","RAHLRS1",88,0)
 ;
"RTN","RAHLRS1",89,0)
 S RAED=$$RAED(RADFN,RADTI,RACNI)
"RTN","RAHLRS1",90,0)
 I '$L(RAED) S RASUM7E=RASUM7E+1 Q
"RTN","RAHLRS1",91,0)
 D:RAED[",REG,"
"RTN","RAHLRS1",92,0)
 .D CHSUM N RASUM7,RASUM7R,RASUM7E D REG^RAHLRPC
"RTN","RAHLRS1",93,0)
 D:RAED[",CANCEL,"
"RTN","RAHLRS1",94,0)
 .D CHSUM N RASUM7,RASUM7R,RASUM7E D CANCEL^RAHLRPC
"RTN","RAHLRS1",95,0)
 D:RAED[",EXAM,"
"RTN","RAHLRS1",96,0)
 .D CHSUM
"RTN","RAHLRS1",97,0)
 .S $P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),"^",30)="" ;Reset sent flag
"RTN","RAHLRS1",98,0)
 .N RASUM7,RAEXMDUN,RASUM7R,RASUM7E D 1^RAHLRPC
"RTN","RAHLRS1",99,0)
 D:RAED[",RPT,"
"RTN","RAHLRS1",100,0)
 .D CHSUM N RASUM7,RANOSEND,RASUM7R,RASUM7E,RARPT D RPT^RAHLRPC
"RTN","RAHLRS1",101,0)
 Q
"RTN","RAHLRS1",102,0)
 ;
"RTN","RAHLRS1",103,0)
RAED(RADFN,RADTI,RACNI) ; identify correct ^RAHLRPC entry point(s)
"RTN","RAHLRS1",104,0)
 ;
"RTN","RAHLRS1",105,0)
 N RASTAT,RAIMTYP,RAORD,RETURN,RARPT
"RTN","RAHLRS1",106,0)
 S RASTAT=""
"RTN","RAHLRS1",107,0)
 ;
"RTN","RAHLRS1",108,0)
 S RETURN=",REG,"
"RTN","RAHLRS1",109,0)
 ;
"RTN","RAHLRS1",110,0)
 S RASTAT=$$GET1^DIQ(70.03,RACNI_","_RADTI_","_RADFN,3,"I")
"RTN","RAHLRS1",111,0)
 S RARPT=$$GET1^DIQ(70.03,RACNI_","_RADTI_","_RADFN,17,"I")
"RTN","RAHLRS1",112,0)
 ;
"RTN","RAHLRS1",113,0)
 S RAIMTYP=$$GET1^DIQ(72,+RASTAT,7) Q:'$L(RAIMTYP) ""
"RTN","RAHLRS1",114,0)
 S RAORD=$$GET1^DIQ(72,+RASTAT,3)
"RTN","RAHLRS1",115,0)
 ;
"RTN","RAHLRS1",116,0)
 S:RAORD=0 RETURN=RETURN_"CANCEL,"
"RTN","RAHLRS1",117,0)
 ;
"RTN","RAHLRS1",118,0)
 S:$$GET1^DIQ(72,+RASTAT,8)="YES" RETURN=RETURN_"EXAM," ; Generate Examined HL7 Message
"RTN","RAHLRS1",119,0)
 ;
"RTN","RAHLRS1",120,0)
 D:RETURN'[",EXAM,"
"RTN","RAHLRS1",121,0)
 .; also check previous statuses for 'Generate Examined HL7 Message'
"RTN","RAHLRS1",122,0)
 .F  S RAORD=$O(^RA(72,"AA",RAIMTYP,RAORD),-1) Q:+RAORD<1  D  Q:RETURN[",EXAM,"
"RTN","RAHLRS1",123,0)
 ..S RASTAT=$O(^RA(72,"AA",RAIMTYP,RAORD,0))
"RTN","RAHLRS1",124,0)
 ..S:$$GET1^DIQ(72,+RASTAT,8)="YES" RETURN=RETURN_"EXAM,"
"RTN","RAHLRS1",125,0)
 ;
"RTN","RAHLRS1",126,0)
 ; Check if Verified Report exists
"RTN","RAHLRS1",127,0)
 I RARPT]"",$$GET1^DIQ(74,RARPT_",",5,"I")="V" S RETURN=RETURN_"RPT,",RASUM7R=RASUM7R+1
"RTN","RAHLRS1",128,0)
 ;
"RTN","RAHLRS1",129,0)
 Q RETURN
"RTN","RAHLRS1",130,0)
 ;
"RTN","RAHLRS1",131,0)
SETVARS ; Setup key Rad/Nuc Med variables
"RTN","RAHLRS1",132,0)
 ;
"RTN","RAHLRS1",133,0)
 I $O(RACCESS(DUZ,""))="" D SETVARS^RAPSET1(0)
"RTN","RAHLRS1",134,0)
 Q:'($D(RACCESS(DUZ))\10)  ; user does not have location access
"RTN","RAHLRS1",135,0)
 I $G(RAIMGTY)="" D SETVARS^RAPSET1(1) K:$G(RAIMGTY)="" XQUIT
"RTN","RAHLRS1",136,0)
 Q
"RTN","RAHLRS1",137,0)
STOP ;
"RTN","RAHLRS1",138,0)
 D ^%ZISC
"RTN","RAHLRS1",139,0)
 Q
"RTN","RAHLRS1",140,0)
 ;
"RTN","RAHLRS1",141,0)
GETAP(XX) ;
"RTN","RAHLRS1",142,0)
 ;Get list of Applications in XX
"RTN","RAHLRS1",143,0)
 N XXX,X11,X1,X2,X3,Z,Z1,J
"RTN","RAHLRS1",144,0)
 F X11="RA REG","RA EXAMINED","RA CANCEL","RA RPT" D
"RTN","RAHLRS1",145,0)
 .S X1=$E(X11,1,$L(X11)-1)_$C($A($E(X11,$L(X11)))-1)
"RTN","RAHLRS1",146,0)
 .F  S X1=$O(^ORD(101,"B",X1)) Q:X1'[X11  S X2=$O(^ORD(101,"B",X1,0)) Q:'X2  D
"RTN","RAHLRS1",147,0)
 ..K Z S X3=0 F  S X3=$O(^ORD(101,X2,775,X3)) Q:'X3  S Z(+^(X3,0))=""
"RTN","RAHLRS1",148,0)
 ..Q:'$D(Z)  K Z1 S X3=0 F  S X3=$O(Z(X3)) Q:'X3  S XXX(+$P($G(^ORD(101,X3,770)),U,2))=""
"RTN","RAHLRS1",149,0)
 S X1=0 F J=1:1 S X1=$O(XXX(X1)) Q:'X1  S XX(J,$P(^HL(771,X1,0),U))=X1
"RTN","RAHLRS1",150,0)
 Q $S($D(XXX):1,1:0)
"RTN","RAHLRS1",151,0)
 ;
"RTN","RAHLRS1",152,0)
GETSUB(APL,SUB,LINK) ;Get all subscribers (not associated with application)... To be excluded as receipients..
"RTN","RAHLRS1",153,0)
 ; Get all logical links to be in business, so we can control flow of messages
"RTN","RAHLRS1",154,0)
 ;APL(IEN) = Application 771 IENs Input
"RTN","RAHLRS1",155,0)
 ;SUB(Event Driver IEN,Subscriber IEN)="" Output
"RTN","RAHLRS1",156,0)
 ;LINK(IEN of logical link)  
"RTN","RAHLRS1",157,0)
 N XX,X11,X1,X2,X3
"RTN","RAHLRS1",158,0)
 Q:'$O(APL(0))
"RTN","RAHLRS1",159,0)
 F X11="RA REG","RA EXAMINED","RA CANCEL","RA RPT" D
"RTN","RAHLRS1",160,0)
 .S X1=$E(X11,1,$L(X11)-1)_$C($A($E(X11,$L(X11)))-1)
"RTN","RAHLRS1",161,0)
 .F  S X1=$O(^ORD(101,"B",X1)) Q:X1'[X11  S X2=$O(^ORD(101,"B",X1,0)) Q:'X2  D
"RTN","RAHLRS1",162,0)
 ..S X3=0 F  S X3=$O(^ORD(101,X2,775,X3)) Q:'X3  S XX=+^(X3,0) D
"RTN","RAHLRS1",163,0)
 ...I '$D(APL(+$P($G(^ORD(101,XX,770)),U,2))) S SUB(X2,XX)=X1 Q
"RTN","RAHLRS1",164,0)
 ...S XX=+$P($G(^ORD(101,XX,770)),U,7) S:XX LINK(XX)=""
"RTN","RAHLRS1",165,0)
 Q
"RTN","RAHLRS1",166,0)
GETHLP(RAEID,HLP) ; Get excluded subcribers set into HLP array
"RTN","RAHLRS1",167,0)
 N I,J,II S II=$O(HLP("EXCLUDE SUBSCRIBER",99999999),-1)+1
"RTN","RAHLRS1",168,0)
 S I=0 F J=II:1 S I=$O(RASSSX(RAEID,I)) Q:'I  S HLP("EXCLUDE SUBSCRIBER",J)=I
"RTN","RAHLRS1",169,0)
 Q
"RTN","RAHLRS1",170,0)
CHSUM ;CHECKSUM
"RTN","RAHLRS1",171,0)
 S RASUM7=RASUM7+1 I '(RASUM7#50) F  Q:'$$HANG  H 15
"RTN","RAHLRS1",172,0)
 Q
"RTN","RAHLRS1",173,0)
HANG() ; scan all logical links to see if queue is bigger than 100
"RTN","RAHLRS1",174,0)
 N I,S,L,QUIT
"RTN","RAHLRS1",175,0)
 S (QUIT,L)=0
"RTN","RAHLRS1",176,0)
 F  S L=$O(RASSSL(L)) Q:'L  S (S,I)=0 D  Q:QUIT
"RTN","RAHLRS1",177,0)
 .F  S I=$O(^HLMA("AC","O",L,I)) Q:'I  S S=S+1 I S>100 S QUIT=1 Q  ;Quit if more than 100 messages waiting in outgoing queue for link...
"RTN","RAHLRS1",178,0)
 Q QUIT
"RTN","RAHLRS1",179,0)
GETSUM(RABD,RAED) ; Get number of exams for period called from RAHLR RAHLR1 RAHLRPT RAHLRPT1
"RTN","RAHLRS1",180,0)
 N RADFN,RADTI,RACNI,RASUM7
"RTN","RAHLRS1",181,0)
 S RASUM7=0
"RTN","RAHLRS1",182,0)
 F  S RABD=$O(^RADPT("AR",RABD)) Q:'RABD!(RABD>RAED)  D
"RTN","RAHLRS1",183,0)
 .S RADFN=0 F  S RADFN=$O(^RADPT("AR",RABD,RADFN)) Q:'RADFN  D
"RTN","RAHLRS1",184,0)
 ..S RADTI=0 F  S RADTI=$O(^RADPT("AR",RABD,RADFN,RADTI)) Q:'RADTI  D
"RTN","RAHLRS1",185,0)
 ...S RACNI=0 F  S RACNI=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI)) Q:'RACNI  S:^(RACNI,0) RASUM7=RASUM7+1
"RTN","RAHLRS1",186,0)
 Q RASUM7
"RTN","RAHLRS1",187,0)
 Q
"VER")
8.0^22.0
"BLD",6319,6)
^72
**END**
**END**
