Released DG*5.3*714 SEQ #646
Extracted from mail message
**KIDS**:DG*5.3*714^

**INSTALL NAME**
DG*5.3*714
"BLD",6263,0)
DG*5.3*714^REGISTRATION^0^3060918^y
"BLD",6263,1,0)
^^2^2^3060918^
"BLD",6263,1,1,0)
 
"BLD",6263,1,2,0)
Delete REQUIRED means test from deceased patients.
"BLD",6263,4,0)
^9.64PA^2^1
"BLD",6263,4,2,0)
2
"BLD",6263,4,2,2,0)
^9.641^2^1
"BLD",6263,4,2,2,2,0)
PATIENT  (File-top level)
"BLD",6263,4,2,2,2,1,0)
^9.6411^.351^1
"BLD",6263,4,2,2,2,1,.351,0)
DATE OF DEATH
"BLD",6263,4,2,222)
y^n^p^^^^n^^n
"BLD",6263,4,2,224)

"BLD",6263,4,"APDD",2,2)

"BLD",6263,4,"APDD",2,2,.351)

"BLD",6263,4,"B",2,2)

"BLD",6263,6.3)
5
"BLD",6263,"ABPKG")
n
"BLD",6263,"INID")
^y
"BLD",6263,"INIT")
START^DG714
"BLD",6263,"KRN",0)
^9.67PA^8989.52^19
"BLD",6263,"KRN",.4,0)
.4
"BLD",6263,"KRN",.401,0)
.401
"BLD",6263,"KRN",.402,0)
.402
"BLD",6263,"KRN",.403,0)
.403
"BLD",6263,"KRN",.5,0)
.5
"BLD",6263,"KRN",.84,0)
.84
"BLD",6263,"KRN",3.6,0)
3.6
"BLD",6263,"KRN",3.8,0)
3.8
"BLD",6263,"KRN",9.2,0)
9.2
"BLD",6263,"KRN",9.8,0)
9.8
"BLD",6263,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",6263,"KRN",9.8,"NM",1,0)
DGMTDELS^^0^B2881711
"BLD",6263,"KRN",9.8,"NM",2,0)
DG714^^0^B45746053
"BLD",6263,"KRN",9.8,"NM","B","DG714",2)

"BLD",6263,"KRN",9.8,"NM","B","DGMTDELS",1)

"BLD",6263,"KRN",19,0)
19
"BLD",6263,"KRN",19,"NM",0)
^9.68A^^
"BLD",6263,"KRN",19.1,0)
19.1
"BLD",6263,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",6263,"KRN",101,0)
101
"BLD",6263,"KRN",101,"NM",0)
^9.68A^^
"BLD",6263,"KRN",409.61,0)
409.61
"BLD",6263,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",6263,"KRN",771,0)
771
"BLD",6263,"KRN",771,"NM",0)
^9.68A^^
"BLD",6263,"KRN",870,0)
870
"BLD",6263,"KRN",8989.51,0)
8989.51
"BLD",6263,"KRN",8989.52,0)
8989.52
"BLD",6263,"KRN",8994,0)
8994
"BLD",6263,"KRN","B",.4,.4)

"BLD",6263,"KRN","B",.401,.401)

"BLD",6263,"KRN","B",.402,.402)

"BLD",6263,"KRN","B",.403,.403)

"BLD",6263,"KRN","B",.5,.5)

"BLD",6263,"KRN","B",.84,.84)

"BLD",6263,"KRN","B",3.6,3.6)

"BLD",6263,"KRN","B",3.8,3.8)

"BLD",6263,"KRN","B",9.2,9.2)

"BLD",6263,"KRN","B",9.8,9.8)

"BLD",6263,"KRN","B",19,19)

"BLD",6263,"KRN","B",19.1,19.1)

"BLD",6263,"KRN","B",101,101)

"BLD",6263,"KRN","B",409.61,409.61)

"BLD",6263,"KRN","B",771,771)

"BLD",6263,"KRN","B",870,870)

"BLD",6263,"KRN","B",8989.51,8989.51)

"BLD",6263,"KRN","B",8989.52,8989.52)

"BLD",6263,"KRN","B",8994,8994)

"BLD",6263,"QUES",0)
^9.62^^
"BLD",6263,"REQB",0)
^9.611^^
"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^n^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2,.351)

"INIT")
START^DG714
"IX",2,2,"ADGFM351",0)
2^ADGFM351^This x-ref calls the DG FIELD MONITOR event point.^MU^^F^I^I^2^^^^^A
"IX",2,2,"ADGFM351",.1,0)
^^5^5^3020624
"IX",2,2,"ADGFM351",.1,1,0)
This cross reference activates the DG FIELD MONITOR event point.
"IX",2,2,"ADGFM351",.1,2,0)
Applications that wish to monitor edit activity related to this field may
"IX",2,2,"ADGFM351",.1,3,0)
subscribe to that event point and take action as indicated by the changes
"IX",2,2,"ADGFM351",.1,4,0)
that occur.  Refer to the DG FIELD MONITOR protocol for a description of
"IX",2,2,"ADGFM351",.1,5,0)
the information available at the time of the event.
"IX",2,2,"ADGFM351",1)
D FC^DGFCPROT(.DA,2,.351,"SET",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"ADGFM351",2)
D FC^DGFCPROT(.DA,2,.351,"KILL",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"ADGFM351",11.1,0)
^.114IA^1^1
"IX",2,2,"ADGFM351",11.1,1,0)
1^F^2^.351^^^F
"IX",2,2,"ADGFMD351",0)
2^ADGFMD351^This x-ref calls the DG FIELD MONITOR event point.^MU^^F^I^I^2^^^^^A
"IX",2,2,"ADGFMD351",.1,0)
^^5^5^3020820
"IX",2,2,"ADGFMD351",.1,1,0)
This cross reference activates the DG FIELD MONITOR event point.
"IX",2,2,"ADGFMD351",.1,2,0)
Applications that wish to monitor edit activity related to this field may
"IX",2,2,"ADGFMD351",.1,3,0)
subscribe to that event point and take action as indicated by the changes
"IX",2,2,"ADGFMD351",.1,4,0)
that occur.  Refer to the DG FIELD MONITOR protocol for a description of
"IX",2,2,"ADGFMD351",.1,5,0)
the information available at the time of the event.
"IX",2,2,"ADGFMD351",1)
D FC^DGFCPROT(.DA,2,.351,"SET",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"ADGFMD351",2)
D FC^DGFCPROT(.DA,2,.351,"KILL",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"ADGFMD351",11.1,0)
^.114IA^1^1
"IX",2,2,"ADGFMD351",11.1,1,0)
1^F^2^.351^^^F
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
714^3060918
"PKG",5,22,1,"PAH",1,1,0)
^^2^2^3060918
"PKG",5,22,1,"PAH",1,1,1,0)
 
"PKG",5,22,1,"PAH",1,1,2,0)
Delete REQUIRED means test from deceased patients.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DG714")
0^2^B45746053^n/a
"RTN","DG714",1,0)
DG714 ;ALB/GAH - Deceased Patient Means Test Cleanup ; 18-SEP-2006 15:41
"RTN","DG714",2,0)
 ;;5.3;Registration;**714**;14-AUG-2006;Build 5
"RTN","DG714",3,0)
 ;
"RTN","DG714",4,0)
 ; This program will loop through all veterans on the system that
"RTN","DG714",5,0)
 ; have means tests.  For those people that are deceased, their last
"RTN","DG714",6,0)
 ; means test will be deleted if it has a status of REQUIRED.
"RTN","DG714",7,0)
 ; 
"RTN","DG714",8,0)
 ; ^XTMP("DG714",0,0)=DELRECS^DFNLST^STATUS^STARTTM^ENDTIME^TOTRECS
"RTN","DG714",9,0)
 ;    where   DELRECS = Number of patients that had means tests deleted
"RTN","DG714",10,0)
 ;            DFNLST  = Last record number examined
"RTN","DG714",11,0)
 ;            STATUS  = RUNNING   - Job is still processing
"RTN","DG714",12,0)
 ;                      COMPLETED - Job processed all records
"RTN","DG714",13,0)
 ;                      STOPPED   - Job was stopped before completion
"RTN","DG714",14,0)
 ;            STARTTM = Date/Time when job was started in FM format
"RTN","DG714",15,0)
 ;            ENDTIME = Date/Time when job stopped or completed in FM format
"RTN","DG714",16,0)
 ;            TOTRECS = Total number of record examined
"RTN","DG714",17,0)
 ;
"RTN","DG714",18,0)
 ; ^XTMP("DG714",1,"TASK")=ZTSK
"RTN","DG714",19,0)
 ;    where   ZTSK    = Taskman task number
"RTN","DG714",20,0)
 ;
"RTN","DG714",21,0)
 ; ^XTMP("DG714",1,"STOP")=ZTSTOP
"RTN","DG714",22,0)
 ;    where   ZTSTOP    = 1 to stop the job
"RTN","DG714",23,0)
 ;
"RTN","DG714",24,0)
 ; ^XTMP("DG714","TEST")=""
"RTN","DG714",25,0)
 ;    This node is set to send mail to a test account during testing
"RTN","DG714",26,0)
 ;    It will not be set in production
"RTN","DG714",27,0)
 ;
"RTN","DG714",28,0)
 ; Must be run from line tag
"RTN","DG714",29,0)
 Q
"RTN","DG714",30,0)
 ;
"RTN","DG714",31,0)
START ;Start process
"RTN","DG714",32,0)
 N NAMSPC,TASK,U
"RTN","DG714",33,0)
 S U="^"
"RTN","DG714",34,0)
 S NAMSPC=$$NAMSPC
"RTN","DG714",35,0)
 S TASK=$P($G(^XTMP(NAMSPC,1,"TASK")),U,3)
"RTN","DG714",36,0)
 Q:TASK&$$ACTIVE(TASK)   ; Quit if already running
"RTN","DG714",37,0)
 D QUEUE($$QTIME)
"RTN","DG714",38,0)
 Q
"RTN","DG714",39,0)
QUEUE(ZTDTH)    ; Queue the process
"RTN","DG714",40,0)
 N NAMSPC,ZTRTN,ZTDESC,ZTIO,ZTSK
"RTN","DG714",41,0)
 S NAMSPC=$$NAMSPC
"RTN","DG714",42,0)
 S ZTRTN="QUE^"_NAMSPC
"RTN","DG714",43,0)
 S ZTDESC=NAMSPC_" - Remove REQUIRED MT for deceased patients"
"RTN","DG714",44,0)
 S ZTIO=""
"RTN","DG714",45,0)
 D ^%ZTLOAD
"RTN","DG714",46,0)
 K ^XTMP(NAMSPC,1,"TASK")
"RTN","DG714",47,0)
 I '$D(ZTSK) S ^XTMP(NAMSPC,1,"TASK")="Unable to queue post-install process."
"RTN","DG714",48,0)
 I $D(ZTSK) S ^XTMP(NAMSPC,1,"TASK")=$G(ZTSK)
"RTN","DG714",49,0)
 D HOME^%ZIS
"RTN","DG714",50,0)
 Q
"RTN","DG714",51,0)
QTIME() ; Get the run time for queuing
"RTN","DG714",52,0)
 N %,%H,%I,X
"RTN","DG714",53,0)
 D NOW^%DTC
"RTN","DG714",54,0)
 Q $P(%,".")_"."_$E($P(%,".",2),1,4)
"RTN","DG714",55,0)
 ;
"RTN","DG714",56,0)
TEST(START,END,PROCESS) ;Entry point for testing
"RTN","DG714",57,0)
 ; There is a range given so no need for the old data in ^XTMP
"RTN","DG714",58,0)
 K ^XTMP($$NAMSPC,0)
"RTN","DG714",59,0)
 S START=+START
"RTN","DG714",60,0)
 ; START is the first record to be processed so prime it for $O
"RTN","DG714",61,0)
 I START'=0 S START=$O(^DGMT(408.31,"AID",1,START),-1)
"RTN","DG714",62,0)
 I END'="" S END=$O(^DGMT(408.31,"AID",1,END))
"RTN","DG714",63,0)
 S TESTING=1
"RTN","DG714",64,0)
 D QUE
"RTN","DG714",65,0)
 Q
"RTN","DG714",66,0)
QUE    ;
"RTN","DG714",67,0)
 N ZTSTOP,X,U,NAMSPC,COMPLETE
"RTN","DG714",68,0)
 S U="^"
"RTN","DG714",69,0)
 S NAMSPC=$$NAMSPC
"RTN","DG714",70,0)
 I '$D(TESTING) N TESTING S TESTING=0
"RTN","DG714",71,0)
 S X=$$SETUPX(90)
"RTN","DG714",72,0)
 S X=$G(^XTMP(NAMSPC,0,0))
"RTN","DG714",73,0)
 S $P(X,U,3)="RUNNING"
"RTN","DG714",74,0)
 S $P(X,U,4)=$$NOW^XLFDT
"RTN","DG714",75,0)
 S ^XTMP(NAMSPC,0,0)=X
"RTN","DG714",76,0)
 ;
"RTN","DG714",77,0)
 S ZTSTOP=$$CLEAN(TESTING)
"RTN","DG714",78,0)
 S X=$G(^XTMP(NAMSPC,0,0))
"RTN","DG714",79,0)
 S $P(X,U,3)=$S(ZTSTOP:"STOPPED",1:"COMPLETED")
"RTN","DG714",80,0)
 S $P(X,U,5)=$$NOW^XLFDT
"RTN","DG714",81,0)
 S ^XTMP(NAMSPC,0,0)=X
"RTN","DG714",82,0)
 D MAIL($P(X,U,4),$P(X,U,5),$P(X,U),$P(X,U,6),'ZTSTOP)
"RTN","DG714",83,0)
 K TESTING,^XTMP(NAMSPC,1)
"RTN","DG714",84,0)
 L -^XTMP(NAMSPC)
"RTN","DG714",85,0)
 Q
"RTN","DG714",86,0)
SETUPX(EXPDAYS) ;
"RTN","DG714",87,0)
 ; requires EXPDAYS - number of days to keep XTMP around
"RTN","DG714",88,0)
 N BEGTIME,PURGDT,NAMSPC,U
"RTN","DG714",89,0)
 S U="^"
"RTN","DG714",90,0)
 S NAMSPC=$$NAMSPC
"RTN","DG714",91,0)
 S BEGTIME=$$NOW^XLFDT()
"RTN","DG714",92,0)
 S PURGDT=$$FMADD^XLFDT(BEGTIME,EXPDAYS)
"RTN","DG714",93,0)
 S ^XTMP(NAMSPC,0)=PURGDT_U_BEGTIME
"RTN","DG714",94,0)
 S $P(^XTMP(NAMSPC,0),U,3)="MEANS TEST DATE OF DEATH CLEANUP"
"RTN","DG714",95,0)
 Q 1
"RTN","DG714",96,0)
STOP()     ;returns stop flag
"RTN","DG714",97,0)
 N ZTSTOP,U,X,NAMSPC
"RTN","DG714",98,0)
 S U="^"
"RTN","DG714",99,0)
 S NAMSPC=$$NAMSPC
"RTN","DG714",100,0)
 S ZTSTOP=0
"RTN","DG714",101,0)
 ; Check to see if the job is set to stop either manually
"RTN","DG714",102,0)
 ; or through Taskman
"RTN","DG714",103,0)
 I $$S^%ZTLOAD!$G(^XTMP(NAMSPC,1,"STOP")) D
"RTN","DG714",104,0)
 . K ^XTMP(NAMSPC,1,"STOP")
"RTN","DG714",105,0)
 . S ZTSTOP=1
"RTN","DG714",106,0)
 Q ZTSTOP
"RTN","DG714",107,0)
ACTIVE(ZTSK)    ;check if job is running, stopped, or complete
"RTN","DG714",108,0)
 N NAMSPC,STAT,Y
"RTN","DG714",109,0)
 S NAMSPC=$$NAMSPC
"RTN","DG714",110,0)
 S ZTSK=+$G(^XTMP(NAMSPC,1,"TASK"))
"RTN","DG714",111,0)
 D STAT^%ZTLOAD
"RTN","DG714",112,0)
 S Y=ZTSK(1)
"RTN","DG714",113,0)
 I Y=0 S STAT=-1
"RTN","DG714",114,0)
 I ",1,2,4,"[(","_Y_",") S STAT=1
"RTN","DG714",115,0)
 I ",3,5,"[(","_Y_",") S STAT=0
"RTN","DG714",116,0)
 ; If the job is not active but the status is running, change status to
"RTN","DG714",117,0)
 ; STOPPED
"RTN","DG714",118,0)
 I $P($G(^XTMP(NAMSPC,0,0)),U,3)="RUNNING",STAT'>0 S $P(^XTMP(NAMSPC,0,0),U,3)="STOPPED"
"RTN","DG714",119,0)
 Q STAT
"RTN","DG714",120,0)
 ;
"RTN","DG714",121,0)
NAMSPC() ;
"RTN","DG714",122,0)
 Q $T(+0)
"RTN","DG714",123,0)
CLEAN(TESTING) ; Loop through veterans to compare data
"RTN","DG714",124,0)
 N CRF,DATA,DFN,DGMTI,NAMSPC,DELRECS,HIT,REC11,REC12,REC132,STARTTM,STATUS,TOTRECS,U,ZTSTOP
"RTN","DG714",125,0)
 S NAMSPC=$$NAMSPC
"RTN","DG714",126,0)
 S U="^"
"RTN","DG714",127,0)
 S (DELRECS,ZTSTOP)=0
"RTN","DG714",128,0)
 S STARTTM=$$NOW^XLFDT
"RTN","DG714",129,0)
 S DATA=^XTMP(NAMSPC,0,0)
"RTN","DG714",130,0)
 I 'TESTING S END="",DFN=0
"RTN","DG714",131,0)
 I TESTING S DFN=START   ;If testing, get range
"RTN","DG714",132,0)
 N STOP
"RTN","DG714",133,0)
 S STOP=0
"RTN","DG714",134,0)
 K ^XTMP(NAMSPC,"TEST","AUDIT")
"RTN","DG714",135,0)
 ;
"RTN","DG714",136,0)
 ; Loop through the means test cross reference
"RTN","DG714",137,0)
 F TOTRECS=0:1 S DFN=$O(^DGMT(408.31,"AID",1,DFN)) D  Q:ZTSTOP!STOP
"RTN","DG714",138,0)
 . I DFN=END!(DFN'?1.N.1(1"."1.N)) S STOP=1 Q
"RTN","DG714",139,0)
 . ; Keep track of the last DFN processes
"RTN","DG714",140,0)
 . S $P(^XTMP(NAMSPC,0,0),U,2)=DFN
"RTN","DG714",141,0)
 . ; Check that there is a date of death and that the last means test
"RTN","DG714",142,0)
 . ; has a status of REQUIRED
"RTN","DG714",143,0)
 . S $P(^XTMP(NAMSPC,0,0),U,2)=DFN
"RTN","DG714",144,0)
 . S HIT=0
"RTN","DG714",145,0)
 . F  Q:'$$OK2DEL^DGMTDELS(DFN,.DGMTI)  D
"RTN","DG714",146,0)
 . . S HIT=1
"RTN","DG714",147,0)
 . . ; Save the audit info if testing
"RTN","DG714",148,0)
 . . I TESTING S ^XTMP(NAMSPC,"TEST","AUDIT",DFN)=DGMTI
"RTN","DG714",149,0)
 . . ; Delete the means test
"RTN","DG714",150,0)
 . . D:'TESTING!(TESTING&$G(PROCESS)) DELMT^DGMTDELS(DGMTI)
"RTN","DG714",151,0)
 . ; Check to see if the job has been signalled to stop
"RTN","DG714",152,0)
 . I TOTRECS,TOTRECS#1000=0 S ZTSTOP=$$STOP
"RTN","DG714",153,0)
 . S:HIT DELRECS=DELRECS+1  ;increment new record counter if means test deleted
"RTN","DG714",154,0)
 ;
"RTN","DG714",155,0)
 I TESTING S ^XTMP(NAMSPC,"TEST","TOT")="PROCESSED:"_TOTRECS_"  DELETED:"_DELRECS
"RTN","DG714",156,0)
 ; Do some recordkeeping
"RTN","DG714",157,0)
 S DATA=^XTMP(NAMSPC,0,0)
"RTN","DG714",158,0)
 S $P(DATA,U,1)=DELRECS
"RTN","DG714",159,0)
 S $P(DATA,U,4)=STARTTM
"RTN","DG714",160,0)
 S $P(DATA,U,6)=TOTRECS
"RTN","DG714",161,0)
 S ^XTMP(NAMSPC,0,0)=DATA
"RTN","DG714",162,0)
 Q ZTSTOP
"RTN","DG714",163,0)
MAIL(STARTTM,ENDTIME,DELRECS,TOTRECS,COMPLETE)  ; Send mail message
"RTN","DG714",164,0)
 N XMDUZ,XMY,XMSUB,XMTEXT
"RTN","DG714",165,0)
 S NAMSPC=$$NAMSPC
"RTN","DG714",166,0)
 S U="^"
"RTN","DG714",167,0)
 ; Set FROM duz
"RTN","DG714",168,0)
 S XMDUZ=.5
"RTN","DG714",169,0)
 ; Send completion message to developer
"RTN","DG714",170,0)
 S XMY(DUZ)=""
"RTN","DG714",171,0)
 S XMSUB="DG MEANS TEST DATE OF DEATH CLEANUP"
"RTN","DG714",172,0)
 I COMPLETE D
"RTN","DG714",173,0)
 . S ^TMP(NAMSPC,$J,"MSG",0)=6
"RTN","DG714",174,0)
 . S ^TMP(NAMSPC,$J,"MSG",1)="   Means Test Date of Death Cleanup"
"RTN","DG714",175,0)
 . S ^TMP(NAMSPC,$J,"MSG",2)=""
"RTN","DG714",176,0)
 . S ^TMP(NAMSPC,$J,"MSG",3)="      Started at: "_$TR($$FMTE^XLFDT(STARTTM,2),"@"," ")
"RTN","DG714",177,0)
 . S ^TMP(NAMSPC,$J,"MSG",4)="    Completed at: "_$TR($$FMTE^XLFDT(ENDTIME,2),"@"," ")
"RTN","DG714",178,0)
 . S ^TMP(NAMSPC,$J,"MSG",5)="Records Examined: "_TOTRECS
"RTN","DG714",179,0)
 . S ^TMP(NAMSPC,$J,"MSG",6)=" Records Deleted: "_DELRECS
"RTN","DG714",180,0)
 . S XMTEXT="^TMP(NAMSPC,$J,""MSG"","
"RTN","DG714",181,0)
 I 'COMPLETE D
"RTN","DG714",182,0)
 . S ^TMP(NAMSPC,$J,"MSG",0)=8
"RTN","DG714",183,0)
 . S ^TMP(NAMSPC,$J,"MSG",1)="        Means Test Date of Death Cleanup"
"RTN","DG714",184,0)
 . S ^TMP(NAMSPC,$J,"MSG",2)="          ***Processing not complete***"
"RTN","DG714",185,0)
 . S ^TMP(NAMSPC,$J,"MSG",3)=""
"RTN","DG714",186,0)
 . S ^TMP(NAMSPC,$J,"MSG",4)="           Started at: "_$TR($$FMTE^XLFDT(STARTTM,2),"@"," ")
"RTN","DG714",187,0)
 . S ^TMP(NAMSPC,$J,"MSG",5)="           Stopped at: "_$TR($$FMTE^XLFDT(ENDTIME,2),"@"," ")
"RTN","DG714",188,0)
 . S ^TMP(NAMSPC,$J,"MSG",6)="     Records Examined: "_TOTRECS
"RTN","DG714",189,0)
 . S ^TMP(NAMSPC,$J,"MSG",7)="      Records Deleted: "_DELRECS
"RTN","DG714",190,0)
 . S ^TMP(NAMSPC,$J,"MSG",8)="Last Record Processed: "_$P($G(^XTMP(NAMSPC,0,0)),U,2)
"RTN","DG714",191,0)
 . S XMTEXT="^TMP(NAMSPC,$J,""MSG"","
"RTN","DG714",192,0)
 D ^XMD
"RTN","DG714",193,0)
 K ^TMP(NAMSPC)
"RTN","DG714",194,0)
 Q
"RTN","DGMTDELS")
0^1^B2881711^n/a
"RTN","DGMTDELS",1,0)
DGMTDELS ;ALB/GAH - Delete means test for deceased patient; August 14, 2006 14:35:54
"RTN","DGMTDELS",2,0)
 ;;5.3;Registration;**714**;Aug 14, 2006;Build 5
"RTN","DGMTDELS",3,0)
 ;
"RTN","DGMTDELS",4,0)
 ; This routine deletes a patient's last means test if the patient
"RTN","DGMTDELS",5,0)
 ; is deceased and the last means test has a status of REQUIRED.
"RTN","DGMTDELS",6,0)
 ; It can be run in foreground at CHECK, OK2DELMT, or DELMT.  It
"RTN","DGMTDELS",7,0)
 ; can be queued to run in background by calling line tag START. 
"RTN","DGMTDELS",8,0)
 ;
"RTN","DGMTDELS",9,0)
 ; Must be run from line tag
"RTN","DGMTDELS",10,0)
 Q
"RTN","DGMTDELS",11,0)
 ;
"RTN","DGMTDELS",12,0)
START(DFN) ;Start process
"RTN","DGMTDELS",13,0)
 N NAMSPC,TASK,U
"RTN","DGMTDELS",14,0)
 S U="^"
"RTN","DGMTDELS",15,0)
 D QUEUE($$QTIME)
"RTN","DGMTDELS",16,0)
 Q
"RTN","DGMTDELS",17,0)
QUEUE(ZTDTH)    ; Queue the process
"RTN","DGMTDELS",18,0)
 N NAMSPC,ZTRTN,ZTDESC,ZTIO,ZTSK
"RTN","DGMTDELS",19,0)
 S NAMSPC=$$NAMSPC
"RTN","DGMTDELS",20,0)
 S ZTRTN="CHECK^DGMTDELS("_DFN_")"
"RTN","DGMTDELS",21,0)
 S ZTDESC=NAMSPC_" - Remove REQUIRED MT for deceased patients"
"RTN","DGMTDELS",22,0)
 S ZTIO=""
"RTN","DGMTDELS",23,0)
 D ^%ZTLOAD
"RTN","DGMTDELS",24,0)
 D HOME^%ZIS
"RTN","DGMTDELS",25,0)
 Q
"RTN","DGMTDELS",26,0)
QTIME() ; Get the run time for queuing
"RTN","DGMTDELS",27,0)
 N %,%H,%I,X
"RTN","DGMTDELS",28,0)
 D NOW^%DTC
"RTN","DGMTDELS",29,0)
 Q $P(%,".")_"."_$E($P(%,".",2),1,4)
"RTN","DGMTDELS",30,0)
 ;
"RTN","DGMTDELS",31,0)
NAMSPC() ;
"RTN","DGMTDELS",32,0)
 Q $T(+0)
"RTN","DGMTDELS",33,0)
CHECK(DFN) ; Check that the criteria to delete a means test is met
"RTN","DGMTDELS",34,0)
 N DGMTI
"RTN","DGMTDELS",35,0)
 F  Q:'$$OK2DEL(DFN,.DGMTI)  D DELMT(DGMTI)  ; Delete means test with REQUIRED status
"RTN","DGMTDELS",36,0)
 Q
"RTN","DGMTDELS",37,0)
OK2DEL(DFN,DGMTI) ;
"RTN","DGMTDELS",38,0)
 ; Returns 1 and the last mean test IEN if the patient has a date of death and
"RTN","DGMTDELS",39,0)
 ; the means test has a status of REQUIRED.
"RTN","DGMTDELS",40,0)
 N DGMT,STATUS,U
"RTN","DGMTDELS",41,0)
 S U="^"
"RTN","DGMTDELS",42,0)
 S DGMT=$$LST^DGMTU(DFN)
"RTN","DGMTDELS",43,0)
 Q:DGMT="" 0
"RTN","DGMTDELS",44,0)
 S STATUS=$P(DGMT,U,3)
"RTN","DGMTDELS",45,0)
 S DGMTI=$P(DGMT,U)
"RTN","DGMTDELS",46,0)
 ; Status must be REQUIRED
"RTN","DGMTDELS",47,0)
 Q:STATUS'="REQUIRED" 0
"RTN","DGMTDELS",48,0)
 ; There must be a date of death
"RTN","DGMTDELS",49,0)
 Q:'+$P($G(^DPT(DFN,.35)),U) 0
"RTN","DGMTDELS",50,0)
 Q 1
"RTN","DGMTDELS",51,0)
DELMT(DGMTI) ;
"RTN","DGMTDELS",52,0)
 ; Delete the means test
"RTN","DGMTDELS",53,0)
 N DFN,DGMT0,DGMTD,DGMTYPT,DQ,U
"RTN","DGMTDELS",54,0)
 S U="^"
"RTN","DGMTDELS",55,0)
 S DGMT0=$G(^DGMT(408.31,DGMTI,0))
"RTN","DGMTDELS",56,0)
 Q:DGMT0=""
"RTN","DGMTDELS",57,0)
 S DFN=$P(DGMT0,U,2)
"RTN","DGMTDELS",58,0)
 S DGMTD=$P(DGMT0,U)
"RTN","DGMTDELS",59,0)
 S DGMTYPT=$P(DGMT0,U,19)
"RTN","DGMTDELS",60,0)
 D VAR^DGMTDEL1
"RTN","DGMTDELS",61,0)
 D DEL^DGMTDEL1
"RTN","DGMTDELS",62,0)
 Q
"VER")
8.0^22.0
"^DD",2,2,.351,0)
DATE OF DEATH^DXa^^.35;1^S %DT="EPT" D ^%DT S X=Y K:Y<1 X I $D(X) D H^DGUTL K:X>DGTIME X K DGTIME,DGDATE I $D(X),X<$P(^DPT(DA,0),"^",3) K X
"^DD",2,2,.351,1,0)
^.1
"^DD",2,2,.351,1,1,0)
^^TRIGGER^2^.091
"^DD",2,2,.351,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y X ^DD(2,.351,1,1,1.1) X ^DD(2,.351,1,1,1.4)
"^DD",2,2,.351,1,1,1,9.2)
S X=DIU_"[PATIENT DIED ON ",Y(1)=X S X=DIV,Y(2)=X S X=4,Y(3)=X S X=5,X=$E(Y(2),Y(3),X) S Y=X,X=Y(1),X=X_Y_"/",Y(4)=X S X=DIV,Y(5)=X S X=6,Y(6)=X S X=7
"^DD",2,2,.351,1,1,1.1)
S X=DIV X ^DD(2,.351,1,1,49.2) S X=$E(Y(5),Y(6),X) S Y=X,X=Y(4),X=X_Y_"/",Y(7)=X S X=DIV,Y(8)=X S X=2,Y(9)=X S X=3,X=$E(Y(8),Y(9),X) S Y=X,X=Y(7),X=X_Y_"]"
"^DD",2,2,.351,1,1,1.4)
S DIH=$S($D(^DPT(DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,10)=DIV,DIH=2,DIG=.091 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.351,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y X ^DD(2,.351,1,1,2.1) X ^DD(2,.351,1,1,2.4)
"^DD",2,2,.351,1,1,2.1)
S X=DIV X ^DD(2,.351,1,1,59.2) S Y(8)=X S X=2,X=$P(Y(7),Y(8),X) S Y=X,X=Y(3),X=X_Y
"^DD",2,2,.351,1,1,2.4)
S DIH=$S($D(^DPT(DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,10)=DIV,DIH=2,DIG=.091 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.351,1,1,49.2)
S X=DIU_"[PATIENT DIED ON ",Y(1)=X S X=DIV,Y(2)=X S X=4,Y(3)=X S X=5,X=$E(Y(2),Y(3),X) S Y=X,X=Y(1),X=X_Y_"/",Y(4)=X S X=DIV,Y(5)=X S X=6,Y(6)=X S X=7
"^DD",2,2,.351,1,1,59.2)
S X=DIU,Y(1)=X S X="[PATIENT DIED",Y(2)=X S X=1,X=$P(Y(1),Y(2),X),Y(3)=X,Y(4)=X S X=DIU,Y(5)=X S X="PATIENT DIED",Y(6)=X S X=2,X=$P(Y(5),Y(6),X),Y(7)=X S X="]"
"^DD",2,2,.351,1,1,"%D",0)
^^3^3^2930723^^
"^DD",2,2,.351,1,1,"%D",1,0)
This appends into the REMARKS field a notation regarding the DATE OF 
"^DD",2,2,.351,1,1,"%D",2,0)
DEATH.  If DATE OF DEATH is deleted, the notation will be stripped out
"^DD",2,2,.351,1,1,"%D",3,0)
of the REMARKS field.
"^DD",2,2,.351,1,1,"CREATE VALUE")
REMARKS_"[PATIENT DIED ON "_$E(DATE OF DEATH,4,5)_"/"_$E(DATE OF DEATH,6,7)_"/"_$E(DATE OF DEATH,2,3)_"]"
"^DD",2,2,.351,1,1,"DELETE VALUE")
$P(REMARKS,"[PATIENT DIED",1)_$P($P(REMARKS,"PATIENT DIED",2),"]",2)
"^DD",2,2,.351,1,1,"DT")
2930601
"^DD",2,2,.351,1,1,"FIELD")
REMARKS
"^DD",2,2,.351,1,2,0)
^^TRIGGER^2^.352
"^DD",2,2,.351,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,.35)):^(.35),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y X ^DD(2,.351,1,2,1.1) X ^DD(2,.351,1,2,1.4)
"^DD",2,2,.351,1,2,1.1)
S X=DIV S X=$S(($D(DUZ)#2):DUZ,1:"")
"^DD",2,2,.351,1,2,1.4)
S DIH=$S($D(^DPT(DIV(0),.35)):^(.35),1:""),DIV=X S %=$P(DIH,U,3,999),DIU=$P(DIH,U,2),^(.35)=$P(DIH,U,1,1)_U_DIV_$S(%]"":U_%,1:""),DIH=2,DIG=.352 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.351,1,2,2)
Q
"^DD",2,2,.351,1,2,"CREATE VALUE")
S X=$S(($D(DUZ)#2):DUZ,1:"")
"^DD",2,2,.351,1,2,"DELETE VALUE")
NO EFFECT
"^DD",2,2,.351,1,2,"FIELD")
DEATH ENTERED BY
"^DD",2,2,.351,1,3,0)
2^ADGDBUL^MUMPS
"^DD",2,2,.351,1,3,1)
D DSBULL^DGDEATH
"^DD",2,2,.351,1,3,2)
D DKBULL^DGDEATH
"^DD",2,2,.351,1,3,"DT")
3031008
"^DD",2,2,.351,1,4,0)
2^AEXP1
"^DD",2,2,.351,1,4,1)
S ^DPT("AEXP1",$E(X,1,30),DA)=""
"^DD",2,2,.351,1,4,2)
K ^DPT("AEXP1",$E(X,1,30),DA)
"^DD",2,2,.351,1,5,0)
2^AOERR^MUMPS
"^DD",2,2,.351,1,5,1)
D DEATH^DGOERNOT
"^DD",2,2,.351,1,5,2)
Q
"^DD",2,2,.351,1,5,"%D",0)
^^3^3^2910716^^^^
"^DD",2,2,.351,1,5,"%D",1,0)
     This cross-reference is used in conjunction with ORDER ENTRY/RESULTS
"^DD",2,2,.351,1,5,"%D",2,0)
REPORTING v2.09 or higher to send MAS OE/RR NOTIFICATIONS of
"^DD",2,2,.351,1,5,"%D",3,0)
DEATH to users who are on an OE/RR LIST for a patient.
"^DD",2,2,.351,1,5,"DT")
2910715
"^DD",2,2,.351,1,6,0)
2^APSJD^MUMPS
"^DD",2,2,.351,1,6,1)
S XX=X,X="PSJADT" X ^%ZOSF("TEST") S X=XX K XX I  D END^PSJADT
"^DD",2,2,.351,1,6,2)
Q
"^DD",2,2,.351,1,6,3)
Cancels Inpatient Medication orders.
"^DD",2,2,.351,1,6,"%D",0)
^^3^3^2930608^^^
"^DD",2,2,.351,1,6,"%D",1,0)
This is used by the Inpatient Medications package to cancel a patient's
"^DD",2,2,.351,1,6,"%D",2,0)
IV and Unit Dose orders whenever a date of death is entered for the
"^DD",2,2,.351,1,6,"%D",3,0)
patient.
"^DD",2,2,.351,1,6,"DT")
2930608
"^DD",2,2,.351,1,7,0)
2^ARCDTH^MUMPS
"^DD",2,2,.351,1,7,1)
S RCX=X,X="RCAMDTH" X ^%ZOSF("TEST") S X=RCX K RCX I  D SET^RCAMDTH
"^DD",2,2,.351,1,7,2)
S RCX=X,X="RCAMDTH" X ^%ZOSF("TEST") S X=RCX K RCX I  D ERR^RCAMDTH
"^DD",2,2,.351,1,7,3)
ACCOUNTS RECEIVABLE DEATH NOTIFICATION
"^DD",2,2,.351,1,7,"%D",0)
^^3^3^2930722^^^^
"^DD",2,2,.351,1,7,"%D",1,0)
This cross-reference is used to notify the Accounts Receivable package (v4 or
"^DD",2,2,.351,1,7,"%D",2,0)
higher) of a patient's death so that the patient's account may be reviewed for
"^DD",2,2,.351,1,7,"%D",3,0)
appropriate action. 
"^DD",2,2,.351,1,7,"DT")
2930609
"^DD",2,2,.351,1,8,0)
2^ADEP^MUMPS
"^DD",2,2,.351,1,8,1)
D SET^DGDEPINA
"^DD",2,2,.351,1,8,2)
D KILL^DGDEPINA
"^DD",2,2,.351,1,8,"%D",0)
^^1^1^2941114^
"^DD",2,2,.351,1,8,"%D",1,0)
This is used to updated the effective dates in file 408.12.
"^DD",2,2,.351,1,8,"DT")
2941114
"^DD",2,2,.351,1,9,0)
2^AENR351^MUMPS
"^DD",2,2,.351,1,9,1)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,.351,1,9,2)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,.351,1,9,3)
DO NOT DELETE
"^DD",2,2,.351,1,9,"%D",0)
^^1^1^2970630^^^^
"^DD",2,2,.351,1,9,"%D",1,0)
Used to update the patient's enrollment.
"^DD",2,2,.351,1,9,"DT")
2970630
"^DD",2,2,.351,1,10,0)
2^DG714^MUMPS
"^DD",2,2,.351,1,10,1)
D START^DGMTDELS(DA)
"^DD",2,2,.351,1,10,2)
Q
"^DD",2,2,.351,1,10,3)
Deletes last REQUIRED means test
"^DD",2,2,.351,1,10,"DT")
3060814
"^DD",2,2,.351,1,52,0)
2^APSOD^MUMPS
"^DD",2,2,.351,1,52,1)
I $$VERSION^XPDUTL("PSO")>6 D APSOD^PSOCAN3(DA)
"^DD",2,2,.351,1,52,2)
I $$VERSION^XPDUTL("PSO")>6 D APSOD^PSOAUTOC(DA)
"^DD",2,2,.351,1,52,3)
Discontinues Outpatient Medications.
"^DD",2,2,.351,1,52,"%D",0)
^^3^3^2961122^^^^
"^DD",2,2,.351,1,52,"%D",1,0)
This xref is used to discontinue all active outpatient medications whenever
"^DD",2,2,.351,1,52,"%D",2,0)
a date of death is entered for the patient.  This xref is used with v7 of
"^DD",2,2,.351,1,52,"%D",3,0)
Outpatient Pharmacy (DBIA #1624).
"^DD",2,2,.351,1,52,"%D",4,0)
Kill logic updated with DG*5.3*455.  Mail message sent to pharmacy when date
"^DD",2,2,.351,1,52,"%D",5,0)
of death is deleted to holders of PSORPH key.
"^DD",2,2,.351,1,52,"DT")
3020926
"^DD",2,2,.351,1,301,0)
2^IVM351^MUMPS
"^DD",2,2,.351,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.351,1,301,2)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.351,1,301,"%D",0)
^^5^5^2930605^
"^DD",2,2,.351,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.351,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.351,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.351,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.351,1,301,"DT")
2930605
"^DD",2,2,.351,1,991,0)
2^AVAFC351^MUMPS
"^DD",2,2,.351,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".351;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.351,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".351;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.351,1,991,"%D",0)
^^15^15^2990204^^
"^DD",2,2,.351,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.351,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.351,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.351,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.351,1,991,"%D",5,0)
 
"^DD",2,2,.351,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.351,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.351,1,991,"%D",8,0)
process.
"^DD",2,2,.351,1,991,"%D",9,0)
 
"^DD",2,2,.351,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.351,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.351,1,991,"%D",12,0)
  
"^DD",2,2,.351,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.351,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.351,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.351,1,991,"DT")
2990204
"^DD",2,2,.351,1,992,0)
2^ADGRU351^MUMPS
"^DD",2,2,.351,1,992,1)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.351,1,992,2)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.351,1,992,"%D",0)
^^9^9^2990920^
"^DD",2,2,.351,1,992,"%D",1,0)
This cross reference is used to remember that changes were made to a 
"^DD",2,2,.351,1,992,"%D",2,0)
monitored data field in the PATIENT File (#2) required for a vendor
"^DD",2,2,.351,1,992,"%D",3,0)
RAI/MDS COTS system.  Execution of this cross reference will create
"^DD",2,2,.351,1,992,"%D",4,0)
an entry in the ADT/HL7 PIVOT file (#391.71) and mark it as requiring
"^DD",2,2,.351,1,992,"%D",5,0)
transmission of an HL7 demographic A08 update message to the COTS
"^DD",2,2,.351,1,992,"%D",6,0)
interface.
"^DD",2,2,.351,1,992,"%D",7,0)
 
"^DD",2,2,.351,1,992,"%D",8,0)
The local variable DGRUGA08 will be set to 1 if the cross reference is
"^DD",2,2,.351,1,992,"%D",9,0)
not to be executed as part of a re-indexing.
"^DD",2,2,.351,1,992,"DT")
2990920
"^DD",2,2,.351,3)
Enter the date this patient died.  Date must not be before date of birth.
"^DD",2,2,.351,5,1,0)
405^.01^3
"^DD",2,2,.351,5,2,0)
405^.18^2
"^DD",2,2,.351,21,0)
^^1^1^2861022^
"^DD",2,2,.351,21,1,0)
Enter the date of this patient's expiration.
"^DD",2,2,.351,"AUDIT")
y
"^DD",2,2,.351,"DT")
3060814
"BLD",6263,6)
^646
**END**
**END**
