Released PSO*7*218 SEQ #199
Extracted from mail message
**KIDS**:PSO*7.0*218^

**INSTALL NAME**
PSO*7.0*218
"BLD",6414,0)
PSO*7.0*218^OUTPATIENT PHARMACY^0^3051027^y
"BLD",6414,1,0)
^^3^3^3051025^
"BLD",6414,1,1,0)
Issue a warning message and do not allow a refill to be deleted when the 
"BLD",6414,1,2,0)
refill was sent to an external dispense machine is is still pending
"BLD",6414,1,3,0)
release from that machine.
"BLD",6414,4,0)
^9.64PA^^
"BLD",6414,6)
^SEQ #186
"BLD",6414,"ABPKG")
n
"BLD",6414,"KRN",0)
^9.67PA^8989.52^19
"BLD",6414,"KRN",.4,0)
.4
"BLD",6414,"KRN",.401,0)
.401
"BLD",6414,"KRN",.402,0)
.402
"BLD",6414,"KRN",.403,0)
.403
"BLD",6414,"KRN",.5,0)
.5
"BLD",6414,"KRN",.84,0)
.84
"BLD",6414,"KRN",3.6,0)
3.6
"BLD",6414,"KRN",3.8,0)
3.8
"BLD",6414,"KRN",9.2,0)
9.2
"BLD",6414,"KRN",9.8,0)
9.8
"BLD",6414,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",6414,"KRN",9.8,"NM",1,0)
PSOUTL^^0^70215755
"BLD",6414,"KRN",9.8,"NM",2,0)
PSOUTLA1^^0^47429412
"BLD",6414,"KRN",9.8,"NM","B","PSOUTL",1)

"BLD",6414,"KRN",9.8,"NM","B","PSOUTLA1",2)

"BLD",6414,"KRN",19,0)
19
"BLD",6414,"KRN",19.1,0)
19.1
"BLD",6414,"KRN",101,0)
101
"BLD",6414,"KRN",409.61,0)
409.61
"BLD",6414,"KRN",771,0)
771
"BLD",6414,"KRN",870,0)
870
"BLD",6414,"KRN",8989.51,0)
8989.51
"BLD",6414,"KRN",8989.52,0)
8989.52
"BLD",6414,"KRN",8994,0)
8994
"BLD",6414,"KRN","B",.4,.4)

"BLD",6414,"KRN","B",.401,.401)

"BLD",6414,"KRN","B",.402,.402)

"BLD",6414,"KRN","B",.403,.403)

"BLD",6414,"KRN","B",.5,.5)

"BLD",6414,"KRN","B",.84,.84)

"BLD",6414,"KRN","B",3.6,3.6)

"BLD",6414,"KRN","B",3.8,3.8)

"BLD",6414,"KRN","B",9.2,9.2)

"BLD",6414,"KRN","B",9.8,9.8)

"BLD",6414,"KRN","B",19,19)

"BLD",6414,"KRN","B",19.1,19.1)

"BLD",6414,"KRN","B",101,101)

"BLD",6414,"KRN","B",409.61,409.61)

"BLD",6414,"KRN","B",771,771)

"BLD",6414,"KRN","B",870,870)

"BLD",6414,"KRN","B",8989.51,8989.51)

"BLD",6414,"KRN","B",8989.52,8989.52)

"BLD",6414,"KRN","B",8994,8994)

"BLD",6414,"QUES",0)
^9.62^^
"BLD",6414,"REQB",0)
^9.611^2^2
"BLD",6414,"REQB",1,0)
PSO*7.0*174^2
"BLD",6414,"REQB",2,0)
PSO*7.0*186^2
"BLD",6414,"REQB","B","PSO*7.0*174",1)

"BLD",6414,"REQB","B","PSO*7.0*186",2)

"MBREQ")
0
"PKG",134,-1)
1^1
"PKG",134,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",134,20,0)
^9.402P^^
"PKG",134,22,0)
^9.49I^1^1
"PKG",134,22,1,0)
7.0^2971216^2980417^1271
"PKG",134,22,1,"PAH",1,0)
218^3051027^33255
"PKG",134,22,1,"PAH",1,1,0)
^^3^3^3051027
"PKG",134,22,1,"PAH",1,1,1,0)
Issue a warning message and do not allow a refill to be deleted when the 
"PKG",134,22,1,"PAH",1,1,2,0)
refill was sent to an external dispense machine is is still pending
"PKG",134,22,1,"PAH",1,1,3,0)
release from that machine.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","PSOUTL")
0^1^B70215755
"RTN","PSOUTL",1,0)
PSOUTL ;BHAM ISC/SAB - pso utility routine ;10/27/05 10:50am
"RTN","PSOUTL",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**1,21,126,174,218**;DEC 1997
"RTN","PSOUTL",3,0)
 ;External reference SERV^IBARX1 supported by DBIA 2245
"RTN","PSOUTL",4,0)
 ;External reference ^PS(55,     supported by DBIA 2228
"RTN","PSOUTL",5,0)
 ;
"RTN","PSOUTL",6,0)
 ;PSO*218 prevent refill from being deleted if pending processing via
"RTN","PSOUTL",7,0)
 ; external dispense machines
"RTN","PSOUTL",8,0)
 ;
"RTN","PSOUTL",9,0)
SUSPCAN ;dcl rx from suspense used in new, renew AND verification of Rxs
"RTN","PSOUTL",10,0)
 S PSLAST=0 F PSI=0:0 S PSI=$O(^PSRX(PSRX,1,PSI)) Q:'PSI  S PSLAST=PSI
"RTN","PSOUTL",11,0)
 I PSLAST S PSI=^PSRX(PSRX,1,PSLAST,0) K ^PSRX(PSRX,1,PSLAST),^PSRX(PSRX,1,"B",+PSI,PSLAST) S ^(0)=$P(^PSRX(PSRX,1,0),"^",1,3)_"^"_($P(^(0),"^",4)-1) K PSLAST,PSI,SUSX,SUS1,SUS2 Q
"RTN","PSOUTL",12,0)
 S $P(^PSRX(PSRX,3),"^",7)="DISCONTINUED FROM SUSPENSE BEFORE FILLING" K PSI,SUSX,SUS1,SUS2 Q
"RTN","PSOUTL",13,0)
 ;
"RTN","PSOUTL",14,0)
ACTLOG ;
"RTN","PSOUTL",15,0)
 F PSI=0:0 S PSI=$O(^PSRX(PSRX,"A",PSI)) I 'PSI!'$O(^(PSI)) S ^PSRX(PSRX,"A",+PSI+1,0)=DT_"^"_PSREA_"^"_PSOCLC_"^"_PSRXREF_"^"_PSMSG,^PSRX(PSRX,"A",0)="^52.3DA^"_(+PSI+1)_"^"_(+PSI+1) Q
"RTN","PSOUTL",16,0)
ACTOUT I PSREA="C" S PSI=$S($D(^PSRX(PSRX,2)):+$P(^(2),"^",6),1:0) K:$D(^PS(55,PSDFN,"P","A",PSI,PSRX)) ^(PSRX) S ^PS(55,PSDFN,"P","A",DT,PSRX)="" Q
"RTN","PSOUTL",17,0)
 I PSREA="R" F PSI=0:0 S PSI=$O(^PSRX(PSRX,"A",PSI)) Q:'PSI  I $D(^(PSI,0)),$P(^(0),"^",2)="C" S PSS=+^(0)
"RTN","PSOUTL",18,0)
 I $D(PSS),PSS K:$D(^PS(55,PSDFN,"P","A",PSS,PSRX)) ^(PSRX)
"RTN","PSOUTL",19,0)
 I PSREA="R",$D(^PSRX(PSRX,2))#2 S ^PS(55,PSDFN,"P","A",+$P(^PSRX(PSRX,2),"^",6),PSRX)=""
"RTN","PSOUTL",20,0)
 Q
"RTN","PSOUTL",21,0)
 ;
"RTN","PSOUTL",22,0)
QUES ;INSTRUCTIONS FOR RENEW AND REFILL
"RTN","PSOUTL",23,0)
 W !?5,"Enter the item #(s) or RX #(s) you wish to ",$S(PSFROM="N":"renew ",PSFROM="R":"REFILL "),"separated by commas."
"RTN","PSOUTL",24,0)
 W !?5,"For example: 1,2,5 or 123456,33254A,232323B."
"RTN","PSOUTL",25,0)
 W !?5,"Do not enter the same number twice, duplicates are not allowed."
"RTN","PSOUTL",26,0)
 Q
"RTN","PSOUTL",27,0)
ENDVCHK S PSOPOP=0 Q:'PSODIV  Q:'$P(^PSRX(PSRX,2),"^",9)!($P(^(2),"^",9)=PSOSITE)
"RTN","PSOUTL",28,0)
CHK1 I '$P(PSOSYS,"^",2) W !?10,$C(7),"RX# ",$P(^PSRX(PSRX,0),"^")," is not a valid choice. (Different Division)" S PSPOP=1 Q
"RTN","PSOUTL",29,0)
 I $P(PSOSYS,"^",3) W !?10,$C(7),"RX# ",$P(^PSRX(PSRX,0),"^")," is from another division. Continue? (Y/N) " R ANS:DTIME I ANS="^"!(ANS="") S PSPOP=1 Q
"RTN","PSOUTL",30,0)
 I (ANS']"")!("YNyn"'[$E(ANS)) W !?10,$C(7),"Answer 'YES' or 'NO'." G CHK1
"RTN","PSOUTL",31,0)
 S:$E(ANS)["Nn" PSPOP=1 Q
"RTN","PSOUTL",32,0)
K52 S SFN=+$O(^PS(52.5,"B",DA(1),0)) Q:SFN=0
"RTN","PSOUTL",33,0)
 I $P($G(^PS(52.5,SFN,0)),"^",5)=$P($G(^PSRX(+^PS(52.5,SFN,0),"P",0)),"^",3),$P($G(^PSRX($P(^PS(52.5,SFN,0),"^"),"P",0)),"^",4)=0 N PSOXX S PSOXX=1 G KILL
"RTN","PSOUTL",34,0)
 G:X'=""&($G(Y)=1) KILL I $G(Y)'=1,SFN I $D(^PS(52.5,SFN,0)),'$P(^(0),"^",5),'$P($G(^("P")),"^") D
"RTN","PSOUTL",35,0)
 .S SDT=+$P(^PS(52.5,SFN,0),"^",2) K ^PS(52.5,"C",SDT,SFN)
"RTN","PSOUTL",36,0)
 .I $P($G(^PS(52.5,SFN,0)),"^",7)="Q" K ^PS(52.5,"AQ",SDT,+$P(^PS(52.5,SFN,0),"^",3),SFN) D KCMPX^PSOCMOP(SFN,"Q")
"RTN","PSOUTL",37,0)
 .I $P($G(^PS(52.5,SFN,0)),"^",7)="" K ^PS(52.5,"AC",+$P(^PS(52.5,SFN,0),"^",3),SDT,SFN)
"RTN","PSOUTL",38,0)
 .K SFN,SDT
"RTN","PSOUTL",39,0)
 Q
"RTN","PSOUTL",40,0)
S52 S (RIFN,PSOSX)=0 F  S RIFN=$O(^PSRX(DA(1),1,RIFN)) Q:'RIFN  S RFID=$P(^PSRX(DA(1),1,RIFN,0),"^"),PSOSX=PSOSX+1
"RTN","PSOUTL",41,0)
 S SFN=+$O(^PS(52.5,"B",DA(1),0)) I SFN,'$G(^PS(52.5,SFN,"P")),$P($G(^PSRX($P($G(^PS(52.5,SFN,0)),"^"),"STA")),"^")=5 D
"RTN","PSOUTL",42,0)
 .I '$D(^PS(52.5,SFN,0))!($P($G(^(0)),"^",5)) Q
"RTN","PSOUTL",43,0)
 .S $P(^PS(52.5,SFN,0),"^",2)=RFID,^PS(52.5,"C",RFID,SFN)=""
"RTN","PSOUTL",44,0)
 .I $P($G(^PS(52.5,SFN,0)),"^",7)="Q" S ^PS(52.5,"AQ",RFID,+$P(^PS(52.5,SFN,0),"^",3),SFN)="" D SCMPX^PSOCMOP(SFN,"Q")
"RTN","PSOUTL",45,0)
 .I $P($G(^PS(52.5,SFN,0)),"^",7)="" S ^PS(52.5,"AC",+$P(^PS(52.5,SFN,0),"^",3),RFID,SFN)=""
"RTN","PSOUTL",46,0)
 K SFN,RFIN,RFID,PSOSX,PSOSXDT Q
"RTN","PSOUTL",47,0)
KILL I SFN D
"RTN","PSOUTL",48,0)
 .S $P(^PSRX(DA(1),"STA"),"^")=0 Q:'$D(^PS(52.5,SFN,0))  S DFN=+$P(^PS(52.5,SFN,0),"^",3),PAT=$P(^DPT(DFN,0),"^")
"RTN","PSOUTL",49,0)
 .;I $P(^PS(52.5,SFN,0),"^",5) Q
"RTN","PSOUTL",50,0)
 .K ^PS(52.5,"B",+$P(^PS(52.5,SFN,0),"^"),SFN),^PS(52.5,"C",+$P(^PS(52.5,SFN,0),"^",2),SFN),^PS(52.5,"D",PAT,SFN),^PS(52.5,"AF",DFN,SFN)
"RTN","PSOUTL",51,0)
 .I $P($G(^PS(52.5,SFN,0)),"^",7)="" D
"RTN","PSOUTL",52,0)
 ..I $G(^PS(52.5,SFN,"P")) K ^PS(52.5,"AS",+$P(^(0),"^",8),+$P(^(0),"^",9),+$P(^(0),"^",6),+$P(^(0),"^",11),SFN),^PS(52.5,"ADL",$E(+$P(^PS(52.5,SFN,0),"^",8),1,7),SFN) Q
"RTN","PSOUTL",53,0)
 ..K ^PS(52.5,"AC",DFN,+$P(^PS(52.5,SFN,0),"^",2),SFN)
"RTN","PSOUTL",54,0)
 .I $P($G(^PS(52.5,SFN,0)),"^",7)'="" D
"RTN","PSOUTL",55,0)
 ..;Kill CMOP xrefs
"RTN","PSOUTL",56,0)
 ..N PSOC7 S PSOC7=$P($G(^PS(52.5,SFN,0)),"^",7)
"RTN","PSOUTL",57,0)
 ..I PSOC7="Q"!(PSOC7="P") K ^PS(52.5,"AG",+$P(^PS(52.5,SFN,0),"^",3),SFN) D KCMPX^PSOCMOP(SFN,PSOC7)
"RTN","PSOUTL",58,0)
 ..I PSOC7="X"!(PSOC7="P")!(PSOC7="L") K ^PS(52.5,$S(PSOC7="X":"AX",PSOC7="P":"AP",1:"AL"),$P(^PS(52.5,SFN,0),"^",2),$P(^(0),"^",3),SFN) D KCMPX^PSOCMOP(SFN,PSOC7)
"RTN","PSOUTL",59,0)
 ..K ^PS(52.5,"APR",+$P(^PS(52.5,SFN,0),"^",8),+$P(^(0),"^",9),+$P(^(0),"^",6),+$P(^(0),"^",11),SFN),^PS(52.5,"ADL",$E(+$P(^PS(52.5,SFN,0),"^",8),1,7),SFN)
"RTN","PSOUTL",60,0)
 .K ^PS(52.5,SFN,0),^PS(52.5,SFN,"P"),DFN,SFN,PAT
"RTN","PSOUTL",61,0)
 S CNT=0 F SUB=0:0 S SUB=$O(^PSRX(DA(1),"A",SUB)) Q:'SUB  S CNT=SUB
"RTN","PSOUTL",62,0)
 S:DA>5 DA=DA+1 D NOW^%DTC S CNT=CNT+1
"RTN","PSOUTL",63,0)
 S ^PSRX(DA(1),"A",0)="^52.3DA^"_CNT_"^"_CNT,^PSRX(DA(1),"A",CNT,0)=%_"^D^"_DUZ_"^"_DA_"^"
"RTN","PSOUTL",64,0)
 I '$D(PSOXX) S ^PSRX(DA(1),"A",CNT,0)=^PSRX(DA(1),"A",CNT,0)_"Refill "
"RTN","PSOUTL",65,0)
 ;if PSOXX not exist, = refill. otherwise, it is a partial.
"RTN","PSOUTL",66,0)
 S ^PSRX(DA(1),"A",CNT,0)=^PSRX(DA(1),"A",CNT,0)_$S($G(RESK):"returned to stock.",$G(PSOPSDAL):"deleted during Controlled Subs release.",$G(PSOXX)=1:"Partial deleted from suspense file.",1:"deleted during Rx edit.") K CNT,SUB
"RTN","PSOUTL",67,0)
 Q
"RTN","PSOUTL",68,0)
CID ;calculates six months limit on issue dates
"RTN","PSOUTL",69,0)
 S PSID=X,X="T-6M",%DT="X" D ^%DT S %DT(0)=Y,X=PSID,%DT="EX" D ^%DT K PSID
"RTN","PSOUTL",70,0)
 Q
"RTN","PSOUTL",71,0)
CIDH S X="T-6M",%DT="X" D ^%DT X ^DD("DD") D EN^DDIOL("Issue Date must be greater or equal to "_Y,"","!")
"RTN","PSOUTL",72,0)
 Q
"RTN","PSOUTL",73,0)
SPR F RF=0:0 S RF=$O(^PSRX(DA(1),1,RF)) Q:'RF  S NODE=RF
"RTN","PSOUTL",74,0)
 I NODE=1 S $P(^PSRX(DA(1),3),"^",4)=$P(^PSRX(DA(1),2),"^",2) Q
"RTN","PSOUTL",75,0)
SREF I $G(NODE) S NODE=NODE-1 G:'$D(^PSRX(DA(1),1,NODE,0)) SREF
"RTN","PSOUTL",76,0)
 I NODE=0 S $P(^PSRX(DA(1),3),"^",4)=$P(^PSRX(DA(1),2),"^",2) Q
"RTN","PSOUTL",77,0)
 S $P(^PSRX(DA(1),3),"^",4)=$P(^PSRX(DA(1),1,NODE,0),"^",1) Q
"RTN","PSOUTL",78,0)
 K NODE,RF
"RTN","PSOUTL",79,0)
 Q
"RTN","PSOUTL",80,0)
KPR F RF=0:0 S RF=$O(^PSRX(DA(1),1,RF)) Q:'RF  S NODE=RF
"RTN","PSOUTL",81,0)
 I NODE=DA&(X'="") S NODE=NODE-1 S:NODE=1 NODE=0 G:'NODE ORIG G:NODE>1 KREF
"RTN","PSOUTL",82,0)
 I NODE=1 S $P(^PSRX(DA(1),3),"^",4)=$P(^PSRX(DA(1),2),"^",2) G EX
"RTN","PSOUTL",83,0)
KREF S NODE=NODE-1 G:'NODE EX
"RTN","PSOUTL",84,0)
 I NODE=1 S $P(^PSRX(DA(1),3),"^",4)=$P(^PSRX(DA(1),2),"^",2) G EX
"RTN","PSOUTL",85,0)
 G:NODE=DA&(X'="") KREF G:'$D(^PSRX(DA(1),1,NODE,0)) KREF
"RTN","PSOUTL",86,0)
ORIG I 'NODE S $P(^PSRX(DA(1),3),"^",4)=$P(^PSRX(DA(1),2),"^",2) G EX
"RTN","PSOUTL",87,0)
 S $P(^PSRX(DA(1),3),"^",4)=$P(^PSRX(DA(1),1,NODE,0),"^",1) G EX
"RTN","PSOUTL",88,0)
EX K NODE,RF
"RTN","PSOUTL",89,0)
 Q
"RTN","PSOUTL",90,0)
IBSS N PSOHLP S PSOHLP(1,"F")="!!"
"RTN","PSOUTL",91,0)
 S PSOHLP(1)="Entry in this field must match the SERVICE field for pharmacy action"
"RTN","PSOUTL",92,0)
 S PSOHLP(2,"F")="!"
"RTN","PSOUTL",93,0)
 S PSOHLP(2)="types in the IB ACTION TYPE file AND be a valid entry in your"
"RTN","PSOUTL",94,0)
 S PSOHLP(3,"F")="!"
"RTN","PSOUTL",95,0)
 S PSOHLP(3)="SERVICE/SECTION file to generate copay charges!"
"RTN","PSOUTL",96,0)
 S PSOHLP(4,"F")="!!"
"RTN","PSOUTL",97,0)
 D EN^DDIOL(.PSOHLP) K PSOHLP
"RTN","PSOUTL",98,0)
 Q
"RTN","PSOUTL",99,0)
IBSSR S PSOIBFL=0 F PSOIBLP=0:0 S PSOIBLP=$O(^DIC(49,PSOIBLP)) Q:'PSOIBLP!(PSOIBFL)  S Y=PSOIBLP,PSOIBST=$$SERV^IBARX1(+Y) I $G(PSOIBST) S DIE="^PS(59,",DA=PSOSITE,DR="1003////"_PSOIBLP D ^DIE K DIE D  S PSOIBFL=1
"RTN","PSOUTL",100,0)
 .W $C(7),!!,"There was an invalid entry in your IB SERVICE/SECTION field in your Outpatient",!,"Site Parameter file, but we have fixed the problem for you, and you",!,"may continue!" Q
"RTN","PSOUTL",101,0)
 Q
"RTN","PSOUTL",102,0)
WARN ;
"RTN","PSOUTL",103,0)
 I $G(PSOUNHLD) D  Q
"RTN","PSOUTL",104,0)
 .D EN^DDIOL("You cannot delete a refill while removing from Hold! Use the Edit Action.","","$C(7),!!"),EN^DDIOL(" ","","!!")
"RTN","PSOUTL",105,0)
 I $G(CMOP(DA))]""&(+$G(CMOP(DA))<3) D   K CMOP Q
"RTN","PSOUTL",106,0)
 .D EN^DDIOL("You cannot delete a refill that"_$S(+$G(CMOP(DA))=1:" has been released by",1:" is being transmitted to")_" the CMOP","","!!")
"RTN","PSOUTL",107,0)
 .D EN^DDIOL(" ","","!!")
"RTN","PSOUTL",108,0)
 K CMOP
"RTN","PSOUTL",109,0)
 S PSR=0 F  S PSR=$O(^PSRX(DA(1),1,PSR)) Q:'PSR  S PSOL=PSR
"RTN","PSOUTL",110,0)
 I DA=PSOL,$P(^PSRX(DA(1),1,DA,0),"^",18) D
"RTN","PSOUTL",111,0)
 .D EN^DDIOL("Refill Released! Use the 'Return to Stock' option before attempting to delete!","","$C(7),!!"),EN^DDIOL(" ","","!")
"RTN","PSOUTL",112,0)
 ;
"RTN","PSOUTL",113,0)
 ;PSO*218 warning on delete of an in process refill
"RTN","PSOUTL",114,0)
 I $$REFIP^PSOUTLA1(DA(1),DA) D                    ;In Process
"RTN","PSOUTL",115,0)
 . D EN^DDIOL("** You cannot delete a refill that is pending Release from an ","","!!,?2")
"RTN","PSOUTL",116,0)
 . D EN^DDIOL("** External Dispense Machine! ","","$C(7),!,?2")
"RTN","PSOUTL",117,0)
 . D EN^DDIOL("Wait for it to be released from the External Dispense Machine,","","!!,?5")
"RTN","PSOUTL",118,0)
 . D EN^DDIOL("then use the 'Return to Stock' option before attempting to delete!","","!,?5")
"RTN","PSOUTL",119,0)
 . D EN^DDIOL("","","!!")
"RTN","PSOUTL",120,0)
 ;
"RTN","PSOUTL",121,0)
 K PSR,PSOL Q
"RTN","PSOUTL",122,0)
WARN1 S PSR=0 F  S PSR=$O(^PSRX(DA(1),"P",PSR)) Q:'PSR  S PSOL=PSR
"RTN","PSOUTL",123,0)
 I DA=PSOL,$P(^PSRX(DA(1),"P",DA,0),"^",19) D
"RTN","PSOUTL",124,0)
 .D EN^DDIOL("Partial Released! Use the 'Return to Stock' option before attempting to delete!","","$C(7),!!"),EN^DDIOL(" ","","!")
"RTN","PSOUTL",125,0)
 K PSR,PSOL Q
"RTN","PSOUTL",126,0)
 Q
"RTN","PSOUTL",127,0)
CAN(PSOXRX) ;Clean up Rx when discontinued
"RTN","PSOUTL",128,0)
 N SUSD,IFN,RF,NODE,DA
"RTN","PSOUTL",129,0)
 Q:'$D(^PSRX(PSOXRX,0))
"RTN","PSOUTL",130,0)
 S DA=$O(^PS(52.5,"B",PSOXRX,0)) I DA S DIK="^PS(52.5,",SUSD=$P($G(^PS(52.5,DA,0)),"^",2) D ^DIK K DIK I $O(^PSRX(PSOXRX,1,0)) S DA=PSOXRX D REF^PSOCAN2
"RTN","PSOUTL",131,0)
 I $D(^PS(52.4,PSOXRX,0)) S DIK="^PS(52.4,",DA=PSOXRX D ^DIK K DIK
"RTN","PSOUTL",132,0)
 I $G(^PSRX(PSOXRX,"H"))]"" K:$P(^PSRX(PSOXRX,"H"),"^") ^PSRX("AH",$P(^PSRX(PSOXRX,"H"),"^"),PSOXRX) S ^PSRX(PSOXRX,"H")=""
"RTN","PSOUTL",133,0)
 I '$P($G(^PSRX(PSOXRX,2)),"^",2) K DIE S DIE="^PSRX(",DA=PSOXRX,DR="22///"_DT D ^DIE
"RTN","PSOUTL",134,0)
 Q
"RTN","PSOUTL",135,0)
ECAN(PSOXRX) ;Clean up Rx when expired
"RTN","PSOUTL",136,0)
 N DA
"RTN","PSOUTL",137,0)
 Q:'$D(^PSRX(PSOXRX,0))
"RTN","PSOUTL",138,0)
 S DA=$O(^PS(52.5,"B",PSOXRX,0)) I DA K DIK S DIK="^PS(52.5," D ^DIK K DIK
"RTN","PSOUTL",139,0)
 I $D(^PS(52.4,PSOXRX,0)) K DIK S DIK="^PS(52.4,",DA=PSOXRX D ^DIK K DIK
"RTN","PSOUTL",140,0)
 I $G(^PSRX(PSOXRX,"H"))]"" K:$P(^PSRX(PSOXRX,"H"),"^") ^PSRX("AH",$P(^PSRX(PSOXRX,"H"),"^"),PSOXRX) S ^PSRX(PSOXRX,"H")=""
"RTN","PSOUTL",141,0)
 I '$P($G(^PSRX(PSOXRX,2)),"^",2) K DIE S DIE="^PSRX(",DA=PSOXRX,DR="22///"_DT D ^DIE
"RTN","PSOUTL",142,0)
 Q
"RTN","PSOUTL",143,0)
CMOP ;CMOP("L")=LAST FILL... if it is orig Rx =0
"RTN","PSOUTL",144,0)
 ;CMOP(FILL #)=CMOP status from 52[TRAN=0,DISP=1,RETRAN=2,NOT DISP=3
"RTN","PSOUTL",145,0)
 ;If suspended CMOP("S")=CMOP suspense status Q,L,X,P,R
"RTN","PSOUTL",146,0)
 ;All returned variables can be killed by K CMOP
"RTN","PSOUTL",147,0)
 ;
"RTN","PSOUTL",148,0)
 S CRX=DA
"RTN","PSOUTL",149,0)
CMOP1 N X
"RTN","PSOUTL",150,0)
 S (CMOP("L"),X)=0  F  S X=$O(^PSRX(CRX,1,X)) Q:'X  S CMOP("L")=X
"RTN","PSOUTL",151,0)
 I $O(^PSRX(CRX,4,0)) F X=0:0 S X=$O(^PSRX(CRX,4,X)) Q:'X  D
"RTN","PSOUTL",152,0)
 .S CMOP($P($G(^PSRX(CRX,4,X,0)),"^",3))=$P($G(^(0)),"^",4)
"RTN","PSOUTL",153,0)
 S X=$O(^PS(52.5,"B",CRX,0)) I X]"" S CMOP("S")=$P($G(^PS(52.5,X,0)),"^",7)
"RTN","PSOUTL",154,0)
 K CRX,X
"RTN","PSOUTL",155,0)
 Q
"RTN","PSOUTLA1")
0^2^B47429412
"RTN","PSOUTLA1",1,0)
PSOUTLA1 ;BHAM ISC/RTR-Pharmacy utility program cont. ;10/25/05 12:10pm
"RTN","PSOUTLA1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**35,186,218**;DEC 1997
"RTN","PSOUTLA1",3,0)
 ;External reference to File ^PS(55 supported by DBIA 2228
"RTN","PSOUTLA1",4,0)
 ;External reference to File ^PSDRUG supported by DBIA 221
"RTN","PSOUTLA1",5,0)
 ;External reference to File ^PS(59.7 supported by DBIA 694
"RTN","PSOUTLA1",6,0)
 ;External reference to File ^PS(51 supported by DBIA 2224
"RTN","PSOUTLA1",7,0)
 ;
"RTN","PSOUTLA1",8,0)
 ;PSO*186 - add DEACHK function
"RTN","PSOUTLA1",9,0)
 ;PSO*218 - add REFIP function
"RTN","PSOUTLA1",10,0)
 ;
"RTN","PSOUTLA1",11,0)
EN1 ;Formats condensed, back door sig in BSIG array
"RTN","PSOUTLA1",12,0)
 ;pass in  1) Internal Rx from 52
"RTN","PSOUTLA1",13,0)
 ;         2) max length of BSIG array
"RTN","PSOUTLA1",14,0)
 ;Returned, still condensed, in BSIG array, when looping through, check for array=null, if so, juist don't print it
"RTN","PSOUTLA1",15,0)
EN2(PSOBINTR,PSOBLGTH) ;
"RTN","PSOUTLA1",16,0)
 K BSIG
"RTN","PSOUTLA1",17,0)
 N BBSIG,BVAR,BVAR1,III,CNT,NNN,BLIM
"RTN","PSOUTLA1",18,0)
 S BBSIG=$P($G(^PSRX(PSOBINTR,"SIG")),"^") Q:BBSIG=""!($P($G(^("SIG")),"^",2))
"RTN","PSOUTLA1",19,0)
 S (BVAR,BVAR1)="",III=1
"RTN","PSOUTLA1",20,0)
 S CNT=0 F NNN=1:1:$L(BBSIG) I $E(BBSIG,NNN)=" "!($L(BBSIG)=NNN) S CNT=CNT+1 D  I $L(BVAR)>PSOBLGTH S BSIG(III)=BLIM_" ",III=III+1,BVAR=BVAR1
"RTN","PSOUTLA1",21,0)
 .S BVAR1=$P(BBSIG," ",(CNT))
"RTN","PSOUTLA1",22,0)
 .S BLIM=BVAR
"RTN","PSOUTLA1",23,0)
 .S BVAR=$S(BVAR="":BVAR1,1:BVAR_" "_BVAR1)
"RTN","PSOUTLA1",24,0)
 I $G(BVAR)'="" S BSIG(III)=BVAR
"RTN","PSOUTLA1",25,0)
 I $G(BSIG(1))=""!($G(BSIG(1))=" ") S BSIG(1)=$G(BSIG(2)) K BSIG(2)
"RTN","PSOUTLA1",26,0)
 Q
"RTN","PSOUTLA1",27,0)
 ;
"RTN","PSOUTLA1",28,0)
EN3(PSOBINTR,PSOBLGTH) ;
"RTN","PSOUTLA1",29,0)
 ;Pass in to EN3 the internal Rx number from 52, and the length of
"RTN","PSOUTLA1",30,0)
 ;the array you want. Returns expanded Sig, or warning from PSOHELP
"RTN","PSOUTLA1",31,0)
 ;concantenated with the condensed Sig in the BSIG array
"RTN","PSOUTLA1",32,0)
 ;BACK DOOR ONLY
"RTN","PSOUTLA1",33,0)
 K BSIG,X N BBSIG,BVAR,BVAR1,III,CNT,NNN,BLIM,Y,SIG,Z0,Z1,BBWARN
"RTN","PSOUTLA1",34,0)
 S BBSIG=$P($G(^PSRX(PSOBINTR,"SIG")),"^") Q:BBSIG=""!($P($G(^("SIG")),"^",2))
"RTN","PSOUTLA1",35,0)
 S (SIG,X)=BBSIG
"RTN","PSOUTLA1",36,0)
 I $E(BBSIG)=" " S BBWARN="Leading spaces are not allowed in the SIG!" G START
"RTN","PSOUTLA1",37,0)
 S SIG="" Q:$L(X)<1  F Z0=1:1:$L(X," ") G:Z0="" START S Z1=$P(X," ",Z0) D  G:'$D(X) START
"RTN","PSOUTLA1",38,0)
 .I $L(Z1)>32 S BBWARN="MAX OF 32 CHARACTERS ALLOWED BETWEEN SPACES!" K X Q
"RTN","PSOUTLA1",39,0)
 .D:$D(X)&($G(Z1)]"")  S SIG=SIG_" "_Z1
"RTN","PSOUTLA1",40,0)
 ..S Y=$O(^PS(51,"B",Z1,0)) Q:'Y!($P($G(^PS(51,+Y,0)),"^",4)>1)  S Z1=$P(^PS(51,Y,0),"^",2) Q:'$D(^(9))  S Y=$P(X," ",Z0-1),Y=$E(Y,$L(Y)) S:Y>1 Z1=^(9)
"RTN","PSOUTLA1",41,0)
START ;
"RTN","PSOUTLA1",42,0)
 S BBSIG=$S($G(BBWARN)="":SIG,1:BBWARN_"  "_BBSIG)
"RTN","PSOUTLA1",43,0)
 S (BVAR,BVAR1)="",III=1
"RTN","PSOUTLA1",44,0)
 S CNT=0 F NNN=1:1:$L(BBSIG) I $E(BBSIG,NNN)=" "!($L(BBSIG)=NNN) S CNT=CNT+1 D  I $L(BVAR)>PSOBLGTH S BSIG(III)=BLIM_" ",III=III+1,BVAR=BVAR1
"RTN","PSOUTLA1",45,0)
 .S BVAR1=$P(BBSIG," ",(CNT))
"RTN","PSOUTLA1",46,0)
 .S BLIM=BVAR
"RTN","PSOUTLA1",47,0)
 .S BVAR=$S(BVAR="":BVAR1,1:BVAR_" "_BVAR1)
"RTN","PSOUTLA1",48,0)
 I $G(BVAR)'="" S BSIG(III)=BVAR
"RTN","PSOUTLA1",49,0)
 I $G(BSIG(1))=""!($G(BSIG(1))=" ") S BSIG(1)=$G(BSIG(2)) K BSIG(2)
"RTN","PSOUTLA1",50,0)
 Q
"RTN","PSOUTLA1",51,0)
PATCH ;Allow sites to backfill more than what was done at install
"RTN","PSOUTLA1",52,0)
 N PSOBACKL,PSOBACKI,PSOBACKS,PSOBACKB,PSOBACKD,PSOBACKA
"RTN","PSOUTLA1",53,0)
 S PSOBACKL=$O(^PS(59.7,0)),PSOBACKI=$E($P($G(^PS(59.7,+$G(PSOBACKL),49.99)),"^",7),1,7)
"RTN","PSOUTLA1",54,0)
 I '$G(PSOBACKI) S PSOBACKI=$P($G(^PS(59.7,+$G(PSOBACKL),49.99)),"^",4)
"RTN","PSOUTLA1",55,0)
 I $G(PSOBACKI) S Y=PSOBACKI D DD^%DT S PSOBACKS=Y S X1=PSOBACKI,X2=-120 D C^%DTC S (Y,PSOBACKB)=X D DD^%DT S PSOBACKD=Y
"RTN","PSOUTLA1",56,0)
 I $G(PSOBACKD)'="" W !!,"Your CPRS/Outpatient installation date is "_$G(PSOBACKS)_","_" which",!,"means we have already backfilled all active prescriptions and all",!,"prescriptions canceled or expired after "_$G(PSOBACKD)_"."
"RTN","PSOUTLA1",57,0)
 I  W !!,"If you want to backfill orders that were canceled or expired prior to this",!,"date of "_$G(PSOBACKD)_", enter an earlier date and those orders",!,"will be backfilled to CPRS.",!
"RTN","PSOUTLA1",58,0)
 I $G(PSOBACKD)="" W !!,"We cannot determine the date of the CPRS/Outpatient installation.",!
"RTN","PSOUTLA1",59,0)
 W !,"If you choose to backfill more orders to CPRS by utilizing this option,",!,"we remind you that disk storage can be significantly affected, depending on",!,"how many orders are backfilled.",!
"RTN","PSOUTLA1",60,0)
 K DIR S DIR(0)="Y",DIR("B")="N",DIR("A")="Do you want to backfill more prescriptions",DIR("?")="Enter Yes to backfill prescriptions canceled or expired before "_$G(PSOBACKD) D ^DIR K DIR I Y'=1 W ! G PATCHQ
"RTN","PSOUTLA1",61,0)
 W ! S %DT="AEPX",%DT("A")="Enter Date to begin backfill: " S:$G(PSOBACKB) %DT(0)=-PSOBACKB D ^%DT G:Y<0!($D(DTOUT)) PATCHQ S PSOBACKA=$E(Y,1,7)
"RTN","PSOUTLA1",62,0)
 W ! K ZTDTH S ZTSAVE("PSOBACKB")="",ZTSAVE("PSOBACKA")="",ZTRTN="PATCHR^PSOUTLA1",ZTDESC="BACKFILL PRSCRIPTIONS TO CPRS",ZTIO="" D ^%ZTLOAD W ! G PATCHQ
"RTN","PSOUTLA1",63,0)
PATCHR ;Begin task
"RTN","PSOUTLA1",64,0)
 N PSOPAL,PSOLPD,PSOLPRX
"RTN","PSOUTLA1",65,0)
 S PSOBACKA=PSOBACKA-.01
"RTN","PSOUTLA1",66,0)
 I '$G(PSOBACKB) S PSOBACKB=DT
"RTN","PSOUTLA1",67,0)
 F PSOPAL=0:0 S PSOPAL=$O(^PS(55,PSOPAL)) Q:'PSOPAL  F PSOLPD=PSOBACKA:0 S PSOLPD=$O(^PS(55,PSOPAL,"P","A",PSOLPD)) Q:'PSOLPD!(PSOLPD>PSOBACKB)  F PSOLPRX=0:0 S PSOLPRX=$O(^PS(55,PSOPAL,"P","A",PSOLPD,PSOLPRX)) Q:'PSOLPRX  D
"RTN","PSOUTLA1",68,0)
 .I $P($G(^PSRX(PSOLPRX,0)),"^")=""!('$P($G(^(0)),"^",2))!('$P($G(^(0)),"^",6)) Q
"RTN","PSOUTLA1",69,0)
 .I $P($G(^PSRX(PSOLPRX,"OR1")),"^",2) Q
"RTN","PSOUTLA1",70,0)
 .I '$P($G(^PSRX(PSOLPRX,0)),"^",19) D
"RTN","PSOUTLA1",71,0)
 ..I $P($G(^PSRX(PSOLPRX,"OR1")),"^")="",+$G(^PSDRUG(+$P($G(^PSRX(PSOLPRX,0)),"^",6),2)) S $P(^PSRX(PSOLPRX,"OR1"),"^")=+$G(^PSDRUG(+$P($G(^PSRX(PSOLPRX,0)),"^",6),2))
"RTN","PSOUTLA1",72,0)
 ..I $P($G(^PSRX(PSOLPRX,0)),"^",10)'="",$G(^PSRX(PSOLPRX,"SIG"))']"",'$O(^PSRX(PSOLPRX,"SIG1",0)) S ^PSRX(PSOLPRX,"SIG")=$P($G(^PSRX(PSOLPRX,0)),"^",10)_"^"_0 S $P(^PSRX(PSOLPRX,0),"^",10)=""
"RTN","PSOUTLA1",73,0)
 ..I $P($G(^PSRX(PSOLPRX,"STA")),"^")="",$P($G(^PSRX(PSOLPRX,0)),"^",15)'="" S $P(^PSRX(PSOLPRX,"STA"),"^")=$P($G(^PSRX(PSOLPRX,0)),"^",15) S $P(^PSRX(PSOLPRX,0),"^",15)=""
"RTN","PSOUTLA1",74,0)
 ..S $P(^PSRX(PSOLPRX,0),"^",19)=1
"RTN","PSOUTLA1",75,0)
 .S PSOLPSTA=$P($G(^PSRX(PSOLPRX,"STA")),"^") Q:PSOLPSTA=""!(PSOLPSTA=13)!(PSOLPSTA=10)
"RTN","PSOUTLA1",76,0)
 .D EN^PSOHLSN1(PSOLPRX,"ZC","")
"RTN","PSOUTLA1",77,0)
 .I PSOLPSTA'="",PSOLPSTA<10 D
"RTN","PSOUTLA1",78,0)
 ..I +$P($G(^PSRX(PSOLPRX,2)),"^",6),+$P($G(^(2)),"^",6)<DT S $P(^PSRX(PSOLPRX,"STA"),"^")=11,PSOLPSTA=11
"RTN","PSOUTLA1",79,0)
 .S PSOLPSTX=$S(PSOLPSTA=3:"OH",PSOLPSTA=16:"OH",PSOLPSTA=12:"OD",PSOLPSTA=15:"OD",PSOLPSTA=14:"OD",1:"SC"),PSOLPSTZ=$S(PSOLPSTA=0:"CM",PSOLPSTA=1:"IP",PSOLPSTA=4:"IP",PSOLPSTA=5:"ZS",PSOLPSTA=11:"ZE",1:"")
"RTN","PSOUTLA1",80,0)
 .D EN^PSOHLSN1(PSOLPRX,PSOLPSTX,PSOLPSTZ,"")
"RTN","PSOUTLA1",81,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","PSOUTLA1",82,0)
PATCHQ Q
"RTN","PSOUTLA1",83,0)
 ;
"RTN","PSOUTLA1",84,0)
 ;PSO*186
"RTN","PSOUTLA1",85,0)
DEACHK(PSIRXN,PSDEA,PSDAYS,PCLOZ,PSOCS,PSMAXRF) ;Apply DEA restrictions
"RTN","PSOUTLA1",86,0)
 ;
"RTN","PSOUTLA1",87,0)
 ; If no refills allowed indicate that and set Max refills to number
"RTN","PSOUTLA1",88,0)
 ; of fills thus far, or if new order, then num of refills will not be
"RTN","PSOUTLA1",89,0)
 ; found and Max refills will be 0.
"RTN","PSOUTLA1",90,0)
 ;
"RTN","PSOUTLA1",91,0)
 ;  Function returns: 1 = no refills allowed
"RTN","PSOUTLA1",92,0)
 ;                    0 = ok to refill
"RTN","PSOUTLA1",93,0)
 ;  Input Variables: PSIRXN = internal RX number or "*"=(new order)
"RTN","PSOUTLA1",94,0)
 ;                   PSDEA  = DEA special handling for drug ordered
"RTN","PSOUTLA1",95,0)
 ;                   PSDAYS = Days supply ordered
"RTN","PSOUTLA1",96,0)
 ;                   PCLOZ  = Clozapine patient? (Optional)
"RTN","PSOUTLA1",97,0)
 ; Output Variables: PSOCS  = Controlled sub flag  (Optional)
"RTN","PSOUTLA1",98,0)
 ;                   PSMAXRF= Max Refill allowed by DEA restriction
"RTN","PSOUTLA1",99,0)
 ;                                                 (Optional)
"RTN","PSOUTLA1",100,0)
 ;
"RTN","PSOUTLA1",101,0)
 S PSIRXN=+$G(PSIRXN),PSDEA=$G(PSDEA),PSDAYS=+$G(PSDAYS)
"RTN","PSOUTLA1",102,0)
 S PSOCS=+$G(PSOCS),PSMAXRF=+$G(PSMAXRF),PCLOZ=$G(PCLOZ)
"RTN","PSOUTLA1",103,0)
 ;
"RTN","PSOUTLA1",104,0)
 ;if clozapine patient (passed in 0 or 1),  set max refills and quit
"RTN","PSOUTLA1",105,0)
 I PCLOZ=0 S PSMAXRF=0 Q 1
"RTN","PSOUTLA1",106,0)
 I PCLOZ=1 S PSMAXRF=1 Q 0
"RTN","PSOUTLA1",107,0)
 ;
"RTN","PSOUTLA1",108,0)
 ;no refills if PSDEA = 'A' & not 'B' or 'F',
"RTN","PSOUTLA1",109,0)
 I (PSDEA["A")&(PSDEA'["B")!(PSDEA["F") D  Q 1
"RTN","PSOUTLA1",110,0)
 . S PSMAXRF=$$NUMFILLS(PSIRXN)
"RTN","PSOUTLA1",111,0)
 ;
"RTN","PSOUTLA1",112,0)
 N QQ
"RTN","PSOUTLA1",113,0)
 F QQ=1:1 Q:$E(PSDEA,QQ)=""  I $E(+PSDEA,QQ)>1,$E(+PSDEA,QQ)<6 D
"RTN","PSOUTLA1",114,0)
 . S PSOCS=1
"RTN","PSOUTLA1",115,0)
 . S:$E(+PSDEA,QQ)=2 $P(PSOCS,"^",2)=1
"RTN","PSOUTLA1",116,0)
 ;
"RTN","PSOUTLA1",117,0)
 ;no refills allowed on sched 2
"RTN","PSOUTLA1",118,0)
 I $P(PSOCS,"^",2)=1 S PSMAXRF=$$NUMFILLS(PSIRXN) Q 1
"RTN","PSOUTLA1",119,0)
 ;
"RTN","PSOUTLA1",120,0)
 ;set max refill for controlled substance & other based on days supply
"RTN","PSOUTLA1",121,0)
 S PSDAYS=+$G(PSDAYS)
"RTN","PSOUTLA1",122,0)
 I PSOCS D
"RTN","PSOUTLA1",123,0)
 . S PSMAXRF=$S(PSDAYS<60:5,PSDAYS'<60&(PSDAYS'>89):2,PSDAYS=90:1,1:0)
"RTN","PSOUTLA1",124,0)
 E  D
"RTN","PSOUTLA1",125,0)
 . S PSMAXRF=$S(PSDAYS<60:11,PSDAYS'<60&(PSDAYS'>89):5,PSDAYS=90:3,1:0)
"RTN","PSOUTLA1",126,0)
 ;
"RTN","PSOUTLA1",127,0)
 ;get number of fills if applies & compare to Max refills
"RTN","PSOUTLA1",128,0)
 N PNFILLS S PNFILLS=$$NUMFILLS(PSIRXN)
"RTN","PSOUTLA1",129,0)
 I PNFILLS'<PSMAXRF S PSMAXRF=PNFILLS Q 1
"RTN","PSOUTLA1",130,0)
 ;
"RTN","PSOUTLA1",131,0)
 Q 0
"RTN","PSOUTLA1",132,0)
 ;
"RTN","PSOUTLA1",133,0)
NUMFILLS(PSIRXN) ;Return number of fills thus far, or 0 if doesn't apply
"RTN","PSOUTLA1",134,0)
 ; function returns: if   Active drug, then number of refills thus far
"RTN","PSOUTLA1",135,0)
 ;                   else return 0 for does not apply
"RTN","PSOUTLA1",136,0)
 ;  Input Variables: PSIRXN = internal RX number (Optional)
"RTN","PSOUTLA1",137,0)
 Q:'$G(PSIRXN) 0
"RTN","PSOUTLA1",138,0)
 N RFN,RFNC
"RTN","PSOUTLA1",139,0)
 S (RFN,RFNC)=0
"RTN","PSOUTLA1",140,0)
 F  S RFN=$O(^PSRX(PSIRXN,1,RFN)) Q:'RFN  S RFNC=RFNC+1
"RTN","PSOUTLA1",141,0)
 Q RFNC
"RTN","PSOUTLA1",142,0)
 ;
"RTN","PSOUTLA1",143,0)
REFIP(RXI,RFIL) ;Check if refill is In Process and pending completion by the
"RTN","PSOUTLA1",144,0)
 ;       external dispense machines.
"RTN","PSOUTLA1",145,0)
 ; Returns 1 = In Process      (Not OK to delete)
"RTN","PSOUTLA1",146,0)
 ;         0 = Not In Process  (OK to delete)
"RTN","PSOUTLA1",147,0)
 ;
"RTN","PSOUTLA1",148,0)
 ;assumes a refill is Not In Process by the external dispense machine
"RTN","PSOUTLA1",149,0)
 ;unless it finds a record in this file and is marked to the contrary
"RTN","PSOUTLA1",150,0)
 N PSIEN,IP,FOUND
"RTN","PSOUTLA1",151,0)
 S (IP,FOUND)=0,PSIEN=""
"RTN","PSOUTLA1",152,0)
 ;find first specified refill processing backwards, in case dupes
"RTN","PSOUTLA1",153,0)
 F  S PSIEN=$O(^PS(52.51,"B",RXI,PSIEN),-1) Q:PSIEN=""  D  Q:FOUND
"RTN","PSOUTLA1",154,0)
 . S:$P(^PS(52.51,PSIEN,0),"^",9)=RFIL FOUND=1
"RTN","PSOUTLA1",155,0)
 . I FOUND,$P(^PS(52.51,PSIEN,0),"^",10)'=2 S IP=1
"RTN","PSOUTLA1",156,0)
 Q IP
"VER")
8.0^22.0
"BLD",6414,6)
^199
**END**
**END**
