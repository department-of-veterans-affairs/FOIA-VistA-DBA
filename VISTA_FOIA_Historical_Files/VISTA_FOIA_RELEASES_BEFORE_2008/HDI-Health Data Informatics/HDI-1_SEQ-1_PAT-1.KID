Released HDI*1*1 SEQ #1
Extracted from mail message
**KIDS**:HDI*1.0*1^

**INSTALL NAME**
HDI*1.0*1
"BLD",5496,0)
HDI*1.0*1^HEALTH DATA & INFORMATICS^0^3050622^y
"BLD",5496,1,0)
^^1^1^3050610^
"BLD",5496,1,1,0)
Refer to National Patch Module for details
"BLD",5496,4,0)
^9.64PA^^
"BLD",5496,"INIT")
POST^HDI1001A
"BLD",5496,"KRN",0)
^9.67PA^8989.52^19
"BLD",5496,"KRN",.4,0)
.4
"BLD",5496,"KRN",.401,0)
.401
"BLD",5496,"KRN",.402,0)
.402
"BLD",5496,"KRN",.403,0)
.403
"BLD",5496,"KRN",.5,0)
.5
"BLD",5496,"KRN",.84,0)
.84
"BLD",5496,"KRN",3.6,0)
3.6
"BLD",5496,"KRN",3.8,0)
3.8
"BLD",5496,"KRN",9.2,0)
9.2
"BLD",5496,"KRN",9.8,0)
9.8
"BLD",5496,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",5496,"KRN",9.8,"NM",1,0)
HDI1001A^^0^B7731387
"BLD",5496,"KRN",9.8,"NM",2,0)
HDI1001B^^0^B6132822
"BLD",5496,"KRN",9.8,"NM",3,0)
HDISVU02^^0^B3942321
"BLD",5496,"KRN",9.8,"NM",4,0)
HDISVS01^^0^B49690366
"BLD",5496,"KRN",9.8,"NM",5,0)
HDISVCMR^^0^B8366318
"BLD",5496,"KRN",9.8,"NM",6,0)
HDISVF01^^0^B21255088
"BLD",5496,"KRN",9.8,"NM",7,0)
HDISVCFX^^0^B4845979
"BLD",5496,"KRN",9.8,"NM",8,0)
HDI1001C^^0^B34784374
"BLD",5496,"KRN",9.8,"NM","B","HDI1001A",1)

"BLD",5496,"KRN",9.8,"NM","B","HDI1001B",2)

"BLD",5496,"KRN",9.8,"NM","B","HDI1001C",8)

"BLD",5496,"KRN",9.8,"NM","B","HDISVCFX",7)

"BLD",5496,"KRN",9.8,"NM","B","HDISVCMR",5)

"BLD",5496,"KRN",9.8,"NM","B","HDISVF01",6)

"BLD",5496,"KRN",9.8,"NM","B","HDISVS01",4)

"BLD",5496,"KRN",9.8,"NM","B","HDISVU02",3)

"BLD",5496,"KRN",19,0)
19
"BLD",5496,"KRN",19.1,0)
19.1
"BLD",5496,"KRN",101,0)
101
"BLD",5496,"KRN",409.61,0)
409.61
"BLD",5496,"KRN",771,0)
771
"BLD",5496,"KRN",870,0)
870
"BLD",5496,"KRN",8989.51,0)
8989.51
"BLD",5496,"KRN",8989.52,0)
8989.52
"BLD",5496,"KRN",8994,0)
8994
"BLD",5496,"KRN","B",.4,.4)

"BLD",5496,"KRN","B",.401,.401)

"BLD",5496,"KRN","B",.402,.402)

"BLD",5496,"KRN","B",.403,.403)

"BLD",5496,"KRN","B",.5,.5)

"BLD",5496,"KRN","B",.84,.84)

"BLD",5496,"KRN","B",3.6,3.6)

"BLD",5496,"KRN","B",3.8,3.8)

"BLD",5496,"KRN","B",9.2,9.2)

"BLD",5496,"KRN","B",9.8,9.8)

"BLD",5496,"KRN","B",19,19)

"BLD",5496,"KRN","B",19.1,19.1)

"BLD",5496,"KRN","B",101,101)

"BLD",5496,"KRN","B",409.61,409.61)

"BLD",5496,"KRN","B",771,771)

"BLD",5496,"KRN","B",870,870)

"BLD",5496,"KRN","B",8989.51,8989.51)

"BLD",5496,"KRN","B",8989.52,8989.52)

"BLD",5496,"KRN","B",8994,8994)

"BLD",5496,"QUES",0)
^9.62^^
"BLD",5496,"REQB",0)
^9.611^3^3
"BLD",5496,"REQB",1,0)
HEALTH DATA & INFORMATICS 1.0^2
"BLD",5496,"REQB",2,0)
XT*7.3*93^2
"BLD",5496,"REQB",3,0)
GMRV*5.0*8^2
"BLD",5496,"REQB","B","GMRV*5.0*8",3)

"BLD",5496,"REQB","B","HEALTH DATA & INFORMATICS 1.0",1)

"BLD",5496,"REQB","B","XT*7.3*93",2)

"INIT")
POST^HDI1001A
"MBREQ")
0
"PKG",556,-1)
1^1
"PKG",556,0)
HEALTH DATA & INFORMATICS^HDI^Data Standardization
"PKG",556,20,0)
^9.402P^^
"PKG",556,22,0)
^9.49I^1^1
"PKG",556,22,1,0)
1.0^3050426
"PKG",556,22,1,"PAH",1,0)
1^3050622^15346
"PKG",556,22,1,"PAH",1,1,0)
^^1^1^3050622
"PKG",556,22,1,"PAH",1,1,1,0)
Refer to National Patch Module for details
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","HDI1001A")
0^1^B7731387
"RTN","HDI1001A",1,0)
HDI1001A ;BPFO/JRP - PATCH 1 POST INSTALL;5/12/2005
"RTN","HDI1001A",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**1**;Feb 22, 2005
"RTN","HDI1001A",3,0)
 ;
"RTN","HDI1001A",4,0)
POST ;Main entry point for post-install routine
"RTN","HDI1001A",5,0)
 ; Input: None
"RTN","HDI1001A",6,0)
 ;        All variables set by Kernel for KIDS post-installs
"RTN","HDI1001A",7,0)
 ;Output: None
"RTN","HDI1001A",8,0)
 N HDIMSG
"RTN","HDI1001A",9,0)
 S HDIMSG(1)=" "
"RTN","HDI1001A",10,0)
 S HDIMSG(2)="~~~~~~~~~~~~~~~~~~~~"
"RTN","HDI1001A",11,0)
 S HDIMSG(3)="Post-Installation (POST^HDI1001A) will now be run"
"RTN","HDI1001A",12,0)
 S HDIMSG(4)=" "
"RTN","HDI1001A",13,0)
 D MES^XPDUTL(.HDIMSG) K HDIMSG
"RTN","HDI1001A",14,0)
 D DELETE
"RTN","HDI1001A",15,0)
 I '$$VUID() D PSTHALT Q
"RTN","HDI1001A",16,0)
 S HDIMSG(1)=" "
"RTN","HDI1001A",17,0)
 S HDIMSG(2)="Post-Installation ran to completion"
"RTN","HDI1001A",18,0)
 S HDIMSG(3)="~~~~~~~~~~~~~~~~~~~~"
"RTN","HDI1001A",19,0)
 S HDIMSG(4)=" "
"RTN","HDI1001A",20,0)
 D MES^XPDUTL(.HDIMSG) K HDIMSG
"RTN","HDI1001A",21,0)
 Q
"RTN","HDI1001A",22,0)
 ;
"RTN","HDI1001A",23,0)
PSTHALT ;Print post-install halted text
"RTN","HDI1001A",24,0)
 N HDIMSG
"RTN","HDI1001A",25,0)
 S HDIMSG(1)=" "
"RTN","HDI1001A",26,0)
 S HDIMSG(2)="*****"
"RTN","HDI1001A",27,0)
 S HDIMSG(3)="***** Post-installation has been halted"
"RTN","HDI1001A",28,0)
 S HDIMSG(4)="***** Please contact Enterprise VistA Support"
"RTN","HDI1001A",29,0)
 S HDIMSG(5)="*****"
"RTN","HDI1001A",30,0)
 S HDIMSG(6)=" "
"RTN","HDI1001A",31,0)
 D MES^XPDUTL(.HDIMSG)
"RTN","HDI1001A",32,0)
 Q
"RTN","HDI1001A",33,0)
 ;
"RTN","HDI1001A",34,0)
VUID() ;Instantiate VUIDs for set of code fields
"RTN","HDI1001A",35,0)
 ; Input: None
"RTN","HDI1001A",36,0)
 ;Output: 0 = Stop post-install (error)
"RTN","HDI1001A",37,0)
 ;        1 = Continue with post-install
"RTN","HDI1001A",38,0)
 N HDIMSG
"RTN","HDI1001A",39,0)
 S HDIMSG(1)=" "
"RTN","HDI1001A",40,0)
 S HDIMSG(2)="Seeding XTID VUID FOR SET OF CODES file (#8985.1) with Allergy data"
"RTN","HDI1001A",41,0)
 S HDIMSG(3)=" "
"RTN","HDI1001A",42,0)
 D MES^XPDUTL(.HDIMSG) K HDIMSG
"RTN","HDI1001A",43,0)
 I '$$VUIDL^HDISVU02("ALLERGY","HDI1001B") Q 0
"RTN","HDI1001A",44,0)
 S HDIMSG(1)=" "
"RTN","HDI1001A",45,0)
 S HDIMSG(2)="Seeding XTID VUID FOR SET OF CODES file (#8985.1) with Pharmacy data"
"RTN","HDI1001A",46,0)
 S HDIMSG(3)=" "
"RTN","HDI1001A",47,0)
 D MES^XPDUTL(.HDIMSG) K HDIMSG
"RTN","HDI1001A",48,0)
 I '$$VUIDL^HDISVU02("PHARM","HDI1001C") Q 0
"RTN","HDI1001A",49,0)
 Q 1
"RTN","HDI1001A",50,0)
 ;
"RTN","HDI1001A",51,0)
DELETE ;Delete VUID for ENTERED IN ERROR field (#22) of PATIENT
"RTN","HDI1001A",52,0)
 ; ALLERGIES file (#120.8)
"RTN","HDI1001A",53,0)
 ;
"RTN","HDI1001A",54,0)
 ; Input: None
"RTN","HDI1001A",55,0)
 ;Output: None
"RTN","HDI1001A",56,0)
 N HDIFILE,HDIFLD,HDIZERO,HDIARR,HDIERR,DIK,DA,INDX,HDIMSG,VUID
"RTN","HDI1001A",57,0)
 S HDIMSG(1)=" "
"RTN","HDI1001A",58,0)
 S HDIMSG(2)="Deleting VUIDs for the ENTERED IN ERROR field (#22)"
"RTN","HDI1001A",59,0)
 S HDIMSG(3)="of the PATIENT ALLERGIES file (#120.8)"
"RTN","HDI1001A",60,0)
 S HDIMSG(4)=" "
"RTN","HDI1001A",61,0)
 D MES^XPDUTL(.HDIMSG) K HDIMSG
"RTN","HDI1001A",62,0)
 ;Find entry in XTID VUID FOR SET OF CODES file (#8985.1)
"RTN","HDI1001A",63,0)
 S HDIFILE=120.8
"RTN","HDI1001A",64,0)
 S HDIFLD=22
"RTN","HDI1001A",65,0)
 S SCREEN="S HDIZERO=^(0) I $P(HDIZERO,""^"",1)=HDIFILE I $P(HDIZERO,""^"",2)=HDIFLD"
"RTN","HDI1001A",66,0)
 D FIND^DIC(8985.1,,".01;.02;.03;99.99","Q",120.8,,"B",SCREEN,,"HDIARR","HDIERR")
"RTN","HDI1001A",67,0)
 ;Delete entries found
"RTN","HDI1001A",68,0)
 S INDX=0
"RTN","HDI1001A",69,0)
 F  S INDX=+$O(HDIARR("DILIST",2,INDX)) Q:'INDX  D
"RTN","HDI1001A",70,0)
 .S VUID=HDIARR("DILIST","ID",INDX,99.99)
"RTN","HDI1001A",71,0)
 .S HDIMSG(1)=" "
"RTN","HDI1001A",72,0)
 .S HDIMSG(2)="    Deleting VUID "_VUID_" ..."
"RTN","HDI1001A",73,0)
 .D MES^XPDUTL(.HDIMSG) K HDIMSG
"RTN","HDI1001A",74,0)
 .S DA=HDIARR("DILIST",2,INDX)
"RTN","HDI1001A",75,0)
 .S DIK=$$GET1^DID(8985.1,,,"GLOBAL NAME")
"RTN","HDI1001A",76,0)
 .D ^DIK
"RTN","HDI1001A",77,0)
 Q
"RTN","HDI1001B")
0^2^B6132822
"RTN","HDI1001B",1,0)
HDI1001B ;BPFO/JRP - PATCH 1 POST INSTALL;5/12/2005
"RTN","HDI1001B",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**1**;Feb 22, 2005
"RTN","HDI1001B",3,0)
 ;
"RTN","HDI1001B",4,0)
ALLERGY ;VUIDs for Allergies domain
"RTN","HDI1001B",5,0)
 ;;120.8~17~A~4501004~1~
"RTN","HDI1001B",6,0)
 ;;120.85~5~n~4500630~1~
"RTN","HDI1001B",7,0)
 ;;120.85~5~y~4500633~1~
"RTN","HDI1001B",8,0)
 ;;120.85~6~n~4500630~1~
"RTN","HDI1001B",9,0)
 ;;120.85~6~y~4500633~1~
"RTN","HDI1001B",10,0)
 ;;120.85~7~n~4500630~1~
"RTN","HDI1001B",11,0)
 ;;120.85~7~y~4500633~1~
"RTN","HDI1001B",12,0)
 ;;120.85~8~n~4500630~1~
"RTN","HDI1001B",13,0)
 ;;120.85~8~y~4500633~1~
"RTN","HDI1001B",14,0)
 ;;120.85~9~n~4500630~1~
"RTN","HDI1001B",15,0)
 ;;120.85~9~y~4500633~1~
"RTN","HDI1001B",16,0)
 ;;120.85~10~n~4500630~1~
"RTN","HDI1001B",17,0)
 ;;120.85~10~y~4500633~1~
"RTN","HDI1001B",18,0)
 ;;120.85~11~n~4500630~1~
"RTN","HDI1001B",19,0)
 ;;120.85~11~y~4500633~1~
"RTN","HDI1001B",20,0)
 ;;120.85~12~n~4500630~1~
"RTN","HDI1001B",21,0)
 ;;120.85~12~n~4500630~1~
"RTN","HDI1001B",22,0)
 ;;120.85~12~y~4500633~1~
"RTN","HDI1001B",23,0)
 ;;120.85~12.1~n~4500630~1~
"RTN","HDI1001B",24,0)
 ;;120.85~12.1~y~4500633~1~
"RTN","HDI1001B",25,0)
 ;;120.85~12.2~n~4500630~1~
"RTN","HDI1001B",26,0)
 ;;120.85~12.2~y~4500633~1~
"RTN","HDI1001B",27,0)
 ;;120.85~14.5~1~4500995~1~
"RTN","HDI1001B",28,0)
 ;;120.85~14.5~2~4500791~1~
"RTN","HDI1001B",29,0)
 ;;120.85~14.5~3~4500996~1~
"RTN","HDI1001B",30,0)
 ;;120.85~23~n~4500630~1~
"RTN","HDI1001B",31,0)
 ;;120.85~23~y~4500633~1~
"RTN","HDI1001B",32,0)
 ;;120.85~24~n~4500630~1~
"RTN","HDI1001B",33,0)
 ;;120.85~24~y~4500633~1~
"RTN","HDI1001B",34,0)
 ;;120.85~25~n~4500630~1~
"RTN","HDI1001B",35,0)
 ;;120.85~25~y~4500633~1~
"RTN","HDI1001B",36,0)
 ;;120.85~26~n~4500630~1~
"RTN","HDI1001B",37,0)
 ;;120.85~26~y~4500633~1~
"RTN","HDI1001B",38,0)
 ;;120.85~26.1~n~4500630~1~
"RTN","HDI1001B",39,0)
 ;;120.85~26.1~y~4500633~1~
"RTN","HDI1001B",40,0)
 ;;120.85~31.1~n~4500630~1~
"RTN","HDI1001B",41,0)
 ;;120.85~31.1~y~4500633~1~
"RTN","HDI1001B",42,0)
 ;;120.85~31.2~n~4500630~1~
"RTN","HDI1001B",43,0)
 ;;120.85~31.2~y~4500633~1~
"RTN","HDI1001B",44,0)
 ;;120.85~31.3~n~4500630~1~
"RTN","HDI1001B",45,0)
 ;;120.85~31.3~y~4500633~1~
"RTN","HDI1001B",46,0)
 ;;120.85~51~n~4500630~1~
"RTN","HDI1001B",47,0)
 ;;120.85~51~y~4500633~1~
"RTN","HDI1001B",48,0)
 ;;120.85~52~n~4500630~1~
"RTN","HDI1001B",49,0)
 ;;120.85~52~y~4500633~1~
"RTN","HDI1001B",50,0)
 ;;120.85~64~n~4500630~1~
"RTN","HDI1001B",51,0)
 ;;120.85~64~y~4500633~1~
"RTN","HDI1001B",52,0)
 ;;120.85~65~f~4500997~1~
"RTN","HDI1001B",53,0)
 ;;120.85~65~i~4500998~1~
"RTN","HDI1001B",54,0)
 ;;120.8503~11~n~4500630~1~
"RTN","HDI1001B",55,0)
 ;;120.8503~11~y~4500633~1~
"RTN","HDI1001B",56,0)
 ;;120.8503~12~y~4500633~1~
"RTN","HDI1001B",57,0)
 ;;120.8503~12~n~4500630~1~
"RTN","HDI1001B",58,0)
 ;;120.8503~13~n~4500630~1~
"RTN","HDI1001B",59,0)
 ;;120.8503~13~y~4500633~1~
"RTN","HDI1001B",60,0)
 ;;120.8503~14~n~4500630~1~
"RTN","HDI1001B",61,0)
 ;;120.8503~14~y~4500633~1~
"RTN","HDI1001B",62,0)
 ;;120.8503~15~n~4500630~1~
"RTN","HDI1001B",63,0)
 ;;120.8503~15~y~4500633~1~
"RTN","HDI1001B",64,0)
 ;;120.8503~16~n~4500630~1~
"RTN","HDI1001B",65,0)
 ;;120.8503~16~y~4500633~1~
"RTN","HDI1001B",66,0)
 ;;120.8503~17~1~4501002~1~
"RTN","HDI1001B",67,0)
 ;;120.8503~17~2~4501000~1~
"RTN","HDI1001B",68,0)
 ;;120.8503~17~3~4501001~1~
"RTN","HDI1001B",69,0)
 ;;120.8503~17~4~4500999~1~
"RTN","HDI1001B",70,0)
 ;;120.86~1~0~4501003~1~
"RTN","HDI1001B",71,0)
 ;;120.86~1~1~4500633~1~
"RTN","HDI1001B",72,0)
 ;;
"RTN","HDI1001C")
0^8^B34784374
"RTN","HDI1001C",1,0)
HDI1001C ;BPFO/JRP - PATCH 1 POST INSTALL;6/9/2005
"RTN","HDI1001C",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**1**;Feb 22, 2005
"RTN","HDI1001C",3,0)
 ;
"RTN","HDI1001C",4,0)
PHARM ;VUIDs for Pharmacy domain
"RTN","HDI1001C",5,0)
 ;;55~.02~1~4501038~1~
"RTN","HDI1001C",6,0)
 ;;55~.02~0~4501066~1~
"RTN","HDI1001C",7,0)
 ;;55~.03~2~4501020~1~
"RTN","HDI1001C",8,0)
 ;;55~.03~3~4501033~1~
"RTN","HDI1001C",9,0)
 ;;55~.03~1~4501012~1~
"RTN","HDI1001C",10,0)
 ;;55~.03~0~4501060~1~
"RTN","HDI1001C",11,0)
 ;;55~.03~4~4501032~1~
"RTN","HDI1001C",12,0)
 ;;55~.04~1~4500633~1~
"RTN","HDI1001C",13,0)
 ;;55~.04~0~4500630~1~
"RTN","HDI1001C",14,0)
 ;;55~.08~A~4501006~1~
"RTN","HDI1001C",15,0)
 ;;55~.08~H~4500975~1~
"RTN","HDI1001C",16,0)
 ;;55~40~1~4500633~1~
"RTN","HDI1001C",17,0)
 ;;55~40.1~1~4500633~1~
"RTN","HDI1001C",18,0)
 ;;55~52.1~2~4501009~1~
"RTN","HDI1001C",19,0)
 ;;55~52.1~0~4501040~1~
"RTN","HDI1001C",20,0)
 ;;55~52.1~1~4501017~1~
"RTN","HDI1001C",21,0)
 ;;55~54~D~4500704~1~
"RTN","HDI1001C",22,0)
 ;;55~54~P~4501056~1~
"RTN","HDI1001C",23,0)
 ;;55~54~A~4501005~1~
"RTN","HDI1001C",24,0)
 ;;55~54~H~4501076~1~
"RTN","HDI1001C",25,0)
 ;;55~56~1~4500633~1~
"RTN","HDI1001C",26,0)
 ;;55~56~0~4500630~1~
"RTN","HDI1001C",27,0)
 ;;55~62.07~0~4501048~1~
"RTN","HDI1001C",28,0)
 ;;55~62.07~1~4501049~1~
"RTN","HDI1001C",29,0)
 ;;55~62.07~2~4501047~1~
"RTN","HDI1001C",30,0)
 ;;55~62.08~1~4501050~1~
"RTN","HDI1001C",31,0)
 ;;55~102.1~D~4500709~1~
"RTN","HDI1001C",32,0)
 ;;55~102.1~SCI~4500909~1~
"RTN","HDI1001C",33,0)
 ;;55~102.1~R~4500870~1~
"RTN","HDI1001C",34,0)
 ;;55~102.1~I~4500764~1~
"RTN","HDI1001C",35,0)
 ;;55~102.1~NE~4500804~1~
"RTN","HDI1001C",36,0)
 ;;55~102.1~NH~4500806~1~
"RTN","HDI1001C",37,0)
 ;;55~102.1~P~4500862~1~
"RTN","HDI1001C",38,0)
 ;;55~102.1~S~4500911~1~
"RTN","HDI1001C",39,0)
 ;;55~102.1~B~4500675~1~
"RTN","HDI1001C",40,0)
 ;;55~102.1~M~4500781~1~
"RTN","HDI1001C",41,0)
 ;;55~104~1~4501079~1~
"RTN","HDI1001C",42,0)
 ;;55~104~2~4501052~1~
"RTN","HDI1001C",43,0)
 ;;55~104~3~4501031~1~
"RTN","HDI1001C",44,0)
 ;;55~106~1~4500633~1~
"RTN","HDI1001C",45,0)
 ;;55~106.1~2~4501069~1~
"RTN","HDI1001C",46,0)
 ;;55~106.1~1~4501024~1~
"RTN","HDI1001C",47,0)
 ;;55.01~112~1~4501057~1~
"RTN","HDI1001C",48,0)
 ;;55.01~120~1~4500633~1~
"RTN","HDI1001C",49,0)
 ;;55.01~121~1~4500633~1~
"RTN","HDI1001C",50,0)
 ;;55.01~122~N~4501036~1~
"RTN","HDI1001C",51,0)
 ;;55.01~122~R~4501062~1~
"RTN","HDI1001C",52,0)
 ;;55.01~122~E~4500940~1~
"RTN","HDI1001C",53,0)
 ;;55.01~123~R~4501062~1~
"RTN","HDI1001C",54,0)
 ;;55.01~123~E~4500940~1~
"RTN","HDI1001C",55,0)
 ;;55.01~123~N~4501036~1~
"RTN","HDI1001C",56,0)
 ;;55.01~129~N~4501036~1~
"RTN","HDI1001C",57,0)
 ;;55.01~129~R~4500873~1~
"RTN","HDI1001C",58,0)
 ;;55.01~129~D~4500704~1~
"RTN","HDI1001C",59,0)
 ;;55.01~129~DE~4500705~1~
"RTN","HDI1001C",60,0)
 ;;55.01~129~H1~4501045~1~
"RTN","HDI1001C",61,0)
 ;;55.01~129~H0~4501042~1~
"RTN","HDI1001C",62,0)
 ;;55.01~129~RE~4501061~1~
"RTN","HDI1001C",63,0)
 ;;55.01~129~E~4501022~1~
"RTN","HDI1001C",64,0)
 ;;55.01~134~P~4501055~1~
"RTN","HDI1001C",65,0)
 ;;55.01~134~T~4501074~1~
"RTN","HDI1001C",66,0)
 ;;55.01~134~R~4501065~1~
"RTN","HDI1001C",67,0)
 ;;55.01~134~A~4501008~1~
"RTN","HDI1001C",68,0)
 ;;55.01~134~S~4501070~1~
"RTN","HDI1001C",69,0)
 ;;55.01~134~D~4500710~1~
"RTN","HDI1001C",70,0)
 ;;55.01~137~W~4501080~1~
"RTN","HDI1001C",71,0)
 ;;55.01~137~P~4501073~1~
"RTN","HDI1001C",72,0)
 ;;55.01~137~V~4501078~1~
"RTN","HDI1001C",73,0)
 ;;55.01~137~E~4501023~1~
"RTN","HDI1001C",74,0)
 ;;55.01~137~I~4501053~1~
"RTN","HDI1001C",75,0)
 ;;55.01~137~S~4501068~1~
"RTN","HDI1001C",76,0)
 ;;55.01~137~D~4501021~1~
"RTN","HDI1001C",77,0)
 ;;55.01~142~1~4500633~1~
"RTN","HDI1001C",78,0)
 ;;55.01~142~0~4500630~1~
"RTN","HDI1001C",79,0)
 ;;55.01~143~1~4500633~1~
"RTN","HDI1001C",80,0)
 ;;55.01~143~0~4500630~1~
"RTN","HDI1001C",81,0)
 ;;55.01~144~H~4501028~1~
"RTN","HDI1001C",82,0)
 ;;55.01~144~R~4501059~1~
"RTN","HDI1001C",83,0)
 ;;55.01~144~C~4501014~1~
"RTN","HDI1001C",84,0)
 ;;55.01~144~G~4501027~1~
"RTN","HDI1001C",85,0)
 ;;55.01~144~S~4501071~1~
"RTN","HDI1001C",86,0)
 ;;55.01~144~I~4501030~1~
"RTN","HDI1001C",87,0)
 ;;55.01~146~1~4500633~1~
"RTN","HDI1001C",88,0)
 ;;55.01~147~1~4500633~1~
"RTN","HDI1001C",89,0)
 ;;55.01~147~0~4500630~1~
"RTN","HDI1001C",90,0)
 ;;55.01~148~0~4500630~1~
"RTN","HDI1001C",91,0)
 ;;55.01~148~1~4500633~1~
"RTN","HDI1001C",92,0)
 ;;55.01~149~1~4501045~1~
"RTN","HDI1001C",93,0)
 ;;55.01~149~0~4501042~1~
"RTN","HDI1001C",94,0)
 ;;55.0105~2~C~4501014~1~
"RTN","HDI1001C",95,0)
 ;;55.0105~2~M~4501035~1~
"RTN","HDI1001C",96,0)
 ;;55.0105~2~I~4501030~1~
"RTN","HDI1001C",97,0)
 ;;55.0105~2~G~4501027~1~
"RTN","HDI1001C",98,0)
 ;;55.0105~2~S~4501071~1~
"RTN","HDI1001C",99,0)
 ;;55.0105~2~R~4501059~1~
"RTN","HDI1001C",100,0)
 ;;55.0105~2~H~4501028~1~
"RTN","HDI1001C",101,0)
 ;;55.0105~3~0~4501037~1~
"RTN","HDI1001C",102,0)
 ;;55.0105~3~1~4501016~1~
"RTN","HDI1001C",103,0)
 ;;55.0105~5~CA~4501011~1~
"RTN","HDI1001C",104,0)
 ;;55.0105~5~DT~4501019~1~
"RTN","HDI1001C",105,0)
 ;;55.0105~5~RC~4501058~1~
"RTN","HDI1001C",106,0)
 ;;55.0105~5~RP~4500875~1~
"RTN","HDI1001C",107,0)
 ;;55.0108~1~1~4500633~1~
"RTN","HDI1001C",108,0)
 ;;55.0108~1~0~4500630~1~
"RTN","HDI1001C",109,0)
 ;;55.0108~2~B~4501010~1~
"RTN","HDI1001C",110,0)
 ;;55.0108~2~L~4501034~1~
"RTN","HDI1001C",111,0)
 ;;55.05~5~2~4501018~1~
"RTN","HDI1001C",112,0)
 ;;55.05~5~1~4500704~1~
"RTN","HDI1001C",113,0)
 ;;55.06~.24~A~4501008~1~
"RTN","HDI1001C",114,0)
 ;;55.06~.24~S~4501070~1~
"RTN","HDI1001C",115,0)
 ;;55.06~.24~P~4501055~1~
"RTN","HDI1001C",116,0)
 ;;55.06~.24~R~4501065~1~
"RTN","HDI1001C",117,0)
 ;;55.06~.24~T~4501074~1~
"RTN","HDI1001C",118,0)
 ;;55.06~.24~D~4500710~1~
"RTN","HDI1001C",119,0)
 ;;55.06~4~T~4501075~1~
"RTN","HDI1001C",120,0)
 ;;55.06~4~P~4501051~1~
"RTN","HDI1001C",121,0)
 ;;55.06~4~C~4501013~1~
"RTN","HDI1001C",122,0)
 ;;55.06~4~A~4501007~1~
"RTN","HDI1001C",123,0)
 ;;55.06~4~U~4501077~1~
"RTN","HDI1001C",124,0)
 ;;55.06~5~1~4500633~1~
"RTN","HDI1001C",125,0)
 ;;55.06~5~0~4500630~1~
"RTN","HDI1001C",126,0)
 ;;55.06~6~0~4500630~1~
"RTN","HDI1001C",127,0)
 ;;55.06~6~1~4500633~1~
"RTN","HDI1001C",128,0)
 ;;55.06~7~O~4500829~1~
"RTN","HDI1001C",129,0)
 ;;55.06~7~OC~4500828~1~
"RTN","HDI1001C",130,0)
 ;;55.06~7~C~4501015~1~
"RTN","HDI1001C",131,0)
 ;;55.06~7~P~4500859~1~
"RTN","HDI1001C",132,0)
 ;;55.06~7~R~4500737~1~
"RTN","HDI1001C",133,0)
 ;;55.06~43~0~4500630~1~
"RTN","HDI1001C",134,0)
 ;;55.06~43~1~4500633~1~
"RTN","HDI1001C",135,0)
 ;;55.06~46~1~4500633~1~
"RTN","HDI1001C",136,0)
 ;;55.06~46~0~4500630~1~
"RTN","HDI1001C",137,0)
 ;;55.06~49~0~4500630~1~
"RTN","HDI1001C",138,0)
 ;;55.06~49~1~4500633~1~
"RTN","HDI1001C",139,0)
 ;;55.06~50~1~4500633~1~
"RTN","HDI1001C",140,0)
 ;;55.06~50~0~4500630~1~
"RTN","HDI1001C",141,0)
 ;;55.06~51~0~4500630~1~
"RTN","HDI1001C",142,0)
 ;;55.06~51~1~4500633~1~
"RTN","HDI1001C",143,0)
 ;;55.06~53~R~4500873~1~
"RTN","HDI1001C",144,0)
 ;;55.06~53~H0~4501043~1~
"RTN","HDI1001C",145,0)
 ;;55.06~53~H1~4501045~1~
"RTN","HDI1001C",146,0)
 ;;55.06~53~DE~4500705~1~
"RTN","HDI1001C",147,0)
 ;;55.06~53~D~4500704~1~
"RTN","HDI1001C",148,0)
 ;;55.06~53~N~4501036~1~
"RTN","HDI1001C",149,0)
 ;;55.06~53~E~4501022~1~
"RTN","HDI1001C",150,0)
 ;;55.06~53~RE~4501061~1~
"RTN","HDI1001C",151,0)
 ;;55.06~56~1~4501044~1~
"RTN","HDI1001C",152,0)
 ;;55.06~56~0~4501041~1~
"RTN","HDI1001C",153,0)
 ;;55.06~59~RE~4501061~1~
"RTN","HDI1001C",154,0)
 ;;55.06~59~R~4500873~1~
"RTN","HDI1001C",155,0)
 ;;55.06~59~A~4500659~1~
"RTN","HDI1001C",156,0)
 ;;55.06~59.1~1~4500633~1~
"RTN","HDI1001C",157,0)
 ;;55.06~60~1~4501044~1~
"RTN","HDI1001C",158,0)
 ;;55.06~60~0~4501041~1~
"RTN","HDI1001C",159,0)
 ;;55.06~69~1~4501039~1~
"RTN","HDI1001C",160,0)
 ;;55.06~103~N~4501036~1~
"RTN","HDI1001C",161,0)
 ;;55.06~103~R~4501063~1~
"RTN","HDI1001C",162,0)
 ;;55.06~103~E~4500940~1~
"RTN","HDI1001C",163,0)
 ;;55.06~107~E~4500940~1~
"RTN","HDI1001C",164,0)
 ;;55.06~107~R~4501063~1~
"RTN","HDI1001C",165,0)
 ;;55.06~110~S~4501068~1~
"RTN","HDI1001C",166,0)
 ;;55.06~110~D~4501021~1~
"RTN","HDI1001C",167,0)
 ;;55.06~110~I~4501053~1~
"RTN","HDI1001C",168,0)
 ;;55.06~110~W~4501080~1~
"RTN","HDI1001C",169,0)
 ;;55.06~110~P~4501073~1~
"RTN","HDI1001C",170,0)
 ;;55.06~110~V~4501078~1~
"RTN","HDI1001C",171,0)
 ;;55.06~110~E~4501023~1~
"RTN","HDI1001C",172,0)
 ;;55.06~122~1~4500633~1~
"RTN","HDI1001C",173,0)
 ;;55.06~123~1~4500633~1~
"RTN","HDI1001C",174,0)
 ;;55.06~123~0~4500630~1~
"RTN","HDI1001C",175,0)
 ;;55.06~124~0~4500630~1~
"RTN","HDI1001C",176,0)
 ;;55.06~124~1~4500633~1~
"RTN","HDI1001C",177,0)
 ;;55.0611~.05~3~4501025~1~
"RTN","HDI1001C",178,0)
 ;;55.0611~.05~1~4501026~1~
"RTN","HDI1001C",179,0)
 ;;55.0611~.05~4~4501064~1~
"RTN","HDI1001C",180,0)
 ;;55.0611~.05~2~4501054~1~
"RTN","HDI1001C",181,0)
 ;;55.1111~2~5~4500913~1~
"RTN","HDI1001C",182,0)
 ;;55.1111~2~1~4500707~1~
"RTN","HDI1001C",183,0)
 ;;55.1111~2~2~4501058~1~
"RTN","HDI1001C",184,0)
 ;;55.1111~2~4~4501011~1~
"RTN","HDI1001C",185,0)
 ;;55.1111~2~6~4500832~1~
"RTN","HDI1001C",186,0)
 ;;55.1111~2~3~4501019~1~
"RTN","HDI1001C",187,0)
 ;;55.1111~5~3~4501072~1~
"RTN","HDI1001C",188,0)
 ;;55.1111~5~1~4501029~1~
"RTN","HDI1001C",189,0)
 ;;55.1111~5~5~4500832~1~
"RTN","HDI1001C",190,0)
 ;;55.1111~5~2~4501067~1~
"RTN","HDI1001C",191,0)
 ;;55.1111~5~4~4501046~1~
"RTN","HDI1001C",192,0)
 ;;55.1111~6~1~4500633~1~
"RTN","HDI1001C",193,0)
 ;;55.1111~6~2~4500630~1~
"RTN","HDI1001C",194,0)
 ;;
"RTN","HDISVCFX")
0^7^B4845979
"RTN","HDISVCFX",1,0)
HDISVCFX ;CT/GRR ; 24 Jan 2005  10:26 AM
"RTN","HDISVCFX",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**1**;Feb 22, 2005
"RTN","HDISVCFX",3,0)
FILE(HDISDOM,HDISFILE,HDISFN,HDISARRY) ;
"RTN","HDISVCFX",4,0)
 N HDISQQ,HDISGL,HDISNODE,HDISPIC,Y
"RTN","HDISVCFX",5,0)
 N HDISOUT
"RTN","HDISVCFX",6,0)
 I HDISDOM=""!(HDISFILE="")!(HDISFN="")!(HDISARRY="") S HDISOUT=0_"^Parameter Missing" G QUIT
"RTN","HDISVCFX",7,0)
 K @HDISARRY
"RTN","HDISVCFX",8,0)
 ;Lookup VUID XML template to build XML document
"RTN","HDISVCFX",9,0)
 S DIC=7115.3,DIC(0)="Z",X="VUID" D ^DIC K DIC
"RTN","HDISVCFX",10,0)
 I Y<0 S HDISOUT=0_"^VUID Template Missing" G QUIT
"RTN","HDISVCFX",11,0)
 S HDIST=+Y,HDISY=Y,HDISY(0)=Y(0)
"RTN","HDISVCFX",12,0)
 ;
"RTN","HDISVCFX",13,0)
 ;Get Domain name
"RTN","HDISVCFX",14,0)
 S HDISDOMN=$P($G(^HDIS(7115.1,HDISDOM,0)),"^")
"RTN","HDISVCFX",15,0)
 ;
"RTN","HDISVCFX",16,0)
 ;Get Facility Number, MailMan Parameters, and mailMan Domain name
"RTN","HDISVCFX",17,0)
 S HDISSRC=$P($$SITE^VASITE(),"^",3)
"RTN","HDISVCFX",18,0)
 S HDISMD=$G(^XMB("NETNAME"))
"RTN","HDISVCFX",19,0)
 S HDISPROD=$$PROD^XUPROD()
"RTN","HDISVCFX",20,0)
 ;
"RTN","HDISVCFX",21,0)
 ;Set XML header in output array
"RTN","HDISVCFX",22,0)
 S @HDISARRY@(1)="<?xml version=""1.0"" encoding=""utf-8"" ?>"
"RTN","HDISVCFX",23,0)
 ;S @HDISARRY@(1)=$$XMLHDR^XOBVLIB()
"RTN","HDISVCFX",24,0)
 S @HDISARRY@(1)="<"_$P(HDISY(0),"^",4)_" "_$G(^HDIS(7115.3,HDIST,1))_">"
"RTN","HDISVCFX",25,0)
 ;
"RTN","HDISVCFX",26,0)
 ;Initialize Z array which will contain input data for XML routine
"RTN","HDISVCFX",27,0)
 N Z K Z D ZINIT
"RTN","HDISVCFX",28,0)
 ;
"RTN","HDISVCFX",29,0)
 ;Store Domain Name, Facility Number, MailMan Domain, File, and Field Number
"RTN","HDISVCFX",30,0)
 ;in output array
"RTN","HDISVCFX",31,0)
 S Z(10)=HDISDOMN
"RTN","HDISVCFX",32,0)
 S Z(20)=HDISSRC
"RTN","HDISVCFX",33,0)
 S Z(22)=HDISPROD
"RTN","HDISVCFX",34,0)
 S Z(25)=HDISMD
"RTN","HDISVCFX",35,0)
 S Z(40)=HDISFILE
"RTN","HDISVCFX",36,0)
 S Z(45)=HDISFN
"RTN","HDISVCFX",37,0)
 ;
"RTN","HDISVCFX",38,0)
 ;Get global root of file
"RTN","HDISVCFX",39,0)
 S HDISGL=$$ROOT^DILFD(HDISFILE,"",1) D CLEAN^DILF
"RTN","HDISVCFX",40,0)
 ;
"RTN","HDISVCFX",41,0)
 ;Write out first 5 xml elements to output array
"RTN","HDISVCFX",42,0)
 D XMLOUT^HDISXML(HDIST,"10,20,22,25,30,40,45,","Z",HDISARRY,.HDERR)
"RTN","HDISVCFX",43,0)
 ;
"RTN","HDISVCFX",44,0)
 ;Get the node and piece position of term to be standardized
"RTN","HDISVCFX",45,0)
 ;(In most cases it is the .01 field)
"RTN","HDISVCFX",46,0)
 S HDGL=$$GET1^DID(HDISFILE,HDISFN,"","GLOBAL SUBSCRIPT LOCATION")
"RTN","HDISVCFX",47,0)
 S HDISNODE=$P(HDGL,";",1)
"RTN","HDISVCFX",48,0)
 S HDISPIC=$P(HDGL,";",2)
"RTN","HDISVCFX",49,0)
 ;
"RTN","HDISVCFX",50,0)
 ;Loop through all file entries, create xml entry for each
"RTN","HDISVCFX",51,0)
 N HDISDA S HDISDA=0 F  S HDISDA=$O(@HDISGL@(HDISDA)) Q:HDISDA'>0  I $D(@HDISGL@(HDISDA,0)) D
"RTN","HDISVCFX",52,0)
 .S Z(60)=$P(@HDISGL@(HDISDA,HDISNODE),"^",HDISPIC)
"RTN","HDISVCFX",53,0)
 .S Z(70)=""
"RTN","HDISVCFX",54,0)
 .S Z(80)=""
"RTN","HDISVCFX",55,0)
 .S Z(100)=HDISDA_","
"RTN","HDISVCFX",56,0)
 .D XMLOUT^HDISXML(HDIST,"50,60,70,100,50/,","Z",HDISARRY,.HDERR)
"RTN","HDISVCFX",57,0)
 ;
"RTN","HDISVCFX",58,0)
 ;Set final XML closing elements
"RTN","HDISVCFX",59,0)
 D XMLOUT^HDISXML(HDIST,"30/,5/,","Z",HDISARRY,.HDERR)
"RTN","HDISVCFX",60,0)
 S HDISOUT=1
"RTN","HDISVCFX",61,0)
 ;
"RTN","HDISVCFX",62,0)
QUIT Q HDISOUT
"RTN","HDISVCFX",63,0)
 ;
"RTN","HDISVCFX",64,0)
 ;
"RTN","HDISVCFX",65,0)
ZINIT ;
"RTN","HDISVCFX",66,0)
 S Z(22)="" F Z=5:5:100 S Z(Z)=""
"RTN","HDISVCFX",67,0)
 Q
"RTN","HDISVCFX",68,0)
 ;
"RTN","HDISVCMR")
0^5^B8366318
"RTN","HDISVCMR",1,0)
HDISVCMR ;CT/GRR Data Standardization ; 08 Mar 2005  12:30 PM
"RTN","HDISVCMR",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**1**;Feb 22, 2005
"RTN","HDISVCMR",3,0)
 ;
"RTN","HDISVCMR",4,0)
EN(HDISDOM,HDISFILE) ;
"RTN","HDISVCMR",5,0)
 ;Input parameter:
"RTN","HDISVCMR",6,0)
 ;       HDISDOM - IEN to the HDIS Domain file (Required)
"RTN","HDISVCMR",7,0)
 ;       HDISFILE - Specific file # to be seeded (if not all domain files) (Optional)
"RTN","HDISVCMR",8,0)
 N HDISNM,HDISDT,HDERR,HDISFILS,HDISOK,HDISFLIS
"RTN","HDISVCMR",9,0)
 S HDISFLIS=""
"RTN","HDISVCMR",10,0)
 S HDISFN=.01
"RTN","HDISVCMR",11,0)
 S HDISNM=$G(^XMB("NETNAME"))
"RTN","HDISVCMR",12,0)
 S HDISDT=$$NOW^XLFDT(),HDISSDT=$$FMTXML^HDISVU01(HDISDT)
"RTN","HDISVCMR",13,0)
 I $G(HDISDOM)="" S HDISMESS="Required parameter (Domain) empty, File: "_HDISFILE_", Field: "_HDISFN D ERR^HDISVF09(HDISNM,HDISDT,HDISMESS) Q
"RTN","HDISVCMR",14,0)
 I '$D(^HDIS(7115.1,HDISDOM)) S HDISMESS="Domain ("_HDISDOM_") does not exist.  File: "_HDISFILE_", Field: "_HDISFN D ERR^HDISVF09(HDISNM,HDISDT,HDISMESS) Q
"RTN","HDISVCMR",15,0)
 I $$GETVFAIL^HDISVF02() S HDISMESS="VUID DS processer called but is in failsafe mode" D ERR^HDISVF09(HDISNM,HDISDT,HDISMESS) Q
"RTN","HDISVCMR",16,0)
 S HDISOK=$$GETFILS^HDISVF09(HDISDOM,0,.HDISFILS)
"RTN","HDISVCMR",17,0)
 I 'HDISOK S HDISMESS="No files are pending VUID processing in Domain "_$P(^HDIS(7115.1,HDISDOM,0),"^",1) D ERR^HDISVF09(HDISNM,HDISDT,HDISMESS) Q  ;modified 5/16/05 p-1
"RTN","HDISVCMR",18,0)
 I $G(HDISFILE)]"" D  Q
"RTN","HDISVCMR",19,0)
 .I $D(HDISFILS(HDISFILE)) D CREATE(HDISDOM,HDISFILE,HDISFN) I 1
"RTN","HDISVCMR",20,0)
 .E  D ERR^HDISVF09(HDISNM,HDISDT,"File: "_HDISFILE_" is not awaiting processing")
"RTN","HDISVCMR",21,0)
 S HDISDA=0 F  S HDISDA=$O(HDISFILS(HDISDA)) Q:HDISDA'>0  D CREATE(HDISDOM,HDISDA,.01)
"RTN","HDISVCMR",22,0)
 Q
"RTN","HDISVCMR",23,0)
 ;
"RTN","HDISVCMR",24,0)
CREATE(HDISDOM,HDISFILE,HDISFN) ;
"RTN","HDISVCMR",25,0)
 N HDISARRY,HDISMESS
"RTN","HDISVCMR",26,0)
 ;Update local status
"RTN","HDISVCMR",27,0)
 S HDISOUT=$$STATUPD^HDISVCUT(HDISFILE,HDISFN,1)
"RTN","HDISVCMR",28,0)
 I 'HDISOUT S HDISMESS=$P(HDISOUT,"^",2) D ERR^HDISVF09(HDISNM,HDISDT,HDISMESS) G CR8OUT
"RTN","HDISVCMR",29,0)
 ;
"RTN","HDISVCMR",30,0)
 ;Create XML doc containing facility data
"RTN","HDISVCMR",31,0)
 S HDISARRY=$NA(^TMP("HDIS",$J))
"RTN","HDISVCMR",32,0)
 S HDISOUT=$$FILE^HDISVCFX(HDISDOM,HDISFILE,HDISFN,HDISARRY)
"RTN","HDISVCMR",33,0)
 I 'HDISOUT S HDISMESS=$P(HDISOUT,"^",2) D ERR^HDISVF09(HDISNM,HDISDT,HDISMESS) G CR8OUT
"RTN","HDISVCMR",34,0)
 ;
"RTN","HDISVCMR",35,0)
 ; Send XML doc to Central Server
"RTN","HDISVCMR",36,0)
 S HDISOUT=$$SNDXML^HDISVM02(HDISARRY,1,"",1)
"RTN","HDISVCMR",37,0)
 I 'HDISOUT S HDISMESS=$P(HDISOUT,"^",2) D ERR^HDISVF09(HDISNM,HDISDT,HDISMESS) G CR8OUT
"RTN","HDISVCMR",38,0)
 ;
"RTN","HDISVCMR",39,0)
 ;Update local status file
"RTN","HDISVCMR",40,0)
 S HDISOUT=$$STATUPD^HDISVCUT(HDISFILE,HDISFN,2)
"RTN","HDISVCMR",41,0)
 I 'HDISOUT S HDISMESS=$P(HDISOUT,"^",2) D ERR^HDISVF09(HDISNM,HDISDT,HDISMESS) G CR8OUT
"RTN","HDISVCMR",42,0)
 ;
"RTN","HDISVCMR",43,0)
CR8OUT K @HDISARRY
"RTN","HDISVCMR",44,0)
 Q
"RTN","HDISVF01")
0^6^B21255088
"RTN","HDISVF01",1,0)
HDISVF01 ;BPFO/JRP - FILE UTILITIES/API;12/20/2004 ; 07 Mar 2005  9:53 AM
"RTN","HDISVF01",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**1**;Feb 22, 2005
"RTN","HDISVF01",3,0)
 ;
"RTN","HDISVF01",4,0)
 ;---- Begin HDIS VUID IMPLEMENTATION STATUS file (#7118.25) APIs ----
"RTN","HDISVF01",5,0)
 ;
"RTN","HDISVF01",6,0)
GETSTAT(FILE,FIELD,DATE,FAC,DOMAIN,TYPE) ;Get file/field implementation status
"RTN","HDISVF01",7,0)
 ; Input : FILE - File number
"RTN","HDISVF01",8,0)
 ;         FIELD - Field number (defaults to .01)
"RTN","HDISVF01",9,0)
 ;         DATE - FileMan date/time to return status for (optional)
"RTN","HDISVF01",10,0)
 ;                (defaults to NOW)
"RTN","HDISVF01",11,0)
 ;         FAC - Facility number (optional) (defaults to current)
"RTN","HDISVF01",12,0)
 ;         DOMAIN - Domain/IP address (optional) (defaults to current)
"RTN","HDISVF01",13,0)
 ;         TYPE - Type of system (optional) (defaults to current)
"RTN","HDISVF01",14,0)
 ;                0 = Test     1 = Production
"RTN","HDISVF01",15,0)
 ;Output : StatusCode ^ StatusPointer ^ StatusDate
"RTN","HDISVF01",16,0)
 ; Notes : Values for "not started" status and no date are returned
"RTN","HDISVF01",17,0)
 ;         on bad input or if no entry is found
"RTN","HDISVF01",18,0)
 ;       : If time is not included with the date, the last status
"RTN","HDISVF01",19,0)
 ;         for the given day is returned
"RTN","HDISVF01",20,0)
 ;       : If more than one entry for the same date/time is found, the
"RTN","HDISVF01",21,0)
 ;         higher entry number is returned
"RTN","HDISVF01",22,0)
 N IEN,STATCODE,STATPTR,STATDT,NOTYET,FFPTR,SYSPTR,X
"RTN","HDISVF01",23,0)
 ;Calculate output for bad input
"RTN","HDISVF01",24,0)
 S STATCODE=0
"RTN","HDISVF01",25,0)
 S X=$$GETIEN^HDISVF06(STATCODE,+$$GETTYPE^HDISVF02(),.STATPTR)
"RTN","HDISVF01",26,0)
 S NOTYET=STATCODE_"^"_STATPTR_"^"
"RTN","HDISVF01",27,0)
 ;Check input
"RTN","HDISVF01",28,0)
 S FILE=+$G(FILE)
"RTN","HDISVF01",29,0)
 I 'FILE Q NOTYET
"RTN","HDISVF01",30,0)
 S FIELD=+$G(FIELD)
"RTN","HDISVF01",31,0)
 I 'FIELD S FIELD=.01
"RTN","HDISVF01",32,0)
 S DATE=+$G(DATE)
"RTN","HDISVF01",33,0)
 I 'DATE S DATE=$$NOW^XLFDT()
"RTN","HDISVF01",34,0)
 I '$P(DATE,".",2) S $P(DATE,".",2)=24
"RTN","HDISVF01",35,0)
 S FAC=+$G(FAC)
"RTN","HDISVF01",36,0)
 I 'FAC S FAC=$$FACNUM()
"RTN","HDISVF01",37,0)
 S DOMAIN=$G(DOMAIN)
"RTN","HDISVF01",38,0)
 I DOMAIN="" S DOMAIN=$G(^XMB("NETNAME"))
"RTN","HDISVF01",39,0)
 S TYPE=$G(TYPE)
"RTN","HDISVF01",40,0)
 I TYPE="" S TYPE=$$PROD^XUPROD()
"RTN","HDISVF01",41,0)
 I ('FAC)!(DOMAIN="")!(TYPE="") Q NOTYET
"RTN","HDISVF01",42,0)
 ;Get pointers
"RTN","HDISVF01",43,0)
 I '$$FINDSYS^HDISVF07(DOMAIN,FAC,TYPE,1,.SYSPTR) Q NOTYET
"RTN","HDISVF01",44,0)
 I '$$GETIEN^HDISVF05(FILE,FIELD,.FFPTR) Q NOTYET
"RTN","HDISVF01",45,0)
 ;Get status date/time closest to input date/time
"RTN","HDISVF01",46,0)
 S DATE=DATE+.0000001
"RTN","HDISVF01",47,0)
 S STATDT=+$O(^HDISF(7118.25,"AFAC",SYSPTR,FFPTR,DATE),-1)
"RTN","HDISVF01",48,0)
 I 'STATDT Q NOTYET
"RTN","HDISVF01",49,0)
 ;Build list of entry numbers with found status date/time
"RTN","HDISVF01",50,0)
 K IEN
"RTN","HDISVF01",51,0)
 S STATPTR=0
"RTN","HDISVF01",52,0)
 F  S STATPTR=+$O(^HDISF(7118.25,"AFAC",SYSPTR,FFPTR,STATDT,STATPTR)) Q:'STATPTR  D
"RTN","HDISVF01",53,0)
 .S IEN=0
"RTN","HDISVF01",54,0)
 .F  S IEN=+$O(^HDISF(7118.25,"AFAC",SYSPTR,FFPTR,STATDT,STATPTR,IEN)) Q:'IEN  D
"RTN","HDISVF01",55,0)
 ..S IEN(IEN)=STATPTR
"RTN","HDISVF01",56,0)
 ;Get last entry number
"RTN","HDISVF01",57,0)
 S IEN=+$O(IEN(""),-1)
"RTN","HDISVF01",58,0)
 I 'IEN Q NOTYET
"RTN","HDISVF01",59,0)
 ;Build output
"RTN","HDISVF01",60,0)
 S STATPTR=IEN(IEN)
"RTN","HDISVF01",61,0)
 S X=$$GETCODE^HDISVF06(STATPTR,.STATCODE)
"RTN","HDISVF01",62,0)
 Q STATCODE_"^"_STATPTR_"^"_STATDT
"RTN","HDISVF01",63,0)
 ;
"RTN","HDISVF01",64,0)
SETSTAT(FILE,FIELD,CODE,DATE,STTYPE,FAC,DOMAIN,SYTYPE) ;Set file/field implementation status
"RTN","HDISVF01",65,0)
 ; Input : FILE - File number
"RTN","HDISVF01",66,0)
 ;         FIELD - Field number (defaults to .01)
"RTN","HDISVF01",67,0)
 ;         CODE - Status code to set (defaults to "not started")
"RTN","HDISVF01",68,0)
 ;         DATE - FileMan date/time to return status for (optional)
"RTN","HDISVF01",69,0)
 ;                (defaults to NOW)
"RTN","HDISVF01",70,0)
 ;         STTYPE - Type of status code being used (optional)
"RTN","HDISVF01",71,0)
 ;                  1 = Client (default)     2 = Server
"RTN","HDISVF01",72,0)
 ;         FAC - Facility number (optional) (defaults to current)
"RTN","HDISVF01",73,0)
 ;         DOMAIN - Domain/IP address (optional) (defaults to current)
"RTN","HDISVF01",74,0)
 ;         SYTYPE - Type of system (optional) (defaults to current)
"RTN","HDISVF01",75,0)
 ;                  0 = Test     1 = Production
"RTN","HDISVF01",76,0)
 ;Output : None
"RTN","HDISVF01",77,0)
 ; Notes : If time is not included with the date, 1 second past
"RTN","HDISVF01",78,0)
 ;         midnight will be used as the time
"RTN","HDISVF01",79,0)
 ;       : If an entry for the given file/field and date/time already
"RTN","HDISVF01",80,0)
 ;         exists, a new entry will still be added
"RTN","HDISVF01",81,0)
 N FFPTR,SYSPTR
"RTN","HDISVF01",82,0)
 ;Check input
"RTN","HDISVF01",83,0)
 S FILE=+$G(FILE)
"RTN","HDISVF01",84,0)
 I 'FILE Q
"RTN","HDISVF01",85,0)
 S FIELD=+$G(FIELD)
"RTN","HDISVF01",86,0)
 I 'FIELD S FIELD=.01
"RTN","HDISVF01",87,0)
 S CODE=+$G(CODE)
"RTN","HDISVF01",88,0)
 S DATE=+$G(DATE)
"RTN","HDISVF01",89,0)
 I 'DATE S DATE=$$NOW^XLFDT()
"RTN","HDISVF01",90,0)
 I '$P(DATE,".",2) S $P(DATE,".",2)="000001"
"RTN","HDISVF01",91,0)
 S STTYPE=+$G(STTYPE)
"RTN","HDISVF01",92,0)
 I ('STTYPE)!(STTYPE<1)!(STTYPE>2) S STTYPE=1
"RTN","HDISVF01",93,0)
 S FAC=+$G(FAC)
"RTN","HDISVF01",94,0)
 I 'FAC S FAC=$$FACNUM()
"RTN","HDISVF01",95,0)
 S DOMAIN=$G(DOMAIN)
"RTN","HDISVF01",96,0)
 I DOMAIN="" S DOMAIN=$G(^XMB("NETNAME"))
"RTN","HDISVF01",97,0)
 S SYTYPE=$G(SYTYPE)
"RTN","HDISVF01",98,0)
 I SYTYPE="" S SYTYPE=$$PROD^XUPROD()
"RTN","HDISVF01",99,0)
 I ('FAC)!(DOMAIN="")!(SYTYPE="") Q
"RTN","HDISVF01",100,0)
 ;Get pointers
"RTN","HDISVF01",101,0)
 I '$$FINDSYS^HDISVF07(DOMAIN,FAC,SYTYPE,1,.SYSPTR) Q
"RTN","HDISVF01",102,0)
 I '$$GETIEN^HDISVF05(FILE,FIELD,.FFPTR) Q
"RTN","HDISVF01",103,0)
 ;Create entry
"RTN","HDISVF01",104,0)
 D ADDSTAT(FFPTR,SYSPTR,CODE,STTYPE,DATE)
"RTN","HDISVF01",105,0)
 Q
"RTN","HDISVF01",106,0)
 ;
"RTN","HDISVF01",107,0)
SCREEN(FILE,FIELD,DATE) ;Apply screening logic to file/field ?
"RTN","HDISVF01",108,0)
 ; Input : FILE - File number
"RTN","HDISVF01",109,0)
 ;         FIELD - Field number (defaults to .01)
"RTN","HDISVF01",110,0)
 ;         DATE - FileMan date/time to check against (optional)
"RTN","HDISVF01",111,0)
 ;                (defaults to NOW)
"RTN","HDISVF01",112,0)
 ;Output : Flag indicating if screening logic should be applied
"RTN","HDISVF01",113,0)
 ;         0 = Don't screen entries during selection
"RTN","HDISVF01",114,0)
 ;         1 = Screen entries during selection
"RTN","HDISVF01",115,0)
 ; Notes : 0 (don't screen) is returned on bad input
"RTN","HDISVF01",116,0)
 ;       : If time is not included with the date, the last status
"RTN","HDISVF01",117,0)
 ;         for the given day is returned
"RTN","HDISVF01",118,0)
 N SCREEN,STAT
"RTN","HDISVF01",119,0)
 S SCREEN=0
"RTN","HDISVF01",120,0)
 S FILE=+$G(FILE)
"RTN","HDISVF01",121,0)
 I 'FILE Q SCREEN
"RTN","HDISVF01",122,0)
 S FIELD=+$G(FIELD)
"RTN","HDISVF01",123,0)
 I 'FIELD S FIELD=.01
"RTN","HDISVF01",124,0)
 S DATE=+$G(DATE)
"RTN","HDISVF01",125,0)
 I 'DATE S DATE=$$NOW^XLFDT()
"RTN","HDISVF01",126,0)
 S STAT=$$GETSTAT(FILE,FIELD,DATE)
"RTN","HDISVF01",127,0)
 I +STAT=6 S SCREEN=1
"RTN","HDISVF01",128,0)
 Q SCREEN
"RTN","HDISVF01",129,0)
 ;
"RTN","HDISVF01",130,0)
ADDSTAT(FFPTR,SYSPTR,CODE,TYPE,DATE) ;Set file/field implementation status
"RTN","HDISVF01",131,0)
 ; Input : FFPTR - Pointer to HDIS FILE/FIELD file (#7115.6)
"RTN","HDISVF01",132,0)
 ;         SYSPTR - Pointer to HDIS SYSTEM file (#7118.21)
"RTN","HDISVF01",133,0)
 ;         CODE - Status code to set (defaults to "not started")
"RTN","HDISVF01",134,0)
 ;         TYPE - Type of status code being used (optional)
"RTN","HDISVF01",135,0)
 ;                1 = Client (default)     2 = Server
"RTN","HDISVF01",136,0)
 ;         DATE - FileMan date/time to return status for (optional)
"RTN","HDISVF01",137,0)
 ;                (defaults to NOW)
"RTN","HDISVF01",138,0)
 ;Ouput : None
"RTN","HDISVF01",139,0)
 ; Notes : If time is not included with the date, 1 second past
"RTN","HDISVF01",140,0)
 ;         midnight will be used as the time
"RTN","HDISVF01",141,0)
 ;       : If an entry for the given file/field and date/time already
"RTN","HDISVF01",142,0)
 ;         exists, a new entry will still be added
"RTN","HDISVF01",143,0)
 ;       : Call assumes that FFPTR and SYSPTR are valid
"RTN","HDISVF01",144,0)
 N STATPTR,HDISFDA,HDISIEN,HDISMSG,IENS
"RTN","HDISVF01",145,0)
 ;Check input
"RTN","HDISVF01",146,0)
 S FFPTR=+$G(FFPTR)
"RTN","HDISVF01",147,0)
 I 'FFPTR Q
"RTN","HDISVF01",148,0)
 S SYSPTR=+$G(SYSPTR)
"RTN","HDISVF01",149,0)
 I 'SYSPTR Q
"RTN","HDISVF01",150,0)
 S CODE=+$G(CODE)
"RTN","HDISVF01",151,0)
 S DATE=+$G(DATE)
"RTN","HDISVF01",152,0)
 I 'DATE S DATE=$$NOW^XLFDT()
"RTN","HDISVF01",153,0)
 I '$P(DATE,".",2) S $P(DATE,".",2)="000001"
"RTN","HDISVF01",154,0)
 S TYPE=+$G(TYPE)
"RTN","HDISVF01",155,0)
 I ('TYPE)!(TYPE<1)!(TYPE>2) S TYPE=1
"RTN","HDISVF01",156,0)
 ;Get pointer to status
"RTN","HDISVF01",157,0)
 I '$$GETIEN^HDISVF06(CODE,TYPE,.STATPTR) Q
"RTN","HDISVF01",158,0)
 ;Create entry
"RTN","HDISVF01",159,0)
 S IENS="+1,"
"RTN","HDISVF01",160,0)
 S HDISFDA(7118.25,IENS,.01)=SYSPTR
"RTN","HDISVF01",161,0)
 S HDISFDA(7118.25,IENS,.02)=FFPTR
"RTN","HDISVF01",162,0)
 S HDISFDA(7118.25,IENS,.03)=STATPTR
"RTN","HDISVF01",163,0)
 S HDISFDA(7118.25,IENS,.04)=DATE
"RTN","HDISVF01",164,0)
 D UPDATE^DIE("","HDISFDA","HDISIEN","HDISMSG")
"RTN","HDISVF01",165,0)
 Q
"RTN","HDISVF01",166,0)
 ;
"RTN","HDISVF01",167,0)
 ;---- End HDIS VUID IMPLEMENTATION STATUS file (#7118.25) APIs ----
"RTN","HDISVF01",168,0)
 ;
"RTN","HDISVF01",169,0)
FACPTR(FACNUM) ;Return pointer to INSTITUTION file (#4) for facility number
"RTN","HDISVF01",170,0)
 ; Input : FACNUM - Facility number (optional) (defaults to current)
"RTN","HDISVF01",171,0)
 ;Output : Pointer to INSTITUTION file (#4)
"RTN","HDISVF01",172,0)
 ; Notes : NULL ("") is returned if an entry can not be found
"RTN","HDISVF01",173,0)
 N FACPTR
"RTN","HDISVF01",174,0)
 S FACNUM=$G(FACNUM)
"RTN","HDISVF01",175,0)
 I 'FACNUM D  Q FACPTR
"RTN","HDISVF01",176,0)
 .S FACPTR=+$$SITE^VASITE()
"RTN","HDISVF01",177,0)
 .I FACPTR<1 S FACPTR=""
"RTN","HDISVF01",178,0)
 S FACPTR=$$LKUP^XUAF4(FACNUM)
"RTN","HDISVF01",179,0)
 I 'FACPTR S FACPTR=""
"RTN","HDISVF01",180,0)
 Q FACPTR
"RTN","HDISVF01",181,0)
 ;
"RTN","HDISVF01",182,0)
FACNUM(FACPTR) ;Return facility number
"RTN","HDISVF01",183,0)
 ; Input : FACPTR - Pointer to INSTITUTION file (#4) (optional)
"RTN","HDISVF01",184,0)
 ;                  (default to current location)
"RTN","HDISVF01",185,0)
 ;Output : Facility number
"RTN","HDISVF01",186,0)
 ;         Null ("") returned if facility number couldn't be determined
"RTN","HDISVF01",187,0)
 N FACNUM
"RTN","HDISVF01",188,0)
 S FACPTR=$G(FACPTR)
"RTN","HDISVF01",189,0)
 I 'FACPTR D  Q FACNUM
"RTN","HDISVF01",190,0)
 .S FACNUM=$P($$SITE^VASITE(),"^",3)
"RTN","HDISVF01",191,0)
 .I FACNUM<1 S FACNUM=""
"RTN","HDISVF01",192,0)
 S FACNUM=$P($$NS^XUAF4(FACPTR),"^",2)
"RTN","HDISVF01",193,0)
 I FACNUM<1 S FACNUM=""
"RTN","HDISVF01",194,0)
 Q FACNUM
"RTN","HDISVS01")
0^4^B49690366
"RTN","HDISVS01",1,0)
HDISVS01 ;BPFO/JRP - PROCESS RECEIVED XML DATA;12/20/2004
"RTN","HDISVS01",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**1**;Feb 22, 2005
"RTN","HDISVS01",3,0)
 ;
"RTN","HDISVS01",4,0)
VUID(PRSARR,ERRARR) ;Process XML data from VistA system
"RTN","HDISVS01",5,0)
 ; Input : PRSARR - Array containing parsed XML document (closed root)
"RTN","HDISVS01",6,0)
 ;                  This is the output of SAX^HDISVM01
"RTN","HDISVS01",7,0)
 ;         ERRARR - Array to output errors in (closed root)
"RTN","HDISVS01",8,0)
 ;Output : None
"RTN","HDISVS01",9,0)
 ;         @ERRARR@(x) = Error text (if applicable)
"RTN","HDISVS01",10,0)
 ; Notes : ERRARR is initialized (KILLed) on input
"RTN","HDISVS01",11,0)
 ;
"RTN","HDISVS01",12,0)
 ;Processing of all VUID requests disabled - throw error and quit
"RTN","HDISVS01",13,0)
 I $$GETVFAIL^HDISVF02() D  Q
"RTN","HDISVS01",14,0)
 .N TMP
"RTN","HDISVS01",15,0)
 .S TMP="VUID^HDISVS01: Processing of VUID requests by central server"
"RTN","HDISVS01",16,0)
 .S TMP=TMP_" is currently disabled"
"RTN","HDISVS01",17,0)
 .D ADDERR^HDISVC00(TMP,ERRARR)
"RTN","HDISVS01",18,0)
 N EINDX,ESUBS,AINDX,ASUBS,DATA,TMP,FFPTR,DOMPTR,XMLDOC
"RTN","HDISVS01",19,0)
 N DOMAIN,SOURCE,MAILMAN,INDX,OOPS,SYSPTR,SRCTYPE,FILE,FIELD
"RTN","HDISVS01",20,0)
 S EINDX=$NA(@PRSARR@("EINDX"))
"RTN","HDISVS01",21,0)
 S ESUBS=$NA(@PRSARR@("ESUBS"))
"RTN","HDISVS01",22,0)
 S AINDX=$NA(@PRSARR@("AINDX"))
"RTN","HDISVS01",23,0)
 S ASUBS=$NA(@PRSARR@("ASUBS"))
"RTN","HDISVS01",24,0)
 S DATA=$NA(@PRSARR@("DATA"))
"RTN","HDISVS01",25,0)
 S FFARR=$NA(^TMP("HDISVS01",$J,"FFARR"))
"RTN","HDISVS01",26,0)
 S XMLDOC=$NA(^TMP("HDISVS01",$J,"XMLDOC"))
"RTN","HDISVS01",27,0)
 K @FFARR,@XMLDOC
"RTN","HDISVS01",28,0)
 S OOPS=0
"RTN","HDISVS01",29,0)
 S ERRARR=$G(ERRARR)
"RTN","HDISVS01",30,0)
 I ERRARR'="" K @ERRARR
"RTN","HDISVS01",31,0)
 S PRSARR=$G(PRSARR)
"RTN","HDISVS01",32,0)
 I PRSARR="" D  Q
"RTN","HDISVS01",33,0)
 .S TMP="VUID^HDISVS01: Input parameter PRSARR was not passed"
"RTN","HDISVS01",34,0)
 .D ADDERR^HDISVC00(TMP,ERRARR)
"RTN","HDISVS01",35,0)
 .S OOPS=1
"RTN","HDISVS01",36,0)
 I '$D(@PRSARR) D  Q
"RTN","HDISVS01",37,0)
 .S TMP="VUID^HDISVS01: Input array "_PRSARR_" (PRSARR) does not exist"
"RTN","HDISVS01",38,0)
 .D ADDERR^HDISVC00(TMP,ERRARR)
"RTN","HDISVS01",39,0)
 .S OOPS=1
"RTN","HDISVS01",40,0)
 ;Ensure all elements are indexed
"RTN","HDISVS01",41,0)
 F X=1:1 S TMP=$P($T(ELEMENTS+X),";;",2) Q:TMP=""  D
"RTN","HDISVS01",42,0)
 .I '$D(@EINDX@(TMP)) D
"RTN","HDISVS01",43,0)
 ..S TMP="XML element '"_TMP_"' was not found in the XML document"
"RTN","HDISVS01",44,0)
 ..D ADDERR^HDISVC00(TMP,ERRARR)
"RTN","HDISVS01",45,0)
 ..S OOPS=1
"RTN","HDISVS01",46,0)
 ;Ensure that 'Domain' is the root element
"RTN","HDISVS01",47,0)
 I $G(@ESUBS@(1))'="Domain" D
"RTN","HDISVS01",48,0)
 .S TMP="'Domain' was not the root element in the XML document"
"RTN","HDISVS01",49,0)
 .D ADDERR^HDISVC00(TMP,ERRARR)
"RTN","HDISVS01",50,0)
 .S OOPS=1
"RTN","HDISVS01",51,0)
 ;Errors found - quit
"RTN","HDISVS01",52,0)
 I OOPS Q
"RTN","HDISVS01",53,0)
 ;Process 'Domain' portion of XML doc
"RTN","HDISVS01",54,0)
 S INDX=@EINDX@("Domain")
"RTN","HDISVS01",55,0)
 ;Get elements
"RTN","HDISVS01",56,0)
 S DOMAIN=$G(@DATA@(INDX,1,@EINDX@("DomainName"),1,"V"))
"RTN","HDISVS01",57,0)
 S SOURCE=$G(@DATA@(INDX,1,@EINDX@("Source"),1,"V"))
"RTN","HDISVS01",58,0)
 S SRCTYPE=$G(@DATA@(INDX,1,@EINDX@("SourceType"),1,"V"))
"RTN","HDISVS01",59,0)
 S MAILMAN=$G(@DATA@(INDX,1,@EINDX@("MailManDomain"),1,"V"))
"RTN","HDISVS01",60,0)
 ;Validate elements
"RTN","HDISVS01",61,0)
 F TMP="DOMAIN","SOURCE","MAILMAN","SRCTYPE" I $G(@TMP)="" D
"RTN","HDISVS01",62,0)
 .S Y="DomainName"
"RTN","HDISVS01",63,0)
 .I TMP="SOURCE" S Y="Source"
"RTN","HDISVS01",64,0)
 .I TMP="SRCTYPE" S Y="SourceType"
"RTN","HDISVS01",65,0)
 .I TMP="MAILMAN" S Y="MailManDomain"
"RTN","HDISVS01",66,0)
 .S X="XML element '"_TMP_"' did not have a value"
"RTN","HDISVS01",67,0)
 .D ADDERR^HDISVC00(X,ERRARR)
"RTN","HDISVS01",68,0)
 .S OOPS=1
"RTN","HDISVS01",69,0)
 ;Validate facility number
"RTN","HDISVS01",70,0)
 I SOURCE'="" I '$$FACPTR^HDISVF01(SOURCE) D
"RTN","HDISVS01",71,0)
 .S TMP="Value of XML element 'Source' ("_SOURCE
"RTN","HDISVS01",72,0)
 .S TMP=TMP_") is not a valid facility number"
"RTN","HDISVS01",73,0)
 .D ADDERR^HDISVC00(TMP,ERRARR)
"RTN","HDISVS01",74,0)
 .S OOPS=1
"RTN","HDISVS01",75,0)
 ;Errors found - quit
"RTN","HDISVS01",76,0)
 I OOPS Q
"RTN","HDISVS01",77,0)
 ;Get pointers
"RTN","HDISVS01",78,0)
 I '$$GETIEN^HDISVF09(DOMAIN,.DOMPTR) D
"RTN","HDISVS01",79,0)
 .S TMP="Entry for XML element 'DomainName' ("_DOMAIN_") could not be "
"RTN","HDISVS01",80,0)
 .S TMP=TMP_"found in HDIS DOMAIN file (#7115.1)"
"RTN","HDISVS01",81,0)
 .D ADDERR^HDISVC00(TMP,ERRARR)
"RTN","HDISVS01",82,0)
 .S OOPS=1
"RTN","HDISVS01",83,0)
 I '$$FINDSYS^HDISVF07(MAILMAN,SOURCE,SRCTYPE,1,.SYSPTR) D
"RTN","HDISVS01",84,0)
 .S TMP="Entry for XML elements 'Source' ("_SOURCE_"), MailManDomain "
"RTN","HDISVS01",85,0)
 .S TMP=TMP_"("_MAILMAN_"), and 'SourceType' ("_SRCTYPE_") could not "
"RTN","HDISVS01",86,0)
 .S TMP=TMP_"be found/created in HDIS SYSTEM file (#7718.21)"
"RTN","HDISVS01",87,0)
 .D ADDERR^HDISVC00(TMP,ERRARR)
"RTN","HDISVS01",88,0)
 .S OOPS=1
"RTN","HDISVS01",89,0)
 ;Make sure entry in HDIS Parameter file exists for system
"RTN","HDISVS01",90,0)
 I 'OOPS I '$$GETPTR^HDISVF10(SYSPTR) I '$$PARAMINI^HDISVF10(SYSPTR,"","","",1) D
"RTN","HDISVS01",91,0)
 .S TMP="Entry for XML elements 'Source' ("_SOURCE_"), 'MailManDomain' "
"RTN","HDISVS01",92,0)
 .S TMP=TMP_"("_MAILMAN_"), and 'SourceType' ("_SRCTYPE_") could not "
"RTN","HDISVS01",93,0)
 .S TMP=TMP_"be found/created in HDIS PARAMETER file (#7718.29)"
"RTN","HDISVS01",94,0)
 .D ADDERR^HDISVC00(TMP,ERRARR)
"RTN","HDISVS01",95,0)
 .S OOPS=1
"RTN","HDISVS01",96,0)
 ;Processing of VUID requests from specific system disabled
"RTN","HDISVS01",97,0)
 I 'OOPS I $$GETVFAIL^HDISVF02(SYSPTR) D
"RTN","HDISVS01",98,0)
 .S TMP="Processing of VUID requests from 'Source' ("_SOURCE_"), "
"RTN","HDISVS01",99,0)
 .S TMP=TMP_"'MailManDomain' ("_MAILMAN_"), and 'SourceType' ("
"RTN","HDISVS01",100,0)
 .S TMP=TMP_SRCTYPE_") currently disabled"
"RTN","HDISVS01",101,0)
 .D ADDERR^HDISVC00(TMP,ERRARR)
"RTN","HDISVS01",102,0)
 .S OOPS=1
"RTN","HDISVS01",103,0)
 ;Errors found - quit
"RTN","HDISVS01",104,0)
 I OOPS Q
"RTN","HDISVS01",105,0)
 ;Process 'File' portion
"RTN","HDISVS01",106,0)
 D FILE($NA(@DATA@(INDX,1)),EINDX,AINDX,SYSPTR,FFARR,ERRARR)
"RTN","HDISVS01",107,0)
 ;Error - don't continue
"RTN","HDISVS01",108,0)
 I +$O(@ERRARR@(0)) K @FFARR Q
"RTN","HDISVS01",109,0)
 ;Build/send return XML document(s)
"RTN","HDISVS01",110,0)
 S FFPTR=""
"RTN","HDISVS01",111,0)
 F  S FFPTR=+$O(@FFARR@(FFPTR)) Q:'FFPTR  D
"RTN","HDISVS01",112,0)
 .S TMP=$$GETFF^HDISVF05(FFPTR,.FILE,.FIELD)
"RTN","HDISVS01",113,0)
 .K @XMLDOC
"RTN","HDISVS01",114,0)
 .;Status update (building msg)
"RTN","HDISVS01",115,0)
 .D ADDSTAT^HDISVF01(FFPTR,SYSPTR,102,2)
"RTN","HDISVS01",116,0)
 .;Build XML document
"RTN","HDISVS01",117,0)
 .I $$FILE^HDISVSFX(DOMPTR,SYSPTR,FFPTR,XMLDOC)<1 D  Q
"RTN","HDISVS01",118,0)
 ..;Error
"RTN","HDISVS01",119,0)
 ..S TMP="Unable to build XML document containing VUID information for"
"RTN","HDISVS01",120,0)
 ..S TMP=TMP_" file "_FILE_" (field "_FIELD_") in the "_DOMAIN
"RTN","HDISVS01",121,0)
 ..S TMP=TMP_" domain to facility "_SOURCE_" ("_MAILMAN_")"
"RTN","HDISVS01",122,0)
 ..D ADDERR^HDISVC00(TMP,ERRARR)
"RTN","HDISVS01",123,0)
 ..;Status update (error)
"RTN","HDISVS01",124,0)
 ..D ADDSTAT^HDISVF01(FFPTR,SYSPTR,104,2)
"RTN","HDISVS01",125,0)
 .;Send XML document
"RTN","HDISVS01",126,0)
 .I $$SNDXML^HDISVM02(XMLDOC,1,,SYSPTR)<1 D  Q
"RTN","HDISVS01",127,0)
 ..;Error
"RTN","HDISVS01",128,0)
 ..S TMP="Unable to send XML document containing VUID information for"
"RTN","HDISVS01",129,0)
 ..S TMP=TMP_" file "_FILE_" (field "_FIELD_") in the "_DOMAIN
"RTN","HDISVS01",130,0)
 ..S TMP=TMP_" domain to facility "_SOURCE_" ("_MAILMAN_")"
"RTN","HDISVS01",131,0)
 ..D ADDERR^HDISVC00(TMP,ERRARR)
"RTN","HDISVS01",132,0)
 ..;Status update (error)
"RTN","HDISVS01",133,0)
 ..D ADDSTAT^HDISVF01(FFPTR,SYSPTR,104,2)
"RTN","HDISVS01",134,0)
 .;Status update (msg sent)
"RTN","HDISVS01",135,0)
 .D ADDSTAT^HDISVF01(FFPTR,SYSPTR,103,2)
"RTN","HDISVS01",136,0)
 K @FFARR,@XMLDOC
"RTN","HDISVS01",137,0)
 Q
"RTN","HDISVS01",138,0)
 ;
"RTN","HDISVS01",139,0)
FILE(DATA,EINDX,AINDX,SYSPTR,FFARR,ERRARR) ;Process 'File' portion of XML document
"RTN","HDISVS01",140,0)
 ; Input : DATA - Array reference from which the 'File' element
"RTN","HDISVS01",141,0)
 ;                begins (closed root)
"RTN","HDISVS01",142,0)
 ;         EINDX - Element index array (closed root)
"RTN","HDISVS01",143,0)
 ;         AINDX - Attribute index array (closed root)
"RTN","HDISVS01",144,0)
 ;         SYSPTR - Pointer to HDIS SYSTEM file (#7118.21)
"RTN","HDISVS01",145,0)
 ;         FFARR - Array to output File/Field values (closed root)
"RTN","HDISVS01",146,0)
 ;         ERRARR - Error array (closed root)
"RTN","HDISVS01",147,0)
 ;Output : None
"RTN","HDISVS01",148,0)
 ;         @FFARR@(Ptr) = ""
"RTN","HDISVS01",149,0)
 ;            Ptr - Pointer to HDIS FILE/FIELD file (#7115.6)
"RTN","HDISVS01",150,0)
 ;         @ERRARR@(x) = Error text (if applicable)
"RTN","HDISVS01",151,0)
 ; Notes : Existance/validity of input assumed (internal call)
"RTN","HDISVS01",152,0)
 N INDX,REP,FILE,FIELD,OOPS,FFPTR,LASTERR
"RTN","HDISVS01",153,0)
 S INDX=@EINDX@("File")
"RTN","HDISVS01",154,0)
 S REP=0
"RTN","HDISVS01",155,0)
 F  S REP=+$O(@DATA@(INDX,REP)) Q:'REP  D
"RTN","HDISVS01",156,0)
 .S OOPS=0
"RTN","HDISVS01",157,0)
 .;Get elements
"RTN","HDISVS01",158,0)
 .S FILE=$G(@DATA@(INDX,REP,@EINDX@("FileNumber"),1,"V"))
"RTN","HDISVS01",159,0)
 .S FIELD=$G(@DATA@(INDX,REP,@EINDX@("FieldNumber"),1,"V"))
"RTN","HDISVS01",160,0)
 .;Validate elements
"RTN","HDISVS01",161,0)
 .F TMP="FILE","FIELD" I $G(@TMP)="" D
"RTN","HDISVS01",162,0)
 ..S Y="FileNumber"
"RTN","HDISVS01",163,0)
 ..I TMP="FIELD" S Y="FieldNumber"
"RTN","HDISVS01",164,0)
 ..S X="XML element '"_TMP_"' did not have a value"
"RTN","HDISVS01",165,0)
 ..D ADDERR^HDISVC00(X,ERRARR)
"RTN","HDISVS01",166,0)
 ..S OOPS=1
"RTN","HDISVS01",167,0)
 .;Convert file & field to pointer
"RTN","HDISVS01",168,0)
 .I FILE I FIELD I '$$GETIEN^HDISVF05(FILE,FIELD,.FFPTR) D
"RTN","HDISVS01",169,0)
 ..S TMP="Values of XML elements 'FileNumber' ("_FILE
"RTN","HDISVS01",170,0)
 ..S TMP=TMP_") and 'FieldNumber ("_FIELD_") not found in HDIS"
"RTN","HDISVS01",171,0)
 ..S TMP=TMP_" FILE/FIELD file (#7115.6)"
"RTN","HDISVS01",172,0)
 ..D ADDERR^HDISVC00(TMP,ERRARR)
"RTN","HDISVS01",173,0)
 ..S OOPS=1
"RTN","HDISVS01",174,0)
 .;Problem(s) found - don't continue
"RTN","HDISVS01",175,0)
 .I OOPS Q
"RTN","HDISVS01",176,0)
 .;Add File/Field to output array
"RTN","HDISVS01",177,0)
 .S @FFARR@(FFPTR)=""
"RTN","HDISVS01",178,0)
 .;Status update (start VUID assign)
"RTN","HDISVS01",179,0)
 .D ADDSTAT^HDISVF01(FFPTR,SYSPTR,101,2)
"RTN","HDISVS01",180,0)
 .;Remember last error number
"RTN","HDISVS01",181,0)
 .S LASTERR=+$O(@ERRARR@(""),-1)
"RTN","HDISVS01",182,0)
 .;Process 'Term' portion
"RTN","HDISVS01",183,0)
 .D TERM^HDISVS02($NA(@DATA@(INDX,REP)),EINDX,AINDX,SYSPTR,FFPTR,ERRARR)
"RTN","HDISVS01",184,0)
 .;Error(s) added - status update (error)
"RTN","HDISVS01",185,0)
 .I LASTERR'=+$O(@ERRARR@(""),-1) D ADDSTAT^HDISVF01(FFPTR,SYSPTR,104,2)
"RTN","HDISVS01",186,0)
 Q
"RTN","HDISVS01",187,0)
 ;
"RTN","HDISVS01",188,0)
ELEMENTS ;List of required elements in XML document
"RTN","HDISVS01",189,0)
 ;;Domain
"RTN","HDISVS01",190,0)
 ;;DomainName
"RTN","HDISVS01",191,0)
 ;;Source
"RTN","HDISVS01",192,0)
 ;;SourceType
"RTN","HDISVS01",193,0)
 ;;MailManDomain
"RTN","HDISVS01",194,0)
 ;;File
"RTN","HDISVS01",195,0)
 ;;FileNumber
"RTN","HDISVS01",196,0)
 ;;FieldNumber
"RTN","HDISVS01",197,0)
 ;;Term
"RTN","HDISVS01",198,0)
 ;;TermName
"RTN","HDISVS01",199,0)
 ;;VUID
"RTN","HDISVS01",200,0)
 ;;FacilityInternalReference
"RTN","HDISVS01",201,0)
 ;;
"RTN","HDISVU02")
0^3^B3942321
"RTN","HDISVU02",1,0)
HDISVU02 ;BPFO/JRP - STORE VUIDS FOR SET OF CODES;5/12/2005
"RTN","HDISVU02",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**1**;Feb 22, 2005
"RTN","HDISVU02",3,0)
 ;
"RTN","HDISVU02",4,0)
VUIDL(TAG,ROUTINE) ;Instantiate VUIDs for set of code fields
"RTN","HDISVU02",5,0)
 ; Input: TAG - Line tag under which VUID data has been placed
"RTN","HDISVU02",6,0)
 ;        ROUTINE - Routine line tag is in
"RTN","HDISVU02",7,0)
 ;                  Leave blank if in this routine
"RTN","HDISVU02",8,0)
 ;Output: 0 = Stop post-install (error)
"RTN","HDISVU02",9,0)
 ;        1 = Continue with post-install
"RTN","HDISVU02",10,0)
 ; Notes: Data lines must be in the format
"RTN","HDISVU02",11,0)
 ;          File~Field~Code~VUID~Status~EffectiveDateTime
"RTN","HDISVU02",12,0)
 ;          (Status and EffectiveDateTime must be in internal format)
"RTN","HDISVU02",13,0)
 ;          (Default value for Status is 0 - Inactive)
"RTN","HDISVU02",14,0)
 ;          (Default value for EffectiveDateTime is NOW)
"RTN","HDISVU02",15,0)
 ;      : Call assumes that all input (TAG & ROUTINE) is valid
"RTN","HDISVU02",16,0)
 ;      : Call assumes that data lines are valid
"RTN","HDISVU02",17,0)
 ;        (i.e. no missing/bad data)
"RTN","HDISVU02",18,0)
 N OFFSET,DATA,FILE,FIELD,IREF,VUID,STAT,STDT,DONE,RESULT,HDIMSG
"RTN","HDISVU02",19,0)
 S ROUTINE=$G(ROUTINE)
"RTN","HDISVU02",20,0)
 S RESULT=1
"RTN","HDISVU02",21,0)
 S DONE=0
"RTN","HDISVU02",22,0)
 F OFFSET=1:1 D  Q:DONE
"RTN","HDISVU02",23,0)
 .S DATA=$S(ROUTINE="":$T(@TAG+OFFSET),1:$T(@TAG+OFFSET^@ROUTINE))
"RTN","HDISVU02",24,0)
 .S DATA=$P(DATA,";;",2)
"RTN","HDISVU02",25,0)
 .I DATA="" S DONE=1 Q
"RTN","HDISVU02",26,0)
 .S FILE=$P(DATA,"~",1)
"RTN","HDISVU02",27,0)
 .S FIELD=$P(DATA,"~",2)
"RTN","HDISVU02",28,0)
 .S IREF=$P(DATA,"~",3)
"RTN","HDISVU02",29,0)
 .S VUID=$P(DATA,"~",4)
"RTN","HDISVU02",30,0)
 .S STAT=$P(DATA,"~",5)
"RTN","HDISVU02",31,0)
 .I STAT="" S STAT=0
"RTN","HDISVU02",32,0)
 .S STDT=$P(DATA,"~",6)
"RTN","HDISVU02",33,0)
 .I STDT="" S STDT=$$NOW^XLFDT()
"RTN","HDISVU02",34,0)
 .I '$$STOREIT(FILE,FIELD,IREF,VUID,STAT,STDT) D
"RTN","HDISVU02",35,0)
 ..S HDIMSG(1)="**"
"RTN","HDISVU02",36,0)
 ..S HDIMSG(2)="** Unable to store VUID and/or status information for file"
"RTN","HDISVU02",37,0)
 ..S HDIMSG(3)="** "_FILE_", field "_FIELD_", and internal value "_IREF
"RTN","HDISVU02",38,0)
 ..S HDIMSG(4)="**"
"RTN","HDISVU02",39,0)
 ..D MES^XPDUTL(.HDIMSG) K HDIMSG
"RTN","HDISVU02",40,0)
 ..S RESULT=0
"RTN","HDISVU02",41,0)
 Q RESULT
"RTN","HDISVU02",42,0)
 ;
"RTN","HDISVU02",43,0)
STOREIT(FILE,FIELD,IREF,VUID,STAT,STDT) ;Store VUID info
"RTN","HDISVU02",44,0)
 ; Input : FILE - File number
"RTN","HDISVU02",45,0)
 ;         FIELD - Field number
"RTN","HDISVU02",46,0)
 ;         IREF - Internal reference
"RTN","HDISVU02",47,0)
 ;         VUID - VUID
"RTN","HDISVU02",48,0)
 ;         STAT - Status
"RTN","HDISVU02",49,0)
 ;                0 = Inacive (default)     1 = Active
"RTN","HDISVU02",50,0)
 ;         STDT - Status Date/Time (FileMan)
"RTN","HDISVU02",51,0)
 ;                (Defaults to NOW)
"RTN","HDISVU02",52,0)
 ;Output : 1 = Success
"RTN","HDISVU02",53,0)
 ;         0 = Failure
"RTN","HDISVU02",54,0)
 ; Notes : Existance/validity of input assumed (internal call)
"RTN","HDISVU02",55,0)
 ;       : Call will automatically inactivate terms when appropriate
"RTN","HDISVU02",56,0)
 ;
"RTN","HDISVU02",57,0)
 N TMP,MASTER
"RTN","HDISVU02",58,0)
 S STAT=+$G(STAT)
"RTN","HDISVU02",59,0)
 S STDT=+$G(STDT)
"RTN","HDISVU02",60,0)
 I 'STDT S STDT=$$NOW^XLFDT()
"RTN","HDISVU02",61,0)
 ;Store VUID (also sets master entry flag, if appropriate)
"RTN","HDISVU02",62,0)
 I '$$SETVUID^XTID(FILE,FIELD,IREF,VUID) Q 0
"RTN","HDISVU02",63,0)
 ;Inactivate non-master entries
"RTN","HDISVU02",64,0)
 I '$$GETMASTR^XTID(FILE,FIELD,IREF) D
"RTN","HDISVU02",65,0)
 .S STAT=0
"RTN","HDISVU02",66,0)
 .S STDT=$$NOW^XLFDT()
"RTN","HDISVU02",67,0)
 ;Store status
"RTN","HDISVU02",68,0)
 Q $$SETSTAT^XTID(FILE,FIELD,IREF,STAT,STDT)
"VER")
8.0^22.0
"BLD",5496,6)
^SEQ #1
**END**
**END**
