KIDS Distribution saved on Sep 16, 2003@07:28:30
MS CSV COMPLIANCE
**KIDS**:CSV MS 1.0^EC*2.0*47^IBD*3.0*51^DG*5.3*511^SD*5.3*295^ICD*18.0*7^DG*5.3*510^PX*1.0*121^IB*2.0*210^FB*3.5*55^

**INSTALL NAME**
CSV MS 1.0
"BLD",3025,0)
CSV MS 1.0^^1^3030916^y
"BLD",3025,1,0)
^^57^57^3030729^
"BLD",3025,1,1,0)
****************************************************************** 
"BLD",3025,1,2,0)
*                                                                *
"BLD",3025,1,3,0)
*            THIS PATCH MUST BE INSTALLED AT ALL SITES BY        *       
"BLD",3025,1,4,0)
*                                                                *
"BLD",3025,1,5,0)
*                        SEPTEMBER 30, 2003                      *       
"BLD",3025,1,6,0)
*                                                                *
"BLD",3025,1,7,0)
****************************************************************** 
"BLD",3025,1,8,0)
 
"BLD",3025,1,9,0)
This combined build supports Code Set Versioning, mandated under the 
"BLD",3025,1,10,0)
Health Information Portability and Accountability Act (HIPAA).  It 
"BLD",3025,1,11,0)
contains routines and data dictionary changes to recognize code sets
"BLD",3025,1,12,0)
for the International Classification of Diseases, Clinical Modification
"BLD",3025,1,13,0)
(ICD-9-CM), Current Procedural Terminology (CPT) and Health Care 
"BLD",3025,1,14,0)
Financing Administration (HCFA) Common Procedure Coding System (HCPCS).
"BLD",3025,1,15,0)
 
"BLD",3025,1,16,0)
 
"BLD",3025,1,17,0)
This is a multi-build distribution (CSV MS 1.0) exporting the
"BLD",3025,1,18,0)
modifications to eight packages for the Code Set Versioning project.
"BLD",3025,1,19,0)
This build contains the following nine installs/builds:
"BLD",3025,1,20,0)
 
"BLD",3025,1,21,0)
  PACKAGE             NAMESPACE   BUILD
"BLD",3025,1,22,0)
  =================   =========   ==========
"BLD",3025,1,23,0)
  AICS                IBD         IBD*3.0*51
"BLD",3025,1,24,0)
  Ambulatory Care     SD          DG*5.3*511
"BLD",3025,1,25,0)
                                  SD*5.3*295
"BLD",3025,1,26,0)
  DRG Grouper         ICD         ICD*18.0*7
"BLD",3025,1,27,0)
  Event Capture       EC          EC*2.0*47
"BLD",3025,1,28,0)
  Fee Basis           FB          FB*3.5*55
"BLD",3025,1,29,0)
  Integrated Billing  IB          IB*2.0*210
"BLD",3025,1,30,0)
  PCE                 PX          PX*1.0*121
"BLD",3025,1,31,0)
  Registration (PTF)  DG          DG*5.3*510
"BLD",3025,1,32,0)
 
"BLD",3025,1,33,0)
The combined distribution is made available via a KIDS host file:
"BLD",3025,1,34,0)
  CSV_MS_1_0.KID
"BLD",3025,1,35,0)
 
"BLD",3025,1,36,0)
Installation:
"BLD",3025,1,37,0)
 
"BLD",3025,1,38,0)
Please refer to the Health Insurance Portability and Accountability
"BLD",3025,1,39,0)
Act (HIPAA) Code Set Versioning (CSV) Installation Guide for details
"BLD",3025,1,40,0)
of the installation procedure for this patch.
"BLD",3025,1,41,0)
 
"BLD",3025,1,42,0)
    The HIPAA CSV Installation Guide can be found in the following
"BLD",3025,1,43,0)
    [ANONYMOUS.SOFTWARE] directories:
"BLD",3025,1,44,0)
  
"BLD",3025,1,45,0)
                                  Preferred Address
"BLD",3025,1,46,0)
                                  -------------------------
"BLD",3025,1,47,0)
     First available FTP server   download.vista.med.va.gov
"BLD",3025,1,48,0)
  
"BLD",3025,1,49,0)
     Specific Field Office        FTP Address
"BLD",3025,1,50,0)
     ---------------------        ------------------------
"BLD",3025,1,51,0)
     Albany                       ftp.fo-albany.med.va.gov
"BLD",3025,1,52,0)
     Hines                        ftp.fo-hines.med.va.gov
"BLD",3025,1,53,0)
     Salt Lake City               ftp.fo-slc.med.va.gov
"BLD",3025,1,54,0)
 
"BLD",3025,1,55,0)
     File Name        Description               Format       FTP Protocol
"BLD",3025,1,56,0)
     --------------   -----------------------   -------      ------------
"BLD",3025,1,57,0)
     CSV_1_0_IG.PDF   HIPAA CSV Install Guide   Adobe Acrobat   Binary
"BLD",3025,10,0)
^9.63^6^9
"BLD",3025,10,1,0)
EC*2.0*47^1
"BLD",3025,10,2,0)
IBD*3.0*51^1
"BLD",3025,10,3,0)
DG*5.3*511^1
"BLD",3025,10,4,0)
SD*5.3*295^1
"BLD",3025,10,5,0)
ICD*18.0*7^1
"BLD",3025,10,6,0)
DG*5.3*510^1
"BLD",3025,10,7,0)
PX*1.0*121^1
"BLD",3025,10,8,0)
IB*2.0*210^1
"BLD",3025,10,9,0)
FB*3.5*55^1
"BLD",3025,10,"B","DG*5.3*510",6)

"BLD",3025,10,"B","DG*5.3*511",3)

"BLD",3025,10,"B","EC*2.0*47",1)

"BLD",3025,10,"B","FB*3.5*55",9)

"BLD",3025,10,"B","IB*2.0*210",8)

"BLD",3025,10,"B","IBD*3.0*51",2)

"BLD",3025,10,"B","ICD*18.0*7",5)

"BLD",3025,10,"B","PX*1.0*121",7)

"BLD",3025,10,"B","SD*5.3*295",4)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
EC*2.0*47
"BLD",2944,0)
EC*2.0*47^EVENT CAPTURE^0^3030916^y
"BLD",2944,1,0)
^^2^2^3030603^
"BLD",2944,1,1,0)
Please see the National Patch Module for details of the enhancements included 
"BLD",2944,1,2,0)
in this patch.
"BLD",2944,4,0)
^9.64PA^721^2
"BLD",2944,4,721,0)
721
"BLD",2944,4,721,2,0)
^9.641^721.038^2
"BLD",2944,4,721,2,721,0)
EVENT CAPTURE PATIENT  (File-top level)
"BLD",2944,4,721,2,721,1,0)
^9.6411^20^1
"BLD",2944,4,721,2,721,1,20,0)
PRIMARY ICD-9 CODE
"BLD",2944,4,721,2,721.038,0)
SECONDARY ICD-9 CODE  (sub-file)
"BLD",2944,4,721,2,721.038,1,0)
^9.6411^.01^1
"BLD",2944,4,721,2,721.038,1,.01,0)
SECONDARY ICD-9 CODE
"BLD",2944,4,721,222)
y^y^p^^^^n^^n
"BLD",2944,4,721,224)

"BLD",2944,4,725,0)
725
"BLD",2944,4,725,2,0)
^9.641^725^1
"BLD",2944,4,725,2,725,0)
EC NATIONAL PROCEDURE  (File-top level)
"BLD",2944,4,725,2,725,1,0)
^9.6411^4^1
"BLD",2944,4,725,2,725,1,4,0)
CPT
"BLD",2944,4,725,222)
y^y^p^^^^n^^n
"BLD",2944,4,725,224)

"BLD",2944,4,"APDD",721,721)

"BLD",2944,4,"APDD",721,721,20)

"BLD",2944,4,"APDD",721,721.038)

"BLD",2944,4,"APDD",721,721.038,.01)

"BLD",2944,4,"APDD",725,725)

"BLD",2944,4,"APDD",725,725,4)

"BLD",2944,4,"B",721,721)

"BLD",2944,4,"B",725,725)

"BLD",2944,"ABPKG")
n
"BLD",2944,"KRN",0)
^9.67PA^8989.52^20
"BLD",2944,"KRN",.4,0)
.4
"BLD",2944,"KRN",.401,0)
.401
"BLD",2944,"KRN",.402,0)
.402
"BLD",2944,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",2944,"KRN",.403,0)
.403
"BLD",2944,"KRN",.5,0)
.5
"BLD",2944,"KRN",.84,0)
.84
"BLD",2944,"KRN",3.6,0)
3.6
"BLD",2944,"KRN",3.8,0)
3.8
"BLD",2944,"KRN",9.2,0)
9.2
"BLD",2944,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",2944,"KRN",9.8,0)
9.8
"BLD",2944,"KRN",9.8,"NM",0)
^9.68A^35^35
"BLD",2944,"KRN",9.8,"NM",1,0)
ECUTL^^0^B21782076
"BLD",2944,"KRN",9.8,"NM",2,0)
ECUTL2^^0^B31099024
"BLD",2944,"KRN",9.8,"NM",3,0)
ECV3RPC^^0^B31524451
"BLD",2944,"KRN",9.8,"NM",4,0)
ECV5RPC^^0^B12908234
"BLD",2944,"KRN",9.8,"NM",5,0)
ECUMRPC2^^0^B18491432
"BLD",2944,"KRN",9.8,"NM",6,0)
ECUERPC1^^0^B55231134
"BLD",2944,"KRN",9.8,"NM",7,0)
ECUERPC^^0^B49300065
"BLD",2944,"KRN",9.8,"NM",8,0)
ECSUM1^^0^B11786864
"BLD",2944,"KRN",9.8,"NM",9,0)
ECRPRSN^^0^B82020586
"BLD",2944,"KRN",9.8,"NM",10,0)
ECRDSSU^^0^B48492091
"BLD",2944,"KRN",9.8,"NM",11,0)
ECPRSUM1^^0^B26423434
"BLD",2944,"KRN",9.8,"NM",12,0)
ECPROV3^^0^B31000509
"BLD",2944,"KRN",9.8,"NM",13,0)
ECPCER^^0^B18605237
"BLD",2944,"KRN",9.8,"NM",14,0)
ECOSSUM^^0^B65789298
"BLD",2944,"KRN",9.8,"NM",15,0)
ECPAT^^0^B30137327
"BLD",2944,"KRN",9.8,"NM",16,0)
ECMLMN^^0^B56374552
"BLD",2944,"KRN",9.8,"NM",17,0)
ECMFECS^^0^B20761766
"BLD",2944,"KRN",9.8,"NM",18,0)
ECHECK1^^0^B9688784
"BLD",2944,"KRN",9.8,"NM",19,0)
ECEFPAT^^0^B53646132
"BLD",2944,"KRN",9.8,"NM",20,0)
ECEDU^^0^B13543297
"BLD",2944,"KRN",9.8,"NM",21,0)
ECED3^^0^B71551956
"BLD",2944,"KRN",9.8,"NM",22,0)
ECED2^^0^B19481574
"BLD",2944,"KRN",9.8,"NM",23,0)
ECED1^^0^B36373005
"BLD",2944,"KRN",9.8,"NM",24,0)
ECBEP1B^^0^B46208363
"BLD",2944,"KRN",9.8,"NM",25,0)
ECBEN2U^^0^B35263357
"BLD",2944,"KRN",9.8,"NM",26,0)
ECBEN2A^^0^B48180018
"BLD",2944,"KRN",9.8,"NM",27,0)
ECSCRN^^0^B27587113
"BLD",2944,"KRN",9.8,"NM",28,0)
ECMUTL^^0^B65491557
"BLD",2944,"KRN",9.8,"NM",29,0)
ECRRPC^^0^B10279137
"BLD",2944,"KRN",9.8,"NM",30,0)
ECRPCLS^^0^B51723587
"BLD",2944,"KRN",9.8,"NM",31,0)
ECSUM^^0^B11950391
"BLD",2944,"KRN",9.8,"NM",32,0)
ECPROV2^^0^B3828598
"BLD",2944,"KRN",9.8,"NM",33,0)
ECMLMP^^0^B62940646
"BLD",2944,"KRN",9.8,"NM",34,0)
ECPROV4^^1^
"BLD",2944,"KRN",9.8,"NM",35,0)
ECPROV5^^1^
"BLD",2944,"KRN",9.8,"NM","B","ECBEN2A",26)

"BLD",2944,"KRN",9.8,"NM","B","ECBEN2U",25)

"BLD",2944,"KRN",9.8,"NM","B","ECBEP1B",24)

"BLD",2944,"KRN",9.8,"NM","B","ECED1",23)

"BLD",2944,"KRN",9.8,"NM","B","ECED2",22)

"BLD",2944,"KRN",9.8,"NM","B","ECED3",21)

"BLD",2944,"KRN",9.8,"NM","B","ECEDU",20)

"BLD",2944,"KRN",9.8,"NM","B","ECEFPAT",19)

"BLD",2944,"KRN",9.8,"NM","B","ECHECK1",18)

"BLD",2944,"KRN",9.8,"NM","B","ECMFECS",17)

"BLD",2944,"KRN",9.8,"NM","B","ECMLMN",16)

"BLD",2944,"KRN",9.8,"NM","B","ECMLMP",33)

"BLD",2944,"KRN",9.8,"NM","B","ECMUTL",28)

"BLD",2944,"KRN",9.8,"NM","B","ECOSSUM",14)

"BLD",2944,"KRN",9.8,"NM","B","ECPAT",15)

"BLD",2944,"KRN",9.8,"NM","B","ECPCER",13)

"BLD",2944,"KRN",9.8,"NM","B","ECPROV2",32)

"BLD",2944,"KRN",9.8,"NM","B","ECPROV3",12)

"BLD",2944,"KRN",9.8,"NM","B","ECPROV4",34)

"BLD",2944,"KRN",9.8,"NM","B","ECPROV5",35)

"BLD",2944,"KRN",9.8,"NM","B","ECPRSUM1",11)

"BLD",2944,"KRN",9.8,"NM","B","ECRDSSU",10)

"BLD",2944,"KRN",9.8,"NM","B","ECRPCLS",30)

"BLD",2944,"KRN",9.8,"NM","B","ECRPRSN",9)

"BLD",2944,"KRN",9.8,"NM","B","ECRRPC",29)

"BLD",2944,"KRN",9.8,"NM","B","ECSCRN",27)

"BLD",2944,"KRN",9.8,"NM","B","ECSUM",31)

"BLD",2944,"KRN",9.8,"NM","B","ECSUM1",8)

"BLD",2944,"KRN",9.8,"NM","B","ECUERPC",7)

"BLD",2944,"KRN",9.8,"NM","B","ECUERPC1",6)

"BLD",2944,"KRN",9.8,"NM","B","ECUMRPC2",5)

"BLD",2944,"KRN",9.8,"NM","B","ECUTL",1)

"BLD",2944,"KRN",9.8,"NM","B","ECUTL2",2)

"BLD",2944,"KRN",9.8,"NM","B","ECV3RPC",3)

"BLD",2944,"KRN",9.8,"NM","B","ECV5RPC",4)

"BLD",2944,"KRN",19,0)
19
"BLD",2944,"KRN",19,"NM",0)
^9.68A^^0
"BLD",2944,"KRN",19.1,0)
19.1
"BLD",2944,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",2944,"KRN",101,0)
101
"BLD",2944,"KRN",409.61,0)
409.61
"BLD",2944,"KRN",771,0)
771
"BLD",2944,"KRN",869.2,0)
869.2
"BLD",2944,"KRN",870,0)
870
"BLD",2944,"KRN",8989.51,0)
8989.51
"BLD",2944,"KRN",8989.52,0)
8989.52
"BLD",2944,"KRN",8994,0)
8994
"BLD",2944,"KRN",8994,"NM",0)
^9.68A^^0
"BLD",2944,"KRN","B",.4,.4)

"BLD",2944,"KRN","B",.401,.401)

"BLD",2944,"KRN","B",.402,.402)

"BLD",2944,"KRN","B",.403,.403)

"BLD",2944,"KRN","B",.5,.5)

"BLD",2944,"KRN","B",.84,.84)

"BLD",2944,"KRN","B",3.6,3.6)

"BLD",2944,"KRN","B",3.8,3.8)

"BLD",2944,"KRN","B",9.2,9.2)

"BLD",2944,"KRN","B",9.8,9.8)

"BLD",2944,"KRN","B",19,19)

"BLD",2944,"KRN","B",19.1,19.1)

"BLD",2944,"KRN","B",101,101)

"BLD",2944,"KRN","B",409.61,409.61)

"BLD",2944,"KRN","B",771,771)

"BLD",2944,"KRN","B",869.2,869.2)

"BLD",2944,"KRN","B",870,870)

"BLD",2944,"KRN","B",8989.51,8989.51)

"BLD",2944,"KRN","B",8989.52,8989.52)

"BLD",2944,"KRN","B",8994,8994)

"BLD",2944,"QUES",0)
^9.62^^
"BLD",2944,"REQB",0)
^9.611^8^5
"BLD",2944,"REQB",4,0)
ICPT*6.0*14^2
"BLD",2944,"REQB",5,0)
ICD*18.0*6^2
"BLD",2944,"REQB",6,0)
EC*2.0*33^2
"BLD",2944,"REQB",7,0)
EC*2.0*42^2
"BLD",2944,"REQB",8,0)
EC*2.0*46^2
"BLD",2944,"REQB","B","EC*2.0*33",6)

"BLD",2944,"REQB","B","EC*2.0*42",7)

"BLD",2944,"REQB","B","EC*2.0*46",8)

"BLD",2944,"REQB","B","ICD*18.0*6",5)

"BLD",2944,"REQB","B","ICPT*6.0*14",4)

"FIA",721)
EVENT CAPTURE PATIENT
"FIA",721,0)
^ECH(
"FIA",721,0,0)
721
"FIA",721,0,1)
y^y^p^^^^n^^n
"FIA",721,0,10)

"FIA",721,0,11)

"FIA",721,0,"RLRO")

"FIA",721,0,"VR")
2.0^EC
"FIA",721,721)
1
"FIA",721,721,20)

"FIA",721,721,38)

"FIA",721,721.038)
1
"FIA",721,721.038,.01)

"FIA",725)
EC NATIONAL PROCEDURE
"FIA",725,0)
^EC(725,
"FIA",725,0,0)
725I
"FIA",725,0,1)
y^y^p^^^^n^^n
"FIA",725,0,10)

"FIA",725,0,11)

"FIA",725,0,"RLRO")

"FIA",725,0,"VR")
2.0^EC
"FIA",725,725)
1
"FIA",725,725,4)

"MBREQ")
1
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"PKG",499,-1)
1^1
"PKG",499,0)
EVENT CAPTURE^EC^Event Capture Workload Capture System^
"PKG",499,20,0)
^9.402P^^
"PKG",499,22,0)
^9.49I^1^1
"PKG",499,22,1,0)
2.0^2960508^2970410^11715
"PKG",499,22,1,"PAH",1,0)
47^3030916
"PKG",499,22,1,"PAH",1,1,0)
^^2^2^3030916
"PKG",499,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for details of the enhancements included 
"PKG",499,22,1,"PAH",1,1,2,0)
in this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
35
"RTN","ECBEN2A")
0^26^B48180018
"RTN","ECBEN2A",1,0)
ECBEN2A ;BIR/MAM,JPW-Categories and Procedures Selection ;30 Apr 96
"RTN","ECBEN2A",2,0)
 ;;2.0; EVENT CAPTURE ;**1,4,5,13,18,33,47**;8 May 96
"RTN","ECBEN2A",3,0)
CHK ; check unit for valid categories
"RTN","ECBEN2A",4,0)
 S (COUNT,EC1)=0 K ECHOICE,ECSTOP
"RTN","ECBEN2A",5,0)
 D CATS^ECHECK1 S ECONE=""
"RTN","ECBEN2A",6,0)
 I '$D(ECC(1)) S ECC=0,ECCN="None",ECONE=0 G P
"RTN","ECBEN2A",7,0)
 I '$D(ECC(2)) S ECC=+ECC(1),ECCN=$P(ECC(1),"^",2),ECONE=1 G P
"RTN","ECBEN2A",8,0)
CATS ; select category
"RTN","ECBEN2A",9,0)
 S X="",CNT=0
"RTN","ECBEN2A",10,0)
LIST D HDR^ECBEN2U S JJ=0 W !,"Categories within "_ECDN_": ",!
"RTN","ECBEN2A",11,0)
 S EC1=0
"RTN","ECBEN2A",12,0)
 F  S CNT=$O(ECC(CNT)) Q:'CNT!$D(ECHOICE)  D:($Y+5>IOSL) SELC Q:$D(ECHOICE)  I X="" W !,CNT_".",?5,$P(ECC(CNT),"^",2)
"RTN","ECBEN2A",13,0)
 I '$D(ECSTOP),$D(ECHOICE) S ECONE=2 G P
"RTN","ECBEN2A",14,0)
PICK W !!,"Select Number:  " R X:DTIME I '$T!("^"[X) S ECOUT=1 Q
"RTN","ECBEN2A",15,0)
 I '$D(ECC(X)) W !!,"Select the number corresponding to the category, or ^ to quit.",!!,"Press <RET> to continue  " R X:DTIME S CNT=CNT-5,X="" G LIST
"RTN","ECBEN2A",16,0)
 S ECHOICE=1,ECC=$P(ECC(X),"^"),ECCN=$P(ECC(X),"^",2),ECONE=2
"RTN","ECBEN2A",17,0)
P ;check for valid procedures
"RTN","ECBEN2A",18,0)
 K ^TMP("ECLKUP",$J)
"RTN","ECBEN2A",19,0)
 D PROS^ECHECK1
"RTN","ECBEN2A",20,0)
 I '$O(^TMP("ECPRO",$J,0)) D  Q:ECOUT
"RTN","ECBEN2A",21,0)
 .W !!,"Within the ",ECLN," location there are no procedures defined",!
"RTN","ECBEN2A",22,0)
 .W "for the DSS Unit ",ECDN,".  Please select another DSS Unit.",!!
"RTN","ECBEN2A",23,0)
 .W "Press <RET> to continue " R X:DTIME S ECOUT=2 Q
"RTN","ECBEN2A",24,0)
 D HDR^ECBEN2U
"RTN","ECBEN2A",25,0)
P1 ;
"RTN","ECBEN2A",26,0)
 I '$D(^TMP("ECPRO",$J,2)) S CNT=1,ECONE=ECONE_"^1" D SETP W !,"Procedure: " D  G V
"RTN","ECBEN2A",27,0)
 . W $S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEN2A",28,0)
 . W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECBEN2A",29,0)
P2 ;ask mul proc
"RTN","ECBEN2A",30,0)
 S ECX="",(ECPCNT,CNT,OK)=0,EC1=1 K ECHOICE,ECSTOP,ECMOD
"RTN","ECBEN2A",31,0)
 S DIR("?")="^D PROS^ECBEN2A"
"RTN","ECBEN2A",32,0)
 S ECX=$$GETPRO^ECDSUTIL
"RTN","ECBEN2A",33,0)
 I +$G(ECX)=-1,(COUNT=0) D MSG^ECBEN2U,KILLV^ECDSUTIL Q
"RTN","ECBEN2A",34,0)
 I +$G(ECX)=-1,COUNT G FILE
"RTN","ECBEN2A",35,0)
 I +$G(ECX)=1 D SRCHTM^ECDSUTIL(ECX)
"RTN","ECBEN2A",36,0)
 S ECPCNT=+$G(ECPCNT)
"RTN","ECBEN2A",37,0)
 I ECPCNT=-1!(ECPCNT=-2) D  G P2
"RTN","ECBEN2A",38,0)
 . D @($S(ECPCNT=-1:"ERRMSG^ECDSUTIL",ECPCNT=-2:"ERRMSG2^ECDSUTIL"))
"RTN","ECBEN2A",39,0)
 . D KILLV^ECDSUTIL
"RTN","ECBEN2A",40,0)
 I ECPCNT>0 D  G V
"RTN","ECBEN2A",41,0)
 . S CNT=ECPCNT
"RTN","ECBEN2A",42,0)
 . D SETP
"RTN","ECBEN2A",43,0)
 . S OK=1,ECONE=ECONE_"^2"
"RTN","ECBEN2A",44,0)
 . D KILLV^ECDSUTIL
"RTN","ECBEN2A",45,0)
 I 'ECPCNT,$D(ECPNAME) S CNT=$$PRLST^ECDSUTIL
"RTN","ECBEN2A",46,0)
 I CNT=-1 D MSG^ECBEN2U,KILLV^ECDSUTIL Q
"RTN","ECBEN2A",47,0)
 I CNT>0 D  G V
"RTN","ECBEN2A",48,0)
 . D SETP
"RTN","ECBEN2A",49,0)
 . S OK=1,ECONE=ECONE_"^2"
"RTN","ECBEN2A",50,0)
 . D KILLV^ECDSUTIL
"RTN","ECBEN2A",51,0)
 Q
"RTN","ECBEN2A",52,0)
 ;
"RTN","ECBEN2A",53,0)
PROS ;
"RTN","ECBEN2A",54,0)
 S X="",CNT=0 K ECHOICE
"RTN","ECBEN2A",55,0)
LISTP D HDR^ECBEN2U S JJ=1 W !,"Available Procedures within "_ECDN_": ",!
"RTN","ECBEN2A",56,0)
 W ?72,"National",!,?5,"Procedure Name",?40,"Synonym",?72,"Number",!
"RTN","ECBEN2A",57,0)
 S EC1=1
"RTN","ECBEN2A",58,0)
 F   S CNT=$O(^TMP("ECPRO",$J,CNT)) Q:'CNT!$D(ECHOICE)  D:($Y+5>IOSL) SELC Q:$D(ECHOICE)  I X="" W !,CNT_".",?5,$E($P(^TMP("ECPRO",$J,CNT),"^",4),1,30),?38,$E($P(^(CNT),"^",3),1,30),?72,$P(^(CNT),"^",5)
"RTN","ECBEN2A",59,0)
 I X="" D
"RTN","ECBEN2A",60,0)
 .W !!?5,"Select by number, CPT or national code, procedure name, or synonym."
"RTN","ECBEN2A",61,0)
 .W !?5,"Synonym must be preceded by the & character  (example:  &TESTSYN).",!
"RTN","ECBEN2A",62,0)
 .W ?2,"** Modifier(s) can be appended to a CPT code (ex: CPT code-mod1,mod2,mod3) **",!
"RTN","ECBEN2A",63,0)
 Q
"RTN","ECBEN2A",64,0)
 ;
"RTN","ECBEN2A",65,0)
V ;vol (and procedure reason),ask for CPT modifier is applicable
"RTN","ECBEN2A",66,0)
 ;
"RTN","ECBEN2A",67,0)
 ;ALB/JAM - Ask CPT Procedure Modifier
"RTN","ECBEN2A",68,0)
 I ECCPT'="" D  I ECOUT Q
"RTN","ECBEN2A",69,0)
 . S ECMODS=$G(ECMODS)
"RTN","ECBEN2A",70,0)
 . S ECMODF=$$ASKMOD^ECUTL(ECCPT,ECMODS,ECDT,.ECMOD,.ECERR)
"RTN","ECBEN2A",71,0)
 . I $G(ECERR) S ECOUT=1
"RTN","ECBEN2A",72,0)
 . K ECMODF,ECMODS
"RTN","ECBEN2A",73,0)
 ;ALB/ESD - Ask Procedure Reason
"RTN","ECBEN2A",74,0)
 I $G(ECP)]"" S ECSCR=+$O(^ECJ("AP",+ECL,+ECD,+ECC,ECP,0))
"RTN","ECBEN2A",75,0)
 K ECPRPTR
"RTN","ECBEN2A",76,0)
 I ECSCR>0,($P($G(^ECJ(ECSCR,"PRO")),"^",5)=1),(+$O(^ECL("AD",ECSCR,0))) D
"RTN","ECBEN2A",77,0)
 . S ECPRPTR=0
"RTN","ECBEN2A",78,0)
 . S DIC="^ECL(",DIC(0)="QEAM"
"RTN","ECBEN2A",79,0)
 . S DIC("A")="Procedure Reason: ",DIC("S")="I $P(^(0),U,2)=ECSCR"
"RTN","ECBEN2A",80,0)
 . D ^DIC K DIC
"RTN","ECBEN2A",81,0)
 . I +Y>0 S ECPRPTR=+Y
"RTN","ECBEN2A",82,0)
 K ECSCR
"RTN","ECBEN2A",83,0)
 ;
"RTN","ECBEN2A",84,0)
VV ;vol
"RTN","ECBEN2A",85,0)
 S:'VOL VOL=1
"RTN","ECBEN2A",86,0)
 W !,"Volume: "_VOL_"// " R X:DTIME I '$T S ECOUT=1 Q
"RTN","ECBEN2A",87,0)
 I X="^" S ECOUT=1 Q
"RTN","ECBEN2A",88,0)
 S:X="" X=VOL I X'?1.2N!'X W !!,"Enter a whole number between 1 and 99." G VV
"RTN","ECBEN2A",89,0)
 S ECV=X
"RTN","ECBEN2A",90,0)
CHKP ;
"RTN","ECBEN2A",91,0)
 W !!,"Category: ",?14,$E(ECCN,1,26),?44,"Ord Section: "_$E(ECON,1,22)
"RTN","ECBEN2A",92,0)
 W !,"Procedure: ",?14,$S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEN2A",93,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")"
"RTN","ECBEN2A",94,0)
 I ECCPT'="" N MOD S MOD="" F  S MOD=$O(ECMOD(ECCPT,MOD)) Q:MOD=""  D
"RTN","ECBEN2A",95,0)
 . W !?1,"Modifier: ",?18,"- ",MOD," ",$E($P(ECMOD(ECCPT,MOD),U),1,55)
"RTN","ECBEN2A",96,0)
 ;
"RTN","ECBEN2A",97,0)
 ;ALB/ESD - Display procedure reason
"RTN","ECBEN2A",98,0)
 I +$G(ECPRPTR) S ECPRSL=$P($G(^ECL(+ECPRPTR,0)),"^") W !,"Procedure Reason: ",$P($G(^ECR(+ECPRSL,0)),"^")
"RTN","ECBEN2A",99,0)
 W !,"Date: ",?14,ECDATE,?44,"Volume: "_ECV
"RTN","ECBEN2A",100,0)
 W !,"Provider:",?14,$E($P(ECU,"^",2),1,24),?44,$E($P(ECU,"^",3),1,34)
"RTN","ECBEN2A",101,0)
 I +ECU2 W !,"Provider #2:",?14,$E($P(ECU2,"^",2),1,24),?44,$E($P(ECU2,"^",3),1,34)
"RTN","ECBEN2A",102,0)
 I +ECU3 W !,"Provider #3:",?14,$E($P(ECU3,"^",2),1,24),?44,$E($P(ECU3,"^",3),1,36)
"RTN","ECBEN2A",103,0)
 W !!!,"Is this information correct ? YES//  " R ECYN:DTIME I '$T!(ECYN="^") D NOTE S ECOUT=2,CNT=0 K ECEC W "Press <RET> to continue " R X:DTIME Q
"RTN","ECBEN2A",104,0)
 S ECYN=$E(ECYN) S:ECYN="" ECYN="Y"
"RTN","ECBEN2A",105,0)
 I "YyNn"'[ECYN W !!,"Enter <RET> if the information listed above is correct and should be",!,"entered for the patients selected.  Enter NO to re-enter the information",!,"for this procedure.",!
"RTN","ECBEN2A",106,0)
 I "YyNn"'[ECYN W !!,"Press <RET> to continue  " R X:DTIME G CHKP
"RTN","ECBEN2A",107,0)
 I "Nn"[ECYN,$P(ECONE,"^")<2,$P(ECONE,"^",2)<2 S ECOUT=2 Q
"RTN","ECBEN2A",108,0)
 I "Nn"[ECYN K ECHOICE,ECCN,ECP,ECPN,ECONE,ECMOD,^TMP("ECPRO",$J) G CHK
"RTN","ECBEN2A",109,0)
 ;
"RTN","ECBEN2A",110,0)
 ;ALB/ESD - File procedure reason in local array ECEC (used in ECBENF)
"RTN","ECBEN2A",111,0)
 S COUNT=COUNT+1,ECEC(COUNT)=ECC_"^"_ECP_"^"_$S(+ECU:+ECU,1:"")_"^"_ECO_"^"_ECV_"^^"_$S(+ECU2:+ECU2,1:"")_"^^"_$S(+ECU3:+ECU3,1:"")_"^^"_ECCPT_$S(+$G(ECPRPTR):"^"_ECPRPTR,1:"")
"RTN","ECBEN2A",112,0)
 ;File CPT modifiers in array ECEC if they exist
"RTN","ECBEN2A",113,0)
 I ECCPT'="",$O(ECMOD(ECCPT,""))'="" D
"RTN","ECBEN2A",114,0)
 . M ECEC(COUNT,"MOD")=ECMOD(ECCPT)
"RTN","ECBEN2A",115,0)
 I $D(^TMP("ECPRO",$J,2)) W !! G P2
"RTN","ECBEN2A",116,0)
FILE ;file proc
"RTN","ECBEN2A",117,0)
 I '$D(ECEC(1)) W !!,"No procedures have been selected for filing.  Please re-enter the ",!,"information for the procedures, or ^ to exit.",!!,"Press <RET> to continue" R X:DTIME S:X="^" ECOUT=1 K ECTEMP,^TMP("ECPRO",$J) G P
"RTN","ECBEN2A",118,0)
 D ^ECBEN2B
"RTN","ECBEN2A",119,0)
END Q
"RTN","ECBEN2A",120,0)
SETP ;set proc
"RTN","ECBEN2A",121,0)
 S ECP=$P(^TMP("ECPRO",$J,CNT),"^"),ECPN=$P(^(CNT),"^",4),SYN=$P(^(CNT),"^",3),NATN=$P(^(CNT),"^",5),VOL=$P(^(CNT),"^",6)
"RTN","ECBEN2A",122,0)
 S ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP)
"RTN","ECBEN2A",123,0)
 S ECPTCD="" I ECCPT'="" D
"RTN","ECBEN2A",124,0)
 . S ECPTCD=$$CPT^ICPTCOD(ECCPT,ECDT) I +ECPTCD>0 S ECPTCD=$P(ECPTCD,U,2)
"RTN","ECBEN2A",125,0)
 W "  "_$S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEN2A",126,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECBEN2A",127,0)
 S EC4=$P(^TMP("ECPRO",$J,CNT),"^",2)
"RTN","ECBEN2A",128,0)
 S ^TMP("ECLKUP",$J,"LAST")=CNT
"RTN","ECBEN2A",129,0)
 Q
"RTN","ECBEN2A",130,0)
SELC ; select category
"RTN","ECBEN2A",131,0)
 W !!,$S(EC1:"Press",1:"Select Number, or press")_" <RET> to continue listing "_$S(EC1:"procedures",1:"categories")_" or '^' to stop:  " R X:DTIME I '$T!(X="^") S (ECSTOP,ECHOICE)=1 Q
"RTN","ECBEN2A",132,0)
 I X="" W @IOF,!,$S(EC1:"Available Procedures",1:"Categories")_" within ",ECDN," : ",! Q
"RTN","ECBEN2A",133,0)
 I 'EC1,'$D(ECC(X)) D MSG1^ECBEN2U Q
"RTN","ECBEN2A",134,0)
 I EC1,'$D(^TMP("ECPRO",$J,X)) D MSG1^ECBEN2U Q
"RTN","ECBEN2A",135,0)
 S ECHOICE=1
"RTN","ECBEN2A",136,0)
 I 'EC1 S ECC=$P(ECC(X),"^"),ECCN=$P(ECC(X),"^",2) Q
"RTN","ECBEN2A",137,0)
 Q
"RTN","ECBEN2A",138,0)
NOTE ;
"RTN","ECBEN2A",139,0)
 W !!,"**NOTE**  No action taken.",!,"You must re-enter the correct patient and procedure data that",!,"has NOT been filed during this session. ",!!
"RTN","ECBEN2A",140,0)
 Q
"RTN","ECBEN2U")
0^25^B35263357
"RTN","ECBEN2U",1,0)
ECBEN2U ;BIR/MAM,JPW-Categories and Procedures Selection ;12 Feb 96
"RTN","ECBEN2U",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,7,10,17,18,23,42,47**;8 May 96
"RTN","ECBEN2U",3,0)
END Q
"RTN","ECBEN2U",4,0)
HDR ;screen header
"RTN","ECBEN2U",5,0)
 W @IOF,!,"Location: ",ECLN
"RTN","ECBEN2U",6,0)
 W !,"DSS Unit: ",$E(ECDN,1,30) I $G(ECCN)]"" W ?48,"Category: ",$E(ECCN,1,20)
"RTN","ECBEN2U",7,0)
 W !,"Ordering Section: ",ECON
"RTN","ECBEN2U",8,0)
 W !,"Procedure Date: ",ECDATE
"RTN","ECBEN2U",9,0)
 W !!,"Provider:",?14,$P(ECU,"^",2),!?16,$P(ECU,"^",3)
"RTN","ECBEN2U",10,0)
 I +ECU2 W !,"Provider #2:",?14,$P(ECU2,"^",2),!?16,$P(ECU2,"^",3)
"RTN","ECBEN2U",11,0)
 I +ECU3 W !,"Provider #3:",?14,$P(ECU3,"^",2),!?16,$P(ECU3,"^",3)
"RTN","ECBEN2U",12,0)
 W !
"RTN","ECBEN2U",13,0)
 Q
"RTN","ECBEN2U",14,0)
MSG W !!,"No procedures entered.  No Action Taken.",!!,"Press <RET> to continue " R X:DTIME S ECOUT=1
"RTN","ECBEN2U",15,0)
 Q
"RTN","ECBEN2U",16,0)
MSG1 ;
"RTN","ECBEN2U",17,0)
 W !!,"Please enter the number that corresponds to the "_$S(OK:"procedure",1:"category")_" from which",!,"you would like to select a procedure.  If you would like to continue",!,"with the list, press <RET>.  Enter ^ to quit."
"RTN","ECBEN2U",18,0)
 S CNT=CNT-5
"RTN","ECBEN2U",19,0)
 Q
"RTN","ECBEN2U",20,0)
HDRP ;hdr batch by proc
"RTN","ECBEN2U",21,0)
 W @IOF,!,"Location: ",ECLN
"RTN","ECBEN2U",22,0)
 I $G(ECCN)]"" W !,"Category: ",ECCN
"RTN","ECBEN2U",23,0)
 W !,"Procedure Date: ",ECDATE
"RTN","ECBEN2U",24,0)
 W !,"Provider:",?14,$E($P(ECU,"^",2),1,24),?42,$E($P(ECU,"^",3),1,36)
"RTN","ECBEN2U",25,0)
 I +ECU2 W !,"Provider #2:",?14,$E($P(ECU2,"^",2),1,24),?42,$E($P(ECU2,"^",3),1,36)
"RTN","ECBEN2U",26,0)
 I +ECU3 W !,"Provider #3:",?14,$E($P(ECU3,"^",2),1,24),?42,$E($P(ECU3,"^",3),1,36)
"RTN","ECBEN2U",27,0)
 W !
"RTN","ECBEN2U",28,0)
 Q
"RTN","ECBEN2U",29,0)
PCEQST ;entry pt for PCE questions
"RTN","ECBEN2U",30,0)
 S (ECDX,ECDXN,ECVST,ECSC,ECAO,ECIR,ECZEC,ECMST,ECHNC)=""
"RTN","ECBEN2U",31,0)
INP ;- Set inpatient/outpatient status
"RTN","ECBEN2U",32,0)
 S ECINP=$G(ECPTSTAT)
"RTN","ECBEN2U",33,0)
 D CLINIC I ECOUT Q
"RTN","ECBEN2U",34,0)
 ;ask dx
"RTN","ECBEN2U",35,0)
 D DIAG^ECUTL2 I ECOUT Q
"RTN","ECBEN2U",36,0)
 I $P(ECPCE,"~",2)="O"&(ECINP'="O") Q
"RTN","ECBEN2U",37,0)
 D VISIT
"RTN","ECBEN2U",38,0)
 Q
"RTN","ECBEN2U",39,0)
CLINIC ;display default clinic
"RTN","ECBEN2U",40,0)
 Q:$P(ECPCE,"~",2)="N"  I $P(ECPCE,"~",2)="O"&(ECINP'="O") Q
"RTN","ECBEN2U",41,0)
 K DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT S DIR(0)="721,26",DIR("A")="Associated Clinic",DIR("?")="An active clinic is required. Enter an active clinic or an ^ to exit"
"RTN","ECBEN2U",42,0)
 I EC4,EC4N'["NO ASSOCIATED CLINIC" S DIR("B")=EC4N
"RTN","ECBEN2U",43,0)
 D ^DIR K DIR
"RTN","ECBEN2U",44,0)
 I Y S EC4=+Y,ECID=$P($G(^SC(+EC4,0)),"^",7)
"RTN","ECBEN2U",45,0)
 I $D(DTOUT)!$D(DUOUT) S ECOUT=1 Q
"RTN","ECBEN2U",46,0)
 I +EC4,'$G(ECOUT) D CLIN I 'ECPCL W !!,"You must enter an active clinic now.",! G CLINIC
"RTN","ECBEN2U",47,0)
 I $D(DTOUT)!$D(DUOUT)!('Y)!(Y<0) W:$P(ECPCE,"~",2)'="N" !!,"Please note that this record cannot be sent to PCE without an active clinic.",!!
"RTN","ECBEN2U",48,0)
 Q
"RTN","ECBEN2U",49,0)
VISIT ;ask visit info
"RTN","ECBEN2U",50,0)
 Q:ECINP="I"
"RTN","ECBEN2U",51,0)
 ;
"RTN","ECBEN2U",52,0)
 ;- Ask classification questions applicable to patient and file in #721
"RTN","ECBEN2U",53,0)
 I $$ASKCLASS^ECUTL1(+$G(ECPT(CNT)),.ECCLFLDS,.ECOUT,ECPCE,ECINP),($O(ECCLFLDS(""))]"") D SETCLASS^ECUTL1(.ECCLFLDS)
"RTN","ECBEN2U",54,0)
 I +$G(ECOUT) Q
"RTN","ECBEN2U",55,0)
 K ECCLFLDS
"RTN","ECBEN2U",56,0)
 Q
"RTN","ECBEN2U",57,0)
PCEE ;checks edited data and sets PCE node for filing
"RTN","ECBEN2U",58,0)
 S ECVST=+$P(EC(0),"^",21) I 'ECVST G PCE
"RTN","ECBEN2U",59,0)
DEL ;delete visit and refresh data to PCE
"RTN","ECBEN2U",60,0)
 K DA,DIE,DR S DA=ECFN,DIE=721,DR="25///@;28///@" D ^DIE K DA,DIE,DR
"RTN","ECBEN2U",61,0)
 ;
"RTN","ECBEN2U",62,0)
 ;* Prepare all EC records with same Visit file entry to resend to PCE
"RTN","ECBEN2U",63,0)
 N ECVAR1 S ECVAR1=$$FNDVST^ECUTL(ECVST,ECFN) K ECVAR1
"RTN","ECBEN2U",64,0)
 ;
"RTN","ECBEN2U",65,0)
 ;- Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECBEN2U",66,0)
 S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST) K ECVST,VALQUIET
"RTN","ECBEN2U",67,0)
PCE ;set data for PCE filing
"RTN","ECBEN2U",68,0)
 Q:$P(ECPCE,"~",2)="N"  I $P(ECPCE,"~",2)="O"&(ECINP'="O") Q
"RTN","ECBEN2U",69,0)
 S ECREAS=""
"RTN","ECBEN2U",70,0)
 ;
"RTN","ECBEN2U",71,0)
 ;- Kill Reason node
"RTN","ECBEN2U",72,0)
 D KILLR
"RTN","ECBEN2U",73,0)
 I EC4 D CLIN^ECPCEU
"RTN","ECBEN2U",74,0)
 I 'EC4 S ECREAS="Clinic missing;"
"RTN","ECBEN2U",75,0)
 I 'ECDX S ECREAS="Diagnosis not entered;"
"RTN","ECBEN2U",76,0)
 I EC4,'ECPCL S ECREAS=ECREAS_"Clinic inactive;"
"RTN","ECBEN2U",77,0)
 I 'ECCPT S ECREAS=ECREAS_"CPT code missing;"
"RTN","ECBEN2U",78,0)
 I ECREAS]"" S ^ECH(ECFN,"R")=ECREAS K ECPCL,ECREAS Q
"RTN","ECBEN2U",79,0)
 I '$D(^ECH(ECFN,0)) Q
"RTN","ECBEN2U",80,0)
 I '$D(^ECH(ECFN,"P")) Q
"RTN","ECBEN2U",81,0)
 S PN=^ECH(ECFN,0),PNP=^ECH(ECFN,"P")
"RTN","ECBEN2U",82,0)
 S PNMOD="" I $D(^ECH(ECFN,"MOD")) D
"RTN","ECBEN2U",83,0)
 . N MOD,MODS S MODS=0 F  S MODS=$O(^ECH(ECFN,"MOD",MODS)) Q:'MODS  D
"RTN","ECBEN2U",84,0)
 . . S MOD=$P($G(^ECH(ECFN,"MOD",MODS,0)),U)
"RTN","ECBEN2U",85,0)
 . . S MOD=$$MOD^ICPTMOD(MOD,"I",$P(PN,U,3)) I +MOD<0 Q
"RTN","ECBEN2U",86,0)
 . . S PNMOD=$S(PNMOD'="":PNMOD_";",1:"")_$P(MOD,U,2)
"RTN","ECBEN2U",87,0)
SET ;set data pieces
"RTN","ECBEN2U",88,0)
 S ECP3=+$P(PN,"^",3) I ECP3'["." K ECP3 D DELNOD Q
"RTN","ECBEN2U",89,0)
 S ECP2=+$P(PN,"^",2) I 'ECP2 K ECP2 D DELNOD Q
"RTN","ECBEN2U",90,0)
 S ECP19=+$P(PN,"^",19) I 'ECP19 K ECP19 D DELNOD Q
"RTN","ECBEN2U",91,0)
 S ECP4=+$P(PN,"^",4) I 'ECP4 K ECP4 D DELNOD Q
"RTN","ECBEN2U",92,0)
 S ECP20=+$P(PN,"^",20) I 'ECP20 K ECP20 D DELNOD Q
"RTN","ECBEN2U",93,0)
 S ECP11=+$P(PN,"^",11) I 'ECP11 K ECP11 D DELNOD Q
"RTN","ECBEN2U",94,0)
 S ECP15=+$P(PN,"^",15)
"RTN","ECBEN2U",95,0)
 S ECP17=+$P(PN,"^",17)
"RTN","ECBEN2U",96,0)
 S ECP10=+$P(PN,"^",10) I 'ECP10 K ECP10 D DELNOD Q
"RTN","ECBEN2U",97,0)
 S ECPP1=+$P(PNP,"^") I 'ECPP1 K ECPP1 D DELNOD Q
"RTN","ECBEN2U",98,0)
 S ECPP2=+$P(PNP,"^",2) I 'ECPP2 K ECPP2 D DELNOD Q
"RTN","ECBEN2U",99,0)
 S ECPP3=$P(PNP,"^",3),ECPP3=$S(ECPP3="Y":1,ECPP3="N":0,1:"")
"RTN","ECBEN2U",100,0)
 S ECPP4=$P(PNP,"^",4),ECPP4=$S(ECPP4="Y":1,ECPP4="N":0,1:"")
"RTN","ECBEN2U",101,0)
 S ECPP5=$P(PNP,"^",5),ECPP5=$S(ECPP5="Y":1,ECPP5="N":0,1:"")
"RTN","ECBEN2U",102,0)
 S ECPP6=$P(PNP,"^",6),ECPP6=$S(ECPP6="Y":1,ECPP6="N":0,1:"")
"RTN","ECBEN2U",103,0)
 S ECPP9=$P(PNP,"^",9),ECPP9=$S(ECPP9="Y":1,ECPP9="N":0,1:"")
"RTN","ECBEN2U",104,0)
 S ECPP10=$P(PNP,"^",10),ECPP10=$S(ECPP10="Y":1,ECPP10="N":0,1:"")
"RTN","ECBEN2U",105,0)
 S ECPP1A="" I $P(PN,"^",9)["EC" S ECPP1A=$G(^EC(725,+$P(PN,"^",9),0)),ECPP1A=$P(ECPP1A,"^",2)_"  "_$P(ECPP1A,"^")
"RTN","ECBEN2U",106,0)
 S ECELIG=$S($G(ECELIG):ECELIG,1:"")
"RTN","ECBEN2U",107,0)
NODE ;sets "PCE" node
"RTN","ECBEN2U",108,0)
 ;d/t~dfn~hosp loc~inst~dss id~prov~prov2~prov3~vol~cpt~dx~ao~rad~env~sc~ecs nat # & name~eligibility~mst~hnc
"RTN","ECBEN2U",109,0)
 S PNODE=ECP3_"~"_ECP2_"~"_ECP19_"~"_ECP4_"~"_ECP20_"~"_ECP11_"~"_ECP15_"~"_ECP17_"~"_ECP10_"~"_ECPP1_"~"_ECPP2_"~"_ECPP3_"~"_ECPP4_"~"_ECPP5_"~"_ECPP6_"~"_ECPP1A_"~"_ECELIG_"~"_ECPP9_"~"_ECPP10
"RTN","ECBEN2U",110,0)
 S ^ECH(ECFN,"PCE")=PNODE
"RTN","ECBEN2U",111,0)
 ;set "PCE1" node
"RTN","ECBEN2U",112,0)
 ;CPT modifier1;CPT modifier 2;CPT modifier 3;...CPT modifier n
"RTN","ECBEN2U",113,0)
 I PNMOD'="" S ^ECH(ECFN,"PCE1")=PNMOD
"RTN","ECBEN2U",114,0)
 S DA=ECFN,DIE=721,DR="31////"_ECDT D ^DIE K DA,DIE,DR
"RTN","ECBEN2U",115,0)
 K ECP2,ECP3,ECP4,ECP10,ECP11,ECP15,ECP17,ECP19,ECP20,ECPP1,ECPP1A,ECPP2,ECPP3,ECPP4,ECPP5,ECPP6,ECPP9,ECPP10,ECREAS,ECPCL,PN,PNP,PNODE,ECELIG,PNMOD
"RTN","ECBEN2U",116,0)
 Q
"RTN","ECBEN2U",117,0)
CLIN ;check for active associated clinic
"RTN","ECBEN2U",118,0)
 S MSG1=1,MSG2=0
"RTN","ECBEN2U",119,0)
 D CLIN^ECPCEU
"RTN","ECBEN2U",120,0)
 I 'ECPCL D
"RTN","ECBEN2U",121,0)
 .W !!,"The clinic ",$S(MSG1:"associated with",1:"you selected for")," this procedure ",$S(MSG2:"has not been entered",1:"is inactive"),"."
"RTN","ECBEN2U",122,0)
 .W !,"Workload data cannot be sent to PCE for this procedure with ",!,$S(MSG2:"a missing",1:"an inactive")," clinic."
"RTN","ECBEN2U",123,0)
 S (MSG1,MSG2)=0
"RTN","ECBEN2U",124,0)
 Q
"RTN","ECBEN2U",125,0)
 ;
"RTN","ECBEN2U",126,0)
 ;
"RTN","ECBEN2U",127,0)
KILLR ;- Kill 'R' (Reason) node
"RTN","ECBEN2U",128,0)
 ;
"RTN","ECBEN2U",129,0)
 K ^ECH(ECFN,"R")
"RTN","ECBEN2U",130,0)
 Q
"RTN","ECBEN2U",131,0)
 ;
"RTN","ECBEN2U",132,0)
 ;
"RTN","ECBEN2U",133,0)
DELNOD ;- Delete 'PCE' and 'Send' nodes
"RTN","ECBEN2U",134,0)
 ;
"RTN","ECBEN2U",135,0)
 N DA,DIE,DR
"RTN","ECBEN2U",136,0)
 ;
"RTN","ECBEN2U",137,0)
 ;- Lock node
"RTN","ECBEN2U",138,0)
 L +^ECH(ECFN):5 Q:'$T
"RTN","ECBEN2U",139,0)
 S DA=ECFN
"RTN","ECBEN2U",140,0)
 S DIE="^ECH("
"RTN","ECBEN2U",141,0)
 S DR="30////@;31////@;37////@"
"RTN","ECBEN2U",142,0)
 ;
"RTN","ECBEN2U",143,0)
 ;- Delete contents
"RTN","ECBEN2U",144,0)
 D ^DIE
"RTN","ECBEN2U",145,0)
 ;
"RTN","ECBEN2U",146,0)
 ;- Unlock node
"RTN","ECBEN2U",147,0)
 L -^ECH(ECFN)
"RTN","ECBEN2U",148,0)
 Q
"RTN","ECBEP1B")
0^24^B46208363
"RTN","ECBEP1B",1,0)
ECBEP1B ;BIR/MAM,JPW-Batch Entry by Procedure (cont'd) ;30 Apr 96
"RTN","ECBEP1B",2,0)
 ;;2.0; EVENT CAPTURE ;**1,4,5,10,13,17,18,42,47**;8 May 96
"RTN","ECBEP1B",3,0)
CHK ; check unit for valid categories
"RTN","ECBEP1B",4,0)
 K ECC,ECCN,ECHOICE,ECEC,ECSTOP
"RTN","ECBEP1B",5,0)
 S (COUNT,EC1)=0
"RTN","ECBEP1B",6,0)
 D CATS^ECHECK1 S ECONE=""
"RTN","ECBEP1B",7,0)
 I '$D(ECC(1)) S ECC=0,ECCN="None",ECONE=0 G P
"RTN","ECBEP1B",8,0)
 I '$D(ECC(2)) S ECC=+ECC(1),ECCN=$P(ECC(1),"^",2),ECONE=1 G P
"RTN","ECBEP1B",9,0)
CATS ; select category
"RTN","ECBEP1B",10,0)
 S X="",CNT=0
"RTN","ECBEP1B",11,0)
LIST D HDRP^ECBEN2U S JJ=0 W !,"Categories within "_ECDN_": ",!
"RTN","ECBEP1B",12,0)
 S EC1=0
"RTN","ECBEP1B",13,0)
 F  S CNT=$O(ECC(CNT)) Q:'CNT!$D(ECHOICE)  D:($Y+5>IOSL) SELC Q:$D(ECHOICE)  I X="" W !,CNT_".",?5,$P(ECC(CNT),"^",2)
"RTN","ECBEP1B",14,0)
 I '$D(ECSTOP),$D(ECHOICE) S ECONE=2 G P
"RTN","ECBEP1B",15,0)
PICK W !!,"Select Number:  " R X:DTIME I '$T!("^"[X) S ECOUT=1 Q
"RTN","ECBEP1B",16,0)
 I X="" S ECOUT=2 Q
"RTN","ECBEP1B",17,0)
 I '$D(ECC(X)) W !!,"Select the number corresponding to the category, or ^ to quit.",!!,"Press <RET> to continue  " R X:DTIME S CNT=CNT-5,X="" G LIST
"RTN","ECBEP1B",18,0)
 S ECHOICE=1,ECC=$P(ECC(X),"^"),ECCN=$P(ECC(X),"^",2),ECONE=2
"RTN","ECBEP1B",19,0)
P ;check for valid procedures
"RTN","ECBEP1B",20,0)
 D PROS^ECHECK1
"RTN","ECBEP1B",21,0)
 I '$O(^TMP("ECPRO",$J,0)) D  Q:ECOUT
"RTN","ECBEP1B",22,0)
 .W !!,"Within the ",ECLN," location there are no procedures defined",!
"RTN","ECBEP1B",23,0)
 .W "for the DSS Unit ",ECDN,".  Please select another DSS Unit.",!!
"RTN","ECBEP1B",24,0)
 .W "Press <RET> to continue " R X:DTIME S ECOUT=2 Q
"RTN","ECBEP1B",25,0)
 D HDRP^ECBEN2U
"RTN","ECBEP1B",26,0)
P1 ;
"RTN","ECBEP1B",27,0)
 I '$D(^TMP("ECPRO",$J,2)) S CNT=1,ECONE=ECONE_"^1" D SETP W !,"Procedure: " D  G CHKP
"RTN","ECBEP1B",28,0)
 . W $S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEP1B",29,0)
 . W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECBEP1B",30,0)
P2 ;ask mul proc
"RTN","ECBEP1B",31,0)
 S ECX="",(ECPCNT,CNT,OK)=0,EC1=1 K ECHOICE,ECSTOP
"RTN","ECBEP1B",32,0)
 S DIR("?")="^D PROS^ECBEP1B"
"RTN","ECBEP1B",33,0)
 S ECX=$$GETPRO^ECDSUTIL
"RTN","ECBEP1B",34,0)
 I +$G(ECX)=-1,(COUNT=0) S ECOUT=2 D KILLV^ECDSUTIL Q
"RTN","ECBEP1B",35,0)
 I +$G(ECX)=-1,COUNT G FILE
"RTN","ECBEP1B",36,0)
 I +$G(ECX)=1 D SRCHTM^ECDSUTIL(ECX)
"RTN","ECBEP1B",37,0)
 S ECPCNT=+$G(ECPCNT)
"RTN","ECBEP1B",38,0)
 I ECPCNT=-1!(ECPCNT=-2) D  G P2
"RTN","ECBEP1B",39,0)
 .; Don't display spacebar/return error msg since only 1 procedure
"RTN","ECBEP1B",40,0)
 . D ERRMSG^ECDSUTIL
"RTN","ECBEP1B",41,0)
 . D KILLV^ECDSUTIL
"RTN","ECBEP1B",42,0)
 I ECPCNT>0 D  G CHKP
"RTN","ECBEP1B",43,0)
 . S CNT=ECPCNT
"RTN","ECBEP1B",44,0)
 . D SETP
"RTN","ECBEP1B",45,0)
 . S OK=1,ECONE=ECONE_"^2"
"RTN","ECBEP1B",46,0)
 . D KILLV^ECDSUTIL
"RTN","ECBEP1B",47,0)
 I 'ECPCNT,$D(ECPNAME) S CNT=$$PRLST^ECDSUTIL
"RTN","ECBEP1B",48,0)
 I CNT=-1 D MSG^ECBEN2U,KILLV^ECDSUTIL Q
"RTN","ECBEP1B",49,0)
 I CNT>0 D  G CHKP
"RTN","ECBEP1B",50,0)
 . D SETP
"RTN","ECBEP1B",51,0)
 . S OK=1,ECONE=ECONE_"^2"
"RTN","ECBEP1B",52,0)
 . D KILLV^ECDSUTIL
"RTN","ECBEP1B",53,0)
 Q
"RTN","ECBEP1B",54,0)
 ;
"RTN","ECBEP1B",55,0)
PROS ;
"RTN","ECBEP1B",56,0)
 S X="",CNT=0 K ECHOICE
"RTN","ECBEP1B",57,0)
LISTP D HDRP^ECBEN2U S JJ=1 W !,"Available Procedures within "_ECDN_": ",!
"RTN","ECBEP1B",58,0)
 W ?72,"National",!,?5,"Procedure Name",?40,"Synonym",?72,"Number",!
"RTN","ECBEP1B",59,0)
 S EC1=1
"RTN","ECBEP1B",60,0)
 F   S CNT=$O(^TMP("ECPRO",$J,CNT)) Q:'CNT!$D(ECHOICE)  D:($Y+5>IOSL) SELC Q:$D(ECHOICE)  I X="" W !,CNT_".",?5,$E($P(^TMP("ECPRO",$J,CNT),"^",4),1,30),?38,$E($P(^(CNT),"^",3),1,30),?72,$P(^(CNT),"^",5)
"RTN","ECBEP1B",61,0)
 I X="" D
"RTN","ECBEP1B",62,0)
 .W !!?5,"Select by number, CPT or national code, procedure name, or synonym.",!?5,"Synonym must be preceded by the & character  (example:  &TESTSYN).",!
"RTN","ECBEP1B",63,0)
 .W ?2,"** Modifier(s) can be appended to a CPT code (ex: CPT code-mod1,mod2,mod3) **",!
"RTN","ECBEP1B",64,0)
 Q
"RTN","ECBEP1B",65,0)
 ;
"RTN","ECBEP1B",66,0)
CHKP ;
"RTN","ECBEP1B",67,0)
 ;Ask CPT procedure modifiers
"RTN","ECBEP1B",68,0)
 I ECCPT'="" D  K ECMODF,ECMODS
"RTN","ECBEP1B",69,0)
 . S ECMODS=$G(ECMODS)
"RTN","ECBEP1B",70,0)
 . S ECMODF=$$ASKMOD^ECUTL(ECCPT,ECMODS,ECDT,.ECMOD,.ECERR)
"RTN","ECBEP1B",71,0)
 I $G(ECERR) S ECOUT=2 K ECERR,ECMOD D KILLV^ECDSUTIL Q
"RTN","ECBEP1B",72,0)
 ;
"RTN","ECBEP1B",73,0)
 ;- Ask procedure reason
"RTN","ECBEP1B",74,0)
 I $G(ECP)]"" S ECSCR=+$O(^ECJ("AP",+ECL,+ECD,+ECC,ECP,0))
"RTN","ECBEP1B",75,0)
 K ECPRPTR
"RTN","ECBEP1B",76,0)
 I ECSCR>0,($P($G(^ECJ(ECSCR,"PRO")),"^",5)=1),(+$O(^ECL("AD",ECSCR,0))) D
"RTN","ECBEP1B",77,0)
 . S ECPRPTR=0
"RTN","ECBEP1B",78,0)
 . S DIC="^ECL(",DIC(0)="QEAM"
"RTN","ECBEP1B",79,0)
 . S DIC("A")="Procedure Reason: ",DIC("S")="I $P(^(0),U,2)=ECSCR"
"RTN","ECBEP1B",80,0)
 . D ^DIC K DIC
"RTN","ECBEP1B",81,0)
 . I +Y>0 S ECPRPTR=+Y
"RTN","ECBEP1B",82,0)
 K ECSCR W !
"RTN","ECBEP1B",83,0)
 ;
"RTN","ECBEP1B",84,0)
 I $G(ECCN)]"" W !,"Category: ",ECCN
"RTN","ECBEP1B",85,0)
 W !,"Procedure: ",$S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEP1B",86,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")"
"RTN","ECBEP1B",87,0)
 ;
"RTN","ECBEP1B",88,0)
 ;- Display CPT procedure Modifiers
"RTN","ECBEP1B",89,0)
 I ECCPT'="" N MOD S MOD="" F  S MOD=$O(ECMOD(ECCPT,MOD)) Q:MOD=""  D
"RTN","ECBEP1B",90,0)
 . W !?1,"Modifier: ","    - ",MOD," ",$E($P(ECMOD(ECCPT,MOD),U),1,55)
"RTN","ECBEP1B",91,0)
 ;- Display procedure reason
"RTN","ECBEP1B",92,0)
 I +$G(ECPRPTR) S ECPRSL=$P($G(^ECL(+ECPRPTR,0)),"^") W !,"Procedure Reason: ",$P($G(^ECR(+ECPRSL,0)),"^")
"RTN","ECBEP1B",93,0)
 W !,"Provider:",?14,$E($P(ECU,"^",2),1,24),?42,$E($P(ECU,"^",3),1,36)
"RTN","ECBEP1B",94,0)
 I +ECU2 W !,"Provider #2:",?14,$E($P(ECU2,"^",2),1,24),?42,$E($P(ECU2,"^",3),1,36)
"RTN","ECBEP1B",95,0)
 I +ECU3 W !,"Provider #3:",?14,$E($P(ECU3,"^",2),1,24),?42,$E($P(ECU3,"^",3),1,36)
"RTN","ECBEP1B",96,0)
 W !
"RTN","ECBEP1B",97,0)
 W !!,"Is this information correct ?  YES//  " R ECYN:DTIME I '$T!(ECYN="^") Q
"RTN","ECBEP1B",98,0)
 S ECYN=$E(ECYN) S:ECYN="" ECYN="Y"
"RTN","ECBEP1B",99,0)
 I "YyNn"'[ECYN W !!,"Enter <RET> if the information listed above is correct and should be",!,"entered for the patients selected.  Enter NO to re-enter the information",!,"for this procedure.",!
"RTN","ECBEP1B",100,0)
 I "YyNn"'[ECYN W !!,"Press <RET> to continue  " R X:DTIME G CHKP
"RTN","ECBEP1B",101,0)
 I "Nn"[ECYN,$P(ECONE,"^")<2,$P(ECONE,"^",2)<2 S ECOUT=2 Q
"RTN","ECBEP1B",102,0)
 I "Nn"[ECYN K ECHOICE,ECCN,ECP,ECPN,ECMOD,ECONE,^TMP("ECPRO",$J) G CHK
"RTN","ECBEP1B",103,0)
 ;
"RTN","ECBEP1B",104,0)
 ;- File procedure reason in local array ECEC (used in ECBEPF)
"RTN","ECBEP1B",105,0)
 S COUNT=COUNT+1,ECEC(COUNT)=ECC_"^"_ECP_"^"_$S(+ECU:+ECU,1:"")_"^^"_$S(+ECU2:+ECU2,1:"")_"^^"_$S(+ECU3:+ECU3,1:"")_"^^"_ECCPT_"^"_EC4_"^"_ECID_$S(+$G(ECPRPTR):"^"_ECPRPTR,1:"")
"RTN","ECBEP1B",106,0)
 ;- File CPT modifiers in local array ECEC
"RTN","ECBEP1B",107,0)
 I ECCPT'="",$O(ECMOD(ECCPT,""))'="" D
"RTN","ECBEP1B",108,0)
 . M ECEC(COUNT,"MOD")=ECMOD(ECCPT)
"RTN","ECBEP1B",109,0)
FILE ;file proc
"RTN","ECBEP1B",110,0)
 I '$D(ECEC(1)) W !!,"No procedures have been selected for filing.  Please re-enter the ",!,"information for the procedures, or ^ to exit.",!!,"Press <RET> to continue" R X:DTIME S:X="^" ECOUT=1 K ECTEMP,^TMP("ECPRO",$J) G P
"RTN","ECBEP1B",111,0)
 D ^ECBEP2A Q:ECOUT  K ECA,ECCN,ECEC,ECHOICE,ECJLP,ECP,ECPN,ECPT,ECO,ECON,ECV,NATN,NODE,SYN,^TMP("ECPRO",$J),ECDX,ECDXN,ECINP,ECCPT,ECSC,ECIR,ECZEC,ECAO,ECVST,ECPTSTAT,ECMST,ECHNC,ECMOD,ECPTCD G CHK
"RTN","ECBEP1B",112,0)
END Q
"RTN","ECBEP1B",113,0)
SETP ;set proc
"RTN","ECBEP1B",114,0)
 S ECP=$P(^TMP("ECPRO",$J,CNT),"^"),ECPN=$P(^(CNT),"^",4),SYN=$P(^(CNT),"^",3),NATN=$P(^(CNT),"^",5),VOL=$P(^(CNT),"^",6)
"RTN","ECBEP1B",115,0)
 S ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP)
"RTN","ECBEP1B",116,0)
 S ECPTCD="" I ECCPT'="" D
"RTN","ECBEP1B",117,0)
 . S ECPTCD=$$CPT^ICPTCOD(ECCPT,ECDT) I +ECPTCD>0 S ECPTCD=$P(ECPTCD,U,2)
"RTN","ECBEP1B",118,0)
 W "  "_$S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEP1B",119,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECBEP1B",120,0)
 S EC4=$P(^TMP("ECPRO",$J,CNT),"^",2),EC4=$P($G(^ECJ(+EC4,"PRO")),"^",4)
"RTN","ECBEP1B",121,0)
 S EC4N=$S($P($G(^SC(+EC4,0)),"^")]"":$P(^(0),"^"),1:"NO ASSOCIATED CLINIC"),ECID=$P($G(^SC(+EC4,0)),"^",7)
"RTN","ECBEP1B",122,0)
 Q
"RTN","ECBEP1B",123,0)
SELC ; select category
"RTN","ECBEP1B",124,0)
 W !!,$S(EC1:"Press",1:"Select Number, or press")_" <RET> to continue listing "_$S(EC1:"procedures",1:"categories")_" or '^' to stop:  " R X:DTIME I '$T!(X="^") S (ECSTOP,ECHOICE)=1 Q
"RTN","ECBEP1B",125,0)
 I X="" W @IOF,!,$S(EC1:"Available Procedures",1:"Categories")_" within ",ECDN," : ",! Q
"RTN","ECBEP1B",126,0)
 I 'EC1,'$D(ECC(X)) D MSG1^ECBEN2U S ECOUT=2 Q
"RTN","ECBEP1B",127,0)
 I EC1,'$D(^TMP("ECPRO",$J,X)) D MSG1^ECBEN2U S ECOUT=2 Q
"RTN","ECBEP1B",128,0)
 S ECHOICE=1
"RTN","ECBEP1B",129,0)
 I 'EC1 S ECC=$P(ECC(X),"^"),ECCN=$P(ECC(X),"^",2) Q
"RTN","ECBEP1B",130,0)
 Q
"RTN","ECED1")
0^23^B36373005
"RTN","ECED1",1,0)
ECED1 ;BIR/MAM,JPW-Event Capture Data Entry (cont'd) ;6 Mar 96
"RTN","ECED1",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,8,10,18,23,41,47**;8 May 96
"RTN","ECED1",3,0)
CAT ;cat & set unit info
"RTN","ECED1",4,0)
 W !!,"Location: "_ECLN,!,"DSS Unit: "_ECDN,!
"RTN","ECED1",5,0)
 D CATS^ECHECK1
"RTN","ECED1",6,0)
 S NODE=$G(^ECD(ECD,0)),ECS=+$P(NODE,"^",2),ECM=+$P(NODE,"^",3),ECDDT=$P(NODE,"^",12),ECDDT=$S(ECDDT="T":"NOW",ECDDT="N":"NOW",1:"")
"RTN","ECED1",7,0)
 S ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN"),ECMN=$S($P($G(^ECC(723,ECM,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECED1",8,0)
 S ECPCE="U~"_$S($P(NODE,"^",14)]"":$P(NODE,"^",14),1:"N")
"RTN","ECED1",9,0)
PAT ;get pat
"RTN","ECED1",10,0)
 S (ECJLP,ECOUT)=0
"RTN","ECED1",11,0)
 K EC,^TMP("ECLKUP",$J) S CNT=0 K DIC S DIC=2,DIC(0)="QEAMZ",DIC("A")="Select Patient: " D ^DIC K DIC Q:Y<0  S ECDFN=+Y,ECPAT=$P(Y,"^",2),ECOUT=0
"RTN","ECED1",12,0)
 N ECUP S DFN=ECDFN D 2^VADPT I +VADM(6) D  I $G(ECUP)="^" G PAT
"RTN","ECED1",13,0)
 . W !!,"WARNING ",VADM(7),!!
"RTN","ECED1",14,0)
 . R "Press Return to Continue or ^ to Deselect: ",ECUP:DTIME
"RTN","ECED1",15,0)
ASKD ;get proc date
"RTN","ECED1",16,0)
 D DATE Q:ECOUT
"RTN","ECED1",17,0)
 ;
"RTN","ECED1",18,0)
 ;- Determine inpatient/outpatient status
"RTN","ECED1",19,0)
 S ECPTSTAT=$$INOUTPT^ECUTL0(+$G(ECDFN),+$G(ECDT))
"RTN","ECED1",20,0)
 I ECPTSTAT="" D INOUTERR^ECUTL0 Q
"RTN","ECED1",21,0)
 ;
"RTN","ECED1",22,0)
 ;- Display inpatient/outpatient status message
"RTN","ECED1",23,0)
 D DSPSTAT^ECUTL0(ECPTSTAT) S ECIOFLG=1
"RTN","ECED1",24,0)
 ;
"RTN","ECED1",25,0)
PR S X=$E(ECDT,1,7)-.0001 F I=0:0 S X=$O(^ECH("ADT",ECL,ECDFN,ECD,X)) Q:X>ECDT1!('X)  S ECFN=0 F I=0:0 S ECFN=$O(^ECH("ADT",ECL,ECDFN,ECD,X,ECFN)) Q:'ECFN  S CNT=CNT+1,EC(CNT)=ECFN D SET
"RTN","ECED1",26,0)
 S CNT=0 I '$O(EC(0))&ECOUT=99 S ECOUT=0 Q
"RTN","ECED1",27,0)
PROS ; display procedures
"RTN","ECED1",28,0)
 I ECOUT K ECPAT D HDR W ! G PAT
"RTN","ECED1",29,0)
 I '$D(EC(1)) S ECJLP=1 D DATE Q:ECOUT  D NEW^ECED2 S CNT=0 K EC G PR
"RTN","ECED1",30,0)
 ;
"RTN","ECED1",31,0)
 ;- Prevents inpat/outpat status from scrolling off screen before heading
"RTN","ECED1",32,0)
 ;  clears screen and prints at top
"RTN","ECED1",33,0)
 I $D(EC(1)),(+$G(ECIOFLG)) D MSG1^ECMUTL1 K ECIOFLG
"RTN","ECED1",34,0)
 D HDR K ECHOICE F I=0:0 S CNT=$O(EC(CNT)) Q:'CNT!($D(ECHOICE))  S CNT1=CNT D LIST
"RTN","ECED1",35,0)
 I ECOUT K ECPAT D HDR W ! G PAT
"RTN","ECED1",36,0)
 I $D(ECHOICE),ECHOICE S EC=ECHOICE D EDIT^ECED3 S CNT=0 K EC G PR
"RTN","ECED1",37,0)
 I $D(ECHOICE),ECHOICE="N" S ECJLP=1 D DATE Q:ECOUT  D NEW^ECED2 S CNT=0 K EC G PR
"RTN","ECED1",38,0)
SELP W !!!,"Select a number to edit/delete, or enter N to create a New Procedure:  " R X:DTIME I '$T!("^"[X) K ECPAT D HDR G PAT
"RTN","ECED1",39,0)
 I "Nn"[X S ECJLP=1 D DATE Q:ECOUT  D NEW^ECED2 S CNT=0 K EC G PR
"RTN","ECED1",40,0)
 I '$D(EC(X)) W !!,"Enter N to create a new procedure, or the number corresponding to the",!,"procedure that you want to edit or delete.  Enter ^ quit.",!!,"Press <RET> to continue  " R X:DTIME S CNT=CNT1-5 G PROS
"RTN","ECED1",41,0)
 S EC=X D EDIT^ECED3 S CNT=0 K EC G PR
"RTN","ECED1",42,0)
 ;
"RTN","ECED1",43,0)
LIST ; list procedures
"RTN","ECED1",44,0)
 I $Y+8>IOSL D SEL Q:$D(ECHOICE)!(X="")
"RTN","ECED1",45,0)
 S ECDTM=$$FMTE^XLFDT($P(EC(CNT),"^",10),2)
"RTN","ECED1",46,0)
 W !!,CNT_".",?5,"Category : "_$E($P(EC(CNT),"^",2),1,23),?41,"Pr. Date: ",ECDTM,?67,$P(EC(CNT),"^",4),!,?5,"Procedure: "_$E($P(EC(CNT),"^",3),1,50)_" ("_$P(EC(CNT),"^",6)_")",?67,$E($P(EC(CNT),"^",5),1,13)
"RTN","ECED1",47,0)
 I $O(EC(CNT,"MOD",""))'="" D
"RTN","ECED1",48,0)
 . N MOD S MOD="" F  S MOD=$O(EC(CNT,"MOD",MOD)) Q:MOD=""  D
"RTN","ECED1",49,0)
 . . W !?6,"Modifier: ","    - ",MOD," ",$E(EC(CNT,"MOD",MOD),1,55)
"RTN","ECED1",50,0)
 I $P(EC(CNT),"^",9)]"" W !?5,"Procedure Reason: "_$P(EC(CNT),"^",9)
"RTN","ECED1",51,0)
 Q
"RTN","ECED1",52,0)
HDR ; heading
"RTN","ECED1",53,0)
 W @IOF,!,"Location: "_ECLN,?40,"Service: "_ECSN,!,"Section: "_ECMN,?40,"DSS Unit: "_ECDN I $D(ECPAT) W !,"Patient: "_ECPAT,?40,"Procedure Date: "_ECDATE
"RTN","ECED1",54,0)
 Q
"RTN","ECED1",55,0)
SEL ; select procedure
"RTN","ECED1",56,0)
 W !!!,"Select a number to edit, enter N for a New Procedure, or press <RET> to ",!,"continue listing procedures:  " R X:DTIME I '$T!(X="^") S (ECOUT,ECHOICE)=1 Q
"RTN","ECED1",57,0)
 I X="" S CNT=CNT-1 D HDR Q
"RTN","ECED1",58,0)
 I "Na"[X S ECHOICE="N" Q
"RTN","ECED1",59,0)
 I $D(EC(X)) S ECHOICE=X Q
"RTN","ECED1",60,0)
 W !!,"To create a new procedure, type N.  If you would like to edit or delete",!,"one of the procedures listed, enter the corresponding number.  Press <RET>",!,"to continue the list, or ^ to quit."
"RTN","ECED1",61,0)
 W !!,"Press <RET> to continue  " R X:DTIME S X="",CNT=CNT-6 D HDR
"RTN","ECED1",62,0)
 Q
"RTN","ECED1",63,0)
SET ; set EC array
"RTN","ECED1",64,0)
 N ECPXD
"RTN","ECED1",65,0)
 I '$D(^ECH(EC(CNT),0)) W !!,"Event Capture patient data missing.",!! S ECOUT=1 Q
"RTN","ECED1",66,0)
 S ECCH=$G(^ECH(EC(CNT),0)),(ECPSYN,ECPTCD)="",ECDTM=$P(ECCH,"^",3)
"RTN","ECED1",67,0)
 S ECTEMP=+$P(ECCH,"^",8),ECCN=$S($P($G(^EC(726,ECTEMP,0)),"^")]"":$P(^(0),"^"),1:"None")
"RTN","ECED1",68,0)
 S ECTEMP=$P(ECCH,"^",9),ECTEST="^"_$P(ECTEMP,";",2),ECTEMP=+ECTEMP
"RTN","ECED1",69,0)
 I $P(ECCH,"^",4)'="",$P(ECCH,"^",7)'="",$P(ECCH,"^",8)'="",$P(ECCH,"^",9)'="" D
"RTN","ECED1",70,0)
 . S ECPSY=+$O(^ECJ("AP",$P(ECCH,"^",4),$P(ECCH,"^",7),$P(ECCH,"^",8),$P(ECCH,"^",9),""))
"RTN","ECED1",71,0)
 . I ECPSY'="" S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECED1",72,0)
 S ECCPT=$S(ECTEST["EC":$P($G(^EC(725,ECTEMP,0)),"^",5),1:ECTEMP)
"RTN","ECED1",73,0)
 S (ECPTCD,ECPXD)="" I ECCPT'="" D
"RTN","ECED1",74,0)
 . S ECPXD=$$CPT^ICPTCOD(ECCPT,ECDTM) I +ECPXD>0 S ECPTCD=$P(ECPXD,U,2)
"RTN","ECED1",75,0)
 I $D(^ECH(EC(CNT),"MOD")) D  K MOD,ARR,ECMODF
"RTN","ECED1",76,0)
 . K ARR,ECMOD S ECMODF=$$MOD^ECUTL(EC(CNT),"E",.ARR) I 'ECMODF Q
"RTN","ECED1",77,0)
 . S MOD="" F  S MOD=$O(ARR(MOD)) Q:MOD=""  S ECMOD(MOD)=$P(ARR(MOD),U,3)
"RTN","ECED1",78,0)
 I ECTEST["EC" D  G SET1
"RTN","ECED1",79,0)
 . S ECPN=$S($P($G(^EC(725,ECTEMP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECED1",80,0)
 I ECTEST["ICPT" D  G SET1
"RTN","ECED1",81,0)
 . S ECPN=$S($P(ECPXD,U,3)]"":$P(ECPXD,U,3),1:"UNKNOWN")
"RTN","ECED1",82,0)
 S ECPN="UNKNOWN"
"RTN","ECED1",83,0)
SET1 S ECPN=ECPTCD_" "_ECPN_$S(ECPSYN="":"",1:"  ["_ECPSYN_"]")
"RTN","ECED1",84,0)
 S ECTEMP=+$P(ECCH,"^",12)
"RTN","ECED1",85,0)
 S ECON=$S($P($G(^ECC(723,ECTEMP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECED1",86,0)
 S ECV=$P(ECCH,"^",10),EC4=$P(ECCH,"^",19),ECID=$P(ECCH,"^",20)
"RTN","ECED1",87,0)
 S EC4N=$S($P($G(^SC(+EC4,0)),"^")]"":$P(^(0),"^"),1:"")
"RTN","ECED1",88,0)
 S ECUN1=+$P(ECCH,"^",11),ECUN=$S($P($G(^VA(200,ECUN1,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECED1",89,0)
 ;
"RTN","ECED1",90,0)
 ;- Check for and display procedure reason
"RTN","ECED1",91,0)
 I +$P(ECCH,"^",23) S ECPRS=+$P(ECCH,"^",23),ECPRSL=$P($G(^ECL(ECPRS,0)),"^"),ECPRSN=$P($G(^ECR(ECPRSL,0)),"^")
"RTN","ECED1",92,0)
 S EC(CNT)=EC(CNT)_"^"_ECCN_"^"_ECPN_"^"_$S(ECUN[",":$P(ECUN,",")_", "_$E($P(ECUN,",",2)),1:ECUN)_"^"_$E(ECON,1,15)_"^"_ECV_"^"_EC4_"^"_ECID_$S($G(ECPRSN)]"":"^"_ECPRSN,1:"")
"RTN","ECED1",93,0)
 S $P(EC(CNT),"^",10)=ECDTM
"RTN","ECED1",94,0)
 I $O(ECMOD(""))'="" D
"RTN","ECED1",95,0)
 . M EC(CNT,"MOD")=ECMOD
"RTN","ECED1",96,0)
 K ECPRS,ECPRSN,ECPRSL,ECMOD
"RTN","ECED1",97,0)
 Q
"RTN","ECED1",98,0)
DATE ;ask date
"RTN","ECED1",99,0)
 I ECJLP,$D(ECDT),$P(ECDT,".",2)]"" Q
"RTN","ECED1",100,0)
 I ECJLP,$D(ECDT),$P(ECDT,".",2)']"" W !!,"You must enter both DATE and TIME to create a new procedure record.",!!
"RTN","ECED1",101,0)
 ;
"RTN","ECED1",102,0)
 ;- Prevent future dates from being entered
"RTN","ECED1",103,0)
 K %DT S %DT="EAXR",%DT("A")="Enter Date and Time of Procedure: ",%DT(0)="-NOW" S:ECDDT]"" %DT("B")=ECDDT D ^%DT K %DT I Y<0 S ECOUT=1 Q
"RTN","ECED1",104,0)
 S ECDT=+Y,ECDT1=$E(Y,1,7)+.9999,ECDATE=$$FMTE^XLFDT(ECDT)
"RTN","ECED1",105,0)
 Q
"RTN","ECED2")
0^22^B19481574
"RTN","ECED2",1,0)
ECED2 ;BIR/MAM,JPW-Enter Event Capture Data (cont'd) ;7 May 96
"RTN","ECED2",2,0)
 ;;2.0; EVENT CAPTURE ;**1,4,5,13,18,47**;8 May 96
"RTN","ECED2",3,0)
NEW ; create new procedure
"RTN","ECED2",4,0)
 S (EC1,OK)=0 K ECHOICE,ECSTOP
"RTN","ECED2",5,0)
 I '$D(ECC(1)) S ECC=+$P(ECC(0),"^"),ECCN="None" G P
"RTN","ECED2",6,0)
 I '$D(ECC(2)) S ECC=+ECC(1),ECCN=$P(ECC(1),"^",2) G P
"RTN","ECED2",7,0)
 S X="",CNT=0
"RTN","ECED2",8,0)
LIST W:$D(EC(1))!($Y+5>IOSL) @IOF W !,"Categories within "_ECDN_": ",! S EC1=0 F I=0:0 S CNT=$O(ECC(CNT)) Q:'CNT!$D(ECHOICE)  D:($Y+5>IOSL) SELC Q:$D(ECHOICE)  I X="" W !,CNT_". ",?5,$P(ECC(CNT),"^",2)
"RTN","ECED2",9,0)
 I '$D(ECSTOP),$D(ECHOICE) G P
"RTN","ECED2",10,0)
PICK W !!,"Select Number:  " R X:DTIME I '$T!("^"[X) S ECOUT=1 Q
"RTN","ECED2",11,0)
 I '$D(ECC(X)) W !!,"Select the number corresponding to the category, or ^ to quit.",!!,"Press <RET> to continue  ",! R X:DTIME K ECHOICE,ECSTOP S CNT=CNT-5,X="" G LIST
"RTN","ECED2",12,0)
 S ECC=+$P(ECC(X),"^"),ECCN=$P(ECC(X),"^",2)
"RTN","ECED2",13,0)
 W !,"Category: "_ECCN,!
"RTN","ECED2",14,0)
P ; get procedure
"RTN","ECED2",15,0)
 I '$D(ECC) W !!,"Category not defined.",! D MSG^ECEDU Q
"RTN","ECED2",16,0)
 D PROS^ECHECK1
"RTN","ECED2",17,0)
 I '$O(^TMP("ECPRO",$J,0)) D  Q:ECOUT
"RTN","ECED2",18,0)
 .W !!,"Within the ",ECLN," location there are no procedures defined",!
"RTN","ECED2",19,0)
 .W "for the DSS Unit ",ECDN,".  Please select another DSS Unit.",!!
"RTN","ECED2",20,0)
 .W "Press <RET> to continue " R X:DTIME S ECOUT=2 Q
"RTN","ECED2",21,0)
P1 ;
"RTN","ECED2",22,0)
 I '$D(^TMP("ECPRO",$J,2)) S CNT=1 D SETP W !,"Procedure: " D  G FILE
"RTN","ECED2",23,0)
 . W $S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECED2",24,0)
 . W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECED2",25,0)
P2 ;ask mul proc
"RTN","ECED2",26,0)
 S EC1=1
"RTN","ECED2",27,0)
 S ECX="",(ECPCNT,CNT,OK)=0 K ECHOICE,ECSTOP
"RTN","ECED2",28,0)
 ;
"RTN","ECED2",29,0)
 ;New code for procedure entry/lookup
"RTN","ECED2",30,0)
 S DIR("?")="^D PROS^ECED2"
"RTN","ECED2",31,0)
 S ECX=$$GETPRO^ECDSUTIL
"RTN","ECED2",32,0)
 I +$G(ECX)=-1 D MSG^ECEDU,KILLV^ECDSUTIL Q
"RTN","ECED2",33,0)
 I +$G(ECX)=1 D SRCHTM^ECDSUTIL(ECX)
"RTN","ECED2",34,0)
 S ECPCNT=+$G(ECPCNT)
"RTN","ECED2",35,0)
 I ECPCNT=-1!(ECPCNT=-2) D  G P2
"RTN","ECED2",36,0)
 . D @($S(ECPCNT=-1:"ERRMSG^ECDSUTIL",ECPCNT=-2:"ERRMSG2^ECDSUTIL"))
"RTN","ECED2",37,0)
 . D KILLV^ECDSUTIL
"RTN","ECED2",38,0)
 I ECPCNT>0 D  G FILE
"RTN","ECED2",39,0)
 . S CNT=ECPCNT
"RTN","ECED2",40,0)
 . D SETP
"RTN","ECED2",41,0)
 . S OK=1
"RTN","ECED2",42,0)
 . D KILLV^ECDSUTIL
"RTN","ECED2",43,0)
 I 'ECPCNT,$D(ECPNAME) S CNT=$$PRLST^ECDSUTIL
"RTN","ECED2",44,0)
 I CNT=-1 D MSG^ECEDU,KILLV^ECDSUTIL Q
"RTN","ECED2",45,0)
 I CNT>0 D  G FILE
"RTN","ECED2",46,0)
 . D SETP
"RTN","ECED2",47,0)
 . S OK=1
"RTN","ECED2",48,0)
 . D KILLV^ECDSUTIL
"RTN","ECED2",49,0)
 Q
"RTN","ECED2",50,0)
 ;
"RTN","ECED2",51,0)
PROS ;
"RTN","ECED2",52,0)
LISTP N X,CNT
"RTN","ECED2",53,0)
 S X="",CNT=0 K ECHOICE,ECSTOP
"RTN","ECED2",54,0)
 D HDR1^ECEDU S JJ=1 W !,"Available Procedures within "_ECDN_": ",!
"RTN","ECED2",55,0)
 W ?72,"National",!,?5,"Procedure Name",?40,"Synonym",?72,"Number",!
"RTN","ECED2",56,0)
 S EC1=1
"RTN","ECED2",57,0)
 F   S CNT=$O(^TMP("ECPRO",$J,CNT)) Q:'CNT!$D(ECHOICE)  D:($Y+5>IOSL) SELC Q:$D(ECHOICE)  I X="" W !,CNT_".",?5,$E($P(^TMP("ECPRO",$J,CNT),"^",4),1,30),?38,$E($P(^(CNT),"^",3),1,30),?72,$P(^(CNT),"^",5)
"RTN","ECED2",58,0)
 I X="" D
"RTN","ECED2",59,0)
 .W !!?5,"Select by number, CPT or national code, procedure name, or synonym."
"RTN","ECED2",60,0)
 .W !?5,"Synonym must be preceded by the & character  (example:  &TESTSYN).",!
"RTN","ECED2",61,0)
 .W ?2,"** Modifier(s) can be appended to a CPT code (ex: CPT code-mod1,mod2,mod3) **",!
"RTN","ECED2",62,0)
 Q
"RTN","ECED2",63,0)
 ;
"RTN","ECED2",64,0)
FILE ;file pro
"RTN","ECED2",65,0)
 D HDR^ECEDU
"RTN","ECED2",66,0)
 D ^ECEDF
"RTN","ECED2",67,0)
 Q
"RTN","ECED2",68,0)
SETP ;set proc info
"RTN","ECED2",69,0)
 S ECJJ=0
"RTN","ECED2",70,0)
 S ECP=$P(^TMP("ECPRO",$J,CNT),"^"),ECPN=$P(^(CNT),"^",4),NATN=$P(^(CNT),"^",5),ECVOL=$P(^(CNT),"^",6),SYN=$P(^(CNT),"^",3),EC4=$P(^(CNT),"^",2)
"RTN","ECED2",71,0)
 S ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP)
"RTN","ECED2",72,0)
 S ECPTCD="" I ECCPT'="" D
"RTN","ECED2",73,0)
 . S ECPTCD=$$CPT^ICPTCOD(ECCPT,ECDT)
"RTN","ECED2",74,0)
 . I +ECPTCD>0 S ECPTCD=$P(ECPTCD,U,2)
"RTN","ECED2",75,0)
 W "  "_$S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECED2",76,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECED2",77,0)
 S EC4=$P($G(^ECJ(+EC4,"PRO")),"^",4)
"RTN","ECED2",78,0)
 S EC4N=$S($P($G(^SC(+EC4,0)),"^")]"":$P(^(0),"^"),1:""),ECID=$P($G(^SC(+EC4,0)),"^",7)
"RTN","ECED2",79,0)
 S ^TMP("ECLKUP",$J,"LAST")=CNT
"RTN","ECED2",80,0)
 Q
"RTN","ECED2",81,0)
SELC ; select category
"RTN","ECED2",82,0)
 W !!,$S(EC1:"Press",1:"Select Number, or press")_" <RET> to continue listing "_$S(EC1:"procedures",1:"categories")_" or '^' to stop: " R X:DTIME I '$T!(X="^") S (ECSTOP,ECHOICE)=1 Q
"RTN","ECED2",83,0)
 I X="" W @IOF,!,$S(EC1:"Available Procedures",1:"Categories")_" within ",ECDN," : ",! Q
"RTN","ECED2",84,0)
 I 'EC1,'$D(ECC(X)) D MSGC^ECEDU Q
"RTN","ECED2",85,0)
 I EC1,'$D(^TMP("ECPRO",$J,X)) D MSGC^ECEDU Q
"RTN","ECED2",86,0)
 S ECHOICE=1
"RTN","ECED2",87,0)
 I 'EC1 S ECC=+$P(ECC(X),"^"),ECCN=$P(ECC(X),"^",2) Q
"RTN","ECED2",88,0)
 Q
"RTN","ECED3")
0^21^B71551956
"RTN","ECED3",1,0)
ECED3 ;BIR/MAM,JPW-Enter Event Capture Data (cont'd) ;7 May 96
"RTN","ECED3",2,0)
 ;;2.0; EVENT CAPTURE ;**1,4,5,7,10,13,18,23,29,32,47**;8 May 96
"RTN","ECED3",3,0)
EDIT ; enter or edit procedure
"RTN","ECED3",4,0)
 W !!,"Edit or Delete this Procedure:  EDIT//  " R X:DTIME I '$T!(X["^") S ECOUT=1 Q
"RTN","ECED3",5,0)
 S X=$E(X) S:X="" X="E" I "EeDd"'[X W !!,"Press <RET> to edit the selected procedure, or enter D to delete",!,"the procedure.",! G EDIT
"RTN","ECED3",6,0)
 I "Dd"[X D DEL Q
"RTN","ECED3",7,0)
 D SETE^ECEDU
"RTN","ECED3",8,0)
ASK ;edit cat
"RTN","ECED3",9,0)
 S (ECFLG,ECOLD,ECOLDN,EC1,OK)=0
"RTN","ECED3",10,0)
 I '$D(ECC(1)) G P
"RTN","ECED3",11,0)
 I '$D(ECC(2)) G P
"RTN","ECED3",12,0)
 W !!,"Category: "_ECCN_"// " R X:DTIME I '$T!(X["^") S ECOUT=1 Q
"RTN","ECED3",13,0)
 I X="" G P
"RTN","ECED3",14,0)
 I "?"[X G NEWC
"RTN","ECED3",15,0)
NEW ; create new procedure
"RTN","ECED3",16,0)
 S MM="" F  S MM=$O(ECC(MM)) Q:(MM="")!($D(ECHOICE))  I $D(ECC(MM)),$P(ECC(MM),"^",2)=X S ECHOICE=MM
"RTN","ECED3",17,0)
 I $D(ECHOICE) S ECOLD=ECC,ECOLDN=ECCN,ECC=+ECC(ECHOICE),ECCN=$P(ECC(ECHOICE),"^",2)
"RTN","ECED3",18,0)
 I $D(ECHOICE),ECC=ECOLD K ECOLD,ECOLDN W !,"CATEGORY: "_ECCN K ECHOICE G P
"RTN","ECED3",19,0)
 I $D(ECHOICE) G P
"RTN","ECED3",20,0)
NEWC S X="",(CNT,ECOLD)=0
"RTN","ECED3",21,0)
LIST W !,"Categories within "_ECDN_": ",! S EC1=0 F I=0:0 S CNT=$O(ECC(CNT)) Q:'CNT!$D(ECHOICE)  D:($Y+5>IOSL) SELC Q:$D(ECHOICE)  I X="" W !,CNT_". ",?5,$P(ECC(CNT),"^",2)
"RTN","ECED3",22,0)
 I '$D(ECSTOP),$D(ECHOICE) G P
"RTN","ECED3",23,0)
PICK W !!,"Select Number:  " R X:DTIME I '$T!("^"[X) S ECOUT=1 Q
"RTN","ECED3",24,0)
 I '$D(ECC(X)) W !!,"Select the number corresponding to the procedure category, or ^ to quit.",!!,"Press <RET> to continue  ",! R X:DTIME K ECHOICE,ECSTOP S CNT=CNT-5,X="" D HDR^ECEDU G LIST
"RTN","ECED3",25,0)
 S ECOLD=ECC,ECOLDN=ECCN,ECC=$P(ECC(X),"^"),ECCN=$P(ECC(X),"^",2) I ECC=ECOLD K ECOLD,ECOLDN
"RTN","ECED3",26,0)
P ; get procedure
"RTN","ECED3",27,0)
 S EC1=1 D PROS^ECHECK1
"RTN","ECED3",28,0)
 I '$O(^TMP("ECPRO",$J,0)) D  Q:ECOUT
"RTN","ECED3",29,0)
 .W !!,"Within the ",ECLN," location there are no procedures defined",!
"RTN","ECED3",30,0)
 .W "for the DSS Unit ",ECDN,".  Please select another DSS Unit.",!!
"RTN","ECED3",31,0)
 .W "Press <RET> to continue " R X:DTIME S ECOUT=2 Q
"RTN","ECED3",32,0)
P1 ;
"RTN","ECED3",33,0)
 I '$D(^TMP("ECPRO",$J,2)) S CNT=1 D SETP W !,"Procedure: " D  G DIE
"RTN","ECED3",34,0)
 . W $S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECED3",35,0)
 . W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECED3",36,0)
 ;
"RTN","ECED3",37,0)
NEWP S ECX="",(ECPCNT,CNT,OK)=0,EC1=1 K ECHOICE,ECSTOP
"RTN","ECED3",38,0)
 I $G(ECPN)]"" S DIR("B")=ECPN
"RTN","ECED3",39,0)
 S DIR("?")="^D PROS^ECED3"
"RTN","ECED3",40,0)
 S ECX=$$GETPRO^ECDSUTIL
"RTN","ECED3",41,0)
 I +$G(ECX)=-1 D KILLV^ECDSUTIL S ECOUT=1 Q
"RTN","ECED3",42,0)
 ;
"RTN","ECED3",43,0)
 I +$G(ECX),($G(ECPROCED)=$G(ECPN)) D KILLV^ECDSUTIL G DIE
"RTN","ECED3",44,0)
 ;
"RTN","ECED3",45,0)
P2 ;ask mul proc
"RTN","ECED3",46,0)
 I +$G(ECX)=1 D SRCHTM^ECDSUTIL(ECX)
"RTN","ECED3",47,0)
 S ECPCNT=+$G(ECPCNT)
"RTN","ECED3",48,0)
 I ECPCNT=-1!(ECPCNT=-2) D  G NEWP
"RTN","ECED3",49,0)
 . D @($S(ECPCNT=-1:"ERRMSG^ECDSUTIL",ECPCNT=-2:"ERRMSG2^ECDSUTIL"))
"RTN","ECED3",50,0)
 . D KILLV^ECDSUTIL
"RTN","ECED3",51,0)
 I ECPCNT>0 D  G DIE
"RTN","ECED3",52,0)
 . S CNT=ECPCNT
"RTN","ECED3",53,0)
 . D SETP
"RTN","ECED3",54,0)
 . S OK=1
"RTN","ECED3",55,0)
 . D KILLV^ECDSUTIL
"RTN","ECED3",56,0)
 I 'ECPCNT,$D(ECPNAME) S CNT=$$PRLST^ECDSUTIL
"RTN","ECED3",57,0)
 I CNT=-1 D MSG^ECEDU,KILLV^ECDSUTIL Q
"RTN","ECED3",58,0)
 I CNT>0 D  G DIE
"RTN","ECED3",59,0)
 . D SETP
"RTN","ECED3",60,0)
 . S OK=1
"RTN","ECED3",61,0)
 . D KILLV^ECDSUTIL
"RTN","ECED3",62,0)
 Q
"RTN","ECED3",63,0)
PROS ;
"RTN","ECED3",64,0)
 S X="",CNT=0 K ECHOICE,ECSTOP
"RTN","ECED3",65,0)
LISTP D HDR1^ECEDU S JJ=1 W !,"Available Procedures within "_ECDN_": ",!
"RTN","ECED3",66,0)
 W ?72,"National",!,?5,"Procedure Name",?40,"Synonym",?72,"Number",!
"RTN","ECED3",67,0)
 S EC1=1
"RTN","ECED3",68,0)
 F   S CNT=$O(^TMP("ECPRO",$J,CNT)) Q:'CNT!$D(ECHOICE)  D:($Y+5>IOSL) SELC Q:$D(ECHOICE)  I X="" W !,CNT_".",?5,$E($P(^TMP("ECPRO",$J,CNT),"^",4),1,30),?38,$E($P(^(CNT),"^",3),1,30),?72,$P(^(CNT),"^",5)
"RTN","ECED3",69,0)
 I X="" D
"RTN","ECED3",70,0)
 .W !!?5,"Select by number, CPT or national code, procedure name, or synonym."
"RTN","ECED3",71,0)
 .W !?5,"Synonym must be preceded by the & character  (example:  &TESTSYN).",!
"RTN","ECED3",72,0)
 .W ?2,"** Modifier(s) can be appended to a CPT code (ex: CPT code-mod1,mod2,mod3) **",!
"RTN","ECED3",73,0)
 Q
"RTN","ECED3",74,0)
 ;
"RTN","ECED3",75,0)
SETP ;set proc info
"RTN","ECED3",76,0)
 S ECP=$P(^TMP("ECPRO",$J,CNT),"^"),ECPN=$P(^(CNT),"^",4),NATN=$P(^(CNT),"^",5),SYN=$P(^(CNT),"^",3),ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP)
"RTN","ECED3",77,0)
 S ECPTCD="" I ECCPT'="" D
"RTN","ECED3",78,0)
 . S ECPTCD=$$CPT^ICPTCOD(ECCPT,ECDT) I +ECPTCD>0 S ECPTCD=$P(ECPTCD,U,2)
"RTN","ECED3",79,0)
 W "  "_$S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECED3",80,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECED3",81,0)
 S EC4=$P(^TMP("ECPRO",$J,CNT),"^",2),EC4=$P($G(^ECJ(+EC4,"PRO")),"^",4)
"RTN","ECED3",82,0)
 S EC4N=$S($P($G(^SC(+EC4,0)),"^")]"":$P(^(0),"^"),1:"")
"RTN","ECED3",83,0)
 S ECID=$P($G(^SC(+EC4,0)),"^",7)
"RTN","ECED3",84,0)
 S ^TMP("ECLKUP",$J,"LAST")=CNT
"RTN","ECED3",85,0)
 Q
"RTN","ECED3",86,0)
DIE ;edit record
"RTN","ECED3",87,0)
 I $D(^ECH(DA,0)) S ECPO=$P(^(0),"^",9),$P(^(0),"^",8)=+ECC,$P(^(0),"^",9)=ECP,ECINP=$P(^(0),"^",22),ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP),$P(^ECH(DA,"P"),"^")=ECCPT,ECPR=$P(^(0),"^",3),ECFN=DA,ECDX1=$P($G(^ECH(DA,"P")),U,2) D
"RTN","ECED3",88,0)
 . Q:ECPO=ECP
"RTN","ECED3",89,0)
 . W !,?8,"** Procedure code replaced, all modifiers deleted **"
"RTN","ECED3",90,0)
 . S (ECDA,DA(1))=DA,DIK="^ECH("_DA(1)_",""MOD"",",DA=0
"RTN","ECED3",91,0)
 . F  S DA=$O(^ECH(ECDA,"MOD",DA)) Q:'DA  D ^DIK
"RTN","ECED3",92,0)
 . K DA S DA=ECDA K ECPO,ECDA,DIK,^ECH(DA,"MOD")
"RTN","ECED3",93,0)
 K DIE,DR S DIE("NO^")="OUTOK",DIE="^ECH("
"RTN","ECED3",94,0)
 ;
"RTN","ECED3",95,0)
 S DR=$S($G(ECCPT)'="":"36;",1:"")
"RTN","ECED3",96,0)
 S DR=DR_"9;11//"_ECMN
"RTN","ECED3",97,0)
 D ^DIE K DR
"RTN","ECED3",98,0)
 I $D(DTOUT)!($D(Y)'=0) K DIE S ECOUT=1 Q
"RTN","ECED3",99,0)
 ;
"RTN","ECED3",100,0)
 ;- Don't allow future dates for procedure date/time
"RTN","ECED3",101,0)
 I +$G(ECPR) S Y=ECPR D DD^%DT
"RTN","ECED3",102,0)
 S %DT="EAXR",%DT("A")="DATE/TIME OF PROCEDURE: ",%DT("B")=$S($G(ECPR)&($G(Y)]""):Y,1:""),%DT(0)="-NOW" K Y
"RTN","ECED3",103,0)
 D ^%DT K %DT
"RTN","ECED3",104,0)
 I $D(DTOUT)!($G(Y)=-1) K DTOUT,Y S ECOUT=1 Q
"RTN","ECED3",105,0)
 S DR="2////"_Y,ECNEWDT=Y
"RTN","ECED3",106,0)
 D ^DIE K DR,Y
"RTN","ECED3",107,0)
 ;
"RTN","ECED3",108,0)
 ;- Get inpatient/outpatient status and file in #721
"RTN","ECED3",109,0)
 S ECPTSTAT=$$INOUTPT^ECUTL0(+$G(ECDFN),+$G(ECNEWDT))
"RTN","ECED3",110,0)
 I ECPTSTAT="" D INOUTERR^ECUTL0 Q
"RTN","ECED3",111,0)
 S DR="29////"_ECPTSTAT
"RTN","ECED3",112,0)
 D ^DIE
"RTN","ECED3",113,0)
 K DR
"RTN","ECED3",114,0)
 ;
"RTN","ECED3",115,0)
 ;- Get associated clinic
"RTN","ECED3",116,0)
 I $$CHKDSS^ECUTL0(+$G(ECD),ECPTSTAT) D  Q:+$G(ECOUT)
"RTN","ECED3",117,0)
 . S DR=$S(EC4N]"":"26//"_EC4N,1:"26")
"RTN","ECED3",118,0)
 . D ^DIE
"RTN","ECED3",119,0)
 . K DR
"RTN","ECED3",120,0)
 . I $D(DTOUT)!($D(Y)'=0) K DIE S ECOUT=1
"RTN","ECED3",121,0)
 ;
"RTN","ECED3",122,0)
 ; - Edit Primary and multiple secondary dx codes
"RTN","ECED3",123,0)
 I $P(ECPCE,"~",2)'="N" D DXEDT^ECEDU I ECOUT Q
"RTN","ECED3",124,0)
 ;
"RTN","ECED3",125,0)
 ;- Determine patient eligibility
"RTN","ECED3",126,0)
 I $$CHKDSS^ECUTL0(+$G(ECD),ECPTSTAT) D
"RTN","ECED3",127,0)
 . I '$$MULTELG^ECUTL0(+$G(ECDFN)) S ECELIG=+$G(VAEL(1))
"RTN","ECED3",128,0)
 . E  D
"RTN","ECED3",129,0)
 .. S ECELCOD=+$P($G(^ECH(DA,"PCE")),"~",17)
"RTN","ECED3",130,0)
 .. S ECELDSP=$S(ECELCOD:$P($G(^DIC(8,ECELCOD,0)),"^"),1:"NO ELIGIBILITY ON FILE")
"RTN","ECED3",131,0)
 .. S ECELANS=$$ASKIF^ECUTL0(ECELDSP)
"RTN","ECED3",132,0)
 .. I (ECELANS<1) D
"RTN","ECED3",133,0)
 ... I ECELDSP="NO ELIGIBILITY ON FILE" D ELIGERR^ECUTL0
"RTN","ECED3",134,0)
 ... S ECELIG=$S(ECELDSP="NO ELIGIBILITY ON FILE":+$G(VAEL(1)),1:ECELCOD)
"RTN","ECED3",135,0)
 .. I (ECELANS>0) S ECELIG=+$$ELGLST^ECUTL0
"RTN","ECED3",136,0)
 K ECELANS,ECELCOD,ECELDSP,VAEL,ECNEWDT,ECDX1
"RTN","ECED3",137,0)
 ;
"RTN","ECED3",138,0)
 ;- Display inpatient/outpatient status message
"RTN","ECED3",139,0)
 D DSPSTAT^ECUTL0(ECPTSTAT)
"RTN","ECED3",140,0)
 ;
"RTN","ECED3",141,0)
 ;- Ask classification questions applicable to patient and file in #721
"RTN","ECED3",142,0)
 I $$ASKCLASS^ECUTL1(+$G(ECDFN),.ECCLFLDS,.ECOUT,ECPCE,ECPTSTAT,DA),($O(ECCLFLDS(""))]"") D EDCLASS^ECUTL1(DA,.ECCLFLDS)
"RTN","ECED3",143,0)
 Q:+$G(ECOUT)
"RTN","ECED3",144,0)
 K ECCLFLDS
"RTN","ECED3",145,0)
 ;
"RTN","ECED3",146,0)
 ;- Get provider(s) with active person class
"RTN","ECED3",147,0)
 I '$G(ECOUT) D GET^ECPRVUTL(DA,ECDT,.ECU,.ECU2,.ECU3,.ECOUT)
"RTN","ECED3",148,0)
 I '$G(ECOUT) D
"RTN","ECED3",149,0)
 .S DR="10////"_$S(+ECU:+ECU,1:"")_";15////"_$S(+ECU2:+ECU2,$P(ECU2,"^")="@":"@",1:"")_";17////"_$S(+ECU3:+ECU3,$P(ECU3,"^")="@":"@",1:"")
"RTN","ECED3",150,0)
 .D ^DIE K DR
"RTN","ECED3",151,0)
 I $G(ECOUT)!$D(DTOUT)!($D(Y)'=0) K DIE S ECOUT=1 Q
"RTN","ECED3",152,0)
 ;
"RTN","ECED3",153,0)
 ;- File assoc clinic from event code screen if null
"RTN","ECED3",154,0)
 I $P($G(^ECH(DA,0)),"^",19)="" D
"RTN","ECED3",155,0)
 . I $G(EC4)="" D GETCLN
"RTN","ECED3",156,0)
 . S EC4=+$G(EC4)
"RTN","ECED3",157,0)
 . I EC4>0 D
"RTN","ECED3",158,0)
 .. S DR="26////^S X=EC4"
"RTN","ECED3",159,0)
 .. D ^DIE K DR
"RTN","ECED3",160,0)
 ;
"RTN","ECED3",161,0)
 ;- Procedure Reason(s)
"RTN","ECED3",162,0)
 I $G(ECP)]"" S ECSCR=+$O(^ECJ("AP",+ECL,+ECD,+ECC,ECP,0))
"RTN","ECED3",163,0)
 I ECSCR>0,($P($G(^ECJ(ECSCR,"PRO")),"^",5)=1),(+$O(^ECL("AD",ECSCR,0))) D  Q:+$G(ECOUT)
"RTN","ECED3",164,0)
 . S DIE="^ECH(",DR="34" D ^DIE K DR,DIE
"RTN","ECED3",165,0)
 . I $D(DTOUT)!($D(Y)'=0) K ECSCR S ECOUT=1 Q
"RTN","ECED3",166,0)
 ;
"RTN","ECED3",167,0)
 K DIE,ECSCR S EC(0)=^ECH(+EC(EC),0),ECFN=+EC(0)
"RTN","ECED3",168,0)
 S ECZZ=$G(^ECH(ECFN,"P")),ECDX=+$P(ECZZ,"^",2),ECCPT=+$P(ECZZ,"^"),ECINP=$P(EC(0),"^",22) K ECZZ
"RTN","ECED3",169,0)
 S EC4=$P(EC(0),"^",19),ECID=$P($G(^SC(+EC4,0)),"^",7),$P(^ECH(ECFN,0),"^",20)=ECID
"RTN","ECED3",170,0)
 I $P(ECPCE,"~",2)="N" G SET
"RTN","ECED3",171,0)
 I ($P(ECPCE,"~",2)="O")&(ECINP'="O") G SET
"RTN","ECED3",172,0)
 D CLIN^ECEDF I 'ECPCL W !!,"You should edit this patient procedure and enter an active clinic.",!!
"RTN","ECED3",173,0)
 W !!,"Press <RET> to continue " R X:DTIME
"RTN","ECED3",174,0)
SET ; sets data 
"RTN","ECED3",175,0)
 S $P(^ECH(DA,0),"^",14)="",$P(^ECH(DA,0),"^",16)="",$P(^ECH(DA,0),"^",18)=""
"RTN","ECED3",176,0)
 S $P(^ECH(DA,0),"^",13)=DUZ,ECU=$P(^(0),"^",11) K DA
"RTN","ECED3",177,0)
 Q:$P(ECPCE,"~",2)="N"  I $P(ECPCE,"~",2)="O"&(ECINP'="O") Q
"RTN","ECED3",178,0)
 D PCEE^ECBEN2U
"RTN","ECED3",179,0)
 Q
"RTN","ECED3",180,0)
DEL ; delete existing procedure
"RTN","ECED3",181,0)
 W !!,"Are you sure that you want to delete this entire procedure from",!,"your records ?  NO// " R X:DTIME I '$T!(X["^") S ECOUT=1 Q
"RTN","ECED3",182,0)
 S X=$E(X) S:X="" X="N" I "NnYy"'[X W !!,"Enter YES to delete this procedure, or <RET> to quit this option." G DEL
"RTN","ECED3",183,0)
 I "Nn"[X Q
"RTN","ECED3",184,0)
 S ECCH=$G(^ECH(+EC(EC),0)),ECVST=+$P(ECCH,"^",21) I 'ECVST G DELP
"RTN","ECED3",185,0)
 ;
"RTN","ECED3",186,0)
 ;* Prepare all EC records with same Visit file entry to resend to PCE
"RTN","ECED3",187,0)
 ;* Remove Visit entry from ^ECH( so DELVFILE will complete cleanup
"RTN","ECED3",188,0)
 N ECVAR1 S ECVAR1=$$FNDVST^ECUTL(ECVST) K ECVAR1  ;* 2nd Param not sent
"RTN","ECED3",189,0)
 ;
"RTN","ECED3",190,0)
 ;- Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECED3",191,0)
 S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST) K ECVST,VALQUIET
"RTN","ECED3",192,0)
DELP S DA=+EC(EC),DIK="^ECH(" W !!,"Deleting Procedure... " D ^DIK K DA,DIK,ECVV
"RTN","ECED3",193,0)
 ;S ECOUT=99  ;JAM/9/28/01 remove to allow redisplay of screen
"RTN","ECED3",194,0)
 W !!,"Press <RET> to continue " R X:DTIME
"RTN","ECED3",195,0)
 Q
"RTN","ECED3",196,0)
SELC ; select category
"RTN","ECED3",197,0)
 W !!,$S(EC1:"Press",1:"Select Number, or press")_" <RET> to continue listing "_$S(EC1:"procedures",1:"categories")_" or '^' to stop: " R X:DTIME I '$T!(X="^") S (ECSTOP,ECHOICE)=1 Q
"RTN","ECED3",198,0)
 I X="" W @IOF,!,$S(EC1:"Available Procedures",1:"Categories")_" within ",ECDN," : ",! Q
"RTN","ECED3",199,0)
 I 'EC1,'$D(ECC(X)) D MSGC^ECEDU Q
"RTN","ECED3",200,0)
 I EC1,'$D(^TMP("ECPRO",$J,X)) D MSGC^ECEDU Q
"RTN","ECED3",201,0)
 S ECHOICE=1
"RTN","ECED3",202,0)
 I 'EC1 S ECC=+$P(ECC(X),"^"),ECCN=$P(ECC(X),"^",2) Q
"RTN","ECED3",203,0)
 Q
"RTN","ECED3",204,0)
 ;
"RTN","ECED3",205,0)
GETCLN ;- Get assoc clinic from event code screen
"RTN","ECED3",206,0)
 N ECI
"RTN","ECED3",207,0)
 I $G(EC4)="",($G(ECP)]"") D
"RTN","ECED3",208,0)
 . S ECI=+$O(^ECJ("AP",+ECL,+ECD,+ECC,ECP,0)),EC4=+$P($G(^ECJ(+ECI,"PRO")),"^",4)
"RTN","ECED3",209,0)
 . S EC4N=$S($P($G(^SC(+EC4,0)),"^")]"":$P(^(0),"^"),1:"")
"RTN","ECED3",210,0)
 Q
"RTN","ECEDU")
0^20^B13543297
"RTN","ECEDU",1,0)
ECEDU ;BIR/MAM,JPW-Enter Event Capture Data (cont'd) ;6 Mar 96
"RTN","ECEDU",2,0)
 ;;2.0; EVENT CAPTURE ;**10,18,23,47**;8 May 96
"RTN","ECEDU",3,0)
HDR ;hdr for filing
"RTN","ECEDU",4,0)
 W @IOF,!,"ENTERING A NEW PROCEDURE FOR "_ECPAT_" ...",!!,"LOCATION: "_ECLN,!,"SERVICE: "_ECSN,!,"SECTION: "_ECMN,!,"CATEGORY: "_ECCN,!!,"PROCEDURE: "
"RTN","ECEDU",5,0)
 W $S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECEDU",6,0)
 I SYN]"",SYN'["NOT DEFINED" W " ["_SYN_"]"
"RTN","ECEDU",7,0)
 W "  (#"_NATN_")"
"RTN","ECEDU",8,0)
 Q
"RTN","ECEDU",9,0)
MSGC ;msg cat
"RTN","ECEDU",10,0)
 W !!,"Please enter the number that corresponds to the "_$S(EC1:"procedure",1:"category")_" from which",!,"you would like to select a procedure.  If you would like to continue",!,"with the list, press <RET>.  Enter ^ to quit."
"RTN","ECEDU",11,0)
 S CNT=CNT-5
"RTN","ECEDU",12,0)
 Q
"RTN","ECEDU",13,0)
HDR1 ; heading
"RTN","ECEDU",14,0)
 W @IOF,!,"Patient: "_ECPAT,?40,"Procedure Date: "_ECDATE,!!,"Location: "_ECLN,?40,"Service: "_ECSN,!,"Section: "_ECMN,?40,"DSS Unit: "_ECDN W:$D(ECCN) !,"Category: "_ECCN
"RTN","ECEDU",15,0)
 Q
"RTN","ECEDU",16,0)
MSG W !!,"No procedures entered.  No Action Taken.",!!,"Press <RET> to continue " R X:DTIME S ECOUT=1
"RTN","ECEDU",17,0)
 Q
"RTN","ECEDU",18,0)
SETE ;set edit
"RTN","ECEDU",19,0)
 N ECPXD
"RTN","ECEDU",20,0)
 S DA=+EC(EC),EC(0)=^ECH(DA,0),ECC=+$P(EC(0),"^",8),ECCN=$S('ECC:"None",$P($G(^EC(726,ECC,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECEDU",21,0)
 S (ECP,ECPROF)=$P(EC(0),"^",9)
"RTN","ECEDU",22,0)
 S ECPSY=+$O(^ECJ("AP",+ECL,+ECD,ECC,+ECP,""))
"RTN","ECEDU",23,0)
 S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECEDU",24,0)
 S ECFILE=$S(ECPROF["EC":725,ECPROF["ICPT":81,1:"UNKNOWN")
"RTN","ECEDU",25,0)
 I ECFILE="UNKNOWN" S ECPN="UNKNOWN"
"RTN","ECEDU",26,0)
 S ECCPT=$S(ECP["ICPT":+ECP,1:$P($G(^EC(725,+ECP,0)),U,5))
"RTN","ECEDU",27,0)
 S (ECPTCD,ECPXD)="" I ECCPT'="" D
"RTN","ECEDU",28,0)
 . S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(EC(0),U,3)) I +ECPXD>0 S ECPTCD=$P(ECPXD,U,2)
"RTN","ECEDU",29,0)
 I ECFILE=81 S ECPN=$S($P(ECPXD,U,3)]"":$P(ECPXD,U,3),1:"UNKNOWN")
"RTN","ECEDU",30,0)
 I ECFILE=725 S ECPN=$S($P($G(^EC(725,+ECP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECEDU",31,0)
HDRE ; hdr for editing
"RTN","ECEDU",32,0)
 W @IOF,!,"EDITING A PROCEDURE FOR "_ECPAT_" ...",!!,"LOCATION: "_ECLN,!,"SERVICE: "_ECSN,!,"SECTION: "_ECMN,!,"CATEGORY: "_ECCN,!,"PROCEDURE: "_$S(ECCPT="":"",1:ECPTCD_" ")_ECPN_$S(ECPSYN="":"",1:"  ["_ECPSYN_"]")
"RTN","ECEDU",33,0)
 Q
"RTN","ECEDU",34,0)
DXEDT ;ALB/JAM - Edit Primary and multiple secondary dx codes
"RTN","ECEDU",35,0)
 N PXUPD,IEN,ECPDX,ECDXS
"RTN","ECEDU",36,0)
 S EC4=$P($G(^ECH(ECFN,0)),"^",19),(ECDX,ECDXN)=""
"RTN","ECEDU",37,0)
 S ECPDX=$$PDXCK^ECUTL2(ECDFN,ECNEWDT,ECL,EC4),IEN="" K ECDXIEN(ECFN)
"RTN","ECEDU",38,0)
 ;update primary diagnoses code
"RTN","ECEDU",39,0)
 S DA=ECFN,DR="20//"_ECDX1 D ^DIE
"RTN","ECEDU",40,0)
 I $D(DTOUT)!($D(Y)'=0) K DIE S ECOUT=1 Q
"RTN","ECEDU",41,0)
 ;check for any changes to primary dx
"RTN","ECEDU",42,0)
 S ECDX1=X,IEN=""
"RTN","ECEDU",43,0)
 F  S IEN=$O(ECDXIEN(IEN)) Q:IEN=""  I $P(ECDXIEN(IEN),U,2)'=ECDX1 D  Q
"RTN","ECEDU",44,0)
 .W !?5,"WARNING: More than 1 Primary diagnoses exist for this encounter. All"
"RTN","ECEDU",45,0)
 .W !?14,"Procedures will be updated to have same primary & secondary dx"
"RTN","ECEDU",46,0)
 ; update secondary diagnosis codes
"RTN","ECEDU",47,0)
 D SDX^ECUTL2 S DXS=""
"RTN","ECEDU",48,0)
 K ECDXX M ECDXX=ECDXS K ECDXS
"RTN","ECEDU",49,0)
 ;Update all procedures for the encounter with same primary dx
"RTN","ECEDU",50,0)
 S PXUPD=$$PXUPD^ECUTL2(ECDFN,ECNEWDT,ECL,EC4,ECDX1,.ECDXX)
"RTN","ECEDU",51,0)
 K PXUPD,ECDXX S DA=ECFN
"RTN","ECEDU",52,0)
 Q
"RTN","ECEDU",53,0)
 F  S DXS=$O(ECDXS(DXS)) Q:DXS=""  S DXSIEN=$P(ECDXS(DXS),U) D:DXSIEN>0
"RTN","ECEDU",54,0)
 . K DIC,DD,DO S DIC(0)="L",DA(1)=ECFN,DIC="^ECH("_DA(1)_","_"""DX"""_","
"RTN","ECEDU",55,0)
 . S DIC("P")=$P(^DD(721,38,0),U,2),X=DXSIEN D FILE^DICN
"RTN","ECEDU",56,0)
 K DXSIEN,DXS,ECDXX,DIC M ECDXX=ECDXS K ECDXS
"RTN","ECEFPAT")
0^19^B53646132
"RTN","ECEFPAT",1,0)
ECEFPAT ;ALB/JAM-Enter Event Capture Data Patient Filer ;12 Oct 00
"RTN","ECEFPAT",2,0)
 ;;2.0; EVENT CAPTURE ;**25,32,39,42,47**;8 May 96
"RTN","ECEFPAT",3,0)
 ;
"RTN","ECEFPAT",4,0)
FILE ;Used by the RPC broker to file patient encounter in file #721
"RTN","ECEFPAT",5,0)
 ;     Variables passed in
"RTN","ECEFPAT",6,0)
 ;       ECIEN   - IEN of #721, if editing
"RTN","ECEFPAT",7,0)
 ;       ECDEL   - Delete record. 1- YES; 0- 0, null or undefine for NO.
"RTN","ECEFPAT",8,0)
 ;       ECDFN   - Patient IEN for file #2
"RTN","ECEFPAT",9,0)
 ;       ECDT    - Date and time of procedure
"RTN","ECEFPAT",10,0)
 ;       ECL     - Location
"RTN","ECEFPAT",11,0)
 ;       ECD     - DSS Unit
"RTN","ECEFPAT",12,0)
 ;       ECC     - Category
"RTN","ECEFPAT",13,0)
 ;       ECP     - Procedure
"RTN","ECEFPAT",14,0)
 ;       ECVOL   - Volume
"RTN","ECEFPAT",15,0)
 ;       ECU     - Provider
"RTN","ECEFPAT",16,0)
 ;       ECMN    - Ordering Section
"RTN","ECEFPAT",17,0)
 ;       ECDUZ   - Entered/Edited by, pointer to #200
"RTN","ECEFPAT",18,0)
 ;       ECU2    - Provider 2, optional
"RTN","ECEFPAT",19,0)
 ;       ECU3    - Provider 3, optional
"RTN","ECEFPAT",20,0)
 ;       ECDX    - Primary Diagnosis
"RTN","ECEFPAT",21,0)
 ;       ECDXS   - Seconday Diagnosis; multiple, optional
"RTN","ECEFPAT",22,0)
 ;       EC4     - Asssociated Clinic, required if sending data to PCE
"RTN","ECEFPAT",23,0)
 ;       ECPTSTAT- Patient Status
"RTN","ECEFPAT",24,0)
 ;       ECPXREAS- Procedure reason, optional
"RTN","ECEFPAT",25,0)
 ;       ECMOD   - CPT modifiers, optional
"RTN","ECEFPAT",26,0)
 ;       ECLASS  - Classification, optional
"RTN","ECEFPAT",27,0)
 ;       ECELIG  - Eligibility, optional
"RTN","ECEFPAT",28,0)
 ;
"RTN","ECEFPAT",29,0)
 ;     Variable return
"RTN","ECEFPAT",30,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #721^Message
"RTN","ECEFPAT",31,0)
 ;
"RTN","ECEFPAT",32,0)
 N NODE,ECS,ECM,ECID,ECCPT,ECINT,ECPCE,ECX,ECERR,ECOUT,ECFLG
"RTN","ECEFPAT",33,0)
 S ECFLG=1,ECERR=0 D CHKDT(1) I ECERR Q
"RTN","ECEFPAT",34,0)
 F ECX="ECU","ECU2","ECU3" D  I ECERR Q
"RTN","ECEFPAT",35,0)
 .I $G(@ECX)="" Q
"RTN","ECEFPAT",36,0)
 .S NODE=$$GET^XUA4A72(@ECX,ECDT) I +NODE'>0 S ECERR=1 D  Q
"RTN","ECEFPAT",37,0)
 ..S ^TMP($J,"ECMSG",1)="0^Provider doesn't have an active Person class"
"RTN","ECEFPAT",38,0)
 I $G(ECIEN)'="" S ECFLG=0 D  I ECERR Q
"RTN","ECEFPAT",39,0)
 . I '$D(^ECH(ECIEN)) S ECERR=1,^TMP($J,"ECMSG",1)="0^Pat IEN Not Found"
"RTN","ECEFPAT",40,0)
 I $G(ECDEL) K ^TMP($J,"ECMSG") D  Q
"RTN","ECEFPAT",41,0)
 .S ECVST=$P($G(^ECH(ECIEN,0)),"^",21) I ECVST D
"RTN","ECEFPAT",42,0)
 ..;* Resend all EC records with same Visit file entry to PCE
"RTN","ECEFPAT",43,0)
 ..;* Remove Visit entry from ^ECH( so DELVFILE will complete cleanup
"RTN","ECEFPAT",44,0)
 ..S ECVAR1=$$FNDVST^ECUTL(ECVST) K ECVAR1
"RTN","ECEFPAT",45,0)
 ..;Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECEFPAT",46,0)
 ..S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST) K ECVST,VALQUIET
"RTN","ECEFPAT",47,0)
 .S DA=ECIEN,DIK="^ECH(" D ^DIK K DA,DIK,ECVV
"RTN","ECEFPAT",48,0)
 .S ^TMP($J,"ECMSG",1)="1^Procedure Deleted"
"RTN","ECEFPAT",49,0)
 S ECDT=+ECDT,NODE=$G(^ECD(ECD,0)) I NODE="" D MSG Q
"RTN","ECEFPAT",50,0)
 S ECFN=$G(ECIEN),ECVOL=$G(ECVOL,1),ECS=$P(NODE,U,2),ECM=$P(NODE,U,3)
"RTN","ECEFPAT",51,0)
 S ECPCE="U~"_$S($P(NODE,"^",14)]"":$P(NODE,"^",14),1:"N")
"RTN","ECEFPAT",52,0)
 ;S ECPTSTAT=$$INOUTPT^ECUTL0(ECDFN,+ECDT) ;pat stat may not need
"RTN","ECEFPAT",53,0)
 I $G(EC4)="" D GETCLN^ECEDF
"RTN","ECEFPAT",54,0)
 S ECID=$S(+EC4:$P($G(^SC(+EC4,0)),"^",7),1:""),ECINP=ECPTSTAT
"RTN","ECEFPAT",55,0)
 I $S($P(ECPCE,"~",2)="N":0,$P(ECPCE,"~",2)="O"&(ECINP'="O"):0,1:1) D
"RTN","ECEFPAT",56,0)
 .D CHKDT(2)
"RTN","ECEFPAT",57,0)
 Q:ECERR  I ECFLG D NEWIEN
"RTN","ECEFPAT",58,0)
 S ECCPT=$S(ECP["ICPT":+ECP,1:$P($G(^EC(725,+ECP,0)),U,5))
"RTN","ECEFPAT",59,0)
 K DA,DR,DIE S DIE="^ECH(",(DA,ECFN)=ECIEN K ECIEN
"RTN","ECEFPAT",60,0)
 S DR=".01////"_ECFN_";1////"_ECDFN_";3////"_ECL_";4////"_ECS
"RTN","ECEFPAT",61,0)
 S DR=DR_";5////"_ECM_";6////"_ECD_";7////"_+ECC_";9////"_ECVOL
"RTN","ECEFPAT",62,0)
 S $P(^ECH(ECFN,0),"^",9)=ECP
"RTN","ECEFPAT",63,0)
 D ^DIE I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",64,0)
 S DA=ECFN,DR="10////"_ECU_";11////"_ECMN_";13////"_ECDUZ_";2////"_ECDT
"RTN","ECEFPAT",65,0)
 S ECU2=$G(ECU2),ECU3=$G(ECU3),ECPXREAS=$G(ECPXREAS)
"RTN","ECEFPAT",66,0)
 S DR=DR_";15////"_$S(+ECU2:+ECU2,1:"@")_";17////"_$S(+ECU3:+ECU3,1:"@")
"RTN","ECEFPAT",67,0)
 S DR=DR_";19////"_$S(+ECCPT:ECCPT,1:"@")_";20////"_ECDX
"RTN","ECEFPAT",68,0)
 S DR=DR_";26////"_$G(EC4)_";27////"_$G(ECID)_";29////"_ECPTSTAT
"RTN","ECEFPAT",69,0)
 S DR=DR_";34////"_$S(ECPXREAS="":"@",1:ECPXREAS)
"RTN","ECEFPAT",70,0)
 D ^DIE I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",71,0)
 ;Remove Old CPT modifiers
"RTN","ECEFPAT",72,0)
 I 'ECFLG D
"RTN","ECEFPAT",73,0)
 . K OLDMOD S (ECDA,DA(1))=ECFN,DIK="^ECH("_DA(1)_",""MOD"",",DA=0
"RTN","ECEFPAT",74,0)
 . F  S DA=$O(^ECH(ECDA,"MOD",DA)) Q:'DA  S OLDMOD(DA)="" D ^DIK
"RTN","ECEFPAT",75,0)
 . K DA,ECDA,DIK,^ECH(ECFN,"MOD")
"RTN","ECEFPAT",76,0)
 .;Remove old secondary diagnosis codes
"RTN","ECEFPAT",77,0)
 . K OLDDXS S (ECDA,DA(1))=ECFN,DIK="^ECH("_DA(1)_",""DX"",",DA=0
"RTN","ECEFPAT",78,0)
 . F  S DA=$O(^ECH(ECDA,"DX",DA)) Q:'DA  S OLDDXS(DA)="" D ^DIK
"RTN","ECEFPAT",79,0)
 . K DA,ECDA,DIK,^ECH(ECFN,"DX")
"RTN","ECEFPAT",80,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",81,0)
 ;File CPT modifiers
"RTN","ECEFPAT",82,0)
 I $G(ECMOD)'="" D
"RTN","ECEFPAT",83,0)
 . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEFPAT",84,0)
 . S DIC="^ECH("_DA(1)_","_"""MOD"""_","
"RTN","ECEFPAT",85,0)
 . F ECX=1:1:$L(ECMOD,"^") S MODIEN=$P(ECMOD,U,ECX) I +MODIEN>0 D
"RTN","ECEFPAT",86,0)
 . . K DD,DO S X=MODIEN D FILE^DICN
"RTN","ECEFPAT",87,0)
 . K MODIEN,DIC
"RTN","ECEFPAT",88,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",89,0)
 ; File multiple secondary diagnosis codes
"RTN","ECEFPAT",90,0)
 I $G(ECDXS)'="" D
"RTN","ECEFPAT",91,0)
 . S DXS="",DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEFPAT",92,0)
 . S DIC="^ECH("_DA(1)_","_"""DX"""_",",ECDXY=ECDX K ECDXX
"RTN","ECEFPAT",93,0)
 . F ECX=1:1:$L(ECDXS,"^") S DXSIEN=$P(ECDXS,U,ECX) I +DXSIEN>0 D
"RTN","ECEFPAT",94,0)
 . . S DXCDE=$$ICDDX^ICDCODE(DXSIEN,ECDT) Q:+DXCDE<0  I '$P(DXCDE,U,10) Q
"RTN","ECEFPAT",95,0)
 . . K DD,DO S X=DXSIEN D FILE^DICN
"RTN","ECEFPAT",96,0)
 . . S DXCDE=$P(DXCDE,U,2),ECDXX(DXCDE)=DXSIEN
"RTN","ECEFPAT",97,0)
 . ; Update all procedures for an encounter with same primary & second dx
"RTN","ECEFPAT",98,0)
 . S PXUPD=$$PXUPD^ECUTL2(ECDFN,ECDT,ECL,EC4,ECDXY,.ECDXX,ECFN)
"RTN","ECEFPAT",99,0)
 . K PXUPD,ECDXY,ECDXX,DXS,DXSIEN,DIC,DXCDE,DA,DD,DO
"RTN","ECEFPAT",100,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",101,0)
 S DA=ECFN
"RTN","ECEFPAT",102,0)
 ;File classification AO^IR^SC^EC^MST^HNC
"RTN","ECEFPAT",103,0)
 I $G(ECLASS)'="" D
"RTN","ECEFPAT",104,0)
 . S CLSTR="21^22^24^23^35^39",DR=""
"RTN","ECEFPAT",105,0)
 . F ECX=1:1:$L(CLSTR,"^") D
"RTN","ECEFPAT",106,0)
 . . S DR=DR_$P(CLSTR,U,ECX)_"////"_$P(ECLASS,U,ECX)_";"
"RTN","ECEFPAT",107,0)
 . S DR=$E(DR,1,($L(DR)-1)) D ^DIE
"RTN","ECEFPAT",108,0)
 . K CLSTR,DR,DIE
"RTN","ECEFPAT",109,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",110,0)
 ;
"RTN","ECEFPAT",111,0)
PCE ; format PCE data to send
"RTN","ECEFPAT",112,0)
 I ($P(ECPCE,"~",2)="N")!($P(ECPCE,"~",2)="O"&(ECINP'="O")) D  Q
"RTN","ECEFPAT",113,0)
 .S ^TMP($J,"ECMSG",1)="1^Record Filed"
"RTN","ECEFPAT",114,0)
 D:ECFLG PCE^ECBEN2U I 'ECFLG S EC(0)=^ECH(ECFN,0) D PCEE^ECBEN2U K EC
"RTN","ECEFPAT",115,0)
 I $G(ECOUT)!(ECERR) D  Q
"RTN","ECEFPAT",116,0)
 . D RECDEL S STR=$S($G(^ECH(ECFN,"R")):^("R"),1:" PCE Data Missing")
"RTN","ECEFPAT",117,0)
 . S ^TMP($J,"ECMSG",1)="0^Record Not Filed, "_STR K STR
"RTN","ECEFPAT",118,0)
 S ^TMP($J,"ECMSG",1)="1^Record Filed"_U_$G(ECIEN)
"RTN","ECEFPAT",119,0)
 Q
"RTN","ECEFPAT",120,0)
 ;
"RTN","ECEFPAT",121,0)
NEWIEN ;Create new IEN in file #721
"RTN","ECEFPAT",122,0)
 N DIC,DA,DD,DO,ECRN
"RTN","ECEFPAT",123,0)
RLCK L +^ECH(0) S ECRN=$P(^ECH(0),"^",3)+1
"RTN","ECEFPAT",124,0)
 I $D(^ECH(ECRN)) S $P(^ECH(0),"^",3)=$P(^(0),"^",3)+1 L -^ECH(0) G RLCK
"RTN","ECEFPAT",125,0)
 L -^ECH(0) S DIC(0)="L",DIC="^ECH(",X=ECRN
"RTN","ECEFPAT",126,0)
 D FILE^DICN S ECIEN=+Y
"RTN","ECEFPAT",127,0)
 Q
"RTN","ECEFPAT",128,0)
RECDEL ; Delete record
"RTN","ECEFPAT",129,0)
 ;restore old data
"RTN","ECEFPAT",130,0)
 I 'ECFLG D  Q
"RTN","ECEFPAT",131,0)
 . I $O(OLDMOD("")) D
"RTN","ECEFPAT",132,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEFPAT",133,0)
 . . S DIC="^ECH("_DA(1)_","_"""MOD"""_",",ECX=0
"RTN","ECEFPAT",134,0)
 . . F  S ECX=$O(OLDMOD(ECX)) Q:'ECX  I ECX>0 K DD,DO S X=ECX D FILE^DICN
"RTN","ECEFPAT",135,0)
 . I $O(OLDDXS("")) D
"RTN","ECEFPAT",136,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEFPAT",137,0)
 . . S DIC="^ECH("_DA(1)_","_"""DX"""_",",ECX=0
"RTN","ECEFPAT",138,0)
 . . F  S ECX=$O(OLDDXS(ECX)) Q:'ECX  I ECX>0 K DD,DO S X=ECX D FILE^DICN
"RTN","ECEFPAT",139,0)
 . K DIC,DA,DD,DO,OLDMOD,OLDDXS,ECX
"RTN","ECEFPAT",140,0)
 S DA=ECFN,DIK="^ECH(" D ^DIK K DA,DIK
"RTN","ECEFPAT",141,0)
 Q
"RTN","ECEFPAT",142,0)
MSG ;Record not filed
"RTN","ECEFPAT",143,0)
 S ^TMP($J,"ECMSG",1)="0^Record not Filed"
"RTN","ECEFPAT",144,0)
 Q
"RTN","ECEFPAT",145,0)
CHKDT(FLG) ;Required Data Check
"RTN","ECEFPAT",146,0)
 N I,C
"RTN","ECEFPAT",147,0)
 S C=1
"RTN","ECEFPAT",148,0)
 I FLG=1 D  Q
"RTN","ECEFPAT",149,0)
 .F I="ECD","ECC","ECL","ECDT","ECP","ECDFN","ECU","ECMN","ECDUZ","ECPTSTAT" D
"RTN","ECEFPAT",150,0)
 ..I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key data missing "_I,C=C+1,ECERR=1
"RTN","ECEFPAT",151,0)
 .I $G(ECDEL),$D(ECIEN) K ^TMP($J,"ECMSG") S ECERR=0
"RTN","ECEFPAT",152,0)
 ;check PCE data
"RTN","ECEFPAT",153,0)
 I FLG=2 D  Q
"RTN","ECEFPAT",154,0)
 .F I="EC4","ECDX" D  Q
"RTN","ECEFPAT",155,0)
 ..I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key PCE data missing "_I,C=C+1,ECERR=1
"RTN","ECEFPAT",156,0)
 Q
"RTN","ECEFPAT",157,0)
VALDATA ;validate data
"RTN","ECEFPAT",158,0)
 N ECRRX
"RTN","ECEFPAT",159,0)
 D CHK^DIE(721,1,,"`"_ECDFN,.ECRRX) I ECRRX'=ECDFN D  Q
"RTN","ECEFPAT",160,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Patient"
"RTN","ECEFPAT",161,0)
 D CHK^DIE(721,2,,ECDT,.ECRRX) I ECRRX'=ECDT D  Q
"RTN","ECEFPAT",162,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure Date"
"RTN","ECEFPAT",163,0)
 D CHK^DIE(721,3,,"`"_ECL,.ECRRX) I ECRRX'=ECL D  Q
"RTN","ECEFPAT",164,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Location"
"RTN","ECEFPAT",165,0)
 D CHK^DIE(721,6,,"`"_ECD,.ECRRX) I ECRRX'=ECD D  Q
"RTN","ECEFPAT",166,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid DSS Unit"
"RTN","ECEFPAT",167,0)
 D CHK^DIE(721,7,,"`"_ECC,.ECRRX) I ECRRX'=ECC D  Q
"RTN","ECEFPAT",168,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Category"
"RTN","ECEFPAT",169,0)
 D  I ECERR Q
"RTN","ECEFPAT",170,0)
 .I ECP["ICPT" S ECRRX=$$CPT^ICPTCOD(+ECP,ECDT) I +ECRRX>0,$P(ECRRX,U,7) Q
"RTN","ECEFPAT",171,0)
 .I ECP["EC",$D(^EC(725,+ECP,0)) Q
"RTN","ECEFPAT",172,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure"
"RTN","ECEFPAT",173,0)
 D CHK^DIE(721,10,,"`"_ECU,.ECRRX) I ECRRX'=ECU D  Q
"RTN","ECEFPAT",174,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Provider"
"RTN","ECEFPAT",175,0)
 I $G(ECU2)'="" D CHK^DIE(721,15,,"`"_ECU2,.ECRRX) I ECRRX'=ECU2 D  Q
"RTN","ECEFPAT",176,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Provider #2"
"RTN","ECEFPAT",177,0)
 I $G(ECU3)'="" D CHK^DIE(721,10,,"`"_ECU3,.ECRRX) I ECRRX'=ECU3 D  Q
"RTN","ECEFPAT",178,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Provider #3"
"RTN","ECEFPAT",179,0)
 D CHK^DIE(721,11,,"`"_ECMN,.ECRRX) I ECRRX'=ECMN D  Q
"RTN","ECEFPAT",180,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Orddering Section"
"RTN","ECEFPAT",181,0)
 D CHK^DIE(721,20,,"`"_ECDX,.ECRRX) I ECRRX'=ECDX D  Q
"RTN","ECEFPAT",182,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Primary Diagnosis"
"RTN","ECEFPAT",183,0)
 I $G(EC4)'="" D CHK^DIE(721,26,,"`"_EC4,.ECRRX) I ECRRX'=EC4 D  Q
"RTN","ECEFPAT",184,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Associated Clinic"
"RTN","ECEFPAT",185,0)
 Q
"RTN","ECHECK1")
0^18^B9688784
"RTN","ECHECK1",1,0)
ECHECK1 ;BIR/MAM,JPW-Categories and Procedures Check ;7 May 96
"RTN","ECHECK1",2,0)
 ;;2.0; EVENT CAPTURE ;**4,33,47**;8 May 96
"RTN","ECHECK1",3,0)
CATS ; check number of categories
"RTN","ECHECK1",4,0)
 K ECBUD,EC1,EC23 S CNT=0,ECAT=""
"RTN","ECHECK1",5,0)
 F  S ECAT=$O(^ECJ("AP",ECL,ECD,ECAT)) Q:ECAT=""  D
"RTN","ECHECK1",6,0)
 .S EC2="" F  S EC2=$O(^ECJ("AP",ECL,ECD,ECAT,EC2)) Q:EC2=""  D
"RTN","ECHECK1",7,0)
 ..S EC23=+$O(^ECJ("AP",ECL,ECD,ECAT,EC2,0))
"RTN","ECHECK1",8,0)
 ..I $G(ECCSTA)="",$P($G(^ECJ(+EC23,0)),"^",2) Q
"RTN","ECHECK1",9,0)
 ..S ECBUD(ECAT)=+ECAT_"^"_$S($P($G(^EC(726,+ECAT,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECHECK1",10,0)
 S ECAT=0 F  S ECAT=$O(ECBUD(ECAT)) Q:'ECAT  S CNT=CNT+1,ECC(CNT)=ECBUD(ECAT)
"RTN","ECHECK1",11,0)
 I '$D(ECC) S ECC(CNT)="0^No Categories"
"RTN","ECHECK1",12,0)
 K EC2,EC23,ECBUD
"RTN","ECHECK1",13,0)
 Q
"RTN","ECHECK1",14,0)
PROS ; check number of procedures
"RTN","ECHECK1",15,0)
 K ^TMP("ECPRO",$J) S CNT=0,ECPROS=""
"RTN","ECHECK1",16,0)
 I ECC F  S ECPROS=$O(^ECJ("AP",ECL,ECD,ECC,ECPROS)) Q:ECPROS=""  D SET
"RTN","ECHECK1",17,0)
 I 'ECC S ECC="" F  S ECC=$O(^ECJ("AP",ECL,ECD,ECC)) Q:ECC=""  F  S ECPROS=$O(^ECJ("AP",ECL,ECD,ECC,ECPROS)) Q:ECPROS=""  D SET
"RTN","ECHECK1",18,0)
ALL ;set info for all proc
"RTN","ECHECK1",19,0)
 S CNT=0 F CNT=0:0 S CNT=$O(^TMP("ECPRO",$J,CNT)) Q:'CNT  D
"RTN","ECHECK1",20,0)
 .S ECPROF=$P(^TMP("ECPRO",$J,CNT),"^"),ECPIEN=$P(^(CNT),"^",2),ECPROPP=+ECPROF,ECPROF=$S(ECPROF["EC":725,ECPROF["ICPT":81,1:"UNKNOWN"),OK=0
"RTN","ECHECK1",21,0)
 .I ECPROF=725 S NODE1=$G(^EC(725,ECPROPP,0)),ECPRONAM=$S($P($G(NODE1),"^")]"":$P(NODE1,"^"),1:"UNKNOWN"),NATN=$P(NODE1,"^",2),OK=1
"RTN","ECHECK1",22,0)
 .I ECPROF=81 S NODE1=$$CPT^ICPTCOD(ECPROPP),ECPRONAM=$S($P($G(NODE1),"^",3)]"":$P(NODE1,"^",3),1:"UNKNOWN"),NATN=$S($P(NODE1,"^",2)]"":$P(NODE1,"^",2),1:"NOT DEFINED"),OK=1
"RTN","ECHECK1",23,0)
 .S:'OK ECPRONAM="UNKNOWN"
"RTN","ECHECK1",24,0)
 .S NODE1=$G(^ECJ(ECPIEN,0)),ECTEMP=$P(NODE1,"^",2)
"RTN","ECHECK1",25,0)
 .;The ECACTIV variable allows users to select inactivate
"RTN","ECHECK1",26,0)
 .;procedures from the Inactivate Event Code Screen option.
"RTN","ECHECK1",27,0)
 .I '$G(ECACTIV)  I ECTEMP,ECTEMP'>DT K ECPIEN,ECPROF,ECPROPP,ECPRONAM,ECTEMP,NODE1,NOD2,SYN,NATN,VOL Q
"RTN","ECHECK1",28,0)
 .S NODE2=$G(^ECJ(ECPIEN,"PRO")),SYN=$S($P(NODE2,"^",2)]"":$P(NODE2,"^",2),1:"NOT DEFINED"),VOL=$P(NODE2,"^",3)
"RTN","ECHECK1",29,0)
 .S ^TMP("ECPRO",$J,CNT)=^TMP("ECPRO",$J,CNT)_"^"_SYN_"^"_ECPRONAM_"^"_NATN_"^"_VOL_"^"_ECPROF_"^"_ECPROPP_"^"_ECTEMP
"RTN","ECHECK1",30,0)
 .S ^TMP("ECPRO",$J,"B",ECPRONAM,CNT)="",^TMP("ECPRO",$J,"SYN",SYN,CNT)="",^TMP("ECPRO",$J,"N",NATN,CNT)=""
"RTN","ECHECK1",31,0)
 K ECPIEN,ECPROF,ECPROPP,ECPRONAM,ECTEMP,NODE1,NODE2,SYN,NATN,VOL
"RTN","ECHECK1",32,0)
 Q
"RTN","ECHECK1",33,0)
SET ;set proc in ^tmp
"RTN","ECHECK1",34,0)
 S ECPIEN=$O(^ECJ("AP",ECL,ECD,ECC,ECPROS,0))
"RTN","ECHECK1",35,0)
 ;The ECACTIV variable allows users to select inactivate
"RTN","ECHECK1",36,0)
 ;procedures from the Inactivate Event Code Screen option.
"RTN","ECHECK1",37,0)
 I '$G(ECACTIV)  I $P($G(^ECJ(ECPIEN,0)),"^",2),$P($G(^ECJ(ECPIEN,0)),"^",2)'>DT Q
"RTN","ECHECK1",38,0)
 ;remove inactive procedures
"RTN","ECHECK1",39,0)
 S NODE1=$S(ECPROS[";ICPT(":+ECPROS,1:$P($G(^EC(725,+ECPROS,0)),U,5))
"RTN","ECHECK1",40,0)
 I NODE1'="" S NODE1=$$CPT^ICPTCOD(NODE1,$G(ECDT)) Q:+NODE1<0  I '$P(NODE1,U,7) Q
"RTN","ECHECK1",41,0)
 S CNT=CNT+1
"RTN","ECHECK1",42,0)
 S ^TMP("ECPRO",$J,CNT)=ECPROS_"^"_ECPIEN
"RTN","ECHECK1",43,0)
 Q
"RTN","ECMFECS")
0^17^B20761766
"RTN","ECMFECS",1,0)
ECMFECS ;ALB/JAM-Event Capture Management - Event Code Screen Filer;27 Nov 00
"RTN","ECMFECS",2,0)
 ;;2.0; EVENT CAPTURE ;**25,33,47**;8 May 96
"RTN","ECMFECS",3,0)
 ;
"RTN","ECMFECS",4,0)
FILE ;Used by the RPC broker to file EC Code Screens in file #720.3
"RTN","ECMFECS",5,0)
 ;     Variables passed in
"RTN","ECMFECS",6,0)
 ;       ECIEN     - IEN of #720.3, if editing
"RTN","ECMFECS",7,0)
 ;       ECL       - Location
"RTN","ECMFECS",8,0)
 ;       ECD       - DSS Unit
"RTN","ECMFECS",9,0)
 ;       ECC       - Category
"RTN","ECMFECS",10,0)
 ;       ECP       - Procedure
"RTN","ECMFECS",11,0)
 ;       ECST      - Event code screen status
"RTN","ECMFECS",12,0)
 ;       ECSYN     - Synonym
"RTN","ECMFECS",13,0)
 ;       ECVOL     - Volume
"RTN","ECMFECS",14,0)
 ;       ECAC      - Associated Clinic
"RTN","ECMFECS",15,0)
 ;       ECREAS    - Reason indicator
"RTN","ECMFECS",16,0)
 ;       ECRES0..n - array of reasons
"RTN","ECMFECS",17,0)
 ;
"RTN","ECMFECS",18,0)
 ;     Variable return
"RTN","ECMFECS",19,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #720.3^Message
"RTN","ECMFECS",20,0)
 ;
"RTN","ECMFECS",21,0)
 N ECCH,ECERR,ECX,ECY,ECFLG,ECR,ECI,X,Y,DIK,DIE
"RTN","ECMFECS",22,0)
 S ECERR=0 D CHKDT I ECERR Q
"RTN","ECMFECS",23,0)
 D VALDATA I ECERR Q
"RTN","ECMFECS",24,0)
 I ECIEN'="" S ECFLG=0,ECX=$G(^ECJ(ECIEN,0)),ECY=$P(ECX,U) D  I ECERR Q
"RTN","ECMFECS",25,0)
 .I ECX="" D  Q
"RTN","ECMFECS",26,0)
 ..S ECERR=1,^TMP($J,"ECMSG",1)="0^Event Code Screen Not on File" Q
"RTN","ECMFECS",27,0)
 .S ECL=$P(ECY,"-"),ECD=$P(ECY,"-",2),ECC=$P(ECY,"-",3),ECP=$P(ECY,"-",4)
"RTN","ECMFECS",28,0)
 .I ECST="A",$P(ECX,U,2)'="" S DA=ECIEN,DIE="^ECJ(",DR="1///@" D ^DIE Q
"RTN","ECMFECS",29,0)
 .I ECST="I",$P(ECX,U,2)="" S $P(^ECJ(ECIEN,0),U,2)=DT
"RTN","ECMFECS",30,0)
 S ECC=$G(ECC,0),ECCH=ECL_"-"_ECD_"-"_ECC_"-"_ECP
"RTN","ECMFECS",31,0)
 I '$P($G(^ECD(ECD,0)),U,11),ECC D  Q
"RTN","ECMFECS",32,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^DSS Unit/Category inconsistency" Q
"RTN","ECMFECS",33,0)
 I ECIEN="" D  I ECERR Q
"RTN","ECMFECS",34,0)
 .I $D(^ECJ("B",ECCH)) D  Q
"RTN","ECMFECS",35,0)
 ..S ECERR=1,^TMP($J,"ECMSG",1)="0^EC Screen Exist" Q
"RTN","ECMFECS",36,0)
 .D NEWIEN
"RTN","ECMFECS",37,0)
 S DA=ECIEN,DIK="^ECJ(",ECREAS=$S(ECREAS="Y":1,1:0) D IX^DIK
"RTN","ECMFECS",38,0)
 S ^ECJ("AP",ECL,ECD,ECC,ECP,ECIEN)="",^ECJ("APP",ECL,ECD,ECP,ECIEN)=""
"RTN","ECMFECS",39,0)
 S $P(^ECJ(ECIEN,"PRO"),U)=ECP,ECAC=$S($G(ECAC)'="":ECAC,1:"@")
"RTN","ECMFECS",40,0)
 S DR="53////"_$S($G(ECSYN)'="":ECSYN,1:"@")_";54////"_$G(ECVOL,1)
"RTN","ECMFECS",41,0)
 S DR=DR_";55////"_$G(ECAC)_";56////"_ECREAS,DIE="^ECJ(",DA=ECIEN
"RTN","ECMFECS",42,0)
 D ^DIE K DA,DR,DIE
"RTN","ECMFECS",43,0)
 I $D(DTOUT) D RECDEL S ^TMP($J,"ECMSG",1)="0^Record not Filed" Q
"RTN","ECMFECS",44,0)
 I ECREAS D
"RTN","ECMFECS",45,0)
 .K DIC,DA,DR,ECX S DIC="^ECL(",DIC(0)="L",DLAYGO=720.5,ECR=0
"RTN","ECMFECS",46,0)
 .F ECI=0:1 S ECX="ECRES"_ECI Q:'$D(@ECX)  S ECR=(@ECX) D
"RTN","ECMFECS",47,0)
 ..Q:ECR=""  I '$D(^ECR(ECR,0)) Q
"RTN","ECMFECS",48,0)
 ..I '$D(^ECL("AD",ECIEN,ECR)) S X=ECR,DIC("DR")=".02////"_ECIEN
"RTN","ECMFECS",49,0)
 ..K DD,DO,DLAYGO D FILE^DICN
"RTN","ECMFECS",50,0)
 S ^TMP($J,"ECMSG",1)="1^Record Filed"_U_ECIEN
"RTN","ECMFECS",51,0)
 Q
"RTN","ECMFECS",52,0)
 ;
"RTN","ECMFECS",53,0)
VALDATA ;validate data
"RTN","ECMFECS",54,0)
 N ECRRX
"RTN","ECMFECS",55,0)
 S DIC="^DIC(4,",DIC(0)="NX",X=ECL D ^DIC I Y=-1 D  Q
"RTN","ECMFECS",56,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Location"
"RTN","ECMFECS",57,0)
 S DIC="^ECD(",DIC(0)="NX",X=ECD D ^DIC I Y=-1 D  Q
"RTN","ECMFECS",58,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid DSS Unit"
"RTN","ECMFECS",59,0)
 I ECC S DIC="^EC(726,",DIC(0)="NX",X=ECC D ^DIC I Y=-1 D  Q
"RTN","ECMFECS",60,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Category"
"RTN","ECMFECS",61,0)
 I ECP'="" D  I ECERR Q
"RTN","ECMFECS",62,0)
 .I ECP["ICPT" S ECRRX=$$CPT^ICPTCOD(+ECP) I +ECRRX>0,$P(ECRRX,U,7) Q
"RTN","ECMFECS",63,0)
 .I ECP["EC",$D(^EC(725,+ECP,0)) Q
"RTN","ECMFECS",64,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure"
"RTN","ECMFECS",65,0)
 I $G(ECAC)'="" D CHK^DIE(720.3,55,"E","`"_ECAC,.ECRRX) I ECRRX'=ECAC D  Q
"RTN","ECMFECS",66,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Associated Clinic"
"RTN","ECMFECS",67,0)
 I $G(ECSYN)'="" D CHK^DIE(720.3,53,"E",ECSYN,.ECRRX) I ECRRX'=ECSYN D  Q
"RTN","ECMFECS",68,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Synonyn"
"RTN","ECMFECS",69,0)
 I "^N^Y^"'[U_ECREAS_U D  Q
"RTN","ECMFECS",70,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Reason Response"
"RTN","ECMFECS",71,0)
 Q
"RTN","ECMFECS",72,0)
RECDEL ; Delete record
"RTN","ECMFECS",73,0)
 I ECFLG S DA=ECIEN,DIK="^ECJ(" D ^DIK K DA,DIK
"RTN","ECMFECS",74,0)
 Q
"RTN","ECMFECS",75,0)
 ;
"RTN","ECMFECS",76,0)
NEWIEN ;Create new IEN in file #720.3
"RTN","ECMFECS",77,0)
 N DIC,DA,DD,DO
"RTN","ECMFECS",78,0)
 L +^ECJ(0)
"RTN","ECMFECS",79,0)
 S X=ECCH,DIC="^ECJ(",DIC(0)="L",DLAYGO=720.3 D FILE^DICN
"RTN","ECMFECS",80,0)
 L -^ECJ(0)
"RTN","ECMFECS",81,0)
 S ECIEN=+Y,$P(^ECJ(ECIEN,0),U,3)=DT,$P(^ECJ(ECIEN,"PRO"),U)=ECP
"RTN","ECMFECS",82,0)
 I ECST="I" S $P(^ECJ(ECIEN,0),U,2)=DT
"RTN","ECMFECS",83,0)
 Q
"RTN","ECMFECS",84,0)
CHKDT ;Required Data Check
"RTN","ECMFECS",85,0)
 N I,C
"RTN","ECMFECS",86,0)
 S C=1
"RTN","ECMFECS",87,0)
 F I="ECL","ECD","ECC","ECP","ECREAS" D
"RTN","ECMFECS",88,0)
 .I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key data missing "_I,C=C+1,ECERR=1
"RTN","ECMFECS",89,0)
 Q
"RTN","ECMFECS",90,0)
REASON ;Used by the RPC broker to file EC Reasons in file #720.4
"RTN","ECMFECS",91,0)
 ;     Variables passed in
"RTN","ECMFECS",92,0)
 ;       ECIEN     - IEN of #720.4, if editing
"RTN","ECMFECS",93,0)
 ;       ECRES     - Reason
"RTN","ECMFECS",94,0)
 ;       ECST      - Reason status
"RTN","ECMFECS",95,0)
 ;
"RTN","ECMFECS",96,0)
 ;     Variable return
"RTN","ECMFECS",97,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #720.4^Message
"RTN","ECMFECS",98,0)
 ;
"RTN","ECMFECS",99,0)
 N ECOST,ECERR,ECFLG,X,Y,DIC,DIE
"RTN","ECMFECS",100,0)
 S ECERR=0 I $G(ECRES)="" D  I ECERR Q
"RTN","ECMFECS",101,0)
 .S ^TMP($J,"ECMSG",1)="0^Key data missing - Reason",ECERR=1
"RTN","ECMFECS",102,0)
 D CHK^DIE(720.4,.01,,ECRES,.ECRRX) I ECRRX="^" D  Q
"RTN","ECMFECS",103,0)
 .S ^TMP($J,"ECMSG",1)="0^Invalid Reason",ECERR=1
"RTN","ECMFECS",104,0)
 S ECST=$G(ECST,"A")
"RTN","ECMFECS",105,0)
 I "^I^A^"'[U_ECST_U S ^TMP($J,"ECMSG",1)="0^Invalid Reason Status" Q
"RTN","ECMFECS",106,0)
 S ECST=$S(ECST="I":0,1:1),ECIEN=$G(ECIEN),ECFLG=1
"RTN","ECMFECS",107,0)
 I ECIEN'="" S ECFLG=0 I $G(^ECR(ECIEN,0))="" D  I ECERR K ECST Q
"RTN","ECMFECS",108,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Reason Not on File" Q
"RTN","ECMFECS",109,0)
 I ECIEN="" D  I ECERR K ECST Q
"RTN","ECMFECS",110,0)
 .I $D(^ECR("B",ECRES)) S ECERR=1,^TMP($J,"ECMSG",1)="0^Reason Exist" Q
"RTN","ECMFECS",111,0)
 .K DIE,DR,DA
"RTN","ECMFECS",112,0)
 .L +^ECR(0)
"RTN","ECMFECS",113,0)
 .S X=ECRES,DIC="^ECR(",DIC(0)="L",DLAYGO=720.4 D FILE^DICN
"RTN","ECMFECS",114,0)
 .L -^ECR(0)
"RTN","ECMFECS",115,0)
 .S ECIEN=+Y
"RTN","ECMFECS",116,0)
 S ECOST=$P($G(^ECR(ECIEN,0)),U,2)
"RTN","ECMFECS",117,0)
 I ECST'=ECOST D
"RTN","ECMFECS",118,0)
 .S DIE=DIC,DA=ECIEN,DR=".02////"_ECST D ^DIE
"RTN","ECMFECS",119,0)
 S ^TMP($J,"ECMSG",1)="1^Reason Filed"_U_ECIEN K ECST
"RTN","ECMFECS",120,0)
 Q
"RTN","ECMLMN")
0^16^B56374552
"RTN","ECMLMN",1,0)
ECMLMN ;ALB/ESD - Multiple patients processing ;26 AUG 1997 14:42
"RTN","ECMLMN",2,0)
 ;;2.0; EVENT CAPTURE ;**5,10,15,13,17,18,23,42,47**;8 May 96
"RTN","ECMLMN",3,0)
 ;
"RTN","ECMLMN",4,0)
 ;
"RTN","ECMLMN",5,0)
EN ;- Entry point for multiple patients (part of Multiple Dates/Procs option)
"RTN","ECMLMN",6,0)
 ;
"RTN","ECMLMN",7,0)
 N ECGO,ECNXT,ECPAT,ECORD,ECPCE,ECPCEQ,ECS
"RTN","ECMLMN",8,0)
 ;
"RTN","ECMLMN",9,0)
 ;- Ask patient related questions
"RTN","ECMLMN",10,0)
 D ENPAT(.ECGO)
"RTN","ECMLMN",11,0)
 ;
"RTN","ECMLMN",12,0)
 ;- ListMan entry point
"RTN","ECMLMN",13,0)
 I +$G(ECGO)=1 D EN^VALM("EC MUL PATIENTS")
"RTN","ECMLMN",14,0)
 ;
"RTN","ECMLMN",15,0)
 Q
"RTN","ECMLMN",16,0)
 ;
"RTN","ECMLMN",17,0)
ENPAT(ECFL,ECONE) ;- Ask patient name, ordering section, inpat/outpat,
"RTN","ECMLMN",18,0)
 ;                  dx, assoc clinic, and classification questions
"RTN","ECMLMN",19,0)
 ;                  (AO, IR, EC, SC, MST, HNC)
"RTN","ECMLMN",20,0)
 ;
"RTN","ECMLMN",21,0)
SEL K ECNXT,ECPAT,ECORD,ECPCE,ECPCEQ,ECS
"RTN","ECMLMN",22,0)
 S ECFL=1,ECS=""
"RTN","ECMLMN",23,0)
 ;
"RTN","ECMLMN",24,0)
 ;- Patient name
"RTN","ECMLMN",25,0)
 S ECNXT=$$ASKPAT^ECMUTL1(.ECPAT)
"RTN","ECMLMN",26,0)
 I ECNXT=-1!((ECNXT=-2)&('$D(^TMP("ECPAT",$J)))) S ECFL=-1 G ENPATQ
"RTN","ECMLMN",27,0)
 I ECNXT=-2,$D(^TMP("ECPAT",$J)) G ENPATQ
"RTN","ECMLMN",28,0)
 ;
"RTN","ECMLMN",29,0)
 ;- Inpatient/outpatient status (in ECPCE("I/O"))
"RTN","ECMLMN",30,0)
 I '$$INOUT^ECMUTL1(ECPAT) G ENPATQ
"RTN","ECMLMN",31,0)
 ;
"RTN","ECMLMN",32,0)
 ;- Patient eligibility (in ECPCE("ELIG"))
"RTN","ECMLMN",33,0)
 D ASKELIG^ECMUTL1(ECDSSU,ECPCE("I/O"),ECPAT)
"RTN","ECMLMN",34,0)
 ;
"RTN","ECMLMN",35,0)
 ;- Display inpatient/outpatient status on screen
"RTN","ECMLMN",36,0)
 D DSPSTAT^ECUTL0(ECPCE("I/O"))
"RTN","ECMLMN",37,0)
 ;
"RTN","ECMLMN",38,0)
 ;- Ordering section
"RTN","ECMLMN",39,0)
 S ECORD=$$ASKORD^ECMUTL1
"RTN","ECMLMN",40,0)
 I 'ECORD D REMOVE^ECMUTL1(ECPAT) G ENPATQ
"RTN","ECMLMN",41,0)
 ;
"RTN","ECMLMN",42,0)
 ;- Send Event Code Screen IEN of first procedure (used only if 'Send to
"RTN","ECMLMN",43,0)
 ;  PCE' fld in DSS Unit file is 'N' and patient is an inpatient)
"RTN","ECMLMN",44,0)
 ;
"RTN","ECMLMN",45,0)
 I $P($G(^TMP("ECMPIDX",$J,1)),"^",3)]"" S ECS=$O(^ECJ("AP",ECL,+$P(ECDSSU,"^"),+ECCAT,$P($G(^TMP("ECMPIDX",$J,1)),"^",3),0))
"RTN","ECMLMN",46,0)
 ;
"RTN","ECMLMN",47,0)
 ;- Dx, associated clinic, and classification questions
"RTN","ECMLMN",48,0)
 S ECPCEQ=$$PCEDAT^ECMUTL1(+$P(ECDSSU,"^"),ECS,.ECPCE)
"RTN","ECMLMN",49,0)
 I ECPCEQ>0 D REMOVE^ECMUTL1(ECPAT) G ENPATQ
"RTN","ECMLMN",50,0)
 I ECPCEQ=0 D BLDPAT
"RTN","ECMLMN",51,0)
ENPATQ I '$G(ECONE),ECNXT>0 W ! G SEL
"RTN","ECMLMN",52,0)
 Q
"RTN","ECMLMN",53,0)
 ;
"RTN","ECMLMN",54,0)
 ;
"RTN","ECMLMN",55,0)
BLDPAT ;- Build ^TMP("ECPAT",$J) array with patient data
"RTN","ECMLMN",56,0)
 ;
"RTN","ECMLMN",57,0)
 N ECNODE,ECNUM
"RTN","ECMLMN",58,0)
 S ECNUM=2
"RTN","ECMLMN",59,0)
 S $P(^TMP("ECPAT",$J,$P(ECPAT,"^")),"^",12)=""
"RTN","ECMLMN",60,0)
 S $P(^TMP("ECPAT",$J,$P(ECPAT,"^")),"^",1)=$P(ECPAT,"^",2)
"RTN","ECMLMN",61,0)
 S $P(^TMP("ECPAT",$J,$P(ECPAT,"^")),"^",2)=+$P(ECORD,"^")
"RTN","ECMLMN",62,0)
 F ECNODE="I/O","CLIN","CLINNM","DX","DXNM","AO","ENV","IR","SC","ELIG","MST","HNC" D
"RTN","ECMLMN",63,0)
 . S ECNUM=ECNUM+1
"RTN","ECMLMN",64,0)
 . S $P(^TMP("ECPAT",$J,$P(ECPAT,"^")),"^",ECNUM)=$S(ECNODE="CLINNM":$P($G(ECPCE("CLIN")),"^",2),ECNODE="DXNM":$P($G(ECPCE("DX")),"^",2),1:$P($G(ECPCE(ECNODE)),"^"))
"RTN","ECMLMN",65,0)
 I $D(ECPCE("DXS")) M ^TMP("ECPAT",$J,$P(ECPAT,"^"),"DXS")=ECPCE("DXS")
"RTN","ECMLMN",66,0)
 Q
"RTN","ECMLMN",67,0)
 ;
"RTN","ECMLMN",68,0)
 ;
"RTN","ECMLMN",69,0)
HDR ;- Header
"RTN","ECMLMN",70,0)
 ;
"RTN","ECMLMN",71,0)
 S VALMHDR(1)=" Location: "_$G(ECLN)_"  ("_$G(ECL)_")"
"RTN","ECMLMN",72,0)
 S VALMHDR(1)=$$SETSTR^VALM1("Provider #1: "_$P(ECU(1),"^",2),VALMHDR(1),40,30)
"RTN","ECMLMN",73,0)
 S VALMHDR(2)=" DSS Unit: "_$P(ECDSSU,"^",2)
"RTN","ECMLMN",74,0)
 S VALMHDR(2)=$$SETSTR^VALM1("   Category: "_$P(ECCAT,"^",2),VALMHDR(2),40,30)
"RTN","ECMLMN",75,0)
 Q
"RTN","ECMLMN",76,0)
 ;
"RTN","ECMLMN",77,0)
 ;
"RTN","ECMLMN",78,0)
INIT ;-- Init vars and display selected procedures for patient(s)
"RTN","ECMLMN",79,0)
 ;
"RTN","ECMLMN",80,0)
 N ECPTCNT,BL,X,IC,IW,DC,DW,NC,NW,PC,PW,RC,RW,SC,SW
"RTN","ECMLMN",81,0)
 K ^TMP("ECMPT",$J),^TMP("ECMPTIDX",$J)
"RTN","ECMLMN",82,0)
 D CLEAN^VALM10
"RTN","ECMLMN",83,0)
 ;
"RTN","ECMLMN",84,0)
 S (VALMCNT,ECPTCNT)=0
"RTN","ECMLMN",85,0)
 S BL="",$P(BL," ",30)=""
"RTN","ECMLMN",86,0)
 S X=VALMDDF("INDEX"),IC=$P(X,"^",2),IW=$P(X,"^",3)
"RTN","ECMLMN",87,0)
 S X=VALMDDF("PATIENT"),PC=$P(X,"^",2),PW=$P(X,"^",3)
"RTN","ECMLMN",88,0)
 S X=VALMDDF("SSN"),SC=$P(X,"^",2),SW=$P(X,"^",3)
"RTN","ECMLMN",89,0)
 ;
"RTN","ECMLMN",90,0)
 D BLD
"RTN","ECMLMN",91,0)
 S $P(^TMP("ECMPT",$J,0),"^",4)=VALMCNT
"RTN","ECMLMN",92,0)
 Q
"RTN","ECMLMN",93,0)
 ;
"RTN","ECMLMN",94,0)
 ;
"RTN","ECMLMN",95,0)
BLD ;- Get data from array for screen display
"RTN","ECMLMN",96,0)
 ;
"RTN","ECMLMN",97,0)
 N DFN,ECDFN,ECX,VA,VAERR
"RTN","ECMLMN",98,0)
 S ECDFN=0 F  S ECDFN=$O(^TMP("ECPAT",$J,ECDFN)) Q:'ECDFN  D
"RTN","ECMLMN",99,0)
 . K DFN S DFN=ECDFN D PID^VADPT6
"RTN","ECMLMN",100,0)
 . D BLDLM
"RTN","ECMLMN",101,0)
 . D PRDSP
"RTN","ECMLMN",102,0)
 Q
"RTN","ECMLMN",103,0)
 ;
"RTN","ECMLMN",104,0)
 ;
"RTN","ECMLMN",105,0)
BLDLM ;- Display patient data
"RTN","ECMLMN",106,0)
 ;
"RTN","ECMLMN",107,0)
 K ECX
"RTN","ECMLMN",108,0)
 S ECPTCNT=ECPTCNT+1,ECX="",$P(ECX," ",VALMWD+1)=""
"RTN","ECMLMN",109,0)
 S ECX=$E(ECX,1,IC-1)_$E(ECPTCNT_BL,1,IW)_$E(ECX,IC+IW+1,VALMWD)
"RTN","ECMLMN",110,0)
 S ECX=$E(ECX,1,PC-1)_$E($P(^TMP("ECPAT",$J,ECDFN),"^")_BL,1,PW)_$E(ECX,PC+PW+1,VALMWD)
"RTN","ECMLMN",111,0)
 S ECX=$E(ECX,1,SC-1)_$E($G(VA("PID"))_BL,1,SW)_$E(ECX,SC+SW+1,VALMWD)
"RTN","ECMLMN",112,0)
 ;
"RTN","ECMLMN",113,0)
 D SET(ECX)
"RTN","ECMLMN",114,0)
 ;
"RTN","ECMLMN",115,0)
 ;- Tmp array ECMPTIDX contains:
"RTN","ECMLMN",116,0)
 ;  Cnt^DFN^Name^Ord Sect^In/Out^Clin^Clin Nam^DX^DX Nam^AO^EC^IR^SC^Elig^MST^HNC
"RTN","ECMLMN",117,0)
 ;
"RTN","ECMLMN",118,0)
 S ^TMP("ECMPTIDX",$J,ECPTCNT)=VALMCNT_"^"_ECDFN_"^"_$G(^TMP("ECPAT",$J,ECDFN))
"RTN","ECMLMN",119,0)
 ;- Set secondary diagnosis codes in array ECMPTIDX
"RTN","ECMLMN",120,0)
 I $D(^TMP("ECPAT",$J,ECDFN,"DXS")) D
"RTN","ECMLMN",121,0)
 . M ^TMP("ECMPTIDX",$J,ECPTCNT,"DXS")=^TMP("ECPAT",$J,ECDFN,"DXS")
"RTN","ECMLMN",122,0)
 Q
"RTN","ECMLMN",123,0)
 ;
"RTN","ECMLMN",124,0)
 ;
"RTN","ECMLMN",125,0)
SET(X) ;- Create ^TMP("ECMPT",$J) array for screen display
"RTN","ECMLMN",126,0)
 ;
"RTN","ECMLMN",127,0)
 S VALMCNT=VALMCNT+1,^TMP("ECMPT",$J,VALMCNT,0)=X
"RTN","ECMLMN",128,0)
 S ^TMP("ECMPT",$J,"IDX",VALMCNT,ECPTCNT)=""
"RTN","ECMLMN",129,0)
 Q
"RTN","ECMLMN",130,0)
 ;
"RTN","ECMLMN",131,0)
 ;
"RTN","ECMLMN",132,0)
PRDSP ;- Display selected procedure dates/times and procedures
"RTN","ECMLMN",133,0)
 ;
"RTN","ECMLMN",134,0)
 N I,X,J,ECCPT,ECPR
"RTN","ECMLMN",135,0)
 S I=0
"RTN","ECMLMN",136,0)
 D SET("")
"RTN","ECMLMN",137,0)
 D SET($$SETSTR^VALM1("Procedure(s):","",8,13))
"RTN","ECMLMN",138,0)
 D CNTRL^VALM10(VALMCNT,8,13,IORVON,IORVOFF)
"RTN","ECMLMN",139,0)
 ;
"RTN","ECMLMN",140,0)
 F  S I=$O(^TMP("ECMPIDX",$J,I)) Q:'I  D
"RTN","ECMLMN",141,0)
 . S X=""
"RTN","ECMLMN",142,0)
 . S X=$$SETSTR^VALM1($$FTIME^VALM1($P($G(^TMP("ECMPIDX",$J,I)),"^",2)),X,10,18)
"RTN","ECMLMN",143,0)
 . S X=$$SETSTR^VALM1($P($P($G(^TMP("ECMPIDX",$J,I)),"^",3),";"),X,34,5)
"RTN","ECMLMN",144,0)
 . S ECCPT=$P(^TMP("ECMPIDX",$J,I),"^",3)
"RTN","ECMLMN",145,0)
 . S ECCPT=$S(ECCPT["ICPT":+ECCPT,1:$P($G(^EC(725,+ECCPT,0)),"^",5))
"RTN","ECMLMN",146,0)
 . I ECCPT'="" S ECCPT=$P($$CPT^ICPTCOD(ECCPT,$P(^TMP("ECMPIDX",$J,I),"^",2)),"^",2)
"RTN","ECMLMN",147,0)
 . S ECPR=$S(ECCPT'="":ECCPT_" ",1:ECCPT)_$P(^TMP("ECMPIDX",$J,I),"^",4)
"RTN","ECMLMN",148,0)
 . S X=$$SETSTR^VALM1(ECPR,X,42,VALMWD)
"RTN","ECMLMN",149,0)
 . D SET(X)
"RTN","ECMLMN",150,0)
 . ;set modifier in ^TMP global for display 
"RTN","ECMLMN",151,0)
 . S J="" F  S J=$O(^TMP("ECMPIDX",$J,I,"MOD",J)) Q:J=""  S X="" D
"RTN","ECMLMN",152,0)
 . . S X=$$SETSTR^VALM1("  - "_J_" "_$P(^TMP("ECMPIDX",$J,I,"MOD",J),"^"),X,41,VALMWD)
"RTN","ECMLMN",153,0)
 . . D SET(X)
"RTN","ECMLMN",154,0)
 ;
"RTN","ECMLMN",155,0)
 D SET("")
"RTN","ECMLMN",156,0)
 ;
"RTN","ECMLMN",157,0)
PRDSPQ Q
"RTN","ECMLMN",158,0)
 ;
"RTN","ECMLMN",159,0)
HLPS ;- Brief help
"RTN","ECMLMN",160,0)
 ;
"RTN","ECMLMN",161,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","ECMLMN",162,0)
 Q
"RTN","ECMLMN",163,0)
 ;
"RTN","ECMLMN",164,0)
HELP ;- Help for list
"RTN","ECMLMN",165,0)
 S ECZ=""
"RTN","ECMLMN",166,0)
 I $D(X),X'["??" D HLPS,PAUSE^VALM1 G HLPQ
"RTN","ECMLMN",167,0)
 D CLEAR^VALM1
"RTN","ECMLMN",168,0)
 F I=1:1 S ECZ=$P($T(HELPTXT+I),";",3,99) Q:ECZ="$END"  D PAUSE^VALM1:ECZ="$PAUSE" Q:'Y  W !,$S(ECZ["$PAUSE":"",1:ECZ)
"RTN","ECMLMN",169,0)
 W !,"Possible actions are the following:"
"RTN","ECMLMN",170,0)
 D HLPS,PAUSE^VALM1 S VALMBCK="R"
"RTN","ECMLMN",171,0)
HLPQ K ECZ,Y,I Q
"RTN","ECMLMN",172,0)
 ;
"RTN","ECMLMN",173,0)
EXIT ;- Clean up and exit
"RTN","ECMLMN",174,0)
 ;
"RTN","ECMLMN",175,0)
 K ECPLST
"RTN","ECMLMN",176,0)
  K ^TMP("ECPAT",$J),^TMP("ECMPT",$J)
"RTN","ECMLMN",177,0)
 K VALMDDF
"RTN","ECMLMN",178,0)
 D CLEAN^VALM10,CLEAR^VALM1
"RTN","ECMLMN",179,0)
 Q
"RTN","ECMLMN",180,0)
 ;
"RTN","ECMLMN",181,0)
 ;
"RTN","ECMLMN",182,0)
PATDEL ;- Entry point for EC MUL PAT DEL protocol
"RTN","ECMLMN",183,0)
 ;
"RTN","ECMLMN",184,0)
 N ECFND,ECI,ECSEL,VALMY
"RTN","ECMLMN",185,0)
 S VALMBCK=""
"RTN","ECMLMN",186,0)
 D FULL^VALM1
"RTN","ECMLMN",187,0)
 D EN^VALM2(XQORNOD(0))
"RTN","ECMLMN",188,0)
 S (ECFND,ECSEL)=0
"RTN","ECMLMN",189,0)
 F  S ECSEL=$O(VALMY(ECSEL)) Q:'ECSEL  D
"RTN","ECMLMN",190,0)
 . I $D(^TMP("ECMPTIDX",$J,ECSEL)) K ECDAT S ECDAT=^(ECSEL) D
"RTN","ECMLMN",191,0)
 .. S ECI=0 F  S ECI=$O(^TMP("ECPAT",$J,ECI)) Q:'ECI!(ECFND)  D
"RTN","ECMLMN",192,0)
 ... I $P(ECDAT,"^",2)=ECI S ECFND=1 K ^TMP("ECPAT",$J,ECI) D REMOVNM(ECI)
"RTN","ECMLMN",193,0)
 .. I ECFND=0 W !!,*7,">>> This patient could not be found. <<<" D PAUSE^VALM1 Q
"RTN","ECMLMN",194,0)
 I ECFND=1 D INIT^ECMLMN
"RTN","ECMLMN",195,0)
 S VALMBCK="R"
"RTN","ECMLMN",196,0)
 K ECDAT
"RTN","ECMLMN",197,0)
PATDELQ Q
"RTN","ECMLMN",198,0)
 ;
"RTN","ECMLMN",199,0)
 ;
"RTN","ECMLMN",200,0)
REMOVNM(ECI) ;- Remove patient name from array which tracks dup patients
"RTN","ECMLMN",201,0)
 ;
"RTN","ECMLMN",202,0)
 Q:'$G(ECI)
"RTN","ECMLMN",203,0)
 N ECX
"RTN","ECMLMN",204,0)
 S ECX=0
"RTN","ECMLMN",205,0)
 F  S ECX=$O(^TMP("ECPLST",$J,ECX)) Q:'ECX  D
"RTN","ECMLMN",206,0)
 . I +$P($G(^TMP("ECPLST",$J,ECX)),"^")=ECI K ^TMP("ECPLST",$J,ECX)
"RTN","ECMLMN",207,0)
 Q
"RTN","ECMLMN",208,0)
 ;
"RTN","ECMLMN",209,0)
 ;
"RTN","ECMLMN",210,0)
ADDPAT ;- Entry point for EC MUL PAT ADD protocol
"RTN","ECMLMN",211,0)
 ;
"RTN","ECMLMN",212,0)
 N ECADD,ECOK
"RTN","ECMLMN",213,0)
 S VALMBCK=""
"RTN","ECMLMN",214,0)
 D FULL^VALM1
"RTN","ECMLMN",215,0)
 D ENPAT(.ECOK,1)
"RTN","ECMLMN",216,0)
 I +$G(ECOK)=1 D INIT^ECMLMN
"RTN","ECMLMN",217,0)
 I +$G(ECOK)<0 W !!,*7,">>> No patient entered. <<<" D PAUSE^VALM1
"RTN","ECMLMN",218,0)
 S VALMBCK="R"
"RTN","ECMLMN",219,0)
ADDPATQ Q
"RTN","ECMLMN",220,0)
 ;
"RTN","ECMLMN",221,0)
 ;
"RTN","ECMLMN",222,0)
HELPTXT ; - Help text
"RTN","ECMLMN",223,0)
 ;;Enter actions(s) by typing the name(s), or abbreviation(s).
"RTN","ECMLMN",224,0)
 ;;
"RTN","ECMLMN",225,0)
 ;;ACTION DEFINITIONS:
"RTN","ECMLMN",226,0)
 ;;  AP - Add a Patient allows the user to add a Patient to those
"RTN","ECMLMN",227,0)
 ;;        patients previously entered
"RTN","ECMLMN",228,0)
 ;;  DP - Delete a Patient allows the user to delete a patient from
"RTN","ECMLMN",229,0)
 ;;        those patients previously entered
"RTN","ECMLMN",230,0)
 ;;  FP - File Patients will enter the patients into the Event Capture
"RTN","ECMLMN",231,0)
 ;;        procedure database
"RTN","ECMLMN",232,0)
 ;;  
"RTN","ECMLMN",233,0)
 ;; NOTE: The procedures you have entered with this option MUST be filed
"RTN","ECMLMN",234,0)
 ;;       with the 'FP' action for the data to be filed into the Event
"RTN","ECMLMN",235,0)
 ;;       Capture system.
"RTN","ECMLMN",236,0)
 ;;------------------------------------------------------------------------------
"RTN","ECMLMN",237,0)
 ;;$PAUSE
"RTN","ECMLMN",238,0)
 ;;$END
"RTN","ECMLMP")
0^33^B62940646
"RTN","ECMLMP",1,0)
ECMLMP ;ALB/ESD - Multiple procedure dates and procedures ;22 AUG 1997 11:11
"RTN","ECMLMP",2,0)
 ;;2.0; EVENT CAPTURE ;**5,18,47**;8 May 96
"RTN","ECMLMP",3,0)
 ;
"RTN","ECMLMP",4,0)
EN ;- ListMan entry point
"RTN","ECMLMP",5,0)
 ;
"RTN","ECMLMP",6,0)
 D EN^VALM("EC MUL PROCEDURES")
"RTN","ECMLMP",7,0)
 Q
"RTN","ECMLMP",8,0)
 ;
"RTN","ECMLMP",9,0)
HDR ;- Display location, provider #1, DSS Unit, and Category as header
"RTN","ECMLMP",10,0)
 ;
"RTN","ECMLMP",11,0)
 S VALMHDR(1)=" Location: "_$G(ECLN)_"  ("_$G(ECL)_")"
"RTN","ECMLMP",12,0)
 S VALMHDR(1)=$$SETSTR^VALM1("Provider #1: "_$P(ECU(1),"^",2),VALMHDR(1),40,30)
"RTN","ECMLMP",13,0)
 S VALMHDR(2)=" DSS Unit: "_$P(ECDSSU,"^",2)
"RTN","ECMLMP",14,0)
 S VALMHDR(2)=$$SETSTR^VALM1("   Category: "_$P(ECCAT,"^",2),VALMHDR(2),40,30)
"RTN","ECMLMP",15,0)
 ;
"RTN","ECMLMP",16,0)
 Q
"RTN","ECMLMP",17,0)
 ;
"RTN","ECMLMP",18,0)
INIT ;- Initialize variables and call BLD which does processing
"RTN","ECMLMP",19,0)
 ;
"RTN","ECMLMP",20,0)
 N BL,ECPCNT,IC,IW,DC,DW,NC,NW,PC,PW,RC,RW,VC,VW,X,MC,MW
"RTN","ECMLMP",21,0)
 D CLEAN^VALM10
"RTN","ECMLMP",22,0)
 K ^TMP("ECM",$J),^TMP("ECMP",$J),^TMP("ECMPIDX",$J)
"RTN","ECMLMP",23,0)
 ;K XQORNOD,%B
"RTN","ECMLMP",24,0)
 ;
"RTN","ECMLMP",25,0)
 S (VALMCNT,ECPCNT)=0
"RTN","ECMLMP",26,0)
 S BL="",$P(BL," ",30)=""
"RTN","ECMLMP",27,0)
 S X=VALMDDF("INDEX"),IC=$P(X,"^",2),IW=$P(X,"^",3)
"RTN","ECMLMP",28,0)
 S X=VALMDDF("PROC DT"),DC=$P(X,"^",2),DW=$P(X,"^",3)
"RTN","ECMLMP",29,0)
 S X=VALMDDF("PROC NUM"),NC=$P(X,"^",2),NW=$P(X,"^",3)
"RTN","ECMLMP",30,0)
 S X=VALMDDF("PROCEDURE"),PC=$P(X,"^",2),PW=$P(X,"^",3)
"RTN","ECMLMP",31,0)
 S X=VALMDDF("VOL"),VC=$P(X,"^",2),VW=$P(X,"^",3)
"RTN","ECMLMP",32,0)
 S X=VALMDDF("REASON"),RC=$P(X,"^",2),RW=$P(X,"^",3)
"RTN","ECMLMP",33,0)
 S X=VALMDDF("MODIFIER"),MC=$P(X,"^",2),MW=$P(X,"^",3)
"RTN","ECMLMP",34,0)
 ;
"RTN","ECMLMP",35,0)
 D BLD
"RTN","ECMLMP",36,0)
 S $P(^TMP("ECMP",$J,0),"^",4)=VALMCNT
"RTN","ECMLMP",37,0)
 Q
"RTN","ECMLMP",38,0)
 ;
"RTN","ECMLMP",39,0)
BLD ;- Combine arrays and build lines with data for display
"RTN","ECMLMP",40,0)
 ;
"RTN","ECMLMP",41,0)
 D COMBINE
"RTN","ECMLMP",42,0)
 ;
"RTN","ECMLMP",43,0)
 N ECPD,ECNT,ECX
"RTN","ECMLMP",44,0)
 S ECPD=0 F  S ECPD=$O(^TMP("ECM",$J,ECPD)) Q:'ECPD  D
"RTN","ECMLMP",45,0)
 . S ECNT=0 F  S ECNT=$O(^TMP("ECM",$J,ECPD,ECNT)) Q:'ECNT  D BLDLM
"RTN","ECMLMP",46,0)
 ;
"RTN","ECMLMP",47,0)
 Q
"RTN","ECMLMP",48,0)
 ;
"RTN","ECMLMP",49,0)
BLDLM ;- Build each line for display and create ^TMP("ECMPIDX",$J) array
"RTN","ECMLMP",50,0)
 ;
"RTN","ECMLMP",51,0)
 N ECPR,ECCPT K ECX
"RTN","ECMLMP",52,0)
 S ECPCNT=ECPCNT+1,ECX="",$P(ECX," ",VALMWD+1)=""
"RTN","ECMLMP",53,0)
 S ECX=$E(ECX,1,IC-1)_$E(ECPCNT_BL,1,IW)_$E(ECX,IC+IW+1,VALMWD)
"RTN","ECMLMP",54,0)
 S ECX=$E(ECX,1,DC-1)_$E($$FTIME^VALM1(ECPD)_BL,1,DW)_$E(ECX,DC+DW+1,VALMWD)
"RTN","ECMLMP",55,0)
 S ECX=$E(ECX,1,NC-1)_$E($P($P(^TMP("ECM",$J,ECPD,ECNT),"^"),";")_BL,1,NW)_$E(ECX,NC+NW+1,VALMWD)
"RTN","ECMLMP",56,0)
 S ECCPT=$P(^TMP("ECM",$J,ECPD,ECNT),"^")
"RTN","ECMLMP",57,0)
 S ECCPT=$S(ECCPT["ICPT":+ECCPT,1:$P($G(^EC(725,+ECCPT,0)),"^",5))
"RTN","ECMLMP",58,0)
 I ECCPT'="" S ECCPT=$P($$CPT^ICPTCOD(ECCPT,ECPD),U,2)
"RTN","ECMLMP",59,0)
 S ECPR=$S(ECCPT'="":ECCPT_" ",1:ECCPT)_$P(^TMP("ECM",$J,ECPD,ECNT),"^",2)
"RTN","ECMLMP",60,0)
 S ECX=$E(ECX,1,PC-1)_$E($E(ECPR,1,30)_BL,1,PW)_$E(ECX,PC+PW+1,VALMWD)
"RTN","ECMLMP",61,0)
 S ECX=$E(ECX,1,VC-1)_$E($P(^TMP("ECM",$J,ECPD,ECNT),"^",5)_BL,1,VW)_$E(ECX,VC+VW+1,VALMWD)
"RTN","ECMLMP",62,0)
 ;
"RTN","ECMLMP",63,0)
 D SET(ECX)
"RTN","ECMLMP",64,0)
 ;
"RTN","ECMLMP",65,0)
 S ^TMP("ECMPIDX",$J,ECPCNT)=VALMCNT_"^"_ECPD_"^"_$P(^TMP("ECM",$J,ECPD,ECNT),"^")_"^"_$P(^TMP("ECM",$J,ECPD,ECNT),"^",2)_"^"_$P(^TMP("ECM",$J,ECPD,ECNT),"^",3)_"^"_$P(^TMP("ECM",$J,ECPD,ECNT),"^",4)_"^"_$P(^TMP("ECM",$J,ECPD,ECNT),"^",5)
"RTN","ECMLMP",66,0)
 ;
"RTN","ECMLMP",67,0)
 I $D(^TMP("ECM",$J,ECPD,ECNT,"MOD")) D  K MOD
"RTN","ECMLMP",68,0)
 . S MOD="",ECX=$E(BL,1,26)_"Modifier:"
"RTN","ECMLMP",69,0)
 . F  S MOD=$O(^TMP("ECM",$J,ECPD,ECNT,"MOD",MOD)) Q:MOD=""  D
"RTN","ECMLMP",70,0)
 . . S ECX=$E(ECX,1,MC-1)_"  - "_MOD_" "_$E($P(^TMP("ECM",$J,ECPD,ECNT,"MOD",MOD),"^")_BL,1,MW)_$E(ECX,MC+MW+1,VALMWD)
"RTN","ECMLMP",71,0)
 . . D SET(ECX) K ECX S ECX=BL_"      "
"RTN","ECMLMP",72,0)
 . M ^TMP("ECMPIDX",$J,ECPCNT,"MOD")=^TMP("ECM",$J,ECPD,ECNT,"MOD")
"RTN","ECMLMP",73,0)
 ;
"RTN","ECMLMP",74,0)
 K ECX
"RTN","ECMLMP",75,0)
 S ECX="                  "
"RTN","ECMLMP",76,0)
 S ECX=$E(ECX,1,RC-1)_"Procedure Reason: "_$E($P(^TMP("ECM",$J,ECPD,ECNT),"^",4)_BL,1,RW)_$E(ECX,RC+RW+1,VALMWD)
"RTN","ECMLMP",77,0)
 D SET(ECX)
"RTN","ECMLMP",78,0)
 K ECX S ECX=BL D SET(ECX)
"RTN","ECMLMP",79,0)
 Q
"RTN","ECMLMP",80,0)
 ;
"RTN","ECMLMP",81,0)
 ;
"RTN","ECMLMP",82,0)
SET(X) ;- Create display array ^TMP("ECMP",$J)
"RTN","ECMLMP",83,0)
 ;
"RTN","ECMLMP",84,0)
 S VALMCNT=VALMCNT+1,^TMP("ECMP",$J,VALMCNT,0)=X
"RTN","ECMLMP",85,0)
 S ^TMP("ECMP",$J,"IDX",VALMCNT,ECPCNT)=""
"RTN","ECMLMP",86,0)
 Q
"RTN","ECMLMP",87,0)
 ;
"RTN","ECMLMP",88,0)
HLPS ;- Brief help
"RTN","ECMLMP",89,0)
 ;
"RTN","ECMLMP",90,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","ECMLMP",91,0)
 Q
"RTN","ECMLMP",92,0)
HELP ;- Help for list
"RTN","ECMLMP",93,0)
 S ECZ=""
"RTN","ECMLMP",94,0)
 I $D(X),X'["??" D HLPS,PAUSE^VALM1 G HLPQ
"RTN","ECMLMP",95,0)
 D CLEAR^VALM1
"RTN","ECMLMP",96,0)
 F I=1:1 S ECZ=$P($T(HELPTXT+I),";",3,99) Q:ECZ="$END"  D PAUSE^VALM1:ECZ="$PAUSE" Q:'Y  W !,$S(ECZ["$PAUSE":"",1:ECZ)
"RTN","ECMLMP",97,0)
 W !,"Possible actions are the following:"
"RTN","ECMLMP",98,0)
 D HLPS,PAUSE^VALM1 S VALMBCK="R"
"RTN","ECMLMP",99,0)
HLPQ K ECZ,Y,I Q
"RTN","ECMLMP",100,0)
 ;
"RTN","ECMLMP",101,0)
EXIT ;- Clean up and exit
"RTN","ECMLMP",102,0)
 ;
"RTN","ECMLMP",103,0)
 K ^TMP("ECPRDT",$J),^TMP("ECPROC",$J)
"RTN","ECMLMP",104,0)
 K ^TMP("ECM",$J),^TMP("ECMP",$J)
"RTN","ECMLMP",105,0)
 K VALMDDF
"RTN","ECMLMP",106,0)
 D CLEAN^VALM10,CLEAR^VALM1
"RTN","ECMLMP",107,0)
 Q
"RTN","ECMLMP",108,0)
 ;
"RTN","ECMLMP",109,0)
COMBINE ;- Combine proc date array and procedure array
"RTN","ECMLMP",110,0)
 ;
"RTN","ECMLMP",111,0)
 N ECNT,ECPDT,ECPR,ECX,ECY
"RTN","ECMLMP",112,0)
 S (ECNT,ECPDT,ECX,ECY)=0,ECPR=""
"RTN","ECMLMP",113,0)
 F  S ECX=$O(^TMP("ECPRDT",$J,ECX)) Q:'ECX  D
"RTN","ECMLMP",114,0)
 . S ECY=0 F  S ECY=$O(^TMP("ECPROC",$J,(ECY))) Q:'ECY  D
"RTN","ECMLMP",115,0)
 .. S ECPR=$G(^TMP("ECPROC",$J,(ECY)))
"RTN","ECMLMP",116,0)
 .. S ECNT=ECNT+1,^TMP("ECM",$J,ECX,ECNT)=$P(ECPR,"^")_"^"_$P(ECPR,"^",2)_"^"_$P(ECPR,"^",3)_"^"_$P(ECPR,"^",4)_"^"_$P(ECPR,"^",5)
"RTN","ECMLMP",117,0)
 .. M ^TMP("ECM",$J,ECX,ECNT,"MOD")=^TMP("ECPROC",$J,ECY,"MOD")
"RTN","ECMLMP",118,0)
 Q
"RTN","ECMLMP",119,0)
 ;
"RTN","ECMLMP",120,0)
 ;
"RTN","ECMLMP",121,0)
PRDTDEL ;- Entry point for EC MUL DEL PROCDT protocol
"RTN","ECMLMP",122,0)
 ;
"RTN","ECMLMP",123,0)
 N ECDATE,ECFND,ECSEL,ECDP,VALMY
"RTN","ECMLMP",124,0)
 S VALMBCK=""
"RTN","ECMLMP",125,0)
 D FULL^VALM1
"RTN","ECMLMP",126,0)
 D EN^VALM2(XQORNOD(0))
"RTN","ECMLMP",127,0)
 S (ECFND,ECSEL)=0
"RTN","ECMLMP",128,0)
 F  S ECSEL=$O(VALMY(ECSEL)) Q:'ECSEL  D
"RTN","ECMLMP",129,0)
 . I $D(^TMP("ECMPIDX",$J,ECSEL)) K ECDAT S ECDAT=^(ECSEL) D
"RTN","ECMLMP",130,0)
 .. S ECDATE=$P(ECDAT,"^",2)
"RTN","ECMLMP",131,0)
 .. S ECDP=0 F  S ECDP=$O(^TMP("ECPRDT",$J,ECDP)) Q:'ECDP!(ECFND)  D
"RTN","ECMLMP",132,0)
 ... I ECDATE=ECDP S ECFND=1 K ^TMP("ECPRDT",$J,ECDP)
"RTN","ECMLMP",133,0)
 .. I ECFND=0 W !!,*7,">>> This procedure date could not be found. <<<" D PAUSE^VALM1 Q
"RTN","ECMLMP",134,0)
 I '$D(^TMP("ECPRDT",$J)) K ^TMP("ECPROC",$J)
"RTN","ECMLMP",135,0)
 I ECFND=1 D INIT^ECMLMP
"RTN","ECMLMP",136,0)
 S VALMBCK="R"
"RTN","ECMLMP",137,0)
 K ECDAT
"RTN","ECMLMP",138,0)
PRDTDLQ Q
"RTN","ECMLMP",139,0)
 ;
"RTN","ECMLMP",140,0)
 ;
"RTN","ECMLMP",141,0)
PRDEL ;- Entry point for EC MUL PROC DEL protocol
"RTN","ECMLMP",142,0)
 ;
"RTN","ECMLMP",143,0)
 N ECDP,ECFND,ECSEL,VALMY
"RTN","ECMLMP",144,0)
 S VALMBCK=""
"RTN","ECMLMP",145,0)
 D FULL^VALM1
"RTN","ECMLMP",146,0)
 D EN^VALM2(XQORNOD(0))
"RTN","ECMLMP",147,0)
 S (ECFND,ECSEL)=0
"RTN","ECMLMP",148,0)
 F  S ECSEL=$O(VALMY(ECSEL)) Q:'ECSEL  D
"RTN","ECMLMP",149,0)
 . I $D(^TMP("ECMPIDX",$J,ECSEL)) K ECI S ECI=^(ECSEL) D
"RTN","ECMLMP",150,0)
 .. S ECDP=0 F  S ECDP=$O(^TMP("ECPROC",$J,ECDP)) Q:'ECDP!(ECFND)  K ECN S ECN=^(ECDP) D
"RTN","ECMLMP",151,0)
 ... I ($P(ECI,"^",3)=$P(ECN,"^")),($P(ECI,"^",4)=$P(ECN,"^",2)),($P(ECI,"^",5)=$P(ECN,"^",3)),($P(ECI,"^",6)=$P(ECN,"^",4)),($P(ECI,"^",7)=$P(ECN,"^",5)) D
"RTN","ECMLMP",152,0)
 .... S ECFND=1 K ^TMP("ECPROC",$J,ECDP)
"RTN","ECMLMP",153,0)
 .. I ECFND=0 W !!,*7,">>> This procedure could not be found. <<<" D PAUSE^VALM1 Q
"RTN","ECMLMP",154,0)
 I '$D(^TMP("ECPROC",$J)) K ^TMP("ECPRDT",$J)
"RTN","ECMLMP",155,0)
 I ECFND=1 D INIT^ECMLMP
"RTN","ECMLMP",156,0)
 S VALMBCK="R"
"RTN","ECMLMP",157,0)
 K ECI,ECN
"RTN","ECMLMP",158,0)
PRDELQ Q
"RTN","ECMLMP",159,0)
 ;
"RTN","ECMLMP",160,0)
 ;
"RTN","ECMLMP",161,0)
PRDTADD ;- Entry point for EC MUL ADD PROCDT protocol
"RTN","ECMLMP",162,0)
 ;
"RTN","ECMLMP",163,0)
 N ECADD
"RTN","ECMLMP",164,0)
 S ECADD=0,VALMBCK=""
"RTN","ECMLMP",165,0)
 D FULL^VALM1
"RTN","ECMLMP",166,0)
 S ECADD=$$ASKPRDT^ECMUTL(+$P(ECDSSU,"^"),1)
"RTN","ECMLMP",167,0)
 I 'ECADD W !!,*7,">>> No Procedure Date entered. <<<" D PAUSE^VALM1 G PRDTADQ
"RTN","ECMLMP",168,0)
 I ECADD=1,'$D(^TMP("ECPROC",$J)) D ASKPRO^ECMUTL(ECL,+$P(ECDSSU,"^"),+$P(ECCAT,"^"),-99)
"RTN","ECMLMP",169,0)
 I ECADD=1,$D(^TMP("ECPROC",$J)) D INIT^ECMLMP
"RTN","ECMLMP",170,0)
 ;
"RTN","ECMLMP",171,0)
PRDTADQ S VALMBCK="R"
"RTN","ECMLMP",172,0)
 Q
"RTN","ECMLMP",173,0)
 ;
"RTN","ECMLMP",174,0)
 ;
"RTN","ECMLMP",175,0)
PRADD ;- Entry point for EC MUL ADD PROC protocol
"RTN","ECMLMP",176,0)
 ;
"RTN","ECMLMP",177,0)
 N ECAP
"RTN","ECMLMP",178,0)
 S VALMBCK=""
"RTN","ECMLMP",179,0)
 D FULL^VALM1
"RTN","ECMLMP",180,0)
 S ECAP="",ECAP=$O(^TMP("ECPROC",$J,ECAP),-1)
"RTN","ECMLMP",181,0)
 I ECAP>0 D
"RTN","ECMLMP",182,0)
 . D ASKPRO^ECMUTL(ECL,+$P(ECDSSU,"^"),+$P(ECCAT,"^"),(ECAP+1))
"RTN","ECMLMP",183,0)
 . D INIT^ECMLMP
"RTN","ECMLMP",184,0)
 I 'ECAP,('$D(^TMP("ECPRDT",$J))) W !!,*7,">>> At least one procedure date must exist before adding a procedure.",!,"    Please add a procedure date first. <<<" D PAUSE^VALM1
"RTN","ECMLMP",185,0)
 S VALMBCK="R"
"RTN","ECMLMP",186,0)
PRADDQ Q
"RTN","ECMLMP",187,0)
 ;
"RTN","ECMLMP",188,0)
 ;
"RTN","ECMLMP",189,0)
HELPTXT ; -- help text
"RTN","ECMLMP",190,0)
 ;;Enter actions(s) by typing the name(s), or abbreviation(s).
"RTN","ECMLMP",191,0)
 ;;
"RTN","ECMLMP",192,0)
 ;;ACTION DEFINITIONS:
"RTN","ECMLMP",193,0)
 ;;  AD - Add a Procedure Date allows the user to add a procedure date
"RTN","ECMLMP",194,0)
 ;;        to procedures previously entered
"RTN","ECMLMP",195,0)
 ;;  DD - Delete a Procedure Date allows the user to delete a procedure
"RTN","ECMLMP",196,0)
 ;;        date from procedures previously entered
"RTN","ECMLMP",197,0)
 ;;  PA - Add a Procedure allows the user to add a procedure to all
"RTN","ECMLMP",198,0)
 ;;        procedure dates previously entered
"RTN","ECMLMP",199,0)
 ;;  PD - Delete a Procedure allows the user to delete a procedure
"RTN","ECMLMP",200,0)
 ;;        from all procedure dates previously entered
"RTN","ECMLMP",201,0)
 ;;  MP - Multiple Patients allows the user to enter the patients
"RTN","ECMLMP",202,0)
 ;;        for the indicated procedure dates and procedures
"RTN","ECMLMP",203,0)
 ;;
"RTN","ECMLMP",204,0)
 ;;  NOTE: After the user has entered procedures and date/times, he or
"RTN","ECMLMP",205,0)
 ;;        she will need to use the 'MP' Action to add patients for the
"RTN","ECMLMP",206,0)
 ;;        entered procedures and date/times.
"RTN","ECMLMP",207,0)
 ;;------------------------------------------------------------------------------
"RTN","ECMLMP",208,0)
 ;;$PAUSE
"RTN","ECMLMP",209,0)
 ;;$END
"RTN","ECMUTL")
0^28^B65491557
"RTN","ECMUTL",1,0)
ECMUTL ;ALB/ESD - Utilities for Multiple Dates/Mult Procs ;20 AUG 1997 13:56
"RTN","ECMUTL",2,0)
 ;;2.0; EVENT CAPTURE ;**5,10,18,33,47**;8 May 96
"RTN","ECMUTL",3,0)
 ;
"RTN","ECMUTL",4,0)
ASKLOC() ; Get Location
"RTN","ECMUTL",5,0)
 ;   Input:      None
"RTN","ECMUTL",6,0)
 ;
"RTN","ECMUTL",7,0)
 ;  Output:      ECL = Location (Division file pointer) ien
"RTN","ECMUTL",8,0)
 ;              ECLN = Location name
"RTN","ECMUTL",9,0)
 ;
"RTN","ECMUTL",10,0)
 D ^ECL
"RTN","ECMUTL",11,0)
 K ECOUT,LOC
"RTN","ECMUTL",12,0)
 Q $S($D(ECL):1,1:0)
"RTN","ECMUTL",13,0)
 ;
"RTN","ECMUTL",14,0)
 ;
"RTN","ECMUTL",15,0)
ASKPRDT(DSSU,ONE) ; Get Procedure Start Date/Time
"RTN","ECMUTL",16,0)
 ;   Input:      ECD = DSS Unit ien
"RTN","ECMUTL",17,0)
 ;               ONE = Ask procedure start date/time once
"RTN","ECMUTL",18,0)
 ;
"RTN","ECMUTL",19,0)
 ;  Output:   ^TMP("ECPRDT",$J) = procedure date/time array
"RTN","ECMUTL",20,0)
 ;
"RTN","ECMUTL",21,0)
 N DTOUT,DUOUT,ECCNT,ECDUP,ECERR
"RTN","ECMUTL",22,0)
 S (ECCNT,ECDUP,ECERR)=0
"RTN","ECMUTL",23,0)
 I '$G(DSSU) G ASKPRDTQ
"RTN","ECMUTL",24,0)
 I $P($G(^ECD(DSSU,0)),"^",12)="N" S DIR("B")="NOW"
"RTN","ECMUTL",25,0)
AGAIN N DIRUT,Y
"RTN","ECMUTL",26,0)
 S DIR("A")="Select "_$S(+ECDUP:"Another Procedure Date and Time",1:"Procedure Date and Time")
"RTN","ECMUTL",27,0)
 S DIR("?")="Enter both date AND time procedure was performed. Future dates are not allowed."
"RTN","ECMUTL",28,0)
 S DIR(0)="DO^:NOW:EXR"
"RTN","ECMUTL",29,0)
 D ^DIR K DIR
"RTN","ECMUTL",30,0)
 I $D(DTOUT)!($D(DUOUT)) S ECERR=1
"RTN","ECMUTL",31,0)
 I +Y S ECDUP=1,^TMP("ECPRDT",$J,Y)="" G @($S('$G(ONE):"AGAIN",1:"ASKPRDTQ"))
"RTN","ECMUTL",32,0)
 ;
"RTN","ECMUTL",33,0)
ASKPRDTQ Q $S(ECERR:0,(+$G(ONE)&(+Y)):1,('$G(ONE))&($D(^TMP("ECPRDT",$J))):1,1:0)
"RTN","ECMUTL",34,0)
 ;
"RTN","ECMUTL",35,0)
 ;
"RTN","ECMUTL",36,0)
ASKCAT(ECL,ECD) ; Get category
"RTN","ECMUTL",37,0)
 ;   Input:      ECL = Location ien
"RTN","ECMUTL",38,0)
 ;               ECD = DSS Unit ien
"RTN","ECMUTL",39,0)
 ;
"RTN","ECMUTL",40,0)
 ;  Output:   ECATEG = Category ien (may be 0 if no categories)
"RTN","ECMUTL",41,0)
 ;
"RTN","ECMUTL",42,0)
 N CATS,DIRUT,ECATEG,ECMAX,X
"RTN","ECMUTL",43,0)
 S ECATEG=0_"^No Categories",(ECMAX,X)=0
"RTN","ECMUTL",44,0)
 I '$G(ECL)!('$G(ECD)) G ASKCATQ
"RTN","ECMUTL",45,0)
 D CATS^ECHECK1
"RTN","ECMUTL",46,0)
 I $O(ECC(0))']"" G ASKCATQ
"RTN","ECMUTL",47,0)
 W !!,"Categories within "_$P($G(^ECD(+ECD,0)),"^")_":",!
"RTN","ECMUTL",48,0)
 F  S X=$O(ECC(X)) Q:'X  W !?5,X_". ",$P(ECC(X),"^",2) S ECMAX=X
"RTN","ECMUTL",49,0)
 W ! S DIR(0)="NA^1:"_ECMAX,DIR("A")="Select Number: "
"RTN","ECMUTL",50,0)
 D ^DIR K DIR
"RTN","ECMUTL",51,0)
 I 'Y!($D(DIRUT)) K ECATEG G ASKCATQ
"RTN","ECMUTL",52,0)
 I +Y S ECATEG=$G(ECC(Y))
"RTN","ECMUTL",53,0)
ASKCATQ K CNT,ECAT,ECC
"RTN","ECMUTL",54,0)
 Q $G(ECATEG)
"RTN","ECMUTL",55,0)
 ;
"RTN","ECMUTL",56,0)
 ;
"RTN","ECMUTL",57,0)
ASKPRO(ECL,ECD,ECC,NUM) ; Ask procedures
"RTN","ECMUTL",58,0)
 ;   Input:      ECL = Location ien
"RTN","ECMUTL",59,0)
 ;               ECD = DSS Unit ien
"RTN","ECMUTL",60,0)
 ;               ECC = Category ien
"RTN","ECMUTL",61,0)
 ;               NUM = Only ask procedure once
"RTN","ECMUTL",62,0)
 ;
"RTN","ECMUTL",63,0)
 ;  Output:  ^TMP("ECPROC",$J) = procedure array
"RTN","ECMUTL",64,0)
 ;
"RTN","ECMUTL",65,0)
 N CNT,ECERR,ECOUNT,ECOUT,ECPCNT,ECP,ECPNM,ECPREV,ECREAS,ECVOLU,ECEXIT
"RTN","ECMUTL",66,0)
 N ECX,ECMOD,ECMODS,ECCPT,ECDT
"RTN","ECMUTL",67,0)
 I '$D(ECL)!('$D(ECD)) G ASKPROQ
"RTN","ECMUTL",68,0)
 S ECC=+$G(ECC)
"RTN","ECMUTL",69,0)
 S ECOUNT=0
"RTN","ECMUTL",70,0)
 S ECDT=$O(^TMP("ECPRDT",$J,0))
"RTN","ECMUTL",71,0)
 D PROS^ECHECK1
"RTN","ECMUTL",72,0)
 I '$O(^TMP("ECPRO",$J,0)) D  G ASKPROQ
"RTN","ECMUTL",73,0)
 . W !!,"Within the ",ECLN," location there are no procedures defined",!
"RTN","ECMUTL",74,0)
 . W "for the DSS Unit ",$P(ECDSSU,"^",2),".",!
"RTN","ECMUTL",75,0)
 . S DIR(0)="E" D ^DIR K DIR,Y
"RTN","ECMUTL",76,0)
 ;
"RTN","ECMUTL",77,0)
SEL ;
"RTN","ECMUTL",78,0)
 K ECPNAME,ECMOD
"RTN","ECMUTL",79,0)
 S (ECPNM,ECPREV,ECREAS,ECX)="",(CNT,ECPCNT,ECP,ECVOLU,ECEXIT)=0
"RTN","ECMUTL",80,0)
 S DIR("?")="^D LISTPR^ECMUTL"
"RTN","ECMUTL",81,0)
 W ! S ECX=$$GETPRO^ECDSUTIL
"RTN","ECMUTL",82,0)
 I +$G(ECX)=-1,('ECOUNT) D MSG^ECBEN2U,KILLV^ECDSUTIL G ASKPROQ
"RTN","ECMUTL",83,0)
 I +$G(ECX)=-1,ECOUNT G ASKPROQ
"RTN","ECMUTL",84,0)
 I +$G(ECX)=1 S ECPREV=$P(ECX,"^",2) D SRCHTM^ECDSUTIL(ECX)
"RTN","ECMUTL",85,0)
 S ECPCNT=+$G(ECPCNT)
"RTN","ECMUTL",86,0)
 I ECPCNT=-1!(ECPCNT=-2) D  G SEL
"RTN","ECMUTL",87,0)
 . D @($S(ECPCNT=-1:"ERRMSG^ECDSUTIL",ECPCNT=-2:"ERRMSG2^ECDSUTIL"))
"RTN","ECMUTL",88,0)
 . D KILLV^ECDSUTIL
"RTN","ECMUTL",89,0)
 I ECPCNT>0 D  D CONTINU G:$G(ECERR) ASKPROQ
"RTN","ECMUTL",90,0)
 . S CNT=ECPCNT
"RTN","ECMUTL",91,0)
 . I ECPREV="L" W $P($G(^TMP("ECPRO",$J,+$G(^TMP("ECLKUP",$J,"LAST")))),"^",4)
"RTN","ECMUTL",92,0)
 . I ECPREV="X"!(ECPREV="N") W "   "_$P($G(^TMP("ECPRO",$J,+CNT)),"^",4)
"RTN","ECMUTL",93,0)
 I 'ECPCNT,$D(ECPNAME) D  G:CNT=-1!($G(ECERR)) ASKPROQ
"RTN","ECMUTL",94,0)
 . S CNT=$$PRLST^ECDSUTIL
"RTN","ECMUTL",95,0)
 . I CNT=-1 D MSG^ECBEN2U,KILLV^ECDSUTIL Q
"RTN","ECMUTL",96,0)
 . I CNT>0 D
"RTN","ECMUTL",97,0)
 .. W "   "_$S(ECPREV="S":$P($G(^TMP("ECPRO",$J,+CNT)),"^",3),1:$P($G(^TMP("ECPRO",$J,+CNT)),"^",4))
"RTN","ECMUTL",98,0)
 .. D CONTINU
"RTN","ECMUTL",99,0)
 ;
"RTN","ECMUTL",100,0)
 I CNT>0,($G(ECP)'=""),(ECVOLU>0) D
"RTN","ECMUTL",101,0)
 . S ECOUNT=$S(+$G(NUM)=-99:1,+$G(NUM)>0:NUM,1:(ECOUNT+1))
"RTN","ECMUTL",102,0)
 . S ^TMP("ECPROC",$J,(ECOUNT))=ECP_"^"_ECPNM_"^"_+ECREAS_"^"_$S(+ECREAS:$P($G(^ECR($P($G(^ECL(+ECREAS,0)),"^"),0)),"^"),1:"Reason Not Defined")_"^"_ECVOLU
"RTN","ECMUTL",103,0)
 . S ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP)
"RTN","ECMUTL",104,0)
 . I ECCPT'="",$O(ECMOD(ECCPT,""))'="" D
"RTN","ECMUTL",105,0)
 . . M ^TMP("ECPROC",$J,ECOUNT,"MOD")=ECMOD(ECCPT)
"RTN","ECMUTL",106,0)
 I '$G(NUM) G SEL
"RTN","ECMUTL",107,0)
ASKPROQ K ^TMP("ECPRO",$J),^TMP("ECLKUP",$J),JJ,OK
"RTN","ECMUTL",108,0)
 D KILLV^ECDSUTIL
"RTN","ECMUTL",109,0)
 Q
"RTN","ECMUTL",110,0)
 ;
"RTN","ECMUTL",111,0)
CONTINU ;
"RTN","ECMUTL",112,0)
 D SETP
"RTN","ECMUTL",113,0)
 S ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP)
"RTN","ECMUTL",114,0)
 I ECCPT'="" D  I $G(ECERR) G CONTINUQ
"RTN","ECMUTL",115,0)
 . S ECMODS=$G(ECMODS)
"RTN","ECMUTL",116,0)
 . S ECMODF=$$ASKMOD^ECUTL(ECCPT,ECMODS,DT,.ECMOD,.ECERR)
"RTN","ECMUTL",117,0)
 . K ECMODF,ECMODS
"RTN","ECMUTL",118,0)
 S ECREAS=$$ASKREAS(ECL,ECD,ECC,ECP,.ECERR)
"RTN","ECMUTL",119,0)
 G:$G(ECERR) CONTINUQ
"RTN","ECMUTL",120,0)
 S ECVOLU=$$ASKVOL(ECL,ECD,ECC,ECP,.ECERR)
"RTN","ECMUTL",121,0)
CONTINUQ Q
"RTN","ECMUTL",122,0)
 ;
"RTN","ECMUTL",123,0)
SETP ;
"RTN","ECMUTL",124,0)
 S ^TMP("ECLKUP",$J,"LAST")=CNT
"RTN","ECMUTL",125,0)
 S ECP=$P($G(^TMP("ECPRO",$J,CNT)),"^"),ECPNM=$P($G(^TMP("ECPRO",$J,CNT)),"^",4)
"RTN","ECMUTL",126,0)
 Q
"RTN","ECMUTL",127,0)
 ;
"RTN","ECMUTL",128,0)
LISTPR ;- List available procedures
"RTN","ECMUTL",129,0)
 ;   Input:        None
"RTN","ECMUTL",130,0)
 ;
"RTN","ECMUTL",131,0)
 ;  Output:        None (display on screen)
"RTN","ECMUTL",132,0)
 ;
"RTN","ECMUTL",133,0)
 N DIR,DIRUT,ECI,Y
"RTN","ECMUTL",134,0)
 S ECI=0
"RTN","ECMUTL",135,0)
 D PROCHDR
"RTN","ECMUTL",136,0)
 F   S ECI=$O(^TMP("ECPRO",$J,ECI)) Q:'ECI!(ECEXIT)  D
"RTN","ECMUTL",137,0)
 . I ($Y+5>IOSL) S DIR(0)="E" D ^DIR S:'Y!$D(DIRUT) ECEXIT=1 I +Y D PROCHDR
"RTN","ECMUTL",138,0)
 . Q:ECEXIT
"RTN","ECMUTL",139,0)
 . W !,ECI_".",?5,$E($P(^TMP("ECPRO",$J,ECI),"^",4),1,30),?38,$E($P(^(ECI),"^",3),1,30),?72,$P(^(ECI),"^",5)
"RTN","ECMUTL",140,0)
 Q:ECEXIT
"RTN","ECMUTL",141,0)
 W !!?5,"Select by number, CPT or national code, procedure name, or synonym.",!?5,"Synonym must be preceded by the & character  (example:  &TESTSYN).",!
"RTN","ECMUTL",142,0)
 W ?2,"** Modifier(s) can be appended to a CPT code (ex: CPT code-mod1,mod2,mod3) **",!
"RTN","ECMUTL",143,0)
LISTPRQ Q
"RTN","ECMUTL",144,0)
 ;
"RTN","ECMUTL",145,0)
PROCHDR ;- Procedure display header
"RTN","ECMUTL",146,0)
 ;
"RTN","ECMUTL",147,0)
 W @IOF
"RTN","ECMUTL",148,0)
 W !,"Available Procedures within "_$P(ECDSSU,"^",2)_": ",!
"RTN","ECMUTL",149,0)
 W ?72,"National",!,?5,"Procedure Name",?40,"Synonym",?72,"Number",!
"RTN","ECMUTL",150,0)
 Q
"RTN","ECMUTL",151,0)
 ;
"RTN","ECMUTL",152,0)
 ;
"RTN","ECMUTL",153,0)
ASKREAS(ECL,ECD,ECC,ECP,ECOUT) ;-Ask procedure reason
"RTN","ECMUTL",154,0)
 ;   Input:      ECL = Location ien
"RTN","ECMUTL",155,0)
 ;               ECD = DSS Unit ien
"RTN","ECMUTL",156,0)
 ;               ECC = Category ien
"RTN","ECMUTL",157,0)
 ;               ECP = Procedure ien
"RTN","ECMUTL",158,0)
 ;
"RTN","ECMUTL",159,0)
 ;  Output:  ECPRPTR = Link file ien (from file #720.5)
"RTN","ECMUTL",160,0)
 ;             ECOUT = 0 if successful
"RTN","ECMUTL",161,0)
 ;                     1 if uparrowed or timed out
"RTN","ECMUTL",162,0)
 ;                     (passed by reference)
"RTN","ECMUTL",163,0)
 ;
"RTN","ECMUTL",164,0)
 N DTOUT,DUOUT,ECPRPTR,ECSCR
"RTN","ECMUTL",165,0)
 S (ECOUT,ECPRPTR,ECSCR)=0
"RTN","ECMUTL",166,0)
 S ECC=+$G(ECC)
"RTN","ECMUTL",167,0)
 I '$D(ECL)!('$D(ECD))!('$D(ECP)) G ASKREASQ
"RTN","ECMUTL",168,0)
 I $G(ECP)]"" S ECSCR=+$O(^ECJ("AP",+ECL,+ECD,+ECC,ECP,0))
"RTN","ECMUTL",169,0)
 I ECSCR>0,(+$P($G(^ECJ(ECSCR,"PRO")),"^",5)),(+$O(^ECL("AD",ECSCR,0))) D
"RTN","ECMUTL",170,0)
 . S DIC="^ECL(",DIC(0)="QEAM"
"RTN","ECMUTL",171,0)
 . S DIC("A")="Procedure Reason: ",DIC("S")="I $P(^(0),U,2)=ECSCR"
"RTN","ECMUTL",172,0)
 . D ^DIC K DIC
"RTN","ECMUTL",173,0)
 . I +Y>0 S ECPRPTR=+Y
"RTN","ECMUTL",174,0)
 . I $D(DTOUT)!($D(DUOUT)) S ECOUT=1
"RTN","ECMUTL",175,0)
ASKREASQ Q +ECPRPTR
"RTN","ECMUTL",176,0)
 ;
"RTN","ECMUTL",177,0)
 ;
"RTN","ECMUTL",178,0)
ASKVOL(ECL,ECD,ECC,ECP,ECOUT) ;- Ask procedure volume
"RTN","ECMUTL",179,0)
 ;   Input:    ECL = Location ien
"RTN","ECMUTL",180,0)
 ;             ECD = DSS Unit ien
"RTN","ECMUTL",181,0)
 ;             ECC = Category ien
"RTN","ECMUTL",182,0)
 ;             ECP = Procedure ien
"RTN","ECMUTL",183,0)
 ;
"RTN","ECMUTL",184,0)
 ;  Output:  ECVOL = volume
"RTN","ECMUTL",185,0)
 ;           ECOUT = 0 if successful
"RTN","ECMUTL",186,0)
 ;                   1 if uparrowed or timed out
"RTN","ECMUTL",187,0)
 ;                   (passed by reference)
"RTN","ECMUTL",188,0)
 ;
"RTN","ECMUTL",189,0)
 N DIR,DIRUT,DTOUT,DUOUT,ECSCR,ECVOL
"RTN","ECMUTL",190,0)
 S (ECOUT,ECSCR,ECVOL)=0
"RTN","ECMUTL",191,0)
 S ECC=+$G(ECC)
"RTN","ECMUTL",192,0)
 I '$D(ECL)!('$D(ECD))!('$D(ECP)) G ASKVOLQ
"RTN","ECMUTL",193,0)
 I $G(ECP)]"" S ECSCR=+$O(^ECJ("AP",+ECL,+ECD,+ECC,ECP,0))
"RTN","ECMUTL",194,0)
 S DIR(0)="N^^K:(X<1)!(X>99) X",DIR("A")="Volume"
"RTN","ECMUTL",195,0)
 S DIR("?")="Type a Number between 1 and 99, 0 Decimal Digits"
"RTN","ECMUTL",196,0)
 S DIR("B")=$S($P($G(^ECJ(ECSCR,"PRO")),"^",3):$P($G(^ECJ(ECSCR,"PRO")),"^",3),1:1)
"RTN","ECMUTL",197,0)
 D ^DIR
"RTN","ECMUTL",198,0)
 I +Y S ECVOL=Y
"RTN","ECMUTL",199,0)
 I $D(DIRUT) S ECOUT=1
"RTN","ECMUTL",200,0)
ASKVOLQ Q +ECVOL
"RTN","ECMUTL",201,0)
 ;
"RTN","ECMUTL",202,0)
 ;
"RTN","ECMUTL",203,0)
PROV(ECDT,ECPROVS) ;get providers - new providers function
"RTN","ECMUTL",204,0)
 ;- This is the same function as PROV^ECPRVUTL
"RTN","ECMUTL",205,0)
 ;- Select provider(s) with active person class
"RTN","ECMUTL",206,0)
 ;- No updating of file #721 record is done here
"RTN","ECMUTL",207,0)
 ;
"RTN","ECMUTL",208,0)
 ;   input
"RTN","ECMUTL",209,0)
 ;   ECDT    = date/time of procedure (required)
"RTN","ECMUTL",210,0)
 ;   ECPROVS = local array, passed by reference (required)
"RTN","ECMUTL",211,0)
 ;    
"RTN","ECMUTL",212,0)
 ;   output
"RTN","ECMUTL",213,0)
 ;   ECU(1)  = provider #1 (mandatory) ien^provider #1 name^person class
"RTN","ECMUTL",214,0)
 ;   ECU(2)  = provider #2 (optional) ien^provider #2 name^person class
"RTN","ECMUTL",215,0)
 ;   ECU(3)  = provider #3 (optional) ien^provider #3 name^person class
"RTN","ECMUTL",216,0)
 ;
"RTN","ECMUTL",217,0)
 ;   returns
"RTN","ECMUTL",218,0)
 ;       0 ==> prov selection successful; at least prov #1 selected
"RTN","ECMUTL",219,0)
 ;       1 ==> selection unsuccessful or user timed-out
"RTN","ECMUTL",220,0)
 ;       2 ==> selection unsuccessful or user entered "^"
"RTN","ECMUTL",221,0)
 ;
"RTN","ECMUTL",222,0)
 N ECU,ECU2,ECU3,ECDA
"RTN","ECMUTL",223,0)
 D GET^ECPRVUTL("",ECDT,.ECU,.ECU2,.ECU3,.ECOUT)
"RTN","ECMUTL",224,0)
 S ECPROVS(1)=ECU,ECPROVS(2)=ECU2,ECPROVS(3)=ECU3
"RTN","ECMUTL",225,0)
 Q ECOUT
"RTN","ECMUTL",226,0)
 ;
"RTN","ECMUTL",227,0)
ONEUNIT(ECDSSU) ;- Create ECDSSU containing DSS Unit
"RTN","ECMUTL",228,0)
 ;  Checks for validity and access to Unit
"RTN","ECMUTL",229,0)
 ;
"RTN","ECMUTL",230,0)
 ;   input
"RTN","ECMUTL",231,0)
 ;   ECDSSU = passed by reference
"RTN","ECMUTL",232,0)
 ;
"RTN","ECMUTL",233,0)
 ;   output
"RTN","ECMUTL",234,0)
 ;   ECDDSU = ien in file #724^name of DSS unit  OR
"RTN","ECMUTL",235,0)
 ;            undefined
"RTN","ECMUTL",236,0)
 ;
"RTN","ECMUTL",237,0)
 ;   returns ECOUT = 0  if unit selection sucessful  OR
"RTN","ECMUTL",238,0)
 ;                   1  if user times out; selection unsuccessful
"RTN","ECMUTL",239,0)
 ;                   2  if user up-arrows out; selection unsuccessful
"RTN","ECMUTL",240,0)
 ;   Note: if selection is unsuccessful, variable ECDSSU will be undefined.
"RTN","ECMUTL",241,0)
 ;
"RTN","ECMUTL",242,0)
 N Y,DIRUT,DUOUT,ECKEY,ECOUT
"RTN","ECMUTL",243,0)
 S ECKEY=$S($D(^XUSEC("ECALLU",DUZ)):1,1:0)
"RTN","ECMUTL",244,0)
 F  S ECOUT=0 D  Q:$G(ECOUT)  Q:$G(ECDSSU)
"RTN","ECMUTL",245,0)
 .K DUOUT,DTOUT,DIRUT,Y
"RTN","ECMUTL",246,0)
 .W !
"RTN","ECMUTL",247,0)
 .S DIC=724,DIC("A")="Select DSS Unit: ",DIC(0)="QEAMZ"
"RTN","ECMUTL",248,0)
 .S DIC("S")="I ECKEY!($D(^VA(200,DUZ,""EC"",+Y)))"
"RTN","ECMUTL",249,0)
 .D ^DIC K DIC
"RTN","ECMUTL",250,0)
 .S:$D(DTOUT) ECOUT=1 S:$D(DUOUT) ECOUT=2
"RTN","ECMUTL",251,0)
 .Q:$G(ECOUT)
"RTN","ECMUTL",252,0)
 .I +Y>0 D  Q
"RTN","ECMUTL",253,0)
 .. I $$VALID(+Y) S ECDSSU=Y
"RTN","ECMUTL",254,0)
 .. I '$$VALID(+Y) D
"RTN","ECMUTL",255,0)
 ...S Y=-1
"RTN","ECMUTL",256,0)
 ...W !!,?5,"This DSS Unit is either inactive or cannot be used"
"RTN","ECMUTL",257,0)
 ...W !,?5,"in Event Capture.  Please select a different DSS Unit.",!
"RTN","ECMUTL",258,0)
 .I +Y<0 D  Q
"RTN","ECMUTL",259,0)
 ..W !!,?5,"A response is required...try again."
"RTN","ECMUTL",260,0)
 ..W !,?5,"You must enter an ""^"" to exit."
"RTN","ECMUTL",261,0)
 .K DIR,DUOUT,DTOUT,DIRUT
"RTN","ECMUTL",262,0)
 .W ! S DIR(0)="YA",DIR("A")="Is this correct? ",DIR("B")="YES"
"RTN","ECMUTL",263,0)
 .S DIR("?")="Answer YES to accept the unit, NO to start over."
"RTN","ECMUTL",264,0)
 .D ^DIR K DIR
"RTN","ECMUTL",265,0)
 .I $D(DIRUT) S:$D(DTOUT) ECOUT=1 S:$D(DUOUT) ECOUT=2 K ECDSSU Q
"RTN","ECMUTL",266,0)
 .I '$G(Y) K ECDSSU
"RTN","ECMUTL",267,0)
 Q ECOUT
"RTN","ECMUTL",268,0)
 ;
"RTN","ECMUTL",269,0)
VALID(IEN) ;- Check DSS Unit for use by Event Capture
"RTN","ECMUTL",270,0)
 ;
"RTN","ECMUTL",271,0)
 N NODE,NO,YES,VAL
"RTN","ECMUTL",272,0)
 S NODE=$G(^ECD(IEN,0))
"RTN","ECMUTL",273,0)
 ;piece 6 is 'inactive'; piece 8 is 'use with EC'
"RTN","ECMUTL",274,0)
 S NO=$P(NODE,"^",6),YES=$P(NODE,"^",8)
"RTN","ECMUTL",275,0)
 ;start out with 'valid'
"RTN","ECMUTL",276,0)
 S VAL=1 D
"RTN","ECMUTL",277,0)
 .;if 'inactive', then 'not valid'
"RTN","ECMUTL",278,0)
 .I NO S VAL=0 Q
"RTN","ECMUTL",279,0)
 .;if not 'use with EC', then 'not valid'
"RTN","ECMUTL",280,0)
 .I 'YES S VAL=0
"RTN","ECMUTL",281,0)
 Q VAL
"RTN","ECOSSUM")
0^14^B65789298
"RTN","ECOSSUM",1,0)
ECOSSUM ;BIR/DMA,RHK,JPW-Ordering Section Summary ;27 Mar 96
"RTN","ECOSSUM",2,0)
 ;;2.0; EVENT CAPTURE ;**5,8,18,47**;8 May 96
"RTN","ECOSSUM",3,0)
EN ;entry point from menu option
"RTN","ECOSSUM",4,0)
 W !
"RTN","ECOSSUM",5,0)
 K DIC S DIC=723,DIC(0)="AQEMZ",DIC("A")="Select Ordering Section: " D ^DIC K DIC
"RTN","ECOSSUM",6,0)
 I Y<0 G EXIT
"RTN","ECOSSUM",7,0)
 S ECOS=+Y,ECOSN=$P(Y,"^",2)
"RTN","ECOSSUM",8,0)
 D RANGE
"RTN","ECOSSUM",9,0)
 I '$G(ECLOOP)!'$G(ECSD)!'$G(ECED) G EXIT
"RTN","ECOSSUM",10,0)
 W !
"RTN","ECOSSUM",11,0)
 S JJ=$$ASKLOC^ECRUTL
"RTN","ECOSSUM",12,0)
 I 'JJ G EXIT
"RTN","ECOSSUM",13,0)
 W !
"RTN","ECOSSUM",14,0)
 S JJ=$$ASKDSS^ECRUTL
"RTN","ECOSSUM",15,0)
 I 'JJ G EXIT
"RTN","ECOSSUM",16,0)
 W !
"RTN","ECOSSUM",17,0)
 D DEVICE
"RTN","ECOSSUM",18,0)
 I POP G EXIT
"RTN","ECOSSUM",19,0)
 I $G(ZTSK) G EXIT
"RTN","ECOSSUM",20,0)
 I $G(IO("Q")),'$G(ZTSK) G EXIT
"RTN","ECOSSUM",21,0)
 D START
"RTN","ECOSSUM",22,0)
 D HOME^%ZIS
"RTN","ECOSSUM",23,0)
 G EXIT
"RTN","ECOSSUM",24,0)
 Q
"RTN","ECOSSUM",25,0)
 ;
"RTN","ECOSSUM",26,0)
START ;queued entry point or continuation
"RTN","ECOSSUM",27,0)
 D PROCESS
"RTN","ECOSSUM",28,0)
 U IO D PRINT
"RTN","ECOSSUM",29,0)
 I $D(ECGUI) D EXIT Q
"RTN","ECOSSUM",30,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECOSSUM",31,0)
 I $D(ZTQUEUED) S ZTREQ="@" D EXIT
"RTN","ECOSSUM",32,0)
 Q
"RTN","ECOSSUM",33,0)
 ;
"RTN","ECOSSUM",34,0)
RANGE ;get any date range
"RTN","ECOSSUM",35,0)
 N ECSTDT,ECENDDT
"RTN","ECOSSUM",36,0)
 W !!,?5,"Enter a Begin Date and End Date for the Event Capture "
"RTN","ECOSSUM",37,0)
 W !,?5,"Ordering Section report.",!
"RTN","ECOSSUM",38,0)
 S (ECSD,ECED)=0
"RTN","ECOSSUM",39,0)
 F  D  Q:ECSD>0  Q:'$G(ECLOOP)
"RTN","ECOSSUM",40,0)
 .S ECLOOP=$$STDT^ECRUTL() I 'ECLOOP Q
"RTN","ECOSSUM",41,0)
 .S ECSD=ECSTDT
"RTN","ECOSSUM",42,0)
 Q:'$G(ECLOOP)!'$G(ECSD)
"RTN","ECOSSUM",43,0)
 F  D  Q:ECED>0  Q:'$G(ECLOOP)
"RTN","ECOSSUM",44,0)
 .S ECLOOP=$$ENDDT^ECRUTL(ECSTDT) I 'ECLOOP Q
"RTN","ECOSSUM",45,0)
 .S ECED=ECENDDT
"RTN","ECOSSUM",46,0)
 .I ECED>(DT+1) D
"RTN","ECOSSUM",47,0)
 ..W !!,?15,"The End Date for this report may not be"
"RTN","ECOSSUM",48,0)
 ..W !,?15,"a future date.  Try again...",!
"RTN","ECOSSUM",49,0)
 ..S ECED=0
"RTN","ECOSSUM",50,0)
 Q 
"RTN","ECOSSUM",51,0)
 ;
"RTN","ECOSSUM",52,0)
DEVICE ;select output device
"RTN","ECOSSUM",53,0)
 W !,"This report is formatted for 132 column output.",!
"RTN","ECOSSUM",54,0)
 K IOP S %ZIS="QM" D ^%ZIS
"RTN","ECOSSUM",55,0)
 I POP W !!,"No device selected.  Exiting...",!! S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECOSSUM",56,0)
 I $D(IO("Q")) D
"RTN","ECOSSUM",57,0)
 .S ZTRTN="START^ECOSSUM",ZTDESC="EC Ordering Section Summary"
"RTN","ECOSSUM",58,0)
 .S ZTSAVE("ECSD")="",ZTSAVE("ECED")="",ZTSAVE("ECOS")="",ZTSAVE("ECOSN")=""
"RTN","ECOSSUM",59,0)
 .S ZTSAVE("ECLOC(")="",ZTSAVE("ECDSSU(")=""
"RTN","ECOSSUM",60,0)
 .D ^%ZTLOAD
"RTN","ECOSSUM",61,0)
 .I '$G(ZTSK) W !,"Report canceled..." S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECOSSUM",62,0)
 .W !,"Report queued as Task #: ",ZTSK S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECOSSUM",63,0)
 Q
"RTN","ECOSSUM",64,0)
 ;
"RTN","ECOSSUM",65,0)
PROCESS ;get data to print
"RTN","ECOSSUM",66,0)
 N EC,ECD,ECDA,ECPA,ECPATN,ECSS,ECSSN,ECP,ECPN,ECLOCA,ECUNIT,ECCAT,ECFILE,ECPSY,ECPSYN,ECPRV,ECPRVN,ECPROVS
"RTN","ECOSSUM",67,0)
 N NLOC,NUNIT,JJ,ECPXD
"RTN","ECOSSUM",68,0)
 K ^TMP("ECOS",$J)
"RTN","ECOSSUM",69,0)
 ;put locations and units into ien subscripted arrays
"RTN","ECOSSUM",70,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECOSSUM",71,0)
 .S NLOC($P(ECLOC(JJ),"^",1))=$P(ECLOC(JJ),"^",2)
"RTN","ECOSSUM",72,0)
 S JJ="" F  S JJ=$O(ECDSSU(JJ)) Q:JJ=""  D
"RTN","ECOSSUM",73,0)
 .S NUNIT($P(ECDSSU(JJ),"^",1))=$P(ECDSSU(JJ),"^",2)
"RTN","ECOSSUM",74,0)
 S ECD=ECSD
"RTN","ECOSSUM",75,0)
 F  S ECD=$O(^ECH("AC",ECD)) Q:'ECD  Q:ECD>ECED  D
"RTN","ECOSSUM",76,0)
 .S ECDA="" F  S ECDA=$O(^ECH("AC",ECD,ECDA)) Q:'ECDA  S EC=$G(^ECH(ECDA,0)) I $P(EC,"^",12)=ECOS D
"RTN","ECOSSUM",77,0)
 ..I $P(EC,"^",3)<ECSD!($P(EC,"^",3)>ECED) Q  ;file or x-ref problem
"RTN","ECOSSUM",78,0)
 ..S ECLOCA=+$P(EC,U,4),ECUNIT=+$P(EC,U,7)
"RTN","ECOSSUM",79,0)
 ..I '$D(NLOC(ECLOCA))!('$D(NUNIT(ECUNIT))) Q
"RTN","ECOSSUM",80,0)
 ..S ECP=$P(EC,U,9) Q:ECP']""
"RTN","ECOSSUM",81,0)
 ..S ECCAT=+$P(EC,U,8)
"RTN","ECOSSUM",82,0)
 ..S ECPSY=+$O(^ECJ("AP",ECLOCA,ECUNIT,ECCAT,ECP,""))
"RTN","ECOSSUM",83,0)
 ..S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECOSSUM",84,0)
 ..S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECOSSUM",85,0)
 ..I ECFILE="UNKNOWN" S ECPN="UNKNOWN"
"RTN","ECOSSUM",86,0)
 ..S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5)),ECPXD=""
"RTN","ECOSSUM",87,0)
 ..I ECCPT'="" D
"RTN","ECOSSUM",88,0)
 ...S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(EC,"^",3)),ECCPT=$P(ECPXD,"^",2)
"RTN","ECOSSUM",89,0)
 ..I ECFILE=81 S ECPN=$S($P(ECPXD,"^",3)]"":$P(ECPXD,"^",3),1:"UNKNOWN")
"RTN","ECOSSUM",90,0)
 ..I ECFILE=725 S ECPN=$S($P($G(^EC(725,+ECP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECOSSUM",91,0)
 ..S ECPN=$E(ECPN,1,30)_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")_"~"_ECCPT
"RTN","ECOSSUM",92,0)
 ..;ALB/JAM - Get Procedure CPT modifiers
"RTN","ECOSSUM",93,0)
 ..S ECMODF=0 I $O(^ECH(ECDA,"MOD",0))'="" D
"RTN","ECOSSUM",94,0)
 ...K ECMOD S ECMODF=$$MOD^ECUTL(ECDA,"E",.ECMOD)
"RTN","ECOSSUM",95,0)
 ..S (ECPA,ECPATN,ECSS)="",ECPA=$G(^DPT(+$P(EC,"^",2),0)) Q:ECPA=""
"RTN","ECOSSUM",96,0)
 ..S ECPATN=$P(ECPA,"^",1),ECSS=$P(ECPA,"^",9)
"RTN","ECOSSUM",97,0)
 ..S:+ECSS ECSSN=$E(ECSS,1,3)_"-"_$E(ECSS,4,5)_"-"_$E(ECSS,6,10) S:ECSS="" ECSSN="UNKNOWN" ;could be a pseudo-ssn
"RTN","ECOSSUM",98,0)
 ..S:ECPATN="" ECPATN="UNKNOWN" S ECPATN=ECPATN_"^"_ECSSN
"RTN","ECOSSUM",99,0)
 ..S ECV=+$P(EC,"^",10)
"RTN","ECOSSUM",100,0)
 ..S ECPROVS="" F JJ=11,15,17 D
"RTN","ECOSSUM",101,0)
 ...S ECPRV=$P(EC,"^",JJ),ECPRVN=""
"RTN","ECOSSUM",102,0)
 ...I +ECPRV S ECPRVN=$P($G(^VA(200,ECPRV,0)),"^",1) S:ECPRVN="" ECPRVN="UNKNOWN"
"RTN","ECOSSUM",103,0)
 ...S ECPRVN=$E(ECPRVN,1,24),ECPROVS=ECPROVS_ECPRVN_"^"
"RTN","ECOSSUM",104,0)
 ..S ^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA)=ECSSN_"^"_ECPN_"^"_ECV_"^"_ECPROVS
"RTN","ECOSSUM",105,0)
 ..I ECMODF D
"RTN","ECOSSUM",106,0)
 ...M ^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA,"MOD")=ECMOD
"RTN","ECOSSUM",107,0)
 Q
"RTN","ECOSSUM",108,0)
 ;
"RTN","ECOSSUM",109,0)
PRINT ;output report
"RTN","ECOSSUM",110,0)
 N ECDA,ECLOCA,ECUNIT,ECPATN,ECSSN,ECPN,ECV
"RTN","ECOSSUM",111,0)
 N PAGE,QFLAG,DASH,DASH2,PRNTDT,JJ,SS,ALOC,AUNIT,LOC,UNNAME,UNIT,DATA,PTNAME,PROV,PROVN,V,X,Y
"RTN","ECOSSUM",112,0)
 S (PAGE,QFLAG)=0 S $P(DASH,"-",130)="",$P(DASH2,"-",64)=""
"RTN","ECOSSUM",113,0)
 S Y=$P(ECSD,".",1)+1 D DD^%DT S ECSD=Y S Y=$P(ECED,".",1) D DD^%DT S ECED=Y
"RTN","ECOSSUM",114,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S PRNTDT=Y
"RTN","ECOSSUM",115,0)
 S ECV("L")=0,ECV("O")=0,ECV("P")=0,ECV("U")=0
"RTN","ECOSSUM",116,0)
 ;if no data exists then print the header and quit
"RTN","ECOSSUM",117,0)
 I '$D(^TMP("ECOS",$J)) D  Q
"RTN","ECOSSUM",118,0)
 .S LOC="" D HEAD
"RTN","ECOSSUM",119,0)
 .W !!,?26,"No data for this Ordering Section for the date range specified.",!!
"RTN","ECOSSUM",120,0)
 .I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECOSSUM",121,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECOSSUM",122,0)
 .W:$E(IOST)'="C" @IOF
"RTN","ECOSSUM",123,0)
 ;if there's data in ^TMP then need to present the data alphabetically;
"RTN","ECOSSUM",124,0)
 ;put locations and units in alpha ordered array
"RTN","ECOSSUM",125,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECOSSUM",126,0)
 .S ALOC($P(ECLOC(JJ),"^",2))=$P(ECLOC(JJ),"^",1)
"RTN","ECOSSUM",127,0)
 S JJ="" F  S JJ=$O(ECDSSU(JJ)) Q:JJ=""  D
"RTN","ECOSSUM",128,0)
 .S AUNIT($P(ECDSSU(JJ),"^",2))=$P(ECDSSU(JJ),"^",1)
"RTN","ECOSSUM",129,0)
 ;process the ^TMP global data in alpha order for location and unit
"RTN","ECOSSUM",130,0)
 S LOC="" F  S LOC=$O(ALOC(LOC)) Q:LOC=""  S ECLOCA=ALOC(LOC),ECV("L")=0 D  Q:QFLAG
"RTN","ECOSSUM",131,0)
 .D HEAD Q:QFLAG  ;always start a new location at top of page
"RTN","ECOSSUM",132,0)
 .S UNIT="" F  S UNIT=$O(AUNIT(UNIT)) Q:UNIT=""  S ECUNIT=AUNIT(UNIT),ECV("U")=0 D  Q:QFLAG
"RTN","ECOSSUM",133,0)
 ..I '$D(^TMP("ECOS",$J,ECLOCA,ECUNIT)) Q
"RTN","ECOSSUM",134,0)
 ..S UNNAME=$E(UNIT,1,20)
"RTN","ECOSSUM",135,0)
 ..D:($Y+3>IOSL) HEAD Q:QFLAG  W !!,UNNAME
"RTN","ECOSSUM",136,0)
 ..S ECPATN="" F  S ECPATN=$O(^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN)) Q:ECPATN=""  S ECV("P")=0 D  Q:QFLAG
"RTN","ECOSSUM",137,0)
 ...S PTNAME=$P(ECPATN,"^",1),PTNAME=$E(PTNAME,1,22),ECSSN=$P(ECPATN,"^",2)
"RTN","ECOSSUM",138,0)
 ...W ?24,PTNAME,?48,ECSSN
"RTN","ECOSSUM",139,0)
 ...S ECDA="" F  S ECDA=$O(^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA)) Q:ECDA=""  S DATA=^(ECDA) D  Q:QFLAG
"RTN","ECOSSUM",140,0)
 ....S ECPN=$P(DATA,"^",2),ECPN=$P(ECPN,"~",2)_" "_$P(ECPN,"~")
"RTN","ECOSSUM",141,0)
 ....S ECPN=$E(ECPN,1,34),ECV=$P(DATA,"^",3),ECV=ECV\1 D
"RTN","ECOSSUM",142,0)
 .....F V="L","O","P","U" S ECV(V)=ECV(V)+ECV
"RTN","ECOSSUM",143,0)
 .....S:+ECV>9999 ECV="9999+" S ECV=$$RJ^XLFSTR(ECV,5," ") ;unusually high individual volume figure
"RTN","ECOSSUM",144,0)
 ....K PROV F JJ=1:1:3 S PROV=$P(DATA,"^",JJ+3) I PROV]"" S PROVN=$E(PROV,1,24),PROV(JJ)=PROVN
"RTN","ECOSSUM",145,0)
 ....K ECMOD M ECMOD=^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA,"MOD")
"RTN","ECOSSUM",146,0)
 ....W ?61,ECPN,?96,ECV,?105,$G(PROV(1))
"RTN","ECOSSUM",147,0)
 ....D:($Y+3>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",148,0)
 ....;ALB/JAM - write cpt procedure modifiers on same line with providers
"RTN","ECOSSUM",149,0)
 ....S MOD=$O(ECMOD(""))
"RTN","ECOSSUM",150,0)
 ....I $G(PROV(2))]""!(MOD'="") W ! D:MOD'=""  W ?105,$G(PROV(2))
"RTN","ECOSSUM",151,0)
 .....W ?65,"- ",MOD," ",$E($P(ECMOD(MOD),U,3),1,29) K ECMOD(MOD)
"RTN","ECOSSUM",152,0)
 ....S MOD=$O(ECMOD(MOD))
"RTN","ECOSSUM",153,0)
 ....I $G(PROV(3))]""!(MOD'="") W ! D:MOD'=""  W ?105,$G(PROV(3))
"RTN","ECOSSUM",154,0)
 .....W ?65,"- ",MOD," ",$E($P(ECMOD(MOD),U,3),1,29) K ECMOD(MOD)
"RTN","ECOSSUM",155,0)
 ....I $O(ECMOD(MOD))'="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D  I QFLAG Q
"RTN","ECOSSUM",156,0)
 .....W !,?65,"- ",MOD," ",$E($P(ECMOD(MOD),U,3),1,29)
"RTN","ECOSSUM",157,0)
 .....I ($Y+3>IOSL) D HEAD Q:QFLAG  I $O(ECMOD(MOD))'="" W !?61,ECPN
"RTN","ECOSSUM",158,0)
 ....W ! ;start a new line
"RTN","ECOSSUM",159,0)
 ...;write subtotal for patient
"RTN","ECOSSUM",160,0)
 ...Q:QFLAG  D:($Y+3>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",161,0)
 ...W ?61,DASH2,!
"RTN","ECOSSUM",162,0)
 ...W ?24,"Subtotal for "_$P(ECPATN,"^",1)_":",?96,$$RJ^XLFSTR(ECV("P"),5," "),!!
"RTN","ECOSSUM",163,0)
 ..;write total for unit
"RTN","ECOSSUM",164,0)
 ..Q:QFLAG  D:($Y+3>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",165,0)
 ..W !,"Subtotal for DSS Unit "_UNIT_":",?95,$$RJ^XLFSTR(ECV("U"),6," "),!
"RTN","ECOSSUM",166,0)
 .;write the total for the location
"RTN","ECOSSUM",167,0)
 .Q:QFLAG  D:($Y+3>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",168,0)
 .W !!,"Total for Location "_LOC_":",?95,$$RJ^XLFSTR(ECV("L"),6," "),!
"RTN","ECOSSUM",169,0)
 ;write the ordering section grandtotal
"RTN","ECOSSUM",170,0)
 Q:QFLAG  D:($Y+5>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",171,0)
 W !!!,"Grand Total for Ordering Section "_ECOSN_":",?95,$$RJ^XLFSTR(ECV("O"),6," "),!
"RTN","ECOSSUM",172,0)
 ;all done
"RTN","ECOSSUM",173,0)
 I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR W @IOF
"RTN","ECOSSUM",174,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECOSSUM",175,0)
 W:$E(IOST)'="C" @IOF
"RTN","ECOSSUM",176,0)
 Q
"RTN","ECOSSUM",177,0)
HEAD ;header
"RTN","ECOSSUM",178,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECOSSUM",179,0)
 I $E(IOST)="C",PAGE>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLAG=1 Q
"RTN","ECOSSUM",180,0)
 W:$Y!($E(IOST)="C") @IOF
"RTN","ECOSSUM",181,0)
 S PAGE=PAGE+1
"RTN","ECOSSUM",182,0)
 W !,?26,"Event Capture Ordering Section Summary for ",ECOSN,?105,"Page: ",PAGE
"RTN","ECOSSUM",183,0)
 W !,?26,"for the Date Range ",$$FMTE^XLFDT(ECSD)," to ",$$FMTE^XLFDT(ECED),?102,"Printed: "_PRNTDT
"RTN","ECOSSUM",184,0)
 W !,?26,"Location: ",LOC,!
"RTN","ECOSSUM",185,0)
 W !,"DSS Unit",?24,"Patient",?48,"SSN",?61,"Procedure",?98,"Vol.",?105,"Provider(s)"
"RTN","ECOSSUM",186,0)
 W !,?65,"CPT Modifier"
"RTN","ECOSSUM",187,0)
 W !,DASH,!
"RTN","ECOSSUM",188,0)
 Q
"RTN","ECOSSUM",189,0)
 ;
"RTN","ECOSSUM",190,0)
EXIT ;common exit point
"RTN","ECOSSUM",191,0)
 D ^ECKILL
"RTN","ECOSSUM",192,0)
 D:'$D(ECGUI) ^%ZISC
"RTN","ECOSSUM",193,0)
 K ^TMP("ECOS",$J)
"RTN","ECOSSUM",194,0)
 K JJ,X,Y,ZTSK,IO("Q"),DIR,DIRUT,DTOUT,DUOUT,ECOS,ECOSN,ECSD,ECED,ECLOOP,ECLOC,ECDSSU
"RTN","ECOSSUM",195,0)
 Q
"RTN","ECPAT")
0^15^B30137327
"RTN","ECPAT",1,0)
ECPAT ;BIR/MAM,JPW-Event Capture Patient Summary ;26 Feb 96
"RTN","ECPAT",2,0)
 ;;2.0; EVENT CAPTURE ;**5,18,47**;8 May 96
"RTN","ECPAT",3,0)
SET ; set ^TMP($J,"ECPAT")
"RTN","ECPAT",4,0)
 N ECPXD
"RTN","ECPAT",5,0)
 I $Y+8>IOSL D PAGE I ECOUT Q
"RTN","ECPAT",6,0)
 S ECEC=$G(^ECH(ECFN,0))
"RTN","ECPAT",7,0)
 S ECL=+$P(ECEC,"^",4),ECC=+$P(ECEC,"^",8),ECP=$P(ECEC,"^",9),ECD=+$P(ECEC,"^",7),ECU=+$P(ECEC,"^",11),ECV=+$P(ECEC,"^",10)
"RTN","ECPAT",8,0)
 Q:ECP']""
"RTN","ECPAT",9,0)
 ;set default med spec and ord sect to administrative if blank
"RTN","ECPAT",10,0)
 S ECM=$S($P(ECEC,"^",6)]"":+$P(ECEC,"^",6),1:108),ECO=$S($P(ECEC,"^",12)]"":+$P(ECEC,"^",12),1:108)
"RTN","ECPAT",11,0)
 S ECMN=$S($P($G(^ECC(723,ECM,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",12,0)
 S ECON=$S($P($G(^ECC(723,ECO,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",13,0)
 S ECS=+$P(ECEC,"^",5),ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",14,0)
 S ECCN=$S($P($G(^EC(726,ECC,0)),"^")]"":$P(^(0),"^"),1:"None")
"RTN","ECPAT",15,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,""))
"RTN","ECPAT",16,0)
 S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECPAT",17,0)
 S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,1:725)
"RTN","ECPAT",18,0)
 S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5)),ECPXD=""
"RTN","ECPAT",19,0)
 I ECCPT'="" D
"RTN","ECPAT",20,0)
 . S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(ECEC,"^",3)),ECCPT=$P(ECPXD,"^",2)
"RTN","ECPAT",21,0)
 . I ECCPT'="" S ECCPT=ECCPT_" "
"RTN","ECPAT",22,0)
 I ECFILE=81 S ECPN=$S($P(ECPXD,"^",3)]"":$P(ECPXD,"^",3),1:"UNKNOWN")
"RTN","ECPAT",23,0)
 I ECFILE=725 S ECPN=$S($P($G(^EC(725,+ECP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",24,0)
 S ECPN=ECCPT_$E(ECPN,1,30)_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")
"RTN","ECPAT",25,0)
 S ECDN=$S($P($G(^ECD(ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",26,0)
 S ECLN=$S($P($G(^DIC(4,ECL,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",27,0)
 S ECUN=$S($P($G(^VA(200,ECU,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",28,0)
 S ECUN=$S(ECUN'="UNKNOWN":$P(ECUN,",",2)_" "_$P(ECUN,","),1:"UNKNOWN")
"RTN","ECPAT",29,0)
 S ECDT=$$FMTE^XLFDT(DATE)
"RTN","ECPAT",30,0)
 ;
"RTN","ECPAT",31,0)
 ;ALB/ESD - Add Procedure Reason to report
"RTN","ECPAT",32,0)
 N ECLNK
"RTN","ECPAT",33,0)
 S ECPRSN=""
"RTN","ECPAT",34,0)
 S ECLNK=+$P(ECEC,"^",23)
"RTN","ECPAT",35,0)
 I +ECLNK>0 DO
"RTN","ECPAT",36,0)
 .S ECPRSN=$P($G(^ECL(ECLNK,0)),"^",1)
"RTN","ECPAT",37,0)
 .S:+ECPRSN'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPAT",38,0)
 .S:+ECPRSN>0 ECPRSN=$P(^ECR(ECPRSN,0),"^",1)
"RTN","ECPAT",39,0)
 S:+ECLNK'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPAT",40,0)
 ;
"RTN","ECPAT",41,0)
 ;Get Procedure CPT modifiers
"RTN","ECPAT",42,0)
 S ECMODF=0 K ECMOD
"RTN","ECPAT",43,0)
 I $O(^ECH(ECFN,"MOD",0))'="" S ECMODF=$$MOD^ECUTL(ECFN,"E",.ECMOD)
"RTN","ECPAT",44,0)
 I $D(ECY) DO
"RTN","ECPAT",45,0)
 .W !!,ECDT,?35,ECCN,?80,ECPN_" ("_ECV_")",!
"RTN","ECPAT",46,0)
 .I ECMODF S MD="" D  K MD I ECOUT Q
"RTN","ECPAT",47,0)
 ..F  S MD=$O(ECMOD(MD)) Q:MD=""  D  I ECOUT Q
"RTN","ECPAT",48,0)
 ...D:$Y+2>IOSL PAGE Q:ECOUT  W ?84,"- ",MD," ",$P(ECMOD(MD),U,3),!
"RTN","ECPAT",49,0)
 .W $E(ECLN,1,22),?35,ECSN,?80,ECMN,!
"RTN","ECPAT",50,0)
 .W:$D(ECRY) ECPRSN
"RTN","ECPAT",51,0)
 .W ?35,ECON,?80,ECUN
"RTN","ECPAT",52,0)
 I $D(ECN) DO
"RTN","ECPAT",53,0)
 .W !!,ECDT,?35,ECPN_" ("_ECV_")",!
"RTN","ECPAT",54,0)
 .I ECMODF S MD="" D  K MD I ECOUT Q
"RTN","ECPAT",55,0)
 ..F  S MD=$O(ECMOD(MD)) Q:MD=""  D  I ECOUT Q
"RTN","ECPAT",56,0)
 ...D:$Y+2>IOSL PAGE Q:ECOUT  W ?39,"- ",MD," ",$P(ECMOD(MD),U,3),!
"RTN","ECPAT",57,0)
 .W $E(ECLN,1,22),?35,ECSN,?80,ECMN,!
"RTN","ECPAT",58,0)
 .W:$D(ECRY) ECPRSN
"RTN","ECPAT",59,0)
 .W ?35,ECON,?80,ECUN
"RTN","ECPAT",60,0)
 Q
"RTN","ECPAT",61,0)
PAT ; entry point
"RTN","ECPAT",62,0)
 K DIC S DIC=2,DIC(0)="QEAMZ",DIC("A")="Select Patient: " D ^DIC K DIC G:Y<0 END S ECDFN=+Y,ECPAT=$P(Y,"^",2)
"RTN","ECPAT",63,0)
DATE K %DT S %DT="AEX",%DT("A")="Start with Date:  " D ^%DT G:Y<0 END S ECSD=Y,%DT("A")="End with Date:  " D ^%DT G:Y<0 END S ECED=Y I ECED<ECSD W !,"End date must be after start date",! G DATE
"RTN","ECPAT",64,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_"^"_$$FMTE^XLFDT(ECED),ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECPAT",65,0)
 D REASON^ECRUTL ;* Prompt to report Procedure Reasons
"RTN","ECPAT",66,0)
 K IOP,%ZIS,POP,IO("Q") S %ZIS("A")="Select Device: ",%ZIS="QM" W !!,"This report is designed to use a 132 column format.",! D ^%ZIS G:POP END
"RTN","ECPAT",67,0)
 I $D(IO("Q")) S:$D(ECRY) ZTSAVE("ECRY")=""
"RTN","ECPAT",68,0)
 I $D(IO("Q")) K IO("Q") S (ZTSAVE("ECDFN"),ZTSAVE("ECPAT"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECSD"))="",ZTDESC="EVENT CAPTURE PATIENT SUMMARY",ZTRTN="SUM^ECPAT",ZTIO=ION D ^%ZTLOAD,HOME^%ZIS G END
"RTN","ECPAT",69,0)
SUM ; entry when queued
"RTN","ECPAT",70,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECPAT",71,0)
 U IO S DATE=$O(^ECH("APAT",ECDFN,ECSD)) I 'DATE W:$Y @IOF W !!,"No Data for "_ECPAT_" during the time selected." G END
"RTN","ECPAT",72,0)
 S ECFN=+$O(^ECH("APAT",ECDFN,DATE,0)),ECL=+$P(^ECH(ECFN,0),"^",4) D BRO D:$D(ECY) HDR D:$D(ECN) HDR1
"RTN","ECPAT",73,0)
 S DATE=ECSD,(ECFN,ECOUT)=0 F I=0:0 S DATE=$O(^ECH("APAT",ECDFN,DATE)) Q:'DATE!(DATE>ECED)!(ECOUT)  F I=0:0 S ECFN=$O(^ECH("APAT",ECDFN,DATE,ECFN)) Q:'ECFN!(ECOUT)  D SET
"RTN","ECPAT",74,0)
END I $D(ECGUI) D ^ECKILL Q
"RTN","ECPAT",75,0)
 W ! I $D(ECOUT),'ECOUT D
"RTN","ECPAT",76,0)
 . I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue  " R X:DTIME
"RTN","ECPAT",77,0)
 W @IOF D ^%ZISC D ^ECKILL S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECPAT",78,0)
 Q
"RTN","ECPAT",79,0)
HDR ; print heading
"RTN","ECPAT",80,0)
 ;
"RTN","ECPAT",81,0)
 ;ALB/ESD - Add Procedure Reason to column headings
"RTN","ECPAT",82,0)
 W:$Y @IOF
"RTN","ECPAT",83,0)
 W !,?32,"EVENT CAPTURE PATIENT SUMMARY FOR "_ECPAT,!,?32,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!,?32,"Run Date : ",ECRDT
"RTN","ECPAT",84,0)
 W !,"PROCEDURE DATE/TIME",?35,"CATEGORY",?80,"PROCEDURE",!,?80,"PROCEDURE (CPT) MODIFIER",!,"LOCATION",?35,"SERVICE",?80,"SECTION"
"RTN","ECPAT",85,0)
 W !
"RTN","ECPAT",86,0)
 W:$D(ECRY) "PROCEDURE REASON"
"RTN","ECPAT",87,0)
 W ?35,"ORDERING SECTION",?80,"PROVIDER",! F LINE=1:1:132 W "-"
"RTN","ECPAT",88,0)
 W !
"RTN","ECPAT",89,0)
 Q
"RTN","ECPAT",90,0)
PAGE ; end of page
"RTN","ECPAT",91,0)
 S X="" I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue, or ^ to quit   " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECPAT",92,0)
 I X["?" W !!,"If you want to continue with this report, press <RET>.  Entering an ^ will",!,"exit you from this option." G PAGE
"RTN","ECPAT",93,0)
 D:$D(ECY) HDR D:$D(ECN) HDR1
"RTN","ECPAT",94,0)
 Q
"RTN","ECPAT",95,0)
HDR1 ; print heading without categories
"RTN","ECPAT",96,0)
 ;
"RTN","ECPAT",97,0)
 ;ALB/ESD - Add Run Date to header
"RTN","ECPAT",98,0)
 W @IOF,!!,?32,"EVENT CAPTURE PATIENT SUMMARY FOR "_ECPAT,!,?36,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!,?36,"Run Date : ",ECRDT
"RTN","ECPAT",99,0)
 ;
"RTN","ECPAT",100,0)
 ;ALB/ESD - Add Procedure Reason to column headings
"RTN","ECPAT",101,0)
 W !!,"PROCEDURE DATE/TIME",?35,"PROCEDURE(VOLUME)",!,?35,"PROCEDURE (CPT) MODIFIER",!,"LOCATION",?35,"SERVICE",?80,"SECTION"
"RTN","ECPAT",102,0)
 W !
"RTN","ECPAT",103,0)
 W:$D(ECRY) "PROCEDURE REASON"
"RTN","ECPAT",104,0)
 W ?35,"ORDERING SECTION",?80,"PROVIDER",! F LINE=1:1:132 W "-"
"RTN","ECPAT",105,0)
 W !
"RTN","ECPAT",106,0)
 Q
"RTN","ECPAT",107,0)
BRO ;ask prt with category or without
"RTN","ECPAT",108,0)
 S ECN=1
"RTN","ECPAT",109,0)
 Q
"RTN","ECPCER")
0^13^B18605237
"RTN","ECPCER",1,0)
ECPCER ;BIR/JPW-Event Capture PCE Data Summary ;21 Jan 97
"RTN","ECPCER",2,0)
 ;;2.0; EVENT CAPTURE ;**4,18,23,47**;8 May 96
"RTN","ECPCER",3,0)
EN ; entry point
"RTN","ECPCER",4,0)
 K DIC S DIC=2,DIC(0)="QEAMZ",DIC("A")="Select Patient: " D ^DIC K DIC G:Y<0 END S ECDFN=+Y,ECPAT=$P(Y,"^",2)
"RTN","ECPCER",5,0)
DATE K %DT S %DT="AEX",%DT("A")="Start with Date:  " D ^%DT G:Y<0 END S ECSD=Y,%DT("A")="End with Date:  " D ^%DT G:Y<0 END S ECED=Y I ECED<ECSD W !,"End date must be after start date",! G DATE
"RTN","ECPCER",6,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_"^"_$$FMTE^XLFDT(ECED),ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECPCER",7,0)
 K IOP,%ZIS,POP,IO("Q") S %ZIS("A")="Select Device: ",%ZIS="QM" W !!,"This report is designed to use a 132 column format.",! D ^%ZIS G:POP END
"RTN","ECPCER",8,0)
 I $D(IO("Q")) K IO("Q") S (ZTSAVE("ECDFN"),ZTSAVE("ECPAT"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECSD"))="",ZTDESC="ECS/PCE PATIENT SUMMARY",ZTRTN="SUM^ECPCER",ZTIO=ION D ^%ZTLOAD,HOME^%ZIS G END
"RTN","ECPCER",9,0)
SUM ; entry when queued
"RTN","ECPCER",10,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECPCER",11,0)
 U IO S DATE=$O(^ECH("APAT",ECDFN,ECSD)) I 'DATE W:$Y @IOF W !!,"No Data for "_ECPAT_" during the time selected." G END
"RTN","ECPCER",12,0)
 S ECFN=+$O(^ECH("APAT",ECDFN,DATE,0)),ECL=+$P(^ECH(ECFN,0),"^",4) D HDR1
"RTN","ECPCER",13,0)
 S DATE=ECSD,(ECFN,ECOUT)=0 F  S DATE=$O(^ECH("APAT",ECDFN,DATE)) Q:'DATE!(DATE>ECED)!(ECOUT)  F  S ECFN=$O(^ECH("APAT",ECDFN,DATE,ECFN)) Q:'ECFN!(ECOUT)  D SET
"RTN","ECPCER",14,0)
END I $D(ECGUI) D ^ECKILL Q
"RTN","ECPCER",15,0)
 W ! I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue  " R X:DTIME
"RTN","ECPCER",16,0)
 W @IOF D ^%ZISC D ^ECKILL S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECPCER",17,0)
 Q
"RTN","ECPCER",18,0)
PAGE ; end of page
"RTN","ECPCER",19,0)
 S X="" I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue, or ^ to quit   " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECPCER",20,0)
 I X["?" W !!,"If you want to continue with this report, press <RET>.  Entering an ^ will",!,"exit you from this option." G PAGE
"RTN","ECPCER",21,0)
 D HDR1
"RTN","ECPCER",22,0)
 Q
"RTN","ECPCER",23,0)
HDR1 ; print heading without categories
"RTN","ECPCER",24,0)
 W:$Y @IOF
"RTN","ECPCER",25,0)
 ;W !,?31,"ECS/PCE PATIENT SUMMARY FOR "_ECPAT,!,?36,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!!,"PROCEDURE DATE/TIME",?25,"PROCEDURE NAME SENT (VOLUME)",?78,"CPT CODE (DIAGNOSIS)",!?78,"PROCEDURE (CPT) MODIFIER"
"RTN","ECPCER",26,0)
 W !,?31,"ECS/PCE PATIENT SUMMARY FOR "_ECPAT,!,?36,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!!,"PROCEDURE DATE/TIME",?25,"PROCEDURE NAME SENT (VOLUME)",?78,"PROVIDER"
"RTN","ECPCER",27,0)
 ;W !,"LOCATION",?25,"CLINIC (DSS ID)",?78,"PROVIDER",!
"RTN","ECPCER",28,0)
 W !,"LOCATION",?25,"CLINIC (DSS ID)",?78,"CPT CODE"
"RTN","ECPCER",29,0)
 W !,?25,"DIAGNOSIS",?78,"PROCEDURE (CPT) MODIFIER",!
"RTN","ECPCER",30,0)
 F LINE=1:1:132 W "-"
"RTN","ECPCER",31,0)
 W !
"RTN","ECPCER",32,0)
 Q
"RTN","ECPCER",33,0)
SET ; set data
"RTN","ECPCER",34,0)
 I $Y+7>IOSL D PAGE I ECOUT Q
"RTN","ECPCER",35,0)
 Q:'$D(^ECH(ECFN,"PCE"))  S ECEC=$G(^ECH(ECFN,"PCE"))
"RTN","ECPCER",36,0)
 I '$P($G(^ECH(ECFN,"P")),"^",7) Q
"RTN","ECPCER",37,0)
 S ECL=+$P(ECEC,"~",4),ECCPT=+$P(ECEC,"~",10),ECD=+$P(ECEC,"~",3),ECU=+$P(ECEC,"~",6),ECV=+$P(ECEC,"~",9),ECDX=+$P(ECEC,"~",11),ECID=$P(ECEC,"~",5),ECDT=+$P(ECEC,"~")
"RTN","ECPCER",38,0)
 S ECDN=$S($P($G(^SC(ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPCER",39,0)
 S ECPS=$$CPT^ICPTCOD(ECCPT,$P(ECEC,"~")),ECPS=$S(+ECPS>0:$P(ECPS,"^",2)_" "_$P(ECPS,"^",3),1:"CPT NAME UNKNOWN")
"RTN","ECPCER",40,0)
 S ECLN=$S($P($G(^DIC(4,ECL,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPCER",41,0)
 S ECID=$S($P($G(^DIC(40.7,ECID,0)),"^",2)]"":$P(^(0),"^",2),1:"DSS ID UNKNOWN")
"RTN","ECPCER",42,0)
 S ECDXN=$P($$ICDDX^ICDCODE(ECDX,$P(ECEC,"~")),U,2) S:ECDXN="" ECDXN="UNKNOWN"
"RTN","ECPCER",43,0)
 S ECPN=$S($P(ECEC,"~",16)]"":$P(ECEC,"~",16),1:ECPS)
"RTN","ECPCER",44,0)
 S ECUN=$S($P($G(^VA(200,ECU,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPCER",45,0)
 S ECUN=$S(ECUN'="UNKNOWN":$P(ECUN,",",2)_" "_$P(ECUN,","),1:"UNKNOWN")
"RTN","ECPCER",46,0)
 S ECDT=$$FMTE^XLFDT(ECDT)
"RTN","ECPCER",47,0)
 ;get secondary diagnosis codes, ALB/JAM
"RTN","ECPCER",48,0)
 S DXS=0,ECI=2 F  S DXS=$O(^ECH(ECFN,"DX",DXS)) Q:'DXS  D
"RTN","ECPCER",49,0)
 . S DXSIEN=+$G(^ECH(ECFN,"DX",DXS,0)) I DXSIEN="" Q
"RTN","ECPCER",50,0)
 . S ECDXSN=$P($$ICDDX^ICDCODE(DXSIEN,$P(ECEC,"~")),"^",2) I ECDXSN="" Q
"RTN","ECPCER",51,0)
 . I $L($G(ECDXS(ECI)))+$L(ECDXSN)>52 S ECI=ECI+1
"RTN","ECPCER",52,0)
 . I $G(ECDXS(ECI))="" S ECDXS(ECI)="Secondary Dx: "
"RTN","ECPCER",53,0)
 . S ECDXS(ECI)=ECDXS(ECI)_$S($L(ECDXS(ECI))=14:"",1:", ")_ECDXSN
"RTN","ECPCER",54,0)
 S ECMOD="" I $D(^ECH(ECFN,"PCE1")) S ECMOD=^("PCE1")
"RTN","ECPCER",55,0)
 ;W !,ECDT,?25,ECPN_" ("_ECV_")",?78,ECCPT_" ("_ECDXN_")",!
"RTN","ECPCER",56,0)
PRT W !,ECDT,?25,ECPN_" ("_ECV_")",?78,ECUN,!
"RTN","ECPCER",57,0)
 W $E(ECLN,1,22),?25,ECDN_" ("_ECID_")",?78,ECCPT,!
"RTN","ECPCER",58,0)
 W ?25,"Primary DX: ",ECDXN
"RTN","ECPCER",59,0)
 ;ALB/JAM print CPT modifiers and secondary diagnosis code
"RTN","ECPCER",60,0)
 F I=1:1 S MOD=$P(ECMOD,";",I) Q:MOD=""  D  I ECOUT Q
"RTN","ECPCER",61,0)
 . S MODESC=$$MODP^ICPTMOD(ECCPT,MOD,"E",$P(ECEC,"~")) I +MODESC'>0 Q
"RTN","ECPCER",62,0)
 . W ?25,$S(I>1:$G(ECDXS(I)),1:""),?79,"- ",MOD," ",$P(MODESC,"^",2),!
"RTN","ECPCER",63,0)
 . K ECDXS(I) I ($Y+3)>IOSL D PAGE I ECOUT Q
"RTN","ECPCER",64,0)
 W:ECMOD="" ! S DXS=""
"RTN","ECPCER",65,0)
 F  S DXS=$O(ECDXS(DXS)) Q:DXS=""  W ?25,ECDXS(DXS),!
"RTN","ECPCER",66,0)
 K I,MOD,MODESC,ECI,DXS,DXSIEN,ECDXS,ECDXN,ECDXSN
"RTN","ECPCER",67,0)
 ;W $E(ECLN,1,22),?25,ECDN_" ("_ECID_")",?78,ECUN,!
"RTN","ECPCER",68,0)
 Q
"RTN","ECPROV2")
0^32^B3828598
"RTN","ECPROV2",1,0)
ECPROV2 ;BIR/MAM-Event Capture Provider Summary (cont'd) ;20 Sep 93
"RTN","ECPROV2",2,0)
 ;;2.0; EVENT CAPTURE ;**5,47**;8 May 96
"RTN","ECPROV2",3,0)
 ;
"RTN","ECPROV2",4,0)
 D REASON^ECRUTL ;* Prompt to report Procedure Reasons
"RTN","ECPROV2",5,0)
 ;
"RTN","ECPROV2",6,0)
DATE W ! K %DT S %DT="AEX",%DT("A")="Start with Date: " D ^%DT I Y<0 S ECOUT=1 Q
"RTN","ECPROV2",7,0)
 S ECSD=Y,ECDATE=$$FMTE^XLFDT(ECSD),%DT("A")="End with Date: " D ^%DT I Y<0 S ECOUT=1 Q
"RTN","ECPROV2",8,0)
 I Y<ECSD W !!,"The ending date of the range must be later than the starting date." G DATE
"RTN","ECPROV2",9,0)
 S ECED=Y,ECDATE=ECDATE_"^"_$$FMTE^XLFDT(ECED),ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECPROV2",10,0)
 ;
"RTN","ECPROV2",11,0)
 ;ALB/ESD - Print report length informational message
"RTN","ECPROV2",12,0)
 W !,"This report is formatted for 132 column output."
"RTN","ECPROV2",13,0)
 W ! K IOP,POP,IO("Q"),%ZIS S %ZIS="QM",%ZIS("A")="Select Device: " D ^%ZIS I POP S ECOUT=1 Q
"RTN","ECPROV2",14,0)
 I $D(IO("Q")) K IO("Q") S ZTDESC="EVENT CAPTURE PROVIDER SUMMARY",ZTRTN="START^ECPROV2",ZTIO=ION D VAR,^%ZTLOAD,HOME^%ZIS K ZTSK Q
"RTN","ECPROV2",15,0)
 U IO
"RTN","ECPROV2",16,0)
START ; entry when queued
"RTN","ECPROV2",17,0)
 N ECPRV
"RTN","ECPROV2",18,0)
 K ^TMP($J) S ECINC=0
"RTN","ECPROV2",19,0)
 S ECPRV=$S(ECD="SOME":1,ECD="ALL":2,1:0) D ^ECPROV3
"RTN","ECPROV2",20,0)
 K ^TMP($J) I $D(ECGUI) D ^ECKILL Q
"RTN","ECPROV2",21,0)
 G:$D(ZTQUEUED) END
"RTN","ECPROV2",22,0)
 Q
"RTN","ECPROV2",23,0)
VAR ; set ZTSAVE array
"RTN","ECPROV2",24,0)
 S:'$D(UNIT) UNIT="" S (ZTSAVE("ECD*"),ZTSAVE("ECL*"),ZTSAVE("ECED"),ZTSAVE("ECSD"),ZTSAVE("ECDATE"),ZTSAVE("UNIT*"))=""
"RTN","ECPROV2",25,0)
 S ZTSAVE("ECRY")=""
"RTN","ECPROV2",26,0)
 Q
"RTN","ECPROV2",27,0)
END W @IOF D ^%ZISC W !! D ^ECKILL S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECPROV2",28,0)
 Q
"RTN","ECPROV3")
0^12^B31000509
"RTN","ECPROV3",1,0)
ECPROV3 ;BIR/MAM,JPW-Event Capture Provider Summary (cont'd) ;7 May 96
"RTN","ECPROV3",2,0)
 ;;2.0; EVENT CAPTURE ;**5,8,18,29,47**;8 May 96
"RTN","ECPROV3",3,0)
 ; This routine is used when printing the report for
"RTN","ECPROV3",4,0)
 ; all ACCESSIBLE DSS Units
"RTN","ECPROV3",5,0)
 ;JAM/3/7/03, This routine now combines ECPROV3, ECPROV4 and ECPROV5
"RTN","ECPROV3",6,0)
 ;
"RTN","ECPROV3",7,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECPROV3",8,0)
 I ECL D  D LOC,PRINT Q
"RTN","ECPROV3",9,0)
 .I ECPRV=1 D UNIT Q
"RTN","ECPROV3",10,0)
 .I 'ECPRV S ECC=+$P(^ECD(ECD,0),U,11) Q
"RTN","ECPROV3",11,0)
 S ECL=0 D
"RTN","ECPROV3",12,0)
 .F I=0:0 S ECL=$O(^ECH("ADT",ECL)) Q:'ECL  D
"RTN","ECPROV3",13,0)
 ..S ECLN=$P(^DIC(4,ECL,0),"^") I ECPRV D UNIT
"RTN","ECPROV3",14,0)
 ..I 'ECPRV S ECC=+$P(^ECD(ECD,0),U,11)
"RTN","ECPROV3",15,0)
 ..D LOC
"RTN","ECPROV3",16,0)
PRINT S (ECLN,ECPN,ECDN)=0,ECCN=""
"RTN","ECPROV3",17,0)
 F I=0:0 S ECLN=$O(^TMP($J,ECLN)) Q:ECLN=""!(ECOUT)!(ECLN["^")  D
"RTN","ECPROV3",18,0)
 .S ECDN="" D NOUNIT F I=0:0 S ECDN=$O(^TMP($J,ECLN,ECDN)) Q:ECDN=""!(ECOUT)  D CATS
"RTN","ECPROV3",19,0)
 K ECPNAM
"RTN","ECPROV3",20,0)
 Q
"RTN","ECPROV3",21,0)
CATS ; continue looping
"RTN","ECPROV3",22,0)
 I $O(^TMP($J,ECLN,ECDN,""))']"" D PAGE W !!!,?12,"NO PROCEDURES" S ECPG=1 Q
"RTN","ECPROV3",23,0)
 D PAGE Q:ECOUT  S ECPG=1,ECUN=0 F I=0:0 S ECUN=$O(^TMP($J,ECLN,ECDN,ECUN)) Q:ECUN=""!(ECOUT)  S ECINZ="^"_$O(^(ECUN,0)) D:$Y+7>IOSL PAGE Q:ECOUT  D PRO
"RTN","ECPROV3",24,0)
 Q
"RTN","ECPROV3",25,0)
PRO I $Y+10>IOSL D PAGE I ECOUT Q
"RTN","ECPROV3",26,0)
 W !!,ECUN S ECCN=0 F I=0:0 S ECCN=$O(^TMP($J,ECINZ,ECCN)) D:ECCN="" TOTP Q:ECCN=""!(ECOUT)  D MORE
"RTN","ECPROV3",27,0)
 Q
"RTN","ECPROV3",28,0)
MORE ;
"RTN","ECPROV3",29,0)
 ;ALB/ESD - Loop through to get procedure reason and print
"RTN","ECPROV3",30,0)
 W !,?3,ECCN S ECPN=0,(ECPRSN,ECPI)=""
"RTN","ECPROV3",31,0)
 F  S ECPN=$O(^TMP($J,ECINZ,ECCN,ECPN)) Q:ECPN=""!(ECOUT)  S ECUSER=1 D:$Y+7>IOSL PAGE Q:ECOUT  K ECUSER F  S ECPRSN=$O(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)) Q:ECPRSN=""!(ECOUT)  DO
"RTN","ECPROV3",32,0)
 .S ECCPT=$S($P(ECPN,"~",3)="I":$P(ECPN,"~",2),1:$P($G(^EC(725,$P(ECPN,"~",2),0)),"^",5))
"RTN","ECPROV3",33,0)
 .I ECCPT'="" D
"RTN","ECPROV3",34,0)
 ..S ECPI=$$CPT^ICPTCOD(ECCPT,$P(ECPN,"~",5)),ECCPT=$P(ECPI,"^",2)
"RTN","ECPROV3",35,0)
 .S ECPNAM=$S($P(ECPN,"~",3)="E":$P($G(^EC(725,+$P(ECPN,"~",2),0)),"^"),$P(ECPN,"~",3)="I":$P(ECPI,"^",3),1:"UNKNOWN")
"RTN","ECPROV3",36,0)
 .S ECPSY=$P(ECPN,"~",4),ECPSYN=""
"RTN","ECPROV3",37,0)
 .I ECPSY'="" S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECPROV3",38,0)
 .W !,?6,ECCPT," ",$E(ECPNAM,1,40) W:ECPSYN'="" " [",$E(ECPSYN,1,25),"]"
"RTN","ECPROV3",39,0)
 .W:$D(ECRY) ?70,ECPRSN
"RTN","ECPROV3",40,0)
 .W ?105,$J(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN),6)
"RTN","ECPROV3",41,0)
 .;print CPT procedure modifiers
"RTN","ECPROV3",42,0)
 .S IEN=""
"RTN","ECPROV3",43,0)
 .F  S IEN=$O(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",IEN)) Q:IEN=""  D  I ECOUT Q
"RTN","ECPROV3",44,0)
 ..S MODI=$$MOD^ICPTMOD(IEN,"I",$P(ECPN,"~",5))
"RTN","ECPROV3",45,0)
 ..S MOD=$P(MODI,"^",2) I MOD="" K MODI Q
"RTN","ECPROV3",46,0)
 ..S MODESC=$P(MODI,"^",3) I MODESC="" S MODESC="UNKNOWN"
"RTN","ECPROV3",47,0)
 ..S MODAMT=^TMP($J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",IEN)
"RTN","ECPROV3",48,0)
 ..W !?10,"- ",MOD," ",MODESC," (",MODAMT,")"
"RTN","ECPROV3",49,0)
 ..I ($Y+3)>IOSL D PAGE
"RTN","ECPROV3",50,0)
 .K MODESC,MOD,IEN,MODAMT,MODI
"RTN","ECPROV3",51,0)
 Q
"RTN","ECPROV3",52,0)
LOC S (ECDFN,ECOUT,^TMP($J,ECLN))=0
"RTN","ECPROV3",53,0)
 F I=0:0 S ECDFN=$O(^ECH("ADT",ECL,ECDFN)) Q:'ECDFN  D
"RTN","ECPROV3",54,0)
 .I ECPRV D GECD Q
"RTN","ECPROV3",55,0)
 .D GMM
"RTN","ECPROV3",56,0)
 Q
"RTN","ECPROV3",57,0)
GECD S ECD=0 F I=0:0 S ECD=$O(^ECH("ADT",ECL,ECDFN,ECD)) Q:'ECD  D GMM
"RTN","ECPROV3",58,0)
 Q
"RTN","ECPROV3",59,0)
GMM S MM=ECSD F I=0:0 S MM=$O(^ECH("ADT",ECL,ECDFN,ECD,MM)) Q:'MM!(MM>ECED)  D LOC1
"RTN","ECPROV3",60,0)
 Q
"RTN","ECPROV3",61,0)
LOC1 S ECFN=0 F I=0:0 S ECFN=$O(^ECH("ADT",ECL,ECDFN,ECD,MM,ECFN)) Q:'ECFN  D UTL
"RTN","ECPROV3",62,0)
 Q
"RTN","ECPROV3",63,0)
UTL ; set ^TMP($J,"ECPROV"
"RTN","ECPROV3",64,0)
 Q:'$D(^ECH(+ECFN,0))!(+$G(ECD)'=$P($G(^ECH(+ECFN,0)),"^",7))
"RTN","ECPROV3",65,0)
 S ECEC=^ECH(+ECFN,0),ECV=+$P(ECEC,"^",10),ECC=+$P(ECEC,"^",8)
"RTN","ECPROV3",66,0)
 S ECP=$P(ECEC,"^",9),ECU=+$P(ECEC,"^",11)
"RTN","ECPROV3",67,0)
 S ECCN=$S($P($G(^EC(726,ECC,0)),"^")]"":$P(^(0),"^"),1:"None")
"RTN","ECPROV3",68,0)
 Q:ECP']""
"RTN","ECPROV3",69,0)
 S ECD=+$P(ECEC,"^",7)
"RTN","ECPROV3",70,0)
 I ECPRV=1 Q:'$D(ECDU(ECD))  S ECDN=ECDU(ECD)
"RTN","ECPROV3",71,0)
 I ECPRV=2 S ECDN=$S($P($G(^ECD(ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPROV3",72,0)
 S ECUN=$S($P($G(^VA(200,ECU,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPROV3",73,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,"")),ECPN=""
"RTN","ECPROV3",74,0)
 S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECPROV3",75,0)
 I ECFILE=81 S ECPN=$P($$CPT^ICPTCOD(+ECP,$P(ECEC,"^",3)),"^",3)
"RTN","ECPROV3",76,0)
 I ECFILE=725 S ECPN=$P($G(^EC(725,+ECP,0)),"^")
"RTN","ECPROV3",77,0)
 I ECFILE="UNKNOWN"!(ECPN="") S ECPN="UNKNOWN"
"RTN","ECPROV3",78,0)
 S ECPN=$E(ECPN,1,5)_"~"_$P(ECP,";")_"~"_$E($P(ECP,";",2))_"~"_ECPSY_"~"_$P(ECEC,"^",3)
"RTN","ECPROV3",79,0)
 ;Get Procedure CPT modifiers
"RTN","ECPROV3",80,0)
 S ECMODF=0 K ECMOD
"RTN","ECPROV3",81,0)
 I $O(^ECH(+ECFN,"MOD",0))'="" S ECMODF=$$MOD^ECUTL(+ECFN,"I",.ECMOD)
"RTN","ECPROV3",82,0)
 ;
"RTN","ECPROV3",83,0)
 ;ALB/ESD - Get procedure reason from EC Patient file (#721) record
"RTN","ECPROV3",84,0)
 N ECLNK
"RTN","ECPROV3",85,0)
 S ECPRSN=""
"RTN","ECPROV3",86,0)
 S ECLNK=+$P(ECEC,"^",23)
"RTN","ECPROV3",87,0)
 I +ECLNK>0 DO
"RTN","ECPROV3",88,0)
 .S ECPRSN=$P($G(^ECL(ECLNK,0)),"^",1)
"RTN","ECPROV3",89,0)
 .S:+ECPRSN'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPROV3",90,0)
 .S:+ECPRSN>0 ECPRSN=$P(^ECR(ECPRSN,0),"^",1)
"RTN","ECPROV3",91,0)
 S:+ECLNK'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPROV3",92,0)
 I '$D(ECRY) S ECPRSN="REASON NOT DEFINED" ;group proc reason-not print
"RTN","ECPROV3",93,0)
 I '$D(^TMP($J,ECLN,ECDN,ECUN)) S ECINC=ECINC+1,ECINZ="^"_ECINC,^(ECUN)=0,^(ECUN,ECINC)=0
"RTN","ECPROV3",94,0)
 S ECINZ="^"_$O(^TMP($J,ECLN,ECDN,ECUN,0))
"RTN","ECPROV3",95,0)
 I '$D(^TMP($J,ECINZ,ECCN)) S ^TMP($J,ECINZ,ECCN)=0
"RTN","ECPROV3",96,0)
 ;
"RTN","ECPROV3",97,0)
 ;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPROV3",98,0)
 I '$D(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)) S ^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)=0
"RTN","ECPROV3",99,0)
 S ^TMP($J,ECLN)=^TMP($J,ECLN)+ECV
"RTN","ECPROV3",100,0)
 S ^TMP($J,ECLN,ECDN,ECUN)=^TMP($J,ECLN,ECDN,ECUN)+ECV
"RTN","ECPROV3",101,0)
 S ^TMP($J,ECINZ,ECCN)=^TMP($J,ECINZ,ECCN)+ECV
"RTN","ECPROV3",102,0)
 ;
"RTN","ECPROV3",103,0)
 ;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPROV3",104,0)
 S ^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)=^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)+ECV
"RTN","ECPROV3",105,0)
 ;ALB/JAM - Add Procedure CPT modifier to ^TMP array
"RTN","ECPROV3",106,0)
 S MOD="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D
"RTN","ECPROV3",107,0)
 . S ^TMP($J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",MOD)=$G(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",MOD))+ECV
"RTN","ECPROV3",108,0)
 Q
"RTN","ECPROV3",109,0)
PAGE ; end of page
"RTN","ECPROV3",110,0)
 I $D(ECPG),$E(IOST,1,2)="C-" W !!,"Press <RET> to continue, or ^ to quit  " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECPROV3",111,0)
HDR ; print heading
"RTN","ECPROV3",112,0)
 W:$Y @IOF W !!,?49,"EVENT CAPTURE PROVIDER SUMMARY",!,?49,"FROM "_$P(ECDATE,"^")_"  TO "_$P(ECDATE,"^",2),!,?49,"Run Date : ",ECRDT
"RTN","ECPROV3",113,0)
 W !!?3,"Category",!,?6,"CPT Code",?20,"Description"
"RTN","ECPROV3",114,0)
 W:$D(ECRY) ?70,"Procedure Reason"
"RTN","ECPROV3",115,0)
 W ?105,"Volume",!,?10,"CPT Modifier (volume)",!
"RTN","ECPROV3",116,0)
 F LINE=1:1:132 W "-"
"RTN","ECPROV3",117,0)
 W !!,"Location: "_ECLN,! W:ECDN]"" "DSS Unit: "_ECDN
"RTN","ECPROV3",118,0)
 I ECPRV,$D(ECUSER) W !!,ECUN,!,ECCN
"RTN","ECPROV3",119,0)
 Q
"RTN","ECPROV3",120,0)
TOTP Q:ECOUT  W !,?105,"------",!,"Total Procedures for "_ECUN,?105,$J(^TMP($J,ECLN,ECDN,ECUN),6)
"RTN","ECPROV3",121,0)
 Q
"RTN","ECPROV3",122,0)
UNIT ; set units
"RTN","ECPROV3",123,0)
 S CNT=0 F I=0:0 S CNT=$O(UNIT(CNT)) Q:'CNT  S ECDU(+UNIT(CNT))=$P(UNIT(CNT),"^",2)
"RTN","ECPROV3",124,0)
 Q
"RTN","ECPROV3",125,0)
 ;
"RTN","ECPROV3",126,0)
NOUNIT ;Nothing there
"RTN","ECPROV3",127,0)
 I $O(^TMP($J,ECLN,ECDN))']"" D PAGE W !!!,?12,"NO PROCEDURES",! S ECPG=1
"RTN","ECPROV3",128,0)
 Q
"RTN","ECPROV4")
1^34
"RTN","ECPROV5")
1^35
"RTN","ECPRSUM1")
0^11^B26423434
"RTN","ECPRSUM1",1,0)
ECPRSUM1 ;BIR/DMA,RHK,JPW-Provider Summary (1, 2, and 3) ;27 Mar 96
"RTN","ECPRSUM1",2,0)
 ;;2.0; EVENT CAPTURE ;**5,18,33,47**;8 May 96
"RTN","ECPRSUM1",3,0)
 S DIC=200,DIC(0)="AQEMZ",DIC("A")="Select Provider: "
"RTN","ECPRSUM1",4,0)
 D ^DIC K DIC G END:Y<0 S ECU=+Y,ECUN=$P(Y,"^",2)
"RTN","ECPRSUM1",5,0)
 D REASON^ECRUTL ;* Prompt to include Procedure Reasons
"RTN","ECPRSUM1",6,0)
BDATE K %DT S %DT="AEX",%DT("A")="Starting with Date: "
"RTN","ECPRSUM1",7,0)
 D ^%DT G:Y<0 END S ECSD=Y
"RTN","ECPRSUM1",8,0)
EDATE K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT G:Y<0 END
"RTN","ECPRSUM1",9,0)
 I Y<ECSD D  G EDATE
"RTN","ECPRSUM1",10,0)
 .W !!,"The ending date cannot be earlier than the starting date.  "
"RTN","ECPRSUM1",11,0)
 .W "Please re-enter",!,"the ending date.",!
"RTN","ECPRSUM1",12,0)
 S ECED=Y,ECDATE=ECSD_"^"_ECED
"RTN","ECPRSUM1",13,0)
DEV ;dev call
"RTN","ECPRSUM1",14,0)
 W !!,"This report is formatted for 132 column output.",!!
"RTN","ECPRSUM1",15,0)
 S %ZIS="Q",%ZIS("A")="Select Device: " D ^%ZIS G END:POP
"RTN","ECPRSUM1",16,0)
 I $D(IO("Q")) K ZTSAVE S (ZTSAVE("ECRY"),ZTSAVE("ECSD"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECU"),ZTSAVE("ECUN"))="",ZTDESC="Event Capture Provider Summary",ZTRTN="EN^ECPRSUM1" D ^%ZTLOAD,HOME^%ZIS K ZTSK G END
"RTN","ECPRSUM1",17,0)
 ;
"RTN","ECPRSUM1",18,0)
EN ;QUEUED ENTRY POINT
"RTN","ECPRSUM1",19,0)
 N ECPG,ECGT,EC,ECCAT
"RTN","ECPRSUM1",20,0)
 U IO S (ECOUT,ECPG,ECGT(1),ECGT(2),ECGT(3))=0
"RTN","ECPRSUM1",21,0)
 K ^TMP($J) S ECOUT=0,ECSD=ECSD-.1,ECED=ECED+.3
"RTN","ECPRSUM1",22,0)
 F ECD=ECSD:0 S ECD=$O(^ECH("AC",ECD)) Q:'ECD  Q:ECD>ECED  F DA=0:0 S DA=$O(^ECH("AC",ECD,DA)) Q:'DA  S EC=$G(^ECH(DA,0)),A(1)=$P(EC,"^",11)=ECU,A(2)=$P(EC,"^",15)=ECU,A(3)=$P(EC,"^",17)=ECU I A(1)!A(2)!A(3) D
"RTN","ECPRSUM1",23,0)
 .S ECPAT=+$P(EC,"^",2),PA=$G(^DPT(ECPAT,0))
"RTN","ECPRSUM1",24,0)
 .S SS=$P(PA,"^",9)
"RTN","ECPRSUM1",25,0)
 .S PA=$S($P(PA,"^")]"":$P(PA,"^"),1:"UNKNOWN")
"RTN","ECPRSUM1",26,0)
 .S ECP=$P(EC,"^",9)
"RTN","ECPRSUM1",27,0)
 .Q:ECP']""
"RTN","ECPRSUM1",28,0)
 .S ECLOC=+$P(EC,U,4)
"RTN","ECPRSUM1",29,0)
 .S ECUNIT=+$P(EC,U,7)
"RTN","ECPRSUM1",30,0)
 .S ECCAT=+$P(EC,U,8)
"RTN","ECPRSUM1",31,0)
 .S ECPSY=+$O(^ECJ("AP",ECLOC,ECUNIT,ECCAT,ECP,""))
"RTN","ECPRSUM1",32,0)
 .S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECPRSUM1",33,0)
 .S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECPRSUM1",34,0)
 .I ECFILE="UNKNOWN" S ECPN="UNKNOWN"
"RTN","ECPRSUM1",35,0)
 .I ECFILE=81 S ECPN=$S($P($G(^ICPT(+ECP,0)),"^",2)]"":$P(^(0),"^",2),1:"UNKNOWN")
"RTN","ECPRSUM1",36,0)
 .I ECFILE=725 S ECPN=$S($P($G(^EC(725,+ECP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPRSUM1",37,0)
 .S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5))
"RTN","ECPRSUM1",38,0)
 .I ECCPT'="" D
"RTN","ECPRSUM1",39,0)
 ..S ECCPT=$$GET1^DIQ(81,ECCPT,.01,"E")
"RTN","ECPRSUM1",40,0)
 ..I ECCPT'="" S ECCPT=ECCPT_" "
"RTN","ECPRSUM1",41,0)
 .S ECPTDS=ECCPT_ECPN_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")
"RTN","ECPRSUM1",42,0)
 .;Get Procedure CPT modifiers
"RTN","ECPRSUM1",43,0)
 .S ECMODF=0 I $O(^ECH(DA,"MOD",0))'="" D
"RTN","ECPRSUM1",44,0)
 ..K ECMOD S ECMODF=$$MOD^ECUTL(DA,"I",.ECMOD)
"RTN","ECPRSUM1",45,0)
 .;
"RTN","ECPRSUM1",46,0)
 .;ALB/ESD - Get procedure reason from EC Patient file (#721) record
"RTN","ECPRSUM1",47,0)
 .S ECPRSN=""
"RTN","ECPRSUM1",48,0)
 .S ECLNK=+$P(EC,"^",23)
"RTN","ECPRSUM1",49,0)
 .I +ECLNK>0 DO
"RTN","ECPRSUM1",50,0)
 ..S ECPRSN=$P($G(^ECL(ECLNK,0)),"^",1)
"RTN","ECPRSUM1",51,0)
 ..S:+ECPRSN'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",52,0)
 ..S:+ECPRSN>0 ECPRSN=$P(^ECR(ECPRSN,0),"^",1)
"RTN","ECPRSUM1",53,0)
 .S:+ECLNK'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",54,0)
 .I '$D(ECRY) S ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",55,0)
 .;
"RTN","ECPRSUM1",56,0)
 .;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPRSUM1",57,0)
 .S PRO=ECPN I PRO]"" S V=+$P(EC,"^",10) D
"RTN","ECPRSUM1",58,0)
 ..F J=1,2,3 I A(J) S ^(J)=$G(^TMP($J,PRO,ECPRSN,PA_"^"_SS,J))+V D
"RTN","ECPRSUM1",59,0)
 ...I $G(^TMP($J,PRO))="" S ^TMP($J,PRO)=ECPTDS
"RTN","ECPRSUM1",60,0)
 ..;ALB/JAM - Add Procedure CPT modifier to ^TMP array
"RTN","ECPRSUM1",61,0)
 ..S MOD="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D
"RTN","ECPRSUM1",62,0)
 ...S ^TMP($J,PRO,ECPRSN,PA_"^"_SS,"MOD",MOD)=$G(^TMP($J,PRO,ECPRSN,PA_"^"_SS,"MOD",MOD))+V
"RTN","ECPRSUM1",63,0)
 K ECLNK,MOD,ECPTDS
"RTN","ECPRSUM1",64,0)
 ;
"RTN","ECPRSUM1",65,0)
PRINT ;print report
"RTN","ECPRSUM1",66,0)
 S ECSD=$P(ECDATE,"^"),ECED=$P(ECDATE,"^",2)
"RTN","ECPRSUM1",67,0)
 D HDR I '$D(^TMP($J)) W !!,?12,"No Event Capture Provider Summary for "_ECUN_" to report for the date range selected.",!! D PAGE G END
"RTN","ECPRSUM1",68,0)
 S (A(1),A(2),A(3))=0
"RTN","ECPRSUM1",69,0)
 S (ECREAS,PA,PR)=""
"RTN","ECPRSUM1",70,0)
 F  S PR=$O(^TMP($J,PR)),PA="" Q:PR=""  D  Q:ECOUT
"RTN","ECPRSUM1",71,0)
 .W !,^TMP($J,PR)
"RTN","ECPRSUM1",72,0)
 .F  S ECREAS=$O(^TMP($J,PR,ECREAS)) Q:ECREAS=""  D  Q:ECOUT
"RTN","ECPRSUM1",73,0)
 ..F  S PA=$O(^TMP($J,PR,ECREAS,PA)) D:PA="" TOT Q:PA=""  D  Q:ECOUT
"RTN","ECPRSUM1",74,0)
 ...S A=$G(^TMP($J,PR,ECREAS,PA,0))
"RTN","ECPRSUM1",75,0)
 ...W ! W:$D(ECRY) ?5,ECREAS
"RTN","ECPRSUM1",76,0)
 ...W ?37,$P(PA,"^"),?69,$P(PA,"^",2)
"RTN","ECPRSUM1",77,0)
 ...F J=1,2,3 S A=$G(^TMP($J,PR,ECREAS,PA,J)),A(J)=A(J)+A W ?10*J+70,$J(A,5,0) I J=3 I $Y+5>IOSL D PAGE Q:ECOUT  D HDR
"RTN","ECPRSUM1",78,0)
 ...;print CPT procedure modifiers
"RTN","ECPRSUM1",79,0)
 ...Q:ECOUT  S IEN=""
"RTN","ECPRSUM1",80,0)
 ...F  S IEN=$O(^TMP($J,PR,ECREAS,PA,"MOD",IEN)) Q:IEN=""  D  I ECOUT Q
"RTN","ECPRSUM1",81,0)
 ....S MOD=$$GET1^DIQ(81.3,IEN,.01,"E") I MOD="" Q
"RTN","ECPRSUM1",82,0)
 ....S MODESC=$$GET1^DIQ(81.3,IEN,.02,"E") I MODESC="" S MODESC="UNKNOWN"
"RTN","ECPRSUM1",83,0)
 ....S MODAMT=^TMP($J,PR,ECREAS,PA,"MOD",IEN)
"RTN","ECPRSUM1",84,0)
 ....W !?5,"- ",MOD," ",MODESC," (",MODAMT,")"
"RTN","ECPRSUM1",85,0)
 ....I ($Y+4)>IOSL D PAGE Q:ECOUT  D HDR
"RTN","ECPRSUM1",86,0)
 ...K MODESC,MOD,MODAMT
"RTN","ECPRSUM1",87,0)
 W !!,?81,"*************************",!,?35,"GRAND TOTAL - PROCEDURES"
"RTN","ECPRSUM1",88,0)
 F J=1,2,3 W ?10*J+70,$J(ECGT(J),5,0)
"RTN","ECPRSUM1",89,0)
 D:'ECOUT PAGE G END
"RTN","ECPRSUM1",90,0)
 ;
"RTN","ECPRSUM1",91,0)
PAGE ; end of page
"RTN","ECPRSUM1",92,0)
 I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECPRSUM1",93,0)
 Q
"RTN","ECPRSUM1",94,0)
HDR ;
"RTN","ECPRSUM1",95,0)
 W:$Y @IOF S ECPG=ECPG+1
"RTN","ECPRSUM1",96,0)
 W !!?33,"EVENT CAPTURE PROVIDER SUMMARY FOR ",ECUN,?118,"Page: ",ECPG,!,?33,"FOR THE DATE RANGE ",$$FMTE^XLFDT(ECSD)," TO ",$$FMTE^XLFDT(ECED),!!,"PROCEDURE",?85,"TOTALS AS PROVIDER #",!
"RTN","ECPRSUM1",97,0)
 W:$D(ECRY) "PROCEDURE REASON" W ?40,"PATIENT",?71,"SSN",?84,1,?94,2,?104,3
"RTN","ECPRSUM1",98,0)
 W !,?5,"CPT MODIFIER (Volume of modifiers use)",!
"RTN","ECPRSUM1",99,0)
 F RK=1:1:IOM W "-"
"RTN","ECPRSUM1",100,0)
 W !
"RTN","ECPRSUM1",101,0)
 Q
"RTN","ECPRSUM1",102,0)
 ;
"RTN","ECPRSUM1",103,0)
TOT W !,?81,"-------------------------",!,?35,"TOTAL PROCEDURES"
"RTN","ECPRSUM1",104,0)
 F J=1,2,3 W ?10*J+70,$J(A(J),5,0) S ECGT(J)=ECGT(J)+A(J)
"RTN","ECPRSUM1",105,0)
 W ! S (A(1),A(2),A(3))=0
"RTN","ECPRSUM1",106,0)
 Q
"RTN","ECPRSUM1",107,0)
 ;
"RTN","ECPRSUM1",108,0)
 ;
"RTN","ECPRSUM1",109,0)
END D ^ECKILL K ^TMP($J),ZTSK W @IOF
"RTN","ECPRSUM1",110,0)
 K ^TMP($J) Q:$D(ECGUI)
"RTN","ECPRSUM1",111,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECPRSUM1",112,0)
 D ^%ZISC
"RTN","ECPRSUM1",113,0)
 Q
"RTN","ECRDSSU")
0^10^B48492091
"RTN","ECRDSSU",1,0)
ECRDSSU ;ALB/ESD - DSS Unit Workload Summary Report ; 5 Aug 97
"RTN","ECRDSSU",2,0)
 ;;2.0; EVENT CAPTURE ;**5,8,10,14,18,47**;8 May 96
"RTN","ECRDSSU",3,0)
 ;
"RTN","ECRDSSU",4,0)
EN ;- Get location(s), DSS Unit(s), start & end dates, device
"RTN","ECRDSSU",5,0)
 ;
"RTN","ECRDSSU",6,0)
 N ECLOC,ECDSSU,ECSTDT,ECENDDT
"RTN","ECRDSSU",7,0)
 I '$$ASKLOC^ECRUTL G ENQ
"RTN","ECRDSSU",8,0)
 I '$$ASKDSS^ECRUTL G ENQ
"RTN","ECRDSSU",9,0)
 I '$$STDT^ECRUTL G ENQ
"RTN","ECRDSSU",10,0)
 I '$$ENDDT^ECRUTL(ECSTDT) G ENQ
"RTN","ECRDSSU",11,0)
 I $$ASKDEV D STRPT^ECRDSSU
"RTN","ECRDSSU",12,0)
ENQ Q
"RTN","ECRDSSU",13,0)
 ;
"RTN","ECRDSSU",14,0)
 ;
"RTN","ECRDSSU",15,0)
STRPT ;- Main entry point
"RTN","ECRDSSU",16,0)
 ;
"RTN","ECRDSSU",17,0)
 N ECCRT,ECDSSNM,ECDSSTOT,ECLOCNM,ECQUIT,ECPAGE
"RTN","ECRDSSU",18,0)
 S (ECDSSTOT,ECPAGE,ECQUIT)=0,(ECDSSNM,ECLOCNM)=""
"RTN","ECRDSSU",19,0)
 ; Determine if device is CRT
"RTN","ECRDSSU",20,0)
 S ECCRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","ECRDSSU",21,0)
 U IO
"RTN","ECRDSSU",22,0)
 D GETREC
"RTN","ECRDSSU",23,0)
 D LOOP
"RTN","ECRDSSU",24,0)
 I ECQUIT G STRPTQ
"RTN","ECRDSSU",25,0)
 D PRTCAT
"RTN","ECRDSSU",26,0)
 I ECQUIT G STRPTQ
"RTN","ECRDSSU",27,0)
 D DSSCHG
"RTN","ECRDSSU",28,0)
 I ECQUIT G STRPTQ
"RTN","ECRDSSU",29,0)
 I $D(ECGUI) G STRPTQ
"RTN","ECRDSSU",30,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECRDSSU",31,0)
 D ^%ZISC
"RTN","ECRDSSU",32,0)
STRPTQ K ^TMP("ECRPT")
"RTN","ECRDSSU",33,0)
 Q
"RTN","ECRDSSU",34,0)
 ;
"RTN","ECRDSSU",35,0)
 ;
"RTN","ECRDSSU",36,0)
GETREC ;- Loop thru "ADT" x-ref of EC Patient file (#721)
"RTN","ECRDSSU",37,0)
 ;
"RTN","ECRDSSU",38,0)
 N ECD,ECDFN,ECIEN,ECL,ECNT,I,J,ECREC,ECST
"RTN","ECRDSSU",39,0)
 S ECNT=0
"RTN","ECRDSSU",40,0)
 F I=0:0 S I=$O(ECLOC(I)) Q:'I  S ECL=+$P(ECLOC(I),U) D
"RTN","ECRDSSU",41,0)
 . S ECDFN=0
"RTN","ECRDSSU",42,0)
 . F  S ECDFN=+$O(^ECH("ADT",ECL,ECDFN)) Q:'ECDFN  F J=0:0 S J=$O(ECDSSU(J)) Q:'J  S ECD=+$P(ECDSSU(J),U) D
"RTN","ECRDSSU",43,0)
 .. S ECIEN=0
"RTN","ECRDSSU",44,0)
 .. S ECST=ECSTDT
"RTN","ECRDSSU",45,0)
 .. F  S ECST=+$O(^ECH("ADT",ECL,ECDFN,ECD,ECST)) Q:'ECST!(ECST>ECENDDT)  F  S ECIEN=+$O(^ECH("ADT",ECL,ECDFN,ECD,ECST,ECIEN)) Q:'ECIEN  D
"RTN","ECRDSSU",46,0)
 ... S ECREC=$G(^ECH(ECIEN,0))
"RTN","ECRDSSU",47,0)
 ... I ECD=+$P(ECREC,"^",7) D CRETMP
"RTN","ECRDSSU",48,0)
 Q
"RTN","ECRDSSU",49,0)
 ;
"RTN","ECRDSSU",50,0)
 ;
"RTN","ECRDSSU",51,0)
CRETMP ;- Create ^TMP("ECRPT" array w/format:
"RTN","ECRDSSU",52,0)
 ;    ^TMP("ECRPT",$J,location,DSS Unit,category,count)=procedure^volume^
"RTN","ECRDSSU",53,0)
 ;                                                         CPT modifiers
"RTN","ECRDSSU",54,0)
 ;
"RTN","ECRDSSU",55,0)
 N ECTC,ECTP,ECMOD,ECMODS,ECMODF,SEQ
"RTN","ECRDSSU",56,0)
 S ECTC=$S(+$P(ECREC,"^",8)=0:-1,1:+$P(ECREC,"^",8)),ECTP=$P($G(ECREC),"^",9)
"RTN","ECRDSSU",57,0)
 S ECNT=ECNT+1,ECTP=$P(ECTP,";")_";"_$E($P(ECTP,";",2),1)
"RTN","ECRDSSU",58,0)
 ;ALB/JAM - Get Procedure CPT modifiers
"RTN","ECRDSSU",59,0)
 S ECMODS="" I $O(^ECH(ECIEN,"MOD",0))'="" D
"RTN","ECRDSSU",60,0)
 . K ECMOD S ECMODF=$$MOD^ECUTL(ECIEN,"I",.ECMOD) I 'ECMODF Q
"RTN","ECRDSSU",61,0)
 . S SEQ="" F  S SEQ=$O(ECMOD(SEQ)) Q:SEQ=""  D
"RTN","ECRDSSU",62,0)
 . . S ECMODS=ECMODS_$S(ECMODS="":"",1:";")_SEQ
"RTN","ECRDSSU",63,0)
 S ^TMP("ECRPT",$J,+$P(ECREC,"^",4),+$P(ECREC,"^",7),ECTC,ECNT)=ECTP_"^"_+$P(ECREC,"^",10)_"^"_ECMODS
"RTN","ECRDSSU",64,0)
 Q
"RTN","ECRDSSU",65,0)
 ;
"RTN","ECRDSSU",66,0)
LOOP ;- Loop through data
"RTN","ECRDSSU",67,0)
 ;
"RTN","ECRDSSU",68,0)
 N ECCAT,ECNT,ECOCAT,ECDSS,ECLOCAT,ECPR,ECVOL,ECMOD
"RTN","ECRDSSU",69,0)
 S (ECNT,ECDSS,ECLOCAT)=0,(ECCAT,ECOCAT)=""
"RTN","ECRDSSU",70,0)
 I '$D(^TMP("ECRPT",$J)) G LOOPQ
"RTN","ECRDSSU",71,0)
 F  S ECLOCAT=$O(^TMP("ECRPT",$J,ECLOCAT)) Q:'ECLOCAT  D
"RTN","ECRDSSU",72,0)
 . F  S ECDSS=$O(^TMP("ECRPT",$J,ECLOCAT,ECDSS)) Q:'ECDSS  D
"RTN","ECRDSSU",73,0)
 .. Q:ECQUIT
"RTN","ECRDSSU",74,0)
 .. D PRTCAT Q:ECQUIT
"RTN","ECRDSSU",75,0)
 .. D DSSCHG Q:ECQUIT
"RTN","ECRDSSU",76,0)
 .. S ECOCAT=0
"RTN","ECRDSSU",77,0)
 .. D HDR
"RTN","ECRDSSU",78,0)
 .. D LOCNAM,DSSUNAM
"RTN","ECRDSSU",79,0)
 .. W !!,"Location: ",$G(ECLOCNM),!,"DSS Unit: ",$G(ECDSSNM)
"RTN","ECRDSSU",80,0)
 .. F  S ECCAT=$O(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT)) Q:ECCAT=""  D
"RTN","ECRDSSU",81,0)
 ... D CATCHG
"RTN","ECRDSSU",82,0)
 ... Q:ECQUIT
"RTN","ECRDSSU",83,0)
 ... F  S ECNT=$O(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)) Q:'ECNT  D
"RTN","ECRDSSU",84,0)
 .... S (ECPR,ECVOL)=0
"RTN","ECRDSSU",85,0)
 .... S ECPR=$P($G(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)),"^")
"RTN","ECRDSSU",86,0)
 .... S ECVOL=$P($G(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)),"^",2)
"RTN","ECRDSSU",87,0)
 .... S ECMOD=$P($G(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)),"^",3)
"RTN","ECRDSSU",88,0)
 .... I '$D(ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)) S ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)=ECVOL D:ECMOD'="" SETMOD Q
"RTN","ECRDSSU",89,0)
 .... S ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)=ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)+ECVOL D:ECMOD'="" SETMOD
"RTN","ECRDSSU",90,0)
LOOPQ Q
"RTN","ECRDSSU",91,0)
SETMOD ;ALB/JAM - Set CPT modifiers in ECTMP array
"RTN","ECRDSSU",92,0)
 N MOD,I
"RTN","ECRDSSU",93,0)
 F I=1:1 S MOD=$P(ECMOD,";",I) Q:MOD=""  D
"RTN","ECRDSSU",94,0)
 . S ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR,MOD)=$G(ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR,MOD))+ECVOL
"RTN","ECRDSSU",95,0)
 Q
"RTN","ECRDSSU",96,0)
 ;
"RTN","ECRDSSU",97,0)
CATCHG ;- Category change
"RTN","ECRDSSU",98,0)
 ;
"RTN","ECRDSSU",99,0)
 I ECCAT=""&(ECOCAT="") G CATCHGQ
"RTN","ECRDSSU",100,0)
 I ECOCAT="" S ECOCAT=ECCAT G CATCHGQ
"RTN","ECRDSSU",101,0)
 I $G(ECOCAT)'=$G(ECCAT) D
"RTN","ECRDSSU",102,0)
 . D PRTCAT
"RTN","ECRDSSU",103,0)
 . S ECOCAT=ECCAT
"RTN","ECRDSSU",104,0)
CATCHGQ Q
"RTN","ECRDSSU",105,0)
 ;
"RTN","ECRDSSU",106,0)
PRTCAT ;- Print category
"RTN","ECRDSSU",107,0)
 ;
"RTN","ECRDSSU",108,0)
 Q:'$D(ECTMP)
"RTN","ECRDSSU",109,0)
 N ECC,ECCATOT,ECDSS,ECFLG,ECLOC,ECPR,ECPRN,ECSYI,ECSYN,ECCNAM,ECPNAM
"RTN","ECRDSSU",110,0)
 N ECCPT,ECPI
"RTN","ECRDSSU",111,0)
 S (ECCATOT,ECDSS,ECFLG,ECLOC)=0,(ECC,ECCNAM,ECPR)=""
"RTN","ECRDSSU",112,0)
 F  S ECLOC=$O(ECTMP(ECLOC)) Q:'ECLOC  F  S ECDSS=$O(ECTMP(ECLOC,ECDSS)) Q:'ECDSS  F  S ECC=$O(ECTMP(ECLOC,ECDSS,ECC)) Q:ECC=""  F  S ECPR=$O(ECTMP(ECLOC,ECDSS,ECC,ECPR)) Q:ECPR=""  D  I ECQUIT Q
"RTN","ECRDSSU",113,0)
 . S ECCNAM=$S($P($G(^EC(726,$S(ECC<1:0,1:+ECC),0)),"^")'="":$P($G(^EC(726,$S(ECC<1:0,1:+ECC),0)),"^"),1:"None")
"RTN","ECRDSSU",114,0)
 . S ECPRN=$S($P(ECPR,";",2)="E":ECPR_"C(725,",1:ECPR_"CPT(")
"RTN","ECRDSSU",115,0)
 . S ECSYI=+$O(^ECJ("AP",ECLOC,ECDSS,$S(ECC<1:0,1:+ECC),ECPRN,0)),ECSYN=$P($G(^ECJ(ECSYI,"PRO")),"^",2)
"RTN","ECRDSSU",116,0)
 . S ECPI=""
"RTN","ECRDSSU",117,0)
 . S ECCPT=$S($P(ECPR,";",2)="I":+ECPR,1:$P($G(^EC(725,+ECPR,0)),"^",5))
"RTN","ECRDSSU",118,0)
 . I ECCPT'="" S ECPI=$$CPT^ICPTCOD(ECCPT),ECCPT=$P(ECPI,"^",2)
"RTN","ECRDSSU",119,0)
 . S ECPNAM=$S($P(ECPR,";",2)="E":$P($G(^EC(725,+$P(ECPR,";"),0)),"^"),$P(ECPR,";",2)="I":$P(ECPI,"^",3),1:"")
"RTN","ECRDSSU",120,0)
 . Q:ECQUIT
"RTN","ECRDSSU",121,0)
 . I $Y>(IOSL-8) D PAUSE Q:ECQUIT  D HDR
"RTN","ECRDSSU",122,0)
 . W:'ECFLG !!?3,"Category:",!?6,ECCNAM S ECFLG=1
"RTN","ECRDSSU",123,0)
 . W !?8,ECCPT,?14,$E(ECPNAM,1,30),?46,$S(ECSYN]"":$E(ECSYN,1,21),1:""),?69,$J($P($G(ECTMP(ECLOC,ECDSS,ECC,ECPR)),"^"),6)
"RTN","ECRDSSU",124,0)
 . S ECCATOT=ECCATOT+$P($G(ECTMP(ECLOC,ECDSS,ECC,ECPR)),"^")
"RTN","ECRDSSU",125,0)
 . I $O(ECTMP(ECLOC,ECDSS,ECC,ECPR,""))'="" D PRTMOD I ECQUIT Q
"RTN","ECRDSSU",126,0)
 G:ECQUIT PRTCATQ
"RTN","ECRDSSU",127,0)
 I $Y>(IOSL-8) D PAUSE G:ECQUIT PRTCATQ D HDR
"RTN","ECRDSSU",128,0)
 W !?69,"------"
"RTN","ECRDSSU",129,0)
 W !?6,"Total Procedures for ",ECCNAM,?69,$J(ECCATOT,6),!
"RTN","ECRDSSU",130,0)
 S ECDSSTOT=ECDSSTOT+ECCATOT
"RTN","ECRDSSU",131,0)
PRTCATQ K ECTMP
"RTN","ECRDSSU",132,0)
 Q
"RTN","ECRDSSU",133,0)
 ;
"RTN","ECRDSSU",134,0)
PRTMOD ;ALB/JAM - Print CPT modifiers
"RTN","ECRDSSU",135,0)
 N MOD,IEN,MODESC,MODI S IEN=""
"RTN","ECRDSSU",136,0)
 F  S IEN=$O(ECTMP(ECLOC,ECDSS,ECC,ECPR,IEN)) Q:IEN=""  D
"RTN","ECRDSSU",137,0)
 . I $Y>(IOSL-5) D PAUSE Q:ECQUIT  D HDR
"RTN","ECRDSSU",138,0)
 . S MODI=$$MOD^ICPTMOD(IEN,"I")
"RTN","ECRDSSU",139,0)
 . S MOD=$P(MODI,"^",2) I MOD="" Q
"RTN","ECRDSSU",140,0)
 . S MODESC=$P(MODI,"^",3) I MODESC="" S MODESC="Unknown"
"RTN","ECRDSSU",141,0)
 . W !?12,"- ",MOD," ",$E(MODESC,1,40)," ("
"RTN","ECRDSSU",142,0)
 . W ECTMP(ECLOC,ECDSS,ECC,ECPR,IEN),")"
"RTN","ECRDSSU",143,0)
 Q
"RTN","ECRDSSU",144,0)
 ;
"RTN","ECRDSSU",145,0)
DSSCHG ;- DSS Unit change
"RTN","ECRDSSU",146,0)
 ;
"RTN","ECRDSSU",147,0)
 Q:'$G(ECDSSTOT)
"RTN","ECRDSSU",148,0)
 I ECDSSTOT>0 D
"RTN","ECRDSSU",149,0)
 . I $Y>(IOSL-8) D PAUSE Q:ECQUIT  D HDR
"RTN","ECRDSSU",150,0)
 . W !!?69,"======"
"RTN","ECRDSSU",151,0)
 . W !?6,"Total Procedures for ",$G(ECDSSNM),?69,$J(ECDSSTOT,6)
"RTN","ECRDSSU",152,0)
 . S ECDSSTOT=0,(ECLOCNM,ECDSSNM)=""
"RTN","ECRDSSU",153,0)
 . D PAUSE
"RTN","ECRDSSU",154,0)
 Q
"RTN","ECRDSSU",155,0)
 ;
"RTN","ECRDSSU",156,0)
HDR ;- Report header
"RTN","ECRDSSU",157,0)
 ;
"RTN","ECRDSSU",158,0)
 I ECCRT!(ECPAGE) W @IOF
"RTN","ECRDSSU",159,0)
 S ECPAGE=ECPAGE+1
"RTN","ECRDSSU",160,0)
 W !,?((IOM-32)\2),"DSS UNIT WORKLOAD SUMMARY REPORT"
"RTN","ECRDSSU",161,0)
 W !,?((IOM-40)\2),"Date Range: "_$$FMTE^XLFDT($P((ECSTDT+.0001),"."))_" to "_$$FMTE^XLFDT($P(ECENDDT,"."))
"RTN","ECRDSSU",162,0)
 W !!,"Run Date: "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","ECRDSSU",163,0)
 W ?65,"    Page: ",ECPAGE
"RTN","ECRDSSU",164,0)
 W !!?8,"CPT Code",?18,"Description",?46,"Synonym",?69,"Volume"
"RTN","ECRDSSU",165,0)
 W !?12,"CPT Modifier (volume of modifiers use)"
"RTN","ECRDSSU",166,0)
 W !,$TR($J("",79)," ","-")
"RTN","ECRDSSU",167,0)
 Q
"RTN","ECRDSSU",168,0)
 ;
"RTN","ECRDSSU",169,0)
 ;
"RTN","ECRDSSU",170,0)
LOCNAM ;- Get location name
"RTN","ECRDSSU",171,0)
 ;
"RTN","ECRDSSU",172,0)
 N I
"RTN","ECRDSSU",173,0)
 F I=0:0 S I=$O(ECLOC(I)) Q:'I  I $P($G(ECLOC(I)),"^")=ECLOCAT S ECLOCNM=$P(ECLOC(I),"^",2)
"RTN","ECRDSSU",174,0)
 Q
"RTN","ECRDSSU",175,0)
 ;
"RTN","ECRDSSU",176,0)
 ;
"RTN","ECRDSSU",177,0)
DSSUNAM ;- Get DSS Unit name
"RTN","ECRDSSU",178,0)
 ;
"RTN","ECRDSSU",179,0)
 N I
"RTN","ECRDSSU",180,0)
 F I=0:0 S I=$O(ECDSSU(I)) Q:'I  I $P($G(ECDSSU(I)),"^")=ECDSS S ECDSSNM=$P(ECDSSU(I),"^",2)
"RTN","ECRDSSU",181,0)
 Q
"RTN","ECRDSSU",182,0)
 ;
"RTN","ECRDSSU",183,0)
 ;
"RTN","ECRDSSU",184,0)
PAUSE ;- Pause for screen output
"RTN","ECRDSSU",185,0)
 Q:'ECCRT
"RTN","ECRDSSU",186,0)
 N DIR,DIRUT,DUOUT
"RTN","ECRDSSU",187,0)
 I IOSL<30 F  W ! Q:$Y>(IOSL-4)
"RTN","ECRDSSU",188,0)
 W ! S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S ECQUIT=1
"RTN","ECRDSSU",189,0)
 Q
"RTN","ECRDSSU",190,0)
 ;
"RTN","ECRDSSU",191,0)
 ;
"RTN","ECRDSSU",192,0)
ASKDEV() ;- Ask device for printing or queueing report
"RTN","ECRDSSU",193,0)
 ;  Input:     None
"RTN","ECRDSSU",194,0)
 ;
"RTN","ECRDSSU",195,0)
 ; Output:     1 if report is printed
"RTN","ECRDSSU",196,0)
 ;             0 if report is queued (or exited out)
"RTN","ECRDSSU",197,0)
 ;
"RTN","ECRDSSU",198,0)
 N ECX,ZTDESC,ZTRTN,ZTSAVE
"RTN","ECRDSSU",199,0)
 S ECX=1
"RTN","ECRDSSU",200,0)
 K %ZIS S %ZIS="QMP"
"RTN","ECRDSSU",201,0)
 D ^%ZIS
"RTN","ECRDSSU",202,0)
 S:POP ECX=0
"RTN","ECRDSSU",203,0)
 I ECX&($D(IO("Q"))) D
"RTN","ECRDSSU",204,0)
 . S ZTRTN="STRPT^ECRDSSU",ZTDESC="DSS UNIT WORKLOAD SUMMARY REPORT"
"RTN","ECRDSSU",205,0)
 . S (ZTSAVE("ECLOC("),ZTSAVE("ECDSSU("),ZTSAVE("ECSTDT"),ZTSAVE("ECENDDT"))=""
"RTN","ECRDSSU",206,0)
 . D ^%ZTLOAD
"RTN","ECRDSSU",207,0)
 . D HOME^%ZIS
"RTN","ECRDSSU",208,0)
 . S ECX=0
"RTN","ECRDSSU",209,0)
 Q ECX
"RTN","ECRPCLS")
0^30^B51723587
"RTN","ECRPCLS",1,0)
ECRPCLS ;ALB/JAP - Event Capture Invalid Provider Report ; 13 Aug 97
"RTN","ECRPCLS",2,0)
 ;;2.0; EVENT CAPTURE ;**5,47**;8 May 96
"RTN","ECRPCLS",3,0)
 ;
"RTN","ECRPCLS",4,0)
EN ;entry point from menu option
"RTN","ECRPCLS",5,0)
 W !
"RTN","ECRPCLS",6,0)
 D RANGE
"RTN","ECRPCLS",7,0)
 I '$G(ECLOOP)!'$G(ECBEGIN)!'$G(ECEND) G EXIT
"RTN","ECRPCLS",8,0)
 W !
"RTN","ECRPCLS",9,0)
 D SORT
"RTN","ECRPCLS",10,0)
 I $G(DIRUT) G EXIT
"RTN","ECRPCLS",11,0)
 I "PR"'[$G(ECSORT) G EXIT
"RTN","ECRPCLS",12,0)
 K DIR,DIRUT,DUOUT
"RTN","ECRPCLS",13,0)
 W !
"RTN","ECRPCLS",14,0)
 D DEVICE
"RTN","ECRPCLS",15,0)
 I POP G EXIT
"RTN","ECRPCLS",16,0)
 I $G(ZTSK) G EXIT
"RTN","ECRPCLS",17,0)
 I $G(IO("Q")),'$G(ZTSK) G EXIT
"RTN","ECRPCLS",18,0)
 D START
"RTN","ECRPCLS",19,0)
 D HOME^%ZIS
"RTN","ECRPCLS",20,0)
 G EXIT
"RTN","ECRPCLS",21,0)
 ;
"RTN","ECRPCLS",22,0)
START ;queued entry point or continuation
"RTN","ECRPCLS",23,0)
 D PROCESS
"RTN","ECRPCLS",24,0)
 U IO D PRINT
"RTN","ECRPCLS",25,0)
 I $D(ECGUI) D EXIT Q
"RTN","ECRPCLS",26,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECRPCLS",27,0)
 I $D(ZTQUEUED) S ZTREQ="@" D EXIT
"RTN","ECRPCLS",28,0)
 Q
"RTN","ECRPCLS",29,0)
 ;
"RTN","ECRPCLS",30,0)
RANGE ;get any date range between T and T-365
"RTN","ECRPCLS",31,0)
 N X1,X2,ECSTDT,ECENDDT
"RTN","ECRPCLS",32,0)
 W !,?5,"Enter a Begin Date and End Date for this Event Capture "
"RTN","ECRPCLS",33,0)
 W !,?5,"provider report -- both dates must be within the past "
"RTN","ECRPCLS",34,0)
 W !,?5,"365 days.",!
"RTN","ECRPCLS",35,0)
 S (ECBEGIN,ECEND)=0
"RTN","ECRPCLS",36,0)
 F  D  Q:ECBEGIN>0  Q:'$G(ECLOOP)
"RTN","ECRPCLS",37,0)
 .S ECLOOP=$$STDT^ECRUTL() I 'ECLOOP Q
"RTN","ECRPCLS",38,0)
 .S ECBEGIN=ECSTDT
"RTN","ECRPCLS",39,0)
 .S X1=DT,X2=ECBEGIN D ^%DTC I X>365 D
"RTN","ECRPCLS",40,0)
 ..W !!,?15,"The Begin Date for this report may not be"
"RTN","ECRPCLS",41,0)
 ..W !,?15,"more than 365 days ago.  Try again...",!
"RTN","ECRPCLS",42,0)
 ..S ECBEGIN=0
"RTN","ECRPCLS",43,0)
 Q:'$G(ECLOOP)!'$G(ECBEGIN)
"RTN","ECRPCLS",44,0)
 F  D  Q:ECEND>0  Q:'$G(ECLOOP)
"RTN","ECRPCLS",45,0)
 .S ECLOOP=$$ENDDT^ECRUTL(ECSTDT) I 'ECLOOP Q
"RTN","ECRPCLS",46,0)
 .S ECEND=ECENDDT
"RTN","ECRPCLS",47,0)
 .I ECEND>(DT+1) D
"RTN","ECRPCLS",48,0)
 ..W !!,?15,"The End Date for this report may not be"
"RTN","ECRPCLS",49,0)
 ..W !,?15,"a future date.  Try again...",!
"RTN","ECRPCLS",50,0)
 ..S ECEND=0
"RTN","ECRPCLS",51,0)
 Q 
"RTN","ECRPCLS",52,0)
 ;
"RTN","ECRPCLS",53,0)
SORT ;ask user if report should be alpha by patient (P) or
"RTN","ECRPCLS",54,0)
 ;                             alpha by provider (R)
"RTN","ECRPCLS",55,0)
 K DIR
"RTN","ECRPCLS",56,0)
 S DIR(0)="SAXB^P:PATIENT;R:PROVIDER"
"RTN","ECRPCLS",57,0)
 S DIR("?")="Enter an uppercase 'P' or 'R'."
"RTN","ECRPCLS",58,0)
 S DIR("A")="Select sorting by Patient or pRovider (P/R): "
"RTN","ECRPCLS",59,0)
 S DIR("A",1)=" "
"RTN","ECRPCLS",60,0)
 S DIR("A",2)="If you want the report to show Patient name in the 1st column,"
"RTN","ECRPCLS",61,0)
 S DIR("A",3)="enter a 'P'.  The listing will be alphabetical by Patient name."
"RTN","ECRPCLS",62,0)
 S DIR("A",4)=" "
"RTN","ECRPCLS",63,0)
 S DIR("A",5)="If you want the report to show Provider name in the 1st column,"
"RTN","ECRPCLS",64,0)
 S DIR("A",6)="enter an 'R'.  The listing will be alphabetical by Provider name."
"RTN","ECRPCLS",65,0)
 S DIR("A",7)=" "
"RTN","ECRPCLS",66,0)
 D ^DIR
"RTN","ECRPCLS",67,0)
 Q:$G(DIRUT)
"RTN","ECRPCLS",68,0)
 S ECSORT=Y
"RTN","ECRPCLS",69,0)
 Q
"RTN","ECRPCLS",70,0)
 ;
"RTN","ECRPCLS",71,0)
DEVICE ;get device and queue 
"RTN","ECRPCLS",72,0)
 K IOP S %ZIS="QM" D ^%ZIS
"RTN","ECRPCLS",73,0)
 I POP W !!,"No device selected.  Exiting...",!! S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECRPCLS",74,0)
 I $D(IO("Q")) D
"RTN","ECRPCLS",75,0)
 .S ZTRTN="START^ECRPCLS",ZTDESC="EC Invalid Provider Report"
"RTN","ECRPCLS",76,0)
 .S ZTSAVE("ECBEGIN")="",ZTSAVE("ECEND")="",ZTSAVE("ECSORT")=""
"RTN","ECRPCLS",77,0)
 .D ^%ZTLOAD
"RTN","ECRPCLS",78,0)
 .I '$G(ZTSK) W !,"Report canceled..." S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECRPCLS",79,0)
 .W !,"Report queued as Task #: ",ZTSK S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECRPCLS",80,0)
 Q
"RTN","ECRPCLS",81,0)
 ;
"RTN","ECRPCLS",82,0)
PROCESS ;process the "AC" x-ref in file #721
"RTN","ECRPCLS",83,0)
 ;^ECH("AC",date,file#721 ien)=""
"RTN","ECRPCLS",84,0)
 ;$ORDER from begindate to enddate
"RTN","ECRPCLS",85,0)
 ;use $$GET^XUA4A72(provider ien,date)
"RTN","ECRPCLS",86,0)
 ;if return is >0 then get next x-ref entry
"RTN","ECRPCLS",87,0)
 ;
"RTN","ECRPCLS",88,0)
 N ECD,ECDATA,ECDATE,ECDDT,ECDT,ECERR,ECIEN,ECPIEN,ECPRDT,ECPRIEN,ECPRVN,ECPT,ECPTN,ECS,ECSSN,ECT,ECU,ECU2,ECU3
"RTN","ECRPCLS",89,0)
 K ^TMP("ECRPCLS",$J) S ECDT=ECBEGIN
"RTN","ECRPCLS",90,0)
 F  S ECDT=$O(^ECH("AC",ECDT)) Q:ECDT>ECEND  Q:ECDT=""  D
"RTN","ECRPCLS",91,0)
 .S ECIEN=""
"RTN","ECRPCLS",92,0)
 .F  S ECIEN=$O(^ECH("AC",ECDT,ECIEN)) Q:ECIEN=""  D
"RTN","ECRPCLS",93,0)
 ..S ECDATA=$G(^ECH(ECIEN,0)) I '+ECDATA Q  ;file problem
"RTN","ECRPCLS",94,0)
 ..S ECPRDT=$P(ECDT,".",1),ECDDT=$P(ECDATA,"^",3) I ECDDT'=ECDT S ECPRDT=$P(ECDDT,".",1) ;there's a problem in the x-ref
"RTN","ECRPCLS",95,0)
 ..I ECPRDT<ECBEGIN!(ECPRDT>ECEND) Q
"RTN","ECRPCLS",96,0)
 ..S ECU=$P(ECDATA,"^",11),ECU2=$P(ECDATA,"^",15),ECU3=$P(ECDATA,"^",17)
"RTN","ECRPCLS",97,0)
 ..F ECPIEN=ECU,ECU2,ECU3 D
"RTN","ECRPCLS",98,0)
 ...Q:'+ECPIEN
"RTN","ECRPCLS",99,0)
 ...S ECERR=$$GET^XUA4A72(ECPIEN,ECPRDT) Q:+ECERR>0
"RTN","ECRPCLS",100,0)
 ...S ECD=$P(ECDDT,".",1),ECT=$P(ECDDT,".",2)
"RTN","ECRPCLS",101,0)
 ...S ECDATE=$E(ECD,4,5)_"/"_$E(ECD,6,7)_"/"_$E(ECD,2,3) I +ECT S ECT=$$LJ^XLFSTR(ECT,4,0),ECDATE=ECDATE_" "_$E(ECT,1,2)_":"_$E(ECT,3,4)
"RTN","ECRPCLS",102,0)
 ...S ECPT=$P(ECDATA,"^",2),ECPTN=$P($G(^DPT(ECPT,0)),"^",1) Q:ECPTN=""
"RTN","ECRPCLS",103,0)
 ...S ECS=$P(^(0),"^",9),ECS=$E(ECS,1,9),ECSSN=$E(ECS,6,9)
"RTN","ECRPCLS",104,0)
 ...S ECPRVN=$P($G(^VA(200,ECPIEN,0)),"^",1) Q:ECPRVN=""
"RTN","ECRPCLS",105,0)
 ...S ECPRIEN="("_ECPIEN_")",ECPRIEN=$$RJ^XLFSTR(ECPRIEN,10," ")
"RTN","ECRPCLS",106,0)
 ...;if sort by patient then patient name is 3rd subscript
"RTN","ECRPCLS",107,0)
 ...I ECSORT="P" S ^TMP("ECRPCLS",$J,ECPTN,ECPRVN,ECIEN)=ECERR_"^"_ECPRIEN_"^"_ECSSN_"^"_ECDATE
"RTN","ECRPCLS",108,0)
 ...;if sort by provider then provider name is 3rd subscript
"RTN","ECRPCLS",109,0)
 ...I ECSORT="R" S ^TMP("ECRPCLS",$J,ECPRVN,ECPTN,ECIEN)=ECERR_"^"_ECPRIEN_"^"_ECSSN_"^"_ECDATE
"RTN","ECRPCLS",110,0)
 Q
"RTN","ECRPCLS",111,0)
 ;
"RTN","ECRPCLS",112,0)
PRINT ;output report
"RTN","ECRPCLS",113,0)
 ;
"RTN","ECRPCLS",114,0)
 N X1,X2,PROVIDER,PATIENT,PAGE,PRNTDT,QFLAG,DASH,JJ,SS
"RTN","ECRPCLS",115,0)
 N ECDATA,ECDATE,ECERR,ECIEN,ECPRIEN,ECPRVN,ECPTN,ECSSN
"RTN","ECRPCLS",116,0)
 S (PAGE,QFLAG)=0 S $P(DASH,"-",80)=""
"RTN","ECRPCLS",117,0)
 S Y=$P(ECBEGIN,".",1)+1 D DD^%DT S ECBEGIN=Y S Y=$P(ECEND,".",1) D DD^%DT S ECEND=Y
"RTN","ECRPCLS",118,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S PRNTDT=Y
"RTN","ECRPCLS",119,0)
 D HEAD
"RTN","ECRPCLS",120,0)
 I '$D(^TMP("ECRPCLS",$J)) D  Q
"RTN","ECRPCLS",121,0)
 .W !!,?12,"No invalid providers found for date range specified."
"RTN","ECRPCLS",122,0)
 .I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECRPCLS",123,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPCLS",124,0)
 .W:$E(IOST)'="C" @IOF
"RTN","ECRPCLS",125,0)
 S X1="" F  S X1=$O(^TMP("ECRPCLS",$J,X1)) Q:X1=""  D
"RTN","ECRPCLS",126,0)
 .S:ECSORT="P" ECPTN=X1 S:ECSORT="R" ECPRVN=X1
"RTN","ECRPCLS",127,0)
 .S X2="" F  S X2=$O(^TMP("ECRPCLS",$J,X1,X2)) Q:X2=""  D
"RTN","ECRPCLS",128,0)
 ..S:ECSORT="P" ECPRVN=X2 S:ECSORT="R" ECPTN=X2
"RTN","ECRPCLS",129,0)
 ..S ECIEN="",ECIEN=$O(^TMP("ECRPCLS",$J,X1,X2,ECIEN)),ECDATA=^(ECIEN)
"RTN","ECRPCLS",130,0)
 ..S ECERR=$P(ECDATA,"^",1),ECPRIEN=$P(ECDATA,"^",2),ECSSN=$P(ECDATA,"^",3),ECDATE=$P(ECDATA,"^",4)
"RTN","ECRPCLS",131,0)
 ..S PROVIDER=$$LJ^XLFSTR($E(ECPRVN,1,20),20," ")_" "_ECPRIEN_"  "_ECERR
"RTN","ECRPCLS",132,0)
 ..S PATIENT=$$LJ^XLFSTR($E(ECPTN,1,20),20," ")_" "_ECSSN_"  "_ECDATE
"RTN","ECRPCLS",133,0)
 ..D:($Y+3>IOSL) HEAD
"RTN","ECRPCLS",134,0)
 ..I ECSORT="P" W !,PATIENT_"  "_PROVIDER
"RTN","ECRPCLS",135,0)
 ..I ECSORT="R" W !,PROVIDER_"   "_PATIENT
"RTN","ECRPCLS",136,0)
 I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR W @IOF
"RTN","ECRPCLS",137,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPCLS",138,0)
 W:$E(IOST)'="C" @IOF
"RTN","ECRPCLS",139,0)
 Q
"RTN","ECRPCLS",140,0)
 ;
"RTN","ECRPCLS",141,0)
HEAD ;report header
"RTN","ECRPCLS",142,0)
 ;write the header line with page # and print date and explanation
"RTN","ECRPCLS",143,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPCLS",144,0)
 I $E(IOST)="C",PAGE>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLAG=1 Q
"RTN","ECRPCLS",145,0)
 W:$Y!($E(IOST)="C") @IOF
"RTN","ECRPCLS",146,0)
 S PAGE=PAGE+1
"RTN","ECRPCLS",147,0)
 W !,?12,"Event Capture Providers with Inactive/Missing Person Class"
"RTN","ECRPCLS",148,0)
 W !,?12,"for the Date Range "_ECBEGIN_" through "_ECEND
"RTN","ECRPCLS",149,0)
 W !!,"Printed: "_PRNTDT,?65,"Page: "_PAGE,!
"RTN","ECRPCLS",150,0)
 I PAGE=1 D
"RTN","ECRPCLS",151,0)
 .W !,?12,"The following entries in the Event Capture Patient file (#721)"
"RTN","ECRPCLS",152,0)
 .W !,?12,"are associated with a provider who meets one of the following"
"RTN","ECRPCLS",153,0)
 .W !,?12,"criteria:",!
"RTN","ECRPCLS",154,0)
 .W !,?22,"(a) The provider has no Person Class"
"RTN","ECRPCLS",155,0)
 .W !,?22,"    specified in file #200. (Error=-1)"
"RTN","ECRPCLS",156,0)
 .W !,?22,"(b) The provider does not have an active"
"RTN","ECRPCLS",157,0)
 .W !,?22,"    Person Class in file #200 for the"
"RTN","ECRPCLS",158,0)
 .W !,?22,"    date of procedure. (Error=-2)",!
"RTN","ECRPCLS",159,0)
 .W !,?12,"The provider's record number in file #200 is shown in parentheses"
"RTN","ECRPCLS",160,0)
 .W !,?12,"after the provider name.",!
"RTN","ECRPCLS",161,0)
 I ECSORT="P" D SUBHDA
"RTN","ECRPCLS",162,0)
 I ECSORT="R" D SUBHDB
"RTN","ECRPCLS",163,0)
 Q
"RTN","ECRPCLS",164,0)
 ;
"RTN","ECRPCLS",165,0)
SUBHDA ;subheader for sort by patient
"RTN","ECRPCLS",166,0)
 W !,?27,"Date of"
"RTN","ECRPCLS",167,0)
 W !,"Patient",?21,"SSN",?27,"Procedure",?43,"Provider",?75,"Err."
"RTN","ECRPCLS",168,0)
 W !,DASH,!
"RTN","ECRPCLS",169,0)
 Q
"RTN","ECRPCLS",170,0)
 ;
"RTN","ECRPCLS",171,0)
SUBHDB ;subheader for sort by provider
"RTN","ECRPCLS",172,0)
 W !,?65,"Date of"
"RTN","ECRPCLS",173,0)
 W !,"Provider",?32,"Err.",?38,"Patient",?59,"SSN",?65,"Procedure"
"RTN","ECRPCLS",174,0)
 W !,DASH,!
"RTN","ECRPCLS",175,0)
 Q
"RTN","ECRPCLS",176,0)
 ;
"RTN","ECRPCLS",177,0)
EXIT ;common exit point & clean-up
"RTN","ECRPCLS",178,0)
 D ^ECKILL
"RTN","ECRPCLS",179,0)
 D:'$D(ECGUI) ^%ZISC
"RTN","ECRPCLS",180,0)
 K ^TMP("ECRPCLS",$J)
"RTN","ECRPCLS",181,0)
 K DIR,DIRUT,DTOUT,DUOUT,ECBEGIN,ECEND,ECSORT,ECLOOP
"RTN","ECRPCLS",182,0)
 K IO("Q"),POP,X,Y,ZTSK,ZTRTN,ZTDESC,ZTSAVE
"RTN","ECRPCLS",183,0)
 Q
"RTN","ECRPRSN")
0^9^B82020586
"RTN","ECRPRSN",1,0)
ECRPRSN ;ALB/JAP - Procedure Reasons Report;18 Aug 97
"RTN","ECRPRSN",2,0)
 ;;2.0; EVENT CAPTURE ;**5,18,47**;8 May 96
"RTN","ECRPRSN",3,0)
EN ;entry point from menu option
"RTN","ECRPRSN",4,0)
 N JJ
"RTN","ECRPRSN",5,0)
 W ! S JJ=$$ASKLOC^ECRUTL I 'JJ G EXIT
"RTN","ECRPRSN",6,0)
 W ! S JJ=$$ASKDSS^ECRUTL I 'JJ G EXIT
"RTN","ECRPRSN",7,0)
 W ! S JJ=$$ASKREAS() I 'JJ G EXIT
"RTN","ECRPRSN",8,0)
 W !
"RTN","ECRPRSN",9,0)
 D RANGE
"RTN","ECRPRSN",10,0)
 I '$G(ECLOOP)!'$G(ECSD)!'$G(ECED) G EXIT
"RTN","ECRPRSN",11,0)
 W ! D DEVICE I POP G EXIT
"RTN","ECRPRSN",12,0)
 I $G(ZTSK) G EXIT
"RTN","ECRPRSN",13,0)
 I $G(IO("Q")),'$G(ZTSK) G EXIT
"RTN","ECRPRSN",14,0)
 D START,HOME^%ZIS
"RTN","ECRPRSN",15,0)
 G EXIT
"RTN","ECRPRSN",16,0)
 Q
"RTN","ECRPRSN",17,0)
START ;queued entry point or continuation
"RTN","ECRPRSN",18,0)
 D PROCESS
"RTN","ECRPRSN",19,0)
 U IO D PRINT Q:$D(ECGUI)
"RTN","ECRPRSN",20,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECRPRSN",21,0)
 I $D(ZTQUEUED) S ZTREQ="@" D EXIT
"RTN","ECRPRSN",22,0)
 Q
"RTN","ECRPRSN",23,0)
ASKREAS()        ; Ask reasons
"RTN","ECRPRSN",24,0)
 ;   output: ECREAS array; contains set of reason iens
"RTN","ECRPRSN",25,0)
 N DIRUT,DUOUT,DTOUT,Y,DIR,A,P,R,S,JJ,KK,NLOC,NUNIT,LINK,ECREAS,E
"RTN","ECRPRSN",26,0)
 ;setup array of associated reason iens for the locations/units included
"RTN","ECRPRSN",27,0)
 W !!,"Just a moment please..."
"RTN","ECRPRSN",28,0)
 W !,?5,"...finding Procedure Reasons related to the"
"RTN","ECRPRSN",29,0)
 W !,?5,"   Location(s) and DSS Unit(s) you selected...",!
"RTN","ECRPRSN",30,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECRPRSN",31,0)
 .S NLOC=$P(ECLOC(JJ),"^",1)
"RTN","ECRPRSN",32,0)
 .S KK="" F  S KK=$O(ECDSSU(KK)) Q:KK=""  S NUNIT=$P(ECDSSU(KK),"^",1),A(NLOC_"-"_NUNIT)=""
"RTN","ECRPRSN",33,0)
 S P=""
"RTN","ECRPRSN",34,0)
 F  S P=$O(^ECJ("B",P)) Q:P=""  I $D(A($P(P,"-",1,2))) S I=$O(^ECJ("B",P,"")),S(I)=""
"RTN","ECRPRSN",35,0)
 K A S P="" F  S P=$O(^ECL("AD",P)) Q:P=""  I $D(S(P)) S R="" D
"RTN","ECRPRSN",36,0)
 .F  S R=$O(^ECL("AD",P,R)) Q:R=""  D
"RTN","ECRPRSN",37,0)
 ..S LINK=$O(^ECL("AD",P,R,"")),ECLINK(LINK)=R
"RTN","ECRPRSN",38,0)
 ..S ECREAS(R)=$P($G(^ECR(R,0)),"^",1)
"RTN","ECRPRSN",39,0)
 ..I ECREAS(R)="" K ECREAS(R),ECLINK(LINK)
"RTN","ECRPRSN",40,0)
 K S
"RTN","ECRPRSN",41,0)
 ;ask the user to include all reasons or selected reasons
"RTN","ECRPRSN",42,0)
 ;already have all reasons in ecreas array
"RTN","ECRPRSN",43,0)
 S ASK=1
"RTN","ECRPRSN",44,0)
 S DIR(0)="YA",DIR("A")="Do you want to print this report for all Procedure Reasons? "
"RTN","ECRPRSN",45,0)
 S DIR("B")="YES" W ! D ^DIR K DIR I Y=0,'$G(DIRUT) D SPECR
"RTN","ECRPRSN",46,0)
 I $G(DIRUT)!(Y=0) S ASK=0 K ECREAS
"RTN","ECRPRSN",47,0)
 ;display user selections
"RTN","ECRPRSN",48,0)
 I $D(ECREAS)>1 D
"RTN","ECRPRSN",49,0)
 .W @IOF S E=0 W !,"Selected Procedure Reasons --",!
"RTN","ECRPRSN",50,0)
 .S R="" F  S R=$O(ECREAS(R)) Q:R=""  D  I E Q
"RTN","ECRPRSN",51,0)
 ..I $Y+3>IOSL S DIR(0)="E" D ^DIR K DIR S:'Y E=1 Q:'Y  D
"RTN","ECRPRSN",52,0)
 ...W @IOF,!,"Selected Procedure Reasons (cont.) --",!
"RTN","ECRPRSN",53,0)
 ..W !,?5,ECREAS(R)
"RTN","ECRPRSN",54,0)
 .Q:E  S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECRPRSN",55,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPRSN",56,0)
 Q ASK
"RTN","ECRPRSN",57,0)
SPECR ;specific reasons
"RTN","ECRPRSN",58,0)
 N R,DUOUT,DTOUT
"RTN","ECRPRSN",59,0)
 K DIRUT,Y
"RTN","ECRPRSN",60,0)
 S DIR(0)="YA",DIR("A")="Do you want to include only specific Procedure Reasons in this report? ",DIR("B")="YES"
"RTN","ECRPRSN",61,0)
 S DIR("?")="Enter YES to select specific Procedure Reasons or NO to quit."
"RTN","ECRPRSN",62,0)
 W ! D ^DIR K DIR Q:$G(DIRUT)!(Y=0)
"RTN","ECRPRSN",63,0)
 ;select subset of possible reasons
"RTN","ECRPRSN",64,0)
 K DIRUT,DTOUT,DUOUT,Y
"RTN","ECRPRSN",65,0)
 F  D  Q:$G(DIRUT)!(Y=-1)
"RTN","ECRPRSN",66,0)
 .S DIC=720.4,DIC("A")="Select a Procedure Reason to include: ",DIC(0)="QAEM"
"RTN","ECRPRSN",67,0)
 .S DIC("S")="I $D(ECREAS(+Y))"
"RTN","ECRPRSN",68,0)
 .W ! D ^DIC Q:$G(DUOUT)!$G(DTOUT)!(Y=-1)
"RTN","ECRPRSN",69,0)
 .S R(+Y)=""
"RTN","ECRPRSN",70,0)
 S:$G(DTOUT)!($G(DUOUT)) DIRUT=1
"RTN","ECRPRSN",71,0)
 Q:$G(DIRUT)
"RTN","ECRPRSN",72,0)
 ;delete reasons from ecreas array which were not selected
"RTN","ECRPRSN",73,0)
 I $D(R)<10 S Y=0 Q
"RTN","ECRPRSN",74,0)
 S R="" F  S R=$O(ECREAS(R)) Q:R=""  I '$D(R(R)) K ECREAS(R)
"RTN","ECRPRSN",75,0)
 ;delete links from eclink array for reasons not selected
"RTN","ECRPRSN",76,0)
 S LINK="" F  S LINK=$O(ECLINK(LINK)) Q:LINK=""  S R=ECLINK(LINK) I '$D(ECREAS(R)) K ECLINK(LINK)
"RTN","ECRPRSN",77,0)
 S Y=1
"RTN","ECRPRSN",78,0)
 Q
"RTN","ECRPRSN",79,0)
 ;
"RTN","ECRPRSN",80,0)
RANGE ;get any date range
"RTN","ECRPRSN",81,0)
 N ECSTDT,ECENDDT
"RTN","ECRPRSN",82,0)
 W !!!,?5,"Enter a Begin Date and End Date for the Event Capture "
"RTN","ECRPRSN",83,0)
 W !,?5,"Procedure Reason Report.",!
"RTN","ECRPRSN",84,0)
 S (ECSD,ECED)=0
"RTN","ECRPRSN",85,0)
 F  D  Q:ECSD>0  Q:'$G(ECLOOP)
"RTN","ECRPRSN",86,0)
 .S ECLOOP=$$STDT^ECRUTL() I 'ECLOOP Q
"RTN","ECRPRSN",87,0)
 .S ECSD=ECSTDT
"RTN","ECRPRSN",88,0)
 Q:'$G(ECLOOP)!'$G(ECSD)
"RTN","ECRPRSN",89,0)
 F  D  Q:ECED>0  Q:'$G(ECLOOP)
"RTN","ECRPRSN",90,0)
 .S ECLOOP=$$ENDDT^ECRUTL(ECSTDT) I 'ECLOOP Q
"RTN","ECRPRSN",91,0)
 .S ECED=ECENDDT
"RTN","ECRPRSN",92,0)
 .I ECED>(DT+1) D
"RTN","ECRPRSN",93,0)
 ..W !!,?15,"The End Date for this report may not be"
"RTN","ECRPRSN",94,0)
 ..W !,?15,"a future date.  Try again...",!
"RTN","ECRPRSN",95,0)
 ..S ECED=0
"RTN","ECRPRSN",96,0)
 Q 
"RTN","ECRPRSN",97,0)
 ;
"RTN","ECRPRSN",98,0)
DEVICE ;select output device
"RTN","ECRPRSN",99,0)
 W ! K IOP,ZTSK S %ZIS="QM" D ^%ZIS
"RTN","ECRPRSN",100,0)
 I POP W !!,"No device selected.  Exiting...",!! S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECRPRSN",101,0)
 I $D(IO("Q")) D
"RTN","ECRPRSN",102,0)
 .S ZTRTN="START^ECRPRSN",ZTDESC="EC Procedure Reason Report"
"RTN","ECRPRSN",103,0)
 .S ZTSAVE("ECSD")="",ZTSAVE("ECED")="",ZTSAVE("ECLOC(")="",ZTSAVE("ECDSSU(")="",ZTSAVE("ECLINK(")=""
"RTN","ECRPRSN",104,0)
 .D ^%ZTLOAD D HOME^%ZIS
"RTN","ECRPRSN",105,0)
 .I '$G(ZTSK) W !,"Report canceled..." S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECRPRSN",106,0)
 .W !,"Report queued as Task #: ",ZTSK S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECRPRSN",107,0)
 Q
"RTN","ECRPRSN",108,0)
 ;
"RTN","ECRPRSN",109,0)
PROCESS ;get data to print
"RTN","ECRPRSN",110,0)
 N EC,ECD,ECDA,ECPA,ECR,ECRL,ECRN,ECPATN,ECSS,ECSSN,ECP,ECPN,ECLOCA
"RTN","ECRPRSN",111,0)
 N ECUNIT,ECCAT,ECFILE,ECPSY,ECPSYN,ECPRV,ECPRVN,ECDFN,ECCPT,ECDESC
"RTN","ECRPRSN",112,0)
 N NLOC,NUNIT,JJ,ECMOD,ECMD,ECMODF
"RTN","ECRPRSN",113,0)
 K ^TMP("ECREAS",$J)
"RTN","ECRPRSN",114,0)
 ;if ecreas array doesn't exist, quit
"RTN","ECRPRSN",115,0)
 I $D(ECLINK)<10 Q
"RTN","ECRPRSN",116,0)
 ;put locations and units into ien subscripted arrays
"RTN","ECRPRSN",117,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECRPRSN",118,0)
 .S NLOC($P(ECLOC(JJ),"^",1))=$P(ECLOC(JJ),"^",2)
"RTN","ECRPRSN",119,0)
 S JJ="" F  S JJ=$O(ECDSSU(JJ)) Q:JJ=""  D
"RTN","ECRPRSN",120,0)
 .S NUNIT($P(ECDSSU(JJ),"^",1))=$P(ECDSSU(JJ),"^",2)
"RTN","ECRPRSN",121,0)
 S ECD=ECSD F  S ECD=$O(^ECH("AC",ECD)) Q:'ECD  Q:ECD>ECED  D
"RTN","ECRPRSN",122,0)
 .S ECDA="" F  S ECDA=$O(^ECH("AC",ECD,ECDA)) Q:'ECDA  S EC=$G(^ECH(ECDA,0))  I $P(EC,"^",23)'="" D
"RTN","ECRPRSN",123,0)
 ..S ECDFN=$P(EC,"^")
"RTN","ECRPRSN",124,0)
 ..I $P(EC,"^",3)<ECSD!($P(EC,"^",3)>ECED) Q  ;file or x-ref problem
"RTN","ECRPRSN",125,0)
 ..S ECLOCA=+$P(EC,U,4),ECUNIT=+$P(EC,U,7)
"RTN","ECRPRSN",126,0)
 ..I '$D(NLOC(ECLOCA))!('$D(NUNIT(ECUNIT))) Q
"RTN","ECRPRSN",127,0)
 ..S ECRL=$P(EC,"^",23) Q:'$D(ECLINK(ECRL))  S ECR=ECLINK(ECRL),ECRN=$P($G(^ECR(ECR,0)),"^") Q:ECRN']""
"RTN","ECRPRSN",128,0)
 ..S ECP=$P(EC,U,9) Q:ECP']""
"RTN","ECRPRSN",129,0)
 ..S ECCAT=+$P(EC,U,8),ECPSY=+$O(^ECJ("AP",ECLOCA,ECUNIT,ECCAT,ECP,""))
"RTN","ECRPRSN",130,0)
 ..S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2),ECPI=""
"RTN","ECRPRSN",131,0)
 ..S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECRPRSN",132,0)
 ..S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5))
"RTN","ECRPRSN",133,0)
 ..I ECCPT'="" D
"RTN","ECRPRSN",134,0)
 ...S ECPI=$$CPT^ICPTCOD(+ECP,$P(EC,"^",3)),ECCPT=$P(ECPI,"^",2) I ECCPT'="" S ECCPT=ECCPT_" "
"RTN","ECRPRSN",135,0)
 ..I ECFILE="UNKNOWN" S ECPN="UNKNOWN"
"RTN","ECRPRSN",136,0)
 ..I ECFILE=81 S ECPN=$S($P(ECPI,"^",3)]"":$P(ECPI,"^",3),1:"UNKNOWN")
"RTN","ECRPRSN",137,0)
 ..I ECFILE=725 S ECPN=$S($P($G(^EC(725,+ECP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECRPRSN",138,0)
 ..Q:ECPN=""
"RTN","ECRPRSN",139,0)
 ..S ECDESC=ECCPT_$E(ECPN,1,30)_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")
"RTN","ECRPRSN",140,0)
 ..S (ECPA,ECPATN,ECSS)="",ECPA=$G(^DPT(+$P(EC,"^",2),0)) Q:ECPA=""
"RTN","ECRPRSN",141,0)
 ..S ECPATN=$E($P(ECPA,"^",1),1,24),ECSS=$P(ECPA,"^",9)
"RTN","ECRPRSN",142,0)
 ..S:+ECSS ECSSN=$E(ECSS,6,9) S:ECSS="" ECSSN="UNKNOWN"
"RTN","ECRPRSN",143,0)
 ..S:ECPATN="" ECPATN="UNKNOWN" S ECPATN=ECPATN_"^"_ECSSN
"RTN","ECRPRSN",144,0)
 ..S (ECPRV,ECPRVN)="",ECPRV=$P(EC,"^",11) I +ECPRV S ECPRVN=$P($G(^VA(200,ECPRV,0)),"^",1) S:ECPRVN="" ECPRVN="UNKNOWN"
"RTN","ECRPRSN",145,0)
 ..S ECMD="" I $O(^ECH(ECDA,"MOD",0))'="" D  ;ALB/JAM - Get CPT modifiers
"RTN","ECRPRSN",146,0)
 ...K ECMOD S ECMODF=$$MOD^ECUTL(ECDA,"I",.ECMOD),SEQ="" I 'ECMODF Q
"RTN","ECRPRSN",147,0)
 ...F  S SEQ=$O(ECMOD(SEQ)) Q:SEQ=""  S ECMD=ECMD_$S(ECMD="":"",1:";")_SEQ
"RTN","ECRPRSN",148,0)
 ..I ECMD="" S ECMD="NOMOD"
"RTN","ECRPRSN",149,0)
 ..S ^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECRN,$E(ECPN,1,15))=ECDESC
"RTN","ECRPRSN",150,0)
 ..S ^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECRN,$E(ECPN,1,15),ECMD,ECDFN,ECD)=ECPRVN_"^"_ECPATN
"RTN","ECRPRSN",151,0)
 ..;where ecloca, ecunit,ecdfn are iens, ecdt is internal format
"RTN","ECRPRSN",152,0)
 Q
"RTN","ECRPRSN",153,0)
 ;
"RTN","ECRPRSN",154,0)
PRINT ;output report
"RTN","ECRPRSN",155,0)
 N ECLOCA,ECUNIT,ECREASN,ECDT,ECED2,ECSD2,ECPATN,ECPN,ECPRVN,SEQ,X,Y,SSN
"RTN","ECRPRSN",156,0)
 N PAGE,QFLAG,DASH,PRNTDT,JJ,SS,ALOC,AUNIT,DATE,LOC,UNIT,PTNAME,PROVN,ECDESC
"RTN","ECRPRSN",157,0)
 S (PAGE,QFLAG)=0 S $P(DASH,"-",80)=""
"RTN","ECRPRSN",158,0)
 S Y=$P(ECSD,".",1)+1 D DD^%DT S ECSD2=Y S Y=$P(ECED,".",1) D DD^%DT S ECED2=Y
"RTN","ECRPRSN",159,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S PRNTDT=Y
"RTN","ECRPRSN",160,0)
 ;if no data exists then print the header and quit
"RTN","ECRPRSN",161,0)
 I '$D(^TMP("ECREAS",$J)) D  Q
"RTN","ECRPRSN",162,0)
 .S (LOC,UNIT)="" D HEAD
"RTN","ECRPRSN",163,0)
 .W !!,?6,"No data for the date range specified.",!!
"RTN","ECRPRSN",164,0)
 .I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECRPRSN",165,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPRSN",166,0)
 .W:$E(IOST)'="C" @IOF
"RTN","ECRPRSN",167,0)
 ;if there's data in ^TMP then need to present the data alphabetically;
"RTN","ECRPRSN",168,0)
 ;put locations and units in alpha ordered array
"RTN","ECRPRSN",169,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECRPRSN",170,0)
 .S ALOC($P(ECLOC(JJ),"^",2))=$P(ECLOC(JJ),"^",1)
"RTN","ECRPRSN",171,0)
 S JJ="" F  S JJ=$O(ECDSSU(JJ)) Q:JJ=""  D
"RTN","ECRPRSN",172,0)
 .S AUNIT($P(ECDSSU(JJ),"^",2))=$P(ECDSSU(JJ),"^",1)
"RTN","ECRPRSN",173,0)
 ;process the ^TMP global data in alpha order for location and unit
"RTN","ECRPRSN",174,0)
 S LOC="" F  S LOC=$O(ALOC(LOC)) Q:LOC=""  S ECLOCA=ALOC(LOC) D  Q:QFLAG
"RTN","ECRPRSN",175,0)
 .S UNIT="" F  S UNIT=$O(AUNIT(UNIT)) Q:UNIT=""  S ECUNIT=AUNIT(UNIT) D  Q:QFLAG
"RTN","ECRPRSN",176,0)
 ..;always start a location at top of page
"RTN","ECRPRSN",177,0)
 ..I $D(^TMP("ECREAS",$J,ECLOCA,ECUNIT)) D HEAD D LOOP
"RTN","ECRPRSN",178,0)
 ;all done
"RTN","ECRPRSN",179,0)
 I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR W @IOF
"RTN","ECRPRSN",180,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPRSN",181,0)
 W:$E(IOST)'="C" @IOF
"RTN","ECRPRSN",182,0)
 Q
"RTN","ECRPRSN",183,0)
 ;
"RTN","ECRPRSN",184,0)
LOOP ;print the section of the ^tmp global for a specific location/unit
"RTN","ECRPRSN",185,0)
 S ECREASN=""
"RTN","ECRPRSN",186,0)
 F  S ECREASN=$O(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN)) Q:ECREASN=""  Q:QFLAG  D
"RTN","ECRPRSN",187,0)
 .D:($Y+3>IOSL) HEAD Q:QFLAG  W !!,"Reason: ",ECREASN,! S ECPN=""
"RTN","ECRPRSN",188,0)
 .F  S ECPN=$O(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN,ECPN)) Q:ECPN=""  Q:QFLAG  D
"RTN","ECRPRSN",189,0)
 ..S ECDESC=$G(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN,ECPN)),ECMOD=""
"RTN","ECRPRSN",190,0)
 ..F  S ECMOD=$O(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN,ECPN,ECMOD)) Q:ECMOD=""  D  Q:QFLAG
"RTN","ECRPRSN",191,0)
 ...W !,?3,"Procedure: ",ECDESC D:ECMOD'="NOMOD" MODPRT Q:QFLAG  D LOOP1
"RTN","ECRPRSN",192,0)
 Q
"RTN","ECRPRSN",193,0)
LOOP1 S ECPATN="" F  S ECPATN=$O(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN,ECPN,ECMOD,ECPATN)) Q:ECPATN=""  Q:QFLAG  D
"RTN","ECRPRSN",194,0)
 .S ECDT="" F  S ECDT=$O(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN,ECPN,ECMOD,ECPATN,ECDT)) Q:ECDT=""  Q:QFLAG  D
"RTN","ECRPRSN",195,0)
 ..S ECPRVN=^(ECDT),PTNAME=$P(ECPRVN,"^",2),PTNAME=$E(PTNAME,1,22)
"RTN","ECRPRSN",196,0)
 ..S SSN=$P(ECPRVN,"^",3),ECPRVN=$P(ECPRVN,"^")
"RTN","ECRPRSN",197,0)
 ..S Y=ECDT D DD^%DT S DATE=$E(Y,1,18),PROVN=$E(ECPRVN,1,22)
"RTN","ECRPRSN",198,0)
 ..D:($Y+3>IOSL) HEAD Q:QFLAG  W !,?6,PTNAME,?30,SSN,?37,DATE,?57,PROVN
"RTN","ECRPRSN",199,0)
 W !
"RTN","ECRPRSN",200,0)
 Q
"RTN","ECRPRSN",201,0)
MODPRT ;ALB/JAM - print CPT procedure modifiers
"RTN","ECRPRSN",202,0)
 N MOD,I,MODESC,IEN,MODI
"RTN","ECRPRSN",203,0)
 W !?4,"Modifier: "
"RTN","ECRPRSN",204,0)
 F I=1:1 S IEN=$P(ECMOD,";",I) Q:IEN=""  D  I QFLAG Q
"RTN","ECRPRSN",205,0)
 . S MODI=$$MOD^ICPTMOD(IEN,"","E"),MOD=$P(MODI,"^",2) I MOD="" Q
"RTN","ECRPRSN",206,0)
 . S MODESC=$P(MODI,"^",3) I MODESC="UNKNOWN" Q
"RTN","ECRPRSN",207,0)
 . W:I>1 ! W ?18,"- ",MOD," ",MODESC I ($Y+3)>IOSL D HEAD
"RTN","ECRPRSN",208,0)
 Q
"RTN","ECRPRSN",209,0)
HEAD ;header
"RTN","ECRPRSN",210,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPRSN",211,0)
 I $E(IOST)="C",PAGE>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLAG=1 Q
"RTN","ECRPRSN",212,0)
 W:$Y!($E(IOST)="C") @IOF
"RTN","ECRPRSN",213,0)
 S PAGE=PAGE+1
"RTN","ECRPRSN",214,0)
 W !,?12,"Event Capture Procedure Reason Report"
"RTN","ECRPRSN",215,0)
 W !,?12,"for the Date Range ",$$FMTE^XLFDT(ECSD2)," to ",$$FMTE^XLFDT(ECED2),!
"RTN","ECRPRSN",216,0)
 W !,?3,"DSS Unit: ",UNIT,?55,"Page: ",PAGE
"RTN","ECRPRSN",217,0)
 W !,?3,"Location: ",LOC,?52,"Printed: "_PRNTDT,!
"RTN","ECRPRSN",218,0)
 W !?6,"Patient",?30,"SSN",?37,"Date/Time",?57,"Provider"
"RTN","ECRPRSN",219,0)
 W !,DASH
"RTN","ECRPRSN",220,0)
 Q
"RTN","ECRPRSN",221,0)
EXIT ;common exit point
"RTN","ECRPRSN",222,0)
 D ^ECKILL D:'$D(ECGUI) ^%ZISC
"RTN","ECRPRSN",223,0)
 K ^TMP("ECREAS",$J) K JJ,X,Y,ZTSK,IO("Q"),DIR,DIRUT,DTOUT,DUOUT,ECSD
"RTN","ECRPRSN",224,0)
 K ECED,ECLOOP,ECLOC,ECDSSU,ECLINK,ASK,DIC
"RTN","ECRPRSN",225,0)
 Q
"RTN","ECRRPC")
0^29^B10279137
"RTN","ECRRPC",1,0)
ECRRPC ;ALB/JAM;Event Capture Report RPC Broker ;Sep 5, 2000
"RTN","ECRRPC",2,0)
 ;;2.0; EVENT CAPTURE ;**25,47**;8 May 96
"RTN","ECRRPC",3,0)
 ;
"RTN","ECRRPC",4,0)
RPTEN(RESULTS,ECARY) ;RPC Broker entry point for EC Reports
"RTN","ECRRPC",5,0)
 ;All EC GUI reports will call this line tag
"RTN","ECRRPC",6,0)
 ;        RPC: EC REPORTS
"RTN","ECRRPC",7,0)
 ;INPUTS   ECARY - Contains the following elements for report printing
"RTN","ECRRPC",8,0)
 ;          ECDEV  - Print to queue, if device
"RTN","ECRRPC",9,0)
 ;          ECQDT  - Queue to print (date/time), optional
"RTN","ECRRPC",10,0)
 ;
"RTN","ECRRPC",11,0)
 ;OUTPUTS  RESULTS - Array of help text in the HELP FRAM File (#9.2)
"RTN","ECRRPC",12,0)
 ;
"RTN","ECRRPC",13,0)
 N HLPDA,HND,ECSTR,ECFILER,ECERR,ECDIRY,ECUFILE,ECGUI
"RTN","ECRRPC",14,0)
 D SETENV^ECUMRPC
"RTN","ECRRPC",15,0)
 S ECERR=0,ECGUI=1 D PARSE,CHKDT I ECERR Q
"RTN","ECRRPC",16,0)
 K ^TMP("ECMSG",$J),^TMP($J,"ECRPT")
"RTN","ECRRPC",17,0)
 D  I ECERR D END Q
"RTN","ECRRPC",18,0)
 . I ECPTYP="D" D HFSOPEN(ECHNDL) Q
"RTN","ECRRPC",19,0)
 . I '$D(ECDEV) S ^TMP("ECMSG",$J,1)="0^Device undefined",ECERR=1
"RTN","ECRRPC",20,0)
 S HND=$P($T(@ECHNDL),";;",2) I HND="" D  Q
"RTN","ECRRPC",21,0)
 . S ^TMP("ECMSG",$J,1)="0^Line Tag undefined" D END
"RTN","ECRRPC",22,0)
 S ECQDT=$G(ECQDT,"NOW"),%DT="XT",X=ECQDT D ^%DT  ;Print time
"RTN","ECRRPC",23,0)
 S ECQDT=$S(Y>0:Y,1:"NOW")
"RTN","ECRRPC",24,0)
 D @$P(HND,";",2)
"RTN","ECRRPC",25,0)
 I ECPTYP="D" D HFSCLOSE(ECFILER) ;S RESULTS=$NA(^TMP($J))
"RTN","ECRRPC",26,0)
END D KILLVAR
"RTN","ECRRPC",27,0)
 I $D(^TMP("ECMSG",$J)) S RESULTS=$NA(^TMP("ECMSG",$J)) Q
"RTN","ECRRPC",28,0)
 S RESULTS=$NA(^TMP($J))
"RTN","ECRRPC",29,0)
 Q
"RTN","ECRRPC",30,0)
 ;
"RTN","ECRRPC",31,0)
PARSE ;Parse data from array for filing
"RTN","ECRRPC",32,0)
 N SUB
"RTN","ECRRPC",33,0)
 S SUB="" F  S SUB=$O(ECARY(SUB)) Q:SUB=""  S @SUB=ECARY(SUB)
"RTN","ECRRPC",34,0)
 Q
"RTN","ECRRPC",35,0)
CHKDT ;Required Data Check
"RTN","ECRRPC",36,0)
 N I,C
"RTN","ECRRPC",37,0)
 S C=1
"RTN","ECRRPC",38,0)
 F I="ECHNDL","ECPTYP" D
"RTN","ECRRPC",39,0)
 .I $G(@I)="" S ^TMP("ECMSG",$J,C)="0^Key data missing "_I,C=C+1,ECERR=1
"RTN","ECRRPC",40,0)
 Q
"RTN","ECRRPC",41,0)
KILLVAR ;Kill variables
"RTN","ECRRPC",42,0)
 N SUB
"RTN","ECRRPC",43,0)
 S SUB="" F  S SUB=$O(ECARY(SUB)) Q:SUB=""  K @SUB
"RTN","ECRRPC",44,0)
 K ECARY,POP,ECQDT
"RTN","ECRRPC",45,0)
 Q
"RTN","ECRRPC",46,0)
HFSOPEN(HANDLE) ; 
"RTN","ECRRPC",47,0)
 S ECDIRY=$$GET^XPAR("DIV","EC HFS SCRATCH")
"RTN","ECRRPC",48,0)
 I ECDIRY="" S ECERR=1 D  Q
"RTN","ECRRPC",49,0)
 .S ^TMP("ECMSG",$J,1)="0^A scratch directory for reports doesn't exist"
"RTN","ECRRPC",50,0)
 S ECFILER="EC"_DUZ_".DAT",ECUFILE=ECFILER
"RTN","ECRRPC",51,0)
 D OPEN^%ZISH(HANDLE,ECDIRY,ECFILER,"W") D:POP  Q:POP
"RTN","ECRRPC",52,0)
 .S ECERR=1,^TMP("ECMSG",$J,1)="0^Unable to open file "_ECDIRY_ECFILER
"RTN","ECRRPC",53,0)
 S IOM=132,IOSL=99999,IOST="P-DUMMY",IOF=""""""
"RTN","ECRRPC",54,0)
 Q
"RTN","ECRRPC",55,0)
 ;
"RTN","ECRRPC",56,0)
HFSCLOSE(HANDLE) ; 
"RTN","ECRRPC",57,0)
 N ECDEL
"RTN","ECRRPC",58,0)
 D CLOSE^%ZISH(ECDIRY_HANDLE)
"RTN","ECRRPC",59,0)
 K ^TMP($J)
"RTN","ECRRPC",60,0)
 S ECDEL(ECFILER)=""
"RTN","ECRRPC",61,0)
 S X=$$FTG^%ZISH(ECDIRY,ECFILER,$NAME(^TMP($J,1)),2)
"RTN","ECRRPC",62,0)
 S X=$$DEL^%ZISH(ECDIRY,$NA(ECDEL))
"RTN","ECRRPC",63,0)
 Q
"RTN","ECRRPC",64,0)
ECPAT ;;Patient Summary Report;ECPAT^ECRRPT
"RTN","ECRRPC",65,0)
ECRDSSU ;;DSS Unit Workload Summary;ECRDSSU^ECRRPT
"RTN","ECRRPC",66,0)
ECPROV ;;Provider Summary Report;ECPROV^ECRRPT
"RTN","ECRRPC",67,0)
PROSUM ;;Provider (1-3) Summary Report;PROSUM^ECRRPT
"RTN","ECRRPC",68,0)
ECOSSUM ;;Ordering Section Summary Report;ECOSSUM^ECRRPT
"RTN","ECRRPC",69,0)
ECPCER ;;PCE Data Summary Report;ECPCER^ECRRPT
"RTN","ECRRPC",70,0)
ECRPERS ;;Inactive Person Class Report;ECRPERS^ECRRPT1
"RTN","ECRRPC",71,0)
ECRPRSN ;;Procedure Reason Report;ECRPRSN^ECRRPT1
"RTN","ECRRPC",72,0)
ECDSS1 ;;National/Local Procedure Reports;ECDSS1^ECRRPT1
"RTN","ECRRPC",73,0)
ECDSS3 ;;Category Reports;ECDSS3^ECRRPT1
"RTN","ECRRPC",74,0)
ECSUM ;;Print Category and Procedure Summary (Report);ECSUM^ECRRPT1
"RTN","ECSCRN")
0^27^B27587113
"RTN","ECSCRN",1,0)
ECSCRN ;BIR/MAM,JPW,RKH,TTH-Enter Event Code Screens ;1 May 96
"RTN","ECSCRN",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,33,47**;8 May 96
"RTN","ECSCRN",3,0)
 I $O(^DIC(4,"LOC",""))="" W !!,"You have no locations flagged for event capture.",!,"See your program coordinator.",!! W "Press <RET> to continue  " R X:DTIME K X Q
"RTN","ECSCRN",4,0)
 W @IOF,!,"Event Code Screens (Create)",! F XX=0:1:79 W "-"
"RTN","ECSCRN",5,0)
 S (MSG1,MSG2)=0
"RTN","ECSCRN",6,0)
UNIT W ! K DIC S ECNOPE="",DIC=724,DIC(0)="QEAMZ",DIC("A")="Select DSS Unit : ",DIC("S")="I $P($G(^(0)),""^"",8)=1,'$P(^(0),""^"",6)" D ^DIC G:Y<0 END S ECD=+Y,ECDN=$P(Y,"^",2)
"RTN","ECSCRN",7,0)
 S ECS=$P(^ECD(ECD,0),"^",2),ECM=$P(^(0),"^",3),ECPCE="U~"_$S($P($G(^(0)),"^",14)]"":$P(^(0),"^",14),1:"N"),ECSN=$P(^DIC(49,ECS,0),"^"),ECMN=$P(^ECC(723,ECM,0),"^")
"RTN","ECSCRN",8,0)
 K ECN,ECL
"RTN","ECSCRN",9,0)
 D BRO I $D(ECERR) G END
"RTN","ECSCRN",10,0)
 G PRO
"RTN","ECSCRN",11,0)
PRO W:$D(ECN) !,"DSS UNIT: "_ECDN,! K DIC,DIR,DUOUT S DIR(0)="720.3,52.1",DIR("A")="Select Procedure" D ^DIR K DIR G:$D(DUOUT)!($D(DTOUT)) END
"RTN","ECSCRN",12,0)
 I X=""!("@"[X) G END
"RTN","ECSCRN",13,0)
 S ECFIL="^"_$P(Y,";",2)
"RTN","ECSCRN",14,0)
 S ECZERO=@(ECFIL_+Y_",0)"),DSERR=0
"RTN","ECSCRN",15,0)
 I $E(ECFIL,2)="E" D  I DSERR S DSERR=0 G PRO
"RTN","ECSCRN",16,0)
 .I $P($G(ECZERO),U,3) W !,"Selected procedure is inactive at this time.",! S DSERR=1 Q
"RTN","ECSCRN",17,0)
 I $E(ECFIL,2)="I" D  I DSERR S DSERR=0 G PRO
"RTN","ECSCRN",18,0)
 .I '$P($$CPT^ICPTCOD(+Y),"^",7) W !,"Selected procedure is inactive at this time.",! S DSERR=1
"RTN","ECSCRN",19,0)
 S ECP=Y,ECPN=$P(Y,"^",2)
"RTN","ECSCRN",20,0)
 W @IOF S ECANS=0 D ASK2^ECSCR G:$D(DIRUT) END I '$G(ECANS) D END1 W ! G UNIT
"RTN","ECSCRN",21,0)
 D:'$D(ECL) ^ECSCR G:'$D(ECL) END
"RTN","ECSCRN",22,0)
 D ASK I $D(DIRUT)!(Y=0) D END2 G RESEL
"RTN","ECSCRN",23,0)
 I $G(ECLOC)=1 S ECLALL=0 F I=0:0 S ECLALL=$O(LOC1(ECLALL)) Q:'ECLALL  S ECL=$P(LOC1(ECLALL),"^",2),ECLN=$P(LOC1(ECLALL),"^") D STUFF I ECOUT G END
"RTN","ECSCRN",24,0)
 I $G(ECLOC)=0 S ECLALL=0 F I=0:0 S ECLALL=$O(LOC(ECLALL)) Q:'ECLALL  S ECL=$P(LOC(ECLALL),"^",2),ECLN=$P(LOC(ECLALL),"^") D STUFF I ECOUT G END
"RTN","ECSCRN",25,0)
RESEL D MORE G:X="^" END D END2 G PRO
"RTN","ECSCRN",26,0)
STUFF ; stuff entries
"RTN","ECSCRN",27,0)
 S ECCH=ECL_"-"_ECD_"-"_ECC_"-"_ECP
"RTN","ECSCRN",28,0)
 I $D(^ECJ("B",ECCH)) D INACT Q
"RTN","ECSCRN",29,0)
 S X=ECCH,DIC="^ECJ(",DIC(0)="L",DLAYGO=720.3 K DD,DO D FILE^DICN K DIC
"RTN","ECSCRN",30,0)
 S ECFN=+Y
"RTN","ECSCRN",31,0)
 W !!,"Entering screen for "_ECLN_" with procedure ",$$NAM^ECSCR,"..."
"RTN","ECSCRN",32,0)
 S $P(^ECJ(ECFN,0),"^",3)=DT
"RTN","ECSCRN",33,0)
 S $P(^ECJ(ECFN,"PRO"),U)=ECP
"RTN","ECSCRN",34,0)
 S DA=ECFN,DIK="^ECJ(" D IX^DIK
"RTN","ECSCRN",35,0)
 S ^ECJ("AP",ECL,ECD,ECC,ECP,ECFN)=""
"RTN","ECSCRN",36,0)
 S ^ECJ("APP",ECL,ECD,ECP,ECFN)=""
"RTN","ECSCRN",37,0)
 ;
"RTN","ECSCRN",38,0)
 ;ALB/ESD - Ask procedure reason indicator
"RTN","ECSCRN",39,0)
 S DA=ECFN,DIE=720.3
"RTN","ECSCRN",40,0)
 S DR=$S($P(ECPCE,"~",2)="N":"",1:"55T//^S X=$G(DEFASCLN);")_"53T;54T;56T"
"RTN","ECSCRN",41,0)
 D ^DIE K DIE,DA,DR I $D(Y) S ECOUT=1
"RTN","ECSCRN",42,0)
 I $P(ECPCE,"~",2)'="N" D
"RTN","ECSCRN",43,0)
 . S DIC="^SC(",DIC(0)="N",X=$P($G(^ECJ(ECFN,"PRO")),U,4)
"RTN","ECSCRN",44,0)
 . D ^DIC S DEFASCLN=$P(Y,U,2) K DIC
"RTN","ECSCRN",45,0)
 ;
"RTN","ECSCRN",46,0)
 ;ALB/ESD - If proc reasons indictor is YES, ask procedure reasons
"RTN","ECSCRN",47,0)
 I $P($G(^ECJ(ECFN,"PRO")),"^",5)=1 D ADREAS^ECDSUTIL(ECFN)
"RTN","ECSCRN",48,0)
 ;
"RTN","ECSCRN",49,0)
 ;ALB/ESD - Always ask associated clinic and do active clinic check
"RTN","ECSCRN",50,0)
 ;ALB/JAM - Only ask for associated clinic if DSS Unit sends data to PCE
"RTN","ECSCRN",51,0)
 I $P(ECPCE,"~",2)'="N" D CLIN
"RTN","ECSCRN",52,0)
 Q
"RTN","ECSCRN",53,0)
MORE W !!,"Press <RET> to continue  " R X:DTIME S:'$T X="^" Q:X="^"
"RTN","ECSCRN",54,0)
 K ECP,Y,ECCH
"RTN","ECSCRN",55,0)
 W @IOF,!,"Event Code Screen Information:"
"RTN","ECSCRN",56,0)
 W !,"----------------------------",!
"RTN","ECSCRN",57,0)
 W !,"DSS Unit: "_ECDN,!,"Category: "_ECCN,!!
"RTN","ECSCRN",58,0)
 Q
"RTN","ECSCRN",59,0)
 ;
"RTN","ECSCRN",60,0)
END ;Kill variables.
"RTN","ECSCRN",61,0)
 W @IOF
"RTN","ECSCRN",62,0)
END1 K ECNOPE,ECZERO,DEFASCLN D ^ECKILL
"RTN","ECSCRN",63,0)
END2 K C,CNT,DIR,DSERR,ECANS,ECFIL,ECL,ECLASS,ECLN,ECP,ECPN,ECS,ECWORK,ECS
"RTN","ECSCRN",64,0)
 K ECZERO,LOC1,NUM,X,Y
"RTN","ECSCRN",65,0)
 Q
"RTN","ECSCRN",66,0)
BRO ; check for category  use in data entry
"RTN","ECSCRN",67,0)
 I '$P(^ECD(ECD,0),U,11) S ECC=0,ECCN="None" W !,"Category: "_ECCN,!! Q
"RTN","ECSCRN",68,0)
 I $P(^ECD(ECD,0),U,11) D
"RTN","ECSCRN",69,0)
 .S DIC=726,DIC(0)="AEQMZ",DIC("A")="Select Category : ",DIC("S")="I '$P(^(0),U,3)!(+$P(^(0),U,3)>DT)"
"RTN","ECSCRN",70,0)
 .D ^DIC K DIC I Y<0 S ECERR=1 Q
"RTN","ECSCRN",71,0)
 .S ECC=+Y,ECCN=Y(0,0)
"RTN","ECSCRN",72,0)
 Q
"RTN","ECSCRN",73,0)
INACT ; check to determine if inactive
"RTN","ECSCRN",74,0)
 S ECX=$O(^ECJ("B",ECCH,0)) I '$P(^ECJ(ECX,0),"^",2) W !!,"This screen has already been created for "_ECLN_"." Q
"RTN","ECSCRN",75,0)
 S Y=$$FMTE^XLFDT($P(^ECJ(ECX,0),"^",2))
"RTN","ECSCRN",76,0)
 W !!,"This event code for "_ECLN_"  inactivated on "_Y_".",!,"Do you want to reactivate it ?  NO//  " R ECYN:DTIME I '$T!(ECYN="^") Q
"RTN","ECSCRN",77,0)
 S ECYN=$E(ECYN) S:ECYN="" ECYN="N" I "YyNn"'[ECYN W !!,"Enter YES if this code should be reactivated for event code",!,"procedures, or <RET> to continue with another procedure." G INACT
"RTN","ECSCRN",78,0)
 Q:"Nn"[ECYN  W !!,"Reactivating Event Code Screen...  " K DR,DIE S DA=ECX,DIE="^ECJ(",DR="1///@" D ^DIE S ^ECJ("AP",ECL,ECD,ECC,ECP,DA)="",^ECJ("APP",ECL,ECD,ECP,DA)="" K DR,DIE,DA
"RTN","ECSCRN",79,0)
 Q
"RTN","ECSCRN",80,0)
ASK ;Ask user to verify update.
"RTN","ECSCRN",81,0)
 W ! S DIR(0)="Y",DIR("B")="YES",DIR("A")="Are you sure that you want to create the screen"
"RTN","ECSCRN",82,0)
 D ^DIR Q:$D(DIRUT)  S ECANS=+Y
"RTN","ECSCRN",83,0)
 Q
"RTN","ECSCRN",84,0)
CLIN ;check for active associated clinic
"RTN","ECSCRN",85,0)
 S MSG1=1,MSG2=0
"RTN","ECSCRN",86,0)
 S EC4=$P($G(^ECJ(+ECFN,"PRO")),"^",4) I EC4']"" S MSG2=1
"RTN","ECSCRN",87,0)
 D CLIN^ECPCEU
"RTN","ECSCRN",88,0)
 I 'ECPCL D
"RTN","ECSCRN",89,0)
 .W !!,"The clinic ",$S(MSG1:"associated with",1:"you selected for")," this event code screen ",$S(MSG2:"has not been entered",1:"is inactive"),"."
"RTN","ECSCRN",90,0)
 .W !,"Workload data cannot be sent to PCE for this event code screen with ",!,$S(MSG2:"a missing",1:"an inactive")," clinic."
"RTN","ECSCRN",91,0)
 .W !!,"Please use the Procedure Synonym/Default Volume (Enter/Edit) option to enter",!,"an active clinic.",!!
"RTN","ECSCRN",92,0)
 S (MSG1,MSG2)=0
"RTN","ECSCRN",93,0)
 Q
"RTN","ECSUM")
0^31^B11950391
"RTN","ECSUM",1,0)
ECSUM ;BIR/JLP,RHK-Category and Procedure Summary ;30 Apr 96
"RTN","ECSUM",2,0)
 ;;2.0; EVENT CAPTURE ;**4,19,33,47**;8 May 96
"RTN","ECSUM",3,0)
LOC K ECL S EC1=0 D ^ECL S:$D(LOC(2)) EC1=1 K LOC I '$D(ECL) S ECOUT=1 G END
"RTN","ECSUM",4,0)
UNIT ;set var and sel dss unit
"RTN","ECSUM",5,0)
 S ECJLP=0
"RTN","ECSUM",6,0)
 S (ECOUT,ECALL)=0,ECPG=1
"RTN","ECSUM",7,0)
 W @IOF F Q=0:0 D  Q:%
"RTN","ECSUM",8,0)
 .W !!,"Do you want to list all DSS Units for "_ECLN S %=1 D YN^DICN Q:%
"RTN","ECSUM",9,0)
 .W !!?5,"Enter <RET> to list all your DSS Units for this location, or"
"RTN","ECSUM",10,0)
 .W !?11,"NO to select a specific DSS Unit"
"RTN","ECSUM",11,0)
 G:%<0 END I %=1 S ECALL=1 G ECSCN
"RTN","ECSUM",12,0)
 W @IOF,! K DIC S DIC=724,DIC(0)="QEAMZ",DIC("A")="Select DSS Unit: "
"RTN","ECSUM",13,0)
 S:ECL DIC("S")="I $D(^ECJ(""AP"",ECL,+Y))"
"RTN","ECSUM",14,0)
 D ^DIC K DIC G:Y<0 END S ECD=+Y,ECDN=$P(Y,"^",2)
"RTN","ECSUM",15,0)
 S ECDN=ECDN_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECSUM",16,0)
 S ECS=+$P(^ECD(ECD,0),"^",2),ECJLP=+$P(^(0),"^",11)
"RTN","ECSUM",17,0)
 S ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECSUM",18,0)
SEL ;
"RTN","ECSUM",19,0)
 I 'ECJLP S ECC=0,ECCN="None" G ECSCN
"RTN","ECSUM",20,0)
 W @IOF F Q=0:0 D  Q:%
"RTN","ECSUM",21,0)
 .W !!,"Do you want to list all categories for "_ECDN S %=1 D YN^DICN Q:%
"RTN","ECSUM",22,0)
 .W !!,"Enter <RET> if you would like to list all categories for this "
"RTN","ECSUM",23,0)
 .W "DSS Unit,",!," or NO to select a specific category"
"RTN","ECSUM",24,0)
 G:%<0 END I %=1 S ECC="ALL" G ECSCN
"RTN","ECSUM",25,0)
 W @IOF,! K DIC S DIC=726,DIC(0)="QEAMZ",DIC("A")="Select Category for "
"RTN","ECSUM",26,0)
 S DIC("A")=DIC("A")_ECDN_" DSS Unit:  "
"RTN","ECSUM",27,0)
 S:ECD DIC("S")="I $D(^ECJ(""AP"",ECL,ECD,+Y))"
"RTN","ECSUM",28,0)
 D ^DIC K DIC G:Y<0 END S ECC=+Y,ECCN=$P(Y,"^",2)
"RTN","ECSUM",29,0)
ECSCN ;Event Codes Screens to display, ALB/JAM-10/16/01
"RTN","ECSUM",30,0)
 K DIR
"RTN","ECSUM",31,0)
 S DIR(0)="SO^A:Active Event Code Screens;I:Inactive Event Code Screens"
"RTN","ECSUM",32,0)
 S DIR(0)=DIR(0)_";B:Both",DIR("B")="A"
"RTN","ECSUM",33,0)
 S DIR("A")="Event Code Screen to display"
"RTN","ECSUM",34,0)
 S DIR("?",1)="Enter an A for Active Event Code Screens, I for Inactive "
"RTN","ECSUM",35,0)
 S DIR("?",1)=DIR("?",1)_"Code Screens,"
"RTN","ECSUM",36,0)
 S DIR("?")="B for a consolidated report of all Event Code Screens, or "
"RTN","ECSUM",37,0)
 S DIR("?")=DIR("?")_"^ to quit."
"RTN","ECSUM",38,0)
 S DIR("??")="ECSUM^"
"RTN","ECSUM",39,0)
 D ^DIR K DIR I $D(DIRUT) G END
"RTN","ECSUM",40,0)
 S ECSCN=Y
"RTN","ECSUM",41,0)
DEV W !! K IOP,POP,IO("Q"),%ZIS,ZTSK
"RTN","ECSUM",42,0)
 S %ZIS="QM",%ZIS("A")="Select Device:  " D ^%ZIS I POP S ECOUT=1 G END
"RTN","ECSUM",43,0)
 I $D(IO("Q")) K IO("Q") D  G END
"RTN","ECSUM",44,0)
 .S ZTDESC="CATEGORY AND PROCEDURE SUMMARY",ZTRTN="START^ECSUM",ZTIO=ION
"RTN","ECSUM",45,0)
 .D SAVE,^%ZTLOAD,HOME^%ZIS K ZTSK
"RTN","ECSUM",46,0)
 U IO
"RTN","ECSUM",47,0)
START ;
"RTN","ECSUM",48,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECSUM",49,0)
 S ECOUT=0,ECPG=1 I ECALL D ^ECSUM1 G CLEAR
"RTN","ECSUM",50,0)
 D SUM2^ECSUM1
"RTN","ECSUM",51,0)
CLEAR I $E(IOST,1,2)'="C-" G END
"RTN","ECSUM",52,0)
 G:ECOUT END
"RTN","ECSUM",53,0)
 I ECPG W !!!!!,"Press <RET> to continue  " R X:DTIME I '$T!(X="^") S ECOUT=1 G END
"RTN","ECSUM",54,0)
 G:ECALL END
"RTN","ECSUM",55,0)
ASK ;
"RTN","ECSUM",56,0)
 W @IOF F Q=0:0 D  I % Q
"RTN","ECSUM",57,0)
 .W !!,"Would you like to list another DSS Unit for this Location"
"RTN","ECSUM",58,0)
 .S %=2 D YN^DICN I % Q
"RTN","ECSUM",59,0)
 .W !!,"Enter YES to list another DSS Unit or <RET> to continue"
"RTN","ECSUM",60,0)
 G:%<0 END I %=1 D  G UNIT
"RTN","ECSUM",61,0)
 .K EC4,ECD,ECDN,ECC,ECCN,ECP,ECPN,ECSY,ECSYN,NATN,ECS,ECSN,ECFILE,ECSCN
"RTN","ECSUM",62,0)
 K EC4,ECD,ECDN,ECC,ECCN,ECP,ECPN,ECSY,ECSYN,NATN,ECS,ECSN,ECFILE,ECSCN
"RTN","ECSUM",63,0)
 I EC1 G LOC
"RTN","ECSUM",64,0)
END ;
"RTN","ECSUM",65,0)
 D ^ECKILL Q:$D(ECGUI)  W @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECSUM",66,0)
 Q
"RTN","ECSUM",67,0)
SAVE ;
"RTN","ECSUM",68,0)
 S (ZTSAVE("ECA*"),ZTSAVE("ECJLP"),ZTSAVE("ECC*"),ZTSAVE("ECD*"),ZTSAVE("ECL*"),ZTSAVE("ECM*"),ZTSAVE("ECP*"),ZTSAVE("ECS*"),ZTSAVE("EC4"))=""
"RTN","ECSUM",69,0)
 Q
"RTN","ECSUM1")
0^8^B11786864
"RTN","ECSUM1",1,0)
ECSUM1 ;BIR/JLP,RHK-Category and Procedure Summary (cont'd) ;20 Mar 96
"RTN","ECSUM1",2,0)
 ;;2.0; EVENT CAPTURE ;**4,19,23,33,47**;8 May 96
"RTN","ECSUM1",3,0)
ALLU ;
"RTN","ECSUM1",4,0)
 N UCNT,ECDO,ECCO,ECNT
"RTN","ECSUM1",5,0)
 S (ECD,ECMORE,ECNT,ECDO,ECCO)=0,ECPG=1,ECSCN=$G(ECSCN,"B")
"RTN","ECSUM1",6,0)
 F  S ECD=$O(^ECJ("AP",ECL,ECD)) Q:'ECD  D  Q:ECOUT
"RTN","ECSUM1",7,0)
 .D SET,CATS,PAGE:'ECOUT&UCNT
"RTN","ECSUM1",8,0)
END I 'ECNT W !!!,"Nothing Found."
"RTN","ECSUM1",9,0)
 S ECPG=1
"RTN","ECSUM1",10,0)
 Q
"RTN","ECSUM1",11,0)
SUM2 ;Prints Categories and Procedures for a DSS Unit
"RTN","ECSUM1",12,0)
 N UCNT,ECDO,ECCO,ECNT
"RTN","ECSUM1",13,0)
 S (ECDO,ECMORE,UCNT,ECNT,ECCO)=0,ECPG=1,ECSCN=$G(ECSCN,"B")
"RTN","ECSUM1",14,0)
 I ECC="ALL" D CATS G END
"RTN","ECSUM1",15,0)
 I 'ECJLP S ECC=0,ECCN="None",ECCO=999
"RTN","ECSUM1",16,0)
 D PROC
"RTN","ECSUM1",17,0)
 D END
"RTN","ECSUM1",18,0)
 Q
"RTN","ECSUM1",19,0)
SET ;set var
"RTN","ECSUM1",20,0)
 S ECDN=$S($P($G(^ECD(+ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN"),UCNT=0
"RTN","ECSUM1",21,0)
 S ECDN=ECDN_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECSUM1",22,0)
 S ECS=+$P($G(^ECD(+ECD,0)),"^",2)
"RTN","ECSUM1",23,0)
 S ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECSUM1",24,0)
 Q
"RTN","ECSUM1",25,0)
SETC ;set cats
"RTN","ECSUM1",26,0)
 I ECC=0 S ECCN="None" Q
"RTN","ECSUM1",27,0)
 S ECCN=$S($P($G(^EC(726,+ECC,0)),"^")]"":$P(^(0),"^"),1:"ZZ #"_ECC_" MISSING DATA")
"RTN","ECSUM1",28,0)
 S ECMORE=1
"RTN","ECSUM1",29,0)
 Q
"RTN","ECSUM1",30,0)
HEADER ;
"RTN","ECSUM1",31,0)
 W:$E(IOST,1,2)="C-"!(ECPG>1) @IOF
"RTN","ECSUM1",32,0)
 W !!,?25,"CATEGORY AND PROCEDURE SUMMARY",?70,"Page: ",ECPG,!
"RTN","ECSUM1",33,0)
 W ?27,$S(ECSCN="I":"INACTIVE",ECSCN="A":"ACTIVE",1:" ALL")_" EVENT CODE"
"RTN","ECSUM1",34,0)
 W " SCREENS",!?25,"Run Date : ",ECRDT,!?25,"LOCATION:  "_ECLN
"RTN","ECSUM1",35,0)
 W !,?25,"SERVICE:   ",ECSN,!?25,"DSS UNIT:  "_ECDN,! S ECPG=ECPG+1
"RTN","ECSUM1",36,0)
 F I=1:1:80 W "-"
"RTN","ECSUM1",37,0)
 Q
"RTN","ECSUM1",38,0)
CATS ;
"RTN","ECSUM1",39,0)
 S ECC="",ECCO=0
"RTN","ECSUM1",40,0)
 F  S ECC=$O(^ECJ("AP",ECL,ECD,ECC)) Q:ECC=""  D SETC,PROC Q:ECOUT
"RTN","ECSUM1",41,0)
 S ECMORE=0
"RTN","ECSUM1",42,0)
 Q
"RTN","ECSUM1",43,0)
PROC ;
"RTN","ECSUM1",44,0)
 S ECP=""
"RTN","ECSUM1",45,0)
 F  S ECP=$O(^ECJ("AP",ECL,ECD,ECC,ECP)) Q:ECP=""  D SETP Q:ECOUT
"RTN","ECSUM1",46,0)
 S ECMORE=0
"RTN","ECSUM1",47,0)
 Q
"RTN","ECSUM1",48,0)
SETP ;set procs
"RTN","ECSUM1",49,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,""))
"RTN","ECSUM1",50,0)
 S ECINDT=$P($G(^ECJ(ECPSY,0)),"^",2)
"RTN","ECSUM1",51,0)
 I ECSCN="A",ECINDT'="" Q
"RTN","ECSUM1",52,0)
 I ECSCN="I",ECINDT="" Q
"RTN","ECSUM1",53,0)
 I ECD'=ECDO D HEADER S ECDO=ECD
"RTN","ECSUM1",54,0)
 I ECC'=ECCO D  S ECCO=ECC I ECOUT Q
"RTN","ECSUM1",55,0)
 .W !!,?3,"Category:  "_ECCN D:$Y+4>IOSL PAGE,HEADER:ECPG,MORE:$D(ECCN)
"RTN","ECSUM1",56,0)
 S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2),EC4=+$P($G(^("PRO")),"^",4)
"RTN","ECSUM1",57,0)
 S EC2="" I EC4 S EC2=$S($P($G(^SC(EC4,0)),"^")]"":$P(^(0),"^"),1:"NO ASSOCIATED CLINIC")
"RTN","ECSUM1",58,0)
 S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECSUM1",59,0)
 I ECFILE="UNKNOWN" S ECPN="UNKNOWN",NATN="UNKNOWN"
"RTN","ECSUM1",60,0)
 I ECFILE=81 S ECPI=$$CPT^ICPTCOD(+ECP) D
"RTN","ECSUM1",61,0)
 .S ECPN=$S($P(ECPI,"^",3)]"":$P(ECPI,"^",3),1:"UNKNOWN"),NATN=$S($P(ECPI,"^",2)]"":$P(ECPI,"^",2),1:"NOT LISTED") K ECPI
"RTN","ECSUM1",62,0)
 I ECFILE=725 S ECPN=$S($P($G(^EC(725,+ECP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN"),NATN=$S($P($G(^EC(725,+ECP,0)),"^",2)]"":$P(^(0),"^",2),1:"NOT LISTED")
"RTN","ECSUM1",63,0)
 S ECPN=$S(ECPSYN]"":ECPSYN,1:ECPN),ECNT=ECNT+1,UCNT=UCNT+1
"RTN","ECSUM1",64,0)
 W !,?3,"Procedure: ",$E(ECPN,1,30),"   (",$S(ECFILE=81:"CPT",1:"EC"),")",?52,"Nat'l No.: ",NATN
"RTN","ECSUM1",65,0)
 W:EC2]"" !,?14,"(Clinic: "_EC2_")"
"RTN","ECSUM1",66,0)
 I $P($G(^ECJ(+ECPSY,0)),"^",2),ECSCN="B" W ?70,"*INACTIVE*"
"RTN","ECSUM1",67,0)
 D:($Y+3)>IOSL PAGE,HEADER:ECPG,MORE:$D(ECCN) Q:ECOUT
"RTN","ECSUM1",68,0)
 Q
"RTN","ECSUM1",69,0)
PAGE ;
"RTN","ECSUM1",70,0)
 N SS,JJ
"RTN","ECSUM1",71,0)
 I $D(ECPG),$E(IOST,1,2)="C-" D
"RTN","ECSUM1",72,0)
 . S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECSUM1",73,0)
 . S DIR(0)="E" W ! D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECSUM1",74,0)
 Q
"RTN","ECSUM1",75,0)
MORE I ECMORE W !!,?3,"Category:  "_ECCN
"RTN","ECSUM1",76,0)
 Q
"RTN","ECUERPC")
0^7^B49300065
"RTN","ECUERPC",1,0)
ECUERPC ;ALB/JAM;Event Capture Data Entry Broker Utilities ;Aug 16, 2000
"RTN","ECUERPC",2,0)
 ;;2.0; EVENT CAPTURE ;**25,32,33,46,47**;8 May 96
"RTN","ECUERPC",3,0)
 ;
"RTN","ECUERPC",4,0)
USRUNT(RESULTS,ECARY) ;
"RTN","ECUERPC",5,0)
 ;
"RTN","ECUERPC",6,0)
 ;This broker call returns an array of DSS units for a user & location
"RTN","ECUERPC",7,0)
 ;        RPC: EC GETUSRDSSUNIT
"RTN","ECUERPC",8,0)
 ;INPUTS        ECARY  - Contains the following subscripted elements
"RTN","ECUERPC",9,0)
 ;               1. ECL   - Location IEN (if define gives User's DSS 
"RTN","ECUERPC",10,0)
 ;                          units for a location)
"RTN","ECUERPC",11,0)
 ;               2. ECDUZ - New Person IEN (if define gives list of 
"RTN","ECUERPC",12,0)
 ;                          DSS Units available to user)
"RTN","ECUERPC",13,0)
 ;
"RTN","ECUERPC",14,0)
 ;OUTPUTS        RESULTS - Array of DSS Units. Data pieces as follows:-
"RTN","ECUERPC",15,0)
 ;               PIECE - Description
"RTN","ECUERPC",16,0)
 ;                 1     IEN of file 724
"RTN","ECUERPC",17,0)
 ;                 2     Name of DSS Unit
"RTN","ECUERPC",18,0)
 ;                 3     Send to PCE Flag
"RTN","ECUERPC",19,0)
 N ECL,ECDUZ,CNT,STR,DPT,IEN
"RTN","ECUERPC",20,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",21,0)
 S ECL=$P(ECARY,U),ECDUZ=$P(ECARY,U,2) I ECL="",ECDUZ="" Q
"RTN","ECUERPC",22,0)
 ;S ECDUZ=$G(DUZ,U),ECL=$P(ECARY,U) I (ECDUZ="")!(ECL="") Q
"RTN","ECUERPC",23,0)
 K ^TMP($J,"ECUSRUNT") S (DPT,CNT)=0
"RTN","ECUERPC",24,0)
 I ECL'="",ECDUZ="" S ECDUZ=$G(DUZ,U) I ECDUZ="" Q
"RTN","ECUERPC",25,0)
 I $D(^XUSEC("ECALLU",ECDUZ)) S DPT="" D
"RTN","ECUERPC",26,0)
 .I ECL="" S ^TMP($J,"ECUSRUNT",CNT+1)="ALL^ALL" Q
"RTN","ECUERPC",27,0)
 .I ECL="ALL" S ECL=""
"RTN","ECUERPC",28,0)
 .F  S DPT=$O(^ECD("B",DPT))  Q:DPT=""  S IEN=0 D
"RTN","ECUERPC",29,0)
 ..F  S IEN=$O(^ECD("B",DPT,IEN)) Q:'IEN  D UNTCHK
"RTN","ECUERPC",30,0)
 E  D
"RTN","ECUERPC",31,0)
 .I ECL="ALL" S ECL=""
"RTN","ECUERPC",32,0)
 .F  S DPT=$O(^VA(200,ECDUZ,"EC",DPT)) Q:'DPT  S IEN=DPT D UNTCHK
"RTN","ECUERPC",33,0)
 S RESULTS=$NA(^TMP($J,"ECUSRUNT"))
"RTN","ECUERPC",34,0)
 Q
"RTN","ECUERPC",35,0)
UNTCHK ;Check if DSS unit exist as event code screen and if active
"RTN","ECUERPC",36,0)
 N DSSF
"RTN","ECUERPC",37,0)
 ;I '$D(^ECJ("AP",ECL,IEN))!($P($G(^ECD(IEN,0)),U,6)) Q
"RTN","ECUERPC",38,0)
 I ECL'="",'$D(^ECJ("AP",ECL,IEN)) Q
"RTN","ECUERPC",39,0)
 I ($P($G(^ECD(IEN,0)),U,6))!('$P($G(^ECD(IEN,0)),U,8)) Q
"RTN","ECUERPC",40,0)
 S DSSF=$P(^ECD(IEN,0),"^",14) S:DSSF="" DSSF="N"
"RTN","ECUERPC",41,0)
 S CNT=CNT+1,STR=IEN_"^"_$P(^ECD(IEN,0),"^")_U_DSSF
"RTN","ECUERPC",42,0)
 S ^TMP($J,"ECUSRUNT",CNT)=STR
"RTN","ECUERPC",43,0)
 Q
"RTN","ECUERPC",44,0)
CAT(RESULTS,ECARY) ;
"RTN","ECUERPC",45,0)
 ;
"RTN","ECUERPC",46,0)
 ;This broker entry point returns an array of categories for an Event 
"RTN","ECUERPC",47,0)
 ;Code screen based on location and DSS unit.
"RTN","ECUERPC",48,0)
 ;        RPC: EC GETECSCATS
"RTN","ECUERPC",49,0)
 ;INPUTS        ECARY  - Contains the following values separated by "^"
"RTN","ECUERPC",50,0)
 ;               ECL  - Location IEN
"RTN","ECUERPC",51,0)
 ;               ECD  - DSS Unit IEN
"RTN","ECUERPC",52,0)
 ;               ECCSTA-Active or inactive category
"RTN","ECUERPC",53,0)
 ;                      A-ctive (default), I-nactive, B-oth
"RTN","ECUERPC",54,0)
 ;
"RTN","ECUERPC",55,0)
 ;OUTPUTS        RESULTS - Array of categories. Data pieces as follows:-
"RTN","ECUERPC",56,0)
 ;               PIECE - Description
"RTN","ECUERPC",57,0)
 ;                 1  - Category IEN
"RTN","ECUERPC",58,0)
 ;                 2  - Category description
"RTN","ECUERPC",59,0)
 ;
"RTN","ECUERPC",60,0)
 N ECL,ECD,ECC,CNT,DATA,ECCSTA
"RTN","ECUERPC",61,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",62,0)
 S ECL=$P(ECARY,U),ECD=$P(ECARY,U,2) I (ECL="")!(ECD="") Q
"RTN","ECUERPC",63,0)
 S ECCSTA=$P(ECARY,U,3)
"RTN","ECUERPC",64,0)
 K ^TMP($J,"ECSCATS")
"RTN","ECUERPC",65,0)
 D CATS^ECHECK1
"RTN","ECUERPC",66,0)
 M ^TMP($J,"ECSCATS")=ECC
"RTN","ECUERPC",67,0)
 S RESULTS=$NA(^TMP($J,"ECSCATS"))
"RTN","ECUERPC",68,0)
 Q
"RTN","ECUERPC",69,0)
PROC(RESULTS,ECARY) ;
"RTN","ECUERPC",70,0)
 ;
"RTN","ECUERPC",71,0)
 ;This broker entry point returns an array of procedures for an Event 
"RTN","ECUERPC",72,0)
 ;Code screen (file #720.3) based on location, DSS unit, and Category
"RTN","ECUERPC",73,0)
 ;        RPC: EC GETECSPROCS
"RTN","ECUERPC",74,0)
 ;INPUTS        ECARY  - Contains the following values separated by "^"
"RTN","ECUERPC",75,0)
 ;               ECL  - Location IEN
"RTN","ECUERPC",76,0)
 ;               ECD  - DSS Unit IEN
"RTN","ECUERPC",77,0)
 ;               ECC  - Category IEN
"RTN","ECUERPC",78,0)
 ;               ECDT - Procedure Date
"RTN","ECUERPC",79,0)
 ;
"RTN","ECUERPC",80,0)
 ;OUTPUTS        RESULTS - Array of procedures. Data pieces as follows:-
"RTN","ECUERPC",81,0)
 ;               PIECE - Description
"RTN","ECUERPC",82,0)
 ;                 1  - EC National Number SPACE Procedure Name SPACE
"RTN","ECUERPC",83,0)
 ;                   - [Synonym]
"RTN","ECUERPC",84,0)
 ;                 2  - Procedure Code
"RTN","ECUERPC",85,0)
 ;                 3  - CPT Code
"RTN","ECUERPC",86,0)
 ;                 4  - Default volume (1 if no default volume)
"RTN","ECUERPC",87,0)
 ;                 5  - Event code screen IEN
"RTN","ECUERPC",88,0)
 ;
"RTN","ECUERPC",89,0)
 N ECL,ECD,ECC,CNT,DATA,STR,ECCPT,PX
"RTN","ECUERPC",90,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",91,0)
 S ECL=$P(ECARY,U),ECD=$P(ECARY,U,2),ECC=$P(ECARY,U,3) S:ECC="" ECC=0
"RTN","ECUERPC",92,0)
 I (ECL="")!(ECD="") Q
"RTN","ECUERPC",93,0)
 S ECDT=$P(ECARY,U,4)
"RTN","ECUERPC",94,0)
 K ^TMP($J,"ECPRO")
"RTN","ECUERPC",95,0)
 D PROS^ECHECK1
"RTN","ECUERPC",96,0)
 S CNT=0 F  S CNT=$O(^TMP("ECPRO",$J,CNT)) Q:'CNT  D
"RTN","ECUERPC",97,0)
 .S DATA=^TMP("ECPRO",$J,CNT),PX=$P(DATA,U)
"RTN","ECUERPC",98,0)
 .S ECCPT=$S(PX["EC":$P($G(^EC(725,+PX,0)),"^",5),1:+PX)
"RTN","ECUERPC",99,0)
 .S STR=$P(DATA,U,5)_" "_$P(DATA,U,4)_" ["_$P(DATA,U,3)_"]"_U_PX
"RTN","ECUERPC",100,0)
 .S STR=STR_U_ECCPT_U_$S($P(DATA,U,6):+$P(DATA,U,6),1:1)_U_$P(DATA,U,2)
"RTN","ECUERPC",101,0)
 .S ^TMP($J,"ECPRO",CNT)=STR
"RTN","ECUERPC",102,0)
 S RESULTS=$NA(^TMP($J,"ECPRO"))
"RTN","ECUERPC",103,0)
 K ^TMP("ECPRO",$J)
"RTN","ECUERPC",104,0)
 Q
"RTN","ECUERPC",105,0)
ECPXMOD(RESULTS,ECARY) ;
"RTN","ECUERPC",106,0)
 ;
"RTN","ECUERPC",107,0)
 ;Broker call returns modifier entries for a CPT Procedure
"RTN","ECUERPC",108,0)
 ;        RPC: EC GETPXMODIFIER
"RTN","ECUERPC",109,0)
 ;INPUTS   ECARY  - Contains the following values separated by "^"
"RTN","ECUERPC",110,0)
 ;          ECCPT - CPT code ien (file #81)
"RTN","ECUERPC",111,0)
 ;          ECDT  - Procedure date and time (fileman format)
"RTN","ECUERPC",112,0)
 ;
"RTN","ECUERPC",113,0)
 ;OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC",114,0)
 ;          2-character modifier^modifer name^modifier ien #81.3
"RTN","ECUERPC",115,0)
 ;
"RTN","ECUERPC",116,0)
 N CNT,SUB,ECCPT,ECDT,DATA,ECMOD
"RTN","ECUERPC",117,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",118,0)
 S ECCPT=$P(ECARY,U),ECDT=$P(ECARY,U,2) I ECDT="" D NOW^%DTC S ECDT=%
"RTN","ECUERPC",119,0)
 I ECCPT="" Q
"RTN","ECUERPC",120,0)
 K ^TMP($J,"ECPXMODS") S (SUB,CNT)=0
"RTN","ECUERPC",121,0)
 S DATA=$$CODM^ICPTCOD(ECCPT,"ECMOD","",ECDT) I +DATA<0 Q
"RTN","ECUERPC",122,0)
 F  S SUB=$O(ECMOD(SUB)) Q:SUB=""  D
"RTN","ECUERPC",123,0)
 . S CNT=CNT+1,^TMP($J,"ECPXMODS",CNT)=SUB_U_ECMOD(SUB)
"RTN","ECUERPC",124,0)
 S RESULTS=$NA(^TMP($J,"ECPXMODS"))
"RTN","ECUERPC",125,0)
 Q
"RTN","ECUERPC",126,0)
PRVDER(RESULTS,ECARY) ;
"RTN","ECUERPC",127,0)
 ;remove this rpc before release;JAM 6/4/01
"RTN","ECUERPC",128,0)
 ;This broker entry point returns an array of valid providers
"RTN","ECUERPC",129,0)
 ;        RPC: EC GETPROVIDER
"RTN","ECUERPC",130,0)
 ;INPUTS        ECARY  - Contains the following subscripted elements
"RTN","ECUERPC",131,0)
 ;               ECDT  - Procedure date
"RTN","ECUERPC",132,0)
 ;
"RTN","ECUERPC",133,0)
 ;OUTPUTS        RESULTS - Array of providers. Data pieces as follows:-
"RTN","ECUERPC",134,0)
 ;               PIECE - Description
"RTN","ECUERPC",135,0)
 ;                IEN of file 200^Provider Name^occupation^speciality^
"RTN","ECUERPC",136,0)
 ;                subspeciality
"RTN","ECUERPC",137,0)
 ;
"RTN","ECUERPC",138,0)
 N IEN,CNT,ECUTN,KEY,USR
"RTN","ECUERPC",139,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",140,0)
 S ECDT=$P($G(ECARY),U),ECDT=$S(ECDT="":DT,1:ECDT)
"RTN","ECUERPC",141,0)
 K ^TMP($J,"ECPRVDRS") S CNT=0
"RTN","ECUERPC",142,0)
 F KEY="PROVIDER" S IEN=0 D
"RTN","ECUERPC",143,0)
 .F  S IEN=$O(^XUSEC(KEY,IEN)) Q:'IEN  S USR=$G(^VA(200,IEN,0)) D:USR'=""
"RTN","ECUERPC",144,0)
 ..S ECUTN=$$GET^XUA4A72(IEN,ECDT) I +ECUTN'>0 Q
"RTN","ECUERPC",145,0)
 ..S CNT=CNT+1,^TMP($J,"ECPRVDRS",CNT)=IEN_U_$P(USR,U)_U_$P(ECUTN,2,4)
"RTN","ECUERPC",146,0)
 S RESULTS=$NA(^TMP($J,"ECPRVDRS"))
"RTN","ECUERPC",147,0)
 Q
"RTN","ECUERPC",148,0)
 ;
"RTN","ECUERPC",149,0)
ELIG(RESULTS,ECARY) ;
"RTN","ECUERPC",150,0)
 ;
"RTN","ECUERPC",151,0)
 ;Broker call returns a list of patient eligibilities
"RTN","ECUERPC",152,0)
 ;        RPC: EC GETPATELIG
"RTN","ECUERPC",153,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUERPC",154,0)
 ;          DFN - Patient ien (file #2)
"RTN","ECUERPC",155,0)
 ;
"RTN","ECUERPC",156,0)
 ;OUTPUTS  RESULTS - Array of eligibilities
"RTN","ECUERPC",157,0)
 ;          primary/secondary elig flag^elig ien^elig description
"RTN","ECUERPC",158,0)
 ;
"RTN","ECUERPC",159,0)
 N CNT,SUB,DFN,VAEL
"RTN","ECUERPC",160,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",161,0)
 S DFN=$P(ECARY,U) I DFN="" Q
"RTN","ECUERPC",162,0)
 K ^TMP($J,"ECPATELIG")
"RTN","ECUERPC",163,0)
 D ELIG^VADPT I $G(VAEL(1))="" Q
"RTN","ECUERPC",164,0)
 S ^TMP($J,"ECPATELIG",1)="1^"_VAEL(1),SUB=0,CNT=1
"RTN","ECUERPC",165,0)
 F  S SUB=$O(VAEL(1,SUB)) Q:SUB=""  D
"RTN","ECUERPC",166,0)
 . S CNT=CNT+1,^TMP($J,"ECPATELIG",CNT)="0^"_VAEL(1,SUB)
"RTN","ECUERPC",167,0)
 S RESULTS=$NA(^TMP($J,"ECPATELIG"))
"RTN","ECUERPC",168,0)
 Q
"RTN","ECUERPC",169,0)
PRDEFS(RESULTS,ECARY) ;
"RTN","ECUERPC",170,0)
 ;
"RTN","ECUERPC",171,0)
 ;This broker entry point returns the defaults for procedure data entry
"RTN","ECUERPC",172,0)
 ;        RPC: EC GETPRODEFS
"RTN","ECUERPC",173,0)
 ;INPUTS        ECARY  - Contains the following values separated by "^"
"RTN","ECUERPC",174,0)
 ;               ECL  - Location IEN
"RTN","ECUERPC",175,0)
 ;               ECD  - DSS Unit IEN
"RTN","ECUERPC",176,0)
 ;               ECC  - Category IEN
"RTN","ECUERPC",177,0)
 ;
"RTN","ECUERPC",178,0)
 ;OUTPUTS        RESULTS - Data pieces as follows:-
"RTN","ECUERPC",179,0)
 ;               PIECE - Description
"RTN","ECUERPC",180,0)
 ;                 1  - Associated Clinic IEN
"RTN","ECUERPC",181,0)
 ;                 2  - Associated Clinic
"RTN","ECUERPC",182,0)
 ;                 3  - Medical Speciality IEN
"RTN","ECUERPC",183,0)
 ;                 4  - Medical Speciality
"RTN","ECUERPC",184,0)
 ;
"RTN","ECUERPC",185,0)
 N ECL,ECD,ECC,ECP,IEN,ASC,ASCNM,MEDSP,MEDSPNM,ECCH
"RTN","ECUERPC",186,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",187,0)
 S ECL=$P(ECARY,U),ECD=$P(ECARY,U,2),ECC=$P(ECARY,U,3),ECP=$P(ECARY,U,4)
"RTN","ECUERPC",188,0)
 S:ECC="" ECC=0 I (ECL="")!(ECD="") Q
"RTN","ECUERPC",189,0)
 S (ASCNM,MEDSPNM)="",ECCH=ECL_"-"_ECD_"-"_ECC_"-"_ECP
"RTN","ECUERPC",190,0)
 I '$D(^ECJ("B",ECCH)) Q
"RTN","ECUERPC",191,0)
 S IEN=$O(^ECJ("B",ECCH,0)) I IEN="" Q
"RTN","ECUERPC",192,0)
 S ASC=$P($G(^ECJ(IEN,"PRO")),U,4) I ASC D
"RTN","ECUERPC",193,0)
 .S ASCNM=$$GET1^DIQ(44,ASC,.01,"I")
"RTN","ECUERPC",194,0)
 S MEDSP=$P($G(^ECD(ECD,0)),U,3) I MEDSP D 
"RTN","ECUERPC",195,0)
 .S MEDSPNM=$$GET1^DIQ(723,MEDSP,.01,"I")
"RTN","ECUERPC",196,0)
 S RESULTS=ASC_U_ASCNM_U_MEDSP_U_MEDSPNM
"RTN","ECUERPC",197,0)
 Q
"RTN","ECUERPC",198,0)
PATPROC(RESULTS,ECARY) ;
"RTN","ECUERPC",199,0)
 ;
"RTN","ECUERPC",200,0)
 ;Broker call returns the entries from EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC",201,0)
 ;        RPC: EC GETPATPROCS
"RTN","ECUERPC",202,0)
 ;INPUTS   ECARY - Contains the following values separated by "^"
"RTN","ECUERPC",203,0)
 ;          ECLOC - Location ien
"RTN","ECUERPC",204,0)
 ;          ECPAT - Patient DFN ien
"RTN","ECUERPC",205,0)
 ;          ECUNT - DSS unit ien
"RTN","ECUERPC",206,0)
 ;          ECSD  - Start Date
"RTN","ECUERPC",207,0)
 ;          ECED  - End Date
"RTN","ECUERPC",208,0)
 ;
"RTN","ECUERPC",209,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient entries contain
"RTN","ECUERPC",210,0)
 ;          721 IEN^Procedure date and time^Category^Procedure^Volume^
"RTN","ECUERPC",211,0)
 ;          Provider^ordering section^associated clinic^primary diagnoses
"RTN","ECUERPC",212,0)
 ;          Provider IEN
"RTN","ECUERPC",213,0)
 ;
"RTN","ECUERPC",214,0)
 N IEN,CNT,ECV,ECLOC,ECUNT,ECPAT,PX,NODE,DATA,PDT,PDX,PND,PDXD,CAT,ECI
"RTN","ECUERPC",215,0)
 N ORS,PRV,PRO
"RTN","ECUERPC",216,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",217,0)
 S ECV="ECLOC^ECPAT^ECUNT^ECSD^ECED"
"RTN","ECUERPC",218,0)
 D PARSE(ECV,ECARY) I (ECLOC="")!(ECPAT="")!(ECUNT="") Q
"RTN","ECUERPC",219,0)
 K ^TMP($J,"ECPATPX")
"RTN","ECUERPC",220,0)
 S ECSD=$G(ECSD,DT),ECED=$G(ECED,DT)
"RTN","ECUERPC",221,0)
 S %DT="X" F ECI="ECSD","ECED" S X=@ECI D ^%DT S @ECI=Y
"RTN","ECUERPC",222,0)
 K X,Y
"RTN","ECUERPC",223,0)
 S ECSD=$S(ECSD=-1:DT,1:ECSD)-.0001,ECED=$S(ECED=-1:DT,1:ECED)+.9999
"RTN","ECUERPC",224,0)
 Q:ECED'>ECSD  S PDT=ECSD,CNT=0
"RTN","ECUERPC",225,0)
 F  S PDT=$O(^ECH("ADT",ECLOC,ECPAT,ECUNT,PDT)) Q:'PDT!(PDT>ECED)  D
"RTN","ECUERPC",226,0)
 . S IEN=0 F  S IEN=$O(^ECH("ADT",ECLOC,ECPAT,ECUNT,PDT,IEN)) Q:'IEN  D
"RTN","ECUERPC",227,0)
 . . S NODE=$G(^ECH(IEN,0)),PND=$G(^ECH(IEN,"P")),PX=$P(NODE,U,9)
"RTN","ECUERPC",228,0)
 . . Q:NODE=""  S (PRV,CAT,ORS,ASC,PDXD)="",PDX=$P(PND,U,2)
"RTN","ECUERPC",229,0)
 . . I PX["EC" D
"RTN","ECUERPC",230,0)
 . . . S PRO=$G(^EC(725,$P(PX,";"),0)),PX=$P(PRO,U,2)_" "_$P(PRO,U)
"RTN","ECUERPC",231,0)
 . . E  S PRO=$$CPT^ICPTCOD($P(PX,";"),PDT) S PX=$P(PRO,U,2)_" "_$P(PRO,U,3)
"RTN","ECUERPC",232,0)
 . . S:$P(NODE,U,8) CAT=$$GET1^DIQ(726,$P(NODE,U,8),.01,"I")
"RTN","ECUERPC",233,0)
 . . S:$P(NODE,U,11) PRV=$$GET1^DIQ(200,$P(NODE,U,11),.01,"I")
"RTN","ECUERPC",234,0)
 . . S:$P(NODE,U,12) ORS=$$GET1^DIQ(723,$P(NODE,U,12),.01,"I")
"RTN","ECUERPC",235,0)
 . . S:$P(NODE,U,19) ASC=$$GET1^DIQ(44,$P(NODE,U,19),.01,"I")
"RTN","ECUERPC",236,0)
 . . S:PDX PDXD=$$ICDDX^ICDCODE(PDX,PDT),PDXD=$P(PDXD,U,2)_" "_$P(PDXD,U,4)
"RTN","ECUERPC",237,0)
 . . S DATA=$P(NODE,U)_U_$$FMTE^XLFDT($P(NODE,U,3),"2F")_U_CAT_U_PX
"RTN","ECUERPC",238,0)
 . . S DATA=DATA_U_$P(NODE,U,10)_U_PRV_U_ORS_U_ASC_U_PDXD_U_$P(NODE,U,11)
"RTN","ECUERPC",239,0)
 . . S CNT=CNT+1,^TMP($J,"ECPATPX",CNT)=DATA
"RTN","ECUERPC",240,0)
 S RESULTS=$NA(^TMP($J,"ECPATPX"))
"RTN","ECUERPC",241,0)
 Q
"RTN","ECUERPC",242,0)
PARSE(ECV,ECARY) ;Parse Variable
"RTN","ECUERPC",243,0)
 N I
"RTN","ECUERPC",244,0)
 F I=1:1:$L(ECARY,U) S @$P(ECV,U,I)=$P(ECARY,U,I)
"RTN","ECUERPC",245,0)
 Q
"RTN","ECUERPC1")
0^6^B55231134
"RTN","ECUERPC1",1,0)
ECUERPC1 ;ALB/JAM;Event Capture Data Entry Broker Util ; 5/21/01 7:30pm
"RTN","ECUERPC1",2,0)
 ;;2.0; EVENT CAPTURE ;**25,33,42,46,47**;8 May 96
"RTN","ECUERPC1",3,0)
PATINF(RESULTS,ECARY) ;
"RTN","ECUERPC1",4,0)
 ;
"RTN","ECUERPC1",5,0)
 ;Broker entry point to get various types of data from EVENT CAPTURE 
"RTN","ECUERPC1",6,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",7,0)
 ;        RPC: EC GETPATINFO
"RTN","ECUERPC1",8,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUERPC1",9,0)
 ;          ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",10,0)
 ;          ECTYP - Data type to return
"RTN","ECUERPC1",11,0)
 ;
"RTN","ECUERPC1",12,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient data
"RTN","ECUERPC1",13,0)
 ;          
"RTN","ECUERPC1",14,0)
 ;
"RTN","ECUERPC1",15,0)
 N ECTYP,ECIEN
"RTN","ECUERPC1",16,0)
 S ECARY=$G(ECARY),ECIEN=$P(ECARY,U),ECTYP=$P(ECARY,U,2) I ECIEN="" Q
"RTN","ECUERPC1",17,0)
 I '$D(^ECH(ECIEN)) Q
"RTN","ECUERPC1",18,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",19,0)
 I ECTYP="DXS" D PATDXS(ECIEN) Q
"RTN","ECUERPC1",20,0)
 I ECTYP="MOD" D PATMOD(ECIEN) Q
"RTN","ECUERPC1",21,0)
 I ECTYP="CLASS" D PATCLASS(ECIEN) Q
"RTN","ECUERPC1",22,0)
 I ECTYP="OTH" D PATOTH(ECIEN) Q
"RTN","ECUERPC1",23,0)
 Q
"RTN","ECUERPC1",24,0)
PATDXS(ECIEN) ;
"RTN","ECUERPC1",25,0)
 ;
"RTN","ECUERPC1",26,0)
 ;Returns to broker a patient secondary DXs entries from EVENT 
"RTN","ECUERPC1",27,0)
 ;CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",28,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",29,0)
 ;
"RTN","ECUERPC1",30,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient file contains
"RTN","ECUERPC1",31,0)
 ;          721 IEN^secondary dx ien #80^secondary dx code^dx desription
"RTN","ECUERPC1",32,0)
 ;
"RTN","ECUERPC1",33,0)
 N DXS,DXSIEN,DXSD,CNT
"RTN","ECUERPC1",34,0)
 I '$D(^ECH(ECIEN,"DX")) Q
"RTN","ECUERPC1",35,0)
 K ^TMP($J,"ECDXS")
"RTN","ECUERPC1",36,0)
 S (CNT,DXS)=0 F  S DXS=$O(^ECH(ECIEN,"DX",DXS)) Q:'DXS  D
"RTN","ECUERPC1",37,0)
 . S DXSIEN=$G(^ECH(ECIEN,"DX",DXS,0)) I DXSIEN="" Q
"RTN","ECUERPC1",38,0)
 . S DXSD=$$ICDDX^ICDCODE(DXSIEN,$P($G(^ECH(ECIEN,0)),U,3))
"RTN","ECUERPC1",39,0)
 . S DXSD=$P(DXSD,U,2)_"   "_$P(DXSD,U,4)
"RTN","ECUERPC1",40,0)
 . S CNT=CNT+1,^TMP($J,"ECDXS",CNT)=ECIEN_U_DXSIEN_U_DXSD
"RTN","ECUERPC1",41,0)
 S RESULTS=$NA(^TMP($J,"ECDXS"))
"RTN","ECUERPC1",42,0)
 Q
"RTN","ECUERPC1",43,0)
PATMOD(ECIEN) ;
"RTN","ECUERPC1",44,0)
 ;
"RTN","ECUERPC1",45,0)
 ;Returns to broker a patient procedure modifier from EVENT CAPTURE
"RTN","ECUERPC1",46,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",47,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",48,0)
 ;
"RTN","ECUERPC1",49,0)
 ;OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",50,0)
 ;          721 IEN^modifier ien #81.3^modifier^modifier name
"RTN","ECUERPC1",51,0)
 ;
"RTN","ECUERPC1",52,0)
 N MOD,MODIEN,CNT,MODS
"RTN","ECUERPC1",53,0)
 I '$D(^ECH(ECIEN,"MOD")) Q
"RTN","ECUERPC1",54,0)
 K ^TMP($J,"ECMOD")
"RTN","ECUERPC1",55,0)
 S (CNT,MOD)=0 F  S MOD=$O(^ECH(ECIEN,"MOD",MOD)) Q:'MOD  D
"RTN","ECUERPC1",56,0)
 . S MODIEN=$G(^ECH(ECIEN,"MOD",MOD,0)) I MODIEN="" Q
"RTN","ECUERPC1",57,0)
 . S MODS=$$MOD^ICPTMOD(MODIEN,"I",$P($G(^ECH(ECIEN,0)),U,3)) I +MODS<0 Q
"RTN","ECUERPC1",58,0)
 . S CNT=CNT+1
"RTN","ECUERPC1",59,0)
 . S ^TMP($J,"ECMOD",CNT)=ECIEN_U_$P(MODS,U,1,2)_"  "_$P(MODS,U,3)
"RTN","ECUERPC1",60,0)
 S RESULTS=$NA(^TMP($J,"ECMOD"))
"RTN","ECUERPC1",61,0)
 Q
"RTN","ECUERPC1",62,0)
PATCLASS(ECIEN) ;
"RTN","ECUERPC1",63,0)
 ;
"RTN","ECUERPC1",64,0)
 ;Returns to broker a patient classification & eligibility data from 
"RTN","ECUERPC1",65,0)
 ;EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",66,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",67,0)
 ;
"RTN","ECUERPC1",68,0)
 ;OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",69,0)
 ;          721 IEN^agent orange^radiation exposure^service connected^
"RTN","ECUERPC1",70,0)
 ;          environmental contaminants^military sexual trauma^
"RTN","ECUERPC1",71,0)
 ;          eligibility code #8^eligibility description^Head/Neck Cancer
"RTN","ECUERPC1",72,0)
 ;
"RTN","ECUERPC1",73,0)
 N CLA,ELIG,ELCOD,CLA,ECAO,ECIR,ECEC,ECSC,ECMST,STR,ECHNC
"RTN","ECUERPC1",74,0)
 I '$D(^ECH(ECIEN,"P")),'$D(^ECH(ECIEN,"PCE")) Q
"RTN","ECUERPC1",75,0)
 K ^TMP($J,"ECLASS")
"RTN","ECUERPC1",76,0)
 S ELIG=$P($G(^ECH(ECIEN,"PCE")),"~",17),ELCOD=""
"RTN","ECUERPC1",77,0)
 S:ELIG'="" ELCOD=$P($G(^DIC(8,ELIG,0)),U)
"RTN","ECUERPC1",78,0)
 S CLA=$G(^ECH(ECIEN,"P")),ECAO=$P(CLA,U,3),ECIR=$P(CLA,U,4)
"RTN","ECUERPC1",79,0)
 S ECEC=$P(CLA,U,5),ECSC=$P(CLA,U,6),ECMST=$P(CLA,U,9),ECHNC=$P(CLA,U,10)
"RTN","ECUERPC1",80,0)
 S STR=ECIEN_U_ECAO_U_ECIR_U_ECSC_U_ECEC_U_ECMST_U_ELIG_U_ELCOD_U_ECHNC
"RTN","ECUERPC1",81,0)
 S ^TMP($J,"ECLASS",1)=STR,RESULTS=$NA(^TMP($J,"ECLASS"))
"RTN","ECUERPC1",82,0)
 Q
"RTN","ECUERPC1",83,0)
PATOTH(ECIEN) ;
"RTN","ECUERPC1",84,0)
 ;
"RTN","ECUERPC1",85,0)
 ;Returns to broker a patient remaining data from EVENT CAPTURE
"RTN","ECUERPC1",86,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",87,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",88,0)
 ;
"RTN","ECUERPC1",89,0)
 ;OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",90,0)
 ;          721 IEN^procedure reason^provider #2^provider #3
"RTN","ECUERPC1",91,0)
 ;          ^provider #2 IEN^provider #3 IEN
"RTN","ECUERPC1",92,0)
 ;
"RTN","ECUERPC1",93,0)
 N REAS,PRV2,PRV3,ECX
"RTN","ECUERPC1",94,0)
 K ^TMP($J,"ECOTH")
"RTN","ECUERPC1",95,0)
 S ECX=^ECH(ECIEN,0)
"RTN","ECUERPC1",96,0)
 S REAS=$$GET1^DIQ(721,ECIEN,34,"E")
"RTN","ECUERPC1",97,0)
 S PRV2=$$GET1^DIQ(721,ECIEN,15,"E")
"RTN","ECUERPC1",98,0)
 S PRV3=$$GET1^DIQ(721,ECIEN,17,"E")
"RTN","ECUERPC1",99,0)
 S ^TMP($J,"ECOTH",1)=REAS_U_PRV2_U_PRV3_U_$P(ECX,U,15)_U_$P(ECX,U,17)
"RTN","ECUERPC1",100,0)
 S RESULTS=$NA(^TMP($J,"ECOTH"))
"RTN","ECUERPC1",101,0)
 Q
"RTN","ECUERPC1",102,0)
PATCLAST(RESULTS,ECARY) ;
"RTN","ECUERPC1",103,0)
 ;
"RTN","ECUERPC1",104,0)
 ;Returns to broker a patient status (in/out) and classification
"RTN","ECUERPC1",105,0)
 ;     RPC: EC GETPATCLASTAT
"RTN","ECUERPC1",106,0)
 ;INPUTS  ECARY  - Contains the following subscripted elements  
"RTN","ECUERPC1",107,0)
 ;         ECDFN - Patient ien (#2)
"RTN","ECUERPC1",108,0)
 ;         ECD   - DSS Unit ien (#724)
"RTN","ECUERPC1",109,0)
 ;         ECDT  - Procedure date and time (fileman format)
"RTN","ECUERPC1",110,0)
 ;
"RTN","ECUERPC1",111,0)
 ;OUTPUTS  RESULTS - Patient status and classifications delimited by (^)
"RTN","ECUERPC1",112,0)
 ;         Patient Status: I for inpatient or O for outpatient
"RTN","ECUERPC1",113,0)
 ;         Classification: 2- Agent Orange, 3- Ionizing Radiation
"RTN","ECUERPC1",114,0)
 ;                         4- SC Condition, 5- Environmental Contaminants
"RTN","ECUERPC1",115,0)
 ;                         6- Military Sexual Trauma
"RTN","ECUERPC1",116,0)
 ;                         7- Head/Neck Cancer
"RTN","ECUERPC1",117,0)
 ;         Data after the '~' refers to those class. that must be asked 
"RTN","ECUERPC1",118,0)
 ;         by Delphi appl. when the answer to SC=No.
"RTN","ECUERPC1",119,0)
 ;         Data after "~"  1- Agent Orange  2- Ionizing Radiation
"RTN","ECUERPC1",120,0)
 ;                         3- Environmental Contaminants
"RTN","ECUERPC1",121,0)
 N ECDFN,ECDT,ECX,I,ECCLARY,SCDAT,PATSTAT
"RTN","ECUERPC1",122,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",123,0)
 S ECDFN=$P(ECARY,U),ECD=$P(ECARY,U,2),ECDT=$P(ECARY,U,3)
"RTN","ECUERPC1",124,0)
 I ECDT="" D NOW^%DTC S ECDT=%
"RTN","ECUERPC1",125,0)
 Q:ECDFN=""  S (RESULTS,SCDAT)=""
"RTN","ECUERPC1",126,0)
 S PATSTAT=$$INOUTPT^ECUTL0(ECDFN,ECDT),RESULTS="^^^^^",SCDAT=";;;"
"RTN","ECUERPC1",127,0)
 I '$$CHKDSS^ECUTL0(+$G(ECD),PATSTAT) D  Q
"RTN","ECUERPC1",128,0)
 .S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"")
"RTN","ECUERPC1",129,0)
 D CL^SDCO21(ECDFN,ECDT,"",.ECCLARY)
"RTN","ECUERPC1",130,0)
 F ECX=3,1,2,4,5,6 D
"RTN","ECUERPC1",131,0)
 .I ECX=1,$P($G(^DPT(ECDFN,.321)),"^",2)'="Y" Q
"RTN","ECUERPC1",132,0)
 .I ECX=2,$P($G(^DPT(ECDFN,.321)),"^",3)'="Y" Q
"RTN","ECUERPC1",133,0)
 .I ECX=4,$P($G(^DPT(ECDFN,.322)),"^",13)'="Y",'$$EC^SDCO22(ECDFN,"") Q
"RTN","ECUERPC1",134,0)
 .I ECX=3,$D(ECCLARY(ECX)) F I=1,2,4 S ECCLARY(I)="SC"
"RTN","ECUERPC1",135,0)
 .I '$D(ECCLARY(ECX)) Q
"RTN","ECUERPC1",136,0)
 .;Check SC, if answer to SC is NO then these questions will be asked
"RTN","ECUERPC1",137,0)
 .I ECCLARY(ECX)="SC" S $P(SCDAT,";",ECX)="E"
"RTN","ECUERPC1",138,0)
 .E  S $P(RESULTS,"^",ECX)="E"
"RTN","ECUERPC1",139,0)
 S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"")
"RTN","ECUERPC1",140,0)
 Q
"RTN","ECUERPC1",141,0)
ENCDXS(RESULTS,ECARY) ;
"RTN","ECUERPC1",142,0)
 ;
"RTN","ECUERPC1",143,0)
 ;Broker call returns a patient encounter primary & secondary dx (#721)
"RTN","ECUERPC1",144,0)
 ;     RPC: EC GETENCDXS
"RTN","ECUERPC1",145,0)
 ;INPUTS   ECDFN - Patient ien (#2)
"RTN","ECUERPC1",146,0)
 ;         ECDT  - Procedure date and time (fileman format)
"RTN","ECUERPC1",147,0)
 ;         ECL   - Location ien
"RTN","ECUERPC1",148,0)
 ;         EC4   - Clinic ien
"RTN","ECUERPC1",149,0)
 ;
"RTN","ECUERPC1",150,0)
 ;OUTPUTS  RESULTS - array of patient encounter diagnosis
"RTN","ECUERPC1",151,0)
 ;         primary/secondary flag^DX ien^DX code  DX description.
"RTN","ECUERPC1",152,0)
 ;
"RTN","ECUERPC1",153,0)
 N ECDFN,ECDT,ECL,EC4,ECPDX,ECDX,ECDXN,ECDXS,CNT,STR,ECPDX,SDXCNT
"RTN","ECUERPC1",154,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",155,0)
 K ^TMP($J,"ECENCDXS")
"RTN","ECUERPC1",156,0)
 S ECDFN=$P(ECARY,U),ECDT=+$P(ECARY,U,2),ECL=$P(ECARY,U,3)
"RTN","ECUERPC1",157,0)
 S EC4=$P(ECARY,U,4) I ECDT="" D NOW^%DTC S ECDT=%
"RTN","ECUERPC1",158,0)
 I ECDFN=""!(ECL="")!(EC4="") Q
"RTN","ECUERPC1",159,0)
 S (ECDX,ECDXN)="",ECPDX=$$PDXCK^ECUTL2(ECDFN,ECDT,ECL,EC4) I ECDX="" Q
"RTN","ECUERPC1",160,0)
 S IEN=0,STR=1_U_ECDX_U_ECDXN_"   "_$P($$ICDDX^ICDCODE(ECDX,ECDT),U,4)
"RTN","ECUERPC1",161,0)
 S CNT=1,^TMP($J,"ECENCDXS",CNT)=STR
"RTN","ECUERPC1",162,0)
 ;*ACS concat description to 2nd diag code, in the order entered by the user
"RTN","ECUERPC1",163,0)
 F  S IEN=$O(ECDXS(IEN)) Q:'IEN  D
"RTN","ECUERPC1",164,0)
 . S CNT=CNT+1,^TMP($J,"ECENCDXS",CNT)=0_U_ECDXS(IEN)_U_IEN_"   "_$P($$ICDDX^ICDCODE(ECDXS(IEN),ECDT),U,4)
"RTN","ECUERPC1",165,0)
 S RESULTS=$NA(^TMP($J,"ECENCDXS"))
"RTN","ECUERPC1",166,0)
 Q
"RTN","ECUERPC1",167,0)
 ;
"RTN","ECUERPC1",168,0)
PROCBAT(RESULTS,ECARY) ;
"RTN","ECUERPC1",169,0)
 ;
"RTN","ECUERPC1",170,0)
 ;Broker call returns the entries from EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",171,0)
 ;for patients for a specific procedure
"RTN","ECUERPC1",172,0)
 ;        RPC: EC GETBATPROCS
"RTN","ECUERPC1",173,0)
 ;INPUTS   ECARY - Contains the following subscripted elements
"RTN","ECUERPC1",174,0)
 ;          ECLOC - Location ien
"RTN","ECUERPC1",175,0)
 ;          ECUNT - DSS unit ien
"RTN","ECUERPC1",176,0)
 ;          ECC   - Category ien
"RTN","ECUERPC1",177,0)
 ;          ECP   - Procedure ien
"RTN","ECUERPC1",178,0)
 ;          ECSD  - Start Date
"RTN","ECUERPC1",179,0)
 ;          ECED  - End Date
"RTN","ECUERPC1",180,0)
 ;
"RTN","ECUERPC1",181,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient data containing:-
"RTN","ECUERPC1",182,0)
 ;          721 IEN^Patient name^Procedure Date/Time^Primary Dx
"RTN","ECUERPC1",183,0)
 ;          ^Ordering Section^Associated Clinic
"RTN","ECUERPC1",184,0)
 ;^SSN^DOB^Procedure Date and Time
"RTN","ECUERPC1",185,0)
 N IEN,CNT,ECLOC,ECUNT,NODE,DATA,PXDT,ECV,ECC,ECP,ECSD,ECED,DATE,DFN
"RTN","ECUERPC1",186,0)
 N CAT,ECI,VADM,ORC,ASC,ECDX
"RTN","ECUERPC1",187,0)
 S ECV="ECLOC^ECUNT^ECC^ECP^ECSD^ECED"
"RTN","ECUERPC1",188,0)
 D PARSE^ECUERPC(ECV,ECARY)
"RTN","ECUERPC1",189,0)
 I (ECLOC="")!(ECUNT="")!(ECC="")!(ECP="") Q
"RTN","ECUERPC1",190,0)
 D SETENV^ECUMRPC K ^TMP($J,"ECBATPX") S CNT=0
"RTN","ECUERPC1",191,0)
 S %DT="STX" F ECI="ECSD","ECED" S X=@ECI D ^%DT S @ECI=Y
"RTN","ECUERPC1",192,0)
 S ECSD=$S(ECSD=-1:DT,1:ECSD)-.0001,ECED=$S(ECED=-1:DT,1:ECED)+.9999
"RTN","ECUERPC1",193,0)
 Q:ECED'>ECSD  S DATE=ECSD
"RTN","ECUERPC1",194,0)
 F  S DATE=$O(^ECH("AC1",ECLOC,DATE)) Q:'DATE!(DATE>ECED)  S IEN=0 D
"RTN","ECUERPC1",195,0)
 . F  S IEN=$O(^ECH("AC1",ECLOC,DATE,IEN)) Q:'IEN  D
"RTN","ECUERPC1",196,0)
 . . S NODE=$G(^ECH(IEN,0))  Q:NODE=""  Q:$P(NODE,U,7)'=ECUNT
"RTN","ECUERPC1",197,0)
 . . Q:$P(NODE,U,8)'=ECC  Q:$P(NODE,U,9)'=ECP
"RTN","ECUERPC1",198,0)
 . . S ECDX=$P($G(^ECH(IEN,"P")),U,2) I ECDX'="" D
"RTN","ECUERPC1",199,0)
 . . . S ECDX=$$ICDDX^ICDCODE(ECDX,DATE)
"RTN","ECUERPC1",200,0)
 . . . S ECDX=$P(ECDX,U,2)_"  "_$P(ECDX,U,4)
"RTN","ECUERPC1",201,0)
 . . S ASC=$P(NODE,U,19) S:ASC'="" ASC=$$GET1^DIQ(44,ASC,.01,"I")
"RTN","ECUERPC1",202,0)
 . . S ORC=$P(NODE,U,12) S:ORC'="" ORC=$$GET1^DIQ(723,ORC,.01,"I")
"RTN","ECUERPC1",203,0)
 . . S Y=DATE X ^DD("DD") S PXDT=Y,DFN=$P(NODE,U,2) D DEM^VADPT
"RTN","ECUERPC1",204,0)
 . . S DATA=$E(VADM(1),1,30)_U_PXDT_U_ECDX_U_ORC_U_ASC
"RTN","ECUERPC1",205,0)
 . . S CNT=CNT+1,^TMP($J,"ECBATPX",CNT)=IEN_U_DATA
"RTN","ECUERPC1",206,0)
 S RESULTS=$NA(^TMP($J,"ECBATPX"))
"RTN","ECUERPC1",207,0)
 Q
"RTN","ECUERPC1",208,0)
 ;
"RTN","ECUERPC1",209,0)
CLHLP(RESULTS,ECARY) ;RPC Broker entry point for classification help
"RTN","ECUERPC1",210,0)
 ;        RPC: EC CLASHELP
"RTN","ECUERPC1",211,0)
 ;INPUTS   ECARY - Contains the following elements for report printing
"RTN","ECUERPC1",212,0)
 ;          ECDFN  - Patient DFN from file (#2)
"RTN","ECUERPC1",213,0)
 ;          ECKY   - Key to provide help on
"RTN","ECUERPC1",214,0)
 ;
"RTN","ECUERPC1",215,0)
 ;OUTPUTS  RESULTS - Array of help text for classification
"RTN","ECUERPC1",216,0)
 ;
"RTN","ECUERPC1",217,0)
 N ECFILER,ECERR,ECDIRY,ECUFILE,ECDFN,ECKY,ECHNDL
"RTN","ECUERPC1",218,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",219,0)
 K ^TMP("ECMSG",$J)
"RTN","ECUERPC1",220,0)
 S ECERR=0,ECDFN=$P(ECARY,U),ECKY=$P(ECARY,U,2) D  I ECERR D CLEND Q
"RTN","ECUERPC1",221,0)
 .I ECDFN="" S ECERR=1,^TMP("ECMSG",$J,1)="0^Patient IEN not defined" Q
"RTN","ECUERPC1",222,0)
 .I ECKY="" S ECERR=1,^TMP("ECMSG",$J,1)="0^Help Key not defined" Q
"RTN","ECUERPC1",223,0)
 .S DIC=2,DIC(0)="NMZX",X=ECDFN D ^DIC I Y<0 D
"RTN","ECUERPC1",224,0)
 ..S ECERR=1,^TMP("ECMSG",$J,1)="0^Patient IEN not found"
"RTN","ECUERPC1",225,0)
 S ECHNDL="ECLASHLP" D HFSOPEN^ECRRPC(ECHNDL) I ECERR D CLEND Q
"RTN","ECUERPC1",226,0)
 U IO
"RTN","ECUERPC1",227,0)
 I ECKY="SC" D SC^SDCO23(ECDFN)
"RTN","ECUERPC1",228,0)
 D HFSCLOSE^ECRRPC(ECFILER)
"RTN","ECUERPC1",229,0)
CLEND ;
"RTN","ECUERPC1",230,0)
 I $D(^TMP("ECMSG",$J)) S RESULTS=$NA(^TMP("ECMSG",$J)) Q
"RTN","ECUERPC1",231,0)
 S RESULTS=$NA(^TMP($J))
"RTN","ECUERPC1",232,0)
 Q
"RTN","ECUERPC1",233,0)
ECDEF(RESULTS,ECARY) ;RPC Broker entry point to get a default for space bar
"RTN","ECUERPC1",234,0)
 ;        RPC: EC SPACEBAR
"RTN","ECUERPC1",235,0)
 ;INPUTS   ECARY - Contains the following elements for report printing
"RTN","ECUERPC1",236,0)
 ;          ECFILE - File to obtain value from
"RTN","ECUERPC1",237,0)
 ;
"RTN","ECUERPC1",238,0)
 ;OUTPUTS  RESULTS - IEN^Description of Text
"RTN","ECUERPC1",239,0)
 ;
"RTN","ECUERPC1",240,0)
 N DIC,ECFILE,X,Y
"RTN","ECUERPC1",241,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",242,0)
 S ECFILE=$P(ECARY,U)
"RTN","ECUERPC1",243,0)
 I ECFILE="" S ECERR=1,RESULTS="0^File not defined" Q
"RTN","ECUERPC1",244,0)
 S X=" ",DIC(0)="MZX",DIC=ECFILE D ^DIC I Y<0 D  I ECERR Q
"RTN","ECUERPC1",245,0)
 . S ECERR=1,RESULTS="0^Nothing found"
"RTN","ECUERPC1",246,0)
 S RESULTS=Y
"RTN","ECUERPC1",247,0)
 Q
"RTN","ECUMRPC2")
0^5^B18491432
"RTN","ECUMRPC2",1,0)
ECUMRPC2 ;ALB/JAM;Event Capture Management Broker Utils ; 10/4/00 4:58pm
"RTN","ECUMRPC2",2,0)
 ;;2.0; EVENT CAPTURE ;**25,30,42,46,47**;8 May 96
"RTN","ECUMRPC2",3,0)
GLOC(RESULTS,ECARY) ;
"RTN","ECUMRPC2",4,0)
 ;
"RTN","ECUMRPC2",5,0)
 ;This broker entry point returns all active Event Capture locations
"RTN","ECUMRPC2",6,0)
 ;        RPC: EC GETLOC
"RTN","ECUMRPC2",7,0)
 ;INPUTS         ECARY - Contains the following subscripted elements
"RTN","ECUMRPC2",8,0)
 ;               STAT   - Active or inactive locations (optional)
"RTN","ECUMRPC2",9,0)
 ;               A-ctive (default), I-nactive, B-oth
"RTN","ECUMRPC2",10,0)
 ;
"RTN","ECUMRPC2",11,0)
 ;OUTPUTS        RESULTS - The array of active Event Capture locations.
"RTN","ECUMRPC2",12,0)
 ;               PIECE - Description
"RTN","ECUMRPC2",13,0)
 ;                 1     Location IEN
"RTN","ECUMRPC2",14,0)
 ;                 2     LOC description
"RTN","ECUMRPC2",15,0)
 ;                 3     State Abbreviation
"RTN","ECUMRPC2",16,0)
 ;                 4     Current Location Flag
"RTN","ECUMRPC2",17,0)
 ;                 5     Facility Type
"RTN","ECUMRPC2",18,0)
 ;                 6     Station Number
"RTN","ECUMRPC2",19,0)
 N LOC,STAT,CNT,CLOC,ST,NODE,ACT,ECLOC,ELOC,ECFT,ECSN
"RTN","ECUMRPC2",20,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC2",21,0)
 K ^TMP($J,"ECLOCATION")
"RTN","ECUMRPC2",22,0)
 S STAT=$P($G(ECARY),U),(CNT,LOC)=0,ACT=0 S:STAT="" STAT="A"
"RTN","ECUMRPC2",23,0)
 D GETLOC^ECL(.ECLOC)
"RTN","ECUMRPC2",24,0)
 F  S LOC=$O(ECLOC(LOC)) Q:'LOC  S ELOC($P(ECLOC(LOC),U,2))=""
"RTN","ECUMRPC2",25,0)
 S LOC=0
"RTN","ECUMRPC2",26,0)
 F  S LOC=$O(^DIC(4,LOC)) Q:'LOC  S NODE=$G(^DIC(4,LOC,0)) I NODE'="" D
"RTN","ECUMRPC2",27,0)
 . I $P(NODE,U)="" Q
"RTN","ECUMRPC2",28,0)
 . I ($P(NODE,U,11)="I")!($P($G(^DIC(4,LOC,99)),U,4)) S ACT=1
"RTN","ECUMRPC2",29,0)
 . I $S(STAT="A"&(ACT):1,STAT="I"&('ACT):1,1:0) Q
"RTN","ECUMRPC2",30,0)
 . S CLOC=$D(ELOC(LOC)),CLOC=$S(CLOC:"YES",1:"")
"RTN","ECUMRPC2",31,0)
 . S CNT=CNT+1,ST=$P(NODE,U,2) S:ST'="" ST=$$GET1^DIQ(5,ST,1,"I")
"RTN","ECUMRPC2",32,0)
 . S ECFT=$P($G(^DIC(4.1,+$G(^DIC(4,LOC,3)),0)),U)
"RTN","ECUMRPC2",33,0)
 . S ECSN=$P($G(^DIC(4,LOC,99)),U)
"RTN","ECUMRPC2",34,0)
 . S ^TMP($J,"ECLOCATION",CNT)=LOC_U_$P(NODE,U)_U_ST_U_CLOC_U_ECFT_U_ECSN
"RTN","ECUMRPC2",35,0)
 S RESULTS=$NA(^TMP($J,"ECLOCATION"))
"RTN","ECUMRPC2",36,0)
 Q
"RTN","ECUMRPC2",37,0)
CPTFND(RESULTS,ECARY) ;
"RTN","ECUMRPC2",38,0)
 ;
"RTN","ECUMRPC2",39,0)
 ;This broker entry point does a search on a CPT string and returns
"RTN","ECUMRPC2",40,0)
 ;a list of matches from file #81
"RTN","ECUMRPC2",41,0)
 ;        RPC: EC GETCPTLST
"RTN","ECUMRPC2",42,0)
 ;INPUTS      ECARY   - Contains the following subscripted elements
"RTN","ECUMRPC2",43,0)
 ;             CPTSTR - CPT search string
"RTN","ECUMRPC2",44,0)
 ;
"RTN","ECUMRPC2",45,0)
 ;OUTPUTS     RESULTS - The array of cpt codes. Data pieces as follows:-
"RTN","ECUMRPC2",46,0)
 ;             CPT ien^CPT code^Name
"RTN","ECUMRPC2",47,0)
 ;
"RTN","ECUMRPC2",48,0)
 N CPTSTR,ECNT,DIC,ECTG,ECER
"RTN","ECUMRPC2",49,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC2",50,0)
 S CPTSTR=$P(ECARY,U),ECNT=0 I CPTSTR="" Q
"RTN","ECUMRPC2",51,0)
 K ^TMP($J,"ECPTSRCH"),^TMP("ECCPT",$J)
"RTN","ECUMRPC2",52,0)
 D CPTSRH(81,CPTSTR)
"RTN","ECUMRPC2",53,0)
 F  S ECNT=$O(^TMP("ECCPT",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC2",54,0)
 .S ^TMP($J,"ECPTSRCH",ECNT)=$G(^TMP("ECCPT",$J,"DILIST",2,ECNT))_U_^TMP("ECCPT",$J,"DILIST","ID",ECNT,.01)_U_^TMP("ECCPT",$J,"DILIST","ID",ECNT,2)
"RTN","ECUMRPC2",55,0)
 K ^TMP("ECCPT",$J)
"RTN","ECUMRPC2",56,0)
 S RESULTS=$NA(^TMP($J,"ECPTSRCH"))
"RTN","ECUMRPC2",57,0)
 Q
"RTN","ECUMRPC2",58,0)
 ;
"RTN","ECUMRPC2",59,0)
PXFND(RESULTS,ECARY) ;
"RTN","ECUMRPC2",60,0)
 ;
"RTN","ECUMRPC2",61,0)
 ;This broker entry point does a search on a procedure string and returns
"RTN","ECUMRPC2",62,0)
 ;a list of matches from file #81 and/or #725
"RTN","ECUMRPC2",63,0)
 ;        RPC: EC GETPXLST
"RTN","ECUMRPC2",64,0)
 ;INPUTS      ECARY   - Contains the following subscripted elements
"RTN","ECUMRPC2",65,0)
 ;             PXSTR -  Procedure search string
"RTN","ECUMRPC2",66,0)
 ;
"RTN","ECUMRPC2",67,0)
 ;OUTPUTS     RESULTS - The array of procedures. Data pieces as follows:-
"RTN","ECUMRPC2",68,0)
 ;             Procedure ien^Procedure code  Procedure Name
"RTN","ECUMRPC2",69,0)
 ;
"RTN","ECUMRPC2",70,0)
 N CPTSTR,ECNT,DIC,ECX,CNT,ECTG,ECER,PXSTR,ECSTR
"RTN","ECUMRPC2",71,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC2",72,0)
 S PXSTR=$P(ECARY,U),ECNT=0 I PXSTR="" Q
"RTN","ECUMRPC2",73,0)
 K ^TMP($J,"ECPXSRCH"),^TMP("ECCPT",$J),^TMP("ECCPT1",$J)
"RTN","ECUMRPC2",74,0)
 D 
"RTN","ECUMRPC2",75,0)
 . I $P(PXSTR,".")="A" D CPTSRH(81,$P(PXSTR,".",2)) Q
"RTN","ECUMRPC2",76,0)
 . I $P(PXSTR,".")="B" D CPTSRH(725,$P(PXSTR,".",2)) Q
"RTN","ECUMRPC2",77,0)
 . F ECX=81,725 D CPTSRH(ECX,PXSTR)
"RTN","ECUMRPC2",78,0)
 F  S ECNT=$O(^TMP("ECCPT",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC2",79,0)
 .S ECID=$G(^TMP("ECCPT",$J,"DILIST",2,ECNT))_";ICPT("
"RTN","ECUMRPC2",80,0)
 .S ECSTR=^TMP("ECCPT",$J,"DILIST","ID",ECNT,.01)_"  "_^(2)
"RTN","ECUMRPC2",81,0)
 .S ^TMP($J,"ECPXSRCH",ECNT)=ECID_U_ECSTR
"RTN","ECUMRPC2",82,0)
 S ECNT=0,CNT=+$O(^TMP($J,"ECPXSRCH","A"),-1)
"RTN","ECUMRPC2",83,0)
 F  S ECNT=$O(^TMP("ECCPT1",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC2",84,0)
 .S CNT=CNT+1,ECID=$G(^TMP("ECCPT1",$J,"DILIST",2,ECNT))_";EC(725,"
"RTN","ECUMRPC2",85,0)
 .S ECSTR=^TMP("ECCPT1",$J,"DILIST","ID",ECNT,1)_"  "_^(.01)
"RTN","ECUMRPC2",86,0)
 .S ^TMP($J,"ECPXSRCH",CNT)=ECID_U_ECSTR  ;$G(^TMP("ECCPT1",$J,"DILIST",1,ECNT))
"RTN","ECUMRPC2",87,0)
 K ^TMP("ECCPT",$J),^TMP("ECCPT1",$J)
"RTN","ECUMRPC2",88,0)
 S RESULTS=$NA(^TMP($J,"ECPXSRCH"))
"RTN","ECUMRPC2",89,0)
 Q
"RTN","ECUMRPC2",90,0)
CPTSRH(FILE,CPTSTR) ;Searches either file 81 or 725 for a CPT string
"RTN","ECUMRPC2",91,0)
 I FILE=81 D
"RTN","ECUMRPC2",92,0)
 .D FINDIC(81,"",".01;2","M",CPTSTR,100,"","I $P($$CPT^ICPTCOD(+Y),""^"",7)","","^TMP(""ECCPT"",$J)")
"RTN","ECUMRPC2",93,0)
 I FILE=725 D
"RTN","ECUMRPC2",94,0)
 .D FINDIC(725,"",".01;1","M",CPTSTR,100,"","I '$P(^(0),""^"",3)","","^TMP(""ECCPT1"",$J)")
"RTN","ECUMRPC2",95,0)
 Q
"RTN","ECUMRPC2",96,0)
FINDIC(ECFL,ECIEN,ECFLD,ECFLG,ECVAL,ECN,ECINDX,ECSCN,ECID,ECTG,ECER) ;
"RTN","ECUMRPC2",97,0)
 ;Find records in a file base on search string
"RTN","ECUMRPC2",98,0)
 S ECER=$G(ECER)
"RTN","ECUMRPC2",99,0)
 D FIND^DIC(ECFL,ECIEN,ECFLD,ECFLG,ECVAL,ECN,ECINDX,ECSCN,ECID,ECTG,ECER)
"RTN","ECUMRPC2",100,0)
 K ECFL,ECIEN,ECFLD,ECFLG,ECVAL,ECN,ECINDX,ECSCN,ECID
"RTN","ECUMRPC2",101,0)
 Q
"RTN","ECUMRPC2",102,0)
PROV ;Return a set of providers from the NEW PERSON file
"RTN","ECUMRPC2",103,0)
 ;Input Variables:-
"RTN","ECUMRPC2",104,0)
 ;  FROM   - text to $O from
"RTN","ECUMRPC2",105,0)
 ;  DATE   - checks for an active person class on this date (optional)
"RTN","ECUMRPC2",106,0)
 ;  ECDIR  - $O direction
"RTN","ECUMRPC2",107,0)
 ;  KEY    - screen users by security key (optional)
"RTN","ECUMRPC2",108,0)
 ;
"RTN","ECUMRPC2",109,0)
 ;Output Variables:-
"RTN","ECUMRPC2",110,0)
 ;  ^TMP($J,"ECFIND",1..n - returned array
"RTN","ECUMRPC2",111,0)
 ;     IEN of file 200^Provider Name^occupation^speciality^subspeciality
"RTN","ECUMRPC2",112,0)
 ;
"RTN","ECUMRPC2",113,0)
 N I,IEN,CNT,FROM,DATE,ECUTN S I=0,CNT=44  ;KEY="PROVIDER"
"RTN","ECUMRPC2",114,0)
 S FROM=$P(ECSTR,"|"),DATE=$P(ECSTR,"|",2)
"RTN","ECUMRPC2",115,0)
 F  Q:I'<CNT  S FROM=$O(^VA(200,"B",FROM),ECDIR) Q:FROM=""  D
"RTN","ECUMRPC2",116,0)
 . S IEN="" F  S IEN=$O(^VA(200,"B",FROM,IEN),ECDIR) Q:'IEN  D 
"RTN","ECUMRPC2",117,0)
 . . ;I $L(KEY),'$D(^XUSEC(KEY,+IEN)) Q
"RTN","ECUMRPC2",118,0)
 . . ;I +$G(ALLUSERS)=0,'$$ACTIVE^XUSER(IEN) Q  ; terminated user
"RTN","ECUMRPC2",119,0)
 . . S ECUTN=$$GET^XUA4A72(IEN,DATE)
"RTN","ECUMRPC2",120,0)
 . . I DATE>0,ECUTN<1 Q
"RTN","ECUMRPC2",121,0)
 . . S I=I+1,^TMP($J,"ECFIND",I)=IEN_"^"_FROM
"RTN","ECUMRPC2",122,0)
 Q
"RTN","ECUTL")
0^1^B21782076
"RTN","ECUTL",1,0)
ECUTL ;ALB/GTS/JAM - Event Capture Utilities ;18 May 98
"RTN","ECUTL",2,0)
 ;;2.0; EVENT CAPTURE ;**10,18,47**;8 May 96
"RTN","ECUTL",3,0)
 ;
"RTN","ECUTL",4,0)
FNDVST(ECVST,ECRECNUM) ; Search EC Patient records for associated Visits
"RTN","ECUTL",5,0)
 ;
"RTN","ECUTL",6,0)
 ;   Input: ECVST    - Visit file IEN to search for
"RTN","ECUTL",7,0)
 ;          ECRECNUM - Event Capture record number to skip processing
"RTN","ECUTL",8,0)
 ;
"RTN","ECUTL",9,0)
 ;  Output: ECERR  1 - One of the records to resend lacks a zero node
"RTN","ECUTL",10,0)
 ;                 0 - All of the records to resend have zero nodes
"RTN","ECUTL",11,0)
 ;
"RTN","ECUTL",12,0)
 N ECIEN,ECERR,ECVAR
"RTN","ECUTL",13,0)
 I '$D(ECRECNUM) S ECRECNUM=0
"RTN","ECUTL",14,0)
 S (ECVAR,ECERR)=0
"RTN","ECUTL",15,0)
 S:+ECVST'>0 ECERR=1
"RTN","ECUTL",16,0)
 I ECERR=0 DO
"RTN","ECUTL",17,0)
 .S ECIEN=""
"RTN","ECUTL",18,0)
 .F  S ECIEN=$O(^ECH("C",ECVST,ECIEN)) Q:+ECIEN=0  DO
"RTN","ECUTL",19,0)
 ..S:ECRECNUM'=ECIEN ECVAR=$$RSEND(ECIEN)
"RTN","ECUTL",20,0)
 ..S:ECVAR>0 ECERR=1
"RTN","ECUTL",21,0)
FNDVSTQ Q ECERR
"RTN","ECUTL",22,0)
 ;
"RTN","ECUTL",23,0)
RSEND(ECIEN) ; Prepare EC Patient record for resending to PCE
"RTN","ECUTL",24,0)
 ;
"RTN","ECUTL",25,0)
 ;   Input:  ECIEN - IEN for record to resend to PCE
"RTN","ECUTL",26,0)
 ;
"RTN","ECUTL",27,0)
 ;  Output:  0 if successful   - EC Patient record will be resent to PCE
"RTN","ECUTL",28,0)
 ;           1 if Unsuccessful - EC Patient record lacks zero node
"RTN","ECUTL",29,0)
 ;
"RTN","ECUTL",30,0)
 N ECERR,DA,DIE,DR,ECPROCDT
"RTN","ECUTL",31,0)
 S ECERR=0
"RTN","ECUTL",32,0)
 I '$D(^ECH(ECIEN,0)) S ECERR=1
"RTN","ECUTL",33,0)
 I ECERR=0 DO
"RTN","ECUTL",34,0)
 .S ECPROCDT=$P(^ECH(ECIEN,0),"^",3)
"RTN","ECUTL",35,0)
 .S DA=ECIEN,DIE=721,DR="25///@;28///@;31///^S X=ECPROCDT;32///@"
"RTN","ECUTL",36,0)
 .D ^DIE
"RTN","ECUTL",37,0)
RSENDQ Q ECERR
"RTN","ECUTL",38,0)
MODSCN() ;Screen CPT Procedure Modifier
"RTN","ECUTL",39,0)
 N ECPT,ECCPT,ECPDT
"RTN","ECUTL",40,0)
 S ECCPT="" I $G(ECP)'="" D
"RTN","ECUTL",41,0)
 . S ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP)
"RTN","ECUTL",42,0)
 S ECPDT=$S($D(^ECH(DA,0)):$P(^ECH(DA,0),U,3),$D(ECDT):ECDT,1:"")
"RTN","ECUTL",43,0)
 S ECPT=$S($D(^ECH(DA,"P")):$P(^ECH(DA,"P"),U),ECCPT'="":ECCPT,1:"")
"RTN","ECUTL",44,0)
 I ECPT'="",+$$MODP^ICPTMOD(ECPT,+Y,"I",ECPDT)>0
"RTN","ECUTL",45,0)
 Q
"RTN","ECUTL",46,0)
ASKMOD(PROC,MOD,PRDT,ECMOD,ECERR) ; Ask CPT modifiers for CPT procedure
"RTN","ECUTL",47,0)
 ; Input           PROC  = CPT Procedure
"RTN","ECUTL",48,0)
 ;                 MOD   = Default modifier
"RTN","ECUTL",49,0)
 ;                 PRDT  = Date/Time of procedure. Checks modifier status
"RTN","ECUTL",50,0)
 ;
"RTN","ECUTL",51,0)
 ;Output           ECMOD(  array with modifiers
"RTN","ECUTL",52,0)
 ;                 ECERR = Error flag 1 - error or 0 - no error.
"RTN","ECUTL",53,0)
 ;
"RTN","ECUTL",54,0)
 N DTOUT,DUOUT,DIROUT,SUB,I,DEF,DIR,DIC,DSC,IEN,DATA,MODAR
"RTN","ECUTL",55,0)
 S ECERR=$G(ECERR,0),DEF=""
"RTN","ECUTL",56,0)
 I PROC="" S ECERR=1 G ASKMODQ
"RTN","ECUTL",57,0)
 I '$D(PRDT) S PRDT=""
"RTN","ECUTL",58,0)
 S DIC="^ICPT(",DIC(0)="N",X=PROC
"RTN","ECUTL",59,0)
 S DIC("S")="I $P($$CPT^ICPTCOD(+Y,PRDT),""^"",7)"
"RTN","ECUTL",60,0)
 D ^DIC I +Y=-1 S ECERR=1 G ASKMODQ
"RTN","ECUTL",61,0)
 ;If no modifiers present for CPT code quit
"RTN","ECUTL",62,0)
 S DATA=$$CODM^ICPTCOD(PROC,"MODAR","",PRDT)
"RTN","ECUTL",63,0)
 G:$O(MODAR(""))="" ASKMODQ K MODAR
"RTN","ECUTL",64,0)
 ;Set modifiers in ECMOD array if a valid pair (CPT code/modifier)
"RTN","ECUTL",65,0)
 S SUB="" F I=1:1 S SUB=$P(MOD,",",I) Q:SUB=""  D
"RTN","ECUTL",66,0)
 . S DATA=$$MODP^ICPTMOD(PROC,SUB,"E",PRDT)
"RTN","ECUTL",67,0)
 . I +DATA'>0 W !?2,"Modifier: ",SUB," Invalid - ",$P(DATA,U,2) Q
"RTN","ECUTL",68,0)
 . S DSC=$P(DATA,U,2),IEN=$P(DATA,U),ECMOD(PROC,SUB)=DSC_U_IEN,DEF=SUB
"RTN","ECUTL",69,0)
 ;List modifiers entered
"RTN","ECUTL",70,0)
 S SUB="" F I=1:1 S SUB=$O(ECMOD(PROC,SUB)) Q:SUB=""  D
"RTN","ECUTL",71,0)
 . W !?2,"Modifier: ",SUB," ",$P(ECMOD(PROC,SUB),U)
"RTN","ECUTL",72,0)
 I DEF'="" S DIR("B")=DEF
"RTN","ECUTL",73,0)
AGAIN N Y,X,DEFX,ECY
"RTN","ECUTL",74,0)
 S DIR("A")="Modifier",DIR("?")="^D MODHLP^ECUTL"
"RTN","ECUTL",75,0)
 S DIR(0)="FO^^I $$VALMOD^ECUTL(PROC,X,PRDT)",DEFX=""
"RTN","ECUTL",76,0)
 D ^DIR K DIR G:X="" ASKMODQ
"RTN","ECUTL",77,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIROUT)) K ECMOD(PROC) S ECERR=1 G ASKMODQ
"RTN","ECUTL",78,0)
 D  G AGAIN
"RTN","ECUTL",79,0)
 . I X="@" K:DEF'="" ECMOD(PROC,DEF) W "  ...deleted" Q
"RTN","ECUTL",80,0)
 . I '$D(ECY) Q
"RTN","ECUTL",81,0)
 . I DEF'=DEFX,DEFX'="",$D(ECMOD(PROC,DEFX)) S (DEF,DIR("B"))=DEFX Q
"RTN","ECUTL",82,0)
 . K DIR("B") S ECMOD(PROC,$P(ECY,U,2))=$P(ECY(0),U,2)_U_$P(ECY,U),DEF=""
"RTN","ECUTL",83,0)
 ;
"RTN","ECUTL",84,0)
ASKMODQ Q $S(ECERR:0,1:1)
"RTN","ECUTL",85,0)
 ;
"RTN","ECUTL",86,0)
VALMOD(PROC,X,PRDT) ;Validate modifiers
"RTN","ECUTL",87,0)
 N DIC,DTOUT,DUOUT,DIROUT,DUOUT
"RTN","ECUTL",88,0)
 S DIC="^DIC(81.3,",DIC(0)="MEQZ"
"RTN","ECUTL",89,0)
 S DIC("W")="W ""   "" W ""   "",$P(^(0),U,2)"
"RTN","ECUTL",90,0)
 S DIC("S")="I +$$MODP^ICPTMOD(PROC,Y,""I"",PRDT)>0"
"RTN","ECUTL",91,0)
 D ^DIC I Y<0 K X Q 1
"RTN","ECUTL",92,0)
 M ECY=Y S DEFX=$P(Y,U,2)
"RTN","ECUTL",93,0)
 Q 1
"RTN","ECUTL",94,0)
MODHLP ;Help for CPT modifiers
"RTN","ECUTL",95,0)
 N DIC,MOD,D
"RTN","ECUTL",96,0)
 Q:'$D(PROC)  I $D(ECMOD(PROC)) D
"RTN","ECUTL",97,0)
 . W !?2,"Answer with CPT MODIFIER",!?1,"Choose from:"
"RTN","ECUTL",98,0)
 . S MOD="" F  S MOD=$O(ECMOD(PROC,MOD)) Q:MOD=""  W !,?4,MOD
"RTN","ECUTL",99,0)
 W !?6,"You may enter a new CPT MODIFIER, if you wish"
"RTN","ECUTL",100,0)
 W !?6,"Enter a modifier that is valid for the CPT procedure code."
"RTN","ECUTL",101,0)
 S DIC="^DIC(81.3,",DIC("W")="W ""   "" W ""   "",$P(^(0),U,2)",D="B"
"RTN","ECUTL",102,0)
 S DIC(0)="QEZ",DIC("S")="I +$$MODP^ICPTMOD(PROC,Y,""I"",$G(PRDT))>0"
"RTN","ECUTL",103,0)
 D DQ^DICQ
"RTN","ECUTL",104,0)
 Q
"RTN","ECUTL",105,0)
MOD(ECIEN,MFT,OUTARR) ;Returns modifiers associated with an EC Patient IEN
"RTN","ECUTL",106,0)
 ;  Input: ECIEN  - IEN entry in file 721/^ECH(
"RTN","ECUTL",107,0)
 ;         MFT    - format to provide modifier
"RTN","ECUTL",108,0)
 ;                  "I" - ien format
"RTN","ECUTL",109,0)
 ;                  "E" - .01 format (default)
"RTN","ECUTL",110,0)
 ;
"RTN","ECUTL",111,0)
 ; Output: OUTARR - output array subscripted by modifer ien or .01 value 
"RTN","ECUTL",112,0)
 ;                  ien^modifier^modifier description
"RTN","ECUTL",113,0)
 ;         returns 1 if successful or 0 if unsuccessful
"RTN","ECUTL",114,0)
 ;      
"RTN","ECUTL",115,0)
 I $G(ECIEN)="" Q 0  ;IEN not define.
"RTN","ECUTL",116,0)
 I '$D(^ECH(ECIEN)) Q 0  ;IEN does not exist in file 721/^ECH(
"RTN","ECUTL",117,0)
 I $O(^ECH(ECIEN,"MOD",0))="" Q 0  ;No modifiers on file for entry
"RTN","ECUTL",118,0)
 N MOD,IEN,ECMERR,MODARY,MODESC,SUB,SEQ,ECDT
"RTN","ECUTL",119,0)
 S MFT=$S($G(MFT)="":"E",1:MFT) I "E^I"'[$E(MFT) S MFT="E"
"RTN","ECUTL",120,0)
 S ECDT=$P($G(^ECH(ECIEN,0)),U,3)
"RTN","ECUTL",121,0)
 D GETS^DIQ(721,ECIEN,"36*","IE","MODARY","ECMERR")
"RTN","ECUTL",122,0)
 I $D(ECMERR) Q 0  ;Error looking up entry
"RTN","ECUTL",123,0)
 S SEQ="" F  S SEQ=$O(MODARY(721.036,SEQ)) Q:SEQ=""  D
"RTN","ECUTL",124,0)
 . S SUB=$G(MODARY(721.036,SEQ,.01,MFT)) I SUB="" Q
"RTN","ECUTL",125,0)
 . S IEN=$G(MODARY(721.036,SEQ,.01,"I")) I IEN="" Q
"RTN","ECUTL",126,0)
 . S MOD=$G(MODARY(721.036,SEQ,.01,"E")) I MOD="" S MOD="Unknown"
"RTN","ECUTL",127,0)
 . S MODESC=$P($$MOD^ICPTMOD(MOD,"E",ECDT),U,3)
"RTN","ECUTL",128,0)
 . I MODESC="" S MODESC="Unknown"
"RTN","ECUTL",129,0)
 . S OUTARR(SUB)=IEN_U_MOD_U_MODESC
"RTN","ECUTL",130,0)
 Q $S($D(OUTARR):1,1:0)
"RTN","ECUTL2")
0^2^B31099024
"RTN","ECUTL2",1,0)
ECUTL2 ;ALB/JAM - Event Capture Diagnosis Code Selection ;11 Jan 2000
"RTN","ECUTL2",2,0)
 ;;2.0; EVENT CAPTURE ;**23,33,47**;8 May 96
"RTN","ECUTL2",3,0)
DIAG ;ask dx question (primary and multiple secondary) 
"RTN","ECUTL2",4,0)
 ;check for primary dx and display message
"RTN","ECUTL2",5,0)
 D PDXMSG
"RTN","ECUTL2",6,0)
 ;ask for primary dx
"RTN","ECUTL2",7,0)
 D PDX I ECOUT Q
"RTN","ECUTL2",8,0)
 ;ask for secondary dx
"RTN","ECUTL2",9,0)
 D SDX I ECOUT Q
"RTN","ECUTL2",10,0)
 I $D(DTOUT)!$D(DUOUT)!('Y)!(Y<0) W:$P(ECPCE,"~",2)'="N" !!,"Please note that this record cannot be sent to PCE without a diagnosis.",!!
"RTN","ECUTL2",11,0)
 Q
"RTN","ECUTL2",12,0)
PDXMSG ; Check for existence of primary diagnoses and display message
"RTN","ECUTL2",13,0)
 N TXT,ECPDX
"RTN","ECUTL2",14,0)
 S (ECDX,ECDXN,ECDXO)="" K ECDXS
"RTN","ECUTL2",15,0)
 ;Check if primay dx exist in file #721
"RTN","ECUTL2",16,0)
 S ECPDX=$$PDXCK(ECDFN,ECDT,ECL,EC4)
"RTN","ECUTL2",17,0)
 I +ECPDX W ! D 
"RTN","ECUTL2",18,0)
 . W !?5,"WARNING: Primary Diagnoses already on File for this encounter."
"RTN","ECUTL2",19,0)
 . W !?5,"If changed, all procedures will be updated. ("_ECDXN_")"
"RTN","ECUTL2",20,0)
 . S ECDXO=ECDX
"RTN","ECUTL2",21,0)
 I $P(ECPDX,U,2) D
"RTN","ECUTL2",22,0)
 . S TXT="WARNING: Primary diagnoses already sent to PCE. If changed,"
"RTN","ECUTL2",23,0)
 . S TXT=TXT_" all procedures"
"RTN","ECUTL2",24,0)
 . W !!?5,TXT
"RTN","ECUTL2",25,0)
 . S TXT="associated with this encounter will be updated and resent "
"RTN","ECUTL2",26,0)
 . S TXT=TXT_"to PCE."
"RTN","ECUTL2",27,0)
 . W !?5,TXT
"RTN","ECUTL2",28,0)
 Q
"RTN","ECUTL2",29,0)
PDXCK(ECDFN,ECDTX,ECLX,EC4X) ;Get primary dx frm file #721 for pat encounter
"RTN","ECUTL2",30,0)
 ;   Input:   ECDFN     = Patient ien
"RTN","ECUTL2",31,0)
 ;            ECDTX     = Date/time of procedure
"RTN","ECUTL2",32,0)
 ;            ECLX      = Location ien
"RTN","ECUTL2",33,0)
 ;            EC4X      = Clinic ien
"RTN","ECUTL2",34,0)
 ;
"RTN","ECUTL2",35,0)
 ;   Output:  PDXF^PCEF = primary dx flag (1/0)^dx sent to PCE flag (1/0)
"RTN","ECUTL2",36,0)
 ;            ECDX      = Primary diagnoses ien
"RTN","ECUTL2",37,0)
 ;            ECDXN     = Primary diagnoses code
"RTN","ECUTL2",38,0)
 ;            ECDXIEN   = Array of encounter IENs w primary dx
"RTN","ECUTL2",39,0)
 ;
"RTN","ECUTL2",40,0)
 N PDXF,PCEF,DA,DXIEN,DXS,DXN
"RTN","ECUTL2",41,0)
 S (PDXF,PCEF)=0,DA="" K ECDXIEN
"RTN","ECUTL2",42,0)
 I $G(ECDFN)=""!($G(ECDTX)="")!($G(ECLX)="")!($G(EC4X)="") Q PDXF_U_PCEF
"RTN","ECUTL2",43,0)
 I $O(^ECH("APAT",ECDFN,ECDTX,""))="" Q PDXF_U_PCEF
"RTN","ECUTL2",44,0)
 F  S DA=$O(^ECH("APAT",ECDFN,ECDTX,DA)) Q:DA=""  D
"RTN","ECUTL2",45,0)
 . I EC4X'=$P($G(^ECH(DA,0)),U,19) Q
"RTN","ECUTL2",46,0)
 . S ECDX=$P($G(^ECH(DA,"P")),U,2) I ECDX="" Q
"RTN","ECUTL2",47,0)
 . S ECDXN=$P($$ICDDX^ICDCODE(ECDX,ECDTX),U,2)
"RTN","ECUTL2",48,0)
 . S ECDXIEN(DA)=ECDXN_U_ECDX,PDXF=1
"RTN","ECUTL2",49,0)
 . I $D(^ECH(DA,"SEND")),^("SEND")="" S PCEF=1
"RTN","ECUTL2",50,0)
 . I $D(^ECH(DA,"DX")) D
"RTN","ECUTL2",51,0)
 . . S DXS=0 F  S DXS=$O(^ECH(DA,"DX",DXS)) Q:'DXS  D
"RTN","ECUTL2",52,0)
 ...S DXIEN=$P($G(^ECH(DA,"DX",DXS,0)),U)
"RTN","ECUTL2",53,0)
 ...S DXN=$P($$ICDDX^ICDCODE(DXIEN,ECDTX),U,2) S:DXN'="" ECDXS(DXN)=DXIEN
"RTN","ECUTL2",54,0)
 Q PDXF_U_PCEF
"RTN","ECUTL2",55,0)
PDX ;Ask primary diagnoses code
"RTN","ECUTL2",56,0)
 ;   Variables:   ECDX    = Primary diagnoses ien
"RTN","ECUTL2",57,0)
 ;                ECDXN   = Primary diagnoses code, default if define
"RTN","ECUTL2",58,0)
 ;                ECOUT   = Error flag (1/0)
"RTN","ECUTL2",59,0)
 ;   
"RTN","ECUTL2",60,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","ECUTL2",61,0)
 S ECDX=$G(ECDX),ECDXN=$G(ECDXN)
"RTN","ECUTL2",62,0)
 S DIR(0)="721,20",DIR("A")="Primary ICD-9 Code" S:ECDXN DIR("B")=ECDXN
"RTN","ECUTL2",63,0)
 D ^DIR
"RTN","ECUTL2",64,0)
 I Y S ECDX=+Y,ECDXN=Y(0,0) Q
"RTN","ECUTL2",65,0)
 I $D(DTOUT)!$D(DUOUT) S ECOUT=1 Q
"RTN","ECUTL2",66,0)
 I 'Y!(Y<0) W:$P(ECPCE,"~",2)'="N" !!,"Please note that this record cannot be sent to PCE without a diagnosis.",!!  ;;;may be able to remove this
"RTN","ECUTL2",67,0)
 Q
"RTN","ECUTL2",68,0)
SDX ;Ask secondary diagnoses code
"RTN","ECUTL2",69,0)
 ;   Variables:   ECDX    = Primary diagnoses ien, default if define
"RTN","ECUTL2",70,0)
 ;                ECDXN   = Primary diagnoses code
"RTN","ECUTL2",71,0)
 ;                ECOUT   = Error flag (1/0)
"RTN","ECUTL2",72,0)
 ;                ECDXS   = Array with secondary diagnosis code
"RTN","ECUTL2",73,0)
 ;                          subscript=dx code and set equal to dx ien
"RTN","ECUTL2",74,0)
 ;
"RTN","ECUTL2",75,0)
 N Y,X,DEF,DEFX,ECY,DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","ECUTL2",76,0)
 S DEF=$O(ECDXS(""),-1),ECOUT=$G(ECOUT) S:DEF'="" DIR("B")=DEF
"RTN","ECUTL2",77,0)
RPT S DIR("A")="Secondary ICD-9 Code",DIR("?")="^D DXSHLP^ECUTL2",DEFX=""
"RTN","ECUTL2",78,0)
 S DIR(0)="FO^^I $$VALSDX^ECUTL2(X)"
"RTN","ECUTL2",79,0)
 D ^DIR K DIR I X="" Q
"RTN","ECUTL2",80,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIROUT)) K ECDXS S ECOUT=1 Q
"RTN","ECUTL2",81,0)
 D  G RPT
"RTN","ECUTL2",82,0)
 . I X="@" K:DEF'="" ECDXS(DEF) W "    "_DEF_"...deleted" Q
"RTN","ECUTL2",83,0)
 . I '$D(ECY) Q
"RTN","ECUTL2",84,0)
 . I +ECY=ECDX W "    ...same as primary dx - deleted" Q
"RTN","ECUTL2",85,0)
 . I DEF'=DEFX,DEFX'="",$D(ECDXS(DEFX)) S (DEF,DIR("B"))=DEFX Q
"RTN","ECUTL2",86,0)
 . K DIR("B") S ECDXS($P(ECY,U,2))=$P(ECY,U),DEF=""
"RTN","ECUTL2",87,0)
 Q
"RTN","ECUTL2",88,0)
VALSDX(X) ;Validate modifiers
"RTN","ECUTL2",89,0)
 N DIC,DTOUT,DUOUT,DIROUT,DIROUT
"RTN","ECUTL2",90,0)
 S DIC="^ICD9(",DIC(0)="MEQZ",DIC("S")="I $P($$ICDDX^ICDCODE(+Y,$G(ECDT)),""^"",10)"
"RTN","ECUTL2",91,0)
 S DIC("W")="N C,DINAME S:$G(DO(2)) DO(2)=$TR(DO(2),""O"","""") W ""  "" W ""   "",$P(^(0),U,3)"
"RTN","ECUTL2",92,0)
 D ^DIC I Y<0 K X Q 1
"RTN","ECUTL2",93,0)
 K ECY M ECY=Y S DEFX=$P(Y,U,2)
"RTN","ECUTL2",94,0)
 Q 1
"RTN","ECUTL2",95,0)
DXSHLP ;Help for CPT modifiers
"RTN","ECUTL2",96,0)
 N DIC,DXS,D
"RTN","ECUTL2",97,0)
 I $D(ECDXS) D
"RTN","ECUTL2",98,0)
 . W !?1,"Answer with ICD-9 Diagnoses Code",!?1,"Choose from:"
"RTN","ECUTL2",99,0)
 . S DXS="" F  S DXS=$O(ECDXS(DXS)) Q:DXS=""  W !,?4,DXS
"RTN","ECUTL2",100,0)
 W !?6,"You may enter a new ICD-9 Diagnoses Code, if you wish."
"RTN","ECUTL2",101,0)
 W !?6,"Enter the secondary ICD-9 code for this procedure."
"RTN","ECUTL2",102,0)
 S DIC="^ICD9(",D="B",DIC(0)="MQEZ",DIC("S")="I $P($$ICDDX^ICDCODE(+Y,$G(ECDT)),""^"",10)"
"RTN","ECUTL2",103,0)
 D DQ^DICQ
"RTN","ECUTL2",104,0)
 Q
"RTN","ECUTL2",105,0)
PXUPD(ECDFN,ECDT,ECL,EC4,ECDXP,ECDXX,ECXIEN) ; Update all associated
"RTN","ECUTL2",106,0)
 ; procedures for an EC Patient encounter with the same primary and 
"RTN","ECUTL2",107,0)
 ; secondary dx codes
"RTN","ECUTL2",108,0)
 ;
"RTN","ECUTL2",109,0)
 ;   Input:   ECDFN     = Patient ien
"RTN","ECUTL2",110,0)
 ;            ECDT      = Date/time of procedure
"RTN","ECUTL2",111,0)
 ;            ECL       = Location ien
"RTN","ECUTL2",112,0)
 ;            EC4       = Clinic ien
"RTN","ECUTL2",113,0)
 ;            ECDXP     = Primary diagnoses code
"RTN","ECUTL2",114,0)
 ;            ECDXX     = Array of secondary diagnoses codes
"RTN","ECUTL2",115,0)
 ;            ECXIEN    = 721 ien, if define dont process
"RTN","ECUTL2",116,0)
 ;
"RTN","ECUTL2",117,0)
 ;  Output: ECERR  0 - Process completed
"RTN","ECUTL2",118,0)
 ;
"RTN","ECUTL2",119,0)
 N ECIEN,ECERR,DIE,DR,DA,DTOUT,DIROUT,ECDXIEN,ECPDX,ECDX,ECDXN,DIC,X
"RTN","ECUTL2",120,0)
 N ECVST,ECVAR1,VALQUIET,DXN,DXSIEN,DIK,ECDXS
"RTN","ECUTL2",121,0)
 S ECERR=0
"RTN","ECUTL2",122,0)
 I $D(ECDXP)="" Q ECERR
"RTN","ECUTL2",123,0)
 S ECPDX=$$PDXCK(ECDFN,ECDT,ECL,EC4)
"RTN","ECUTL2",124,0)
 I '$D(ECDXIEN) Q ECERR
"RTN","ECUTL2",125,0)
 S ECIEN="",DIE="^ECH("
"RTN","ECUTL2",126,0)
 F  S ECIEN=$O(ECDXIEN(ECIEN)) Q:ECIEN=""  D
"RTN","ECUTL2",127,0)
 . I $G(ECXIEN)'="",ECXIEN=ECIEN Q
"RTN","ECUTL2",128,0)
 . S ECNODE=$G(^ECH(ECIEN,"P")) I ECNODE="" Q
"RTN","ECUTL2",129,0)
 . I ECDXP'=$P(ECNODE,U,2) D
"RTN","ECUTL2",130,0)
 . . S DA=ECIEN,DR="20////"_ECDXP D ^DIE
"RTN","ECUTL2",131,0)
 . . S $P(^ECH(ECIEN,"PCE"),"~",11)=ECDXP
"RTN","ECUTL2",132,0)
 . ;delete all secondary diagnosis codes
"RTN","ECUTL2",133,0)
 . S DA(1)=ECIEN,DIK="^ECH("_DA(1)_",""DX"",",DA=0
"RTN","ECUTL2",134,0)
 . F  S DA=$O(^ECH(ECIEN,"DX",DA)) Q:'DA  D ^DIK
"RTN","ECUTL2",135,0)
 . I $D(^ECH(ECIEN,"DX")) K ^ECH(ECIEN,"DX")
"RTN","ECUTL2",136,0)
 . ;update secondary diagnosis codes on procedure
"RTN","ECUTL2",137,0)
 . S DXN="" F  S DXN=$O(ECDXX(DXN)) Q:DXN=""  D
"RTN","ECUTL2",138,0)
 . . S DXSIEN=$P(ECDXX(DXN),U) I DXSIEN<0 Q
"RTN","ECUTL2",139,0)
 . . K DIC,DD,DO S DIC(0)="L",DA(1)=ECIEN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECUTL2",140,0)
 . . S X=DXSIEN,DIC="^ECH("_DA(1)_","_"""DX"""_"," D FILE^DICN
"RTN","ECUTL2",141,0)
 . ;delete visit and resend to PCE
"RTN","ECUTL2",142,0)
 . S ECVST=+$P($G(^ECH(ECIEN,0)),"^",21) I 'ECVST Q
"RTN","ECUTL2",143,0)
 . ;* Prepare all EC records with same Visit file entry to resend to PCE
"RTN","ECUTL2",144,0)
 . S ECVAR1=$$FNDVST^ECUTL(ECVST)
"RTN","ECUTL2",145,0)
 . ;- Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECUTL2",146,0)
 . S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST)
"RTN","ECUTL2",147,0)
 Q ECERR
"RTN","ECV3RPC")
0^3^B31524451
"RTN","ECV3RPC",1,0)
ECV3RPC ;ALB/ACS;Event Capture Spreadsheet Data Validation ;Oct 13, 2000
"RTN","ECV3RPC",2,0)
 ;;2.0; EVENT CAPTURE ;**25,47**;8 May 96
"RTN","ECV3RPC",3,0)
 ;
"RTN","ECV3RPC",4,0)
 ;-----------------------------------------------------------------------
"RTN","ECV3RPC",5,0)
 ;  Validates the following Event Capture Spreadsheet Upload fields:
"RTN","ECV3RPC",6,0)
 ;    1. DSS UNIT IEN, DSS UNIT NUMBER, DSS UNIT NAME
"RTN","ECV3RPC",7,0)
 ;    2. ORDERING SECTION
"RTN","ECV3RPC",8,0)
 ;    3. PROCEDURE CODE
"RTN","ECV3RPC",9,0)
 ;    4. CATEGORY
"RTN","ECV3RPC",10,0)
 ;
"RTN","ECV3RPC",11,0)
 ;-----------------------------------------------------------------------
"RTN","ECV3RPC",12,0)
 ;
"RTN","ECV3RPC",13,0)
 ;--Set up error flag
"RTN","ECV3RPC",14,0)
 S ECERRFLG=0
"RTN","ECV3RPC",15,0)
 ;
"RTN","ECV3RPC",16,0)
 ;--GET DSS Unit IEN--
"RTN","ECV3RPC",17,0)
 S ECDSSIEN=""
"RTN","ECV3RPC",18,0)
 ; -Check for DSS Unit IEN first
"RTN","ECV3RPC",19,0)
 I ECUNITV'="",(ECUNITV'=+ECUNITV) D
"RTN","ECV3RPC",20,0)
 . S ECERRMSG=$P($T(DSS1^ECV3RPC),";;",2)
"RTN","ECV3RPC",21,0)
 . S ECCOLERR=ECUNITPC
"RTN","ECV3RPC",22,0)
 . D ERROR
"RTN","ECV3RPC",23,0)
 I ECUNITV,'ECERRFLG,$D(^ECD(ECUNITV,0)) S ECDSSIEN=ECUNITV
"RTN","ECV3RPC",24,0)
 I ECUNITV,'ECERRFLG,'$D(^ECD(ECUNITV,0)) D
"RTN","ECV3RPC",25,0)
 . ; DSS unit ien not found on VistA
"RTN","ECV3RPC",26,0)
 . S ECERRMSG=$P($T(DSS1^ECV3RPC),";;",2)
"RTN","ECV3RPC",27,0)
 . S ECCOLERR=ECUNITPC
"RTN","ECV3RPC",28,0)
 . D ERROR
"RTN","ECV3RPC",29,0)
 . Q
"RTN","ECV3RPC",30,0)
 ; -Check for DSS Unit Number
"RTN","ECV3RPC",31,0)
 I ECDCMV'="",'$D(^ECD("C",ECDCMV)) D
"RTN","ECV3RPC",32,0)
 . ; DSS Unit Number not found on VistA
"RTN","ECV3RPC",33,0)
 . S ECERRMSG=$P($T(DSS2^ECV3RPC),";;",2)
"RTN","ECV3RPC",34,0)
 . S ECCOLERR=ECDCMPC
"RTN","ECV3RPC",35,0)
 . D ERROR
"RTN","ECV3RPC",36,0)
 I 'ECERRFLG,ECDCMV'="",$D(^ECD("C",ECDCMV)) S ECDSSIEN=$O(^ECD("C",ECDCMV,0))
"RTN","ECV3RPC",37,0)
 ;Check if the next record is a match
"RTN","ECV3RPC",38,0)
 I 'ECERRFLG,'ECDSSIEN,ECDCMV'="",$D(^ECD("C",ECDCMV)) D
"RTN","ECV3RPC",39,0)
 . S ECDSSIEN=$O(^ECD("C",ECDCMV,0))
"RTN","ECV3RPC",40,0)
 . I '$D(^ECD("C",ECDCMV)) D
"RTN","ECV3RPC",41,0)
 . . ; DSS Unit Number not found on VistA
"RTN","ECV3RPC",42,0)
 . . S ECERRMSG=$P($T(DSS2^ECV3RPC),";;",2)
"RTN","ECV3RPC",43,0)
 . . S ECCOLERR=ECDCMPC
"RTN","ECV3RPC",44,0)
 . . D ERROR
"RTN","ECV3RPC",45,0)
 . . Q
"RTN","ECV3RPC",46,0)
 ; -Check for DSS Unit Name
"RTN","ECV3RPC",47,0)
 I ECDSSV'="",'$D(^ECD("B",ECDSSV)) D
"RTN","ECV3RPC",48,0)
 . S ECERRMSG=$P($T(DSS3^ECV3RPC),";;",2)
"RTN","ECV3RPC",49,0)
 . S ECCOLERR=ECDSSPC
"RTN","ECV3RPC",50,0)
 . D ERROR
"RTN","ECV3RPC",51,0)
 ; 
"RTN","ECV3RPC",52,0)
 I 'ECERRFLG,'ECDSSIEN,ECDSSV'="",$D(^ECD("B",ECDSSV)) S ECDSSIEN=$O(^ECD("B",ECDSSV,0))
"RTN","ECV3RPC",53,0)
 I 'ECERRFLG,'ECDSSIEN,ECDSSV'="",'$D(^ECD("B",ECDSSV)) D
"RTN","ECV3RPC",54,0)
 . N ECNXTDSS
"RTN","ECV3RPC",55,0)
 . S ECNXTDSS=$O(^ECD("B",ECDSSV))
"RTN","ECV3RPC",56,0)
 . I ECDSSV=$E(ECNXTDSS,1,$L(ECDSSV)) S ECDSSIEN=$O(^ECD("B",ECNXTDSS,0))
"RTN","ECV3RPC",57,0)
 . ;
"RTN","ECV3RPC",58,0)
 . I ECDSSV'=$E(ECNXTDSS,1,$L(ECDSSV)) D
"RTN","ECV3RPC",59,0)
 . . ; DSS unit name not found on VistA
"RTN","ECV3RPC",60,0)
 . . S ECERRMSG=$P($T(DSS3^ECV3RPC),";;",2)
"RTN","ECV3RPC",61,0)
 . . S ECCOLERR=ECDSSPC
"RTN","ECV3RPC",62,0)
 . . D ERROR
"RTN","ECV3RPC",63,0)
 . . Q
"RTN","ECV3RPC",64,0)
 . Q
"RTN","ECV3RPC",65,0)
 ;
"RTN","ECV3RPC",66,0)
 ;--Validate Ordering section or derive from DSS Unit IEN--
"RTN","ECV3RPC",67,0)
 I ECOSV'="" D
"RTN","ECV3RPC",68,0)
 . S ECOSIEN=$O(^ECC(723,"B",ECOSV,0))
"RTN","ECV3RPC",69,0)
 . I ECOSIEN="" D
"RTN","ECV3RPC",70,0)
 . . ; Ordering Section "B" x-ref doesn't exist
"RTN","ECV3RPC",71,0)
 . . S ECERRMSG=$P($T(ORDSEC1^ECV3RPC),";;",2)
"RTN","ECV3RPC",72,0)
 . . S ECCOLERR=ECOSPC
"RTN","ECV3RPC",73,0)
 . . D ERROR
"RTN","ECV3RPC",74,0)
 . . Q
"RTN","ECV3RPC",75,0)
 . Q
"RTN","ECV3RPC",76,0)
 I ECOSV="" D
"RTN","ECV3RPC",77,0)
 . I 'ECDSSIEN D
"RTN","ECV3RPC",78,0)
 . . ; Unable to derive Ordering section from DSS Unit
"RTN","ECV3RPC",79,0)
 . . S ECERRMSG=$P($T(ORDSEC2^ECV3RPC),";;",2)
"RTN","ECV3RPC",80,0)
 . . S ECCOLERR=ECOSPC
"RTN","ECV3RPC",81,0)
 . . D ERROR
"RTN","ECV3RPC",82,0)
 . . Q
"RTN","ECV3RPC",83,0)
 . I ECDSSIEN D
"RTN","ECV3RPC",84,0)
 . . S ECOSIEN=$P(^ECD(ECDSSIEN,0),U,3)
"RTN","ECV3RPC",85,0)
 . . I ECOSIEN="" D
"RTN","ECV3RPC",86,0)
 . . . ; Unable to derive Ordering section from DSS Unit
"RTN","ECV3RPC",87,0)
 . . . S ECERRMSG=$P($T(ORDSEC2^ECV3RPC),";;",2)
"RTN","ECV3RPC",88,0)
 . . . S ECCOLERR=ECOSPC
"RTN","ECV3RPC",89,0)
 . . . D ERROR
"RTN","ECV3RPC",90,0)
 . . . Q
"RTN","ECV3RPC",91,0)
 . . Q
"RTN","ECV3RPC",92,0)
 ;
"RTN","ECV3RPC",93,0)
 ;--Procedure must be a National Procedure, Local Procedure,   --
"RTN","ECV3RPC",94,0)
 ;--or a CPT code, and the EC Event Code Screen must be active --
"RTN","ECV3RPC",95,0)
 N ECFOUND,ECPI,ECDT
"RTN","ECV3RPC",96,0)
 S ECERRFLG=0,ECFOUND=0
"RTN","ECV3RPC",97,0)
 S %DT="XST",X=$G(ECENCV,"NOW") D ^%DT S ECDT=+Y
"RTN","ECV3RPC",98,0)
 ; Check for National Procedure code (D x-ref)
"RTN","ECV3RPC",99,0)
 I $D(^EC(725,"D",ECPROCV)) D
"RTN","ECV3RPC",100,0)
 . S ECPROCV=$O(^EC(725,"D",ECPROCV,0))_";EC(725,"
"RTN","ECV3RPC",101,0)
 . S ECPI=$P($G(^EC(725,ECPROCV,0)),"^",5),ECPI=$$CPT^ICPTCOD(ECPI,ECDT)
"RTN","ECV3RPC",102,0)
 . I +ECPI>0,$P(ECPI,"^",7) S ECFOUND=1
"RTN","ECV3RPC",103,0)
 ; Check for local procedure code (DL x-ref)
"RTN","ECV3RPC",104,0)
 I 'ECFOUND,$D(^EC(725,"DL",ECPROCV)) D
"RTN","ECV3RPC",105,0)
 . S ECPROCV=$O(^EC(725,"DL",ECPROCV,0))_";EC(725,"
"RTN","ECV3RPC",106,0)
 . S ECPI=$P($G(^EC(725,ECPROCV,0)),"^",5),ECPI=$$CPT^ICPTCOD(ECPI,ECDT)
"RTN","ECV3RPC",107,0)
 .I +ECPI>0,$P(ECPI,"^",7)  S ECFOUND=1
"RTN","ECV3RPC",108,0)
 ; Check for CPT code (B x-ref)
"RTN","ECV3RPC",109,0)
 I 'ECFOUND S ECPI=$$CPT^ICPTCOD(ECPROCV,ECDT) I +ECPI>0,$P(ECPI,"^",7) D
"RTN","ECV3RPC",110,0)
 . S ECPROCV=$P(ECPI,"^")_";ICPT("
"RTN","ECV3RPC",111,0)
 . S ECFOUND=1
"RTN","ECV3RPC",112,0)
 ;
"RTN","ECV3RPC",113,0)
 I 'ECFOUND D
"RTN","ECV3RPC",114,0)
 . ; Invalid procedure code
"RTN","ECV3RPC",115,0)
 . S ECERRMSG=$P($T(PROC1^ECV3RPC),";;",2)
"RTN","ECV3RPC",116,0)
 . S ECCOLERR=ECPROCPC
"RTN","ECV3RPC",117,0)
 . D ERROR
"RTN","ECV3RPC",118,0)
 . Q
"RTN","ECV3RPC",119,0)
 ;
"RTN","ECV3RPC",120,0)
 ; -Category must exist on the Event Capture Category file
"RTN","ECV3RPC",121,0)
 I ECCATV="" S ECCATIEN=0
"RTN","ECV3RPC",122,0)
 I ECCATV'="" D
"RTN","ECV3RPC",123,0)
 . I $D(^EC(726,"B",ECCATV)) S ECCATIEN=$O(^EC(726,"B",ECCATV,0))
"RTN","ECV3RPC",124,0)
 . I '$D(^EC(726,"B",ECCATV)) D
"RTN","ECV3RPC",125,0)
 . . ; B cross reference not found for category
"RTN","ECV3RPC",126,0)
 . . S ECERRMSG=$P($T(CAT1^ECV3RPC),";;",2)
"RTN","ECV3RPC",127,0)
 . . S ECCOLERR=ECCATPC
"RTN","ECV3RPC",128,0)
 . . D ERROR
"RTN","ECV3RPC",129,0)
 . . Q
"RTN","ECV3RPC",130,0)
 ;
"RTN","ECV3RPC",131,0)
 ; -check for active Event Code screen
"RTN","ECV3RPC",132,0)
 N ECEVNT,ECSNODE,ECSDATA,ECSFOUND
"RTN","ECV3RPC",133,0)
 I 'ECERRFLG D
"RTN","ECV3RPC",134,0)
 . S ECEVNT=ECSTAV_"-"_ECDSSIEN_"-"_ECCATIEN_"-"_ECPROCV
"RTN","ECV3RPC",135,0)
 . S (ECSNODE,ECSFOUND)=0
"RTN","ECV3RPC",136,0)
 . F  S ECSNODE=$O(^ECJ(ECSNODE)) Q:ECSNODE=""  D
"RTN","ECV3RPC",137,0)
 . . S ECSDATA=$G(^ECJ(ECSNODE,0))
"RTN","ECV3RPC",138,0)
 . . I ECEVNT=$P(ECSDATA,U,1) D
"RTN","ECV3RPC",139,0)
 . . . S ECSFOUND=1
"RTN","ECV3RPC",140,0)
 . . . I $P(ECSDATA,U,2)'="" D
"RTN","ECV3RPC",141,0)
 . . . . ; Event Code screen inactive
"RTN","ECV3RPC",142,0)
 . . . . S ECERRMSG=$P($T(PROC2^ECV3RPC),";;",2)
"RTN","ECV3RPC",143,0)
 . . . . S ECCOLERR=ECPROCPC
"RTN","ECV3RPC",144,0)
 . . . . D ERROR
"RTN","ECV3RPC",145,0)
 . . . . Q
"RTN","ECV3RPC",146,0)
 . . . Q
"RTN","ECV3RPC",147,0)
 . . Q
"RTN","ECV3RPC",148,0)
 . Q
"RTN","ECV3RPC",149,0)
 ;
"RTN","ECV3RPC",150,0)
 ;Generate error if event code screen not found
"RTN","ECV3RPC",151,0)
 I 'ECERRFLG,'ECSFOUND,ECDSSIEN D
"RTN","ECV3RPC",152,0)
 . ; Event Code screen not found
"RTN","ECV3RPC",153,0)
 . S ECERRMSG=$P($T(PROC3^ECV3RPC),";;",2)
"RTN","ECV3RPC",154,0)
 . S ECCOLERR=ECPROCPC
"RTN","ECV3RPC",155,0)
 . D ERROR
"RTN","ECV3RPC",156,0)
 . Q
"RTN","ECV3RPC",157,0)
 ;
"RTN","ECV3RPC",158,0)
 Q
"RTN","ECV3RPC",159,0)
ERROR ;--Set up array entry to contain the following:
"RTN","ECV3RPC",160,0)
 ;1. record number
"RTN","ECV3RPC",161,0)
 ;2. column number on spreadsheet containing the record number
"RTN","ECV3RPC",162,0)
 ;3. column number on spreadsheet containing the data in error
"RTN","ECV3RPC",163,0)
 ;4. error message
"RTN","ECV3RPC",164,0)
 ;
"RTN","ECV3RPC",165,0)
 S ECINDEX=ECINDEX+1
"RTN","ECV3RPC",166,0)
 S RESULTS(ECINDEX)=ECRECV_"^"_ECRECPC_"^"_ECCOLERR_"^"_ECERRMSG_"^"
"RTN","ECV3RPC",167,0)
 S ECERRFLG=1
"RTN","ECV3RPC",168,0)
 Q
"RTN","ECV3RPC",169,0)
 ;
"RTN","ECV3RPC",170,0)
DSS1 ;;Invalid DSS Unit IEN
"RTN","ECV3RPC",171,0)
DSS2 ;;Invalid DSS Unit Number
"RTN","ECV3RPC",172,0)
DSS3 ;;Invalid DSS Unit Name
"RTN","ECV3RPC",173,0)
ORDSEC1 ;;Ordering Section "B" x-ref not on Med Specialty file(#723)
"RTN","ECV3RPC",174,0)
ORDSEC2 ;;Unable to derive Ordering Section from DSS Unit
"RTN","ECV3RPC",175,0)
PROC1 ;;Procedure/CPT invalid
"RTN","ECV3RPC",176,0)
PROC2 ;;Procedure/CPT invalid for this Station and DSS Unit
"RTN","ECV3RPC",177,0)
PROC3 ;;Event Code screen not found
"RTN","ECV3RPC",178,0)
CAT1 ;;Category "B" x-ref not on EC Category file(#726)
"RTN","ECV5RPC")
0^4^B12908234
"RTN","ECV5RPC",1,0)
ECV5RPC ;ALB/ACS;Event Capture Spreadsheet Data Validation ;07 Aug 01
"RTN","ECV5RPC",2,0)
 ;;2.0; EVENT CAPTURE ;**25,30,36,47**;8 May 96
"RTN","ECV5RPC",3,0)
 ;
"RTN","ECV5RPC",4,0)
 ;-----------------------------------------------------------------------
"RTN","ECV5RPC",5,0)
 ;  Validates the following Event Capture Spreadsheet Upload fields for
"RTN","ECV5RPC",6,0)
 ;  records sent to PCE:
"RTN","ECV5RPC",7,0)
 ;    1. DIAGNOSIS CODE
"RTN","ECV5RPC",8,0)
 ;    2. ASSOCIATED CLINIC
"RTN","ECV5RPC",9,0)
 ;-----------------------------------------------------------------------
"RTN","ECV5RPC",10,0)
 ;=======================================================================
"RTN","ECV5RPC",11,0)
 ;MODIFICATIONS
"RTN","ECV5RPC",12,0)
 ;08/2001    EC*2.0*30   Updated the Diagnosis validation logic
"RTN","ECV5RPC",13,0)
 ;=======================================================================
"RTN","ECV5RPC",14,0)
 ;
"RTN","ECV5RPC",15,0)
VALDIAG ;Validate Diagnosis Code.  Make sure it exists on the ICD9 file
"RTN","ECV5RPC",16,0)
 N ECDT
"RTN","ECV5RPC",17,0)
 S %DT="XST",X=$G(ECENCV,"NOW") D ^%DT S ECDT=+Y
"RTN","ECV5RPC",18,0)
 I ECDXV="" D
"RTN","ECV5RPC",19,0)
 . ; Spreadsheet is missing diagnosis code
"RTN","ECV5RPC",20,0)
 . S ECERRMSG=$P($T(DIAG1^ECV5RPC),";;",2)
"RTN","ECV5RPC",21,0)
 . S ECCOLERR=ECDXPC
"RTN","ECV5RPC",22,0)
 . D ERROR
"RTN","ECV5RPC",23,0)
 ;if diag invalid, send error message
"RTN","ECV5RPC",24,0)
 I ECDXV'="" S (ECDXIEN,ECSFOUND)=0 D
"RTN","ECV5RPC",25,0)
 . S ECDXIEN=$$ICDDX^ICDCODE(ECDXV,ECDT)
"RTN","ECV5RPC",26,0)
 . I +ECDXIEN>0,$P(ECDXIEN,"^",10) S ECDXIEN=+ECDXIEN,ECSFOUND=1 Q
"RTN","ECV5RPC",27,0)
 . I 'ECSFOUND D
"RTN","ECV5RPC",28,0)
 . . ; Invalid Diagnosis code
"RTN","ECV5RPC",29,0)
 . . S ECERRMSG=$P($T(DIAG2^ECV5RPC),";;",2)
"RTN","ECV5RPC",30,0)
 . . S ECCOLERR=ECDXPC
"RTN","ECV5RPC",31,0)
 . . D ERROR
"RTN","ECV5RPC",32,0)
 . . Q
"RTN","ECV5RPC",33,0)
 . Q
"RTN","ECV5RPC",34,0)
 Q
"RTN","ECV5RPC",35,0)
 ;
"RTN","ECV5RPC",36,0)
VALCLIN ;Validate Associated Clinic.  Make sure the clinic is active for
"RTN","ECV5RPC",37,0)
 ;the date of the encounter
"RTN","ECV5RPC",38,0)
 S ECERRFLG=0
"RTN","ECV5RPC",39,0)
 I ECCLNV="" D
"RTN","ECV5RPC",40,0)
 . ; Spreadsheet is missing the associated clinic
"RTN","ECV5RPC",41,0)
 . S ECERRMSG=$P($T(CLIN1^ECV5RPC),";;",2)
"RTN","ECV5RPC",42,0)
 . S ECCOLERR=ECCLNPC
"RTN","ECV5RPC",43,0)
 . D ERROR
"RTN","ECV5RPC",44,0)
 . Q
"RTN","ECV5RPC",45,0)
 I 'ECERRFLG,'$D(^SC("B",ECCLNV)) D
"RTN","ECV5RPC",46,0)
 . ; No B x-ref on file
"RTN","ECV5RPC",47,0)
 . S ECERRMSG=$P($T(CLIN2^ECV5RPC),";;",2)
"RTN","ECV5RPC",48,0)
 . S ECCOLERR=ECCLNPC
"RTN","ECV5RPC",49,0)
 . D ERROR
"RTN","ECV5RPC",50,0)
 . Q
"RTN","ECV5RPC",51,0)
 I 'ECERRFLG,$D(^SC("B",ECCLNV)) D
"RTN","ECV5RPC",52,0)
 . ;get associated clinic ien
"RTN","ECV5RPC",53,0)
 . S ECCLNIEN=$O(^SC("B",ECCLNV,0))
"RTN","ECV5RPC",54,0)
 . I '$D(^SC(ECCLNIEN,0)) D
"RTN","ECV5RPC",55,0)
 . . ; Associated clinic ien not on file
"RTN","ECV5RPC",56,0)
 . . S ECERRMSG=$P($T(CLIN3^ECV5RPC),";;",2)
"RTN","ECV5RPC",57,0)
 . . S ECCOLERR=ECCLNPC
"RTN","ECV5RPC",58,0)
 . . D ERROR
"RTN","ECV5RPC",59,0)
 . . Q
"RTN","ECV5RPC",60,0)
 . I 'ECERRFLG D
"RTN","ECV5RPC",61,0)
 . . ;make sure it is of type 'clinic'
"RTN","ECV5RPC",62,0)
 . . N CLINDATA
"RTN","ECV5RPC",63,0)
 . . S CLINDATA=$G(^SC(ECCLNIEN,0))
"RTN","ECV5RPC",64,0)
 . . I $P(CLINDATA,U,3)'="C" D
"RTN","ECV5RPC",65,0)
 . . . S ECERRMSG=$P($T(CLIN4^ECV5RPC),";;",2)
"RTN","ECV5RPC",66,0)
 . . . S ECCOLERR=ECCLNPC
"RTN","ECV5RPC",67,0)
 . . . D ERROR
"RTN","ECV5RPC",68,0)
 . . . Q
"RTN","ECV5RPC",69,0)
 . . Q
"RTN","ECV5RPC",70,0)
 . ;
"RTN","ECV5RPC",71,0)
 . ;check for inactivate and reactivate dates
"RTN","ECV5RPC",72,0)
 . I 'ECERRFLG,$D(^SC(ECCLNIEN,"I")) D
"RTN","ECV5RPC",73,0)
 . . ;get inactivated and reactivated dates
"RTN","ECV5RPC",74,0)
 . . N INACT,REACT
"RTN","ECV5RPC",75,0)
 . . S INACT=$P(^SC(ECCLNIEN,"I"),U,1),REACT=$P(^SC(ECCLNIEN,"I"),U,2)
"RTN","ECV5RPC",76,0)
 . . I INACT'="" D
"RTN","ECV5RPC",77,0)
 . . . I REACT="",ECENCV'<INACT D CLINERR^ECV5RPC
"RTN","ECV5RPC",78,0)
 . . . I REACT,ECENCV'<INACT,ECENCV<REACT D CLINERR^ECV5RPC
"RTN","ECV5RPC",79,0)
 . . . Q
"RTN","ECV5RPC",80,0)
 . . Q
"RTN","ECV5RPC",81,0)
 . Q
"RTN","ECV5RPC",82,0)
 Q
"RTN","ECV5RPC",83,0)
 ;;
"RTN","ECV5RPC",84,0)
CLINERR ;Clinic inactive for this encounter date
"RTN","ECV5RPC",85,0)
 S ECERRMSG=$P($T(CLIN5^ECV5RPC),";;",2)
"RTN","ECV5RPC",86,0)
 S ECCOLERR=ECCLNPC
"RTN","ECV5RPC",87,0)
 D ERROR
"RTN","ECV5RPC",88,0)
 Q
"RTN","ECV5RPC",89,0)
 ;;
"RTN","ECV5RPC",90,0)
ERROR ;--Set up array entry to contain the following:
"RTN","ECV5RPC",91,0)
 ;1. record number
"RTN","ECV5RPC",92,0)
 ;2. column number on spreadsheet containing the record number
"RTN","ECV5RPC",93,0)
 ;3. column number on spreadsheet containing the data in error
"RTN","ECV5RPC",94,0)
 ;4. error message
"RTN","ECV5RPC",95,0)
 ;
"RTN","ECV5RPC",96,0)
 S ECINDEX=ECINDEX+1
"RTN","ECV5RPC",97,0)
 S RESULTS(ECINDEX)=ECRECV_"^"_ECRECPC_"^"_ECCOLERR_"^"_ECERRMSG_"^"
"RTN","ECV5RPC",98,0)
 S ECERRFLG=1
"RTN","ECV5RPC",99,0)
 Q
"RTN","ECV5RPC",100,0)
 ;
"RTN","ECV5RPC",101,0)
 ;Error messages:
"RTN","ECV5RPC",102,0)
 ;
"RTN","ECV5RPC",103,0)
DIAG1 ;;Diagnosis code is required for this DSS Unit
"RTN","ECV5RPC",104,0)
DIAG2 ;;Invalid Diagnosis code
"RTN","ECV5RPC",105,0)
CLIN1 ;;Associated Clinic is required for this DSS Unit
"RTN","ECV5RPC",106,0)
CLIN2 ;;Assoc Clinic "B" x-ref not found on Hosp Location File(#44)
"RTN","ECV5RPC",107,0)
CLIN3 ;;Assoc Clinic not found on Hosp Location File(#44)
"RTN","ECV5RPC",108,0)
CLIN4 ;;Assoc Clinic must be of type "C" (clinic)
"RTN","ECV5RPC",109,0)
CLIN5 ;;Assoc Clinic inactive for this encounter date
"UP",721,721.038,-1)
721^DX
"UP",721,721.038,0)
721.038
"VER")
8.0^22.0
"^DD",721,721,20,0)
PRIMARY ICD-9 CODE^R*P80'X^ICD9(^P;2^S DIC("S")="I $P($$ICDDX^ICDCODE(+Y,$G(ECDT)),""^"",10)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",721,721,20,.1)
Primary ICD-9 Code (Diagnosis)
"^DD",721,721,20,3)
Enter the Primary ICD-9 code for this encounter.
"^DD",721,721,20,12)
Allows selection of active codes only.
"^DD",721,721,20,12.1)
S DIC("S")="I $P($$ICDDX^ICDCODE(+Y,$G(ECDT)),""^"",10)"
"^DD",721,721,20,21,0)
^.001^1^1^3030523^^^^
"^DD",721,721,20,21,1,0)
The Primary ICD-9 (diagnosis) for this encounter.
"^DD",721,721,20,23,0)
^.001^1^1^3030523^^^^
"^DD",721,721,20,23,1,0)
Primary ICD-9 CODE is derived from the ICD DIAGNOSIS file (#80).
"^DD",721,721,20,"DT")
3030527
"^DD",721,721,38,0)
SECONDARY ICD-9 CODE^721.038PA^^DX;0
"^DD",721,721,38,12)
Selects only active ICD-9 codes.
"^DD",721,721,38,12.1)
S DIC("S")="I '$P(^(0),""^"",9)"
"^DD",721,721,38,21,0)
^^1^1^3000403^^^^
"^DD",721,721,38,21,1,0)
The secondary ICD-9 diagnoses code for the procedure performed.
"^DD",721,721,38,23,0)
^^1^1^3000403^^
"^DD",721,721,38,23,1,0)
This field originates from the ICD-9 file #80.
"^DD",721,721.038,0)
SECONDARY ICD-9 CODE SUB-FIELD^^.01^1
"^DD",721,721.038,0,"NM","SECONDARY ICD-9 CODE")

"^DD",721,721.038,.01,0)
SECONDARY ICD-9 CODE^M*P80'X^ICD9(^0;1^S DIC("S")="I $P($$ICDDX^ICDCODE(+Y,$G(ECDT)),""^"",10)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",721,721.038,.01,1,0)
^.1
"^DD",721,721.038,.01,1,1,0)
721.038^B
"^DD",721,721.038,.01,1,1,1)
S ^ECH(DA(1),"DX","B",$E(X,1,30),DA)=""
"^DD",721,721.038,.01,1,1,2)
K ^ECH(DA(1),"DX","B",$E(X,1,30),DA)
"^DD",721,721.038,.01,3)
Enter the secondary ICD-9 code for this procedure.
"^DD",721,721.038,.01,12)
Allows selection of active codes only.
"^DD",721,721.038,.01,12.1)
S DIC("S")="I $P($$ICDDX^ICDCODE(+Y,$G(ECDT)),""^"",10)"
"^DD",721,721.038,.01,21,0)
^^1^1^3000403^^
"^DD",721,721.038,.01,21,1,0)
The secondary ICD-9 diagnoses code for the procedure performed.
"^DD",721,721.038,.01,23,0)
^^1^1^3000403^^
"^DD",721,721.038,.01,23,1,0)
This field originates from the ICD-9 file #80.
"^DD",721,721.038,.01,"DT")
3030527
"^DD",725,725,4,0)
CPT^*P81'^ICPT(^0;5^S DIC("S")="I $P($$CPT^ICPTCOD(+Y),""^"",7)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",725,725,4,3)
Enter the CPT code equivalent for this national procedure.
"^DD",725,725,4,12)
Allows selection of active CPT codes only.
"^DD",725,725,4,12.1)
S DIC("S")="I $P($$CPT^ICPTCOD(+Y),""^"",7)"
"^DD",725,725,4,21,0)
^.001^2^2^3030328^^^^
"^DD",725,725,4,21,1,0)
The Current Procedural Terminology (CPT) code equivalent for this
"^DD",725,725,4,21,2,0)
national or local procedure.
"^DD",725,725,4,23,0)
^.001^1^1^3030328^^^^
"^DD",725,725,4,23,1,0)
The national or local procedure pointer to the CPT file (#81).
"^DD",725,725,4,"DT")
3030328
**INSTALL NAME**
IBD*3.0*51
"BLD",3004,0)
IBD*3.0*51^AUTOMATED INFO COLLECTION SYS^0^3030916^y
"BLD",3004,1,0)
^^2^2^3030605^^^^
"BLD",3004,1,1,0)
Please see the National Patch Module for details
"BLD",3004,1,2,0)
of the enhancements included in this patch.
"BLD",3004,4,0)
^9.64PA^357.69^1
"BLD",3004,4,357.69,0)
357.69
"BLD",3004,4,357.69,2,0)
^9.641^357.69^1
"BLD",3004,4,357.69,2,357.69,0)
TYPE OF VISIT  (File-top level)
"BLD",3004,4,357.69,2,357.69,1,0)
^9.6411^.01^1
"BLD",3004,4,357.69,2,357.69,1,.01,0)
CODE
"BLD",3004,4,357.69,222)
y^n^p^^^^n^^n
"BLD",3004,4,357.69,224)

"BLD",3004,4,"APDD",357.69,357.69)

"BLD",3004,4,"APDD",357.69,357.69,.01)

"BLD",3004,4,"B",357.69,357.69)

"BLD",3004,"KRN",0)
^9.67PA^8989.52^19
"BLD",3004,"KRN",.4,0)
.4
"BLD",3004,"KRN",.401,0)
.401
"BLD",3004,"KRN",.402,0)
.402
"BLD",3004,"KRN",.403,0)
.403
"BLD",3004,"KRN",.5,0)
.5
"BLD",3004,"KRN",.84,0)
.84
"BLD",3004,"KRN",3.6,0)
3.6
"BLD",3004,"KRN",3.8,0)
3.8
"BLD",3004,"KRN",9.2,0)
9.2
"BLD",3004,"KRN",9.8,0)
9.8
"BLD",3004,"KRN",9.8,"NM",0)
^9.68A^20^20
"BLD",3004,"KRN",9.8,"NM",1,0)
IBDF18A^^0^B47580981
"BLD",3004,"KRN",9.8,"NM",2,0)
IBDF4C^^0^B3023024
"BLD",3004,"KRN",9.8,"NM",3,0)
IBDFLST^^0^B28703563
"BLD",3004,"KRN",9.8,"NM",4,0)
IBDFN12^^0^B9858869
"BLD",3004,"KRN",9.8,"NM",5,0)
IBDFN14^^0^B8732971
"BLD",3004,"KRN",9.8,"NM",6,0)
IBDFN4^^0^B12796917
"BLD",3004,"KRN",9.8,"NM",7,0)
IBDFN7^^0^B4240764
"BLD",3004,"KRN",9.8,"NM",8,0)
IBDFN8^^0^B889456
"BLD",3004,"KRN",9.8,"NM",9,0)
IBDFN9^^0^B876630
"BLD",3004,"KRN",9.8,"NM",10,0)
IBDFUTL^^0^B30782217
"BLD",3004,"KRN",9.8,"NM",11,0)
IBDFUTL1^^0^B52493604
"BLD",3004,"KRN",9.8,"NM",12,0)
IBDF18A2^^0^B4955786
"BLD",3004,"KRN",9.8,"NM",13,0)
IBDF18E2^^0^B20127242
"BLD",3004,"KRN",9.8,"NM",14,0)
IBDFDE^^0^B78073788
"BLD",3004,"KRN",9.8,"NM",15,0)
IBDFDE6^^0^B78210316
"BLD",3004,"KRN",9.8,"NM",16,0)
IBDFDE7^^0^B46791911
"BLD",3004,"KRN",9.8,"NM",17,0)
IBDFDE8^^0^B16401045
"BLD",3004,"KRN",9.8,"NM",18,0)
IBDFDE9^^0^B17946190
"BLD",3004,"KRN",9.8,"NM",19,0)
IBDFFV^^0^B12585211
"BLD",3004,"KRN",9.8,"NM",20,0)
IBDFOSG^^0^B25666094
"BLD",3004,"KRN",9.8,"NM","B","IBDF18A",1)

"BLD",3004,"KRN",9.8,"NM","B","IBDF18A2",12)

"BLD",3004,"KRN",9.8,"NM","B","IBDF18E2",13)

"BLD",3004,"KRN",9.8,"NM","B","IBDF4C",2)

"BLD",3004,"KRN",9.8,"NM","B","IBDFDE",14)

"BLD",3004,"KRN",9.8,"NM","B","IBDFDE6",15)

"BLD",3004,"KRN",9.8,"NM","B","IBDFDE7",16)

"BLD",3004,"KRN",9.8,"NM","B","IBDFDE8",17)

"BLD",3004,"KRN",9.8,"NM","B","IBDFDE9",18)

"BLD",3004,"KRN",9.8,"NM","B","IBDFFV",19)

"BLD",3004,"KRN",9.8,"NM","B","IBDFLST",3)

"BLD",3004,"KRN",9.8,"NM","B","IBDFN12",4)

"BLD",3004,"KRN",9.8,"NM","B","IBDFN14",5)

"BLD",3004,"KRN",9.8,"NM","B","IBDFN4",6)

"BLD",3004,"KRN",9.8,"NM","B","IBDFN7",7)

"BLD",3004,"KRN",9.8,"NM","B","IBDFN8",8)

"BLD",3004,"KRN",9.8,"NM","B","IBDFN9",9)

"BLD",3004,"KRN",9.8,"NM","B","IBDFOSG",20)

"BLD",3004,"KRN",9.8,"NM","B","IBDFUTL",10)

"BLD",3004,"KRN",9.8,"NM","B","IBDFUTL1",11)

"BLD",3004,"KRN",19,0)
19
"BLD",3004,"KRN",19,"NM",0)
^9.68A^9^9
"BLD",3004,"KRN",19,"NM",1,0)
IBD SCANNING WORKSTATION^^0
"BLD",3004,"KRN",19,"NM",2,0)
IBD MANUAL DATA ENTRY BY CLIN^^0
"BLD",3004,"KRN",19,"NM",3,0)
IBD MANUAL DATA ENTRY BY FORM^^0
"BLD",3004,"KRN",19,"NM",4,0)
IBD MANUAL DATA ENTRY GROUP^^0
"BLD",3004,"KRN",19,"NM",5,0)
IBD MANUAL DATA DISPLAY^^0
"BLD",3004,"KRN",19,"NM",6,0)
IBD MANUAL DATA ENTRY PRE^^0
"BLD",3004,"KRN",19,"NM",7,0)
IBDF SCANNED W/BILL GEN^^0
"BLD",3004,"KRN",19,"NM",8,0)
IBDFC CONVERSION UTILITY^^0
"BLD",3004,"KRN",19,"NM",9,0)
IBDF VALIDATE FORMS^^0
"BLD",3004,"KRN",19,"NM","B","IBD MANUAL DATA DISPLAY",5)

"BLD",3004,"KRN",19,"NM","B","IBD MANUAL DATA ENTRY BY CLIN",2)

"BLD",3004,"KRN",19,"NM","B","IBD MANUAL DATA ENTRY BY FORM",3)

"BLD",3004,"KRN",19,"NM","B","IBD MANUAL DATA ENTRY GROUP",4)

"BLD",3004,"KRN",19,"NM","B","IBD MANUAL DATA ENTRY PRE",6)

"BLD",3004,"KRN",19,"NM","B","IBD SCANNING WORKSTATION",1)

"BLD",3004,"KRN",19,"NM","B","IBDF SCANNED W/BILL GEN",7)

"BLD",3004,"KRN",19,"NM","B","IBDF VALIDATE FORMS",9)

"BLD",3004,"KRN",19,"NM","B","IBDFC CONVERSION UTILITY",8)

"BLD",3004,"KRN",19.1,0)
19.1
"BLD",3004,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",3004,"KRN",19.1,"NM",1,0)
IBD SCAN MANAGER^^1^
"BLD",3004,"KRN",19.1,"NM","B","IBD SCAN MANAGER",1)

"BLD",3004,"KRN",101,0)
101
"BLD",3004,"KRN",101,"NM",0)
^9.68A^^
"BLD",3004,"KRN",409.61,0)
409.61
"BLD",3004,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",3004,"KRN",771,0)
771
"BLD",3004,"KRN",771,"NM",0)
^9.68A^^
"BLD",3004,"KRN",870,0)
870
"BLD",3004,"KRN",870,"NM",0)
^9.68A^^
"BLD",3004,"KRN",8989.51,0)
8989.51
"BLD",3004,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",3004,"KRN",8989.52,0)
8989.52
"BLD",3004,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",3004,"KRN",8994,0)
8994
"BLD",3004,"KRN",8994,"NM",0)
^9.68A^13^13
"BLD",3004,"KRN",8994,"NM",1,0)
IBD ELAPSED TIME^^0
"BLD",3004,"KRN",8994,"NM",2,0)
IBD EXPAND FORMID^^0
"BLD",3004,"KRN",8994,"NM",3,0)
IBD GET FORMSPEC^^0
"BLD",3004,"KRN",8994,"NM",4,0)
IBD RECEIVE DATA^^0
"BLD",3004,"KRN",8994,"NM",5,0)
IBD RECEIVE FORM DATA^^0
"BLD",3004,"KRN",8994,"NM",6,0)
IBD RETURN IMAGE ID^^0
"BLD",3004,"KRN",8994,"NM",7,0)
IBD VALIDATE USER^^0
"BLD",3004,"KRN",8994,"NM",8,0)
IBD STORE IMAGE NAME^^0
"BLD",3004,"KRN",8994,"NM",9,0)
IBD STORE WORKSTATION ERROR^^0
"BLD",3004,"KRN",8994,"NM",10,0)
IBD GET ALL PCE DATA^^0
"BLD",3004,"KRN",8994,"NM",11,0)
IBD GET PAST APPT LIST^^0
"BLD",3004,"KRN",8994,"NM",12,0)
IBD GET FORMSPEC GLOBAL^^0
"BLD",3004,"KRN",8994,"NM",13,0)
IBD GET SCAN PAGE INFO^^0
"BLD",3004,"KRN",8994,"NM","B","IBD ELAPSED TIME",1)

"BLD",3004,"KRN",8994,"NM","B","IBD EXPAND FORMID",2)

"BLD",3004,"KRN",8994,"NM","B","IBD GET ALL PCE DATA",10)

"BLD",3004,"KRN",8994,"NM","B","IBD GET FORMSPEC",3)

"BLD",3004,"KRN",8994,"NM","B","IBD GET FORMSPEC GLOBAL",12)

"BLD",3004,"KRN",8994,"NM","B","IBD GET PAST APPT LIST",11)

"BLD",3004,"KRN",8994,"NM","B","IBD GET SCAN PAGE INFO",13)

"BLD",3004,"KRN",8994,"NM","B","IBD RECEIVE DATA",4)

"BLD",3004,"KRN",8994,"NM","B","IBD RECEIVE FORM DATA",5)

"BLD",3004,"KRN",8994,"NM","B","IBD RETURN IMAGE ID",6)

"BLD",3004,"KRN",8994,"NM","B","IBD STORE IMAGE NAME",8)

"BLD",3004,"KRN",8994,"NM","B","IBD STORE WORKSTATION ERROR",9)

"BLD",3004,"KRN",8994,"NM","B","IBD VALIDATE USER",7)

"BLD",3004,"KRN","B",.4,.4)

"BLD",3004,"KRN","B",.401,.401)

"BLD",3004,"KRN","B",.402,.402)

"BLD",3004,"KRN","B",.403,.403)

"BLD",3004,"KRN","B",.5,.5)

"BLD",3004,"KRN","B",.84,.84)

"BLD",3004,"KRN","B",3.6,3.6)

"BLD",3004,"KRN","B",3.8,3.8)

"BLD",3004,"KRN","B",9.2,9.2)

"BLD",3004,"KRN","B",9.8,9.8)

"BLD",3004,"KRN","B",19,19)

"BLD",3004,"KRN","B",19.1,19.1)

"BLD",3004,"KRN","B",101,101)

"BLD",3004,"KRN","B",409.61,409.61)

"BLD",3004,"KRN","B",771,771)

"BLD",3004,"KRN","B",870,870)

"BLD",3004,"KRN","B",8989.51,8989.51)

"BLD",3004,"KRN","B",8989.52,8989.52)

"BLD",3004,"KRN","B",8994,8994)

"BLD",3004,"QUES",0)
^9.62^^
"BLD",3004,"REQB",0)
^9.611^5^5
"BLD",3004,"REQB",1,0)
ICPT*6.0*14^1
"BLD",3004,"REQB",2,0)
ICD*18.0*6^1
"BLD",3004,"REQB",3,0)
IBD*3.0*23^1
"BLD",3004,"REQB",4,0)
IBD*3.0*40^1
"BLD",3004,"REQB",5,0)
IBD*3.0*25^1
"BLD",3004,"REQB","B","IBD*3.0*23",3)

"BLD",3004,"REQB","B","IBD*3.0*25",5)

"BLD",3004,"REQB","B","IBD*3.0*40",4)

"BLD",3004,"REQB","B","ICD*18.0*6",2)

"BLD",3004,"REQB","B","ICPT*6.0*14",1)

"FIA",357.69)
TYPE OF VISIT
"FIA",357.69,0)
^IBE(357.69,
"FIA",357.69,0,0)
357.69IP
"FIA",357.69,0,1)
y^n^p^^^^n^^n
"FIA",357.69,0,10)

"FIA",357.69,0,11)

"FIA",357.69,0,"RLRO")

"FIA",357.69,0,"VR")
3.0^IBD
"FIA",357.69,357.69)
1
"FIA",357.69,357.69,.01)

"KRN",19,9365,-1)
0^8
"KRN",19,9365,0)
IBDFC CONVERSION UTILITY^Conversion Utility For Scanning^** This option is OUT OF ORDER **^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,9365,1,0)
^^2^2^2950310^
"KRN",19,9365,1,1,0)
Used to convert a form that was designed for just printing to a form that
"KRN",19,9365,1,2,0)
can be scanned.
"KRN",19,9365,20)
D ^IBDFC
"KRN",19,9365,"U")
CONVERSION UTILITY FOR SCANNIN
"KRN",19,9369,-1)
0^7
"KRN",19,9369,0)
IBDF SCANNED W/BILL GEN^Scanned Forms w/ Bill Gen^** This option is OUT OF ORDER **^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,9369,1,0)
^^7^7^2980818^^^^
"KRN",19,9369,1,1,0)
This option prints a report for those encounter forms that have
"KRN",19,9369,1,2,0)
been scanned that also have bills generated.  The report displays
"KRN",19,9369,1,3,0)
this data for all clinics using encounter forms for one/many/all
"KRN",19,9369,1,4,0)
divisions for a specific date range.  The data that is displayed 
"KRN",19,9369,1,5,0)
is the number scanned, number insured, number of bills entered,
"KRN",19,9369,1,6,0)
number of bills printed, and average days from date of encounter
"KRN",19,9369,1,7,0)
to date of bill generation (printed).
"KRN",19,9369,25)
IBDFOSG
"KRN",19,9369,"U")
SCANNED FORMS W/ BILL GEN
"KRN",19,9374,-1)
0^9
"KRN",19,9374,0)
IBDF VALIDATE FORMS^Validate Forms^** This option is OUT OF ORDER **^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,9374,1,0)
^^3^3^2960523^^
"KRN",19,9374,1,1,0)
Report used to validate the data that will be passed to PCE
"KRN",19,9374,1,2,0)
when an Encounter Form is scanned.  The report may be sorted
"KRN",19,9374,1,3,0)
by Division, Clinic Group, Clinic or Form.
"KRN",19,9374,25)
IBDFFV
"KRN",19,9374,"U")
VALIDATE FORMS
"KRN",19,9924,-1)
0^2
"KRN",19,9924,0)
IBD MANUAL DATA ENTRY BY CLIN^Clinic based Data Entry^** This option is OUT OF ORDER **^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,9924,1,0)
^^5^5^2970129^^
"KRN",19,9924,1,1,0)
This option allows manual data entry of encounter data for the Ambulatory
"KRN",19,9924,1,2,0)
Data Capture project.  The user selects a clinic, an appointment date, a
"KRN",19,9924,1,3,0)
patient and can then do data entry for the encounter.  All forms for the
"KRN",19,9924,1,4,0)
encounter will be asked.  If no forms were printed for the encounter the
"KRN",19,9924,1,5,0)
user can select the form to for data entry without having to print the form.
"KRN",19,9924,25)
IBDFDE6
"KRN",19,9924,"U")
CLINIC BASED DATA ENTRY
"KRN",19,9925,-1)
0^3
"KRN",19,9925,0)
IBD MANUAL DATA ENTRY BY FORM^Data Entry by Form^** This option is OUT OF ORDER **^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,9925,1,0)
^^3^3^2960507^
"KRN",19,9925,1,1,0)
This option allows manual data entry of encounter data for the Ambulatory
"KRN",19,9925,1,2,0)
Data Capture project.  This option allows a user to do data entry on a single
"KRN",19,9925,1,3,0)
form at a time.  Input is based on the form design.
"KRN",19,9925,25)
IBDFDE
"KRN",19,9925,"U")
DATA ENTRY BY FORM
"KRN",19,9926,-1)
0^4
"KRN",19,9926,0)
IBD MANUAL DATA ENTRY GROUP^Group Clinic Data entry^** This option is OUT OF ORDER **^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,9926,1,0)
^^7^7^2960507^
"KRN",19,9926,1,1,0)
This option allows manual data entry of encounter data for the Ambulatory
"KRN",19,9926,1,2,0)
Data Capture project.  The user selects a clinic and appointment date/time,
"KRN",19,9926,1,3,0)
and may de-select specific patient, otherwise after completing data entry
"KRN",19,9926,1,4,0)
for a single patient, the data will then be entered for all patients with
"KRN",19,9926,1,5,0)
the same appointment date/time.  All forms for the
"KRN",19,9926,1,6,0)
encounter will be asked.  If no forms were printed for the encounter the
"KRN",19,9926,1,7,0)
user can select the form to for data entry without having to print the form.
"KRN",19,9926,25)
IBDFDE7
"KRN",19,9926,"U")
GROUP CLINIC DATA ENTRY
"KRN",19,9928,-1)
0^6
"KRN",19,9928,0)
IBD MANUAL DATA ENTRY PRE^Pre-printed Form Data Entry^** This option is OUT OF ORDER **^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,9928,1,0)
^^3^3^2970613^^^^
"KRN",19,9928,1,1,0)
This option will allow data entry of forms that are pre-printed without
"KRN",19,9928,1,2,0)
patient data for unscheduled visits such as occur in emergency rooms.
"KRN",19,9928,1,3,0)

"KRN",19,9928,25)
IBDFDE8
"KRN",19,9928,"U")
PRE-PRINTED FORM DATA ENTRY
"KRN",19,9929,-1)
0^5
"KRN",19,9929,0)
IBD MANUAL DATA DISPLAY^Form Component Inquiry^** This option is OUT OF ORDER **^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,9929,1,0)
^^3^3^2960610^
"KRN",19,9929,1,1,0)
This option will display the components of a form that are available for
"KRN",19,9929,1,2,0)
data entry, the selection rules, and any associated data qualifers.  Use
"KRN",19,9929,1,3,0)
this to determine if the form has been set up correctly.
"KRN",19,9929,25)
IBDFDE9
"KRN",19,9929,"U")
FORM COMPONENT INQUIRY
"KRN",19,10332,-1)
0^1
"KRN",19,10332,0)
IBD SCANNING WORKSTATION^AICS Scanning Workstation^** This option is OUT OF ORDER **^B^^^^^^^^
"KRN",19,10332,99.1)
59017,32517
"KRN",19,10332,"RPC",0)
^19.05P^25^25
"KRN",19,10332,"RPC",1,0)
IBD ELAPSED TIME
"KRN",19,10332,"RPC",2,0)
IBD EXPAND FORMID
"KRN",19,10332,"RPC",3,0)
IBD GET FORMSPEC
"KRN",19,10332,"RPC",4,0)
IBD RECEIVE DATA
"KRN",19,10332,"RPC",5,0)
IBD RECEIVE FORM DATA
"KRN",19,10332,"RPC",6,0)
IBD RETURN IMAGE ID
"KRN",19,10332,"RPC",7,0)
IBD VALIDATE USER
"KRN",19,10332,"RPC",8,0)
SC LISTER
"KRN",19,10332,"RPC",9,0)
SC GETS ENTRY DATA
"KRN",19,10332,"RPC",10,0)
IBD STORE IMAGE NAME
"KRN",19,10332,"RPC",11,0)
IBD STORE WORKSTATION ERROR
"KRN",19,10332,"RPC",12,0)
SC FILER
"KRN",19,10332,"RPC",13,0)
IBD GET ALL PCE DATA
"KRN",19,10332,"RPC",14,0)
IBD GET PAST APPT LIST
"KRN",19,10332,"RPC",15,0)
IBD GET FORMSPEC GLOBAL
"KRN",19,10332,"RPC",16,0)
IBD GET SCAN PAGE INFO
"KRN",19,10332,"RPC",17,0)
DDR DELETE ENTRY
"KRN",19,10332,"RPC",18,0)
DDR FILER
"KRN",19,10332,"RPC",19,0)
DDR FIND1
"KRN",19,10332,"RPC",20,0)
DDR FINDER
"KRN",19,10332,"RPC",21,0)
DDR GET DD HELP
"KRN",19,10332,"RPC",22,0)
DDR GETS ENTRY DATA
"KRN",19,10332,"RPC",23,0)
DDR LISTER
"KRN",19,10332,"RPC",24,0)
DDR LOCK/UNLOCK NODE
"KRN",19,10332,"RPC",25,0)
DDR VALIDATOR
"KRN",19,10332,"U")
AICS SCANNING WORKSTATION
"KRN",19.1,476,-1)
1^1
"KRN",19.1,476,0)
IBD SCAN MANAGER
"KRN",8994,70,-1)
0^2
"KRN",8994,70,0)
IBD EXPAND FORMID^IDPAT^IBDFRPC3^1^P^1
"KRN",8994,70,1,0)
^^3^3^2971009^^^^
"KRN",8994,70,1,1,0)
This call will convert a form id (printed at the top of an encounter form)
"KRN",8994,70,1,2,0)
and return information about the patient, the appointment, and the form.
"KRN",8994,70,1,3,0)
See routine IBDRPC3 for output descritpion.
"KRN",8994,70,2,0)
^8994.02A^1^1
"KRN",8994,70,2,1,0)
FORMID^1^40^1
"KRN",8994,70,2,1,1,0)
^^2^2^2971009^^^^
"KRN",8994,70,2,1,1,1,0)
This is the form id printed at the top of the encounter form, and should
"KRN",8994,70,2,1,1,2,0)
match and internal entry number from the FORM TRACKING file (357.96).
"KRN",8994,70,2,"B","FORMID",1)

"KRN",8994,70,3,0)
^^1^1^2971009^^^^
"KRN",8994,70,3,1,0)
Returns a 17 piece record, see IBDRPC3 for details.
"KRN",8994,71,-1)
0^3
"KRN",8994,71,0)
IBD GET FORMSPEC^GETFS^IBDFBK1^2^R^1
"KRN",8994,71,1,0)
^^4^4^2960604^
"KRN",8994,71,1,1,0)
This call will return the Form Specification file (as an array) that is
"KRN",8994,71,1,2,0)
used by the scanning software to recognize a form.  Lines longer than
"KRN",8994,71,1,3,0)
255 characters are truncated on the server and flagged with "~~~"
"KRN",8994,71,1,4,0)
indicating the need to concatenate on the client.
"KRN",8994,71,2,0)
^8994.02A^1^1
"KRN",8994,71,2,1,0)
FORMTYPE^1^20^1
"KRN",8994,71,2,1,1,0)
^^2^2^2960604^
"KRN",8994,71,2,1,1,1,0)
Input the form type number from the top of the form, (the left most
"KRN",8994,71,2,1,1,2,0)
number)
"KRN",8994,71,2,"B","FORMTYPE",1)

"KRN",8994,71,3,0)
^^1^1^2960604^
"KRN",8994,71,3,1,0)
Returns an array that is to be saved on the client as a formspec file.
"KRN",8994,75,-1)
0^5
"KRN",8994,75,0)
IBD RECEIVE FORM DATA^RECV^IBDFBK2^2^R^1
"KRN",8994,75,1,0)
^^3^3^2990310^^^
"KRN",8994,75,1,1,0)
This RPC is to be used by the AICS workstation software only.  It accepts
"KRN",8994,75,1,2,0)
data in the format returned by the scanning software and converts the
"KRN",8994,75,1,3,0)
data in the format expected by PCE and passes the data to PCE.
"KRN",8994,75,2,0)
^8994.02A^1^1
"KRN",8994,75,2,1,0)
FORMDATA^2^245^1
"KRN",8994,75,2,1,1,0)
^^1^1^2990310^^^
"KRN",8994,75,2,1,1,1,0)
This is the input data.
"KRN",8994,75,2,"B","FORMDATA",1)

"KRN",8994,75,3,0)
^^2^2^2990310^^^
"KRN",8994,75,3,1,0)
Returns an array of data describing the input data in human readable
"KRN",8994,75,3,2,0)
terms and any errors and warnings sent by PCE.
"KRN",8994,76,-1)
0^7
"KRN",8994,76,0)
IBD VALIDATE USER^VALIDAV^IBDFBK1^1^R^1
"KRN",8994,76,1,0)
^^2^2^2980420^^
"KRN",8994,76,1,1,0)
This call is used to validate user information and for display on the
"KRN",8994,76,1,2,0)
Show User screen.
"KRN",8994,76,2,0)
^8994.02A^1^1
"KRN",8994,76,2,1,0)
IBDAV^2^40^1
"KRN",8994,76,2,1,1,0)
^^1^1^2980420^^
"KRN",8994,76,2,1,1,1,0)
validates that user is holder of specified security key.
"KRN",8994,76,2,"B","IBDAV",1)

"KRN",8994,76,3,0)
^^1^1^2980420^^
"KRN",8994,76,3,1,0)
returns an 11 piece record of user/system information
"KRN",8994,77,-1)
0^4
"KRN",8994,77,0)
IBD RECEIVE DATA^SEND^IBDFRPC4^2^P^1
"KRN",8994,77,1,0)
^^3^3^2970325^^
"KRN",8994,77,1,1,0)
This call is the public RPC for developers to input data from an
"KRN",8994,77,1,2,0)
encounter form to AICS for processing to PCE.  See routine IBDFRPC4
"KRN",8994,77,1,3,0)
for detailed description of variables.
"KRN",8994,77,2,0)
^8994.02A^1^1
"KRN",8994,77,2,1,0)
IBDF^2^245^1
"KRN",8994,77,2,1,1,0)
^^2^2^2960604^
"KRN",8994,77,2,1,1,1,0)
See routine IBDFRPC4 for details of required variables.  See routines
"KRN",8994,77,2,1,1,2,0)
IBDFDE* for examples of use.
"KRN",8994,77,2,"B","IBDF",1)

"KRN",8994,77,3,0)
^^1^1^2960604^
"KRN",8994,77,3,1,0)
Returns status of passing of data to PCE.
"KRN",8994,78,-1)
0^6
"KRN",8994,78,0)
IBD RETURN IMAGE ID^IMAGEID^IBDFBK1^1^P^1
"KRN",8994,78,1,0)
^^2^2^2960815^
"KRN",8994,78,1,1,0)
Returns a numeric between 1 and 9999999 that is used as part of the file
"KRN",8994,78,1,2,0)
name to store the next unknown image as.
"KRN",8994,78,3,0)
^^1^1^2960815^
"KRN",8994,78,3,1,0)
numeric
"KRN",8994,79,-1)
0^1
"KRN",8994,79,0)
IBD ELAPSED TIME^ETIME^IBDFBK1^1^P^1
"KRN",8994,79,1,0)
^8994.01^1^1^3030603^^^
"KRN",8994,79,1,1,0)
Store elapsed time for data entry
"KRN",8994,79,2,0)
^8994.02A^1^1
"KRN",8994,79,2,1,0)
IBDF^2^30^1
"KRN",8994,79,2,"B","IBDF",1)

"KRN",8994,80,-1)
0^9
"KRN",8994,80,0)
IBD STORE WORKSTATION ERROR^WSERR^IBDFBK1^1^P^1
"KRN",8994,80,1,0)
^^2^2^2970321^
"KRN",8994,80,1,1,0)
This call back is used by AICS to log entries in the AICS ERROR AND WARNING
"KRN",8994,80,1,2,0)
FILE when the recognition of a form is canceled or otherwise interrupted.
"KRN",8994,80,2,0)
^8994.02A^1^1
"KRN",8994,80,2,1,0)
FORMID^2^40^1
"KRN",8994,80,2,"B","FORMID",1)

"KRN",8994,81,-1)
0^8
"KRN",8994,81,0)
IBD STORE IMAGE NAME^IMAGENM^IBDFBK1^1^P^1
"KRN",8994,81,1,0)
^^2^2^2970321^
"KRN",8994,81,1,1,0)
This RPC will cause the information on images saved to be stored in the
"KRN",8994,81,1,2,0)
AICS IMAGE LOG file.
"KRN",8994,81,2,0)
^8994.02A^1^1
"KRN",8994,81,2,1,0)
FORMID^2^80^1
"KRN",8994,81,2,"B","FORMID",1)

"KRN",8994,132,-1)
0^10
"KRN",8994,132,0)
IBD GET ALL PCE DATA^GETALL^IBDFRPC5^2^P^1
"KRN",8994,132,1,0)
^^2^2^2971009^^^^
"KRN",8994,132,1,1,0)
This RPC is used to retrieve all data in PCE for a particlar encounter
"KRN",8994,132,1,2,0)
formatted for display in a memo component.
"KRN",8994,132,2,0)
^8994.02A^1^1
"KRN",8994,132,2,1,0)
IBDATA^2^80^1
"KRN",8994,132,2,"B","IBDATA",1)

"KRN",8994,133,-1)
0^11
"KRN",8994,133,0)
IBD GET PAST APPT LIST^APPTLST^IBDFRPC5^2^P^1
"KRN",8994,133,1,0)
^^2^2^2971224^^^
"KRN",8994,133,1,1,0)
This RPC can be used to return a list of appointments for a patient.  It
"KRN",8994,133,1,2,0)
defaults to returning the past 1 year's kept appointments.
"KRN",8994,133,2,0)
^8994.02A^1^1
"KRN",8994,133,2,1,0)
IBDF^2^30^1
"KRN",8994,133,2,1,1,0)
^^4^4^2970722^
"KRN",8994,133,2,1,1,1,0)
Requires the variable IBDF("DFN") be set to the patient internal entry number.
"KRN",8994,133,2,1,1,2,0)
IBDF("F") is the from date (defaults to t-1year)
"KRN",8994,133,2,1,1,3,0)
IBDF("T") is the to date (defaults to t@midnight)
"KRN",8994,133,2,1,1,4,0)
IBDF("W") is the types of appointments to return, see SDA^VAPDT
"KRN",8994,133,2,"B","IBDF",1)

"KRN",8994,133,3,0)
^^9^9^2971224^^
"KRN",8994,133,3,1,0)
Returns the list of appointments in reverse chronological order,
"KRN",8994,133,3,2,0)
     p1 := appointment date (external)
"KRN",8994,133,3,3,0)
     p2 := clinic (external)
"KRN",8994,133,3,4,0)
     p3 := status (external)
"KRN",8994,133,3,5,0)
     p4 := appt type (external)
"KRN",8994,133,3,6,0)
     p5 := appointment date (internal)
"KRN",8994,133,3,7,0)
     p6 := clinic (internal)
"KRN",8994,133,3,8,0)
     p7 := status (internal)
"KRN",8994,133,3,9,0)
     p8 := appt type (internal)
"KRN",8994,553,-1)
0^12
"KRN",8994,553,0)
IBD GET FORMSPEC GLOBAL^GETFS1^IBDFBK1^4^P^1^^1
"KRN",8994,553,2,0)
^8994.02A^2^1
"KRN",8994,553,2,2,0)
IBDF^2^30^1
"KRN",8994,553,2,2,1,0)
^8994.021^1^1^3010514^^^^
"KRN",8994,553,2,2,1,1,0)
This will contain the form id and version of paper keyboard
"KRN",8994,553,2,"B","IBDF",2)

"KRN",8994,553,3,0)
^8994.03^2^2^3010514^^
"KRN",8994,553,3,1,0)
The value returned in the formspec file from file 359.2.  This is to be
"KRN",8994,553,3,2,0)
stored by the AICS workstation as an EFnnn.fs or EF32_OInnnn.fs
"KRN",8994,554,-1)
0^13
"KRN",8994,554,0)
IBD GET SCAN PAGE INFO^SCANPG^IBDFBK1^2^P^1
"KRN",8994,554,1,0)
^^2^2^2990322^^^
"KRN",8994,554,1,1,0)
This RPC will return an array where the data reflects the page number of
"KRN",8994,554,1,2,0)
scannable pages, Piece 2 will display the date/time received.
"KRN",8994,554,2,0)
^8994.02A^1^1
"KRN",8994,554,2,1,0)
FORMID^1^30^1^1
"KRN",8994,554,2,"B","FORMID",1)

"KRN",8994,554,2,"PARAMSEQ",1,1)

"MBREQ")
1
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",485,-1)
1^1
"PKG",485,0)
AUTOMATED INFO COLLECTION SYS^IBD^The utilities for generating a paper encounter form.
"PKG",485,22,0)
^9.49I^1^1
"PKG",485,22,1,0)
3.0^2970212^2970505^11715
"PKG",485,22,1,"PAH",1,0)
51^3030916^100997
"PKG",485,22,1,"PAH",1,1,0)
^^2^2^3030916
"PKG",485,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for details
"PKG",485,22,1,"PAH",1,1,2,0)
of the enhancements included in this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
20
"RTN","IBDF18A")
0^1^B47580981
"RTN","IBDF18A",1,0)
IBDF18A ;ALB/CJM/AAS - ENCOUNTER FORM - utilities for PCE ;12-AUG-94
"RTN","IBDF18A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**34,38,51**;APR 24, 1997
"RTN","IBDF18A",3,0)
 ;                                       
"RTN","IBDF18A",4,0)
GLL(CLINIC,INTRFACE,ARY,FILTER,PAR5,PAR6,ENCDATE) ; -- get lots of lists in one call
"RTN","IBDF18A",5,0)
 ; -- input see GETLST but pass interface by reference expects
"RTN","IBDF18A",6,0)
 ;    intrface(n) = name of select list in package interface file
"RTN","IBDF18A",7,0)
 ;
"RTN","IBDF18A",8,0)
 ; -- PAR5 => not currently used
"RTN","IBDF18A",9,0)
 ; -- PAR6 => not currently used
"RTN","IBDF18A",10,0)
 ;
"RTN","IBDF18A",11,0)
 ; -- output see GETLST
"RTN","IBDF18A",12,0)
 N X,COUNT
"RTN","IBDF18A",13,0)
 S COUNT=0
"RTN","IBDF18A",14,0)
 S X="" F  S X=$O(INTRFACE(X)) Q:X=""  D GETLST(CLINIC,INTRFACE(X),ARY,$G(FILTER),.COUNT,$G(PAR6),ENCDATE)
"RTN","IBDF18A",15,0)
 Q
"RTN","IBDF18A",16,0)
 ;
"RTN","IBDF18A",17,0)
GETLST(CLINIC,INTRFACE,ARY,FILTER,COUNT,MODIFIER,ENCDATE) ; -- returns any specified selection list for a clinic
"RTN","IBDF18A",18,0)
 ; -- input  CLINIC = pointer to hospital location file for clinic
"RTN","IBDF18A",19,0)
 ;         INTRFACE = name of selection list in package interface file
"RTN","IBDF18A",20,0)
 ;              ARY = name of array to return list in
"RTN","IBDF18A",21,0)
 ;           FILTER = predefined filters (optional, default = 1)
"RTN","IBDF18A",22,0)
 ;                                       1 = must be selection list
"RTN","IBDF18A",23,0)
 ;                                       2 = only visit cpts on list
"RTN","IBDF18A",24,0)
 ;          ENCDATE = encounter date
"RTN","IBDF18A",25,0)
 ;         MODIFIER = if modifiers are to be passed, 1=yes send modifiers
"RTN","IBDF18A",26,0)
 ;                                                   
"RTN","IBDF18A",27,0)
 ; -- output  The format of the returned array is as follows
"RTN","IBDF18A",28,0)
 ;         @ARY@(0) = count of array element (0 of nothing found)
"RTN","IBDF18A",29,0)
 ;         @ARY@(1) = ^group header
"RTN","IBDF18A",30,0)
 ;         @ARY@(2) = P1 := cpt or icd code / ien of other items
"RTN","IBDF18A",31,0)
 ;                    P2 := user defined text
"RTN","IBDF18A",32,0)
 ;                    p6 := user defined expanded text to send to PCE
"RTN","IBDF18A",33,0)
 ;                    p7 := second code or item defined for line item
"RTN","IBDF18A",34,0)
 ;                    p8 := third code or item defined for line item
"RTN","IBDF18A",35,0)
 ;                    p9 := associated clinical lexicon term
"RTN","IBDF18A",36,0)
 ;                       
"RTN","IBDF18A",37,0)
 ;         @ARY@(2,"MODIFIER",0)=count of CPT Modifiers for entry
"RTN","IBDF18A",38,0)
 ;         @ARY@(2,"MODIFIER",1)=2 character CPT Modifier value
"RTN","IBDF18A",39,0)
 ;         @ARY@(2,"MODIFIER",2)=2 character CPT Modifier value
"RTN","IBDF18A",40,0)
 ;         @ARY@(2,"MODIFIER",k+1)=2 character CPT Modifier value
"RTN","IBDF18A",41,0)
 ;        
"RTN","IBDF18A",42,0)
 ;         @ARY@(k) = ^next group header
"RTN","IBDF18A",43,0)
 ;         @ARY@(k+1) = problem ien or cpt or icd code^user define text
"RTN","IBDF18A",44,0)
 ;
"RTN","IBDF18A",45,0)
 ; -- output modification for patch 34:
"RTN","IBDF18A",46,0)
 ;         Narrative to Send to PCE (instead of printed text)
"RTN","IBDF18A",47,0)
 ;         field (2.01) in file 357.3, added as piece 6 of @ary@(n)
"RTN","IBDF18A",48,0)
 ;
"RTN","IBDF18A",49,0)
 ;         if additional codes for an item (diagnosis) are added to
"RTN","IBDF18A",50,0)
 ;         item, they are added as pieces 7 and/or 8 of @ary@(n).
"RTN","IBDF18A",51,0)
 ;
"RTN","IBDF18A",52,0)
 ;         if a type of visit code is requested and none found, will
"RTN","IBDF18A",53,0)
 ;         automatically look first for blocks named type of visit and
"RTN","IBDF18A",54,0)
 ;         second for filtered codes using regular cpt blocks.
"RTN","IBDF18A",55,0)
 ;
"RTN","IBDF18A",56,0)
 ;         if a diagnosis block it requested and none found will
"RTN","IBDF18A",57,0)
 ;         automagically look for Clinic Common Problem List and
"RTN","IBDF18A",58,0)
 ;         then convert it to look like a diagnosis list
"RTN","IBDF18A",59,0)
 ;
"RTN","IBDF18A",60,0)
 N I,J,X,Y,INUM,IBQUIT,FORM,SETUP,LIST,BLOCK,OLDARY,IBDTMP,ROW,COL,BLK
"RTN","IBDF18A",61,0)
 N LIST1,PACKAGE
"RTN","IBDF18A",62,0)
 K ^TMP("IBDUP",$J)
"RTN","IBDF18A",63,0)
 S (IBQUIT,LIST)=0
"RTN","IBDF18A",64,0)
 S PACKAGE=$E(INTRFACE,1,30)
"RTN","IBDF18A",65,0)
 ;
"RTN","IBDF18A",66,0)
 ;Setup array containing NAME of the Package Interface file
"RTN","IBDF18A",67,0)
 ;This is the second paramenter passed by PCE, TIU, & CPRS
"RTN","IBDF18A",68,0)
 S LIST1("DG SELECT CPT PROCEDURE CODES")=""
"RTN","IBDF18A",69,0)
 S LIST1("DG SELECT ICD-9 DIAGNOSIS CODE")=""
"RTN","IBDF18A",70,0)
 S LIST1("DG SELECT VISIT TYPE CPT PROCE")=""
"RTN","IBDF18A",71,0)
 S LIST1("GMP INPUT CLINIC COMMON PROBLE")=""
"RTN","IBDF18A",72,0)
 S LIST1("GMP PATIENT ACTIVE PROBLEMS")=""
"RTN","IBDF18A",73,0)
 ;
"RTN","IBDF18A",74,0)
 S COUNT=$G(COUNT,0)
"RTN","IBDF18A",75,0)
 I $G(FILTER)<1 S FILTER=1 ;default value=1
"RTN","IBDF18A",76,0)
 I FILTER>1 S OLDARY=ARY,ARY="IBDTMP"
"RTN","IBDF18A",77,0)
 S @ARY@(0)=+$G(@ARY@(0))
"RTN","IBDF18A",78,0)
 I $G(CLINIC)="" G GETLSTQ
"RTN","IBDF18A",79,0)
 I $G(^SC(CLINIC,0))="" G GETLSTQ
"RTN","IBDF18A",80,0)
 I $G(INTRFACE)="" G GETLSTQ
"RTN","IBDF18A",81,0)
 S INUM=$O(^IBE(357.6,"B",$E(INTRFACE,1,30),0))
"RTN","IBDF18A",82,0)
 ; 
"RTN","IBDF18A",83,0)
 ; -- find forms defined for clinic
"RTN","IBDF18A",84,0)
 ;    piece 2 = basic form
"RTN","IBDF18A",85,0)
 ;    piece 3,4,6 = supplemental forms
"RTN","IBDF18A",86,0)
 S SETUP=$G(^SD(409.95,+$O(^SD(409.95,"B",CLINIC,0)),0))
"RTN","IBDF18A",87,0)
 G:SETUP="" GETLSTQ
"RTN","IBDF18A",88,0)
 F I=2,3,4,6,8,9 S FORM=$P(SETUP,"^",I) D  Q:IBQUIT
"RTN","IBDF18A",89,0)
 .;
"RTN","IBDF18A",90,0)
 .; -- find blocks on forms
"RTN","IBDF18A",91,0)
 .Q:'FORM
"RTN","IBDF18A",92,0)
 . D GETBLKS Q:'$O(BLK(0))
"RTN","IBDF18A",93,0)
 . S (ROW,COL)=""
"RTN","IBDF18A",94,0)
 . F  S ROW=$O(BLK(ROW)) Q:ROW=""  S COL="" F  S COL=$O(BLK(ROW,COL)) Q:COL=""  S BLOCK=$G(BLK(+ROW,+COL)) D
"RTN","IBDF18A",95,0)
 ..;
"RTN","IBDF18A",96,0)
 ..; -- see if package interface defined for blocks
"RTN","IBDF18A",97,0)
 ..S LIST=0
"RTN","IBDF18A",98,0)
 ..F  S LIST=$O(^IBE(357.2,"C",BLOCK,LIST)) Q:'LIST  I $P($G(^IBE(357.2,LIST,0)),"^",11)=INUM D COPYLIST^IBDF18A1(LIST,ARY,.COUNT)
"RTN","IBDF18A",99,0)
 ;I COUNT D URH^IBDF18A1
"RTN","IBDF18A",100,0)
 S @ARY@(0)=COUNT
"RTN","IBDF18A",101,0)
 I FILTER=2 D F2^IBDF18A1(OLDARY)
"RTN","IBDF18A",102,0)
 ;
"RTN","IBDF18A",103,0)
 I COUNT=0 D
"RTN","IBDF18A",104,0)
 .I $E(INTRFACE,1,30)=$E("DG SELECT VISIT TYPE CPT PROCEDURES",1,30) D TOV
"RTN","IBDF18A",105,0)
 ;
"RTN","IBDF18A",106,0)
 ; -- always check for both diagnosis and clinic common problems when
"RTN","IBDF18A",107,0)
 ;    looking for diagnosis, return in diagnosis format
"RTN","IBDF18A",108,0)
 I $E(INTRFACE,1,30)=$E("DG SELECT ICD-9 DIAGNOSIS CODES",1,30) D CCP(COUNT)
"RTN","IBDF18A",109,0)
 ;This routine checks list that have CPT & ICD codes for CSV.
"RTN","IBDF18A",110,0)
 D CHKLST^IBDF18A2:$D(LIST1(PACKAGE))
"RTN","IBDF18A",111,0)
 ;
"RTN","IBDF18A",112,0)
 K ^TMP("IBDUP",$J)
"RTN","IBDF18A",113,0)
 ;
"RTN","IBDF18A",114,0)
GETLSTQ Q
"RTN","IBDF18A",115,0)
 ;
"RTN","IBDF18A",116,0)
GETBLKS ; -- get the blocks for a form in row,column order
"RTN","IBDF18A",117,0)
 K BLK
"RTN","IBDF18A",118,0)
 N ROW,COL
"RTN","IBDF18A",119,0)
 S BLK=0
"RTN","IBDF18A",120,0)
 F  S BLK=$O(^IBE(357.1,"C",FORM,BLK)) Q:'BLK  D
"RTN","IBDF18A",121,0)
 . S ROW=$P($G(^IBE(357.1,+BLK,0)),"^",4),COL=$P(^(0),"^",5)
"RTN","IBDF18A",122,0)
 . Q:ROW=""!(COL="")
"RTN","IBDF18A",123,0)
 . S BLK(ROW,COL)=BLK
"RTN","IBDF18A",124,0)
 Q
"RTN","IBDF18A",125,0)
 ;
"RTN","IBDF18A",126,0)
CCP(COUNT) ; -- no diagnosis, look for common problems and convert
"RTN","IBDF18A",127,0)
 N I,X,OLDCNT
"RTN","IBDF18A",128,0)
 S OLDCNT=COUNT
"RTN","IBDF18A",129,0)
 ;
"RTN","IBDF18A",130,0)
 ; -- get the clinic common problem list
"RTN","IBDF18A",131,0)
 D GETLST(CLINIC,"GMP SELECT CLINIC COMMON PROBLEMS",ARY,"",COUNT)
"RTN","IBDF18A",132,0)
 ;
"RTN","IBDF18A",133,0)
 ; -- now convert it to primary icd code save lexicon pointer in piece 6
"RTN","IBDF18A",134,0)
 S I=OLDCNT
"RTN","IBDF18A",135,0)
 F  S I=$O(VAR(I)) Q:I=""  D
"RTN","IBDF18A",136,0)
 .S X=+VAR(I)
"RTN","IBDF18A",137,0)
 . S:X $P(VAR(I),"^",9)=X,$P(VAR(I),"^",1)=$$ICDONE^LEXU(X)
"RTN","IBDF18A",138,0)
 . I $P(VAR(I),"^",7) S $P(VAR(I),"^",7)=$$ICDONE^LEXU($P(VAR(I),"^",7))
"RTN","IBDF18A",139,0)
 . I $P(VAR(I),"^",8) S $P(VAR(I),"^",8)=$$ICDONE^LEXU($P(VAR(I),"^",8))
"RTN","IBDF18A",140,0)
 Q
"RTN","IBDF18A",141,0)
 ;
"RTN","IBDF18A",142,0)
TOV ; -- if trying to find Type of Visit codes but list on form
"RTN","IBDF18A",143,0)
 ;    uses another interface try this
"RTN","IBDF18A",144,0)
 ;
"RTN","IBDF18A",145,0)
 N INUM
"RTN","IBDF18A",146,0)
 S INUM=0
"RTN","IBDF18A",147,0)
 F  S INUM=$O(^IBE(357.6,"B","DG SELECT CPT PROCEDURE CODES",INUM)) Q:'INUM  S INUM(INUM)=""
"RTN","IBDF18A",148,0)
 D TOV1
"RTN","IBDF18A",149,0)
 I COUNT=0 D TOV2
"RTN","IBDF18A",150,0)
 Q
"RTN","IBDF18A",151,0)
 ;
"RTN","IBDF18A",152,0)
TOV1 ; -- first get all lists for blocks named Type of Visit or E&M
"RTN","IBDF18A",153,0)
 N NM,HD
"RTN","IBDF18A",154,0)
 F I=2,3,4,6,8,9 S FORM=$P(SETUP,"^",I) D:+FORM  Q:IBQUIT
"RTN","IBDF18A",155,0)
 . ;
"RTN","IBDF18A",156,0)
 . ; -- find blocks on forms
"RTN","IBDF18A",157,0)
 . D GETBLKS Q:'$O(BLK(0))
"RTN","IBDF18A",158,0)
 . S (ROW,COL)=""
"RTN","IBDF18A",159,0)
 . F  S ROW=$O(BLK(ROW)) Q:ROW=""  S COL="" F  S COL=$O(BLK(ROW,COL)) Q:COL=""  S BLOCK=$G(BLK(+ROW,+COL)) D
"RTN","IBDF18A",160,0)
 .. ;
"RTN","IBDF18A",161,0)
 .. S NM=$P($G(^IBE(357.1,BLOCK,0)),"^",1)
"RTN","IBDF18A",162,0)
 .. S NM=$TR(NM,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","IBDF18A",163,0)
 .. S HD=$P($G(^IBE(357.1,BLOCK,0)),"^",11)
"RTN","IBDF18A",164,0)
 .. S HD=$TR(HD,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","IBDF18A",165,0)
 .. I NM["TYPE OF VISIT"!(NM["VISIT TYPE")!(HD["TYPE OF VISIT")!(HD["VISIT TYPE")!(NM["E&M")!(NM["E & M")!(HD["E&M")!(HD["E & M") D
"RTN","IBDF18A",166,0)
 ... S LIST=0
"RTN","IBDF18A",167,0)
 ... F  S LIST=$O(^IBE(357.2,"C",BLOCK,LIST)) Q:'LIST  D
"RTN","IBDF18A",168,0)
 .... I $D(INUM($P($G(^IBE(357.2,LIST,0)),"^",11))) D COPYLIST^IBDF18A1(LIST,ARY,.COUNT) K BLK(ROW,COL)
"RTN","IBDF18A",169,0)
 Q
"RTN","IBDF18A",170,0)
 ;
"RTN","IBDF18A",171,0)
TOV2 ; -- get the type of visit codes from cpt lists using filter
"RTN","IBDF18A",172,0)
 S OLDARY=ARY,ARY="IBDTMP"
"RTN","IBDF18A",173,0)
 S @ARY@(0)=+$G(@ARY@(0))
"RTN","IBDF18A",174,0)
 ;
"RTN","IBDF18A",175,0)
 F I=2,3,4,6,8,9 S FORM=$P(SETUP,"^",I) D:+FORM  Q:IBQUIT
"RTN","IBDF18A",176,0)
 . ;
"RTN","IBDF18A",177,0)
 . ; -- find blocks on forms
"RTN","IBDF18A",178,0)
 . S (ROW,COL)=""
"RTN","IBDF18A",179,0)
 . F  S ROW=$O(BLK(ROW)) Q:ROW=""  S COL="" F  S COL=$O(BLK(ROW,COL)) Q:COL=""  S BLOCK=$G(BLK(+ROW,+COL)) D
"RTN","IBDF18A",180,0)
 .. ;
"RTN","IBDF18A",181,0)
 .. ; -- see if package interface defined for blocks
"RTN","IBDF18A",182,0)
 .. S LIST=0
"RTN","IBDF18A",183,0)
 .. F  S LIST=$O(^IBE(357.2,"C",BLOCK,LIST)) Q:'LIST  I $D(INUM($P($G(^IBE(357.2,LIST,0)),"^",11))) D COPYLIST^IBDF18A1(LIST,ARY,.COUNT)
"RTN","IBDF18A",184,0)
 D F2^IBDF18A1(OLDARY)
"RTN","IBDF18A",185,0)
 Q
"RTN","IBDF18A",186,0)
 ;
"RTN","IBDF18A",187,0)
 ; -- here are some sample tests for different lists
"RTN","IBDF18A",188,0)
TEST1 K VAR D GETLST(573,"DG SELECT ICD-9 DIAGNOSIS CODES","VAR",1,"","",DT)
"RTN","IBDF18A",189,0)
 X "ZW VAR"
"RTN","IBDF18A",190,0)
 Q
"RTN","IBDF18A",191,0)
 ;
"RTN","IBDF18A",192,0)
TEST2 K VAR D GETLST(301,"DG SELECT ICD-9 DIAGNOSIS CODES","VAR",1,"","",DT)
"RTN","IBDF18A",193,0)
 X "ZW VAR"
"RTN","IBDF18A",194,0)
 Q
"RTN","IBDF18A",195,0)
 ;
"RTN","IBDF18A",196,0)
TEST4 K VAR D GETLST(300,"DG SELECT VISIT TYPE CPT PROCEDURES","VAR",1,"",1,DT)
"RTN","IBDF18A",197,0)
 X "ZW VAR"
"RTN","IBDF18A",198,0)
 Q
"RTN","IBDF18A",199,0)
 ;
"RTN","IBDF18A",200,0)
TEST5 K VAR D GETLST(300,"PX SELECT IMMUNIZATIONS","VAR",1,DT)
"RTN","IBDF18A",201,0)
 X "ZW VAR"
"RTN","IBDF18A",202,0)
 Q
"RTN","IBDF18A",203,0)
 ;
"RTN","IBDF18A",204,0)
TEST5A K VAR D GETLST(300,"PX SELECT SKIN TESTS","VAR",1,DT)
"RTN","IBDF18A",205,0)
 X "ZW VAR"
"RTN","IBDF18A",206,0)
 Q
"RTN","IBDF18A",207,0)
 ;
"RTN","IBDF18A",208,0)
TEST6 K VAR D GETLST(573,"DG SELECT CPT PROCEDURE CODES","VAR",1,"",1,DT)
"RTN","IBDF18A",209,0)
 X "ZW VAR"
"RTN","IBDF18A",210,0)
 Q
"RTN","IBDF18A",211,0)
 ;
"RTN","IBDF18A",212,0)
TEST7 K VAR D GETLST(573,"DG SELECT VISIT TYPE CPT PROCEDURES","VAR",1,"",1,DT)
"RTN","IBDF18A",213,0)
 X "ZW VAR"
"RTN","IBDF18A",214,0)
 Q
"RTN","IBDF18A",215,0)
 ;
"RTN","IBDF18A",216,0)
TEST8 ; -- use this to test CPRS ability to retrieve type of visit
"RTN","IBDF18A",217,0)
 ;    set clinic := name or internal entry number of clinic or change
"RTN","IBDF18A",218,0)
 ;    value for specific clinic
"RTN","IBDF18A",219,0)
 K VAR
"RTN","IBDF18A",220,0)
 I $G(CLINIC)="" S CLINIC=300
"RTN","IBDF18A",221,0)
 I CLINIC'=+CLINIC W !,"Using Clinic: ",CLINIC S CLINIC=$O(^SC("B",CLINIC,0)) W !,"IEN: ",CLINIC,! H 5
"RTN","IBDF18A",222,0)
 X "D VISIT^ORWPCE(.VAR,CLINIC) ZW VAR"
"RTN","IBDF18A",223,0)
 Q
"RTN","IBDF18A",224,0)
 ;
"RTN","IBDF18A",225,0)
TEST9 K VAR D GETLST(301,"GMP SELECT CLINIC COMMON PROBLEMS","VAR",1)
"RTN","IBDF18A",226,0)
 X "ZW VAR"
"RTN","IBDF18A",227,0)
 Q
"RTN","IBDF18A2")
0^12^B4955786
"RTN","IBDF18A2",1,0)
IBDF18A2 ;WISC/TN - ENCOUNTER FORM - utilities for PCE ;30-APR-03
"RTN","IBDF18A2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**51**;APR 30, 2003
"RTN","IBDF18A2",3,0)
 ;
"RTN","IBDF18A2",4,0)
 QUIT  ;CAll at CHKLST
"RTN","IBDF18A2",5,0)
 ;
"RTN","IBDF18A2",6,0)
CHKLST ;Create a new list to pass to calling packages.
"RTN","IBDF18A2",7,0)
 ;The new array will have CPT or ICD codes which
"RTN","IBDF18A2",8,0)
 ;are valid for the encounter date passed.
"RTN","IBDF18A2",9,0)
 ;
"RTN","IBDF18A2",10,0)
 ;CALLED BY: IBDF18A
"RTN","IBDF18A2",11,0)
 ;
"RTN","IBDF18A2",12,0)
 ;Quit if no date is passed.
"RTN","IBDF18A2",13,0)
 S ENCDATE=$G(ENCDATE) I ENCDATE="" Q
"RTN","IBDF18A2",14,0)
 ;
"RTN","IBDF18A2",15,0)
 NEW AA,ARY1,CNT,CNT1,CNT2,MOD,TYPE,NODE
"RTN","IBDF18A2",16,0)
 ;
"RTN","IBDF18A2",17,0)
 S CNT=0,AA=0,TYPE="",NODE="MODIFIER"
"RTN","IBDF18A2",18,0)
 S:PACKAGE="DG SELECT CPT PROCEDURE CODES" TYPE="CPT"
"RTN","IBDF18A2",19,0)
 S:PACKAGE="DG SELECT ICD-9 DIAGNOSIS CODE" TYPE="ICD"
"RTN","IBDF18A2",20,0)
 S:PACKAGE="DG SELECT VISIT TYPE CPT PROCE" TYPE="CPT"
"RTN","IBDF18A2",21,0)
 S:PACKAGE="GMP INPUT CLINIC COMMON PROBLE" TYPE="ICD"
"RTN","IBDF18A2",22,0)
 S:PACKAGE="GMP PATIENT ACTIVE PROBLEMS" TYPE="ICD"
"RTN","IBDF18A2",23,0)
 ;
"RTN","IBDF18A2",24,0)
 I TYPE="" D  Q
"RTN","IBDF18A2",25,0)
 . K @ARY
"RTN","IBDF18A2",26,0)
 . S @ARY@(0)=1
"RTN","IBDF18A2",27,0)
 . S @ARY@(1)="^AICS ERROR - Missing code type for "_PACKAGE
"RTN","IBDF18A2",28,0)
 ;
"RTN","IBDF18A2",29,0)
 ;Make copy of arry and kill the original
"RTN","IBDF18A2",30,0)
 M ARY1=@ARY KILL @ARY
"RTN","IBDF18A2",31,0)
 ;
"RTN","IBDF18A2",32,0)
 S CNT=0,AA=0
"RTN","IBDF18A2",33,0)
 F  S AA=$O(ARY1(AA)) Q:'AA  D
"RTN","IBDF18A2",34,0)
 . ;
"RTN","IBDF18A2",35,0)
 . I $E(ARY1(AA))="^" S CNT=CNT+1,@ARY@(CNT)=ARY1(AA) Q  ;header
"RTN","IBDF18A2",36,0)
 . ;
"RTN","IBDF18A2",37,0)
 . S CODE=$P(ARY1(AA),U) I CODE="" Q
"RTN","IBDF18A2",38,0)
 . ;
"RTN","IBDF18A2",39,0)
 . ;Validate the CPT code for the date passed
"RTN","IBDF18A2",40,0)
 . I TYPE="CPT" D  Q
"RTN","IBDF18A2",41,0)
 . . I $P($$CPT^ICPTCOD(CODE,ENCDATE),U,7)=1 D
"RTN","IBDF18A2",42,0)
 . . . S CNT=CNT+1,@ARY@(CNT)=ARY1(AA)
"RTN","IBDF18A2",43,0)
 . . . ;
"RTN","IBDF18A2",44,0)
 . . . ;Check for modifiers.
"RTN","IBDF18A2",45,0)
 . . . I '$G(ARY1(AA,NODE,0)) Q
"RTN","IBDF18A2",46,0)
 . . . ;
"RTN","IBDF18A2",47,0)
 . . . S CNT1=ARY1(AA,NODE,0)
"RTN","IBDF18A2",48,0)
 . . . F CNT2=1:1:CNT1 S MOD=ARY1(AA,NODE,CNT2) D
"RTN","IBDF18A2",49,0)
 . . . . ;
"RTN","IBDF18A2",50,0)
 . . . . ;If the status is 1 for the modifier
"RTN","IBDF18A2",51,0)
 . . . . I $P($$MOD^ICPTMOD(MOD,"E",ENCDATE),U,7)=1 D
"RTN","IBDF18A2",52,0)
 . . . . . S @ARY@(CNT,NODE,CNT2)=ARY1(AA,NODE,CNT2)
"RTN","IBDF18A2",53,0)
 . . . . . S @ARY@(CNT,NODE,0)=CNT2
"RTN","IBDF18A2",54,0)
 . . . . ;
"RTN","IBDF18A2",55,0)
 . ;Validate the ICD code for the date passed  
"RTN","IBDF18A2",56,0)
 . I $P($$ICDDX^ICDCODE(CODE,ENCDATE),U,10)=1 D
"RTN","IBDF18A2",57,0)
 . . S CNT=CNT+1,@ARY@(CNT)=ARY1(AA)
"RTN","IBDF18A2",58,0)
 ;
"RTN","IBDF18A2",59,0)
 S @ARY@(0)=CNT
"RTN","IBDF18A2",60,0)
 Q
"RTN","IBDF18E2")
0^13^B20127242
"RTN","IBDF18E2",1,0)
IBDF18E2 ;ALB/AAS - AICS Error Logging Routine ;27-JAN-97
"RTN","IBDF18E2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**25,51**;APR 24, 1997
"RTN","IBDF18E2",3,0)
 ;
"RTN","IBDF18E2",4,0)
LOGERR(ERRNO,FORMID,DATANO,VALUE,PI,QLFR,TYPEDTA,TXT) ;
"RTN","IBDF18E2",5,0)
 ; -- log aics scanning processing error
"RTN","IBDF18E2",6,0)
 N TEXT,IBDERR
"RTN","IBDF18E2",7,0)
 S TEXT(1)=$$NOW^XLFDT
"RTN","IBDF18E2",8,0)
 S TEXT(2)=$P($G(^IBD(357.96,+$G(FORMID),0)),"^",2) I 'TEXT(2) S TEXT(2)=$G(DFN) ; -- dfn
"RTN","IBDF18E2",9,0)
 S TEXT(3)=$G(FORMID("APPT")) ; -- encounter date/time
"RTN","IBDF18E2",10,0)
 S TEXT(4)=$P($G(^IBD(357.96,+$G(FORMID),0)),"^",4) ; -- pointer to 357.95
"RTN","IBDF18E2",11,0)
 S TEXT(5)=$G(FORMID) S:+TEXT(5) TEXT(5)=+TEXT(5) ; -- pointer to 357.96
"RTN","IBDF18E2",12,0)
 S:$G(DATANO)'="" TEXT(6)=$G(DATANO) ; -- number of bubble or hand print field (ie BUBBLE(1)
"RTN","IBDF18E2",13,0)
 S:$G(VALUE)'="" TEXT(7)=$G(VALUE) ; -- value of bubble or hand print field
"RTN","IBDF18E2",14,0)
 S TEXT(8)=$G(FORMID("SOURCE"))
"RTN","IBDF18E2",15,0)
 S TEXT(9)=$P($G(^IBD(357.95,+$P($G(^IBD(357.96,+$G(FORMID),0)),"^",4),0)),"^",21) ; -- form name
"RTN","IBDF18E2",16,0)
 S:$G(PI)'="" TEXT(10)=$G(PI) ; -- package interface
"RTN","IBDF18E2",17,0)
 S:$G(QLFR)'="" TEXT(11)=$G(QLFR) ; -- name of qualifier
"RTN","IBDF18E2",18,0)
 S:$G(TXT)'="" TEXT(12)=$G(TXT) ; -- Text appearing on the form
"RTN","IBDF18E2",19,0)
 S TEXT(13)=$G(DUZ) ; -- user
"RTN","IBDF18E2",20,0)
 S:$G(TYPEDTA)'="" TEXT(14)=$P($G(^IBE(359.1,+TYPEDTA,0)),"^")
"RTN","IBDF18E2",21,0)
 S:$G(XQY0)'="" TEXT(15)=$P(XQY0,"^") ; -- option name
"RTN","IBDF18E2",22,0)
 S TEXT(16)=$G(ERRNO) ; -- entry in dialog file
"RTN","IBDF18E2",23,0)
 S:$G(FORMID("PAGE")) TEXT(17)=$G(FORMID("PAGE"))
"RTN","IBDF18E2",24,0)
 S:$G(FORMID("WSID"))'="" TEXT(18)=$G(FORMID("WSID"))
"RTN","IBDF18E2",25,0)
 ;
"RTN","IBDF18E2",26,0)
 ; -- Build Error Message from Dialog file
"RTN","IBDF18E2",27,0)
 D BLD^DIALOG(ERRNO,.TEXT,.IBDOUT,"IBDERR","S")
"RTN","IBDF18E2",28,0)
 ;D ERRMSG(ERRNO,.TEXT)
"RTN","IBDF18E2",29,0)
 ;
"RTN","IBDF18E2",30,0)
 ; -- file error in aics error log file
"RTN","IBDF18E2",31,0)
 D ERRFIL(ERRNO,.TEXT,.IBDERR)
"RTN","IBDF18E2",32,0)
 Q:ERRNO=3570001!(ERRNO=3570004)
"RTN","IBDF18E2",33,0)
 ;
"RTN","IBDF18E2",34,0)
 ; -- set error in pxca(aics error) array to pass back to workstation
"RTN","IBDF18E2",35,0)
 S CNT=$G(PXCA("AICS ERROR"))+1
"RTN","IBDF18E2",36,0)
 S PXCA("AICS ERROR")=CNT
"RTN","IBDF18E2",37,0)
 S PXCA("AICS ERROR",1,1,1,CNT)=$P($G(IBDERR(1)),": ",2,99)
"RTN","IBDF18E2",38,0)
 Q
"RTN","IBDF18E2",39,0)
 ;
"RTN","IBDF18E2",40,0)
ERRMSG(ERRNO,TEXT) ;
"RTN","IBDF18E2",41,0)
 ; -- Build Error Message from Dialog file
"RTN","IBDF18E2",42,0)
 D BLD^DIALOG(ERRNO,.TEXT,.IBDOUT,"IBDERR","S")
"RTN","IBDF18E2",43,0)
 Q
"RTN","IBDF18E2",44,0)
 ;
"RTN","IBDF18E2",45,0)
ERRFIL(ERRNO,TEXT,IBDERR) ;
"RTN","IBDF18E2",46,0)
 ; -- file error in aics error log file
"RTN","IBDF18E2",47,0)
 N FDAROOT,FDAIEN
"RTN","IBDF18E2",48,0)
 ;
"RTN","IBDF18E2",49,0)
 Q:$G(TEXT(1))=""
"RTN","IBDF18E2",50,0)
 S FDAROOT(359.3,"+1,",.01)=$G(TEXT(1))
"RTN","IBDF18E2",51,0)
 S:$G(TEXT(2))'="" FDAROOT(359.3,"+1,",.02)=$G(TEXT(2))
"RTN","IBDF18E2",52,0)
 S:$G(TEXT(3))'="" FDAROOT(359.3,"+1,",.03)=$G(TEXT(3))
"RTN","IBDF18E2",53,0)
 S:$G(TEXT(4))'="" FDAROOT(359.3,"+1,",.04)=$G(TEXT(4))
"RTN","IBDF18E2",54,0)
 S:$G(TEXT(5))'="" FDAROOT(359.3,"+1,",.05)=$G(TEXT(5))
"RTN","IBDF18E2",55,0)
 S:$G(TEXT(6))'="" FDAROOT(359.3,"+1,",.06)=$G(TEXT(6))
"RTN","IBDF18E2",56,0)
 S:$G(TEXT(7))'="" FDAROOT(359.3,"+1,",.07)=$G(TEXT(7))
"RTN","IBDF18E2",57,0)
 S:$G(TEXT(8))'="" FDAROOT(359.3,"+1,",.08)=$G(TEXT(8))
"RTN","IBDF18E2",58,0)
 S:$G(TEXT(9))'="" FDAROOT(359.3,"+1,",.09)=$G(TEXT(9))
"RTN","IBDF18E2",59,0)
 S:$G(TEXT(10))'="" FDAROOT(359.3,"+1,",.1)=$G(TEXT(10))
"RTN","IBDF18E2",60,0)
 S:$G(TEXT(11))'="" FDAROOT(359.3,"+1,",.11)=$G(TEXT(11))
"RTN","IBDF18E2",61,0)
 S:$G(TEXT(12))'="" FDAROOT(359.3,"+1,",.12)=$G(TEXT(12))
"RTN","IBDF18E2",62,0)
 S:$G(TEXT(13))'="" FDAROOT(359.3,"+1,",.13)=$G(TEXT(13))
"RTN","IBDF18E2",63,0)
 S:$G(TEXT(16))'="" FDAROOT(359.3,"+1,",.16)=$G(TEXT(16))
"RTN","IBDF18E2",64,0)
 S:$G(TEXT(15))'="" FDAROOT(359.3,"+1,",1.01)=$G(TEXT(15))
"RTN","IBDF18E2",65,0)
 S:$G(TEXT(17))'="" FDAROOT(359.3,"+1,",.17)=$G(TEXT(17))
"RTN","IBDF18E2",66,0)
 S:$G(TEXT(18))'="" FDAROOT(359.3,"+1,",.18)=$G(TEXT(18))
"RTN","IBDF18E2",67,0)
 ;
"RTN","IBDF18E2",68,0)
 S CNT=2
"RTN","IBDF18E2",69,0)
 I ERRNO=3570001 D EW^IBDFBK2(.IBDERR,.PXCA,.CNT,1)
"RTN","IBDF18E2",70,0)
 ;
"RTN","IBDF18E2",71,0)
 D UPDATE^DIE("","FDAROOT","FDAIEN")
"RTN","IBDF18E2",72,0)
 D WP^DIE(359.3,FDAIEN(1)_",",10,"KA","IBDERR")
"RTN","IBDF18E2",73,0)
 Q
"RTN","IBDF18E2",74,0)
 ;
"RTN","IBDF18E2",75,0)
PRT ; -- print error listing
"RTN","IBDF18E2",76,0)
 ;
"RTN","IBDF18E2",77,0)
 W !,?4,"** This option is OUT OF ORDER **" QUIT   ;Code set Versioning
"RTN","IBDF18E2",78,0)
 ;
"RTN","IBDF18E2",79,0)
 I '$D(IOF) D HOME^%ZIS
"RTN","IBDF18E2",80,0)
 W @IOF,?10,"Print List of Scanning Errors and Warnings",!!!
"RTN","IBDF18E2",81,0)
 ;
"RTN","IBDF18E2",82,0)
 S DIC="^IBD(359.3,",L=0,FR="?,?,?,?",TO="?,?,?,?"
"RTN","IBDF18E2",83,0)
 S BY="[IBD LIST ERRORS]"
"RTN","IBDF18E2",84,0)
 S FLDS="[IBD LIST ERRORS]"
"RTN","IBDF18E2",85,0)
 ;
"RTN","IBDF18E2",86,0)
 ;S DISUPNO=1 ; -- print No records found if not set, don't uncomment this line
"RTN","IBDF18E2",87,0)
 S DIPCRIT=1 ; -- print sort criteria on first page.
"RTN","IBDF18E2",88,0)
 S DIS(0)="I '$P($G(^IBD(359.3,D0,1)),U,2)"
"RTN","IBDF18E2",89,0)
 D EN1^DIP
"RTN","IBDF18E2",90,0)
PRTQ K DIC,L,FLDS,DIOEND,FR,TO,BY,DHD,X,Y,DUOUT,DIRUT
"RTN","IBDF18E2",91,0)
 Q
"RTN","IBDF18E2",92,0)
 ;
"RTN","IBDF18E2",93,0)
NOAPP ; -- print no appointment listing
"RTN","IBDF18E2",94,0)
 I '$D(IOF) D HOME^%ZIS
"RTN","IBDF18E2",95,0)
 S IBDCNT=0
"RTN","IBDF18E2",96,0)
 W @IOF,?10,"Print List Patients with Data from Encounter Forms and No appointemnts",!!!
"RTN","IBDF18E2",97,0)
 ;
"RTN","IBDF18E2",98,0)
 S DIC="^IBD(357.96,",L=0,FR="?,?,?,T-1",TO="?,?,?,T-1"
"RTN","IBDF18E2",99,0)
 S BY="[IBD NO APPOINTMENT LIST]"
"RTN","IBDF18E2",100,0)
 S FLDS="[IBD NO APPOINTMENT LIST]"
"RTN","IBDF18E2",101,0)
 ;
"RTN","IBDF18E2",102,0)
 ;S DIPCRIT=1 ; -- print sort criteria on first page.
"RTN","IBDF18E2",103,0)
 S DIS(0)="I 1 S IBDCNT=IBDCNT+1"
"RTN","IBDF18E2",104,0)
 S IOP="HOME"
"RTN","IBDF18E2",105,0)
 D EN1^DIP
"RTN","IBDF18E2",106,0)
NOAPPQ K DIC,L,FLDS,DIOEND,FR,TO,BY,DHD,X,Y,DUOUT,DIRUT,IBDCNT
"RTN","IBDF18E2",107,0)
 Q
"RTN","IBDF18E2",108,0)
NOAPP1 ; -- print no appointment listing
"RTN","IBDF18E2",109,0)
 I '$D(IOF) D HOME^%ZIS
"RTN","IBDF18E2",110,0)
 S IBDCNT=0
"RTN","IBDF18E2",111,0)
 W @IOF,?10,"Print List Patients with Data from Encounter Forms and No appointemnts",!!!
"RTN","IBDF18E2",112,0)
 ;
"RTN","IBDF18E2",113,0)
 S DIC="^IBD(357.96,",L=0,FR="?,?,?,T-1",TO="?,?,?,T-1"
"RTN","IBDF18E2",114,0)
 S BY="[IBD NO APPOINTMENT1]"
"RTN","IBDF18E2",115,0)
 S FLDS="[IBD NO APPOINTMENT LIST]"
"RTN","IBDF18E2",116,0)
 ;
"RTN","IBDF18E2",117,0)
 ;S DIPCRIT=1 ; -- print sort criteria on first page.
"RTN","IBDF18E2",118,0)
 S DIS(0)="I 1 S IBDCNT=IBDCNT+1"
"RTN","IBDF18E2",119,0)
 S IOP="HOME"
"RTN","IBDF18E2",120,0)
 D EN1^DIP
"RTN","IBDF18E2",121,0)
NOAPP1Q K DIC,L,FLDS,DIOEND,FR,TO,BY,DHD,X,Y,DUOUT,DIRUT,IBDCNT
"RTN","IBDF18E2",122,0)
 Q
"RTN","IBDF4C")
0^2^B3023024
"RTN","IBDF4C",1,0)
IBDF4C ;ALB/DHH - CPT MODIFIER SELECTION ;26-MAY-1999
"RTN","IBDF4C",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**38,51**;APR 24,1997
"RTN","IBDF4C",3,0)
MOD ;Entry point for selecting or modifying modifiers
"RTN","IBDF4C",4,0)
 ; -- this is called by the input transform (fileman file: selection)
"RTN","IBDF4C",5,0)
 ;   
"RTN","IBDF4C",6,0)
 ;    slctn -- is the ien of selection file and should be cpt code
"RTN","IBDF4C",7,0)
 ;    $$modp^icptmod  -- screens appropriate modifiers for a cpt code
"RTN","IBDF4C",8,0)
 ;    $p($$mod^icptmod,"^",7)   -- check status of the modifier
"RTN","IBDF4C",9,0)
 D
"RTN","IBDF4C",10,0)
 .N DO,CPT,Y,DIC
"RTN","IBDF4C",11,0)
 .Q:$G(SLCTN)=""
"RTN","IBDF4C",12,0)
 .S CPT=$P(^IBE(357.3,SLCTN,0),"^")
"RTN","IBDF4C",13,0)
 .Q:$G(CPT)=""
"RTN","IBDF4C",14,0)
 .;;S DIC=81.3,DIC("S")="I ($$MODP^ICPTMOD(CPT,+Y,""I""))>0"
"RTN","IBDF4C",15,0)
 .S DIC=81.3
"RTN","IBDF4C",16,0)
 .;
"RTN","IBDF4C",17,0)
 .;Is the modifier active and can it be used with this CPT code
"RTN","IBDF4C",18,0)
 .S DIC("S")="I ($$MODP^ICPTMOD(CPT,+Y,""I""))>0,$P($$MOD^ICPTMOD(+Y,""I""),U,7)=1"
"RTN","IBDF4C",19,0)
 .S DIC(0)="EM" D ^DIC
"RTN","IBDF4C",20,0)
 .S (DIX,X)=$P(Y,"^",2)
"RTN","IBDF4C",21,0)
 .I +Y<1 D
"RTN","IBDF4C",22,0)
 .. D EN^DDIOL("Invalid CPT Modifier entered for CPT procedure code.")
"RTN","IBDF4C",23,0)
 Q
"RTN","IBDF4C",24,0)
 ;
"RTN","IBDF4C",25,0)
 ;
"RTN","IBDF4C",26,0)
ADD ;add cpt modifiers to the selection file
"RTN","IBDF4C",27,0)
 ;
"RTN","IBDF4C",28,0)
 ; -- this is to be called via IBDF4 AND IBDF4A
"RTN","IBDF4C",29,0)
 ;
"RTN","IBDF4C",30,0)
 ; -- check package interface file to see if CPT Modifiers are to be
"RTN","IBDF4C",31,0)
 ;    asked.
"RTN","IBDF4C",32,0)
 ;
"RTN","IBDF4C",33,0)
 Q:$P($G(^IBE(357.6,+$P($G(^IBE(357.2,+IBLIST,0)),U,11),0)),U,21)'=1
"RTN","IBDF4C",34,0)
 ;
"RTN","IBDF4C",35,0)
 ; -- use fileman to allow user to add/edit modifiers
"RTN","IBDF4C",36,0)
 ;    using CPT API to screen out inappropriate modifiers ( this is 
"RTN","IBDF4C",37,0)
 ;    done via the input transform on the CPT MODIFIERS multiple field
"RTN","IBDF4C",38,0)
 ;
"RTN","IBDF4C",39,0)
 N DIE,DA,DR
"RTN","IBDF4C",40,0)
 S DIE="^IBE(357.3,"
"RTN","IBDF4C",41,0)
 S DA=SLCTN
"RTN","IBDF4C",42,0)
 S DR="[IBDF CPT MODIFIER]"
"RTN","IBDF4C",43,0)
 D ^DIE
"RTN","IBDF4C",44,0)
 Q
"RTN","IBDF4C",45,0)
LOOKUP ;response to ?? while entering CPT Modifiers
"RTN","IBDF4C",46,0)
 ;xecutable help used this from file 357.3 cTP Modifier field
"RTN","IBDF4C",47,0)
 ;
"RTN","IBDF4C",48,0)
 N DO,CPT,DIC
"RTN","IBDF4C",49,0)
 Q:$G(SLCTN)=""
"RTN","IBDF4C",50,0)
 S CPT=$P(^IBE(357.3,SLCTN,0),"^")
"RTN","IBDF4C",51,0)
 Q:$G(CPT)=""
"RTN","IBDF4C",52,0)
 ;S IBDSAV=DIC
"RTN","IBDF4C",53,0)
 ;;S X="??",DIC=81.3,DIC("S")="I ($$MODP^ICPTMOD(CPT,+Y,""I""))>0"
"RTN","IBDF4C",54,0)
 S X="??",DIC=81.3
"RTN","IBDF4C",55,0)
 ;
"RTN","IBDF4C",56,0)
 ;Is the modifier active and can it be used with this CPT code
"RTN","IBDF4C",57,0)
 S DIC("S")="I ($$MODP^ICPTMOD(CPT,+Y,""I""))>0,$P($$MOD^ICPTMOD(+Y,""I""),U,7)=1"
"RTN","IBDF4C",58,0)
 S DIC(0)="EMQ" D ^DIC
"RTN","IBDF4C",59,0)
 Q
"RTN","IBDFDE")
0^14^B78073788
"RTN","IBDFDE",1,0)
IBDFDE ;ALB/AAS - AICS Data Entry, Entry point by form ; 24-FEB-96
"RTN","IBDFDE",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**3,51**;APR 24, 1997
"RTN","IBDFDE",3,0)
 ;
"RTN","IBDFDE",4,0)
 W !,?4,"** This option is OUT OF ORDER **" QUIT   ;Code set Versioning
"RTN","IBDFDE",5,0)
 ;
"RTN","IBDFDE",6,0)
% N %,%H,C,I,J,X,Y,ADD,DEL,ASKOTHER,DIR,DIC,DA,CNT,DFN,DIRUT,DUOUT,DTOUT,POP,RTN,FRMDATA,IBY,IBQUIT,IBDF,IBDOBJ,IBDPTSTI,IBDPTSTE,IBDPTNM,IBDPTDTI,SEL
"RTN","IBDFDE",7,0)
 N IBDPTDTE,IBDFMNME,IBDFMIEN,IBDFMSTI,IBDFMSTE,IBDFMIDI,IBDCLNME,IBFORM,IBDCLNPH,IBDPID,IBDPTPRI,IBDSEL,IBDPI,IBDCO,PXCA,SDCLST,PXCASTAT,PXKNODA,PXKNODB,IBDREDIT,IBDASK,IBDPRE,IBDOK,IBD,IBDCKOUT
"RTN","IBDFDE",8,0)
 N ANS1,AUPNDAYS,AUPNDOB,AUPNDOD,AUPNPAT,AUPNSEX
"RTN","IBDFDE",9,0)
 ;
"RTN","IBDFDE",10,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFDE",11,0)
 D HOME^%ZIS
"RTN","IBDFDE",12,0)
 W !!,"Data Entry of Encounter Forms (by Form)",!!
"RTN","IBDFDE",13,0)
 ;
"RTN","IBDFDE",14,0)
STRT ; -- ask for form id
"RTN","IBDFDE",15,0)
 D END
"RTN","IBDFDE",16,0)
 S DIR("?")="Enter the encounter form id, printed on the form.  This is the second number from the left, just right of the label 'ID:'."
"RTN","IBDFDE",17,0)
 S DIR(0)="PO^357.96:AEQM",DIR("A")="Encounter Form ID" D ^DIR K DIR,DA,DR,DIC
"RTN","IBDFDE",18,0)
 I $D(DIRUT) G END
"RTN","IBDFDE",19,0)
 S IBDF("FORM")=+Y
"RTN","IBDFDE",20,0)
 D EN
"RTN","IBDFDE",21,0)
 ;
"RTN","IBDFDE",22,0)
STRTQ I '$P($G(^IBD(357.09,1,0)),"^",6) D PAUSE
"RTN","IBDFDE",23,0)
 G:IBQUIT END
"RTN","IBDFDE",24,0)
 W @IOF
"RTN","IBDFDE",25,0)
 Q:$G(IBDF("OPTION"))
"RTN","IBDFDE",26,0)
 G STRT
"RTN","IBDFDE",27,0)
 ;
"RTN","IBDFDE",28,0)
EN ; -- entry point to edit one form,  
"RTN","IBDFDE",29,0)
 ;    Input IBDF("FORM") := form number
"RTN","IBDFDE",30,0)
 ;
"RTN","IBDFDE",31,0)
 D:$D(XRTL) T0^%ZOSV
"RTN","IBDFDE",32,0)
 N IBDSTRT,IBDFIN,IBDTIME S IBDSTRT=$H
"RTN","IBDFDE",33,0)
 S IBQUIT=0
"RTN","IBDFDE",34,0)
 L +^IBD(357.96,IBDF("FORM")):5 I '$T W !!,"Form is currently being entered by another user, try again later!" S IBFLAG=1 G ENQ
"RTN","IBDFDE",35,0)
 I $G(^IBD(357.96,IBDF("FORM"),0))="" W !!,"Form Tracking Entry has been deleted, Data entry not available" S IBFLAG=1 G ENQ
"RTN","IBDFDE",36,0)
 ;
"RTN","IBDFDE",37,0)
OVER ; -- start here to re-edit an entry
"RTN","IBDFDE",38,0)
 N IOINHI,IOINORM
"RTN","IBDFDE",39,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBDFDE",40,0)
 S (IBQUIT,IBDF("KILL"))=0
"RTN","IBDFDE",41,0)
 D IDPAT^IBDFRPC3(.FRMDATA,IBDF("FORM"))
"RTN","IBDFDE",42,0)
 D EXPAND(FRMDATA)
"RTN","IBDFDE",43,0)
 I $P($G(^IBE(357,IBDFMIEN,0)),"^",12)'=1 W !!,"Form is not scannable.  Data entry not available" S IBFLAG=1 G ENQ
"RTN","IBDFDE",44,0)
 ;
"RTN","IBDFDE",45,0)
 I '$G(IBDF("FRMDEF")) W !!,"Form Definition entry not defined for form tracking entry.",!,"Data entry not available." D ERR S IBFLAG=1 G ENQ
"RTN","IBDFDE",46,0)
 I $G(^IBD(357.95,+$G(IBDF("FRMDEF")),0))="" W !!,"Form Definition Entry has been deleted.",!,"Data entry not available." D ERR S IBFLAG=1 G ENQ
"RTN","IBDFDE",47,0)
 I $P($G(^IBD(357.95,+$G(IBDF("FRMDEF")),0)),"^",21)="" W !!,"Can not determine Encounter Form from Form Tracking entry.",!,"Data entry not available." D ERR S IBFLAG=1 G ENQ
"RTN","IBDFDE",48,0)
 I $G(^IBE(357,IBDFMIEN,0))="" W !!,"Encounter Form has been deleted.  Data entry not available." D ERR S IBFLAG=1 G ENQ
"RTN","IBDFDE",49,0)
 I $G(^DPT(DFN,"S",IBDF("APPT"),0))'="",$P(^DPT(DFN,"S",IBDF("APPT"),0),"^",1)'=IBDF("CLINIC") W !!,"Form "_IBDF("FORM")_" is for an Appointment that has been canceled.",!,"Data entry not available." S IBFLAG=1 G ENQ
"RTN","IBDFDE",50,0)
 S X=$P($G(^DPT(DFN,"S",IBDF("APPT"),0)),"^",2) I X'="","^C^N^NA^CA^PC^PCA^"[("^"_X_"^") W !!,"Form "_IBDF("FORM")_" is for an Appointment that has been canceled or no-showed.",!,"Data entry not available." S IBFLAG=1 G ENQ
"RTN","IBDFDE",51,0)
 I '$P($G(^IBE(357,IBDFMIEN,0)),"^",5),'$G(IBDREDIT) D KILLTMP
"RTN","IBDFDE",52,0)
 I '$G(IBDREDIT) D HDR
"RTN","IBDFDE",53,0)
 ;
"RTN","IBDFDE",54,0)
 I IBDFMSTI=3!(IBDFMSTI=6) D  I IBQUIT G ENQ ; -- already sent to pce
"RTN","IBDFDE",55,0)
 .Q:$G(IBDREDIT)
"RTN","IBDFDE",56,0)
 .S IBQUIT=1
"RTN","IBDFDE",57,0)
 .W !!,"Current form Status is ",IBDFMSTE
"RTN","IBDFDE",58,0)
 .W:'IBDCKOUT "."
"RTN","IBDFDE",59,0)
 .W:IBDCKOUT " and was checked out",!,"on "_$$FMTE^XLFDT(IBDCKOUT)_", Status is "_$G(IOINHI)_IBDPTSTE_$G(IOINORM)_".",!
"RTN","IBDFDE",60,0)
 .S DIR("?")="Data Entry on this form appears to have been completed by either scanning or data entry.  Deleting or editing of data is not allowed with this option.  Answer 'Yes' if you wish to continue, or 'No' if to select another form."
"RTN","IBDFDE",61,0)
 .S DIR("?",1)="Enter ?? to see a list of data stored in PCE."
"RTN","IBDFDE",62,0)
 .S DIR("?",2)=" "
"RTN","IBDFDE",63,0)
 .S DIR("??")="^D WRITE^IBDFRPC5"
"RTN","IBDFDE",64,0)
 .S DIR(0)="Y",DIR("B")="No",DIR("A")="Are you sure you want to continue"
"RTN","IBDFDE",65,0)
 .D ^DIR K DIR I Y=1 S IBQUIT=0
"RTN","IBDFDE",66,0)
 ;
"RTN","IBDFDE",67,0)
 I +IBDCKOUT>0 D  I IBQUIT G ENQ ; -- already sent to pce
"RTN","IBDFDE",68,0)
 .I IBDFMSTI=3!(IBDFMSTI=6) Q
"RTN","IBDFDE",69,0)
 .Q:$G(IBDREDIT)
"RTN","IBDFDE",70,0)
 .S IBQUIT=1
"RTN","IBDFDE",71,0)
 .W !!,"Appointment has already been Checked Out on "_$$FMTE^XLFDT(IBDCKOUT)_",",!,"Status is: "_$G(IOINHI)_IBDPTSTE_$G(IOINORM)_".",!
"RTN","IBDFDE",72,0)
 .S DIR("?")="This appointment appears to have been checked out on "_$$FMTE^XLFDT(IBDCKOUT)_".  Deleting or editing of data is not allowed with this option.  Answer 'Yes' if you wish to continue, or 'No' if to select another form."
"RTN","IBDFDE",73,0)
 .S DIR("?",1)="Enter ?? to see a list of data stored in PCE."
"RTN","IBDFDE",74,0)
 .S DIR("?",2)=" "
"RTN","IBDFDE",75,0)
 .S DIR("??")="^D WRITE^IBDFRPC5"
"RTN","IBDFDE",76,0)
 .S DIR(0)="Y",DIR("B")="No",DIR("A")="Are you sure you want to continue"
"RTN","IBDFDE",77,0)
 .D ^DIR K DIR I Y=1 S IBQUIT=0
"RTN","IBDFDE",78,0)
 ;
"RTN","IBDFDE",79,0)
 I '$G(IBDREDIT),$G(^DPT(DFN,"S",IBDF("APPT"),0))="" S IBDOK=1 D FNDAPPT^IBDFDE1 I 'IBDOK W !!,"No action Taken",! G ENQ
"RTN","IBDFDE",80,0)
 ;
"RTN","IBDFDE",81,0)
 I '$D(^TMP("IBD-OBJ",$J,IBDFMIEN,0)) D FRMLSTI^IBDFRPC("^TMP(""IBD-OBJ"",$J,IBDFMIEN)",IBDFMIEN,"",1)
"RTN","IBDFDE",82,0)
 I $O(^TMP("IBD-OBJ",$J,IBDFMIEN,0))="" W !,$G(^TMP("IBD-OBJ",$J,IBDFMIEN,0)),! G ENQ
"RTN","IBDFDE",83,0)
 ;
"RTN","IBDFDE",84,0)
NEWOVER ; -- start here to re-edit an entry
"RTN","IBDFDE",85,0)
 I $G(IBDREDIT) D HDR
"RTN","IBDFDE",86,0)
 D LISTOB
"RTN","IBDFDE",87,0)
 D CHKOUT^IBDFDE0(IBDF("SDOE"))
"RTN","IBDFDE",88,0)
 I '$G(IBDF("PROVIDER PI"))!($G(IBDF("PROVIDER"))) D DEFPROV^IBDFDE21
"RTN","IBDFDE",89,0)
 ;
"RTN","IBDFDE",90,0)
 K ^TMP("IBD-PI-CNT",$J)
"RTN","IBDFDE",91,0)
 S I=0 F  S I=$O(^TMP("IBD-OBJ",$J,IBDFMIEN,I)) Q:I=""  D
"RTN","IBDFDE",92,0)
 .S X=$P($G(^TMP("IBD-OBJ",$J,IBDFMIEN,I)),"^",2)
"RTN","IBDFDE",93,0)
 .S ^TMP("IBD-PI-CNT",$J,X)=$G(^TMP("IBD-PI-CNT",$J,X))+1
"RTN","IBDFDE",94,0)
 ;
"RTN","IBDFDE",95,0)
 S I=0 F  S I=$O(^TMP("IBD-OBJ",$J,IBDFMIEN,I)) Q:I=""!(IBQUIT)  D
"RTN","IBDFDE",96,0)
 .S IBDOBJ=$G(^TMP("IBD-OBJ",$J,IBDFMIEN,I))
"RTN","IBDFDE",97,0)
 .S IBDF("PI")=+$P(IBDOBJ,"^",2),IBDF("TYPE")=$P(IBDOBJ,"^",5)
"RTN","IBDFDE",98,0)
 .S IBDF("IEN")=+$P(IBDOBJ,"^",6),IBDF("VITAL")=$P(IBDOBJ,"^",7)
"RTN","IBDFDE",99,0)
 .S IBDF("PAGE")=$P(IBDOBJ,"^",10)\80+1 ;scannable forms only
"RTN","IBDFDE",100,0)
 .Q:IBDF("IEN")<1!(IBDF("PI")<1)
"RTN","IBDFDE",101,0)
 .S IBDF("IBDF")=I
"RTN","IBDFDE",102,0)
 .S RTN=$G(^IBE(357.6,IBDF("PI"),18)) Q:RTN=""
"RTN","IBDFDE",103,0)
 .X RTN
"RTN","IBDFDE",104,0)
 .I $G(IBDF("GOTO"))'="" S I=IBDF("GOTO") K IBDF("GOTO")
"RTN","IBDFDE",105,0)
 K ^TMP("IBD-PI-CNT",$J)
"RTN","IBDFDE",106,0)
 D FINAL^IBDFDE1 I $G(IBDREDIT) S IBQUIT=0 G OVER
"RTN","IBDFDE",107,0)
 S:$D(XRT0) XRTN=$T(+0) D:$D(XRT0) T1^%ZOSV
"RTN","IBDFDE",108,0)
 ;
"RTN","IBDFDE",109,0)
ENQ K SDFN
"RTN","IBDFDE",110,0)
 L -^IBD(357.96,IBDF("FORM"))
"RTN","IBDFDE",111,0)
 I $D(IBFLAG) D
"RTN","IBDFDE",112,0)
 .I $P($G(^IBD(357.09,1,0)),"^",6) W !! D PAUSE
"RTN","IBDFDE",113,0)
 .K IBFLAG
"RTN","IBDFDE",114,0)
 Q
"RTN","IBDFDE",115,0)
 ;
"RTN","IBDFDE",116,0)
HDR ; -- print patient header
"RTN","IBDFDE",117,0)
 W @IOF
"RTN","IBDFDE",118,0)
 W IBDPTNM,?32,IBDPID,?47,$$FMTE^XLFDT($P($G(^DPT(DFN,0)),"^",3))
"RTN","IBDFDE",119,0)
 W "    Form ID: ",$P(^IBD(357.96,IBDF("FORM"),0),"^")
"RTN","IBDFDE",120,0)
 W !,$TR($J(" ",IOM)," ","=")
"RTN","IBDFDE",121,0)
 W !,"      Clinic: ",$E(IBDCLNME,1,25) W ?40,"  Date/Time: ",IBDPTDTE
"RTN","IBDFDE",122,0)
 W !,"   Form Name: ",$E(IBDFMNME,1,25) W ?40,"Form Status: ",$E(IBDFMSTE,1,25)
"RTN","IBDFDE",123,0)
 Q
"RTN","IBDFDE",124,0)
 ;
"RTN","IBDFDE",125,0)
LISTOB ; -- header for input object list
"RTN","IBDFDE",126,0)
 W !!,"Items available for Input:"
"RTN","IBDFDE",127,0)
 D WRITE^IBDFDE0(IBDF("SDOE"))
"RTN","IBDFDE",128,0)
 S I=0 F  S I=$O(^TMP("IBD-OBJ",$J,IBDFMIEN,I)) Q:I=""  D
"RTN","IBDFDE",129,0)
 .S X=$G(^TMP("IBD-OBJ",$J,IBDFMIEN,I))
"RTN","IBDFDE",130,0)
 .Q:'$P(X,"^",8)
"RTN","IBDFDE",131,0)
 .S Y=$S($P(X,"^",7)="":$P(X,"^"),1:$P(X,"^",7))
"RTN","IBDFDE",132,0)
 .I Y="INPUT PROVIDER" S IBDF("PROVIDER PI")=+$P(X,"^",2)
"RTN","IBDFDE",133,0)
 .I Y["INPUT " S Y=$P(Y,"INPUT ",2)
"RTN","IBDFDE",134,0)
 .W !?3,$E(Y,1,35)
"RTN","IBDFDE",135,0)
 .;
"RTN","IBDFDE",136,0)
 .F  S I=I+1 S X=$G(^TMP("IBD-OBJ",$J,IBDFMIEN,I)) Q:X=""!($P(X,"^",8))
"RTN","IBDFDE",137,0)
 .Q:X=""
"RTN","IBDFDE",138,0)
 .S Y=$S($P(X,"^",7)="":$P(X,"^"),1:$P(X,"^",7))
"RTN","IBDFDE",139,0)
 .I Y="INPUT PROVIDER" S IBDF("PROVIDER PI")=+$P(X,"^",2)
"RTN","IBDFDE",140,0)
 .I Y["INPUT " S Y=$P(Y,"INPUT ",2)
"RTN","IBDFDE",141,0)
 .W ?40,$E(Y,1,35)
"RTN","IBDFDE",142,0)
 ;
"RTN","IBDFDE",143,0)
 W !,$TR($J(" ",IOM)," ","=")
"RTN","IBDFDE",144,0)
 Q
"RTN","IBDFDE",145,0)
 ;
"RTN","IBDFDE",146,0)
EXPAND(X) ; -- sets standard varibles for form data
"RTN","IBDFDE",147,0)
 S (DFN,IBDF("DFN"))=$P(X,"^",2) ;DFN
"RTN","IBDFDE",148,0)
 S IBDF("CLINIC")=$P(X,"^",7) ;   clinic ien
"RTN","IBDFDE",149,0)
 S IBDPTNM=$P(X,"^") ;    patient name
"RTN","IBDFDE",150,0)
 S IBDPID=$P(X,"^",3) ;   Patient identifier (ssn)
"RTN","IBDFDE",151,0)
 S IBDFMNME=$P(X,"^",4) ; form name
"RTN","IBDFDE",152,0)
 S IBDFMIEN=$P(X,"^",5) ; form ien (pointer to 357)
"RTN","IBDFDE",153,0)
 S IBDCLNME=$P(X,"^",6) ; clinic name
"RTN","IBDFDE",154,0)
 S IBDCLNPH=$P(X,"^",8) ; clinic physical location
"RTN","IBDFDE",155,0)
 S IBDF("APPT")=$P(X,"^",9) ; appt date/time (fm format)
"RTN","IBDFDE",156,0)
 S IBDPTDTE=$P(X,"^",10) ;appt date (external format)
"RTN","IBDFDE",157,0)
 S IBDPTSTI=$P(X,"^",11) ;appt status (piece two of "S" node)
"RTN","IBDFDE",158,0)
 S IBDPTSTE=$P(X,"^",12) ;appt status expanded
"RTN","IBDFDE",159,0)
 S IBDFMSTI=$P(X,"^",13) ;form status (internal)
"RTN","IBDFDE",160,0)
 S IBDFMSTE=$P(X,"^",14) ;form status (expanded)
"RTN","IBDFDE",161,0)
 S IBDF("FRMDEF")=$P(X,"^",15) ;form id (pointer to 357.95)
"RTN","IBDFDE",162,0)
 S IBDPTPRI=$P(X,"^",16) ;default provider internal
"RTN","IBDFDE",163,0)
 S IBDPTPRI=$P(X,"^",17) ;default provider external
"RTN","IBDFDE",164,0)
 S IBDCKOUT=$P(X,"^",20) ;checkout dt
"RTN","IBDFDE",165,0)
 S IBDF("SDOE")=$$FNDSDOE(DFN,IBDF("APPT")) ;outpatient encounter
"RTN","IBDFDE",166,0)
 Q
"RTN","IBDFDE",167,0)
 ;Q $$GETAPT^SDVSIT2(DFN,APPT,IBDF("CLINIC"))
"RTN","IBDFDE",168,0)
 ; -- will create encounters for appts/unsch vsts (but not disps or ae?)
"RTN","IBDFDE",169,0)
 ;
"RTN","IBDFDE",170,0)
FNDSDOE(DFN,APPT) ; -- returns pointer to opt encounter for appt.
"RTN","IBDFDE",171,0)
 N SDOE
"RTN","IBDFDE",172,0)
 S SDOE=$P($G(^DPT(+$G(DFN),"S",+$G(APPT),0)),"^",20)
"RTN","IBDFDE",173,0)
 I SDOE="",$G(^DPT(+$G(DFN),"S",+$G(APPT),0))="" S SDOE=$P($$SDV^IBDFRPC3(DFN,APPT),"^",2)
"RTN","IBDFDE",174,0)
 Q SDOE
"RTN","IBDFDE",175,0)
 ;
"RTN","IBDFDE",176,0)
PAUSE ; -- go to bottom of screen and pause for return
"RTN","IBDFDE",177,0)
 Q:$G(IBQUIT)
"RTN","IBDFDE",178,0)
 N I,DIR,DIRUT,DUOUT,DTOUT I $Y'>(IOSL-3)  W !!
"RTN","IBDFDE",179,0)
 I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR S IBQUIT='Y
"RTN","IBDFDE",180,0)
 Q
"RTN","IBDFDE",181,0)
 ;
"RTN","IBDFDE",182,0)
END K I,J,X,Y,DA,DR,DIC,DIE,DIR,DTOUT,DUOUT,DIRUT,IBDSEL,CHOICE,TEXT,TEXTU,RESULT,IBDPI,IBDCO,IBDF
"RTN","IBDFDE",183,0)
 K ^TMP("IBD-ASK",$J),^TMP("IBD-LCODE",$J),^TMP("IBD-LST",$J),^TMP("IBD-LTEXT",$J),^TMP("IBD-OBJ",$J)
"RTN","IBDFDE",184,0)
 Q
"RTN","IBDFDE",185,0)
 ;
"RTN","IBDFDE",186,0)
KILLTMP K ^TMP("IBD-OBJ",$J,IBDFMIEN),^TMP("IBD-LST",$J,IBDFMIEN),^TMP("IBD-ASK",$J,IBDFMIEN),^TMP("IB",$J,"INTERFACES"),^TMP("IBD-LTEXT",$J,IBDFMIEN),^TMP("IBD-LCODE",$J,IBDFMIEN)
"RTN","IBDFDE",187,0)
 Q
"RTN","IBDFDE",188,0)
 ;
"RTN","IBDFDE",189,0)
ERR ;
"RTN","IBDFDE",190,0)
 W !!,"Entry in Form Tracking file (357.96) = ",$S($G(IBDF("FORM"))'="":IBDF("FORM"),1:"NULL")
"RTN","IBDFDE",191,0)
 W !,"   Entry in Form Definition (357.95) = ",$S($G(IBDF("FRMDEF"))'="":IBDF("FRMDEF"),1:"NULL")
"RTN","IBDFDE",192,0)
 W !,"  Entry if Encounter Form file (357) = ",$S($G(IBDFMIEN)'="":IBDFMIEN,1:"NULL"),!
"RTN","IBDFDE",193,0)
 Q
"RTN","IBDFDE6")
0^15^B78210316
"RTN","IBDFDE6",1,0)
IBDFDE6 ;ALB/AAS - AICS Manual Data Entry, Entry point by clinic ; 29-APR-96
"RTN","IBDFDE6",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**11,51**;APR 24, 1997
"RTN","IBDFDE6",3,0)
 ;
"RTN","IBDFDE6",4,0)
 W !,?4,"** This option is OUT OF ORDER **" QUIT   ;Code set Versioning
"RTN","IBDFDE6",5,0)
 ;
"RTN","IBDFDE6",6,0)
% N %,%H,C,I,J,X,Y,ADD,DEL,ASKOTHER,DIR,DIC,DA,CNT,DFN,DIRUT,DUOUT,DTOUT,POP,RTN,FRMDATA,IBY,IBQUIT,IBDF,IBDOBJ,IBDPTSTI,IBDPTSTE,IBDPTNM,IBDPTDTI,SEL,IBD,IBDCKOUT
"RTN","IBDFDE6",7,0)
 N IBDPTDTE,IBDFMNME,IBDFMIEN,IBDFMSTI,IBDFMSTE,IBDFMIDI,IBDCLNME,IBFORM,IBDCLNPH,IBDPID,IBDPTPRI,IBDSEL,IBDPI,IBDCO,PXCA,SDCLST,PXCASTAT,PXKNODA,PXKNODB,IBDREDIT,IBDASK,IBDPRE,IBDX,ANS,CLNAME,CLSETUP,IBDSC,FORM,FORMLST,IBDFDT,IBD
"RTN","IBDFDE6",8,0)
 ;
"RTN","IBDFDE6",9,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFDE6",10,0)
 D HOME^%ZIS
"RTN","IBDFDE6",11,0)
 W !!,"Data Entry of Encounter Forms (by Clinic)",!!
"RTN","IBDFDE6",12,0)
 ;
"RTN","IBDFDE6",13,0)
STRT ; -- ask for Clinic, date then patient.  
"RTN","IBDFDE6",14,0)
 ;    Only list patients w/no data entry
"RTN","IBDFDE6",15,0)
 ;    find all forms for appt., then go through 1 at a time
"RTN","IBDFDE6",16,0)
 ;
"RTN","IBDFDE6",17,0)
 D END
"RTN","IBDFDE6",18,0)
 S IBQUIT=0
"RTN","IBDFDE6",19,0)
 S (IBDSC,IBDF("CLINIC"))=$$SELCL G:IBQUIT STRTQ
"RTN","IBDFDE6",20,0)
 I IBDSC<1 S IBQUIT=1 G STRTQ
"RTN","IBDFDE6",21,0)
 S CLNAME=$P($G(^SC(+IBDSC,0)),"^")
"RTN","IBDFDE6",22,0)
 S CLSETUP=$G(^SD(409.95,+$O(^SD(409.95,"B",+IBDSC,0)),0))
"RTN","IBDFDE6",23,0)
 ;
"RTN","IBDFDE6",24,0)
APPT W ! S IBDFDT=$$SELAP(.IBDF) G:IBQUIT STRTQ
"RTN","IBDFDE6",25,0)
 I IBDFDT<0 W !! G STRT
"RTN","IBDFDE6",26,0)
 ;
"RTN","IBDFDE6",27,0)
 D BLD
"RTN","IBDFDE6",28,0)
 I '$D(^TMP("IBD-PL",$J,IBDF("CLINIC"))) W !!,"No appointments on that Date!",!! G APPT
"RTN","IBDFDE6",29,0)
 ;
"RTN","IBDFDE6",30,0)
OVER D HDR ;,LIST
"RTN","IBDFDE6",31,0)
 W !! D SELPT G:IBQUIT STRTQ
"RTN","IBDFDE6",32,0)
 S IBDF("OPTION")=1
"RTN","IBDFDE6",33,0)
 I $G(RESULT)="" G APPT
"RTN","IBDFDE6",34,0)
 I $G(RESULT)=-1 G OVERQ
"RTN","IBDFDE6",35,0)
 S (DFN,IBDF("DFN"))=+RESULT,IBDF("APPT")=$P(RESULT,"^",2)
"RTN","IBDFDE6",36,0)
 S FORMLST=$$FINDID^IBDF18C(DFN,IBDF("APPT"),"",1)
"RTN","IBDFDE6",37,0)
 I FORMLST]"" I IBDF("CLINIC")'=$P(^IBD(357.96,+FORMLST,0),"^",10) S FORMLST=""
"RTN","IBDFDE6",38,0)
 I FORMLST="" W !,"No forms Printed for Patient" D ANYWAY I IBQUIT G STRTQ
"RTN","IBDFDE6",39,0)
 I FORMLST="" G OVERQ ;D PAUSE^IBDFDE G OVERQ
"RTN","IBDFDE6",40,0)
 F IBDX=1:1 S IBDF("FORM")=$P(FORMLST,"^",IBDX) Q:IBDF("FORM")=""  I IBDF("FORM")'="" D EN^IBDFDE K IBDSEL,IBDPI Q:IBQUIT
"RTN","IBDFDE6",41,0)
 W !!
"RTN","IBDFDE6",42,0)
 ;S IBDF("CLINIC")=IBDSC
"RTN","IBDFDE6",43,0)
OVERQ G OVER
"RTN","IBDFDE6",44,0)
 ;
"RTN","IBDFDE6",45,0)
STRTQ ;D PAUSE^IBDFDE
"RTN","IBDFDE6",46,0)
 G:IBQUIT END
"RTN","IBDFDE6",47,0)
 G APPT
"RTN","IBDFDE6",48,0)
 ;
"RTN","IBDFDE6",49,0)
ANYWAY ; -- if no forms available ask if want to enter form anyway
"RTN","IBDFDE6",50,0)
 ;    all to use default form, clinic setup,or any form
"RTN","IBDFDE6",51,0)
 ;
"RTN","IBDFDE6",52,0)
 N X,Y,DIR,DIRUT
"RTN","IBDFDE6",53,0)
 S DIR("?")="If you wish to enter data for this patient anyway, chose whether to use the default form, select any form, or use the clinic setup.  Answer None if you don't wish to enter any data."
"RTN","IBDFDE6",54,0)
 S DIR("A")="Enter Data from [A]ny form, [C]linic Setup, [D]efault, [N]one: "
"RTN","IBDFDE6",55,0)
 S DIR(0)="SA^A:ANYFORM;C:CLINIC SETUP;D:DEFAULT;N:NONE",DIR("B")="CLINIC SETUP"
"RTN","IBDFDE6",56,0)
 I '$D(CLSETUP),+$G(IBDF("CLINIC")) S CLNAME=$P($G(^SC(+IBDF("CLINIC"),0)),"^"),CLSETUP=$G(^SD(409.95,+$O(^SD(409.95,"B",+IBDF("CLINIC"),0)),0))
"RTN","IBDFDE6",57,0)
 I CLSETUP="" S DIR("B")="DEFAULT" W !,"No Forms Defined for Clinic"
"RTN","IBDFDE6",58,0)
 D ^DIR K DIR
"RTN","IBDFDE6",59,0)
 I $D(DUOUT)!($D(DTOUT)) S IBQUIT=1 G ANYWAYQ
"RTN","IBDFDE6",60,0)
 I $D(DIRUT) G ANYWAYQ
"RTN","IBDFDE6",61,0)
 S ANS=Y
"RTN","IBDFDE6",62,0)
 I ANS="N" G ANYWAYQ
"RTN","IBDFDE6",63,0)
 ;
"RTN","IBDFDE6",64,0)
 I ANS="D" D  G ANYWAYQ
"RTN","IBDFDE6",65,0)
 .S IBFORM=$P($G(^IBD(357.09,1,0)),"^",4)
"RTN","IBDFDE6",66,0)
 .I IBFORM="" S IBFORM=$O(^IBE(357,"B","PRIMARY CARE SAMPLE V2.1",0))
"RTN","IBDFDE6",67,0)
 .S FORMLST=$$OTHFRM(IBFORM)
"RTN","IBDFDE6",68,0)
 .Q
"RTN","IBDFDE6",69,0)
 ;
"RTN","IBDFDE6",70,0)
 I ANS="A" D  G ANYWAYQ
"RTN","IBDFDE6",71,0)
 .S DIC("S")="I $P(^(0),U)'=""GARBAGE"",$P(^(0),U)'=""TOOL KIT"""
"RTN","IBDFDE6",72,0)
 .S DIC="^IBE(357,",DIC(0)="AEQM" D ^DIC K DIC Q:+Y<1
"RTN","IBDFDE6",73,0)
 .S IBFORM=+Y
"RTN","IBDFDE6",74,0)
 .S FORMLST=$$OTHFRM(IBFORM)
"RTN","IBDFDE6",75,0)
 .Q
"RTN","IBDFDE6",76,0)
 ;
"RTN","IBDFDE6",77,0)
 I ANS="C" D  G ANYWAYQ
"RTN","IBDFDE6",78,0)
 .F IBD=2,6,8,9,3,4 S IBFORM=$P(CLSETUP,"^",IBD) I IBFORM W ! S FORMLST=FORMLST_$$OTHFRM(IBFORM)_"^"
"RTN","IBDFDE6",79,0)
 .I FORMLST="" W !!,"No forms defined for clinic"
"RTN","IBDFDE6",80,0)
 .Q
"RTN","IBDFDE6",81,0)
ANYWAYQ Q
"RTN","IBDFDE6",82,0)
 ;
"RTN","IBDFDE6",83,0)
OTHFRM(IBFORM) ; -- if no form printed, add form tracking entry,
"RTN","IBDFDE6",84,0)
 ; -- compile form if necessary return form list
"RTN","IBDFDE6",85,0)
 N FORMID,FORMLST
"RTN","IBDFDE6",86,0)
 S FORMID=$P($G(^IBE(357,IBFORM,0)),"^",13)
"RTN","IBDFDE6",87,0)
 I FORMID="" D
"RTN","IBDFDE6",88,0)
 .W !,"Please wait, Creating the necessary entry..."
"RTN","IBDFDE6",89,0)
 .L +^IBE(357,IBFORM):1
"RTN","IBDFDE6",90,0)
 .S FORMID=$$FORMTYPE^IBDF18D(1) W "."
"RTN","IBDFDE6",91,0)
 .S $P(^IBD(357.95,FORMID,0),"^",21)=IBFORM W "."
"RTN","IBDFDE6",92,0)
 .S $P(^IBE(357,IBFORM,0),"^",13)=FORMID
"RTN","IBDFDE6",93,0)
 .S:$P(^IBE(357,IBFORM,0),"^",13) ^IBE(357,"ADEF",$P(^IBE(357,IBFORM,0),"^",13),IBFORM)=""
"RTN","IBDFDE6",94,0)
 .L -^IBE(357,IBFORM)
"RTN","IBDFDE6",95,0)
 S FORMLST=+$$FID^IBDF18C(DFN,IBDF("APPT"),1,FORMID,IBDF("CLINIC"))
"RTN","IBDFDE6",96,0)
 S DIE="^IBD(357.96,",DR=".11////20",DA=FORMLST D ^DIE K DA,DR,DIC,DIE
"RTN","IBDFDE6",97,0)
 ;
"RTN","IBDFDE6",98,0)
 Q FORMLST
"RTN","IBDFDE6",99,0)
 ;
"RTN","IBDFDE6",100,0)
SELCL() ; -- select clinic
"RTN","IBDFDE6",101,0)
 S IBQUIT=0
"RTN","IBDFDE6",102,0)
 N DIR,DA,DR,DIC,DIE,X,Y,ANS,DIRUT
"RTN","IBDFDE6",103,0)
 S ANS=-1
"RTN","IBDFDE6",104,0)
 S DIR("?")="Enter the name of the clinic that you are entering encounter forms for."
"RTN","IBDFDE6",105,0)
 S DIR("S")="I $P(^(0),U,3)=""C"""
"RTN","IBDFDE6",106,0)
 S DIR(0)="PO^44:AEQM",DIR("A")="Select Clinic" D ^DIR K DIR,DA,DR,DIC
"RTN","IBDFDE6",107,0)
 I $D(DUOUT)!($D(DTOUT)) S IBQUIT=1 G SELCLQ
"RTN","IBDFDE6",108,0)
 I $D(DIRUT) G SELCLQ
"RTN","IBDFDE6",109,0)
 S ANS=+Y
"RTN","IBDFDE6",110,0)
SELCLQ Q ANS
"RTN","IBDFDE6",111,0)
 ;
"RTN","IBDFDE6",112,0)
 ;
"RTN","IBDFDE6",113,0)
SELAP(IBDF) ; -- select appointment date for a clinic
"RTN","IBDFDE6",114,0)
 S IBQUIT=0
"RTN","IBDFDE6",115,0)
 N DIR,DA,DR,DIC,DIE,X,Y,ANS,DIRUT
"RTN","IBDFDE6",116,0)
 S ANS=-1
"RTN","IBDFDE6",117,0)
 ;I $G(LASTDATE)?7N S DIR("B")=$$FMTE^XLFDT(LASTDATE)
"RTN","IBDFDE6",118,0)
 ;R !,"Appointment Date: ",X:$G(DTIME)
"RTN","IBDFDE6",119,0)
 S DIR(0)="DO^:DT:EX",DIR("A")="Appointment Date"
"RTN","IBDFDE6",120,0)
 S DIR("?")="Enter the date for the clinic that you wish to enter encounter forms for"
"RTN","IBDFDE6",121,0)
 S DIR("??")="^D APDT^IBDFDE6"
"RTN","IBDFDE6",122,0)
 D ^DIR K DIR
"RTN","IBDFDE6",123,0)
 I $D(DUOUT)!($D(DTOUT)) S IBQUIT=1 G SELAPQ
"RTN","IBDFDE6",124,0)
 I $D(DIRUT) G SELAPQ
"RTN","IBDFDE6",125,0)
 S ANS=+Y
"RTN","IBDFDE6",126,0)
SELAPQ Q ANS
"RTN","IBDFDE6",127,0)
 ;
"RTN","IBDFDE6",128,0)
SELPT ; -- select patient(s) to process
"RTN","IBDFDE6",129,0)
 S IBDCLIN=IBDF("CLINIC") N ARRAY,CNT,IBD K IBDF,IBDCO,PXCA,SEL S IBDF("CLINIC")=IBDCLIN K IBDCLIN
"RTN","IBDFDE6",130,0)
 S (ARRAY,RESULT,ANS)="",(IBQUIT,CNT)=0
"RTN","IBDFDE6",131,0)
 S DIR("?")="Enter the listed number or the name of the patient or the last 4 number of the SSN or the first letter of the last name with the last 4 numbers of the SSN."
"RTN","IBDFDE6",132,0)
 S DIR("??")="^D LIST^IBDFDE6"
"RTN","IBDFDE6",133,0)
 S DIR(0)="FO^1:30",DIR("A")="Select Patient"
"RTN","IBDFDE6",134,0)
 D ^DIR K DIR
"RTN","IBDFDE6",135,0)
 I $D(DUOUT)!($D(DTOUT)) S IBQUIT=1 G SELQ
"RTN","IBDFDE6",136,0)
 S ANS=$$UP^XLFSTR(Y)
"RTN","IBDFDE6",137,0)
 I ANS="" G SELQ
"RTN","IBDFDE6",138,0)
 I $D(DIRUT) S IBQUIT=1 G SELQ
"RTN","IBDFDE6",139,0)
 I ANS=+ANS S ARRAY="IBD-PL" I $D(^TMP(ARRAY,$J,IBDF("CLINIC"),ANS)) S RESULT=^(ANS) W "   ",$P($G(^DPT(+RESULT,0)),"^") G SELQ
"RTN","IBDFDE6",140,0)
 ;
"RTN","IBDFDE6",141,0)
 I ANS?4N S ARRAY="IBD-PL4" D ARRAY(ARRAY,ANS) G FIND
"RTN","IBDFDE6",142,0)
 I ANS?1A4N S ARRAY="IBD-PLB" D ARRAY(ARRAY,ANS) G FIND
"RTN","IBDFDE6",143,0)
 S ARRAY="IBD-PLN" D ARRAY(ARRAY,ANS) D  G FIND
"RTN","IBDFDE6",144,0)
 .S NAME=ANS F  S NAME=$O(^TMP(ARRAY,$J,IBDF("CLINIC"),NAME)) Q:$E(NAME,1,$L(ANS))'=ANS  D ARRAY(ARRAY,NAME)
"RTN","IBDFDE6",145,0)
 G SELQ
"RTN","IBDFDE6",146,0)
FIND ;find appropriate pt appt from array
"RTN","IBDFDE6",147,0)
 I CNT=1 S RESULT=$G(^TMP(ARRAY,$J,IBDF("CLINIC"),$P(IBD(CNT),"^",2),+IBD(CNT))) D:$D(RESULT)  G SELQ
"RTN","IBDFDE6",148,0)
 .I ARRAY="IBD-PLN" W "   ",$E($P($G(^DPT(+RESULT,0)),"^"),($L(ANS)+1),999) Q
"RTN","IBDFDE6",149,0)
 .W "   ",$P($G(^DPT(+RESULT,0)),"^")
"RTN","IBDFDE6",150,0)
 S RESULT=$$MULT^IBDFDE61(CNT,.IBD) D:$D(RESULT)
"RTN","IBDFDE6",151,0)
 .W "   ",$P($G(^DPT(+RESULT,0)),"^")
"RTN","IBDFDE6",152,0)
 I RESULT="" W $C(7),"  ??  Not Found" S RESULT=-1
"RTN","IBDFDE6",153,0)
 ;
"RTN","IBDFDE6",154,0)
SELQ Q
"RTN","IBDFDE6",155,0)
 ;
"RTN","IBDFDE6",156,0)
ARRAY(ARRAY,ANS) ; -- bld array of multiple patients
"RTN","IBDFDE6",157,0)
 ; -- required variables:  array = name x-ref; ans = name of selection
"RTN","IBDFDE6",158,0)
 S A=0 F  S A=$O(^TMP(ARRAY,$J,IBDF("CLINIC"),ANS,A)) Q:'A  S CNT=CNT+1,IBD(CNT)=A_"^"_ANS
"RTN","IBDFDE6",159,0)
 Q
"RTN","IBDFDE6",160,0)
BLD ; -- Find all appointments for a date
"RTN","IBDFDE6",161,0)
 K ^TMP("IBD-PL",$J),^TMP("IBD-PLN",$J)
"RTN","IBDFDE6",162,0)
 N SC,IBD,IBD1,NODE,SNODE
"RTN","IBDFDE6",163,0)
 S IBD=IBDFDT,SC=IBDF("CLINIC"),CNT=0
"RTN","IBDFDE6",164,0)
 F  S IBD=$O(^SC(SC,"S",IBD)) Q:'IBD!(IBD>(IBDFDT+.24))  D
"RTN","IBDFDE6",165,0)
 .S IBD1=0 F  S IBD1=$O(^SC(SC,"S",IBD,1,IBD1)) Q:'IBD1  D
"RTN","IBDFDE6",166,0)
 ..S NODE=$G(^SC(SC,"S",IBD,1,IBD1,0))
"RTN","IBDFDE6",167,0)
 ..S SNODE=$G(^DPT(+NODE,"S",IBD,0))
"RTN","IBDFDE6",168,0)
 ..S X=$P(SNODE,"^",2)
"RTN","IBDFDE6",169,0)
 ..I X'="","CNAPCA"[X Q  ;inpatient appointments are okay
"RTN","IBDFDE6",170,0)
 ..S (DFN,IBDF("DFN"))=+NODE
"RTN","IBDFDE6",171,0)
 ..S CNT=CNT+1
"RTN","IBDFDE6",172,0)
 ..S ^TMP("IBD-PL",$J,SC,CNT)=DFN_"^"_IBD_"^"_SNODE
"RTN","IBDFDE6",173,0)
 ..S ^TMP("IBD-PLN",$J,SC,$P(^DPT(DFN,0),"^"),CNT)=DFN_"^"_IBD_"^"_SNODE
"RTN","IBDFDE6",174,0)
 ..S ^TMP("IBD-PLB",$J,SC,$E($P(^DPT(DFN,0),"^",1),1)_$E($P(^DPT(DFN,0),"^",9),6,9),CNT)=DFN_"^"_IBD_"^"_SNODE
"RTN","IBDFDE6",175,0)
 ..S ^TMP("IBD-PL4",$J,SC,$E($P(^DPT(DFN,0),"^",9),6,9),CNT)=DFN_"^"_IBD_"^"_SNODE
"RTN","IBDFDE6",176,0)
 Q
"RTN","IBDFDE6",177,0)
 ;
"RTN","IBDFDE6",178,0)
LIST ; -- print list of patients
"RTN","IBDFDE6",179,0)
 N IBD,IBJ,FORM,STATUS,CNT,X,IBQUIT
"RTN","IBDFDE6",180,0)
 S IBQUIT=0
"RTN","IBDFDE6",181,0)
 S IBD=0 F  S IBD=$O(^TMP("IBD-PL",$J,IBDF("CLINIC"),IBD)) Q:'IBD!(IBQUIT)  S NODE=$G(^TMP("IBD-PL",$J,IBDF("CLINIC"),IBD)) D ONE(NODE,IBD) I '(IBD#15) D ASKPT^IBDFDE61(IBD)
"RTN","IBDFDE6",182,0)
 Q
"RTN","IBDFDE6",183,0)
 ;
"RTN","IBDFDE6",184,0)
ONE(NODE,IBD1) ; -- write one line
"RTN","IBDFDE6",185,0)
 N CNT,C
"RTN","IBDFDE6",186,0)
 Q:$G(NODE)=""
"RTN","IBDFDE6",187,0)
 S DFN=+NODE,APPT=$P(NODE,"^",2)
"RTN","IBDFDE6",188,0)
 S FORM=$$FINDID^IBDF18C(DFN,APPT,"",1),STATUS="NO FORM PRINTED"
"RTN","IBDFDE6",189,0)
 S CNT=0 F IBJ=1:1 S X=$P(FORM,"^",IBJ) Q:X=""  S CNT=CNT+1
"RTN","IBDFDE6",190,0)
 I +FORM S Y=$P($G(^IBD(357.96,+FORM,0)),"^",11),C=$P(^DD(357.96,.11,0),"^",2) D Y^DIQ S STATUS=Y
"RTN","IBDFDE6",191,0)
 W !?2,IBD1,?5,$E($P(^DPT(DFN,0),"^"),1,18),?26,$P($G(^DPT(DFN,.36)),"^",4),?32,$$FMTE^XLFDT(+APPT),?52,$E($G(STATUS),1,24),?77,"("_CNT_")"
"RTN","IBDFDE6",192,0)
 Q
"RTN","IBDFDE6",193,0)
 ;
"RTN","IBDFDE6",194,0)
APDT ; -- list last 30 days appointment dates in clinic
"RTN","IBDFDE6",195,0)
 S (X,Y)=$$FMADD^XLFDT(DT,-62),CNT=0
"RTN","IBDFDE6",196,0)
 F  S X=$O(^SC(IBDF("CLINIC"),"S",X)) Q:'X!(X>DT)  D
"RTN","IBDFDE6",197,0)
 .I $E(X,1,7)=Y Q
"RTN","IBDFDE6",198,0)
 .S Y=$E(X,1,7),CNT=CNT+1
"RTN","IBDFDE6",199,0)
 .I CNT=1 W !!,"The following are valid Appointment dates in the past 60 days:"
"RTN","IBDFDE6",200,0)
 .W:(CNT#4=1) !,?3,$$FMTE^XLFDT(Y)
"RTN","IBDFDE6",201,0)
 .W:(CNT#4=2) ?20,$$FMTE^XLFDT(Y)
"RTN","IBDFDE6",202,0)
 .W:(CNT#4=3) ?40,$$FMTE^XLFDT(Y)
"RTN","IBDFDE6",203,0)
 .W:(CNT#4=0) ?60,$$FMTE^XLFDT(Y)
"RTN","IBDFDE6",204,0)
 Q
"RTN","IBDFDE6",205,0)
 ;
"RTN","IBDFDE6",206,0)
HDR ; -- print Clinic header
"RTN","IBDFDE6",207,0)
 N CNT,IBD,IBD1 W @IOF
"RTN","IBDFDE6",208,0)
 S CNT=0
"RTN","IBDFDE6",209,0)
 F IBD=2,6,8,9,3,4 S IBD1=$P(CLSETUP,"^",IBD) I IBD1 S CNT=CNT+1
"RTN","IBDFDE6",210,0)
 W !,"      Clinic: ",$E(CLNAME,1,25) W ?40,"         Date: ",$$FMTE^XLFDT(IBDFDT)
"RTN","IBDFDE6",211,0)
 S FORM=$P(CLSETUP,"^",2),IBDFMNME=$P($G(^IBE(357,+FORM,0)),"^")
"RTN","IBDFDE6",212,0)
 W !,"  Basic Form: ",$E(IBDFMNME,1,25) W ?40," Active Forms: ",CNT
"RTN","IBDFDE6",213,0)
 W !,"Appointments: ",$O(^TMP("IBD-PL",$J,IBDF("CLINIC"),""),-1)
"RTN","IBDFDE6",214,0)
 W !,$TR($J(" ",IOM)," ","=")
"RTN","IBDFDE6",215,0)
 Q
"RTN","IBDFDE6",216,0)
 ;
"RTN","IBDFDE6",217,0)
END K I,J,X,Y,DA,DR,DIC,DIE,DIR,DTOUT,DUOUT,DIRUT,IBDSEL,CHOICE,TEXT,TEXTU,RESULT,IBDPI,IBDCO,IBDF
"RTN","IBDFDE6",218,0)
 K ^TMP("IBD-PL",$J),^TMP("IBD-PLN",$J),^TMP("IBD-PLB",$J),^TMP("IBD-PL4",$J),^TMP("IBD-MORE",$J),^TMP("IBD-PLCHK",$J)
"RTN","IBDFDE6",219,0)
 K ^TMP("IBD-ASK",$J),^TMP("IBD-LCODE",$J),^TMP("IBD-LST",$J),^TMP("IBD-LTEXT",$J),^TMP("IBD-OBJ",$J)
"RTN","IBDFDE6",220,0)
 Q
"RTN","IBDFDE7")
0^16^B46791911
"RTN","IBDFDE7",1,0)
IBDFDE7 ;ALB/AAS - AICS Manual Data Entry, Entry point for Group Clinics ; 29-APR-96
"RTN","IBDFDE7",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**36,51**;APR 24, 1997
"RTN","IBDFDE7",3,0)
 ;
"RTN","IBDFDE7",4,0)
 W !,?4,"** This option is OUT OF ORDER **" QUIT   ;Code set Versioning
"RTN","IBDFDE7",5,0)
 ;
"RTN","IBDFDE7",6,0)
% N %,%H,C,I,J,X,Y,ADD,DEL,ASKOTHER,DIR,DIC,DA,CNT,DFN,DIRUT,DUOUT,DTOUT,POP,RTN,FRMDATA,IBDA,IBY,IBQUIT,IBDF,IBDOBJ,IBDPTSTI,IBDPTSTE,IBDPTNM,IBDPTDTI,SEL,IBD,IBDCKOUT
"RTN","IBDFDE7",7,0)
 N IBDPTDTE,IBDFMNME,IBDFMIEN,IBDFMSTI,IBDFMSTE,IBDFMIDI,IBDCLNME,IBFORM,IBDCLNPH,IBDPID,IBDPTPRI,IBDSEL,IBDPI,IBDCO,PXCA,SDCLST,PXCASTAT,PXKNODA,PXKNODB,IBDREDIT,IBDASK,IBDPRE,IBDX,ANS,CLNAME,CLSETUP,IBDSC,FORM,FORMLST,IBDFDT
"RTN","IBDFDE7",8,0)
 ;
"RTN","IBDFDE7",9,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFDE7",10,0)
 D HOME^%ZIS
"RTN","IBDFDE7",11,0)
 W !!,"Data Entry of Encounter Forms for Group Clinics",!
"RTN","IBDFDE7",12,0)
 ;
"RTN","IBDFDE7",13,0)
STRT ; -- ask for Clinic, appt. date/time
"RTN","IBDFDE7",14,0)
 ;    list patients, allow to deselect
"RTN","IBDFDE7",15,0)
 ;    find all forms for appt., then go through 1 at a time
"RTN","IBDFDE7",16,0)
 ;    then send data for each patient
"RTN","IBDFDE7",17,0)
 ;
"RTN","IBDFDE7",18,0)
 D END W !
"RTN","IBDFDE7",19,0)
 S IBQUIT=0
"RTN","IBDFDE7",20,0)
 S (IBDSC,IBDF("CLINIC"))=$$SELCL^IBDFDE6 G:IBQUIT STRTQ
"RTN","IBDFDE7",21,0)
 I IBDSC<1 S IBQUIT=1 G STRTQ
"RTN","IBDFDE7",22,0)
 S CLNAME=$P($G(^SC(+IBDSC,0)),"^")
"RTN","IBDFDE7",23,0)
 S CLSETUP=$G(^SD(409.95,+$O(^SD(409.95,"B",+IBDSC,0)),0))
"RTN","IBDFDE7",24,0)
 ;
"RTN","IBDFDE7",25,0)
OVER ;
"RTN","IBDFDE7",26,0)
 W !
"RTN","IBDFDE7",27,0)
 S IBQUIT=0
"RTN","IBDFDE7",28,0)
 S IBDFDT=$$SELAPT(.IBDF) G:IBQUIT STRTQ
"RTN","IBDFDE7",29,0)
 I IBDFDT<0 G STRT
"RTN","IBDFDE7",30,0)
 S IBDF("APPT")=IBDFDT
"RTN","IBDFDE7",31,0)
 ;
"RTN","IBDFDE7",32,0)
 D BLD
"RTN","IBDFDE7",33,0)
 I '$D(^TMP("IBD-PL",$J,IBDF("CLINIC"))) W !!,"No valid appointments at that Date/Time!",!! G STRTQ
"RTN","IBDFDE7",34,0)
 ;
"RTN","IBDFDE7",35,0)
 D HDR^IBDFDE6,LIST^IBDFDE6
"RTN","IBDFDE7",36,0)
 W !!
"RTN","IBDFDE7",37,0)
 D EXCLUD
"RTN","IBDFDE7",38,0)
 I IBQUIT=2 S IBQUIT=0 G STRTQ
"RTN","IBDFDE7",39,0)
 G:IBQUIT STRTQ
"RTN","IBDFDE7",40,0)
 ;
"RTN","IBDFDE7",41,0)
 ; -- get first patient, check form(s)
"RTN","IBDFDE7",42,0)
 ;   do data entry on form and if okay pass data for all patients
"RTN","IBDFDE7",43,0)
 S IBDSTRT=+$O(^TMP("IBD-PL",$J,IBDF("CLINIC"),0))
"RTN","IBDFDE7",44,0)
 S NODE=$G(^TMP("IBD-PL",$J,IBDF("CLINIC"),IBDSTRT))
"RTN","IBDFDE7",45,0)
 S (DFN,IBDFN)=+NODE
"RTN","IBDFDE7",46,0)
 S FORMLST=$$FINDID^IBDF18C(DFN,IBDF("APPT"),"",1)
"RTN","IBDFDE7",47,0)
 I FORMLST="" W !,"No forms Printed for first Patient" D ANYWAY^IBDFDE6
"RTN","IBDFDE7",48,0)
 I FORMLST="" G OVERQ
"RTN","IBDFDE7",49,0)
 S IBDF("SAVE")=1 ;save ibdsel(array)
"RTN","IBDFDE7",50,0)
 F IBDX=1:1 S IBDF("FORM")=$P(FORMLST,"^",IBDX) Q:IBDF("FORM")=""  I IBDF("FORM")'="" D EN^IBDFDE D
"RTN","IBDFDE7",51,0)
 .I $G(IBDF("NOTHING"))!(IBQUIT) W !! Q
"RTN","IBDFDE7",52,0)
 .D ALLPTS K IBDSEL,IBDPI Q:IBQUIT
"RTN","IBDFDE7",53,0)
 K IBDF("SAVE")
"RTN","IBDFDE7",54,0)
 ;
"RTN","IBDFDE7",55,0)
OVERQ G OVER
"RTN","IBDFDE7",56,0)
 ;
"RTN","IBDFDE7",57,0)
STRTQ D PAUSE^IBDFDE G:IBQUIT END
"RTN","IBDFDE7",58,0)
 G STRT
"RTN","IBDFDE7",59,0)
 ;
"RTN","IBDFDE7",60,0)
ALLPTS ; -- loop through all patients, merge ibdf=^tmp("ibd-save),
"RTN","IBDFDE7",61,0)
 ;    reset dfn, pass data to ibdfrpc4
"RTN","IBDFDE7",62,0)
 N PARAM,FORMID,IBX,NODE
"RTN","IBDFDE7",63,0)
 S FORMID=$P(^IBD(357.96,+IBDF("FORM"),0),"^",4)
"RTN","IBDFDE7",64,0)
 S PARAM=$P($G(^IBD(357.09,1,0)),"^",7)
"RTN","IBDFDE7",65,0)
 I $G(^TMP("IBD-SAVED",$J,"DYNAMIC")) W !!,"Form contains patient specific information, Not available for this option!",!! G ALLPTQ
"RTN","IBDFDE7",66,0)
 S IBDA=IBDSTRT
"RTN","IBDFDE7",67,0)
 F  S IBDA=$O(^TMP("IBD-PL",$J,IBDF("CLINIC"),IBDA)) Q:IBDA=""!(IBQUIT)  D
"RTN","IBDFDE7",68,0)
 .S IBX=IBDA
"RTN","IBDFDE7",69,0)
 .S NODE=$G(^TMP("IBD-PL",$J,IBDF("CLINIC"),IBX))
"RTN","IBDFDE7",70,0)
 .M IBDF=^TMP("IBD-SAVED",$J)
"RTN","IBDFDE7",71,0)
 .S (DFN,IBDF("DFN"))=+NODE
"RTN","IBDFDE7",72,0)
 .S IBDF("SDOE")=$P(NODE,"^",22)
"RTN","IBDFDE7",73,0)
 .S IBDF("FORM")=+$$FID^IBDF18C(DFN,IBDF("APPT"),1,FORMID,IBDF("CLINIC"))
"RTN","IBDFDE7",74,0)
 .W !!,"Check out interview for: ",$P($G(^DPT(DFN,0)),"^")
"RTN","IBDFDE7",75,0)
 .K IBDCO,IBDF("AO"),IBDF("SC"),IBDF("IR"),IBDF("EC"),IBDF("MST")
"RTN","IBDFDE7",76,0)
 .D CHKOUT^IBDFDE0(IBDF("SDOE"))
"RTN","IBDFDE7",77,0)
 .M IBDF=IBDCO
"RTN","IBDFDE7",78,0)
 .D SEND^IBDFRPC4(.RESULT,.IBDF)
"RTN","IBDFDE7",79,0)
 .I PARAM=3 D DISP^IBDFDE1
"RTN","IBDFDE7",80,0)
 .I PARAM,$D(PXCA("ERROR"))!($D(PXCA("WARNING"))) D ERR^IBDFDE1
"RTN","IBDFDE7",81,0)
 .I $P($G(^IBD(357.09,1,0)),"^",6) D MAKAPPT^IBDFDE1
"RTN","IBDFDE7",82,0)
 ;
"RTN","IBDFDE7",83,0)
 K ^TMP("IBD-SAVED",$J)
"RTN","IBDFDE7",84,0)
ALLPTQ Q
"RTN","IBDFDE7",85,0)
 ;
"RTN","IBDFDE7",86,0)
SELAPT(IBDF) ; -- select appointment date/time for a clinic
"RTN","IBDFDE7",87,0)
 N DIR,DA,DR,DIC,DIE,X,Y,ANS,DIRUT
"RTN","IBDFDE7",88,0)
 S ANS=-1
"RTN","IBDFDE7",89,0)
 S DIR(0)="DO^:NOW:AEXRT^D SCRN^IBDFDE7",DIR("A")="Appointment Date/Time"
"RTN","IBDFDE7",90,0)
 S DIR("?")="Enter the date/time for the clinic that you wish to enter encounter forms for.  Appointments must be present to enter the date time."
"RTN","IBDFDE7",91,0)
 S DIR("??")="^D APDT^IBDFDE7"
"RTN","IBDFDE7",92,0)
 D ^DIR K DIR
"RTN","IBDFDE7",93,0)
 I $D(DIRUT) G SELAPQ
"RTN","IBDFDE7",94,0)
 S ANS=+Y
"RTN","IBDFDE7",95,0)
SELAPQ Q ANS
"RTN","IBDFDE7",96,0)
 ;
"RTN","IBDFDE7",97,0)
SCRN ; -- input transform logic for selecting an appointment date/time
"RTN","IBDFDE7",98,0)
 I $G(IBDF("CLINIC"))="" K X
"RTN","IBDFDE7",99,0)
 I '$D(^SC(IBDF("CLINIC"),"S",Y,1)) W $C(7),"??  No appointments that time." K X
"RTN","IBDFDE7",100,0)
 Q
"RTN","IBDFDE7",101,0)
 ;
"RTN","IBDFDE7",102,0)
EXCLUD ; -- select patient(s) to process
"RTN","IBDFDE7",103,0)
 S RESULT=""
"RTN","IBDFDE7",104,0)
 S DIR("?")="Enter the number of the patient to exclude."
"RTN","IBDFDE7",105,0)
 S DIR("??")="^D LIST^IBDFDE6"
"RTN","IBDFDE7",106,0)
 S DIR(0)="FO^1:30",DIR("A")="Exclude Patient"
"RTN","IBDFDE7",107,0)
 I RESULT'="" S DIR("A")="Exclude Another Patient"
"RTN","IBDFDE7",108,0)
 D ^DIR K DIR
"RTN","IBDFDE7",109,0)
 I $D(DTOUT)!($D(DUOUT)) S IBQUIT=1 G EXCLUDQ
"RTN","IBDFDE7",110,0)
 S ANS=Y
"RTN","IBDFDE7",111,0)
 I ANS="" G EXCLUDQ
"RTN","IBDFDE7",112,0)
 I ANS'=+ANS W !,"You must select a number from the list."
"RTN","IBDFDE7",113,0)
 I ANS=+ANS,$D(^TMP("IBD-PL",$J,IBDF("CLINIC"),ANS)) D
"RTN","IBDFDE7",114,0)
 .S RESULT=^TMP("IBD-PL",$J,IBDF("CLINIC"),ANS)
"RTN","IBDFDE7",115,0)
 .K ^TMP("IBD-PL",$J,IBDF("CLINIC"),ANS),^TMP("IBD-PLN",$J,IBDF("CLINIC"),$P($G(^DPT(+RESULT,0)),"^"))
"RTN","IBDFDE7",116,0)
 .W "  ",$P($G(^DPT(+RESULT,0)),"^"),"   ","Excluded!"
"RTN","IBDFDE7",117,0)
 ;
"RTN","IBDFDE7",118,0)
 I '$D(^TMP("IBD-PL",$J,IBDF("CLINIC"))) W !!,"No patients left" S IBQUIT=2 G EXCLUDQ
"RTN","IBDFDE7",119,0)
 ;
"RTN","IBDFDE7",120,0)
 G EXCLUD
"RTN","IBDFDE7",121,0)
EXCLUDQ Q
"RTN","IBDFDE7",122,0)
 ;
"RTN","IBDFDE7",123,0)
BLD ; -- Find all appointments for a date
"RTN","IBDFDE7",124,0)
 K ^TMP("IBD-PL",$J),^TMP("IBD-PLN",$J)
"RTN","IBDFDE7",125,0)
 N SC,IBD,IBD1
"RTN","IBDFDE7",126,0)
 S IBD=IBDFDT,SC=IBDF("CLINIC"),CNT=0
"RTN","IBDFDE7",127,0)
 S IBD1=0 F  S IBD1=$O(^SC(SC,"S",IBD,1,IBD1)) Q:'IBD1  D
"RTN","IBDFDE7",128,0)
 .S NODE=$G(^SC(SC,"S",IBD,1,IBD1,0))
"RTN","IBDFDE7",129,0)
 .S SNODE=$G(^DPT(+NODE,"S",IBD,0))
"RTN","IBDFDE7",130,0)
 .S X=$P(SNODE,"^",2)
"RTN","IBDFDE7",131,0)
 .I X'="","CNAPCA"[X Q  ;inpatient appointments are okay
"RTN","IBDFDE7",132,0)
 .S (DFN,IBDF("DFN"))=+NODE
"RTN","IBDFDE7",133,0)
 .S CNT=CNT+1
"RTN","IBDFDE7",134,0)
 .S ^TMP("IBD-PL",$J,SC,CNT)=DFN_"^"_IBD_"^"_SNODE
"RTN","IBDFDE7",135,0)
 .S ^TMP("IBD-PLN",$J,SC,$P(^DPT(DFN,0),"^"))=DFN_"^"_IBD_"^"_SNODE
"RTN","IBDFDE7",136,0)
 Q
"RTN","IBDFDE7",137,0)
 ;
"RTN","IBDFDE7",138,0)
LIST ; -- print list of patients
"RTN","IBDFDE7",139,0)
 N IBD,IBJ,FORM,STATUS
"RTN","IBDFDE7",140,0)
 S IBD=0 F  S IBD=$O(^TMP("IBD-PL",$J,IBDF("CLINIC"),IBD)) Q:'IBD  D
"RTN","IBDFDE7",141,0)
 .S DFN=+$G(^TMP("IBD-PL",$J,IBDF("CLINIC"),IBD)),APPT=$P($G(^(IBD)),"^",2),SNODE=$P($G(^(IBD)),"^",3,99)
"RTN","IBDFDE7",142,0)
 .S FORM=+$$FINDID^IBDF18C(DFN,APPT,"",1),STATUS="NO FORM PRINTED"
"RTN","IBDFDE7",143,0)
 .I FORM S Y=$P($G(^IBD(357.96,+FORM,0)),"^",11),C=$P(^DD(357.96,.11,0),"^",2) D Y^DIQ S STATUS=Y
"RTN","IBDFDE7",144,0)
 .W !?2,IBD,?5,$E($P(^DPT(DFN,0),"^"),1,20),?29,$P($G(^DPT(DFN,.36)),"^",3),?43,$$FMTE^XLFDT(+APPT),?64,$E($G(STATUS),1,16)
"RTN","IBDFDE7",145,0)
 Q
"RTN","IBDFDE7",146,0)
 ;
"RTN","IBDFDE7",147,0)
APDT ; -- list last 30 days appointment dates in clinic
"RTN","IBDFDE7",148,0)
 S (X,Y)=$$FMADD^XLFDT(DT,-60),CNT=0
"RTN","IBDFDE7",149,0)
 F  S X=$O(^SC(IBDF("CLINIC"),"S",X)) Q:'X!(X>DT)  D
"RTN","IBDFDE7",150,0)
 .S Y=X,CNT=CNT+1
"RTN","IBDFDE7",151,0)
 .I CNT=1 W !!,"The following are valid Appointment date/times in the past 60 days:"
"RTN","IBDFDE7",152,0)
 .W:(CNT#3=1) !,?3,$$FMTE^XLFDT(Y)
"RTN","IBDFDE7",153,0)
 .W:(CNT#3=2) ?30,$$FMTE^XLFDT(Y)
"RTN","IBDFDE7",154,0)
 .W:(CNT#3=0) ?60,$$FMTE^XLFDT(Y)
"RTN","IBDFDE7",155,0)
 Q
"RTN","IBDFDE7",156,0)
 ;
"RTN","IBDFDE7",157,0)
HDR ; -- print Clinic header
"RTN","IBDFDE7",158,0)
 W @IOF
"RTN","IBDFDE7",159,0)
 W !,"      Clinic: ",$E(CLNAME,1,25) W ?40,"       Date: ",$$FMTE^XLFDT(IBDFDT)
"RTN","IBDFDE7",160,0)
 S FORM=$P(CLSETUP,"^",2),IBDFMNME=$P($G(^IBE(357,+FORM,0)),"^")
"RTN","IBDFDE7",161,0)
 W !,"  Basic Form: ",$E(IBDFMNME,1,25) ;W ?40,"Form Status: ",$E(IBDFMSTE,1,25)
"RTN","IBDFDE7",162,0)
 W !,$TR($J(" ",IOM)," ","=")
"RTN","IBDFDE7",163,0)
 Q
"RTN","IBDFDE7",164,0)
 ;
"RTN","IBDFDE7",165,0)
END K I,J,X,Y,DA,DR,DIC,DIE,DIR,DTOUT,DUOUT,DIRUT,IBDSEL,CHOICE,TEXT,TEXTU,RESULT,IBDPI,IBDCO,IBDF,IBDA,SDFN
"RTN","IBDFDE7",166,0)
 K ^TMP("IBD-PL",$J),^TMP("IBD-PLN",$J),^TMP("IBD-SAVED",$J),^TMP("IBD-MORE",$J),^TMP("IBD-PLCHK",$J),^TMP("IBD-PL4",$J),^TMP("IBD-PLB",$J)
"RTN","IBDFDE7",167,0)
 K ^TMP("IBD-ASK",$J),^TMP("IBD-LCODE",$J),^TMP("IBD-LST",$J),^TMP("IBD-LTEXT",$J),^TMP("IBD-OBJ",$J)
"RTN","IBDFDE7",168,0)
 Q
"RTN","IBDFDE8")
0^17^B16401045
"RTN","IBDFDE8",1,0)
IBDFDE8 ;ALB/AAS - AICS Manual Data Entry, Entry for no form no appt ; 31-MAY-96
"RTN","IBDFDE8",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**51**;APR 24, 1997
"RTN","IBDFDE8",3,0)
 ;
"RTN","IBDFDE8",4,0)
 W !,?4,"** This option is OUT OF ORDER **" QUIT   ;Code set Versioning
"RTN","IBDFDE8",5,0)
 ;
"RTN","IBDFDE8",6,0)
% N %,%H,C,I,J,X,Y,ADD,DEL,ASKOTHER,DIR,DIC,DA,CNT,DFN,DIRUT,DUOUT,DTOUT,POP,RTN,FRMDATA,IBY,IBQUIT,IBDF,IBDOBJ,IBDPTSTI,IBDPTSTE,IBDPTNM,IBDPTDTI,SEL,IBD,IBDCKOUT
"RTN","IBDFDE8",7,0)
 N IBDPTDTE,IBDFMNME,IBDFMIEN,IBDFMSTI,IBDFMSTE,IBDFMIDI,IBDCLNME,IBFORM,IBDCLNPH,IBDPID,IBDPTPRI,IBDSEL,IBDPI,IBDCO,PXCA,SDCLST,PXCASTAT,PXKNODA,PXKNODB,IBDREDIT,IBDASK,IBDPRE,IBDAPPT,IBDSAEOK,IBDAPPT
"RTN","IBDFDE8",8,0)
 ;
"RTN","IBDFDE8",9,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFDE8",10,0)
 D HOME^%ZIS
"RTN","IBDFDE8",11,0)
 W !!,"Data Entry Pre-Printed form, No appointment",!
"RTN","IBDFDE8",12,0)
 ;
"RTN","IBDFDE8",13,0)
STRT ; -- ask for form id
"RTN","IBDFDE8",14,0)
 D END
"RTN","IBDFDE8",15,0)
 S IBQUIT=0
"RTN","IBDFDE8",16,0)
 W !
"RTN","IBDFDE8",17,0)
 S DIR("?")="Select the patient you wish to enter data on for an encounter."
"RTN","IBDFDE8",18,0)
 S DIR(0)="PO^2:AEQM",DIR("A")="Select Patient" D ^DIR K DIR,DA,DR,DIC
"RTN","IBDFDE8",19,0)
 I $D(DIRUT) G END
"RTN","IBDFDE8",20,0)
 S (IBDF("DFN"),DFN)=+Y
"RTN","IBDFDE8",21,0)
 ;
"RTN","IBDFDE8",22,0)
CLINIC ; -- select clinic
"RTN","IBDFDE8",23,0)
 W !
"RTN","IBDFDE8",24,0)
 S IBDSAEOK=0
"RTN","IBDFDE8",25,0)
 S IBDF("CLINIC")=$$SELCL^IBDFDE6 G:IBQUIT STRTQ
"RTN","IBDFDE8",26,0)
 I IBDF("CLINIC")=-1 G STRTQ
"RTN","IBDFDE8",27,0)
 I IBDF("CLINIC")<1 G STRT
"RTN","IBDFDE8",28,0)
 S CLNAME=$P($G(^SC(+IBDF("CLINIC"),0)),"^")
"RTN","IBDFDE8",29,0)
 S CLSETUP=$G(^SD(409.95,+$O(^SD(409.95,"B",+IBDF("CLINIC"),0)),0))
"RTN","IBDFDE8",30,0)
 ;
"RTN","IBDFDE8",31,0)
 ; -- select appointment date time
"RTN","IBDFDE8",32,0)
 W !
"RTN","IBDFDE8",33,0)
 S IBDF("APPT")=$$ASKDT^IBDFDE0("Appointment Date/Time: ","","AEQRXT","",DT+.24,"D LSTAP^IBDFDE8") G:IBQUIT STRTQ
"RTN","IBDFDE8",34,0)
 I IBDF("APPT")<1 G CLINIC
"RTN","IBDFDE8",35,0)
 ;
"RTN","IBDFDE8",36,0)
 W ! D LISTONE W !
"RTN","IBDFDE8",37,0)
 ;
"RTN","IBDFDE8",38,0)
 ;
"RTN","IBDFDE8",39,0)
 I IBDAPPT S IBDSAEOK=$$ASKYN^IBDFDE0("Okay to use "_$$FMTE^XLFDT(IBDF("APPT"))_" for Data Entry","No")
"RTN","IBDFDE8",40,0)
 I 'IBDAPPT S IBDSAEOK=$$ASKYN^IBDFDE0("Okay to Create Stand Alone Encounter","No")
"RTN","IBDFDE8",41,0)
 W !
"RTN","IBDFDE8",42,0)
 G:'IBDSAEOK CLINIC G:IBQUIT STRTQ
"RTN","IBDFDE8",43,0)
 ;
"RTN","IBDFDE8",44,0)
 ; -- if no form create entry
"RTN","IBDFDE8",45,0)
 S FORMLST=$$FINDID^IBDF18C(DFN,IBDF("APPT"),"",1)
"RTN","IBDFDE8",46,0)
 I FORMLST="" D ANYWAY^IBDFDE6
"RTN","IBDFDE8",47,0)
 ;
"RTN","IBDFDE8",48,0)
 G:IBQUIT STRTQ
"RTN","IBDFDE8",49,0)
 ;
"RTN","IBDFDE8",50,0)
 I FORMLST,IBDSAEOK F IBDX=1:1 S IBDF("FORM")=$P(FORMLST,"^",IBDX) Q:IBDF("FORM")=""  I IBDF("FORM")'="" D EN^IBDFDE K IBDSEL,IBDPI Q:IBQUIT
"RTN","IBDFDE8",51,0)
 ;
"RTN","IBDFDE8",52,0)
STRTQ K IBDSAEOK
"RTN","IBDFDE8",53,0)
 G STRT:'IBQUIT
"RTN","IBDFDE8",54,0)
 ;
"RTN","IBDFDE8",55,0)
END K I,J,X,Y,DA,DR,DIC,DIE,DIR,DTOUT,DUOUT,DIRUT,IBDSEL,CHOICE,TEXT,TEXTU,RESULT,IBDPI,IBDCO,IBDF
"RTN","IBDFDE8",56,0)
 K ^TMP("IBD-ASK",$J),^TMP("IBD-LCODE",$J),^TMP("IBD-LST",$J),^TMP("IBD-LTEXT",$J),^TMP("IBD-OBJ",$J)
"RTN","IBDFDE8",57,0)
 Q
"RTN","IBDFDE8",58,0)
 ;
"RTN","IBDFDE8",59,0)
LSTAP ; -- list appointments for date range
"RTN","IBDFDE8",60,0)
 N IBDI,BEGIN,HELP,CNT,DOW,NODAYS
"RTN","IBDFDE8",61,0)
 S HELP=1,CNT=0
"RTN","IBDFDE8",62,0)
 W !
"RTN","IBDFDE8",63,0)
 S DOW=$$DOW^XLFDT(DT,1)
"RTN","IBDFDE8",64,0)
 S NODAYS=$S(DOW=1:5,DOW=2:5,DOW=3:5,DOW>3:3,DOW=0:4)
"RTN","IBDFDE8",65,0)
 S BEGIN=$$FMADD^XLFDT(DT,-NODAYS)
"RTN","IBDFDE8",66,0)
 F IBDI=1:1:NODAYS S IBDF("APPT")=$$FMADD^XLFDT(BEGIN,IBDI) D LISTONE
"RTN","IBDFDE8",67,0)
 W:CNT !
"RTN","IBDFDE8",68,0)
 Q
"RTN","IBDFDE8",69,0)
 ;
"RTN","IBDFDE8",70,0)
LISTONE ; -- List appointments for one date
"RTN","IBDFDE8",71,0)
 N NEXT,NODE
"RTN","IBDFDE8",72,0)
 S NEXT=$E(IBDF("APPT"),1,7),IBDAPPT=0
"RTN","IBDFDE8",73,0)
 S:'$G(HELP) CNT=0
"RTN","IBDFDE8",74,0)
 F  S NEXT=$O(^DPT(DFN,"S",NEXT)) Q:'NEXT!(NEXT>(IBDF("APPT")+.24))  D
"RTN","IBDFDE8",75,0)
 .S CNT=CNT+1
"RTN","IBDFDE8",76,0)
 .S NODE=$G(^DPT(DFN,"S",NEXT,0))
"RTN","IBDFDE8",77,0)
 .I NEXT=IBDF("APPT"),+NODE=IBDF("CLINIC") S IBDAPPT=1
"RTN","IBDFDE8",78,0)
 .I CNT=1 W !,"Patient has the following appointments: "
"RTN","IBDFDE8",79,0)
 .W !?3,$$FMTE^XLFDT(NEXT),?25,$E($P($G(^SC(+NODE,0)),"^"),1,23)
"RTN","IBDFDE8",80,0)
 .D FRMSTAT
"RTN","IBDFDE8",81,0)
 I CNT=0,'$G(HELP) W !,"No appointments for Patient found on ",$$FMTE^XLFDT($E(IBDF("APPT"),1,7))
"RTN","IBDFDE8",82,0)
 Q
"RTN","IBDFDE8",83,0)
 ;
"RTN","IBDFDE8",84,0)
FRMSTAT ; -- count forms and form status for appointments
"RTN","IBDFDE8",85,0)
 N FORM,CNT,STATUS,IBJ,X,Y,C
"RTN","IBDFDE8",86,0)
 S FORM=$$FINDID^IBDF18C(DFN,NEXT,"",1),STATUS="NO FORM PRINTED"
"RTN","IBDFDE8",87,0)
 S CNT=0 F IBJ=1:1 S X=$P(FORM,"^",IBJ) Q:X=""  S CNT=CNT+1
"RTN","IBDFDE8",88,0)
 I +FORM S Y=$P($G(^IBD(357.96,+FORM,0)),"^",11),C=$P(^DD(357.96,.11,0),"^",2) D Y^DIQ S STATUS=Y
"RTN","IBDFDE8",89,0)
 W ?50,$E($G(STATUS),1,25),?76,"("_CNT_")"
"RTN","IBDFDE8",90,0)
 Q
"RTN","IBDFDE9")
0^18^B17946190
"RTN","IBDFDE9",1,0)
IBDFDE9 ;ALB/AAS - AICS Manual Data Entry, Report of inputs by form ; 31-MAY-96
"RTN","IBDFDE9",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**51**;APR 24, 1997
"RTN","IBDFDE9",3,0)
 ;
"RTN","IBDFDE9",4,0)
 W !,?4,"** This option is OUT OF ORDER **" QUIT   ;Code set Versioning
"RTN","IBDFDE9",5,0)
 ;
"RTN","IBDFDE9",6,0)
% N I,J,X,Y,DIR,DIRUT,DTOUT,DUOUT,IBDF,IBDFMIEN,IBDPAG,IBDPDT,IBDOJB,IBQUIT,QLFR,RULE
"RTN","IBDFDE9",7,0)
 ;
"RTN","IBDFDE9",8,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFDE9",9,0)
 D HOME^%ZIS
"RTN","IBDFDE9",10,0)
 W !!,"Display Form Components for Data Entry",!!
"RTN","IBDFDE9",11,0)
 ;
"RTN","IBDFDE9",12,0)
STRT ; -- ask for form id
"RTN","IBDFDE9",13,0)
 D END
"RTN","IBDFDE9",14,0)
 S DIR("?")="Enter the Encounter Form Name you want to review."
"RTN","IBDFDE9",15,0)
 S DIR(0)="PO^357:AEQM",DIR("A")="Select Encounter Form" D ^DIR K DIR,DA,DR,DIC
"RTN","IBDFDE9",16,0)
 I $D(DIRUT) G END
"RTN","IBDFDE9",17,0)
 S IBDFMIEN=+Y
"RTN","IBDFDE9",18,0)
 ;
"RTN","IBDFDE9",19,0)
 ; -- Ask Device
"RTN","IBDFDE9",20,0)
 S %ZIS="MQ" D ^%ZIS I POP G STRTQ
"RTN","IBDFDE9",21,0)
 ; -- queue if selected
"RTN","IBDFDE9",22,0)
 I $D(IO("Q")) S ZTSAVE("IBD*")="",ZTRTN="DQ^IBDFDE9",ZTDESC="IBD - Print form components" D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS W !! G STRT
"RTN","IBDFDE9",23,0)
 U IO
"RTN","IBDFDE9",24,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBDFDE9",25,0)
 D DQ
"RTN","IBDFDE9",26,0)
 ;
"RTN","IBDFDE9",27,0)
STRTQ G:$G(IBQUIT) END D PAUSE^IBDFDE
"RTN","IBDFDE9",28,0)
 G STRT
"RTN","IBDFDE9",29,0)
 ;
"RTN","IBDFDE9",30,0)
DQ ; -- entry point to list contents of one form,  
"RTN","IBDFDE9",31,0)
 ;    Input IBDFMIEN := pointer to Encounter Form (357)
"RTN","IBDFDE9",32,0)
 ;
"RTN","IBDFDE9",33,0)
 S IBQUIT=0
"RTN","IBDFDE9",34,0)
 S IBDPAG=0
"RTN","IBDFDE9",35,0)
 S IBDPDT=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","IBDFDE9",36,0)
 D HDR
"RTN","IBDFDE9",37,0)
 ;
"RTN","IBDFDE9",38,0)
 I '$D(^TMP("IBD-OBJ",$J,IBDFMIEN,0)) D FRMLSTI^IBDFRPC("^TMP(""IBD-OBJ"",$J,IBDFMIEN)",IBDFMIEN,"",1)
"RTN","IBDFDE9",39,0)
 D LISTOB
"RTN","IBDFDE9",40,0)
 Q
"RTN","IBDFDE9",41,0)
 ;
"RTN","IBDFDE9",42,0)
LISTOB ; -- list items available for input on a form
"RTN","IBDFDE9",43,0)
 W !,"CHECKOUT INTERVIEW",?27,"",?45,"As Required",!
"RTN","IBDFDE9",44,0)
 S I=0 F  S I=$O(^TMP("IBD-OBJ",$J,IBDFMIEN,I)) Q:I=""!(IBQUIT)  D
"RTN","IBDFDE9",45,0)
 .I $E(IOST,1,2)="C-",$Y>(IOSL-5) D HDR Q:IBQUIT
"RTN","IBDFDE9",46,0)
 .S IBDOBJ=$G(^TMP("IBD-OBJ",$J,IBDFMIEN,I))
"RTN","IBDFDE9",47,0)
 .Q:'$P(IBDOBJ,"^",8)
"RTN","IBDFDE9",48,0)
 .S IBDF("PI")=+$P(IBDOBJ,"^",2),IBDF("TYPE")=$P(IBDOBJ,"^",5)
"RTN","IBDFDE9",49,0)
 .S IBDF("IEN")=+$P(IBDOBJ,"^",6),IBDF("VITAL")=$P(IBDOBJ,"^",7)
"RTN","IBDFDE9",50,0)
 .Q:IBDF("IEN")<1!(IBDF("PI")<1)
"RTN","IBDFDE9",51,0)
 .S RTN=$G(^IBE(357.6,IBDF("PI"),18)) Q:RTN=""
"RTN","IBDFDE9",52,0)
 .S Y=$S($P(IBDOBJ,"^",7)="":$P(IBDOBJ,"^"),1:$P(IBDOBJ,"^",7))
"RTN","IBDFDE9",53,0)
 .I Y["INPUT " S Y=$P(Y,"INPUT ",2)
"RTN","IBDFDE9",54,0)
 .W !,$E(Y,1,25),?27,$S(IBDF("TYPE")="HP":"Hand Print",IBDF("TYPE")="LIST":"Selection List",1:"Multiple Choice")
"RTN","IBDFDE9",55,0)
 .;
"RTN","IBDFDE9",56,0)
 .S IBDF("DFN")=$O(^DPT(0)),IBDF("CLINIC")=$O(^SC(0)),IBDF("RULE-ONLY")=1
"RTN","IBDFDE9",57,0)
 .S RULE(0)=$G(^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN")))
"RTN","IBDFDE9",58,0)
 .I RULE(0)="" D OBJLST^IBDFRPC1(.RULE,.IBDF)
"RTN","IBDFDE9",59,0)
 .D RULES(.RULE)
"RTN","IBDFDE9",60,0)
 .W !
"RTN","IBDFDE9",61,0)
 W !
"RTN","IBDFDE9",62,0)
 Q
"RTN","IBDFDE9",63,0)
 ;
"RTN","IBDFDE9",64,0)
HDR ; -- print patient header
"RTN","IBDFDE9",65,0)
 S IBDPAG=IBDPAG+1
"RTN","IBDFDE9",66,0)
 I $E(IOST,1,2)="C-",$Y>1,IBDPAG>1 D PAUSE^IBDFDE Q:IBQUIT
"RTN","IBDFDE9",67,0)
 I $E(IOST,1,2)="C-"!(IBDPAG>1) W @IOF
"RTN","IBDFDE9",68,0)
 W !,"Form Components Available for Data Entry",?IOM-32,IBDPDT,"  PAGE: ",IBDPAG
"RTN","IBDFDE9",69,0)
 W !,"COMPONENT",?27,"TYPE",?45,"RULE",?60,"QUALIFIER"
"RTN","IBDFDE9",70,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBDFDE9",71,0)
 W !,"       Form Name: ",$E($P($G(^IBE(357,+IBDFMIEN,0)),"^"),1,25)
"RTN","IBDFDE9",72,0)
 W !,"     Form Status: ",$S(+$P($G(^IBE(357,+IBDFMIEN,0)),"^",5):"Compiled",1:"Uncompiled"),!
"RTN","IBDFDE9",73,0)
 Q
"RTN","IBDFDE9",74,0)
 ;
"RTN","IBDFDE9",75,0)
END I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBDFDE9",76,0)
 K I,J,X,Y,DA,DR,DIC,DIE,DIR,DTOUT,DUOUT,DIRUT,IBDSEL,CHOICE,TEXT,TEXTU,RESULT,IBDPI,IBDCO,IBDF,IBDPAG,ZTSK
"RTN","IBDFDE9",77,0)
 K ^TMP("IBD-OBJ",$J)
"RTN","IBDFDE9",78,0)
 D ^%ZISC
"RTN","IBDFDE9",79,0)
 Q
"RTN","IBDFDE9",80,0)
 ;
"RTN","IBDFDE9",81,0)
RULES(RULE) ; -- look at zero node, find qualifiers and selection rule
"RTN","IBDFDE9",82,0)
 N I,QLFR,DQR
"RTN","IBDFDE9",83,0)
 S RULE=$P(RULE(0),"^",3),QLFR=""
"RTN","IBDFDE9",84,0)
 I $P(RULE(0),"^",4) W ?45,"Data Entry Not allowed",!,?45,"Marking areas not Bubbles" Q
"RTN","IBDFDE9",85,0)
 F I=1:1 S ROW=$P(RULE,"::",I) Q:ROW=""  S QLFR(I)=$P(ROW,";;",1),RULE(I)=$P(ROW,";;",2) D
"RTN","IBDFDE9",86,0)
 .W:I>1 !
"RTN","IBDFDE9",87,0)
 .;
"RTN","IBDFDE9",88,0)
 .I IBDF("VITAL")="" W ?45,$P("Any Number^Exactly One^At Most One^At Least One","^",(RULE(I)+1))
"RTN","IBDFDE9",89,0)
 .E  W ?45,"Optional"
"RTN","IBDFDE9",90,0)
 .;
"RTN","IBDFDE9",91,0)
 .I IBDF("VITAL")'="",QLFR(I)[":" S QLFR(I)=$P(QLFR(I),":") ;strip ":"
"RTN","IBDFDE9",92,0)
 .W ?60,$E(QLFR(I),1,20)
"RTN","IBDFDE9",93,0)
 .I QLFR(I)="",$P($G(^IBE(357.6,+$G(IBDF("PI")),0)),"^",19) W ?60,$G(IOINHI),"Required/Missing",$G(IOINORM)
"RTN","IBDFDE9",94,0)
 .I QLFR(I)="PRIMARY" D
"RTN","IBDFDE9",95,0)
 ..;S RULE(I)=$S(RULE(I)=3:1,RULE(I)=0:2,1:RULE(I))
"RTN","IBDFDE9",96,0)
 S RULE=I-1
"RTN","IBDFDE9",97,0)
 Q
"RTN","IBDFFV")
0^19^B12585211
"RTN","IBDFFV",1,0)
IBDFFV ;ALB/CMR - AICS FORM VALIDATION ; NOV 22,1995
"RTN","IBDFFV",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**51**;APR 24, 1997
"RTN","IBDFFV",3,0)
 ;
"RTN","IBDFFV",4,0)
 ; -- displays Form Definition values for validation
"RTN","IBDFFV",5,0)
 ;
"RTN","IBDFFV",6,0)
 W !,?4,"** This option is OUT OF ORDER **" QUIT   ;Code set Versioning
"RTN","IBDFFV",7,0)
 ;
"RTN","IBDFFV",8,0)
 N IBDFL,X,Y,I,POP,CALL
"RTN","IBDFFV",9,0)
 W !!,"AICS Form Validation Report",!!
"RTN","IBDFFV",10,0)
 S IBDFL=0 ;flag
"RTN","IBDFFV",11,0)
 D SORT G:IBDFL EXIT
"RTN","IBDFFV",12,0)
 D DEVICE G:IBDFL EXIT
"RTN","IBDFFV",13,0)
DQ ; -- entry point from task man
"RTN","IBDFFV",14,0)
 N IBDFL
"RTN","IBDFFV",15,0)
 K ^TMP($J,"IBFV"),^TMP($J,"IBDF","UC")
"RTN","IBDFFV",16,0)
 S IBDFL=0
"RTN","IBDFFV",17,0)
 D ^IBDFFV1
"RTN","IBDFFV",18,0)
 I '$D(^TMP($J,"IBFV")) U IO W $C(7),!,"No forms found!" G EXIT
"RTN","IBDFFV",19,0)
 D ^IBDFFV2 G EXIT:$G(IBDFOUT)
"RTN","IBDFFV",20,0)
 I $D(^TMP($J,"IBDF","UC")) D
"RTN","IBDFFV",21,0)
 .N SORT,FORM,CLIN,HEADER
"RTN","IBDFFV",22,0)
 .S SORT=$O(^TMP($J,"IBDF","UC","")) Q:SORT']""
"RTN","IBDFFV",23,0)
 .D HDR
"RTN","IBDFFV",24,0)
 .I SORT="F" S FORM="" F  S FORM=$O(^TMP($J,"IBDF","UC",SORT,FORM)) Q:FORM']""!($G(IBDFOUT))  D PG(2) Q:$G(IBDFOUT)  W !?5,FORM
"RTN","IBDFFV",25,0)
 .I SORT="C" S CLIN="" F  S CLIN=$O(^TMP($J,"IBDF","UC",SORT,CLIN)) Q:CLIN']""!($G(IBDFOUT))  D PG(5) Q:$G(IBDFOUT)  W !!,"CLINIC:  ",CLIN D
"RTN","IBDFFV",26,0)
 ..S FORM="" F  S FORM=$O(^TMP($J,"IBDF","UC",SORT,CLIN,FORM)) Q:FORM']""!($G(IBDFOUT))  D PG(2) Q:$G(IBDFOUT)  W !?5,FORM
"RTN","IBDFFV",27,0)
 .I SORT="D"!(SORT="G") S HEADER="" F  S HEADER=$O(^TMP($J,"IBDF","UC",SORT,HEADER)) Q:HEADER']""!($G(IBDFOUT))  D PG(7) Q:$G(IBDFOUT)  W !!,$S(SORT="G":"GROUP",1:"DIVISION"),":  ",HEADER D
"RTN","IBDFFV",28,0)
 ..S CLIN="" F  S CLIN=$O(^TMP($J,"IBDF","UC",SORT,HEADER,CLIN)) Q:CLIN']""!($G(IBDFOUT))  D PG(5) Q:$G(IBDFOUT)  W !!?5,"CLINIC:  ",CLIN D
"RTN","IBDFFV",29,0)
 ...S FORM="" F  S FORM=$O(^TMP($J,"IBDF","UC",SORT,HEADER,CLIN,FORM)) Q:FORM']""!($G(IBDFOUT))  D PG(2) Q:$G(IBDFOUT)  W !?10,FORM
"RTN","IBDFFV",30,0)
EXIT ; -- Clean up and quit
"RTN","IBDFFV",31,0)
 K ^TMP($J,"IBDF","UC"),^TMP($J,"IBFV")
"RTN","IBDFFV",32,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBDFFV",33,0)
 D ^%ZISC
"RTN","IBDFFV",34,0)
 K ZTSK,ZTDESC,ZTSAVE,ZTRTN,VAUTF,VAUTG,VAUTC,VAUTD,SORT,IBDFOUT
"RTN","IBDFFV",35,0)
 Q
"RTN","IBDFFV",36,0)
SORT ; -- determine sort criteria
"RTN","IBDFFV",37,0)
 S DIR(0)="S^1:FORM;2:CLINIC;3:GROUP;4:DIVISION",DIR("A")="Validate forms by" D ^DIR K DIR
"RTN","IBDFFV",38,0)
 I $D(DIRUT) S IBDFL=1 Q
"RTN","IBDFFV",39,0)
 S SORT=Y_U_Y(0),CALL=$S(Y=2:"CLIN",Y=4:"DIV",1:Y(0))
"RTN","IBDFFV",40,0)
 ; -- gather selections for sort chosen
"RTN","IBDFFV",41,0)
 D @CALL^IBDFUTL
"RTN","IBDFFV",42,0)
 Q
"RTN","IBDFFV",43,0)
DEVICE ; -- ask device
"RTN","IBDFFV",44,0)
 S %ZIS="MQ" D ^%ZIS I POP S IBDLF=1 Q
"RTN","IBDFFV",45,0)
 I $D(IO("Q")) S ZTRTN="DQ^IBDFFV",ZTDESC="AICS - Form Validation Report",ZTSAVE("VA*")="",ZTSAVE("SORT")="" D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS S IBDFL=1 Q
"RTN","IBDFFV",46,0)
 U IO
"RTN","IBDFFV",47,0)
 Q
"RTN","IBDFFV",48,0)
PG(LEN) ; -- check page length
"RTN","IBDFFV",49,0)
 ; -- LEN equal to length to check for (optional)...will default
"RTN","IBDFFV",50,0)
 I '$D(LEN) S LEN=2
"RTN","IBDFFV",51,0)
 Q:$Y+LEN<IOSL
"RTN","IBDFFV",52,0)
 I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR,DIRUT,DUOUT,DTOUT I 'Y S IBDFOUT=1 Q
"RTN","IBDFFV",53,0)
 W @IOF
"RTN","IBDFFV",54,0)
HDR ; -- write out uncompiled forms header
"RTN","IBDFFV",55,0)
 W !,$$CJ^XLFSTR("ENCOUNTER FORM VALIDATION",IOM)
"RTN","IBDFFV",56,0)
 W !,$$CJ^XLFSTR("REPORT OF UNCOMPILED FORMS",IOM)
"RTN","IBDFFV",57,0)
 W !!!,"Validation can only be performed on compiled forms.  To compile a form,",!,"you simply print it."
"RTN","IBDFFV",58,0)
 W !!!,"The following forms were found to be uncompiled:"
"RTN","IBDFFV",59,0)
 Q
"RTN","IBDFLST")
0^3^B28703563
"RTN","IBDFLST",1,0)
IBDFLST ;ALM/MAF - Maintenance Utility Invalid Codes List - MAY 17 1995
"RTN","IBDFLST",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**9,38,51**;APR 24, 1997
"RTN","IBDFLST",3,0)
 ;
"RTN","IBDFLST",4,0)
 ;
"RTN","IBDFLST",5,0)
START ;  -- Ask what invalid code you want to display CPT/ ICD9/ Visit
"RTN","IBDFLST",6,0)
 N IBDFDIS
"RTN","IBDFLST",7,0)
 D FULL^VALM1
"RTN","IBDFLST",8,0)
 S DIR("B")="CPT",DIR(0)="SBM^C:CPT;I:ICD9;V:VISIT",DIR("A")="Display invalid codes for [C]PT, [I]CD9, [V]ISIT" D ^DIR
"RTN","IBDFLST",9,0)
 K DIR I $D(DIRUT)!(Y<0) G QUIT
"RTN","IBDFLST",10,0)
 ;W !!,"Display invalid codes for CPT// " D ZSET1^IBDFLST1 S X="" R X:DTIME G QUIT:X="^"!('$T) I X=""!("Cc"[X) S X="1"
"RTN","IBDFLST",11,0)
 S X=$S("Ii"[X:2,"Vv"[X:3,1:1)
"RTN","IBDFLST",12,0)
 ;I X="?" D ZSET1^IBDFLST1,HELP1^IBDFLST1 G START
"RTN","IBDFLST",13,0)
 S IBDFTYP=$E(X)  ; D IN^DGHELP W ! I %=-1 D ZSET1^IBDFLST1,HELP1^IBDFLST1 G START
"RTN","IBDFLST",14,0)
 S IBDFDIS=$S(IBDFTYP=1:"CPT",IBDFTYP=2:"ICD9",IBDFTYP=3:"VISIT",1:"QUIT")
"RTN","IBDFLST",15,0)
 D WAIT^DICD
"RTN","IBDFLST",16,0)
 D EN^VALM("IBDF UTIL COMPLETE LIST TEMP")
"RTN","IBDFLST",17,0)
 Q
"RTN","IBDFLST",18,0)
 ;
"RTN","IBDFLST",19,0)
 ;
"RTN","IBDFLST",20,0)
HDR ; -- header code
"RTN","IBDFLST",21,0)
 S VALMHDR(1)="This screen displays the most current invalid codes for the "_IBDFDIS_" file."
"RTN","IBDFLST",22,0)
 Q
"RTN","IBDFLST",23,0)
 ;
"RTN","IBDFLST",24,0)
 ;
"RTN","IBDFLST",25,0)
SETSTR(S,V,X,L) ; -- insert text(S) into variable(V)
"RTN","IBDFLST",26,0)
 ;    S := string
"RTN","IBDFLST",27,0)
 ;    V := destination
"RTN","IBDFLST",28,0)
 ;    X := @ col X
"RTN","IBDFLST",29,0)
 ;    L := # of chars
"RTN","IBDFLST",30,0)
 ;
"RTN","IBDFLST",31,0)
 Q $E(V_$J("",X-1),1,X-1)_$E(S_$J("",L),1,L)_$E(V,X+L,999)
"RTN","IBDFLST",32,0)
 ;
"RTN","IBDFLST",33,0)
 ;
"RTN","IBDFLST",34,0)
INIT ;  -- Set up list for display
"RTN","IBDFLST",35,0)
 N IBDFCODE,IBDFDESC,IBDFIFN,IBDFCAT
"RTN","IBDFLST",36,0)
 S (IBDCNT,VALMCNT,IBDCNT1)=0
"RTN","IBDFLST",37,0)
 D @(IBDFDIS)
"RTN","IBDFLST",38,0)
 Q
"RTN","IBDFLST",39,0)
 ;
"RTN","IBDFLST",40,0)
 ;  -- Gets CPT listing of invalid codes
"RTN","IBDFLST",41,0)
CPT D FULL^VALM1 F IBDFIFN=0:0 S IBDFIFN=$O(^ICPT(IBDFIFN)) Q:'IBDFIFN  D
"RTN","IBDFLST",42,0)
 .;; --change to api cpt ; dhh
"RTN","IBDFLST",43,0)
 .;;     --note: 7th piece is status 0-inactive 1-active
"RTN","IBDFLST",44,0)
 . S IBDFNODE=$$CPT^ICPTCOD(IBDFIFN),IBDFNODE=$G(IBDFNODE)
"RTN","IBDFLST",45,0)
 . I $P(IBDFNODE,"^",7)=0 D
"RTN","IBDFLST",46,0)
 .. S IBDFCODE=$P(IBDFNODE,"^",2),IBDFDESC=$P(IBDFNODE,"^",3)
"RTN","IBDFLST",47,0)
 .. S IBDFCAT=$S($P(IBDFNODE,"^",4)]"":$P(^DIC(81.1,$P(IBDFNODE,"^",4),0),"^",1),1:"UNKNOWN") D ALPHA
"RTN","IBDFLST",48,0)
 D LOOP
"RTN","IBDFLST",49,0)
 Q
"RTN","IBDFLST",50,0)
 ;
"RTN","IBDFLST",51,0)
 ;  -- Gets ICD9 listing onf invalid codes
"RTN","IBDFLST",52,0)
 ;  -- Use api for ICD9
"RTN","IBDFLST",53,0)
ICD9 ;;F IBDFIFN=0:0 S IBDFIFN=$O(^ICD9(IBDFIFN)) Q:'IBDFIFN  S IBDFNODE=$G(^ICD9(IBDFIFN,0)) I $P(IBDFNODE,"^",9)]"" D
"RTN","IBDFLST",54,0)
 ;
"RTN","IBDFLST",55,0)
 ;Use ICD API to check the status for CSV.  No date is passed so the
"RTN","IBDFLST",56,0)
 ;default day is DT (today).  $P10 = status 0-inactive 1-active
"RTN","IBDFLST",57,0)
 F IBDFIFN=0:0 S IBDFIFN=$O(^ICD9(IBDFIFN)) Q:'IBDFIFN  S IBDFNODE=$$ICDDX^ICDCODE(IBDFIFN) I '$P(IBDFNODE,U,10) D
"RTN","IBDFLST",58,0)
 .S IBDFCODE=$P(IBDFNODE,"^",2),IBDFDESC=$P(IBDFNODE,"^",4),IBDFCAT=$S($P(IBDFNODE,"^",6)]""&($G(^ICM(+$P(IBDFNODE,"^",6),0))]""):$P(^ICM($P(IBDFNODE,"^",6),0),"^",1),1:"UNKNOWN") D ALPHA
"RTN","IBDFLST",59,0)
 D LOOP
"RTN","IBDFLST",60,0)
 Q
"RTN","IBDFLST",61,0)
 ;
"RTN","IBDFLST",62,0)
 ;
"RTN","IBDFLST",63,0)
VISIT ;  -- Gets visit code listing of invalid codes
"RTN","IBDFLST",64,0)
 N IEN
"RTN","IBDFLST",65,0)
 F IBDFVST=0:0 S IBDFVST=$O(^IBE(357.69,"B",IBDFVST)) Q:'IBDFVST  D
"RTN","IBDFLST",66,0)
 . S IEN=$O(^IBE(357.69,"B",IBDFVST,0))
"RTN","IBDFLST",67,0)
 . Q:'IEN
"RTN","IBDFLST",68,0)
 . S IBDFNODE=$$CPT^ICPTCOD(IBDFVST)
"RTN","IBDFLST",69,0)
 . Q:$P(IBDFNODE,U,7)=1  ;(CSV) status 0-inactive 1-active
"RTN","IBDFLST",70,0)
 . ;;Q:+IBDFNODE=-1
"RTN","IBDFLST",71,0)
 . S IBDFIFN=+IBDFNODE
"RTN","IBDFLST",72,0)
 . S IBDFCODE=$P(IBDFNODE,"^",2)
"RTN","IBDFLST",73,0)
 . S IBDFDESC=$P(IBDFNODE,"^",3)
"RTN","IBDFLST",74,0)
 . S IBDFCAT=$S($P(IBDFNODE,"^",4)]"":$P(^DIC(81.1,$P(IBDFNODE,"^",4),0),"^",1),1:"UNKNOWN")
"RTN","IBDFLST",75,0)
 . D ALPHA
"RTN","IBDFLST",76,0)
 D LOOP
"RTN","IBDFLST",77,0)
 Q
"RTN","IBDFLST",78,0)
 ;
"RTN","IBDFLST",79,0)
 ;
"RTN","IBDFLST",80,0)
LOOP ;  -- Loop thru global ^TMP("ALPHA",$J) alphabetic by category
"RTN","IBDFLST",81,0)
 S IBDFCAT=0
"RTN","IBDFLST",82,0)
 F IBDCAT=0:0 S IBDFCAT=$O(^TMP("ALPHA",$J,IBDFCAT)) Q:IBDFCAT']""  F IBDFIFN=0:0 S IBDFIFN=$O(^TMP("ALPHA",$J,IBDFCAT,IBDFIFN)) Q:'IBDFIFN  S IBDFNODE=$G(^TMP("ALPHA",$J,IBDFCAT,IBDFIFN)) D
"RTN","IBDFLST",83,0)
 .S IBDFIFN=$P(IBDFNODE,"^",1)
"RTN","IBDFLST",84,0)
 .S IBDFCODE=$P(IBDFNODE,"^",2)
"RTN","IBDFLST",85,0)
 .S IBDFCAT=$P(IBDFNODE,"^",3)
"RTN","IBDFLST",86,0)
 .S IBDFDESC=$P(IBDFNODE,"^",4)
"RTN","IBDFLST",87,0)
 .D:'$D(IBDFC(IBDFCAT)) HEADER^IBDFLST1 D SET
"RTN","IBDFLST",88,0)
 Q
"RTN","IBDFLST",89,0)
 ;
"RTN","IBDFLST",90,0)
 ;
"RTN","IBDFLST",91,0)
SET ;  -- Set up list array
"RTN","IBDFLST",92,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFLST",93,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFLST",94,0)
 S X=""
"RTN","IBDFLST",95,0)
 S IBDFVAL=$J(IBDCNT1_")",5)
"RTN","IBDFLST",96,0)
 S X=$$SETSTR(IBDFVAL,X,1,5)
"RTN","IBDFLST",97,0)
 S IBDFVAL=IBDFCODE
"RTN","IBDFLST",98,0)
 S X=$$SETSTR(IBDFVAL,X,7,8)
"RTN","IBDFLST",99,0)
 S IBDFVAL=IBDFDESC
"RTN","IBDFLST",100,0)
 S X=$$SETSTR(IBDFVAL,X,17,20)
"RTN","IBDFLST",101,0)
 S IBDFVAL=IBDFCAT
"RTN","IBDFLST",102,0)
 S X=$$SETSTR(IBDFVAL,X,39,20)
"RTN","IBDFLST",103,0)
 ;
"RTN","IBDFLST",104,0)
 ;
"RTN","IBDFLST",105,0)
TMP ; -- Set up Array
"RTN","IBDFLST",106,0)
 S ^TMP("CODE",$J,IBDCNT,0)=$$LOWER^VALM1(X),^TMP("CODE",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFLST",107,0)
 S ^TMP("CODEIDX",$J,IBDCNT1)=VALMCNT_"^"_IBDFIFN_"^"_IBDFCODE_"^"_IBDFCAT_"^"_IBDFDESC
"RTN","IBDFLST",108,0)
 Q
"RTN","IBDFLST",109,0)
 ;
"RTN","IBDFLST",110,0)
 ;
"RTN","IBDFLST",111,0)
ALPHA ;  - Alphabetize by category
"RTN","IBDFLST",112,0)
 S ^TMP("ALPHA",$J,IBDFCAT,IBDFIFN)=IBDFIFN_"^"_IBDFCODE_"^"_IBDFCAT_"^"_IBDFDESC
"RTN","IBDFLST",113,0)
 Q
"RTN","IBDFLST",114,0)
 ;
"RTN","IBDFLST",115,0)
 ;
"RTN","IBDFLST",116,0)
QUIT ;  -- Kill variables and reset to last display if no change has been taken place.
"RTN","IBDFLST",117,0)
 ;
"RTN","IBDFLST",118,0)
 ;
"RTN","IBDFLST",119,0)
EXIT K ^TMP("CODE",$J),^TMP("CODEIDX",$J),^TMP("ALPHA",$J)
"RTN","IBDFLST",120,0)
 K IBDFC,IBDFTYP,IBDFCNT1,IBDCAT
"RTN","IBDFLST",121,0)
 Q
"RTN","IBDFLST",122,0)
 ;
"RTN","IBDFLST",123,0)
 ;
"RTN","IBDFLST",124,0)
JUMP ; -- Jump action to display a specific category on the screen.
"RTN","IBDFLST",125,0)
 D FULL^VALM1
"RTN","IBDFLST",126,0)
 I $D(XQORNOD(0)),$P(XQORNOD(0),"^",4)]"" S X=$P(XQORNOD(0),"^",4) S X=$P(X,"=",2) I X]"" D:X?1.6N JSEL S DIC=$S(IBDFDIS="ICD9":"^ICM(",1:"^DIC(81.1,"),DIC(0)="QEZ" D ^DIC K DIC G:Y<0 JMP S Y=+Y D JUMP1 Q
"RTN","IBDFLST",127,0)
JMP S DIC=$S(IBDFDIS="ICD9":"^ICM(",1:"^DIC(81.1,"),DIC(0)="AEMN",DIC("A")="Select "_$S(IBDFDIS="ICD9":"ICD9",1:"CPT")_" category you wish to move to: "
"RTN","IBDFLST",128,0)
 D ^DIC K DIC
"RTN","IBDFLST",129,0)
 I X["^" S VALMBG=1,VALMBCK="R" Q
"RTN","IBDFLST",130,0)
 ;
"RTN","IBDFLST",131,0)
 ;
"RTN","IBDFLST",132,0)
JUMP1 I Y<0 G JUMP
"RTN","IBDFLST",133,0)
 N IBDFCAT
"RTN","IBDFLST",134,0)
 S IBDFCAT=$S(IBDFDIS="ICD9":$P(^ICM(+Y,0),"^",1),1:$P(^DIC(81.1,+Y,0),"^",1))
"RTN","IBDFLST",135,0)
 I '$D(IBDFC(IBDFCAT)) W !!,"There is no data listed for this Clinic Group" G JMP
"RTN","IBDFLST",136,0)
 S VALMBG=+IBDFC(IBDFCAT) S VALMBCK="R" Q
"RTN","IBDFLST",137,0)
 Q
"RTN","IBDFLST",138,0)
 ;
"RTN","IBDFLST",139,0)
 ;
"RTN","IBDFLST",140,0)
JSEL ; -- Convert number selected to name
"RTN","IBDFLST",141,0)
 S IBDVALM=X I $D(^TMP("CGIDX",$J,IBDVALM)) S X=$P(^TMP("CGIDX",$J,IBDVALM),"^",2),X=$P(^IBD(357.99,X,0),"^",1)
"RTN","IBDFLST",142,0)
 Q
"RTN","IBDFLST",143,0)
HLP ; -- help code
"RTN","IBDFLST",144,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFLST",145,0)
 Q
"RTN","IBDFLST",146,0)
 ;
"RTN","IBDFN12")
0^4^B9858869
"RTN","IBDFN12",1,0)
IBDFN12 ;ALB/CJM - ENCOUNTER FORM - SELECTORS;MAY 10, 1995
"RTN","IBDFN12",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**12,38,40,51**;APR 24, 1997
"RTN","IBDFN12",3,0)
 ;
"RTN","IBDFN12",4,0)
LOOKUP(FILE,SCREEN,X,NODE) ;
"RTN","IBDFN12",5,0)
 ; -- lookup X in file using SCREEN
"RTN","IBDFN12",6,0)
 ; -- kills X if lookup not successful, else sets X to the ien and returns NODE as the 0 node
"RTN","IBDFN12",7,0)
 ; -- pass X and NODE by reference
"RTN","IBDFN12",8,0)
 ;
"RTN","IBDFN12",9,0)
 I +$G(FILE)<1 K X Q
"RTN","IBDFN12",10,0)
 N Y
"RTN","IBDFN12",11,0)
 S (NODE,Y)=""
"RTN","IBDFN12",12,0)
 K DIC S DIC=FILE,DIC("S")=SCREEN
"RTN","IBDFN12",13,0)
 S DIC(0)="EMQZ"
"RTN","IBDFN12",14,0)
 I $D(^DIC(FILE)) D ^DIC K DIC
"RTN","IBDFN12",15,0)
 I +Y>0 D
"RTN","IBDFN12",16,0)
 .S X=Y,NODE=Y(0)
"RTN","IBDFN12",17,0)
 E  K X
"RTN","IBDFN12",18,0)
 Q
"RTN","IBDFN12",19,0)
 ;
"RTN","IBDFN12",20,0)
SLCTCPT(X) ;for CPT codes
"RTN","IBDFN12",21,0)
 ;pass X by reference
"RTN","IBDFN12",22,0)
 ;example of use: D SLCTCPT^IBDFN12(.X)
"RTN","IBDFN12",23,0)
 ;
"RTN","IBDFN12",24,0)
 N NODE,SCRN
"RTN","IBDFN12",25,0)
 ;;D LOOKUP(81,"I '$P(^(0),U,4)",.X,.NODE)
"RTN","IBDFN12",26,0)
 ;
"RTN","IBDFN12",27,0)
 ;List only active code. (CSV)
"RTN","IBDFN12",28,0)
 S SCRN="I $P($$CPT^ICPTCOD(Y),U,7)=1" ;Check status for CPT (CSV)
"RTN","IBDFN12",29,0)
 D LOOKUP(81,SCRN,.X,.NODE)
"RTN","IBDFN12",30,0)
 I $D(X) S IBLABEL=$P(NODE,"^",2),(IBID,X)=$P(NODE,"^",1)
"RTN","IBDFN12",31,0)
 Q
"RTN","IBDFN12",32,0)
 ;
"RTN","IBDFN12",33,0)
SLCTDX(X) ;for ICD9 diagnosis codes
"RTN","IBDFN12",34,0)
 ;pass X by reference
"RTN","IBDFN12",35,0)
 ;example of use: D SLCTICD^IBDFN12(.X)
"RTN","IBDFN12",36,0)
 ;
"RTN","IBDFN12",37,0)
 N NODE,SCRN
"RTN","IBDFN12",38,0)
 ;;D LOOKUP(80,"I '$P(^(0),U,9)",.X,.NODE)
"RTN","IBDFN12",39,0)
 ;
"RTN","IBDFN12",40,0)
 ;List only active code. (CSV)
"RTN","IBDFN12",41,0)
 S SCRN="I $P($$ICDDX^ICDCODE(Y),U,10)=1" ;Check status for ICD (CSV)
"RTN","IBDFN12",42,0)
 D LOOKUP(80,SCRN,.X,.NODE)
"RTN","IBDFN12",43,0)
 I $D(X) S IBLABEL=$P(NODE,"^",3),(IBID,X)=$P(NODE,"^",1)
"RTN","IBDFN12",44,0)
 Q
"RTN","IBDFN12",45,0)
 ;
"RTN","IBDFN12",46,0)
SLCTVST(X) ;for VISIT TYPE codes
"RTN","IBDFN12",47,0)
 ;pass X by reference
"RTN","IBDFN12",48,0)
 ;example of use: D SLCTVST^IBDFN12(.X)
"RTN","IBDFN12",49,0)
 ;
"RTN","IBDFN12",50,0)
 N NODE,SCREEN
"RTN","IBDFN12",51,0)
 ;;D LOOKUP(357.69,"I '$P(^(0),U,4)",.X,.NODE)
"RTN","IBDFN12",52,0)
 ;
"RTN","IBDFN12",53,0)
 ;List only active code. (CSV)
"RTN","IBDFN12",54,0)
 S SCRN="I $P($$CPT^ICPTCOD(Y),U,7)=1" ;Check status for CPT (CSV)
"RTN","IBDFN12",55,0)
 D LOOKUP(357.69,SCRN,.X,.NODE)
"RTN","IBDFN12",56,0)
 ;
"RTN","IBDFN12",57,0)
 ;; --change to api cpt ; dhh
"RTN","IBDFN12",58,0)
 I $G(X) S NODE=$$CPT^ICPTCOD(+NODE),NODE=$G(NODE),(IBID,X)=$P(NODE,"^",2),IBLABEL=$P(NODE,"^",3)
"RTN","IBDFN12",59,0)
 Q
"RTN","IBDFN12",60,0)
 ;
"RTN","IBDFN12",61,0)
SLCTED(X) ;for Education Topics
"RTN","IBDFN12",62,0)
 ;pass X by reference
"RTN","IBDFN12",63,0)
 ;example of use: D SLCTED^IBDFN12(.X)
"RTN","IBDFN12",64,0)
 ;
"RTN","IBDFN12",65,0)
 N NODE
"RTN","IBDFN12",66,0)
 D LOOKUP(9999999.09,"",.X,.NODE)
"RTN","IBDFN12",67,0)
 I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
"RTN","IBDFN12",68,0)
 Q
"RTN","IBDFN12",69,0)
 ;
"RTN","IBDFN12",70,0)
SLCTIMM(X) ;for Immunizations
"RTN","IBDFN12",71,0)
 ;pass X by reference
"RTN","IBDFN12",72,0)
 ;example of use: D SLCTIMM^IBDFN12(.X)
"RTN","IBDFN12",73,0)
 ;
"RTN","IBDFN12",74,0)
 N NODE
"RTN","IBDFN12",75,0)
 D LOOKUP(9999999.14,"",.X,.NODE)
"RTN","IBDFN12",76,0)
 I $D(X) S IBLABEL=$P(NODE,"^",2),IBID=+X,X=IBLABEL
"RTN","IBDFN12",77,0)
 Q
"RTN","IBDFN12",78,0)
 ;
"RTN","IBDFN12",79,0)
SLCTEX(X) ;for Exams
"RTN","IBDFN12",80,0)
 ;pass X by reference
"RTN","IBDFN12",81,0)
 ;example of use: D SLCTEX^IBDFN12(.X)
"RTN","IBDFN12",82,0)
 ;
"RTN","IBDFN12",83,0)
 N NODE
"RTN","IBDFN12",84,0)
 D LOOKUP(9999999.15,"",.X,.NODE)
"RTN","IBDFN12",85,0)
 I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
"RTN","IBDFN12",86,0)
 Q
"RTN","IBDFN12",87,0)
 ;
"RTN","IBDFN12",88,0)
SLCTSKN(X) ;for Skin Tests
"RTN","IBDFN12",89,0)
 ;pass X by reference
"RTN","IBDFN12",90,0)
 ;example of use: D SLCTSKN^IBDFN12(.X)
"RTN","IBDFN12",91,0)
 ;
"RTN","IBDFN12",92,0)
 N NODE
"RTN","IBDFN12",93,0)
 D LOOKUP(9999999.28,"",.X,.NODE)
"RTN","IBDFN12",94,0)
 I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
"RTN","IBDFN12",95,0)
 Q
"RTN","IBDFN12",96,0)
 ;
"RTN","IBDFN12",97,0)
SLCTHF(X) ;for Health Factors
"RTN","IBDFN12",98,0)
 ;pass X by reference
"RTN","IBDFN12",99,0)
 ;example of use: D SLCTHF^IBDFN12(.X)
"RTN","IBDFN12",100,0)
 ;
"RTN","IBDFN12",101,0)
 N NODE
"RTN","IBDFN12",102,0)
 D LOOKUP(9999999.64,"I $P(^(0),U,10)=""F"",'$P(^(0),U,11)",.X,.NODE)
"RTN","IBDFN12",103,0)
 I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
"RTN","IBDFN12",104,0)
 Q
"RTN","IBDFN12",105,0)
SLCTTR(X) ;for Treatments
"RTN","IBDFN12",106,0)
 ;pass X by reference
"RTN","IBDFN12",107,0)
 ;example of use: D SLCTTR^IBDFN12(.X)
"RTN","IBDFN12",108,0)
 ;
"RTN","IBDFN12",109,0)
 N NODE
"RTN","IBDFN12",110,0)
 D LOOKUP(9999999.17,"",.X,.NODE)
"RTN","IBDFN12",111,0)
 I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
"RTN","IBDFN12",112,0)
 Q
"RTN","IBDFN12",113,0)
 ;
"RTN","IBDFN12",114,0)
SLCTYN(X) ;for selecting YES or NO
"RTN","IBDFN12",115,0)
 ;
"RTN","IBDFN12",116,0)
 I "Yy"[$E(X) S X="YES",IBID=1 Q
"RTN","IBDFN12",117,0)
 I "Nn"[$E(X) S X="NO",IBID=0 Q
"RTN","IBDFN12",118,0)
 W "Enter YES or NO."
"RTN","IBDFN12",119,0)
 K X
"RTN","IBDFN12",120,0)
 Q
"RTN","IBDFN12",121,0)
 ;
"RTN","IBDFN12",122,0)
SLCTCLS(PI,X) ;for visit classification
"RTN","IBDFN12",123,0)
 ;pass X by reference
"RTN","IBDFN12",124,0)
 ;*NOTE: if interactive sets IBQUAL to the qualifier, IBLABEL to the recommended label, for use in the input template
"RTN","IBDFN12",125,0)
 ;example of use: D INPUTCLS^IBDFN12(PI,.X)
"RTN","IBDFN12",126,0)
 ;
"RTN","IBDFN12",127,0)
 N NODE
"RTN","IBDFN12",128,0)
 D LOOKUP(357.98,"I $$DQGOOD^IBDFU9(PI,Y)",.X,.NODE)
"RTN","IBDFN12",129,0)
 I $D(X) S IBID="",IBLABEL=$P(NODE,"^",3),IBQUAL=+X,X=$P(NODE,"^")
"RTN","IBDFN12",130,0)
 Q
"RTN","IBDFN14")
0^5^B8732971
"RTN","IBDFN14",1,0)
IBDFN14 ;ALB/CMR - ENCOUNTER FORM - OUTPUTS;JAN 4, 1996
"RTN","IBDFN14",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**12,38,51**;APR 24, 1997
"RTN","IBDFN14",3,0)
 ;
"RTN","IBDFN14",4,0)
CPT(X) ; -- return external value, descr and active flag for CPT code
"RTN","IBDFN14",5,0)
 ; -- X passed equal to ien for cpt code
"RTN","IBDFN14",6,0)
 ;
"RTN","IBDFN14",7,0)
 ;    input: ien of file #81
"RTN","IBDFN14",8,0)
 ;    output: IBID = cpt code (.01 field of file #81)
"RTN","IBDFN14",9,0)
 ;            IBLABEL = description fo cpt code
"RTN","IBDFN14",10,0)
 ;            IBINACT = null if active
"RTN","IBDFN14",11,0)
 ;                      1 if inactive
"RTN","IBDFN14",12,0)
 ;
"RTN","IBDFN14",13,0)
 Q:'X
"RTN","IBDFN14",14,0)
 N IBDFNODE
"RTN","IBDFN14",15,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",16,0)
 S IBDFNODE=$$CPT^ICPTCOD(X)
"RTN","IBDFN14",17,0)
 Q:+IBDFNODE=-1
"RTN","IBDFN14",18,0)
 S IBID=$P(IBDFNODE,"^",2)
"RTN","IBDFN14",19,0)
 S IBLABEL=$P(IBDFNODE,"^",3)
"RTN","IBDFN14",20,0)
 S IBINACT=$S($P(IBDFNODE,"^",7)=1:"",1:1)
"RTN","IBDFN14",21,0)
 Q
"RTN","IBDFN14",22,0)
DX(X) ; -- return external value, descr and active flag for ICD9 diagnosis
"RTN","IBDFN14",23,0)
 ; -- pass X equal to ien for icd9 code
"RTN","IBDFN14",24,0)
 ;
"RTN","IBDFN14",25,0)
 Q:'X
"RTN","IBDFN14",26,0)
 N ICDNODE
"RTN","IBDFN14",27,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",28,0)
 ;;I $G(^ICD9(X,0))]"" S IBID=$P(^(0),"^"),IBLABEL=$P(^(0),"^",3),IBINACT=$P(^(0),"^",9)
"RTN","IBDFN14",29,0)
 S ICDNODE=$$ICDDX^ICDCODE(X)
"RTN","IBDFN14",30,0)
 Q:+ICDNODE=-1
"RTN","IBDFN14",31,0)
 S IBID=$P(ICDNODE,U,2)     ;ICD code
"RTN","IBDFN14",32,0)
 S IBLABEL=$P(ICDNODE,U,4)  ;ICD description
"RTN","IBDFN14",33,0)
 S STATUS=$P(ICDNODE,U,10)  ;ICD status, 0-Not Active, 1-Acitve
"RTN","IBDFN14",34,0)
 ;
"RTN","IBDFN14",35,0)
 ;Set inactive flag to 1, if the ICD code is not active (STATUS=0)
"RTN","IBDFN14",36,0)
 I STATUS=0 S IBINACT=1
"RTN","IBDFN14",37,0)
 Q
"RTN","IBDFN14",38,0)
VST(X) ; -- return external value, descr and active flag for VISIT TYPE 
"RTN","IBDFN14",39,0)
 ; -- pass X equal to ien for visit type
"RTN","IBDFN14",40,0)
 ;
"RTN","IBDFN14",41,0)
 Q:'X
"RTN","IBDFN14",42,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",43,0)
 ;; --change to api cpt ; dhh
"RTN","IBDFN14",44,0)
 I $G(^IBE(357.69,X,0))]"",+$$CPT^ICPTCOD(X)'=-1 D
"RTN","IBDFN14",45,0)
 .S IBID=$P(^IBE(357.69,X,0),"^"),IBLABEL=$P(^(0),"^",3)
"RTN","IBDFN14",46,0)
 .S HDR=$P(^IBE(357.69,X,0),"^",2) I $L(HDR_IBLABEL)<75 S IBLABEL=HDR_" "_IBLABEL
"RTN","IBDFN14",47,0)
 .K HDR
"RTN","IBDFN14",48,0)
 .;; --change to api cpt ; dhh
"RTN","IBDFN14",49,0)
 .S IBINACT=$S($P(^IBE(357.69,X,0),"^",4):1,$P($$CPT^ICPTCOD(X),"^",7)=0:1,1:"")
"RTN","IBDFN14",50,0)
 Q
"RTN","IBDFN14",51,0)
ED(X) ; -- return descr and active flag for education topics
"RTN","IBDFN14",52,0)
 ; -- pass X equal to ien for education topic
"RTN","IBDFN14",53,0)
 ;
"RTN","IBDFN14",54,0)
 Q:'X
"RTN","IBDFN14",55,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",56,0)
 I $G(^AUTTEDT(X,0))]"" S IBID="ED TOPIC",IBLABEL=$P(^(0),"^"),IBINACT=$P(^(0),"^",3)
"RTN","IBDFN14",57,0)
 Q
"RTN","IBDFN14",58,0)
EXAM(X) ; -- return descr and active flag for exam
"RTN","IBDFN14",59,0)
 ; -- pass X equal to ien for exam
"RTN","IBDFN14",60,0)
 ;
"RTN","IBDFN14",61,0)
 Q:'X
"RTN","IBDFN14",62,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",63,0)
 I $G(^AUTTEXAM(X,0))]"" S IBID="EXAM",IBLABEL=$P(^(0),"^"),IBINACT=$P(^(0),"^",4)
"RTN","IBDFN14",64,0)
 Q
"RTN","IBDFN14",65,0)
HF(X) ; -- return descr and active flag for health factor
"RTN","IBDFN14",66,0)
 ; -- pass X equal to ien for health factor
"RTN","IBDFN14",67,0)
 ;
"RTN","IBDFN14",68,0)
 Q:'X
"RTN","IBDFN14",69,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",70,0)
 I $G(^AUTTHF(X,0))]"" S IBID="FACTOR",IBLABEL=$P(^(0),"^"),IBINACT=$P(^(0),"^",11)
"RTN","IBDFN14",71,0)
 Q
"RTN","IBDFN14",72,0)
 ;
"RTN","IBDFN14",73,0)
IMMUN(X) ; -- return descr and active flag for immunization
"RTN","IBDFN14",74,0)
 ; -- pass X equal to ien for immunization
"RTN","IBDFN14",75,0)
 ;
"RTN","IBDFN14",76,0)
 Q:'X
"RTN","IBDFN14",77,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",78,0)
 I $G(^AUTTIMM(X,0))]"" S IBID="IMMUN",IBLABEL=$P(^(0),"^"),IBINACT=$P(^(0),"^",7)
"RTN","IBDFN14",79,0)
 Q
"RTN","IBDFN14",80,0)
 ;
"RTN","IBDFN14",81,0)
TREAT(X) ; -- return descr and active flag for treatment
"RTN","IBDFN14",82,0)
 ; -- pass X equal to ien for TREATMENTS
"RTN","IBDFN14",83,0)
 ;
"RTN","IBDFN14",84,0)
 Q:'X
"RTN","IBDFN14",85,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",86,0)
 I $G(^AUTTTRT(X,0))]"" S IBID="TREATMENT",IBLABEL=$P(^(0),"^"),IBINACT=$P(^(0),"^",4)
"RTN","IBDFN14",87,0)
 Q
"RTN","IBDFN14",88,0)
 ;
"RTN","IBDFN14",89,0)
ST(X) ; -- return descr and active flag for immunization
"RTN","IBDFN14",90,0)
 ; -- pass X equal to ien for immunization
"RTN","IBDFN14",91,0)
 ;
"RTN","IBDFN14",92,0)
 Q:'X
"RTN","IBDFN14",93,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",94,0)
 I $G(^AUTTSK(X,0))]"" S IBID="SKIN TEST",IBLABEL=$P(^(0),"^"),IBINACT=$P(^(0),"^",3)
"RTN","IBDFN14",95,0)
 Q
"RTN","IBDFN14",96,0)
YN(X) ; -- return descr
"RTN","IBDFN14",97,0)
 ; -- pass X equal to 1 or 0
"RTN","IBDFN14",98,0)
 ;
"RTN","IBDFN14",99,0)
 Q:X']""
"RTN","IBDFN14",100,0)
 S IBID="VALUE"
"RTN","IBDFN14",101,0)
 S (IBLABEL,IBINACT)=""
"RTN","IBDFN14",102,0)
 I X S IBLABEL="YES" Q
"RTN","IBDFN14",103,0)
 S IBLABEL="NO" Q
"RTN","IBDFN14",104,0)
 Q
"RTN","IBDFN4")
0^6^B12796917
"RTN","IBDFN4",1,0)
IBDFN4 ;ALB/CJM - ENCOUNTER FORM - (entry points for selection routines);5/21/93
"RTN","IBDFN4",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**38,51**;APR 24, 1997
"RTN","IBDFN4",3,0)
 ;
"RTN","IBDFN4",4,0)
CPT ;select ambulatory procedures
"RTN","IBDFN4",5,0)
 N NAME,CODE,SCREEN,IBDESCR,IBDESCLG,QUIT
"RTN","IBDFN4",6,0)
 S QUIT=0
"RTN","IBDFN4",7,0)
 ;;I '$D(@IBARY@("SCREEN")) D CPTSCRN Q:QUIT
"RTN","IBDFN4",8,0)
 ;;E  S SCREEN=$G(@IBARY@("SCREEN"))
"RTN","IBDFN4",9,0)
 S SCREEN="I $P($$CPT^ICPTCOD(Y),U,7)=1" ;List only active codes
"RTN","IBDFN4",10,0)
 K DIC S DIC=81,DIC(0)="AEMQZ",DIC("S")=SCREEN
"RTN","IBDFN4",11,0)
 I $D(^ICPT) D ^DIC K DIC I +Y>0 D
"RTN","IBDFN4",12,0)
 .;;change to api cpt;dhh
"RTN","IBDFN4",13,0)
 .S CODE=$P(Y(0),U)
"RTN","IBDFN4",14,0)
 .S CODE=$$CPT^ICPTCOD(CODE)
"RTN","IBDFN4",15,0)
 .I +CODE=-1 K @IBARY Q
"RTN","IBDFN4",16,0)
 .S NAME=$P(CODE,"^",3)
"RTN","IBDFN4",17,0)
 .S IBDESCLG=$$CPTD^ICPTCOD(+CODE,.IBCPTD)
"RTN","IBDFN4",18,0)
 .S IBDESCR=$G(IBCPTD(1))_" "_$G(IBCPTD(2))
"RTN","IBDFN4",19,0)
 .S @IBARY=$P(CODE,"^",2)_"^"_NAME_"^"_IBDESCR
"RTN","IBDFN4",20,0)
 E  K @IBARY ;kill either if file doesn't exist or nothing chosen
"RTN","IBDFN4",21,0)
 Q
"RTN","IBDFN4",22,0)
CPTSCRN ;This code is probably not called, but will modify to be safe.
"RTN","IBDFN4",23,0)
 ;;S SCREEN="I '$P(^(0),U,4)"
"RTN","IBDFN4",24,0)
 S SCREEN="I $P($$CPT^ICPTCOD(Y),U,7)=1"
"RTN","IBDFN4",25,0)
 ;
"RTN","IBDFN4",26,0)
 ;don't ask the user about categories - it doesn't work well 
"RTN","IBDFN4",27,0)
 ;K DIR S DIR(0)="YA",DIR("A")="Do you want to select a CPT from a particular CPT category? ",DIR("?")="Answer YES if you want to screen out all CPT codes that do not belong to a particular category",DIR("B")="NO"
"RTN","IBDFN4",28,0)
 ;I $D(^DIC(81.1)) D ^DIR K DIR S:$D(DIRUT) QUIT=1 Q:$D(DIRUT)  I +Y D
"RTN","IBDFN4",29,0)
 ;.K DIC S DIC="81.1",DIC(0)="AEQ",DIC("S")="I $P(^(0),U,2)=""m"""
"RTN","IBDFN4",30,0)
 ;.D ^DIC K DIC I +Y>0 S SCREEN=SCREEN_",$P($G(^DIC(81.1,+$P(^(0),U,3),0)),U,3)="_+Y
"RTN","IBDFN4",31,0)
 S @IBARY@("SCREEN")=SCREEN
"RTN","IBDFN4",32,0)
 Q
"RTN","IBDFN4",33,0)
 ;
"RTN","IBDFN4",34,0)
ICD9 ;select ICD-9 codes
"RTN","IBDFN4",35,0)
 N IBDX,CODE,SCREEN,IBDESCR,QUIT
"RTN","IBDFN4",36,0)
 S QUIT=0
"RTN","IBDFN4",37,0)
 ;;I $D(@IBARY@("SCREEN")) S SCREEN=$G(@IBARY@("SCREEN"))
"RTN","IBDFN4",38,0)
 ;;E  D ICD9SCRN Q:QUIT
"RTN","IBDFN4",39,0)
 S SCREEN="I $P($$ICDDX^ICDCODE(Y),U,10)=1" ;List only active codes
"RTN","IBDFN4",40,0)
 S DIC=80,DIC(0)="AEMQZI",DIC("S")=SCREEN
"RTN","IBDFN4",41,0)
 I $D(^ICD9) D ^DIC K DIC I +Y>0 D
"RTN","IBDFN4",42,0)
 .S CODE=$P(Y(0),U),IBDX=$P(Y(0),U,3),IBDESCR=$P($G(^ICD9(+Y,1)),"^")
"RTN","IBDFN4",43,0)
 .S @IBARY=CODE_"^"_IBDX_"^"_IBDESCR
"RTN","IBDFN4",44,0)
 E  K @IBARY ;kill if either file doesn't exist or nothing chosen - this is how to let the encounter form utilities know nothing was selected
"RTN","IBDFN4",45,0)
 Q
"RTN","IBDFN4",46,0)
ICD9SCRN ;This code is probably not called, but will modify to be safe.
"RTN","IBDFN4",47,0)
 ;;S SCREEN="I '$P(^(0),U,9)"
"RTN","IBDFN4",48,0)
 S SCREEN="I $P($$ICDDX^ICDCODE(Y),U,10)=1"
"RTN","IBDFN4",49,0)
 ;
"RTN","IBDFN4",50,0)
 ;don't ask the user about categories - it doesn't work well 
"RTN","IBDFN4",51,0)
 ;K DIR S DIR(0)="YA",DIR("A")="Do you want to select an ICD diagnosis from a particular diagnostic category? ",DIR("B")="NO"
"RTN","IBDFN4",52,0)
 ;S DIR("?")="Answer YES if you want to screen out all diagnosis codes that do not belong to a particular category"
"RTN","IBDFN4",53,0)
 ;I $D(^DIC(80.3)) D ^DIR K DIR S:$D(DIRUT) QUIT=1 Q:$D(DIRUT)  I +Y D
"RTN","IBDFN4",54,0)
 ;.K DIC S DIC="80.3",DIC(0)="AEQ"
"RTN","IBDFN4",55,0)
 ;.D ^DIC K DIC I +Y>0 S SCREEN=SCREEN_",+$P(^(0),U,5)="_+Y
"RTN","IBDFN4",56,0)
 S @IBARY@("SCREEN")=SCREEN
"RTN","IBDFN4",57,0)
 Q
"RTN","IBDFN4",58,0)
NULL ;returns NOTHING for selection
"RTN","IBDFN4",59,0)
 S @IBARY=""
"RTN","IBDFN4",60,0)
 Q
"RTN","IBDFN4",61,0)
 ;
"RTN","IBDFN4",62,0)
VSIT ; -- Select only visit cpt codes
"RTN","IBDFN4",63,0)
 N NAME,CODE,IBDESCR,QUIT,DIC,X,Y,IBHDR,IBTXT
"RTN","IBDFN4",64,0)
 S QUIT=0
"RTN","IBDFN4",65,0)
 ;
"RTN","IBDFN4",66,0)
 ;;S DIC="^IBE(357.69,",DIC(0)="AEMQZ",DIC("S")="I '$P(^(0),U,4)"
"RTN","IBDFN4",67,0)
 S DIC="^IBE(357.69,",DIC(0)="AEMQZ"
"RTN","IBDFN4",68,0)
 S DIC("S")="I $P($$CPT^ICPTCOD(Y),U,7)=1" ;List only active codes
"RTN","IBDFN4",69,0)
 D ^DIC K DIC I +Y>0 D
"RTN","IBDFN4",70,0)
 .;;----change to api cpt;dhh
"RTN","IBDFN4",71,0)
 .S CODE=$P(Y(0),U),IBHDR=$P(Y(0),U,2),IBTXT=$P(Y(0),U,3)
"RTN","IBDFN4",72,0)
 .S NODE=$$CPT^ICPTCOD(CODE)
"RTN","IBDFN4",73,0)
 .I +NODE=-1 S IBSNM="" Q
"RTN","IBDFN4",74,0)
 .S IBSNM=$P(NODE,U,3)
"RTN","IBDFN4",75,0)
 .S @IBARY=CODE_"^"_IBTXT_"^"_IBHDR_"^"_IBSNM
"RTN","IBDFN4",76,0)
 E  K @IBARY ;kill if nothing chosen
"RTN","IBDFN4",77,0)
 Q
"RTN","IBDFN4",78,0)
 ;
"RTN","IBDFN4",79,0)
PRVDR ;for selecting provider
"RTN","IBDFN4",80,0)
 D GETPRO^IBDF18B(IBCLINIC,IBARY)
"RTN","IBDFN4",81,0)
 Q
"RTN","IBDFN4",82,0)
 ;
"RTN","IBDFN4",83,0)
IBPFID ;for printing the form # assigned by form tracking
"RTN","IBDFN4",84,0)
 S @IBARY=$G(IBPFID)
"RTN","IBDFN4",85,0)
 Q
"RTN","IBDFN4",86,0)
 ;
"RTN","IBDFN4",87,0)
PCPR ; -- get primary care provider for a patient
"RTN","IBDFN4",88,0)
 S @IBARY=$P($$OUTPTPR^SDUTL3(DFN,DT),"^",2)
"RTN","IBDFN4",89,0)
 Q
"RTN","IBDFN4",90,0)
 ;
"RTN","IBDFN4",91,0)
PCTM ; -- get primary care team for a patient
"RTN","IBDFN4",92,0)
 S @IBARY=$P($$OUTPTTM^SDUTL3(DFN,DT),"^",2)
"RTN","IBDFN4",93,0)
 Q
"RTN","IBDFN4",94,0)
 ;
"RTN","IBDFN4",95,0)
SCCOND ; -- display sc conditions
"RTN","IBDFN4",96,0)
 Q:'$G(DFN)
"RTN","IBDFN4",97,0)
 D DIS^DGRPDB
"RTN","IBDFN4",98,0)
 W !
"RTN","IBDFN4",99,0)
 Q
"RTN","IBDFN4",100,0)
 ;
"RTN","IBDFN4",101,0)
 ;
"RTN","IBDFN4",102,0)
CPTMOD ;- Select active CPT Modifiers
"RTN","IBDFN4",103,0)
 ;- (used in selecting CPT Modifier(s) when creating the CPT Modifier
"RTN","IBDFN4",104,0)
 ;   Display ToolKit Block)
"RTN","IBDFN4",105,0)
 ;
"RTN","IBDFN4",106,0)
 N CODE,DIC,NAME,SCREEN
"RTN","IBDFN4",107,0)
 Q:$G(IBARY)=""
"RTN","IBDFN4",108,0)
 ;
"RTN","IBDFN4",109,0)
 ;- Screen out inactive CPT modifiers
"RTN","IBDFN4",110,0)
 ;;S SCREEN="I '$P(^(0),U,5)"
"RTN","IBDFN4",111,0)
 ;;I '$D(@IBARY@("SCREEN")) S @IBARY@("SCREEN")=SCREEN
"RTN","IBDFN4",112,0)
 ;
"RTN","IBDFN4",113,0)
 ;List only active modifiers
"RTN","IBDFN4",114,0)
 S SCREEN="I $P($$MOD^ICPTMOD(Y,""I""),U,7)=1"
"RTN","IBDFN4",115,0)
 S DIC=81.3
"RTN","IBDFN4",116,0)
 S DIC(0)="AEMQZ"
"RTN","IBDFN4",117,0)
 S DIC("S")=SCREEN
"RTN","IBDFN4",118,0)
 D ^DIC
"RTN","IBDFN4",119,0)
 I +Y>0 D
"RTN","IBDFN4",120,0)
 . ;- Use first 35 chars of modifier description
"RTN","IBDFN4",121,0)
 . S CODE=$P(Y(0),"^"),NAME=$E($P(Y(0),"^",2),1,35)
"RTN","IBDFN4",122,0)
 . S @IBARY=CODE_"^"_NAME
"RTN","IBDFN4",123,0)
 ;
"RTN","IBDFN4",124,0)
 ;- Kill if file doesn't exist or nothing chosen
"RTN","IBDFN4",125,0)
 E  K @IBARY
"RTN","IBDFN4",126,0)
 Q
"RTN","IBDFN7")
0^7^B4240764
"RTN","IBDFN7",1,0)
IBDFN7 ;ALB/CJM - ENCOUNTER FORM - validate logic for data ;MAY 10,1995
"RTN","IBDFN7",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**38,51**;APR 24, 1997
"RTN","IBDFN7",3,0)
 ;
"RTN","IBDFN7",4,0)
TESTCPT ;does X point to a valid CPT4 code? Kills X if not.
"RTN","IBDFN7",5,0)
 ;
"RTN","IBDFN7",6,0)
 ;;change to api cpt;dhh
"RTN","IBDFN7",7,0)
 N XX
"RTN","IBDFN7",8,0)
 S Y=""
"RTN","IBDFN7",9,0)
 I $G(X)="" K X Q
"RTN","IBDFN7",10,0)
 S XX=$$CPT^ICPTCOD($G(X))
"RTN","IBDFN7",11,0)
 I +XX=-1 K X Q
"RTN","IBDFN7",12,0)
 I $P(XX,U,7)'=1 K X S Y=$P(XX,U,3) Q
"RTN","IBDFN7",13,0)
 S X=$P(XX,U) ;set X equal ien of cpt code
"RTN","IBDFN7",14,0)
 Q
"RTN","IBDFN7",15,0)
 ;
"RTN","IBDFN7",16,0)
TESTICD ; -- does X point to a valid ICD9 code? Kills X if not.
"RTN","IBDFN7",17,0)
 ; -- input the icd code in X
"RTN","IBDFN7",18,0)
 ;
"RTN","IBDFN7",19,0)
 N CODE,STATUS
"RTN","IBDFN7",20,0)
 I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",21,0)
 S:$E(X,$L(X))'=" " X=X_" " ; use ba xref, add space to end for lookup.
"RTN","IBDFN7",22,0)
 S X=$O(^ICD9("BA",X,0)) I 'X K X S Y="" Q
"RTN","IBDFN7",23,0)
 I '$D(^ICD9(X,0)) K X S Y="" Q
"RTN","IBDFN7",24,0)
 ;;I $P($G(^ICD9(X,0)),"^",9) S Y=$P(^ICD9(X,0),"^",3) K X
"RTN","IBDFN7",25,0)
 S CODE=$$ICDDX^ICDCODE(X)
"RTN","IBDFN7",26,0)
 S STATUS=$P(CODE,U,10) I STATUS'=1 S Y=$P(CODE,U,4) K X
"RTN","IBDFN7",27,0)
 Q
"RTN","IBDFN7",28,0)
 ;
"RTN","IBDFN7",29,0)
TESTVST ;does X point to a valid visit code? If not, kills X.
"RTN","IBDFN7",30,0)
 ;checks that X is a valid CPT4 code and that there is a corresponding entry in the TYPE OF VISIT file that is active
"RTN","IBDFN7",31,0)
 N IEN,XX
"RTN","IBDFN7",32,0)
 I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",33,0)
 ;;change to api cpt;dhh
"RTN","IBDFN7",34,0)
 S XX=$$CPT^ICPTCOD(X)
"RTN","IBDFN7",35,0)
 I +XX=-1 K X S Y="" Q
"RTN","IBDFN7",36,0)
 I $P(XX,U,7)'=1 K X S Y=$P(XX,U,3) Q
"RTN","IBDFN7",37,0)
 S X=$P(XX,U) ;set X equal ien of cpt code
"RTN","IBDFN7",38,0)
 Q:'$D(X)
"RTN","IBDFN7",39,0)
 S IEN=$O(^IBE(357.69,"B",X,0)) K:'IEN X I IEN K:$P($G(^IBE(357.69,IEN,0)),"^",4) X
"RTN","IBDFN7",40,0)
 Q
"RTN","IBDFN7",41,0)
 ;
"RTN","IBDFN7",42,0)
TESTLEX ; -- Is clinical lexicon pointer valid and does icdone, not return 799.9
"RTN","IBDFN7",43,0)
 S IBDLEXV=1
"RTN","IBDFN7",44,0)
 I $D(^LEX)>1 S X="LEXSET" X ^%ZOSF("TEST") I $T S IBDLEXV=2
"RTN","IBDFN7",45,0)
 I IBDLEXV=1 D
"RTN","IBDFN7",46,0)
 .I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",47,0)
 .I '$D(^GMP(757.01,+X,0)) K X S Y="" Q
"RTN","IBDFN7",48,0)
 .S VAL=$$ICDONE^GMPTU(X)
"RTN","IBDFN7",49,0)
 .I VAL="" K X S Y="No ICD9 code" Q
"RTN","IBDFN7",50,0)
 .I VAL=799.9 K X S Y="ICD9 code 799.9" Q
"RTN","IBDFN7",51,0)
 .I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",52,0)
 .Q
"RTN","IBDFN7",53,0)
 I IBDLEXV>1 D
"RTN","IBDFN7",54,0)
 .I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",55,0)
 .I '$D(^LEX(757.01,+X,0)) K X S Y="" Q
"RTN","IBDFN7",56,0)
 .S VAL=$$ICDONE^LEXU(X)
"RTN","IBDFN7",57,0)
 .I VAL="" K X S Y="No ICD9 code" Q
"RTN","IBDFN7",58,0)
 .I VAL=799.9 K X S Y="ICD9 code 799.9" Q
"RTN","IBDFN7",59,0)
 .Q
"RTN","IBDFN7",60,0)
 Q
"RTN","IBDFN8")
0^8^B889456
"RTN","IBDFN8",1,0)
IBDFN8 ;ALB/CJM - ENCOUNTER FORM - PCE GDI INPUT TRANSFORMS;AUG 10, 1995
"RTN","IBDFN8",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**25,38,51**;APR 24, 1997
"RTN","IBDFN8",3,0)
 ;
"RTN","IBDFN8",4,0)
INPUTCPT(X) ;changes X,a CPT code, into its ien
"RTN","IBDFN8",5,0)
 ;
"RTN","IBDFN8",6,0)
 ;   --input: cpt code
"RTN","IBDFN8",7,0)
 ;   
"RTN","IBDFN8",8,0)
 ;   --output: ien of cpt code (file #81)
"RTN","IBDFN8",9,0)
 ;
"RTN","IBDFN8",10,0)
 S X=$$UPP(X)
"RTN","IBDFN8",11,0)
 ;;S X=+$$CPT^ICPTCOD(X)
"RTN","IBDFN8",12,0)
 S X=$$CPT^ICPTCOD(X)
"RTN","IBDFN8",13,0)
 I +X=-1 K X Q
"RTN","IBDFN8",14,0)
 I $P(X,U,7)'=1 K X ;(CSV) status 0-inactive 1-active
"RTN","IBDFN8",15,0)
 Q
"RTN","IBDFN8",16,0)
 ;
"RTN","IBDFN8",17,0)
INPUTICD(ICD) ;changes X, an ICD9 code, into its ien
"RTN","IBDFN8",18,0)
 ;
"RTN","IBDFN8",19,0)
 S ICD=$$UPP(ICD)
"RTN","IBDFN8",20,0)
 S X=$O(^ICD9("BA",ICD_" ",0)) I 'X K X Q
"RTN","IBDFN8",21,0)
 ;;K:'X X
"RTN","IBDFN8",22,0)
 ;
"RTN","IBDFN8",23,0)
 ;(CSV) status 0-inactive 1-active
"RTN","IBDFN8",24,0)
 I $P($$ICDDX^ICDCODE(X),U,10)'=1 K X
"RTN","IBDFN8",25,0)
 Q
"RTN","IBDFN8",26,0)
 ;
"RTN","IBDFN8",27,0)
UPP(X) ; -- convert lower case to upper case (especially when in codes above)
"RTN","IBDFN8",28,0)
 Q $TR(X,"zxcvbnmlkjhgfdsaqwertyuiop","ZXCVBNMLKJHGFDSAQWERTYUIOP")
"RTN","IBDFN9")
0^9^B876630
"RTN","IBDFN9",1,0)
IBDFN9 ;ALB/CJM - ENCOUNTER FORM - output transforms for data ;MAY 10, 1995
"RTN","IBDFN9",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**38,36,51**;APR 24, 1997
"RTN","IBDFN9",3,0)
 ;
"RTN","IBDFN9",4,0)
DSPLYCPT(IEN) ;output transform for CPT codes (file #81)
"RTN","IBDFN9",5,0)
 ;example of use: S Y=$$DSPLYCPT^IBDFN9(Y)
"RTN","IBDFN9",6,0)
 ;;change to api cpt;dhh
"RTN","IBDFN9",7,0)
 N CODE
"RTN","IBDFN9",8,0)
 S CODE=$$CPT^ICPTCOD(IEN)
"RTN","IBDFN9",9,0)
 ;;I +CODE=-1 S CODE=""
"RTN","IBDFN9",10,0)
 ;;E  S CODE=$P(CODE,U,2)
"RTN","IBDFN9",11,0)
 ;
"RTN","IBDFN9",12,0)
 ;Check status for CSV
"RTN","IBDFN9",13,0)
 I $P(CODE,U,7)'=1 S CODE="" Q CODE
"RTN","IBDFN9",14,0)
 S CODE=$P(CODE,U,2)
"RTN","IBDFN9",15,0)
 Q CODE
"RTN","IBDFN9",16,0)
 ;
"RTN","IBDFN9",17,0)
DSPLYICD(IEN) ;output transform for ICD9 codes (file #80)
"RTN","IBDFN9",18,0)
 ;example of use: S Y=$$DSPLYICD^IBDFN9(Y)
"RTN","IBDFN9",19,0)
 ;;Q $P($G(^ICD9(+$G(IEN),0)),"^")
"RTN","IBDFN9",20,0)
 ;
"RTN","IBDFN9",21,0)
 ;Use API for CSV
"RTN","IBDFN9",22,0)
 Q $P($$ICDDX^ICDCODE(IEN),"^",2)
"RTN","IBDFN9",23,0)
 ;
"RTN","IBDFN9",24,0)
DSPLYPRV(IEN) ;output transform for provider (file #200)
"RTN","IBDFN9",25,0)
 ;example of use: S Y=$$DSPLYPRV^IBDFN9(Y)
"RTN","IBDFN9",26,0)
 Q $P($G(^VA(200,+$G(IEN),0)),"^")
"RTN","IBDFN9",27,0)
 ;
"RTN","IBDFN9",28,0)
DSPLYYN(Y) ;changes 1 to YES and 0 or "" to NO
"RTN","IBDFN9",29,0)
 Q:Y=1 "YES"
"RTN","IBDFN9",30,0)
 Q:(Y=0)!(Y="") "NO"
"RTN","IBDFN9",31,0)
 Q " "
"RTN","IBDFN9",32,0)
VARVAL(Y) ;determines PCE DIM NODE VALUE
"RTN","IBDFN9",33,0)
 Q:'$D(Y) ""
"RTN","IBDFN9",34,0)
 Q $S(Y="SC":6,Y="AO":7,Y="IR":8,Y="EC":9,Y="MST":10,1:"")
"RTN","IBDFOSG")
0^20^B25666094
"RTN","IBDFOSG",1,0)
IBDFOSG ;ALB/MAF/AAS - SCANNED EF FOR OUTPATIENTS WITH BILLS GENERATED REPORT ;8/21/95
"RTN","IBDFOSG",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**29,51**;APR 24, 1997
"RTN","IBDFOSG",3,0)
 ;
"RTN","IBDFOSG",4,0)
 W !,?4,"** This option is OUT OF ORDER **" QUIT   ;Code set Versioning
"RTN","IBDFOSG",5,0)
 ;
"RTN","IBDFOSG",6,0)
% I '$D(DT) D DT^DICRW
"RTN","IBDFOSG",7,0)
 D END
"RTN","IBDFOSG",8,0)
 W !!,"Scanned Encounter Forms with Outpatient Bills Generated."
"RTN","IBDFOSG",9,0)
 S IBDFMUL=0 I $D(^DG(43,1,"GL")) S:$P(^DG(43,1,"GL"),"^",2)=1 IBDFMUL=1 D DIVISION^VAUTOMA G:Y=-1 END
"RTN","IBDFOSG",10,0)
 S VAUTC=1
"RTN","IBDFOSG",11,0)
 S IBDFDAT=$$HTE^XLFDT($H)
"RTN","IBDFOSG",12,0)
 ;
"RTN","IBDFOSG",13,0)
DATE ; -- select date
"RTN","IBDFOSG",14,0)
 W !! D DATE^IBOUTL
"RTN","IBDFOSG",15,0)
 I IBBDT=""!(IBEDT="") G END
"RTN","IBDFOSG",16,0)
 S IBDFBEG=IBBDT,IBDFEND=IBEDT
"RTN","IBDFOSG",17,0)
 ;
"RTN","IBDFOSG",18,0)
DEV ; -- select device, run option
"RTN","IBDFOSG",19,0)
 W !!,"You will need a 132 column printer for this report!",!
"RTN","IBDFOSG",20,0)
 S %ZIS="QM" D ^%ZIS G:POP END
"RTN","IBDFOSG",21,0)
 I $D(IO("Q")) K ZTSK S ZTRTN="DQ^IBDFOSG",ZTSAVE("IB*")="",ZTSAVE("VA*")="",ZTDESC="IBD - Scanned Encounter Forms with Bill Generation" D ^%ZTLOAD K IO("Q") W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS G END
"RTN","IBDFOSG",22,0)
 ;
"RTN","IBDFOSG",23,0)
 U IO
"RTN","IBDFOSG",24,0)
 S X=132 X ^%ZOSF("RM")
"RTN","IBDFOSG",25,0)
DQ D PRINT G END
"RTN","IBDFOSG",26,0)
 Q
"RTN","IBDFOSG",27,0)
 ;
"RTN","IBDFOSG",28,0)
END ; -- Clean up
"RTN","IBDFOSG",29,0)
 K ^TMP("CTOT",$J),^TMP("DTOT",$J),^TMP("GTOT",$J),^TMP("MCCR",$J),^TMP("IBD-BILL",$J),^TMP("IBD-PRINTED",$J),^TMP("IBD-ENTERED",$J) W !
"RTN","IBDFOSG",30,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBDFOSG",31,0)
 D ^%ZISC
"RTN","IBDFOSG",32,0)
 K X,Y,DFN,IBPAG,IBHDT,IBDT,IBBDT,IBEDT,IBQUIT,IBDFDVE
"RTN","IBDFOSG",33,0)
 K IBCNT,IBDFBEG,IBDFCLI,IBDFDA,IBDFDAT,IBDFDIV,IBDFEND,IBDFIFN,IBDFMUL,IBDFNODE,IBDFNUM,IBDFSA,IBDFT,IBDFTMP,IBDFTMP1,IBDFTMP2,IBDFTPRT
"RTN","IBDFOSG",34,0)
 K IBFLG1,IBFLG2,IBFLG3,IBFLG4,IBFLG5,IBFLG6,IBFLG7,IBFLG8,IBFLG9,IBMCNODE,IBMCSND,IBNAM,IBTSBDT,IBTSEDT
"RTN","IBDFOSG",35,0)
 K VAUTC,VAUTD
"RTN","IBDFOSG",36,0)
 Q
"RTN","IBDFOSG",37,0)
 ;
"RTN","IBDFOSG",38,0)
PRINT ; -- print one billing report
"RTN","IBDFOSG",39,0)
 ;    Data sorted into ^tmp arrays
"RTN","IBDFOSG",40,0)
 ;                    := ^tmp("mccr",$j) =
"RTN","IBDFOSG",41,0)
 ;    Clinic Totals   := ^tmp("ctot",$j,division,clinic)=
"RTN","IBDFOSG",42,0)
 ;    Division Totals := ^tmp("dtot",$j,division)       =
"RTN","IBDFOSG",43,0)
 ;    Grand Totals    := ^tmp("gtot",$j)                =
"RTN","IBDFOSG",44,0)
 ;
"RTN","IBDFOSG",45,0)
 S (IBPAG,IBDFDVE)=0,IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0
"RTN","IBDFOSG",46,0)
 S IBTSBDT=IBBDT-.1,IBTSEDT=IBEDT+.9
"RTN","IBDFOSG",47,0)
 D QUIT
"RTN","IBDFOSG",48,0)
 D START^IBDFOSG1
"RTN","IBDFOSG",49,0)
 ;
"RTN","IBDFOSG",50,0)
PR D HDR
"RTN","IBDFOSG",51,0)
 I '$D(^TMP("MCCR",$J)) W !!,"No Data Meeting This Criteria for the Date Range Chosen",! Q
"RTN","IBDFOSG",52,0)
 N IBDFDV,IBDFCL,IBDNODE,IBDFTMP,IBDFPAT,IBDFPT,IBDFT
"RTN","IBDFOSG",53,0)
 S (IBDFDV,IBDFCL,IBDFPT)=0
"RTN","IBDFOSG",54,0)
 F IBDFDIV=0:0 S IBDFDV=$O(^TMP("CTOT",$J,IBDFDV)) Q:IBDFDV=""!(IBQUIT)  D
"RTN","IBDFOSG",55,0)
 .D DIVH
"RTN","IBDFOSG",56,0)
 .S IBDFCL=0
"RTN","IBDFOSG",57,0)
 .F IBDFCLI=0:0 S IBDFCL=$O(^TMP("CTOT",$J,IBDFDV,IBDFCL)) Q:IBDFCL=""  D ONECL I $O(^TMP("CTOT",$J,IBDFDV,IBDFCL))="" S IBDFDVE=1 D ONEDV
"RTN","IBDFOSG",58,0)
 ;
"RTN","IBDFOSG",59,0)
 ;  -- Print Totals Page
"RTN","IBDFOSG",60,0)
 S IBDFDVE=0
"RTN","IBDFOSG",61,0)
 Q:IBQUIT
"RTN","IBDFOSG",62,0)
 D HDR
"RTN","IBDFOSG",63,0)
 S (IBDFDV,IBDFCL,IBDFPT)=0
"RTN","IBDFOSG",64,0)
 S IBFLG4=1 ;1 := on division totals page
"RTN","IBDFOSG",65,0)
 F IBDFDIV=0:0 S IBDFDV=$O(^TMP("DTOT",$J,IBDFDV)) Q:IBDFDV']""!(IBQUIT)  D ONEDV
"RTN","IBDFOSG",66,0)
 Q:IBQUIT
"RTN","IBDFOSG",67,0)
 D DASH
"RTN","IBDFOSG",68,0)
 D LINE("GRAND TOTAL",^TMP("GTOT",$J))
"RTN","IBDFOSG",69,0)
 Q
"RTN","IBDFOSG",70,0)
 ;
"RTN","IBDFOSG",71,0)
ONECL ; -- Print one clinics data
"RTN","IBDFOSG",72,0)
 Q:IBQUIT
"RTN","IBDFOSG",73,0)
 Q:^TMP("CTOT",$J,IBDFDV,IBDFCL)="0^0^0^0^0^0^0^0^0"
"RTN","IBDFOSG",74,0)
 D LINE(IBDFCL,^TMP("CTOT",$J,IBDFDV,IBDFCL))
"RTN","IBDFOSG",75,0)
 Q
"RTN","IBDFOSG",76,0)
 ;
"RTN","IBDFOSG",77,0)
ONEDV ;  -- Print Division totals
"RTN","IBDFOSG",78,0)
 Q:IBQUIT
"RTN","IBDFOSG",79,0)
 I IOSL<($Y+5) D HDR Q:IBQUIT
"RTN","IBDFOSG",80,0)
 Q:^TMP("DTOT",$J,IBDFDV)="0^0^0^0^0^0^0^0^0"&('$D(IBFLG4))
"RTN","IBDFOSG",81,0)
 I IBDFDVE=1 D DASH S IBDFDVE=0
"RTN","IBDFOSG",82,0)
 D LINE(IBDFDV,^TMP("DTOT",$J,IBDFDV))
"RTN","IBDFOSG",83,0)
 Q
"RTN","IBDFOSG",84,0)
 ;
"RTN","IBDFOSG",85,0)
LINE(NAME,IBX) ;
"RTN","IBDFOSG",86,0)
 ; -- print detail line
"RTN","IBDFOSG",87,0)
 ;    input Name := text to be printed
"RTN","IBDFOSG",88,0)
 ;          ibx  ;= 9 piece global node containing data
"RTN","IBDFOSG",89,0)
 ;
"RTN","IBDFOSG",90,0)
 I IOSL<($Y+5) D HDR Q:IBQUIT
"RTN","IBDFOSG",91,0)
 W !,$E(NAME,1,25)
"RTN","IBDFOSG",92,0)
 W ?27,$J($P(IBX,"^",4),8)
"RTN","IBDFOSG",93,0)
 W ?39,$J($P(IBX,"^",3),8)
"RTN","IBDFOSG",94,0)
 W ?51,$J($P(IBX,"^",1),8)
"RTN","IBDFOSG",95,0)
 W ?63,$J($P(IBX,"^",2),8)
"RTN","IBDFOSG",96,0)
 S X=$S($P(IBX,"^",4)>0:$P(IBX,"^",5)/$P(IBX,"^",4),1:0)
"RTN","IBDFOSG",97,0)
 W ?75,$J(X,8,2) ;$J($E(X,1,8),8)
"RTN","IBDFOSG",98,0)
 W ?87,$J($P(IBX,"^",6),8)
"RTN","IBDFOSG",99,0)
 W ?99,$J($P(IBX,"^",7),8)
"RTN","IBDFOSG",100,0)
 W ?111,$J($P(IBX,"^",8),8)
"RTN","IBDFOSG",101,0)
 W ?123,$J($P(IBX,"^",9),8)
"RTN","IBDFOSG",102,0)
 Q
"RTN","IBDFOSG",103,0)
 ;
"RTN","IBDFOSG",104,0)
HDR ; -- Print header for billing report
"RTN","IBDFOSG",105,0)
 Q:IBQUIT
"RTN","IBDFOSG",106,0)
 I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBDFOSG",107,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
"RTN","IBDFOSG",108,0)
 S IBPAG=IBPAG+1
"RTN","IBDFOSG",109,0)
 W !,"Scanned Encounters with Bill Generation Data",?(IOM-33),"Page ",IBPAG,"  ",IBHDT
"RTN","IBDFOSG",110,0)
 W !,"For Period beginning on ",$$FMTE^XLFDT(IBBDT,2)," to ",$$FMTE^XLFDT(IBEDT,2)
"RTN","IBDFOSG",111,0)
 W !,?53,"Visits",?65,"#Bills",?75,"Avg. Days",?114,"Total",?126,"Total"
"RTN","IBDFOSG",112,0)
 W !,"Clinic",?27,"#Scanned",?39,"#Insured",?53,"Billed",?64,"Printed",?75,"to Print",?87,"$ Billed",?100,"$ Recvd",?114,"Bills",?125,"Visits"
"RTN","IBDFOSG",113,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBDFOSG",114,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 W !!,"....task stopped at user request" Q
"RTN","IBDFOSG",115,0)
 Q
"RTN","IBDFOSG",116,0)
 ;
"RTN","IBDFOSG",117,0)
 ;
"RTN","IBDFOSG",118,0)
QUIT K ^TMP("CTOT",$J),^TMP("DTOT",$J),^TMP("GTOT",$J),^TMP("MCCR",$J),^TMP("IBD-BILL",$J) W !
"RTN","IBDFOSG",119,0)
 Q
"RTN","IBDFOSG",120,0)
 ;
"RTN","IBDFOSG",121,0)
 ;
"RTN","IBDFOSG",122,0)
DASH W !,"------------------",?27,"--------",?39,"--------",?51,"--------",?63,"--------",?75,"--------",?87,"--------",?99,"--------",?111,"--------",?123,"--------"
"RTN","IBDFOSG",123,0)
 Q
"RTN","IBDFOSG",124,0)
 ;
"RTN","IBDFOSG",125,0)
DIVH ;  -- Write division header
"RTN","IBDFOSG",126,0)
 I IOSL<($Y+5) D HDR Q:IBQUIT
"RTN","IBDFOSG",127,0)
 Q:^TMP("DTOT",$J,IBDFDV)="0^0^0^0^0^0^0^0^0"
"RTN","IBDFOSG",128,0)
 W !!,?(IOM-$L(IBDFDV)+10/2),"DIVISION: ",IBDFDV,!
"RTN","IBDFOSG",129,0)
 Q
"RTN","IBDFUTL")
0^10^B30782217
"RTN","IBDFUTL",1,0)
IBDFUTL ;ALB/MAF - Maintenance Utility Routine - APR 20 1995
"RTN","IBDFUTL",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**9,32,51**;APR 24, 1997
"RTN","IBDFUTL",3,0)
 ;
"RTN","IBDFUTL",4,0)
 ;  -- Set up variables for display by clinic/form/group
"RTN","IBDFUTL",5,0)
OUT S IBDFL=0  ;W !!,"Display output by: CLINICS// " D ZSET1 S X="" R X:DTIME G QUIT:X="^"!('$T) I X=""!("Cc"[X) S X="1"
"RTN","IBDFUTL",6,0)
 S DIR("B")="CLINICS",DIR(0)="SBM^C:CLINICS (Individual);G:GROUPS (Clinics);F:FORMS",DIR("A")="Sort by [C]linics, [G]roups, [F]orms" D ^DIR
"RTN","IBDFUTL",7,0)
 K DIR I $D(DIRUT)&('$D(IBDF1))!(Y<0) G EXIT
"RTN","IBDFUTL",8,0)
 I $D(DIRUT)&$D(IBDF1) G QUIT
"RTN","IBDFUTL",9,0)
 S X=$S("Gg"[X:2,"Ff"[X:3,"Ss"[X:4,1:1)
"RTN","IBDFUTL",10,0)
 ;I X="?" D ZSET1,HELP1 G OUT
"RTN","IBDFUTL",11,0)
 S IBDFSRT=$E(X)  ;D IN^DGHELP W ! I %=-1 D ZSET1,HELP1 G OUT
"RTN","IBDFUTL",12,0)
 S IBDFDIS=$S(IBDFSRT=1:"CLIN",IBDFSRT=2:"GROUP",IBDFSRT=3:"FORM",1:"QUIT")
"RTN","IBDFUTL",13,0)
 D @(IBDFDIS) S:Y=-1 IBDFNCNG=1 G:Y=-1 QUIT
"RTN","IBDFUTL",14,0)
 ;
"RTN","IBDFUTL",15,0)
 ;
"RTN","IBDFUTL",16,0)
OUT1 ;  -- Ask for what type of package interface
"RTN","IBDFUTL",17,0)
 S DIC="^IBE(357.6,",DIC(0)="AEMN"
"RTN","IBDFUTL",18,0)
 S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1,$G(^(11))'="""""
"RTN","IBDFUTL",19,0)
 S DIC("A")="Select Type of Code to Display: " D ^DIC K DIC G QUIT:Y<0
"RTN","IBDFUTL",20,0)
 S IBDFINT=+Y
"RTN","IBDFUTL",21,0)
 ;
"RTN","IBDFUTL",22,0)
 S IBDFACT=2 ;default of Inactive
"RTN","IBDFUTL",23,0)
 S X=$E($G(^IBE(357.6,IBDFINT,11)),7,9)
"RTN","IBDFUTL",24,0)
 ;
"RTN","IBDFUTL",25,0)
 ; -- for cpt and icd codes, let them choose active or inactive
"RTN","IBDFUTL",26,0)
 I X="CPT"!(X="VST")!(X="ICD") D
"RTN","IBDFUTL",27,0)
 .S DIR("B")="ACTIVE"
"RTN","IBDFUTL",28,0)
 .S DIR(0)="SBM^A:ACTIVE;I:INACTIVE"
"RTN","IBDFUTL",29,0)
 .S DIR("A")="Display codes [A]ctive, [I]nactive"
"RTN","IBDFUTL",30,0)
 .D ^DIR K DIR
"RTN","IBDFUTL",31,0)
 .Q:$D(DIRUT)
"RTN","IBDFUTL",32,0)
 .S X=$S("Ii"[$E(X,1):2,1:1)
"RTN","IBDFUTL",33,0)
 .S IBDFACT=$E(X)
"RTN","IBDFUTL",34,0)
 I $D(DIRUT)&('$D(IBDF1))!(Y<0) G EXIT
"RTN","IBDFUTL",35,0)
 I $D(DIRUT)&$D(IBDF1) G QUIT
"RTN","IBDFUTL",36,0)
 ;
"RTN","IBDFUTL",37,0)
 I $D(IBDF1) D
"RTN","IBDFUTL",38,0)
 .K VAUTP F IBI=0:0 S IBI=$O(VAUTJ(IBI)) Q:IBI']""  S VAUTP(IBI)=$G(VAUTJ(IBI))
"RTN","IBDFUTL",39,0)
 I IBDFACT=1 D
"RTN","IBDFUTL",40,0)
 .;;I $E($G(^IBE(357.6,IBDFINT,11)),7,9)="CPT" S DIC="^ICPT(",IBDFCODE="CPT "
"RTN","IBDFUTL",41,0)
 .;;I $E($G(^IBE(357.6,IBDFINT,11)),7,9)="ICD" S DIC="^ICD9(",IBDFCODE="ICD-9 "
"RTN","IBDFUTL",42,0)
 .;;I $E($G(^IBE(357.6,IBDFINT,11)),7,9)="VST" S DIC="^IBE(357.69,",IBDFCODE="Type of Visit "
"RTN","IBDFUTL",43,0)
 .;
"RTN","IBDFUTL",44,0)
 .I $E($G(^IBE(357.6,IBDFINT,11)),7,9)="CPT" S DIC="^ICPT(",IBDFCODE="CPT ",DIC("S")="I $P($$CPT^ICPTCOD(Y),U,7)=1"
"RTN","IBDFUTL",45,0)
 .;
"RTN","IBDFUTL",46,0)
 .I $E($G(^IBE(357.6,IBDFINT,11)),7,9)="ICD" S DIC="^ICD9(",IBDFCODE="ICD-9 ",DIC("S")="I $P($$ICDDX^ICDCODE(Y),U,10)=1"
"RTN","IBDFUTL",47,0)
 .;
"RTN","IBDFUTL",48,0)
 .I $E($G(^IBE(357.6,IBDFINT,11)),7,9)="VST" S DIC="^IBE(357.69,",IBDFCODE="Type of Visit ",DIC("S")="I $P($$CPT^ICPTCOD(Y),U,7)=1"
"RTN","IBDFUTL",49,0)
 .;
"RTN","IBDFUTL",50,0)
 .I $G(DIC)]"" S VAUTVB="VAUTJ",VAUTNI=2,VAUTSTR=IBDFCODE_"code" S VAUTNALL=1 D FIRST^VAUTOMA
"RTN","IBDFUTL",51,0)
 ;
"RTN","IBDFUTL",52,0)
 I (Y<0)&$D(IBDF1) D  K VAUTP G QUIT
"RTN","IBDFUTL",53,0)
 .F IBI=0:0 S IBI=$O(VAUTP(IBI)) Q:IBI']""  S VAUTJ(IBI)=$G(VAUTP(IBI))
"RTN","IBDFUTL",54,0)
 I IBDFACT=1,Y<0,'$D(IBDF1) G EXIT
"RTN","IBDFUTL",55,0)
 ;
"RTN","IBDFUTL",56,0)
 I '$D(IBDF1) K XQORS,VALMEVL  D EN^VALM("IBDF UTIL PRIMARY SCREEN")
"RTN","IBDFUTL",57,0)
 I $D(IBDF1) D HDR,KILL,INIT S VALMBCK="R",VALMBG=1
"RTN","IBDFUTL",58,0)
 Q
"RTN","IBDFUTL",59,0)
 ;
"RTN","IBDFUTL",60,0)
HDR ; -- header code
"RTN","IBDFUTL",61,0)
 I IBDFACT=1 D
"RTN","IBDFUTL",62,0)
 .S VALMHDR(1)="This screen lists Active codes on Encounter Forms."
"RTN","IBDFUTL",63,0)
 I IBDFACT'=1 D
"RTN","IBDFUTL",64,0)
 .S VALMHDR(1)="This screen lists Inactive codes on  Encounter Forms."
"RTN","IBDFUTL",65,0)
 Q
"RTN","IBDFUTL",66,0)
 ;
"RTN","IBDFUTL",67,0)
 ;  -- Set up list
"RTN","IBDFUTL",68,0)
INIT D FULL^VALM1 S (IBDCNT,IBDCNT1,VALMCNT)=0
"RTN","IBDFUTL",69,0)
 K ^TMP("CPT",$J),^TMP("CPTIDX",$J) D KILL^VALM10()
"RTN","IBDFUTL",70,0)
 S IBDFCNT1=0 D @(IBDFDIS_"1^IBDFUTL1")
"RTN","IBDFUTL",71,0)
 I '$D(^TMP("CPT",$J)) D NUL
"RTN","IBDFUTL",72,0)
 Q
"RTN","IBDFUTL",73,0)
 ;
"RTN","IBDFUTL",74,0)
 ;  -- Ask for clinics one/many/all
"RTN","IBDFUTL",75,0)
CLIN S VAUTVB="VAUTC",DIC="^SC(",DIC("S")="I $P(^(0),U,3)=""C""",VAUTSTR="Clinic",VAUTNI=2 D FIRST^VAUTOMA K DIC S:Y=-1 IBDFL=1 Q:IBDFL
"RTN","IBDFUTL",76,0)
 Q
"RTN","IBDFUTL",77,0)
 ;
"RTN","IBDFUTL",78,0)
 ;  -- Ask for forms one/many/all
"RTN","IBDFUTL",79,0)
FORM S VAUTVB="VAUTF",DIC="^IBE(357,",VAUTSTR="Form",VAUTNI=2 D FIRST^VAUTOMA S:Y=-1 IBDFL=1 Q:IBDFL
"RTN","IBDFUTL",80,0)
 Q
"RTN","IBDFUTL",81,0)
 ;
"RTN","IBDFUTL",82,0)
 ;  -- Ask for clinic groups one/many/all
"RTN","IBDFUTL",83,0)
GROUP S VAUTVB="VAUTG",DIC="^IBD(357.99,",VAUTSTR="Clinic Group",VAUTNI=2 D FIRST^VAUTOMA S:Y=-1 IBDFL=1 Q:IBDFL
"RTN","IBDFUTL",84,0)
 Q
"RTN","IBDFUTL",85,0)
 ;
"RTN","IBDFUTL",86,0)
 ; -- Ask for divisions one/many/all
"RTN","IBDFUTL",87,0)
DIV S IBDFL=0 D DIVISION^VAUTOMA
"RTN","IBDFUTL",88,0)
 S:Y=-1 IBDFL=1 Q:IBDFL
"RTN","IBDFUTL",89,0)
 Q
"RTN","IBDFUTL",90,0)
 ;  -- Help for display choices
"RTN","IBDFUTL",91,0)
HELP1 W !!,"Choose a number or first initial :" F K=2:1:4 W !?15,$P(Z,"^",K)
"RTN","IBDFUTL",92,0)
 W ! Q
"RTN","IBDFUTL",93,0)
 ;
"RTN","IBDFUTL",94,0)
 ;  -- Listing of selections
"RTN","IBDFUTL",95,0)
ZSET1 S Z="^1 [C]LINICS (Individual)^2 [G]ROUPS (CLINIC)^3 [F]ORMS^" Q
"RTN","IBDFUTL",96,0)
 ;
"RTN","IBDFUTL",97,0)
 ;
"RTN","IBDFUTL",98,0)
QUIT ;  -- Kill variables and reset to last display if no change has been taken place.
"RTN","IBDFUTL",99,0)
 I $D(IBDF1) S IBDFDIS=IBDFDIS1,IBDFINT=IBDFINT1,IBDFACT=IBDFACT1
"RTN","IBDFUTL",100,0)
 I '$D(IBDF1) G EXIT
"RTN","IBDFUTL",101,0)
 D KILL,INIT K IBDFNCNG S VALMBCK="R",VALMBG=1
"RTN","IBDFUTL",102,0)
 Q
"RTN","IBDFUTL",103,0)
 ;
"RTN","IBDFUTL",104,0)
 ;
"RTN","IBDFUTL",105,0)
KILL ;  -- Kill extra array variables
"RTN","IBDFUTL",106,0)
 N IBDFXX
"RTN","IBDFUTL",107,0)
 S IBDFXX=$S(IBDFDIS="FORM":"VAUTF",IBDFDIS="GROUP":"VAUTG",1:"VAUTC")
"RTN","IBDFUTL",108,0)
 I IBDFXX="VAUTF" K VAUTG,VAUTC,^TMP("CLN",$J),^TMP("CLN1",$J),^TMP("GRP",$J),^TMP("GRP1",$J)
"RTN","IBDFUTL",109,0)
 I IBDFXX="VAUTC" K VAUTG,VAUTF,^TMP("FRM",$J),^TMP("FRM1",$J),^TMP("GRP1",$J)
"RTN","IBDFUTL",110,0)
 I IBDFXX="VAUTG" K VAUTC,VAUTF,^TMP("FRM",$J),^TMP("FRM1",$J),^TMP("CLN",$J),^TMP("CLN1",$J)
"RTN","IBDFUTL",111,0)
 Q
"RTN","IBDFUTL",112,0)
 ;
"RTN","IBDFUTL",113,0)
 ;
"RTN","IBDFUTL",114,0)
EXIT ;  -- Code executed at action exit
"RTN","IBDFUTL",115,0)
 K IBDFDIS,IBDFINT,VAUTC,VAUTF,VAUTG,VAUTJ,VAUTP,IBDFINT1,IBDFDIS1,^TMP("CLN",$J),IBDFCODE,IBI,IBDFACT1
"RTN","IBDFUTL",116,0)
EXIT1 K DIC,IBDBLK,IBDCLN,IBDCLNM,IBDCNODE,IBDCNT,IBDCNT1,IBDF,IBDFBK,IBDFCIFN,IBDFCLIN,IBDFL,IBDFLG,IBDFN,IBDFNAME,IBDFNM,IBDFNODE,IBDFORM1,IBDFRM,IBDFSEL,IBDFSRT,IBDFTMP,IBDFVAL
"RTN","IBDFUTL",117,0)
 K IBDFX,IBDORM,IBDVAL,IBDVAL1,IBDFCNT1,Z,IBDFRNM,IBDFX1,IBDFX2,IBDFX3
"RTN","IBDFUTL",118,0)
 K IBCLN,IBDFCLN,IBDFCLNM,IBDFDIV,IBDFGIFN,IBDFGN,IBDFGNM,IBDIV,IBDNAM,IBDNAME,IEN,^TMP("IBDF",$J),^TMP("UTIL",$J),^TMP("CPT",$J),^TMP("CPTIDX",$J),DIVISION,IBDF,IBDFACT,VAUTNALL Q
"RTN","IBDFUTL",119,0)
 ;
"RTN","IBDFUTL",120,0)
 ;
"RTN","IBDFUTL",121,0)
HLP ; -- help code
"RTN","IBDFUTL",122,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFUTL",123,0)
 Q
"RTN","IBDFUTL",124,0)
 ;
"RTN","IBDFUTL",125,0)
 ;
"RTN","IBDFUTL",126,0)
EXP ; -- expand code
"RTN","IBDFUTL",127,0)
 Q
"RTN","IBDFUTL",128,0)
NUL ; -- NULL MESSAGE
"RTN","IBDFUTL",129,0)
 S ^TMP("CPT",$J,1,0)=" ",^TMP("CPT",$J,2,0)="There are no "_$S(IBDFACT=1:"active",1:"inactive")_" codes on any forms.",^TMP("CPTIDX",$J,1)=1,^TMP("CPTIDX",$J,2)=2
"RTN","IBDFUTL",130,0)
 Q
"RTN","IBDFUTL1")
0^11^B52493604
"RTN","IBDFUTL1",1,0)
IBDFUTL1 ;ALB/MAF - Maintenance Utility cont. - 4 20 95
"RTN","IBDFUTL1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**32,23,51**;APR 24, 1997
"RTN","IBDFUTL1",3,0)
 ;
"RTN","IBDFUTL1",4,0)
 ;
"RTN","IBDFUTL1",5,0)
SETSTR(S,V,X,L) ; -- insert text(S) into variable(V)
"RTN","IBDFUTL1",6,0)
 ;    S := string
"RTN","IBDFUTL1",7,0)
 ;    V := destination
"RTN","IBDFUTL1",8,0)
 ;    X := @ col X
"RTN","IBDFUTL1",9,0)
 ;    L := # of chars
"RTN","IBDFUTL1",10,0)
 ;
"RTN","IBDFUTL1",11,0)
 Q $E(V_$J("",X-1),1,X-1)_$E(S_$J("",L),1,L)_$E(V,X+L,999)
"RTN","IBDFUTL1",12,0)
 ;
"RTN","IBDFUTL1",13,0)
 ;
"RTN","IBDFUTL1",14,0)
SETARR ;  -- Set up Listman array
"RTN","IBDFUTL1",15,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFUTL1",16,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL1",17,0)
 S X=""
"RTN","IBDFUTL1",18,0)
 S IBDFVAL=$J(IBDCNT1_")",5)
"RTN","IBDFUTL1",19,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,1,5)
"RTN","IBDFUTL1",20,0)
 S IBDFVAL=IBDFX
"RTN","IBDFUTL1",21,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,7,8)
"RTN","IBDFUTL1",22,0)
 S IBDFVAL=$P(IBDFTMP,"^",3)
"RTN","IBDFUTL1",23,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,17,15)
"RTN","IBDFUTL1",24,0)
 S IBDFVAL=$P(^IBE(357.1,IBDFBLK,0),"^",1)
"RTN","IBDFUTL1",25,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,34,14)
"RTN","IBDFUTL1",26,0)
 S IBDFVAL=$P(^IBE(357,IBDFORM1,0),"^",1)
"RTN","IBDFUTL1",27,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,50,14)
"RTN","IBDFUTL1",28,0)
 I $D(VAUTC)!($D(VAUTG)) S IBDFVAL=$P(IBDFTMP,"^",6) S X=$$SETSTR^VALM1(IBDFVAL,X,66,14)
"RTN","IBDFUTL1",29,0)
 ;
"RTN","IBDFUTL1",30,0)
 ;
"RTN","IBDFUTL1",31,0)
TMP ; -- Set up TMP Array
"RTN","IBDFUTL1",32,0)
 S ^TMP("CPT",$J,IBDCNT,0)=$$LOWER^VALM1(X),^TMP("CPT",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFUTL1",33,0)
 S ^TMP("CPTIDX",$J,IBDCNT1)=VALMCNT_"^"_IBDFX_"^"_$P(IBDFTMP,"^",4)_"^"_$P(IBDFTMP,"^",5)_"^"_$P(IBDFTMP,"^",1)_"^"_$P(IBDFTMP,"^",2)
"RTN","IBDFUTL1",34,0)
 Q
"RTN","IBDFUTL1",35,0)
SETARR1 ;  -- Set up Listman array
"RTN","IBDFUTL1",36,0)
 N IBDPRIM,IBDSELP
"RTN","IBDFUTL1",37,0)
 S IBDSELP=$P($G(IBDFTMP),"^",5)
"RTN","IBDFUTL1",38,0)
 Q:IBDSELP']""
"RTN","IBDFUTL1",39,0)
 S IBDPRIM=$P($G(^IBE(357.3,IBDSELP,0)),"^")
"RTN","IBDFUTL1",40,0)
 I IBDPRIM=IBDFX Q
"RTN","IBDFUTL1",41,0)
 ;S IBDCNT1=IBDCNT1+1
"RTN","IBDFUTL1",42,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL1",43,0)
 S X=""
"RTN","IBDFUTL1",44,0)
 S IBDFVAL="Primary Diagnosis: "_IBDPRIM
"RTN","IBDFUTL1",45,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,17,40)
"RTN","IBDFUTL1",46,0)
 ;
"RTN","IBDFUTL1",47,0)
 ;
"RTN","IBDFUTL1",48,0)
TMP1 ; -- Set up TMP Array
"RTN","IBDFUTL1",49,0)
 S ^TMP("CPT",$J,IBDCNT,0)=$$LOWER^VALM1(X),^TMP("CPT",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFUTL1",50,0)
 Q
"RTN","IBDFUTL1",51,0)
 ;
"RTN","IBDFUTL1",52,0)
 ;
"RTN","IBDFUTL1",53,0)
SET ;  -- Loop thru to see if codes are valid
"RTN","IBDFUTL1",54,0)
 F IBDFBLK=0:0 S IBDFBLK=$O(^IBE(357.1,"C",IBDFORM,IBDFBLK)) Q:'IBDFBLK  D
"RTN","IBDFUTL1",55,0)
 .F IBDFLST=0:0 S IBDFLST=$O(^IBE(357.2,"C",IBDFBLK,IBDFLST)) Q:'IBDFLST  S IBDFNODE=$G(^IBE(357.2,IBDFLST,0)) I $P(IBDFNODE,"^",11)=IBDFINT D
"RTN","IBDFUTL1",56,0)
 ..F IBDFSEL=0:0 S IBDFSEL=$O(^IBE(357.3,"C",IBDFLST,IBDFSEL)) Q:'IBDFSEL  S IBDFX=$G(^IBE(357.3,IBDFSEL,0)) I $P(IBDFX,"^",2)']"" D
"RTN","IBDFUTL1",57,0)
 ...S IBDFX1=$P(IBDFX,"^",1),IBDFX2=$P($G(^IBE(357.3,IBDFSEL,2)),"^",3),IBDFX3=$P($G(^IBE(357.3,IBDFSEL,2)),"^",4)
"RTN","IBDFUTL1",58,0)
 ...F IBI=IBDFX1,IBDFX2,IBDFX3 I IBI]"" D
"RTN","IBDFUTL1",59,0)
 ....I IBDFACT=1 D
"RTN","IBDFUTL1",60,0)
 .....S (X,IBDFX)=IBI
"RTN","IBDFUTL1",61,0)
 .....X $G(^IBE(357.6,IBDFINT,11))
"RTN","IBDFUTL1",62,0)
 .....Q:'$D(X)
"RTN","IBDFUTL1",63,0)
 .....;;----change to api cpt;dhh
"RTN","IBDFUTL1",64,0)
 .....I $G(IBDFCODE)="CPT " N IBY,XX D
"RTN","IBDFUTL1",65,0)
 ......S XX=$$CPT^ICPTCOD(X)
"RTN","IBDFUTL1",66,0)
 ......;;S IBY=$S(+XX=-1:"",1:$P(XX,"^",3))
"RTN","IBDFUTL1",67,0)
 ......S IBY=$S($P(XX,U,7)'=1:"",1:$P(XX,"^",3))
"RTN","IBDFUTL1",68,0)
 .....;;I $G(IBDFCODE)="ICD-9 " N IBY S IBY=$P($G(^ICD9(X,0)),"^",3)
"RTN","IBDFUTL1",69,0)
 .....I $G(IBDFCODE)="ICD-9 " N IBY S IBY=$P($$ICDDX^ICDCODE(X),U,4)
"RTN","IBDFUTL1",70,0)
 .....I $G(IBDFCODE)="Type of Visit " N IBY S IBY=$P($G(^IBE(357.69,X,0)),"^",2)
"RTN","IBDFUTL1",71,0)
 .....Q:'$D(VAUTJ(X))
"RTN","IBDFUTL1",72,0)
 .....S ^TMP("UTIL",$J,IBDFNAME,IBDFX,$P(^IBE(357,IBDFORM,0),"^",1),$P(^IBE(357.1,IBDFBLK,0),"^",1),IBDFSEL)=IBDFORM_"^"_IBDFBLK_"^"_$S(IBY]"":IBY,1:"INVALID")_"^"_IBDFLST_"^"_IBDFSEL_"^"_$S($D(VAUTC):IBDFNAME,$D(VAUTG):IBDFCLNM,1:"")
"RTN","IBDFUTL1",73,0)
 ....I IBDFACT=2 D
"RTN","IBDFUTL1",74,0)
 .....S (X,IBDFX)=IBI
"RTN","IBDFUTL1",75,0)
 .....X $G(^IBE(357.6,IBDFINT,11))
"RTN","IBDFUTL1",76,0)
 .....I '$D(X) S ^TMP("UTIL",$J,IBDFNAME,IBDFX,$P(^IBE(357,IBDFORM,0),"^",1),$P(^IBE(357.1,IBDFBLK,0),"^",1),IBDFSEL)=IBDFORM_"^"_IBDFBLK_"^"_$S(Y]"":Y,1:"INVALID")_"^"_IBDFLST_"^"_IBDFSEL_"^"_$S($D(VAUTC):IBDFNAME,$D(VAUTG):IBDFCLNM,1:"")
"RTN","IBDFUTL1",77,0)
 Q
"RTN","IBDFUTL1",78,0)
 ;
"RTN","IBDFUTL1",79,0)
 ;
"RTN","IBDFUTL1",80,0)
 ;  -- Set up alphabetical listing
"RTN","IBDFUTL1",81,0)
SET1 S (IBDFORM1,IBDFBLK,IBDFLG,IBDFX,IBDFNAME,IBDORM,IBDBLK)=0
"RTN","IBDFUTL1",82,0)
 F IBDFNM=0:0 S IBDFNAME=$O(^TMP("UTIL",$J,IBDFNAME)) Q:IBDFNAME']""  S IBDFX="" F  S IBDFX=$O(^TMP("UTIL",$J,IBDFNAME,IBDFX)) D:(IBDFX="")&($D(VAUTF)) CLINICS^IBDFUTL2 Q:IBDFX=""  D
"RTN","IBDFUTL1",83,0)
 .F IBDFRM=0:0 S IBDORM=$O(^TMP("UTIL",$J,IBDFNAME,IBDFX,IBDORM)) Q:IBDORM']""  F IBDFBK=0:0 S IBDBLK=$O(^TMP("UTIL",$J,IBDFNAME,IBDFX,IBDORM,IBDBLK)) Q:IBDBLK']""  D
"RTN","IBDFUTL1",84,0)
 ..F  S IBDFSEL=$O(^TMP("UTIL",$J,IBDFNAME,IBDFX,IBDORM,IBDBLK,IBDFSEL)) Q:IBDFSEL']""  D
"RTN","IBDFUTL1",85,0)
 ...S IBDFTMP=^TMP("UTIL",$J,IBDFNAME,IBDFX,IBDORM,IBDBLK,IBDFSEL),IBDFORM1=$P(IBDFTMP,"^",1),IBDFBLK=$P(IBDFTMP,"^",2) D:'$D(IBDF(IBDFNAME)) HEADER^IBDFUTL2 D SETARR D:IBDBLK="DIAGNOSIS" SETARR1
"RTN","IBDFUTL1",86,0)
 Q
"RTN","IBDFUTL1",87,0)
 ;
"RTN","IBDFUTL1",88,0)
 ;
"RTN","IBDFUTL1",89,0)
CLIN1 ;  -- Sort Display by clinic
"RTN","IBDFUTL1",90,0)
 N IBDFBLK,IBDFLST,IBDFORM,VAUTF
"RTN","IBDFUTL1",91,0)
 I VAUTC=1 F X=0:0 S X=$O(^SC(X)) Q:'X  I $D(^SC(X,0)) S ^TMP("CLN",$J,X)=$P(^SC(X,0),"^",1)
"RTN","IBDFUTL1",92,0)
 I VAUTC=0 K ^TMP("CLN",$J) F IBDFCLIN=0:0 S IBDFCLIN=$O(VAUTC(IBDFCLIN)) Q:'IBDFCLIN  S X=$G(VAUTC(IBDFCLIN)) S ^TMP("CLN",$J,IBDFCLIN)=X
"RTN","IBDFUTL1",93,0)
 I '$D(IBDFNCNG) K ^TMP("CLN1",$J)
"RTN","IBDFUTL1",94,0)
 F IBDFCLIN=0:0 S IBDFCLIN=$O(^TMP("CLN",$J,IBDFCLIN)) Q:'IBDFCLIN  S X=$G(^TMP("CLN",$J,IBDFCLIN)) S ^TMP("CLN1",$J,X)=IBDFCLIN
"RTN","IBDFUTL1",95,0)
 S IBDCLNM=0 F IBDCLN=0:0 S IBDCLNM=$O(^TMP("CLN1",$J,IBDCLNM)) Q:IBDCLNM']""  S IBDFCLIN=^TMP("CLN1",$J,IBDCLNM) S IBDFCIFN=$O(^SD(409.95,"B",IBDFCLIN,0)) S IBDCNODE=$G(^SD(409.95,+IBDFCIFN,0)),IBDFNAME=IBDCLNM I $D(IBDCNODE) D
"RTN","IBDFUTL1",96,0)
 .F IBDFN=2:1:9 S IBDFORM=$P(IBDCNODE,"^",IBDFN) I IBDFORM D SET
"RTN","IBDFUTL1",97,0)
 D SET1 Q
"RTN","IBDFUTL1",98,0)
 ;
"RTN","IBDFUTL1",99,0)
 ;
"RTN","IBDFUTL1",100,0)
FORM1 ;  -- Sort Display by form
"RTN","IBDFUTL1",101,0)
 N IBDFBLK,IBDFLST,IBDFORM
"RTN","IBDFUTL1",102,0)
 I VAUTF=1 S IBDFRNM=0 F IBDFRM=0:0 S IBDFRNM=$O(^IBE(357,"B",IBDFRNM)) Q:IBDFRNM']""  F IBDFORM=0:0 S IBDFORM=$O(^IBE(357,"B",IBDFRNM,IBDFORM)) Q:'IBDFORM  S IBDFNAME=IBDFRNM D SET
"RTN","IBDFUTL1",103,0)
 I '$D(IBDFNCNG) K ^TMP("FRM1",$J)
"RTN","IBDFUTL1",104,0)
 I VAUTF=0 F IBDFORM=0:0 S IBDFORM=$O(VAUTF(IBDFORM)) Q:'IBDFORM  S X=$G(VAUTF(IBDFORM)) S ^TMP("FRM1",$J,X)=IBDFORM
"RTN","IBDFUTL1",105,0)
 I VAUTF=0 S IBDFRNM=0 F IBDFRM=0:0 S IBDFRNM=$O(^TMP("FRM1",$J,IBDFRNM)) Q:IBDFRNM']""  S IBDFORM=^TMP("FRM1",$J,IBDFRNM),IBDFNAME=IBDFRNM D SET
"RTN","IBDFUTL1",106,0)
 D SET1
"RTN","IBDFUTL1",107,0)
 Q
"RTN","IBDFUTL1",108,0)
 ;
"RTN","IBDFUTL1",109,0)
 ;
"RTN","IBDFUTL1",110,0)
GROUP1 ;  -- Sort Display by clinic group
"RTN","IBDFUTL1",111,0)
 N IBDFBLK,IBDFLST,IBDFORM,VAUTF
"RTN","IBDFUTL1",112,0)
 I VAUTG=1 S IBDFGNM=0 F IBDFGN=0:0 S IBDFGNM=$O(^IBD(357.99,"B",IBDFGNM)) Q:IBDFGNM']""  F IBDFGIFN=0:0 S IBDFGIFN=$O(^IBD(357.99,"B",IBDFGNM,IBDFGIFN)) Q:'IBDFGIFN  S ^TMP("GRP1",$J,IBDFGNM)=IBDFGIFN
"RTN","IBDFUTL1",113,0)
 I VAUTG=0,'$D(IBDFNCNG) K ^TMP("GRP1",$J)
"RTN","IBDFUTL1",114,0)
 I VAUTG=0 F IBDFGIFN=0:0 S IBDFGIFN=$O(VAUTG(IBDFGIFN)) Q:'IBDFGIFN  S ^TMP("GRP1",$J,VAUTG(IBDFGIFN))=IBDFGIFN
"RTN","IBDFUTL1",115,0)
 S IBDFGNM=0 F IBDFGN=0:0 S IBDFGNM=$O(^TMP("GRP1",$J,IBDFGNM)) Q:IBDFGNM']""  S IBDFGIFN=^TMP("GRP1",$J,IBDFGNM) D
"RTN","IBDFUTL1",116,0)
 .S IEN=0 F  S IEN=$O(^IBD(357.99,IBDFGIFN,10,IEN)) Q:'IEN  S IBCLN=+$G(^IBD(357.99,IBDFGIFN,10,IEN,0)) S:$D(^SC(IBCLN,0)) ^TMP("IBDF",$J,"C",IBDFGNM,$P(^SC(IBCLN,0),"^",1))=IBCLN
"RTN","IBDFUTL1",117,0)
 .S IEN=0 F  S IEN=$O(^IBD(357.99,IBDFGIFN,11,IEN)) Q:'IEN  S IBDIV=+$G(^IBD(357.99,IBDFGIFN,11,IEN,0)) S:IBDIV ^TMP("IBDF",$J,"D",IBDFGNM,IBDIV)=""
"RTN","IBDFUTL1",118,0)
 D:$D(^TMP("IBDF",$J,"D")) ENDV^IBDFUTL2
"RTN","IBDFUTL1",119,0)
 S IBDFGNM=0 F IBDFGN=0:0 S IBDFGNM=$O(^TMP("IBDF",$J,"C",IBDFGNM)) Q:IBDFGNM']""  S IBDFCLNM=0 F IBDFCLN=0:0 S IBDFCLNM=$O(^TMP("IBDF",$J,"C",IBDFGNM,IBDFCLNM)) Q:IBDFCLNM']""  D
"RTN","IBDFUTL1",120,0)
 .S IBDFCLIN=$G(^TMP("IBDF",$J,"C",IBDFGNM,IBDFCLNM)),IBDFCIFN=$O(^SD(409.95,"B",IBDFCLIN,0)) S IBDCNODE=$G(^SD(409.95,+IBDFCIFN,0)) I $D(IBDCNODE) S IBDFNAME=IBDFGNM F IBDFN=2:1:9 S IBDFORM=$P(IBDCNODE,"^",IBDFN) I IBDFORM D SET
"RTN","IBDFUTL1",121,0)
 D SET1 Q
"VER")
8.0^22.0
"^DD",357.69,357.69,.01,0)
CODE^R*P81'X^ICPT(^0;1^S DIC("S")="I $P($$CPT^ICPTCOD(Y),U,7)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X S:$D(X) DINUM=X
"^DD",357.69,357.69,.01,1,0)
^.1
"^DD",357.69,357.69,.01,1,1,0)
357.69^B
"^DD",357.69,357.69,.01,1,1,1)
S ^IBE(357.69,"B",$E(X,1,30),DA)=""
"^DD",357.69,357.69,.01,1,1,2)
K ^IBE(357.69,"B",$E(X,1,30),DA)
"^DD",357.69,357.69,.01,3)
Enter the name of the code
"^DD",357.69,357.69,.01,12)
Only Active Evaluation and Management CPT codes between 99200 and 99499 are selectable.
"^DD",357.69,357.69,.01,12.1)
S DIC("S")="I $P($$CPT^ICPTCOD(Y),U,7)=1"
"^DD",357.69,357.69,.01,21,0)
^.001^2^2^3030514^^^^
"^DD",357.69,357.69,.01,21,1,0)
Enter the Type of Visit CPT code.  These currently all begin with 992.
"^DD",357.69,357.69,.01,21,2,0)
This is sometimes refered to as the Level of Care CPT.
"^DD",357.69,357.69,.01,"DT")
3030519
**INSTALL NAME**
DG*5.3*511
"BLD",3005,0)
DG*5.3*511^REGISTRATION^0^3030916^y
"BLD",3005,1,0)
^^2^2^3030523^
"BLD",3005,1,1,0)
Please see the National Patch Module for details
"BLD",3005,1,2,0)
of the enhancements included in this patch.
"BLD",3005,4,0)
^9.64PA^^
"BLD",3005,"ABPKG")
n
"BLD",3005,"KRN",0)
^9.67PA^8989.52^19
"BLD",3005,"KRN",.4,0)
.4
"BLD",3005,"KRN",.401,0)
.401
"BLD",3005,"KRN",.402,0)
.402
"BLD",3005,"KRN",.403,0)
.403
"BLD",3005,"KRN",.5,0)
.5
"BLD",3005,"KRN",.84,0)
.84
"BLD",3005,"KRN",3.6,0)
3.6
"BLD",3005,"KRN",3.8,0)
3.8
"BLD",3005,"KRN",9.2,0)
9.2
"BLD",3005,"KRN",9.8,0)
9.8
"BLD",3005,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",3005,"KRN",9.8,"NM",1,0)
VAFHLDG1^^0^B30278152
"BLD",3005,"KRN",9.8,"NM","B","VAFHLDG1",1)

"BLD",3005,"KRN",19,0)
19
"BLD",3005,"KRN",19,"NM",0)
^9.68A^^
"BLD",3005,"KRN",19.1,0)
19.1
"BLD",3005,"KRN",101,0)
101
"BLD",3005,"KRN",409.61,0)
409.61
"BLD",3005,"KRN",771,0)
771
"BLD",3005,"KRN",870,0)
870
"BLD",3005,"KRN",8989.51,0)
8989.51
"BLD",3005,"KRN",8989.52,0)
8989.52
"BLD",3005,"KRN",8994,0)
8994
"BLD",3005,"KRN","B",.4,.4)

"BLD",3005,"KRN","B",.401,.401)

"BLD",3005,"KRN","B",.402,.402)

"BLD",3005,"KRN","B",.403,.403)

"BLD",3005,"KRN","B",.5,.5)

"BLD",3005,"KRN","B",.84,.84)

"BLD",3005,"KRN","B",3.6,3.6)

"BLD",3005,"KRN","B",3.8,3.8)

"BLD",3005,"KRN","B",9.2,9.2)

"BLD",3005,"KRN","B",9.8,9.8)

"BLD",3005,"KRN","B",19,19)

"BLD",3005,"KRN","B",19.1,19.1)

"BLD",3005,"KRN","B",101,101)

"BLD",3005,"KRN","B",409.61,409.61)

"BLD",3005,"KRN","B",771,771)

"BLD",3005,"KRN","B",870,870)

"BLD",3005,"KRN","B",8989.51,8989.51)

"BLD",3005,"KRN","B",8989.52,8989.52)

"BLD",3005,"KRN","B",8994,8994)

"BLD",3005,"QUES",0)
^9.62^^
"BLD",3005,"REQB",0)
^9.611^3^3
"BLD",3005,"REQB",1,0)
DG*5.3*190^2
"BLD",3005,"REQB",2,0)
ICPT*6.0*14^2
"BLD",3005,"REQB",3,0)
ICD*18.0*6^2
"BLD",3005,"REQB","B","DG*5.3*190",1)

"BLD",3005,"REQB","B","ICD*18.0*6",3)

"BLD",3005,"REQB","B","ICPT*6.0*14",2)

"MBREQ")
1
"PKG",114,-1)
1^1
"PKG",114,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",114,20,0)
^9.402P^^
"PKG",114,22,0)
^9.49I^1^1
"PKG",114,22,1,0)
5.3^2930813^2930821
"PKG",114,22,1,"PAH",1,0)
511^3030916
"PKG",114,22,1,"PAH",1,1,0)
^^2^2^3030916
"PKG",114,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for details
"PKG",114,22,1,"PAH",1,1,2,0)
of the enhancements included in this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","VAFHLDG1")
0^1^B30278152
"RTN","VAFHLDG1",1,0)
VAFHLDG1 ;ALB/CM/ESD HL7 DG1 SEGMENT BUILDING ;05/01/95
"RTN","VAFHLDG1",2,0)
 ;;5.3;Registration;**94,151,190,511**;Aug 13, 1993
"RTN","VAFHLDG1",3,0)
 ;Routine currently being changed by GRR/EDS
"RTN","VAFHLDG1",4,0)
 ;IN entry is being added
"RTN","VAFHLDG1",5,0)
 ;
"RTN","VAFHLDG1",6,0)
 ;This routine will build an HL7 DG1 segment for an inpatient or
"RTN","VAFHLDG1",7,0)
 ;outpatient event depending on the entry point used.
"RTN","VAFHLDG1",8,0)
 ;Use IN for inpatient
"RTN","VAFHLDG1",9,0)
 ;Use OUT for outpatient
"RTN","VAFHLDG1",10,0)
 ;
"RTN","VAFHLDG1",11,0)
IN(DFN,VAFHMIEN,VAFSTR,VAOUT,VAFHMDT) ;
"RTN","VAFHLDG1",12,0)
 ;Input parameters
"RTN","VAFHLDG1",13,0)
 ;DFN - Patient's Internal Entry Number
"RTN","VAFHLDG1",14,0)
 ;VAFHMIEN - Internal Entry Number of Movement
"RTN","VAFHLDG1",15,0)
 ;VAFSTR - Sequence numbers of segment to include
"RTN","VAFHLDG1",16,0)
 ;VAOUT - Variable name where output segments should be saved
"RTN","VAFHLDG1",17,0)
 ;
"RTN","VAFHLDG1",18,0)
 K @VAOUT ;Insure output array is empty
"RTN","VAFHLDG1",19,0)
 Q:VAFHMIEN=""
"RTN","VAFHLDG1",20,0)
 N VAFHLREC,VAFHAIEN,VAFHICD
"RTN","VAFHLDG1",21,0)
 S $P(VAFHLREC,HL("FS"))="DG1" ;Set the segment identifier
"RTN","VAFHLDG1",22,0)
 S VAFHMDT=$$GET1^DIQ(405,VAFHMIEN,".01","I") ;Movement Date/Time
"RTN","VAFHLDG1",23,0)
 S VAFHTT=$$GET1^DIQ(405,VAFHMIEN,".02","I") ;Get the movement transaction type (admit, transfer, disharge)
"RTN","VAFHLDG1",24,0)
 I VAFHTT=1 S VAFHAIEN=VAFHMIEN ;If 'admit' movement capture ien
"RTN","VAFHLDG1",25,0)
 I VAFHTT'=1 S VAFHAIEN=$$GET1^DIQ(405,VAFHMIEN,".14","I") ;If not 'admit' movement, get ien of admission movement
"RTN","VAFHLDG1",26,0)
 Q:VAFHAIEN=""  ;Quit if no admission movement
"RTN","VAFHLDG1",27,0)
 S VAFHADT=$$GET1^DIQ(405,VAFHAIEN,".01","I") ;Get Admission date/time
"RTN","VAFHLDG1",28,0)
 S VAFHPTF=$O(^DGPT("AAD",DFN,VAFHADT,"")) Q:VAFHPTF=""  ;Get pointer to ptf record and quit if none exists
"RTN","VAFHLDG1",29,0)
 S VACNT=0 ;Initialize counter
"RTN","VAFHLDG1",30,0)
 ;I VAFHTT'=3 D  ;If not a 'discharge' type, get Movement ICD codes and descriptions
"RTN","VAFHLDG1",31,0)
 ;.S DGLMR=$P($G(^DGPT(VAFHPTF,"M",0)),"^",3) ;Get Last movement ien
"RTN","VAFHLDG1",32,0)
 ;.Q:DGLMR=""  ;Quit if no movement entry
"RTN","VAFHLDG1",33,0)
 ;.S DIQ="DGAM",DIQ(0)="I",DIC=45,DR=50,DA=VAFHPTF,DR(45.02)="5:15",DA(45.02)=DGLMR D EN^DIQ1 ;Retrieve the movement ICD fields
"RTN","VAFHLDG1",34,0)
 ;.I $D(DGAM(45.02,DGLMR)) D  ;If ICD data exists
"RTN","VAFHLDG1",35,0)
 ;..F VAFLD=5,6,7,8,9,11,12,13,14,15 I $G(DGAM(45.02,DGLMR,VAFLD,"I"))]"" S VACNT=VACNT+1,VAFHICD(VACNT)=DGAM(45.02,DGLMR,VAFLD,"I") ;Check each ICD field for data and store in array if data exists
"RTN","VAFHLDG1",36,0)
 ;I VAFHTT=3 D  ;If movement 'discharge' type, get ICD codes and descriptions from discharge data
"RTN","VAFHLDG1",37,0)
 F VAFLD=79,79.16,79.17,79.18,79.19,79.201,79.21,79.22,79.23,79.24 S VAFHICD=$$GET1^DIQ(45,VAFHPTF,VAFLD,"I") I VAFHICD]"" S VACNT=VACNT+1,VAFHICD(VACNT)=VAFHICD ;Check each ICD field for data and store in array if data exists
"RTN","VAFHLDG1",38,0)
 I $O(VAFHICD(0))="" Q  ;Quit if no data in ICD array
"RTN","VAFHLDG1",39,0)
 S VACNT=0 F  S VACNT=$O(VAFHICD(VACNT)) Q:VACNT=""  D  ;If array contains ICD data
"RTN","VAFHLDG1",40,0)
 .S $P(VAFHLREC,HL("FS"))="DG1" ;Set segment type to DG1
"RTN","VAFHLDG1",41,0)
 .S $P(VAFHLREC,HL("FS"),2)=VACNT ;Set Segment Set ID to next sequential number
"RTN","VAFHLDG1",42,0)
 .I VAFSTR[",2," S $P(VAFHLREC,HL("FS"),3)="I9" ;Set 'Diagnosis Coding Method' to reflect ICD9
"RTN","VAFHLDG1",43,0)
 .I VAFSTR[",3," S $P(VAFHLREC,HL("FS"),4)=$$GET1^DIQ(80,VAFHICD(VACNT),".01","I")_$E(HL("ECH"))_$$GET1^DIQ(80,VAFHICD(VACNT),"3","I") ;Icd Code and Description
"RTN","VAFHLDG1",44,0)
 .I VAFSTR[",5," S $P(VAFHLREC,HL("FS"),6)=$$HLDATE^HLFNC(VAFHMDT) ;Diagnosis Date/Time set to Movement Date/Time
"RTN","VAFHLDG1",45,0)
 .S @VAOUT@(VACNT,0)=VAFHLREC ;Set next node of ICD output array to the newly created segment
"RTN","VAFHLDG1",46,0)
 Q
"RTN","VAFHLDG1",47,0)
 ;
"RTN","VAFHLDG1",48,0)
 ;
"RTN","VAFHLDG1",49,0)
OUT(DFN,EVT,EVDTS,VPTR,STRP,NUMP) ;
"RTN","VAFHLDG1",50,0)
 ;DFN - Patient File
"RTN","VAFHLDG1",51,0)
 ;EVT - event number from pivot file
"RTN","VAFHLDG1",52,0)
 ;EVDTS - event date/time FileMan
"RTN","VAFHLDG1",53,0)
 ;VPTR - variable pointer
"RTN","VAFHLDG1",54,0)
 ;STRP - string of fields
"RTN","VAFHLDG1",55,0)
 ;(if null - required fields, if "A" - supported
"RTN","VAFHLDG1",56,0)
 ;fields, or string of fields seperated by commas")
"RTN","VAFHLDG1",57,0)
 ;NUMP - ID # (optional)
"RTN","VAFHLDG1",58,0)
 ;
"RTN","VAFHLDG1",59,0)
 N ERR
"RTN","VAFHLDG1",60,0)
 I '$D(NUMP) S NUMP=1
"RTN","VAFHLDG1",61,0)
 S ERR=$$ODG1^VAFHCDG($G(DFN),$G(EVT),$G(EVDTS),$G(VPTR),$G(STRP),NUMP)
"RTN","VAFHLDG1",62,0)
 Q ERR
"RTN","VAFHLDG1",63,0)
 ;
"RTN","VAFHLDG1",64,0)
 ;
"RTN","VAFHLDG1",65,0)
EN(VAFENC,VAFSTR,VAFHLQ,VAFHLFS,VAFARRY) ; Entry point for Ambulatory Care Database Project
"RTN","VAFHLDG1",66,0)
 ; - Entry point to return the HL7 DG1 segment
"RTN","VAFHLDG1",67,0)
 ;
"RTN","VAFHLDG1",68,0)
 ;   This function will create VA-specific DG1 segment(s) for a 
"RTN","VAFHLDG1",69,0)
 ;   given outpatient encounter.  The DG1 segment is designed to transfer
"RTN","VAFHLDG1",70,0)
 ;   generic information about an outpatient diagnosis or diagnoses.
"RTN","VAFHLDG1",71,0)
 ;
"RTN","VAFHLDG1",72,0)
 ;  Input:   VAFENC - IEN of the Outpatient Encounter (#409.68) file
"RTN","VAFHLDG1",73,0)
 ;           VAFSTR - String of fields requested separated by commas
"RTN","VAFHLDG1",74,0)
 ;           VAFHLQ - Optional HL7 null variable. If not there, use 
"RTN","VAFHLDG1",75,0)
 ;                    default HL7 variable
"RTN","VAFHLDG1",76,0)
 ;          VAFHLFS - Optional HL7 field separator. If not there, use 
"RTN","VAFHLDG1",77,0)
 ;                    default HL7 variable
"RTN","VAFHLDG1",78,0)
 ;          VAFARRY - Optional user-supplied array name to hold the HL7 DG1 segments
"RTN","VAFHLDG1",79,0)
 ;
"RTN","VAFHLDG1",80,0)
 ; Output:  Array of HL7 DG1 segments
"RTN","VAFHLDG1",81,0)
 ;
"RTN","VAFHLDG1",82,0)
 ;
"RTN","VAFHLDG1",83,0)
 N I,VAFDICDE,VAFIDX,VAFNODE,VAFDNODE,VAFY,VAXY,X
"RTN","VAFHLDG1",84,0)
 S VAFARRY=$G(VAFARRY)
"RTN","VAFHLDG1",85,0)
 ;
"RTN","VAFHLDG1",86,0)
 ; - If VAFARRY not defined, use ^TMP("VAFHL",$J,"DIAGNOSIS")
"RTN","VAFHLDG1",87,0)
 S:(VAFARRY="") VAFARRY="^TMP(""VAFHL"",$J,""DIAGNOSIS"")"
"RTN","VAFHLDG1",88,0)
 ;
"RTN","VAFHLDG1",89,0)
 ; - If VAFHLQ or VAFHLFS aren't passed in, use default HL7 variables
"RTN","VAFHLDG1",90,0)
 S VAFHLQ=$S($D(VAFHLQ):VAFHLQ,1:$G(HLQ)),VAFHLFS=$S($D(VAFHLFS):VAFHLFS,1:$G(HLFS))
"RTN","VAFHLDG1",91,0)
 I '$G(VAFENC)!($G(VAFSTR)']"") S @VAFARRY@(1,0)="DG1"_VAFHLFS_1 G ENQ
"RTN","VAFHLDG1",92,0)
 S VAFIDX=0,VAFSTR=","_VAFSTR_","
"RTN","VAFHLDG1",93,0)
 ;
"RTN","VAFHLDG1",94,0)
 ; - Get all outpatient diagnoses for encounter
"RTN","VAFHLDG1",95,0)
 D GETDX^SDOE(VAFENC,"VAXY")
"RTN","VAFHLDG1",96,0)
 ;
"RTN","VAFHLDG1",97,0)
 ; - Set diagnosis array to 0 if no outpatient diagnosis for encounter
"RTN","VAFHLDG1",98,0)
 I '$G(VAXY) S VAXY(1)=0
"RTN","VAFHLDG1",99,0)
 ;
"RTN","VAFHLDG1",100,0)
ALL ; -- All outpatient diagnoses for encounter
"RTN","VAFHLDG1",101,0)
 ;
"RTN","VAFHLDG1",102,0)
 ; -- only send dx once per encounter / build ok array
"RTN","VAFHLDG1",103,0)
 N VAOK
"RTN","VAFHLDG1",104,0)
 F I=0:0 S I=$O(VAXY(I)) Q:'I  D
"RTN","VAFHLDG1",105,0)
 . S VAFNODE=VAXY(I)
"RTN","VAFHLDG1",106,0)
 . ;
"RTN","VAFHLDG1",107,0)
 . ; -- if this is first entry for dx then 'ok' it
"RTN","VAFHLDG1",108,0)
 . IF '$D(VAOK(+VAFNODE)) S VAOK(+VAFNODE)=I Q
"RTN","VAFHLDG1",109,0)
 . ;
"RTN","VAFHLDG1",110,0)
 . ; -- if primary then 'ok' it (if two are primary we 'ok' last)
"RTN","VAFHLDG1",111,0)
 . IF $P(VAFNODE,U,12)="P" S VAOK(+VAFNODE)=I
"RTN","VAFHLDG1",112,0)
 ;
"RTN","VAFHLDG1",113,0)
 ;
"RTN","VAFHLDG1",114,0)
 F I=0:0 S I=$O(VAXY(I)) Q:'I  D
"RTN","VAFHLDG1",115,0)
 .;
"RTN","VAFHLDG1",116,0)
 .S VAFNODE=VAXY(I)
"RTN","VAFHLDG1",117,0)
 .;
"RTN","VAFHLDG1",118,0)
 .; - build array of HL7 (DG1) segments but only use ok'ed entry for dx
"RTN","VAFHLDG1",119,0)
 .IF $G(VAOK(+VAFNODE))=I D BUILD
"RTN","VAFHLDG1",120,0)
 ;
"RTN","VAFHLDG1",121,0)
ENQ Q
"RTN","VAFHLDG1",122,0)
 ;
"RTN","VAFHLDG1",123,0)
 ;
"RTN","VAFHLDG1",124,0)
BUILD ; - Build array of HL7 (DG1) segments
"RTN","VAFHLDG1",125,0)
 S $P(VAFY,VAFHLFS,16)="",VAFIDX=VAFIDX+1
"RTN","VAFHLDG1",126,0)
 S VAFDICDE="I9" ; Diagnosis Coding Method = I9 (ICD-9)
"RTN","VAFHLDG1",127,0)
 ;
"RTN","VAFHLDG1",128,0)
 ; - Sequential number (required field)
"RTN","VAFHLDG1",129,0)
 S $P(VAFY,VAFHLFS,1)=VAFIDX
"RTN","VAFHLDG1",130,0)
 ;
"RTN","VAFHLDG1",131,0)
 I VAFSTR[",2," S $P(VAFY,VAFHLFS,2)=$S($G(VAFDICDE)]"":VAFDICDE,1:VAFHLQ) ; Diagnosis Coding Method = ICD-9
"RTN","VAFHLDG1",132,0)
 ;I (VAFSTR[",3,")!(VAFSTR[",4,") S VAFDNODE=$G(^ICD9(+$G(VAFNODE),0)) ; Get node from ICD Diagnosis file
"RTN","VAFHLDG1",133,0)
 I (VAFSTR[",3,")!(VAFSTR[",4,") S VAFDNODE=$$ICDDX^ICDCODE(+VAFNODE) ; Get node from ICD Diagnosis file
"RTN","VAFHLDG1",134,0)
 I VAFSTR[",3," S X=$P($G(VAFDNODE),"^",2),$P(VAFY,VAFHLFS,3)=$S(X]"":X,1:VAFHLQ) ; Diagnosis Code
"RTN","VAFHLDG1",135,0)
 I VAFSTR[",4," S X=$P($G(VAFDNODE),"^",4),$P(VAFY,VAFHLFS,4)=$S(X]"":X,1:VAFHLQ) ; Diagnosis Description
"RTN","VAFHLDG1",136,0)
 I VAFSTR[",5," S X=$$HLDATE^HLFNC($$SCE^DGSDU(VAFENC,1,0)),$P(VAFY,VAFHLFS,5)=$S(X]"":X,1:VAFHLQ) ; Diagnosis Date/Time (Encounter Date/Time)
"RTN","VAFHLDG1",137,0)
 ;
"RTN","VAFHLDG1",138,0)
 ; - Contains 1 if primary diagnosis, blank otherwise
"RTN","VAFHLDG1",139,0)
 I VAFSTR[",15," S X=$P($G(VAFNODE),"^",12),$P(VAFY,VAFHLFS,15)=$S(X="P":1,1:VAFHLQ) ; Diagnosis Ranking Number
"RTN","VAFHLDG1",140,0)
 ;
"RTN","VAFHLDG1",141,0)
 ; - Set all outpatient diagnoses into array
"RTN","VAFHLDG1",142,0)
 S @VAFARRY@(VAFIDX,0)="DG1"_VAFHLFS_$G(VAFY)
"RTN","VAFHLDG1",143,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
SD*5.3*295
"BLD",3002,0)
SD*5.3*295^SCHEDULING^0^3030916^y
"BLD",3002,1,0)
^^2^2^3030523^
"BLD",3002,1,1,0)
Please see the National Patch Module for details
"BLD",3002,1,2,0)
of the enhancements included in this patch.
"BLD",3002,4,0)
^9.64PA^409.76^1
"BLD",3002,4,409.76,0)
409.76
"BLD",3002,4,409.76,222)
n^n^f^^n^^y^r^n
"BLD",3002,4,409.76,224)
I ",6050,"[(","_$P(^(0),U,1)_",")
"BLD",3002,4,"B",409.76,409.76)

"BLD",3002,"KRN",0)
^9.67PA^8989.52^19
"BLD",3002,"KRN",.4,0)
.4
"BLD",3002,"KRN",.401,0)
.401
"BLD",3002,"KRN",.402,0)
.402
"BLD",3002,"KRN",.403,0)
.403
"BLD",3002,"KRN",.5,0)
.5
"BLD",3002,"KRN",.84,0)
.84
"BLD",3002,"KRN",3.6,0)
3.6
"BLD",3002,"KRN",3.8,0)
3.8
"BLD",3002,"KRN",9.2,0)
9.2
"BLD",3002,"KRN",9.8,0)
9.8
"BLD",3002,"KRN",9.8,"NM",0)
^9.68A^6^5
"BLD",3002,"KRN",9.8,"NM",1,0)
SCMSVUT1^^0^B58476228
"BLD",3002,"KRN",9.8,"NM",3,0)
SCRPW15^^0^B67718404
"BLD",3002,"KRN",9.8,"NM",4,0)
SCRPW24^^0^B72968652
"BLD",3002,"KRN",9.8,"NM",5,0)
SCRPW46^^0^B81442245
"BLD",3002,"KRN",9.8,"NM",6,0)
SCRPW57^^0^B27385265
"BLD",3002,"KRN",9.8,"NM","B","SCMSVUT1",1)

"BLD",3002,"KRN",9.8,"NM","B","SCRPW15",3)

"BLD",3002,"KRN",9.8,"NM","B","SCRPW24",4)

"BLD",3002,"KRN",9.8,"NM","B","SCRPW46",5)

"BLD",3002,"KRN",9.8,"NM","B","SCRPW57",6)

"BLD",3002,"KRN",19,0)
19
"BLD",3002,"KRN",19.1,0)
19.1
"BLD",3002,"KRN",101,0)
101
"BLD",3002,"KRN",409.61,0)
409.61
"BLD",3002,"KRN",771,0)
771
"BLD",3002,"KRN",870,0)
870
"BLD",3002,"KRN",8989.51,0)
8989.51
"BLD",3002,"KRN",8989.52,0)
8989.52
"BLD",3002,"KRN",8994,0)
8994
"BLD",3002,"KRN","B",.4,.4)

"BLD",3002,"KRN","B",.401,.401)

"BLD",3002,"KRN","B",.402,.402)

"BLD",3002,"KRN","B",.403,.403)

"BLD",3002,"KRN","B",.5,.5)

"BLD",3002,"KRN","B",.84,.84)

"BLD",3002,"KRN","B",3.6,3.6)

"BLD",3002,"KRN","B",3.8,3.8)

"BLD",3002,"KRN","B",9.2,9.2)

"BLD",3002,"KRN","B",9.8,9.8)

"BLD",3002,"KRN","B",19,19)

"BLD",3002,"KRN","B",19.1,19.1)

"BLD",3002,"KRN","B",101,101)

"BLD",3002,"KRN","B",409.61,409.61)

"BLD",3002,"KRN","B",771,771)

"BLD",3002,"KRN","B",870,870)

"BLD",3002,"KRN","B",8989.51,8989.51)

"BLD",3002,"KRN","B",8989.52,8989.52)

"BLD",3002,"KRN","B",8994,8994)

"BLD",3002,"QUES",0)
^9.62^^
"BLD",3002,"REQB",0)
^9.611^7^6
"BLD",3002,"REQB",1,0)
SD*5.3*258^2
"BLD",3002,"REQB",3,0)
SD*5.3*243^2
"BLD",3002,"REQB",4,0)
SD*5.3*199^2
"BLD",3002,"REQB",5,0)
ICPT*6.0*14^2
"BLD",3002,"REQB",6,0)
ICD*18.0*6^2
"BLD",3002,"REQB",7,0)
SD*5.3*296^2
"BLD",3002,"REQB","B","ICD*18.0*6",6)

"BLD",3002,"REQB","B","ICPT*6.0*14",5)

"BLD",3002,"REQB","B","SD*5.3*199",4)

"BLD",3002,"REQB","B","SD*5.3*243",3)

"BLD",3002,"REQB","B","SD*5.3*258",1)

"BLD",3002,"REQB","B","SD*5.3*296",7)

"DATA",409.76,143,0)
6050^V
"DATA",409.76,143,1)
CPT procedure code is missing or invalid.
"DATA",409.76,143,2,0)
^409.7621^1^1^3030320^^^^
"DATA",409.76,143,2,1,0)
Correct procedure coding through Appointment Management Check Out.
"DATA",409.76,143,"CHK")
S RES=$$PROCCOD^SCMSVUT1(DATA,ENCDT)
"DATA",409.76,143,"COR")
S RTN=$$INTV^SCENIA1
"FIA",409.76)
TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE
"FIA",409.76,0)
^SD(409.76,
"FIA",409.76,0,0)
409.76I
"FIA",409.76,0,1)
n^n^f^^n^^y^r^n
"FIA",409.76,0,10)

"FIA",409.76,0,11)
I ",6050,"[(","_$P(^(0),U,1)_",")
"FIA",409.76,0,"RLRO")

"FIA",409.76,0,"VR")
5.3^SD
"FIA",409.76,409.76)
0
"FIA",409.76,409.7621)
0
"MBREQ")
1
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813^2930824
"PKG",16,22,1,"PAH",1,0)
295^3030916
"PKG",16,22,1,"PAH",1,1,0)
^^2^2^3030916
"PKG",16,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for details
"PKG",16,22,1,"PAH",1,1,2,0)
of the enhancements included in this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","SCMSVUT1")
0^1^B58476228
"RTN","SCMSVUT1",1,0)
SCMSVUT1 ;ALB/JLU;validation utility routine;06/19/99 ; 4/30/03 11:58am
"RTN","SCMSVUT1",2,0)
 ;;5.3;Scheduling;**66,143,180,239,247,258,296,295**;AUG 13,1993
"RTN","SCMSVUT1",3,0)
 ;06/19/99 ACS - Added CPT Modifier API calls to PROCCOD(DATA)
"RTN","SCMSVUT1",4,0)
 ;
"RTN","SCMSVUT1",5,0)
SEGERR(DATA,HLFS) ;
"RTN","SCMSVUT1",6,0)
 ;INPUT DATA - This is a check for the segment errors of null
"RTN","SCMSVUT1",7,0)
 ;      HLFS - The string separator character
"RTN","SCMSVUT1",8,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",9,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",10,0)
 I $L(DATA,HLFS)'>2 Q 0
"RTN","SCMSVUT1",11,0)
 Q 1
"RTN","SCMSVUT1",12,0)
 ;
"RTN","SCMSVUT1",13,0)
DODA(DATA) ;
"RTN","SCMSVUT1",14,0)
 ;INPUT   DATA - The FM date of death.
"RTN","SCMSVUT1",15,0)
 ;
"RTN","SCMSVUT1",16,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",17,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",18,0)
 N %DT,X,Y
"RTN","SCMSVUT1",19,0)
 S %DT="T",%DT(0)="-NOW",X=DATA
"RTN","SCMSVUT1",20,0)
 D ^%DT
"RTN","SCMSVUT1",21,0)
 Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT1",22,0)
 ;
"RTN","SCMSVUT1",23,0)
DODB(DATA,ENCDT) ;
"RTN","SCMSVUT1",24,0)
 ;INPUT   DATA - The FM date of death
"RTN","SCMSVUT1",25,0)
 ;       ENCDT - The FM date of encounter
"RTN","SCMSVUT1",26,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",27,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",28,0)
 N %DT,X,Y
"RTN","SCMSVUT1",29,0)
 S %DT="T",%DT(0)=ENCDT,X=DATA
"RTN","SCMSVUT1",30,0)
 D ^%DT
"RTN","SCMSVUT1",31,0)
 Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT1",32,0)
 ;
"RTN","SCMSVUT1",33,0)
DODL(DATA,ENCDT) ;
"RTN","SCMSVUT1",34,0)
 ;INPUT  DATA - The FM date of death
"RTN","SCMSVUT1",35,0)
 ;      ENCDT - The FM date of the encounter
"RTN","SCMSVUT1",36,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",37,0)
 I '$D(ENCDT) Q 0
"RTN","SCMSVUT1",38,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",39,0)
 I ENCDT<DATA Q 1
"RTN","SCMSVUT1",40,0)
 I ENCDT=DATA Q 1
"RTN","SCMSVUT1",41,0)
 N X1,X2,X
"RTN","SCMSVUT1",42,0)
 S X1=ENCDT,X2=DATA
"RTN","SCMSVUT1",43,0)
 D ^%DTC
"RTN","SCMSVUT1",44,0)
 I X>14 Q 0
"RTN","SCMSVUT1",45,0)
 Q 1
"RTN","SCMSVUT1",46,0)
 ;
"RTN","SCMSVUT1",47,0)
HOME(DATA) ;
"RTN","SCMSVUT1",48,0)
 ;INPUT   DATA - THe homeless indicator to be validated.
"RTN","SCMSVUT1",49,0)
 ;
"RTN","SCMSVUT1",50,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",51,0)
 I DATA'=1,DATA'=0 Q 0
"RTN","SCMSVUT1",52,0)
 Q 1
"RTN","SCMSVUT1",53,0)
 ;
"RTN","SCMSVUT1",54,0)
POW(DATA) ;
"RTN","SCMSVUT1",55,0)
 ;INPUT  DATA - The POW indicatort to be validated.
"RTN","SCMSVUT1",56,0)
 ;
"RTN","SCMSVUT1",57,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",58,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",59,0)
 I DATA'="N",DATA'="U",DATA'="Y" Q 0
"RTN","SCMSVUT1",60,0)
 Q 1
"RTN","SCMSVUT1",61,0)
 ;
"RTN","SCMSVUT1",62,0)
TYPINS(DATA) ;
"RTN","SCMSVUT1",63,0)
 ;INPUT  DATA - Type if insurance indicator to be validated.
"RTN","SCMSVUT1",64,0)
 ;
"RTN","SCMSVUT1",65,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",66,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",67,0)
 I DATA?.A Q 0
"RTN","SCMSVUT1",68,0)
 I DATA>-1,(DATA<13) Q 1
"RTN","SCMSVUT1",69,0)
 Q 0
"RTN","SCMSVUT1",70,0)
 ;
"RTN","SCMSVUT1",71,0)
PATCLSS(DATA) ;
"RTN","SCMSVUT1",72,0)
 ;INPUT  DATA - the patient's class
"RTN","SCMSVUT1",73,0)
 ;
"RTN","SCMSVUT1",74,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",75,0)
 I DATA'="O" Q 0
"RTN","SCMSVUT1",76,0)
 Q 1
"RTN","SCMSVUT1",77,0)
 ;
"RTN","SCMSVUT1",78,0)
POV(DATA) ;
"RTN","SCMSVUT1",79,0)
 ;INPUT DATA - the purpose of visit.
"RTN","SCMSVUT1",80,0)
 ;
"RTN","SCMSVUT1",81,0)
 N VAR
"RTN","SCMSVUT1",82,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",83,0)
 I $L(DATA)'=4 Q 0
"RTN","SCMSVUT1",84,0)
 I DATA?.A Q 0
"RTN","SCMSVUT1",85,0)
 S VAR=$E(DATA,1,2)
"RTN","SCMSVUT1",86,0)
 I VAR<1!(VAR>4) Q 0
"RTN","SCMSVUT1",87,0)
 S VAR=$E(DATA,3,4)
"RTN","SCMSVUT1",88,0)
 I VAR<1!(VAR>9) Q 0
"RTN","SCMSVUT1",89,0)
 Q 1
"RTN","SCMSVUT1",90,0)
 ;
"RTN","SCMSVUT1",91,0)
COMPGEN(DATA) ;
"RTN","SCMSVUT1",92,0)
 ;INPUT DATA - checking computer generated.
"RTN","SCMSVUT1",93,0)
 ;
"RTN","SCMSVUT1",94,0)
 N VAR
"RTN","SCMSVUT1",95,0)
 S VAR=$E(DATA,3,4)
"RTN","SCMSVUT1",96,0)
 I VAR=10 Q 0
"RTN","SCMSVUT1",97,0)
 Q 1
"RTN","SCMSVUT1",98,0)
 ;
"RTN","SCMSVUT1",99,0)
LOCVIS(DATA) ;
"RTN","SCMSVUT1",100,0)
 ;INPUT DATA - Location of visit
"RTN","SCMSVUT1",101,0)
 ;
"RTN","SCMSVUT1",102,0)
 I DATA'=1,DATA'=6 Q 0
"RTN","SCMSVUT1",103,0)
 Q 1
"RTN","SCMSVUT1",104,0)
 ;
"RTN","SCMSVUT1",105,0)
FACNMBR(DATA) ;
"RTN","SCMSVUT1",106,0)
 ;INPUT DATA - The facility number
"RTN","SCMSVUT1",107,0)
 ;
"RTN","SCMSVUT1",108,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",109,0)
 I DATA'?3N.AN Q 0
"RTN","SCMSVUT1",110,0)
 I '$D(^DIC(4,"D",DATA)) Q 0
"RTN","SCMSVUT1",111,0)
 Q 1
"RTN","SCMSVUT1",112,0)
 ;
"RTN","SCMSVUT1",113,0)
FACACT(DATA,ENCDT,DIV) ;
"RTN","SCMSVUT1",114,0)
 ;INPUT DATA - The active flag of the facility number.
"RTN","SCMSVUT1",115,0)
 ;
"RTN","SCMSVUT1",116,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",117,0)
 I '$D(ENCDT) Q 0
"RTN","SCMSVUT1",118,0)
 I '$D(DIV) Q 0
"RTN","SCMSVUT1",119,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",120,0)
 N SITE
"RTN","SCMSVUT1",121,0)
 I DIV]"" S SITE=$$SITE^VASITE(ENCDT,DIV)
"RTN","SCMSVUT1",122,0)
 I DIV']"" S SITE=$$SITE^VASITE(ENCDT)
"RTN","SCMSVUT1",123,0)
 I DATA'=$P(SITE,U,3) Q 0
"RTN","SCMSVUT1",124,0)
 Q 1
"RTN","SCMSVUT1",125,0)
 ;
"RTN","SCMSVUT1",126,0)
ENCDT(DATA) ;
"RTN","SCMSVUT1",127,0)
 ;INPUT DATA - The date/time of the encounter
"RTN","SCMSVUT1",128,0)
 ;
"RTN","SCMSVUT1",129,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",130,0)
 N %DT,X,Y
"RTN","SCMSVUT1",131,0)
 S %DT="T"
"RTN","SCMSVUT1",132,0)
 S X=DATA
"RTN","SCMSVUT1",133,0)
 D ^%DT
"RTN","SCMSVUT1",134,0)
 I Y=-1 Q 0
"RTN","SCMSVUT1",135,0)
 N VAR
"RTN","SCMSVUT1",136,0)
 S VAR=$$OKTOXMIT^SCDXFU04(DATA)
"RTN","SCMSVUT1",137,0)
 ;I +VAR=1 Q 1
"RTN","SCMSVUT1",138,0)
 I +VAR<4&(VAR'<0) Q 1  ;SD*5.3*247
"RTN","SCMSVUT1",139,0)
 Q 0
"RTN","SCMSVUT1",140,0)
 ;
"RTN","SCMSVUT1",141,0)
UNIQNMBR(DATA) ;
"RTN","SCMSVUT1",142,0)
 ;INPUT DATA - The unique number from PCE for the encounter
"RTN","SCMSVUT1",143,0)
 ;
"RTN","SCMSVUT1",144,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",145,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",146,0)
 I DATA=-1 Q 0
"RTN","SCMSVUT1",147,0)
 I DATA=0 Q 0
"RTN","SCMSVUT1",148,0)
 Q 1
"RTN","SCMSVUT1",149,0)
 ;
"RTN","SCMSVUT1",150,0)
SEGCHK(DATA,HLFS) ;
"RTN","SCMSVUT1",151,0)
 ;INPUT DATA - The segment to be checked.
"RTN","SCMSVUT1",152,0)
 ;      HLFS - The HL7 field separator
"RTN","SCMSVUT1",153,0)
 ;
"RTN","SCMSVUT1",154,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",155,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",156,0)
 I $L(DATA,HLFS)'>2 Q 0
"RTN","SCMSVUT1",157,0)
 Q 1
"RTN","SCMSVUT1",158,0)
 ;
"RTN","SCMSVUT1",159,0)
SEQNBR(DATA,SEQNBR) ;
"RTN","SCMSVUT1",160,0)
 ;INPUT DATA - The sequence number to be checked.
"RTN","SCMSVUT1",161,0)
 ;     SEQNBR - This is the previous seq number to compare to
"RTN","SCMSVUT1",162,0)
 ;
"RTN","SCMSVUT1",163,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",164,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",165,0)
 I +DATA'=+SEQNBR Q 0
"RTN","SCMSVUT1",166,0)
 S SEQNBR=SEQNBR+1
"RTN","SCMSVUT1",167,0)
 Q 1
"RTN","SCMSVUT1",168,0)
 ;
"RTN","SCMSVUT1",169,0)
DCODMTHD(DATA) ;
"RTN","SCMSVUT1",170,0)
 ;INPUT DATA - This is the coding method to be checked.
"RTN","SCMSVUT1",171,0)
 ;
"RTN","SCMSVUT1",172,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",173,0)
 I DATA'="I9" Q 0
"RTN","SCMSVUT1",174,0)
 Q 1
"RTN","SCMSVUT1",175,0)
 ;
"RTN","SCMSVUT1",176,0)
DIAGCOD(DATA,ENCDT) ;
"RTN","SCMSVUT1",177,0)
 ;INPUT DATA - This is the diagnosis code
"RTN","SCMSVUT1",178,0)
 ;     ENCDT - This is the encounter date
"RTN","SCMSVUT1",179,0)
 ;
"RTN","SCMSVUT1",180,0)
 N VAR
"RTN","SCMSVUT1",181,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",182,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",183,0)
 ;
"RTN","SCMSVUT1",184,0)
 ; CSV - change to use API
"RTN","SCMSVUT1",185,0)
 ;S VAR=$O(^ICD9("BA",DATA_" ",""))
"RTN","SCMSVUT1",186,0)
 ;I 'VAR Q 0
"RTN","SCMSVUT1",187,0)
 ;S VAR=$G(^ICD9(VAR,0))
"RTN","SCMSVUT1",188,0)
 ;I VAR']"" Q 0
"RTN","SCMSVUT1",189,0)
 ;this is the inactive flag
"RTN","SCMSVUT1",190,0)
 ;I $P(VAR,U,9)'=1 Q 1
"RTN","SCMSVUT1",191,0)
 ;S VAR=$P(VAR,U,11)
"RTN","SCMSVUT1",192,0)
 ;N %DT,X,Y
"RTN","SCMSVUT1",193,0)
 ;S %DT="ST",%DT(0)=-VAR,X=ENCDT
"RTN","SCMSVUT1",194,0)
 ;D ^%DT
"RTN","SCMSVUT1",195,0)
 ;Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT1",196,0)
 Q $P($$ICDDX^ICDCODE(DATA,ENCDT),"^",10)
"RTN","SCMSVUT1",197,0)
 ;
"RTN","SCMSVUT1",198,0)
PRIOR(DATA) ;
"RTN","SCMSVUT1",199,0)
 ;INPUT DATA - The priority of the diagnosis found
"RTN","SCMSVUT1",200,0)
 ;
"RTN","SCMSVUT1",201,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",202,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",203,0)
 I DATA=1 Q 1
"RTN","SCMSVUT1",204,0)
 Q 0
"RTN","SCMSVUT1",205,0)
 ;
"RTN","SCMSVUT1",206,0)
ELIGCODM(DATA) ;
"RTN","SCMSVUT1",207,0)
 ;INPUT DATA - The eligibility code
"RTN","SCMSVUT1",208,0)
 ;A CHECK FOR MISSING
"RTN","SCMSVUT1",209,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",210,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",211,0)
 I '$D(^DIC(8.1,DATA,0)) Q 0
"RTN","SCMSVUT1",212,0)
 Q 1
"RTN","SCMSVUT1",213,0)
 ;
"RTN","SCMSVUT1",214,0)
ELIGINCV(DATA) ;
"RTN","SCMSVUT1",215,0)
 ;INPUT DATA - Contains the eligibility code in the first piece and
"RTN","SCMSVUT1",216,0)
 ;the veteran status in the second.
"RTN","SCMSVUT1",217,0)
 ;
"RTN","SCMSVUT1",218,0)
 ;the following quit is to stop this edit check.
"RTN","SCMSVUT1",219,0)
 ;Per Austin 9/97 this is not needed.
"RTN","SCMSVUT1",220,0)
 Q 1
"RTN","SCMSVUT1",221,0)
 N VET,ELIG
"RTN","SCMSVUT1",222,0)
 S VET=$P(DATA,U,2)
"RTN","SCMSVUT1",223,0)
 S ELIG=$P(DATA,U,1)
"RTN","SCMSVUT1",224,0)
 I VET=1&((ELIG<1)!(ELIG>18)) Q 0
"RTN","SCMSVUT1",225,0)
 I VET=1,ELIG>5,ELIG<15 Q 0
"RTN","SCMSVUT1",226,0)
 I VET=0,ELIG<6 Q 0
"RTN","SCMSVUT1",227,0)
 I VET=0,ELIG=11 Q 0
"RTN","SCMSVUT1",228,0)
 I VET=0,ELIG>14,ELIG'=19 Q 0
"RTN","SCMSVUT1",229,0)
 Q 1
"RTN","SCMSVUT1",230,0)
 ;
"RTN","SCMSVUT1",231,0)
ELIGINCS(DATA) ;
"RTN","SCMSVUT1",232,0)
 ;INPUT DATA - Eligibility code
"RTN","SCMSVUT1",233,0)
 ;
"RTN","SCMSVUT1",234,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",235,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",236,0)
 I '$D(^DIC(8.1,DATA,0)) Q 0
"RTN","SCMSVUT1",237,0)
 I +$P(^DIC(8.1,DATA,0),U,7) Q 0
"RTN","SCMSVUT1",238,0)
 Q 1
"RTN","SCMSVUT1",239,0)
 ;
"RTN","SCMSVUT1",240,0)
VETSTAT(DATA) ;
"RTN","SCMSVUT1",241,0)
 ;INPUT DATA - The veteran status indicator
"RTN","SCMSVUT1",242,0)
 ;
"RTN","SCMSVUT1",243,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",244,0)
 I DATA'=0,DATA'=1 Q 0
"RTN","SCMSVUT1",245,0)
 Q 1
"RTN","SCMSVUT1",246,0)
 ;
"RTN","SCMSVUT1",247,0)
VETPOW(DATA,DFN) ;
"RTN","SCMSVUT1",248,0)
 ;INPUT DATA - veteran status to check with POW status.
"RTN","SCMSVUT1",249,0)
 ;       DFN - The DFN of the patient.
"RTN","SCMSVUT1",250,0)
 ;
"RTN","SCMSVUT1",251,0)
 N VAR,POW
"RTN","SCMSVUT1",252,0)
 I DATA=0 Q 1
"RTN","SCMSVUT1",253,0)
 S VAR=$G(^DPT(DFN,.52))
"RTN","SCMSVUT1",254,0)
 S POW=$S(VAR]"":$P(VAR,U,5),1:VAR)
"RTN","SCMSVUT1",255,0)
 I POW="" Q 1
"RTN","SCMSVUT1",256,0)
 I POW="Y"!(POW="N")!(POW="U") Q 1
"RTN","SCMSVUT1",257,0)
 Q 0
"RTN","SCMSVUT1",258,0)
 ;
"RTN","SCMSVUT1",259,0)
NMBRDEP(DATA) ;
"RTN","SCMSVUT1",260,0)
 ;INPUT DATA - the number of dependents
"RTN","SCMSVUT1",261,0)
 ;
"RTN","SCMSVUT1",262,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",263,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",264,0)
 I DATA="XX" Q 1
"RTN","SCMSVUT1",265,0)
 I DATA'?1.2N Q 0
"RTN","SCMSVUT1",266,0)
 I +DATA>99!(+DATA<0) Q 0
"RTN","SCMSVUT1",267,0)
 Q 1
"RTN","SCMSVUT1",268,0)
 ;
"RTN","SCMSVUT1",269,0)
PATINC(DATA) ;
"RTN","SCMSVUT1",270,0)
 ;INPUT DATA - The patient's income
"RTN","SCMSVUT1",271,0)
 ;
"RTN","SCMSVUT1",272,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",273,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",274,0)
 I DATA<0 Q 0
"RTN","SCMSVUT1",275,0)
 I DATA'?.N.1".".N Q 0
"RTN","SCMSVUT1",276,0)
 Q 1
"RTN","SCMSVUT1",277,0)
 ;
"RTN","SCMSVUT1",278,0)
MEANSTST(DATA) ;
"RTN","SCMSVUT1",279,0)
 ;INPUT DATA - The means test indicator
"RTN","SCMSVUT1",280,0)
 ;
"RTN","SCMSVUT1",281,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",282,0)
 S DATA=","_DATA_","
"RTN","SCMSVUT1",283,0)
 ; ** SD*296, added 'U' means test indicator to allowed list.
"RTN","SCMSVUT1",284,0)
 I ",AS,AN,N,X,C,G,U,"'[DATA Q 0
"RTN","SCMSVUT1",285,0)
 Q 1
"RTN","SCMSVUT1",286,0)
 ;
"RTN","SCMSVUT1",287,0)
DEPMEANS(DATA) ;
"RTN","SCMSVUT1",288,0)
 ;INPUT DATA - This variable contains the number of dependents in the
"RTN","SCMSVUT1",289,0)
 ;             first peice and the means test indicator in the second.
"RTN","SCMSVUT1",290,0)
 ;
"RTN","SCMSVUT1",291,0)
 N MT,DEP
"RTN","SCMSVUT1",292,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",293,0)
 S DEP=$P(DATA,U,1)
"RTN","SCMSVUT1",294,0)
 S MT=","_$P(DATA,U,2)_","
"RTN","SCMSVUT1",295,0)
 I DEP="XX",(",AS,N,X,"'[MT) Q 0
"RTN","SCMSVUT1",296,0)
 Q 1
"RTN","SCMSVUT1",297,0)
 ;
"RTN","SCMSVUT1",298,0)
CLASSQUE(DATA) ;
"RTN","SCMSVUT1",299,0)
 ;INPUT DATA - Classification question value.
"RTN","SCMSVUT1",300,0)
 ;
"RTN","SCMSVUT1",301,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",302,0)
 I DATA'=1,DATA'=0,DATA'="" Q 0
"RTN","SCMSVUT1",303,0)
 Q 1
"RTN","SCMSVUT1",304,0)
 ;
"RTN","SCMSVUT1",305,0)
CLAQUETY(DATA) ;
"RTN","SCMSVUT1",306,0)
 ;INPUT DATA - Outpatient classification type to be checked.
"RTN","SCMSVUT1",307,0)
 ;
"RTN","SCMSVUT1",308,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",309,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",310,0)
 I '$D(^SD(409.41,DATA,0)) Q 0
"RTN","SCMSVUT1",311,0)
 Q 1
"RTN","SCMSVUT1",312,0)
 ;
"RTN","SCMSVUT1",313,0)
CLAVET(DATA,DFN,TYPE) ;
"RTN","SCMSVUT1",314,0)
 ;INPUT DATA - Classification question information to compare to VET
"RTN","SCMSVUT1",315,0)
 ;             status
"RTN","SCMSVUT1",316,0)
 ;       DFN - The patient to compare this info to.
"RTN","SCMSVUT1",317,0)
 ;      TYPE - The classification type.
"RTN","SCMSVUT1",318,0)
 ;
"RTN","SCMSVUT1",319,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",320,0)
 I '$D(DFN) Q 0
"RTN","SCMSVUT1",321,0)
 N VET
"RTN","SCMSVUT1",322,0)
 S VET=$P($G(^DPT(DFN,"VET")),U,1)
"RTN","SCMSVUT1",323,0)
 I VET="Y",DATA'=1,DATA'=0,DATA'="" Q 0
"RTN","SCMSVUT1",324,0)
 ;This edit check is per a mail message from austin
"RTN","SCMSVUT1",325,0)
 I TYPE=4,VET'="Y",DATA'="","^A^B^C^D^"'[("^"_($P($G(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)),"^",3))_"^") Q 0
"RTN","SCMSVUT1",326,0)
 I VET'="Y",DATA'="" Q $$EC^SDCO22(DFN)
"RTN","SCMSVUT1",327,0)
 Q 1
"RTN","SCMSVUT1",328,0)
 ;
"RTN","SCMSVUT1",329,0)
STPCOD(DATA) ;
"RTN","SCMSVUT1",330,0)
 ;INPUT DATA - stop code data to be checked
"RTN","SCMSVUT1",331,0)
 ;
"RTN","SCMSVUT1",332,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",333,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",334,0)
 I '$D(^DIC(40.7,"C",DATA)) Q 0
"RTN","SCMSVUT1",335,0)
 Q 1
"RTN","SCMSVUT1",336,0)
 ;
"RTN","SCMSVUT1",337,0)
ACTSTP(DATA,ENCDT) ;
"RTN","SCMSVUT1",338,0)
 ;INPUT  DATA - IEN of the stop code to be checked.
"RTN","SCMSVUT1",339,0)
 ;      ENCDT - the encounter date in question
"RTN","SCMSVUT1",340,0)
 ;
"RTN","SCMSVUT1",341,0)
 N STPCOD,%DT,X,Y
"RTN","SCMSVUT1",342,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",343,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",344,0)
 S STPCOD=$G(^DIC(40.7,DATA,0))
"RTN","SCMSVUT1",345,0)
 I STPCOD="" Q 0
"RTN","SCMSVUT1",346,0)
 I '$P(STPCOD,U,3) Q 1
"RTN","SCMSVUT1",347,0)
 S %DT(0)="-"_$P(STPCOD,U,3),%DT="T",X=ENCDT
"RTN","SCMSVUT1",348,0)
 D ^%DT
"RTN","SCMSVUT1",349,0)
 Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT1",350,0)
 ;
"RTN","SCMSVUT1",351,0)
SERCON(DATA) ;
"RTN","SCMSVUT1",352,0)
 ;INPUT DATA - Service connection to be checked, missing or invalid
"RTN","SCMSVUT1",353,0)
 ;
"RTN","SCMSVUT1",354,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",355,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",356,0)
 I DATA'=1,DATA'=0 Q 0
"RTN","SCMSVUT1",357,0)
 Q 1
"RTN","SCMSVUT1",358,0)
 ;
"RTN","SCMSVUT1",359,0)
SCPER(DATA) ;
"RTN","SCMSVUT1",360,0)
 ;INPUT DATA - Service connected % to be tested
"RTN","SCMSVUT1",361,0)
 ;
"RTN","SCMSVUT1",362,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",363,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",364,0)
 I DATA'?.N.1".".N Q 0
"RTN","SCMSVUT1",365,0)
 Q 1
"RTN","SCMSVUT1",366,0)
 ;
"RTN","SCMSVUT1",367,0)
PRDSER(DATA) ;
"RTN","SCMSVUT1",368,0)
 ;INPUT DATA - period of service to be tested.
"RTN","SCMSVUT1",369,0)
 ;
"RTN","SCMSVUT1",370,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",371,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",372,0)
 I '$D(^DIC(21,"D",DATA)) Q 0
"RTN","SCMSVUT1",373,0)
 Q 1
"RTN","SCMSVUT1",374,0)
 ;
"RTN","SCMSVUT1",375,0)
VIETSER1(DATA) ;
"RTN","SCMSVUT1",376,0)
 ;INPUT DATA - Vietnam service to be checked
"RTN","SCMSVUT1",377,0)
 ;
"RTN","SCMSVUT1",378,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",379,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",380,0)
 I DATA'="Y",DATA'="N",DATA'="U" Q 0
"RTN","SCMSVUT1",381,0)
 Q 1
"RTN","SCMSVUT1",382,0)
 ;
"RTN","SCMSVUT1",383,0)
VIETSER2(DATA,DFN) ;
"RTN","SCMSVUT1",384,0)
 ;INPUT DATA - Vietnam service to be checked against vet status
"RTN","SCMSVUT1",385,0)
 ;
"RTN","SCMSVUT1",386,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",387,0)
 N VAR
"RTN","SCMSVUT1",388,0)
 S VAR=$G(^DPT(DFN,"VET"))
"RTN","SCMSVUT1",389,0)
 I DATA="",VAR'="Y" Q 1
"RTN","SCMSVUT1",390,0)
 I (DATA="Y"!(DATA="N")!(DATA="U")),VAR="Y" Q 1
"RTN","SCMSVUT1",391,0)
 Q 0
"RTN","SCMSVUT1",392,0)
 ;
"RTN","SCMSVUT1",393,0)
ACTPRD(DATA) ;
"RTN","SCMSVUT1",394,0)
 ;INPUT DATA - period of serivce indicator to be check to ensure active
"RTN","SCMSVUT1",395,0)
 ;
"RTN","SCMSVUT1",396,0)
 N VAR
"RTN","SCMSVUT1",397,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",398,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",399,0)
 S VAR=+$O(^DIC(21,"D",DATA,0))
"RTN","SCMSVUT1",400,0)
 S VAR=$P($G(^DIC(21,VAR,0)),U,8)
"RTN","SCMSVUT1",401,0)
 I VAR Q 0
"RTN","SCMSVUT1",402,0)
 Q 1
"RTN","SCMSVUT1",403,0)
 ;
"RTN","SCMSVUT1",404,0)
PCODMTHD(DATA) ;
"RTN","SCMSVUT1",405,0)
 ;INPUT DATA - The coding method to be checked.
"RTN","SCMSVUT1",406,0)
 ;
"RTN","SCMSVUT1",407,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",408,0)
 I DATA'="C4" Q 0
"RTN","SCMSVUT1",409,0)
 Q 1
"RTN","SCMSVUT1",410,0)
 ;
"RTN","SCMSVUT1",411,0)
PROCCOD(DATA,ENCDT)    ;
"RTN","SCMSVUT1",412,0)
 ;INPUT DATA - The procedure code to be checked.
"RTN","SCMSVUT1",413,0)
 ;This call makes the assumption that leading zeros are intact in the 
"RTN","SCMSVUT1",414,0)
 ;input.
"RTN","SCMSVUT1",415,0)
 ;
"RTN","SCMSVUT1",416,0)
 N VAR
"RTN","SCMSVUT1",417,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",418,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",419,0)
 ;S VAR=+$O(^ICPT("B",DATA,""))
"RTN","SCMSVUT1",420,0)
 ;I '$D(^ICPT(VAR,0)) Q 0
"RTN","SCMSVUT1",421,0)
 ;
"RTN","SCMSVUT1",422,0)
 ; CSV - pass encounter date to API
"RTN","SCMSVUT1",423,0)
 ;I $$CPT^ICPTCOD(DATA,,1)'>0 Q 0
"RTN","SCMSVUT1",424,0)
 I $$CPT^ICPTCOD(DATA,ENCDT,1)'>0 Q 0
"RTN","SCMSVUT1",425,0)
 Q 1
"RTN","SCMSVUT1",426,0)
 ;
"RTN","SCMSVUT1",427,0)
PROVCLS(DATA) ;
"RTN","SCMSVUT1",428,0)
 ;INPUT DATA - The practitioner class to be checked.
"RTN","SCMSVUT1",429,0)
 ;
"RTN","SCMSVUT1",430,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",431,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",432,0)
 I $$CODE2TXT^XUA4A72(DATA)']"" Q 0
"RTN","SCMSVUT1",433,0)
 Q 1
"RTN","SCMSVUT1",434,0)
 ;
"RTN","SCRPW15")
0^3^B67718404
"RTN","SCRPW15",1,0)
SCRPW15 ;RENO/KEITH - Encounter Activity Report (Cont.) ;06/19/99
"RTN","SCRPW15",2,0)
 ;;5.3;Scheduling;**139,144,166,180,295**;AUG 13, 1993
"RTN","SCRPW15",3,0)
 ;06/19/99 ACS - Added CPT modifiers to the report
"RTN","SCRPW15",4,0)
 ;06/19/99 ACS - Added CPT modifier API calls
"RTN","SCRPW15",5,0)
 ;
"RTN","SCRPW15",6,0)
 N LINEFLAG
"RTN","SCRPW15",7,0)
 S SDIV="" F  S SDIV=$O(^TMP("SCRPW",$J,SDIV)) Q:SDIV=""!SDOUT  D DCAL
"RTN","SCRPW15",8,0)
 S SDLINE="",$P(SDLINE,"-",81)="" D NOW^%DTC S Y=% X ^DD("DD") S SDPNOW=$P(Y,":",1,2),(SDPAGE,SDFFS)=1
"RTN","SCRPW15",9,0)
 S SDIV="" F  S SDIV=$O(SDDIV(SDIV)) Q:'SDIV  S SDIV(SDDIV(SDIV))=SDIV
"RTN","SCRPW15",10,0)
 I 'SDDIV,$P(SDDIV,U,2)'="ALL DIVISIONS" S SDIV($P(SDDIV,U,2))=$$PRIM^VASITE()
"RTN","SCRPW15",11,0)
 I $P(SDDIV,U,2)="ALL DIVISIONS" S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,SDI)) Q:'SDI  S SDX=$P($G(^DG(40.8,SDI,0)),U) S:$L(SDX) SDIV(SDX)=SDI
"RTN","SCRPW15",12,0)
 D:$E(IOST)="C" DISP0^SCRPW23 I '$O(^TMP("SCRPW",$J,0)) S SDIV=0 D DHDR^SCRPW40(2,.SDT) D HDR() Q:SDOUT  S SDX="No activity found within selected report parameters!" W !!?(80-$L(SDX)\2),SDX G EXIT
"RTN","SCRPW15",13,0)
 S SDIVN="" F  S SDIVN=$O(SDIV(SDIVN)) Q:SDIVN=""!SDOUT  S SDIV=SDIV(SDIVN) D DPRT(.SDIV)
"RTN","SCRPW15",14,0)
 S SDI=0,SDI=$O(^TMP("SCRPW",$J,SDI)),SDMD=$O(^TMP("SCRPW",$J,SDI))
"RTN","SCRPW15",15,0)
 G:SDOUT EXIT I SDMD S SDIV=0 D DPRT(.SDIV)
"RTN","SCRPW15",16,0)
 ;
"RTN","SCRPW15",17,0)
 I $E(IOST)="C",'$G(SDOUT) N DIR S DIR(0)="E" D ^DIR
"RTN","SCRPW15",18,0)
EXIT K SD,SDDIV G EXIT^SCRPW14
"RTN","SCRPW15",19,0)
 ;
"RTN","SCRPW15",20,0)
DCAL ;Calculate numbers for a division
"RTN","SCRPW15",21,0)
 D STOP^SCRPW14 Q:SDOUT
"RTN","SCRPW15",22,0)
 S SDS=0 F  S SDS=$O(^TMP("SCRPW",$J,SDIV,1,SDS)) Q:'SDS  D S1 S ^TMP("SCRPW",$J,SDIV,1,SDS,"VIS")=SDVS(SDIV),^TMP("SCRPW",$J,SDIV,1,SDS,"UNIQ")=SDUN(SDIV),^TMP("SCRPW",$J,SDIV,2,$$ORD(),SDS)=""
"RTN","SCRPW15",23,0)
 S (SDRPVS(SDIV),SDRPUN(SDIV),DFN)=0 F  S DFN=$O(^TMP("SCRPW",$J,SDIV,"RPT","PT",DFN)) Q:'DFN  S SDRPUN(SDIV)=SDRPUN(SDIV)+1,SDDT=0 F  S SDDT=$O(^TMP("SCRPW",$J,SDIV,"RPT","PT",DFN,SDDT)) Q:'SDDT  S SDRPVS(SDIV)=SDRPVS(SDIV)+1
"RTN","SCRPW15",24,0)
 Q
"RTN","SCRPW15",25,0)
 ;
"RTN","SCRPW15",26,0)
DPRT(SDIV) ;Print report for a division
"RTN","SCRPW15",27,0)
 S:SD("FMT")="D" SDDET=1 D T3 S SDPAGE=1 I '$D(^TMP("SCRPW",$J,SDIV)) S SDX="No activity found for this division!" D HDR() Q:SDOUT  W !!?(80-$L(SDX)\2),SDX Q
"RTN","SCRPW15",28,0)
 D HDR() Q:SDOUT
"RTN","SCRPW15",29,0)
 S SDSV="" F  S SDSV=$O(^TMP("SCRPW",$J,SDIV,2,SDSV),$S(SD("ORD")="A":1,1:-1)) Q:SDSV=""!SDOUT  S SDS=0 F  S SDS=$O(^TMP("SCRPW",$J,SDIV,2,SDSV,SDS)) Q:'SDS!SDOUT  D PRT
"RTN","SCRPW15",30,0)
 Q:SDOUT  I SD("FMT")="S" D RTOT Q
"RTN","SCRPW15",31,0)
 Q:SDOUT  D:SD("FMT")="D" NONE Q
"RTN","SCRPW15",32,0)
 ;
"RTN","SCRPW15",33,0)
S1 S (SDVS(SDIV),SDUN(SDIV),SDPT)=0 F  S SDPT=$O(^TMP("SCRPW",$J,SDIV,1,SDS,"PT",SDPT)) Q:'SDPT  S SDUN(SDIV)=SDUN(SDIV)+1,SDDT=0 F  S SDDT=$O(^TMP("SCRPW",$J,SDIV,1,SDS,"PT",SDPT,SDDT)) Q:'SDDT  S SDVS(SDIV)=SDVS(SDIV)+1
"RTN","SCRPW15",34,0)
 Q:SD("FMT")="S"
"RTN","SCRPW15",35,0)
 S SDD=0 F  S SDD=$O(^TMP("SCRPW",$J,SDIV,1,SDS,"DX",SDD)) Q:'SDD  S SDTOT=$G(^TMP("SCRPW",$J,SDIV,1,SDS,"DX",SDD,"PRI"))+$G(^TMP("SCRPW",$J,SDIV,1,SDS,"DX",SDD,"SEC")),^TMP("SCRPW",$J,SDIV,1,SDS,"DXTOT",SDTOT,SDD)=""
"RTN","SCRPW15",36,0)
 S SDP=0 F  S SDP=$O(^TMP("SCRPW",$J,SDIV,1,SDS,"PROC",SDP)) Q:'SDP  S SDTOT=^TMP("SCRPW",$J,SDIV,1,SDS,"PROC",SDP),^TMP("SCRPW",$J,SDIV,1,SDS,"PROCTOT",SDTOT,SDP)=""
"RTN","SCRPW15",37,0)
 Q
"RTN","SCRPW15",38,0)
 ;
"RTN","SCRPW15",39,0)
ORD() ;Produce sort value
"RTN","SCRPW15",40,0)
 Q:SD("ORD")="V" SDVS(SDIV)  Q:SD("ORD")="U" SDUN(SDIV)  Q:SD("ORD")="E" ^TMP("SCRPW",$J,SDIV,1,SDS,"ENC")  Q $$SNAME()
"RTN","SCRPW15",41,0)
 ;
"RTN","SCRPW15",42,0)
HDR(SDPG) ;Print page header
"RTN","SCRPW15",43,0)
 D STOP^SCRPW14 Q:SDOUT
"RTN","SCRPW15",44,0)
 I $E(IOST)="C",'SDFFS N DIR S DIR(0)="E" D ^DIR S SDOUT=Y'=1 Q:SDOUT
"RTN","SCRPW15",45,0)
 S:$G(SDPG) SDPAGE=+SDPG W:'SDFFS $$XY^SCRPW50(IOF,1,0) W:$X $$XY^SCRPW50("",0,0) W SDLINE,!?22,"<*>  ENCOUNTER ACTIVITY REPORT  <*>"
"RTN","SCRPW15",46,0)
 N SDI S SDI=0 F  S SDI=$O(SDTIT(SDI)) Q:'SDI  W !?(80-$L(SDTIT(SDI))\2),SDTIT(SDI)
"RTN","SCRPW15",47,0)
 I SDPAGE=1 W !,SDLINE D PVIEW(15,1)
"RTN","SCRPW15",48,0)
 W !,SDLINE,!,"Date printed: ",SDPNOW,?(74-$L(SDPAGE)),"Page: ",SDPAGE,!,SDLINE,! S SDPAGE=SDPAGE+1,SDFFS=0
"RTN","SCRPW15",49,0)
 Q:'$D(^TMP("SCRPW",$J,SDIV))
"RTN","SCRPW15",50,0)
 Q:$G(SDPG)["N"  I SD("FMT")="D",SDPAGE>2 W !,$S(SD("CAT")="C":"Clinic: ",SD("CAT")="P":"Provider: ",1:"Stop Code: "),$$SNAME(),"  (cont.)",! Q
"RTN","SCRPW15",51,0)
 W !,$S(SD("CAT")="C":"Clinic",SD("CAT")="P":"Provider",1:"Stop Code"),?40,"Encounters",?59,"Visits",?73,"Uniques",!,"------------------------------------",?40,"----------",?55,"----------",?70,"----------"
"RTN","SCRPW15",52,0)
 Q
"RTN","SCRPW15",53,0)
 ;
"RTN","SCRPW15",54,0)
RTOT ;Print report total
"RTN","SCRPW15",55,0)
 D:$Y>(IOSL-5) HDR() Q:SDOUT  W !!,"====================================",?40,"==========",?55,"==========",?70,"==========",!!,"REPORT TOTAL:",?40,$J(SDRPEN(SDIV),10),?55,$J(SDRPVS(SDIV),10),?70,$J(SDRPUN(SDIV),10) Q
"RTN","SCRPW15",56,0)
 ;
"RTN","SCRPW15",57,0)
T3 K SDTIT D DHDR^SCRPW40(1,.SDTIT) Q
"RTN","SCRPW15",58,0)
 ;
"RTN","SCRPW15",59,0)
PVIEW(SDCOL,SDSKIP) ;Print report parameters
"RTN","SCRPW15",60,0)
 ;Required input: SDCOL=column to position output
"RTN","SCRPW15",61,0)
 ;Required input: SDSKIP=1 to skip division data on output
"RTN","SCRPW15",62,0)
 D:'$G(SDSKIP) PDIV W !?SDCOL,"    Activity date range: " S Y=SD("BDT") X ^DD("DD") W Y," to " S Y=$P(SD("EDT"),".") X ^DD("DD") W Y
"RTN","SCRPW15",63,0)
 W !?(SDCOL+8),"Report category: ",$S(SD("CAT")="C":"CLINIC",SD("CAT")="P":"PROVIDER",1:"STOP CODE")," perspective",!?(SDCOL+10),"Output format: ",$S(SD("FMT")="S":"SUMMARY",1:"DETAIL")
"RTN","SCRPW15",64,0)
 I SD("FMT")="S" W !?(SDCOL+8),"Collation order: ",$S(SD("ORD")="A":"ALPHABETIC",SD("ORD")="E":"by ENCOUNTER TOTAL",SD("ORD")="V":"by VISIT TOTAL",1:"by UNIQUE TOTAL")
"RTN","SCRPW15",65,0)
 W !?(SDCOL+7),"Encounter status: " S X=$O(SD("STAT",0)) W $P(^SD(409.63,X,0),U) F  S X=$O(SD("STAT",X)) Q:'X  W !?(SDCOL+25),$P(^SD(409.63,X,0),U)
"RTN","SCRPW15",66,0)
 Q
"RTN","SCRPW15",67,0)
 ;
"RTN","SCRPW15",68,0)
PDIV I 'SDDIV W !?SDCOL,"Medical Center Division: ",$P(SDDIV,U,2) Q
"RTN","SCRPW15",69,0)
 N SDI S SDI=0 F  S SDI=$O(SDDIV(SDI)) Q:'SDI  W !?SDCOL,"Medical Center Division: ",SDDIV(SDI)
"RTN","SCRPW15",70,0)
 Q
"RTN","SCRPW15",71,0)
 ;
"RTN","SCRPW15",72,0)
SNAME() ;Produce item name
"RTN","SCRPW15",73,0)
 Q:SD("CAT")="C" $P($G(^SC(SDS,0),"UNKNOWN"),U)  Q:SD("CAT")="P" $P($G(^VA(200,SDS,0),"UNKNOWN"),U)
"RTN","SCRPW15",74,0)
 N X S X=$G(^DIC(40.7,SDS,0),"UNKNOWN^UNKNOWN"),X=$P(X,U,2)_" - "_$P(X,U) Q X
"RTN","SCRPW15",75,0)
 ;
"RTN","SCRPW15",76,0)
PRT ;Print data
"RTN","SCRPW15",77,0)
 I SD("FMT")="D",'$G(SDDET) D HDR(1) Q:SDOUT
"RTN","SCRPW15",78,0)
 D:$Y>(IOSL-4) HDR() Q:SDOUT  K SDDET W !,$$SNAME(),?40,$J(^TMP("SCRPW",$J,SDIV,1,SDS,"ENC"),10),?55,$J(^TMP("SCRPW",$J,SDIV,1,SDS,"VIS"),10),?70,$J(^TMP("SCRPW",$J,SDIV,1,SDS,"UNIQ"),10) I SD("FMT")="D" D DX Q:SDOUT  D PROC
"RTN","SCRPW15",79,0)
 Q
"RTN","SCRPW15",80,0)
 ;
"RTN","SCRPW15",81,0)
DX ;Print diagnosis information
"RTN","SCRPW15",82,0)
 D DXHD I '$D(^TMP("SCRPW",$J,SDIV,1,SDS,"DX")) W !!,"(No diagnosis information identified)" Q
"RTN","SCRPW15",83,0)
 S (SDT,SDTOT,SDTOT1,SDTOT2)="" F  S SDT=$O(^TMP("SCRPW",$J,SDIV,1,SDS,"DXTOT",SDT),-1) Q:SDT=""!SDOUT  S SDD=0 F  S SDD=$O(^TMP("SCRPW",$J,SDIV,1,SDS,"DXTOT",SDT,SDD)) Q:'SDD!SDOUT  D DX1
"RTN","SCRPW15",84,0)
 Q:SDOUT
"RTN","SCRPW15",85,0)
 W !,"====================================",?40,"==========",?55,"==========",?70,"==========",!,"TOTAL:",?40,$J(SDTOT1,10),?55,$J(SDTOT2,10),?70,$J(SDTOT,10) Q
"RTN","SCRPW15",86,0)
 ;
"RTN","SCRPW15",87,0)
DX1 ; 
"RTN","SCRPW15",88,0)
 ;D:$Y>(IOSL-6) HDR(),DXHD Q:SDOUT  S SDD0=^ICD9(SDD,0),SDT1=+$G(^TMP("SCRPW",$J,SDIV,1,SDS,"DX",SDD,"PRI")),SDT2=+$G(^TMP("SCRPW",$J,SDIV,1,SDS,"DX",SDD,"SEC")),SDTOT1=SDTOT1+SDT1,SDTOT2=SDTOT2+SDT2,SDTOT=SDTOT+SDT1+SDT2
"RTN","SCRPW15",89,0)
 ;W !,$P(SDD0,U),?7,$P(SDD0,U,3),?40,$J(SDT1,10),?55,$J(SDT2,10),?70,$J((SDT1+SDT2),10) Q
"RTN","SCRPW15",90,0)
 ;
"RTN","SCRPW15",91,0)
 D:$Y>(IOSL-6) HDR(),DXHD Q:SDOUT  S SDD0=$$ICDDX^ICDCODE(SDD),SDT1=+$G(^TMP("SCRPW",$J,SDIV,1,SDS,"DX",SDD,"PRI")),SDT2=+$G(^TMP("SCRPW",$J,SDIV,1,SDS,"DX",SDD,"SEC")),SDTOT1=SDTOT1+SDT1,SDTOT2=SDTOT2+SDT2,SDTOT=SDTOT+SDT1+SDT2
"RTN","SCRPW15",92,0)
 W !,$P(SDD0,U,2),?7,$P(SDD0,U,4),?40,$J(SDT1,10),?55,$J(SDT2,10),?70,$J((SDT1+SDT2),10) Q
"RTN","SCRPW15",93,0)
 ;
"RTN","SCRPW15",94,0)
DXHD ;Diagnosis sub-header
"RTN","SCRPW15",95,0)
 Q:SDOUT  W !!,"Diagnosis",?43,"Primary",?56,"Secondary",?75,"Total",!,"------------------------------------",?40,"----------",?55,"----------",?70,"----------" Q
"RTN","SCRPW15",96,0)
 ;
"RTN","SCRPW15",97,0)
PROC ;Print procedure information
"RTN","SCRPW15",98,0)
 D:$Y>(IOSL-8) HDR() Q:SDOUT  D PROCHD I '$D(^TMP("SCRPW",$J,SDIV,1,SDS,"PROC")) W !!?12,"(No procedure information identified)" Q
"RTN","SCRPW15",99,0)
 S (SDT,SDTOT)="" F  S SDT=$O(^TMP("SCRPW",$J,SDIV,1,SDS,"PROCTOT",SDT),-1) Q:SDT=""!SDOUT  S SDP=0 F  S SDP=$O(^TMP("SCRPW",$J,SDIV,1,SDS,"PROCTOT",SDT,SDP)) Q:'SDP!SDOUT  D PROC1
"RTN","SCRPW15",100,0)
 Q:SDOUT
"RTN","SCRPW15",101,0)
 W !?12,"===================================",?55,"==========",!?12,"PROCEDURE TOTAL:",?55,$J(SDTOT,10) Q
"RTN","SCRPW15",102,0)
 ;
"RTN","SCRPW15",103,0)
PROC1 ;D:$Y>(IOSL-6) HDR(),PROCHD Q:SDOUT  S SDP0=^ICPT(SDP,0),SDTOT=SDTOT+SDT W !?12,$P(SDP0,U),?18,$P(SDP0,U,2),?55,$J(SDT,10) Q
"RTN","SCRPW15",104,0)
 N CPTCODE,CPTTEXT,SDMOD,SDMODQTY
"RTN","SCRPW15",105,0)
 D:$Y>(IOSL-6) HDR(),PROCHD Q:SDOUT
"RTN","SCRPW15",106,0)
 S SDP0=$$CPT^ICPTCOD(SDP,,1)
"RTN","SCRPW15",107,0)
 Q:SDP0'>0
"RTN","SCRPW15",108,0)
 S CPTCODE=$P(SDP0,U,2)
"RTN","SCRPW15",109,0)
 S CPTTEXT=$P(SDP0,U,3)
"RTN","SCRPW15",110,0)
 S SDTOT=SDTOT+SDT
"RTN","SCRPW15",111,0)
 ;print procedure, desc, quantity
"RTN","SCRPW15",112,0)
 I LINEFLAG W !
"RTN","SCRPW15",113,0)
 W !?12,CPTCODE,?18,CPTTEXT,?55,$J(SDT,10)
"RTN","SCRPW15",114,0)
 S LINEFLAG=1
"RTN","SCRPW15",115,0)
 ;build array to hold ranked modifiers
"RTN","SCRPW15",116,0)
 K ^TMP("SCRPW",$J,SDIV,1,SDS,"PROC",2)
"RTN","SCRPW15",117,0)
 S SDMOD=""
"RTN","SCRPW15",118,0)
 S SDPROC=SDP
"RTN","SCRPW15",119,0)
 F  S SDMOD=$O(^TMP("SCRPW",$J,SDIV,1,SDS,"PROC",SDPROC,SDMOD)) Q:SDMOD=""  D
"RTN","SCRPW15",120,0)
 . S SDMODQTY=$G(^TMP("SCRPW",$J,SDIV,1,SDS,"PROC",SDPROC,SDMOD))
"RTN","SCRPW15",121,0)
 . S ^TMP("SCRPW",$J,SDIV,1,SDS,"PROC",2,SDMODQTY,SDMOD)=""
"RTN","SCRPW15",122,0)
 . Q
"RTN","SCRPW15",123,0)
 ; loop through ranked modifiers
"RTN","SCRPW15",124,0)
 S SDMODQTY=""
"RTN","SCRPW15",125,0)
 F  S SDMODQTY=$O(^TMP("SCRPW",$J,SDIV,1,SDS,"PROC",2,SDMODQTY),-1) Q:SDMODQTY=""  D
"RTN","SCRPW15",126,0)
 . S SDMOD=""
"RTN","SCRPW15",127,0)
 . F  S SDMOD=$O(^TMP("SCRPW",$J,SDIV,1,SDS,"PROC",2,SDMODQTY,SDMOD),-1) Q:SDMOD=""  D
"RTN","SCRPW15",128,0)
 .. D:$Y>(IOSL-6) HDR(),PROCHD Q:SDOUT
"RTN","SCRPW15",129,0)
 .. N MODINFO,MODCODE,MODTEXT,SDMQTY2
"RTN","SCRPW15",130,0)
 .. S MODINFO=$$MOD^ICPTMOD(SDMOD,"I",,1)
"RTN","SCRPW15",131,0)
 .. I +MODINFO'>0 Q
"RTN","SCRPW15",132,0)
 .. S MODCODE=$P(MODINFO,"^",2)
"RTN","SCRPW15",133,0)
 .. ; format for printing
"RTN","SCRPW15",134,0)
 .. S MODCODE=$S($L(MODCODE)=1:"  "_MODCODE,1:" "_MODCODE)
"RTN","SCRPW15",135,0)
 .. S MODTEXT=$E($P(MODINFO,"^",3),1,32)
"RTN","SCRPW15",136,0)
 .. ;print modifier, desc, and quantity
"RTN","SCRPW15",137,0)
 .. S SDMQTY2="-"_SDMODQTY
"RTN","SCRPW15",138,0)
 .. W !,?13,"-",MODCODE,?18,MODTEXT,?55,$J(SDMQTY2,10)
"RTN","SCRPW15",139,0)
 .. Q
"RTN","SCRPW15",140,0)
 . S LINEFLAG=1
"RTN","SCRPW15",141,0)
 . Q
"RTN","SCRPW15",142,0)
 K ^TMP("SCRPW",$J,SDIV,1,SDS,"PROC",2)
"RTN","SCRPW15",143,0)
 Q
"RTN","SCRPW15",144,0)
 ;
"RTN","SCRPW15",145,0)
PROCHD S LINEFLAG=0 Q:SDOUT  W !!?12,"Procedures/Modifiers",?60,"Total",!?12,"--------------------------------------",?55,"----------" Q
"RTN","SCRPW15",146,0)
 ;
"RTN","SCRPW15",147,0)
NONE ;List items with no activity
"RTN","SCRPW15",148,0)
 S SDS=0 F  S SDS=$O(SD("LIST",SDS)) Q:'SDS!SDOUT  I '$D(^TMP("SCRPW",$J,SDIV,1,SDS)) S SDN=1 D HDR("1N") Q
"RTN","SCRPW15",149,0)
 I $G(SDN) S SDS=0 F  S SDS=$O(SD("LIST",SDS)) Q:'SDS!SDOUT  I '$D(^TMP("SCRPW",$J,SDIV,1,SDS)) D:$Y>(IOSL-4) HDR("N") Q:SDOUT  D NO1
"RTN","SCRPW15",150,0)
 Q
"RTN","SCRPW15",151,0)
 ;
"RTN","SCRPW15",152,0)
NO1 W !!,"No activity found for ",$S(SD("CAT")="C":"clinic",SD("CAT")="P":"provider",1:"stop code"),": ",$$SNAME() Q
"RTN","SCRPW24")
0^4^B72968652
"RTN","SCRPW24",1,0)
SCRPW24 ;RENO/KEITH - ACRP Ad Hoc Report (cont.) ;06/19/99
"RTN","SCRPW24",2,0)
 ;;5.3;Scheduling;**144,163,180,254,243,295**;AUG 13, 1993
"RTN","SCRPW24",3,0)
 ;06/19/99 ACS - Added CPT modifier API calls
"RTN","SCRPW24",4,0)
 ;
"RTN","SCRPW24",5,0)
APAC(SDX) ;Get all procedure codes
"RTN","SCRPW24",6,0)
 ;K SDX N SDY,SDI D GETCPT^SDOE(SDOE,"SDY") S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  S SDX=$P(SDY(SDI),U),SDX=SDX_U_$P($G(^ICPT(+SDX,0)),U)_U_$P(SDY(SDI),U,16) I $L($P(SDX,U,2)) D APOTR S SDX(SDI)=SDX
"RTN","SCRPW24",7,0)
 D APAC^SCRPW241(.SDX)
"RTN","SCRPW24",8,0)
 D NX Q
"RTN","SCRPW24",9,0)
 ;
"RTN","SCRPW24",10,0)
APOTR ;Transform procedure external value
"RTN","SCRPW24",11,0)
 ;S $P(SDX,U,2)=$P(SDX,U,2)_" "_$P(^ICPT(+SDX,0),U,2) Q
"RTN","SCRPW24",12,0)
 D APOTR^SCRPW241(.SDX)
"RTN","SCRPW24",13,0)
 Q
"RTN","SCRPW24",14,0)
 ;
"RTN","SCRPW24",15,0)
APAP(SDX) ;Get ambulatory procedures (no E&M codes)
"RTN","SCRPW24",16,0)
 ;K SDX N SDY,SDI D GETCPT^SDOE(SDOE,"SDY") S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  S SDX=$P(SDY(SDI),U) I '$D(^IBE(357.69,"B",SDX)) S SDX=SDX_U_$P($G(^ICPT(+SDX,0)),U) I $L($P(SDX,U,2)) D APOTR S SDX(SDI)=SDX
"RTN","SCRPW24",17,0)
 D APAP^SCRPW241(.SDX)
"RTN","SCRPW24",18,0)
 D NX Q
"RTN","SCRPW24",19,0)
 ;
"RTN","SCRPW24",20,0)
APEM(SDX) ;Get evaluation and management codes
"RTN","SCRPW24",21,0)
 ;K SDX N SDY,SDI D GETCPT^SDOE(SDOE,"SDY") S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  S SDX=$P(SDY(SDI),U) I $D(^IBE(357.69,"B",SDX)) S SDX=SDX_U_$P($G(^ICPT(+SDX,0)),U) I $L($P(SDX,U,2)) D APOTR S SDX(SDI)=SDX
"RTN","SCRPW24",22,0)
 D APEM^SCRPW241(.SDX)
"RTN","SCRPW24",23,0)
 D NX Q
"RTN","SCRPW24",24,0)
 ;
"RTN","SCRPW24",25,0)
CLCG(SDX) ;Get clinic group
"RTN","SCRPW24",26,0)
 K SDX S SDX=$P(SDOE0,U,4) I SDX S SDX=$P($G(^SC(SDX,0)),U,31) I SDX,$D(^SD(409.67,SDX)) S SDX=SDX_U_$P(^SD(409.67,SDX,0),U) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",27,0)
 D NX Q
"RTN","SCRPW24",28,0)
 ;
"RTN","SCRPW24",29,0)
CLCN(SDX) ;Get clinic name
"RTN","SCRPW24",30,0)
 K SDX S SDX=$P(SDOE0,U,4) I SDX S SDX=SDX_U_$P($G(^SC(SDX,0)),U) I $L($P(SDX,U,2)) S SDX(1)=SDX
"RTN","SCRPW24",31,0)
 D NX Q
"RTN","SCRPW24",32,0)
 ;
"RTN","SCRPW24",33,0)
CLCS(SDX) ;Get clinic service
"RTN","SCRPW24",34,0)
 K SDX S SDX=$P(SDOE0,U,4) I SDX S SDX=$P($G(^SC(SDX,0)),U,8) D FST(.SDX,44,9) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",35,0)
 D NX Q
"RTN","SCRPW24",36,0)
 ;
"RTN","SCRPW24",37,0)
DXAD(SDX) ;Get all diagnoses
"RTN","SCRPW24",38,0)
 K SDX N SDY,SDI D GETDX^SDOE(SDOE,"SDY") S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  S SDX=$P(SDY(SDI),U) I SDX S SDX=SDX_U_$P($$ICDDX^ICDCODE(+SDX),U,2) I $L($P(SDX,U,2)) D DXOTR S SDX(SDI)=SDX
"RTN","SCRPW24",39,0)
 D NX Q
"RTN","SCRPW24",40,0)
 ;
"RTN","SCRPW24",41,0)
DXOTR ;Transform diagnosis external value
"RTN","SCRPW24",42,0)
 S SDX=SDX_" "_$P($$ICDDX^ICDCODE(+SDX),U,4) Q
"RTN","SCRPW24",43,0)
 ;
"RTN","SCRPW24",44,0)
DXGS(SDX,SDZ) ;Get GAF score
"RTN","SCRPW24",45,0)
 K SDX N SDI,SDY S SDY=$S(SDZ="H":$P($P(SDOE0,U),"."),1:DT)_.9999,SDY=9999999-SDY,SDY=$O(^YSD(627.8,"AX5",$P(SDOE0,U,2),SDY))
"RTN","SCRPW24",46,0)
 I SDY S SDI=$O(^YSD(627.8,"AX5",$P(SDOE0,U,2),SDY,""),-1) I SDI S SDX=+$P($G(^YSD(627.8,SDI,60)),U,3) I SDX S SDX(1)=SDX_U_SDX
"RTN","SCRPW24",47,0)
 D NX Q
"RTN","SCRPW24",48,0)
 ;
"RTN","SCRPW24",49,0)
DXGSQ(SDI) ;Set up GAF help text
"RTN","SCRPW24",50,0)
 S SDIRQ("?",1)="Specify a value representing the Global Assessment of Functioning (GAF) score."
"RTN","SCRPW24",51,0)
 I SDI="H" S SDIRQ("?")="Status as of the encounter date/time is used to determine 'historical' values."
"RTN","SCRPW24",52,0)
 I SDI="C" S SDIRQ("?")="Status as of the report run date is used to determine 'current' values."
"RTN","SCRPW24",53,0)
 Q
"RTN","SCRPW24",54,0)
 ;
"RTN","SCRPW24",55,0)
DXPD(SDX) ;Get primary diagnosis
"RTN","SCRPW24",56,0)
 K SDX N SDY,SDI D GETDX^SDOE(SDOE,"SDY") S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  S SDX=$P(SDY(SDI),U) I SDX,$P(SDY(SDI),U,12)="P" S SDX=SDX_U_$P($$ICDDX^ICDCODE(+SDX),U,2) I $L($P(SDX,U,3)) D DXOTR S SDX(SDI)=SDX Q
"RTN","SCRPW24",57,0)
 D NX Q
"RTN","SCRPW24",58,0)
 ;
"RTN","SCRPW24",59,0)
DXSD(SDX) ;Get secondary diagnoses
"RTN","SCRPW24",60,0)
 K SDX N SDY,SDI D GETDX^SDOE(SDOE,"SDY") S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  S SDX=$P(SDY(SDI),U) I SDX,$P(SDY(SDI),U,12)'="P" S SDX=SDX_U_$P($$ICDDX^ICDCODE(+SDX),U,2) I $L($P(SDX,U,3)) D DXOTR S SDX(SDI)=SDX
"RTN","SCRPW24",61,0)
 D NX Q
"RTN","SCRPW24",62,0)
 ;
"RTN","SCRPW24",63,0)
ENED(SDX,SDZ) ;Get enrollment date
"RTN","SCRPW24",64,0)
 K SDX N SDY S SDY=$$ENROL($S(SDZ="H":+SDOE0,1:DT)) I SDY S (SDX,Y)=$P(SDY,U) X ^DD("DD") S SDX(1)=SDX_U_Y
"RTN","SCRPW24",65,0)
 D NX Q
"RTN","SCRPW24",66,0)
 ;
"RTN","SCRPW24",67,0)
ENEF(SDX,SDZ) ;Get enrollment effective date
"RTN","SCRPW24",68,0)
 K SDX N SDY S SDY=$$ENROL($S(SDZ="H":+SDOE0,1:DT)) I SDY S (SDX,Y)=$P(SDY,U,8) X ^DD("DD") S SDX(1)=SDX_U_Y
"RTN","SCRPW24",69,0)
 D NX Q
"RTN","SCRPW24",70,0)
 ;
"RTN","SCRPW24",71,0)
ENEP(SDX,SDZ) ;Get enrollment priority
"RTN","SCRPW24",72,0)
 K SDX N SDY S SDY=$$ENROL($S(SDZ="H":+SDOE0,1:DT)) I SDY S SDX=$P(SDY,U,7) D FST(.SDX,27.11,.07) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",73,0)
 D NX Q
"RTN","SCRPW24",74,0)
 ;
"RTN","SCRPW24",75,0)
ENES(SDX,SDZ) ;Get enrollment status
"RTN","SCRPW24",76,0)
 K SDX N SDY S SDY=$$ENROL($S(SDZ="H":+SDOE0,1:DT)) I SDY S SDX=$P(SDY,U,4),SDX=SDX_U_$$EXTERNAL^DILFD(27.11,.04,"F",SDX) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",77,0)
 D NX Q
"RTN","SCRPW24",78,0)
 ;
"RTN","SCRPW24",79,0)
ENFR(SDX,SDZ) ;Get enrollment facility received
"RTN","SCRPW24",80,0)
 K SDX N SDY S SDY=$$ENROL($S(SDZ="H":+SDOE0,1:DT)) I SDY S SDX=$P(SDY,U,6) I SDX S SDX=SDX_U_$P($G(^DIC(4,SDX,0)),U) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",81,0)
 D NX Q
"RTN","SCRPW24",82,0)
 ;
"RTN","SCRPW24",83,0)
ENSE(SDX,SDZ) ;Get enrollment source of enrollment
"RTN","SCRPW24",84,0)
 K SDX N SDY S SDY=$$ENROL($S(SDZ="H":+SDOE0,1:DT)) I SDY S SDX=$P(SDY,U,3) D FST(.SDX,27.11,.03) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",85,0)
 D NX Q
"RTN","SCRPW24",86,0)
 ;
"RTN","SCRPW24",87,0)
ENQ(SDZ) ;Set up help text for enrollment
"RTN","SCRPW24",88,0)
 I SDZ="H" S SDIRQ("?")="Enrollment status as of the encounter date/time is used for 'historical' values."
"RTN","SCRPW24",89,0)
 I SDZ="C" S SDIRQ("?")="Enrollment status as of the report run date is used for 'current' values."
"RTN","SCRPW24",90,0)
 Q
"RTN","SCRPW24",91,0)
 ;
"RTN","SCRPW24",92,0)
OEAT(SDX) ;Get encounter appointment type
"RTN","SCRPW24",93,0)
 K SDX S SDX=$P(SDOE0,U,10) I SDX S SDX=SDX_U_$P($G(^SD(409.1,SDX,0)),U) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",94,0)
 D NX Q
"RTN","SCRPW24",95,0)
 ;
"RTN","SCRPW24",96,0)
OEDV(SDX) ;Get encounter division
"RTN","SCRPW24",97,0)
 K SDX S SDX=$P(SDOE0,U,11) I SDX S SDX=SDX_U_$P($G(^DG(40.8,SDX,0)),U) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",98,0)
 D NX Q
"RTN","SCRPW24",99,0)
 ;
"RTN","SCRPW24",100,0)
OEEE(SDX) ;Get encounter eligibility
"RTN","SCRPW24",101,0)
 K SDX S SDX=$P(SDOE0,U,13) I SDX S SDX=SDX_U_$P($G(^DIC(8,SDX,0)),U) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",102,0)
 D NX Q
"RTN","SCRPW24",103,0)
 ;
"RTN","SCRPW24",104,0)
OEOP(SDX) ;Get encounter originating process type
"RTN","SCRPW24",105,0)
 K SDX S SDX=$P(SDOE0,U,8) D FST(.SDX,409.68,.08) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",106,0)
 D NX Q
"RTN","SCRPW24",107,0)
 ;
"RTN","SCRPW24",108,0)
OEPA(SDX) ;Get encounter patient
"RTN","SCRPW24",109,0)
 K SDX S DFN=$P(SDOE0,U,2) I DFN D DEM^VADPT I $L(VADM(1)) S SDX(1)=DFN_U_VADM(1)
"RTN","SCRPW24",110,0)
 D NX Q
"RTN","SCRPW24",111,0)
 ;
"RTN","SCRPW24",112,0)
OEES(SDX) ;Get encounter status
"RTN","SCRPW24",113,0)
 K SDX S SDX=$P(SDOE0,U,12) I SDX S SDX=SDX_U_$P($G(^SD(409.63,SDX,0)),U) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",114,0)
 D NX Q
"RTN","SCRPW24",115,0)
 ;
"RTN","SCRPW24",116,0)
OETS(SDX) ;Get transmission status
"RTN","SCRPW24",117,0)
 K SDX S SDX(1)=$$STX^SCRPW8(SDOE,SDOE0) Q
"RTN","SCRPW24",118,0)
 ;
"RTN","SCRPW24",119,0)
TSQ(DIR) ;Set up DIR array for transmission status question
"RTN","SCRPW24",120,0)
 K DIR S DIR("A")="Select transmission status",DIR("?")="This value represents the transmission status of the encounter record."
"RTN","SCRPW24",121,0)
 S DIR(0)="SO^0:Not checked-out;1:No transmission record;2:Not required, not transmitted;3:Rejected for transmission;4:Awaiting transmission;5:Transmitted, no acknowledgment;6:Transmitted, rejected;7:Transmitted, error;8:Transmitted, accepted"
"RTN","SCRPW24",122,0)
 Q
"RTN","SCRPW24",123,0)
 ;
"RTN","SCRPW24",124,0)
CLQ(DIR,SDZ) ;Set up DIR array for classification questions
"RTN","SCRPW24",125,0)
 K DIR S SDZ=$S(SDZ="A":"Agent Orange exposure",SDZ="I":"ionizing radiation exposure",SDZ="S":"service connected condition",1:"environmental contaminants exposure")
"RTN","SCRPW24",126,0)
 S DIR(0)="SO^1:YES;0:NO",DIR("A")="Treatment related to "_SDZ,DIR("?")="Indicates if treatment was related to "_SDZ Q
"RTN","SCRPW24",127,0)
 ;
"RTN","SCRPW24",128,0)
OECL(SDX,SDZ) ;Get classification values
"RTN","SCRPW24",129,0)
 K SDX N SDY S SDZ=$S(SDZ="A":1,SDZ="I":2,SDZ="S":3,SDZ="E":4,1:"") I SDZ D CLASK^SDCO2(SDOE,.SDY) S SDX=$P($G(SDY(SDZ)),U,2) I $L(SDX) S SDX(1)=$S(SDX=1:"1^YES",1:"0^NO")
"RTN","SCRPW24",130,0)
 D NX Q
"RTN","SCRPW24",131,0)
 ;
"RTN","SCRPW24",132,0)
OEOU(SDX) ;Get option used to create
"RTN","SCRPW24",133,0)
 K SDX S SDX=+$P(SDOE0,U,5),SDX=+$P($G(^AUPNVSIT(SDX,0)),U,24)
"RTN","SCRPW24",134,0)
 N SDY D GETS^DIQ(19,SDX,.01,"","SDY")
"RTN","SCRPW24",135,0)
 S SDX=SDX_U_SDY(19,SDX_",",.01) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",136,0)
 D NX Q
"RTN","SCRPW24",137,0)
 ;
"RTN","SCRPW24",138,0)
SUQ(DIR) ;Set up DIR() array for Scheduled/unscheduled question
"RTN","SCRPW24",139,0)
 K DIR S DIR("A")="Select outpatient activity type",DIR("?",1)="Only pre-scheduled appointments will be reflected as SCHEDULED.  All other",DIR("?",2)="types of activity (add/edits, registrations, walkins or unscheduled activity)"
"RTN","SCRPW24",140,0)
 S DIR("?")="will be reflected as UNSCHEDULED.",DIR(0)="SO^S:SCHEDULED;U:UNSCHEDULED" Q
"RTN","SCRPW24",141,0)
 ;
"RTN","SCRPW24",142,0)
OESU(SDX) ;Get scheduled/unscheduled status
"RTN","SCRPW24",143,0)
 N SDAP0 K SDX S SDX(1)=""
"RTN","SCRPW24",144,0)
 I $P(SDOE0,U,8)=1 D  Q:$L(SDX(1))
"RTN","SCRPW24",145,0)
 .S SDAP0=$G(^DPT(+$P(SDOE0,U,2),"S",+SDOE0,0))
"RTN","SCRPW24",146,0)
 .Q:$P(SDAP0,U,20)'=SDOE  Q:$P(SDAP0,U,7)=4
"RTN","SCRPW24",147,0)
 .S SDX(1)="S^SCHEDULED" Q
"RTN","SCRPW24",148,0)
 S SDX(1)="U^UNSCHEDULED" Q
"RTN","SCRPW24",149,0)
 ;
"RTN","SCRPW24",150,0)
PCPR(SDX,SDZ) ;Get primary care provider
"RTN","SCRPW24",151,0)
 ;Required input: SDZ="C" for current, "H" for historical
"RTN","SCRPW24",152,0)
 K SDX S SDX=$S(SDZ="C":$$OUTPTPR^SDUTL3(+$P(SDOE0,U,2)),1:$$OUTPTPR^SDUTL3(+$P(SDOE0,U,2),+$P(SDOE0,U))) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",153,0)
 D NX Q
"RTN","SCRPW24",154,0)
 ;
"RTN","SCRPW24",155,0)
PCTM(SDX,SDZ) ;Get priamry care team
"RTN","SCRPW24",156,0)
 ;Required input: SDZ="C" for current, "H" for historical
"RTN","SCRPW24",157,0)
 K SDX S SDX=$S(SDZ="C":$$OUTPTTM^SDUTL3(+$P(SDOE0,U,2)),1:$$OUTPTTM^SDUTL3(+$P(SDOE0,U,2),+$P(SDOE0,U))) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",158,0)
 D NX Q
"RTN","SCRPW24",159,0)
 ;
"RTN","SCRPW24",160,0)
PDPA(SDX) ;Get patient age
"RTN","SCRPW24",161,0)
 K SDX S DFN=$P(SDOE0,U,2) I DFN D DEM^VADPT I VADM(4)=+VADM(4) S SDX(1)=VADM(4)_U_VADM(4)
"RTN","SCRPW24",162,0)
 D NX Q
"RTN","SCRPW24",163,0)
 ;
"RTN","SCRPW24",164,0)
PDPS(SDX) ;Get patient sex
"RTN","SCRPW24",165,0)
 K SDX S DFN=$P(SDOE0,U,2) I DFN D DEM^VADPT I $L($P(VADM(5),U,2)) S SDX(1)=VADM(5)
"RTN","SCRPW24",166,0)
 D NX Q
"RTN","SCRPW24",167,0)
 ;
"RTN","SCRPW24",168,0)
PDSC(SDX) ;Get patient state/county
"RTN","SCRPW24",169,0)
 K SDX S DFN=$P(SDOE0,U,2) I DFN D ADD^VADPT I $L($P(VAPA(7),U,2)) S SDX(1)=$P(VAPA(5),U)_";"_$P(VAPA(7),U)_U_$P(VAPA(5),U,2)_" / "_$P(VAPA(7),U,2)
"RTN","SCRPW24",170,0)
 D NX Q
"RTN","SCRPW24",171,0)
 ;
"RTN","SCRPW24",172,0)
PDZC(SDX) ;Get patient zip code
"RTN","SCRPW24",173,0)
 K SDX S DFN=$P(SDOE0,U,2) I DFN D ADD^VADPT I $L(VAPA(6)) S SDX(1)=VAPA(6)_U_VAPA(6)
"RTN","SCRPW24",174,0)
 D NX Q
"RTN","SCRPW24",175,0)
 ;
"RTN","SCRPW24",176,0)
ENROL(SDATE)  ;Get enrollment record (most recent to encounter date)
"RTN","SCRPW24",177,0)
 N SDY,SDI,X1,X2,X,%Y S:SDATE#1=0 SDATE=SDATE+.9999 S SDI=0 F  S SDI=$O(^DGEN(27.11,"C",+$P(SDOE0,U,2),SDI)) Q:'SDI  S SDY=$G(^DGEN(27.11,SDI,0)),SDY(+SDY)=SDY
"RTN","SCRPW24",178,0)
 S SDI=$O(SDY(SDATE),-1) Q:'SDI ""  S X1=$P($P(SDOE0,U),"."),X2=SDI D ^%DTC Q SDY(SDI)
"RTN","SCRPW24",179,0)
 ;
"RTN","SCRPW24",180,0)
NX S:$D(SDX)<10 SDX(1)="~~~NONE~~~^~~~NONE~~~" Q
"RTN","SCRPW24",181,0)
 ;
"RTN","SCRPW24",182,0)
FST(SDX,SDFI,SDFE) ;Field set transform
"RTN","SCRPW24",183,0)
 Q:'$L(SDX)  N SDY,SDI D FIELD^DID(SDFI,SDFE,"","POINTER","SDY") S SDY=SDY("POINTER") F SDI=1:1:$L(SDY,";") I SDX=$P($P(SDY,";",SDI),":") S SDX=SDX_U_$P($P(SDY,";",SDI),":",2) Q
"RTN","SCRPW24",184,0)
 Q
"RTN","SCRPW46")
0^5^B81442245
"RTN","SCRPW46",1,0)
SCRPW46 ;RENO/KEITH/MLR - Outpatient Diagnosis/Procedure Search (cont.) ; 9/27/00 10:29am
"RTN","SCRPW46",2,0)
 ;;5.3;Scheduling;**144,180,199,295**;AUG 13, 1993
"RTN","SCRPW46",3,0)
 ;  *199* 
"RTN","SCRPW46",4,0)
 ;  - Creation of Division subscript in ^TMP after DFN to capture,
"RTN","SCRPW46",5,0)
 ;    display, & count multi-divisional patients in Summary Section.
"RTN","SCRPW46",6,0)
 ;  - Filtering out on Sub-header those Division names not having
"RTN","SCRPW46",7,0)
 ;    patients meeting search criteria.
"RTN","SCRPW46",8,0)
 ;
"RTN","SCRPW46",9,0)
PDIS ;Parameter display
"RTN","SCRPW46",10,0)
 D SUBT^SCRPW50("**** Report Parameters Selected ****")
"RTN","SCRPW46",11,0)
 W ! D PD1^SCRPW47(0) S SDOUT=0
"RTN","SCRPW46",12,0)
 ;
"RTN","SCRPW46",13,0)
PDIS1 K DIR
"RTN","SCRPW46",14,0)
 S DIR(0)="S^C:CONTINUE;R:RE-DISPLAY PARAMETERS;P:PRINT PARAMETERS;Q:QUIT"
"RTN","SCRPW46",15,0)
 S DIR("A")="Select report action"
"RTN","SCRPW46",16,0)
 S DIR("B")="CONTINUE"
"RTN","SCRPW46",17,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) S SDOUT=1 Q
"RTN","SCRPW46",18,0)
 Q:Y="C"  G:Y="R" PDIS I Y="Q" S SDOUT=1 Q
"RTN","SCRPW46",19,0)
 N ZTSAVE
"RTN","SCRPW46",20,0)
 F SDI="SDDIV","SDDIV(","SD(","SDPAR(","SDCRI(","SDFMT","SDAPF(" S ZTSAVE(SDI)=""
"RTN","SCRPW46",21,0)
 W ! D EN^XUTMDEVQ("PPRT^SCRPW46","Print Report Parameters",.ZTSAVE)
"RTN","SCRPW46",22,0)
 G PDIS1
"RTN","SCRPW46",23,0)
 ;
"RTN","SCRPW46",24,0)
PPRT ;Print report parameters
"RTN","SCRPW46",25,0)
 D:$E(IOST)="C" DISP0^SCRPW23
"RTN","SCRPW46",26,0)
 S SDTIT(1)="<*>  OUTPATIENT DIAGNOSTIC/PROCEDURE CODE SEARCH  <*>"
"RTN","SCRPW46",27,0)
 S SDTIT(2)="Report Search Parameters" D HINI,HDR
"RTN","SCRPW46",28,0)
 D:'SDOUT PD1^SCRPW47(0) I $E(IOST)="P",$D(ZTQUEUED) G EXIT^SCRPW47
"RTN","SCRPW46",29,0)
 Q  ;PPRT
"RTN","SCRPW46",30,0)
 ;
"RTN","SCRPW46",31,0)
STOP ;Check for stop task request
"RTN","SCRPW46",32,0)
 S:$D(ZTQUEUED) (SDOUT,ZTSTOP)=$S($$S^%ZTLOAD:1,1:0) Q
"RTN","SCRPW46",33,0)
 ;
"RTN","SCRPW46",34,0)
HINI ;Initialize header variables
"RTN","SCRPW46",35,0)
 S SDLINE="",$P(SDLINE,"-",(IOM+1))=""
"RTN","SCRPW46",36,0)
 D NOW^%DTC S Y=% X ^DD("DD") S SDPNOW=$P(Y,":",1,2),SDPAGE=1,SDFF=0 Q
"RTN","SCRPW46",37,0)
 ;
"RTN","SCRPW46",38,0)
HDR ;Print report header
"RTN","SCRPW46",39,0)
 I $E(IOST)="C",SDFF N DIR S DIR(0)="E" W ! D ^DIR S SDOUT=Y'=1 Q:SDOUT
"RTN","SCRPW46",40,0)
 D STOP Q:SDOUT
"RTN","SCRPW46",41,0)
 I SDFF!('SDFF&($E(IOST)="C")) W $$XY^SCRPW50(IOF,1,0)
"RTN","SCRPW46",42,0)
 I $X W $$XY^SCRPW50("",0,0)
"RTN","SCRPW46",43,0)
 N SDI W SDLINE S SDI=0
"RTN","SCRPW46",44,0)
 F  S SDI=$O(SDTIT(SDI)) Q:'SDI  W !?(IOM-$L(SDTIT(SDI))\2),SDTIT(SDI)
"RTN","SCRPW46",45,0)
 W !,SDLINE,!,"For date range: ",SD("PBDT")," to ",SD("PEDT")
"RTN","SCRPW46",46,0)
 W !,"Date printed: ",SDPNOW,?(IOM-6-$L(SDPAGE)),"Page: ",SDPAGE
"RTN","SCRPW46",47,0)
 W !,SDLINE S SDPAGE=SDPAGE+1,SDFF=1
"RTN","SCRPW46",48,0)
 Q  ;HDR
"RTN","SCRPW46",49,0)
 ;
"RTN","SCRPW46",50,0)
DHDR(SDIV,SDI,SDTIT) ;Set up division subheaders
"RTN","SCRPW46",51,0)
 ;Required input: SDIV=division ifn or '0' for summary
"RTN","SCRPW46",52,0)
 ;Required input: SDI=array number to start with
"RTN","SCRPW46",53,0)
 ;Required input: SDTIT=array to store subheaders in (pass by reference)
"RTN","SCRPW46",54,0)
 D  ;
"RTN","SCRPW46",55,0)
 . I 'SDIV S SDTIT(SDI)="Summary for "_$P(SDDIV,U,2) Q
"RTN","SCRPW46",56,0)
 . I SDDIV!($P(SDDIV,U,2)="ALL DIVISIONS") S SDTIT(SDI)="For division: "_SDIVN_" "_SDIVL(SDIVN) Q
"RTN","SCRPW46",57,0)
 . S SDTIT(SDI)="For facility: "_SDIVN Q
"RTN","SCRPW46",58,0)
 ;S SDTIT(SDI)=$S('SDIV:"Summary for "_$P(SDDIV,U,2),SDDIV!($P(SDDIV,U,2)="ALL DIVISIONS"):"For division: "_SDIVN_" "_SDIVL(SDIVN),1:"For facility: "_SDIVN)
"RTN","SCRPW46",59,0)
 ;
"RTN","SCRPW46",60,0)
 I 'SDIV,$P(SDDIV,U,2)="SELECTED DIVISIONS" N SDIVN S SDIVN="" D  Q
"RTN","SCRPW46",61,0)
 .F  S SDIVN=$O(SDDIV(SDIVN)) Q:SDIVN=""  S SDI=SDI+1,SDTIT(SDI)="Division: "_SDDIV(SDIVN)
"RTN","SCRPW46",62,0)
 .Q
"RTN","SCRPW46",63,0)
 ;
"RTN","SCRPW46",64,0)
 I 'SDIV,$P(SDDIV,U,2)="ALL DIVISIONS" D
"RTN","SCRPW46",65,0)
 .N SDIV S SDIV=0 F  S SDIV=$O(^TMP("SCRPW",$J,SDIV)) Q:'SDIV  D
"RTN","SCRPW46",66,0)
 .. Q:'$D(^TMP("SCRPW",$J,SDIV,2))
"RTN","SCRPW46",67,0)
 .. S SDI=SDI+1
"RTN","SCRPW46",68,0)
 .. S SDTIT(SDI)="Division: "_$P($G(^DG(40.8,SDIV,0)),U)_"  "_SDIV
"RTN","SCRPW46",69,0)
 .Q
"RTN","SCRPW46",70,0)
 Q
"RTN","SCRPW46",71,0)
 ;
"RTN","SCRPW46",72,0)
START ;Print report
"RTN","SCRPW46",73,0)
 K ^TMP("SCRPW",$J) S (SDOUT,SDSTOP)=0,SDMD="",SDMD=$O(SDDIV(SDMD)),SDMD=$O(SDDIV(SDMD)) S:$P(SDDIV,U,2)="ALL DIVISIONS" SDMD=1
"RTN","SCRPW46",74,0)
 ;Iterate through list of patient encounters
"RTN","SCRPW46",75,0)
 S DFN=0 F  S DFN=$O(^SCE("ADFN",DFN)) Q:'DFN  K SDPDIV S SDSTOP=SDSTOP+1 D:SDSTOP#100=0 STOP Q:SDOUT  D
"RTN","SCRPW46",76,0)
 .S SDT=SD("BDT") F  S SDT=$O(^SCE("ADFN",DFN,SDT)) Q:'SDT!SDOUT!(SDT>SD("EDT"))  D
"RTN","SCRPW46",77,0)
 ..S SDOE=0 F  S SDOE=$O(^SCE("ADFN",DFN,SDT,SDOE)) Q:'SDOE!SDOUT  D
"RTN","SCRPW46",78,0)
 ...S SDOE0=$$GETOE^SDOE(SDOE) S SDIV=$P(SDOE0,"^",11) Q:'SDIV!$P(SDOE0,"^",6)!'$$DIV()  S SDPDIV(SDIV)=""
"RTN","SCRPW46",79,0)
 ...;Build initial patient diagnosis/procedure lists
"RTN","SCRPW46",80,0)
 ...I $D(SD("LIST","D")) K SDLIST D GETDX^SDOE(SDOE,"SDLIST") S SDI=0 F  S SDI=$O(SDLIST(SDI)) Q:'SDI  D
"RTN","SCRPW46",81,0)
 ....S SDDX=$P(SDLIST(SDI),"^") S:SDDX ^TMP("SCRPW",$J,0,0,DFN,SDIV,"DX",SDDX)=""
"RTN","SCRPW46",82,0)
 ....Q
"RTN","SCRPW46",83,0)
 ...I $D(SD("LIST","P")) K SDLIST D GETCPT^SDOE(SDOE,"SDLIST") S SDI=0 F  S SDI=$O(SDLIST(SDI)) Q:'SDI  D
"RTN","SCRPW46",84,0)
 ....S SDCPT=$P(SDLIST(SDI),"^") S:SDCPT ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPT",SDCPT)=""
"RTN","SCRPW46",85,0)
 ....;Loop through modifiers and add to CPT array
"RTN","SCRPW46",86,0)
 .... N SDMODN,SDMOD  ; SDMODN=modifier node, SDMOD=mod pointer
"RTN","SCRPW46",87,0)
 .... S SDMODN=0
"RTN","SCRPW46",88,0)
 .... F  S SDMODN=+$O(SDLIST(SDI,1,SDMODN)) Q:'SDMODN  D
"RTN","SCRPW46",89,0)
 ..... S SDMOD=$P(SDLIST(SDI,1,SDMODN,0),"^",1)
"RTN","SCRPW46",90,0)
 ..... S:SDMOD ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPT",SDCPT,SDMOD)=""
"RTN","SCRPW46",91,0)
 ..... Q
"RTN","SCRPW46",92,0)
 .... Q
"RTN","SCRPW46",93,0)
 ...S:$P(SDFMT,"^")="E" ^TMP("SCRPW",$J,SDIV,1,DFN,SDIV,"ACT",SDT,SDOE)=SDOE0
"RTN","SCRPW46",94,0)
 ...S:$P(SDFMT,"^")="V" ^TMP("SCRPW",$J,SDIV,1,DFN,SDIV,"ACT",$P(SDT,"."))=""
"RTN","SCRPW46",95,0)
 ...S:$P(SDFMT,"^")="P" ^TMP("SCRPW",$J,SDIV,1,DFN,SDIV,"ACT")=""
"RTN","SCRPW46",96,0)
 ...Q
"RTN","SCRPW46",97,0)
 ..Q
"RTN","SCRPW46",98,0)
 .I '$D(^TMP("SCRPW",$J,0,0,DFN)) D  Q
"RTN","SCRPW46",99,0)
 ..N SDIV S SDIV="" F  S SDIV=$O(SDPDIV(SDIV)) Q:SDIV=""  K ^TMP("SCRPW",$J,SDIV,1,DFN)
"RTN","SCRPW46",100,0)
 ..Q
"RTN","SCRPW46",101,0)
 .;Build text lists for Diagnosis ranges if necessary
"RTN","SCRPW46",102,0)
 .I $D(SD("LIST","D","R")) D
"RTN","SCRPW46",103,0)
 .. N SDIV S SDIV="" F  S SDIV=$O(SDPDIV(SDIV)) Q:'SDIV  D
"RTN","SCRPW46",104,0)
 ... S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,0,0,DFN,SDIV,"DX",SDI)) Q:'SDI  D
"RTN","SCRPW46",105,0)
 ....S SDX=$$ICDDX^ICDCODE(SDI),SDX=$P(SDX,"^",2)_" "_$P(SDX,"^",4)
"RTN","SCRPW46",106,0)
 .... S:$L(SDX)>1 ^TMP("SCRPW",$J,0,0,DFN,SDIV,"DXR",SDX)=SDI
"RTN","SCRPW46",107,0)
 .;Building text list for Procedure ranges
"RTN","SCRPW46",108,0)
 .I $D(SD("LIST","P","R")) S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPT",SDI)) Q:'SDI  D
"RTN","SCRPW46",109,0)
 ..; SDI=CPT pointer, SDI2=mod ptr, SDX=CPT+desc, SDX2=mod+desc
"RTN","SCRPW46",110,0)
 ..; get CPT and description and build array entry
"RTN","SCRPW46",111,0)
 .. N CPTINFO,CPTCODE,CPTTEXT
"RTN","SCRPW46",112,0)
 .. S CPTINFO=$$CPT^ICPTCOD(SDI,,1)
"RTN","SCRPW46",113,0)
 .. Q:CPTINFO'>0
"RTN","SCRPW46",114,0)
 .. S CPTCODE=$P(CPTINFO,"^",2)
"RTN","SCRPW46",115,0)
 .. S CPTTEXT=$P(CPTINFO,"^",3)
"RTN","SCRPW46",116,0)
 .. S SDX=CPTCODE_" "_CPTTEXT
"RTN","SCRPW46",117,0)
 .. S:$L(SDX)>1 ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPTR",SDX)=SDI
"RTN","SCRPW46",118,0)
 ..;
"RTN","SCRPW46",119,0)
 ..; loop through mods in CPT array and call API to get mod code/desc
"RTN","SCRPW46",120,0)
 .. S SDI2="" F  S SDI2=$O(^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPT",SDI,SDI2)) Q:'SDI2  D
"RTN","SCRPW46",121,0)
 ... N MODINFO,MODCODE,MODTEXT
"RTN","SCRPW46",122,0)
 ... S MODINFO=$$MOD^ICPTMOD(SDI2,"I",,1)
"RTN","SCRPW46",123,0)
 ... Q:MODINFO'>0
"RTN","SCRPW46",124,0)
 ... S MODCODE=$P(MODINFO,"^",2)
"RTN","SCRPW46",125,0)
 ... S MODTEXT=$P(MODINFO,"^",3)
"RTN","SCRPW46",126,0)
 ... S SDX2=MODCODE_" "_MODTEXT
"RTN","SCRPW46",127,0)
 ... ; add mod code/desc to array
"RTN","SCRPW46",128,0)
 ... S:$L(SDX2)>1 ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPTR",SDX,SDX2)=SDI2
"RTN","SCRPW46",129,0)
 ... Q
"RTN","SCRPW46",130,0)
 ..Q
"RTN","SCRPW46",131,0)
 .;Iterate through criteria combine logic
"RTN","SCRPW46",132,0)
 .;Loop through secondary Division (SDIV) for multiple division episodes
"RTN","SCRPW46",133,0)
 . N SDIV S SDIV="" F  S SDIV=$O(SDPDIV(SDIV)) Q:SDIV=""  D
"RTN","SCRPW46",134,0)
 .. S SDCRI="" F  S SDCRI=$O(SDCRI(SDCRI)) Q:SDCRI=""  D
"RTN","SCRPW46",135,0)
 ... S SDCL=$TR($TR(SDCRI,"'",""),"&","") F SDI=1:1:$L(SDCL) S SDC=$E(SDCL,SDI) D:'$D(^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC))
"RTN","SCRPW46",136,0)
 ....;Build list of true items for each criteria element
"RTN","SCRPW46",137,0)
 .... S SDZ=$P(SDPAR(SDC),"^")
"RTN","SCRPW46",138,0)
 .... I SDZ="DL" S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,0,0,DFN,SDIV,"DX",SDI)) Q:'SDI  D
"RTN","SCRPW46",139,0)
 ..... S:$D(SDPAR(SDC,SDI)) ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC,SDI)=""
"RTN","SCRPW46",140,0)
 ..... Q
"RTN","SCRPW46",141,0)
 .... I SDZ="DR" S SDR1="",SDR1=$O(SDPAR(SDC,SDR1)),SDR2=$O(SDPAR(SDC,SDR1)),SDI="" D
"RTN","SCRPW46",142,0)
 ..... F  S SDI=$O(^TMP("SCRPW",$J,0,0,DFN,SDIV,"DXR",SDI)) Q:SDI=""  D
"RTN","SCRPW46",143,0)
 ...... I SDR1']SDI,SDI']SDR2 S ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC,SDI)=""  Q
"RTN","SCRPW46",144,0)
 ..... Q
"RTN","SCRPW46",145,0)
 .... I SDZ="PL" S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPT",SDI)) Q:'SDI  D
"RTN","SCRPW46",146,0)
 ..... I $D(SDPAR(SDC,SDI)) M ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC,SDI)=^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPT",SDI)
"RTN","SCRPW46",147,0)
 ..... Q
"RTN","SCRPW46",148,0)
 .... I SDZ="PR" S SDR1="",SDR1=$O(SDPAR(SDC,SDR1)),SDR2=$O(SDPAR(SDC,SDR1)),SDI="" D
"RTN","SCRPW46",149,0)
 ..... F  S SDI=$O(^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPTR",SDI)) Q:SDI=""  D
"RTN","SCRPW46",150,0)
 ...... I SDR1']SDI,SDI']SDR2 M ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC,SDI)=^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPTR",SDI)
"RTN","SCRPW46",151,0)
 ......Q
"RTN","SCRPW46",152,0)
 .....Q
"RTN","SCRPW46",153,0)
 ....S ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC)=($D(^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC))>0)_U_SDZ
"RTN","SCRPW46",154,0)
 .... Q
"RTN","SCRPW46",155,0)
 ...;Apply criteria combine logic
"RTN","SCRPW46",156,0)
 ...N A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z
"RTN","SCRPW46",157,0)
 ...F SDI=1:1:$L(SDCL) S SDC=$E(SDCL,SDI),@SDC=$P(^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC),"^")
"RTN","SCRPW46",158,0)
 ...;If combine logic is "true", move items to final list
"RTN","SCRPW46",159,0)
 ...I @SDCRI F SDI=1:1:$L(SDCL) S SDC=$E(SDCL,SDI),SDX=^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC) D
"RTN","SCRPW46",160,0)
 ....I SDX M ^TMP("SCRPW",$J,0,1,DFN,SDIV,$P(SDX,"^",2))=^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC)
"RTN","SCRPW46",161,0)
 ....Q
"RTN","SCRPW46",162,0)
 ...Q
"RTN","SCRPW46",163,0)
 .I '$D(^TMP("SCRPW",$J,0,1,DFN)) D  Q
"RTN","SCRPW46",164,0)
 ..S SDIV="" F  S SDIV=$O(SDPDIV(SDIV)) Q:SDIV=""  K ^TMP("SCRPW",$J,SDIV,1,DFN)
"RTN","SCRPW46",165,0)
 ..Q
"RTN","SCRPW46",166,0)
 .;Move item ifn lists to text lists
"RTN","SCRPW46",167,0)
 .N SDIV S SDIV="" F  S SDIV=$O(SDPDIV(SDIV)) Q:SDIV=""  D
"RTN","SCRPW46",168,0)
 .. S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,0,1,DFN,SDIV,"DL",SDI)) Q:'SDI  D
"RTN","SCRPW46",169,0)
 ... S SDX=$$ICDDX^ICDCODE(SDI),SDX=$P(SDX,"^",2)_" "_$P(SDX,"^",4) S:$L(SDX)>1 ^TMP("SCRPW",$J,0,1,DFN,SDIV,"DR",SDX)=$G(SDT)
"RTN","SCRPW46",170,0)
        ... Q
"RTN","SCRPW46",171,0)
 .N SDIV S SDIV="" F  S SDIV=$O(SDPDIV(SDIV)) Q:SDIV=""  D
"RTN","SCRPW46",172,0)
 .. S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,0,1,DFN,SDIV,"PL",SDI)) Q:'SDI  D
"RTN","SCRPW46",173,0)
 ... N CPTINFO,CPTCODE,CPTTEXT
"RTN","SCRPW46",174,0)
 ... S CPTINFO=$$CPT^ICPTCOD(SDI,,1)
"RTN","SCRPW46",175,0)
 ... Q:CPTINFO'>0
"RTN","SCRPW46",176,0)
 ... S CPTCODE=$P(CPTINFO,"^",2)
"RTN","SCRPW46",177,0)
 ... S CPTTEXT=$P(CPTINFO,"^",3)
"RTN","SCRPW46",178,0)
 ... S SDX=CPTCODE_" "_CPTTEXT
"RTN","SCRPW46",179,0)
 ... S:$L(SDX)>1 ^TMP("SCRPW",$J,0,1,DFN,SDIV,"PR",SDX)=""
"RTN","SCRPW46",180,0)
 ... ;
"RTN","SCRPW46",181,0)
 ... ;loop through mods in CPT array and call API to get mod code/desc
"RTN","SCRPW46",182,0)
 ... S SDI2=""
"RTN","SCRPW46",183,0)
 ... F  S SDI2=$O(^TMP("SCRPW",$J,0,1,DFN,SDIV,"PL",SDI,SDI2)) Q:'SDI2  D
"RTN","SCRPW46",184,0)
 .... N MODINFO,MODCODE,MODTEXT
"RTN","SCRPW46",185,0)
 .... S MODINFO=$$MOD^ICPTMOD(SDI2,"I",,1)
"RTN","SCRPW46",186,0)
 .... Q:MODINFO'>0
"RTN","SCRPW46",187,0)
 .... S MODCODE=$P(MODINFO,"^",2)
"RTN","SCRPW46",188,0)
 .... S MODTEXT=$P(MODINFO,"^",3)
"RTN","SCRPW46",189,0)
 .... S SDX2=MODCODE_" "_MODTEXT
"RTN","SCRPW46",190,0)
 .... ; add mod code/desc to array
"RTN","SCRPW46",191,0)
 .... S:$L(SDX2)>1 ^TMP("SCRPW",$J,0,1,DFN,SDIV,"PR",SDX,SDX2)=""
"RTN","SCRPW46",192,0)
 .... Q 
"RTN","SCRPW46",193,0)
 ...Q
"RTN","SCRPW46",194,0)
 . ; delete procedure list array
"RTN","SCRPW46",195,0)
 . N SDIV S SDIV="" F  S SDIV=$O(SDPDIV(SDIV)) Q:SDIV=""  D
"RTN","SCRPW46",196,0)
 ..;Merge activity list
"RTN","SCRPW46",197,0)
 .. M ^TMP("SCRPW",$J,SDIV,1,DFN,SDIV,"ACT")=^TMP("SCRPW",$J,SDIV,0,DFN,SDIV,"ACT")
"RTN","SCRPW46",198,0)
 ..;Kill scratch list, merge to summary global if multidivisional
"RTN","SCRPW46",199,0)
 ..I SDMD,SDFMT'="P" M ^TMP("SCRPW",$J,0,1,DFN,SDIV,"ACT")=^TMP("SCRPW",$J,SDIV,1,DFN,SDIV,"ACT")
"RTN","SCRPW46",200,0)
 ..;Delete scratch levels and arrays after merge
"RTN","SCRPW46",201,0)
 .. K ^TMP("SCRPW",$J,0,1,DFN,"DL")
"RTN","SCRPW46",202,0)
 .. K ^TMP("SCRPW",$J,0,1,DFN,"PL")
"RTN","SCRPW46",203,0)
 ..Q
"RTN","SCRPW46",204,0)
 .Q
"RTN","SCRPW46",205,0)
 ;Delete 0,0 scratch level prior to printing
"RTN","SCRPW46",206,0)
 K ^TMP("SCRPW",$J,0,0)
"RTN","SCRPW46",207,0)
 G:SDOUT EXIT^SCRPW47 G ^SCRPW47
"RTN","SCRPW46",208,0)
 ;
"RTN","SCRPW46",209,0)
DIV() ;Check division
"RTN","SCRPW46",210,0)
 Q:'SDDIV 1  Q $D(SDDIV(+SDIV))
"RTN","SCRPW57")
0^6^B27385265
"RTN","SCRPW57",1,0)
SCRPW57 ;RENO/KEITH - Most Frequent 50 ICD-9-CM Codes (OP7) ; 5/6/03 1:18pm
"RTN","SCRPW57",2,0)
 ;;5.3;Scheduling;**144,295**;AUG 13, 1993
"RTN","SCRPW57",3,0)
 D RQUE^SCRPW50("START^SCRPW57","Most Frequent 50 ICD-9-CM Codes (OP7)",1) Q
"RTN","SCRPW57",4,0)
 ;
"RTN","SCRPW57",5,0)
START ;Print report
"RTN","SCRPW57",6,0)
 K ^TMP("SCRPW",$J) S (SDSTOP,SDOUT)=0,SDT=SD("FYD")
"RTN","SCRPW57",7,0)
 F  S SDT=$O(^SCE("B",SDT)) Q:'SDT!SDOUT!(SDT>SD("EDT"))  S SDOE=0 F  S SDOE=$O(^SCE("B",SDT,SDOE)) Q:'SDOE!SDOUT  S SDOE0=$$GETOE^SDOE(SDOE),SDIV=$P(SDOE0,U,11) I $$VALID() D SET(SDIV) D:SDMD SET(0)
"RTN","SCRPW57",8,0)
 G:SDOUT EXIT S (SDVCT,SDIV)=""
"RTN","SCRPW57",9,0)
 F  S SDIV=$O(^TMP("SCRPW",$J,SDIV)) Q:SDIV=""  D STOP,DLIST Q:SDOUT  D
"RTN","SCRPW57",10,0)
 .S DFN=0 F  S DFN=$O(^TMP("SCRPW",$J,SDIV,0,"LIST",DFN)) Q:'DFN  D
"RTN","SCRPW57",11,0)
 ..S SDDX=0 F  S SDDX=$O(^TMP("SCRPW",$J,SDIV,0,"LIST",DFN,SDDX)) Q:'SDDX  S SDPT="" F  S SDPT=$O(^TMP("SCRPW",$J,SDIV,0,"LIST",DFN,SDDX,SDPT)) Q:SDPT=""  D
"RTN","SCRPW57",12,0)
 ...S $P(^TMP("SCRPW",$J,SDIV,0,SDDX,SDPT),U,2)=$P($G(^TMP("SCRPW",$J,SDIV,0,SDDX,SDPT)),U,2)+1
"RTN","SCRPW57",13,0)
 ...S:$D(^TMP("SCRPW",$J,SDIV,0,"LIST",DFN,SDDX,SDPT,"P")) $P(^TMP("SCRPW",$J,SDIV,0,SDDX,SDPT),U)=$P($G(^TMP("SCRPW",$J,SDIV,0,SDDX,SDPT)),U)+1
"RTN","SCRPW57",14,0)
 ...Q
"RTN","SCRPW57",15,0)
 ..Q
"RTN","SCRPW57",16,0)
 .S SDDX=0 F  S SDDX=$O(^TMP("SCRPW",$J,SDIV,0,SDDX)) Q:'SDDX  S SDI=^TMP("SCRPW",$J,SDIV,0,SDDX),^TMP("SCRPW",$J,SDIV,1,SDI,SDDX)=""
"RTN","SCRPW57",17,0)
 .Q
"RTN","SCRPW57",18,0)
 G:SDOUT EXIT S SDLINE="",$P(SDLINE,"-",(IOM+1))="" D NOW^%DTC S Y=% X ^DD("DD") S SDPNOW=$P(Y,":",1,2),SDTIT(1)="<*>  MOST FREQUENT 50 ICD-9-CM CODES (OP7)  <*>",SDPG=0 D:$E(IOST)="C" DISP0^SCRPW23
"RTN","SCRPW57",19,0)
 I '$D(^TMP("SCRPW",$J)) S SDPAGE=1,SDX="No activity found within report parameters." D HDR G:SDOUT EXIT W !!?(IOM-$L(SDX)\2),SDX G EXIT
"RTN","SCRPW57",20,0)
 G:SDOUT EXIT S SDIVN="" F  S SDIVN=$O(SDIV(SDIVN)) Q:SDIVN=""!SDOUT  D DPRT(SDIV(SDIVN))
"RTN","SCRPW57",21,0)
 G:SDOUT EXIT D:SDVCT>1 DPRT(0)
"RTN","SCRPW57",22,0)
EXIT I $E(IOST)="C",'SDOUT N DIR S DIR(0)="E" D ^DIR
"RTN","SCRPW57",23,0)
 K ^TMP("SCRPW",$J),%,%H,%I,DIR,DFN,SD,SDDX,SDDXP,SDDIV,SDFL,SDI,SDII,SDIII,SDIV,SDIVN,SDLINE,SDMD,SDOE,SDOE0,SDOUT,SDPAGE,SDPG,SDPNOW,SDDIAG,SDPRTY,SDPT,SDPTN,SDPTV,SDSTOP,SDT,SDTIT,SDV,SDVCT,SDX,X,Y Q
"RTN","SCRPW57",24,0)
 ;
"RTN","SCRPW57",25,0)
DPRT(SDV) ;Print division
"RTN","SCRPW57",26,0)
 ;Required input: SDV=division ifn or '0' for combined divisions
"RTN","SCRPW57",27,0)
 I SDV S SDTIT(2)="For "_$S(SDDIV["DIVISIONS":"division",1:"facility")_": "_SDIVN
"RTN","SCRPW57",28,0)
 I 'SDV S SDTIT(2)="Report for: "_$P(SDDIV,U,2) D
"RTN","SCRPW57",29,0)
 .S SDI=2,SDIVN="" F  S SDIVN=$O(SDIV(SDIVN)) Q:SDIVN=""  S SDI=SDI+1,SDTIT(SDI)=$J("Division: ",$L(SDIVN))_SDIVN
"RTN","SCRPW57",30,0)
 .Q
"RTN","SCRPW57",31,0)
 S SDPAGE=1 D HDR Q:SDOUT  S (SDI,SDII)="" F  S SDI=$O(^TMP("SCRPW",$J,SDV,1,SDI),-1) Q:SDI=""!SDOUT!(SDII>49)  S SDDX="" F  S SDDX=$O(^TMP("SCRPW",$J,SDV,1,SDI,SDDX)) Q:SDDX=""!SDOUT!(SDII>49)  D PLINE
"RTN","SCRPW57",32,0)
 Q
"RTN","SCRPW57",33,0)
 ;
"RTN","SCRPW57",34,0)
PLINE ;Print output line
"RTN","SCRPW57",35,0)
 D:$Y>(IOSL-8) HDR Q:SDOUT  D HD1
"RTN","SCRPW57",36,0)
 ;S SDDIAG=$G(^ICD9(SDDX,0)),SDDIAG=$P(SDDIAG,U)_"  "_$P(SDDIAG,U,3),SDII=SDII+1
"RTN","SCRPW57",37,0)
 S SDDIAG=$$ICDDX^ICDCODE(SDDX,,,1),SDDIAG=$P(SDDIAG,U,2)_"  "_$P(SDDIAG,U,4),SDII=SDII+1
"RTN","SCRPW57",38,0)
 W !,$J(SDII,3),?6,$E(SDDIAG,1,38) D  W !
"RTN","SCRPW57",39,0)
 .S (SDFL,SDPT)="" F  S SDPT=$O(^TMP("SCRPW",$J,SDV,0,SDDX,SDPT)) Q:SDPT=""!SDOUT  D
"RTN","SCRPW57",40,0)
 ..I $Y>(IOSL-3) D HDR,HD1 Q:SDOUT  S SDFL=1
"RTN","SCRPW57",41,0)
 ..S SDPTV=^TMP("SCRPW",$J,SDV,0,SDDX,SDPT)
"RTN","SCRPW57",42,0)
 ..S SDPTN=$$CODE2TXT^XUA4A72(SDPT),SDPTN=$P(SDPT,"V",2)_"  "_$P(SDPTN,U,2)
"RTN","SCRPW57",43,0)
 ..W:SDFL ! W ?46,$E(SDPTN,1,38) D  S SDFL=SDFL+1
"RTN","SCRPW57",44,0)
 ...F SDIII=1:1:4 W ?(86+(12*(SDIII-1))),$J($P(SDPTV,U,SDIII),10,0)
"RTN","SCRPW57",45,0)
 ..Q
"RTN","SCRPW57",46,0)
 .Q
"RTN","SCRPW57",47,0)
 Q
"RTN","SCRPW57",48,0)
 ;
"RTN","SCRPW57",49,0)
HDR ;Print header
"RTN","SCRPW57",50,0)
 I $E(IOST)="C",SDPG N DIR S DIR(0)="E" W ! D ^DIR S SDOUT=Y'=1 Q:SDOUT
"RTN","SCRPW57",51,0)
 D STOP Q:SDOUT  W:SDPG!($E(IOST)="C") $$XY^SCRPW50(IOF,1,0) W:$X $$XY^SCRPW50("",0,0)
"RTN","SCRPW57",52,0)
 N SDI S SDI=0 W SDLINE F  S SDI=$O(SDTIT(SDI)) Q:'SDI  W !?(IOM-$L(SDTIT(SDI))\2),SDTIT(SDI)
"RTN","SCRPW57",53,0)
 W !,SDLINE,!,"For Fiscal Year activity through ",SD("PEDT"),!,"Date printed: ",SDPNOW,?(IOM-6-$L(SDPAGE)),"Page: ",SDPAGE,!,SDLINE S SDPAGE=SDPAGE+1,SDPG=1 Q
"RTN","SCRPW57",54,0)
 ;
"RTN","SCRPW57",55,0)
HD1 ;Print subheader
"RTN","SCRPW57",56,0)
 Q:SDOUT  W !?87,"Prim. Dx.",?103,"Total",?111,"Prim. Dx.",?127,"Total",!,"Rank  IDC-9-DM Diagnosis code",?48,"Provider Type",?89,"Uniques",?101,"Uniques",?110,"Encounters",?122,"Encounters"
"RTN","SCRPW57",57,0)
 N SDI W !,"----",?6,$E(SDLINE,1,38),?46,$E(SDLINE,1,38) F SDI=0:1:3 W ?(86+(12*SDI)),$E(SDLINE,1,10)
"RTN","SCRPW57",58,0)
 Q
"RTN","SCRPW57",59,0)
 ;
"RTN","SCRPW57",60,0)
DLIST ;Create alphabetic list of divisions found
"RTN","SCRPW57",61,0)
 Q:'SDIV  S SDX=$P($G(^DG(40.8,SDIV,0)),U) S:'$L(SDX) SDX="*** UNKNOWN ***" S SDIV(SDX)=SDIV,SDVCT=SDVCT+1 Q
"RTN","SCRPW57",62,0)
 ;
"RTN","SCRPW57",63,0)
VALID() ;Check encounter record
"RTN","SCRPW57",64,0)
 I SDIV,$$DIV(),$P(SDOE0,U,2),'$P(SDOE0,U,6),$P(SDOE0,U,12)=2 Q 1
"RTN","SCRPW57",65,0)
 Q 0
"RTN","SCRPW57",66,0)
 ;
"RTN","SCRPW57",67,0)
DIV() ;Check division
"RTN","SCRPW57",68,0)
 Q:'SDDIV 1  Q $D(SDDIV(SDIV))
"RTN","SCRPW57",69,0)
 ;
"RTN","SCRPW57",70,0)
STOP ;Check for stop task request
"RTN","SCRPW57",71,0)
 S:$D(ZTQUEUED) (SDOUT,ZTSTOP)=$S($$S^%ZTLOAD:1,1:0) Q
"RTN","SCRPW57",72,0)
 ;
"RTN","SCRPW57",73,0)
SET(SDIV) ;Set division lists
"RTN","SCRPW57",74,0)
 ;Required input: SDIV=division ifn or '0' for summary
"RTN","SCRPW57",75,0)
 S SDSTOP=SDSTOP+1 I SDSTOP#2000=0 D STOP^SCRPW40 Q:SDOUT
"RTN","SCRPW57",76,0)
 N SDDIAG,SDPRTY,SDI,SDII,SDIII,SDX S DFN=$P(SDOE0,U,2)
"RTN","SCRPW57",77,0)
 D GETDX^SDOE(SDOE,"SDDIAG"),PROV^SCRPW50(SDOE,.SDPRTY)
"RTN","SCRPW57",78,0)
 S SDI=0 F  S SDI=$O(SDDIAG(SDI)) Q:'SDI  S SDDX=$P(SDDIAG(SDI),U),SDDXP=$S($P(SDDIAG(SDI),U,12)="P":"P",1:"S") I SDDX D
"RTN","SCRPW57",79,0)
 .S ^TMP("SCRPW",$J,SDIV,0,SDDX)=$G(^TMP("SCRPW",$J,SDIV,0,SDDX))+1
"RTN","SCRPW57",80,0)
 .S SDII=0 F  S SDII=$O(SDPRTY(SDII)) Q:'SDII  S SDX=SDPRTY(SDII) I $L(SDX) D
"RTN","SCRPW57",81,0)
 ..S $P(^TMP("SCRPW",$J,SDIV,0,SDDX,SDX),U,4)=$P($G(^TMP("SCRPW",$J,SDIV,0,SDDX,SDX)),U,4)+1 D
"RTN","SCRPW57",82,0)
 ...S:SDDXP="P" $P(^TMP("SCRPW",$J,SDIV,0,SDDX,SDX),U,3)=$P($G(^TMP("SCRPW",$J,SDIV,0,SDDX,SDX)),U,3)+1
"RTN","SCRPW57",83,0)
 ...S ^TMP("SCRPW",$J,SDIV,0,"LIST",DFN,SDDX,SDX,SDDXP)=""
"RTN","SCRPW57",84,0)
 ...Q
"RTN","SCRPW57",85,0)
 ..Q
"RTN","SCRPW57",86,0)
 .Q
"RTN","SCRPW57",87,0)
 Q
"VER")
8.0^22.0
"^DD",409.76,409.76,0)
FIELD^^41^6
"^DD",409.76,409.76,0,"DDA")
N
"^DD",409.76,409.76,0,"DT")
2970710
"^DD",409.76,409.76,0,"ID",11)
D EN^DDIOL($P(^(1),U,1))
"^DD",409.76,409.76,0,"IX","B",409.76,.01)

"^DD",409.76,409.76,0,"IX","C",409.76,11)

"^DD",409.76,409.76,0,"IX","D",409.76,11)

"^DD",409.76,409.76,0,"LOOK")
SOUNDEX
"^DD",409.76,409.76,0,"NM","TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE")

"^DD",409.76,409.76,0,"PT",409.75,.02)

"^DD",409.76,409.76,0,"QUES")
SOUNDEX
"^DD",409.76,409.76,0,"VRPK")
SD
"^DD",409.76,409.76,.01,0)
ERROR CODE^RF^^0;1^K:$L(X)>10!($L(X)<1)!'(X'?1P.E) X
"^DD",409.76,409.76,.01,.1)
Error Code
"^DD",409.76,409.76,.01,1,0)
^.1
"^DD",409.76,409.76,.01,1,1,0)
409.76^B
"^DD",409.76,409.76,.01,1,1,1)
S ^SD(409.76,"B",$E(X,1,30),DA)=""
"^DD",409.76,409.76,.01,1,1,2)
K ^SD(409.76,"B",$E(X,1,30),DA)
"^DD",409.76,409.76,.01,3)
Enter an error code to use (1-10 characters)
"^DD",409.76,409.76,.01,21,0)
^^2^2^2970623^^^
"^DD",409.76,409.76,.01,21,1,0)
Error code denoting why an entry in the Transmitted Outpatient Encounter
"^DD",409.76,409.76,.01,21,2,0)
file could not be transmitted or successfully processed.
"^DD",409.76,409.76,.01,23,0)
^^1^1^2970623^
"^DD",409.76,409.76,.01,23,1,0)
 
"^DD",409.76,409.76,.01,"DT")
2960430
"^DD",409.76,409.76,.02,0)
SOURCE OF ERROR^RS^N:NPCD;V:VISTA;T:HL7 TRANSMISSION;^0;2^Q
"^DD",409.76,409.76,.02,3)
Enter the source of the error.
"^DD",409.76,409.76,.02,21,0)
^^1^1^2970710^
"^DD",409.76,409.76,.02,21,1,0)
This set of codes indicates the source of the error.
"^DD",409.76,409.76,.02,"DT")
2970710
"^DD",409.76,409.76,11,0)
ERROR CODE DESCRIPTION^F^^1;1^K:$L(X)>80!($L(X)<1) X
"^DD",409.76,409.76,11,.1)
Error Code Description
"^DD",409.76,409.76,11,1,0)
^.1^^-1
"^DD",409.76,409.76,11,1,1,0)
409.76^C^SOUNDEX
"^DD",409.76,409.76,11,1,1,1)
S I=$E(X,1,27) D SOU^DICM S ^SD(409.76,"C",X_I,DA)=""
"^DD",409.76,409.76,11,1,1,2)
S I=$E(X,1,27) D SOU^DICM K ^SD(409.76,"C",X_I,DA)
"^DD",409.76,409.76,11,1,1,"%D",0)
^^2^2^2970623^^
"^DD",409.76,409.76,11,1,1,"%D",1,0)
This cross-references the errror description in a soundex
"^DD",409.76,409.76,11,1,1,"%D",2,0)
cross-ref to allow lookup on the error description verbage.
"^DD",409.76,409.76,11,1,1,"DT")
2970617
"^DD",409.76,409.76,11,1,2,0)
409.76^D
"^DD",409.76,409.76,11,1,2,1)
S ^SD(409.76,"D",$E(X,1,30),DA)=""
"^DD",409.76,409.76,11,1,2,2)
K ^SD(409.76,"D",$E(X,1,30),DA)
"^DD",409.76,409.76,11,1,2,"%D",0)
^^1^1^2971210^
"^DD",409.76,409.76,11,1,2,"%D",1,0)
This is used to aid in the lookup of error codes.
"^DD",409.76,409.76,11,1,2,"DT")
2971210
"^DD",409.76,409.76,11,3)
Enter a description of the error code (1-80 characters)
"^DD",409.76,409.76,11,21,0)
^^1^1^2960524^^
"^DD",409.76,409.76,11,21,1,0)
Free text description of the error code.
"^DD",409.76,409.76,11,"DT")
2980120
"^DD",409.76,409.76,21,0)
CORRECTIVE ACTION DESCRIPTION^409.7621^^2;0
"^DD",409.76,409.76,21,21,0)
^^3^3^2971022^
"^DD",409.76,409.76,21,21,1,0)
This field describes the actions necessary to correct the error.
"^DD",409.76,409.76,21,21,2,0)
This is the text which would be viewed by a user when using the Incomplete
"^DD",409.76,409.76,21,21,3,0)
Encounter Management Tools.
"^DD",409.76,409.76,31,0)
VALIDATION LOGIC^K^^CHK;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",409.76,409.76,31,3)
Enter routine entry point to perform error validation
"^DD",409.76,409.76,31,9)
@
"^DD",409.76,409.76,31,21,0)
^^13^13^2971022^
"^DD",409.76,409.76,31,21,1,0)
This field should not be modifed except as directed.
"^DD",409.76,409.76,31,21,2,0)
 
"^DD",409.76,409.76,31,21,3,0)
This contains the logic that needs to be executed in order to validate the
"^DD",409.76,409.76,31,21,4,0)
data.  If the data does not validate correctly the error code from this
"^DD",409.76,409.76,31,21,5,0)
entry will be used.  The function call contained within this field uses
"^DD",409.76,409.76,31,21,6,0)
the following variables:
"^DD",409.76,409.76,31,21,7,0)
    Input
"^DD",409.76,409.76,31,21,8,0)
       Data - The value being validated.
"^DD",409.76,409.76,31,21,9,0)
 
"^DD",409.76,409.76,31,21,10,0)
    Returns
"^DD",409.76,409.76,31,21,11,0)
       RES - Result of the function call
"^DD",409.76,409.76,31,21,12,0)
              1 if entry passed validation
"^DD",409.76,409.76,31,21,13,0)
              0 if entry does not pass validation
"^DD",409.76,409.76,31,"DT")
2970605
"^DD",409.76,409.76,41,0)
CORRECTION LOGIC^K^^COR;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",409.76,409.76,41,3)
This is the code that will need to be executed to correct this error.
"^DD",409.76,409.76,41,9)
@
"^DD",409.76,409.76,41,21,0)
^^16^16^2971022^
"^DD",409.76,409.76,41,21,1,0)
This field should not be modifed except as directed.
"^DD",409.76,409.76,41,21,2,0)
 
"^DD",409.76,409.76,41,21,3,0)
This contains the logic that needs to be executed in order to allow the
"^DD",409.76,409.76,41,21,4,0)
user to correct the error.  The function call contained within this field
"^DD",409.76,409.76,41,21,5,0)
uses the following variables:
"^DD",409.76,409.76,41,21,6,0)
    Returns
"^DD",409.76,409.76,41,21,7,0)
       RES - Result of the function call
"^DD",409.76,409.76,41,21,8,0)
             0 - if the corrective action was not successful
"^DD",409.76,409.76,41,21,9,0)
             1 - if the corrective action succeeded
"^DD",409.76,409.76,41,21,10,0)
 
"^DD",409.76,409.76,41,21,11,0)
This function call makes the assumption that the ^TMP("SCENI XMT",$J,0)
"^DD",409.76,409.76,41,21,12,0)
global from the Incomplete Encounter Management List Manager tool is
"^DD",409.76,409.76,41,21,13,0)
available to retrieve the pointer from the TRANSMITTED OUTPATIENT
"^DD",409.76,409.76,41,21,14,0)
ENCOUNTER FILE (#409.73) which is used to check the entry and
"^DD",409.76,409.76,41,21,15,0)
retreive the entry from the TRANSMITTED OUTPATIENT ENCOUNTER ERROR FILE
"^DD",409.76,409.76,41,21,16,0)
(#409.75).
"^DD",409.76,409.76,41,"DT")
2970710
"^DD",409.76,409.7621,0)
CORRECTIVE ACTION DESCRIPTION SUB-FIELD^^.01^1
"^DD",409.76,409.7621,0,"DT")
2970710
"^DD",409.76,409.7621,0,"NM","CORRECTIVE ACTION DESCRIPTION")

"^DD",409.76,409.7621,0,"UP")
409.76
"^DD",409.76,409.7621,.01,0)
CORRECTIVE ACTION DESCRIPTION^W^^0;1^Q
"^DD",409.76,409.7621,.01,3)
Enter the corrective action a user will need to take in order to correct this error.
"^DD",409.76,409.7621,.01,21,0)
^^1^1^2971022^^^
"^DD",409.76,409.7621,.01,21,1,0)
This is the corrective action needed to correct this error situation.
"^DD",409.76,409.7621,.01,"DT")
2970710
"^DIC",409.76,409.76,0)
TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE^409.76
"^DIC",409.76,409.76,0,"GL")
^SD(409.76,
"^DIC",409.76,409.76,"%D",0)
^^6^6^2970623^^^^
"^DIC",409.76,409.76,"%D",1,0)
This table file contains a list of all error codes that the National
"^DIC",409.76,409.76,"%D",2,0)
Patient Care Database will report when processing an encounter.
"^DIC",409.76,409.76,"%D",3,0)
 
"^DIC",409.76,409.76,"%D",4,0)
If an entry needs to be added, modified or deleted a patch will be issued
"^DIC",409.76,409.76,"%D",5,0)
instructing the site how to make the change.  Otherwise, this table should
"^DIC",409.76,409.76,"%D",6,0)
not be edited in anyway by the site.  
"^DIC",409.76,"B","TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE",409.76)

**INSTALL NAME**
ICD*18.0*7
"BLD",2999,0)
ICD*18.0*7^DRG GROUPER^0^3030916^y
"BLD",2999,1,0)
^^2^2^3030701^^^^
"BLD",2999,1,1,0)
Please see the National Patch Module for details
"BLD",2999,1,2,0)
       of the enhancements included in this patch.
"BLD",2999,4,0)
^9.64PA^80^3
"BLD",2999,4,80,0)
80
"BLD",2999,4,80,2,0)
^9.641^80.066^1
"BLD",2999,4,80,2,80.066,0)
EFFECTIVE DATE  (sub-file)
"BLD",2999,4,80,2,80.066,1,0)
^9.6411^65^6
"BLD",2999,4,80,2,80.066,1,60,0)
DRGa
"BLD",2999,4,80,2,80.066,1,61,0)
DRGb
"BLD",2999,4,80,2,80.066,1,62,0)
DRBc
"BLD",2999,4,80,2,80.066,1,63,0)
DRBd
"BLD",2999,4,80,2,80.066,1,64,0)
DRGe
"BLD",2999,4,80,2,80.066,1,65,0)
DRGf
"BLD",2999,4,80,222)
y^y^p^^^^n^^n
"BLD",2999,4,80,224)

"BLD",2999,4,80.1,0)
80.1
"BLD",2999,4,80.1,2,0)
^9.641^80.166^1
"BLD",2999,4,80.1,2,80.166,0)
EFFECTIVE DATE  (sub-file)
"BLD",2999,4,80.1,2,80.166,1,0)
^9.6411^65^6
"BLD",2999,4,80.1,2,80.166,1,60,0)
DRGa
"BLD",2999,4,80.1,2,80.166,1,61,0)
DRGb
"BLD",2999,4,80.1,2,80.166,1,62,0)
DRGc
"BLD",2999,4,80.1,2,80.166,1,63,0)
DRGd
"BLD",2999,4,80.1,2,80.166,1,64,0)
DRGe
"BLD",2999,4,80.1,2,80.166,1,65,0)
DRGf
"BLD",2999,4,80.1,222)
y^y^p^^^^n^^n
"BLD",2999,4,80.1,224)

"BLD",2999,4,80.2,0)
80.2
"BLD",2999,4,80.2,2,0)
^9.641^80.266^2
"BLD",2999,4,80.2,2,80.2,0)
DRG  (File-top level)
"BLD",2999,4,80.2,2,80.2,1,0)
^9.6411^16^3
"BLD",2999,4,80.2,2,80.2,1,14,0)
ACTIVATION DATE
"BLD",2999,4,80.2,2,80.2,1,15,0)
INACTIVE
"BLD",2999,4,80.2,2,80.2,1,16,0)
INACTIVATION DATE
"BLD",2999,4,80.2,2,80.266,0)
EFFECTIVE DATE  (sub-file)
"BLD",2999,4,80.2,2,80.266,1,0)
^9.6411^^
"BLD",2999,4,80.2,222)
y^y^p^^^^n^^n
"BLD",2999,4,80.2,224)

"BLD",2999,4,"APDD",80,80.066)

"BLD",2999,4,"APDD",80,80.066,60)

"BLD",2999,4,"APDD",80,80.066,61)

"BLD",2999,4,"APDD",80,80.066,62)

"BLD",2999,4,"APDD",80,80.066,63)

"BLD",2999,4,"APDD",80,80.066,64)

"BLD",2999,4,"APDD",80,80.066,65)

"BLD",2999,4,"APDD",80.1,80.166)

"BLD",2999,4,"APDD",80.1,80.166,60)

"BLD",2999,4,"APDD",80.1,80.166,61)

"BLD",2999,4,"APDD",80.1,80.166,62)

"BLD",2999,4,"APDD",80.1,80.166,63)

"BLD",2999,4,"APDD",80.1,80.166,64)

"BLD",2999,4,"APDD",80.1,80.166,65)

"BLD",2999,4,"APDD",80.2,80.2)

"BLD",2999,4,"APDD",80.2,80.2,14)

"BLD",2999,4,"APDD",80.2,80.2,15)

"BLD",2999,4,"APDD",80.2,80.2,16)

"BLD",2999,4,"APDD",80.2,80.266)

"BLD",2999,4,"B",80,80)

"BLD",2999,4,"B",80.1,80.1)

"BLD",2999,4,"B",80.2,80.2)

"BLD",2999,"ABPKG")
n
"BLD",2999,"INID")
n^n^n
"BLD",2999,"INIT")
ICD187PT
"BLD",2999,"KRN",0)
^9.67PA^8989.52^19
"BLD",2999,"KRN",.4,0)
.4
"BLD",2999,"KRN",.4,"NM",0)
^9.68A^^
"BLD",2999,"KRN",.401,0)
.401
"BLD",2999,"KRN",.402,0)
.402
"BLD",2999,"KRN",.403,0)
.403
"BLD",2999,"KRN",.5,0)
.5
"BLD",2999,"KRN",.84,0)
.84
"BLD",2999,"KRN",3.6,0)
3.6
"BLD",2999,"KRN",3.8,0)
3.8
"BLD",2999,"KRN",9.2,0)
9.2
"BLD",2999,"KRN",9.8,0)
9.8
"BLD",2999,"KRN",9.8,"NM",0)
^9.68A^11^8
"BLD",2999,"KRN",9.8,"NM",1,0)
ICDDRG^^0^B23117273
"BLD",2999,"KRN",9.8,"NM",2,0)
ICDDRGM^^0^B24746187
"BLD",2999,"KRN",9.8,"NM",3,0)
ICDCOD^^0^B5243995
"BLD",2999,"KRN",9.8,"NM",4,0)
ICDDRG5^^0^B10341112
"BLD",2999,"KRN",9.8,"NM",5,0)
ICDDRGX^^0^B12781639
"BLD",2999,"KRN",9.8,"NM",6,0)
ICDTLB5^^0^B20808639
"BLD",2999,"KRN",9.8,"NM",10,0)
ICDGTDRG^^0^B29660286
"BLD",2999,"KRN",9.8,"NM",11,0)
ICDDRG0^^0^B26840719
"BLD",2999,"KRN",9.8,"NM","B","ICDCOD",3)

"BLD",2999,"KRN",9.8,"NM","B","ICDDRG",1)

"BLD",2999,"KRN",9.8,"NM","B","ICDDRG0",11)

"BLD",2999,"KRN",9.8,"NM","B","ICDDRG5",4)

"BLD",2999,"KRN",9.8,"NM","B","ICDDRGM",2)

"BLD",2999,"KRN",9.8,"NM","B","ICDDRGX",5)

"BLD",2999,"KRN",9.8,"NM","B","ICDGTDRG",10)

"BLD",2999,"KRN",9.8,"NM","B","ICDTLB5",6)

"BLD",2999,"KRN",19,0)
19
"BLD",2999,"KRN",19,"NM",0)
^9.68A^^
"BLD",2999,"KRN",19.1,0)
19.1
"BLD",2999,"KRN",101,0)
101
"BLD",2999,"KRN",409.61,0)
409.61
"BLD",2999,"KRN",771,0)
771
"BLD",2999,"KRN",870,0)
870
"BLD",2999,"KRN",8989.51,0)
8989.51
"BLD",2999,"KRN",8989.52,0)
8989.52
"BLD",2999,"KRN",8994,0)
8994
"BLD",2999,"KRN","B",.4,.4)

"BLD",2999,"KRN","B",.401,.401)

"BLD",2999,"KRN","B",.402,.402)

"BLD",2999,"KRN","B",.403,.403)

"BLD",2999,"KRN","B",.5,.5)

"BLD",2999,"KRN","B",.84,.84)

"BLD",2999,"KRN","B",3.6,3.6)

"BLD",2999,"KRN","B",3.8,3.8)

"BLD",2999,"KRN","B",9.2,9.2)

"BLD",2999,"KRN","B",9.8,9.8)

"BLD",2999,"KRN","B",19,19)

"BLD",2999,"KRN","B",19.1,19.1)

"BLD",2999,"KRN","B",101,101)

"BLD",2999,"KRN","B",409.61,409.61)

"BLD",2999,"KRN","B",771,771)

"BLD",2999,"KRN","B",870,870)

"BLD",2999,"KRN","B",8989.51,8989.51)

"BLD",2999,"KRN","B",8989.52,8989.52)

"BLD",2999,"KRN","B",8994,8994)

"BLD",2999,"QUES",0)
^9.62^^
"BLD",2999,"REQB",0)
^9.611^1^1
"BLD",2999,"REQB",1,0)
ICD*18.0*6^2
"BLD",2999,"REQB","B","ICD*18.0*6",1)

"FIA",80)
ICD DIAGNOSIS
"FIA",80,0)
^ICD9(
"FIA",80,0,0)
80OI
"FIA",80,0,1)
y^y^p^^^^n^^n
"FIA",80,0,10)

"FIA",80,0,11)

"FIA",80,0,"RLRO")

"FIA",80,0,"VR")
18.0^ICD
"FIA",80,80)
1
"FIA",80,80.066)
1
"FIA",80,80.066,60)

"FIA",80,80.066,61)

"FIA",80,80.066,62)

"FIA",80,80.066,63)

"FIA",80,80.066,64)

"FIA",80,80.066,65)

"FIA",80.1)
ICD OPERATION/PROCEDURE
"FIA",80.1,0)
^ICD0(
"FIA",80.1,0,0)
80.1OI
"FIA",80.1,0,1)
y^y^p^^^^n^^n
"FIA",80.1,0,10)

"FIA",80.1,0,11)

"FIA",80.1,0,"RLRO")

"FIA",80.1,0,"VR")
18.0^ICD
"FIA",80.1,80.1)
1
"FIA",80.1,80.166)
1
"FIA",80.1,80.166,60)

"FIA",80.1,80.166,61)

"FIA",80.1,80.166,62)

"FIA",80.1,80.166,63)

"FIA",80.1,80.166,64)

"FIA",80.1,80.166,65)

"FIA",80.2)
DRG
"FIA",80.2,0)
^ICD(
"FIA",80.2,0,0)
80.2
"FIA",80.2,0,1)
y^y^p^^^^n^^n
"FIA",80.2,0,10)

"FIA",80.2,0,11)

"FIA",80.2,0,"RLRO")

"FIA",80.2,0,"VR")
18.0^ICD
"FIA",80.2,80.2)
1
"FIA",80.2,80.2,14)

"FIA",80.2,80.2,15)

"FIA",80.2,80.2,16)

"FIA",80.2,80.2,66)

"FIA",80.2,80.266)
0
"INIT")
ICD187PT
"MBREQ")
1
"PKG",152,-1)
1^1
"PKG",152,0)
DRG GROUPER^ICD^DRG GROUPER
"PKG",152,20,0)
^9.402P^^
"PKG",152,22,0)
^9.49I^1^1
"PKG",152,22,1,0)
18.0^3001024^3001122^11721
"PKG",152,22,1,"PAH",1,0)
7^3030916
"PKG",152,22,1,"PAH",1,1,0)
^^2^2^3030916
"PKG",152,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for details
"PKG",152,22,1,"PAH",1,1,2,0)
       of the enhancements included in this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","ICD187PT")
0^^B37387987
"RTN","ICD187PT",1,0)
ICD187PT ; ALB/ADL - GROUPER DRIVER ; 04/11/03
"RTN","ICD187PT",2,0)
 ;;18.0;DRG Grouper;**7**;Oct 20, 2000
"RTN","ICD187PT",3,0)
 ;;**routine to build the new DRG global levels required for the CSV project
"RTN","ICD187PT",4,0)
 ;;**taken from routine created by DEK to add new "66" levels to ICD0 and ICD9
"RTN","ICD187PT",5,0)
 ;;**it addes the "DRG" levels to the 66 multiples in ICD0 (#80.1) and ICD9 (#80) and
"RTN","ICD187PT",6,0)
 ;;**it creates the 66 multiple levels in the DRG file (ICD/#80.2)
"RTN","ICD187PT",7,0)
 N I,FILE,CSD,NODE,FLAG,FLGN,CSIN,CSIP,CSAN,CSAP,ADATE,IDATE
"RTN","ICD187PT",8,0)
 S U="^"
"RTN","ICD187PT",9,0)
 F I=2:1 S CSD=$P($T(ADJDATA+I),";;",2) Q:CSD']""  D
"RTN","ICD187PT",10,0)
 . S FILE=$P(CSD,U),NODE=$P(CSD,U,2),FLAG=$P(CSD,U,3),FLGN=$P(CSD,U,10)
"RTN","ICD187PT",11,0)
 . S CSIN=$P(CSD,U,4),CSIP=$P(CSD,U,5),CSAN=$P(CSD,U,6)
"RTN","ICD187PT",12,0)
 . S CSAP=$P(CSD,U,7),ADATE=$P(CSD,U,8),IDATE=$P(CSD,U,9),MDC=$P(CSD,U,11),SURG=$P(CSD,U,12)
"RTN","ICD187PT",13,0)
 . D MAINLOOP(^DIC(FILE,0,"GL"),0)
"RTN","ICD187PT",14,0)
 Q
"RTN","ICD187PT",15,0)
 ;
"RTN","ICD187PT",16,0)
MAINLOOP(ROOT,IEN)      ;
"RTN","ICD187PT",17,0)
 N DKZ,RC,STAT,IDT,ADT,S,DRGZ S S="////"
"RTN","ICD187PT",18,0)
 W !!!?5,"APPLYING EDITS TO FILE ",FILE,!
"RTN","ICD187PT",19,0)
 I FILE=80.2 D CLEANUP  ;Remove old "66" levels before inserting new ones into ICD file
"RTN","ICD187PT",20,0)
 F  S IEN=$O(@(ROOT_IEN_")")) Q:'+IEN  D
"RTN","ICD187PT",21,0)
 . S DKZ=$G(@(ROOT_IEN_",0)")),STAT=+$P(DKZ,U,FLAG) ; zero node, status
"RTN","ICD187PT",22,0)
 . S IDT=$P(DKZ,U,CSIP),ADT=$P(DKZ,U,CSAP) ; in/active dates
"RTN","ICD187PT",23,0)
 . I FILE<81 D  Q
"RTN","ICD187PT",24,0)
 . . I FILE=80.2 S MDCD=$P(DKZ,U,MDC),SURGD=$P(DKZ,U,SURG) D ALTERDRG Q
"RTN","ICD187PT",25,0)
 . . I FILE=80 S DRGZ=$G(@(ROOT_IEN_",""DRG"")"))
"RTN","ICD187PT",26,0)
 . . I FILE=80.1 S DRGZ="^^^^^",SS=$O(@(ROOT_IEN_",""MDC"",99999)"),-1) I SS'="" S DRGZ=$G(@(ROOT_IEN_",""MDC"","_SS_",""DRG"")"))
"RTN","ICD187PT",27,0)
 . . D ALTERICD
"RTN","ICD187PT",28,0)
 . D ALTERCPT
"RTN","ICD187PT",29,0)
 Q
"RTN","ICD187PT",30,0)
ALTERICD        ;
"RTN","ICD187PT",31,0)
 N ANS,AD,ID,DR
"RTN","ICD187PT",32,0)
 I 'STAT S AD=$S(IDT="":ADATE,1:IDT),DR=CSAN_S_AD
"RTN","ICD187PT",33,0)
 E  S ID=$S(IDT="":IDATE,1:IDT),DR=CSIN_S_ID_";"_CSAN_S_ADATE
"RTN","ICD187PT",34,0)
 ;S ANS=$$EDIT0(IEN,ROOT,DR)  ;*DON'T RUN TO REBUILD .01 LEVEL
"RTN","ICD187PT",35,0)
 S ANS=1
"RTN","ICD187PT",36,0)
 ;W !,"IEN ",IEN,$S('ANS:" IN USE",1:" EDITED")
"RTN","ICD187PT",37,0)
 ;
"RTN","ICD187PT",38,0)
 I 'STAT D ADDMULT(FILE,IEN,NODE,AD,1,DRGZ)
"RTN","ICD187PT",39,0)
 I STAT D ADDMULT(FILE,IEN,NODE,ID,0,DRGZ)
"RTN","ICD187PT",40,0)
 Q
"RTN","ICD187PT",41,0)
 ;
"RTN","ICD187PT",42,0)
ALTERDRG        ;
"RTN","ICD187PT",43,0)
 N ANS,AD,ID,DR,EFFDT,EFFDT2,ACTFLG,FIRSTSET
"RTN","ICD187PT",44,0)
 ;I $D(@(ROOT_IEN_",66)")) Q
"RTN","ICD187PT",45,0)
 S FY=0,ACTFLG=0,FIRSTSET=0  ;Default ACTLFG=0 to start
"RTN","ICD187PT",46,0)
 F  S FY=$O(@(ROOT_IEN_",""FY"",FY)")) Q:FY=""  S FYINFO=^(FY,0),WGHT=$P(FYINFO,U,2),UPDT=$S((+WGHT)&('ACTFLG):1,(+WGHT=0)&(ACTFLG):1,1:0) I UPDT!('FIRSTSET) D
"RTN","ICD187PT",47,0)
 . S EFFDT=($E(FY,1,3)-1)_"1001" I EFFDT<2821001 Q  ;Ignore dates before FY 1983
"RTN","ICD187PT",48,0)
 . I 'FIRSTSET&(+WGHT=0) D  ;1st FY date WEIGHT = 0 (INACTIVE) - must have 1st entry = ACTIVE so create one
"RTN","ICD187PT",49,0)
 . . S EFFDT2=2821001 D ADDDRGZ(FILE,IEN,NODE,EFFDT2,1,MDCD,SURGD)  ;add FY 1983 w/status of ACTIVE
"RTN","ICD187PT",50,0)
 . . S ACTFLG=1
"RTN","ICD187PT",51,0)
 . S FIRSTSET=1
"RTN","ICD187PT",52,0)
 . I EFFDT=2821001&(ACTFLG) Q  ;First FY date = 2830000. Don't add second EFF DT entry for FY 2830000
"RTN","ICD187PT",53,0)
 . I ACTFLG D ADDDRGZ(FILE,IEN,NODE,EFFDT,0,MDCD,SURGD) S ACTFLG=0 Q  ;add INACTIVE node
"RTN","ICD187PT",54,0)
 . I 'ACTFLG D ADDDRGZ(FILE,IEN,NODE,EFFDT,1,MDCD,SURGD) S ACTFLG=1   ;add ACTIVE node
"RTN","ICD187PT",55,0)
 Q
"RTN","ICD187PT",56,0)
 ;
"RTN","ICD187PT",57,0)
CLEANUP ;REMOVE 66 LEVELS TO REPROCESS
"RTN","ICD187PT",58,0)
 S CD=0
"RTN","ICD187PT",59,0)
 F  S CD=$O(^ICD(CD)) Q:CD=""  K ^ICD(CD,66)
"RTN","ICD187PT",60,0)
 Q  ;CLEANUP
"RTN","ICD187PT",61,0)
ALTERCPT        ;
"RTN","ICD187PT",62,0)
 N DR,AD,ID,ANS,EFF,EFFS
"RTN","ICD187PT",63,0)
 S EFF=$$EFF(FILE,IEN)
"RTN","ICD187PT",64,0)
 S EFFS=$P(EFF,U,2),ID=$P(EFF,U,3),AD=$P(EFF,U,4),DR=CSAN_S_AD
"RTN","ICD187PT",65,0)
 S:'EFFS DR=DR_";"_CSIN_S_ID
"RTN","ICD187PT",66,0)
 I EFFS'=1-STAT S DR=DR_";"_FLGN_S_EFFS
"RTN","ICD187PT",67,0)
 S ANS=$$EDIT0(IEN,ROOT,DR)
"RTN","ICD187PT",68,0)
 ;W !,"IEN ",IEN,$S('ANS:" IN USE",1:" EDITED")
"RTN","ICD187PT",69,0)
 ;
"RTN","ICD187PT",70,0)
 I AD=ADATE D ADDMULT(FILE,IEN,NODE,AD,1)
"RTN","ICD187PT",71,0)
 I 'EFFS,ID=IDATE D ADDMULT(FILE,IEN,NODE,ID,0)
"RTN","ICD187PT",72,0)
 Q
"RTN","ICD187PT",73,0)
 ;
"RTN","ICD187PT",74,0)
EFF(FILE,CODE)  ;
"RTN","ICD187PT",75,0)
 N EFILE,EFF,EFFN,STR,EFFDT,EFFST,EFFBOOL,EFFDOS,EFFDFLT
"RTN","ICD187PT",76,0)
 S EFFDFLT="2890101^1^2900101^2890101",EFILE=^DIC(FILE,0,"GL")_CODE_",60,"
"RTN","ICD187PT",77,0)
 S EFF=$O(@(EFILE_"""B"","_(DT+.001)_")"),-1) I 'EFF Q EFFDFLT
"RTN","ICD187PT",78,0)
 S EFFN=$O(@(EFILE_"""B"","_EFF_",0)")) ; node 60 (effective date) sub-entry
"RTN","ICD187PT",79,0)
 S STR=$G(@(EFILE_EFFN_",0)")) I 'STR Q EFFDFLT
"RTN","ICD187PT",80,0)
 ;set Opposite eff. date based on status
"RTN","ICD187PT",81,0)
 S EFFDT=+STR,EFFST=$P(STR,U,2),EFFBOOL=0
"RTN","ICD187PT",82,0)
 F  S EFF=$O(@(EFILE_"""B"","_EFF_")"),-1) Q:'EFF!EFFBOOL  D
"RTN","ICD187PT",83,0)
 . S EFFN=$O(@(EFILE_"""B"","_EFF_",0)"))
"RTN","ICD187PT",84,0)
 . S EFFDOS=$G(@(EFILE_EFFN_",0)")) I 'EFFDOS S EFF="" Q
"RTN","ICD187PT",85,0)
 . S EFFBOOL=(EFFST'=$P(EFFDOS,U,2))
"RTN","ICD187PT",86,0)
 S EFFDOS=$G(EFFDOS,$S('EFFST:$P(EFFDFLT,U),1:$P(EFFDFLT,U,3)))
"RTN","ICD187PT",87,0)
 I EFFST S $P(STR,U,3,4)=(+EFFDOS)_U_EFFDT
"RTN","ICD187PT",88,0)
 E  S $P(STR,U,3,4)=EFFDT_U_(+EFFDOS)
"RTN","ICD187PT",89,0)
 Q STR
"RTN","ICD187PT",90,0)
 ;
"RTN","ICD187PT",91,0)
EDIT0(DA,DIE,DR)        ; adjust zero node
"RTN","ICD187PT",92,0)
 N REC S REC=DA
"RTN","ICD187PT",93,0)
 L +@(DIE_REC_",0)"):2 I  D  Q 1
"RTN","ICD187PT",94,0)
 . D ^DIE
"RTN","ICD187PT",95,0)
 . L -@(DIE_REC_",0)")
"RTN","ICD187PT",96,0)
 Q 0
"RTN","ICD187PT",97,0)
 ;
"RTN","ICD187PT",98,0)
ADDMULT(FN,IEN,NODE,X,STA,DRGZ) ; add to multiple
"RTN","ICD187PT",99,0)
 N FDA,FDAIEN,ANS
"RTN","ICD187PT",100,0)
 S FN=+$P(^DD(FN,NODE,0),U,2)
"RTN","ICD187PT",101,0)
 S FDAIEN="1,"_IEN_","
"RTN","ICD187PT",102,0)
 K ^TMP("DIERR",$J)
"RTN","ICD187PT",103,0)
 ;S FDA(FN,FDAIEN,.01)=X  ;NOT REQ'D SINCE ICD*18.0*6 ALREADY BUILT THIS LEVEL
"RTN","ICD187PT",104,0)
 ;S FDA(FN,FDAIEN,.02)=STA  ;NOT REQ'D SINCE ICD*18.0*6 ALREADY BUILT THIS LEVEL
"RTN","ICD187PT",105,0)
 F DRGCNT=1:1:6 S FDA(FN,FDAIEN,59+DRGCNT)=$P(DRGZ,"^",DRGCNT)
"RTN","ICD187PT",106,0)
 D UPDATE^DIE("","FDA")
"RTN","ICD187PT",107,0)
 S ANS='$D(^TMP("DIERR",$J))
"RTN","ICD187PT",108,0)
 ;W !,"IEN ",IEN,$S('ANS:" DIDNT",1:" DID")," ADD ",STA
"RTN","ICD187PT",109,0)
 Q
"RTN","ICD187PT",110,0)
 ;
"RTN","ICD187PT",111,0)
ADDDRGZ(FN,IEN,NODE,X,STA,MDCD,SURGD)   ; add to DRG multiple
"RTN","ICD187PT",112,0)
 N FDA,FDAIEN,ANS
"RTN","ICD187PT",113,0)
 S FN=+$P(^DD(FN,NODE,0),U,2)
"RTN","ICD187PT",114,0)
 S FDAIEN="+1,"_IEN_","
"RTN","ICD187PT",115,0)
 K ^TMP("DIERR",$J)
"RTN","ICD187PT",116,0)
 S FDA(FN,FDAIEN,.01)=X
"RTN","ICD187PT",117,0)
 S FDA(FN,FDAIEN,.03)=STA
"RTN","ICD187PT",118,0)
 S FDA(FN,FDAIEN,.05)=MDCD
"RTN","ICD187PT",119,0)
 S FDA(FN,FDAIEN,.06)=SURGD
"RTN","ICD187PT",120,0)
 ;F DRGCNT=1:1:6 S FDA(FN,FDAIEN,59+DRGCBT)=$P(DRGZ,"^",DRGCNT)
"RTN","ICD187PT",121,0)
 D UPDATE^DIE("","FDA")
"RTN","ICD187PT",122,0)
 S ANS='$D(^TMP("DIERR",$J))
"RTN","ICD187PT",123,0)
 ;W !,"IEN ",IEN,$S('ANS:" DIDNT",1:" DID")," ADD ",STA
"RTN","ICD187PT",124,0)
 Q
"RTN","ICD187PT",125,0)
 ;
"RTN","ICD187PT",126,0)
SETINACT(IEN)   ;set inactive dates for DRG codes
"RTN","ICD187PT",127,0)
 N FY
"RTN","ICD187PT",128,0)
 S FY=0
"RTN","ICD187PT",129,0)
 F  S FY=$O(^ICD(IEN,"FY",FY)) Q:FY=""  I +$P(^ICD(IEN,"FY",FY,0),"^",2)=0 D  Q
"RTN","ICD187PT",130,0)
 . S DATE=$E(FY,1,3)_"1001"
"RTN","ICD187PT",131,0)
 . I $D(^ICD(IEN,66,"B",DATE)) Q
"RTN","ICD187PT",132,0)
 . D ADDDRGZ(FILE,IEN,NODE,DATE,0,MDCD,SURGD) ; add w/date of 10/1 of FY and STATUS of 0 (INACTIVE)
"RTN","ICD187PT",133,0)
 . W !,"UPDATING ",IEN," TO INACTIVE"
"RTN","ICD187PT",134,0)
 Q  ;SETINACT
"RTN","ICD187PT",135,0)
 ;
"RTN","ICD187PT",136,0)
UPDATE ; SET INACTIVE DRG LEVELS
"RTN","ICD187PT",137,0)
 N I,FILE,CSD,NODE,FLAG,FLGN,CSIN,CSIP,CSAN,CSAP,ADATE,IDATE
"RTN","ICD187PT",138,0)
 S U="^"
"RTN","ICD187PT",139,0)
 S CSD=$P($T(ADJDATA+4),";;",2) Q:CSD']""  D
"RTN","ICD187PT",140,0)
 . S FILE=80.2,NODE=$P(CSD,U,2),FLAG=$P(CSD,U,3),FLGN=$P(CSD,U,10)
"RTN","ICD187PT",141,0)
 . S CSIN=$P(CSD,U,4),CSIP=$P(CSD,U,5),CSAN=$P(CSD,U,6)
"RTN","ICD187PT",142,0)
 . S CSAP=$P(CSD,U,7),ADATE=$P(CSD,U,8),IDATE=$P(CSD,U,9),MDC=$P(CSD,U,11),SURG=$P(CSD,U,12)
"RTN","ICD187PT",143,0)
 . S ROOT=^DIC(FILE,0,"GL"),IEN=0
"RTN","ICD187PT",144,0)
 . ;CODE TAKE FROM MAINLOOP 
"RTN","ICD187PT",145,0)
 . N DKZ,RC,STAT,IDT,ADT,S,DRGZ S S="////"
"RTN","ICD187PT",146,0)
 . W !!!?5,"UPDATING INACTIVE FLAG FOR ",FILE,!
"RTN","ICD187PT",147,0)
 . F  S IEN=$O(@(ROOT_IEN_")")) Q:'+IEN  D
"RTN","ICD187PT",148,0)
 . . S DKZ=$G(@(ROOT_IEN_",0)")),STAT=+$P(DKZ,U,FLAG) ; zero node, status
"RTN","ICD187PT",149,0)
 . . S IDT=$P(DKZ,U,CSIP),ADT=$P(DKZ,U,CSAP) ; in/active dates
"RTN","ICD187PT",150,0)
 . . S MDCD=$P(DKZ,U,MDC),SURGD=$P(DKZ,U,SURG) D SETINACT(IEN) Q
"RTN","ICD187PT",151,0)
 Q
"RTN","ICD187PT",152,0)
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
"RTN","ICD187PT",153,0)
ADJDATA ;data to add/update
"RTN","ICD187PT",154,0)
 ;;
"RTN","ICD187PT",155,0)
 ;;80.1^66^9^102^11^12^12^2781001^2791001^100
"RTN","ICD187PT",156,0)
 ;;80^66^9^102^11^16^16^2781001^2791001^100
"RTN","ICD187PT",157,0)
 ;;80.2^66^14^16^15^14^13^2821001^2791001^15^5^6
"RTN","ICD187PT",158,0)
 Q
"RTN","ICD187PT",159,0)
 ;;81^60^4^7^7^8^8^2890101^2900101^5
"RTN","ICD187PT",160,0)
 ;;81.3^60^5^7^7^8^8^2890101^2900101^5
"RTN","ICD187PT",161,0)
 ;;
"RTN","ICD187PT",162,0)
 ;;
"RTN","ICDCOD")
0^3^B5243995
"RTN","ICDCOD",1,0)
ICDCOD ;ALB/ABR/ADL - INQUIRE TO ICD CODES ; 10/23/00 11:36am
"RTN","ICDCOD",2,0)
 ;;18.0;DRG Grouper;**7**;Oct 20, 2000
"RTN","ICDCOD",3,0)
 ;;ADL;Update for CSV project - 03/20/03
"RTN","ICDCOD",4,0)
 ;
"RTN","ICDCOD",5,0)
 ;This routine allows entry of an ICD9 or ICD0 code, and returns the description.
"RTN","ICDCOD",6,0)
 ;It also alerts the user if it is an inactive code.
"RTN","ICDCOD",7,0)
 ;
"RTN","ICDCOD",8,0)
EN ;
"RTN","ICDCOD",9,0)
 N DIRUT,DTOUT,DUOUT,DIR,DIC,DA,DR,DIQ,X,Y,ICDTMP
"RTN","ICDCOD",10,0)
DATE D EFFDATE^ICDDRGM G EXIT:$D(DUOUT),EXIT:$D(DTOUT)
"RTN","ICDCOD",11,0)
 F  S DIR(0)="SO^1:ICD DIAGNOSIS CODE;2:ICD OPERATION/PROCEDURE CODE" D ^DIR Q:Y<0!$D(DIRUT)  D @Y  Q:$D(DTOUT)
"RTN","ICDCOD",12,0)
 G DATE
"RTN","ICDCOD",13,0)
 ;
"RTN","ICDCOD",14,0)
1 ;ICD DIAGNOSIS CODE
"RTN","ICDCOD",15,0)
 S DIR(0)="PO^80:QAEM"
"RTN","ICDCOD",16,0)
 F  W !! D ^DIR Q:Y<0!$D(DIRUT)  D
"RTN","ICDCOD",17,0)
 .N ICDASK
"RTN","ICDCOD",18,0)
 . S DR=".01;3;10;100;102"
"RTN","ICDCOD",19,0)
 . S DIC="^ICD9(",DA=+Y,DIQ(0)="EN",DIQ="ICDASK"
"RTN","ICDCOD",20,0)
 . D EN^DIQ1
"RTN","ICDCOD",21,0)
 . S ICDTMP=$$ICDDX^ICDCODE(+DA,ICDDATE)
"RTN","ICDCOD",22,0)
 . W !!,ICDASK(80,DA,.01,"E"),?15,ICDASK(80,DA,3,"E"),!,$G(ICDASK(80,DA,10,"E")),"     ",$P(ICDTMP,U,18),!  ;add printing of descript disclaimer msg
"RTN","ICDCOD",23,0)
 . I '$P(ICDTMP,U,10) W "   **CODE INACTIVE" I $P(ICDTMP,U,12)'="" S Y=$P(ICDTMP,U,12) D DD^%DT W " AS OF   ",Y," **",!
"RTN","ICDCOD",24,0)
 Q
"RTN","ICDCOD",25,0)
 ;
"RTN","ICDCOD",26,0)
2 ;ICD OPERATION/PROCEDURE
"RTN","ICDCOD",27,0)
 S DIR(0)="PO^80.1:QAEM"
"RTN","ICDCOD",28,0)
 F  W !! D ^DIR Q:Y<0!$D(DIRUT)  D
"RTN","ICDCOD",29,0)
 . N ICDASK
"RTN","ICDCOD",30,0)
 . S DIC="^ICD0(",DA=+Y,DR=".01;4;10;100;102",DIQ(0)="EN",DIQ="ICDASK"
"RTN","ICDCOD",31,0)
 . D EN^DIQ1
"RTN","ICDCOD",32,0)
 . S ICDTMP=$$ICDOP^ICDCODE(+DA,ICDDATE)
"RTN","ICDCOD",33,0)
 . W !!,ICDASK(80.1,DA,.01,"E"),?15,ICDASK(80.1,DA,4,"E"),!,$G(ICDASK(80.1,DA,10,"E")),"     ",$P(ICDTMP,U,14),!  ;add printing of descript disclaimer msg
"RTN","ICDCOD",34,0)
 . I '$P(ICDTMP,U,10) W "   **CODE INACTIVE" I $P(ICDTMP,U,12)'="" S Y=$P(ICDTMP,U,12) D DD^%DT W " AS OF   ",Y," **",!
"RTN","ICDCOD",35,0)
 Q
"RTN","ICDCOD",36,0)
EXIT Q  ;Exit subroutine
"RTN","ICDDRG")
0^1^B23117273
"RTN","ICDDRG",1,0)
ICDDRG ;ALB/GRR/EG/ADL - ASSIGNS DRG CODES ; 7/20/01 2:34pm
"RTN","ICDDRG",2,0)
 ;;18.0;DRG Grouper;**2,7**;Oct 20, 2000
"RTN","ICDDRG",3,0)
 ;ADL - UPDATED FOR CSV;3/10/03
"RTN","ICDDRG",4,0)
TOP S (ICDDRG,ICDMDC,ICDRTC)=""
"RTN","ICDDRG",5,0)
 ;*********************************************************
"RTN","ICDDRG",6,0)
 ;FOLLOWING LINES CHECK FOR INVALID INPUT VARIABLES
"RTN","ICDDRG",7,0)
 ;
"RTN","ICDDRG",8,0)
 I '$D(ICDDX(1)) S ICDRTC=1 G ERR
"RTN","ICDDRG",9,0)
 I ICDEXP'=0&(ICDEXP'=1)&(ICDEXP'="") S ICDRTC=5 G ERR
"RTN","ICDDRG",10,0)
 I ICDTRS'=0&(ICDTRS'=1)&(ICDTRS'="") S ICDRTC=6 G ERR
"RTN","ICDDRG",11,0)
 I ICDDMS'=0&(ICDDMS'=1)&(ICDDMS'="") S ICDRTC=7 G ERR
"RTN","ICDDRG",12,0)
 I SEX'="M"&(SEX'="F")&(SEX'="") S ICDRTC=4 G ERR
"RTN","ICDDRG",13,0)
 I '$D(ICDDATE) S ICDDATE=DT  ;default is today's FileMan date
"RTN","ICDDRG",14,0)
 ;********************************************************
"RTN","ICDDRG",15,0)
 ;FOLLOWING ESTABLISHES PRIMARY DIAGNOSIS RELATED VARIABLES
"RTN","ICDDRG",16,0)
 ;
"RTN","ICDDRG",17,0)
 D KILL S ICDSEX($S(SEX="M":1,SEX="F":2,1:0))=""
"RTN","ICDDRG",18,0)
 S ICDTMP=$$ICDDX^ICDCODE(ICDDX(1),ICDDATE)
"RTN","ICDDRG",19,0)
 I ICDTMP<0 S ICDRTC=1 G ERR
"RTN","ICDDRG",20,0)
 S ICDY(0)=$P(ICDTMP,U,2,99) I $P(ICDY(0),"^",4)=1!($P(ICDY(0),"^",9)=0) S ICDRTC=1 G ERR  ;flag has changed from inactive flag to status flag
"RTN","ICDDRG",21,0)
 S ICDMDC=$P(ICDY(0),"^",5),ICDPD=$P(ICDY(0),"^",2),ICDRG=0 I 'ICDMDC S ICDDRG=469,ICDRTC=1 G ERR
"RTN","ICDDRG",22,0)
 D MDCG
"RTN","ICDDRG",23,0)
 I $D(ICDMDC(12))!($D(ICDMDC(13))) S ICDMDC=$S(SEX="F":13,1:12) I SEX="" S ICDRTC=4 G ERR
"RTN","ICDDRG",24,0)
 ;I $D(^ICD9(ICDDX(1),"DRG")) S ICDPDRG=^("DRG") F ICDI=1:1 Q:$P(ICDPDRG,"^",ICDI)']""  S ICDPDRG($P(ICDPDRG,"^",ICDI))="",ICDRG($P(ICDPDRG,"^",ICDI))=""
"RTN","ICDDRG",25,0)
 S ICDTMP=$$GETDRG^ICDGTDRG(ICDDX(1),ICDDATE,9) I ICDTMP>0 S ICDPDRG=$P(ICDTMP,";") D
"RTN","ICDDRG",26,0)
 . F ICDI=1:1 Q:$P(ICDPDRG,"^",ICDI)']""  S ICDPDRG($P(ICDPDRG,"^",ICDI))="",ICDRG($P(ICDPDRG,"^",ICDI))=""
"RTN","ICDDRG",27,0)
 S ICD104=0,ICDP24=$P(ICDY(0),"^",12),ICDP25=$P(ICDY(0),"^",13) D SEX9
"RTN","ICDDRG",28,0)
 ;
"RTN","ICDDRG",29,0)
 ;FOLLOWING ESTABLISHES SECONDARY DIAGNOSIS VARIABLES
"RTN","ICDDRG",30,0)
 ;
"RTN","ICDDRG",31,0)
 S (ICDCCT,ICDSD)="",ICDCC=0,ICDI=1
"RTN","ICDDRG",32,0)
 F ICDIZ=0:0 S ICDI=$O(ICDDX(ICDI)) Q:ICDI'>0  D  G:ICDRTC]"" ERR
"RTN","ICDDRG",33,0)
 . S ICDTMP=$$ICDDX^ICDCODE(ICDDX(ICDI),ICDDATE) I ICDTMP<0!'($P(ICDTMP,U,10)) S ICDRTC=8 Q
"RTN","ICDDRG",34,0)
 . S ICDY(0)=$P(ICDTMP,U,2,99),ICDDXT($P(ICDY(0),"^",1))=""
"RTN","ICDDRG",35,0)
 . S ICDP15($S($P(ICDY(0),"^",2)["J":1,1:0))=""
"RTN","ICDDRG",36,0)
 . D SEC,SEX9 G:ICDRTC]"" ERR
"RTN","ICDDRG",37,0)
 S:$D(ICDCCT(1)) ICDCC=1 K ICDCCT
"RTN","ICDDRG",38,0)
 ;********************************************************
"RTN","ICDDRG",39,0)
 ;FOLLOWING ESTABLISHES OPERATION/PROCEDURE VARIABLES
"RTN","ICDDRG",40,0)
 ;
"RTN","ICDDRG",41,0)
 S (ICDMAJ,ICDORNI,ICDOP,ICDOR)="",(ICDOCNT,ICDONR,ICDORNR,ICDNOR,ICDOPCT,ICDOPNR)=0
"RTN","ICDDRG",42,0)
 I $D(ICDPRC) F ICDI=1:1 Q:'$D(ICDPRC(ICDI))  X "S ICDTMP=$$ICDOP^ICDCODE(ICDPRC(ICDI),ICDDATE) I ICDTMP<0!'($P(ICDTMP,U,10)) S ICDRTC=2 Q" I ICDRTC="" D 
"RTN","ICDDRG",43,0)
 . S ICDY(0)=$P(ICDTMP,U,2,99),ICDNOR=ICDNOR+1,ICDY=ICDPRC(ICDI),ICDO24($S($P(ICDY(0),"^",3)'="":$P(ICDY(0),"^",3),1:"N"))="" D OPSTUF,SEX9
"RTN","ICDDRG",44,0)
 K ICDO24("N") G:ICDRTC]"" ERR
"RTN","ICDDRG",45,0)
 G ^ICDDRG0
"RTN","ICDDRG",46,0)
SEC S ICDCC=$S($D(^ICD9("ACC",ICDDX(ICDI),ICDDX(1))):0,$P(ICDY(0),"^",7)=1:1,1:ICDCC),ICDCCT(ICDCC)=""
"RTN","ICDDRG",47,0)
 S ICDSD=ICDSD_$P(ICDY(0),"^",2)
"RTN","ICDDRG",48,0)
 S ICDTMP=$$GETDRG^ICDGTDRG(ICDDX(ICDI),ICDDATE,9)
"RTN","ICDDRG",49,0)
 I (($P(ICDY(0),"^",7)=1)!(ICDPD["h")!(ICDPD["J")!(ICDSD["h")),'$P(ICDTMP,";",3) D
"RTN","ICDDRG",50,0)
 . S ICDSDRG=$P(ICDTMP,";")
"RTN","ICDDRG",51,0)
 . F ICDK=1:1 Q:$P(ICDSDRG,"^",ICDK)']""  S ICDSDRG($P(ICDSDRG,"^",ICDK))=""
"RTN","ICDDRG",52,0)
 S ICDS24($S($P(ICDY(0),"^",12)'="":$P(ICDY(0),"^",12),1:"N"))="",ICDS25($S($P(ICDY(0),"^",13)'="":$P(ICDY(0),"^",13),1:0))=""
"RTN","ICDDRG",53,0)
 K ICDS24("N"),ICDS25(0) Q
"RTN","ICDDRG",54,0)
OPSTUF I '$D(ICDOP(" "_$P(ICDY(0),"^",1))) S ICDOP(" "_$P(ICDY(0),"^",1))="",ICDOCNT=ICDOCNT+1
"RTN","ICDDRG",55,0)
 I $S($D(ICDMDC(12))!($D(ICDMDC(13)))>0:'$$MDCT("ICDMDC",0),1:'$D(^ICD0(ICDY,"MDC",ICDMDC,0))) D
"RTN","ICDDRG",56,0)
 .S ICDONR=ICDONR+1,ICDORNI=ICDORNI_$P(ICDY(0),"^",2),ICDORNI($S($P(ICDY(0),"^",2)'="":$P(ICDY(0),"^",2),1:0))="" S:ICDORNR'=0 ICDORNR=1
"RTN","ICDDRG",57,0)
 S ICDOR=ICDOR_$P(ICDY(0),"^",2)
"RTN","ICDDRG",58,0)
 I +ICDY(0)>37.69,+ICDY(0)<37.84,ICDOR'["p" D
"RTN","ICDDRG",59,0)
 .N ICDCC3
"RTN","ICDDRG",60,0)
 .D EN1^ICDDRG5 I ICDCC3 S ICDOR=ICDOR_"p" S:ICDOR'["O" ICDOR=ICDOR_"O"
"RTN","ICDDRG",61,0)
 .Q
"RTN","ICDDRG",62,0)
 I +ICDY(0)>80.999 I +ICDY(0)<81.40 N ICDCC3 D EN1^ICDDRG8 I ICDCC3 S ICDOR=ICDOR_"F"
"RTN","ICDDRG",63,0)
 S:$D(^ICD0(ICDY,"M")) ICDMAJ=ICDMAJ_$P(^ICD0(ICDY,"M"),"^")_"^"
"RTN","ICDDRG",64,0)
 I $P(ICDY(0),"^",2)["O" D
"RTN","ICDDRG",65,0)
 .S ICDOPCT=ICDOPCT+1
"RTN","ICDDRG",66,0)
 .I ICDOPNR=0 D
"RTN","ICDDRG",67,0)
 ..I $S($D(ICDMDC(12))!($D(ICDMDC(13)))>0:'$$MDCT("ICDMDC",0),1:'$D(^ICD0(ICDY,"MDC",ICDMDC,0))) S ICDOPNR=1
"RTN","ICDDRG",68,0)
 I $D(^ICD0(ICDY,"MDC",ICDMDC,"DRG")) S ICDF=^("DRG") F ICDFX=1:1:6 Q:$P(ICDF,"^",ICDFX)']""  S ICDODRG($P(ICDF,"^",ICDFX))=$P(ICDF,"^",ICDFX)
"RTN","ICDDRG",69,0)
 ;translate specific identifiers into common symbol, check for symbol
"RTN","ICDDRG",70,0)
 S ICD104=$S($P(ICDY(0),"^",2)["P":1,1:0),ICDNMDC($S($TR($P(ICDY(0),"^",2),"ltrB","\\\\")["\":1,1:0))="" Q
"RTN","ICDDRG",71,0)
ERR S ICDDRG=470
"RTN","ICDDRG",72,0)
 Q  ;ERR
"RTN","ICDDRG",73,0)
SEX9 ;get sex for dx or proc
"RTN","ICDDRG",74,0)
 S ICDSEX($S($P(ICDY(0),"^",10)="M":1,$P(ICDY(0),"^",10)="F":2,1:0))=""
"RTN","ICDDRG",75,0)
 Q
"RTN","ICDDRG",76,0)
MDCG ;set up ICDMDC() array
"RTN","ICDDRG",77,0)
 N X,Y,I,N,DRG,MDC,ICDTMP
"RTN","ICDDRG",78,0)
 S ICDTMP=$$GETDRG^ICDGTDRG(ICDDX(1),ICDDATE,9) Q:'$P(ICDTMP,";",3)
"RTN","ICDDRG",79,0)
 S Y=$P(ICDTMP,";")
"RTN","ICDDRG",80,0)
 S N=$L(Y)-$L($TR(Y,"^"))
"RTN","ICDDRG",81,0)
 F I=1:1:N+1 D
"RTN","ICDDRG",82,0)
 .S DRG=$P(Y,"^",I) Q:DRG=""
"RTN","ICDDRG",83,0)
 .S MDC=$P($$DRG^ICDGTDRG(DRG,ICDDATE),"^",5) Q:MDC=""
"RTN","ICDDRG",84,0)
 .S ICDMDC(MDC)=""
"RTN","ICDDRG",85,0)
 Q
"RTN","ICDDRG",86,0)
MDCT(MDC,PAR) ;for multiple mdc dx codes
"RTN","ICDDRG",87,0)
 ;MDC is array of MDC's (MDC(ICDMDC)=""), PAR global node to test
"RTN","ICDDRG",88,0)
 ;
"RTN","ICDDRG",89,0)
 N I,MD,BOOL
"RTN","ICDDRG",90,0)
 S MD="" F I=1:1 S MD=$O(@MDC@(MD)) Q:MD=""  D
"RTN","ICDDRG",91,0)
 .I $D(^ICD0(ICDY,"MDC",MD,PAR)) S BOOL(1)=""
"RTN","ICDDRG",92,0)
 .S BOOL(0)=""
"RTN","ICDDRG",93,0)
 I '$D(BOOL(1)) Q 0
"RTN","ICDDRG",94,0)
 Q 1
"RTN","ICDDRG",95,0)
KILL K ICD104,ICDJ,ICDJJ,ICDOCNT,ICDOR,ICDNOR,ICDP15,ICDPDRG,ICDRG,ICDSEX
"RTN","ICDDRG",96,0)
 K ICDSDRG,ICDODRG,ICDCC,ICDOP,ICDORNR,ICDORNI,ICDP24,ICDP25,ICDPD
"RTN","ICDDRG",97,0)
 K ICDSD,ICDI,ICDK,ICDF,ICDFX,ICDFK,ICDY,ICDDXT,ICDIZ,ICDONR,ICDOPCT
"RTN","ICDDRG",98,0)
 K ICD,ICDCC3,ICDGH,ICDL39,ICDMAJ,ICDNMDC,ICDNSD,ICDORNA,ICDREF,ICDS25
"RTN","ICDDRG",99,0)
 K ICDOPNR,ICDO24
"RTN","ICDDRG",100,0)
 Q
"RTN","ICDDRG0")
0^11^B26840719
"RTN","ICDDRG0",1,0)
ICDDRG0 ;ALB/GRR/EG/ADL - DRG GROUPER PROCESSING BEGINS ; 9/21/01 11:42am
"RTN","ICDDRG0",2,0)
 ;;18.0;DRG Grouper;**1,2,7**;Oct 20, 2000
"RTN","ICDDRG0",3,0)
 ;GROUPING PROCESS BEGINS
"RTN","ICDDRG0",4,0)
 ;
"RTN","ICDDRG0",5,0)
GROUP ;
"RTN","ICDDRG0",6,0)
 I $D(ICDSEX(1))&($D(ICDSEX(2))) S ICDRTC=4,ICDDRG=470 G KILL^ICDDRG
"RTN","ICDDRG0",7,0)
 I ICDMDC'=14,ICDMDC'=17,ICDMDC'=18,ICDMDC'=19,ICDMDC'=20,ICDMDC'=23,ICDMDC'=15 D:ICDOPCT<2  I "468^476^477"[ICDRG G END
"RTN","ICDDRG0",8,0)
 . ;I ICDPD["M",ICDOR'["a" S ICDPDRG(344)="",ICDOPCT=0
"RTN","ICDDRG0",9,0)
 . I $D(ICDF) Q
"RTN","ICDDRG0",10,0)
 . I ICDPD["M",ICDOR'["y" S ICDOPCT=0 Q
"RTN","ICDDRG0",11,0)
 .I ICDORNI["O",ICDNOR=ICDONR,ICDNOR>0,'$D(ICDPDRG(377)),ICDORNI'["p" S ICDRG=$S($D(ICDORNI("O")):468,ICDORNI["y":476,ICDORNI["z":477,1:468) Q
"RTN","ICDDRG0",12,0)
 .I ICDOPNR S ICDRG=$S(ICDORNI["y":476,1:468),ICDOPNR=0 Q
"RTN","ICDDRG0",13,0)
 ;
"RTN","ICDDRG0",14,0)
 ;if number of non-extensive ORs eqs # OR, 477
"RTN","ICDDRG0",15,0)
 ;
"RTN","ICDDRG0",16,0)
 I ICDMDC'=14,ICDMDC'=17,ICDMDC'=18,ICDMDC'=19,ICDMDC'=20,ICDMDC'=23,ICDMDC'=15,ICDORNI'["y"&(ICDORNI'="")&(ICDORNI["z") D  I ICDRG=477 G END
"RTN","ICDDRG0",17,0)
 . I $D(ICDF) Q
"RTN","ICDDRG0",18,0)
 . NEW K S K=$$ORNI(ICDORNI) I K=ICDOPCT S ICDRG=477 Q
"RTN","ICDDRG0",19,0)
 ;
"RTN","ICDDRG0",20,0)
 ;if number of non-extensive ORs+prostatics eqs # OR, 476
"RTN","ICDDRG0",21,0)
 ;
"RTN","ICDDRG0",22,0)
 I ICDMDC'=14,ICDMDC'=17,ICDMDC'=18,ICDMDC'=19,ICDMDC'=20,ICDMDC'=23,ICDMDC'=15,ICDORNI["y"&(ICDORNI'="") D  I ICDRG=476 G END
"RTN","ICDDRG0",23,0)
 .N K S K=$$ORNI(ICDORNI) I K=ICDOPCT&(ICDNOR=ICDONR) S ICDRG=476 Q
"RTN","ICDDRG0",24,0)
 I ICDMDC'=14,ICDMDC'=17,ICDMDC'=18,ICDMDC'=19,ICDMDC'=20,ICDMDC'=23,ICDMDC'=15,ICDNOR=ICDONR&(ICDOPCT>0) S ICDRG=468 G END
"RTN","ICDDRG0",25,0)
 I ICDMDC=5,ICDOR'["O" S ICDRTC=$S(ICDEXP="":5,1:"") S:ICDRTC'="" ICDRG=470 D:ICDRTC="" MI G END
"RTN","ICDDRG0",26,0)
 I ICDMDC=18,ICDOR["O"!(ICDORNI["O") S ICDRG=415 G END
"RTN","ICDDRG0",27,0)
 I ICDMDC=19,ICDOCNT>0,ICDOR["O" S (ICDRG,HICDRG)=424 D CKDRG
"RTN","ICDDRG0",28,0)
 I ICDMDC=23,ICDOR["O"!(ICDORNI["O") S ICDRG=461 G END
"RTN","ICDDRG0",29,0)
 I ICDMDC=14 D ^ICDDRG14 I ICDRG]"" G END
"RTN","ICDDRG0",30,0)
 I ICDMDC=20 S ICDRTC=$S(ICDDMS="":7,1:"") I ICDDMS'=0 S ICDRG=$S(ICDDMS="":470,1:433) G END
"RTN","ICDDRG0",31,0)
 I ICDMDC=22 S ICDRTC=$S(ICDTRS="":6,1:"") S:ICDRTC'="" ICDRG=470 D:ICDRTC="" CKBURN G END
"RTN","ICDDRG0",32,0)
 I ICDMDC=15 S ICDRTC=$S(ICDEXP="":5,ICDTRS="":6,1:"") I ICDTRS'=0 S ICDRG=$S(ICDRTC'="":470,1:385) G END
"RTN","ICDDRG0",33,0)
NEONATE I 'ICDNOR!('$D(ICDODRG)) S ICDRG=$O(ICDPDRG(0)) X "I ICDMDC=15,$D(ICDSDRG),$O(ICDSDRG(0))<ICDRG S ICDRG=$S($D(ICDPDRG(391)):391,$D(ICDPDRG(387)):387,1:$O(ICDSDRG(0)))" D  D DODRG G GETMOR:ICDRG="",END
"RTN","ICDDRG0",34,0)
 . N X,X1,X2,%
"RTN","ICDDRG0",35,0)
 . S X1=$S($G(DGADM):$G(DGADM),1:DT),X2=$G(DOB) I X1,X2 D ^%DTC I X<29 D NBCOMP Q
"RTN","ICDDRG0",36,0)
 . I ICDRG<385!(ICDRG>391) Q
"RTN","ICDDRG0",37,0)
 .; I "^11917^11918^11921^"[("^"_ICDDX(1)_"^") S ICDRG=395 Q
"RTN","ICDDRG0",38,0)
 . I $O(ICDRG(391)) S ICDRG=$O(ICDRG(391)) Q
"RTN","ICDDRG0",39,0)
 . S ICDRG=470,ICDRTC=8
"RTN","ICDDRG0",40,0)
 I AGE="",ICDMDC=3 S ICDRTC=3,ICDRG=470 G END
"RTN","ICDDRG0",41,0)
 D ^ICDDRG2:ICDMDC=2,^ICDDRG3:ICDMDC=3,^ICDDRG5:ICDMDC=5,^ICDDRG6:ICDMDC=6,^ICDDRG7:ICDMDC=7,^ICDDRG8:ICDMDC=8,^ICDDRG9:ICDMDC=9,^ICDDRG10:ICDMDC=10,^ICDDRG12:ICDMDC=12,^ICDDRG13:ICDMDC=13
"RTN","ICDDRG0",42,0)
CONT G:ICDMDC=15 GETMOR S (ICDRG,HICDRG)=$O(ICDODRG(0)) G:ICDRG'>0 ENTER
"RTN","ICDDRG0",43,0)
 D DODRG
"RTN","ICDDRG0",44,0)
 G:ICDRG'>0 LOOK8:ICDMDC=8,AGAIN G END
"RTN","ICDDRG0",45,0)
ENTER I 'ICDNOR,ICDORNR'=0,ICDMDC'=20,ICDMDC'=15 S ICDRG=468 G END
"RTN","ICDDRG0",46,0)
GETMOR S (ICDRG,HICDRG)=$O(ICDPDRG(0)) S:ICDRG'>0 (ICDRG,HICDRG)=469 ;I ICDMDC=15,'$D(ICDODRG),$D(ICDSDRG),$O(ICDSDRG(0))<ICDRG S (ICDRG,HICDRG)=$O(ICDSDRG(0))
"RTN","ICDDRG0",47,0)
CKDRG D DODRG
"RTN","ICDDRG0",48,0)
 I ICDRG="" K ICDPDRG(HICDRG) G GETMOR
"RTN","ICDDRG0",49,0)
DODRG I $D(^ICD(ICDRG,"MC1")),^("MC1")'="" S ICDREF="DRG"_ICDRG_"^"_^("MC1") D @ICDREF
"RTN","ICDDRG0",50,0)
 I ICDOR["4" D DRG232^ICDTLB3
"RTN","ICDDRG0",51,0)
 Q
"RTN","ICDDRG0",52,0)
ORNI(X) ;
"RTN","ICDDRG0",53,0)
 N I,K
"RTN","ICDDRG0",54,0)
 S K=0 F I=1:1:$L(ICDORNI) I $E(ICDORNI,I,I)="z"!($E(ICDORNI,I,I)="y") S K=K+1
"RTN","ICDDRG0",55,0)
 Q K
"RTN","ICDDRG0",56,0)
END ;
"RTN","ICDDRG0",57,0)
 D:ICDP24'=""!($D(ICDS24)) CKMST^ICDDRGX S ICDDRG=ICDRG
"RTN","ICDDRG0",58,0)
 D:$G(ICDP25)=1!(($G(ICDP25)>1)&($D(ICDS25(1)))) CKHIV^ICDDRGX S ICDDRG=ICDRG
"RTN","ICDDRG0",59,0)
 ; this will effectively make DRG 103 into a pre-MDC (ICD*18*1)
"RTN","ICDDRG0",60,0)
 I $D(ICDOP(" 33.6"))!$D(ICDOP(" 37.5")) S ICDRG=103,ICDNMDC(1)=""
"RTN","ICDDRG0",61,0)
 ; this will create DRGs 512/513 as pre-MDC
"RTN","ICDDRG0",62,0)
 I $D(ICDOP(" 52.80"))!$D(ICDOP(" 52.82")) S ICDRG=513,ICDNMDC(1)=""
"RTN","ICDDRG0",63,0)
 I ICDRG=513 I $D(ICDOP(" 55.69")) S ICDRG=512
"RTN","ICDDRG0",64,0)
 I $D(ICDNMDC(1)) I ICDNMDC(1)="" D CKNMDC^ICDDRGX S ICDDRG=ICDRG K ICDNMDC
"RTN","ICDDRG0",65,0)
 I ICDRG=468 D CHKMDC4^ICDDRGX D DODRG S ICDDRG=ICDRG
"RTN","ICDDRG0",66,0)
 S:ICDRTC="" ICDRTC=0
"RTN","ICDDRG0",67,0)
 S ICDTMP=$$DRG^ICDGTDRG(ICDDRG,ICDDATE) I '$P(ICDTMP,U,14) S ICDDRG=470
"RTN","ICDDRG0",68,0)
 G KILL^ICDDRG
"RTN","ICDDRG0",69,0)
MI I ICDPD["A" D EN1^ICDDRG5 I ICDCC3 S ICDRG=$O(ICDODRG(0)) D DODRG Q
"RTN","ICDDRG0",70,0)
 I ICDPD["AI"!(ICDSD["AI") S ICDRG=$S($S($D(ICDEXP):ICDEXP,1:0):123,ICDPD["V"!(ICDSD["V"):121,1:122) Q
"RTN","ICDDRG0",71,0)
 I $D(ICDOP(" 37.26"))&($D(ICDOP(" 39.61"))) S ICDRG=108 Q
"RTN","ICDDRG0",72,0)
 ;I $D(ICDOP(" 37.26")) S ICDRG=112 Q
"RTN","ICDDRG0",73,0)
 I $D(ICDOP(" 36.06")) I $D(ICDOP(" 37.26"))!$D(ICDOP(" 37.27")) S ICDRG=517 Q
"RTN","ICDDRG0",74,0)
 I $D(ICDOP(" 37.26"))!$D(ICDOP(" 37.27")) S ICDRG=518 Q 
"RTN","ICDDRG0",75,0)
 I ICDOR["H" S ICDRG=$S(ICDPD["X"!(ICDSD["X"):124,1:125) Q
"RTN","ICDDRG0",76,0)
 K ICDPDRG(124)
"RTN","ICDDRG0",77,0)
 I ICDOR["p" S ICDRG=$O(ICDODRG(0)) D DODRG Q
"RTN","ICDDRG0",78,0)
 I ICDOR["F" S ICDRG=$O(ICDODRG(0)) D DODRG Q
"RTN","ICDDRG0",79,0)
 E  K ICDPDRG(121) S ICDRG=$O(ICDPDRG(0)) D DODRG Q
"RTN","ICDDRG0",80,0)
 ;
"RTN","ICDDRG0",81,0)
CKBURN ; MDC22 - Burns (extensive, full thickness, or non-extensive)
"RTN","ICDDRG0",82,0)
 D
"RTN","ICDDRG0",83,0)
 . I ICDPD["*"!(ICDSD["*") S ICDRG=$S(ICDOR["k":504,1:505) Q
"RTN","ICDDRG0",84,0)
 . I ICDPD["b"!(ICDSD["b") D FTBURN Q
"RTN","ICDDRG0",85,0)
 . S ICDRG=$S(ICDCC!(ICDPD["T")!(ICDSD["T"):510,1:511)
"RTN","ICDDRG0",86,0)
 Q
"RTN","ICDDRG0",87,0)
 ;
"RTN","ICDDRG0",88,0)
AGAIN G:'$D(ICDODRG) ENTER
"RTN","ICDDRG0",89,0)
 K ICDODRG(HICDRG) I $O(ICDODRG(HICDRG))'>0 K ICDODRG G GROUP
"RTN","ICDDRG0",90,0)
 S ICDRG=$O(ICDODRG(HICDRG)) G GROUP
"RTN","ICDDRG0",91,0)
 ;
"RTN","ICDDRG0",92,0)
 ;
"RTN","ICDDRG0",93,0)
LOOK8 G:'$D(ICDJ) GETMOR
"RTN","ICDDRG0",94,0)
 S ICDJ=$O(ICDJ(0)) G:ICDJ'>0 GETMOR
"RTN","ICDDRG0",95,0)
 K ICDJ(ICDJ),ICDODRG D END^ICDDRG8 G GETMOR:'$D(ICDODRG),CONT
"RTN","ICDDRG0",96,0)
 Q
"RTN","ICDDRG0",97,0)
 ;
"RTN","ICDDRG0",98,0)
NBCOMP ; check for complication related to NB
"RTN","ICDDRG0",99,0)
 I ICDSD'["J"!'$D(ICDSDRG) Q
"RTN","ICDDRG0",100,0)
 N ICDSDXCK
"RTN","ICDDRG0",101,0)
 S ICDSDXCK=$O(ICDSDRG(0))
"RTN","ICDDRG0",102,0)
 I ICDSDXCK<ICDRG,ICDSDXCK>384,ICDSDXCK<392 D
"RTN","ICDDRG0",103,0)
 . S ICDRG=$S($D(ICDPDRG(391)):391,$D(ICDPDRG(387)):387,1:$O(ICDSDRG(0)))
"RTN","ICDDRG0",104,0)
 Q
"RTN","ICDDRG0",105,0)
 ;
"RTN","ICDDRG0",106,0)
FTBURN ; full thickness burn check
"RTN","ICDDRG0",107,0)
 I ICDSD["j"!(ICDOR["k") D
"RTN","ICDDRG0",108,0)
 . I ICDCC!(ICDPD["T")!(ICDSD["T") S ICDRG=506
"RTN","ICDDRG0",109,0)
 . E  S ICDRG=507
"RTN","ICDDRG0",110,0)
 E  D
"RTN","ICDDRG0",111,0)
 . I ICDCC!(ICDPD["T")!(ICDSD["T") S ICDRG=508
"RTN","ICDDRG0",112,0)
 . E  S ICDRG=509
"RTN","ICDDRG0",113,0)
 Q
"RTN","ICDDRG5")
0^4^B10341112
"RTN","ICDDRG5",1,0)
ICDDRG5 ;ALB/GRR/EG/MRY/ADL - FIX SURGERY HIERARCHY ; 3/20/03 10:36am
"RTN","ICDDRG5",2,0)
 ;;18.0;DRG Grouper;**2,5,7**;Oct 20, 2000
"RTN","ICDDRG5",3,0)
 Q:$O(ICDODRG(0))'>0  K ICDJ,ICDJJ F ICDJ=0:0 S ICDJ=$O(ICDODRG(ICDJ)) Q:ICDJ'>0  S ICDJJ(ICDJ)="" D F
"RTN","ICDDRG5",4,0)
END S ICDJ=$O(ICDJ(0)) Q:ICDJ'>0  S ICDJ=ICDJ(ICDJ) K ICDODRG S ICDODRG(ICDJ)="" Q
"RTN","ICDDRG5",5,0)
F I ICDJ=103 S ICDJ(1)=ICDJ Q
"RTN","ICDDRG5",6,0)
 I ICDJ=525 S ICDJ(2)=ICDJ Q
"RTN","ICDDRG5",7,0)
 I ICDJ=104 S ICDJ(3)=ICDJ Q
"RTN","ICDDRG5",8,0)
 I ICDJ=514 S ICDJ(4)=ICDJ Q
"RTN","ICDDRG5",9,0)
 I ICDJ=515 S ICDJ(5)=ICDJ Q
"RTN","ICDDRG5",10,0)
 I ICDJ=108 S ICDJ(6)=ICDJ Q
"RTN","ICDDRG5",11,0)
 I ICDJ=106 S ICDJ(7)=ICDJ Q
"RTN","ICDDRG5",12,0)
 I ICDJ=110 S ICDJ(8)=ICDJ Q
"RTN","ICDDRG5",13,0)
 I ICDJ=111 S ICDJ(9)=ICDJ Q
"RTN","ICDDRG5",14,0)
 I ICDJ=113 S ICDJ(10)=ICDJ Q
"RTN","ICDDRG5",15,0)
 I ICDJ=115 S ICDJ(11)=ICDJ Q
"RTN","ICDDRG5",16,0)
 I ICDJ=116 S ICDJ(12)=ICDJ Q
"RTN","ICDDRG5",17,0)
 I ICDJ=526 S ICDJ(13)=ICDJ Q
"RTN","ICDDRG5",18,0)
 I ICDJ=527 S ICDJ(14)=ICDJ Q
"RTN","ICDDRG5",19,0)
 I ICDJ=516 S ICDJ(15)=ICDJ Q
"RTN","ICDDRG5",20,0)
 I ICDJ=517 S ICDJ(16)=ICDJ Q
"RTN","ICDDRG5",21,0)
 I ICDJ=518 S ICDJ(17)=ICDJ Q
"RTN","ICDDRG5",22,0)
 I ICDJ=478 S ICDJ(18)=ICDJ Q
"RTN","ICDDRG5",23,0)
 I ICDJ=479 S ICDJ(19)=ICDJ Q
"RTN","ICDDRG5",24,0)
 ;I ICDJ=112 S ICDJ(13)=ICDJ Q
"RTN","ICDDRG5",25,0)
 I ICDJ=114 S ICDJ(20)=ICDJ Q
"RTN","ICDDRG5",26,0)
 I ICDJ=118 S ICDJ(21)=ICDJ Q
"RTN","ICDDRG5",27,0)
 I ICDJ=117 S ICDJ(22)=ICDJ Q
"RTN","ICDDRG5",28,0)
 I ICDJ=119 S ICDJ(23)=ICDJ Q
"RTN","ICDDRG5",29,0)
 I ICDJ=120 S ICDJ(24)=ICDJ
"RTN","ICDDRG5",30,0)
 Q
"RTN","ICDDRG5",31,0)
EN1 S ICDCC3=0
"RTN","ICDDRG5",32,0)
 I $D(ICDOP(" 37.70"))!($D(ICDOP(" 37.71")))!($D(ICDOP(" 37.73"))) D MORE Q
"RTN","ICDDRG5",33,0)
 I $D(ICDOP(" 37.72")) I $D(ICDOP(" 37.80"))!($D(ICDOP(" 37.83"))) S ICDCC3=1 Q
"RTN","ICDDRG5",34,0)
 I $D(ICDOP(" 37.74")) I $D(ICDOP(" 37.80"))!($D(ICDOP(" 37.81")))!($D(ICDOP(" 37.82")))!($D(ICDOP(" 37.83")))!($D(ICDOP(" 37.85")))!($D(ICDOP(" 37.86")))!($D(ICDOP(" 37.87"))) S ICDCC3=1 Q
"RTN","ICDDRG5",35,0)
 I $D(ICDOP(" 37.76")) I $D(ICDOP(" 37.80"))!($D(ICDOP(" 37.85")))!($D(ICDOP(" 37.86")))!($D(ICDOP(" 37.87"))) S ICDCC3=1 Q
"RTN","ICDDRG5",36,0)
 Q
"RTN","ICDDRG5",37,0)
MORE I $D(ICDOP(" 37.80"))!($D(ICDOP(" 37.81")))!($D(ICDOP(" 37.82")))!($D(ICDOP(" 37.85")))!($D(ICDOP(" 37.86")))!($D(ICDOP(" 37.87"))) S ICDCC3=1 Q
"RTN","ICDDRG5",38,0)
 Q
"RTN","ICDDRG5",39,0)
VALV ;valve procedure
"RTN","ICDDRG5",40,0)
 N ICDTMP
"RTN","ICDDRG5",41,0)
 S (ICDCATH,ICDAJ)="" F ICDI=1:1 Q:'$D(ICDPRC(ICDI))  S ICDAJ=ICDPRC(ICDI),ICDTMP=$$ICDOP^ICDCODE(ICDAJ,$G(ICDDATE)),ICDY(0)=$S((ICDTMP>0&$P(ICDTMP,U,10)):$P(ICDTMP,U,2,99),1:0) I ICDY(0) D
"RTN","ICDDRG5",42,0)
 . S ICDOP($P(ICDY(0),"^",1))="",ICDCATH=ICDCATH_$P(ICDY(0),"^",2)
"RTN","ICDDRG5",43,0)
 S ICDE1=$S($D(ICDOP(37.95))&($D(ICDOP(37.96))):1,1:0),ICDE2=$S($D(ICDOP(37.97))&($D(ICDOP(37.98))):1,1:0)
"RTN","ICDDRG5",44,0)
 Q
"RTN","ICDDRG5",45,0)
 S:ICDCATH["H" ICDRG=$S(ICDCATH["N"&ICDE1:104,ICDCATH["N"&ICDE2:104,ICDCATH["O":104,1:ICDRG)
"RTN","ICDDRG5",46,0)
 S:ICDCATH'["H" ICDRG=$S(ICDCATH["N"&ICDE1:105,ICDCATH["N"&ICDE2:105,ICDCATH["O":105,1:ICDRG)
"RTN","ICDDRG5",47,0)
 K ICDCATH,ICDAJ,ICDE1,ICDE2,ICDI,ICDOP,ICDY Q
"RTN","ICDDRG5",48,0)
VALV1 ;dx combo's for DRG120
"RTN","ICDDRG5",49,0)
 S ICDE1=$S($D(ICDOP(" 37.95"))&($D(ICDOP(" 37.96"))):1,1:0),ICDE2=$S($D(ICDOP(" 37.97"))&($D(ICDOP(" 37.98"))):1,1:0)
"RTN","ICDDRG5",50,0)
 S ICDRG=$S((ICDE1&(ICDOR["H")):104,(ICDE1&(ICDOR'["H")):105,(ICDE2&(ICDOR["H")):104,(ICDE2&(ICDOR'["H")):105,1:120)
"RTN","ICDDRG5",51,0)
 K ICDE1,ICDE2
"RTN","ICDDRG5",52,0)
 Q
"RTN","ICDDRGM")
0^2^B24746187
"RTN","ICDDRGM",1,0)
ICDDRGM ;ALB/GRR/EG/ADL - GROUPER DRIVER ; 10/23/00 11:45am
"RTN","ICDDRGM",2,0)
 ;;18.0;DRG Grouper;**7**;Oct 20, 2000
"RTN","ICDDRGM",3,0)
 ;;ADL;Add Date prompt and passing of effective date for DRG CSV project
"RTN","ICDDRGM",4,0)
 ;;ADL;Update DIC("S") code to screen using new function calls
"RTN","ICDDRGM",5,0)
 ;;ADL;Update to access DRG file using new API for CSV Project
"RTN","ICDDRGM",6,0)
 S U="^",DT=$$DT^XLFDT W !!?11,"DRG Grouper    Version ","18.0",!! ;$$VERSION^XPDUTL("ICD"),!!
"RTN","ICDDRGM",7,0)
PAT D KILL ; clean up old variables
"RTN","ICDDRGM",8,0)
 S ICDQU=0 K ICDEXP,SEX,ICDDX
"RTN","ICDDRGM",9,0)
 D EFFDATE G KILL:$D(DUOUT),OUT:$D(DTOUT)
"RTN","ICDDRGM",10,0)
 S DIR(0)="Y",DIR("A")="DRGs for Registered PATIENTS  (Y/N)",DIR("B")="YES"
"RTN","ICDDRGM",11,0)
 S DIR("?")="Enter 'Yes' if the patient has been previously registered, enter 'No' for other patient, or '^' to quit."
"RTN","ICDDRGM",12,0)
 D ^DIR K DIR S ICDPT=Y G KILL:$D(DUOUT),OUT:$D(DTOUT)
"RTN","ICDDRGM",13,0)
PAT0 G:ICDPT=0 ASK
"RTN","ICDDRGM",14,0)
VA S DIC="^DPT(",DIC(0)="AEQMZ" D ^DIC G Q:X=""!(X[U)!(Y'>0),OUT:$D(DTOUT) S DFN=+Y,(DOB,AGE)=$P(Y(0),U,3),SEX=$P(Y(0),U,2)
"RTN","ICDDRGM",15,0)
 D TAC G:ICDQU PAT D DAM G:ICDQU PAT
"RTN","ICDDRGM",16,0)
EN1 I $D(^DPT(DFN,.35)),$L(^DPT(DFN,.35)) D ALIVE G:ICDQU PAT
"RTN","ICDDRGM",17,0)
 S ICDEXP=$S($D(ICDEXP):ICDEXP,1:0)
"RTN","ICDDRGM",18,0)
 I AGE]"" N %,X,X1,X2 S X1=DT,X2=AGE D ^%DTC S AGE=X\365.25 W "  AGE: ",AGE
"RTN","ICDDRGM",19,0)
CD K DIC S CC=0,DIC="^ICD9(",DIC(0)="AEQMZ",DIC("A")="Enter Primary diagnosis: " D  D ^DIC K DIC G Q:X=""!(X[U)!(Y'>0),OUT:$D(DTOUT) S ICDDX(1)=+Y
"RTN","ICDDRGM",20,0)
 . S DIC("S")="I '$P($$ICDDX^ICDCODE(+Y,ICDDATE),U,5),$$ISVALID^ICDGTDRG(+Y,ICDDATE,9)"
"RTN","ICDDRGM",21,0)
 F ICDNSD=2:1 S DIC="^ICD9(",DIC(0)="AEQMZ",DIC("A")="Enter SECONDARY diagnosis: ",DIC("S")="I $$ISVALID^ICDGTDRG(+Y,ICDDATE,9)" D ^DIC K DIC Q:X=""!(X[U)!(Y'>0)  G:$D(DTOUT) OUT S ICDDX(ICDNSD)=+Y
"RTN","ICDDRGM",22,0)
 G Q:X[U
"RTN","ICDDRGM",23,0)
OP S DIC("S")="I $$ISVALID^ICDGTDRG(+Y,ICDDATE,0)" K ICDPRC
"RTN","ICDDRGM",24,0)
 W ! F ICDNOR=1:1 S DIC="^ICD0(",DIC(0)="AEQMZ",DIC("A")="Enter Operation/Procedure: " D ^DIC Q:X=""!(X[U)!(Y'>0)  G:$D(DTOUT) OUT S ICDPRC(ICDNOR)=+Y
"RTN","ICDDRGM",25,0)
 K DIC G Q:X["^"
"RTN","ICDDRGM",26,0)
 D ^ICDDRG S:ICDDRG=470 ICDRTC=470 K ICDEXP,SEX,ICDDX I ICDRTC'=0 G ERROR
"RTN","ICDDRGM",27,0)
 D WRT G PAT0
"RTN","ICDDRGM",28,0)
WRT S ICDDRG(0)=$$DRG^ICDGTDRG(+ICDDRG,ICDDATE)  ;  new CSV code
"RTN","ICDDRGM",29,0)
 W !!?9,"Effective Date: ","   ",ICDDSP
"RTN","ICDDRGM",30,0)
 W !,"Diagnosis Related Group: ",$J(ICDDRG,6),?40,"Avg len of stay: ",$J($P(ICDDRG(0),"^",8),6)
"RTN","ICDDRGM",31,0)
 W !?17,"Weight: ",$J($P(ICDDRG(0),"^",2),6),?40,"Local Breakeven: ",$J($P(ICDDRG(0),"^",12),6)
"RTN","ICDDRGM",32,0)
 W !?12," Low day(s): ",$J($P(ICDDRG(0),"^",3),6),?39,"Local low day(s): ",$J($P(ICDDRG(0),"^",9),6)
"RTN","ICDDRGM",33,0)
 W !?13," High days: ",$J($P(ICDDRG(0),"^",4),6),?40,"Local High days: ",$J($P(ICDDRG(0),"^",10),6)
"RTN","ICDDRGM",34,0)
 ;W !!,"DRG: ",ICDDRG,"-" F I=0:0 S I=$N(^ICD(ICDDRG,1,I)) Q:I'>0  W ?10,$P(^(I,0),U,1),!
"RTN","ICDDRGM",35,0)
 W !!,"DRG: ",ICDDRG,"-" F I=0:0 S I=$O(^ICD(ICDDRG,1,I)) Q:(I="")!(I'?.N)  W ?10,$P(^(I,0),U,1),!
"RTN","ICDDRGM",36,0)
 Q
"RTN","ICDDRGM",37,0)
ERROR D WRT
"RTN","ICDDRGM",38,0)
 I ICDRTC<5 W !!,"Invalid ",$S(ICDRTC=1:"Principal Diagnosis",ICDRTC=2:"Operation/Procedure",ICDRTC=3:"Age",ICDRTC=4:"Sex",1:"") G PAT0
"RTN","ICDDRGM",39,0)
 I ICDRTC=5 W !!,"Grouper needs to know if patient died during this episode!" G PAT0
"RTN","ICDDRGM",40,0)
 I ICDRTC=6 W !!,"Grouper needs to know if patient was transferred to an acute care facility!" G PAT0
"RTN","ICDDRGM",41,0)
 I ICDRTC=7 W !!,"Grouper needs to know if patient was discharged against medical advice!" G PAT0
"RTN","ICDDRGM",42,0)
 I ICDRTC=8 W !!,"Patient assigned newborn diagnosis code.  Check diagnosis!" G PAT0
"RTN","ICDDRGM",43,0)
 I ICDRTC=470 W !!,"Grouping function error - contact IRMFO"
"RTN","ICDDRGM",44,0)
 G PAT0
"RTN","ICDDRGM",45,0)
KILL K DIC,DFN,DUOUT,DTOUT,ICDNOR,ICDDX,ICDPRC,ICDEXP,ICDTRS,ICDDMS,ICDDRG,ICDMDC,ICDO24,ICDP24,ICDP25,ICDRTC,ICDPT,ICDQU,ICDNSD,ICDNMDC
"RTN","ICDDRGM",46,0)
 K ICDMAJ,ICDS25,ICDSEX,AGE,DOB,CC,HICDRG,ICD,ICDCC3,ICDJ,ICDJJ,ICDL39,ICDFZ,ICDDT,ICDDSP
"RTN","ICDDRGM",47,0)
 Q
"RTN","ICDDRGM",48,0)
Q G PAT
"RTN","ICDDRGM",49,0)
AGE S DIR(0)="NOA^0:124:0",DIR("A")="Patient's age: ",DIR("?")="Enter how old the patient is (0-124)." D ^DIR K DIR S AGE=Y G QQ:$D(DUOUT),OUT:$D(DTOUT)
"RTN","ICDDRGM",50,0)
 Q
"RTN","ICDDRGM",51,0)
ALIVE S DIR(0)="YO",DIR("A")="Did patient die during this episode" D ^DIR K DIR S ICDEXP=Y G QQ:$D(DUOUT),OUT:$D(DTOUT)
"RTN","ICDDRGM",52,0)
 Q
"RTN","ICDDRGM",53,0)
TAC S DIR(0)="YO",DIR("A")="Was patient transferred to an acute care facility" D ^DIR K DIR S ICDTRS=Y G QQ:$D(DUOUT),OUT:$D(DTOUT)
"RTN","ICDDRGM",54,0)
 Q
"RTN","ICDDRGM",55,0)
DAM S DIR(0)="YO",DIR("A")="Was patient discharged against medical advice" D ^DIR K DIR S ICDDMS=Y G QQ:$D(DUOUT),OUT:$D(DTOUT)
"RTN","ICDDRGM",56,0)
 Q
"RTN","ICDDRGM",57,0)
SEX S DIR(0)="SBO^M:MALE;F:FEMALE",DIR("?")="Enter M for Male and F for Female",DIR("A")="Patient's Sex" D ^DIR K DIR S SEX=Y G QQ:$D(DUOUT),OUT:$D(DTOUT)
"RTN","ICDDRGM",58,0)
 Q
"RTN","ICDDRGM",59,0)
QQ S ICDQU=1 Q
"RTN","ICDDRGM",60,0)
EFFDATE ;prompts for effective date for DRG grouper?
"RTN","ICDDRGM",61,0)
 K DIR S DIR(0)="D^::AEX",DIR("B")="TODAY",DIR("A")="Effective Date"
"RTN","ICDDRGM",62,0)
 S DIR("?")="The effective to be used when calculating the DRG code for the patient."
"RTN","ICDDRGM",63,0)
 D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","ICDDRGM",64,0)
 S ICDDATE=Y,ICDDSP=Y(0)
"RTN","ICDDRGM",65,0)
 Q
"RTN","ICDDRGM",66,0)
ASK K DTOUT,DUOUT D AGE G:ICDQU PAT D ALIVE G:ICDQU PAT D TAC G:ICDQU PAT D DAM G:ICDQU PAT D SEX G:ICDQU PAT G CD
"RTN","ICDDRGM",67,0)
OUT G H^XUS
"RTN","ICDDRGX")
0^5^B12781639
"RTN","ICDDRGX",1,0)
ICDDRGX ;ALB/EG/MRY/ADL - GROUPER PROCESS ; 11/6/02 11:59am
"RTN","ICDDRGX",2,0)
 ;;18.0;DRG Grouper;**1,2,5,7**;Oct 20, 2000
"RTN","ICDDRGX",3,0)
CKHIV ;MDC25 grouping
"RTN","ICDDRGX",4,0)
 ;Q:ICDP25=""
"RTN","ICDDRGX",5,0)
 I ICDPD'["h"&(ICDSD'["h") Q
"RTN","ICDDRGX",6,0)
 S ICDRG=$S(ICDOR["x":488,ICDPD["i"&($D(ICDS25(1))):490,1:ICDRG)
"RTN","ICDDRGX",7,0)
 S ICDGH=$S("488^489^490"[ICDRG:1,1:0),ICDORNI=$S(ICDOCNT>0:ICDORNI,1:0),ICDORNA=$F(ICDORNI,"O",$F(ICDORNI,"O"))
"RTN","ICDDRGX",8,0)
 S:ICDORNI="" ICDORNI=ICDOR
"RTN","ICDDRGX",9,0)
 S ICDRG=$S(ICDP25=1&(ICDORNA>0):488,1:ICDRG) I 'ICDGH&(ICDRG=488) Q
"RTN","ICDDRGX",10,0)
 S:(ICDOCNT>0) ICDRG=$S(ICDP25>1&(ICDORNA>0)&($D(ICDS25(1))):488,1:ICDRG) I 'ICDGH&(ICDRG=488) Q
"RTN","ICDDRGX",11,0)
 I ICDOPCT>0 D  I ICDRG=488 Q
"RTN","ICDDRGX",12,0)
 .;count the non-extensive "z" vs the "O"
"RTN","ICDDRGX",13,0)
 .N K1,K2,I
"RTN","ICDDRGX",14,0)
 .S (K1,K2)=0
"RTN","ICDDRGX",15,0)
 .F I=1:1:$L(ICDORNI) S:$E(ICDORNI,I,I)="z" K1=K1+1 S:$E(ICDORNI,I,I)="O" K2=K2+1
"RTN","ICDDRGX",16,0)
 .I ICDP25=1!(ICDP25>1&($D(ICDS25)>0)) D
"RTN","ICDDRGX",17,0)
 ..I K1<K2&(K1<ICDOPCT) D
"RTN","ICDDRGX",18,0)
 ...S ICDRG=488 Q
"RTN","ICDDRGX",19,0)
 ..I ICDOPCT=1&(ICDORNI'["z") D
"RTN","ICDDRGX",20,0)
 ...S ICDRG=488 Q
"RTN","ICDDRGX",21,0)
 S ICDRG=$S(ICDP25=1&('$D(ICDS25))&('$O(^ICD9(ICDDX(1),"R",0))):490,1:ICDRG) I 'ICDGH&(ICDRG=490) Q
"RTN","ICDDRGX",22,0)
 S ICDRG=$S(ICDP25=1&($D(ICDS25(2))):489,ICDP25=1&($D(ICDS25(3))):490,1:ICDRG) I 'ICDGH&((ICDRG=489)!(ICDRG=490)) Q
"RTN","ICDDRGX",23,0)
 S ICDRG=$S(ICDP25=2&($D(ICDS25(1))):489,ICDP25=3&($D(ICDS25(1))):490,1:ICDRG) I 'ICDGH&((ICDRG=489)!(ICDRG=490)) Q
"RTN","ICDDRGX",24,0)
 S ICDRG=$S((ICDP25&(ICDOCNT=0)&('$D(ICDS25))):490,1:ICDRG) I 'ICDGH&(ICDRG=490) Q
"RTN","ICDDRGX",25,0)
 S:(ICDRG=488)!(ICDRG=489)!(ICDRG=490) ICDRTC=0
"RTN","ICDDRGX",26,0)
 K ICDGH,ICDP25,ICDS25,ICDORNA Q
"RTN","ICDDRGX",27,0)
CKMST ;MDC24 grouping
"RTN","ICDDRGX",28,0)
 S ICDAJ=0 F ICDS24K=1:1 S ICDAJ=$O(ICDS24(ICDAJ)) Q:ICDAJ=""
"RTN","ICDDRGX",29,0)
 S ICDS24K=ICDS24K-1,ICDS24L=0 F ICDI=1:1:8 S:$D(ICDS24(ICDI))&(ICDI'=ICDP24) ICDS24L=$S($D(ICDS24(ICDI)):1,1:0)
"RTN","ICDDRGX",30,0)
 I ICDOR["u" S ICDS24K=ICDS24K+1
"RTN","ICDDRGX",31,0)
 G:((ICDP24=0)&(ICDS24K<2))!((ICDP24>0)&('ICDS24L)) CKMSTE
"RTN","ICDDRGX",32,0)
 S ICDRG=$S(ICDP24=0&(ICDS24K>1)&($D(ICDO24(1))):484,ICDP24>0&($D(ICDO24(1)))&(ICDS24L):484,1:ICDRG) I ICDRG=484 D CKMSTE Q
"RTN","ICDDRGX",33,0)
 S:ICDRG'=484 ICDRG=$S(ICDP24=0&(ICDS24K>1)&($D(ICDO24(2))):485,ICDP24>0&($D(ICDO24(2)))&(ICDS24L):485,1:ICDRG) I ICDRG=485 D CKMSTE Q
"RTN","ICDDRGX",34,0)
 S:ICDRG'=485 ICDRG=$S(ICDP24=0&(ICDS24K>1)&($D(ICDO24(3))):486,ICDP24>0&($D(ICDO24(3)))&(ICDS24L):486,1:ICDRG) I ICDRG=486 D CKMSTE Q
"RTN","ICDDRGX",35,0)
 S ICDRG=$S(ICDP24=0&(ICDS24K>1):487,ICDP24>0&ICDS24L:487,1:ICDRG)
"RTN","ICDDRGX",36,0)
 S:(ICDRG>483)&(ICDRG<488) ICDRTC=0
"RTN","ICDDRGX",37,0)
CKMSTE K ICDAJ,ICDP24,ICDS24,ICDO24,ICDS24K,ICDO24,ICDS24L
"RTN","ICDDRGX",38,0)
 Q
"RTN","ICDDRGX",39,0)
CKNMDC ;non MDC drg's
"RTN","ICDDRGX",40,0)
 S:(ICDRG>479)&(ICDRG<484) ICDRG=470
"RTN","ICDDRGX",41,0)
 ; ICD*18*1 - reorder drg 103 higher than all Pre-MDCs 480-83 & 495
"RTN","ICDDRGX",42,0)
 I ICDRG=103 S ICDRTC=0 Q
"RTN","ICDDRGX",43,0)
 S ICDRG=$S($D(ICDOP(" 31.1"))!($D(ICDOP(" 31.21")))!($D(ICDOP(" 31.29")))&(($P($$ICDDX^ICDCODE(ICDDX(1),ICDDATE),"^",3)'["Y")!($D(ICDOP(" 96.72")))):483,1:ICDRG) I ICDRG=483 S ICDRTC=0 Q
"RTN","ICDDRGX",44,0)
 S ICDRG=$S(ICDOR["l":480,1:ICDRG) I ICDRG=480 S ICDRTC=0 Q
"RTN","ICDDRGX",45,0)
 I ICDRG=512!(ICDRG=513) S ICDRTC=0 Q
"RTN","ICDDRGX",46,0)
 S ICDRG=$S(ICDOR["r":495,1:ICDRG) I ICDRG=495 S ICDRTC=0 Q  ;check for lung tx
"RTN","ICDDRGX",47,0)
 S ICDRG=$S(ICDOR["B":481,1:ICDDRG) I ICDRG=481 S ICDRTC=0 Q
"RTN","ICDDRGX",48,0)
 S ICDRG=$S($D(ICDOP(" 30.3"))!$D(ICDOP(" 30.4")):482,1:ICDRG) I ICDRG=482 S ICDRTC=0 Q
"RTN","ICDDRGX",49,0)
 S ICDRG=$S(ICDOR["t"&($P($$ICDDX^ICDCODE(ICDDX(1),ICDDATE),"^",3)["Y"):482,1:ICDRG) I ICDRG=482 S ICDRTC=0 Q
"RTN","ICDDRGX",50,0)
 Q
"RTN","ICDDRGX",51,0)
 ;
"RTN","ICDDRGX",52,0)
 ;
"RTN","ICDDRGX",53,0)
CHKMDC4 ;MDC 4 drg's
"RTN","ICDDRGX",54,0)
 I (ICDMDC=4!(ICDMDC=98)),(ICDOR["f") S ICDRG=76
"RTN","ICDDRGX",55,0)
 I ICDDRG=468,$G(ICDMDC)=5,$D(ICDOP(" 86.06")) S ICDRG=120
"RTN","ICDDRGX",56,0)
 I ICDDRG=468,$G(ICDMDC)=5,$D(ICDOP(" 92.27")),ICDNOR=1 S ICDRG=120 ;ICD*18*5
"RTN","ICDDRGX",57,0)
 Q
"RTN","ICDGTDRG")
0^10^B29660286
"RTN","ICDGTDRG",1,0)
ICDGTDRG        ;ALB/ADL - COLLECTION OF DRG APIS ; 04/10/03
"RTN","ICDGTDRG",2,0)
 ;;18.0;DRG Grouper;**7**;Oct 20, 2000
"RTN","ICDGTDRG",3,0)
 ;   collection of API's for accessing new "DRG" level of files #80, #80.1, and #80.2
"RTN","ICDGTDRG",4,0)
 ;   These new levels were added for the Code Set Versioning Project
"RTN","ICDGTDRG",5,0)
 ;
"RTN","ICDGTDRG",6,0)
GETDRG(CODE,DGNDT,FILE)      ; get DRG or DRG string associated with diagnosis code for a passed Operations and 
"RTN","ICDGTDRG",7,0)
 ;                      Procedures Code (#80.1) or a ICD Diagnosis file (#80) 
"RTN","ICDGTDRG",8,0)
 ;
"RTN","ICDGTDRG",9,0)
 ;  Input :  CODE - ien number
"RTN","ICDGTDRG",10,0)
 ;           DRGDT - effective date of the diagnosis code
"RTN","ICDGTDRG",11,0)
 ;           FILE - File to check : 9 - ICD9 (file #80)
"RTN","ICDGTDRG",12,0)
 ;                                  0 - ICD0 (file 80.1)
"RTN","ICDGTDRG",13,0)
 ;
"RTN","ICDGTDRG",14,0)
 ;  Output :  DRGS - DRG or string of DRG's (delimited by "^") or -1 if not define;effective date or error 
"RTN","ICDGTDRG",15,0)
 ;                          message;status flag (1=Active;0=Inactive)  
"RTN","ICDGTDRG",16,0)
 ;                          Delimited by ";" because DRG's can be multiple and are delimted by "^"
"RTN","ICDGTDRG",17,0)
 ;
"RTN","ICDGTDRG",18,0)
 ;variables
"RTN","ICDGTDRG",19,0)
 N DRG0,D1,DCS,DCSINF,DRGS,DCSV,DMDC
"RTN","ICDGTDRG",20,0)
 I $G(CODE)="" S DRGS="-1;NO CODE SELECTED;0" G GETDRGQ
"RTN","ICDGTDRG",21,0)
 I $G(FILE)="" S DRGS="-1;NO FILE INPUT;0" G GETDRGQ
"RTN","ICDGTDRG",22,0)
 I $G(DGNDT)="" S DGNDT=DT  ;Default to today's date
"RTN","ICDGTDRG",23,0)
 I FILE'=9,FILE'=0 S DRGS="-1;INVALID FILE INPUT;0" G GETDRGQ
"RTN","ICDGTDRG",24,0)
 S DGNDT=DGNDT+.001  ; Set date for $O,-1
"RTN","ICDGTDRG",25,0)
 S DRG0="",DRGS=""  ; Initialize DRG0 and DRGS variables
"RTN","ICDGTDRG",26,0)
 I FILE=0 D
"RTN","ICDGTDRG",27,0)
 . I CODE<1!'$D(^ICD0(CODE)) S DRGS="-1;NO SUCH ENTRY;0" Q
"RTN","ICDGTDRG",28,0)
 . S DMDC=$O(^ICD0(CODE,"MDC",9999999),-1) I DMDC'="" S DRG0=$G(^ICD0(CODE,"MDC",DMDC,"DRG"))
"RTN","ICDGTDRG",29,0)
 . I DRG0="" S DRGS="-1;NO DRG LEVEL;0"
"RTN","ICDGTDRG",30,0)
 . S DCS=$O(^ICD0(CODE,66,"B",DGNDT),-1),D1=$S(DCS'="":$O(^ICD0(CODE,66,"B",DCS,0)),1:0) S DCSINF=$S($D(^ICD0(CODE,66,D1,"DRG")):^("DRG"),1:DRG0)
"RTN","ICDGTDRG",31,0)
 . S DCSV=$G(^ICD0(CODE,66,D1,0)),DCSV=$TR(DCSV,"^",";")  ; Delimit by ";" because DRG's can be multiple and are delimted by "^"
"RTN","ICDGTDRG",32,0)
 . I DCSV="" S DCSV=$$DTBR^ICDAPIU(1000101,2)_";0"  ;if no "CSV" level defined - default to earliest date (from business rules) and INACTIVE
"RTN","ICDGTDRG",33,0)
 . S DRGS=DCSINF_";"_DCSV
"RTN","ICDGTDRG",34,0)
 ;S CODE=$G(CODE),CODE=$S(CODE:+CODE,1:$$CODEI(CODE)) ; GET ien
"RTN","ICDGTDRG",35,0)
 ;*******************************************************
"RTN","ICDGTDRG",36,0)
 I FILE=9 D
"RTN","ICDGTDRG",37,0)
 . I CODE<1!'$D(^ICD9(CODE)) S DRGS="-1;NO SUCH ENTRY;0" Q
"RTN","ICDGTDRG",38,0)
 . S DRG0=$G(^ICD9(CODE,"DRG")) I DRG0="" S DRGS="-1;NO DRG LEVEL;0"
"RTN","ICDGTDRG",39,0)
 . S DCS=$O(^ICD9(CODE,66,"B",DGNDT),-1),D1=$S(DCS'="":$O(^ICD9(CODE,66,"B",DCS,0)),1:0) S DCSINF=$S($D(^ICD9(CODE,66,D1,"DRG")):^("DRG"),1:DRG0)
"RTN","ICDGTDRG",40,0)
 . S DCSV=$G(^ICD9(CODE,66,D1,0)),DCSV=$TR(DCSV,"^",";")  ;Delimit by ";" because DRG's can be multiple and are delimted by "^"
"RTN","ICDGTDRG",41,0)
 . I DCSV="" S DCSV=$$DTBR^ICDAPIU(1000101,2)_";0"  ;if no "CSV" level defined - default to earliest date (from business rules) and INACTIVE
"RTN","ICDGTDRG",42,0)
 . S DRGS=DCSINF_";"_DCSV
"RTN","ICDGTDRG",43,0)
 ;
"RTN","ICDGTDRG",44,0)
GETDRGQ Q DRGS  ;EXIT API TO RETURN DRGS
"RTN","ICDGTDRG",45,0)
 ;
"RTN","ICDGTDRG",46,0)
DRG(CODE,EDT)   ;returns a string of information from the DRG file (#80.2) for a given DRG code and effective date
"RTN","ICDGTDRG",47,0)
 ;
"RTN","ICDGTDRG",48,0)
 ;  Input  :  CODE -  DGN code, ien or .01 format
"RTN","ICDGTDRG",49,0)
 ;            EDT  -  effective date, default = today (Fileman format)
"RTN","ICDGTDRG",50,0)
 ;  Output : String:
"RTN","ICDGTDRG",51,0)
 ;   DRG name^Weight^Low Trim^High Trim^MDC^Surgery^^Ave Length of Stay(days)^Local low days^Local high days^^Local breakeven
"RTN","ICDGTDRG",52,0)
 ;           ^Activiation date^Status Flag(1=active)^Inactivation date^Effective date^ien^effective date of CSV^Referenc (#900)
"RTN","ICDGTDRG",53,0)
 ;           ^Weight(nonAffil)^Weight(IntAfill)
"RTN","ICDGTDRG",54,0)
 ;
"RTN","ICDGTDRG",55,0)
 ;  Variables:
"RTN","ICDGTDRG",56,0)
 ;    D0 = 0 node for code
"RTN","ICDGTDRG",57,0)
 ;    DCS = Code set version effective date
"RTN","ICDGTDRG",58,0)
 ;    DFY = Fiscal year effective date
"RTN","ICDGTDRG",59,0)
 ;    DFYINF = DRG information for the effective fiscal year
"RTN","ICDGTDRG",60,0)
 ;    DCSINF = DRG information for the Coded set version effective date
"RTN","ICDGTDRG",61,0)
 ;    DMC1 = Reference routine for DRG calculation
"RTN","ICDGTDRG",62,0)
 ;    D1 = D1 level of the effective date multiple level of the ICD file
"RTN","ICDGTDRG",63,0)
 ;
"RTN","ICDGTDRG",64,0)
 N D0,DCS,DFY,DFYINF,DCSINF,DMC1,D1,FYDT,FYMD
"RTN","ICDGTDRG",65,0)
 I $G(CODE)="" S STR="-1^NO CODE SELECTED",$P(STR,"^",14)=0 G DRGQ
"RTN","ICDGTDRG",66,0)
 I $G(EDT)="" S EDT=DT  ; No date, use today
"RTN","ICDGTDRG",67,0)
 S EDT=$$DTBR^ICDAPIU(EDT,2)  ; Verify that date is not earlier that the earliest allowed date per the bus. rule
"RTN","ICDGTDRG",68,0)
 S EDT=EDT+.001
"RTN","ICDGTDRG",69,0)
 S CODE=$G(CODE),CODE=$S(CODE:+CODE,1:$$CODEN(CODE)) ; GET ien
"RTN","ICDGTDRG",70,0)
 I CODE<1!'$D(^ICD(CODE)) S STR="-1^NO SUCH ENTRY",$P(STR,"^",14)=0 G DRGQ
"RTN","ICDGTDRG",71,0)
 S D0=^ICD(CODE,0)
"RTN","ICDGTDRG",72,0)
 S FYDT=$$DGY2K^DGPTOD0($$FY^DGPTOD0(EDT))+.001 ; get the correct FY in YYY0000 format for the effective date
"RTN","ICDGTDRG",73,0)
 S DFY=$O(^ICD(CODE,"FY",FYDT),-1) S:DFY>0 DFYINF=^(DFY,0) I DFY'>0 D  ;date stored in YYY0000 w/YYY = Fiscal Year
"RTN","ICDGTDRG",74,0)
 . S DFYINF=U_$P(D0,U,2,4)_U_U_$P(D0,U,9)_U_$P(D0,U,12)_U_$P(D0,U,7)_U_$P(D0,U,8)_U_$P(D0,U,11)
"RTN","ICDGTDRG",75,0)
 S DCS=$O(^ICD(CODE,66,"B",EDT),-1),D1=$S(DCS'="":$O(^ICD(CODE,66,"B",DCS,0)),1:0) S DCSINF=$S(D1>0:^ICD(CODE,66,D1,0),1:"")
"RTN","ICDGTDRG",76,0)
 I DCSINF="" S DCSINF=U_U_"0"_U_U_$P(D0,U,5,6)  ;if CSV level does not exist, default to info at .01 level with status = inactive
"RTN","ICDGTDRG",77,0)
 S DMC1=$G(^ICD(CODE,"MC1"))
"RTN","ICDGTDRG",78,0)
 S STR=$P(D0,U)_U_$P(DFYINF,U,2,4)_U_$P(DCSINF,U,5,6)_U_U_$P(DFYINF,U,9)_U_$P(DFYINF,U,6,7)
"RTN","ICDGTDRG",79,0)
 S STR=STR_U_U_$P(D0,U,12)_U_$P(D0,U,13)_U_$P(DCSINF,U,3)_U_$P(D0,U,15)_U_$P(DCSINF,U)_U_CODE_U_DCS_U_$P(DMC1,U)_U_$P(DFYINF,U,8)_U_$P(DFYINF,U,10)
"RTN","ICDGTDRG",80,0)
 ;
"RTN","ICDGTDRG",81,0)
DRGQ Q STR  ;Exit with string output as result
"RTN","ICDGTDRG",82,0)
 ;
"RTN","ICDGTDRG",83,0)
CODEN(CODE)     ;This function will return the ien of a DRG code
"RTN","ICDGTDRG",84,0)
 ;
"RTN","ICDGTDRG",85,0)
 ;  Input  :  CODE - DRG code
"RTN","ICDGTDRG",86,0)
 ;  Output :  ien of code
"RTN","ICDGTDRG",87,0)
 ;
"RTN","ICDGTDRG",88,0)
 Q +$O(^ICD("B",CODE,0))
"RTN","ICDGTDRG",89,0)
CODEI(CODE)     ;This function will return the ien of a ICD code
"RTN","ICDGTDRG",90,0)
 ;
"RTN","ICDGTDRG",91,0)
 ;  Input  :  CODE - DRG code
"RTN","ICDGTDRG",92,0)
 ;  Output :  ien of code
"RTN","ICDGTDRG",93,0)
 ;
"RTN","ICDGTDRG",94,0)
 Q +$O(^ICD9("BA",+CODE,0))
"RTN","ICDGTDRG",95,0)
 ;
"RTN","ICDGTDRG",96,0)
GETDATE(PATNUM) ;Find the correct "EFFECTIVE DATE" for locating the DRG/ICD/CPT codes
"RTN","ICDGTDRG",97,0)
 ;
"RTN","ICDGTDRG",98,0)
 ;  Input  : PATNUM - PTF Record Number
"RTN","ICDGTDRG",99,0)
 ;  Output : "effective date" to use
"RTN","ICDGTDRG",100,0)
 ;
"RTN","ICDGTDRG",101,0)
 N DATE,PTR
"RTN","ICDGTDRG",102,0)
 S PTR=$P($G(^DGPT(PATNUM,0)),U,13) I PTR'="" S DATE=$P($G(^DG(45.86,PTR,0)),U,1) I DATE'="" G GDOUT  ;census date
"RTN","ICDGTDRG",103,0)
 S DATE=$P($G(^DGPT(PATNUM,70)),U,1) I DATE'="" G GDOUT  ;discharge date
"RTN","ICDGTDRG",104,0)
 S DATE=$P($G(^DGPT(PATNUM,"S",1,0)),U,1) I DATE'="" G GDOUT  ;surgery date
"RTN","ICDGTDRG",105,0)
 S DATE=$P($G(^DGPT(PATNUM,"M",1,0)),U,10)  ;movement date
"RTN","ICDGTDRG",106,0)
 I DATE="" S DATE=DT  ;default is today's date
"RTN","ICDGTDRG",107,0)
GDOUT Q DATE  ;pass back the date
"RTN","ICDGTDRG",108,0)
 ;
"RTN","ICDGTDRG",109,0)
ISVALID(CODE,DATE,FILE) ;Function call to be used in DIC("S") FileMan calls to check the validation of a ICD/CPT code
"RTN","ICDGTDRG",110,0)
 ;
"RTN","ICDGTDRG",111,0)
 ;Input:
"RTN","ICDGTDRG",112,0)
 ;    CODE  - ICD/CPT code (ien)
"RTN","ICDGTDRG",113,0)
 ;    DATE  - Effective date to be used
"RTN","ICDGTDRG",114,0)
 ;    FILE  - File to use: 0 - ICD0; 9 - ICD9
"RTN","ICDGTDRG",115,0)
 ;Output:
"RTN","ICDGTDRG",116,0)
 ;    OUT - 1 if valid; 0 if not
"RTN","ICDGTDRG",117,0)
 N OUT,TEMP
"RTN","ICDGTDRG",118,0)
 S OUT=0
"RTN","ICDGTDRG",119,0)
 I FILE=0 S TEMP=$$ICDOP^ICDCODE(CODE,DATE) I TEMP>0,$P(TEMP,U,10) S OUT=1
"RTN","ICDGTDRG",120,0)
 I FILE=9 S TEMP=$$ICDDX^ICDCODE(CODE,DATE) I TEMP>0,$P(TEMP,U,10) S OUT=1
"RTN","ICDGTDRG",121,0)
 Q OUT  ; EXIT function call  
"RTN","ICDTLB5")
0^6^B20808639
"RTN","ICDTLB5",1,0)
ICDTLB5 ;ALB/EG/ADL - GROUPER UTILITY FUNCTIONS ; 10/23/00 11:49am
"RTN","ICDTLB5",2,0)
 ;;18.0;DRG Grouper;**7**;Oct 20, 2000
"RTN","ICDTLB5",3,0)
 ;;ADL;UPDATE FOR CSV PROJECT;Mar 12, 2003
"RTN","ICDTLB5",4,0)
DRG334 S ICDRG=$S(ICDCC:334,1:335) Q
"RTN","ICDTLB5",5,0)
DRG335 S ICDRG=$S(ICDCC:334,1:335) Q
"RTN","ICDTLB5",6,0)
DRG336 S ICDRG=$S(ICDCC:336,1:337) Q
"RTN","ICDTLB5",7,0)
DRG337 S ICDRG=$S(ICDCC:336,1:337) Q
"RTN","ICDTLB5",8,0)
DRG338 I SEX="M" D  Q
"RTN","ICDTLB5",9,0)
 .S ICDRG=$S(ICDPD["M":338,AGE="":470,AGE>17:339,SEX="":470,1:340),ICDRTC=$S(ICDRG=470:3,SEX="":4,1:ICDRTC) Q
"RTN","ICDTLB5",10,0)
 I SEX="F" D  Q
"RTN","ICDTLB5",11,0)
 .I ICDOR["O" D DRG354 Q
"RTN","ICDTLB5",12,0)
 .I ICDOR["Ogz" D DRG363 Q
"RTN","ICDTLB5",13,0)
 .I ICDOR=""!(ICDOR["N") D DRG366
"RTN","ICDTLB5",14,0)
 Q
"RTN","ICDTLB5",15,0)
DRG339 D DRG338 Q
"RTN","ICDTLB5",16,0)
DRG340 D DRG338 Q
"RTN","ICDTLB5",17,0)
DRG342 S ICDRG=$S(AGE>17:342,1:343) I AGE="" S ICDRG=470,ICDRTC=3
"RTN","ICDTLB5",18,0)
 Q
"RTN","ICDTLB5",19,0)
DRG343 S ICDRG=$S(AGE>17:342,1:343) I AGE="" S ICDRG=470,ICDRTC=3
"RTN","ICDTLB5",20,0)
 Q
"RTN","ICDTLB5",21,0)
DRG344 S ICDRG=$S(ICDPD["M":344,1:345) Q
"RTN","ICDTLB5",22,0)
DRG345 S ICDRG=$S(ICDPD["M":344,1:345) Q
"RTN","ICDTLB5",23,0)
DRG346 S ICDRG=$S(ICDCC:346,1:347) I ICDMDC=13 S ICDRG=$S(ICDRG=346:366,1:367)
"RTN","ICDTLB5",24,0)
 Q
"RTN","ICDTLB5",25,0)
DRG347 S ICDRG=$S(ICDCC:346,1:347) I ICDMDC=13 S ICDRG=$S(ICDRG=346:366,1:367)
"RTN","ICDTLB5",26,0)
 Q
"RTN","ICDTLB5",27,0)
DRG348 S ICDRG=$S(ICDCC:348,1:349) Q
"RTN","ICDTLB5",28,0)
DRG349 S ICDRG=$S(ICDCC:348,1:349) Q
"RTN","ICDTLB5",29,0)
DRG350 S ICDRG=$S(SEX="M":350,1:368) I SEX="" S ICDRG=470,ICDRTC=4
"RTN","ICDTLB5",30,0)
 Q
"RTN","ICDTLB5",31,0)
DRG351 S ICDRG=$S('$D(ICDODRG)&(ICDORNR>0):468,SEX="":470,SEX="F":369,1:351),ICDRTC=$S(ICDRG=470:4,1:ICDRTC) Q
"RTN","ICDTLB5",32,0)
DRG352 S ICDRG=$S(SEX="M":352,ICDPD["P":368,1:369) I SEX="" S ICDRG=470,ICDRTC=4
"RTN","ICDTLB5",33,0)
 Q
"RTN","ICDTLB5",34,0)
DRG354 S ICDRG=$S(ICDPD["M":$S(ICDPD["o":357,ICDCC:354,1:355),ICDCC:358,1:359) Q
"RTN","ICDTLB5",35,0)
DRG355 D DRG354 Q
"RTN","ICDTLB5",36,0)
DRG357 S ICDRG=$S(ICDPD["M":$S(ICDPD["o":357,ICDCC:354,1:355),ICDCC:358,1:359) D:'ICDOPCT DRG368 Q
"RTN","ICDTLB5",37,0)
DRG358 D DRG357 Q
"RTN","ICDTLB5",38,0)
DRG359 D DRG357 Q
"RTN","ICDTLB5",39,0)
DRG363 S ICDRG=$S(ICDPD["M":363,1:364) Q
"RTN","ICDTLB5",40,0)
DRG364 S ICDRG=$S(ICDPD["M":363,1:364) Q
"RTN","ICDTLB5",41,0)
DRG366 S ICDRG=$S(ICDCC:366,1:367) Q
"RTN","ICDTLB5",42,0)
DRG367 S ICDRG=$S(ICDCC:366,1:367) Q
"RTN","ICDTLB5",43,0)
DRG368 S ICDRG=$S(SEX="F":368,1:470) I SEX="" S ICDRG=470,ICDRTC=4
"RTN","ICDTLB5",44,0)
 Q
"RTN","ICDTLB5",45,0)
DRG370 S ICDRG=$S(ICDOR["c"&(ICDCC):370,ICDOR["c":371,ICDOR'["s"&(ICDOR'["g")&(ICDSD["v"!(ICDPD["v")):372,ICDOR'["s"&(ICDOR'["g"):373,ICDOR["s":374,ICDOR["g":375,1:470) Q
"RTN","ICDTLB5",46,0)
DRG371 S ICDRG=$S(ICDPD["D"&(ICDCC):370,ICDPD["D":371,1:469) I $D(ICDOR)<11!(ICDOR["n") D DRG372
"RTN","ICDTLB5",47,0)
 Q
"RTN","ICDTLB5",48,0)
DRG372 S ICDRG=$S(ICDPD["v"!(ICDSD["v"):372,ICDOR["s":374,ICDOR["g":375,1:373) Q
"RTN","ICDTLB5",49,0)
DRG373 S ICDRG=$S(ICDPD["D"&(ICDPD["v"!(ICDPD["D"&(ICDSD["v"))):372,1:373) Q
"RTN","ICDTLB5",50,0)
DRG374 S ICDRG=$S($D(ICDPDRG(374)):374,1:"") Q
"RTN","ICDTLB5",51,0)
DRG375 S ICDRG=$S(ICDPD["D"!(ICDSD["D"):375,1:"") Q
"RTN","ICDTLB5",52,0)
DRG376 S ICDRG=$S(ICDOR["O":377,1:376) Q
"RTN","ICDTLB5",53,0)
DRG377 S ICDRG=$S(ICDOR["O":377,1:376) Q
"RTN","ICDTLB5",54,0)
DRG380 S ICDRG=$S(ICDOR["d":381,1:380) Q
"RTN","ICDTLB5",55,0)
DRG381 S ICDRG=$S('$D(ICDPDRG(381)):"",ICDOR["d":381,1:380) Q
"RTN","ICDTLB5",56,0)
DRG383 S ICDRG=$S(ICDPD["F"&(ICDSD["u"):383,ICDSD["u"!(ICDPD["v"):383,ICDPD["u":383,1:384) Q
"RTN","ICDTLB5",57,0)
DRG384 D DRG383 Q
"RTN","ICDTLB5",58,0)
DRG387 ;
"RTN","ICDTLB5",59,0)
 S ICDRG=$S(ICDPD["E":386,ICDSD["E":386,ICDPD["Hp"&(ICDSD["J"):387,ICDPD["J"&(ICDSD["Hp"):387,ICDPD["p"!(ICDSD["p")&((ICDPD'["J")!(ICDSD'["J")):388,1:"") D:ICDRG="" DRG389 Q
"RTN","ICDTLB5",60,0)
DRG388 D DRG387 Q
"RTN","ICDTLB5",61,0)
DRG389 S ICDRG=$S(ICDPD["HR"&(ICDSD["J"):389,ICDPD["J"&(ICDSD["HR"):389,ICDSD["J":389,ICDPD["J":389,'$D(ICDODRG)&('$D(ICDSDRG)):391,1:390) D:ICDRG=391 DRG391 Q
"RTN","ICDTLB5",62,0)
DRG390 D DRG389 Q
"RTN","ICDTLB5",63,0)
DRG391 S ICDRG=$S(ICDPD["E"!(ICDSD["E"):386,ICDPD["J"&(ICDPD["p"):387,ICDSD["J"&(ICDSD["p"):387,ICDPD["p"&(ICDPD'["J"):388,ICDSD["p"&(ICDSD'["J"):388,ICDPD["J"!(ICDSD["J"):389,1:"") I ICDRG'="" Q
"RTN","ICDTLB5",64,0)
 I ICDPD["R" D  Q:ICDRG=391
"RTN","ICDTLB5",65,0)
 .I '$D(ICDDX(2)) S ICDRG=391 Q
"RTN","ICDTLB5",66,0)
 .;ALL SECONDARIES CONTAIN "R", DRG=>391
"RTN","ICDTLB5",67,0)
 .N I
"RTN","ICDTLB5",68,0)
 .F I=1:1 Q:'$D(ICDDX(I))  S ICDRG=$S($P($$ICDDX^ICDCODE(ICDDX(1),ICDDATE),"^",3)["R":391,1:390) Q:ICDRG=390
"RTN","ICDTLB5",69,0)
 I ICDSD["R"&('$D(ICDDX(3))) S ICDRG=391 Q
"RTN","ICDTLB5",70,0)
 S ICDRG=390
"RTN","ICDTLB5",71,0)
 Q
"RTN","ICDTLB5",72,0)
DRG392 S ICDRG=$S(AGE>17:392,1:393) I AGE="" S ICDRG=470,ICDRTC=3
"RTN","ICDTLB5",73,0)
 Q
"RTN","ICDTLB5",74,0)
DRG393 S ICDRG=$S(AGE>17:392,1:393) I AGE="" S ICDRG=470,ICDRTC=3
"RTN","ICDTLB5",75,0)
 Q
"RTN","ICDTLB5",76,0)
DRG395 S ICDRG=$S(AGE>17:395,1:396) I AGE="" S ICDRG=470,ICDRTC=3
"RTN","ICDTLB5",77,0)
 Q
"RTN","ICDTLB5",78,0)
DRG396 S ICDRG=$S(AGE>17:395,1:396) I AGE="" S ICDRG=470,ICDRTC=3
"RTN","ICDTLB5",79,0)
 Q
"RTN","ICDTLB5",80,0)
DRG398 S ICDRG=$S(ICDCC:398,1:399) Q
"RTN","ICDTLB5",81,0)
DRG399 S ICDRG=$S(ICDCC:398,1:399) Q
"RTN","ICDTLB5",82,0)
DRG400 I ICDPD["L"&(ICDMAJ'[3) D DRG401 Q:"401^402^403^404^405^470^473"[ICDRG
"RTN","ICDTLB5",83,0)
 S ICDRG=$S(ICDPD["L":400,ICDCC:406,1:407) Q
"RTN","ICDTLB5",84,0)
DRG401 S ICDRG=$S(ICDPD["l":$S(AGE="":470,AGE<18:405,1:473),ICDOR["O"!(ICDORNI["O"):$S(ICDCC:401,1:402),ICDCC:403,1:404),ICDRTC=$S(ICDRG=470:3,1:ICDRTC)
"RTN","ICDTLB5",85,0)
 Q
"RTN","ICDTLB5",86,0)
DRG402 D DRG401
"RTN","ICDTLB5",87,0)
 Q
"UP",80,80.066,-1)
80^66
"UP",80,80.066,0)
80.066
"UP",80.1,80.166,-1)
80.1^66
"UP",80.1,80.166,0)
80.166
"UP",80.2,80.266,-1)
80.2^66
"UP",80.2,80.266,0)
80.266
"VER")
8.0^22.0
"^DD",80,80.066,60,0)
DRGa^P80.2'^ICD(^DRG;1^Q
"^DD",80,80.066,60,3)
ENTER FIRST DRG CODE
"^DD",80,80.066,60,21,0)
^^1^1^3030407^
"^DD",80,80.066,60,21,1,0)
DRG CODE ASSOCIATED WITH DIAGNOSIS CODE
"^DD",80,80.066,60,"DT")
3030407
"^DD",80,80.066,61,0)
DRGb^P80.2'^ICD(^DRG;2^Q
"^DD",80,80.066,61,21,0)
^^1^1^3030407^
"^DD",80,80.066,61,21,1,0)
DRG CODE ASSOCIATED WITH DIAGNOSIS CODE
"^DD",80,80.066,61,"DT")
3030407
"^DD",80,80.066,62,0)
DRBc^P80.2'^ICD(^DRG;3^Q
"^DD",80,80.066,62,"DT")
3030407
"^DD",80,80.066,63,0)
DRBd^P80.2'^ICD(^DRG;4^Q
"^DD",80,80.066,63,"DT")
3030407
"^DD",80,80.066,64,0)
DRGe^P80.2'^ICD(^DRG;5^Q
"^DD",80,80.066,64,"DT")
3030407
"^DD",80,80.066,65,0)
DRGf^P80.2'^ICD(^DRG;6^Q
"^DD",80,80.066,65,"DT")
3030407
"^DD",80.1,80.166,60,0)
DRGa^P80.2'^ICD(^DRG;1^Q
"^DD",80.1,80.166,60,3)
ENTER POINTER TO DRG FILE
"^DD",80.1,80.166,60,21,0)
^^1^1^3030407^
"^DD",80.1,80.166,60,21,1,0)
ENTER DRG CODE FOR OP/PROC CD 
"^DD",80.1,80.166,60,"DT")
3030407
"^DD",80.1,80.166,61,0)
DRGb^P80.2'^ICD(^DRG;2^Q
"^DD",80.1,80.166,61,21,0)
^^1^1^3030407^
"^DD",80.1,80.166,61,21,1,0)
DRG CODE ASSOCIATED WITH OP/PROCEDURE CODE
"^DD",80.1,80.166,61,"DT")
3030407
"^DD",80.1,80.166,62,0)
DRGc^P80.2'^ICD(^DRG;3^Q
"^DD",80.1,80.166,62,"DT")
3030407
"^DD",80.1,80.166,63,0)
DRGd^P80.2'^ICD(^DRG;4^Q
"^DD",80.1,80.166,63,"DT")
3030407
"^DD",80.1,80.166,64,0)
DRGe^P80.2'^ICD(^DRG;5^Q
"^DD",80.1,80.166,64,"DT")
3030407
"^DD",80.1,80.166,65,0)
DRGf^P80.2'^ICD(^DRG;6^Q
"^DD",80.1,80.166,65,"DT")
3030407
"^DD",80.2,80.2,14,0)
ACTIVATION DATE^D^^0;13^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",80.2,80.2,14,3)
ENTER ACTIVATION DATE FOR THE DRG CODE
"^DD",80.2,80.2,14,21,0)
^^1^1^3030407^
"^DD",80.2,80.2,14,21,1,0)
ACTIVATION DATE FOR THE DRG CODE
"^DD",80.2,80.2,14,"DT")
3030407
"^DD",80.2,80.2,15,0)
INACTIVE^S^1:INACTIVE;0:ACTIVE;^0;14^Q
"^DD",80.2,80.2,15,21,0)
^^1^1^3030407^
"^DD",80.2,80.2,15,21,1,0)
INACTIVE FLAG FOR DRG CODE
"^DD",80.2,80.2,15,"DT")
3030407
"^DD",80.2,80.2,16,0)
INACTIVATION DATE^D^^0;15^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",80.2,80.2,16,3)
ENTER DATE CODE BECAME INACTIVE
"^DD",80.2,80.2,16,21,0)
^^1^1^3030407^
"^DD",80.2,80.2,16,21,1,0)
DATE THAT THE CODE BECAME INACTIVE
"^DD",80.2,80.2,16,"DT")
3030407
"^DD",80.2,80.2,66,0)
EFFECTIVE DATE^80.266D^^66;0
"^DD",80.2,80.266,0)
EFFECTIVE DATE SUB-FIELD^^.06^5
"^DD",80.2,80.266,0,"DT")
3030407
"^DD",80.2,80.266,0,"IX","B",80.266,.01)

"^DD",80.2,80.266,0,"NM","EFFECTIVE DATE")

"^DD",80.2,80.266,0,"UP")
80.2
"^DD",80.2,80.266,.01,0)
EFFECTIVE DATE^RD^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",80.2,80.266,.01,1,0)
^.1
"^DD",80.2,80.266,.01,1,1,0)
80.266^B
"^DD",80.2,80.266,.01,1,1,1)
S ^ICD(DA(1),66,"B",$E(X,1,30),DA)=""
"^DD",80.2,80.266,.01,1,1,2)
K ^ICD(DA(1),66,"B",$E(X,1,30),DA)
"^DD",80.2,80.266,.01,3)
ENTER THE EFFECITVE DATE FOR THE DRG DATA TO BE RETAINED
"^DD",80.2,80.266,.01,21,0)
^^1^1^3030407^
"^DD",80.2,80.266,.01,21,1,0)
EFFECTIVE DATE OF THE CODE SET VERSIONED LEVEL
"^DD",80.2,80.266,.01,"DT")
3030407
"^DD",80.2,80.266,.03,0)
STATUS^RS^1:ACTIVE;0:INACTIVE;^0;3^Q
"^DD",80.2,80.266,.03,3)
ENTER 1 FOR ACTIVE 0 FOR INACTIVE
"^DD",80.2,80.266,.03,21,0)
^^1^1^3030407^
"^DD",80.2,80.266,.03,21,1,0)
STATUS FLAG FOR DRG CODE
"^DD",80.2,80.266,.03,"DT")
3030407
"^DD",80.2,80.266,.05,0)
MDC#^RP80.3'^ICM(^0;5^Q
"^DD",80.2,80.266,.05,3)
ENTER POINTER TO MAJOR DIAGNOSIS CODE FILE
"^DD",80.2,80.266,.05,21,0)
^^1^1^3030407^
"^DD",80.2,80.266,.05,21,1,0)
POINTER TO MAJOR DIAGNOSIS CODE FILE
"^DD",80.2,80.266,.05,"DT")
3030407
"^DD",80.2,80.266,.06,0)
SURGERY^RS^1:YES;0:NO;^0;6^Q
"^DD",80.2,80.266,.06,"DT")
3030407
**INSTALL NAME**
DG*5.3*510
"BLD",3001,0)
DG*5.3*510^REGISTRATION^0^3030916^y
"BLD",3001,1,0)
^^2^2^3030701^^
"BLD",3001,1,1,0)
Please see the National Patch Module for details
"BLD",3001,1,2,0)
       of the enhancements included in this patch.
"BLD",3001,4,0)
^9.64PA^^
"BLD",3001,"ABPKG")
n
"BLD",3001,"INID")
n^n^n
"BLD",3001,"KRN",0)
^9.67PA^8989.52^19
"BLD",3001,"KRN",.4,0)
.4
"BLD",3001,"KRN",.401,0)
.401
"BLD",3001,"KRN",.402,0)
.402
"BLD",3001,"KRN",.403,0)
.403
"BLD",3001,"KRN",.5,0)
.5
"BLD",3001,"KRN",.84,0)
.84
"BLD",3001,"KRN",3.6,0)
3.6
"BLD",3001,"KRN",3.8,0)
3.8
"BLD",3001,"KRN",9.2,0)
9.2
"BLD",3001,"KRN",9.8,0)
9.8
"BLD",3001,"KRN",9.8,"NM",0)
^9.68A^31^30
"BLD",3001,"KRN",9.8,"NM",1,0)
DGPT50DI^^0^B7892059
"BLD",3001,"KRN",9.8,"NM",2,0)
DGPT60PR^^0^B4451733
"BLD",3001,"KRN",9.8,"NM",3,0)
DGPT70DI^^0^B10532600
"BLD",3001,"KRN",9.8,"NM",4,0)
DGPT70DX^^0^B3771336
"BLD",3001,"KRN",9.8,"NM",5,0)
DGPTAE04^^0^B7860126
"BLD",3001,"KRN",9.8,"NM",6,0)
DGPTDRG^^0^B24578332
"BLD",3001,"KRN",9.8,"NM",7,0)
DGPTF4^^0^B22825179
"BLD",3001,"KRN",9.8,"NM",8,0)
DGPTFAPI^^0^B6885804
"BLD",3001,"KRN",9.8,"NM",9,0)
DGPTFD^^0^B14641468
"BLD",3001,"KRN",9.8,"NM",10,0)
DGPTFIC^^0^B24209624
"BLD",3001,"KRN",9.8,"NM",11,0)
DGPTFJC^^0^B25798370
"BLD",3001,"KRN",9.8,"NM",12,0)
DGPTFM^^0^B23912817
"BLD",3001,"KRN",9.8,"NM",13,0)
DGPTFM0^^0^B11194520
"BLD",3001,"KRN",9.8,"NM",14,0)
DGPTFM4^^0^B25927219
"BLD",3001,"KRN",9.8,"NM",15,0)
DGPTFM5^^0^B12506370
"BLD",3001,"KRN",9.8,"NM",16,0)
DGPTFM6^^0^B20936331
"BLD",3001,"KRN",9.8,"NM",17,0)
DGPTFMO^^0^B25475136
"BLD",3001,"KRN",9.8,"NM",18,0)
DGPTFTR0^^0^B14899215
"BLD",3001,"KRN",9.8,"NM",19,0)
DGPTFVC1^^0^B34761177
"BLD",3001,"KRN",9.8,"NM",20,0)
DGPTICD^^0^B7450472
"BLD",3001,"KRN",9.8,"NM",21,0)
DGPTLMU4^^0^B19788947
"BLD",3001,"KRN",9.8,"NM",22,0)
DGPTODR^^0^B5433832
"BLD",3001,"KRN",9.8,"NM",23,0)
DGPTOLC2^^0^B22483012
"BLD",3001,"KRN",9.8,"NM",24,0)
DGPTR0^^0^B21534124
"BLD",3001,"KRN",9.8,"NM",25,0)
DGPTR4^^0^B16200688
"BLD",3001,"KRN",9.8,"NM",27,0)
DGPTSUDO^^0^B21187821
"BLD",3001,"KRN",9.8,"NM",28,0)
DGPTTS^^0^B17615190
"BLD",3001,"KRN",9.8,"NM",29,0)
DGPTTS1^^0^B23667874
"BLD",3001,"KRN",9.8,"NM",30,0)
DGPTR2^^0^B16467578
"BLD",3001,"KRN",9.8,"NM",31,0)
DGPTSUD1^^0^B5869416
"BLD",3001,"KRN",9.8,"NM","B","DGPT50DI",1)

"BLD",3001,"KRN",9.8,"NM","B","DGPT60PR",2)

"BLD",3001,"KRN",9.8,"NM","B","DGPT70DI",3)

"BLD",3001,"KRN",9.8,"NM","B","DGPT70DX",4)

"BLD",3001,"KRN",9.8,"NM","B","DGPTAE04",5)

"BLD",3001,"KRN",9.8,"NM","B","DGPTDRG",6)

"BLD",3001,"KRN",9.8,"NM","B","DGPTF4",7)

"BLD",3001,"KRN",9.8,"NM","B","DGPTFAPI",8)

"BLD",3001,"KRN",9.8,"NM","B","DGPTFD",9)

"BLD",3001,"KRN",9.8,"NM","B","DGPTFIC",10)

"BLD",3001,"KRN",9.8,"NM","B","DGPTFJC",11)

"BLD",3001,"KRN",9.8,"NM","B","DGPTFM",12)

"BLD",3001,"KRN",9.8,"NM","B","DGPTFM0",13)

"BLD",3001,"KRN",9.8,"NM","B","DGPTFM4",14)

"BLD",3001,"KRN",9.8,"NM","B","DGPTFM5",15)

"BLD",3001,"KRN",9.8,"NM","B","DGPTFM6",16)

"BLD",3001,"KRN",9.8,"NM","B","DGPTFMO",17)

"BLD",3001,"KRN",9.8,"NM","B","DGPTFTR0",18)

"BLD",3001,"KRN",9.8,"NM","B","DGPTFVC1",19)

"BLD",3001,"KRN",9.8,"NM","B","DGPTICD",20)

"BLD",3001,"KRN",9.8,"NM","B","DGPTLMU4",21)

"BLD",3001,"KRN",9.8,"NM","B","DGPTODR",22)

"BLD",3001,"KRN",9.8,"NM","B","DGPTOLC2",23)

"BLD",3001,"KRN",9.8,"NM","B","DGPTR0",24)

"BLD",3001,"KRN",9.8,"NM","B","DGPTR2",30)

"BLD",3001,"KRN",9.8,"NM","B","DGPTR4",25)

"BLD",3001,"KRN",9.8,"NM","B","DGPTSUD1",31)

"BLD",3001,"KRN",9.8,"NM","B","DGPTSUDO",27)

"BLD",3001,"KRN",9.8,"NM","B","DGPTTS",28)

"BLD",3001,"KRN",9.8,"NM","B","DGPTTS1",29)

"BLD",3001,"KRN",19,0)
19
"BLD",3001,"KRN",19.1,0)
19.1
"BLD",3001,"KRN",101,0)
101
"BLD",3001,"KRN",409.61,0)
409.61
"BLD",3001,"KRN",771,0)
771
"BLD",3001,"KRN",870,0)
870
"BLD",3001,"KRN",8989.51,0)
8989.51
"BLD",3001,"KRN",8989.52,0)
8989.52
"BLD",3001,"KRN",8994,0)
8994
"BLD",3001,"KRN","B",.4,.4)

"BLD",3001,"KRN","B",.401,.401)

"BLD",3001,"KRN","B",.402,.402)

"BLD",3001,"KRN","B",.403,.403)

"BLD",3001,"KRN","B",.5,.5)

"BLD",3001,"KRN","B",.84,.84)

"BLD",3001,"KRN","B",3.6,3.6)

"BLD",3001,"KRN","B",3.8,3.8)

"BLD",3001,"KRN","B",9.2,9.2)

"BLD",3001,"KRN","B",9.8,9.8)

"BLD",3001,"KRN","B",19,19)

"BLD",3001,"KRN","B",19.1,19.1)

"BLD",3001,"KRN","B",101,101)

"BLD",3001,"KRN","B",409.61,409.61)

"BLD",3001,"KRN","B",771,771)

"BLD",3001,"KRN","B",870,870)

"BLD",3001,"KRN","B",8989.51,8989.51)

"BLD",3001,"KRN","B",8989.52,8989.52)

"BLD",3001,"KRN","B",8994,8994)

"BLD",3001,"QUES",0)
^9.62^^
"BLD",3001,"REQB",0)
^9.611^8^8
"BLD",3001,"REQB",1,0)
DG*5.3*493^2
"BLD",3001,"REQB",2,0)
DG*5.3*418^2
"BLD",3001,"REQB",3,0)
DG*5.3*397^2
"BLD",3001,"REQB",4,0)
DG*5.3*309^2
"BLD",3001,"REQB",5,0)
DG*5.3*158^2
"BLD",3001,"REQB",6,0)
DG*5.3*441^2
"BLD",3001,"REQB",7,0)
ICD*18.0*7^2
"BLD",3001,"REQB",8,0)
DG*5.3*512^2
"BLD",3001,"REQB","B","DG*5.3*158",5)

"BLD",3001,"REQB","B","DG*5.3*309",4)

"BLD",3001,"REQB","B","DG*5.3*397",3)

"BLD",3001,"REQB","B","DG*5.3*418",2)

"BLD",3001,"REQB","B","DG*5.3*441",6)

"BLD",3001,"REQB","B","DG*5.3*493",1)

"BLD",3001,"REQB","B","DG*5.3*512",8)

"BLD",3001,"REQB","B","ICD*18.0*7",7)

"MBREQ")
1
"PKG",114,-1)
1^1
"PKG",114,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",114,20,0)
^9.402P^^
"PKG",114,22,0)
^9.49I^1^1
"PKG",114,22,1,0)
5.3^2930813^2930821
"PKG",114,22,1,"PAH",1,0)
510^3030916
"PKG",114,22,1,"PAH",1,1,0)
^^2^2^3030916
"PKG",114,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for details
"PKG",114,22,1,"PAH",1,1,2,0)
       of the enhancements included in this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
30
"RTN","DGPT50DI")
0^1^B7892059
"RTN","DGPT50DI",1,0)
DGPT50DI ;ALB/MTC/ADL - Edit diagnoses.Check ICD DIAGNOSES, current, gender correct ; 16 NOV 92
"RTN","DGPT50DI",2,0)
 ;;5.3;Registration;**510**;Aug 13, 1993
"RTN","DGPT50DI",3,0)
 ;;ADL;Updated for CSV project;;Mar 24, 2003
"RTN","DGPT50DI",4,0)
 ;
"RTN","DGPT50DI",5,0)
EN ;
"RTN","DGPT50DI",6,0)
 F I=1:1:5 S DGPTDIB=$P(@("DGPTMD"_I)," ",1) S DGPTERC=0 D DIAG(I) I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT50DI",7,0)
 D EXIT
"RTN","DGPT50DI",8,0)
 Q
"RTN","DGPT50DI",9,0)
DIAG(I) ;
"RTN","DGPT50DI",10,0)
 Q:DGPTDIB=""
"RTN","DGPT50DI",11,0)
 I $E(DGPTDIB,1)="E" S DGPTERC=0 D DIAGE Q
"RTN","DGPT50DI",12,0)
 I $E(DGPTDIB,1)="V" S DGPTERC=0 D DIAGV Q
"RTN","DGPT50DI",13,0)
 S DGPTDIB1=$E(DGPTDIB_"     ",1,3)_"."_$E(DGPTDIB_"     ",4,5)_" "
"RTN","DGPT50DI",14,0)
 I $D(^ICD9("AB",DGPTDIB1)) S DGPTERC=0 D GEN(I) Q
"RTN","DGPT50DI",15,0)
 Q
"RTN","DGPT50DI",16,0)
ERR ;
"RTN","DGPT50DI",17,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPT50DI",18,0)
 Q
"RTN","DGPT50DI",19,0)
EXIT ;
"RTN","DGPT50DI",20,0)
 K DGPTDIB,DGPTDIB1,DGPTDIB2,I
"RTN","DGPT50DI",21,0)
 Q
"RTN","DGPT50DI",22,0)
DIAGE ;
"RTN","DGPT50DI",23,0)
 Q:$E(DGPTDIB)'="E"
"RTN","DGPT50DI",24,0)
 I I=1 S DGPTERC=550 Q
"RTN","DGPT50DI",25,0)
 S DGPTDIB1=$E(DGPTDIB,1,4)_"."_$E(DGPTDIB,5,$L(DGPTDIB))_" "
"RTN","DGPT50DI",26,0)
 I '$D(^ICD9("AB",DGPTDIB1)) S DGPTERC=509+I Q
"RTN","DGPT50DI",27,0)
 S X=$O(^ICD9("AB",DGPTDIB1,0)) I X="" S DGPTERC=509+I Q
"RTN","DGPT50DI",28,0)
 S DGPTTMP=$$ICDDX^ICDCODE(X,$S($G(DGPTMDTS)'="":DGPTMDTS,1:DT))  ;use date of movement if defined, else today
"RTN","DGPT50DI",29,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=509+I Q
"RTN","DGPT50DI",30,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTMDTS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=509+I Q
"RTN","DGPT50DI",31,0)
 I ($P(DGPTTMP,U,11)]"")&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=791+I Q
"RTN","DGPT50DI",32,0)
 S @("DGPTMD"_I)=$P(DGPTDIB1," ",1)
"RTN","DGPT50DI",33,0)
 Q
"RTN","DGPT50DI",34,0)
DIAGV ; DIAG CODES = "V##.0-2# "
"RTN","DGPT50DI",35,0)
 Q:$E(DGPTDIB)'="V"
"RTN","DGPT50DI",36,0)
 S DGPTDIB1=$E(DGPTDIB,1,3)_"."_$E(DGPTDIB,4,$L(DGPTDIB))_" "
"RTN","DGPT50DI",37,0)
 I '$D(^ICD9("AB",DGPTDIB1)) S DGPTERC=509+I Q
"RTN","DGPT50DI",38,0)
 S X=$O(^ICD9("AB",DGPTDIB1,0)) I X="" S DGPTERC=509+I Q
"RTN","DGPT50DI",39,0)
 S DGPTTMP=$$ICDDX^ICDCODE(X,$S($G(DGPTMDTS)'="":DGPTMDTS,1:DT))  ;use date of movement if defined, else today
"RTN","DGPT50DI",40,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=509+I Q
"RTN","DGPT50DI",41,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTMDTS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=509+I Q
"RTN","DGPT50DI",42,0)
 I ($P(DGPTTMP,U,11)]"")&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=509+I Q
"RTN","DGPT50DI",43,0)
 S @("DGPTMD"_I)=$P(DGPTDIB1," ",1)
"RTN","DGPT50DI",44,0)
 Q
"RTN","DGPT50DI",45,0)
GEN(I) ;
"RTN","DGPT50DI",46,0)
 S DGPTDIB2=$O(^ICD9("AB",DGPTDIB1,0)) I DGPTDIB2="" S DGPTERC=509+I Q
"RTN","DGPT50DI",47,0)
 S DGPTTMP=$$ICDDX^ICDCODE(DGPTDIB2,$S($G(DGPTMDTS)'="":DGPTMDTS,1:DT))  ;use date of movement if defined, else today
"RTN","DGPT50DI",48,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=509+I Q
"RTN","DGPT50DI",49,0)
 I $P(DGPTTMP,U,11)]""&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=551 Q
"RTN","DGPT50DI",50,0)
 S @("DGPTMD"_I)=$P(DGPTDIB1," ",1)
"RTN","DGPT50DI",51,0)
 Q
"RTN","DGPT60PR")
0^2^B4451733
"RTN","DGPT60PR",1,0)
DGPT60PR ;ALB/MTC/ADL - Edit procedure codes.  In ICD0 Procedures, current, gender ok ; 17 NOV 92
"RTN","DGPT60PR",2,0)
 ;;5.3;Registration;**510**;Aug 13, 1993
"RTN","DGPT60PR",3,0)
 ;;ADL;Update for CSV project;;Mar. 24, 2003
"RTN","DGPT60PR",4,0)
 ;
"RTN","DGPT60PR",5,0)
EN ;
"RTN","DGPT60PR",6,0)
LOOP ;
"RTN","DGPT60PR",7,0)
 S DGPTPRFL=0
"RTN","DGPT60PR",8,0)
 F DGPTL3=1:1:5 S DGPTERC=0 D CHKPRC I DGPTERC D ERR
"RTN","DGPT60PR",9,0)
EXIT ;
"RTN","DGPT60PR",10,0)
 K DGPTOP,DGPTOP1,DGPTL3,DGPTL4,DGPTPP,DGPTPRFL,X,X1,X2
"RTN","DGPT60PR",11,0)
 Q
"RTN","DGPT60PR",12,0)
CHKPRC ;
"RTN","DGPT60PR",13,0)
 S DGPTERC=0,DGPTOP=(@("DGPTPC"_DGPTL3)),DGPTOP=$P(DGPTOP," ",1) Q:DGPTOP=""
"RTN","DGPT60PR",14,0)
 S DGPTERC=604+DGPTL3
"RTN","DGPT60PR",15,0)
 F DGPTL4=1:1:$L(DGPTOP) S DGPTOP1=$E(DGPTOP,1,DGPTL4)_"."_$E(DGPTOP,DGPTL4+1,$L(DGPTOP)) I $D(^ICD0("AB",DGPTOP1)) S DGPTERC=0 D GEN Q
"RTN","DGPT60PR",16,0)
 Q
"RTN","DGPT60PR",17,0)
GEN ;
"RTN","DGPT60PR",18,0)
 S DGPTPP=$O(^ICD0("AB",DGPTOP1,0)) I DGPTPP="" S DGPTERC=604+DGPTL3 Q
"RTN","DGPT60PR",19,0)
 S DGPTTMP=$$ICDOP^ICDCODE(DGPTPP,$S($G(DGPTPDTS)'="":DGPTPDTS,1:DT))  ;use date of procedure if defined, else today
"RTN","DGPT60PR",20,0)
 I DGPTTMP<1!('$P(DGPTTMP,U,10)) S DGPTERC=604+DGPTL3 Q
"RTN","DGPT60PR",21,0)
 I $P(DGPTTMP,U,11)]""&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=651 Q
"RTN","DGPT60PR",22,0)
CURR ;
"RTN","DGPT60PR",23,0)
 S DGPTTMP=$$ICDOP^ICDCODE(DGPTPP,$S($G(DGPTPDTS)'="":DGPTPDTS,1:DT))  ;use date of procedure if defined, else today
"RTN","DGPT60PR",24,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTPDTS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=604+DGPTL3 Q
"RTN","DGPT60PR",25,0)
SAVE ;
"RTN","DGPT60PR",26,0)
 S @("DGPTPC"_DGPTL3)=DGPTOP1
"RTN","DGPT60PR",27,0)
ARRAY ;
"RTN","DGPT60PR",28,0)
 S DGPTPRAR(DGPTPDTS)=$S($D(DGPTPRAR(DGPTPDTS)):DGPTPRAR(DGPTPDTS)_U_DGPTPP,1:DGPTPP_U)
"RTN","DGPT60PR",29,0)
 Q
"RTN","DGPT60PR",30,0)
ERR ;
"RTN","DGPT60PR",31,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPT60PR",32,0)
 Q
"RTN","DGPT60PR",33,0)
 ;
"RTN","DGPT70DI")
0^3^B10532600
"RTN","DGPT70DI",1,0)
DGPT70DI ;ALB/MTC/ADL - Diagnosis edits for 700's - E codes, V codes, gender and ICD9 Diag. ; 16 NOV 92
"RTN","DGPT70DI",2,0)
 ;;5.3;Registration;**510**;Aug 13, 1993
"RTN","DGPT70DI",3,0)
 ;;ADL;Update for CSV Project;;Mar. 24, 2003
"RTN","DGPT70DI",4,0)
 ;
"RTN","DGPT70DI",5,0)
EN ;
"RTN","DGPT70DI",6,0)
 F DGPTL3=1:1:9 S DGPTDIA=$P((@("DGPTGD"_DGPTL3))," ",1) S DGPTERC=0 D DIAG I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT70DI",7,0)
 Q
"RTN","DGPT70DI",8,0)
 ;
"RTN","DGPT70DI",9,0)
DIAG ;
"RTN","DGPT70DI",10,0)
 Q:DGPTDIA=""
"RTN","DGPT70DI",11,0)
 I $E(DGPTDIA,1)="E" S DGPTERC=0 D DIAGE Q
"RTN","DGPT70DI",12,0)
 I $E(DGPTDIA,1)="V" S DGPTERC=0 D DIAGV Q
"RTN","DGPT70DI",13,0)
 S DGPTERC=719+DGPTL3
"RTN","DGPT70DI",14,0)
 F DGPTL4=1:1:$L(DGPTDIA) S DGPTDIA1=$E(DGPTDIA,1,DGPTL4)_"."_$E(DGPTDIA,DGPTL4+1,$L(DGPTDIA))_" " I $D(^ICD9("AB",DGPTDIA1)) S DGPTERC=0 D GEN Q
"RTN","DGPT70DI",15,0)
 Q
"RTN","DGPT70DI",16,0)
ERR ;
"RTN","DGPT70DI",17,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPT70DI",18,0)
 Q
"RTN","DGPT70DI",19,0)
EXIT ;
"RTN","DGPT70DI",20,0)
 K DGPTDIA,DGPTDIA1,DGPTDIA2,DGPTL3,DGPTL4
"RTN","DGPT70DI",21,0)
 Q
"RTN","DGPT70DI",22,0)
DIAGE ;
"RTN","DGPT70DI",23,0)
 Q:$E(DGPTDIA)'="E"
"RTN","DGPT70DI",24,0)
 S DGPTDIA1=$E(DGPTDIA,1,4)_"."_$E(DGPTDIA,5,$L(DGPTDIA))_" "
"RTN","DGPT70DI",25,0)
 I '$D(^ICD9("AB",DGPTDIA1)) S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",26,0)
 S DGPTDIA2=$O(^ICD9("AB",DGPTDIA1,0)) I DGPTDIA2="" S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",27,0)
 S DGPTTMP=$$ICDDX^ICDCODE(DGPTDIA2,$S($G(DGPTDDS)'="":DGPTDDS,1:DT))  ;use date of disp. if defined, else today
"RTN","DGPT70DI",28,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",29,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTDDS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",30,0)
 I ($P(DGPTTMP,U,11)]"")&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",31,0)
 S @("DGPTGD"_DGPTL3)=$P(DGPTDIA1," ",1)
"RTN","DGPT70DI",32,0)
 S DGPTDIAR(DGPTDDS)=$S($D(DGPTDIAR(DGPTDDS)):DGPTDIAR(DGPTDDS)_U_DGPTDIA2,1:DGPTDIA2)
"RTN","DGPT70DI",33,0)
 Q
"RTN","DGPT70DI",34,0)
DIAGV ;
"RTN","DGPT70DI",35,0)
 Q:$E(DGPTDIA)'="V"
"RTN","DGPT70DI",36,0)
 S DGPTDIA1=$E(DGPTDIA,1,3)_"."_$E(DGPTDIA,4,$L(DGPTDIA))_" "
"RTN","DGPT70DI",37,0)
 I '$D(^ICD9("AB",DGPTDIA1)) S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",38,0)
 S DGPTDIA2=$O(^ICD9("AB",DGPTDIA1,0)) I DGPTDIA2="" S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",39,0)
 S DGPTTMP=$$ICDDX^ICDCODE(DGPTDIA2,$S($G(DGPTDDS)'="":DGPTDDS,1:DT))  ;use date of disp. if defined, else today
"RTN","DGPT70DI",40,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",41,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTDDS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",42,0)
 I ($P(DGPTTMP,U,11)]"")&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",43,0)
 S @("DGPTGD"_DGPTL3)=$P(DGPTDIA1," ",1)
"RTN","DGPT70DI",44,0)
 S DGPTDIAR(DGPTDDS)=$S($D(DGPTDIAR(DGPTDDS)):DGPTDIAR(DGPTDDS)_U_DGPTDIA2,1:DGPTDIA2)
"RTN","DGPT70DI",45,0)
 Q
"RTN","DGPT70DI",46,0)
GEN ;
"RTN","DGPT70DI",47,0)
 S DGPTDIA2=$O(^ICD9("AB",DGPTDIA1,0)) I DGPTDIA2="" S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",48,0)
 S DGPTTMP=$$ICDDX^ICDCODE(DGPTDIA2,$S($G(DGPTDDS)'="":DGPTDDS,1:DT))  ;use date of disp. if defined, else today
"RTN","DGPT70DI",49,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",50,0)
 I $P(DGPTTMP,U,11)]""&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=751 Q
"RTN","DGPT70DI",51,0)
 S @("DGPTGD"_DGPTL3)=$P(DGPTDIA1," ",1)
"RTN","DGPT70DI",52,0)
ARRAY ;
"RTN","DGPT70DI",53,0)
 S DGPTDIAR(DGPTDDS)=$S($D(DGPTDIAR(DGPTDDS)):DGPTDIAR(DGPTDDS)_U_DGPTDIA2,1:DGPTDIA2)
"RTN","DGPT70DI",54,0)
 Q
"RTN","DGPT70DX")
0^4^B3771336
"RTN","DGPT70DX",1,0)
DGPT70DX ;ALB/MTC/ADL -  DXLS Edit Checks for 701 ; 13 NOV 92
"RTN","DGPT70DX",2,0)
 ;;5.3;Registration;**510**;Aug 13, 1993
"RTN","DGPT70DX",3,0)
 ;;ADL;Update for CSV Project;;Mar 24, 2003
"RTN","DGPT70DX",4,0)
 ;
"RTN","DGPT70DX",5,0)
 ;
"RTN","DGPT70DX",6,0)
EN ;-- check dxls 
"RTN","DGPT70DX",7,0)
 S DGPTDDXE=$P(DGPTDDXE," ",1)
"RTN","DGPT70DX",8,0)
 S DGPTERC=0
"RTN","DGPT70DX",9,0)
NOE ;
"RTN","DGPT70DX",10,0)
 I $E(DGPTDDXE,1)="E" S DGPTERC=750 Q
"RTN","DGPT70DX",11,0)
 I $E(DGPTDDXE,1)="V" S DGPTERC=0 D DIAGV G:DGPTERC EXIT D SET G:DGPTERC EXIT G GENDR
"RTN","DGPT70DX",12,0)
 Q:"VE"[$E(DGPTDDXE,1)
"RTN","DGPT70DX",13,0)
NUM ;
"RTN","DGPT70DX",14,0)
 S J1=$L(DGPTDDXE) F J=1:1:3 S DGPTDIA1=$E(DGPTDDXE,1,J)_"."_$E(DGPTDDXE,J+1,J1)_" " I $D(^ICD9("AB",DGPTDIA1)) D SET G:'DGPTERC GENDR
"RTN","DGPT70DX",15,0)
 S DGPTERC=715 G EXIT
"RTN","DGPT70DX",16,0)
SET ;
"RTN","DGPT70DX",17,0)
 S J=$O(^ICD9("AB",DGPTDIA1,0)) I J="" S DGPTERC=715 Q
"RTN","DGPT70DX",18,0)
 S DGPTTMP=$$ICDDX^ICDCODE(J,$S($G(DGPTDDS)'="":DGPTDDS,1:DT))  ;use date of disp. if defined, else today
"RTN","DGPT70DX",19,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=715 Q
"RTN","DGPT70DX",20,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTDDS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=715 Q
"RTN","DGPT70DX",21,0)
 Q
"RTN","DGPT70DX",22,0)
GENDR ;
"RTN","DGPT70DX",23,0)
 S DGPTTMP=$$ICDDX^ICDCODE(J,$S($G(DGPTDDS)'="":DGPTDDS,1:DT))  ;use date of disp. if defined, else today
"RTN","DGPT70DX",24,0)
 G:$P(DGPTTMP,U,11)']"" DDXE
"RTN","DGPT70DX",25,0)
 I $P(DGPTTMP,U,11)'=DGPTGEN S DGPTERC=751 G EXIT
"RTN","DGPT70DX",26,0)
DDXE ;
"RTN","DGPT70DX",27,0)
 S ICDDX(1)=J
"RTN","DGPT70DX",28,0)
 S DGPTDDXE=$P(DGPTDIA1," ",1)
"RTN","DGPT70DX",29,0)
EXIT ;
"RTN","DGPT70DX",30,0)
 K J,J1,DGPTDIA1
"RTN","DGPT70DX",31,0)
 Q
"RTN","DGPT70DX",32,0)
DIAGV ;
"RTN","DGPT70DX",33,0)
 S DGPTDIA1=$E(DGPTDDXE,1,3)_"."_$E(DGPTDDXE,4,$L(DGPTDDXE))_" "
"RTN","DGPT70DX",34,0)
 I '$D(^ICD9("AB",DGPTDIA1)) S DGPTERC=715
"RTN","DGPT70DX",35,0)
 Q
"RTN","DGPTAE04")
0^5^B7860126
"RTN","DGPTAE04",1,0)
DGPTAE04 ;ALB/MTC/ADL - 401 Edit Checks Cont ; 13 NOV 92
"RTN","DGPTAE04",2,0)
 ;;5.3;Registration;**510**;Aug 13, 1993
"RTN","DGPTAE04",3,0)
 ;;ADL;Updated for CSV Project;;Mar 24, 2003
"RTN","DGPTAE04",4,0)
 ;
"RTN","DGPTAE04",5,0)
TRAN ;-- verify transplant status
"RTN","DGPTAE04",6,0)
 I " 12"'[DGPT40PT S DGPTERC=417
"RTN","DGPTAE04",7,0)
 Q
"RTN","DGPTAE04",8,0)
 ;
"RTN","DGPTAE04",9,0)
CHIEF ;
"RTN","DGPTAE04",10,0)
 N FLAG,I
"RTN","DGPTAE04",11,0)
 Q:"VMN"[DGPTSCS
"RTN","DGPTAE04",12,0)
 I "1234567"'[DGPTSCS S DGPTERC=407 Q
"RTN","DGPTAE04",13,0)
 S FLAG=1 F I=10,11,30,40,42 I DGPTSTTY["^"_I_"^" S FLAG=0 Q
"RTN","DGPTAE04",14,0)
 S:FLAG DGPTERC=407
"RTN","DGPTAE04",15,0)
 Q
"RTN","DGPTAE04",16,0)
FAST ;
"RTN","DGPTAE04",17,0)
 N FLAG,I
"RTN","DGPTAE04",18,0)
 Q:DGPTSFA=" "
"RTN","DGPTAE04",19,0)
 S FLAG=0 F I=20:1:26 I DGPTSTTY["^"_I_"^" S FLAG=1,DGPTSFA=" " Q
"RTN","DGPTAE04",20,0)
 I FLAG Q
"RTN","DGPTAE04",21,0)
 I "12345678"'[DGPTSFA S DGPTERC=408 Q
"RTN","DGPTAE04",22,0)
 Q
"RTN","DGPTAE04",23,0)
ANES ;
"RTN","DGPTAE04",24,0)
 N FLAG,I
"RTN","DGPTAE04",25,0)
 Q:DGPTSAT=" "
"RTN","DGPTAE04",26,0)
 S FLAG=0 F I=20:1:26 I DGPTSTTY["^"_I_"^" S FLAG=1,DGPTSAT=" " Q
"RTN","DGPTAE04",27,0)
 I FLAG Q
"RTN","DGPTAE04",28,0)
 I "0123456789RX"'[DGPTSAT S DGPTERC=409 Q
"RTN","DGPTAE04",29,0)
 S DGPTERC=409 F I=10,11,30,40,42 I DGPTSTTY["^"_I_"^" S DGPTERC=0 Q
"RTN","DGPTAE04",30,0)
 Q
"RTN","DGPTAE04",31,0)
 ;
"RTN","DGPTAE04",32,0)
FIRST ;-- Edit surgeries - present in ICD0 OPERATIONS, current, gender ok
"RTN","DGPTAE04",33,0)
 ;
"RTN","DGPTAE04",34,0)
 I (+DGPTSO1=1371)!(+DGPTSO1=39610)!(+DGPTSO1=39611)!(+DGPTSO1=39612) S DGPTERC=450 D ERR G:DGPTEDFL EXIT
"RTN","DGPTAE04",35,0)
LOOP ;
"RTN","DGPTAE04",36,0)
 F DGPTL3=1:1:5 S DGPTERC=0 D CHKOPC I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPTAE04",37,0)
 Q
"RTN","DGPTAE04",38,0)
CHKOPC ;
"RTN","DGPTAE04",39,0)
 S DGPTOC=(@("DGPTSO"_DGPTL3)),DGPTOC=$P(DGPTOC," ",1) Q:DGPTOC=""
"RTN","DGPTAE04",40,0)
 S DGPTERC=410+DGPTL3
"RTN","DGPTAE04",41,0)
 S DGPTOC=$E(DGPTOC_"       ",1,2)_"."_$E(DGPTOC,3,7)
"RTN","DGPTAE04",42,0)
 I $D(^ICD0("AB",DGPTOC)) S DGPTERC=0 D GEN Q
"RTN","DGPTAE04",43,0)
 Q
"RTN","DGPTAE04",44,0)
GEN ;
"RTN","DGPTAE04",45,0)
 S DGPTOPP=$O(^ICD0("AB",DGPTOC,0)) I DGPTOPP="" S DGPTERC=451 Q
"RTN","DGPTAE04",46,0)
 S DGPTTMP=$$ICDOP^ICDCODE(DGPTOPP,$S($G(DGPTSDD)'="":DGPTSDD,1:DT))  ;use date of surgery from rec if it exists, else today
"RTN","DGPTAE04",47,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=451 Q
"RTN","DGPTAE04",48,0)
 I $P(DGPTTMP,U,11)]""&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=451 Q
"RTN","DGPTAE04",49,0)
CURR ;
"RTN","DGPTAE04",50,0)
 S DGPTTMP=$$ICDOP^ICDCODE(DGPTOPP,$S($G(DGPTSDD)'="":DGPTSDD,1:DT))  ;use date of surgery from rec if it exists, else today
"RTN","DGPTAE04",51,0)
 I ($P(DGPTTMP,U,10)=0)&($P(DGPTSDD,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=474+DGPTL3 Q
"RTN","DGPTAE04",52,0)
SAVE ;
"RTN","DGPTAE04",53,0)
 S @("DGPTSO"_DGPTL3)=DGPTOC
"RTN","DGPTAE04",54,0)
ARRAY ;
"RTN","DGPTAE04",55,0)
 S DGPTOPAR(DGPTSDD)=$S($D(DGPTOPAR(DGPTSDD)):DGPTOPAR(DGPTSDD)_U_DGPTOPP,1:DGPTOPP_U)
"RTN","DGPTAE04",56,0)
 Q
"RTN","DGPTAE04",57,0)
EXIT ;
"RTN","DGPTAE04",58,0)
 K DGPTL3,DGPTOC,DGPTOC1,DGPTOPP
"RTN","DGPTAE04",59,0)
 Q
"RTN","DGPTAE04",60,0)
ERR ;
"RTN","DGPTAE04",61,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPTAE04",62,0)
 Q
"RTN","DGPTDRG")
0^6^B24578332
"RTN","DGPTDRG",1,0)
DGPTDRG ;ALB/ABS - DRG Information Report User Prompts ; 3/12/02 4:44pm
"RTN","DGPTDRG",2,0)
 ;;5.3;Registration;**60,441,510**;Aug 13, 1993
"RTN","DGPTDRG",3,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTDRG",4,0)
 S U="^" D Q,DT^DICRW
"RTN","DGPTDRG",5,0)
PAT D EFFDATE G Q:$D(DUOUT),Q:$D(DTOUT)
"RTN","DGPTDRG",6,0)
 W !!,"Choose Patient from PATIENT file" S %=1 D YN^DICN G Q:%=-1
"RTN","DGPTDRG",7,0)
 I %Y["?"!('%) W !?3,"Enter <RET> for YES if you want DRGs for a patient from your PATIENT File",!?3,"Answer 'N' for NO if you want DRGs for a hypothetical patient" G PAT
"RTN","DGPTDRG",8,0)
 S DGPTHOW=% I %=2 S NAME="" G AGE
"RTN","DGPTDRG",9,0)
 N DOB S DIC="^DPT(",DIC(0)="AEQMZ" W ! D ^DIC G Q:Y'>0 S DFN=+Y,NAME=$P(Y(0),"^"),(DOB,AGE)=$P(Y(0),U,3),SEX=$P(Y(0),U,2),X1=DT,X2=AGE D ^%DTC S AGE=X\365.25 W "  AGE:",AGE
"RTN","DGPTDRG",10,0)
 ;I AGE<0!(AGE>124) W !,"Unacceptable AGE",!,"Grouper accepts age values from 0-124 years.",!,"Verify patient's age in PATIENT File before continuing." G Q
"RTN","DGPTDRG",11,0)
 S DGEXP=$S($D(^DPT(DFN,.35))#2:1,1:0) I DGEXP,'$P(^(.35),"^") S DGEXP=0
"RTN","DGPTDRG",12,0)
 G EXP:DGEXP,TRS
"RTN","DGPTDRG",13,0)
AGE R !!,"Patient's AGE: ",AGE:DTIME G Q:AGE["^"!('$T) S:AGE<0!(AGE="")!(AGE>124)!(AGE'?.N) AGE="?" I AGE["?" W !,"Enter a number for patient's age in years (0-124)" G AGE
"RTN","DGPTDRG",14,0)
SEX R !!,"Patient's SEX: MALE// ",X:DTIME G Q:X["^"!('$T) S Z="^MALE^FEMALE" I X="" S X="M" W X
"RTN","DGPTDRG",15,0)
 D IN^DGHELP I %=-1 W !?3,"Enter <RET> for MALE if hypothetical patient is male",!?3,"Enter 'F' for Female" G SEX
"RTN","DGPTDRG",16,0)
 S SEX=$E(X)
"RTN","DGPTDRG",17,0)
EXP W !!,"Did patient die during this episode" S %=2 D YN^DICN G Q:%=-1 I %Y["?"!('%) W !?3,"Enter <RET> for NO if patient did not die during the hospital",!?15,"stay for which this DRG is to be calculated",!?3,"Enter 'Y' for YES" G EXP
"RTN","DGPTDRG",18,0)
 S DGEXP=$S(%=1:1,1:0) I DGEXP S (DGTRS,DGDMS)=0 G DX
"RTN","DGPTDRG",19,0)
TRS W !!,"Transfer to an acute care facility" S %=2 D YN^DICN G Q:%=-1 I %Y["?"!('%) W !?3,"Enter <RET> for NO if patient not transfered to an acute care facility",!?3,"Enter 'Y' for YES if patient was transfered to acute care facility" G TRS
"RTN","DGPTDRG",20,0)
 S DGTRS=$S(%=1:1,1:0)
"RTN","DGPTDRG",21,0)
DMS W !!,"Discharged against medical advice" S %=2 D YN^DICN G Q:%=-1 I %Y["?"!('%) W !?3,"Enter <RET> for NO if patient did not leave against medical advice",!?3,"Enter 'Y' for YES if patient did leave against medical advice",!,*7 G DMS
"RTN","DGPTDRG",22,0)
 S DGDMS=$S(%=1:1,1:0)
"RTN","DGPTDRG",23,0)
DX S (DGDX,DGSURG)="",DIC="^ICD9(",DIC(0)="AEQMZ",DIC("A")="Enter DXLS: ",DIC("S")="I '$P($$ICDDX^ICDCODE(+Y,DGDAT),U,5),($$ISVALID^ICDGTDRG(+Y,DGDAT,9))"
"RTN","DGPTDRG",24,0)
 W ! D ^DIC G Q:X["^"!(Y'>0) S DGPTTMP=$$ICDDX^ICDCODE(+Y,DGDAT) S:$P(DGPTTMP,U,10) DGDX=+Y,DGDX(1)=$P(Y(0),"^")_"^"_$P(Y(0),"^",3) I '$$ISVALID^ICDGTDRG(+Y,DGDAT,9) D INAC G DX
"RTN","DGPTDRG",25,0)
 S DIC("A")="Enter SECONDARY diagnosis: " S DIC("S")="I $$ISVALID^ICDGTDRG(+Y,DGDAT,9)" W !
"RTN","DGPTDRG",26,0)
 F DGI=2:1:5 D ^DIC Q:X["^"!(X="")  I +Y>0 S DGPTTMP=$$ICDDX^ICDCODE(+Y,DGDAT) S:DGPTTMP>0&($P(DGPTTMP,U,10)) DGDX=DGDX_"^"_+Y,DGDX(DGI)=$P(Y(0),"^")_"^"_$P(Y(0),"^",3) I '$P(DGPTTMP,U,10) D INAC S DGI=DGI-1
"RTN","DGPTDRG",27,0)
 G Q:X["^" S DIC("S")="I $$ISVALID^ICDGTDRG(+Y,DGDAT,0)",DIC="^ICD0(",DIC("A")="Enter Operation/Procedure: " W ! F DGI=1:1:4 D ^DIC Q:X["^"!(X="")  I +Y>0 S DGSURG=+Y_"^"_DGSURG,DGSURG(DGI)=$P(Y(0),"^")_"^"_$P(Y(0),"^",4)
"RTN","DGPTDRG",28,0)
 ; added next line for DG*5.3*441
"RTN","DGPTDRG",29,0)
 S DGSURG=U_DGSURG
"RTN","DGPTDRG",30,0)
 G Q:X["^" I $D(DGPTODR) S DGVAR="AGE^NAME^SEX^DGDMS^DGEXP^DGTRS^DGDX#^DGSURG#",DGPGM="^DGPTODR" W ! D ZIS^DGUTQ G:POP Q U IO D ^DGPTODR,CLOSE^DGUTQ,Q S DGPTODR=1 G PAT
"RTN","DGPTDRG",31,0)
 S DGDRGPRT=1 D ^DGPTICD,Q G PAT  ;return DRG code even if inactive
"RTN","DGPTDRG",32,0)
Q K DFN,DGI,DGPGM,AGE,NAME,DGDMS,DGDX,DGEXP,DGPTHOW,DGSURG,DGTRS,DGVAR,DGDRGPRT,DRG,DIC,SEX,POP,X,Y,Z,X1,X2,%,%Y Q
"RTN","DGPTDRG",33,0)
 ;
"RTN","DGPTDRG",34,0)
EFFDATE ;prompts for effective date for DRG grouper?
"RTN","DGPTDRG",35,0)
 K DIR S DIR(0)="D^::AEX",DIR("B")="TODAY",DIR("A")="Effective Date"
"RTN","DGPTDRG",36,0)
 S DIR("?")="The effective to be used when calculating the DRG code for the patient."
"RTN","DGPTDRG",37,0)
 D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","DGPTDRG",38,0)
 S DGDAT=Y
"RTN","DGPTDRG",39,0)
 Q
"RTN","DGPTDRG",40,0)
INAC ;
"RTN","DGPTDRG",41,0)
 W !,*7,">>> You have selected an INACTIVE diagnosis code."
"RTN","DGPTDRG",42,0)
 W !,"    This code is not used by the grouper and may cause"
"RTN","DGPTDRG",43,0)
 W !,"    the case to be grouped into DRG 470 - UNGROUPABLE.",!
"RTN","DGPTDRG",44,0)
 W !,"    Therefore, this diagnosis code will NOT be passed"
"RTN","DGPTDRG",45,0)
 W !,"    to the grouper. Please enter another code."
"RTN","DGPTF4")
0^7^B22825179
"RTN","DGPTF4",1,0)
DGPTF4 ;ALB/JDS/ADL - PTF ENTRY/EDIT-4 ; 8/2/01 5:42pm
"RTN","DGPTF4",2,0)
 ;;5.3;Registration;**114,115,397,510**;Aug 13, 1993
"RTN","DGPTF4",3,0)
 ;;ADL;Updated for CSV Project;;Mar 24, 2003
"RTN","DGPTF4",4,0)
 ;
"RTN","DGPTF4",5,0)
WR ;
"RTN","DGPTF4",6,0)
 W @IOF,HEAD,?72 S Z="<701>" D Z^DGPTFM K X S $P(X,"-",81)="" W !,X
"RTN","DGPTF4",7,0)
 Q
"RTN","DGPTF4",8,0)
EN S Y=+B(70) D D^DGPTUTL W ! S Z=5 D Z W $S($P(B(0),U,11)=1:"Date of Disch: ",1:"Census Date  : ") S Z=Y,Z1=20 D Z1 W "Disch Specialty: ",$S($D(^DIC(42.4,+$P(B(70),U,2),0)):$E($P(^(0),U,1),1,$S(DGPR:45,1:25)),1:"")
"RTN","DGPTF4",9,0)
 W !,"   Type of Disch: " S L=";"_$P(^DD(45,72,0),U,3),L1=";"_$P(B(70),U,3)_":" W $P($P(L,L1,2),";",1),?41 S L=";"_$P(^DD(45,72.1,0),U,3),L1=";"_$P(B(70),U,14)_":" W "Disch Status: ",$P($P(L,L1,2),";",1)
"RTN","DGPTF4",10,0)
 W !,"   Place of Disp: ",$S($D(^DIC(45.6,+$P(B(70),U,6),0)):$E($P(^(0),U,1),1,21),1:"")
"RTN","DGPTF4",11,0)
 W ?40 S Z=6 D Z W " Out Treat: ",$P("YES^^NO",U,+$P(B(70),U,4))
"RTN","DGPTF4",12,0)
 W !?6,"Means Test: " S L=";"_$P(^DD(45,10,0),U,3),L1=";"_$P(B(0),U,10)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTF4",13,0)
 W ?42,"VA Auspices: ",$S($P(B(70),U,5)=1:"YES",$P(B(70),U,5)=2:"NO",1:"")
"RTN","DGPTF4",14,0)
 W ! S Z=7 D Z W " Receiv facil: " S Z=$P(B(70),U,12)_$P(B(70),U,13),Z1=18 D Z1 W ?38 S Z="Other Fields" D Z
"RTN","DGPTF4",15,0)
 S DGINC=$P(B(101),U,7)
"RTN","DGPTF4",16,0)
 I DGINC>1000 S DGINC=$E(DGINC,1,$L(DGINC)-3)_","_$E(DGINC,$L(DGINC)-2,$L(DGINC))
"RTN","DGPTF4",17,0)
 W !,"      C&P Status: " S L=";"_$P(^DD(45,78,0),U,3),L1=";"_$P(B(70),U,9)_":" W $E($P($P(L,L1,2),";",1),1,24),?47,"Income: $",DGINC
"RTN","DGPTF4",18,0)
 K DGINC
"RTN","DGPTF4",19,0)
AS ;
"RTN","DGPTF4",20,0)
 N DGRSC
"RTN","DGPTF4",21,0)
 S DGRSC=$S($P(A(.3),U)="Y":$$RTEN^DGPTR4($P(A(.3),U,2)),1:"")
"RTN","DGPTF4",22,0)
 W !,"       ASIH Days: ",$P(B(70),U,8)
"RTN","DGPTF4",23,0)
 W ?40,"SC Percentage: ",$S($P(A(.3),U)="Y":$P(A(.3),U,2)_"%",1:"")
"RTN","DGPTF4",24,0)
 I DGRSC]"",DGRSC'=$P(A(.3),U,2) W ?60,"Transmitted: ["_DGRSC_"%]"
"RTN","DGPTF4",25,0)
 ;W !,?39,"Period Of Serv: ",$S($D(^DIC(21,$S('$D(^DGPM(+$O(^DGPM("APTF",PTF,0)),"ODS")):+$P(A(.32),U,3),+^("ODS"):+$O(^DIC(21,"D",6,0)),1:+$P(A(.32),U,3)),0)):$E($P(^(0),U),1,26),1:""),!
"RTN","DGPTF4",26,0)
 W !,?39,"Period Of Serv: "
"RTN","DGPTF4",27,0)
 W $S($D(^DIC(21,$S('$D(^DGPM(+$O(^DGPM("APTF",PTF,0)),"ODS")):+$$CKPOS^DGPTUTL($P(B(101),U,8),+$P(A(.32),U,3)),+^("ODS"):+$O(^DIC(21,"D",6,0)),1:$$CKPOS^DGPTUTL($P(B(101),U,8),+$P(A(.32),U,3))),0)):$E($P(^(0),U),1,26),1:""),!
"RTN","DGPTF4",28,0)
 Q
"RTN","DGPTF4",29,0)
 ;
"RTN","DGPTF4",30,0)
EN1 K DRG S B(70)=$S($D(^DGPT(PTF,70)):^(70),1:"") D WR
"RTN","DGPTF4",31,0)
 S DGPTDAT=$$GETDATE^ICDGTDRG(PTF) ;Get correct effective date
"RTN","DGPTF4",32,0)
 S DGPTTMP=$$ICDDX^ICDCODE(+$P(B(70),U,10),DGPTDAT)
"RTN","DGPTF4",33,0)
 W ! S Z=1 D Z W "         DXLS: ",$S(+DGPTTMP&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,4)_" ("_$P(DGPTTMP,U,2)_")",1:"")
"RTN","DGPTF4",34,0)
 S DGPTTMP=$$ICDDX^ICDCODE(+$P(B(70),U,11),DGPTDAT) W:$P(B(70),U,11)&('$P(B(70),U,10)) !,"  Principal Diag: ",$S(+DGPTTMP&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,4)_" ("_$P(DGPTTMP,U,2)_")",1:"") D
"RTN","DGPTF4",35,0)
 . F I=16:1:24 S DGPTTMP2=$$ICDDX^ICDCODE(+$P(B(70),U,I),DGPTDAT) I +DGPTTMP2&($P(DGPTTMP2,U,10)) W !,?18,$P(DGPTTMP2,U,4)_" ("_$P(DGPTTMP2,U,2)_")"
"RTN","DGPTF4",36,0)
 S DGPTF=PTF D:'DGST CHK701^DGPTSCAN,UP701^DGPTSPQ
"RTN","DGPTF4",37,0)
 ; display contents of 300th node 
"RTN","DGPTF4",38,0)
 S DG300=$S($D(^DGPT(PTF,300)):^(300),1:"") D:DG300]"" PRN2^DGPTFM8 K DG300
"RTN","DGPTF4",39,0)
EN2 K DRG
"RTN","DGPTF4",40,0)
 I $D(^DGPT(PTF,0)),$P(^(0),U,11)=1 S DA=DFN D EN1^DGPTFD I $D(DRG),$D(^DGP(45.84,PTF,0)),$P(^(0),U,6)'=DRG S $P(^(0),U,6)=DRG
"RTN","DGPTF4",41,0)
JUMP K AGE,B,CC,DA,DAM,DOB,DXLS,EXP,I,L1,L2,SEX,DRGCAL,S,DIC,DR,DIE
"RTN","DGPTF4",42,0)
 Q:DGPR
"RTN","DGPTF4",43,0)
 F I=$Y:1:18 W !
"RTN","DGPTF4",44,0)
 K X S $P(X,"-",81)="" W X
"RTN","DGPTF4",45,0)
 ;
"RTN","DGPTF4",46,0)
 G O:DGST&(('$D(DRG))!('DGDD)!('$D(^DGP(45.84,PTF))))
"RTN","DGPTF4",47,0)
X G ACT^DGPTF41
"RTN","DGPTF4",48,0)
 ;
"RTN","DGPTF4",49,0)
CLS G NOT:('$D(DRG))!('DGDD)!('DGFC)
"RTN","DGPTF4",50,0)
 ;I DRG=470!(DRG=469) W !!,*7,"Unable to release DRG ",DRG,". Please verify data entered.",*7 D HANG^DGPTUTL G EN1
"RTN","DGPTF4",51,0)
 ;
"RTN","DGPTF4",52,0)
 ;change made to allow release of 470, before grouper released to vamc's
"RTN","DGPTF4",53,0)
 ;  patch 115
"RTN","DGPTF4",54,0)
 I DRG=469 W !!,*7,"Unable to release DRG ",DRG,". Please verify data entered.",*7 D HANG^DGPTUTL G EN1
"RTN","DGPTF4",55,0)
 I $D(DGCST),'DGCST D CEN G EN1:'DGCST
"RTN","DGPTF4",56,0)
 I '$P(^DGPT(PTF,0),"^",4) W !,"Updating TRANSFER DRGs..." S DGADM=$P(^DGPT(PTF,0),U,2) D SUDO1^DGPTSUDO
"RTN","DGPTF4",57,0)
 I DGDD>(DT+1) W !,"Cannot close with Discharge date in future." D HANG^DGPTUTL G EN1
"RTN","DGPTF4",58,0)
 I $D(^DGM("PT",DFN)) F I=0:0 S I=$O(^DGM("PT",DFN,I)) Q:'I  I '$D(^DGM(I,0)) K ^DGM(I),^DGM("PT",DFN,I)
"RTN","DGPTF4",59,0)
 I $D(^DGM("PT",DFN)) W !!,"Not all messages have been cleared up for this patient--cannot close.",*7,*7 S DGPTF=DFN,X="??" K DGALL D HELP^DGPTMSGD K DGPTF G EN1:'$D(DGALL) K DGALL
"RTN","DGPTF4",60,0)
 G CLS^DGPTF2
"RTN","DGPTF4",61,0)
 ;
"RTN","DGPTF4",62,0)
O I '$D(^DGP(45.84,PTF,0)) S DR="6///0",DIE="^DGPT(",DA=PTF,(DGST,DGN)=0 D ^DIE W !,"  NOT CLOSED " D HANG^DGPTUTL G EN1
"RTN","DGPTF4",63,0)
 S (DGST,DGN)=0
"RTN","DGPTF4",64,0)
 S DGPTIFN=PTF,DGRTY=1 D OPEN^DGPTFDEL S DGST=0
"RTN","DGPTF4",65,0)
 K DGPTIFN,DGRTY G EN1
"RTN","DGPTF4",66,0)
 ;
"RTN","DGPTF4",67,0)
Q G Q^DGPTF
"RTN","DGPTF4",68,0)
 ;
"RTN","DGPTF4",69,0)
NOT I 'DGFC S DR="3//^S X=$P($$SITE^VASITE,U,2);5",DIE="^DGPT(",DA=PTF D ^DIE S DGFC=$P(^DGPT(PTF,0),U,3) I DGFC G EN1
"RTN","DGPTF4",70,0)
 W !!,"Unable to close without a ",$S('$D(DRG):"DRG being calculated.",'DGDD:" discharge date.",1:" facility specified"),!!,*7,*7 H 4 G EN1
"RTN","DGPTF4",71,0)
 Q
"RTN","DGPTF4",72,0)
 ;
"RTN","DGPTF4",73,0)
Z D Z^DGPTF5 Q
"RTN","DGPTF4",74,0)
Z1 D Z1^DGPTF5 Q
"RTN","DGPTF4",75,0)
CEN D CEN^DGPTF5 Q
"RTN","DGPTFAPI")
0^8^B6885804
"RTN","DGPTFAPI",1,0)
DGPTFAPI ;BAY/JAT/ADL - Returns data from Patient Treatment (PTF) file; ; 10/12/00 10:00am
"RTN","DGPTFAPI",2,0)
 ;;5.3;Registration;**309,510**;Aug 13, 1993
"RTN","DGPTFAPI",3,0)
 ;;ADL;Update for CSV Project;;Mar 24, 2003
"RTN","DGPTFAPI",4,0)
 ; can be used as an RPC (Remote Procedure call)
"RTN","DGPTFAPI",5,0)
 ; see ^XWB(8994 for documentation
"RTN","DGPTFAPI",6,0)
 ; output:  RESULTS (passed by reference)
"RTN","DGPTFAPI",7,0)
 ; input :  PTFNUMBR, the Patient Treatment IFN (.001 of file #45)
"RTN","DGPTFAPI",8,0)
 ;
"RTN","DGPTFAPI",9,0)
RPC(RESULTS,PTFNUMBR) ;
"RTN","DGPTFAPI",10,0)
 N DGPTF,DG70,DGDISP,DGDXLS,DGDX2,DGDX3,DGDX4,DGDX5,DGDX6,DGDX7,DGDX8,DGDX9,DGDX10,DGDISTYP
"RTN","DGPTFAPI",11,0)
 S DGPTF=$G(PTFNUMBR)
"RTN","DGPTFAPI",12,0)
 K RESULTS S RESULTS(0)=-1
"RTN","DGPTFAPI",13,0)
 I 'DGPTF Q
"RTN","DGPTFAPI",14,0)
 I '$D(^DGPT(DGPTF,0)) Q
"RTN","DGPTFAPI",15,0)
 S DG70=$G(^DGPT(DGPTF,70))
"RTN","DGPTFAPI",16,0)
 S DGDISP=$P(DG70,U,6)
"RTN","DGPTFAPI",17,0)
 I DGDISP S DGDISP=$P($G(^DIC(45.6,DGDISP,0)),U)
"RTN","DGPTFAPI",18,0)
 S DGDISTYP=$P(DG70,U,3)
"RTN","DGPTFAPI",19,0)
 I DGDISTYP S DGDISTYP=$S(DGDISTYP=1:"REGULAR",DGDISTYP=2:"NBC OR WHILE ASIH",DGDISTYP=3:"EXPIRATION 6 MONTH LIMIT",DGDISTYP=4:"IRREGULAR",DGDISTYP=5:"TRANSFER",DGDISTYP=6:"DEATH WITH AUTOPSY",DGDISTYP=7:"DEATH WITHOUT AUTOPSY",1:"")
"RTN","DGPTFAPI",20,0)
 S DGDXLS=$P(DG70,U,10)
"RTN","DGPTFAPI",21,0)
 S DGPTDAT=$$GETDATE^ICDGTDRG(DGPTF)
"RTN","DGPTFAPI",22,0)
 I DGDXLS S DGDXLS=$P($$ICDDX^ICDCODE(DGDXLS,DGPTDAT),U,2)
"RTN","DGPTFAPI",23,0)
 S DGDX2=$P(DG70,U,16) I DGDX2 S DGDX2=$P($$ICDDX^ICDCODE(DGDX2,DGPTDAT),U,2)
"RTN","DGPTFAPI",24,0)
 S DGDX3=$P(DG70,U,17) I DGDX3 S DGDX3=$P($$ICDDX^ICDCODE(DGDX3,DGPTDAT),U,2)
"RTN","DGPTFAPI",25,0)
 S DGDX4=$P(DG70,U,18) I DGDX4 S DGDX4=$P($$ICDDX^ICDCODE(DGDX4,DGPTDAT),U,2)
"RTN","DGPTFAPI",26,0)
 S DGDX5=$P(DG70,U,19) I DGDX5 S DGDX5=$P($$ICDDX^ICDCODE(DGDX5,DGPTDAT),U,2)
"RTN","DGPTFAPI",27,0)
 S DGDX6=$P(DG70,U,20) I DGDX6 S DGDX6=$P($$ICDDX^ICDCODE(DGDX6,DGPTDAT),U,2)
"RTN","DGPTFAPI",28,0)
 S DGDX7=$P(DG70,U,21) I DGDX7 S DGDX7=$P($$ICDDX^ICDCODE(DGDX7,DGPTDAT),U,2)
"RTN","DGPTFAPI",29,0)
 S DGDX8=$P(DG70,U,22) I DGDX8 S DGDX8=$P($$ICDDX^ICDCODE(DGDX8,DGPTDAT),U,2)
"RTN","DGPTFAPI",30,0)
 S DGDX9=$P(DG70,U,23) I DGDX9 S DGDX9=$P($$ICDDX^ICDCODE(DGDX9,DGPTDAT),U,2)
"RTN","DGPTFAPI",31,0)
 S DGDX10=$P(DG70,U,24) I DGDX10 S DGDX10=$P($$ICDDX^ICDCODE(DGDX10,DGPTDAT),U,2)
"RTN","DGPTFAPI",32,0)
 S RESULTS(0)=1
"RTN","DGPTFAPI",33,0)
 ; #72: type of disposition^#75: place of disposition (name)^#79: primary ICD9 code
"RTN","DGPTFAPI",34,0)
 S RESULTS(1)=DGDISTYP_U_DGDISP_U_DGDXLS
"RTN","DGPTFAPI",35,0)
 ; #79.16 thru 79.24: 2nd thru 10th ICD9 codes
"RTN","DGPTFAPI",36,0)
 S RESULTS(2)=DGDX2_U_DGDX3_U_DGDX4_U_DGDX5_U_DGDX6_U_DGDX7_U_DGDX8_U_DGDX9_U_DGDX10
"RTN","DGPTFAPI",37,0)
 Q
"RTN","DGPTFD")
0^9^B14641468
"RTN","DGPTFD",1,0)
DGPTFD ;ALB/MTC/ADL - Sets Required Variables for DRG on 701 Screen ; 2/19/02 12:52pm
"RTN","DGPTFD",2,0)
 ;;5.3;Registration;**60,441,510**;Aug 13, 1993
"RTN","DGPTFD",3,0)
 ;;ADL;Update for CSV Project;;Mar 24, 2003
"RTN","DGPTFD",4,0)
 ;
"RTN","DGPTFD",5,0)
EN1 ;-- entry point from 701
"RTN","DGPTFD",6,0)
 Q:'$D(^DGPT(PTF,70))  S DGPT(70)=^(70)
"RTN","DGPTFD",7,0)
 ;
"RTN","DGPTFD",8,0)
 ;-- check for DXLS
"RTN","DGPTFD",9,0)
 I $P(DGPT(70),U,10)="",$P(DGPT(70),U,11)="" G Q
"RTN","DGPTFD",10,0)
 ;-- did patient die during care
"RTN","DGPTFD",11,0)
 S DGEXP=$S($P(DGPT(70),U,3)>5:1,1:0)
"RTN","DGPTFD",12,0)
 ;-- discharged against med advice
"RTN","DGPTFD",13,0)
 S DGDMS=$S($P(DGPT(70),U,3)=4:1,1:0)
"RTN","DGPTFD",14,0)
 ;-- transfer to acute care facility
"RTN","DGPTFD",15,0)
 S DGTRS=$S($P(DGPT(70),U,13):1,1:0)
"RTN","DGPTFD",16,0)
 ;-- sex,age
"RTN","DGPTFD",17,0)
 S SEX=$P(^DPT(DFN,0),U,2),AGE=$S(+DGPT(70):+DGPT(70),1:DT)-$P(^(0),U,3)\10000,DOB=$P(^(0),U,3) ; DOB added by abr for ICD calc.
"RTN","DGPTFD",18,0)
 S DGDAT=$$GETDATE^ICDGTDRG(PTF)
"RTN","DGPTFD",19,0)
 ;-- build diagnosis string
"RTN","DGPTFD",20,0)
 S DGDX=""
"RTN","DGPTFD",21,0)
 ;-- new record after 10/1/86
"RTN","DGPTFD",22,0)
 I '+DGPT(70)!(+DGPT(70)>2861000) F DGI=16:1:24 I $P(DGPT(70),U,DGI)]"" S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGPT(70),U,DGI),$$GETDATE^ICDGTDRG(PTF)) I +DGPTTMP>0,$P(DGPTTMP,U,10) S DGDX=DGDX_U_$P(DGPT(70),U,DGI)
"RTN","DGPTFD",23,0)
 ;-- old record format
"RTN","DGPTFD",24,0)
 I +DGPT(70),+DGPT(70)<2861000 F DGI=0:0 S DGI=$O(^DGPT(PTF,"M","AM",DGI)) Q:DGI'>0  S DGJ=$O(^DGPT(PTF,"M","AM",DGI,0)) I $D(^DGPT(PTF,"M",+DGJ,0)) S DGNODE=$P(^(0),U,5,9) I DGNODE'="^^^^" D OLD
"RTN","DGPTFD",25,0)
 S DGDX=$S($P(DGPT(70),U,10):$P(DGPT(70),"^",10),1:$P(DGPT(70),U,11))_DGDX
"RTN","DGPTFD",26,0)
 ;-- build surgery and procedure strings
"RTN","DGPTFD",27,0)
 K DGSURG,DGPROC
"RTN","DGPTFD",28,0)
 ;-- start with surgeries (401)
"RTN","DGPTFD",29,0)
 F DGI=0:0 S DGI=$O(^DGPT(PTF,"S",DGI)) Q:DGI'>0  S X=$P(^(DGI,0),U,8,12) I X]"",X'="^^^^" S K=+^(0),K=$S('$D(DGSURG(K)):K,K[".":K_DGI_1,1:K_".0000"_DGI_1),DGSURG(K)="" S DGVAR=0 D TAG
"RTN","DGPTFD",30,0)
 ;-- build DGSURG
"RTN","DGPTFD",31,0)
 N I,X,Y,Z ; eliminate duplicates as we go 
"RTN","DGPTFD",32,0)
 I $D(DGSURG) S DGSURG=U F DGI=0:0 S DGI=$O(DGSURG(DGI)) Q:DGI'>0  D
"RTN","DGPTFD",33,0)
 .S X=DGSURG(DGI)
"RTN","DGPTFD",34,0)
 .F I=1:1:5 S Y=$P(X,U,I) Q:Y=""  D
"RTN","DGPTFD",35,0)
 ..Q:$L(DGSURG)>240
"RTN","DGPTFD",36,0)
 ..S Z=U_Y_U Q:DGSURG[Z
"RTN","DGPTFD",37,0)
 ..S DGSURG=DGSURG_Y_U
"RTN","DGPTFD",38,0)
 ;-- procedures next old records before 10/1/87
"RTN","DGPTFD",39,0)
 I +DGPT(70),+DGPT(70)<2871000 G DRG:'$D(^DGPT(PTF,"401P")) S DGPROC="",X=^("401P") D:X]""&(X'="^^^^")  G DRG
"RTN","DGPTFD",40,0)
 . F DGI=1:1:5 I $P(X,U,DGI)]"" S DGPTTMP=$$ICDOP^ICDCODE($P(X,U,DGI),$$GETDATE^ICDGTDRG(PTF)) I +DGPTTMP>0,$P(DGPTTMP,U,10) S DGPROC=DGPROC_$P(X,U,DGI)_U
"RTN","DGPTFD",41,0)
 ;-- get 601 (procedures)
"RTN","DGPTFD",42,0)
 F DGI=0:0 S DGI=$O(^DGPT(PTF,"P",DGI)) Q:DGI'>0  S X=$P(^(DGI,0),U,5,9) I X]"",X'="^^^^" S K=+^(0),K=$S('$D(DGPROC(K)):K,K[".":K_DGI_1,1:K_".0000"_DGI_1),DGPROC(K)="" S DGVAR=1 D TAG
"RTN","DGPTFD",43,0)
 ;-- build DGPROC and eliminate duplicates as we go
"RTN","DGPTFD",44,0)
 I $D(DGPROC) S DGPROC=U F DGI=0:0 S DGI=$O(DGPROC(DGI)) Q:DGI'>0  D
"RTN","DGPTFD",45,0)
 .S X=DGPROC(DGI)
"RTN","DGPTFD",46,0)
 .F I=1:1:5 S Y=$P(X,U,I) Q:Y=""  D
"RTN","DGPTFD",47,0)
 ..Q:$L(DGPROC)>240
"RTN","DGPTFD",48,0)
 ..S Z=U_Y_U Q:DGPROC[Z
"RTN","DGPTFD",49,0)
 ..S DGPROC=DGPROC_Y_U
"RTN","DGPTFD",50,0)
DRG ;
"RTN","DGPTFD",51,0)
 S:'$D(DGCPT) DGDRGPRT=1 D ^DGPTICD  ;return DRG code even if inactive
"RTN","DGPTFD",52,0)
 ;
"RTN","DGPTFD",53,0)
Q K AGE,SEX,DGEXP,DGDMS,DGPT,DGTRS,DGDX,DGNODE,DGPROC,DGSURG,DGDRGPRT,DGI,DGJ,K,DOB Q
"RTN","DGPTFD",54,0)
 ;
"RTN","DGPTFD",55,0)
OLD ;-- used to format diagnostic codes for old PTF records
"RTN","DGPTFD",56,0)
 S X="" F DGJ=1:1:5 I $P(DGNODE,"^",DGJ)]"",$D(^ICD9($P(DGNODE,"^",DGJ),0)) S X=X_"^"_$P(DGNODE,"^",DGJ)
"RTN","DGPTFD",57,0)
 S DGDX=X_$P(DGDX,"^",1,40)
"RTN","DGPTFD",58,0)
 Q
"RTN","DGPTFD",59,0)
TAG ;-- used to build sur/proc string date
"RTN","DGPTFD",60,0)
 F DGJ=1:1:5 I $P(X,U,DGJ)]"" S DGPTTMP=$$ICDOP^ICDCODE($P(X,U,DGJ),$P(DGPT(70),".")) I +DGPTTMP>0,$P(DGPTTMP,U,10) S:DGVAR=0 DGSURG(K)=DGSURG(K)_$P(X,U,DGJ)_U S:DGVAR=1 DGPROC(K)=DGPROC(K)_$P(X,U,DGJ)_U
"RTN","DGPTFD",61,0)
 Q
"RTN","DGPTFIC")
0^10^B24209624
"RTN","DGPTFIC",1,0)
DGPTFIC ;ALB/JDS/ADL - PTF CODE SEARCH ; 26 JAN 87 @0800
"RTN","DGPTFIC",2,0)
 ;;5.3;Registration;**510**;Aug 13, 1993
"RTN","DGPTFIC",3,0)
 ;;ADL;;Update for CSV Project;;Mar 25, 2003
"RTN","DGPTFIC",4,0)
EN K DG1 S DIC="^ICD9(" S DIC("S")="I $$ISVALID^ICDGTDRG(+Y,DT,9)" G RANGE
"RTN","DGPTFIC",5,0)
E9 K DIC S DHD=DHD_"  Diagnostic Code Search"
"RTN","DGPTFIC",6,0)
F9 S DIS(0)="I $D(^DGPT(D0,0)),$P(^(0),U,11)=1 S DG2=0,L=1,D1=+$O(^DGPT(D0,""M"",0)) X DIS(""0AAA""),DIS(""0A"") I DG2 S ^UTILITY($J,""DG"",0)=""D""",DIS("0A")="F E=0:0 X DIS(""0AA"") S D1=$O(^DGPT(D0,""M"",D1)) Q:D1'>0"
"RTN","DGPTFIC",7,0)
 S DG9=$S('DGR:"I DG1[(U_$P(DG3,U,DGZD)_U)",1:"S DGPTTMP=$$ICDDX^ICDCODE(+$P(DG3,U,DGZD),$$GETDATE^ICDGTDRG(D0)) S DG4=$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,2),1:"""")_""!"" I DG4]DG1&(DG6]DG4)")
"RTN","DGPTFIC",8,0)
 S DIS("0AA")="I $D(^DGPT(D0,""M"",D1,0)) S DG3=^(0) F DGZD=5:1:15 "_DG9_" S DG2=DG2+1,^UTILITY($J,""DG"",D0,DG2)=$S(DGZD<11:DGZD-4,1:DGZD-5)_U_$P(DG3,U,10)_U_$P(DG3,U,DGZD)"
"RTN","DGPTFIC",9,0)
 S DIS("0AAA")="I $D(^DGPT(D0,70)) S DG3=^(70) F DGZD=10,16:1:24 "_DG9_" S DG2=DG2+1,$P(^UTILITY($J,""DG"",D0,""A""),U,DGZD)=$P($$ICDDX^ICDCODE(+$P(DG3,U,DGZD),$$GETDATE^ICDGTDRG(D0)),U,2)"
"RTN","DGPTFIC",10,0)
 S L=0
"RTN","DGPTFIC",11,0)
GO K DG9 W !,"Searching the PTF file  Select fields to sort by",! S DIC="^DGPT(",FLDS="[DGICD]",L=0 D EN1^DIP
"RTN","DGPTFIC",12,0)
Q K DIS,DGZD,DGZJ,DINS,DXS,DTOUT,DG4,DGR,DIP,DP,%,DGZJJ,DGZT,DG1,DHD,I,J,DG2,DG3,DG5,DG6,DG7,DG8,DG9,D0,DJ,DTOT,FLDS,L,Z,Z,X,DIC,X1,Y Q
"RTN","DGPTFIC",13,0)
EN1 ;
"RTN","DGPTFIC",14,0)
 S DIC="^ICD0(" S DIC("S")="I $$ISVALID^ICDGTDRG(+Y,DT,0)" G RANGE
"RTN","DGPTFIC",15,0)
E0 K DIC S DHD=DHD_" Surgical Code Search"
"RTN","DGPTFIC",16,0)
F0 S DIS(0)="I $D(^DGPT(D0,0)),$P(^(0),U,11)=1 S DG2=0,L=1 X:$D(^DGPT(D0,""P"")) DIS(""0AAAA"") S D1=+$O(^DGPT(D0,""S"",0)) X DIS(""0AAA"") X DIS(""0A"") I DG2 S ^UTILITY($J,""DG"",0)=""P"""
"RTN","DGPTFIC",17,0)
 S DIS("0A")="F E=0:0 X DIS(""0AA"") S D1=$O(^DGPT(D0,""S"",D1)) Q:D1'>0"
"RTN","DGPTFIC",18,0)
 S DG9=$S('DGR:"I DG1[(U_$P(DG3,U,DGZD)_U)",1:"S DGPTTMP=$$ICDDX^ICDCODE(+$P(DG3,U,DGZD),$$GETDATE^ICDGTDRG(D0)) S DG4=$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,2),1:"""")_""!"" I DG4]DG1&(DG6]DG4)")
"RTN","DGPTFIC",19,0)
 S DIS("0AA")="I $D(^DGPT(D0,""S"",D1,0)) S DG3=^(0) F DGZD=8:1:12 "_DG9_" S DG2=DG2+1,^UTILITY($J,""DG"",D0,DG2)=(DGZD-7)_U_$P(DG3,U,1)_U_$P(DG3,U,DGZD)"
"RTN","DGPTFIC",20,0)
 S DIS("0AAA")="I $D(^DGPT(D0,""401P"")) S DG3=^(""401P"") F DGZD=1:1:5 "_DG9_" S DG2=DG2+1,^UTILITY($J,""DG"",D0,DG2)=DGZD_U_U_$P(DG3,U,DGZD)"
"RTN","DGPTFIC",21,0)
 S DIS("0AAAA")="F D1=0:0 S D1=$O(^DGPT(D0,""P"",D1)) Q:D1'>0  I $D(^DGPT(D0,""P"",D1,0)) S DG3=^(0) F DGZD=5:1:9 "_DG9_" S DG2=DG2+1,^UTILITY($J,""DG"",D0,DG2)=(DGZD-4)_U_$P(DG3,U,1)_U_$P(DG3,U,DGZD)"
"RTN","DGPTFIC",22,0)
 S L=0
"RTN","DGPTFIC",23,0)
 G GO
"RTN","DGPTFIC",24,0)
 Q
"RTN","DGPTFIC",25,0)
OUT S DGZJ=$X,DG2=$S(DGZT["ICD":"^ICD9(",1:"^ICD0("),DIO=1
"RTN","DGPTFIC",26,0)
 F I=0:0 S I=$O(^UTILITY($J,"DG",D0,I)) Q:I'>0  S J=^(I),Y=$P($P(J,U,2),".",1) X ^DD("DD") W:I>1 !?DGZJ W DGZT_$P(J,U,1)_"  "_Y W ?DGZJ+23,$P(@(DG2_"$P(J,U,3)"_",0)"),U,1) I DG5 S DJ=$S($D(DJ):DJ,1:0)+1,DTOT=1
"RTN","DGPTFIC",27,0)
 Q:'$D(^UTILITY($J,"DG",D0,"A"))  S J=^("A") F I=10,16:1:24 S K=$P(J,U,I) I K]"" W !?DGZJ,$S(I=10:"DXLS",1:"ICD "_(I-14)),?DGZJ+23,K I DG5 S DJ=$S($D(DJ):DJ,1:0)+1,DTOT=1
"RTN","DGPTFIC",28,0)
 Q
"RTN","DGPTFIC",29,0)
DHD S DIC("A")="Then search for: ",DIC("S")=$S($G(DIC("S"))="":"I DG1'[(U_+Y_U)",1:DIC("S")_"&(DG1'[(U_+Y_U))") F I=0:0 D ^DIC Q:Y'>0  S DG1=DG1_+Y_U Q:$L(DG1)>235
"RTN","DGPTFIC",30,0)
 S DHD="" F I=2:1 S DHD=DHD_$S(I'=2:",  ",1:"")_$P(@(DIC_"$P(DG1,U,I)"_",0)"),U,1) Q:'$P(DG1,U,I+1)  I $L(DHD)>200 S DHD=DHD_"....." Q
"RTN","DGPTFIC",31,0)
C W !,"Total by PTF record or ICD count: P// " S Z="^PTF record^ICD count" R X:DTIME G Q:X=U!'$T X:X="" "S X=""P"" W X" D IN^DGHELP G H:%=-1 S DG5=$S(X="I":1,1:0) Q
"RTN","DGPTFIC",32,0)
H W !!,"The search may have more than 1 match per PTF record",!,"Type 'P' to total only PTF records",!,"Type 'I' to total all matches",! G C
"RTN","DGPTFIC",33,0)
H1 W !!,"Type 'R' to specify a range of codes",!,"     'E' to specify a series of codes to match exactly",!
"RTN","DGPTFIC",34,0)
RANGE S DIC(0)="AMEQZ" W !,"Search by Range or Exact match: E// " S Z="^RANGE^EXACT MATCH" R X:DTIME G Q:X=U!'$T X:X="" "S X=""E"" W X" D IN^DGHELP G H1:%=-1 S DGR=$S(X="R":1,1:0)
"RTN","DGPTFIC",35,0)
 S DG7=$S(DIC[9:"Diagnosis",1:"Surgical") G E:'DGR
"RTN","DGPTFIC",36,0)
 S DIC("A")="Start with "_DG7_" code: " D ^DIC G Q:Y'>0 S DG1=$P(Y(0),U,1)_" "
"RTN","DGPTFIC",37,0)
F S DIC("A")="Go to "_DG7_" code: " D ^DIC G Q:Y'>0 S DG6=$P(Y(0),U,1)_"! " I DG6']DG1 W !,"Must be after start code",! G F
"RTN","DGPTFIC",38,0)
 S DHD=DG1_" to "_$P(DG6,"!",1)_" "_DG7_" Code Search" D C G Q:'$D(X),@("F"_$E(DIC,5))
"RTN","DGPTFIC",39,0)
 Q
"RTN","DGPTFIC",40,0)
E S DIC("A")="Enter "_DG7_" Code to search for: " D ^DIC G Q:Y'>0 S DG1=U_+Y_U D DHD G Q:'$D(X),@("E"_$E(DIC,5))
"RTN","DGPTFJC")
0^11^B25798370
"RTN","DGPTFJC",1,0)
DGPTFJC ;ALB/JDS/ADL - CLOSED PTF ; 3/14/85
"RTN","DGPTFJC",2,0)
 ;;5.3;Registration;**158,510**;Aug 13, 1993
"RTN","DGPTFJC",3,0)
 ;;ADL;;Update for CSV Project;;Mar 25, 2003
"RTN","DGPTFJC",4,0)
101 W !,"Enter '^N' for Screen N, RETURN for <MAS>,'^' to Abort: <MAS>//"
"RTN","DGPTFJC",5,0)
 D READ G Q^DGPTF:X=U,^DGPTFM:X="",^DGPTFJ:X?1"^".E D H G 101
"RTN","DGPTFJC",6,0)
 ;
"RTN","DGPTFJC",7,0)
H D HELP^DGPTFJ W ! Q
"RTN","DGPTFJC",8,0)
 ;
"RTN","DGPTFJC",9,0)
MAS W !!,"Enter '^N' for Screen N, RETURN for <",DGNUM,">,'^' to Abort: <",DGNUM,">//"
"RTN","DGPTFJC",10,0)
 D READ G Q^DGPTF:X=U,^DGPTFJ:X?1"^".E
"RTN","DGPTFJC",11,0)
 I X="" S (ST,ST1)=J+2 G @($S($D(DGZDIAG):"NDG",$D(DGZSER):"NSR",$D(DGZPRO):"NPR",1:"DONE")_"^DGPTFM")
"RTN","DGPTFJC",12,0)
 D H G MAS
"RTN","DGPTFJC",13,0)
 ;
"RTN","DGPTFJC",14,0)
401 S DGNUM=$S($D(S(DGZS0+1)):401_"-"_(DGZS0+1),1:"MAS")
"RTN","DGPTFJC",15,0)
 W !,"Enter '^N' for Screen N, RETURN for <",DGNUM,">,'^' to Abort: <",DGNUM,">//"
"RTN","DGPTFJC",16,0)
 D READ G Q^DGPTF:X=U,NEXM^DGPTFM5:X="",^DGPTFJ:X?1"^".E D H G 401
"RTN","DGPTFJC",17,0)
 ;
"RTN","DGPTFJC",18,0)
501 W !,"Enter '^N' for Screen N, RETURN for <",DGNUM,">,'^' to Abort: <",DGNUM,">//"
"RTN","DGPTFJC",19,0)
 D READ G Q^DGPTF:X=U,NEXM^DGPTFM4:X="",^DGPTFJ:X?1"^".E D H G 501
"RTN","DGPTFJC",20,0)
 ;
"RTN","DGPTFJC",21,0)
601 W !,"Enter '^N' for Screen N, RETURN for <",DGNUM,">,'^' to Abort: <",DGNUM,">//"
"RTN","DGPTFJC",22,0)
 D READ G Q^DGPTF:X=U,NEXP^DGPTFM6:X="",^DGPTFJ:X?1"^".E D H G 601
"RTN","DGPTFJC",23,0)
 ;
"RTN","DGPTFJC",24,0)
701 ;
"RTN","DGPTFJC",25,0)
 G ACT1^DGPTF41 ; new code
"RTN","DGPTFJC",26,0)
 ;
"RTN","DGPTFJC",27,0)
READ ; -- read X
"RTN","DGPTFJC",28,0)
 R X:DTIME S:'$T X="^",DGPTOUT=""
"RTN","DGPTFJC",29,0)
 Q
"RTN","DGPTFJC",30,0)
 ;
"RTN","DGPTFJC",31,0)
EN S K=$S($D(K):K,1:1),DGER=0 S DGPTDAT=$$GETDATE^ICDGTDRG(DA(1)),DGPTTMP=$$ICDDX^ICDCODE(+Y,DGPTDAT) I +DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGER=1 Q
"RTN","DGPTFJC",32,0)
 I $P(DGPTTMP,U,11)]""&($P(DGPTTMP,U,11)'=$S($D(^DPT(+^DGPT(DA(1),0),0)):$P(^(0),U,2),1:"M")) W:K<24 !,$P(DGPTTMP,U,2)," can only be used with ",$S($P(DGPTTMP,U,11)="F":"FEMALES",1:"MALES") S K=K+1,DGER=1 Q
"RTN","DGPTFJC",33,0)
 S %=$P(^DGPT(DA(1),"M",DA,0),U,DGI) I $D(^DGPT(DA(1),"M","AC",Y,DA)),%'=Y S DGER=1 Q
"RTN","DGPTFJC",34,0)
 F I=0:0 S I=$O(^ICD9(+Y,"N",I)) Q:I'>0  I $D(^DGPT(DA(1),"M","AC",I,DA)),%'=I W !,"Cannot use ",$S($D(^ICD9(+Y,0)):$P(^(0),U),1:""),"  with ",$S($D(^ICD9(I,0)):$P(^(0),U),1:"") S DGER=1 Q
"RTN","DGPTFJC",35,0)
 Q:DGER  S DG1=1 F I=0:0 S I=$O(^ICD9(+Y,"R",I)) Q:I'>0  S DG1=0 I $D(^DGPT(DA(1),"M","AC",I,DA)),%'=I S DG1=1 Q
"RTN","DGPTFJC",36,0)
 I 'DG1 W !,$S(+DGPTTMP>0&('$P(DGPTTMP,U,10)):$P(DGPTTMP,U,2),1:"")," requires additional code."
"RTN","DGPTFJC",37,0)
 Q
"RTN","DGPTFJC",38,0)
EN1 S K=$S($D(K):K,1:1),DGER=0,DGPTDAT=$$GETDATE^ICDGTDRG(DA(1)),DGICD0=$$ICDOP^ICDCODE(+Y,DGPTDAT) I +DGICD0,0!('$P(DGICD0,U,10)) S DGER=1 Q
"RTN","DGPTFJC",39,0)
 I $P(DGICD0,U,11)]""&($P(DGICD0,U,11)'=$S($D(^DPT(+^DGPT(DA(1),0),0)):$P(^(0),U,2),1:"M")) W:K<24 !,$P(DGICD0,U,2)," can only be used with ",$S($P(DGICD0,U,11)="F":"FEMALES",1:"MALES") S K=K+1,DGER=1 Q
"RTN","DGPTFJC",40,0)
 S %=$P(^DGPT(DA(1),DGSB,DA,0),U,DGI) I $D(^DGPT(DA(1),DGSB,DGCR,Y,DA)),%'=Y S DGER=1 W !,"Cannot enter the same code more than once within a ",$S(DGSB="S":"401",1:"601")," transaction" Q
"RTN","DGPTFJC",41,0)
 F I=0:0 S I=$O(^ICD0(+Y,"N",I)) Q:I'>0  I $D(^DGPT(DA(1),DGSB,DGCR,I,DA)),%'=I S DGPTTMP2=$$ICDOP^ICDCODE(I,DGPTDAT) W !,"Cannot use ",$P(DGICD0,U,2),"  with ",$S(+DGPTTMP2>0:$P(DGPTTMP2,U,2),1:"") S DGER=1 Q
"RTN","DGPTFJC",42,0)
 Q:DGER  S DG1=1 F I=0:0 S I=$O(^ICD0(+Y,"R",I)) Q:I'>0  S DG1=0 I $D(^DGPT(DA(1),DGSB,DGCR,I,DA)),%'=I S DG1=1 Q
"RTN","DGPTFJC",43,0)
 I 'DG1 W !,$P(DGICD0,U,2)," requires additional code."
"RTN","DGPTFJC",44,0)
 Q
"RTN","DGPTFJC",45,0)
EN2 S K=$S($D(K):K,1:1),DGER=0,DGPTTMP=$$ICDOP^ICDCODE(+Y,$$GETDATE^ICDGTDRG(DA)) I +DGPTTMP<0!('$P(DGPTTMP,U,10)) S DGER=1 Q
"RTN","DGPTFJC",46,0)
 I $P(DGPTTMP,U,11)]""&($P(DGPTTMP,U,11)'=$S($D(^DPT(+^DGPT(DA,0),0)):$P(^(0),U,2),1:"M")) W:K<24 !,$P(DGPTTMP,U,2)," can only be used with ",$S($P(DGPTTMP,U,11)="F":"FEMALES",1:"MALES") S K=K+1,DGER=1 Q
"RTN","DGPTFJC",47,0)
 S L=$P($S($D(^DGPT((DA),"401P")):^("401P"),1:0),U,1,5),%=$P(L,U,DGI),L=$P(L,U,1,DGI-1)_U_$P(L,U,DGI+1,5) I L[Y S DGER=1 Q
"RTN","DGPTFJC",48,0)
 Q
"RTN","DGPTFJC",49,0)
EN3 S K=$S($D(K):K,1:1),DGER=0,DGPTTMP=$$ICDDX^ICDCODE(+Y,$$GETDATE^ICDGTDRG(DA)) I +DGPTTMP<0!('$P(DGPTTMP,U,10)) S DGER=1 Q
"RTN","DGPTFJC",50,0)
 I DGI=1,$P(DGPTTMP,U,5) S DGER=1 Q
"RTN","DGPTFJC",51,0)
 I $P(DGPTTMP,U,11)]""&($P(DGPTTMP,U,11)'=$S($D(^DPT(+^DGPT(DA,0),0)):$P(^(0),U,2),1:"M")) W:K<24 !,$P(DGPTTMP,U,2)," can only be used with ",$S($P(^(0),U,10)="F":"FEMALES",1:"MALES") S K=K+1,DGER=1 Q
"RTN","DGPTFJC",52,0)
 S %=$S($D(^DGPT(DA,70)):^(70),1:""),%=U_$P(%,U,10)_U_$P(%,U,16,24)_U,$P(%,U,DGI+1)=U I %[(U_+Y_U) S DGER=1 Q
"RTN","DGPTFJC",53,0)
 F I=0:0 S I=$O(^ICD9(+Y,"N",I)) Q:I'>0  I %[(U_I_U) S DGPTTMP2=$$ICDDX^ICDCODE(I,DGPTDAT) W !,"Cannot use ",$P($G(DGPTTMP),U,2),"  with ",$S(+DGPTTMP2>0:$P(DGPTTMP2,U,2),1:"") S DGER=1 Q
"RTN","DGPTFJC",54,0)
 Q:DGER  S DG1=1 F I=0:0 S I=$O(^ICD9(+Y,"R",I)) Q:I'>0  S DG1=0 I %[(U_I_U) S DG1=1 Q
"RTN","DGPTFJC",55,0)
 I 'DG1 W !,$S(+DGPTTMP>0:$P(DGPTTMP,U,2),1:"")," requires additional code."
"RTN","DGPTFM")
0^12^B23912817
"RTN","DGPTFM",1,0)
DGPTFM ;ALB/MTC/ADL - PTF OP-PRO-DIAG ; 12 MAR 91
"RTN","DGPTFM",2,0)
 ;;5.3;Registration;**510**;Aug 13, 1993
"RTN","DGPTFM",3,0)
 ;;ADL;;Update for CSV Project;;Mar 25, 2003
"RTN","DGPTFM",4,0)
 K M,S,M1,M2,M3,S1,S2
"RTN","DGPTFM",5,0)
GET S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"M",I)) Q:'I  S (M3(I1),M(I1))=^(I,0) I $D(^DGPT(PTF,"M",I,"P")) S $P(M(I1),U,20)=^("P")
"RTN","DGPTFM",6,0)
 K MT D ORDER^DGPTF K MT D GETVAR^DGPTFM6
"RTN","DGPTFM",7,0)
 S DGPC=I1-1 D WR K M1,M2,^UTILITY($J) S ST=1,M2=0
"RTN","DGPTFM",8,0)
DIAG K DGZSER,DGZPRO,DGZSUR S DGZDIAG=1 F J=ST:2:PM S NL=1,L5=0,L6=J D WD2 S L5=1,L6=J+1 D:$D(M(L6)) WD2 D WD G PRO1:$Y>17 D WD3^DGPTFM8 G PRO1:$Y>17 W !
"RTN","DGPTFM",9,0)
 S ST=1 G SER
"RTN","DGPTFM",10,0)
WD F J1=1:1:11 I J1'=6 S L=$P(M(J),U,J1+4),L1=0,L3=1 D:+L WD1 S L1=1,L=$S($D(M(J+1)):$P(M(J+1),U,J1+4),1:"") D:+L WD1
"RTN","DGPTFM",11,0)
 Q
"RTN","DGPTFM",12,0)
WD1 S DGPTTMP=$$ICDDX^ICDCODE(+L,$$GETDATE^ICDGTDRG(PTF)),L2=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:""),M2=M2+1,L4=$P(L2,"^",1),L4=L4_$E("   ",1,3-$L($P(L4,".",2))) D  Q
"RTN","DGPTFM",13,0)
 . W:L3 ! S:L3 L3=0 W ?L1*40,$J(M2,3)," ",$J(L4,7)," ",$E($P(L2,U,3),1,25) K ^UTILITY($J,"M2",M2) S ^UTILITY($J,"M2",M2)=+M(J+L1)_U_J1
"RTN","DGPTFM",14,0)
WD2 N Z3
"RTN","DGPTFM",15,0)
 X:NL "W ! S NL=0" W ?L5*40,"Move #",+L6 S Z=M(L6),Z3=M3(L6) W:+Z=1 " D/C" S Y=$P(Z,U,10)\1 D D^DGPTUTL W " ",Y," ",$S($D(^DIC(42.4,+$P(Z,U,2),0)):$E($P(^(0),U,1),1,10),1:"")
"RTN","DGPTFM",16,0)
 W " <",$S($P(Z3,U,18)=1:"",1:"N"),"SC"_$S($P(Z3,U,26)="Y":",AO",1:"")_$S($P(Z3,U,27)="Y":",IR",1:"")_$S($P(Z3,U,28)="Y":",EC",1:"")_">"
"RTN","DGPTFM",17,0)
 Q
"RTN","DGPTFM",18,0)
NDG D WR S I=0 K M,M1,M2 S M2=0 F I1=1:1 S I=$O(^DGPT(PTF,"M",I)) Q:I'>0  S M(I1)=^(I,0)
"RTN","DGPTFM",19,0)
 S PM=I1-1 D ORDER^DGPTF K MT G DIAG:$D(ST) G GET S ST=1
"RTN","DGPTFM",20,0)
SER K DGZDIAG,DGZPRO,DGZSUR S DGZSER=1 G PRO1:$Y>20 K S1,S2 S S2=0 G SERV:ST G PRO
"RTN","DGPTFM",21,0)
SERV F J=ST:2:SU S NL=1,L5=0,L6=J D SD2 S L5=1,L6=J+1 D:$D(S(L6)) SD2 D SD G PRO1:$Y>12 D SD3^DGPTFM8 G PRO1:$Y>12 W !
"RTN","DGPTFM",22,0)
 G PRC^DGPTFM0
"RTN","DGPTFM",23,0)
SD F J1=1:1:5 S L=$P(S(J),U,J1+7),L1=0,L3=1 D:+L SD1 S L1=1,L=$S($D(S(J+1)):$P(S(J+1),U,J1+7),1:"") D:+L SD1
"RTN","DGPTFM",24,0)
 Q
"RTN","DGPTFM",25,0)
SD1 S DGPTTMP=$$ICDOP^ICDCODE(+L,$$GETDATE^ICDGTDRG(PTF)),L2=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:""),S2=S2+1,L4=$P(L2,"^",1),L4=L4_$E("   ",1,3-$L($P(L4,".",2))) D  Q
"RTN","DGPTFM",26,0)
 . W:L3 ! S:L3 L3=0 W ?L1*40,$J(S2,3)," ",$J(L4,7)," ",$E($P(L2,U,4),1,25) K S2(S2) S S2(S2)=J+L1_U_J1
"RTN","DGPTFM",27,0)
SD2 S Y=+S(L6) D D^DGPTUTL W:NL ! S:NL NL=0 W ?L5*40,L6,"-Surgery date: ",Y
"RTN","DGPTFM",28,0)
 Q
"RTN","DGPTFM",29,0)
NSR K S,S1,S2 S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"S",I)) Q:I'>0  S S(I1)=^(I,0),S(I1,1)=I
"RTN","DGPTFM",30,0)
 S S2=0,SU=I1-1 D WR G SERV
"RTN","DGPTFM",31,0)
 ;
"RTN","DGPTFM",32,0)
WR W @IOF,HEAD,?70 S Z="<MAS>" D Z Q
"RTN","DGPTFM",33,0)
PRO K DGZSER,DGZDIAG,DGZSUR S DGZPRO=1 G PRO1:$Y>15 K P1,P2 S ST=1,P2=0 G NPR:'$D(PROC)
"RTN","DGPTFM",34,0)
PROC D:$Y>15 WR W:PROC]"" !!,"Procedures: ",!
"RTN","DGPTFM",35,0)
 F J1=1:1:5 S L=$P(PROC,"^",J1) I L'="" S P2=P2+1,DGPTTMP=$$ICDOP^ICDCODE(+L,$$GETDATE^ICDGTDRG(PTF)),L2=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:""),L4=$P(L2,U,1),L4=L4_$E("   ",1,3-$L($P(L4,".",2))) D
"RTN","DGPTFM",36,0)
 . W:$X>5 ?40 W $J(P2,3)," ",$J(L4,7)," ",$E($P(L2,"^",4),1,25) K P2(P2) S P2(P2)=J1 W:$X>45 !
"RTN","DGPTFM",37,0)
 K DGZSER,DGZPRO,DGZDIAG,DGZSUR G PRO1
"RTN","DGPTFM",38,0)
 ;
"RTN","DGPTFM",39,0)
NPR S ST=1,PROC=$S($D(^DGPT(PTF,"401P")):^("401P"),1:"") D WR G PRO
"RTN","DGPTFM",40,0)
 ;
"RTN","DGPTFM",41,0)
DONE G EN1^DGPTF4
"RTN","DGPTFM",42,0)
PRO1 S DGNUM=$S($D(DGZDIAG)!($D(DGZPRO))!($D(DGZSER))!($D(DGZSUR)):"MAS",1:"701") G MAS^DGPTFJC:DGST F X=$Y:1:(IOSL-8) W !
"RTN","DGPTFM",43,0)
 W !! S Z="Patient Movements:" W Z S Z=" "_$S(DGPTFE:"M=Add PM  X=Delete PM",1:"M=Edit Treat Spec/PM ")_"  A=Add Code  D=Delete Code  V=Edit Mov" W Z
"RTN","DGPTFM",44,0)
 W ! S Z="Surgical Episodes:" W Z S Z=" S=Add SE  Z=Delete SE  O=Add Code  C=Delete Code  J=Edit SE" W Z
"RTN","DGPTFM",45,0)
 W ! S Z="Procedure Records:" W Z S Z=" T=Add PR  R=Delete PR  P=Add Code  Q=Delete Code  E=Edit PR" W Z K Z
"RTN","DGPTFM",46,0)
 W !,"                   ^=Abort   <RET> to Continue:<",DGNUM,">// " R ANS:DTIME K DGNUM
"RTN","DGPTFM",47,0)
A S Z="^C Delete Code^A Add Code^O Add Code^P Add NOP^S Add SE^D Delete Code^M Add PM^X Delete PM^Z Delete SE^J Edit SE^Q Delete NOP^V Edit Move^T Add PR^R Delete PR^E Edit PR"
"RTN","DGPTFM",48,0)
 I 'DGPTFE S $P(Z,U,8,9)="M Edit treat Spec/PM"
"RTN","DGPTFM",49,0)
 S X=ANS G Q^DGPTF:ANS="^" G ^DGPTFJ:ANS?1"^".E S (A,X)=ANS,X=$E(X,1) D IN^DGHELP I ANS="" S (ST,ST1)=J+2 D:$D(DGZSUR) WR G @($S($D(DGZDIAG):"NDG",$D(DGZSER):"NSR",$D(DGZPRO):"NPR",$D(DGZSUR):"EN^DGPTFM0",1:"DONE"))
"RTN","DGPTFM",50,0)
 G HELP^DGPTFM1A:%=-1 S Z=$L(A)-1 G @(X_$S(X="X":"",1:"^DGPTFM1"))
"RTN","DGPTFM",51,0)
X ;
"RTN","DGPTFM",52,0)
 I 'Z S:PM=1 RC=1 G X1:PM=1 W !!,"Delete Patient move <1",$S(PM<3:"",1:"-"_(PM-1)),">: " R RC:DTIME G ^DGPTFM:RC["^"!(RC="")
"RTN","DGPTFM",53,0)
 E  S RC=$E(A,2,99) W !
"RTN","DGPTFM",54,0)
 I +RC'=RC!('$D(M(RC))) W !!,"Enter the record # to delete from the PTF file, 1",$S(PM<3:"",1:"-"_(PM-1)) S Z=0 G X
"RTN","DGPTFM",55,0)
X1 I +M(RC)=1 W !,*7,"Cannot delete discharge movement",! H 3 G ^DGPTFM
"RTN","DGPTFM",56,0)
 S DIE="^DGPT("_PTF_",""M"",",DP=45.02,DR=".01///@",DA(1)=PTF,DA=+M(RC) D ^DIE K DR W "  ",RC,"-DELETED***" H 2 G ^DGPTFM
"RTN","DGPTFM",57,0)
Z W @DGVI,Z,@DGVO Q
"RTN","DGPTFM0")
0^13^B11194520
"RTN","DGPTFM0",1,0)
DGPTFM0 ;ALB/MAC/ADL - ROUTINE TO DISPLAY PROCEDURE CODES ON THE MAS SCREEN IN PTF LOAD/EDIT ; AUG 1 1989@1200
"RTN","DGPTFM0",2,0)
 ;;5.3;Registration;**510**;Aug 13, 1993
"RTN","DGPTFM0",3,0)
 ;;ADL;;Update for CSV Project;;Mar 25, 2003
"RTN","DGPTFM0",4,0)
EN S I=0 K P F I1=1:1 S I=$O(^DGPT(PTF,"P",I)) Q:I'>0  S P(I1)=^(I,0),P(I1,1)=I
"RTN","DGPTFM0",5,0)
 S P2=0,(L6,P)=0 F J=ST:2:(I1-1) S NL=1,L5=0,L6=J D PD2 S L5=1,L6=J+1 D:$D(P(L6)) PD2 D PD G PRO1^DGPTFM:$Y>12 W !
"RTN","DGPTFM0",6,0)
 G PRO^DGPTFM
"RTN","DGPTFM0",7,0)
PD F J1=1:1:5 S L=$P(P(J),U,J1+4),L1=0,L3=1 D:+L PD1 S L1=1,L=$S($D(P(J+1)):$P(P(J+1),U,J1+4),1:"") D:+L PD1
"RTN","DGPTFM0",8,0)
 Q
"RTN","DGPTFM0",9,0)
PD1 S DGPTTMP=$$ICDOP^ICDCODE(+L,$$GETDATE^ICDGTDRG(PTF)),L2=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:""),P2=P2+1,L4=$P(L2,"^",1),L4=L4_$E("   ",1,3-$L($P(L4,".",2))) D  Q
"RTN","DGPTFM0",10,0)
 . W:L3 ! S:L3 L3=0 W ?L1*40,$J(P2,3)," ",$J(L4,7)," ",$E($P(L2,U,4),1,25) K P2(P2) S P2(P2)=J+L1_U_J1
"RTN","DGPTFM0",11,0)
PD2 S Y=+P(L6) D D^DGPTUTL W:NL ! S:NL NL=0 W ?L5*40,L6,"-Procedure date: ",Y
"RTN","DGPTFM0",12,0)
 Q
"RTN","DGPTFM0",13,0)
PRC K DGZSER,DGZDIAG,DGZPRO S DGZSUR=1 G PRO1^DGPTFM:$Y>15 K P1,P2 S ST=1,P2=0
"RTN","DGPTFM0",14,0)
 S ST=1 G EN
"RTN","DGPTFM0",15,0)
 ;
"RTN","DGPTFM0",16,0)
C ; -- help for surgery
"RTN","DGPTFM0",17,0)
 W !!,"Enter the item #'s of the operation codes, 1-",S2,", that you wish to delete:"
"RTN","DGPTFM0",18,0)
 F L=1:1:S2 Q:'$D(S2(L))  I $D(S(+S2(L),1)),$D(^DGPT(PTF,"S",+S(+S2(L),1),0)) S DGPTTMP=$$ICDOP^ICDCODE(+$P(^(0),"^",7+$P(S2(L),"^",2)),$$GETDATE^ICDGTDRG(PTF)) I +DGPTTMP>0 D
"RTN","DGPTFM0",19,0)
 . W !?5,$J(L,2),": ",$J($P(DGPTTMP,"^",2),7)," - ",$E($P(DGPTTMP,"^",5),1,40)
"RTN","DGPTFM0",20,0)
 Q
"RTN","DGPTFM0",21,0)
 ;
"RTN","DGPTFM0",22,0)
DX ; -- help for dx's
"RTN","DGPTFM0",23,0)
 W !!,"Enter the item #'s of the diagnoses, 1-",M2,", that you wish to delete:"
"RTN","DGPTFM0",24,0)
 S UTL="^UTILITY($J,""M2"")"
"RTN","DGPTFM0",25,0)
 F L=1:1:M2 Q:'$D(@UTL@(L))  I $D(^DGPT(PTF,"M",+@UTL@(L),0)) S DGPTTMP=$$ICDDX^ICDCODE(+$P(^(0),"^",4+$P(@UTL@(L),"^",2)),$$GETDATE^ICDGTDRG(PTF)) I +DGPTTMP>0 D
"RTN","DGPTFM0",26,0)
 . W !?5,$J(L,2),": ",$J($P(DGPTTMP,"^",2),7)," - ",$E($P(DGPTTMP,"^",4),1,40)
"RTN","DGPTFM0",27,0)
 K UTL,L Q
"RTN","DGPTFM0",28,0)
 ;
"RTN","DGPTFM0",29,0)
Q ; -- help for procedure
"RTN","DGPTFM0",30,0)
 W !!,"Type the number of the procedure - not the procedure code -"
"RTN","DGPTFM0",31,0)
 W !,"for the procedure you wish to delete.",!
"RTN","DGPTFM0",32,0)
 W !,"However, this deletion function is not applicable"
"RTN","DGPTFM0",33,0)
 W !,"for procedures listed under 'Procedure date:' dislpays."
"RTN","DGPTFM0",34,0)
 W !,"Delete these codes using the 601 screen functionality."
"RTN","DGPTFM0",35,0)
 Q
"RTN","DGPTFM0",36,0)
 ;
"RTN","DGPTFM0",37,0)
D G DEL:Z
"RTN","DGPTFM0",38,0)
 I $D(M2),'M2 W !,"No codes to delete",! H 2 G ^DGPTFM
"RTN","DGPTFM0",39,0)
D1 R !!,"Enter the item #'s of the ICD Diagnosis codes to delete: ",A1:DTIME
"RTN","DGPTFM0",40,0)
 I A1'?1N.NP G ^DGPTFM:"^"[A1 W:A1'["?" "  ???",*7 D DX G D1
"RTN","DGPTFM0",41,0)
 S A=A_A1
"RTN","DGPTFM0",42,0)
DEL D EXPL^DGPTUTL
"RTN","DGPTFM0",43,0)
 K X,A1 S DIE="^DGPT("_PTF_",""M"",",DA(1)=PTF W !!
"RTN","DGPTFM0",44,0)
 F J=1:1 S DP=45.02,L=+$P(DGA,",",J) Q:'L  S L1=$S($D(^UTILITY($J,"M2",L)):^(L),1:"Undefined, ") W:'L1 " ",L,"-",L1 I L1 S DA=+L1,DR=4+$P(L1,U,2)_"///@",DA(1)=PTF D ^DIE K DR W " ",L,"-Deleted, " W:$X>70 !
"RTN","DGPTFM0",45,0)
 S DGPTF=PTF,DGMOV=+L1 D CHK501^DGPTSCAN
"RTN","DGPTFM0",46,0)
 H 2 G ^DGPTFM
"RTN","DGPTFM0",47,0)
 ;
"RTN","DGPTFM4")
0^14^B25927219
"RTN","DGPTFM4",1,0)
DGPTFM4 ;ALB/MTC/ADL - PTF ENTRY/EDIT-2 ; 9/13/01 3:00pm
"RTN","DGPTFM4",2,0)
 ;;5.3;Registration;**114,195,397,510**;Aug 13, 1993
"RTN","DGPTFM4",3,0)
 ;;ADL;Update for CSV Project;;Mar 26, 2003
"RTN","DGPTFM4",4,0)
 ;
"RTN","DGPTFM4",5,0)
 S DGZM0=DGZM0+1
"RTN","DGPTFM4",6,0)
EN N M3 D MOB:'$D(M) S M(DGZM0)=$S($D(M(DGZM0)):M(DGZM0),1:"") G NEXM:M(DGZM0)="" S (M3,M(DGZM0),M1)=$S($D(^DGPT(PTF,"M",+M(DGZM0),0)):^DGPT(PTF,"M",+M(DGZM0),0),1:"")
"RTN","DGPTFM4",7,0)
 I $D(^DGPT(PTF,"M",+M(DGZM0),"P")) S $P(M(DGZM0),U,20)=^("P"),$P(M1,U,20)=^("P")
"RTN","DGPTFM4",8,0)
WR S DG300=$S($D(^DGPT(PTF,"M",+M(DGZM0),300)):^(300),1:"")
"RTN","DGPTFM4",9,0)
 W @IOF,HEAD,?70 S Z="<501-"_DGZM0_">" D Z^DGPTFM I +M(DGZM0)=1 W !,?62,"Discharge Movement"
"RTN","DGPTFM4",10,0)
M S L=+$P(M1,U,10),Y=L D D^DGPTUTL W !! S Z=1 D Z W "Date of Move: " S Z=Y,Z1=20 D Z1 W "Losing Specialty: ",$E($S($D(^DIC(42.4,+$P(M1,U,2),0)):$P(^(0),U,1),1:""),1,25)
"RTN","DGPTFM4",11,0)
 W !,"     Leave days: ",$P(M1,U,3),?44,"Pass days: ",$P(M1,U,4)
"RTN","DGPTFM4",12,0)
 W !,"Treated for SC Condition: ",$S($P(M3,U,18)=1:"Yes",1:"No")
"RTN","DGPTFM4",13,0)
 N NL S NL=0
"RTN","DGPTFM4",14,0)
 I $P(M3,U,26)'="" W ?37,"Treated for AO Condition: ",$S($P(M3,U,26)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",15,0)
 I $P(M3,U,27)'="" W @($S(NL#2:"!",1:"?37")),"Treated for IR Condition: ",$S($P(M3,U,27)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",16,0)
 I $P(M3,U,28)'="" W @($S(NL#2:"!",1:"?37")),"Treated for EC Condition: ",$S($P(M3,U,28)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",17,0)
 ; added 6/17/98 for MST enhancement
"RTN","DGPTFM4",18,0)
 I $P(M3,U,29)'="" W @($S(NL#2:"!",1:"?37")),"Treated for MST Condition: ",$S($P(M3,U,29)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",19,0)
 K DGNTARR
"RTN","DGPTFM4",20,0)
 S DGNTARR=$$GETCUR^DGNTAPI(DFN,"DGNTARR")
"RTN","DGPTFM4",21,0)
 I $P(M3,U,30)="",(",3,4,5,"[(","_$P($G(DGNTARR("STAT")),U)_",")) S $P(M3,U,30)="N"
"RTN","DGPTFM4",22,0)
 I $P(M3,U,30)'="" W @($S(NL#2:"!",1:"?37")),"Treated for HEAD/NECK CA Condition: ",$S($P(M3,U,30)="Y":"Yes",1:"No")
"RTN","DGPTFM4",23,0)
 K NL
"RTN","DGPTFM4",24,0)
 W !! S Z=2 D Z W "          DX: " F I=1:1:11 S L=$P(M1,U,I+4) I L'=""&(I'=6) S DGPTTMP=$$ICDDX^ICDCODE(+L,$$GETDATE^ICDGTDRG(PTF)) D 
"RTN","DGPTFM4",25,0)
 . W $S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,4)_" ("_$P(DGPTTMP,U,2)_")",1:"**********-"_L),!?17
"RTN","DGPTFM4",26,0)
 D PRN2^DGPTFM8:DG300]""
"RTN","DGPTFM4",27,0)
 I $P(M1,U,20) S DRG=$P(M1,U,20) W:DRG=468!(DRG=469)!(DRG=470) *7 W !!?14,"TRANSFER DRG: ",DRG F DGDRGNM=0:0 S DGDRGNM=$O(^ICD(DRG,1,DGDRGNM)) Q:'DGDRGNM  W !,$P(^(DGDRGNM,0),U,1)
"RTN","DGPTFM4",28,0)
JUMP K DG300 F I=$Y:1:21 W !
"RTN","DGPTFM4",29,0)
X S DGNUM=$S($D(M(DGZM0+1)):501_"-"_(DGZM0+1),1:"MAS") G 501^DGPTFJC:DGST
"RTN","DGPTFM4",30,0)
 W "Enter <RET> to continue, 1-2 to edit,",!,"'M' ",$S(DGPTFE:" to add a patient movement",1:"to edit Treat. Specialty"),", '^N' for screen N, or '^' to abort:<",DGNUM,">// " R X:DTIME
"RTN","DGPTFM4",31,0)
 K DGNUM G Q:X="^",NEXM:X="",^DGPTFJ:X?1"^".E,M^DGPTFM1:X="M"!(X="m")
"RTN","DGPTFM4",32,0)
X1 I X[1!(X[2) S DR="[DG501"_$E("F",DGPTFE) X:(+M(DGZM0)=1) "S J=^DGPT(PTF,""M"",1,0) F I=11:1:15 I $P(J,U,I) S DR=DR_1" S DR=DR_"]",DGJUMP=X,DIE="^DGPT(",(DA,DGPTF)=PTF,DGMOV=+M(DGZM0) D ^DIE K M,DR,DIE D CHK501^DGPTSCAN K DGPTF,DGMOV
"RTN","DGPTFM4",33,0)
 ; Determine if NTR HISTORY (#28.11) filer is called if question for
"RTN","DGPTFM4",34,0)
 ;  'Treated for Head/Neck CA Condition:' is answered YES.
"RTN","DGPTFM4",35,0)
 ; Only a NTR screening status of 3=PENDING DIAGNOSIS gets Filed.
"RTN","DGPTFM4",36,0)
 I $P($G(M3),U,30)="Y",$P($G(DGNTARR("STAT")),U)=3 D
"RTN","DGPTFM4",37,0)
 .S DGNTARR=$$FILEHNC^DGNTAPI1(DFN)
"RTN","DGPTFM4",38,0)
 K DGNTARR
"RTN","DGPTFM4",39,0)
 ;- update MT indicator after edit movement
"RTN","DGPTFM4",40,0)
 N DGPMCA,DGPMAN D PM^DGPTUTL
"RTN","DGPTFM4",41,0)
 I '$G(DGADM) S DGADM=+^DGPT(PTF,0)
"RTN","DGPTFM4",42,0)
 D MT^DGPTUTL
"RTN","DGPTFM4",43,0)
 G EN
"RTN","DGPTFM4",44,0)
PR W !,"Enter '^' to stop the display and edit of data",!,"'^N' to jump to screen #N (appears in upper right of screen '<N>'",!,"<RET> to continue on to the next screen or 1-2 to edit:"
"RTN","DGPTFM4",45,0)
 W !?10,"1-",$S(DGPTFE:"Date of movement, Losing Specialty, ",1:""),"Leave and Pass days",!?10,"2-ICD DIAGNOSIS CODES"
"RTN","DGPTFM4",46,0)
 W !,"You may also enter 1-2",!
"RTN","DGPTFM4",47,0)
 R !!,"Enter <RET>: ",X:DTIME G WR
"RTN","DGPTFM4",48,0)
 Q
"RTN","DGPTFM4",49,0)
NEXM S DGZM0=DGZM0+1 G ^DGPTFM:'$D(M(DGZM0)),EN
"RTN","DGPTFM4",50,0)
ADD S DGZM0=$S($D(DGZM0):DGZM0+1,1:0) S L=$S($D(^DGPT(PTF,"M",0)):^(0),1:"^45.02DA^^"),L1=$P(L,U,3) F I=1:1 Q:'$D(^DGPT(PTF,"M",L1+I))
"RTN","DGPTFM4",51,0)
 S DA(1)=PTF,DIC="^DGPT("_DA(1)_",""M"",",X=L1+I,DIC(0)="LMZQE" D ^DIC K DIC,DIE G ^DGPTFM:Y'>0
"RTN","DGPTFM4",52,0)
 S M(DGZM0)=L1+I S X="1-2" G X1
"RTN","DGPTFM4",53,0)
 Q
"RTN","DGPTFM4",54,0)
MOB S I=0 K M,M1,M2 S M2=0 F I1=1:1 S I=$O(^DGPT(PTF,"M",I)) Q:'I  S M(I1)=^(I,0)
"RTN","DGPTFM4",55,0)
 S PM=I1-1 D ORDER^DGPTF Q
"RTN","DGPTFM4",56,0)
Q G Q^DGPTF
"RTN","DGPTFM4",57,0)
Z I 'DGN S Z=$S(IOST="C-QUME"&($L(DGVI)'=2):Z,1:"["_Z_"]") W @DGVI,Z,@DGVO
"RTN","DGPTFM4",58,0)
 E  W "   "
"RTN","DGPTFM4",59,0)
 Q
"RTN","DGPTFM4",60,0)
Z1 F I=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGPTFM4",61,0)
 W Z
"RTN","DGPTFM4",62,0)
 Q
"RTN","DGPTFM4",63,0)
R ;DELETE PROCEDURE RECORD
"RTN","DGPTFM4",64,0)
 I '$D(^DGPT(PTF,"P")) G NOPROC
"RTN","DGPTFM4",65,0)
 I $O(^DGPT(PTF,"P",0))']"" G NOPROC
"RTN","DGPTFM4",66,0)
 S DGPNUM="" F DGPROC=0:0 S DGPROC=$O(P(DGPROC)) Q:'DGPROC  S:$D(P(DGPROC,1)) DGPNUM=DGPNUM_","_DGPROC
"RTN","DGPTFM4",67,0)
 S DGPNUM=DGPNUM_","
"RTN","DGPTFM4",68,0)
ASKPRO W !!,"Delete procedure record <",$P(DGPNUM,",",2,99),"> : " R DGPROC:DTIME I DGPROC[U!(DGPROC="") K DGPNUM,DGPROC G ^DGPTFM
"RTN","DGPTFM4",69,0)
 I DGPNUM'[(","_DGPROC_",") W !!,"Enter the record # to delete from the PTF file <",$P(DGPNUM,",",2,99),">",! G ASKPRO
"RTN","DGPTFM4",70,0)
 K DA N DGJ
"RTN","DGPTFM4",71,0)
 F DGJ=1:1 S DA=+$P(DGPROC,",",DGJ) Q:'DA  S DA=$S($D(P(DA,1)):+P(DA,1),1:0) I DA S DA(1)=PTF,DIK="^DGPT("_PTF_",""P""," D ^DIK K DA W "   ",$P(DGPROC,",",DGJ),"-DELETED***" H:'$P(DGPROC,",",DGJ+1) 2
"RTN","DGPTFM4",72,0)
 K DIK,DA,DGPROC,DGPNUM G ^DGPTFM
"RTN","DGPTFM4",73,0)
NOPROC W !!,*7,"No procedures to delete",! H 3 G ^DGPTFM
"RTN","DGPTFM5")
0^15^B12506370
"RTN","DGPTFM5",1,0)
DGPTFM5 ;ALB/MTK/ADL - PTF ENTRY/EDIT-3 ; 11 MAR 91  15:15
"RTN","DGPTFM5",2,0)
 ;;5.3;Registration;**510**;Aug 13, 1993
"RTN","DGPTFM5",3,0)
 ;;ADL;Update for CSV Project;;Mar 26, 2003
"RTN","DGPTFM5",4,0)
 ;
"RTN","DGPTFM5",5,0)
 S DGZS0=DGZS0+1
"RTN","DGPTFM5",6,0)
EN D MOB:'$D(S) S S(DGZS0,1)=$S($D(S(DGZS0,1)):S(DGZS0,1),1:"") G NEXM:S(DGZS0,1)="" S (S1,S(DGZS0))=$S($D(^DGPT(PTF,"S",S(DGZS0,1),0)):^DGPT(PTF,"S",S(DGZS0,1),0),1:"")
"RTN","DGPTFM5",7,0)
WR W @IOF,HEAD,?72 S Z="<401-"_DGZS0_">" D Z^DGPTFM
"RTN","DGPTFM5",8,0)
 S L=+S(DGZS0),Y=L D D^DGPTUTL W !! S Z=1 D Z W "Date of Surg: " S Z=Y,Z1=28 D Z1 W "Chief Surg: " S L=";"_$P(^DD(45.01,4,0),U,3),L1=";"_$P(S1,U,4)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFM5",9,0)
 W !,"    Anesth Tech: " S L=";"_$P(^DD(45.01,6,0),U,3),L1=";"_$P(S1,U,6)_":" W $P($P(L,L1,2),";",1),?45,"First Asst: " S L=";"_$P(^DD(45.01,5,0),U,3),L1=";"_$P(S1,U,5)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFM5",10,0)
 W !,"  Source of pay: " S L=";"_$P(^DD(45.01,7,0),U,3),L1=";"_$P(S1,U,7)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFM5",11,0)
 W ?46,"Surg spec: ",$E($S($D(^DIC(45.3,+$P(S1,U,3),0)):$P(^(0),U,2),1:""),1,23)
"RTN","DGPTFM5",12,0)
 W !! S Z=2 D Z W "    Surg/pro: " F I=1:1:5 S L=$P(S1,U,I+7) I L'="" S DGPTTMP=$$ICDOP^ICDCODE(+L,$$GETDATE^ICDGTDRG(PTF)) D
"RTN","DGPTFM5",13,0)
 . W $S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,5)_" ("_$P(DGPTTMP,U,2)_")",1:"**********-"_L),!?17
"RTN","DGPTFM5",14,0)
 ;-- kidney transplant source
"RTN","DGPTFM5",15,0)
 S DG300=$S($D(^DGPT(PTF,"S",S(DGZS0,1),300)):^(300),1:"") D:DG300]"" PRN3^DGPTFM8 K DG300
"RTN","DGPTFM5",16,0)
 W !!
"RTN","DGPTFM5",17,0)
JUMP F I=$Y:1:19 W !
"RTN","DGPTFM5",18,0)
X S DGNUM=$S($D(S(DGZS0+1)):401_"-"_(DGZS0+1),1:"MAS") G 401^DGPTFJC:DGST
"RTN","DGPTFM5",19,0)
 W "Enter <RET> to continue, 1-2 to edit,",!,"'S' to add a Surgical segment, '^N' for screen N, or '^' to abort:<",DGNUM,">// " R X:DTIME K DGNUM G Q:X="^",NEXM:X="",^DGPTFJ:X?1"^".E,ADD:X="S"!(X="s")
"RTN","DGPTFM5",20,0)
X1 G PR:X<1!(X>2) S DR="[DG401]",DGJUMP=X,DGSUR=+S(DGZS0,1)
"RTN","DGPTFM5",21,0)
 K DA S DIE="^DGPT(",(DGPTF,DA)=PTF D ^DIE K DA,DR,DA
"RTN","DGPTFM5",22,0)
 D CHK401^DGPTSCAN K DGPTF,DGSUR D MOB G EN
"RTN","DGPTFM5",23,0)
PR W !,"Enter '^' to stop the display and edit of data",!,"'^N' to jump to screen #N (appears in upper right of screen '<N>'",!,"<RET> to continue on to the next screen or 1-2 to edit:"
"RTN","DGPTFM5",24,0)
 W !?10,"1-Surgical information",!?10,"2-Surgical/Procedure Codes"
"RTN","DGPTFM5",25,0)
 W !,"You may also enter any combination of the above, separated by commas(ex:1,3,5)",!
"RTN","DGPTFM5",26,0)
 R !!,"Enter <RET>: ",X:DTIME G WR
"RTN","DGPTFM5",27,0)
 Q
"RTN","DGPTFM5",28,0)
NEXM S DGZS0=DGZS0+1 G ^DGPTFM:'$D(S(DGZS0)) G EN
"RTN","DGPTFM5",29,0)
ADD K SUR S DGZS0=0 S:'$D(^DGPT(PTF,"S",0)) ^(0)="^45.01DA^^"
"RTN","DGPTFM5",30,0)
 S DIC="^DGPT("_PTF_",""S"",",DIC(0)="QEALM",DA(1)=PTF D ^DIC G ^DGPTFM:+Y'>0!('$D(^DGPT(PTF,"S",+Y)))
"RTN","DGPTFM5",31,0)
 D MOB I SU F I=1:1:SU S:S(I,1)=+Y DGZS0=I
"RTN","DGPTFM5",32,0)
 G ^DGPTFM:'DGZS0 S SUR(DGZS0)=+Y,X="1,2" G X1
"RTN","DGPTFM5",33,0)
MOB K S,S1,S2 S I=0,S2=0 F I1=1:1 S I=$O(^DGPT(PTF,"S",I)) Q:'I  S S(I1)=^(I,0),S(I1,1)=I I S(I1)']"" K S(I1) S I1=I1-1
"RTN","DGPTFM5",34,0)
 S SU=I1-1 Q
"RTN","DGPTFM5",35,0)
Q G Q^DGPTF
"RTN","DGPTFM5",36,0)
 Q
"RTN","DGPTFM5",37,0)
1 ;;.01;2;3;4;5;6;7
"RTN","DGPTFM5",38,0)
2 ;;8;9;10;11;12
"RTN","DGPTFM5",39,0)
 Q
"RTN","DGPTFM5",40,0)
Z I 'DGN S Z=$S(IOST="C-QUME"&($L(DGVI)'=2):Z,1:"["_Z_"]") W @DGVI,Z,@DGVO
"RTN","DGPTFM5",41,0)
 E  W "   "
"RTN","DGPTFM5",42,0)
 Q
"RTN","DGPTFM5",43,0)
Z1 F I=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGPTFM5",44,0)
 W Z
"RTN","DGPTFM6")
0^16^B20936331
"RTN","DGPTFM6",1,0)
DGPTFM6 ;ALB/BOK/ADL - 601 SCREEN: PROCEDURE ENTER/EDIT ; 21 JUL 88 @ 0900
"RTN","DGPTFM6",2,0)
 ;;5.3;Registration;**164,510**;Aug 13, 1993
"RTN","DGPTFM6",3,0)
 ;;ADL;Update for CSV Project;;Mar 26, 2003
"RTN","DGPTFM6",4,0)
EN I $D(^DGPTF(PTF,70)),+^(70)<2871000 W !!,"Data cannot be entered into these fields until after 10/1/1987" H 5 G ^DGPTFM
"RTN","DGPTFM6",5,0)
 I DT<2871000 W !!,"Data can not be entered into these fields until after 10/1/1987" H 5 G ^DGPTFM
"RTN","DGPTFM6",6,0)
 G @($S(X=6:"E",1:X))
"RTN","DGPTFM6",7,0)
T ;ADD PROCEDURE RECORD
"RTN","DGPTFM6",8,0)
 S DGZP=0 S:'$D(^DGPT(PTF,"P",0)) ^(0)="^45.05DA^^"
"RTN","DGPTFM6",9,0)
 S DIC="^DGPT("_PTF_",""P"",",DIC(0)="AEQLMZ",DA(1)=PTF D ^DIC G ^DGPTFM:Y'>0!('$D(^DGPT(PTF,"P",+Y))) S DGPROCM=+Y,DGPROCD=$P(Y,U,2) D MOB I DGPC F I=1:1:DGPC S:P(I,1)=DGPROCM DGZP=I
"RTN","DGPTFM6",10,0)
 G:'DGZP ^DGPTFM S DGPROC(DGZP)=DGPROCM,X="1,2"
"RTN","DGPTFM6",11,0)
EDIT G HELP:X<1!(X>2) K DA S DA=PTF,DR="[DG601]",DIE="^DGPT(",DGJUMP=X D ^DIE K DR,DIE,DIC,DA D MOB
"RTN","DGPTFM6",12,0)
SET D MOB:'$D(P) S:'$D(DGZP) DGZP=1 S P(DGZP,1)=$S($D(P(DGZP,1)):P(DGZP,1),1:"") I P(DGZP,1)="" K P(DGZP) G NEXP
"RTN","DGPTFM6",13,0)
 S (P1,P(DGZP))=$S($D(^DGPT(PTF,"P",P(DGZP,1),0)):^(0),1:"")
"RTN","DGPTFM6",14,0)
WRT G:'$D(^DGPT(PTF,"P",P(DGZP,1),0)) ^DGPTFM S DGPROCI=^(0) W @IOF,HEAD,?68 S Z="<601-"_DGZP_">" W @DGVI,Z,@DGVO,!! S (Y,L)=+P(DGZP),Z=1 D D^DGPTUTL,Z^DGPTFM5 W $J("Date of Proc:  ",32),Y,!,$J("Specialty:  ",35)
"RTN","DGPTFM6",15,0)
 W $S($D(^DIC(42.4,+$P(P(DGZP),U,2),0)):$P(^(0),U),1:""),! I $P(P(DGZP),U,3) W $J("Dialysis Type:  ",35),$S($D(^DG(45.4,+$P(P(DGZP),U,3),0)):$P(^(0),U),1:""),!,"   Number of Dialysis Treatments:  ",$P(P(DGZP),U,4),!
"RTN","DGPTFM6",16,0)
 W !! S Z=2 D Z^DGPTFM5 W "  Procedures:   " F I=1:1:5 S L=$P(P(DGZP),U,4+I) I L S DGPTTMP=$$ICDOP^ICDCODE(+L,$$GETDATE^ICDGTDRG(PTF)) D
"RTN","DGPTFM6",17,0)
 . W $S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,5)_" ("_$P(DGPTTMP,U,2)_")",1:"**************"_L),!?19
"RTN","DGPTFM6",18,0)
 F I=1:1:(IOSL-$Y-5) W !
"RTN","DGPTFM6",19,0)
 S DGNUM=$S($D(P(DGZP+1)):601_"-"_(DGZP+1),1:"MAS") G 601^DGPTFJC:DGST
"RTN","DGPTFM6",20,0)
 W "Enter <RET> to continue, 1-2 to edit,",!,"'T' to add a Procedure Segment, '^N' for screen N, or '^' to abort: <",DGNUM,">//"
"RTN","DGPTFM6",21,0)
 R X:DTIME S:'$T X="^",DGPTOUT=""
"RTN","DGPTFM6",22,0)
 K DGNUM G Q^DGPTF:X="^"
"RTN","DGPTFM6",23,0)
 I X?1"^".E S DGPTSCRN=601 G ^DGPTFJ
"RTN","DGPTFM6",24,0)
 G T:X="T"!(X="t"),HELP:X["?"
"RTN","DGPTFM6",25,0)
 I X[1!(X[2) S DA=+P(DGZP) G EDIT
"RTN","DGPTFM6",26,0)
 I X'="" G HELP
"RTN","DGPTFM6",27,0)
NEXP ;S DGZP=DGZP+1 G ^DGPTFM:'$D(P(DGZP)),SET
"RTN","DGPTFM6",28,0)
 S DGZP=DGZP+1 I '$D(P(DGZP)) S DGZP=1 G ^DGPTFM
"RTN","DGPTFM6",29,0)
 G SET
"RTN","DGPTFM6",30,0)
HELP W !,"Enter '^' to stop display and edit of data",!,"'^N' to jump to screen #N (appears in upper right of screen as <N>)",!,"<RET> to continue on to next screen or 1-2 to edit:"
"RTN","DGPTFM6",31,0)
 W !?10,"1-Procedure information",!,?10,"2-Procedure codes",!,"You may also enter any combination of the above, separated by commas (ex:1,2)",!
"RTN","DGPTFM6",32,0)
 R !!,"Enter <RET>: ",X:DTIME G WRT
"RTN","DGPTFM6",33,0)
MOB K P,P1,P2 S (I,P2)=0 F I1=1:1 S I=$O(^DGPT(PTF,"P",I)) Q:I'>0  S P(I1)=^(I,0),P(I1,1)=I I P(I1)']"" K P(I1) S I1=I1-1
"RTN","DGPTFM6",34,0)
 S DGPC=I1-1 Q
"RTN","DGPTFM6",35,0)
BS ;CALLED FROM [DG601]
"RTN","DGPTFM6",36,0)
 S I=$O(^DGPT(PTF,"M","AM",^DGPT(PTF,"P",DA,0)-.0000001)),I=$O(^(+I,0))
"RTN","DGPTFM6",37,0)
 S DGMOVM=$S($D(^DGPT(PTF,"M",$S(I:I,1:1),0)):$P(^(0),U,2),1:"")
"RTN","DGPTFM6",38,0)
 Q
"RTN","DGPTFM6",39,0)
R ;DELETE PROCEDURE RECORD
"RTN","DGPTFM6",40,0)
 G R^DGPTFM4
"RTN","DGPTFM6",41,0)
E ;EDIT PROCEDURE RECORD
"RTN","DGPTFM6",42,0)
 G E^DGPTFM1
"RTN","DGPTFM6",43,0)
P I $D(^DGPT(PTF,70)),+^(70)<2871000 G FY86
"RTN","DGPTFM6",44,0)
 I DT<2871000 G FY86
"RTN","DGPTFM6",45,0)
 S L="" F I=1:1:DGPC S L2=1 F J=5:1:9 I L2,$P(P(I),U,J)="" S L=L_I_",",L2=0
"RTN","DGPTFM6",46,0)
 I L="" W !!,"There are no procedure records that can be added to.",*7 H 2 G ^DGPTFM
"RTN","DGPTFM6",47,0)
 S L=$E(L,1,$L(L)-1) I L=+L S DGRC=+L G P2
"RTN","DGPTFM6",48,0)
P1 I 'Z W !!,"Add to procedure record <",L,"> : " R DGRC:DTIME G ^DGPTFM:DGRC[U!(DGRC="")
"RTN","DGPTFM6",49,0)
 E  S DGRC=+$E(A,2,99)
"RTN","DGPTFM6",50,0)
P2 I +DGRC'=DGRC!(","_L_","'[(","_DGRC_",")) W !!,"Enter the procedure record number to add ICD operation codes to: ",L G P1:'Z S Z="" G P1
"RTN","DGPTFM6",51,0)
 S DP=45.05,DIE="^DGPT("_PTF_",""P"",",DA(1)=PTF,DR="" F I=5:1:9 I $P(P(DGRC),U,I)="" S DR=DR_(I-1)_";"
"RTN","DGPTFM6",52,0)
 S DR=$E(DR,1,$L(DR)-1),DA=+P(DGRC,1),DA(1)=PTF D ^DIE K DR,DIE G ^DGPTFM
"RTN","DGPTFM6",53,0)
FY86 S DR="" F J=1:1:5 I $P(PROC,U,J)="" S DR=DR_(J/100+45)_";"
"RTN","DGPTFM6",54,0)
 I DR="" W !!,"No more procedures can be added.",*7 H 2 G ^DGPTFM
"RTN","DGPTFM6",55,0)
 S DR=$E(DR,1,$L(DR)-1),DP=45,DIE="^DGPT(",DA=PTF D ^DIE K DR,DIE G ^DGPTFM
"RTN","DGPTFM6",56,0)
GETVAR ;CALLED FROM GET+1^DGPTFM
"RTN","DGPTFM6",57,0)
 S PM=I1-1,I=0 F I1=1:1 S I=$O(^DGPT(PTF,"S",I)) Q:I'>0  S S(I1)=^(I,0),S(I1,1)=I
"RTN","DGPTFM6",58,0)
 K P2 S SU=I1-1 S PROC=$S($D(^DGPT(PTF,"401P")):^("401P"),1:""),P2=0 F J1=1:1:5 S:$P(PROC,U,J1) P2=P2+1,P2(P2)=J1
"RTN","DGPTFM6",59,0)
 K P S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"P",I)) Q:I'>0  S P(I1)=^(I,0),P(I1,1)=I
"RTN","DGPTFM6",60,0)
 Q
"RTN","DGPTFMO")
0^17^B25475136
"RTN","DGPTFMO",1,0)
DGPTFMO ;ALB/JDS/ADL - DGPTF PRINT TEMPLATE ; 8/23/01 3:51pm
"RTN","DGPTFMO",2,0)
 ;;5.3;Registration;**195,397,510**;Aug 13, 1993
"RTN","DGPTFMO",3,0)
 ;;ADL;Updated for CSV Project;;Mar 4, 2003
"RTN","DGPTFMO",4,0)
 ;FOR PTF REPORT CALLED FROM TEMPLATE DGPTF
"RTN","DGPTFMO",5,0)
EN K A,B,AD,ADA,DGDD,DGFC,HEAD,DGPTFE,DGST,DGN,T
"RTN","DGPTFMO",6,0)
 F I=0:0 S I=$O(^DGPT(D0,"M",I)) Q:I'>0  I $D(^(I,0)) S J=+$P(^(0),U,10) S:'J J=999999999 S:$D(T(J)) J=J+.01*I S T(J)=I
"RTN","DGPTFMO",7,0)
 F I=0:0 S I=$O(T(I)) Q:I'>0  S DGM=$S($D(^DGPT(D0,"M",T(I),0)):^(0),1:"") I DGM]"" D WRITE
"RTN","DGPTFMO",8,0)
 K T F I=0:0 S I=$O(^DGPT(D0,"S",I)) Q:I'>0  D SUR
"RTN","DGPTFMO",9,0)
 S DGOP1=$S($D(^DGPT(D0,"401P")):^("401P"),1:"") I DGOP1]"" D HEAD:$Y>(IOSL-10) G Q:'DN D PROC
"RTN","DGPTFMO",10,0)
 I $D(^DGPT(D0,"P")) D HEAD:$Y>(IOSL-10) G Q:'DN F I=0:0 S I=$O(^DGPT(D0,"P",I)) Q:I'>0  S DG601=^DGPT(D0,"P",I,0),Y=+DG601 D D^DGPTUTL W !!," Procedure Date: ",Y D 601
"RTN","DGPTFMO",11,0)
 S DGPT=$S($D(^DGPT(D0,70)):^(70),1:"") I DGPT]"" D HEAD:$Y>(IOSL-10) G Q:'DN D DXLS
"RTN","DGPTFMO",12,0)
 K %,DGL,DGM,DGPT,DGOP,DGOP1,DGF,DGP,DXLS,DGICD,L1,S1,T,J,K,DGPR,DGN,AGE,B,DA,DAM,DFN,DGST,DOB,DP,DRG,EXP,NO,P,PTF,DGPTFE,SD1,SEX,TAC,TRS,DGDS,DGTD,DGPROC,DG601
"RTN","DGPTFMO",13,0)
 W ! ;F I=$Y:1:IOSL-1 W !
"RTN","DGPTFMO",14,0)
 Q
"RTN","DGPTFMO",15,0)
WRITE D HEAD:$Y>(IOSL-12) G Q:'DN S Y=$P(DGM,U,10),DGL=+$P(DGM,U,2),DGL=$S($D(^DIC(42.4,DGL,0)):^(0),1:""),DGL=$P(DGL,U,1) D D^DGPTUTL
"RTN","DGPTFMO",16,0)
 W !!,"Movement Date: ",Y,?40,"Losing Specialty: ",DGL,!,"Leave Days: ",$P(DGM,U,3),?40,"Pass Days: ",$P(DGM,U,4),!,"Treated for SC condition: ",$S($P(DGM,U,18)=1:"Yes",1:"No")
"RTN","DGPTFMO",17,0)
 W:$P(DGM,U,26)'="" !,"Treated for AO condition: ",$S($P(DGM,U,26)="Y":"Yes",1:"No")
"RTN","DGPTFMO",18,0)
 W:$P(DGM,U,27)'="" !,"Treated for IR condition: ",$S($P(DGM,U,27)="Y":"Yes",1:"No")
"RTN","DGPTFMO",19,0)
 W:$P(DGM,U,28)'="" !,"Treated for EC condition: ",$S($P(DGM,U,28)="Y":"Yes",1:"No")
"RTN","DGPTFMO",20,0)
 W:$P(DGM,U,29)'="" !,"Treated for MST condition: ",$S($P(DGM,U,29)="Y":"Yes",$P(DGM,U,29)="N":"No",1:"Declined to answer") ; added 6/17/98 for MST enhancement
"RTN","DGPTFMO",21,0)
 W:$P(DGM,U,30)'="" !,"Treated for HEAD/NECK CA condition: ",$S($P(DGM,U,30)="Y":"Yes",1:"No")
"RTN","DGPTFMO",22,0)
 W:T(I)=1 !,"Discharge "
"RTN","DGPTFMO",23,0)
 S DGF="" F J=5:1:15 I J#10 S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGM,U,J),$$GETDATE^ICDGTDRG(D0)),DGICD=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") I DGICD]"" D 
"RTN","DGPTFMO",24,0)
 . W:DGF="" !!?13,"DX: " W $P(DGICD,U,3)_" ("_$P(DGICD,U)_")",!?17 S DGF=1
"RTN","DGPTFMO",25,0)
 ;-- display expanded codes 
"RTN","DGPTFMO",26,0)
 S DG300=$S($D(^DGPT(D0,"M",T(I),300)):^(300),1:"") I DG300]"" D HEAD:$Y>(IOSL-6) D PRN2^DGPTFM8 W !
"RTN","DGPTFMO",27,0)
 K DG300
"RTN","DGPTFMO",28,0)
 ;Display TRANSFER DRG with description
"RTN","DGPTFMO",29,0)
 Q:'$D(^DGPT(D0,"M",T(I),"P"))  S DGTD=+^("P") Q:'$D(^ICD(DGTD,0))  W !?3,"TRANSFER DRG: ",DGTD," - "
"RTN","DGPTFMO",30,0)
 F DGDS=0:0 S DGDS=$O(^ICD(DGTD,1,DGDS)) Q:DGDS'>0  W !,^ICD(DGTD,1,DGDS,0)
"RTN","DGPTFMO",31,0)
 Q
"RTN","DGPTFMO",32,0)
HEAD I $E(IOST,1)="C" W *7 R X:DTIME I X=U S DN=0 Q
"RTN","DGPTFMO",33,0)
 S DC=DC+1 W @IOF,! X:$D(^UTILITY($J,2)) ^(2) W ! F K=1:1:IOM W "_"
"RTN","DGPTFMO",34,0)
 W !,"("_$P(^DPT(+^DGPT(D0,0),0),U,1)_")",!
"RTN","DGPTFMO",35,0)
 Q
"RTN","DGPTFMO",36,0)
SUR D HEAD:$Y>(IOSL-7) G Q:'DN S S1=^DGPT(D0,"S",I,0),Y=+S1 D D^DGPTUTL W !!,"   Date of Surg: ",Y,?45,"Chief Surg: " S L=";"_$P(^DD(45.01,4,0),U,3),L1=";"_$P(S1,U,4)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFMO",37,0)
 W !,"    Anesth Tech: " S L=";"_$P(^DD(45.01,6,0),U,3),L1=";"_$P(S1,U,6)_":" W $P($P(L,L1,2),";",1),?45,"First Asst: " S L=";"_$P(^DD(45.01,5,0),U,3),L1=";"_$P(S1,U,5)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFMO",38,0)
 W !,"  Source of pay: " S L=";"_$P(^DD(45.01,7,0),U,3),L1=";"_$P(S1,U,7)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFMO",39,0)
 W ?46,"Surg spec: ",$S($D(^DIC(45.3,+$P(S1,U,3),0)):$P(^(0),U,2),1:"")
"RTN","DGPTFMO",40,0)
 W !!,?7,"Surg/pro: " F K=1:1:5 S L=$P(S1,U,K+7) I L'="" S DGPTTMP=$$ICDOP^ICDCODE(+L,$$GETDATE^ICDGTDRG(D0)) W $S(+DGPTTMP>0:$P(DGPTTMP,U,5)_" ("_$P(DGPTTMP,U,2)_")",1:"**********-"_L),!?17
"RTN","DGPTFMO",41,0)
 ;-- display expanded codes
"RTN","DGPTFMO",42,0)
 S DG300=$S($D(^DGPT(D0,"S",I,300)):^(300),1:"") I DG300]"" D PRN3^DGPTFM8
"RTN","DGPTFMO",43,0)
 K DG300
"RTN","DGPTFMO",44,0)
 Q
"RTN","DGPTFMO",45,0)
PROC S DGF="" F I=1:1:5 S DGPTTMP=$$ICDOP^ICDCODE(+$P(DGOP1,U,I),$$GETDATE^ICDGTDRG(D0)),DGOP=$S(DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") I DGOP D 
"RTN","DGPTFMO",46,0)
 . W:'DGF !!?6,"Procedure: " W $P(DGOP,U,4)_" ("_$P(DGOP,U)_")",!?17 S DGF=1
"RTN","DGPTFMO",47,0)
 Q
"RTN","DGPTFMO",48,0)
601 ;print the procedures/dates from the 601 procedure multiple (eff. 10/1/87)
"RTN","DGPTFMO",49,0)
 F J=5:1:9 S DGPTTMP=$$ICDOP^ICDCODE(+$P(DG601,U,J),$$GETDATE^ICDGTDRG(D0)),DGPROC=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") I DGPROC W !?17,$P(DGPROC,U,4)_" ("_$P(DGPROC,U)_")"
"RTN","DGPTFMO",50,0)
 Q
"RTN","DGPTFMO",51,0)
DXLS S DGPTDAT=$$GETDATE^ICDGTDRG(D0)
"RTN","DGPTFMO",52,0)
 S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGPT,U,10),DGPTDAT),DXLS=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") I DXLS]"" W !!?11,"DXLS: ",$P(DXLS,U,3)_" ("_$P(DXLS,U)_")"
"RTN","DGPTFMO",53,0)
 I 'DXLS S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGPT,U,11),DGPTDAT),DGP=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") I DGP]"" W !!," Principal Diag: ",$P(DGP,U,3)_" ("_$P(DGP,U)_")"
"RTN","DGPTFMO",54,0)
 F %=16:1:24 S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGPT,U,%),DGPTDAT),DGICD=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") I DGICD]"" W !?17,$P(DGICD,U,3)_" ("_$P(DGICD,U)_")"
"RTN","DGPTFMO",55,0)
 ;-- display expanded code information
"RTN","DGPTFMO",56,0)
 S DG300=$S($D(^DGPT(D0,300)):^(300),1:"") D:DG300]"" PRN2^DGPTFM8 K DG300
"RTN","DGPTFMO",57,0)
 D EN2^DGPTF4 Q
"RTN","DGPTFMO",58,0)
Q Q
"RTN","DGPTFMO",59,0)
Q1 K ^UTILITY(U,$J),DG1 Q
"RTN","DGPTFMO",60,0)
DT I Y W $P("JAN^FEB^MAR^APR^MAY^JUN^JUL^AUG^SEP^OCT^NOV^DEC",U,$E(Y,4,5))," " W:Y#100 $J(Y#100\1,2),"," W Y\10000+1700 W:Y#1 "  ",$E(Y_0,9,10),":",$E(Y_"000",11,12)
"RTN","DGPTFMO",61,0)
 Q
"RTN","DGPTFTR0")
0^18^B14899215
"RTN","DGPTFTR0",1,0)
DGPTFTR0 ;ALB/JDS/ADL - PTF TRANSMISSION ; 01 DEC 87 @0800
"RTN","DGPTFTR0",2,0)
 ;;5.3;Registration;**247,510**;Aug 13, 1993
"RTN","DGPTFTR0",3,0)
 ;;ADL;Update for CSV Project;;Mar 26, 2003
"RTN","DGPTFTR0",4,0)
 S DGSSN=$P(DG10,U,9),DGHEAD=$S($E(DGSSN,10)="P":"P",1:" ")_$E(DGSSN,1,9)_" ",DGADM=$P(DG0,U,2)\1,DGHEAD=DGHEAD_$E(DGADM,4,5)_$E(DGADM,6,7)_$E(DGADM,2,3)
"RTN","DGPTFTR0",5,0)
 S Y=DGHEAD,L=3,X=DG0,Z=3 D ENTER S Y=Y_$E($P(X,U,5)_"   ",1,3)
"RTN","DGPTFTR0",6,0)
 S DGHEAD=Y,Y="    "_Y D HEAD^DGPTFTR1
"RTN","DGPTFTR0",7,0)
101 S Y=$S(T1:"C",1:"N")_"101"_DGHEAD,DGNAM=$P(DG10,U,1) D DGNAM S Y=Y_$E($P(DGNAM,",",1)_"           ",1,12)_$J($E($P(DGNAM,",",2),1),1)_$J($E($P($P(DGNAM,",",2)," ",2),1),1)
"RTN","DGPTFTR0",8,0)
 S Y=Y_$S($D(^DIC(45.1,+$P(DG101,U,1),0)):$J($P(^(0),U,1),2),1:"  ")
"RTN","DGPTFTR0",9,0)
 S L=3,X=DG101,Z=5 D ENTER S Y=Y_$E($P(X,U,6)_"   ",1,3)
"RTN","DGPTFTR0",10,0)
 S Y=Y_$S("A0"[$P(DG0,U,5):" ",1:$J($P(DG101,U,3),1))
"RTN","DGPTFTR0",11,0)
 ;POW Location
"RTN","DGPTFTR0",12,0)
 S Y=Y_$S($P(DG52,U,5)="N":1,$P(DG52,U,5)'="Y":3,$P(DG52,U,6)>0&($P(DG52,U,6)<7):3+$P(DG52,U,6),$P(DG52,U,6)>6&($P(DG52,U,6)<9):$C($P(DG52,U,6)+58),1:" ")
"RTN","DGPTFTR0",13,0)
 S Y=Y_$S($D(^DIC(11,+$P(DG10,U,5),0)):$E(^(0),1),1:" ")_$J($P(DG10,U,2),1)
"RTN","DGPTFTR0",14,0)
 S DGDOB=$P(DG10,U,3)\1,Y=Y_$E(DGDOB,4,5)_$E(DGDOB,6,7)_(1700+$E(DGDOB,1,3))
"RTN","DGPTFTR0",15,0)
 S C=$S($D(^DIC(45.82,+$P(DG101,U,4),0)):$P(^(0),U,1),1:" "),(G,E)=" " S:C=6 DGAO=$P(DG321,U,2),G=$S($P(DG321,U,1)'="Y":1,DGAO="N":2,DGAO="Y":3,1:4)
"RTN","DGPTFTR0",16,0)
 S:C="Z"!(C>1&(C<8)) DGNT=$P(DG321,U,12),E=$S($P(DG321,U,3)'="Y":1,DGNT="N":2,DGNT="T":3,DGNT="B":4,1:" ")
"RTN","DGPTFTR0",17,0)
 S Y=Y_C_G_E K C,G,E
"RTN","DGPTFTR0",18,0)
 ; state code
"RTN","DGPTFTR0",19,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),0)):^(0),1:""),L=2,Z=3 D ENTER0
"RTN","DGPTFTR0",20,0)
 ; county code
"RTN","DGPTFTR0",21,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),1,+$P(DG11,U,7),0)):^(0),1:""),L=3,Z=3 D ENTER0
"RTN","DGPTFTR0",22,0)
 ; zip code
"RTN","DGPTFTR0",23,0)
 S X=DG11,Z=6,L=5 D ENTER
"RTN","DGPTFTR0",24,0)
 ; means test
"RTN","DGPTFTR0",25,0)
 S Y=Y_$E($P(DG0,U,10),1,2)
"RTN","DGPTFTR0",26,0)
 F K=$L(Y):1:79 S Y=Y_" "
"RTN","DGPTFTR0",27,0)
 D SAVE
"RTN","DGPTFTR0",28,0)
P401 G 401:'$D(^DGPT(J,"401P"))!(T1) S DG41=^("401P"),Y=$S(T1:"C",1:"N")_"401"_DGHEAD_"P"_"           "
"RTN","DGPTFTR0",29,0)
 S DG41=$S($D(^DGPT(J,"401P")):^("401P"),1:"")
"RTN","DGPTFTR0",30,0)
 S L=1 F K=1:1:5 S:'$P(DG41,U,K) DG41=$P(DG41,U,1,K-1)_U_$P(DG41,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTFTR0",31,0)
 F I=1:1:5 S DGPTTMP=$$ICDOP^ICDCODE(+$P(DG41,U,I),$$GETDATE^ICDGTDRG(PTF)) S Y=Y_$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTFTR0",32,0)
 I $E(Y,40)'=" " S Y=Y_"      " D SAVE
"RTN","DGPTFTR0",33,0)
401 G 501:'$D(^DGPT(J,"S")) K ^UTILITY($J,"S") S I=0
"RTN","DGPTFTR0",34,0)
SUR S I=$O(^DGPT(J,"S",I)) G 501:I'>0 S DGSUR=^(I,0) G SUR:'DGSUR
"RTN","DGPTFTR0",35,0)
 G SUR:DGSUR<T1!(DGSUR>T2) S DGSUD=+^(0)\1,^UTILITY($J,"S",DGSUD)=$S($D(^UTILITY($J,"S",DGSUD)):^(DGSUD),1:0)+1,F=$S(DGSUD<2871000:0,1:1)
"RTN","DGPTFTR0",36,0)
 I ^UTILITY($J,"S",DGSUD)>$S(F:3,1:2) W !,"More than ",$S(F:"three",1:"two")," surgeries on same date" S DGERR=1 Q
"RTN","DGPTFTR0",37,0)
 S Y=$S(T1:"C",1:"N")_"40"_^(DGSUD)_DGHEAD_$E(DGSUD,4,5)_$E(DGSUD,6,7)_$E(DGSUD,2,3)_$S($D(^DIC(45.3,+$P(DGSUR,U,3),0)):$P(^(0),U,1),1:"  ")
"RTN","DGPTFTR0",38,0)
 S L=1,X=DGSUR F Z=4:1:7 D ENTER
"RTN","DGPTFTR0",39,0)
 S L=1 F K=8:1:12 S:'$P(DGSUR,U,K) DGSUR=$P(DGSUR,U,1,K-1)_U_$P(DGSUR,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTFTR0",40,0)
 F K=8:1:12 S DGPTTMP=$$ICDOP^ICDCODE(+$P(DGSUR,U,I),$$GETDATE^ICDGTDRG(PTF)) S Y=Y_$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTFTR0",41,0)
 S Y=Y_"      " D SAVE G SUR
"RTN","DGPTFTR0",42,0)
501 G 501^DGPTFTR2
"RTN","DGPTFTR0",43,0)
 Q
"RTN","DGPTFTR0",44,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTFTR0",45,0)
 Q
"RTN","DGPTFTR0",46,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTFTR0",47,0)
 Q
"RTN","DGPTFTR0",48,0)
SAVE D START^DGPTFTR1 S:'DGERR ^UTILITY($J,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTFTR0",49,0)
Q Q
"RTN","DGPTFTR0",50,0)
DGNAM S X=DGNAM I X?.E.P F I=1:1:$L(X) S Z=$E(X,I) Q:Z=","  S:Z?.P&(Z]"") X=$E(X,1,I-1)_$E(X,I+1,$L(X)),I=I-1 Q:X'?.E.P
"RTN","DGPTFTR0",51,0)
 I X?.E.L D UP^DGHELP
"RTN","DGPTFTR0",52,0)
 S DGNAM=X
"RTN","DGPTFVC1")
0^19^B34761177
"RTN","DGPTFVC1",1,0)
DGPTFVC1 ;ALB/AS/ADL - Expanded PTF Close-Out Edits ; Jul 20 88 @ 0900
"RTN","DGPTFVC1",2,0)
 ;;5.3;Registration;**52,58,79,114,164,400,342,466,415,493,512,510**;Aug 13, 1993
"RTN","DGPTFVC1",3,0)
 ;;ADL;Updated for CSV Project;;Mar 26, 2003
"RTN","DGPTFVC1",4,0)
 ;Called from Q+2^DGPTFTR. Variable must be passed in: PTF
"RTN","DGPTFVC1",5,0)
 ;Variable returned: DGERR.   DGERR <-- 1 if record fails to pass a check; DGERR <-- "" if record passes all checks
"RTN","DGPTFVC1",6,0)
 ;
"RTN","DGPTFVC1",7,0)
 Q:'$D(PTF)
"RTN","DGPTFVC1",8,0)
 S DGERR="",DGV(701)=$S($D(^DGPT(PTF,70)):^(70),1:""),DGV(101)=^(0),DGSUFFIX=$P(DGV(101),"^",5),DGV("FEE")=$P(DGV(101),"^",4),DFN=$P(DGV(101),"^",1)
"RTN","DGPTFVC1",9,0)
 ;
"RTN","DGPTFVC1",10,0)
 I $P(DGV(101),"^",2)>2820700 D AO
"RTN","DGPTFVC1",11,0)
 ;
"RTN","DGPTFVC1",12,0)
 I DGRTY=1,DGV("FEE") D MT
"RTN","DGPTFVC1",13,0)
 ;
"RTN","DGPTFVC1",14,0)
 ; DG*512, sck/Remove 101-Means Test indocator = 'U' xmit block
"RTN","DGPTFVC1",15,0)
 ;I 'DGV("FEE"),$P(DGV(101),"^",10)="U",'DGV(701)!(+DGV(701)>2890700) S DGERR=1 W !,"101 MEANS TEST",?23," value 'U' - not valid for discharges as of 7/1/1989",!?42,"per MAS VACO policy"
"RTN","DGPTFVC1",16,0)
 ;
"RTN","DGPTFVC1",17,0)
 I $D(^DPT(DFN,57)),$P(^(57),"^",4)>0 S S0=$P(^(57),"^",4),DGDX=$S(S0=1!(S0=3):"344.1",1:"344.0"),DGSCI="" F DGX=0:0 S DGX=$O(^DGPT(PTF,"M",DGX)) Q:DGX'>0  S DGNODE=^(DGX,0),DGSCI="" D SCI
"RTN","DGPTFVC1",18,0)
 ;
"RTN","DGPTFVC1",19,0)
 S DGDP="",DGDISPO=$P(DGV(701),"^",6),DGRECSUF=$P(DGV(701),"^",13)
"RTN","DGPTFVC1",20,0)
 I DGRTY=1 D
"RTN","DGPTFVC1",21,0)
 .S DGSTATYP=$S(DGDISPO=12!(DGDISPO=13):30,DGDISPO=10:42,DGDISPO=8:40,1:"")
"RTN","DGPTFVC1",22,0)
 .I DGSTATYP]"" D
"RTN","DGPTFVC1",23,0)
 ..D NUMACT^DGPTSUF(DGSTATYP)
"RTN","DGPTFVC1",24,0)
 ..I DGANUM>0 F I=1:1:DGANUM I DGSUFFIX=DGSUFNAM(I) D
"RTN","DGPTFVC1",25,0)
 ...I DGDISPO'=8 I DGRECSUF=DGSUFNAM(DGANUM) S DGDP=5 D DP
"RTN","DGPTFVC1",26,0)
 ...I DGDISPO=8 N DGANUM,DGSUFNAM D NUMACT^DGPTSUF(42) I DGRECSUF=DGSUFNAM(DGANUM) S DGDP=5 D DP
"RTN","DGPTFVC1",27,0)
 .K DGANUM,DGSTATYP,DGSUFNAM,I
"RTN","DGPTFVC1",28,0)
 ;
"RTN","DGPTFVC1",29,0)
 I DGRTY=1 S %=$P(DGV(701),"^",3) I %=4!(%=6)!(%=7) S DGDP="" D OP I $P(DGV(701),"^",5)=1 S DGERR=1 W !,"701 VA AUSPICES",?23," value inconsistent for discharge"
"RTN","DGPTFVC1",30,0)
 ;
"RTN","DGPTFVC1",31,0)
 ;I 'DGV("FEE") S %=$P(^DPT(DFN,0),"^",6),%=$S($D(^DIC(10,+%,0)):$P(^(0),"^",2),1:"") I '%!(%>7) S DGERR=1 W !,"701 RACE",?23," value " W:%']"" "blank" I %]"" W %," (invalid code)"
"RTN","DGPTFVC1",32,0)
 ;
"RTN","DGPTFVC1",33,0)
 ;If PRRTP treating specialty, must have valid PRRTP suffix
"RTN","DGPTFVC1",34,0)
 ;Fee records would not contain PRRTP specialties
"RTN","DGPTFVC1",35,0)
 I 'DGV("FEE"),"^25^26^27^28^29^38^39^"[(U_$P(DGV(701),U,2)_U) D
"RTN","DGPTFVC1",36,0)
 .I DGSUFFIX'="PA",(DGSUFFIX'="PB"),(DGSUFFIX'="PC"),(DGSUFFIX'="PD") D
"RTN","DGPTFVC1",37,0)
 ..S DGERR=1
"RTN","DGPTFVC1",38,0)
 ..W !,"101 SUFFIX",?23,"value must be set to a valid PRRTP suffix."
"RTN","DGPTFVC1",39,0)
 ;
"RTN","DGPTFVC1",40,0)
 D RACETHNC
"RTN","DGPTFVC1",41,0)
 K DGDISPO,DGRECSUF,DGV,DGDP,DGDX,DGSCI,DGSUFFIX,DGNODE,DGX,%,S0,I,X
"RTN","DGPTFVC1",42,0)
 I DGERR H 4
"RTN","DGPTFVC1",43,0)
 Q
"RTN","DGPTFVC1",44,0)
 ;
"RTN","DGPTFVC1",45,0)
SCI F X=5:1:15 I X#10 S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGNODE,"^",X),$$GETDATE^ICDGTDRG(PTF)) I +DGPTTMP>0&($P(DGPTTMP,U,10)) S:$E($P(DGPTTMP,"^",2),1,5)=DGDX DGSCI=1 Q:DGSCI
"RTN","DGPTFVC1",46,0)
 I 'DGSCI S DGERR=1,%=$P(DGNODE,"^",10),X=$TR($$FMTE^XLFDT(%,"5DF")," ","0") W !,"501 ",X," SCI of ",S0,?23," requires an ICD Diagnosis code beginning with",!?12," or equal to ",DGDX
"RTN","DGPTFVC1",47,0)
 Q
"RTN","DGPTFVC1",48,0)
 ;
"RTN","DGPTFVC1",49,0)
MT S DGVMT=$P(DGV(101),"^",10),DGX=999 G DGX:DGVMT']"" I +$P(DGV(101),"^",2)<2860700!(DGSUFFIX="BU") S DGX="X" G DGX
"RTN","DGPTFVC1",50,0)
 ;S DGZEC=$S($D(^DPT(DFN,.36)):$P(^(.36),U,1),1:""),DGZEC=$S($D(^DIC(8,+DGZEC,0)):^(0),1:"") I $P(DGZEC,U,5)="N" S DGX="N" G DGX
"RTN","DGPTFVC1",51,0)
 S DGZEC=$P($G(^DGPT(PTF,101)),U,8),DGZEC=$S($D(^DIC(8,+DGZEC,0)):^(0),1:"") I $P(DGZEC,U,5)="N" S DGX="N" G DGX
"RTN","DGPTFVC1",52,0)
 S DGT=$P(DGV(701),".") G AS:'$O(^DGMT(408.31,"AD",1,DFN,0)) S DGZ1=$$LST^DGMTU(DFN,DGT) K:DGZ1']"" DGZ1
"RTN","DGPTFVC1",53,0)
 I DGVMT="X" K DGX,DGVMT Q
"RTN","DGPTFVC1",54,0)
 S DGX=$S('$D(DGZ1):"U",1:$P(DGZ1,U,4))
"RTN","DGPTFVC1",55,0)
 ; Determine if the Pending Adjudication is for MT(C) or GMT(G)
"RTN","DGPTFVC1",56,0)
 I DGX="P" D  G DGX
"RTN","DGPTFVC1",57,0)
 . I '+$P($G(DGZ1),U) S DGX="U" Q
"RTN","DGPTFVC1",58,0)
 . S DGX=$$PA^DGMTUTL($P(DGZ1,U)),DGX=$S('$D(DGX):"U",DGX="MT":"C",DGX="GMT":"G",1:"U")
"RTN","DGPTFVC1",59,0)
 S DGX=$S(DGX="A":"AN","BCGN"[DGX:DGX,1:"U") G DGX:DGX'="N"
"RTN","DGPTFVC1",60,0)
AS S DGZ=$S($D(^DPT(DFN,.321)):^(.321),1:0) I $P(DGZ,U,2)="Y"!($P(DGZ,U,3)="Y") S DGX="AS" G DGX
"RTN","DGPTFVC1",61,0)
 S DGZ=$S($D(^DPT(DFN,.322)):^(.322),1:0) I $P(DGZ,U,13)="Y" S DGX="AS" G DGX
"RTN","DGPTFVC1",62,0)
 N DGNTARR S DGZ=$S($$GETCUR^DGNTAPI(DFN,"DGNTARR")>0:DGNTARR("NTR"),1:"") I $P(DGZ,U)="Y" S DGX="AS" G DGX
"RTN","DGPTFVC1",63,0)
 S DGZ=$$GETSTAT^DGMSTAPI(DFN) I $P(DGZ,U,2)="Y" S DGX="AS" G DGX
"RTN","DGPTFVC1",64,0)
 I $P(DGZEC,U,5)="Y",$P(DGZEC,U,4)<4,"^2^15^"'[(U_$P(DGZEC,U,9)_U) S DGX="AS" G DGX
"RTN","DGPTFVC1",65,0)
 S DGX="AN"
"RTN","DGPTFVC1",66,0)
DGX I DGVMT'=DGX S DGERR=1 W !,"101 ","MEANS TEST",?23," value ",DGVMT,$S(DGVMT']"":"blank",DGVMT="X":" only for admissions prior to 7/1/86 or domicilliary use",1:" inconsistent with eligibility data")
"RTN","DGPTFVC1",67,0)
 K DGZEC,DGZ,DGZ1,DGT,DGX,DGVMT Q
"RTN","DGPTFVC1",68,0)
 ;
"RTN","DGPTFVC1",69,0)
DP I $P(DGV(701),"^",3)'=5 S DGERR=1 W !,"701 ",$E("TYPE OF DISPOSITION",1,18),?23," value inconsistent for discharge"
"RTN","DGPTFVC1",70,0)
OP I $P(DGV(701),"^",4)=1 S DGERR=1 W !,"701 ",$E("OUTPATIENT TREATMENT",1,18),?23," value inconsistent for discharge" Q:DGDP=""
"RTN","DGPTFVC1",71,0)
 I $P(DGV(701),"^",5)=2 S DGERR=1 W !,"701 VA AUSPICES",?23," value inconsistent for discharge"
"RTN","DGPTFVC1",72,0)
 Q
"RTN","DGPTFVC1",73,0)
 ;
"RTN","DGPTFVC1",74,0)
AO I DGPTFMT<2 D  Q
"RTN","DGPTFVC1",75,0)
 .S %=$S($D(^DGPT(PTF,101)):$P(^(101),"^",4),1:"")
"RTN","DGPTFVC1",76,0)
 .S %=$S($D(^DIC(45.82,+%,0)):$P(^(0),"^",1),1:"")
"RTN","DGPTFVC1",77,0)
 .S I=$S($D(^DPT(DFN,.321)):^(.321),1:"")
"RTN","DGPTFVC1",78,0)
 .S:$P(I,"^",2)="Y"&(%'=6) DGERR=1,DGV("E")=1
"RTN","DGPTFVC1",79,0)
 .W:$D(DGV("E")) !,"101 AGENT ORANGE",?23," value ",$S(DGV("E"):"can only be used with COB of '6'",1:"is inconsistent with Vietnam Service and/or COB")
"RTN","DGPTFVC1",80,0)
 ;
"RTN","DGPTFVC1",81,0)
 N AO,AOL,TMP
"RTN","DGPTFVC1",82,0)
 S TMP=$G(^DPT(DFN,.321))
"RTN","DGPTFVC1",83,0)
 S AO=$S($P(TMP,"^",2)="Y":1,1:0)
"RTN","DGPTFVC1",84,0)
 S AOL=$P(TMP,"^",13)
"RTN","DGPTFVC1",85,0)
 Q:('AO)
"RTN","DGPTFVC1",86,0)
 Q:(AOL'="")
"RTN","DGPTFVC1",87,0)
 S DGERR=1,DGV("E")=1
"RTN","DGPTFVC1",88,0)
 W !,"101 AGENT ORANGE LOCATION",?23,"value required if exposure to Agent Orange claimed"
"RTN","DGPTFVC1",89,0)
 Q
"RTN","DGPTFVC1",90,0)
RACETHNC        ;Race and ethnicity check
"RTN","DGPTFVC1",91,0)
 ;Ensure that a value for ethnicity and at least one race is on file.
"RTN","DGPTFVC1",92,0)
 ;Ensure all active race/ethnicity values have a valid PTF value and an
"RTN","DGPTFVC1",93,0)
 ;associated collection method.  Ensure all collection methods have a
"RTN","DGPTFVC1",94,0)
 ;valid PTF value.  Ignore race/ethicity entries that are inactive or
"RTN","DGPTFVC1",95,0)
 ;invalid pointers.  Note: PTF sends first active ethnicity and first
"RTN","DGPTFVC1",96,0)
 ;six active races.
"RTN","DGPTFVC1",97,0)
 N REF,IEN,TYPE,TEXT,PTRVAL,PTRMTHD,NUM,MAX
"RTN","DGPTFVC1",98,0)
 N VALIDVAL,VALIDMTH,VALUE,VADM
"RTN","DGPTFVC1",99,0)
 D DEM^VADPT
"RTN","DGPTFVC1",100,0)
 F REF=11,12 D
"RTN","DGPTFVC1",101,0)
 .I REF=12 D
"RTN","DGPTFVC1",102,0)
 ..S MAX=6
"RTN","DGPTFVC1",103,0)
 ..S TYPE=1
"RTN","DGPTFVC1",104,0)
 ..S VALIDVAL=",3,8,9,A,B,C,D,"
"RTN","DGPTFVC1",105,0)
 ..S VALIDMTH=",S,P,O,U,"
"RTN","DGPTFVC1",106,0)
 ..S TEXT="RACE"
"RTN","DGPTFVC1",107,0)
 .I REF=11 D
"RTN","DGPTFVC1",108,0)
 ..S MAX=1
"RTN","DGPTFVC1",109,0)
 ..S TYPE=2
"RTN","DGPTFVC1",110,0)
 ..S TEXT="ETHNICITY"
"RTN","DGPTFVC1",111,0)
 ..S VALIDVAL=",H,N,D,U,"
"RTN","DGPTFVC1",112,0)
 ..S VALIDMTH=",S,P,O,U,"
"RTN","DGPTFVC1",113,0)
 .S NUM=1
"RTN","DGPTFVC1",114,0)
 .S IEN=0
"RTN","DGPTFVC1",115,0)
 .F  S IEN=+$O(VADM(REF,IEN)) Q:'IEN  D  Q:NUM>MAX
"RTN","DGPTFVC1",116,0)
 ..S PTRVAL=+VADM(REF,IEN)
"RTN","DGPTFVC1",117,0)
 ..S PTRMTHD=+$G(VADM(REF,IEN,1))
"RTN","DGPTFVC1",118,0)
 ..Q:'PTRVAL
"RTN","DGPTFVC1",119,0)
 ..Q:$$INACTIVE^DGUTL4(PTRVAL,TYPE)
"RTN","DGPTFVC1",120,0)
 ..S NUM=NUM+1
"RTN","DGPTFVC1",121,0)
 ..S VALUE=$$PTR2CODE^DGUTL4(PTRVAL,TYPE,4)
"RTN","DGPTFVC1",122,0)
 ..I (VALUE="")!(VALIDVAL'[VALUE) D  Q
"RTN","DGPTFVC1",123,0)
 ...W !,"701 ",TEXT,?23,"missing/invalid xmit value"
"RTN","DGPTFVC1",124,0)
 ...S DGERR=1
"RTN","DGPTFVC1",125,0)
 ..I ('PTRMTHD) D  Q
"RTN","DGPTFVC1",126,0)
 ...W !,"701 ",TEXT,?23,"method of collection missing/invalid"
"RTN","DGPTFVC1",127,0)
 ...S DGERR=1
"RTN","DGPTFVC1",128,0)
 ..S VALUE=$$PTR2CODE^DGUTL4(PTRMTHD,3,4)
"RTN","DGPTFVC1",129,0)
 ..I (VALUE="")!(VALIDMTH'[VALUE) D  Q
"RTN","DGPTFVC1",130,0)
 ...W !,"701 ",TEXT,?23,"missing/invalid xmit value for method of collection"
"RTN","DGPTFVC1",131,0)
 ...S DGERR=1
"RTN","DGPTFVC1",132,0)
 Q
"RTN","DGPTICD")
0^20^B7450472
"RTN","DGPTICD",1,0)
DGPTICD ;ALB/MTC - PTF DRG Grouper Utility ; 2/19/02 3:08pm
"RTN","DGPTICD",2,0)
 ;;5.3;Registration;**375,441,510**;Aug 13, 1993
"RTN","DGPTICD",3,0)
 ;variables to pass in:
"RTN","DGPTICD",4,0)
 ;  DGDX <- format: DX CODE1^DX CODE2^DX CODE3^...                      (REQUIRED)
"RTN","DGPTICD",5,0)
 ;  DGSURG <- format: SURGERY CODE1^SURGERY CODE2^SURGERY CODE3^...       (OPTIONAL)
"RTN","DGPTICD",6,0)
 ;  DGPROC <- format: PROCEDURE CODE1^PROCEDURE CODE2^PROCEDURE CODE3^... (OPTIONAL)
"RTN","DGPTICD",7,0)
 ;  DGTRS  <- 1 if patient transferred to acute care facility             (REQUIRED)
"RTN","DGPTICD",8,0)
 ;  DGEXP  <- 1 if patient died during this episode                       (REQUIRED)
"RTN","DGPTICD",9,0)
 ;  DGDMS  <- 1 if patient was discharged with an Irregular discharge (discharged against medical advice) (REQUIRED)
"RTN","DGPTICD",10,0)
 ;  AGE,SEX     (REQUIRED)
"RTN","DGPTICD",11,0)
 ;values of variables listed above are left unchanged by this routine
"RTN","DGPTICD",12,0)
 ;variable passed back: DRG(0) <- zero node of DRG in DRG file
"RTN","DGPTICD",13,0)
 ;                    : DRG <- IFN of DRG in DRG file
"RTN","DGPTICD",14,0)
 ;  DGDAT  <- Effective date to be used in calculating DRG
"RTN","DGPTICD",15,0)
 ;
"RTN","DGPTICD",16,0)
 ;-- check for required variables
"RTN","DGPTICD",17,0)
 Q:'$D(DGDX)!'$D(DGTRS)!'$D(DGEXP)!'$D(DGDMS)
"RTN","DGPTICD",18,0)
 N DGI
"RTN","DGPTICD",19,0)
 ;-- build ICDDX array
"RTN","DGPTICD",20,0)
 K ICDDX
"RTN","DGPTICD",21,0)
 S DGI=0 F  S DGI=DGI+1 Q:$P(DGDX,U,DGI)=""  D
"RTN","DGPTICD",22,0)
 . S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGDX,U,DGI),+$G(DGDAT))
"RTN","DGPTICD",23,0)
 . I +DGPTTMP>0,($P(DGPTTMP,U,10)) S ICDDX(DGI)=$P(DGDX,U,DGI)
"RTN","DGPTICD",24,0)
 G Q:'$D(ICDDX)
"RTN","DGPTICD",25,0)
 ;
"RTN","DGPTICD",26,0)
 ;-- build ICDPRC array
"RTN","DGPTICD",27,0)
 ;K ICDPRC
"RTN","DGPTICD",28,0)
 ;I $D(DGPROC) S DGSURG=$S('$D(DGSURG):DGPROC,1:DGSURG_DGPROC)
"RTN","DGPTICD",29,0)
 ;I $D(DGSURG) S DGI=0 F  S DGI=DGI+1 Q:$P(DGSURG,U,DGI)=""  D
"RTN","DGPTICD",30,0)
 ;. I $D(^ICD0($P(DGSURG,U,DGI),0)) S ICDPRC(DGI)=$P(DGSURG,U,DGI)
"RTN","DGPTICD",31,0)
 ;-- build ICDPRC array eliminating dupes as we go
"RTN","DGPTICD",32,0)
 K ICDPRC
"RTN","DGPTICD",33,0)
 N I,J,X,Y,FLG,SUB S SUB=0
"RTN","DGPTICD",34,0)
 I $D(DGPROC) F I=2:1 S X=$P(DGPROC,U,I) Q:X=""  D
"RTN","DGPTICD",35,0)
 . S DGPTTMP=$$ICDOP^ICDCODE(X,+$G(DGDAT))
"RTN","DGPTICD",36,0)
 . I +DGPTTMP>0,($P(DGPTTMP,U,10)) S SUB=SUB+1,ICDPRC(SUB)=X
"RTN","DGPTICD",37,0)
 I $D(DGSURG) F I=2:1 S X=$P(DGSURG,U,I) Q:X=""  D
"RTN","DGPTICD",38,0)
 . S FLG=0,J=0 F  S J=$O(ICDPRC(J)) Q:'J  I X=$G(ICDPRC(J)) S FLG=1 Q
"RTN","DGPTICD",39,0)
 . I FLG Q
"RTN","DGPTICD",40,0)
 . S DGPTTMP=$$ICDOP^ICDCODE(X,+$G(DGDAT))
"RTN","DGPTICD",41,0)
 . I +DGPTTMP>0,($P(DGPTTMP,U,10)) S SUB=SUB+1,ICDPRC(SUB)=X
"RTN","DGPTICD",42,0)
 ;
"RTN","DGPTICD",43,0)
 ;-- set other required variables
"RTN","DGPTICD",44,0)
 S ICDTRS=DGTRS,ICDEXP=DGEXP,ICDDMS=DGDMS
"RTN","DGPTICD",45,0)
 S ICDDATE=$S($D(DGDAT):DGDAT,1:DT)
"RTN","DGPTICD",46,0)
 ;
"RTN","DGPTICD",47,0)
 ;-- calculate DRG
"RTN","DGPTICD",48,0)
 D ^ICDDRG S DRG=ICDDRG I '$D(DGDRGPRT) G Q
"RTN","DGPTICD",49,0)
 ;
"RTN","DGPTICD",50,0)
PRT ;print DRG and national HCFA values
"RTN","DGPTICD",51,0)
 I DRG=468!(DRG=469)!(DRG=470) W *7
"RTN","DGPTICD",52,0)
 S Y=ICDDATE D DD^%DT ; Y=external representation of effective date
"RTN","DGPTICD",53,0)
 W !!?9,"Effective Date:","  ",Y
"RTN","DGPTICD",54,0)
 S DRG(0)=$$DRG^ICDGTDRG(DRG,DGDAT) W !!,"Diagnosis Related Group: ",$J(DRG,6),?36,"Average Length of Stay(ALOS): ",$J($P(DRG(0),"^",8),6)
"RTN","DGPTICD",55,0)
 W !?17,"Weight: ",$J($P(DRG(0),"^",2),6)  ;,?40,"Local Breakeven: ",$J($P(DRG(0),"^",12),6)
"RTN","DGPTICD",56,0)
 W !?12," Low Day(s): ",$J($P(DRG(0),"^",3),6)  ;,?39,"Local Low Day(s): ",$J($P(DRG(0),"^",9),6)
"RTN","DGPTICD",57,0)
 W !?13," High Days: ",$J($P(DRG(0),"^",4),6)  ;,?40,"Local High Days: ",$J($P(DRG(0),"^",10),6)
"RTN","DGPTICD",58,0)
 W !!,"DRG: ",DRG,"-" F DGI=0:0 S DGI=$O(^ICD(DRG,1,DGI)) Q:DGI'>0  W ?10,$P(^(DGI,0),U,1),!
"RTN","DGPTICD",59,0)
Q K ICDDMS,ICDDRG,ICDDX,ICDEXP,ICDMDC,ICDPRC,ICDRTC,ICDTRS,ICDDATE Q
"RTN","DGPTLMU4")
0^21^B19788947
"RTN","DGPTLMU4",1,0)
DGPTLMU4 ;ALB/MTC/ADL - PTF A/P LIST MANAGER UTILITY CONT. ; 9-24-92
"RTN","DGPTLMU4",2,0)
 ;;5.3;Registration;**510**;Aug 13, 1993
"RTN","DGPTLMU4",3,0)
 ;;ADL;;Update for CSV Project;;Mar 27, 2003
"RTN","DGPTLMU4",4,0)
 ;
"RTN","DGPTLMU4",5,0)
EN ;-- single PTF record entry point
"RTN","DGPTLMU4",6,0)
 ; INPUT - DGPTF record to display
"RTN","DGPTLMU4",7,0)
 K ^TMP("ARCPTFDI",$J)
"RTN","DGPTLMU4",8,0)
 D EN^VALM("DGPT DETAILED INQUIRY")
"RTN","DGPTLMU4",9,0)
 D CLEAR^VALM1
"RTN","DGPTLMU4",10,0)
 Q
"RTN","DGPTLMU4",11,0)
 ;
"RTN","DGPTLMU4",12,0)
DIEX ;-- exit code 
"RTN","DGPTLMU4",13,0)
 K ^TMP("ARCPTFDI",$J),DGPTF
"RTN","DGPTLMU4",14,0)
 D CLEAR^VALM1
"RTN","DGPTLMU4",15,0)
 Q
"RTN","DGPTLMU4",16,0)
 ;
"RTN","DGPTLMU4",17,0)
DIHEAD ;-- header code
"RTN","DGPTLMU4",18,0)
 S VALMHDR(1)="Patient Name: "_$P(^DPT(+^DGPT(DGPTF,0),0),U)
"RTN","DGPTLMU4",19,0)
 S VALMHDR(2)="PTF record # :"_DGPTF
"RTN","DGPTLMU4",20,0)
 S VALMHDR(3)="Admission Date :"_$$FTIME^VALM1($P(^DGPT(DGPTF,0),U,2))
"RTN","DGPTLMU4",21,0)
 Q
"RTN","DGPTLMU4",22,0)
 ;
"RTN","DGPTLMU4",23,0)
DIEN ;-- list manager entry point
"RTN","DGPTLMU4",24,0)
 D SEL^DGPTLMU3
"RTN","DGPTLMU4",25,0)
 S DGPTF=+$O(VALMY(0))
"RTN","DGPTLMU4",26,0)
 I ('$D(^DGPT(DGPTF))!('$D(^TMP("ARCPTF",$J,"LIST","REC",DGPTF)))) S VALMBCK="" D  G DIENQ
"RTN","DGPTLMU4",27,0)
 . W !,">>> Invalid selection"
"RTN","DGPTLMU4",28,0)
 D EN^VALM("DGPT DETAILED INQUIRY")
"RTN","DGPTLMU4",29,0)
 S VALMBCK="R"
"RTN","DGPTLMU4",30,0)
DIENQ Q
"RTN","DGPTLMU4",31,0)
 ;
"RTN","DGPTLMU4",32,0)
DIINT ;-- This function will load the array containing the
"RTN","DGPTLMU4",33,0)
 ; PTF detailed information.
"RTN","DGPTLMU4",34,0)
 ;  INPUT : DGPTF - Valid PTF entry
"RTN","DGPTLMU4",35,0)
 ;
"RTN","DGPTLMU4",36,0)
 N I,J,X,Y,DGINC,X1,X2,NUMREC
"RTN","DGPTLMU4",37,0)
 S NUMREC=0,X1=""
"RTN","DGPTLMU4",38,0)
 S Y="Patient Name :"_$P(^DPT(+^DGPT(DGPTF,0),0),U)
"RTN","DGPTLMU4",39,0)
 S X1=$$SETSTR^VALM1(Y,X1,1,40)
"RTN","DGPTLMU4",40,0)
 S Y="PTF Record # :"_DGPTF
"RTN","DGPTLMU4",41,0)
 S X1=$$SETSTR^VALM1(Y,X1,45,30)
"RTN","DGPTLMU4",42,0)
 S ^TMP("ARCPTFDI",$J,$$NUM(.NUMREC),0)=X1,X1=""
"RTN","DGPTLMU4",43,0)
 S Y="Admin Date :"_$$FTIME^VALM1($P(^DGPT(DGPTF,0),U,2))
"RTN","DGPTLMU4",44,0)
 S X1=$$SETSTR^VALM1(Y,X1,1,40),DG70=$G(^DGPT(DGPTF,70))
"RTN","DGPTLMU4",45,0)
 S Y="Disch Date :"_$S(+DG70:$$FTIME^VALM1(+DG70),1:"<UNKNOWN>")
"RTN","DGPTLMU4",46,0)
 S X1=$$SETSTR^VALM1(Y,X1,45,30)
"RTN","DGPTLMU4",47,0)
 S ^TMP("ARCPTFDI",$J,$$NUM(.NUMREC),0)=X1,X1=""
"RTN","DGPTLMU4",48,0)
 S Y="Disch Specialty :"_$S($P(DG70,U,2):$P(^DIC(42.4,$P(DG70,U,2),0),U),1:"")
"RTN","DGPTLMU4",49,0)
 S X1=$$SETSTR^VALM1(Y,X1,1,40),X=$P(DG70,U,3)
"RTN","DGPTLMU4",50,0)
 S Y="Type of Dispos :"_$S(X:$P($P($P(^DD(45,72,0),U,3),";",X),":",2),1:"")
"RTN","DGPTLMU4",51,0)
 S X1=$$SETSTR^VALM1(Y,X1,45,30)
"RTN","DGPTLMU4",52,0)
 S ^TMP("ARCPTFDI",$J,$$NUM(.NUMREC),0)=X1,X1="",X=$P(DG70,U,14)
"RTN","DGPTLMU4",53,0)
 S Y="Disch Status :"_$S(X:$P($P($P(^DD(45,72.1,0),U,3),";",X),":",2),1:"")
"RTN","DGPTLMU4",54,0)
 S X1=$$SETSTR^VALM1(Y,X1,1,40),X=$P(DG70,U,4)
"RTN","DGPTLMU4",55,0)
 S Y="Outpatient Treatment :"_$S(X=1:"YES",1:"NO")
"RTN","DGPTLMU4",56,0)
 S X1=$$SETSTR^VALM1(Y,X1,45,30)
"RTN","DGPTLMU4",57,0)
 S ^TMP("ARCPTFDI",$J,$$NUM(.NUMREC),0)=X1,X1=""
"RTN","DGPTLMU4",58,0)
 S Y="ASIH Days :"_$S($P(DG70,U,8)]"":$P(DG70,U,8),1:"")
"RTN","DGPTLMU4",59,0)
 S X1=$$SETSTR^VALM1(Y,X1,1,40),X=$P(DG70,U,9)
"RTN","DGPTLMU4",60,0)
 S Y="C&P Status :"_$S(X:$P($P($P(^DD(45,78,0),U,3),";",X),":",2),1:"")
"RTN","DGPTLMU4",61,0)
 S X1=$$SETSTR^VALM1(Y,X1,45,30)
"RTN","DGPTLMU4",62,0)
 S ^TMP("ARCPTFDI",$J,$$NUM(.NUMREC),0)=X1,X1=""
"RTN","DGPTLMU4",63,0)
 S Y="VA Auspices :"_$S($P(DG70,U,5)=1:"YES",1:"NO")
"RTN","DGPTLMU4",64,0)
 S X1=$$SETSTR^VALM1(Y,X1,1,40)
"RTN","DGPTLMU4",65,0)
 S DGINC=$P($G(^DGPT(DGPTF,101)),U,7) I DGINC>1000 S DGINC=$E(DGINC,1,$L(DGINC)-3)_","_$E(DGINC,$L(DGINC)-2,$L(DGINC))
"RTN","DGPTLMU4",66,0)
 S Y="Income :"_$S(DGINC]"":"$"_DGINC,1:"")
"RTN","DGPTLMU4",67,0)
 S X1=$$SETSTR^VALM1(Y,X1,45,30)
"RTN","DGPTLMU4",68,0)
 S ^TMP("ARCPTFDI",$J,$$NUM(.NUMREC),0)=X1
"RTN","DGPTLMU4",69,0)
 ;-- check for ICD codes
"RTN","DGPTLMU4",70,0)
 S ^TMP("ARCPTFDI",$J,$$NUM(.NUMREC),0)="ICD CODES :"
"RTN","DGPTLMU4",71,0)
 F J=10,15:1:24 I $P(DG70,U,J) D
"RTN","DGPTLMU4",72,0)
 . S DGPTTMP=$$ICDDX^ICDCODE(+$P(DG70,U,J),$$GETDATE^ICDGTDRG(DGPTF))
"RTN","DGPTLMU4",73,0)
 . S Y=$P(DGPTTMP,U,2)_" - "_$P(DGPTTMP,U,4)
"RTN","DGPTLMU4",74,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM(.NUMREC),0)=" "_Y
"RTN","DGPTLMU4",75,0)
 ;
"RTN","DGPTLMU4",76,0)
 ;-- check for 300 node information
"RTN","DGPTLMU4",77,0)
 S X2=$G(^DGPT(DGPTF,300)) I X2]"" D DI300(X2)
"RTN","DGPTLMU4",78,0)
 ;
"RTN","DGPTLMU4",79,0)
 D DI501^DGPTLMU6,DI401^DGPTLMU5,DI601^DGPTLMU5,DI535^DGPTLMU6
"RTN","DGPTLMU4",80,0)
 F X=1:1:NUMREC S ^TMP("ARCPTFDI",$J,"IDX",X,X)=""
"RTN","DGPTLMU4",81,0)
 S VALMCNT=NUMREC
"RTN","DGPTLMU4",82,0)
 Q
"RTN","DGPTLMU4",83,0)
 ;
"RTN","DGPTLMU4",84,0)
DI300(X2) ;-- load 300 node information
"RTN","DGPTLMU4",85,0)
 ; INPUT X2 - Contains 300 node
"RTN","DGPTLMU4",86,0)
 ; OUTPUT   - Load display array
"RTN","DGPTLMU4",87,0)
 ;
"RTN","DGPTLMU4",88,0)
 N X3,Y
"RTN","DGPTLMU4",89,0)
 I +$P(X2,U,2) S ^TMP("ARCPTFDI",$J,$$NUM(.NUMREC),0)="Suicide Indicator :"_$S($P(X2,U,2)=1:"Attempted",1:"Accomplished")
"RTN","DGPTLMU4",90,0)
 I +$P(X2,U,3) S ^TMP("ARCPTFDI",$J,$$NUM(.NUMREC),0)="Legionnaire's Disease :"_$S($P(X2,U,3)=1:"YES",1:"NO")
"RTN","DGPTLMU4",91,0)
 I +$P(X2,U,4) S ^TMP("ARCPTFDI",$J,$$NUM(.NUMREC),0)="Abused Substance :"_$P($G(^DIC(45.61,$P(X2,U,4),0)),U)
"RTN","DGPTLMU4",92,0)
 I $P(X2,U,5)]"" D
"RTN","DGPTLMU4",93,0)
 . S Y="Psychiatry Classification Severity :",X3=$P(X2,U,5)
"RTN","DGPTLMU4",94,0)
 . S Y=Y_$S(X3]"":$P($P($P(^DD(45.02,300.05,0),U,3),";",X3),":",2),1:"")
"RTN","DGPTLMU4",95,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM(.NUMREC),0)=Y
"RTN","DGPTLMU4",96,0)
 I $P(X2,U,6)]"" S ^TMP("ARCPTFDI",$J,$$NUM(.NUMREC),0)="Current Psychiatry Classification Assesment :"_$P(X2,U,6)
"RTN","DGPTLMU4",97,0)
 I $P(X2,U,7)]"" S ^TMP("ARCPTFDI",$J,$$NUM(.NUMREC),0)="Highest Level Psychiatry Classification :"_$P(X2,U,7)
"RTN","DGPTLMU4",98,0)
 Q
"RTN","DGPTLMU4",99,0)
 ;
"RTN","DGPTLMU4",100,0)
NUM(X) ;-- increment function
"RTN","DGPTLMU4",101,0)
 ; INPUT : X -number to increment
"RTN","DGPTLMU4",102,0)
 ;OUTPUT : X+1
"RTN","DGPTLMU4",103,0)
 S X=X+1
"RTN","DGPTLMU4",104,0)
 Q X
"RTN","DGPTODR")
0^22^B5433832
"RTN","DGPTODR",1,0)
DGPTODR ;ALB/ABS/ADL - DRG Information Report ; 17 FEB 89@14:00
"RTN","DGPTODR",2,0)
 ;;5.3;Registration;**510**;Aug 13, 1993
"RTN","DGPTODR",3,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTODR",4,0)
 S DGTMP=DGDX,DGDRGPRT=1,(DGPG,DGQ)=0,$P(DGLN,"=",81)="" D HDR
"RTN","DGPTODR",5,0)
 F DGX=1:1 Q:$P(DGTMP,"^",DGX)']""  D CONT:$E(IOST,1,2)="C-" Q:DGQ["^"  W !,DGLN,!?10,"DXLS:",$J($P(DGDX(DGX),"^"),8),"  ",$P(DGDX(DGX),"^",2) D ^DGPTICD S DGDX=$P(DGDX,"^",2,99)_"^"_$P(DGDX,"^")
"RTN","DGPTODR",6,0)
Q K AGE,NAME,SEX,DGDMS,DGDRGPRT,DGDX,DGEXP,DGSURG,DGTRS,DGLN,DGPG,DGQ,DGTMP,DGX,DGPTODR,I,Y Q
"RTN","DGPTODR",7,0)
HDR ;print heading
"RTN","DGPTODR",8,0)
 S DGPG=DGPG+1 W @IOF,"DRG INFORMATION REPORT",?45,"Date: " S Y=DT X ^DD("DD") W Y,"  Page: ",DGPG,!!
"RTN","DGPTODR",9,0)
 S Y=DGDAT D DD^%DT ; Y = external format of effective date
"RTN","DGPTODR",10,0)
 W "Effective Date: ",Y,! I NAME]"" W "Patient: ",NAME,?40
"RTN","DGPTODR",11,0)
 W "Sex: ",$S(SEX="M":"Male",1:"Female"),?61,"Age: ",AGE,!,"Expired: ",$S(DGEXP:"Yes",1:"No"),?18,"Transferred to Acute Care: ",$S(DGTRS:"Yes",1:"No"),?55,"Irreg D/C: ",$S(DGDMS:"Yes",1:"No")
"RTN","DGPTODR",12,0)
 Q:DGPG'=1  W !!,"Diagnosis Codes:" F I=0:0 S I=$O(DGDX(I)) Q:I'>0  W !,$J($P(DGDX(I),"^"),8),"  ",$P(DGDX(I),"^",2)
"RTN","DGPTODR",13,0)
 I $D(DGSURG) W !!,"Operation/Procedure Codes:" F I=0:0 S I=$O(DGSURG(I)) Q:I'>0  W !,$J($P(DGSURG(I),"^"),8),"  ",$P(DGSURG(I),"^",2)
"RTN","DGPTODR",14,0)
 Q
"RTN","DGPTODR",15,0)
CONT I $Y+8>IOSL R !!?20,"Press <RET> to continue or ""^"" to abort ",DGQ:DTIME S:'$T DGQ="^" Q:DGQ["^"  D HDR
"RTN","DGPTODR",16,0)
 Q
"RTN","DGPTOLC2")
0^23^B22483012
"RTN","DGPTOLC2",1,0)
DGPTOLC2 ;ALB/AS/ADL - SUMMARY BY ADM RPT, lists diagnoses,sur,pro (cont.) ; 2 AUG 88 @0700
"RTN","DGPTOLC2",2,0)
 ;;5.3;Registration;**164,510**;Aug 13, 1993
"RTN","DGPTOLC2",3,0)
 ;;ADL;Update for CSV Project;;Mar 27, 2003
"RTN","DGPTOLC2",4,0)
 ;
"RTN","DGPTOLC2",5,0)
EN D LO^DGUTL,NOW^%DTC S DGPT=0,DGDT=$TR($$FMTE^XLFDT(DT,"5DF")," ","0")_"@",%=$P(%,".",2),DGDT=DGDT_$E(%,1,2)_":"_$E(%_"0000",3,4)
"RTN","DGPTOLC2",6,0)
 F PTF=0:0 S PTF=$O(DGPTF(PTF)) Q:PTF'>0  S DGNAME=$P(DGPTF(PTF),"^"),DGADM=$P(DGPTF(PTF),"^",2),DGPTF(DGNAME,DGADM,PTF)="" K DGPTF(PTF) ;put names in alphabetical order
"RTN","DGPTOLC2",7,0)
 F DGPTX=0:0 S DGPT=$O(DGPTF(DGPT)) Q:DGPT']""  F DGADM=0:0 S DGADM=$O(DGPTF(DGPT,DGADM)) Q:DGADM'>0  S DGPG=1,PTF=$O(DGPTF(DGPT,DGADM,0)),DFN=$S($D(^DGPT(PTF,0)):+^(0),1:"") I DFN]"" S DGPMIFN=$O(^DGPM("APTF",PTF,0)) D E,HD,D
"RTN","DGPTOLC2",8,0)
 D Q2^DGPTOLC1 Q
"RTN","DGPTOLC2",9,0)
E S DGELIG=$S('$D(^DPT(DFN,.36)):"Unknown",$D(^DIC(8,+$P(^(.36),"^"),0)):$P(^(0),"^"),1:"Unknown"),X=$S($D(^DPT(DFN,.361)):$P(^(.361),"^"),1:""),%=";"_$P(^DD(2,.3611,0),"^",3),DGSTAT=$S(X']"":"Unknown",1:$P($P(%,";"_X_":",2),";",1))
"RTN","DGPTOLC2",10,0)
 S DG70=$S($D(^DGPT(PTF,70)):^(70),1:""),DGFEE=$S($P(^DGPT(PTF,0),"^",4):1,1:"") I DGFEE S X1=$S(+DG70:+DG70,1:DT),X2=DGADM D ^%DTC S DGLOS=$S(X:X,1:1),DGLV=0,D1=0
"RTN","DGPTOLC2",11,0)
 I '+DG70 S DGPRO=$S($D(^DPT(DFN,.104)):+^(.104),1:""),DGPRO=$S($D(^VA(200,+DGPRO,0)):$P(^(0),"^"),1:"Unknown")
"RTN","DGPTOLC2",12,0)
 I +DG70 S DGPRO=$S('$D(^DGPT(PTF,"M",1,"P")):"",1:$P(^("P"),"^",5)),DGPRO=$S($D(^VA(200,+DGPRO,0)):$P(^(0),"^"),1:"") I DGPRO']"" D DGPRO
"RTN","DGPTOLC2",13,0)
 Q
"RTN","DGPTOLC2",14,0)
CRT I IOST?1"C-".E R !?20,"Enter <RETURN> to continue",Y:DTIME
"RTN","DGPTOLC2",15,0)
HD W @IOF,?21,"PATIENT SUMMARY by ADMISSION",!!?51,"Run Date: ",DGDT,!,DGPT,?32,"SSN: ",$P(^DPT(+^DGPT(PTF,0),0),"^",9),?51,"Admitted: " S X=DGADM D DT
"RTN","DGPTOLC2",16,0)
 W !,"Elig: ",DGELIG,"  (",DGSTAT,")",?50,"Discharge: " S X=$P(DG70,"^") D DT W ! W:DGFEE "Fee Basis"
"RTN","DGPTOLC2",17,0)
 I DGPMIFN>0 W "Total LOS: " D ^DGPMLOS S X=+$P(X,"^")-(+$P(X,"^",2))-(+$P(X,"^",4)) W $S(X>0:X,1:"1") W ?18,"* Provider: ",$E(DGPRO,1,19)
"RTN","DGPTOLC2",18,0)
 W ?55,"PTF #: ",PTF,?72,"Pg: ",DGPG S DGPG=DGPG+1 W:DGPMIFN>0 !,"* indicates the most recent PROVIDER entered for this admission",! Q
"RTN","DGPTOLC2",19,0)
D G S:'$D(^DGPT(PTF,"M","AC"))
"RTN","DGPTOLC2",20,0)
 K DGMD F DGS=0:0 S DGS=$O(^DGPT(PTF,"M",DGS)) Q:DGS'>0  I $D(^(DGS,0)) S DGMD=+$P(^(0),"^",10) S:'DGMD DGMD=999999999 S:$D(DGMD(DGMD)) DGMD=DGMD+.01*DGS S DGMD(DGMD)=DGS ;put movements in date order
"RTN","DGPTOLC2",21,0)
 F DGS=0:0 S DGS=$O(DGMD(DGS)) Q:DGS'>0  I $D(^DGPT(PTF,"M",DGMD(DGS),0)) S DGM=^(0),X=$P(DGM,"^",10),DGBS=+$P(DGM,"^",2) W !!,"Movement Date: " D DT W:DGMD(DGS)=1 ?40,"(Discharge 501)" D:DGFEE LOS D BS F DGC=5:1:15 I DGC#10 D C
"RTN","DGPTOLC2",22,0)
 I DG70 S DGM=DG70 W !!,"Discharge Move: (701/2/3 Diagnoses)",! F DGC=10,11,16:1:24 D C
"RTN","DGPTOLC2",23,0)
S S DGF="S" F DGS=0:0 S DGS=$O(^DGPT(PTF,"S",DGS)) Q:DGS'>0  S DGSUR=^(DGS,0),X=+DGSUR W !!,"Surgery Date: " D DT F DGC=8:1:12 D P1
"RTN","DGPTOLC2",24,0)
 K DGF I $D(^DGPT(PTF,"401P")) S DGSUR=^("401P") F DGC=1:1:5 X:'($D(DGF)) "W !!,""Procedure: (401P)"" S DGF=1" D P1
"RTN","DGPTOLC2",25,0)
 F DGS=0:0 S DGS=$O(^DGPT(PTF,"P",DGS)) Q:DGS'>0  S DGSUR=^(DGS,0),X=+DGSUR W !!,"Procedure Date: " D DT F DGC=5:1:9 D P1
"RTN","DGPTOLC2",26,0)
 W:DGFEE !,"Total LOS: ",$S(DGLOS>0:DGLOS,1:"1") W ! D:IOST?1"C-".E CONT Q
"RTN","DGPTOLC2",27,0)
C S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGM,"^",DGC),$$GETDATE^ICDGTDRG(PTF)) Q:+DGPTTMP<0!('$P(DGPTTMP,U,10))  S DGICD=$P(DGPTTMP,U,22,99) D
"RTN","DGPTOLC2",28,0)
 . I $Y>($S($D(IOSL):IOSL,1:66)-4) D CRT W !,"Diagnosis Codes, (cont.)"
"RTN","DGPTOLC2",29,0)
 W:DGC=10 ?4,"DXLS: " W:DGC'=10 ! W ?10,$P(DGICD,"^",3)_" ("_$P(DGICD,"^",1)_")" Q
"RTN","DGPTOLC2",30,0)
P1 S DGPTTMP=$$ICDOP^ICDCODE(+$P(DGSUR,"^",DGC),$$GETDATE^ICDGTDRG(PTF)) Q:+DGPTTMP<0!('$P(DGPTTMP,U,10))  S DGICD=$P(DGPTTMP,U,2,99) Q:DGICD']""  D
"RTN","DGPTOLC2",31,0)
 . I $Y>($S($D(IOSL):IOSL,1:66)-4) D CRT W !,$S('$D(DGF):"Non-OR Procedures",DGF="S":"Surgery",1:"Non-OR Procedures") W " Codes, (cont.)"
"RTN","DGPTOLC2",32,0)
 W !?10,$P(DGICD,"^",4)_" ("_$P(DGICD,"^")_")" Q
"RTN","DGPTOLC2",33,0)
DT Q:X']""  W $TR($$FMTE^XLFDT(X,"5DF")," ","0") S X=$P(X,".",2) I X]"" W "@"_$E(X,1,2)_":"_$E(X_"0000",3,4)
"RTN","DGPTOLC2",34,0)
 Q
"RTN","DGPTOLC2",35,0)
BS S DGBS=$S('DGBS:DGBS,$D(^DIC(42.4,+DGBS,0)):$P(^(0),"^",1),1:"") W !,"Losing Specialty: ",DGBS Q
"RTN","DGPTOLC2",36,0)
LOS F %=3,4 S DGLV=$P(DGM,"^",%)+DGLV
"RTN","DGPTOLC2",37,0)
 S DGLOS=DGLOS-DGLV Q
"RTN","DGPTOLC2",38,0)
CONT F Y=1:1:($S($D(IOSL):IOSL,1:66)-$Y-2) W !
"RTN","DGPTOLC2",39,0)
 R ?20,"Enter <RETURN> to continue",Y:DTIME Q
"RTN","DGPTOLC2",40,0)
DGPRO S X=$O(^DGPM("APTF",PTF,0)),VAIP("E")=$S('$D(^DGPM(+X,0)):"",1:$P(^DGPM(X,0),"^",17))
"RTN","DGPTOLC2",41,0)
 I VAIP("E") D IN5^VADPT S DGPRO=$S($P(VAIP(7),"^",2)]"":$P(VAIP(7),"^",2),1:"Unknown") K VAIP Q
"RTN","DGPTOLC2",42,0)
 S DGPRO="Unknown" K VAIP Q
"RTN","DGPTR0")
0^24^B21534124
"RTN","DGPTR0",1,0)
DGPTR0 ;MJK/JS/ADL - PTF TRANSMISSION ; 01 DEC 87 @0800
"RTN","DGPTR0",2,0)
 ;;5.3;Registration;**114,247,338,342,510**;Aug 13, 1993
"RTN","DGPTR0",3,0)
 ;;ADL;Update for CSV Project;;Mar 27, 2003
"RTN","DGPTR0",4,0)
 ; -- setup control data
"RTN","DGPTR0",5,0)
 ; ssn
"RTN","DGPTR0",6,0)
 S X=$P(DG10,U,9),Y=$S($E(X,10)="P":"P",1:" ")_$E(X_"         ",1,9)
"RTN","DGPTR0",7,0)
 ; -- adm d/t
"RTN","DGPTR0",8,0)
 S X=$P($P(DG0,U,2),"."),Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P($P(DG0,U,2),".",2)_"0000",1,4)
"RTN","DGPTR0",9,0)
 ; -- facility #
"RTN","DGPTR0",10,0)
 S L=3,X=DG0,Z=3 D ENTER S Y=Y_$E($P(X,U,5)_"   ",1,3)
"RTN","DGPTR0",11,0)
 S DGHEAD=Y,Y="    "_Y D HEAD^DGPTR1
"RTN","DGPTR0",12,0)
 ;
"RTN","DGPTR0",13,0)
101 ; -- setup 101 transation
"RTN","DGPTR0",14,0)
 ; control data and name
"RTN","DGPTR0",15,0)
 ;S Y=$S(T1:"C",1:"N")_"101"_DGHEAD,DGNAM=$P(DG10,U,1) D DGNAM S Y=Y_$E($P(DGNAM,",",1)_"           ",1,12)_$J($E($P(DGNAM,",",2),1),1)_$J($E($P($P(DGNAM,",",2)," ",2),1),1)
"RTN","DGPTR0",16,0)
 S Y=$S(T1:"C",1:"N")_"101"_DGHEAD S Y=Y_$$PTFNMFT($P(DG10,U))
"RTN","DGPTR0",17,0)
 ; source of admission
"RTN","DGPTR0",18,0)
 S Y=Y_$S($D(^DIC(45.1,+DG101,0)):$J($P(^(0),U,1),2),1:"  ")
"RTN","DGPTR0",19,0)
 ; xfring fac and suffix
"RTN","DGPTR0",20,0)
 S L=3,X=DG101,Z=5 D ENTER S Y=Y_$E($P(X,U,6)_"   ",1,3)
"RTN","DGPTR0",21,0)
 ; source of payment
"RTN","DGPTR0",22,0)
 S Y=Y_$S("A0"[$P(DG0,U,5):" ",1:$J($P(DG101,U,3),1))
"RTN","DGPTR0",23,0)
 ;POW Location
"RTN","DGPTR0",24,0)
 S Y=Y_$S($P(DG52,U,5)="N":1,$P(DG52,U,5)'="Y":3,$P(DG52,U,6)>0&($P(DG52,U,6)<7):3+$P(DG52,U,6),$P(DG52,U,6)>6&($P(DG52,U,6)<9):$C($P(DG52,U,6)+58),1:" ")
"RTN","DGPTR0",25,0)
 ;marital status, sex
"RTN","DGPTR0",26,0)
 S Y=Y_$S($D(^DIC(11,+$P(DG10,U,5),0)):$E(^(0),1),1:" ")_$J($P(DG10,U,2),1)
"RTN","DGPTR0",27,0)
 ;  date of birth
"RTN","DGPTR0",28,0)
 S DGDOB=$P(DG10,U,3)\1,Y=Y_$E(DGDOB,4,5)_$E(DGDOB,6,7)_(1700+$E(DGDOB,1,3))
"RTN","DGPTR0",29,0)
 ; period of service
"RTN","DGPTR0",30,0)
 S DGPOS=$S($D(^DIC(21,+$P(DG32,U,3),0)):$P(^(0),U,3),1:"")
"RTN","DGPTR0",31,0)
 I $D(^DGPM(+$O(^DGPM("APTF",J,0)),"ODS")),+^("ODS") S DGPOS=6
"RTN","DGPTR0",32,0)
 ;-- if non vet admitting eligibility make POS 9
"RTN","DGPTR0",33,0)
 S DGPOS=$$CKPOS^DGPTUTL($P($G(^DGPT(PTF,101)),U,8),DGPOS)
"RTN","DGPTR0",34,0)
 S X=DGPOS,Z=1,L=2 D ENTER
"RTN","DGPTR0",35,0)
 ; agent orange
"RTN","DGPTR0",36,0)
 S G=" " S DGAO=$P(DG321,U,2) S:DGPOS=7 G=$S($P(DG321,U)'="Y":1,DGAO="N":2,DGAO="Y":3,1:4) S:(DGAO="Y")&($P(DG321,U,13)="K") G=5
"RTN","DGPTR0",37,0)
 ; rad exposure
"RTN","DGPTR0",38,0)
 S E=" " I "^0^2^4^5^7^8^Z^"[(U_DGPOS_U) S DGNT=$P(DG321,U,12),E=$S($P(DG321,U,3)'="Y":1,DGNT="N":2,DGNT="T":3,DGNT="B":4,1:" ")
"RTN","DGPTR0",39,0)
 S Y=Y_G_E K DGPOS,G,E
"RTN","DGPTR0",40,0)
 ; state code
"RTN","DGPTR0",41,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),0)):^(0),1:""),L=2,Z=3 D ENTER0
"RTN","DGPTR0",42,0)
 ; county code
"RTN","DGPTR0",43,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),1,+$P(DG11,U,7),0)):^(0),1:""),L=3,Z=3 D ENTER0
"RTN","DGPTR0",44,0)
 ; zip code
"RTN","DGPTR0",45,0)
 S X=DG11,Z=6,L=5 D ENTER
"RTN","DGPTR0",46,0)
 ; means test
"RTN","DGPTR0",47,0)
 S Y=Y_$S($P(DG70,U,26)="Y":"AS",1:$E($P(DG0,U,10)_"  ",1,2))
"RTN","DGPTR0",48,0)
 ; income
"RTN","DGPTR0",49,0)
 I $L($P(DG101,U,7))>6 S Y=Y_"999999"
"RTN","DGPTR0",50,0)
 E  S X=DG101,Z=7,L=6 D ENTER0
"RTN","DGPTR0",51,0)
 ;MST
"RTN","DGPTR0",52,0)
 S X=$$GETSTAT^DGMSTAPI(+DG0) S Y=Y_$S(X<0:"U",1:$P(X,"^",2))
"RTN","DGPTR0",53,0)
 D FILL^DGPTR2,SAVE
"RTN","DGPTR0",54,0)
 I T1 S Y=$E(Y,1,52)_" "_$E(Y,54,125)
"RTN","DGPTR0",55,0)
 ;
"RTN","DGPTR0",56,0)
P401 ; -- setup 401P transaction
"RTN","DGPTR0",57,0)
 G 401:'$D(^DGPT(J,"401P"))!(T1) S DG41=^("401P"),Y=$S(T1:"C",1:"N")_"401"_DGHEAD_"P"_"           "
"RTN","DGPTR0",58,0)
 S DG41=$S($D(^DGPT(J,"401P")):^("401P"),1:"")
"RTN","DGPTR0",59,0)
 S L=1 F K=1:1:5 S:'$P(DG41,U,K) DG41=$P(DG41,U,1,K-1)_U_$P(DG41,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTR0",60,0)
 F I=1:1:5 S DGPTTMP=$$ICDOP^ICDCODE(+$P(DG41,U,I),$$GETDATE^ICDGTDRG(J)),Y=Y_$S(+DGPTTMP>0:$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTR0",61,0)
 I $E(Y,40)'=" " D FILL^DGPTR2,SAVE
"RTN","DGPTR0",62,0)
 ;
"RTN","DGPTR0",63,0)
401 ; -- setup 401 transactions
"RTN","DGPTR0",64,0)
 G 501:'$D(^DGPT(J,"S")) K ^UTILITY($J,"S") S I=0
"RTN","DGPTR0",65,0)
SUR S I=$O(^DGPT(J,"S",I)) G 501:'I S DGSUR=^(I,0),DGAUX=$S($D(^DGPT(J,"S",I,300)):^(300),1:"") G SUR:'DGSUR
"RTN","DGPTR0",66,0)
 G SUR:DGSUR<T1!(DGSUR>T2) S DGSUD=+^(0)\1,^UTILITY($J,"S",DGSUD)=$S($D(^UTILITY($J,"S",DGSUD)):^(DGSUD),1:0)+1,F=$S(DGSUD<2871000:0,1:1)
"RTN","DGPTR0",67,0)
 I ^UTILITY($J,"S",DGSUD)>$S(F:3,1:2) W !,"More than ",$S(F:"three",1:"two")," surgeries on same date" S DGERR=1 Q
"RTN","DGPTR0",68,0)
 S Y=$S(T1:"C",1:"N")_"40"_^(DGSUD)_DGHEAD_$E(DGSUD,4,5)_$E(DGSUD,6,7)_$E(DGSUD,2,3)_$E($P(+DGSUR,".",2)_"0000",1,4)_$S($D(^DIC(45.3,+$P(DGSUR,U,3),0)):$P(^(0),U,1),1:"  ")
"RTN","DGPTR0",69,0)
 S L=1,X=DGSUR F Z=4:1:7 D ENTER
"RTN","DGPTR0",70,0)
 S L=1 F K=8:1:12 S:'$P(DGSUR,U,K) DGSUR=$P(DGSUR,U,1,K-1)_U_$P(DGSUR,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTR0",71,0)
 F K=8:1:12 S DGPTTMP=$$ICDOP^ICDCODE(+$P(DGSUR,U,K),$$GETDATE^ICDGTDRG(J)),Y=Y_$S(+DGPTTMP>0:$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTR0",72,0)
 ;-- att phy
"RTN","DGPTR0",73,0)
 S Y=Y_"         "
"RTN","DGPTR0",74,0)
 ;-- additional ptf question
"RTN","DGPTR0",75,0)
 S Y=Y_$E($P(DGAUX,U)_" ")
"RTN","DGPTR0",76,0)
 K DGAUX
"RTN","DGPTR0",77,0)
 D FILL^DGPTR2,SAVE G SUR
"RTN","DGPTR0",78,0)
501 G 501^DGPTR2
"RTN","DGPTR0",79,0)
 Q
"RTN","DGPTR0",80,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTR0",81,0)
 Q
"RTN","DGPTR0",82,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("000000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTR0",83,0)
 Q
"RTN","DGPTR0",84,0)
SAVE D START^DGPTR1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTR0",85,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTR0",86,0)
Q Q
"RTN","DGPTR0",87,0)
DGNAM S X=DGNAM I X?.E.P F I=1:1:$L(X) S Z=$E(X,I) Q:Z=","  S:Z?.P&(Z]"") X=$E(X,1,I-1)_$E(X,I+1,$L(X)),I=I-1 Q:X'?.E.P
"RTN","DGPTR0",88,0)
 I X?.E.L D UP^DGHELP
"RTN","DGPTR0",89,0)
 S DGNAM=X
"RTN","DGPTR0",90,0)
 Q
"RTN","DGPTR0",91,0)
 ;
"RTN","DGPTR0",92,0)
PTFNMFT(DG10) ;this function will format the name of the patient for
"RTN","DGPTR0",93,0)
 ; transmission of the 101 record to Austin. In addition, this
"RTN","DGPTR0",94,0)
 ; function will be used by OPC so that the format will be consistent
"RTN","DGPTR0",95,0)
 ; for OPC and PTF.
"RTN","DGPTR0",96,0)
 ;  INPUT :   DG10 - .01 field from the patient record.
"RTN","DGPTR0",97,0)
 ;  OUTPUT:   name in the format proper format.
"RTN","DGPTR0",98,0)
 ;        A = <12 - characters of last name padded with blanks>
"RTN","DGPTR0",99,0)
 ;        B = <1  - first initial of fist name>
"RTN","DGPTR0",100,0)
 ;        C = <1  - first initial of middle name>
"RTN","DGPTR0",101,0)
 ;      returns :ABC <14 - characters>
"RTN","DGPTR0",102,0)
 N X,I
"RTN","DGPTR0",103,0)
 S DGNAM=DG10 D DGNAM
"RTN","DGPTR0",104,0)
 Q $E($P(DGNAM,",",1)_"           ",1,12)_$J($E($P(DGNAM,",",2),1),1)_$J($E($P($P(DGNAM,",",2)," ",2),1),1)
"RTN","DGPTR0",105,0)
 ;
"RTN","DGPTR2")
0^30^B16467578
"RTN","DGPTR2",1,0)
DGPTR2 ;ALB/JDS/MJK/MTC/ADL - ALB/BOK  PTF TRANSMISSION ; 01 DEC 87 @0800
"RTN","DGPTR2",2,0)
 ;;5.3;Registration;**183,338,423,510**;Aug 13, 1993
"RTN","DGPTR2",3,0)
 ;;ADL;Update for CSV Project;;Mar 27,2003
"RTN","DGPTR2",4,0)
501 ; -- setup 501 transactions
"RTN","DGPTR2",5,0)
 K DGCMVT I T2'=9999999 S DGCMVT=$O(^DGPT(J,"M","AM",+$P(T2,".")_".2359")),DGCMVT=$S('DGCMVT:1,$O(^(DGCMVT,0)):$O(^(0)),1:1)
"RTN","DGPTR2",6,0)
 F I=0:0 S I=$O(^DGPT(J,"M",I)) G 535:I'>0 I $D(^(I,0)) D
"RTN","DGPTR2",7,0)
 . S DGM=^(0),DGSC=$P(DGM,U,18),DGAO=$P(DGM,U,26),DGIR=$P(DGM,U,27),DGEC=$P(DGM,U,28),DGMST=$P(DGM,U,29),DGHNC=$P(DGM,U,30),DGTD=$P(DGM,U,10)
"RTN","DGPTR2",8,0)
 . S:$D(DGCMVT) DGTD=$S(I=DGCMVT:$P(T2,".")_".2359",1:DGTD)
"RTN","DGPTR2",9,0)
 . I $P(DGM,U,17)'="n",DGTD,DGTD'<T1,DGTD'>T2 D MOV
"RTN","DGPTR2",10,0)
MOV S DGCDR=$P(DGM,U,16),DGM=$P(DGM,U,1,9)_U_$P(DGM,U,11,15),L=1 F Z=5:1:14 S:'$P(DGM,U,Z) DGM=$P(DGM,U,1,Z-1)_U_$P(DGM,U,Z+1,99) S:'$P(DGM,U,Z) Z=Z-1 S L=L+1 Q:L=10
"RTN","DGPTR2",11,0)
 S Y=$S(T1:"C",1:"N")_"501"_DGHEAD,X=$P(DGTD,".")_"       ",Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P(DGTD,".",2)_"0000",1,4)
"RTN","DGPTR2",12,0)
 S Z=DGCDR D CDR
"RTN","DGPTR2",13,0)
 S L=2,X=DGM,Z=2 D ENTER0
"RTN","DGPTR2",14,0)
 ; convert pass, leave days >999 to 999
"RTN","DGPTR2",15,0)
 S L=3 F Z=3,4 S:$P(X,U,Z)>999 $P(X,U,Z)=999 D ENTER0
"RTN","DGPTR2",16,0)
 S L=1,X=DG57,Z=4 D ENTER S:I=1 DG502=Y
"RTN","DGPTR2",17,0)
 F Z=5:1:9 S DGPTTMP=$$ICDDX^ICDCODE($P(DGM,U,Z),$$GETDATE^ICDGTDRG(J)) D
"RTN","DGPTR2",18,0)
 . S F=$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,2),1:"   ."),F=$P(F,".",1)_$E($P(F,".",2)_"    ",1,3),F=F_$E("      ",1,7-$L(F)),Y=Y_F
"RTN","DGPTR2",19,0)
 S Y=Y_"         "
"RTN","DGPTR2",20,0)
 S X=""
"RTN","DGPTR2",21,0)
 I 'T1 S Z=$S(I=1:+$O(^DGPT(J,535,"ADC",0)),1:+$O(^DGPT(J,535,"AM",DGTD-.0000001))) I $D(^DGPT(J,535,+$O(^(Z,0)),0)) S X=^(0)
"RTN","DGPTR2",22,0)
 I T1 S Z=+$O(^DGPT(J,535,"AM",DGTD-.0000001)) S:'Z Z=+$O(^DGPT(J,535,"ADC",0)) I $D(^DGPT(J,535,+$O(^(Z,0)),0)) S X=^(0)
"RTN","DGPTR2",23,0)
 S Z=$P(X,U,16) D CDR
"RTN","DGPTR2",24,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTR2",25,0)
 ; bed occupant
"RTN","DGPTR2",26,0)
 I T1 S Y=Y_$S(I=1:$E($P(DG70,U,14)_" "),$P(+DGTD,".")=$P(T2,"."):5,1:1)
"RTN","DGPTR2",27,0)
 I 'T1 S Y=Y_$S(I=1:$E($P(DG70,U,14)_" "),1:" ")
"RTN","DGPTR2",28,0)
 ;-- additional ptf questions
"RTN","DGPTR2",29,0)
 S DGAUX=$S($D(^DGPT(J,"M",I,300)):^(300),1:"")
"RTN","DGPTR2",30,0)
 D ADDQUES
"RTN","DGPTR2",31,0)
 ;-- sc related care
"RTN","DGPTR2",32,0)
 S Y=Y_$E(DGSC_" ")
"RTN","DGPTR2",33,0)
 ;-- ao related care
"RTN","DGPTR2",34,0)
 S Y=Y_$E(DGAO_" ")
"RTN","DGPTR2",35,0)
 ;-- ir related care
"RTN","DGPTR2",36,0)
 S Y=Y_$E(DGIR_" ")
"RTN","DGPTR2",37,0)
 ;-- ec related care
"RTN","DGPTR2",38,0)
 S Y=Y_$E(DGEC_" ")
"RTN","DGPTR2",39,0)
 ;-- mst related care
"RTN","DGPTR2",40,0)
 S Y=Y_$E(DGMST_" ")
"RTN","DGPTR2",41,0)
 ;-- Head/Neck CA related care
"RTN","DGPTR2",42,0)
 S Y=Y_$E(DGHNC_" ")
"RTN","DGPTR2",43,0)
 K DGAUX,DGDRUG,DGSC,DGAO,DGIR,DGEC,DGMST,DGHNC
"RTN","DGPTR2",44,0)
 D FILL^DGPTR2,SAVE
"RTN","DGPTR2",45,0)
 Q
"RTN","DGPTR2",46,0)
535 ; -- do 535's
"RTN","DGPTR2",47,0)
 D 535^DGPTR3
"RTN","DGPTR2",48,0)
 ;
"RTN","DGPTR2",49,0)
PROC ; -- setup 601 transactions
"RTN","DGPTR2",50,0)
 K ^UTILITY($J,"PROC") S I=0
"RTN","DGPTR2",51,0)
601 S I=$O(^DGPT(J,"P",I)) G 701:I'>0 S (X,DGPROC)=^(I,0) G 601:'DGPROC
"RTN","DGPTR2",52,0)
 G 601:DGPROC<T1!(DGPROC>T2) S DGPROCD=+^DGPT(J,"P",I,0),^UTILITY($J,"PROC",DGPROCD)=$S($D(^UTILITY($J,"PROC",DGPROCD)):^(DGPROCD),1:0)+1
"RTN","DGPTR2",53,0)
 I ^UTILITY($J,"PROC",DGPROCD)>1 W !,"More than one procedure record on same date/time" S DGERR=1 Q
"RTN","DGPTR2",54,0)
 S Y=$S('T1:"N",1:"C")_"60"_^(DGPROCD)_DGHEAD_$E(DGPROCD,4,7)_$E(DGPROCD,2,3)_$E($P(+X,".",2)_"0000",1,4) S L=2,Z=2 D ENTER0 S L=1,Z=3 D ENTER S L=3,Z=4 D ENTER0
"RTN","DGPTR2",55,0)
 S L=1 F K=5:1:9 S:'$P(DGPROC,U,K) DGPROC=$P(DGPROC,U,1,K-1)_U_$P(DGPROC,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTR2",56,0)
 F K=5:1:9 S DGPTTMP=$$ICDOP^ICDCODE(+$P(DGPROC,U,K),$$GETDATE^ICDGTDRG(J)) D
"RTN","DGPTR2",57,0)
 . S Y=Y_$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTR2",58,0)
 D FILL,SAVE G 601
"RTN","DGPTR2",59,0)
 Q
"RTN","DGPTR2",60,0)
 ;
"RTN","DGPTR2",61,0)
701 ; -- setup 701 transaction
"RTN","DGPTR2",62,0)
 D 701^DGPTR4 Q
"RTN","DGPTR2",63,0)
 ;
"RTN","DGPTR2",64,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTR2",65,0)
 Q
"RTN","DGPTR2",66,0)
 ;
"RTN","DGPTR2",67,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTR2",68,0)
 Q
"RTN","DGPTR2",69,0)
 ;
"RTN","DGPTR2",70,0)
SAVE D START^DGPTR1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTR2",71,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTR2",72,0)
Q Q
"RTN","DGPTR2",73,0)
 ;
"RTN","DGPTR2",74,0)
FILL F K=$L(Y):1:124 S Y=Y_" "
"RTN","DGPTR2",75,0)
 Q
"RTN","DGPTR2",76,0)
 ;
"RTN","DGPTR2",77,0)
CDR S Y=Y_$E($P(Z,".")_"0000",1,4)_$E($P(Z,".",2)_"00",1,2)
"RTN","DGPTR2",78,0)
 Q
"RTN","DGPTR2",79,0)
ADDQUES ;-- additional PTF questions load records for trans 501/701
"RTN","DGPTR2",80,0)
 S DGDRUG=$S($D(^DIC(45.61,+$P(DGAUX,U,4),0)):$P(^(0),U,2),1:"    ")
"RTN","DGPTR2",81,0)
 S Y=Y_$E($P(DGAUX,U,3)_" ")_$E($P(DGAUX,U,2)_" ")_$J($P(DGDRUG,U),4)
"RTN","DGPTR2",82,0)
 S Y=Y_$E($P(DGAUX,U,5)_" ")
"RTN","DGPTR2",83,0)
 S DGT=0,X=$P(DGAUX,U,6) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTR2",84,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTR2",85,0)
 S DGT=0,X=$P(DGAUX,U,7) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTR2",86,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTR2",87,0)
 Q
"RTN","DGPTR4")
0^25^B16200688
"RTN","DGPTR4",1,0)
DGPTR4 ;ALB/JDS/MJK/MTC/ADL - ALB/BOK  PTF TRANSMISSION ; 01 DEC 87 @0800
"RTN","DGPTR4",2,0)
 ;;5.3;Registration;**338,423,415,510**;Aug 13, 1993
"RTN","DGPTR4",3,0)
 ;;ADL;Update for CSV Project;;Mar 27, 2003
"RTN","DGPTR4",4,0)
701 ; -- setup 701 transaction
"RTN","DGPTR4",5,0)
 S Y=$S(T1:"C",1:"N")_"701"_DGHEAD,DGDDX=$P(+DG70,".")_"       ",Y=Y_$E(DGDDX,4,5)_$E(DGDDX,6,7)_$E(DGDDX,2,3)_$E($P(+DG70,".",2)_"0000",1,4)
"RTN","DGPTR4",6,0)
 S X=DG70,(L,Z)=2 D ENTER0 K DGDDX
"RTN","DGPTR4",7,0)
 S X=DG70 I "467"[($P(X,U,3)\1) S Y=Y_$P(X,U,3)_"         " G J
"RTN","DGPTR4",8,0)
 S L=1 F Z=3:1:5 D ENTER
"RTN","DGPTR4",9,0)
 S Y=Y_$S($D(^DIC(45.6,+$P(X,U,6),0)):$P(^(0),U,2),1:" "),L=3,Z=12 D ENTER S Y=Y_$E($P(X,U,13)_"   ",1,3)
"RTN","DGPTR4",10,0)
J S L=3,Z=8 D ENTER0
"RTN","DGPTR4",11,0)
 S Y=Y_"X"_$J($P(DG70,U,9),1)
"RTN","DGPTR4",12,0)
 S DGPTDAT=$$GETDATE^ICDGTDRG(J)
"RTN","DGPTR4",13,0)
 S DGPTTMP=$$ICDDX^ICDCODE(+$P(DG70,U,10),DGPTDAT) S DGXLS=$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,2),1:""),Y=Y_$S(DGXLS[".":$J($P(DGXLS,".",1),3)_$E($P(DGXLS,".",2)_"   ",1,3),1:$J(DGXLS,6))_" "
"RTN","DGPTR4",14,0)
 S L=$P(DG70,U,16,24) S DG702="" F K=1:1:9 S DGPTTMP=$$ICDDX^ICDCODE(+$P(L,U,K),DGPTDAT) I +DGPTTMP>0&($P(DGPTTMP,U,10)) S DG702=DG702_$P(DGPTTMP,U,2)_U
"RTN","DGPTR4",15,0)
 S Y=Y_$S(DG702']"":"X",1:" ")
"RTN","DGPTR4",16,0)
 ; -- get phy cdr @ d/c
"RTN","DGPTR4",17,0)
 S X="",Z=+$O(^DGPT(J,535,"AM",DG70-.0000001)) I $D(^DGPT(J,535,+$O(^(Z,0)),0)) S X=^(0)
"RTN","DGPTR4",18,0)
 ; -- set phy cdr
"RTN","DGPTR4",19,0)
 S Z=$P(X,U,16) D CDR
"RTN","DGPTR4",20,0)
 ; -- set phy spec
"RTN","DGPTR4",21,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTR4",22,0)
 S X=$S($P(DG3,U)="Y":$$RTEN($P(DG3,U,2)),1:"0"),L=3,Z=1 D ENTER0
"RTN","DGPTR4",23,0)
 ;-- additional ptf questions
"RTN","DGPTR4",24,0)
 S DGAUX=$S($D(^DGPT(J,300)):^(300),1:"")
"RTN","DGPTR4",25,0)
 D ADDQUES
"RTN","DGPTR4",26,0)
 K DGAUX,DGDRUG
"RTN","DGPTR4",27,0)
 ;-- sc,ao,ir,ec questions
"RTN","DGPTR4",28,0)
 S X=DG70
"RTN","DGPTR4",29,0)
 ;-- sc
"RTN","DGPTR4",30,0)
 S Y=Y_$E($P(DG70,U,25)_" ")
"RTN","DGPTR4",31,0)
 ;-- ao
"RTN","DGPTR4",32,0)
 S Y=Y_$E($P(DG70,U,26)_" ")
"RTN","DGPTR4",33,0)
 ;-- ir
"RTN","DGPTR4",34,0)
 S Y=Y_$E($P(DG70,U,27)_" ")
"RTN","DGPTR4",35,0)
 ;-- ec
"RTN","DGPTR4",36,0)
 S Y=Y_$E($P(DG70,U,28)_" ")
"RTN","DGPTR4",37,0)
 ;-- mst
"RTN","DGPTR4",38,0)
 S Y=Y_$E($P(DG70,U,29)_" ")
"RTN","DGPTR4",39,0)
 ;-- Head/Neck CA
"RTN","DGPTR4",40,0)
 S Y=Y_$E($P(DG70,U,30)_" ")
"RTN","DGPTR4",41,0)
 D ETHNIC
"RTN","DGPTR4",42,0)
 D RACE
"RTN","DGPTR4",43,0)
 D FILL
"RTN","DGPTR4",44,0)
 I T1 F K=41:1:55,65:1:73 S Y=$E(Y,1,K-1)_" "_$E(Y,K+1,125)
"RTN","DGPTR4",45,0)
 I T1 D CEN^DGPTR1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1 Q
"RTN","DGPTR4",46,0)
 I 'T1 D SAVE
"RTN","DGPTR4",47,0)
702 ;
"RTN","DGPTR4",48,0)
 Q:DG702']""
"RTN","DGPTR4",49,0)
 S Y="N702"_$E(Y,5,40)
"RTN","DGPTR4",50,0)
 F K=1:1:9 S F=$P(DG702,U,K),F=$P(F,".",1)_$E($P(F,".",2)_"   ",1,3),F=F_$E("      ",1,7-$L(F)),Y=Y_F
"RTN","DGPTR4",51,0)
 D FILL
"RTN","DGPTR4",52,0)
 I 'DGERR S ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTR4",53,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTR4",54,0)
 S DG702=$P(DG702,U,6,9)
"RTN","DGPTR4",55,0)
 Q
"RTN","DGPTR4",56,0)
 ;
"RTN","DGPTR4",57,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTR4",58,0)
 Q
"RTN","DGPTR4",59,0)
 ;
"RTN","DGPTR4",60,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTR4",61,0)
 Q
"RTN","DGPTR4",62,0)
 ;
"RTN","DGPTR4",63,0)
SAVE D START^DGPTR1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTR4",64,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTR4",65,0)
Q Q
"RTN","DGPTR4",66,0)
 ;
"RTN","DGPTR4",67,0)
FILL F K=$L(Y):1:124 S Y=Y_" "
"RTN","DGPTR4",68,0)
 Q
"RTN","DGPTR4",69,0)
 ;
"RTN","DGPTR4",70,0)
CDR S Y=Y_$E($P(Z,".")_"0000",1,4)_$E($P(Z,".",2)_"00",1,2)
"RTN","DGPTR4",71,0)
 Q
"RTN","DGPTR4",72,0)
ADDQUES ;-- additional PTF questions load records for trans 501/701
"RTN","DGPTR4",73,0)
 S DGDRUG=$S($D(^DIC(45.61,+$P(DGAUX,U,4),0)):$P(^(0),U,2),1:"    ")
"RTN","DGPTR4",74,0)
 S Y=Y_$E($P(DGAUX,U,3)_" ")_$E($P(DGAUX,U,2)_" ")_$J($P(DGDRUG,U),4)
"RTN","DGPTR4",75,0)
 S Y=Y_$E($P(DGAUX,U,5)_" ")
"RTN","DGPTR4",76,0)
 S DGT=0,X=$P(DGAUX,U,6) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTR4",77,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTR4",78,0)
 S DGT=0,X=$P(DGAUX,U,7) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTR4",79,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTR4",80,0)
 Q
"RTN","DGPTR4",81,0)
RTEN(X) ; This function will round X to the nearest mulitple of ten.
"RTN","DGPTR4",82,0)
 ; 0-4 ->DOWN; 5-9->UP
"RTN","DGPTR4",83,0)
 Q (X\10)*10+$S(X#10>4:10,1:0)
"RTN","DGPTR4",84,0)
ETHNIC ;-- Ethnicity (use first active value)
"RTN","DGPTR4",85,0)
 N NODE,NUM,ETHNIC,I,X
"RTN","DGPTR4",86,0)
 S ETHNIC=""
"RTN","DGPTR4",87,0)
 S I=0
"RTN","DGPTR4",88,0)
 S NUM=1
"RTN","DGPTR4",89,0)
 F  S I=+$O(DG06(I)) Q:'I  D  Q:NUM>1
"RTN","DGPTR4",90,0)
 .S NODE=$G(DG06(I,0))
"RTN","DGPTR4",91,0)
 .Q:('NODE)!('$D(^DIC(10.2,+NODE,0)))
"RTN","DGPTR4",92,0)
 .Q:$$INACTIVE^DGUTL4(+NODE)
"RTN","DGPTR4",93,0)
 .S X=$$PTR2CODE^DGUTL4(+NODE,2,4)
"RTN","DGPTR4",94,0)
 .S ETHNIC=$S(X="":" ",1:X)
"RTN","DGPTR4",95,0)
 .S X=$$PTR2CODE^DGUTL4(+$P(NODE,"^",2),3,4)
"RTN","DGPTR4",96,0)
 .S ETHNIC=ETHNIC_$S(X="":" ",1:X)
"RTN","DGPTR4",97,0)
 .S NUM=NUM+1
"RTN","DGPTR4",98,0)
 S Y=Y_$S(ETHNIC="":"  ",1:ETHNIC)
"RTN","DGPTR4",99,0)
 Q
"RTN","DGPTR4",100,0)
RACE ;-- Race (use first 6 active values)
"RTN","DGPTR4",101,0)
 N NODE,NUM,RACE,I,X
"RTN","DGPTR4",102,0)
 S RACE=""
"RTN","DGPTR4",103,0)
 S I=0
"RTN","DGPTR4",104,0)
 S NUM=1
"RTN","DGPTR4",105,0)
 F  S I=+$O(DG02(I)) Q:'I  D  Q:NUM>6
"RTN","DGPTR4",106,0)
 .S NODE=$G(DG02(I,0))
"RTN","DGPTR4",107,0)
 .Q:('NODE)!('$D(^DIC(10,+NODE,0)))
"RTN","DGPTR4",108,0)
 .Q:$$INACTIVE^DGUTL4(+NODE)
"RTN","DGPTR4",109,0)
 .S X=$$PTR2CODE^DGUTL4(+NODE,1,4)
"RTN","DGPTR4",110,0)
 .S RACE=RACE_$S(X="":" ",1:X)
"RTN","DGPTR4",111,0)
 .S X=$$PTR2CODE^DGUTL4(+$P(NODE,"^",2),3,4)
"RTN","DGPTR4",112,0)
 .S RACE=RACE_$S(X="":" ",1:X)
"RTN","DGPTR4",113,0)
 .S NUM=NUM+1
"RTN","DGPTR4",114,0)
 S X="" S $P(X," ",12)=""
"RTN","DGPTR4",115,0)
 S RACE=$S(RACE="":"  ",1:RACE)_X
"RTN","DGPTR4",116,0)
 S Y=Y_$E(RACE,1,12)
"RTN","DGPTR4",117,0)
 Q
"RTN","DGPTSUD1")
0^31^B5869416
"RTN","DGPTSUD1",1,0)
DGPTSUD1 ;ALB/AS/ADL - Look for the same DRG in consecutive RAM movements ; Feb 23 87
"RTN","DGPTSUD1",2,0)
 ;;5.3;Registration;**510**;Aug 13, 1993
"RTN","DGPTSUD1",3,0)
 ;;ADL;Update for CSV Project;;Mar 27, 2003
"RTN","DGPTSUD1",4,0)
 ;
"RTN","DGPTSUD1",5,0)
 ;called from ONE+2^DGPTSUDO
"RTN","DGPTSUD1",6,0)
 F I=0:0 S I=$O(^DGPT(PTF,"M",I)) Q:I'>0  I $D(^DGPT(PTF,"M",I,"P")) S DGNODE=^("P"),DGSUDO(+$P(DGNODE,"^",3))=I_"^"_$P(DGNODE,"^",1)
"RTN","DGPTSUD1",7,0)
 G Q:'$D(DGSUDO) S (DGSUNX,DGSUPR)=$O(DGSUDO(0)) F XX=0:0 S DGSUNX=$O(DGSUDO(DGSUPR)) Q:DGSUNX'>0  D SAME
"RTN","DGPTSUD1",8,0)
Q K DGSUPR,DGSUNX,DGNODE,DGSUDO,DG1,DG2,DGMV1,DGMV2,DGSUB,DGSUR,DGSURDT,%,I,J,X1,X2 Q
"RTN","DGPTSUD1",9,0)
SAME I $P(DGSUDO(DGSUPR),"^",2)']""!($P(DGSUDO(DGSUPR),"^",2)'=$P(DGSUDO(DGSUNX),"^",2)) S DGSUPR=DGSUNX Q
"RTN","DGPTSUD1",10,0)
 S DG1=+$P(DGSUDO(DGSUPR),"^",1),DG2=+$P(DGSUDO(DGSUNX),"^",1),DGMV1=$S($D(^DGPT(PTF,"M",+DG1,"P")):^("P"),1:""),DGMV2=$S($D(^DGPT(PTF,"M",+DG2,"P")):^("P"),1:"")
"RTN","DGPTSUD1",11,0)
 ;Fiscal year 89 discharges are checked for a surgery performed while on Surgery Service if the DRG is a surgical DRG
"RTN","DGPTSUD1",12,0)
 G 88:'$P($$DRG^ICDGTDRG($P(DGSUDO(DGSUNX),"^",2),$$GETDATE^ICDGTDRG(PTF)),"^",6)
"RTN","DGPTSUD1",13,0)
 I $D(^DGPT(PTF,70)),$P(^DGPT(PTF,70),"^",1)<2881000 G 88
"RTN","DGPTSUD1",14,0)
 I $P(DGMV1,"^",2)'="S"&($P(DGMV2,"^",2)'="S") G 88
"RTN","DGPTSUD1",15,0)
 I $P(DGMV1,"^",2)="S" S I=DGADM F J=0:0 S J=$O(DGSUDO(J)) Q:J=DGSUPR!(J'>0)  S I=J
"RTN","DGPTSUD1",16,0)
 S X1=$S($P(DGMV1,"^",2)="S":I,1:DGSUPR),X2=$S($P(DGMV1,"^",2)="S":DGSUPR,1:DGSUNX),X1=$P(X1,".",1),X2=$P(X2,".",1)_.99,DGSUR=0
"RTN","DGPTSUD1",17,0)
 F I=0:0 S I=$O(^DGPT(PTF,"S",I)) Q:I'>0  S DGSURDT=$S($D(^DGPT(PTF,"S",I,0)):+^(0),1:9999999) I X1<DGSURDT&(DGSURDT<X2) S DGSUR=1 Q
"RTN","DGPTSUD1",18,0)
 I DGSUR S DGSUB=$S($P(DGMV1,"^",2)="S":DG1,1:DG2) G KILL
"RTN","DGPTSUD1",19,0)
88 S DGSUB=$S($P(DGMV1,"^",4)>$P(DGMV2,"^",4):DG1,1:DG2)
"RTN","DGPTSUD1",20,0)
KILL S $P(^DGPT(PTF,"M",DGSUB,"P"),"^",4)=$P(DGMV1,"^",4)+$P(DGMV2,"^",4)
"RTN","DGPTSUD1",21,0)
 I DGSUB=DG1 S $P(^DGPT(PTF,"M",DG1,"P"),"^",6)=$P(DGMV2,"^",6) K ^DGPT(PTF,"M",DG2,"P"),DGSUDO(DGSUNX) Q
"RTN","DGPTSUD1",22,0)
 K ^DGPT(PTF,"M",DG1,"P"),DGSUDO(DGSUPR) S DGSUPR=DGSUNX Q
"RTN","DGPTSUDO")
0^27^B21187821
"RTN","DGPTSUDO",1,0)
DGPTSUDO ;ALB/MTC - PTF UPDATE TRANSFER DRG NODE; 30 MAR 89@09 ; 3/12/02 12:14pm
"RTN","DGPTSUDO",2,0)
 ;;5.3;Registration;**441,510**;Aug 13, 1993
"RTN","DGPTSUDO",3,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTSUDO",4,0)
UTIL S ^UTILITY($J,"T",(9999999.999999-$E(I,1,14)))=K_"^"_$S($D(^DIC(45.7,J,0)):$P(^(0),"^",2),1:0)_"^"_X_"^^"_$P(Y,"^",8)
"RTN","DGPTSUDO",5,0)
 Q
"RTN","DGPTSUDO",6,0)
SUDO1 K ^UTILITY($J,"T"),T
"RTN","DGPTSUDO",7,0)
 F I=0:0 S I=$O(^DGPM("ATS",DFN,DGPMCA,I)) Q:I'>0  D
"RTN","DGPTSUDO",8,0)
 . S J=$O(^DGPM("ATS",DFN,DGPMCA,I,0)) I J D
"RTN","DGPTSUDO",9,0)
 .. S K=+$O(^(J,0)) I $D(^DGPM(K,0)) S Y=^(0),X=$S($D(^("PTF")):$P(^("PTF"),"^",2),1:"") I $D(^DGPT(PTF,"M",+X,0))!($D(^DGPM("APHY",+$P(Y,"^",14),K))) D UTIL
"RTN","DGPTSUDO",10,0)
 Q:'$D(^UTILITY($J,"T"))
"RTN","DGPTSUDO",11,0)
VARS I '$D(^UTILITY($J,"T")) G SUDO1
"RTN","DGPTSUDO",12,0)
 S (DGPRD,DGNXD)=$O(^UTILITY($J,"T",0)) G Q:DGPRD'>0 S T(DGPRD)=^(DGPRD),(DGEXP,DGDMS,DGTRS,DGTLOS,DGLOS,DGDAT)=0,DGPT(70)=$S($D(^DGPT(PTF,70)):^(70),1:""),SEX=$P(^DPT(DFN,0),U,2),DOB=$P(^(0),U,3),(DGDX,DGNSV,DGPSV)=""
"RTN","DGPTSUDO",13,0)
 S DGDAT=$$GETDATE^ICDGTDRG(PTF)
"RTN","DGPTSUDO",14,0)
 K DGSURG,DGPROC S (DGSURG,DGPROC)=U
"RTN","DGPTSUDO",15,0)
 ;-- build DGSURG array
"RTN","DGPTSUDO",16,0)
 S DGPTDAT=$$GETDATE^ICDGTDRG(PTF)
"RTN","DGPTSUDO",17,0)
 F I=0:0 S I=$O(^DGPT(PTF,"S",I)) Q:I'>0  S X=$P(^(I,0),U,8,12) D
"RTN","DGPTSUDO",18,0)
 . I X]"",X'="^^^^" S Y=+^(0),Y=$S('$D(DGSURG(Y)):Y,Y[".":Y_I_1,1:Y_".0000"_I_1),DGSURG(Y)="" D
"RTN","DGPTSUDO",19,0)
 .. F J=1:1:5 I $P(X,U,J)]"" S DGPTTMP=$$ICDOP^ICDCODE($P(X,U,J),DGPTDAT) I +DGPTTMP>0 S DGSURG(Y)=DGSURG(Y)_$P(X,U,J)_U
"RTN","DGPTSUDO",20,0)
 ;-- build DGPROC array
"RTN","DGPTSUDO",21,0)
 F I=0:0 S I=$O(^DGPT(PTF,"P",I)) Q:I'>0  S X=$P(^(I,0),U,5,9) D
"RTN","DGPTSUDO",22,0)
 . I X]"",X'="^^^^" S Y=+^(0),Y=$S('$D(DGPROC(Y)):Y,Y[".":Y_I_1,1:Y_".0000"_I_1),DGPROC(Y)="" D
"RTN","DGPTSUDO",23,0)
 .. F J=1:1:5 I $P(X,U,J)]"" S DGPTTMP=$$ICDOP^ICDCODE($P(X,U,J),DGPTDAT) I +DGPTTMP>0 S DGPROC(Y)=DGPROC(Y)_$P(X,U,J)_U
"RTN","DGPTSUDO",24,0)
 ;
"RTN","DGPTSUDO",25,0)
 I $D(^DGPT(PTF,"401P")),+DGPT(70),+DGPT(70)<2871000 S X=^("401P") I X]"",X'="^^^^" D
"RTN","DGPTSUDO",26,0)
 . F I=1:1:5 I $P(X,U,I)]"" S DGPTTMP=$$ICDOP^ICDCODE($P(X,U,I),DGPTDAT) I +DGPTTMP>0 S DGPROC=DGPROC_$P(X,U,I)_U,DG401P=1
"RTN","DGPTSUDO",27,0)
 ;
"RTN","DGPTSUDO",28,0)
SUDO2 ;
"RTN","DGPTSUDO",29,0)
 S DGNXD=$O(^UTILITY($J,"T",DGNXD))
"RTN","DGPTSUDO",30,0)
 G ONE:DGNXD'>0 S T(DGNXD)=^UTILITY($J,"T",DGNXD),I1=+$P(T(DGNXD),U,3),DGDOC=$P(T(DGNXD),U,5)
"RTN","DGPTSUDO",31,0)
 F I=DGPRD,DGNXD S L1(I)=$P(T(I),U,2)
"RTN","DGPTSUDO",32,0)
 G:L1(DGPRD)=L1(DGNXD) SWCH
"RTN","DGPTSUDO",33,0)
 S DGPSV=$S($D(^DIC(42.4,+L1(DGPRD),0)):$P(^(0),U,3),1:""),DGNSV=$S($D(^DIC(42.4,+L1(DGNXD),0)):$P(^(0),U,3),1:"")
"RTN","DGPTSUDO",34,0)
 G:DGPSV']""!(DGNSV']"") SWCH
"RTN","DGPTSUDO",35,0)
 I "^I^SCI^B^NH^D^RE^"'[(U_DGPSV_U),$D(^DGPT(PTF,"M",I1,0)) S DGNODE=^(0) D
"RTN","DGPTSUDO",36,0)
 . D BLD I DGPSV'=DGNSV D DRG S DGSURG=U,DGDX="",DGLOS=0 I '$D(DG401P) S DGPROC=U
"RTN","DGPTSUDO",37,0)
SWCH ;
"RTN","DGPTSUDO",38,0)
 K DGLEV,DGPAS
"RTN","DGPTSUDO",39,0)
 S DGPRD=DGNXD,T(DGPRD)=T(DGNXD),(DGNSV,DGPSV)=""
"RTN","DGPTSUDO",40,0)
 G SUDO2
"RTN","DGPTSUDO",41,0)
 ;
"RTN","DGPTSUDO",42,0)
BLD ;
"RTN","DGPTSUDO",43,0)
 F I=9:-1:5 I $P(DGNODE,U,I)]"" S DGPTTMP=$$ICDDX^ICDCODE($P(DGNODE,U,I),$$GETDATE^ICDGTDRG(PTF)) I +DGPTTMP>0 S DGDX=$P(DGNODE,U,I)_U_DGDX
"RTN","DGPTSUDO",44,0)
 S:$L(DGDX)>200 DGDX=$P(DGDX,U,1,30)
"RTN","DGPTSUDO",45,0)
 S DGLEV=$P(DGNODE,U,3),DGPAS=$P(DGNODE,U,4),X1=DGNXD,X2=DGPRD D ^%DTC S X=$S(X>0:X,1:1)-DGLEV-DGPAS,DGLOS=DGLOS+X
"RTN","DGPTSUDO",46,0)
 N I,J,X,Y,Z
"RTN","DGPTSUDO",47,0)
 F I=0:0 S I=$O(DGSURG(I)) Q:I'>0!(I\1>(DGNXD\1))  D SU
"RTN","DGPTSUDO",48,0)
 I '$D(DG401P) F I=0:0 S I=$O(DGPROC(I)) Q:I'>0!((I\1)>(DGNXD\1))  D  ;S DGPROC=DGPROC(I)_DGPROC K DGPROC(I) I $L(DGPROC)>200 S DGPROC=$P(DGPROC,U,1,30)
"RTN","DGPTSUDO",49,0)
 .S X=DGPROC(I)
"RTN","DGPTSUDO",50,0)
 .F J=1:1:5 S Y=$P(X,U,J) Q:Y=""  D
"RTN","DGPTSUDO",51,0)
 ..Q:$L(DGPROC)>240
"RTN","DGPTSUDO",52,0)
 ..S Z=U_Y_U Q:DGPROC[Z
"RTN","DGPTSUDO",53,0)
 ..S DGPROC=DGPROC_Y_U
"RTN","DGPTSUDO",54,0)
 .K DGPROC(I)
"RTN","DGPTSUDO",55,0)
 Q
"RTN","DGPTSUDO",56,0)
SU ;
"RTN","DGPTSUDO",57,0)
 ;S:$L(DGSURG)>200 DGSURG=$P(DGSURG,U,1,30)
"RTN","DGPTSUDO",58,0)
 ;I I<DGNXD S DGSURG=DGSURG(I)_DGSURG K DGSURG(I) Q  ; surgery date is prior to movement date
"RTN","DGPTSUDO",59,0)
 ; only gets here if surgery occurred on movement date
"RTN","DGPTSUDO",60,0)
 ;I DGPSV=DGNSV S DGSURG=DGSURG(I)_DGSURG K DGSURG(I) Q  ; no RAM movement occurred so surgery should be grouped
"RTN","DGPTSUDO",61,0)
 ;I DGPSV="S" S DGSURG=DGSURG(I)_DGSURG K DGSURG(I) Q  ; RAM movement occurred and losing service is surgery, so surgery should be grouped
"RTN","DGPTSUDO",62,0)
 ;Q
"RTN","DGPTSUDO",63,0)
 ; 2002 coding replaces above,eliminates dupes,allows more codes
"RTN","DGPTSUDO",64,0)
 I I<DGNXD!(DGPSV=DGNSV)!(DGPSV="S") D
"RTN","DGPTSUDO",65,0)
 .S X=DGSURG(I)
"RTN","DGPTSUDO",66,0)
 .F J=1:1:5 S Y=$P(X,U,J) Q:Y=""  D
"RTN","DGPTSUDO",67,0)
 ..Q:$L(DGSURG)>240
"RTN","DGPTSUDO",68,0)
 ..S Z=U_Y_U Q:DGSURG[Z
"RTN","DGPTSUDO",69,0)
 ..S DGSURG=DGSURG_Y_U
"RTN","DGPTSUDO",70,0)
 .K DGSURG(I)
"RTN","DGPTSUDO",71,0)
 Q
"RTN","DGPTSUDO",72,0)
 ;
"RTN","DGPTSUDO",73,0)
DRG ;
"RTN","DGPTSUDO",74,0)
 S AGE=DGPRD-DOB\10000,DGTLOS=DGTLOS+DGLOS,DRG=""
"RTN","DGPTSUDO",75,0)
 D ^DGPTICD
"RTN","DGPTSUDO",76,0)
 S DGDOC=$S($D(^VA(200,+DGDOC)):DGDOC,1:"")
"RTN","DGPTSUDO",77,0)
 S $P(^DGPT(PTF,"M",I1,"P"),U,1,6)=DRG_U_DGPSV_U_DGNXD_U_DGLOS_U_DGDOC_U_DGTLOS
"RTN","DGPTSUDO",78,0)
 Q
"RTN","DGPTSUDO",79,0)
 ;
"RTN","DGPTSUDO",80,0)
ONE ;
"RTN","DGPTSUDO",81,0)
 S DGNXD=$S(+$P(^DGPT(PTF,"M",1,0),U,10):$P(^(0),U,10),1:DT),L1(DGNXD)=$P(^(0),U,2) S:'$D(T(DGNXD)) T(DGNXD)=T(DGPRD),DGDOC=$P(T(DGNXD),U,5)
"RTN","DGPTSUDO",82,0)
 S:$P(DGPT(70),U,3)>5 DGEXP=1 S:$P(DGPT(70),U,3)=4 DGDMS=1 S:$P(DGPT(70),U,13) DGTRS=1
"RTN","DGPTSUDO",83,0)
 I L1(DGNXD),$D(^DIC(42.4,+L1(DGNXD),0)) S I1=1,DGPSV=$P(^(0),U,3),DGADM=$P(^DGPT(PTF,0),U,2)
"RTN","DGPTSUDO",84,0)
 S DGNODE=$S($D(^DGPT(PTF,"M",1,0)):^(0),1:"") D BLD
"RTN","DGPTSUDO",85,0)
 I $D(^DGPT("AADA",DGADM,PTF)) S I=$S($P(DGPT(70),U,10):$P(DGPT(70),U,10),$P(DGPT(70),U,11):$P(DGPT(70),U,11),1:"") I I]"" S DGDX=I_U_DGDX
"RTN","DGPTSUDO",86,0)
 S I1=1 D DRG,^DGPTSUD1
"RTN","DGPTSUDO",87,0)
Q ;
"RTN","DGPTSUDO",88,0)
 K DGDMS,DGDOC,DGDX,DGEXP,DGLEV,DGLOS,DGNODE,DGNSV,DGNXD,DGPAS,DGPRD,DGPROC,DGPSV,DGPT,DGSURG,DGTLOS,DGTRS,DG401P,I,I1,I2,J,L1,T,X,X1,X2,Y Q
"RTN","DGPTSUDO",89,0)
 ;
"RTN","DGPTTS")
0^28^B17615190
"RTN","DGPTTS",1,0)
DGPTTS ;ALB/AS/ADL - UPDATE FACILITY TREATING SPECIALTY/501 MOVEMENTS IN PTF ; 1/30/90 @12
"RTN","DGPTTS",2,0)
 ;;5.3;Registration;**26,61,164,510**;Aug 13, 1993
"RTN","DGPTTS",3,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTTS",4,0)
 ;needs to be done - OERR link
"RTN","DGPTTS",5,0)
 ;
"RTN","DGPTTS",6,0)
EV ;entry point from event driver
"RTN","DGPTTS",7,0)
 D EV^DGPTTS0
"RTN","DGPTTS",8,0)
 Q
"RTN","DGPTTS",9,0)
 ;
"RTN","DGPTTS",10,0)
DEL ;facility treating specialty has been deleted from ^DGPM
"RTN","DGPTTS",11,0)
 S DGPTFP=^UTILITY("DGPM",$J,6,DGMV,"PTFP")
"RTN","DGPTTS",12,0)
 G DEL1:'$D(^DGPT(PTF,"M",+$P(DGPTFP,"^",2),0))
"RTN","DGPTTS",13,0)
 K DA S DGREC=^(0),DGEX=$S($D(^(300)):^(300),1:""),DA=$P(DGPTFP,"^",2),DA(1)=PTF,DIK="^DGPT("_DA(1)_",""M""," D ^DIK K DA
"RTN","DGPTTS",14,0)
 S DGMSG="" F X=5:1:15 I X'=10 S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGREC,U,X),$$GETDATE^ICDGTDRG(PTF)),DGMSG=DGMSG_$S(+DGPTTMP>0:$P(DGPTTMP,U,2)_", ",1:"")
"RTN","DGPTTS",15,0)
 G DEL1:DGMSG']"" S ^UTILITY($J,"DEL",$P(DGPTFP,"^",2))=DGMSG
"RTN","DGPTTS",16,0)
 ;-- save expanded codes 
"RTN","DGPTTS",17,0)
 S DG1=""
"RTN","DGPTTS",18,0)
 I DGEX]"" F X=2:1:7 S:$P(DGEX,U,X)]"" $P(DG1,U,X)=$P(DGEX,U,X)
"RTN","DGPTTS",19,0)
 S:DG1]"" ^UTILITY($J,300,$P(DGPTFP,U,2))=DG1
"RTN","DGPTTS",20,0)
 K DGI
"RTN","DGPTTS",21,0)
 S Y=$P(DGREC,U,10) X ^DD("DD") S DGMSG="501 movement of "_$P(^DPT(DFN,0),U,1)_" of "_Y_" losing specialty "_$P(^DIC(42.4,$P(DGREC,U,2),0),U,1)_" was deleted by "_$P(^VA(200,DUZ,0),U,1)_" it contained diag "_$E(DGMSG,1,120)
"RTN","DGPTTS",22,0)
 S DGMSG1="501 Movement Deletion" D MSG^DGPTMSG1
"RTN","DGPTTS",23,0)
 ;
"RTN","DGPTTS",24,0)
DEL1 S X=^DPT(DFN,0),DGMSG="A transfer between treating specialties for "_$P(X,U,1)_" ("_$P(X,U,9)_") on "_$TR($$FMTE^XLFDT(+DGMVP,"5DF")," ","0")_" was deleted by "_$P(^VA(200,+DUZ,0),U)_".  Please verify PTF #"_PTF_"."
"RTN","DGPTTS",25,0)
 S DGMSG1="Facility Treating Specialty Deletion" D MSG^DGPTMSG1
"RTN","DGPTTS",26,0)
 ;
"RTN","DGPTTS",27,0)
 S DR="" I $P(DGPTFP,"^",3)=1 S DGREC=^DGPT(PTF,"M",1,0) F X=5:1:15 I X'=10 S:$P(DGREC,U,X) DR=DR_X_"///@;"
"RTN","DGPTTS",28,0)
 I DR]"" S DA(1)=PTF,DIE="^DGPT("_DA(1)_",""M"",",DA=1 D ^DIE
"RTN","DGPTTS",29,0)
 ;-- clean up expanded code data
"RTN","DGPTTS",30,0)
 S DR="" I $P(DGPTFP,U,3)=1,$D(^DGPT(PTF,"M",1,300)) S DGREC=^(300) F X=2:1:7 S:$P(DGREC,U,X) DR=DR_"300.0"_X_"///@;"
"RTN","DGPTTS",31,0)
 I DR]"" S DA=1,DA(1)=PTF D ^DIE
"RTN","DGPTTS",32,0)
 K DGPTFP,DGREC,DA,DR,DIE,Y,X,DGEX Q
"RTN","DGPTTS",33,0)
 ;
"RTN","DGPTTS",34,0)
LE ;entry point for PTF record update
"RTN","DGPTTS",35,0)
 I '$D(ZTQUEUED),'$G(DGQUIET) W !,"Updating PTF Record #",PTF,"..."
"RTN","DGPTTS",36,0)
 K ^UTILITY($J,"T")
"RTN","DGPTTS",37,0)
 S DGPREV=$O(^DGPM("ATS",DFN,DGPMCA,0)),DGDT=$S($D(^DGPM(+$P(DGPMAN,"^",17),0)):+^(0),1:"")
"RTN","DGPTTS",38,0)
 D NOTS:'DGPREV
"RTN","DGPTTS",39,0)
 I DGPREV S:DGDT T(DGDT)="" D ^DGPTTS1,VARS^DGPTSUDO
"RTN","DGPTTS",40,0)
 K DGDR,L,MN,DIE,DIC,DIS,D,J,ADM,%DT,DR,I1,LL,NOW,T,TRN,ZTSK,L1,L2,T1,T2,TD,TDD,I,PTN,NTR,DA,NX,NXX,PR,DGTNX,DGTEMP,DGTPR,LOL,LOP,Z,Y,A,B,C,DGAD,DGDEL,X1,X2,^UTILITY($J,"T"),DGTR,DGREC,DGDT1,DGTLOS
"RTN","DGPTTS",41,0)
 F DA=0:0 S DA=$O(^DGPT(PTF,"P",DA)) Q:DA'>0  I $D(^DGPT(PTF,"P",DA,0)) D BS^DGPTFM6 S DIE="^DGPT("_PTF_",""P"",",DA(1)=PTF,DR="1///"_DGMOVM D ^DIE
"RTN","DGPTTS",42,0)
 D EN^DGPTTS3 I '$D(ZTQUEUED),'$G(DGQUIET) W "completed."
"RTN","DGPTTS",43,0)
Q K DGDT,DA,DGP0,DGMSG,DGPREV,DGREC,DGMOVM,DIC,DIE,DR,V,X,Y Q
"RTN","DGPTTS",44,0)
 ;
"RTN","DGPTTS",45,0)
NTR S DGMSG="A Transfer on "_$TR($$FMTE^XLFDT(+DGMVA,"5DF")," ","0")_" was entered before the latest transfer.  Please verify PTF #"_PTF_"."
"RTN","DGPTTS",46,0)
 S DGMSG1="New Facility Treating Specialty" D MSG^DGPTMSG1
"RTN","DGPTTS",47,0)
 Q
"RTN","DGPTTS",48,0)
 ;
"RTN","DGPTTS",49,0)
NOTS ;
"RTN","DGPTTS",50,0)
 S DIE="^DGPT("_PTF_",""M"",",DA(1)=PTF,DA=1,DR="2///@" D ^DIE
"RTN","DGPTTS",51,0)
 F DA=0:0 S DA=$O(^DGPT(PTF,"P",DA)) Q:DA'>0  I $D(^DGPT(PTF,"P",DA,0)) S DIE="^DGPT("_PTF_",""P"",",DA(1)=PTF,DR="1///@" D ^DIE
"RTN","DGPTTS",52,0)
 Q
"RTN","DGPTTS",53,0)
 ;
"RTN","DGPTTS",54,0)
DGDT ; -- get first ts before dc date
"RTN","DGPTTS",55,0)
 N X S X=$P(9999999.999999-DGDT,".")
"RTN","DGPTTS",56,0)
 F DGPREV=0:0 S DGPREV=+$O(^DGPM("ATS",DFN,DGPMCA,DGPREV)) Q:$P(DGPREV,".")'=X
"RTN","DGPTTS",57,0)
 Q
"RTN","DGPTTS",58,0)
 ;
"RTN","DGPTTS",59,0)
CA ; -- determine CA info
"RTN","DGPTTS",60,0)
 S DGPMCA=$S($P(DGPMP,"^",14):$P(DGPMP,"^",14),1:$P(DGPMA,"^",14))
"RTN","DGPTTS",61,0)
 S DGPMAN=$S($D(^DGPM(+DGPMCA,0)):^(0),1:""),DGMVT=$S($P(DGPMP,"^",2):$P(DGPMP,"^",2),1:$P(DGPMA,"^",2)),PTF=$P(DGPMAN,"^",16),DGADM=+DGPMAN
"RTN","DGPTTS",62,0)
 Q
"RTN","DGPTTS1")
0^29^B23667874
"RTN","DGPTTS1",1,0)
DGPTTS1 ;ALB/AS/ADL - FACILITY TREATING SPECIALTY AND 501 MOVEMENTS, cont. ; 11/28/89 @12
"RTN","DGPTTS1",2,0)
 ;;5.3;Registration;**26,64,418,510**;Aug 13, 1993
"RTN","DGPTTS1",3,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTTS1",4,0)
 ;
"RTN","DGPTTS1",5,0)
 ;build DGA array w/patient's last treat spec of the day as of 11:59 pm
"RTN","DGPTTS1",6,0)
 ;
"RTN","DGPTTS1",7,0)
LOOP ;
"RTN","DGPTTS1",8,0)
 S DGNEXT=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV))
"RTN","DGPTTS1",9,0)
 F DGNEXT=DGNEXT:0 Q:($P(DGPREV,".")'=$P(DGNEXT,"."))!('DGNEXT)  S DGNEXT=$O(^DGPM("ATS",DFN,DGPMCA,DGNEXT))
"RTN","DGPTTS1",10,0)
 S X=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,0)),DGA(9999999.999999-$E(DGPREV,1,14))=$S($D(^DIC(45.7,+X,0)):$P(^(0),"^",2),1:0)_"^"_$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,X,0)) I DGNEXT>0 S DGPREV=DGNEXT G LOOP
"RTN","DGPTTS1",11,0)
 S DGPREV=0,X=$S($D(^DIC(42,+$P(DGPMAN,"^",6),0)):$P(^(0),"^",3),1:0) I "^NH^D^"[(U_X_U)!($P(^(0),"^",17)=1) D ASIH^DGPTTS2 ;p-418
"RTN","DGPTTS1",12,0)
 ;
"RTN","DGPTTS1",13,0)
LOOP1 ; -- compare specs between mvts ; sort out xfr if spec did't change
"RTN","DGPTTS1",14,0)
 S DGSAVE=DGPREV
"RTN","DGPTTS1",15,0)
 S DGPREV=$O(DGA(DGPREV)),DGNEXT=$O(DGA(DGPREV)),X=+DGA(DGPREV) I DGNEXT S Y=+DGA(DGNEXT) I (X=Y)!((X=70)&(Y=71))!((X=71)&(Y=70)) K DGA(DGNEXT) S DGPREV=DGSAVE I $O(DGA(DGPREV))>0 G LOOP1
"RTN","DGPTTS1",16,0)
 ;
"RTN","DGPTTS1",17,0)
 ; -- is mvt during adm
"RTN","DGPTTS1",18,0)
 I DGPREV<+DGPMAN!($P(DGPREV,".")'<$S(DGDT:$P(+DGDT,"."),1:9999999)) S (DG1,DG2)=+$P(DGA(DGPREV),"^",2) D DEL:$S('$D(^DGPM(DG1,"PTF")):0,1:$P(^("PTF"),"^",2)]"") G LOOPQ
"RTN","DGPTTS1",19,0)
 ;
"RTN","DGPTTS1",20,0)
 ; build ^UTILITY for mvts whose spec changed
"RTN","DGPTTS1",21,0)
 ;I X=70!(X=71) S X2=DGPREV,X1=$S(DGNEXT]"":DGNEXT,DGDT]"":DGDT,1:DT) D ^%DTC S $P(DGA(DGPREV),"^",1)=$S(X>45:71,1:70)
"RTN","DGPTTS1",22,0)
 S X=$S($D(^DGPM($P(DGA(DGPREV),"^",2),"PTF")):^("PTF"),1:""),^UTILITY($J,"T",DGPREV)=$P(DGA(DGPREV),"^",2)_"^"_+DGA(DGPREV)_"^"_$P(X,"^",2)_"^"_$P(X,"^",3)_"^"_$S($D(^DGPM($P(DGA(DGPREV),"^",2),0)):$P(^(0),"^",8),1:"")
"RTN","DGPTTS1",23,0)
LOOPQ I $O(DGA(DGPREV)) G LOOP1
"RTN","DGPTTS1",24,0)
 ;
"RTN","DGPTTS1",25,0)
 ; look for mvts in ^DGPM that have a PTF mvt # entry
"RTN","DGPTTS1",26,0)
 ; but not in ^UTILITY.  If any are found, delete from ^DGPT.
"RTN","DGPTTS1",27,0)
 F DGPREV=0:0 S DGPREV=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV)) Q:DGPREV'>0  S X=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,0)),(DG1,DG2)=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,+X,0)) I $D(^DGPM(+DG1,"PTF")),$P(^("PTF"),"^",2)]"" D DEL
"RTN","DGPTTS1",28,0)
 ;
"RTN","DGPTTS1",29,0)
 K Y S Y=+$O(^DGPM("APHY",DGPMCA,0)) I $D(^DGPM(Y,0)) S Y(0)=^(0),Y("PTF")=$S($D(^("PTF")):^("PTF"),1:"")
"RTN","DGPTTS1",30,0)
 I $D(Y)>10 S T("ADM")=Y_"^"_$S($D(^DIC(45.7,+$P(Y(0),"^",9),0)):$P(^(0),"^",2),1:"")_"^^"_$P(Y("PTF"),"^",3)_"^"_$P(Y(0),"^",8) K Y
"RTN","DGPTTS1",31,0)
 ;
"RTN","DGPTTS1",32,0)
 S DGDEL=$O(^UTILITY($J,"T",0))
"RTN","DGPTTS1",33,0)
 I DGDEL S T(DGDEL)=^(DGDEL),DG1=$P(T(DGDEL),"^",3) I DG1 S T(DGDEL)=$P(T(DGDEL),U,1,2),DGREC=$S($D(^DGPT(PTF,"M",DG1,0)):^(0),1:"") D MSG K DA S DIK="^DGPT("_PTF_",""M"",",DA(1)=PTF,DA=DG1 D ^DIK K DA S ^UTILITY($J,"T",DGDEL)=$P(T(DGDEL),U,1,2)
"RTN","DGPTTS1",34,0)
 K DGA K:$D(T(+DGDT)) T(DGDT)
"RTN","DGPTTS1",35,0)
 S DGAD=+DGPMAN F I=0:0 S I=$O(^UTILITY($J,"T",I)) Q:I'>0  S DGAD=I
"RTN","DGPTTS1",36,0)
 S DGREC1=$S($D(^DGPT(PTF,"M",1,0)):^(0),1:""),DGREC=$S($D(^UTILITY($J,"T",DGAD)):^(DGAD),$D(T("ADM")):T("ADM"),1:"") I DGREC,$D(^DGPM(+DGREC,0)) S $P(^("PTF"),"^",3)=1
"RTN","DGPTTS1",37,0)
 S DGREC=$P(DGREC,U,2)
"RTN","DGPTTS1",38,0)
 I DGDT W:'DGREC&'$D(ZTQUEUED) !,"No Treating Specialty Transfers",! S I1=1,DIE="^DGPT(",DA=PTF,DR="71///"_DGREC D ^DIE:DGREC S PR=DGAD,NX=DGDT D LOL^DGPTTS2 I $P(DGREC1,U,3,4)'=(LOL_U_LOP) S DR="3///"_LOL_";4///"_LOP,I1=1 D TD5^DGPTTS2 K DR
"RTN","DGPTTS1",39,0)
 I 'DGDT S PR=DGAD,NX=DT,I1=1 D LOL^DGPTTS2 I $P(DGREC1,U,2,4)'=(DGREC_U_LOL_U_LOP) S DR="3///"_LOL_";4///"_LOP_$S(DGREC:";2///"_DGREC,1:"") D TD5^DGPTTS2
"RTN","DGPTTS1",40,0)
 K DGSAVE,DR,DGREC1 D ^DGPTTS2 Q
"RTN","DGPTTS1",41,0)
DEL Q:$D(^UTILITY($J,"T",(9999999.999999-$E(DGPREV,1,14))))
"RTN","DGPTTS1",42,0)
 S DG1=$P(^DGPM(DG1,"PTF"),"^",2),DGREC=$S($D(^DGPT(PTF,"M",+DG1,0)):^(0),1:"") Q:DGREC']""  D MSG K DA S DIK="^DGPT("_PTF_",""M"",",DA(1)=PTF,DA=DG1 D ^DIK K DA
"RTN","DGPTTS1",43,0)
 S DA=DG2,DR="52///@;53///@",DIE="^DGPM(" D ^DIE Q
"RTN","DGPTTS1",44,0)
MSG S DGMSG="" F X=5:1:15 I X'=10 S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGREC,U,X),$$GETDATE^ICDGTDRG(PTF)),DGMSG=DGMSG_$S(+DGPTTMP>0:$P(DGPTTMP,U,2)_", ",1:"")
"RTN","DGPTTS1",45,0)
 Q:DGMSG']""  S ^UTILITY($J,"DEL",DG1)=DGMSG
"RTN","DGPTTS1",46,0)
 ;-- save expanded codes 
"RTN","DGPTTS1",47,0)
 S DGMSG1=""
"RTN","DGPTTS1",48,0)
 I $D(^DGPT(PTF,"M",+DG1,300)) S DGEX=^(300) F X=2:1:7 S:$P(DGEX,U,X)]"" $P(DGMSG1,U,X)=$P(DGEX,U,X)
"RTN","DGPTTS1",49,0)
 S:DGMSG1]"" ^UTILITY($J,300,DG1)=DGMSG1
"RTN","DGPTTS1",50,0)
 K DGMSG1
"RTN","DGPTTS1",51,0)
 S Y=$P(DGREC,U,10) X ^DD("DD") S DGMSG="501 movement of "_$P(^DPT(DFN,0),U,1)_" of "_Y_" losing specialty "_$P(^DIC(42.4,$P(DGREC,U,2),0),U,1)_" was deleted by "_$P(^VA(200,DUZ,0),U,1)_" it contained diag "_$E(DGMSG,1,120)
"RTN","DGPTTS1",52,0)
 S:'$D(DGPMAN) DGPMAN=^DGPM(DGPMCA,0) D MSG^DGPTMSG1
"RTN","DGPTTS1",53,0)
 K DGEX Q
"VER")
8.0^22.0
**INSTALL NAME**
PX*1.0*121
"BLD",3003,0)
PX*1.0*121^PCE PATIENT CARE ENCOUNTER^0^3030916^y
"BLD",3003,1,0)
^^2^2^3030523^
"BLD",3003,1,1,0)
Please see the National Patch Module for details
"BLD",3003,1,2,0)
of the enhancements included in this patch.
"BLD",3003,4,0)
^9.64PA^^
"BLD",3003,"KRN",0)
^9.67PA^8989.52^19
"BLD",3003,"KRN",.4,0)
.4
"BLD",3003,"KRN",.4,"NM",0)
^9.68A^^
"BLD",3003,"KRN",.401,0)
.401
"BLD",3003,"KRN",.401,"NM",0)
^9.68A^^
"BLD",3003,"KRN",.402,0)
.402
"BLD",3003,"KRN",.403,0)
.403
"BLD",3003,"KRN",.5,0)
.5
"BLD",3003,"KRN",.84,0)
.84
"BLD",3003,"KRN",3.6,0)
3.6
"BLD",3003,"KRN",3.8,0)
3.8
"BLD",3003,"KRN",9.2,0)
9.2
"BLD",3003,"KRN",9.8,0)
9.8
"BLD",3003,"KRN",9.8,"NM",0)
^9.68A^29^28
"BLD",3003,"KRN",9.8,"NM",1,0)
AUPNSICD^^0^B606859
"BLD",3003,"KRN",9.8,"NM",2,0)
PXAICPTV^^0^B15138895
"BLD",3003,"KRN",9.8,"NM",3,0)
PXAIMOD^^0^B2663372
"BLD",3003,"KRN",9.8,"NM",4,0)
PXAIPOVV^^0^B2601600
"BLD",3003,"KRN",9.8,"NM",5,0)
PXCACPT^^0^B20172292
"BLD",3003,"KRN",9.8,"NM",6,0)
PXCACPT1^^0^B6830509
"BLD",3003,"KRN",9.8,"NM",7,0)
PXCAPOV^^0^B25000109
"BLD",3003,"KRN",9.8,"NM",8,0)
PXCAVST1^^0^B16093524
"BLD",3003,"KRN",9.8,"NM",9,0)
PXBDCPT^^0^B33211844
"BLD",3003,"KRN",9.8,"NM",10,0)
PXBGCPT4^^0^B23568997
"BLD",3003,"KRN",9.8,"NM",11,0)
PXBPCPT^^0^B41237994
"BLD",3003,"KRN",9.8,"NM",12,0)
PXBPCPT1^^0^B21660570
"BLD",3003,"KRN",9.8,"NM",13,0)
PXBPMOD^^0^B5762397
"BLD",3003,"KRN",9.8,"NM",14,0)
PXBGPOV4^^0^B17114546
"BLD",3003,"KRN",9.8,"NM",15,0)
PXBGPRV4^^0^B16348609
"BLD",3003,"KRN",9.8,"NM",16,0)
PXBPPOV^^0^B21829306
"BLD",3003,"KRN",9.8,"NM",17,0)
PXBPPOV1^^0^B15203050
"BLD",3003,"KRN",9.8,"NM",18,0)
PXBUTL2^^0^B3542412
"BLD",3003,"KRN",9.8,"NM",19,0)
PXKMOD^^0^B3499026
"BLD",3003,"KRN",9.8,"NM",20,0)
PXQUTL^^0^B45331178
"BLD",3003,"KRN",9.8,"NM",21,0)
PXRHS02^^0^B14621854
"BLD",3003,"KRN",9.8,"NM",23,0)
PXCEHELP^^0^B16233701
"BLD",3003,"KRN",9.8,"NM",24,0)
PXCEPOV^^0^B6885227
"BLD",3003,"KRN",9.8,"NM",25,0)
PXRRPAPI^^0^B62098883
"BLD",3003,"KRN",9.8,"NM",26,0)
PXRRFDSD^^0^B22536054
"BLD",3003,"KRN",9.8,"NM",27,0)
PXRRFDP^^0^B66324541
"BLD",3003,"KRN",9.8,"NM",28,0)
PXRRPCE3^^0^B26611313
"BLD",3003,"KRN",9.8,"NM",29,0)
PXCECPT^^0^B36957005
"BLD",3003,"KRN",9.8,"NM","B","AUPNSICD",1)

"BLD",3003,"KRN",9.8,"NM","B","PXAICPTV",2)

"BLD",3003,"KRN",9.8,"NM","B","PXAIMOD",3)

"BLD",3003,"KRN",9.8,"NM","B","PXAIPOVV",4)

"BLD",3003,"KRN",9.8,"NM","B","PXBDCPT",9)

"BLD",3003,"KRN",9.8,"NM","B","PXBGCPT4",10)

"BLD",3003,"KRN",9.8,"NM","B","PXBGPOV4",14)

"BLD",3003,"KRN",9.8,"NM","B","PXBGPRV4",15)

"BLD",3003,"KRN",9.8,"NM","B","PXBPCPT",11)

"BLD",3003,"KRN",9.8,"NM","B","PXBPCPT1",12)

"BLD",3003,"KRN",9.8,"NM","B","PXBPMOD",13)

"BLD",3003,"KRN",9.8,"NM","B","PXBPPOV",16)

"BLD",3003,"KRN",9.8,"NM","B","PXBPPOV1",17)

"BLD",3003,"KRN",9.8,"NM","B","PXBUTL2",18)

"BLD",3003,"KRN",9.8,"NM","B","PXCACPT",5)

"BLD",3003,"KRN",9.8,"NM","B","PXCACPT1",6)

"BLD",3003,"KRN",9.8,"NM","B","PXCAPOV",7)

"BLD",3003,"KRN",9.8,"NM","B","PXCAVST1",8)

"BLD",3003,"KRN",9.8,"NM","B","PXCECPT",29)

"BLD",3003,"KRN",9.8,"NM","B","PXCEHELP",23)

"BLD",3003,"KRN",9.8,"NM","B","PXCEPOV",24)

"BLD",3003,"KRN",9.8,"NM","B","PXKMOD",19)

"BLD",3003,"KRN",9.8,"NM","B","PXQUTL",20)

"BLD",3003,"KRN",9.8,"NM","B","PXRHS02",21)

"BLD",3003,"KRN",9.8,"NM","B","PXRRFDP",27)

"BLD",3003,"KRN",9.8,"NM","B","PXRRFDSD",26)

"BLD",3003,"KRN",9.8,"NM","B","PXRRPAPI",25)

"BLD",3003,"KRN",9.8,"NM","B","PXRRPCE3",28)

"BLD",3003,"KRN",19,0)
19
"BLD",3003,"KRN",19.1,0)
19.1
"BLD",3003,"KRN",101,0)
101
"BLD",3003,"KRN",409.61,0)
409.61
"BLD",3003,"KRN",771,0)
771
"BLD",3003,"KRN",870,0)
870
"BLD",3003,"KRN",8989.51,0)
8989.51
"BLD",3003,"KRN",8989.52,0)
8989.52
"BLD",3003,"KRN",8994,0)
8994
"BLD",3003,"KRN","B",.4,.4)

"BLD",3003,"KRN","B",.401,.401)

"BLD",3003,"KRN","B",.402,.402)

"BLD",3003,"KRN","B",.403,.403)

"BLD",3003,"KRN","B",.5,.5)

"BLD",3003,"KRN","B",.84,.84)

"BLD",3003,"KRN","B",3.6,3.6)

"BLD",3003,"KRN","B",3.8,3.8)

"BLD",3003,"KRN","B",9.2,9.2)

"BLD",3003,"KRN","B",9.8,9.8)

"BLD",3003,"KRN","B",19,19)

"BLD",3003,"KRN","B",19.1,19.1)

"BLD",3003,"KRN","B",101,101)

"BLD",3003,"KRN","B",409.61,409.61)

"BLD",3003,"KRN","B",771,771)

"BLD",3003,"KRN","B",870,870)

"BLD",3003,"KRN","B",8989.51,8989.51)

"BLD",3003,"KRN","B",8989.52,8989.52)

"BLD",3003,"KRN","B",8994,8994)

"BLD",3003,"QUES",0)
^9.62^^
"BLD",3003,"REQB",0)
^9.611^12^11
"BLD",3003,"REQB",1,0)
PX*1.0*111^2
"BLD",3003,"REQB",2,0)
PX*1.0*108^2
"BLD",3003,"REQB",3,0)
PX*1.0*92^2
"BLD",3003,"REQB",4,0)
PX*1.0*78^2
"BLD",3003,"REQB",5,0)
PX*1.0*112^2
"BLD",3003,"REQB",6,0)
PX*1.0*54^2
"BLD",3003,"REQB",7,0)
PX*1.0*33^2
"BLD",3003,"REQB",8,0)
PX*1.0*31^2
"BLD",3003,"REQB",9,0)
PX*1.0*29^2
"BLD",3003,"REQB",10,0)
PX*1.0*18^2
"BLD",3003,"REQB",11,0)
ICPT*6.0*14^2
"BLD",3003,"REQB",12,0)
ICD*18.0*6^2
"BLD",3003,"REQB","B","ICD*18.0*6",12)

"BLD",3003,"REQB","B","ICPT*6.0*14",11)

"BLD",3003,"REQB","B","PX*1.0*108",2)

"BLD",3003,"REQB","B","PX*1.0*111",1)

"BLD",3003,"REQB","B","PX*1.0*112",5)

"BLD",3003,"REQB","B","PX*1.0*18",10)

"BLD",3003,"REQB","B","PX*1.0*29",9)

"BLD",3003,"REQB","B","PX*1.0*31",8)

"BLD",3003,"REQB","B","PX*1.0*33",7)

"BLD",3003,"REQB","B","PX*1.0*54",6)

"BLD",3003,"REQB","B","PX*1.0*78",4)

"BLD",3003,"REQB","B","PX*1.0*92",3)

"MBREQ")
1
"PKG",507,-1)
1^1
"PKG",507,0)
PCE PATIENT CARE ENCOUNTER^PX^Patient Care Encounter
"PKG",507,20,0)
^9.402P^^
"PKG",507,22,0)
^9.49I^1^1
"PKG",507,22,1,0)
1.0^2960812^2960912^10958
"PKG",507,22,1,"PAH",1,0)
121^3030916^100988
"PKG",507,22,1,"PAH",1,1,0)
^^2^2^3030916
"PKG",507,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for details
"PKG",507,22,1,"PAH",1,1,2,0)
of the enhancements included in this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
28
"RTN","AUPNSICD")
0^1^B606859
"RTN","AUPNSICD",1,0)
AUPNSICD ;OHPRD/LAB - Screen Purpose of Visit/ICD9 codes ; 5/1/03 11:52am
"RTN","AUPNSICD",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**121**;Aug 12, 1996
"RTN","AUPNSICD",3,0)
 ;;93.2;IHS PATIENT DICTIONARIES.;;JUL 01, 1993
"RTN","AUPNSICD",4,0)
 ;
"RTN","AUPNSICD",5,0)
 N ICDSTR
"RTN","AUPNSICD",6,0)
 ;S ICDSTR=$$ICDDX^ICDCODE(Y,$P(^AUPNVSIT(PXCEVIEN,0),"^",2))
"RTN","AUPNSICD",7,0)
 S ICDSTR=$$ICDDX^ICDCODE(Y,+^AUPNVSIT(PXCEVIEN,0))
"RTN","AUPNSICD",8,0)
 G:$G(DUZ("AG"))="V" VAIN
"RTN","AUPNSICD",9,0)
 ;
"RTN","AUPNSICD",10,0)
 ;I 1 Q:$G(DUZ("AG"))'="I"
"RTN","AUPNSICD",11,0)
EIN ; SCREEN OUT E CODES AND INACTIVE CODES
"RTN","AUPNSICD",12,0)
 ;I $E(^ICD9(Y,0),U,1)'="E",$P(^(0),U,9)=""
"RTN","AUPNSICD",13,0)
 ;I $P(^ICD9(Y,0),U,1)'="E",$P(^(0),U,9)=""
"RTN","AUPNSICD",14,0)
 I $P(ICDSTR,U,2)'="E",$P(ICDSTR,U,10)=1
"RTN","AUPNSICD",15,0)
 G:'$T XIT
"RTN","AUPNSICD",16,0)
SEX ; IF 'USE WITH SEX' FIELD HAS A VALUE CHECK THAT VALUE AGAINST AUPNSEX
"RTN","AUPNSICD",17,0)
 G:'$D(AUPNSEX) AGE
"RTN","AUPNSICD",18,0)
 I $P(^ICD9(Y,0),U,10)=""!($P(^ICD9(Y,0),U,10)=AUPNSEX)
"RTN","AUPNSICD",19,0)
 G:'$T XIT
"RTN","AUPNSICD",20,0)
AGE ; IF THERE IS AGE CRITERIA DATA AVAILABLE CHECK TO SEE THAT IT FITS THE CRITERIA
"RTN","AUPNSICD",21,0)
 ;G:'$D(AUPNDAYS) XIT
"RTN","AUPNSICD",22,0)
 ;G:'$D(^ICD9(Y,9999999)) XIT
"RTN","AUPNSICD",23,0)
 ;I $P(^(9999999),U,1)=""!($P(^(9999999),U,1)<AUPNDAYS)
"RTN","AUPNSICD",24,0)
 ;G:'$T XIT
"RTN","AUPNSICD",25,0)
 ;I $P(^(9999999),U,2)=""!($P(^(9999999),U,2)>AUPNDAYS)
"RTN","AUPNSICD",26,0)
XIT ;
"RTN","AUPNSICD",27,0)
 Q
"RTN","AUPNSICD",28,0)
 ;
"RTN","AUPNSICD",29,0)
VAIN ;SCREEN OUT INACTIVE CODES
"RTN","AUPNSICD",30,0)
 ; E codes are ok in the VA
"RTN","AUPNSICD",31,0)
 ;I $P(^ICD9(Y,0),U,9)'=1
"RTN","AUPNSICD",32,0)
 I $P(ICDSTR,U,10)=1
"RTN","AUPNSICD",33,0)
 Q
"RTN","AUPNSICD",34,0)
 ;
"RTN","PXAICPTV")
0^2^B15138895
"RTN","PXAICPTV",1,0)
PXAICPTV ;ISL/JVS,ISA/KWP - VALADATE PROCEDURES(CPT) ;11/14/96  12:46
"RTN","PXAICPTV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**15,73,74,111,121**;Aug 12, 1996
"RTN","PXAICPTV",3,0)
 ;
"RTN","PXAICPTV",4,0)
VAL ;--VALIDATE ENOUGH DATA
"RTN","PXAICPTV",5,0)
 ;----Missing a pointer to PROCEDURE(CPT) name
"RTN","PXAICPTV",6,0)
 I $G(PXAA("PROCEDURE"))']"" D  Q:$G(STOP)
"RTN","PXAICPTV",7,0)
 .S STOP=1 ;--USED TO STOP DO LOOP
"RTN","PXAICPTV",8,0)
 .S PXAERRF=1 ;--FLAG INDICATES THERE IS AN ERR
"RTN","PXAICPTV",9,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAICPTV",10,0)
 .S PXAERR(9)="PROCEDURE"
"RTN","PXAICPTV",11,0)
 .S PXAERR(11)=$G(PXAA("PROCEDURE"))
"RTN","PXAICPTV",12,0)
 .S PXAERR(12)="You are missing a pointer to the PROCEDURE CPT FILE#81 that represents the procedure's name"
"RTN","PXAICPTV",13,0)
 ;
"RTN","PXAICPTV",14,0)
 ;----NOT a pointer to PROCEDURE CPT FILE#81
"RTN","PXAICPTV",15,0)
 I '$D(^ICPT($G(PXAA("PROCEDURE")),0)) D  Q:$G(STOP)
"RTN","PXAICPTV",16,0)
 .S STOP=1
"RTN","PXAICPTV",17,0)
 .S PXAERRF=1
"RTN","PXAICPTV",18,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAICPTV",19,0)
 .S PXAERR(9)="PROCEDURE"
"RTN","PXAICPTV",20,0)
 .S PXAERR(11)=$G(PXAA("PROCEDURE"))
"RTN","PXAICPTV",21,0)
 .S PXAERR(12)=PXAERR(11)_" is NOT a pointer value to the CPT FILE #81"
"RTN","PXAICPTV",22,0)
 ;
"RTN","PXAICPTV",23,0)
 ;----Not a valid CPT
"RTN","PXAICPTV",24,0)
 I '$P($$CPT^ICPTCOD(PXAA("PROCEDURE"),+^AUPNVSIT(PXAVISIT,0)),"^",7) D  Q:$G(STOP)
"RTN","PXAICPTV",25,0)
 .S STOP=1
"RTN","PXAICPTV",26,0)
 .S PXAERRF=1
"RTN","PXAICPTV",27,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAICPTV",28,0)
 .S PXAERR(9)="PROCEDURE"
"RTN","PXAICPTV",29,0)
 .S PXAERR(11)=$G(PXAA("PROCEDURE"))
"RTN","PXAICPTV",30,0)
 .S PXAERR(12)=PXAERR(11)_" is NOT a valid CPT code"
"RTN","PXAICPTV",31,0)
 ;
"RTN","PXAICPTV",32,0)
 ;----Not a valid modifier
"RTN","PXAICPTV",33,0)
 N SUB,MODIEN
"RTN","PXAICPTV",34,0)
 S SUB=""
"RTN","PXAICPTV",35,0)
 F  S SUB=$O(PXAA("MODIFIERS",SUB)) Q:SUB=""!($G(STOP))  D
"RTN","PXAICPTV",36,0)
 .;S MODIEN=$$MODP^ICPTMOD(PXAA("PROCEDURE"),SUB,"E","",0)
"RTN","PXAICPTV",37,0)
 .S MODIEN=$$MODP^ICPTMOD(PXAA("PROCEDURE"),SUB,"E",+^AUPNVSIT(PXAVISIT,0),0)
"RTN","PXAICPTV",38,0)
 .I $P(MODIEN,"^")>0 Q
"RTN","PXAICPTV",39,0)
 .S STOP=1
"RTN","PXAICPTV",40,0)
 .S PXAERRF=1
"RTN","PXAICPTV",41,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAICPTV",42,0)
 .S PXAERR(9)="MODIFIERS"_","_SUB
"RTN","PXAICPTV",43,0)
 .S PXAERR(11)=""
"RTN","PXAICPTV",44,0)
 .S PXAERR(12)=SUB_" is NOT a valid modifier for procedure "_$G(PXAA("PROCEDURE"))
"RTN","PXAICPTV",45,0)
 ;----"Missing the number of times the procedure was performed.
"RTN","PXAICPTV",46,0)
 I $G(PXAA("QTY"))<1 D
"RTN","PXAICPTV",47,0)
 .S STOP=0
"RTN","PXAICPTV",48,0)
 .S PXAERRF=1
"RTN","PXAICPTV",49,0)
 .S PXADI("DIALOG")=8390001.002
"RTN","PXAICPTV",50,0)
 .S PXAERR(9)="QTY"
"RTN","PXAICPTV",51,0)
 .S PXAERR(11)=$G(PXAA("QTY"))
"RTN","PXAICPTV",52,0)
 .S PXAERR(12)="If this node is empty we will assume it should be '1'. If it is a less than '1' we will delete any reference to it in the data base."
"RTN","PXAICPTV",53,0)
 ;
"RTN","PXAICPTV",54,0)
 ;
"RTN","PXAICPTV",55,0)
 Q
"RTN","PXAICPTV",56,0)
VAL04 ;---PROVIDER NARRATIVE
"RTN","PXAICPTV",57,0)
 S STOP=1
"RTN","PXAICPTV",58,0)
 S PXAERRF=1
"RTN","PXAICPTV",59,0)
 S PXADI("DIALOG")=8390001.001
"RTN","PXAICPTV",60,0)
 S PXAERR(9)="NARRATIVE"
"RTN","PXAICPTV",61,0)
 S PXAERR(11)=$G(PXAA("NARRATIVE"))
"RTN","PXAICPTV",62,0)
 S PXAERR(12)="We are unable to retrive a narrative from the PROVIDER NARRATIVE file #9999999.27"
"RTN","PXAICPTV",63,0)
 Q
"RTN","PXAICPTV",64,0)
VAL45 ;---PROVIDER NARRATIVE CATEGORY
"RTN","PXAICPTV",65,0)
 S STOP=0
"RTN","PXAICPTV",66,0)
 S PXAERRF=1
"RTN","PXAICPTV",67,0)
 S PXADI("DIALOG")=8390001.002
"RTN","PXAICPTV",68,0)
 S PXAERR(9)="CATEGORY"
"RTN","PXAICPTV",69,0)
 S PXAERR(11)=$G(PXAA("CATEGORY"))
"RTN","PXAICPTV",70,0)
 S PXAERR(12)="We are unable to retrieve a narrative from the PROVIDER NARRATIVE file #9999999.27"
"RTN","PXAICPTV",71,0)
 Q
"RTN","PXAICPTV",72,0)
 ;---------------------SUBROUTINE------------------------------
"RTN","PXAICPTV",73,0)
ARRAY ;--SET ERRORS AND WARNINGS INTO AN ARRAY TO RETURN TO CALLER
"RTN","PXAICPTV",74,0)
 I PXADI("DIALOG")=8390001.001 D
"RTN","PXAICPTV",75,0)
 .S PXASUB=PXASUB+1
"RTN","PXAICPTV",76,0)
 .S PXAPROB($J,PXASUB,"ERROR1",PXAERR(7),PXAERR(9),PXAK)=$G(PXAERR(12))
"RTN","PXAICPTV",77,0)
 I PXADI("DIALOG")=8390001.002 D
"RTN","PXAICPTV",78,0)
 .S PXASUB=PXASUB+1
"RTN","PXAICPTV",79,0)
 .S PXAPROB($J,PXASUB,"WARNING2",PXAERR(7),PXAERR(9),PXAK)=$G(PXAERR(12))
"RTN","PXAICPTV",80,0)
 I PXADI("DIALOG")=8390001.003 D
"RTN","PXAICPTV",81,0)
 .S PXASUB=PXASUB+1
"RTN","PXAICPTV",82,0)
 .S PXAPROB($J,PXASUB,"WARNING3","ENCOUNTER",1,"SC")=$G(PXAERR("6W"))
"RTN","PXAICPTV",83,0)
 .S PXAPROB($J,PXASUB,"WARNING3","ENCOUNTER",1,"AO")=$G(PXAERR("7W"))
"RTN","PXAICPTV",84,0)
 .S PXAPROB($J,PXASUB,"WARNING3","ENCOUNTER",1,"IR")=$G(PXAERR("8W"))
"RTN","PXAICPTV",85,0)
 .S PXAPROB($J,PXASUB,"WARNING3","ENCOUNTER",1,"EC")=$G(PXAERR("9W"))
"RTN","PXAICPTV",86,0)
 .S PXAPROB($J,PXASUB,"WARNING3","ENCOUNTER",1,"MST")=$G(PXAERR("10W"))
"RTN","PXAICPTV",87,0)
 .;PX*1*111 - Add HNC
"RTN","PXAICPTV",88,0)
 .S PXAPROB($J,PXASUB,"WARNING3","ENCOUNTER",1,"HNC")=$G(PXAERR("17W"))
"RTN","PXAICPTV",89,0)
 I PXADI("DIALOG")=8390001.004 D
"RTN","PXAICPTV",90,0)
 .S PXASUB=PXASUB+1
"RTN","PXAICPTV",91,0)
 .S PXAPROB($J,PXASUB,"ERROR4","PX/DL",PXAK)=$G(PXAERR("PL1"))
"RTN","PXAICPTV",92,0)
 Q
"RTN","PXAIMOD")
0^3^B2663372
"RTN","PXAIMOD",1,0)
PXAIMOD ;ISA/KWP - MODIFIER SUB FOR DATA2PCE;7/19/99
"RTN","PXAIMOD",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**73,121**;Aug 12, 1996
"RTN","PXAIMOD",3,0)
 ;
"RTN","PXAIMOD",4,0)
SET ;--SET AND NEW VARIABLES
"RTN","PXAIMOD",5,0)
 Q
"RTN","PXAIMOD",6,0)
SETVARA ;--SET VISIT VARIABLES
"RTN","PXAIMOD",7,0)
 N PXMOD
"RTN","PXAIMOD",8,0)
 S PXMOD=""
"RTN","PXAIMOD",9,0)
 F  S PXMOD=$O(PXAA("MODIFIERS",PXMOD)) Q:PXMOD=""  S AFTER1(PXMOD)=""
"RTN","PXAIMOD",10,0)
 Q
"RTN","PXAIMOD",11,0)
SETPXKA ;
"RTN","PXAIMOD",12,0)
 N PXMOD,PXCNT,PXMODIEN
"RTN","PXAIMOD",13,0)
 S PXMOD=""
"RTN","PXAIMOD",14,0)
 F PXCNT=1:1 S PXMOD=$O(AFTER1(PXMOD)) Q:PXMOD=""  D
"RTN","PXAIMOD",15,0)
 . ;S PXMODIEN=$$MODP^ICPTMOD($P(AFTER0,U),PXMOD,"E")
"RTN","PXAIMOD",16,0)
 . S PXMODIEN=$$MODP^ICPTMOD($P(AFTER0,U),PXMOD,"E",+^AUPNVSIT(PXAVISIT,0))
"RTN","PXAIMOD",17,0)
 . Q:PXMODIEN<1
"RTN","PXAIMOD",18,0)
 . S ^TMP("PXK",$J,"CPT",PXAK,1,PXCNT,"AFTER")=+PXMODIEN
"RTN","PXAIMOD",19,0)
 Q
"RTN","PXAIMOD",20,0)
SETVARB ;--SET VARIABLES BEFORE
"RTN","PXAIMOD",21,0)
 N PXMODIEN,PXIEN
"RTN","PXAIMOD",22,0)
 S PXIEN=0
"RTN","PXAIMOD",23,0)
 F  S PXIEN=$O(^AUPNVCPT(IENB,1,PXIEN)) Q:'PXIEN  D
"RTN","PXAIMOD",24,0)
 . S PXMODIEN=^AUPNVCPT(IENB,1,PXIEN,0)
"RTN","PXAIMOD",25,0)
 . S ^TMP("PXK",$J,"CPT",PXAK,1,PXIEN,"BEFORE")=PXMODIEN
"RTN","PXAIMOD",26,0)
 Q
"RTN","PXAIMOD",27,0)
SETPXKB ;--SET PXK ARRAY BEFORE
"RTN","PXAIMOD",28,0)
 N PXMOD,PXCNT,PXMODIEN
"RTN","PXAIMOD",29,0)
 S PXMOD=""
"RTN","PXAIMOD",30,0)
 F PXCNT=1:1 S PXMOD=$O(BEFOR1(PXMOD)) Q:PXMOD=""  D
"RTN","PXAIMOD",31,0)
 . ;S PXMODIEN=$$MODP^ICPTMOD($P(BEFOR0,U),PXMOD,"E")
"RTN","PXAIMOD",32,0)
 . S PXMODIEN=$$MODP^ICPTMOD($P(BEFOR0,U),PXMOD,"E",+^AUPNVSIT(PXAVISIT,0))
"RTN","PXAIMOD",33,0)
 . Q:PXMODIEN<1
"RTN","PXAIMOD",34,0)
 . S ^TMP("PXK",$J,"CPT",PXAK,1,PXCNT,"BEFORE")=+PXMODIEN
"RTN","PXAIMOD",35,0)
 Q
"RTN","PXAIPOVV")
0^4^B2601600
"RTN","PXAIPOVV",1,0)
PXAIPOVV ;ISL/JVS - VALADATE DIAGNOSIS ;6/6/96  07:40
"RTN","PXAIPOVV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**121**;Aug 12, 1996
"RTN","PXAIPOVV",3,0)
 ;
"RTN","PXAIPOVV",4,0)
VAL ;--VALIDATE ENOUGH DATA
"RTN","PXAIPOVV",5,0)
 ;----Missing a pointer to PROCEDURE(CPT) name
"RTN","PXAIPOVV",6,0)
 I $G(PXAA("DIAGNOSIS"))']"" D  Q:$G(STOP)
"RTN","PXAIPOVV",7,0)
 .S STOP=1 ;--USED TO STOP DO LOOP
"RTN","PXAIPOVV",8,0)
 .S PXAERRF=1 ;--FLAG INDICATES THERE IS AN ERR
"RTN","PXAIPOVV",9,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAIPOVV",10,0)
 .S PXAERR(9)="DIAGNOSIS"
"RTN","PXAIPOVV",11,0)
 .S PXAERR(11)=$G(PXAA("DIAGNOSIS"))
"RTN","PXAIPOVV",12,0)
 .S PXAERR(12)="You are missing a pointer to the DIAGNOSIS FILE#80 that represents the diagnosises name"
"RTN","PXAIPOVV",13,0)
 ;
"RTN","PXAIPOVV",14,0)
 ;----NOT a pointer to PROCEDURE CPT FILE#80
"RTN","PXAIPOVV",15,0)
 I '$D(^ICD9($G(PXAA("DIAGNOSIS")),0)),$G(PXAA("DELETE"))'=1 D  Q:$G(STOP)
"RTN","PXAIPOVV",16,0)
 .S STOP=1
"RTN","PXAIPOVV",17,0)
 .S PXAERRF=1
"RTN","PXAIPOVV",18,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAIPOVV",19,0)
 .S PXAERR(9)="DIAGNOSIS"
"RTN","PXAIPOVV",20,0)
 .S PXAERR(11)=$G(PXAA("DIAGNOSIS"))
"RTN","PXAIPOVV",21,0)
 .S PXAERR(12)=PXAERR(11)_" is NOT a pointer value to the CPT FILE #80"
"RTN","PXAIPOVV",22,0)
 ;
"RTN","PXAIPOVV",23,0)
 ;----not a valid ICD9 code
"RTN","PXAIPOVV",24,0)
 I $P($$ICDDX^ICDCODE(PXAA("DIAGNOSIS"),+^AUPNVSIT(PXAVISIT,0)),"^",10)'=1 D  Q:$G(STOP)
"RTN","PXAIPOVV",25,0)
 .S STOP=1
"RTN","PXAIPOVV",26,0)
 .S PXAERRF=1
"RTN","PXAIPOVV",27,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAIPOVV",28,0)
 .S PXAERR(9)="DIAGNOSIS"
"RTN","PXAIPOVV",29,0)
 .S PXAERR(11)=$G(PXAA("DIAGNOSIS"))
"RTN","PXAIPOVV",30,0)
 .S PXAERR(12)=PXAERR(11)_" is NOT an valid ICD9 code"
"RTN","PXAIPOVV",31,0)
 ;
"RTN","PXAIPOVV",32,0)
 ;
"RTN","PXAIPOVV",33,0)
 Q
"RTN","PXBDCPT")
0^9^B33211844
"RTN","PXBDCPT",1,0)
PXBDCPT ;ISL/JVS,ESW - DISPLAY CPT ; 12/5/02 11:28am
"RTN","PXBDCPT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**11,73,89,108,121**;Aug 12, 1996
"RTN","PXBDCPT",3,0)
 ;
"RTN","PXBDCPT",4,0)
 ;
"RTN","PXBDCPT",5,0)
EN0 ;---Main entry point
"RTN","PXBDCPT",6,0)
 ;
"RTN","PXBDCPT",7,0)
 ;
"RTN","PXBDCPT",8,0)
HEAD ;--HEADER ON LIST
"RTN","PXBDCPT",9,0)
 S HEAD="- - E N C O U N T E R  P R O C E D U R E S (CPT CODES) - -"
"RTN","PXBDCPT",10,0)
 W IOINHI,!,IOCUU,?(IOM-$L(HEAD))\2,HEAD,IOINLOW
"RTN","PXBDCPT",11,0)
 W IOELEOL K HEAD
"RTN","PXBDCPT",12,0)
 ;
"RTN","PXBDCPT",13,0)
 I $D(CLINIC) D PRV^PXBUTL2(CLINIC)
"RTN","PXBDCPT",14,0)
 ;
"RTN","PXBDCPT",15,0)
 ;I PXBCNT<11 D DISCPT1^PXBDCPT
"RTN","PXBDCPT",16,0)
 ;I PXBCNT<21&(PXBCNT>10) D DISCPT2^PXBDCPT
"RTN","PXBDCPT",17,0)
 ;I PXBCNT>20&(PXBCNT<31) D DISCPT3^PXBDCPT
"RTN","PXBDCPT",18,0)
 ;I PXBCNT>30&('$D(PXBNCPT)) 
"RTN","PXBDCPT",19,0)
 D DISCPT4^PXBDCPT("BEGIN")
"RTN","PXBDCPT",20,0)
 ;I PXBCNT>30&($D(PXBNCPT)) D DISCPT4^PXBDCPT("SAME")
"RTN","PXBDCPT",21,0)
 Q
"RTN","PXBDCPT",22,0)
 ;
"RTN","PXBDCPT",23,0)
 ;
"RTN","PXBDCPT",24,0)
 ;
"RTN","PXBDCPT",25,0)
ARRAY ;Set all CPT codes and modifiers into ^TMP("PXBDCPT",$J,"DSP"
"RTN","PXBDCPT",26,0)
 ;for display
"RTN","PXBDCPT",27,0)
 ;
"RTN","PXBDCPT",28,0)
 N PXSQ,ENTRY,PXMD,PXDESC
"RTN","PXBDCPT",29,0)
 S PXTMP="^TMP(""PXBDCPT"""_","_$J_","_"""DSP"")"
"RTN","PXBDCPT",30,0)
 K @PXTMP
"RTN","PXBDCPT",31,0)
 S (PXTLNS,PXSQ)=0
"RTN","PXBDCPT",32,0)
 F  S PXSQ=$O(PXBSAM(PXSQ)) Q:'PXSQ  D
"RTN","PXBDCPT",33,0)
 .S PXTLNS=PXTLNS+1
"RTN","PXBDCPT",34,0)
 .S ENTRY=PXBSAM(PXSQ)
"RTN","PXBDCPT",35,0)
 .S PXBSAM(PXSQ,"LINE")=PXTLNS
"RTN","PXBDCPT",36,0)
 .I $D(PXBNCPT($P(ENTRY,U))) D
"RTN","PXBDCPT",37,0)
 ..;I PXBNCPT($P(ENTRY,U))]"",'$D(PXBSKY(PXSQ,PXBNCPT($P(ENTRY,U)))) Q
"RTN","PXBDCPT",38,0)
 ..Q:'$D(PXBNCPT($P(ENTRY,U),$O(PXBSKY(PXSQ,0))))
"RTN","PXBDCPT",39,0)
 ..S $P(ENTRY,U)=$P(ENTRY,U)_"*"
"RTN","PXBDCPT",40,0)
 .S @PXTMP@(PXTLNS,0)=PXSQ_U_$P(ENTRY,U)_U_$P(ENTRY,U,2)_U_$P(ENTRY,U,4)_U_$E($P(ENTRY,U,3),1,24)
"RTN","PXBDCPT",41,0)
 .S PXMD=""
"RTN","PXBDCPT",42,0)
 .F  S PXMD=$O(PXBSAM(PXSQ,"MOD",PXMD)) Q:'PXMD  D
"RTN","PXBDCPT",43,0)
 ..S PXTLNS=PXTLNS+1
"RTN","PXBDCPT",44,0)
 ..S PXMOD=PXBSAM(PXSQ,"MOD",PXMD)
"RTN","PXBDCPT",45,0)
 ..S PXDESC=$P($$MODP^ICPTMOD($E(ENTRY,1,5),PXMOD,"E",IDATE),U,2) ;PX*108
"RTN","PXBDCPT",46,0)
 ..S @PXTMP@(PXTLNS,0)=0_U_PXMOD_U_$E(PXDESC,1,54)
"RTN","PXBDCPT",47,0)
 Q
"RTN","PXBDCPT",48,0)
DISCPT1 ;--Display the CPT Data
"RTN","PXBDCPT",49,0)
 ;
"RTN","PXBDCPT",50,0)
 N ENTRY,J
"RTN","PXBDCPT",51,0)
 D UNDON^PXBCC
"RTN","PXBDCPT",52,0)
 W !,"No.",?4,"CPT CODE",?14,"QUANTITY",?25,"DESCRIPTION",?55,"PROVIDER",?75,$C(32)
"RTN","PXBDCPT",53,0)
 W IOEDEOP
"RTN","PXBDCPT",54,0)
 D UNDOFF^PXBCC
"RTN","PXBDCPT",55,0)
 ;
"RTN","PXBDCPT",56,0)
 ;
"RTN","PXBDCPT",57,0)
 S J=0
"RTN","PXBDCPT",58,0)
 F  S J=$O(PXBSAM(J)) Q:J=""  D
"RTN","PXBDCPT",59,0)
 .S ENTRY=$G(PXBSAM(J))
"RTN","PXBDCPT",60,0)
 .I $D(PXBNCPT($P(ENTRY,U,1))) S $P(ENTRY,U,1)=$P(ENTRY,U,1)_"*"
"RTN","PXBDCPT",61,0)
 .W !,J,?4,$P(ENTRY,U,1),?15,$P(ENTRY,U,2)
"RTN","PXBDCPT",62,0)
 .W ?25,$P(ENTRY,U,4),?55,$E($P(ENTRY,U,3),1,24)
"RTN","PXBDCPT",63,0)
 .;---Display associated modifiers
"RTN","PXBDCPT",64,0)
 .S PXSIEN=""
"RTN","PXBDCPT",65,0)
 .F  S PXSIEN=$O(PXBSAM(J,"MOD",PXSIEN)) Q:PXSIEN=""  D
"RTN","PXBDCPT",66,0)
 ..N PXWRAP,PXMOD,PXDESC,PXLN
"RTN","PXBDCPT",67,0)
 ..S PXMOD=PXBSAM(J,"MOD",PXSIEN)
"RTN","PXBDCPT",68,0)
 ..S PXDESC=$P($$MOD^ICPTMOD(PXMOD,"E",IDATE),U,3)
"RTN","PXBDCPT",69,0)
 ..D WRAP^PXCEVFI4(PXDESC,58,.PXWRAP)
"RTN","PXBDCPT",70,0)
 ..F PXLN=1:1 Q:$G(PXWRAP(PXLN))=""  D
"RTN","PXBDCPT",71,0)
 ...W:PXLN=1 !,?4,"CPT Modifier: "_PXMOD
"RTN","PXBDCPT",72,0)
 ...W:PXLN>1 !
"RTN","PXBDCPT",73,0)
 ...W ?22,PXWRAP(PXLN)
"RTN","PXBDCPT",74,0)
 ;---Write no entries if none exsist
"RTN","PXBDCPT",75,0)
 I '$D(PXBSAM) D NONE^PXBUTL(2)
"RTN","PXBDCPT",76,0)
 Q
"RTN","PXBDCPT",77,0)
 ;
"RTN","PXBDCPT",78,0)
DISCPT2 ;--display of cpt data two columns more that 10 entries.
"RTN","PXBDCPT",79,0)
 ;
"RTN","PXBDCPT",80,0)
 N ENTRY,J,PXA
"RTN","PXBDCPT",81,0)
 D GSET^%ZISS
"RTN","PXBDCPT",82,0)
 D UNDON^PXBCC W IOG1
"RTN","PXBDCPT",83,0)
 W !,"NO",?4,"CPT",?10,"QUA",?14,"DESCRIPTION",?39,IOVL
"RTN","PXBDCPT",84,0)
 W ?40,"NO",?44,"CPT",?50,"QUA",?54,"NARRATIVE"
"RTN","PXBDCPT",85,0)
 W IOEDEOP
"RTN","PXBDCPT",86,0)
 D UNDOFF^PXBCC
"RTN","PXBDCPT",87,0)
 ;
"RTN","PXBDCPT",88,0)
 ;
"RTN","PXBDCPT",89,0)
 ;
"RTN","PXBDCPT",90,0)
 S J=0 F  S J=$O(PXBSAM(J)) Q:J=""  D
"RTN","PXBDCPT",91,0)
 .S ENTRY(J)=$G(PXBSAM(J)) I $D(PXBNCPT($P(ENTRY(J),U,1))) S $P(ENTRY(J),U,1)=$P(ENTRY(J),U,1)_"*"
"RTN","PXBDCPT",92,0)
 F J=1:1:10 D
"RTN","PXBDCPT",93,0)
 .W !,J,?4,$P(ENTRY(J),U,1),?11,$P(ENTRY(J),U,2),?14,$E($P(ENTRY(J),U,4),1,24)
"RTN","PXBDCPT",94,0)
 .I $D(ENTRY(J+10)) W ?39,IOVL,(J+10),?44,$P(ENTRY(J+10),U,1),?51,$P(ENTRY(J+10),U,2),?54,$E($P(ENTRY(J+10),U,4),1,24)
"RTN","PXBDCPT",95,0)
 W IOG0
"RTN","PXBDCPT",96,0)
 Q
"RTN","PXBDCPT",97,0)
 ;
"RTN","PXBDCPT",98,0)
DISCPT3 ;--display of cpt data three colums more that 20 entries.
"RTN","PXBDCPT",99,0)
 N ENTRY,J,PXA
"RTN","PXBDCPT",100,0)
 D GSET^%ZISS
"RTN","PXBDCPT",101,0)
 D UNDON^PXBCC W IOG1
"RTN","PXBDCPT",102,0)
 W !,"NO",?4,"CPT",?10,"QUA",?14,"NARRATIVE",?25,IOVL
"RTN","PXBDCPT",103,0)
 W ?26,"NO",?30,"CPT",?36,"QUA",?40,"NARRATIVE",?51,IOVL
"RTN","PXBDCPT",104,0)
 W ?52,"NO",?56,"CPT",?62,"QUA",?66,"NARRATIVE"
"RTN","PXBDCPT",105,0)
 W IOEDEOP
"RTN","PXBDCPT",106,0)
 D UNDOFF^PXBCC
"RTN","PXBDCPT",107,0)
 ;
"RTN","PXBDCPT",108,0)
 S J=0 F  S J=$O(PXBSAM(J)) Q:J=""  D
"RTN","PXBDCPT",109,0)
 .S ENTRY(J)=$G(PXBSAM(J)) I $D(PXBNCPT($P(ENTRY(J),U,1))) S $P(ENTRY(J),U,1)=$P(ENTRY(J),U,1)_"*"
"RTN","PXBDCPT",110,0)
 F J=1:1:10 D
"RTN","PXBDCPT",111,0)
 .W !,J,?4,$P(ENTRY(J),U,1),?11,$P(ENTRY(J),U,2),?14,$E($P(ENTRY(J),U,4),1,10)
"RTN","PXBDCPT",112,0)
 .I $D(ENTRY(J+10)) W ?25,IOVL,(J+10),?30,$P(ENTRY(J+10),U,1),?37,$P(ENTRY(J+10),U,2),?40,$E($P(ENTRY(J+10),U,4),1,10)
"RTN","PXBDCPT",113,0)
 .I $D(ENTRY(J+20)) W ?51,IOVL,(J+20),?56,$P(ENTRY(J+20),U,1),?63,$P(ENTRY(J+20),U,2),?66,$E($P(ENTRY(J+20),U,4),1,10)
"RTN","PXBDCPT",114,0)
 W IOG0
"RTN","PXBDCPT",115,0)
 Q
"RTN","PXBDCPT",116,0)
 ;
"RTN","PXBDCPT",117,0)
DISCPT4(SIGN) ;--Display the CPT Data
"RTN","PXBDCPT",118,0)
 ;
"RTN","PXBDCPT",119,0)
 ;SIGN=
"RTN","PXBDCPT",120,0)
 ; '+' add 10 to the starting point in ^TMP("PXBDCPT",$J)
"RTN","PXBDCPT",121,0)
 ; '-' subtract 10 from the starting point but not less that 0
"RTN","PXBDCPT",122,0)
 ; 'BEGIN' start at the beginning
"RTN","PXBDCPT",123,0)
 ; 'SAME' start stays where it's at
"RTN","PXBDCPT",124,0)
 ; '3'--any number set start to that number
"RTN","PXBDCPT",125,0)
 ;
"RTN","PXBDCPT",126,0)
 N PXBSTART,PXTMP
"RTN","PXBDCPT",127,0)
 D ARRAY
"RTN","PXBDCPT",128,0)
 I SIGN="BEGIN" S ^TMP("PXBDCPT",$J,"START")=0,PXBSTART=0
"RTN","PXBDCPT",129,0)
 I SIGN="SAME" S PXBSTART=^TMP("PXBDCPT",$J,"START")
"RTN","PXBDCPT",130,0)
 I SIGN="+" D
"RTN","PXBDCPT",131,0)
 .S PXBSTART=($G(^TMP("PXBDCPT",$J,"START"))+10)
"RTN","PXBDCPT",132,0)
 .I PXBSTART'<PXTLNS S PXBSTART=PXBSTART-10
"RTN","PXBDCPT",133,0)
 .S ^TMP("PXBDCPT",$J,"START")=PXBSTART
"RTN","PXBDCPT",134,0)
 I SIGN="-" D
"RTN","PXBDCPT",135,0)
 .S PXBSTART=$G(^TMP("PXBDCPT",$J,"START"))-10
"RTN","PXBDCPT",136,0)
 .S ^TMP("PXBDCPT",$J,"START")=PXBSTART
"RTN","PXBDCPT",137,0)
 .I PXBSTART<0 S PXBSTART=0 S ^TMP("PXBDCPT",$J,"START")=0
"RTN","PXBDCPT",138,0)
 I +SIGN>0&(SIGN#10) D  Q:^TMP("PXBDCPT",$J,"START")=PXBSTART  S ^TMP("PXBDCPT",$J,"START")=PXBSTART
"RTN","PXBDCPT",139,0)
 .S PXBSTART=$P((SIGN/10),".")*10
"RTN","PXBDCPT",140,0)
 .S:PXBSTART<10 PXBSTART=0
"RTN","PXBDCPT",141,0)
 I +SIGN>0&'(SIGN#10) D  Q:^TMP("PXBDCPT",$J,"START")=PXBSTART  S ^TMP("PXBDCPT",$J,"START")=PXBSTART
"RTN","PXBDCPT",142,0)
 .S PXBSTART=(($P((SIGN/10),".")*10)-10)
"RTN","PXBDCPT",143,0)
 .S:PXBSTART<10 PXBSTART=0
"RTN","PXBDCPT",144,0)
 ;
"RTN","PXBDCPT",145,0)
 ;
"RTN","PXBDCPT",146,0)
 I SIGN'="BEGIN" D LOC^PXBCC(3,0) W IOEDEOP
"RTN","PXBDCPT",147,0)
 ;
"RTN","PXBDCPT",148,0)
HEAD4 ;--HEADER ON LIST
"RTN","PXBDCPT",149,0)
 S HEAD="- - E N C O U N T E R  P R O C E D U R E S (CPT CODES) - -"
"RTN","PXBDCPT",150,0)
 W IOINHI,!,IOCUU,?(IOM-$L(HEAD))\2,HEAD,IOINLOW
"RTN","PXBDCPT",151,0)
 W IOELEOL K HEAD
"RTN","PXBDCPT",152,0)
 ;
"RTN","PXBDCPT",153,0)
 ;
"RTN","PXBDCPT",154,0)
 N ENTRY,J
"RTN","PXBDCPT",155,0)
 D UNDON^PXBCC
"RTN","PXBDCPT",156,0)
 W !,"No.",?4,"CPT CODE",?14,"QUANTITY",?25,"DESCRIPTION",?55,"PROVIDER",?75,$C(32)
"RTN","PXBDCPT",157,0)
 W IOEDEOP
"RTN","PXBDCPT",158,0)
 D UNDOFF^PXBCC
"RTN","PXBDCPT",159,0)
 ;
"RTN","PXBDCPT",160,0)
 ;
"RTN","PXBDCPT",161,0)
 N PXSIEN,PXDESC,PXMOD,PXQ,PXLNS
"RTN","PXBDCPT",162,0)
 S J=PXBSTART,PXQ=""
"RTN","PXBDCPT",163,0)
 S PXLNS=0
"RTN","PXBDCPT",164,0)
 F  S J=$O(@PXTMP@(J)) Q:J=""  D  Q:PXQ
"RTN","PXBDCPT",165,0)
 .S PXLNS=PXLNS+1
"RTN","PXBDCPT",166,0)
 .I '(PXLNS#11) D  Q
"RTN","PXBDCPT",167,0)
 ..S ^TMP("PXBDCPT",$J,"START")=PXBSTART
"RTN","PXBDCPT",168,0)
 ..S PXQ=1
"RTN","PXBDCPT",169,0)
 .I +@PXTMP@(J,0) D
"RTN","PXBDCPT",170,0)
 ..W !,$P(^(0),U),?4,$P(^(0),U,2),?15,$P(^(0),U,3)
"RTN","PXBDCPT",171,0)
 ..W ?25,$P(^(0),U,4),?55,$P(^(0),U,5)
"RTN","PXBDCPT",172,0)
 .E  D
"RTN","PXBDCPT",173,0)
 ..W !?4,"CPT Modifier: "_$P(^(0),U,2)_"  "_$P(^(0),U,3)
"RTN","PXBDCPT",174,0)
 I SIGN'="BEGIN" W !!
"RTN","PXBDCPT",175,0)
 Q
"RTN","PXBDCPT",176,0)
 ;
"RTN","PXBGCPT4")
0^10^B23568997
"RTN","PXBGCPT4",1,0)
PXBGCPT4 ;ISL/JVS,ESW - DOUBLE ?? GATHERING OF FORM PROCEDURES ; 5/7/03 3:35pm
"RTN","PXBGCPT4",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**11,73,43,108,121**;Aug 12, 1996
"RTN","PXBGCPT4",3,0)
 ;
"RTN","PXBGCPT4",4,0)
 ;
"RTN","PXBGCPT4",5,0)
 ;
"RTN","PXBGCPT4",6,0)
 W !,"THIS IS NOT AN ENTRY POINT" Q
"RTN","PXBGCPT4",7,0)
 ;  
"RTN","PXBGCPT4",8,0)
 ;
"RTN","PXBGCPT4",9,0)
DOUBLE1(FROM) ;--Entry point
"RTN","PXBGCPT4",10,0)
 ;
"RTN","PXBGCPT4",11,0)
NEW ;
"RTN","PXBGCPT4",12,0)
 ;
"RTN","PXBGCPT4",13,0)
 N FILE,FIELD,TITLE,HEADING,SUB,NAME,START,SCREEN,OK,INDEX,CYCLE
"RTN","PXBGCPT4",14,0)
 N TOTAL,PRV,CNT,PXBPMT,CODE,SUB2,SUBM,MODSTR,CNUM,MNUM,CONT,QT,PXMDIEN
"RTN","PXBGCPT4",15,0)
 ;---SETUP VARIABLES
"RTN","PXBGCPT4",16,0)
 S BACK="",INDEX=""
"RTN","PXBGCPT4",17,0)
 S START=DATA,(CONT,SUB,SUB2,SUBM)=0
"RTN","PXBGCPT4",18,0)
 ;
"RTN","PXBGCPT4",19,0)
START1 ;--RECYCLE POINT
"RTN","PXBGCPT4",20,0)
 S TITLE="- - F O R M    P R O C E D U R E S - -"
"RTN","PXBGCPT4",21,0)
 ;
"RTN","PXBGCPT4",22,0)
 D GETLST^IBDF18A(CLINIC,$P($T(CPT^PXBAICS),";;",2),"PXBPMT",,,1,IDATE)
"RTN","PXBGCPT4",23,0)
 ;
"RTN","PXBGCPT4",24,0)
 S TOTAL=PXBPMT(0)
"RTN","PXBGCPT4",25,0)
 I PXBPMT(0)>0 D
"RTN","PXBGCPT4",26,0)
 .S (SUB,CNT)=""
"RTN","PXBGCPT4",27,0)
 .F  S SUB=$O(PXBPMT(SUB)) Q:SUB=""  D
"RTN","PXBGCPT4",28,0)
 ..S CODE=$P(PXBPMT(SUB),U)
"RTN","PXBGCPT4",29,0)
 ..I '(CODE?5N!(CODE?1A4N)!(CODE?4N1A)) Q  ;PX*1.0*108
"RTN","PXBGCPT4",30,0)
 ..;I $P($G(^ICPT($O(^ICPT("B",CODE,0)),0)),U,4) Q
"RTN","PXBGCPT4",31,0)
 ..I '$P($$CPT^ICPTCOD(CODE,IDATE),U,7) Q
"RTN","PXBGCPT4",32,0)
 ..S NAME=$P(PXBPMT(SUB),U,2)
"RTN","PXBGCPT4",33,0)
 ..S CNT=CNT+1
"RTN","PXBGCPT4",34,0)
 ..S ^TMP("PXBTOTAL",$J,"DILIST","ID",CNT,.01)=CODE
"RTN","PXBGCPT4",35,0)
 ..S ^TMP("PXBTOTAL",$J,"DILIST","ID",CNT,2)=NAME
"RTN","PXBGCPT4",36,0)
 ..S SUBM=0
"RTN","PXBGCPT4",37,0)
 ..F  S SUBM=$O(PXBPMT(SUB,"MODIFIER",SUBM)) Q:SUBM=""  D
"RTN","PXBGCPT4",38,0)
 ...S PXMDIEN=+$$MODP^ICPTMOD(CODE,PXBPMT(SUB,"MODIFIER",SUBM),"E",IDATE)
"RTN","PXBGCPT4",39,0)
 ...S MODSTR=$$MOD^ICPTMOD(PXMDIEN,"I",IDATE)
"RTN","PXBGCPT4",40,0)
 ...I +MODSTR>0,$P(MODSTR,U,7) D
"RTN","PXBGCPT4",41,0)
 ....S ^TMP("PXBTOTAL",$J,"DILIST","ID",CNT,"MODIFIER",SUBM)=$P(MODSTR,U,2)_U_$P(MODSTR,U,3)
"RTN","PXBGCPT4",42,0)
 I $D(CNT) S TOTAL=CNT
"RTN","PXBGCPT4",43,0)
 ;
"RTN","PXBGCPT4",44,0)
 ;--DISPLAY IF NO MATCH FOUND
"RTN","PXBGCPT4",45,0)
 I TOTAL=0 W IOCUU,IOCUU,!,IOELEOL D
"RTN","PXBGCPT4",46,0)
 .;D LOC,HEAD
"RTN","PXBGCPT4",47,0)
 .D LOC W !
"RTN","PXBGCPT4",48,0)
 .S RESULTS="NO PROCEDURE BLOCKS EXIST FOR AN ENCOUNTER FORM"
"RTN","PXBGCPT4",49,0)
 .W !!!,?(IOM-$L(RESULTS))\2,RESULTS
"RTN","PXBGCPT4",50,0)
 .D HELP1^PXBUTL1("CON")
"RTN","PXBGCPT4",51,0)
 .R OK:DTIME
"RTN","PXBGCPT4",52,0)
 I TOTAL=0 S TOTAL="^C" Q TOTAL
"RTN","PXBGCPT4",53,0)
 ;
"RTN","PXBGCPT4",54,0)
 ;
"RTN","PXBGCPT4",55,0)
 ;----DISPLAY LIST TO THE SCREEN
"RTN","PXBGCPT4",56,0)
 S HEADING="W !,""ITEM"",?6,""CODE"",?13,""DESCRIPTION   "",IOINHI,TOTAL,"" ENTRIES"",IOINLOW"
"RTN","PXBGCPT4",57,0)
 ;
"RTN","PXBGCPT4",58,0)
LIST ;-DISPLAY LIST TO THE SCREEN
"RTN","PXBGCPT4",59,0)
 ;D LOC,HEAD
"RTN","PXBGCPT4",60,0)
 D LOC W !
"RTN","PXBGCPT4",61,0)
 X HEADING
"RTN","PXBGCPT4",62,0)
 S SUB=$P(CONT,U)-1
"RTN","PXBGCPT4",63,0)
 S (QT,CNUM,MNUM)=0
"RTN","PXBGCPT4",64,0)
 F  S SUB=$O(^TMP("PXBTOTAL",$J,"DILIST","ID",SUB)) Q:SUB'>0  S SUB2=SUB2+1 D  Q:QT
"RTN","PXBGCPT4",65,0)
 .S CNUM=CNUM+1
"RTN","PXBGCPT4",66,0)
 .I CNUM+MNUM=11 S CONT=SUB_U_0,QT=1 Q
"RTN","PXBGCPT4",67,0)
 .S CODE=$G(^TMP("PXBTOTAL",$J,"DILIST","ID",SUB,.01))
"RTN","PXBGCPT4",68,0)
 .S NAME=$G(^TMP("PXBTOTAL",$J,"DILIST","ID",SUB,2))
"RTN","PXBGCPT4",69,0)
 .W !,SUB,?6,CODE,?13,NAME
"RTN","PXBGCPT4",70,0)
 .S SUBM=$P(CONT,U,2)-1
"RTN","PXBGCPT4",71,0)
 .S:$P(CONT,U,2)>0 $P(CONT,U,2)=0
"RTN","PXBGCPT4",72,0)
 .F  S SUBM=$O(^TMP("PXBTOTAL",$J,"DILIST","ID",SUB,"MODIFIER",SUBM)) Q:SUBM=""  D  Q:QT
"RTN","PXBGCPT4",73,0)
 ..S MNUM=MNUM+1
"RTN","PXBGCPT4",74,0)
 ..I MNUM+CNUM=11 S CONT=SUB_U_SUBM,QT=1 Q
"RTN","PXBGCPT4",75,0)
 ..S MODSTR=^TMP("PXBTOTAL",$J,"DILIST","ID",SUB,"MODIFIER",SUBM)
"RTN","PXBGCPT4",76,0)
 ..W !?6,"CPT Modifier:",?21,$P(MODSTR,U),?25,$P(MODSTR,U,2)
"RTN","PXBGCPT4",77,0)
 ;
"RTN","PXBGCPT4",78,0)
 ;----If There is only one selection go to proper prompting
"RTN","PXBGCPT4",79,0)
 I TOTAL=1 G PRMPT2
"RTN","PXBGCPT4",80,0)
 ;
"RTN","PXBGCPT4",81,0)
PRMPT ;---WRITE PROMPT HERE
"RTN","PXBGCPT4",82,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBGCPT4",83,0)
 D LOC^PXBCC(15,1)
"RTN","PXBGCPT4",84,0)
 W !
"RTN","PXBGCPT4",85,0)
 I SUB>0 W !,"Enter '^' to quit"
"RTN","PXBGCPT4",86,0)
 E  I TOTAL>10 W !,"               END OF LIST"
"RTN","PXBGCPT4",87,0)
 I SUB>0 S DIR("A")="Select a single 'ITEM NUMBER' or 'RETURN' to continue: "
"RTN","PXBGCPT4",88,0)
 E  S DIR("A")="Select a single 'ITEM NUMBER' or 'RETURN' to exit: "
"RTN","PXBGCPT4",89,0)
 S DIR("?")="Enter ITEM 'No' to select , '^' to quit"
"RTN","PXBGCPT4",90,0)
 S DIR(0)="N,A,O^0:"_SUB2_":0^I X'?.1""^"".N K X"
"RTN","PXBGCPT4",91,0)
 D ^DIR
"RTN","PXBGCPT4",92,0)
 I X="",SUB>0 G LIST
"RTN","PXBGCPT4",93,0)
 I X="",SUB'>0 S X="^"
"RTN","PXBGCPT4",94,0)
 I $G(DIRUT) K DIRUT S VAL="^C" G EXITNEW
"RTN","PXBGCPT4",95,0)
VAL ;-----Set the VAL equal to the value
"RTN","PXBGCPT4",96,0)
 S VAL=$G(^TMP("PXBTOTAL",$J,"DILIST","ID",X,2))_"^"_$G(^TMP("PXBTOTAL",$J,"DILIST","ID",X,.01))
"RTN","PXBGCPT4",97,0)
 S (MODSTR,SUBM)=""
"RTN","PXBGCPT4",98,0)
 F  S SUBM=$O(^TMP("PXBTOTAL",$J,"DILIST","ID",X,"MODIFIER",SUBM)) Q:SUBM=""  D
"RTN","PXBGCPT4",99,0)
 .S MODSTR=MODSTR_$S(MODSTR]"":",",1:"")_$P(^TMP("PXBTOTAL",$J,"DILIST","ID",X,"MODIFIER",SUBM),U)
"RTN","PXBGCPT4",100,0)
EXITNEW ;--EXIT
"RTN","PXBGCPT4",101,0)
 K DIR,^TMP("PXBTANA",$J),^TMP("PXBTOTAL",$J)
"RTN","PXBGCPT4",102,0)
 K TANA,TOTAL
"RTN","PXBGCPT4",103,0)
 Q VAL_U_$G(MODSTR)
"RTN","PXBGCPT4",104,0)
 ;
"RTN","PXBGCPT4",105,0)
 ;-----------------SUBROUTINES--------------
"RTN","PXBGCPT4",106,0)
BACK ;
"RTN","PXBGCPT4",107,0)
 S START=$G(^TMP("PXBTANA",$J,"DILIST",1,1))
"RTN","PXBGCPT4",108,0)
 S START("IEN")=$G(^TMP("PXBTANA",$J,"DILIST",2,1))
"RTN","PXBGCPT4",109,0)
 Q
"RTN","PXBGCPT4",110,0)
FORWARD ;
"RTN","PXBGCPT4",111,0)
 S START=$G(^TMP("PXBTANA",$J,"DILIST",1,10))
"RTN","PXBGCPT4",112,0)
 S START("IEN")=$G(^TMP("PXBTANA",$J,"DILIST",2,10))
"RTN","PXBGCPT4",113,0)
 Q
"RTN","PXBGCPT4",114,0)
LOC ;--LOCATE CURSOR
"RTN","PXBGCPT4",115,0)
 D LOC^PXBCC(3,1) ;--LOCATE THE CURSOR
"RTN","PXBGCPT4",116,0)
 W IOEDEOP ;--CLEAR THE PAGE
"RTN","PXBGCPT4",117,0)
 Q
"RTN","PXBGCPT4",118,0)
HEAD ;--HEAD
"RTN","PXBGCPT4",119,0)
 W !,IOCUU,IOBON,"HELP SCREEN",IOSGR0
"RTN","PXBGCPT4",120,0)
 W ?(IOM-$L(TITLE))\2,IOINHI,TITLE,IOINLOW,IOELEOL
"RTN","PXBGCPT4",121,0)
 Q
"RTN","PXBGCPT4",122,0)
SUB ;--DISPLAY LIST TO THE SCREEN
"RTN","PXBGCPT4",123,0)
 I $P(^TMP("PXBTANA",$J,"DILIST",0),"^",1)=0 W !!,"     E N D  O F  L I S T" Q
"RTN","PXBGCPT4",124,0)
 X HEADING
"RTN","PXBGCPT4",125,0)
 S SUB=0,CNT=0
"RTN","PXBGCPT4",126,0)
 F  S SUB=$O(^TMP("PXBTANA",$J,"DILIST","ID",SUB)) Q:SUB'>0  S CNT=CNT+1 D
"RTN","PXBGCPT4",127,0)
 .S NAME=$G(^TMP("PXBTANA",$J,"DILIST","ID",SUB,.01))
"RTN","PXBGCPT4",128,0)
 .W !,SUB,?6,NAME
"RTN","PXBGCPT4",129,0)
 Q
"RTN","PXBGCPT4",130,0)
SETUP ;-SETP VARIABLES
"RTN","PXBGCPT4",131,0)
 S FILE=200,FIELD=.01
"RTN","PXBGCPT4",132,0)
 S HEADING="W !,""ITEM"",?6,""NAME"""
"RTN","PXBGCPT4",133,0)
 Q
"RTN","PXBGCPT4",134,0)
PRMPT2 ;-----Yes and No prompt if only one choice
"RTN","PXBGCPT4",135,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBGCPT4",136,0)
 D LOC^PXBCC(15,1)
"RTN","PXBGCPT4",137,0)
 S DIR("A")="Is this the correct entry "
"RTN","PXBGCPT4",138,0)
 S DIR("B")="YES"
"RTN","PXBGCPT4",139,0)
 S DIR(0)="Y"
"RTN","PXBGCPT4",140,0)
 D ^DIR
"RTN","PXBGCPT4",141,0)
 I Y=0 S X="^"
"RTN","PXBGCPT4",142,0)
 I Y=1 S X=1
"RTN","PXBGCPT4",143,0)
 G VAL
"RTN","PXBGCPT4",144,0)
 ;
"RTN","PXBGPOV4")
0^14^B17114546
"RTN","PXBGPOV4",1,0)
PXBGPOV4 ;ISL/JVS - DOUBLE ?? GATHERING OF FORM DIAGNOSES ; 5/7/03 3:31pm
"RTN","PXBGPOV4",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**11,28,121**;Aug 12, 1996
"RTN","PXBGPOV4",3,0)
 ;
"RTN","PXBGPOV4",4,0)
 ;
"RTN","PXBGPOV4",5,0)
 ;
"RTN","PXBGPOV4",6,0)
 W !,"THIS IS NOT AN ENTRY POINT" Q
"RTN","PXBGPOV4",7,0)
 ;  
"RTN","PXBGPOV4",8,0)
 ;
"RTN","PXBGPOV4",9,0)
DOUBLE1(FROM) ;--Entry point
"RTN","PXBGPOV4",10,0)
 ;
"RTN","PXBGPOV4",11,0)
NEW ;
"RTN","PXBGPOV4",12,0)
 ;
"RTN","PXBGPOV4",13,0)
 N FILE,FIELD,TITLE,HEADING,SUB,CODE,NAME,START,SCREEN,CNT,OK,INDEX,CYCLE
"RTN","PXBGPOV4",14,0)
 N TOTAL,PRV,CNT,PXBPMT,CODE,SUB2
"RTN","PXBGPOV4",15,0)
 ;---SETUP VARIABLES
"RTN","PXBGPOV4",16,0)
 S BACK="",INDEX=""
"RTN","PXBGPOV4",17,0)
 S START=DATA,SUB=0,SUB2=0
"RTN","PXBGPOV4",18,0)
 ;
"RTN","PXBGPOV4",19,0)
START1 ;--RECYCLE POINT
"RTN","PXBGPOV4",20,0)
 S TITLE="- - F O R M    D I A G N O S I S - -"
"RTN","PXBGPOV4",21,0)
 ;
"RTN","PXBGPOV4",22,0)
 D GETLST^IBDF18A(CLINIC,$P($T(POV^PXBAICS),";;",2),"PXBPMT",,,,IDATE)
"RTN","PXBGPOV4",23,0)
ME ;
"RTN","PXBGPOV4",24,0)
 ;--------TEST PURPOSES-------
"RTN","PXBGPOV4",25,0)
 ;S PXBPMT(0)=4
"RTN","PXBGPOV4",26,0)
 ;S PXBPMT(1)="^TEST"
"RTN","PXBGPOV4",27,0)
 ;S PXBPMT(2)="309.0^TEST 1"
"RTN","PXBGPOV4",28,0)
 ;S PXBPMT(3)="295.12^TEST 2"
"RTN","PXBGPOV4",29,0)
 ;S PXBPMT(4)="V62.2^TEST 3"
"RTN","PXBGPOV4",30,0)
 ;---------------------
"RTN","PXBGPOV4",31,0)
 S TOTAL=PXBPMT(0)
"RTN","PXBGPOV4",32,0)
 I PXBPMT(0)>0 D
"RTN","PXBGPOV4",33,0)
 .S (SUB,CNT)=0 F  S SUB=$O(PXBPMT(SUB)) Q:SUB=""  D
"RTN","PXBGPOV4",34,0)
 ..Q:$P(PXBPMT(SUB),"^",1)=""
"RTN","PXBGPOV4",35,0)
 ..S CODE=$P(PXBPMT(SUB),"^",1)
"RTN","PXBGPOV4",36,0)
 ..;S Y=$O(^ICD9("AB",CODE_" ",0)) Q:Y=""
"RTN","PXBGPOV4",37,0)
 ..;I $P($G(^ICD9(Y,0)),"^",9)=1 Q
"RTN","PXBGPOV4",38,0)
 ..;I $P(^(0),"^",11)'=""&(IDATE>($P(^(0),"^",11))) Q
"RTN","PXBGPOV4",39,0)
 ..Q:'$P($$ICDDX^ICDCODE(DATA,IDATE),"^",10)
"RTN","PXBGPOV4",40,0)
 ..S NAME=$P(PXBPMT(SUB),"^",2)
"RTN","PXBGPOV4",41,0)
 ..S CNT=CNT+1
"RTN","PXBGPOV4",42,0)
 ..S ^TMP("PXBTOTAL",$J,"DILIST","ID",CNT,.01)=CODE
"RTN","PXBGPOV4",43,0)
 ..S ^TMP("PXBTOTAL",$J,"DILIST","ID",CNT,2)=NAME
"RTN","PXBGPOV4",44,0)
 I $D(CNT) S TOTAL=CNT
"RTN","PXBGPOV4",45,0)
 ;
"RTN","PXBGPOV4",46,0)
 ;
"RTN","PXBGPOV4",47,0)
 ;--DISPLAY IF NO MATCH FOUND
"RTN","PXBGPOV4",48,0)
 I TOTAL=0 W IOCUU,IOCUU,!,IOELEOL D
"RTN","PXBGPOV4",49,0)
 .D LOC W !
"RTN","PXBGPOV4",50,0)
 .S RESULTS="NO DIAGNOSIS BLOCKS EXIST FOR AN ENCOUNTER FORM" W !!!,?(IOM-$L(RESULTS))\2,RESULTS D HELP1^PXBUTL1("CON") R OK:DTIME
"RTN","PXBGPOV4",51,0)
 I TOTAL=0 Q TOTAL
"RTN","PXBGPOV4",52,0)
 ;
"RTN","PXBGPOV4",53,0)
 ;
"RTN","PXBGPOV4",54,0)
 ;----DISPLAY LIST TO THE SCREEN
"RTN","PXBGPOV4",55,0)
 S HEADING="W !,""ITEM"",?6,""CODE"",?13,""DESCRIPTION   "",IOINHI,TOTAL,"" ENTRIES"",IOINLOW"
"RTN","PXBGPOV4",56,0)
LIST ;-DISPLAY LIST TO THE SCREEN
"RTN","PXBGPOV4",57,0)
 D LOC W !
"RTN","PXBGPOV4",58,0)
 X HEADING
"RTN","PXBGPOV4",59,0)
 S SUB=SUB-1
"RTN","PXBGPOV4",60,0)
 S NUM=0 F  S SUB=$O(^TMP("PXBTOTAL",$J,"DILIST","ID",SUB)) S NUM=NUM+1 Q:NUM=11  Q:SUB'>0  S SUB2=SUB2+1 D
"RTN","PXBGPOV4",61,0)
 .S CODE=$G(^TMP("PXBTOTAL",$J,"DILIST","ID",SUB,.01))
"RTN","PXBGPOV4",62,0)
 .S NAME=$G(^TMP("PXBTOTAL",$J,"DILIST","ID",SUB,2))
"RTN","PXBGPOV4",63,0)
 .W !,SUB,?6,CODE,?13,NAME
"RTN","PXBGPOV4",64,0)
 ;
"RTN","PXBGPOV4",65,0)
 ;----If There is only one selection go to proper prompting
"RTN","PXBGPOV4",66,0)
 I TOTAL=1 G PRMPT2
"RTN","PXBGPOV4",67,0)
 ;
"RTN","PXBGPOV4",68,0)
PRMPT ;---WRITE PROMPT HERE
"RTN","PXBGPOV4",69,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBGPOV4",70,0)
 D LOC^PXBCC(15,1)
"RTN","PXBGPOV4",71,0)
 W !
"RTN","PXBGPOV4",72,0)
 I SUB>0 W !,"Enter '^' to quit"
"RTN","PXBGPOV4",73,0)
 E  I TOTAL>10 W !,"               END OF LIST"
"RTN","PXBGPOV4",74,0)
 I SUB>0 S DIR("A")="Select a single 'ITEM NUMBER' or 'RETURN' to continue: "
"RTN","PXBGPOV4",75,0)
 E  S DIR("A")="Select a single 'ITEM NUMBER' or 'RETURN' to exit: "
"RTN","PXBGPOV4",76,0)
 S DIR("?")="Enter ITEM 'No' to select , '^' to quit"
"RTN","PXBGPOV4",77,0)
 S DIR(0)="N,A,O^0:"_SUB2_":0^I X'?.1""^"".N K X"
"RTN","PXBGPOV4",78,0)
 D ^DIR
"RTN","PXBGPOV4",79,0)
 I X="",SUB>0 G LIST
"RTN","PXBGPOV4",80,0)
 I X="",SUB'>0 S X="^"
"RTN","PXBGPOV4",81,0)
 I $G(DIRUT) K DIRUT S VAL="^P" G EXITNEW
"RTN","PXBGPOV4",82,0)
VAL ;-----Set the VAL equal to the value
"RTN","PXBGPOV4",83,0)
 S VAL=$G(^TMP("PXBTOTAL",$J,"DILIST",2,X))_"^"_$G(^TMP("PXBTOTAL",$J,"DILIST","ID",X,.01))
"RTN","PXBGPOV4",84,0)
EXITNEW ;--EXIT
"RTN","PXBGPOV4",85,0)
 K DIR,^TMP("PXBTANA",$J),^TMP("PXBTOTAL",$J)
"RTN","PXBGPOV4",86,0)
 K TANA,TOTAL
"RTN","PXBGPOV4",87,0)
 Q VAL
"RTN","PXBGPOV4",88,0)
 Q
"RTN","PXBGPOV4",89,0)
 ;
"RTN","PXBGPOV4",90,0)
 ;-----------------SUBROUTINES--------------
"RTN","PXBGPOV4",91,0)
BACK ;
"RTN","PXBGPOV4",92,0)
 S START=$G(^TMP("PXBTANA",$J,"DILIST",1,1))
"RTN","PXBGPOV4",93,0)
 S START("IEN")=$G(^TMP("PXBTANA",$J,"DILIST",2,1))
"RTN","PXBGPOV4",94,0)
 Q
"RTN","PXBGPOV4",95,0)
FORWARD ;
"RTN","PXBGPOV4",96,0)
 S START=$G(^TMP("PXBTANA",$J,"DILIST",1,10))
"RTN","PXBGPOV4",97,0)
 S START("IEN")=$G(^TMP("PXBTANA",$J,"DILIST",2,10))
"RTN","PXBGPOV4",98,0)
 Q
"RTN","PXBGPOV4",99,0)
LOC ;--LOCATE CURSOR
"RTN","PXBGPOV4",100,0)
 D LOC^PXBCC(3,1) ;--LOCATE THE CURSOR
"RTN","PXBGPOV4",101,0)
 W IOEDEOP ;--CLEAR THE PAGE
"RTN","PXBGPOV4",102,0)
 Q
"RTN","PXBGPOV4",103,0)
HEAD ;--HEAD
"RTN","PXBGPOV4",104,0)
 W !,IOCUU,IOBON,"HELP SCREEN",IOSGR0,?(IOM-$L(TITLE))\2,IOINHI,TITLE,IOINLOW,IOELEOL
"RTN","PXBGPOV4",105,0)
 Q
"RTN","PXBGPOV4",106,0)
SUB ;--DISPLAY LIST TO THE SCREEN
"RTN","PXBGPOV4",107,0)
 I $P(^TMP("PXBTANA",$J,"DILIST",0),"^",1)=0 W !!,"     E N D  O F  L I S T" Q
"RTN","PXBGPOV4",108,0)
 X HEADING
"RTN","PXBGPOV4",109,0)
 S SUB=0,CNT=0 F  S SUB=$O(^TMP("PXBTANA",$J,"DILIST","ID",SUB)) Q:SUB'>0  S CNT=CNT+1 D
"RTN","PXBGPOV4",110,0)
 .S NAME=$G(^TMP("PXBTANA",$J,"DILIST","ID",SUB,.01))
"RTN","PXBGPOV4",111,0)
 .W !,SUB,?6,NAME
"RTN","PXBGPOV4",112,0)
 Q
"RTN","PXBGPOV4",113,0)
SETUP ;-SETP VARIABLES
"RTN","PXBGPOV4",114,0)
 S FILE=200,FIELD=.01
"RTN","PXBGPOV4",115,0)
 S HEADING="W !,""ITEM"",?6,""NAME"""
"RTN","PXBGPOV4",116,0)
 Q
"RTN","PXBGPOV4",117,0)
PRMPT2 ;-----Yes and No prompt if onlyi choice
"RTN","PXBGPOV4",118,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBGPOV4",119,0)
 D LOC^PXBCC(15,1)
"RTN","PXBGPOV4",120,0)
 S DIR("A")="Is this the correct entry "
"RTN","PXBGPOV4",121,0)
 S DIR("B")="YES"
"RTN","PXBGPOV4",122,0)
 S DIR(0)="Y"
"RTN","PXBGPOV4",123,0)
 D ^DIR
"RTN","PXBGPOV4",124,0)
 I Y=0 S X="^"
"RTN","PXBGPOV4",125,0)
 I Y=1 S X=1
"RTN","PXBGPOV4",126,0)
 G VAL
"RTN","PXBGPRV4")
0^15^B16348609
"RTN","PXBGPRV4",1,0)
PXBGPRV4 ;ISL/JVS - DOUBLE ?? GATHERING OF FORM PROVIDERS ; 5/7/03 3:36pm
"RTN","PXBGPRV4",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**7,11,121**;Aug 12, 1996
"RTN","PXBGPRV4",3,0)
 ;
"RTN","PXBGPRV4",4,0)
 ;
"RTN","PXBGPRV4",5,0)
 ;
"RTN","PXBGPRV4",6,0)
 W !,"THIS IS NOT AN ENTRY POINT" Q
"RTN","PXBGPRV4",7,0)
 ;  
"RTN","PXBGPRV4",8,0)
 ;
"RTN","PXBGPRV4",9,0)
DOUBLE1(FROM) ;--Entry point
"RTN","PXBGPRV4",10,0)
 ;
"RTN","PXBGPRV4",11,0)
NEW ;
"RTN","PXBGPRV4",12,0)
 ;
"RTN","PXBGPRV4",13,0)
 N FILE,FIELD,TITLE,HEADING,SUB,CODE,NAME,START,SCREEN,CNT,OK,INDEX,CYCLE
"RTN","PXBGPRV4",14,0)
 N TOTAL,PRV,CNT,PXBPMT,CODE,SUB2
"RTN","PXBGPRV4",15,0)
 ;---SETUP VARIABLES
"RTN","PXBGPRV4",16,0)
 S BACK="",INDEX=""
"RTN","PXBGPRV4",17,0)
 S START=DATA,SUB=0,SUB2=0
"RTN","PXBGPRV4",18,0)
 ;
"RTN","PXBGPRV4",19,0)
START1 ;--RECYCLE POINT
"RTN","PXBGPRV4",20,0)
 S TITLE="- - F O R M    P R O V I D E R S - -"
"RTN","PXBGPRV4",21,0)
 ;
"RTN","PXBGPRV4",22,0)
 D GETLST^IBDF18A(CLINIC,$P($T(PRV^PXBAICS),";;",2),"PXBPMT",,,,IDATE)
"RTN","PXBGPRV4",23,0)
TEST ;
"RTN","PXBGPRV4",24,0)
 S TOTAL=PXBPMT(0)
"RTN","PXBGPRV4",25,0)
 I PXBPMT(0)>0 D
"RTN","PXBGPRV4",26,0)
 .S SUB=1,CNT="" F  S SUB=$O(PXBPMT(SUB)) Q:SUB=""  D
"RTN","PXBGPRV4",27,0)
 ..S NAME=$P($G(PXBPMT(SUB)),"^",2)
"RTN","PXBGPRV4",28,0)
 ..S CNT=CNT+1
"RTN","PXBGPRV4",29,0)
 ..S ^TMP("PXBTOTAL",$J,"DILIST","ID",CNT,.01)=NAME
"RTN","PXBGPRV4",30,0)
 ..S ^TMP("PXBTOTAL",$J,"DILIST",2,CNT)=$P($G(PXBPMT(SUB)),"^",1)
"RTN","PXBGPRV4",31,0)
 I $D(CNT) S TOTAL=CNT
"RTN","PXBGPRV4",32,0)
 ;
"RTN","PXBGPRV4",33,0)
 ;--DISPLAY IF NO MATCH FOUND
"RTN","PXBGPRV4",34,0)
 I TOTAL=0 W IOCUU,IOCUU,!,IOELEOL D
"RTN","PXBGPRV4",35,0)
 .D LOC W !
"RTN","PXBGPRV4",36,0)
 .S RESULTS="NO PROVIDER BLOCKS EXIST FOR AN ENCOUNTER FORM" W !!!,?(IOM-$L(RESULTS))\2,RESULTS D HELP1^PXBUTL1("CON") R OK:DTIME
"RTN","PXBGPRV4",37,0)
 I TOTAL=0 Q TOTAL
"RTN","PXBGPRV4",38,0)
 ;
"RTN","PXBGPRV4",39,0)
 ;
"RTN","PXBGPRV4",40,0)
 ;----DISPLAY LIST TO THE SCREEN
"RTN","PXBGPRV4",41,0)
 S HEADING="W !,""ITEM"",?6,""NAME"",IOINHI,TOTAL,"" ENTRIES"",IOINLOW,?30,""    PERSON CLASS IN NEW PERSON FILE"""
"RTN","PXBGPRV4",42,0)
LIST ;-DISPLAY LIST TO THE SCREEN
"RTN","PXBGPRV4",43,0)
 D LOC W !
"RTN","PXBGPRV4",44,0)
 X HEADING
"RTN","PXBGPRV4",45,0)
 S SUB=SUB-1
"RTN","PXBGPRV4",46,0)
 S NUM=0 F  S SUB=$O(^TMP("PXBTOTAL",$J,"DILIST","ID",SUB)) S NUM=NUM+1 Q:NUM=11  Q:SUB'>0  S SUB2=SUB2+1 D
"RTN","PXBGPRV4",47,0)
 .S NAME=$G(^TMP("PXBTOTAL",$J,"DILIST","ID",SUB,.01))
"RTN","PXBGPRV4",48,0)
 .S TYPE=$$OCCUP^PXBGPRV($G(^TMP("PXBTOTAL",$J,"DILIST",2,SUB)),+$P($G(^AUPNVSIT(PXBVST,0)),"^",1),"",2) D
"RTN","PXBGPRV4",49,0)
 ..N Y,DATE
"RTN","PXBGPRV4",50,0)
 ..S Y=+$P($G(^AUPNVSIT(PXBVST,0)),"^",1) X ^DD("DD") S DATE=$P(Y,"@",1)
"RTN","PXBGPRV4",51,0)
 ..I +TYPE=-2 S TYPE="*** CLASS not 'ACTIVE' on "_DATE_"***"
"RTN","PXBGPRV4",52,0)
 ..I +TYPE=-1 S TYPE=""
"RTN","PXBGPRV4",53,0)
 .W !,SUB,?6,$E(NAME,1,20),?30,$E(TYPE,1,45)
"RTN","PXBGPRV4",54,0)
 ;
"RTN","PXBGPRV4",55,0)
 ;----If There is only one selection go to proper prompting
"RTN","PXBGPRV4",56,0)
 I TOTAL=1 G PRMPT2
"RTN","PXBGPRV4",57,0)
 ;
"RTN","PXBGPRV4",58,0)
PRMPT ;---WRITE PROMPT HERE
"RTN","PXBGPRV4",59,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBGPRV4",60,0)
 D LOC^PXBCC(15,1)
"RTN","PXBGPRV4",61,0)
 W !
"RTN","PXBGPRV4",62,0)
 I SUB>0 W !,"Enter '^' to quit"
"RTN","PXBGPRV4",63,0)
 E  I TOTAL>10 W !,"               END OF LIST"
"RTN","PXBGPRV4",64,0)
 I SUB>0 S DIR("A")="Select a single 'ITEM NUMBER' or 'RETURN' to continue: "
"RTN","PXBGPRV4",65,0)
 E  S DIR("A")="Select a single 'ITEM NUMBER' or 'RETURN' to exit: "
"RTN","PXBGPRV4",66,0)
 S DIR("?")="Enter ITEM 'No' to select , '^' to quit"
"RTN","PXBGPRV4",67,0)
 S DIR(0)="N,A,O^0:"_SUB2_":0^I X'?.1""^"".N K X"
"RTN","PXBGPRV4",68,0)
 D ^DIR
"RTN","PXBGPRV4",69,0)
 I X="",SUB>0 G LIST
"RTN","PXBGPRV4",70,0)
 I X="",SUB'>0 S X="^"
"RTN","PXBGPRV4",71,0)
 I $G(DIRUT) K DIRUT S VAL="^P" G EXITNEW
"RTN","PXBGPRV4",72,0)
VAL ;-----Set the VAL equal to the value
"RTN","PXBGPRV4",73,0)
 S VAL=$G(^TMP("PXBTOTAL",$J,"DILIST",2,X))_"^"_$G(^TMP("PXBTOTAL",$J,"DILIST","ID",X,.01))
"RTN","PXBGPRV4",74,0)
EXITNEW ;--EXIT
"RTN","PXBGPRV4",75,0)
 K DIR,^TMP("PXBTANA",$J),^TMP("PXBTOTAL",$J)
"RTN","PXBGPRV4",76,0)
 K TANA,TOTAL
"RTN","PXBGPRV4",77,0)
 Q VAL
"RTN","PXBGPRV4",78,0)
 Q
"RTN","PXBGPRV4",79,0)
 ;
"RTN","PXBGPRV4",80,0)
 ;-----------------SUBROUTINES--------------
"RTN","PXBGPRV4",81,0)
BACK ;
"RTN","PXBGPRV4",82,0)
 S START=$G(^TMP("PXBTANA",$J,"DILIST",1,1))
"RTN","PXBGPRV4",83,0)
 S START("IEN")=$G(^TMP("PXBTANA",$J,"DILIST",2,1))
"RTN","PXBGPRV4",84,0)
 Q
"RTN","PXBGPRV4",85,0)
FORWARD ;
"RTN","PXBGPRV4",86,0)
 S START=$G(^TMP("PXBTANA",$J,"DILIST",1,10))
"RTN","PXBGPRV4",87,0)
 S START("IEN")=$G(^TMP("PXBTANA",$J,"DILIST",2,10))
"RTN","PXBGPRV4",88,0)
 Q
"RTN","PXBGPRV4",89,0)
LOC ;--LOCATE CURSOR
"RTN","PXBGPRV4",90,0)
 D LOC^PXBCC(3,1) ;--LOCATE THE CURSOR
"RTN","PXBGPRV4",91,0)
 W IOEDEOP ;--CLEAR THE PAGE
"RTN","PXBGPRV4",92,0)
 Q
"RTN","PXBGPRV4",93,0)
HEAD ;--HEAD
"RTN","PXBGPRV4",94,0)
 W !,IOCUU,IOBON,"HELP SCREEN",IOSGR0,?(IOM-$L(TITLE))\2,IOINHI,TITLE,IOINLOW,IOELEOL
"RTN","PXBGPRV4",95,0)
 Q
"RTN","PXBGPRV4",96,0)
SUB ;--DISPLAY LIST TO THE SCREEN
"RTN","PXBGPRV4",97,0)
 I $P(^TMP("PXBTANA",$J,"DILIST",0),"^",1)=0 W !!,"     E N D  O F  L I S T" Q
"RTN","PXBGPRV4",98,0)
 X HEADING
"RTN","PXBGPRV4",99,0)
 S SUB=0,CNT=0 F  S SUB=$O(^TMP("PXBTANA",$J,"DILIST","ID",SUB)) Q:SUB'>0  S CNT=CNT+1 D
"RTN","PXBGPRV4",100,0)
 .S NAME=$G(^TMP("PXBTANA",$J,"DILIST","ID",SUB,.01))
"RTN","PXBGPRV4",101,0)
 .W !,SUB,?6,NAME
"RTN","PXBGPRV4",102,0)
 Q
"RTN","PXBGPRV4",103,0)
SETUP ;-SETP VARIABLES
"RTN","PXBGPRV4",104,0)
 S FILE=200,FIELD=.01
"RTN","PXBGPRV4",105,0)
 S HEADING="W !,""ITEM"",?6,""NAME"""
"RTN","PXBGPRV4",106,0)
 Q
"RTN","PXBGPRV4",107,0)
PRMPT2 ;-----Yes and No prompt if onlyi choice
"RTN","PXBGPRV4",108,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBGPRV4",109,0)
 D LOC^PXBCC(15,1)
"RTN","PXBGPRV4",110,0)
 S DIR("A")="Is this the correct entry "
"RTN","PXBGPRV4",111,0)
 S DIR("B")="YES"
"RTN","PXBGPRV4",112,0)
 S DIR(0)="Y"
"RTN","PXBGPRV4",113,0)
 D ^DIR
"RTN","PXBGPRV4",114,0)
 I Y=0 S X="^"
"RTN","PXBGPRV4",115,0)
 I Y=1 S X=1
"RTN","PXBGPRV4",116,0)
 G VAL
"RTN","PXBPCPT")
0^11^B41237994
"RTN","PXBPCPT",1,0)
PXBPCPT ;ISL/JVS,ESW - PROMPT CPT ; 8/25/03 1:13pm
"RTN","PXBPCPT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**11,73,89,112,121**;Aug 12, 1996
"RTN","PXBPCPT",3,0)
 ;
"RTN","PXBPCPT",4,0)
 ;
"RTN","PXBPCPT",5,0)
 ;
"RTN","PXBPCPT",6,0)
CPT ;--CPT CODE
"RTN","PXBPCPT",7,0)
 ;SELINE=LINE NUMBER OF SELECTED ITEM
"RTN","PXBPCPT",8,0)
 N TIMED,PXBUT,EDATA,DIC,LINE,XFLAG,SELINE
"RTN","PXBPCPT",9,0)
 N I,X,Y,Q,DOUBLEQQ,NF,BAD,OK,CPT,PXEDIT
"RTN","PXBPCPT",10,0)
 I '$D(^DISV(DUZ,"PXBCPT-1")) S ^DISV(DUZ,"PXBCPT-1")=" "
"RTN","PXBPCPT",11,0)
 I '$D(IOSC) D TERM^PXBCC
"RTN","PXBPCPT",12,0)
 S DOUBLEQQ=0,PXEDIT=""
"RTN","PXBPCPT",13,0)
 S TIMED="I '$T!(DATA[""^"")!(DATA="""")"
"RTN","PXBPCPT",14,0)
 S DIC("S")="I $$CPTSCREN^PXBUTL(Y,IDATE)"
"RTN","PXBPCPT",15,0)
C ;--SECOND ENTRY POINT
"RTN","PXBPCPT",16,0)
 W IOSC
"RTN","PXBPCPT",17,0)
 ;---DYNAMIC  HEADER-----------------
"RTN","PXBPCPT",18,0)
 I '$D(CYCL) D
"RTN","PXBPCPT",19,0)
 .I PXBCNT=0,DOUBLEQQ=0 D LOC^PXBCC(2,10) W IOUON,"...There are "_$G(PXBCNT)_" PROCEDURES associated with this encounter.",IOUOFF,IOELEOL
"RTN","PXBPCPT",20,0)
 .I PXBCNT=1,DOUBLEQQ=0 D LOC^PXBCC(2,10) W IOUON,"...There is "_$G(PXBCNT)_" PROCEDURE associated with this encounter.",IOUOFF,IOELEOL
"RTN","PXBPCPT",21,0)
 .I PXBCNT>1,DOUBLEQQ=0 D LOC^PXBCC(2,10) W IOUON,"...There are "_$G(PXBCNT)_" PROCEDURES associated with this encounter.",IOUOFF,IOELEOL
"RTN","PXBPCPT",22,0)
 ;
"RTN","PXBPCPT",23,0)
 D LOC^PXBCC(15,0)
"RTN","PXBPCPT",24,0)
 ;I PXBCNT>30 
"RTN","PXBPCPT",25,0)
 ;W IOCUU,IOELEOL,
"RTN","PXBPCPT",26,0)
 W:PXTLNS>10 !,"Enter '+' for next page, '-' for last page." ;,IORC
"RTN","PXBPCPT",27,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBPCPT",28,0)
 I '$D(^TMP("PXK",$J,"CPT")) W !,"Enter PROCEDURE (CPT CODE): "
"RTN","PXBPCPT",29,0)
 I $D(^TMP("PXK",$J,"CPT")) W !,"Enter ",IOINHI,"NEXT",IOINLOW," PROCEDURE (CPT CODE): "
"RTN","PXBPCPT",30,0)
 W IOELEOL R DATA:DTIME S EDATA=DATA
"RTN","PXBPCPT",31,0)
C1 ;----Third entry point
"RTN","PXBPCPT",32,0)
 X TIMED I  S PXBUT=1 S:DATA="^^" PXBEXIT=0 S:DATA="^^^" PXBRRR="" G CPTX
"RTN","PXBPCPT",33,0)
 I DATA?1.N1"E".NAP S DATA=" "_DATA
"RTN","PXBPCPT",34,0)
 I $L(DATA)>200 S (DATA,EDATA)=$E(DATA,1,199)
"RTN","PXBPCPT",35,0)
 I DATA?24.N S (DATA,EDATA)=$E(DATA,1,24)
"RTN","PXBPCPT",36,0)
 D CASE^PXBUTL
"RTN","PXBPCPT",37,0)
 ;----SPACE BAR---
"RTN","PXBPCPT",38,0)
 I DATA=" ",$D(^DISV(DUZ,"PXBCPT-1")) S DATA=^DISV(DUZ,"PXBCPT-1") W DATA
"RTN","PXBPCPT",39,0)
 ;---------------
"RTN","PXBPCPT",40,0)
 I DATA["^P" G CPTX
"RTN","PXBPCPT",41,0)
 I DATA["^C" G CPTX
"RTN","PXBPCPT",42,0)
 ;
"RTN","PXBPCPT",43,0)
 I ((DATA="+")!(DATA="-")) D DISCPT4^PXBDCPT(DATA) G C
"RTN","PXBPCPT",44,0)
 ;
"RTN","PXBPCPT",45,0)
M ;--------If Multiple entries have been entered
"RTN","PXBPCPT",46,0)
 D ADDM^PXBPCPT1
"RTN","PXBPCPT",47,0)
 I $G(NF) G C1
"RTN","PXBPCPT",48,0)
 ;
"RTN","PXBPCPT",49,0)
DEL ;--------If Multiple deleting
"RTN","PXBPCPT",50,0)
 D DELM^PXBPCPT1
"RTN","PXBPCPT",51,0)
 I DATA["^C" G CPTX
"RTN","PXBPCPT",52,0)
 I $G(NF) G C1
"RTN","PXBPCPT",53,0)
 ;
"RTN","PXBPCPT",54,0)
 D MOD
"RTN","PXBPCPT",55,0)
 ;
"RTN","PXBPCPT",56,0)
LI ;--------If picked a line number display 
"RTN","PXBPCPT",57,0)
 ;
"RTN","PXBPCPT",58,0)
 I (DATA>0)&(DATA<(PXBCNT+1))&($L(DATA)'>$L(PXBCNT)) D
"RTN","PXBPCPT",59,0)
 .S XFLAG=1
"RTN","PXBPCPT",60,0)
 .D DISCPT4^PXBDCPT(PXBSAM(DATA,"LINE"))
"RTN","PXBPCPT",61,0)
 .D REVCPT^PXBCC(DATA,1)
"RTN","PXBPCPT",62,0)
 .S SELINE=DATA
"RTN","PXBPCPT",63,0)
 .F I=1:1:$L(DATA) W IOCUB,IOECH
"RTN","PXBPCPT",64,0)
 .S CPTQUA=$P($G(PXBSAM(DATA)),"^",2)
"RTN","PXBPCPT",65,0)
 .S DATA=$P($G(PXBSAM(DATA)),"^",1)
"RTN","PXBPCPT",66,0)
 .;I $G(Q)'>1 W DATA
"RTN","PXBPCPT",67,0)
 I $D(XFLAG),XFLAG=1 S Y=DATA G FIN
"RTN","PXBPCPT",68,0)
 ;
"RTN","PXBPCPT",69,0)
 ;
"RTN","PXBPCPT",70,0)
 ;--------If CPT is already in the file
"RTN","PXBPCPT",71,0)
 I $D(PXBKY(DATA)) D  I +PXEDIT<0 S DATA="^C" G C1
"RTN","PXBPCPT",72,0)
 .D DISCPT4^PXBDCPT(PXBSAM($O(PXBKY(DATA,0)),"LINE"))
"RTN","PXBPCPT",73,0)
 .K Q
"RTN","PXBPCPT",74,0)
 .D TIMES^PXBUTL(DATA)
"RTN","PXBPCPT",75,0)
 .S PXEDIT=$$MULTI(DATA) Q:+PXEDIT<0
"RTN","PXBPCPT",76,0)
 .I Q=1 D
"RTN","PXBPCPT",77,0)
 ..S LINE=$O(PXBKY(DATA,0))
"RTN","PXBPCPT",78,0)
 ..S XFLAG=1
"RTN","PXBPCPT",79,0)
 ..Q:PXEDIT="A"
"RTN","PXBPCPT",80,0)
 ..D REVCPT^PXBCC(LINE,1)
"RTN","PXBPCPT",81,0)
 ..S CPTQUA=$P($G(PXBSAM(LINE)),"^",2)
"RTN","PXBPCPT",82,0)
 ..S SELINE=$O(Q(0))
"RTN","PXBPCPT",83,0)
 .I Q>1,PXEDIT="E" D
"RTN","PXBPCPT",84,0)
 ..N PXPG
"RTN","PXBPCPT",85,0)
 ..S NLINE=0
"RTN","PXBPCPT",86,0)
 ..S PXPG=+$G(^TMP("PXBDCPT",$J,"START"))+10
"RTN","PXBPCPT",87,0)
 ..F  S NLINE=$O(Q(NLINE)) Q:NLINE=""  Q:PXBSAM(NLINE,"LINE")>PXPG  D
"RTN","PXBPCPT",88,0)
 ...D REVCPT^PXBCC(NLINE,1)
"RTN","PXBPCPT",89,0)
 I '$G(Q) K SELINE
"RTN","PXBPCPT",90,0)
 I PXEDIT="E",$D(Q),Q>1 D  G:DATA="^C" C1 G LI
"RTN","PXBPCPT",91,0)
 .D WHICH^PXBPWCH S:DATA["^" DATA="^C"
"RTN","PXBPCPT",92,0)
 I $D(XFLAG),XFLAG=1 S Y=DATA G FIN
"RTN","PXBPCPT",93,0)
 ;
"RTN","PXBPCPT",94,0)
 ;--------Need to do a DIC lookup on data
"RTN","PXBPCPT",95,0)
 I DATA'="??" D  G:DATA="^C" C I DATA="?" G C
"RTN","PXBPCPT",96,0)
 .D:DATA="?" EN1^PXBHLP0("PXB","CPT",1,"",1)
"RTN","PXBPCPT",97,0)
 I DATA="??" D  G:UDATA="^C" C1 G FIN
"RTN","PXBPCPT",98,0)
 .S DOUBLEQQ=1
"RTN","PXBPCPT",99,0)
 .D EN1^PXBHLP0("PXB","CPT","",1,2)
"RTN","PXBPCPT",100,0)
 .I $L(DATA,"^")>1 D
"RTN","PXBPCPT",101,0)
 ..S DATA=+$P(DATA,"^",2)_$S($P(DATA,U,3)]"":"-"_$P(DATA,U,3),1:"")
"RTN","PXBPCPT",102,0)
 ..D MOD
"RTN","PXBPCPT",103,0)
 ..S Y=DATA
"RTN","PXBPCPT",104,0)
 .S:$G(UDATA)="" UDATA="^C"
"RTN","PXBPCPT",105,0)
 .S:UDATA="^C" (DATA,EDATA,Y)=UDATA
"RTN","PXBPCPT",106,0)
 ;
"RTN","PXBPCPT",107,0)
 ;--If a "?" is NOT entered during lookup
"RTN","PXBPCPT",108,0)
 S FROM="CPT",(VAL,Y)=$P($P($$DOUBLE1^PXBGCPT2(FROM),"^",2),"--",1)
"RTN","PXBPCPT",109,0)
 S (X,DATA,EDATA)=VAL,DIC=81,DIC(0)="MZ",DIC("S")="I $P($$CPT^ICPTCOD(Y,IDATE),U,7)" D ^DIC
"RTN","PXBPCPT",110,0)
 I Y<1 S DATA="^C" G C1
"RTN","PXBPCPT",111,0)
 ;
"RTN","PXBPCPT",112,0)
 ;--If Y is good and already in file...
"RTN","PXBPCPT",113,0)
 I $D(Y),$D(PXBKY(Y)) W IORC,IOCUU,IOEDEOP,! D
"RTN","PXBPCPT",114,0)
 .D DISCPT4^PXBDCPT($O(PXBKY($P(Y,"^",2),0)))
"RTN","PXBPCPT",115,0)
 .S LINE=$O(PXBKY($P(Y,"^",2),0)) D REVCPT^PXBCC(LINE,1)
"RTN","PXBPCPT",116,0)
 .S CPTQUA=$P($G(PXBSAM(LINE)),"^",2)
"RTN","PXBPCPT",117,0)
 ;
"RTN","PXBPCPT",118,0)
 ;
"RTN","PXBPCPT",119,0)
FIN ;--FINISH CPT
"RTN","PXBPCPT",120,0)
 I $G(SELINE) S $P(REQE,"^",1)=$P($G(PXBSAM(SELINE)),"^",3)
"RTN","PXBPCPT",121,0)
 I $P(REQE,"^",1)="" S $P(REQE,"^",1)="...No Provider Selected..."
"RTN","PXBPCPT",122,0)
 I $L(Y,"^")'>1 S X=Y,DIC=81,DIC(0)="ZM",DIC("S")="I $P($$CPT^ICPTCOD(Y,IDATE),U,7)" D ^DIC
"RTN","PXBPCPT",123,0)
 I Y<0 D HELP^PXBUTL0("CPTM") G C
"RTN","PXBPCPT",124,0)
 S OK=$$CPTOK^PXBUTL(+Y,IDATE) D  G:+OK=0 C
"RTN","PXBPCPT",125,0)
 .I +OK=0 W IOCUF,IOCUF,IORVON,"INACTIVE!--",IORVOFF D HELP1^PXBUTL1("CPTI") ;--HELP
"RTN","PXBPCPT",126,0)
 S CPT=Y(0)
"RTN","PXBPCPT",127,0)
 S ^DISV(DUZ,"PXBCPT-1")=$P(CPT,"^",1)
"RTN","PXBPCPT",128,0)
 I $D(PXBNCPT) S PXBNCPTF=1
"RTN","PXBPCPT",129,0)
 I $D(PXBKY(Y(0,0))),$G(SELINE) D
"RTN","PXBPCPT",130,0)
 .S $P(REQI,"^",8)=$O(PXBSKY(SELINE,0))
"RTN","PXBPCPT",131,0)
 .S PREDOC=$P(PXBSAM(SELINE),"^",3)
"RTN","PXBPCPT",132,0)
 .I $D(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1))) D
"RTN","PXBPCPT",133,0)
 ..Q:$P(REQI,"^",8)]""
"RTN","PXBPCPT",134,0)
 ..S $P(REQI,"^",8)=$O(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1),0))
"RTN","PXBPCPT",135,0)
 .I $D(PXBPRV($P(REQE,"^",1))) D
"RTN","PXBPCPT",136,0)
 ..S CPTQUA=$P(PXBSAM($O(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1),$O(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1),0)),0))),"^",2)
"RTN","PXBPCPT",137,0)
 I $D(PXBKY(Y(0,0))),'$G(SELINE) D
"RTN","PXBPCPT",138,0)
 .;S $P(REQI,"^",8)=$O(PXBSKY($O(PXBKY(Y(0,0),0)),0))
"RTN","PXBPCPT",139,0)
 .S PREDOC=$P(PXBSAM($O(PXBKY(Y(0,0),0))),"^",3)
"RTN","PXBPCPT",140,0)
 .I $D(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1))) D
"RTN","PXBPCPT",141,0)
 ..S $P(REQI,"^",8)=$O(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1),0))
"RTN","PXBPCPT",142,0)
 .I $D(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1))) D
"RTN","PXBPCPT",143,0)
 ..S CPTQUA=$P(PXBSAM($O(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1),$O(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1),0)),0))),"^",2)
"RTN","PXBPCPT",144,0)
 S $P(REQI,"^",3)=+Y
"RTN","PXBPCPT",145,0)
 S $P(REQE,"^",3)=$P(CPT,"^",1)_"-- "_$P(CPT,"^",2)
"RTN","PXBPCPT",146,0)
 S PXBNCPT($P(CPT,"^",1))=$P(REQI,"^",8)
"RTN","PXBPCPT",147,0)
 S:$P(REQI,"^",8)]"" PXBNCPT($P(CPT,"^",1),$P(REQI,"^",8))=""
"RTN","PXBPCPT",148,0)
 ;
"RTN","PXBPCPT",149,0)
CPTX ;--CPT Exit and cleanup
"RTN","PXBPCPT",150,0)
 I $P(REQE,"^",1)="" S $P(REQE,"^",1)="...No Provider Selected..."
"RTN","PXBPCPT",151,0)
 I $G(WHAT)="INTV",DATA="^" S PXBEXIT="^^"
"RTN","PXBPCPT",152,0)
 I $D(PXBRRR) S DATA="^"
"RTN","PXBPCPT",153,0)
 I $D(PREDOC) D
"RTN","PXBPCPT",154,0)
 .I PREDOC]""&($P(REQE,"^",1)'[PREDOC) W !,IOINHI,"--WARNING!",IOINLOW," Currently stored Provider of service:-",IOINHI,PREDOC,IOINLOW D
"RTN","PXBPCPT",155,0)
 ..I '$D(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1))) S $P(REQI,"^",8)=""
"RTN","PXBPCPT",156,0)
 K PXBDPRV,PREDOC
"RTN","PXBPCPT",157,0)
 W IOEDEOP
"RTN","PXBPCPT",158,0)
 Q
"RTN","PXBPCPT",159,0)
MOD ;---Separate CPT modifiers from CPT codes in entry string, if entered
"RTN","PXBPCPT",160,0)
 I DATA?1.N1"-".NE D
"RTN","PXBPCPT",161,0)
 .S PXMODSTR=$P(DATA,"-",2)
"RTN","PXBPCPT",162,0)
 .S (DATA,EDATA)=$P(DATA,"-",1)
"RTN","PXBPCPT",163,0)
 Q
"RTN","PXBPCPT",164,0)
 ;
"RTN","PXBPCPT",165,0)
MULTI(CPTCD) ;--Prompt user to Edit existing CPT code or Add as new entry
"RTN","PXBPCPT",166,0)
 ;
"RTN","PXBPCPT",167,0)
 N DIR,DA,X,Y
"RTN","PXBPCPT",168,0)
 S DIR(0)="SB^E:EDIT;A:ADD"
"RTN","PXBPCPT",169,0)
 S DIR("A")="Do you wish to (E)dit or (A)dd"
"RTN","PXBPCPT",170,0)
 I $D(^IBE(357.69,+CPTCD)) S DIR(0)="SB^E:EDIT",DIR("A")="You may only (E)dit this code, no duplicate E&M allowed."
"RTN","PXBPCPT",171,0)
 S DIR("A",1)="CPT "_CPTCD_" already on file for this Encounter"
"RTN","PXBPCPT",172,0)
 D ^DIR
"RTN","PXBPCPT",173,0)
 I Y']""!(Y="^") Q -1
"RTN","PXBPCPT",174,0)
 Q Y
"RTN","PXBPCPT1")
0^12^B21660570
"RTN","PXBPCPT1",1,0)
PXBPCPT1 ;ISL/JVS,ESW - PROMPT CPT ; 8/25/03 2:22pm
"RTN","PXBPCPT1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**7,73,88,89,108,112,121**;Aug 12, 1996
"RTN","PXBPCPT1",3,0)
 ;
"RTN","PXBPCPT1",4,0)
 ;
"RTN","PXBPCPT1",5,0)
 ;
"RTN","PXBPCPT1",6,0)
 ;
"RTN","PXBPCPT1",7,0)
 ;
"RTN","PXBPCPT1",8,0)
ADDM ;--------If Multiple entries have been entered assume quantity 1
"RTN","PXBPCPT1",9,0)
 ;
"RTN","PXBPCPT1",10,0)
 ;
"RTN","PXBPCPT1",11,0)
 N OK,PXBLEN,BDATA,PXMDCNT
"RTN","PXBPCPT1",12,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBPCPT1",13,0)
 S NF=0,PXBLEN=0
"RTN","PXBPCPT1",14,0)
 D EDITMM
"RTN","PXBPCPT1",15,0)
 Q
"RTN","PXBPCPT1",16,0)
 I DATA[","&(DATA'["-")&($L($P(DATA,",",1))=5) S NF=1 D
"RTN","PXBPCPT1",17,0)
 .D HELP1^PXBUTL1("CPTMM"),HELP1^PXBUTL1("CON")
"RTN","PXBPCPT1",18,0)
 .R OK:DTIME
"RTN","PXBPCPT1",19,0)
 .S PXBLEN=$L(DATA,",") F PXI=1:1:PXBLEN S PXBPIECE=$P(DATA,",",PXI) D
"RTN","PXBPCPT1",20,0)
 ..I $L($G(PXBPIECE))'=5 S BAD($G(PXBPIECE))="" Q
"RTN","PXBPCPT1",21,0)
 ..I $L(PXBPIECE)=5 S X=PXBPIECE,DIC=81,DIC(0)="Z",DIC("S")="I $P($$CPT^ICPTCOD(Y,IDATE),U,7)" D ^DIC
"RTN","PXBPCPT1",22,0)
 ..I Y=-1 S BAD(+$G(PXBPIECE))="" Q
"RTN","PXBPCPT1",23,0)
 ..S $P(REQI,"^",3)=+Y,$P(REQI,"^",4)=1
"RTN","PXBPCPT1",24,0)
 ..S PXBNCPT(PXBPIECE)=""
"RTN","PXBPCPT1",25,0)
 ..D EN0^PXBSTOR(PXBVST,PATIENT,REQI)
"RTN","PXBPCPT1",26,0)
 ..D EN1^PXKMAIN
"RTN","PXBPCPT1",27,0)
 ..D RSET^PXBDREQ("CPT")
"RTN","PXBPCPT1",28,0)
BAD ;----BAD CPT CODES
"RTN","PXBPCPT1",29,0)
 N Y I $G(NF)&($D(BAD)) D  Q
"RTN","PXBPCPT1",30,0)
 .S (BDATA,EDATA)=""
"RTN","PXBPCPT1",31,0)
 .F  S BDATA=$O(BAD(BDATA)) Q:BDATA=""  S EDATA=EDATA_BDATA_"  "
"RTN","PXBPCPT1",32,0)
 .W ! D HELP^PXBUTL0("CPTM") W !
"RTN","PXBPCPT1",33,0)
 .S DIR(0)="E" D ^DIR K DIR,DIRUT
"RTN","PXBPCPT1",34,0)
 .S:Y=1 DATA="^C" S:Y=0!(Y="") DATA="^"
"RTN","PXBPCPT1",35,0)
 I $G(NF)&('$D(BAD)) S DATA="^C" Q
"RTN","PXBPCPT1",36,0)
 Q
"RTN","PXBPCPT1",37,0)
 ;
"RTN","PXBPCPT1",38,0)
BADD(PAR,EDATA) ;----BAD CPT CODES - DISPLAY
"RTN","PXBPCPT1",39,0)
 I $G(NF)&($D(BAD)) D  Q
"RTN","PXBPCPT1",40,0)
 .W !,*7 D HELP^PXBUTL0(PAR) W !
"RTN","PXBPCPT1",41,0)
 Q
"RTN","PXBPCPT1",42,0)
EDITMM ;--ADD MULTIPLE ENTRIES
"RTN","PXBPCPT1",43,0)
 ;
"RTN","PXBPCPT1",44,0)
 N STOP,BAD,GONE,PXBLEN,PXBPIECE,BDATA,PX,PXI,YY,BAD
"RTN","PXBPCPT1",45,0)
 S STOP=0
"RTN","PXBPCPT1",46,0)
 I DATA[",",DATA'["-" D
"RTN","PXBPCPT1",47,0)
 .S PXBLEN=$L(DATA,",")
"RTN","PXBPCPT1",48,0)
 .S NF=1
"RTN","PXBPCPT1",49,0)
 .F PXI=1:1:PXBLEN S PXBPIECE=$P(DATA,",",PXI) Q:STOP=1  D
"RTN","PXBPCPT1",50,0)
 ..;----ADDED
"RTN","PXBPCPT1",51,0)
 ..I PXBPIECE="" Q
"RTN","PXBPCPT1",52,0)
 ..I $D(PXBKY(PXBPIECE)) S BAD(PXBPIECE)="" S NF=1 D BADD("CPTMDP",PXBPIECE) H 2 Q
"RTN","PXBPCPT1",53,0)
 ..I PXI>1 I ","_$P(DATA,",",1,PXI-1)_","[(","_PXBPIECE_",") W !!,*7,"PROCEDURE "_PXBPIECE_" was already processed." H 1 Q
"RTN","PXBPCPT1",54,0)
 ..S X=PXBPIECE,DIC=81,DIC(0)="ZB",DIC("S")="I $P($$CPT^ICPTCOD(Y,IDATE),U,7)" D ^DIC
"RTN","PXBPCPT1",55,0)
 ..I Y<1 S BAD(PXBPIECE)="" S NF=1 D BADD("CPTM",PXBPIECE) Q
"RTN","PXBPCPT1",56,0)
 ..S $P(REQI,U,3)=+Y
"RTN","PXBPCPT1",57,0)
 ..S $P(REQI,U,8)=""
"RTN","PXBPCPT1",58,0)
 ..W !!,"For the PROCEDURE: "_X_"--"_$P(Y(0),U,2)
"RTN","PXBPCPT1",59,0)
 ..;--Prompt for CPT Modifiers
"RTN","PXBPCPT1",60,0)
 ..D FULL0^PXBCC
"RTN","PXBPCPT1",61,0)
 ..S PXMDCNT=$$CODM^ICPTCOD($P(REQI,"^",3),"^TMP(""PXMODARR"",$J",PXBSOURC,PXBVSTDT)
"RTN","PXBPCPT1",62,0)
 ..K ^TMP("PXMODARR",$J)
"RTN","PXBPCPT1",63,0)
 ..D MOD^PXBPMOD(PXBVST,PXBPAT,$P(REQI,"^",3),"",$P(REQI,"^",8),IDATE,PXMDCNT,.PXMREQ)
"RTN","PXBPCPT1",64,0)
 ..S:EDATA["^C" STOP=1
"RTN","PXBPCPT1",65,0)
 ..Q:STOP
"RTN","PXBPCPT1",66,0)
 ..S CPTQUA=1
"RTN","PXBPCPT1",67,0)
 ..D QUA^PXBPQUA
"RTN","PXBPCPT1",68,0)
 ..S:EDATA["^C" STOP=1 S:EDATA["^P" STOP=1 Q:STOP=1
"RTN","PXBPCPT1",69,0)
 ..;--Get Provider for CPT
"RTN","PXBPCPT1",70,0)
 ..N PXBSKY,PXBKY,PXBSAM,PXBCNT,PRVDR,FPRI
"RTN","PXBPCPT1",71,0)
 ..D PRV^PXBGPRV(PXBVST,.PXBSKY,.PXBKY,.PXBSAM,.PXBCNT,.PRVDR,.FPRI) W IOSC
"RTN","PXBPCPT1",72,0)
 ..S FROM="CPT" D  Q:STOP
"RTN","PXBPCPT1",73,0)
 ...N DATA D PRV^PXBPPRV I DATA["^P" D  W IOCUU S STOP=1 Q
"RTN","PXBPCPT1",74,0)
 ....S $P(REQI,"^",1)="",$P(REQI,"^",2)="",$P(REQI,"^",7)=""
"RTN","PXBPCPT1",75,0)
 ....K PXBDPRV
"RTN","PXBPCPT1",76,0)
 ..S PXBNCPT(PXBPIECE)=""
"RTN","PXBPCPT1",77,0)
 ..D EN0^PXBSTOR(PXBVST,PATIENT,REQI,.PXMREQ)
"RTN","PXBPCPT1",78,0)
 ..D EN1^PXKMAIN
"RTN","PXBPCPT1",79,0)
 ..D RSET^PXBDREQ("CPT")
"RTN","PXBPCPT1",80,0)
 ..D RSET^PXBDREQ("PRV")
"RTN","PXBPCPT1",81,0)
 ..K PXMREQ
"RTN","PXBPCPT1",82,0)
 ..S $P(REQI,"^",7)=""
"RTN","PXBPCPT1",83,0)
 .S DATA="^C"
"RTN","PXBPCPT1",84,0)
 Q
"RTN","PXBPCPT1",85,0)
 ;
"RTN","PXBPCPT1",86,0)
DELM ;--------If Multiple deleting
"RTN","PXBPCPT1",87,0)
 N DELM,PXBJ,BAD,PXBPIECE,PXBLEN
"RTN","PXBPCPT1",88,0)
 S NF=0,PXBLEN=0 S $P(DELM,"^",2)=1
"RTN","PXBPCPT1",89,0)
 I $E(DATA,1)="@" D
"RTN","PXBPCPT1",90,0)
 .I '$$SURE^PXCEAE2 S DATA="^C" Q
"RTN","PXBPCPT1",91,0)
 .S DATA=$P(DATA,"@",2),NF=1
"RTN","PXBPCPT1",92,0)
 .S PXBLEN=$L(DATA,",")
"RTN","PXBPCPT1",93,0)
 .F PXI=1:1:PXBLEN S PXBPIECE=$P(DATA,",",PXI) D
"RTN","PXBPCPT1",94,0)
 ..I PXBPIECE'["-"&(PXBPIECE'>0!(PXBPIECE'<(PXBCNT+1))) S BAD(+$G(PXBPIECE))="" Q
"RTN","PXBPCPT1",95,0)
 ..I PXBPIECE'["-" D
"RTN","PXBPCPT1",96,0)
 ...I $D(GONE(PXBPIECE)) Q
"RTN","PXBPCPT1",97,0)
 ...Q:PXBPIECE'?.N
"RTN","PXBPCPT1",98,0)
 ...S $P(REQI,"^",8)=$O(PXBSKY(PXBPIECE,0)) ;-IEN
"RTN","PXBPCPT1",99,0)
 ...S X=$P(PXBSAM(PXBPIECE),"^",1),DIC=81,DIC(0)="ZM",DIC("S")="I $P($$CPT^ICPTCOD(Y,IDATE),U,7)" D ^DIC
"RTN","PXBPCPT1",100,0)
 ...S $P(REQI,"^",3)=+Y K Y
"RTN","PXBPCPT1",101,0)
 ...S $P(REQI,"^",4)=0 ;-QUANTITY
"RTN","PXBPCPT1",102,0)
 ...S GONE(PXBPIECE)=""
"RTN","PXBPCPT1",103,0)
 ...D EN0^PXBSTOR(PXBVST,PATIENT,REQI)
"RTN","PXBPCPT1",104,0)
 ...D EN1^PXKMAIN
"RTN","PXBPCPT1",105,0)
 ..I PXBPIECE["-" D
"RTN","PXBPCPT1",106,0)
 ...F PXBJ=$P(PXBPIECE,"-",1):1:$P(PXBPIECE,"-",2) D
"RTN","PXBPCPT1",107,0)
 ....I $D(GONE(PXBJ)) Q
"RTN","PXBPCPT1",108,0)
 ....I PXBJ'>0!(PXBJ'<(PXBCNT+1)) S BAD(PXBJ)="" Q
"RTN","PXBPCPT1",109,0)
 ....S $P(REQI,"^",8)=$O(PXBSKY(PXBJ,0)) ;-IEN
"RTN","PXBPCPT1",110,0)
 ....S X=$P(PXBSAM(PXBJ),"^",1),DIC=81,DIC(0)="ZM",DIC("S")="I $P($$CPT^ICPTCOD(Y,IDATE),U,7)" D ^DIC
"RTN","PXBPCPT1",111,0)
 ....S $P(REQI,"^",3)=+Y K Y
"RTN","PXBPCPT1",112,0)
 ....S $P(REQI,"^",4)=0 ;-QUANTITY
"RTN","PXBPCPT1",113,0)
 ....S GONE(PXBJ)=""
"RTN","PXBPCPT1",114,0)
 ....D EN0^PXBSTOR(PXBVST,PATIENT,REQI)
"RTN","PXBPCPT1",115,0)
 ....D EN1^PXKMAIN
"RTN","PXBPCPT1",116,0)
 K GONE
"RTN","PXBPCPT1",117,0)
 I $G(NF)&($D(BAD)) D  Q
"RTN","PXBPCPT1",118,0)
 .S (BDATA,EDATA)=""
"RTN","PXBPCPT1",119,0)
 .F  S BDATA=$O(BAD(BDATA)) Q:BDATA=""  S EDATA=EDATA_BDATA_"  "
"RTN","PXBPCPT1",120,0)
 .W ! D HELP^PXBUTL0("CPTMD") W !
"RTN","PXBPCPT1",121,0)
 .S DIR(0)="E" D ^DIR K DIR
"RTN","PXBPCPT1",122,0)
 .S:Y=1 DATA="^C" S:Y=0!(Y="") DATA="^" K Y
"RTN","PXBPCPT1",123,0)
 I $G(NF)&('$D(BAD)) S DATA="^C" Q
"RTN","PXBPCPT1",124,0)
 Q
"RTN","PXBPMOD")
0^13^B5762397
"RTN","PXBPMOD",1,0)
PXBPMOD ;ISA/EW,ESW - PROMPT MOD ; 10/31/02 12:12pm
"RTN","PXBPMOD",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**73,88,89,108,121**Aug 12, 1996
"RTN","PXBPMOD",3,0)
 ;
"RTN","PXBPMOD",4,0)
 ;
"RTN","PXBPMOD",5,0)
 ;
"RTN","PXBPMOD",6,0)
 Q
"RTN","PXBPMOD",7,0)
 ;
"RTN","PXBPMOD",8,0)
MOD(PXVST,PXPAT,PXCPT,PXMODSTR,PXCPTIEN,PXVSTDAT,PXCNT,PXARR) ;
"RTN","PXBPMOD",9,0)
 ;CPT Modifier prompt
"RTN","PXBPMOD",10,0)
 ; Input:
"RTN","PXBPMOD",11,0)
 ;   PXVST    - Visit IEN.
"RTN","PXBPMOD",12,0)
 ;   PXPAT    - Patient IEN
"RTN","PXBPMOD",13,0)
 ;   PXCPT    - CPT code or IEN of its entry in CPT file (#81)
"RTN","PXBPMOD",14,0)
 ;   PXMODSTR - User entered string of modifier codes in external
"RTN","PXBPMOD",15,0)
 ;              format
"RTN","PXBPMOD",16,0)
 ;   PXCPTIEN - IEN of CPT code entry in V CPT file (#9000010.18)
"RTN","PXBPMOD",17,0)
 ;   PXVSTDAT - Visit date
"RTN","PXBPMOD",18,0)
 ;   PXCNT    - Number of active modifiers defined for CPT code
"RTN","PXBPMOD",19,0)
 ; Output:
"RTN","PXBPMOD",20,0)
 ;   PXARR    - Array containing modifiers.
"RTN","PXBPMOD",21,0)
 ;
"RTN","PXBPMOD",22,0)
 ;
"RTN","PXBPMOD",23,0)
 N DTOUT,DUOUT,DIROUT,DA,DIC,DR,PXGLB,Y
"RTN","PXBPMOD",24,0)
 S PXGLB="^AUPNVCPT"
"RTN","PXBPMOD",25,0)
 I $$VALCPT(PXCPT)<1 Q
"RTN","PXBPMOD",26,0)
 I +$$CPTOK^PXBUTL(PXCPT,PXVSTDAT)=0 Q
"RTN","PXBPMOD",27,0)
 I $G(PXCPTIEN)]"" S DA=PXCPTIEN
"RTN","PXBPMOD",28,0)
 I $G(PXCPTIEN)']"" D
"RTN","PXBPMOD",29,0)
 .D FILECPT
"RTN","PXBPMOD",30,0)
 .S (PXARR,PXNEWIEN)=DA
"RTN","PXBPMOD",31,0)
 ;Only prompt if there are active modifiers for the CPT code
"RTN","PXBPMOD",32,0)
 D:PXCNT>0 CPTMOD
"RTN","PXBPMOD",33,0)
 I $D(DTOUT)!$D(Y) D  Q
"RTN","PXBPMOD",34,0)
 .S (EDATA,DATA)="^C"
"RTN","PXBPMOD",35,0)
 .;Remove incomplete V CPT entry
"RTN","PXBPMOD",36,0)
 .I $G(PXNEWIEN)]"" D REMOVE^PXCEVFIL(PXNEWIEN)
"RTN","PXBPMOD",37,0)
 D BLDARRY
"RTN","PXBPMOD",38,0)
 Q
"RTN","PXBPMOD",39,0)
 ;
"RTN","PXBPMOD",40,0)
FILECPT ;Create a new entry in V CPT file and get IEN
"RTN","PXBPMOD",41,0)
 N X,Y,DD,DO,DR
"RTN","PXBPMOD",42,0)
 S DIC=PXGLB_"("
"RTN","PXBPMOD",43,0)
 S DIC(0)=""
"RTN","PXBPMOD",44,0)
 S X=PXCPT
"RTN","PXBPMOD",45,0)
 D FILE^DICN
"RTN","PXBPMOD",46,0)
 ;
"RTN","PXBPMOD",47,0)
 S DA=+Y
"RTN","PXBPMOD",48,0)
 S DIE=PXGLB_"("
"RTN","PXBPMOD",49,0)
 S DR=".02////^S X=PXPAT;.03////^S X=PXVST;"
"RTN","PXBPMOD",50,0)
 L +@(PXGLB_"(DA)"):10
"RTN","PXBPMOD",51,0)
 D ^DIE
"RTN","PXBPMOD",52,0)
 L -@(PXGLB_"(DA)")
"RTN","PXBPMOD",53,0)
 Q
"RTN","PXBPMOD",54,0)
 ;
"RTN","PXBPMOD",55,0)
CPTMOD ;Prompt for CPT Modifiers
"RTN","PXBPMOD",56,0)
 N PXMOD,PXERR,PXI
"RTN","PXBPMOD",57,0)
 S DR=1
"RTN","PXBPMOD",58,0)
 S DIE=PXGLB_"("
"RTN","PXBPMOD",59,0)
 S DIC(0)="AELMQ"
"RTN","PXBPMOD",60,0)
 L +@(PXGLB_"(DA)")
"RTN","PXBPMOD",61,0)
 ;--File modifiers entered before prompting user
"RTN","PXBPMOD",62,0)
 I $G(PXMODSTR)]"" D
"RTN","PXBPMOD",63,0)
 .I $L(PXMODSTR,",")=1 S DR="1//"_PXMODSTR Q
"RTN","PXBPMOD",64,0)
 .S PXMOD=""
"RTN","PXBPMOD",65,0)
 .F PXI=1:1 S PXMOD=$P(PXMODSTR,",",PXI) Q:PXMOD=""  D
"RTN","PXBPMOD",66,0)
 ..S PXERR=""
"RTN","PXBPMOD",67,0)
 ..D VAL^DIE(9000010.181,DA,.01,"",PXMOD,.PXERR)
"RTN","PXBPMOD",68,0)
 ..Q:PXERR="^"
"RTN","PXBPMOD",69,0)
 ..S DR="1///^S X=PXMOD"
"RTN","PXBPMOD",70,0)
 ..D ^DIE
"RTN","PXBPMOD",71,0)
 .S DR=1
"RTN","PXBPMOD",72,0)
 D ^DIE
"RTN","PXBPMOD",73,0)
 L -@(PXGLB_"(DA)")
"RTN","PXBPMOD",74,0)
 Q
"RTN","PXBPMOD",75,0)
 ;
"RTN","PXBPMOD",76,0)
BLDARRY ;Copy new modifiers into local array
"RTN","PXBPMOD",77,0)
 N PXFIL,PXSUBFIL,PXSUB,PXARR2
"RTN","PXBPMOD",78,0)
 S PXFIL=9000010.18,PXSUBFIL=9000010.181
"RTN","PXBPMOD",79,0)
 D GETS^DIQ(PXFIL,DA,"1*","I","PXARR2")
"RTN","PXBPMOD",80,0)
 S PXSUB=""
"RTN","PXBPMOD",81,0)
 F  S PXSUB=$O(PXARR2(PXSUBFIL,PXSUB)) Q:PXSUB=""  D
"RTN","PXBPMOD",82,0)
 .S PXARR(1,+PXSUB)=PXARR2(PXSUBFIL,PXSUB,.01,"I")
"RTN","PXBPMOD",83,0)
 Q
"RTN","PXBPMOD",84,0)
 ;
"RTN","PXBPMOD",85,0)
VALCPT(X) ;Determine if CPT code is valid
"RTN","PXBPMOD",86,0)
 ;internal or external value of CPT is evaluated
"RTN","PXBPMOD",87,0)
 N DIC,Y
"RTN","PXBPMOD",88,0)
 S DIC=81
"RTN","PXBPMOD",89,0)
 S DIC(0)="BN"
"RTN","PXBPMOD",90,0)
 S DIC("S")="I $P($$CPT^ICPTCOD(Y,IDATE),U,7)"
"RTN","PXBPMOD",91,0)
 D ^DIC
"RTN","PXBPMOD",92,0)
 Q Y
"RTN","PXBPPOV")
0^16^B21829306
"RTN","PXBPPOV",1,0)
PXBPPOV ;ISL/JVS - PROMPT POV ; 5/1/01 2:58pm
"RTN","PXBPPOV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**11,28,92,121**;Aug 12, 1996
"RTN","PXBPPOV",3,0)
 ;
"RTN","PXBPPOV",4,0)
 ; VARIABLE LIST
"RTN","PXBPPOV",5,0)
 ; SELINE= Line number of selected item
"RTN","PXBPPOV",6,0)
 ;
"RTN","PXBPPOV",7,0)
POV ;--DIAGNOSIS
"RTN","PXBPPOV",8,0)
 I $D(PXBNPOVL) D LOC^PXBCC(2,0) W IOUON,"Previous Entry:   ",$G(PXBNPOVL(1)) F I=1:1:10 W " "
"RTN","PXBPPOV",9,0)
 W IOUOFF
"RTN","PXBPPOV",10,0)
 N TIMED,EDATA,DIC,LINE,XFLAG,SELINE,PXBEDIS,FPL
"RTN","PXBPPOV",11,0)
 I '$D(^DISV(DUZ,"PXBPOV-3")) S ^DISV(DUZ,"PXBPOV-3")="   "
"RTN","PXBPPOV",12,0)
 I '$D(IOSC) D TERM^PXBCC
"RTN","PXBPPOV",13,0)
 S DOUBLEQQ=0
"RTN","PXBPPOV",14,0)
 S TIMED="I '$T!(DATA=""^"")"
"RTN","PXBPPOV",15,0)
 ; S DIC("S")="I $P($G(^ICD9(Y,0)),""^"",9)'=1!($P(^(0),""^"",11)'=""""&(IDATE<($P(^(0),""^"",11))))"
"RTN","PXBPPOV",16,0)
 S DIC("S")="I $P($$ICDDX^ICDCODE(Y,IDATE),U,10)"
"RTN","PXBPPOV",17,0)
P ;--Second Entry point
"RTN","PXBPPOV",18,0)
 W IOSC K FPL
"RTN","PXBPPOV",19,0)
 ;---DYNAMIC HEADER---
"RTN","PXBPPOV",20,0)
 I '$D(CYCL) D
"RTN","PXBPPOV",21,0)
 .I PXBCNT=0,DOUBLEQQ=0 D LOC^PXBCC(1,10) W "...There are "_$G(PXBCNT)_" ICD CODES associated with this encounter."
"RTN","PXBPPOV",22,0)
 .I PXBCNT=1,DOUBLEQQ=0 D LOC^PXBCC(1,10) W "...There is "_$G(PXBCNT)_" ICD CODE associated with this encounter."
"RTN","PXBPPOV",23,0)
 .I PXBCNT>1,DOUBLEQQ=0 D LOC^PXBCC(1,10) W "...There are "_$G(PXBCNT)_" ICD CODES associated with this encounter."
"RTN","PXBPPOV",24,0)
 ;
"RTN","PXBPPOV",25,0)
 D LOC^PXBCC(15,0)
"RTN","PXBPPOV",26,0)
 I PXBCNT>10&('$G(DOUBLEQQ)) W !,"Enter '+' for next page, '-' for previous page."
"RTN","PXBPPOV",27,0)
 I '$D(^TMP("PXK",$J,"POV")) W !,"Enter Diagnosis : "_$G(PXBDPOV) W:$D(PXBDPOV) " //" W IOELEOL
"RTN","PXBPPOV",28,0)
 I $D(^TMP("PXK",$J,"POV")) W !,"Enter ",IOINHI,"NEXT",IOINLOW," Diagnosis : "_$G(PXBDPOV) W:$D(PXBDPOV) " //" W IOELEOL
"RTN","PXBPPOV",29,0)
 R DATA:DTIME S EDATA=DATA
"RTN","PXBPPOV",30,0)
P1 ;--Third entry point
"RTN","PXBPPOV",31,0)
 X TIMED I  S PXBUT=1,LEAVE=1,DATA="^" G POVX
"RTN","PXBPPOV",32,0)
 I DATA?1.N1"E".NAP S DATA=" "_DATA
"RTN","PXBPPOV",33,0)
 I DATA?24.N S (DATA,EDATA)=$E(DATA,1,24)
"RTN","PXBPPOV",34,0)
 I $L(DATA)>200 S (DATA,EDATA)=$E(DATA,1,199)
"RTN","PXBPPOV",35,0)
 D CASE^PXBUTL
"RTN","PXBPPOV",36,0)
 ;----SPACE BAR---
"RTN","PXBPPOV",37,0)
 I DATA=" ",$D(^DISV(DUZ,"PXBPOV-3")) S DATA=^DISV(DUZ,"PXBPOV-3") W DATA
"RTN","PXBPPOV",38,0)
 ;-----------------
"RTN","PXBPPOV",39,0)
 I DATA="^^" S PXBEXIT=0 G POVX
"RTN","PXBPPOV",40,0)
 ;---I Prompt can jump to others put symbols in here
"RTN","PXBPPOV",41,0)
 I DATA["^P" G POVX
"RTN","PXBPPOV",42,0)
 ;------PXBDPOV=DEFAULT POV---
"RTN","PXBPPOV",43,0)
 I DATA="",$D(PXBDPOV) S DATA=$P($G(PXBDPOV),"--",1)
"RTN","PXBPPOV",44,0)
 I DATA="",'$D(PXBDPOV) S PXBUT=1,PXBSPL="",LEAVE=1 G POVX
"RTN","PXBPPOV",45,0)
 ;
"RTN","PXBPPOV",46,0)
 I PXBCNT>10&((DATA="+")!(DATA="-")) D DPOV4^PXBDPOV(DATA) G P
"RTN","PXBPPOV",47,0)
 ;
"RTN","PXBPPOV",48,0)
M ;--------IF Multiple entries have been entered
"RTN","PXBPPOV",49,0)
 D ADDM^PXBPPOV1
"RTN","PXBPPOV",50,0)
 I $G(NF) G P1
"RTN","PXBPPOV",51,0)
 ;
"RTN","PXBPPOV",52,0)
 ;--------IF Multiple deleting of entries
"RTN","PXBPPOV",53,0)
 D DELM^PXBPPOV1
"RTN","PXBPPOV",54,0)
 I $G(NF) G P1
"RTN","PXBPPOV",55,0)
 ;
"RTN","PXBPPOV",56,0)
LI ;--------If picked a line number
"RTN","PXBPPOV",57,0)
 I (DATA>0)&(DATA<(PXBCNT+1))&($L(DATA)'>$L(PXBCNT)) S XFLAG=1 D REVPOV^PXBCC(DATA) S SELINE=DATA D
"RTN","PXBPPOV",58,0)
 .F I=1:1:$L(DATA) W IOCUB,IOECH
"RTN","PXBPPOV",59,0)
 .S PRISEC=$P($G(PXBSAM(DATA)),"^",4) S:PRISEC["PRI" FPRI=0
"RTN","PXBPPOV",60,0)
 .S DATA=$P($G(PXBSAM(DATA)),"^",1)
"RTN","PXBPPOV",61,0)
 I $D(XFLAG),XFLAG=1 S (Y,EDATA)=DATA G PFIN
"RTN","PXBPPOV",62,0)
LI1 ;
"RTN","PXBPPOV",63,0)
 ;--------If POV is already in the file
"RTN","PXBPPOV",64,0)
 I '$G(DOUBLEQQ),$D(PXBKY(DATA)) D
"RTN","PXBPPOV",65,0)
 .I PXBCNT>10 D DPOV4^PXBDPOV($O(PXBKY(DATA,0)))
"RTN","PXBPPOV",66,0)
 .K Q D TIMES^PXBUTL(DATA)
"RTN","PXBPPOV",67,0)
 .I Q=1 S LINE=$O(PXBKY(DATA,0)) S XFLAG=1 D REVPOV^PXBCC(LINE) S PRISEC=$P($G(PXBSAM(LINE)),"^",2) S:PRISEC["PRI" FPRI=0
"RTN","PXBPPOV",68,0)
 .I Q>1 S NLINE=0 F  S NLINE=$O(Q(NLINE)) Q:NLINE=""  D REVPOV^PXBCC(NLINE)
"RTN","PXBPPOV",69,0)
 I $D(Q),Q>1 D WHICH^PXBPWCH G LI
"RTN","PXBPPOV",70,0)
 I $D(XFLAG),XFLAG=1 S Y=DATA G PFIN
"RTN","PXBPPOV",71,0)
 ;
"RTN","PXBPPOV",72,0)
 ;--------Need to do a DIC lookup on data
"RTN","PXBPPOV",73,0)
 I DATA'="??" D:DATA="?" EN1^PXBHLP0("PXB","POV",1,"",1) G:DATA="^P" P1 I DATA="?" G P
"RTN","PXBPPOV",74,0)
 I DATA="??" S DOUBLEQQ=1 D EN1^PXBHLP0("PXB","POV","",1,2) S:$L(DATA,"^")>1 (Y,DATA,EDATA)=$P($P(DATA,"^",2),"--",1) G:Y>1 PFIN G:Y?1A1.NP PFIN I DATA<1 S DATA="^P" G P1
"RTN","PXBPPOV",75,0)
 ;
"RTN","PXBPPOV",76,0)
 ;--If a "?" is NOT entered during lookup
"RTN","PXBPPOV",77,0)
 S (VAL,Y)=$$DOUBLE1^PXBGPOV2(WHAT) I Y<1 S DATA="^P" G P1
"RTN","PXBPPOV",78,0)
 ;<-*92*-<  S (X,DATA,EDATA)=$P(VAL,"^",2),DIC=80,DIC(0)="MZ" D ^DIC
"RTN","PXBPPOV",79,0)
 S (DATA,EDATA)=$P(VAL,"^",2),X="`"_+$P(Y,"^",1) K Y S DIC=80,DIC(0)="MZ",DIC("S")="I $P($$ICDDX^ICDCODE(Y,IDATE),U,10)" D ^DIC  ;** PX*1.0*92    05/01/2001  make ^DIC selection "exact."
"RTN","PXBPPOV",80,0)
 ;
"RTN","PXBPPOV",81,0)
 ;--If Y is good and already in file...
"RTN","PXBPPOV",82,0)
 I '$G(DOUBLEQQ),$D(Y),$D(PXBKY($P(Y,"^",2))) D
"RTN","PXBPPOV",83,0)
 .S LINE=$O(PXBKY($P(Y,"^",2),0)) ;---D REVPOV^PXBCC(LINE)
"RTN","PXBPPOV",84,0)
 .S PRISEC=$P($G(PXBSAM(LINE)),"^",4) S:PRISEC["PRI" FPRI=0
"RTN","PXBPPOV",85,0)
 S POV=Y(0)
"RTN","PXBPPOV",86,0)
 ;
"RTN","PXBPPOV",87,0)
PFIN ;--Finish the DIAGNOSIS
"RTN","PXBPPOV",88,0)
 I $L(Y,"^")'>1 S X=Y,DIC=80,DIC(0)="IZM",DIC("S")="I $P($$ICDDX^ICDCODE(Y,IDATE),U,10)" D ^DIC
"RTN","PXBPPOV",89,0)
 I +Y<0 D HELP1^PXBUTL1("POV") G P
"RTN","PXBPPOV",90,0)
 S POV=Y(0)
"RTN","PXBPPOV",91,0)
 S PXBNPOV($P(POV,"^",1))=""
"RTN","PXBPPOV",92,0)
 S PXBNPOVL(1)=$P(POV,"^",1) S ^DISV(DUZ,"PXBPOV-3")=DATA
"RTN","PXBPPOV",93,0)
 I $D(PXBKY($P(Y(0),"^"))),$G(SELINE) S $P(REQI,"^",9)=$O(PXBSKY(SELINE,0))
"RTN","PXBPPOV",94,0)
 I $D(PXBKY($P(Y(0),"^"))),'$G(SELINE) S $P(REQI,"^",9)=$O(PXBSKY($O(PXBKY($P(Y(0),"^"),0)),0))
"RTN","PXBPPOV",95,0)
 I +Y>0 S PXBEDIS=$$EXTTEXT^PXUTL1(+Y,1,80,3)
"RTN","PXBPPOV",96,0)
 S $P(REQI,"^",5)=+Y,$P(REQI,"^",6)="S"
"RTN","PXBPPOV",97,0)
 S $P(REQE,"^",5)=$P(POV,"^",1)_" --"_$G(PXBEDIS),$P(REQE,"^",6)="SECONDARY"
"RTN","PXBPPOV",98,0)
POVX ;--EXIT AND CLEAN UP
"RTN","PXBPPOV",99,0)
 I $G(WHAT)="INTV",DATA="^" S PXBEXIT="^^"
"RTN","PXBPPOV",100,0)
 I '$D(REQE) S REQE=""
"RTN","PXBPPOV",101,0)
 I $P(REQE,"^",5)="" S $P(REQE,"^",5)="...No Diagnosis Selected..."
"RTN","PXBPPOV",102,0)
 Q
"RTN","PXBPPOV1")
0^17^B15203050
"RTN","PXBPPOV1",1,0)
PXBPPOV1 ;ISL/JVS,ESW - PROMPT POV ; 8/25/03 2:32pm
"RTN","PXBPPOV1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**11,112,121**;Aug 12, 1996
"RTN","PXBPPOV1",3,0)
 ;
"RTN","PXBPPOV1",4,0)
 ;
"RTN","PXBPPOV1",5,0)
 ;
"RTN","PXBPPOV1",6,0)
 ;
"RTN","PXBPPOV1",7,0)
 ;
"RTN","PXBPPOV1",8,0)
ADDM ;--------If Multiple POV entries have been entered.
"RTN","PXBPPOV1",9,0)
 ;
"RTN","PXBPPOV1",10,0)
 ;
"RTN","PXBPPOV1",11,0)
 ;
"RTN","PXBPPOV1",12,0)
 N OK,PXBLEN,BDATA
"RTN","PXBPPOV1",13,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBPPOV1",14,0)
 S NF=0,PXBLEN=0
"RTN","PXBPPOV1",15,0)
 I DATA[",",$E(DATA,1)'["@" S NF=1 D
"RTN","PXBPPOV1",16,0)
 .S PXBLEN=$L(DATA,",") F PXI=1:1:PXBLEN S PXBPIECE=$P(DATA,",",PXI) D
"RTN","PXBPPOV1",17,0)
 ..S X=PXBPIECE,DIC=80,DIC(0)="IMZ",DIC("S")="I $P($$ICDDX^ICDCODE(Y,IDATE),U,10)" D ^DIC
"RTN","PXBPPOV1",18,0)
 ..I Y=-1 S BAD(+$G(PXBPIECE))="" Q
"RTN","PXBPPOV1",19,0)
 ..S $P(REQI,"^",5)=+Y
"RTN","PXBPPOV1",20,0)
 ..S PXBNPOV(PXBPIECE)=""
"RTN","PXBPPOV1",21,0)
 ..D EN0^PXBSTOR(PXBVST,PATIENT,REQI)
"RTN","PXBPPOV1",22,0)
 ..D EN1^PXKMAIN
"RTN","PXBPPOV1",23,0)
 ..D RSET^PXBDREQ("POV")
"RTN","PXBPPOV1",24,0)
 I $G(NF)&($D(BAD)) D  Q
"RTN","PXBPPOV1",25,0)
 .S (BDATA,EDATA)="" F  S BDATA=$O(BAD(BDATA)) Q:BDATA=""  S EDATA=EDATA_BDATA_"  "
"RTN","PXBPPOV1",26,0)
 .W ! D HELP^PXBUTL0("CPTM") W !
"RTN","PXBPPOV1",27,0)
 .S DIR(0)="E" D ^DIR K DIR,DIRUT
"RTN","PXBPPOV1",28,0)
 .S:Y=1 DATA="^P" S:Y=0!(Y="") DATA="^" K Y
"RTN","PXBPPOV1",29,0)
 I $G(NF)&('$D(BAD)) S DATA="^P" Q
"RTN","PXBPPOV1",30,0)
 ;
"RTN","PXBPPOV1",31,0)
 Q
"RTN","PXBPPOV1",32,0)
 ;
"RTN","PXBPPOV1",33,0)
DELM ;--------If Multiple deleting
"RTN","PXBPPOV1",34,0)
 N DELM,PXBJ,BAD,PXBLEN,BDATA
"RTN","PXBPPOV1",35,0)
 S NF=0,PXBLEN=0 S $P(DELM,"^",3)=1
"RTN","PXBPPOV1",36,0)
 I $E(DATA,1)="@" S DATA=$P(DATA,"@",2),NF=1 D
"RTN","PXBPPOV1",37,0)
 .S PXBLEN=$L(DATA,",") F PXI=1:1:PXBLEN S PXBPIECE=$P(DATA,",",PXI) D
"RTN","PXBPPOV1",38,0)
 ..I PXBPIECE'["-"&(PXBPIECE'>0!(PXBPIECE'<(PXBCNT+1))) S BAD(+$G(PXBPIECE))="" Q
"RTN","PXBPPOV1",39,0)
 ..I PXBPIECE'["-" D
"RTN","PXBPPOV1",40,0)
 ...I $D(GONE(PXBPIECE)) Q
"RTN","PXBPPOV1",41,0)
 ...Q:PXBPIECE'?.N
"RTN","PXBPPOV1",42,0)
 ...S $P(REQI,"^",9)=$O(PXBSKY(PXBPIECE,0)) ;-IEN
"RTN","PXBPPOV1",43,0)
 ...S X=$P(PXBSAM(PXBPIECE),"^",1),DIC=80,DIC(0)="IZM",DIC("S")="I $P($$ICDDX^ICDCODE(Y,IDATE),U,10)" D ^DIC
"RTN","PXBPPOV1",44,0)
 ...S $P(REQI,"^",5)=+Y K Y
"RTN","PXBPPOV1",45,0)
 ...S GONE(PXBPIECE)=""
"RTN","PXBPPOV1",46,0)
 ...D EN0^PXBSTOR(PXBVST,PATIENT,REQI)
"RTN","PXBPPOV1",47,0)
 ...D EN1^PXKMAIN
"RTN","PXBPPOV1",48,0)
 ..I PXBPIECE["-" D
"RTN","PXBPPOV1",49,0)
 ...F PXBJ=$P(PXBPIECE,"-",1):1:$P(PXBPIECE,"-",2) D
"RTN","PXBPPOV1",50,0)
 ....I $D(GONE(PXBJ)) Q
"RTN","PXBPPOV1",51,0)
 ....I PXBJ'>0!(PXBJ'<(PXBCNT+1)) S BAD(PXBJ)="" Q
"RTN","PXBPPOV1",52,0)
 ....S $P(REQI,"^",9)=$O(PXBSKY(PXBJ,0)) ;-IEN
"RTN","PXBPPOV1",53,0)
 ....S X=$P(PXBSAM(PXBJ),"^",1),DIC=80,DIC(0)="IZM",DIC("S")="I $P($$ICDDX^ICDCODE(Y,IDATE),U,10)" D ^DIC
"RTN","PXBPPOV1",54,0)
 ....S $P(REQI,"^",5)=+Y K Y
"RTN","PXBPPOV1",55,0)
 ....S GONE(PXBJ)=""
"RTN","PXBPPOV1",56,0)
 ....D EN0^PXBSTOR(PXBVST,PATIENT,REQI)
"RTN","PXBPPOV1",57,0)
 ....D EN1^PXKMAIN
"RTN","PXBPPOV1",58,0)
 K GONE
"RTN","PXBPPOV1",59,0)
 I $G(NF)&($D(BAD)) D  Q
"RTN","PXBPPOV1",60,0)
 .S (BDATA,EDATA)="" F  S BDATA=$O(BAD(BDATA)) Q:BDATA=""  S EDATA=EDATA_BDATA_"  "
"RTN","PXBPPOV1",61,0)
 .W ! D HELP^PXBUTL0("CPTMD") W !
"RTN","PXBPPOV1",62,0)
 .S DIR(0)="E" D ^DIR K DIR
"RTN","PXBPPOV1",63,0)
 .S:Y=1 DATA="^P" S:Y=0!(Y="") DATA="^" K Y
"RTN","PXBPPOV1",64,0)
 I $G(NF)&('$D(BAD)) S DATA="^P" Q
"RTN","PXBPPOV1",65,0)
 Q
"RTN","PXBPPOV1",66,0)
PRI ;--Prompt for primary secondary DIAGNOSIS
"RTN","PXBPPOV1",67,0)
 N DIR,Y,X,SEQ
"RTN","PXBPPOV1",68,0)
 S SEQ=0 I $D(PXBKY(DATA)) S SEQ=+$O(PXBKY(DATA,"")) ;PX112
"RTN","PXBPPOV1",69,0)
 I $G(FPRI),$P($G(PXBKY(DATA,SEQ)),U,4)'="PRIMARY" Q  ;PX112
"RTN","PXBPPOV1",70,0)
 W IOCUD,IOELALL,IOCUU
"RTN","PXBPPOV1",71,0)
 S DIR("A",1)="ONE primary diagnosis must be established for each encounter!"
"RTN","PXBPPOV1",72,0)
 S DIR("A")="Is this the PRIMARY DIAGNOSIS for this ENCOUNTER? "
"RTN","PXBPPOV1",73,0)
 S DIR("B")="YES"
"RTN","PXBPPOV1",74,0)
 S DIR("?")="One PRIMARY DIAGNOSIS must be established for each patient encounter. 'Yes' will mean PRIMARY and 'No' will mean SECONDARY."
"RTN","PXBPPOV1",75,0)
 S DIR(0)="Y,A,O"
"RTN","PXBPPOV1",76,0)
 D ^DIR I $G(DIRUT) G PPXIT
"RTN","PXBPPOV1",77,0)
PPFIN ;--Finish off variables
"RTN","PXBPPOV1",78,0)
 I Y=1 S PRI="P^PRIMARY"
"RTN","PXBPPOV1",79,0)
 I Y=0 S PRI="S^SECONDARY"
"RTN","PXBPPOV1",80,0)
 S $P(REQI,"^",6)=$P(PRI,"^",1)
"RTN","PXBPPOV1",81,0)
 S $P(REQE,"^",6)=$P(PRI,"^",2)
"RTN","PXBPPOV1",82,0)
PPXIT ;--EXIT
"RTN","PXBPPOV1",83,0)
 Q
"RTN","PXBPPOV1",84,0)
PRBLM ;--Prompt for Problem list
"RTN","PXBPPOV1",85,0)
 N DIR,Y,X,VALL
"RTN","PXBPPOV1",86,0)
 W IOCUD,IOELALL,IOCUU
"RTN","PXBPPOV1",87,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBPPOV1",88,0)
 S DIR("?")="^S VALL=1,VALL=$$DOUBLE1^PXBGPL2(WHAT)"
"RTN","PXBPPOV1",89,0)
 S DIR("A")="Do you want this DIAGNOSIS added to the PROBLEM LIST? "
"RTN","PXBPPOV1",90,0)
 S DIR("B")="NO"
"RTN","PXBPPOV1",91,0)
 S DIR(0)="Y,A,O"
"RTN","PXBPPOV1",92,0)
 D ^DIR
"RTN","PXBPPOV1",93,0)
 I X="+"!(X="-") S DIR("?")="D DPOV4^PXBDPL(X)"
"RTN","PXBPPOV1",94,0)
 I $G(DIRUT) G PPXIT
"RTN","PXBPPOV1",95,0)
PRPFIN ;--Finish off variables
"RTN","PXBPPOV1",96,0)
 K PXBKYPL,PXBSKYPL,PXBSAMPL,PXBCNTPL
"RTN","PXBPPOV1",97,0)
 K ^TMP("PXBKYPL",$J),^TMP("PXBSAMPL",$J)
"RTN","PXBPPOV1",98,0)
 S PXBPRBLM=+Y
"RTN","PXBPPOV1",99,0)
PRPXIT ;--EXIT
"RTN","PXBPPOV1",100,0)
 Q
"RTN","PXBPPOV1",101,0)
 ;
"RTN","PXBUTL2")
0^18^B3542412
"RTN","PXBUTL2",1,0)
PXBUTL2 ;ISL/DCM - PCE Utilities ;5/21/96  12:15
"RTN","PXBUTL2",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**121**;Aug 12, 1996
"RTN","PXBUTL2",3,0)
 ;
"RTN","PXBUTL2",4,0)
 ;
"RTN","PXBUTL2",5,0)
 ;
"RTN","PXBUTL2",6,0)
 ;
"RTN","PXBUTL2",7,0)
PRV(CLINIC) ;Get default provider and all providers associated with a clinic
"RTN","PXBUTL2",8,0)
 ;CLINIC - ifn of clinic in file 44
"RTN","PXBUTL2",9,0)
 ;External references:  ^SC(DA(1),"PR",DA)
"RTN","PXBUTL2",10,0)
 ;                      ^VA(200,DA,0)
"RTN","PXBUTL2",11,0)
 Q:'$G(CLINIC)  Q:'$O(^SC(CLINIC,"PR",0))
"RTN","PXBUTL2",12,0)
 K PXBPMT N IFN,X,NAME
"RTN","PXBUTL2",13,0)
 S IFN=0 F  S IFN=$O(^SC(CLINIC,"PR",IFN)) Q:IFN<1  S X=^(IFN,0) D
"RTN","PXBUTL2",14,0)
 . S NAME=$P($G(^VA(200,+X,0)),"^") I $L(NAME) S PXBPMT("PRV",NAME,+X)="" S:$P(X,"^",2) PXBPMT("DEF",NAME,+X)=""
"RTN","PXBUTL2",15,0)
 Q
"RTN","PXBUTL2",16,0)
POV(CLINIC,CODE) ;Get default diagnosis and all diagnosis associated with clinic
"RTN","PXBUTL2",17,0)
 ;CLINIC - ifn of clinic in file 44
"RTN","PXBUTL2",18,0)
 ;CODE - 1 (default) code, 2 diagnosis, 3 both
"RTN","PXBUTL2",19,0)
 ;External references:  ^SC(DA(1),"DX",DA)
"RTN","PXBUTL2",20,0)
 ;                      ^ICD9(DA,0)
"RTN","PXBUTL2",21,0)
 Q:'$G(CLINIC)  Q:'$O(^SC(CLINIC,"DX",0))
"RTN","PXBUTL2",22,0)
 K PXBPMT N IFN,X,NAME
"RTN","PXBUTL2",23,0)
 S:'$D(CODE) CODE=1
"RTN","PXBUTL2",24,0)
 S IFN=0 F  S IFN=$O(^SC(CLINIC,"DX",IFN)) Q:IFN<1  S X=^(IFN,0) D
"RTN","PXBUTL2",25,0)
 . ;S NAME=$P($G(^ICD9(+X,0)),"^",1,3)
"RTN","PXBUTL2",26,0)
 . S NAME=$P($$ICDDX^ICDCODE(+X,IDATE),"^",2,4)
"RTN","PXBUTL2",27,0)
 . ;jvs 7/22/96 allow selection of v codes
"RTN","PXBUTL2",28,0)
 . I $L(NAME) S NAME=$S(CODE=2:$S($L($P(NAME,"^",3)):$P(NAME,"^",3),1:$P(NAME,"^")),CODE=3:$P(NAME,"^")_"--"_$P(NAME,"^",3),1:$P(NAME,"^")),PXBPMT("POV",NAME,+X)="" S:$P(X,"^",2) PXBPMT("DEF",NAME,+X)=""
"RTN","PXBUTL2",29,0)
 Q
"RTN","PXBUTL2",30,0)
TSTPRV ;Test provider lookup
"RTN","PXBUTL2",31,0)
 S DIC=44,DIC(0)="AEQLM" D ^DIC Q:Y<1  D PRV(+Y)
"RTN","PXBUTL2",32,0)
 K DIC
"RTN","PXBUTL2",33,0)
 Q
"RTN","PXBUTL2",34,0)
TSTPOV ;Test diagnosis lookup
"RTN","PXBUTL2",35,0)
 S DIC=44,DIC(0)="AEQLM" D ^DIC Q:Y<1  D POV(+Y,3)
"RTN","PXBUTL2",36,0)
 K DIC
"RTN","PXBUTL2",37,0)
 Q
"RTN","PXCACPT")
0^5^B20172292
"RTN","PXCACPT",1,0)
PXCACPT ;ISL/dee & LEA/Chylton - Validates & Translates data from the PCE Device Interface into PCE's PXK format for CPTs ;3/14/97
"RTN","PXCACPT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**27,33,73,121**;Aug 12, 1996
"RTN","PXCACPT",3,0)
 Q
"RTN","PXCACPT",4,0)
 ; Variables
"RTN","PXCACPT",5,0)
 ;   PXCAPROC  Copy of a Procedure node of the PXCA array
"RTN","PXCACPT",6,0)
 ;   PXCAPRV   Pointer to the provider (200)
"RTN","PXCACPT",7,0)
 ;   PXCANUMB  Count of the number of CPTs and treatments
"RTN","PXCACPT",8,0)
 ;   PXCAINDX  Count of the number of procedures for one provider
"RTN","PXCACPT",9,0)
 ;   PXCAPNAR  Pointer to the provider narrative (9999999.27)
"RTN","PXCACPT",10,0)
 ;   PXCATRT   Pointer to the Treatment file (9999999.17)
"RTN","PXCACPT",11,0)
 ;
"RTN","PXCACPT",12,0)
PROC(PXCA,PXCABULD,PXCAERRS,PXCAEVAL) ;
"RTN","PXCACPT",13,0)
 I '$D(PXCA("PROCEDURE")),'PXCAEVAL,$P($G(^PX(815,1,"DI")),"^",1),'$D(^AUPNVCPT("AD",+PXCAVSIT)) S PXCA("WARNING","PROCEDURE",0,0,0)="PROCEDURE data missing" Q
"RTN","PXCACPT",14,0)
 N PXCAPROC,PXCAPRV,PXCANUMB,PXCAINDX,PXCAITEM,PXCALEN
"RTN","PXCACPT",15,0)
 N PXCAPNAR,PXCANARC
"RTN","PXCACPT",16,0)
 S PXCAPRV=""
"RTN","PXCACPT",17,0)
 S PXCANUMB=1
"RTN","PXCACPT",18,0)
 F  S PXCAPRV=$O(PXCA("PROCEDURE",PXCAPRV)) Q:PXCAPRV']""  D
"RTN","PXCACPT",19,0)
 . I PXCAPRV>0 D
"RTN","PXCACPT",20,0)
 .. I '$$ACTIVPRV^PXAPI(PXCAPRV,PXCADT) S PXCA("ERROR","PROCEDURE",PXCAPRV,0,0)="Provider is not active or valid^"_PXCAPRV
"RTN","PXCACPT",21,0)
 . I '$T&PXCABULD!PXCAERRS D ANOTHPRV^PXCAPRV(PXCAPRV)
"RTN","PXCACPT",22,0)
 . S PXCAINDX=0
"RTN","PXCACPT",23,0)
 . F  S PXCAINDX=$O(PXCA("PROCEDURE",PXCAPRV,PXCAINDX)) Q:PXCAINDX']""  D
"RTN","PXCACPT",24,0)
 .. N PXCATRT
"RTN","PXCACPT",25,0)
 .. S PXCANUMB=PXCANUMB+1
"RTN","PXCACPT",26,0)
 .. S PXCAPROC=$G(PXCA("PROCEDURE",PXCAPRV,PXCAINDX))
"RTN","PXCACPT",27,0)
 .. I PXCAPROC="" S PXCA("ERROR","PROCEDURE",PXCAPRV,PXCAINDX,0)="PROCEDURE data missing" Q
"RTN","PXCACPT",28,0)
 .. S PXCAITEM=$P(PXCAPROC,U,1)
"RTN","PXCACPT",29,0)
 .. I PXCAITEM]"" D
"RTN","PXCACPT",30,0)
 ... S D=$G(^ICPT(+PXCAITEM,0))
"RTN","PXCACPT",31,0)
 ... I D="" S PXCA("ERROR","PROCEDURE",PXCAPRV,PXCAINDX,1)="CPT code not in File 81^"_PXCAITEM
"RTN","PXCACPT",32,0)
 ... E  I '(+$$CPTSCREN^PXBUTL(PXCAITEM,+PXCADT)) S PXCA("ERROR","PROCEDURE",PXCAPRV,PXCAINDX,1)="CPT code is INACTIVE^"_PXCAITEM
"RTN","PXCACPT",33,0)
 .. E  D
"RTN","PXCACPT",34,0)
 ... S PXCATRT=$O(^AUTTTRT("B",+$P(PXCAPROC,"^",6),""))
"RTN","PXCACPT",35,0)
 ... S:PXCATRT="" PXCATRT=$O(^AUTTTRT("B","OTHER",""))
"RTN","PXCACPT",36,0)
 ... I 'PXCATRT S PXCA("ERROR","PROCEDURE",PXCAPRV,PXCAINDX,6)="Could not get pointer to treatment term^"_$P(PXCAPROC,"^",6)
"RTN","PXCACPT",37,0)
 .. S PXCAITEM=$P(PXCAPROC,U,2)
"RTN","PXCACPT",38,0)
 .. I PXCAITEM="" S PXCAITEM=1,$P(PXCAPROC,U,2)=PXCAITEM
"RTN","PXCACPT",39,0)
 .. I PXCAITEM'>0 S PXCA("ERROR","PROCEDURE",PXCAPRV,PXCAINDX,2)="CPT Quantity must be > 0^"_PXCAITEM
"RTN","PXCACPT",40,0)
 .. S PXCAITEM=$P(PXCAPROC,U,3)
"RTN","PXCACPT",41,0)
 .. I '(PXCAITEM=""!(PXCAITEM="P")!(PXCAITEM="S")) S PXCA("ERROR","PROCEDURE",PXCAPRV,PXCAINDX,3)="Specification code must be P|S^"_PXCAITEM
"RTN","PXCACPT",42,0)
 .. S PXCAITEM=+$P(PXCAPROC,U,5)
"RTN","PXCACPT",43,0)
 .. I PXCAITEM D
"RTN","PXCACPT",44,0)
 ... ; S D=$G(^ICD9(PXCAITEM,0))
"RTN","PXCACPT",45,0)
 ... S D=$$ICDDX^ICDCODE(PXCAITEM,PXCADT)
"RTN","PXCACPT",46,0)
 ... I +D=-1 S PXCA("ERROR","PROCEDURE",PXCAPRV,PXCAINDX,5)="Associated Diagnosis ICD9 Code not in file 80^"_PXCAITEM
"RTN","PXCACPT",47,0)
 ... E  I '$P(D,U,10) S PXCA("ERROR","PROCEDURE",PXCAPRV,PXCAINDX,5)="Associated Diagnosis ICD9 Code is INACTIVE^"_PXCAITEM
"RTN","PXCACPT",48,0)
 .. S PXCAITEM=$P(PXCAPROC,U,6),PXCALEN=$L(PXCAITEM)
"RTN","PXCACPT",49,0)
 .. I PXCALEN<2!(PXCALEN>80) S PXCA("ERROR","PROCEDURE",PXCAPRV,PXCAINDX,6)="Provider's PROCEDURE term must be 2-80 Characters^"_PXCAITEM
"RTN","PXCACPT",50,0)
 .. E  D
"RTN","PXCACPT",51,0)
 ... S PXCAPNAR=+$$PROVNARR^PXAPI(PXCAITEM,$S($P(PXCAPROC,"^",1)="":9000010.15,1:9000010.18))
"RTN","PXCACPT",52,0)
 ... I PXCAPNAR'>0 S PXCA("ERROR","PROCEDURE",PXCAPRV,PXCAINDX,6)="Could not get pointer to Provider's PROCEDURE term^"_$P(PXCAPROC,"^",6) Q:'PXCAERRS
"RTN","PXCACPT",53,0)
 ... S $P(PXCAPROC,"^",6)=PXCAPNAR
"RTN","PXCACPT",54,0)
 .. S PXCAITEM=$P(PXCAPROC,U,7),PXCALEN=$L(PXCAITEM)
"RTN","PXCACPT",55,0)
 .. I PXCALEN>0 D
"RTN","PXCACPT",56,0)
 ... I PXCALEN<2!(PXCALEN>80) S PXCA("ERROR","PROCEDURE",PXCAPRV,PXCAINDX,7)="Provider's PROCEDURE grouper must be 2-80 Characters^"_PXCAITEM
"RTN","PXCACPT",57,0)
 ... E  D
"RTN","PXCACPT",58,0)
 .... S PXCANARC=+$$PROVNARR^PXAPI(PXCAITEM,$S($P(PXCAPROC,"^",1)="":9000010.15,1:9000010.18))
"RTN","PXCACPT",59,0)
 .... I PXCANARC'>0 S PXCA("ERROR","PROCEDURE",PXCAPRV,PXCAINDX,7)="Could not get pointer to Provider's PROCEDURE grouper^"_PXCAITEM
"RTN","PXCACPT",60,0)
 .... E  S $P(PXCAPROC,"^",7)=PXCANARC
"RTN","PXCACPT",61,0)
 .. I PXCABULD&'$D(PXCA("ERROR","PROCEDURE",PXCAPRV,PXCAINDX))!PXCAERRS D
"RTN","PXCACPT",62,0)
 ... I $P(PXCAPROC,"^",1)]"" D
"RTN","PXCACPT",63,0)
 .... D CPT^PXCACPT1(.PXCA,PXCAPROC,PXCANUMB,PXCAPRV,PXCAINDX,PXCAERRS)
"RTN","PXCACPT",64,0)
 ... E  D TRT^PXCATRT(PXCAPROC,PXCANUMB,PXCAPRV,PXCAINDX,PXCAERRS,PXCATRT)
"RTN","PXCACPT",65,0)
 Q
"RTN","PXCACPT",66,0)
 ;
"RTN","PXCACPT1")
0^6^B6830509
"RTN","PXCACPT1",1,0)
PXCACPT1 ;ISL/dee & LEA/Chylton - Validates & Translates data from the PCE Device Interface into PCE's PXK format for CPTs ;8/1/96
"RTN","PXCACPT1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**73,121**;Aug 12, 1996
"RTN","PXCACPT1",3,0)
 Q
"RTN","PXCACPT1",4,0)
 ; Variables
"RTN","PXCACPT1",5,0)
 ;   PXCA      Copy of PXCA array
"RTN","PXCACPT1",6,0)
 ;   PXCAPROC  Copy of a Procedure node of the PXCA array
"RTN","PXCACPT1",7,0)
 ;   PXCAPRV   Pointer to the provider (200)
"RTN","PXCACPT1",8,0)
 ;   PXCANUMB  Count of the number if CPTs and treatments
"RTN","PXCACPT1",9,0)
 ;   PXCAINDX  Count of the number of procedures for one provider
"RTN","PXCACPT1",10,0)
 ;   PXCAFTER  Temp used to build ^TMP(PXCAGLB,$J,"CPT",PXCANPRV,0,"AFTER")
"RTN","PXCACPT1",11,0)
 ;               or to build ^TMP(PXCAGLB,$J,"TRT",PXCANPRV,0,"AFTER")
"RTN","PXCACPT1",12,0)
 ;
"RTN","PXCACPT1",13,0)
CPT(PXCA,PXCAPROC,PXCANUMB,PXCAPRV,PXCAINDX,PXCAERRS) ;CPT
"RTN","PXCACPT1",14,0)
 N PXCAFTER,PXCACNT,PXCASTR,PXCAWARN,PXMDIEN
"RTN","PXCACPT1",15,0)
 S PXCAFTER=$P(PXCAPROC,"^",1)_"^"
"RTN","PXCACPT1",16,0)
 S PXCAFTER=PXCAFTER_PXCAPAT_"^"_PXCAVSIT_"^"
"RTN","PXCACPT1",17,0)
 S PXCAFTER=PXCAFTER_$P(PXCAPROC,"^",6)
"RTN","PXCACPT1",18,0)
 S PXCAFTER=PXCAFTER_"^"
"RTN","PXCACPT1",19,0)
 S PXCAFTER=PXCAFTER_$P(PXCAPROC,"^",5)_"^^"
"RTN","PXCACPT1",20,0)
 S PXCAFTER=PXCAFTER_$S($P(PXCAPROC,"^",3)="P":"Y",$P(PXCAPROC,"^",3)="S":"N",1:"")_"^^^^^^^^^"
"RTN","PXCACPT1",21,0)
 S PXCAFTER=PXCAFTER_$P(PXCAPROC,"^",2)
"RTN","PXCACPT1",22,0)
 S ^TMP(PXCAGLB,$J,"CPT",PXCANUMB,"IEN")=""
"RTN","PXCACPT1",23,0)
 S ^TMP(PXCAGLB,$J,"CPT",PXCANUMB,0,"BEFORE")=""
"RTN","PXCACPT1",24,0)
 S ^TMP(PXCAGLB,$J,"CPT",PXCANUMB,0,"AFTER")=PXCAFTER
"RTN","PXCACPT1",25,0)
 ;Set modifier nodes
"RTN","PXCACPT1",26,0)
 S (PXCAMOD,PXCAWARN)=""
"RTN","PXCACPT1",27,0)
 F PXCACNT=1:1 S PXCAMOD=$O(PXCA("PROCEDURE",PXCAPRV,PXCAINDX,PXCAMOD)) Q:PXCAMOD=""  D
"RTN","PXCACPT1",28,0)
 . S PXMDIEN=$$MODP^ICPTMOD(+PXCAFTER,PXCAMOD,"E",PXCADT)
"RTN","PXCACPT1",29,0)
 . I +PXMDIEN<1 D  Q
"RTN","PXCACPT1",30,0)
 .. S PXCAWARN=$S(PXCAWARN="":"",1:PXCAWARN_",")_PXCAMOD
"RTN","PXCACPT1",31,0)
 .. S PXCA("PROCEDURE",PXCAPRV,PXCAINDX,PXCAMOD)="Invalid Modifier"
"RTN","PXCACPT1",32,0)
 . S PXCASTR=$$MOD^ICPTMOD(PXMDIEN,"I",PXCADT)
"RTN","PXCACPT1",33,0)
 . S ^TMP(PXCAGLB,$J,"CPT",PXCANUMB,1,PXCACNT,"BEFORE")=""
"RTN","PXCACPT1",34,0)
 . S ^TMP(PXCAGLB,$J,"CPT",PXCANUMB,1,PXCACNT,"AFTER")=+PXCASTR
"RTN","PXCACPT1",35,0)
 . I PXCA("PROCEDURE",PXCAPRV,PXCAINDX,PXCAMOD)="" D
"RTN","PXCACPT1",36,0)
 .. S PXCA("PROCEDURE",PXCAPRV,PXCAINDX,PXCAMOD)=$P(PXCASTR,"^",1,3)
"RTN","PXCACPT1",37,0)
 I PXCAWARN]"" D
"RTN","PXCACPT1",38,0)
 . S PXCA("WARNING","PROCEDURE",PXCAPRV,PXCAINDX,0)="CPT Modifier(s) "_PXCAWARN_" invalid. Code(s) not stored."
"RTN","PXCACPT1",39,0)
 S ^TMP(PXCAGLB,$J,"CPT",PXCANUMB,12,"BEFORE")=""
"RTN","PXCACPT1",40,0)
 S ^TMP(PXCAGLB,$J,"CPT",PXCANUMB,12,"AFTER")=$P(PXCAPROC,"^",4)_"^^^"_$S(PXCAPRV>0:PXCAPRV,1:"")
"RTN","PXCACPT1",41,0)
 S ^TMP(PXCAGLB,$J,"CPT",PXCANUMB,802,"BEFORE")=""
"RTN","PXCACPT1",42,0)
 S ^TMP(PXCAGLB,$J,"CPT",PXCANUMB,802,"AFTER")=$P(PXCAPROC,"^",7)
"RTN","PXCACPT1",43,0)
 S ^TMP(PXCAGLB,$J,"CPT",PXCANUMB,812,"BEFORE")=""
"RTN","PXCACPT1",44,0)
 S ^TMP(PXCAGLB,$J,"CPT",PXCANUMB,812,"AFTER")="^"_PXCAPKG_"^"_PXCASOR
"RTN","PXCACPT1",45,0)
 Q
"RTN","PXCACPT1",46,0)
 ;
"RTN","PXCAPOV")
0^7^B25000109
"RTN","PXCAPOV",1,0)
PXCAPOV ;ISL/dee & LEA/Chylton - Validates data from the PCE Device Interface into PCE's PXK format for POV ;3/20/97
"RTN","PXCAPOV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**24,27,33,121**;Aug 12, 1996
"RTN","PXCAPOV",3,0)
 Q
"RTN","PXCAPOV",4,0)
 ; Variables
"RTN","PXCAPOV",5,0)
 ;   PXCADIAG  Copy of a Diagnosis node of the PXCA array
"RTN","PXCAPOV",6,0)
 ;   PXCAPRV   Pointer to the provider (200)
"RTN","PXCAPOV",7,0)
 ;   PXCANUMB  Count of the number if POVs
"RTN","PXCAPOV",8,0)
 ;   PXCAINDX  Count of the number of Diagnoses for one provider
"RTN","PXCAPOV",9,0)
 ;
"RTN","PXCAPOV",10,0)
DIAG(PXCA,PXCABULD,PXCAERRS) ;Validation routine for POV
"RTN","PXCAPOV",11,0)
 N PXCADIAG,PXCAPRV,PXCANUMB,PXCAINDX
"RTN","PXCAPOV",12,0)
 S PXCAPRV=""
"RTN","PXCAPOV",13,0)
 S PXCANUMB=0
"RTN","PXCAPOV",14,0)
 F  S PXCAPRV=$O(PXCA("DIAGNOSIS",PXCAPRV)) Q:PXCAPRV']""  D
"RTN","PXCAPOV",15,0)
 . I PXCAPRV>0 D
"RTN","PXCAPOV",16,0)
 .. I '$$ACTIVPRV^PXAPI(PXCAPRV,PXCADT) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,0,0)="Provider is not active or valid^"_PXCAPRV
"RTN","PXCAPOV",17,0)
 .. E  I PXCABULD!PXCAERRS D ANOTHPRV^PXCAPRV(PXCAPRV)
"RTN","PXCAPOV",18,0)
 . S PXCAINDX=0
"RTN","PXCAPOV",19,0)
 . F  S PXCAINDX=$O(PXCA("DIAGNOSIS",PXCAPRV,PXCAINDX)) Q:PXCAINDX']""  D
"RTN","PXCAPOV",20,0)
 .. S PXCADIAG=$G(PXCA("DIAGNOSIS",PXCAPRV,PXCAINDX))
"RTN","PXCAPOV",21,0)
 .. S PXCANUMB=PXCANUMB+1
"RTN","PXCAPOV",22,0)
 .. I PXCADIAG="" S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,0)="DIAGNOSIS data missing" Q
"RTN","PXCAPOV",23,0)
 .. N PXCAITEM,PXCAITM2,PXCAPNAR,PXCANARC,PXCACLEX
"RTN","PXCAPOV",24,0)
 .. ;
"RTN","PXCAPOV",25,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",1)
"RTN","PXCAPOV",26,0)
 .. D
"RTN","PXCAPOV",27,0)
 ... ;N DIC,DR,DA,DIQ,PXCADIQ1
"RTN","PXCAPOV",28,0)
 ... ;S DIC=80
"RTN","PXCAPOV",29,0)
 ... ;S DR=".01;102"
"RTN","PXCAPOV",30,0)
 ... ;S DA=$S(PXCAITEM'="":PXCAITEM,1:-1)
"RTN","PXCAPOV",31,0)
 ... ;S DIQ="PXCADIQ1("
"RTN","PXCAPOV",32,0)
 ... ;S DIQ(0)="I"
"RTN","PXCAPOV",33,0)
 ... ;D EN^DIQ1
"RTN","PXCAPOV",34,0)
 ... ;I $G(PXCADIQ1(80,DA,.01,"I"))="" S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,1)="ICD9 Code not in file 80^"_PXCAITEM
"RTN","PXCAPOV",35,0)
 ... ;E  I $G(PXCADIQ1(80,DA,102,"I")),PXCADIQ1(80,DA,102,"I")'>+PXCADT S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,1)="ICD9 Code is INACTIVE^"_PXCAITEM
"RTN","PXCAPOV",36,0)
 ... N ICDSTR,ICDCN,ICDID
"RTN","PXCAPOV",37,0)
 ... S ICDSTR=$$ICDDX^ICDCODE($S(PXCAITEM'="":PXCAITEM,1:-1),+PXCADT)
"RTN","PXCAPOV",38,0)
 ... S ICDCN=$P(ICDSTR,"^",2)
"RTN","PXCAPOV",39,0)
 ... S ICDID=$P(ICDSTR,"^",12)
"RTN","PXCAPOV",40,0)
 ... I +ICDSTR=-1 S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,1)="ICD9 Code not in file 80^"_PXCAITEM
"RTN","PXCAPOV",41,0)
 ... E  I '$P(ICDSTR,"^",10) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,1)="ICD9 Code is INACTIVE^"_PXCAITEM
"RTN","PXCAPOV",42,0)
 ...;
"RTN","PXCAPOV",43,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",2)
"RTN","PXCAPOV",44,0)
 .. I '(PXCAITEM=""!(PXCAITEM="P")!(PXCAITEM="S")) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,2)="Diagnosis specification code must be P|S^"_PXCAITEM
"RTN","PXCAPOV",45,0)
 .. E  I PXCAITEM="P" D
"RTN","PXCAPOV",46,0)
 ... I 'PXCAPDX S PXCAPDX=$P(PXCADIAG,"^",1)
"RTN","PXCAPOV",47,0)
 ... E  I $P($G(^PX(815,1,"DI")),"^",2) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,2)="There is already a Primary Diagnosis for this encounter^"_PXCAITEM
"RTN","PXCAPOV",48,0)
 ... E  D
"RTN","PXCAPOV",49,0)
 .... S PXCA("WARNING","DIAGNOSIS",PXCAPRV,PXCAINDX,2)="There is already a Primary Diagnosis. This one is changed to Secondary^"_PXCAITEM
"RTN","PXCAPOV",50,0)
 .... S $P(PXCADIAG,"^",2)="S"
"RTN","PXCAPOV",51,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",3)
"RTN","PXCAPOV",52,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,3)="SC flag bad^"_PXCAITEM
"RTN","PXCAPOV",53,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",4)
"RTN","PXCAPOV",54,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,4)="AO flag bad^"_PXCAITEM
"RTN","PXCAPOV",55,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",5)
"RTN","PXCAPOV",56,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,5)="IR flag bad^"_PXCAITEM
"RTN","PXCAPOV",57,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",6)
"RTN","PXCAPOV",58,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,6)="EC flag bad^"_PXCAITEM
"RTN","PXCAPOV",59,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",7)
"RTN","PXCAPOV",60,0)
 .. I PXCAITEM]"" D
"RTN","PXCAPOV",61,0)
 ... I $G(^AUPNPROB(PXCAITEM,0))="" S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,7)="Problem not in file 9000011^"_PXCAITEM
"RTN","PXCAPOV",62,0)
 ... E  I PXCAPAT'=$P($G(^AUPNPROB(PXCAITEM,0)),"^",2) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,7)="Problem in file 9000011 is for a different Patient^"_PXCAITEM
"RTN","PXCAPOV",63,0)
 .. ;
"RTN","PXCAPOV",64,0)
 .. ;Clinical Lexicon Term
"RTN","PXCAPOV",65,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",10)
"RTN","PXCAPOV",66,0)
 .. I PXCAITEM]"" D
"RTN","PXCAPOV",67,0)
 ... I $D(^LEX(757.01)) D
"RTN","PXCAPOV",68,0)
 .... I $D(^LEX(757.01,PXCAITEM,0))#2'=1 S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,10)="Lexicon Utility term is not in file 757.01^"_PXCAITEM
"RTN","PXCAPOV",69,0)
 .... E  S PXCACLEX=PXCAITEM
"RTN","PXCAPOV",70,0)
 ... E  I $D(^GMP(757.01)) D
"RTN","PXCAPOV",71,0)
 .... I $D(^GMP(757.01,PXCAITEM,0))#2'=1 S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,10)="Clinical Lexicon Utility term is not in file 757.01^"_PXCAITEM
"RTN","PXCAPOV",72,0)
 .... E  S PXCACLEX=PXCAITEM
"RTN","PXCAPOV",73,0)
 ... E  S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,10)="Lexicon Utility is not installed^"_PXCAITEM
"RTN","PXCAPOV",74,0)
 .. ;
"RTN","PXCAPOV",75,0)
 .. D PART1^PXCAPOV1
"RTN","PXCAPOV",76,0)
 .. ;
"RTN","PXCAPOV",77,0)
 .. I PXCABULD&'$D(PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX))!PXCAERRS D POV^PXCADX(PXCADIAG,PXCANUMB,PXCAPRV,PXCAERRS)
"RTN","PXCAPOV",78,0)
 Q
"RTN","PXCAPOV",79,0)
 ;
"RTN","PXCAVST1")
0^8^B16093524
"RTN","PXCAVST1",1,0)
PXCAVST1 ;ISL/dee & LEA/Chylton - Translates data from the PCE Device Interface into PCE's PXK format for the Visit and Providers ;8/1/96
"RTN","PXCAVST1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**73,74,111,121**;Aug 12, 1996
"RTN","PXCAVST1",3,0)
 Q
"RTN","PXCAVST1",4,0)
 ;
"RTN","PXCAVST1",5,0)
VST(PXCAENC) ;Visit
"RTN","PXCAVST1",6,0)
 N PXCAFTER
"RTN","PXCAVST1",7,0)
NODE0 ;
"RTN","PXCAVST1",8,0)
1 S PXCAFTER=$P(PXCAENC,"^",1)_"^^^^"
"RTN","PXCAVST1",9,0)
5 S PXCAFTER=PXCAFTER_PXCAPAT_"^^^"
"RTN","PXCAVST1",10,0)
8 S PXCAFTER=PXCAFTER_PXCACSTP_"^^^^^^^^^"
"RTN","PXCAVST1",11,0)
17 ;Store the Evaluation and Management Code in V-CPT and NOT in the Visit
"RTN","PXCAVST1",12,0)
 D EVALCODE($P(PXCAENC,"^",5),$P(PXCAENC,"^",4))
"RTN","PXCAVST1",13,0)
 S PXCAFTER=PXCAFTER_"^"
"RTN","PXCAVST1",14,0)
18 S PXCAFTER=PXCAFTER_$P(PXCAENC,"^",14)_"^^^"
"RTN","PXCAVST1",15,0)
21 I $P(PXCAENC,"^",13)]"" S PXCAFTER=PXCAFTER_$P(PXCAENC,"^",13)_"^"
"RTN","PXCAVST1",16,0)
 E  D 
"RTN","PXCAVST1",17,0)
 . N PXCAELIG
"RTN","PXCAVST1",18,0)
 . S PXCAELIG=$$ELIGIBIL^PXCEVSIT(PXCAPAT,PXCAHLOC,+PXCAENC)
"RTN","PXCAVST1",19,0)
 . S PXCAELIG=$S(PXCAELIG>0:PXCAELIG,1:"")
"RTN","PXCAVST1",20,0)
 . S PXCAFTER=PXCAFTER_PXCAELIG_"^"
"RTN","PXCAVST1",21,0)
22 S PXCAFTER=PXCAFTER_PXCAHLOC
"RTN","PXCAVST1",22,0)
 S ^TMP(PXCAGLB,$J,"VST",1,0,"AFTER")=PXCAFTER
"RTN","PXCAVST1",23,0)
 ;
"RTN","PXCAVST1",24,0)
NODE150 I $P($G(^SC(+PXCAHLOC,0)),"^",7)=PXCACSTP D
"RTN","PXCAVST1",25,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,150,"AFTER")="^^P"
"RTN","PXCAVST1",26,0)
 ;
"RTN","PXCAVST1",27,0)
NODE800 ;
"RTN","PXCAVST1",28,0)
 S ^TMP(PXCAGLB,$J,"VST",1,800,"AFTER")=$P(PXCAENC,"^",6,11)
"RTN","PXCAVST1",29,0)
 ;
"RTN","PXCAVST1",30,0)
 I PXCAVSIT'>0 D
"RTN","PXCAVST1",31,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,"IEN")=""
"RTN","PXCAVST1",32,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,0,"BEFORE")=""
"RTN","PXCAVST1",33,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,150,"BEFORE")=""
"RTN","PXCAVST1",34,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,800,"BEFORE")=""
"RTN","PXCAVST1",35,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,812,"BEFORE")=""
"RTN","PXCAVST1",36,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,812,"AFTER")="^"_PXCAPKG_"^"_PXCASOR
"RTN","PXCAVST1",37,0)
 E  D
"RTN","PXCAVST1",38,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,"IEN")=PXCAVSIT
"RTN","PXCAVST1",39,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,0,"BEFORE")=$G(^AUPNVSIT(PXCAVSIT,0))
"RTN","PXCAVST1",40,0)
 . S $P(^TMP("PXK",$J,"VST",1,0,"AFTER"),"^",3)=$P(^AUPNVSIT(PXCAVSIT,0),"^",3)
"RTN","PXCAVST1",41,0)
 . S $P(^TMP("PXK",$J,"VST",1,0,"AFTER"),"^",7)=$P(^AUPNVSIT(PXCAVSIT,0),"^",7)
"RTN","PXCAVST1",42,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,150,"BEFORE")=$G(^AUPNVSIT(PXCAVSIT,150))
"RTN","PXCAVST1",43,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,800,"BEFORE")=$G(^AUPNVSIT(PXCAVSIT,800))
"RTN","PXCAVST1",44,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,21,"BEFORE")=$G(^AUPNVSIT(PXCAVSIT,21))
"RTN","PXCAVST1",45,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,21,"AFTER")=$G(^AUPNVSIT(PXCAVSIT,21))
"RTN","PXCAVST1",46,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,811,"BEFORE")=$G(^AUPNVSIT(PXCAVSIT,811))
"RTN","PXCAVST1",47,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,811,"AFTER")=$G(^AUPNVSIT(PXCAVSIT,811))
"RTN","PXCAVST1",48,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,812,"BEFORE")=$G(^AUPNVSIT(PXCAVSIT,812))
"RTN","PXCAVST1",49,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,812,"AFTER")=$G(^AUPNVSIT(PXCAVSIT,812))
"RTN","PXCAVST1",50,0)
 Q
"RTN","PXCAVST1",51,0)
 ;
"RTN","PXCAVST1",52,0)
EVALCODE(CODE,PROV) ;Store the Evaluation and Management Code in a CPT node.
"RTN","PXCAVST1",53,0)
 ;Evaluation and Management Code always has a sequence number of 1
"RTN","PXCAVST1",54,0)
 ;  and there is only one of them.
"RTN","PXCAVST1",55,0)
 Q:'CODE
"RTN","PXCAVST1",56,0)
 N PXCAFTER,PXCAITEM,PXCAPNAR,PXCACNAR,PXCACNT,PXCAMOD,PXCASTR
"RTN","PXCAVST1",57,0)
 N DIC,DR,DA,DIQ,PXCADIQ1
"RTN","PXCAVST1",58,0)
 S DIC=357.69
"RTN","PXCAVST1",59,0)
 S DR=".015;.02;.03"
"RTN","PXCAVST1",60,0)
 S DA=+CODE
"RTN","PXCAVST1",61,0)
 S DIQ="PXCADIQ1("
"RTN","PXCAVST1",62,0)
 S DIQ(0)="E"
"RTN","PXCAVST1",63,0)
 D EN^DIQ1
"RTN","PXCAVST1",64,0)
 S PXCAITEM=$S($G(PXCADIQ1(357.69,DA,.03,"E"))]"":PXCADIQ1(357.69,DA,.03,"E"),$G(PXCADIQ1(357.69,DA,.015,"E"))]"":PXCADIQ1(357.69,DA,.015,"E"),1:"UNKNOWN")
"RTN","PXCAVST1",65,0)
 S PXCAPNAR=+$$PROVNARR^PXAPI(PXCAITEM,9000010.18)
"RTN","PXCAVST1",66,0)
 I PXCAPNAR'>0 S PXCAPNAR=""
"RTN","PXCAVST1",67,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,0,"BEFORE")=""
"RTN","PXCAVST1",68,0)
 S PXCAFTER=CODE_"^"_PXCAPAT_"^"_PXCAVSIT_"^"
"RTN","PXCAVST1",69,0)
 S PXCAFTER=PXCAFTER_PXCAPNAR
"RTN","PXCAVST1",70,0)
 S PXCAFTER=PXCAFTER_"^^^^^^^^^^^^1"
"RTN","PXCAVST1",71,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,0,"AFTER")=PXCAFTER
"RTN","PXCAVST1",72,0)
 ; File modifiers in ^TMP global
"RTN","PXCAVST1",73,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,1,1,"BEFORE")=""
"RTN","PXCAVST1",74,0)
 S (PXCACNT,PXCAMOD)=""
"RTN","PXCAVST1",75,0)
 F PXCACNT=1:1 S PXCAMOD=$O(PXCA("ENCOUNTER","MODIFIER",PXCAMOD)) Q:PXCAMOD=""  D
"RTN","PXCAVST1",76,0)
 . S PXCASTR=$$MODP^ICPTMOD(CODE,PXCAMOD,"E",PXCADT)
"RTN","PXCAVST1",77,0)
 . Q:+PXCASTR<1
"RTN","PXCAVST1",78,0)
 . S ^TMP(PXCAGLB,$J,"CPT",1,1,PXCACNT,"AFTER")=+PXCASTR
"RTN","PXCAVST1",79,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,12,"BEFORE")=""
"RTN","PXCAVST1",80,0)
 I PROV S ^TMP(PXCAGLB,$J,"CPT",1,12,"AFTER")="^^^"_PROV
"RTN","PXCAVST1",81,0)
 E  S ^TMP(PXCAGLB,$J,"CPT",1,12,"AFTER")=""
"RTN","PXCAVST1",82,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,802,"BEFORE")=""
"RTN","PXCAVST1",83,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,812,"BEFORE")=""
"RTN","PXCAVST1",84,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,812,"AFTER")="^"_PXCAPKG_"^"_PXCASOR
"RTN","PXCAVST1",85,0)
 S PXCACNAR=""
"RTN","PXCAVST1",86,0)
 I $G(PXCADIQ1(357.69,DA,.02,"E"))]"" D
"RTN","PXCAVST1",87,0)
 . S PXCACNAR=+$$PROVNARR^PXAPI(PXCADIQ1(357.69,DA,.02,"E"),9000010.18)
"RTN","PXCAVST1",88,0)
 . I PXCACNAR'>0 S PXCACNAR=""
"RTN","PXCAVST1",89,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,802,"AFTER")=PXCACNAR
"RTN","PXCAVST1",90,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,"IEN")=""
"RTN","PXCAVST1",91,0)
 Q
"RTN","PXCAVST1",92,0)
 ;
"RTN","PXCECPT")
0^29^B36957005
"RTN","PXCECPT",1,0)
PXCECPT ;ISL/dee,ISA/Zoltan,esw - Used to edit and display V CPT ; 8/26/03 12:32pm
"RTN","PXCECPT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**14,27,73,89,112,121**;Aug 12, 1996
"RTN","PXCECPT",3,0)
 ;; ;
"RTN","PXCECPT",4,0)
 Q
"RTN","PXCECPT",5,0)
 ;
"RTN","PXCECPT",6,0)
 ;+Structure of Line with the line label "FORMAT"
"RTN","PXCECPT",7,0)
 ;+;;Long name~File Number~Node Subscripts~Allow Duplicate entries (1=yes, 0=no)~File global name
"RTN","PXCECPT",8,0)
 ;+      1         2             3                   4                                   5
"RTN","PXCECPT",9,0)
 ;+
"RTN","PXCECPT",10,0)
 ;+Structure of Followning lines:
"RTN","PXCECPT",11,0)
 ;+;;Node~Piece~,Field Number~Edit Label~Display Label~Display Routine~Edit Routine~Help Text for DIR("?")~Set of PXCEKEYS that can Edit~D if Detail Display Only~
"RTN","PXCECPT",12,0)
 ;+   1  ~  2  ~      3      ~     4    ~        5    ~        6      ~     7      ~       8              ~          9                  ~         10
"RTN","PXCECPT",13,0)
 ;+The Display & Edit routines are for special cases.
"RTN","PXCECPT",14,0)
 ;+  (The .01 fields cannot have a special edit.)
"RTN","PXCECPT",15,0)
 ;
"RTN","PXCECPT",16,0)
FORMAT ;;CPT~9000010.18~0,1,12,802,811,812~1~^AUPNVCPT
"RTN","PXCECPT",17,0)
 ;;0~1~.01~CPT Code:  ~CPT Code:  ~$$DISPLY01^PXCECPT~ECPTCODE^PXCECPT~^D HELP^PXCEHELP~~B
"RTN","PXCECPT",18,0)
 ;;1~0~1~CPT Modifier:  ~CPT Modifier:  ~$$DISPMOD^PXCECPT~ECPTMOD^PXCECPT~Select a Modifier that is valid for the CPT code.~~B
"RTN","PXCECPT",19,0)
 ;;0~4~.04~Provider Narrative:  ~Provider Narrative:  ~$$DNARRAT^PXCECPT~ENARRAT^PXCEPOV1(1,1,1,81,2)~~~B
"RTN","PXCECPT",20,0)
 ;;0~16~.16~Quantity:  ~Quantity:  ~~EQUAN^PXCECPT~~~D
"RTN","PXCECPT",21,0)
 ;;0~7~.07~Principal Procedure:  ~Principal Procedure:  ~~~~~D
"RTN","PXCECPT",22,0)
 ;;12~4~1204~Encounter Provider:  ~Encounter Provider:  ~~EPROV12^PXCEPRV~~~D
"RTN","PXCECPT",23,0)
 ;;802~1~80201~Provider Narrative Category:  ~Provider Narrative Category:  ~$$DNARRAT^PXCECPT~ENARRAT^PXCEPOV1(0,2,0,81,3)~~C~D
"RTN","PXCECPT",24,0)
 ;;811~1~81101~Comments:  ~Comments:  ~~~~~D
"RTN","PXCECPT",25,0)
 ;;
"RTN","PXCECPT",26,0)
 ;Do not use this one
"RTN","PXCECPT",27,0)
 ;;0~5~.05~Diagnosis:  ~Diagnosis:  ~$$DISPLY01^PXCEPOV~~~~D
"RTN","PXCECPT",28,0)
 ;
"RTN","PXCECPT",29,0)
 ;The interface for AICS to get list on form for help.
"RTN","PXCECPT",30,0)
INTRFACE ;;DG SELECT CPT PROCEDURE CODES
"RTN","PXCECPT",31,0)
 ;+
"RTN","PXCECPT",32,0)
 ;+********************************
"RTN","PXCECPT",33,0)
 ;+Special cases for display.
"RTN","PXCECPT",34,0)
 ;
"RTN","PXCECPT",35,0)
DISPMOD(PXCECPT) ;
"RTN","PXCECPT",36,0)
 ;+Display the modifiers associated with this V CPT entry.
"RTN","PXCECPT",37,0)
 ;+PXCECPT = IEN in V CPT file.
"RTN","PXCECPT",38,0)
 N MODS,SIEN,MODIEN,SCRATCH,MODSTR,MODNAME,OUTSTR
"RTN","PXCECPT",39,0)
 I $G(PXCECPT)="" S PXCECPT=IEN
"RTN","PXCECPT",40,0)
 S OUTSTR=""
"RTN","PXCECPT",41,0)
 I PXCECPT="" Q OUTSTR
"RTN","PXCECPT",42,0)
 S SIEN=0
"RTN","PXCECPT",43,0)
 F MODS=1:1 S SIEN=$O(^AUPNVCPT(PXCECPT,1,SIEN)) Q:'SIEN  D
"RTN","PXCECPT",44,0)
 . S MODIEN=$P($G(^AUPNVCPT(PXCECPT,1,SIEN,0)),"^")
"RTN","PXCECPT",45,0)
 . S $P(OUTSTR,U,MODS)=$$MODTEXT(MODIEN)
"RTN","PXCECPT",46,0)
 Q OUTSTR
"RTN","PXCECPT",47,0)
DNARRAT(PNAR) ;+Display Provider Narrative for procedure in V CPT file.
"RTN","PXCECPT",48,0)
 I PNAR="" Q ""
"RTN","PXCECPT",49,0)
 N PXCEPNAR
"RTN","PXCECPT",50,0)
 S PXCEPNAR=$P(^AUTNPOV(PNAR,0),"^")
"RTN","PXCECPT",51,0)
 I $G(VIEW)="B",$D(ENTRY)>0 D
"RTN","PXCECPT",52,0)
 . ;N DIC,DR,DA,DIQ,PXCEDIQ1
"RTN","PXCECPT",53,0)
 . ;S DIC=81
"RTN","PXCECPT",54,0)
 . ;S DR="2"
"RTN","PXCECPT",55,0)
 . ;S DA=$P(ENTRY(0),"^",1)
"RTN","PXCECPT",56,0)
 . ;S DIQ="PXCEDIQ1("
"RTN","PXCECPT",57,0)
 . ;S DIQ(0)="E"
"RTN","PXCECPT",58,0)
 . ;D EN^DIQ1
"RTN","PXCECPT",59,0)
 . ;S:PXCEDIQ1(81,DA,2,"E")=PXCEPNAR PXCEPNAR=""
"RTN","PXCECPT",60,0)
 . N CPTSTR
"RTN","PXCECPT",61,0)
 . S CPTSTR=$$CPT^ICPTCOD($P(ENTRY(0),U),$P(^AUPNVSIT(PXCEVIEN,0),U))
"RTN","PXCECPT",62,0)
 . S:$P(CPTSTR,U,3)=PXCEPNAR PXCEPNAR=""
"RTN","PXCECPT",63,0)
 Q PXCEPNAR
"RTN","PXCECPT",64,0)
 ;+
"RTN","PXCECPT",65,0)
 ;+********************************
"RTN","PXCECPT",66,0)
 ;+Special cases for edit.
"RTN","PXCECPT",67,0)
 ;+
"RTN","PXCECPT",68,0)
ECPTCODE ;+Code to edit CPT Code in V CPT file.
"RTN","PXCECPT",69,0)
 K DIRUT
"RTN","PXCECPT",70,0)
 N DIC,DA,PXCPTDT,PXDFLT
"RTN","PXCECPT",71,0)
 S PXCPTDT=+^TMP("PXK",$J,"VST",1,0,"AFTER")
"RTN","PXCECPT",72,0)
 S (X,PXDFLT)=""
"RTN","PXCECPT",73,0)
 I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))'="" D
"RTN","PXCECPT",74,0)
 . N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCECPT",75,0)
 . S PXCEINT=$P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCECPT",76,0)
 . S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCECPT",77,0)
 . S PXDFLT=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCECPT",78,0)
 S Y=$$GETCODE^PXCPTAPI(PXDFLT,PXCPTDT)
"RTN","PXCECPT",79,0)
 I Y="@" S X="@" Q
"RTN","PXCECPT",80,0)
 I Y<0 S DIRUT=1 Q
"RTN","PXCECPT",81,0)
 S PXCEMOD=$P(Y,"-",2)
"RTN","PXCECPT",82,0)
 S Y=$P(Y,"-"),X=+Y
"RTN","PXCECPT",83,0)
 I PXCEDIRB="" Q
"RTN","PXCECPT",84,0)
 I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=X Q
"RTN","PXCECPT",85,0)
 Q:$$CHGCPT()
"RTN","PXCECPT",86,0)
 G ECPTCODE
"RTN","PXCECPT",87,0)
 ;
"RTN","PXCECPT",88,0)
ECPTMOD ;+Prompt for CPT Modifier in V CPT file.
"RTN","PXCECPT",89,0)
 ;
"RTN","PXCECPT",90,0)
 ;--If there are no modifiers for CPT code do not prompt
"RTN","PXCECPT",91,0)
 Q:PXMDCNT'>0
"RTN","PXCECPT",92,0)
 N DTOUT,DUOUT,DIROUT,DIR,PXSUB,PXSEQ,PXSTR,PXARR
"RTN","PXCECPT",93,0)
 N DA,DIC,PXLINE,SUBIEN,PXFILE,PXMOD,PXI
"RTN","PXCECPT",94,0)
 S PXSUB=1,PXSTR=""
"RTN","PXCECPT",95,0)
 S DA=^TMP("PXK",$J,PXCECATS,1,"IEN")
"RTN","PXCECPT",96,0)
 S DR=1
"RTN","PXCECPT",97,0)
 S DIE="^AUPNVCPT("
"RTN","PXCECPT",98,0)
 S DIC(0)="AELMQ"
"RTN","PXCECPT",99,0)
 L +@(DIE_"DA)"):10
"RTN","PXCECPT",100,0)
 I $G(PXCEMOD)]"" D
"RTN","PXCECPT",101,0)
 . I $L(PXCEMOD,",")=1 S DR="1//"_PXCEMOD Q
"RTN","PXCECPT",102,0)
 . S PXMOD=""
"RTN","PXCECPT",103,0)
 . F PXI=1:1 S PXMOD=$P(PXCEMOD,",",PXI) Q:PXMOD=""  D
"RTN","PXCECPT",104,0)
 .. K PXERR
"RTN","PXCECPT",105,0)
 .. D VAL^DIE(9000010.181,DA,.01,"",PXMOD,.PXERR)
"RTN","PXCECPT",106,0)
 .. Q:PXERR="^"
"RTN","PXCECPT",107,0)
 .. S DR="1///^S X=PXMOD"
"RTN","PXCECPT",108,0)
 .. D ^DIE
"RTN","PXCECPT",109,0)
 . S DR=1
"RTN","PXCECPT",110,0)
 D ^DIE
"RTN","PXCECPT",111,0)
 L -@(DIE_"DA)")
"RTN","PXCECPT",112,0)
 ; SET NEWLY FILED CPT MODIFIERS INTO LOCAL ARRAY
"RTN","PXCECPT",113,0)
 K PXCEAFTR(1)
"RTN","PXCECPT",114,0)
 D GETS^DIQ(9000010.18,^TMP("PXK",$J,PXCECATS,1,"IEN"),"1*","I","PXARR")
"RTN","PXCECPT",115,0)
 S PXFILE=9000010.181
"RTN","PXCECPT",116,0)
 S PXSUB=""
"RTN","PXCECPT",117,0)
 F  S PXSUB=$O(PXARR(PXFILE,PXSUB)) Q:PXSUB=""  D
"RTN","PXCECPT",118,0)
 . S PXCEAFTR(1,$P(PXSUB,","))=PXARR(PXFILE,PXSUB,.01,"I")
"RTN","PXCECPT",119,0)
 I $D(DTOUT)!$D(Y) S (PXCEEND,PXCEQUIT)=1 Q
"RTN","PXCECPT",120,0)
 Q
"RTN","PXCECPT",121,0)
 ;
"RTN","PXCECPT",122,0)
EQUAN ;+Code to edit Quantity in V CPT file.
"RTN","PXCECPT",123,0)
 I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))'="" D
"RTN","PXCECPT",124,0)
 . N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCECPT",125,0)
 . S PXCEINT=$P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCECPT",126,0)
 . S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCECPT",127,0)
 . S DIR("B")=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCECPT",128,0)
 E  S DIR("B")=1
"RTN","PXCECPT",129,0)
 S DIR(0)=PXCEFILE_","_$P(PXCETEXT,"~",3)_"A"
"RTN","PXCECPT",130,0)
 S DIR("A")=$P(PXCETEXT,"~",4)
"RTN","PXCECPT",131,0)
 S:$P(PXCETEXT,"~",8)]"" DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCECPT",132,0)
 D ^DIR
"RTN","PXCECPT",133,0)
 K DIR,DA
"RTN","PXCECPT",134,0)
 I $D(DTOUT)!$D(DUOUT) S (PXCEEND,PXCEQUIT)=1 Q
"RTN","PXCECPT",135,0)
 I +Y<1 W !,$C(7),"Quanitity is required.",! G EQUAN
"RTN","PXCECPT",136,0)
 I +Y>1,$D(^IBE(357.69,$G(PXCEIN01))) W !,"Only one E&M allowed, quantity changed to 1.",! S Y=1 ;PX112
"RTN","PXCECPT",137,0)
 S:$P(Y,"^")="" Y=1
"RTN","PXCECPT",138,0)
 S $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=$P(Y,"^")
"RTN","PXCECPT",139,0)
 Q
"RTN","PXCECPT",140,0)
 ;+
"RTN","PXCECPT",141,0)
 ;+********************************
"RTN","PXCECPT",142,0)
 ;+Special Reusable Functionality
"RTN","PXCECPT",143,0)
DISPLY01(PXCECPT) ;
"RTN","PXCECPT",144,0)
 ;Display text for the .01 field which is a pointer to ^ICPT.
"RTN","PXCECPT",145,0)
 ;Also called with the Evaluation and Management Code from the visit
"RTN","PXCECPT",146,0)
 ;  in the parameter.
"RTN","PXCECPT",147,0)
 ;(Must have is called by ASK^PXCEVFI2 and DEL^PXCEVFI2.)
"RTN","PXCECPT",148,0)
 ;N DIC,DR,DA,DIQ,PXCEFNUM,PXCEDIQ1
"RTN","PXCECPT",149,0)
 ;S (DIC,PXCEFNUM)=81
"RTN","PXCECPT",150,0)
 ;S DR=".01;2"
"RTN","PXCECPT",151,0)
 ;S DA=+$P(PXCECPT,"^",1)
"RTN","PXCECPT",152,0)
 ;S DIQ="PXCEDIQ1("
"RTN","PXCECPT",153,0)
 ;S DIQ(0)="E"
"RTN","PXCECPT",154,0)
 ;D EN^DIQ1
"RTN","PXCECPT",155,0)
 ;Q PXCEDIQ1(PXCEFNUM,DA,.01,"E")_"     "_PXCEDIQ1(PXCEFNUM,DA,2,"E")
"RTN","PXCECPT",156,0)
 N CPTSTR
"RTN","PXCECPT",157,0)
 S CPTSTR=$$CPT^ICPTCOD($P(PXCECPT,U),$P(^AUPNVSIT(PXCEVIEN,0),U))
"RTN","PXCECPT",158,0)
 Q $P(CPTSTR,U,2)_"     "_$P(CPTSTR,U,3)
"RTN","PXCECPT",159,0)
EDMOD(MODS,CPT) ;+Edit the Modifiers for a CPT code entry.
"RTN","PXCECPT",160,0)
 N MNUM S MNUM=0 ; Modifier number.
"RTN","PXCECPT",161,0)
 N MIEN,MTEXT
"RTN","PXCECPT",162,0)
 Q
"RTN","PXCECPT",163,0)
MODNAME(MODIEN) ;+Return #.02 NAME for this CPT MODIFIER (#81.3)
"RTN","PXCECPT",164,0)
 Q
"RTN","PXCECPT",165,0)
MODTEXT(MODIEN) ;+Return string of text describing modifier.
"RTN","PXCECPT",166,0)
 ;+MODIEN = IEN in CPT MODIFIER file (#81.3).
"RTN","PXCECPT",167,0)
 ;+Returns:  MODIFIER (#.01) followed by NAME(#.02).
"RTN","PXCECPT",168,0)
 N MOD,DESC,TEXT,RVAL
"RTN","PXCECPT",169,0)
 S RVAL=$$MOD^ICPTMOD(MODIEN,"I",$P(^AUPNVSIT(PXCEVIEN,0),U))
"RTN","PXCECPT",170,0)
 S MOD=$P(RVAL,"^",2)
"RTN","PXCECPT",171,0)
 S DESC=$P(RVAL,"^",3)
"RTN","PXCECPT",172,0)
 S TEXT=MOD_"  "_DESC
"RTN","PXCECPT",173,0)
 Q TEXT
"RTN","PXCECPT",174,0)
CHGCPT() ;Verify CPT code should be modified
"RTN","PXCECPT",175,0)
 ;If response is yes remove modifiers on file for CPT code
"RTN","PXCECPT",176,0)
 N DIR,DA,X,Y,PXIEN
"RTN","PXCECPT",177,0)
 W !!,$C(7),"WARNING!  THIS WILL ALSO DELETE ANY MODIFIERS ASSOCIATED WITH CPT CODE "_PXCEDIRB
"RTN","PXCECPT",178,0)
 S DIR(0)="Y"
"RTN","PXCECPT",179,0)
 S DIR("A")="SURE YOU WANT TO CHANGE THE CPT CODE?"
"RTN","PXCECPT",180,0)
 S DIR("B")="YES"
"RTN","PXCECPT",181,0)
 D ^DIR
"RTN","PXCECPT",182,0)
 ;Delete CPT Modifiers from V CPT file for current IEN
"RTN","PXCECPT",183,0)
 I 'Y Q +Y
"RTN","PXCECPT",184,0)
 S DA(1)=PXCEFIEN
"RTN","PXCECPT",185,0)
 S DIK="^AUPNVCPT("_DA(1)_","_1_","
"RTN","PXCECPT",186,0)
 S PXIEN=""
"RTN","PXCECPT",187,0)
 F  S PXIEN=$O(PXCEAFTR(1,PXIEN)) Q:PXIEN=""  D
"RTN","PXCECPT",188,0)
 . S DA=PXIEN
"RTN","PXCECPT",189,0)
 . D ^DIK
"RTN","PXCECPT",190,0)
 Q 1
"RTN","PXCECPT",191,0)
 ;
"RTN","PXCECPT",192,0)
NEWCODE ;
"RTN","PXCECPT",193,0)
 K DD,DO
"RTN","PXCECPT",194,0)
 N DIC,X,Y
"RTN","PXCECPT",195,0)
 S DIC="^AUPNVCPT("
"RTN","PXCECPT",196,0)
 S DIC(0)=""
"RTN","PXCECPT",197,0)
 S DIC("DR")=".02////^S X=$P(PXCEAFTR(0),""^"",2);"
"RTN","PXCECPT",198,0)
 S DIC("DR")=DIC("DR")_".03////^S X=$P(PXCEAFTR(0),""^"",3);"
"RTN","PXCECPT",199,0)
 S X=PXCEIN01
"RTN","PXCECPT",200,0)
 D FILE^DICN
"RTN","PXCECPT",201,0)
 S PXCEFIEN=+Y
"RTN","PXCECPT",202,0)
 Q
"RTN","PXCEHELP")
0^23^B16233701
"RTN","PXCEHELP",1,0)
PXCEHELP ;ISL/dee - Used for help on input ; 5/7/03 3:38pm
"RTN","PXCEHELP",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**5,121**;Aug 12, 1996
"RTN","PXCEHELP",3,0)
 ;;
"RTN","PXCEHELP",4,0)
 Q
"RTN","PXCEHELP",5,0)
 ;
"RTN","PXCEHELP",6,0)
HELP ;
"RTN","PXCEHELP",7,0)
 D:$G(PXCEHLST)'=PXCECATS INTRFACE(PXCEHLOC,PXCECATS,"PXCEHLST")
"RTN","PXCEHELP",8,0)
 Q:$G(PXCEHLST)'=PXCECATS
"RTN","PXCEHELP",9,0)
 N PXCEINDX,PXCECODE,Y
"RTN","PXCEHELP",10,0)
 S Y=1
"RTN","PXCEHELP",11,0)
 S PXCECODE=((PXCEHLST="POV")!(PXCEHLST="CPT"))
"RTN","PXCEHELP",12,0)
 W !
"RTN","PXCEHELP",13,0)
 S PXCEINDX=0
"RTN","PXCEHELP",14,0)
 F  S PXCEINDX=$O(PXCEHLST(PXCEINDX)) Q:'PXCEINDX  D  Q:'Y
"RTN","PXCEHELP",15,0)
 . I $P(PXCEHLST(PXCEINDX),"^",1)="" W !,?5,$P(PXCEHLST(PXCEINDX),"^",2)
"RTN","PXCEHELP",16,0)
 . E  I PXCECODE W !,$P(PXCEHLST(PXCEINDX),"^",1),?10,$P(PXCEHLST(PXCEINDX),"^",2)
"RTN","PXCEHELP",17,0)
 . E  W !,?10,$P(PXCEHLST(PXCEINDX),"^",2)
"RTN","PXCEHELP",18,0)
 . I '(PXCEINDX#(IOSL-5)) D PAUSE
"RTN","PXCEHELP",19,0)
 I Y,(PXCEINDX#(IOSL-5)) D PAUSE
"RTN","PXCEHELP",20,0)
 W !
"RTN","PXCEHELP",21,0)
 Q
"RTN","PXCEHELP",22,0)
 ;
"RTN","PXCEHELP",23,0)
INTRFACE(PXCEHLOC,PXCECATS,PXCELIST) ;
"RTN","PXCEHELP",24,0)
 ;Calls the AICS routine to get the selection list for one
"RTN","PXCEHELP",25,0)
 ; package interface file.
"RTN","PXCEHELP",26,0)
 K @PXCELIST
"RTN","PXCEHELP",27,0)
 N PXCEINTF,PXCEDT
"RTN","PXCEHELP",28,0)
 S PXCEINTF=$P($T(INTRFACE^@("PXCE"_PXCECATS)),";;",2)
"RTN","PXCEHELP",29,0)
 Q:PXCEINTF=""
"RTN","PXCEHELP",30,0)
 S PXCEDT=+^TMP("PXK",$J,"VST",1,0,"AFTER")
"RTN","PXCEHELP",31,0)
 D GETLST^IBDF18A(PXCEHLOC,PXCEINTF,PXCELIST,,,,PXCEDT)
"RTN","PXCEHELP",32,0)
 Q:'$G(@PXCELIST@(0))
"RTN","PXCEHELP",33,0)
 S @PXCELIST=PXCECATS
"RTN","PXCEHELP",34,0)
 Q
"RTN","PXCEHELP",35,0)
 ;
"RTN","PXCEHELP",36,0)
NEWENC ;Displays warning before adding a new historical encounter.
"RTN","PXCEHELP",37,0)
 W !!,"This will create a historical encounter for documenting a clinical encounter"
"RTN","PXCEHELP",38,0)
 W !,"only and will not be used by Scheduling, Billing or Workload credit."
"RTN","PXCEHELP",39,0)
 D PAUSE
"RTN","PXCEHELP",40,0)
 Q
"RTN","PXCEHELP",41,0)
 ;
"RTN","PXCEHELP",42,0)
PAUSE ;
"RTN","PXCEHELP",43,0)
 N DIR
"RTN","PXCEHELP",44,0)
 W !
"RTN","PXCEHELP",45,0)
 S DIR(0)="E"
"RTN","PXCEHELP",46,0)
 D ^DIR
"RTN","PXCEHELP",47,0)
 W !
"RTN","PXCEHELP",48,0)
 Q
"RTN","PXCEHELP",49,0)
 ;
"RTN","PXCEHELP",50,0)
WAIT ;
"RTN","PXCEHELP",51,0)
 N DIR
"RTN","PXCEHELP",52,0)
 W !
"RTN","PXCEHELP",53,0)
 S DIR("A")="Enter RETURN to continue "
"RTN","PXCEHELP",54,0)
 S DIR(0)="EA"
"RTN","PXCEHELP",55,0)
 D ^DIR
"RTN","PXCEHELP",56,0)
 W !
"RTN","PXCEHELP",57,0)
 Q
"RTN","PXCEHELP",58,0)
 ;
"RTN","PXCEHELP",59,0)
 ;from TIUHELP   ;ISL/JER - On-line help library ;
"RTN","PXCEHELP",60,0)
 ;;pre1.0;Text Integration Utilities;;Jul 24, 1995
"RTN","PXCEHELP",61,0)
PROTOCOL ; Help for protocols
"RTN","PXCEHELP",62,0)
 N DIRUT,DTOUT,DUOUT,TIUX,ORU,ORUPRMT,VALMDDF,VALMPGE S TIUX=X
"RTN","PXCEHELP",63,0)
 D FULL^VALM1
"RTN","PXCEHELP",64,0)
 I TIUX="?" D  G PROTX
"RTN","PXCEHELP",65,0)
 . D DISP^XQORM1 W !!,"Enter selection by typing the name, or abbreviation.",!,"Enter '??' for additional details.",!
"RTN","PXCEHELP",66,0)
 . I TIUX="?" W:$$STOP ""
"RTN","PXCEHELP",67,0)
 I TIUX="??" D MENU(XQORNOD) I $D(DIROUT) S (XQORQUIT,XQORPOP)=1 Q
"RTN","PXCEHELP",68,0)
PROTX S VALMBCK="R"
"RTN","PXCEHELP",69,0)
 Q
"RTN","PXCEHELP",70,0)
MENU(XQORNOD) ; Unwind protocol menus for help
"RTN","PXCEHELP",71,0)
 N TIUSEQ,TIUI,TIUJ D CLEAR^VALM1
"RTN","PXCEHELP",72,0)
 W:$$CONTINUE "Valid selections are:",!
"RTN","PXCEHELP",73,0)
 S TIUI=0 F  S TIUI=$O(^ORD(101,+XQORNOD,10,TIUI)) Q:+TIUI'>0  D
"RTN","PXCEHELP",74,0)
 . S TIUJ=+$P($G(^ORD(101,+XQORNOD,10,TIUI,0)),U,3) S:$D(TIUSEQ(TIUJ)) TIUJ=TIUJ+.1
"RTN","PXCEHELP",75,0)
 . S TIUSEQ(TIUJ)=+$P(^ORD(101,+XQORNOD,10,TIUI,0),U)
"RTN","PXCEHELP",76,0)
 S TIUI=0 F  S TIUI=$O(TIUSEQ(TIUI)) Q:+TIUI'>0!$D(DIRUT)  D
"RTN","PXCEHELP",77,0)
 . I $D(^ORD(101,+TIUSEQ(TIUI),0)) D ITEM(+TIUSEQ(TIUI),1)
"RTN","PXCEHELP",78,0)
 Q
"RTN","PXCEHELP",79,0)
ITEM(XQORNOD,TAB) ; Show descriptions of items
"RTN","PXCEHELP",80,0)
 N TIUI
"RTN","PXCEHELP",81,0)
 Q:$P($G(^ORD(101,+XQORNOD,0)),U,2)']""
"RTN","PXCEHELP",82,0)
 W:$$CONTINUE ?+$G(TAB),$G(IOINHI),$$UPPER($P($G(^ORD(101,+XQORNOD,0)),U,2)),$G(IOINORM),!
"RTN","PXCEHELP",83,0)
 I $D(DIRUT) Q
"RTN","PXCEHELP",84,0)
 S TIUI=0 F  S TIUI=$O(^ORD(101,+XQORNOD,1,TIUI)) Q:+TIUI'>0!$D(DIRUT)  D
"RTN","PXCEHELP",85,0)
 . W:$$CONTINUE ?(TAB+2),$G(^ORD(101,+XQORNOD,1,TIUI,0)),! Q:$D(DIRUT)
"RTN","PXCEHELP",86,0)
 ;S TIUI=0 F  S TIUI=$O(^ORD(101,+XQORNOD,10,TIUI)) Q:+TIUI'>0  D
"RTN","PXCEHELP",87,0)
 ;. D ITEM(+$G(^ORD(101,+XQORNOD,10,+TIUI,0))_";ORD(101,",3)
"RTN","PXCEHELP",88,0)
 Q
"RTN","PXCEHELP",89,0)
 ;
"RTN","PXCEHELP",90,0)
CONTINUE() ; Pagination control
"RTN","PXCEHELP",91,0)
 N Y
"RTN","PXCEHELP",92,0)
 I $Y<(IOSL-2) S Y=1 G CONTX
"RTN","PXCEHELP",93,0)
 S Y=$$STOP("",1) W:+Y @IOF,!
"RTN","PXCEHELP",94,0)
CONTX Q Y
"RTN","PXCEHELP",95,0)
 ;
"RTN","PXCEHELP",96,0)
STOP(PROMPT,SCROLL) ; Call DIR at bottom of screen
"RTN","PXCEHELP",97,0)
 N DIR,DA,X,Y
"RTN","PXCEHELP",98,0)
 I $E(IOST)'="C" S Y="" G STOPX
"RTN","PXCEHELP",99,0)
 I +$G(SCROLL),(IOSL>($Y+5)) F  W ! Q:IOSL<($Y+6)
"RTN","PXCEHELP",100,0)
 S DIR(0)="FO^1:1",DIR("A")=$S($G(PROMPT)]"":PROMPT,1:"Press RETURN to continue or '^' to exit")
"RTN","PXCEHELP",101,0)
 S DIR("?")="Enter '^' to quit present action or '^^' to quit to menu"
"RTN","PXCEHELP",102,0)
 D ^DIR I $D(DIRUT),(Y="") K DIRUT
"RTN","PXCEHELP",103,0)
 S Y=$S(Y="^":0,Y="^^":0,$D(DTOUT):"",Y="":1,1:1_U_Y)
"RTN","PXCEHELP",104,0)
STOPX Q Y
"RTN","PXCEHELP",105,0)
 ;
"RTN","PXCEHELP",106,0)
UPPER(X) ; Convert lower case X to UPPER CASE
"RTN","PXCEHELP",107,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","PXCEHELP",108,0)
 ;
"RTN","PXCEPOV")
0^24^B6885227
"RTN","PXCEPOV",1,0)
PXCEPOV ;ISL/dee - Used to edit and display V POV ;3/19/97
"RTN","PXCEPOV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**27,121**;Aug 12, 1996
"RTN","PXCEPOV",3,0)
 ;; ;
"RTN","PXCEPOV",4,0)
 Q
"RTN","PXCEPOV",5,0)
 ;
"RTN","PXCEPOV",6,0)
 ;Line with the line label "FORMAT"
"RTN","PXCEPOV",7,0)
 ;;Long name~File Number~Node Subscripts~Allow Duplicate entries (1=yes, 0=no)~File global name
"RTN","PXCEPOV",8,0)
 ;     1         2             3                   4                                   5
"RTN","PXCEPOV",9,0)
 ;
"RTN","PXCEPOV",10,0)
 ;Followning lines:
"RTN","PXCEPOV",11,0)
 ;;Node~Piece~,Field Number~Edit Label~Display Label~Display Routine~Edit Routine~Help Text for DIR(?)~Set of PXCEKEYS that can Edit~D if Detail Display Only~
"RTN","PXCEPOV",12,0)
 ;  1  ~  2  ~      3      ~     4    ~        5    ~        6      ~     7      ~       8            ~          9                  ~       10
"RTN","PXCEPOV",13,0)
 ;The Display & Edit routines are for special caces.
"RTN","PXCEPOV",14,0)
 ;  (The .01 field cannot have a special edit.)
"RTN","PXCEPOV",15,0)
 ;
"RTN","PXCEPOV",16,0)
FORMAT ;;Diagnosis~9000010.07~0,12,800,802,811,812~1~^AUPNVPOV
"RTN","PXCEPOV",17,0)
 ;;0~1~.01~ICD9 Code or Diagnosis:  ~ICD9 Code or Diagnosis:  ~$$DISPLY01^PXCEPOV~~^D HELP^PXCEHELP~~B
"RTN","PXCEPOV",18,0)
 ;;0~4~.04~Provider Narrative:  ~Provider Narrative:  ~$$DNARRAT^PXCEPOV1~ENARRAT^PXCEPOV1(1,1,1,80,10,3)~~~B
"RTN","PXCEPOV",19,0)
 ;;0~12~.12~Is this Diagnosis Primary:  ~Primary/Secondary Diagnosis:  ~$$DPRIMSEC^PXCEPOV1~EPRIMSEC^PXCEPRV~~~B
"RTN","PXCEPOV",20,0)
 ;;0~6~.06~Modifier:  ~Modifier:  ~~~~~D
"RTN","PXCEPOV",21,0)
 ;;0~13~.13~Injury Date and (optional) Time~Date of Injury:  ~~EINJURY^PXCEPOV1~~~D
"RTN","PXCEPOV",22,0)
 ;;12~4~1204~Encounter Provider:  ~Encounter Provider:  ~~EPROV12^PXCEPRV~~~D
"RTN","PXCEPOV",23,0)
 ;;802~1~80201~Provider Narrative Category:  ~Provider Narrative Category:  ~$$DNARRAT^PXCEPOV1~ENARRAT^PXCEPOV1(0,2,0,80,5)~~C~D
"RTN","PXCEPOV",24,0)
 ;;811~1~81101~Comments:  ~Comments:  ~~~~~D
"RTN","PXCEPOV",25,0)
 ;;
"RTN","PXCEPOV",26,0)
 ;
"RTN","PXCEPOV",27,0)
 ;The interface for AICS to get list on form for help.
"RTN","PXCEPOV",28,0)
INTRFACE ;;DG SELECT ICD-9 DIAGNOSIS CODES
"RTN","PXCEPOV",29,0)
 ;
"RTN","PXCEPOV",30,0)
 ;********************************
"RTN","PXCEPOV",31,0)
 ;Special cases for display.
"RTN","PXCEPOV",32,0)
 ;
"RTN","PXCEPOV",33,0)
 ;********************************
"RTN","PXCEPOV",34,0)
 ;Display text for the .01 field which is a pointer to ^ICD9.
"RTN","PXCEPOV",35,0)
 ;(Must have is called by ASK^PXCEVFI2 and DEL^PXCEVFI2.)
"RTN","PXCEPOV",36,0)
DISPLY01(PXCEPOV) ;
"RTN","PXCEPOV",37,0)
 ;N DIC,DR,DA,DIQ,PXCEDIQ1
"RTN","PXCEPOV",38,0)
 ;S DIC=80
"RTN","PXCEPOV",39,0)
 ;S DR=".01;3"
"RTN","PXCEPOV",40,0)
 ;S DA=$P(PXCEPOV,"^",1)
"RTN","PXCEPOV",41,0)
 ;S DIQ="PXCEDIQ1("
"RTN","PXCEPOV",42,0)
 ;S DIQ(0)="E"
"RTN","PXCEPOV",43,0)
 ;D EN^DIQ1
"RTN","PXCEPOV",44,0)
 ;Q PXCEDIQ1(80,DA,.01,"E")_"     "_PXCEDIQ1(80,DA,3,"E")
"RTN","PXCEPOV",45,0)
 ;
"RTN","PXCEPOV",46,0)
 N ICDSTR
"RTN","PXCEPOV",47,0)
 S ICDSTR=$$ICDDX^ICDCODE($P(PXCEPOV,"^"),$P(^AUPNVSIT(PXCEVIEN,0),"^"))
"RTN","PXCEPOV",48,0)
 Q $P(ICDSTR,"^",2)_"     "_$P(ICDSTR,"^",4) ;code and desc
"RTN","PXCEPOV",49,0)
 ;
"RTN","PXKMOD")
0^19^B3499026
"RTN","PXKMOD",1,0)
PXKMOD ;ISA/KWP -MAIN ROUTINE FOR SAVING MODIFIERS ;9/11/98
"RTN","PXKMOD",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**73,121**;Aug 12, 1996
"RTN","PXKMOD",3,0)
SUBSCR ;
"RTN","PXKMOD",4,0)
AFTER N PXKMOD
"RTN","PXKMOD",5,0)
 S PXKMOD=""
"RTN","PXKMOD",6,0)
 F  S PXKMOD=$O(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,PXKMOD)) Q:'PXKMOD  D
"RTN","PXKMOD",7,0)
 . S PXKAFT(1,PXKMOD)=$G(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,PXKMOD,"AFTER"))
"RTN","PXKMOD",8,0)
BEFORE S PXKMOD=""
"RTN","PXKMOD",9,0)
 F  S PXKMOD=$O(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,PXKMOD)) Q:'PXKMOD  D
"RTN","PXKMOD",10,0)
 . S PXKBEF(1,PXKMOD)=$G(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,PXKMOD,"BEFORE"))
"RTN","PXKMOD",11,0)
 Q
"RTN","PXKMOD",12,0)
UPD ;
"RTN","PXKMOD",13,0)
 N PXKMOD,PXRETVAL,PXKMIEN
"RTN","PXKMOD",14,0)
 S PXKMOD=""
"RTN","PXKMOD",15,0)
 F  S PXKMOD=$O(PXKAV(1,PXKMOD)) Q:PXKMOD=""  D
"RTN","PXKMOD",16,0)
 .S PXKMIEN=PXKAV(1,PXKMOD)
"RTN","PXKMOD",17,0)
 .L +@PXKLR:10
"RTN","PXKMOD",18,0)
 .S PXRETVAL=$$ADD(PXKPIEN,PXKMIEN)
"RTN","PXKMOD",19,0)
 .L -@PXKLR
"RTN","PXKMOD",20,0)
 Q
"RTN","PXKMOD",21,0)
LOOP N PXKMOD
"RTN","PXKMOD",22,0)
 S PXKMOD=""
"RTN","PXKMOD",23,0)
 F  S PXKMOD=$O(PXKAFT(1,PXKMOD)) Q:PXKMOD=""  D
"RTN","PXKMOD",24,0)
 . Q:PXKAFT(1,PXKMOD)=""
"RTN","PXKMOD",25,0)
 . S PXKAV(1,PXKMOD)=PXKAFT(1,PXKMOD)
"RTN","PXKMOD",26,0)
 S PXKMOD=""
"RTN","PXKMOD",27,0)
 F  S PXKMOD=$O(PXKBEF(1,PXKMOD)) Q:PXKMOD=""  D
"RTN","PXKMOD",28,0)
 . Q:PXKBEF(1,PXKMOD)=""
"RTN","PXKMOD",29,0)
 . S PXKBV(1,PXKMOD)=PXKBEF(1,PXKMOD)
"RTN","PXKMOD",30,0)
 Q
"RTN","PXKMOD",31,0)
DELETE(IEN) ;
"RTN","PXKMOD",32,0)
 N DIE,DR,SIEN,DA
"RTN","PXKMOD",33,0)
 S DIE="^AUPNVCPT("_IEN_",1,",DR=".01////@",SIEN=0
"RTN","PXKMOD",34,0)
 F  S SIEN=$O(^AUPNVCPT(IEN,1,SIEN)) Q:SIEN=""  S DA=SIEN,DA(1)=IEN D ^DIE
"RTN","PXKMOD",35,0)
 Q 1
"RTN","PXKMOD",36,0)
ADD(IEN,PXKMOD) ;
"RTN","PXKMOD",37,0)
 N DIC,DA,X
"RTN","PXKMOD",38,0)
 S DIC="^AUPNVCPT("_IEN_",1,"
"RTN","PXKMOD",39,0)
 S DIC("P")=$P($G(^DD(+$P($G(^AUPNVCPT(0)),"^",2),1,0)),"^",2)
"RTN","PXKMOD",40,0)
 S DA(1)=IEN
"RTN","PXKMOD",41,0)
 S DIC(0)="L"
"RTN","PXKMOD",42,0)
 ;S PXKMOD=$P($$MOD^ICPTMOD(PXKMOD,"I"),"^")
"RTN","PXKMOD",43,0)
 S PXKMOD=$P($$MOD^ICPTMOD(PXKMOD,"I",+^TMP("PXK",$J,"VST",1,0,"AFTER")),"^")
"RTN","PXKMOD",44,0)
 I PXKMOD<0 Q 0
"RTN","PXKMOD",45,0)
 S X=PXKMOD
"RTN","PXKMOD",46,0)
 D FILE^DICN
"RTN","PXKMOD",47,0)
 Q 1
"RTN","PXQUTL")
0^20^B45331178
"RTN","PXQUTL",1,0)
PXQUTL ;ISL/JVS - FUNCTION CALLS FOR DEBUGGING UTILITIES;8/29/96  10:34 ;3/26/97  09:25
"RTN","PXQUTL",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**4,14,29,121**;Aug 12, 1996
"RTN","PXQUTL",3,0)
 ;
"RTN","PXQUTL",4,0)
LCFLE() ;--LOCATION FILES
"RTN","PXQUTL",5,0)
 N LOCCNT,IHSCNT
"RTN","PXQUTL",6,0)
 ;--COUNT FROM LOCATION FILE 4
"RTN","PXQUTL",7,0)
 S LOCCNT=$P($G(^DIC(4,0)),"^",3)
"RTN","PXQUTL",8,0)
 ;--COUNT FROM IHS LOCATION FILE 9999999.06
"RTN","PXQUTL",9,0)
 S IHSCNT=$P($G(^AUTTLOC(0)),"^",3)
"RTN","PXQUTL",10,0)
 Q LOCCNT_"^"_IHSCNT
"RTN","PXQUTL",11,0)
 ;
"RTN","PXQUTL",12,0)
PTFLE() ;--PATIENT FILES
"RTN","PXQUTL",13,0)
 N DPTCNT,IHSCNT
"RTN","PXQUTL",14,0)
 ;--COUNT FROM DPT FILE 2
"RTN","PXQUTL",15,0)
 S DPTCNT=$P($G(^DPT(0)),"^",3)
"RTN","PXQUTL",16,0)
 ;--COUNT FORM AUPNPAT FILE 9000010
"RTN","PXQUTL",17,0)
 S IHSCNT=$P($G(^AUPNPAT(0)),"^",3)
"RTN","PXQUTL",18,0)
 Q DPTCNT_"^"_IHSCNT
"RTN","PXQUTL",19,0)
 ;
"RTN","PXQUTL",20,0)
RE(ENTRY) ;--RECORD ENTRY TO BE PRINTED
"RTN","PXQUTL",21,0)
 Q:$G(ENTRY)="" ""
"RTN","PXQUTL",22,0)
 I $L(ENTRY)>80 S ENTRY=$E(ENTRY,1,78)_""""
"RTN","PXQUTL",23,0)
 S PXQRECI=PXQRECI+1
"RTN","PXQUTL",24,0)
 S ^TMP("PXQRECORD",$J,PXQRECI,ENTRY)=""
"RTN","PXQUTL",25,0)
 Q ""
"RTN","PXQUTL",26,0)
 ;
"RTN","PXQUTL",27,0)
READ ;--READ
"RTN","PXQUTL",28,0)
 N VAR,I,ANS,DX,DY
"RTN","PXQUTL",29,0)
 W !,"**************************************************************"
"RTN","PXQUTL",30,0)
 S (DX,DY)=0 X ^%ZOSF("XY")
"RTN","PXQUTL",31,0)
 S I=0
"RTN","PXQUTL",32,0)
 I '$G(CNT) S CNT=0
"RTN","PXQUTL",33,0)
 F  S I=$O(^TMP("PXQRECORD",$J,I)) Q:I=""  D
"RTN","PXQUTL",34,0)
 .S VAR=$O(^TMP("PXQRECORD",$J,I,0))
"RTN","PXQUTL",35,0)
 .;--NEW 3/25/97
"RTN","PXQUTL",36,0)
 .I VAR["^" S VAR=$TR(VAR,"?!","11")
"RTN","PXQUTL",37,0)
 .;--END OF NEW
"RTN","PXQUTL",38,0)
 .I VAR'["?"&(VAR'["!") W !,$O(^TMP("PXQRECORD",$J,I,0))
"RTN","PXQUTL",39,0)
 .I VAR["?"!(VAR["!") W !,@$O(^TMP("PXQRECORD",$J,I,0))
"RTN","PXQUTL",40,0)
 .S CNT=CNT+1
"RTN","PXQUTL",41,0)
 .;I $Y>(IOSL-2) D
"RTN","PXQUTL",42,0)
 .I CNT>(IOSL-4) S CNT=0 D
"RTN","PXQUTL",43,0)
 ..I IOST["C-" R !,"ENTER to continue",ANS:DTIME
"RTN","PXQUTL",44,0)
 ..I $G(ANS)="^" S I=9999999999999
"RTN","PXQUTL",45,0)
 ..S (DX,DY)=0 X ^%ZOSF("XY")
"RTN","PXQUTL",46,0)
 K ^TMP("PXQRECORD",$J),PXQPRM
"RTN","PXQUTL",47,0)
 I IOST["C-",$G(ANS)'="^" R !,"      END OF DISPLAY",ANS:DTIME
"RTN","PXQUTL",48,0)
 ;I IOST["C-",$G(ANS)'="^" W !,"      END OF DISPLAY"
"RTN","PXQUTL",49,0)
 Q
"RTN","PXQUTL",50,0)
ASKPAT() ;Ask user for a patient
"RTN","PXQUTL",51,0)
 ;DIC on file 9000001
"RTN","PXQUTL",52,0)
 N DIR,DIC,Y,X,DA
"RTN","PXQUTL",53,0)
 S DIR(0)="PO^9000001:AEMQ"
"RTN","PXQUTL",54,0)
 S DIR("A")="Patient Name"
"RTN","PXQUTL",55,0)
 D ^DIR
"RTN","PXQUTL",56,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXQUTL",57,0)
 ;
"RTN","PXQUTL",58,0)
 ;
"RTN","PXQUTL",59,0)
ASKNUM() ;Ask user for a VISIT
"RTN","PXQUTL",60,0)
 ;DIC on file 9000010
"RTN","PXQUTL",61,0)
 N DIR,DIC,Y,X,DA
"RTN","PXQUTL",62,0)
 I $D(^DISV(DUZ,"PXQREP3")) S DIR("B")=$G(^DISV(DUZ,"PXQREP3"))
"RTN","PXQUTL",63,0)
 S DIR(0)="P^9000010:AEMQ"
"RTN","PXQUTL",64,0)
 S DIR("A")="Enter VISIT (UNIQUE ID or `1239)"
"RTN","PXQUTL",65,0)
 D ^DIR
"RTN","PXQUTL",66,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXQUTL",67,0)
 ;
"RTN","PXQUTL",68,0)
ASKNUM1() ;Ask user for a VISIT
"RTN","PXQUTL",69,0)
 ;DIC on file 9000010
"RTN","PXQUTL",70,0)
 N DIC,Y,X,DA
"RTN","PXQUTL",71,0)
 I $D(^DISV(DUZ,"PXQREP3")) S DIR("B")=$G(^DISV(DUZ,"PXQREP3"))
"RTN","PXQUTL",72,0)
 S DIR(0)="P^9000010:AEMQ"
"RTN","PXQUTL",73,0)
 S DIR("A")="Enter VISIT (UNIQUE ID or `1239)"
"RTN","PXQUTL",74,0)
 D ^DIR
"RTN","PXQUTL",75,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXQUTL",76,0)
 ;
"RTN","PXQUTL",77,0)
ASKENC() ;Ask user for a ENCOUNTER
"RTN","PXQUTL",78,0)
 ;DIC on file 409.68
"RTN","PXQUTL",79,0)
 N DIR,DIC,Y,X,DA
"RTN","PXQUTL",80,0)
 S DIR(0)="P^409.68:AEMQ"
"RTN","PXQUTL",81,0)
 S DIR("A")="Enter ENCOUNTER (`2344)"
"RTN","PXQUTL",82,0)
 D ^DIR
"RTN","PXQUTL",83,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXQUTL",84,0)
 ;
"RTN","PXQUTL",85,0)
 ;
"RTN","PXQUTL",86,0)
SOR(IEN) ;--SOURCE IF SELECTED FROM MENU
"RTN","PXQUTL",87,0)
 Q:'$G(IEN) ""
"RTN","PXQUTL",88,0)
 W $$RE^PXQUTL("!")
"RTN","PXQUTL",89,0)
 W $$RE^PXQUTL("----------------VISIT "_IEN_"---SOURCES-------------")
"RTN","PXQUTL",90,0)
 ;
"RTN","PXQUTL",91,0)
 ;
"RTN","PXQUTL",92,0)
 ;
"RTN","PXQUTL",93,0)
 S DATEC=$P($G(^AUPNVSIT(IEN,0)),"^",2) D
"RTN","PXQUTL",94,0)
 .S Y=DATEC D DD^%DT S DATEC=Y
"RTN","PXQUTL",95,0)
 W $$RE^PXQUTL("?5,""CREATED :  ""_DATEC")
"RTN","PXQUTL",96,0)
 ;
"RTN","PXQUTL",97,0)
 ;
"RTN","PXQUTL",98,0)
 S DATEE=$P($G(^AUPNVSIT(IEN,0)),"^",13) D
"RTN","PXQUTL",99,0)
 .S Y=DATEE D DD^%DT S DATEE=Y
"RTN","PXQUTL",100,0)
 W $$RE^PXQUTL("?5,""EDITED  :  ""_DATEE")
"RTN","PXQUTL",101,0)
 ;
"RTN","PXQUTL",102,0)
 ;
"RTN","PXQUTL",103,0)
 S USER=$S(+$P($G(^AUPNVSIT(IEN,0)),"^",23)>0:$P(^VA(200,+$P($G(^AUPNVSIT(IEN,0)),"^",23),0),"^",1),1:"")
"RTN","PXQUTL",104,0)
 W $$RE^PXQUTL("?5,""USER    :  ""_USER")
"RTN","PXQUTL",105,0)
 ;
"RTN","PXQUTL",106,0)
 ;
"RTN","PXQUTL",107,0)
 I $D(^DIC(19,+$P($G(^AUPNVSIT(IEN,0)),"^",24),0)) D
"RTN","PXQUTL",108,0)
 .S OPTION=$S(+$P($G(^AUPNVSIT(IEN,0)),"^",24)>0:$P(^DIC(19,+$P($G(^AUPNVSIT(IEN,0)),"^",24),0),"^",2),1:"")
"RTN","PXQUTL",109,0)
 .W $$RE^PXQUTL("?5,""OPTION  :  ""_OPTION")
"RTN","PXQUTL",110,0)
 ;
"RTN","PXQUTL",111,0)
 I $D(^ORD(101,+$P($G(^AUPNVSIT(IEN,0)),"^",25),0)) D
"RTN","PXQUTL",112,0)
 .S PROTOCOL=$S(+$P($G(^AUPNVSIT(IEN,0)),"^",25)>0:$P(^ORD(101,+$P($G(^AUPNVSIT(IEN,0)),"^",25),0),"^",2),1:"")
"RTN","PXQUTL",113,0)
 .W $$RE^PXQUTL("?5,""PROTOCOL:  ""_PROTOCOL")
"RTN","PXQUTL",114,0)
 ;
"RTN","PXQUTL",115,0)
 ;
"RTN","PXQUTL",116,0)
 I $D(^DIC(9.4,+$P($G(^AUPNVSIT(IEN,812)),"^",2),0)) D
"RTN","PXQUTL",117,0)
 .S PACKAGE=$S(+$P($G(^AUPNVSIT(IEN,812)),"^",2)>0:$P(^DIC(9.4,+$P($G(^AUPNVSIT(IEN,812)),"^",2),0),"^",1),1:"")
"RTN","PXQUTL",118,0)
 .W $$RE^PXQUTL("?5,""PACKAGE :  ""_PACKAGE")
"RTN","PXQUTL",119,0)
 ;
"RTN","PXQUTL",120,0)
 ;
"RTN","PXQUTL",121,0)
 I $P($G(^AUPNVSIT(IEN,812)),"^",3) D
"RTN","PXQUTL",122,0)
 .I $D(^PX(839.7,$P($G(^AUPNVSIT(IEN,812)),"^",3),0)) D
"RTN","PXQUTL",123,0)
 ..S SOURCE=$S(+$P($G(^AUPNVSIT(IEN,812)),"^",3)>0:$P(^PX(839.7,+$P($G(^AUPNVSIT(IEN,812)),"^",3),0),"^",1),1:"")
"RTN","PXQUTL",124,0)
 ..W $$RE^PXQUTL("?5,""SOURCE  :  ""_SOURCE")
"RTN","PXQUTL",125,0)
 ;
"RTN","PXQUTL",126,0)
 W $$RE^PXQUTL("______________________________________________________")
"RTN","PXQUTL",127,0)
 Q ""
"RTN","PXQUTL",128,0)
 ;
"RTN","PXQUTL",129,0)
SDV ;--IF AN APPOINTMENT ON THAT DAY
"RTN","PXQUTL",130,0)
 N JUNK,PATIENT,ENTRY,CNT,CS,DAY,DAY2,ERR,POINT,STOP
"RTN","PXQUTL",131,0)
 N PXC,PXCC,PXCCC,PXCCCC,ICPTSTR
"RTN","PXQUTL",132,0)
 S (PXC,PXCC,PXCCC,PXCCCC,ICPTSTR)=""
"RTN","PXQUTL",133,0)
 I $G(BROKEN),'$G(DFN),'$G(PATIENT),'$G(DATE) Q
"RTN","PXQUTL",134,0)
 I $G(DFN) S PATIENT=DFN
"RTN","PXQUTL",135,0)
 I '$G(DFN) S (PATIENT,DFN)=$P(^AUPNVSIT(IEN,0),"^",5)
"RTN","PXQUTL",136,0)
 Q:'$G(PATIENT)
"RTN","PXQUTL",137,0)
 I '$G(BROKEN) S DATE=$P(^AUPNVSIT(IEN,0),"^",1)
"RTN","PXQUTL",138,0)
 S CNT=0
"RTN","PXQUTL",139,0)
 S DAY=$P(DATE,".",1)
"RTN","PXQUTL",140,0)
 F  S DAY=$O(^SDV("C",PATIENT,DAY)) Q:DAY'[$P(DATE,".",1)  S CNT=CNT+1 D
"RTN","PXQUTL",141,0)
 .W $$RE^PXQUTL("!")
"RTN","PXQUTL",142,0)
 .W !
"RTN","PXQUTL",143,0)
 .S REF="^SDV(DAY)"
"RTN","PXQUTL",144,0)
 .F  S REF=$Q(@REF) Q:REF'[DAY  S DAY2=$P($P(REF,"(",2),",") I '$G(ERR),$P($G(^SDV(DAY2,0)),"^",2)=PATIENT,REF'["""CS"",""B""," S ENTRY=REF_" = "_@REF W $$RE^PXQUTL(ENTRY) I REF["""PR""" D CPT2
"RTN","PXQUTL",145,0)
 .;---
"RTN","PXQUTL",146,0)
 .W $$RE^PXQUTL(" ")
"RTN","PXQUTL",147,0)
 .S CS=0 F  S CS=$O(^SDV(DAY2,"CS",CS)) Q:CS'>0  D
"RTN","PXQUTL",148,0)
 ..Q:$P($G(^SDV(DAY2,0)),"^",2)'=PATIENT
"RTN","PXQUTL",149,0)
 ..S POINT=$P($G(^SDV(DAY2,"CS",CS,0)),"^",1)
"RTN","PXQUTL",150,0)
 ..S STOP=$G(^DIC(40.7,POINT,0))
"RTN","PXQUTL",151,0)
 ..W $$RE^PXQUTL("STOP CODE "_POINT_" = "_STOP)
"RTN","PXQUTL",152,0)
 .S PXC=0 F  S PXC=$O(PXQSDV(PXC)) Q:PXC=""  Q:'$D(PXQSDV)  D
"RTN","PXQUTL",153,0)
 ..S PXCC=$O(PXQSDV(PXC,0))
"RTN","PXQUTL",154,0)
 ..;S PXCCC=$E($P($G(^ICPT(PXC,0)),"^",2),1,30)
"RTN","PXQUTL",155,0)
 ..;S PXCCCC=$P($G(^ICPT(PXC,0)),"^",1)
"RTN","PXQUTL",156,0)
 ..S ICPTSTR=$$CPT^ICPTCOD(PXC,DAY)
"RTN","PXQUTL",157,0)
 ..S PXCCC=$E($P(ICPTSTR,"^",3),1,30)
"RTN","PXQUTL",158,0)
 ..S PXCCCC=$P(ICPTSTR,"^",2)
"RTN","PXQUTL",159,0)
 ..S ENTRY="CPT "_$G(PXCCCC)_" - "_$G(PXCCC)_" = "_$G(PXCC)_" TIMES"
"RTN","PXQUTL",160,0)
 ..W $$RE^PXQUTL(ENTRY)
"RTN","PXQUTL",161,0)
 D CPT
"RTN","PXQUTL",162,0)
 K PXQSDV,DATE
"RTN","PXQUTL",163,0)
 W $$RE^PXQUTL(" ")
"RTN","PXQUTL",164,0)
 Q
"RTN","PXQUTL",165,0)
CPT ;--PROCEDURES
"RTN","PXQUTL",166,0)
 I $D(^AUPNVCPT("AD",VISIT)),CNT=0 W $$RE^PXQUTL("THERE ARE PROCEDURES IN PCE BUT NO RECORD IN SCHEDULING **")
"RTN","PXQUTL",167,0)
 Q
"RTN","PXQUTL",168,0)
CPT2 ;--COUNT PROCEDURES
"RTN","PXQUTL",169,0)
 N PXQC,PXQQ
"RTN","PXQUTL",170,0)
 S PXQQ=0
"RTN","PXQUTL",171,0)
 F I=1:1:5 S PXQC=$P(@REF,"^",I) I PXQC]"" D
"RTN","PXQUTL",172,0)
 .I $D(PXQSDV(PXQC)) S PXQQ=$O(PXQSDV(PXQC,0))
"RTN","PXQUTL",173,0)
 .K PXQSDV(PXQC,PXQQ)
"RTN","PXQUTL",174,0)
 .S PXQSDV(PXQC,(PXQQ+1))=""
"RTN","PXQUTL",175,0)
 .S PXQQ=0
"RTN","PXQUTL",176,0)
 Q
"RTN","PXQUTL",177,0)
 ;
"RTN","PXQUTL",178,0)
 ;
"RTN","PXQUTL",179,0)
EXP(ROOT,IEN) ;---EXPAND ENTRIES
"RTN","PXQUTL",180,0)
 N I,REF,REF2,ENTRY
"RTN","PXQUTL",181,0)
 I ROOT["SCE",$P($G(^SCE(IEN,0)),"^",6)']"",$G(PXQPRM)=1 D
"RTN","PXQUTL",182,0)
 .W $$RE^PXQUTL("    ~~~~ERROR~~~")
"RTN","PXQUTL",183,0)
 .W $$RE^PXQUTL("** There is more Than 1 PARENT OUTPATIENT ENCOUNTER  pointing to the same VISIT**")
"RTN","PXQUTL",184,0)
 .W $$RE^PXQUTL(" ")
"RTN","PXQUTL",185,0)
 I ROOT["SCE"&($P($G(^SCE(IEN,0)),"^",6)']"") S PXQPRM=1
"RTN","PXQUTL",186,0)
 I $G(BROKEN),ROOT["AUPNVCPT" S (DFN,PATIENT)=$P($G(^AUPNVCPT(IEN,0)),"^",2)
"RTN","PXQUTL",187,0)
 I $G(BROKEN),ROOT["SCE",'$G(DATE) S DATE=$P($G(^SCE(IEN,0)),"^",1),(DFN,PATIENT)=$P($G(^SCE(IEN,0)),"^",2)
"RTN","PXQUTL",188,0)
 S REF=$P(ROOT,"""",1)_IEN_")"
"RTN","PXQUTL",189,0)
 S REF2=$P(ROOT,"""",1)_IEN
"RTN","PXQUTL",190,0)
 F  S REF=$Q(@REF) Q:REF'[REF2  S ENTRY=REF_" = "_@REF W $$RE^PXQUTL($G(ENTRY))
"RTN","PXQUTL",191,0)
 W $$RE^PXQUTL(" ")
"RTN","PXQUTL",192,0)
 Q ""
"RTN","PXRHS02")
0^21^B14621854
"RTN","PXRHS02",1,0)
PXRHS02 ;ISL/SBW - PCE Visit data extract subroutines ;8-Nov-96
"RTN","PXRHS02",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**13,73,121**;Aug 12, 1996
"RTN","PXRHS02",3,0)
GETREC(PXA,PXCAT,EXTRCODE,IEXDT,PXCNT) ; Get rec and load ^TMP("PXHSV",$J,
"RTN","PXRHS02",4,0)
 N DIC,DIQ,DR,DA,REC,VISIT,TYPE,LOC,SERCAT,CHKOUT,CLINIC,WALKAPT,EMCODE,ELIG
"RTN","PXRHS02",5,0)
 N HLOC,HLOCABB,OLOC
"RTN","PXRHS02",6,0)
 S DIC=9000010,DA=PXA,DIQ="REC(",DIQ(0)="IE"
"RTN","PXRHS02",7,0)
 ;--fix for fields .16 and .17 that were removed from file
"RTN","PXRHS02",8,0)
 ;              and .18 should alway be blank
"RTN","PXRHS02",9,0)
 S DR=".01;.03;.06;.07;.08;.09;.11;.21;.22;2101"
"RTN","PXRHS02",10,0)
 D EN^DIQ1
"RTN","PXRHS02",11,0)
 Q:'$D(REC)
"RTN","PXRHS02",12,0)
 Q:$G(PXCAT)'[REC(9000010,DA,.07,"I")!(REC(9000010,DA,.09,"I")'>0)!+(REC(9000010,DA,.11,"I"))
"RTN","PXRHS02",13,0)
 S VISIT=REC(9000010,DA,.01,"I")
"RTN","PXRHS02",14,0)
 S:+$G(IEXDT)'>0 IEXDT=9999999-VISIT
"RTN","PXRHS02",15,0)
 S TYPE=REC(9000010,DA,.03,"E")
"RTN","PXRHS02",16,0)
 S LOC=REC(9000010,DA,.06,"E")
"RTN","PXRHS02",17,0)
 S SERCAT=REC(9000010,DA,.07,"E")
"RTN","PXRHS02",18,0)
 S CLINIC=REC(9000010,DA,.08,"E")
"RTN","PXRHS02",19,0)
 ;--fields .16 and .17 are not in file
"RTN","PXRHS02",20,0)
 S WALKAPT="" ;REC(9000010,DA,.16,"E")
"RTN","PXRHS02",21,0)
 S EMCODE="" ;REC(9000010,DA,.17,"E")
"RTN","PXRHS02",22,0)
 ;--field .18 does not have data more that very short term
"RTN","PXRHS02",23,0)
 S CHKOUT="" ;REC(9000010,DA,.18,"I")
"RTN","PXRHS02",24,0)
 S ELIG=REC(9000010,DA,.21,"E")
"RTN","PXRHS02",25,0)
 S HLOC=REC(9000010,DA,.22,"E")
"RTN","PXRHS02",26,0)
 S HLOCABB=$$GETHLOC^PXRHS02(REC(9000010,DA,.22,"I"))
"RTN","PXRHS02",27,0)
 S OLOC=REC(9000010,DA,2101,"E")
"RTN","PXRHS02",28,0)
 S PXCNT=PXCNT+1
"RTN","PXRHS02",29,0)
 S ^TMP("PXHSV",$J,IEXDT,PXCNT,0)=VISIT_U_TYPE_U_LOC_U_SERCAT_U_CHKOUT_U_HLOC_U_HLOCABB_U_OLOC_U_CLINIC_U_WALKAPT_U_EMCODE_U_ELIG
"RTN","PXRHS02",30,0)
 D:$G(EXTRCODE)["C" GETCPT^PXRHS02(PXA,IEXDT,PXCNT)
"RTN","PXRHS02",31,0)
 D:$G(EXTRCODE)["D" GETPOV^PXRHS02(PXA,IEXDT,PXCNT)
"RTN","PXRHS02",32,0)
 D:$G(EXTRCODE)["P" GETPROV^PXRHS02(PXA,IEXDT,PXCNT)
"RTN","PXRHS02",33,0)
 Q
"RTN","PXRHS02",34,0)
GETHLOC(PXHLOC) ; Get hospital location abbreviation
"RTN","PXRHS02",35,0)
 Q $P($G(^SC(+PXHLOC,0)),U,2)
"RTN","PXRHS02",36,0)
GETCPT(PXVDF,IDT,CNT) ; Get Procedures performed during the visit
"RTN","PXRHS02",37,0)
 Q:$O(^AUPNVCPT("AD",PXVDF,""))=""
"RTN","PXRHS02",38,0)
 N PXPDN,COMMENT
"RTN","PXRHS02",39,0)
 S PXPDN=""
"RTN","PXRHS02",40,0)
 F  S PXPDN=$O(^AUPNVCPT("AD",PXVDF,PXPDN)) Q:'PXPDN  D
"RTN","PXRHS02",41,0)
 . N DIC,DIQ,DR,DA,REC,CPT,NARR,QTY,PRIM,SUBIEN,MOD
"RTN","PXRHS02",42,0)
 . S DIC=9000010.18,DA=PXPDN,DIQ="REC(",DIQ(0)="IE"
"RTN","PXRHS02",43,0)
 . S DR=".01;.04;.07;.16;81101"
"RTN","PXRHS02",44,0)
 . D EN^DIQ1
"RTN","PXRHS02",45,0)
 . Q:'$D(REC)
"RTN","PXRHS02",46,0)
 . S CPT=REC(9000010.18,DA,.01,"I")
"RTN","PXRHS02",47,0)
 . S NARR=REC(9000010.18,DA,.04,"E")
"RTN","PXRHS02",48,0)
 . S QTY=REC(9000010.18,DA,.16,"E")
"RTN","PXRHS02",49,0)
 . S PRIM=REC(9000010.18,DA,.07,"I")
"RTN","PXRHS02",50,0)
 . S COMMENT=REC(9000010.18,DA,81101,"E")
"RTN","PXRHS02",51,0)
 . S ^TMP("PXHSV",$J,IDT,CNT,"C",PXPDN)=CPT_U_NARR_U_QTY_U_PRIM
"RTN","PXRHS02",52,0)
 . S ^TMP("PXHSV",$J,IDT,CNT,"C",PXPDN,"COM")=COMMENT
"RTN","PXRHS02",53,0)
 . ;get modifiers
"RTN","PXRHS02",54,0)
 . K REC D CPTMODIF^PXAAVCPT(PXPDN,.REC)
"RTN","PXRHS02",55,0)
 . ;set modifiers
"RTN","PXRHS02",56,0)
 . Q:'$D(REC)
"RTN","PXRHS02",57,0)
 . S SUBIEN=""
"RTN","PXRHS02",58,0)
 . F  S SUBIEN=$O(REC(1,SUBIEN)) Q:SUBIEN=""  D
"RTN","PXRHS02",59,0)
 .. S MOD=$G(REC(1,SUBIEN,.01))
"RTN","PXRHS02",60,0)
 .. I MOD'="" S MOD=$$MOD^ICPTMOD(MOD,"I",IDT)
"RTN","PXRHS02",61,0)
 .. I $P(MOD,"^")<0 Q
"RTN","PXRHS02",62,0)
 .. S ^TMP("PXHSV",$J,IDT,CNT,"C",PXPDN,$P(MOD,"^",2))=""
"RTN","PXRHS02",63,0)
 Q
"RTN","PXRHS02",64,0)
GETPOV(PXVDF,IDT,CNT) ; Get Purpose of visit
"RTN","PXRHS02",65,0)
 Q:$O(^AUPNVPOV("AD",PXVDF,""))=""
"RTN","PXRHS02",66,0)
 N PXPDN,COMMENT
"RTN","PXRHS02",67,0)
 S PXPDN=""
"RTN","PXRHS02",68,0)
 F  S PXPDN=$O(^AUPNVPOV("AD",PXVDF,PXPDN)) Q:'PXPDN  D
"RTN","PXRHS02",69,0)
 . N DIC,DIQ,DR,DA,REC,POV,NARR,MOD,CAUSE,PLACE,PRIM
"RTN","PXRHS02",70,0)
 . S DIC=9000010.07,DA=PXPDN,DIQ="REC(",DIQ(0)="IE"
"RTN","PXRHS02",71,0)
 . S DR=".01;.04;.06;.12;81101"
"RTN","PXRHS02",72,0)
 . D EN^DIQ1
"RTN","PXRHS02",73,0)
 . Q:'$D(REC)
"RTN","PXRHS02",74,0)
 . S POV=REC(9000010.07,DA,.01,"I")
"RTN","PXRHS02",75,0)
 . S NARR=REC(9000010.07,DA,.04,"E")
"RTN","PXRHS02",76,0)
 . S MOD=REC(9000010.07,DA,.06,"E")
"RTN","PXRHS02",77,0)
 . S CAUSE="" ;REC(9000010.07,DA,.07,"E")
"RTN","PXRHS02",78,0)
 . S PLACE="" ;REC(9000010.07,DA,.11,"E")
"RTN","PXRHS02",79,0)
 . S PRIM=REC(9000010.07,DA,.12,"E")
"RTN","PXRHS02",80,0)
 . S COMMENT=REC(9000010.07,DA,81101,"E")
"RTN","PXRHS02",81,0)
 . S ^TMP("PXHSV",$J,IDT,CNT,"D",PXPDN)=POV_U_MOD_U_CAUSE_U_PLACE_U_PRIM
"RTN","PXRHS02",82,0)
 . S ^TMP("PXHSV",$J,IDT,CNT,"D",PXPDN,"N")=NARR
"RTN","PXRHS02",83,0)
 . S ^TMP("PXHSV",$J,IDT,CNT,"D",PXPDN,"COM")=COMMENT
"RTN","PXRHS02",84,0)
 Q
"RTN","PXRHS02",85,0)
GETPROV(PXVDF,IDT,CNT) ;Entry point to get providers for a visits
"RTN","PXRHS02",86,0)
 I $O(^AUPNVPRV("AD",PXVDF,""))="" Q
"RTN","PXRHS02",87,0)
 S PXPDN=""
"RTN","PXRHS02",88,0)
 F  S PXPDN=$O(^AUPNVPRV("AD",PXVDF,PXPDN)) Q:'PXPDN  D
"RTN","PXRHS02",89,0)
 . N DIC,DIQ,DR,DA,REC,PROV,PRIM,IPRIM
"RTN","PXRHS02",90,0)
 . S DIC=9000010.06,DA=PXPDN,DIQ="REC(",DIQ(0)="IE"
"RTN","PXRHS02",91,0)
 . S DR=".01;.04"
"RTN","PXRHS02",92,0)
 . D EN^DIQ1
"RTN","PXRHS02",93,0)
 . Q:'$D(REC)
"RTN","PXRHS02",94,0)
 . S PROV=REC(9000010.06,DA,.01,"E")
"RTN","PXRHS02",95,0)
 . S PRIM=REC(9000010.06,DA,.04,"E")
"RTN","PXRHS02",96,0)
 . S IPRIM=REC(9000010.06,DA,.04,"I")
"RTN","PXRHS02",97,0)
 . S:IPRIM="" IPRIM="Z"
"RTN","PXRHS02",98,0)
 . S ^TMP("PXHSV",$J,IDT,CNT,"P",IPRIM,PXPDN)=PROV_U_PRIM
"RTN","PXRHS02",99,0)
 Q
"RTN","PXRRFDP")
0^27^B66324541
"RTN","PXRRFDP",1,0)
PXRRFDP ;ISL/PKR - Final sort and print of frequency of diagnosis report. ;9/5/97
"RTN","PXRRFDP",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**3,10,12,18,31,121**;Aug 12, 1996
"RTN","PXRRFDP",3,0)
 ;
"RTN","PXRRFDP",4,0)
PRINT ;
"RTN","PXRRFDP",5,0)
 N ANS,BD,BMARG,C1E,C1S,C2E,C2S,C3E,C3S,C1HS,C2HS,C3HS,CMAX,INDENT,MID
"RTN","PXRRFDP",6,0)
 N HEAD,LEN,NUM,PAGE
"RTN","PXRRFDP",7,0)
 N BYLOC,BYPC,BYPRV,DCIEN,DONE,DTOT,ED,ETOT,FOUND,HLOC,IC,ICD9IEN
"RTN","PXRRFDP",8,0)
 N FACILITY,FACPNAME,IC,INFOTYPE,LOCPNAM,NEWPAGE,PCLASS,PRV
"RTN","PXRRFDP",9,0)
 N RATIO,STOIND,TEMP,TOTAL,VACODE,ICDSTR
"RTN","PXRRFDP",10,0)
 ;
"RTN","PXRRFDP",11,0)
 ;Allow the task to be cleaned up upon successful completion.
"RTN","PXRRFDP",12,0)
 S ZTREQ="@"
"RTN","PXRRFDP",13,0)
 ;
"RTN","PXRRFDP",14,0)
 U IO
"RTN","PXRRFDP",15,0)
 S BMARG=2
"RTN","PXRRFDP",16,0)
 S INDENT=3,PAGE=1,C1S=INDENT+29
"RTN","PXRRFDP",17,0)
 ;
"RTN","PXRRFDP",18,0)
 S DONE=0
"RTN","PXRRFDP",19,0)
 D HDR^PXRRGPRT(PAGE)
"RTN","PXRRFDP",20,0)
 W !!,"Criteria for Frequency of Diagnoses Report"
"RTN","PXRRFDP",21,0)
 W !,?INDENT,"Encounter diagnoses:",?C1S,$P(PXRRFDDC,U,2)
"RTN","PXRRFDP",22,0)
 S BD=$$FMTE^XLFDT(PXRRBDT)
"RTN","PXRRFDP",23,0)
 S ED=$$FMTE^XLFDT(PXRREDT)
"RTN","PXRRFDP",24,0)
 W !,?INDENT,"Encounter date range:",?C1S,BD," through ",ED
"RTN","PXRRFDP",25,0)
 I PXRRECAT="" D  G MAXP
"RTN","PXRRFDP",26,0)
 . W !,?INDENT,"Selected encounters:",?C1S,"ALL"
"RTN","PXRRFDP",27,0)
 ;
"RTN","PXRRFDP",28,0)
 I $D(PXRRPRSC) W !,?INDENT,"Selected Providers:",?C1S,$P(PXRRPRSC,U,2)
"RTN","PXRRFDP",29,0)
 I $D(PXRRCS) S ANS="YES"
"RTN","PXRRFDP",30,0)
 E  S ANS="ALL"
"RTN","PXRRFDP",31,0)
 I $D(PXRRLCSC) W !,?INDENT,$P(PXRRLCSC,U,2)
"RTN","PXRRFDP",32,0)
 I $D(PXRRETYP) W !,?INDENT,"Encounter type:",?C1S,PXRRETYP
"RTN","PXRRFDP",33,0)
 ;
"RTN","PXRRFDP",34,0)
 I $D(PXRRDOB) D
"RTN","PXRRFDP",35,0)
 . I (PXRRDOBE'=DT)&(PXRRDOBS'=0) D
"RTN","PXRRFDP",36,0)
 .. W !,?INDENT,"Patient age range:",?C1S,PXRRMINA," to ",PXRRMAXA
"RTN","PXRRFDP",37,0)
 .. S BD=$$FMTE^XLFDT(PXRRDOBS),ED=$$FMTE^XLFDT(PXRRDOBE)
"RTN","PXRRFDP",38,0)
 .. W !,?INDENT,"Patient date of birth:",?C1S,BD," through ",ED
"RTN","PXRRFDP",39,0)
 . I (PXRRDOBS=0) D
"RTN","PXRRFDP",40,0)
 .. W !,?INDENT,"Patient age range:",?C1S,PXRRMINA," or more"
"RTN","PXRRFDP",41,0)
 .. S ED=$$FMTE^XLFDT(PXRRDOBE)
"RTN","PXRRFDP",42,0)
 .. W !,?INDENT,"Patient date of birth:",?C1S,ED," or before"
"RTN","PXRRFDP",43,0)
 . I (PXRRDOBE=DT) D
"RTN","PXRRFDP",44,0)
 .. W !,?INDENT,"Patient age range:",?C1S,"Up to ",PXRRMAXA
"RTN","PXRRFDP",45,0)
 .. S BD=$$FMTE^XLFDT(PXRRDOBS),ED=$$FMTE^XLFDT(DT)
"RTN","PXRRFDP",46,0)
 .. W !,?INDENT,"Patient date of birth:",?C1S,BD," through ",ED
"RTN","PXRRFDP",47,0)
 E  W !,?INDENT,"Patient age range:",?C1S,"ALL"
"RTN","PXRRFDP",48,0)
 ;
"RTN","PXRRFDP",49,0)
 I $D(PXRRRACE) D
"RTN","PXRRFDP",50,0)
 . N RACE
"RTN","PXRRFDP",51,0)
 . S RACE="race"
"RTN","PXRRFDP",52,0)
 . I NRACE>1 S RACE="races"
"RTN","PXRRFDP",53,0)
 . W !?INDENT,"Patient ",RACE,":",?C1S,$P(PXRRRACE(1),U,2)
"RTN","PXRRFDP",54,0)
 . F IC=2:1:NRACE W !,?C1S,$P(PXRRRACE(IC),U,2)
"RTN","PXRRFDP",55,0)
 E  W !?INDENT,"Patient race(s):",?C1S,"ALL"
"RTN","PXRRFDP",56,0)
 ;
"RTN","PXRRFDP",57,0)
 I $D(PXRRSEX) W !?INDENT,"Patient sex:",?C1S,$P(PXRRSEX,U,2)
"RTN","PXRRFDP",58,0)
 E  W !?INDENT,"Patient sex:",?C1S,"BOTH"
"RTN","PXRRFDP",59,0)
 ;
"RTN","PXRRFDP",60,0)
 I $D(PXRRSCAT) D OSCAT^PXRRGPRT(PXRRSCAT,INDENT)
"RTN","PXRRFDP",61,0)
 ;
"RTN","PXRRFDP",62,0)
 I $P($G(PXRRPRSC),U,1)="C" D PECLASS^PXRRGPRT(INDENT)
"RTN","PXRRFDP",63,0)
 ;
"RTN","PXRRFDP",64,0)
MAXP W !!,?INDENT,"Maximum number of diagnoses to be displayed: ",PXRRDMAX
"RTN","PXRRFDP",65,0)
 ;
"RTN","PXRRFDP",66,0)
 S CMAX=70
"RTN","PXRRFDP",67,0)
 ;
"RTN","PXRRFDP",68,0)
 I $D(PXRRLCSC) D
"RTN","PXRRFDP",69,0)
 . I PXRRLCSC["C" S PLOCNAM="Clinic Stop: "
"RTN","PXRRFDP",70,0)
 . I PXRRLCSC["H" S PLOCNAM="Hospital Location: "
"RTN","PXRRFDP",71,0)
 ;
"RTN","PXRRFDP",72,0)
 S FACILITY=""
"RTN","PXRRFDP",73,0)
NFAC S INFOTYPE="FACILITY"
"RTN","PXRRFDP",74,0)
 S FACILITY=$O(^XTMP(PXRRXTMP,"INFO",INFOTYPE,FACILITY))
"RTN","PXRRFDP",75,0)
 I +FACILITY=0 G END
"RTN","PXRRFDP",76,0)
 ;Mark the facility as being found.
"RTN","PXRRFDP",77,0)
 F IC=1:1:NFAC I $P(PXRRFAC(IC),U,1)=FACILITY D  Q
"RTN","PXRRFDP",78,0)
 . S $P(PXRRFAC(IC),U,4)="M"
"RTN","PXRRFDP",79,0)
 S FACPNAME=$P(PXRRFACN(FACILITY),U,1)_"  "_$P(PXRRFACN(FACILITY),U,2)
"RTN","PXRRFDP",80,0)
 ;
"RTN","PXRRFDP",81,0)
 ;Check for a user request to stop the task.
"RTN","PXRRFDP",82,0)
 I $$S^%ZTLOAD S ZTSTOP=1 D EXIT^PXRRFDD
"RTN","PXRRFDP",83,0)
 ;
"RTN","PXRRFDP",84,0)
NINFO S INFOTYPE=$O(^XTMP(PXRRXTMP,"INFO",INFOTYPE))
"RTN","PXRRFDP",85,0)
 I INFOTYPE="" G NFAC
"RTN","PXRRFDP",86,0)
 ;
"RTN","PXRRFDP",87,0)
 I INFOTYPE["LOC" S BYLOC=1
"RTN","PXRRFDP",88,0)
 E  S BYLOC=0
"RTN","PXRRFDP",89,0)
 I INFOTYPE["PC" S BYPC=1
"RTN","PXRRFDP",90,0)
 E  S BYPC=0
"RTN","PXRRFDP",91,0)
 I INFOTYPE["PRV" S BYPRV=1
"RTN","PXRRFDP",92,0)
 E  S BYPRV=0
"RTN","PXRRFDP",93,0)
 ;
"RTN","PXRRFDP",94,0)
 S PRV=""
"RTN","PXRRFDP",95,0)
NPRV ;
"RTN","PXRRFDP",96,0)
 S PRV=$O(^XTMP(PXRRXTMP,"INFO",INFOTYPE,FACILITY,PRV))
"RTN","PXRRFDP",97,0)
 I PRV="" G NINFO
"RTN","PXRRFDP",98,0)
 ;
"RTN","PXRRFDP",99,0)
 S VACODE=""
"RTN","PXRRFDP",100,0)
NVACODE ;
"RTN","PXRRFDP",101,0)
 S VACODE=$O(^XTMP(PXRRXTMP,"INFO",INFOTYPE,FACILITY,PRV,VACODE))
"RTN","PXRRFDP",102,0)
 I VACODE="" G NPRV
"RTN","PXRRFDP",103,0)
 ;
"RTN","PXRRFDP",104,0)
 S HLOC=""
"RTN","PXRRFDP",105,0)
NLOC ;
"RTN","PXRRFDP",106,0)
 S HLOC=$O(^XTMP(PXRRXTMP,"INFO",INFOTYPE,FACILITY,PRV,VACODE,HLOC))
"RTN","PXRRFDP",107,0)
 I HLOC="" G NVACODE
"RTN","PXRRFDP",108,0)
 ;
"RTN","PXRRFDP",109,0)
 S STOIND=^XTMP(PXRRXTMP,"INFO",INFOTYPE,FACILITY,PRV,VACODE,HLOC)
"RTN","PXRRFDP",110,0)
 ;
"RTN","PXRRFDP",111,0)
 ;If the report is by provider get a person class for the provider.
"RTN","PXRRFDP",112,0)
 I BYPRV D
"RTN","PXRRFDP",113,0)
 . S TEMP=$P(PRV,U,4)
"RTN","PXRRFDP",114,0)
 . I $L(TEMP)>0 S PCLASS=$$ABBRV^PXRRPECU(TEMP)
"RTN","PXRRFDP",115,0)
 . E  S PCLASS="Unknown"
"RTN","PXRRFDP",116,0)
 ;
"RTN","PXRRFDP",117,0)
 ;If the report is by person class get the person class.
"RTN","PXRRFDP",118,0)
 I BYPC D
"RTN","PXRRFDP",119,0)
 . S PCLASS=$$ABBRV^PXRRPECU(VACODE)
"RTN","PXRRFDP",120,0)
 ;
"RTN","PXRRFDP",121,0)
 S HEAD=1
"RTN","PXRRFDP",122,0)
 D HEAD(0)
"RTN","PXRRFDP",123,0)
 I DONE G EXIT
"RTN","PXRRFDP",124,0)
 S C1S=INDENT+60
"RTN","PXRRFDP",125,0)
 I $Y>(IOSL-BMARG-4) D HEAD(1)
"RTN","PXRRFDP",126,0)
 I DONE G EXIT
"RTN","PXRRFDP",127,0)
 I $P(PXRRFDDC,U,1)="P" S TEMP="Total number of Primary Diagnoses for these Encounters:"
"RTN","PXRRFDP",128,0)
 E  S TEMP="Total number of Diagnoses for these Encounters:"
"RTN","PXRRFDP",129,0)
 I $D(^XTMP(PXRRXTMP,"TOTALS","ENCTOT",STOIND)) S ETOT=^XTMP(PXRRXTMP,"TOTALS","ENCTOT",STOIND)
"RTN","PXRRFDP",130,0)
 E  S ETOT=0
"RTN","PXRRFDP",131,0)
 I $D(^XTMP(PXRRXTMP,"TOTALS","DIAGTOT",STOIND)) S DTOT=^XTMP(PXRRXTMP,"TOTALS","DIAGTOT",STOIND)
"RTN","PXRRFDP",132,0)
 E  S DTOT=0
"RTN","PXRRFDP",133,0)
 S LEN=$$MAX^XLFMTH($L(DTOT),$L(ETOT))
"RTN","PXRRFDP",134,0)
 W !!,?INDENT,"Total number of Encounters meeting the selection criteria:",?C1S,$J(ETOT,LEN)
"RTN","PXRRFDP",135,0)
 W !,?INDENT,TEMP,?C1S,$J(DTOT,LEN)
"RTN","PXRRFDP",136,0)
 S RATIO=$S(ETOT>0:(DTOT/ETOT),1:0)
"RTN","PXRRFDP",137,0)
 W !,?INDENT,"Diagnoses/Encounter ratio:",?C1S,$J(RATIO,LEN,2)
"RTN","PXRRFDP",138,0)
 ;
"RTN","PXRRFDP",139,0)
 S C1S=INDENT+8,C2S=INDENT+16,C2E=INDENT+46
"RTN","PXRRFDP",140,0)
 S C1HS=INDENT+9,C2HS=INDENT+25
"RTN","PXRRFDP",141,0)
 S TOTAL=""
"RTN","PXRRFDP",142,0)
 S NUM=0
"RTN","PXRRFDP",143,0)
NTOTICD S TOTAL=$O(^XTMP(PXRRXTMP,"PRINT",STOIND,"ICD9",TOTAL),-1)
"RTN","PXRRFDP",144,0)
 I TOTAL="" G DIAGCAT
"RTN","PXRRFDP",145,0)
 S TEMP=TOTAL
"RTN","PXRRFDP",146,0)
 S ICD9IEN=""
"RTN","PXRRFDP",147,0)
NICD9 S ICD9IEN=$O(^XTMP(PXRRXTMP,"PRINT",STOIND,"ICD9",TOTAL,ICD9IEN),-1)
"RTN","PXRRFDP",148,0)
 I ICD9IEN="" G NTOTICD
"RTN","PXRRFDP",149,0)
 S NUM=NUM+1
"RTN","PXRRFDP",150,0)
 I NUM=1 S HEAD=1
"RTN","PXRRFDP",151,0)
 I $Y>(IOSL-BMARG-5) S NEWPAGE=1
"RTN","PXRRFDP",152,0)
 E  S NEWPAGE=0
"RTN","PXRRFDP",153,0)
 D DHEAD(NEWPAGE)
"RTN","PXRRFDP",154,0)
 I DONE G EXIT
"RTN","PXRRFDP",155,0)
 S C3S=C3E-$L(TEMP)
"RTN","PXRRFDP",156,0)
 ;W !,?INDENT,$J(NUM,5),".",?C1S,$P(^ICD9(ICD9IEN,0),U,1),?C2S,$P(^ICD9(ICD9IEN,0),U,3),?C3S,TEMP
"RTN","PXRRFDP",157,0)
 S ICDSTR=$$ICDDX^ICDCODE(ICD9IEN)
"RTN","PXRRFDP",158,0)
 W !,?INDENT,$J(NUM,5),".",?C1S,$P(ICDSTR,U,2),?C2S,$P(ICDSTR,U,4),?C3S,TEMP
"RTN","PXRRFDP",159,0)
 I NUM<PXRRDMAX G NICD9
"RTN","PXRRFDP",160,0)
DIAGCAT ;
"RTN","PXRRFDP",161,0)
 S C1S=INDENT+8,C1E=INDENT+38
"RTN","PXRRFDP",162,0)
 S C1HS=14
"RTN","PXRRFDP",163,0)
 S TOTAL=""
"RTN","PXRRFDP",164,0)
 S NUM=0
"RTN","PXRRFDP",165,0)
NTOTDC S TOTAL=$O(^XTMP(PXRRXTMP,"PRINT",STOIND,"DC",TOTAL),-1)
"RTN","PXRRFDP",166,0)
 I TOTAL="" G NLOC
"RTN","PXRRFDP",167,0)
 S TEMP=TOTAL
"RTN","PXRRFDP",168,0)
 S DCIEN=""
"RTN","PXRRFDP",169,0)
NDC S DCIEN=$O(^XTMP(PXRRXTMP,"PRINT",STOIND,"DC",TOTAL,DCIEN),-1)
"RTN","PXRRFDP",170,0)
 I DCIEN="" G NTOTDC
"RTN","PXRRFDP",171,0)
 S NUM=NUM+1
"RTN","PXRRFDP",172,0)
 I NUM=1 S HEAD=1
"RTN","PXRRFDP",173,0)
 I $Y>(IOSL-BMARG-5) S NEWPAGE=1
"RTN","PXRRFDP",174,0)
 E  S NEWPAGE=0
"RTN","PXRRFDP",175,0)
 D DCHEAD(NEWPAGE)
"RTN","PXRRFDP",176,0)
 I DONE G EXIT
"RTN","PXRRFDP",177,0)
 S C2S=C2E-$L(TEMP)
"RTN","PXRRFDP",178,0)
 ;We will need a DBIA to read ICM.  Some sites have had a corrupted ICM
"RTN","PXRRFDP",179,0)
 ;file.  Check for this problem, if found print an error message and
"RTN","PXRRFDP",180,0)
 ;quit.
"RTN","PXRRFDP",181,0)
 I (DCIEN>0)&('$D(^ICM(DCIEN,0))) D  G EXIT
"RTN","PXRRFDP",182,0)
 . W !!,"CANNOT CONTINUE, File 80.3 Major Diagnostic Category is corrupted!"
"RTN","PXRRFDP",183,0)
 . W !,"^ICM(",DCIEN,",0) is missing."
"RTN","PXRRFDP",184,0)
 . W !,"Please contact customer service for help."
"RTN","PXRRFDP",185,0)
 I DCIEN>0 W !,?INDENT,$J(NUM,5),".",?C1S,$P(^ICM(DCIEN,0),U,1),?C2S,TEMP
"RTN","PXRRFDP",186,0)
 E  W !,?INDENT,$J(NUM,5),".",?C1S,"Unknown",?C2S,TEMP
"RTN","PXRRFDP",187,0)
 I NUM<PXRRDMAX G NDC
"RTN","PXRRFDP",188,0)
 ;
"RTN","PXRRFDP",189,0)
 ;Get the next location.
"RTN","PXRRFDP",190,0)
 G NLOC
"RTN","PXRRFDP",191,0)
END ;
"RTN","PXRRFDP",192,0)
 ;Check for facilities that were listed but had no encounters.
"RTN","PXRRFDP",193,0)
 D FACNE^PXRRGPRT(INDENT)
"RTN","PXRRFDP",194,0)
EXIT ;
"RTN","PXRRFDP",195,0)
 D EXIT^PXRRGUT
"RTN","PXRRFDP",196,0)
 D EOR^PXRRGUT
"RTN","PXRRFDP",197,0)
 Q
"RTN","PXRRFDP",198,0)
 ;
"RTN","PXRRFDP",199,0)
 ;=======================================================================
"RTN","PXRRFDP",200,0)
DHEAD(NEWPAGE) ;
"RTN","PXRRFDP",201,0)
 I NEWPAGE D PAGE^PXRRGPRT
"RTN","PXRRFDP",202,0)
 E  I $Y>(IOSL-BMARG) D PAGE^PXRRGPRT
"RTN","PXRRFDP",203,0)
 I DONE Q
"RTN","PXRRFDP",204,0)
 I (HEAD)&(RATIO>0) D
"RTN","PXRRFDP",205,0)
 . S LEN=$$MAX^XLFMTH(9,$L(TEMP))
"RTN","PXRRFDP",206,0)
 . S MID=C2E+3+(LEN/2)
"RTN","PXRRFDP",207,0)
 . S C3HS=MID-5
"RTN","PXRRFDP",208,0)
 . S C3E=MID+($L(TEMP)/2)
"RTN","PXRRFDP",209,0)
 . W !!,?INDENT,PXRRDMAX," Most Frequent ICD Diagnoses:"
"RTN","PXRRFDP",210,0)
 . W !,?C1HS,"Code",?C2HS,"Description",?C3HS,"Frequency"
"RTN","PXRRFDP",211,0)
 . W !,?C1S,"------",?C2S,"------------------------------",?C3HS,"---------"
"RTN","PXRRFDP",212,0)
 . S HEAD=0
"RTN","PXRRFDP",213,0)
 Q
"RTN","PXRRFDP",214,0)
 ;
"RTN","PXRRFDP",215,0)
 ;=======================================================================
"RTN","PXRRFDP",216,0)
DCHEAD(NEWPAGE) ;
"RTN","PXRRFDP",217,0)
 I NEWPAGE D PAGE^PXRRGPRT
"RTN","PXRRFDP",218,0)
 E  I $Y>(IOSL-BMARG) D PAGE^PXRRGPRT
"RTN","PXRRFDP",219,0)
 I DONE Q
"RTN","PXRRFDP",220,0)
 I (HEAD)&(RATIO>0) D
"RTN","PXRRFDP",221,0)
 . S LEN=$$MAX^XLFMTH(9,$L(TEMP))
"RTN","PXRRFDP",222,0)
 . S MID=C1E+3+(LEN/2)
"RTN","PXRRFDP",223,0)
 . S C2HS=MID-5
"RTN","PXRRFDP",224,0)
 . S C2E=MID+($L(TEMP)/2)
"RTN","PXRRFDP",225,0)
 . W !!,?INDENT,PXRRDMAX," Most Frequent Diagnostic Categories:"
"RTN","PXRRFDP",226,0)
 . W !,?C1HS,"Diagnostic Category",?C2HS,"Frequency"
"RTN","PXRRFDP",227,0)
 . W !,?C1S,"------------------------------",?C2HS,"---------"
"RTN","PXRRFDP",228,0)
 . S HEAD=0
"RTN","PXRRFDP",229,0)
 Q
"RTN","PXRRFDP",230,0)
 ;
"RTN","PXRRFDP",231,0)
 ;=======================================================================
"RTN","PXRRFDP",232,0)
HEAD(NEWPAGE) ;
"RTN","PXRRFDP",233,0)
 N LEN,TEMP
"RTN","PXRRFDP",234,0)
 I NEWPAGE D PAGE^PXRRGPRT
"RTN","PXRRFDP",235,0)
 E  I $Y>(IOSL-BMARG-8) D PAGE^PXRRGPRT
"RTN","PXRRFDP",236,0)
 I DONE Q
"RTN","PXRRFDP",237,0)
 I HEAD D
"RTN","PXRRFDP",238,0)
 . W !!,"___________________________________________________________________"
"RTN","PXRRFDP",239,0)
 . W !,"Facility: ",FACPNAME
"RTN","PXRRFDP",240,0)
 . I BYLOC W !,PLOCNAM,$P(HLOC,U,1)_" (",$P(HLOC,U,3)_")"
"RTN","PXRRFDP",241,0)
 . I BYPRV D
"RTN","PXRRFDP",242,0)
 .. S TEMP="Provider: "_$P(PRV,U,1)_" ("_PCLASS_")"
"RTN","PXRRFDP",243,0)
 .. S LEN=$L(TEMP)
"RTN","PXRRFDP",244,0)
 .. I LEN>CMAX D
"RTN","PXRRFDP",245,0)
 ... W !,$E(TEMP,1,CMAX)
"RTN","PXRRFDP",246,0)
 ... W !," ",$E(TEMP,CMAX+1,LEN)
"RTN","PXRRFDP",247,0)
 .. E  W !,TEMP
"RTN","PXRRFDP",248,0)
 . I BYPC D
"RTN","PXRRFDP",249,0)
 .. W !,"Person Class (Occupation+Specialty+Subspecialty): "
"RTN","PXRRFDP",250,0)
 .. S LEN=INDENT+$L(PCLASS)
"RTN","PXRRFDP",251,0)
 .. I LEN>CMAX D
"RTN","PXRRFDP",252,0)
 ... W !,?INDENT,$E(PCLASS,1,CMAX)
"RTN","PXRRFDP",253,0)
 ... W !,?(INDENT+1),$E(PCLASS,CMAX+1,LEN)
"RTN","PXRRFDP",254,0)
 .. E  W !,?INDENT,PCLASS
"RTN","PXRRFDP",255,0)
 . S HEAD=0
"RTN","PXRRFDP",256,0)
 Q
"RTN","PXRRFDP",257,0)
 ;
"RTN","PXRRFDSD")
0^26^B22536054
"RTN","PXRRFDSD",1,0)
PXRRFDSD ;ISL/PKR - Go through the encounters attaching a diagnosis and then sort based on the diagnosis. ;06/08/98
"RTN","PXRRFDSD",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**3,10,12,31,54,121**;Aug 12, 1996
"RTN","PXRRFDSD",3,0)
SORT ;
"RTN","PXRRFDSD",4,0)
 N BUSY,COUNT,DIAGTOT,DCIEN,ENCTOT,ICD9IEN,INFOTYPE,FACILITY,HLOC
"RTN","PXRRFDSD",5,0)
 N POV,POVIEN,PNAME,PRIMARY,STOIND,VACODE,VIEN
"RTN","PXRRFDSD",6,0)
 ;
"RTN","PXRRFDSD",7,0)
 ;The ^XTMP array created in PXRRFDSE can have four possible structures.
"RTN","PXRRFDSD",8,0)
 ;If the encounters were sorted by location then the structure will be:
"RTN","PXRRFDSD",9,0)
 ;  ^XTMP(PXRRXTMP,FACILITY,1,1,HLOC,VIEN).
"RTN","PXRRFDSD",10,0)
 ;If the encounters were sorted by person class then the structure will be:
"RTN","PXRRFDSD",11,0)
 ;  ^XTMP(PXRRXTMP,FACILITY,1,VACODE,1,VIEN).
"RTN","PXRRFDSD",12,0)
 ;If the encounters were sorted by provider then the structure will be:
"RTN","PXRRFDSD",13,0)
 ;  ^XTMP(PXRRXTMP,FACILITY,PNAME,1,1,VIEN).
"RTN","PXRRFDSD",14,0)
 ;If none of the above screens were used then the structure will be:
"RTN","PXRRFDSD",15,0)
 ;  ^XTMP(PXRRXTMP,FACILITY,1,1,1,VIEN).
"RTN","PXRRFDSD",16,0)
 ;
"RTN","PXRRFDSD",17,0)
 I '(PXRRQUE!$D(IO("S"))) D INIT^PXRRBUSY(.BUSY)
"RTN","PXRRFDSD",18,0)
 ;
"RTN","PXRRFDSD",19,0)
 ;Allow the task to be cleaned up on successful completion.
"RTN","PXRRFDSD",20,0)
 S ZTREQ="@"
"RTN","PXRRFDSD",21,0)
 ;
"RTN","PXRRFDSD",22,0)
 I $P(PXRRFDDC,U,1)="P" S PRIMARY=1
"RTN","PXRRFDSD",23,0)
 E  S PRIMARY=0
"RTN","PXRRFDSD",24,0)
 ;
"RTN","PXRRFDSD",25,0)
 S DIAGTOT=0
"RTN","PXRRFDSD",26,0)
 ;Initialize the storage index.
"RTN","PXRRFDSD",27,0)
 S STOIND=0
"RTN","PXRRFDSD",28,0)
 ;
"RTN","PXRRFDSD",29,0)
 S FACILITY=""
"RTN","PXRRFDSD",30,0)
FAC S FACILITY=$O(^XTMP(PXRRXTMP,"ENCTR",FACILITY))
"RTN","PXRRFDSD",31,0)
 I FACILITY="" G SETPR
"RTN","PXRRFDSD",32,0)
 S STOIND=STOIND+1
"RTN","PXRRFDSD",33,0)
 S ^XTMP(PXRRXTMP,"INFO","FACILITY",FACILITY,FACILITY)=STOIND
"RTN","PXRRFDSD",34,0)
 ;
"RTN","PXRRFDSD",35,0)
 S PNAME=""
"RTN","PXRRFDSD",36,0)
PRV S PNAME=$O(^XTMP(PXRRXTMP,"ENCTR",FACILITY,PNAME))
"RTN","PXRRFDSD",37,0)
 I PNAME="" G FAC
"RTN","PXRRFDSD",38,0)
 ;Start INFOTYPE with "G" so it always comes after FACILITY.
"RTN","PXRRFDSD",39,0)
 S INFOTYPE="G"
"RTN","PXRRFDSD",40,0)
 I ($L(PNAME)>1)&(+PNAME=0)&(INFOTYPE'["PRV") D
"RTN","PXRRFDSD",41,0)
 . S INFOTYPE=INFOTYPE_"PRV"
"RTN","PXRRFDSD",42,0)
 ;
"RTN","PXRRFDSD",43,0)
 ;Check for a user request to stop the task.
"RTN","PXRRFDSD",44,0)
 I $$S^%ZTLOAD S ZTSTOP=1 D EXIT^PXRRFDD
"RTN","PXRRFDSD",45,0)
 ;
"RTN","PXRRFDSD",46,0)
 S VACODE=""
"RTN","PXRRFDSD",47,0)
PCLASS S VACODE=$O(^XTMP(PXRRXTMP,"ENCTR",FACILITY,PNAME,VACODE))
"RTN","PXRRFDSD",48,0)
 I VACODE="" G PRV
"RTN","PXRRFDSD",49,0)
 I ($L(VACODE)>1)&(+VACODE=0)&(INFOTYPE'["PC") D
"RTN","PXRRFDSD",50,0)
 . S INFOTYPE=INFOTYPE_"PC"
"RTN","PXRRFDSD",51,0)
 ;
"RTN","PXRRFDSD",52,0)
 S HLOC=""
"RTN","PXRRFDSD",53,0)
LOC S HLOC=$O(^XTMP(PXRRXTMP,"ENCTR",FACILITY,PNAME,VACODE,HLOC))
"RTN","PXRRFDSD",54,0)
 I HLOC="" G PCLASS
"RTN","PXRRFDSD",55,0)
 ;The location is stored in the form NAME_U_STOP CODE
"RTN","PXRRFDSD",56,0)
 I ($L(HLOC)>1)&(+$P(HLOC,U,2)>0)&(INFOTYPE'["LOC") D
"RTN","PXRRFDSD",57,0)
 . S INFOTYPE=INFOTYPE_"LOC"
"RTN","PXRRFDSD",58,0)
 ;
"RTN","PXRRFDSD",59,0)
 S STOIND=STOIND+1
"RTN","PXRRFDSD",60,0)
 S ^XTMP(PXRRXTMP,"INFO",INFOTYPE,FACILITY,PNAME,VACODE,HLOC)=STOIND
"RTN","PXRRFDSD",61,0)
 ;
"RTN","PXRRFDSD",62,0)
 S VIEN=""
"RTN","PXRRFDSD",63,0)
ENC S VIEN=$O(^XTMP(PXRRXTMP,"ENCTR",FACILITY,PNAME,VACODE,HLOC,VIEN))
"RTN","PXRRFDSD",64,0)
 I (VIEN="")!(VIEN=0) G LOC
"RTN","PXRRFDSD",65,0)
 ;Count the encounters
"RTN","PXRRFDSD",66,0)
 I '$D(ENCTOT(STOIND)) S ENCTOT(STOIND)=1
"RTN","PXRRFDSD",67,0)
 E  S ENCTOT(STOIND)=ENCTOT(STOIND)+1
"RTN","PXRRFDSD",68,0)
 ;
"RTN","PXRRFDSD",69,0)
 ;If this is an interactive session let the user know that something
"RTN","PXRRFDSD",70,0)
 ;is happening.
"RTN","PXRRFDSD",71,0)
 I '(PXRRQUE!$D(IO("S"))) D SPIN^PXRRBUSY("Sorting diagnoses",.BUSY)
"RTN","PXRRFDSD",72,0)
 ;
"RTN","PXRRFDSD",73,0)
 ;Initialzide the diagnosis counter.
"RTN","PXRRFDSD",74,0)
 I '$D(DIAGTOT(STOIND)) S DIAGTOT(STOIND)=0
"RTN","PXRRFDSD",75,0)
 ;
"RTN","PXRRFDSD",76,0)
 ;Get the diagnoses associated with this VIEN.
"RTN","PXRRFDSD",77,0)
 S POVIEN=""
"RTN","PXRRFDSD",78,0)
DIAG S POVIEN=$O(^AUPNVPOV("AD",VIEN,POVIEN))
"RTN","PXRRFDSD",79,0)
 I POVIEN="" G ENC
"RTN","PXRRFDSD",80,0)
 S POV=^AUPNVPOV(POVIEN,0)
"RTN","PXRRFDSD",81,0)
 ;
"RTN","PXRRFDSD",82,0)
 ;Apply the primary/secondary screen.  If this field does not contain P
"RTN","PXRRFDSD",83,0)
 ;then we take it to be secondary.
"RTN","PXRRFDSD",84,0)
 I PRIMARY I $P(POV,U,12)'="P" G DIAG
"RTN","PXRRFDSD",85,0)
 ;
"RTN","PXRRFDSD",86,0)
 ;Count the ICD9 entries.
"RTN","PXRRFDSD",87,0)
 S ICD9IEN=$P(POV,U,1)
"RTN","PXRRFDSD",88,0)
 I '$D(^TMP(PXRRXTMP,$J,"DIAG",STOIND,"ICD9",ICD9IEN)) S ^TMP(PXRRXTMP,$J,"DIAG",STOIND,"ICD9",ICD9IEN)=1
"RTN","PXRRFDSD",89,0)
 E  S ^TMP(PXRRXTMP,$J,"DIAG",STOIND,"ICD9",ICD9IEN)=^TMP(PXRRXTMP,$J,"DIAG",STOIND,"ICD9",ICD9IEN)+1
"RTN","PXRRFDSD",90,0)
 S DIAGTOT(STOIND)=DIAGTOT(STOIND)+1
"RTN","PXRRFDSD",91,0)
 ;
"RTN","PXRRFDSD",92,0)
 ;Count the diagnostic categories.
"RTN","PXRRFDSD",93,0)
 ;This will probably require a DBIA.
"RTN","PXRRFDSD",94,0)
 ;S DCIEN=$P(^ICD9(ICD9IEN,0),U,5)
"RTN","PXRRFDSD",95,0)
 S DCIEN=$P($$ICDDX^ICDCODE(ICD9IEN),U,6)
"RTN","PXRRFDSD",96,0)
 I DCIEN'>0 S DCIEN=0
"RTN","PXRRFDSD",97,0)
 I '$D(^TMP(PXRRXTMP,$J,"DIAG",STOIND,"DC",DCIEN)) S ^TMP(PXRRXTMP,$J,"DIAG",STOIND,"DC",DCIEN)=1
"RTN","PXRRFDSD",98,0)
 E  S ^TMP(PXRRXTMP,$J,"DIAG",STOIND,"DC",DCIEN)=^TMP(PXRRXTMP,$J,"DIAG",STOIND,"DC",DCIEN)+1
"RTN","PXRRFDSD",99,0)
 ;
"RTN","PXRRFDSD",100,0)
 G DIAG
"RTN","PXRRFDSD",101,0)
 ;
"RTN","PXRRFDSD",102,0)
SETPR ;Rearrange the information for printing.
"RTN","PXRRFDSD",103,0)
 S STOIND=""
"RTN","PXRRFDSD",104,0)
NEXTSTO S STOIND=$O(^TMP(PXRRXTMP,$J,"DIAG",STOIND))
"RTN","PXRRFDSD",105,0)
 I STOIND="" G EXIT
"RTN","PXRRFDSD",106,0)
 I '(PXRRQUE!$D(IO("S"))) D SPIN^PXRRBUSY("Sorting diagnoses",.BUSY)
"RTN","PXRRFDSD",107,0)
 ;
"RTN","PXRRFDSD",108,0)
 S ICD9IEN=""
"RTN","PXRRFDSD",109,0)
NEXTIC S ICD9IEN=$O(^TMP(PXRRXTMP,$J,"DIAG",STOIND,"ICD9",ICD9IEN))
"RTN","PXRRFDSD",110,0)
 I ICD9IEN="" G STDC
"RTN","PXRRFDSD",111,0)
 S COUNT=^TMP(PXRRXTMP,$J,"DIAG",STOIND,"ICD9",ICD9IEN)
"RTN","PXRRFDSD",112,0)
 S DIAGTOT=DIAGTOT+COUNT
"RTN","PXRRFDSD",113,0)
 S ^XTMP(PXRRXTMP,"PRINT",STOIND,"ICD9",COUNT,ICD9IEN)="DIAG"_ICD9IEN
"RTN","PXRRFDSD",114,0)
 G NEXTIC
"RTN","PXRRFDSD",115,0)
 ;
"RTN","PXRRFDSD",116,0)
 ;
"RTN","PXRRFDSD",117,0)
STDC S DCIEN=""
"RTN","PXRRFDSD",118,0)
NEXTDC S DCIEN=$O(^TMP(PXRRXTMP,$J,"DIAG",STOIND,"DC",DCIEN))
"RTN","PXRRFDSD",119,0)
 I DCIEN="" G NEXTSTO
"RTN","PXRRFDSD",120,0)
 S COUNT=^TMP(PXRRXTMP,$J,"DIAG",STOIND,"DC",DCIEN)
"RTN","PXRRFDSD",121,0)
 S ^XTMP(PXRRXTMP,"PRINT",STOIND,"DC",COUNT,DCIEN)=""
"RTN","PXRRFDSD",122,0)
 G NEXTDC
"RTN","PXRRFDSD",123,0)
 ;
"RTN","PXRRFDSD",124,0)
EXIT ;
"RTN","PXRRFDSD",125,0)
 ;Kill the arrays we are done with.
"RTN","PXRRFDSD",126,0)
 K ^TMP(PXRRXTMP,$J,"DIAG")
"RTN","PXRRFDSD",127,0)
 K ^XTMP(PXRRXTMP,"ENCTR")
"RTN","PXRRFDSD",128,0)
 ;
"RTN","PXRRFDSD",129,0)
 S STOIND=""
"RTN","PXRRFDSD",130,0)
 F  S STOIND=$O(ENCTOT(STOIND)) Q:STOIND=""  D
"RTN","PXRRFDSD",131,0)
 . S ^XTMP(PXRRXTMP,"TOTALS","DIAGTOT",STOIND)=DIAGTOT(STOIND)
"RTN","PXRRFDSD",132,0)
 . S ^XTMP(PXRRXTMP,"TOTALS","ENCTOT",STOIND)=ENCTOT(STOIND)
"RTN","PXRRFDSD",133,0)
 ;
"RTN","PXRRFDSD",134,0)
 I '(PXRRQUE!$D(IO("S"))) D DONE^PXRRBUSY("done")
"RTN","PXRRFDSD",135,0)
 ;
"RTN","PXRRFDSD",136,0)
 ;Print the report.
"RTN","PXRRFDSD",137,0)
 I PXRRQUE D
"RTN","PXRRFDSD",138,0)
 . N DESC,ROUTINE,TASK
"RTN","PXRRFDSD",139,0)
 . S DESC="Frequency of diagnosis report - print"
"RTN","PXRRFDSD",140,0)
 . S ROUTINE="PXRRFDP"
"RTN","PXRRFDSD",141,0)
 . S TASK=^XTMP(PXRRXTMP,"PRZTSK")
"RTN","PXRRFDSD",142,0)
 . S ZTDTH=$$NOW^XLFDT
"RTN","PXRRFDSD",143,0)
 . D REQUE^PXRRQUE(DESC,ROUTINE,TASK)
"RTN","PXRRFDSD",144,0)
 E  D ^PXRRFDP
"RTN","PXRRFDSD",145,0)
 ;
"RTN","PXRRFDSD",146,0)
 Q
"RTN","PXRRPAPI")
0^25^B62098883
"RTN","PXRRPAPI",1,0)
PXRRPAPI ;ISL/PKR - Build the patient specific info for each patient on the list. ;6/27/97
"RTN","PXRRPAPI",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**18,121**;Aug 12, 1996
"RTN","PXRRPAPI",3,0)
 ;
"RTN","PXRRPAPI",4,0)
PAT ;
"RTN","PXRRPAPI",5,0)
 N ACTIVITY,BACDATE,BD,BUSY,DATE,DFN,EACDATE,ED,ERIEN,ERR
"RTN","PXRRPAPI",6,0)
 N IC,IEN,JC,FACIEN,FACNAM
"RTN","PXRRPAPI",7,0)
 N HLOCIEN,HLOCNAM,LABTEST,LOCIEN,LRDFN,NERM
"RTN","PXRRPAPI",8,0)
 N PNAME,SPEC,SSN,SSNF,UNITS
"RTN","PXRRPAPI",9,0)
 N TEMP
"RTN","PXRRPAPI",10,0)
 ;
"RTN","PXRRPAPI",11,0)
 ;Allow the task to be cleaned up upon successful completion.
"RTN","PXRRPAPI",12,0)
 S ZTREQ="@"
"RTN","PXRRPAPI",13,0)
 ;
"RTN","PXRRPAPI",14,0)
 S BACDATE=PXRRBCDT-.0001
"RTN","PXRRPAPI",15,0)
 S EACDATE=PXRRECDT+.2359
"RTN","PXRRPAPI",16,0)
 ;
"RTN","PXRRPAPI",17,0)
 ;Build a list of emergency room iens, get list from PCE parameter file.
"RTN","PXRRPAPI",18,0)
 S NERM=0
"RTN","PXRRPAPI",19,0)
 S IC=0
"RTN","PXRRPAPI",20,0)
 F  S IC=$O(^PX(815,IC)) Q:+IC=0  D
"RTN","PXRRPAPI",21,0)
 . S JC=0
"RTN","PXRRPAPI",22,0)
 . F  S JC=$O(^PX(815,IC,"RR1",JC)) Q:+JC=0  D
"RTN","PXRRPAPI",23,0)
 .. S NERM=NERM+1
"RTN","PXRRPAPI",24,0)
 .. S TEMP=^PX(815,IC,"RR1",JC,0)
"RTN","PXRRPAPI",25,0)
 .. S ERIEN(NERM)=TEMP_U_$P(^SC(TEMP,0),U,1)
"RTN","PXRRPAPI",26,0)
 ;
"RTN","PXRRPAPI",27,0)
 I '(PXRRQUE!$D(IO("S"))) D INIT^PXRRBUSY(.BUSY)
"RTN","PXRRPAPI",28,0)
 ;
"RTN","PXRRPAPI",29,0)
 S FACIEN=""
"RTN","PXRRPAPI",30,0)
NFAC1 S FACIEN=$O(^XTMP(PXRRXTMP,"APPT",FACIEN))
"RTN","PXRRPAPI",31,0)
 I +FACIEN=0 G DONE
"RTN","PXRRPAPI",32,0)
 ;
"RTN","PXRRPAPI",33,0)
 S HLOCIEN=""
"RTN","PXRRPAPI",34,0)
NHLOC1 S HLOCIEN=$O(^XTMP(PXRRXTMP,"APPT",FACIEN,HLOCIEN))
"RTN","PXRRPAPI",35,0)
 I +HLOCIEN=0 G NFAC1
"RTN","PXRRPAPI",36,0)
 ;
"RTN","PXRRPAPI",37,0)
 ;Check for a user request to stop the task.
"RTN","PXRRPAPI",38,0)
 I $$S^%ZTLOAD S ZTSTOP=1 D EXIT^PXRRGUT
"RTN","PXRRPAPI",39,0)
 ;
"RTN","PXRRPAPI",40,0)
 S DFN=0
"RTN","PXRRPAPI",41,0)
NPAT S DFN=$O(^XTMP(PXRRXTMP,"APPT",FACIEN,HLOCIEN,DFN))
"RTN","PXRRPAPI",42,0)
 I +DFN=0 G NHLOC1
"RTN","PXRRPAPI",43,0)
 S ACTIVITY=0
"RTN","PXRRPAPI",44,0)
 ;
"RTN","PXRRPAPI",45,0)
 ;If this is an interactive session let the user know that something
"RTN","PXRRPAPI",46,0)
 ;is happening.
"RTN","PXRRPAPI",47,0)
 I '(PXRRQUE!$D(IO("S"))) D SPIN^PXRRBUSY("Sorting patient information",.BUSY)
"RTN","PXRRPAPI",48,0)
 ;
"RTN","PXRRPAPI",49,0)
 ;Emergency room visits.
"RTN","PXRRPAPI",50,0)
 I NERM>0 D
"RTN","PXRRPAPI",51,0)
 . S BD=BACDATE
"RTN","PXRRPAPI",52,0)
 . S ED=EACDATE
"RTN","PXRRPAPI",53,0)
 . F  S BD=$O(^AUPNVSIT("AET",DFN,BD)) Q:((BD>EACDATE)!(BD=""))  D
"RTN","PXRRPAPI",54,0)
 .. S LOCIEN=""
"RTN","PXRRPAPI",55,0)
 .. F  S LOCIEN=$O(^AUPNVSIT("AET",DFN,BD,LOCIEN)) Q:LOCIEN=""  D
"RTN","PXRRPAPI",56,0)
 ... F IC=1:1:NERM  D
"RTN","PXRRPAPI",57,0)
 .... I $P(ERIEN(IC),U,1)=LOCIEN D
"RTN","PXRRPAPI",58,0)
 ..... S ^TMP(PXRRXTMP,$J,"ER",DFN,BD)=ERIEN(IC)
"RTN","PXRRPAPI",59,0)
 . I $D(^TMP(PXRRXTMP,$J,"ER",DFN)) S ACTIVITY=1
"RTN","PXRRPAPI",60,0)
 ;
"RTN","PXRRPAPI",61,0)
 ;Build a list of future appointments.
"RTN","PXRRPAPI",62,0)
 D KVA^VADPT
"RTN","PXRRPAPI",63,0)
 S VASD("F")=PXRRBFDT
"RTN","PXRRPAPI",64,0)
 S VASD("T")=PXRREFDT
"RTN","PXRRPAPI",65,0)
 D SDA^VADPT
"RTN","PXRRPAPI",66,0)
 S IC=0
"RTN","PXRRPAPI",67,0)
 F  S IC=$O(^UTILITY("VASD",$J,IC)) Q:+IC=0  D
"RTN","PXRRPAPI",68,0)
 . S ^TMP(PXRRXTMP,$J,"FUT",DFN,IC)=^UTILITY("VASD",$J,IC,"E")
"RTN","PXRRPAPI",69,0)
 K ^UTILITY("VASD",$J)
"RTN","PXRRPAPI",70,0)
 D KVA^VADPT
"RTN","PXRRPAPI",71,0)
 I $D(^TMP(PXRRXTMP,$J,"FUT",DFN)) S ACTIVITY=1
"RTN","PXRRPAPI",72,0)
 ;
"RTN","PXRRPAPI",73,0)
 ;Save all admissions and discharges in the date range.
"RTN","PXRRPAPI",74,0)
 ;We will need a DBIA to use the cross-ref.  Numerous similar
"RTN","PXRRPAPI",75,0)
 ;ones are already in place, i.e.,  DBIA244-D, DBIA325-B, DBIA966, DBIA1358.
"RTN","PXRRPAPI",76,0)
 S BD=BACDATE
"RTN","PXRRPAPI",77,0)
 S ED=EACDATE
"RTN","PXRRPAPI",78,0)
NADM S BD=$O(^DGPM("APTT1",DFN,BD))
"RTN","PXRRPAPI",79,0)
 ;If we have passed the ending date we are done.
"RTN","PXRRPAPI",80,0)
 I (BD>ED)!(BD="") G DIS
"RTN","PXRRPAPI",81,0)
 S IEN=$O(^DGPM("APTT1",DFN,BD,""))
"RTN","PXRRPAPI",82,0)
 S ^TMP(PXRRXTMP,$J,"ADM",DFN,BD,IEN)=""
"RTN","PXRRPAPI",83,0)
 G NADM
"RTN","PXRRPAPI",84,0)
 I $D(^TMP(PXRRXTMP,$J,"ADM",DFN)) S ACTIVITY=1
"RTN","PXRRPAPI",85,0)
 ;
"RTN","PXRRPAPI",86,0)
DIS S BD=BACDATE
"RTN","PXRRPAPI",87,0)
 S ED=EACDATE
"RTN","PXRRPAPI",88,0)
NDIS S BD=$O(^DGPM("APTT3",DFN,BD))
"RTN","PXRRPAPI",89,0)
 ;If we have passed the ending date we are done.
"RTN","PXRRPAPI",90,0)
 I (BD>ED)!(BD="") G CLAB
"RTN","PXRRPAPI",91,0)
 S IEN=$O(^DGPM("APTT3",DFN,BD,""))
"RTN","PXRRPAPI",92,0)
 S ^TMP(PXRRXTMP,$J,"DIS",DFN,BD,IEN)=""
"RTN","PXRRPAPI",93,0)
 G NDIS
"RTN","PXRRPAPI",94,0)
 I $D(^TMP(PXRRXTMP,$J,"DIS",DFN)) S ACTIVITY=1
"RTN","PXRRPAPI",95,0)
 ;
"RTN","PXRRPAPI",96,0)
 ;Get critical lab values.
"RTN","PXRRPAPI",97,0)
 ;This will probably require a DBIA to read DPT.
"RTN","PXRRPAPI",98,0)
 ;We will need a DBIA to look at lab stuff.
"RTN","PXRRPAPI",99,0)
CLAB S LRDFN=$G(^DPT(DFN,"LR"))
"RTN","PXRRPAPI",100,0)
 I LRDFN="" G SAVPAT
"RTN","PXRRPAPI",101,0)
 S ED=$$FMDFINVL^PXRMDATE(BACDATE,0)
"RTN","PXRRPAPI",102,0)
 S BD=$$FMDFINVL^PXRMDATE(EACDATE,0)
"RTN","PXRRPAPI",103,0)
NLAB S BD=$O(^LR(LRDFN,"CH",BD))
"RTN","PXRRPAPI",104,0)
 ;If we have passed the ending date we are done.
"RTN","PXRRPAPI",105,0)
 I (BD>ED)!(BD="") G SAVPAT
"RTN","PXRRPAPI",106,0)
 S IC=0
"RTN","PXRRPAPI",107,0)
 F  S IC=$O(^LR(LRDFN,"CH",BD,IC)) Q:+IC=0  D
"RTN","PXRRPAPI",108,0)
 . S TEMP=$G(^LR(LRDFN,"CH",BD,IC))
"RTN","PXRRPAPI",109,0)
 . I $P(TEMP,U,2)["*" D
"RTN","PXRRPAPI",110,0)
 .. D FIELD^DID(63.04,IC,"","LABEL","LABTEST","ERR")
"RTN","PXRRPAPI",111,0)
 ..;Try to get the units.
"RTN","PXRRPAPI",112,0)
 .. S SPEC=$P(^LR(LRDFN,"CH",BD,0),U,5)
"RTN","PXRRPAPI",113,0)
 .. S JC=$O(^LAB(60,"C","CH;"_IC_";1",""))
"RTN","PXRRPAPI",114,0)
 .. S UNITS=$P($G(^LAB(60,JC,1,SPEC,0)),U,7)
"RTN","PXRRPAPI",115,0)
 .. S ^TMP(PXRRXTMP,$J,"CLAB",DFN,BD,IC)=LABTEST("LABEL")_U_TEMP_U_UNITS
"RTN","PXRRPAPI",116,0)
 G NLAB
"RTN","PXRRPAPI",117,0)
 I $D(^TMP(PXRRXTMP,$J,"CLAB",DFN)) S ACTIVITY=1
"RTN","PXRRPAPI",118,0)
 ;
"RTN","PXRRPAPI",119,0)
SAVPAT ;Save the patient data in XTMP in a format suitable for printing.
"RTN","PXRRPAPI",120,0)
 ;We only want those patients that had some activity.
"RTN","PXRRPAPI",121,0)
 I 'ACTIVITY G NPAT
"RTN","PXRRPAPI",122,0)
 S TEMP=$G(^DPT(DFN,0))
"RTN","PXRRPAPI",123,0)
 S PNAME=$P(TEMP,U,1)
"RTN","PXRRPAPI",124,0)
 S SSN=$P(TEMP,U,9)
"RTN","PXRRPAPI",125,0)
 S FACNAM=PXRRFACN(FACIEN)_U_FACIEN
"RTN","PXRRPAPI",126,0)
 S HLOCNAM=$P($G(^SC(HLOCIEN,0)),U,1)
"RTN","PXRRPAPI",127,0)
 S ^XTMP(PXRRXTMP,"ALPHA",FACNAM,HLOCNAM_U_HLOCIEN,PNAME,SSN)=DFN
"RTN","PXRRPAPI",128,0)
 D KVA^VADPT
"RTN","PXRRPAPI",129,0)
 D ADD^VADPT
"RTN","PXRRPAPI",130,0)
 S SSNF=$$SSNFORM(SSN)
"RTN","PXRRPAPI",131,0)
 S ^XTMP(PXRRXTMP,"PATIENT",DFN)=SSNF_U_VAPA(1)_U_VAPA(2)_U_VAPA(3)_U_VAPA(4)_U_VAPA(5)_U_VAPA(6)_U_VAPA(8)
"RTN","PXRRPAPI",132,0)
 D KVA^VADPT
"RTN","PXRRPAPI",133,0)
 ;
"RTN","PXRRPAPI",134,0)
 ;Appointment data.
"RTN","PXRRPAPI",135,0)
 S IC=0
"RTN","PXRRPAPI",136,0)
 F  S IC=$O(^XTMP(PXRRXTMP,"APPT",FACIEN,HLOCIEN,DFN,IC)) Q:+IC=0  D
"RTN","PXRRPAPI",137,0)
 . S ^XTMP(PXRRXTMP,FACIEN,HLOCIEN,DFN,"APPT",IC)=^XTMP(PXRRXTMP,"APPT",FACIEN,HLOCIEN,DFN,IC)
"RTN","PXRRPAPI",138,0)
 ;
"RTN","PXRRPAPI",139,0)
 ;Process admission data, build a complete entry including discharge
"RTN","PXRRPAPI",140,0)
 ;date, last treating specialty, last provider, admitting diagnosis.
"RTN","PXRRPAPI",141,0)
 S IC=0
"RTN","PXRRPAPI",142,0)
 F  S IC=$O(^TMP(PXRRXTMP,$J,"ADM",DFN,IC)) Q:+IC=0  D
"RTN","PXRRPAPI",143,0)
 . S IEN=$O(^TMP(PXRRXTMP,$J,"ADM",DFN,IC,""))
"RTN","PXRRPAPI",144,0)
 . D ADMISS(DFN,IC,IEN)
"RTN","PXRRPAPI",145,0)
 ;
"RTN","PXRRPAPI",146,0)
 ;Process discharge admission data, build a complete entry just as for
"RTN","PXRRPAPI",147,0)
 ;admissions above.  Match the discharge to the admission, avoiding
"RTN","PXRRPAPI",148,0)
 ;duplicate entries.
"RTN","PXRRPAPI",149,0)
 S IC=0
"RTN","PXRRPAPI",150,0)
 F  S IC=$O(^TMP(PXRRXTMP,$J,"DIS",DFN,IC)) Q:+IC=0  D
"RTN","PXRRPAPI",151,0)
 . S IEN=$O(^TMP(PXRRXTMP,$J,"DIS",DFN,IC,""))
"RTN","PXRRPAPI",152,0)
 . D DISCHRG(DFN,IC,IEN)
"RTN","PXRRPAPI",153,0)
 ;
"RTN","PXRRPAPI",154,0)
 ;Look for any current inpatient data whose admission we may have
"RTN","PXRRPAPI",155,0)
 ;missed.
"RTN","PXRRPAPI",156,0)
 I '$D(^XTMP(PXRRXTMP,FACIEN,HLOCIEN,DFN,"ADMDIS")) D
"RTN","PXRRPAPI",157,0)
 . D KVA^VADPT
"RTN","PXRRPAPI",158,0)
 . D IN5^VADPT
"RTN","PXRRPAPI",159,0)
 . I $L(VAIP(13))>0 D
"RTN","PXRRPAPI",160,0)
 .. S DATE=$P(VAIP(13,1),U,1)
"RTN","PXRRPAPI",161,0)
 ..;The admission date must be less than the beginning activity date
"RTN","PXRRPAPI",162,0)
 ..;in order for the patient to be an inpatient during the activity
"RTN","PXRRPAPI",163,0)
 ..;date range.
"RTN","PXRRPAPI",164,0)
 .. I DATE<PXRRBCDT D
"RTN","PXRRPAPI",165,0)
 ...;Ward
"RTN","PXRRPAPI",166,0)
 ... S TEMP=$P(VAIP(14,4),U,2)
"RTN","PXRRPAPI",167,0)
 ...;Last treating specialty
"RTN","PXRRPAPI",168,0)
 ... S TEMP=TEMP_U_$P(VAIP(14,6),U,2)
"RTN","PXRRPAPI",169,0)
 ... ;Last provider
"RTN","PXRRPAPI",170,0)
 ... S TEMP=TEMP_U_$P(VAIP(14,5),U,2)
"RTN","PXRRPAPI",171,0)
 ...;Admitting diagnosis
"RTN","PXRRPAPI",172,0)
 ... S TEMP=TEMP_U_VAIP(13,7)
"RTN","PXRRPAPI",173,0)
 ... S DISDATE=DT+1
"RTN","PXRRPAPI",174,0)
 ... S ^XTMP(PXRRXTMP,FACIEN,HLOCIEN,DFN,"ADMDIS",DATE,DISDATE)=TEMP
"RTN","PXRRPAPI",175,0)
 ;
"RTN","PXRRPAPI",176,0)
 ;Critical lab data.
"RTN","PXRRPAPI",177,0)
 S IC=0
"RTN","PXRRPAPI",178,0)
 F  S IC=$O(^TMP(PXRRXTMP,$J,"CLAB",DFN,IC)) Q:+IC=0  D
"RTN","PXRRPAPI",179,0)
 . S TEMP=$$FMDFINVL^PXRMDATE(IC,1)
"RTN","PXRRPAPI",180,0)
 . S JC=0
"RTN","PXRRPAPI",181,0)
 . F  S JC=$O(^TMP(PXRRXTMP,$J,"CLAB",DFN,IC,JC)) Q:+JC=0  D
"RTN","PXRRPAPI",182,0)
 .. S ^XTMP(PXRRXTMP,FACIEN,HLOCIEN,DFN,"CLAB",TEMP,JC)=^TMP(PXRRXTMP,$J,"CLAB",DFN,IC,JC)
"RTN","PXRRPAPI",183,0)
 ;
"RTN","PXRRPAPI",184,0)
 ;Emergency room visits.
"RTN","PXRRPAPI",185,0)
 S IC=0
"RTN","PXRRPAPI",186,0)
 F  S IC=$O(^TMP(PXRRXTMP,$J,"ER",DFN,IC)) Q:+IC=0  D
"RTN","PXRRPAPI",187,0)
 . S ^XTMP(PXRRXTMP,FACIEN,HLOCIEN,DFN,"ER",IC)=^TMP(PXRRXTMP,$J,"ER",DFN,IC)
"RTN","PXRRPAPI",188,0)
 ;
"RTN","PXRRPAPI",189,0)
 ;Future appointments.
"RTN","PXRRPAPI",190,0)
 S IC=0
"RTN","PXRRPAPI",191,0)
 F  S IC=$O(^TMP(PXRRXTMP,$J,"FUT",DFN,IC)) Q:+IC=0  D
"RTN","PXRRPAPI",192,0)
 . S ^XTMP(PXRRXTMP,FACIEN,HLOCIEN,DFN,"FUT",IC)=^TMP(PXRRXTMP,$J,"FUT",DFN,IC)
"RTN","PXRRPAPI",193,0)
 ;
"RTN","PXRRPAPI",194,0)
 G NPAT
"RTN","PXRRPAPI",195,0)
DONE ;
"RTN","PXRRPAPI",196,0)
 I '(PXRRQUE!$D(IO("S"))) D DONE^PXRRBUSY("done")
"RTN","PXRRPAPI",197,0)
 ;
"RTN","PXRRPAPI",198,0)
EXIT ;
"RTN","PXRRPAPI",199,0)
 K ^TMP(PXRRXTMP)
"RTN","PXRRPAPI",200,0)
 ;
"RTN","PXRRPAPI",201,0)
 ;Print the report.
"RTN","PXRRPAPI",202,0)
 I PXRRQUE D 
"RTN","PXRRPAPI",203,0)
 .;Start the report that was queued but not scheduled.
"RTN","PXRRPAPI",204,0)
 . N DESC,ROUTINE,TASK
"RTN","PXRRPAPI",205,0)
 . S DESC="Patient Activity Report - print"
"RTN","PXRRPAPI",206,0)
 . S ROUTINE="PXRRPAPR"
"RTN","PXRRPAPI",207,0)
 . S ZTDTH=$$NOW^XLFDT
"RTN","PXRRPAPI",208,0)
 . S TASK=^XTMP(PXRRXTMP,"PRZTSK")
"RTN","PXRRPAPI",209,0)
 . D REQUE^PXRRQUE(DESC,ROUTINE,TASK)
"RTN","PXRRPAPI",210,0)
 E  D ^PXRRPAPR
"RTN","PXRRPAPI",211,0)
 Q
"RTN","PXRRPAPI",212,0)
 ;
"RTN","PXRRPAPI",213,0)
 ;=======================================================================
"RTN","PXRRPAPI",214,0)
ADMISS(DFN,DATE,IEN) ;Given a patient and an admission date find the
"RTN","PXRRPAPI",215,0)
 ;associated discharge, if any.  Save the other information listed
"RTN","PXRRPAPI",216,0)
 ;below.
"RTN","PXRRPAPI",217,0)
 N DISDATE,TEMP
"RTN","PXRRPAPI",218,0)
 D KVA^VADPT
"RTN","PXRRPAPI",219,0)
 S VAIP("D")=DATE
"RTN","PXRRPAPI",220,0)
 S VAIP("E")=IEN
"RTN","PXRRPAPI",221,0)
 S VAIP("M")=0
"RTN","PXRRPAPI",222,0)
 D IN5^VADPT
"RTN","PXRRPAPI",223,0)
 ;Store the information in TEMP in printing order.
"RTN","PXRRPAPI",224,0)
 ;Ward
"RTN","PXRRPAPI",225,0)
 S TEMP=$P(VAIP(14,4),U,2)
"RTN","PXRRPAPI",226,0)
 ;Last treating specialty
"RTN","PXRRPAPI",227,0)
 S TEMP=TEMP_U_$P(VAIP(14,6),U,2)
"RTN","PXRRPAPI",228,0)
 ;Last provider
"RTN","PXRRPAPI",229,0)
 S TEMP=TEMP_U_$P(VAIP(14,5),U,2)
"RTN","PXRRPAPI",230,0)
 ;Admitting diagnosis
"RTN","PXRRPAPI",231,0)
 S TEMP=TEMP_U_VAIP(13,7)
"RTN","PXRRPAPI",232,0)
 I $L(VAIP(17))>0 D
"RTN","PXRRPAPI",233,0)
 . S DISDATE=$P(VAIP(17,1),U,1)
"RTN","PXRRPAPI",234,0)
 E  D
"RTN","PXRRPAPI",235,0)
 . S DISDATE=DT+1
"RTN","PXRRPAPI",236,0)
 S ^XTMP(PXRRXTMP,FACIEN,HLOCIEN,DFN,"ADMDIS",DATE,DISDATE)=TEMP
"RTN","PXRRPAPI",237,0)
 ;
"RTN","PXRRPAPI",238,0)
ADMDONE ;
"RTN","PXRRPAPI",239,0)
 D KVA^VADPT
"RTN","PXRRPAPI",240,0)
 Q
"RTN","PXRRPAPI",241,0)
 ;
"RTN","PXRRPAPI",242,0)
 ;=======================================================================
"RTN","PXRRPAPI",243,0)
DISCHRG(DFN,DATE,IEN) ;Given a patient and a discharge date find the
"RTN","PXRRPAPI",244,0)
 ;associated admission.  Determine if the combined admission-discharge
"RTN","PXRRPAPI",245,0)
 ;data has already been stored.  If it has quit otherwise store it.
"RTN","PXRRPAPI",246,0)
 N ADMDATE,ICD9IEN,TEMP
"RTN","PXRRPAPI",247,0)
 D KVA^VADPT
"RTN","PXRRPAPI",248,0)
 S VAIP("D")=$P(DATE,".",1)
"RTN","PXRRPAPI",249,0)
 S VAIP("E")=IEN
"RTN","PXRRPAPI",250,0)
 S VAIP("M")=0
"RTN","PXRRPAPI",251,0)
 D IN5^VADPT
"RTN","PXRRPAPI",252,0)
 S ADMDATE=$P(VAIP(13,1),U,1)
"RTN","PXRRPAPI",253,0)
 I ADMDATE="" S ADMDATE=DATE_"NA"
"RTN","PXRRPAPI",254,0)
 I $D(^XTMP(PXRRXTMP,FACIEN,HLOCIEN,DFN,"ADMDIS",ADMDATE,DATE)) G DISDONE
"RTN","PXRRPAPI",255,0)
 ;Information is not already there, store the data.
"RTN","PXRRPAPI",256,0)
 ;Ward
"RTN","PXRRPAPI",257,0)
 S TEMP=""
"RTN","PXRRPAPI",258,0)
 ;Last treating specialty
"RTN","PXRRPAPI",259,0)
 S TEMP=TEMP_U_$P(VAIP(17,6),U,2)
"RTN","PXRRPAPI",260,0)
 ;Last provider
"RTN","PXRRPAPI",261,0)
 S TEMP=TEMP_U_$P(VAIP(17,5),U,2)
"RTN","PXRRPAPI",262,0)
 ;Admitting diagnosis
"RTN","PXRRPAPI",263,0)
 S TEMP=TEMP_U_VAIP(13,7)
"RTN","PXRRPAPI",264,0)
 ;Will need a DBIA for these reads.
"RTN","PXRRPAPI",265,0)
 ;Try to get DXLS
"RTN","PXRRPAPI",266,0)
 I +VAIP(12)>0 S ICD9IEN=$P($G(^DGPT(VAIP(12),70)),U,10)
"RTN","PXRRPAPI",267,0)
 ;I +$G(ICD9IEN)>0 S TEMP=TEMP_U_$P(^ICD9(ICD9IEN,0),U,3)
"RTN","PXRRPAPI",268,0)
 I +$G(ICD9IEN)>0 S TEMP=TEMP_U_$P($$ICDDX^ICDCODE(ICD9IEN),U,4)
"RTN","PXRRPAPI",269,0)
 ;
"RTN","PXRRPAPI",270,0)
 S ^XTMP(PXRRXTMP,FACIEN,HLOCIEN,DFN,"ADMDIS",ADMDATE,DATE)=TEMP
"RTN","PXRRPAPI",271,0)
DISDONE ;
"RTN","PXRRPAPI",272,0)
 D KVA^VADPT
"RTN","PXRRPAPI",273,0)
 Q
"RTN","PXRRPAPI",274,0)
 ;
"RTN","PXRRPAPI",275,0)
 ;=======================================================================
"RTN","PXRRPAPI",276,0)
SSNFORM(SSN) ;Format the social security number with dashes.
"RTN","PXRRPAPI",277,0)
 N FSSN,TEMP
"RTN","PXRRPAPI",278,0)
 S TEMP=$E(SSN,1,3)
"RTN","PXRRPAPI",279,0)
 S FSSN=TEMP_"-"
"RTN","PXRRPAPI",280,0)
 S TEMP=$E(SSN,4,5)
"RTN","PXRRPAPI",281,0)
 S FSSN=FSSN_TEMP_"-"
"RTN","PXRRPAPI",282,0)
 S TEMP=$E(SSN,6,9)
"RTN","PXRRPAPI",283,0)
 S FSSN=FSSN_TEMP
"RTN","PXRRPAPI",284,0)
 Q FSSN
"RTN","PXRRPAPI",285,0)
 ;
"RTN","PXRRPCE3")
0^28^B26611313
"RTN","PXRRPCE3",1,0)
PXRRPCE3 ;HIN/MjK - Clinic Specific Workload Reports ;6/7/96
"RTN","PXRRPCE3",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**121**;;Aug 12, 1996
"RTN","PXRRPCE3",3,0)
EN ;_._._._._._._.Visit Totals/ Patient Ages/ Unsched Totals_._._._._._.
"RTN","PXRRPCE3",4,0)
 ; Z = Visit Dt/Time
"RTN","PXRRPCE3",5,0)
 D INITVAR^PXRRPCE5 ;Initialize counter variables
"RTN","PXRRPCE3",6,0)
 S (X,Y)=0 F  S X=$O(PXRRCLIN(X)) Q:'X  S Y=Y+1,PXRCLNUM=Y
"RTN","PXRRPCE3",7,0)
 S PXRRY=PXRRYR F  S PXRRY=$O(^AUPNVSIT("B",PXRRY)) Q:'PXRRY!((PXRRY>PXRREDT))  S PXRRVIFN=0 F  S PXRRVIFN=$O(^AUPNVSIT("B",PXRRY,PXRRVIFN)) Q:'PXRRVIFN  I $P($G(^AUPNVSIT(PXRRVIFN,0)),U,22)=PXRRCLIN D
"RTN","PXRRPCE3",8,0)
 . S X=$P($G(^AUPNVSIT(PXRRVIFN,0)),U,7) Q:X'="A"&(X'="I")&(X'="S")
"RTN","PXRRPCE3",9,0)
 . S Z=$P(^AUPNVSIT(PXRRVIFN,0),U),DFN=$P(^AUPNVSIT(PXRRVIFN,0),U,5)
"RTN","PXRRPCE3",10,0)
 . ;_._._._._._._._.Demographics - Sessions, Ages_._._._._._._._.
"RTN","PXRRPCE3",11,0)
 . S PXRRTVS=PXRRTVS+1 I Z>PXRRBDT S PXRRSESS=$S($D(Z($P(Z,"."))):PXRRSESS,1:PXRRSESS+1),Z($P(Z,"."))=""
"RTN","PXRRPCE3",12,0)
 . D AGE
"RTN","PXRRPCE3",13,0)
 . ;_._._._._._._._._._All Clinic Patients_._._._._._._._._._
"RTN","PXRRPCE3",14,0)
 . S PXRRAPT=$P(Z,".") F  S PXRRAPT=$O(^DPT("S",DFN,PXRRAPT)) Q:'PXRRAPT!(PXRRAPT>($$FMADD^XLFDT(PXRRAPT,1)))  I $P(^DPT(DFN,"S",PXRRAPT,0),U)=PXRRCLIN S:$P(^DPT(DFN,"S",PXRRAPT,0),U,7)=4 PXRRSXUN=PXRRSXUN+1
"RTN","PXRRPCE3",15,0)
 . S ^TMP($J,PXRRCLIN,"PATIENT APPTS",Z,DFN)=""
"RTN","PXRRPCE3",16,0)
 . S ^TMP($J,PXRRCLIN,"CLINIC PATIENTS",DFN)=""
"RTN","PXRRPCE3",17,0)
 . ;_._._._._._._._._._._._._Diagnoses_._._._._._._._._._._._._.
"RTN","PXRRPCE3",18,0)
 . ;B = V POV IEN ; C = ICD Code
"RTN","PXRRPCE3",19,0)
 . ;S B="" F  S B=$O(^AUPNVPOV("AD",PXRRVIFN,B)) Q:'B  S C=$P(^ICD9($P(^AUPNVPOV(B,0),U),0),U),C=$S('+C:C,1:+C) S:(C'?1"272.".E)&(C'?1"305.".E) C=$P(C,".") S ^TMP($J,PXRRCLIN,"ICD",Z,C,DFN)="",^TMP($J,PXRRCLIN,"ICD PAT",C,DFN,Z""
"RTN","PXRRPCE3",20,0)
 . S B="" F  S B=$O(^AUPNVPOV("AD",PXRRVIFN,B)) Q:'B  S C=$P($$ICDDX^ICDCODE($P(^AUPNVPOV(B,0),U)),U,2),C=$S('+C:C,1:+C) S:(C'?1"272.".E)&(C'?1"305.".E) C=$P(C,".") S ^TMP($J,PXRRCLIN,"ICD",Z,C,DFN)="",^TMP($J,PXRRCLIN,"ICD PAT",C,DFN,Z)=""
"RTN","PXRRPCE3",21,0)
MEDAGE ;_._._._._._._._._._._._._._Median Age_._._._._._._._._._._._._._._.
"RTN","PXRRPCE3",22,0)
 S X=0 F  S X=$O(^TMP($J,PXRRCLIN,"PATIENT AGE",X)) Q:'X  S DFN=0 F  S DFN=$O(^TMP($J,PXRRCLIN,"PATIENT AGE",X,DFN)) Q:'DFN  D
"RTN","PXRRPCE3",23,0)
 . S Y=$G(^TMP($J,PXRRCLIN,"PATIENT AGE",X,DFN))
"RTN","PXRRPCE3",24,0)
 . I (Y>PXRRBDT),(Y<PXRREDT) S PXRRAGE=PXRRAGE+1,Y(PXRRAGE)=X
"RTN","PXRRPCE3",25,0)
 S PXRRAGE=PXRRAGE\2,PXRRAG=$G(Y(PXRRAGE)) K Y
"RTN","PXRRPCE3",26,0)
 ;_._._._._._._._._._._._._._Diagnosis Totals_._._._._._._._._._._._._.
"RTN","PXRRPCE3",27,0)
 ;C = ICD ;E = date
"RTN","PXRRPCE3",28,0)
 Q:'$D(^TMP($J,PXRRCLIN,"CLINIC PATIENTS"))!'(PXRRSESS)
"RTN","PXRRPCE3",29,0)
 F C=272.2,272.4,250,401,414,305.1 S PXRR(C)=0
"RTN","PXRRPCE3",30,0)
 S E=0 F  S E=$O(^TMP($J,PXRRCLIN,"ICD",E)) Q:'E  I $D(^TMP($J,PXRRCLIN,"ICD",E,C)) S DFN=0 F  S DFN=$O(^TMP($J,PXRRCLIN,"ICD",E,C,DFN)) Q:'DFN  S PXRR(C)=$S('$D(C(DFN)):PXRR(C)+1,1:PXRR(C)),C(DFN)=""
"RTN","PXRRPCE3",31,0)
 K C S E=PXRRBDT F  S E=$O(^TMP($J,PXRRCLIN,"ICD",E)) Q:'E!(E>PXRREDT)  S C=0 F  S C=$O(^TMP($J,PXRRCLIN,"ICD",E,C)) Q:'C  S DFN=0 F  S DFN=$O(^TMP($J,PXRRCLIN,"ICD",E,C,DFN)) Q:'DFN  D
"RTN","PXRRPCE3",32,0)
 . I '$D(PXRR(C)) S PXRR(C)=0
"RTN","PXRRPCE3",33,0)
 . S PXRR(C)=$S('$D(C(C,DFN)):PXRR(C)+1,1:0),C(C,DFN)=""
"RTN","PXRRPCE3",34,0)
 K C S PXRR(272)=PXRR(272.4)+$G(PXRR(272.2)),PXRR(305)=0 F C=305.1:.01:305.13 S PXRR(305)=PXRR(305)+$G(PXRR(C))
"RTN","PXRRPCE3",35,0)
 S PXRRDM=$G(PXRR(250)),PXRRHTN=$G(PXRR(401)),PXRRCAD=$G(PXRR(414)),PXRRHLIP=PXRR(272),PXRRSMYR=PXRR(305)
"RTN","PXRRPCE3",36,0)
 ;_._._._._._._._._.Diabetes and Hypertensive Patients_._._._._._._._.
"RTN","PXRRPCE3",37,0)
 S PXRRHTDM=0,E=PXRRBDT F  S E=$O(^TMP($J,PXRRCLIN,"ICD",E)) Q:'E!(E>PXRREDT)  S DFN=0 F  S DFN=$O(^TMP($J,PXRRCLIN,"ICD",E,250,DFN)) Q:'DFN  I $D(^TMP($J,PXRRCLIN,"ICD PAT",401,DFN)) D
"RTN","PXRRPCE3",38,0)
 . S X=PXRRBDT F  S X=$O(^TMP($J,PXRRCLIN,"ICD PAT",401,DFN,X)) Q:'X  I X<PXRREDT S PXRRHTDM=PXRRHTDM+1
"RTN","PXRRPCE3",39,0)
 ; _._._._._._._._._._._Smokers with CAD DX_._._._._._._._._._._._._.
"RTN","PXRRPCE3",40,0)
 S PXRRCDSM=0,C=304 F  S C=$O(^TMP($J,PXRRCLIN,"ICD PAT",C)) Q:'C!(C>305.13)  S DFN=0 F  S DFN=$O(^(C,DFN)) Q:'DFN  S E=PXRRSXMO F  S E=$O(^(C,DFN,E)) Q:'E  I $D(^TMP($J,PXRRCLIN,"ICD PAT",414,DFN)) S PXRRCDSM=PXRRCDSM+1
"RTN","PXRRPCE3",41,0)
HBA1 ; _._._._._._._._._._.HTN AND/OR HBA1C w/ DM DX_._._._._._._._._._._._.
"RTN","PXRRPCE3",42,0)
 ;             **Site Specific Entries for Selected Labs**
"RTN","PXRRPCE3",43,0)
 S PX=$O(^PX(815,0)),C=250,(DFN,PXRRHBA1)=0,PXRRLED=(9999999.9999999-PXRRSXMO) F  S DFN=$O(^TMP($J,PXRRCLIN,"ICD PAT",C,DFN)) Q:'DFN  D
"RTN","PXRRPCE3",44,0)
 .  S PXRLRDFN=$P($G(^DPT(DFN,"LR")),U) Q:'PXRLRDFN  S L=0 F  S L=$O(^PX(815,PX,"RR5",L)) Q:'L  S X=$P(^(L,0),U),X=$P($P(^LAB(60,X,0),U,5),";",2),E=9999999.9999999-DT F  S E=$O(^LR(PXRLRDFN,"CH",E)) Q:'E!(E>PXRRLED)  D
"RTN","PXRRPCE3",45,0)
 .. S:+$P($G(^LR(PXRLRDFN,"CH",E,X)),U) PXRRHBA1=PXRRHBA1+$P($G(^LR(PXRLRDFN,"CH",E,X)),U),^TMP($J,PXRRCLIN,"HBA1C",DFN,E)=$P($G(^LR(PXRLRDFN,"CH",E,X)),U)
"RTN","PXRRPCE3",46,0)
 S (PXRRHBG7,PXRRHBPT,DFN)=0 F  S DFN=$O(^TMP($J,PXRRCLIN,"HBA1C",DFN)) Q:'DFN  S X=0 F  S X=$O(^TMP($J,PXRRCLIN,"HBA1C",DFN,X)) Q:'X  S PXRRHBPT=PXRRHBPT+1 D
"RTN","PXRRPCE3",47,0)
 . I $G(^TMP($J,PXRRCLIN,"HBA1C",DFN,X))>6.99,'$D(X(DFN))  S PXRRHBG7=PXRRHBG7+1
"RTN","PXRRPCE3",48,0)
 . S X(DFN)=""
"RTN","PXRRPCE3",49,0)
 K X I $G(PXRRHBA1)>0 S PXRRHBA1=PXRRHBA1/PXRRHBPT
"RTN","PXRRPCE3",50,0)
 S:'PXRRHBPT PXRRHBA1="N/A",PXRRHBG7=0
"RTN","PXRRPCE3",51,0)
SXUTTOT ;_._._._._._._._._.Quality Care & Util 7 other Totals_._._._._._._._.
"RTN","PXRRPCE3",52,0)
 D ^PXRRPCE4
"RTN","PXRRPCE3",53,0)
 I '$D(^TMP($J,PXRRCLIN,"CLINIC PATIENTS")) S ^TMP($J,PXRRCLIN,"PATIENT","NONE",PXRRCLIN)=""
"RTN","PXRRPCE3",54,0)
QT Q
"RTN","PXRRPCE3",55,0)
AGE ;_._._._._._._._._._.Calculate a patient's age_._._._._._._._._._.
"RTN","PXRRPCE3",56,0)
 I $D(^TMP($J,PXRRCLIN,"CLINIC PATIENTS",DFN)) S X=0 Q
"RTN","PXRRPCE3",57,0)
 D DEM^VADPT I VADM(4) S ^TMP($J,PXRRCLIN,"PATIENT AGE",VADM(4),DFN)=Z D KVAR^VADPT
"RTN","PXRRPCE3",58,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
IB*2.0*210
"BLD",2993,0)
IB*2.0*210^INTEGRATED BILLING^0^3030916^y
"BLD",2993,1,0)
^^4^4^3030619^
"BLD",2993,1,1,0)
Code Set Versioning, the IB part. Phase 1.
"BLD",2993,1,2,0)
 
"BLD",2993,1,3,0)
Please see the National Patch Module for details
"BLD",2993,1,4,0)
of the enhancements included in this patch.
"BLD",2993,4,0)
^9.64PA^399^11
"BLD",2993,4,350.71,0)
350.71
"BLD",2993,4,350.71,2,0)
^9.641^350.71^1
"BLD",2993,4,350.71,2,350.71,0)
AMBULATORY SURG. CHECK-OFF SHEET PRINT FIELDS  (File-top level)
"BLD",2993,4,350.71,2,350.71,1,0)
^9.6411^.06^1
"BLD",2993,4,350.71,2,350.71,1,.06,0)
PROCEDURE
"BLD",2993,4,350.71,222)
y^n^p^^^^n
"BLD",2993,4,350.9,0)
350.9
"BLD",2993,4,350.9,2,0)
^9.641^350.9^1
"BLD",2993,4,350.9,2,350.9,0)
IB SITE PARAMETERS  (File-top level)
"BLD",2993,4,350.9,2,350.9,1,0)
^9.6411^1.3^2
"BLD",2993,4,350.9,2,350.9,1,1.29,0)
DEFAULT RX REFILL DX
"BLD",2993,4,350.9,2,350.9,1,1.3,0)
DEFAULT RX REFILL CPT
"BLD",2993,4,350.9,222)
y^n^p^^^^n
"BLD",2993,4,351.61,0)
351.61
"BLD",2993,4,351.61,2,0)
^9.641^351.61^3
"BLD",2993,4,351.61,2,351.61,0)
TRANSFER PRICING TRANSACTIONS  (File-top level)
"BLD",2993,4,351.61,2,351.61,1,0)
^9.6411^1.01^1
"BLD",2993,4,351.61,2,351.61,1,1.01,0)
DRG
"BLD",2993,4,351.61,2,351.612,0)
ICD DIAGNOSIS  (sub-file)
"BLD",2993,4,351.61,2,351.612,1,0)
^9.6411^.01^1
"BLD",2993,4,351.61,2,351.612,1,.01,0)
ICD DIAGNOSIS
"BLD",2993,4,351.61,2,351.613,0)
PROCEDURES  (sub-file)
"BLD",2993,4,351.61,2,351.613,1,0)
^9.6411^.01^1
"BLD",2993,4,351.61,2,351.613,1,.01,0)
PROCEDURES
"BLD",2993,4,351.61,222)
y^n^p^^^^n
"BLD",2993,4,356.2,0)
356.2
"BLD",2993,4,356.2,2,0)
^9.641^356.2^1
"BLD",2993,4,356.2,2,356.2,0)
INSURANCE REVIEW  (File-top level)
"BLD",2993,4,356.2,2,356.2,1,0)
^9.6411^.14^1
"BLD",2993,4,356.2,2,356.2,1,.14,0)
DIAGNOSIS AUTHORIZED
"BLD",2993,4,356.2,222)
y^n^p^^^^n
"BLD",2993,4,356.5,0)
356.5
"BLD",2993,4,356.5,2,0)
^9.641^356.5^1
"BLD",2993,4,356.5,2,356.5,0)
CLAIMS TRACKING ALOS  (File-top level)
"BLD",2993,4,356.5,2,356.5,1,0)
^9.6411^.01^1
"BLD",2993,4,356.5,2,356.5,1,.01,0)
DRG
"BLD",2993,4,356.5,222)
y^n^p^^^^n^^n
"BLD",2993,4,356.5,224)

"BLD",2993,4,356.9,0)
356.9
"BLD",2993,4,356.9,2,0)
^9.641^356.9^1
"BLD",2993,4,356.9,2,356.9,0)
INPATIENT DIAGNOSIS  (File-top level)
"BLD",2993,4,356.9,2,356.9,1,0)
^9.6411^.01^1
"BLD",2993,4,356.9,2,356.9,1,.01,0)
DIAGNOSIS
"BLD",2993,4,356.9,222)
y^n^p^^^^n
"BLD",2993,4,356.91,0)
356.91
"BLD",2993,4,356.91,2,0)
^9.641^356.91^1
"BLD",2993,4,356.91,2,356.91,0)
INPATIENT PROCEDURE  (File-top level)
"BLD",2993,4,356.91,2,356.91,1,0)
^9.6411^.01^1
"BLD",2993,4,356.91,2,356.91,1,.01,0)
PROCEDURE
"BLD",2993,4,356.91,222)
y^n^p^^^^n
"BLD",2993,4,356.93,0)
356.93
"BLD",2993,4,356.93,2,0)
^9.641^356.93^1
"BLD",2993,4,356.93,2,356.93,0)
INPATIENT INTERIM DRG  (File-top level)
"BLD",2993,4,356.93,2,356.93,1,0)
^9.6411^.01^1
"BLD",2993,4,356.93,2,356.93,1,.01,0)
NAME
"BLD",2993,4,356.93,222)
y^n^p^^^^n^^n
"BLD",2993,4,356.93,224)

"BLD",2993,4,361.1,0)
361.1
"BLD",2993,4,361.1,2,0)
^9.641^361.115^1
"BLD",2993,4,361.1,2,361.115,0)
835 LINE LEVEL ADJUSTMENTS  (sub-file)
"BLD",2993,4,361.1,2,361.115,1,0)
^9.6411^.04^1
"BLD",2993,4,361.1,2,361.115,1,.04,0)
PROCEDURE
"BLD",2993,4,361.1,222)
y^n^p^^^^n
"BLD",2993,4,362.3,0)
362.3
"BLD",2993,4,362.3,2,0)
^9.641^362.3^1
"BLD",2993,4,362.3,2,362.3,0)
IB BILL/CLAIMS DIAGNOSIS  (File-top level)
"BLD",2993,4,362.3,2,362.3,1,0)
^9.6411^.01^1
"BLD",2993,4,362.3,2,362.3,1,.01,0)
DIAGNOSIS
"BLD",2993,4,362.3,222)
y^n^p^^^^n
"BLD",2993,4,399,0)
399
"BLD",2993,4,399,2,0)
^9.641^399.30416^4
"BLD",2993,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",2993,4,399,2,399,1,0)
^9.6411^215^1
"BLD",2993,4,399,2,399,1,215,0)
ADMITTING DIAGNOSIS
"BLD",2993,4,399,2,399.0304,0)
PROCEDURES  (sub-file)
"BLD",2993,4,399,2,399.0304,1,0)
^9.6411^.01^1
"BLD",2993,4,399,2,399.0304,1,.01,0)
PROCEDURES
"BLD",2993,4,399,2,399.042,0)
REVENUE CODE  (sub-file)
"BLD",2993,4,399,2,399.042,1,0)
^9.6411^.06^1
"BLD",2993,4,399,2,399.042,1,.06,0)
PROCEDURE
"BLD",2993,4,399,2,399.30416,0)
CPT MODIFIER SEQUENCE  (sub-file)
"BLD",2993,4,399,2,399.30416,1,0)
^9.6411^.02^1
"BLD",2993,4,399,2,399.30416,1,.02,0)
CPT MODIFIER
"BLD",2993,4,399,222)
y^n^p^^^^n^^n
"BLD",2993,4,399,224)

"BLD",2993,4,"APDD",350.71,350.71)

"BLD",2993,4,"APDD",350.71,350.71,.06)

"BLD",2993,4,"APDD",350.9,350.9)

"BLD",2993,4,"APDD",350.9,350.9,1.29)

"BLD",2993,4,"APDD",350.9,350.9,1.3)

"BLD",2993,4,"APDD",351.61,351.61)

"BLD",2993,4,"APDD",351.61,351.61,1.01)

"BLD",2993,4,"APDD",351.61,351.612)

"BLD",2993,4,"APDD",351.61,351.612,.01)

"BLD",2993,4,"APDD",351.61,351.613)

"BLD",2993,4,"APDD",351.61,351.613,.01)

"BLD",2993,4,"APDD",356.2,356.2)

"BLD",2993,4,"APDD",356.2,356.2,.14)

"BLD",2993,4,"APDD",356.5,356.5)

"BLD",2993,4,"APDD",356.5,356.5,.01)

"BLD",2993,4,"APDD",356.9,356.9)

"BLD",2993,4,"APDD",356.9,356.9,.01)

"BLD",2993,4,"APDD",356.91,356.91)

"BLD",2993,4,"APDD",356.91,356.91,.01)

"BLD",2993,4,"APDD",356.93,356.93)

"BLD",2993,4,"APDD",356.93,356.93,.01)

"BLD",2993,4,"APDD",361.1,361.115)

"BLD",2993,4,"APDD",361.1,361.115,.04)

"BLD",2993,4,"APDD",362.3,362.3)

"BLD",2993,4,"APDD",362.3,362.3,.01)

"BLD",2993,4,"APDD",399,399)

"BLD",2993,4,"APDD",399,399,215)

"BLD",2993,4,"APDD",399,399.0304)

"BLD",2993,4,"APDD",399,399.0304,.01)

"BLD",2993,4,"APDD",399,399.042)

"BLD",2993,4,"APDD",399,399.042,.06)

"BLD",2993,4,"APDD",399,399.30416)

"BLD",2993,4,"APDD",399,399.30416,.02)

"BLD",2993,4,"B",350.71,350.71)

"BLD",2993,4,"B",350.9,350.9)

"BLD",2993,4,"B",351.61,351.61)

"BLD",2993,4,"B",356.2,356.2)

"BLD",2993,4,"B",356.5,356.5)

"BLD",2993,4,"B",356.9,356.9)

"BLD",2993,4,"B",356.91,356.91)

"BLD",2993,4,"B",356.93,356.93)

"BLD",2993,4,"B",361.1,361.1)

"BLD",2993,4,"B",362.3,362.3)

"BLD",2993,4,"B",399,399)

"BLD",2993,"ABPKG")
n
"BLD",2993,"INIT")
EN^IB20P210
"BLD",2993,"KRN",0)
^9.67PA^8989.52^19
"BLD",2993,"KRN",.4,0)
.4
"BLD",2993,"KRN",.4,"NM",0)
^9.68A^^0
"BLD",2993,"KRN",.401,0)
.401
"BLD",2993,"KRN",.402,0)
.402
"BLD",2993,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",2993,"KRN",.403,0)
.403
"BLD",2993,"KRN",.403,"NM",0)
^9.68A^^
"BLD",2993,"KRN",.5,0)
.5
"BLD",2993,"KRN",.84,0)
.84
"BLD",2993,"KRN",3.6,0)
3.6
"BLD",2993,"KRN",3.8,0)
3.8
"BLD",2993,"KRN",9.2,0)
9.2
"BLD",2993,"KRN",9.8,0)
9.8
"BLD",2993,"KRN",9.8,"NM",0)
^9.68A^56^48
"BLD",2993,"KRN",9.8,"NM",1,0)
IBATLM2A^^0^B33142695
"BLD",2993,"KRN",9.8,"NM",2,0)
IBCBB2^^0^B32237073
"BLD",2993,"KRN",9.8,"NM",3,0)
IBCBB21^^0^B10109462
"BLD",2993,"KRN",9.8,"NM",4,0)
IBCBB8^^0^B4647377
"BLD",2993,"KRN",9.8,"NM",5,0)
IBCD3^^0^B28952840
"BLD",2993,"KRN",9.8,"NM",7,0)
IBCEF1^^0^B44522859
"BLD",2993,"KRN",9.8,"NM",8,0)
IBCEF3^^0^B48712174
"BLD",2993,"KRN",9.8,"NM",9,0)
IBCEU4^^0^B49878802
"BLD",2993,"KRN",9.8,"NM",10,0)
IBCF10^^0^B18544115
"BLD",2993,"KRN",9.8,"NM",11,0)
IBCF22^^0^B10161856
"BLD",2993,"KRN",9.8,"NM",12,0)
IBCF32^^0^B12101579
"BLD",2993,"KRN",9.8,"NM",14,0)
IBCIUT1^^0^B51920309
"BLD",2993,"KRN",9.8,"NM",15,0)
IBCRBG^^0^B50822861
"BLD",2993,"KRN",9.8,"NM",17,0)
IBCSC4^^0^B17622490
"BLD",2993,"KRN",9.8,"NM",18,0)
IBCSC4B^^0^B22580320
"BLD",2993,"KRN",9.8,"NM",19,0)
IBCSC4C^^0^B20711361
"BLD",2993,"KRN",9.8,"NM",20,0)
IBCSC4D^^0^B50440659
"BLD",2993,"KRN",9.8,"NM",21,0)
IBCSC4E^^0^B39148561
"BLD",2993,"KRN",9.8,"NM",22,0)
IBCSC5^^0^B17506811
"BLD",2993,"KRN",9.8,"NM",23,0)
IBCSC82^^0^B15409772
"BLD",2993,"KRN",9.8,"NM",24,0)
IBCSC8H^^0^B22782863
"BLD",2993,"KRN",9.8,"NM",25,0)
IBCU7^^0^B47160379
"BLD",2993,"KRN",9.8,"NM",26,0)
IBCU71^^0^B18023231
"BLD",2993,"KRN",9.8,"NM",27,0)
IBCU72^^0^B11361036
"BLD",2993,"KRN",9.8,"NM",28,0)
IBCVA1^^0^B20905711
"BLD",2993,"KRN",9.8,"NM",29,0)
IBEPAR^^0^B20135803
"BLD",2993,"KRN",9.8,"NM",30,0)
IBJTBB^^0^B2945074
"BLD",2993,"KRN",9.8,"NM",31,0)
IBJTBC^^0^B13014724
"BLD",2993,"KRN",9.8,"NM",32,0)
IBRFN3^^0^B28970642
"BLD",2993,"KRN",9.8,"NM",33,0)
IBTRE3^^0^B25988323
"BLD",2993,"KRN",9.8,"NM",34,0)
IBTRE4^^0^B27862268
"BLD",2993,"KRN",9.8,"NM",35,0)
IBTRE6^^0^B15005544
"BLD",2993,"KRN",9.8,"NM",36,0)
IBTRV2^^0^B21706075
"BLD",2993,"KRN",9.8,"NM",37,0)
IBCF11^^0^B5660623
"BLD",2993,"KRN",9.8,"NM",38,0)
IBCF12^^0^B16852699
"BLD",2993,"KRN",9.8,"NM",39,0)
IBATEI^^0^B58154655
"BLD",2993,"KRN",9.8,"NM",40,0)
IBCRU1^^0^B20569916
"BLD",2993,"KRN",9.8,"NM",41,0)
IBCRU2^^0^B5218948
"BLD",2993,"KRN",9.8,"NM",42,0)
IBCSC61^^0^B7703598
"BLD",2993,"KRN",9.8,"NM",43,0)
IBACSV^^0^B13401615
"BLD",2993,"KRN",9.8,"NM",44,0)
IBTOBI2^^0^B19691453
"BLD",2993,"KRN",9.8,"NM",45,0)
IBTRED0^^0^B19308865
"BLD",2993,"KRN",9.8,"NM",46,0)
IBTRCD^^0^B24519897
"BLD",2993,"KRN",9.8,"NM",50,0)
IBCF331^^0^B6452948
"BLD",2993,"KRN",9.8,"NM",53,0)
IBTOBI4^^0^B21042599
"BLD",2993,"KRN",9.8,"NM",54,0)
IBCU1^^0^B24130709
"BLD",2993,"KRN",9.8,"NM",55,0)
IBCIUT5^^0^B37441677
"BLD",2993,"KRN",9.8,"NM",56,0)
IB20P210^^0^B2127742
"BLD",2993,"KRN",9.8,"NM","B","IB20P210",56)

"BLD",2993,"KRN",9.8,"NM","B","IBACSV",43)

"BLD",2993,"KRN",9.8,"NM","B","IBATEI",39)

"BLD",2993,"KRN",9.8,"NM","B","IBATLM2A",1)

"BLD",2993,"KRN",9.8,"NM","B","IBCBB2",2)

"BLD",2993,"KRN",9.8,"NM","B","IBCBB21",3)

"BLD",2993,"KRN",9.8,"NM","B","IBCBB8",4)

"BLD",2993,"KRN",9.8,"NM","B","IBCD3",5)

"BLD",2993,"KRN",9.8,"NM","B","IBCEF1",7)

"BLD",2993,"KRN",9.8,"NM","B","IBCEF3",8)

"BLD",2993,"KRN",9.8,"NM","B","IBCEU4",9)

"BLD",2993,"KRN",9.8,"NM","B","IBCF10",10)

"BLD",2993,"KRN",9.8,"NM","B","IBCF11",37)

"BLD",2993,"KRN",9.8,"NM","B","IBCF12",38)

"BLD",2993,"KRN",9.8,"NM","B","IBCF22",11)

"BLD",2993,"KRN",9.8,"NM","B","IBCF32",12)

"BLD",2993,"KRN",9.8,"NM","B","IBCF331",50)

"BLD",2993,"KRN",9.8,"NM","B","IBCIUT1",14)

"BLD",2993,"KRN",9.8,"NM","B","IBCIUT5",55)

"BLD",2993,"KRN",9.8,"NM","B","IBCRBG",15)

"BLD",2993,"KRN",9.8,"NM","B","IBCRU1",40)

"BLD",2993,"KRN",9.8,"NM","B","IBCRU2",41)

"BLD",2993,"KRN",9.8,"NM","B","IBCSC4",17)

"BLD",2993,"KRN",9.8,"NM","B","IBCSC4B",18)

"BLD",2993,"KRN",9.8,"NM","B","IBCSC4C",19)

"BLD",2993,"KRN",9.8,"NM","B","IBCSC4D",20)

"BLD",2993,"KRN",9.8,"NM","B","IBCSC4E",21)

"BLD",2993,"KRN",9.8,"NM","B","IBCSC5",22)

"BLD",2993,"KRN",9.8,"NM","B","IBCSC61",42)

"BLD",2993,"KRN",9.8,"NM","B","IBCSC82",23)

"BLD",2993,"KRN",9.8,"NM","B","IBCSC8H",24)

"BLD",2993,"KRN",9.8,"NM","B","IBCU1",54)

"BLD",2993,"KRN",9.8,"NM","B","IBCU7",25)

"BLD",2993,"KRN",9.8,"NM","B","IBCU71",26)

"BLD",2993,"KRN",9.8,"NM","B","IBCU72",27)

"BLD",2993,"KRN",9.8,"NM","B","IBCVA1",28)

"BLD",2993,"KRN",9.8,"NM","B","IBEPAR",29)

"BLD",2993,"KRN",9.8,"NM","B","IBJTBB",30)

"BLD",2993,"KRN",9.8,"NM","B","IBJTBC",31)

"BLD",2993,"KRN",9.8,"NM","B","IBRFN3",32)

"BLD",2993,"KRN",9.8,"NM","B","IBTOBI2",44)

"BLD",2993,"KRN",9.8,"NM","B","IBTOBI4",53)

"BLD",2993,"KRN",9.8,"NM","B","IBTRCD",46)

"BLD",2993,"KRN",9.8,"NM","B","IBTRE3",33)

"BLD",2993,"KRN",9.8,"NM","B","IBTRE4",34)

"BLD",2993,"KRN",9.8,"NM","B","IBTRE6",35)

"BLD",2993,"KRN",9.8,"NM","B","IBTRED0",45)

"BLD",2993,"KRN",9.8,"NM","B","IBTRV2",36)

"BLD",2993,"KRN",19,0)
19
"BLD",2993,"KRN",19.1,0)
19.1
"BLD",2993,"KRN",101,0)
101
"BLD",2993,"KRN",409.61,0)
409.61
"BLD",2993,"KRN",771,0)
771
"BLD",2993,"KRN",870,0)
870
"BLD",2993,"KRN",8989.51,0)
8989.51
"BLD",2993,"KRN",8989.52,0)
8989.52
"BLD",2993,"KRN",8994,0)
8994
"BLD",2993,"KRN","B",.4,.4)

"BLD",2993,"KRN","B",.401,.401)

"BLD",2993,"KRN","B",.402,.402)

"BLD",2993,"KRN","B",.403,.403)

"BLD",2993,"KRN","B",.5,.5)

"BLD",2993,"KRN","B",.84,.84)

"BLD",2993,"KRN","B",3.6,3.6)

"BLD",2993,"KRN","B",3.8,3.8)

"BLD",2993,"KRN","B",9.2,9.2)

"BLD",2993,"KRN","B",9.8,9.8)

"BLD",2993,"KRN","B",19,19)

"BLD",2993,"KRN","B",19.1,19.1)

"BLD",2993,"KRN","B",101,101)

"BLD",2993,"KRN","B",409.61,409.61)

"BLD",2993,"KRN","B",771,771)

"BLD",2993,"KRN","B",870,870)

"BLD",2993,"KRN","B",8989.51,8989.51)

"BLD",2993,"KRN","B",8989.52,8989.52)

"BLD",2993,"KRN","B",8994,8994)

"BLD",2993,"QUES",0)
^9.62^^
"BLD",2993,"REQB",0)
^9.611^7^6
"BLD",2993,"REQB",2,0)
ICD*18.0*7^2
"BLD",2993,"REQB",3,0)
IB*2.0*159^2
"BLD",2993,"REQB",4,0)
IB*2.0*161^2
"BLD",2993,"REQB",5,0)
IB*2.0*182^2
"BLD",2993,"REQB",6,0)
IB*2.0*207^2
"BLD",2993,"REQB",7,0)
ICPT*6.0*14^2
"BLD",2993,"REQB","B","IB*2.0*159",3)

"BLD",2993,"REQB","B","IB*2.0*161",4)

"BLD",2993,"REQB","B","IB*2.0*182",5)

"BLD",2993,"REQB","B","IB*2.0*207",6)

"BLD",2993,"REQB","B","ICD*18.0*7",2)

"BLD",2993,"REQB","B","ICPT*6.0*14",7)

"FIA",350.71)
AMBULATORY SURG. CHECK-OFF SHEET PRINT FIELDS
"FIA",350.71,0)
^IBE(350.71,
"FIA",350.71,0,0)
350.71OI
"FIA",350.71,0,1)
y^n^p^^^^n
"FIA",350.71,0,10)

"FIA",350.71,0,11)

"FIA",350.71,0,"RLRO")

"FIA",350.71,0,"VR")
2.0^IB
"FIA",350.71,350.71)
1
"FIA",350.71,350.71,.06)

"FIA",350.9)
IB SITE PARAMETERS
"FIA",350.9,0)
^IBE(350.9,
"FIA",350.9,0,0)
350.9I
"FIA",350.9,0,1)
y^n^p^^^^n
"FIA",350.9,0,10)

"FIA",350.9,0,11)

"FIA",350.9,0,"RLRO")

"FIA",350.9,0,"VR")
2.0^IB
"FIA",350.9,350.9)
1
"FIA",350.9,350.9,1.29)

"FIA",350.9,350.9,1.3)

"FIA",351.61)
TRANSFER PRICING TRANSACTIONS
"FIA",351.61,0)
^IBAT(351.61,
"FIA",351.61,0,0)
351.61
"FIA",351.61,0,1)
y^n^p^^^^n
"FIA",351.61,0,10)

"FIA",351.61,0,11)

"FIA",351.61,0,"RLRO")

"FIA",351.61,0,"VR")
2.0^IB
"FIA",351.61,351.61)
1
"FIA",351.61,351.61,1.01)

"FIA",351.61,351.61,2)

"FIA",351.61,351.61,3)

"FIA",351.61,351.612)
1
"FIA",351.61,351.612,.01)

"FIA",351.61,351.613)
1
"FIA",351.61,351.613,.01)

"FIA",356.2)
INSURANCE REVIEW
"FIA",356.2,0)
^IBT(356.2,
"FIA",356.2,0,0)
356.2ID
"FIA",356.2,0,1)
y^n^p^^^^n
"FIA",356.2,0,10)

"FIA",356.2,0,11)

"FIA",356.2,0,"RLRO")

"FIA",356.2,0,"VR")
2.0^IB
"FIA",356.2,356.2)
1
"FIA",356.2,356.2,.14)

"FIA",356.5)
CLAIMS TRACKING ALOS
"FIA",356.5,0)
^IBE(356.5,
"FIA",356.5,0,0)
356.5P
"FIA",356.5,0,1)
y^n^p^^^^n^^n
"FIA",356.5,0,10)

"FIA",356.5,0,11)

"FIA",356.5,0,"RLRO")

"FIA",356.5,0,"VR")
2.0^IB
"FIA",356.5,356.5)
1
"FIA",356.5,356.5,.01)

"FIA",356.9)
INPATIENT DIAGNOSIS
"FIA",356.9,0)
^IBT(356.9,
"FIA",356.9,0,0)
356.9IP
"FIA",356.9,0,1)
y^n^p^^^^n
"FIA",356.9,0,10)

"FIA",356.9,0,11)

"FIA",356.9,0,"RLRO")

"FIA",356.9,0,"VR")
2.0^IB
"FIA",356.9,356.9)
1
"FIA",356.9,356.9,.01)

"FIA",356.91)
INPATIENT PROCEDURE
"FIA",356.91,0)
^IBT(356.91,
"FIA",356.91,0,0)
356.91IP
"FIA",356.91,0,1)
y^n^p^^^^n
"FIA",356.91,0,10)

"FIA",356.91,0,11)

"FIA",356.91,0,"RLRO")

"FIA",356.91,0,"VR")
2.0^IB
"FIA",356.91,356.91)
1
"FIA",356.91,356.91,.01)

"FIA",356.93)
INPATIENT INTERIM DRG
"FIA",356.93,0)
^IBT(356.93,
"FIA",356.93,0,0)
356.93IP
"FIA",356.93,0,1)
y^n^p^^^^n^^n
"FIA",356.93,0,10)

"FIA",356.93,0,11)

"FIA",356.93,0,"RLRO")

"FIA",356.93,0,"VR")
2.0^IB
"FIA",356.93,356.93)
1
"FIA",356.93,356.93,.01)

"FIA",361.1)
EXPLANATION OF BENEFITS
"FIA",361.1,0)
^IBM(361.1,
"FIA",361.1,0,0)
361.1PI
"FIA",361.1,0,1)
y^n^p^^^^n
"FIA",361.1,0,10)

"FIA",361.1,0,11)

"FIA",361.1,0,"RLRO")

"FIA",361.1,0,"VR")
2.0^IB
"FIA",361.1,361.1)
1
"FIA",361.1,361.115)
1
"FIA",361.1,361.115,.04)

"FIA",362.3)
IB BILL/CLAIMS DIAGNOSIS
"FIA",362.3,0)
^IBA(362.3,
"FIA",362.3,0,0)
362.3IP
"FIA",362.3,0,1)
y^n^p^^^^n
"FIA",362.3,0,10)

"FIA",362.3,0,11)

"FIA",362.3,0,"RLRO")

"FIA",362.3,0,"VR")
2.0^IB
"FIA",362.3,362.3)
1
"FIA",362.3,362.3,.01)

"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^n^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,215)

"FIA",399,399,304)

"FIA",399,399.0304)
1
"FIA",399,399.0304,.01)

"FIA",399,399.042)
1
"FIA",399,399.042,.06)

"FIA",399,399.30416)
1
"FIA",399,399.30416,.02)

"INIT")
EN^IB20P210
"MBREQ")
1
"PKG",192,-1)
1^1
"PKG",192,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",192,20,0)
^9.402P^1^1
"PKG",192,20,1,0)
2^^IBAXDR
"PKG",192,20,1,1)

"PKG",192,20,"B",2,1)

"PKG",192,22,0)
^9.49I^1^1
"PKG",192,22,1,0)
2.0^2940321^2940414
"PKG",192,22,1,"PAH",1,0)
210^3030916^100999
"PKG",192,22,1,"PAH",1,1,0)
^^4^4^3030916
"PKG",192,22,1,"PAH",1,1,1,0)
Code Set Versioning, the IB part. Phase 1.
"PKG",192,22,1,"PAH",1,1,2,0)
 
"PKG",192,22,1,"PAH",1,1,3,0)
Please see the National Patch Module for details
"PKG",192,22,1,"PAH",1,1,4,0)
of the enhancements included in this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
48
"RTN","IB20P210")
0^56^B2127742
"RTN","IB20P210",1,0)
IB20P210 ;WOIFO/AAT - Code Set Versioning Post Install Procedure ;19-FEB-03
"RTN","IB20P210",2,0)
 ;;2.0;INTEGRATED BILLING;**210**;21-MAR-94
"RTN","IB20P210",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IB20P210",4,0)
 Q
"RTN","IB20P210",5,0)
 ;
"RTN","IB20P210",6,0)
 ;
"RTN","IB20P210",7,0)
EN ;Recompile Input Templates
"RTN","IB20P210",8,0)
 N IBC,DMAX,IBMAX,IBN
"RTN","IB20P210",9,0)
 ;
"RTN","IB20P210",10,0)
 S IBMAX=$$ROUSIZE^DILF
"RTN","IB20P210",11,0)
 D MES^XPDUTL("Recompiling affected input templates ...")
"RTN","IB20P210",12,0)
 F IBC=1:1 S IBN=$P($T(TMPL+IBC),";;",2) Q:IBN=""  D COMP(IBN,IBMAX)
"RTN","IB20P210",13,0)
 D MES^XPDUTL("Completed compiling input templates.")
"RTN","IB20P210",14,0)
 Q
"RTN","IB20P210",15,0)
 ;
"RTN","IB20P210",16,0)
COMP(TNAME,DMAX) ; Compile the Input Template
"RTN","IB20P210",17,0)
 N IBIEN,IBRTN,X,Y
"RTN","IB20P210",18,0)
 ;find the ien of the input template
"RTN","IB20P210",19,0)
 S IBIEN=$O(^DIE("B",TNAME,0)) Q:'IBIEN
"RTN","IB20P210",20,0)
 ;
"RTN","IB20P210",21,0)
 ;quit if input template not compiled
"RTN","IB20P210",22,0)
 S IBRTN=$P($G(^DIE(IBIEN,"ROUOLD")),U) Q:IBRTN=""
"RTN","IB20P210",23,0)
 ;
"RTN","IB20P210",24,0)
 D MES^XPDUTL("Compiling "_TNAME_" , compiled routine is "_IBRTN_" ...")
"RTN","IB20P210",25,0)
 S X=IBRTN,Y=IBIEN
"RTN","IB20P210",26,0)
 D EN^DIEZ
"RTN","IB20P210",27,0)
 D MES^XPDUTL("done")
"RTN","IB20P210",28,0)
 D MES^XPDUTL("")
"RTN","IB20P210",29,0)
 Q
"RTN","IB20P210",30,0)
 ;
"RTN","IB20P210",31,0)
TMPL ;
"RTN","IB20P210",32,0)
 ;;IB SCREEN6
"RTN","IB20P210",33,0)
 ;;IB SCREEN7
"RTN","IB20P210",34,0)
 ;;IB SCREEN82
"RTN","IB20P210",35,0)
 ;;IB SCREEB8H
"RTN","IB20P210",36,0)
 ;;IB REVCODE EDIT
"RTN","IB20P210",37,0)
 ;;IB EDIT MCCR PARM
"RTN","IB20P210",38,0)
 ;;IBAT OUT PRICING EDIT
"RTN","IB20P210",39,0)
 ;;IBT ACTION INFO
"RTN","IB20P210",40,0)
 ;;IBT QUICK EDIT
"RTN","IB20P210",41,0)
 ;;
"RTN","IBACSV")
0^43^B13401615
"RTN","IBACSV",1,0)
IBACSV ;WOIFO/AAT-CODE SET VERSIONING IB UTILITIES ;19-FEB-03
"RTN","IBACSV",2,0)
 ;;2.0;INTEGRATED BILLING;**210**;21-MAR-94
"RTN","IBACSV",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBACSV",4,0)
 ;
"RTN","IBACSV",5,0)
 Q
"RTN","IBACSV",6,0)
 ;
"RTN","IBACSV",7,0)
 ;
"RTN","IBACSV",8,0)
 ;Returns data of the CPT code, NULL if error
"RTN","IBACSV",9,0)
 ;Input: IBC-code, IBDT-date (default is today)
"RTN","IBACSV",10,0)
 ;Output: (by reference) - IBERROR - error string if error happened
"RTN","IBACSV",11,0)
 ;DO NOT USE THIS CALL TO DETERMINE ACTIVE/INACTIVE STATUS OF THE CODE
"RTN","IBACSV",12,0)
CPT(IBC,IBDT,IBERROR) N IBINF
"RTN","IBACSV",13,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",14,0)
 S IBERROR=""
"RTN","IBACSV",15,0)
 S IBINF=$$CPT^ICPTCOD(IBC,IBDT,1) ;Local codes supported
"RTN","IBACSV",16,0)
 I IBINF<0 S IBERROR=$P(IBINF,U,2),IBINF=""
"RTN","IBACSV",17,0)
 Q $P(IBINF,U,2,999) ;Remove the first piece (IEN)
"RTN","IBACSV",18,0)
 ;
"RTN","IBACSV",19,0)
 ;Returns data of the ICD Operational code, NULL if error
"RTN","IBACSV",20,0)
 ;Input: IBC-code, IBDT-date (default is today)
"RTN","IBACSV",21,0)
 ;Output: (by reference) - IBERROR - error string if error happened
"RTN","IBACSV",22,0)
 ;DO NOT USE THIS CALL TO DETERMINE ACTIVE/INACTIVE STATUS OF THE CODE
"RTN","IBACSV",23,0)
ICD0(IBC,IBDT,IBERROR) N IBINF
"RTN","IBACSV",24,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",25,0)
 S IBERROR=""
"RTN","IBACSV",26,0)
 S IBINF=$$ICDOP^ICDCODE(IBC,IBDT,,1) ;Local codes supported
"RTN","IBACSV",27,0)
 I IBINF<0 S IBERROR=$P(IBINF,U,2),IBINF=""
"RTN","IBACSV",28,0)
 Q $P(IBINF,U,2,999) ;Remove the first piece (IEN)
"RTN","IBACSV",29,0)
 ;
"RTN","IBACSV",30,0)
 ;Returns data of the ICD Diagnosis code, NULL if error
"RTN","IBACSV",31,0)
 ;Input: IBC-code, IBDT-date (default is today)
"RTN","IBACSV",32,0)
 ;Output: (by reference) - IBERROR - error string if error happened
"RTN","IBACSV",33,0)
 ;DO NOT USE THIS CALL TO DETERMINE ACTIVE/INACTIVE STATUS OF THE CODE
"RTN","IBACSV",34,0)
ICD9(IBC,IBDT,IBERROR) N IBINF
"RTN","IBACSV",35,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",36,0)
 S IBERROR=""
"RTN","IBACSV",37,0)
 S IBINF=$$ICDDX^ICDCODE(IBC,IBDT,,1) ; Local codes supported
"RTN","IBACSV",38,0)
 I IBINF<0 S IBERROR=$P(IBINF,U,2),IBINF=""
"RTN","IBACSV",39,0)
 Q $P(IBINF,U,2,999) ;Remove the first piece (IEN)
"RTN","IBACSV",40,0)
 ;
"RTN","IBACSV",41,0)
 ;Returns data of the DRG code, NULL if error
"RTN","IBACSV",42,0)
 ;Input: IBC-code, IBDT-date (default is today)
"RTN","IBACSV",43,0)
 ;Output: (by reference) - IBERROR - error string if error happened
"RTN","IBACSV",44,0)
DRG(IBC,IBDT,IBERROR) N IBINF
"RTN","IBACSV",45,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",46,0)
 S IBERROR=""
"RTN","IBACSV",47,0)
 S IBINF=$$DRG^ICDGTDRG(IBC,IBDT)
"RTN","IBACSV",48,0)
 I IBINF<0 S IBERROR=$P(IBINF,U,2),IBINF=""
"RTN","IBACSV",49,0)
 Q IBINF ;Format of the DRG API is different - the first piece doesn't need to be removed.
"RTN","IBACSV",50,0)
 ;
"RTN","IBACSV",51,0)
 ;
"RTN","IBACSV",52,0)
 ; ==== Determine Active Status for CPT,ICD0,ICD9 and DRG codes ====
"RTN","IBACSV",53,0)
 ;Used by DD for screening CPT codes
"RTN","IBACSV",54,0)
 ;Is the given code active for the date? (default-today)
"RTN","IBACSV",55,0)
CPTACT(IEN,IBDT) N IBINF,IBRES
"RTN","IBACSV",56,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",57,0)
 S IBRES=0
"RTN","IBACSV",58,0)
 S IBINF=$$CPT^ICPTCOD(IEN,IBDT)
"RTN","IBACSV",59,0)
 I IBINF'<0,$P(IBINF,U,7) S IBRES=1
"RTN","IBACSV",60,0)
 Q IBRES
"RTN","IBACSV",61,0)
 ;
"RTN","IBACSV",62,0)
 ;Is the given code active for the date? (default-today)
"RTN","IBACSV",63,0)
ICD0ACT(IEN,IBDT) N IBINF,IBRES
"RTN","IBACSV",64,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",65,0)
 S IBRES=0
"RTN","IBACSV",66,0)
 S IBINF=$$ICDOP^ICDCODE(IEN,IBDT)
"RTN","IBACSV",67,0)
 I IBINF'<0,$P(IBINF,U,10) S IBRES=1
"RTN","IBACSV",68,0)
 Q IBRES
"RTN","IBACSV",69,0)
 ;
"RTN","IBACSV",70,0)
 ;Is the given code active for the date? (default-today)
"RTN","IBACSV",71,0)
ICD9ACT(IEN,IBDT) N IBINF,IBRES
"RTN","IBACSV",72,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",73,0)
 S IBRES=0
"RTN","IBACSV",74,0)
 S IBINF=$$ICDDX^ICDCODE(IEN,IBDT)
"RTN","IBACSV",75,0)
 I IBINF'<0,$P(IBINF,U,10) S IBRES=1
"RTN","IBACSV",76,0)
 Q IBRES
"RTN","IBACSV",77,0)
 ;
"RTN","IBACSV",78,0)
 ;Is the given code active for the date? (default-today)
"RTN","IBACSV",79,0)
DRGACT(IEN,IBDT) N IBINF,IBRES
"RTN","IBACSV",80,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",81,0)
 S IBRES=0
"RTN","IBACSV",82,0)
 S IBINF=$$DRG^ICDGTDRG(IEN,IBDT)
"RTN","IBACSV",83,0)
 I IBINF'<0,$P(IBINF,U,14) S IBRES=1
"RTN","IBACSV",84,0)
 Q IBRES
"RTN","IBACSV",85,0)
 ;
"RTN","IBACSV",86,0)
 ; ==== Determine Record Number (IEN) for CPT, ICD0, ICD9 and DRG codes ====
"RTN","IBACSV",87,0)
 ; Note: the Date of Service doesn't matter here!
"RTN","IBACSV",88,0)
 ;Input: IBC-name
"RTN","IBACSV",89,0)
 ;Returns: IEN of the code (or NULL if not valid)
"RTN","IBACSV",90,0)
CPTIEN(IBC) N IBINF,IBRES
"RTN","IBACSV",91,0)
 S IBRES=""
"RTN","IBACSV",92,0)
 S IBINF=$$CPT^ICPTCOD(IBC)
"RTN","IBACSV",93,0)
 I IBINF>0 S IBRES=$P(IBINF,U)
"RTN","IBACSV",94,0)
 Q IBRES
"RTN","IBACSV",95,0)
 ;
"RTN","IBACSV",96,0)
 ;Input: IBC-name
"RTN","IBACSV",97,0)
 ;Returns: IEN of the code (or NULL if not valid)
"RTN","IBACSV",98,0)
ICD0IEN(IBC) N IBINF,IBRES
"RTN","IBACSV",99,0)
 S IBRES=""
"RTN","IBACSV",100,0)
 S IBINF=$$ICDOP^ICDCODE(IBC)
"RTN","IBACSV",101,0)
 I IBINF>0 S IBRES=$P(IBINF,U)
"RTN","IBACSV",102,0)
 Q IBRES
"RTN","IBACSV",103,0)
 ;
"RTN","IBACSV",104,0)
 ;Input: IBC-name
"RTN","IBACSV",105,0)
 ;Returns: IEN of the code (or NULL if not valid)
"RTN","IBACSV",106,0)
ICD9IEN(IBC) N IBINF,IBRES
"RTN","IBACSV",107,0)
 S IBRES=""
"RTN","IBACSV",108,0)
 S IBINF=$$ICDDX^ICDCODE(IBC)
"RTN","IBACSV",109,0)
 I IBINF>0 S IBRES=$P(IBINF,U)
"RTN","IBACSV",110,0)
 Q IBRES
"RTN","IBACSV",111,0)
 ;
"RTN","IBACSV",112,0)
 ;Input: IBC-name
"RTN","IBACSV",113,0)
 ;Returns: IEN of the code (or NULL if not valid)
"RTN","IBACSV",114,0)
DRGIEN(IBC) N IBINF,IBRES
"RTN","IBACSV",115,0)
 S IBRES=""
"RTN","IBACSV",116,0)
 S IBINF=$$DRG^ICDGTDRG(IBC)
"RTN","IBACSV",117,0)
 I IBINF'<0 S IBRES=$P(IBINF,U,17)
"RTN","IBACSV",118,0)
 Q IBRES
"RTN","IBACSV",119,0)
 ;
"RTN","IBACSV",120,0)
 ; ==== Bill's Date of Service (for diagnosis codes, revenue codes) ====
"RTN","IBACSV",121,0)
 ; Th EVENT DATE of the bill is used as a date of service for CSV
"RTN","IBACSV",122,0)
BDATE(IBIFN,PROC) ;
"RTN","IBACSV",123,0)
 ; PROC (Optional) - IEN of PROCEDURES sub-file.
"RTN","IBACSV",124,0)
 ; if PROC is defined, the function will try to return the date of procedure first.
"RTN","IBACSV",125,0)
 N IBDAT
"RTN","IBACSV",126,0)
 S IBDAT=""
"RTN","IBACSV",127,0)
 I '$G(IBIFN) Q ""
"RTN","IBACSV",128,0)
 ; The following line of code is for entering new procedures.
"RTN","IBACSV",129,0)
 ; If PROC is defined, but NULL - that means adding new procedure to 399.
"RTN","IBACSV",130,0)
 ; Therefore we try to use DGPROCDT variable prior to the bill's Event Date
"RTN","IBACSV",131,0)
 I $D(PROC),'PROC,$G(DGPROCDT)>0 S IBDAT=DGPROCDT
"RTN","IBACSV",132,0)
 I $G(PROC) S IBDAT=$P($P($G(^DGCR(399,+IBIFN,"CP",+PROC,0)),U,2),".")
"RTN","IBACSV",133,0)
 I 'IBDAT S IBDAT=$P($P($G(^DGCR(399,+IBIFN,0)),U,3),".")
"RTN","IBACSV",134,0)
 Q $S(IBDAT>0:IBDAT,1:"")
"RTN","IBACSV",135,0)
 ;
"RTN","IBACSV",136,0)
 ; === PTF Date of Service ===
"RTN","IBACSV",137,0)
PTFDATE(IBPTF) ;
"RTN","IBACSV",138,0)
 I '$G(IBPTF) Q ""
"RTN","IBACSV",139,0)
 Q $$GETDATE^ICDGTDRG(+$G(IBPTF))
"RTN","IBACSV",140,0)
 ;
"RTN","IBACSV",141,0)
 ; === Date of service, associated with the Tracking Number ===
"RTN","IBACSV",142,0)
TRNDATE(IBTRN) ; The EPISODE DATE is used to determine the date of service
"RTN","IBACSV",143,0)
 ; for the given Tracking Number
"RTN","IBACSV",144,0)
 I '$G(IBTRN) Q ""
"RTN","IBACSV",145,0)
 Q $P($P($G(^IBT(356,+IBTRN,0)),U,6),".")
"RTN","IBATEI")
0^39^B58154655
"RTN","IBATEI",1,0)
IBATEI ;ALB/BGA - TRANSFER PRICING INPATIENT TRACKER ; 02-FEB-99
"RTN","IBATEI",2,0)
 ;;2.0;INTEGRATED BILLING;**115,210**;21-MAR-94
"RTN","IBATEI",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified
"RTN","IBATEI",4,0)
 ;
"RTN","IBATEI",5,0)
 ; This routine is called from ^IBAMTD and tracks all patient movements
"RTN","IBATEI",6,0)
 ; as they relate to patients who are out of network.
"RTN","IBATEI",7,0)
 ;
"RTN","IBATEI",8,0)
EN ;  Main Entry Point
"RTN","IBATEI",9,0)
 I '$P($G(^IBE(350.9,1,10)),"^",2) Q  ; transfer pricing turned off
"RTN","IBATEI",10,0)
 I $G(DGPMA)="",$G(DGPMP)="" Q
"RTN","IBATEI",11,0)
 N DFN,IBATIEN,DA,IBRTYPE,TYPE,IBA,IBIND,IBPTF,IBDISDT,IBDISPT,IBATFILE
"RTN","IBATEI",12,0)
 N IBADMDT,IBSOURCE,IBPREF,PTF,ADMIS,IBDFN,IBREST
"RTN","IBATEI",13,0)
 S IBA=$P($S(DGPMA="":DGPMP,1:DGPMA),U,14) Q:IBA<1  ; iba ptr to the admission
"RTN","IBATEI",14,0)
 S IBIND=IBA_";DGPM("
"RTN","IBATEI",15,0)
 ; $$FINDT checks to see if the entry exist and the entry is not cancelled
"RTN","IBATEI",16,0)
 S IBATIEN=$$FINDT^IBATUTL(IBIND)
"RTN","IBATEI",17,0)
 I IBATIEN D  G END
"RTN","IBATEI",18,0)
 . S DFN=$P($G(^IBAT(351.61,+IBATIEN,0)),U,2) Q:DFN<1
"RTN","IBATEI",19,0)
 . ; if the MOVEMENT admission was deleted DELETE entry from 351.61
"RTN","IBATEI",20,0)
 . I DGPMA="",($P(DGPMP,U,2)=1) D  Q
"RTN","IBATEI",21,0)
 . . D DEL^IBATFILE(IBATIEN)
"RTN","IBATEI",22,0)
 . ; if the MOVEMENT deleted a discharge reset transaction STATUS="entered"
"RTN","IBATEI",23,0)
 . I DGPMA="",($P(DGPMP,U,2)=3) D  Q
"RTN","IBATEI",24,0)
 . . S IBATFILE=$$DISC^IBATFILE(IBATIEN)
"RTN","IBATEI",25,0)
 . ; if the MOVEMENT is adding a *DISCHARGE* add the event
"RTN","IBATEI",26,0)
 . I DGPMP="",($P(DGPMA,U,2)=3) D  Q
"RTN","IBATEI",27,0)
 . . ; Look for ptf in the parent event
"RTN","IBATEI",28,0)
 . . Q:'$P(DGPMA,U,14)
"RTN","IBATEI",29,0)
 . . S IBPTF=$P($G(^DGPM($P(DGPMA,U,14),0)),U,16) Q:'IBPTF
"RTN","IBATEI",30,0)
 . . S IBDISDT=$P($G(^DGPT(IBPTF,70)),U)
"RTN","IBATEI",31,0)
 . . Q:IBDISDT']" "
"RTN","IBATEI",32,0)
 . . S IBDISPT=$P($G(^DGPM($P(DGPMA,U,14),0)),U,17) Q:'IBDISPT
"RTN","IBATEI",33,0)
 . . ; PASS IN=ien 351.61,discharge dt in ptf,discharge movement
"RTN","IBATEI",34,0)
 . . S IBATFILE=$$DIS^IBATFILE(IBATIEN,IBDISDT,IBPTF,IBDISPT)
"RTN","IBATEI",35,0)
 . . ; <<end of update existing entry>>
"RTN","IBATEI",36,0)
 . . ; [if new admission not currently being tracked added to 351.61]
"RTN","IBATEI",37,0)
 I DGPMP="",($P(DGPMA,U,2)=1) D  G END
"RTN","IBATEI",38,0)
 . ; check to see if this is a tp $$TTP returns '0' if not TP
"RTN","IBATEI",39,0)
 . Q:'$$TPP^IBATUTL($P(DGPMA,U,3))
"RTN","IBATEI",40,0)
 . S IBADMDT=$P(DGPMA,U),IBSOURCE=$P(DGPMA,U,14)
"RTN","IBATEI",41,0)
 . S IBPREF=$$PPF^IBATUTL($P(DGPMA,U,3)) Q:'IBPREF
"RTN","IBATEI",42,0)
 . Q:IBSOURCE=""!($P(DGPMA,U,14)="")
"RTN","IBATEI",43,0)
 . S IBSOURCE=IBSOURCE_";DGPM("
"RTN","IBATEI",44,0)
 . S IBATFILE=$$ADM^IBATFILE($P(DGPMA,U,3),IBADMDT,IBPREF,IBSOURCE)
"RTN","IBATEI",45,0)
 ;
"RTN","IBATEI",46,0)
 ; Case where we have a discharge but the admission was not recorded 
"RTN","IBATEI",47,0)
 I DGPMP="",($P(DGPMA,U,2)=3) D  G END
"RTN","IBATEI",48,0)
 . Q:'$$TPP^IBATUTL($P(DGPMA,U,3))
"RTN","IBATEI",49,0)
 . ; add the admission and than add the discharge
"RTN","IBATEI",50,0)
 . S IBADMDT=$P(DGPMA,U),IBSOURCE=$P(DGPMA,U,14)
"RTN","IBATEI",51,0)
 . S IBPREF=$$PPF^IBATUTL($P(DGPMA,U,3)) Q:'IBPREF
"RTN","IBATEI",52,0)
 . Q:IBSOURCE=""!($P(DGPMA,U,14)="")
"RTN","IBATEI",53,0)
 . S IBSOURCE=IBSOURCE_";DGPM("
"RTN","IBATEI",54,0)
 . S IBATFILE=$$ADM^IBATFILE($P(DGPMA,U,3),IBADMDT,IBPREF,IBSOURCE)
"RTN","IBATEI",55,0)
 . ; add the discharge
"RTN","IBATEI",56,0)
 . Q:'$P(DGPMA,U,14)!(IBATFILE<1)
"RTN","IBATEI",57,0)
 . S IBATIEN=+IBATFILE,IBPTF=$P($G(^DGPM($P(DGPMA,U,14),0)),U,16) Q:'IBPTF
"RTN","IBATEI",58,0)
 . S IBDISDT=$P($G(^DGPT(IBPTF,70)),U)
"RTN","IBATEI",59,0)
 . Q:IBDISDT']" "
"RTN","IBATEI",60,0)
 . S IBDISPT=$P($G(^DGPM($P(DGPMA,U,14),0)),U,17) Q:'IBDISPT
"RTN","IBATEI",61,0)
 . ; PASS IN=ien 351.61,discharge dt in ptf,discharge movement
"RTN","IBATEI",62,0)
 . S IBATFILE=$$DIS^IBATFILE(IBATIEN,IBDISDT,IBPTF,IBDISPT)
"RTN","IBATEI",63,0)
 Q
"RTN","IBATEI",64,0)
 ;
"RTN","IBATEI",65,0)
FINDRT(PTF,ADMIS,IBDFN) ; Find the Rate
"RTN","IBATEI",66,0)
 ;
"RTN","IBATEI",67,0)
 ;  Input:  PTF=ien to PTF
"RTN","IBATEI",68,0)
 ;        ADMIS=ien to DGPM Patient Movement
"RTN","IBATEI",69,0)
 ;        IBDFN=ien to Patient File
"RTN","IBATEI",70,0)
 ;
"RTN","IBATEI",71,0)
 ;  Output:  
"RTN","IBATEI",72,0)
 ;       IBREST= if 0^ 2nd piece is error message
"RTN","IBATEI",73,0)
 ;             = if 1^ the rate has been calculated.
"RTN","IBATEI",74,0)
 N IBATERR,IBRTYPE,IBADMDT,CHARGE,IBPREF,DISSPEC,TYPE,IBCALC,DRG
"RTN","IBATEI",75,0)
 I '$G(PTF)!('$G(ADMIS))!('$G(IBDFN)) S IBREST="0^Parmeter passed in to FINDRT was less than one" Q IBREST
"RTN","IBATEI",76,0)
 S IBATERR=0,IBADMDT=$P($P($G(^DGPM(+ADMIS,0)),U),".")
"RTN","IBATEI",77,0)
 I IBADMDT<1 S IBREST="0^No admission date FOUND for ^dgpm ien="_ADMIS Q IBREST
"RTN","IBATEI",78,0)
 S IBRTYPE=$$TYPRATE(PTF)  ; returns bed or drg
"RTN","IBATEI",79,0)
 I IBRTYPE["Could not find" Q IBRTYPE  ;no DRG or Rate could be found
"RTN","IBATEI",80,0)
 I $P(IBRTYPE,U,2)["DRG" D  Q IBREST
"RTN","IBATEI",81,0)
 . S DRG=$P(IBRTYPE,U)
"RTN","IBATEI",82,0)
 . ; Find the home facility
"RTN","IBATEI",83,0)
 . S IBPREF=$$PPF^IBATUTL(+IBDFN) I 'IBPREF S IBREST="0^No home facility found for DFN="_IBDFN  Q
"RTN","IBATEI",84,0)
 . ; Pass in DRG the date of the admission, the pref fac. and return
"RTN","IBATEI",85,0)
 . ; CHARGE=1!0^default rate^nego rate^rate to use^tortliability rate
"RTN","IBATEI",86,0)
 . S CHARGE=$$INPT^IBATCM(DRG,IBADMDT,IBPREF)
"RTN","IBATEI",87,0)
 . I '$P(CHARGE,U)!$P(CHARGE,U,4)<1 S IBREST="0^Could not find a valid charge for the DRG" Q
"RTN","IBATEI",88,0)
 . ; Pass in string "DRG",ien 405,DRG, DOLLAR AMOUNT)
"RTN","IBATEI",89,0)
 . S IBREST=$$CALCRT("DRG",ADMIS,DRG,$P(CHARGE,U,4))
"RTN","IBATEI",90,0)
 . ; if the second piece of IBVALUE is there than we have an
"RTN","IBATEI",91,0)
 . ; error (need to do something) if not file away.
"RTN","IBATEI",92,0)
 . ; if the filing was successful we need to set IBREST=1 and quit
"RTN","IBATEI",93,0)
 . ; otherwise set IBREST="0^give reason for problem
"RTN","IBATEI",94,0)
 I $P(IBRTYPE,U,2)["BED" D  Q IBREST  ; price and file the claim
"RTN","IBATEI",95,0)
 . S IBREST=$$CALCRT("BED",ADMIS,$P(IBRTYPE,U))
"RTN","IBATEI",96,0)
 ;
"RTN","IBATEI",97,0)
TYPRATE(X) ;  Pass in PTF ien and return either DRG or Bedsection or ERROR
"RTN","IBATEI",98,0)
 ; see if PTF has a DRG
"RTN","IBATEI",99,0)
 I '$G(X) S TYPE="0^Parameter passed into TYPRATE(X) has no value" Q TYPE
"RTN","IBATEI",100,0)
 N IBPTF,IBPTFD,DIC,DA,DR,DIQ,IBDISCH,IBBED
"RTN","IBATEI",101,0)
 S DIC="^DGPT(",DA=X,DR=".01;71;9",DIQ="IBPTF",DIQ(0)="I" D EN^DIQ1
"RTN","IBATEI",102,0)
 K DIQ(0) S DIQ="IBPTFD" D EN^DIQ1  ; i need the computed drg value
"RTN","IBATEI",103,0)
 I '$D(IBPTF),('$D(IBPTFD)) S TYPE="0^Could not find PTF RECORD" Q TYPE
"RTN","IBATEI",104,0)
 I $G(IBPTFD(45,DA,9))="",$G(IBPTF(45,DA,71,"I"))="" S TYPE="0^Could not find a PTF RECORD" Q TYPE
"RTN","IBATEI",105,0)
 S DISSPEC=$G(IBPTF(45,DA,71,"I")) ; used in $$calc when calculating outliers
"RTN","IBATEI",106,0)
 ; Below if i have a drg and the drg can be priced SELECT drg
"RTN","IBATEI",107,0)
 I $G(IBPTFD(45,DA,9)),+$$INPT^IBATCM(IBPTFD(45,DA,9),IBADMDT) S TYPE=$G(IBPTFD(45,DA,9))_U_"DRG"
"RTN","IBATEI",108,0)
 E  D
"RTN","IBATEI",109,0)
 . S IBDISCH=$G(IBPTF(45,DA,71,"I")) ;gives you the discharge speciality
"RTN","IBATEI",110,0)
 . S IBBED=$P($G(^DIC(42.4,+IBDISCH,0)),U,5) ; Bedsection 399.1
"RTN","IBATEI",111,0)
 . S TYPE=IBBED_U_"BED"
"RTN","IBATEI",112,0)
 Q TYPE
"RTN","IBATEI",113,0)
 ;
"RTN","IBATEI",114,0)
CALCRT(Z,Y,V,R) ; Calculate LOS, and price out claim.
"RTN","IBATEI",115,0)
 ;   INPUT:
"RTN","IBATEI",116,0)
 ;         Z = a string either "BED" or "DRG"
"RTN","IBATEI",117,0)
 ;         Y = ien for the admission movement
"RTN","IBATEI",118,0)
 ;         V = value either bedsection NAME or the drg NUMBER
"RTN","IBATEI",119,0)
 ;         R = used only with DRG and it is the dollar value of the drg.
"RTN","IBATEI",120,0)
 ;  OUTPUT:
"RTN","IBATEI",121,0)
 ;         IBCALC=" if 0^ 2nd piece is error message
"RTN","IBATEI",122,0)
 ;                  if 1^ there are 2 possible options that can be returned
"RTN","IBATEI",123,0)
 ;         Option 1 - If we are calculating a Bed Section
"RTN","IBATEI",124,0)
 ;                  1^calculated amount^"B"
"RTN","IBATEI",125,0)
 ;         Option 2 - If we are calculating a DRG
"RTN","IBATEI",126,0)
 ;                  1^calculated amt^ien drg^los^hightrim^outlier days
"RTN","IBATEI",127,0)
 ;                  ^bedsection rate for the outliers
"RTN","IBATEI",128,0)
 ;
"RTN","IBATEI",129,0)
 N X,IBBEDPTR,IBLOS,IBDATE,CALCDATE,DRGHIGH,IBBEDRT,IBDIFF,IBBED,IBOUTDT,IBBEDRT,DGPMIFN
"RTN","IBATEI",130,0)
 I '$D(Z)!('$D(V))!($G(Y)<1) S IBCALC="0^parameter 'Z' is invalid" Q IBCALC
"RTN","IBATEI",131,0)
 S IBCALC=0 I Z'="DRG"&(Z'="BED") S IBCALC="0^parameter is incorrect" Q IBCALC
"RTN","IBATEI",132,0)
 ; calculate the LOS  Y=ien for the admission movement
"RTN","IBATEI",133,0)
 I '$D(^DGPM(+Y,0)) S IBCALC="0^ien "_Y_" in 405 does not exist" Q IBCALC
"RTN","IBATEI",134,0)
 I Z["DRG",($G(R)<1) S IBCALC="0^the drg dollar value for ien "_Y_" was not passed in" Q IBCALC
"RTN","IBATEI",135,0)
 S DGPMIFN=Y D ^DGPMLOS
"RTN","IBATEI",136,0)
 I $P(X,U,5)<1 S IBCALC="0^no LOS found FOR movement "_Y Q IBCALC
"RTN","IBATEI",137,0)
 E  S IBLOS=$P(X,U,5)
"RTN","IBATEI",138,0)
 S IBDATE=$P($P($G(^DGPM(+Y,0)),U),".") ; Date of patient movement
"RTN","IBATEI",139,0)
 I Z="BED" D  Q IBCALC
"RTN","IBATEI",140,0)
 . ;get the pointer to the bedsection
"RTN","IBATEI",141,0)
 . S IBBEDPTR=$$MCCRUTL^IBCRU1(V,5) ; 5 distinguishes bedsection in 399.1
"RTN","IBATEI",142,0)
 . I IBBEDPTR<1 S IBCALC="0^could not find pointer to bedsection for name: "_V Q
"RTN","IBATEI",143,0)
 . S CALCDATE=IBDATE
"RTN","IBATEI",144,0)
 . ; below 1=ien to the charge set = TL-INPT(INCLUSIVE)  #363.3
"RTN","IBATEI",145,0)
 . S IBCALC=$$ITCHG^IBCRCI(1,IBBEDPTR,CALCDATE)
"RTN","IBATEI",146,0)
 . S IBCALC=$P(IBCALC,U)
"RTN","IBATEI",147,0)
 . S IBCALC=$S(IBCALC<1:"0^No rate found for bedsect "_Y,1:IBCALC)
"RTN","IBATEI",148,0)
 . I IBCALC<1 Q 
"RTN","IBATEI",149,0)
 . S IBCALC="1^"_(IBLOS*(IBCALC*.8))_U_"B"
"RTN","IBATEI",150,0)
 ;
"RTN","IBATEI",151,0)
 ; (*****  calculate DRG outliers here ******)
"RTN","IBATEI",152,0)
 I Z="DRG" D  Q IBCALC
"RTN","IBATEI",153,0)
 . ; do look up calculate drg value
"RTN","IBATEI",154,0)
 . S DRGHIGH=$P($$DRG^IBACSV(+V,IBDATE),U,4)
"RTN","IBATEI",155,0)
 . S IBDIFF=$S(DRGHIGH:IBLOS-DRGHIGH,1:0)
"RTN","IBATEI",156,0)
 . S IBCALC=R ;==DRG is calculated for the entire los except when there are high trim days
"RTN","IBATEI",157,0)
 . ; if you have an outlier and you have a bedsection calc outlier
"RTN","IBATEI",158,0)
 . ; disspec is the ptr to speciality from ptf set in $$typrate
"RTN","IBATEI",159,0)
 . I IBDIFF>0,(DISSPEC>0) D 
"RTN","IBATEI",160,0)
 . . ; DISSPEC ;gives you the discharge speciality
"RTN","IBATEI",161,0)
 . . S IBBED=$P($G(^DIC(42.4,+DISSPEC,0)),U,5) ; Name of Bedsection 399.1
"RTN","IBATEI",162,0)
 . . S IBBEDPTR=$$MCCRUTL^IBCRU1(IBBED,5) ; Ptr to bedsection
"RTN","IBATEI",163,0)
 . . S IBOUTDT=$P($G(^DGPM(+Y,0)),U)
"RTN","IBATEI",164,0)
 . . S IBBEDRT=$$ITCHG^IBCRCI(1,IBBEDPTR,IBOUTDT) ; returns rate for bedsection
"RTN","IBATEI",165,0)
 . . S IBBEDRT=$P(IBBEDRT,U)
"RTN","IBATEI",166,0)
 . . I IBBEDRT>0 S IBBEDRT=(IBBEDRT*.8) ;**BGA-MOD 2/9/2000
"RTN","IBATEI",167,0)
 . S IBCALC="1^"_IBCALC_U_V_U_IBLOS_U_DRGHIGH_U_$S(IBDIFF<1:0,1:IBDIFF)_U_$S($G(IBBEDRT)>0:IBBEDRT,1:0)
"RTN","IBATEI",168,0)
 . ; All bedsections,drgs and outliers are calculated at 80% of there face value
"RTN","IBATEI",169,0)
 Q IBCALC
"RTN","IBATEI",170,0)
 ;
"RTN","IBATEI",171,0)
END ;
"RTN","IBATEI",172,0)
 W !,"Updating Transfer Pricing has been...completed."
"RTN","IBATEI",173,0)
 Q
"RTN","IBATLM2A")
0^1^B33142695
"RTN","IBATLM2A",1,0)
IBATLM2A ;LL/ELZ - TRANSFER PRICING PT TRANSACTION DETAIL ; 15-SEP-1998
"RTN","IBATLM2A",2,0)
 ;;2.0;INTEGRATED BILLING;**115,210**;21-MAR-94
"RTN","IBATLM2A",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBATLM2A",4,0)
 ;
"RTN","IBATLM2A",5,0)
 N IBX,IBY K ^TMP("IBATEE",$J)
"RTN","IBATLM2A",6,0)
 F IBX=0,4,5,6 S IBDATA(IBX)=$G(^IBAT(351.61,IBIEN,IBX))
"RTN","IBATLM2A",7,0)
 ;
"RTN","IBATLM2A",8,0)
 S IBY=""
"RTN","IBATLM2A",9,0)
 D SET("*** General Information ***",.IBY,26,27)
"RTN","IBATLM2A",10,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",11,0)
 D CNTRL^VALM10(VALMCNT,26,27,IOINHI,IOINORM)
"RTN","IBATLM2A",12,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",13,0)
 ;
"RTN","IBATLM2A",14,0)
 D SET("Transaction Date:",.IBY,1,17)
"RTN","IBATLM2A",15,0)
 D SET($$DATE($P(IBDATA(0),"^",3)),.IBY,19,19)
"RTN","IBATLM2A",16,0)
 D SET("Event Date:",.IBY,48,11)
"RTN","IBATLM2A",17,0)
 D SET($$DATE($P(IBDATA(0),"^",4)),.IBY,60,20)
"RTN","IBATLM2A",18,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",19,0)
 ;
"RTN","IBATLM2A",20,0)
 D SET("Status:",.IBY,11,7)
"RTN","IBATLM2A",21,0)
 D SET($$EX^IBATUTL(351.61,.05,$P(IBDATA(0),"^",5)),.IBY,19,19)
"RTN","IBATLM2A",22,0)
 D SET("Priced Date:",.IBY,47,12)
"RTN","IBATLM2A",23,0)
 D SET($$DATE($P(IBDATA(0),"^",13)),.IBY,60,20)
"RTN","IBATLM2A",24,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",25,0)
 ;
"RTN","IBATLM2A",26,0)
 D SET("From Date:",.IBY,8,10)
"RTN","IBATLM2A",27,0)
 D SET($$DATE($P(IBDATA(0),"^",9)),.IBY,19,19)
"RTN","IBATLM2A",28,0)
 D SET("To Date:",.IBY,51,8)
"RTN","IBATLM2A",29,0)
 D SET($$DATE($P(IBDATA(0),"^",10)),.IBY,60,20)
"RTN","IBATLM2A",30,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",31,0)
 ;
"RTN","IBATLM2A",32,0)
 D SET("Facility:",.IBY,9,9)
"RTN","IBATLM2A",33,0)
 D SET($$EX^IBATUTL(351.61,.11,$P(IBDATA(0),"^",11)),.IBY,19,19)
"RTN","IBATLM2A",34,0)
 D SETVALM(.VALMCNT,.IBY),SETVALM(.VALMCNT,""),SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",35,0)
 ;
"RTN","IBATLM2A",36,0)
 D SET("*** Workload/Pricing Detail ***",.IBY,24,31)
"RTN","IBATLM2A",37,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",38,0)
 D CNTRL^VALM10(VALMCNT,24,31,IOINHI,IOINORM)
"RTN","IBATLM2A",39,0)
 ;
"RTN","IBATLM2A",40,0)
 D @$S($P(IBDATA(0),"^",12)["DGPM(":"INPT",$P(IBDATA(0),"^",12)["SCE(":"OUT",$P(IBDATA(0),"^",12)["RMPR(":"RMPR",1:"RX")
"RTN","IBATLM2A",41,0)
 ;
"RTN","IBATLM2A",42,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",43,0)
 D SET("*** Totals ***",.IBY,33,14)
"RTN","IBATLM2A",44,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",45,0)
 D CNTRL^VALM10(VALMCNT,26,28,IOINHI,IOINORM)
"RTN","IBATLM2A",46,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",47,0)
 ;
"RTN","IBATLM2A",48,0)
 D SET("Bill Amount:",.IBY,6,18)
"RTN","IBATLM2A",49,0)
 D SET($FN($P(IBDATA(6),"^",2),"",2),.IBY,25,54)
"RTN","IBATLM2A",50,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",51,0)
 ;
"RTN","IBATLM2A",52,0)
 D SET("Patient Copay:",.IBY,6,14)
"RTN","IBATLM2A",53,0)
 S $P(IBDATA(6),"^",3)=$$COPAY^IBATUTL(DFN,$P(IBDATA(0),"^",12),$P(IBDATA(0),"^",9),$P(IBDATA(0),"^",10))
"RTN","IBATLM2A",54,0)
 D SET($FN($P(IBDATA(6),"^",3),"",2),.IBY,26,54)
"RTN","IBATLM2A",55,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",56,0)
 ;
"RTN","IBATLM2A",57,0)
 Q
"RTN","IBATLM2A",58,0)
INPT ; -- detail display for inpatient
"RTN","IBATLM2A",59,0)
 N IBDRG,VAIP
"RTN","IBATLM2A",60,0)
 ;
"RTN","IBATLM2A",61,0)
 S IBDRG=$G(^IBAT(351.61,IBIEN,1))
"RTN","IBATLM2A",62,0)
 ;
"RTN","IBATLM2A",63,0)
 S VAIP("E")=+$P(IBDATA(0),"^",12) D IN5^VADPT
"RTN","IBATLM2A",64,0)
 ;
"RTN","IBATLM2A",65,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",66,0)
 D SET("Admission Date:",.IBY,3,15)
"RTN","IBATLM2A",67,0)
 D SET($P(VAIP(13,1),"^",2),.IBY,19,19)
"RTN","IBATLM2A",68,0)
 D SET("Discharge Date:",.IBY,44,15)
"RTN","IBATLM2A",69,0)
 D SET($P(VAIP(17,1),"^",2),.IBY,60,20)
"RTN","IBATLM2A",70,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",71,0)
 ;
"RTN","IBATLM2A",72,0)
 D SET("Ward Location:",.IBY,4,14)
"RTN","IBATLM2A",73,0)
 D SET($P(VAIP(5),"^",2),.IBY,19,19)
"RTN","IBATLM2A",74,0)
 D SET("Treating Specialty:",.IBY,40,19)
"RTN","IBATLM2A",75,0)
 D SET($P(VAIP(8),"^",2),.IBY,60,20)
"RTN","IBATLM2A",76,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",77,0)
 ;
"RTN","IBATLM2A",78,0)
 D SET("DRG:",.IBY,14,4)
"RTN","IBATLM2A",79,0)
 D SET($$EX^IBATUTL(351.61,1.01,$P(IBDRG,"^")),.IBY,19,19)
"RTN","IBATLM2A",80,0)
 D SET("DRG Charge:",.IBY,48,11)
"RTN","IBATLM2A",81,0)
 D SET($FN($P(IBDRG,"^",2),"",2),.IBY,60,20)
"RTN","IBATLM2A",82,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",83,0)
 ;
"RTN","IBATLM2A",84,0)
 D SET("Inpatient LOS:",.IBY,4,14)
"RTN","IBATLM2A",85,0)
 D SET(+$P(IBDRG,"^",3),.IBY,19,19)
"RTN","IBATLM2A",86,0)
 D SET("High Trim Days:",.IBY,44,15)
"RTN","IBATLM2A",87,0)
 D SET(+$P(IBDRG,"^",4),.IBY,60,20)
"RTN","IBATLM2A",88,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",89,0)
 ;
"RTN","IBATLM2A",90,0)
 D SET("Outlier Days:",.IBY,5,13)
"RTN","IBATLM2A",91,0)
 D SET(+$P(IBDRG,"^",5),.IBY,19,19)
"RTN","IBATLM2A",92,0)
 D SET("Outlier Rate:",.IBY,46,13)
"RTN","IBATLM2A",93,0)
 D SET($FN($P(IBDRG,"^",6),"",2),.IBY,60,20)
"RTN","IBATLM2A",94,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",95,0)
 Q
"RTN","IBATLM2A",96,0)
OUT ; -- detail display for outpatient
"RTN","IBATLM2A",97,0)
 N IBX,IBDXLIST,IBSCE,IBPROV
"RTN","IBATLM2A",98,0)
 ;
"RTN","IBATLM2A",99,0)
 D GETGEN^SDOE($P($P(IBDATA(0),"^",12),";"),"IBSCE")
"RTN","IBATLM2A",100,0)
 D GETPRV^SDOE($P($P(IBDATA(0),"^",12),";"),"IBPROV")
"RTN","IBATLM2A",101,0)
 ;
"RTN","IBATLM2A",102,0)
 D GETDX^SDOE($P($P(IBDATA(0),"^",12),";"),"IBDXLIST")
"RTN","IBATLM2A",103,0)
 D DX(.IBDXLIST,$P($G(IBDATA(0)),U,4))
"RTN","IBATLM2A",104,0)
 ;
"RTN","IBATLM2A",105,0)
 D SET("Procedure Information:",.IBY,1,22)
"RTN","IBATLM2A",106,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",107,0)
 D CNTRL^VALM10(VALMCNT,1,22,IOINHI,IOINORM)
"RTN","IBATLM2A",108,0)
 ;
"RTN","IBATLM2A",109,0)
 S IBX=0 F  S IBX=$O(^IBAT(351.61,IBIEN,3,IBX)) Q:IBX<1  D
"RTN","IBATLM2A",110,0)
 . S IBX(0)=$G(^IBAT(351.61,IBIEN,3,IBX,0))
"RTN","IBATLM2A",111,0)
 . S IBX(1)=$$PROC^IBATUTL($P(IBX(0),"^"))
"RTN","IBATLM2A",112,0)
 . ;
"RTN","IBATLM2A",113,0)
 . D SET(+IBX(1),.IBY,5,6)
"RTN","IBATLM2A",114,0)
 . D SET("-",.IBY,13,1)
"RTN","IBATLM2A",115,0)
 . D SET($P(IBX(1),"^",2),.IBY,15,40)
"RTN","IBATLM2A",116,0)
 . D SET(+$P(IBX(0),"^",2),.IBY,57,3)
"RTN","IBATLM2A",117,0)
 . D SET("x",.IBY,62,1)
"RTN","IBATLM2A",118,0)
 . D SET($FN($P(IBX(0),"^",3),"",2),.IBY,64,15)
"RTN","IBATLM2A",119,0)
 . D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",120,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",121,0)
 ;
"RTN","IBATLM2A",122,0)
 D SET("Visit Information:",.IBY,1,18)
"RTN","IBATLM2A",123,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",124,0)
 D CNTRL^VALM10(VALMCNT,1,22,IOINHI,IOINORM)
"RTN","IBATLM2A",125,0)
 ;
"RTN","IBATLM2A",126,0)
 D SET("Location:",.IBY,8,14)
"RTN","IBATLM2A",127,0)
 D SET($P(^SC(+$P(IBSCE(0),"^",4),0),"^"),.IBY,19,46) ; dbia 10040
"RTN","IBATLM2A",128,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",129,0)
 ;
"RTN","IBATLM2A",130,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",131,0)
 D SET("Provider(s):",.IBY,5,17)
"RTN","IBATLM2A",132,0)
 S IBX=0 F  S IBX=$O(IBPROV(IBX)) Q:IBX<.5  D
"RTN","IBATLM2A",133,0)
 . D SET($$GET1^DIQ(200,+IBPROV(IBX),.01),.IBY,19,49) ; dbia 10060
"RTN","IBATLM2A",134,0)
 . D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",135,0)
 ;
"RTN","IBATLM2A",136,0)
 Q
"RTN","IBATLM2A",137,0)
RX ; -- detail display for rx
"RTN","IBATLM2A",138,0)
 D SET("Drug:",.IBY,5,5)
"RTN","IBATLM2A",139,0)
 D SET($$GET1^DIQ(50,+IBDATA(4),.01),.IBY,12,40) ; dbia 10043
"RTN","IBATLM2A",140,0)
 D SET(+$P(IBDATA(4),"^",2),.IBY,55,3)
"RTN","IBATLM2A",141,0)
 D SET("x",.IBY,60,1)
"RTN","IBATLM2A",142,0)
 D SET($FN($P(IBDATA(4),"^",3),"",3),.IBY,62,15)
"RTN","IBATLM2A",143,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",144,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",145,0)
 Q
"RTN","IBATLM2A",146,0)
RMPR ; -- detail display for prosthetic
"RTN","IBATLM2A",147,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",148,0)
 D SET("Prosthetic Item:",.IBY,5,16)
"RTN","IBATLM2A",149,0)
 D SET($$GET1^DIQ(661,$P(IBDATA(4),"^",4),.01),.IBY,12,40) ; dbia 374
"RTN","IBATLM2A",150,0)
 D SET($FN($P(IBDATA(4),"^",5),",",2),.IBY,55,15)
"RTN","IBATLM2A",151,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",152,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",153,0)
 Q
"RTN","IBATLM2A",154,0)
DX(IBDX,IBDATE) ; -- diagnosis info
"RTN","IBATLM2A",155,0)
 N IBX
"RTN","IBATLM2A",156,0)
 ;
"RTN","IBATLM2A",157,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",158,0)
 D SET("Diagnosis Information:",.IBY,1,22)
"RTN","IBATLM2A",159,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",160,0)
 D CNTRL^VALM10(VALMCNT,1,22,IOINHI,IOINORM)
"RTN","IBATLM2A",161,0)
 ;
"RTN","IBATLM2A",162,0)
 S IBX=0 F  S IBX=$O(IBDX(IBX)) Q:IBX<1  D
"RTN","IBATLM2A",163,0)
 . S IBX(0)=$$ICD9^IBACSV(+IBDX(IBX),$G(IBDATE))
"RTN","IBATLM2A",164,0)
 . ;
"RTN","IBATLM2A",165,0)
 . D SET($P(IBX(0),"^"),.IBY,5,7)
"RTN","IBATLM2A",166,0)
 . D SET("-",.IBY,14,1)
"RTN","IBATLM2A",167,0)
 . D SET($P(IBX(0),"^",3),.IBY,16,30)
"RTN","IBATLM2A",168,0)
 . D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",169,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",170,0)
 Q
"RTN","IBATLM2A",171,0)
SET(TEXT,STRING,COL,LENGTH) ; -- set up string with valm1
"RTN","IBATLM2A",172,0)
 S STRING=$$SETSTR^VALM1($$LOWER^VALM1(TEXT),STRING,COL,LENGTH)
"RTN","IBATLM2A",173,0)
 Q
"RTN","IBATLM2A",174,0)
SETVALM(LINE,TEXT) ; -- sets line for display
"RTN","IBATLM2A",175,0)
 S LINE=LINE+1
"RTN","IBATLM2A",176,0)
 S ^TMP("IBATEE",$J,LINE,0)=TEXT
"RTN","IBATLM2A",177,0)
 S TEXT=""
"RTN","IBATLM2A",178,0)
 Q
"RTN","IBATLM2A",179,0)
DATE(X) ; -- returns date for display
"RTN","IBATLM2A",180,0)
 Q $$FMTE^XLFDT(X,"5D")
"RTN","IBCBB2")
0^2^B32237073
"RTN","IBCBB2",1,0)
IBCBB2 ;ALB/ARH - CONTINUATION OF EDIT CHECKS ROUTINE (HCFA 1500) ;04/14/92
"RTN","IBCBB2",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210**;21-MAR-94
"RTN","IBCBB2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBB2",4,0)
 ;
"RTN","IBCBB2",5,0)
 ;MAP TO DGCRBB2
"RTN","IBCBB2",6,0)
 ;
"RTN","IBCBB2",7,0)
EN ;
"RTN","IBCBB2",8,0)
 N IBI,IBJ,IBN,IBY,IBDX,IBDXO,IBDXL,IBCPT,IBCPTL,IBOLAB,Z,IBXSAVE,IBLOC,IBTX,IBPS,IBSP
"RTN","IBCBB2",9,0)
 I '$D(IBER) S IBER=""
"RTN","IBCBB2",10,0)
 S IBTX=$$TXMT^IBCEF4(IBIFN)
"RTN","IBCBB2",11,0)
 ;
"RTN","IBCBB2",12,0)
 ; Warn if no group provider id (MCRWNR is a default)
"RTN","IBCBB2",13,0)
 I '$$WNRBILL^IBEFUNC(IBIFN) D
"RTN","IBCBB2",14,0)
 . S Z=$P($G(^DGCR(399,IBIFN,"M1")),U,$$COBN^IBCEF(IBIFN)+1)
"RTN","IBCBB2",15,0)
 . I Z="" D WARN^IBCBB11("No group prov # for the current ins co - site tax id will be used")
"RTN","IBCBB2",16,0)
 ; Max 4 modifiers per CPT code allowed before warning
"RTN","IBCBB2",17,0)
 K IBXDATA
"RTN","IBCBB2",18,0)
 D F^IBCEF("N-HCFA 1500 MODIFIERS",,,IBIFN) ;Get modifiers
"RTN","IBCBB2",19,0)
 ;
"RTN","IBCBB2",20,0)
 S Z=0 F  S Z=$O(IBZPRC92(Z)) Q:'Z  I $P(IBZPRC92(Z),U)["ICPT(",$L($P(IBZPRC92(Z),U,15),",")>4 S IBI="Proc "_$$PRCD^IBCEF1($P(IBZPRC92(Z),U))_" has > 4 modifiers - only first 4 will be used" D WARN^IBCBB11(IBI)
"RTN","IBCBB2",21,0)
 ; ICD-9 diagnosis, at least 1 required
"RTN","IBCBB2",22,0)
 D SET^IBCSC4D(IBIFN,.IBDX,.IBDXO) I '$P(IBDX,U,2) S IBER=IBER_"IB071;"
"RTN","IBCBB2",23,0)
 S IBI=$O(IBDXO(0))
"RTN","IBCBB2",24,0)
 I IBI,$$INPAT^IBCEF(IBIFN,1),$E($$ICD9^IBACSV(+$P(IBDXO(IBI),U)))="V" S Z="Principal Dx V-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB2",25,0)
 ;
"RTN","IBCBB2",26,0)
 ; CPT procs must be associated with a dx, must have a defined provider
"RTN","IBCBB2",27,0)
 S (IBLOC,IBN,IBI,IBY)=0 F  S IBI=$O(^DGCR(399,IBIFN,"CP",IBI)) Q:IBI'?1N.N  S IBCPT=^(IBI,0) D  I +IBY S IBN=1
"RTN","IBCBB2",28,0)
 . I IBER'["IB089",$P(IBCPT,U,10)=7,$S('$P(IBCPT,U,16):1,1:$P(IBCPT,U,16)#15) S IBER=IBER_"IB089;" ;anesthesia needs minutes in multiple of 15
"RTN","IBCBB2",29,0)
 . I 'IBLOC,$P(IBCPT,U,15)'="",IBTX S Z="At least 1 charge has local box 24K data that will not be transmitted - " S IBLOC=1 D WARN^IBCBB11(Z) S Z="  This data will only print locally" D WARN^IBCBB11(Z)
"RTN","IBCBB2",30,0)
 . I $P(IBCPT,U)'["ICPT(" S:IBER'["IB092" IBER=IBER_"IB092;" Q
"RTN","IBCBB2",31,0)
 . S IBY=1 F IBJ=11:1:14 I +$P(IBCPT,"^",IBJ) S IBCPTL(+$P(IBCPT,"^",IBJ))="",IBY=0
"RTN","IBCBB2",32,0)
 . ;I '$P(IBCPT,U,18) S:IBER'["IB094;" IBER=IBER_"IB094;" Q
"RTN","IBCBB2",33,0)
 I +IBN S IBER=IBER_"IB072;"
"RTN","IBCBB2",34,0)
 ;
"RTN","IBCBB2",35,0)
 I '$$OCC10(IBIFN,.IBDX,2) S IBER=IBER_"IB093;"
"RTN","IBCBB2",36,0)
 ; HCFA 1500: dxs associated with procs must be defined dxs for the bill
"RTN","IBCBB2",37,0)
 S IBI=0 F  S IBI=$O(IBDX(IBI))  Q:'IBI  S IBDXL(IBDX(IBI))=""
"RTN","IBCBB2",38,0)
 S (IBN,IBI)=0 F  S IBI=$O(IBCPTL(IBI)) Q:'IBI  I '$D(IBDXL(IBI)) S IBN=1 Q
"RTN","IBCBB2",39,0)
 I +IBN S IBER=IBER_"IB073;"
"RTN","IBCBB2",40,0)
 ;
"RTN","IBCBB2",41,0)
 I $$WNRBILL^IBEFUNC(IBIFN),$$MRATYPE^IBEFUNC(IBIFN)'="B" D WARN^IBCBB11("MEDICARE policy assigned to this HCFA-1500 bill is not a PART B policy")
"RTN","IBCBB2",42,0)
 ; Only one occurrence code can be present for event date for box 14
"RTN","IBCBB2",43,0)
 S Z=$$EVENT^IBCF22(IBIFN,.IBXSAVE,.IBI)
"RTN","IBCBB2",44,0)
 I IBI S IBER=IBER_"IB099;"
"RTN","IBCBB2",45,0)
 ; unit/charge limits
"RTN","IBCBB2",46,0)
 K IBXDATA
"RTN","IBCBB2",47,0)
 D F^IBCEF("N-HCFA 1500 SERVICES (PRINT)",,,IBIFN) ;Get charge lines
"RTN","IBCBB2",48,0)
 S IBOLAB=0,IBPS="",IBSP=$$BILLSPEC^IBCEU3(IBIFN)
"RTN","IBCBB2",49,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  D  Q:IBER["IB310"!(IBER["IB311")
"RTN","IBCBB2",50,0)
 . I $P(IBNDU2,U,11) D
"RTN","IBCBB2",51,0)
 .. I '$P(IBXDATA(IBI),U,11) S IBPS=IBPS_$S(IBPS'="":",",1:"")_IBI Q
"RTN","IBCBB2",52,0)
 .. I $P(IBXDATA(IBI),U,14),"24"'[$P(IBNDU2,U,11) D WARN^IBCBB11("Outside lab charges exist on a non-lab NON-VA bill")
"RTN","IBCBB2",53,0)
 . I '$P(IBNDU2,U,11),$P(IBXDATA(IBI),U,11) D WARN^IBCBB11("Purchased service amounts are invalid unless this is a NON-VA bill")
"RTN","IBCBB2",54,0)
 . I $D(IBXDATA(IBI,"A")) S IBER=IBER_"IB310;" Q
"RTN","IBCBB2",55,0)
 . I $D(IBXDATA(IBI,"ARX")),IBER'["311;" S IBER=IBER_"IB311;" Q
"RTN","IBCBB2",56,0)
 . I $P(IBXDATA(IBI),U,14) S IBOLAB=IBOLAB+1
"RTN","IBCBB2",57,0)
 . ; Place of service required
"RTN","IBCBB2",58,0)
 . I $G(IBER)'["IB314;",$P(IBXDATA(IBI),U,3)="" S IBER=IBER_"IB314;"
"RTN","IBCBB2",59,0)
 . ; Type of service required
"RTN","IBCBB2",60,0)
 . I $G(IBER)'["IB313;",$P(IBXDATA(IBI),U,4)="" S IBER=IBER_"IB313;"
"RTN","IBCBB2",61,0)
 . ; 43 and 53 are invalid types of service
"RTN","IBCBB2",62,0)
 . I $G(IBER)'["IB110;",($P(IBXDATA(IBI),U,4)=43!($P(IBXDATA(IBI),U,4)=53)) S IBER=IBER_"IB110;"
"RTN","IBCBB2",63,0)
 . ; Units for the line item must be less than 100/1000
"RTN","IBCBB2",64,0)
 . I IBER'["IB088",$P(IBXDATA(IBI),U,9)'<100 D
"RTN","IBCBB2",65,0)
 .. I $P(IBXDATA(IBI),U,4)'=7 S IBER=IBER_"IB088;" Q
"RTN","IBCBB2",66,0)
 .. I $P(IBXDATA(IBI),U,9)'<1000 S IBER=IBER_"IB088;"
"RTN","IBCBB2",67,0)
 . ; Line item total charge must be less than $10,000.00, greater than 0
"RTN","IBCBB2",68,0)
 . I IBER'["IB090",$P(IBXDATA(IBI),U,9)'<10000 S IBER=IBER_"IB090;"
"RTN","IBCBB2",69,0)
 . I '($P(IBXDATA(IBI),U,9)*$P(IBXDATA(IBI),U,8)),$$COBN^IBCEF(IBIFN)'>1 S Z="Procedure "_$P(IBXDATA(IBI),U,5)_" has a 0-charge and will not be transmitted" D WARN^IBCBB11(Z)
"RTN","IBCBB2",70,0)
 . I $G(IBXDATA(IBI,"AUX"))'="",'$G(IBSP(1)),+IBSP'=35,$TR($P(IBXDATA(IBI,"AUX"),U,4,6)_$P(IBXDATA(IBI,"AUX"),U,2),U)'="" S IBSP(1)=1
"RTN","IBCBB2",71,0)
 I $G(IBSP(1)) D WARN^IBCBB11("Chiropractic service details only valid if provider specialty is '35'")
"RTN","IBCBB2",72,0)
 I IBPS'="" D WARN^IBCBB11("NON-VA facility indicated, but no purchased service charge on line item"_$S(IBPS[",":"s",1:"")_" #"_IBPS)
"RTN","IBCBB2",73,0)
 I $P(IBNDU2,U,11),$P(IBNDU2,U,11)=4,IBOLAB>1 D WARN^IBCBB11("For proper payment, you must bill each outside lab on a separate claim form")
"RTN","IBCBB2",74,0)
 K IBXDATA
"RTN","IBCBB2",75,0)
 ;
"RTN","IBCBB2",76,0)
 Q
"RTN","IBCBB2",77,0)
 ;
"RTN","IBCBB2",78,0)
OCC10(IBIFN,IBARR,IBFT) ; Determine if occurrence code 10 exists for pregnancy dx
"RTN","IBCBB2",79,0)
 ; IBARR=array subscripted by ien of DX code if IBFT=2 (HCFA form)
"RTN","IBCBB2",80,0)
 ;                         by seq # and = ien of DX code if IBFT'=2
"RTN","IBCBB2",81,0)
 ;
"RTN","IBCBB2",82,0)
 N IBN,IBI,IBXDATA,IBXSAVE,IBDX,Z
"RTN","IBCBB2",83,0)
 S IBN=1
"RTN","IBCBB2",84,0)
 ;
"RTN","IBCBB2",85,0)
 I '$D(^TMP($J,"LMD")) D
"RTN","IBCBB2",86,0)
 . D F^IBCEF("N-OCCURRENCE CODES",,,IBIFN)
"RTN","IBCBB2",87,0)
 . S ^TMP($J,"LMD")=""
"RTN","IBCBB2",88,0)
 . S Z=0 F  S Z=$O(IBXSAVE("OCC",Z)) Q:'Z  I +IBXSAVE("OCC",Z)=10 S ^TMP($J,"LMD")=1 Q
"RTN","IBCBB2",89,0)
 ;
"RTN","IBCBB2",90,0)
 I '^TMP($J,"LMD") S IBI=0 F  S IBI=$O(IBARR(IBI))  Q:'IBI  D  Q:'IBN
"RTN","IBCBB2",91,0)
 . N Z,Z1
"RTN","IBCBB2",92,0)
 . ; If a pregnancy DX exists, must be an occurrence code 10 for LMP date
"RTN","IBCBB2",93,0)
 . ; dx ranges are: V22*-V24*, V27*-V28*, 630*-677*
"RTN","IBCBB2",94,0)
 . S IBDX=$S($G(IBFT)'=2:+IBARR(IBI),1:IBI)
"RTN","IBCBB2",95,0)
 . S Z=$E($P($$ICD9^IBACSV(IBDX),U),1,3),Z1=$E(Z,2,3)
"RTN","IBCBB2",96,0)
 . I $S(Z'<630&(Z<678):1,$E(Z)="V":$S(Z1'<22&(Z1<25):1,1:Z1'<27&(Z1<28)),1:0) S IBN=0 ;Pregnancy Dx exists
"RTN","IBCBB2",97,0)
 ;
"RTN","IBCBB2",98,0)
OCC10Q K ^TMP($J,"LMD")
"RTN","IBCBB2",99,0)
 Q IBN
"RTN","IBCBB2",100,0)
 ;
"RTN","IBCBB21")
0^3^B10109462
"RTN","IBCBB21",1,0)
IBCBB21 ;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE FOR UB-92 ;2-NOV-89
"RTN","IBCBB21",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210**;21-MAR-94
"RTN","IBCBB21",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBB21",4,0)
 ;
"RTN","IBCBB21",5,0)
EN(IBZPRC92) ;
"RTN","IBCBB21",6,0)
 ;
"RTN","IBCBB21",7,0)
 N ECODE,IBTXMT,IBXDATA,IBLPRT,IBI,Z,Z0,Z1
"RTN","IBCBB21",8,0)
 S IBQUIT=0
"RTN","IBCBB21",9,0)
 S (Z,Z0,Z1)=0
"RTN","IBCBB21",10,0)
 F  S Z=$O(IBZPRC92(Z)) Q:'Z  S:IBZPRC92(Z)["CPT" Z0=Z0+1 S:IBZPRC92(Z)["ICD" Z1=Z1+1
"RTN","IBCBB21",11,0)
 S IBTXMT=$$TXMT^IBCEF4(IBIFN),IBLPRT=$P(IBNDTX,U,8)
"RTN","IBCBB21",12,0)
 S IBZPRC92=Z0_U_Z1 ;Save # of CPT's and ICD9's
"RTN","IBCBB21",13,0)
 ; More than 6 procedures on a bill - must print locally
"RTN","IBCBB21",14,0)
 I IBTXMT,IBLPRT'=1,(+IBZPRC92>6!(+IBZPRC92>6)) S IBQUIT=$$IBER^IBCBB3(.IBER,308) Q:IBQUIT
"RTN","IBCBB21",15,0)
 ; Rx's on a UB92 bill must be printed locally
"RTN","IBCBB21",16,0)
 I IBTXMT,$$ISRX^IBCEF1(IBIFN),IBLPRT'=1 S IBER=IBER_"IB315;"
"RTN","IBCBB21",17,0)
 ; If ICD9 procedures with dates and charges, bill 11x or 83x needs operating physician
"RTN","IBCBB21",18,0)
 I IBTOB12="11",$P(IBZPRC92,U,2),'$$CKPROV^IBCEU(IBIFN,2) S IBER=IBER_"IB304;"
"RTN","IBCBB21",19,0)
 I IBTOB12="83",$P(IBZPRC92,U,2),'$$CKPROV^IBCEU(IBIFN,2) S IBER=IBER_"IB312;"
"RTN","IBCBB21",20,0)
 ;
"RTN","IBCBB21",21,0)
 ; If any CPT procedures have more than 2 modifiers, warn
"RTN","IBCBB21",22,0)
 S Z=0 F  S Z=$O(IBZPRC92(Z)) Q:'Z  I $P(IBZPRC92(Z),U)["ICPT(",$L($P(IBZPRC92(Z),U,15),",")>2 S Z0="Proc "_$$PRCD^IBCEF1($P(IBZPRC92(Z),U))_" has > 2 modifiers - only first 2 will be used" D WARN^IBCBB11(Z0)
"RTN","IBCBB21",23,0)
 ;
"RTN","IBCBB21",24,0)
 I $$WNRBILL^IBEFUNC(IBIFN),$$MRATYPE^IBEFUNC(IBIFN)'="A" D WARN^IBCBB11("MEDICARE policy assigned to this UB92 bill is not a PART A policy")
"RTN","IBCBB21",25,0)
 ; UB92 Diagnosis Codes
"RTN","IBCBB21",26,0)
 K IBXDATA D F^IBCEF("N-DIAGNOSES",,,IBIFN)
"RTN","IBCBB21",27,0)
 ;
"RTN","IBCBB21",28,0)
 ; Only 9 dx's allowed per claim plus 1 E-code
"RTN","IBCBB21",29,0)
 S (Z,ECODE,IBI)=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  D  Q:IBER["309;"
"RTN","IBCBB21",30,0)
 . S IBI=IBI+1
"RTN","IBCBB21",31,0)
 . I $E($$ICD9^IBACSV(+$P(IBXDATA(Z),U)))="E" S:ECODE IBQUIT=$$IBER^IBCBB3(.IBER,301) S:'ECODE IBI=IBI-1,ECODE=1
"RTN","IBCBB21",32,0)
 . I IBTXMT,IBLPRT'=1,IBI>9 S IBER=IBER_"IB309;"
"RTN","IBCBB21",33,0)
 ;
"RTN","IBCBB21",34,0)
 I IBI,$$INPAT^IBCEF(IBIFN,1),$E($$ICD9^IBACSV(+$P(IBXDATA(1),U)))="V" S Z="Principal Dx V-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB21",35,0)
 I '$$OCC10^IBCBB2(IBIFN,.IBXDATA,3) S IBER=IBER_"IB093;"
"RTN","IBCBB21",36,0)
 ;
"RTN","IBCBB21",37,0)
 K ^TMP($J,"IBC-RC")
"RTN","IBCBB21",38,0)
 D F^IBCEF("N-UB92 SERVICE LINE (PRINT)",,,IBIFN)
"RTN","IBCBB21",39,0)
 S (Z0,IBI)=0 F  S IBI=$O(^TMP($J,"IBC-RC",IBI)) Q:'IBI  S Z=$G(^(IBI))  Q:+$P(Z,U,2)=1  I $P(Z,U,2) D
"RTN","IBCBB21",40,0)
 . I IBER'["IB090;",$P(Z,U,2)>1,($P(Z,U,7)>99999.99!($P(Z,U,8)>99999.99)) S IBER=IBER_"IB090;"
"RTN","IBCBB21",41,0)
 . Q:$P(Z,U,2)'<180&($P(Z,U,2)'>189)  ;Pass days (LOA) don't matter
"RTN","IBCBB21",42,0)
 . I '$P(Z,U,7),'$P(Z,U,8),'Z0,$$COBN^IBCEF(IBIFN)'>1  S Z0="Rev Code(s) having a 0-charge will not be transmitted for the bill" D WARN^IBCBB11(Z0) S Z0=1
"RTN","IBCBB21",43,0)
 K ^TMP($J,"IBC-RC")
"RTN","IBCBB21",44,0)
 Q
"RTN","IBCBB21",45,0)
 ;
"RTN","IBCBB8")
0^4^B4647377
"RTN","IBCBB8",1,0)
IBCBB8 ;ALB/BGA - CON'T MEDICARE EDIT CHECKS ;08/12/98
"RTN","IBCBB8",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210**;21-MAR-94
"RTN","IBCBB8",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBB8",4,0)
 ;
"RTN","IBCBB8",5,0)
 ; UB92 CLAIM CERTIFICATE ID NUMBER
"RTN","IBCBB8",6,0)
 I '$$VALID(IBIFN) S IBQUIT=$$IBER^IBCBB3(.IBER,215) Q:IBQUIT
"RTN","IBCBB8",7,0)
 ;
"RTN","IBCBB8",8,0)
 ; Req. on Primary Payor when Medicare is secondary and value 12-15,43
"RTN","IBCBB8",9,0)
 I $$COBN^IBCEF(IBIFN)=2 D  Q:IBQUIT
"RTN","IBCBB8",10,0)
 . I $O(IBVALCD(16),-1)'<12!$D(IBVALCD(43)) D 
"RTN","IBCBB8",11,0)
 . . K IBXDATA D F^IBCEF("N-ALL INSURED EMPLOYER INFO",,,IBIFN)
"RTN","IBCBB8",12,0)
 . . ; employer name^city^state abbreviation^state ien
"RTN","IBCBB8",13,0)
 . . ;I '$O(IBXDATA(0)) S IBQUIT=$$IBER^IBCBB3(.IBER,222) Q
"RTN","IBCBB8",14,0)
 . . ; Employer name missing
"RTN","IBCBB8",15,0)
 . . ;I $P($G(IBXDATA(1)),U)="" S IBQUIT=$$IBER^IBCBB3(.IBER,222)
"RTN","IBCBB8",16,0)
 . . ; Employer address missing
"RTN","IBCBB8",17,0)
 . . ;I $TR($P($G(IBXDATA(1)),U,2,4),U)="" S IBQUIT=$$IBER^IBCBB3(.IBER,223)
"RTN","IBCBB8",18,0)
 . ;
"RTN","IBCBB8",19,0)
 . ; Insured's Group Number 
"RTN","IBCBB8",20,0)
 . ;  if Medicare is secondary, need insurance group number for primary
"RTN","IBCBB8",21,0)
 . K IBXDATA D F^IBCEF("N-ALL INSURANCE GROUP NUMBER",,,IBIFN)
"RTN","IBCBB8",22,0)
 . I $P($G(IBXDATA(1)),U)="" S IBQUIT=$$IBER^IBCBB3(.IBER,225)
"RTN","IBCBB8",23,0)
 ;
"RTN","IBCBB8",24,0)
 ; UB92 Diagnosis Codes
"RTN","IBCBB8",25,0)
 K IBXDATA D F^IBCEF("N-DIAGNOSES",,,IBIFN)
"RTN","IBCBB8",26,0)
 ;
"RTN","IBCBB8",27,0)
 S IBI=0
"RTN","IBCBB8",28,0)
 F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  D  Q:IBQUIT
"RTN","IBCBB8",29,0)
 . S IBDXC=$P($$ICD9^IBACSV(+$P(IBXDATA(IBI),U)),U)
"RTN","IBCBB8",30,0)
 . ; no duplicate dx
"RTN","IBCBB8",31,0)
 . I IBDXC'="",$D(IBDXARY(IBDXC)) S IBQUIT=$$IBER^IBCBB3(.IBER,227)
"RTN","IBCBB8",32,0)
 . I IBDXC'="",'$D(IBDXARY(IBDXC)) S IBDXARY(IBDXC)=IBXDATA(IBI)
"RTN","IBCBB8",33,0)
 Q:IBQUIT
"RTN","IBCBB8",34,0)
 ;
"RTN","IBCBB8",35,0)
 Q
"RTN","IBCBB8",36,0)
 ;
"RTN","IBCBB8",37,0)
VALID(IBIFN) ; Verify HIC # is valid
"RTN","IBCBB8",38,0)
 N VAL,IBXDATA
"RTN","IBCBB8",39,0)
 S VAL=1
"RTN","IBCBB8",40,0)
 G:'$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)) VALQ
"RTN","IBCBB8",41,0)
 ;
"RTN","IBCBB8",42,0)
 K IBXDATA D F^IBCEF("N-CURR INSURED ID",,,IBIFN)
"RTN","IBCBB8",43,0)
 ;
"RTN","IBCBB8",44,0)
 I $G(IBXDATA)="" S VAL=0 G VALQ
"RTN","IBCBB8",45,0)
 ;
"RTN","IBCBB8",46,0)
 S IBXDATA=$TR(IBXDATA,"-")
"RTN","IBCBB8",47,0)
 I $L(IBXDATA)<9 S VAL=0 G VALQ
"RTN","IBCBB8",48,0)
 ; HIC # must pass standard MEDICARE edits
"RTN","IBCBB8",49,0)
 I '$$VALHIC^IBCNSMM(IBXDATA) S VAL=0
"RTN","IBCBB8",50,0)
 ;
"RTN","IBCBB8",51,0)
VALQ Q VAL
"RTN","IBCBB8",52,0)
 ;
"RTN","IBCD3")
0^5^B28952840
"RTN","IBCD3",1,0)
IBCD3 ;ALB/ARH - AUTOMATED BILLER (ADD NEW BILL - CREATE BILL ENTRY) ;9/5/93
"RTN","IBCD3",2,0)
 ;;2.0;INTEGRATED BILLING;**14,55,52,91,106,125,51,148,160,137,210**;21-MAR-94
"RTN","IBCD3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCD3",4,0)
 ;
"RTN","IBCD3",5,0)
 ;Called by IBCD2,IBACUS2
"RTN","IBCD3",6,0)
 ;
"RTN","IBCD3",7,0)
EN(IBQUERY) ;
"RTN","IBCD3",8,0)
 N IBI,IBX,IBY,I,X,X1,X2,IBAC,IBCPY K IBDR,IBDR222 S IBAC=1
"RTN","IBCD3",9,0)
 S X=$P($T(WHERE),";;",2),X2=$P($T(WHERE+1),";;",2) F I=0:0 S I=$O(IB(I)) Q:'I  S X1=$P($E(X,$F(X,I)+1,999),";",1) S:X1="" X1=$P($E(X2,$F(X2,I)+1,999),";",1) I $D(IB(I))=1 S $P(IBDR($P(X1,"^",1)),"^",$P(X1,"^",2))=IB(I)
"RTN","IBCD3",10,0)
 F I=0,"C","M","M1","S","U","U1","U2" I $D(IBDR(I)) S ^DGCR(399,IBIFN,I)=IBDR(I)
"RTN","IBCD3",11,0)
 S $P(^DGCR(399,0),"^",3)=IBIFN,$P(^(0),"^",4)=$P(^(0),"^",4)+1
"RTN","IBCD3",12,0)
 S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK ; set cross-references
"RTN","IBCD3",13,0)
 ;
"RTN","IBCD3",14,0)
 ; Set the attending/rendering provider into provider multiple
"RTN","IBCD3",15,0)
 I $G(IB("PRV",.01))'="" D
"RTN","IBCD3",16,0)
 . S DIC("DR")="",I=.01
"RTN","IBCD3",17,0)
 . N IBV
"RTN","IBCD3",18,0)
 . F  S I=$O(IB("PRV",I)) Q:'I  I IB("PRV",I)'="" S IBV(I)=IB("PRV",I),DIC("DR")=DIC("DR")_$S(DIC("DR")="":"",1:";")_I_"////^S X=IBV("_I_")"
"RTN","IBCD3",19,0)
 . S DIC="^DGCR(399,"_IBIFN_",""PRV"",",DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,X=IB("PRV",.01)
"RTN","IBCD3",20,0)
 . K DO,DD D FILE^DICN K DO,DD,DLAYGO,DA,DIC
"RTN","IBCD3",21,0)
 ;
"RTN","IBCD3",22,0)
 ; Set the occurrence span codes for leave/pass days
"RTN","IBCD3",23,0)
 I $O(IB("OC",0)) D
"RTN","IBCD3",24,0)
 . N I,I1
"RTN","IBCD3",25,0)
 . S I1=0 F  S I1=$O(IB("OC",I1)) Q:'I1  D
"RTN","IBCD3",26,0)
 .. S I=0,DIC("DR")=""
"RTN","IBCD3",27,0)
 .. F  S I=$O(IB("OC",I1,I)) Q:'I  S DIC("DR")=DIC("DR")_$S(DIC("DR")="":"",1:";")_I_"////"_IB("OC",I1,I)
"RTN","IBCD3",28,0)
 .. S DIC="^DGCR(399,"_IBIFN_",""OC"",",DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,DIC("P")=$$GETSPEC^IBEFUNC(399,41),X=IB("OC")
"RTN","IBCD3",29,0)
 .. K DO,DD D FILE^DICN K DO,DD,DLAYGO,DA,DIC
"RTN","IBCD3",30,0)
 ;
"RTN","IBCD3",31,0)
 ; file rx refills, default CPT and Dx if defined
"RTN","IBCD3",32,0)
 I $D(IB(362.4))>2 D  G END
"RTN","IBCD3",33,0)
 . N IBZ
"RTN","IBCD3",34,0)
 . S IBRX=0 F  S IBRX=$O(IB(362.4,IBRX)) Q:'IBRX  S IBY="" F  S IBY=$O(IB(362.4,IBRX,IBY)) Q:IBY=""  D
"RTN","IBCD3",35,0)
 .. S IBX=IB(362.4,IBRX,IBY) Q:IBX=""
"RTN","IBCD3",36,0)
 .. S IBZ=$$ADD^IBCSC5A($P(IBX,U),IBIFN,$P(IBX,U,4),$P(IBX,U,2),+IBRX,$P(IBX,U,3)_U_$P(IBX,U,5)_U_$P(IBX,U,6))
"RTN","IBCD3",37,0)
 ;
"RTN","IBCD3",38,0)
 ;file outpatient visit dates and find/store outpatient procedures and dx
"RTN","IBCD3",39,0)
 ;NOTE: If IBQUERY is defined at this point, it will be used to perform
"RTN","IBCD3",40,0)
 ;       the scan for outpatient procedures
"RTN","IBCD3",41,0)
 I '$$INPAT^IBCEF(IBIFN) D  G END
"RTN","IBCD3",42,0)
 . I $D(IB(43))>2 D
"RTN","IBCD3",43,0)
 .. S ^DGCR(399,IBIFN,"OP",0)="^399.043DA^" S IBX=0 F  S IBX=$O(IB(43,IBX)) Q:'IBX  D
"RTN","IBCD3",44,0)
 ... S DIC="^DGCR(399,"_IBIFN_",""OP"",",DIC(0)="L",DA(1)=IBIFN,(DINUM,X)=IBX,DLAYGO=399.043 K DD,DO D FILE^DICN K DIC,DA,DINUM,DO,DD,DLAYGO
"RTN","IBCD3",45,0)
 . ;
"RTN","IBCD3",46,0)
 . D VST^IBCCPT(.IBQUERY) I $D(^UTILITY($J,"CPT-CNT")) D
"RTN","IBCD3",47,0)
 .. N IBPRX
"RTN","IBCD3",48,0)
 .. S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCD3",49,0)
 .. S IBY=0 F  S IBY=$O(^UTILITY($J,"CPT-CNT",IBY)) Q:'IBY  S IBX=^(IBY) I '$P(IBX,U,6) D
"RTN","IBCD3",50,0)
 ... S IBPRX(+$P(IBX,U,8))=""
"RTN","IBCD3",51,0)
 ... S DIC="^DGCR(399,"_IBIFN_",""CP"",",DIC(0)="L",DA(1)=IBIFN,X=+IBX_";ICPT(",DLAYGO=399 K DD,DO D FILE^DICN K DO,DD,DLAYGO Q:Y'>0
"RTN","IBCD3",52,0)
 ... ;
"RTN","IBCD3",53,0)
 ... S IBCPY=+Y
"RTN","IBCD3",54,0)
 ... S DR="1////"_$P(IBX,U,2)_$S(+$P(IBX,U,8):";18////"_+$P(IBX,U,8),1:"")
"RTN","IBCD3",55,0)
 ... S DR=DR_$S(+$P(IBX,U,9):";6////"_+$P(IBX,U,9),1:"")_$S(+$P(IBX,U,5):";5////"_+$P(IBX,U,5),1:"")
"RTN","IBCD3",56,0)
 ... S DR=DR_$S(+$P(IBX,U,11):";20////"_+$P(IBX,U,11),1:"")
"RTN","IBCD3",57,0)
 ... S DIE=DIC,DA=+IBCPY D ^DIE K DIE,DIC,DA,DINUM,DO,DD
"RTN","IBCD3",58,0)
 ... I $P(IBX,U,10) D ADDMOD^IBCCPT(IBIFN,IBCPY,$P(IBX,U,10)) ;Modifiers
"RTN","IBCD3",59,0)
 .. I $O(IBPRX(""))=$O(IBPRX(""),-1),$O(IBPRX(0)) D
"RTN","IBCD3",60,0)
 ... ;If only 1 provider - make it the rendering
"RTN","IBCD3",61,0)
 ... S IB("PRV",.02)=+$O(IBPRX(0))_";VA(200,",IB("PRV",.01)=3
"RTN","IBCD3",62,0)
 . K DGCNT,V,IBOPV1,IBOPV2,I,DGDIV,I1,DGNOD,DGCPTS,I7,I2,DGCPT,^UTILITY($J,"CPT-CNT")
"RTN","IBCD3",63,0)
 . ;
"RTN","IBCD3",64,0)
 . D OPTDX^IBCSC4D(DFN,IB(151),IB(152),.IBDX) I +IBDX D  K IBDX
"RTN","IBCD3",65,0)
 .. S IBY=0 F  S IBY=$O(IBDX(IBY)) Q:IBY=""  S IBX=IBDX(IBY) I '$P(IBX,U,5) D
"RTN","IBCD3",66,0)
 ... I '$D(^DGCR(399,"AOPV",DFN,(+$P(IBX,U,4)\1),IBIFN)) Q
"RTN","IBCD3",67,0)
 ... S DIC("DR")=".02////"_IBIFN,DIC="^IBA(362.3,",DIC(0)="L",X=+IBX,DLAYGO=362.3 K DD,DO D FILE^DICN
"RTN","IBCD3",68,0)
 ... K DIE,DIC,DA,DLAYGO,DO,DD
"RTN","IBCD3",69,0)
 ;
"RTN","IBCD3",70,0)
 ;store inpatient diagnosis and procedures, default admit dx to first dx found
"RTN","IBCD3",71,0)
 I $$INPAT^IBCEF(IBIFN) D  G END
"RTN","IBCD3",72,0)
 . I $G(^TMP("IBDX",$J))=IB(.08) D  K ^TMP("IBDX",$J)
"RTN","IBCD3",73,0)
 .. N IBXDEF S IBXDEF=0
"RTN","IBCD3",74,0)
 .. S (IBI,IBX)="" F  S IBX=$O(^TMP("IBDX",$J,IBX)) Q:'IBX  S IBY=0 F  S IBY=$O(^TMP("IBDX",$J,IBX,IBY)) Q:'IBY  D
"RTN","IBCD3",75,0)
 ... S IBZ=^TMP("IBDX",$J,IBX,IBY) Q:($$ICD9^IBACSV(+IBZ)="")  S IBI=IBI+1
"RTN","IBCD3",76,0)
 ... S DIC("DR")=".02////"_IBIFN_";.03////"_IBI,DIC="^IBA(362.3,",DIC(0)="L",X=+IBZ,DLAYGO=362.3 K DD,DO D FILE^DICN
"RTN","IBCD3",77,0)
 ... K DIE,DIC,DA,DLAYGO,DO,DD
"RTN","IBCD3",78,0)
 ... I Y>0,'IBXDEF S IBXDEF=1,DR="215////"_+IBZ,DIE="^DGCR(399,",DA=IBIFN D ^DIE
"RTN","IBCD3",79,0)
 . ;
"RTN","IBCD3",80,0)
 . D IPRC^IBCD4(+IB(.08),IB(151),IB(152)) I $D(^TMP("IBIPRC",$J)) D  K ^TMP("IBIPRC",$J)
"RTN","IBCD3",81,0)
 .. S ^DGCR(399,IBIFN,"CP",0)="^399.0304AVI^"
"RTN","IBCD3",82,0)
 .. S IBX=0 F  S IBX=$O(^TMP("IBIPRC",$J,IBX)) Q:'IBX  D
"RTN","IBCD3",83,0)
 ... S IBY=^TMP("IBIPRC",$J,IBX) F IBI=1:1 S IBZ=$P(IBY,U,IBI) Q:'IBZ  D
"RTN","IBCD3",84,0)
 .... S DIC="^DGCR(399,"_IBIFN_",""CP"",",DIC(0)="L",DA(1)=IBIFN,X=+IBZ_";ICD0(",DLAYGO=399.0304 K DD,DO D FILE^DICN
"RTN","IBCD3",85,0)
 .... I Y>0 S DIE=DIC,DA=+Y,DR="1////"_(IBX\1) D ^DIE K DIE,DIC,DA,DLAYGO,DO,DD
"RTN","IBCD3",86,0)
 ;
"RTN","IBCD3",87,0)
END S IBX="1^Billing Record #"_$P(^DGCR(399,+IBIFN,0),"^",1)_" established for "_$P($G(^DPT(IBDFN,0)),U,1)
"RTN","IBCD3",88,0)
 ;
"RTN","IBCD3",89,0)
 S IBAUTO=1,DGPTUPDT="" D:'$G(IBCHTRN) ^IBCU6 ; auto calculate/store revenue codes
"RTN","IBCD3",90,0)
 ;
"RTN","IBCD3",91,0)
Q K %,%DT,IBDR,X1,X2,X3,X4,Y,DGDIRA,DGDIRB,DGDIR0,DIR,DGRVRCAL,DIC,DA,DR,DINUM,DGPTUPDT,DGXRF1,IBCHK,IBINDT,IBIDS,DLAYGO
"RTN","IBCD3",92,0)
 Q
"RTN","IBCD3",93,0)
 ;
"RTN","IBCD3",94,0)
WHERE ;;.01^0^1;.02^0^2;.03^0^3;.04^0^4;.05^0^5;.06^0^6;.07^0^7;.08^0^8;.09^0^9;.11^0^11;.17^0^17;.16^0^16;.18^0^18;.19^0^19;.2^0^20;.22^0^22;.27^0^27;112^M^12;151^U^1;152^U^2;155^U^5;101^M^1;158^U^8;159^U^9;160^U^10;161^U^11;162^U^12;
"RTN","IBCD3",95,0)
 ;;217^U2^3;221^U2^7;
"RTN","IBCEF1")
0^7^B44522859
"RTN","IBCEF1",1,0)
IBCEF1 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS - CONT ;30-JAN-96
"RTN","IBCEF1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,124,51,137,210**;21-MAR-94
"RTN","IBCEF1",3,0)
 ;
"RTN","IBCEF1",4,0)
OCC(IBIFN,REL,TEXT) ;Sets up an arrays of occurrence codes for various cks
"RTN","IBCEF1",5,0)
 ;RETURNS 1^additional data for entry IBXSAVE("OCC",n) if REL or TEXT
"RTN","IBCEF1",6,0)
 ;   parameters have been met or null if conditions not met
"RTN","IBCEF1",7,0)
 ;If no REL or TEXT parameters sent, just extract codes array
"RTN","IBCEF1",8,0)
 ; IBIFN = bill ien
"RTN","IBCEF1",9,0)
 ; REL = 'OCC RELATED TO' value to check for
"RTN","IBCEF1",10,0)
 ; TEXT = text to check for the .01 field of 399.1 entry pointed to
"RTN","IBCEF1",11,0)
 ;         by the occurrence code
"RTN","IBCEF1",12,0)
 N OCC
"RTN","IBCEF1",13,0)
 I '$D(IBXSAVE("OCC")),'$D(IBXSAVE("OCCS")) D
"RTN","IBCEF1",14,0)
 .N IBI,Z,CT1,CT2,Z0 S (IBI,CT1,CT2)=0
"RTN","IBCEF1",15,0)
 .F  S IBI=$O(^DGCR(399,IBIFN,"OC",IBI)) Q:'IBI  S Z=$G(^(IBI,0)) D
"RTN","IBCEF1",16,0)
 ..S Z0=$G(^DGCR(399.1,+Z,0))
"RTN","IBCEF1",17,0)
 ..Q:'$P(Z0,U,10)&'$P(Z0,U,4)  ;Not an occurrence code
"RTN","IBCEF1",18,0)
 ..I $P(Z0,U,10) S CT2=CT2+1,IBXSAVE("OCCS",CT2)=$S($P(Z0,U,4):$P(Z0,U,2)_U_$P(Z,U,2),1:U)_U_$P(Z,U,4)_U_$P(Z0,U)_U_$P(Z0,U,9)_U_$P(Z,U,3)_U_$P(Z,U,2)
"RTN","IBCEF1",19,0)
 ..I '$P(Z0,U,10) S CT1=CT1+1,IBXSAVE("OCC",CT1)=$S($P(Z0,U,4):$P(Z0,U,2)_U_$P(Z,U,2),1:U)_U_U_$P(Z0,U)_U_$P(Z0,U,9)_U_$P(Z,U,3)_U_$P(Z,U,2)
"RTN","IBCEF1",20,0)
 I '$D(IBXSAVE("OCC"))&'$D(IBXSAVE("OCCS")) S IBXSAVE("OCC")="" G OCCQ
"RTN","IBCEF1",21,0)
 I $G(REL)'=""!($G(TEXT)'="") D OCC1("",.OCC,$G(REL),$G(TEXT)) D:'$D(OCC) OCC1("S",.OCC,$G(REL),$G(TEXT))
"RTN","IBCEF1",22,0)
OCCQ Q $G(OCC)
"RTN","IBCEF1",23,0)
 ;
"RTN","IBCEF1",24,0)
OCC1(ARR,OCC,REL,TEXT) ; Search thru local array for parameters met
"RTN","IBCEF1",25,0)
 ; ARR = null to search OCC subscript, "S" to search OCCS subscript
"RTN","IBCEF1",26,0)
 N Z
"RTN","IBCEF1",27,0)
 S ARR="OCC"_ARR,Z=0
"RTN","IBCEF1",28,0)
 F  S Z=$O(IBXSAVE(ARR,Z)) Q:'Z  D
"RTN","IBCEF1",29,0)
 .I $G(REL)'="",$P(IBXSAVE(ARR,Z),U,5)=REL S OCC="1"_$S(REL=2:U_$P(IBXSAVE(ARR,Z),U,6),1:"") Q
"RTN","IBCEF1",30,0)
 .I $G(TEXT)'="",$P(IBXSAVE(ARR,Z),U,4)=TEXT S OCC="1^"_$P(IBXSAVE(ARR,Z),U,7)
"RTN","IBCEF1",31,0)
 Q
"RTN","IBCEF1",32,0)
 ;
"RTN","IBCEF1",33,0)
RX(IBIFN) ; Format billable prescription data for refills for 837
"RTN","IBCEF1",34,0)
 N Z,IBXDATA,CT
"RTN","IBCEF1",35,0)
 I '$D(IBXSAVE("BOX24")) D B24^IBCEF3(.IBXSAVE,IBIFN,1)
"RTN","IBCEF1",36,0)
 S Z="",CT=0
"RTN","IBCEF1",37,0)
 F  S Z=$O(IBXSAVE("BOX24",Z)) Q:Z=""  I $D(IBXSAVE("BOX24",Z,"RX")) S CT=CT+1,IBXDATA(Z)=IBXSAVE("BOX24",Z,"RX")
"RTN","IBCEF1",38,0)
RXQ Q CT
"RTN","IBCEF1",39,0)
 ;
"RTN","IBCEF1",40,0)
OTHPAY(IBIFN,SEQ) ; Return the other insurance payment amount for bill
"RTN","IBCEF1",41,0)
 ;  IBIFN and payer sequence SEQ (1-3)
"RTN","IBCEF1",42,0)
 N AMT,IBIFN1
"RTN","IBCEF1",43,0)
 S IBIFN1=$P($G(^DGCR(399,IBIFN,"M1")),U,SEQ+4)
"RTN","IBCEF1",44,0)
 I IBIFN1 D
"RTN","IBCEF1",45,0)
 . I $$MCRWNR^IBEFUNC(+$G(^DGCR(399,IBIFN,"I"_SEQ))) S AMT=0 Q
"RTN","IBCEF1",46,0)
 . S AMT=+$$TPR^PRCAFN(IBIFN1) Q:AMT  ; A/R amount
"RTN","IBCEF1",47,0)
 . S AMT=+$P($G(^DGCR(399,IBIFN,"U2")),U,SEQ+3) ; amount on bill
"RTN","IBCEF1",48,0)
 Q $G(AMT)
"RTN","IBCEF1",49,0)
 ;
"RTN","IBCEF1",50,0)
OUTPT(IBIFN,IBPRINT) ; Moved for space
"RTN","IBCEF1",51,0)
 D OUTPT^IBCEF11(IBIFN,$G(IBPRINT))
"RTN","IBCEF1",52,0)
 Q
"RTN","IBCEF1",53,0)
 ;
"RTN","IBCEF1",54,0)
OCC92 ;Reformats IBXSAVE("OCC") and IBXSAVE("OCCS") to fit blocks on UB92
"RTN","IBCEF1",55,0)
 ; Set up IBXSAVE(32-36) arrays
"RTN","IBCEF1",56,0)
 N IBPG,IB32,IB33,IB34,IB35,IB36,IBFL,Z,Z0,PG
"RTN","IBCEF1",57,0)
 S IBPG=0
"RTN","IBCEF1",58,0)
 F Z=32:1:36 K IBFL(Z) S IBFL(Z)=0
"RTN","IBCEF1",59,0)
 M IB32=IBXSAVE("OCC"),IB36=IBXSAVE("OCCS")
"RTN","IBCEF1",60,0)
 S IB32=$O(IB32(""),-1),IB36=$O(IB36(""),-1),PG=1
"RTN","IBCEF1",61,0)
 D OCC^IBCF32
"RTN","IBCEF1",62,0)
 F Z=32:1:36 S Z0="" F  S Z0=$O(IBFL(Z,Z0)) Q:'Z0  S IBXSAVE("OC92",Z,Z0)=$P(IBFL(Z,Z0),U,1,3)
"RTN","IBCEF1",63,0)
 Q
"RTN","IBCEF1",64,0)
 ;
"RTN","IBCEF1",65,0)
BATCH() ; Sets up record for and stores/returns the next batch number
"RTN","IBCEF1",66,0)
 N NUM,FAC,DO,DD,DLAYGO,DIC,X,Y
"RTN","IBCEF1",67,0)
 ;Keep latest batch number for view/print edi bill extract data option
"RTN","IBCEF1",68,0)
 I $D(IBVNUM) S NUM=IBVNUM G BATCHQ
"RTN","IBCEF1",69,0)
 ;Check for batch resubmit - if yes, use same number as original batch
"RTN","IBCEF1",70,0)
 I $P($G(^TMP("IBRESUBMIT",$J)),U,3)=1 S NUM=$P(^($J),U) G BATCHQ
"RTN","IBCEF1",71,0)
 L +^IBA(364.1,0):5 I '$T Q 0
"RTN","IBCEF1",72,0)
 S FAC=+$P($$SITE^VASITE(),U,3),NUM=$O(^IBA(364.1,"B",""),-1)
"RTN","IBCEF1",73,0)
 I $D(^IBA(364.1,+NUM,0)),$P(^(0),U,2)="" F  D  Q:'NUM!($P($G(^IBA(364.1,+NUM,0)),U,2)'="")
"RTN","IBCEF1",74,0)
 . I $D(^IBA(364.1,NUM,0)) S DA=NUM,DIK="^IBA(364.1," D ^DIK
"RTN","IBCEF1",75,0)
 . S NUM=$O(^IBA(364.1,"B",""),-1)
"RTN","IBCEF1",76,0)
 F  S NUM=$S($P(NUM,FAC,2)'="":NUM+1,1:FAC_"0000001") Q:'$D(^IBA(364.1,"B",NUM))
"RTN","IBCEF1",77,0)
 K DO,DD S DIC="^IBA(364.1,",DLAYGO=364.1,DIC(0)="L",X=NUM D FILE^DICN K DD,DO I Y'>0 S NUM=0
"RTN","IBCEF1",78,0)
 L -^IBA(364.1,0)
"RTN","IBCEF1",79,0)
BATCHQ Q NUM
"RTN","IBCEF1",80,0)
 ;
"RTN","IBCEF1",81,0)
PROC(T,TYPE) ; Find procedure code, strip '.' Function returns result
"RTN","IBCEF1",82,0)
 ; T = Procedure internal entry #;file reference
"RTN","IBCEF1",83,0)
 ; TYPE = "CPT" for only CPT/HCPCS valid
"RTN","IBCEF1",84,0)
 ;        "ICD" for only ICD9 valid or null for either
"RTN","IBCEF1",85,0)
 N Q,S
"RTN","IBCEF1",86,0)
 S Q="",S="^"_$P($P(T,";",2),"(")
"RTN","IBCEF1",87,0)
 I $G(TYPE)="" D
"RTN","IBCEF1",88,0)
 . I $E(S,2,3)="IC" S Q=$P($$PRCD(T),U) Q
"RTN","IBCEF1",89,0)
 . I T["DIC(81.3" S Q=$$MOD^ICPTMOD(+T,"I") S Q=$S(Q>0:$P(Q,U,4),1:"")
"RTN","IBCEF1",90,0)
 I $G(TYPE)="CPT",$E(S,2,3)="IC" S Q=$$PRCD(T) Q
"RTN","IBCEF1",91,0)
 I $G(TYPE)="ICD",T["ICD0" S Q=$P($$ICD0^IBACSV(+T),U)
"RTN","IBCEF1",92,0)
 Q $TR(Q,".")
"RTN","IBCEF1",93,0)
 ;
"RTN","IBCEF1",94,0)
FACILITY(IBIFN) ;return the Facility (Institution pointer-#4) for a bill
"RTN","IBCEF1",95,0)
 ; the institution of the Bill Division (399,.22) if defined, otherwise the Facility Name (350.9,.02)
"RTN","IBCEF1",96,0)
 ;
"RTN","IBCEF1",97,0)
 N IB0,IBIN S IBIN=0
"RTN","IBCEF1",98,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) I +$P(IB0,U,22) S IBIN=$$SITE^VASITE(+$P(IB0,U,3),+$P(IB0,U,22))
"RTN","IBCEF1",99,0)
 I IBIN'>0 S IBIN=+$P($G(^IBE(350.9,1,0)),U,2)
"RTN","IBCEF1",100,0)
 Q +IBIN
"RTN","IBCEF1",101,0)
 ;
"RTN","IBCEF1",102,0)
ISRX(IBIFN) ; Function to determine if bill is a prescription refill bill
"RTN","IBCEF1",103,0)
 ; Returns 0 if no Rx on bill or 1 if there is.
"RTN","IBCEF1",104,0)
 ;
"RTN","IBCEF1",105,0)
 N IBRX
"RTN","IBCEF1",106,0)
 I $D(^IBA(362.4,"AIFN"_IBIFN)) S IBRX=1
"RTN","IBCEF1",107,0)
 Q +$G(IBRX)
"RTN","IBCEF1",108,0)
 ;
"RTN","IBCEF1",109,0)
ISPROS(IBIFN) ; Function to determine if bill is a prosthetics bill
"RTN","IBCEF1",110,0)
 ; Returns 0 if no Prosthetics on bill or 1 if there is.
"RTN","IBCEF1",111,0)
 ;
"RTN","IBCEF1",112,0)
 N IBPROS
"RTN","IBCEF1",113,0)
 I $D(^IBA(362.5,"AIFN"_IBIFN)) S IBPROS=1
"RTN","IBCEF1",114,0)
 Q +$G(IBPROS)
"RTN","IBCEF1",115,0)
 ;
"RTN","IBCEF1",116,0)
FINDINS(IBIFN,IBSEQ) ; Returns the internal entry number of the insurance
"RTN","IBCEF1",117,0)
 ;  company for bill ien IBIFN for payer sequence IBSEQ (or current if
"RTN","IBCEF1",118,0)
 ;  IBSEQ is null)
"RTN","IBCEF1",119,0)
 Q $P($G(^DGCR(399,IBIFN,"I"_$$COBN^IBCEF(IBIFN,$G(IBSEQ)))),U)
"RTN","IBCEF1",120,0)
 ;
"RTN","IBCEF1",121,0)
TOB(IBIFN) ; Returns UB92 type of bill from data in the output formatter
"RTN","IBCEF1",122,0)
 N IBTOB,IBZ1,IBZ2,IBZ3
"RTN","IBCEF1",123,0)
 D F^IBCEF("N-UB92 LOCATION OF CARE","IBZ1",,IBIFN),F^IBCEF("N-UB92 BILL CLASSIFICATION","IBZ2",,IBIFN),F^IBCEF("N-UB92 TIMEFRAME OF BILL","IBZ3",,IBIFN)
"RTN","IBCEF1",124,0)
 S IBTOB=$S($G(^TMP("IBXSAVE",$J,"RM")):" ",1:"")_IBZ1_IBZ2_IBZ3
"RTN","IBCEF1",125,0)
 Q IBTOB
"RTN","IBCEF1",126,0)
 ;
"RTN","IBCEF1",127,0)
PRCD(PRIEN,ALL,EDT) ; Function returns the code that corresponds to the variable
"RTN","IBCEF1",128,0)
 ; pointer data in PRIEN (ien;file)
"RTN","IBCEF1",129,0)
 ; ALL = if ALL=1, returns the entire $$CPT^ICPTCOD for CPT or
"RTN","IBCEF1",130,0)
 ;       ^code^name format for ICD result
"RTN","IBCEF1",131,0)
 ;       or null if lookup fails
"RTN","IBCEF1",132,0)
 ; EDT = Effective date to check (not used if +$G(ALL)=0)
"RTN","IBCEF1",133,0)
 N CODE,IBX
"RTN","IBCEF1",134,0)
 S CODE=""
"RTN","IBCEF1",135,0)
 ;Modified for Code Set Versioning
"RTN","IBCEF1",136,0)
 I PRIEN["ICPT" S IBX=$$CPT^ICPTCOD(+PRIEN,$G(EDT)) G:IBX'>0 PRCDQ S CODE=$S($G(ALL):IBX,1:$P(IBX,U,2))
"RTN","IBCEF1",137,0)
 I PRIEN["ICD0" S IBX=$$ICD0^IBACSV(+PRIEN,$G(EDT)) G:IBX="" PRCDQ S CODE=$S($G(ALL):U_$P(IBX,U)_U_$P(IBX,U,4),1:$P(IBX,U))
"RTN","IBCEF1",138,0)
PRCDQ Q CODE
"RTN","IBCEF1",139,0)
 ;
"RTN","IBCEF1",140,0)
NFT(FT,IBIFN) ; Returns 1 if bill IBIFN is not of form type FT (internal)
"RTN","IBCEF1",141,0)
 ; so the data element should not be required
"RTN","IBCEF1",142,0)
 S FT=$S($$FT^IBCEF(IBIFN)=FT:0,1:1)
"RTN","IBCEF1",143,0)
 Q FT
"RTN","IBCEF1",144,0)
 ;
"RTN","IBCEF1",145,0)
REQ(FT,INP,IBIFN) ; Determine if bill IBIFN is of form type FT and
"RTN","IBCEF1",146,0)
 ; Inpatient (I) or Outpatient (O) status INP [or either if (null)] 
"RTN","IBCEF1",147,0)
 ;
"RTN","IBCEF1",148,0)
 ;Returns 1 if both conditions FT and INP match for the bill
"RTN","IBCEF1",149,0)
 ; or 0 if either of these conditions are not true
"RTN","IBCEF1",150,0)
 ; I $$REQ^IBCEF1(2,"I",1) would mean if bill entry #1 is
"RTN","IBCEF1",151,0)
 ;                         HCFA 1500/inpatient the data would be required
"RTN","IBCEF1",152,0)
 ; I '$$REQ^IBCEF1(2,"I",1) would mean if bill entry #1 is anything but
"RTN","IBCEF1",153,0)
 ;                          HCFA 1500/inpatient, the data would not be
"RTN","IBCEF1",154,0)
 ;                          required
"RTN","IBCEF1",155,0)
 N Z
"RTN","IBCEF1",156,0)
 S Z=1
"RTN","IBCEF1",157,0)
 S:$$NFT(FT,IBIFN) Z=0 ; Not the form type for requirement
"RTN","IBCEF1",158,0)
 I Z,$G(INP)'="" D
"RTN","IBCEF1",159,0)
 . S Z0=$$INPAT^IBCEF(IBIFN,1),INP=$G(INP)
"RTN","IBCEF1",160,0)
 . S Z=$S(Z0:INP="I",1:INP="O") ;Check if I/O matches required state
"RTN","IBCEF1",161,0)
 Q Z
"RTN","IBCEF1",162,0)
 ;
"RTN","IBCEF1",163,0)
SET1(IBIFN,A,IBZ,IBXDATA,IBXNOREQ) ; Utility to set variables for output
"RTN","IBCEF1",164,0)
 ; formatter for professional EDI 
"RTN","IBCEF1",165,0)
 ; Returns values of A, IBXDATA, IBZ, IBXNOREQ
"RTN","IBCEF1",166,0)
 N Z,CT
"RTN","IBCEF1",167,0)
 S A="^TMP($J,""IBLCT"")"
"RTN","IBCEF1",168,0)
 S (Z,CT)=0
"RTN","IBCEF1",169,0)
 F  S Z=$O(IBXDATA(Z)) Q:'Z  D  ; Don't transmit 0-charges
"RTN","IBCEF1",170,0)
 . I $P(IBXDATA(Z),U,9),$P(IBXDATA(Z),U,8) S CT=CT+1 M IBZ(CT)=IBXDATA(Z)
"RTN","IBCEF1",171,0)
 K IBXDATA
"RTN","IBCEF1",172,0)
 S IBXNOREQ='$$REQ(2,"O",IBIFN)
"RTN","IBCEF1",173,0)
 Q
"RTN","IBCEF1",174,0)
 ;
"RTN","IBCEF1",175,0)
CIADDR(IBXDATA,IBXSAVE,LINE,FORM) ; Format current ins co address line LINE for FORM
"RTN","IBCEF1",176,0)
 ; FORM = 1 for HCFA 1500, 2 for UB-92
"RTN","IBCEF1",177,0)
 ; Called from formatter - both IBXDATA, IBXSAVE parameters are
"RTN","IBCEF1",178,0)
 ;  passed by reference
"RTN","IBCEF1",179,0)
 K IBXDATA
"RTN","IBCEF1",180,0)
 I $G(FORM)'=1 D
"RTN","IBCEF1",181,0)
 . Q:'$G(LINE)
"RTN","IBCEF1",182,0)
 . N Z
"RTN","IBCEF1",183,0)
 . S:'$D(IBXSAVE("LM-UB")) IBXSAVE("LM-UB")=$P($G(^IBE(350.9,1,1)),U,31)-1
"RTN","IBCEF1",184,0)
 . S Z=$S(IBXSAVE("LM-UB")>0:$J("",IBXSAVE("LM-UB")),1:"")
"RTN","IBCEF1",185,0)
 . I LINE=1 S IBXDATA=Z_$P(IBXSAVE("CADR"),U)_$S($P(IBXSAVE("CADR"),U,2)'="":" "_$P(IBXSAVE("CADR"),U,2),1:"")_$S($P(IBXSAVE("CADR"),U,3)'="":" "_$P(IBXSAVE("CADR"),U,3),1:"")
"RTN","IBCEF1",186,0)
 . I LINE=2 S IBXDATA=Z_$P(IBXSAVE("CADR"),U,4)_", "_$$STATE^IBCEFG1($P(IBXSAVE("CADR"),U,5))_" "_$P(IBXSAVE("CADR"),U,6)
"RTN","IBCEF1",187,0)
 I $G(FORM)=1 D
"RTN","IBCEF1",188,0)
 . N CT,X,Z
"RTN","IBCEF1",189,0)
 . S:'$D(IBXSAVE("INDENT")) Z="",$P(Z," ",+$P($G(^IBE(350.9,1,1)),U,27)+1)="",IBXSAVE("INDENT")=Z
"RTN","IBCEF1",190,0)
 . S CT=0
"RTN","IBCEF1",191,0)
 . S X=$P(IBXSAVE("CADR"),U) S:X'="" CT=CT+1,IBXDATA(CT)=IBXSAVE("INDENT")_X
"RTN","IBCEF1",192,0)
 . S X=$S($P(IBXSAVE("CADR"),U,2)'="":$P(IBXSAVE("CADR"),U,2),1:"")_$S($P(IBXSAVE("CADR"),U,2)'="":" ",1:"")_$P(IBXSAVE("CADR"),U,3) S:X'="" CT=CT+1,IBXDATA(CT)=IBXSAVE("INDENT")_X
"RTN","IBCEF1",193,0)
 . S CT=CT+1,IBXDATA(CT)=IBXSAVE("INDENT")_$P(IBXSAVE("CADR"),U,4)_", "_$$STATE^IBCEFG1($P(IBXSAVE("CADR"),U,5))_" "_$P(IBXSAVE("CADR"),U,6)
"RTN","IBCEF1",194,0)
 Q
"RTN","IBCEF1",195,0)
 ;
"RTN","IBCEF3")
0^8^B48712174
"RTN","IBCEF3",1,0)
IBCEF3 ;ALB/TMP - FORMATTER SPECIFIC BILL FLD FUNCTIONS ;17-JUNE-96
"RTN","IBCEF3",2,0)
 ;;2.0;INTEGRATED BILLING;**52,84,121,51,152,210**;21-MAR-94
"RTN","IBCEF3",3,0)
 ;
"RTN","IBCEF3",4,0)
MPG(PG,FLDS,FORM) ; Set static flds on pages after page 1
"RTN","IBCEF3",5,0)
 ;        for either HCFA 1500 or UB92
"RTN","IBCEF3",6,0)
 ;  PG = page #
"RTN","IBCEF3",7,0)
 ; FORM= 1 for UB-92, otherwise for 1500
"RTN","IBCEF3",8,0)
 ;  FLDS: array passed by reference and containing lines OR
"RTN","IBCEF3",9,0)
 ;        line/column from pg 1 to repeat on subsequent pgs
"RTN","IBCEF3",10,0)
 ;        Format: FLDS(LINE,COL)  or  FLDS(LINE) for whole line
"RTN","IBCEF3",11,0)
 ;   HCFA 1500:       LINES 1-5,7-43,57 from col 1 to 49, 58-63
"RTN","IBCEF3",12,0)
 ;   UB-92:           LINE 2-5/COL 1 (FACILITY NAME/ADDRESS)
"RTN","IBCEF3",13,0)
 ;                    LINE 3/COL 57,78 (BILL#, TYPE OF BILL)
"RTN","IBCEF3",14,0)
 ;                    LINE 7 (PATIENT NAME, ADDRESS)
"RTN","IBCEF3",15,0)
 ;                    LINE 9/COL 1 (PATIENT BIRTHDATE)
"RTN","IBCEF3",16,0)
 ;                    LINE 62-64/COL 1 (BOX 84 DATA)
"RTN","IBCEF3",17,0)
 N Z,Z0,Z1,LPG
"RTN","IBCEF3",18,0)
 S FORM=$S($G(FORM)=1:3,1:2)
"RTN","IBCEF3",19,0)
 I FORM=2 D  ; print page # on each pg, totals on last page of 1500
"RTN","IBCEF3",20,0)
 . S LPG=+$O(^TMP("IBXDATA",$J,IBXREC,""),-1)
"RTN","IBCEF3",21,0)
 . S Z="[Page "_PG_" of "_LPG_"]"
"RTN","IBCEF3",22,0)
 . I $L($G(IBXSAVE("INDENT")))'>40 S Z=$J("",(80-$L(Z))\2)_Z
"RTN","IBCEF3",23,0)
 . I $L($G(IBXSAVE("INDENT")))>40 S Z=$J("",10)_Z
"RTN","IBCEF3",24,0)
 . D SETGBL^IBCEFG(PG,6,1,Z,.IBXSIZE)
"RTN","IBCEF3",25,0)
 . I PG=2 S Z=$P(Z,"[")_"[Page 1 of "_LPG_"]" D SETGBL^IBCEFG(1,6,1,Z,.IBXSIZE)
"RTN","IBCEF3",26,0)
 . I LPG=PG D
"RTN","IBCEF3",27,0)
 .. D SETGBL^IBCEFG(PG,57,50,$J($G(IBXSAVE("TOT")),10,2),.IBXSIZE)
"RTN","IBCEF3",28,0)
 .. D SETGBL^IBCEFG(PG,57,72,$G(IBXSAVE("BDUE")),.IBXSIZE)
"RTN","IBCEF3",29,0)
 .. K IBXSAVE("PTOT"),IBXSAVE("TOT"),IBXSAVE("BDUE")
"RTN","IBCEF3",30,0)
 ;
"RTN","IBCEF3",31,0)
 S Z=0 F  S Z=$O(FLDS(Z)) Q:'Z  D
"RTN","IBCEF3",32,0)
 . I $O(FLDS(Z,""))="" D  Q  ;repeats line
"RTN","IBCEF3",33,0)
 .. S Z0=0 F  S Z0=$O(^TMP("IBXDATA",$J,IBXREC,1,Z,Z0)) Q:'Z0  S Z1=$G(^(Z0)) I Z1'="" D SETGBL^IBCEFG(PG,Z,Z0,Z1,.IBXSIZE)
"RTN","IBCEF3",34,0)
 . S Z0=0 F  S Z0=$O(FLDS(Z,Z0)) Q:'Z0  S Z1=$G(^TMP("IBXDATA",$J,IBXREC,1,Z,Z0)) I Z1'="" D SETGBL^IBCEFG(PG,Z,Z0,Z1,.IBXSIZE)
"RTN","IBCEF3",35,0)
 . I FORM=2,LPG'=PG D
"RTN","IBCEF3",36,0)
 .. D SETGBL^IBCEFG(PG,57,50,"",.IBXSIZE)
"RTN","IBCEF3",37,0)
 .. D SETGBL^IBCEFG(PG,57,72,"",.IBXSIZE)
"RTN","IBCEF3",38,0)
 Q
"RTN","IBCEF3",39,0)
 ;
"RTN","IBCEF3",40,0)
NONSERV(Z,Z0) ; Set variable if non-service/non-text data is present for box
"RTN","IBCEF3",41,0)
 ;  24 of HCFA 1500
"RTN","IBCEF3",42,0)
 ; Z = sequence of IBXSAVE being processed
"RTN","IBCEF3",43,0)
 ; Z0 = sequnce within IBXDATA to indicate actual line #
"RTN","IBCEF3",44,0)
 I $P(IBXSAVE("BOX24",Z),U)="" S IBXSAVE("NON-SERV",Z0)=""
"RTN","IBCEF3",45,0)
 Q
"RTN","IBCEF3",46,0)
 ;
"RTN","IBCEF3",47,0)
PG(VAL,LNCT) ;Set next pg for HCFA 1500 lines
"RTN","IBCEF3",48,0)
 ;VAL = value of fld
"RTN","IBCEF3",49,0)
 ;LNCT = line # from IBXSAVE("BOX24") array
"RTN","IBCEF3",50,0)
 N IBP,IBL
"RTN","IBCEF3",51,0)
 S IBP=LNCT\12+(LNCT#12>0),IBL=LNCT-(12*(IBP-1))-1
"RTN","IBCEF3",52,0)
 I IBL'<0 S VAL=$$FORMAT(VAL,$G(IBXLOOP("IBX0")),$G(IBXDA)) D SETGBL^IBCEFG(IBP,IBXLN+IBL,IBXCOL,VAL,.IBXSIZE)
"RTN","IBCEF3",53,0)
 K IBXDATA(LNCT)
"RTN","IBCEF3",54,0)
 Q
"RTN","IBCEF3",55,0)
 ;
"RTN","IBCEF3",56,0)
MPG92(PG,OFFSET,VAL,IBLN,IBCOL,NOFORM) ; Set up pgs > 1 for UB92 overflows
"RTN","IBCEF3",57,0)
 ; PG = Page # to set (REQUIRED)
"RTN","IBCEF3",58,0)
 ; OFFSET = offset from first line this should be extracted into
"RTN","IBCEF3",59,0)
 ;          0 = first line (REQUIRED)
"RTN","IBCEF3",60,0)
 ; VAL = value to set (REQUIRED)
"RTN","IBCEF3",61,0)
 ; IBLN = line to set data at (if null, uses IBXLN)
"RTN","IBCEF3",62,0)
 ; IBCOL = column to set data at (if null, uses IBXCOL)
"RTN","IBCEF3",63,0)
 ; NOFORM = don't format, just output data as passed
"RTN","IBCEF3",64,0)
 ; Assumes formatter IBXLN,IBXCOL variables exist
"RTN","IBCEF3",65,0)
 ;
"RTN","IBCEF3",66,0)
 I $G(IBLN)="" S IBLN=IBXLN
"RTN","IBCEF3",67,0)
 I $G(IBCOL)="" S IBCOL=IBXCOL
"RTN","IBCEF3",68,0)
 S:'$G(NOFORM) VAL=$$FORMAT(VAL,$G(IBXLOOP("IBX0")),$G(IBXDA))
"RTN","IBCEF3",69,0)
 D SETGBL^IBCEFG(PG,IBLN+OFFSET,IBCOL,VAL,.IBXSIZE)
"RTN","IBCEF3",70,0)
 Q
"RTN","IBCEF3",71,0)
 ;
"RTN","IBCEF3",72,0)
CKREV(CT,VAL) ; Check too many rev code lines to fit on pg
"RTN","IBCEF3",73,0)
 ; 
"RTN","IBCEF3",74,0)
 I CT'>23,$O(^TMP($J,"IBC-RC",""),-1)'>23 S IBXDATA(CT)=VAL Q  ;If up to 23 rev codes, output on first page
"RTN","IBCEF3",75,0)
 D MPG92((CT-1)\21+1,CT-1#21,VAL) ; 21 on a pg, blank line, pg ref
"RTN","IBCEF3",76,0)
 Q
"RTN","IBCEF3",77,0)
 ;
"RTN","IBCEF3",78,0)
CKPG92 ; Check to see if multiple UB92 pgs are needed then populate
"RTN","IBCEF3",79,0)
 ; static flds from page 1, add page numbers
"RTN","IBCEF3",80,0)
 Q:'$O(^TMP("IBXDATA",$J,IBXREC,1))
"RTN","IBCEF3",81,0)
 ;
"RTN","IBCEF3",82,0)
 N FLDS,LPG,IBPG,IBP,Z,Z0
"RTN","IBCEF3",83,0)
 S LPG=$O(^TMP("IBXDATA",$J,IBXREC,""),-1),IBP=0
"RTN","IBCEF3",84,0)
 S Z="" F  S Z=$O(^TMP("IBXDATA",$J,IBXREC,LPG,Z),-1) Q:'Z  S Z0=0 F  S Z0=$O(^TMP("IBXDATA",$J,IBXREC,LPG,Z,Z0)) Q:'Z0  I $G(^(Z0))'="" S IBP=1 Q
"RTN","IBCEF3",85,0)
 I 'IBP K ^TMP("IBXDATA",$J,IBXREC,LPG) S LPG=$O(^TMP("IBXDATA",$J,IBXREC,""),-1) Q:LPG=1
"RTN","IBCEF3",86,0)
 ; Static flds
"RTN","IBCEF3",87,0)
 S FLDS(7)="" F Z=2,9,4,5,62,63,64 S FLDS(Z,1)=""
"RTN","IBCEF3",88,0)
 F Z=1,58,77:1:80 S FLDS(3,Z)=""
"RTN","IBCEF3",89,0)
 F IBPG=1:1:LPG D
"RTN","IBCEF3",90,0)
 . ; Add pg # to last line of rev codes if multiple pages
"RTN","IBCEF3",91,0)
 . N IB,IBP
"RTN","IBCEF3",92,0)
 . S IB=$G(^TMP("IBXDATA",$J,IBXREC,IBPG,41,6))
"RTN","IBCEF3",93,0)
 . D MPG92(IBPG,22,$J("",20)_"PAGE",19,6,1)
"RTN","IBCEF3",94,0)
 . D MPG92(IBPG,22,IBPG_" OF "_LPG,19,31,1)
"RTN","IBCEF3",95,0)
 . D:IBPG>1 MPG(IBPG,.FLDS,1)
"RTN","IBCEF3",96,0)
 ;
"RTN","IBCEF3",97,0)
 Q
"RTN","IBCEF3",98,0)
 ;
"RTN","IBCEF3",99,0)
HCPC(R) ;FORMAT HCPC fld FOR UB92 (returns formatted value)
"RTN","IBCEF3",100,0)
 ; R = flag for type of fld (1/2/3) being printed in rev code block
"RTN","IBCEF3",101,0)
 Q R  ;No longer used as of patch IB*2.0*51
"RTN","IBCEF3",102,0)
 ;
"RTN","IBCEF3",103,0)
PROS(IBIFN) ; Extract billable prosthetics for 837
"RTN","IBCEF3",104,0)
 N IBARRAY,Z,Z0,CT,PROS
"RTN","IBCEF3",105,0)
 D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBCEF3",106,0)
 I '$P(IBARRAY,U,2) S CT="" G PROSQ
"RTN","IBCEF3",107,0)
 S Z="",CT=0
"RTN","IBCEF3",108,0)
 F  S Z=$O(IBARRAY(Z)) Q:Z=""  S Z0="" F  S Z0=$O(IBARRAY(Z,Z0)) Q:Z0=""  S CT=CT+1 D
"RTN","IBCEF3",109,0)
 .S PROS=$P($$PIN^IBCSC5B(+$P($G(^IBA(362.5,+IBARRAY(Z,Z0),0)),U,3)),U,2)
"RTN","IBCEF3",110,0)
 .;date^item ptr file 661^short descr from file 441^entry # in file 362.5
"RTN","IBCEF3",111,0)
 .S IBXDATA(CT)=Z_U_Z0_U_PROS_U_+IBARRAY(Z,Z0)
"RTN","IBCEF3",112,0)
PROSQ Q CT
"RTN","IBCEF3",113,0)
 ;
"RTN","IBCEF3",114,0)
B24(IBXSV,IBIFN,IBNOSHOW) ; Code to execute to set up IBXSV("BOX24") for
"RTN","IBCEF3",115,0)
 ;   print or IBXSAVE("OUTPT") for transmit - called by output formatter
"RTN","IBCEF3",116,0)
 ; IBNOSHOW = 1 if not to show error/warning text lines
"RTN","IBCEF3",117,0)
 ; Pass IBXSV by reference
"RTN","IBCEF3",118,0)
 N IBSUB
"RTN","IBCEF3",119,0)
 S IBSUB=$S('$G(^TMP("IBTX",$J,IBIFN)):"BOX24",1:"OUTPT")
"RTN","IBCEF3",120,0)
 K IBXSV(IBSUB)
"RTN","IBCEF3",121,0)
 I '$D(IBIFN) S IBIFN=$G(IBXIEN)
"RTN","IBCEF3",122,0)
 I IBIFN D F^IBCEF("N-HCFA 1500 SERVICE"_$S(IBSUB["24":"S (PRINT",1:" LINE (EDI")_")",,,IBIFN)
"RTN","IBCEF3",123,0)
 I $S(IBSUB'["24":1,1:'$G(IBNOSHOW)) D
"RTN","IBCEF3",124,0)
 . M IBXSV(IBSUB)=IBXDATA
"RTN","IBCEF3",125,0)
 E  D
"RTN","IBCEF3",126,0)
 . N Z,CT
"RTN","IBCEF3",127,0)
 . S (Z,CT)=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  I '$D(IBXDATA(Z,"ARX")) S CT=CT+1 M IBXSV(IBSUB,CT)=IBXDATA(Z)
"RTN","IBCEF3",128,0)
 Q
"RTN","IBCEF3",129,0)
 ;
"RTN","IBCEF3",130,0)
ALLTYP(IBIFN) ; returns codes to translate to ALL ins types on a bill
"RTN","IBCEF3",131,0)
 ; IBIFN = ien of bill
"RTN","IBCEF3",132,0)
 N IBX,Z
"RTN","IBCEF3",133,0)
 F Z=1:1:3 S $P(IBX,U,Z)=$$INSTYP(IBIFN,Z)
"RTN","IBCEF3",134,0)
 ; IBX = primary code^secondary code^tertiary code
"RTN","IBCEF3",135,0)
 Q IBX
"RTN","IBCEF3",136,0)
 ;
"RTN","IBCEF3",137,0)
INSTYP(IBIFN,SEQ) ; Returns insurance type code for an ins on a bill
"RTN","IBCEF3",138,0)
 ; IBIFN = ien of bill
"RTN","IBCEF3",139,0)
 ; SEQ = sequence (1,2,3) of insurance wanted - prim, second, tert
"RTN","IBCEF3",140,0)
 ;       Default is current insurance co
"RTN","IBCEF3",141,0)
 ;
"RTN","IBCEF3",142,0)
 N IBA,Z
"RTN","IBCEF3",143,0)
 ;
"RTN","IBCEF3",144,0)
 I '$G(SEQ) S SEQ=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF3",145,0)
 S Z=+$G(^DGCR(399,IBIFN,"I"_SEQ))
"RTN","IBCEF3",146,0)
 ;Codes 1:HMO;2:COMMERCIAL;3:MEDICARE;4:MEDICAID;5:GROUP POLICY;9:OTHER
"RTN","IBCEF3",147,0)
 I Z D
"RTN","IBCEF3",148,0)
 . S IBA=$P($G(^DIC(36,Z,3)),U,9)
"RTN","IBCEF3",149,0)
 . I IBA="" S IBA=5 ;Default is group policy - 5 if blank
"RTN","IBCEF3",150,0)
 ;
"RTN","IBCEF3",151,0)
 Q $G(IBA)
"RTN","IBCEF3",152,0)
 ;
"RTN","IBCEF3",153,0)
POLTYP(IBIFN,IBSEQ) ; Returns ins electronic policy type code for one
"RTN","IBCEF3",154,0)
 ;   ins policy on a bill
"RTN","IBCEF3",155,0)
 ; IBIFN = ien of bill
"RTN","IBCEF3",156,0)
 ; IBSEQ = sequence (1,2,3) of ins policy wanted - prim, second, tert
"RTN","IBCEF3",157,0)
 ;       Default is current insurance co
"RTN","IBCEF3",158,0)
 ;
"RTN","IBCEF3",159,0)
 N IBPLAN,IBPLTYP
"RTN","IBCEF3",160,0)
 ;
"RTN","IBCEF3",161,0)
 I '$G(IBSEQ) S IBSEQ=+$$COBN^IBCEF(IBIFN)
"RTN","IBCEF3",162,0)
 S IBPLAN=$G(^IBA(355.3,+$P($G(^DGCR(399,IBIFN,"I"_IBSEQ)),U,18),0))
"RTN","IBCEF3",163,0)
 S IBPLTYP=$P(IBPLAN,U,15)
"RTN","IBCEF3",164,0)
 I IBPLTYP="" S IBPLTYP="CI" ;Default is commercial - 'CI'
"RTN","IBCEF3",165,0)
 I IBPLTYP="MX" D
"RTN","IBCEF3",166,0)
 . I $P(IBPLAN,U,14)'="","AB"[$P(IBPLAN,U,14) S IBPLTYP="M"_$P(IBPLAN,U,14) Q
"RTN","IBCEF3",167,0)
 . S IBPLTYP="CI"
"RTN","IBCEF3",168,0)
 Q $G(IBPLTYP)
"RTN","IBCEF3",169,0)
 ;
"RTN","IBCEF3",170,0)
ALLPTYP(IBIFN) ; returns insurance policy type codes for ALL ins on a bill
"RTN","IBCEF3",171,0)
 ; IBIFN = ien of bill
"RTN","IBCEF3",172,0)
 N IBX,Z
"RTN","IBCEF3",173,0)
 F Z=1:1:3 I $D(^DGCR(399,IBIFN,"I"_Z)) S $P(IBX,U,Z)=$$POLTYP(IBIFN,Z)
"RTN","IBCEF3",174,0)
 ; IBX = primary code^secondary code^tertiary code
"RTN","IBCEF3",175,0)
 Q IBX
"RTN","IBCEF3",176,0)
 ;
"RTN","IBCEF3",177,0)
FILL(Z) ;
"RTN","IBCEF3",178,0)
 Q
"RTN","IBCEF3",179,0)
 ;
"RTN","IBCEF3",180,0)
 ;  ***** 
"RTN","IBCEF3",181,0)
 ;  The following code performs the multi-page set up for
"RTN","IBCEF3",182,0)
 ;  printing overflow data on the UB-92
"RTN","IBCEF3",183,0)
 ;  *****
"RTN","IBCEF3",184,0)
 ;
"RTN","IBCEF3",185,0)
XPROC(DATA,CT) ; Output any UB92 procedures after 6 on new page(s)
"RTN","IBCEF3",186,0)
 ; DATA = output data from IBXSAVE("PROC",CT)
"RTN","IBCEF3",187,0)
 ; CT = array sequence # of the procedure being output
"RTN","IBCEF3",188,0)
 ; Only used for local prints
"RTN","IBCEF3",189,0)
 N OFFSET,PG,COL,PRCODE,Q
"RTN","IBCEF3",190,0)
 S Q=(CT-1)\3#2,OFFSET=$S('Q:0,1:2)
"RTN","IBCEF3",191,0)
 S PG=(CT-1)\6+1,COL=4+(CT-1#3*15)
"RTN","IBCEF3",192,0)
 D MPG92(PG,OFFSET,$P(DATA,U),58,COL),MPG92(PG,OFFSET,$P(DATA,U,2),58,COL+8)
"RTN","IBCEF3",193,0)
 Q
"RTN","IBCEF3",194,0)
 ;
"RTN","IBCEF3",195,0)
XDIAG(DATA,CT) ; Output any UB92 other diagnoses after 8 on new page(s)
"RTN","IBCEF3",196,0)
 ; DATA = output data from IBXSAVE("DX",CT)
"RTN","IBCEF3",197,0)
 ; CT = array sequence # of the diagnosis being output
"RTN","IBCEF3",198,0)
 ; Only used for local prints
"RTN","IBCEF3",199,0)
 N COL,PG
"RTN","IBCEF3",200,0)
 S PG=(CT-1)\8+1,COL=8+(CT-1#9*7)
"RTN","IBCEF3",201,0)
 S DATA=$P($$ICD9^IBACSV(+DATA),U)
"RTN","IBCEF3",202,0)
 D MPG92(PG,0,DATA,56,COL)
"RTN","IBCEF3",203,0)
 Q
"RTN","IBCEF3",204,0)
 ;
"RTN","IBCEF3",205,0)
XVAL(DATA,CT) ; Output any UB92 value codes after 12 on new page(s)
"RTN","IBCEF3",206,0)
 ; DATA = output data from IBXSAVE("VC",CT)
"RTN","IBCEF3",207,0)
 ; CT = array sequence # of the value code being output
"RTN","IBCEF3",208,0)
 ;
"RTN","IBCEF3",209,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",210,0)
 S PG=(CT-1)\12+1,COL=44+(CT-1#3*13),OFFSET=(CT-(12*(PG-1))-1)\3
"RTN","IBCEF3",211,0)
 D MPG92(PG,OFFSET,$P(DATA,U),14,COL),MPG92(PG,OFFSET,$P(DATA,U,2),14,COL+2)
"RTN","IBCEF3",212,0)
 Q
"RTN","IBCEF3",213,0)
 ;
"RTN","IBCEF3",214,0)
XCC(DATA,CT) ; Output any UB92 condition codes after 7 on new page(s)
"RTN","IBCEF3",215,0)
 ; DATA = output data from IBXSAVE("CC",CT)
"RTN","IBCEF3",216,0)
 ; CT = array sequence # of the condition code being output
"RTN","IBCEF3",217,0)
 ;
"RTN","IBCEF3",218,0)
 N COL,PG
"RTN","IBCEF3",219,0)
 S PG=(CT-1)\7+1,COL=55+(CT-1#7*3)
"RTN","IBCEF3",220,0)
 D MPG92(PG,0,DATA,9,COL)
"RTN","IBCEF3",221,0)
 Q
"RTN","IBCEF3",222,0)
 ;
"RTN","IBCEF3",223,0)
XOCC(DATA,CT,FL) ; Output any UB92 occurrence codes after 8 (2 per form
"RTN","IBCEF3",224,0)
 ;  locators 32-35) on new page(s)
"RTN","IBCEF3",225,0)
 ; DATA = data from IBXSAVE("OCC",CT) to be output
"RTN","IBCEF3",226,0)
 ; CT = array sequence # of occurrence code being output
"RTN","IBCEF3",227,0)
 ; FL = # of form locator being populated with the occ code
"RTN","IBCEF3",228,0)
 ;
"RTN","IBCEF3",229,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",230,0)
 S PG=(CT-1)\2+1,COL=4+((FL-32)*10),OFFSET=$S(CT#2:0,1:1)
"RTN","IBCEF3",231,0)
 D MPG92(PG,OFFSET,$P(DATA,U),11,COL),MPG92(PG,OFFSET,$P(DATA,U,2),11,COL+3)
"RTN","IBCEF3",232,0)
 Q
"RTN","IBCEF3",233,0)
XOCCS(DATA,CT) ; Output any UB92 occurrence span codes after 2 on new page(s)
"RTN","IBCEF3",234,0)
 ; DATA = data from IBXSAVE("OCCS",CT) to be output
"RTN","IBCEF3",235,0)
 ; CT = array sequence # of occurrence span code being output
"RTN","IBCEF3",236,0)
 ;
"RTN","IBCEF3",237,0)
 N PG,OFFSET
"RTN","IBCEF3",238,0)
 S PG=(CT-1)\2+1,OFFSET=$S(CT#2:0,1:1)
"RTN","IBCEF3",239,0)
 D MPG92(PG,OFFSET,$P(DATA,U),11,41),MPG92(PG,OFFSET,$P(DATA,U,2),11,44),MPG92(PG,OFFSET,$P(DATA,U,3),11,51)
"RTN","IBCEF3",240,0)
 Q
"RTN","IBCEF3",241,0)
 ;
"RTN","IBCEF3",242,0)
FORMAT(VAL,IBX0,IBXDA) ;
"RTN","IBCEF3",243,0)
 I IBX0'="",IBXDA S VAL=$$FORMAT^IBCEFG(VAL,$P($G(^IBA(364.6,+IBXDA,0)),U,9),$P(IBX0,U,7),IBX0)
"RTN","IBCEF3",244,0)
 Q VAL
"RTN","IBCEF3",245,0)
 ;
"RTN","IBCEF3",246,0)
OUTPDT(IBIFN,IBXSAVE,IBXDATA) ; Returns outpatient service to date
"RTN","IBCEF3",247,0)
 ;  formatted CCYYMMDD for UB92 837
"RTN","IBCEF3",248,0)
 ; IBIFN = ien of bill (file 399)
"RTN","IBCEF3",249,0)
 ; IBXSAVE = pass by reference for IBXSAVE("INPT") and IBXSAVE("DATE")
"RTN","IBCEF3",250,0)
 ; IBXDATA = array with formatted date or each line item - CCYYMMDD
"RTN","IBCEF3",251,0)
 N Z
"RTN","IBCEF3",252,0)
 S Z=0 F  S Z=$O(IBXSAVE("INPT",Z)) Q:'Z  S IBXDATA(Z)=$S($P(IBXSAVE("INPT",Z),U,10):$$DT^IBCEFG1($P(IBXSAVE("INPT",Z),U,10),,"D8"),1:IBXSAVE("DATE"))
"RTN","IBCEF3",253,0)
 K IBXSAVE("DATE")
"RTN","IBCEF3",254,0)
 Q
"RTN","IBCEF3",255,0)
 ;
"RTN","IBCEU4")
0^9^B49878802
"RTN","IBCEU4",1,0)
IBCEU4 ;ALB/TMP - EDI UTILITIES ;02-OCT-96
"RTN","IBCEU4",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210**;21-MAR-94
"RTN","IBCEU4",3,0)
 ;
"RTN","IBCEU4",4,0)
TESTFLD ;  Entrypoint to call to test the output the formatter will
"RTN","IBCEU4",5,0)
 ;  produce for a specific entry in file 364.7
"RTN","IBCEU4",6,0)
 ;
"RTN","IBCEU4",7,0)
 N X,Y,DIC,IBCT
"RTN","IBCEU4",8,0)
 K IBXDATA,IBXSAVE
"RTN","IBCEU4",9,0)
 S IBCT=0
"RTN","IBCEU4",10,0)
 F  W !,$S(IBCT:"Another ",1:""),"Bill: " S DIC="^DGCR(399,",DIC(0)="AEMQ" D ^DIC Q:Y<0  D
"RTN","IBCEU4",11,0)
 . S IBCT=1
"RTN","IBCEU4",12,0)
 . K ^TMP($J),^TMP("IBXSAVE",$J),^TMP("IBXDATA",$J),IBXSAVE,IBXDATA
"RTN","IBCEU4",13,0)
 . D FLDS(+Y)
"RTN","IBCEU4",14,0)
 . F  R !!,"VARIABLE TO DISPLAY (IBXDATA): ",X:DTIME Q:X["^"  S:X="" X="IBXDATA" D
"RTN","IBCEU4",15,0)
 .. I $S($E(X,$L(X))'=")"&($L(X,"(")>1):1,1:$L(X,"(")'=$L(X,")")) W !,"BAD VARIABLE NAME" Q
"RTN","IBCEU4",16,0)
 .. I '$D(@X) W "   *** NO DATA TO DISPLAY" Q
"RTN","IBCEU4",17,0)
 .. N S S S=X
"RTN","IBCEU4",18,0)
 .. W !,X," = ",$G(@X)
"RTN","IBCEU4",19,0)
 .. F  S X=$Q(@X) Q:X'[S  W !,X," = ",@X
"RTN","IBCEU4",20,0)
 .. W !
"RTN","IBCEU4",21,0)
 Q
"RTN","IBCEU4",22,0)
 ;
"RTN","IBCEU4",23,0)
FLDS(IBIFN) ; Extract fields for bill IBIFN
"RTN","IBCEU4",24,0)
 N X,Y,DIC,IB1,IBI,IBAR,IBXPG,IBXLN,IBXCOL,IBXREC,Z,Z0
"RTN","IBCEU4",25,0)
 W !,"Remember to run this for flds that set up pre-requisite data (if any) first",!
"RTN","IBCEU4",26,0)
 ;
"RTN","IBCEU4",27,0)
 S IB1=1
"RTN","IBCEU4",28,0)
 F  W !,$S('IB1:"Another ",1:""),"Form Field: " S DIC="^IBA(364.7,",DIC(0)="AEMQZ" D ^DIC Q:Y<0  D
"RTN","IBCEU4",29,0)
 . S IB1=0
"RTN","IBCEU4",30,0)
 . N IBZXX,IBXIEN
"RTN","IBCEU4",31,0)
 . ; Execute data element logic for fld
"RTN","IBCEU4",32,0)
 . S IBI=+Y,Z=$P($G(^IBA(364.5,+$P(Y(0),U,3),0)),U)
"RTN","IBCEU4",33,0)
 . S Z0=$G(^IBA(364.6,+Y(0),0))
"RTN","IBCEU4",34,0)
 . S IBAR=$G(^IBA(364.5,+$P(Y(0),U,3),2)) S:IBAR="" IBAR="IBXDATA"
"RTN","IBCEU4",35,0)
 . S IBXPG=$P(Z0,U,4),IBXLN=$P(Z0,U,5),IBXCOL=$P(Z0,U,8),IBXREC=1
"RTN","IBCEU4",36,0)
 . D F^IBCEF(Z,"IBZXX","",IBIFN)
"RTN","IBCEU4",37,0)
 . Q:'$D(IBZXX)
"RTN","IBCEU4",38,0)
 . K @IBAR
"RTN","IBCEU4",39,0)
 . M @IBAR=IBZXX
"RTN","IBCEU4",40,0)
 . I $G(^IBA(364.7,IBI,1))'="" S IBXIEN=IBIFN X ^IBA(364.7,IBI,1)
"RTN","IBCEU4",41,0)
 . D CLEAN^DILF
"RTN","IBCEU4",42,0)
 Q
"RTN","IBCEU4",43,0)
 ;
"RTN","IBCEU4",44,0)
DATE(X) ; Convert date in YYYYMMDD or YYMMDD format to MM DD YYYY or MM DD YY
"RTN","IBCEU4",45,0)
 N Z
"RTN","IBCEU4",46,0)
 S Z=X
"RTN","IBCEU4",47,0)
 I $L(X)=8 S Z=$E(X,5,6)_" "_$E(X,7,8)_" "_$E(X,1,4)
"RTN","IBCEU4",48,0)
 I $L(X)=6 S Z=$E(X,3,4)_" "_$E(X,5,6)_" "_$E(X,1,2)
"RTN","IBCEU4",49,0)
 Q Z
"RTN","IBCEU4",50,0)
 ;
"RTN","IBCEU4",51,0)
MCRSPEC(IBIFN,MCR,IBPIEN) ; Returns specialty code for a provider on bill
"RTN","IBCEU4",52,0)
 ; IBIFN = bill ien (file 399)
"RTN","IBCEU4",53,0)
 ; MCR = 1 if 2-digit MCR code should be returned 0 or null=3 digit code
"RTN","IBCEU4",54,0)
 ; IBPIEN = vp of the provider for which to get the
"RTN","IBCEU4",55,0)
 ;   specialty, otherwise it returns specialty code for the 'required'
"RTN","IBCEU4",56,0)
 ;   provider on bill (default is file 200 if no file designated)
"RTN","IBCEU4",57,0)
 ;
"RTN","IBCEU4",58,0)
 N IBZ
"RTN","IBCEU4",59,0)
 S IBZ="99" ;default if none found
"RTN","IBCEU4",60,0)
 I '$G(IBPIEN) D F^IBCEF("N-SPECIALTY CODE","IBZ",,IBIFN)
"RTN","IBCEU4",61,0)
 I $G(IBPIEN) S:$P(IBPIEN,";",2)="" IBPIEN=IBPIEN_";VA(200," S IBZ=$$SPEC^IBCEU(IBPIEN,$$SERVDT^IBCEF(IBIFN,,2))
"RTN","IBCEU4",62,0)
 I '$G(MCR) S IBZ="0"_IBZ
"RTN","IBCEU4",63,0)
 Q IBZ
"RTN","IBCEU4",64,0)
 ;
"RTN","IBCEU4",65,0)
ECODE(IBP,CD) ; Function returns 1 if procedure ien IBP is an E-code
"RTN","IBCEU4",66,0)
 ; CD = returned = the external code, if passed by reference
"RTN","IBCEU4",67,0)
 N Q
"RTN","IBCEU4",68,0)
 S CD=$P($$ICD9^IBACSV(+IBP),U)
"RTN","IBCEU4",69,0)
 Q ($E(CD)="E")
"RTN","IBCEU4",70,0)
 ;
"RTN","IBCEU4",71,0)
BOX82NM(IBIFN,IBZSAVE) ; Returns the data to be printed in form locators 82
"RTN","IBCEU4",72,0)
 ; and 83 on the UB92 for bill ien IBIFN, based on the providers on the
"RTN","IBCEU4",73,0)
 ; bill
"RTN","IBCEU4",74,0)
 ; Pass array IBZSAVE by reference
"RTN","IBCEU4",75,0)
 N Z,IBZ,IBCT
"RTN","IBCEU4",76,0)
 D F^IBCEF("N-ALL PROVIDERS","IBZ",,IBIFN)
"RTN","IBCEU4",77,0)
 F Z=1:1:6 S IBZSAVE("PRV-82",Z)=""
"RTN","IBCEU4",78,0)
 F Z=4,2,1,9 D
"RTN","IBCEU4",79,0)
 . S IBCT=$S(Z=4:0,1:IBCT) Q:IBCT>4
"RTN","IBCEU4",80,0)
 . I Z=4,$$FT^IBCEF(IBIFN)=2 S Z=3 ; Find rendering for HCFA 1500
"RTN","IBCEU4",81,0)
 . I $S(Z=4!(Z=3):0,1:'$O(IBZ(Z,0))) Q
"RTN","IBCEU4",82,0)
 . S IBCT=IBCT+1
"RTN","IBCEU4",83,0)
 . I Z=4,$G(IBZ(4,1))="",$$FT^IBCEF(IBIFN)=3,'$D(^DGCR(399,IBIFN,"PRV")) S IBZ(Z,1)="DEPT OF VETERANS AFFAIRS" ;Default for old bills w/o prv
"RTN","IBCEU4",84,0)
 . I $O(IBZ(Z,1,1)) S IBZSAVE("PRV-82",IBCT)=$G(IBZ(Z,1,2))_" "_$G(IBZ(Z,1,3))
"RTN","IBCEU4",85,0)
 . S IBCT=IBCT+1,IBZSAVE("PRV-82",IBCT)=$P($G(IBZ(Z,1,1)),U)_" "_$P($G(IBZ(Z,1)),U)
"RTN","IBCEU4",86,0)
 Q
"RTN","IBCEU4",87,0)
 ;
"RTN","IBCEU4",88,0)
STATOK(IBIFN,VALST) ; Returns 1 if status of bill IBIFN is one of the valid
"RTN","IBCEU4",89,0)
 ;  status codes in VALST
"RTN","IBCEU4",90,0)
 N OK,Z
"RTN","IBCEU4",91,0)
 S OK=0
"RTN","IBCEU4",92,0)
 I $G(VALST)'="" S OK=$L(VALST,$P($G(^DGCR(399,IBIFN,0)),U,13))>1
"RTN","IBCEU4",93,0)
 Q OK
"RTN","IBCEU4",94,0)
 ;
"RTN","IBCEU4",95,0)
RXPRLOOK(IBX) ; Do a FM lookup of procedures for RX that can be linked
"RTN","IBCEU4",96,0)
 ; to a specific revenue code (ones that are not already soft-linked)
"RTN","IBCEU4",97,0)
 ; Function returns ien of the 'CP' node multiple for the selected proc
"RTN","IBCEU4",98,0)
 ; OR  "" if none selected or selection is invalid
"RTN","IBCEU4",99,0)
 ;
"RTN","IBCEU4",100,0)
 ; IBX = the procedure code
"RTN","IBCEU4",101,0)
 ;
"RTN","IBCEU4",102,0)
 N IBZ,IBMAX,IBEACH,IBMANY,IBHLP,IBNEXT,Z
"RTN","IBCEU4",103,0)
 S IBMAX=50,IBEACH=5,IBHLP=0
"RTN","IBCEU4",104,0)
 K ^TMP("DILIST",$J),^TMP("DIERR",$J),^TMP("DIHELP",$J),^TMP("IBLIST",$J)
"RTN","IBCEU4",105,0)
 ;
"RTN","IBCEU4",106,0)
 S IBZ=IBX
"RTN","IBCEU4",107,0)
 I IBX?1"?".E,'$D(DIQUIET) D
"RTN","IBCEU4",108,0)
 . I IBX?2"?".E S IBMAX=50,IBEACH=20 D RXPRHLP(IBMAX,.IBNEXT) S IBHLP=1
"RTN","IBCEU4",109,0)
 . S IBX=""
"RTN","IBCEU4",110,0)
 . ;
"RTN","IBCEU4",111,0)
 I IBX'="" D
"RTN","IBCEU4",112,0)
 . S:$L(IBX)<5 IBX="`"_IBX
"RTN","IBCEU4",113,0)
 . D FIND^DIC(399.0304,","_DA(1)_",","@;.01E","A",IBX,IBMAX,,"I '$$LINKED^IBCEU4(.DA,Y)")
"RTN","IBCEU4",114,0)
 . D XFER(0)
"RTN","IBCEU4",115,0)
 ;
"RTN","IBCEU4",116,0)
 S IBMANY=($G(^TMP("IBLIST",$J,0))>1)
"RTN","IBCEU4",117,0)
 I IBMANY D  ;More than one match found
"RTN","IBCEU4",118,0)
 . I $D(DIQUIET) S ^TMP("IBLIST",$J,0)=0,IBX="" Q
"RTN","IBCEU4",119,0)
 . N IB1,IB2,IBSEL,IBGOT,IBCNT,Q,Q1
"RTN","IBCEU4",120,0)
 . S (IBGOT,IB1,IB2)=0
"RTN","IBCEU4",121,0)
 . F  S IB1=$O(^TMP("IBLIST",$J,2,IB1)) Q:'IB1  D  Q:IBGOT
"RTN","IBCEU4",122,0)
 .. S IB2=IB2+1
"RTN","IBCEU4",123,0)
 .. S Q=$J("",5)_$S('IBHLP:$E(IB2_$J("",5),1,5),1:"")_^TMP("IBLIST",$J,2,IB1)
"RTN","IBCEU4",124,0)
 .. F Q1=0:0 S Q1=$O(^TMP("IBLIST",$J,"ID",IB1,Q1)) Q:'Q1  D
"RTN","IBCEU4",125,0)
 ... I $G(^TMP("IBLIST",$J,"ID",IB1,Q1))'="" S Q=Q_"  "_^TMP("IBLIST",$J,"ID",IB1,Q1) Q
"RTN","IBCEU4",126,0)
 ... I $G(^TMP("IBLIST",$J,"ID",IB1,Q1,"E"))'="" S Q=Q_"  "_^TMP("IBLIST",$J,"ID",IB1,Q1,"E")
"RTN","IBCEU4",127,0)
 .. S IBSEL($S(IB2#IBEACH:IB2#IBEACH,1:IBEACH))=Q
"RTN","IBCEU4",128,0)
 .. I '$O(^TMP("IBLIST",$J,2,IB1))!'(IB1#IBEACH) D
"RTN","IBCEU4",129,0)
 ... M DIR("A")=IBSEL K IBSEL
"RTN","IBCEU4",130,0)
 ... I 'IBHLP D
"RTN","IBCEU4",131,0)
 .... S:$O(^TMP("IBLIST",$J,2,IB1)) DIR("A",6)="Press <RETURN> to see more, '^' to exit this list, OR"
"RTN","IBCEU4",132,0)
 .... S DIR("A")="SELECT 1-"_IB2_": "
"RTN","IBCEU4",133,0)
 .... S DIR(0)="NAO^1:"_IB2_":0"
"RTN","IBCEU4",134,0)
 .... S DIR("?")="Enter your selection for procedure from 1 to "_IB2
"RTN","IBCEU4",135,0)
 ... I IBHLP D
"RTN","IBCEU4",136,0)
 .... I $S(IB2'=+$G(^TMP("IBLIST",$J,0)):1,1:$P($G(^(0)),U,3)) S DIR("A")="'^' TO STOP: ",DIR(0)="EA" Q
"RTN","IBCEU4",137,0)
 .... S Z=0 F  S Z=$O(DIR("A",Z)) Q:'Z  W !,DIR("A",Z)
"RTN","IBCEU4",138,0)
 .... S Y="^" K DIR W ! Q
"RTN","IBCEU4",139,0)
 ... I $D(DIR("A")) D ^DIR K DIR
"RTN","IBCEU4",140,0)
 ... I IBHLP S Y=$S(Y=1:"",1:"^")
"RTN","IBCEU4",141,0)
 ... I Y="" D  Q
"RTN","IBCEU4",142,0)
 .... I $O(^TMP("IBLIST",$J,2,IB1)) Q
"RTN","IBCEU4",143,0)
 .... S IBX=""
"RTN","IBCEU4",144,0)
 .... W:'IBHLP !
"RTN","IBCEU4",145,0)
 .... I $P($G(^TMP("IBLIST",$J,0)),U,3),IB1'<IBMAX D
"RTN","IBCEU4",146,0)
 ..... I 'IBHLP W !!,"There were more than ",IBMAX," matches found.  Please try again with more specific input",! Q
"RTN","IBCEU4",147,0)
 ..... D RXPRHLP(IBMAX,.IBNEXT)
"RTN","IBCEU4",148,0)
 ... I Y["^" S IBX="",IBGOT=1 Q
"RTN","IBCEU4",149,0)
 ... I Y>0 S IBGOT=1,IBX=$G(^TMP("IBLIST",$J,2,+Y)) D RECALL^DILFD(399.0304,+IBX_",",DUZ)
"RTN","IBCEU4",150,0)
 . I 'IBGOT S ^TMP("IBLIST",$J,0)=0
"RTN","IBCEU4",151,0)
 I 'IBMANY,$G(^TMP("IBLIST",$J,0)) D
"RTN","IBCEU4",152,0)
 . N Q,Q1
"RTN","IBCEU4",153,0)
 . S Q=^TMP("IBLIST",$J,2,1)
"RTN","IBCEU4",154,0)
 . F Q1=0:0 S Q1=$O(^TMP("IBLIST",$J,"ID",1,Q1)) Q:'Q1  D
"RTN","IBCEU4",155,0)
 .. I $G(^TMP("IBLIST",$J,"ID",1,Q1))'="" S Q=Q_"  "_^TMP("IBLIST",$J,"ID",1,Q1) Q
"RTN","IBCEU4",156,0)
 .. I $G(^TMP("IBLIST",$J,"ID",1,Q1,"E"))'="" S Q=Q_"  "_^TMP("IBLIST",$J,"ID",1,Q1,"E")
"RTN","IBCEU4",157,0)
 . D EN^DDIOL($J("",16)_Q) S IBX=$G(^TMP("IBLIST",$J,2,1)) D RECALL^DILFD(399.0304,+IBX_",",DUZ)
"RTN","IBCEU4",158,0)
 ;
"RTN","IBCEU4",159,0)
 D CLEAN^DILF
"RTN","IBCEU4",160,0)
 K ^TMP("IBLIST",$J)
"RTN","IBCEU4",161,0)
 Q IBX
"RTN","IBCEU4",162,0)
 ;
"RTN","IBCEU4",163,0)
RXPRHLP(IBMAX,IBNEXT) ; Get list for ?? help
"RTN","IBCEU4",164,0)
 ;
"RTN","IBCEU4",165,0)
 ; IBMAX = The maximum # of entries to extract at once
"RTN","IBCEU4",166,0)
 ; IBNEXT = Contains the value of the index to start at
"RTN","IBCEU4",167,0)
 ;
"RTN","IBCEU4",168,0)
 N IBQ,IBZ
"RTN","IBCEU4",169,0)
 S IBQ=+$O(^TMP("IBLIST",$J,2,""),-1),IBZ=","_DA(1)_","
"RTN","IBCEU4",170,0)
 D LIST^DIC(399.0304,IBZ,"@;.01EI;1E",,IBMAX,.IBNEXT,,"B","I '$$LINKED^IBCEU4(.DA,Y)"),XFER(IBQ)
"RTN","IBCEU4",171,0)
 Q
"RTN","IBCEU4",172,0)
 ;
"RTN","IBCEU4",173,0)
LINKED(DA,Y) ; Function returns 1 if proc already linked to an RX rev code
"RTN","IBCEU4",174,0)
 ; DA = the DA array from the RC multiple
"RTN","IBCEU4",175,0)
 ; Y = the ien of the CP multiple
"RTN","IBCEU4",176,0)
 N Z
"RTN","IBCEU4",177,0)
 S Z=+$O(^DGCR(399,DA(1),"RC","ACP",Y,0))
"RTN","IBCEU4",178,0)
 Q $S(Z:Z'=DA,1:0)
"RTN","IBCEU4",179,0)
 ;
"RTN","IBCEU4",180,0)
XFER(IBQ) ; Transfer DILIST to IBLIST array
"RTN","IBCEU4",181,0)
 ; IBQ = the number of entries already found
"RTN","IBCEU4",182,0)
 N Z,IBZ
"RTN","IBCEU4",183,0)
 S (Z,IBZ)=0
"RTN","IBCEU4",184,0)
 F  S Z=$O(^TMP("DILIST",$J,2,Z)) Q:'Z  S IBZ=IBZ+1,^TMP("IBLIST",$J,2,IBZ+IBQ)=^TMP("DILIST",$J,2,Z) M ^TMP("IBLIST",$J,"ID",IBZ+IBQ)=^TMP("DILIST",$J,"ID",Z)
"RTN","IBCEU4",185,0)
 ;
"RTN","IBCEU4",186,0)
 I $D(^TMP("DILIST",$J,0)) S ^TMP("IBLIST",$J,0)=^TMP("DILIST",$J,0)
"RTN","IBCEU4",187,0)
 S $P(^TMP("IBLIST",$J,0),U)=IBQ+IBZ
"RTN","IBCEU4",188,0)
 Q
"RTN","IBCEU4",189,0)
 ;
"RTN","IBCEU4",190,0)
NOREV(DA,IBRX) ; Returns 1 if no other revenue code on bill DA(1)
"RTN","IBCEU4",191,0)
 ; is linked to prescription entry IBRX
"RTN","IBCEU4",192,0)
 N X,Z
"RTN","IBCEU4",193,0)
 S X=1,Z=0 F  S Z=$O(^DGCR(399,DA(1),"RC",Z)) Q:'Z  I DA'=Z,$P($G(^(Z,0)),U,11)=IBRX S X=0 Q
"RTN","IBCEU4",194,0)
 Q X
"RTN","IBCEU4",195,0)
 ;
"RTN","IBCEU4",196,0)
ASKRX(DA) ; Returns the selected RX entry in file 362.4
"RTN","IBCEU4",197,0)
 N DIR,X,Y
"RTN","IBCEU4",198,0)
 S DIR(0)="PAO^IBA(362.4,"
"RTN","IBCEU4",199,0)
 S DIR("A")="  RX: ",DIR("B")=$P($G(^IBA(362.4,+$P($G(^DGCR(399,DA(1),"RC",DA,0)),U,11),0)),U)
"RTN","IBCEU4",200,0)
 S DIR("S")="I $P(^(0),U,2)=DA(1),$$NOREV^IBCEU4(.DA,Y)"
"RTN","IBCEU4",201,0)
 D ^DIR K DIR
"RTN","IBCEU4",202,0)
 Q $S(Y>0:+Y,1:"")
"RTN","IBCEU4",203,0)
 ;
"RTN","IBCEU4",204,0)
SLF(IBIFN) ;  Returns 1 if Attending/Rendering provider id is SLF000
"RTN","IBCEU4",205,0)
 N IB,IBZ
"RTN","IBCEU4",206,0)
 S IB=0
"RTN","IBCEU4",207,0)
 D F^IBCEF("N-ATT/REND PROVIDER ID","IBZ",,IBIFN)
"RTN","IBCEU4",208,0)
 S:$G(IBZ)="SLF000" IB=1
"RTN","IBCEU4",209,0)
 Q IB
"RTN","IBCEU4",210,0)
 ;
"RTN","IBCF10")
0^10^B18544115
"RTN","IBCF10",1,0)
IBCF10 ;ALB/MJB - PRINT UB-82 BILL (CONT.)  ;13 JUN 88 12:39
"RTN","IBCF10",2,0)
 ;;2.0;INTEGRATED BILLING;**133,210**;21-MAR-94
"RTN","IBCF10",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCF10",4,0)
 ;
"RTN","IBCF10",5,0)
 ;MAP TO DGCRP0
"RTN","IBCF10",6,0)
 ;
"RTN","IBCF10",7,0)
 Q
"RTN","IBCF10",8,0)
7 W ! I IB("M")]"",$P(IB("M"),"^",4)]"" S IBMA=IB("M"),IBPST=$S($P(IBMA,U,8)']"":"",$D(^DIC(5,+$P(IBMA,U,8),0)):$P(^(0),U,2),1:"")
"RTN","IBCF10",9,0)
 I $D(IBMA),IBMA'="" W $P(IBMA,"^",4),! W:$P(IBMA,"^",5)]"" $P(IBMA,"^",5) W:$D(IBCC(1)) ?30,IBCC(1) W:$D(IBCC(2)) ?33,IBCC(2) W:$D(IBCC(3)) ?36,IBCC(3) W:$D(IBCC(4)) ?39,IBCC(4) W:$D(IBCC(5)) ?42,IBCC(5)
"RTN","IBCF10",10,0)
 W:$P(IB("U1"),U,7)]"" ?61,$P(IB("U1"),U,7) I $D(IBMA) W:$P(IBMA,"^",6)]"" !,$P(IBMA,"^",6) W:$P(IB("M1"),"^",1)]"" !,$P(IB("M1"),"^",1) W !,$P(IBMA,"^",7),?$X+2,IBPST,?$X+2,$P(IBMA,"^",9)
"RTN","IBCF10",11,0)
8 F I=1:1 Q:$Y>15  W !
"RTN","IBCF10",12,0)
 D NWREVC
"RTN","IBCF10",13,0)
 I DGPAG'=DGTOTPAG W "  (page ",DGPAG," of ",DGTOTPAG,")"
"RTN","IBCF10",14,0)
 F I=1:1 Q:$Y>29  W !
"RTN","IBCF10",15,0)
 K IB01 D Q1^IBCVA,Q4^IBCVA,EN3^IBCVA0
"RTN","IBCF10",16,0)
9 F I=1:1 Q:$Y>39  W !
"RTN","IBCF10",17,0)
 ;PAYER
"RTN","IBCF10",18,0)
 W ! I '$D(^DGCR(399,IBIFN,"AIC")),$P(IB(0),"^",7),$P(^DGCR(399.3,$P(IB(0),"^",7),0),"^")["ESRD" W "MEDICARE ESRD"
"RTN","IBCF10",19,0)
 I '$D(^DGCR(399,IBIFN,"AIC")) W ?24,$S($P(IB("U"),U,5)=0:"Y",1:"R"),?27,$S($P(IB("U"),U,6)["N":"N",$P(IB("U"),U,6)["n":"N",$P(IB("U"),U,6)=0:"N",1:"Y") D Q3^IBCVA,EN2^IBCVA0 G 11
"RTN","IBCF10",20,0)
 I $D(IBDD) F I=1:1 S IBIN=$O(IBDD(I)) Q:'$D(IBDD(I,0))  S X=$P($G(^DIC(36,($P(IBDD(I,0),U,1)),0)),U,1),M=$P(IB("U"),U,6) W !,$E(X,1,23),?24,$S($P(IB("U"),U,5)=0:"Y",1:"R"),?27,$S(M["N":"N",M["n":"N",M=0:"N",1:"Y")
"RTN","IBCF10",21,0)
10 F I=1:1 Q:$Y>44  W !
"RTN","IBCF10",22,0)
 ;INSURED
"RTN","IBCF10",23,0)
 I $D(IBDD) F I=1:1 S IBIN=$O(IBDD(I)) Q:'$D(IBDD(I,0))  W !,$P(IBDD(I,0),U,17),?23,$E(IBISEX(I),1),?26,IBIRN(I),?29,$P(IBDD(I,0),U,2),?46,$E($P(IBDD(I,0),U,15),1,14),?61,$P(IBDD(I,0),U,3)
"RTN","IBCF10",24,0)
 D Q3^IBCVA,EN2^IBCVA0
"RTN","IBCF10",25,0)
11 I '$D(^DGCR(399,IBIFN,"AIC")),$P(IB(0),"^",7),$P(^DGCR(399.3,$P(IB(0),"^",7),0),"^")["ESRD" X "F I=1:1 Q:$Y>44  W !" W !,VADM(1),?23,$P(VADM(5),"^"),?26,"01",?29,$P(VADM(2),"^")
"RTN","IBCF10",26,0)
 F I=1:1 Q:$Y>49  W !
"RTN","IBCF10",27,0)
 ;EMPLOYMENT INFO
"RTN","IBCF10",28,0)
 S IBROI="" I $D(^DGCR(399,IBIFN,"I1")) S IBROI=$P(^("I1"),U,6)
"RTN","IBCF10",29,0)
 I IBROI="s" W "S" I $D(^DPT(DFN,.25)) S IBSPEM=^(.25) W " 9",?4,$P(IBSPEM,U),?42,$P(IBSPEM,U,5),?$X+2,$S($P(IBSPEM,U,6)'="":$P(^DIC(5,$P(IBSPEM,U,6),0),U,2),1:""),?$X+2,$P(IBSPEM,U,7) K IBSPEM
"RTN","IBCF10",30,0)
 I IBROI="v" W "P" I $D(IBEMPD),IBEMPD]"" W ?2,$S('$D(IBEC):9,IBEC:IBEC,1:9),?4,$P(IBEMPD,U),?42,$P(IBEMPD,U,2),?$X+2,$S($P(IBEMPD,U,7)'="":$P(^DIC(5,$P(IBEMPD,U,7),0),U,2),1:""),?$X+2,$P(IBEMPD,U,8)
"RTN","IBCF10",31,0)
 K IBROI
"RTN","IBCF10",32,0)
 D Q2^IBCVA,EN4^IBCVA1,EN5^IBCVA1
"RTN","IBCF10",33,0)
12 F I=1:1 Q:$Y>52  W !
"RTN","IBCF10",34,0)
 ;I IB("C")]"" W:$P(IB("C"),U,14)'="" $P(^ICD9($P(IB("C"),U,14),0),U,3) K X2 S X=$P(IB("C"),U,14) D ICW W ?44,X S X2=44 F I=15:1:18 Q:'$D(IBDIN(I))  S X=IBDIN(I) D ICW W ?X2,X
"RTN","IBCF10",35,0)
 N IBINDXX,IBEVDT
"RTN","IBCF10",36,0)
 D SET^IBCSC4D(IBIFN,"",.IBINDXX) I $D(IBINDXX)>2 D
"RTN","IBCF10",37,0)
 . S IBEVDT=$$BDATE^IBACSV(IBIFN) ; Event Date
"RTN","IBCF10",38,0)
 . S I=$O(IBINDXX(0)) Q:'I
"RTN","IBCF10",39,0)
 . W $P($$ICD9^IBACSV(+IBINDXX(I),IBEVDT),U,3)
"RTN","IBCF10",40,0)
 . S X2=37,I=0 F  S I=$O(IBINDXX(I)) Q:'I  S X=IBINDXX(I) D ICW W ?X2,X
"RTN","IBCF10",41,0)
 D 13^IBCF11
"RTN","IBCF10",42,0)
 Q
"RTN","IBCF10",43,0)
ICW S X=$P($$ICD9^IBACSV(+X),U) S:$D(X2) X2=X2+7
"RTN","IBCF10",44,0)
 Q
"RTN","IBCF10",45,0)
NWREVC ;print for mult bedsections/rev codes
"RTN","IBCF10",46,0)
 F I=0:0 S DGCNT=$O(^UTILITY($J,"IB-RC",DGCNT)) Q:'DGCNT!(DGCNT>(DGPAG*23))  S DGTEXT=^(DGCNT) D NWREVC1
"RTN","IBCF10",47,0)
 S DGCNT=DGCNT-1
"RTN","IBCF10",48,0)
 Q
"RTN","IBCF10",49,0)
NWREVC1 ;
"RTN","IBCF10",50,0)
 I DGTEXT="" W ! Q
"RTN","IBCF10",51,0)
 I $P(DGTEXT,"^",5,99)]"" X $P(DGTEXT,"^",5,99) Q
"RTN","IBCF10",52,0)
 I $P(DGTEXT,"^")]"" W !,$P(DGTEXT,"^") Q
"RTN","IBCF10",53,0)
 I $P(DGTEXT,"^",4)="C" W ! S:$L($P(DGTEXT,"^",3)) DGTEXT1=$P(DGTEXT,"^",2) W:$L(DGTEXT1) +$E(DGTEXT1,4,5)_"/"_+$E(DGTEXT1,6,7)_"/"_$E(DGTEXT1,2,3) D ADDCOD Q
"RTN","IBCF10",54,0)
 I $P(DGTEXT,"^",2),$D(^DGCR(399,IBIFN,"RC",$P(DGTEXT,"^",2),0)) S DGREVC=^(0) D NWREVC2 Q
"RTN","IBCF10",55,0)
 Q
"RTN","IBCF10",56,0)
NWREVC2 W !,$E($P(^DGCR(399.2,+DGREVC,0),"^",2),1,22),?22,$J($P(DGREVC,"^",2),7,2),?31,$P(^(0),"^"),?35,$J($P(DGREVC,"^",3),3),?39,$J($P(DGREVC,"^",4),9,2)
"RTN","IBCF10",57,0)
 Q
"RTN","IBCF10",58,0)
ADDCOD ;Additional Procedures Print
"RTN","IBCF10",59,0)
 Q:'$P(DGTEXT,U,3)  S IBCPT=""
"RTN","IBCF10",60,0)
 I DGTEXT["ICD" S IBCPT=$$ICD0^IBACSV(+$P(DGTEXT,U,3),$G(DGTEXT1))
"RTN","IBCF10",61,0)
 I DGTEXT["ICPT" S IBCPT=$$CPT^IBACSV(+$P(DGTEXT,U,3),$G(DGTEXT1))
"RTN","IBCF10",62,0)
 W ?11,$P(IBCPT,U)
"RTN","IBCF10",63,0)
 Q
"RTN","IBCF10",64,0)
 ;IBCF10
"RTN","IBCF11")
0^37^B5660623
"RTN","IBCF11",1,0)
IBCF11 ;ALB/MJB - PRINT UB-82 BILL (CONT.) ;25 JAN 89 12:54
"RTN","IBCF11",2,0)
 ;;2.0;INTEGRATED BILLING;**133,210**;21-MAR-94
"RTN","IBCF11",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCF11",4,0)
 ;
"RTN","IBCF11",5,0)
 ;MAP TO DGCRP1
"RTN","IBCF11",6,0)
 ;
"RTN","IBCF11",7,0)
 Q
"RTN","IBCF11",8,0)
13 ;I $D(IBIP),$D(IBPR) W !!,$S($P(IB(0),"^",9)]"":$P(IB(0),"^",9),1:9)
"RTN","IBCF11",9,0)
 W !!,$P(IB(0),"^",9)
"RTN","IBCF11",10,0)
 ;I '$D(IBCPT),'$D(IBICD),'$D(IBHC) G 14
"RTN","IBCF11",11,0)
 ;G:$D(IBCPT) CPT G:$D(IBICD) ICD G:$D(IBHC) HCFA
"RTN","IBCF11",12,0)
CPT ;W !!,"4"
"RTN","IBCF11",13,0)
 ;S I=0 F Z=1:1 S I=$O(IBCPT(I)) Q:'I  S X=$S($D(IB("C")):$E($P(IB("C"),U,(I+10)),4,7),1:"") S IBCPTN=$P(^ICPT(IBCPT(I),0),"^") W:Z=1 ?3,$P(^(0),"^",2),?43,IBCPTN,?49,X W:Z=2 ?54,IBCPTN,?60,X W:Z=3 ?65,IBCPTN,?71,X
"RTN","IBCF11",14,0)
 ;G 14
"RTN","IBCF11",15,0)
ICD ;W !!,"9"
"RTN","IBCF11",16,0)
 ;F I=4:1:6 I $D(IBICD(I)) S X=$E($P(IB("C"),U,(I+7)),4,5)_$E($P(IB("C"),U,(I+7)),6,7),Y=$S($D(^ICD0(IBICD(I),0)):^(0),1:"") W:I=4 ?3,$P(^ICD0(IBICD(I),0),U,4),?43,$P(Y,U,1),?49,X W:I=5 ?54,$P(Y,U,1),?60,X W:I=6 ?65,$P(Y,U,1),?71,X
"RTN","IBCF11",17,0)
 ;G 14
"RTN","IBCF11",18,0)
HCFA ;W !!,"5"
"RTN","IBCF11",19,0)
 ;F I=7:1:9 I $D(IBHC(I)) S X=$E($P(IB("C"),U,(I+4)),4,5)_$E($P(IB("C"),U,(I+4)),6,7) W:I=7 ?3,$P(^ICPT(IBHC(I),0),"^",2),?43,IBHCN(I),?49,X W:I=8 ?54,IBHCN(I),?60,X W:I=9 ?65,IBHCN(I),?71,X
"RTN","IBCF11",20,0)
 D PROC
"RTN","IBCF11",21,0)
14 F I=1:1 Q:$Y>55  W !
"RTN","IBCF11",22,0)
 W ! W:$P(IB("U"),U,13)]"" ?22,$P(IB("U"),U,13) W ?33,$S($P(IB("U1"),U,13)="":"Dept. Veterans Affairs",1:$P(IB("U1"),U,13)),?56,$P(IB("U1"),U,14)
"RTN","IBCF11",23,0)
 S IBRATY=$P(^DGCR(399,IBIFN,0),U,7),IBRATY=$P(^DGCR(399.3,IBRATY,0),U,2)
"RTN","IBCF11",24,0)
15 W !!,"Patient ID: ",$P(VADM(2),"^"),!,"Bill Type: ",$S(IBRATY]"":IBRATY,1:"UNSPECIFIED")
"RTN","IBCF11",25,0)
 I $D(IBEPAR(1)),$P(IBEPAR(1),U,4)'="" W !,$P(IBEPAR(1),U,4)
"RTN","IBCF11",26,0)
 I IB("U1")]"",$P(IB("U1"),"^",8)]"" W !,"**",$P(IB("U1"),"^",8),"**"
"RTN","IBCF11",27,0)
16 F I=1:1 Q:$Y>61  W !
"RTN","IBCF11",28,0)
 I $D(IBEPAR(1)),$P(IBEPAR(1),U,1)'="" W ?46,$P(IBEPAR(1),U,1) W:$P(IBEPAR(1),U,2)'="" !,?46,$P(IBEPAR(1),U,2)
"RTN","IBCF11",29,0)
 S IBXDT=$S(IBPNT:DT,$P(IB("S"),U,12)]"":$P(IB("S"),U,12),1:DT) W ?69,$E(IBXDT,4,5)_"-"_$E(IBXDT,6,7)_"-"_$E(IBXDT,2,3)
"RTN","IBCF11",30,0)
 W ! S (DIC,DIE)=399,IBYY=$S($P(^DGCR(399,IBIFN,"S"),"^",12)="":"@92",1:"@94"),DA=IBIFN,DR="[IB STATUS]" D ^DIE K DIC,DIE,IBYY
"RTN","IBCF11",31,0)
 D BSTAT^IBCDC(IBIFN) ; remove from auto biller list
"RTN","IBCF11",32,0)
 K IBXDT,IBMA
"RTN","IBCF11",33,0)
 Q
"RTN","IBCF11",34,0)
 ;
"RTN","IBCF11",35,0)
PROC ;  -print first 3-5 procedure codes
"RTN","IBCF11",36,0)
 S TAB=43
"RTN","IBCF11",37,0)
 S J=0 F I=1:1 S J=$O(IBPROC(J)) Q:'J!(I>3)  D
"RTN","IBCF11",38,0)
 . I IBPROC(J)["ICD" S X=$$ICD0^IBACSV(+IBPROC(J),+$P(IBPROC(J),U,2))
"RTN","IBCF11",39,0)
 . I IBPROC(J)["ICPT" S X=$$CPT^IBACSV(+IBPROC(J),+$P(IBPROC(J),U,2))
"RTN","IBCF11",40,0)
 . S Y=$E($P(IBPROC(J),U,2),4,7)
"RTN","IBCF11",41,0)
 . ;
"RTN","IBCF11",42,0)
 . I I=1 W ?3,$E($P(X,U,$S(IBPROC(J)["ICD":4,1:2)),1,30)
"RTN","IBCF11",43,0)
 . W ?(TAB+(I-1*11)),$P(X,U),?(TAB+6+(I-1*11)),Y
"RTN","IBCF11",44,0)
 Q
"RTN","IBCF11",45,0)
 ;IBCF11
"RTN","IBCF12")
0^38^B16852699
"RTN","IBCF12",1,0)
IBCF12 ;ALB/AAS - PRINT BILL CONT. ;24 MAY 90
"RTN","IBCF12",2,0)
 ;;2.0;INTEGRATED BILLING;**133,210**;21-MAR-94
"RTN","IBCF12",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCF12",4,0)
 ;
"RTN","IBCF12",5,0)
 ;MAP TO DGCRP2
"RTN","IBCF12",6,0)
 ;
"RTN","IBCF12",7,0)
 ;Build ^Utility array of data to print in Block 20
"RTN","IBCF12",8,0)
 ;   Print Medicare statment on bottom 4 of 23 lines
"RTN","IBCF12",9,0)
 ;   Starting from top print the following, starting and finishing on
"RTN","IBCF12",10,0)
 ;     same page.
"RTN","IBCF12",11,0)
 ;   Print Revenue codes and subtotal
"RTN","IBCF12",12,0)
 ;   Print Additional CPT/ICD codes
"RTN","IBCF12",13,0)
 ;   Print offset and totals
"RTN","IBCF12",14,0)
 ;   Print Opt visit dates
"RTN","IBCF12",15,0)
 ;
"RTN","IBCF12",16,0)
 ;^Utility(...)=free text^pointer to rev or date of additional code^additional code variable pointer^"c" if additional code^executable code
"RTN","IBCF12",17,0)
 ;             =null ;blank line
"RTN","IBCF12",18,0)
% ;
"RTN","IBCF12",19,0)
 K ^UTILITY($J) S DGLCNT=0,DGSM=1 D SM^IBCU I 'DGSM D
"RTN","IBCF12",20,0)
 .;  -dgsm=1 print medicare statement
"RTN","IBCF12",21,0)
 .;  -dgsm=2 print NSC statement
"RTN","IBCF12",22,0)
 .;  -dgsm=3 print both statements
"RTN","IBCF12",23,0)
 .S DGRNODE=$G(^DGCR(399.3,$P(^DGCR(399,IBIFN,0),"^",7),0))
"RTN","IBCF12",24,0)
 .I $P(^DGCR(399,IBIFN,0),"^",11)="i",$P(DGRNODE,"^",8) S DGSM=1
"RTN","IBCF12",25,0)
 .I $P(DGRNODE,"^",9) S DGSM=DGSM+2
"RTN","IBCF12",26,0)
 .Q
"RTN","IBCF12",27,0)
 D ^IBCF14:DGSM
"RTN","IBCF12",28,0)
 D REVCOD
"RTN","IBCF12",29,0)
 D TOTAL
"RTN","IBCF12",30,0)
 D ADDCOD:$O(^DGCR(399,IBIFN,"CP",0))
"RTN","IBCF12",31,0)
 D OPVIS:$O(^DGCR(399,IBIFN,"OP",0))
"RTN","IBCF12",32,0)
 I DGLCNT<18 D FILL
"RTN","IBCF12",33,0)
 S DGCNT=0,DGPAG=1,DGTOTPAG=DGLCNT/23 S:$P(DGTOTPAG,".",2) DGTOTPAG=DGTOTPAG\1+1
"RTN","IBCF12",34,0)
 Q
"RTN","IBCF12",35,0)
 ;
"RTN","IBCF12",36,0)
REVCOD ;I $D(IBIP) S X=IBLS_" DAY"_$S(IBLS>1:"S ",1:" ")_$S(IBBS'=IBU:IBBS,1:"INPATIENT CARE") D SET
"RTN","IBCF12",37,0)
 I $D(IBIP) S X=IBLS_" DAY"_$S(IBLS>1:"S ",1:" ")_"INPATIENT CARE" D SET
"RTN","IBCF12",38,0)
 S X="" D SET
"RTN","IBCF12",39,0)
 S DGBS=""
"RTN","IBCF12",40,0)
 F I=0:0 S DGBS=$O(^DGCR(399,IBIFN,"RC","ABS",DGBS)) Q:'DGBS  I $D(^DGCR(399.1,DGBS,0)) S X=$P(^DGCR(399.1,DGBS,0),"^") D SET,RCODE
"RTN","IBCF12",41,0)
 ;
"RTN","IBCF12",42,0)
 ; -loop thru all REV CODES and print those with no bedsection
"RTN","IBCF12",43,0)
 S DGCNT=0,DGDA=0 F I=0:0 S DGDA=$O(^DGCR(399,IBIFN,"RC",DGDA)) Q:'DGDA  I $D(^(DGDA,0)),'$P(^(0),U,5) S X="^"_DGDA D SET
"RTN","IBCF12",44,0)
 S X="^^^^W !,""SUBTOTAL"",?39,$S(IB(""U1"")']"""":"""",$P(IB(""U1""),U,1)]"""":$J($P(IB(""U1""),U,1),9,2),1:$J(0,9,2))" D SET
"RTN","IBCF12",45,0)
 Q
"RTN","IBCF12",46,0)
 ;
"RTN","IBCF12",47,0)
 ;Input: DGBS - bedsection, IBIFN - Bill/Claim
"RTN","IBCF12",48,0)
RCODE ;Find revenue codes sorted by bedsection
"RTN","IBCF12",49,0)
 N DGRV,DGDA,IBCODE
"RTN","IBCF12",50,0)
 S DGRV=0 F  S DGRV=$O(^DGCR(399,IBIFN,"RC","ABS",DGBS,DGRV)) Q:'DGRV  D
"RTN","IBCF12",51,0)
 . S DGDA=0 F  S DGDA=$O(^DGCR(399,IBIFN,"RC","ABS",DGBS,DGRV,DGDA)) Q:'DGDA  D
"RTN","IBCF12",52,0)
 .. S X=U_DGDA D SET
"RTN","IBCF12",53,0)
 .. S IBCODE=$P($G(^DGCR(399,IBIFN,"RC",DGDA,0)),U,6) D:IBCODE>0
"RTN","IBCF12",54,0)
 ... S X="          Procedure:    "_$P($$CPT^IBACSV(IBCODE),U)
"RTN","IBCF12",55,0)
 ... D SET
"RTN","IBCF12",56,0)
 Q
"RTN","IBCF12",57,0)
ADDCOD ;Find additional codes
"RTN","IBCF12",58,0)
 Q:'$D(IBPROC)#2  Q:IBPROC<4
"RTN","IBCF12",59,0)
 D RSPACE
"RTN","IBCF12",60,0)
 I DGRSPAC<(IBPROC-2) D FILL
"RTN","IBCF12",61,0)
 S X="" D SET
"RTN","IBCF12",62,0)
 S X="ADDITIONAL PROCEDURE CODES:" D SET
"RTN","IBCF12",63,0)
 S J="" F I=1:1 S J=$O(IBPROC(J)) Q:'J  I I>3 S X="^"_$P(IBPROC(J),"^",2)_"^"_$P(IBPROC(J),"^")_"^C" D SET
"RTN","IBCF12",64,0)
 Q
"RTN","IBCF12",65,0)
 ;
"RTN","IBCF12",66,0)
TOTAL ;Find offsets and Totals
"RTN","IBCF12",67,0)
 D RSPACE
"RTN","IBCF12",68,0)
 I DGRSPAC<$S($P(IB("U1"),"^",2):4,1:2) D FILL
"RTN","IBCF12",69,0)
 S X="" D SET
"RTN","IBCF12",70,0)
 I $P(IB("U1"),"^",2) S X="^^^^W !,""LESS "",$P(IB(""U1""),""^"",3),?39,$J($P(IB(""U1""),""^"",2),9,2)" D SET S X="" D SET
"RTN","IBCF12",71,0)
 S X="^^^^W !,""TOTAL"",?31,$S(+$P(IBEPAR(1),""^"",10):""001"",1:""""),?39,$J($P(IB(""U1""),""^"")-$P(IB(""U1""),""^"",2),9,2)" D SET
"RTN","IBCF12",72,0)
 Q
"RTN","IBCF12",73,0)
 ;
"RTN","IBCF12",74,0)
OPVIS ;Find outpatient Visit dates
"RTN","IBCF12",75,0)
 D RSPACE
"RTN","IBCF12",76,0)
 S DGCNT=0 F I=0:0 S I=$O(^DGCR(399,IBIFN,"OP",I)) Q:'I  S DGCNT=DGCNT+1
"RTN","IBCF12",77,0)
 S DGCNT=DGCNT/3 I $P(DGCNT,".",2)]"" S DGCNT=DGCNT\1+1
"RTN","IBCF12",78,0)
 I DGRSPAC<(DGCNT+1) D FILL
"RTN","IBCF12",79,0)
 S X="" D SET
"RTN","IBCF12",80,0)
 S X="OP VISIT DATE(S) BILLED              "
"RTN","IBCF12",81,0)
 S IB01=0 F IB02=1:1 S IB01=$O(^DGCR(399,IBIFN,"OP",IB01)) Q:'IB01  S Y=IB01 X ^DD("DD") S X=X_Y_$S($O(^DGCR(399,IBIFN,"OP",IB01)):", ",1:"") I '(IB02#3) D SET S X="                                     "
"RTN","IBCF12",82,0)
 I (IB02-1)#3 D SET
"RTN","IBCF12",83,0)
 K IB01,IB02
"RTN","IBCF12",84,0)
 Q
"RTN","IBCF12",85,0)
 ;
"RTN","IBCF12",86,0)
SET S DGLCNT=DGLCNT+1
"RTN","IBCF12",87,0)
 I DGLCNT<24,DGSM,DGLCNT+$S(DGSM=1:5,DGSM=2:2,1:8)>23 S DGLCNT=24
"RTN","IBCF12",88,0)
 G:$D(^UTILITY($J,"IB-RC",DGLCNT)) SET
"RTN","IBCF12",89,0)
 S ^UTILITY($J,"IB-RC",DGLCNT)=X Q
"RTN","IBCF12",90,0)
 Q
"RTN","IBCF12",91,0)
 ;
"RTN","IBCF12",92,0)
RSPACE ;Find remaining blank lines
"RTN","IBCF12",93,0)
 S DGRSPAC=$S(DGLCNT<24:$S(DGSM=1:18,DGSM=2:21,DGSM=3:15,1:23)-DGLCNT,DGLCNT<47:46-DGLCNT,DGLCNT<70:69-DGLCNT,DGLCNT<93:92-DGLCNT,DGLCNT<116:115,1:138)
"RTN","IBCF12",94,0)
 Q
"RTN","IBCF12",95,0)
FILL ;fill space with blank lines so all will fit on page
"RTN","IBCF12",96,0)
 F I=0:0 Q:($S(DGSM=1&(DGLCNT=18):1,DGSM=2&(DGLCNT=21):1,DGSM=3&(DGLCNT=15):1,1:0))!('(DGLCNT#23))  S X="" D SET
"RTN","IBCF12",97,0)
 Q
"RTN","IBCF22")
0^11^B10161856
"RTN","IBCF22",1,0)
IBCF22 ;ALB/ARH - HCFA 1500 19-90 DATA (gather other data) ;12-JUN-93
"RTN","IBCF22",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,122,51,210**;21-MAR-94
"RTN","IBCF22",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCF22",4,0)
 ;
"RTN","IBCF22",5,0)
 ; requires DFN, IBIFN, IB(0)
"RTN","IBCF22",6,0)
 F IBI="C","U","U1","U2","UF2" S IB(IBI)=$G(^DGCR(399,IBIFN,IBI))
"RTN","IBCF22",7,0)
 S IBFLD(12)="PUBLIC LAW 99-272/SECTION 1729 TITLE 38"
"RTN","IBCF22",8,0)
 S IBFLD(13)="PUBLIC LAW 99-272"
"RTN","IBCF22",9,0)
DATES S IBFLD(14)=$$DATE($$EVENT(IBIFN))
"RTN","IBCF22",10,0)
 I $G(IBFLD(15))="",IBIFN'=$P(IB(0),U,17) S IBFLD(15)=$$DATE($P($G(^DGCR(399,+$P(IB(0),U,17),0)),U,3))
"RTN","IBCF22",11,0)
 S IBFLD("16A")=$$DATE($P(IB("U"),U,16)),IBFLD("16B")=$$DATE($P(IB("U"),U,17))
"RTN","IBCF22",12,0)
 S:$$NEEDMRA^IBEFUNC(IBIFN) IBFLD(17)="Dept. Of Veterans Affairs"
"RTN","IBCF22",13,0)
 I $P(IB(0),U,5)<3 S IBFLD("18A")=$$DATE($P(IB("U"),U,1)),IBFLD("18B")=$$DATE($P(IB("U"),U,2))
"RTN","IBCF22",14,0)
 I $P(IB(0),U,5)>2 S VAINDT=$P(IB(0),U,3) D INP^VADPT I +VAIN(1) D
"RTN","IBCF22",15,0)
 . S IBFLD("18A")=$$DATE(VAIN(7)),IBFLD("18B")=$$DATE(+$G(^DGPM(+$P($G(^DGPM(+VAIN(1),0)),U,17),0)))
"RTN","IBCF22",16,0)
 K VAINDT,VAIN
"RTN","IBCF22",17,0)
 S IBFLD(19)="THE UNDERSIGNED CERTIFIES TREATMENT IS NOT FOR A SERVICE-CONNECTED CONDITION"
"RTN","IBCF22",18,0)
 S IBFLD(20)=0
"RTN","IBCF22",19,0)
 ;
"RTN","IBCF22",20,0)
DX ;S X=14 F IBI="21A","21B","21C","21D" S IBFLD(IBI)=$P($G(^ICD9(+$P(IB("C"),U,X),0)),U,1),X=X+1
"RTN","IBCF22",21,0)
 ;F IBI="21A","21B","21C","21D" S IBFLD(IBI)=""
"RTN","IBCF22",22,0)
 ;N IBINDXX D SET^IBCSC4D(IBIFN,"",.IBINDXX) S X=0,Y="21@" D
"RTN","IBCF22",23,0)
 ;. F  S X=$O(IBINDXX(X)) Q:'X  S Y=$O(IBFLD(Y)) Q:+Y'=21  S IBFLD(Y)=$P($G(^ICD9(+IBINDXX(X),0)),U,1)
"RTN","IBCF22",24,0)
 ;
"RTN","IBCF22",25,0)
 N IBDXX,IBPOX
"RTN","IBCF22",26,0)
 D SET^IBCSC4D(IBIFN,.IBDXX,.IBPOX)
"RTN","IBCF22",27,0)
 S X=0 F IBI=1:1:4 S IBFLD(21,IBI)="" I IBI'>$P(IBPOX,U,2) D
"RTN","IBCF22",28,0)
 . S X=$O(IBPOX(X)) Q:X=""
"RTN","IBCF22",29,0)
 . S IBFLD(21,IBI)=$P($$ICD9^IBACSV(+IBPOX(X)),U)
"RTN","IBCF22",30,0)
 . S IBDXI(+$G(IBDXX(+IBPOX(X))))=IBI
"RTN","IBCF22",31,0)
 ;
"RTN","IBCF22",32,0)
 S IBFLD(23)=$P(IB("U"),U,13)
"RTN","IBCF22",33,0)
 ;
"RTN","IBCF22",34,0)
 D ^IBCF23 ; block 24
"RTN","IBCF22",35,0)
 ;
"RTN","IBCF22",36,0)
 S IBFLD(25)=$P($G(^IBE(350.9,1,1)),U,5)
"RTN","IBCF22",37,0)
 S IBFLD(26)=$$BN1^PRCAFN(IBIFN)
"RTN","IBCF22",38,0)
 S IBFLD(28)=+IB("U1")
"RTN","IBCF22",39,0)
 S IBFLD(29)=+$P(IB("U1"),U,2)
"RTN","IBCF22",40,0)
 S IBFLD(30)=IBFLD(28)-IBFLD(29)
"RTN","IBCF22",41,0)
LAST3 S IBFLD(31)=$G(^DGCR(399,IBIFN,"UF2")) ;assuming there are 3 available lines
"RTN","IBCF22",42,0)
 S X=+$P($G(^IBE(350.9,1,0)),U,2),Y=$G(^DIC(4,X,0)),IBI=1 I Y'="" D
"RTN","IBCF22",43,0)
 . S IBFLD(32,1)=$P(Y,U,1),IBX=+$P(Y,U,2),Y=$G(^DIC(4,X,1))
"RTN","IBCF22",44,0)
 . S IBFLD(32,2)=$P(Y,U,1) I $P(Y,U,2)'="" S IBFLD(32,2)=IBFLD(32,2)_", "_$P(Y,U,2)
"RTN","IBCF22",45,0)
 . S IBFLD(32,3)=$P(Y,U,3),IBFLD(32,"X")=$$STATE^IBCF2(IBX)_" "_$P(Y,U,4)
"RTN","IBCF22",46,0)
 S X=$G(^IBE(350.9,1,2))
"RTN","IBCF22",47,0)
 S IBFLD(33,1)=$P(X,U,1),IBFLD(33,2)=$P(X,U,2)
"RTN","IBCF22",48,0)
 S IBFLD(33,3)=$P(X,U,3),IBFLD(33,"X")=$$STATE^IBCF2($P(X,U,4))_" "_$P(X,U,5)
"RTN","IBCF22",49,0)
 S IBFLD(33,4)=$P(X,U,6)
"RTN","IBCF22",50,0)
 ;
"RTN","IBCF22",51,0)
END Q
"RTN","IBCF22",52,0)
 ;
"RTN","IBCF22",53,0)
EVENT(IBIFN,IBXSAVE,IBERR,IBD) ; The event date for box 14 on the
"RTN","IBCF22",54,0)
 ;   HCFA 1500
"RTN","IBCF22",55,0)
 ; IBIFN = bill ien
"RTN","IBCF22",56,0)
 ; IBXSAVE = the array returned by the output formatter for data element
"RTN","IBCF22",57,0)
 ;          N-OCCURRENCE CODES
"RTN","IBCF22",58,0)
 ; Returns IBERR=1 if passed by reference meaning more than one condition
"RTN","IBCF22",59,0)
 ;         has been found
"RTN","IBCF22",60,0)
 ; IBD("LMP"), IBD("ACC"), IBD("ONS"), IBD("EVT") returned with
"RTN","IBCF22",61,0)
 ;           Last menstrual period date, accident date, date of onset,
"RTN","IBCF22",62,0)
 ;           event date if IBD passed by reference
"RTN","IBCF22",63,0)
 ; Function returns the appropriate date
"RTN","IBCF22",64,0)
 ;
"RTN","IBCF22",65,0)
 N Z,Z0,IBX,IBF,A
"RTN","IBCF22",66,0)
 ;
"RTN","IBCF22",67,0)
 ; Default if no applicable occurrence codes found is event date on bill
"RTN","IBCF22",68,0)
 S IBX=$P($G(^DGCR(399,IBIFN,0)),U,3),IBF=0 S IBD("EVT")=IBX
"RTN","IBCF22",69,0)
 ;
"RTN","IBCF22",70,0)
 I '$D(IBXSAVE("OCC")) D F^IBCEF("N-OCCURRENCE CODES",,,IBIFN)
"RTN","IBCF22",71,0)
 S Z=0 F  S Z=$O(IBXSAVE("OCC",Z)) Q:'Z  S Z0(+IBXSAVE("OCC",Z))=$P(IBXSAVE("OCC",Z),U,2)
"RTN","IBCF22",72,0)
 I $O(Z0(5.99),-1) D
"RTN","IBCF22",73,0)
 . S A=$O(Z0(5.99),-1),IBF=IBF+1 ;Accident codes 1-5
"RTN","IBCF22",74,0)
 . S IBD("ACC")=Z0(A) S:IBF'>1 IBX=Z0(A)
"RTN","IBCF22",75,0)
 I $D(Z0(10)) S IBF=IBF+1,IBD("LMP")=IBX S:IBF'>1 IBX=Z0(10) ;Last Menstrual period
"RTN","IBCF22",76,0)
 I $D(Z0(11)) S (IBD("ONS"),IBX)=Z0(11),IBF=IBF+1 ;Onset of Illness
"RTN","IBCF22",77,0)
 ;
"RTN","IBCF22",78,0)
 S IBERR=(IBF>1)
"RTN","IBCF22",79,0)
 Q IBX
"RTN","IBCF22",80,0)
 ;
"RTN","IBCF22",81,0)
DATE(X) ; format date(X) as MM DD YYYY
"RTN","IBCF22",82,0)
 Q $$DATE^IBCF2(X,1)
"RTN","IBCF22",83,0)
 ;
"RTN","IBCF32")
0^12^B12101579
"RTN","IBCF32",1,0)
IBCF32 ;ALB/BGA-UB92 HCFA-1450 (GATHER CODES) ;25-AUG-1993
"RTN","IBCF32",2,0)
 ;;2.0;INTEGRATED BILLING;**210**;21-MAR-94
"RTN","IBCF32",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCF32",4,0)
 ;
"RTN","IBCF32",5,0)
 ;This routine requires prior execution of ibcf3.
"RTN","IBCF32",6,0)
 ;
"RTN","IBCF32",7,0)
DX ;set diagnosis codes fl 67-71
"RTN","IBCF32",8,0)
 ;S IBX=$G(^DGCR(399,+IBIFN,"C"))
"RTN","IBCF32",9,0)
 ;S IBI=0 F IBJ=14:1:18 S IBFL(67+IBI)=$P($G(^ICD9(+$P(IBX,U,IBJ),0)),U,1),IBI=IBI+1
"RTN","IBCF32",10,0)
 N IBINDXX
"RTN","IBCF32",11,0)
 D SET^IBCSC4D(IBIFN,"",.IBINDXX)
"RTN","IBCF32",12,0)
 S IBX=0 F IBI=1:1:9 S IBX=$O(IBINDXX(IBX)) Q:'IBX  D
"RTN","IBCF32",13,0)
 . S IBFL(66+IBI)=$P($$ICD9^IBACSV(+IBINDXX(IBX)),U)
"RTN","IBCF32",14,0)
 ;
"RTN","IBCF32",15,0)
76 ;fl 76 admitting diagnoses (if a ICD dx not entered get old position of dx)
"RTN","IBCF32",16,0)
 S IBCBCOMM=$G(^DGCR(399,+IBIFN,"U1"))
"RTN","IBCF32",17,0)
 S IBX=$P(IBCU2,U) ; Admitting Diagnosis (fld #215) IBCU2=$G(^DGCR(399,+IBIFN,"U2"))
"RTN","IBCF32",18,0)
 I 'IBX S IBFL(76)=$P(IBCBCOMM,U,5) ; Form Locator 9 (Field #205)
"RTN","IBCF32",19,0)
 E  S IBFL(76)=$P($$ICD9^IBACSV(+IBX),U)
"RTN","IBCF32",20,0)
 ;
"RTN","IBCF32",21,0)
78 S IBX=$P(IBCUF31,U,2) D SPLIT^IBCF3(78,2,3,IBX) ; set IBFL(78)
"RTN","IBCF32",22,0)
 ;fl 79 procedure coding method used
"RTN","IBCF32",23,0)
 S IBFL(79)=$P(IBCBILL,U,9)
"RTN","IBCF32",24,0)
 ;
"RTN","IBCF32",25,0)
82 ;fl 82 attending physician id
"RTN","IBCF32",26,0)
 S IBFL(82)=$P(IBCBCOMM,U,13) I IBFL(82)="" S IBFL(82)="Dept. Veterans Affairs"
"RTN","IBCF32",27,0)
 ;fl 83 other physician id
"RTN","IBCF32",28,0)
 S IBFL(83)=$P(IBCBCOMM,U,14)
"RTN","IBCF32",29,0)
 ;
"RTN","IBCF32",30,0)
84 ;fl 84 remarks
"RTN","IBCF32",31,0)
 S IBFL(84,1)="Patient ID: "_$P(VADM(2),U,2)
"RTN","IBCF32",32,0)
 S IBX=$P($G(^DGCR(399.3,+$P(IBCBILL,U,7),0)),U,2),IBFL(84,2)="Bill Type: "_$S(IBX'="":IBX,1:"UNSPECIFIED")
"RTN","IBCF32",33,0)
 S IBFL(84,3)=$P(IBSIGN,U,4)
"RTN","IBCF32",34,0)
 S IBFL(84,4)=$P(IBCBCOMM,U,8)
"RTN","IBCF32",35,0)
 ;
"RTN","IBCF32",36,0)
85 ;fl 85 provider representative signature
"RTN","IBCF32",37,0)
 S IBFL(85,1)=$P(IBSIGN,U,1)
"RTN","IBCF32",38,0)
 S IBFL(85,2)=$P(IBSIGN,U,2)
"RTN","IBCF32",39,0)
86 ;date bill submitted
"RTN","IBCF32",40,0)
 S IBX=$P($G(^DGCR(399,+IBIFN,"S")),U,12),IBX=$S(+IBPNT:DT,+IBX:IBX,1:DT),IBFL(86)=$$DATE^IBCF3(IBX)
"RTN","IBCF32",41,0)
 Q
"RTN","IBCF32",42,0)
 ;
"RTN","IBCF32",43,0)
 ;ADD OCCURRENCE CODES AND SPANS TO PRINT ARRAY
"RTN","IBCF32",44,0)
32 ;the following rules apply to printing occurrence codes and spans (see FL 32 in UB-92 manual)
"RTN","IBCF32",45,0)
 ; - fields 32a-36a are used before 32b-36b
"RTN","IBCF32",46,0)
 ; - if all occ code fields are used (32a&b -35a&b) then occ span fields (36a&b) may be used, w/ thru date blank
"RTN","IBCF32",47,0)
 ; - if all occ span fields are used (36a&b) the occ code fields 34&35 may be used, w/ code&from date in 34 and code&thru date in 35
"RTN","IBCF32",48,0)
 ;
"RTN","IBCF32",49,0)
 K IB32,IB36 S IBPG=0 F IBI=32:1:36 K IBFL(IBI) S IBFL(IBI)="0^0"
"RTN","IBCF32",50,0)
 ;occurrence codes/span and dates 32-35 ,36
"RTN","IBCF32",51,0)
 ;load codes and spans into two flat arrays
"RTN","IBCF32",52,0)
 S (IBI,IBJ,IBX)=0
"RTN","IBCF32",53,0)
 F  S IBX=$O(^DGCR(399,+IBIFN,"OC",IBX)) Q:'IBX  S IBY=$G(^(IBX,0)),IBZ=$G(^DGCR(399.1,+IBY,0)) I +$P(IBZ,U,4) D
"RTN","IBCF32",54,0)
 . I +$P(IBZ,U,10) S IBJ=IBJ+1,IB36(IBJ)=$P(IBZ,U,2)_U_$$DATE^IBCF3($P(IBY,U,2))_U_$$DATE^IBCF3($P(IBY,U,4)) Q
"RTN","IBCF32",55,0)
 . S IBI=IBI+1,IB32(IBI)=$P(IBZ,U,2)_U_$$DATE^IBCF3($P(IBY,U,2))
"RTN","IBCF32",56,0)
 S IB32=IBI_U_0
"RTN","IBCF32",57,0)
 S IB36=IBJ_U_0
"RTN","IBCF32",58,0)
 ;
"RTN","IBCF32",59,0)
OCC ;
"RTN","IBCF32",60,0)
 S IBPG=IBPG+1
"RTN","IBCF32",61,0)
 S IBI=+$G(IBFL(32))+1
"RTN","IBCF32",62,0)
 I +IB32 F IBI=IBI,IBI+1 S IBX=+$P(IB32,U,2) F IBJ=32,33,34,35 S IBX=$O(IB32(IBX)) Q:'IBX  D
"RTN","IBCF32",63,0)
 . S IBFL(IBJ,IBI)=IB32(IBX)
"RTN","IBCF32",64,0)
 . S $P(IBFL(IBJ),U,1)=+IBFL(IBJ)+1
"RTN","IBCF32",65,0)
 . S $P(IB32,U,1)=+IB32-1
"RTN","IBCF32",66,0)
 . S $P(IB32,U,2)=IBX
"RTN","IBCF32",67,0)
 ;
"RTN","IBCF32",68,0)
 S IBX=+$P(IB36,U,2),IBI=+$G(IBFL(36))+1
"RTN","IBCF32",69,0)
 I +IB36 F IBI=IBI,IBI+1 S IBX=$O(IB36(IBX)) Q:'IBX  D
"RTN","IBCF32",70,0)
 . S IBFL(36,IBI)=IB36(IBX)
"RTN","IBCF32",71,0)
 . S $P(IBFL(36),U,1)=+IBFL(36)+1
"RTN","IBCF32",72,0)
 . S $P(IB36,U,1)=+IB36-1
"RTN","IBCF32",73,0)
 . S $P(IB36,U,2)=IBX
"RTN","IBCF32",74,0)
 ;
"RTN","IBCF32",75,0)
 I 'IB32,'IB36 G END
"RTN","IBCF32",76,0)
 ;
"RTN","IBCF32",77,0)
 ; add occ codes from 32 to occ span in 36
"RTN","IBCF32",78,0)
 S IBI=+IBFL(36)+1 F IBI=IBI,IBI+1 I +IB32>0,'IB36,IBI'>(IBPG*2) D
"RTN","IBCF32",79,0)
 . S IBX=+$P(IB32,U,2),IBX=$O(IB32(IBX)) Q:'IBX
"RTN","IBCF32",80,0)
 . S IBY=IB32(IBX)
"RTN","IBCF32",81,0)
 . S $P(IB32,U,1)=+IB32-1
"RTN","IBCF32",82,0)
 . S $P(IB32,U,2)=IBX
"RTN","IBCF32",83,0)
 . S IBX=+IBFL(36)+1
"RTN","IBCF32",84,0)
 . S IBFL(36,IBX)=IBY
"RTN","IBCF32",85,0)
 . S $P(IBFL(36),U,1)=+IBFL(36)+1
"RTN","IBCF32",86,0)
 ;
"RTN","IBCF32",87,0)
 ; add occ span from 36 to occ code in 32
"RTN","IBCF32",88,0)
 S IBI=+IBFL(34)+1 F IBI=IBI,IBI+1 I +IB36>0,'IB32,IBI'>(IBPG*2) D
"RTN","IBCF32",89,0)
 . S IBX=+$P(IB36,U,2),IBX=$O(IB36(IBX)) Q:'IBX
"RTN","IBCF32",90,0)
 . S IBY=IB36(IBX)
"RTN","IBCF32",91,0)
 . S $P(IB36,U,1)=+IB36-1
"RTN","IBCF32",92,0)
 . S $P(IB36,U,2)=IBX
"RTN","IBCF32",93,0)
 . S IBX=+IBFL(34)+1
"RTN","IBCF32",94,0)
 . S IBFL(34,IBX)=$P(IBY,U,1)_U_$P(IBY,U,2),$P(IBFL(34),U,1)=+IBFL(34)+1
"RTN","IBCF32",95,0)
 . S IBFL(35,IBX)=$P(IBY,U,1)_U_$P(IBY,U,3),$P(IBFL(35),U,1)=IBX
"RTN","IBCF32",96,0)
 G OCC
"RTN","IBCF32",97,0)
END ;
"RTN","IBCF32",98,0)
 K IB32,IB36
"RTN","IBCF32",99,0)
 Q
"RTN","IBCF331")
0^50^B6452948
"RTN","IBCF331",1,0)
IBCF331 ;ALB/ARH - UB92 HCFA-1450 (GATHER CODES CONT) ;25-AUG-1993
"RTN","IBCF331",2,0)
 ;;2.0;INTEGRATED BILLING;**52,210**; 21-MAR-94
"RTN","IBCF331",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCF331",4,0)
 ;
"RTN","IBCF331",5,0)
 ;
"RTN","IBCF331",6,0)
DX ;additional dx codes (ie more than 9 on bill)
"RTN","IBCF331",7,0)
 D SET^IBCSC4D(IBIFN,"",.IBARRAY) G:$P(IBARRAY,U,2)'>9 RX
"RTN","IBCF331",8,0)
 S IBX=+$P(IBARRAY,U,2)-9+2 D SPACE
"RTN","IBCF331",9,0)
 S IBZ="" D SET2
"RTN","IBCF331",10,0)
 S IBZ="ADDITIONAL DIAGNOSIS CODES:" D SET2
"RTN","IBCF331",11,0)
 S IBX=0 F IBI=1:1 S IBX=$O(IBARRAY(IBX)) Q:IBX=""  I IBI>9 D
"RTN","IBCF331",12,0)
 . S IBY=$$ICD9^IBACSV(+$G(IBARRAY(IBX)),$$BDATE^IBACSV(+IBIFN)) Q:IBY=""
"RTN","IBCF331",13,0)
 . S IBZ=$P(IBY,U)_$J(" ",(10-$L($P(IBY,U))))_$P(IBY,U,3) D SET2
"RTN","IBCF331",14,0)
 ;
"RTN","IBCF331",15,0)
RX ;add rx refills
"RTN","IBCF331",16,0)
 D SET^IBCSC5A(IBIFN,.IBARRAY) G:'$P(IBARRAY,U,2) PD
"RTN","IBCF331",17,0)
 S IBX=+$P(IBARRAY,U,2)+2 D SPACE
"RTN","IBCF331",18,0)
 S IBZ="" D SET2
"RTN","IBCF331",19,0)
 S IBZ="PRESCRIPTION REFILLS:" D SET2
"RTN","IBCF331",20,0)
 S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  S IBLN=IBARRAY(IBX,IBY) D
"RTN","IBCF331",21,0)
 . S IBZ=IBX_$J(" ",(11-$L(IBX)))_" "_$J($S($P(IBLN,U,6):"$"_$FN($P(IBLN,U,6),",",2),1:""),10)_"  "_$J($$FMTE^XLFDT(IBY,2),8)_"  "_$P($G(^PSDRUG(+$P(IBLN,U,2),0)),U,1) D SET2
"RTN","IBCF331",22,0)
 . S IBZ="",IBZ=$S(+$P(IBLN,U,4):"QTY: "_$P(IBLN,U,4)_" ",1:"")_$S(+$P(IBLN,U,3):"for "_$P(IBLN,U,3)_" days supply ",1:"") I IBZ'="" S IBZ=$J(" ",35)_IBZ D SET2
"RTN","IBCF331",23,0)
 . S IBZ="",IBZ=$S($P(IBLN,U,5)'="":"NDC #: "_$P(IBLN,U,5),1:"") I IBZ'="" S IBZ=$J(" ",35)_IBZ D SET2
"RTN","IBCF331",24,0)
 ;
"RTN","IBCF331",25,0)
PD ;add prosthetic items
"RTN","IBCF331",26,0)
 D SET^IBCSC5B(IBIFN,.IBARRAY) G:'$P(IBARRAY,U,2) END
"RTN","IBCF331",27,0)
 S IBX=+$P(IBARRAY,U,2)+2 D SPACE
"RTN","IBCF331",28,0)
 S IBZ="" D SET2
"RTN","IBCF331",29,0)
 S IBZ="PROSTHETIC ITEMS:" D SET2
"RTN","IBCF331",30,0)
 S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  D
"RTN","IBCF331",31,0)
 . S IBZ=$$FMTE^XLFDT(IBX,2)_" "_$J($S($P(IBARRAY(IBX,IBY),U,2):"$"_$FN($P(IBARRAY(IBX,IBY),U,2),",",2),1:""),10)_"  "_$E($P($$PIN^IBCSC5B(IBY),U,2),1,54) D SET2
"RTN","IBCF331",32,0)
 ;
"RTN","IBCF331",33,0)
END Q
"RTN","IBCF331",34,0)
 ;
"RTN","IBCF331",35,0)
SET2 D SET2^IBCF33 Q
"RTN","IBCF331",36,0)
SPACE D SPACE^IBCF33 Q
"RTN","IBCIUT1")
0^14^B51920309
"RTN","IBCIUT1",1,0)
IBCIUT1 ;DSI/SLM - MISC UTILITIES FOR CLAIMSMANAGER INTERFACE ;21-DEC-2000
"RTN","IBCIUT1",2,0)
 ;;2.0;INTEGRATED BILLING;**161,210**;21-MAR-94
"RTN","IBCIUT1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCIUT1",4,0)
 Q
"RTN","IBCIUT1",5,0)
 ;
"RTN","IBCIUT1",6,0)
NOW ;get current (or specific) date/time and convert to ClaimsManager format
"RTN","IBCIUT1",7,0)
 ;
"RTN","IBCIUT1",8,0)
 ;Input variable
"RTN","IBCIUT1",9,0)
 ;  x = date or date/time (for date/time other than now)
"RTN","IBCIUT1",10,0)
 ;Output variable
"RTN","IBCIUT1",11,0)
 ;  y = date or date/time in claimsmanager format
"RTN","IBCIUT1",12,0)
 ;  (yyyymmdd) or (yyyymmddhhmmss)
"RTN","IBCIUT1",13,0)
 ;
"RTN","IBCIUT1",14,0)
 NEW YEAR,MON,DAY,HOUR,MIN,SEC
"RTN","IBCIUT1",15,0)
 I '$G(X) S X=$$NOW^XLFDT
"RTN","IBCIUT1",16,0)
 S YEAR=$E(X,1,3)+1700,MON=$E(X,4,5),DAY=$E(X,6,7)
"RTN","IBCIUT1",17,0)
 I MON="00" S MON="01"
"RTN","IBCIUT1",18,0)
 I DAY="00" S DAY="01"
"RTN","IBCIUT1",19,0)
 I +$P(X,".",2) D
"RTN","IBCIUT1",20,0)
 .S HOUR=$E($P(X,".",2),1,2),MIN=$E($P(X,".",2),3,4),SEC=$E($P(X,".",2),5,6)
"RTN","IBCIUT1",21,0)
 .S Y=YEAR_MON_DAY_HOUR_MIN_SEC
"RTN","IBCIUT1",22,0)
 E  S Y=YEAR_MON_DAY
"RTN","IBCIUT1",23,0)
 Q
"RTN","IBCIUT1",24,0)
NOW1(X) ;change date from mmddyyyy to yyyymmdd
"RTN","IBCIUT1",25,0)
 N DATE,MM,DD,YY
"RTN","IBCIUT1",26,0)
 S MM=$E(X,1,2),DD=$E(X,3,4),YY=$E(X,5,8)
"RTN","IBCIUT1",27,0)
 S DATE=YY_MM_DD
"RTN","IBCIUT1",28,0)
 Q DATE
"RTN","IBCIUT1",29,0)
NAMSP ;split name into three pieces LAST^FIRST^MIDDLE
"RTN","IBCIUT1",30,0)
 ;Input variable
"RTN","IBCIUT1",31,0)
 ;  x = LAST,FIRST MIDDLE
"RTN","IBCIUT1",32,0)
 ;Output variable
"RTN","IBCIUT1",33,0)
 ;  y = LAST^FIRST^MIDDLE
"RTN","IBCIUT1",34,0)
 ;
"RTN","IBCIUT1",35,0)
 N NAME S Y=""
"RTN","IBCIUT1",36,0)
 S NAME(1)=$P(X,","),NAME(2)=$P(X,",",2,999)
"RTN","IBCIUT1",37,0)
 S NAME(3)=$P(NAME(2)," ",2,999)
"RTN","IBCIUT1",38,0)
 S NAME(2)=$P(NAME(2)," ",1)
"RTN","IBCIUT1",39,0)
 S Y=NAME(1)_"^"_NAME(2)_"^"_NAME(3)
"RTN","IBCIUT1",40,0)
 Q
"RTN","IBCIUT1",41,0)
 ;
"RTN","IBCIUT1",42,0)
CM(IBIFN) ;
"RTN","IBCIUT1",43,0)
 ; ClaimsManager environment check for IB routines.  Checks to make
"RTN","IBCIUT1",44,0)
 ; sure CM is running and that the bill is a HCFA 1500 form type bill.
"RTN","IBCIUT1",45,0)
 ; Any other condition will return false.
"RTN","IBCIUT1",46,0)
 ;
"RTN","IBCIUT1",47,0)
 N Y
"RTN","IBCIUT1",48,0)
 S Y=0
"RTN","IBCIUT1",49,0)
 I $G(IBIFN),$$CK0(),'$$CK1(IBIFN) S Y=1
"RTN","IBCIUT1",50,0)
 Q Y
"RTN","IBCIUT1",51,0)
 ;
"RTN","IBCIUT1",52,0)
CK0() ;checks to see if running ClaimsManager
"RTN","IBCIUT1",53,0)
 ;returns a 1 if running ClaimsManager
"RTN","IBCIUT1",54,0)
 N Y
"RTN","IBCIUT1",55,0)
 S Y=$S($P($G(^IBE(350.9,1,50)),U)=1:1,1:0)
"RTN","IBCIUT1",56,0)
 Q Y
"RTN","IBCIUT1",57,0)
 ;
"RTN","IBCIUT1",58,0)
CK1(IBIFN) ;checks to see if it's a HCFA 1500 claim form
"RTN","IBCIUT1",59,0)
 ;returns 0 if HCFA 1500, returns 1 if any other form type
"RTN","IBCIUT1",60,0)
 ;
"RTN","IBCIUT1",61,0)
 N IBX,IBY
"RTN","IBCIUT1",62,0)
 S IBY=$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBCIUT1",63,0)
 S IBX=$S(IBY=2:0,1:1)
"RTN","IBCIUT1",64,0)
 Q IBX
"RTN","IBCIUT1",65,0)
 ;
"RTN","IBCIUT1",66,0)
CK2() ;checks to see if ClaimsManager is working ok
"RTN","IBCIUT1",67,0)
 ;returns a 1 if running ok
"RTN","IBCIUT1",68,0)
 ;
"RTN","IBCIUT1",69,0)
 N Y
"RTN","IBCIUT1",70,0)
 S Y=$S($P($G(^IBE(350.9,1,50)),U,2)=1:1,1:0)
"RTN","IBCIUT1",71,0)
 Q Y
"RTN","IBCIUT1",72,0)
 ;
"RTN","IBCIUT1",73,0)
ST(IBCIST) ;set status field to ibcist
"RTN","IBCIUT1",74,0)
 ;
"RTN","IBCIUT1",75,0)
 ;input variables
"RTN","IBCIUT1",76,0)
 ;  ibifn
"RTN","IBCIUT1",77,0)
 ;  ibcist
"RTN","IBCIUT1",78,0)
 I '$D(IBIFN) Q
"RTN","IBCIUT1",79,0)
 I '$D(IBCIST) Q
"RTN","IBCIUT1",80,0)
 S IENS=IBIFN_",",FDA(351.9,IENS,.02)=IBCIST
"RTN","IBCIUT1",81,0)
 D FILE^DIE("K","FDA")
"RTN","IBCIUT1",82,0)
 K FDA,IENS
"RTN","IBCIUT1",83,0)
 Q
"RTN","IBCIUT1",84,0)
 ;
"RTN","IBCIUT1",85,0)
STAT(IBIFN) ;return value of status field in 351.9
"RTN","IBCIUT1",86,0)
 N IBCIST1
"RTN","IBCIUT1",87,0)
 S IBCIST1=$P(^IBA(351.9,IBIFN,0),U,2)
"RTN","IBCIUT1",88,0)
 Q IBCIST1
"RTN","IBCIUT1",89,0)
 ;
"RTN","IBCIUT1",90,0)
 ;
"RTN","IBCIUT1",91,0)
LITMS(IBIFN) ; Returns the number of line items
"RTN","IBCIUT1",92,0)
 NEW IBXARRAY,IBXARRY,IBXDATA,IBXERR
"RTN","IBCIUT1",93,0)
 KILL ^TMP("IBXSAVE",$J)
"RTN","IBCIUT1",94,0)
 D F^IBCEF("N-HCFA 1500 SERVICES (PRINT)",,,IBIFN)
"RTN","IBCIUT1",95,0)
 Q +$O(IBXDATA(""),-1)
"RTN","IBCIUT1",96,0)
 ;
"RTN","IBCIUT1",97,0)
 ;
"RTN","IBCIUT1",98,0)
LSTA(IBCISNT) ; return the correct Ingenix line status based on the value
"RTN","IBCIUT1",99,0)
 ;         of IBCISNT - where is the interface called from?
"RTN","IBCIUT1",100,0)
 Q $S(IBCISNT=5:"P",IBCISNT=4:"D",IBCISNT=7:"D",1:"A")
"RTN","IBCIUT1",101,0)
 ;
"RTN","IBCIUT1",102,0)
RPHY(IBIFN) ; Attending/rendering physician information
"RTN","IBCIUT1",103,0)
 ;
"RTN","IBCIUT1",104,0)
 ; This function returns the physician information for bill# IBIFN.
"RTN","IBCIUT1",105,0)
 ; Data is returned in a pieced string:
"RTN","IBCIUT1",106,0)
 ;
"RTN","IBCIUT1",107,0)
 ;   [1] Name
"RTN","IBCIUT1",108,0)
 ;        for non-VA, this may be a facility (if no comma in Name)
"RTN","IBCIUT1",109,0)
 ;   [2] ID#
"RTN","IBCIUT1",110,0)
 ;        File 200 ien# for VA; "NVA"_ien# for non-VA
"RTN","IBCIUT1",111,0)
 ;   [3] Department
"RTN","IBCIUT1",112,0)
 ;        Service/Section file ien# for VA; "NVA" for non-VA
"RTN","IBCIUT1",113,0)
 ;   [4] Specialty
"RTN","IBCIUT1",114,0)
 ;
"RTN","IBCIUT1",115,0)
 NEW IBXDATA,IBXARRAY,IBXARRY,IBXERR,Y,IBPRV
"RTN","IBCIUT1",116,0)
 S Y=""
"RTN","IBCIUT1",117,0)
 D F^IBCEF("N-ATT/REND PHYSICIAN NAME",,,IBIFN)
"RTN","IBCIUT1",118,0)
 S IBPRV=$P($G(IBXDATA),U,2)
"RTN","IBCIUT1",119,0)
 I 'IBPRV G RPHYX
"RTN","IBCIUT1",120,0)
 S $P(Y,U,1)=$P(IBXDATA,U,1)
"RTN","IBCIUT1",121,0)
 S $P(Y,U,4)=$$BILLSPEC^IBCEU3(IBIFN,IBPRV)
"RTN","IBCIUT1",122,0)
 ;
"RTN","IBCIUT1",123,0)
 ; Check for VA provider first and then get out
"RTN","IBCIUT1",124,0)
 I IBPRV'["IBA(355.93" D  G RPHYX
"RTN","IBCIUT1",125,0)
 . S $P(Y,U,2)=+IBPRV
"RTN","IBCIUT1",126,0)
 . S $P(Y,U,3)=$P($G(^VA(200,+IBPRV,5)),U,1)
"RTN","IBCIUT1",127,0)
 . Q
"RTN","IBCIUT1",128,0)
 ;
"RTN","IBCIUT1",129,0)
 ; Now we're dealing with a Non-VA provider
"RTN","IBCIUT1",130,0)
 S $P(Y,U,2)="NVA"_+IBPRV
"RTN","IBCIUT1",131,0)
 S $P(Y,U,3)="NVA"
"RTN","IBCIUT1",132,0)
RPHYX ;
"RTN","IBCIUT1",133,0)
 Q Y
"RTN","IBCIUT1",134,0)
 ;
"RTN","IBCIUT1",135,0)
CKNER() ;check for no errors
"RTN","IBCIUT1",136,0)
 ;returns 1 if no errors, 0 if errors were found
"RTN","IBCIUT1",137,0)
 N IBCIY,LSEG S LSEG=0,IBCIY=1
"RTN","IBCIUT1",138,0)
 F  S LSEG=$O(IBCIZ("RL",LSEG)) Q:'LSEG  D
"RTN","IBCIUT1",139,0)
 .I $P(IBCIZ("RL",LSEG,0),U,2)]"" S IBCIY=0
"RTN","IBCIUT1",140,0)
 Q IBCIY
"RTN","IBCIUT1",141,0)
CKLI(IBIFN) ;check for line items
"RTN","IBCIUT1",142,0)
 N LITEM
"RTN","IBCIUT1",143,0)
 I '$P($G(^IBA(351.9,IBIFN,3)),U,1) D UPDT^IBCIADD1     ; build if not there
"RTN","IBCIUT1",144,0)
 S LITEM=$S(+$P($G(^IBA(351.9,IBIFN,5,0)),U,4)>0:1,1:0)
"RTN","IBCIUT1",145,0)
 Q LITEM
"RTN","IBCIUT1",146,0)
 ;
"RTN","IBCIUT1",147,0)
 ;
"RTN","IBCIUT1",148,0)
CKFT(IBIFN) ; Check for a form type change by the user
"RTN","IBCIUT1",149,0)
 NEW D0,DA,DB,DC,DE,DH,DI,DIC,DIE,DIEL,DIFLD,DIG,DIH
"RTN","IBCIUT1",150,0)
 NEW DIK,DIPA,DIV,DK,DL,DM,DP,DQ,DR,X,Y
"RTN","IBCIUT1",151,0)
 NEW IBCISNT,IBCISTAT,IBCIREDT,IBCIERR
"RTN","IBCIUT1",152,0)
 I '$$CK0() Q        ; esg - 7/17/01 - bug fix
"RTN","IBCIUT1",153,0)
 ;
"RTN","IBCIUT1",154,0)
 ; If it's not there, but it is a hcfa 1500, then add it
"RTN","IBCIUT1",155,0)
 I '$D(^IBA(351.9,IBIFN)),'$$CK1(IBIFN) D ST1^IBCIST G CKFTX
"RTN","IBCIUT1",156,0)
 ;
"RTN","IBCIUT1",157,0)
 ; If it's there, but no longer a hcfa 1500, then delete it.
"RTN","IBCIUT1",158,0)
 ; esg - 1/3/2002 - If it has been sent to CM previously, then
"RTN","IBCIUT1",159,0)
 ;       we need to send it with new send type 7.
"RTN","IBCIUT1",160,0)
 I $D(^IBA(351.9,IBIFN)),$$CK1(IBIFN) D
"RTN","IBCIUT1",161,0)
 . I $P($G(^IBA(351.9,IBIFN,0)),U,15) S IBCISNT=7 D ST2^IBCIST
"RTN","IBCIUT1",162,0)
 . S DIK="^IBA(351.9,",DA=IBIFN D ^DIK
"RTN","IBCIUT1",163,0)
 . Q
"RTN","IBCIUT1",164,0)
CKFTX ;
"RTN","IBCIUT1",165,0)
 Q
"RTN","IBCIUT1",166,0)
 ;
"RTN","IBCIUT1",167,0)
 ;
"RTN","IBCIUT1",168,0)
DIAG(IBIFN) ;return array of diagnosis codes for each line item
"RTN","IBCIUT1",169,0)
 NEW IBXDATA,IBXARRAY,IBXARRY,IBXERR
"RTN","IBCIUT1",170,0)
 NEW IBZDC1,SUB1,LITM,CODES,DNUM,DC,ICDIEN,CT
"RTN","IBCIUT1",171,0)
 K ^TMP("IBXSAVE",$J,"DX")
"RTN","IBCIUT1",172,0)
 S SUB1=$S($G(IBCIMSG)=1:"IBCIMSG",1:"DISPLAY")
"RTN","IBCIUT1",173,0)
 K ^TMP(SUB1,$J,IBIFN,"ICD")
"RTN","IBCIUT1",174,0)
 D F^IBCEF("N-HCFA 1500 SERVICES (PRINT)",,,IBIFN)
"RTN","IBCIUT1",175,0)
 D F^IBCEF("N-DIAGNOSES","IBZDC1",,IBIFN)
"RTN","IBCIUT1",176,0)
 ;
"RTN","IBCIUT1",177,0)
 ; if IBCIMSG is on, need to count up the line items for the set below
"RTN","IBCIUT1",178,0)
 I $G(IBCIMSG) S (CT,LITM)=0 F  S LITM=$O(IBXDATA(LITM)) Q:'LITM  S CT=CT+1
"RTN","IBCIUT1",179,0)
 S LITM=0 F  S LITM=$O(IBXDATA(LITM)) Q:'LITM  D
"RTN","IBCIUT1",180,0)
 .S CODES=$P(IBXDATA(LITM),U,7)
"RTN","IBCIUT1",181,0)
 .S DNUM=0 F  S DNUM=DNUM+1 Q:$P(CODES,",",DNUM)=""  D
"RTN","IBCIUT1",182,0)
 ..S DC(DNUM)=$P(CODES,",",DNUM)
"RTN","IBCIUT1",183,0)
 ..S ICDIEN=$P(IBZDC1(DC(DNUM)),U,1)
"RTN","IBCIUT1",184,0)
 ..S ^TMP(SUB1,$J,IBIFN,"ICD",LITM,DNUM)=$P($$ICD9^IBACSV(ICDIEN),U)
"RTN","IBCIUT1",185,0)
 .I $G(IBCIMSG) S ^TMP(SUB1,$J,IBIFN,"ICD",LITM,0)=CT_U_(DNUM-1)
"RTN","IBCIUT1",186,0)
 K ^TMP("IBXSAVE",$J,"DX")
"RTN","IBCIUT1",187,0)
 Q
"RTN","IBCIUT1",188,0)
 ;
"RTN","IBCIUT1",189,0)
 ;
"RTN","IBCIUT1",190,0)
EDATP(IBIFN,COMMCHG) ;edit assigned to person (ATP)
"RTN","IBCIUT1",191,0)
 ;
"RTN","IBCIUT1",192,0)
 ; This procedure reads in the Assigned to person from the user and
"RTN","IBCIUT1",193,0)
 ; makes sure that some user gets assigned to the bill (IBIFN).  The
"RTN","IBCIUT1",194,0)
 ; parameter COMMCHG indicates whether or not the current user 
"RTN","IBCIUT1",195,0)
 ; modified the ClaimsManager comments in any way.
"RTN","IBCIUT1",196,0)
 ;
"RTN","IBCIUT1",197,0)
 ; This procedure also determines if a MailMan message should get
"RTN","IBCIUT1",198,0)
 ; sent to the new assigned to person and invokes the procedure if
"RTN","IBCIUT1",199,0)
 ; it should.
"RTN","IBCIUT1",200,0)
 ;
"RTN","IBCIUT1",201,0)
 NEW D,D0,DA,DIC,DIE,DR,I,IBCIATPO,IBCIATPN,IBCIDEF,X,Y
"RTN","IBCIUT1",202,0)
 NEW IBCIGRP,IBCIGRPN,GRPONLY,CONMSG
"RTN","IBCIUT1",203,0)
 S IBCIATPO=$P($G(^IBA(351.9,IBIFN,0)),U,12)   ; original ATP
"RTN","IBCIUT1",204,0)
 W !!!,?2,"Please enter the person to whom this bill should be assigned.",!
"RTN","IBCIUT1",205,0)
 S IBCIDEF=IBCIATPO            ; default the current ATP, but ...
"RTN","IBCIUT1",206,0)
 I 'IBCIDEF S IBCIDEF=DUZ      ; if not there, default the current user
"RTN","IBCIUT1",207,0)
 S DA=IBIFN,DIE="^IBA(351.9,"
"RTN","IBCIUT1",208,0)
 S DR=".12ASSIGNED TO PERSON//"_$P($G(^VA(200,IBCIDEF,0)),U,1)
"RTN","IBCIUT1",209,0)
 D ^DIE
"RTN","IBCIUT1",210,0)
 ;
"RTN","IBCIUT1",211,0)
 ; Make sure someone got assigned.  Stuff in the current user if
"RTN","IBCIUT1",212,0)
 ; nobody got assigned.  Set a variable indicating the new assigned
"RTN","IBCIUT1",213,0)
 ; to person.
"RTN","IBCIUT1",214,0)
 ;
"RTN","IBCIUT1",215,0)
 I '$P($G(^IBA(351.9,IBIFN,0)),U,12) D
"RTN","IBCIUT1",216,0)
 . S DIE="^IBA(351.9,",DA=IBIFN,DR=".12////"_DUZ D ^DIE
"RTN","IBCIUT1",217,0)
 . Q
"RTN","IBCIUT1",218,0)
 S IBCIATPN=$P($G(^IBA(351.9,IBIFN,0)),U,12)         ; new ATP
"RTN","IBCIUT1",219,0)
 ;
"RTN","IBCIUT1",220,0)
 ; Display a confirmation message to the user
"RTN","IBCIUT1",221,0)
 W !!!?2,"Claim ",$P($G(^DGCR(399,IBIFN,0)),U,1)," has been assigned to "
"RTN","IBCIUT1",222,0)
 W $P($G(^VA(200,IBCIATPN,0)),U,1),"."
"RTN","IBCIUT1",223,0)
 ;
"RTN","IBCIUT1",224,0)
 ; Ask the user if they want to send the MailMan message to a specific
"RTN","IBCIUT1",225,0)
 ; mail group in addition to the new assigned to person.
"RTN","IBCIUT1",226,0)
 ; ESG - 9/4/01
"RTN","IBCIUT1",227,0)
 ;
"RTN","IBCIUT1",228,0)
 W !!!?2,"If you want to send a MailMan message about this bill assignment"
"RTN","IBCIUT1",229,0)
 W !?2,"to a specific Mail Group, then please choose that Mail Group here.",!
"RTN","IBCIUT1",230,0)
 S DIC="^XMB(3.8,",DIC(0)="ABEQV",DIC("A")="MAIL GROUP: "
"RTN","IBCIUT1",231,0)
 D ^DIC
"RTN","IBCIUT1",232,0)
 S (IBCIGRP,IBCIGRPN)=""
"RTN","IBCIUT1",233,0)
 I Y>0 S IBCIGRP=+Y,IBCIGRPN=$P(Y,U,2)    ; group ien and name
"RTN","IBCIUT1",234,0)
 ;
"RTN","IBCIUT1",235,0)
 ; Now determine if a MailMan message should get sent out and send it.
"RTN","IBCIUT1",236,0)
 ; Don't send a MailMan message to yourself and don't send a message
"RTN","IBCIUT1",237,0)
 ; if the assignment has not changed.  However, if the user chose a 
"RTN","IBCIUT1",238,0)
 ; mail group at the above prompt, then always send a MailMan message
"RTN","IBCIUT1",239,0)
 ; to that mail group.
"RTN","IBCIUT1",240,0)
 ;
"RTN","IBCIUT1",241,0)
 ; The GRPONLY variable is true if the assigned to person is the 
"RTN","IBCIUT1",242,0)
 ; current user OR if the assigned to person is the same as the original
"RTN","IBCIUT1",243,0)
 ; assigned to person.
"RTN","IBCIUT1",244,0)
 ;
"RTN","IBCIUT1",245,0)
 S GRPONLY=(IBCIATPN=DUZ)!(IBCIATPN=IBCIATPO)
"RTN","IBCIUT1",246,0)
 I 'IBCIGRP,GRPONLY G EDATPX          ; No mailman in this case at all
"RTN","IBCIUT1",247,0)
 ;
"RTN","IBCIUT1",248,0)
 ; Call the procedure that creates the message
"RTN","IBCIUT1",249,0)
 D CAT^IBCIUT6(IBIFN,DUZ,IBCIATPN,IBCIGRP,GRPONLY)
"RTN","IBCIUT1",250,0)
 ;
"RTN","IBCIUT1",251,0)
 ; The CONMSG array is the confirmation message array so the user
"RTN","IBCIUT1",252,0)
 ; knows to whom a message was sent.
"RTN","IBCIUT1",253,0)
 I 'GRPONLY S CONMSG(1)=$P($G(^VA(200,IBCIATPN,0)),U,1)
"RTN","IBCIUT1",254,0)
 I IBCIGRP S CONMSG(2)=IBCIGRPN
"RTN","IBCIUT1",255,0)
 ;
"RTN","IBCIUT1",256,0)
 ; Build and display the confirmation message
"RTN","IBCIUT1",257,0)
 W !!?2,"A MailMan message has been sent to "
"RTN","IBCIUT1",258,0)
 S X=0
"RTN","IBCIUT1",259,0)
 F  S X=$O(CONMSG(X)) Q:'X  W CONMSG(X) I $O(CONMSG(X)) W !?30,"and to "
"RTN","IBCIUT1",260,0)
 W "."
"RTN","IBCIUT1",261,0)
 ;
"RTN","IBCIUT1",262,0)
EDATPX ;
"RTN","IBCIUT1",263,0)
 ; Display a press return to continue message if coming in from
"RTN","IBCIUT1",264,0)
 ; the Listman screens
"RTN","IBCIUT1",265,0)
 I $D(VALMHDR) W !! S DIR("A")="Press RETURN to continue",DIR(0)="E",DIR("T")=10 D ^DIR K DIR
"RTN","IBCIUT1",266,0)
 Q
"RTN","IBCIUT5")
0^55^B37441677
"RTN","IBCIUT5",1,0)
IBCIUT5 ;DSI/ESG - UTILITIES FOR CLAIMSMANAGER INTERFACE ;9-MAR-2001
"RTN","IBCIUT5",2,0)
 ;;2.0;INTEGRATED BILLING;**161,210**;21-MAR-94
"RTN","IBCIUT5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCIUT5",4,0)
 ;
"RTN","IBCIUT5",5,0)
 ; Can't call from the top
"RTN","IBCIUT5",6,0)
 Q
"RTN","IBCIUT5",7,0)
 ;
"RTN","IBCIUT5",8,0)
OPENUSE() ;
"RTN","IBCIUT5",9,0)
 ; Function to open and use an available tcp/ip port on the
"RTN","IBCIUT5",10,0)
 ; ClaimsManager server.  This function returns 1 if a port was 
"RTN","IBCIUT5",11,0)
 ; successfully locked, opened, and is being used.  Otherwise, this
"RTN","IBCIUT5",12,0)
 ; function returns 0.  No variables need to be set up before the
"RTN","IBCIUT5",13,0)
 ; call.  Variable IBCISOCK is returned if a port has been opened.
"RTN","IBCIUT5",14,0)
 ; IBCISOCK will not be returned if this utility fails.  IBCISOCK 
"RTN","IBCIUT5",15,0)
 ; is the port number that is being used.
"RTN","IBCIUT5",16,0)
 ;
"RTN","IBCIUT5",17,0)
 ; IO* variables are also returned from the Kernel utility.
"RTN","IBCIUT5",18,0)
 ;
"RTN","IBCIUT5",19,0)
 NEW IBCIIP,POP,PORTLOOK,PORTS,Y
"RTN","IBCIUT5",20,0)
 ;
"RTN","IBCIUT5",21,0)
 ; Get the IP address of the ClaimsManager server.
"RTN","IBCIUT5",22,0)
 ; IP address stored in variable IBCIIP.
"RTN","IBCIUT5",23,0)
 ; IB SITE PARAMETERS file (#350.9), field# 50.05
"RTN","IBCIUT5",24,0)
 ; 
"RTN","IBCIUT5",25,0)
 S IBCIIP=$P($G(^IBE(350.9,1,50)),U,5) I IBCIIP="" S Y=0 G OUXIT
"RTN","IBCIUT5",26,0)
 ;
"RTN","IBCIUT5",27,0)
 ; Build an array of valid and available tcp/ip port numbers
"RTN","IBCIUT5",28,0)
 ; Array name:  PORTS
"RTN","IBCIUT5",29,0)
 ;
"RTN","IBCIUT5",30,0)
 M PORTS=^IBE(350.9,1,50.06,"B") I '$D(PORTS) S Y=0 G OUXIT
"RTN","IBCIUT5",31,0)
 ;
"RTN","IBCIUT5",32,0)
 S PORTLOOK=0,POP=1   ; POP=1 ==> failure | POP=0 ==> success!
"RTN","IBCIUT5",33,0)
AGAIN ;
"RTN","IBCIUT5",34,0)
 S IBCISOCK=""
"RTN","IBCIUT5",35,0)
 F  S IBCISOCK=$O(PORTS(IBCISOCK)) Q:IBCISOCK=""  D  Q:'POP
"RTN","IBCIUT5",36,0)
 . L +^IBCITCP(IBCISOCK):0 E  S POP=1 Q
"RTN","IBCIUT5",37,0)
 . D CALL^%ZISTCP(IBCIIP,IBCISOCK,1) I POP L -^IBCITCP(IBCISOCK) Q
"RTN","IBCIUT5",38,0)
 . Q
"RTN","IBCIUT5",39,0)
 I 'POP S Y=1 G OUXIT
"RTN","IBCIUT5",40,0)
 S PORTLOOK=PORTLOOK+1 I PORTLOOK<6 HANG .5 G AGAIN
"RTN","IBCIUT5",41,0)
 S Y=0 KILL IBCISOCK
"RTN","IBCIUT5",42,0)
OUXIT ;
"RTN","IBCIUT5",43,0)
 Q Y
"RTN","IBCIUT5",44,0)
 ;
"RTN","IBCIUT5",45,0)
 ;
"RTN","IBCIUT5",46,0)
CODER(IBIFN) ; Returns the inpatient/outpatient coder of this bill
"RTN","IBCIUT5",47,0)
 ;
"RTN","IBCIUT5",48,0)
 ;   Input into this function
"RTN","IBCIUT5",49,0)
 ;         IBIFN - ien of the bill/claims file (#399)
"RTN","IBCIUT5",50,0)
 ;
"RTN","IBCIUT5",51,0)
 ;   Output from this function
"RTN","IBCIUT5",52,0)
 ;         A string with the following 3 pieces:
"RTN","IBCIUT5",53,0)
 ;             [1] "O" or "I"  (outpatient/inpatient indicator)
"RTN","IBCIUT5",54,0)
 ;             [2] coder's ien in the new person file (#200)
"RTN","IBCIUT5",55,0)
 ;             [3] coder's name
"RTN","IBCIUT5",56,0)
 ;
"RTN","IBCIUT5",57,0)
 NEW Y,IBD0,OIFLG,PTF,PTF0,CDIEN,CDNM,D1
"RTN","IBCIUT5",58,0)
 NEW DFN,IBDU,BEGDATE,ENDDATE,ENCDT,LSTEDT,IEN,SCE
"RTN","IBCIUT5",59,0)
 ;
"RTN","IBCIUT5",60,0)
 S Y="",IBIFN=+$G(IBIFN)
"RTN","IBCIUT5",61,0)
 S IBD0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCIUT5",62,0)
 I IBD0="" G CODERX
"RTN","IBCIUT5",63,0)
 S OIFLG="O"                                 ; default outpatient
"RTN","IBCIUT5",64,0)
 I $$INPAT^IBCEF(IBIFN) S OIFLG="I"          ; check for inpatient
"RTN","IBCIUT5",65,0)
 S $P(Y,U,1)=OIFLG                           ; at least return the flag
"RTN","IBCIUT5",66,0)
 ;
"RTN","IBCIUT5",67,0)
 ; *** Inpatient Bill Processing ***
"RTN","IBCIUT5",68,0)
 ;     Use the PTF file (#45)
"RTN","IBCIUT5",69,0)
 ;
"RTN","IBCIUT5",70,0)
 I OIFLG="I" D  G CODERX
"RTN","IBCIUT5",71,0)
 . S PTF=+$P(IBD0,U,8)                       ; PTF entry number
"RTN","IBCIUT5",72,0)
 . S PTF0=$G(^DGPT(PTF,0)) Q:PTF0=""         ; check for valid pointer
"RTN","IBCIUT5",73,0)
 . S CDIEN=+$P(PTF0,U,7)                     ; closed out by field
"RTN","IBCIUT5",74,0)
 . S CDNM=$P($G(^VA(200,CDIEN,0)),U,1)       ; try to get the name
"RTN","IBCIUT5",75,0)
 . I CDNM="" D
"RTN","IBCIUT5",76,0)
 .. S D1=$O(^DGPT(PTF,1,99999999),-1) Q:'D1
"RTN","IBCIUT5",77,0)
 .. S CDIEN=+$P($G(^DGPT(PTF,1,D1,0)),U,1)   ; coding clerk field
"RTN","IBCIUT5",78,0)
 .. S CDNM=$P($G(^VA(200,CDIEN,0)),U,1)      ; try to get the name
"RTN","IBCIUT5",79,0)
 .. Q
"RTN","IBCIUT5",80,0)
 . S $P(Y,U,2,3)=CDIEN_U_CDNM                ; save the data
"RTN","IBCIUT5",81,0)
 . Q
"RTN","IBCIUT5",82,0)
 ;
"RTN","IBCIUT5",83,0)
 ; *** Outpatient Bill Processing ***
"RTN","IBCIUT5",84,0)
 ;     Use the Outpatient Encounter file (#409.68)
"RTN","IBCIUT5",85,0)
 ;
"RTN","IBCIUT5",86,0)
 S DFN=$P(IBD0,U,2)                          ; patient ien
"RTN","IBCIUT5",87,0)
 S IBDU=$G(^DGCR(399,IBIFN,"U"))             ; "U" node
"RTN","IBCIUT5",88,0)
 S BEGDATE=$P(IBDU,U,1)                      ; statement covers from
"RTN","IBCIUT5",89,0)
 S ENDDATE=$P(IBDU,U,2)                      ; statement covers to
"RTN","IBCIUT5",90,0)
 ;
"RTN","IBCIUT5",91,0)
 ; If there's a problem with either of these dates, use the event date
"RTN","IBCIUT5",92,0)
 I 'BEGDATE!'ENDDATE S (BEGDATE,ENDDATE)=$P(IBD0,U,3)
"RTN","IBCIUT5",93,0)
 KILL ^TMP($J,"IBCICODER")                   ; kill scratch global
"RTN","IBCIUT5",94,0)
 S ENCDT=$O(^SCE("ADFN",DFN,BEGDATE),-1)     ; get the starting date
"RTN","IBCIUT5",95,0)
 F  S ENCDT=$O(^SCE("ADFN",DFN,ENCDT)) Q:'ENCDT!($P(ENCDT,".",1)>ENDDATE)  D
"RTN","IBCIUT5",96,0)
 . S IEN=0
"RTN","IBCIUT5",97,0)
 . F  S IEN=$O(^SCE("ADFN",DFN,ENCDT,IEN)) Q:'IEN  D
"RTN","IBCIUT5",98,0)
 .. S SCE=$G(^SCE(IEN,"USER"))
"RTN","IBCIUT5",99,0)
 .. I '$P(SCE,U,1) Q                         ; edited last by
"RTN","IBCIUT5",100,0)
 .. I '$P(SCE,U,2) Q                         ; date/time last edited
"RTN","IBCIUT5",101,0)
 .. S ^TMP($J,"IBCICODER",$P(SCE,U,2),IEN)=$P(SCE,U,1)
"RTN","IBCIUT5",102,0)
 .. Q
"RTN","IBCIUT5",103,0)
 . Q
"RTN","IBCIUT5",104,0)
 ;
"RTN","IBCIUT5",105,0)
 I '$D(^TMP($J,"IBCICODER")) G CODERX          ; get out if no hits
"RTN","IBCIUT5",106,0)
 S LSTEDT=$O(^TMP($J,"IBCICODER",""),-1)       ; most recent date
"RTN","IBCIUT5",107,0)
 S IEN=$O(^TMP($J,"IBCICODER",LSTEDT,""),-1)   ; most recent ien
"RTN","IBCIUT5",108,0)
 S CDIEN=^TMP($J,"IBCICODER",LSTEDT,IEN)       ; edited last by field
"RTN","IBCIUT5",109,0)
 S CDNM=$P($G(^VA(200,CDIEN,0)),U,1)           ; try to get the name
"RTN","IBCIUT5",110,0)
 KILL ^TMP($J,"IBCICODER")                     ; clean up scratch global
"RTN","IBCIUT5",111,0)
 S $P(Y,U,2,3)=CDIEN_U_CDNM                    ; save the data
"RTN","IBCIUT5",112,0)
CODERX ;
"RTN","IBCIUT5",113,0)
 Q Y
"RTN","IBCIUT5",114,0)
 ;
"RTN","IBCIUT5",115,0)
 ;
"RTN","IBCIUT5",116,0)
BILLER(IBIFN) ; Returns the entered/edited by person for this bill
"RTN","IBCIUT5",117,0)
 ;
"RTN","IBCIUT5",118,0)
 ;   Input into this function
"RTN","IBCIUT5",119,0)
 ;         IBIFN - ien of the bill/claims file (#399)
"RTN","IBCIUT5",120,0)
 ;
"RTN","IBCIUT5",121,0)
 ;   Output from this function
"RTN","IBCIUT5",122,0)
 ;         A string with the following 2 pieces:
"RTN","IBCIUT5",123,0)
 ;             [1] biller's ien in the new person file (#200)
"RTN","IBCIUT5",124,0)
 ;             [2] biller's name
"RTN","IBCIUT5",125,0)
 ;
"RTN","IBCIUT5",126,0)
 NEW Y
"RTN","IBCIUT5",127,0)
 S IBIFN=+$G(IBIFN)
"RTN","IBCIUT5",128,0)
 S Y=+$P($G(^DGCR(399,IBIFN,"S")),U,2)
"RTN","IBCIUT5",129,0)
 ;
"RTN","IBCIUT5",130,0)
 ; if the POSTMASTER is identified as the biller, then try in file 351.9
"RTN","IBCIUT5",131,0)
 I Y=.5 D
"RTN","IBCIUT5",132,0)
 . S Y=+$P($G(^IBA(351.9,IBIFN,0)),U,5)          ; last sent to CM by
"RTN","IBCIUT5",133,0)
 . I 'Y S Y=+$P($G(^IBA(351.9,IBIFN,0)),U,9)     ; last edited by
"RTN","IBCIUT5",134,0)
 . I 'Y S Y=.5                                   ; postmaster default
"RTN","IBCIUT5",135,0)
 . Q
"RTN","IBCIUT5",136,0)
 ;
"RTN","IBCIUT5",137,0)
 S $P(Y,U,2)=$P($G(^VA(200,Y,0)),U,1)
"RTN","IBCIUT5",138,0)
BILLERX ;
"RTN","IBCIUT5",139,0)
 Q Y
"RTN","IBCIUT5",140,0)
 ;
"RTN","IBCIUT5",141,0)
CMTINFO(IBIFN) ; Comment Information; Username, date/time stamp display
"RTN","IBCIUT5",142,0)
 ;
"RTN","IBCIUT5",143,0)
 ; Returns a line of text in the following format
"RTN","IBCIUT5",144,0)
 ;    "Comment entered by [username] on [date/time]"
"RTN","IBCIUT5",145,0)
 ;
"RTN","IBCIUT5",146,0)
 ; Returns "" if no comments or no pointers
"RTN","IBCIUT5",147,0)
 ;
"RTN","IBCIUT5",148,0)
 NEW Y,IB0,WHEN,USER
"RTN","IBCIUT5",149,0)
 S Y="",IBIFN=+$G(IBIFN)
"RTN","IBCIUT5",150,0)
 I '$D(^IBA(351.9,IBIFN,2)) G CMTINX
"RTN","IBCIUT5",151,0)
 S IB0=$G(^IBA(351.9,IBIFN,0))
"RTN","IBCIUT5",152,0)
 S WHEN=$$EXTERNAL^DILFD(351.9,.13,"",$P(IB0,U,13))
"RTN","IBCIUT5",153,0)
 S USER=$$EXTERNAL^DILFD(351.9,.14,"",$P(IB0,U,14))
"RTN","IBCIUT5",154,0)
 I WHEN="",USER="" G CMTINX
"RTN","IBCIUT5",155,0)
 S Y="Comments last edited by "_USER_" on "_WHEN
"RTN","IBCIUT5",156,0)
CMTINX ;
"RTN","IBCIUT5",157,0)
 Q Y
"RTN","IBCIUT5",158,0)
 ;
"RTN","IBCIUT5",159,0)
TD(IBIFN) ; Terminal digit
"RTN","IBCIUT5",160,0)
 ;
"RTN","IBCIUT5",161,0)
 ;   Input = IBIFN
"RTN","IBCIUT5",162,0)
 ;  Output = A pieced string
"RTN","IBCIUT5",163,0)
 ;           [1] terminal digit of SSN
"RTN","IBCIUT5",164,0)
 ;           [2] SSN
"RTN","IBCIUT5",165,0)
 ;
"RTN","IBCIUT5",166,0)
 NEW Y,DFN,SSN,TD
"RTN","IBCIUT5",167,0)
 S IBIFN=+$G(IBIFN)
"RTN","IBCIUT5",168,0)
 S DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCIUT5",169,0)
 S SSN=$P($G(^DPT(DFN,0)),U,9)
"RTN","IBCIUT5",170,0)
 S TD="999999999"
"RTN","IBCIUT5",171,0)
 I $L(SSN)'<9 S TD=$E(SSN,8,9)_$E(SSN,6,7)_$E(SSN,4,5)_$E(SSN,1,3)
"RTN","IBCIUT5",172,0)
 S Y=TD_U_SSN
"RTN","IBCIUT5",173,0)
TDX ;
"RTN","IBCIUT5",174,0)
 Q Y
"RTN","IBCIUT5",175,0)
 ;
"RTN","IBCIUT5",176,0)
GETMOD(Z) ; Build a comma delimited string of modifier codes
"RTN","IBCIUT5",177,0)
 ;
"RTN","IBCIUT5",178,0)
 ;   Input: a comma delimited string of modifier ien's
"RTN","IBCIUT5",179,0)
 ;  Output: a comma delimited string of external modifiers
"RTN","IBCIUT5",180,0)
 ;
"RTN","IBCIUT5",181,0)
 NEW IBMOD,I,IEN,MOD
"RTN","IBCIUT5",182,0)
 S IBMOD=""
"RTN","IBCIUT5",183,0)
 I Z="" G GETMODX
"RTN","IBCIUT5",184,0)
 F I=1:1:$L(Z,",") S IEN=$P(Z,",",I) D
"RTN","IBCIUT5",185,0)
 . I IEN="" Q
"RTN","IBCIUT5",186,0)
 . S MOD=$$MOD^ICPTMOD(IEN,"I")
"RTN","IBCIUT5",187,0)
 . I MOD<1 Q
"RTN","IBCIUT5",188,0)
 . I IBMOD="" S IBMOD=$P(MOD,U,2)
"RTN","IBCIUT5",189,0)
 . E  S IBMOD=IBMOD_","_$P(MOD,U,2)
"RTN","IBCIUT5",190,0)
 . Q
"RTN","IBCIUT5",191,0)
GETMODX ;
"RTN","IBCIUT5",192,0)
 Q IBMOD
"RTN","IBCIUT5",193,0)
 ;
"RTN","IBCIUT5",194,0)
DASN(IBIFN) ; Delete the assigned to person field in 351.9
"RTN","IBCIUT5",195,0)
 NEW DIE,DA,DR,%,D,D0,DI,DIC,DQ,X
"RTN","IBCIUT5",196,0)
 S DIE="^IBA(351.9,",DA=IBIFN,DR=".12///@"
"RTN","IBCIUT5",197,0)
 D ^DIE
"RTN","IBCIUT5",198,0)
DASNX ;
"RTN","IBCIUT5",199,0)
 Q
"RTN","IBCIUT5",200,0)
 ;
"RTN","IBCIUT5",201,0)
 ;
"RTN","IBCIUT5",202,0)
ENV() ; This function will return either a "T" for test claim or a "L" for
"RTN","IBCIUT5",203,0)
 ; live claim.  This is the message type of the claim in the Ingenix
"RTN","IBCIUT5",204,0)
 ; interface specs.  This value will be determined based on the value
"RTN","IBCIUT5",205,0)
 ; of IBCISNT and also which VistA environment we are currently in.
"RTN","IBCIUT5",206,0)
 ;
"RTN","IBCIUT5",207,0)
 NEW MSGTYP,MNETNAME,TNM
"RTN","IBCIUT5",208,0)
 S TNM=".TEST.MIR.TST.MIRROR.TRAIN."     ; various test names
"RTN","IBCIUT5",209,0)
 S MSGTYP="T"                            ; assume Test claim
"RTN","IBCIUT5",210,0)
 I $G(IBCISNT)=3 G ENVX                  ; test send to CM
"RTN","IBCIUT5",211,0)
 ;
"RTN","IBCIUT5",212,0)
 ; Check the node name and make sure it exists and is not a test name
"RTN","IBCIUT5",213,0)
 S MNETNAME=$G(^XMB("NETNAME"))
"RTN","IBCIUT5",214,0)
 I MNETNAME="" G ENVX
"RTN","IBCIUT5",215,0)
 I $F(TNM,"."_$P(MNETNAME,".",1)_".") G ENVX
"RTN","IBCIUT5",216,0)
 ;
"RTN","IBCIUT5",217,0)
 S MSGTYP="L"                            ; Otherwise it's a Live claim
"RTN","IBCIUT5",218,0)
ENVX ;
"RTN","IBCIUT5",219,0)
 Q MSGTYP
"RTN","IBCIUT5",220,0)
 ;
"RTN","IBCRBG")
0^15^B50822861
"RTN","IBCRBG",1,0)
IBCRBG ;ALB/ARH-RATES: BILL SOURCE EVENTS (INPT) ;21 MAY 96
"RTN","IBCRBG",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,51,142,159,210**;21-MAR-94
"RTN","IBCRBG",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRBG",4,0)
 ;
"RTN","IBCRBG",5,0)
INPTPTF(IBIFN) ; search PTF record for billable bedsections, transfer DRGs, and length of stay 
"RTN","IBCRBG",6,0)
 ; - screens out days for pass, leave and SC treatment
"RTN","IBCRBG",7,0)
 ; - adds charges for only one BS if the ins company does not allow multiple bedsections per bill (36,.06)
"RTN","IBCRBG",8,0)
 ; Output:  ^TMP($J,"IBCRC-INDT", BILLABLE DATE) = MOVE/TRANSFER DT/TM ^ BILL BS ^ SC FLAG ^ DRG ^ DIVISION
"RTN","IBCRBG",9,0)
 ;
"RTN","IBCRBG",10,0)
 N IB0,DFN,PTF,IBU,IBBDT,IBEDT,IBTF,IBADM,IBX,IBINSMBS
"RTN","IBCRBG",11,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV"),^TMP($J,"IBCRC-INDT")
"RTN","IBCRBG",12,0)
 ;
"RTN","IBCRBG",13,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IB0,U,2) Q:'DFN
"RTN","IBCRBG",14,0)
 S IBTF=$P(IB0,U,6),PTF="" S:$P(IB0,U,5)<3 PTF=$P(IB0,U,8) Q:'PTF
"RTN","IBCRBG",15,0)
 S IBINSMBS=0,IBX=+$G(^DGCR(399,+IBIFN,"MP"))
"RTN","IBCRBG",16,0)
 I 'IBX,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)) S IBX=$$CURR^IBCEF2(IBIFN)
"RTN","IBCRBG",17,0)
 I $P($G(^DIC(36,+IBX,0)),U,6)=0 S IBINSMBS=1 ; 1 bs per bill
"RTN","IBCRBG",18,0)
 ;
"RTN","IBCRBG",19,0)
 S IBU=$G(^DGCR(399,+IBIFN,"U")) Q:'IBU
"RTN","IBCRBG",20,0)
 S IBBDT=+IBU,IBEDT=$P(IBU,U,2) Q:'IBEDT
"RTN","IBCRBG",21,0)
 ;
"RTN","IBCRBG",22,0)
 S IBADM=$O(^DGPM("APTF",PTF,0)) ; find corresponding admission
"RTN","IBCRBG",23,0)
 ;
"RTN","IBCRBG",24,0)
 D PTF(PTF) ; get movements and bedsections
"RTN","IBCRBG",25,0)
 D PTFDV(PTF) ; reset movements and bedsections for ward/division
"RTN","IBCRBG",26,0)
 ;
"RTN","IBCRBG",27,0)
 D BSLOS(IBBDT,IBEDT,IBTF,IBADM,IBINSMBS) ; calculate days in bedsections within timeframe of the bill
"RTN","IBCRBG",28,0)
 ;
"RTN","IBCRBG",29,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV")
"RTN","IBCRBG",30,0)
 ;
"RTN","IBCRBG",31,0)
 Q
"RTN","IBCRBG",32,0)
 ;
"RTN","IBCRBG",33,0)
PTF(PTF) ; find all movements in PTF for the admission by date and billing bedsection (501 movement)
"RTN","IBCRBG",34,0)
 ; the movement date is the date the patient left the bedsection
"RTN","IBCRBG",35,0)
 ; Output:  ^TMP($J,"IBCRC-PTF", MOVE DATE/TIME)=MOVE DATE/TIME ^ BILL BEDSECTION ^ SC FLAG ^ TRANSFER DRG
"RTN","IBCRBG",36,0)
 ;
"RTN","IBCRBG",37,0)
 N IBMOVE,IBMVLN,IBBILLBS,IBENDDT,IBMSC,IBMDRG S PTF=+$G(PTF)
"RTN","IBCRBG",38,0)
 S IBMOVE=0 F  S IBMOVE=$O(^DGPT(PTF,"M",IBMOVE)) Q:'IBMOVE  D
"RTN","IBCRBG",39,0)
 . S IBMVLN=^DGPT(PTF,"M",IBMOVE,0)
"RTN","IBCRBG",40,0)
 . S IBBILLBS=+$$SPBB($P(IBMVLN,U,2)) ; billable bedsection
"RTN","IBCRBG",41,0)
 . S IBENDDT=+$P(IBMVLN,U,10) I 'IBENDDT S IBENDDT=DT ; movement date (last date in bedsection)
"RTN","IBCRBG",42,0)
 . S IBMSC="" I +$P(IBMVLN,U,18)=1 S IBMSC=1 ; sc movement
"RTN","IBCRBG",43,0)
 . S IBMDRG=$$MVDRG(PTF,IBMOVE) ; movement DRG
"RTN","IBCRBG",44,0)
 . S ^TMP($J,"IBCRC-PTF",IBENDDT)=IBENDDT_U_IBBILLBS_U_IBMSC_U_IBMDRG
"RTN","IBCRBG",45,0)
 Q
"RTN","IBCRBG",46,0)
 ;
"RTN","IBCRBG",47,0)
SPBB(SPCLTY) ; find the billable bedsection for a Specialty (42.4)
"RTN","IBCRBG",48,0)
 ; returns billable bedsection IFN ^ billable bedsection name
"RTN","IBCRBG",49,0)
 N IBX,IBY,IBZ S IBZ=0
"RTN","IBCRBG",50,0)
 S IBX=$P($G(^DIC(42.4,+$G(SPCLTY),0)),U,5)
"RTN","IBCRBG",51,0)
 I IBX'="" S IBY=$O(^DGCR(399.1,"B",IBX,0)) I +IBY S IBZ=IBY_U_IBX
"RTN","IBCRBG",52,0)
 Q IBZ
"RTN","IBCRBG",53,0)
 ;
"RTN","IBCRBG",54,0)
BSLOS(IBBDT,IBEDT,IBTF,IBADM,IBINSMBS) ; from the array of PTF movments get all bedsections and their LOS covered by date range of the bill
"RTN","IBCRBG",55,0)
 ; adds all days for first cronological bs if ins comp wants only a single bs per bill, even if not sequential
"RTN","IBCRBG",56,0)
 ; the movement date is the date the patient left the bedsection, so admission date is not in PTF array
"RTN","IBCRBG",57,0)
 ;
"RTN","IBCRBG",58,0)
 ; Input:   ^TMP($J,"IBCRC-PTF", MOVE/TRANSFER DT/TM) = MOVE/TRANSFER DT/TM ^ BILL BS ^ SC FLAG ^ DRG ^ DIVISION
"RTN","IBCRBG",59,0)
 ; Output:  ^TMP($J,"IBCRC-INDT", BILLABLE DATE) = MOVE/TRANSFER DT/TM ^ BILL BS ^ SC FLAG ^ DRG ^ DIVISION
"RTN","IBCRBG",60,0)
 ;
"RTN","IBCRBG",61,0)
 N IBSBDT,IBSEDT,IBS,IBLASTDT,IBX
"RTN","IBCRBG",62,0)
 S IBSBDT=IBBDT+.3 ; discount any movements ending on or before the begin date
"RTN","IBCRBG",63,0)
 S IBSEDT=IBEDT\1
"RTN","IBCRBG",64,0)
 ; 
"RTN","IBCRBG",65,0)
 I ",2,3,"'[IBTF S IBSEDT=IBSEDT-.01 ; final bill, do not count last day
"RTN","IBCRBG",66,0)
 ;
"RTN","IBCRBG",67,0)
 I +$G(IBADM) S IBX=$$AD^IBCU64(IBADM) I +IBX,($P(IBX,U,1)\1)=($P(IBX,U,2)\1) S IBSBDT=IBBDT ; reset 1 day stays
"RTN","IBCRBG",68,0)
 ;
"RTN","IBCRBG",69,0)
 S IBS=IBSBDT-.01 F  S IBS=$O(^TMP($J,"IBCRC-PTF",IBS)) Q:'IBS  D SET S IBLASTDT=IBS Q:(IBLASTDT\1)>IBSEDT
"RTN","IBCRBG",70,0)
 ;
"RTN","IBCRBG",71,0)
 Q
"RTN","IBCRBG",72,0)
 ;
"RTN","IBCRBG",73,0)
SET ; checks a specific movement to determine if it should be billed and what the length of stay is
"RTN","IBCRBG",74,0)
 ; setting of the movement date determines how many days are counted in the bedsection
"RTN","IBCRBG",75,0)
 N IBMVLN,IBMBDT,IBMEDT,IBMTF,IBMLOS,IBI,IBCHGDT
"RTN","IBCRBG",76,0)
 S IBMVLN=$G(^TMP($J,"IBCRC-PTF",IBS))
"RTN","IBCRBG",77,0)
 I '$P(IBMVLN,U,2) Q  ;  non-billable bedsection
"RTN","IBCRBG",78,0)
 I +$P(IBMVLN,U,3) Q  ;  sc movement
"RTN","IBCRBG",79,0)
 I +IBINSMBS,+$G(IBLASTDT) Q  ; ins does not allow multiple bs
"RTN","IBCRBG",80,0)
 ;
"RTN","IBCRBG",81,0)
 S IBMBDT=$S(IBBDT>$G(IBLASTDT):IBBDT,1:IBLASTDT),IBMBDT=IBMBDT\1 ; start cnt on begin dt or last move dt
"RTN","IBCRBG",82,0)
 S IBMEDT=$S(IBS<IBEDT:IBS,1:IBEDT),IBMEDT=IBMEDT\1 ;               end cnt on move dt or end dt
"RTN","IBCRBG",83,0)
 S IBMTF=$S(IBEDT<(IBS\1):IBTF,1:1) ;                               last movement gets timeframe
"RTN","IBCRBG",84,0)
 S IBMLOS=$$LOS^IBCU64(IBMBDT,IBMEDT,IBMTF,IBADM) Q:'IBMLOS  ;      calculate the LOS for the movement
"RTN","IBCRBG",85,0)
 ;
"RTN","IBCRBG",86,0)
 F IBI=1:1:IBMLOS S IBCHGDT=$$FMADD^XLFDT(IBMBDT,(IBI-1)),^TMP($J,"IBCRC-INDT",+IBCHGDT)=IBMVLN
"RTN","IBCRBG",87,0)
 Q
"RTN","IBCRBG",88,0)
 ;
"RTN","IBCRBG",89,0)
BBS(X) ; returns true if pointer passed in is a billable bedsection ^ bedsection name
"RTN","IBCRBG",90,0)
 N IBX,IBY S IBY=0,IBX=$G(^DGCR(399.1,+$G(X),0)) I +$P(IBX,U,5) S IBY=1_U_$P(IBX,U,1)
"RTN","IBCRBG",91,0)
 Q IBY
"RTN","IBCRBG",92,0)
 ;
"RTN","IBCRBG",93,0)
 ; dates used follow rules:
"RTN","IBCRBG",94,0)
 ; - admission date is counted as billable
"RTN","IBCRBG",95,0)
 ; - the discharge date is not billable and is not counted
"RTN","IBCRBG",96,0)
 ; 
"RTN","IBCRBG",97,0)
 ; - if admission movement is found in the Patient Movement file then the dates of admission and discharge
"RTN","IBCRBG",98,0)
 ;   will be used as the outside limits of the LOS, even if date range of the bill is longer   (LOS^IBCU64)
"RTN","IBCRBG",99,0)
 ; 
"RTN","IBCRBG",100,0)
 ; - a day is counted as billable to the bedsection the patient was in at the end of the day (ie. counted
"RTN","IBCRBG",101,0)
 ;   in LOS of next movement after midnight)
"RTN","IBCRBG",102,0)
 ; - if there is a movement on any given date that date is included in the LOS of the bedsection the patient
"RTN","IBCRBG",103,0)
 ;   moved into (same as admission date)
"RTN","IBCRBG",104,0)
 ; - if there is a movement on any given date that date is NOT included in the LOS of the bedsection the 
"RTN","IBCRBG",105,0)
 ;   patient moved out of (same as discharge date)
"RTN","IBCRBG",106,0)
 ; 
"RTN","IBCRBG",107,0)
 ; - if the time frame of the bill is:
"RTN","IBCRBG",108,0)
 ;   - either interim-first or interim-continuous the last date on the bill should be billed
"RTN","IBCRBG",109,0)
 ;     - if the last date is counted it is added to the LOS of the bedsection the patient was in at the end
"RTN","IBCRBG",110,0)
 ;       of the day
"RTN","IBCRBG",111,0)
 ;   - either NOT interim-first or interim-continuous (final bills) the last date on the bill
"RTN","IBCRBG",112,0)
 ;     should NOT be billed (i.e. this is considered the discharge date)
"RTN","IBCRBG",113,0)
 ;
"RTN","IBCRBG",114,0)
 ; - start with first bedsection after begin date, day is counted in the bedsection the patient is in at midnight
"RTN","IBCRBG",115,0)
 ; - continuous: last bedsection counted is the bedsection the patient is in at midnight of the end date
"RTN","IBCRBG",116,0)
 ; - final:last bedsection counted is the bedsection the patient is in at midnight of the day before the end date
"RTN","IBCRBG",117,0)
 ;
"RTN","IBCRBG",118,0)
 Q
"RTN","IBCRBG",119,0)
 ;
"RTN","IBCRBG",120,0)
PTFDV(PTF) ; find all ward/location transfers in PTF for the patient to determine the site/division the patient was in
"RTN","IBCRBG",121,0)
 ; the division of the ward will be added to the PTF bedsection movements
"RTN","IBCRBG",122,0)
 ; Input:   ^TMP($J,"IBCRC-PTF", move dt/time) = move dt/time ^ bill bs ^ sc flag ^ move drg
"RTN","IBCRBG",123,0)
 ; Output:  ^TMP($J,"IBCRC-PTF", move/TRANS dt/time) = move dt/time ^ bill bs ^ sc flag ^ move drg ^ WARD DIV
"RTN","IBCRBG",124,0)
 ;          ^TMP($J,"IBCRC-DIV", TRANSFER DATE/TIME) = WARD DIVISION
"RTN","IBCRBG",125,0)
 N IBTRNSF,IBTRLN,IBENDDT,IBTRDV,IBMVDT,IBTRDT
"RTN","IBCRBG",126,0)
 ;
"RTN","IBCRBG",127,0)
 I '$O(^TMP($J,"IBCRC-PTF",0)) Q
"RTN","IBCRBG",128,0)
 ;
"RTN","IBCRBG",129,0)
 ; get all ward transfers
"RTN","IBCRBG",130,0)
 S IBTRNSF=0 F  S IBTRNSF=$O(^DGPT(PTF,535,IBTRNSF)) Q:'IBTRNSF  D
"RTN","IBCRBG",131,0)
 . S IBTRLN=$G(^DGPT(PTF,535,+IBTRNSF,0))
"RTN","IBCRBG",132,0)
 . S IBENDDT=$P(IBTRLN,U,10) I 'IBENDDT S IBENDDT=DT ;                  transfer date (last date in ward)
"RTN","IBCRBG",133,0)
 . S IBTRDV=$P($G(^DIC(42,+$P(IBTRLN,U,6),0)),U,11) Q:'IBTRDV  ;        losing ward division
"RTN","IBCRBG",134,0)
 . S ^TMP($J,"IBCRC-DIV",IBENDDT)=IBTRDV
"RTN","IBCRBG",135,0)
 ;
"RTN","IBCRBG",136,0)
 ; if the ward transfer does not coincide with a specialty transfer add bedsection move on the transfer date
"RTN","IBCRBG",137,0)
 S IBENDDT=0 F  S IBENDDT=$O(^TMP($J,"IBCRC-DIV",IBENDDT)) Q:'IBENDDT  D
"RTN","IBCRBG",138,0)
 . S IBMVDT=$O(^TMP($J,"IBCRC-PTF",(IBENDDT-.0000001)))
"RTN","IBCRBG",139,0)
 . I 'IBMVDT Q  ; - Prevent a problem where there are transfer movement dates after the discharge date in the PTF file (inconsistent)
"RTN","IBCRBG",140,0)
 . I $P(IBENDDT,".")'=$P(IBMVDT,".") S ^TMP($J,"IBCRC-PTF",IBENDDT)=$G(^TMP($J,"IBCRC-PTF",IBMVDT))
"RTN","IBCRBG",141,0)
 ;
"RTN","IBCRBG",142,0)
 ; add the ward division to the bedsection/specialty
"RTN","IBCRBG",143,0)
 S IBENDDT=0 F  S IBENDDT=$O(^TMP($J,"IBCRC-PTF",IBENDDT)) Q:'IBENDDT  D
"RTN","IBCRBG",144,0)
 . S IBTRDT=$O(^TMP($J,"IBCRC-DIV",(IBENDDT-.0000001))) ; ward transfer covering this bedsection
"RTN","IBCRBG",145,0)
 . S IBTRDV=$G(^TMP($J,"IBCRC-DIV",+IBTRDT)) ;            ward division
"RTN","IBCRBG",146,0)
 . I +IBTRDV S $P(^TMP($J,"IBCRC-PTF",IBENDDT),U,5)=IBTRDV
"RTN","IBCRBG",147,0)
 Q
"RTN","IBCRBG",148,0)
 ;
"RTN","IBCRBG",149,0)
MVDRG(PTF,M) ; Return the DRG for a specific PTF Movememt (M=move ifn)
"RTN","IBCRBG",150,0)
 N DPT0,PTF0,PTFM0,PTF70,IBBEG,IBEND,IBDSST,IBDX,IBPRC0,IBPRC,IBDRG,IBI,IBJ,IBP
"RTN","IBCRBG",151,0)
 N SEX,AGE,ICDDX,ICDPRC,ICDEXP,ICDDMS,ICDTRS,ICDDRG,ICDDATE
"RTN","IBCRBG",152,0)
 S IBDRG=""
"RTN","IBCRBG",153,0)
 ;
"RTN","IBCRBG",154,0)
 S PTF0=$G(^DGPT(+$G(PTF),0)),DPT0=$G(^DPT(+$P(PTF0,U,1),0)) I DPT0="" G MVDRGQ
"RTN","IBCRBG",155,0)
 S PTFM0=$G(^DGPT(+PTF,"M",+$G(M),0)) I 'PTFM0 G MVDRGQ
"RTN","IBCRBG",156,0)
 S PTF70=$G(^DGPT(+PTF,70)),IBDSST=+$P(PTF70,U,3)
"RTN","IBCRBG",157,0)
 ;
"RTN","IBCRBG",158,0)
 S IBEND=+$P(PTFM0,U,10) I 'IBEND S IBEND=DT+.9
"RTN","IBCRBG",159,0)
 S IBBEG=$O(^DGPT(+PTF,"M","AM",IBEND),-1) I 'IBBEG S IBBEG=$P(PTF0,U,2)
"RTN","IBCRBG",160,0)
 ;
"RTN","IBCRBG",161,0)
 S SEX=$P(DPT0,U,2)
"RTN","IBCRBG",162,0)
 S AGE=$P(DPT0,U,3),AGE=$$FMDIFF^XLFDT(IBEND,AGE)\365.25
"RTN","IBCRBG",163,0)
 ;
"RTN","IBCRBG",164,0)
 S (ICDEXP,ICDDMS,ICDTRS)=0 I +PTF70,+PTF70=$P(PTFM0,U,10) D
"RTN","IBCRBG",165,0)
 . I IBDSST>5 S ICDEXP=1 ;  patient expired
"RTN","IBCRBG",166,0)
 . I IBDSST=4 S ICDDMS=1 ;  patient left against medical advice
"RTN","IBCRBG",167,0)
 . I IBDSST=5,+$P(PTF70,U,13) S ICDTRS=1 ; patient transfered to another facility
"RTN","IBCRBG",168,0)
 ;
"RTN","IBCRBG",169,0)
 S IBJ=0 F IBI=5:1:9 S IBDX=$P(PTFM0,U,IBI) I +IBDX,($$ICD9^IBACSV(+IBDX)'="") S IBJ=IBJ+1,ICDDX(IBJ)=IBDX
"RTN","IBCRBG",170,0)
 ;
"RTN","IBCRBG",171,0)
 I '$O(ICDDX(0)) G MVDRGQ
"RTN","IBCRBG",172,0)
 ;
"RTN","IBCRBG",173,0)
 S IBJ=0
"RTN","IBCRBG",174,0)
 S IBP=0 F  S IBP=$O(^DGPT(+PTF,"S",IBP)) Q:'IBP  D  ; surguries
"RTN","IBCRBG",175,0)
 . S IBPRC0=$G(^DGPT(+PTF,"S",IBP,0)) Q:'IBPRC0
"RTN","IBCRBG",176,0)
 . I +IBPRC0'<IBBEG,+IBPRC0'>IBEND D
"RTN","IBCRBG",177,0)
 .. F IBI=8:1:12 S IBPRC=$P(IBPRC0,U,IBI) I +IBPRC,($$ICD0^IBACSV(+IBPRC)'="") S IBJ=IBJ+1,ICDPRC(IBJ)=+IBPRC
"RTN","IBCRBG",178,0)
 ;
"RTN","IBCRBG",179,0)
 S IBP=0 F  S IBP=$O(^DGPT(+PTF,"P",IBP)) Q:'IBP  D  ; procedures
"RTN","IBCRBG",180,0)
 . S IBPRC0=$G(^DGPT(+PTF,"P",IBP,0)) Q:'IBPRC0
"RTN","IBCRBG",181,0)
 . I +IBPRC0'<IBBEG,+IBPRC0'>IBEND D
"RTN","IBCRBG",182,0)
 .. F IBI=5:1:9 S IBPRC=$P(IBPRC0,U,IBI) I +IBPRC,($$ICD0^IBACSV(+IBPRC)'="") S IBJ=IBJ+1,ICDPRC(IBJ)=+IBPRC
"RTN","IBCRBG",183,0)
 ;
"RTN","IBCRBG",184,0)
 S ICDDATE=$P(PTFM0,U,10) ; The MOVEMENT DATE is used for DRG Grouper here
"RTN","IBCRBG",185,0)
 D ^ICDDRG S IBDRG=$G(ICDDRG)
"RTN","IBCRBG",186,0)
 ;
"RTN","IBCRBG",187,0)
MVDRGQ Q IBDRG
"RTN","IBCRU1")
0^40^B20569916
"RTN","IBCRU1",1,0)
IBCRU1 ;ALB/ARH - RATES: UTILITIES ; 22-MAY-1996
"RTN","IBCRU1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,210**;21-MAR-94
"RTN","IBCRU1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRU1",4,0)
 ;
"RTN","IBCRU1",5,0)
 ;
"RTN","IBCRU1",6,0)
EMUTL(X,LNG) ; returns external form of an MCCR Utility entry (399.1), full or abbrev.
"RTN","IBCRU1",7,0)
 S X=$G(^DGCR(399.1,+$G(X),0)),LNG=$S(+$G(LNG)=2:3,1:1)
"RTN","IBCRU1",8,0)
 S X=$P(X,U,LNG)
"RTN","IBCRU1",9,0)
 Q X
"RTN","IBCRU1",10,0)
 ;
"RTN","IBCRU1",11,0)
MCCRUTL(N,P) ; returns IFN of MCCR Utility entry (399.1) if Name N is found and piece P is true
"RTN","IBCRU1",12,0)
 N X,I,Y S X=0
"RTN","IBCRU1",13,0)
 I +$G(P),$G(N)'="" S I=0 F  S I=$O(^DGCR(399.1,"B",$E(N,1,30),I)) Q:'I  S Y=$G(^DGCR(399.1,I,0)) I +$P(Y,U,P),$P(Y,U,1)=N S X=I Q
"RTN","IBCRU1",14,0)
 Q X
"RTN","IBCRU1",15,0)
 ;
"RTN","IBCRU1",16,0)
EXPAND(FILE,FIELD,VALUE) ; return expanded external form of a data element
"RTN","IBCRU1",17,0)
 N Y,C S Y=$G(VALUE)
"RTN","IBCRU1",18,0)
 I +$G(FILE),+$G(FIELD),Y'="" S C=$P(^DD(FILE,FIELD,0),"^",2) D Y^DIQ
"RTN","IBCRU1",19,0)
 Q Y
"RTN","IBCRU1",20,0)
 ;
"RTN","IBCRU1",21,0)
DATE(X) ; date in external format
"RTN","IBCRU1",22,0)
 N Y S Y="" I $G(X)?7N.E S Y=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCRU1",23,0)
 Q Y
"RTN","IBCRU1",24,0)
 ;
"RTN","IBCRU1",25,0)
GETDT(DEFAULT,PROMPT,MIN,MAX) ; user select effective date  (-1 if ^, 0 if none)  DT1
"RTN","IBCRU1",26,0)
 N IBX,DIR,X,Y,DTOUT,DUOUT,DIRUT S IBX=0 I $G(DEFAULT) S DIR("B")=$$DATE(DEFAULT)
"RTN","IBCRU1",27,0)
 S DIR("A")=$S($G(PROMPT)'="":PROMPT,1:"Select EFFECTIVE DATE")
"RTN","IBCRU1",28,0)
 S DIR(0)="DO^"_$G(MIN)_":"_$G(MAX)_":EX" D ^DIR K DIR I Y?7N S IBX=+Y
"RTN","IBCRU1",29,0)
 I $D(DTOUT)!$D(DUOUT) S IBX=-1
"RTN","IBCRU1",30,0)
 Q IBX
"RTN","IBCRU1",31,0)
 ;
"RTN","IBCRU1",32,0)
GETBR(BI) ; ask and return a billing rate (363.3):  (-1 if ^, 0 if none)  IFN^.01
"RTN","IBCRU1",33,0)
 ; if BI passed in then only allow selection of billing rates with that type of billable item
"RTN","IBCRU1",34,0)
 N IBX,DIC,DIE,DA,DR,X,Y,DTOUT,DUOUT S IBX=0
"RTN","IBCRU1",35,0)
 I +$G(BI) S DIC("S")="I $P(^(0),U,4)="_BI
"RTN","IBCRU1",36,0)
 S DIC="^IBE(363.3,",DIC(0)="AENQ" D ^DIC K DIC
"RTN","IBCRU1",37,0)
 I $D(DTOUT)!($D(DUOUT)) S IBX=-1
"RTN","IBCRU1",38,0)
 I +Y>0 S IBX=Y
"RTN","IBCRU1",39,0)
 Q IBX
"RTN","IBCRU1",40,0)
 ;
"RTN","IBCRU1",41,0)
GETCS() ; ask and return a charge set (363.2):  (-1 if ^, 0 if none)  IFN^.01
"RTN","IBCRU1",42,0)
 N IBX,DIC,DIE,DA,DR,X,Y,DTOUT,DUOUT S IBX=0
"RTN","IBCRU1",43,0)
 S DIC="^IBE(363.1,",DIC(0)="AENQ" D ^DIC K DIC
"RTN","IBCRU1",44,0)
 I $D(DTOUT)!($D(DUOUT)) S IBX=-1
"RTN","IBCRU1",45,0)
 I +Y>0 S IBX=Y
"RTN","IBCRU1",46,0)
 Q IBX
"RTN","IBCRU1",47,0)
 ;
"RTN","IBCRU1",48,0)
GETSG(TYPE,BR) ; ask and return a special group (363.32):  (-1 if ^, 0 if none)  IFN^.01
"RTN","IBCRU1",49,0)
 ; if TYPE is passed in then only groups of that type may be selected
"RTN","IBCRU1",50,0)
 ; if BR is passed in then only groups assigned that billing rate may be selected
"RTN","IBCRU1",51,0)
 N IBX,DIC,DIE,DA,DR,X,Y,DTOUT,DUOUT S IBX=0
"RTN","IBCRU1",52,0)
 I +$G(TYPE) S DIC("S")="I $P(^(0),U,2)="_TYPE_$S(+$G(BR):" ",1:"")
"RTN","IBCRU1",53,0)
 I +$G(BR) S DIC("S")=$G(DIC("S"))_"I $O(^IBE(363.32,Y,11,""B"",+BR,0))"
"RTN","IBCRU1",54,0)
 S DIC="^IBE(363.32,",DIC(0)="AENQ" D ^DIC K DIC
"RTN","IBCRU1",55,0)
 I $D(DTOUT)!($D(DUOUT)) S IBX=-1
"RTN","IBCRU1",56,0)
 I +Y>0 S IBX=Y
"RTN","IBCRU1",57,0)
 Q IBX
"RTN","IBCRU1",58,0)
 ;
"RTN","IBCRU1",59,0)
GETBED(COL) ; ask and return billable bedsection (399.1):  (-1 if ^, 0 if none)  IFN^.01
"RTN","IBCRU1",60,0)
 N IBX,DIC,DIE,DA,DR,X,Y,DTOUT,DUOUT S IBX=0
"RTN","IBCRU1",61,0)
 S DIC("A")=$J("",$G(COL))_"Select BEDSECTION: "
"RTN","IBCRU1",62,0)
 S DIC="^DGCR(399.1,",DIC(0)="AENQ",DIC("S")="I +$P(^(0),U,5)=1" D ^DIC K DIC
"RTN","IBCRU1",63,0)
 I $D(DTOUT)!($D(DUOUT)) S IBX=-1
"RTN","IBCRU1",64,0)
 I +Y>0 S IBX=Y
"RTN","IBCRU1",65,0)
 Q IBX
"RTN","IBCRU1",66,0)
 ;
"RTN","IBCRU1",67,0)
GETCPT(COL,ALL) ; ask and return CPT (81):  (-1 if ^, 0 if none)  IFN^.01
"RTN","IBCRU1",68,0)
 N IBX,DIC,DIE,DA,DR,X,Y,DTOUT,DUOUT S IBX=0
"RTN","IBCRU1",69,0)
 S DIC("A")=$J("",$G(COL))_"Select CPT: " I '$G(ALL) S DIC("S")="I $$CPTACT^IBACSV(+Y,DT)"
"RTN","IBCRU1",70,0)
 S DIC="^ICPT(",DIC(0)="AEMNQ" D ^DIC K DIC
"RTN","IBCRU1",71,0)
 I $D(DTOUT)!($D(DUOUT)) S IBX=-1
"RTN","IBCRU1",72,0)
 I +Y>0 S IBX=Y
"RTN","IBCRU1",73,0)
 Q IBX
"RTN","IBCRU1",74,0)
 ;
"RTN","IBCRU1",75,0)
GETNDC(COL) ; ask and return NDC #'s (363.21):  (-1 if ^, 0 if none)  IFN^.01
"RTN","IBCRU1",76,0)
 N IBX,DIC,DIE,DA,DR,X,Y,DTOUT,DUOUT S IBX=0
"RTN","IBCRU1",77,0)
 S DIC("A")=$J("",$G(COL))_"Select NDC #: "
"RTN","IBCRU1",78,0)
 S DIC="^IBA(363.21,",DIC(0)="AENQ",DIC("S")="I +$P(^(0),U,2)=1" D ^DIC K DIC
"RTN","IBCRU1",79,0)
 I $D(DTOUT)!($D(DUOUT)) S IBX=-1
"RTN","IBCRU1",80,0)
 I +Y>0 S IBX=Y
"RTN","IBCRU1",81,0)
 Q IBX
"RTN","IBCRU1",82,0)
 ;
"RTN","IBCRU1",83,0)
GETDRG(COL,ALL) ; ask and return DRG (80.2):  (-1 if ^, 0 if none)  IFN^.01
"RTN","IBCRU1",84,0)
 ; ALL: Default is 1 (disable screening)
"RTN","IBCRU1",85,0)
 N IBX,DIC,DIE,DA,DR,X,Y,DTOUT,DUOUT S IBX=0
"RTN","IBCRU1",86,0)
 S DIC("A")=$J("",$G(COL))_"Select DRG: " I '$G(ALL,1) S DIC("S")="I $$DRGACT^IBACSV(+Y,DT)"
"RTN","IBCRU1",87,0)
 S DIC="^ICD(",DIC(0)="AEMNQ" D ^DIC K DIC
"RTN","IBCRU1",88,0)
 I $D(DTOUT)!($D(DUOUT)) S IBX=-1
"RTN","IBCRU1",89,0)
 I +Y>0 S IBX=Y
"RTN","IBCRU1",90,0)
 Q IBX
"RTN","IBCRU1",91,0)
 ;
"RTN","IBCRU1",92,0)
GETMISC(COL,CS) ; ask and return MISCELLANEOUS item (363.21):  (-1 if ^, 0 if none)  IFN^.01
"RTN","IBCRU1",93,0)
 ; if CS is passed in then only billing items with charges in that set are selectable
"RTN","IBCRU1",94,0)
 N IBX,DIC,DIE,DA,DR,X,Y,DTOUT,DUOUT S IBX=0
"RTN","IBCRU1",95,0)
 S DIC("A")=$J("",$G(COL))_"Select MISCELLANEOUS Item: "
"RTN","IBCRU1",96,0)
 S DIC("S")="I +$P(^(0),U,2)=9" I +$G(CS) S DIC("S")=DIC("S")_",$D(^IBA(363.2,""AIVDTS""_+CS,Y))"
"RTN","IBCRU1",97,0)
 S DIC="^IBA(363.21,",DIC(0)="AENQ" D ^DIC K DIC
"RTN","IBCRU1",98,0)
 I $D(DTOUT)!($D(DUOUT)) S IBX=-1
"RTN","IBCRU1",99,0)
 I +Y>0 S IBX=Y
"RTN","IBCRU1",100,0)
 Q IBX
"RTN","IBCRU1",101,0)
 ;
"RTN","IBCRU1",102,0)
GETITEM(IBCSFN,COL,ALL) ; returns user selected item for a specific charge set:
"RTN","IBCRU1",103,0)
 ;  IFN ^ .01 ^ source file reference ^ source file   (-1 if ^, 0 if none)
"RTN","IBCRU1",104,0)
 N IBCS0,IBBRFN,IBBR0,IBBRBI,IBITEM S IBITEM=0,COL=$G(COL),ALL=$G(ALL)
"RTN","IBCRU1",105,0)
 I '$G(IBCSFN) S IBCSFN=+$$GETCS I IBCSFN'>0 G GIQ
"RTN","IBCRU1",106,0)
 ;
"RTN","IBCRU1",107,0)
 S IBCS0=$G(^IBE(363.1,+IBCSFN,0)),IBBRFN=$P(IBCS0,U,2)
"RTN","IBCRU1",108,0)
 S IBBR0=$G(^IBE(363.3,+IBBRFN,0)),IBBRBI=$P(IBBR0,U,4)
"RTN","IBCRU1",109,0)
 ;
"RTN","IBCRU1",110,0)
 I IBBRBI=1 S IBITEM=$$GETBED(COL) S:IBITEM>0 IBITEM=IBITEM_U_$$BIFILE^IBCRU2(IBBRBI) G GIQ
"RTN","IBCRU1",111,0)
 I IBBRBI=2 S IBITEM=$$GETCPT(COL,ALL) S:IBITEM>0 IBITEM=IBITEM_U_$$BIFILE^IBCRU2(IBBRBI) G GIQ
"RTN","IBCRU1",112,0)
 I IBBRBI=3 S IBITEM=$$GETNDC(COL) S:IBITEM>0 IBITEM=IBITEM_U_$$BIFILE^IBCRU2(IBBRBI) G GIQ
"RTN","IBCRU1",113,0)
 I IBBRBI=4 S IBITEM=$$GETDRG(COL) S:IBITEM>0 IBITEM=IBITEM_U_$$BIFILE^IBCRU2(IBBRBI) G GIQ
"RTN","IBCRU1",114,0)
 I IBBRBI=9 S IBITEM=$$GETMISC(COL,$S('ALL:+IBCSFN,1:0)) S:IBITEM>0 IBITEM=IBITEM_U_$$BIFILE^IBCRU2(IBBRBI) G GIQ
"RTN","IBCRU1",115,0)
GIQ Q IBITEM
"RTN","IBCRU2")
0^41^B5218948
"RTN","IBCRU2",1,0)
IBCRU2 ;ALB/ARH - RATES: UTILITIES (CI DEFINITIONS) ; 22-MAY-1996
"RTN","IBCRU2",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,138,210**;21-MAR-94
"RTN","IBCRU2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRU2",4,0)
 ;
"RTN","IBCRU2",5,0)
 ;
"RTN","IBCRU2",6,0)
FNDBI(T,N) ; returns IFN of Billing Items entry (363.21) if Name N is found and of Type T
"RTN","IBCRU2",7,0)
 N X,I,Y S X=0,T=$G(T),T=$S(T["NDC":1,T["MISCELLANEOUS":9,1:T)
"RTN","IBCRU2",8,0)
 I +T,$G(N)'="" S I=0 F  S I=$O(^IBA(363.21,"B",$E(N,1,30),I)) Q:'I  S Y=$G(^IBA(363.21,I,0)) I +$P(Y,U,2)=T,$P(Y,U,1)=N S X=I Q
"RTN","IBCRU2",9,0)
 Q X
"RTN","IBCRU2",10,0)
 ;
"RTN","IBCRU2",11,0)
BIFILE(BI) ; returns the source file reference for a billable item (363.3,.04)
"RTN","IBCRU2",12,0)
 N IBX S IBX="",BI=+$G(BI)
"RTN","IBCRU2",13,0)
 I BI=1 S IBX=";DGCR(399.1,^399.1" ;       billable bedsections
"RTN","IBCRU2",14,0)
 I BI=2 S IBX=";ICPT(^81" ;                CPT procedures
"RTN","IBCRU2",15,0)
 I BI=3 S IBX=";IBA(363.21,^363.21" ;      NDC numbers
"RTN","IBCRU2",16,0)
 I BI=4 S IBX=";ICD(^80.2" ;               DRG codes
"RTN","IBCRU2",17,0)
 I BI=9 S IBX=";IBA(363.21,^363.21" ;      Miscellaneous
"RTN","IBCRU2",18,0)
 Q IBX
"RTN","IBCRU2",19,0)
 ;
"RTN","IBCRU2",20,0)
ITPTR(BI,NAME) ; returns pointer to item in source file if found for this billable item type
"RTN","IBCRU2",21,0)
 N IBX S IBX=0 S BI=+$G(BI),NAME=$G(NAME)
"RTN","IBCRU2",22,0)
 I BI=1,NAME'="" S IBX=$$MCCRUTL^IBCRU1(NAME,5)
"RTN","IBCRU2",23,0)
 I BI=2,NAME'="" S IBX=$$CPTIEN^IBACSV(NAME)
"RTN","IBCRU2",24,0)
 I BI=3,NAME'="" S IBX=$$FNDBI("NDC",NAME)
"RTN","IBCRU2",25,0)
 I BI=4,NAME'="" S IBX=$$DRGIEN^IBACSV(NAME)
"RTN","IBCRU2",26,0)
 I BI=9,NAME'="" S IBX=$$FNDBI("MISCELLANEOUS",NAME)
"RTN","IBCRU2",27,0)
 Q +IBX
"RTN","IBCRU2",28,0)
 ;
"RTN","IBCRU2",29,0)
ITFILE(BI,ITEM,EFFDT) ; returns source item pointer (true) if the item is an active source entry for this billable item type
"RTN","IBCRU2",30,0)
 N IBX,IBY S IBX=0,BI=+$G(BI),ITEM=+$G(ITEM),EFFDT=$G(EFFDT) I 'EFFDT S EFFDT=DT
"RTN","IBCRU2",31,0)
 I BI=1,+ITEM S IBY=$G(^DGCR(399.1,ITEM,0)) I IBY'="",+$P(IBY,U,5) S IBX=ITEM
"RTN","IBCRU2",32,0)
 I BI=2,+ITEM,$$CPTACT^IBACSV(ITEM,EFFDT) S IBX=ITEM
"RTN","IBCRU2",33,0)
 I BI=3,+ITEM S IBY=$G(^IBA(363.21,ITEM,0)) I IBY'="",+$P(IBY,U,2)=1 S IBX=ITEM
"RTN","IBCRU2",34,0)
 I BI=4,+ITEM,$$DRGACT^IBACSV(ITEM,EFFDT) S IBX=ITEM
"RTN","IBCRU2",35,0)
 I BI=9,+ITEM S IBY=$G(^IBA(363.21,ITEM,0)) I IBY'="",+$P(IBY,U,2)=9 S IBX=ITEM
"RTN","IBCRU2",36,0)
 Q IBX
"RTN","IBCRU2",37,0)
 ;
"RTN","IBCRU2",38,0)
ITBICHK(CS,ITEM,NAME) ; returns source item pointer (true) if the item is a valid active item for the Charge Set
"RTN","IBCRU2",39,0)
 N IBX,IBBI,IBITEM S IBX=0
"RTN","IBCRU2",40,0)
 S IBBI=$$CSBI^IBCRU3($G(CS))
"RTN","IBCRU2",41,0)
 S IBITEM=$G(ITEM) I 'IBITEM,$G(NAME)'="" S IBITEM=$$ITPTR(IBBI,NAME)
"RTN","IBCRU2",42,0)
 I +IBBI,+IBITEM S IBX=$$ITFILE(+IBBI,+IBITEM)
"RTN","IBCRU2",43,0)
 Q IBX
"RTN","IBCSC4")
0^17^B17622490
"RTN","IBCSC4",1,0)
IBCSC4 ;ALB/MJB - MCCR SCREEN 4 (INPT. EOC) ;27 MAY 88 10:17
"RTN","IBCSC4",2,0)
 ;;2.0;INTEGRATED BILLING;**52,51,210**;21-MAR-94
"RTN","IBCSC4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC4",4,0)
 ;
"RTN","IBCSC4",5,0)
 ;MAP TO DGCRSC4
"RTN","IBCSC4",6,0)
 ;
"RTN","IBCSC4",7,0)
EN I $P(^DGCR(399,IBIFN,0),"^",5)>2 G EN^IBCSC5
"RTN","IBCSC4",8,0)
 I $D(IBASKCOD) K IBASKCOD D CODMUL^IBCU7 I $$BILLCPT^IBCRU4(IBIFN) S DGRVRCAL=1
"RTN","IBCSC4",9,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC4",10,0)
 L ^DGCR(399,IBIFN):1
"RTN","IBCSC4",11,0)
 D ^IBCSCU S IBSR=4,IBSR1="",IBV1="0000000"_$S($$FT^IBCEF(IBIFN)'=2:0,1:1),IBUC="UNSPECIFIED CODE"
"RTN","IBCSC4",12,0)
 S:IBV IBV1="11111111"
"RTN","IBCSC4",13,0)
 D H^IBCSCU F I=1:1:4 S Y="Q"_I_"^IBCVA" D @Y
"RTN","IBCSC4",14,0)
 D INP
"RTN","IBCSC4",15,0)
 S IBBT=$P(IB(0),"^",4)_$P(IB(0),"^",5)_$P(IB(0),"^",6)
"RTN","IBCSC4",16,0)
 D:DGPT(0)]"" DX^IBCSC4A D OCC^IBCVA1
"RTN","IBCSC4",17,0)
 I '$P(DGPT(0),U,6) W !?26,$S('DGPT(0):"No PTF record for this ADMISSION",1:"PTF record status: OPEN")
"RTN","IBCSC4",18,0)
 S J=$P(IB("U"),U,20),J=$S(J=99:"",J="":"",$L(J)=1:".0"_J,1:"."_J)
"RTN","IBCSC4",19,0)
 S Z=1 X IBWW W " Admission  : " S I=$S($P(DGPT(0),U,2)]"":$P(DGPT(0),U,2),1:$P(IBIP,U,2)_J) S:$P(I,".",2)=""&I $P(I,".",2)="2400"
"RTN","IBCSC4",20,0)
 S Y=$$FMTE^XLFDT(I,"1P")
"RTN","IBCSC4",21,0)
 W Y,?49,"Accident Hour: ",$S($P(IB("U"),U,10)=99:IBU,$P(IB("U"),U,10)'="":$P(IB("U"),U,10),1:IBU)
"RTN","IBCSC4",22,0)
 W !?4,"Source     : " S I=$P(^DD(399,159,0),U,3),I=$P($P(I,";",($P(IB("U"),U,9))),":",2) W I
"RTN","IBCSC4",23,0)
 W ?58,"Type: ",$S($P(IB("U"),U,8)=3:"ELECTIVE",$P(IB("U"),U,8)=1:"EMERGENCY",$P(IB("U"),U,8)=2:"URGENT",1:IBU)
"RTN","IBCSC4",24,0)
 S Z=2 X IBWW
"RTN","IBCSC4",25,0)
 W " Discharge  : " S Y=$S($P(IBIP,U,6)>0:$P(IBIP,U,6),1:"") X ^DD("DD") W $S(Y]"":Y,1:IBU)
"RTN","IBCSC4",26,0)
 W !?4,"Status     : ",$S($P(IB("U"),U,12)]""&($D(^DGCR(399.1,(+$P(IB("U"),"^",12)),0))):$P(^(0),"^",1),1:IBU)
"RTN","IBCSC4",27,0)
 N IBPOARR,IBDATE
"RTN","IBCSC4",28,0)
 D SET^IBCSC4D(IBIFN,"",.IBPOARR)
"RTN","IBCSC4",29,0)
 S IBDATE=$$BDATE^IBACSV(+$G(IBIFN)) ; The EVENT DATE of the bill
"RTN","IBCSC4",30,0)
 S Z=3,IBW=1 X IBWW W " Prin. Diag.: " S Y=$$DX(0,IBDATE) W $S(Y'="":$P(Y,U,4)_" - "_$P(Y,U,2),1:IBUN)
"RTN","IBCSC4",31,0)
 F I=1:1:4 S Y=$$DX(+Y,IBDATE) Q:Y=""  W !?4,"Other Diag.: ",$P(Y,U,4)_" - "_$P(Y,U,2)
"RTN","IBCSC4",32,0)
 I +Y S Y=$$DX(+Y,IBDATE) I +Y W !?4,"***There are more diagnoses associated with this bill.***"
"RTN","IBCSC4",33,0)
 ;F I=15:1:18 I $P(IB("C"),U,I)]"" W !?4,"Other Diag.: ",$S($D(^ICD9($P(IB("C"),U,I),0)):$P(^(0),U,3)_" - "_$P(^(0),U,1),1:IBU)
"RTN","IBCSC4",34,0)
 S Z=4,IBW=1,DGPCM=$P(IB(0),U,9) X IBWW W " Cod. Method: ",$S(DGPCM="":IBUN,DGPCM=9:"ICD-9-CM",DGPCM=4:"CPT-4",1:"HCPCS")
"RTN","IBCSC4",35,0)
 D:$D(IBPROC) WRT^IBCSC5
"RTN","IBCSC4",36,0)
 ;I DGPCM="" W !?4,"Pro. Code  : ",IBUN G OCC
"RTN","IBCSC4",37,0)
 ;I $D(IBCPT),DGPCM=4 F I=1:1:3 I $D(IBCPT(I)) W !?4,"CPT Code   : ",$P(^ICPT(IBCPT(I),0),U,2)," - ",$P(^(0),U),?55,"Date: " S Y=$P(IB("C"),U,(I+10)) D DT^DIQ
"RTN","IBCSC4",38,0)
 ;I DGPCM=4 W:'$D(IBCPT) !?4,"Pro. Code  : ",IBUN G OCC
"RTN","IBCSC4",39,0)
 ;I $D(IBICD),DGPCM=9 F I=4:1:6 I $D(IBICD(I)) W !?4,"ICD Code   : ",$S($D(^ICD0(IBICD(I),0)):$E($P(^(0),U,4),1,20)_" - "_$P(^(0),U,1),1:IBUC),?55,"Date: " S Y=$P(IB("C"),U,(I+7)) D DT^DIQ
"RTN","IBCSC4",40,0)
 ;I DGPCM=9 W:'$D(IBICD) !?4,"Pro. Code  : ",IBUN G OCC
"RTN","IBCSC4",41,0)
 ;I $D(IBHC),DGPCM=5 F I=7:1:9 I $D(IBHC(I)) W !?4,"HCFA Code  : ",$P(^ICPT(IBHC(I),0),U,2)," - ",IBHCN(I),?55,"Date: " S Y=$P(IB("C"),U,(I+4)) D DT^DIQ
"RTN","IBCSC4",42,0)
 ;I DGPCM=5 W:'$D(IBHC) !?4,"Pro. Code  : ",IBUN
"RTN","IBCSC4",43,0)
OCC ;I $O(^DGCR(399,IBIFN,"CP",0)) S I=0 F I1=1:1 S I=$O(^DGCR(399,IBIFN,"CP",I)) D:I1>9 MORE Q:'I  W !,?17 S Y=$P(^(I,0),"^",2) D:+Y D^DIQ D OCC1
"RTN","IBCSC4",44,0)
 S Z=$S($P(IB(0),U,5)<3:5,1:6)
"RTN","IBCSC4",45,0)
 S IBW=1 X IBWW W " Pros. Items: " S Y=$$PD^IBCSC5 I 'Y W IBUN
"RTN","IBCSC4",46,0)
 S Z=$S($P(IB(0),U,5)<3:6,1:7) X IBWW
"RTN","IBCSC4",47,0)
 W " Occ. Code  : " F I=1:1:5 I $D(IBO(I)) W:I>1 !?4,"Occ. Code  : ",$E(IBOCN(I),1,27) W:I=1 $E(IBOCN(I),1,27) S Y=IBOCD(I) X ^DD("DD") W ?55,Y S Y=IBOCD2(I) I +Y X ^DD("DD") W " - ",Y
"RTN","IBCSC4",48,0)
 I '$D(IBO) W IBUN
"RTN","IBCSC4",49,0)
 I $D(IBO)=1,IBO="" W IBUN
"RTN","IBCSC4",50,0)
 S Z=$S($P(IB(0),U,5)<3:7,1:8) X IBWW
"RTN","IBCSC4",51,0)
 W " Cond. Code : " F I=1:1:5 I $D(IBCC(I)) W:I>1 !?4,"Cond. Code : ",IBCCN(I) W:I=1 IBCCN(I)
"RTN","IBCSC4",52,0)
 I '$D(IBCC) W IBUN
"RTN","IBCSC4",53,0)
 I $D(IBCC)=1,IBCC="" W IBUN
"RTN","IBCSC4",54,0)
 S Z=$S($P(IB(0),U,5)<3:8,1:9)
"RTN","IBCSC4",55,0)
 X IBWW W " Value Code : " S IBVC=0
"RTN","IBCSC4",56,0)
 I $$FT^IBCEF(IBIFN)'=2 D
"RTN","IBCSC4",57,0)
 . D VC^IBCVA1 I +IBVC S J=1,I=0 F  S I=$O(IBVC(I)) Q:'I  W:J>1 !,?3," Value Code : " W ?17,$E($P(IBVC(I),U,2),1,40),?58,$P(IBVC(I),U,3) S J=J+1
"RTN","IBCSC4",58,0)
 W:'IBVC IBUN K IBVC
"RTN","IBCSC4",59,0)
 D Q^IBCSC4B G ^IBCSCP
"RTN","IBCSC4",60,0)
 Q
"RTN","IBCSC4",61,0)
OCC1 W $P(^DGCR(399,IBIFN,"CP",I,0),"^",3)_" - "_$P($$PRCD^IBCEF1($P(^DGCR(399,IBIFN,"CP",I,0),U)),U),?55,"Date: ",Y
"RTN","IBCSC4",62,0)
 Q
"RTN","IBCSC4",63,0)
 ;IBIP= PTF ptr (399,.08) ^ PTF admiss dt (45,2) or Event dt (399,.03)^ accident hour (399,160) 
"RTN","IBCSC4",64,0)
 ; ^ source of addmis (399,159) ^ typ of addmiss (399,158)
"RTN","IBCSC4",65,0)
 ; ^ PTF disch dt (45,70) or Non-VA disch dt (399,.16) ^ disch status (399,162)
"RTN","IBCSC4",66,0)
 ; ^ dxls (45,79) ^ disch bedsection (399,161)
"RTN","IBCSC4",67,0)
INP F I="C","U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC4",68,0)
 S IBPTF=$P(IB(0),U,8) F I=0,70 S DGPT(I)=$S(IBPTF="":"",$D(^DGPT(IBPTF,I)):^(I),1:"")
"RTN","IBCSC4",69,0)
 F I="C","U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC4",70,0)
 S IBIP=IBPTF_"^"_$S($P(DGPT(0),"^",2)]"":$P(DGPT(0),"^",2),1:$P(IB(0),"^",3))_"^"_$P(IB("U"),"^",10)_"^"_$P(IB("U"),"^",9)_"^"_$P(IB("U"),"^",8)_"^"_$S(+DGPT(70)>0:+DGPT(70),1:$P(IB(0),"^",16))_"^"
"RTN","IBCSC4",71,0)
 S IBIP=IBIP_$P(IB("U"),"^",12)_"^"_$S($D(DGPT(70)):$P(DGPT(70),"^",10),1:"")_"^"_$P(IB("U"),"^",11)
"RTN","IBCSC4",72,0)
 Q
"RTN","IBCSC4",73,0)
SET ;S ^DD(399.0304,0,"ID","WRITE")="N X S X=^(0) W ""   "",$E($P($G(@(U_$P($P(X,U),"";"",2)_+X_"",0)"")),U,$S($P(X,U,1)[""CPT"":2,1:4)),1,30)"
"RTN","IBCSC4",74,0)
 Q
"RTN","IBCSC4",75,0)
 ;
"RTN","IBCSC4",76,0)
DX(ORDER,IBDATE) ; Get next diagnosis data
"RTN","IBCSC4",77,0)
 N IBX
"RTN","IBCSC4",78,0)
 S IBX=""
"RTN","IBCSC4",79,0)
 S ORDER=$O(IBPOARR(ORDER))
"RTN","IBCSC4",80,0)
 I ORDER S IBX=ORDER_U_$$ICD9^IBACSV(+IBPOARR(ORDER),$G(IBDATE))
"RTN","IBCSC4",81,0)
 Q IBX
"RTN","IBCSC4",82,0)
 ;IBCSC4
"RTN","IBCSC4B")
0^18^B22580320
"RTN","IBCSC4B",1,0)
IBCSC4B ;ALB/MJB - MCCR PTF SCREEN (CONT.) ;24 FEB 89  9:52
"RTN","IBCSC4B",2,0)
 ;;2.0;INTEGRATED BILLING;**210**;21-MAR-94
"RTN","IBCSC4B",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC4B",4,0)
 ;
"RTN","IBCSC4B",5,0)
 ;MAP TO DGCRSC4B
"RTN","IBCSC4B",6,0)
 ;
"RTN","IBCSC4B",7,0)
DX Q:$S(IBPTF="":1,'$D(^DGPT(IBPTF,0)):1,1:0)  S IBUC="UNSPECIFIED CODE",IBNC="NO DX CODES ENTERED FOR THIS DATE",IBDXC=0,X="DIAGNOSIS SCREEN" K IBWE,IBWO
"RTN","IBCSC4B",8,0)
 W @IOF,?(40-($L(X)\2)),X,! F I=1:1:79 W "="
"RTN","IBCSC4B",9,0)
 S IBDIA="" I '$D(^UTILITY($J,"IBDX")) W !!," * No DIAGNOSIS CODES in PTF record for this episode of care." D SELD^IBCSC4C G Q
"RTN","IBCSC4B",10,0)
 F I=1:1:13 S IBDIA=$O(^UTILITY($J,"IBDX",IBDIA)) Q:IBDIA=""  D ODD^IBCSC4A S IBDIA=$O(^UTILITY($J,"IBDX",IBDIA)) D:IBDIA]"" EVEN^IBCSC4A D WR D:$Y+6>IOSL ASK Q:IBDIA=""
"RTN","IBCSC4B",11,0)
 S IBDIA="" ; D SELD^IBCSC4C
"RTN","IBCSC4B",12,0)
 G Q
"RTN","IBCSC4B",13,0)
 ;
"RTN","IBCSC4B",14,0)
WR N IBDATE
"RTN","IBCSC4B",15,0)
 S IBDATE=$$PTFDATE^IBACSV(+$G(IBPTF)) ; Date to be used as a "date of service"
"RTN","IBCSC4B",16,0)
 I '$D(IBWE(0)) F B=0:1:5 S IBWE(B)=""
"RTN","IBCSC4B",17,0)
 W !!,"Move: " S Y=$P(IBWO(0),U,2) X ^DD("DD") W $S($P(IBWO(0),U,4)]"":$P(IBWO(0),U,4)_" ",1:""),Y," " W:$P(IBWO(0),"^",3)]"" $E($P(^DIC(42.4,$P(IBWO(0),U,3),0),U),1,12) W " ",$P(IBWO(0),"^",5)
"RTN","IBCSC4B",18,0)
 I IBDIA]"",IBWE(0)]"" W ?43,"Move: " S Y=$P(IBWE(0),U,2) X ^DD("DD") W $S($P(IBWE(0),U,4)]"":$P(IBWE(0),U,4)_" ",1:""),Y," " W:$P(IBWE(0),"^",3)]"" $E($P(^DIC(42.4,$P(IBWE(0),U,3),0),U),1,12) W " ",$P(IBWE(0),"^",5)
"RTN","IBCSC4B",19,0)
 S IBAO=$P(IBWO(0),U,1) I IBAO']"" W:'$D(IBDXY) !,"* ",IBNC S IBDXY=1 F K=1:1:5 S IBWO(K)="" I IBDIA]"" W:K>1 ! D WE Q:IBWO(K)=""&(IBWE(K)="")
"RTN","IBCSC4B",20,0)
 I IBAO]"" F K=1:1:5 Q:IBWO(K)=""&(IBWE(K)="")  D
"RTN","IBCSC4B",21,0)
 . W !
"RTN","IBCSC4B",22,0)
 . I IBWO(K) S X=$$ICD9^IBACSV(+IBWO(K),IBDATE) W IBAO,K," - ",$S(X]"":$J($P(X,U),6)_"  "_$E($P(X,U,3),1,24),1:IBUC)
"RTN","IBCSC4B",23,0)
 . I IBDIA'="" D WE
"RTN","IBCSC4B",24,0)
 Q
"RTN","IBCSC4B",25,0)
WE S IBAE=$P(IBWE(0),U)
"RTN","IBCSC4B",26,0)
 I IBAE="",'$D(IBDXX),IBWE(0)]"" W ?43,"* ",IBNC S (IBWE(1),IBWE(2),IBWE(3),IBWE(4),IBWE(5))="",IBDXX=1
"RTN","IBCSC4B",27,0)
 I IBAE]"",IBWE(K)]"" S X=$$ICD9^IBACSV(+IBWE(K),$G(IBDATE)) W ?43,IBAE,K," - ",$S(X]"":$J($P(X,U),6)_"  "_$E($P(X,U,3),1,24),1:IBUC)
"RTN","IBCSC4B",28,0)
 Q
"RTN","IBCSC4B",29,0)
ASK W !!,"<RETURN> to see more ",$S($D(IBP):"procedure",1:"diagnosis")," codes or '^' to QUIT: " R A:DTIME I '$T!(A["^") S:$D(IBDIA) IBDIA="" S:$D(IBP) IBP="" Q
"RTN","IBCSC4B",30,0)
 I A["?" W !!?4,"Enter <RETURN> to view more ",$S($D(IBP):"operation/procedure",1:"movement dates and diagnosis")," codes",!?4,"or '^' to stop the display." G ASK
"RTN","IBCSC4B",31,0)
 S A=$S($D(IBP):"OPERATION/PROCEDURE",1:"DIAGNOSIS")_" SCREEN (CONT.)" W !,@IOF,?(40-($L(A)\2)),A,! F S=1:1:79 W "="
"RTN","IBCSC4B",32,0)
 Q
"RTN","IBCSC4B",33,0)
PRO Q:'$D(IBPTF)  S IBUC="UNSPECIFIED CODE",IBNC="NO PRO CODES ENTERED FOR THIS DATE",IBOPC=0,X="OPERATION/PROCEDURE SCREEN",IBNOR="Non-O/R Procedure Date: ",IBSD="Surgery Date: "
"RTN","IBCSC4B",34,0)
 K IBWE,IBWO
"RTN","IBCSC4B",35,0)
 W @IOF,?(40-($L(X)\2)),X,! S X="",$P(X,"=",1,79)="" W X
"RTN","IBCSC4B",36,0)
 S IBP="" I '$D(^UTILITY($J,"IB")) W !!," * No PROCEDURE CODES in PTF record for this episode of care." G Q
"RTN","IBCSC4B",37,0)
 F I=1:1:13 S IBP=$O(^UTILITY($J,"IB",IBP)) Q:IBP=""  D ODDP^IBCSC4A S IBP=$O(^UTILITY($J,"IB",IBP)) D:IBP]"" EVENP^IBCSC4A D WRP D:$Y+6>IOSL ASK Q:IBP=""
"RTN","IBCSC4B",38,0)
 S IBP=""
"RTN","IBCSC4B",39,0)
Q K IB3,IB4,IB5,IB6,IB7,IB8,IB9,IBAE,IBAO,IBCT,IBDIA,IBDP,IBDX,IBDXC,IBDXX,IBDXY,IBI,IBNC,IBNOR,IBP,IBPY,IBOP,IBOPC,IBOPX,IBOPY,IBPP,IBPX,IBSD,IBSP,IBWE,IBWO
"RTN","IBCSC4B",40,0)
 K %DT,A,B,DIC,F,I,J,K,M,S,X,Y
"RTN","IBCSC4B",41,0)
 Q
"RTN","IBCSC4B",42,0)
WRP N IBDATE
"RTN","IBCSC4B",43,0)
 S IBDATE=$$PTFDATE^IBACSV(+$G(IBPTF)) ; Date to be used as a "date of service"
"RTN","IBCSC4B",44,0)
 I '$D(IBWE(0)) F B=0:1:5 S IBWE(B)=""
"RTN","IBCSC4B",45,0)
 W !!,$S($P(IBWO(0),U,3)["*":IBNOR,1:IBSD) S Y=$P(IBWO(0),U,2) X ^DD("DD") W Y I IBP]"" W ?43,$S($P(IBWE(0),U,3)["*":IBNOR,1:IBSD) S Y=$P(IBWE(0),U,2) X ^DD("DD") W Y
"RTN","IBCSC4B",46,0)
 S IBAO=$P(IBWO(0),U,1) I IBAO']"" W:'$D(IBOPY) !,"* ",IBNC S IBOPY=1 F K=1:1:5 S IBWO(K)="" I IBP]"" W:K>1 ! D WEP
"RTN","IBCSC4B",47,0)
 I IBAO]"" F K=1:1:5 Q:IBWO(K)']""&(IBWE(K)']"")  S X=$$ICD0^IBACSV(+IBWO(K),IBDATE) W:IBWO(K)]"" !,IBAO,K," - ",$S(X]"":$J($P(X,U,1),6)_"  "_$E($P(X,U,4),1,24),1:IBUC) W:IBWO(K)']"" !,"" D:IBP]"" WEP
"RTN","IBCSC4B",48,0)
 Q
"RTN","IBCSC4B",49,0)
WEP S IBAE=$P(IBWE(0),U,1) I IBAE']"",'$D(IBOPX) W ?43,"* ",IBNC S (IBWE(1),IBWE(2),IBWE(3),IBWE(4),IBWE(5))="",IBOPX=1
"RTN","IBCSC4B",50,0)
 I IBAE]"",IBWE(K)]"" S X=$$ICD0^IBACSV(+IBWE(K),$G(IBDATE)) W ?43,IBAE,K," - ",$S(X]"":$J($P(X,U,1),6)_"  "_$E($P(X,U,4),1,24),1:IBUC)
"RTN","IBCSC4B",51,0)
 Q
"RTN","IBCSC4C")
0^19^B20711361
"RTN","IBCSC4C",1,0)
IBCSC4C ;ALB/MJB - MCCR PTF SCREEN (CONT.) ;24 FEB 9:43
"RTN","IBCSC4C",2,0)
 ;;2.0;INTEGRATED BILLING;**210**;21-MAR-94
"RTN","IBCSC4C",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC4C",4,0)
 ;
"RTN","IBCSC4C",5,0)
 ;MAP TO DGCRSC4C
"RTN","IBCSC4C",6,0)
 ;
"RTN","IBCSC4C",7,0)
SETP S:IBP'>2 IB9=0 D S
"RTN","IBCSC4C",8,0)
 F F=1:1:3 Q:IB9=3  I $D(IBWO(F)),IBWO(F)]"",$P(IBWO(F),U,1)'=IBNC S IB9=IB9+1,IB7(IB9)=IBWO(F)_U_$S($P(IBWO(F),U,2)']"":$P(IBWO(0),U,2),1:"")
"RTN","IBCSC4C",9,0)
 I '$D(IB7(3)) F F=1:1:3 Q:IB9=3  I $D(IBWE(F)),IBWE(F)]"",$P(IBWE(F),U,1)'=IBNC S IB9=IB9+1,IB7(IB9)=IBWE(F)_U_$S($P(IBWE(F),U,2)']"":$P(IBWE(0),U,2),1:"")
"RTN","IBCSC4C",10,0)
 Q:"^^"[$P(IB("C"),U,4,6)!($P(IB("C"),U,4)]"")!($P(IB("C"),U,5)]"")!($P(IB("C"),U,6)]"")
"RTN","IBCSC4C",11,0)
 F F=1:1:3 I $D(IB7(F)),$P(^DGCR(399,IBIFN,"C"),U,(F+3))']"" S $P(^DGCR(399,IBIFN,"C"),U,(F+3))=$P(IB7(F),U,1),$P(^("C"),U,(F+10))=$P(IB7(F),U,2)
"RTN","IBCSC4C",12,0)
 S:$P(^DGCR(399,IBIFN,0),U,9)="" $P(^DGCR(399,IBIFN,0),U,9)=9
"RTN","IBCSC4C",13,0)
 Q
"RTN","IBCSC4C",14,0)
SETD S:IBDIA'>2 IB8=0 D S
"RTN","IBCSC4C",15,0)
 F F=1:1:5 Q:IB8=5  I $D(IBWO(F)),IBWO(F)]"",$P(IBWO(F),U,1)'=IBNC S IB8=IB8+1,IB6(IB8)=$P(IBWO(F),U,1)
"RTN","IBCSC4C",16,0)
 I '$D(IB6(5)) F F=1:1:5 Q:IB8=5  I $D(IBWE(F)),IBWE(F)]"",$P(IBWE(F),U,1)'=IBNC S IB8=IB8+1,IB6(IB8)=$P(IBWE(F),U,1)
"RTN","IBCSC4C",17,0)
 Q:"^^^^"[$P(IB("C"),U,14,18)!($P(IB("C"),U,14)]"")!($P(IB("C"),U,15)]"")!($P(IB("C"),U,16)]"")!($P(IB("C"),U,17)]"")!($P(IB("C"),U,18)]"")
"RTN","IBCSC4C",18,0)
 F F=1:1:5 I $D(IB6(F)) S $P(^DGCR(399,IBIFN,"C"),U,(F+13))=IB6(F)
"RTN","IBCSC4C",19,0)
 Q
"RTN","IBCSC4C",20,0)
SELP D S F I=1:1 W ! Q:$Y+10>IOSL
"RTN","IBCSC4C",21,0)
 N IBZ,IBQ
"RTN","IBCSC4C",22,0)
 S IBQ=0 ; Quit flag
"RTN","IBCSC4C",23,0)
 F I=1:1:3 W !,"ICD PROCEDURE CODE (",I,"): " D  Q:IBQ
"RTN","IBCSC4C",24,0)
 . S IBPX=$P(IB("C"),U,(I+3))
"RTN","IBCSC4C",25,0)
 . I IBPX S IBZ=$$ICD0^IBACSV(+IBPX) W $S(IBZ'="":$J($P(IBZ,U),6),1:IBUC)_"// "
"RTN","IBCSC4C",26,0)
 . R X:DTIME I '$T!(X["^") S IBQ=1 Q
"RTN","IBCSC4C",27,0)
 . D CHP
"RTN","IBCSC4C",28,0)
 . I $D(IB3) D PD
"RTN","IBCSC4C",29,0)
 . D S
"RTN","IBCSC4C",30,0)
 Q
"RTN","IBCSC4C",31,0)
 ;
"RTN","IBCSC4C",32,0)
PD S %DT("A")="      PROCEDURE DATE ("_I_"): ",%DT="AEX" D ^%DT I Y>0 S $P(^DGCR(399,IBIFN,"C"),U,(I+10))=+Y,IB("C")=^DGCR(399,IBIFN,"C") K IB3
"RTN","IBCSC4C",33,0)
 Q
"RTN","IBCSC4C",34,0)
 ; Select Diagnosis codes
"RTN","IBCSC4C",35,0)
SELD D S F I=1:1 W ! Q:$Y+10>IOSL
"RTN","IBCSC4C",36,0)
 N IBZ,IBQ
"RTN","IBCSC4C",37,0)
 S IBQ=0
"RTN","IBCSC4C",38,0)
 F I=1:1:5 W !,"DIAGNOSIS CODE (",I,"): " D  Q:IBQ
"RTN","IBCSC4C",39,0)
 . S IBPY=$P(IB("C"),U,(I+13))
"RTN","IBCSC4C",40,0)
 . I IBPY S IBZ=$$ICD9^IBACSV(+IBPY) W $S(IBZ'="":$J($P(IBZ,U),6),1:IBUC)_"// "
"RTN","IBCSC4C",41,0)
 . R X:DTIME I '$T!(X["^")!((X="")&(IBPY="")) S IBQ=1 Q
"RTN","IBCSC4C",42,0)
 . D CHD,S
"RTN","IBCSC4C",43,0)
 Q
"RTN","IBCSC4C",44,0)
CHP N IBDATE
"RTN","IBCSC4C",45,0)
 I X="?" D 3^IBCSCH1 S I=I-1 Q
"RTN","IBCSC4C",46,0)
 I X="",$P(IB("C"),U,(I+3))]"" Q
"RTN","IBCSC4C",47,0)
 I X["@" W "   ...Deleted" S IB7(I)="",$P(^DGCR(399,IBIFN,"C"),U,(I+3))="",$P(^("C"),U,(I+10))="",$P(IB("C"),U,(I+10))="",IBPX=1 Q
"RTN","IBCSC4C",48,0)
 I X="" S $P(^DGCR(399,IBIFN,"C"),U,(I+3))="",$P(^("C"),U,(I+10))="" Q
"RTN","IBCSC4C",49,0)
 I X?1A1N D P^IBCSC4A S IB5=$S($D(^UTILITY($J,"IB",M,S)):^(S),1:"") S:IB5]"" $P(^DGCR(399,IBIFN,"C"),U,(I+3))=$P(IB5,U,1) D:IB5]"" DT Q:IB5]""  W *7,"  ??" S I=I-1 Q
"RTN","IBCSC4C",50,0)
 I $P(^IBE(350.9,1,1),U,15)'=1 D PAR Q
"RTN","IBCSC4C",51,0)
 S:X["?" X="??"
"RTN","IBCSC4C",52,0)
 S IBI=I
"RTN","IBCSC4C",53,0)
 S IBDATE=$P(^DGCR(399,IBIFN,"C"),U,I+10)
"RTN","IBCSC4C",54,0)
 I 'IBDATE S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBCSC4C",55,0)
 S DIC("S")="N IBZ S IBZ=$G(^(0)) I $$SEXSCR^IBCSC4C(IBZ,$G(DFN)),$$ICD0ACT^IBACSV(+Y,IBDATE)"
"RTN","IBCSC4C",56,0)
 S DIC="^ICD0(" D DIC I Y'>0 S I=IBI-1 Q
"RTN","IBCSC4C",57,0)
 S X=+Y,$P(^DGCR(399,IBIFN,"C"),U,(I+3))=X D PD
"RTN","IBCSC4C",58,0)
 Q
"RTN","IBCSC4C",59,0)
 ;
"RTN","IBCSC4C",60,0)
CHD N IBDATE
"RTN","IBCSC4C",61,0)
 I X="?" D 3^IBCSCH1 S I=I-1 Q
"RTN","IBCSC4C",62,0)
 I X="",$P(IB("C"),U,(I+13))]"" Q
"RTN","IBCSC4C",63,0)
 I X["@" W "   ...Deleted" S IB6(I)="",$P(^DGCR(399,IBIFN,"C"),U,(I+13))="",$P(IB("C"),U,(I+13))="",IBPY=1 Q
"RTN","IBCSC4C",64,0)
 I X="" S $P(^DGCR(399,IBIFN,"C"),U,(I+13))="" Q
"RTN","IBCSC4C",65,0)
 I X?1A1N D D^IBCSC4A S IB4=$S($D(^UTILITY($J,"IBDX",M,S)):^(S),1:"") S:IB4]"" $P(^DGCR(399,IBIFN,"C"),U,(I+13))=$P(IB4,U,1),IB3=1 Q:IB4]""  W *7,"  ??" S I=I-1 Q
"RTN","IBCSC4C",66,0)
 I $P(^IBE(350.9,1,1),U,15)'=1 D PAR Q
"RTN","IBCSC4C",67,0)
 S:X["?" X="??"
"RTN","IBCSC4C",68,0)
 S IBI=I
"RTN","IBCSC4C",69,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN) ; The date of service
"RTN","IBCSC4C",70,0)
 S DIC("S")="N IBZ S IBZ=$G(^(0)) I $$SEXSCR^IBCSC4C(IBZ,$G(DFN)),$$ICD9ACT^IBACSV(+Y,IBDATE)"
"RTN","IBCSC4C",71,0)
 S DIC="^ICD9(" D DIC I Y'>0 S I=IBI-1 Q
"RTN","IBCSC4C",72,0)
 S X=+Y,$P(^DGCR(399,IBIFN,"C"),U,(I+13))=X
"RTN","IBCSC4C",73,0)
 Q
"RTN","IBCSC4C",74,0)
 ;
"RTN","IBCSC4C",75,0)
 ; Check the sex of procedure and the patients
"RTN","IBCSC4C",76,0)
SEXSCR(IBZ,DFN) ;
"RTN","IBCSC4C",77,0)
 N IBCODSEX,IBPTSEX
"RTN","IBCSC4C",78,0)
 S IBCODSEX=$P(IBZ,U,10) ; Sex of the ICD0/ICD9 code, if any
"RTN","IBCSC4C",79,0)
 I IBCODSEX'="M",IBCODSEX'="F" Q 1  ; No assigned sex for the code
"RTN","IBCSC4C",80,0)
 I '$G(DFN) Q 1
"RTN","IBCSC4C",81,0)
 S IBPTSEX=$E($P($G(^DPT(+DFN,0)),U,2)) ; Patient's sex
"RTN","IBCSC4C",82,0)
 I IBPTSEX'="M",IBPTSEX'="F" S IBPTSEX="M" ; Male is default for veterans
"RTN","IBCSC4C",83,0)
 Q IBPTSEX=IBCODSEX
"RTN","IBCSC4C",84,0)
 ;
"RTN","IBCSC4C",85,0)
DT S $P(^DGCR(399,IBIFN,"C"),U,(I+10))=$S($P(IB5,U,2)]"":$P(IB5,U,2),1:$P(^UTILITY($J,"IB",M,1),U,2))
"RTN","IBCSC4C",86,0)
 Q
"RTN","IBCSC4C",87,0)
PAR W:X'["?" "  ??" W !?7,"You may only choose codes found in PTF record!" D 3^IBCSCH1 S I=I-1
"RTN","IBCSC4C",88,0)
 Q
"RTN","IBCSC4C",89,0)
DIC S DIC(0)="EMQ" D ^DIC
"RTN","IBCSC4C",90,0)
 Q
"RTN","IBCSC4C",91,0)
S S:'$D(^DGCR(399,IBIFN,"C")) ^DGCR(399,IBIFN,"C")="" S IB("C")=^DGCR(399,IBIFN,"C")
"RTN","IBCSC4C",92,0)
 Q
"RTN","IBCSC4D")
0^20^B50440659
"RTN","IBCSC4D",1,0)
IBCSC4D ;ALB/ARH - ADD/ENTER DIAGNOSIS ;11/9/93
"RTN","IBCSC4D",2,0)
 ;;2.0;INTEGRATED BILLING;**55,62,91,106,124,51,210**;21-MAR-94
"RTN","IBCSC4D",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC4D",4,0)
 ;
"RTN","IBCSC4D",5,0)
EN ;add/edit diagnosis for a bill, IBIFN required
"RTN","IBCSC4D",6,0)
 N IBINP
"RTN","IBCSC4D",7,0)
 S IBX=$G(^DGCR(399,+IBIFN,0))
"RTN","IBCSC4D",8,0)
 S IBINP=$$INPAT^IBCEF(+IBIFN)
"RTN","IBCSC4D",9,0)
 D DELALL^IBCSC4E(+IBIFN)
"RTN","IBCSC4D",10,0)
 I IBINP D DXINPT^IBCSC4E(IBIFN)
"RTN","IBCSC4D",11,0)
 I 'IBINP D DXOPT(IBIFN)
"RTN","IBCSC4D",12,0)
 S IBDIFN=0 D SET(IBIFN,.IBDXA,.IBPOA) D:+IBDXA DISP(.IBPOA)
"RTN","IBCSC4D",13,0)
E1 S IBDX=$$ASKDX I +IBDX>0 S IBDIFN=+$G(IBDXA(+IBDX)) S:'IBDIFN IBDIFN=$$ADD(+IBDX,IBIFN) I +IBDIFN>0 D EDIT(+IBDIFN) D SET(IBIFN,.IBDXA,.IBPOA) G E1
"RTN","IBCSC4D",14,0)
 ;
"RTN","IBCSC4D",15,0)
 S IBX=$G(^DGCR(399,+IBIFN,0)) I $P(IBX,U,5)<3,$P(IBX,U,27)'=2 S DGRVRCAL=1
"RTN","IBCSC4D",16,0)
EXIT K IBDIFN,IBDXA,IBPOA,IBDX,IBX
"RTN","IBCSC4D",17,0)
 Q
"RTN","IBCSC4D",18,0)
 ;
"RTN","IBCSC4D",19,0)
ASKDX() ;
"RTN","IBCSC4D",20,0)
 N X,Y,IBDATE,IBDTTX
"RTN","IBCSC4D",21,0)
 ;S DIR("A")="Select ICD DIAGNOSIS",DIR(0)="362.3,.01O" D ^DIR K DIR
"RTN","IBCSC4D",22,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBCSC4D",23,0)
 S IBDTTX=$$DAT1^IBOUTL(IBDATE)
"RTN","IBCSC4D",24,0)
 I $G(IBIFN),$$INPAT^IBCEF(IBIFN,1) D
"RTN","IBCSC4D",25,0)
 . N Z S Z=$$EXPAND^IBTRE(399,215,+$G(^DGCR(399,IBIFN,"U2")))
"RTN","IBCSC4D",26,0)
 . W !,$S(Z'="":"",1:"NO ")_"Admitting Diagnosis"_$S(Z'="":": "_Z,1:" found"),!
"RTN","IBCSC4D",27,0)
AD S DIR("??")="^D HELP^IBCSC4D"
"RTN","IBCSC4D",28,0)
 S DIR("?",1)="Enter a diagnosis for this bill.  Duplicates are not allowed. Only codes active on "_IBDTTX_"."
"RTN","IBCSC4D",29,0)
 S DIR("?")="Only diagnosis codes active on "_IBDTTX_", no duplicates for a bill, and bill must not be authorized or cancelled."
"RTN","IBCSC4D",30,0)
 S DIR(0)="PO^80:EAMQ"
"RTN","IBCSC4D",31,0)
 D ^DIR K DIR
"RTN","IBCSC4D",32,0)
 I Y>0,'$D(IBDXA(+Y)),'$$ICD9ACT^IBACSV(+Y,IBDATE) D  G AD
"RTN","IBCSC4D",33,0)
 . W !!,*7,"The Diagnosis code is inactive for the date of service ("_IBDTTX_").",!
"RTN","IBCSC4D",34,0)
 Q Y
"RTN","IBCSC4D",35,0)
 ;
"RTN","IBCSC4D",36,0)
ADD(DX,IFN) ;
"RTN","IBCSC4D",37,0)
 S DIC="^IBA(362.3,",DIC(0)="AQL",DIC("DR")=".02////"_IFN,X=DX K DA,DO D FILE^DICN K DA,DO,DIC,X
"RTN","IBCSC4D",38,0)
 Q Y
"RTN","IBCSC4D",39,0)
 ;
"RTN","IBCSC4D",40,0)
EDIT(IBDXIFN) ;
"RTN","IBCSC4D",41,0)
 S DIDEL=362.3,DIE="^IBA(362.3,",DR=".01;.03",DA=IBDXIFN D ^DIE K DIE,DR,DA,DIC,DIDEL
"RTN","IBCSC4D",42,0)
 ;
"RTN","IBCSC4D",43,0)
 I $D(^IBA(362.3,IBDXIFN,0)),$$FIRSTDX(IBDXIFN) D  G EDITQ
"RTN","IBCSC4D",44,0)
 . N DIE,DR,DA,Y,X,IB0
"RTN","IBCSC4D",45,0)
 . S IB0=^IBA(362.3,IBDXIFN,0)
"RTN","IBCSC4D",46,0)
 . S DIE="^DGCR(399,",DA=+$P(IB0,U,2),DR="215////"_+IB0 D ^DIE
"RTN","IBCSC4D",47,0)
 ;
"RTN","IBCSC4D",48,0)
 ; - if the entry was deleted, remove dangling pointers from #399.0304
"RTN","IBCSC4D",49,0)
 N IBPROC,IBPROCD,IBPIECE,IBHIT
"RTN","IBCSC4D",50,0)
 S (IBHIT,IBPROC)=0
"RTN","IBCSC4D",51,0)
 F  S IBPROC=$O(^DGCR(399,IBIFN,"CP",IBPROC)) Q:'IBPROC  S IBPROCD=$G(^(IBPROC,0)) I IBPROCD]"" D
"RTN","IBCSC4D",52,0)
 .F IBPIECE=11:1:14 I +$P(IBPROCD,"^",IBPIECE)=IBDXIFN S IBHIT=1 D UPD^IBCU72("@",IBPIECE-1)
"RTN","IBCSC4D",53,0)
 I IBHIT W *7,!,"This diagnosis was removed as a procedure diagnosis."
"RTN","IBCSC4D",54,0)
EDITQ Q
"RTN","IBCSC4D",55,0)
 ;
"RTN","IBCSC4D",56,0)
SET(IFN,DXARR,POARR) ;setup arrays of all dx's for bill, array names should be passed by reference
"RTN","IBCSC4D",57,0)
 ;returns: DXARR(DX)=DX IFN, POARR(ORDER)=DX ^ PRINT ORDER,  (DXARR,POARR)=IFN ^ dx count
"RTN","IBCSC4D",58,0)
 ;if a dx does not have a print order then PRINT ORDER=(999+count of dx) so will be in order of entry if no print order
"RTN","IBCSC4D",59,0)
 N CNT,IBX,IBY,IBZ,DIFN,IBC,ARR K DXARR,POARR S IBC="AIFN"_$G(IFN)
"RTN","IBCSC4D",60,0)
 S (CNT,IBX)=0 F  S IBX=$O(^IBA(362.3,IBC,IBX)) Q:'IBX  D
"RTN","IBCSC4D",61,0)
 . S DIFN=$O(^IBA(362.3,IBC,IBX,0)),IBY=$G(^IBA(362.3,DIFN,0)) Q:'IBY
"RTN","IBCSC4D",62,0)
 . S CNT=CNT+1,IBZ=+$P(IBY,U,3) I 'IBZ S IBZ=999+CNT
"RTN","IBCSC4D",63,0)
 . S DXARR(+IBY)=DIFN,ARR(IBZ)=+IBY_"^"_$P(IBY,U,3)
"RTN","IBCSC4D",64,0)
 S (IBX,IBY)=0 F  S IBY=$O(ARR(IBY)) Q:'IBY  S IBX=IBX+1,POARR(IBX)=ARR(IBY)
"RTN","IBCSC4D",65,0)
 S (DXARR,POARR)=$G(IFN)_"^"_CNT
"RTN","IBCSC4D",66,0)
 Q
"RTN","IBCSC4D",67,0)
 ;
"RTN","IBCSC4D",68,0)
DISP(POARR) ;screen display of existing dx's for a bill,
"RTN","IBCSC4D",69,0)
 ;input should be print order array returned by SET^IBCSC4D: POARR(PRINT ORDER)=DX, passed by reference
"RTN","IBCSC4D",70,0)
 N IBX,IBY,IBZ,IBDATE
"RTN","IBCSC4D",71,0)
 S IBDATE=$$BDATE^IBACSV(+$G(IBIFN)) ; The bill date of service
"RTN","IBCSC4D",72,0)
 W !!,?5,"-----------------  Existing Diagnoses for Bill  -----------------",!
"RTN","IBCSC4D",73,0)
 S IBX=0 F  S IBX=$O(POARR(IBX)) Q:'IBX  S IBZ=POARR(IBX),IBY=$$ICD9^IBACSV(+IBZ,IBDATE) D
"RTN","IBCSC4D",74,0)
 . W !,?12,$P(IBY,U),?26,$P(IBY,U,3),?60,$S($P(IBZ,U,2)<1000:"("_$P(IBZ,U,2)_")",1:"")
"RTN","IBCSC4D",75,0)
 W !
"RTN","IBCSC4D",76,0)
 Q
"RTN","IBCSC4D",77,0)
 ;
"RTN","IBCSC4D",78,0)
DISP1(IFN) ;
"RTN","IBCSC4D",79,0)
 I +$G(IFN) N POARR D SET(IFN,"",.POARR),DISP(.POARR)
"RTN","IBCSC4D",80,0)
 Q
"RTN","IBCSC4D",81,0)
HELP ;called for help from dx enter to display existing dx's
"RTN","IBCSC4D",82,0)
 Q:'$G(IBIFN)  N IBX
"RTN","IBCSC4D",83,0)
 D SET(IBIFN,.IBDXA,"") S IBX=$G(^DGCR(399,+IBIFN,0)) I IBX="" Q
"RTN","IBCSC4D",84,0)
 I $P(IBX,U,5)>2 S DFN=$P(IBX,U,2),IBX=$G(^DGCR(399,+IBIFN,"U")) D OPTDX(DFN,$P(IBX,U,1),$P(IBX,U,2),.IBOEDX,.IBDXA),DISPOE(.IBOEDX,.IBDXA)
"RTN","IBCSC4D",85,0)
 D SET(IBIFN,.IBDXA,.IBPOA) D:+IBDXA DISP(.IBPOA)
"RTN","IBCSC4D",86,0)
 Q
"RTN","IBCSC4D",87,0)
 ;
"RTN","IBCSC4D",88,0)
ADD1(IFN) ;does not work, but it should replace ask add, and edit
"RTN","IBCSC4D",89,0)
 ;S DIC="^IBA(362.3,",DIC(0)="EMAQ",D="AIFN"_$G(IFN) D IX^DIC K DA,DO,DIC,D
"RTN","IBCSC4D",90,0)
 Q
"RTN","IBCSC4D",91,0)
 ;
"RTN","IBCSC4D",92,0)
 ; ******************************************************************************************
"RTN","IBCSC4D",93,0)
 ;
"RTN","IBCSC4D",94,0)
DXOPT(IBIFN) ; display and ask user to select PCE diagnosis
"RTN","IBCSC4D",95,0)
 N IBDXA,IBOEDX,IBLIST,DFN,IBX
"RTN","IBCSC4D",96,0)
 D SET(IBIFN,.IBDXA,"")
"RTN","IBCSC4D",97,0)
 S DFN=$P($G(^DGCR(399,+IBIFN,0)),U,2),IBX=$G(^DGCR(399,+IBIFN,"U"))
"RTN","IBCSC4D",98,0)
 D OPTDX(DFN,$P(IBX,U,1),$P(IBX,U,2),.IBOEDX,.IBDXA),DISPOE(.IBOEDX,.IBDXA)
"RTN","IBCSC4D",99,0)
 I +$P($G(IBOEDX),U,2) D NEWDX(+IBOEDX) I $D(IBLIST) D ADDNEW(IBIFN,IBLIST,.IBOEDX)
"RTN","IBCSC4D",100,0)
 Q
"RTN","IBCSC4D",101,0)
 ;
"RTN","IBCSC4D",102,0)
OPTDX(DFN,DT1,DT2,ARRAY,IBDXE) ; get diagnosis from PCE for encounters within date range
"RTN","IBCSC4D",103,0)
 ; ARRAY(X)= DX ^ ORDER ^ OUTPATIENT ENCOUNTER (409.68) ^ DATE/TIME ^ TRUE IF NON-BILL ^ NON-BILL MESS ^ CLINIC
"RTN","IBCSC4D",104,0)
 N IBDT,IBOE,IBDX,IBDXN,IBDXA,IBDXB,IBCNT,IBCNT1,ARR,IBI,IBJ,IBK,IBVAL,IBCBK
"RTN","IBCSC4D",105,0)
 K ARRAY
"RTN","IBCSC4D",106,0)
 S (IBCNT,IBCNT1)=0,DT1=$G(DT1)-.0001,DT2=$S(+$G(DT2):DT2,1:9999999)+.7999
"RTN","IBCSC4D",107,0)
 ;
"RTN","IBCSC4D",108,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=DT1,IBVAL("EDT")=DT2
"RTN","IBCSC4D",109,0)
 S IBCBK="D OEDX^IBCU81(Y,.IBDXA,.IBDXB)"
"RTN","IBCSC4D",110,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBCSC4D",111,0)
 ;
"RTN","IBCSC4D",112,0)
 S (IBCNT,IBCNT1,IBI)=0 F  S IBI=$O(IBDXA(IBI)) Q:'IBI  D
"RTN","IBCSC4D",113,0)
 . S IBJ=0 F  S IBJ=$O(IBDXA(IBI,IBJ)) Q:'IBJ  D
"RTN","IBCSC4D",114,0)
 .. S IBK=0 F  S IBK=$O(IBDXA(IBI,IBJ,IBK)) Q:'IBK  D
"RTN","IBCSC4D",115,0)
 ... S IBDXN=0 F  S IBDXN=$O(IBDXA(IBI,IBJ,IBK,IBDXN)) Q:'IBDXN  D
"RTN","IBCSC4D",116,0)
 .... S IBDX=IBDXA(IBI,IBJ,IBK,IBDXN) I $D(ARR(+IBDX))!(+$P(IBDX,U,5)&(+$G(IBDXB(+IBDX)))) Q
"RTN","IBCSC4D",117,0)
 .... S IBCNT=IBCNT+1 I '$D(IBDXE(+IBDX)) S IBCNT1=IBCNT1+1
"RTN","IBCSC4D",118,0)
 .... S ARRAY(IBCNT)=IBDX S ARR(+IBDX)=""
"RTN","IBCSC4D",119,0)
 S ARRAY=IBCNT_"^"_IBCNT1 K IBDXA,IBDXB,ARR
"RTN","IBCSC4D",120,0)
 Q
"RTN","IBCSC4D",121,0)
 ;
"RTN","IBCSC4D",122,0)
NEWDX(IBX) ; user select PCE diagnosis to add to bill
"RTN","IBCSC4D",123,0)
 Q:'$G(IBX)  N X,Y,DIR,DIRUT K IBLIST W !
"RTN","IBCSC4D",124,0)
NEWDX1 S DIR("?",1)="Enter the number preceding the Diagnosis you want added to the bill.",DIR("?",2)="Multiple entries may be added separated by commas or ranges separated by a dash."
"RTN","IBCSC4D",125,0)
 S DIR("?")="The diagnosis will be added to the bill with a print order corresponding to its position in this list."
"RTN","IBCSC4D",126,0)
 S DIR("A")="SELECT NEW DIAGNOSES TO ADD THE BILL"
"RTN","IBCSC4D",127,0)
 S DIR(0)="LO^1:"_+IBX D ^DIR K DIR G:'Y!$D(DIRUT) NEWDXE
"RTN","IBCSC4D",128,0)
 S IBLIST=Y
"RTN","IBCSC4D",129,0)
 ;
"RTN","IBCSC4D",130,0)
 S DIR("A")="YOU HAVE SELECTED "_IBLIST_" TO BE ADDED TO THE BILL IS THIS CORRECT",DIR("B")="YES"
"RTN","IBCSC4D",131,0)
 S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST G NEWDXE
"RTN","IBCSC4D",132,0)
 I 'Y G NEWDX1
"RTN","IBCSC4D",133,0)
NEWDXE Q
"RTN","IBCSC4D",134,0)
 ;
"RTN","IBCSC4D",135,0)
ADDNEW(IBIFN,LIST,IBOEA) ; add selected PCE diagnosis to bill
"RTN","IBCSC4D",136,0)
 Q:'LIST  N IBI,IBX,IBDX,IBDT,IBQ,IBY,IBPIFN,IBZ
"RTN","IBCSC4D",137,0)
 F IBI=1:1 S IBX=$P(LIST,",",IBI) Q:'IBX  I $D(IBOEA(IBX)) D
"RTN","IBCSC4D",138,0)
 . S IBDX=+IBOEA(IBX) I $D(^IBA(362.3,"AIFN"_IBIFN,IBDX)) Q
"RTN","IBCSC4D",139,0)
 . I $$ADD(IBDX,IBIFN) W "."
"RTN","IBCSC4D",140,0)
 Q
"RTN","IBCSC4D",141,0)
 ;
"RTN","IBCSC4D",142,0)
DISPOE(OEARR,EXARR) ; display outpatient PCE diagnosis
"RTN","IBCSC4D",143,0)
 N IBCNT,IBDX,IBX,IBY,IBDATE
"RTN","IBCSC4D",144,0)
 W @IOF,!,"============================= DIAGNOSIS SCREEN ==============================",!
"RTN","IBCSC4D",145,0)
 S IBDATE=$$BDATE^IBACSV(+$G(IBIFN)) ; The bills date of service
"RTN","IBCSC4D",146,0)
 S IBCNT=0 F  S IBCNT=$O(OEARR(IBCNT)) Q:'IBCNT  D
"RTN","IBCSC4D",147,0)
 . S IBY=OEARR(IBCNT),IBDX=$$ICD9^IBACSV(+IBY,IBDATE)
"RTN","IBCSC4D",148,0)
 . S IBX="" I $D(EXARR(+OEARR(IBCNT))) S IBX="*"
"RTN","IBCSC4D",149,0)
 . W !,$J(IBCNT,2),")",?5,IBX,?6,$P(IBDX,U),?14,$E($P(IBDX,U,3),1,19)
"RTN","IBCSC4D",150,0)
 . I +$P(IBY,U,7) W ?35,$E($P($G(^SC(+$P(IBY,U,7),0)),U,1),1,15)
"RTN","IBCSC4D",151,0)
 . I $P(IBY,U,2)'="" W ?52,$E($$EXPAND^IBTRE(9000010.07,.12,$P(IBY,U,2)),1,3)
"RTN","IBCSC4D",152,0)
 . I $P(IBY,U,4)'="" W ?57,$$FMTE^XLFDT($E($P(IBY,U,4),1,12),2)
"RTN","IBCSC4D",153,0)
 . I $P(IBY,U,6)'="" W ?72,$E($P(IBY,U,6),1,7)
"RTN","IBCSC4D",154,0)
 Q
"RTN","IBCSC4D",155,0)
 ;
"RTN","IBCSC4D",156,0)
DISPID ; Display the Associated Dx and Rx # for a procedure in the identifier.
"RTN","IBCSC4D",157,0)
 ;  Input:  Naked reference to the 0th node of an entry in the
"RTN","IBCSC4D",158,0)
 ;          Procedures (#304) sub-file of the Bill/Claims (#399) file.
"RTN","IBCSC4D",159,0)
 N I,X,IBY,Z
"RTN","IBCSC4D",160,0)
 S X=^(0),IBY=Y
"RTN","IBCSC4D",161,0)
 S I=$$PRCNM^IBCSCH1($P(X,U,1),$P(X,U,2)) W " ",$E($P(I,U,2)_$J("",27),1,27)
"RTN","IBCSC4D",162,0)
 S Z=$O(^DGCR(399,DA(1),"RC","ACP",+IBY,0))
"RTN","IBCSC4D",163,0)
 I Z S Z=$P($G(^DGCR(399,DA(1),"RC",Z,0)),U,11) W $E("  Rx: "_$S(Z:$P($G(^IBA(362.4,+Z,0)),U),1:"Missing")_$J("",14),1,14)
"RTN","IBCSC4D",164,0)
 I +$P(X,U,11) S I=+$G(^IBA(362.3,+$P(X,U,11),0)) W "  Dx 1: ",$P($$ICD9^IBACSV(+I),U)
"RTN","IBCSC4D",165,0)
 Q
"RTN","IBCSC4D",166,0)
FIRSTDX(DA) ; Called by trigger cross reference #2 on file 362.3,.03
"RTN","IBCSC4D",167,0)
 ; DA is the ien of the entry in file 362.3
"RTN","IBCSC4D",168,0)
 ; Check if the corresponding bill is for an inpatient episode, the
"RTN","IBCSC4D",169,0)
 ; admitting dx for the corresponding bill is null and the dx being
"RTN","IBCSC4D",170,0)
 ; entered is the first for the bill.  If this is all true, admitting
"RTN","IBCSC4D",171,0)
 ; dx should be set to the dx.
"RTN","IBCSC4D",172,0)
 ;
"RTN","IBCSC4D",173,0)
 N OK,Z
"RTN","IBCSC4D",174,0)
 S Z=$G(^IBA(362.3,DA,0)),OK=0
"RTN","IBCSC4D",175,0)
 I $$INPAT^IBCEF(+$P(Z,U,2)),$P($G(^DGCR(399,+$P(Z,U,2),"U2")),U)="",'$O(^IBA(362.3,"AO",+$P(Z,U,2),+$P(Z,U,3)),-1) S OK=1
"RTN","IBCSC4D",176,0)
 Q OK
"RTN","IBCSC4D",177,0)
 ;
"RTN","IBCSC4E")
0^21^B39148561
"RTN","IBCSC4E",1,0)
IBCSC4E ;ALB/ARH - ADD/ENTER PTF/OE DIAGNOSIS ;3/2/94
"RTN","IBCSC4E",2,0)
 ;;2.0;INTEGRATED BILLING;**8,106,121,124,210**;21-MAR-94
"RTN","IBCSC4E",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC4E",4,0)
 ;
"RTN","IBCSC4E",5,0)
DXINPT(IBIFN) ; display and ask user to select PTF diagnosis
"RTN","IBCSC4E",6,0)
 N IBLIST,IBPTFDX
"RTN","IBCSC4E",7,0)
 D PTFDSP(IBIFN),PTFASK I $D(IBLIST) D PTFADD(IBIFN,IBLIST)
"RTN","IBCSC4E",8,0)
 K ^TMP($J,"IBDX")
"RTN","IBCSC4E",9,0)
 Q
"RTN","IBCSC4E",10,0)
 ;
"RTN","IBCSC4E",11,0)
PTFASK ;
"RTN","IBCSC4E",12,0)
 D PTF Q:$G(IBPTFDX)'>0  N X,Y,DIR,DIRUT K IBLIST W !
"RTN","IBCSC4E",13,0)
PTFASK1 S DIR("A")="SELECT DIAGNOSIS FROM THE PTF RECORD TO INCLUDE ON THE BILL"
"RTN","IBCSC4E",14,0)
 S DIR("?",1)="Enter the alphanumeric preceding the diagnosis you want added to the bill.",DIR("?",2)=""
"RTN","IBCSC4E",15,0)
 S DIR("?",3)="To enter more than one separate them by a comma or within a movement use a"
"RTN","IBCSC4E",16,0)
 S DIR("?",4)="range separated by a dash.  * indicates the diagnosis is already on the bill."
"RTN","IBCSC4E",17,0)
 S DIR("?")="The print order for each diagnosis will be determined by the order in this list."
"RTN","IBCSC4E",18,0)
 S DIR(0)="FO^^D ITPTF^IBCSC4E" D ^DIR K DIR Q:$D(DIRUT)!(Y="")
"RTN","IBCSC4E",19,0)
 ;
"RTN","IBCSC4E",20,0)
 S X=Y D ITPTF S IBLIST=X,DIR("A",1)="YOU HAVE SELECTED "_X_" TO BE ADDED TO THE BILL",DIR("A")="IS THIS CORRECT",DIR("B")="YES"
"RTN","IBCSC4E",21,0)
 S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST Q
"RTN","IBCSC4E",22,0)
 I 'Y K IBLIST G PTFASK1
"RTN","IBCSC4E",23,0)
 Q
"RTN","IBCSC4E",24,0)
 ;
"RTN","IBCSC4E",25,0)
PTF ;
"RTN","IBCSC4E",26,0)
 Q:'$D(^TMP($J,"IBDX","S"))  N IBX,IBY,IBZ,IBORD,IBNUM K IBPTFDX S IBORD="",IBPTFDX=0
"RTN","IBCSC4E",27,0)
 S IBX="" F  S IBX=$O(^TMP($J,"IBDX","S",IBX)) Q:IBX=""  D
"RTN","IBCSC4E",28,0)
 . S IBZ=+$G(^TMP($J,"IBDX","S",IBX)) Q:'IBZ
"RTN","IBCSC4E",29,0)
 . S IBORD=$E(IBX) Q:IBORD'?1A  S IBNUM=+$E(IBX,2,999) Q:IBNUM'>0
"RTN","IBCSC4E",30,0)
 . I IBNUM>$G(IBPTFDX(IBORD)) S IBPTFDX(IBORD)=IBNUM
"RTN","IBCSC4E",31,0)
 . I '$D(^IBA(362.3,"AIFN"_+$G(IBIFN),+IBZ)) S IBPTFDX=IBPTFDX+1
"RTN","IBCSC4E",32,0)
 Q
"RTN","IBCSC4E",33,0)
 ;
"RTN","IBCSC4E",34,0)
ITPTF ;
"RTN","IBCSC4E",35,0)
 N IBI,IB1,IB2,IB3,IBJ,IBX,IBY,IBZ,IBA
"RTN","IBCSC4E",36,0)
 S IBA="",IBX=X
"RTN","IBCSC4E",37,0)
 F IBI=1:1 S IBY=$P(IBX,",",IBI) Q:IBY=""  D  Q:'$D(X)  S X=IBA
"RTN","IBCSC4E",38,0)
 . I IBY["-" S IBZ=$P(IBY,"-",1),IB2=$P(IBY,"-",2) D  Q:'$D(X)
"RTN","IBCSC4E",39,0)
 .. I $E(IBZ,1)'=$E(IB2,1) K X Q
"RTN","IBCSC4E",40,0)
 .. S IBY="",IB1=$E(IBZ,2,999),IB2=$E(IB2,2,999),IBZ=$E(IBZ,1) I +IB2'>+IB1 K X Q
"RTN","IBCSC4E",41,0)
 .. F IBJ=IB1:1:IB2 S IBY=IBY_IBZ_IBJ_"-" I IBJ>$G(IBPTFDX(IBZ)) Q
"RTN","IBCSC4E",42,0)
 . F IBJ=1:1 S IB1=$P(IBY,"-",IBJ) Q:IB1=""  S IB2=$E(IB1,1),IB3=$E(IB1,2,99) D  Q:'$D(X)
"RTN","IBCSC4E",43,0)
 .. I IB1'?1U1.3N K X Q
"RTN","IBCSC4E",44,0)
 .. I IB2=""!'IB3 K X Q
"RTN","IBCSC4E",45,0)
 .. I '$D(IBPTFDX(IB2)) K X Q
"RTN","IBCSC4E",46,0)
 .. I IB3>+$G(IBPTFDX(IB2)) K X Q
"RTN","IBCSC4E",47,0)
 .. S IBA=IBA_IB2_IB3_","
"RTN","IBCSC4E",48,0)
 Q
"RTN","IBCSC4E",49,0)
 ;
"RTN","IBCSC4E",50,0)
PTFADD(IBIFN,LIST) ;
"RTN","IBCSC4E",51,0)
 Q:'$D(^TMP($J,"IBDX","S"))!($G(LIST)="")!('$G(IBIFN))  N IBX,IBY,IBI,IBCD,IBDX
"RTN","IBCSC4E",52,0)
 F IBI=1:1 S IBCD=$P(LIST,",",IBI) Q:IBCD=""  D
"RTN","IBCSC4E",53,0)
 . S IBDX=+$G(^TMP($J,"IBDX","S",IBCD)) Q:'IBDX
"RTN","IBCSC4E",54,0)
 . I ($$ICD9^IBACSV(+IBDX)'=""),'$D(^IBA(362.3,"AIFN"_IBIFN,+IBDX)) I $$ADD^IBCSC4D(+IBDX,IBIFN) W "."
"RTN","IBCSC4E",55,0)
 Q
"RTN","IBCSC4E",56,0)
 ;
"RTN","IBCSC4E",57,0)
PTFDSP(IBIFN) ; display PTF diagnosis within date range of the bill
"RTN","IBCSC4E",58,0)
 ; Output:  ^TMP($J,"IBDX") as defined by PTFDXDT^IBCSC4F   and
"RTN","IBCSC4E",59,0)
 ;          ^TMP($J,"IBDX","S",x) = DIAGNOSIS w/x=selection identifer for a dx
"RTN","IBCSC4E",60,0)
 N IB0,IBPTF,IBTF,IBU,IBFDT,IBTDT,IBDSCH,IBW,IBC,IBA,IBN,IBCNT,IBMCNT,IBMDT,IBMV,IBDT,IBLN,IBLABEL,IBDXCNT,IBI
"RTN","IBCSC4E",61,0)
 N IBDX,IBID,IBON,IBY,IBMDRG,X,IBDATE
"RTN","IBCSC4E",62,0)
 ;
"RTN","IBCSC4E",63,0)
 K ^TMP($J,"IBDX") S IBW=41
"RTN","IBCSC4E",64,0)
 ;
"RTN","IBCSC4E",65,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN) ; The Event Date of the bill
"RTN","IBCSC4E",66,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBPTF=$P(IB0,U,8),IBTF=$P(IB0,U,6) Q:'$G(IBPTF)
"RTN","IBCSC4E",67,0)
 S IBU=$G(^DGCR(399,+IBIFN,"U")),IBFDT=+IBU,IBTDT=$P(IBU,U,2) Q:$P(IB0,U,5)>2
"RTN","IBCSC4E",68,0)
 ;
"RTN","IBCSC4E",69,0)
 D PTFDXDT^IBCSC4F(IBPTF,IBFDT,IBTDT,IBTF) S IBDSCH=$P(+$P($G(^TMP($J,"IBDX","M")),U,3),".")
"RTN","IBCSC4E",70,0)
 ;
"RTN","IBCSC4E",71,0)
 F IBN="M","D" S (IBCNT,IBMCNT,IBMDT)="" F  S IBMDT=$O(^TMP($J,"IBDX",IBN,IBMDT)) Q:'IBMDT  S IBMCNT=IBMCNT+1 D
"RTN","IBCSC4E",72,0)
 . S IBMV=$G(^TMP($J,"IBDX",IBN,IBMDT)),IBDT=+IBMV,IBMDRG=$P(IBMV,U,4)
"RTN","IBCSC4E",73,0)
 . I IBN="M" S IBC=0,IBLABEL="Move",IBA=$C(64+IBMCNT) I 'IBDT S IBDT="D/C"
"RTN","IBCSC4E",74,0)
 . I IBN="D" S IBC=41,IBLABEL="Discharge",IBA="X" I 'IBDT S IBDT="NOT DISCHARGED"
"RTN","IBCSC4E",75,0)
 . ;
"RTN","IBCSC4E",76,0)
 . S IBLN=IBLABEL_": "_$S(+IBDT:$P($$FMTE^XLFDT(+IBDT,2),"@",1),1:IBDT)
"RTN","IBCSC4E",77,0)
 . S IBLN=IBLN_" "_$E($P($G(^DIC(42.4,+$P(IBMV,U,2),0)),U,1),1,12)
"RTN","IBCSC4E",78,0)
 . S IBLN=IBLN_" "_$J("",(29-$L(IBLN)))_$S(+$P(IBMV,U,3):"<SC>",1:"<NSC>")
"RTN","IBCSC4E",79,0)
 . ;
"RTN","IBCSC4E",80,0)
 . S IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW)
"RTN","IBCSC4E",81,0)
 . S IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBC)_IBLN
"RTN","IBCSC4E",82,0)
 . ;
"RTN","IBCSC4E",83,0)
 . I '$O(^TMP($J,"IBDX",IBN,IBMDT,"")) S IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBC)_"  No DX Codes Entered For "_IBLABEL
"RTN","IBCSC4E",84,0)
 . ;
"RTN","IBCSC4E",85,0)
 . S (IBDXCNT,IBI)="" F  S IBI=$O(^TMP($J,"IBDX",IBN,IBMDT,IBI)) Q:'IBI  D
"RTN","IBCSC4E",86,0)
 .. S IBDX=^TMP($J,"IBDX",IBN,IBMDT,IBI),IBY=$$ICD9^IBACSV(+IBDX,IBDATE)
"RTN","IBCSC4E",87,0)
 .. S IBDXCNT=IBDXCNT+1,IBID=IBA_IBDXCNT,IBON=$S($O(^IBA(362.3,"AIFN"_IBIFN,+IBDX,"")):"*",1:" ")
"RTN","IBCSC4E",88,0)
 .. ;
"RTN","IBCSC4E",89,0)
 .. S IBLN=" "_IBON_IBID_" - "_$P(IBY,U,1)_$J("",(7-$L($P(IBY,U,1))))_$E($P(IBY,U,3),1,23)
"RTN","IBCSC4E",90,0)
 .. S IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBC)_IBLN
"RTN","IBCSC4E",91,0)
 .. S ^TMP($J,"IBDX","S",IBID)=IBDX
"RTN","IBCSC4E",92,0)
 . ;
"RTN","IBCSC4E",93,0)
 . I 'IBMDRG,IBN="M" S IBLN="   *** No DRG for Charges ***",IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBC)_IBLN
"RTN","IBCSC4E",94,0)
 . I +IBMDRG S IBLN=$P($$DRG^IBACSV(+IBMDRG,IBDATE),U,1)_" - "_$E($G(^ICD(+IBMDRG,1,1,0)),1,30),IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBC)_IBLN
"RTN","IBCSC4E",95,0)
 ;
"RTN","IBCSC4E",96,0)
 I +IBDSCH,IBTDT<IBDSCH S IBCNT=2,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBW)_"Discharge: "_$$FMTE^XLFDT(+$P(IBDSCH,"."),2)_" Not In Bill Range"
"RTN","IBCSC4E",97,0)
 I 'IBDSCH,IBTDT<DT S IBCNT=2,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBW)_"Discharge:  NOT DISCHARGED"
"RTN","IBCSC4E",98,0)
 ;
"RTN","IBCSC4E",99,0)
 W @IOF,"=============================== Diagnosis Screen ==============================="
"RTN","IBCSC4E",100,0)
 S IBI="" F  S IBI=$O(X(IBI)) Q:'IBI  W !,$E(X(IBI),1,80)
"RTN","IBCSC4E",101,0)
 Q
"RTN","IBCSC4E",102,0)
 ;
"RTN","IBCSC4E",103,0)
DELALL(IBIFN) ; ask/delete all diagnosis on a bill, including all CPT associated Diagnosis
"RTN","IBCSC4E",104,0)
 Q:'$O(^IBA(362.3,"AIFN"_+$G(IBIFN),0))
"RTN","IBCSC4E",105,0)
 ;
"RTN","IBCSC4E",106,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y,DIK W !
"RTN","IBCSC4E",107,0)
 S DIR("?")="Enter Yes to delete all Diagnosis currently defined for a bill, including any CPT Associated Diagnosis.",DIR("??")="^D DISP1^IBCSC4D("_IBIFN_")"
"RTN","IBCSC4E",108,0)
 S DIR("A")="DELETE ALL DIAGNOSIS ON BILL, INCLUDING CPT ASSOCIATED DIAGNOSIS"
"RTN","IBCSC4E",109,0)
 S DIR(0)="YO",DIR("B")="NO" D ^DIR K DIR Q:Y'=1
"RTN","IBCSC4E",110,0)
 ;
"RTN","IBCSC4E",111,0)
 N IBPROC,IBPROCD,IBXRF,IBDX,IBDXI,DIE,DIC,DA,DR
"RTN","IBCSC4E",112,0)
 S IBPROC=0 F  S IBPROC=$O(^DGCR(399,IBIFN,"CP",IBPROC)) Q:'IBPROC  D
"RTN","IBCSC4E",113,0)
 . S IBPROCD=$G(^DGCR(399,IBIFN,"CP",IBPROC,0)) I "^^^"[$P(IBPROCD,U,11,14) Q
"RTN","IBCSC4E",114,0)
 . S DIE="^DGCR(399,"_IBIFN_",""CP"",",DA=IBPROC,DA(1)=IBIFN,DR="10///@;11///@;12///@;13///@" D ^DIE K DA,DIE,DR
"RTN","IBCSC4E",115,0)
 ;
"RTN","IBCSC4E",116,0)
 S IBXRF="AIFN"_+IBIFN
"RTN","IBCSC4E",117,0)
 S IBDX=0 F  S IBDX=$O(^IBA(362.3,IBXRF,IBDX)) Q:'IBDX  D
"RTN","IBCSC4E",118,0)
 . S IBDXI=0 F  S IBDXI=$O(^IBA(362.3,IBXRF,IBDX,IBDXI)) Q:'IBDXI  D
"RTN","IBCSC4E",119,0)
 .. S DIK="^IBA(362.3,",DA=IBDXI D ^DIK K DIK,DA
"RTN","IBCSC4E",120,0)
 W " .... deleted"
"RTN","IBCSC4E",121,0)
 Q
"RTN","IBCSC5")
0^22^B17506811
"RTN","IBCSC5",1,0)
IBCSC5 ;ALB/MJB - MCCR SCREEN 5 (OPT. EOC) ;27 MAY 88 10:15
"RTN","IBCSC5",2,0)
 ;;2.0;INTEGRATED BILLING;**52,125,51,210**;21-MAR-94
"RTN","IBCSC5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC5",4,0)
 ;
"RTN","IBCSC5",5,0)
 ;MAP TO DGCRSC5
"RTN","IBCSC5",6,0)
 ;
"RTN","IBCSC5",7,0)
EN I $$INPAT^IBCEF(IBIFN) G ^IBCSC4
"RTN","IBCSC5",8,0)
 I $D(IBASKCOD) K IBASKCOD D CODMUL^IBCU7 I $$BILLCPT^IBCRU4(IBIFN) S DGRVRCAL=1
"RTN","IBCSC5",9,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC5",10,0)
 L ^DGCR(399,IBIFN):1
"RTN","IBCSC5",11,0)
 D ^IBCSCU S IBSR=5,IBSR1="",IBV1="10000000"_$S($$FT^IBCEF(IBIFN)'=2:0,1:1) F I="U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"") S:IBV IBV1="111111111"
"RTN","IBCSC5",12,0)
 D H^IBCSCU
"RTN","IBCSC5",13,0)
 S IBPTF=$P(IB(0),U,8),IBBT=$P(IB(0),"^",4)_$P(IB(0),"^",5)_$P(IB(0),"^",6)
"RTN","IBCSC5",14,0)
 D EN4^IBCVA1
"RTN","IBCSC5",15,0)
 S Z=1,IBW=1 X IBWW W " Event Date : " S Y=$P(IB(0),U,3) D DT^DIQ
"RTN","IBCSC5",16,0)
 ;S Z=2,IBW=1 X IBWW W " Prin. Diag.: ",$S('$D(^DGCR(399,IBIFN,"C")):IBU,$P(^DGCR(399,IBIFN,"C"),U,10)'="":$P(^DGCR(399,IBIFN,"C"),U,10),1:IBU)
"RTN","IBCSC5",17,0)
 N IBPOARR D SET^IBCSC4D(IBIFN,"",.IBPOARR)
"RTN","IBCSC5",18,0)
 S Z=2,IBW=1 X IBWW W " Prin. Diag.: " S Y=$$DX^IBCSC4(0) W $S(Y'="":$P(Y,U,4)_" - "_$P(Y,U,2),$P(IB(0),U,19)=2:IBU,1:IBUN)
"RTN","IBCSC5",19,0)
 F I=1:1:4 S Y=$$DX^IBCSC4(+Y) Q:Y=""  W !?4,"Other Diag.: ",$P(Y,U,4)_" - "_$P(Y,U,2)
"RTN","IBCSC5",20,0)
 I +Y S Y=$$DX^IBCSC4(+Y) I +Y W !?4,"***There are more diagnoses associated with this bill.***"
"RTN","IBCSC5",21,0)
 ;S Z=2,IBW=1 X IBWW W " Prin. Diag.: ",$S($D(^ICD9(+$P(IB("C"),U,14),0)):$P(^(0),U,3)_" - "_$P(^(0),U,1),$P(IB(0),U,19)=2:IBU,1:IBUN)
"RTN","IBCSC5",22,0)
 ;F I=15:1:18 I $P(IB("C"),U,I)]"" W !?4,"Other Diag.: ",$S($D(^ICD9($P(IB("C"),U,I),0)):$P(^(0),U,3)_" - "_$P(^(0),U,1),1:IBU)
"RTN","IBCSC5",23,0)
OP S Z=3,IBW=1 X IBWW W " OP Visits  : " F I=0:0 S I=$O(^DGCR(399,IBIFN,"OP",I)) Q:'I  S Y=I X ^DD("DD") W:$X>67 !?17 W Y_", "
"RTN","IBCSC5",24,0)
 S:$D(^DGCR(399,"OP")) DGOPV=1 I '$O(^DGCR(399,IBIFN,"OP",0)) W IBU
"RTN","IBCSC5",25,0)
 S Z=4,IBW=1 X IBWW W " Cod. Method: ",$S($P(IB(0),U,9)="":IBUN,$P(IB(0),U,9)=9:"ICD-9-CM",$P(IB(0),U,9)=4:"CPT-4",1:"HCPCS")
"RTN","IBCSC5",26,0)
 D WRT:$D(IBPROC)
"RTN","IBCSC5",27,0)
 ;I $D(IBCPT),$P(IB(0),U,9)=4 F I=1:1:3 I $D(IBCPT(I)) W !?4,"CPT Code   : ",$P(^ICPT(IBCPT(I),0),U,2)," - ",$P(^(0),U),?55,"Date: " S Y=$P(^DGCR(399,IBIFN,"C"),U,I+10) D DT^DIQ
"RTN","IBCSC5",28,0)
 ;I $D(IBICD),$P(IB(0),U,9)=9 F I=4:1:6 I $D(IBICD(I)) W !?4,"ICD Code   : ",$E($P(^ICD0(IBICD(I),0),U,4),1,20)," - ",$P(^(0),"^"),?55,"Date: " S Y=$P(^DGCR(399,IBIFN,"C"),U,I+7) D DT^DIQ G:'$D(IBICD(I+1)) OCC
"RTN","IBCSC5",29,0)
 ;I $D(IBHC),$P(IB(0),U,9)=5 F I=7:1:9 I $D(IBHC(I)) W !?4,"HCFA Code  : ",$P(^ICPT(IBHC(I),0),U,2)," - ",IBHCN(I),?55,"Date: " S Y=$P(^DGCR(399,IBIFN,"C"),U,I+4) D DT^DIQ G:'$D(IBHC(I+1)) OCC
"RTN","IBCSC5",30,0)
 S Z=5,IBW=1 X IBWW W " Rx. Refills: " S Y=$$RX I 'Y W IBUN
"RTN","IBCSC5",31,0)
OCC G OCC^IBCSC4
"RTN","IBCSC5",32,0)
 W !?4,"Opt. Code  : ",IBUN
"RTN","IBCSC5",33,0)
 G OCC^IBCSC4
"RTN","IBCSC5",34,0)
 Q
"RTN","IBCSC5",35,0)
MORE W !?4,*7,"***There are more procedures associated with this bill.***" S I=0
"RTN","IBCSC5",36,0)
 Q
"RTN","IBCSC5",37,0)
WRT ;  -write out procedures codes on screen
"RTN","IBCSC5",38,0)
 N IBDATE
"RTN","IBCSC5",39,0)
 S IBDATE=$$BDATE^IBACSV($G(IBIFN))
"RTN","IBCSC5",40,0)
 S J=0 F I=1:1 S J=$O(IBPROC(J)) Q:'J  D  I I>6 D MORE Q
"RTN","IBCSC5",41,0)
 .S X=$$PRCD^IBCEF1($P(IBPROC(J),U),1,IBDATE)
"RTN","IBCSC5",42,0)
 .I IBPROC(J)["ICD" W !?4,"ICD Code   : ",$E($P(X,U,3),1,28)_" - "_$P(X,U,2)
"RTN","IBCSC5",43,0)
 .I IBPROC(J)["CPT" W !?4,"CPT Code   : " D
"RTN","IBCSC5",44,0)
 .. N Z
"RTN","IBCSC5",45,0)
 .. S Z=$P(X,"^",3)_" "_$P(X,"^",2)_$S($P(IBPROC(J),U,15):"-"_$$MODLST^IBEFUNC2($P(IBPROC(J),U,15)),1:"")
"RTN","IBCSC5",46,0)
 .. I $L(Z)>40 S Z=" "_$P(X,"^",2)_$S($P(IBPROC(J),U,15):"-"_$$MODLST^IBEFUNC2($P(IBPROC(J),U,15)),1:""),Z=$E($P(X,U,3),1,40-$L(Z))_Z
"RTN","IBCSC5",47,0)
 .. W Z
"RTN","IBCSC5",48,0)
 .I $P(IB(0),U,19)=2 S Y=+$P(IBPROC(J),U,11) S:+Y Y=+$G(^IBA(362.3,+Y,0)) W ?58,$P($$ICD9^IBACSV(Y,IBDATE),U) S Y=$P(IBPROC(J),U,2) D D^DIQ W ?67,Y Q
"RTN","IBCSC5",49,0)
 .S Y=$P(IBPROC(J),"^",2) D D^DIQ W ?67,Y
"RTN","IBCSC5",50,0)
 Q
"RTN","IBCSC5",51,0)
 ;
"RTN","IBCSC5",52,0)
MOD(IBM,PUNC) ; Returns modifier list from comma delimited ien's in string IBM
"RTN","IBCSC5",53,0)
 ; PUNC = Punctuation to use as first character of output
"RTN","IBCSC5",54,0)
 N IBMOD,Q
"RTN","IBCSC5",55,0)
 S IBMOD=""
"RTN","IBCSC5",56,0)
 F Q=1:1:$L(IBM,",") I $P(IBM,",",Q)'="" S IBMOD=IBMOD_$S(IBMOD'="":",",1:"")_$P($$MOD^ICPTMOD($P(IBM,",",Q),"I"),U,2)
"RTN","IBCSC5",57,0)
 I IBMOD'="" S IBMOD=$G(PUNC)_IBMOD
"RTN","IBCSC5",58,0)
 Q IBMOD
"RTN","IBCSC5",59,0)
 ;
"RTN","IBCSC5",60,0)
PD() ;prints prosthetic device in external form, returns 0 if there are none
"RTN","IBCSC5",61,0)
 N IBX,IBY,IBZ,IBN,X S X=0 S IBX=0 F  S IBX=$O(^IBA(362.5,"AIFN"_IBIFN,IBX)) Q:'IBX  D  Q:X>5
"RTN","IBCSC5",62,0)
 . S IBY=0 F  S IBY=$O(^IBA(362.5,"AIFN"_IBIFN,IBX,IBY)) Q:'IBY  S IBZ=$G(^IBA(362.5,IBY,0)) I IBZ'="" D  Q:X>5
"RTN","IBCSC5",63,0)
 .. S X=X+1 I X>5 W !,?17,"*** There are more Pros. Items associated with this bill.***" Q
"RTN","IBCSC5",64,0)
 .. ;S IBN=$G(^RMPR(661,+$P(IBZ,U,3),0)) W:X'=1 ! W ?17,$E($$PIN^IBCSC5B(+IBN),1,35)," - ",$P(IBN,U,1),?65,$$FMTE^XLFDT(+IBZ)
"RTN","IBCSC5",65,0)
 .. S IBN=$$PIN^IBCSC5B(+$P(IBZ,U,3)) W:X'=1 ! W ?17,$E($P(IBN,U,2),1,35)," - ",$P(IBN,U,1),?65,$$FMTE^XLFDT(+IBZ)
"RTN","IBCSC5",66,0)
 Q X
"RTN","IBCSC5",67,0)
 ;
"RTN","IBCSC5",68,0)
RX() ;prints RX REFILLS in external form, returns 0 if there are none
"RTN","IBCSC5",69,0)
 N IBX,IBY,IBZ,IBN,X S X=0 S IBX="" F  S IBX=$O(^IBA(362.4,"AIFN"_IBIFN,IBX)) Q:IBX=""  D  Q:X>5
"RTN","IBCSC5",70,0)
 . S IBY=0 F  S IBY=$O(^IBA(362.4,"AIFN"_IBIFN,IBX,IBY)) Q:'IBY  S IBZ=$G(^IBA(362.4,IBY,0)) I IBZ'="" D  Q:X>5
"RTN","IBCSC5",71,0)
 .. S X=X+1 I X>5 W !,?17,"*** There are more Rx. Refills associated with this bill.***" Q
"RTN","IBCSC5",72,0)
 .. S IBN=$G(^PSDRUG(+$P(IBZ,U,4),0)) W:X'=1 ! W ?17,$P(IBN,U,1),?65,$$FMTE^XLFDT(+$P(IBZ,U,3))
"RTN","IBCSC5",73,0)
 Q X
"RTN","IBCSC5",74,0)
 ;
"RTN","IBCSC5",75,0)
 ;IBCSC5
"RTN","IBCSC61")
0^42^B7703598
"RTN","IBCSC61",1,0)
IBCSC61 ;ALB/MJB - MCCR SCREEN UTILITY ;20 JUN 88 10:58
"RTN","IBCSC61",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,51,210**;21-MAR-94
"RTN","IBCSC61",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC61",4,0)
 ;
"RTN","IBCSC61",5,0)
 ;MAP TO IBCSC61
"RTN","IBCSC61",6,0)
 ;
"RTN","IBCSC61",7,0)
REV I I>1 W !?4,"Rev. Code",?16,": "
"RTN","IBCSC61",8,0)
 N IBNAME S IBNAME=$E($$NAME($P(IBREVC(I),U,10),$P(IBREVC(I),U,11)),1,17)
"RTN","IBCSC61",9,0)
 S DGRCD=$S($D(^DGCR(399.2,+IBREVC(I),0)):^(0),1:""),DGRCD=$P(DGRCD,"^",1)_"-"_$S(IBNAME'="":IBNAME,1:$E($P(DGRCD,"^",2),1,17))
"RTN","IBCSC61",10,0)
 I $P(IBREVC(I),"^",6) S DGRCD=DGRCD_$J("",21-$L(DGRCD))_"  "_$P($$CPT^ICPTCOD(+$P(IBREVC(I),"^",6)),U,2)
"RTN","IBCSC61",11,0)
 I '$P(IBREVC(I),U,6),$P(IBREVC,U,11) S DGRCD=DGRCD_$J("",21-$L(DGRCD))_" *"_$P($$CPT^ICPTCOD(+$P(IBREVC(I),"^",11)),U,2)
"RTN","IBCSC61",12,0)
 S DGRCD=DGRCD_$J("",28-$L(DGRCD))
"RTN","IBCSC61",13,0)
 I (+$P(IBREVC(I),"^",3)>1)!($P(IBREVC(I),U,10)'=4) S DGRCD=DGRCD_$J($P(IBREVC(I),"^",3),3)
"RTN","IBCSC61",14,0)
 S X=$S($P(IBREVC(I),"^",4)]"":$P(IBREVC(I),"^",4),1:IBU) I X'=IBU S X2="2$" D COMMA^%DTC
"RTN","IBCSC61",15,0)
 W DGRCD,$J("",32-$L(DGRCD)),X
"RTN","IBCSC61",16,0)
 I $P(IBREVC(I),"^",5)]"",$D(^DGCR(399.1,$P(IBREVC(I),"^",5),0)) W ?60," ",$E($P(^DGCR(399.1,$P(IBREVC(I),"^",5),0),"^"),1,16)
"RTN","IBCSC61",17,0)
 I IBREVC<10,$P(IBREVC(I),U,9)'="",$$FT^IBCEF(IBIFN)=3 S X=$P(IBREVC(I),U,9),X2="2$" D COMMA^%DTC W !,?50,X S IBREVC=IBREVC+1 W ?64,"(Non-Covered)"
"RTN","IBCSC61",18,0)
 Q
"RTN","IBCSC61",19,0)
 ;
"RTN","IBCSC61",20,0)
CHARGE S (IBCH,IBUCH)=0 F I=1:1 Q:'$D(IBREVC(I))  S IBCH=IBCH+($P(IBREVC(I),U,4)),IBUCH=IBUCH+$P(IBREVC(I),U,9)
"RTN","IBCSC61",21,0)
 I IB("U1")]"" S X=$P(IB("U1"),"^",1),X1=$P(IB("U1"),"^",2),IBCH=X-X1
"RTN","IBCSC61",22,0)
 Q
"RTN","IBCSC61",23,0)
 ;
"RTN","IBCSC61",24,0)
OFFSET S IBOFFC="" W !?4,"OFFSET",?16,": " S X=$S(IB("U1")']"":0,1:+$P(IB("U1"),U,2)),X2="2$" S:X IBOFFC=$P(IB("U1"),U,3) D COMMA^%DTC
"RTN","IBCSC61",25,0)
 W X,"  [",$S($L(IBOFFC):IBOFFC,'$P(X,"$",2):"NO OFFSET RECORDED",1:"OFFSET DESCRIPTION UNSPECIFIED"),"]"
"RTN","IBCSC61",26,0)
 D CHARGE W !?4,"BILL TOTAL",?16,": " S X=$S('$D(IBCH):0,1:+IBCH),X2="2$" D COMMA^%DTC W X
"RTN","IBCSC61",27,0)
 K IBOFFC
"RTN","IBCSC61",28,0)
 Q
"RTN","IBCSC61",29,0)
 ;
"RTN","IBCSC61",30,0)
NAME(TYPE,ITEM) ; if rx or pros or DRG or unassociated return name of the item
"RTN","IBCSC61",31,0)
 N IBNAME S IBNAME=""
"RTN","IBCSC61",32,0)
 I $G(TYPE)=3,+$G(ITEM) S IBNAME=$P($G(^PSDRUG(+$P($G(^IBA(362.4,+ITEM,0)),U,4),0)),U,1)
"RTN","IBCSC61",33,0)
 I $G(TYPE)=5,+$G(ITEM) S IBNAME=$P($$PIN^IBCSC5B(+$P($G(^IBA(362.5,+ITEM,0)),U,3)),U,2)
"RTN","IBCSC61",34,0)
 I $G(TYPE)=6,+$G(ITEM) S IBNAME=$P($$DRG^IBACSV(+ITEM),U,1)
"RTN","IBCSC61",35,0)
 I $G(TYPE)=9,+$G(ITEM) S IBNAME=$P($G(^IBA(363.21,+ITEM,0)),U,1)
"RTN","IBCSC61",36,0)
 Q IBNAME
"RTN","IBCSC61",37,0)
 ;IBCSC61
"RTN","IBCSC82")
0^23^B15409772
"RTN","IBCSC82",1,0)
IBCSC82 ;ALB/MJB - MCCR SCREEN 8 (UB-92 BILL SPECIFIC INFO) ;27 MAY 88 10:20
"RTN","IBCSC82",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210**;21-MAR-94
"RTN","IBCSC82",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC82",4,0)
 ;
"RTN","IBCSC82",5,0)
EN S IBCUBFT=$$FT^IBCU3(IBIFN) I IBCUBFT=2 K IBCUBFT G ^IBCSC8H ;hcfa 1500
"RTN","IBCSC82",6,0)
 ;
"RTN","IBCSC82",7,0)
 D ^IBCSCU S IBSR=8,IBSR1=2,IBV1="000000" S:IBV IBV1="111111" F I="U","U1",0,"UF3","UF31","U2","TX" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC82",8,0)
 N IBZ,IBPRV
"RTN","IBCSC82",9,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCSC82",10,0)
 K IB("PRV")
"RTN","IBCSC82",11,0)
 S IBZ=0 F  S IBZ=$O(IBPRV(IBZ)) Q:'IBZ  I $O(IBPRV(IBZ,0))!$D(IBPRV(IBZ,"NOTOPT")) M IB("PRV",IBZ)=IBPRV(IBZ)
"RTN","IBCSC82",12,0)
 ;
"RTN","IBCSC82",13,0)
 D H^IBCSCU
"RTN","IBCSC82",14,0)
 S Z=1,IBW=1 X IBWW W " Bill Remark       : ",$S($P(IB("U1"),U,8)]"":$P(IB("U1"),U,8),1:IBUN)
"RTN","IBCSC82",15,0)
 S IBZ="",IBZ=$S($P(IB("UF3"),U,4)]"":"Pri: "_$P(IB("UF3"),U,4),1:"")_$S($P(IB("UF3"),U,5)'="":"  Sec: "_$P(IB("UF3"),U,5),1:"")_$S($P(IB("UF3"),U,6)'="":" Ter: "_$P(IB("UF3"),U,6),1:"")
"RTN","IBCSC82",16,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC82",17,0)
 W !,?3," ICN/DCN(s)        : ",IBZ
"RTN","IBCSC82",18,0)
 S IBZ="",IBZ=$S($P(IB("U"),U,13)]"":"Pri: "_$P(IB("U"),U,13),1:"")_$S($P(IB("U2"),U,8)'="":"  Sec: "_$P(IB("U2"),U,8),1:"")_$S($P(IB("U2"),U,9)'="":"  Ter: "_$P(IB("U2"),U,9),1:"")
"RTN","IBCSC82",19,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC82",20,0)
 W !,?3," Tx Auth. Code(s)  : ",IBZ
"RTN","IBCSC82",21,0)
 W !,?3," Admitting Dx      : " S IBX=$$ICD9^IBACSV(+IB("U2"),$$BDATE^IBACSV(IBIFN)) W $S(IBX'="":$P(IBX,U)_" - "_$P(IBX,U,3),'$$INPAT^IBCEF(IBIFN):IBUN,1:IBU)
"RTN","IBCSC82",22,0)
 I $P(IB(0),U,5)>2 W !,?3," Admission Source  : " S IBX=$$EXTERNAL^DILFD(399,159,,$P(IB("U"),U,9)) W $S(IBX'="":IBX,1:IBU) ;Outpatient only
"RTN","IBCSC82",23,0)
 S Z=2,IBW=1 X IBWW
"RTN","IBCSC82",24,0)
 W " Providers         : ",$S('$O(IB("PRV",0)):IBU,1:"")
"RTN","IBCSC82",25,0)
 I $D(IB("PRV")) D
"RTN","IBCSC82",26,0)
 . N Z,IBT,IBQ
"RTN","IBCSC82",27,0)
 . S IBZ=0
"RTN","IBCSC82",28,0)
 . F  S IBZ=$O(IB("PRV",IBZ)) Q:'IBZ  D
"RTN","IBCSC82",29,0)
 .. N A,A1
"RTN","IBCSC82",30,0)
 .. S IBQ=""
"RTN","IBCSC82",31,0)
 .. W !,?5,"- "
"RTN","IBCSC82",32,0)
 .. S A=$$EXPAND^IBTRE(399.0222,.01,IBZ)
"RTN","IBCSC82",33,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,4)'="" S A1=" ("_$E($P(IB("PRV",IBZ,1),U,4),1,3)_")",A=$E(A,1,15-$L(A1))_A1
"RTN","IBCSC82",34,0)
 .. W $E(A_$J("",15),1,15),": "
"RTN","IBCSC82",35,0)
 .. I '$P($G(IB("PRV",IBZ,1)),U,3),$P($G(IB("PRV",IBZ,1)),U)="" W IBU Q
"RTN","IBCSC82",36,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)'="" W:'$G(IB("PRV",IBZ)) $E($P(IB("PRV",IBZ,1),U)_$J("",20),1,20) W:$G(IB("PRV",IBZ)) "(OLD PROV DATA) "_$P(IB("PRV",IBZ,1),U)
"RTN","IBCSC82",37,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)="",$P($G(IB("PRV",IBZ)),U)'="" W $E($P(IB("PRV",IBZ),U)_$J("",20),1,20)
"RTN","IBCSC82",38,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,3) F Z=1:1:3 D
"RTN","IBCSC82",39,0)
 ... I Z=1,$G(IB("PRV",IBZ,1,1))="",$P($G(IB("PRV",IBZ)),U,2)'="" S IBQ=IBQ_$S($P($G(IB("PRV",IBZ)),U,2)'="":"[P]"_$P($G(IB("PRV",IBZ)),U,2),1:"") Q
"RTN","IBCSC82",40,0)
 ... I $G(^DGCR(399,IBIFN,"I"_Z))'="" D
"RTN","IBCSC82",41,0)
 .... N IBID
"RTN","IBCSC82",42,0)
 .... S IBID=$S($G(IB("PRV",IBZ,1,Z))'="":IB("PRV",IBZ,1,Z),"34"'[IBZ:"",1:"??MISSING??")
"RTN","IBCSC82",43,0)
 .... S IBQ=IBQ_$S(IBID'="":" ["_$E("PST",Z)_"]"_IBID,1:"")
"RTN","IBCSC82",44,0)
 .. I $L(IBQ) W $E(IBQ,1,36)
"RTN","IBCSC82",45,0)
 ;
"RTN","IBCSC82",46,0)
 K IB("PRV")
"RTN","IBCSC82",47,0)
 S Z=3,IBW=1 X IBWW W " Form Locator 2    : ",$S($P(IB("UF3"),U,1)]"":$P(IB("UF3"),U,1),1:IBUN)
"RTN","IBCSC82",48,0)
 W !,?3," Form Locator 11   : ",$S($P(IB("UF3"),U,2)]"":$P(IB("UF3"),U,2),1:IBUN)
"RTN","IBCSC82",49,0)
 S Z=4,IBW=1 X IBWW W " Form Locator 31   : ",$S($P(IB("UF3"),U,3)]"":$P(IB("UF3"),U,3),1:IBUN)
"RTN","IBCSC82",50,0)
 S Z=5,IBW=1 X IBWW W " Form Locator 56   : ",$S($P(IB("UF3"),U,7)]"":$P(IB("UF3"),U,7),1:IBUN)
"RTN","IBCSC82",51,0)
 W !,?3," Form Locator 78   : ",$S($P(IB("UF31"),U,2)]"":$P(IB("UF31"),U,2),1:IBUN)
"RTN","IBCSC82",52,0)
 S Z=6,IBW=1 X IBWW W " Force To Print?   : " S IBZ=$$EXTERNAL^DILFD(399,27,,+$P(IB("TX"),U,8)) W $S(IBZ'="":IBZ,'$$TXMT^IBCEF4(IBIFN):"NOT TRANSMITTABLE",1:IBU)
"RTN","IBCSC82",53,0)
 S Z=7,IBW=1 X IBWW
"RTN","IBCSC82",54,0)
 W " Provider ID Maint  : (Edit Provider ID information)"
"RTN","IBCSC82",55,0)
 G ^IBCSCP
"RTN","IBCSC82",56,0)
Q Q
"RTN","IBCSC82",57,0)
 ;IBCSC8
"RTN","IBCSC8H")
0^24^B22782863
"RTN","IBCSC8H",1,0)
IBCSC8H ;ALB/ARH - MCCR SCREEN 8 (BILL SPECIFIC INFO) HCFA 1500 ;4/21/92
"RTN","IBCSC8H",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,207,210**;21-MAR-94
"RTN","IBCSC8H",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC8H",4,0)
 ; HCFA 1500 screen 8
"RTN","IBCSC8H",5,0)
 ;
"RTN","IBCSC8H",6,0)
 ; MAP TO DGCRSC8H
"RTN","IBCSC8H",7,0)
 ;
"RTN","IBCSC8H",8,0)
EN D ^IBCSCU S IBSR=8,IBSR1="H",IBV1="0000000" S:IBV IBV1="1111111" F I="U","U1","UF2","UF3","U2","M","TX",0 S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC8H",9,0)
 N IBZ,IBPRV,IBDATE
"RTN","IBCSC8H",10,0)
 ;
"RTN","IBCSC8H",11,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN) ; Date of service for the bill
"RTN","IBCSC8H",12,0)
 S IBPRV=""
"RTN","IBCSC8H",13,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCSC8H",14,0)
 K IB("PRV")
"RTN","IBCSC8H",15,0)
 S IBZ=0 F  S IBZ=$O(IBPRV(IBZ)) Q:'IBZ  I $O(IBPRV(IBZ,0))!$D(IBPRV(IBZ,"NOTOPT")) M IB("PRV",IBZ)=IBPRV(IBZ)
"RTN","IBCSC8H",16,0)
 ;
"RTN","IBCSC8H",17,0)
 D H^IBCSCU
"RTN","IBCSC8H",18,0)
 S Z=1,IBW=1 X IBWW W " Unable To Work From: " S Y=$P(IB("U"),U,16) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
"RTN","IBCSC8H",19,0)
 W !?4,"Unable To Work To  : " S Y=$P(IB("U"),U,17) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
"RTN","IBCSC8H",20,0)
 S Z=2,IBW=1 X IBWW W " Admitting Dx       : " S IBZ=$$ICD9^IBACSV(+IB("U2"),IBDATE) W $S(IBZ'="":$P(IBZ,U)_" - "_$P(IBZ,U,3),1:IBUN)
"RTN","IBCSC8H",21,0)
 S IBZ="",IBZ=$S($P(IB("UF3"),U,4)]"":"Pri: "_$P(IB("UF3"),U,4),1:"")_$S($P(IB("UF3"),U,5)'="":"  Sec: "_$P(IB("UF3"),U,5),1:"")_$S($P(IB("UF3"),U,6)'="":" Ter: "_$P(IB("UF3"),U,6),1:"")
"RTN","IBCSC8H",22,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC8H",23,0)
 W !,?4,"ICN/DCN(s)         : ",IBZ
"RTN","IBCSC8H",24,0)
 S IBZ=$$CKPROV^IBCEU(IBIFN,3)
"RTN","IBCSC8H",25,0)
 S IBZ="",IBZ=$S($P(IB("U"),U,13)]"":"Pri: "_$P(IB("U"),U,13),1:"")_$S($P(IB("U2"),U,8)'="":"  Sec: "_$P(IB("U2"),U,8),1:"")_$S($P(IB("U2"),U,9)'="":"  Ter: "_$P(IB("U2"),U,9),1:"")
"RTN","IBCSC8H",26,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC8H",27,0)
 W !?4,"Tx Auth. Code(s)   : ",IBZ
"RTN","IBCSC8H",28,0)
 S Z=3,IBW=1 X IBWW
"RTN","IBCSC8H",29,0)
 W " Providers          : ",$S('$O(IB("PRV",0)):IBU,1:"")
"RTN","IBCSC8H",30,0)
 I $D(IB("PRV")) D  ; at least 1 provider found
"RTN","IBCSC8H",31,0)
 . N IBQ,A,A1
"RTN","IBCSC8H",32,0)
 . S IBZ=0
"RTN","IBCSC8H",33,0)
 . F  S IBZ=$O(IB("PRV",IBZ)) Q:'IBZ  D
"RTN","IBCSC8H",34,0)
 .. S IBQ=""
"RTN","IBCSC8H",35,0)
 .. W !,?5,"- "
"RTN","IBCSC8H",36,0)
 .. S A=$$EXPAND^IBTRE(399.0222,.01,IBZ)
"RTN","IBCSC8H",37,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,4)'="" S A1=" ("_$E($P(IB("PRV",IBZ,1),U,4),1,3)_")",A=$E(A,1,16-$L(A1))_A1
"RTN","IBCSC8H",38,0)
 .. W $E(A_$J("",16),1,16),": "
"RTN","IBCSC8H",39,0)
 .. I '$P($G(IB("PRV",IBZ,1)),U,3),$P($G(IB("PRV",IBZ,1)),U)="" W IBU Q
"RTN","IBCSC8H",40,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)'="" W:'$G(IB("PRV",IBZ)) $E($P(IB("PRV",IBZ,1),U)_$J("",16),1,16) W:$G(IB("PRV",IBZ)) "(OLD BOX 31 DATA) "_$P(IB("PRV",IBZ,1),U)
"RTN","IBCSC8H",41,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)="",$P($G(IB("PRV",IBZ)),U)'="" W $E($P(IB("PRV",IBZ),U)_$J("",16),1,16)
"RTN","IBCSC8H",42,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,3) F Z=1:1:3 D
"RTN","IBCSC8H",43,0)
 ... I Z=1,$G(IB("PRV",IBZ,1,1))="",$P($G(IB("PRV",IBZ)),U,2)'="" S IBQ=IBQ_"[P]"_$P($G(IB("PRV",IBZ)),U,2) Q
"RTN","IBCSC8H",44,0)
 ... I $G(^DGCR(399,IBIFN,"I"_Z))'="" D
"RTN","IBCSC8H",45,0)
 .... N IBID
"RTN","IBCSC8H",46,0)
 .... S IBID=$S($G(IB("PRV",IBZ,1,Z))'="":IB("PRV",IBZ,1,Z),"34"'[IBZ:"",1:"??MISSING??")
"RTN","IBCSC8H",47,0)
 .... S IBQ=IBQ_$S(IBID'="":" ["_$E("PST",Z)_"]"_IBID,1:"")
"RTN","IBCSC8H",48,0)
 .. I $L(IBQ) W $E(IBQ,1,39)
"RTN","IBCSC8H",49,0)
 ;
"RTN","IBCSC8H",50,0)
 K IB("PRV")
"RTN","IBCSC8H",51,0)
 ;
"RTN","IBCSC8H",52,0)
 S Z=4,IBW=1 X IBWW
"RTN","IBCSC8H",53,0)
 W " Non-VA Facility    : " S IBZ=$$EXPAND^IBTRE(399,232,+$P(IB("U2"),U,10))
"RTN","IBCSC8H",54,0)
 W $S(IBZ'="":IBZ,$$PSRV^IBCEU(IBIFN):IBU,1:IBUN)
"RTN","IBCSC8H",55,0)
 S Z=5,IBW=1 X IBWW
"RTN","IBCSC8H",56,0)
 W " Form Locator 19    : " S IBZ=$P($G(^DGCR(399,IBIFN,"UF31")),U,3) W $S(IBZ'="":IBZ,1:IBUN)
"RTN","IBCSC8H",57,0)
 I $P(IB("U2"),U,14)'="" W !,?4,"Homebound          : ",$$EXPAND^IBTRE(399,236,$P(IB("U2"),U,14))
"RTN","IBCSC8H",58,0)
 I $P(IB("U2"),U,15)'="" W !,?4,"Date Last Seen     : ",$$EXPAND^IBTRE(399,237,$P(IB("U2"),U,15))
"RTN","IBCSC8H",59,0)
 I $P(IB("U2"),U,16)'="" W !,?4,"Spec Prog Indicator: " S IBZ=$$EXPAND^IBTRE(399,238,$P(IB("U2"),U,16)) W $S(IBZ'="":IBZ,$$WNRBILL^IBEFUNC(IBIFN):"31",1:"")
"RTN","IBCSC8H",60,0)
 S Z=6,IBW=1 X IBWW
"RTN","IBCSC8H",61,0)
 W " Print Main Facility Box 32: ",$S($P($G(^IBE(350.9,1,0)),U,2)'=$P($G(^DG(40.8,+$P(IB(0),U,22),0)),U,7):"[DOES NOT APPLY]",$P(IB("UF2"),U,2):$$EXPAND^IBTRE(399,401,$P(IB("UF2"),U,2)),1:IBUN)
"RTN","IBCSC8H",62,0)
 W !,?4,"Force To Print?    : " S IBZ=$$EXTERNAL^DILFD(399,27,,+$P(IB("TX"),U,8)) W $S(IBZ'=""&($P(IB("TX"),U,8)'=""):IBZ,'$$TXMT^IBCEF4(IBIFN):"[DOES NOT APPLY]",1:IBZ)
"RTN","IBCSC8H",63,0)
 S Z=7,IBW=1 X IBWW
"RTN","IBCSC8H",64,0)
 W " Provider ID Maint  : (Edit Provider ID information)"
"RTN","IBCSC8H",65,0)
 G ^IBCSCP
"RTN","IBCSC8H",66,0)
Q Q
"RTN","IBCSC8H",67,0)
 ;
"RTN","IBCSC8H",68,0)
WRT1(IBCRED) ; Write credentials mismatch
"RTN","IBCSC8H",69,0)
 W !,*7,"  **Warning** Credentials differ from those found in NEW PERSON or IB NON VA",!,$J("",14),"BILLING PROVIDER file (",$S(IBCRED="":"none",1:IBCRED),")"
"RTN","IBCSC8H",70,0)
 W !,$J("",14),"Changes will print local, but only credentials on file transmit"
"RTN","IBCSC8H",71,0)
 Q
"RTN","IBCSC8H",72,0)
 ;
"RTN","IBCSC8H",73,0)
WRT2(IBSEQ,DIPA) ; Message that care unit is needed
"RTN","IBCSC8H",74,0)
 W !,"  **",$P("Primary^Secondary^Tertiary",U,IBSEQ),DIPA("T1"),$$DISP^IBCEP3($P(DIPA("CU1"),U,2),2),DIPA("T2")
"RTN","IBCSC8H",75,0)
 Q
"RTN","IBCSC8H",76,0)
 ;
"RTN","IBCSC8H",77,0)
SETT(DIPA) ; Sets DIPA("T1") and DIPA("T2") for display of care units
"RTN","IBCSC8H",78,0)
 S DIPA("T1")=" ins co requires care unit ",DIPA("T2")=" for this claim"
"RTN","IBCSC8H",79,0)
 Q
"RTN","IBCSC8H",80,0)
 ;
"RTN","IBCSC8H",81,0)
 ;IBCSC8H
"RTN","IBCU1")
0^54^B24130709
"RTN","IBCU1",1,0)
IBCU1 ;ALB/MRL - BILLING UTILITY ROUTINE (CONTINUED) ;01 JUN 88 12:00
"RTN","IBCU1",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,106,138,51,182,210**;21-MAR-94
"RTN","IBCU1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU1",4,0)
 ;
"RTN","IBCU1",5,0)
 ;MAP TO DGCRU1
"RTN","IBCU1",6,0)
 ;
"RTN","IBCU1",7,0)
 ;procedure doesn't appear to be used (6/4/93), if it is used, what for??
"RTN","IBCU1",8,0)
 ;where would multiple provider numbers comde from?  ARH
"RTN","IBCU1",9,0)
 ;BCH    ;Blue Cross/Shield Help
"RTN","IBCU1",10,0)
 W ! S IB01=$P($G(^IBE(350.9,1,1)),"^",6)
"RTN","IBCU1",11,0)
 I IB01]"" W "CHOOSE FROM",!!?4,"1 - ",$P(IB01,"^",6) F IB00=2,3 I $P(IB01,"^",$S(IB00=2:14,1:15))]"" W !?4,IB00," - ",$P(IB01,"^",$S(IB00=2:14,1:15))
"RTN","IBCU1",12,0)
 W:IB01']"" "NO BLUE CROSS/SHIELD PROVIDER NUMBERS IDENTIFIED TO SELECT FROM!" W ! W:IB01]"" !,"OR " W "ENTER BLUE CROSS/SHIELD PROVIDER # (BETWEEN 3-13 CHARACTERS)",! K IB00,IB01 Q
"RTN","IBCU1",13,0)
 ;
"RTN","IBCU1",14,0)
RCD ;Revenue Code Display
"RTN","IBCU1",15,0)
 Q:'$D(^DGCR(399,IBIFN,"RC"))
"RTN","IBCU1",16,0)
 W @IOF,!,"Revenue Code Listing",?34,"Units",?45,"Charge" W:$$FT^IBCEF(IBIFN)=3 ?56,"Non-Cov"
"RTN","IBCU1",17,0)
 S DGIFN=0 F IBI=0:0 S DGIFN=$O(^DGCR(399,IBIFN,"RC",DGIFN)) Q:'DGIFN  I $D(^DGCR(399,IBIFN,"RC",DGIFN,0)) S Z=^(0) D DISRC
"RTN","IBCU1",18,0)
 W !
"RTN","IBCU1",19,0)
 I $D(DIC(0)) S DIC(0)=DIC(0)_"N"
"RTN","IBCU1",20,0)
 Q
"RTN","IBCU1",21,0)
DISRC N Z0 W !?1,DGIFN,?4,$P(^DGCR(399.2,+Z,0),"^"),"-",$E($P(^DGCR(399.2,+Z,0),"^",2),1,19)
"RTN","IBCU1",22,0)
 I +$P(Z,U,6) W ?28,$P($$CPT^ICPTCOD(+$P(Z,U,6)),U,2)
"RTN","IBCU1",23,0)
 W ?36,$P(Z,"^",3),?40 S X=$P(Z,"^",2),X2="2$" D COMMA^%DTC W X
"RTN","IBCU1",24,0)
 I $$FT^IBCEF(IBIFN)=3,$P(Z,U,9)'="" S X=$P(Z,U,9),X2="2$" D COMMA^%DTC W ?51,X
"RTN","IBCU1",25,0)
 I $D(^DGCR(399.1,+$P(Z,"^",5),0)) W ?64,$E($P(^(0),"^"),1,15)
"RTN","IBCU1",26,0)
 I $S($P(Z,U,15):1,1:$P(Z,U,10)=3) D
"RTN","IBCU1",27,0)
 . W !,?5,"(Rx: ",$S($P(Z,U,11):$P($G(^IBA(362.4,$P(Z,U,11),0)),U),1:"Link Missing"),"  Procedure "_$S($P(Z,U,15):"#"_$P(Z,U,15)_" "_$$CPTNM^IBCRBH1(IBIFN,4,$P(Z,U,15)),1:"Link Missing"),")"
"RTN","IBCU1",28,0)
 Q
"RTN","IBCU1",29,0)
 ;
"RTN","IBCU1",30,0)
RVCPRC(IBIFN,IBD0) ; returns 1 if CHAMPVA rate type + 2 if HCFA 1500, 0 otherwise
"RTN","IBCU1",31,0)
 ; IBD0 - zero node of bill if available, not required
"RTN","IBCU1",32,0)
 N X S X=0
"RTN","IBCU1",33,0)
 I $G(IBD0)="" S IBD0=$G(^DGCR(399,+$G(IBIFN),0))
"RTN","IBCU1",34,0)
 I $P($G(^DGCR(399.3,+$P(IBD0,U,7),0)),U,1)="CHAMPVA" S X=X+1
"RTN","IBCU1",35,0)
 I $P(IBD0,U,19)=2 S X=X+2
"RTN","IBCU1",36,0)
 Q X
"RTN","IBCU1",37,0)
 ;
"RTN","IBCU1",38,0)
ORDNXT(IFN) ;CALLED BY TRIGGER ON (362.3,.02) THAT SETS DX PRINT ORDER (362.3,.03),
"RTN","IBCU1",39,0)
 ;returns the highest print order used on the bill plus 3, returns 3 if no existing print order
"RTN","IBCU1",40,0)
 ;used for the default print order so that dx's can be printed in order of entry without any input by the user,
"RTN","IBCU1",41,0)
 ;3 is added to allow spaces for additions, changes, moves
"RTN","IBCU1",42,0)
 N X,Y S X="" I $D(^DGCR(399,+$G(IFN),0)) S X=3,Y=0 F  S Y=$O(^IBA(362.3,"AO",+IFN,Y)) Q:'Y  S X=Y+3
"RTN","IBCU1",43,0)
 Q X
"RTN","IBCU1",44,0)
 ;
"RTN","IBCU1",45,0)
ORDDUP(ORD,DIFN) ;returns true if print order ORD is already defined for a bill (not same entry)
"RTN","IBCU1",46,0)
 N IBX,IBY S IBY=0
"RTN","IBCU1",47,0)
 I +$G(ORD) S IBX=$G(^IBA(362.3,+$G(DIFN),0)) I +IBX,+$P(IBX,U,3)'=ORD,$D(^IBA(362.3,"AO",+$P(IBX,U,2),+ORD)) S IBY=1
"RTN","IBCU1",48,0)
 Q IBY
"RTN","IBCU1",49,0)
 ;
"RTN","IBCU1",50,0)
DXDUP(DX,DIFN,IFN) ;returns true if DX is already defined for a bill (not same entry)
"RTN","IBCU1",51,0)
 ;either DIFN or IFN can be passed, both are not needed, DIFN is needed during edit so can reenter the same dx
"RTN","IBCU1",52,0)
 N IBX,IBY S IBY=0 I +$G(DX),'$G(IFN) S IBX=$G(^IBA(362.3,+$G(DIFN),0)),IFN=+$P(IBX,U,2)
"RTN","IBCU1",53,0)
 I +$G(DX),$D(^IBA(362.3,"AIFN"_+IFN,+DX)),$O(^IBA(362.3,"AIFN"_+IFN,+DX,0))'=+$G(DIFN) S IBY=1
"RTN","IBCU1",54,0)
 Q IBY
"RTN","IBCU1",55,0)
 ;
"RTN","IBCU1",56,0)
DXBSTAT(DIFN,IFN) ;returns a diagnosis' bill status (either DIFN or IFN can be passed, both are not needed)
"RTN","IBCU1",57,0)
 N IBX,IBY I '$G(IFN) S IBX=$G(^IBA(362.3,+$G(DIFN),0)),IFN=+$P(IBX,U,2)
"RTN","IBCU1",58,0)
 S IBY=+$P($G(^DGCR(399,+IFN,0)),U,13)
"RTN","IBCU1",59,0)
 Q IBY
"RTN","IBCU1",60,0)
 ;
"RTN","IBCU1",61,0)
RXSTAT(DRUG,PIFN,FILLDT) ; returns status/definition of rx
"RTN","IBCU1",62,0)
 ; returns: ORIGINAL ^ RELEASED/RETURNED TO STOCK ^ DRUG DEA
"RTN","IBCU1",63,0)
 N IBX,IBY,IBZ,IBLN S IBLN="",DRUG=+$G(DRUG),PIFN=+$G(PIFN),FILLDT=+$G(FILLDT)
"RTN","IBCU1",64,0)
 ;
"RTN","IBCU1",65,0)
 S IBX=$G(^PSRX(PIFN,2)),IBZ="" I IBX'="",$P(IBX,U,2)=$G(FILLDT) D  I IBZ'="" S $P(IBLN,U,2)=IBZ
"RTN","IBCU1",66,0)
 . S IBLN="ORG"
"RTN","IBCU1",67,0)
 . ;I +$G(^PS(59.7,1,49.99))<6 Q
"RTN","IBCU1",68,0)
 . I '$P(IBX,U,13) S IBZ="NR"
"RTN","IBCU1",69,0)
 . I +$P(IBX,U,15) S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"RTS"
"RTN","IBCU1",70,0)
 ;
"RTN","IBCU1",71,0)
 I IBLN="" S IBX=$O(^PSRX(PIFN,1,"B",FILLDT,0)),IBX=$G(^PSRX(PIFN,1,+IBX,0)),IBZ="" I IBX'="" D  I IBZ'="" S $P(IBLN,U,2)=IBZ
"RTN","IBCU1",72,0)
 . ;I +$G(^PS(59.7,1,49.99))<6 Q
"RTN","IBCU1",73,0)
 . I '$P(IBX,U,18) S IBZ="NR"
"RTN","IBCU1",74,0)
 . I +$P(IBX,U,16) S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"RTS"
"RTN","IBCU1",75,0)
 ;
"RTN","IBCU1",76,0)
 S IBX=$G(^PSDRUG(DRUG,0)) I IBX'="" S IBY=$P(IBX,U,3),IBZ="" D  I IBZ'="" S $P(IBLN,U,3)=IBZ
"RTN","IBCU1",77,0)
 . I IBY["9" S IBZ="OTC"
"RTN","IBCU1",78,0)
 . I IBY["I" S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"INV"
"RTN","IBCU1",79,0)
 . I IBY["S" S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"SUP"
"RTN","IBCU1",80,0)
 Q IBLN
"RTN","IBCU1",81,0)
 ;
"RTN","IBCU1",82,0)
PRVLIC(NPIFN,IBDT,ARR,STIFN) ; returns the Provider License data from the New Person file active on a date
"RTN","IBCU1",83,0)
 ; Input:   NPIFN = pointer to file 200,              IBDT = date to check (if none passed then all returned)
"RTN","IBCU1",84,0)
 ;          ARR = array pass by reference (optional), STIFN = state to return as value of function (optional)
"RTN","IBCU1",85,0)
 ; Output:  ARR(X) = license state (ifn) ^ license ^ expiration date (200,541)
"RTN","IBCU1",86,0)
 ;          return value = license data of state requested or if no state passed in then count found
"RTN","IBCU1",87,0)
 N IBX,IBY,IBLN,IBCNT S IBX=0,IBCNT=0 K ARR
"RTN","IBCU1",88,0)
 I +$G(NPIFN) S IBY=0 F  S IBY=$O(^VA(200,NPIFN,"PS1",IBY)) Q:'IBY  D
"RTN","IBCU1",89,0)
 . S IBLN=$G(^VA(200,NPIFN,"PS1",IBY,0))
"RTN","IBCU1",90,0)
 . I +$G(IBDT),+$P(IBLN,U,3),$P(IBLN,U,3)<IBDT Q
"RTN","IBCU1",91,0)
 . I +$G(STIFN),+STIFN=+IBLN S IBX=IBLN
"RTN","IBCU1",92,0)
 . S IBCNT=IBCNT+1,ARR(IBCNT)=IBLN
"RTN","IBCU1",93,0)
 S ARR=IBCNT I '$G(STIFN) S IBX=IBCNT
"RTN","IBCU1",94,0)
 Q IBX
"RTN","IBCU1",95,0)
 ;
"RTN","IBCU1",96,0)
DELPR(IB,IBX) ; Deletes the corresponding RX proc when the RX pointer is
"RTN","IBCU1",97,0)
 ; deleted
"RTN","IBCU1",98,0)
 ; IB = the ien of the bill in file 399
"RTN","IBCU1",99,0)
 ; IBX = the ien of the entry in the procedure multiple to be deleted
"RTN","IBCU1",100,0)
 ;
"RTN","IBCU1",101,0)
 N DA,DIK,X,Y
"RTN","IBCU1",102,0)
 S DA(1)=IB,DA=IBX
"RTN","IBCU1",103,0)
 I $D(^DGCR(399,DA(1),"CP",DA,0)) S DIK="^DGCR(399,"_DA(1)_",""CP""," D ^DIK
"RTN","IBCU1",104,0)
 Q
"RTN","IBCU1",105,0)
 ;
"RTN","IBCU1",106,0)
MODHLP(DA) ; Executable modifier help 399.042  .14
"RTN","IBCU1",107,0)
 ; DA = iens of the current entry DA(1) = file 399 ien
"RTN","IBCU1",108,0)
 ;                                DA    = file 399.042 ien
"RTN","IBCU1",109,0)
 N Z,IBZ,DIC,IBDATE
"RTN","IBCU1",110,0)
 I $P($G(^DGCR(399,+$G(DA(1)),"RC",+$G(DA),0)),U,14)'="" S Z=$P(^(0),U,14) D
"RTN","IBCU1",111,0)
 . N Q
"RTN","IBCU1",112,0)
 . S Q=1
"RTN","IBCU1",113,0)
 . S IBZ(1)="Current modifier"_$S($P(Z,";",2)'="":"s are:",1:"is:")
"RTN","IBCU1",114,0)
 . I $P(Z,";")'="" S Q=Q+1,IBZ(Q)="  "_$P(Z,";")_"  "_$P($$MOD^ICPTMOD($P(Z,";")),U,3)
"RTN","IBCU1",115,0)
 . I $P(Z,";",2)'="" S Q=Q+1,IBZ(Q)="  "_$P(Z,";",2)_"  "_$P($$MOD^ICPTMOD($P(Z,";",2)),U,3)
"RTN","IBCU1",116,0)
 . S Q=Q+1,IBZ(Q)=" "
"RTN","IBCU1",117,0)
 . D EN^DDIOL(.IBZ)
"RTN","IBCU1",118,0)
 ;
"RTN","IBCU1",119,0)
 S IBDATE=$$BDATE^IBACSV(+$G(DA(1))) ; The date of service
"RTN","IBCU1",120,0)
 S DIC="^DIC(81.3,",DIC(0)="E",DIC("S")="I $$MODP^ICPTMOD($P($G(^DGCR(399,DA(1),""RC"",DA,0)),U,6),Y,""I"",IBDATE)>0" D ^DIC
"RTN","IBCU1",121,0)
 Q
"RTN","IBCU1",122,0)
 ;
"RTN","IBCU1",123,0)
QMED(IBRTN,IBIFN) ; DSS QuadraMed Interface: DSS/QuadraMed Available
"RTN","IBCU1",124,0)
 ; return 1 if QuadraMed Interface is On and available for the type of bill
"RTN","IBCU1",125,0)
 ; - routine must exist on the system (interface is 'On')
"RTN","IBCU1",126,0)
 ; Input: IBRTN = tag^routine, if it exists then Interface is 'On'
"RTN","IBCU1",127,0)
 ;        IBIFN = Bill IFN, bill to check if appropriate for sending to QuadraMed
"RTN","IBCU1",128,0)
 ;
"RTN","IBCU1",129,0)
 N IBON S IBON=0
"RTN","IBCU1",130,0)
 I +$G(IBIFN),$G(IBRTN)'="",$T(@IBRTN)'="" S IBON=1
"RTN","IBCU1",131,0)
 Q IBON
"RTN","IBCU7")
0^25^B47160379
"RTN","IBCU7",1,0)
IBCU7 ;ALB/AAS - INTERCEPT SCREEN INPUT OF PROCEDURE CODES ;29-OCT-91
"RTN","IBCU7",2,0)
 ;;2.0;INTEGRATED BILLING;**62,52,106,125,51,137,210**;21-MAR-94
"RTN","IBCU7",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU7",4,0)
 ;
"RTN","IBCU7",5,0)
 ;MAP TO DGCRU7
"RTN","IBCU7",6,0)
 ;
"RTN","IBCU7",7,0)
CHKX ;  -interception of input x from Additional Procedure input
"RTN","IBCU7",8,0)
 G:X=" " CHKXQ
"RTN","IBCU7",9,0)
 I $$INPAT^IBCEF(DA(1)),'$P($G(^IBE(350.9,1,1)),"^",15),X'?1A1N D  G CHKXQ
"RTN","IBCU7",10,0)
 . K X
"RTN","IBCU7",11,0)
 . D EN^DDIOL("Site param does not allow entry of non-PTF procedures") ;Fileman error here will be: The previous error occurred when performing an action specified in a Pre-lookup transform (7.5 node).
"RTN","IBCU7",12,0)
 G:'$D(^UTILITY($J,"IB")) CHKXQ
"RTN","IBCU7",13,0)
 S M=($A($E(X,1))-64),S=+$E(X,2) Q:'$G(^UTILITY($J,"IB",M,S))  S X="`"_+^(S)
"RTN","IBCU7",14,0)
 I $D(DGPROCDT),DGPROCDT'=$P($G(^UTILITY($J,"IB",M,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) W !!,"Procedure Date: " S Y=DGPROCDT X ^DD("DD") W Y,!
"RTN","IBCU7",15,0)
CHKXQ Q
"RTN","IBCU7",16,0)
 ;
"RTN","IBCU7",17,0)
CODMUL ;Date oriented entry of procedure 
"RTN","IBCU7",18,0)
DELASK I $D(IBZ20),IBZ20,IBZ20'=$P(^DGCR(399,IBIFN,0),U,9) S %=2 W !,"SINCE THE PROCEDURE CODING METHOD HAS BEEN CHANGED, DO YOU WANT TO DELETE ALL",!,"PROCEDURE CODES IN THIS BILL"
"RTN","IBCU7",19,0)
 I  D YN^DICN Q:%=-1  D:%=1 DELADD I %Y?1."?" W !!,"If you answer 'Yes', all procedure codes will be DELETED from this bill.",! G DELASK
"RTN","IBCU7",20,0)
 K %,%Y,DA,IBZ20,DIK ;W !,"Procedure Entry:"
"RTN","IBCU7",21,0)
 ;
"RTN","IBCU7",22,0)
CODDT I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
"RTN","IBCU7",23,0)
 I $P($G(^DGCR(399,IBIFN,0)),"^",5)<3 S IBZTYPE=1 I $P($G(^UTILITY($J,"IB",1,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) D ASKCOD
"RTN","IBCU7",24,0)
 S X=$$PRCDIV^IBCU71(IBIFN) I +X W !!,$P(X,U,2),!
"RTN","IBCU7",25,0)
 N Z,Z0 S Z=$G(^DGCR(399,IBIFN,"U")),Z0=$$FMTE^XLFDT($P(Z,U),"2D")_"-"_$$FMTE^XLFDT($P(Z,U,2),"2D")
"RTN","IBCU7",26,0)
 W !,"Select PROCEDURE DATE"_$S($TR(Z0,"-")'="":" ("_Z0_")",1:"")_": " R X:DTIME G:'$T!("^"[X) CODQ D:X["?" CODHLP
"RTN","IBCU7",27,0)
 S IBEX=0 D  ; Get procedure date
"RTN","IBCU7",28,0)
 . I X=" ",$D(DGPROCDT),DGPROCDT?7N S Y=DGPROCDT D D^DIQ W "   (",Y,")" Q
"RTN","IBCU7",29,0)
 . I X=" ",+$P($G(^DGCR(399,IBIFN,"OP",0)),"^",4) S (DGPROCDT,Y)=$O(^DGCR(399,IBIFN,"OP",0)) D D^DIQ W "   (",Y,")" Q
"RTN","IBCU7",30,0)
 . S %DT="EXP",%DT(0)=-DT D ^%DT K %DT I Y<1 S IBEX=1 Q
"RTN","IBCU7",31,0)
 . I '$$OPV2^IBCU41(Y,IBIFN,1) S IBEX=1 Q
"RTN","IBCU7",32,0)
 . S:'$G(IBZTYPE) X=$$OPV^IBCU41(Y,IBIFN) S DGPROCDT=Y
"RTN","IBCU7",33,0)
 I 'IBEX D ASKCOD,ADDCPT^IBCU71:$D(DGCPT)
"RTN","IBCU7",34,0)
 K IBEX
"RTN","IBCU7",35,0)
 G CODDT
"RTN","IBCU7",36,0)
 ;
"RTN","IBCU7",37,0)
ASKCOD N Z,Z0,DA,IBACT,IBQUIT
"RTN","IBCU7",38,0)
 K DGCPT
"RTN","IBCU7",39,0)
 S DGCPT=0,DGCPTUP=$P($G(^IBE(350.9,1,1)),"^",19),DGADDVST=0,IBFT=$P($G(^DGCR(399,IBIFN,0)),"^",19)
"RTN","IBCU7",40,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S ^DGCR(399,IBIFN,"CP",0)=U_$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCU7",41,0)
 ;
"RTN","IBCU7",42,0)
 F  S IBQUIT=0 D  Q:IBQUIT
"RTN","IBCU7",43,0)
 . S DIC("A")="   Select PROCEDURE: "
"RTN","IBCU7",44,0)
 . S DIC="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",45,0)
 . S DIC(0)="AEQMNL"
"RTN","IBCU7",46,0)
 . S DIC("S")="I '$D(DIV(""S""))&($P(^(0),U,2)=DGPROCDT)"
"RTN","IBCU7",47,0)
 . S DIC("DR")="1///^S X=DGPROCDT"
"RTN","IBCU7",48,0)
 . S DA(1)=IBIFN,DLAYGO=399
"RTN","IBCU7",49,0)
 . W ! D ^DIC I Y<1 S IBQUIT=1 Q
"RTN","IBCU7",50,0)
 . ; If we just added inactive code - it must be deleted.
"RTN","IBCU7",51,0)
 . S IBACT=0 ; Active flag
"RTN","IBCU7",52,0)
 . I Y["ICD0" S IBACT=$$ICD0ACT^IBACSV(+$P(Y,U,2),DGPROCDT)
"RTN","IBCU7",53,0)
 . I Y["ICPT" S IBACT=$$CPTACT^IBACSV(+$P(Y,U,2),DGPROCDT)
"RTN","IBCU7",54,0)
 . S DGCPTNEW=$P(Y,"^",3) ;Was the procedure just added?
"RTN","IBCU7",55,0)
 . I DGCPTNEW,'IBACT D DELPROC Q
"RTN","IBCU7",56,0)
 . I 'IBACT W !,*7,"Warning:  Procedure code is inactive on this date",!
"RTN","IBCU7",57,0)
 . S DGADDVST=$S(DGCPTNEW:1,$D(DGADDVST):DGADDVST,1:0)
"RTN","IBCU7",58,0)
 . N IBPRV,IBPRVO,IBPRVN
"RTN","IBCU7",59,0)
 . S IBPRVO=$$MAINPRV^IBCEU(IBIFN),IBPRV=$P(IBPRVO,U,3),IBPRVN=(IBPRVO["IBA(355.93,"),IBPRV=$S(IBPRV="":"",'IBPRVN:$P(IBPRVO,U),1:"")
"RTN","IBCU7",60,0)
 . I IBPRV="",'IBPRVN D
"RTN","IBCU7",61,0)
 .. S IBPRV=0 F  S IBPRV=$O(^DGCR(399,IBIFN,"CP",IBPRV)) S:'IBPRV IBPRV="" Q:'IBPRV  S Z=$P($G(^(IBPRV,0)),U,18) I Z S IBPRV=$P($G(^VA(200,Z,0)),U) Q
"RTN","IBCU7",62,0)
 . S DR="" I Y["ICPT" S DR="16"_$S(IBPRVN:";18///@",1:";18//"_IBPRV)_";6;5//"_$$DEFDIV(IBIFN)_";"
"RTN","IBCU7",63,0)
 . S DR=".01;"_DR_$S(IBFT=2:"8;9;17//NO;",1:"")_3,DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($E($G(Y))=U)
"RTN","IBCU7",64,0)
 . ;
"RTN","IBCU7",65,0)
 . I IBFT=2 D
"RTN","IBCU7",66,0)
 .. D DX^IBCU72(IBIFN,IBPROCP)
"RTN","IBCU7",67,0)
 .. S X=$$ADDTNL(IBIFN,.DA)
"RTN","IBCU7",68,0)
 . Q:$$INPAT^IBCEF(IBIFN)  ;only outpatient bills
"RTN","IBCU7",69,0)
 . ;add procedures to array for download to PCE: dgcpt(assoc clinic,cpt,'provider^first dx^modifiers',cnt)=""
"RTN","IBCU7",70,0)
 . S DGPROC=$G(^DGCR(399,IBIFN,"CP",+DA,0))
"RTN","IBCU7",71,0)
 . S X=$P(DGPROC,U,18)_U_+$G(^IBA(362.3,+$P(DGPROC,U,11),0))_U_$P(DGPROC,U,15)
"RTN","IBCU7",72,0)
 . I 'DGCPTNEW,$P(DGPROC,"^",7)="" S DGCPTNEW=2
"RTN","IBCU7",73,0)
 . I DGCPTUP,DGCPTNEW S DGCPT=DGCPT+1 I $P(DGPROC,"^",7) S DGCPT($P(DGPROC,"^",7),+DGPROC,X,DGCPT)=""
"RTN","IBCU7",74,0)
 . ; add visit date to bill
"RTN","IBCU7",75,0)
 . I DGADDVST S (X,DINUM)=DGPROCDT D VFILE1^IBCOPV1 K DINUM,X,DGNOADD,DGADDVST
"RTN","IBCU7",76,0)
 ; Delete modifers with only a sequence #, no code
"RTN","IBCU7",77,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  S Z0=0 F  S Z0=$O(^DGCR(399,IBIFN,"CP",Z,"MOD",Z0)) Q:'Z0  I $P($G(^(Z0,0)),U,2)="" S DA(2)=IBIFN,DA(1)=Z,DA=Z0,DIK="^DGCR(399,"_DA(2)_",""CP"","_DA(1)_",""MOD""," D ^DIK
"RTN","IBCU7",78,0)
 Q
"RTN","IBCU7",79,0)
CODQ K %DT,DGPROC,DIC,DIE,DR,DGPROCDT,IBPROCP,DLAYGO
"RTN","IBCU7",80,0)
 K IBFT,DGNOADD,DGADDVST,DGCPT,DGCPTUP,IBZTYPE,DGCPTNEW
"RTN","IBCU7",81,0)
 Q
"RTN","IBCU7",82,0)
 ;
"RTN","IBCU7",83,0)
DELPROC ; Remove the selected procedure, because of inactive status (cancel selection)
"RTN","IBCU7",84,0)
 W !!,*7,"The Procedure code is inactive on ",$$DAT1^IBOUTL(DGPROCDT),"."
"RTN","IBCU7",85,0)
 W !,"Please select another Procedure."
"RTN","IBCU7",86,0)
 S DA(1)=IBIFN,DA=+Y,DIK="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",87,0)
 D ^DIK
"RTN","IBCU7",88,0)
 Q
"RTN","IBCU7",89,0)
 ;
"RTN","IBCU7",90,0)
DELADD N Z,Z0,DA,DIK,X,Y
"RTN","IBCU7",91,0)
 S DA(1)=IBIFN
"RTN","IBCU7",92,0)
 ;Delete references to proc on rev codes
"RTN","IBCU7",93,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) I Z0'="",$P(Z0,U,15)!$S($P(Z0,U,10)=3:$P(Z0,U,11),1:0) S DIE="^DGCR(399,"_DA(1)_",""RC"",",DA=Z,DR=".11///@;.15///@"_$S($P(Z0,U,8):"",1:";.08////1") D ^DIE
"RTN","IBCU7",94,0)
 S DIK="^DGCR(399,"_DA(1)_",""CP""," F DA=0:0 S DA=$O(^DGCR(399,DA(1),"CP",DA)) Q:'DA  D ^DIK
"RTN","IBCU7",95,0)
 S DGRVRCAL=1
"RTN","IBCU7",96,0)
 Q
"RTN","IBCU7",97,0)
 ;
"RTN","IBCU7",98,0)
DTMES ;Message if procedure date not in date range
"RTN","IBCU7",99,0)
 Q:'$D(IBIFN)  Q:'$D(^DGCR(399,IBIFN,"U"))  S DGNODUU=^("U")
"RTN","IBCU7",100,0)
 G:X'<$P(DGNODUU,"^")&(X'>$P(DGNODUU,"^",2)) DTMESQ
"RTN","IBCU7",101,0)
 W *7,!!?3,"Date must be within STATEMENT COVERS FROM and STATEMENT COVERS TO period."
"RTN","IBCU7",102,0)
 S Y=$P(DGNODUU,"^") X ^DD("DD")
"RTN","IBCU7",103,0)
 W !?3,"Enter a date between ",Y," and " S Y=$P(DGNODUU,"^",2) X ^DD("DD") W Y,!
"RTN","IBCU7",104,0)
 K X,Y
"RTN","IBCU7",105,0)
DTMESQ K DGNODUU Q
"RTN","IBCU7",106,0)
 ;
"RTN","IBCU7",107,0)
CODHLP ;Display Additional Procedure codes
"RTN","IBCU7",108,0)
 N I,J,Y,IBMOD
"RTN","IBCU7",109,0)
 I '$O(^DGCR(399,IBIFN,"CP",0)) W !!?5,"No Codes Entered!",! Q
"RTN","IBCU7",110,0)
 F I=0:0 S I=$O(^DGCR(399,IBIFN,"CP",I)) Q:'I  S Y=$G(^(I,0)) S Z=$$PRCNM^IBCSCH1($P(Y,"^",1),$P(Y,"^",2)) W !?5,$E($P(Z,"^",2),1,28),?35,"- ",$P(Z,"^") D
"RTN","IBCU7",111,0)
 . N IBY
"RTN","IBCU7",112,0)
 . S IBY=$P(Y,U,2)
"RTN","IBCU7",113,0)
 . S IBMOD=$$GETMOD^IBEFUNC(IBIFN,I,1)
"RTN","IBCU7",114,0)
 . I IBMOD'="" S IBMOD="/"_IBMOD W IBMOD
"RTN","IBCU7",115,0)
 . W ?60,"Date: " S Y=IBY D DT^DIQ
"RTN","IBCU7",116,0)
 ;
"RTN","IBCU7",117,0)
 K Z Q
"RTN","IBCU7",118,0)
 ;
"RTN","IBCU7",119,0)
DICV I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
"RTN","IBCU7",120,0)
 Q
"RTN","IBCU7",121,0)
 ;
"RTN","IBCU7",122,0)
DEFDIV(IBIFN) ; Find default division for bill IBIFN
"RTN","IBCU7",123,0)
 Q $P($G(^DG(40.8,+$P($G(^DGCR(399,IBIFN,0)),U,22),0)),U)
"RTN","IBCU7",124,0)
 ;
"RTN","IBCU7",125,0)
ADDTNL(IBIFN,DA) ;
"RTN","IBCU7",126,0)
 N DR,IBOK,X,Y,DIR
"RTN","IBCU7",127,0)
 S IBOK=1
"RTN","IBCU7",128,0)
 S DR="19;S:$P($G(^IBE(353.2,+$P($G(^DGCR(399,DA(1),""CP"",DA,0)),U,10),0)),U,2)'=""ANESTHESIA"" Y=""@20"";15;@20;50.01;50.08" D ^DIE
"RTN","IBCU7",129,0)
 I $D(Y) S IBOK=0 G ADDTNLQ
"RTN","IBCU7",130,0)
 S DIR("B")="NO",DIR("A")="EDIT HCFA 1500 SPECIAL PROGRAM FIELDS and BOX 19?: ",DIR("A",1)=" ",DIR(0)="YA"
"RTN","IBCU7",131,0)
 S DIR("?",1)="Respond YES only if you need to add/edit data for chiropratic visits,"
"RTN","IBCU7",132,0)
 S DIR("?")="EPSDT care, or if billing for HOSPICE and attending is not a hospice employee."
"RTN","IBCU7",133,0)
 D ^DIR K DIR
"RTN","IBCU7",134,0)
 I Y'=1 S IBOK=0 G ADDTNLQ
"RTN","IBCU7",135,0)
 S DR="W !,""  <<EPSDT>>"";50.07;W !!,""  <<HOSPICE>>"";50.03;W !!,""  <<CHIROPRACTIC>>"";50.04;50.02;50.05;50.06"
"RTN","IBCU7",136,0)
 D ^DIE
"RTN","IBCU7",137,0)
 W !
"RTN","IBCU7",138,0)
ADDTNLQ Q IBOK
"RTN","IBCU7",139,0)
 ;
"RTN","IBCU7",140,0)
XTRA1(Y) ;
"RTN","IBCU7",141,0)
 K Y
"RTN","IBCU7",142,0)
 Q
"RTN","IBCU7",143,0)
 ;
"RTN","IBCU71")
0^26^B18023231
"RTN","IBCU71",1,0)
IBCU71 ;ALB/AAS - INTERCEPT SCREEN INPUT OF PROCEDURE CODES ;29-OCT-91
"RTN","IBCU71",2,0)
 ;;2.0;INTEGRATED BILLING;**41,60,91,106,125,138,210**;21-MAR-94
"RTN","IBCU71",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU71",4,0)
 ;
"RTN","IBCU71",5,0)
 ;MAP TO DGCRU71
"RTN","IBCU71",6,0)
 ;
"RTN","IBCU71",7,0)
ADDCPT ;  - store cpt codes in visits file
"RTN","IBCU71",8,0)
 Q:$D(DGCPT)'>9
"RTN","IBCU71",9,0)
 N DA,DIC,DR,DIE,DIRUT,DUOUT,DTOUT,DIROUT,VADM
"RTN","IBCU71",10,0)
 S DIR(0)="Y",DIR("A")="OK to add CPT codes to Visits file",DIR("B")="Y" D ^DIR K DIR Q:'Y!$D(DIRUT)
"RTN","IBCU71",11,0)
 N IBPKG,IBCLIN,IBVDATE,IBPROC,IBK,IBCOUNT,IBRESULT,IBOTH
"RTN","IBCU71",12,0)
 S IBPKG=$O(^DIC(9.4,"C","IB",0)) Q:'IBPKG
"RTN","IBCU71",13,0)
 W !!,"Adding Procedures to PCE..."
"RTN","IBCU71",14,0)
 S IBCLIN=0 F  S IBCLIN=$O(DGCPT(IBCLIN)) Q:'IBCLIN  D
"RTN","IBCU71",15,0)
 .;
"RTN","IBCU71",16,0)
 .K ^TMP("IBPXAPI",$J)
"RTN","IBCU71",17,0)
 .;
"RTN","IBCU71",18,0)
 .; - set up encounter data
"RTN","IBCU71",19,0)
 .S IBVDATE=DGPROCDT D VISDT
"RTN","IBCU71",20,0)
 .S ^TMP("IBPXAPI",$J,"ENCOUNTER",1,"ENC D/T")=IBVDATE,^("PATIENT")=DFN,^("HOS LOC")=IBCLIN,^("SERVICE CATEGORY")="X",^("ENCOUNTER TYPE")="A"
"RTN","IBCU71",21,0)
 .;
"RTN","IBCU71",22,0)
 .; - set up procedure and diagnosis data
"RTN","IBCU71",23,0)
 .S IBK=0,IBPROC=0 F  S IBPROC=$O(DGCPT(IBCLIN,IBPROC)) Q:'IBPROC  D
"RTN","IBCU71",24,0)
 ..S IBOTH="" F  S IBOTH=$O(DGCPT(IBCLIN,IBPROC,IBOTH)) Q:IBOTH=""  D
"RTN","IBCU71",25,0)
 ...S IBK=IBK+1
"RTN","IBCU71",26,0)
 ...;
"RTN","IBCU71",27,0)
 ...; - load first procedure diagnosis as visit diagnosis
"RTN","IBCU71",28,0)
 ...I +$P(IBOTH,U,2) S ^TMP("IBPXAPI",$J,"DX/PL",IBK,"DIAGNOSIS")=+$P(IBOTH,U,2)
"RTN","IBCU71",29,0)
 ...;
"RTN","IBCU71",30,0)
 ...; - count number of times procedure performed
"RTN","IBCU71",31,0)
 ...S (X,IBCOUNT)=0 F  S X=$O(DGCPT(IBCLIN,IBPROC,IBOTH,X)) Q:'X  S IBCOUNT=IBCOUNT+1
"RTN","IBCU71",32,0)
 ...;
"RTN","IBCU71",33,0)
 ...; - load procedure information
"RTN","IBCU71",34,0)
 ...S ^TMP("IBPXAPI",$J,"PROCEDURE",IBK,"PROCEDURE")=IBPROC,^("QTY")=IBCOUNT,^("EVENT D/T")=IBVDATE
"RTN","IBCU71",35,0)
 ...I +$P(IBOTH,U,1) S ^TMP("IBPXAPI",$J,"PROCEDURE",IBK,"ENC PROVIDER")=+$P(IBOTH,U,1)
"RTN","IBCU71",36,0)
 ...I +$P(IBOTH,U,3) S ^TMP("IBPXAPI",$J,"PROCEDURE",IBK,"MODIFIERS",$P($$MOD^ICPTMOD(+$P(IBOTH,U,3),"I"),U,2))=""
"RTN","IBCU71",37,0)
 .;
"RTN","IBCU71",38,0)
 .; - call the PCE interface
"RTN","IBCU71",39,0)
 .Q:'$D(^TMP("IBPXAPI",$J,"PROCEDURE"))
"RTN","IBCU71",40,0)
 .;
"RTN","IBCU71",41,0)
 .S IBRESULT=$$DATA2PCE^PXAPI("^TMP(""IBPXAPI"",$J)",IBPKG,"IB DATA",,DUZ,0)
"RTN","IBCU71",42,0)
 .W !,"  Procedures in ",$P(^SC(IBCLIN,0),"^")," "
"RTN","IBCU71",43,0)
 .I IBRESULT>0 W "were added okay." Q
"RTN","IBCU71",44,0)
 .W "were not added - error code is ",IBRESULT
"RTN","IBCU71",45,0)
 ;
"RTN","IBCU71",46,0)
 K ^TMP("IBPXAPI",$J)
"RTN","IBCU71",47,0)
 Q
"RTN","IBCU71",48,0)
 ;
"RTN","IBCU71",49,0)
 ;
"RTN","IBCU71",50,0)
DISPDX ;  - display diagnosis codes available for associated dx (HCFA 1500)  NO LONGER USED?
"RTN","IBCU71",51,0)
 N I,J,X,IBDX,IBDXL,IBDATE
"RTN","IBCU71",52,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBCU71",53,0)
 F I=1:1:4 S IBDX=$P($G(^DGCR(399,IBIFN,"C")),"^",(I+13)),X=$$ICD9^IBACSV(+IBDX,IBDATE) I X'="" S IBDXL(I)=IBDX_"^"_X
"RTN","IBCU71",54,0)
 I '$D(IBDXL) W !!,"Bill has no ICD DIAGNOSIS." Q
"RTN","IBCU71",55,0)
 W !!,?24,"<<<ASSOCIATED ICD-9 DIAGNOSIS>>>",!!
"RTN","IBCU71",56,0)
 F I=1,2 W ! S X=0 F J=0,2 I $D(IBDXL(I+J)) S IBDX=IBDXL(I+J) D  S X=40
"RTN","IBCU71",57,0)
 . W ?X,"    ",$P(IBDX,"^",2),?(X+13),$E($P(IBDX,"^",4),1,28)
"RTN","IBCU71",58,0)
 W !
"RTN","IBCU71",59,0)
 Q
"RTN","IBCU71",60,0)
 ;
"RTN","IBCU71",61,0)
SCREEN(X,Y) ; -- screen logic for active procs or surgeries - OBSOLETE
"RTN","IBCU71",62,0)
 ; -- input x = date to check,  y = procedure
"RTN","IBCU71",63,0)
 ; -- output 0 if not active for billing or amb proc on date,  1 if either active
"RTN","IBCU71",64,0)
 ;
"RTN","IBCU71",65,0)
 Q 0
"RTN","IBCU71",66,0)
 ;
"RTN","IBCU71",67,0)
VISDT ; Find the actual encounter for the visit; update visit date/time
"RTN","IBCU71",68,0)
 ; input DGPROCDT, DFN, IBCLIN
"RTN","IBCU71",69,0)
 N IBD,IBF,IBOEN,IBEVT,IBVAL,IBCBK,IBFILTER
"RTN","IBCU71",70,0)
 S IBF=0,IBD=DGPROCDT-.1
"RTN","IBCU71",71,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=DGPROCDT-.1,IBVAL("EDT")=DGPROCDT\1_".99"
"RTN","IBCU71",72,0)
 S IBFILTER=""
"RTN","IBCU71",73,0)
 S IBCBK="I IBCLIN=$P(Y0,U,4) S IBVDATE=+Y0,SDSTOP=1"
"RTN","IBCU71",74,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,IBFILTER,IBCBK,1)
"RTN","IBCU71",75,0)
 Q
"RTN","IBCU71",76,0)
 ;
"RTN","IBCU71",77,0)
PRCDT(IBIFN,ARR) ; return array of bill's procedures in date then code order
"RTN","IBCU71",78,0)
 ; returns    ARR(DATE, NAME, CPIFN) = 399.0304 node
"RTN","IBCU71",79,0)
 N IBI,IBX,IBNAME K ARR
"RTN","IBCU71",80,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,+$G(IBIFN),"CP",IBI)) Q:'IBI  D
"RTN","IBCU71",81,0)
 . S IBX=$G(^DGCR(399,IBIFN,"CP",IBI,0))
"RTN","IBCU71",82,0)
 . S IBNAME=$P($$PRCNM^IBCSCH1($P(IBX,U,1)),U,1)_" "
"RTN","IBCU71",83,0)
 . S ARR($P(IBX,U,2),IBNAME,IBI)=IBX
"RTN","IBCU71",84,0)
 Q
"RTN","IBCU71",85,0)
 ;
"RTN","IBCU71",86,0)
PRCDIV(IBIFN) ; change Bills Default Division (399,.22) to reflect care provided
"RTN","IBCU71",87,0)
 ; - set Bill Division to the first Procedures Division (399,304,5), if defined
"RTN","IBCU71",88,0)
 ; - or else if bill is an inpatient bill then get the Division of the Ward the patient was Admitted to
"RTN","IBCU71",89,0)
 ; return null if no change or 'new division ifn^message'
"RTN","IBCU71",90,0)
 ;
"RTN","IBCU71",91,0)
 N IB0,IBCPT,IBPDIV,IBWRD,IBX,DIC,DIE,DA,DR,X,Y S IBX="",IBPDIV=0
"RTN","IBCU71",92,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0))
"RTN","IBCU71",93,0)
 ;
"RTN","IBCU71",94,0)
 I +$G(IBIFN) S IBCPT=$O(^DGCR(399,IBIFN,"CP",0)) I +IBCPT D  ; if CPT division defined, use it
"RTN","IBCU71",95,0)
 . S IBCPT=$G(^DGCR(399,IBIFN,"CP",IBCPT,0)) S IBPDIV=+$P(IBCPT,U,6)
"RTN","IBCU71",96,0)
 ;
"RTN","IBCU71",97,0)
 I 'IBPDIV,+$P(IB0,U,8) D  ; for inpatient, get Ward Division
"RTN","IBCU71",98,0)
 . S IBWRD=$G(^DGPT(+$P(IB0,U,8),535,1,0)) S IBPDIV=+$P($G(^DIC(42,+$P(IBWRD,U,6),0)),U,11)
"RTN","IBCU71",99,0)
 ;
"RTN","IBCU71",100,0)
 I +IBPDIV,+$P(IB0,U,22)'=+IBPDIV D
"RTN","IBCU71",101,0)
 . S DIE="^DGCR(399,",DA=IBIFN,DR=".22////"_+IBPDIV D ^DIE K DIE,DR,DA,X,Y
"RTN","IBCU71",102,0)
 . S IBX=+IBPDIV_"^Bill Division Changed to "_$P($G(^DG(40.8,+IBPDIV,0)),U,1)
"RTN","IBCU71",103,0)
 Q IBX
"RTN","IBCU72")
0^27^B11361036
"RTN","IBCU72",1,0)
IBCU72 ;ALB/CPM - ADD/EDIT/DELETE PROCEDURE DIAGNOSES ;18-JUN-96
"RTN","IBCU72",2,0)
 ;;2.0;INTEGRATED BILLING;**62,210**; 21-MAR-94
"RTN","IBCU72",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU72",4,0)
 ;
"RTN","IBCU72",5,0)
DX(IBIFN,IBPROC) ; Add/edit/delete procedure diagnoses.
"RTN","IBCU72",6,0)
 ; Input:  IBIFN  --  Pointer to the claim in file #399
"RTN","IBCU72",7,0)
 ;        IBPROC  --  Pointer to the claim procedure in file #399.0304
"RTN","IBCU72",8,0)
 ;
"RTN","IBCU72",9,0)
 I '$G(IBIFN) G DXQ
"RTN","IBCU72",10,0)
 I '$G(IBPROC) G DXQ
"RTN","IBCU72",11,0)
 ;
"RTN","IBCU72",12,0)
 N DIE,DA ; need to preserve these variables for IBCU7.
"RTN","IBCU72",13,0)
 ;
"RTN","IBCU72",14,0)
 N IBPROCD,IBDX,IBDXSCR,IBLINE,IBI,IBDEF,IBQUIT,IBPROMPT
"RTN","IBCU72",15,0)
 S IBPROCD=$G(^DGCR(399,IBIFN,"CP",IBPROC,0))
"RTN","IBCU72",16,0)
 I 'IBPROCD G DXQ
"RTN","IBCU72",17,0)
 ;
"RTN","IBCU72",18,0)
 ; - get diagnoses and display.
"RTN","IBCU72",19,0)
 D SET^IBCSC4D(IBIFN,.IBDXSCR,.IBDX),DISP(.IBDX)
"RTN","IBCU72",20,0)
 I '$O(IBDX(0)) W "There are no diagnoses associated with this bill." G DXQ
"RTN","IBCU72",21,0)
 ;
"RTN","IBCU72",22,0)
 ; - build workable array; determine default values
"RTN","IBCU72",23,0)
 S IBI=0 F  S IBI=$O(IBDX(IBI)) Q:'IBI  S IBDX(IBI)=IBDXSCR(+IBDX(IBI))_U_$P($$ICD9^IBACSV(+IBDX(IBI)),U)
"RTN","IBCU72",24,0)
 S IBDEF="" F I=11:1:14 S X=$P(IBPROCD,U,I) I X D
"RTN","IBCU72",25,0)
 . S J=0 F  S J=$O(IBDX(J)) Q:'J  I +IBDX(J)=X S IBDEF=IBDEF_J_":"_$P(IBDX(J),U,2)_"," Q
"RTN","IBCU72",26,0)
 I IBDEF]"" S IBDEF=$E(IBDEF,1,$L(IBDEF)-1)
"RTN","IBCU72",27,0)
 ;
"RTN","IBCU72",28,0)
 ; - display instructions and default values
"RTN","IBCU72",29,0)
 W !," *** Please select procedure diagnoses by number to left of diagnosis code ***"
"RTN","IBCU72",30,0)
 I IBDEF]"" W !,"Current Values:  " F I=1:1:$L(IBDEF,",") S X=$P(IBDEF,",",I) I X]"" W "Dx ",I,": ",+X," - ",$P(X,":",2),"   "
"RTN","IBCU72",31,0)
 ;
"RTN","IBCU72",32,0)
 ; - prompt for the four associated dx prompts
"RTN","IBCU72",33,0)
 W ! S IBQUIT=0 F IBPROMPT=1:1:4 D ASKEM Q:IBQUIT
"RTN","IBCU72",34,0)
 ;
"RTN","IBCU72",35,0)
DXQ Q
"RTN","IBCU72",36,0)
 ;
"RTN","IBCU72",37,0)
 ;
"RTN","IBCU72",38,0)
 ;
"RTN","IBCU72",39,0)
DISP(X) ; Display of existing dx's for a bill.
"RTN","IBCU72",40,0)
 N IBX,IBY,IBZ,IBDATE
"RTN","IBCU72",41,0)
 S IBDATE=$$BDATE^IBACSV($G(IBIFN))
"RTN","IBCU72",42,0)
 W !!,?5,"-----------------  Existing Diagnoses for Bill  -----------------",!
"RTN","IBCU72",43,0)
 S IBX=0 F  S IBX=$O(X(IBX)) Q:'IBX  S IBZ=X(IBX),IBY=$$ICD9^IBACSV(+IBZ,IBDATE) D
"RTN","IBCU72",44,0)
 . W !?5,IBX,".",?12,$P(IBY,U),?26,$P(IBY,U,3),?60,$S($P(IBZ,U,2)<1000:"("_$P(IBZ,U,2)_")",1:"")
"RTN","IBCU72",45,0)
 W !
"RTN","IBCU72",46,0)
 Q
"RTN","IBCU72",47,0)
 ;
"RTN","IBCU72",48,0)
ASKEM ; Allow entry of the procedure diagnoses.
"RTN","IBCU72",49,0)
 N IBP
"RTN","IBCU72",50,0)
 S IBP=$P(IBDEF,",",IBPROMPT)
"RTN","IBCU72",51,0)
 W !,"Associated Diagnosis (",IBPROMPT,"): ",$S(IBP]"":+IBP_" - "_$P(IBP,":",2)_" // ",1:"")
"RTN","IBCU72",52,0)
 R X:DTIME
"RTN","IBCU72",53,0)
 I $E(X)="^" S IBQUIT=1 G ASKEMQ
"RTN","IBCU72",54,0)
 I $E(X)="@" D:IBP]"" UPD("@",IBPROMPT+9) W:IBP]"" "   deleted." G ASKEMQ
"RTN","IBCU72",55,0)
 I $E(X)="?" D HELP1 G ASKEM
"RTN","IBCU72",56,0)
 I X="" S:'$$NEXT() IBQUIT=1 G ASKEMQ
"RTN","IBCU72",57,0)
 I '$D(IBDX(X)) D HELP1 G ASKEM
"RTN","IBCU72",58,0)
 W "   ",$P(IBDX(X),"^",2)
"RTN","IBCU72",59,0)
 I +IBP'=X D UPD("/"_+IBDX(X),IBPROMPT+9)
"RTN","IBCU72",60,0)
ASKEMQ Q
"RTN","IBCU72",61,0)
 ;
"RTN","IBCU72",62,0)
UPD(IBVALUE,IBFIELD) ; Update an associated diagnosis.
"RTN","IBCU72",63,0)
 S DIE="^DGCR(399,"_IBIFN_",""CP"",",DA=IBPROC,DA(1)=IBIFN
"RTN","IBCU72",64,0)
 S DR=IBFIELD_"///"_IBVALUE D ^DIE K DA,DIE,DR
"RTN","IBCU72",65,0)
 Q
"RTN","IBCU72",66,0)
 ;
"RTN","IBCU72",67,0)
HELP1 ; Help for entering associated diagnoses.
"RTN","IBCU72",68,0)
 N X
"RTN","IBCU72",69,0)
 W !!,"Please enter one of the following billing diagnoses by number at left of code:"
"RTN","IBCU72",70,0)
 S X=0 F  S X=$O(IBDX(X)) Q:'X  W:X#4=1 ! W ?((X-1)#4*18),X,".",$J($P(IBDX(X),"^",2),9)
"RTN","IBCU72",71,0)
 W !!,"You may also enter '^' to exit, '@' to delete a procedure diagnosis, or"
"RTN","IBCU72",72,0)
 W !,"<CR> to accept a current value or skip a prompt.",!
"RTN","IBCU72",73,0)
 Q
"RTN","IBCU72",74,0)
 ;
"RTN","IBCU72",75,0)
NEXT() ; Advance to the next prompt?
"RTN","IBCU72",76,0)
 N I,X S X=0
"RTN","IBCU72",77,0)
 I IBPROMPT=4 G NEXTQ
"RTN","IBCU72",78,0)
 I IBP]"" S X=1 G NEXTQ
"RTN","IBCU72",79,0)
 F I=(IBPROMPT+1):1:4 I $P(IBDEF,",",I)]"" S X=1 Q
"RTN","IBCU72",80,0)
NEXTQ Q X
"RTN","IBCVA1")
0^28^B20905711
"RTN","IBCVA1",1,0)
IBCVA1 ;ALB/MJB - SET MCCR VARIABLES CONT. ;09 JUN 88 14:49
"RTN","IBCVA1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,109,51,137,210**;21-MAR-94
"RTN","IBCVA1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCVA1",4,0)
 ;
"RTN","IBCVA1",5,0)
 ;MAP TO DGCRVA1
"RTN","IBCVA1",6,0)
 ;
"RTN","IBCVA1",7,0)
 Q
"RTN","IBCVA1",8,0)
4 ;Event variables set
"RTN","IBCVA1",9,0)
 D 1234^IBCVA
"RTN","IBCVA1",10,0)
 Q:'$D(IBBT)
"RTN","IBCVA1",11,0)
EN4 I $E(IBBT,2)>2 G OCC
"RTN","IBCVA1",12,0)
INP D INP^IBCSC4
"RTN","IBCVA1",13,0)
 ;NOTE (12/1/93): IBDI AND IBDIN ARRAYS WERE NOT UPDATED WITH NEW DX LOCATIONS BECAUSE THEY DO NOT SEEM TO BE USED ANYWHERE
"RTN","IBCVA1",14,0)
OCC I $D(^DGCR(399,IBIFN,"C")) D
"RTN","IBCVA1",15,0)
 . N IBDATE,IBC
"RTN","IBCVA1",16,0)
 . S IBDATE=$$BDATE^IBACSV(IBIFN) ; The date of service
"RTN","IBCVA1",17,0)
 . S IBC=^DGCR(399,IBIFN,"C")
"RTN","IBCVA1",18,0)
 . F I=14:1:18 S IBDI(I)=$P(IBC,U,I) Q:IBDI(I)=""  D
"RTN","IBCVA1",19,0)
 .. S IBDIN(I)=IBDI(I)
"RTN","IBCVA1",20,0)
 .. S IBDI(I)=$P($$ICD9^IBACSV(IBDI(I),IBDATE),U,3)
"RTN","IBCVA1",21,0)
 K IBO S:'$D(^DGCR(399,IBIFN,"OC")) IBO="" G:$D(IBO) COND S IBNO=$P(^DGCR(399,IBIFN,"OC",0),U,3),IBOC=0
"RTN","IBCVA1",22,0)
 S C=0 F I=0:1 S IBOC=$O(^DGCR(399,IBIFN,"OC",I)) Q:IBOC'?1N.N!(C=5)  I $D(^DGCR(399,IBIFN,"OC",I)) S C=C+1 D SOCC
"RTN","IBCVA1",23,0)
 ;
"RTN","IBCVA1",24,0)
COND S IBCC=0,D=0 F I=0:0 S IBCC=$O(^DGCR(399,IBIFN,"CC",IBCC)) Q:IBCC=""!(D=5)  I $D(^DGCR(399,IBIFN,"CC",IBCC,0)) S D=D+1,IBCC(D)=$P(^DGCR(399,IBIFN,"CC",IBCC,0),"^",1) D CONDN
"RTN","IBCVA1",25,0)
 ;
"RTN","IBCVA1",26,0)
 D PROC
"RTN","IBCVA1",27,0)
 ;
"RTN","IBCVA1",28,0)
 ;Q:'$D(^DGCR(399,IBIFN,"C"))  F I=0,"C" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCVA1",29,0)
 ;I $P(IB(0),"^",9)=4 F I=1:1:3 S:$P(IB("C"),"^",I)'="" IBCPT(I)=$P(IB("C"),"^",I)
"RTN","IBCVA1",30,0)
 ;I $P(IB(0),"^",9)=9 F I=4:1:6 S:$P(IB("C"),"^",I)'="" IBICD(I)=$P(IB("C"),"^",I)
"RTN","IBCVA1",31,0)
 ;I $P(IB(0),"^",9)=5 F I=7:1:9 S:$P(IB("C"),"^",I)]"" IBHC(I)=$P(IB("C"),"^",I),IBHCN(I)=$S($D(^ICPT(IBHC(I),0)):$P(^(0),"^",1),1:"")
"RTN","IBCVA1",32,0)
 Q
"RTN","IBCVA1",33,0)
 ;
"RTN","IBCVA1",34,0)
5 ;Billing variables set
"RTN","IBCVA1",35,0)
 D 123^IBCVA
"RTN","IBCVA1",36,0)
EN5 I '$D(IBIP) G REVC
"RTN","IBCVA1",37,0)
 S IBLS=$S($P(IB("U"),U,15)]"":$P(IB("U"),U,15),1:0),IBBS=$S($P(IB("U"),U,11)]"":$P(IB("U"),U,11),1:IBU) I IBBS'=IBU S IBBS=$P(^DGCR(399.1,IBBS,0),"^",1)
"RTN","IBCVA1",38,0)
REVC S IBREV=0 F I=1:1 S IBREV=$O(^DGCR(399,IBIFN,"RC",IBREV)) Q:IBREV'?1.N  S IBREVC(I)=^DGCR(399,IBIFN,"RC",IBREV,0)
"RTN","IBCVA1",39,0)
 S IBTF=$P(IB(0),U,26),IBTF=$S(IBTF=1:"ADMIT THRU DISCHARGE",IBTF=2:"FIRST CLAIM",IBTF=3:"CONTINUING CLAIM",IBTF=4:"LAST CLAIM",IBTF=5:"LATE CHARGE(S)",IBTF=6:"ADJUSTMENT",IBTF=7:"REPLACEMENT",IBTF=8:"CANCEL",IBTF=0:"ZERO CLAIM",1:"")
"RTN","IBCVA1",40,0)
 S IBBTP1=$E($$EXPAND^IBTRE(399,.24,$P(IB(0),U,24)),1,29)
"RTN","IBCVA1",41,0)
 S IBBTP2=$E($$EXPAND^IBTRE(399,.25,+$P(IB(0),U,25)),1,26)
"RTN","IBCVA1",42,0)
 S IBBTP3=IBTF
"RTN","IBCVA1",43,0)
 Q
"RTN","IBCVA1",44,0)
SOCC S IBO(C)=$P(^DGCR(399,IBIFN,"OC",IBOC,0),"^",1),IBO(C)=$P(^DGCR(399.1,IBO(C),0),"^",2),IBOCN(C)=$P(^(0),"^",1)
"RTN","IBCVA1",45,0)
 S IBOCD(C)=$P(^DGCR(399,IBIFN,"OC",IBOC,0),"^",2),IBOCD2(C)=$P(^DGCR(399,IBIFN,"OC",IBOC,0),"^",4) Q
"RTN","IBCVA1",46,0)
 Q
"RTN","IBCVA1",47,0)
 ;
"RTN","IBCVA1",48,0)
CONDN S IBCC(D)=$P($G(^DGCR(399.1,+IBCC(D),0)),U,2),IBCCN(D)=$P($G(^(0)),U,1)
"RTN","IBCVA1",49,0)
 Q
"RTN","IBCVA1",50,0)
 ;
"RTN","IBCVA1",51,0)
PROCX ; Entrypoint from output formatter
"RTN","IBCVA1",52,0)
 N IBIFN,IBZ
"RTN","IBCVA1",53,0)
 S IBIFN=$G(IBXIEN)
"RTN","IBCVA1",54,0)
 D PROC
"RTN","IBCVA1",55,0)
 D F^IBCEF("N-PROCEDURE CODING METHD","IBZ",,IBIFN)
"RTN","IBCVA1",56,0)
 I IBZ="" K IBPROC S IBPROC=0 Q
"RTN","IBCVA1",57,0)
 S Z=0 F  S Z=$O(IBPROC(Z)) Q:'Z  I $P(IBPROC(Z),U)'[$S(IBZ=9:";ICD",1:";ICP") K IBPROC(Z) S IBPROC=IBPROC-1
"RTN","IBCVA1",58,0)
 Q
"RTN","IBCVA1",59,0)
 ;
"RTN","IBCVA1",60,0)
PROC ;  -build array of procedures in IBPROC
"RTN","IBCVA1",61,0)
 N IBHCFA,IBMOD,I,J,X,X1
"RTN","IBCVA1",62,0)
 S IBHCFA=($$FT^IBCEF(IBIFN)=2)
"RTN","IBCVA1",63,0)
 K IBPROC S IBPROC=0
"RTN","IBCVA1",64,0)
 I '$D(IB("C")) S IB("C")=$G(^DGCR(399,IBIFN,"C"))
"RTN","IBCVA1",65,0)
 S:'$D(IB(0)) IB(0)=$G(^DGCR(399,IBIFN,0)) S J=$P($G(IB(0)),"^",9)
"RTN","IBCVA1",66,0)
 I IB("C")'="" F I=1:1:9 I $P(IB("C"),"^",I)'="" S IBPROC(I)=$P(IB("C"),"^",I)_";"_$S(I<4:"ICPT(",I<7:"ICD0(",1:"ICPT(")_"^"_$P(IB("C"),"^",$S(I#3:10+(I#3),1:13)),IBPROC=IBPROC+1
"RTN","IBCVA1",67,0)
 I $D(^DGCR(399,IBIFN,"CP")) S X=0 F I=100:1 S X=$O(^DGCR(399,IBIFN,"CP",X)) Q:'X  S X1=$G(^(X,0)) Q:'X1  D
"RTN","IBCVA1",68,0)
 . S IBMOD=$$GETMOD^IBEFUNC(IBIFN,X)
"RTN","IBCVA1",69,0)
 . I $TR(IBMOD,",")'="" S $P(X1,U,15)=IBMOD
"RTN","IBCVA1",70,0)
 . S IBPROC($S($P(X1,"^",4):$P(X1,"^",4),1:I))=X1
"RTN","IBCVA1",71,0)
 . I IBHCFA S IBPROC($S($P(X1,"^",4):$P(X1,"^",4),1:I),"AUX")=$G(^DGCR(399,IBIFN,"CP",X,"AUX"))
"RTN","IBCVA1",72,0)
 . S IBPROC=IBPROC+1
"RTN","IBCVA1",73,0)
PROCQ Q
"RTN","IBCVA1",74,0)
 ;
"RTN","IBCVA1",75,0)
ALLPROC(IBIFN,IBPROC) ; Returns all procedures for bill IBIFN in array IBPROC
"RTN","IBCVA1",76,0)
 ;  IBPROC = # of procedures found
"RTN","IBCVA1",77,0)
 ;  IBPROC(prnt order)=0-node of 'CP' entry with piece 15 = the
"RTN","IBCVA1",78,0)
 ;                      modifiers separated by commas
"RTN","IBCVA1",79,0)
 ;  IBPROC(prnt order,"AUX")="AUX" node of 'CP' entry for HCFA 1500 forms
"RTN","IBCVA1",80,0)
 ; Pass IBPROC by reference
"RTN","IBCVA1",81,0)
 ;
"RTN","IBCVA1",82,0)
 N IB
"RTN","IBCVA1",83,0)
 K IBPROC
"RTN","IBCVA1",84,0)
 D PROC
"RTN","IBCVA1",85,0)
 Q
"RTN","IBCVA1",86,0)
 ;
"RTN","IBCVA1",87,0)
VC ;returns a bills value codes, IBIFN must be defined: IBVC=count,IBVC(VIFN)=CODE ^ NAME ^ VALUE ^ $$?
"RTN","IBCVA1",88,0)
 N IBY,IBX,IBZ S IBVC=0 Q:'$D(^DGCR(399,IBIFN,"CV"))
"RTN","IBCVA1",89,0)
 S IBX=0 F  S IBX=$O(^DGCR(399,IBIFN,"CV",IBX)) Q:'IBX  S IBY=$G(^DGCR(399,IBIFN,"CV",IBX,0)) I +IBY D
"RTN","IBCVA1",90,0)
 . S IBVC=IBVC+1,IBZ=$G(^DGCR(399.1,+IBY,0)) Q:IBZ=""
"RTN","IBCVA1",91,0)
 . S IBVC(+IBY)=$P(IBZ,U,2)_U_$P(IBZ,U,1)_U_$S(+$P(IBZ,U,12):$J($P(IBY,U,2),0,2),1:$P(IBY,U,2))_U_$P(IBZ,U,12)
"RTN","IBCVA1",92,0)
 Q
"RTN","IBCVA1",93,0)
 ;
"RTN","IBCVA1",94,0)
SETMODS(IBMOD,IBZ,IBXSAVE) ; Set modifiers into IBXSAVE
"RTN","IBCVA1",95,0)
 ; IBMOD = the list of modifier iens for the proc, separated by commas
"RTN","IBCVA1",96,0)
 ; IBZ = the line counter to return the data in
"RTN","IBCVA1",97,0)
 ;
"RTN","IBCVA1",98,0)
 ; Output Formatter utility
"RTN","IBCVA1",99,0)
 ;
"RTN","IBCVA1",100,0)
 ; Variables passed by reference, returned
"RTN","IBCVA1",101,0)
 ; IBXSAVE("PROCMODS",IBZ) = Formatter 'save' array for modifiers
"RTN","IBCVA1",102,0)
 ;
"RTN","IBCVA1",103,0)
 N Q,IBQ
"RTN","IBCVA1",104,0)
 I $L(IBMOD) F Q=1:1:$L(IBMOD,",") I $P(IBMOD,",",Q)'="" D
"RTN","IBCVA1",105,0)
 . S IBQ=$$MOD^ICPTMOD(+$P(IBMOD,",",Q),"I")
"RTN","IBCVA1",106,0)
 . S IBXSAVE("PROCMODS",IBZ)=$G(IBXSAVE("PROCMODS",IBZ))_$P(IBQ,U,2)_","
"RTN","IBCVA1",107,0)
 S Q=$L($G(IBXSAVE("PROCMODS",IBZ)))
"RTN","IBCVA1",108,0)
 I 'Q S IBXSAVE("PROCMODS",IBZ)=""
"RTN","IBCVA1",109,0)
 I Q S IBXSAVE("PROCMODS",IBZ)=$E(IBXSAVE("PROCMODS",IBZ),1,Q-1)
"RTN","IBCVA1",110,0)
 Q
"RTN","IBCVA1",111,0)
 ;
"RTN","IBEPAR")
0^29^B20135803
"RTN","IBEPAR",1,0)
IBEPAR ;ALB/AAS - MCCR SITE PARAMETER ENTER/EDIT ;26-MAR-92
"RTN","IBEPAR",2,0)
 ;;2.0;INTEGRATED BILLING;**133,51,153,210**;21-MAR-94
"RTN","IBEPAR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBEPAR",4,0)
 ;
"RTN","IBEPAR",5,0)
% ;
"RTN","IBEPAR",6,0)
 S IBPAR=1,IBV1="00000",IBSR="PAR",IBSR1="" F I=0,1,2 S IBEPAR(I)=$S($D(^IBE(350.9,1,I)):^(I),1:"")
"RTN","IBEPAR",7,0)
 D ^IBCSCU
"RTN","IBEPAR",8,0)
 S L="",$P(L,"=",80)=""
"RTN","IBEPAR",9,0)
 I $D(IBPAR) S X="MEDICAL CARE COST RECOVERY PARAMETER ENTER/EDIT" W @IOF,?17,IBVI,X,IBVO,!,L
"RTN","IBEPAR",10,0)
 ;
"RTN","IBEPAR",11,0)
1 S Z=1,IBW=1 X IBWW W " Medical Center Name: "_$P($G(^DIC(4,+$P(IBEPAR(0),"^",2),0)),"^"),?47,"Federal Tax #",?66,": ",$S($P(IBEPAR(1),"^",5)]"":$P(IBEPAR(1),"^",5),1:IBU)
"RTN","IBEPAR",12,0)
 W !?4,"Default BC/BS #",?23,": ",$S($P(IBEPAR(1),"^",6)]"":$P(IBEPAR(1),"^",6),1:IBU)
"RTN","IBEPAR",13,0)
 W ?47,"Medicare Number",?66,": ",$S($P(IBEPAR(1),"^",21)]"":$P(IBEPAR(1),"^",21),1:IBU)
"RTN","IBEPAR",14,0)
 W !?4,"MAS Service Pointer",?23,": ",$E($S($P(IBEPAR(1),"^",14)]""&($D(^DIC(49,+$P(IBEPAR(1),"^",14),0))):$P(^(0),"^",1),1:IBU),1,20)
"RTN","IBEPAR",15,0)
 W ?47,"Default Division",?66,": ",$E($S($P(IBEPAR(1),"^",25)]"":$P($G(^DG(40.8,+$P(IBEPAR(1),"^",25),0)),"^"),1:IBU),1,12),!
"RTN","IBEPAR",16,0)
 ;
"RTN","IBEPAR",17,0)
2 S Z=2,IBW=1 X IBWW W " Bill Signer Name   : "_$S($P(IBEPAR(1),"^",1)]"":$P(IBEPAR(1),"^",1),1:IBU)
"RTN","IBEPAR",18,0)
 W ?47,"Title: ",$S($P(IBEPAR(1),"^",2)]"":$P(IBEPAR(1),"^",2),1:IBU)
"RTN","IBEPAR",19,0)
 W !?4,"Billing Supervisor",?23,": " S IBSUP=$S($P(IBEPAR(1),"^",8)]"":$P(IBEPAR(1),"^",8),1:IBU) I IBSUP'=IBU S IBSUP=$P(^VA(200,IBSUP,0),"^",1)
"RTN","IBEPAR",20,0)
 W:IBSUP'=IBU $P(IBSUP,",",2)," ",$P(IBSUP,",",1),! W:IBSUP=IBU IBU,!
"RTN","IBEPAR",21,0)
 ;
"RTN","IBEPAR",22,0)
3 S Z=3,IBW=1 X IBWW W " Multiple Form Types: "_$S($P(IBEPAR(1),"^",22)=1:"YES",$P(IBEPAR(1),"^",11)=0:"NO",1:IBU)
"RTN","IBEPAR",23,0)
 W ?47,"Initiator Authorize: ",$S($P(IBEPAR(1),"^",23)=1:"YES",$P(IBEPAR(1),"^",3)=0:"NO",1:IBU) W !?4,"Use Non-PTF Codes?",?23,": ",$S($P(IBEPAR(1),"^",15)=1:"YES",$P(IBEPAR(1),"^",15)=0:"NO",1:IBU)
"RTN","IBEPAR",24,0)
 W ?47,"Ask HINQ in MCCR?  : ",$S($P(IBEPAR(1),"^",16)=1:"YES",$P(IBEPAR(1),"^",16)=0:"NO",1:IBU),!
"RTN","IBEPAR",25,0)
 W ?4,"Use OP CPT screen? : ",$S($P(IBEPAR(1),"^",17):"YES",'$P(IBEPAR(1),"^",17):"NO",1:IBU)
"RTN","IBEPAR",26,0)
 W ?47,"Default ASC Rev. Cd: " S X=$G(^DGCR(399.2,+$P(IBEPAR(1),"^",18),0)) W $S($P(X,"^")]"":$P(X,"^"),1:IBU),!
"RTN","IBEPAR",27,0)
 W ?4,"Xfer Proc to Sched?: "_$S($P(IBEPAR(1),"^",19)=1:"YES",$P(IBEPAR(1),"^",19)=0:"NO",1:IBU)
"RTN","IBEPAR",28,0)
 W ?47,"Per Diem Start Date: " S Y=$P(IBEPAR(0),"^",12) D D^DIQ W Y,!
"RTN","IBEPAR",29,0)
 W ?4,"Default RX Rev. Cd : " S X=$G(^DGCR(399.2,+$P(IBEPAR(1),"^",28),0)) W $S($P(X,"^")]"":$P(X,"^"),1:IBU)
"RTN","IBEPAR",30,0)
 W ?42,"Suppress MT Ins Bulletin: ",$S($P(IBEPAR(0),"^",15)=1:"YES",$P(IBEPAR(0),"^",15)=0:"NO",1:IBU),!
"RTN","IBEPAR",31,0)
 W ?4,"Default RX Dx Cd   : " S X=$$ICD9^IBACSV(+$P(IBEPAR(1),"^",29)) W $S(X'="":$P(X,U),1:IBU)
"RTN","IBEPAR",32,0)
 W ?47,"Default RX CPT Cd  : " S X=$$CPT^IBACSV(+$P(IBEPAR(1),"^",30)) W $S(X'="":$P(X,U),1:IBU),!
"RTN","IBEPAR",33,0)
 ;
"RTN","IBEPAR",34,0)
4 S Z=4,IBW=1 X IBWW W " '001' for Total?   : "_$S($P(IBEPAR(1),"^",10)=1:"YES",$P(IBEPAR(1),"^",10)=0:"NO",1:IBU)
"RTN","IBEPAR",35,0)
 W ?47,"Hold MT Bills W/Ins: ",$S($P(IBEPAR(1),"^",20)=1:"YES",$P(IBEPAR(1),"^",20)=0:"NO",1:IBU)
"RTN","IBEPAR",36,0)
 W !?4,"Remark on each bill",?23,": ",$S($P(IBEPAR(1),"^",4)]"":$E($P(IBEPAR(1),"^",4),1,21),1:IBU)
"RTN","IBEPAR",37,0)
 W ?47,"UB-92 Address Col  : " W $S($P(IBEPAR(1),U,31)]"":$P(IBEPAR(1),"^",31),1:IBU)
"RTN","IBEPAR",38,0)
 W !?4,"Cancellation Remark",?23,": ",$S($P(IBEPAR(2),"^",7)]"":$E($P(IBEPAR(2),"^",7),1,21),1:IBU)
"RTN","IBEPAR",39,0)
 W ?47,"HCFA 1500 Addr Col : " W $S($P(IBEPAR(1),U,27)]"":$P(IBEPAR(1),"^",27),1:IBU)
"RTN","IBEPAR",40,0)
 ;
"RTN","IBEPAR",41,0)
 W !?4,"Cancelled Mailgroup",?23,": ",$S($P(IBEPAR(1),"^",7):$P($G(^XMB(3.8,+$P(IBEPAR(1),"^",7),0)),"^",1),1:IBU)
"RTN","IBEPAR",42,0)
 ;
"RTN","IBEPAR",43,0)
 W ?47,"Disap. Mailgroup   : ",$S($P(IBEPAR(1),"^",9):$P($G(^XMB(3.8,+$P(IBEPAR(1),"^",9),0)),"^"),1:IBU),!
"RTN","IBEPAR",44,0)
 W ?4,"Copay Mailgroup",?23,": ",$S($P(IBEPAR(0),"^",9):$P($G(^XMB(3.8,+$P(IBEPAR(0),"^",9),0)),"^"),1:IBU)
"RTN","IBEPAR",45,0)
 W ?42,"Means Test Mailgroup    : ",$S($P(IBEPAR(0),"^",11):$P($G(^XMB(3.8,+$P(IBEPAR(0),"^",11),0)),"^"),1:IBU)
"RTN","IBEPAR",46,0)
 ;
"RTN","IBEPAR",47,0)
5 ;
"RTN","IBEPAR",48,0)
 S Z=5,IBW=1 X IBWW W " Agent Cashier",?23,": ",$P(IBEPAR(2),"^",1)
"RTN","IBEPAR",49,0)
 W ", ",$P(IBEPAR(2),"^",3),", "
"RTN","IBEPAR",50,0)
 W $S($P(IBEPAR(2),"^",4):$P(^DIC(5,$P(IBEPAR(2),"^",4),0),"^",2),1:"")
"RTN","IBEPAR",51,0)
 W "  ",$P(IBEPAR(2),"^",5)
"RTN","IBEPAR",52,0)
 W !?4,"Phone",?23,": ",$S($P(IBEPAR(2),"^",6)]"":$P(IBEPAR(2),"^",6),1:IBU)
"RTN","IBEPAR",53,0)
 W ?47,"Default Form Type  : " S X=$G(^IBE(353,+$P(IBEPAR(1),"^",26),0)) W $S($P(X,"^")]"":$P(X,"^"),1:IBU)
"RTN","IBEPAR",54,0)
 W !?4,"Fac Billing Name",?23,": ",$P(IBEPAR(2),"^",10)
"RTN","IBEPAR",55,0)
 W !?4,"Other Facility is Billing Facility: ",$$EXPAND^IBTRE(350.9,2.12,$P(IBEPAR(2),U,12))
"RTN","IBEPAR",56,0)
CH D ^IBEPAR1 I $D(IBSCA) G IBEPAR
"RTN","IBEPAR",57,0)
Q K IBEPAR,IBSCPP,IBSUP,IBSR,IBPAR,IBU,IBUN,IBV1,IBVI,IBVV,IBVO,IBW,IBWW,DIK,I,X,Y Q
"RTN","IBEPAR",58,0)
 ;IBEPAR
"RTN","IBJTBB")
0^30^B2945074
"RTN","IBJTBB",1,0)
IBJTBB ;ALB/ARH - TPI BILL DIAGNOSIS SCREEN ;01-MAR-1995
"RTN","IBJTBB",2,0)
 ;;2.0;INTEGRATED BILLING;**39,210**;21-MAR-94
"RTN","IBJTBB",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJTBB",4,0)
 ;
"RTN","IBJTBB",5,0)
EN ; -- main entry point for IBJ TP BILL DX
"RTN","IBJTBB",6,0)
 D EN^VALM("IBJT BILL DX")
"RTN","IBJTBB",7,0)
 Q
"RTN","IBJTBB",8,0)
 ;
"RTN","IBJTBB",9,0)
HDR ; -- header code
"RTN","IBJTBB",10,0)
 D HDR^IBJTU1(+IBIFN,+DFN,12)
"RTN","IBJTBB",11,0)
 Q
"RTN","IBJTBB",12,0)
 ;
"RTN","IBJTBB",13,0)
INIT ; -- init variables and list array
"RTN","IBJTBB",14,0)
 K ^TMP("IBJTBB",$J) N IBFT
"RTN","IBJTBB",15,0)
 I '$G(DFN)!'$G(IBIFN) S VALMQUIT="" G INITQ
"RTN","IBJTBB",16,0)
 D BLD
"RTN","IBJTBB",17,0)
INITQ Q
"RTN","IBJTBB",18,0)
 ;
"RTN","IBJTBB",19,0)
HELP ; -- help code
"RTN","IBJTBB",20,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJTBB",21,0)
 Q
"RTN","IBJTBB",22,0)
 ;
"RTN","IBJTBB",23,0)
EXIT ; -- exit code
"RTN","IBJTBB",24,0)
 K ^TMP("IBJTBB",$J)
"RTN","IBJTBB",25,0)
 D CLEAR^VALM1
"RTN","IBJTBB",26,0)
 Q
"RTN","IBJTBB",27,0)
 ;
"RTN","IBJTBB",28,0)
BLD ;
"RTN","IBJTBB",29,0)
 N IBADX,IBI,IBX,IBCNT,IBLN,IBSTR,IBDATE
"RTN","IBJTBB",30,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBJTBB",31,0)
 D SET^IBCSC4D(IBIFN,"",.IBADX) I $D(IBADX)'>1 S IBLN=1 F IBSTR="","Bill contains no diagnosis." S IBLN=$$SET(IBSTR,IBLN,1,80)
"RTN","IBJTBB",32,0)
 S IBI="",IBLN=1,IBCNT=0 F  S IBI=$O(IBADX(IBI)) Q:'IBI  D  S IBLN=$$SET(IBSTR,IBLN,1,80)
"RTN","IBJTBB",33,0)
 . S IBCNT=IBCNT+1,IBX=$$ICD9^IBACSV(+IBADX(IBI),IBDATE)
"RTN","IBJTBB",34,0)
 . S IBSTR=$J("",5)_$J(IBCNT,3)_")  "_$P(IBX,U,1)_$J("",(10-$L($P(IBX,U,1))))_$P(IBX,U,3)
"RTN","IBJTBB",35,0)
 ;
"RTN","IBJTBB",36,0)
 S VALMCNT=IBLN-1
"RTN","IBJTBB",37,0)
 Q
"RTN","IBJTBB",38,0)
 ;
"RTN","IBJTBB",39,0)
SET(STR,LN,COL,WD,RV) ; set up TMP array with screen data
"RTN","IBJTBB",40,0)
 D SET^VALM10(LN,STR)
"RTN","IBJTBB",41,0)
 S LN=LN+1
"RTN","IBJTBB",42,0)
 Q LN
"RTN","IBJTBC")
0^31^B13014724
"RTN","IBJTBC",1,0)
IBJTBC ;ALB/ARH - TPI BILL PROCEDURES SCREEN ;02-MAR-1995
"RTN","IBJTBC",2,0)
 ;;2.0;INTEGRATED BILLING;**39,80,51,137,210**;21-MAR-94
"RTN","IBJTBC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJTBC",4,0)
 ;
"RTN","IBJTBC",5,0)
EN ; -- main entry point for IBJ TP BILL PROCEDURES
"RTN","IBJTBC",6,0)
 D EN^VALM("IBJT BILL PROCEDURES")
"RTN","IBJTBC",7,0)
 Q
"RTN","IBJTBC",8,0)
 ;
"RTN","IBJTBC",9,0)
HDR ; -- header code
"RTN","IBJTBC",10,0)
 D HDR^IBJTU1(+IBIFN,+DFN,12)
"RTN","IBJTBC",11,0)
 Q
"RTN","IBJTBC",12,0)
 ;
"RTN","IBJTBC",13,0)
INIT ; -- init variables and list array
"RTN","IBJTBC",14,0)
 K ^TMP("IBJTBC",$J) N IBFT
"RTN","IBJTBC",15,0)
 I '$G(DFN)!'$G(IBIFN) S VALMQUIT="" G INITQ
"RTN","IBJTBC",16,0)
 D BLD
"RTN","IBJTBC",17,0)
INITQ Q
"RTN","IBJTBC",18,0)
 ;
"RTN","IBJTBC",19,0)
HELP ; -- help code
"RTN","IBJTBC",20,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJTBC",21,0)
 Q
"RTN","IBJTBC",22,0)
 ;
"RTN","IBJTBC",23,0)
EXIT ; -- exit code
"RTN","IBJTBC",24,0)
 K ^TMP("IBJTBC",$J)
"RTN","IBJTBC",25,0)
 D CLEAR^VALM1
"RTN","IBJTBC",26,0)
 Q
"RTN","IBJTBC",27,0)
 ;
"RTN","IBJTBC",28,0)
BLD ;
"RTN","IBJTBC",29,0)
 N IB,IBI,IBJ,IBX,IBY,IBDXI,IBLN,IBSTR,IBD,IBT,IBPRC,IBXDATA,IBZPRC,IBZDX
"RTN","IBJTBC",30,0)
 D F^IBCEF("N-UB92 PROCEDURES","IBZPRC",,IBIFN)
"RTN","IBJTBC",31,0)
 S IBSTR=""
"RTN","IBJTBC",32,0)
 I +$O(IBZPRC(0))=0 S IBLN=1 F IBSTR="","Bill contains no procedures." S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBC",33,0)
 ;
"RTN","IBJTBC",34,0)
 D F^IBCEF("N-DIAGNOSES","IBZDX",,IBIFN)
"RTN","IBJTBC",35,0)
 S IBX=0,IBI="" F  S IBI=$O(IBZDX(IBI)) Q:'IBI  S IBDXI($P(IBZDX(IBI),U,2))=IBI
"RTN","IBJTBC",36,0)
 S IBLN=1,IBI="" F  S IBI=$O(IBZPRC(IBI)) Q:'IBI  D  S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBC",37,0)
 . N IBDATE ; Date of procedure
"RTN","IBJTBC",38,0)
 . S IBX=IBZPRC(IBI)
"RTN","IBJTBC",39,0)
 . S IBDATE=$P(IBX,U,2) I 'IBDATE S IBDATE=$$BDATE^IBACSV(IBIFN) ; The bills date
"RTN","IBJTBC",40,0)
 . S IBPRC=$$PRCD^IBCEF1($P(IBX,U),1,IBDATE) Q:IBPRC=""
"RTN","IBJTBC",41,0)
 . S IBT=0,IBSTR=" "_$P(IBPRC,U,2)
"RTN","IBJTBC",42,0)
 . I +$P(IBZPRC(IBI),U,15) S IBSTR=IBSTR_" "_$$MODLST^IBEFUNC2($P(IBZPRC(IBI),U,15))
"RTN","IBJTBC",43,0)
 . S IBT=20,IBD=$P(IBPRC,U,3) S IBSTR=$$SETLN(IBD,IBSTR,IBT,20)
"RTN","IBJTBC",44,0)
 . S IBT=41,IBD=$$DATE^IBJU1(+$P(IBX,U,2)) S IBSTR=$$SETLN(IBD,IBSTR,IBT,8)
"RTN","IBJTBC",45,0)
 . S IBT=51,IBY=$P(IBX,U,5) I IBY'="" S IBD="BASC:   Yes" D
"RTN","IBJTBC",46,0)
 .. S IBSTR=$$SETLN(IBD,IBSTR,IBT,29),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",47,0)
 . S IBY=$P(IBX,U,6) I IBY'="" S IBD="DIV:    "_$P($G(^DG(40.8,+IBY,0)),U,1) D
"RTN","IBJTBC",48,0)
 .. S IBSTR=$$SETLN(IBD,IBSTR,IBT,29),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",49,0)
 . S IBY=$P(IBX,U,7) I IBY'="" S IBD="CLINIC: "_$P($G(^SC(+IBY,0)),U,1) D
"RTN","IBJTBC",50,0)
 .. S IBSTR=$$SETLN(IBD,IBSTR,IBT,29),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",51,0)
 . S IBY=$P(IBX,U,9) I IBY'="" D
"RTN","IBJTBC",52,0)
 .. S IBT=51,IBY=$G(^IBE(353.1,+IBY,0)),IBD="POS:    "_$P(IBY,U,1) S IBSTR=$$SETLN(IBD,IBSTR,IBT,11)
"RTN","IBJTBC",53,0)
 .. S IBT=63,IBD=$P(IBY,U,2) S IBSTR=$$SETLN(IBD,IBSTR,IBT,12),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",54,0)
 . S IBY=$P(IBX,U,10) I IBY'="" D
"RTN","IBJTBC",55,0)
 .. S IBT=51,IBY=$G(^IBE(353.2,+IBY,0)),IBD="TOS:    "_$P(IBY,U,1) S IBSTR=$$SETLN(IBD,IBSTR,IBT,11)
"RTN","IBJTBC",56,0)
 .. S IBT=63,IBD=$P(IBY,U,2) S IBSTR=$$SETLN(IBD,IBSTR,IBT,17),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",57,0)
 . S IBT=51,IBD=$P(IBX,U,16) I IBD,$P(IBX,U,10)=7 S IBSTR=$$SETLN("MINUTES: "_$P(IBX,U,16),IBSTR,IBT,15)
"RTN","IBJTBC",58,0)
 . ;
"RTN","IBJTBC",59,0)
 . S IBT=51 F IBJ=11:1:14 S IBY=$P(IBX,U,IBJ) I IBY'="" D  S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",60,0)
 .. S IBY=$G(IBDXI(+IBY)) Q:'IBY  S IBD="DX ("_IBY_"): "
"RTN","IBJTBC",61,0)
 .. S IBY=+$G(IBZDX(+IBY)) Q:'IBY  S IBY=$$ICD9^IBACSV(+IBY,IBDATE)
"RTN","IBJTBC",62,0)
 .. S IBT=51,IBD=IBD_$P(IBY,U,1) S IBSTR=$$SETLN(IBD,IBSTR,IBT,15)
"RTN","IBJTBC",63,0)
 .. S IBT=67,IBD=$P(IBY,U,3) S IBSTR=$$SETLN(IBD,IBSTR,IBT,13)
"RTN","IBJTBC",64,0)
 ;
"RTN","IBJTBC",65,0)
 S VALMCNT=IBLN-1
"RTN","IBJTBC",66,0)
 Q
"RTN","IBJTBC",67,0)
 ;
"RTN","IBJTBC",68,0)
SETLN(STR,IBX,COL,WD) ;
"RTN","IBJTBC",69,0)
 S IBX=$$SETSTR^VALM1(STR,IBX,COL,WD)
"RTN","IBJTBC",70,0)
 Q IBX
"RTN","IBJTBC",71,0)
 ;
"RTN","IBJTBC",72,0)
SET(STR,LN) ; set up TMP array with screen data
"RTN","IBJTBC",73,0)
 N IBX,IBI
"RTN","IBJTBC",74,0)
 D SET^VALM10(LN,STR)
"RTN","IBJTBC",75,0)
 S LN=LN+1
"RTN","IBJTBC",76,0)
SETQ Q LN
"RTN","IBRFN3")
0^32^B28970642
"RTN","IBRFN3",1,0)
IBRFN3 ;ALB/ARH - PASS BILL/CLAIM TO AR ;3/18/96
"RTN","IBRFN3",2,0)
 ;;2.0;INTEGRATED BILLING;**61,133,210**;21-MAR-94
"RTN","IBRFN3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBRFN3",4,0)
 ;
"RTN","IBRFN3",5,0)
 ;  Returns information on the bill passed in,  all data returned in external format, for AR's RC project
"RTN","IBRFN3",6,0)
 ;
"RTN","IBRFN3",7,0)
 ;  If the bill can not be found then returns ARRAY=0  (should be called with ARRAY passed by reference)
"RTN","IBRFN3",8,0)
 ;  Otherwise ARRAY=1 and the following array elements may be defined
"RTN","IBRFN3",9,0)
 ;  these array elements will only be defined is there is data to return
"RTN","IBRFN3",10,0)
 ;  those elements that have multiple entries will be in the form ARRAY("SUB",X) where X=1:1:...
"RTN","IBRFN3",11,0)
 ;
"RTN","IBRFN3",12,0)
 ;  ARRAY("BN") = BILL NUMBER
"RTN","IBRFN3",13,0)
 ;  ARRAY("SR") = SENSITIVE RECORD? (Y or N)
"RTN","IBRFN3",14,0)
 ;  ARRAY("STF") = STATEMENT COVERS FROM DATE - first date covered by bill
"RTN","IBRFN3",15,0)
 ;  ARRAY("STT") = STATEMENT COVERS TO DATE - last date covered by bill
"RTN","IBRFN3",16,0)
 ;  ARRAY("TCG") = TOTAL CHARGES^OFFSET AMT (PRIOR PAYMENTS)^OFFSET DESC
"RTN","IBRFN3",17,0)
 ;  ARRAY("TOC") = BILL TYPE (INPATIENT OR OUTPATIENT)
"RTN","IBRFN3",18,0)
 ;  ARRAY("TCF") = BILL FORM TYPE
"RTN","IBRFN3",19,0)
 ;  ARRAY("DFP") = DATE FIRST PRINTED
"RTN","IBRFN3",20,0)
 ;  ARRAY("TAX") = FEDERAL TAX NUMBER - for facility, a site parameter
"RTN","IBRFN3",21,0)
 ;
"RTN","IBRFN3",22,0)
 ;  ARRAY("PIN") = DEBTOR INSURANCE NAME ^ HOSPITAL PROVIDER NUMBER ^ GROUP NAME ^ GROUP NUMBER ^
"RTN","IBRFN3",23,0)
 ;                 NAME OF INSURED ^ SUBSCRIBER ID ^ RELATIONSHIP TO INSURED
"RTN","IBRFN3",24,0)
 ;
"RTN","IBRFN3",25,0)
 ;  ARRAY("PIN","MMA") = DEBTOR MAILING STREET ADDRESS [LINE 1] ^
"RTN","IBRFN3",26,0)
 ;                       MAILING STREET ADDRESS [LINE 2] ^ MAILING STREET ADDRESS [LINE 3] ^ CITY ^ 
"RTN","IBRFN3",27,0)
 ;                       STATE (ABBREVIATED) ^ ZIP ^ PHONE NUMBER
"RTN","IBRFN3",28,0)
 ;
"RTN","IBRFN3",29,0)
 ;  ARRAY("RVC") = NUMBER OF REVENUE CODES ON BILL
"RTN","IBRFN3",30,0)
 ;  ARRAY("RVC",X) = REVENUE CODE ^ REVENUE CODE DESCRIPTION ^ CHARGE (PER UNIT) ^ UNITS ^
"RTN","IBRFN3",31,0)
 ;                   TOTAL CHARGE FOR REV CODE
"RTN","IBRFN3",32,0)
 ;
"RTN","IBRFN3",33,0)
 ;  ARRAY("OPV") = NUMBER OF OUTPATIENT VISIT DATES ON BILL
"RTN","IBRFN3",34,0)
 ;  ARRAY("OPV",X) = OUTPATIENT VISIT DATE
"RTN","IBRFN3",35,0)
 ;
"RTN","IBRFN3",36,0)
 ;  ARRAY("PRC") = NUMBER OF PROCEDURES ON BILL
"RTN","IBRFN3",37,0)
 ;  ARRAY("PRC",X) = PROCEDURE CODE ^ PROCEDURE DESCRIPTION ^ PROCEDURE DATE ^
"RTN","IBRFN3",38,0)
 ;                   PLACE OF SERVICE CODE ^ PLACE OF SERVICE ^ TYPE OF SERVICE CODE ^ TYPE OF SERVICE
"RTN","IBRFN3",39,0)
 ;
"RTN","IBRFN3",40,0)
 ;  ARRAY("DXS") = NUMBER OF DIAGNOSIS ON BILL
"RTN","IBRFN3",41,0)
 ;  ARRAY("DXS,X) = DIAGNOSIS CODE ^ DIAGNOSIS
"RTN","IBRFN3",42,0)
 ;
"RTN","IBRFN3",43,0)
 ;  ARRAY("RXF") = NUMBER OF PRESCRIPTION REFILLS ON BILL
"RTN","IBRFN3",44,0)
 ;  ARRAY("RXF",X) = PRESCRIPTION # ^ REFILL DATE ^ DRUG NAME ^ DAYS SUPPLY ^ QUANTITY ^ NDC #
"RTN","IBRFN3",45,0)
 ;
"RTN","IBRFN3",46,0)
 ;  ARRAY("PRD") = NUMBER OF PROSTHETIC ITEMS ON BILL
"RTN","IBRFN3",47,0)
 ;  ARRAY("PRD",X) = PROSTHETIC DEVICE ^ DELIVERY DATE
"RTN","IBRFN3",48,0)
 ;
"RTN","IBRFN3",49,0)
 ;  IF CONDITION RELATED TO EMPLOYMENT:  ARRAY("CRE") = "EMPLOYMENT"
"RTN","IBRFN3",50,0)
 ;  IF CONDITION RELATED TO AN AUTO ACCIDENT:  ARRAY("CRA") = "AUTO ACCIDENT" ^ STATE (ABBREVIATION)
"RTN","IBRFN3",51,0)
 ;  IF CONDITION RELATED TO AN OTHER ACCIDENT:  ARRAY("CRO") = "OTHER ACCIDENT"
"RTN","IBRFN3",52,0)
 ;
"RTN","IBRFN3",53,0)
BILL(IBIFN,ARRAY) ; returns array of information on a specific bill, based on RC requirements
"RTN","IBRFN3",54,0)
 ;
"RTN","IBRFN3",55,0)
 N IBI,IBJ,IBK,IBX,IBY,IBTMP,IBD0,IBDU,IBDU1,IBDI1,IBDS,IBDATE
"RTN","IBRFN3",56,0)
 K ARRAY S ARRAY=1 I '$G(IBIFN)!($G(^DGCR(399,+$G(IBIFN),0))="") S ARRAY=0 Q
"RTN","IBRFN3",57,0)
 F IBI=0,"U","U1","S" S @("IBD"_IBI)=$G(^DGCR(399,IBIFN,IBI))
"RTN","IBRFN3",58,0)
 S IBX=$P(IBD0,U,21),IBX=$S(IBX="P":"I1",IBX="S":"I2",IBX="T":"I3",1:" ")
"RTN","IBRFN3",59,0)
 S IBDI1=$G(^DGCR(399,IBIFN,IBX))
"RTN","IBRFN3",60,0)
 ;
"RTN","IBRFN3",61,0)
 S ARRAY("TCG")=$P(IBDU1,U,1,3)
"RTN","IBRFN3",62,0)
 S ARRAY("BN")=$P(IBD0,U,1)
"RTN","IBRFN3",63,0)
 S ARRAY("SR")=$S($P(IBDU,U,5)=1:"Y",1:"N")
"RTN","IBRFN3",64,0)
 S ARRAY("STF")=$P(IBDU,U,1)
"RTN","IBRFN3",65,0)
 S ARRAY("STT")=$P(IBDU,U,2)
"RTN","IBRFN3",66,0)
 S ARRAY("TOC")=$S($P(IBD0,U,5)<3:"INPATIENT",1:"OUTPATIENT")
"RTN","IBRFN3",67,0)
 S ARRAY("TCF")=$$FTN^IBCU3($$FT^IBCU3(IBIFN))
"RTN","IBRFN3",68,0)
 S ARRAY("DFP")=$P(IBDS,U,12)
"RTN","IBRFN3",69,0)
 S ARRAY("TAX")=$P($G(^IBE(350.9,1,1)),U,5)
"RTN","IBRFN3",70,0)
 ;
"RTN","IBRFN3",71,0)
INS ; insurance information
"RTN","IBRFN3",72,0)
 S IBX=$G(^DGCR(399,+IBIFN,"M"))
"RTN","IBRFN3",73,0)
 S ARRAY("PIN")=$P(IBX,U,4)_U_$P($G(^DIC(36,+IBDI1,0)),U,11)_U_$P(IBDI1,U,15)_U_$P(IBDI1,U,3)_U_$P(IBDI1,U,17)_U_$P(IBDI1,U,2)_U_$$RTI($P(IBDI1,U,16))
"RTN","IBRFN3",74,0)
 S ARRAY("PIN","MMA")=$P(IBX,U,5)_U_$P(IBX,U,6)_U_$P($G(^DGCR(399,+IBIFN,"M1")),U,1)_U_$P(IBX,U,7)_U_$$STATE($P(IBX,U,8))
"RTN","IBRFN3",75,0)
 S ARRAY("PIN","MMA")=ARRAY("PIN","MMA")_U_$$ZIP($P(IBX,U,9))_U_$P($G(^DIC(36,+IBDI1,.13)),U,1)
"RTN","IBRFN3",76,0)
 ;
"RTN","IBRFN3",77,0)
RC ; revenue codes
"RTN","IBRFN3",78,0)
 S (IBI,IBJ)=0,ARRAY("RVC")=IBJ F  S IBI=$O(^DGCR(399,IBIFN,"RC",IBI)) Q:'IBI  D
"RTN","IBRFN3",79,0)
 . S IBX=$G(^DGCR(399,IBIFN,"RC",IBI,0)) Q:IBX=""  S IBY=$G(^DGCR(399.2,+IBX,0))
"RTN","IBRFN3",80,0)
 . S IBJ=IBJ+1,ARRAY("RVC")=IBJ
"RTN","IBRFN3",81,0)
 . S ARRAY("RVC",IBJ)=$P(IBY,U,1)_U_$P(IBY,U,2)_U_$P(IBX,U,2)_U_$P(IBX,U,3)_U_$P(IBX,U,4)
"RTN","IBRFN3",82,0)
 ;
"RTN","IBRFN3",83,0)
OPV ; outpatient visit dates
"RTN","IBRFN3",84,0)
 S (IBI,IBJ)=0,ARRAY("OPV")=IBJ F  S IBI=$O(^DGCR(399,IBIFN,"OP",IBI)) Q:'IBI  D
"RTN","IBRFN3",85,0)
 . S IBX=$G(^DGCR(399,IBIFN,"OP",IBI,0)) Q:'IBX
"RTN","IBRFN3",86,0)
 . S IBJ=IBJ+1,ARRAY("OPV")=IBJ
"RTN","IBRFN3",87,0)
 . S ARRAY("OPV",IBJ)=+IBX
"RTN","IBRFN3",88,0)
 ;
"RTN","IBRFN3",89,0)
PRC ; procedure codes
"RTN","IBRFN3",90,0)
 S (IBI,IBJ)=0,ARRAY("PRC")=IBJ F  S IBI=$O(^DGCR(399,IBIFN,"CP",IBI)) Q:'IBI  D
"RTN","IBRFN3",91,0)
 . S IBX=$G(^DGCR(399,IBIFN,"CP",IBI,0)),IBY=""
"RTN","IBRFN3",92,0)
 . S IBDATE=$P(IBX,U,2) I 'IBDATE S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBRFN3",93,0)
 . S IBY=$P($$PRCD^IBCEF1($P(IBX,U),1,IBDATE),U,2,3)
"RTN","IBRFN3",94,0)
 . Q:$P(IBY,U)=""
"RTN","IBRFN3",95,0)
 . S IBJ=IBJ+1,ARRAY("PRC")=IBJ
"RTN","IBRFN3",96,0)
 . S ARRAY("PRC",IBJ)=IBY_U_$P(IBX,U,2)
"RTN","IBRFN3",97,0)
 . S IBY=$G(^IBE(353.1,+$P(IBX,U,9),0)),ARRAY("PRC",IBJ)=ARRAY("PRC",IBJ)_U_$P(IBY,U)_U_$P(IBY,U,3)
"RTN","IBRFN3",98,0)
 . S IBY=$G(^IBE(353.2,+$P(IBX,U,10),0)),ARRAY("PRC",IBJ)=ARRAY("PRC",IBJ)_U_$P(IBY,U)_U_$P(IBY,U,3)
"RTN","IBRFN3",99,0)
 ;
"RTN","IBRFN3",100,0)
DX ; diagnosis codes
"RTN","IBRFN3",101,0)
 K IBTMP D SET^IBCSC4D(IBIFN,"",.IBTMP)
"RTN","IBRFN3",102,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBRFN3",103,0)
 S (IBI,IBJ)=0,ARRAY("DXS")=IBJ F  S IBI=$O(IBTMP(IBI)) Q:'IBI  D
"RTN","IBRFN3",104,0)
 . S IBX=IBTMP(IBI),IBY=$$ICD9^IBACSV(+IBX,IBDATE) Q:IBY=""
"RTN","IBRFN3",105,0)
 . S IBJ=IBJ+1,ARRAY("DXS")=IBJ
"RTN","IBRFN3",106,0)
 . S ARRAY("DXS",IBJ)=$P(IBY,U)_U_$P(IBY,U,3)
"RTN","IBRFN3",107,0)
 ;
"RTN","IBRFN3",108,0)
RX ; prescription refills
"RTN","IBRFN3",109,0)
 K IBTMP D SET^IBCSC5A(IBIFN,.IBTMP)
"RTN","IBRFN3",110,0)
 S (IBI,IBJ)=0,ARRAY("RXF")=IBJ F  S IBI=$O(IBTMP(IBI)) Q:'IBI  D
"RTN","IBRFN3",111,0)
 . S IBK=0 F  S IBK=$O(IBTMP(IBI,IBK)) Q:'IBK  D
"RTN","IBRFN3",112,0)
 .. S IBX=IBTMP(IBI,IBK),IBY=$G(^PSDRUG(+$P(IBX,U,2),0))
"RTN","IBRFN3",113,0)
 .. S IBJ=IBJ+1,ARRAY("RXF")=IBJ
"RTN","IBRFN3",114,0)
 .. S ARRAY("RXF",IBJ)=IBI_U_IBK_U_$P(IBY,U,1)_U_$P(IBX,U,3)_U_$P(IBX,U,4)_U_$P(IBX,U,5)
"RTN","IBRFN3",115,0)
 ;
"RTN","IBRFN3",116,0)
PD ; prosthetic items
"RTN","IBRFN3",117,0)
 K IBTMP D SET^IBCSC5B(IBIFN,.IBTMP)
"RTN","IBRFN3",118,0)
 S (IBI,IBJ)=0,ARRAY("PRD")=IBJ F  S IBI=$O(IBTMP(IBI)) Q:'IBI  D
"RTN","IBRFN3",119,0)
 . S IBK=0 F  S IBK=$O(IBTMP(IBI,IBK)) Q:'IBK  D
"RTN","IBRFN3",120,0)
 .. S IBX=IBTMP(IBI,IBK)
"RTN","IBRFN3",121,0)
 .. S IBJ=IBJ+1,ARRAY("PRD")=IBJ
"RTN","IBRFN3",122,0)
 .. S ARRAY("PRD",IBJ)=$P($$PIN^IBCSC5B(IBK),U,2)_U_IBI
"RTN","IBRFN3",123,0)
 ;
"RTN","IBRFN3",124,0)
CC ; condition related to employment, auto accident (place), other accident
"RTN","IBRFN3",125,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"CC",IBI)) Q:'IBI  I $G(^(IBI,0))="02" S ARRAY("CRE")="EMPLOYMENT"
"RTN","IBRFN3",126,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"OC",IBI)) Q:'IBI  S IBX=$G(^(IBI,0)) I +IBX D
"RTN","IBRFN3",127,0)
 . S IBY=$G(^DGCR(399.1,+IBX,0)) Q:IBY=""
"RTN","IBRFN3",128,0)
 . I $P(IBY,U,9)=1 S ARRAY("CRE")="EMPLOYMENT"
"RTN","IBRFN3",129,0)
 . I $P(IBY,U,9)=2 S ARRAY("CRA")="AUTO ACCIDENT"_U_$$STATE($P(IBX,U,3))
"RTN","IBRFN3",130,0)
 . I $P(IBY,U,9)=3 S ARRAY("CRO")="OTHER ACCIDENT"
"RTN","IBRFN3",131,0)
 Q
"RTN","IBRFN3",132,0)
 ;
"RTN","IBRFN3",133,0)
STATE(X) ; returns 2 letter abbreviation for state
"RTN","IBRFN3",134,0)
 Q $P($G(^DIC(5,+X,0)),U,2)
"RTN","IBRFN3",135,0)
ZIP(X) ; returns zip in external form
"RTN","IBRFN3",136,0)
 S X=$E(X,1,5)_$S($E(X,6,9)]"":"-"_$E(X,6,9),1:"")
"RTN","IBRFN3",137,0)
 Q X
"RTN","IBRFN3",138,0)
RTI(X) ; returns external form of relationship to insured
"RTN","IBRFN3",139,0)
 I X'="" S X=$S(X="01":"PATIENT",X="02":"SPOUSE",X="03":"NATURAL CHILD",X="08":"EMPLOYEE",X="09":"UNKNOWN",X="11":"ORGAN DONOR",X="15":"INJURED PLANTIFF",X="18":"PARENT",1:"")
"RTN","IBRFN3",140,0)
 Q X
"RTN","IBRFN3",141,0)
 ;IBRFN3
"RTN","IBTOBI2")
0^44^B19691453
"RTN","IBTOBI2",1,0)
IBTOBI2 ;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ;27-OCT-93
"RTN","IBTOBI2",2,0)
 ;;2.0;INTEGRATED BILLING;**210**;21-MAR-94
"RTN","IBTOBI2",3,0)
 ;
"RTN","IBTOBI2",4,0)
IR ; -- print insurance review information
"RTN","IBTOBI2",5,0)
 Q:'$O(^IBT(356.2,"C",+IBTRN,0))  ; -no reivews
"RTN","IBTOBI2",6,0)
 I ($Y+11)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI2",7,0)
 W !,"  Insurance Review Information "
"RTN","IBTOBI2",8,0)
 N I,J,IBII,IBTRC,IBTRCD,IBACTION,TCODE
"RTN","IBTOBI2",9,0)
 S IBII="" F  S IBII=$O(^IBT(356.2,"ATIDT",IBTRN,IBII)) Q:'IBII!(IBQUIT)  S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"ATIDT",IBTRN,IBII,IBTRC)) Q:'IBTRC!(IBQUIT)  D
"RTN","IBTOBI2",10,0)
 .N IBJ,IBD
"RTN","IBTOBI2",11,0)
 .D IR1
"RTN","IBTOBI2",12,0)
 .D IR2
"RTN","IBTOBI2",13,0)
 .S IBJ=0 F  S IBJ=$O(IBD(IBJ)) Q:'IBJ  W !,$E($G(IBD(IBJ,1)),1,39),?40,$E($G(IBD(IBJ,2)),1,39)
"RTN","IBTOBI2",14,0)
 .D COMM2(IBTRC) Q:IBQUIT
"RTN","IBTOBI2",15,0)
 .W !?30,"-----------------------------------"
"RTN","IBTOBI2",16,0)
 .I ($Y+11)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI2",17,0)
 W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI2",18,0)
 Q
"RTN","IBTOBI2",19,0)
 ;
"RTN","IBTOBI2",20,0)
IR1 ; -- print one review
"RTN","IBTOBI2",21,0)
 S IBTRCD=$G(^IBT(356.2,+IBTRC,0)),IBTRCD1=$G(^(1))
"RTN","IBTOBI2",22,0)
 S IBD(1,1)="    Type Review: "_$$EXPAND^IBTRE(356.2,.04,$P(IBTRCD,"^",4))
"RTN","IBTOBI2",23,0)
 S TCODE=$$TCODE^IBTRC(IBTRC) I TCODE D @TCODE
"RTN","IBTOBI2",24,0)
 Q
"RTN","IBTOBI2",25,0)
10 ; -- pre-cert contact
"RTN","IBTOBI2",26,0)
15 ; -- admission review
"RTN","IBTOBI2",27,0)
20 ; -- urgent/emergent ins. contact
"RTN","IBTOBI2",28,0)
30 ; -- continued stay contact
"RTN","IBTOBI2",29,0)
 S IBD(2,1)="         Action: "_$$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11))
"RTN","IBTOBI2",30,0)
 S IBACTION=$P($G(^IBE(356.7,+$P(IBTRCD,"^",11),0)),"^",3)
"RTN","IBTOBI2",31,0)
 S IBACTION=IBACTION+100 D @IBACTION
"RTN","IBTOBI2",32,0)
 Q
"RTN","IBTOBI2",33,0)
 ;
"RTN","IBTOBI2",34,0)
40 ; -- Discharge contact
"RTN","IBTOBI2",35,0)
100 ; -- No type of action
"RTN","IBTOBI2",36,0)
 Q
"RTN","IBTOBI2",37,0)
50 ; -- outpatient treatment
"RTN","IBTOBI2",38,0)
 S IBD(2,1)="  Opt Treatment: "_$$EXPAND^IBTRE(356.2,.26,$P(IBTRCD,"^",26))
"RTN","IBTOBI2",39,0)
 S IBD(3,1)="         Action: "_$$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11))
"RTN","IBTOBI2",40,0)
 S IBD(4,1)="   Auth. Number: "_$P(IBTRCD,"^",28)
"RTN","IBTOBI2",41,0)
 Q
"RTN","IBTOBI2",42,0)
60 ; -- Appeal
"RTN","IBTOBI2",43,0)
65 ; -- Nth appeal
"RTN","IBTOBI2",44,0)
 S IBD(2,1)="    Appeal Type: "_$$EXPAND^IBTRE(356.2,.23,$P(IBTRCD,"^",23))
"RTN","IBTOBI2",45,0)
 S IBD(3,1)="    Case Status: "_$$EXPAND^IBTRE(356.2,.1,$P(IBTRCD,"^",10))
"RTN","IBTOBI2",46,0)
 S IBD(4,1)="No Days Pending: "_$$EXPAND^IBTRE(356.2,.25,$P(IBTRCD,"^",25))
"RTN","IBTOBI2",47,0)
 S IBD(5,1)="  Final Outcome: "_$$EXPAND^IBTRE(356.2,.29,$P(IBTRCD,"^",29))
"RTN","IBTOBI2",48,0)
 Q
"RTN","IBTOBI2",49,0)
70 ; -- Patient
"RTN","IBTOBI2",50,0)
80 ; -- Other
"RTN","IBTOBI2",51,0)
85 ; -- Insurance verification
"RTN","IBTOBI2",52,0)
90 ;
"RTN","IBTOBI2",53,0)
 Q
"RTN","IBTOBI2",54,0)
 ;
"RTN","IBTOBI2",55,0)
110 ; -- approval actions
"RTN","IBTOBI2",56,0)
 S IBD(3,1)="Authorized From: "_$S($P(IBTRCD1,"^",8):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",12)))
"RTN","IBTOBI2",57,0)
 S IBD(4,1)="  Authorized To: "_$S($P(IBTRCD1,"^",8):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",13)))
"RTN","IBTOBI2",58,0)
 S IBD(5,1)="Authorized Diag: "_$$DIAG^IBTRE6($P(IBTRCD,"^",14),1,$$TRNDATE^IBACSV($G(IBTRN)))
"RTN","IBTOBI2",59,0)
 S IBD(6,1)="   Auth. Number: "_$P(IBTRCD,"^",28)
"RTN","IBTOBI2",60,0)
 Q
"RTN","IBTOBI2",61,0)
120 ; -- denial actions
"RTN","IBTOBI2",62,0)
 S IBD(3,1)="    Denied From: "_$S($P(IBTRCD1,"^",7):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",15)))
"RTN","IBTOBI2",63,0)
 S IBD(4,1)="      Denied To: "_$S($P(IBTRCD1,"^",7):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",16)))
"RTN","IBTOBI2",64,0)
 S IBI=0,IBD=4 F  S IBI=$O(^IBT(356.2,IBTRC,12,IBI)) Q:'IBI  D
"RTN","IBTOBI2",65,0)
 .S IBD=IBD+1
"RTN","IBTOBI2",66,0)
 .S IBD(IBD,1)=" Denial Reasons: "_$$EXPAND^IBTRE(356.212,.01,+$G(^IBT(356.2,IBTRC,12,IBI,0)))
"RTN","IBTOBI2",67,0)
 Q
"RTN","IBTOBI2",68,0)
130 ; -- penalty
"RTN","IBTOBI2",69,0)
 S IBI=0,IBD=2 F  S IBI=$O(^IBT(356.2,IBTRC,13,IBI)) Q:'IBI  D
"RTN","IBTOBI2",70,0)
 .S IBD=IBD+1
"RTN","IBTOBI2",71,0)
 .S IBD(IBD,1)="        Penalty: "_$$EXPAND^IBTRE(356.213,.01,+$G(^IBT(356.2,IBTRC,13,IBI,0)))
"RTN","IBTOBI2",72,0)
 Q
"RTN","IBTOBI2",73,0)
140 ; -- case pending
"RTN","IBTOBI2",74,0)
 S IBD(3,1)="   Case Pending: "_$$EXPAND^IBTRE(356.2,.2,$P(IBTRCD,"^",20))
"RTN","IBTOBI2",75,0)
 Q
"RTN","IBTOBI2",76,0)
150 ; -- no coverage
"RTN","IBTOBI2",77,0)
 S IBD(3,1)="    No Coverage: "_$$EXPAND^IBTRE(356.2,.21,$P(IBTRCD,"^",21))
"RTN","IBTOBI2",78,0)
 Q
"RTN","IBTOBI2",79,0)
 ;
"RTN","IBTOBI2",80,0)
IR2 ; -- contact information
"RTN","IBTOBI2",81,0)
 ;N IBCDFN,IBCPOL
"RTN","IBTOBI2",82,0)
 ;S IBCDFN=$P(IBTRCD1,"^",5),IBCPOL=$P(^DPT(DFN,.312,IBCDFN,0),"^",18)
"RTN","IBTOBI2",83,0)
 S IBD(1,2)="     Review Date: "_$E($$DAT1^IBOUTL(+IBTRCD,"2P"),1,20)
"RTN","IBTOBI2",84,0)
 S IBD(2,2)="   Insurance Co.: "_$E($P($G(^DIC(36,+$G(^DPT(DFN,.312,+$P(IBTRCD1,"^",5),0)),0)),"^"),1,20)
"RTN","IBTOBI2",85,0)
 S IBD(3,2)="Person Contacted: "_$E($P(IBTRCD,"^",6),1,20)
"RTN","IBTOBI2",86,0)
 S IBD(4,2)="  Contact Method: "_$E($$EXPAND^IBTRE(356.2,.17,$P(IBTRCD,"^",17)),1,20)
"RTN","IBTOBI2",87,0)
 S IBD(5,2)="Call Ref. Number: "_$E($P(IBTRCD,"^",9),1,20)
"RTN","IBTOBI2",88,0)
 S IBD(6,2)="          Status: "_$E($$EXPAND^IBTRE(356.2,.19,$P(IBTRCD,"^",19)),1,20)
"RTN","IBTOBI2",89,0)
 S IBD(7,2)="  Last Edited By: "_$E($$EXPAND^IBTRE(356.2,1.04,$P($G(^IBT(356.2,+$G(IBTRC),1)),"^",4)),1,20)
"RTN","IBTOBI2",90,0)
 I '$P(IBTRCD,"^",2) S IBD(2,2)="Patient Contacted: "_$E($P($G(^DPT(+$P(IBTRCD,"^",5),0)),"^"),1,20)
"RTN","IBTOBI2",91,0)
 Q
"RTN","IBTOBI2",92,0)
 ;
"RTN","IBTOBI2",93,0)
COMM2(DA) ; -- print comments from ins. reviews.
"RTN","IBTOBI2",94,0)
 W !,"Comment: "
"RTN","IBTOBI2",95,0)
 Q:'$D(^IBT(356.2,DA,11))
"RTN","IBTOBI2",96,0)
 K ^UTILITY($J,"W")
"RTN","IBTOBI2",97,0)
 S DIWL=10,DIWR=IOM-12,DIWF="W"
"RTN","IBTOBI2",98,0)
 S IBJ=0 F  S IBJ=$O(^IBT(356.2,DA,11,IBJ)) Q:'IBJ  S X=^(IBJ,0) D ^DIWP I IOSL<($Y+4) Q:IBQUIT  D HDR^IBTOBI
"RTN","IBTOBI2",99,0)
 Q:IBQUIT
"RTN","IBTOBI2",100,0)
 D ^DIWW
"RTN","IBTOBI2",101,0)
 K ^UTILITY($J,"W")
"RTN","IBTOBI2",102,0)
 Q
"RTN","IBTOBI4")
0^53^B21042599
"RTN","IBTOBI4",1,0)
IBTOBI4 ;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ;27-OCT-93
"RTN","IBTOBI4",2,0)
 ;;2.0;INTEGRATED BILLING;**91,125,51,210**;21-MAR-94
"RTN","IBTOBI4",3,0)
 ;
"RTN","IBTOBI4",4,0)
CLIN ; -- output clinical information
"RTN","IBTOBI4",5,0)
 N IBOE,DGPM
"RTN","IBTOBI4",6,0)
 Q:$D(IBCTHDR)
"RTN","IBTOBI4",7,0)
 ;
"RTN","IBTOBI4",8,0)
 I $P(IBETYP,"^",3)=1 S DGPM=$P(^IBT(356,+IBTRN,0),"^",5) I 'DGPM Q
"RTN","IBTOBI4",9,0)
 I $P(IBETYP,"^",3)=2 S IBOE=$P(^IBT(356,+IBTRN,0),"^",4)
"RTN","IBTOBI4",10,0)
 F IBTAG="DIAG","PROC","PROV" D @IBTAG Q:IBQUIT
"RTN","IBTOBI4",11,0)
 Q
"RTN","IBTOBI4",12,0)
 ;
"RTN","IBTOBI4",13,0)
DIAG ; -- print diagnosis information
"RTN","IBTOBI4",14,0)
 I '$G(DGPM),('$G(IBOE)) Q
"RTN","IBTOBI4",15,0)
 Q:$P(IBETYP,"^",3)>2
"RTN","IBTOBI4",16,0)
 I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI4",17,0)
DIAG1 W !,"  Diagnosis Information "
"RTN","IBTOBI4",18,0)
 N IBXY,SDDXY
"RTN","IBTOBI4",19,0)
 I $G(DGPM) D SET^IBTRE3(+IBTRN) W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST^IBTRE3(.IBXY)
"RTN","IBTOBI4",20,0)
 I $G(IBOE) D SET^SDCO4(IBOE) W:'$D(SDDXY) !?6,"Nothing on File" D:$D(SDDXY) LIST^SDCO4(.SDDXY)
"RTN","IBTOBI4",21,0)
 ; 
"RTN","IBTOBI4",22,0)
 D:$G(DGPM) DRG
"RTN","IBTOBI4",23,0)
 W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI4",24,0)
 Q
"RTN","IBTOBI4",25,0)
 ;
"RTN","IBTOBI4",26,0)
PROC ; -- print procedure information
"RTN","IBTOBI4",27,0)
 Q:$P(IBETYP,"^",3)>2
"RTN","IBTOBI4",28,0)
 I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI4",29,0)
PROC1 W !,"  Procedure Information "
"RTN","IBTOBI4",30,0)
 ;
"RTN","IBTOBI4",31,0)
 N IBXY,IBCNT,IBVAL,IBCBK S IBCNT=0
"RTN","IBTOBI4",32,0)
 I $G(DGPM) D SET^IBTRE4(+IBTRN) W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST^IBTRE4(.IBXY)
"RTN","IBTOBI4",33,0)
 I '$G(DGPM) D  W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST(.IBXY)
"RTN","IBTOBI4",34,0)
 .S IBDT=$P($P(IBTRND,"^",6),".")
"RTN","IBTOBI4",35,0)
 .;
"RTN","IBTOBI4",36,0)
 .S IBVAL("DFN")=DFN,IBVAL("BDT")=IBDT-.000001,IBVAL("EDT")=IBDT\1_".99"
"RTN","IBTOBI4",37,0)
 .; Only want to extract procedures from parent encounters to avoid dups
"RTN","IBTOBI4",38,0)
 .S IBCBK="I '$P(Y0,U,6) D GETPROC^IBTOBI4(Y,Y0,.IBCNT,.IBXY)"
"RTN","IBTOBI4",39,0)
 .D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK) K ^TMP("DIERR",$J)
"RTN","IBTOBI4",40,0)
 ;
"RTN","IBTOBI4",41,0)
 W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI4",42,0)
 Q
"RTN","IBTOBI4",43,0)
 ;
"RTN","IBTOBI4",44,0)
GETPROC(IBOE,IBOE0,IBCNT,IBXY) ; output:  IBXY(cnt) = CPT IFN ^ DT/TM ^ Mod,Mod ^ Encounter Provider (#1204)
"RTN","IBTOBI4",45,0)
 N I2,IBCPT,IBCPTS,IBZERR,IBM,IBMODS
"RTN","IBTOBI4",46,0)
 D GETCPT^SDOE(IBOE,"IBCPTS","IBZERR")
"RTN","IBTOBI4",47,0)
 Q:'$O(IBCPTS(0))  ;No procedures for this encounter
"RTN","IBTOBI4",48,0)
 S I2=0
"RTN","IBTOBI4",49,0)
 F  S I2=$O(IBCPTS(I2)) Q:'I2  F Z=1:1:$P(IBCPTS(I2),U,16) D
"RTN","IBTOBI4",50,0)
 . S IBMODS="",IBM=0
"RTN","IBTOBI4",51,0)
 . F  S IBM=$O(IBCPTS(I2,1,IBM)) Q:'IBM  S IBMODS=$S(IBMODS="":"",1:",")_$G(IBCPTS(I2,1,IBM,0))
"RTN","IBTOBI4",52,0)
 . S IBCNT=IBCNT+1,IBXY(IBCNT)=$P(IBCPTS(I2),U)_U_+IBOE0_U_IBMODS_U_$P($G(IBCPTS(I2,12)),U,4)
"RTN","IBTOBI4",53,0)
 Q
"RTN","IBTOBI4",54,0)
 ;
"RTN","IBTOBI4",55,0)
PROV ; -- print provider information
"RTN","IBTOBI4",56,0)
 I '$G(DGPM),('$G(IBOE)) Q
"RTN","IBTOBI4",57,0)
 Q:$P(IBETYP,"^",3)>2
"RTN","IBTOBI4",58,0)
 I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI4",59,0)
PROV1 W !,"  Provider Information "
"RTN","IBTOBI4",60,0)
 N IBXY,SDPRY
"RTN","IBTOBI4",61,0)
 I $G(DGPM) D SET^IBTRE5(+IBTRN) W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST^IBTRE5(.IBXY)
"RTN","IBTOBI4",62,0)
 I $G(IBOE) D SET^SDCO3(IBOE) W:'$D(SDPRY) !?6,"Nothing on File" D:$D(SDPRY) LIST^SDCO3(.SDPRY)
"RTN","IBTOBI4",63,0)
 W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI4",64,0)
 Q
"RTN","IBTOBI4",65,0)
 ;
"RTN","IBTOBI4",66,0)
LIST(IBXY) ; -- list procedures array
"RTN","IBTOBI4",67,0)
 ; Input  -- IBXY     Diagnosis Array Subscripted by a Number
"RTN","IBTOBI4",68,0)
 ; Output -- List Diagnosis Array
"RTN","IBTOBI4",69,0)
 N I,IBXD,IBMODS,J,IBM,IBDATE
"RTN","IBTOBI4",70,0)
 W !
"RTN","IBTOBI4",71,0)
 S I=0 F  S I=$O(IBXY(I)) Q:'I  D
"RTN","IBTOBI4",72,0)
 . S IBDATE=$P(IBXY(I),U,2)
"RTN","IBTOBI4",73,0)
 . S IBXD=$$PRCD^IBCEF1(+IBXY(I)_";ICPT(",1,IBDATE)
"RTN","IBTOBI4",74,0)
 . W !?2,I,"  ",$P(IBXD,U,2),?15,$E($P(IBXD,U,3),1,40),?60,$$DAT1^IBOUTL(IBDATE,"2P")
"RTN","IBTOBI4",75,0)
 . S IBMODS=$$MODLST^IBEFUNC2($P(IBXY(I),U,3),1,.IBMODS)
"RTN","IBTOBI4",76,0)
 . I IBMODS'="" F J=1:1:$L(IBMODS,",") W !,?15,$P(IBMODS,",",J),?20,$P($G(IBMODS(1)),",",J)
"RTN","IBTOBI4",77,0)
 Q
"RTN","IBTOBI4",78,0)
 ;
"RTN","IBTOBI4",79,0)
DRG ; -- print drgs.
"RTN","IBTOBI4",80,0)
 I '$G(DGPM) Q
"RTN","IBTOBI4",81,0)
 Q:$P(IBETYP,"^",3)>1
"RTN","IBTOBI4",82,0)
 I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI4",83,0)
DRG1 W !!,"  Associated Interim DRG Information "
"RTN","IBTOBI4",84,0)
 N IBX,IBDTE,IBDRG
"RTN","IBTOBI4",85,0)
 I $G(DGPM) D
"RTN","IBTOBI4",86,0)
 .I '$O(^IBT(356.93,"AMVD",DGPM,0)) W !?6,"Nothing on File" Q
"RTN","IBTOBI4",87,0)
 .S IBDTE=0 F  S IBDTE=$O(^IBT(356.93,"AMVD",DGPM,IBDTE)) Q:'IBDTE  S IBDRG=0 F  S IBDRG=$O(^IBT(356.93,"AMVD",DGPM,IBDTE,IBDRG)) Q:'IBDRG  D
"RTN","IBTOBI4",88,0)
 ..S IBX=$G(^IBT(356.93,IBDRG,0)) Q:IBX=""
"RTN","IBTOBI4",89,0)
 ..W !?5,$$DAT1^IBOUTL($P(IBX,"^",3)),?16,+IBX," - ",$G(^ICD(+IBX,1,1,0))
"RTN","IBTOBI4",90,0)
 ..W !?21," Estimate ALOS: "_$J($P(IBX,"^",4),4,1)
"RTN","IBTOBI4",91,0)
 ..W ?45," Days Remaining: "_$J($P(IBX,"^",5),2)
"RTN","IBTOBI4",92,0)
 Q
"RTN","IBTOBI4",93,0)
 ;
"RTN","IBTOBI4",94,0)
4 ; -- Visit region for prosthetics
"RTN","IBTOBI4",95,0)
 N IBDA,IBRMPR S IBDA=$P(IBTRND,"^",9) D PRODATA^IBTUTL1(IBDA)
"RTN","IBTOBI4",96,0)
 S IBD(2,1)="          Item: "_$G(IBRMPR(660,+IBDA,4,"E"))
"RTN","IBTOBI4",97,0)
 S IBD(3,1)="   Description: "_$G(IBRMPR(660,+IBDA,24,"E"))
"RTN","IBTOBI4",98,0)
 S IBD(4,1)="      Quantity: "_$J($G(IBRMPR(660,+IBDA,5,"E")),4)
"RTN","IBTOBI4",99,0)
 S IBD(5,1)="    Total Cost: $"_$G(IBRMPR(660,+IBDA,14,"E"))
"RTN","IBTOBI4",100,0)
 S IBD(6,1)="   Transaction: "_$G(IBRMPR(660,+IBDA,2,"E"))
"RTN","IBTOBI4",101,0)
 S IBD(7,1)="        Vendor: "_$G(IBRMPR(660,+IBDA,7,"E"))
"RTN","IBTOBI4",102,0)
 S IBD(8,1)="        Source: "_$G(IBRMPR(660,+IBDA,12,"E"))
"RTN","IBTOBI4",103,0)
 S IBD(9,1)=" Delivery Date: "_$G(IBRMPR(660,+IBDA,10,"E"))
"RTN","IBTOBI4",104,0)
 S IBD(10,1)="       Remarks: "_$G(IBRMPR(660,+IBDA,16,"E"))
"RTN","IBTOBI4",105,0)
 S IBD(11,1)=" Return Status: "_$G(IBRMPR(660,+IBDA,17,"E"))
"RTN","IBTOBI4",106,0)
 Q
"RTN","IBTRCD")
0^46^B24519897
"RTN","IBTRCD",1,0)
IBTRCD ;ALB/AAS - CLAIMS TRACKING - EXPAND CONTACTS SCREEN ; 02-JUL-1993
"RTN","IBTRCD",2,0)
 ;;2.0;INTEGRATED BILLING;**210**;21-MAR-94
"RTN","IBTRCD",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRCD",4,0)
 ;
"RTN","IBTRCD",5,0)
% ;
"RTN","IBTRCD",6,0)
EN ; -- main entry point for IBT EXPAND/EDIT COMMUNICATIONS
"RTN","IBTRCD",7,0)
 I '$D(DT) D DT^DICRW
"RTN","IBTRCD",8,0)
 K XQORS,VALMEVL,IBTRC,IBTRD,IBTRV,IBTRN,DFN
"RTN","IBTRCD",9,0)
 I '$G(IBTRC) G EN^IBTRC
"RTN","IBTRCD",10,0)
 D EN^VALM("IBT EXPAND/EDIT COMMUNICATIONS")
"RTN","IBTRCD",11,0)
 Q
"RTN","IBTRCD",12,0)
 ;
"RTN","IBTRCD",13,0)
HDR ; -- header code
"RTN","IBTRCD",14,0)
 D PID^VADPT
"RTN","IBTRCD",15,0)
 S VALMHDR(1)="Expanded Insurance Reviews for: "_$$PT^IBTUTL1(DFN)_"   ROI: "_$$EXPAND^IBTRE(356,.31,$P($G(^IBT(356,+$G(IBTRN),0)),"^",31))
"RTN","IBTRCD",16,0)
 S VALMHDR(2)="                           for: "_$$EXPAND^IBTRE(356,.18,$P(IBTRND,"^",18))_" on "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P")
"RTN","IBTRCD",17,0)
 Q
"RTN","IBTRCD",18,0)
 ;
"RTN","IBTRCD",19,0)
INIT ; -- init variables and list array
"RTN","IBTRCD",20,0)
 N IBTRCD,IBTRCD1
"RTN","IBTRCD",21,0)
 K VALMQUIT
"RTN","IBTRCD",22,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBTRCD",23,0)
 D BLD,HDR
"RTN","IBTRCD",24,0)
 Q
"RTN","IBTRCD",25,0)
 ;
"RTN","IBTRCD",26,0)
BLD ; -- build display
"RTN","IBTRCD",27,0)
 K ^TMP("IBTRCD",$J),^TMP("IBTRCDDX",$J)
"RTN","IBTRCD",28,0)
 D KILL^VALM10()
"RTN","IBTRCD",29,0)
 S IBTRCD=$G(^IBT(356.2,IBTRC,0)),IBTRCD1=$G(^IBT(356.2,IBTRC,1))
"RTN","IBTRCD",30,0)
 S IBTRND=$G(^IBT(356,IBTRN,0))
"RTN","IBTRCD",31,0)
 F I=1:1:27 D BLANK^IBTRED(.I)
"RTN","IBTRCD",32,0)
 S VALMCNT=27
"RTN","IBTRCD",33,0)
 D ACTION,EN^IBTRCD0
"RTN","IBTRCD",34,0)
 Q
"RTN","IBTRCD",35,0)
 ;
"RTN","IBTRCD",36,0)
 ;
"RTN","IBTRCD",37,0)
ACTION ; -- Ins. Action infomation display
"RTN","IBTRCD",38,0)
 N OFFSET,START,TCODE,IBACTION,IBLCNT
"RTN","IBTRCD",39,0)
 S START=1,OFFSET=45,IBLCNT=0
"RTN","IBTRCD",40,0)
 D SET^IBCNSP(START,OFFSET," Action Information ",IORVON,IORVOFF)
"RTN","IBTRCD",41,0)
 D SET^IBCNSP(START+1,OFFSET,"   Type Contact: "_$$EXPAND^IBTRE(356.2,.04,$P(IBTRCD,"^",4)))
"RTN","IBTRCD",42,0)
 S TCODE=$$TCODE^IBTRC(IBTRC) I TCODE D @TCODE
"RTN","IBTRCD",43,0)
 Q
"RTN","IBTRCD",44,0)
10 ; -- pre-cert contact
"RTN","IBTRCD",45,0)
15 ; -- admission review
"RTN","IBTRCD",46,0)
20 ; -- urgent/emergent ins. contact
"RTN","IBTRCD",47,0)
30 ; -- continued stay contact
"RTN","IBTRCD",48,0)
 S IBLCNT=2
"RTN","IBTRCD",49,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"         Action: "_$$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11)))
"RTN","IBTRCD",50,0)
 S IBACTION=$P($G(^IBE(356.7,+$P(IBTRCD,"^",11),0)),"^",3)
"RTN","IBTRCD",51,0)
 S IBACTION=IBACTION+100 D @IBACTION
"RTN","IBTRCD",52,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",53,0)
 Q
"RTN","IBTRCD",54,0)
 ;
"RTN","IBTRCD",55,0)
40 ; -- Discharge contact
"RTN","IBTRCD",56,0)
100 ; -- No type of action
"RTN","IBTRCD",57,0)
 Q
"RTN","IBTRCD",58,0)
50 ; -- outpatient treatment
"RTN","IBTRCD",59,0)
 S IBLCNT=2
"RTN","IBTRCD",60,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET," Opt Treatment: "_$$EXPAND^IBTRE(356.2,.26,$P(IBTRCD,"^",26)))
"RTN","IBTRCD",61,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",62,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"         Action: "_$$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11)))
"RTN","IBTRCD",63,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",64,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"   Auth. Number: "_$P(IBTRCD,"^",28))
"RTN","IBTRCD",65,0)
 ;D SET^IBCNSP(START+IBLCNT,OFFSET,"Treatment Auth: "_$$EXPAND^IBTRE(356.2,.27,$P(IBTRCD,"^",27)))
"RTN","IBTRCD",66,0)
 Q
"RTN","IBTRCD",67,0)
60 ; -- Appeal
"RTN","IBTRCD",68,0)
65 ; -- Nth appeal
"RTN","IBTRCD",69,0)
 D SET^IBCNSP(START+2,OFFSET,"    Appeal Type: "_$$EXPAND^IBTRE(356.2,.23,$P(IBTRCD,"^",23)))
"RTN","IBTRCD",70,0)
 D SET^IBCNSP(START+3,OFFSET,"    Case Status: "_$$EXPAND^IBTRE(356.2,.1,$P(IBTRCD,"^",10)))
"RTN","IBTRCD",71,0)
 D SET^IBCNSP(START+4,OFFSET,"No Days Pending: "_$$EXPAND^IBTRE(356.2,.25,$P(IBTRCD,"^",25)))
"RTN","IBTRCD",72,0)
 D SET^IBCNSP(START+5,OFFSET,"  Final Outcome: "_$$EXPAND^IBTRE(356.2,.29,$P(IBTRCD,"^",29)))
"RTN","IBTRCD",73,0)
 Q
"RTN","IBTRCD",74,0)
70 ; -- Patient
"RTN","IBTRCD",75,0)
80 ; -- Other
"RTN","IBTRCD",76,0)
85 ; -- Insurance verification
"RTN","IBTRCD",77,0)
 Q
"RTN","IBTRCD",78,0)
 ;
"RTN","IBTRCD",79,0)
110 ; -- approval actions
"RTN","IBTRCD",80,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",81,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"Authorized From: "_$S($P(IBTRCD1,"^",8):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",12))))
"RTN","IBTRCD",82,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",83,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"  Authorized To: "_$S($P(IBTRCD1,"^",8):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",13))))
"RTN","IBTRCD",84,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",85,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"Authorized Diag: "_$$DIAG^IBTRE6($P(IBTRCD,"^",14),1,$$TRNDATE^IBACSV($G(IBTRN))))
"RTN","IBTRCD",86,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",87,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"   Auth. Number: "_$P(IBTRCD,"^",28))
"RTN","IBTRCD",88,0)
 Q
"RTN","IBTRCD",89,0)
120 ; -- denial actions
"RTN","IBTRCD",90,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",91,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"    Denied From: "_$S($P(IBTRCD1,"^",7):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",15))))
"RTN","IBTRCD",92,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",93,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"      Denied To: "_$S($P(IBTRCD1,"^",7):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",16))))
"RTN","IBTRCD",94,0)
 S IBI=0 F  S IBI=$O(^IBT(356.2,IBTRC,12,IBI)) Q:'IBI!(IBLCNT>6)  D
"RTN","IBTRCD",95,0)
 .S IBLCNT=IBLCNT+1
"RTN","IBTRCD",96,0)
 .D SET^IBCNSP(START+IBLCNT,OFFSET," Denial Reasons: "_$$EXPAND^IBTRE(356.212,.01,+$G(^IBT(356.2,IBTRC,12,IBI,0))))
"RTN","IBTRCD",97,0)
 Q
"RTN","IBTRCD",98,0)
130 ; -- penalty
"RTN","IBTRCD",99,0)
 S IBI=0 F  S IBI=$O(^IBT(356.2,IBTRC,13,IBI)) Q:'IBI!(IBLCNT>6)  D
"RTN","IBTRCD",100,0)
 .S IBLCNT=IBLCNT+1
"RTN","IBTRCD",101,0)
 .D SET^IBCNSP(START+IBLCNT,OFFSET,"        Penalty: "_$$EXPAND^IBTRE(356.213,.01,+$G(^IBT(356.2,IBTRC,13,IBI,0))))
"RTN","IBTRCD",102,0)
 Q
"RTN","IBTRCD",103,0)
140 ; -- case pending
"RTN","IBTRCD",104,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",105,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"   Case Pending: "_$$EXPAND^IBTRE(356.2,.2,$P(IBTRCD,"^",20)))
"RTN","IBTRCD",106,0)
 Q
"RTN","IBTRCD",107,0)
150 ; -- no coverage
"RTN","IBTRCD",108,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",109,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"    No Coverage: "_$$EXPAND^IBTRE(356.2,.21,$P(IBTRCD,"^",21)))
"RTN","IBTRCD",110,0)
 Q
"RTN","IBTRCD",111,0)
 ;
"RTN","IBTRCD",112,0)
 ;
"RTN","IBTRCD",113,0)
HELP ; -- help code
"RTN","IBTRCD",114,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBTRCD",115,0)
 Q
"RTN","IBTRCD",116,0)
 ;
"RTN","IBTRCD",117,0)
EXIT ; -- exit code
"RTN","IBTRCD",118,0)
 K VALMQUIT,IBTRC,IBTRCD,IBTRCD1
"RTN","IBTRCD",119,0)
 K ^TMP("IBTRCD",$J),^TMP("IBTRCDDX",$J)
"RTN","IBTRCD",120,0)
 D CLEAN^VALM10,FULL^VALM1
"RTN","IBTRCD",121,0)
 Q
"RTN","IBTRE3")
0^33^B25988323
"RTN","IBTRE3",1,0)
IBTRE3 ;ALB/AAS - CLAIMS TRACKING EDIT DIAGNOSIS ;1-SEP-93
"RTN","IBTRE3",2,0)
 ;;2.0;INTEGRATED BILLING;**10,60,210**;21-MAR-94
"RTN","IBTRE3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRE3",4,0)
 ;
"RTN","IBTRE3",5,0)
% G ^IBTRE
"RTN","IBTRE3",6,0)
 ;
"RTN","IBTRE3",7,0)
EN(IBTRN) ; -- entry point for protocols
"RTN","IBTRE3",8,0)
 ;    must do own rebuild actions
"RTN","IBTRE3",9,0)
 ; -- Input - point to 356
"RTN","IBTRE3",10,0)
 ;
"RTN","IBTRE3",11,0)
 N IBETYP,IBTRND,IBXY,IBCNT,IBDGPM
"RTN","IBTRE3",12,0)
 D FULL^VALM1
"RTN","IBTRE3",13,0)
 S VALMBCK=""
"RTN","IBTRE3",14,0)
 S IBTRND=$G(^IBT(356,+IBTRN,0)),IBDGPM=$P(IBTRND,"^",5)
"RTN","IBTRE3",15,0)
 ;
"RTN","IBTRE3",16,0)
 S IBETYP=$$TRTP^IBTRE1(IBTRN)
"RTN","IBTRE3",17,0)
 I IBETYP>2 W !!,"Clinical Information comes from the parent package." D PAUSE^VALM1 G ENQ
"RTN","IBTRE3",18,0)
 ;
"RTN","IBTRE3",19,0)
 ; -- outpatient diagnosis
"RTN","IBTRE3",20,0)
 I IBETYP=2 D  G ENQ
"RTN","IBTRE3",21,0)
 .I $P(IBTRND,"^",4) D ASK^IBTUTL4(IBTRN,2)
"RTN","IBTRE3",22,0)
 .I '$P(IBTRND,"^",4) W !!,"Can not add diagnosis to outpatient visits prior to Check-out.",! D PAUSE^VALM1
"RTN","IBTRE3",23,0)
 .S VALMBCK="R"
"RTN","IBTRE3",24,0)
 ;
"RTN","IBTRE3",25,0)
 ; -- Inpatient diagnosis
"RTN","IBTRE3",26,0)
 I IBETYP=1 D
"RTN","IBTRE3",27,0)
 .Q:'IBDGPM
"RTN","IBTRE3",28,0)
 .;
"RTN","IBTRE3",29,0)
 .; -- ask admitting diagnosis if not already there
"RTN","IBTRE3",30,0)
 .I '$O(^IBT(356.9,"ADG",+IBDGPM,0)) D ADIAG(IBTRN,IBETYP)
"RTN","IBTRE3",31,0)
 .I $G(IBSEL)="^" Q
"RTN","IBTRE3",32,0)
 .;
"RTN","IBTRE3",33,0)
 .; -- edit other diagnosis
"RTN","IBTRE3",34,0)
 .D DIAG(IBTRN,IBETYP)
"RTN","IBTRE3",35,0)
 .S VALMBCK="R"
"RTN","IBTRE3",36,0)
 ;
"RTN","IBTRE3",37,0)
ENQ ;
"RTN","IBTRE3",38,0)
 Q
"RTN","IBTRE3",39,0)
ADIAG(IBTRN,IBETYP) ; -- add admitting diagnosis
"RTN","IBTRE3",40,0)
 ;
"RTN","IBTRE3",41,0)
 N IBADG,DA,DR,DIC,DIE,DD,DO,IOINHI,IOINORM,IBDATE
"RTN","IBTRE3",42,0)
 S IBADG=""
"RTN","IBTRE3",43,0)
 ;
"RTN","IBTRE3",44,0)
 S IBDATE=$$TRNDATE^IBACSV(IBTRN) ; Service date for CSV
"RTN","IBTRE3",45,0)
 ;
"RTN","IBTRE3",46,0)
 ;S IBDGPM=$P(^IBT(356,+IBTRN,0),"^",5)
"RTN","IBTRE3",47,0)
 I IBETYP'=1!('IBDGPM) W !!,"You can only enter an admitting diagnosis for an admission",! D PAUSE^VALM1 G ADGQ
"RTN","IBTRE3",48,0)
 ;
"RTN","IBTRE3",49,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBTRE3",50,0)
 S IBADG=$O(^IBT(356.9,"ADG",IBDGPM,0)) I IBADG S IBDA=$O(^IBT(356.9,"ADG",IBDGPM,IBADG,0))
"RTN","IBTRE3",51,0)
 W !!,"--- ",IOINHI,"Admitting Diagnosis",IOINORM," --- "
"RTN","IBTRE3",52,0)
 I 'IBADG W "Unspecified"
"RTN","IBTRE3",53,0)
 E  D
"RTN","IBTRE3",54,0)
 . N IBDX
"RTN","IBTRE3",55,0)
 . S IBDX=$$ICD9^IBACSV(+IBADG,IBDATE)
"RTN","IBTRE3",56,0)
 . W $P(IBDX,U)_" -"_$P(IBDX,U,3)
"RTN","IBTRE3",57,0)
 I +IBADG D EDT(IBDA,".01;") W !
"RTN","IBTRE3",58,0)
 I '$O(^IBT(356.9,"ADG",+IBDGPM,0)) D ADD(IBTRN,3)
"RTN","IBTRE3",59,0)
 ;
"RTN","IBTRE3",60,0)
 W !
"RTN","IBTRE3",61,0)
ADGQ Q
"RTN","IBTRE3",62,0)
 ;
"RTN","IBTRE3",63,0)
DIAG(IBTRN,IBETYP) ; -- add/edit diagnosis
"RTN","IBTRE3",64,0)
 Q:'IBTRN
"RTN","IBTRE3",65,0)
 I $G(IBETYP)'=1 Q
"RTN","IBTRE3",66,0)
 N DA,DR,DIC,DIE
"RTN","IBTRE3",67,0)
 S IBDGPM=$P(^IBT(356,+IBTRN,0),"^",5)
"RTN","IBTRE3",68,0)
 I IBETYP'=1!('IBDGPM) W !!,"You can only enter a diagnosis for an admission",! D PAUSE^VALM1 G ADGQ
"RTN","IBTRE3",69,0)
 ;
"RTN","IBTRE3",70,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBTRE3",71,0)
 W !!,"--- ",IOINHI,"Diagnosis",IOINORM," --- "
"RTN","IBTRE3",72,0)
 S IBSEL="Add"
"RTN","IBTRE3",73,0)
 D SET(IBTRN) I $D(IBXY) D LIST(.IBXY) S IBSEL=$$ASK^IBTRE4(IBCNT,"A")
"RTN","IBTRE3",74,0)
 I IBSEL["^"!(IBSEL["Return") S:IBSEL["^" IBQUIT=1 G DIAGQ
"RTN","IBTRE3",75,0)
 I IBSEL="Add" D ADD(IBTRN)
"RTN","IBTRE3",76,0)
 D:IBSEL EDT(+$G(IBXY(+IBSEL)),".01;.03;.04")
"RTN","IBTRE3",77,0)
DIAGQ Q
"RTN","IBTRE3",78,0)
 ;
"RTN","IBTRE3",79,0)
ADD(IBTRN,TYPE) ; -- Add a new diagnosis
"RTN","IBTRE3",80,0)
 ;
"RTN","IBTRE3",81,0)
 N DTOUT,DUOUT,X,Y,DIC,IBDATE
"RTN","IBTRE3",82,0)
 S IBCNT=0
"RTN","IBTRE3",83,0)
 ;Service date (for CSV)
"RTN","IBTRE3",84,0)
 S IBDATE=$$TRNDATE^IBACSV(IBTRN) S:'IBDATE IBDATE=DT
"RTN","IBTRE3",85,0)
 ;
"RTN","IBTRE3",86,0)
 I '$G(TYPE) S TYPE=""
"RTN","IBTRE3",87,0)
NXT S DIC("A")=$S(TYPE=3:"Admitting Diagnosis: ",IBCNT<1:"Select Diagnosis: ",1:"Next Diagnosis: ")
"RTN","IBTRE3",88,0)
 ;All DX codes are visible - no screen ;S DIC("S")="I '$P(^(0),U,9)"
"RTN","IBTRE3",89,0)
 S DIC="^ICD9(",DIC(0)="AEMQ",X=""
"RTN","IBTRE3",90,0)
 W:$G(IBCNT) ! D ^DIC K DIC G ADDQ:Y<0
"RTN","IBTRE3",91,0)
 I Y,'$$ICD9ACT^IBACSV(+Y,IBDATE) W !!,*7,$P(Y,U,2)," is not active for the service date ("_$$DAT3^IBOUTL(IBDATE),").",! G NXT
"RTN","IBTRE3",92,0)
 I $D(^IBT(356.9,"ADGPM",$$DGPM(IBTRN),+Y)) W !!,*7,$P(Y,"^",2)," is already a diagnosis.",! G NXT
"RTN","IBTRE3",93,0)
 S IBCNT=IBCNT+1
"RTN","IBTRE3",94,0)
 S IBADG=$$NEW(+Y,IBTRN,TYPE)
"RTN","IBTRE3",95,0)
 I IBADG,TYPE'=3 D EDT(IBADG) G NXT
"RTN","IBTRE3",96,0)
ADDQ I $D(DTOUT)!($D(DUOUT)) S IBSEL="^"
"RTN","IBTRE3",97,0)
 Q
"RTN","IBTRE3",98,0)
 ;
"RTN","IBTRE3",99,0)
DGPM(IBTRN) ; -- return admission pointer
"RTN","IBTRE3",100,0)
 Q $P(^IBT(356,+IBTRN,0),"^",5)
"RTN","IBTRE3",101,0)
 ;
"RTN","IBTRE3",102,0)
 ;
"RTN","IBTRE3",103,0)
NEW(ICDI,IBTRN,TYPE) ; -- file new entry
"RTN","IBTRE3",104,0)
 ;
"RTN","IBTRE3",105,0)
 N DA,DD,DO,DIC,DIK,DINUM,DLAYGO,X,Y,I,J
"RTN","IBTRE3",106,0)
 S X=ICDI,(DIC,DIK)="^IBT(356.9,",DIC(0)="L",DLAYGO=356.9
"RTN","IBTRE3",107,0)
 D FILE^DICN S IBADG=+Y
"RTN","IBTRE3",108,0)
 I IBADG>0 L +^IBT(356.9,IBADG) S $P(^IBT(356.9,IBADG,0),"^",2,4)=$$DGPM(IBTRN)_"^"_$P($P(^IBT(356,IBTRN,0),"^",6),".")_"^"_$G(TYPE),DA=IBADG D IX1^DIK L -^IBT(356.9,IBADG)
"RTN","IBTRE3",109,0)
NEWQ Q IBADG
"RTN","IBTRE3",110,0)
 ;
"RTN","IBTRE3",111,0)
EDT(IBADG,IBDR) ; -- edit entry
"RTN","IBTRE3",112,0)
 ;
"RTN","IBTRE3",113,0)
 N DR,DIE,DA,DIDEL
"RTN","IBTRE3",114,0)
 S DR=$G(IBDR),DIDEL=356.9 I DR="" S DR=".03;.04"
"RTN","IBTRE3",115,0)
 S DA=IBADG,DIE="^IBT(356.9,"
"RTN","IBTRE3",116,0)
 Q:'$G(^IBT(356.9,DA,0))
"RTN","IBTRE3",117,0)
 L +^IBT(356.9,+IBADG):5 I '$T D LOCKED^IBTRCD1 G EDTQ
"RTN","IBTRE3",118,0)
 D ^DIE
"RTN","IBTRE3",119,0)
 L -^IBT(356.9,+IBADG)
"RTN","IBTRE3",120,0)
EDTQ Q
"RTN","IBTRE3",121,0)
 ;
"RTN","IBTRE3",122,0)
SET(IBTRN) ; -- set array
"RTN","IBTRE3",123,0)
 N IBDGPM,IBICD,IBDA
"RTN","IBTRE3",124,0)
 S IBDGPM=$$DGPM(IBTRN)
"RTN","IBTRE3",125,0)
 S (IBICD,IBCNT)=0
"RTN","IBTRE3",126,0)
 F  S IBICD=$O(^IBT(356.9,"ADGPM",IBDGPM,IBICD)) Q:'IBICD  S IBDA=0 F  S IBDA=$O(^IBT(356.9,"ADGPM",IBDGPM,IBICD,IBDA)) Q:'IBDA  D
"RTN","IBTRE3",127,0)
 .Q:'$D(^IBT(356.9,+IBDA,0))
"RTN","IBTRE3",128,0)
 .S IBCNT=IBCNT+1
"RTN","IBTRE3",129,0)
 .S IBXY(IBCNT)=IBDA_"^"_IBICD
"RTN","IBTRE3",130,0)
SETQ Q
"RTN","IBTRE3",131,0)
 ;
"RTN","IBTRE3",132,0)
LIST(IBXY) ;List Diagnosis Array
"RTN","IBTRE3",133,0)
 ; Input  -- IBXY     Diagnosis Array Subscripted by a Number
"RTN","IBTRE3",134,0)
 ; Output -- List Diagnosis Array
"RTN","IBTRE3",135,0)
 N I,IBXD,IBDATE
"RTN","IBTRE3",136,0)
 W !
"RTN","IBTRE3",137,0)
 S I=0 F  S I=$O(IBXY(I)) Q:'I  D
"RTN","IBTRE3",138,0)
 . S IBTNOD=$G(^IBT(356.9,+IBXY(I),0))
"RTN","IBTRE3",139,0)
 . S IBDATE=$P($P(IBTNOD,U,3),".")
"RTN","IBTRE3",140,0)
 . S IBXD=$$ICD9^IBACSV(+$P(IBXY(I),U,2),IBDATE)
"RTN","IBTRE3",141,0)
 . W !?2,I,"  ",$P(IBXD,U),?15,$E($P(IBXD,U,3),1,30),?48,$$DAT1^IBOUTL(IBDATE),?60,$$EXPAND^IBTRE(356.9,.04,$P(IBTNOD,U,4))
"RTN","IBTRE3",142,0)
 Q
"RTN","IBTRE4")
0^34^B27862268
"RTN","IBTRE4",1,0)
IBTRE4 ;ALB/AAS - CLAIMS TRACKING EDIT PROCEDURE ;1-SEP-93
"RTN","IBTRE4",2,0)
 ;;2.0;INTEGRATED BILLING;**10,210**;21-MAR-94
"RTN","IBTRE4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRE4",4,0)
 ;
"RTN","IBTRE4",5,0)
% G ^IBTRE
"RTN","IBTRE4",6,0)
 ;
"RTN","IBTRE4",7,0)
EN(IBTRN) ; -- entry point for protocols
"RTN","IBTRE4",8,0)
 ;    must do own rebuild actions
"RTN","IBTRE4",9,0)
 ; -- Input - point to 356
"RTN","IBTRE4",10,0)
 ;
"RTN","IBTRE4",11,0)
 N IBETYP,IBTRND,IBXY,IBCNT,IBDGPM
"RTN","IBTRE4",12,0)
 D FULL^VALM1
"RTN","IBTRE4",13,0)
 S VALMBCK=""
"RTN","IBTRE4",14,0)
 S IBTRND=$G(^IBT(356,IBTRN,0)),IBDGPM=$P(IBTRND,"^",5)
"RTN","IBTRE4",15,0)
 ;
"RTN","IBTRE4",16,0)
 S IBETYP=$$TRTP^IBTRE1(IBTRN)
"RTN","IBTRE4",17,0)
 I IBETYP>2 W !!,"Clinical Information comes from the parent package." D PAUSE^VALM1 G ENQ
"RTN","IBTRE4",18,0)
 ;
"RTN","IBTRE4",19,0)
 ; -- outpatient procedure
"RTN","IBTRE4",20,0)
 I IBETYP=2 D  G ENQ
"RTN","IBTRE4",21,0)
 .W !!,*7,"You must use the add/edit action on Check-out to add procedures to Outpatient Encounters.",!
"RTN","IBTRE4",22,0)
 .S VALMBCK="R"
"RTN","IBTRE4",23,0)
 ;
"RTN","IBTRE4",24,0)
 ; -- Inpatient procedure
"RTN","IBTRE4",25,0)
 Q:'IBDGPM
"RTN","IBTRE4",26,0)
 I IBETYP=1 D PROC(IBTRN,IBETYP) S VALMBCK="R"
"RTN","IBTRE4",27,0)
 ;
"RTN","IBTRE4",28,0)
ENQ ;
"RTN","IBTRE4",29,0)
 Q
"RTN","IBTRE4",30,0)
 ;
"RTN","IBTRE4",31,0)
PROC(IBTRN,IBETYP) ; -- add/edit procedure
"RTN","IBTRE4",32,0)
 Q:'IBTRN
"RTN","IBTRE4",33,0)
 I $G(IBETYP)'=1 Q
"RTN","IBTRE4",34,0)
 N DA,DR,DIC,DIE
"RTN","IBTRE4",35,0)
 ;S IBDGPM=$P(^IBT(356,+IBTRN,0),"^",5)
"RTN","IBTRE4",36,0)
 I IBETYP'=1!('IBDGPM) W !!,"You can only enter a procedure for an admission",! D PAUSE^VALM1 G PROCQ
"RTN","IBTRE4",37,0)
 ;
"RTN","IBTRE4",38,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBTRE4",39,0)
 W !!,"--- ",IOINHI,"Procedure",IOINORM," --- "
"RTN","IBTRE4",40,0)
 S IBSEL="Add"
"RTN","IBTRE4",41,0)
 D SET(IBTRN) I $D(IBXY) D LIST(.IBXY) S IBSEL=$$ASK(IBCNT,"A")
"RTN","IBTRE4",42,0)
 I IBSEL["^"!(IBSEL["Return") S:IBSEL["^" IBQUIT=1 G PROCQ
"RTN","IBTRE4",43,0)
 I IBSEL="Add" D ADD(IBTRN)
"RTN","IBTRE4",44,0)
 I IBSEL D EDT(+$G(IBXY(+IBSEL)),".01;.03;"),CHECK(+$G(IBXY(+IBSEL)))
"RTN","IBTRE4",45,0)
PROCQ Q
"RTN","IBTRE4",46,0)
 ;
"RTN","IBTRE4",47,0)
CHECK(IBADG) ; Check active status of the ICD0 code (Code Set Versioning)
"RTN","IBTRE4",48,0)
 N IBZ,DIR,X,Y
"RTN","IBTRE4",49,0)
 S IBZ=$G(^IBT(356.91,+$G(IBADG),0)) Q:'IBZ
"RTN","IBTRE4",50,0)
 Q:$$ICD0ACT^IBACSV(+IBZ,$P(IBZ,U,3))
"RTN","IBTRE4",51,0)
 W !!,*7,"Warning! The Procedure Code ",$P($$ICD0^IBACSV(+IBZ),U)," is inactive on this date!"
"RTN","IBTRE4",52,0)
 S DIR(0)="EA",DIR("A")="Press <Enter> to continue" D ^DIR
"RTN","IBTRE4",53,0)
 Q
"RTN","IBTRE4",54,0)
 ;
"RTN","IBTRE4",55,0)
ADD(IBTRN,TYPE) ; -- Add a new procedure
"RTN","IBTRE4",56,0)
 ;
"RTN","IBTRE4",57,0)
 N DTOUT,DUTOU,X,Y,DIC,DIR,IBDATE,IBP,IBPN,IBPDT,IBADT
"RTN","IBTRE4",58,0)
 ;Service date (for CSV)
"RTN","IBTRE4",59,0)
 S IBDATE=$$TRNDATE^IBACSV(IBTRN)
"RTN","IBTRE4",60,0)
 S IBADT=$G(^DGPM(+$$DGPM^IBTRE3(IBTRN),0)) ;Admission Date
"RTN","IBTRE4",61,0)
 S IBCNT=0
"RTN","IBTRE4",62,0)
 I '$G(TYPE) S TYPE=""
"RTN","IBTRE4",63,0)
NXT ; The Procedure Date has to be asked first for the Code Set Versioning requirements
"RTN","IBTRE4",64,0)
 ; Input Procedure Date
"RTN","IBTRE4",65,0)
 S DIR(0)="D",DIR("A")=$S(IBCNT<1:"Procedure Date",1:"Next Procedure Date")
"RTN","IBTRE4",66,0)
 S DIR("B")=$$DAT3^IBOUTL(IBDATE)
"RTN","IBTRE4",67,0)
 W:$G(IBCNT) !
"RTN","IBTRE4",68,0)
 S IBPDT=IBDATE D ^DIR K DIR G ADDQ:Y'?7N S IBPDT=+Y W "  ",$$DAT2^IBOUTL(IBPDT)
"RTN","IBTRE4",69,0)
 ; The same checking as in the Data Dictionary, file #356.91, field #.03 (PROCEDURE DATE):
"RTN","IBTRE4",70,0)
 I IBADT,(IBPDT+.9)<IBADT W !!,*7,"The Procedure Date cannot be earlier than Admission (",$$DAT3^IBOUTL(IBADT),")",! G NXT
"RTN","IBTRE4",71,0)
 ; Input Procedure (ICD0)
"RTN","IBTRE4",72,0)
 S DIC("A")="Select Procedure: "
"RTN","IBTRE4",73,0)
 S DIC("S")="I $$ICD0ACT^IBACSV(+Y,IBPDT)"
"RTN","IBTRE4",74,0)
 S DIC="^ICD0(",DIC(0)="AEMQ",X=""
"RTN","IBTRE4",75,0)
 D ^DIC K DIC G ADDQ:Y'>0
"RTN","IBTRE4",76,0)
 S IBP=+Y,IBPN=$P(Y,U,2) ; Procedure IEN and name
"RTN","IBTRE4",77,0)
 ;I '$$ICD0ACT^IBACSV(IBP,IBPDT) W !!,*7,IBPN," is not active for the procedure date ("_$$DAT3^IBOUTL(IBPDT),").",! G NXT
"RTN","IBTRE4",78,0)
 I $D(^IBT(356.91,"ADGPM",$$DGPM^IBTRE3(IBTRN),IBP)) W !!,*7,IBPN," is already a procedure.",!
"RTN","IBTRE4",79,0)
 S IBCNT=IBCNT+1
"RTN","IBTRE4",80,0)
 S IBADG=$$NEW(IBP,IBTRN,TYPE,IBPDT)
"RTN","IBTRE4",81,0)
 I IBADG>0,TYPE'=3 G NXT ;D EDT(IBADG) G NXT
"RTN","IBTRE4",82,0)
ADDQ Q
"RTN","IBTRE4",83,0)
 ;
"RTN","IBTRE4",84,0)
NEW(ICDI,IBTRN,TYPE,IBPDT) ; -- file new entry
"RTN","IBTRE4",85,0)
 ;
"RTN","IBTRE4",86,0)
 N DA,DD,DO,DIC,DIK,DINUM,DLAYGO,X,Y,I,J
"RTN","IBTRE4",87,0)
 S X=ICDI,(DIC,DIK)="^IBT(356.91,",DIC(0)="L",DLAYGO=356.91
"RTN","IBTRE4",88,0)
 D FILE^DICN S IBADG=+Y I Y'>0 G NEWQ
"RTN","IBTRE4",89,0)
 I '$G(IBPDT) S IBPDT=$P($P(^IBT(356,IBTRN,0),"^",6),".")
"RTN","IBTRE4",90,0)
 L +^IBT(356.91,IBADG) S $P(^IBT(356.91,IBADG,0),"^",2,3)=$$DGPM^IBTRE3(IBTRN)_"^"_IBPDT,DA=IBADG D IX1^DIK L -^IBT(356.91,IBADG)
"RTN","IBTRE4",91,0)
NEWQ Q IBADG
"RTN","IBTRE4",92,0)
 ;
"RTN","IBTRE4",93,0)
EDT(IBADG,IBDR) ; -- edit entry
"RTN","IBTRE4",94,0)
 ;
"RTN","IBTRE4",95,0)
 N DR,DIE,DA,DIDEL
"RTN","IBTRE4",96,0)
 S DR=$G(IBDR),DIDEL=356.91 I DR="" S DR=".03;"
"RTN","IBTRE4",97,0)
 S DA=IBADG,DIE="^IBT(356.91,"
"RTN","IBTRE4",98,0)
 Q:'$G(^IBT(356.91,DA,0))
"RTN","IBTRE4",99,0)
 L +^IBT(356.91,IBADG):5 I '$T D LOCKED^IBTRCD1 G EDTQ
"RTN","IBTRE4",100,0)
 D ^DIE
"RTN","IBTRE4",101,0)
 L -^IBT(356.91,IBADG)
"RTN","IBTRE4",102,0)
EDTQ Q
"RTN","IBTRE4",103,0)
 ;
"RTN","IBTRE4",104,0)
SET(IBTRN) ; -- set array
"RTN","IBTRE4",105,0)
 N IBDGPM,IBICD
"RTN","IBTRE4",106,0)
 S IBDGPM=$$DGPM^IBTRE3(IBTRN)
"RTN","IBTRE4",107,0)
 S (IBICD,IBDA,IBCNT)=0
"RTN","IBTRE4",108,0)
 F  S IBICD=$O(^IBT(356.91,"ADGPM",IBDGPM,IBICD)) Q:'IBICD  S IBDA=0 F  S IBDA=$O(^IBT(356.91,"ADGPM",IBDGPM,IBICD,IBDA)) Q:'IBDA  D
"RTN","IBTRE4",109,0)
 .Q:'$D(^IBT(356.91,+IBDA,0))
"RTN","IBTRE4",110,0)
 .S IBCNT=IBCNT+1
"RTN","IBTRE4",111,0)
 .S IBXY(IBCNT)=IBDA_"^"_IBICD
"RTN","IBTRE4",112,0)
SETQ Q
"RTN","IBTRE4",113,0)
 ;
"RTN","IBTRE4",114,0)
LIST(IBXY) ;List Diagnosis Array
"RTN","IBTRE4",115,0)
 ; Input  -- IBXY     Diagnosis Array Subscripted by a Number
"RTN","IBTRE4",116,0)
 ; Output -- List Diagnosis Array
"RTN","IBTRE4",117,0)
 N I,IBXD,IBDATE
"RTN","IBTRE4",118,0)
 W !
"RTN","IBTRE4",119,0)
 S I=0 F  S I=$O(IBXY(I)) Q:'I  D
"RTN","IBTRE4",120,0)
 . S IBTNOD=$G(^IBT(356.91,+IBXY(I),0))
"RTN","IBTRE4",121,0)
 . S IBDATE=$P($P(IBTNOD,U,3),".") ; Procedure date
"RTN","IBTRE4",122,0)
 . S IBXD=$$ICD0^IBACSV(+$P(IBXY(I),U,2),IBDATE)
"RTN","IBTRE4",123,0)
 . W !?2,I,"  ",$P(IBXD,U),?15,$E($P(IBXD,U,4),1,43),?60,$$DAT1^IBOUTL(IBDATE)
"RTN","IBTRE4",124,0)
 Q
"RTN","IBTRE4",125,0)
 ;
"RTN","IBTRE4",126,0)
ASK(IBCNT,IBPAR,IBSELDF) ;Ask user to select from list
"RTN","IBTRE4",127,0)
 ; Input  -- SDCNT    Number of Entities
"RTN","IBTRE4",128,0)
 ;           SDPAR    Selection Parameters (A=Add)
"RTN","IBTRE4",129,0)
 ;           SDSELDF  Selection Default  [Optional]
"RTN","IBTRE4",130,0)
 ; Output -- Selection
"RTN","IBTRE4",131,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRE4",132,0)
REASK S DIR("?")="Enter "_$S($G(IBSELDF)]"":"<RETURN> for '"_IBSELDF_"', ",1:"")_$S(IBCNT=1:"1",1:"1-"_IBCNT)_" to Edit"_$S(IBPAR["A":", or 'A' to Add",1:"")
"RTN","IBTRE4",133,0)
 S DIR("A")="Enter "_$S(IBCNT=1:"1",1:"1-"_IBCNT)_" to Edit"_$S(IBPAR["A":", or 'A' to Add",1:"")_": "_$S($G(IBSELDF)]"":IBSELDF_"// ",1:"")
"RTN","IBTRE4",134,0)
 S DIR(0)="FAO^1:30"
"RTN","IBTRE4",135,0)
 D ^DIR I $D(DTOUT)!($D(DUOUT)) S Y="^" G ASKQ
"RTN","IBTRE4",136,0)
 S Y=$$UPPER^VALM1(Y)
"RTN","IBTRE4",137,0)
 I Y?.N,Y,Y'>IBCNT G ASKQ
"RTN","IBTRE4",138,0)
 I IBPAR["A",$E(Y)="A" S Y="Add" G ASKQ
"RTN","IBTRE4",139,0)
 I Y="" S Y=$S($G(IBSELDF)]"":IBSELDF,1:"Return") G ASKQ
"RTN","IBTRE4",140,0)
 W !!?5,DIR("?"),".",! G REASK
"RTN","IBTRE4",141,0)
ASKQ Q $G(Y)
"RTN","IBTRE6")
0^35^B15005544
"RTN","IBTRE6",1,0)
IBTRE6 ;ALB/AAS - CLAIMS TRACKING OUTPUT CLIN DATA ;2-SEP-1993
"RTN","IBTRE6",2,0)
 ;;2.0;INTEGRATED BILLING;**210**;21-MAR-94
"RTN","IBTRE6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRE6",4,0)
 ;
"RTN","IBTRE6",5,0)
ADMDIAG(IBTRN) ; -- output admitting diagnosis (inpatient)
"RTN","IBTRE6",6,0)
 ;
"RTN","IBTRE6",7,0)
 N IBRES,IBDX,X
"RTN","IBTRE6",8,0)
 S IBRES=""
"RTN","IBTRE6",9,0)
 I '$G(IBTRN) G ADMDQ
"RTN","IBTRE6",10,0)
 S IBETYP=$$TRTP^IBTRE1(IBTRN) I IBETYP>1 G ADMDQ
"RTN","IBTRE6",11,0)
 S IBDX=+$O(^IBT(356.9,"ADG",+$P(^IBT(356,+IBTRN,0),"^",5),0))
"RTN","IBTRE6",12,0)
 I $D(VAIN(9)) S IBRES=VAIN(9) G ADMDQ
"RTN","IBTRE6",13,0)
 N VAIN,VAINDT,VA200
"RTN","IBTRE6",14,0)
 S VAINDT=$P($G(^IBT(356,+IBTRN,0)),U,6)
"RTN","IBTRE6",15,0)
 S VA200="" D INP^VADPT
"RTN","IBTRE6",16,0)
 S IBRES=VAIN(9)
"RTN","IBTRE6",17,0)
ADMDQ Q IBRES
"RTN","IBTRE6",18,0)
 ;
"RTN","IBTRE6",19,0)
PDIAG(IBTRN) ; -- return primary diagnosis (inpatient)
"RTN","IBTRE6",20,0)
 N IBRES,IBDX
"RTN","IBTRE6",21,0)
 S IBRES=""
"RTN","IBTRE6",22,0)
 I '$G(IBTRN) G PDIAGQ
"RTN","IBTRE6",23,0)
 S IBDX=+$G(^IBT(356.9,+$O(^IBT(356.9,"ATP",+$P(^IBT(356,+IBTRN,0),"^",5),1,0)),0))
"RTN","IBTRE6",24,0)
 S IBRES=$$DIAG(IBDX,1,$$TRNDATE^IBACSV(IBTRN))
"RTN","IBTRE6",25,0)
PDIAGQ Q IBRES
"RTN","IBTRE6",26,0)
 ;
"RTN","IBTRE6",27,0)
SDIAG ; -- return secondary diagnosis (inpatient
"RTN","IBTRE6",28,0)
 Q
"RTN","IBTRE6",29,0)
 ;
"RTN","IBTRE6",30,0)
ODIAG ; -- return outpatient diagnosis
"RTN","IBTRE6",31,0)
 Q
"RTN","IBTRE6",32,0)
 ;
"RTN","IBTRE6",33,0)
DIAG(IBDX,IBTXT,IBDT) ; -- Expand diagnosis from pointer
"RTN","IBTRE6",34,0)
 ; -- input IBDX  = pointer to diag
"RTN","IBTRE6",35,0)
 ;          IBTXT = if want text added (zero = number only)
"RTN","IBTRE6",36,0)
 N IBRES,IBZ
"RTN","IBTRE6",37,0)
 I '$G(IBDX) Q ""
"RTN","IBTRE6",38,0)
 S IBZ=$$ICD9^IBACSV(+IBDX,$G(IBDT)) I IBZ="" Q ""
"RTN","IBTRE6",39,0)
 S IBRES=$P(IBZ,U)
"RTN","IBTRE6",40,0)
 I $G(IBTXT) S IBRES=IBRES_" - "_$P(IBZ,U,3)
"RTN","IBTRE6",41,0)
 Q IBRES
"RTN","IBTRE6",42,0)
 ;
"RTN","IBTRE6",43,0)
 ;
"RTN","IBTRE6",44,0)
APROV(IBTRN) ; -- return  provider (inpatient)
"RTN","IBTRE6",45,0)
 ;
"RTN","IBTRE6",46,0)
 N X S X=""
"RTN","IBTRE6",47,0)
 I '$G(IBTRN) G APROVQ
"RTN","IBTRE6",48,0)
 S X=$O(^IBT(356.94,"ATP",+$P(^IBT(356,+IBTRN,0),"^",5),2,0)) I X S X=$P($G(^IBT(356.94,+X,0)),"^",3) G APROVQ
"RTN","IBTRE6",49,0)
 S X=+$O(^IBT(356.94,"ATP",+$P(^IBT(356,+IBTRN,0),"^",5),1,0)) I X S X=$P($G(^IBT(356.94,+X,0)),"^",3) G APROVQ
"RTN","IBTRE6",50,0)
 I $D(VAIN(2)) S X=VAIN(2) I 'X S X=$G(VAIN(11))
"RTN","IBTRE6",51,0)
 I '$D(VAIN(2)) D
"RTN","IBTRE6",52,0)
 .N VAIN,VAINDT
"RTN","IBTRE6",53,0)
 .S VAINDT=$P(^IBT(356,IBTRN,0),U,6)
"RTN","IBTRE6",54,0)
 .S VA200="" D INP^VADPT
"RTN","IBTRE6",55,0)
 .S X=VAIN(2)
"RTN","IBTRE6",56,0)
 .I 'X S X=VAIN(11)
"RTN","IBTRE6",57,0)
APROVQ Q $P($G(^VA(200,+X,0)),"^")
"RTN","IBTRE6",58,0)
 ;
"RTN","IBTRE6",59,0)
ATTEND ; -- return attendings (inpatient)
"RTN","IBTRE6",60,0)
 Q
"RTN","IBTRE6",61,0)
 ;
"RTN","IBTRE6",62,0)
PROV ; -- return providers (inpatient)
"RTN","IBTRE6",63,0)
 Q
"RTN","IBTRE6",64,0)
 ;
"RTN","IBTRE6",65,0)
OPROV ; -- returns outpatient providers
"RTN","IBTRE6",66,0)
 Q
"RTN","IBTRE6",67,0)
 ;
"RTN","IBTRE6",68,0)
PROC(IBPR,IBTXT) ; -- Expand procedure from pointer
"RTN","IBTRE6",69,0)
 ; input IBPR=proc^^date (format of ^IBT(356.91,IEN,0))
"RTN","IBTRE6",70,0)
 ;       IBTXT = if want text added (zero = number only)
"RTN","IBTRE6",71,0)
 N IBRES,IBZ
"RTN","IBTRE6",72,0)
 I '$G(Z) S Z=1 ; what is that?
"RTN","IBTRE6",73,0)
 I '$G(IBPR) Q ""
"RTN","IBTRE6",74,0)
 S IBZ=$$ICD0^IBACSV(+IBPR,$P(IBPR,U,3))
"RTN","IBTRE6",75,0)
 S IBRES=$P(IBZ,U)
"RTN","IBTRE6",76,0)
 I $G(IBTXT),IBZ'="" S IBRES=IBRES_" - "_$P(IBZ,U,4)
"RTN","IBTRE6",77,0)
 Q IBRES
"RTN","IBTRE6",78,0)
 ;
"RTN","IBTRE6",79,0)
 ;
"RTN","IBTRE6",80,0)
OPROC ; -- outpatient procedures
"RTN","IBTRE6",81,0)
 Q
"RTN","IBTRE6",82,0)
 ;
"RTN","IBTRE6",83,0)
IPROC ; -- inpatient procedures
"RTN","IBTRE6",84,0)
 Q
"RTN","IBTRE6",85,0)
 ;
"RTN","IBTRE6",86,0)
LISTP(IBTRN,IBXY) ; -- return last y  procedures for a tracking entry
"RTN","IBTRE6",87,0)
 ; -- input  ibtrn = tracking file pointer
"RTN","IBTRE6",88,0)
 ; -- output array of procedure by date - ibxy(date)=procedure node
"RTN","IBTRE6",89,0)
 ;
"RTN","IBTRE6",90,0)
 N IBDGPM,IBDT,IBDA,IBX,IBCNT
"RTN","IBTRE6",91,0)
 S (IBX,IBDT)="",IBXY=0
"RTN","IBTRE6",92,0)
 I '$G(IBTRN) G LISTPQ
"RTN","IBTRE6",93,0)
 S IBDGPM=$P($G(^IBT(356,IBTRN,0)),"^",5)
"RTN","IBTRE6",94,0)
 Q:'IBDGPM
"RTN","IBTRE6",95,0)
 F  S IBDT=$O(^IBT(356.91,"APP",IBDGPM,IBDT)) Q:'IBDT  S IBDA="" F  S IBDA=$O(^IBT(356.91,"APP",IBDGPM,IBDT,IBDA)) Q:'IBDA  D
"RTN","IBTRE6",96,0)
 .S IBX(-IBDT,IBDA)=$G(^IBT(356.91,IBDA,0))
"RTN","IBTRE6",97,0)
 ;
"RTN","IBTRE6",98,0)
 S IBDT="" F  S IBDT=$O(IBX(IBDT)) Q:'IBDT  S IBDA=0 F  S IBDA=$O(IBX(IBDT,IBDA)) Q:'IBDA  D
"RTN","IBTRE6",99,0)
 .S IBXY=IBXY+1
"RTN","IBTRE6",100,0)
 .S IBXY(IBXY)=IBX(IBDT,IBDA)
"RTN","IBTRE6",101,0)
LISTPQ Q
"RTN","IBTRE6",102,0)
 ;
"RTN","IBTRE6",103,0)
LSTPDG(X,IBDT,Y) ; -- return current diagnosis for a tracking entry
"RTN","IBTRE6",104,0)
 ; -- input      X = tracking file pointer
"RTN","IBTRE6",105,0)
 ;            ibdt = date for current diagnosis (null = last)
"RTN","IBTRE6",106,0)
 ;               y = 1= primary (default)
"RTN","IBTRE6",107,0)
 ;                   2= secondary
"RTN","IBTRE6",108,0)
 ;
"RTN","IBTRE6",109,0)
 N IBY,IBX S (IBY,IBX)=""
"RTN","IBTRE6",110,0)
 I '$G(X) G LSTPDQ
"RTN","IBTRE6",111,0)
 S:'$G(IBDT) IBDT=DT S IBDT=-(IBDT+.9)
"RTN","IBTRE6",112,0)
 S:'$G(Y) Y=1 I Y'=1,Y'=2 S Y=1
"RTN","IBTRE6",113,0)
 F  S IBDT=$O(^IBT(356.9,"APD",X,IBDT)) Q:'IBDT!($G(IBY))  S IBDA="" F  S IBDA=$O(^IBT(356.9,"APD",X,IBDT,IBDA)) Q:'IBDA!($G(IBY))  D
"RTN","IBTRE6",114,0)
 .I $P(^IBT(356.9,IBDA,0),U,4)=Y S IBY=+^(0)
"RTN","IBTRE6",115,0)
LSTPDQ Q IBY
"RTN","IBTRE6",116,0)
 ;
"RTN","IBTRE6",117,0)
DTCHK(DA,X) ; -- input transform for 356.94;.01.  date not before admission or after discharge
"RTN","IBTRE6",118,0)
 N IBTRN,IBOK,IBCDT
"RTN","IBTRE6",119,0)
 S IBOK=1
"RTN","IBTRE6",120,0)
 G:'DA!($G(X)<1) DTCHKQ
"RTN","IBTRE6",121,0)
 S IBTRN=+$O(^IBT(356,"AD",+$P(^IBT(356.94,DA,0),"^",2),0))
"RTN","IBTRE6",122,0)
 G:'IBTRN DTCHKQ
"RTN","IBTRE6",123,0)
 S IBCDT=$$CDT^IBTODD1(IBTRN)
"RTN","IBTRE6",124,0)
 I X<$P(+IBCDT,".") S IBOK=0 G DTCHKQ ;before adm
"RTN","IBTRE6",125,0)
 I $P(IBCDT,"^",2),X>$P(IBCDT,"^",2) S IBOK=0 G DTCHKQ ; after disch
"RTN","IBTRE6",126,0)
 I X>$$FMADD^XLFDT(DT,7) S IBOK=0 G DTCHKQ
"RTN","IBTRE6",127,0)
 ;
"RTN","IBTRE6",128,0)
DTCHKQ Q IBOK
"RTN","IBTRED0")
0^45^B19308865
"RTN","IBTRED0",1,0)
IBTRED0 ;ALB/AAS - EXPAND/EDIT CLAIMS TRACKING ENTRY - CONT. ;01-JUL-1993
"RTN","IBTRED0",2,0)
 ;;2.0;INTEGRATED BILLING;**160,210**;21-MAR-94
"RTN","IBTRED0",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRED0",4,0)
 ;
"RTN","IBTRED0",5,0)
% I '$G(IBTRN)!($G(IORVON)="") G ^IBTRED
"RTN","IBTRED0",6,0)
 D CLIN,BILL,PRE
"RTN","IBTRED0",7,0)
 Q
"RTN","IBTRED0",8,0)
 ;
"RTN","IBTRED0",9,0)
CLIN ; -- clinical data region
"RTN","IBTRED0",10,0)
 N OFFSET,START,IBICD
"RTN","IBTRED0",11,0)
 S START=7,OFFSET=2
"RTN","IBTRED0",12,0)
 ;
"RTN","IBTRED0",13,0)
CLIN1 N IBETYP S IBETYP=$$TRTP^IBTRE1(IBTRN) I 'IBETYP!(IBETYP>2) Q
"RTN","IBTRED0",14,0)
 D SET^IBCNSP(START,OFFSET," Clinical Information ",IORVON,IORVOFF)
"RTN","IBTRED0",15,0)
 I "12"[IBETYP D @IBETYP
"RTN","IBTRED0",16,0)
 Q
"RTN","IBTRED0",17,0)
 ;
"RTN","IBTRED0",18,0)
1 ; -- inpatient clinical data
"RTN","IBTRED0",19,0)
 ;D SET^IBCNSP(START+1,OFFSET,"      Provider: "_$E($P($G(VAIN(2)),"^",2),1,15))
"RTN","IBTRED0",20,0)
 D SET^IBCNSP(START+1,OFFSET,"      Provider: "_$E($$APROV^IBTRE6(IBTRN),1,15))
"RTN","IBTRED0",21,0)
 D SET^IBCNSP(START+2,OFFSET,"Admitting Diag: "_$E($$ADMDIAG^IBTRE6(IBTRN),1,23))
"RTN","IBTRED0",22,0)
 D SET^IBCNSP(START+3,OFFSET,"  Primary Diag: "_$E($$PDIAG^IBTRE6(IBTRN),1,23))
"RTN","IBTRED0",23,0)
 D LISTP^IBTRE6(IBTRN,.IBICD)
"RTN","IBTRED0",24,0)
 D SET^IBCNSP(START+4,OFFSET," 1st Procedure: "_$E($$PROC^IBTRE6(+$G(IBICD(1)),1),1,23))
"RTN","IBTRED0",25,0)
 D SET^IBCNSP(START+5,OFFSET," 2nd Procedure: "_$E($$PROC^IBTRE6(+$G(IBICD(2)),1),1,23))
"RTN","IBTRED0",26,0)
 Q
"RTN","IBTRED0",27,0)
 ;
"RTN","IBTRED0",28,0)
2 ; -- outpatient clinic data
"RTN","IBTRED0",29,0)
 N IBDATE ; Date of service for CSV
"RTN","IBTRED0",30,0)
 S IBDATE=$$TRNDATE^IBACSV(IBTRN)
"RTN","IBTRED0",31,0)
 S IBOE=$P(IBTRND,"^",4)
"RTN","IBTRED0",32,0)
 I +IBOE<1 D SET^IBCNSP(START+1,OFFSET,"  No Outpatient Encounter Found") Q
"RTN","IBTRED0",33,0)
 N SDDXY,SDPRY D SET^SDCO3(+IBOE) S IBPCNT=SDCNT D SET^SDCO4(IBOE) S IBDCNT=SDCNT
"RTN","IBTRED0",34,0)
 D SET^IBCNSP(START+1,OFFSET,"      Provider: "_$E($P($G(^VA(200,+$P($G(SDPRY(1)),"^",2),0)),"^"),1,23)) ;sdd(409.44
"RTN","IBTRED0",35,0)
 D SET^IBCNSP(START+2,OFFSET,"      Provider: "_$E($P($G(^VA(200,+$P($G(SDPRY(2)),"^",2),0)),"^"),1,23)) ;sdd(409.44
"RTN","IBTRED0",36,0)
 D SET^IBCNSP(START+3,OFFSET,"     Diagnosis: "_$E($$DIAG^IBTRE6(+$P($G(SDDXY(1)),"^",2),1,IBDATE),1,23)) ;sdd(409.43
"RTN","IBTRED0",37,0)
 D SET^IBCNSP(START+4,OFFSET,"     Diagnosis: "_$E($$DIAG^IBTRE6(+$P($G(SDDXY(2)),"^",2),1,IBDATE),1,23)) ;sdd(409.43
"RTN","IBTRED0",38,0)
 D SET^IBCNSP(START+5,OFFSET,"  Special Cond: "_$$ENCL^IBTRED(IBOE))
"RTN","IBTRED0",39,0)
 Q
"RTN","IBTRED0",40,0)
 ;
"RTN","IBTRED0",41,0)
BILL ; -- billing information region
"RTN","IBTRED0",42,0)
 N OFFSET,START
"RTN","IBTRED0",43,0)
 S START=15,OFFSET=2
"RTN","IBTRED0",44,0)
 S IBDGCR=$G(^DGCR(399,+$P(IBTRND,"^",11),0)),IBDGCRU1=$G(^("U1"))
"RTN","IBTRED0",45,0)
 S IBAMNT=$$BILLD^IBTRED1(IBTRN)
"RTN","IBTRED0",46,0)
 D SET^IBCNSP(START,OFFSET+20," Billing Information ",IORVON,IORVOFF)
"RTN","IBTRED0",47,0)
 D SET^IBCNSP(START+1,OFFSET,"    Episode Billable: "_$S(+$P(IBTRND,"^",19):"NO",1:"YES"))
"RTN","IBTRED0",48,0)
 D SET^IBCNSP(START+2,OFFSET," Non-Billable Reason: "_$E($P($G(^IBE(356.8,+$P(IBTRND,"^",19),0)),"^"),1,20))
"RTN","IBTRED0",49,0)
 D SET^IBCNSP(START+3,OFFSET,"      Next Bill Date: "_$$DAT1^IBOUTL($P(IBTRND,"^",17)))
"RTN","IBTRED0",50,0)
 D SET^IBCNSP(START+4,OFFSET,"Work. Comp/OWCP/Tort: "_$E($$EXPAND^IBTRE(356,.12,$P(IBTRND,"^",12)),1,14))
"RTN","IBTRED0",51,0)
 D SET^IBCNSP(START+5,OFFSET,"        Initial Bill: "_$P(IBDGCR,"^"))
"RTN","IBTRED0",52,0)
 D SET^IBCNSP(START+6,OFFSET,"         Bill Status: "_$E($$EXPAND^IBTRE(399,.13,$P(IBDGCR,"^",13)),1,14))
"RTN","IBTRED0",53,0)
 I +$P(IBTRND,"^",19) D SET^IBCNSP(START+7,OFFSET," Additional Comment: "_$E($P(IBTRND1,"^",8),1,60))
"RTN","IBTRED0",54,0)
 D BILL1
"RTN","IBTRED0",55,0)
 Q
"RTN","IBTRED0",56,0)
 ;
"RTN","IBTRED0",57,0)
BILL1 ; -- other side of billing info
"RTN","IBTRED0",58,0)
 N OFFSET,START
"RTN","IBTRED0",59,0)
 S START=15,OFFSET=45
"RTN","IBTRED0",60,0)
 D SET^IBCNSP(START+1,OFFSET,"       Total Charges: $ "_$J($P(IBAMNT,"^"),8))
"RTN","IBTRED0",61,0)
 D SET^IBCNSP(START+2,OFFSET,"Estimated Recv (Pri): $ "_$J($P(IBTRND,"^",21),8))
"RTN","IBTRED0",62,0)
 D SET^IBCNSP(START+3,OFFSET,"Estimated Recv (Sec): $ "_$J($P(IBTRND,"^",22),8))
"RTN","IBTRED0",63,0)
 D SET^IBCNSP(START+4,OFFSET,"Estimated Recv (ter): $ "_$J($P(IBTRND,"^",23),8))
"RTN","IBTRED0",64,0)
 D SET^IBCNSP(START+5,OFFSET,"  Means Test Charges: $ "_$J($P(IBTRND,"^",28),8))
"RTN","IBTRED0",65,0)
 D SET^IBCNSP(START+6,OFFSET,"         Amount Paid: $ "_$J($P(IBAMNT,"^",2),8))
"RTN","IBTRED0",66,0)
 Q
"RTN","IBTRED0",67,0)
 ;
"RTN","IBTRED0",68,0)
PRE ; -- pre-certification region
"RTN","IBTRED0",69,0)
 N OFFSET,START,IBTRC,IBTRCD
"RTN","IBTRED0",70,0)
 ;S START=15,OFFSET=45
"RTN","IBTRED0",71,0)
 S START=1,OFFSET=45
"RTN","IBTRED0",72,0)
 D SET^IBCNSP(START,OFFSET," Treatment Authorization Info ",IORVON,IORVOFF)
"RTN","IBTRED0",73,0)
 D SET^IBCNSP(START+1,OFFSET,"Authorization #: "_$$PRECRT^IBTRC1(IBTRN))
"RTN","IBTRED0",74,0)
 D SET^IBCNSP(START+2,OFFSET,"      No. Days Approved: "_$J($$DAY^IBTRE(IBTRN),3))
"RTN","IBTRED0",75,0)
 D SET^IBCNSP(START+3,OFFSET,"Second Opinion Required: "_$$EXPAND^IBTRE(356,.14,$P(IBTRND,"^",14)))
"RTN","IBTRED0",76,0)
 D SET^IBCNSP(START+4,OFFSET,"Second Opinion Obtained: "_$$EXPAND^IBTRE(356,.15,$P(IBTRND,"^",15)))
"RTN","IBTRED0",77,0)
 Q
"RTN","IBTRED0",78,0)
 ;
"RTN","IBTRED0",79,0)
SPCOND(IBTRN) ; -- see if sc or other special condition for patient
"RTN","IBTRED0",80,0)
 ; -- if inpt. look in ptf. if opt look opt encounter file
"RTN","IBTRED0",81,0)
 ;
"RTN","IBTRED0",82,0)
 Q ""
"RTN","IBTRV2")
0^36^B21706075
"RTN","IBTRV2",1,0)
IBTRV2 ;ALB/AAS - CLAIMS TRACKING -  REVIEW ACTIONS ;19-JUL-93
"RTN","IBTRV2",2,0)
 ;;2.0;INTEGRATED BILLING ;**60,210**;21-MAR-94
"RTN","IBTRV2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRV2",4,0)
 ;
"RTN","IBTRV2",5,0)
% G EN^IBTRV
"RTN","IBTRV2",6,0)
 ;
"RTN","IBTRV2",7,0)
DA(IBTRN) ; -- Add Diagnosis
"RTN","IBTRV2",8,0)
 ; -- bld = non-zero means not from main tracking  entry.
"RTN","IBTRV2",9,0)
 ;
"RTN","IBTRV2",10,0)
 N IBETYP
"RTN","IBTRV2",11,0)
 D FULL^VALM1
"RTN","IBTRV2",12,0)
 I IBETYP=2 D
"RTN","IBTRV2",13,0)
 .I $P(IBTRND,"^",4) D ASK^IBTUTL4(IBTRN,2)
"RTN","IBTRV2",14,0)
 .I '$P(IBTRND,"^",4) W !!,"Can not add diagnosis to outpatient visits prior to Check-out.",! D PAUSE^VALM1
"RTN","IBTRV2",15,0)
 I IBETYP=1 D EN^IBTRE3(IBTRN)
"RTN","IBTRV2",16,0)
 I '$G(BLD) D DRG,BLD^IBTRV
"RTN","IBTRV2",17,0)
 S VALMBCK="R"
"RTN","IBTRV2",18,0)
 Q
"RTN","IBTRV2",19,0)
 ;
"RTN","IBTRV2",20,0)
PROC(IBTRN,IBETYP,BLD) ; -- Add Procedures
"RTN","IBTRV2",21,0)
 ; -- bld = non-zero means not from main tracking  entry.
"RTN","IBTRV2",22,0)
 ;
"RTN","IBTRV2",23,0)
 I '$G(BLD) D FULL^VALM1
"RTN","IBTRV2",24,0)
 I IBETYP=2 W !!,"Outpatient Procedures should be entered using Add/Edit action in",!,"Appointment Management.",! D PAUSE^VALM1
"RTN","IBTRV2",25,0)
 I IBETYP=1 D EN^IBTRE4(IBTRN)
"RTN","IBTRV2",26,0)
 I '$G(BLD) D BLD^IBTRV
"RTN","IBTRV2",27,0)
 S VALMBCK="R"
"RTN","IBTRV2",28,0)
 Q
"RTN","IBTRV2",29,0)
PROV(IBTRN,IBETYP,BLD) ; -- Add Procedures
"RTN","IBTRV2",30,0)
 ; -- bld = non-zero means not from main tracking  entry.
"RTN","IBTRV2",31,0)
 ;
"RTN","IBTRV2",32,0)
 I '$G(BLD) D FULL^VALM1
"RTN","IBTRV2",33,0)
 I IBETYP=1 D EN^IBTRE5(IBTRN)
"RTN","IBTRV2",34,0)
 I IBETYP=2,$P(IBTRND,"^",4) D ASK^IBTUTL4(IBTRN,1)
"RTN","IBTRV2",35,0)
 I IBETYP=3 W !!,"Provider information for Prescriptions comes from the pharmacy package silly.",! D PAUSE^VALM1
"RTN","IBTRV2",36,0)
 I IBETYP=4 W !!,"Provider information for Prosthetics comes from the prothetics package silly.",! D PAUSE^VALM1
"RTN","IBTRV2",37,0)
 I '$G(BLD) D BLD^IBTRV
"RTN","IBTRV2",38,0)
 S VALMBCK="R"
"RTN","IBTRV2",39,0)
 Q
"RTN","IBTRV2",40,0)
 ;
"RTN","IBTRV2",41,0)
DRG(IBTRN) ; -- entry point to compute drg
"RTN","IBTRV2",42,0)
 ;    generally called from ad or pr above caller does own rebuild
"RTN","IBTRV2",43,0)
 N DIR,DA,DR,DIC,DIE,IBALOS,IBDRG,IBTRVD,DGPMCA,DX
"RTN","IBTRV2",44,0)
 S DGPMCA=$P(^IBT(356,IBTRN,0),"^",5) Q:'DGPMCA
"RTN","IBTRV2",45,0)
 ;
"RTN","IBTRV2",46,0)
 ; -- can't compute drg if no primary(dxls) diagnosis
"RTN","IBTRV2",47,0)
 S DX=$O(^IBT(356.9,"ATP",DGPMCA,1,0)) Q:'DX
"RTN","IBTRV2",48,0)
 D DISPDRG(DGPMCA)
"RTN","IBTRV2",49,0)
 ;
"RTN","IBTRV2",50,0)
 S DIR("?")="Answer 'Yes' to compute and store a new interim drg, answer 'No' to quit."
"RTN","IBTRV2",51,0)
 S DIR("A")="Ready to compute New Interim DRG",DIR("B")="NO",DIR(0)="Y" D ^DIR K DIR
"RTN","IBTRV2",52,0)
 I Y=1 D
"RTN","IBTRV2",53,0)
 .S IBDRG=$$COMDRG(IBTRN) Q:+IBDRG<1
"RTN","IBTRV2",54,0)
 .W !!,"DRG computes to: ",IBDRG,"  -  ",$G(^ICD(IBDRG,1,1,0))
"RTN","IBTRV2",55,0)
 .;
"RTN","IBTRV2",56,0)
 .S IBDA=$O(^IBT(356.93,"AMVD",DGPMCA,DT,0))
"RTN","IBTRV2",57,0)
 .I +IBDA<1 D
"RTN","IBTRV2",58,0)
 ..K DD,DO
"RTN","IBTRV2",59,0)
 ..S X=IBDRG
"RTN","IBTRV2",60,0)
 ..S DIC="^IBT(356.93,",DIC(0)="L",DLAYGO=356.93
"RTN","IBTRV2",61,0)
 ..S DIC("DR")=".02////"_DGPMCA_";.03////"_DT
"RTN","IBTRV2",62,0)
 ..D FILE^DICN K DIC S IBDA=+Y
"RTN","IBTRV2",63,0)
 .I +IBDA<1 Q
"RTN","IBTRV2",64,0)
 .;
"RTN","IBTRV2",65,0)
 .L +^IBT(356.93,IBDA):5 I '$T D LOCKED^IBTRCD1 Q
"RTN","IBTRV2",66,0)
 .S DIE="^IBT(356.93,",DA=IBDA
"RTN","IBTRV2",67,0)
 .S DR=".01////^S X=IBDRG;.01;S IBALOS=$$ALOS^IBTRV2(IBDRG,DT);.04//^S X=IBALOS;.05//^S X=$$DAYREM^IBTRV2(DGPMCA,IBALOS)"
"RTN","IBTRV2",68,0)
 .D ^DIE W !
"RTN","IBTRV2",69,0)
 .L -^IBT(356.93,+IBDA)
"RTN","IBTRV2",70,0)
 Q
"RTN","IBTRV2",71,0)
 ;
"RTN","IBTRV2",72,0)
DAYREM(DGPM,LOS) ; -- Compute days remaining
"RTN","IBTRV2",73,0)
 N IBX,DIFF S IBX=LOS
"RTN","IBTRV2",74,0)
 S DIFF=$$FMDIFF^XLFDT(DT,+$G(^DGPM(DGPM,0))) S:DIFF<0 DIFF=-DIFF
"RTN","IBTRV2",75,0)
 S IBX=LOS-DIFF
"RTN","IBTRV2",76,0)
 I IBX<0 S IBX=0
"RTN","IBTRV2",77,0)
 Q IBX\1
"RTN","IBTRV2",78,0)
 ;
"RTN","IBTRV2",79,0)
ALOS(X,Y) ; -- compute alos for drg for year
"RTN","IBTRV2",80,0)
 ;    input x = pointer to drg file
"RTN","IBTRV2",81,0)
 ;          y = date
"RTN","IBTRV2",82,0)
 N IBDT,J
"RTN","IBTRV2",83,0)
 S IBDT=0 F  S IBDT=$O(^IBE(356.5,"ADR",X,IBDT)) Q:'IBDT!(IBDT>Y)  D
"RTN","IBTRV2",84,0)
 .S J=$O(^IBE(356.5,"ADR",X,IBDT,0))
"RTN","IBTRV2",85,0)
 Q $P($G(^IBE(356.5,+$G(J),0)),"^",3)
"RTN","IBTRV2",86,0)
 ;
"RTN","IBTRV2",87,0)
COMDRG(IBTRN) ; -- compute drg from tracking file
"RTN","IBTRV2",88,0)
 ;*********************************************************
"RTN","IBTRV2",89,0)
 ; -- needed variable
"RTN","IBTRV2",90,0)
 ;    SEX     = m or f
"RTN","IBTRV2",91,0)
 ;    AGE     = whole number 0-120
"RTN","IBTRV2",92,0)
 ;    ICDEXP  = patient died during this episode
"RTN","IBTRV2",93,0)
 ;    ICDTRS  = patient transfered to acute care facility
"RTN","IBTRV2",94,0)
 ;    ICDDMS  = patient had irregular discharge
"RTN","IBTRV2",95,0)
 ;    ICDDX(  = diagnosis codes
"RTN","IBTRV2",96,0)
 ;    ICDPRC( = procedure codes
"RTN","IBTRV2",97,0)
 ;*********************************************************
"RTN","IBTRV2",98,0)
 N SEX,ICDEXP,ICDTRS,ICDDMS,ICDDX,ICDPRC,DX,PR,I,J,IBCNT,ICDMDC,ICDDRG,ICDDATE
"RTN","IBTRV2",99,0)
 S ICDDRG="",(ICDEXP,ICDTRS,ICDDMS,IBCNT)=0,DFN=$P(^IBT(356,IBTRN,0),"^",2)
"RTN","IBTRV2",100,0)
 ;
"RTN","IBTRV2",101,0)
 S SEX=$P($G(^DPT(DFN,0)),U,2)
"RTN","IBTRV2",102,0)
 S AGE=$$FMDIFF^XLFDT(DT,$P($G(^DPT(DFN,0)),U,3))\365.25
"RTN","IBTRV2",103,0)
 S DGPMA=$P(^IBT(356,IBTRN,0),"^",5) G:'DGPMA COMDRGQ
"RTN","IBTRV2",104,0)
 ;
"RTN","IBTRV2",105,0)
 S IBCNT=1,DX=0
"RTN","IBTRV2",106,0)
 S ICDDX(1)=+$G(^IBT(356.9,+$O(^IBT(356.9,"ATP",DGPMA,+$O(^IBT(356.9,"ATP",DGPMA,0)),0)),0))
"RTN","IBTRV2",107,0)
 F  S DX=$O(^IBT(356.9,"C",DGPMA,DX)) Q:'DX  S X=$G(^IBT(356.9,DX,0)) I $P(X,"^",4)=2 S IBCNT=IBCNT+1,ICDDX(IBCNT)=+X
"RTN","IBTRV2",108,0)
 ;
"RTN","IBTRV2",109,0)
 S IBCNT=0,J=""
"RTN","IBTRV2",110,0)
 F  S J=$O(^IBT(356.91,"APP",DGPMA,J)) Q:'J  S PR="" F  S PR=$O(^IBT(356.91,"APP",DGPMA,J,PR)) Q:'PR  S IBCNT=IBCNT+1,ICDPRC(IBCNT)=+$G(^IBT(356.91,PR,0))
"RTN","IBTRV2",111,0)
 ;
"RTN","IBTRV2",112,0)
 I $D(ICDDX(1)) S ICDDATE=$$TRNDATE^IBACSV(IBTRN) D ^ICDDRG
"RTN","IBTRV2",113,0)
COMDRGQ Q ICDDRG
"RTN","IBTRV2",114,0)
 ;
"RTN","IBTRV2",115,0)
DISPDRG(DGPMCA) ; -- Display drg's
"RTN","IBTRV2",116,0)
 N I,J,IBDRG
"RTN","IBTRV2",117,0)
 W !!,"Current Interim DRGs on File:"
"RTN","IBTRV2",118,0)
 S I=0,IBCNT=0 F  S I=$O(^IBT(356.93,"AMVD",DGPMCA,I)) Q:'I  S J=0 F  S J=$O(^IBT(356.93,"AMVD",DGPMCA,I,J)) Q:'J  D
"RTN","IBTRV2",119,0)
 .S IBDRG=$G(^IBT(356.93,J,0))
"RTN","IBTRV2",120,0)
 .W !?5,$$DAT1^IBOUTL($P(IBDRG,"^",3)),?16,+IBDRG," - ",$G(^ICD(+IBDRG,1,1,0))
"RTN","IBTRV2",121,0)
 .S IBCNT=IBCNT+1
"RTN","IBTRV2",122,0)
 I IBCNT<1 W !?5,"None on file."
"RTN","IBTRV2",123,0)
 W !
"RTN","IBTRV2",124,0)
 Q
"UP",351.61,351.612,-1)
351.61^2
"UP",351.61,351.612,0)
351.612
"UP",351.61,351.613,-1)
351.61^3
"UP",351.61,351.613,0)
351.613
"UP",361.1,361.115,-1)
361.1^15
"UP",361.1,361.115,0)
361.115
"UP",399,399.0304,-1)
399^CP
"UP",399,399.0304,0)
399.0304
"UP",399,399.042,-1)
399^RC
"UP",399,399.042,0)
399.042
"UP",399,399.30416,-2)
399^CP
"UP",399,399.30416,-1)
399.0304^MOD
"UP",399,399.30416,0)
399.30416
"VER")
8.0^22.0
"^DD",350.71,350.71,.06,0)
PROCEDURE^R*P81'^ICPT(^0;6^S DIC("S")="I $D(DA),$P($G(^IBE(350.71,+DA,0)),U,3)=""P"",$$CPTACT^IBACSV(+Y)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",350.71,350.71,.06,1,0)
^.1
"^DD",350.71,350.71,.06,1,1,0)
350.71^P
"^DD",350.71,350.71,.06,1,1,1)
S ^IBE(350.71,"P",$E(X,1,30),DA)=""
"^DD",350.71,350.71,.06,1,1,2)
K ^IBE(350.71,"P",$E(X,1,30),DA)
"^DD",350.71,350.71,.06,1,1,3)
DO NOT DELETE
"^DD",350.71,350.71,.06,1,1,"DT")
2911122
"^DD",350.71,350.71,.06,1,2,0)
350.71^AP^MUMPS
"^DD",350.71,350.71,.06,1,2,1)
I $P(^IBE(350.71,DA,0),"^",5) S ^IBE(350.71,"AP",$P(^(0),"^",5),X,DA)=""
"^DD",350.71,350.71,.06,1,2,2)
I $P(^IBE(350.71,DA,0),"^",5) K ^IBE(350.71,"AP",$P(^(0),"^",5),X,DA)
"^DD",350.71,350.71,.06,1,2,3)
DO NOT DELETE
"^DD",350.71,350.71,.06,1,2,"%D",0)
^^1^1^2920128^^^
"^DD",350.71,350.71,.06,1,2,"%D",1,0)
Quick cross-reference between procedures and sub-headers.
"^DD",350.71,350.71,.06,1,2,"DT")
2911122
"^DD",350.71,350.71,.06,3)
Enter the CPT code for this Procedure.
"^DD",350.71,350.71,.06,12)
Only TYPE "P" entries may have procedures, CPT codes must be active.
"^DD",350.71,350.71,.06,12.1)
S DIC("S")="I $D(DA),$P($G(^IBE(350.71,+DA,0)),U,3)=""P"",$$CPTACT^IBACSV(+Y)"
"^DD",350.71,350.71,.06,21,0)
^^1^1^2970509^^^^
"^DD",350.71,350.71,.06,21,1,0)
The CPT code for this PROCEDURE.  Should only be defined for TYPE="P".
"^DD",350.71,350.71,.06,"DT")
3030501
"^DD",350.9,350.9,1.29,0)
DEFAULT RX REFILL DX^*P80'^ICD9(^1;29^S DIC("S")="I $$ICD9ACT^IBACSV(+Y)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",350.9,350.9,1.29,3)
Enter a Diagnosis that should be added to every RX Refill bill.
"^DD",350.9,350.9,1.29,12)
Only active diagnosis codes may be selected.
"^DD",350.9,350.9,1.29,12.1)
S DIC("S")="I $$ICD9ACT^IBACSV(+Y)"
"^DD",350.9,350.9,1.29,21,0)
^^2^2^2940121^^^
"^DD",350.9,350.9,1.29,21,1,0)
If entered, this diagnosis will be automatically added to every bill that
"^DD",350.9,350.9,1.29,21,2,0)
has prescription refills.
"^DD",350.9,350.9,1.29,23,0)
^^1^1^2940121^^
"^DD",350.9,350.9,1.29,23,1,0)
Should probably be a genaric code like V68.1 ISSUE REPEAT PRESCRIPT.
"^DD",350.9,350.9,1.29,"DT")
3030501
"^DD",350.9,350.9,1.3,0)
DEFAULT RX REFILL CPT^*P81'^ICPT(^1;30^S DIC("S")="I $$CPTACT^IBACSV(+Y)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",350.9,350.9,1.3,3)
Enter a CPT procedure code that should be printed on every bill that has RX Refills.
"^DD",350.9,350.9,1.3,12)
Only active CPT codes may be entered.
"^DD",350.9,350.9,1.3,12.1)
S DIC("S")="I $$CPTACT^IBACSV(+Y)"
"^DD",350.9,350.9,1.3,21,0)
^^2^2^2940121^^^
"^DD",350.9,350.9,1.3,21,1,0)
If entered, this procedure will automatically be added to every bill
"^DD",350.9,350.9,1.3,21,2,0)
that has a prescription refill.
"^DD",350.9,350.9,1.3,23,0)
^^1^1^2940121^^
"^DD",350.9,350.9,1.3,23,1,0)
Should probably be a genaric code like 99070 SPECIAL SUPPLIES.
"^DD",350.9,350.9,1.3,"DT")
3030501
"^DD",351.61,351.61,1.01,0)
DRG^P80.2'^ICD(^1;1^Q
"^DD",351.61,351.61,1.01,3)
This is the DRG used to determine the cost
"^DD",351.61,351.61,1.01,21,0)
^^2^2^3000518^
"^DD",351.61,351.61,1.01,21,1,0)
This is the inpatient DRG that was calculated for the admission that the
"^DD",351.61,351.61,1.01,21,2,0)
costing of this transaction is based upon.
"^DD",351.61,351.61,1.01,"DT")
2990311
"^DD",351.61,351.61,2,0)
ICD DIAGNOSIS^351.612P^^2;0
"^DD",351.61,351.61,2,21,0)
^.001^2^2^3010831^^
"^DD",351.61,351.61,2,21,1,0)
This is the diagnosis codes for this event.  This will play into the DRG
"^DD",351.61,351.61,2,21,2,0)
calculation.
"^DD",351.61,351.61,3,0)
PROCEDURES^351.613P^^3;0
"^DD",351.61,351.61,3,21,0)
^.001^2^2^3010831^^^^
"^DD",351.61,351.61,3,21,1,0)
This is the multiple where the procedures performed either inpatient or
"^DD",351.61,351.61,3,21,2,0)
outpatient are stored.
"^DD",351.61,351.612,0)
ICD DIAGNOSIS SUB-FIELD^^.01^1
"^DD",351.61,351.612,0,"NM","ICD DIAGNOSIS")

"^DD",351.61,351.612,.01,0)
ICD DIAGNOSIS^*P80'^ICD9(^0;1^S DIC("S")="I $$ICD9ACT^IBACSV(+Y,$P($G(^IBAT(351.61,+$G(DA(1)),0)),U,4))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",351.61,351.612,.01,1,0)
^.1
"^DD",351.61,351.612,.01,1,1,0)
351.612^B
"^DD",351.61,351.612,.01,1,1,1)
S ^IBAT(351.61,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",351.61,351.612,.01,1,1,2)
K ^IBAT(351.61,DA(1),2,"B",$E(X,1,30),DA)
"^DD",351.61,351.612,.01,3)
This is the diagnosis codes for this transaction.
"^DD",351.61,351.612,.01,12)
Only codes active on the Event Date may be selected.
"^DD",351.61,351.612,.01,12.1)
S DIC("S")="I $$ICD9ACT^IBACSV(+Y,$P($G(^IBAT(351.61,+$G(DA(1)),0)),U,4))"
"^DD",351.61,351.612,.01,21,0)
^.001^2^2^3000609^^
"^DD",351.61,351.612,.01,21,1,0)
This is the diagnosis codes for this event.  This will play into the DRG
"^DD",351.61,351.612,.01,21,2,0)
calculation.
"^DD",351.61,351.612,.01,"DT")
3030421
"^DD",351.61,351.613,0)
PROCEDURES SUB-FIELD^^.03^3
"^DD",351.61,351.613,0,"NM","PROCEDURES")

"^DD",351.61,351.613,.01,0)
PROCEDURES^M*P81'^ICPT(^0;1^S DIC("S")="I $$CPTACT^IBACSV(+Y,$P($G(^IBAT(351.61,+$G(DA(1)),0)),U,4))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",351.61,351.613,.01,1,0)
^.1
"^DD",351.61,351.613,.01,1,1,0)
351.613^B
"^DD",351.61,351.613,.01,1,1,1)
S ^IBAT(351.61,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",351.61,351.613,.01,1,1,2)
K ^IBAT(351.61,DA(1),3,"B",$E(X,1,30),DA)
"^DD",351.61,351.613,.01,1,1,3)
Required Index for Variable Pointer
"^DD",351.61,351.613,.01,3)
Select a procedure to determine the price of this transaction.
"^DD",351.61,351.613,.01,12)
Only codes active on the Event Date may be selected.
"^DD",351.61,351.613,.01,12.1)
S DIC("S")="I $$CPTACT^IBACSV(+Y,$P($G(^IBAT(351.61,+$G(DA(1)),0)),U,4))"
"^DD",351.61,351.613,.01,21,0)
^.001^3^3^3010831^^
"^DD",351.61,351.613,.01,21,1,0)
This is the multiple where the procedures performed either inpatient or
"^DD",351.61,351.613,.01,21,2,0)
outpatient are stored.  The procedures are used to calculate the
"^DD",351.61,351.613,.01,21,3,0)
transaction price.
"^DD",351.61,351.613,.01,"DT")
3030421
"^DD",356.2,356.2,.14,0)
DIAGNOSIS AUTHORIZED^*P80'^ICD9(^0;14^S DIC("S")="I $$ICD9ACT^IBACSV(+Y,$P($G(^IBT(356.2,+$G(DA),0)),U))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",356.2,356.2,.14,12)
Only Active Diagnosis may be selected
"^DD",356.2,356.2,.14,12.1)
S DIC("S")="I $$ICD9ACT^IBACSV(+Y,$P($G(^IBT(356.2,+$G(DA),0)),U))"
"^DD",356.2,356.2,.14,21,0)
^.001^6^6^3030421^^^
"^DD",356.2,356.2,.14,21,1,0)
If the insurance company approved the care for this patient for 
"^DD",356.2,356.2,.14,21,2,0)
reimbursement this is the diagnosis that they approved.
"^DD",356.2,356.2,.14,21,3,0)
 
"^DD",356.2,356.2,.14,21,4,0)
Typically when an insurance company approves care for reimbursement
"^DD",356.2,356.2,.14,21,5,0)
they approve it for a specific diagnosis.  This is the diagnosis that
"^DD",356.2,356.2,.14,21,6,0)
they approved.
"^DD",356.2,356.2,.14,23,0)
^.001^2^2^3030421^^
"^DD",356.2,356.2,.14,23,1,0)
 
"^DD",356.2,356.2,.14,23,2,0)
 
"^DD",356.2,356.2,.14,"DT")
2930928
"^DD",356.5,356.5,.01,0)
DRG^RP80.2'^ICD(^0;1^Q
"^DD",356.5,356.5,.01,1,0)
^.1
"^DD",356.5,356.5,.01,1,1,0)
356.5^B
"^DD",356.5,356.5,.01,1,1,1)
S ^IBE(356.5,"B",$E(X,1,30),DA)=""
"^DD",356.5,356.5,.01,1,1,2)
K ^IBE(356.5,"B",$E(X,1,30),DA)
"^DD",356.5,356.5,.01,1,2,0)
356.5^ADR^MUMPS
"^DD",356.5,356.5,.01,1,2,1)
S:$P(^IBE(356.5,DA,0),U,2) ^IBE(356.5,"ADR",X,$P(^(0),U,2),DA)=""
"^DD",356.5,356.5,.01,1,2,2)
K ^IBE(356.5,"ADR",X,+$P(^IBE(356.5,DA,0),U,2),DA)
"^DD",356.5,356.5,.01,1,2,"%D",0)
^^1^1^2930723^
"^DD",356.5,356.5,.01,1,2,"%D",1,0)
Cross-reference of drgs by year.
"^DD",356.5,356.5,.01,1,2,"DT")
2930723
"^DD",356.5,356.5,.01,3)

"^DD",356.5,356.5,.01,21,0)
^^4^4^2940213^^
"^DD",356.5,356.5,.01,21,1,0)
This is the DRG for which you wish to enter an average length of stay
"^DD",356.5,356.5,.01,21,2,0)
that will be reflected on the review screen.  This ALOS is an alos
"^DD",356.5,356.5,.01,21,3,0)
that is used in practice by the insurance industry which is different
"^DD",356.5,356.5,.01,21,4,0)
than the ALOS generally found in DHCP files which are specific to VA care.
"^DD",356.5,356.5,.01,"DT")
2931129
"^DD",356.9,356.9,.01,0)
DIAGNOSIS^R*P80'^ICD9(^0;1^S DIC("S")="I $$ICD9ACT^IBACSV(+Y,$P($G(^IBT(356.9,+$G(DA),0)),U,3))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.9,356.9,.01,1,0)
^.1
"^DD",356.9,356.9,.01,1,1,0)
356.9^B
"^DD",356.9,356.9,.01,1,1,1)
S ^IBT(356.9,"B",$E(X,1,30),DA)=""
"^DD",356.9,356.9,.01,1,1,2)
K ^IBT(356.9,"B",$E(X,1,30),DA)
"^DD",356.9,356.9,.01,1,2,0)
356.9^ADG^MUMPS
"^DD",356.9,356.9,.01,1,2,1)
S:$P(^IBT(356.9,DA,0),U,4)=3&($P(^(0),U,2)) ^IBT(356.9,"ADG",+$P(^(0),U,2),X,DA)=""
"^DD",356.9,356.9,.01,1,2,2)
K ^IBT(356.9,"ADG",+$P(^IBT(356.9,DA,0),U,2),X,DA)
"^DD",356.9,356.9,.01,1,2,"%D",0)
^^1^1^2930901^
"^DD",356.9,356.9,.01,1,2,"%D",1,0)
Cross-reference of admitting diagnosis by admission movement.
"^DD",356.9,356.9,.01,1,2,"DT")
2930901
"^DD",356.9,356.9,.01,1,3,0)
356.9^ADGPM^MUMPS
"^DD",356.9,356.9,.01,1,3,1)
S:$P(^IBT(356.9,DA,0),U,2) ^IBT(356.9,"ADGPM",+$P(^(0),U,2),X,DA)=""
"^DD",356.9,356.9,.01,1,3,2)
K ^IBT(356.9,"ADGPM",+$P(^IBT(356.9,DA,0),U,2),X,DA)
"^DD",356.9,356.9,.01,1,3,"%D",0)
^^1^1^2930901^
"^DD",356.9,356.9,.01,1,3,"%D",1,0)
Cross-reference of all diagnosis by admission movement
"^DD",356.9,356.9,.01,1,3,"DT")
2930901
"^DD",356.9,356.9,.01,3)

"^DD",356.9,356.9,.01,12)
Only active diagnosis codes may be selected.
"^DD",356.9,356.9,.01,12.1)
S DIC("S")="I $$ICD9ACT^IBACSV(+Y,$P($G(^IBT(356.9,+$G(DA),0)),U,3))"
"^DD",356.9,356.9,.01,21,0)
^^1^1^2930720^^^^
"^DD",356.9,356.9,.01,21,1,0)
This is the diagnosis for this patient for this episode of care.
"^DD",356.9,356.9,.01,"DT")
3030421
"^DD",356.91,356.91,.01,0)
PROCEDURE^R*P80.1'^ICD0(^0;1^S DIC("S")="I $$ICD0ACT^IBACSV(+Y,$P($G(^IBT(356.91,+$G(DA),0)),U,3))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.91,356.91,.01,1,0)
^.1
"^DD",356.91,356.91,.01,1,1,0)
356.91^B
"^DD",356.91,356.91,.01,1,1,1)
S ^IBT(356.91,"B",$E(X,1,30),DA)=""
"^DD",356.91,356.91,.01,1,1,2)
K ^IBT(356.91,"B",$E(X,1,30),DA)
"^DD",356.91,356.91,.01,1,2,0)
356.91^ADGPM^MUMPS
"^DD",356.91,356.91,.01,1,2,1)
S:$P(^IBT(356.91,DA,0),U,2) ^IBT(356.91,"ADGPM",+$P(^(0),U,2),X,DA)=""
"^DD",356.91,356.91,.01,1,2,2)
K ^IBT(356.91,+$P(^IBT(356.91,DA,0),U,2),X,DA)
"^DD",356.91,356.91,.01,1,2,"%D",0)
^^1^1^2940506^^
"^DD",356.91,356.91,.01,1,2,"%D",1,0)
Cross-reference of procedures by patient movement
"^DD",356.91,356.91,.01,1,2,"DT")
2930901
"^DD",356.91,356.91,.01,3)

"^DD",356.91,356.91,.01,12)
Only active operation/procedure codes may be selected.
"^DD",356.91,356.91,.01,12.1)
S DIC("S")="I $$ICD0ACT^IBACSV(+Y,$P($G(^IBT(356.91,+$G(DA),0)),U,3))"
"^DD",356.91,356.91,.01,21,0)
^^1^1^2930713^^
"^DD",356.91,356.91,.01,21,1,0)
This is the procedure for this patient.
"^DD",356.91,356.91,.01,"DT")
3030421
"^DD",356.93,356.93,.01,0)
NAME^R*P80.2'^ICD(^0;1^S DIC("S")="I $$DRGACT^IBACSV(+Y,$P(+$G(^DGPM(+$P($G(^IBT(356.93,+$G(DA),0)),U,2),0)),"".""))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.93,356.93,.01,1,0)
^.1
"^DD",356.93,356.93,.01,1,1,0)
356.93^B
"^DD",356.93,356.93,.01,1,1,1)
S ^IBT(356.93,"B",$E(X,1,30),DA)=""
"^DD",356.93,356.93,.01,1,1,2)
K ^IBT(356.93,"B",$E(X,1,30),DA)
"^DD",356.93,356.93,.01,3)

"^DD",356.93,356.93,.01,12)
Only codes active for the admission date may be selected.
"^DD",356.93,356.93,.01,12.1)
S DIC("S")="I $$DRGACT^IBACSV(+Y,$P(+$G(^DGPM(+$P($G(^IBT(356.93,+$G(DA),0)),U,2),0)),"".""))"
"^DD",356.93,356.93,.01,21,0)
^^1^1^2931129^
"^DD",356.93,356.93,.01,21,1,0)
Enter the DRG that best describes this inpatient case.
"^DD",356.93,356.93,.01,"DT")
3030601
"^DD",361.1,361.115,.04,0)
PROCEDURE^*P80.1'^ICD0(^0;4^S DIC("S")="N Z S Z=$P($G(^IBM(361.1,DA(1),15,DA,0)),U,16) S:'Z Z=$$BDATE^IBACSV(+$G(^IBM(361.1,DA(1),0))) I $$ICD0ACT^IBACSV(+Y,Z)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",361.1,361.115,.04,3)
Enter the procedure for which payment was considered
"^DD",361.1,361.115,.04,12)
Only codes active for the date of service may be selected.
"^DD",361.1,361.115,.04,12.1)
S DIC("S")="N Z S Z=$P($G(^IBM(361.1,DA(1),15,DA,0)),U,16) S:'Z Z=$$BDATE^IBACSV(+$G(^IBM(361.1,DA(1),0))) I $$ICD0ACT^IBACSV(+Y,Z)"
"^DD",361.1,361.115,.04,21,0)
^^1^1^2990202^^^^
"^DD",361.1,361.115,.04,21,1,0)
This is the procedure for which payment was considered.
"^DD",361.1,361.115,.04,23,0)
^^1^1^2990202^^^^
"^DD",361.1,361.115,.04,23,1,0)
This data is found in the electronic 835 at the SVC01-02 data element.
"^DD",361.1,361.115,.04,"DT")
3030501
"^DD",362.3,362.3,.01,0)
DIAGNOSIS^R*P80'^ICD9(^0;1^S DIC("S")="I $$ICD9ACT^IBACSV(+Y,$$BDATE^IBACSV(+$P($G(^IBA(362.3,+$G(DA),0)),U,2))),'$$DXDUP^IBCU1(+Y,$G(DA)),$$DXBSTAT^IBCU1($G(DA))<3" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",362.3,362.3,.01,1,0)
^.1^^-1
"^DD",362.3,362.3,.01,1,1,0)
362.3^B
"^DD",362.3,362.3,.01,1,1,1)
S ^IBA(362.3,"B",$E(X,1,30),DA)=""
"^DD",362.3,362.3,.01,1,1,2)
K ^IBA(362.3,"B",$E(X,1,30),DA)
"^DD",362.3,362.3,.01,1,2,0)
362.3^AIFN^MUMPS
"^DD",362.3,362.3,.01,1,2,1)
S:+$P(^IBA(362.3,DA,0),U,2) ^IBA(362.3,"AIFN"_+$P(^(0),U,2),+X,DA)=""
"^DD",362.3,362.3,.01,1,2,2)
K:+$P(^IBA(362.3,DA,0),U,2) ^IBA(362.3,"AIFN"_+$P(^(0),U,2),+X,DA)
"^DD",362.3,362.3,.01,1,2,"%D",0)
^^2^2^2940214^^^^
"^DD",362.3,362.3,.01,1,2,"%D",1,0)
Special x-ref set up specifically to provide a regular x-ref of a bill and
"^DD",362.3,362.3,.01,1,2,"%D",2,0)
all it's diagnoses for easy look-up.
"^DD",362.3,362.3,.01,1,2,"DT")
2931117
"^DD",362.3,362.3,.01,3)
Enter a diagnosis for this bill.  Duplicates are not allowed.
"^DD",362.3,362.3,.01,4)
D HELP^IBCSC4D
"^DD",362.3,362.3,.01,12)
Only active diagnosis, no duplicates for a bill, and bill must not be authorized or cancelled.
"^DD",362.3,362.3,.01,12.1)
S DIC("S")="I $$ICD9ACT^IBACSV(+Y,$$BDATE^IBACSV(+$P($G(^IBA(362.3,+$G(DA),0)),U,2))),'$$DXDUP^IBCU1(+Y,$G(DA)),$$DXBSTAT^IBCU1($G(DA))<3"
"^DD",362.3,362.3,.01,21,0)
^^1^1^2960530^^^^
"^DD",362.3,362.3,.01,21,1,0)
Enter an active diagnosis for this bill.
"^DD",362.3,362.3,.01,23,0)
^^1^1^2960530^^^^
"^DD",362.3,362.3,.01,23,1,0)
All diagnosis for a bill are stored here, beginning with IB v2.0.
"^DD",362.3,362.3,.01,"DT")
3030501
"^DD",399,399,215,0)
ADMITTING DIAGNOSIS^*P80'^ICD9(^U2;1^S DIC("S")="I $$ICD9ACT^IBACSV(+Y,$$BDATE^IBACSV(+$G(DA)))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",399,399,215,3)
Enter the code for the admitting diagnosis.
"^DD",399,399,215,5,1,0)
362.3^.03^2
"^DD",399,399,215,12)
Only codes active for the date of service may be selected.
"^DD",399,399,215,12.1)
S DIC("S")="I $$ICD9ACT^IBACSV(+Y,$$BDATE^IBACSV(+$G(DA)))"
"^DD",399,399,215,21,0)
^^4^4^2931220^^^^
"^DD",399,399,215,21,1,0)
The ICD-9 diagnosis code provided at the time of admission as stated
"^DD",399,399,215,21,2,0)
by the physician.
"^DD",399,399,215,21,3,0)
 
"^DD",399,399,215,21,4,0)
The admitting diagnosis code will be printed in Form Locator 76 on the UB-92.
"^DD",399,399,215,"DT")
3030501
"^DD",399,399,304,0)
PROCEDURES^399.0304IVA^^CP;0
"^DD",399,399,304,21,0)
^^1^1^2940214^^^^
"^DD",399,399,304,21,1,0)
These are ICD or CPT procedures that are associated with this bill.
"^DD",399,399,304,23,0)
^^1^1^2940120^^^^
"^DD",399,399,304,23,1,0)
 
"^DD",399,399,304,"DT")
2911101
"^DD",399,399.0304,0)
PROCEDURES SUB-FIELD^^50.08^29
"^DD",399,399.0304,0,"NM","PROCEDURES")

"^DD",399,399.0304,.01,0)
PROCEDURES^MV^^0;1^
"^DD",399,399.0304,.01,1,0)
^.1
"^DD",399,399.0304,.01,1,1,0)
399.0304^B
"^DD",399,399.0304,.01,1,1,1)
S ^DGCR(399,DA(1),"CP","B",$E(X,1,30),DA)=""
"^DD",399,399.0304,.01,1,1,2)
K ^DGCR(399,DA(1),"CP","B",$E(X,1,30),DA)
"^DD",399,399.0304,.01,1,1,3)
Required Index for Variable Pointer
"^DD",399,399.0304,.01,1,2,0)
399^ASD^MUMPS
"^DD",399,399.0304,.01,1,2,1)
I $P(X,";",2)="ICPT(",$D(^DGCR(399,DA(1),"CP",DA,0)),$P(^(0),"^",2) S ^DGCR(399,"ASD",-$P(^(0),"^",2),+X,DA(1),DA)=""
"^DD",399,399.0304,.01,1,2,2)
I $P(X,";",2)="ICPT(",$D(^DGCR(399,DA(1),"CP",DA,0)),$P(^(0),"^",2) K ^DGCR(399,"ASD",-$P(^(0),"^",2),+X,DA(1),DA)
"^DD",399,399.0304,.01,1,2,3)
DO NOT DELETE
"^DD",399,399.0304,.01,1,2,"%D",0)
^^1^1^2930513^^^
"^DD",399,399.0304,.01,1,2,"%D",1,0)
Index procedure date and all CPT procedures.
"^DD",399,399.0304,.01,1,2,"DT")
2920311
"^DD",399,399.0304,.01,1,3,0)
^^TRIGGER^399.0304^20
"^DD",399,399.0304,.01,1,3,1)
Q
"^DD",399,399.0304,.01,1,3,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"CP",D1,0)):^(0),1:"") S X=$P(Y(1),U,20),X=X S DIU=X K Y S X="" X ^DD(399.0304,.01,1,3,2.4)
"^DD",399,399.0304,.01,1,3,2.4)
S DIH=$G(^DGCR(399,DIV(0),"CP",DIV(1),0)),DIV=X S $P(^(0),U,20)=DIV,DIH=399.0304,DIG=20 D ^DICR
"^DD",399,399.0304,.01,1,3,3)
Do Not Delete
"^DD",399,399.0304,.01,1,3,"%D",0)
^.101^1^1^3010510^^
"^DD",399,399.0304,.01,1,3,"%D",1,0)
Delete the Outpatient Encounter link if the Procedure is modified.
"^DD",399,399.0304,.01,1,3,"CREATE VALUE")
NO EFFECT
"^DD",399,399.0304,.01,1,3,"DELETE VALUE")
@
"^DD",399,399.0304,.01,1,3,"DT")
3010510
"^DD",399,399.0304,.01,1,3,"FIELD")
OUTPATIENT ENCOUNTER
"^DD",399,399.0304,.01,3)
Procedure coding must match the PROCEDURE CODING METHOD entry for this bill.
"^DD",399,399.0304,.01,4)
D 3^IBCSCH1
"^DD",399,399.0304,.01,7.5)
D ^IBCU7
"^DD",399,399.0304,.01,21,0)
^^2^2^2930513^^^^
"^DD",399,399.0304,.01,21,1,0)
These are ICD, CPT, or HCFA procedure codes associated with the episode
"^DD",399,399.0304,.01,21,2,0)
of care on this bill.
"^DD",399,399.0304,.01,23,0)
^^1^1^2930513^^^
"^DD",399,399.0304,.01,23,1,0)
 
"^DD",399,399.0304,.01,"DEL",1,0)
N IBZ S IBZ=$$RXLINK^IBCSC5C(DA(1),DA) I IBZ D EN^DDIOL("  Can't delete this procedure while linked to RX revenue code #"_IBZ)
"^DD",399,399.0304,.01,"DT")
3030423
"^DD",399,399.0304,.01,"V",0)
^.12P^2^2
"^DD",399,399.0304,.01,"V",1,0)
81^CPT^1^CPT^y^n
"^DD",399,399.0304,.01,"V",1,1)
S DIC("S")="I $$CPTACT^IBACSV(+Y,$$BDATE^IBACSV($G(DA(1)),$G(DA)))"
"^DD",399,399.0304,.01,"V",1,2)
Only codes active for the date of service may be selected.
"^DD",399,399.0304,.01,"V",2,0)
80.1^ICD operation/procedure^2^ICD^y^n
"^DD",399,399.0304,.01,"V",2,1)
S DIC("S")="I $$ICD0ACT^IBACSV(+Y,$$BDATE^IBACSV($G(DA(1)),$G(DA)))"
"^DD",399,399.0304,.01,"V",2,2)
Only codes active for the date of service may be selected.
"^DD",399,399.042,.06,0)
PROCEDURE^*P81'^ICPT(^0;6^S DIC("S")="I $$CPTACT^IBACSV(+Y,$$BDATE^IBACSV($G(DA(1))))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",399,399.042,.06,1,0)
^.1^^-1
"^DD",399,399.042,.06,1,1,0)
399^ASC1^MUMPS
"^DD",399,399.042,.06,1,1,1)
I $$RC^IBEFUNC1(DA(1),DA) S ^DGCR(399,"ASC1",$E(X,1,30),DA(1),DA)=""
"^DD",399,399.042,.06,1,1,2)
K ^DGCR(399,"ASC1",$E(X,1,30),DA(1),DA)
"^DD",399,399.042,.06,1,1,"%D",0)
^^1^1^2940310^^^^
"^DD",399,399.042,.06,1,1,"%D",1,0)
All Billable Ambulatory Surgery Codes (BASC) that have been billed.
"^DD",399,399.042,.06,1,1,"DT")
2930903
"^DD",399,399.042,.06,1,2,0)
399^ASC2^MUMPS
"^DD",399,399.042,.06,1,2,1)
I $$RC^IBEFUNC1(DA(1),DA) S ^DGCR(399,"ASC2",DA(1),$E(X,1,30),DA)=""
"^DD",399,399.042,.06,1,2,2)
K ^DGCR(399,"ASC2",DA(1),$E(X,1,30),DA)
"^DD",399,399.042,.06,1,2,"%D",0)
^^1^1^2940310^^^^
"^DD",399,399.042,.06,1,2,"%D",1,0)
All bills with charges for Billable Ambulatory Surgery Codes (BASC).
"^DD",399,399.042,.06,1,2,"DT")
2930903
"^DD",399,399.042,.06,12)
Only codes active for the date of service may be selected.
"^DD",399,399.042,.06,12.1)
S DIC("S")="I $$CPTACT^IBACSV(+Y,$$BDATE^IBACSV($G(DA(1))))"
"^DD",399,399.042,.06,21,0)
3^^9^9^2930707^^
"^DD",399,399.042,.06,21,1,0)
This field may be used to associate the revenue code with a procedure.
"^DD",399,399.042,.06,21,2,0)
This will be needed primarily to accomodate the HCFA 1500 which allows
"^DD",399,399.042,.06,21,3,0)
charges by procedure not revenue code.  The charge associated with the
"^DD",399,399.042,.06,21,4,0)
revenue code will be printed on the HCFA 1500 claim form in the same line
"^DD",399,399.042,.06,21,5,0)
item as the procedure.
"^DD",399,399.042,.06,21,6,0)
 
"^DD",399,399.042,.06,21,7,0)
This field is also used for revenue codes that are for Billable Ambulatory
"^DD",399,399.042,.06,21,8,0)
Surgeries (BASC).  It identifies the CPT code of the surgery which is
"^DD",399,399.042,.06,21,9,0)
being billed for.
"^DD",399,399.042,.06,"DT")
3030423
"^DD",399,399.30416,.02,0)
CPT MODIFIER^R*P81.3'^DIC(81.3,^0;2^S DIC("S")="I $$MODP^ICPTMOD(+$G(^DGCR(399,DA(2),""CP"",DA(1),0)),+Y,""I"",$$BDATE^IBACSV(DA(2),DA(1)))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",399,399.30416,.02,1,0)
^.1
"^DD",399,399.30416,.02,1,1,0)
399.30416^C
"^DD",399,399.30416,.02,1,1,1)
S ^DGCR(399,DA(2),"CP",DA(1),"MOD","C",$E(X,1,30),DA)=""
"^DD",399,399.30416,.02,1,1,2)
K ^DGCR(399,DA(2),"CP",DA(1),"MOD","C",$E(X,1,30),DA)
"^DD",399,399.30416,.02,1,1,"DT")
3010205
"^DD",399,399.30416,.02,3)
ENTER A VALID CPT MODIFIER FOR THE PROCEDURE
"^DD",399,399.30416,.02,12)
Only acceptable modifiers for the CPT Code may be selected!
"^DD",399,399.30416,.02,12.1)
S DIC("S")="I $$MODP^ICPTMOD(+$G(^DGCR(399,DA(2),""CP"",DA(1),0)),+Y,""I"",$$BDATE^IBACSV(DA(2),DA(1)))"
"^DD",399,399.30416,.02,"DT")
3030423
**INSTALL NAME**
FB*3.5*55
"BLD",2987,0)
FB*3.5*55^FEE BASIS^0^3030916^y
"BLD",2987,1,0)
^^3^3^3030619^
"BLD",2987,1,1,0)
CODE SET VERSIONING
"BLD",2987,1,2,0)
Please see the National Patch Module for details
"BLD",2987,1,3,0)
of the enhancements included in this patch.
"BLD",2987,4,0)
^9.64PA^^
"BLD",2987,"KRN",0)
^9.67PA^8989.52^19
"BLD",2987,"KRN",.4,0)
.4
"BLD",2987,"KRN",.401,0)
.401
"BLD",2987,"KRN",.402,0)
.402
"BLD",2987,"KRN",.402,"NM",0)
^9.68A^2^2
"BLD",2987,"KRN",.402,"NM",1,0)
FBCH EDIT PAYMENT    FILE #162.5^162.5^0
"BLD",2987,"KRN",.402,"NM",2,0)
FBCH ENTER PAYMENT    FILE #162.5^162.5^0
"BLD",2987,"KRN",.402,"NM","B","FBCH EDIT PAYMENT    FILE #162.5",1)

"BLD",2987,"KRN",.402,"NM","B","FBCH ENTER PAYMENT    FILE #162.5",2)

"BLD",2987,"KRN",.403,0)
.403
"BLD",2987,"KRN",.5,0)
.5
"BLD",2987,"KRN",.84,0)
.84
"BLD",2987,"KRN",3.6,0)
3.6
"BLD",2987,"KRN",3.8,0)
3.8
"BLD",2987,"KRN",9.2,0)
9.2
"BLD",2987,"KRN",9.8,0)
9.8
"BLD",2987,"KRN",9.8,"NM",0)
^9.68A^22^22
"BLD",2987,"KRN",9.8,"NM",1,0)
FBAACCB1^^0^B19884073
"BLD",2987,"KRN",9.8,"NM",2,0)
FBAAPAA^^0^B4724308
"BLD",2987,"KRN",9.8,"NM",3,0)
FBCHVP^^0^B19128100
"BLD",2987,"KRN",9.8,"NM",4,0)
FBAAV0^^0^B25963813
"BLD",2987,"KRN",9.8,"NM",5,0)
FBAAV5^^0^B18537209
"BLD",2987,"KRN",9.8,"NM",6,0)
FBAAV6^^0^B18680215
"BLD",2987,"KRN",9.8,"NM",7,0)
FBCHVH^^0^B14092460
"BLD",2987,"KRN",9.8,"NM",8,0)
FBPAY2^^0^B17324516
"BLD",2987,"KRN",9.8,"NM",9,0)
FBPAY67^^0^B28910879
"BLD",2987,"KRN",9.8,"NM",10,0)
FBPAY671^^0^B27482119
"BLD",2987,"KRN",9.8,"NM",11,0)
FBPCR2^^0^B25843522
"BLD",2987,"KRN",9.8,"NM",12,0)
FBPCR67^^0^B16749704
"BLD",2987,"KRN",9.8,"NM",13,0)
FBPCR671^^0^B18854579
"BLD",2987,"KRN",9.8,"NM",14,0)
FBPRICE1^^0^B8252151
"BLD",2987,"KRN",9.8,"NM",15,0)
FBCSV1^^0^B18288370
"BLD",2987,"KRN",9.8,"NM",16,0)
FBAACO2^^0^B12251059
"BLD",2987,"KRN",9.8,"NM",17,0)
FBAACO3^^0^B33495920
"BLD",2987,"KRN",9.8,"NM",18,0)
FBAACP^^0^B26557052
"BLD",2987,"KRN",9.8,"NM",19,0)
FBAAMP1^^0^B9709876
"BLD",2987,"KRN",9.8,"NM",20,0)
FBAAPET^^0^B22647098
"BLD",2987,"KRN",9.8,"NM",21,0)
FBCHEAP^^0^B16008349
"BLD",2987,"KRN",9.8,"NM",22,0)
FBAAMP^^0^B46681030
"BLD",2987,"KRN",9.8,"NM","B","FBAACCB1",1)

"BLD",2987,"KRN",9.8,"NM","B","FBAACO2",16)

"BLD",2987,"KRN",9.8,"NM","B","FBAACO3",17)

"BLD",2987,"KRN",9.8,"NM","B","FBAACP",18)

"BLD",2987,"KRN",9.8,"NM","B","FBAAMP",22)

"BLD",2987,"KRN",9.8,"NM","B","FBAAMP1",19)

"BLD",2987,"KRN",9.8,"NM","B","FBAAPAA",2)

"BLD",2987,"KRN",9.8,"NM","B","FBAAPET",20)

"BLD",2987,"KRN",9.8,"NM","B","FBAAV0",4)

"BLD",2987,"KRN",9.8,"NM","B","FBAAV5",5)

"BLD",2987,"KRN",9.8,"NM","B","FBAAV6",6)

"BLD",2987,"KRN",9.8,"NM","B","FBCHEAP",21)

"BLD",2987,"KRN",9.8,"NM","B","FBCHVH",7)

"BLD",2987,"KRN",9.8,"NM","B","FBCHVP",3)

"BLD",2987,"KRN",9.8,"NM","B","FBCSV1",15)

"BLD",2987,"KRN",9.8,"NM","B","FBPAY2",8)

"BLD",2987,"KRN",9.8,"NM","B","FBPAY67",9)

"BLD",2987,"KRN",9.8,"NM","B","FBPAY671",10)

"BLD",2987,"KRN",9.8,"NM","B","FBPCR2",11)

"BLD",2987,"KRN",9.8,"NM","B","FBPCR67",12)

"BLD",2987,"KRN",9.8,"NM","B","FBPCR671",13)

"BLD",2987,"KRN",9.8,"NM","B","FBPRICE1",14)

"BLD",2987,"KRN",19,0)
19
"BLD",2987,"KRN",19.1,0)
19.1
"BLD",2987,"KRN",101,0)
101
"BLD",2987,"KRN",409.61,0)
409.61
"BLD",2987,"KRN",771,0)
771
"BLD",2987,"KRN",870,0)
870
"BLD",2987,"KRN",8989.51,0)
8989.51
"BLD",2987,"KRN",8989.52,0)
8989.52
"BLD",2987,"KRN",8994,0)
8994
"BLD",2987,"KRN","B",.4,.4)

"BLD",2987,"KRN","B",.401,.401)

"BLD",2987,"KRN","B",.402,.402)

"BLD",2987,"KRN","B",.403,.403)

"BLD",2987,"KRN","B",.5,.5)

"BLD",2987,"KRN","B",.84,.84)

"BLD",2987,"KRN","B",3.6,3.6)

"BLD",2987,"KRN","B",3.8,3.8)

"BLD",2987,"KRN","B",9.2,9.2)

"BLD",2987,"KRN","B",9.8,9.8)

"BLD",2987,"KRN","B",19,19)

"BLD",2987,"KRN","B",19.1,19.1)

"BLD",2987,"KRN","B",101,101)

"BLD",2987,"KRN","B",409.61,409.61)

"BLD",2987,"KRN","B",771,771)

"BLD",2987,"KRN","B",870,870)

"BLD",2987,"KRN","B",8989.51,8989.51)

"BLD",2987,"KRN","B",8989.52,8989.52)

"BLD",2987,"KRN","B",8994,8994)

"BLD",2987,"QUES",0)
^9.62^^
"BLD",2987,"REQB",0)
^9.611^6^6
"BLD",2987,"REQB",1,0)
ICD*18.0*7^2
"BLD",2987,"REQB",2,0)
ICPT*6.0*14^2
"BLD",2987,"REQB",3,0)
FB*3.5*48^2
"BLD",2987,"REQB",4,0)
FB*3.5*32^2
"BLD",2987,"REQB",5,0)
FB*3.5*38^2
"BLD",2987,"REQB",6,0)
FB*3.5*56^2
"BLD",2987,"REQB","B","FB*3.5*32",4)

"BLD",2987,"REQB","B","FB*3.5*38",5)

"BLD",2987,"REQB","B","FB*3.5*48",3)

"BLD",2987,"REQB","B","FB*3.5*56",6)

"BLD",2987,"REQB","B","ICD*18.0*7",1)

"BLD",2987,"REQB","B","ICPT*6.0*14",2)

"KRN",.402,1175,-1)
0^2
"KRN",.402,1175,0)
FBCH ENTER PAYMENT^3030423.2001^^162.5^^^3030604
"KRN",.402,1175,"DR",1,162.5)
1////^S X=FBAAID;46////^S X=FBAAVID;47////^S X=FBAAMM1;2////^S X=FBVEN;3////^S X=FBVET;4////^S X=FBI7078;5////^S X=FBAABDT;6////^S X=FBAAEDT;23////^S X=FBPSA;21////^S X=FBPOV;22////^S X=FBPT;11////^S X=FBTYPE;12////^S X=FBAAPTC;
"KRN",.402,1175,"DR",1,162.5,1)
20////^S X=FBAABE;W !;6.5;6.6;I 1;7;S FBAMTC=X;I $G(FBEXMPT)'="Y" S Y="@25";S:FBI7078'["FB583" Y=8;S:'$P($G(^FB583(+FBI7078,0)),U,28) Y=8;W !?2,"**Payment is for emergency treatment under 38 U.S.C. 1725.";8;I FBAMTC=X S Y="@25";9;
"KRN",.402,1175,"DR",1,162.5,2)
10;@20;I $G(FBEXMPT)="Y" S Y="@25";@26;24;I $$INPICD^FBCSV1(X,$G(DA),FBAABDT) S Y="@26";@25;6.7;I 1;@30;30;I $$INPICD9^FBCSV1(X,$G(DA),FBAABDT) S Y="@30";@35;31;S:X="" Y=40;I $$INPICD9^FBCSV1(X,$G(DA),FBAABDT) S Y="@35";@40;32;
"KRN",.402,1175,"DR",1,162.5,3)
S:X="" Y=40;I $$INPICD9^FBCSV1(X,$G(DA),FBAABDT) S Y="@40";@45;33;S:X="" Y=40;I $$INPICD9^FBCSV1(X,$G(DA),FBAABDT) S Y="@45";@50;34;I $$INPICD9^FBCSV1(X,$G(DA),FBAABDT) S Y="@50";@55;40;S:X="" Y="@99";
"KRN",.402,1175,"DR",1,162.5,4)
I $$INPICD0^FBCSV1(X,$G(DA),FBAABDT) S Y="@55";@60;41;S:X="" Y="@99";I $$INPICD0^FBCSV1(X,$G(DA),FBAABDT) S Y="@60";@65;42;S:X="" Y="@99";I $$INPICD0^FBCSV1(X,$G(DA),FBAABDT) S Y="@65";@70;43;S:X="" Y="@99";
"KRN",.402,1175,"DR",1,162.5,5)
I $$INPICD0^FBCSV1(X,$G(DA),FBAABDT) S Y="@70";@75;44;I $$INPICD0^FBCSV1(X,$G(DA),FBAABDT) S Y="@75";@99;I $D(^FBAAI(DA,"DX")),$P(^("DX"),U)="" W !!,*7,"The 'ICD1' field is a manditory field!",! S Y="@30";25////^S X=FBRESUB;
"KRN",.402,1176,-1)
0^1
"KRN",.402,1176,0)
FBCH EDIT PAYMENT^3030604.1626^^162.5^^^3030604
"KRN",.402,1176,"DIAB",3,0,162.5,2)
9;REQ
"KRN",.402,1176,"DIAB",4,0,162.5,2)
10;REQ
"KRN",.402,1176,"DIAB",10,0,162.5,2)
24;REQ
"KRN",.402,1176,"DR",1,162.5)
1;Q;Q;I 1;46;S FBAAMM=1;D PPT^FBAACO1();47////@;47///^S X=FBAAMM1;6.5;6.6;I 1;6.7;S DIE("NO^")="NO QUIT";7;S:$D(FBPRICE) Y="@25";S FBJJ=X;I $G(FBEXMPT)="Y" S Y="@20";26;S FBPAMT=X;@20;
"KRN",.402,1176,"DR",1,162.5,1)
W:FB1725 !?2,"**Payment is for emergency treatment under 38 U.S.C. 1725.";W:FB1725&($G(FBPAMT)>0) !?2,"  70% of Pricer Amount = "_$J(.7*FBPAMT,0,2);8;S FBKK=X;9////^S X=$S(FBJJ-FBKK>0:FBJJ-FBKK,1:"");I X S Y="@22";10////@;
"KRN",.402,1176,"DR",1,162.5,2)
S Y="@24";@22;9R~;10R~;S:X'=4 Y="@24";18;@24;I $G(FBEXMPT)="Y" S Y=30;@26;24R~;I $$INPICD^FBCSV1(X,$G(DA)) S Y="@26";@25;30;S:X="" Y=40;I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@25";@30;31;S:X="" Y=40;
"KRN",.402,1176,"DR",1,162.5,3)
I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@30";@35;32;S:X="" Y=40;I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@35";@40;33;S:X="" Y=40;I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@40";@45;34;I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@45";@50;40;S:X="" Y="@99";
"KRN",.402,1176,"DR",1,162.5,4)
I $$INPICD0^FBCSV1(X,$G(DA)) S Y="@50";@55;41;S:X="" Y="@99";I $$INPICD0^FBCSV1(X,$G(DA)) S Y="@55";@60;42;S:X="" Y="@99";I $$INPICD0^FBCSV1(X,$G(DA)) S Y="@60";@65;43;S:X="" Y="@99";I $$INPICD0^FBCSV1(X,$G(DA)) S Y="@65";@70;44;
"KRN",.402,1176,"DR",1,162.5,5)
I $$INPICD0^FBCSV1(X,$G(DA)) S Y="@70";@99;K FBJJ,FBKK,DIE("NO^");
"MBREQ")
1
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"PKG",344,-1)
1^1
"PKG",344,0)
FEE BASIS^FB^Used to pay private vendors
"PKG",344,20,0)
^9.402P^1^1
"PKG",344,20,1,0)
2^^FBPMRG
"PKG",344,20,1,1)

"PKG",344,20,"B",2,1)

"PKG",344,22,0)
^9.49I^1^1
"PKG",344,22,1,0)
3.5^2950130^2950329
"PKG",344,22,1,"PAH",1,0)
55^3030916
"PKG",344,22,1,"PAH",1,1,0)
^^3^3^3030916
"PKG",344,22,1,"PAH",1,1,1,0)
CODE SET VERSIONING
"PKG",344,22,1,"PAH",1,1,2,0)
Please see the National Patch Module for details
"PKG",344,22,1,"PAH",1,1,3,0)
of the enhancements included in this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
22
"RTN","FBAACCB1")
0^1^B19884073
"RTN","FBAACCB1",1,0)
FBAACCB1 ;AISC/GRR-CLERK CLOSE BATCH CONTINUED ;03/20/2003
"RTN","FBAACCB1",2,0)
 ;;3.5;FEE BASIS;**55**;JAN 30, 1995
"RTN","FBAACCB1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAACCB1",4,0)
PHARM ;ENTRY FOR PHARMACY BATCH CALCULATE TOTAL DOLLARS AND LINE COUNT
"RTN","FBAACCB1",5,0)
 F A=0:0 S A=$O(^FBAA(162.1,"AE",B,A)) Q:A'>0  F B2=0:0 S B2=$O(^FBAA(162.1,"AE",B,A,B2)) Q:B2'>0  I $D(^FBAA(162.1,A,"RX",B2,0)) S Z(0)=^(0) D:$P(Z(0),"^",16)>0 MOREP
"RTN","FBAACCB1",6,0)
 G FIN^FBAACCB
"RTN","FBAACCB1",7,0)
MOREP S T=T+$P(Z(0),"^",16),C=C+1 Q
"RTN","FBAACCB1",8,0)
TRAV ;ENTRY FOR TRAVEL BATCH CALCULATE TOTAL DOLLARS AND LINE COUNT
"RTN","FBAACCB1",9,0)
 F J=0:0 S J=$O(^FBAAC("AD",B,J)) Q:J'>0  F K=0:0 S K=$O(^FBAAC("AD",B,J,K)) Q:K'>0  I $D(^FBAAC(J,3,K,0)) S Z(0)=^(0) D:$P(Z(0),"^",3)>0 MORET
"RTN","FBAACCB1",10,0)
 G FIN^FBAACCB
"RTN","FBAACCB1",11,0)
MORET S T=T+$P(Z(0),"^",3),C=C+1 Q
"RTN","FBAACCB1",12,0)
LISTC S Q="",$P(Q,"=",80)="=",(FBAAOUT,FBLISTC)=0,IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","FBAACCB1",13,0)
PRTC D HEDC
"RTN","FBAACCB1",14,0)
 F I=0:0 S I=$O(^FBAAI("AC",B,I)) Q:I'>0!(FBAAOUT)  I $D(^FBAAI(I,0)) S Z(0)=^(0) D CMORE
"RTN","FBAACCB1",15,0)
 Q
"RTN","FBAACCB1",16,0)
CMORE S K=$P(Z(0),"^",3),J=$P(Z(0),"^",4) D ENV^FBAACCB0 S N=$$NAME^FBCHREQ2(J),S=$$SSN^FBAAUTL(J),FBIN=I,FBAC=$P(Z(0),"^",8)+.0001,FBAP=$P(Z(0),"^",9)+.0001,FBVP=$P(Z(0),"^",14),ZS=$P(Z(0),"^",13)
"RTN","FBAACCB1",17,0)
 S FBAC=$P(FBAC,".",1)_"."_$E($P(FBAC,".",2),1,2),FBAP=$P(FBAP,".",1)_"."_$E($P(FBAP,".",2),1,2)
"RTN","FBAACCB1",18,0)
 S FBSC=$P(Z(0),"^",11),FBSC=$S(FBSC="":"",$D(^FBAA(161.27,FBSC,0)):$P(^(0),"^",1),1:""),FBFD=$P(Z(0),"^",6),FBTD=$P(Z(0),"^",7) S FBPDT=FBFD D CDAT S FBFD=FBPDT,FBPDT=FBTD D CDAT S FBTD=FBPDT
"RTN","FBAACCB1",19,0)
 D FBCKI(I)
"RTN","FBAACCB1",20,0)
 S B(1617)=$S(B="":"",$D(^FBAA(161.7,B,0)):$P(^(0),"^"),1:"")
"RTN","FBAACCB1",21,0)
 S FBIN(1)=$P(Z(0),"^",2)
"RTN","FBAACCB1",22,0)
 D WRITC
"RTN","FBAACCB1",23,0)
 Q
"RTN","FBAACCB1",24,0)
WRITC I $Y+7>IOSL D ASKH^FBAACCB0:$E(IOST,1,2)["C-" Q:FBAAOUT  W @IOF D HEDC
"RTN","FBAACCB1",25,0)
 W !!,$S('$D(ZS):"",ZS="R":"*",1:"")
"RTN","FBAACCB1",26,0)
 W N,?35,S,?60,B(1617),!,?3,V,?45,VID,?58,FBIN,?70,$$DATX^FBAAUTL($E(FBIN(1),1,7)),!,$S($D(QQ):QQ_")",1:""),FBVP,$S(FBCAN]"":"+",1:""),?4,FBFD,?13,FBTD,?22,$J(FBAC,6),?32,$J(FBAP,6),?45,FBSC
"RTN","FBAACCB1",27,0)
 W:$P(Z(0),"^",24) ?56,"Discharge ",$$ICD^FBCSV1(+$P(Z(0),"^",24),$P(Z(0),"^",6)) W ! ;CSV
"RTN","FBAACCB1",28,0)
 I $D(^FBAAI(I,"DX")) S FBDX=^("DX") F FBK=1:1:5 Q:$P(FBDX,"^",FBK)=""  D WRTDX
"RTN","FBAACCB1",29,0)
 I $D(^FBAAI(I,"PROC")) S FBPROC=^("PROC") W ! F FBL=1:1:5 Q:$P(FBPROC,"^",FBL)=""  D WRTPC
"RTN","FBAACCB1",30,0)
 S A2=FBAP D PMNT^FBAACCB2 K A2
"RTN","FBAACCB1",31,0)
 Q
"RTN","FBAACCB1",32,0)
CDAT S FBPDT=$E(FBPDT,4,5)_"/"_$S($E(FBPDT,6,7)="00":$E(FBPDT,2,3),1:$E(FBPDT,6,7)_"/"_$E(FBPDT,2,3))
"RTN","FBAACCB1",33,0)
 Q
"RTN","FBAACCB1",34,0)
HEDC W "Patient Name",?20,"('*' Reimbursement to Veteran   '+' Cancellation Activity)",!,?13,"('#' Voided Payment)",?60,"Batch Number"
"RTN","FBAACCB1",35,0)
 W !,?3,"Vendor Name",?45,"Vendor ID",?57,"Invoice #",?68,"Dt Inv Rec'd",!,?3,"FR DATE",?14,"TO DATE  CLAIMED   PAID",?41,"SUSP CODE",!,Q,!
"RTN","FBAACCB1",36,0)
 Q
"RTN","FBAACCB1",37,0)
CHNH S (J,FZ("CNT"))=0 F  S J=$O(^FBAAI("AC",B,J)) Q:J'>0  I $D(^FBAAI(J,0)) S Z(0)=^(0) D:$P(Z(0),"^",9)>0!($P(FZ,"^",15)="Y") MORECH D:$P(FZ,U,15)'="Y" INVCNT
"RTN","FBAACCB1",38,0)
 S:$G(FZ("CNT")) $P(FZ,U,10)=FZ("CNT") K FZ("CNT") G FIN^FBAACCB
"RTN","FBAACCB1",39,0)
MORECH S T=T+$P(Z(0),"^",9),C=C+1 Q
"RTN","FBAACCB1",40,0)
WRTDX W ?4,"Dx: ",$$ICD9^FBCSV1($P(FBDX,"^",FBK),$P($G(Z(0)),"^",6)),"  " Q  ;CSV
"RTN","FBAACCB1",41,0)
WRTPC W ?4,"Proc: ",$$ICD0^FBCSV1($P(FBPROC,"^",FBL),$P($G(Z(0)),"^",6)),"  " Q  ;CSV
"RTN","FBAACCB1",42,0)
MORE S J=$P(Z(0),"^",5),D=$P(Z(0),"^",3),FBAACPT=$P(Z(0),"^",1),N=$S($D(^DPT(J,0)):$P(^(0),"^",1),1:""),S=$S(N]"":$P(^DPT(J,0),"^",9),1:""),FBIN=A,CPTDESC=$P(Z(0),"^",2)
"RTN","FBAACCB1",43,0)
 S Y="",$P(Y,"^",2)=$P(Z(0),"^",4),$P(Y,"^",3)=$P(Z(0),"^",16),$P(Y,"^",12)=0,T=$P(Z(0),"^",8),T=$S(T="":"",$D(^FBAA(161.27,T,0)):^(0),1:""),$P(Y,"^",9)=$P(Z(0),"^",1),ZS=$P(Z(0),"^",20),FBPV=""
"RTN","FBAACCB1",44,0)
 D FBCKP(A,B2)
"RTN","FBAACCB1",45,0)
 S FBIN(1)=$P($G(^FBAA(162.1,+A,0)),"^",2)
"RTN","FBAACCB1",46,0)
 G GO^FBAACCB
"RTN","FBAACCB1",47,0)
INVCNT ;set invoice count for cnh batch
"RTN","FBAACCB1",48,0)
 S FZ("CNT")=FZ("CNT")+1
"RTN","FBAACCB1",49,0)
 Q
"RTN","FBAACCB1",50,0)
FBCKI(FBI) ;set inpatient check variables
"RTN","FBAACCB1",51,0)
 ;fbi=DA
"RTN","FBAACCB1",52,0)
 I '$G(FBI) S (FBCKDT,FBCK,FBCANDT,FBCANR,FBCAN,FBDIS,FBCKINT)="" Q
"RTN","FBAACCB1",53,0)
 S FBCKIN=$G(^FBAAI(FBI,2))
"RTN","FBAACCB1",54,0)
 S U="^",FBCKDT=+FBCKIN,FBCK=$P(FBCKIN,U,4),FBCANDT=$P(FBCKIN,U,5),FBCANR=$P(FBCKIN,U,6),FBCAN=$P(FBCKIN,U,7),FBDIS=$P(FBCKIN,U,8),FBCKINT=$P(FBCKIN,U,9) K FBCKIN
"RTN","FBAACCB1",55,0)
 Q
"RTN","FBAACCB1",56,0)
FBCKP(J,K) ;set pharmacy check variables
"RTN","FBAACCB1",57,0)
 ;j,k required input variables to = da(1) and da respectively (162.1)
"RTN","FBAACCB1",58,0)
 I '$G(J)!('$G(K)) Q
"RTN","FBAACCB1",59,0)
 S FBCKIN=$G(^FBAA(162.1,J,"RX",K,2))
"RTN","FBAACCB1",60,0)
 S U="^",FBCKDT=$P(FBCKIN,U,8),FBCK=$P(FBCKIN,U,10),FBCANDT=$P(FBCKIN,U,11),FBCANR=$P(FBCKIN,U,12),FBCAN=$P(FBCKIN,U,13),FBDIS=$P(FBCKIN,U,14),FBCKINT=$P(FBCKIN,U,15) K FBCKIN
"RTN","FBAACCB1",61,0)
 Q
"RTN","FBAACO2")
0^16^B12251059
"RTN","FBAACO2",1,0)
FBAACO2 ;AISC/GRR-PAYMENT PROCESS FOR DUPLICATE ;5/27/1999
"RTN","FBAACO2",2,0)
 ;;3.5;FEE BASIS;**4,55**;JAN 30, 1995
"RTN","FBAACO2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAACO2",4,0)
RD S DIR(0)="Y",DIR("A")="Want this payment stored as a Medical Denial",DIR("B")="YES",DIR("?")="Enter 'Yes' to store payment entry as a denial and send a Suspension letter.  Enter 'No' to have nothing happen." D ^DIR K DIR Q:$D(DIRUT)!('Y)
"RTN","FBAACO2",5,0)
 S FBDEN=1 Q
"RTN","FBAACO2",6,0)
FILE ;files sp multiple entry
"RTN","FBAACO2",7,0)
 K DR S TP="" I $G(FBDEN) S FBAMTPD=0
"RTN","FBAACO2",8,0)
 S DR="I $G(FBDEN) S Y=1;D PPT^FBAACO1();34///^S X=$G(FBAAMM1);D POS^FBAACO1;S:'$G(FBHCFA(30)) Y=0;1;S J=X;I $G(FBDEN) S Y=2;D FEE^FBAACO0;44////^S X=FBFSAMT;45///^S X=FBFSUSD;2///^S X=FBAMTPD;S K=X"
"RTN","FBAACO2",9,0)
 S DR(1,162.03,1)="S:J-K=0 Y=6;3//^S X=$S(J-K:J-K,1:"""");S:'X Y=6;3.5///^S X=DT;@4;4;I X']"""" D SC^FBAACO3;S:X'=4 Y=6;22;6////^S X=DUZ"
"RTN","FBAACO2",10,0)
 S DR(1,162.03,2)="7////^S X=FBAABE;8////^S X=BO;13///^S X=FBAAID;14///^S X=FBAAIN;33///^S X=FBAAVID;I $G(FBDEN) S FBTST=1"
"RTN","FBAACO2",11,0)
 I '$G(FBDEN) D
"RTN","FBAACO2",12,0)
 .N FBCSVSTR S FBCSVSTR="I X]"""" S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@1"";"
"RTN","FBAACO2",13,0)
 .S DR(1,162.03,3)="S:$$EXTPV^FBAAUTL5(FBPOV)=""01"" Y=""@1"";S:FB7078]""""!($D(FB583)) Y=30;@5;28R;S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@5"";30////^S X=FBHCFA(30);31;32R;S Y=15;@1;28;"_FBCSVSTR_"30////^S X=FBHCFA(30);31"
"RTN","FBAACO2",14,0)
 .S DR(1,162.03,4)="15///^S X=FBPT;16////^S X=FBPOV;17///^S X=FBTT;18///^S X=FBAAPTC;23////^S X=FBTYPE;26////^S X=FBPSA;S:$D(FBV583) Y=""@2"";27////^S X=FB7078;S Y=""@99"";@2;27////^S X=FBV583;@99;S FBTST=1"
"RTN","FBAACO2",15,0)
 S DIE="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",DA(3)=DFN,DA(2)=FBV,DA(1)=FBSDI,DA=FBAACPI D LOCK^FBUCUTL("^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",FBAACPI,1),^DIE L -^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI)
"RTN","FBAACO2",16,0)
 I $D(DTOUT) D KILL Q
"RTN","FBAACO2",17,0)
 I '$G(FBTST),$G(DA) S DIR(0)="YA",DIR("A")="Entering an '^' will delete "_$S($G(FBDEN):"denial",1:"payment")_".  Are you sure you want to delete? ",DIR("B")="No" D ^DIR K DIR G FILE:'$D(DIRUT)&('Y) D KILL Q
"RTN","FBAACO2",18,0)
 K FBTST,FBDEN,FBAAMM1,DIE,DR,DA
"RTN","FBAACO2",19,0)
 I $D(FBDL) S FBAAOUT=1 Q
"RTN","FBAACO2",20,0)
 Q
"RTN","FBAACO2",21,0)
KILL S DIK=DIE D ^DIK K DIE,DIK I '$G(FBCNP) D Q^FBAACO S FBAAOUT=1
"RTN","FBAACO2",22,0)
 W !,"Deleted" Q
"RTN","FBAACO3")
0^17^B33495920
"RTN","FBAACO3",1,0)
FBAACO3 ;AISC/GRR-ENTER PAYMENT CONTINUED ;10/31/2001
"RTN","FBAACO3",2,0)
 ;;3.5;FEE BASIS;**4,38,55**;JAN 30, 1995
"RTN","FBAACO3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAACO3",4,0)
DOEDIT ;
"RTN","FBAACO3",5,0)
 N FB1725
"RTN","FBAACO3",6,0)
 W ! S (FBAACP(0),X)=FBAACP,DIC="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",DIC(0)="EQMZ",DA(3)=DFN,DA(2)=FBV,DA(1)=FBSDI D ^DIC I Y<0 S FBAAOUT=1 Q
"RTN","FBAACO3",7,0)
 S (DA,FBAACPI)=+Y,K=$P(Y(0),U,3),FBZBN=$P(Y(0),U,8),FBZBS=$S(FBZBN]"":$P($G(^FBAA(161.7,FBZBN,"ST")),U),1:""),FBAAPTC=$P(Y(0),U,20),J(0)=$P(Y(0),U,2)
"RTN","FBAACO3",8,0)
 ; set FB1725 true (1) if payment is for a Mill Bill claim
"RTN","FBAACO3",9,0)
 S FB1725=$S($P(Y(0),U,13)["FB583":+$P($G(^FB583(+$P(Y(0),U,13),0)),U,28),1:0)
"RTN","FBAACO3",10,0)
 S FBAAMM1=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,2)),U,2)
"RTN","FBAACO3",11,0)
 S FBFSAMT(0)=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,2)),U,12)
"RTN","FBAACO3",12,0)
 ; determine lesser of original fee schedule amount and amount claimed
"RTN","FBAACO3",13,0)
 S FBAMTPD(0)=$S(FBFSAMT(0)="":J(0),FBFSAMT(0)>J(0):J(0),1:FBFSAMT(0))
"RTN","FBAACO3",14,0)
 S FBMODL=$$MODL^FBAAUTL4("^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,"_FBAACPI_",""M"")")
"RTN","FBAACO3",15,0)
 I FBZBS=""!(FBZBS="V") D NOGO S FBAAOUT=1 Q
"RTN","FBAACO3",16,0)
 ; first edit CPT code and modifiers
"RTN","FBAACO3",17,0)
 D CPTM^FBAALU(FBAADT,DFN,FBAACP(0),FBMODL) I '$G(FBGOT) S FBAAOUT=1 Q
"RTN","FBAACO3",18,0)
 ; if CPT was changed then update file
"RTN","FBAACO3",19,0)
 I FBAACP'=FBAACP(0) D  I FBAACP="@" S FBAAOUT=1 Q
"RTN","FBAACO3",20,0)
 . N FBIENS,FBFDA
"RTN","FBAACO3",21,0)
 . S FBIENS=FBAACPI_","_FBSDI_","_FBV_","_DFN_","
"RTN","FBAACO3",22,0)
 . S FBFDA(162.03,FBIENS,.01)=FBAACP
"RTN","FBAACO3",23,0)
 . D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBAACO3",24,0)
 ; if modifiers changed then update file
"RTN","FBAACO3",25,0)
 I FBMODL'=$$MODL^FBAAUTL4("FBMODA") D REPMOD^FBAAUTL4(DFN,FBV,FBSDI,FBAACPI)
"RTN","FBAACO3",26,0)
 ; now edit remaining fields
"RTN","FBAACO3",27,0)
 D SETO K DR
"RTN","FBAACO3",28,0)
 S DR="42R;S FBZIP=X;S:$$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) Y=""@2"";43///@;S FBTIME=X;S Y=""@3"";@2;43R;S FBTIME=X;@3"
"RTN","FBAACO3",29,0)
 S DR(1,162.03,1)="S FBAAMM=$S(FBAAPTC=""R"":"""",1:1);D PPT^FBAACO1(FBAAMM1);34///@;34////^S X=FBAAMM1;30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBAACO3",30,0)
 S DR(1,162.03,2)="D FEEDT^FBAACO3;44///@;44///^S X=FBFSAMT;45///@;45///^S X=FBFSUSD;S:FBAMTPD'>0!(FBAMTPD=FBAMTPD(0)) Y=""@4"";2///^S X=FBAMTPD;@4;2//^S X=FBAMTPD;D CHKIT^FBAACO3;S K=X"
"RTN","FBAACO3",31,0)
 S DR(1,162.03,3)="3//^S X=$S(J-K:J-K,1:"""");4;S:X'=4 Y=6;22;6////^S X=DUZ;13;33"
"RTN","FBAACO3",32,0)
 S DR(1,162.03,3)="S:$$EXTPV^FBAAUTL5(FBPOV)=""01"" Y=""@1"";S Y=$S('$D(FB7078):28,FB7078]"""":31,1:28);@5;28R;S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@5"";31;32R;S Y="""";@1;28;I X]"""" S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@1"";31"
"RTN","FBAACO3",33,0)
 S DIE="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",DIE("NO^")="",FBOT=1
"RTN","FBAACO3",34,0)
 D LOCK^FBUCUTL("^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",FBAACPI) I 'FBLOCK S FBAAOUT=1 Q
"RTN","FBAACO3",35,0)
 D ^DIE L -^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI) K FBOT,DIE,DR,DA
"RTN","FBAACO3",36,0)
 Q:$D(FBDL)
"RTN","FBAACO3",37,0)
 I $G(FBAAIN) S FBINTOT=0 D CALC
"RTN","FBAACO3",38,0)
 Q
"RTN","FBAACO3",39,0)
SETO S FY=$E(FBAADT,1,3)+1700+$S($E(FBAADT,4,5)>9:1,1:0)
"RTN","FBAACO3",40,0)
 Q
"RTN","FBAACO3",41,0)
OUT I K>0 S Z1=$P(^FBAA(161.7,FBAABE,0),"^",11)+1,$P(^(0),"^",11)=Z1,FBINTOT=FBINTOT+K
"RTN","FBAACO3",42,0)
 Q
"RTN","FBAACO3",43,0)
CKMAX S (FBAOT,A)=0,O="" F Z=S-.1:0 S Z=$O(^FBAAC(DFN,"AB",Z)) Q:Z'>0!(Z>R)  F Q=0:0 S Q=$O(^FBAAC(DFN,"AB",Z,Q)) Q:Q'>0  S W=$O(^FBAAC(DFN,"AB",Z,Q,0)) I $D(^FBAAC(DFN,1,Q,1,W,0)) D SMORE
"RTN","FBAACO3",44,0)
 I A>$P(FBSITE(1),"^",9) G NO
"RTN","FBAACO3",45,0)
 Q
"RTN","FBAACO3",46,0)
SMORE N FBA,FBB S FBB=$P($G(^FBAAC(+DFN,1,+Q,1,+W,0)),U,4),E=0
"RTN","FBAACO3",47,0)
 F  S E=$O(^FBAAC(DFN,1,Q,1,W,1,E)) Q:'E  S FBA=$G(^(E,0)) I $P(FBA,"^",9)=2,$P(FBA,"^",18)'=1 D
"RTN","FBAACO3",48,0)
 .I $$IDCHK^FBAAUTL3(DFN,FBB) S A=A+$P(FBA,"^",3) Q
"RTN","FBAACO3",49,0)
 .S FBAOT=FBAOT+$P(FBA,U,3)
"RTN","FBAACO3",50,0)
 Q
"RTN","FBAACO3",51,0)
NO W !!,*7,"Warning Patient already at maximum allowed for month of service",! Q
"RTN","FBAACO3",52,0)
WARN W !!,*7,"You have reached the maximum number of payments for a Batch!",!,"You must select another Batch for entering Payments!"
"RTN","FBAACO3",53,0)
CALC ;Calculate Current Invoice Total
"RTN","FBAACO3",54,0)
 F J=0:0 S J=$O(^FBAAC("C",FBAAIN,J)) Q:J'>0  F K=0:0 S K=$O(^FBAAC("C",FBAAIN,J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("C",FBAAIN,J,K,L)) Q:L'>0  F M=0:0 S M=$O(^FBAAC("C",FBAAIN,J,K,L,M)) Q:M'>0  D CALC1
"RTN","FBAACO3",55,0)
 K J,K,L,M,FZNODE Q
"RTN","FBAACO3",56,0)
CALC1 S FZNODE=^FBAAC(J,1,K,1,L,1,M,0),A2=$P(FZNODE,"^",3),FBINTOT=FBINTOT+A2,FBAAID=$P(FZNODE,"^",15),FBAAVID=$P($G(^FBAAC(J,1,K,1,L,1,M,2)),"^")
"RTN","FBAACO3",57,0)
 Q
"RTN","FBAACO3",58,0)
FEEDT ;
"RTN","FBAACO3",59,0)
 ; input FB1725 - true (=1) when edited payment is for a Mill Bill claim
"RTN","FBAACO3",60,0)
 N FBX
"RTN","FBAACO3",61,0)
 D SETO:'$G(FY) S FBFY=FY-1
"RTN","FBAACO3",62,0)
 S (FBFSAMT,FBFSUSD)="",FBAMTPD=$G(FBAMTPD)
"RTN","FBAACO3",63,0)
 S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBAADT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME))
"RTN","FBAACO3",64,0)
 I '$G(FBAAMM1) D
"RTN","FBAACO3",65,0)
 . N FBX1
"RTN","FBAACO3",66,0)
 . S FBFSAMT=$P(FBX,U),FBFSUSD=$P(FBX,U,2)
"RTN","FBAACO3",67,0)
 . ; use 70% of fee schedule amount if payment under 38 U.S.C. 1725
"RTN","FBAACO3",68,0)
 . S FBX1=$J(FBFSAMT*$S(FB1725:.7,1:1),0,2)
"RTN","FBAACO3",69,0)
 . ; set default amount paid to lesser of amt claimed (J) or fee sched.
"RTN","FBAACO3",70,0)
 . S FBAMTPD=$S(FBX1'>0:J,FBX1>J:J,1:FBX1)
"RTN","FBAACO3",71,0)
 I $G(FBAAMM1) D
"RTN","FBAACO3",72,0)
 . W !,?2,"Payment is for a contracted service so fee schedule does not apply."
"RTN","FBAACO3",73,0)
 I $P($G(FBX),U)]"" D
"RTN","FBAACO3",74,0)
 . W !?2,$S($G(FBAAMM1):"However, f",1:"F")
"RTN","FBAACO3",75,0)
 . W "ee schedule amount is $",$P(FBX,U)," from the "
"RTN","FBAACO3",76,0)
 . W:$P(FBX,U,3)]"" $P(FBX,U,3)," " ; year if returned
"RTN","FBAACO3",77,0)
 . W:$P(FBX,U,2)]"" $$EXTERNAL^DILFD(162.03,45,"",$P(FBX,U,2))
"RTN","FBAACO3",78,0)
 E  W !?2,"Unable to determine a FEE schedule amount.",!
"RTN","FBAACO3",79,0)
 I FB1725 D
"RTN","FBAACO3",80,0)
 . W !?2,"**Payment is for emergency treatment under 38 U.S.C. 1725."
"RTN","FBAACO3",81,0)
 . I $G(FBFSAMT) W !?2,"  Therefore, fee schedule amount reduced to $",$J(.7*FBFSAMT,0,2)," (70%)."
"RTN","FBAACO3",82,0)
 Q
"RTN","FBAACO3",83,0)
CHKIT I X>FBAMTPD&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,"You must be a holder of the 'FBAASUPERVISOR' security key in order to",!,"exceed the Fee Schedule.",! S $P(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,0),"^",3)=K,Y=2 Q
"RTN","FBAACO3",84,0)
 Q
"RTN","FBAACO3",85,0)
NOGO W !!,*7,"This payment CANNOT be edited.  The batch the payment is in",!,"has been Vouchered.  You may void the payment with the Void Payment option.",!
"RTN","FBAACO3",86,0)
 Q
"RTN","FBAACO3",87,0)
 ;
"RTN","FBAACO3",88,0)
SC W *7,!?4,"Suspense code is required!",! S Y="@4" Q
"RTN","FBAACO3",89,0)
 ;
"RTN","FBAACO3",90,0)
DEL ;delete date of service if no service provided entered
"RTN","FBAACO3",91,0)
 I '$O(^FBAAC(DFN,1,FBV,1,FBSDI,1,0)) D
"RTN","FBAACO3",92,0)
 .S DIK="^FBAAC(DFN,1,FBV,1,",DA(2)=DFN,DA(1)=FBV,DA=FBSDI D ^DIK W !!?5,*7,"Incomplete payment entry deleted.",!
"RTN","FBAACO3",93,0)
 K DIK,DA Q
"RTN","FBAACP")
0^18^B26557052
"RTN","FBAACP",1,0)
FBAACP ;AISC/CMR-C&P PAYMENT DRIVER ;11/1/2001
"RTN","FBAACP",2,0)
 ;;3.5;FEE BASIS;**4,38,55**;JAN 30, 1995
"RTN","FBAACP",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAACP",4,0)
 K FBAAOUT,FBPOP S FBCNP=1 ;C&P flag
"RTN","FBAACP",5,0)
 D SITE^FBAACO G Q:$G(FBPOP) D BT^FBAACO G Q:$G(FBAAOUT)
"RTN","FBAACP",6,0)
1 K FBAR,FBAAOUT,FBDL,FBAAMM D GETVEN1^FBAACO1:$D(FB583),GETVEN^FBAACO1:'$D(FB583) G CLN:$G(FBAAOUT)
"RTN","FBAACP",7,0)
 D GETINV^FBAACO1 G CLN:$G(FBAAOUT)
"RTN","FBAACP",8,0)
 D GETINDT^FBAACO1 G CLN:$G(FBAAOUT)
"RTN","FBAACP",9,0)
 D MMPPT^FBAACP G CLN:$G(FBAAOUT)
"RTN","FBAACP",10,0)
SVDT W !! S %DT="AEXP",%DT("A")="Date of Service: " D ^%DT I X="^" G CLN
"RTN","FBAACP",11,0)
 I Y<0!(Y>FBAAID) W *7,!!,"Enter the date the Vendor provided the service to the Patient.",!,"The date must be prior to the date the invoice is received.",! G SVDT
"RTN","FBAACP",12,0)
 S FBAADT=Y D SETO^FBAACO3,CPTM^FBAALU(FBAADT) I 'FBGOT G CLN
"RTN","FBAACP",13,0)
 D ASKZIP^FBAAFS($G(FBV),$G(FBAADT)) I $G(FBAAOUT)!($G(FBZIP)']"") G CLN
"RTN","FBAACP",14,0)
 I $$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) D ASKTIME^FBAAFS I $G(FBAAOUT)!('$G(FBTIME)) G CLN
"RTN","FBAACP",15,0)
 D HCFA G CLN:$G(FBAAOUT)
"RTN","FBAACP",16,0)
 S FBAAAMT=0 D AMTPD I $G(FBAAOUT)!('$G(FBAAAMT)) G CLN
"RTN","FBAACP",17,0)
MULT ;begin unique patient entry
"RTN","FBAACP",18,0)
 W:FBINTOT>0 !,"Invoice: "_FBAAIN_" Totals: $ "_FBINTOT
"RTN","FBAACP",19,0)
 K FBAAOUT,FBDL S (DFN,FTP)="" D SITE^FBAACO G Q:$G(FBPOP) W !!
"RTN","FBAACP",20,0)
 I '$D(FB583) K FBDL D GETVET^FBAAUTL1 G CLN:'DFN K FBDMRA D GETAUTH^FBAAUTL1 G MULT:FTP']""
"RTN","FBAACP",21,0)
 K FBAAOUT D  G Q:$G(FBAAOUT)
"RTN","FBAACP",22,0)
 . F  D  Q:$G(FBAAOUT)  Q:($$INPICD9^FBCSV1(+$G(Y),"",$G(FBAADT))=0)
"RTN","FBAACP",23,0)
 . . S I=28,DIR(0)="PO^80:EMQZ",DIR("A")="PRIMARY DIAGNOSIS" D DIR
"RTN","FBAACP",24,0)
 D PAT^FBAACO W !! D FILEV^FBAACO5(DFN,FBV) I $G(FBAAOUT) G Q:$D(FB583),CLN
"RTN","FBAACP",25,0)
 ;check for payments against all linked vendors
"RTN","FBAACP",26,0)
 S DA=+Y D CHK^FBAACO4 K FBAACK1,FBAAOUT,DA,X,Y
"RTN","FBAACP",27,0)
 W !! D GETSVDT^FBAACO5(DFN,FBV,FBASSOC,0,FBAADT) I $G(FBAAOUT) D AUTHQ^FBAACO G MULT
"RTN","FBAACP",28,0)
 D SETO^FBAACO3,CHK2^FBAACO4 I FBJ']"" G SVPR
"RTN","FBAACP",29,0)
CHKE ;determines what action to take on duplicate services entered
"RTN","FBAACP",30,0)
 K FBAAOUT W !!,*7,"Service selected for that date already in system."
"RTN","FBAACP",31,0)
 S DIR(0)="Y",DIR("A")="Do you want to add another service for the SAME DATE",DIR("B")="No" D ^DIR K DIR G SVPR:Y I $D(DIRUT) D DEL^FBAACO3 G Q
"RTN","FBAACP",32,0)
 W !!,*7,"You must use the 'EDIT PAYMENT' option to edit the service previously",!,"entered for that date." D DEL^FBAACO3
"RTN","FBAACP",33,0)
 G MULT
"RTN","FBAACP",34,0)
SVPR K FBAAOUT D SVCPR^FBAACO1 G CHKE:$G(FBAAOUT)
"RTN","FBAACP",35,0)
 D FILE^FBAACP1 I Z1>(FBAAMPI-1) W !!,*7,"You have reached the maximum number of payments for a batch!",!,"You must select another Batch for entering Payments!" G CLN
"RTN","FBAACP",36,0)
 G MULT
"RTN","FBAACP",37,0)
Q ;kill variables and exit
"RTN","FBAACP",38,0)
 D Q^FBAACO
"RTN","FBAACP",39,0)
 Q
"RTN","FBAACP",40,0)
AMTPD ;get amount paid
"RTN","FBAACP",41,0)
 N FBX
"RTN","FBAACP",42,0)
 S FBFY=FY-1
"RTN","FBAACP",43,0)
 S (FBAMTPD,FBFSAMT,FBFSUSD)=""
"RTN","FBAACP",44,0)
 S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBAADT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME))
"RTN","FBAACP",45,0)
 I '$G(FBAAMM1) D
"RTN","FBAACP",46,0)
 . S FBFSAMT=$P(FBX,U),FBFSUSD=$P(FBX,U,2)
"RTN","FBAACP",47,0)
 . S FBAMTPD=FBFSAMT
"RTN","FBAACP",48,0)
 I $G(FBAAMM1) D
"RTN","FBAACP",49,0)
 . W !,?2,"Payment is for a contracted service so fee schedule does not apply."
"RTN","FBAACP",50,0)
 I $P($G(FBX),U)]"" D
"RTN","FBAACP",51,0)
 . W !?2,$S($G(FBAAMM1):"However, f",1:"F")
"RTN","FBAACP",52,0)
 . W "ee schedule amount is $",$P(FBX,U)," from the "
"RTN","FBAACP",53,0)
 . W:$P(FBX,U,3)]"" $P(FBX,U,3)," " ; year if returned
"RTN","FBAACP",54,0)
 . W:$P(FBX,U,2)]"" $$EXTERNAL^DILFD(162.03,45,"",$P(FBX,U,2))
"RTN","FBAACP",55,0)
 E  W !?2,"Unable to determine a FEE schedule amount.",!
"RTN","FBAACP",56,0)
 I FBAMTPD=0 D  Q:$G(FBAAOUT)
"RTN","FBAACP",57,0)
 . ;if fee schedule = 0 write message and quit
"RTN","FBAACP",58,0)
 . W !,"You must use the Enter Payment option for CPT codes that have a",!,"Fee Schedule set equal to zero.",!
"RTN","FBAACP",59,0)
 . S FBAAOUT=1
"RTN","FBAACP",60,0)
 S DIR(0)="162.03,1",DIR("A")="Enter Amount Paid:  $",DIR("?")="Enter a dollar amount that does not exceed the FEE Schedule" S:FBAMTPD'="" DIR("B")=FBAMTPD D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAACP",61,0)
 I $G(FBAMTPD),+Y>FBAMTPD&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"You must be a holder of the 'FBAASUPERVISOR' security key to",!,"exceed the FEE Schedule.  Enter an '^' to quit or accept the default.",! G AMTPD
"RTN","FBAACP",62,0)
 S FBAAAMT=+Y
"RTN","FBAACP",63,0)
 Q
"RTN","FBAACP",64,0)
HCFA ;get HCFA fields
"RTN","FBAACP",65,0)
 F I=28,30,31 S FBHCFA(I)=""
"RTN","FBAACP",66,0)
 W ! F I=30,31 S DIR(0)="P"_$S(I=30:"^353.1",I=31:"O^353.2")_":EMQZ" D DIR Q:$G(FBAAOUT)
"RTN","FBAACP",67,0)
 K DIR Q
"RTN","FBAACP",68,0)
DIR ;generic DIR call for HCFA
"RTN","FBAACP",69,0)
 D ^DIR K DIR I $D(DTOUT)!($D(DUOUT)) S FBAAOUT=1 Q
"RTN","FBAACP",70,0)
 S:Y'=-1 FBHCFA(I)=$P(Y,"^")
"RTN","FBAACP",71,0)
 Q
"RTN","FBAACP",72,0)
CLN G Q:$D(FB583)
"RTN","FBAACP",73,0)
 D Q G FBAACP
"RTN","FBAACP",74,0)
 Q
"RTN","FBAACP",75,0)
MMPPT ;money management/prompt pay type for multiple payment entry
"RTN","FBAACP",76,0)
 ; input
"RTN","FBAACP",77,0)
 ;   FBAAPTC
"RTN","FBAACP",78,0)
 ; output
"RTN","FBAACP",79,0)
 ;   FBAAMM
"RTN","FBAACP",80,0)
 ;   FBAAMM1
"RTN","FBAACP",81,0)
 ;   FBAAOUT
"RTN","FBAACP",82,0)
 ;
"RTN","FBAACP",83,0)
 S (FBAAMM,FBAAMM1)=""
"RTN","FBAACP",84,0)
 I $G(FBAAPTC)'="R" D
"RTN","FBAACP",85,0)
 . W !,"The answer to the following will apply to all payments entered via this option."
"RTN","FBAACP",86,0)
 . S DIR(0)="Y"
"RTN","FBAACP",87,0)
 . S DIR("A")="Are payments for contracted services"
"RTN","FBAACP",88,0)
 . S DIR("B")="No"
"RTN","FBAACP",89,0)
 . S DIR("?",1)="Answering no indicates interest will not be paid for any line items."
"RTN","FBAACP",90,0)
 . S DIR("?",2)="Answering yes indicates interest will be paid."
"RTN","FBAACP",91,0)
 . S DIR("?",3)="A fee schedule is not used for contracted services."
"RTN","FBAACP",92,0)
 . S DIR("?")="Enter either 'Y' or 'N'."
"RTN","FBAACP",93,0)
 . D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAACP",94,0)
 . S (FBAAMM,FBAAMM1)=$S(Y:1,1:"")
"RTN","FBAACP",95,0)
 Q
"RTN","FBAAMP")
0^22^B46681030
"RTN","FBAAMP",1,0)
FBAAMP ;AISC/CMR-MULTIPLE PAYMENT ENTRY ;10/31/2001
"RTN","FBAAMP",2,0)
 ;;3.5;FEE BASIS;**4,21,38,55**;JAN 30, 1995
"RTN","FBAAMP",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAMP",4,0)
 S FBMP=1 ;multiple payment flag
"RTN","FBAAMP",5,0)
 G ^FBAACO
"RTN","FBAAMP",6,0)
1 ;return from FBAACO
"RTN","FBAAMP",7,0)
 D MMPPT^FBAACP G:$G(FBAAOUT) Q1
"RTN","FBAAMP",8,0)
 D MPDT I 'FBMPDT G Q1
"RTN","FBAAMP",9,0)
 K FBAAOUT W ! D CPTM^FBAALU(FBMPDT,DFN) I 'FBGOT G Q1
"RTN","FBAAMP",10,0)
 S FY=$E(DT,1,3)+1700+$S($E(DT,4,5)>9:1,1:0)
"RTN","FBAAMP",11,0)
 D ASKZIP^FBAAFS($G(FBV)) I $G(FBAAOUT)!($G(FBZIP)']"") G Q1
"RTN","FBAAMP",12,0)
 I $$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) D ASKTIME^FBAAFS I $G(FBAAOUT)!('$G(FBTIME)) G Q1
"RTN","FBAAMP",13,0)
 D HCFA^FBAAMP1 G Q1:$G(FBAAOUT)
"RTN","FBAAMP",14,0)
AMTCL S DIR(0)="162.03,1",DIR("A")="Amount Claimed:  $",DIR("?")="Enter the amount being claimed by the vendor" D ^DIR K DIR G Q:$D(DIRUT) S FBJ=+Y
"RTN","FBAAMP",15,0)
 W ! S DIR("A")="Is $"_FBJ_" correct for Amount Claimed",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR G Q:$D(DIRUT),AMTCL:'Y
"RTN","FBAAMP",16,0)
RDAP D FEE G Q:$G(FBAAOUT) S FBK=FBAMTPD
"RTN","FBAAMP",17,0)
 W ! S DIR("A")="Is $"_FBK_" correct for Amount Paid",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR G Q:$D(DIRUT),RDAP:'Y
"RTN","FBAAMP",18,0)
 S FBAAAS=0 I FBJ-FBK D SUSP^FBAAMP1 I $G(FBAAOUT) G Q:$D(DUOUT),Q1
"RTN","FBAAMP",19,0)
 S FBJ=+FBJ,FBK=+FBK,FBAAAS=+FBAAAS
"RTN","FBAAMP",20,0)
MULT W:FBINTOT>0 !,"Invoice: "_FBAAIN_" Totals: $ "_FBINTOT
"RTN","FBAAMP",21,0)
 W !! S %DT("A")="Date of Service: ",%DT="AEPX" D ^%DT G Q1:X=""!(X="^")
"RTN","FBAAMP",22,0)
 D DATCK^FBAAUTL G MULT:'$D(X)!(Y<0)
"RTN","FBAAMP",23,0)
 S FBDT=Y
"RTN","FBAAMP",24,0)
 I '$$CHKCPT() W !,$C(7),"Invalid Date of Service." G MULT
"RTN","FBAAMP",25,0)
 I '$$CHKICD9^FBCSV1(+$G(FBHCFA(28)),$G(FBDT)) G MULT
"RTN","FBAAMP",26,0)
 I '$G(FBAAMM1),'$$CHKFS() W !,$C(7),"Invalid Date of Service." G MULT
"RTN","FBAAMP",27,0)
 S DIR(0)="Y",DIR("A")="Is "_($$DATX^FBAAUTL(FBDT))_" correct",DIR("B")="Yes" D ^DIR K DIR G MULT:$D(DIRUT)!('Y)
"RTN","FBAAMP",28,0)
 S FBAADT=FBDT
"RTN","FBAAMP",29,0)
 S FBMODL=$$MODL^FBAAUTL4("FBMODA","I")
"RTN","FBAAMP",30,0)
 I $D(^FBAAC("AE",DFN,FBV,FBAADT,FBAACP_$S($G(FBMODL)]"":"-"_FBMODL,1:""))) S DIR(0)="Y",DIR("A")="Code already exists for that date!  Want to add another service for the SAME DATE",DIR("B")="No" D ^DIR K DIR G MULT:$D(DIRUT)!('Y)
"RTN","FBAAMP",31,0)
 W !! D GETSVDT^FBAACO5(DFN,FBV,FBASSOC,0,FBAADT) G Q:$G(FBAAOUT)
"RTN","FBAAMP",32,0)
 D SETO^FBAACO3,SVCPR^FBAACO1 G Q:$G(FBAAOUT)
"RTN","FBAAMP",33,0)
FILE S TP="",DR="1///^S X=FBJ;Q;2///^S X=FBK"
"RTN","FBAAMP",34,0)
 S DR=DR_$S(FBJ-FBK:";3///^S X=FBAAAS;3.5////^S X=DT;4////^S X=FBAASC;D DESC^FBAAMP1",1:"")
"RTN","FBAAMP",35,0)
 S DR(1,162.03,1)="6////^S X=DUZ;7////^S X=FBAABE;8////^S X=BO;13///^S X=FBAAID;14///^S X=FBAAIN;15///^S X=FBPT;16////^S X=FBPOV;17///^S X=FBTT;18///^S X=FBAAPTC;23////^S X=2;26////^S X=FBPSA"
"RTN","FBAAMP",36,0)
 S DR(1,162.03,2)="34///^S X=$G(FBAAMM1);28////^S X=FBHCFA(28);30////^S X=FBHCFA(30);31////^S X=FBHCFA(31);32////^S X=FBHCFA(32);33///^S X=FBAAVID;44///^S X=FBFSAMT;45////^S X=FBFSUSD"
"RTN","FBAAMP",37,0)
 S DIE="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",DA=FBAACPI,DA(1)=FBSDI,DA(2)=FBV,DA(3)=DFN D LOCK^FBUCUTL(DIE,FBAACPI,1),^DIE L -^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI) S FBINTOT=FBINTOT+FBK W " ....OK, DONE...."
"RTN","FBAAMP",38,0)
 I FBK>0 S Z1=$P(^FBAA(161.7,FBAABE,0),"^",11)+1,$P(^(0),"^",11)=Z1
"RTN","FBAAMP",39,0)
 W:Z1>(FBAAMPI-20) !,*7,"Warning, you can only enter ",(FBAAMPI-Z1)," more line items!" I Z1>(FBAAMPI-1) D  S FBMAX=1 G Q1
"RTN","FBAAMP",40,0)
 .W !!,*7,"You have reached the maximum number of payments for a Batch!",!,"You must select another Batch for entering Payments!"
"RTN","FBAAMP",41,0)
 G MULT
"RTN","FBAAMP",42,0)
Q1 K FBAADT,FBX,FBAACP,DIC,DIE,X,Y,DIRUT,DUOUT,DTOUT,FBOUT,FBSI,FBMPDT G ^FBAACO:$D(FBMAX),1^FBAACO
"RTN","FBAAMP",43,0)
 ;
"RTN","FBAAMP",44,0)
Q ;kill variables and exit
"RTN","FBAAMP",45,0)
 D Q^FBAACO
"RTN","FBAAMP",46,0)
 Q
"RTN","FBAAMP",47,0)
 ;
"RTN","FBAAMP",48,0)
MPDT ;
"RTN","FBAAMP",49,0)
 S FBMPDT=""
"RTN","FBAAMP",50,0)
 S DIR(0)="D^::EX"
"RTN","FBAAMP",51,0)
 S DIR("A")="Enter date to use for CPT/ICD checks and fee schedule calc"
"RTN","FBAAMP",52,0)
 S DIR("B")="TODAY"
"RTN","FBAAMP",53,0)
 S DIR("?",1)="Enter a date. This date will be used when checking for"
"RTN","FBAAMP",54,0)
 S DIR("?",2)="an active CPT/Modifier/ICD code. Also, the fee schedule"
"RTN","FBAAMP",55,0)
 S DIR("?",3)="amount will be computed based on this date."
"RTN","FBAAMP",56,0)
 S DIR("?")="Enter '^' to exit."
"RTN","FBAAMP",57,0)
 W !
"RTN","FBAAMP",58,0)
 D ^DIR K DIR S:'$D(DIRUT) FBMPDT=Y
"RTN","FBAAMP",59,0)
 Q
"RTN","FBAAMP",60,0)
 ;
"RTN","FBAAMP",61,0)
FEE N FBX,FB1725
"RTN","FBAAMP",62,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBAAMP",63,0)
 S FB1725=$S($G(FB583):+$P($G(^FB583(+FB583,0)),U,28),1:0)
"RTN","FBAAMP",64,0)
 S FBFY=FY-1
"RTN","FBAAMP",65,0)
 S (FBFSAMT,FBFSUSD,FBAMFS)=""
"RTN","FBAAMP",66,0)
 S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBMPDT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME))
"RTN","FBAAMP",67,0)
 I '$G(FBAAMM1) D
"RTN","FBAAMP",68,0)
 . N FBX1
"RTN","FBAAMP",69,0)
 . S FBFSAMT=$P(FBX,U),FBFSUSD=$P(FBX,U,2)
"RTN","FBAAMP",70,0)
 . ; use 70% of fee schedule amount if payment under 38 U.S.C. 1725
"RTN","FBAAMP",71,0)
 . S FBX1=$J(FBFSAMT*$S(FB1725:.7,1:1),0,2)
"RTN","FBAAMP",72,0)
 . ; set default amount paid to lesser of amt claimed (J) or fee sched.
"RTN","FBAAMP",73,0)
 . S FBAMFS=$S(FBX1>$G(FBJ):$G(FBJ),1:FBX1)
"RTN","FBAAMP",74,0)
 I $G(FBAAMM1) D
"RTN","FBAAMP",75,0)
 . W !,?2,"Payment is for a contracted service so fee schedule does not apply."
"RTN","FBAAMP",76,0)
 I $P($G(FBX),U)]"" D
"RTN","FBAAMP",77,0)
 . W !?2,$S($G(FBAAMM1):"However, f",1:"F")
"RTN","FBAAMP",78,0)
 . W "ee schedule amount is $",$P(FBX,U)," from the "
"RTN","FBAAMP",79,0)
 . W:$P(FBX,U,3)]"" $P(FBX,U,3)," " ; year if returned
"RTN","FBAAMP",80,0)
 . W:$P(FBX,U,2)]"" $$EXTERNAL^DILFD(162.03,45,"",$P(FBX,U,2))
"RTN","FBAAMP",81,0)
 E  W !?2,"Unable to determine a FEE schedule amount.",!
"RTN","FBAAMP",82,0)
 I FB1725 D
"RTN","FBAAMP",83,0)
 . W !?2,"**Payment is for emergency treatment under 38 U.S.C. 1725."
"RTN","FBAAMP",84,0)
 . I $G(FBFSAMT) W !?2,"  Therefore, fee schedule amount reduced to $",$J(.7*FBFSAMT,0,2)," (70%)."
"RTN","FBAAMP",85,0)
 ;
"RTN","FBAAMP",86,0)
AMTPD S DIR(0)="162.5,9",DIR("A")="Amount Paid: $",DIR("B")=$G(FBAMFS),DIR("?")="^D HELP1^FBAAMP" K:$G(FBAMFS)="" DIR("B") D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAAMP",87,0)
 I +Y>FBJ W !!,*7,"Amount paid cannot be greater than the amount claimed." G AMTPD
"RTN","FBAAMP",88,0)
 I FBAMFS]"" I +Y>FBAMFS&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"You must be a holder of the 'FBAASUPERVISOR' key in order to",!,"exceed the Fee Schedule.",! G AMTPD
"RTN","FBAAMP",89,0)
 S FBAMTPD=+Y K FBAMFS Q
"RTN","FBAAMP",90,0)
HELP1 W !!,"Enter a dollar amount that does not exceed the amount claimed.",!
"RTN","FBAAMP",91,0)
 I FBAMFS>0 W "Only the holder of the 'FBAASUPERVISOR' key may exceed the",!,"Fee Schedule.",!
"RTN","FBAAMP",92,0)
 Q
"RTN","FBAAMP",93,0)
 ;
"RTN","FBAAMP",94,0)
CHKCPT() ; check if CPT/Modifer active on date of service
"RTN","FBAAMP",95,0)
 N FBCPTX,FBI,FBMOD,FBMODX,FBRET
"RTN","FBAAMP",96,0)
 S FBRET=1
"RTN","FBAAMP",97,0)
 S FBCPTX=$$CPT^ICPTCOD(FBAACP,FBDT,1)
"RTN","FBAAMP",98,0)
 I '$P(FBCPTX,U,7) S FBRET=0 W !,"  CPT Code ",$P(FBCPTX,U,2)," inactive on date of service."
"RTN","FBAAMP",99,0)
 I $O(FBMODA(0)) D
"RTN","FBAAMP",100,0)
 . S FBI=0 F  S FBI=$O(FBMODA(FBI)) Q:'FBI  D
"RTN","FBAAMP",101,0)
 . . S FBMODX=$$MOD^ICPTMOD(FBMODA(FBI),"I",FBDT,1)
"RTN","FBAAMP",102,0)
 . . I '$P(FBMODX,U,7) S FBRET=0 W !,"  CPT Modifier ",$P(FBMODX,U,2)," inactive on date of service."
"RTN","FBAAMP",103,0)
 Q FBRET
"RTN","FBAAMP",104,0)
 ;
"RTN","FBAAMP",105,0)
CHKFS() ; check if fee schedule amount is different on date of service
"RTN","FBAAMP",106,0)
 N FBX,FBRET
"RTN","FBAAMP",107,0)
 S FBRET=1 ; return value - true if date of service allowed
"RTN","FBAAMP",108,0)
 S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBDT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME))
"RTN","FBAAMP",109,0)
 ; issue warning if lesser of claim and fee schedule amount different
"RTN","FBAAMP",110,0)
 I +$S($P(FBX,U)>$G(FBJ):$G(FBJ),1:$P(FBX,U))'=+$S(FBFSAMT>$G(FBJ):$G(FBJ),1:FBFSAMT) D
"RTN","FBAAMP",111,0)
 . W !,"  Warning: The fee schedule amount (",$P(FBX,U),") for this date of service "
"RTN","FBAAMP",112,0)
 . W !,"  differs from the initial fee schedule amount (",FBFSAMT,")."
"RTN","FBAAMP",113,0)
 . I $P(FBX,U)>0,FBK>$P(FBX,U) D
"RTN","FBAAMP",114,0)
 . . W !,"  Amount paid (",FBK,") exceeds the fee schedule amount."
"RTN","FBAAMP",115,0)
 . . I '$D(^XUSEC("FBAASUPERVISOR",DUZ)) D
"RTN","FBAAMP",116,0)
 . . . W !,"  You must be a holder of the 'FBAASUPERVISOR' key in order"
"RTN","FBAAMP",117,0)
 . . . W !,"  to exceed the Fee Schedule."
"RTN","FBAAMP",118,0)
 . . . S FBRET=0
"RTN","FBAAMP",119,0)
 . W:FBRET !,"  You may want to separately process this date of service."
"RTN","FBAAMP",120,0)
 Q FBRET
"RTN","FBAAMP",121,0)
 ;
"RTN","FBAAMP",122,0)
ANCIL ;ENTRY POINT FOR mutiple ancillary payment option
"RTN","FBAAMP",123,0)
 S FBCHCO=1 D ^FBAAMP
"RTN","FBAAMP",124,0)
 K FBCHCO Q
"RTN","FBAAMP1")
0^19^B9709876
"RTN","FBAAMP1",1,0)
FBAAMP1 ;AISC/CMR-MULTIPLE PAYMENT ENTRY ;5/17/1999
"RTN","FBAAMP1",2,0)
 ;;3.5;FEE BASIS;**4,55**;JAN 30, 1995
"RTN","FBAAMP1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAMP1",4,0)
SUSP ;enter suspense data
"RTN","FBAAMP1",5,0)
 S DIR(0)="162.5,9",DIR("A")="Amount Suspended: $",DIR("B")=FBJ-FBK,DIR("?")="Press Return if $ "_(FBJ-FBK)_" is Amount Suspended, otherwise enter correct suspension amount" D ^DIR K DIR
"RTN","FBAAMP1",6,0)
 I $D(DIRUT) W !!,"Invalid entry, enter a number between .01 and 999999" G SUSP
"RTN","FBAAMP1",7,0)
 S FBAAAS=+Y
"RTN","FBAAMP1",8,0)
 I +Y'=(FBJ-FBK) S FBAAAS=+Y W ! S DIR("A")="Is $"_FBAAAS_" correct for Amount Suspended",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAAMP1",9,0)
 G SUSP:'Y
"RTN","FBAAMP1",10,0)
 W !! S DIC="^FBAA(161.27,",DIC(0)="AEQ" D ^DIC I X["^" S FBAAOUT=1 Q
"RTN","FBAAMP1",11,0)
 S FBAASC=+Y
"RTN","FBAAMP1",12,0)
SUSP1 I FBAASC=4 K ^TMP($J,"FBWP") W !!,"Suspension Description: " S DIC="^TMP($J,""FBWP"",",DWLW=80,DWPK=1 D EN^DIWE K DIC,DWLW,DWPK I '$O(^TMP($J,"FBWP",0)) W !!,*7,"Description of Suspense is required." G SUSP1
"RTN","FBAAMP1",13,0)
 Q
"RTN","FBAAMP1",14,0)
HCFA F FBSI=28,30,31,32 S FBHCFA(FBSI)=""
"RTN","FBAAMP1",15,0)
 W ! F FBSI=28,30,31 D  Q:$G(FBAAOUT)
"RTN","FBAAMP1",16,0)
 . F  S DIR(0)="P"_$S(FBSI=28&($$EXTPV^FBAAUTL5(FBPOV)="01"):"O^80",FBSI=28&($$EXTPV^FBAAUTL5(FBPOV)'="01"):"^80",FBSI=30:"^353.1",FBSI=31:"O^353.2")_":EMZ" D HCFA1 Q:$G(FBAAOUT)  Q:FBSI'=28  Q:$$CHKICD9^FBCSV1(+Y,$G(FBMPDT))]""
"RTN","FBAAMP1",17,0)
 Q:$G(FBAAOUT)
"RTN","FBAAMP1",18,0)
 W !
"RTN","FBAAMP1",19,0)
 I $$EXTPV^FBAAUTL5(FBPOV)'="01" D
"RTN","FBAAMP1",20,0)
 . S FBSI=32,DIR(0)="Y",DIR("A")="Service connected condition"
"RTN","FBAAMP1",21,0)
 . S DIR("?")="^W !!,""Respond by answering 'Yes' or 'No'."",! I $G(DFN) W !?1,*7,""Patient:  "",$$NAME^FBCHREQ2(DFN) D DIS^DGRPDB W !!"
"RTN","FBAAMP1",22,0)
 . D HCFA1 I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAAMP1",23,0)
 Q
"RTN","FBAAMP1",24,0)
HCFA1 D ^DIR I $D(DTOUT)!($D(DUOUT)) S FBAAOUT=1 Q
"RTN","FBAAMP1",25,0)
 I Y'=-1 D
"RTN","FBAAMP1",26,0)
 .I DIR(0)["P" S FBHCFA(FBSI)=$P(Y,"^")
"RTN","FBAAMP1",27,0)
 .I DIR(0)="Y" S FBHCFA(FBSI)=$S(Y=1:"Y",1:"N")
"RTN","FBAAMP1",28,0)
 K DIR Q
"RTN","FBAAMP1",29,0)
DESC N FBJ
"RTN","FBAAMP1",30,0)
 I FBAASC=4,$D(^TMP($J,"FBWP",0)) S ^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,1,0)=^(0) F FBJ=1:1 Q:'$D(^TMP($J,"FBWP",FBJ,0))  S ^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,1,FBJ,0)=^(0)
"RTN","FBAAMP1",31,0)
 Q
"RTN","FBAAPAA")
0^2^B4724308
"RTN","FBAAPAA",1,0)
FBAAPAA ;AISC/DMK-ADD/EDIT FEE SCHEDULE ;3/17/2003
"RTN","FBAAPAA",2,0)
 ;;3.5;FEE BASIS;**4,21,55**;JAN 30, 1995
"RTN","FBAAPAA",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAPAA",4,0)
ASK W ! S DIC="^FBAA(163.99,",DIC(0)="AEQLM",DLAYGO=163.99 D ^DIC G END:X=""!(X="^"),ASK:Y<0 S DA=+Y
"RTN","FBAAPAA",5,0)
 W ! S DIE=DIC,DR="[FBAA EDIT SCHEDULE]" D ^DIE G ASK
"RTN","FBAAPAA",6,0)
END K DA,DIC,DIE,DLAYGO,DR,X,Y Q
"RTN","FBAAPAA",7,0)
 ;write CPT & MOD as identifiers
"RTN","FBAAPAA",8,0)
 ; Input: (optional) FBDTSRV - date for Code Set Versioning
"RTN","FBAAPAA",9,0)
WRITE ; if FBDTSRV is not defined then today will be used as a date
"RTN","FBAAPAA",10,0)
 N FBAAFS,FBAACP,FBCPTX,FBI,FBMOD,FBMODLE,FBMODX,FBCPTFL,FBMODFL
"RTN","FBAAPAA",11,0)
 S (FBCPTFL,FBMODFL)=0
"RTN","FBAAPAA",12,0)
 S FBAAFS=$P(^FBAA(163.99,+Y,0),U)
"RTN","FBAAPAA",13,0)
 I +$G(FBDTSRV)=0 N FBDTSRV D
"RTN","FBAAPAA",14,0)
 . N X D NOW^%DTC S FBDTSRV=X
"RTN","FBAAPAA",15,0)
 S FBAACP=$P(FBAAFS,"-")
"RTN","FBAAPAA",16,0)
 S FBMODLE=$P(FBAAFS,"-",2)
"RTN","FBAAPAA",17,0)
 I $X>19 W !
"RTN","FBAAPAA",18,0)
 S FBCPTX=$$CPT^ICPTCOD(FBAACP,$G(FBDTSRV),1)
"RTN","FBAAPAA",19,0)
 I $G(FBDTSRV),+FBCPTX>0,$P(FBCPTX,U,7)=0 S FBCPTFL=1
"RTN","FBAAPAA",20,0)
 W ?20,"CPT: ",$S(FBCPTFL:$E($P(FBCPTX,U,3),1,25),1:$P(FBCPTX,U,3)) ; short name of CPT
"RTN","FBAAPAA",21,0)
 W:FBCPTFL ?50," - INACTIVE on ",$$FMTE^XLFDT(FBDTSRV) ;inactive on FBDTSRV 
"RTN","FBAAPAA",22,0)
 I FBMODLE]"" F FBI=1:1 S FBMOD=$P(FBMODLE,",",FBI) Q:FBMOD=""  D
"RTN","FBAAPAA",23,0)
 . S FBMODX=$$MOD^ICPTMOD(FBMOD,"E",$G(FBDTSRV))
"RTN","FBAAPAA",24,0)
 . ; if modifier data not obtained then try another API to resolve it
"RTN","FBAAPAA",25,0)
 . ; since there can be duplicate modifiers with same external value
"RTN","FBAAPAA",26,0)
 . I $P(FBMODX,U)'>0 D
"RTN","FBAAPAA",27,0)
 . . N FBY
"RTN","FBAAPAA",28,0)
 . . S FBY=$$MODP^ICPTMOD(FBAACP,FBMOD,"E",$G(FBDTSRV))
"RTN","FBAAPAA",29,0)
 . . I $P(FBY,U)>0 S FBMODX=$$MOD^ICPTMOD($P(FBY,U),"I",$G(FBDTSRV))
"RTN","FBAAPAA",30,0)
 . I $G(FBDTSRV),+FBMODX>0,$P(FBMODX,U,7)=0 S FBMODFL=1
"RTN","FBAAPAA",31,0)
 . W !?20,"MOD: ",FBMOD,"  ",$S(FBMODFL:$E($P(FBMODX,U,3),1,20),1:$P(FBMODX,U,3))
"RTN","FBAAPAA",32,0)
 . W:FBMODFL ?50," - INACTIVE on ",$$FMTE^XLFDT(FBDTSRV) ;inactive on FBDTSRV
"RTN","FBAAPAA",33,0)
 Q
"RTN","FBAAPET")
0^20^B22647098
"RTN","FBAAPET",1,0)
FBAAPET ;AISC/DMK-EDIT PAYMENT ;10/31/2001
"RTN","FBAAPET",2,0)
 ;;3.5;FEE BASIS;**4,38,55**;JAN 30, 1995
"RTN","FBAAPET",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAPET",4,0)
 S FBOT=1
"RTN","FBAAPET",5,0)
GETPT I $G(BAT) D
"RTN","FBAAPET",6,0)
 .I '$D(^FBAAC("AC",+BAT)) F I=9,10,11 S $P(^FBAA(161.7,+BAT,0),U,I)=""
"RTN","FBAAPET",7,0)
 .I $D(^FBAAC("AC",+BAT)) D  S $P(^FBAA(161.7,+BAT,0),U,11)=I,$P(^(0),U,9)=$G(FBTOT) K I,FBTOT
"RTN","FBAAPET",8,0)
 ..N J,K,L,M S (I,J,K,L,M,FBTOT)=0
"RTN","FBAAPET",9,0)
 ..F  S J=$O(^FBAAC("AC",+BAT,J)) Q:'J  F  S K=$O(^FBAAC("AC",+BAT,J,K)) Q:'K  F  S L=$O(^FBAAC("AC",+BAT,J,K,L)) Q:'L  F  S M=$O(^FBAAC("AC",+BAT,J,K,L,M)) Q:'M  I $D(^FBAAC(J,1,K,1,L,1,M,0)) S I=I+1,FBTOT=FBTOT+$P(^(0),U,3)
"RTN","FBAAPET",10,0)
 W !! S DIC="^FBAAC(",DIC(0)="AEQM" D ^DIC G END:X="^"!(X=""),GETPT:Y<0 S (DFN,FBDA(3))=+Y
"RTN","FBAAPET",11,0)
 S:'$D(^FBAAC(DFN,1,0)) ^FBAAC(DFN,1,0)="^162.01P^0^0"
"RTN","FBAAPET",12,0)
 S DIC=DIC_DFN_",1,"
"RTN","FBAAPET",13,0)
GETVD W !! S DIC(0)="AEQM" D ^DIC G GETPT:X="^"!(X=""),GETVD:Y<0 S (FBV,FBVD,FBDA(2))=+Y
"RTN","FBAAPET",14,0)
 S:'$D(^FBAAC(DFN,1,FBDA(2),1,0)) ^FBAAC(DFN,1,FBDA(2),1,0)="^162.02DA^0^0"
"RTN","FBAAPET",15,0)
 S DIC=DIC_FBVD_",1,"
"RTN","FBAAPET",16,0)
GETDT S DIC(0)="AEQM",DIC("A")="Date of Service: " D ^DIC K DIC("A") G GETPT:X="^"!(X=""),GETDT:Y<0 S (FBSD,FBSDI,FBDA(1))=+Y,FBAADT=$P(Y,U,2)
"RTN","FBAAPET",17,0)
 S:'$D(^FBAAC(DFN,1,FBDA(2),1,FBDA(1),1,0)) ^FBAAC(DFN,1,FBDA(2),1,FBDA(1),1,0)="^162.03A^0^0"
"RTN","FBAAPET",18,0)
 S FBZ=DIC_FBSD_",1,"
"RTN","FBAAPET",19,0)
SERV S DA(3)=FBDA(3),DA(2)=FBDA(2),DA(1)=FBDA(1)
"RTN","FBAAPET",20,0)
 S DIC("W")="N FBX S FBX=$$MODL^FBAAUTL4(""^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,+Y,""""M"""")"",""E"") W:FBX]"""" ""    CPT Modifier(s): "",FBX Q"
"RTN","FBAAPET",21,0)
 S DIC=FBZ,DIC(0)="AEQMZ" D ^DIC G GETPT:X="^"!(X=""),SERV:Y<0 S (FBSV,FBAACPI,FBDA)=+Y,BAT=$P(Y(0),U,8),FBDUZ=$P(Y(0),U,7),(FBAACP,FBAACP(0))=$P(Y,U,2),K=$P(Y(0),U,3),FBAAPTC=$P(Y(0),U,20),J(0)=$P(Y(0),U,2)
"RTN","FBAAPET",22,0)
 ; set FB1725 true (1) if payment is for a Mill Bill claim
"RTN","FBAAPET",23,0)
 S FB1725=$S($P(Y(0),U,13)["FB583":+$P($G(^FB583(+$P(Y(0),U,13),0)),U,28),1:0)
"RTN","FBAAPET",24,0)
 I FBDUZ'=DUZ&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"Sorry,only the clerk who entered the payment ",!," or a supervisor can edit this payment." G GETPT
"RTN","FBAAPET",25,0)
 S FBAAMM1=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,2)
"RTN","FBAAPET",26,0)
 S FBFSAMT(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,12)
"RTN","FBAAPET",27,0)
 ; determine lesser of original fee schedule amount and amount claimed
"RTN","FBAAPET",28,0)
 S FBAMTPD(0)=$S(FBFSAMT(0)="":J(0),FBFSAMT(0)>J(0):J(0),1:FBFSAMT(0))
"RTN","FBAAPET",29,0)
 S FBMODL=$$MODL^FBAAUTL4("^FBAAC("_FBDA(3)_",1,"_FBDA(2)_",1,"_FBDA(1)_",1,"_FBDA_",""M"")")
"RTN","FBAAPET",30,0)
 G:BAT']"" EDIT
"RTN","FBAAPET",31,0)
 I $G(^FBAA(161.7,BAT,"ST"))]"",$P(^FBAA(161.7,BAT,"ST"),"^")="S"!($P(^FBAA(161.7,BAT,"ST"),"^")="T")&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"Sorry, only the Supervisor can edit a payment once the batch has been released." G GETPT
"RTN","FBAAPET",32,0)
 I $G(^FBAA(161.7,BAT,"ST"))]"",$P(^FBAA(161.7,BAT,"ST"),"^")="V" W !!,*7,"Sorry,you cannot edit a payment once the batch has been Finalized." G GETPT
"RTN","FBAAPET",33,0)
EDIT S DA=FBSV
"RTN","FBAAPET",34,0)
 ;
"RTN","FBAAPET",35,0)
 ; first edit CPT code and modifiers
"RTN","FBAAPET",36,0)
 D CPTM^FBAALU(FBAADT,DFN,FBAACP(0),FBMODL) I '$G(FBGOT) G GETPT
"RTN","FBAAPET",37,0)
 ; if CPT was changed then update file
"RTN","FBAAPET",38,0)
 I FBAACP'=FBAACP(0) D  I FBAACP="@" G GETPT
"RTN","FBAAPET",39,0)
 . N FBIENS,FBFDA
"RTN","FBAAPET",40,0)
 . S FBIENS=FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_","
"RTN","FBAAPET",41,0)
 . S FBFDA(162.03,FBIENS,.01)=FBAACP
"RTN","FBAAPET",42,0)
 . D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBAAPET",43,0)
 ; if modifiers changed then update file
"RTN","FBAAPET",44,0)
 I FBMODL'=$$MODL^FBAAUTL4("FBMODA") D REPMOD^FBAAUTL4(FBDA(3),FBDA(2),FBDA(1),FBDA)
"RTN","FBAAPET",45,0)
 ;
"RTN","FBAAPET",46,0)
 ; now edit remaining fields
"RTN","FBAAPET",47,0)
 S DIE("NO^")=""
"RTN","FBAAPET",48,0)
 S DR="42R;S FBZIP=X;S:$$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) Y=""@2"";43///@;S FBTIME=X;S Y=""@3"";@2;43R;S FBTIME=X;@3"
"RTN","FBAAPET",49,0)
 S DR(1,162.03,1)="S FBAAMM=$S(FBAAPTC=""R"":"""",1:1);D PPT^FBAACO1(FBAAMM1);34///@;34////^S X=FBAAMM1;30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBAAPET",50,0)
 S DR(1,162.03,2)="D FEEDT^FBAACO3;44///@;44///^S X=FBFSAMT;45///@;45///^S X=FBFSUSD;S:FBAMTPD'>0!(FBAMTPD=FBAMTPD(0)) Y=""@4"";2///^S X=FBAMTPD;@4;2//^S X=FBAMTPD;D CHKIT^FBAACO3;S K=X"
"RTN","FBAAPET",51,0)
 S DR(1,162.03,3)="3////^S X=$S(J-K:J-K,1:"""");I X S Y=""@11"";4////@;S Y=""@5"";@11;3R;4R;S:X'=4 Y=""@5"";22"
"RTN","FBAAPET",52,0)
 S DR(1,162.03,4)="@5;K DIE(""NO^"");W !,""Exit ('^') allowed now"";26;S PRC(""SITE"")=X;8;13;Q;33"
"RTN","FBAAPET",53,0)
 S DR(1,162.03,5)="15;17;16;S:X=1 Y=""@1"";@6;28R;S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@6"";31;32R;S Y="""";@1;28;I X]"""" S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@1"";31"
"RTN","FBAAPET",54,0)
 S DIE=FBZ D ^DIE K FBSV W !! G SERV
"RTN","FBAAPET",55,0)
END K DR,DIC,DIE,X,DFN,FBOT,FBVD,FBSD,BAT,FBAADT,FBSV,DA,FBDA,FBZ,FBDUZ,FBAACP,FBFY,FY,FBAMTPD,J,K,Y,ZZ,PRC,FBHOLDX,FBV,FBSDI,FBAACPI
"RTN","FBAAPET",56,0)
 K FBFSAMT,FBFSUSD,FBMODA,FBZIP,FBTIME,FBHCFA(30),FBAAPTC,FB1725
"RTN","FBAAPET",57,0)
 Q
"RTN","FBAAV0")
0^4^B25963813
"RTN","FBAAV0",1,0)
FBAAV0 ;AISC/GRR-ELECTRONICALLY TRANSMIT FEE DATA ;6/1/1999
"RTN","FBAAV0",2,0)
 ;;3.5;FEE BASIS;**3,4,55**;JAN 30, 1995
"RTN","FBAAV0",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAV0",4,0)
 K ^TMP($J,"FBAABATCH"),^TMP($J,"FBVADAT") D DT^DICRW
"RTN","FBAAV0",5,0)
 I '$D(^FBAA(161.7,"AC","S")),'$D(^FBAA(161.7,"AC","R")),'$D(^FBAA(161.25,"AE")),$S('$D(^FBAA(161.26,"AC","P")):1,$O(^FBAA(161.26,"AC","P",0))'>0:1,1:0) W !,*7,"There are no transactions requiring transmission",*7 Q
"RTN","FBAAV0",6,0)
 W !!,"This option will transmit all Batches and MRA's ready to be transmitted",!,"to Austin"
"RTN","FBAAV0",7,0)
RD W !! S DIR(0)="Y",DIR("A")="Are you sure you want to continue",DIR("B")="No" D ^DIR K DIR G END:'Y
"RTN","FBAAV0",8,0)
 L +^FBAA(161.7,"AC"):0 G:'$T LOCK^FBAAUTL1
"RTN","FBAAV0",9,0)
 W !!,"The following Batches will be transmitted: " F FBSTAT="S","R" F J=0:0 S J=$O(^FBAA(161.7,"AC",FBSTAT,J)) Q:J'>0  S FBATCH=$G(^FBAA(161.7,J,0)) D
"RTN","FBAAV0",10,0)
 .Q:'+FBATCH
"RTN","FBAAV0",11,0)
 .I (FBSTAT="S"&($P(FBATCH,U,15)="Y"))!(+$P(FBATCH,U,9)) S ^TMP($J,"FBAABATCH",J)="" W !,+FBATCH
"RTN","FBAAV0",12,0)
RTRAN ;Entry from Re-transmit MRA routine
"RTN","FBAAV0",13,0)
 D ADDRESS^FBAAV01 G END:VATERR K VAT
"RTN","FBAAV0",14,0)
 D WAIT^DICD,STATION^FBAAUTL,HD^FBAAUTL I $D(FB("ERROR")) G END
"RTN","FBAAV0",15,0)
 S TOTSTR=0,$P(PAD," ",200)=" "
"RTN","FBAAV0",16,0)
 D ^FBAAV1:$D(^FBAA(161.25,"AE"))
"RTN","FBAAV0",17,0)
 D ^FBAAV4:$D(^FBAA(161.26,"AC","P"))
"RTN","FBAAV0",18,0)
 F J=0:0 S J=$O(^TMP($J,"FBAABATCH",J)) Q:J'>0  I $D(^FBAA(161.7,J,0)) S Y(0)=^(0) D SET1,DET:FBAABT="B3",DETP^FBAAV2:FBAABT="B5",DETT^FBAAV3:FBAABT="B2",^FBAAV5:FBAABT="B9"
"RTN","FBAAV0",19,0)
END L -^FBAA(161.7,"AC") D KILL^FBAAV1 Q
"RTN","FBAAV0",20,0)
SET1 S FBAABN=$P(Y(0),"^",1),FBAABN=$E("00000",$L(FBAABN)+1,5)_FBAABN,FBAAON=$E($P(Y(0),"^",2),3,6),FBAACD=$E(DT,4,7)_$E(DT,2,3),FBAACP=$E($P(Y(0),"^",2),1,2)
"RTN","FBAAV0",21,0)
 S FBAABT=$P(Y(0),"^",3),FBAAAP=$P(Y(0),"^",9)+.00001,FBAAAP=$P(FBAAAP,".",1)_$E($P(FBAAAP,".",2),1,2)
"RTN","FBAAV0",22,0)
 S FBSTAT=$P(^FBAA(161.7,J,"ST"),"^"),FBCHB=$P(Y(0),"^",15),FBEXMPT=$P(Y(0),"^",18),FBAAAP=$E("0000000000",$L(FBAAAP)+1,10)_FBAAAP
"RTN","FBAAV0",23,0)
 S X=$$SUB^FBAAUTL5(+$P(Y(0),U,8)_"-"_$P(Y(0),U,2))
"RTN","FBAAV0",24,0)
 S FBAASN=$$LJ^XLFSTR($S(X]"":X,1:FBAASN),6," ")
"RTN","FBAAV0",25,0)
 I FBSTAT="R"!(FBSTAT="S"&(FBCHB'["Y"))!(FBSTAT="S"&($G(FBEXMPT)="Y")) S FBSTR=FBHD_$S(FBAABT="B2":"BT",1:FBAABT)_FBAACD_FBAASN_FBAABN_FBAAAP_FBAACP_" $"
"RTN","FBAAV0",26,0)
 Q
"RTN","FBAAV0",27,0)
DET ;entry point to get data for outpatient (B3)
"RTN","FBAAV0",28,0)
 S FBTXT=0
"RTN","FBAAV0",29,0)
 D CKB3V^FBAAV01 I $G(FBERR) K FBERR Q
"RTN","FBAAV0",30,0)
 F K=0:0 S K=$O(^FBAAC("AC",J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("AC",J,K,L)) Q:L'>0  F M=0:0 S M=$O(^FBAAC("AC",J,K,L,M)) Q:M'>0  F N=0:0 S N=$O(^FBAAC("AC",J,K,L,M,N)) Q:N'>0  S Y(0)=$G(^FBAAC(K,1,L,1,M,1,N,0)) I Y(0)]"",+$P(Y(0),U,3) D
"RTN","FBAAV0",31,0)
 .N FBDTSR1 S FBDTSR1=+$G(^FBAAC(K,1,L,1,M,0))
"RTN","FBAAV0",32,0)
 .S FBPICN=K_U_L_U_M_U_N
"RTN","FBAAV0",33,0)
 .S FBY=$G(^FBAAC(K,1,L,1,M,1,N,2))
"RTN","FBAAV0",34,0)
 .I 'FBTXT S FBTXT=1 D NEWMSG^FBAAV01,STORE^FBAAV01,UPD
"RTN","FBAAV0",35,0)
 .D GOT
"RTN","FBAAV0",36,0)
 D:FBTXT XMIT^FBAAV01 Q
"RTN","FBAAV0",37,0)
GOT S FBPAYT=$P(Y(0),"^",20),FBPAYT=$S(FBPAYT]"":FBPAYT,1:"V"),FBVID=$P($G(^FBAAV(L,0)),U,2)
"RTN","FBAAV0",38,0)
 D POV^FBAAUTL2
"RTN","FBAAV0",39,0)
 S POV=$S(POV']"":"",POV="A":6,POV="B":7,POV="C":8,POV="D":9,POV="E":10,1:POV),POV=$S(POV']"":99,$D(^FBAA(161.82,POV,0)):$P(^(0),"^",3),1:99),FBPOV=POV
"RTN","FBAAV0",40,0)
 S FBCPT=$$CPT^FBAAUTL4($P(Y(0),"^")),FBCPT=$S($L(FBCPT)=5:FBCPT,1:"     "),FBPSA=$$PSA^FBAAV5(+$P(Y(0),U,12),+FBAASN) I $L(+FBPSA)'=3 S FBPSA=999
"RTN","FBAAV0",41,0)
 S FBVID=FBVID_$E(PAD,$L(FBVID)+1,11)
"RTN","FBAAV0",42,0)
 S FBTT=$S(FBTT]"":FBTT,1:1),FBPATT=$P(Y(0),"^",17),FBPATT=$S(FBPATT]"":FBPATT,1:10),FBTD=$P($G(^FBAAC(K,1,L,1,M,0)),"^")
"RTN","FBAAV0",43,0)
 S FBTD=$S(FBTD]"":$E(FBTD,4,7)_$E(FBTD,2,3),1:"      "),FBSUSP=$P(Y(0),"^",5),FBSUSP=$S(FBSUSP]"":FBSUSP,1:" "),FBAP=$P(Y(0),"^",3)+.00001,FBAP=$P(FBAP,".",1)_$E($P(FBAP,".",2),1,2),FBAP=$E("00000000",$L(FBAP)+1,8)_FBAP
"RTN","FBAAV0",44,0)
 S FBPOS=+$P(Y(0),"^",25),FBPOS=$S(FBPOS:$P(^IBE(353.1,FBPOS,0),"^"),1:"  "),FBHCFA=+$P(Y(0),"^",26),FBHCFA=$S(FBHCFA:$P(^IBE(353.2,FBHCFA,0),"^"),1:""),FBHCFA=$E(PAD,$L(FBHCFA)+1,2)_FBHCFA
"RTN","FBAAV0",45,0)
 S FBVTOS=+$P(Y(0),"^",24),FBVTOS=$S(FBVTOS:$P(^FBAA(163.85,FBVTOS,0),"^",2),1:"  "),FBPD=+$P(Y(0),"^",23),FBPD=$S(FBPD:$$ICD9^FBCSV1(FBPD,$G(FBDTSR1)),1:""),FBPD=$E(PAD,$L(FBPD)+1,7)_FBPD
"RTN","FBAAV0",46,0)
 S VAPA("P")="",FBSUSP=$S(FBSUSP=" ":" ",$D(^FBAA(161.27,+FBSUSP,0)):$P(^(0),"^"),1:" "),FBINVN=$P(Y(0),"^",16),DFN=K,FBDIN=$P(Y(0),"^",15),Y(0)=$G(^DPT(+K,0)) Q:Y(0)']""  D PAT^FBAAUTL2,ADD^VADPT
"RTN","FBAAV0",47,0)
 S FBST=$S($P(VAPA(5),"^")="":"  ",$D(^DIC(5,$P(VAPA(5),"^"),0)):$P(^(0),"^",2),1:"  "),FBCTY=$S($P(VAPA(7),"^",1)="":"   ",FBST="  ":"   ",$D(^DIC(5,$P(VAPA(5),"^"),1,$P(VAPA(7),"^"),0)):$P(^(0),"^",3),1:"   ")
"RTN","FBAAV0",48,0)
 S FBZIP=$S('+$G(VAPA(11)):VAPA(6),+VAPA(11):$P(VAPA(11),U),1:VAPA(6)),FBZIP=$TR(FBZIP,"-","")_$E("000000000",$L(FBZIP)+1,9)
"RTN","FBAAV0",49,0)
 I $L(FBCTY)'=3 S FBCTY=$E("000",$L(FBCTY)+1,3)_FBCTY
"RTN","FBAAV0",50,0)
 S FBDIN=$E(FBDIN,4,7)_$E(FBDIN,2,3),FBINVN=$E("000000000",$L(FBINVN)+1,9)_FBINVN,FBFLNAM=$E(FBFLNAM,1,11)
"RTN","FBAAV0",51,0)
 I $E(FBFLNAM,11)?1P S FBFLNAM=$E(FBFLNAM,1,10)_" "
"RTN","FBAAV0",52,0)
 S:FBPAYT="R" FBVID=$E(PAD,1,11)
"RTN","FBAAV0",53,0)
 D STRING^FBAAV01
"RTN","FBAAV0",54,0)
 Q
"RTN","FBAAV0",55,0)
UPD N Y S DA=J,(DIC,DIE)="^FBAA(161.7,",DR="11////^S X=""T"";12////^S X=DT" D ^DIE Q
"RTN","FBAAV0",56,0)
STORE D STORE^FBAAV01 Q
"RTN","FBAAV0",57,0)
 ;
"RTN","FBAAV5")
0^5^B18537209
"RTN","FBAAV5",1,0)
FBAAV5 ;AISC/GRR-CREATE TRANSACTIONS FOR CH/CNH PAYMENTS; 25APR89
"RTN","FBAAV5",2,0)
 ;;3.5;FEE BASIS;**3,55**;JAN 30, 1995
"RTN","FBAAV5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAV5",4,0)
 D CKB9V^FBAAV01 I $G(FBERR) K FBERR Q
"RTN","FBAAV5",5,0)
 G:FBSTAT="S"&(FBCHB="Y")&($P(Y(0),"^",18)'="Y") ^FBAAV6
"RTN","FBAAV5",6,0)
DETCH S FBTXT=0
"RTN","FBAAV5",7,0)
 F K=0:0 S K=$O(^FBAAI("AC",J,K)) Q:K'>0  S Y(0)=$G(^FBAAI(K,0)),Y(2)=$G(^(2)) I Y(0)]"",+$P(Y(0),U,9) D
"RTN","FBAAV5",8,0)
 .S FBPICN=K
"RTN","FBAAV5",9,0)
 .S FBY=$S($P(Y(2),U,2):$P(Y(2),U,2),1:$P(Y(0),U,2))_U_+$P(Y(2),U,3)
"RTN","FBAAV5",10,0)
 .I 'FBTXT S FBTXT=1 D NEWMSG^FBAAV01,STORE^FBAAV01,UPD^FBAAV0
"RTN","FBAAV5",11,0)
 .D GOT
"RTN","FBAAV5",12,0)
 D:FBTXT XMIT^FBAAV01 Q
"RTN","FBAAV5",13,0)
GOT I '$L($G(FBAASN)) D STATION^FBAAUTL
"RTN","FBAAV5",14,0)
 S FBPSA=$$PSA(+$P(Y(0),U,20),+$G(FBAASN)) I $L(+FBPSA)'=3 S FBPSA=999
"RTN","FBAAV5",15,0)
 S FBPAYT=$P(Y(0),"^",13),FBPAYT=$S(FBPAYT]"":FBPAYT,1:"V"),L=$P(Y(0),"^",3),FBVID=$S($D(^FBAAV(L,0)):$P(^(0),"^",2),1:""),FBVMID=$S($D(^FBAAV(L,0)):$P(^(0),"^",17),1:""),FBVMID=$E(PAD,$L(FBVMID)+1,6)_FBVMID,POV=$P(Y(0),"^",18)
"RTN","FBAAV5",16,0)
 S POV=$S(POV']"":"",POV="A":6,POV="B":7,POV="C":8,POV="D":9,POV="E":10,1:POV),POV=$S(POV']"":40,$D(^FBAA(161.82,POV,0)):$P(^(0),"^",3),1:40),FBPOV=POV
"RTN","FBAAV5",17,0)
 S FBVID=FBVID_$E(PAD,$L(FBVID)+1,11)
"RTN","FBAAV5",18,0)
 S FBPATT=$P(Y(0),"^",19),FBPATT=$S(FBPATT]"":FBPATT,1:10),FBFTD=$P(Y(0),"^",6),FBTTD=$P(Y(0),"^",7),FBFTD=$S(FBFTD]"":$E(FBFTD,4,7)_$E(FBFTD,2,3),1:"      ")
"RTN","FBAAV5",19,0)
 S FBTTD=$S(FBTTD]"":$E(FBTTD,4,7)_$E(FBTTD,2,3),1:"      "),FBSUSP=$P(Y(0),"^",11),FBSUSP=$S(FBSUSP="":" ",$D(^FBAA(161.27,FBSUSP,0)):$P(^(0),"^",1),1:" ")
"RTN","FBAAV5",20,0)
 S FBINVN=$P(Y(0),"^",1),FBDIN=$P(Y(0),"^",2),DFN=$P(Y(0),"^",4),FBDIN=$E(FBDIN,4,7)_$E(FBDIN,2,3),FBINVN=$E("000000000",$L(FBINVN)+1,9)_FBINVN
"RTN","FBAAV5",21,0)
 S:FBPAYT="R" FBVID=$E(PAD,1,11) S FBAP=$P(Y(0),"^",9)+.00001,FBAP=$P(FBAP,".",1)_$E($P(FBAP,".",2),1,2),FBAP=$E("00000000",$L(FBAP)+1,8)_FBAP
"RTN","FBAAV5",22,0)
 S FBAC=$P(Y(0),"^",8)+.00001,FBAC=$P(FBAC,".",1)_$E($P(FBAC,".",2),1,2),FBAC=$E("00000000",$L(FBAC)+1,8)_FBAC,FBPA=$P(Y(0),"^",26)+.00001,FBPA=$P(FBPA,".",1)_$E($P(FBPA,".",2),1,2),FBPA=$E("00000000",$L(FBPA)+1,8)_FBPA
"RTN","FBAAV5",23,0)
 S FBDRG=$P(Y(0),"^",24),FBDRG=$E(PAD,$L(FBDRG)+1,4)_FBDRG
"RTN","FBAAV5",24,0)
 K FBDX,FBPRC F I=1:1:5 S (FBDX(I),FBPRC(I))="       "
"RTN","FBAAV5",25,0)
 I $D(^FBAAI(K,"DX")) S Y("DX")=^("DX") F M=1:1:5 Q:$P(Y("DX"),"^",M)=""  S FBDX(M)=$$SPACES^FBCSV1($$ICD9^FBCSV1(+$P(Y("DX"),"^",M),$P($G(Y(0)),"^",6)),7) I $L(FBDX(M))<7 S FBDX(M)=$E(PAD,$L(FBDX(M))+1,7)_FBDX(M)
"RTN","FBAAV5",26,0)
 I $D(^FBAAI(K,"PROC")) S Y("PROC")=^("PROC") F M=1:1:5 Q:$P(Y("PROC"),"^",M)=""  S FBPRC(M)=$$SPACES^FBCSV1($$ICD0^FBCSV1($P(Y("PROC"),"^",M),$P($G(Y(0)),"^",6)),7) I $L(FBPRC(M))<7 S FBPRC(M)=$E("       ",$L(FBPRC(M))+1,7)_FBPRC(M)
"RTN","FBAAV5",27,0)
 S VAPA("P")="",Y(0)=$S($D(^DPT(DFN,0)):^(0),1:"") D PAT^FBAAUTL2,ADD^VADPT
"RTN","FBAAV5",28,0)
 S FBST=$S($P(VAPA(5),"^",1)="":"  ",$D(^DIC(5,$P(VAPA(5),"^",1),0)):$P(^(0),"^",2),1:"  "),FBCTY=$S($P(VAPA(7),"^",1)="":"   ",FBST="  ":"   ",$D(^DIC(5,$P(VAPA(5),"^",1),1,$P(VAPA(7),"^",1),0)):$P(^(0),"^",3),1:"   ")
"RTN","FBAAV5",29,0)
 I $L(FBCTY)'=3 S FBCTY=$E("000",$L(FBCTY)+1,3)_FBCTY
"RTN","FBAAV5",30,0)
 S FBZIP=$S('+$G(VAPA(11)):VAPA(6),+VAPA(11):$P(VAPA(11),U),1:VAPA(6)),FBZIP=$TR(FBZIP,"-","")_$E("000000000",$L(FBZIP)+1,9),FBFLNAM=$E(FBFLNAM,1,11)
"RTN","FBAAV5",31,0)
 I $E(FBFLNAM,11)?1P S FBFLNAM=$E(FBFLNAM,1,10)_" "
"RTN","FBAAV5",32,0)
 S FBSTR=9_FBAASN_FBSSN_FBPAYT_FBFI_FBMI_FBFLNAM_FBVID_"  "_FBAP_FBAAON_FBSUSP_FBPOV_FBPATT_FBFTD_FBTTD_FBDIN_FBINVN_FBVMID_FBST_FBCTY_FBZIP_FBPSA_$P(FBY,U,2)_$E(PAD,1,12)
"RTN","FBAAV5",33,0)
 F I=1:1:5 S FBSTR=FBSTR_FBDX(I)
"RTN","FBAAV5",34,0)
 I '$$VER5^FBAAUTL3() S FBSTR=FBSTR_$E(PAD,1,29)
"RTN","FBAAV5",35,0)
 I $$VER5^FBAAUTL3 S FBSTR=FBSTR_$$PADZ^FBAAV01(FBPICN,23)_$$AUSDT^FBAAV3(+FBY)
"RTN","FBAAV5",36,0)
 F I=1:1:5 S FBSTR=FBSTR_FBPRC(I)
"RTN","FBAAV5",37,0)
 S FBSTR=FBSTR_FBAC_FBPA_FBDRG_" "_"$"
"RTN","FBAAV5",38,0)
 D STORE^FBAAV01 K FBY,FBPICN
"RTN","FBAAV5",39,0)
 Q
"RTN","FBAAV5",40,0)
 ;
"RTN","FBAAV5",41,0)
PSA(X,Y) ;call to set default Primary Service Area (PSA)
"RTN","FBAAV5",42,0)
 ;to send to Austin.
"RTN","FBAAV5",43,0)
 ;X = pointer to the institution file
"RTN","FBAAV5",44,0)
 ;Y = default if unable to determine station number in file 4
"RTN","FBAAV5",45,0)
 ;call returns the 3 digit station number only
"RTN","FBAAV5",46,0)
 ;if Y undef return '0'
"RTN","FBAAV5",47,0)
 I '$G(Y) S Y=0
"RTN","FBAAV5",48,0)
 Q $S('X:+Y,$E($P($G(^DIC(4,+X,99)),U),1,3)'?3N:+Y,1:$E($P($G(^(99)),U),1,3))
"RTN","FBAAV6")
0^6^B18680215
"RTN","FBAAV6",1,0)
FBAAV6 ;AISC/GRR-CREATE TRANSACTIONS TO SEND TO PRICER SYSTEM ;4/28/93  10:59
"RTN","FBAAV6",2,0)
 ;;3.5;FEE BASIS;**55**;JAN 30, 1995
"RTN","FBAAV6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAV6",4,0)
 S FBFLAG=1,FBTXT=0
"RTN","FBAAV6",5,0)
 S FBSTAT="P",FBJ=J D UPDT^FBAAUTL2 S J=FBJ F K=0:0 S K=$O(^FBAAI("AC",J,K)) Q:K'>0  S Y(0)=$G(^FBAAI(K,0)) I Y(0)]"" D
"RTN","FBAAV6",6,0)
 .N FBDTSR1 S FBDTSR1=$P($G(Y(0)),"^",6)
"RTN","FBAAV6",7,0)
 .I 'FBTXT S FBTXT=1 D NEWMSG^FBAAV01
"RTN","FBAAV6",8,0)
 .D GOT
"RTN","FBAAV6",9,0)
 D:FBTXT XMIT^FBAAV01 K FBFLAG Q
"RTN","FBAAV6",10,0)
GOT S FBPAYT=$P(Y(0),"^",13),FBPAYT=$S(FBPAYT]"":$S(FBPAYT="R":"P",1:FBPAYT),1:"V"),FBVID=$P(Y(0),"^",3),FBVEN=FBVID I FBVID]"" S FBVID=$S($D(^FBAAV(FBVID,0)):$P(^(0),"^",17),1:$E(PAD,1,6))
"RTN","FBAAV6",11,0)
 S:FBVID']"" FBVID=$E(PAD,1,6)
"RTN","FBAAV6",12,0)
 S FB7078=$P(Y(0),"^",5) I FB7078]"" D
"RTN","FBAAV6",13,0)
 .I FB7078["FB7078(",$D(^FB7078(+FB7078,0)) S FBFNY=^FB7078(+FB7078,0),FBFDT=$S($P(FBFNY,"^",15):$P(FBFNY,"^",15),1:$P(FBFNY,"^",4)),FBTDT=$S($P(FBFNY,"^",16):$P(FBFNY,"^",16),1:$P(FBFNY,"^",5))
"RTN","FBAAV6",14,0)
 .I FB7078["FB583(",$D(^FB583(+FB7078,0)) S FBFNY=^FB583(+FB7078,0),FBFDT=$S($P(FBFNY,"^",5)]"":$P(FBFNY,"^",5),1:$P(FBFNY,"^",13)),FBTDT=$S($P(FBFNY,"^",6)]"":$P(FBFNY,"^",6),1:$P(FBFNY,"^",14))
"RTN","FBAAV6",15,0)
 S X1=FBTDT,X2=FBFDT D ^%DTC S FBLOS=$S(X<1:1,1:X),FBFDT=$E(FBFDT,4,7)_($E(FBFDT,1,3)+1700)
"RTN","FBAAV6",16,0)
 S FBTDT=$E(FBTDT,4,7)_($E(FBTDT,1,3)+1700),FBLOS=$E("000",$L(FBLOS)+1,3)_FBLOS,FBRESUB=+$P(Y(0),"^",25)
"RTN","FBAAV6",17,0)
 S FBDISP=$P(Y(0),"^",21) I FBDISP]"" S FBDISP=$S($D(^FBAA(162.6,FBDISP,0)):$P(^(0),"^",2),1:"00")
"RTN","FBAAV6",18,0)
 S FBDISP=$E("00",$L(FBDISP)+1,2)_FBDISP,FBBILL=$P(Y(0),"^",22)+.00001,FBBILL=$P(FBBILL,".",1)_$E($P(FBBILL,".",2),1,2),FBBILL=$E("00000000",$L(FBBILL)+1,8)_FBBILL
"RTN","FBAAV6",19,0)
 S FBCLAIM=$P(Y(0),"^",8)+.00001,FBCLAIM=$P(FBCLAIM,".",1)_$E($P(FBCLAIM,".",2),1,2),FBCLAIM=$E("00000000",$L(FBCLAIM)+1,8)_FBCLAIM
"RTN","FBAAV6",20,0)
 S FBSTAT=$S(FBVEN']"":"",$D(^FBAAV(FBVEN,0)):$P(^(0),"^",5),1:"")
"RTN","FBAAV6",21,0)
 S FBSTABR=$S(FBSTAT']"":"  ",$D(^DIC(5,FBSTAT,0)):$P(^(0),"^",2),1:"  "),FBSTABR=$E("  ",$L(FBSTABR)+1,2)_FBSTABR,FBAUTH=""
"RTN","FBAAV6",22,0)
 I FB7078]"" S FBAUTH=$S(FB7078["FB583(":" ",$D(^FB7078(+FB7078,0)):$P(^(0),"^",6),1:" ")
"RTN","FBAAV6",23,0)
 S FBAUTH=$$AUTH(FBAUTH)
"RTN","FBAAV6",24,0)
 S DFN=+$P(Y(0),"^",4),FBMED=$P(Y(0),"^",23),FBMED=$S(FBMED="":"N",1:FBMED),Y(0)=$G(^DPT(DFN,0)) D PAT^FBAAUTL2 S FBLNAM=$E(FBFLNAM,1,12),FBSSN=$E(FBSSN,10)_$E(FBSSN,1,9)_" "
"RTN","FBAAV6",25,0)
 K FBDX,FBPRC F I=1:1:5 S (FBDX(I),FBPRC(I))="       "
"RTN","FBAAV6",26,0)
 I '$D(^FBAAI(K,"DX")) G OVR
"RTN","FBAAV6",27,0)
 S Y("DX")=^("DX") F M=1:1:5 Q:$P(Y("DX"),"^",M)=""  S FBDX(M)=$$EV^FBCSV1($$ICD9^FBCSV1($P(Y("DX"),"^",M),$G(FBDTSR1)),FBDX(M)),FBDX(M)=$S(FBDX(M)'[".":FBDX(M),1:$P(FBDX(M),".",1)_$P(FBDX(M),".",2)),FBDX(M)=FBDX(M)_$E(PAD,$L(FBDX(M))+1,7)
"RTN","FBAAV6",28,0)
OVR I '$D(^FBAAI(K,"PROC")) G OVR2
"RTN","FBAAV6",29,0)
 S Y("PROC")=^("PROC") F M=1:1:3 Q:$P(Y("PROC"),"^",M)=""  S FBPRC(M)=$$EV^FBCSV1($$ICD0^FBCSV1($P(Y("PROC"),"^",M),$G(FBDTSR1)),FBPRC(M)) D MORE
"RTN","FBAAV6",30,0)
OVR2 S FBPART1=FBSSN_FBFDT_FBAASN
"RTN","FBAAV6",31,0)
 S FBSTR=FBPART1_FBRESUB_"1"_FBLNAM_FBFI_FBMI_FBSEX_FBDOB_FBLOS_FBDISP_FBBILL_FBCLAIM_FBAUTH_FBPAYT_FBAACP_FBAAON_"Y" D STORE
"RTN","FBAAV6",32,0)
 S FBSTR=FBPART1_FBRESUB_"2"_FBVID_FBMED_$E(PAD,1,29)_FBTDT_FBSTABR_FBDX(1) D STORE
"RTN","FBAAV6",33,0)
 S FBSTR=FBPART1_FBRESUB_"3"_FBDX(2)_FBDX(3)_FBDX(4)_FBDX(5)_FBPRC(1)_FBPRC(2)_FBPRC(3)_"    " D STORE
"RTN","FBAAV6",34,0)
 Q
"RTN","FBAAV6",35,0)
STORE D STORE^FBAAV01 ;S FBLN=FBLN+1,^XMB(3.9,FBXMZ,2,FBLN,0)=FBSTR ;,^TMP($J,"FBPRICER",FBCN3,1,FBCN4,0)=FBSTR
"RTN","FBAAV6",36,0)
 Q
"RTN","FBAAV6",37,0)
MORE S FBPRC(M)=$S(FBPRC(M)'[".":FBPRC(M),1:$P(FBPRC(M),".",1)_$P(FBPRC(M),".",2)),FBPRC(M)=FBPRC(M)_$E(PAD,$L(FBPRC(M))+1,7)
"RTN","FBAAV6",38,0)
 Q
"RTN","FBAAV6",39,0)
AUTH(X) ;Function call to provide the Admitting Regulation.
"RTN","FBAAV6",40,0)
 ;X is equal to the internal entry number of the VA Admitting Reg file
"RTN","FBAAV6",41,0)
 ;User is returned with an alpha dependent on the Admitting Reg chosen
"RTN","FBAAV6",42,0)
 N CFR,FBCFR
"RTN","FBAAV6",43,0)
 S CFR=$P($G(^DIC(43.4,+X,0)),"^",3) I '$G(CFR) Q "A"
"RTN","FBAAV6",44,0)
 S FBCFR=$S(CFR="17.50b(a)(1)(i)":"A",CFR="17.50b(a)(1)(iii)":"B",CFR="17.50b(a)(1)(iv)":"C",CFR="17.50b(a)(3)":"H",CFR="17.50b(a)(4)":"D",CFR="17.50b(a)(5)":"E",CFR="17.50b(a)(6)":"F",CFR="17.50b(a)(8)":"G",1:"")
"RTN","FBAAV6",45,0)
 I FBCFR="" S FBCFR=$S(CFR="17.50b(a)(9)":"I",CFR="17.80(a)(i)":"L",CFR="17.80(a)(iii)":"J",1:"A")
"RTN","FBAAV6",46,0)
 Q FBCFR
"RTN","FBCHEAP")
0^21^B16008349
"RTN","FBCHEAP",1,0)
FBCHEAP ;AISC/DMK-ENTER AMOUNT PAID FROM PRICER ;11/15/2001
"RTN","FBCHEAP",2,0)
 ;;3.5;FEE BASIS;**38,55**;JAN 30, 1995
"RTN","FBCHEAP",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBCHEAP",4,0)
DIC W ! S DIC="^FBAA(161.7,",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,15)=""Y""&($G(^(""ST""))=""P"")"_$S($D(^XUSEC("FBAASUPERVISOR",DUZ)):"",1:"&($P(^(0),U,5)=DUZ)") D ^DIC
"RTN","FBCHEAP",5,0)
 G END:X="^"!(X=""),DIC:Y<0 S FBN=+Y,FBN(0)=Y(0)
"RTN","FBCHEAP",6,0)
ASK S DIR(0)="Y",DIR("A")="Would you like to reject any invoices from the pricer",DIR("B")="NO" D ^DIR K DIR G END:$D(DIRUT),REJECT:Y
"RTN","FBCHEAP",7,0)
DIC1 W !! S DIC="^FBAAI(",DIC(0)="AEQMZ",DIC("A")="Select Patient: ",D="D",DIC("S")="I $P(^(0),U,17)=FBN",DIC("W")="W ?25,$S($D(^DPT($P(^(0),U,4),0)):$P(^(0),U),1:"""")" D ^DIC S DIE=DIC K DIC,D G END:X="^",DIC:X=""!(Y<0)
"RTN","FBCHEAP",8,0)
 S (DA,FBI)=+Y,FBI(0)=Y(0) G END:'$D(^FBAAI(FBI,0))
"RTN","FBCHEAP",9,0)
DISP S FBLISTC="" D HOME^%ZIS,START^FBCHDI2
"RTN","FBCHEAP",10,0)
 W !! S FBJ=$P(FBI(0),"^",8)
"RTN","FBCHEAP",11,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBCHEAP",12,0)
 S FB1725=$S($P(FBI(0),U,5)["FB583":+$P($G(^FB583(+$P(FBI(0),U,5),0)),U,28),1:0)
"RTN","FBCHEAP",13,0)
 S DR="26;S FBPAMT=X;W:FB1725 !?2,""**Payment is for emergency treatment under 38 U.S.C. 1725."";W:FB1725&($G(FBPAMT)>0) !?2,""  70% of Pricer Amount = ""_$J(.7*FBPAMT,0,2)"
"RTN","FBCHEAP",14,0)
 S DR(1,162.5,1)="8;S FBK=X;S:(FBJ-FBK)'>0 Y=24;9//^S X=$S(FBJ-FBK:FBJ-FBK,1:"""");S:'X Y=24;10;S:X'=4 Y=24;18;@20;24R;S:$$INPICD^FBCSV1(X,$G(DA),$P($G(FBIN),""^"",6)) Y=""@20""",DIE("NO^")="" D ^DIE K DIE("NO^")
"RTN","FBCHEAP",15,0)
 G END:$D(DIRUT)
"RTN","FBCHEAP",16,0)
 D TOT S $P(FBN(0),"^",9)=FBK(1),^FBAA(161.7,FBN,0)=FBN(0)
"RTN","FBCHEAP",17,0)
 D CHK I $D(FBCHSW) K FBCHSW G DIC1
"RTN","FBCHEAP",18,0)
 I '$D(FBCHSW) S DA=FBN,(DIC,DIE)="^FBAA(161.7,",DIC(0)="LQ",DR="11////^S X=""A""",DLAYGO=161.7 D ^DIE G DIC
"RTN","FBCHEAP",19,0)
 G DIC1:$O(^FBAAI("AC",FBN,FBI))
"RTN","FBCHEAP",20,0)
END K DA,DFN,DIC,DIE,DR,FBAAOUT,FBDX,FBI,FBIN,FBJ,FBK,FBLISTC,FBN,FBPROC,FBVEN,FBVID,I,J,K,L,POP,Q,VA,VADM,X,POP,YS,VAL,ZZ,Y,FBRR,FBTYPE,FBCHSW,DIRUT,FB1725,FBPAMT
"RTN","FBCHEAP",21,0)
 D END^FBCHDI
"RTN","FBCHEAP",22,0)
 Q
"RTN","FBCHEAP",23,0)
REJECT S FBTYPE="B9"
"RTN","FBCHEAP",24,0)
 W ! S DIC="^FBAAI(",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,17)=FBN&($P(^(0),U,9)="""")",DIC("W")="W ?25,$S($D(^DPT($P(^(0),U,4),0)):$P(^(0),U),1:"""")" D ^DIC G END:X=""!(X="^"),REJECT:Y<0 S FBI=+Y,FBI(0)=Y(0)
"RTN","FBCHEAP",25,0)
 S FBLISTC="" D HOME^%ZIS,START^FBCHDI2
"RTN","FBCHEAP",26,0)
RASK S DIR(0)="F^2:40",DIR("A")="Enter reason for rejecting (2-40 characters)",DIR("?")="Enter a reason for rejecting payment from Austin Pricer" D ^DIR K DIR G END:$D(DIRUT) S FBRR=X
"RTN","FBCHEAP",27,0)
ASKSU S DIR(0)="Y",DIR("A")="Are you sure you want to reject this item",DIR("B")="NO" D ^DIR K DIR G END:$D(DIRUT),DIC:'Y
"RTN","FBCHEAP",28,0)
 S (DLAYGO,DIDEL)=162.5,DIC(0)="AEQLM"
"RTN","FBCHEAP",29,0)
 S (DIC,DIE)="^FBAAI(",DA=FBI,DR="13////^S X=""P"";14////^S X=FBRR;15////^S X=FBN;20///^S X=""@""" D ^DIE
"RTN","FBCHEAP",30,0)
 S $P(FBN(0),"^",10)=$P(FBN(0),"^",10)-1,$P(FBN(0),"^",11)=$P(FBN(0),"^",11)-1,$P(FBN(0),"^",17)="Y",^FBAA(161.7,FBN,0)=FBN(0)
"RTN","FBCHEAP",31,0)
RASKSU I $O(^FBAAI("AC",FBN,FBI)) S DIR(0)="Y",DIR("A")="Reject another",DIR("B")="NO" D ^DIR K DIR G END:$D(DIRUT),REJECT:Y
"RTN","FBCHEAP",32,0)
 I $P(^FBAA(161.7,FBN,0),"^",11)=0 S (DIC,DIE)="^FBAA(161.7,",DIC(0)="AEQM",DA=FBN,DR="11////^S X=""V"";12////^S X=DT" D ^DIE G DIC
"RTN","FBCHEAP",33,0)
 G END
"RTN","FBCHEAP",34,0)
CHK F I=0:0 S I=$O(^FBAAI("AC",FBN,I)) Q:I'>0  I $D(^FBAAI(I,0)),$P(^(0),"^",9)="" S FBCHSW=1
"RTN","FBCHEAP",35,0)
 Q
"RTN","FBCHEAP",36,0)
TOT S FBK(1)=0 F I=0:0 S I=$O(^FBAAI("AC",FBN,I)) Q:'I  S FBK(1)=FBK(1)+$P($G(^FBAAI(I,0)),"^",9)
"RTN","FBCHEAP",37,0)
 Q
"RTN","FBCHVH")
0^7^B14092460
"RTN","FBCHVH",1,0)
FBCHVH ;AISC/DMK-VENDOR PAYMENT HISTORY ;02FEB89
"RTN","FBCHVH",2,0)
 ;;3.5;FEE BASIS;**55**;JAN 30, 1995
"RTN","FBCHVH",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBCHVH",4,0)
GETVEN K FBAANQ D GETVEN^FBAAUTL1 G END:IFN']""
"RTN","FBCHVH",5,0)
 D DATE^FBAAUTL G:FBPOP GETVEN S ZZ=9999999.9999,FBBEG=ZZ-ENDDATE,FBEND=ZZ-BEGDATE
"RTN","FBCHVH",6,0)
 I '$D(^FBAAI("AF",IFN)) W !,*7,"No invoices on line for this vendor." G GETVEN
"RTN","FBCHVH",7,0)
 S VAR="IFN^FBBEG^FBEND^BEGDATE^ENDDATE"_$S($D(FBPROG):"^FBPROG",1:""),VAL=IFN_"^"_FBBEG_"^"_FBEND_"^"_BEGDATE_"^"_ENDDATE_$S($D(FBPROG):"^"_FBPROG,1:""),PGM="START^FBCHVH" D ZIS^FBAAUTL G:FBPOP END S:IO=IO(0) FBAANQ=1
"RTN","FBCHVH",8,0)
START S:'$D(FBPROG) FBPROG=6 S FBHEAD="VENDOR",Q="",$P(Q,"=",80)="=",FBAAOUT=0 U IO D GETDAT S:$E(IOST,1,2)'["C-" FBPG=1 D HEDC
"RTN","FBCHVH",9,0)
 F FBM=FBBEG-.1:0 S FBM=$O(^FBAAI("AF",IFN,FBM)) Q:FBM'>0!(FBM>FBEND)  F FBI=0:0 S FBI=$O(^FBAAI("AF",IFN,FBM,FBI)) Q:FBI'>0!(FBAAOUT)  I $D(^FBAAI(FBI,0)),$P(^(0),"^",12)=FBPROG,'$D(^("FBREJ")) D GETINV
"RTN","FBCHVH",10,0)
 G:$D(FBAANQ) GETVEN
"RTN","FBCHVH",11,0)
END K DA,DFN,BEGDATE,ENDDATE,FBBEG,FBEND,DIC,FBAANQ,FBAAOUT,FBDX,FBI,FBIN,FBPROC,FBVEN,FBVID,IFN,J,K,L,PGM,Q,VADM,VAERR,VAL,VAR,X,Y,VA,ZZ,FBM,FBHEAD,FBPROG,FBPG,FBVINDT
"RTN","FBCHVH",12,0)
 D CLOSE^FBAAUTL Q
"RTN","FBCHVH",13,0)
GETINV S FBIN=^FBAAI(FBI,0) F J=1,2,3,4,6,7,8,9,11,13,14 S FBIN(J)=$P(FBIN,"^",J)
"RTN","FBCHVH",14,0)
 S FBVINDT=$P($G(^FBAAI(+FBI,2)),"^",2) D FBCKI^FBAACCB1(FBI)
"RTN","FBCHVH",15,0)
 S FBVEN=$S($D(^FBAAV(+FBIN(3),0)):$P(^(0),"^",1),1:"") I FBVEN]"" S FBVID=$P(^(0),"^",2)
"RTN","FBCHVH",16,0)
 S DFN=FBIN(4) Q:'DFN  D DEM^VADPT
"RTN","FBCHVH",17,0)
 S Y=FBIN(2) D CDAT S FBIN(2)=Y
"RTN","FBCHVH",18,0)
 S Y=FBIN(6) D CDAT S FBIN(6)=Y,Y=FBIN(7) D CDAT S FBIN(7)=Y
"RTN","FBCHVH",19,0)
WRT I $Y+6>IOSL D HANG^FBAAUTL1:$E(IOST,1,2)["C-" Q:FBAAOUT  D HEDC
"RTN","FBCHVH",20,0)
 W !,$S('$D(FBIN(13)):"",FBIN(13)="R":"*",1:""),$S($G(FBCAN)]"":"+",1:"")
"RTN","FBCHVH",21,0)
 W VADM(1)_"  "_$P(VADM(2),"^",2),!,?4,FBVEN,?45,FBVID,?62,FBIN(1),!,$S(FBIN(13)["R":"*",1:""),$S(FBIN(14)]"":"#",1:""),?4,FBIN(6),?14,FBIN(7),?24,$J(FBIN(8),1,2),?33,$J(FBIN(9),1,2),?43,FBIN(11),?59,FBIN(2),?69,$$DATX^FBAAUTL(FBVINDT),!
"RTN","FBCHVH",22,0)
 I $D(^FBAAI(FBI,"DX")) S FBDX=^("DX") F K=1:1:5 D WRTDX
"RTN","FBCHVH",23,0)
 I $D(^FBAAI(FBI,"PROC")) S FBPROC=^("PROC") W ! F L=1:1:5 D WRTPC
"RTN","FBCHVH",24,0)
 N A2 S A2=FBIN(9) D PMNT^FBAACCB2
"RTN","FBCHVH",25,0)
 Q
"RTN","FBCHVH",26,0)
WRTDX I $P(FBDX,"^",K)]"" W ?4,"Dx: ",$$ICD9^FBCSV1(+$P(FBDX,"^",K),$P($G(FBIN),"^",6)),"  " Q
"RTN","FBCHVH",27,0)
 Q
"RTN","FBCHVH",28,0)
WRTPC I $P(FBPROC,"^",L)]"" W ?4,"Proc: ",$$ICD0^FBCSV1(+$P(FBPROC,"^",L),$P($G(FBIN),"^",6)),"   " Q
"RTN","FBCHVH",29,0)
 Q
"RTN","FBCHVH",30,0)
HEDC I $D(FBHEAD) W:'$G(FBPG) @IOF K:$G(FBPG) FBPG W ?25,FBHEAD_" PAYMENT HISTORY",!,?24,$E(Q,1,24),!?48,"Date Range: ",BEGDATE_" to "_ENDDATE
"RTN","FBCHVH",31,0)
 I '$D(FBHEAD) W:'$G(FBPG) @IOF K:$G(FBPG) FBPG W !?32,"INVOICE DISPLAY",!,?31,$E(Q,1,17),!
"RTN","FBCHVH",32,0)
 W !,"Veteran's Name",?17,"('*'Reimbursement to Veteran   '+' Cancellation Activity)",!,?17,"('#' Voided Payment)"
"RTN","FBCHVH",33,0)
 W !,?3,"Vendor Name",?45,"Vendor ID",?59,"Invoice #",!,?3,"Fr Date",?14,"To Date  Claimed   Paid",?41,"Sus Code",?59,"Dt. Rec.",?69,"Inv. Date",!,Q,!
"RTN","FBCHVH",34,0)
 Q
"RTN","FBCHVH",35,0)
CDAT S Y=$E(Y,4,5)_"/"_$S($E(Y,6,7)="00":$E(Y,2,3),1:$E(Y,6,7)_"/"_$E(Y,2,3)) Q
"RTN","FBCHVH",36,0)
GETDAT S Y=BEGDATE D PDF^FBAAUTL S BEGDATE=Y,Y=ENDDATE D PDF^FBAAUTL S ENDDATE=Y
"RTN","FBCHVH",37,0)
 Q
"RTN","FBCHVP")
0^3^B19128100
"RTN","FBCHVP",1,0)
FBCHVP ;AISC/CMR-VOID & CANCEL VOIDED INPATIENT PAYMENT ;3/3/93
"RTN","FBCHVP",2,0)
 ;;3.5;FEE BASIS;**55**;JAN 30, 1995
"RTN","FBCHVP",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBCHVP",4,0)
 ;Variable 'FBVOID' is set if cancelling a voided payment.
"RTN","FBCHVP",5,0)
 ;Variable 'FBTYPE' is set to 6 for CH or 7 for CNH.
"RTN","FBCHVP",6,0)
 D DT^DICRW
"RTN","FBCHVP",7,0)
 I '$D(^XUSEC("FBAASUPERVISOR",DUZ)) W !!,*7,"Sorry, you must be a supervisor to use this option.",! Q
"RTN","FBCHVP",8,0)
RDP ;Get veteran if they have an inpatient invoice (DFN).
"RTN","FBCHVP",9,0)
 K ^TMP($J) W !! S DIC=161,DIC(0)="AEMZ",DIC("S")="I $D(^FBAAI(""AK"",+Y))" D ^DIC K DIC G Q:X=""!($D(DTOUT))!($D(DUOUT)),RDP:Y<0 S DFN=+Y
"RTN","FBCHVP",10,0)
RDV ;Get vendor if an inpatient provider for this patient (FBV).
"RTN","FBCHVP",11,0)
 W !! S DIC=161.2,DIC(0)="AEMZ",DIC("S")="I $D(^FBAAI(""AK"",DFN,+Y))" D ^DIC K DIC G Q:X=""!($D(DTOUT))!($D(DUOUT)),RDV:Y<0 S FBV=+Y
"RTN","FBCHVP",12,0)
 D EN1
"RTN","FBCHVP",13,0)
 I FBCTR=0 W !!?12,*7,"Vendor has no",$S($D(FBVOID):" VOIDED",1:"")," finalized payments ",$S('$D(FBVOID):"to VOID",1:""),!?12,"for this patient under the ",$S(FBTYPE=6:"CIVIL HOSPITAL",1:"COMMUNITY NURSING HOME")," program." G RDV
"RTN","FBCHVP",14,0)
 W !!,"Which payment item(s) would you like to ",$S($D(FBVOID):"Cancel the void on",1:"Void")," ? " S DIR(0)="L^1:"_FBCTR D ^DIR G RDV:$D(DIRUT) S FBX=Y W @IOF D HED
"RTN","FBCHVP",15,0)
 F A=1:1:FBCTR S X=$P(FBX,",",A) Q:X=""  S FBI=+FBI(X),FBINV=^TMP($J,"FBCHVP",FBI),FBVD=$P(FBINV,"^",14) W ! D WRT1 S ^TMP($J,"FBCHVP","VOID",FBI)=""
"RTN","FBCHVP",16,0)
 W ! S DIR(0)="Y",DIR("A")="Are you sure you want to "_$S($D(FBVOID):"Cancel the void on",1:"Void")_" the payment(s)",DIR("B")="No" D ^DIR K DIR G RDP:$D(DIRUT)!'Y
"RTN","FBCHVP",17,0)
 S FBI=0 F  S FBI=$O(^TMP($J,"FBCHVP","VOID",FBI)) Q:FBI'>0  D SETR,CONF W !,?5,".... Done.",!
"RTN","FBCHVP",18,0)
Q K DFN,FBV,FBI,FBTYPE,FBVOID,FBCTR,FBAMTC,FBAMTP,FBBAT,FBDRG,FBFDT,FBINV,FBNUM,FBREIM,FBTDT,FBVD,Q,FBX,VP,^TMP($J,"FBCHVP"),Y,DIE,DR,FBVR,DA
"RTN","FBCHVP",19,0)
 Q
"RTN","FBCHVP",20,0)
EN1 ;Find finalized payments that match FBTYPE and store in ^TMP.
"RTN","FBCHVP",21,0)
 S (FBI,FBCTR)=0,Q="-",$P(Q,"-",80)="-"
"RTN","FBCHVP",22,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","FBCHVP",23,0)
 F  S FBI=$O(^FBAAI("AK",DFN,FBV,FBI)) Q:FBI'>0  I $D(^FBAAI(FBI,0)),'$D(^("FBREJ")) S FBINV=^(0),FBVD=$P(FBINV,"^",14) I $P(FBINV,"^",16)'=""&($P(FBINV,"^",12)=FBTYPE)&($S($D(FBVOID):(FBVD="VP"),1:(FBVD=""))) D WRT
"RTN","FBCHVP",24,0)
 Q
"RTN","FBCHVP",25,0)
WRT S ^TMP($J,"FBCHVP",FBI)=FBINV
"RTN","FBCHVP",26,0)
 I FBCTR=0!($Y+5>IOSL) W @IOF D HED
"RTN","FBCHVP",27,0)
 S FBCTR=FBCTR+1,FBI(FBCTR)=FBI
"RTN","FBCHVP",28,0)
 W !,FBCTR_") " D WRT1 I $D(FBVOID)&($D(^FBAAI(FBI,"R"))) W !?3,"Reason:",!?10,^("R"),!
"RTN","FBCHVP",29,0)
 Q
"RTN","FBCHVP",30,0)
WRT1 S FBREIM=$P(FBINV,"^",13),FBFDT=$P(FBINV,"^",6),FBTDT=$P(FBINV,"^",7),FBDRG=$P(FBINV,"^",24),FBAMTC=$P(FBINV,"^",8),FBAMTP=$P(FBINV,"^",9),FBNUM=+FBINV,FBBAT=$P(FBINV,"^",17)
"RTN","FBCHVP",31,0)
 D FBCKI^FBAACCB1(FBI)
"RTN","FBCHVP",32,0)
 W $S(FBREIM="R":"*",1:""),$S(FBVD="VP":"#",1:""),?3,$$DATX^FBAAUTL(FBFDT),?16,$$DATX^FBAAUTL(FBTDT)
"RTN","FBCHVP",33,0)
 W ?26,$S($G(FBDRG):$J($$ICD^FBCSV1(FBDRG,$G(FBFDT)),4),1:""),?35,$J($FN(FBAMTC,",",2),8),?48,$J($FN(FBAMTP,",",2),8),?62,$J(FBNUM,5),?72,$J($P($G(^FBAA(161.7,+FBBAT,0)),"^"),6)
"RTN","FBCHVP",34,0)
 N A2 S A2=+FBAMTP D PMNT^FBAACCB2
"RTN","FBCHVP",35,0)
 Q
"RTN","FBCHVP",36,0)
HED W !,"Patient Name: ",$P(^DPT(DFN,0),"^"),?50,"Pt.ID ",$$SSN^FBAAUTL(DFN),!!,?2,"VENDOR: ",$P(^FBAAV(FBV,0),"^"),!,?10,"('*' Represents Reimbursement to Patient)",!,?10,"('#' Represents a Voided Payment)"
"RTN","FBCHVP",37,0)
 W !,"   FROM DATE",?16,"TO DATE",?26,"DRG",?33,"AMT CLAIMED",?48,"AMT PAID",?60,"INVOICE #",?72,"BATCH #",!,Q,!
"RTN","FBCHVP",38,0)
 Q
"RTN","FBCHVP",39,0)
SETR ;Set/delete void node on record.
"RTN","FBCHVP",40,0)
 S DA=FBI,VP=$S($D(FBVOID):"",1:"VOID")
"RTN","FBCHVP",41,0)
 I $D(FBVOID) S DR="16///@;16.5///@;17///@"
"RTN","FBCHVP",42,0)
 I '$D(FBVOID) S DR="16///^S X=VP;17////^S X=DUZ"_$S($D(FBVR):";16.5////^S X=FBVR",1:";16.5R;S FBVR=X")
"RTN","FBCHVP",43,0)
 S DIE="^FBAAI(",DIDEL=162.5 D ^DIE K DIDEL
"RTN","FBCHVP",44,0)
 Q
"RTN","FBCHVP",45,0)
CONF ;Print void/cancel void confirmation.
"RTN","FBCHVP",46,0)
 W !,?10,$S($D(FBVOID):"Cancel Voided",1:"Void")," payment for ",$$NAME^FBCHREQ2(DFN),!,*7,"You must adjust control point accordingly through IFCAP!"
"RTN","FBCHVP",47,0)
 Q
"RTN","FBCSV1")
0^15^B18288370
"RTN","FBCSV1",1,0)
FBCSV1 ;WOIFO/SS-UTILITIES FOR CODE SET VERSIONING;4/7/2003
"RTN","FBCSV1",2,0)
 ;;3.5;FEE BASIS;**55**;JAN 30, 1995
"RTN","FBCSV1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBCSV1",4,0)
 ;
"RTN","FBCSV1",5,0)
 ;wrapper for DRG^ICDGTDRG
"RTN","FBCSV1",6,0)
 ;to use instead of direct read of ^ICD(
"RTN","FBCSV1",7,0)
 ;FBIEN - ien of #80.2
"RTN","FBCSV1",8,0)
 ;FBDATE - date of service (optional)
"RTN","FBCSV1",9,0)
 ;returns (#.01) NAME of #80.2 or "" if invalid/error
"RTN","FBCSV1",10,0)
ICD(FBIEN,FBDATE) ;
"RTN","FBCSV1",11,0)
 N FBRET
"RTN","FBCSV1",12,0)
 S FBRET=$$DRG^ICDGTDRG($G(FBIEN),$S(+$G(FBDATE)=0:"",1:FBDATE))
"RTN","FBCSV1",13,0)
 Q:+FBRET<0 ""
"RTN","FBCSV1",14,0)
 Q $P(FBRET,"^",1)
"RTN","FBCSV1",15,0)
 ;
"RTN","FBCSV1",16,0)
 ;wrapper for ICDOP^ICDCODE
"RTN","FBCSV1",17,0)
 ;to use instead of direct read of ^ICD0(
"RTN","FBCSV1",18,0)
 ;FBIEN - ien of #80.1
"RTN","FBCSV1",19,0)
 ;FBDATE - date of service (optional)
"RTN","FBCSV1",20,0)
 ;returns (#.01) NAME of #80.1 or "" if invalid/error
"RTN","FBCSV1",21,0)
ICD0(FBIEN,FBDATE) ;
"RTN","FBCSV1",22,0)
 N FBRET
"RTN","FBCSV1",23,0)
 S FBRET=$$ICDOP^ICDCODE($G(FBIEN),$S(+$G(FBDATE)=0:"",1:FBDATE),,1)
"RTN","FBCSV1",24,0)
 Q:+FBRET<0 ""
"RTN","FBCSV1",25,0)
 Q $P(FBRET,"^",2)
"RTN","FBCSV1",26,0)
 ;
"RTN","FBCSV1",27,0)
 ;wrapper for ICDDX^ICDCODE
"RTN","FBCSV1",28,0)
 ;to use instead of direct read of ^ICD9(
"RTN","FBCSV1",29,0)
 ;FBIEN - ien of #80
"RTN","FBCSV1",30,0)
 ;FBDATE - date of service (optional)
"RTN","FBCSV1",31,0)
 ;returns (#.01) NAME of #80 or "" if invalid/error
"RTN","FBCSV1",32,0)
ICD9(FBIEN,FBDATE) ;
"RTN","FBCSV1",33,0)
 N FBRET
"RTN","FBCSV1",34,0)
 S FBRET=$$ICDDX^ICDCODE($G(FBIEN),$S(+$G(FBDATE)=0:"",1:FBDATE),,1)
"RTN","FBCSV1",35,0)
 Q:+FBRET<0 ""
"RTN","FBCSV1",36,0)
 Q $P(FBRET,"^",2)
"RTN","FBCSV1",37,0)
 ;
"RTN","FBCSV1",38,0)
 ;wrapper for ICDDX^ICDCODE with piece #
"RTN","FBCSV1",39,0)
 ;to use instead of direct read of ^ICD9(
"RTN","FBCSV1",40,0)
 ;FBIEN - ien of #80
"RTN","FBCSV1",41,0)
 ;FBPC - piece #
"RTN","FBCSV1",42,0)
 ;FBDATE (optional) - date of service
"RTN","FBCSV1",43,0)
 ;returns piece # FBPC of #80 or "" if invalid/error
"RTN","FBCSV1",44,0)
ICD9P(FBIEN,FBPC,FBDATE) ;
"RTN","FBCSV1",45,0)
 N FBRET
"RTN","FBCSV1",46,0)
 S FBRET=$$ICDDX^ICDCODE($G(FBIEN),$S(+$G(FBDATE)=0:"",1:FBDATE),,1)
"RTN","FBCSV1",47,0)
 Q:+FBRET<0 ""
"RTN","FBCSV1",48,0)
 Q $P(FBRET,"^",FBPC+1)
"RTN","FBCSV1",49,0)
 ;
"RTN","FBCSV1",50,0)
 ;extended wrapper for ICDDX^ICDCODE
"RTN","FBCSV1",51,0)
 ;to use instead of direct read of ^ICD9(
"RTN","FBCSV1",52,0)
 ;FBIEN - ien of #80
"RTN","FBCSV1",53,0)
 ;FBPC - piece #
"RTN","FBCSV1",54,0)
 ;FBEXTR - $E parameter
"RTN","FBCSV1",55,0)
 ;FBDATE (optional) - date of service
"RTN","FBCSV1",56,0)
 ;returns piece #FBPC and (#.01) NAME of #80 and or "" if invalid/error
"RTN","FBCSV1",57,0)
ICD9EX(FBIEN,FBPC,FBEXTR,FBDATE) ;
"RTN","FBCSV1",58,0)
 N FBRET
"RTN","FBCSV1",59,0)
 S FBRET=$$ICDDX^ICDCODE($G(FBIEN),$S(+$G(FBDATE)=0:"",1:FBDATE),,1)
"RTN","FBCSV1",60,0)
 Q:+FBRET<0 ""
"RTN","FBCSV1",61,0)
 Q $E($P(FBRET,"^",FBPC+1),1,FBEXTR)_" ("_$P(FBRET,"^",2)_")"
"RTN","FBCSV1",62,0)
 ;
"RTN","FBCSV1",63,0)
 ;get FROM date
"RTN","FBCSV1",64,0)
FRDTINV(FBDA) ;
"RTN","FBCSV1",65,0)
 Q $P($G(^FBAAI(FBDA,0)),"^",6)
"RTN","FBCSV1",66,0)
 ;
"RTN","FBCSV1",67,0)
 ;if FBCODE="" returns FBNUM spaces
"RTN","FBCSV1",68,0)
 ;otherwise returns FBCODE
"RTN","FBCSV1",69,0)
SPACES(FBCODE,FBNUM) ;
"RTN","FBCSV1",70,0)
 I $L(FBCODE)=0 S $P(FBCODE," ",FBNUM)=" "
"RTN","FBCSV1",71,0)
 Q FBCODE
"RTN","FBCSV1",72,0)
 ;
"RTN","FBCSV1",73,0)
 ;EVALUATE (sometimes can be used instead of "$S")
"RTN","FBCSV1",74,0)
 ;if FBCODE="" returns FBRETV
"RTN","FBCSV1",75,0)
 ;otherwise returns FBCODE
"RTN","FBCSV1",76,0)
EV(FBCODE,FBRETV) ;
"RTN","FBCSV1",77,0)
 Q:$L(FBCODE)=0 FBRETV
"RTN","FBCSV1",78,0)
 Q FBCODE
"RTN","FBCSV1",79,0)
 ;
"RTN","FBCSV1",80,0)
 ;converts a date to fileman format
"RTN","FBCSV1",81,0)
DT2FMDT(FBDAT) ;
"RTN","FBCSV1",82,0)
 N X,Y
"RTN","FBCSV1",83,0)
 S X=FBDAT
"RTN","FBCSV1",84,0)
 D ^%DT
"RTN","FBCSV1",85,0)
 Q +Y
"RTN","FBCSV1",86,0)
 ;
"RTN","FBCSV1",87,0)
 ;wrapper for ICDDX^ICDCODE
"RTN","FBCSV1",88,0)
 ;to use in prompts (and input templates)of file #162.5 to screen out 
"RTN","FBCSV1",89,0)
 ;  inactive/invalid codes
"RTN","FBCSV1",90,0)
 ;FBICD9 - ien of #80
"RTN","FBCSV1",91,0)
 ;FBINV - ien of the current #162.5 record
"RTN","FBCSV1",92,0)
 ;FBDATE - (optional) date of service
"RTN","FBCSV1",93,0)
 ;returns 0 if code is active, otherwise - nonzero value
"RTN","FBCSV1",94,0)
INPICD9(FBICD9,FBINV,FBDATE) ;
"RTN","FBCSV1",95,0)
 N FBRET
"RTN","FBCSV1",96,0)
 I '$G(FBDATE) S FBDATE=$$FRDTINV(+$G(FBINV))
"RTN","FBCSV1",97,0)
 S FBRET=$$ICDDX^ICDCODE($G(FBICD9),$S(+$G(FBDATE)=0:"",1:FBDATE))
"RTN","FBCSV1",98,0)
 I +FBRET<0 W " Invalid Code " Q 2
"RTN","FBCSV1",99,0)
 I $P(FBRET,"^",10)=0 W !," Code is inactive" W:$G(FBDATE)>0 " on "_$$FMTE^XLFDT(FBDATE) Q 1
"RTN","FBCSV1",100,0)
 Q 0
"RTN","FBCSV1",101,0)
 ;
"RTN","FBCSV1",102,0)
 ;wrapper for ICDOP^ICDCODE
"RTN","FBCSV1",103,0)
 ;checks if code is active on the date of service and
"RTN","FBCSV1",104,0)
 ;if active returns CODE NUMBER
"RTN","FBCSV1",105,0)
 ;is inactive returns "" and prints message "ICD O/P Code inactive ..."
"RTN","FBCSV1",106,0)
 ;is invalid/local returns "" and prints message "Invalid ICD O/P Code"
"RTN","FBCSV1",107,0)
CHKICD0(FBIEN,FBDATE) ;
"RTN","FBCSV1",108,0)
 N FBRET
"RTN","FBCSV1",109,0)
 S FBRET=$$ICDOP^ICDCODE($G(FBIEN),$S(+$G(FBDATE)=0:"",1:FBDATE))
"RTN","FBCSV1",110,0)
 I +FBRET<0 W " Invalid ICD O/P Code " Q ""
"RTN","FBCSV1",111,0)
 I $P(FBRET,"^",10)=0 D  Q ""
"RTN","FBCSV1",112,0)
 . W !," ICD O/P Code "_$P(FBRET,"^",2)_" inactive"
"RTN","FBCSV1",113,0)
 . W:$G(FBDATE) " on date of service (",$$FMTE^XLFDT(FBDATE),")"
"RTN","FBCSV1",114,0)
 Q $P(FBRET,"^",2)
"RTN","FBCSV1",115,0)
 ;
"RTN","FBCSV1",116,0)
 ;wrapper for ICDOP^ICDCODE
"RTN","FBCSV1",117,0)
 ;to use in prompts (and input templates)of file #162.5 to screen out 
"RTN","FBCSV1",118,0)
 ;  inactive/invalid codes
"RTN","FBCSV1",119,0)
 ;FBICD0 - ien of #80.1
"RTN","FBCSV1",120,0)
 ;FBINV - ien of the current #162.5 record
"RTN","FBCSV1",121,0)
 ;FBDATE - (optional) date of service
"RTN","FBCSV1",122,0)
 ;returns 0 if code is active, otherwise - nonzero value
"RTN","FBCSV1",123,0)
INPICD0(FBICD0,FBINV,FBDATE) ;
"RTN","FBCSV1",124,0)
 N FBRET
"RTN","FBCSV1",125,0)
 I '$G(FBDATE) S FBDATE=$$FRDTINV(+$G(FBINV))
"RTN","FBCSV1",126,0)
 S FBRET=$$ICDOP^ICDCODE($G(FBICD0),$S(+$G(FBDATE)=0:"",1:FBDATE))
"RTN","FBCSV1",127,0)
 I +FBRET<0 W " Invalid Code " Q 2
"RTN","FBCSV1",128,0)
 I $P(FBRET,"^",10)=0 W !," Code is inactive" W:$G(FBDATE)>0 " on "_$$FMTE^XLFDT(FBDATE) Q 1
"RTN","FBCSV1",129,0)
 Q 0
"RTN","FBCSV1",130,0)
 ;
"RTN","FBCSV1",131,0)
 ;wrapper for DRG^ICDGTDRG
"RTN","FBCSV1",132,0)
 ;to use in prompts (and input templates)of file #162.5 to screen out 
"RTN","FBCSV1",133,0)
 ;  inactive/invalid codes
"RTN","FBCSV1",134,0)
 ;FBICD - ien of #80.2
"RTN","FBCSV1",135,0)
 ;FBINV - ien of the current #162.5 record
"RTN","FBCSV1",136,0)
 ;FBDATE - (optional) date of service
"RTN","FBCSV1",137,0)
 ;returns 0 if code is active, otherwise - nonzero value
"RTN","FBCSV1",138,0)
INPICD(FBICD,FBINV,FBDATE) ;
"RTN","FBCSV1",139,0)
 N FBRET
"RTN","FBCSV1",140,0)
 I '$G(FBDATE) S FBDATE=$$FRDTINV(+$G(FBINV))
"RTN","FBCSV1",141,0)
 S FBRET=$$DRG^ICDGTDRG($G(FBICD),$S(+$G(FBDATE)=0:"",1:FBDATE))
"RTN","FBCSV1",142,0)
 I +FBRET<0 W " Invalid Code " Q 2
"RTN","FBCSV1",143,0)
 I $P(FBRET,"^",14)=0 W !," Code is inactive" W:$G(FBDATE)>0 " on "_$$FMTE^XLFDT(FBDATE) Q 1
"RTN","FBCSV1",144,0)
 Q 0
"RTN","FBCSV1",145,0)
 ;
"RTN","FBCSV1",146,0)
 ;wrapper for ICDDX^ICDCODE
"RTN","FBCSV1",147,0)
 ;checks if code is inactive on the date of service and 
"RTN","FBCSV1",148,0)
 ;if active returns CODE NUMBER
"RTN","FBCSV1",149,0)
 ;is inactive returns "" and prints message "ICD Dx Code inactive ..."
"RTN","FBCSV1",150,0)
 ;is invalid/local returns "" and prints message "Invalid ICD Dx Code"
"RTN","FBCSV1",151,0)
CHKICD9(FBIEN,FBDATE) ;
"RTN","FBCSV1",152,0)
 N FBRET
"RTN","FBCSV1",153,0)
 S FBRET=$$ICDDX^ICDCODE($G(FBIEN),$S(+$G(FBDATE)=0:"",1:FBDATE))
"RTN","FBCSV1",154,0)
 I +FBRET<0 W " Invalid ICD Dx Code " Q ""
"RTN","FBCSV1",155,0)
 I $P(FBRET,"^",10)=0 D  Q ""
"RTN","FBCSV1",156,0)
 . W !," ICD Dx Code "_$P(FBRET,"^",2)_" inactive"
"RTN","FBCSV1",157,0)
 . W:$G(FBDATE) " on date of service (",$$FMTE^XLFDT(FBDATE),")"
"RTN","FBCSV1",158,0)
 Q $P(FBRET,"^",2)
"RTN","FBCSV1",159,0)
 ;
"RTN","FBCSV1",160,0)
 ;
"RTN","FBCSV1",161,0)
 ;convert date as a string like "MMDDYYYY" into FM date like "YYYMMDD"
"RTN","FBCSV1",162,0)
STR2FBDT(FBDTSTR) ;
"RTN","FBCSV1",163,0)
 N X,Y S X=FBDTSTR D ^%DT
"RTN","FBCSV1",164,0)
 Q:Y=-1 ""
"RTN","FBCSV1",165,0)
 Q Y\1
"RTN","FBCSV1",166,0)
 ;
"RTN","FBCSV1",167,0)
 ;FBCSV1
"RTN","FBPAY2")
0^8^B17324516
"RTN","FBPAY2",1,0)
FBPAY2 ;AISC/DMK,GRR,TET - OUTPATIENT PAYMENT HISTORY SORT/PRINT ;7/9/2001
"RTN","FBPAY2",2,0)
 ;;3.5;FEE BASIS;**4,32,55**;JAN 30, 1995
"RTN","FBPAY2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBPAY2",4,0)
EN ;entry point
"RTN","FBPAY2",5,0)
 I FBSORT S FBPNAME=FBNAME,FBPID=FBID,(DFN,J)=FBIEN D SORT
"RTN","FBPAY2",6,0)
 I 'FBSORT S FBVNAME=$E(FBNAME,1,23),FBVID=FBID,FBVI=FBIEN,J=0 F  S J=$O(^FBAAC("AB",FBVI,J)) Q:J'>0  S DFN=J,FBPID=$$SSN^FBAAUTL(DFN),FBPNAME=$P($G(^DPT(DFN,0)),U) D SORT
"RTN","FBPAY2",7,0)
KILL ;kill variables set in this routine
"RTN","FBPAY2",8,0)
 K A1,A2,A3,B3,C3,D,D2,FBAACPTC,FBBN,FBCP,FBDOS,FBDT,FBDT1,FBIN,FBOB,FBP,FBPAT,FBPDX,FBSC,FBTA,FBTRDT,FBTRX,FBTYPE,FBVEN,FBVP,I,J,K,L,M,T,Y,FBMODLE,FB1725
"RTN","FBPAY2",9,0)
 K:FBSORT FBVNAME,FBVID
"RTN","FBPAY2",10,0)
 K:'FBSORT FBPNAME,FBPID,FBTRCK
"RTN","FBPAY2",11,0)
 Q
"RTN","FBPAY2",12,0)
SORT S I=FBBEG F  S I=$O(^FBAAC(J,"AB",I)) Q:'I!(I>FBEND)  F K=0:0 S K=$O(^FBAAC(J,"AB",I,K)) Q:'K  I FBSORT!(('FBSORT)&(K=$G(FBVI))) F L=0:0 S L=$O(^FBAAC(J,"AB",I,K,L)) Q:'L  D SETTR F M=0:0 S M=$O(^FBAAC(J,1,K,1,L,1,M)) Q:'M  D SET,SETTMP
"RTN","FBPAY2",13,0)
 Q
"RTN","FBPAY2",14,0)
SET ;set variables & sort - also entry point from FBPAY67
"RTN","FBPAY2",15,0)
 S Y=$G(^FBAAC(J,1,K,1,L,1,M,0)) I '+$P(Y,U,9)!($G(^FBAAC(J,1,K,1,L,1,M,"FBREJ"))]"") S FBOUT=1 Q
"RTN","FBPAY2",16,0)
 ; if user wants just mill bill or just non-mill bill then check payment
"RTN","FBPAY2",17,0)
 ;   and skip if associated with an mill bill claim
"RTN","FBPAY2",18,0)
 I "^M^N^"[(U_$G(FB1725R)_U) S FB1725=$S($P(Y,U,13)["FB583":+$P($G(^FB583(+$P(Y,U,13),0)),U,28),1:0) I $S(FB1725R="M"&'FB1725:1,FB1725R="N"&FB1725:1,1:0) S FBOUT=1 Q
"RTN","FBPAY2",19,0)
 D FBCKO^FBAACCB2(J,K,L,M)
"RTN","FBPAY2",20,0)
 S FBMODLE=$$MODL^FBAAUTL4("^FBAAC("_J_",1,"_K_",1,"_L_",1,"_M_",""M"")","E")
"RTN","FBPAY2",21,0)
 S:FBSORT FBVNAME=$E($P($G(^FBAAV(K,0)),U),1,23),FBVID=$S(FBVNAME]"":$P(^(0),U,2),1:"")
"RTN","FBPAY2",22,0)
 S FBP=+$P(Y,U,9),FBSC=$P(Y,U,27),FBPDX=+$P(Y,U,23)
"RTN","FBPAY2",23,0)
 S FBSC=$S(FBSC="Y":"YES",FBSC="N":"NO",1:"-")
"RTN","FBPAY2",24,0)
 S FBPDX=$$ICD9EX^FBCSV1(FBPDX,3,18,+$G(^FBAAC(J,1,K,1,L,0)))
"RTN","FBPAY2",25,0)
 S T=$P(Y,U,5),D2=$P(Y,U,6),FBDOS=D2,D2=$$DATX^FBAAUTL(D2),FBCP=$P(Y,U,18),FBCP=$S(FBCP=1:"(C&P)",1:"")
"RTN","FBPAY2",26,0)
 S FBAACPTC=$$CPT^FBAAUTL4($P(Y,U))
"RTN","FBPAY2",27,0)
 S FBOB=$P(Y,U,10)
"RTN","FBPAY2",28,0)
 I T]"" S T=$P($G(^FBAA(161.27,+T,0)),U)
"RTN","FBPAY2",29,0)
 S FBTYPE=$P(Y,U,20),FBVP=$P(Y,U,21),FBIN=$P(Y,U,16),FBBN=$P(Y,U,8),FBBN=$S(FBBN']"":"",$D(^FBAA(161.7,FBBN,0)):$P(^(0),U),1:""),FBBN=$S(FBBN="":"",1:$E("00000",$L(FBBN)+1,5)_FBBN)
"RTN","FBPAY2",30,0)
 S FBVEN=FBVNAME_";"_FBVID,FBPAT=FBPNAME_";"_DFN
"RTN","FBPAY2",31,0)
 ;output format
"RTN","FBPAY2",32,0)
 S A1=$J($P(Y,U,2),6,2),A2=$J($P(Y,U,3),6,2),FBIN=$J(FBIN,7)
"RTN","FBPAY2",33,0)
 S A2=A2_$$APS^FBAAUTL4(J,K,L,M) ; append symbol
"RTN","FBPAY2",34,0)
 S FBDT1=$S(FBVP="VP":"#",1:"")_$S(FBTYPE="R":"*",1:" ")_FBDT
"RTN","FBPAY2",35,0)
 Q
"RTN","FBPAY2",36,0)
SETTMP ;sort data by fee program, vendor, patient, date
"RTN","FBPAY2",37,0)
 I '$D(FBPROG(+$P(Y,U,9)))!($P(Y,U,9)'=FBPI)!($G(^FBAAC(J,1,K,1,L,1,M,"FBREJ"))]"") S FBOUT=1 G SETTMP1
"RTN","FBPAY2",38,0)
 ; if user wants just mill bill or just non-mill bill then check payment
"RTN","FBPAY2",39,0)
 ;   and skip if associated with an mill bill claim
"RTN","FBPAY2",40,0)
 I "^M^N^"[(U_$G(FB1725R)_U) S FB1725=$S($P(Y,U,13)["FB583":+$P($G(^FB583(+$P(Y,U,13),0)),U,28),1:0) I $S(FB1725R="M"&'FB1725:1,FB1725R="N"&FB1725:1,1:0) S FBOUT=1 G SETTMP1
"RTN","FBPAY2",41,0)
 S ^TMP($J,"FB",FBP,FBVEN,FBPAT,I,L,M)=FBDT1_U_FBAACPTC_FBCP_$S($G(FBMODLE)]"":"-"_FBMODLE,1:"")_U_A1_U_A2_U_T_U_FBBN_U_FBIN_U_D2_U_FBSC_U_FBPDX_U_FBOB
"RTN","FBPAY2",42,0)
 S ^TMP($J,"FB",FBP,FBVEN,FBPAT,I,L,M,"FBCK")="^"_FBCK_"^"_FBCKDT_"^"_FBCANDT_"^"_FBCANR_"^"_FBCAN_"^"_FBDIS_"^"_FBCKINT
"RTN","FBPAY2",43,0)
SETTMP1 D PMTCLN^FBAACCB2
"RTN","FBPAY2",44,0)
 Q
"RTN","FBPAY2",45,0)
SETTR S D=$S($D(^FBAAC(J,1,K,1,L,0)):$P(^(0),"^",1),1:""),A3=""
"RTN","FBPAY2",46,0)
 ; if just mill bill (FB1725R="M") requested then skip travel payments
"RTN","FBPAY2",47,0)
 I D]"",$D(^FBAAC(J,3,"AB",D)),$G(FB1725R)'="M" S (FBTA,FBCTR)=0 F  S FBTA=$O(^FBAAC(J,3,"AB",D,FBTA)) Q:'FBTA  S A3=$P($G(^FBAAC(J,3,FBTA,0)),"^",3) I A3>0 D
"RTN","FBPAY2",48,0)
 .D FBCKT^FBAACCB0(J,FBTA) S FBCTR=FBCTR+1,^TMP($J,"FBTR",FBPNAME,D,FBCTR)=$J(A3,6,2)_"^"_FBCK_"^"_FBCKDT_"^"_FBCANDT_"^"_FBCANR_"^"_FBCAN_"^"_FBDIS_"^"_FBCKINT
"RTN","FBPAY2",49,0)
 K A3,B3,FBTA,FBCTR
"RTN","FBPAY2",50,0)
 S FBDT=$$DATX^FBAAUTL(D)
"RTN","FBPAY2",51,0)
 Q
"RTN","FBPAY2",52,0)
EN1 ;entry point to set variables, called by fbpay67, oth & anc
"RTN","FBPAY2",53,0)
 N FBVEN,FBPAT,FBDT1
"RTN","FBPAY2",54,0)
 D SETTR,SET
"RTN","FBPAY2",55,0)
 Q
"RTN","FBPAY2",56,0)
WMSG ;write message if no matches found
"RTN","FBPAY2",57,0)
 W !!,"There are no outpatient payments on file for specified date range"
"RTN","FBPAY2",58,0)
 W:'FBPROG !?3," and selected Fee programs"
"RTN","FBPAY2",59,0)
 W ".",*7,!!
"RTN","FBPAY2",60,0)
 Q
"RTN","FBPAY67")
0^9^B28910879
"RTN","FBPAY67",1,0)
FBPAY67 ;AISC/DMK,TET-CH/CNH PAYMENT HISTORY SORT ;7/9/2001
"RTN","FBPAY67",2,0)
 ;;3.5;FEE BASIS;**4,32,55**;JAN 30, 1995
"RTN","FBPAY67",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBPAY67",4,0)
EN ;entry to sort
"RTN","FBPAY67",5,0)
 I FBSORT S DFN=FBIEN,FBPID=FBID,FBPNAME=FBNAME
"RTN","FBPAY67",6,0)
 I 'FBSORT S FBVI=FBIEN,FBVID=FBID,FBVNAME=$E(FBNAME,1,23)
"RTN","FBPAY67",7,0)
FBAAC ;check ^fbaac("an" (file 162)
"RTN","FBPAY67",8,0)
 S FBOUT=0 I $D(^FBAAC("AN",FBPI)) D AN  I $G(FBPIFLG) S FBPI=7 D AN S FBPI=6
"RTN","FBPAY67",9,0)
 S I=FBBEG,FBIX=$S(FBSORT:"AG",1:"AF")
"RTN","FBPAY67",10,0)
SORT ;sort programs 6 & 7 (civil hos & cnh)
"RTN","FBPAY67",11,0)
 F FBM=FBBEG-.1:0 S FBM=$O(^FBAAI(FBIX,FBIEN,FBM)) Q:FBM'>0!(FBM>FBEND)  F FBI=0:0 S FBI=$O(^FBAAI(FBIX,FBIEN,FBM,FBI)) Q:FBI'>0  I $G(^FBAAI(FBI,"FBREJ"))']"" D SET S FBPI=FBPISV
"RTN","FBPAY67",12,0)
KILL ;kill variables set in routine and in FBPAY2, sort/set sections
"RTN","FBPAY67",13,0)
 K A1,A2,A3,D,D2,FBAACPTC,FBBN,FBCNT,FBCP,FBDT,FBDT1,FBDX,FBDX1,FBI,FBIN,FBIX,FBM,FBOB,FBPDX,FBPISV,FBPROC,FBPROC1,FBSC,FBTA,FBVEN,FBVENID,FBVP,I,J,K,L,M,Y,FBDT2
"RTN","FBPAY67",14,0)
 K:FBSORT FBVNAME,FBVID K:'FBSORT FBPNAME,FBPID
"RTN","FBPAY67",15,0)
 D KILL^FBPAY2
"RTN","FBPAY67",16,0)
 Q
"RTN","FBPAY67",17,0)
SET ;set string, also called by fbchdi (fblistc or fbaanq set if called by fbchdi)
"RTN","FBPAY67",18,0)
 S FBPISV=$G(FBPI),FBIN=$G(^FBAAI(FBI,0)) Q:FBIN']""  S FBPI=+$P(FBIN,U,12)
"RTN","FBPAY67",19,0)
 I 'FBPROG,'$D(FBPROG(+$P(FBIN,U,12))) Q
"RTN","FBPAY67",20,0)
 I '$D(FBPIFLG) Q:+$P(FBIN,U,12)'=FBPI
"RTN","FBPAY67",21,0)
 I $D(FBPIFLG),'FBPROG Q:'$D(FBPROG(+$P(FBIN,U,12)))
"RTN","FBPAY67",22,0)
 ; if user wants just mill bill or just non-mill bill then check payment
"RTN","FBPAY67",23,0)
 ;   and skip if associated with an mill bill claim
"RTN","FBPAY67",24,0)
 I "^M^N^"[(U_$G(FB1725R)_U) S FB1725=$S($P(FBIN,U,5)["FB583":+$P($G(^FB583(+$P(FBIN,U,5),0)),U,28),1:0) I $S(FB1725R="M"&'FB1725:1,FB1725R="N"&FB1725:1,1:0) Q
"RTN","FBPAY67",25,0)
 F J=1,2,3,6,7,8,9,11,13,14 S FBIN(J)=$P(FBIN,"^",J)
"RTN","FBPAY67",26,0)
 S:FBSORT FBIN(5)=$P(FBIN,U,5) I 'FBSORT S FBIN(4)=$P(FBIN,U,4),DFN=FBIN(4) Q:DFN']""  S FBPID=$$SSN^FBAAUTL(DFN),FBPNAME=$P($G(^DPT(+DFN,0)),U)
"RTN","FBPAY67",27,0)
 I FBSORT S FBVNAME=$G(^FBAAV(FBIN(3),0)) Q:FBVNAME']""  S FBVID=$P(FBVNAME,U,2),FBVNAME=$E($P(FBVNAME,U),1,23)
"RTN","FBPAY67",28,0)
 S FBIN(2)=$$DATX^FBAAUTL(FBIN(2)),FBVEN=FBVNAME_";"_FBVID,FBPAT=FBPNAME_";"_DFN
"RTN","FBPAY67",29,0)
 S FBIN(6)=$$DATX^FBAAUTL(FBIN(6)),FBIN(7)=$$DATX^FBAAUTL(FBIN(7))
"RTN","FBPAY67",30,0)
 D FBCKI^FBAACCB1(FBI)
"RTN","FBPAY67",31,0)
SETTMP S ^TMP($J,"FB",+$P(FBIN,U,12),FBVEN,FBPAT,FBM,FBI)=FBIN(2)_U_$J(FBIN(8),8,2)_U_$J(FBIN(9),8,2)_U_FBIN(11)_U_$J(FBIN(1),8)_U_FBIN(6)_U_FBIN(7)_U_FBIN(13)_U_FBIN(14)
"RTN","FBPAY67",32,0)
 S ^TMP($J,"FB",+$P(FBIN,U,12),FBVEN,FBPAT,FBM,FBI,"FBCK")="^"_FBCK_"^"_FBCKDT_"^"_FBCANDT_"^"_FBCANR_"^"_FBCAN_"^"_FBDIS_"^"_FBCKINT
"RTN","FBPAY67",33,0)
 S FBDX=$G(^FBAAI(FBI,"DX")) I FBDX]"" S FBDX1="" F I=1:1:5 S:$P(FBDX,U,I) FBDX1=FBDX1_$$ICD9^FBCSV1($P(FBDX,U,I),+$P($G(FBIN),U,6))_U
"RTN","FBPAY67",34,0)
 I FBDX]"" S FBDX1=$P(FBDX1,U,1,($L(FBDX1,U)-1)),^TMP($J,"FB",$P(FBIN,U,12),FBVEN,FBPAT,FBM,FBI,"DX")=FBDX1
"RTN","FBPAY67",35,0)
 S FBPROC=$G(^FBAAI(FBI,"PROC")) I FBPROC]"" S FBPROC1="" F I=1:1:5 S:$P(FBPROC,U,I) FBPROC1=FBPROC1_$$ICD0^FBCSV1($P(FBPROC,U,I),+$P($G(FBIN),U,6))_U
"RTN","FBPAY67",36,0)
 I FBPROC]"" S FBPROC1=$P(FBPROC1,U,1,($L(FBPROC1,U)-1)),^TMP($J,"FB",$P(FBIN,U,12),FBVEN,FBPAT,FBM,FBI,"PROC")=FBPROC1
"RTN","FBPAY67",37,0)
 D ANC(FBM,FBI):FBSORT&($D(^TMP($J,"FB",FBPI,FBVEN,FBPAT,FBM,FBI)))
"RTN","FBPAY67",38,0)
 Q
"RTN","FBPAY67",39,0)
AN ;get data from an xref - called at tag fbaac in pay3 & pay67
"RTN","FBPAY67",40,0)
 I FBSORT G AN1
"RTN","FBPAY67",41,0)
 S FBVEN=FBVNAME_";"_FBVID,DFN=0 F  S DFN=$O(^FBAAC("AN",FBPI,DFN)) Q:'DFN  S FBPAT=$G(^DPT(DFN,0)),FBPNAME=$P(FBPAT,U),FBPID=$$SSN^FBAAUTL(DFN),FBPAT=FBPNAME_";"_DFN D OTH
"RTN","FBPAY67",42,0)
 Q
"RTN","FBPAY67",43,0)
AN1 S FBPAT=FBPNAME_";"_FBPID,FBVI=0 F  S FBVI=$O(^FBAAC("AN",FBPI,DFN,FBVI)) Q:'FBVI  S FBVNAME=$E($$VNAME^FBNHEXP(FBVI),1,23),FBVID=$$VID^FBNHEXP(FBVI),FBVEN=FBVNAME_";"_FBVID D OTH
"RTN","FBPAY67",44,0)
 Q
"RTN","FBPAY67",45,0)
OTH ;other fee programs - if 'fbsort (by vendor)
"RTN","FBPAY67",46,0)
 Q:'$O(^FBAAC("AN",FBPI,DFN,FBVI,0))
"RTN","FBPAY67",47,0)
 N J,K,L,M,Y,FBDT1 S J=DFN,K=FBVI
"RTN","FBPAY67",48,0)
 S L=0 F  S L=$O(^FBAAC("AN",FBPI,J,K,L)) Q:'L  S FBDT1=$P($G(^FBAAC(J,1,K,1,L,0)),U) I FBDT1]""&(FBDT1'<FBBDATE&(FBDT1'>FBEDATE)) D  S:FBOUT FBOUT=0
"RTN","FBPAY67",49,0)
 .S M=0 F  S M=$O(^FBAAC("AN",FBPI,J,K,L,M)) Q:'M  S Y=$G(^FBAAC(J,1,K,1,L,1,M,0)) I Y]"" D
"RTN","FBPAY67",50,0)
 ..S FBOUT=0 D EN1^FBPAY2 Q:FBOUT  D EN^FBPAY21
"RTN","FBPAY67",51,0)
 ..S ^TMP($J,"FB",FBPI_"O",FBVEN,FBPAT,(9999999.9999-FBDT1),L,M)=$G(FBR)_$$DATX^FBAAUTL(FBDT1)_U_FBAACPTC_FBCP_$S($G(FBMODLE)]"":"-"_FBMODLE,1:"")_U_A1_U_A2_U_T_U_FBBN_U_FBIN_U_D2_U_FBSC_U_FBPDX_U_FBOB
"RTN","FBPAY67",52,0)
 ..S ^TMP($J,"FB",FBPI_"O",FBVEN,FBPAT,(9999999.9999-FBDT1),L,M,"FBCK")="^"_FBCK_"^"_FBCKDT_"^"_FBCANDT_"^"_FBCANR_"^"_FBCAN_"^"_FBDIS_"^"_FBCKINT
"RTN","FBPAY67",53,0)
 Q
"RTN","FBPAY67",54,0)
ANC(FBM,FBI) ;ancillary payments - if fbsort (by patient)
"RTN","FBPAY67",55,0)
 N J,K,L,M,Y,FBDT1,FBVID
"RTN","FBPAY67",56,0)
 S J=FBIEN,FBCNT=0 I J,+FBIN(5),$D(^FBAAC("AM",FBIN(5),J)) D
"RTN","FBPAY67",57,0)
 .F K=0:0 S K=$O(^FBAAC("AM",FBIN(5),J,K)) Q:'K  S L=0 F  S L=$O(^FBAAC("AM",FBIN(5),J,K,L)) Q:'L  D
"RTN","FBPAY67",58,0)
 ..N FBOUT
"RTN","FBPAY67",59,0)
 ..S FBDT1=$P($G(^FBAAC(J,1,K,1,L,0)),U) I FBDT1]"" S FBDT2=(9999999.9999-FBDT1),FBDT1=$$DATX^FBAAUTL(FBDT1)
"RTN","FBPAY67",60,0)
 ..S M=0 F  S M=$O(^FBAAC("AM",FBIN(5),J,K,L,M)) Q:'M  S Y=$G(^FBAAC(J,1,K,1,L,1,M,0)) I Y]"" D
"RTN","FBPAY67",61,0)
 ...D EN1^FBPAY2 Q:'$D(FBAACPTC)!($G(FBOUT))  S FBCNT=FBCNT+1 D EN^FBPAY21
"RTN","FBPAY67",62,0)
 ...S ^TMP($J,"FB",FBPI,FBVEN,FBPAT,"A",K,L,M)=$G(FBR)_FBDT1_U_FBAACPTC_FBCP_$S($G(FBMODLE)]"":"-"_FBMODLE,1:"")_U_A1_U_A2_U_T_U_FBBN_U_FBIN_U_D2_U_FBSC_U_FBPDX_U_FBOB_U_FBVNAME_U_FBVID
"RTN","FBPAY67",63,0)
 ...S ^TMP($J,"FB",FBPI,FBVEN,FBPAT,"A",K,L,M,"FBCK")="^"_FBCK_"^"_FBCKDT_"^"_FBCANDT_"^"_FBCANR_"^"_FBCAN_"^"_FBDIS_"^"_FBCKINT
"RTN","FBPAY67",64,0)
 ...I $D(^TMP($J,"FB",FBPI_"O",FBVNAME_";"_FBVID,$P(FBPAT,";")_";"_$$SSN^FBAAUTL($P(FBPAT,";",2)),FBDT2)) K ^TMP($J,"FB",FBPI_"O",FBVNAME_";"_FBVID,$P(FBPAT,";")_";"_$$SSN^FBAAUTL($P(FBPAT,";",2)),FBDT2)
"RTN","FBPAY67",65,0)
 Q
"RTN","FBPAY671")
0^10^B27482119
"RTN","FBPAY671",1,0)
FBPAY671 ;AISC/DMK,TET-CH/CNH PAYMENT HISTORY PRINT ;7/18/2001
"RTN","FBPAY671",2,0)
 ;;3.5;FEE BASIS;**4,32,55**;JAN 30, 1995
"RTN","FBPAY671",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBPAY671",4,0)
PRINT ;print data from tmp global
"RTN","FBPAY671",5,0)
 S FBOUT=0 D:FBCRT&(FBPG) CR Q:FBOUT
"RTN","FBPAY671",6,0)
 S FBHEAD=$S(FBSORT:"VETERAN",1:"VENDOR")
"RTN","FBPAY671",7,0)
EN1 N FBI ;entry point from fbchdi
"RTN","FBPAY671",8,0)
 D HDR S FBVI="" F  S FBVI=$O(^TMP($J,"FB",FBPI,FBVI)) Q:FBVI']""!(FBOUT)  D:FBSORT SH Q:FBOUT  S FBPT="" F  S FBPT=$O(^TMP($J,"FB",FBPI,FBVI,FBPT)) Q:FBPT']""!(FBOUT)  D  Q:FBOUT  D CKANC Q:FBOUT
"RTN","FBPAY671",9,0)
 .D:'FBSORT SH Q:FBOUT  S FBDT=0 F  S FBDT=$O(^TMP($J,"FB",FBPI,FBVI,FBPT,FBDT)) Q:'FBDT!(FBOUT)  S FBI=0 F  S FBI=$O(^TMP($J,"FB",FBPI,FBVI,FBPT,FBDT,FBI)) Q:'FBI!(FBOUT)  D  Q:FBOUT
"RTN","FBPAY671",10,0)
 ..I ($Y+5)>IOSL D PAGE Q:FBOUT
"RTN","FBPAY671",11,0)
 ..S FBDATA=^TMP($J,"FB",FBPI,FBVI,FBPT,FBDT,FBI),A2=$$EXTRL^FBMRASVR($P(FBDATA,U,3))
"RTN","FBPAY671",12,0)
 ..S FBLOC=2_U_23_U_33_U_42_U_49_U_61_U_71
"RTN","FBPAY671",13,0)
 ..W ! W:$P(FBDATA,U,8)["R" "*" W:$P(FBDATA,U,9)]"" "#"
"RTN","FBPAY671",14,0)
 ..F I=1:1:7 W ?$P(FBLOC,U,I),$P(FBDATA,U,I)
"RTN","FBPAY671",15,0)
 ..F FBY="DX","PROC" I $D(^TMP($J,"FB",FBPI,FBVI,FBPT,FBDT,FBI,FBY)) S FBDATA=^(FBY),FBSL=$L(FBDATA,"^") W !?2,FBY,": " F I=1:1:FBSL W $P(FBDATA,U,I),"    "
"RTN","FBPAY671",16,0)
 ..I $D(^TMP($J,"FB",FBPI,FBVI,FBPT,FBDT,FBI,"FBCK")) D EFBCK^FBPAY21(^TMP($J,"FB",FBPI,FBVI,FBPT,FBDT,FBI,"FBCK")) D PMNT^FBAACCB2 K A2
"RTN","FBPAY671",17,0)
 Q
"RTN","FBPAY671",18,0)
CKANC I +$O(^TMP($J,"FB",FBPI,FBVI,FBPT,"A",0)) D PANC(FBI) Q:FBOUT  W !,FBDASH1
"RTN","FBPAY671",19,0)
 Q
"RTN","FBPAY671",20,0)
PANC(FBI) ;print anc data - FBI = unique number; called by fbpay3
"RTN","FBPAY671",21,0)
 S (FBOV,FBK)=0,FBSL=8,FBLOC=1_U_12_U_23_U_33_U_43_U_56_U_62_U_71 D SHA Q:FBOUT
"RTN","FBPAY671",22,0)
 F  S FBK=$O(^TMP($J,"FB",FBPI,FBVI,FBPT,"A",FBK)) Q:'FBK!(FBOUT)  S FBL=0 F  S FBL=$O(^TMP($J,"FB",FBPI,FBVI,FBPT,"A",FBK,FBL)) Q:'FBL!(FBOUT)  S FBM=0 F  S FBM=$O(^TMP($J,"FB",FBPI,FBVI,FBPT,"A",FBK,FBL,FBM)) Q:'FBM!(FBOUT)  D
"RTN","FBPAY671",23,0)
 .S FBDATA=^TMP($J,"FB",FBPI,FBVI,FBPT,"A",FBK,FBL,FBM)
"RTN","FBPAY671",24,0)
 .S FBV=$P(FBDATA,U,12)_";"_$P(FBDATA,U,13)
"RTN","FBPAY671",25,0)
 .D WRT
"RTN","FBPAY671",26,0)
 K FBK,FBL,FBM Q
"RTN","FBPAY671",27,0)
WRT ;write ancillary info
"RTN","FBPAY671",28,0)
 I ($Y+6)>IOSL D PAGE Q:FBOUT  D SHA Q:FBOUT  D SHA2 Q:FBOUT
"RTN","FBPAY671",29,0)
 D:FBOV'=FBV SHA2
"RTN","FBPAY671",30,0)
 S FBCKIN=$G(^TMP($J,"FB",FBPI,FBVI,FBPT,"A",FBK,FBL,FBM,"FBCK")) D EFBCK^FBPAY21(FBCKIN)
"RTN","FBPAY671",31,0)
 W ! W:$G(FBCAN)]"" "+"
"RTN","FBPAY671",32,0)
 S I=1 W ?$P(FBLOC,U,I),$P(FBDATA,U,I)
"RTN","FBPAY671",33,0)
 S I=2 W ?$P(FBLOC,U,I),$P($P(FBDATA,U,I),",")
"RTN","FBPAY671",34,0)
 F I=3:1:FBSL W ?$P(FBLOC,U,I),$P(FBDATA,U,I)
"RTN","FBPAY671",35,0)
 I $P($P(FBDATA,U,2),",",2)]"" D  Q:FBOUT
"RTN","FBPAY671",36,0)
 . N FBI,FBMOD
"RTN","FBPAY671",37,0)
 . F FBI=2:1 S FBMOD=$P($P(FBDATA,U,2),",",FBI) Q:FBMOD=""  D  Q:FBOUT
"RTN","FBPAY671",38,0)
 . . I $Y+6>IOSL D PAGE Q:FBOUT  D SHA Q:FBOUT  D SHA2 Q:FBOUT  W !,"  (continued)"
"RTN","FBPAY671",39,0)
 . . W !,?$P(FBLOC,U,2)+5,"-",FBMOD
"RTN","FBPAY671",40,0)
 W !?4,"Primary Dx: ",$P(FBDATA,U,10),?40,"S/C Condition? ",$P(FBDATA,U,9),?66,"Obl.#: ",$P(FBDATA,U,11)
"RTN","FBPAY671",41,0)
 N A2 S A2=$$EXTRL^FBMRASVR($P(FBDATA,U,4))
"RTN","FBPAY671",42,0)
 D PMNT^FBAACCB2
"RTN","FBPAY671",43,0)
 Q
"RTN","FBPAY671",44,0)
HDR ;main header
"RTN","FBPAY671",45,0)
 I FBPG>0!FBCRT W @IOF
"RTN","FBPAY671",46,0)
 S FBPG=FBPG+1
"RTN","FBPAY671",47,0)
 I $D(FBHEAD) D
"RTN","FBPAY671",48,0)
 .W !?25,FBHEAD_" PAYMENT HISTORY"
"RTN","FBPAY671",49,0)
 .I $G(FB1725R)]"",FB1725R'="A" W " ",$S(FB1725R="M":"for 38 U.S.C. 1725 Claims",1:"excluding 38 U.S.C. 1725 Claims")
"RTN","FBPAY671",50,0)
 .W !,?24,$E(FBDASH,1,24),?71,"Page: ",FBPG,!?48,"Date Range: ",$$DATX^FBAAUTL(FBBDATE)," to ",$$DATX^FBAAUTL(FBEDATE)
"RTN","FBPAY671",51,0)
 I '$D(FBHEAD) W !?30,"INVOICE DISPLAY",!?29,$E(FBDASH,1,17),!
"RTN","FBPAY671",52,0)
 W ! W:FBSORT "Patient: ",FBPNAME,?41,"Patient ID: ",FBPID W:'FBSORT "Vendor: ",FBVNAME,?41,"Vendor ID: ",FBVID
"RTN","FBPAY671",53,0)
 ;W ?71,"Page: ",FBPG
"RTN","FBPAY671",54,0)
 W !?(IOM-(13+$L(FBPROG(+FBPI)))/2),"FEE PROGRAM: ",FBPROG(+FBPI)
"RTN","FBPAY671",55,0)
 W !?3,"('*' Reimb. to Patient  '+' Cancel. Activity  '#' Voided Payment)"
"RTN","FBPAY671",56,0)
 W !,?3,"(paid symbol: 'R' RBRVS  'F' 75th percentile  'C' contract  'M' Mill Bill"
"RTN","FBPAY671",57,0)
 W !,?3,"              'U' U&C)"
"RTN","FBPAY671",58,0)
 W !?2,"Inv Date",?23,"Amount",?33," Amount",?42,"Susp",?49,"Invoice",?61,"From",?73,"To"
"RTN","FBPAY671",59,0)
 W !?23,"Claimed",?35,"Paid",?42,"Code",?53,"Num",?61,"Date",?71,"Date",!,FBDASH
"RTN","FBPAY671",60,0)
 Q
"RTN","FBPAY671",61,0)
SH ;subheader - vendor if fbsort; patient if 'fbsort, prints when name changed
"RTN","FBPAY671",62,0)
 I ($Y+7)>IOSL D:FBCRT CR Q:FBOUT  D HDR
"RTN","FBPAY671",63,0)
 I FBSORT W !!,"Vendor: ",$P(FBVI,";"),?41,"Vendor ID: ",$P(FBVI,";",2)
"RTN","FBPAY671",64,0)
 I 'FBSORT W !!,"Patient: ",$P(FBPT,";"),?41,"Patient ID: ",$$SSN^FBAAUTL($P(FBPT,";",2))
"RTN","FBPAY671",65,0)
 Q
"RTN","FBPAY671",66,0)
SHA ;ancillary subheader
"RTN","FBPAY671",67,0)
 I ($Y+14)>IOSL D PAGE Q:FBOUT
"RTN","FBPAY671",68,0)
 W !?20,">>> ANCILLARY SERVICE PAYMENTS <<<",!
"RTN","FBPAY671",69,0)
SHA1 ;subheader for ancillary data
"RTN","FBPAY671",70,0)
 W !,?2,"Svc Date",?11,"CPT Code",?23,"Amount",?33," Amount",?42,"Susp",?57,"Batch",?63,"Invoice",?71,"Voucher"
"RTN","FBPAY671",71,0)
 W !,?23,"Claimed",?35,"Paid",?42,"Code",?58,"Num",?64,"Num",?72,"Date",!,FBDASH1
"RTN","FBPAY671",72,0)
 Q
"RTN","FBPAY671",73,0)
SHA2 ;subheader for vendor name
"RTN","FBPAY671",74,0)
 I ($Y+5)>IOSL D:FBCRT CR Q:FBOUT  D HDR,SH,SHA
"RTN","FBPAY671",75,0)
 I FBOV'=FBV S FBOV=FBV
"RTN","FBPAY671",76,0)
 W !!,"Vendor: ",$P(FBV,";"),?41,"Vendor ID: ",$P(FBV,";",2)
"RTN","FBPAY671",77,0)
 Q
"RTN","FBPAY671",78,0)
CR ;read for display
"RTN","FBPAY671",79,0)
 Q:'FBPG  S DIR(0)="E" W ! D ^DIR K DIR S:$D(DUOUT)!($D(DTOUT)) FBOUT=1
"RTN","FBPAY671",80,0)
 Q
"RTN","FBPAY671",81,0)
PAGE ;new page
"RTN","FBPAY671",82,0)
 I FBCRT D CR Q:FBOUT
"RTN","FBPAY671",83,0)
 D HDR,SH
"RTN","FBPAY671",84,0)
 Q
"RTN","FBPAY671",85,0)
WRTDX I $P(FBDX,"^",K)]"" W ?4,"Dx: ",$$ICD9^FBCSV1($P(FBDX,"^",K)),"  " Q
"RTN","FBPAY671",86,0)
 Q
"RTN","FBPAY671",87,0)
WRTPC I $P(FBPROC,"^",L)]"" W ?4,"Proc: ",$$ICD0^FBCSV1($P(FBPROC,"^",L)),"   " Q
"RTN","FBPAY671",88,0)
 Q
"RTN","FBPAY671",89,0)
WRTSC ;write service connected
"RTN","FBPAY671",90,0)
 W !,"SERVICE CONNECTED? ",$S(+VAEL(3):"YES",1:"NO"),!
"RTN","FBPAY671",91,0)
 Q
"RTN","FBPAY671",92,0)
TRAV ;write out travel payments, (FBPAT,FBSORT) must be defined
"RTN","FBPAY671",93,0)
 S FBTRDT=0
"RTN","FBPAY671",94,0)
 F  S FBTRDT=$O(^TMP($J,"FBTR",FBPAT,FBTRDT)) Q:'FBTRDT  S FBTRX=0 F  S FBTRX=$O(^TMP($J,"FBTR",FBPAT,FBTRDT,FBTRX)) Q:'FBTRX  S FBCKIN=^(FBTRX),A2=$P(FBCKIN,"^") D TRCK Q:FBOUT  W:$G(FBTRCK) !,?5,"TRAVEL PAYMENTS: " D  K FBTRCK
"RTN","FBPAY671",95,0)
 .W ?22,$$DATX^FBAAUTL(FBTRDT),?35,A2
"RTN","FBPAY671",96,0)
 .S A2=$$EXTRL^FBMRASVR(A2) D EFBCK^FBPAY21(FBCKIN),PMNT^FBAACCB2
"RTN","FBPAY671",97,0)
 .K A2 W ! Q
"RTN","FBPAY671",98,0)
 Q
"RTN","FBPAY671",99,0)
TRCK I ($Y+5)>IOSL D:FBCRT CR Q:FBOUT  D HDR^FBPAY21
"RTN","FBPAY671",100,0)
 Q
"RTN","FBPCR2")
0^11^B25843522
"RTN","FBPCR2",1,0)
FBPCR2 ;ALBISC/DMK,GRR,TET-OUTPATIENT POTENTIAL COST RECOVERY SORT/PRINT ;5/12/1999
"RTN","FBPCR2",2,0)
 ;;3.5;FEE BASIS;**4,48,55**;JAN 30, 1995
"RTN","FBPCR2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBPCR2",4,0)
EN ;entry point
"RTN","FBPCR2",5,0)
 S (FBCATC,FBINS,FBPSF)=0
"RTN","FBPCR2",6,0)
SORT ;sort by date finalized, patient, vendor, treatment ien, service ien
"RTN","FBPCR2",7,0)
 S I=FBBDATE-.1 F  S I=$O(^FBAAC("AK",I)) Q:'I!(I>FBEDATE)  S J=0 F  S J=$O(^FBAAC("AK",I,J)) Q:'J  D
"RTN","FBPCR2",8,0)
 .S DFN=J D VET^FBPCR
"RTN","FBPCR2",9,0)
 .S K=0  F  S K=$O(^FBAAC("AK",I,J,K)) Q:'K  S L=0 F  S L=$O(^FBAAC("AK",I,J,K,L)) Q:'L  D SETTR S M=0 F  S M=$O(^FBAAC("AK",I,J,K,L,M)) Q:'M  D  S (FBCATC,FBINS,FBPSF)=0
"RTN","FBPCR2",10,0)
 ..D SET Q:'FBPSV&('$D(FBPSV(FBPSF)))  I FBCATC!FBINS D SETTMP
"RTN","FBPCR2",11,0)
KILL ;kill variables set in this routine
"RTN","FBPCR2",12,0)
 K A1,A2,A3,D,D2,DFN,FBAACPTC,FBBN,FBCATC,FBCP,FBDOB,FBDOS,FBDT,FBDT1,FBIN,FBINS,FBOB,FBP,FBPAT,FBPCR,FBPDX,FBPDXC,FBPID,FBPNAME,FBPSF,FBSC,FBTA,FBTYPE,FBVEN,FBVID,FBVNAME,FBVP,I,J,K,L,M,T,Y,FBMODLE
"RTN","FBPCR2",13,0)
 Q
"RTN","FBPCR2",14,0)
SET ;set variables - also entry point from FBPCR67
"RTN","FBPCR2",15,0)
 N FBPCR
"RTN","FBPCR2",16,0)
 S Y=$G(^FBAAC(J,1,K,1,L,1,M,0)) Q:'+$P(Y,U,9)!($G(^FBAAC(J,1,K,1,L,1,M,"FBREJ"))]"")
"RTN","FBPCR2",17,0)
 S FBVNAME=$E($P($G(^FBAAV(K,0)),U),1,23),FBVID=$S(FBVNAME]"":$P(^(0),U,2),1:"")
"RTN","FBPCR2",18,0)
 S FBP=+$P(Y,U,9),FBSC=$P(Y,U,27),FBPDX=+$P(Y,U,23),FBPSF=+$P(Y,U,12)
"RTN","FBPCR2",19,0)
 S FBSC=$S(FBSC="Y":"YES",FBSC="N":"NO",1:"-")
"RTN","FBPCR2",20,0)
 S T=$P(Y,U,5),D2=$P(Y,U,6),FBDOS=D2,D2=$$DATX^FBAAUTL(D2),FBCP=$P(Y,U,18),FBCP=$S(FBCP=1:"(C&P)",1:"")
"RTN","FBPCR2",21,0)
 Q:FBCP]""!('FBPSV&('$D(FBPSV(FBPSF))))  S FBPCR=+$G(^FBAAC(J,1,K,1,L,0)),FBCATC=$$CATC^FBPCR(DFN,FBPCR,+$P(Y,U,18)),FBINS=$S(FBSC["N":$$INSURED^FBPCR4(DFN,FBPCR),1:0) Q:'FBCATC&'FBINS
"RTN","FBPCR2",22,0)
 S FBAACPTC=$$CPT^FBAAUTL4($P(Y,U))
"RTN","FBPCR2",23,0)
 S FBOB=$P(Y,U,10)
"RTN","FBPCR2",24,0)
 I T]"" S T=$P($G(^FBAA(161.27,+T,0)),U)
"RTN","FBPCR2",25,0)
 S FBTYPE=$P(Y,U,20),FBVP=$P(Y,U,21),FBIN=$P(Y,U,16),FBBN=$P(Y,U,8),FBBN=$S(FBBN']"":"",$D(^FBAA(161.7,FBBN,0)):$P(^(0),U),1:""),FBBN=$S(FBBN="":"",1:$E("00000",$L(FBBN)+1,5)_FBBN)
"RTN","FBPCR2",26,0)
 S FBVEN=FBVNAME_";"_FBVID,FBPAT=FBPNAME_";"_DFN
"RTN","FBPCR2",27,0)
 S FBMODLE=$$MODL^FBAAUTL4("^FBAAC("_J_",1,"_K_",1,"_L_",1,"_M_",""M"")","E")
"RTN","FBPCR2",28,0)
 ;output format
"RTN","FBPCR2",29,0)
 S A1=$J($P(Y,U,2),6,2),A2=$J($P(Y,U,3),6,2),A3=$J(A3,6,2),FBIN=$J(FBIN,7)
"RTN","FBPCR2",30,0)
 S FBDT1=$S(FBVP="VP":"#",1:"")_$S(FBTYPE="R":"*",1:" ")_FBDT
"RTN","FBPCR2",31,0)
 Q
"RTN","FBPCR2",32,0)
SETTMP ;sort data by primary service facility, patient, fee program, vendor, date
"RTN","FBPCR2",33,0)
 Q:$$FILTER^FBPCR4()=0
"RTN","FBPCR2",34,0)
 I $P(Y,U,9)'=FBPI Q
"RTN","FBPCR2",35,0)
 S ^TMP($J,"FB",FBPSF,FBPAT,FBP,FBVEN,I,L_M)=FBDT1_U_FBAACPTC_FBCP_$S($G(FBMODLE)]"":"-"_FBMODLE,1:"")_U_A1_U_A2_U_T_U_FBBN_U_FBIN_U_D2_U_FBSC_U_FBPDX_U_FBOB_U_FBPI_U_FBCATC_U_FBINS
"RTN","FBPCR2",36,0)
 Q
"RTN","FBPCR2",37,0)
SETTR S D=$S($D(^FBAAC(J,1,K,1,L,0)):$P(^(0),"^",1),1:""),A3=".00"
"RTN","FBPCR2",38,0)
 I D]"",$D(^FBAAC(J,3,"AB",D)) S FBTA=$O(^FBAAC(J,3,"AB",D,0)),A3=$S($P(^FBAAC(J,3,FBTA,0),"^",3)]"":$P(^(0),"^",3),1:.0001)
"RTN","FBPCR2",39,0)
 S FBDT=$$DATX^FBAAUTL(D)
"RTN","FBPCR2",40,0)
 Q
"RTN","FBPCR2",41,0)
EN1 ;entry point to set variables, called by fbpcr67, anc
"RTN","FBPCR2",42,0)
 N FBVEN,FBPAT,FBDT1
"RTN","FBPCR2",43,0)
 D SETTR,SET
"RTN","FBPCR2",44,0)
 Q
"RTN","FBPCR2",45,0)
PRINT ;write output
"RTN","FBPCR2",46,0)
 D HDR1 S FBVI="" F  S FBVI=$O(^TMP($J,"FB",FBPSF,FBPT,FBPI,FBVI)) Q:FBVI']""!(FBOUT)  D SH Q:FBOUT  D  Q:FBOUT
"RTN","FBPCR2",47,0)
 .S FBDT=0 F  S FBDT=$O(^TMP($J,"FB",FBPSF,FBPT,FBPI,FBVI,FBDT)) Q:'FBDT  S M=0 F  S M=$O(^TMP($J,"FB",FBPSF,FBPT,FBPI,FBVI,FBDT,M)) Q:'M  D  Q:FBOUT
"RTN","FBPCR2",48,0)
 ..I ($Y+4)>IOSL D PAGE Q:FBOUT
"RTN","FBPCR2",49,0)
 ..S FBDATA=^TMP($J,"FB",FBPSF,FBPT,FBPI,FBVI,FBDT,M),FBCATC=$P(FBDATA,U,13),FBINS=$P(FBDATA,U,14)
"RTN","FBPCR2",50,0)
 ..S FBLOC=1_U_12_U_23_U_33_U_47_U_57_U_63_U_71
"RTN","FBPCR2",51,0)
 ..W !
"RTN","FBPCR2",52,0)
 ..S I=1 W ?$P(FBLOC,U,I),$P(FBDATA,U,I)
"RTN","FBPCR2",53,0)
 ..S I=2 W ?$P(FBLOC,U,I),$P($P(FBDATA,U,I),",")
"RTN","FBPCR2",54,0)
 ..F I=3:1:8 W ?$P(FBLOC,U,I),$P(FBDATA,U,I)
"RTN","FBPCR2",55,0)
 ..I $P($P(FBDATA,U,2),",",2)]"" D  Q:FBOUT
"RTN","FBPCR2",56,0)
 ...N FBI,FBMOD
"RTN","FBPCR2",57,0)
 ...F FBI=2:1 S FBMOD=$P($P(FBDATA,U,2),",",FBI) Q:FBMOD=""  D  Q:FBOUT
"RTN","FBPCR2",58,0)
 ....I $Y+6>IOSL D PAGE Q:FBOUT  W !,"  (continued)"
"RTN","FBPCR2",59,0)
 ....W !,?$P(FBLOC,U,2)+5,"-",FBMOD
"RTN","FBPCR2",60,0)
 ..S FBPDX=$P(FBDATA,U,10),FBPDXC=$$ICD9^FBCSV1(FBPDX,$$DT2FMDT^FBCSV1($P(FBDATA,U))),$P(FBDATA,U,10)=$E($$ICD9P^FBCSV1(FBPDX,3,$$DT2FMDT^FBCSV1($P(FBDATA,U))),1,19),FBPDXC=$S(FBPDXC="":"",1:" ("_FBPDXC_")")
"RTN","FBPCR2",61,0)
 ..W !?3,"Primary Dx: ",$P(FBDATA,U,10),FBPDXC,?45,"S/C Condition? ",$P(FBDATA,U,9) W ?66,"Obl.#: ",$P(FBDATA,U,11)
"RTN","FBPCR2",62,0)
 ..I FBCATC!FBINS D
"RTN","FBPCR2",63,0)
 ...W !?5,">>>"
"RTN","FBPCR2",64,0)
 ...I FBCATC=0 W "Cost recover from insurance."
"RTN","FBPCR2",65,0)
 ...I FBCATC=1 W "Cost recover from means testing"_$S(FBINS:" and insurance.",1:".")
"RTN","FBPCR2",66,0)
 ...I FBCATC=2 W "Cost recover from LTC co-pay"_$S(FBINS:" and insurance.",1:".")
"RTN","FBPCR2",67,0)
 ...I FBCATC=3 W $S(FBINS:"Cost recover from insurance, ",1:"")_"1010EC Missing for LTC Patient."
"RTN","FBPCR2",68,0)
 ...I FBCATC=4 W $S(FBINS:"Cost Recover from insurance and ",1:"")_"Potential Cost Recover from LTC co-pay."
"RTN","FBPCR2",69,0)
 ..S A3=".00"
"RTN","FBPCR2",70,0)
 Q
"RTN","FBPCR2",71,0)
HDR ;main header
"RTN","FBPCR2",72,0)
 D HDR^FBPCR Q:FBOUT
"RTN","FBPCR2",73,0)
HDR1 W !!?(IOM-(13+$L(FBXPROG))/2),"FEE PROGRAM: ",FBXPROG
"RTN","FBPCR2",74,0)
 W !!,?2,"Svc Date",?11,"CPT-MOD",?23,"Amount",?33," Amount",?42,"Susp",?49,"Travel",?57,"Batch",?63,"Invoice",?71,"Voucher"
"RTN","FBPCR2",75,0)
 W !,?23,"Claimed",?35,"Paid",?42,"Code",?50,"Paid",?58,"Num",?64,"Num",?72,"Date",!,FBDASH
"RTN","FBPCR2",76,0)
 Q
"RTN","FBPCR2",77,0)
SH ;subheader - vendor, prints when name changed
"RTN","FBPCR2",78,0)
 I ($Y+6)>IOSL D HDR Q:FBOUT
"RTN","FBPCR2",79,0)
 W !!,"Vendor: ",$P(FBVI,";"),?41,"Vendor ID: ",$P(FBVI,";",2)
"RTN","FBPCR2",80,0)
 Q
"RTN","FBPCR2",81,0)
CR ;read for display
"RTN","FBPCR2",82,0)
 S DIR(0)="E" W ! D ^DIR K DIR S:$D(DUOUT)!($D(DTOUT)) FBOUT=1
"RTN","FBPCR2",83,0)
 Q
"RTN","FBPCR2",84,0)
PAGE ;new page
"RTN","FBPCR2",85,0)
 D HDR Q:FBOUT  D SH
"RTN","FBPCR2",86,0)
 Q
"RTN","FBPCR67")
0^12^B16749704
"RTN","FBPCR67",1,0)
FBPCR67 ;AISC/DMK,TET-CH/CNH POTENTIAL COST RECOVERY SORT ;5/12/1999
"RTN","FBPCR67",2,0)
 ;;3.5;FEE BASIS;**4,48,55**;JAN 30, 1995
"RTN","FBPCR67",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBPCR67",4,0)
EN ;entry point for sort
"RTN","FBPCR67",5,0)
 S (FBCATC,FBINS,FBPSF)=0
"RTN","FBPCR67",6,0)
SORT ;sort by date finalized, ien
"RTN","FBPCR67",7,0)
 S FBM=FBBDATE-.1 F  S FBM=$O(^FBAAI("AD",FBM)) Q:'FBM!(FBM>FBEDATE)  S FBI=0 F  S FBI=$O(^FBAAI("AD",FBM,FBI)) Q:FBI'>0  S FBIN=$G(^FBAAI(FBI,0)) I FBIN]""&($G(^FBAAI(FBI,"FBREJ"))']"") D  S (FBCATC,FBINS,FBPSF)=0
"RTN","FBPCR67",8,0)
 .S (DFN,J)=+$P(FBIN,U,4) D VET^FBPCR
"RTN","FBPCR67",9,0)
 .D SET Q:FBPI'[+$P(FBIN,U,12)!('FBPSV&('$D(FBPSV(FBPSF))))  I FBCATC!FBINS D SETTMP
"RTN","FBPCR67",10,0)
KILL ;kill variables set in this routine and in FPAY2, sort/set sections
"RTN","FBPCR67",11,0)
 K A1,A2,A3,D,D2,DFN,FBAACPTC,FBBN,FBCATC,FBCNT,FBCP,FBDOB,FBDT,FBDT1,FBDX,FBDX1,FBI,FBIN,FBINS,FBIX,FBJ,FBM,FBOB,FBPAT,FBPDX,FBPROC,FBPROC1,FBPSF,FBSC,FBTA,FBVEN,FBVENID,FBVP,I,J,K,L,M,Y
"RTN","FBPCR67",12,0)
 K FBVNAME,FBVID,FBPNAME,FBPID
"RTN","FBPCR67",13,0)
 D KILL^FBPCR2
"RTN","FBPCR67",14,0)
 Q
"RTN","FBPCR67",15,0)
SET ;set variables
"RTN","FBPCR67",16,0)
 ;I $G(FBPROG)]"",'FBPROG,'$D(FBPROG(+$P(FBIN,U,12))) Q
"RTN","FBPCR67",17,0)
 F FBJ=1,2,3,4,6,7,8,9,11,13,14 S FBIN(FBJ)=$P(FBIN,"^",FBJ)
"RTN","FBPCR67",18,0)
 Q:FBPI'[+$P(FBIN,U,12)  S FBPSF=+$P(FBIN,U,20)
"RTN","FBPCR67",19,0)
 Q:'FBPSV&('$D(FBPSV(FBPSF)))
"RTN","FBPCR67",20,0)
 D
"RTN","FBPCR67",21,0)
 . N FBCATC2
"RTN","FBPCR67",22,0)
 . S FBCATC=$$CATC^FBPCR(DFN,+$P(FBIN,U,6),+$P(FBIN,U,18))
"RTN","FBPCR67",23,0)
 . Q:FBCATC=2
"RTN","FBPCR67",24,0)
 . S FBCATC2=$$CATC^FBPCR(DFN,+$P(FBIN,U,7),+$P(FBIN,U,18))
"RTN","FBPCR67",25,0)
 . I FBCATC2=0 Q
"RTN","FBPCR67",26,0)
 . I FBCATC=0!(FBCATC=1) S FBCATC=FBCATC2 Q
"RTN","FBPCR67",27,0)
 . S:FBCATC2=2 FBCATC=2
"RTN","FBPCR67",28,0)
 ;,FBINS=$S($O(^FBAAA("AIC",FBIN(4),+$O(^FBAAA("AIC",FBIN(4),-FBIN(6))),0))="Y":1,1:0)
"RTN","FBPCR67",29,0)
 S FBINS=$S($$INSCK^FBPCR3(FBIN(6),FBIN(4),+$P(FBIN,U,12))=1:$$INSURED^FBPCR4(DFN,+$P(FBIN,U,6),+$P(FBIN,U,7)),1:0)
"RTN","FBPCR67",30,0)
 Q:'FBCATC&'FBINS
"RTN","FBPCR67",31,0)
 S FBIN(5)=$P(FBIN,U,5)
"RTN","FBPCR67",32,0)
 S FBIEN=FBIN(3),FBVNAME=$G(^FBAAV(FBIN(3),0)) Q:FBVNAME']""  S FBVID=$P(FBVNAME,U,2),FBVNAME=$E($P(FBVNAME,U),1,23)
"RTN","FBPCR67",33,0)
 S FBIN(2)=$$DATX^FBAAUTL(FBIN(2)),FBVEN=FBVNAME_";"_FBVID,FBPAT=FBPNAME_";"_DFN
"RTN","FBPCR67",34,0)
 S FBIN(6)=$$DATX^FBAAUTL(FBIN(6)),FBIN(7)=$$DATX^FBAAUTL(FBIN(7))
"RTN","FBPCR67",35,0)
 Q
"RTN","FBPCR67",36,0)
SETTMP ;sort data by primary service facility, patient, fee program, vendor, date
"RTN","FBPCR67",37,0)
 Q:$$FILTER^FBPCR4()=0
"RTN","FBPCR67",38,0)
 S ^TMP($J,"FB",FBPSF,FBPAT,+$P(FBIN,U,12),FBVEN,FBM,FBI)=FBIN(2)_U_$J(FBIN(8),8,2)_U_$J(FBIN(9),8,2)_U_FBIN(11)_U_$J(FBIN(1),8)_U_FBIN(6)_U_FBIN(7)_U_$P(FBIN,U,12)_U_FBCATC_U_FBINS_U_FBIN(13)_U_FBIN(14)
"RTN","FBPCR67",39,0)
 S FBDX=$G(^FBAAI(FBI,"DX")) I FBDX]"" S FBDX1="" F I=1:1:5 S:$P(FBDX,U,I) FBDX1=FBDX1_$$ICD9^FBCSV1($P(FBDX,U,I),+$P($G(FBIN),U,6))_U
"RTN","FBPCR67",40,0)
 I FBDX]"" S FBDX1=$P(FBDX1,U,1,($L(FBDX1,U)-1)),^TMP($J,"FB",FBPSF,FBPAT,+$P(FBIN,U,12),FBVEN,FBM,FBI,"DX")=FBDX1
"RTN","FBPCR67",41,0)
 S FBPROC=$G(^FBAAI(FBI,"PROC")) I FBPROC]"" S FBPROC1="" F I=1:1:5 S:$P(FBPROC,U,I) FBPROC1=FBPROC1_$$ICD0^FBCSV1($P(FBPROC,U,I),+$P($G(FBIN),U,6))_U
"RTN","FBPCR67",42,0)
 I FBPROC]"" S FBPROC1=$P(FBPROC1,U,1,($L(FBPROC1,U)-1)),^TMP($J,"FB",FBPSF,FBPAT,+$P(FBIN,U,12),FBVEN,FBM,FBI,"PROC")=FBPROC1
"RTN","FBPCR67",43,0)
 ;*** removed conditional to get ancillary payments processed
"RTN","FBPCR67",44,0)
 ;D ANC:$D(^TMP($J,"FB",FBPSF,FBPAT,FBPI,FBVEN,FBM,FBI))
"RTN","FBPCR67",45,0)
 D ANC
"RTN","FBPCR67",46,0)
 Q
"RTN","FBPCR67",47,0)
ANC ;ancillary payments
"RTN","FBPCR67",48,0)
 N J,K,L,M,Y,FBDT1,FBVID I FBPI=67 N FBPI S FBPI=+$P(FBIN,U,12)
"RTN","FBPCR67",49,0)
 S J=DFN,FBCNT=0 I J,+FBIN(5),$D(^FBAAC("AM",FBIN(5),J)) D
"RTN","FBPCR67",50,0)
 .F K=0:0 S K=$O(^FBAAC("AM",FBIN(5),J,K)) Q:'K  S L=0 F  S L=$O(^FBAAC("AM",FBIN(5),J,K,L)) Q:'L  D
"RTN","FBPCR67",51,0)
 ..S FBDT1=$P($G(^FBAAC(J,1,K,1,L,0)),U) I FBDT1]"" S FBDT1=$$DATX^FBAAUTL(FBDT1)
"RTN","FBPCR67",52,0)
 ..S M=0 F  S M=$O(^FBAAC("AM",FBIN(5),J,K,L,M)) Q:'M  S Y=$G(^FBAAC(J,1,K,1,L,1,M,0)) I Y]"" D
"RTN","FBPCR67",53,0)
 ...D EN1^FBPCR2 Q:'$D(FBAACPTC)  S FBCNT=FBCNT+1
"RTN","FBPCR67",54,0)
 ...Q:$$FILTER^FBPCR4()=0
"RTN","FBPCR67",55,0)
 ...S ^TMP($J,"FB",FBPSF,FBPAT,FBPI,FBVEN,FBM,FBI,"A",FBCNT)=FBDT1_U_FBAACPTC_FBCP_$S($G(FBMODLE)]"":"-"_FBMODLE,1:"")_U_A1_U_A2_U_FBBN_U_FBIN_U_D2_U_FBSC_U_FBPDX_U_FBOB_U_FBVNAME_U_FBVID_U_FBPI_U_FBCATC_U_FBINS
"RTN","FBPCR67",56,0)
 Q
"RTN","FBPCR671")
0^13^B18854579
"RTN","FBPCR671",1,0)
FBPCR671 ;AISC/DMK,TET-CH/CNH POTENTIAL COST RECOVERY PRINT ;5/12/1999
"RTN","FBPCR671",2,0)
 ;;3.5;FEE BASIS;**4,48,55**;JAN 30, 1995
"RTN","FBPCR671",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBPCR671",4,0)
PRINT ;print data from tmp global
"RTN","FBPCR671",5,0)
 I FBPG>1&(($Y+12)>IOSL) D HDR Q:FBOUT
"RTN","FBPCR671",6,0)
 E  D HDR1
"RTN","FBPCR671",7,0)
 S FBVI="" F  S FBVI=$O(^TMP($J,"FB",FBPSF,FBPT,FBPI,FBVI)) Q:FBVI']""!(FBOUT)  D SH Q:FBOUT  D  Q:FBOUT
"RTN","FBPCR671",8,0)
 .S FBDT=0 F  S FBDT=$O(^TMP($J,"FB",FBPSF,FBPT,FBPI,FBVI,FBDT)) Q:'FBDT  S FBI=0 F  S FBI=$O(^TMP($J,"FB",FBPSF,FBPT,FBPI,FBVI,FBDT,FBI)) Q:'FBI  D  Q:FBOUT
"RTN","FBPCR671",9,0)
 ..I ($Y+5)>IOSL D PAGE Q:FBOUT
"RTN","FBPCR671",10,0)
 ..S FBDATA=^TMP($J,"FB",FBPSF,FBPT,FBPI,FBVI,FBDT,FBI),FBCATC=$P(FBDATA,U,9),FBINS=$P(FBDATA,U,10)
"RTN","FBPCR671",11,0)
 ..S FBLOC=2_U_23_U_33_U_42_U_49_U_61_U_71
"RTN","FBPCR671",12,0)
 ..W ! W:$P(FBDATA,U,11)["R" "*" W:$P(FBDATA,U,12)]"" "#"
"RTN","FBPCR671",13,0)
 ..F I=1:1:7 W ?$P(FBLOC,U,I),$P(FBDATA,U,I)
"RTN","FBPCR671",14,0)
 ..F FBY="DX","PROC" I $D(^TMP($J,"FB",FBPSF,FBPT,FBPI,FBVI,FBDT,FBI,FBY)) S FBDATA=^(FBY),FBSL=$L(FBDATA,"^") W !?2,FBY,": " F I=1:1:FBSL W $P(FBDATA,U,I),"    "
"RTN","FBPCR671",15,0)
 ..I FBCATC!FBINS D
"RTN","FBPCR671",16,0)
 ...W !?5,">>>"
"RTN","FBPCR671",17,0)
 ...I FBCATC=0 W "Cost recover from insurance."
"RTN","FBPCR671",18,0)
 ...I FBCATC=1 W "Cost recover from means testing"_$S(FBINS:" and insurance.",1:".")
"RTN","FBPCR671",19,0)
 ...I FBCATC=2 W "Cost recover from LTC co-pay"_$S(FBINS:" and insurance.",1:".")
"RTN","FBPCR671",20,0)
 ...I FBCATC=3 W $S(FBINS:"Cost recover from insurance, ",1:"")_"1010EC Missing for LTC Patient."
"RTN","FBPCR671",21,0)
 ...I FBCATC=4 W $S(FBINS:"Cost Recover from insurance and ",1:"")_"Potential Cost Recover from LTC co-pay."
"RTN","FBPCR671",22,0)
 ..;
"RTN","FBPCR671",23,0)
 ..I +$O(^TMP($J,"FB",FBPSF,FBPT,FBPI,FBVI,FBDT,FBI,"A",0)) D  Q:FBOUT  W !,FBDASH1
"RTN","FBPCR671",24,0)
 ...S (FBOV,FBCNT)=0,FBSL=7,FBLOC=1_U_12_U_23_U_33_U_47_U_63_U_71 D SHA Q:FBOUT
"RTN","FBPCR671",25,0)
 ...F  S FBCNT=$O(^TMP($J,"FB",FBPSF,FBPT,FBPI,FBVI,FBDT,FBI,"A",FBCNT)) Q:'FBCNT  S FBDATA=^(FBCNT),FBV=$P(FBDATA,U,11)_";"_$P(FBDATA,U,12) D WRT Q:FBOUT
"RTN","FBPCR671",26,0)
 Q
"RTN","FBPCR671",27,0)
WRT ;write ancillary info
"RTN","FBPCR671",28,0)
 N FBCATC,FBINS I ($Y+4)>IOSL D PAGE Q:FBOUT  D SHA,SHA2
"RTN","FBPCR671",29,0)
 D:FBOV'=FBV SHA2
"RTN","FBPCR671",30,0)
 S FBCATC=$P(FBDATA,U,14),FBINS=$P(FBDATA,U,15)
"RTN","FBPCR671",31,0)
 W !
"RTN","FBPCR671",32,0)
 S I=1 W ?$P(FBLOC,U,I),$P(FBDATA,U,I)
"RTN","FBPCR671",33,0)
 S I=2 W ?$P(FBLOC,U,I),$P($P(FBDATA,U,I),",")
"RTN","FBPCR671",34,0)
 F I=3:1:FBSL W ?$P(FBLOC,U,I),$P(FBDATA,U,I)
"RTN","FBPCR671",35,0)
 I $P($P(FBDATA,U,2),",",2)]"" D  Q:FBOUT
"RTN","FBPCR671",36,0)
 . N FBI,FBMOD
"RTN","FBPCR671",37,0)
 . F FBI=2:1 S FBMOD=$P($P(FBDATA,U,2),",",FBI) Q:FBMOD=""  D  Q:FBOUT
"RTN","FBPCR671",38,0)
 . . I $Y+5>IOSL D PAGE Q:FBOUT  D SHA,SHA2 W !,"  (continued)"
"RTN","FBPCR671",39,0)
 . . W !,?$P(FBLOC,U,2)+5,"-",FBMOD
"RTN","FBPCR671",40,0)
 W !?5,"Primary Dx: ",$P(FBDATA,U,9),?40,"S/C Condition? ",$P(FBDATA,U,8),?66,"Obl.#: ",$P(FBDATA,U,10)
"RTN","FBPCR671",41,0)
 I FBCATC!FBINS D
"RTN","FBPCR671",42,0)
 .W !?5,">>>"
"RTN","FBPCR671",43,0)
 .I FBCATC=0 W "Cost recover from insurance."
"RTN","FBPCR671",44,0)
 .I FBCATC=1 W "Cost recover from means testing"_$S(FBINS:" and insurance.",1:".")
"RTN","FBPCR671",45,0)
 .I FBCATC=2 W "Cost recover from LTC co-pay"_$S(FBINS:" and insurance.",1:".")
"RTN","FBPCR671",46,0)
 .I FBCATC=3 W $S(FBINS:"Cost recover from insurance, ",1:"")_"1010EC Missing for LTC Patient."
"RTN","FBPCR671",47,0)
 .I FBCATC=4 W $S(FBINS:"Cost Recover from insurance and ",1:"")_"Potential Cost Recover from LTC co-pay."
"RTN","FBPCR671",48,0)
 ;
"RTN","FBPCR671",49,0)
 Q
"RTN","FBPCR671",50,0)
HDR ;main header
"RTN","FBPCR671",51,0)
 D HDR^FBPCR Q:FBOUT
"RTN","FBPCR671",52,0)
HDR1 W !!?(IOM-(13+$L(FBXPROG))/2),"FEE PROGRAM: ",FBXPROG
"RTN","FBPCR671",53,0)
 W !!?2,"Inv Date",?23,"Amount",?33," Amount",?42,"Susp",?49,"Invoice",?61,"From",?73,"To"
"RTN","FBPCR671",54,0)
 W !?23,"Claimed",?35,"Paid",?42,"Code",?53,"Num",?61,"Date",?71,"Date",!,FBDASH
"RTN","FBPCR671",55,0)
 Q
"RTN","FBPCR671",56,0)
SH ;subheader - vendor, prints when name changed
"RTN","FBPCR671",57,0)
 I ($Y+7)>IOSL D HDR Q:FBOUT
"RTN","FBPCR671",58,0)
 W !!,"Vendor: ",$P(FBVI,";"),?41,"Vendor ID: ",$P(FBVI,";",2)
"RTN","FBPCR671",59,0)
 Q
"RTN","FBPCR671",60,0)
SHA ;ancillary subheader
"RTN","FBPCR671",61,0)
 I ($Y+16)>IOSL D PAGE Q:FBOUT
"RTN","FBPCR671",62,0)
 W !?20,">>> ANCILLARY SERVICE PAYMENTS <<<",!
"RTN","FBPCR671",63,0)
SHA1 ;subheader for ancillary data
"RTN","FBPCR671",64,0)
 W !,?2,"Svc Date",?11,"CPT-MOD",?23,"Amount",?33," Amount",?42,"Susp",?57,"Batch",?63,"Invoice",?71,"Voucher"
"RTN","FBPCR671",65,0)
 W !,?23,"Claimed",?35,"Paid",?42,"Code",?58,"Num",?64,"Num",?72,"Date",!,FBDASH1
"RTN","FBPCR671",66,0)
 Q
"RTN","FBPCR671",67,0)
SHA2 ;subheader for vendor name
"RTN","FBPCR671",68,0)
 I ($Y+9)>IOSL D HDR Q:FBOUT  D SH,SHA
"RTN","FBPCR671",69,0)
 I FBOV'=FBV S FBOV=FBV
"RTN","FBPCR671",70,0)
 W !!,"Vendor: ",$P(FBV,";"),?41,"Vendor ID: ",$P(FBV,";",2)
"RTN","FBPCR671",71,0)
 Q
"RTN","FBPCR671",72,0)
CR ;read for display
"RTN","FBPCR671",73,0)
 Q:'FBPG  S DIR(0)="E" W ! D ^DIR K DIR S:$D(DUOUT)!($D(DTOUT)) FBOUT=1
"RTN","FBPCR671",74,0)
 Q
"RTN","FBPCR671",75,0)
PAGE ;new page
"RTN","FBPCR671",76,0)
 D HDR Q:FBOUT  D SH
"RTN","FBPCR671",77,0)
 Q
"RTN","FBPCR671",78,0)
WRTDX I $P(FBDX,"^",K)]"" W ?4,"Dx: ",$$ICD9^FBCSV1($P(FBDX,"^",K)),"  " Q
"RTN","FBPCR671",79,0)
 Q
"RTN","FBPCR671",80,0)
WRTPC I $P(FBPROC,"^",L)]"" W ?4,"Proc: ",$$ICD0^FBCSV1($P(FBPROC,"^",L)),"   " Q
"RTN","FBPCR671",81,0)
 Q
"RTN","FBPCR671",82,0)
WRTSC ;write service connected
"RTN","FBPCR671",83,0)
 W !,"SERVICE CONNECTED? ",$S(+VAEL(3):"YES",1:"NO"),!
"RTN","FBPCR671",84,0)
 Q
"RTN","FBPRICE1")
0^14^B8252151
"RTN","FBPRICE1",1,0)
FBPRICE1 ;AISC/DMK-GENERIC PRICER INTERFACE CON'T ;25JUN92
"RTN","FBPRICE1",2,0)
 ;;3.5;FEE BASIS;**56,55**;JAN 30, 1995
"RTN","FBPRICE1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBPRICE1",4,0)
 ;
"RTN","FBPRICE1",5,0)
ICD ;ask Dx
"RTN","FBPRICE1",6,0)
 W ! F I=1:1:5 S FBDX(I)="       "
"RTN","FBPRICE1",7,0)
 S DIR(0)="PO^80:EQMZ"
"RTN","FBPRICE1",8,0)
 F I=1:1:5 D  Q:X=""!($D(DTOUT))!($D(DUOUT))
"RTN","FBPRICE1",9,0)
 . N FBRT F  D ^DIR Q:X=""!($D(DTOUT))!($D(DUOUT))!(+Y'>0)  S FBRT=$$CHKICD9^FBCSV1(+Y,$$STR2FBDT^FBCSV1($G(FBFDT))) I FBRT]"" S FBDX(I)=$TR(FBRT,"."),FBDX(I)=FBDX(I)_$E(PAD,$L(FBDX(I))+1,7) Q
"RTN","FBPRICE1",10,0)
 I FBDX(1)="       ",$D(DTOUT)!($D(DUOUT)) G END^FBPRICE
"RTN","FBPRICE1",11,0)
 I FBDX(1)="       " W !,*7,"Must enter at least a primary diagnosis.",! G ICD
"RTN","FBPRICE1",12,0)
 K DIR,I
"RTN","FBPRICE1",13,0)
PROC ;ask procedure codes
"RTN","FBPRICE1",14,0)
 W ! F I=1:1:3 S FBPRC(I)="       "
"RTN","FBPRICE1",15,0)
 S DIR(0)="PO^80.1:EQM"
"RTN","FBPRICE1",16,0)
 F I=1:1:3 D  Q:X=""!($D(DUOUT))!($D(DTOUT))
"RTN","FBPRICE1",17,0)
 . N FBRT F  D ^DIR Q:X=""!($D(DUOUT))!($D(DTOUT))!(+Y'>0)  S FBRT=$$CHKICD0^FBCSV1(+Y,$$STR2FBDT^FBCSV1($G(FBFDT))) I FBRT]"" S FBPRC(I)=$TR(FBRT,"."),FBPRC(I)=FBPRC(I)_$E(PAD,$L(FBPRC(I))+1,7) Q
"RTN","FBPRICE1",18,0)
 I 'FBPRC(1),$D(DTOUT)!($D(DUOUT)) G END^FBPRICE
"RTN","FBPRICE1",19,0)
 K DIR,I
"RTN","FBPRICE1",20,0)
 ;
"RTN","FBPRICE1",21,0)
 W ! S DIR(0)="162.5,6.6",DIR("A")="Billed Charges" D ^DIR K DIR G END^FBPRICE:$D(DIRUT) S FBBILL=$FN(Y,"",2),FBBILL=$TR(FBBILL,"."),FBBILL=$E("00000000",$L(FBBILL)+1,8)_FBBILL
"RTN","FBPRICE1",22,0)
 ;
"RTN","FBPRICE1",23,0)
 S DIR(0)="162.5,6.6",DIR("A")="Amount Claimed" D ^DIR K DIR G END^FBPRICE:$D(DIRUT) S FBCLAIM=$FN(Y,"",2),FBCLAIM=$TR(FBCLAIM,"."),FBCLAIM=$E("00000000",$L(FBCLAIM)+1,8)_FBCLAIM
"RTN","FBPRICE1",24,0)
 ;
"RTN","FBPRICE1",25,0)
 ;S DIR("A")="Obligation Number",DIR(0)="F^6:6^D CKOB^FBAAUTL1" D ^DIR K DIR G END^FBPRICE:$D(DIRUT) S FBOBL=Y
"RTN","FBPRICE1",26,0)
 S FBOBL="000000"
"RTN","FBPRICE1",27,0)
 ;
"RTN","FBPRICE1",28,0)
STRING ;set-up message text for pricer
"RTN","FBPRICE1",29,0)
 W ! D WAIT^DICD
"RTN","FBPRICE1",30,0)
 D ADDRESS^FBAAV01 Q:$G(VATERR)  K VAT
"RTN","FBPRICE1",31,0)
 S FBFLAG=1 D NEWMSG^FBAAV01
"RTN","FBPRICE1",32,0)
 S FBPART1=FBSSN_FBFDT_FBSTAN
"RTN","FBPRICE1",33,0)
 S FBSTR(1)=FBPART1_21_FBLNAM_FBFI_FBMI_FBSEX_FBDOB_FBLOS_FBDISP_FBBILL_FBCLAIM_FBAUTH_FBPAYT_FBOBL_"Y"
"RTN","FBPRICE1",34,0)
 S FBSTR(2)=FBPART1_22_FBVID_FBMED_$E(PAD,1,29)_FBTDT_FBSTABR_FBDX(1)
"RTN","FBPRICE1",35,0)
 S FBSTR(3)=FBPART1_23_FBDX(2)_FBDX(3)_FBDX(4)_FBDX(5)_FBPRC(1)_FBPRC(2)_FBPRC(3)_"    "
"RTN","FBPRICE1",36,0)
 F I=1:1:3 S FBSTR=FBSTR(I) D STORE^FBAAV01
"RTN","FBPRICE1",37,0)
 D XMIT^FBAAV01 K FBFLAG
"RTN","FBPRICE1",38,0)
 W !,"Case sent to pricer.",!
"RTN","FBPRICE1",39,0)
 Q
"VER")
8.0^22.0
**END**
**END**
