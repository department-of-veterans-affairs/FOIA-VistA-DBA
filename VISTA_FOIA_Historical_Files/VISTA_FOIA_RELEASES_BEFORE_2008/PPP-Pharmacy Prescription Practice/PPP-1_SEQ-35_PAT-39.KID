Released PPP*1*39 SEQ #35
Extracted from mail message
**KIDS**:PPP*1.0*39^

**INSTALL NAME**
PPP*1.0*39
"BLD",5170,0)
PPP*1.0*39^PHARMACY PRESCRIPTION PRACTICE^0^3051004^y
"BLD",5170,1,0)
^^2^2^3051004^
"BLD",5170,1,1,0)
 This patch corrects the problem of using the incorrect IEN (Internal
"BLD",5170,1,2,0)
 Entry Number) for the institution.
"BLD",5170,4,0)
^9.64PA^^
"BLD",5170,"ABPKG")
n
"BLD",5170,"INI")
 
"BLD",5170,"INID")
^^
"BLD",5170,"INIT")
 
"BLD",5170,"KRN",0)
^9.67PA^8989.52^19
"BLD",5170,"KRN",.4,0)
.4
"BLD",5170,"KRN",.401,0)
.401
"BLD",5170,"KRN",.402,0)
.402
"BLD",5170,"KRN",.403,0)
.403
"BLD",5170,"KRN",.5,0)
.5
"BLD",5170,"KRN",.84,0)
.84
"BLD",5170,"KRN",3.6,0)
3.6
"BLD",5170,"KRN",3.8,0)
3.8
"BLD",5170,"KRN",9.2,0)
9.2
"BLD",5170,"KRN",9.8,0)
9.8
"BLD",5170,"KRN",9.8,"NM",0)
^9.68A^6^5
"BLD",5170,"KRN",9.8,"NM",1,0)
PPPFMX^^0^B9551060
"BLD",5170,"KRN",9.8,"NM",2,0)
PPPGET1^^0^B28099147
"BLD",5170,"KRN",9.8,"NM",3,0)
PPPMPI^^0^B24128712
"BLD",5170,"KRN",9.8,"NM",5,0)
PPPBLD1^^0^B8995172
"BLD",5170,"KRN",9.8,"NM",6,0)
PPPPDX3^^0^B3603781
"BLD",5170,"KRN",9.8,"NM","B","PPPBLD1",5)
 
"BLD",5170,"KRN",9.8,"NM","B","PPPFMX",1)
 
"BLD",5170,"KRN",9.8,"NM","B","PPPGET1",2)
 
"BLD",5170,"KRN",9.8,"NM","B","PPPMPI",3)
 
"BLD",5170,"KRN",9.8,"NM","B","PPPPDX3",6)
 
"BLD",5170,"KRN",19,0)
19
"BLD",5170,"KRN",19.1,0)
19.1
"BLD",5170,"KRN",101,0)
101
"BLD",5170,"KRN",409.61,0)
409.61
"BLD",5170,"KRN",771,0)
771
"BLD",5170,"KRN",870,0)
870
"BLD",5170,"KRN",8989.51,0)
8989.51
"BLD",5170,"KRN",8989.52,0)
8989.52
"BLD",5170,"KRN",8994,0)
8994
"BLD",5170,"KRN","B",.4,.4)
 
"BLD",5170,"KRN","B",.401,.401)
 
"BLD",5170,"KRN","B",.402,.402)
 
"BLD",5170,"KRN","B",.403,.403)
 
"BLD",5170,"KRN","B",.5,.5)
 
"BLD",5170,"KRN","B",.84,.84)
 
"BLD",5170,"KRN","B",3.6,3.6)
 
"BLD",5170,"KRN","B",3.8,3.8)
 
"BLD",5170,"KRN","B",9.2,9.2)
 
"BLD",5170,"KRN","B",9.8,9.8)
 
"BLD",5170,"KRN","B",19,19)
 
"BLD",5170,"KRN","B",19.1,19.1)
 
"BLD",5170,"KRN","B",101,101)
 
"BLD",5170,"KRN","B",409.61,409.61)
 
"BLD",5170,"KRN","B",771,771)
 
"BLD",5170,"KRN","B",870,870)
 
"BLD",5170,"KRN","B",8989.51,8989.51)
 
"BLD",5170,"KRN","B",8989.52,8989.52)
 
"BLD",5170,"KRN","B",8994,8994)
 
"BLD",5170,"PRE")
 
"BLD",5170,"QUES",0)
^9.62^^
"BLD",5170,"REQB",0)
^9.611^5^5
"BLD",5170,"REQB",1,0)
PPP*1.0*26^2
"BLD",5170,"REQB",2,0)
PPP*1.0*21^2
"BLD",5170,"REQB",3,0)
PPP*1.0*35^2
"BLD",5170,"REQB",4,0)
PPP*1.0*38^2
"BLD",5170,"REQB",5,0)
PPP*1.0*32^2
"BLD",5170,"REQB","B","PPP*1.0*21",2)
 
"BLD",5170,"REQB","B","PPP*1.0*26",1)
 
"BLD",5170,"REQB","B","PPP*1.0*32",5)
 
"BLD",5170,"REQB","B","PPP*1.0*35",3)
 
"BLD",5170,"REQB","B","PPP*1.0*38",4)
 
"MBREQ")
0
"PKG",521,-1)
1^1
"PKG",521,0)
PHARMACY PRESCRIPTION PRACTICE^PPP^3P
"PKG",521,20,0)
^9.402P^^
"PKG",521,22,0)
^9.49I^1^1
"PKG",521,22,1,0)
1.0^2950407^2951019
"PKG",521,22,1,"PAH",1,0)
39^3051004^101029
"PKG",521,22,1,"PAH",1,1,0)
^^2^2^3051004
"PKG",521,22,1,"PAH",1,1,1,0)
 This patch corrects the problem of using the incorrect IEN (Internal
"PKG",521,22,1,"PAH",1,1,2,0)
 Entry Number) for the institution.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")
 
"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","PPPBLD1")
0^5^B8995172
"RTN","PPPBLD1",1,0)
PPPBLD1 ;ALB/DMB - BUILD FFX FROM CDROM : 3/4/92
"RTN","PPPBLD1",2,0)
 ;;1.0;PHARMACY PRESCRIPTION PRACTICE;**38,39**;APR 7,1995
"RTN","PPPBLD1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PPPBLD1",4,0)
 ;
"RTN","PPPBLD1",5,0)
 ;Reference to ^DIC(4) are covered by IA# 10090
"RTN","PPPBLD1",6,0)
 ;
"RTN","PPPBLD1",7,0)
BFFX(INARRY,OUTARRY,EXCARRY,LSTPROC) ; Build the Foreign Facility Xref
"RTN","PPPBLD1",8,0)
 ;
"RTN","PPPBLD1",9,0)
 N PPPTMP,BFFSEND,BFFSTRT,DA,DIC,DIE,DR,ERR,ERRARY1,ERRARY2,ERRORS
"RTN","PPPBLD1",10,0)
 N ERRTXT,FFXIFN,FFXLDOV,I,LOCKERR,MAXTM,MPDERR,MPDLDOV,PATDFN
"RTN","PPPBLD1",11,0)
 N RTRNSITE,SNIFN,SSN,STANO,STARTTM,STATUS,TEDTENT
"RTN","PPPBLD1",12,0)
 N TMP,TNEWENT,X,Y,MPDSTERR
"RTN","PPPBLD1",13,0)
 N BUFFER,GROUND
"RTN","PPPBLD1",14,0)
 ;
"RTN","PPPBLD1",15,0)
 S LOCKERR=-9004
"RTN","PPPBLD1",16,0)
 S MPDERR=-9014
"RTN","PPPBLD1",17,0)
 S MPDERR2=-9015
"RTN","PPPBLD1",18,0)
 S MPDSTERR=-9018
"RTN","PPPBLD1",19,0)
 S BFFSTRT=1012
"RTN","PPPBLD1",20,0)
 S BFFSEND=1013
"RTN","PPPBLD1",21,0)
 S RTRNSITE=1
"RTN","PPPBLD1",22,0)
 S BUFFER=5
"RTN","PPPBLD1",23,0)
 S GROUND=0
"RTN","PPPBLD1",24,0)
 S ERRARY1="^"_"TMP(""PPP"",$J,""ERR"","
"RTN","PPPBLD1",25,0)
 S ERRARY2="^"_"TMP(""PPP"",$J,""ERR"")"
"RTN","PPPBLD1",26,0)
 S @ERRARY2@(1)="The following errors occurred while running BFFX^PPPBLD1."
"RTN","PPPBLD1",27,0)
 S @ERRARY2@(2)=" "
"RTN","PPPBLD1",28,0)
 S MAXTM=7200
"RTN","PPPBLD1",29,0)
 I '$D(PPPMRT) S PPPMRT="BFFX_PPPBLD1"
"RTN","PPPBLD1",30,0)
 S (ERR,ERRORS,STATUS,TNEWENT,TEDTENT,TSSN)=0
"RTN","PPPBLD1",31,0)
 ;
"RTN","PPPBLD1",32,0)
LOCKFFX ; Attempt to lock the FFX file.  Exit if you can't
"RTN","PPPBLD1",33,0)
 ;
"RTN","PPPBLD1",34,0)
 L +(^PPP(1020.2)):60
"RTN","PPPBLD1",35,0)
 I '$T D  Q LOCKERR
"RTN","PPPBLD1",36,0)
 .S TMP=$$LOGEVNT^PPPMSC1(LOCKERR,PPPMRT)
"RTN","PPPBLD1",37,0)
 .S PPPTMP(1)="BFFX^PPPBLD1 -> FFX locked by another user."
"RTN","PPPBLD1",38,0)
 .S TMP=$$SNDBLTN^PPPMSC1("PPP NOTIFICATION","PRESCRIPTION PRACTICES","PPPTMP(")
"RTN","PPPBLD1",39,0)
 .K PPPTMP
"RTN","PPPBLD1",40,0)
 ;
"RTN","PPPBLD1",41,0)
 D FIND
"RTN","PPPBLD1",42,0)
STRTMPD ;VMP OIFO BAY PINES;ELR;PPP*1*38
"RTN","PPPBLD1",43,0)
 ;REMOVED START MPD PROCESS
"RTN","PPPBLD1",44,0)
 ;
"RTN","PPPBLD1",45,0)
 ;
"RTN","PPPBLD1",46,0)
 D GETDATA^PPPBLD1A
"RTN","PPPBLD1",47,0)
 ;
"RTN","PPPBLD1",48,0)
 K @OUTARRY,@ERRARY2,@EXCARRY
"RTN","PPPBLD1",49,0)
 Q ERR_"^"_TNEWENT_"^"_TEDTENT
"RTN","PPPBLD1",50,0)
 ;
"RTN","PPPBLD1",51,0)
FIND ;VMP OIFO BAY PINES;ELR;PPP*1*38
"RTN","PPPBLD1",52,0)
 ; GET PATIENT/VISIT DATA
"RTN","PPPBLD1",53,0)
 NEW DATA,PPPDA,PPPDATA,PPPDFN,PPPSITE,PPPSSN,PPPVST,PPPX1
"RTN","PPPBLD1",54,0)
 S PPPSSN=0
"RTN","PPPBLD1",55,0)
 F  S PPPSSN=$O(@INARRY@(PPPSSN)) Q:PPPSSN=""  D
"RTN","PPPBLD1",56,0)
 .S PPPDFN=+$$GETDFN^PPPGET1(PPPSSN)
"RTN","PPPBLD1",57,0)
 .I $G(PPPDFN)'>0 S @OUTARRY@("DONE",PPPSSN)="",@OUTARRY@(PPPSSN,"FOUND")="-1^Could not find SSN "_PPPSSN_" in Patient File." Q
"RTN","PPPBLD1",58,0)
 .K PPPDATA D TFL^VAFCTFU1(.PPPDATA,PPPDFN) ;Supported IA #2990
"RTN","PPPBLD1",59,0)
 .S PPPX1=0
"RTN","PPPBLD1",60,0)
 .F  S PPPX1=$O(PPPDATA(PPPX1)) Q:PPPX1'>0  S DATA=PPPDATA(PPPX1) D
"RTN","PPPBLD1",61,0)
 ..Q:$P(DATA,"^",5)'="VAMC"
"RTN","PPPBLD1",62,0)
 ..S PPPSITE=$P(DATA,"^",1)
"RTN","PPPBLD1",63,0)
 ..Q:PPPSITE=$P($G(^PPP(1020.1,1,0)),"^",9)
"RTN","PPPBLD1",64,0)
 ..S PPPVST=$P($P(DATA,"^",3),".")
"RTN","PPPBLD1",65,0)
 ..;VMP OIFO BAY PINES;VGF;PPP*1.0*39
"RTN","PPPBLD1",66,0)
 ..N PPPIIEN
"RTN","PPPBLD1",67,0)
 ..S PPPIIEN=$O(^DIC(4,"D",PPPSITE,0))
"RTN","PPPBLD1",68,0)
 ..S @OUTARRY@(PPPSSN,"SITES",PPPIIEN)=PPPVST
"RTN","PPPBLD1",69,0)
 .S @OUTARRY@("DONE",PPPSSN)=""
"RTN","PPPBLD1",70,0)
 .S @OUTARRY@(PPPSSN,"FOUND")="1"
"RTN","PPPBLD1",71,0)
 S @OUTARRY@("STATUS")="1^"          ;1 MEANS NO ERRORS (AS THERE IS NO LONGER A CD ROM SERVER) SO NO MSG SENT IN PIECE 2
"RTN","PPPBLD1",72,0)
 Q
"RTN","PPPFMX")
0^1^B9551060
"RTN","PPPFMX",1,0)
PPPFMX ;ALB/DMB/DAD - FILEMAN UTILITIES FOR PPP ; 1/10/92
"RTN","PPPFMX",2,0)
 ;;1.0;PHARMACY PRESCRIPTION PRACTICE;**26,39**;APR 7,1995
"RTN","PPPFMX",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PPPFMX",4,0)
 ;
"RTN","PPPFMX",5,0)
SDFNPOV ;
"RTN","PPPFMX",6,0)
 N PPPDFN
"RTN","PPPFMX",7,0)
 ;S VAQFLAG=1
"RTN","PPPFMX",8,0)
 S PPPDFN=$P($G(^PPP(1020.2,DA,0)),"^",1)
"RTN","PPPFMX",9,0)
 Q:PPPDFN=""
"RTN","PPPFMX",10,0)
 S ^PPP(1020.2,"APOV",PPPDFN,X,DA)=""
"RTN","PPPFMX",11,0)
 S ^PPP(1020.2,"ARPOV",X,PPPDFN,DA)=""
"RTN","PPPFMX",12,0)
 Q
"RTN","PPPFMX",13,0)
 ;
"RTN","PPPFMX",14,0)
KDFNPOV ;
"RTN","PPPFMX",15,0)
 N PPPDFN
"RTN","PPPFMX",16,0)
 S PPPDFN=$P($G(^PPP(1020.2,DA,0)),"^",1)
"RTN","PPPFMX",17,0)
 Q:PPPDFN=""
"RTN","PPPFMX",18,0)
 K:$D(^PPP(1020.2,"APOV",PPPDFN,X,DA)) ^PPP(1020.2,"APOV",PPPDFN,X,DA)
"RTN","PPPFMX",19,0)
 ;VMP OIFO BAY PINES;VGF;PPP*1*39
"RTN","PPPFMX",20,0)
 ;CORRECTED THE FOLLOWING KILL COMMAND
"RTN","PPPFMX",21,0)
 K:$D(^PPP(1020.2,"ARPOV",X,PPPDFN,DA)) ^PPP(1020.2,"ARPOV",X,PPPDFN,DA)
"RTN","PPPFMX",22,0)
 Q
"RTN","PPPFMX",23,0)
 ;
"RTN","PPPFMX",24,0)
SDFNDT ;
"RTN","PPPFMX",25,0)
 N PPPDFN
"RTN","PPPFMX",26,0)
 S PPPDFN=$P($G(^PPP(1020.2,DA,0)),"^",1)
"RTN","PPPFMX",27,0)
 Q:PPPDFN=""
"RTN","PPPFMX",28,0)
 S ^PPP(1020.2,"ADT",PPPDFN,X,DA)=""
"RTN","PPPFMX",29,0)
 Q
"RTN","PPPFMX",30,0)
 ;
"RTN","PPPFMX",31,0)
KDFNDT ;
"RTN","PPPFMX",32,0)
 N PPPDFN
"RTN","PPPFMX",33,0)
 S PPPDFN=$P($G(^PPP(1020.2,DA,0)),"^",1)
"RTN","PPPFMX",34,0)
 Q:PPPDFN=""
"RTN","PPPFMX",35,0)
 K:$D(^PPP(1020.2,"ADT",PPPDFN,X,DA)) ^PPP(1020.2,"ADT",PPPDFN,X,DA)
"RTN","PPPFMX",36,0)
 Q
"RTN","PPPFMX",37,0)
 ;
"RTN","PPPFMX",38,0)
SNSSN ;
"RTN","PPPFMX",39,0)
 N PPPNOD0,PPPTR
"RTN","PPPFMX",40,0)
 N ZTRTN,ZTIO,ZTDTH,ZTDESC,ZTSAVE
"RTN","PPPFMX",41,0)
 ;
"RTN","PPPFMX",42,0)
 ; Check that this is either an edit or a new entry to avoid
"RTN","PPPFMX",43,0)
 ;   setting during a re-index of the Patient file.
"RTN","PPPFMX",44,0)
 ; PPPOK is defined in the kill logic below if the new entry
"RTN","PPPFMX",45,0)
 ;   does not equal the old.
"RTN","PPPFMX",46,0)
 ; DPTDFN is defined in the Patient Registration routines.
"RTN","PPPFMX",47,0)
 ;
"RTN","PPPFMX",48,0)
 I ($D(PPPOK))!($D(DPTDFN)) D
"RTN","PPPFMX",49,0)
 .S PPPNOD0=$G(^PPP(1020.7,0))
"RTN","PPPFMX",50,0)
 .Q:PPPNOD0=""
"RTN","PPPFMX",51,0)
 .;
"RTN","PPPFMX",52,0)
 .; Get the File Descriptor Node for updating.
"RTN","PPPFMX",53,0)
 .;
"RTN","PPPFMX",54,0)
 .S PPPTR=$P(PPPNOD0,"^",4)
"RTN","PPPFMX",55,0)
 .;
"RTN","PPPFMX",56,0)
 .; Set the entry and the "B" Xref
"RTN","PPPFMX",57,0)
 .;
"RTN","PPPFMX",58,0)
 .S ^PPP(1020.7,DA,0)=PPP
"RTN","PPPFMX",59,0)
 .S ^PPP(1020.7,"B",PPP,DA)=""
"RTN","PPPFMX",60,0)
 .;
"RTN","PPPFMX",61,0)
 .; Update the Descriptor node.
"RTN","PPPFMX",62,0)
 .;
"RTN","PPPFMX",63,0)
 .S $P(PPPNOD0,"^",3)=DA
"RTN","PPPFMX",64,0)
 .S $P(PPPNOD0,"^",4)=PPPTR+1
"RTN","PPPFMX",65,0)
 .S ^PPP(1020.7,0)=PPPNOD0
"RTN","PPPFMX",66,0)
 .;
"RTN","PPPFMX",67,0)
 .; Task out the MPD lookup.
"RTN","PPPFMX",68,0)
 .;PPP*1*26 Dave Blocker : Remove MPD access attempt
"RTN","PPPFMX",69,0)
 .;because the PPP BATCH job will do the MPD request each night.
"RTN","PPPFMX",70,0)
 .Q
"RTN","PPPFMX",71,0)
 Q
"RTN","PPPFMX",72,0)
 ;
"RTN","PPPFMX",73,0)
KNSSN ;
"RTN","PPPFMX",74,0)
 N PPPNOD0
"RTN","PPPFMX",75,0)
 ;
"RTN","PPPFMX",76,0)
 ; Check that this is an edit and not a re-index.
"RTN","PPPFMX",77,0)
 ;
"RTN","PPPFMX",78,0)
 S X="I PPP'=$P($G(^"_"DPT("_DA_","_"0)),"_"""^"""_",9) S PPPERR=1" X X I $G(PPPERR)=1 K PPPERR D
"RTN","PPPFMX",79,0)
 .S PPPOK=1
"RTN","PPPFMX",80,0)
 .;
"RTN","PPPFMX",81,0)
 .; Check that the node currently exists, kill it if it does.
"RTN","PPPFMX",82,0)
 .;
"RTN","PPPFMX",83,0)
 .I $D(^PPP(1020.7,"B",PPP)) D
"RTN","PPPFMX",84,0)
 ..K:$D(^PPP(1020.7,DA)) ^PPP(1020.7,DA)
"RTN","PPPFMX",85,0)
 ..K:$D(^PPP(1020.7,"B",PPP,DA)) ^PPP(1020.7,"B",PPP,DA)
"RTN","PPPFMX",86,0)
 ..;
"RTN","PPPFMX",87,0)
 ..; If the record count is alredy 0 then quit.
"RTN","PPPFMX",88,0)
 ..;
"RTN","PPPFMX",89,0)
 ..S PPPNOD0=^PPP(1020.7,0)
"RTN","PPPFMX",90,0)
 ..Q:+$P(PPPNOD0,"^",4)=0
"RTN","PPPFMX",91,0)
 ..S $P(PPPNOD0,"^",4)=$P(PPPNOD0,"^",4)-1
"RTN","PPPFMX",92,0)
 ..S ^PPP(1020.7,0)=PPPNOD0
"RTN","PPPFMX",93,0)
 Q
"RTN","PPPFMX",94,0)
 ;
"RTN","PPPFMX",95,0)
DOMAIN(IFN) ; Find domain name from institution number to stuff into #1.5.
"RTN","PPPFMX",96,0)
 ;
"RTN","PPPFMX",97,0)
 ; Get the station number from the institution file
"RTN","PPPFMX",98,0)
 ; to resolve domain
"RTN","PPPFMX",99,0)
 ;
"RTN","PPPFMX",100,0)
 ;   Input:  IFN  --  Pointer to record in #1020.2
"RTN","PPPFMX",101,0)
 ;   Output: Domain name in field #1.5
"RTN","PPPFMX",102,0)
 ;
"RTN","PPPFMX",103,0)
 ;VMP OIFO BAY PINES;VGF;PPP*1.0*39
"RTN","PPPFMX",104,0)
 N PPPINST,PPPIEN
"RTN","PPPFMX",105,0)
 S PPPINST=+$P($G(^PPP(1020.2,IFN,0)),"^",2)
"RTN","PPPFMX",106,0)
 S PPPIEN=$O(^PPP(1020.8,"B",PPPINST,0))
"RTN","PPPFMX",107,0)
 Q $$GET1^DIQ(1020.8,PPPIEN_",",.02)
"RTN","PPPFMX",108,0)
 ;
"RTN","PPPGET1")
0^2^B28099147
"RTN","PPPGET1",1,0)
PPPGET1 ;ALB/DMB/DAD - PRESC. PRACT. GET ROUTINES ;10-AUG-93
"RTN","PPPGET1",2,0)
 ;;1.0;PHARMACY PRESCRIPTION PRACTICE;**8,17,21,39**;APR 7,1995
"RTN","PPPGET1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PPPGET1",4,0)
 ;
"RTN","PPPGET1",5,0)
GETDFN(PATIENT,VERBOSE) ;RETURN DFN OF PATIENT
"RTN","PPPGET1",6,0)
 ;THIS WILL RETURN THE SAME INFORMATION THAT DIC RETURNS IN Y
"RTN","PPPGET1",7,0)
 ;
"RTN","PPPGET1",8,0)
 N DIC,X,Y,DTOUT,DUOUT,RESULT,USRABORT,DGSENFLG
"RTN","PPPGET1",9,0)
 ;
"RTN","PPPGET1",10,0)
 S DGSENFLG=""
"RTN","PPPGET1",11,0)
 S USRABORT=-1001
"RTN","PPPGET1",12,0)
 S:'$D(PATIENT) PATIENT=""
"RTN","PPPGET1",13,0)
 S:'$D(VERBOSE) VERBOSE=0
"RTN","PPPGET1",14,0)
 S VERBOSE=$S(VERBOSE:"E",1:"")
"RTN","PPPGET1",15,0)
 ;
"RTN","PPPGET1",16,0)
 ;USER INTERFACE
"RTN","PPPGET1",17,0)
 S DIC(0)="M"_VERBOSE
"RTN","PPPGET1",18,0)
 S:VERBOSE="" DIC(0)=DIC(0)_"X"
"RTN","PPPGET1",19,0)
 I PATIENT="" D
"RTN","PPPGET1",20,0)
 .S DIC(0)=DIC(0)_"AQ"
"RTN","PPPGET1",21,0)
 S X=PATIENT
"RTN","PPPGET1",22,0)
 S DIC=2
"RTN","PPPGET1",23,0)
 D ^DIC
"RTN","PPPGET1",24,0)
 ;
"RTN","PPPGET1",25,0)
 ;USER ABORTED PROCESS
"RTN","PPPGET1",26,0)
 ;
"RTN","PPPGET1",27,0)
 I $D(DTOUT)!($D(DUOUT)) S RESULT=USRABORT
"RTN","PPPGET1",28,0)
 E  S RESULT=Y
"RTN","PPPGET1",29,0)
 ;
"RTN","PPPGET1",30,0)
 Q RESULT
"RTN","PPPGET1",31,0)
 ;
"RTN","PPPGET1",32,0)
GETSNIFN(STATION,VERBOSE) ;RETURN IFN OF INSTITUTION
"RTN","PPPGET1",33,0)
 ;THIS WILL RETURN THE SAME INFORMATION THAT DIC RETURNS IN Y
"RTN","PPPGET1",34,0)
 ;
"RTN","PPPGET1",35,0)
 N DIC,X,Y,DTOUT,DUOUT,RESULT,USRABORT
"RTN","PPPGET1",36,0)
 ;
"RTN","PPPGET1",37,0)
 S USRABORT=-1001
"RTN","PPPGET1",38,0)
 S:'$D(STATION) STATION=""
"RTN","PPPGET1",39,0)
 S:'$D(VERBOSE) VERBOSE=0
"RTN","PPPGET1",40,0)
 S VERBOSE=$S(VERBOSE:"E",1:"")
"RTN","PPPGET1",41,0)
 ;
"RTN","PPPGET1",42,0)
 ;USER INTERFACE
"RTN","PPPGET1",43,0)
 S DIC(0)="M"_VERBOSE
"RTN","PPPGET1",44,0)
 I STATION="" D
"RTN","PPPGET1",45,0)
 .S DIC(0)=DIC(0)_"AQ"
"RTN","PPPGET1",46,0)
 E  D
"RTN","PPPGET1",47,0)
 .S DIC(0)=DIC(0)_"X"
"RTN","PPPGET1",48,0)
 S X=STATION
"RTN","PPPGET1",49,0)
 S DIC=4
"RTN","PPPGET1",50,0)
 D ^DIC
"RTN","PPPGET1",51,0)
 ;
"RTN","PPPGET1",52,0)
 ;USER ABORTED PROCESS
"RTN","PPPGET1",53,0)
 ;
"RTN","PPPGET1",54,0)
 I $D(DTOUT)!($D(DUOUT)) S RESULT=USRABORT
"RTN","PPPGET1",55,0)
 E  S RESULT=Y
"RTN","PPPGET1",56,0)
 ;
"RTN","PPPGET1",57,0)
 Q RESULT
"RTN","PPPGET1",58,0)
 ;
"RTN","PPPGET1",59,0)
GETFFX(FFXIFN,TARRY) ; Get data from an FFX entry
"RTN","PPPGET1",60,0)
 ;
"RTN","PPPGET1",61,0)
 N DIC,DR,DA,DIQ,DUOUT,DTOUT,PARMERR,NODE0,NODE1,ARRAYTMP,TMPARRAY,FMERR
"RTN","PPPGET1",62,0)
 ;
"RTN","PPPGET1",63,0)
 S PARMERR=-9001
"RTN","PPPGET1",64,0)
 S FMERR=-9002
"RTN","PPPGET1",65,0)
 S TMPARRAY="ARRAYTMP"
"RTN","PPPGET1",66,0)
 ;
"RTN","PPPGET1",67,0)
 I '$D(FFXIFN) Q PARMERR
"RTN","PPPGET1",68,0)
 I '$D(TARRY) Q PARMERR
"RTN","PPPGET1",69,0)
 K @TMPARRAY
"RTN","PPPGET1",70,0)
 ;
"RTN","PPPGET1",71,0)
 ; Get the data from the entry
"RTN","PPPGET1",72,0)
 ;
"RTN","PPPGET1",73,0)
 S NODE0=$G(^PPP(1020.2,FFXIFN,0)) Q:$P(NODE0,"^")="" PARMERR
"RTN","PPPGET1",74,0)
 S NODE1=$G(^PPP(1020.2,FFXIFN,1))
"RTN","PPPGET1",75,0)
 ;
"RTN","PPPGET1",76,0)
 ; Get the patient name and SSN from the patient file
"RTN","PPPGET1",77,0)
 ;
"RTN","PPPGET1",78,0)
 S DA=$P(NODE0,"^")
"RTN","PPPGET1",79,0)
 I DA'="" D
"RTN","PPPGET1",80,0)
 .S DR=".01;.09"
"RTN","PPPGET1",81,0)
 .S DIC=2
"RTN","PPPGET1",82,0)
 .S DIQ=TMPARRAY
"RTN","PPPGET1",83,0)
 .S DIQ(0)="E"
"RTN","PPPGET1",84,0)
 .D EN^DIQ1
"RTN","PPPGET1",85,0)
 .I '$D(@TMPARRAY) Q FMERR
"RTN","PPPGET1",86,0)
 .S @TARRY@(FFXIFN,"NAME")=$G(@TMPARRAY@(2,DA,.01,"E"))
"RTN","PPPGET1",87,0)
 .S @TARRY@(FFXIFN,"SSN")=$G(@TMPARRAY@(2,DA,.09,"E"))
"RTN","PPPGET1",88,0)
 .K @TMPARRAY
"RTN","PPPGET1",89,0)
 E  D
"RTN","PPPGET1",90,0)
 .S @TARRY@(FFXIFN,"NAME")="NOT AVAILABLE"
"RTN","PPPGET1",91,0)
 .S @TARRY@(FFXIFN,"SSN")="NOT AVAILABLE"
"RTN","PPPGET1",92,0)
 ;
"RTN","PPPGET1",93,0)
 ; Get the institution info from file 4
"RTN","PPPGET1",94,0)
 ;
"RTN","PPPGET1",95,0)
 S DA=$P(NODE0,"^",2)
"RTN","PPPGET1",96,0)
 I DA'="" D
"RTN","PPPGET1",97,0)
 .;VMP OIFO BAY PINES;VGF;PPP*1.0*39
"RTN","PPPGET1",98,0)
 .S DOMAIN=$$DOMAIN^PPPFMX(FFXIFN)
"RTN","PPPGET1",99,0)
 .S LNUM=0 I DOMAIN]"" S LNUM=$O(^PPP(1020.128,"A",DOMAIN,0))
"RTN","PPPGET1",100,0)
 .I LNUM S DOMAIN=$P(^PPP(1020.128,LNUM,0),"^",2)
"RTN","PPPGET1",101,0)
 .S @TARRY@(FFXIFN,"STANO")=$$GETSTANO(DA)
"RTN","PPPGET1",102,0)
 .S @TARRY@(FFXIFN,"POV")=$P(DOMAIN,".",1)
"RTN","PPPGET1",103,0)
 .K @TMPARRAY
"RTN","PPPGET1",104,0)
 E  D
"RTN","PPPGET1",105,0)
 .S @TARRY@(FFXIFN,"POV")="NOT AVAILABLE"
"RTN","PPPGET1",106,0)
 .S @TARRY@(FFXIFN,"STANO")="NOT AVAILABLE"
"RTN","PPPGET1",107,0)
 ;
"RTN","PPPGET1",108,0)
 ; Now fill in the rest of the data
"RTN","PPPGET1",109,0)
 ;
"RTN","PPPGET1",110,0)
 I $P(NODE0,"^",3)'="" D
"RTN","PPPGET1",111,0)
 .S @TARRY@(FFXIFN,"LVD")=$$I2EDT^PPPCNV1($P(NODE0,"^",3))
"RTN","PPPGET1",112,0)
 E  S @TARRY@(FFXIFN,"LVD")="NOT AVAILABLE"
"RTN","PPPGET1",113,0)
 I $P(NODE1,"^",2)'="" D
"RTN","PPPGET1",114,0)
 .S @TARRY@(FFXIFN,"LPDX")=$$I2EDT^PPPCNV1($P(NODE1,"^",2))
"RTN","PPPGET1",115,0)
 E  S @TARRY@(FFXIFN,"LPDX")="NOT AVAILABLE"
"RTN","PPPGET1",116,0)
 ;VMP OIFO BAY PINES;VGF;PPP*1.0*39
"RTN","PPPGET1",117,0)
 I $G(DOMAIN)]"" D
"RTN","PPPGET1",118,0)
 .S @TARRY@(FFXIFN,"DOMAIN")=$G(DOMAIN)
"RTN","PPPGET1",119,0)
 E  S @TARRY@(FFXIFN,"DOMAIN")="NOT AVAILABLE"
"RTN","PPPGET1",120,0)
 I $P(NODE1,"^",3)'="" D
"RTN","PPPGET1",121,0)
 .S @TARRY@(FFXIFN,"STATUS")=$P($$GETPDXST^PPPGET7($P(NODE1,"^",3)),"^",2)
"RTN","PPPGET1",122,0)
 E  S @TARRY@(FFXIFN,"STATUS")="NOT AVAILABLE"
"RTN","PPPGET1",123,0)
 I $P(NODE1,"^",4)'="" D
"RTN","PPPGET1",124,0)
 .S @TARRY@(FFXIFN,"LBRD")=$$I2EDT^PPPCNV1($P(NODE1,"^",4))
"RTN","PPPGET1",125,0)
 E  S @TARRY@(FFXIFN,"LBRD")="NOT AVAILABLE"
"RTN","PPPGET1",126,0)
 I $P(NODE0,"^",4)'="" D
"RTN","PPPGET1",127,0)
 .S @TARRY@(FFXIFN,"SOURCE")=$S(($P(NODE0,"^",4)=1):"MANUAL",1:"AUTO")
"RTN","PPPGET1",128,0)
 E  S @TARRY@(FFXIFN,"SOURCE")="NOT AVAILABLE"
"RTN","PPPGET1",129,0)
 I $P(NODE0,"^",5)'="" D
"RTN","PPPGET1",130,0)
 .S @TARRY@(FFXIFN,"ED")=$$I2EDT^PPPCNV1($P(NODE0,"^",5))
"RTN","PPPGET1",131,0)
 E  S @TARRY@(FFXIFN,"ED")="NOT AVAILABLE"
"RTN","PPPGET1",132,0)
 Q 0
"RTN","PPPGET1",133,0)
 ;
"RTN","PPPGET1",134,0)
GETFFIFN(PATDFN,SNIFN) ; Get the FFX ifn for a patient/station entry
"RTN","PPPGET1",135,0)
 ;
"RTN","PPPGET1",136,0)
 N PARMERR,FINDERR,FFIFN
"RTN","PPPGET1",137,0)
 ;
"RTN","PPPGET1",138,0)
 S PARMERR=-9001
"RTN","PPPGET1",139,0)
 S FINDERR=-9003
"RTN","PPPGET1",140,0)
 ;
"RTN","PPPGET1",141,0)
 I '$D(PATDFN) K PPPSRT Q PARMERR
"RTN","PPPGET1",142,0)
 I '$D(SNIFN) K PPPSRT Q PARMERR
"RTN","PPPGET1",143,0)
 ;
"RTN","PPPGET1",144,0)
 S FFIFN=$O(^PPP(1020.2,"APOV",PATDFN,SNIFN,""))
"RTN","PPPGET1",145,0)
 I FFIFN'>0 Q FINDERR
"RTN","PPPGET1",146,0)
 Q FFIFN
"RTN","PPPGET1",147,0)
 ;
"RTN","PPPGET1",148,0)
GETSSN(DFN) ;
"RTN","PPPGET1",149,0)
 ;
"RTN","PPPGET1",150,0)
 N DIC,DA,DR,DIQ,PPPTMP,SSN,DUOUT,DTOUT
"RTN","PPPGET1",151,0)
 ;
"RTN","PPPGET1",152,0)
 S DIC=2,DA=DFN,DR=".09",DIQ="PPPTMP",DIQ(0)="E"
"RTN","PPPGET1",153,0)
 D EN^DIQ1
"RTN","PPPGET1",154,0)
 S SSN=$G(PPPTMP(2,DFN,.09,"E"))
"RTN","PPPGET1",155,0)
 I SSN="" Q -1
"RTN","PPPGET1",156,0)
 Q SSN
"RTN","PPPGET1",157,0)
 ;
"RTN","PPPGET1",158,0)
GETSTANO(SNIFN) ;
"RTN","PPPGET1",159,0)
 I $D(^DIC(4,"D",SNIFN)) S STANO=SNIFN Q STANO
"RTN","PPPGET1",160,0)
 I $D(^PPP(1020.8,"B",SNIFN)) S STANO=SNIFN Q STANO
"RTN","PPPGET1",161,0)
 ;
"RTN","PPPGET1",162,0)
 N DIC,DA,DR,DIQ,PPPTMP,STANO
"RTN","PPPGET1",163,0)
 ;
"RTN","PPPGET1",164,0)
 S DIC=4,DA=SNIFN,DR="99",DIQ="PPPTMP",DIQ(0)="E"
"RTN","PPPGET1",165,0)
 ;PPP*1*21
"RTN","PPPGET1",166,0)
 D EN^DIQ1
"RTN","PPPGET1",167,0)
 S STANO=$G(PPPTMP(4,SNIFN,99,"E"))
"RTN","PPPGET1",168,0)
 I STANO="",$D(^PPP(1020.8,"B",SNIFN)) S STANO=SNIFN
"RTN","PPPGET1",169,0)
 I STANO="" Q -1
"RTN","PPPGET1",170,0)
 Q STANO
"RTN","PPPGET1",171,0)
 ;
"RTN","PPPGET1",172,0)
GETPATNM(DFN) ;
"RTN","PPPGET1",173,0)
 ;
"RTN","PPPGET1",174,0)
 N DIC,DA,DR,DIQ,PPPTMP,NAME
"RTN","PPPGET1",175,0)
 ;
"RTN","PPPGET1",176,0)
 S DIC=2,DA=DFN,DR=".01",DIQ="PPPTMP",DIQ(0)="E"
"RTN","PPPGET1",177,0)
 D EN^DIQ1
"RTN","PPPGET1",178,0)
 S NAME=$G(PPPTMP(2,DFN,.01,"E"))
"RTN","PPPGET1",179,0)
 I NAME="" Q -1
"RTN","PPPGET1",180,0)
 Q NAME
"RTN","PPPGET1",181,0)
 ;
"RTN","PPPGET1",182,0)
GETSTANM(SNIFN) ;
"RTN","PPPGET1",183,0)
 ;
"RTN","PPPGET1",184,0)
 N NAME
"RTN","PPPGET1",185,0)
 ;VMP OIFO BAY PINES;VGF;PPP*1.0*39
"RTN","PPPGET1",186,0)
 S SNIFN=$O(^PPP(1020.8,"B",SNIFN,""))
"RTN","PPPGET1",187,0)
 I SNIFN="" Q -1
"RTN","PPPGET1",188,0)
 S NAME=$P($G(^PPP(1020.8,SNIFN,0)),"^",2),NAME=$P(NAME,".",1)
"RTN","PPPGET1",189,0)
 I NAME="" Q -1
"RTN","PPPGET1",190,0)
 Q NAME
"RTN","PPPMPI")
0^3^B24128712
"RTN","PPPMPI",1,0)
PPPMPI ;BHM/DB - OBTAIN VISIT DATA FROM MPI ;21NOV01
"RTN","PPPMPI",2,0)
 ;;1.0;PHARMACY PRESCRIPTION PRACTICE;**35,39**;APR 7, 1995
"RTN","PPPMPI",3,0)
 ;
"RTN","PPPMPI",4,0)
 ;Reference to ^DPT("SSN" are covered by IA# 350
"RTN","PPPMPI",5,0)
 ;Reference to ^DIC(4) are covered by IA# 10090
"RTN","PPPMPI",6,0)
 D DONE
"RTN","PPPMPI",7,0)
 S (PPPCNT,PPPCNT1)=0
"RTN","PPPMPI",8,0)
 ;This routine extracts patient data from the
"RTN","PPPMPI",9,0)
 ;Treating Facility List file (#391.91)
"RTN","PPPMPI",10,0)
 ;^DGCN(391.91,D0,0) =
"RTN","PPPMPI",11,0)
 ;(#.01) PATIENT [1P] ^ (#.02) INSTITUTION [2P] ^
"RTN","PPPMPI",12,0)
 ;(#.03) DATE LAST TREATED [3D]
"RTN","PPPMPI",13,0)
 ;
"RTN","PPPMPI",14,0)
 W @IOF,!!,?20,"Build Foreign Facility Cross Reference",!
"RTN","PPPMPI",15,0)
 ;I '$D(^DGCN(391.91)) W !,"Sorry could not find the TREATING FACILITY LIST file (#391.91).",! G Q
"RTN","PPPMPI",16,0)
DATE ;Check for last build date
"RTN","PPPMPI",17,0)
 S PPPDUZ=DUZ
"RTN","PPPMPI",18,0)
 I $P($G(^PPP(1020.1,1,0)),"^",4)'>0 W !,"Could not find last build date." G ASKDT
"RTN","PPPMPI",19,0)
 S (PPPDT,Y)=$P($G(^PPP(1020.1,1,0)),"^",4) I +Y>0 X ^DD("DD") S PPPDT(1)=Y W !,"This option was last run on "_PPPDT(1)
"RTN","PPPMPI",20,0)
ASKDT S %DT("A")="Start searching from what date? " I $G(PPPDT)'="" S %DT(0)=PPPDT,%DT("B")=PPPDT(1)
"RTN","PPPMPI",21,0)
 S %DT="AE" D ^%DT G DONE:$G(DTOUT)=1 G DONE:+Y'>0  S PPPSTDT=+Y
"RTN","PPPMPI",22,0)
PPPSSN ;CHECK SSN
"RTN","PPPMPI",23,0)
 ;First check for Last SSN processed
"RTN","PPPMPI",24,0)
 S PPPSSN=$P($G(^PPP(1020.1,1,2)),"^",1) I PPPSSN="" S PPPSSN=0 G TSKMAN
"RTN","PPPMPI",25,0)
 I $O(^DPT("SSN",PPPSSN))="" W !!,?10,"The last SSN processed (",PPPSSN,") is the last in the file.",!,?10,"therefore, we will start the extract from the beginning.",! S PPPSSN=0 G TSKMAN
"RTN","PPPMPI",26,0)
 ;
"RTN","PPPMPI",27,0)
ASK1 W !,"Do you want to start this extract at SSN : ",PPPSSN," ? NO// " R AN:DTIME G DONE:AN["^" I AN="" S AN="N"
"RTN","PPPMPI",28,0)
 I "YyNn"'[AN W !!,?10,"Answer Y and the report will commence with the next SSN.",!,?10,"Answer 'N' and the process will start with the first SSN on file.",! K AN G ASK1
"RTN","PPPMPI",29,0)
 I "Yy"[AN G TSKMAN
"RTN","PPPMPI",30,0)
 I "Nn"[AN W !!,"OK, we'll start at the beginning." S PPPSSN=0
"RTN","PPPMPI",31,0)
TSKMAN ;Call taskman
"RTN","PPPMPI",32,0)
 W ! K DIR S DIR(0)="DA^NOW::ERSX",DIR("A")="When do you want to run this utility? ",DIR("B")="NOW",DIR("?")="Complete data and time must be stated." D ^DIR G DONE:$D(DIRUT)
"RTN","PPPMPI",33,0)
 F X="PPPSTDT","PPPRCVD","PPPDUZ","PPPSSN","PPPDT" S ZTSAVE(X)=""
"RTN","PPPMPI",34,0)
 S ZTDTH=Y,ZTRTN="PPPBGN^PPPMPI",ZTDESC="FFX BUILD FROM CD ROM",ZTIO=""
"RTN","PPPMPI",35,0)
 D ^%ZTLOAD
"RTN","PPPMPI",36,0)
 I '$D(ZTSK) D HOME^%ZIS W !,"Task was not started properly.",! G DONE
"RTN","PPPMPI",37,0)
 W !!,"Task Queued - Task Number: ",ZTSK,!!
"RTN","PPPMPI",38,0)
 G DONE
"RTN","PPPMPI",39,0)
 ;
"RTN","PPPMPI",40,0)
PPPBGN ;Entry point for building FFX file
"RTN","PPPMPI",41,0)
 D NOW^%DTC S Y=% X ^DD("DD") S PPPSTRT=Y,(PPPCNTR,PPPVSTC,PPPEND,PPPCNT,PPPENDT)=0
"RTN","PPPMPI",42,0)
 S PPPCNTR=0,PPPSSN1=PPPSSN F  S PPPSSN1=$O(^DPT("SSN",PPPSSN1)) Q:PPPSSN1=""  S PPPCNTR=$G(PPPCNTR)+1
"RTN","PPPMPI",43,0)
 ;
"RTN","PPPMPI",44,0)
 ;
"RTN","PPPMPI",45,0)
PPPLOOP S PPPSSN=$O(^DPT("SSN",PPPSSN)) G Q:$G(PPPSSN)="" S PPPCNT=$G(PPPCNT)+1,PPPDFN=+$$GETDFN^PPPGET1(PPPSSN) I $G(PPPDFN)'>0 G PPPLOOP
"RTN","PPPMPI",46,0)
 S ^PPP(1020.1,1,2)=PPPSSN,PPPEND=PPPSSN
"RTN","PPPMPI",47,0)
 K PPPDATA D TFL^VAFCTFU1(.PPPDATA,PPPDFN) ;Supported IA #2990
"RTN","PPPMPI",48,0)
 S PPPX1=0
"RTN","PPPMPI",49,0)
1 S PPPX1=$O(PPPDATA(PPPX1)) G PPPLOOP:PPPX1'>0 S DATA=PPPDATA(PPPX1),PPPVSTC=$G(PPPVSTC)+1
"RTN","PPPMPI",50,0)
 I $P(DATA,"^",5)'="VAMC" G 1
"RTN","PPPMPI",51,0)
 S PPPSITE=$P(DATA,"^",1) I $D(^PPP(1020.5,"B",PPPSITE)) G 1
"RTN","PPPMPI",52,0)
 I PPPSITE=$P($G(^PPP(1020.1,1,0)),"^",9) G 1
"RTN","PPPMPI",53,0)
 ;get visit information & update 1020.2
"RTN","PPPMPI",54,0)
 S PPPVST=$P($P(DATA,"^",3),".") I $G(PPPVST)<PPPSTDT G 1
"RTN","PPPMPI",55,0)
 ;
"RTN","PPPMPI",56,0)
MTCH ;Site data already exist for SSN
"RTN","PPPMPI",57,0)
 ;VMP OIFO BAY PINES;VGF;PPP*1.0*39;STORE INSTITUTION FILE IEN INTO PLACE OF VISIT FIELD OF 1020.2
"RTN","PPPMPI",58,0)
 K PPPIIEN
"RTN","PPPMPI",59,0)
 S PPPIIEN=$O(^DIC(4,"D",PPPSITE,0))
"RTN","PPPMPI",60,0)
 S PPPUPDT=0,PPPIEN1=$O(^PPP(1020.2,"APOV",PPPDFN,PPPIIEN,""))
"RTN","PPPMPI",61,0)
 I $G(PPPIEN1)>0 S PPPOLDDT=$P($G(^PPP(1020.2,PPPIEN1,0)),"^",3) D
"RTN","PPPMPI",62,0)
 .I $G(PPPOLDDT)'="",PPPVST>PPPOLDDT K DIE,DR S DIE="^PPP(1020.2,",DA=PPPIEN1,DR="2///"_PPPVST D ^DIE K DIE,DR,DA S PPPUPDT=1
"RTN","PPPMPI",63,0)
 I $G(PPPUPDT)=1 G 1
"RTN","PPPMPI",64,0)
 ;
"RTN","PPPMPI",65,0)
 ;
"RTN","PPPMPI",66,0)
 ;
"RTN","PPPMPI",67,0)
NEWSSN ;Add patient to 1020.2
"RTN","PPPMPI",68,0)
 S X=PPPDFN,DLAYGO="1020.2",DIC="^PPP(1020.2,",DIC(0)="",DIC("DR")="1////"_PPPIIEN_";2///"_PPPVST_";7///0" K DD,D0 D FILE^DICN
"RTN","PPPMPI",69,0)
 G 1
"RTN","PPPMPI",70,0)
Q ;
"RTN","PPPMPI",71,0)
 K DIC
"RTN","PPPMPI",72,0)
 D NOW^%DTC S Y=% X ^DD("DD") S PPPENDT=Y
"RTN","PPPMPI",73,0)
 S ^TMP($J,"PPP",1)=" "
"RTN","PPPMPI",74,0)
 S ^TMP($J,"PPP",2)=" RESULTS FROM BUILD PROCESS"
"RTN","PPPMPI",75,0)
 S ^TMP($J,"PPP",3)=" Build Started at   : "_$G(PPPSTRT)
"RTN","PPPMPI",76,0)
 S ^TMP($J,"PPP",4)=" Build Finished at  : "_$G(PPPENDT)
"RTN","PPPMPI",77,0)
 S ^TMP($J,"PPP",5)=" Last SSN processed : "_$G(PPPEND) I $O(^DPT("SSN",PPPEND))="" S ^TMP($J,"PPP",5)=^TMP($J,"PPP",5)_"   << Last SSN on file."
"RTN","PPPMPI",78,0)
 S ^TMP($J,"PPP",6)=" Processed "_$G(PPPCNT)_" out of "_$G(PPPCNTR)_" SSNs."
"RTN","PPPMPI",79,0)
 S ^TMP($J,"PPP",7)=" Examined "_$G(PPPVSTC)_" site visits"
"RTN","PPPMPI",80,0)
 ;
"RTN","PPPMPI",81,0)
 ;
"RTN","PPPMPI",82,0)
SNDMAIL ;Send message to user
"RTN","PPPMPI",83,0)
 S XMSUB="PHARMACY PRESCRIPTION PRACTICES",XMTEXT="^TMP("_$J_","_"""PPP"""_",",XMDUZ=.5,XMY(PPPDUZ)="" D ^XMD K XMDUZ
"RTN","PPPMPI",84,0)
 K ^TMP($J)
"RTN","PPPMPI",85,0)
DONE ;kill variables & exit
"RTN","PPPMPI",86,0)
 K AN,DA,DATA,DD,DIC,DIE,DIR,DR,OLDDT,PPPCNT,PPPCNT1,PPPCNTR,PPPDATA,PPPDFN,PPPDT,PPPDUZ,PPPEND,PPPENDT,PPPIEN1,PPPSITE,PPPSSN,PPPSSN1,PPPSTDT,PPPSTRT,PPPUPDT,PPPVST,PPPVSTC,PPPX1
"RTN","PPPMPI",87,0)
 K X,XMDUZ,XMY,Y Q
"RTN","PPPPDX3")
0^6^B3603781
"RTN","PPPPDX3",1,0)
PPPPDX3 ;ALB/DMB/DAD - ppp pdx routines ; 6/30/92
"RTN","PPPPDX3",2,0)
 ;;1.0;PHARMACY PRESCRIPTION PRACTICE;**1,2,21,32,39**;APR 7,1995
"RTN","PPPPDX3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PPPPDX3",4,0)
 ;
"RTN","PPPPDX3",5,0)
PDXFFX(SSN,DOMAIN) ; Get the FFX IFN or create a new entry for PDX
"RTN","PPPPDX3",6,0)
 ;
"RTN","PPPPDX3",7,0)
 ; This function is called by the PDX trigger to lookup or create
"RTN","PPPPDX3",8,0)
 ; an entry in the foreign facility cross-reference.
"RTN","PPPPDX3",9,0)
 ;
"RTN","PPPPDX3",10,0)
 ; Parameters:
"RTN","PPPPDX3",11,0)
 ;    SSN - The Patient SSN
"RTN","PPPPDX3",12,0)
 ;    DOMAIN - The Domain name the patient visited
"RTN","PPPPDX3",13,0)
 ;
"RTN","PPPPDX3",14,0)
 ; Returns:
"RTN","PPPPDX3",15,0)
 ;    Normal Termination - The Internal File Number of the entry.
"RTN","PPPPDX3",16,0)
 ;    Error - -9002 = could not find SSN in patient file or Domain
"RTN","PPPPDX3",17,0)
 ;                    name.
"RTN","PPPPDX3",18,0)
 ;            -9003 = An error occurred while creating the new entry.
"RTN","PPPPDX3",19,0)
 ;
"RTN","PPPPDX3",20,0)
 N LKUPERR,FMERR,ERR,PATDFN,SNIFN,FFXIFN,X,DIC,Y,DA,HDRNODE
"RTN","PPPPDX3",21,0)
 N TRECS,U,NEWREC
"RTN","PPPPDX3",22,0)
 ;
"RTN","PPPPDX3",23,0)
 S LOCKERR=-9004
"RTN","PPPPDX3",24,0)
 S LKUPERR=-9003
"RTN","PPPPDX3",25,0)
 S FMERR=-9002
"RTN","PPPPDX3",26,0)
 S ERR=0
"RTN","PPPPDX3",27,0)
 S U="^"
"RTN","PPPPDX3",28,0)
 ;
"RTN","PPPPDX3",29,0)
 ; -- Check Input
"RTN","PPPPDX3",30,0)
 Q:'$D(DOMAIN) FMERR
"RTN","PPPPDX3",31,0)
 Q:DOMAIN="" FMERR
"RTN","PPPPDX3",32,0)
 Q:'$D(^PPP(1020.8,"C",DOMAIN)) FMERR
"RTN","PPPPDX3",33,0)
 ;
"RTN","PPPPDX3",34,0)
 ; Look up the patient IFN
"RTN","PPPPDX3",35,0)
 ;
"RTN","PPPPDX3",36,0)
 S PATDFN=$O(^DPT("SSN",SSN,""))
"RTN","PPPPDX3",37,0)
 S:PATDFN<1 ERR=LKUPERR
"RTN","PPPPDX3",38,0)
 ;PPP*1*32 (Dave B - Check B & C xref for domain name)
"RTN","PPPPDX3",39,0)
 S SNIFN=$$FIND1^DIC(4.2,"","MX",DOMAIN,"B^C","","EMSG")
"RTN","PPPPDX3",40,0)
 S SNIFN=+$P(^DIC(4.2,SNIFN,0),"^",13)
"RTN","PPPPDX3",41,0)
 ;VMP OIFO BAY PINES;VGF;PPP*1.0*39
"RTN","PPPPDX3",42,0)
 S SNIFN=$O(^DIC(4,"D",SNIFN,0))
"RTN","PPPPDX3",43,0)
 S:SNIFN<1 ERR=LKUPERR
"RTN","PPPPDX3",44,0)
DAVE ;
"RTN","PPPPDX3",45,0)
 ; If the INPUTS are good then see if there is an entry in the FFX file.
"RTN","PPPPDX3",46,0)
 I 'ERR D
"RTN","PPPPDX3",47,0)
 .S FFXIFN=$O(^PPP(1020.2,"AC",PATDFN,DOMAIN,""))
"RTN","PPPPDX3",48,0)
 .;
"RTN","PPPPDX3",49,0)
 .; If the entry isn't there then create a new one
"RTN","PPPPDX3",50,0)
 .;
"RTN","PPPPDX3",51,0)
 .I FFXIFN'>0 D
"RTN","PPPPDX3",52,0)
 ..S X=PATDFN
"RTN","PPPPDX3",53,0)
 ..S DIC="^PPP(1020.2,"
"RTN","PPPPDX3",54,0)
 ..S DLAYGO="1020.2"
"RTN","PPPPDX3",55,0)
 ..S DIC(0)="L"
"RTN","PPPPDX3",56,0)
 ..S DIC("DR")="1////"_SNIFN_";7////0;8////"_$G(DT)
"RTN","PPPPDX3",57,0)
 ..K DD,DO D FILE^DICN K DIC,DLAYGO,DO,DD
"RTN","PPPPDX3",58,0)
 ..;(PPP*1*32 Fix Quit without return value on next line - Dave B)
"RTN","PPPPDX3",59,0)
 ..I $P(Y,U,3)'=1 S ERR=LKUPERR
"RTN","PPPPDX3",60,0)
 Q:ERR ERR
"RTN","PPPPDX3",61,0)
 Q $P(Y,U,1)
"VER")
8.0^22.0
"BLD",5170,6)
^35
**END**
**END**
