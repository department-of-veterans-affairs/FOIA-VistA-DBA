Released XU*8*49 SEQ #49
Extracted from mail message
**KIDS**:XU*8.0*49^

**INSTALL NAME**
XU*8.0*49
"BLD",134,0)
XU*8.0*49^KERNEL^0^2970807^y
"BLD",134,1,0)
^^175^175^2970807^
"BLD",134,1,1,0)
PLEASE NOTE: Sites currently testing Broker version T9 or who have
"BLD",134,1,2,0)
installed a test version of XU*8*59 will need to reinstall XU*8*59 after
"BLD",134,1,3,0)
installing this patch.
"BLD",134,1,4,0)
 
"BLD",134,1,5,0)
This patch fixes the following NOISs and REQUESTS:
"BLD",134,1,6,0)
 
"BLD",134,1,7,0)
    NOIS                       Description of fix: 
"BLD",134,1,8,0)
 
"BLD",134,1,9,0)
LAS-1196-60534                 When using the option 'Resource Device
"BLD",134,1,10,0)
Edit,' the field 'RESOURCE SLOTS' would get reset to 1.  The patch
"BLD",134,1,11,0)
resolves this by performing changes to the DD.
"BLD",134,1,12,0)
 
"BLD",134,1,13,0)
ISL-1196-50019                 When a system crashes, resources are left
"BLD",134,1,14,0)
and still allocated, preventing new jobs from starting.  This patch
"BLD",134,1,15,0)
provides a new option that can release all resources at startup (Clear all
"BLD",134,1,16,0)
Resources) and also an option to release a given slot on a resource (Clear
"BLD",134,1,17,0)
one Resource). New routine XUDHRES, change to ZIS6, ZISC.
"BLD",134,1,18,0)
 
"BLD",134,1,19,0)
MUR-0196-30539-XQ33            The option to delete unreferenced options
"BLD",134,1,20,0)
from the option file didn't check for options used in the new TaskMan
"BLD",134,1,21,0)
Schedule file. Added field 209.2 (KEEP FROM DELETING) to the option file.
"BLD",134,1,22,0)
 
"BLD",134,1,23,0)
CTX-0297-70559                 It was possible to get an earlier entry with
"BLD",134,1,24,0)
the Effective Date greater than the next entry.  This caused problems when
"BLD",134,1,25,0)
programes tried to find the current person class.  Fixed with a change to
"BLD",134,1,26,0)
the DD so only greater dates are allowed. 
"BLD",134,1,27,0)
 
"BLD",134,1,28,0)
 
"BLD",134,1,29,0)
CHANGES MADE IN RESPONSE TO REQUESTS:
"BLD",134,1,30,0)
 
"BLD",134,1,31,0)
When using the RJD option to stop a TaskMan job, you used to have to
"BLD",134,1,32,0)
DISPLAY the task before you could delete it.  Modification to routine
"BLD",134,1,33,0)
XUTMRJD was made to allow site to say NO to the display and still delete
"BLD",134,1,34,0)
the task from the running task list.  MSG 1060759 (Pete Tichenor)
"BLD",134,1,35,0)
 
"BLD",134,1,36,0)
Removes the testing for MWAPI from ZUMSM.  (Trouble calls)
"BLD",134,1,37,0)
 
"BLD",134,1,38,0)
Have XUS display the Node the user is on.  Changed the XUS routine to
"BLD",134,1,39,0)
display the Volume-set:Node rather than just the Volume-set alone.
"BLD",134,1,40,0)
Changed the first read to include output text as before in order to flush
"BLD",134,1,41,0)
the input buffer on certain systems, such as MSM.  (E3R 8568)
"BLD",134,1,42,0)
 
"BLD",134,1,43,0)
Cleans-up pointers to files 3,6,16,20 in sort and print templates.  It
"BLD",134,1,44,0)
adds checks to code of XUSERNEW, XUA4A7 so they are ready for file
"BLD",134,1,45,0)
3,6,16,20 cleanup.
"BLD",134,1,46,0)
 
"BLD",134,1,47,0)
Cleans up cross-references in files DEVICE, OPTION, and KERMIT HOLDING.
"BLD",134,1,48,0)
   
"BLD",134,1,49,0)
INVALID LOCK - This patch adds a timeout to the one lock without one.
"BLD",134,1,50,0)
Routine XUTMK was modified to resolve this problem.  (E3R #9278)
"BLD",134,1,51,0)
   
"BLD",134,1,52,0)
Updates the ID nodes of files 3.2 and 3.5 to use DDIOL.  Routine XUINPCH
"BLD",134,1,53,0)
   
"BLD",134,1,54,0)
Corrects a problem with the status code returned by STAT^%ZTLOAD.  It
"BLD",134,1,55,0)
formerly returned "Inactive: Interrupted" when it should have returned
"BLD",134,1,56,0)
"Active: Running". Fixed with changes to %ZTLOAD5.
"BLD",134,1,57,0)
 
"BLD",134,1,58,0)
Changes a call in %ZTMS3 from ZSYNC to PURGELST^%MSMOPS on MSM 4.3
"BLD",134,1,59,0)
systems.  In response to a request from MSM.
"BLD",134,1,60,0)
 
"BLD",134,1,61,0)
Changes the way ZTMS1 waits under load.
"BLD",134,1,62,0)
 
"BLD",134,1,63,0)
Changes %ZIS4 to clean up the IO("ERROR") and IO("LASTERR") variable.
"BLD",134,1,64,0)
 
"BLD",134,1,65,0)
This patch made a change to the setting of IO("ZIO"). ZIS4VXD, ZIS4MSM.
"BLD",134,1,66,0)
 
"BLD",134,1,67,0)
Changes PRIORITY code to keep jobs from assuming system priority.
"BLD",134,1,68,0)
(Capacity Management ZOSVMSM) 
"BLD",134,1,69,0)
 
"BLD",134,1,70,0)
Fix $$STATUS^%ZISH  not looking at the correct variable.
"BLD",134,1,71,0)
 
"BLD",134,1,72,0)
Improves the $STACK reporting on DSM systems.
"BLD",134,1,73,0)
 
"BLD",134,1,74,0)
Adds the following new entry point for modifying resource devices (please
"BLD",134,1,75,0)
see the Supported References file for full details):
"BLD",134,1,76,0)
$$RES^XUDHSET(device_name,resource_name,slot_count,description,subtype)
"BLD",134,1,77,0)
       device_name   For the resource device.
"BLD",134,1,78,0)
       resource_name (optional) The resource name if not the same as the device
"BLD",134,1,79,0)
                     name.
"BLD",134,1,80,0)
       slot_count    The number of concurrent jobs that can use this device.
"BLD",134,1,81,0)
                     defaults to 1.
"BLD",134,1,82,0)
       description   The device description, defaults to 'Resource Device'.
"BLD",134,1,83,0)
       subtype       The subtype to use, defaults to P-OTHER.
"BLD",134,1,84,0)
       returns       If an error '-1^text'
"BLD",134,1,85,0)
                     The 'IEN^device name' like a DIC call.
"BLD",134,1,86,0)
 
"BLD",134,1,87,0)
 
"BLD",134,1,88,0)
  
"BLD",134,1,89,0)
Routine Summary:
"BLD",134,1,90,0)
================
"BLD",134,1,91,0)
 
"BLD",134,1,92,0)
                 Checksum
"BLD",134,1,93,0)
Routine         Old       New      2nd Line
"BLD",134,1,94,0)
XQ33          8337880   8946889    **49**
"BLD",134,1,95,0)
XUA4A7        5092665   5114645    **49**
"BLD",134,1,96,0)
XUA4A72       2742817   3400179    **27,49**
"BLD",134,1,97,0)
XUDHRES                  917964    **49**
"BLD",134,1,98,0)
XUDHSET                 1534104    **49**
"BLD",134,1,99,0)
XUINPCH       1467475   2465171    **20,36,49**
"BLD",134,1,100,0)
XUS           7592994   7619050    **16,26,49**
"BLD",134,1,101,0)
XUSERNEW      6789632   6995154    **16,49**
"BLD",134,1,102,0)
XUTMK         6472549   6514964    **49**
"BLD",134,1,103,0)
XUTMRJD       6336192   6554859    **49**
"BLD",134,1,104,0)
ZIS1          9986473  10316454    **18,49**
"BLD",134,1,105,0)
ZIS4MSM       6649854   7202298    **23,36,49**
"BLD",134,1,106,0)
ZIS4VXD       8342152   8150990    **23,36,49**
"BLD",134,1,107,0)
ZIS6          9961139   9917028    **24,49**
"BLD",134,1,108,0)
ZISC          8463272   7980129    **24,36,49**
"BLD",134,1,109,0)
ZISHMSM       5354551   5354575    **24,36,49**
"BLD",134,1,110,0)
ZOSVMSM      11524674  11538678    **13,25,49**
"BLD",134,1,111,0)
ZTER1         5603505   5664740    **18,24,36,49**
"BLD",134,1,112,0)
ZTLOAD5                 4735916    **49**
"BLD",134,1,113,0)
ZTMS1         6234917   6234917    **36,49**
"BLD",134,1,114,0)
ZTMS3         9454395   9603212    **1,18,36,49**
"BLD",134,1,115,0)
ZUMSM         2237614   2252648    **13,42,49**
"BLD",134,1,116,0)
 
"BLD",134,1,117,0)
========================================================================= 
"BLD",134,1,118,0)
Installation:
"BLD",134,1,119,0)
 
"BLD",134,1,120,0)
  1.  Some of these routines are usually mapped on systems that allow 
"BLD",134,1,121,0)
      mapping, so you will need to disable mapping for the effected routines.
"BLD",134,1,122,0)
      
"BLD",134,1,123,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",134,1,124,0)
      option will load the KIDS package onto your system.
"BLD",134,1,125,0)
      
"BLD",134,1,126,0)
  3.  The patch has now been loaded into a Transport global on your
"BLD",134,1,127,0)
      system. You now need to use KIDS to install the Transport global.
"BLD",134,1,128,0)
      On the KIDS menu, under the 'Installation' menu, use the following
"BLD",134,1,129,0)
      options:
"BLD",134,1,130,0)
      
"BLD",134,1,131,0)
         Verify Checksum's in Transport Global
"BLD",134,1,132,0)
         Print Transport Global
"BLD",134,1,133,0)
         Compare Transport Global to Current System
"BLD",134,1,134,0)
         Backup a Transport Global
"BLD",134,1,135,0)
               
"BLD",134,1,136,0)
  4.  Inhibit users from logging into the system.
"BLD",134,1,137,0)
      Also place TASKMAN in a wait state.
"BLD",134,1,138,0)
      
"BLD",134,1,139,0)
  5.  On the KIDS menu, under the 'Installation' menu, use the following
"BLD",134,1,140,0)
      options:
"BLD",134,1,141,0)
         Install Package(s)  'XU*8.0*49'
"BLD",134,1,142,0)
                              =========
"BLD",134,1,143,0)
         
"BLD",134,1,144,0)
  6.  MSM Sites - With Taskman not working you need to move the routine to
"BLD",134,1,145,0)
      other CPU's with the D ^XPDCPU
"BLD",134,1,146,0)
      MSM Sites - On each cpu rename ZUMSM to ZU with: ZL ZUMSM ZS ZU
"BLD",134,1,147,0)
      
"BLD",134,1,148,0)
  7.  After installing this patch, you need to move several routines from 
"BLD",134,1,149,0)
      your production account to each manager account:
"BLD",134,1,150,0)
      ZIS1
"BLD",134,1,151,0)
      ZIS4MSM
"BLD",134,1,152,0)
      ZIS4VXD
"BLD",134,1,153,0)
      ZIS6
"BLD",134,1,154,0)
      ZISC
"BLD",134,1,155,0)
      ZISHMSM
"BLD",134,1,156,0)
      ZOSVMSM
"BLD",134,1,157,0)
      ZTER1
"BLD",134,1,158,0)
      ZTLOAD5
"BLD",134,1,159,0)
      ZTMS1
"BLD",134,1,160,0)
      ZTMS3
"BLD",134,1,161,0)
    
"BLD",134,1,162,0)
      And in the manager account,
"BLD",134,1,163,0)
       
"BLD",134,1,164,0)
      DO RELOAD^ZTMGRSET
"BLD",134,1,165,0)
      Select the System
"BLD",134,1,166,0)
      Patch number to load: 49
"BLD",134,1,167,0)
                            ==
"BLD",134,1,168,0)
      Move these MGR routines to your other CPU's.
"BLD",134,1,169,0)
       
"BLD",134,1,170,0)
  8.  AXP Sites, after patch has installed, rebuild your map set.
"BLD",134,1,171,0)
 
"BLD",134,1,172,0)
  9.  Enable user's login.
"BLD",134,1,173,0)
      Remove TASKMAN from the wait state.
"BLD",134,1,174,0)
 
"BLD",134,1,175,0)
 =========================================================================
"BLD",134,4,0)
^9.64PA^200^4
"BLD",134,4,3.5,0)
3.5
"BLD",134,4,3.5,2,0)
^9.641^3.5^1
"BLD",134,4,3.5,2,3.5,0)
DEVICE  (File-top level)
"BLD",134,4,3.5,2,3.5,1,0)
^9.6411^35^3
"BLD",134,4,3.5,2,3.5,1,1,0)
$I
"BLD",134,4,3.5,2,3.5,1,2,0)
TYPE
"BLD",134,4,3.5,2,3.5,1,35,0)
RESOURCE SLOTS
"BLD",134,4,3.5,222)
y^y^p^^^^n
"BLD",134,4,19,0)
19
"BLD",134,4,19,2,0)
^9.641^19^1
"BLD",134,4,19,2,19,0)
OPTION  (File-top level)
"BLD",134,4,19,2,19,1,0)
^9.6411^209.2^2
"BLD",134,4,19,2,19,1,.01,0)
NAME
"BLD",134,4,19,2,19,1,209.2,0)
KEEP FROM DELETING
"BLD",134,4,19,222)
y^y^p^^^^n
"BLD",134,4,200,0)
200
"BLD",134,4,200,2,0)
^9.641^200.05^1
"BLD",134,4,200,2,200.05,0)
PERSON CLASS  (sub-file)
"BLD",134,4,200,2,200.05,1,0)
^9.6411^2^1
"BLD",134,4,200,2,200.05,1,2,0)
Effective Date
"BLD",134,4,200,222)
y^n^p^^^^n
"BLD",134,4,8980,0)
8980
"BLD",134,4,8980,2,0)
^9.641^8980^1
"BLD",134,4,8980,2,8980,0)
KERMIT HOLDING  (File-top level)
"BLD",134,4,8980,2,8980,1,0)
^9.6411^.01^1
"BLD",134,4,8980,2,8980,1,.01,0)
NAME
"BLD",134,4,8980,222)
y^y^p^^^^n
"BLD",134,4,"APDD",3.5,3.5)

"BLD",134,4,"APDD",3.5,3.5,1)

"BLD",134,4,"APDD",3.5,3.5,2)

"BLD",134,4,"APDD",3.5,3.5,35)

"BLD",134,4,"APDD",19,19)

"BLD",134,4,"APDD",19,19,.01)

"BLD",134,4,"APDD",19,19,209.2)

"BLD",134,4,"APDD",200,200.05)

"BLD",134,4,"APDD",200,200.05,2)

"BLD",134,4,"APDD",8980,8980)

"BLD",134,4,"APDD",8980,8980,.01)

"BLD",134,4,"B",3.5,3.5)

"BLD",134,4,"B",19,19)

"BLD",134,4,"B",200,200)

"BLD",134,4,"B",8980,8980)

"BLD",134,"INIT")
POST49^XUINPCH
"BLD",134,"KRN",0)
^9.67PA^19^12
"BLD",134,"KRN",.4,0)
.4
"BLD",134,"KRN",.401,0)
.401
"BLD",134,"KRN",.401,"NM",0)
^9.68A^6^6
"BLD",134,"KRN",.401,"NM",1,0)
XU-SIGNON-USER    FILE #3.081^3.081^0
"BLD",134,"KRN",.401,"NM",2,0)
XU-ZISPL-USER    FILE #3.51^3.51^0
"BLD",134,"KRN",.401,"NM",3,0)
XUFDISPS    FILE #3.05^3.05^0
"BLD",134,"KRN",.401,"NM",4,0)
XUPMDISPS    FILE #3.07^3.07^0
"BLD",134,"KRN",.401,"NM",5,0)
XUUFAA    FILE #3.05^3.05^0
"BLD",134,"KRN",.401,"NM",6,0)
XUUSEROPTS    FILE #19.081^19.081^0
"BLD",134,"KRN",.401,"NM","B","XU-SIGNON-USER    FILE #3.081",1)

"BLD",134,"KRN",.401,"NM","B","XU-ZISPL-USER    FILE #3.51",2)

"BLD",134,"KRN",.401,"NM","B","XUFDISPS    FILE #3.05",3)

"BLD",134,"KRN",.401,"NM","B","XUPMDISPS    FILE #3.07",4)

"BLD",134,"KRN",.401,"NM","B","XUUFAA    FILE #3.05",5)

"BLD",134,"KRN",.401,"NM","B","XUUSEROPTS    FILE #19.081",6)

"BLD",134,"KRN",.402,0)
.402
"BLD",134,"KRN",.403,0)
.403
"BLD",134,"KRN",.403,"NM",0)
^9.68A^3^3
"BLD",134,"KRN",.403,"NM",1,0)
XUEXISTING USER    FILE #200^200^0
"BLD",134,"KRN",.403,"NM",2,0)
XUNEW USER    FILE #200^200^0
"BLD",134,"KRN",.403,"NM",3,0)
XUREACT USER    FILE #200^200^0
"BLD",134,"KRN",.403,"NM","B","XUEXISTING USER    FILE #200",1)

"BLD",134,"KRN",.403,"NM","B","XUNEW USER    FILE #200",2)

"BLD",134,"KRN",.403,"NM","B","XUREACT USER    FILE #200",3)

"BLD",134,"KRN",.5,0)
.5
"BLD",134,"KRN",.84,0)
.84
"BLD",134,"KRN",3.6,0)
3.6
"BLD",134,"KRN",3.8,0)
3.8
"BLD",134,"KRN",9.2,0)
9.2
"BLD",134,"KRN",9.8,0)
9.8
"BLD",134,"KRN",9.8,"NM",0)
^9.68A^27^21
"BLD",134,"KRN",9.8,"NM",1,0)
XUTMRJD^^0^B21145895
"BLD",134,"KRN",9.8,"NM",2,0)
ZTMS1^^0^B20410757
"BLD",134,"KRN",9.8,"NM",3,0)
ZISC^^0^B20074000
"BLD",134,"KRN",9.8,"NM",5,0)
ZTLOAD5^^0^B9754236
"BLD",134,"KRN",9.8,"NM",6,0)
ZIS6^^0^B16912186
"BLD",134,"KRN",9.8,"NM",9,0)
ZTMS3^^0^B21599380
"BLD",134,"KRN",9.8,"NM",10,0)
XUDHRES^^0^B1291589
"BLD",134,"KRN",9.8,"NM",11,0)
ZUMSM^^0^B3712287
"BLD",134,"KRN",9.8,"NM",12,0)
XUS^^0^B17549352
"BLD",134,"KRN",9.8,"NM",13,0)
XUSERNEW^^0^B11722607
"BLD",134,"KRN",9.8,"NM",16,0)
ZIS4VXD^^0^B17418105
"BLD",134,"KRN",9.8,"NM",17,0)
ZIS4MSM^^0^B15650959
"BLD",134,"KRN",9.8,"NM",19,0)
XQ33^^0^B11354998
"BLD",134,"KRN",9.8,"NM",20,0)
XUA4A7^^0^B9706649
"BLD",134,"KRN",9.8,"NM",21,0)
XUTMK^^0^B18365502
"BLD",134,"KRN",9.8,"NM",22,0)
ZOSVMSM^^0^B34006239
"BLD",134,"KRN",9.8,"NM",23,0)
ZTER1^^0^B8079001
"BLD",134,"KRN",9.8,"NM",24,0)
ZIS1^^0^B19253055
"BLD",134,"KRN",9.8,"NM",25,0)
XUA4A72^^0^B7383051
"BLD",134,"KRN",9.8,"NM",26,0)
ZISHMSM^^0^B30589986
"BLD",134,"KRN",9.8,"NM",27,0)
XUDHSET^^0^B1950771
"BLD",134,"KRN",9.8,"NM","B","XQ33",19)

"BLD",134,"KRN",9.8,"NM","B","XUA4A7",20)

"BLD",134,"KRN",9.8,"NM","B","XUA4A72",25)

"BLD",134,"KRN",9.8,"NM","B","XUDHRES",10)

"BLD",134,"KRN",9.8,"NM","B","XUDHSET",27)

"BLD",134,"KRN",9.8,"NM","B","XUS",12)

"BLD",134,"KRN",9.8,"NM","B","XUSERNEW",13)

"BLD",134,"KRN",9.8,"NM","B","XUTMK",21)

"BLD",134,"KRN",9.8,"NM","B","XUTMRJD",1)

"BLD",134,"KRN",9.8,"NM","B","ZIS1",24)

"BLD",134,"KRN",9.8,"NM","B","ZIS4MSM",17)

"BLD",134,"KRN",9.8,"NM","B","ZIS4VXD",16)

"BLD",134,"KRN",9.8,"NM","B","ZIS6",6)

"BLD",134,"KRN",9.8,"NM","B","ZISC",3)

"BLD",134,"KRN",9.8,"NM","B","ZISHMSM",26)

"BLD",134,"KRN",9.8,"NM","B","ZOSVMSM",22)

"BLD",134,"KRN",9.8,"NM","B","ZTER1",23)

"BLD",134,"KRN",9.8,"NM","B","ZTLOAD5",5)

"BLD",134,"KRN",9.8,"NM","B","ZTMS1",2)

"BLD",134,"KRN",9.8,"NM","B","ZTMS3",9)

"BLD",134,"KRN",9.8,"NM","B","ZUMSM",11)

"BLD",134,"KRN",19,0)
19
"BLD",134,"KRN",19,"NM",0)
^9.68A^7^7
"BLD",134,"KRN",19,"NM",1,0)
XUDEV RES-CLEAR^^0
"BLD",134,"KRN",19,"NM",2,0)
XUDEV RES-ONE^^0
"BLD",134,"KRN",19,"NM",3,0)
XUTIO^^2
"BLD",134,"KRN",19,"NM",4,0)
XUERRS^^2
"BLD",134,"KRN",19,"NM",5,0)
XUERTRP CLEAN^^0
"BLD",134,"KRN",19,"NM",6,0)
XUERTRP TYPE^^0
"BLD",134,"KRN",19,"NM",7,0)
XU-PERSON CLASS REMOVE^^0
"BLD",134,"KRN",19,"NM","B","XU-PERSON CLASS REMOVE",7)

"BLD",134,"KRN",19,"NM","B","XUDEV RES-CLEAR",1)

"BLD",134,"KRN",19,"NM","B","XUDEV RES-ONE",2)

"BLD",134,"KRN",19,"NM","B","XUERRS",4)

"BLD",134,"KRN",19,"NM","B","XUERTRP CLEAN",5)

"BLD",134,"KRN",19,"NM","B","XUERTRP TYPE",6)

"BLD",134,"KRN",19,"NM","B","XUTIO",3)

"BLD",134,"KRN",19.1,0)
19.1
"BLD",134,"KRN","B",.4,.4)

"BLD",134,"KRN","B",.401,.401)

"BLD",134,"KRN","B",.402,.402)

"BLD",134,"KRN","B",.403,.403)

"BLD",134,"KRN","B",.5,.5)

"BLD",134,"KRN","B",.84,.84)

"BLD",134,"KRN","B",3.6,3.6)

"BLD",134,"KRN","B",3.8,3.8)

"BLD",134,"KRN","B",9.2,9.2)

"BLD",134,"KRN","B",9.8,9.8)

"BLD",134,"KRN","B",19,19)

"BLD",134,"KRN","B",19.1,19.1)

"BLD",134,"QUES",0)
^9.62^^
"BLD",134,"REQB",0)
^9.611^^
"FIA",3.5)
DEVICE
"FIA",3.5,0)
^%ZIS(1,
"FIA",3.5,0,0)
3.5Is
"FIA",3.5,0,1)
y^y^p^^^^n
"FIA",3.5,0,10)

"FIA",3.5,0,11)

"FIA",3.5,0,"RLRO")

"FIA",3.5,0,"VR")
8.0^XU
"FIA",3.5,3.5)
1
"FIA",3.5,3.5,1)

"FIA",3.5,3.5,2)

"FIA",3.5,3.5,35)

"FIA",19)
OPTION
"FIA",19,0)
^DIC(19,
"FIA",19,0,0)
19I
"FIA",19,0,1)
y^y^p^^^^n
"FIA",19,0,10)

"FIA",19,0,11)

"FIA",19,0,"RLRO")

"FIA",19,0,"VR")
8.0^XU
"FIA",19,19)
1
"FIA",19,19,.01)

"FIA",19,19,209.2)

"FIA",200)
NEW PERSON
"FIA",200,0)
^VA(200,
"FIA",200,0,0)
200I
"FIA",200,0,1)
y^n^p^^^^n
"FIA",200,0,10)

"FIA",200,0,11)

"FIA",200,0,"RLRO")

"FIA",200,0,"VR")
8.0^XU
"FIA",200,200)
1
"FIA",200,200.05)
1
"FIA",200,200.05,2)

"FIA",8980)
KERMIT HOLDING
"FIA",8980,0)
^DIZ(8980,
"FIA",8980,0,0)
8980s
"FIA",8980,0,1)
y^y^p^^^^n
"FIA",8980,0,10)

"FIA",8980,0,11)

"FIA",8980,0,"RLRO")

"FIA",8980,0,"VR")
8.0^XU
"FIA",8980,8980)
1
"FIA",8980,8980,.01)

"INIT")
POST49^XUINPCH
"KRN",.401,3,-1)
0^4
"KRN",.401,3,0)
XUPMDISPS^2961213.1626^^3.07^^^2961213
"KRN",.401,3,2,0)
^.4014^2^2
"KRN",.401,3,2,1,0)
3.07^^USER^+@".01^;S1^^^^^4
"KRN",.401,3,2,1,"CM")
S Y(1)=$S($D(^%ZUA(3.07,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,1),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(1)=X
"KRN",.401,3,2,1,"GET")
S Y(1)=$S($D(^%ZUA(3.07,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,1),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(1)=X
"KRN",.401,3,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,3,2,1,"TXT")
USER not null
"KRN",.401,3,2,2,0)
3.07^0^DATE/TIME^@^^^D^^^1
"KRN",.401,3,2,2,"QCON")
I D0'=""
"KRN",.401,3,2,2,"TXT")
DATE/TIME not null
"KRN",.401,3,2,"B",3.07,1)

"KRN",.401,3,2,"B",3.07,2)

"KRN",.401,5,-1)
0^5
"KRN",.401,5,0)
XUUFAA^2961213.156^^3.05^^^2961213
"KRN",.401,5,2,0)
^.4014^3^3
"KRN",.401,5,2,1,0)
3.05^0^DATE/TIME OF ATTEMPT^^^^D^^^1
"KRN",.401,5,2,1,"QCON")
I D0'=""
"KRN",.401,5,2,1,"TXT")
DATE/TIME OF ATTEMPT not null
"KRN",.401,5,2,2,0)
3.05^^USER^"5^^^^^^4
"KRN",.401,5,2,2,"CM")
S Y(1)=$S($D(^%ZUA(3.05,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,6),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(2)=X
"KRN",.401,5,2,2,"GET")
S Y(1)=$S($D(^%ZUA(3.05,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,6),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(2)=X
"KRN",.401,5,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,5,2,2,"TXT")
USER not null
"KRN",.401,5,2,3,0)
3.05^2^TYPE OF FAILED ATTEMPT^^^^^^^3
"KRN",.401,5,2,3,"GET")
S DISX(3)=$P($G(^%ZUA(3.05,D0,0)),U,3)
"KRN",.401,5,2,3,"QCON")
I DISX(3)'=""
"KRN",.401,5,2,3,"TXT")
TYPE OF FAILED ATTEMPT not null
"KRN",.401,5,2,"B",3.05,1)

"KRN",.401,5,2,"B",3.05,2)

"KRN",.401,5,2,"B",3.05,3)

"KRN",.401,6,-1)
0^3
"KRN",.401,6,0)
XUFDISPS^2961213.1557^^3.05^^^2961213
"KRN",.401,6,2,0)
^.4014^2^2
"KRN",.401,6,2,1,0)
3.05^^USER^+@"5^;S1^^^^^4
"KRN",.401,6,2,1,"CM")
S Y(1)=$S($D(^%ZUA(3.05,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,6),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(1)=X
"KRN",.401,6,2,1,"GET")
S Y(1)=$S($D(^%ZUA(3.05,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,6),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(1)=X
"KRN",.401,6,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,6,2,1,"TXT")
USER not null
"KRN",.401,6,2,2,0)
3.05^0^DATE/TIME OF ATTEMPT^@^^^D^^^1
"KRN",.401,6,2,2,"QCON")
I D0'=""
"KRN",.401,6,2,2,"TXT")
DATE/TIME OF ATTEMPT not null
"KRN",.401,6,2,"B",3.05,1)

"KRN",.401,6,2,"B",3.05,2)

"KRN",.401,10,-1)
0^6
"KRN",.401,10,0)
XUUSEROPTS^2961213.1606^^19.081^^^2961213
"KRN",.401,10,2,0)
^.4014^2^2
"KRN",.401,10,2,1,0)
19.081^^USER^"1^^^^^^4
"KRN",.401,10,2,1,"CM")
S Y(1)=$S($D(^XUSEC(19,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,2),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(1)=X
"KRN",.401,10,2,1,"F")
@z^A
"KRN",.401,10,2,1,"GET")
S Y(1)=$S($D(^XUSEC(19,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,2),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(1)=X
"KRN",.401,10,2,1,"QCON")
I DISX(1)]]"@z"
"KRN",.401,10,2,1,"T")
z^z
"KRN",.401,10,2,1,"TXT")
USER from A
"KRN",.401,10,2,2,0)
19.081^^OPTION^".01^^^^^^4
"KRN",.401,10,2,2,"CM")
S Y(1)=$S($D(^XUSEC(19,D0,0)):^(0),1:"") S X=$S('$D(^DIC(19,+$P(Y(1),U,1),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(2)=X
"KRN",.401,10,2,2,"F")
@z^A
"KRN",.401,10,2,2,"GET")
S Y(1)=$S($D(^XUSEC(19,D0,0)):^(0),1:"") S X=$S('$D(^DIC(19,+$P(Y(1),U,1),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(2)=X
"KRN",.401,10,2,2,"IX")
^XUSEC(19,"B",^XUSEC(19,^2
"KRN",.401,10,2,2,"PTRIX")
^DIC(19,"B",
"KRN",.401,10,2,2,"QCON")
I DISX(2)]]"@z"
"KRN",.401,10,2,2,"SER")
0.0000^0.0000
"KRN",.401,10,2,2,"T")
z^z
"KRN",.401,10,2,2,"TXT")
OPTION from A
"KRN",.401,10,2,"B",19.081,1)

"KRN",.401,10,2,"B",19.081,2)

"KRN",.401,11,-1)
0^2
"KRN",.401,11,0)
XU-ZISPL-USER^2961213.1543^^3.51^^^2961213
"KRN",.401,11,2,0)
^.4014^1^1
"KRN",.401,11,2,1,0)
3.51^^USER^+"4^^^^^^4
"KRN",.401,11,2,1,"CM")
S Y(1)=$S($D(^XMB(3.51,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,5),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(1)=X
"KRN",.401,11,2,1,"GET")
S Y(1)=$S($D(^XMB(3.51,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,5),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(1)=X
"KRN",.401,11,2,1,"IX")
^XMB(3.51,"ADUZ",^XMB(3.51,^2
"KRN",.401,11,2,1,"PTRIX")
^VA(200,"B",
"KRN",.401,11,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,11,2,1,"TXT")
USER not null
"KRN",.401,11,2,"B",3.51,1)

"KRN",.401,12,-1)
0^1
"KRN",.401,12,0)
XU-SIGNON-USER^2961213.1536^^3.081^^^2961213
"KRN",.401,12,2,0)
^.4014^3^3
"KRN",.401,12,2,1,0)
3.081^7^TASK?^@^^^^^^3
"KRN",.401,12,2,1,"GET")
S DISX(1)=$P($G(^XUSEC(0,D0,0)),U,6)
"KRN",.401,12,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,12,2,1,"TXT")
TASK? not null
"KRN",.401,12,2,2,0)
3.081^^USER^".01^^^^^^4
"KRN",.401,12,2,2,"CM")
S Y(1)=$S($D(^XUSEC(0,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,1),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(2)=X
"KRN",.401,12,2,2,"GET")
S Y(1)=$S($D(^XUSEC(0,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,1),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(2)=X
"KRN",.401,12,2,2,"IX")
^XUSEC(0,"CUR",^XUSEC(0,^2
"KRN",.401,12,2,2,"PTRIX")
^VA(200,"B",
"KRN",.401,12,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,12,2,2,"TXT")
USER not null
"KRN",.401,12,2,3,0)
3.081^0^DATE/TIME^@^^^D^^^1
"KRN",.401,12,2,3,"QCON")
I D0'=""
"KRN",.401,12,2,3,"TXT")
DATE/TIME not null
"KRN",.401,12,2,"B",3.081,1)

"KRN",.401,12,2,"B",3.081,2)

"KRN",.401,12,2,"B",3.081,3)

"KRN",.403,2,-1)
0^1
"KRN",.403,2,0)
XUEXISTING USER^^^^2920804^^^200^0^0^1
"KRN",.403,2,2)
1;33
"KRN",.403,2,40,0)
^.4031I^7^7
"KRN",.403,2,40,1,0)
1^^1,1^2
"KRN",.403,2,40,1,1)
Page 1 of 3
"KRN",.403,2,40,1,40,0)
^.4032PI^232^2
"KRN",.403,2,40,1,40,4,0)
XUEXISTING USER 1^2^2,1^e
"KRN",.403,2,40,1,40,232,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,2,40,2,0)
2^^1,1^3^1
"KRN",.403,2,40,2,1)
Page 2 of 3
"KRN",.403,2,40,2,15,0)
^^1^1^2941114^
"KRN",.403,2,40,2,15,1,0)
This is Page 2 of the edit existing user.
"KRN",.403,2,40,2,40,0)
^.4032PI^232^2
"KRN",.403,2,40,2,40,5,0)
XUEXISTING USER 2^2^2,1^e
"KRN",.403,2,40,2,40,232,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,2,40,3,0)
1.1^^11,9^^^1^17,66^^
"KRN",.403,2,40,3,1)
SECONDARY MENU OPTIONS Subpage
"KRN",.403,2,40,3,40,0)
^.4032PI^6^1
"KRN",.403,2,40,3,40,6,0)
XUEXISTING USER 3^1^2,3^e
"KRN",.403,2,40,4,0)
1.2^^8,16^^^1^13,59^^
"KRN",.403,2,40,4,1)
DIVISION Subpage
"KRN",.403,2,40,4,40,0)
^.4032PI^7^1
"KRN",.403,2,40,4,40,7,0)
XUEXISTING USER 4^1^2,3^e
"KRN",.403,2,40,5,0)
3^^1,1^1^2
"KRN",.403,2,40,5,1)
Page 3
"KRN",.403,2,40,5,40,0)
^.4032PI^257^3
"KRN",.403,2,40,5,40,232,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,2,40,5,40,235,0)
XUEXISTING USER 5^2^2,1^e
"KRN",.403,2,40,5,40,257,0)
XU-PERSON CLASS 2^3^13,1^e
"KRN",.403,2,40,5,40,257,2)
4^!IEN^n
"KRN",.403,2,40,6,0)
6^^1,1
"KRN",.403,2,40,6,1)
Page 6
"KRN",.403,2,40,7,0)
8^^1,1^^
"KRN",.403,2,40,7,1)
Page 8
"KRN",.403,2,40,7,40,0)
^.4032IP^0^0
"KRN",.403,73,-1)
0^3
"KRN",.403,73,0)
XUREACT USER^^@^^2950327.1641^^^200^0^0^1
"KRN",.403,73,40,0)
^.4031I^5^5
"KRN",.403,73,40,1,0)
1^^1,1^2
"KRN",.403,73,40,1,1)
Page 1
"KRN",.403,73,40,1,11)
N % S %=$$GET^DDSVAL(200,XUN,2) D:$P(%,U,3)="" HLP^DDSUTL("USER has no ACCESS CODE")
"KRN",.403,73,40,1,40,0)
^.4032IP^232^2
"KRN",.403,73,40,1,40,4,0)
XUEXISTING USER 1^2^2,1^e
"KRN",.403,73,40,1,40,4,11)
D PUT^DDSVAL(DIE,.DA,9.2,"@"),PUT^DDSVAL(DIE,.DA,7,"@")
"KRN",.403,73,40,1,40,232,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,73,40,2,0)
2^^1,1^3^1
"KRN",.403,73,40,2,1)
Page 2
"KRN",.403,73,40,2,40,0)
^.4032IP^232^2
"KRN",.403,73,40,2,40,5,0)
XUEXISTING USER 2^2^2,1^e
"KRN",.403,73,40,2,40,232,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,73,40,3,0)
3^^1,1^1^2
"KRN",.403,73,40,3,1)
Page 3
"KRN",.403,73,40,3,40,0)
^.4032IP^257^3
"KRN",.403,73,40,3,40,232,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,73,40,3,40,235,0)
XUEXISTING USER 5^2^2,1^e
"KRN",.403,73,40,3,40,257,0)
XU-PERSON CLASS 2^3^13,1^e
"KRN",.403,73,40,3,40,257,2)
4^!IEN^n
"KRN",.403,73,40,4,0)
1.1^^11,9^^^1^17,66
"KRN",.403,73,40,4,1)
Page 1.1
"KRN",.403,73,40,4,40,0)
^.4032IP^6^1
"KRN",.403,73,40,4,40,6,0)
XUEXISTING USER 3^1^2,3^e
"KRN",.403,73,40,5,0)
1.2^^8,16^^^1^13,59
"KRN",.403,73,40,5,1)
Page 1.2
"KRN",.403,73,40,5,40,0)
^.4032IP^7^1
"KRN",.403,73,40,5,40,7,0)
XUEXISTING USER 4^1^2,2^e
"KRN",.403,76,-1)
0^2
"KRN",.403,76,0)
XUNEW USER^ ^@^^2960729.0925^^^200^0^0^1
"KRN",.403,76,40,0)
^.4031I^5^5
"KRN",.403,76,40,1,0)
1^^1,1^2^
"KRN",.403,76,40,1,1)
Page 1
"KRN",.403,76,40,1,40,0)
^.4032IP^232^2
"KRN",.403,76,40,1,40,4,0)
XUEXISTING USER 1^2^2,1^e
"KRN",.403,76,40,1,40,232,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,76,40,2,0)
2^^1,1^3^1
"KRN",.403,76,40,2,1)
Page 2
"KRN",.403,76,40,2,40,0)
^.4032IP^232^2
"KRN",.403,76,40,2,40,5,0)
XUEXISTING USER 2^2^2,1^e
"KRN",.403,76,40,2,40,232,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,76,40,3,0)
3^^1,1^1^2
"KRN",.403,76,40,3,1)
Page 3
"KRN",.403,76,40,3,40,0)
^.4032IP^258^4
"KRN",.403,76,40,3,40,232,0)
XUEXISTING USER 0^2^1,1^e
"KRN",.403,76,40,3,40,235,0)
XUEXISTING USER 5^3^2,1^e
"KRN",.403,76,40,3,40,257,0)
XU-PERSON CLASS 2^4^13,1^e
"KRN",.403,76,40,3,40,257,2)
4^!IEN^n
"KRN",.403,76,40,3,40,258,0)
XUNEW USER^1^1,1^e
"KRN",.403,76,40,4,0)
1.1^^11,9^^^1^17,66
"KRN",.403,76,40,4,1)
Page 1.1
"KRN",.403,76,40,4,40,0)
^.4032IP^6^1
"KRN",.403,76,40,4,40,6,0)
XUEXISTING USER 3^1^2,3^e
"KRN",.403,76,40,5,0)
1.2^^8,16^^^1^13,59
"KRN",.403,76,40,5,1)
Page 1.2
"KRN",.403,76,40,5,40,0)
^.4032IP^7^1
"KRN",.403,76,40,5,40,7,0)
XUEXISTING USER 4^1^2,3^e
"KRN",.404,4,0)
XUEXISTING USER 1^200^^^
"KRN",.404,4,40,0)
^.4044I^17^16
"KRN",.404,4,40,1,0)
1^NAME^3
"KRN",.404,4,40,1,1)
.01
"KRN",.404,4,40,1,2)
3,12^30^3,6
"KRN",.404,4,40,2,0)
2^TITLE^3
"KRN",.404,4,40,2,1)
8
"KRN",.404,4,40,2,2)
4,12^30^4,5
"KRN",.404,4,40,3,0)
3^INITIAL^3
"KRN",.404,4,40,3,1)
1
"KRN",.404,4,40,3,2)
3,65^5^3,56
"KRN",.404,4,40,4,0)
4^NICK NAME^3
"KRN",.404,4,40,4,1)
13
"KRN",.404,4,40,4,2)
4,65^10^4,54
"KRN",.404,4,40,5,0)
5^PRIMARY MENU OPTION^3^
"KRN",.404,4,40,5,1)
201
"KRN",.404,4,40,5,2)
8,33^30^8,12
"KRN",.404,4,40,6,0)
6^Select SECONDARY MENU OPTIONS^3
"KRN",.404,4,40,6,1)
203
"KRN",.404,4,40,6,2)
9,33^30^9,2
"KRN",.404,4,40,6,7)
^1.1
"KRN",.404,4,40,7,0)
7^Want to edit ACCESS CODE (Y/N)^3
"KRN",.404,4,40,7,1)
2.1
"KRN",.404,4,40,7,2)
11,33^3^11,1
"KRN",.404,4,40,8,0)
8^Want to edit VERIFY CODE (Y/N)^3
"KRN",.404,4,40,8,1)
11.1
"KRN",.404,4,40,8,2)
12,33^3^12,1
"KRN",.404,4,40,9,0)
9^FILE MANAGER ACCESS CODE^3
"KRN",.404,4,40,9,1)
3
"KRN",.404,4,40,9,2)
11,65^15^11,39
"KRN",.404,4,40,11,0)
11^PREFERRED EDITOR^3
"KRN",.404,4,40,11,1)
31.3
"KRN",.404,4,40,11,2)
14,33^30^14,15
"KRN",.404,4,40,12,0)
12^Select DIVISION^3
"KRN",.404,4,40,12,1)
16
"KRN",.404,4,40,12,2)
15,33^30^15,16
"KRN",.404,4,40,12,7)
^1.2
"KRN",.404,4,40,13,0)
13^SERVICE/SECTION^3
"KRN",.404,4,40,13,1)
29
"KRN",.404,4,40,13,2)
16,33^30^16,16
"KRN",.404,4,40,14,0)
4.5^MAIL CODE^3
"KRN",.404,4,40,14,1)
28
"KRN",.404,4,40,14,2)
5,65^10^5,54
"KRN",.404,4,40,15,0)
15^1^1^
"KRN",.404,4,40,15,2)
^^1,74^1
"KRN",.404,4,40,16,0)
2.5^SSN^3
"KRN",.404,4,40,16,1)
9
"KRN",.404,4,40,16,2)
5,12^9^5,7
"KRN",.404,4,40,17,0)
2.6^DEGREE^3
"KRN",.404,4,40,17,1)
10.6
"KRN",.404,4,40,17,2)
6,12^10^6,4
"KRN",.404,5,0)
XUEXISTING USER 2^200^^^
"KRN",.404,5,40,0)
^.4044I^15^14
"KRN",.404,5,40,1,0)
1^TIMED READ (# OF SECONDS)^3
"KRN",.404,5,40,1,1)
200.1
"KRN",.404,5,40,1,2)
4,31^5^4,4
"KRN",.404,5,40,2,0)
2^MULTIPLE SIGN-ON^3
"KRN",.404,5,40,2,1)
200.04
"KRN",.404,5,40,2,2)
6,31^11^6,13
"KRN",.404,5,40,3,0)
3^AUTO MENU^3
"KRN",.404,5,40,3,1)
200.06
"KRN",.404,5,40,3,2)
6,60^20^6,49
"KRN",.404,5,40,4,0)
4^ASK DEVICE TYPE AT SIGN-ON^3
"KRN",.404,5,40,4,1)
200.05
"KRN",.404,5,40,4,2)
7,31^9^7,3
"KRN",.404,5,40,5,0)
5^TYPE-AHEAD^3
"KRN",.404,5,40,5,1)
200.09
"KRN",.404,5,40,5,2)
7,60^11^7,48
"KRN",.404,5,40,6,0)
6^PROHIBITED TIMES FOR SIGN-ON^3
"KRN",.404,5,40,6,1)
15
"KRN",.404,5,40,6,2)
8,31^9^8,1
"KRN",.404,5,40,7,0)
7^ALLOWED TO USE SPOOLER^3
"KRN",.404,5,40,7,1)
41
"KRN",.404,5,40,7,2)
10,31^3^10,7
"KRN",.404,5,40,8,0)
8^CAN MAKE INTO A MAIL MESSAGE^3
"KRN",.404,5,40,8,1)
41.2
"KRN",.404,5,40,8,2)
11,31^3^11,1
"KRN",.404,5,40,10,0)
10^FILE RANGE^3
"KRN",.404,5,40,10,1)
31.1
"KRN",.404,5,40,10,2)
13,31^30^13,19
"KRN",.404,5,40,11,0)
11^TERMINATION DATE^3
"KRN",.404,5,40,11,1)
9.2
"KRN",.404,5,40,11,2)
14,31^11^14,13
"KRN",.404,5,40,12,0)
12^ALWAYS SHOW SECONDARIES^3
"KRN",.404,5,40,12,1)
200.11
"KRN",.404,5,40,12,2)
15,31^3^15,6
"KRN",.404,5,40,13,0)
13^2^1^
"KRN",.404,5,40,13,2)
^^1,74^1
"KRN",.404,5,40,14,0)
14^PAC^3
"KRN",.404,5,40,14,1)
14
"KRN",.404,5,40,14,2)
10,63^8^10,58
"KRN",.404,5,40,15,0)
15^DISUSER^3
"KRN",.404,5,40,15,1)
7
"KRN",.404,5,40,15,2)
11,63^3^11,54
"KRN",.404,6,0)
XUEXISTING USER 3^200.03
"KRN",.404,6,40,0)
^.4044I^3^3
"KRN",.404,6,40,1,0)
1^SECONDARY MENU OPTIONS^1^
"KRN",.404,6,40,1,2)
^^1,33^
"KRN",.404,6,40,2,0)
2^SECONDARY MENU OPTIONS^3
"KRN",.404,6,40,2,1)
.01
"KRN",.404,6,40,2,2)
3,25^30^3,1
"KRN",.404,6,40,3,0)
3^SYNONYM^3
"KRN",.404,6,40,3,1)
2
"KRN",.404,6,40,3,2)
4,25^4^4,16
"KRN",.404,7,0)
XUEXISTING USER 4^200.02
"KRN",.404,7,40,0)
^.4044I^2^2
"KRN",.404,7,40,1,0)
1^DIVISION^1^
"KRN",.404,7,40,1,2)
^^1,33^
"KRN",.404,7,40,2,0)
2^DIVISION^3
"KRN",.404,7,40,2,1)
.01
"KRN",.404,7,40,2,2)
3,11^30^3,1
"KRN",.404,232,0)
XUEXISTING USER 0^200^
"KRN",.404,232,40,0)
^.4044I^5^5
"KRN",.404,232,40,1,0)
1^NAME^3
"KRN",.404,232,40,1,1)
.01
"KRN",.404,232,40,1,2)
2,7^30^2,1
"KRN",.404,232,40,1,4)
^^^1
"KRN",.404,232,40,2,0)
3^Edit an Existing User^1^
"KRN",.404,232,40,2,2)
^^1,30^1
"KRN",.404,232,40,3,0)
2^Page^1^
"KRN",.404,232,40,3,2)
^^2,69^1
"KRN",.404,232,40,4,0)
4^_______________________________________________________________________________^1^
"KRN",.404,232,40,4,2)
^^3,1^1
"KRN",.404,232,40,5,0)
5^of 3^1^
"KRN",.404,232,40,5,2)
^^2,76^1
"KRN",.404,235,0)
XUEXISTING USER 5^200
"KRN",.404,235,40,0)
^.4044I^10^10
"KRN",.404,235,40,1,0)
1^3^1^
"KRN",.404,235,40,1,2)
^^1,74^
"KRN",.404,235,40,2,0)
2^PROHIBITED TIMES FOR SIGN-ON^3
"KRN",.404,235,40,2,1)
15
"KRN",.404,235,40,2,2)
3,31^21^3,1
"KRN",.404,235,40,3,0)
3^PHONE^3
"KRN",.404,235,40,3,1)
.131
"KRN",.404,235,40,3,2)
5,19^20^5,12
"KRN",.404,235,40,4,0)
4^OFFICE PHONE^3
"KRN",.404,235,40,4,1)
.132
"KRN",.404,235,40,4,2)
5,56^20^5,42
"KRN",.404,235,40,5,0)
5^VOICE PAGER^3
"KRN",.404,235,40,5,1)
.137
"KRN",.404,235,40,5,2)
7,19^20^7,6
"KRN",.404,235,40,6,0)
6^FAX NUMBER^3
"KRN",.404,235,40,6,1)
.136
"KRN",.404,235,40,6,2)
6,56^20^6,44
"KRN",.404,235,40,7,0)
7^COMMERCIAL PHONE^3
"KRN",.404,235,40,7,1)
.135
"KRN",.404,235,40,7,2)
6,19^20^6,1
"KRN",.404,235,40,8,0)
8^DIGITAL PAGER^3
"KRN",.404,235,40,8,1)
.138
"KRN",.404,235,40,8,2)
7,56^20^7,41
"KRN",.404,235,40,9,0)
9^LANGUAGE^3
"KRN",.404,235,40,9,1)
200.07
"KRN",.404,235,40,9,2)
9,19^10^9,9
"KRN",.404,235,40,10,0)
10^Person Class                                         Effective     Expired^1
"KRN",.404,235,40,10,2)
^^11,2
"KRN",.404,257,0)
XU-PERSON CLASS 2^200.05
"KRN",.404,257,40,0)
^.4044I^3^3
"KRN",.404,257,40,1,0)
1^^3
"KRN",.404,257,40,1,1)
.01
"KRN",.404,257,40,1,2)
1,2^40
"KRN",.404,257,40,1,11)
N XU,% I X]"" S %=^USC(8932.1,X,0),XU(1)=$P(%,U,1),XU(2)="  "_$P(%,U,2),XU(3)="    "_$P(%,U,3) D HLP^DDSUTL(.XU)
"KRN",.404,257,40,1,14)
S:$L(DDSOLD)&(X'=DDSOLD) DDSERROR=1
"KRN",.404,257,40,2,0)
2^^3
"KRN",.404,257,40,2,1)
2
"KRN",.404,257,40,2,2)
1,52^12
"KRN",.404,257,40,2,4)
^^^0
"KRN",.404,257,40,2,11)
D HLP^DDSUTL("New Effective date must be greater that previous Effective date")
"KRN",.404,257,40,2,12)
D DDS2^XUA4A72
"KRN",.404,257,40,3,0)
3^^3
"KRN",.404,257,40,3,1)
3
"KRN",.404,257,40,3,2)
1,67^12
"KRN",.404,258,0)
XUNEW USER^200
"KRN",19,30,-1)
2^3
"KRN",19,30,0)
XUTIO^Device Management^^M^2^^193^^^n^^^n^^
"KRN",19,30,10,0)
^19.01PI^18^18
"KRN",19,30,10,18,0)
424274
"KRN",19,30,10,18,"^")
XUDEV RES-ONE
"KRN",19,30,"U")
DEVICE MANAGEMENT
"KRN",19,560,-1)
2^4
"KRN",19,560,0)
XUERRS^Error Processing^^M^2^^^^^^^
"KRN",19,560,10,0)
^19.01PI^7^7
"KRN",19,560,10,6,0)
644
"KRN",19,560,10,6,"^")
XUERTRP CLEAN
"KRN",19,560,10,7,0)
424275
"KRN",19,560,10,7,"^")
XUERTRP TYPE
"KRN",19,560,"U")
ERROR PROCESSING
"KRN",19,644,-1)
0^5
"KRN",19,644,0)
XUERTRP CLEAN^Clean Error Trap^^R^^XUPROGMODE^^^^^^^^
"KRN",19,644,1,0)
^^1^1^2900605^
"KRN",19,644,1,0,"LE")
1
"KRN",19,644,1,1,0)
This option is available to delete old errors from the error trap.
"KRN",19,644,25)
XTERPUR
"KRN",19,644,"U")
CLEAN ERROR TRAP
"KRN",19,424273,-1)
0^1
"KRN",19,424273,0)
XUDEV RES-CLEAR^Clear all resources^^R^^^^^^^^KERNEL
"KRN",19,424273,1,0)
^^5^5^2961115^
"KRN",19,424273,1,1,0)
This option should only be used as a TaskMan Startup option or by
"KRN",19,424273,1,2,0)
a knowledgeable site person.
"KRN",19,424273,1,3,0)
 
"KRN",19,424273,1,4,0)
This option will loop through all entries in the Resource file (3.54)
"KRN",19,424273,1,5,0)
and remove any slot in use entries.
"KRN",19,424273,25)
RELALL^XUDHRES
"KRN",19,424273,200.9)
y
"KRN",19,424273,"U")
CLEAR ALL RESOURCES
"KRN",19,424274,-1)
0^2
"KRN",19,424274,0)
XUDEV RES-ONE^Clear one Resource^^R^^^^^^^^KERNEL
"KRN",19,424274,1,0)
^^2^2^2961125^
"KRN",19,424274,1,1,0)
This option will allow the clearing/reseting of one entry of one
"KRN",19,424274,1,2,0)
resource.  This is to be used by IRM personal to clear problems.
"KRN",19,424274,25)
RELONE^XUDHRES
"KRN",19,424274,"U")
CLEAR ONE RESOURCE
"KRN",19,424275,-1)
0^6
"KRN",19,424275,0)
XUERTRP TYPE^Remove a TYPE of error^^R^^^^^^^^KERNEL
"KRN",19,424275,25)
TYPE^XUERPUR
"KRN",19,424275,"U")
REMOVE A TYPE OF ERROR
"KRN",19,424276,-1)
0^7
"KRN",19,424276,0)
XU-PERSON CLASS REMOVE^Remove a person class entry^^R^^^^^^^^KERNEL
"KRN",19,424276,1,0)
^^4^4^2970321^
"KRN",19,424276,1,1,0)
This option should be given only to those persons that the site trusts
"KRN",19,424276,1,2,0)
to remove entries from the Person Class multiple of the New Person file.
"KRN",19,424276,1,3,0)
The Person Class multiple holds a history and under normal use entries
"KRN",19,424276,1,4,0)
should not be removed.  This option is to fix real messes.
"KRN",19,424276,25)
REMOVE^XUA4A72
"KRN",19,424276,200.9)
^y
"KRN",19,424276,"U")
REMOVE A PERSON CLASS ENTRY
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^XUDOCV7 NEW FEATURES
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^2950703^2960524^2
"PKG",3,22,1,"PAH",1,0)
49^2970807^9
"PKG",3,22,1,"PAH",1,1,0)
^^175^175^2970807
"PKG",3,22,1,"PAH",1,1,1,0)
PLEASE NOTE: Sites currently testing Broker version T9 or who have
"PKG",3,22,1,"PAH",1,1,2,0)
installed a test version of XU*8*59 will need to reinstall XU*8*59 after
"PKG",3,22,1,"PAH",1,1,3,0)
installing this patch.
"PKG",3,22,1,"PAH",1,1,4,0)
 
"PKG",3,22,1,"PAH",1,1,5,0)
This patch fixes the following NOISs and REQUESTS:
"PKG",3,22,1,"PAH",1,1,6,0)
 
"PKG",3,22,1,"PAH",1,1,7,0)
    NOIS                       Description of fix: 
"PKG",3,22,1,"PAH",1,1,8,0)
 
"PKG",3,22,1,"PAH",1,1,9,0)
LAS-1196-60534                 When using the option 'Resource Device
"PKG",3,22,1,"PAH",1,1,10,0)
Edit,' the field 'RESOURCE SLOTS' would get reset to 1.  The patch
"PKG",3,22,1,"PAH",1,1,11,0)
resolves this by performing changes to the DD.
"PKG",3,22,1,"PAH",1,1,12,0)
 
"PKG",3,22,1,"PAH",1,1,13,0)
ISL-1196-50019                 When a system crashes, resources are left
"PKG",3,22,1,"PAH",1,1,14,0)
and still allocated, preventing new jobs from starting.  This patch
"PKG",3,22,1,"PAH",1,1,15,0)
provides a new option that can release all resources at startup (Clear all
"PKG",3,22,1,"PAH",1,1,16,0)
Resources) and also an option to release a given slot on a resource (Clear
"PKG",3,22,1,"PAH",1,1,17,0)
one Resource). New routine XUDHRES, change to ZIS6, ZISC.
"PKG",3,22,1,"PAH",1,1,18,0)
 
"PKG",3,22,1,"PAH",1,1,19,0)
MUR-0196-30539-XQ33            The option to delete unreferenced options
"PKG",3,22,1,"PAH",1,1,20,0)
from the option file didn't check for options used in the new TaskMan
"PKG",3,22,1,"PAH",1,1,21,0)
Schedule file. Added field 209.2 (KEEP FROM DELETING) to the option file.
"PKG",3,22,1,"PAH",1,1,22,0)
 
"PKG",3,22,1,"PAH",1,1,23,0)
CTX-0297-70559                 It was possible to get an earlier entry with
"PKG",3,22,1,"PAH",1,1,24,0)
the Effective Date greater than the next entry.  This caused problems when
"PKG",3,22,1,"PAH",1,1,25,0)
programes tried to find the current person class.  Fixed with a change to
"PKG",3,22,1,"PAH",1,1,26,0)
the DD so only greater dates are allowed. 
"PKG",3,22,1,"PAH",1,1,27,0)
 
"PKG",3,22,1,"PAH",1,1,28,0)
 
"PKG",3,22,1,"PAH",1,1,29,0)
CHANGES MADE IN RESPONSE TO REQUESTS:
"PKG",3,22,1,"PAH",1,1,30,0)
 
"PKG",3,22,1,"PAH",1,1,31,0)
When using the RJD option to stop a TaskMan job, you used to have to
"PKG",3,22,1,"PAH",1,1,32,0)
DISPLAY the task before you could delete it.  Modification to routine
"PKG",3,22,1,"PAH",1,1,33,0)
XUTMRJD was made to allow site to say NO to the display and still delete
"PKG",3,22,1,"PAH",1,1,34,0)
the task from the running task list.  MSG 1060759 (Pete Tichenor)
"PKG",3,22,1,"PAH",1,1,35,0)
 
"PKG",3,22,1,"PAH",1,1,36,0)
Removes the testing for MWAPI from ZUMSM.  (Trouble calls)
"PKG",3,22,1,"PAH",1,1,37,0)
 
"PKG",3,22,1,"PAH",1,1,38,0)
Have XUS display the Node the user is on.  Changed the XUS routine to
"PKG",3,22,1,"PAH",1,1,39,0)
display the Volume-set:Node rather than just the Volume-set alone.
"PKG",3,22,1,"PAH",1,1,40,0)
Changed the first read to include output text as before in order to flush
"PKG",3,22,1,"PAH",1,1,41,0)
the input buffer on certain systems, such as MSM.  (E3R 8568)
"PKG",3,22,1,"PAH",1,1,42,0)
 
"PKG",3,22,1,"PAH",1,1,43,0)
Cleans-up pointers to files 3,6,16,20 in sort and print templates.  It
"PKG",3,22,1,"PAH",1,1,44,0)
adds checks to code of XUSERNEW, XUA4A7 so they are ready for file
"PKG",3,22,1,"PAH",1,1,45,0)
3,6,16,20 cleanup.
"PKG",3,22,1,"PAH",1,1,46,0)
 
"PKG",3,22,1,"PAH",1,1,47,0)
Cleans up cross-references in files DEVICE, OPTION, and KERMIT HOLDING.
"PKG",3,22,1,"PAH",1,1,48,0)
   
"PKG",3,22,1,"PAH",1,1,49,0)
INVALID LOCK - This patch adds a timeout to the one lock without one.
"PKG",3,22,1,"PAH",1,1,50,0)
Routine XUTMK was modified to resolve this problem.  (E3R #9278)
"PKG",3,22,1,"PAH",1,1,51,0)
   
"PKG",3,22,1,"PAH",1,1,52,0)
Updates the ID nodes of files 3.2 and 3.5 to use DDIOL.  Routine XUINPCH
"PKG",3,22,1,"PAH",1,1,53,0)
   
"PKG",3,22,1,"PAH",1,1,54,0)
Corrects a problem with the status code returned by STAT^%ZTLOAD.  It
"PKG",3,22,1,"PAH",1,1,55,0)
formerly returned "Inactive: Interrupted" when it should have returned
"PKG",3,22,1,"PAH",1,1,56,0)
"Active: Running". Fixed with changes to %ZTLOAD5.
"PKG",3,22,1,"PAH",1,1,57,0)
 
"PKG",3,22,1,"PAH",1,1,58,0)
Changes a call in %ZTMS3 from ZSYNC to PURGELST^%MSMOPS on MSM 4.3
"PKG",3,22,1,"PAH",1,1,59,0)
systems.  In response to a request from MSM.
"PKG",3,22,1,"PAH",1,1,60,0)
 
"PKG",3,22,1,"PAH",1,1,61,0)
Changes the way ZTMS1 waits under load.
"PKG",3,22,1,"PAH",1,1,62,0)
 
"PKG",3,22,1,"PAH",1,1,63,0)
Changes %ZIS4 to clean up the IO("ERROR") and IO("LASTERR") variable.
"PKG",3,22,1,"PAH",1,1,64,0)
 
"PKG",3,22,1,"PAH",1,1,65,0)
This patch made a change to the setting of IO("ZIO"). ZIS4VXD, ZIS4MSM.
"PKG",3,22,1,"PAH",1,1,66,0)
 
"PKG",3,22,1,"PAH",1,1,67,0)
Changes PRIORITY code to keep jobs from assuming system priority.
"PKG",3,22,1,"PAH",1,1,68,0)
(Capacity Management ZOSVMSM) 
"PKG",3,22,1,"PAH",1,1,69,0)
 
"PKG",3,22,1,"PAH",1,1,70,0)
Fix $$STATUS^%ZISH  not looking at the correct variable.
"PKG",3,22,1,"PAH",1,1,71,0)
 
"PKG",3,22,1,"PAH",1,1,72,0)
Improves the $STACK reporting on DSM systems.
"PKG",3,22,1,"PAH",1,1,73,0)
 
"PKG",3,22,1,"PAH",1,1,74,0)
Adds the following new entry point for modifying resource devices (please
"PKG",3,22,1,"PAH",1,1,75,0)
see the Supported References file for full details):
"PKG",3,22,1,"PAH",1,1,76,0)
$$RES^XUDHSET(device_name,resource_name,slot_count,description,subtype)
"PKG",3,22,1,"PAH",1,1,77,0)
       device_name   For the resource device.
"PKG",3,22,1,"PAH",1,1,78,0)
       resource_name (optional) The resource name if not the same as the device
"PKG",3,22,1,"PAH",1,1,79,0)
                     name.
"PKG",3,22,1,"PAH",1,1,80,0)
       slot_count    The number of concurrent jobs that can use this device.
"PKG",3,22,1,"PAH",1,1,81,0)
                     defaults to 1.
"PKG",3,22,1,"PAH",1,1,82,0)
       description   The device description, defaults to 'Resource Device'.
"PKG",3,22,1,"PAH",1,1,83,0)
       subtype       The subtype to use, defaults to P-OTHER.
"PKG",3,22,1,"PAH",1,1,84,0)
       returns       If an error '-1^text'
"PKG",3,22,1,"PAH",1,1,85,0)
                     The 'IEN^device name' like a DIC call.
"PKG",3,22,1,"PAH",1,1,86,0)
 
"PKG",3,22,1,"PAH",1,1,87,0)
 
"PKG",3,22,1,"PAH",1,1,88,0)
  
"PKG",3,22,1,"PAH",1,1,89,0)
Routine Summary:
"PKG",3,22,1,"PAH",1,1,90,0)
================
"PKG",3,22,1,"PAH",1,1,91,0)
 
"PKG",3,22,1,"PAH",1,1,92,0)
                 Checksum
"PKG",3,22,1,"PAH",1,1,93,0)
Routine         Old       New      2nd Line
"PKG",3,22,1,"PAH",1,1,94,0)
XQ33          8337880   8946889    **49**
"PKG",3,22,1,"PAH",1,1,95,0)
XUA4A7        5092665   5114645    **49**
"PKG",3,22,1,"PAH",1,1,96,0)
XUA4A72       2742817   3400179    **27,49**
"PKG",3,22,1,"PAH",1,1,97,0)
XUDHRES                  917964    **49**
"PKG",3,22,1,"PAH",1,1,98,0)
XUDHSET                 1534104    **49**
"PKG",3,22,1,"PAH",1,1,99,0)
XUINPCH       1467475   2465171    **20,36,49**
"PKG",3,22,1,"PAH",1,1,100,0)
XUS           7592994   7619050    **16,26,49**
"PKG",3,22,1,"PAH",1,1,101,0)
XUSERNEW      6789632   6995154    **16,49**
"PKG",3,22,1,"PAH",1,1,102,0)
XUTMK         6472549   6514964    **49**
"PKG",3,22,1,"PAH",1,1,103,0)
XUTMRJD       6336192   6554859    **49**
"PKG",3,22,1,"PAH",1,1,104,0)
ZIS1          9986473  10316454    **18,49**
"PKG",3,22,1,"PAH",1,1,105,0)
ZIS4MSM       6649854   7202298    **23,36,49**
"PKG",3,22,1,"PAH",1,1,106,0)
ZIS4VXD       8342152   8150990    **23,36,49**
"PKG",3,22,1,"PAH",1,1,107,0)
ZIS6          9961139   9917028    **24,49**
"PKG",3,22,1,"PAH",1,1,108,0)
ZISC          8463272   7980129    **24,36,49**
"PKG",3,22,1,"PAH",1,1,109,0)
ZISHMSM       5354551   5354575    **24,36,49**
"PKG",3,22,1,"PAH",1,1,110,0)
ZOSVMSM      11524674  11538678    **13,25,49**
"PKG",3,22,1,"PAH",1,1,111,0)
ZTER1         5603505   5664740    **18,24,36,49**
"PKG",3,22,1,"PAH",1,1,112,0)
ZTLOAD5                 4735916    **49**
"PKG",3,22,1,"PAH",1,1,113,0)
ZTMS1         6234917   6234917    **36,49**
"PKG",3,22,1,"PAH",1,1,114,0)
ZTMS3         9454395   9603212    **1,18,36,49**
"PKG",3,22,1,"PAH",1,1,115,0)
ZUMSM         2237614   2252648    **13,42,49**
"PKG",3,22,1,"PAH",1,1,116,0)
 
"PKG",3,22,1,"PAH",1,1,117,0)
========================================================================= 
"PKG",3,22,1,"PAH",1,1,118,0)
Installation:
"PKG",3,22,1,"PAH",1,1,119,0)
 
"PKG",3,22,1,"PAH",1,1,120,0)
  1.  Some of these routines are usually mapped on systems that allow 
"PKG",3,22,1,"PAH",1,1,121,0)
      mapping, so you will need to disable mapping for the effected routines.
"PKG",3,22,1,"PAH",1,1,122,0)
      
"PKG",3,22,1,"PAH",1,1,123,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",3,22,1,"PAH",1,1,124,0)
      option will load the KIDS package onto your system.
"PKG",3,22,1,"PAH",1,1,125,0)
      
"PKG",3,22,1,"PAH",1,1,126,0)
  3.  The patch has now been loaded into a Transport global on your
"PKG",3,22,1,"PAH",1,1,127,0)
      system. You now need to use KIDS to install the Transport global.
"PKG",3,22,1,"PAH",1,1,128,0)
      On the KIDS menu, under the 'Installation' menu, use the following
"PKG",3,22,1,"PAH",1,1,129,0)
      options:
"PKG",3,22,1,"PAH",1,1,130,0)
      
"PKG",3,22,1,"PAH",1,1,131,0)
         Verify Checksum's in Transport Global
"PKG",3,22,1,"PAH",1,1,132,0)
         Print Transport Global
"PKG",3,22,1,"PAH",1,1,133,0)
         Compare Transport Global to Current System
"PKG",3,22,1,"PAH",1,1,134,0)
         Backup a Transport Global
"PKG",3,22,1,"PAH",1,1,135,0)
               
"PKG",3,22,1,"PAH",1,1,136,0)
  4.  Inhibit users from logging into the system.
"PKG",3,22,1,"PAH",1,1,137,0)
      Also place TASKMAN in a wait state.
"PKG",3,22,1,"PAH",1,1,138,0)
      
"PKG",3,22,1,"PAH",1,1,139,0)
  5.  On the KIDS menu, under the 'Installation' menu, use the following
"PKG",3,22,1,"PAH",1,1,140,0)
      options:
"PKG",3,22,1,"PAH",1,1,141,0)
         Install Package(s)  'XU*8.0*49'
"PKG",3,22,1,"PAH",1,1,142,0)
                              =========
"PKG",3,22,1,"PAH",1,1,143,0)
         
"PKG",3,22,1,"PAH",1,1,144,0)
  6.  MSM Sites - With Taskman not working you need to move the routine to
"PKG",3,22,1,"PAH",1,1,145,0)
      other CPU's with the D ^XPDCPU
"PKG",3,22,1,"PAH",1,1,146,0)
      MSM Sites - On each cpu rename ZUMSM to ZU with: ZL ZUMSM ZS ZU
"PKG",3,22,1,"PAH",1,1,147,0)
      
"PKG",3,22,1,"PAH",1,1,148,0)
  7.  After installing this patch, you need to move several routines from 
"PKG",3,22,1,"PAH",1,1,149,0)
      your production account to each manager account:
"PKG",3,22,1,"PAH",1,1,150,0)
      ZIS1
"PKG",3,22,1,"PAH",1,1,151,0)
      ZIS4MSM
"PKG",3,22,1,"PAH",1,1,152,0)
      ZIS4VXD
"PKG",3,22,1,"PAH",1,1,153,0)
      ZIS6
"PKG",3,22,1,"PAH",1,1,154,0)
      ZISC
"PKG",3,22,1,"PAH",1,1,155,0)
      ZISHMSM
"PKG",3,22,1,"PAH",1,1,156,0)
      ZOSVMSM
"PKG",3,22,1,"PAH",1,1,157,0)
      ZTER1
"PKG",3,22,1,"PAH",1,1,158,0)
      ZTLOAD5
"PKG",3,22,1,"PAH",1,1,159,0)
      ZTMS1
"PKG",3,22,1,"PAH",1,1,160,0)
      ZTMS3
"PKG",3,22,1,"PAH",1,1,161,0)
    
"PKG",3,22,1,"PAH",1,1,162,0)
      And in the manager account,
"PKG",3,22,1,"PAH",1,1,163,0)
       
"PKG",3,22,1,"PAH",1,1,164,0)
      DO RELOAD^ZTMGRSET
"PKG",3,22,1,"PAH",1,1,165,0)
      Select the System
"PKG",3,22,1,"PAH",1,1,166,0)
      Patch number to load: 49
"PKG",3,22,1,"PAH",1,1,167,0)
                            ==
"PKG",3,22,1,"PAH",1,1,168,0)
      Move these MGR routines to your other CPU's.
"PKG",3,22,1,"PAH",1,1,169,0)
       
"PKG",3,22,1,"PAH",1,1,170,0)
  8.  AXP Sites, after patch has installed, rebuild your map set.
"PKG",3,22,1,"PAH",1,1,171,0)
 
"PKG",3,22,1,"PAH",1,1,172,0)
  9.  Enable user's login.
"PKG",3,22,1,"PAH",1,1,173,0)
      Remove TASKMAN from the wait state.
"PKG",3,22,1,"PAH",1,1,174,0)
 
"PKG",3,22,1,"PAH",1,1,175,0)
 =========================================================================
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
22
"RTN","XQ33")
0^19^B11354998
"RTN","XQ33",1,0)
XQ33 ;SEA/AMF/JLI/MJM - REMOVE UNREFERENCED OPTIONS ;01/17/97  12:00
"RTN","XQ33",2,0)
 ;;8.0;KERNEL;**49**;Jul 10, 1995
"RTN","XQ33",3,0)
DUO ; Entry point to delete unreferenced options from the option file.
"RTN","XQ33",4,0)
 W !!,*7,"Do you want to delete unreferenced options" S %=2 D YN^DICN Q:%<0!(%=2)  I '% W !,"Enter a 'Y' if you want an opportunity to delete orphan options which are not",!,"primary menus, secondary menus, or tasked." G DUO
"RTN","XQ33",5,0)
 K ^TMP($J) S IOP="HOME" D ^%ZIS K IOP S XQENT=0
"RTN","XQ33",6,0)
 R !!,"Select PACKAGE/OPTION name: ALL// ",X:DTIME S:'$T X=U S DIC=9.4,DIC(0)="EMZ" Q:X[U  S:'$L(X) X="ALL"
"RTN","XQ33",7,0)
 I X="ALL" S XQS="@z",XQE="zzz" G GET
"RTN","XQ33",8,0)
 D ^DIC I Y>0 S XQS=$P(Y(0),U,2),XQE=XQS_"zzz" G GET
"RTN","XQ33",9,0)
 S DIC=19,DIC(0)="QEMZ" D ^DIC G:Y<0 DUO S XQE=$P(Y(0),U,1),XQS=$E(XQE,1,$L(XQE)-1)_$C($A($E(XQE,$L(XQE))-1))_"zzz"
"RTN","XQ33",10,0)
GET W !,"Getting the list of unreferenced options..." D LP W ! I '$D(^TMP($J)) W "...NONE FOUND",! G OUT
"RTN","XQ33",11,0)
 S XQI=0 F XQII=0:1 S DIC="^DIC(19,",DR="",XQI=$O(^TMP($J,XQI)) Q:XQI'>0  S DA=XQI W @IOF K S D EN^DIQ D DUO1 Q:XQUIT
"RTN","XQ33",12,0)
 G OUT
"RTN","XQ33",13,0)
DUO1 ;
"RTN","XQ33",14,0)
 W !!,"Want to delete this option" S %=2,XQUIT=0 D YN^DICN S:%<0 XQUIT=1 Q:%<0!(%=2)  I '% W !,"Enter a 'Y' if you want to remove this option from the option file" G DUO1
"RTN","XQ33",15,0)
 S DIE=19,DR=".01///@" D ^DIE
"RTN","XQ33",16,0)
 Q
"RTN","XQ33",17,0)
LP S XQUI=0,XQJ=XQS F  S XQJ=$O(^DIC(19,"B",XQJ)) Q:XQJ=""!XQUI!(XQJ]XQE)  D LP1
"RTN","XQ33",18,0)
 Q
"RTN","XQ33",19,0)
LP1 S XQI=0 F  S XQI=$O(^DIC(19,"B",XQJ,XQI)) Q:XQI'>0!XQUI  D LP2
"RTN","XQ33",20,0)
 Q
"RTN","XQ33",21,0)
LP2 I "BOQSX"[$P(^DIC(19,XQI,0),U,4) K XQFL Q  ;Special options
"RTN","XQ33",22,0)
 S XQFL="" W:XQENT !,XQJ,?31 I '$D(^DIC(19,"AD",XQI)) W:XQENT "** no parents **" G PRI
"RTN","XQ33",23,0)
 K XQFL S (XQK,XQLEN,XQNM)=0
"RTN","XQ33",24,0)
 I XQENT F  S XQK=$O(^DIC(19,"AD",XQI,XQK)) Q:XQK'>0  I $D(^DIC(19,XQK,0)) S L=$P(^DIC(19,XQK,0),U,1) S:XQLEN+$L(L)+2>34 XQLEN=0 W:'XQLEN&XQNM !?31 W:XQNM&XQLEN ", " W $P(^DIC(19,XQK,0),U,1) S XQLEN=XQLEN+$L(L)+2,XQNM=XQNM+1
"RTN","XQ33",25,0)
PRI ;
"RTN","XQ33",26,0)
 I $D(^VA(200,"AP",XQI)) W:XQENT ?65,"-P-" K XQFL ;Primary Menu
"RTN","XQ33",27,0)
 I $D(^VA(200,"AD",XQI)) W:XQENT ?70,"-S-" K XQFL ;Secondary Menu
"RTN","XQ33",28,0)
 I $D(^DIC(19,XQI,200.9)),^(200.9)["y" W:XQENT&($P(^(200.9),U)["y") ?75,"-T-" K XQFL ;Taskman or don't delete
"RTN","XQ33",29,0)
 E  I $D(^DIC(19.2,"B",XQI)) W:XQENT ?75,"-T-" K XQFL ;Taskman
"RTN","XQ33",30,0)
 I $D(XQFL) S ^TMP($J,XQI)=""
"RTN","XQ33",31,0)
 Q
"RTN","XQ33",32,0)
 ;
"RTN","XQ33",33,0)
OUT D ^%ZISC
"RTN","XQ33",34,0)
 K XQUI,XQJ,XQS,XQE,XQK,XQLEN,XQNM,XQI,I,J,K,C,L,DIC,POP,X,XQDSH,XQENT,XQHDR,XQP,Y,ZISI,ZTDTH,ZTSAVE,ZTRTN,ZTDESC,%A1,S,XQFL
"RTN","XQ33",35,0)
 K %Y,A,D0,D1,DA,DIW,DIWF,DIWL,DIWR,DIWT,DK,DL,DN,DR,DX,XQUIT
"RTN","XQ33",36,0)
 Q
"RTN","XUA4A7")
0^20^B9706649
"RTN","XUA4A7",1,0)
XUA4A7 ;ISCSF/RWF - K7, Give entrys into F6 a Provider key ;1/15/97  09:42
"RTN","XUA4A7",2,0)
 ;;8.0;KERNEL;**49**;Jul 10, 1995
"RTN","XUA4A7",3,0)
 Q  ;don't enter from top.
"RTN","XUA4A7",4,0)
F6S ;Give provider the key.
"RTN","XUA4A7",5,0)
 N %,X1,X2 S %=$G(^DIC(6,DA,"I")) I %,%<DT Q  ;see if inactive
"RTN","XUA4A7",6,0)
 S X1=+$G(^DIC(16,X,"A3")) I 'X1 Q  ;get pointer
"RTN","XUA4A7",7,0)
 S %=$O(^DIC(19.1,"B","PROVIDER",0)) I '% Q  ;get index
"RTN","XUA4A7",8,0)
F6S7 ;Kernel 7
"RTN","XUA4A7",9,0)
 I $D(^VA(200,X1,51,%,0)) Q  ;allready have it.
"RTN","XUA4A7",10,0)
 N DD,DO,DIC,DS,DA
"RTN","XUA4A7",11,0)
 S DIC="^VA(200,DA(1),51,",DIC(0)="NML",(X,DINUM)=%,DA(1)=X1,DIC("P")=$P(^DD(200,51,0),"^",2) D FILE^DICN ;give it.
"RTN","XUA4A7",12,0)
 Q
"RTN","XUA4A7",13,0)
F6K Q  ;can't delete
"RTN","XUA4A7",14,0)
 ;
"RTN","XUA4A7",15,0)
F200S ;name change V6.5 only
"RTN","XUA4A7",16,0)
 N X1,X2 F X1=0:0 S X1=$O(^DIC(19.1,"D",DA,X1)) Q:X1'>0  S X2=$G(^DIC(19.1,X1,0)) I $P(X2,U,3)="l" S ^VA(200,"AK."_$P(X2,U),X,DA)=""
"RTN","XUA4A7",17,0)
 Q
"RTN","XUA4A7",18,0)
F200K ;name change V6.5 only
"RTN","XUA4A7",19,0)
 N X1,X2 S X1="AK." F X2=0:0 S X1=$O(^VA(200,X1)) Q:$E(X1,1,3)'="AK."  K ^VA(200,X1,X,DA)
"RTN","XUA4A7",20,0)
 Q
"RTN","XUA4A7",21,0)
 ;
"RTN","XUA4A7",22,0)
FE51S ;Key assignment from new person key subfile
"RTN","XUA4A7",23,0)
 N %,X1,X2 S %=$G(^DIC(19.1,X,0)) Q:$P(%,U,3)'="l"  ;see if lookup
"RTN","XUA4A7",24,0)
 S X1=$P($G(^VA(200,DA(1),0)),U) Q:X1=""  ;get name
"RTN","XUA4A7",25,0)
 S ^VA(200,"AK."_$P(%,U),X1,DA(1))="" ;set X-ref
"RTN","XUA4A7",26,0)
 Q:%'["PROVIDER"  Q:'$D(^DD(3,0))
"RTN","XUA4A7",27,0)
 S X2=+$P($G(^DIC(3,DA(1),0)),U,16) Q:$D(^DIC(6,X2,0))  ;see if in provider file
"RTN","XUA4A7",28,0)
 N DIC,DD,DO,DA,DS,X,Y S DIC="^DIC(6,",DIC(0)="L",DLAYGO=6,(X,DINUM)=X2 D FILE^DICN ;add
"RTN","XUA4A7",29,0)
 Q
"RTN","XUA4A7",30,0)
FE51K ;Key removal from new person key subfile
"RTN","XUA4A7",31,0)
 N %,X1 S %=$G(^DIC(19.1,X,0)) ;remove incase lookup flag has been removed.
"RTN","XUA4A7",32,0)
 S X1=$P($G(^VA(200,DA(1),0)),U)
"RTN","XUA4A7",33,0)
 K ^VA(200,"AK."_$P(%,U),X1,DA(1))
"RTN","XUA4A7",34,0)
 Q
"RTN","XUA4A7",35,0)
F19S ;holder subfile assignment V6.5 only
"RTN","XUA4A7",36,0)
 N %,X1,X2 S %=$G(^DIC(19.1,DA(1),0)) Q:$P(%,U,3)'="l"  ;see if lookup
"RTN","XUA4A7",37,0)
 S X1=$P($G(^VA(200,X,0)),U) Q:X1=""  ;get name
"RTN","XUA4A7",38,0)
 S ^VA(200,"AK."_$P(%,U),X1,X)="" ;set X-ref
"RTN","XUA4A7",39,0)
 Q:%'["PROVIDER"
"RTN","XUA4A7",40,0)
 S X2=+$P($G(^DIC(3,X,0)),U,16) Q:$D(^DIC(6,X2,0))  ;see if in provider file
"RTN","XUA4A7",41,0)
 N DIC,DD,DO,DA,DS,X,Y S X=X2,DIC="^DIC(6,",DIC(0)="L",DLAYGO=6,DINUM=X2 D FILE^DICN ;add
"RTN","XUA4A7",42,0)
 Q
"RTN","XUA4A7",43,0)
F19K ;holder subfile V6.5 only
"RTN","XUA4A7",44,0)
 S %=$G(^DIC(19.1,DA(1),0)) Q:$P(%,U,3)'="l"
"RTN","XUA4A7",45,0)
 S X1=$P($G(^DIC(3,X,0)),U)
"RTN","XUA4A7",46,0)
 K ^VA(200,"AK."_$P(%,U),X1,X)
"RTN","XUA4A7",47,0)
 Q
"RTN","XUA4A7",48,0)
LAYGO ;Called from ^DD(200,.01,"LAYGO",1,0)
"RTN","XUA4A7",49,0)
 Q:DIC(0)'["E"
"RTN","XUA4A7",50,0)
 W !,"Checking SOUNDEX for matches."
"RTN","XUA4A7",51,0)
 N %,XU1,XU2,XU3 S XU3=X
"RTN","XUA4A7",52,0)
 S X=$$EN^XUA4A71(XU3),XU2=0
"RTN","XUA4A7",53,0)
 F XU1=0:0 S XU1=$O(^VA(200,"ASX",X,XU1)) Q:XU1'>0  D
"RTN","XUA4A7",54,0)
 . W !?5,$P($G(^VA(200,XU1,0)),"^") S XU2=XU2+1
"RTN","XUA4A7",55,0)
 . I '(XU2#16) R !,"Press Return to Continue. ",%:DTIME
"RTN","XUA4A7",56,0)
 . Q
"RTN","XUA4A7",57,0)
 I 'XU2 W !,"No matches found." S XU2=1 G L3
"RTN","XUA4A7",58,0)
L2 R !,"Do you still want to add this entry: NO//",XU2:300 S XU2=$TR($E(XU2_"N"),"NnYy^?","00110?")
"RTN","XUA4A7",59,0)
 I "01"'[XU2 W !?4,"Answer NO to stop the addition of ",XU3," as a new person.",!?4,"Answer YES to add, a '^' will be taken as a NO." G L2
"RTN","XUA4A7",60,0)
L3 I XU2
"RTN","XUA4A7",61,0)
 S X=XU3
"RTN","XUA4A7",62,0)
 Q
"RTN","XUA4A72")
0^25^B7383051
"RTN","XUA4A72",1,0)
XUA4A72 ;SFISC/RWF - Person class API's ;03/21/97  15:02
"RTN","XUA4A72",2,0)
 ;;8.0;KERNEL;**27,49**;Jul 10, 1995
"RTN","XUA4A72",3,0)
 Q  ;No access from top.
"RTN","XUA4A72",4,0)
GET(IEN,DATE) ;sr. Get the active class on a date
"RTN","XUA4A72",5,0)
 N X,Y,D
"RTN","XUA4A72",6,0)
 S:$G(DATE)="" DATE=DT S D=DATE
"RTN","XUA4A72",7,0)
 Q:'$D(^VA(200,+$G(IEN),0)) -1
"RTN","XUA4A72",8,0)
 Q:$O(^VA(200,IEN,"USC1",0))="" -1
"RTN","XUA4A72",9,0)
 S:'$D(^VA(200,IEN,"USC1","AD",D)) D=$O(^VA(200,IEN,"USC1","AD",D),-1)
"RTN","XUA4A72",10,0)
 S Y=$O(^VA(200,IEN,"USC1","AD",+D,""),-1) Q:Y'>0 -2
"RTN","XUA4A72",11,0)
 ;Check that class was active on this date
"RTN","XUA4A72",12,0)
 S X=$G(^VA(200,IEN,"USC1",+Y,0))_"^^" I $P(X,U,3),$P(X,U,3)<DATE Q -2
"RTN","XUA4A72",13,0)
 S Y=$G(^USC(8932.1,+X,0))
"RTN","XUA4A72",14,0)
 ;IEN^Occupation^specialty^sub-specialty^Effective date^expiration date
"RTN","XUA4A72",15,0)
 Q +X_U_$P(Y,U,1,3)_U_$P(X,U,2,3)_U_$P(Y,U,6)
"RTN","XUA4A72",16,0)
 ;
"RTN","XUA4A72",17,0)
IEN2CODE(IEN) ;sr. Get the code for an IEN
"RTN","XUA4A72",18,0)
 Q $P($G(^USC(8932.1,+$G(IEN),0)),U,6)
"RTN","XUA4A72",19,0)
 ;
"RTN","XUA4A72",20,0)
CODE2TXT(CODE) ;sr. Convert IEN or V-code to text
"RTN","XUA4A72",21,0)
 I CODE?1"V"1.N S CODE=$$VCLK(CODE)
"RTN","XUA4A72",22,0)
 Q $P($G(^USC(8932.1,+CODE,0)),U,1,3)
"RTN","XUA4A72",23,0)
 ;
"RTN","XUA4A72",24,0)
VCLK(X) ;Lookup a V-code, Return IEN
"RTN","XUA4A72",25,0)
 Q $O(^USC(8932.1,"F",X,0))
"RTN","XUA4A72",26,0)
 ;
"RTN","XUA4A72",27,0)
REMOVE ;Allow privlaged user to remove a wrong entry in the users file.
"RTN","XUA4A72",28,0)
 N XUDA,XUDA1,XUWT,%
"RTN","XUA4A72",29,0)
 S XUDA1=+$$LOOKUP^XUSER Q:XUDA1'>0
"RTN","XUA4A72",30,0)
 W !,"This user has the following Person Class enties:"
"RTN","XUA4A72",31,0)
 S XUWT=^DD(8932.1,0,"ID","WRITE")
"RTN","XUA4A72",32,0)
 F XUDA=0:0 S XUDA=$O(^VA(200,XUDA1,"USC1",XUDA)) Q:XUDA'>0  S %=+$G(^(XUDA,0)) I %>0 W !,$P(^USC(8932.1,%,0),U) X XUWT
"RTN","XUA4A72",33,0)
 S DIR(0)="Y",DIR("A")="Are you sure you want to remove ALL these entries" D ^DIR Q:$D(DIRUT)!(Y'=1)
"RTN","XUA4A72",34,0)
 F XUDA=0:0 S XUDA=$O(^VA(200,XUDA1,"USC1",XUDA)) Q:XUDA'>0  S DIK="^VA(200,DA(1),""USC1"",",DA=XUDA,DA(1)=XUDA1 D ^DIK
"RTN","XUA4A72",35,0)
 Q
"RTN","XUA4A72",36,0)
SET01 ;Called from the X-ref on the .01 field
"RTN","XUA4A72",37,0)
 Q:$P(^VA(200,DA(1),"USC1",DA,0),U,2)>0
"RTN","XUA4A72",38,0)
 S $P(^VA(200,DA(1),"USC1",DA,0),U,2)=DT ;Trigger date
"RTN","XUA4A72",39,0)
 D UPDATE(200.05,2,DT)
"RTN","XUA4A72",40,0)
 ;
"RTN","XUA4A72",41,0)
SET2 ;Call from the X-ref on the Effective Date field
"RTN","XUA4A72",42,0)
 N L
"RTN","XUA4A72",43,0)
 S L=$O(^VA(200,DA(1),"USC1",DA),-1) Q:L'>0
"RTN","XUA4A72",44,0)
 I $P(^VA(200,DA(1),"USC1",L,0),U,3)="" D OLD(DA(1),L,X) ;Inactivate the old one
"RTN","XUA4A72",45,0)
 Q
"RTN","XUA4A72",46,0)
KILL2 ;Call from the X-ref on the Effective Date field
"RTN","XUA4A72",47,0)
 N L
"RTN","XUA4A72",48,0)
 S L=$O(^VA(200,DA(1),"USC1",DA),-1) Q:L'>0
"RTN","XUA4A72",49,0)
 I $P(^VA(200,DA(1),"USC1",L,0),U,3)=X D OLD(DA(1),L,"")
"RTN","XUA4A72",50,0)
 Q
"RTN","XUA4A72",51,0)
 ;
"RTN","XUA4A72",52,0)
OLD(D0,D1,DATE) ;Inactivate the old one (Expiration Date)
"RTN","XUA4A72",53,0)
 N DA,X
"RTN","XUA4A72",54,0)
 S $P(^VA(200,D0,"USC1",D1,0),U,3)=DATE ;Inactivate the old one
"RTN","XUA4A72",55,0)
 S DA(1)=D0,DA=D1 D UPDATE(200.05,3,DATE)
"RTN","XUA4A72",56,0)
 Q
"RTN","XUA4A72",57,0)
UPDATE(DIH,DIG,DIV,DIU) ;file,field,new value,old value
"RTN","XUA4A72",58,0)
 S DIV=$G(DIV),DIU=$G(DIU),DIV(0)=DA(1),DIV(1)=DA
"RTN","XUA4A72",59,0)
 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"RTN","XUA4A72",60,0)
 Q
"RTN","XUA4A72",61,0)
DDS2 ;Called from effective date on form
"RTN","XUA4A72",62,0)
 N %,XUDA M XUDA=DA N DA ;Hide DA
"RTN","XUA4A72",63,0)
 S XUDA=$O(^VA(200,XUDA(1),"USC1",XUDA),-1) Q:XUDA'>0
"RTN","XUA4A72",64,0)
 S %=$$GET^DDSVAL(DIE,.XUDA,3,"","I") Q:%&(%<X)  ;All ready has value
"RTN","XUA4A72",65,0)
 D PUT^DDSVAL(DIE,.XUDA,3,X,"","I")
"RTN","XUA4A72",66,0)
 Q
"RTN","XUDHRES")
0^10^B1291589
"RTN","XUDHRES",1,0)
XUDHRES ;ISCSF/RWF - Resource device utility. ;12/30/96  09:36
"RTN","XUDHRES",2,0)
 ;;8.0;KERNEL;**49**;Dec 30, 1996
"RTN","XUDHRES",3,0)
 W !,"No entry from the top.",! Q
"RTN","XUDHRES",4,0)
 ;
"RTN","XUDHRES",5,0)
RELALL ;Release all resource devices.  Used at startup.
"RTN","XUDHRES",6,0)
 N ZISJ,ZISD0,ZISD1
"RTN","XUDHRES",7,0)
 F ZISD0=0:0 S ZISD0=$O(^%ZISL(3.54,ZISD0)) Q:ZISD0'>0  D
"RTN","XUDHRES",8,0)
 . F ZISD1=0:0 S ZISD1=$O(^%ZISL(3.54,ZISD0,1,ZISD1)) Q:ZISD1'>0  D
"RTN","XUDHRES",9,0)
 . . D KILLRES^%ZISC(ZISD0,ZISD1)
"RTN","XUDHRES",10,0)
 . . S X1=$P(^%ZISL(3.54,ZISD0,0),U),X2=$O(^%ZIS(1,"C",X1,0))
"RTN","XUDHRES",11,0)
 . . S X1=$P($G(^%ZIS(1,+X2,1)),U,10) S:X1 $P(^%ZISL(3.54,ZISD0,0),U,2)=X1
"RTN","XUDHRES",12,0)
 . Q
"RTN","XUDHRES",13,0)
 Q
"RTN","XUDHRES",14,0)
RELONE ;Option to release one
"RTN","XUDHRES",15,0)
 N ZISD0,ZISD1,DIC,X,Y
"RTN","XUDHRES",16,0)
 S DIC="^%ZISL(3.54,",DIC(0)="AEMQ" D ^DIC Q:$D(DUOUT)!(Y'>0)  S ZISD0=+Y
"RTN","XUDHRES",17,0)
 S DIC=DIC_ZISD0_",1," D ^DIC Q:$D(DUOUT)!(Y'>0)  S ZISD1=+Y
"RTN","XUDHRES",18,0)
 D KILLRES^%ZISC(ZISD0,ZISD1)
"RTN","XUDHRES",19,0)
 Q
"RTN","XUDHSET")
0^27^B1950771
"RTN","XUDHSET",1,0)
XUDHSET ;ISC-SF/RWF - Setup devices ;5/5/97  15:41
"RTN","XUDHSET",2,0)
 ;;8.0;KERNEL;**49**;Jul 10, 1995
"RTN","XUDHSET",3,0)
 Q
"RTN","XUDHSET",4,0)
 ;N1 device name, N2 resource name, CNT # of slots
"RTN","XUDHSET",5,0)
RES(N1,N2,CNT,LOC,SUB) ;Build a RESOURCE device entry
"RTN","XUDHSET",6,0)
 N X,Y,%,XUFD,XUDA,DIC
"RTN","XUDHSET",7,0)
 S:'$D(N2) N2=N1 S:'$D(CNT) CNT=1 S:'$D(LOC) LOC="Resource Device" S:'$D(SUB) SUB="P-OTHER"
"RTN","XUDHSET",8,0)
 S DIC="^%ZIS(1,",DIC(0)="M",X=N1 D ^DIC I Y>0 Q "-1^Device name in use"
"RTN","XUDHSET",9,0)
 S DIC="^%ZISL(3.54,",DIC(0)="M",X=N2 D ^DIC I Y>0 Q "-1^Resource name in use"
"RTN","XUDHSET",10,0)
 S %=$O(^%ZIS(2,"B",SUB,0)) S:%'>0 %=$O(^%ZIS(2,"B",SUB)),%=$S(%[SUB:$O(^%ZIS(2,"B",%,0)))
"RTN","XUDHSET",11,0)
 S XUDA="+1,",XUDA2="+2,"
"RTN","XUDHSET",12,0)
 S XUFD(3.5,XUDA,.01)=N1,XUFD(3.5,XUDA,2)="RES",XUFD(3.5,XUDA,1)=N2,XUFD(3.5,XUDA,35)=CNT,XUFD(3.5,XUDA,.02)=LOC
"RTN","XUDHSET",13,0)
 S:%>0 XUFD(3.5,XUDA,3)=%
"RTN","XUDHSET",14,0)
 D UPDATE^DIE("","XUFD","XUDA")
"RTN","XUDHSET",15,0)
 S %=$O(^TMP("DIERR",$J,0)) I % Q "-1^"_^(%,"TEXT",1)
"RTN","XUDHSET",16,0)
 Q XUDA(1)_"^"_$P(^%ZIS(1,XUDA(1),0),"^")
"RTN","XUINPCH")
0^^B4357478
"RTN","XUINPCH",1,0)
XUINPCH ;SF/RWF - RE-INDEX NEW X-REF ON FILE 200 ;12/30/96  13:53
"RTN","XUINPCH",2,0)
 ;;8.0;KERNEL;**20,36,49**;Feb. 9, 1996
"RTN","XUINPCH",3,0)
 Q
"RTN","XUINPCH",4,0)
POST1 ;Post init for patch XU*8*20 to reindex new X-ref on file 200.
"RTN","XUINPCH",5,0)
 N XU,DA,DIK
"RTN","XUINPCH",6,0)
 F XU=0:0 S XU=$O(^VA(200,XU)) Q:XU'>0  I $D(^VA(200,XU,203,0)) D
"RTN","XUINPCH",7,0)
 . S DA(1)=XU,DIK="^VA(200,"_XU_",203,",DIK(1)=".01^4"
"RTN","XUINPCH",8,0)
 . D ENALL^DIK
"RTN","XUINPCH",9,0)
 . Q
"RTN","XUINPCH",10,0)
 Q
"RTN","XUINPCH",11,0)
POST14 ;Post INIT for patch XU*8*14 to seed the E-sig last changed date.
"RTN","XUINPCH",12,0)
 N DA,%,%H,LT S DA=.5,%H=$H,LT=$$KSP^XUPARAM("LIFETIME")
"RTN","XUINPCH",13,0)
 F  S DA=$O(^VA(200,DA)) Q:DA'>0  S %=$G(^VA(200,DA,20)) I $L(%) D
"RTN","XUINPCH",14,0)
 . Q:'$L($P(%,U,4))!$P(%,U,1)
"RTN","XUINPCH",15,0)
 . S $P(^VA(200,DA,20),U,1)=+$$HADD^XLFDT(%H,($R(LT)+30),0,0,0)
"RTN","XUINPCH",16,0)
 . Q
"RTN","XUINPCH",17,0)
 Q
"RTN","XUINPCH",18,0)
 ;
"RTN","XUINPCH",19,0)
POST36 ;Post INIT for patch XU*8*36
"RTN","XUINPCH",20,0)
 N I,X
"RTN","XUINPCH",21,0)
 ;Cleanup some old data in file 4.
"RTN","XUINPCH",22,0)
 F I=0:0 S I=$O(^DIC(4,I)) Q:I'>0  I $D(^DIC(4,I,1,"B"))>2 K ^DIC(4,I,1,"B")
"RTN","XUINPCH",23,0)
 ;See that we have the current ID nodes for file 200
"RTN","XUINPCH",24,0)
 F I=1,2,3 S X=$T(ID200+I) I $P(X,";",3)]"" S ^DD(200,0,"ID",$P(X,";",3))=$P(X,";",4,99)
"RTN","XUINPCH",25,0)
 Q
"RTN","XUINPCH",26,0)
ID200 ;;
"RTN","XUINPCH",27,0)
 ;;1;D EN^DDIOL("   "_$P(^(0),U,2),"","?0")
"RTN","XUINPCH",28,0)
 ;;28;D:$D(^(5)) EN^DDIOL("   "_$P(^(5),U,2),"","?0")
"RTN","XUINPCH",29,0)
 ;;W8;D:$P(^(0),U,9) EN^DDIOL("   "_$$EXTERNAL^DILFD(200,8,"",$P(^(0),U,9)),"","?0")
"RTN","XUINPCH",30,0)
 ;
"RTN","XUINPCH",31,0)
POST43 ;Post INIT for patch 43, Inst file support for CIRN/VISN
"RTN","XUINPCH",32,0)
 N FDA,IEN S FDA(4.1,"?+1,",.01)="VISN",FDA(4.1,"?+1,",1)="VETERANS INTEGRATED SERVICE NETWORK"
"RTN","XUINPCH",33,0)
 D UPDATE^DIE("E","FDA","IEN")
"RTN","XUINPCH",34,0)
 Q
"RTN","XUINPCH",35,0)
POST49 ;Post INIT for patch XU*8*49
"RTN","XUINPCH",36,0)
 N I,X
"RTN","XUINPCH",37,0)
 ;See that we have the current ID nodes for file 3.2 and 3.5
"RTN","XUINPCH",38,0)
 F I=1:1:4 S X=$T(ID49+I) I $P(X,";",3)]"" S ^DD($P(X,";",3),0,"ID",$P(X,";",4))=$P(X,";",5,99)
"RTN","XUINPCH",39,0)
 Q
"RTN","XUINPCH",40,0)
ID49 ;;
"RTN","XUINPCH",41,0)
 ;;3.2;W99;N % S %=$P($G(^(9)),U,1) D:$L(%) EN^DDIOL("  "_%,"",$S($S($X>30:$X,1:30)+$L(%)>76:"!?8",1:"?30"))
"RTN","XUINPCH",42,0)
 ;;3.5;.02;N % S %=$P($G(^(1)),U) D:$L(%) EN^DDIOL("  "_%,"",$S($X+$L(%)>76:"!?"_(77-$L(%)),1:"?0"))
"RTN","XUINPCH",43,0)
 ;;3.5;1;D EN^DDIOL("   "_$P(^(0),U,2),"","?0")
"RTN","XUINPCH",44,0)
 ;;3.5;1.9;D EN^DDIOL("   "_$P(^(0),U,9),"","?0")
"RTN","XUINPCH",45,0)
 ;
"RTN","XUS")
0^12^B17549352
"RTN","XUS",1,0)
XUS ;SFISC/STAFF - SIGNON ;01/17/97  16:20
"RTN","XUS",2,0)
 ;;8.0;KERNEL;**16,26,49**;Jul 10, 1995
"RTN","XUS",3,0)
 D INTRO^XUS1A()
"RTN","XUS",4,0)
 K (ZUGUI1,ZUGUI2) K ^XUTL("ZISPARAM",$I)
"RTN","XUS",5,0)
 S XQXFLG("GUI")=$G(ZUGUI1)_"^"_$G(ZUGUI2)
"RTN","XUS",6,0)
 W ! D SET1(1) I POP S XUM=3 G NO
"RTN","XUS",7,0)
 W !!,"Volume set: ",$P(XUENV,U,4),"  UCI: ",XUCI,"  Device: ",$I W:$D(IO("ZIO")) " (",IO("ZIO"),")" W !
"RTN","XUS",8,0)
RS S XUM=$$SET2 G:XUM NO
"RTN","XUS",9,0)
 I $P(XU1,U,2)]"" S XUM=$$DEVPAS() I XUM G H:XUM<0,NO
"RTN","XUS",10,0)
 S PGM=$P(XOPT,U,8),XUA=$P(PGM,"[",1) I XUA]"" X XUEON G P
"RTN","XUS",11,0)
A S (XUSER(0),XUSER(1),XQUR)=""
"RTN","XUS",12,0)
 X XUEOFF S AV=$$ASKAV() X XUEON I AV="^;^" G H ;Get out
"RTN","XUS",13,0)
 I AV["MAIL-BOX",AV[";XMR" S (XUA,PGM)="XMR",XMCHAN=$P($P(AV,";")," ",2),DUZ=.5 G XMR^XUSCLEAN
"RTN","XUS",14,0)
 S XQUR=$P(AV,";",3)
"RTN","XUS",15,0)
 S DUZ=$$CHECKAV(AV,.XUSER) K AV
"RTN","XUS",16,0)
 S XUM=$$UVALID() G:XUM NO
"RTN","XUS",17,0)
 K XUF,%1 S XUF=0 X XUEON
"RTN","XUS",18,0)
 I DUZ D USER^XUS1,SEC^XUS3:($D(^%ZIS(1,XUDEV,"TIME"))!$D(^(95))) G:XUM NO
"RTN","XUS",19,0)
 G NO:'DUZ S DTIME=$P(XOPT,U,10),X=$S(DUZ("BUF"):"",1:"NO-")_"TYPE-AHEAD" X:$D(^%ZOSF(X)) ^(X)
"RTN","XUS",20,0)
 D TT^XUS3:$G(XUTT) ;G ^XUS3:$O(^VA(200,DUZ,.2,0))>0
"RTN","XUS",21,0)
PGM ;
"RTN","XUS",22,0)
 S Y=+$G(^%ZIS(1,XUDEV,201)) I Y>0 D CHK S XQY=Y G:Y O
"RTN","XUS",23,0)
 S Y=+$G(^VA(200,DUZ,201)) I Y>0 D CHK S XQY=Y G:Y O
"RTN","XUS",24,0)
 S XUM=5 G NO
"RTN","XUS",25,0)
O D CHEK^XQ83
"RTN","XUS",26,0)
 S (XUA,PGM)="XQ" S:$G(XQXFLG("GUI"))="1^" KWAPI=1
"RTN","XUS",27,0)
P G NEXT^XUS1
"RTN","XUS",28,0)
 ;
"RTN","XUS",29,0)
CHK I $D(^DIC(19,Y,0)),$S($P(^(0),U,6)="":1,1:$D(^XUSEC($P(^(0),U,6),DUZ))) Q
"RTN","XUS",30,0)
 S Y=0 Q
"RTN","XUS",31,0)
LC S X=$$UP(X) Q
"RTN","XUS",32,0)
UP(%) Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","XUS",33,0)
 ;
"RTN","XUS",34,0)
E S:'DUZ XUF(.1)=$E(%1)
"RTN","XUS",35,0)
 S:XUF=2 XUF(.2)=XUF(.2)+1,XUF(XUF(.2))=%1 S %1="" Q
"RTN","XUS",36,0)
 Q
"RTN","XUS",37,0)
NO ;
"RTN","XUS",38,0)
 S X=$$NO^XUS3() G RS:'X,^XUSCLEAN
"RTN","XUS",39,0)
ON X ^%ZOSF("EON") Q
"RTN","XUS",40,0)
H ;;Exit point for all applications
"RTN","XUS",41,0)
C ;CLOSE
"RTN","XUS",42,0)
 G ^XUSCLEAN
"RTN","XUS",43,0)
ASKAV(PRE) ;Ask and return Access;Verify code, Turn off echo before calling
"RTN","XUS",44,0)
 ;Have the first Read write to flush the buffer on some systems
"RTN","XUS",45,0)
 N X,Y S PRE=$G(PRE)
"RTN","XUS",46,0)
 F  W !,PRE R "ACCESS CODE: ",X#100:60 S:('$T)!(X="^") X="^;^" Q:$L(X)
"RTN","XUS",47,0)
 I $P(X," ")="MAIL-BOX" S X=X_";XMR"
"RTN","XUS",48,0)
 I '$L($P(X,";",2)) W !,PRE,"VERIFY CODE: " R Y#60:60 S:'$T X="^;" S $P(X,";",2)=Y
"RTN","XUS",49,0)
 Q X
"RTN","XUS",50,0)
CHECKAV(X1,USER) ;Check A/V code return DUZ
"RTN","XUS",51,0)
 N %,X,Y,IEN
"RTN","XUS",52,0)
 S:X1[":" XUTT=1,X1=$P(X1,":",1)_$P(X1,":",2)
"RTN","XUS",53,0)
 S IEN=0,X=$P(X1,";") Q:X="^" -1
"RTN","XUS",54,0)
 S:XUF %1="Access: "_X G CHX:X'?1.20ANP S X=$$EN^XUSHSH($$UP(X)) I '$D(^VA(200,"A",X)) D:XUF E G CHX
"RTN","XUS",55,0)
 S %1="",IEN=$O(^VA(200,"A",X,0)),USER(0)=^VA(200,IEN,0),USER(1)=$G(^(.1)),XUF(.3)=IEN
"RTN","XUS",56,0)
 S X=$P(X1,";",2) S:XUF %1="Verify: "_X S X=$$EN^XUSHSH($$UP(X)) I $P(USER(1),"^",2)'=X D:XUF E G CHX
"RTN","XUS",57,0)
 Q IEN
"RTN","XUS",58,0)
CHX I IEN S X=$P($G(^VA(200,IEN,1.1)),U,2)+1,$P(^(1.1),"^",2)=X
"RTN","XUS",59,0)
 Q 0
"RTN","XUS",60,0)
SET1(FLAG) ;Setup parameters
"RTN","XUS",61,0)
 D GETENV^%ZOSV S U="^",XUENV=Y,XUCI=$P(Y,U,1),XQVOL=$P(Y,U,2),XUEON=^%ZOSF("EON"),XUEOFF=^("EOFF")
"RTN","XUS",62,0)
 S X=$O(^XTV(8989.3,1,4,"B",XQVOL,0)),XUVOL=$S(X>0:^XTV(8989.3,1,4,X,0),1:XQVOL_"^y^1") S:$P(XUVOL,U,6)="y" XRTL=XUCI_","_XQVOL
"RTN","XUS",63,0)
 S XOPT=$S($D(^XTV(8989.3,1,"XUS")):^("XUS"),1:"") F I=2:1:15 I $P(XOPT,U,I)="" S $P(XOPT,U,I)=$P("^5^900^1^1^^^^1^300^^^^N^90",U,I)
"RTN","XUS",64,0)
 K ^XUTL("XQ",$J) S XUT=0,XUF=0,XUDEV=0,DUZ=0,DUZ(0)="@",IOS=0,ION=""
"RTN","XUS",65,0)
 I FLAG S %ZIS="L",IOP="HOME" D ^%ZIS Q:POP
"RTN","XUS",66,0)
 S XUDEV=IOS,XUIOP=ION D:$D(XRTL) T0^%ZOSV
"RTN","XUS",67,0)
 Q
"RTN","XUS",68,0)
SET2() ;EF. Return error code
"RTN","XUS",69,0)
 S XUNOW=$$HTFM^XLFDT($H),DT=$E(XUNOW,1,7)
"RTN","XUS",70,0)
 S X=$P(XOPT,U,14) I "N"'[X S XUF=(X["R")+1,XUF(.1)="",XUF(.2)=0,XUF(.3)=0 I X["D" S:$D(^XTV(8989.3,1,4.33,"B",XUDEV))[0 XUF=0
"RTN","XUS",71,0)
 K DUZ,XUSER S (DUZ,DUZ(2))=0,(DUZ(0),DUZ("AG"),XUSER(0),XUSER(1),XUTT,%UCI)=""
"RTN","XUS",72,0)
 I $G(^%ZIS(14.5,"LOGON",XQVOL)) Q 1
"RTN","XUS",73,0)
 I $D(^%ZOSF("ACTJ")) X ^("ACTJ") I $P(XUVOL,U,3),($P(XUVOL,U,3)'>Y) Q 2
"RTN","XUS",74,0)
 S X=$G(^%ZIS(1,XUDEV,"XUS")),XU1=$G(^(1)) F I=1:1:15 I $P(X,U,I)]"" S $P(XOPT,U,I)=$P(X,U,I)
"RTN","XUS",75,0)
 S DTIME=600
"RTN","XUS",76,0)
 I '$P(XOPT,U,11),$D(^%ZIS(1,XUDEV,90)),^(90)>2800000,^(90)'>DT Q 8
"RTN","XUS",77,0)
 I $D(XRT0) S XRTN="XUS" D T1^%ZOSV
"RTN","XUS",78,0)
 Q 0
"RTN","XUS",79,0)
UVALID() ;EF. Is it valid for this user to sign on?
"RTN","XUS",80,0)
 I DUZ'>0 Q 4
"RTN","XUS",81,0)
 I $P(XUSER(0),U,11),$P(XUSER(0),U,11)'>DT Q 11 ;Access Terminated
"RTN","XUS",82,0)
 I $P(XUSER(0),U,7) Q 5 ;Disuser flag set
"RTN","XUS",83,0)
 Q 0
"RTN","XUS",84,0)
DEVPAS() ;EF. Ask device password
"RTN","XUS",85,0)
 X XUEOFF W !,"DEVICE PASSWORD: " R X:60 X XUEON
"RTN","XUS",86,0)
 S X=$E(X,1,30) S:'$T X="^" D LC Q:X["^" -1 I $P(XU1,U,2)'=X S:XUF %1="Device: "_X D:XUF E Q 6
"RTN","XUS",87,0)
 Q 0
"RTN","XUSERNEW")
0^13^B11722607
"RTN","XUSERNEW",1,0)
XUSERNEW ;SF/RWF - ADD NEW USER ;12/17/96  10:23
"RTN","XUSERNEW",2,0)
 ;;8.0;KERNEL;**16,49**;Jul 10, 1995
"RTN","XUSERNEW",3,0)
 ;In the call to NEW^XM for new users the variable XMZ must be undef.
"RTN","XUSERNEW",4,0)
 ;on a reactivation XMZ should be set to the current max message number.
"RTN","XUSERNEW",5,0)
EN ;Add
"RTN","XUSERNEW",6,0)
 S Y=$$ADD G EXIT:Y'>0,RE:$P(Y,U,3)'=1
"RTN","XUSERNEW",7,0)
 S DR="["_$$GET^XUPARAM("XUNEW USER","N")_"]"
"RTN","XUSERNEW",8,0)
 S XUN=+Y,DIE=200,DA=XUN D XUDIE^XUS5 G:$D(DTOUT) EXIT
"RTN","XUSERNEW",9,0)
 S Y=XUN K XMZ D NEW^XM K XMDT,XMM,XMZ
"RTN","XUSERNEW",10,0)
 ;ACCESS LETTER, Also see XUSERBLK
"RTN","XUSERNEW",11,0)
 W ! D LETTER(XUN,1)
"RTN","XUSERNEW",12,0)
 K DIR,DIWF,XUTEXT
"RTN","XUSERNEW",13,0)
 ;Fall in from above, called from REACT
"RTN","XUSERNEW",14,0)
KEYS S DIR(0)="Y",DIR("B")="NO",DIR("A")="Do you wish to allocate security keys" D ^DIR G:$D(DIRUT) EXIT
"RTN","XUSERNEW",15,0)
 I Y=1 S XQHOLD(XUN)="",XQKEY(0)=0,XQDA=0,XQAL=1,XQ6="",XQFL="" D KEY^XQ6
"RTN","XUSERNEW",16,0)
EXIT K D0,DA,DIE,DIC,DIR,DI,DICR,DIG,DIH,DIU,DIV,DLAYGO,DR,K,I,X,XQHOLD,XQKEY,XUN,XUSOLD,XMB,XMZ,Y,Z,XQ6,XQFL,DTOUT
"RTN","XUSERNEW",17,0)
 Q
"RTN","XUSERNEW",18,0)
RE ;Jump from new user to reactivate
"RTN","XUSERNEW",19,0)
 S XUN=+Y,DIR("A")="This isn't a new user, Want to reactivate?",DIR(0)="Y",DIR("B")="NO" D ^DIR G EXIT:$D(DIRUT)!(Y'=1),RE2
"RTN","XUSERNEW",20,0)
REACT ;SEA/WDE-REACTIVATE A USER
"RTN","XUSERNEW",21,0)
 S XUN=+$$LOOKUP^XUSER G EXIT:XUN<0
"RTN","XUSERNEW",22,0)
RE2 S XUSOLD=^VA(200,XUN,0),$P(^VA(200,XUN,0),U,11)=""
"RTN","XUSERNEW",23,0)
 S DIE=200,DR="["_$$GET^XUPARAM("XUREACT USER","N")_"]",DA=XUN D XUDIE^XUS5 G:$D(DTOUT) EXIT
"RTN","XUSERNEW",24,0)
 I $P(^VA(200,XUN,0),U,3)="" W !!,"No ACCESS CODE has been entered.",$C(7),!
"RTN","XUSERNEW",25,0)
 I $P(^VA(200,XUN,0),U,11)>0,$P(^(0),U,11)'>DT W !!,"User is still TERMINATED.",$C(7),!
"RTN","XUSERNEW",26,0)
 S DIR(0)="Y",DIR("A")="Deny access to old mail messages",DIR("B")="NO",DIR("?")="Enter a 'YES' to restrict access to old mail messages." D ^DIR G:$D(DIRUT) EXIT
"RTN","XUSERNEW",27,0)
 K XMZ S:Y=1 XMZ=+$P(^XMB(3.9,0),"^",3) S Y=XUN D NEW^XM K XMDT,XMM,XMZ
"RTN","XUSERNEW",28,0)
 G KEYS
"RTN","XUSERNEW",29,0)
 Q
"RTN","XUSERNEW",30,0)
ADD(NP1,KEYS) ;Common point to do DIC call for adding a new person.
"RTN","XUSERNEW",31,0)
 ;NP1 will be added to the default or what comes from the NPI field of the KSP.
"RTN","XUSERNEW",32,0)
 ;KEYS is a list of Keys to give the new person
"RTN","XUSERNEW",33,0)
 N DA,DR,DLAYGO,XUS1,XUS2,DIC,DIK,NP2,Y I $G(^XTV(8989.3,1,"NPI"))]"" X ^("NPI") S NP2=DR
"RTN","XUSERNEW",34,0)
 S:'$D(NP2) NP2="1;"_$S($D(^XUSEC("XUSPF200",DUZ)):9,1:"9R~")_";4"
"RTN","XUSERNEW",35,0)
 S DIC="^VA(200,",DIC(0)="AELMQ",DLAYGO=200,DIC("A")="Enter NEW PERSON's name (LAST,FIRST MI): ",DIC("DR")=""
"RTN","XUSERNEW",36,0)
 D ^DIC S XUS1=Y G AX:(Y'>0)!($P(Y,U,3)'>0)
"RTN","XUSERNEW",37,0)
 W !,"Now for the Identifiers."
"RTN","XUSERNEW",38,0)
 S DA=+XUS1,DIE=DIC,DR=NP2_$S($D(NP1):";"_NP1,1:""),DIE("NO^")="OUTOK"
"RTN","XUSERNEW",39,0)
 L +^VA(200,DA,0) D ^DIE L -^VA(200,DA,0)
"RTN","XUSERNEW",40,0)
 I $D(Y)!$D(DTOUT) W !?5,"<'",$P(^VA(200,DA,0),U),"' DELETED>" D
"RTN","XUSERNEW",41,0)
 . S DIK="^VA(200," D ^DIK S DIK="^DIC(3,",XUS1=$P($G(^DIC(3,DA,0)),U,16) D:$D(^DD(3,0)) ^DIK S DIK="^DIC(16,",DA=XUS1 D:DA&$D(^DD(16,0)) ^DIK S XUS1=-1
"RTN","XUSERNEW",42,0)
 . Q
"RTN","XUSERNEW",43,0)
 I $D(KEYS) F XUS2=1:1 S Y=$P(KEYS,",",XUS2) Q:'$L(Y)  S %=$$ADD^XQKEY(XUS1,Y) I '% W !,"Key '",Y,"' not allocated"
"RTN","XUSERNEW",44,0)
AX Q XUS1
"RTN","XUSERNEW",45,0)
REPRINT S DA=+$$LOOKUP^XUSER G EXIT:DA'>0
"RTN","XUSERNEW",46,0)
 D LETTER(DA) G EXIT
"RTN","XUSERNEW",47,0)
LETTER(XUN,ASK) ;Print access letter
"RTN","XUSERNEW",48,0)
 Q:'$G(XUN)  N DIWF,FR,TO,BY,DIR
"RTN","XUSERNEW",49,0)
 S XUTEXT=$$GET^XUPARAM("XUSER COMPUTER ACCOUNT","N"),XUTEXT=$O(^DIC(9.2,"B",XUTEXT,0))
"RTN","XUSERNEW",50,0)
 S DIR(0)="Y",DIR("A")="Print User Account Access Letter"
"RTN","XUSERNEW",51,0)
 I XUTEXT>0 S Y=1 D:$G(ASK) ^DIR I Y=1 D
"RTN","XUSERNEW",52,0)
 . S XUU="________",DIWF="^DIC(9.2,XUTEXT,1,",DIWF(1)=200,FR=XUN,TO=XUN,BY="NUMBER" D EN2^DIWF
"RTN","XUSERNEW",53,0)
 . Q
"RTN","XUSERNEW",54,0)
 K XUTEXT
"RTN","XUSERNEW",55,0)
 Q
"RTN","XUTMK")
0^21^B18365502
"RTN","XUTMK",1,0)
XUTMK ;SEA/RDS - Taskman: Option, ZTMCLEAN/ZTMQCLEAN ;12/30/96  15:31
"RTN","XUTMK",2,0)
 ;;8.0;KERNEL;**49**;Jul 10, 1995
"RTN","XUTMK",3,0)
 ;
"RTN","XUTMK",4,0)
SETUP ;Setup Variables And Synchronize ^%ZTSK With ^%ZTSCH
"RTN","XUTMK",5,0)
 S ZTDTH=0
"RTN","XUTMK",6,0)
 F  S ZTDTH=$O(^%ZTSCH(ZTDTH)) Q:'ZTDTH  F ZTS=0:0 S ZTS=$O(^%ZTSCH(ZTDTH,ZTS)) Q:'ZTS  D
"RTN","XUTMK",7,0)
 . L +^%ZTSK(ZTS):2 Q:'$T  K:$D(^%ZTSK(ZTS,0))[0 ^%ZTSK(ZTS),^%ZTSCH(ZTDTH,ZTS)
"RTN","XUTMK",8,0)
 . S:$D(^%ZTSK(ZTS,0))#2 $P(^(0),U,6)=$$H0^%ZTM(ZTDTH)
"RTN","XUTMK",9,0)
 . L -^%ZTSK(ZTS) Q
"RTN","XUTMK",10,0)
 I $D(ZTKEEP)#2 G SX
"RTN","XUTMK",11,0)
 S ZTKEEP="",ZTV=^%ZOSF("VOL"),ZTI=$O(^%ZIS(14.5,"B",ZTV,""))
"RTN","XUTMK",12,0)
 I ZTI]"",$D(^%ZIS(14.5,ZTI,0))#2 S ZTKEEP=$P(^(0),U,9)
"RTN","XUTMK",13,0)
SX S:ZTKEEP="" ZTKEEP=7 S ZTKEEP=$H-ZTKEEP,ZTCNT=0,ZTMAX=100,ZTS=.9
"RTN","XUTMK",14,0)
 ;
"RTN","XUTMK",15,0)
CLEAN ;Delete Obsolete Entries
"RTN","XUTMK",16,0)
 I '(ZTCNT#20),$$S^%ZTLOAD S ZTSTOP=1 Q
"RTN","XUTMK",17,0)
 S ZTS=$O(^%ZTSK(ZTS)) I 'ZTS G FINAL
"RTN","XUTMK",18,0)
 S ZTMAX=ZTS,ZTCNT=ZTCNT+1
"RTN","XUTMK",19,0)
 L +^%ZTSK(ZTS):2 I '$T G CLEAN
"RTN","XUTMK",20,0)
 I $D(^%ZTSK(ZTS,0))[0 K ^%ZTSK(ZTS) W:'$D(ZTQUEUED) "." G NEXT
"RTN","XUTMK",21,0)
 ;
"RTN","XUTMK",22,0)
1 ;keep active tasks
"RTN","XUTMK",23,0)
 I $D(^%ZTSCH("TASK",ZTS)) G NEXT
"RTN","XUTMK",24,0)
 S ZTREC=^%ZTSK(ZTS,0),ZTDTH=$P(ZTREC,U,6) I ZTDTH="" G 2
"RTN","XUTMK",25,0)
 S:ZTDTH'["," ZTDTH=$$H0^%ZTM(ZTDTH) S ZTDTH3=$$H3^%ZTM(ZTDTH)
"RTN","XUTMK",26,0)
 I $D(^%ZTSCH(ZTDTH3,ZTS)) G NEXT
"RTN","XUTMK",27,0)
 I $D(^%ZTSCH("JOB",ZTDTH3,ZTS)) G NEXT
"RTN","XUTMK",28,0)
 S ZTCNTPU=$P(ZTREC,U,14),ZTIO=$P($G(^%ZTSK(ZTS,.2)),U,2)
"RTN","XUTMK",29,0)
 I ZTCNTPU]"",$D(^%ZTSCH("LINK",ZTCNTPU,ZTDTH3,ZTS)) G NEXT
"RTN","XUTMK",30,0)
 I ZTIO]"",$D(^%ZTSCH("IO",ZTIO,ZTDTH3,ZTS)) G NEXT
"RTN","XUTMK",31,0)
 ;
"RTN","XUTMK",32,0)
2 ;keep young inactive tasks
"RTN","XUTMK",33,0)
 S Z1=$G(^%ZTSK(ZTS,.1))
"RTN","XUTMK",34,0)
 I Z1]"",$P(Z1,U,8),$H'>$P(Z1,U,8) G NEXT ;Remember Until
"RTN","XUTMK",35,0)
 S ZTF=$S($P(Z1,U)="":0,"135AG"[$P(Z1,U):0,1:$P(Z1,U,2)'<ZTKEEP) ;Last status update
"RTN","XUTMK",36,0)
 S ZTF=$S(ZTF:ZTF,ZTDTH="":0,1:ZTDTH'<+ZTKEEP) ;Run time
"RTN","XUTMK",37,0)
 S ZTF=$S(ZTF:ZTF,$P(ZTREC,U,5)="":0,1:$P(ZTREC,U,5)'<+ZTKEEP) ;creation date
"RTN","XUTMK",38,0)
 I ZTF G NEXT
"RTN","XUTMK",39,0)
 ;
"RTN","XUTMK",40,0)
3 ;delete old inactive tasks
"RTN","XUTMK",41,0)
 K ^%ZTSK(ZTS) W:'$D(ZTQUEUED) "."
"RTN","XUTMK",42,0)
NEXT L -^%ZTSK(ZTS) G CLEAN
"RTN","XUTMK",43,0)
 ;
"RTN","XUTMK",44,0)
FINAL ;Final Steps.
"RTN","XUTMK",45,0)
 L +^%ZTSK(-1) ;lock top
"RTN","XUTMK",46,0)
 S $P(^%ZTSK(0),"^",3,4)=ZTMAX_"^"_ZTCNT
"RTN","XUTMK",47,0)
 I ^%ZTSK(-1)>9000000 S ^%ZTSK(-1)=100
"RTN","XUTMK",48,0)
 L -^%ZTSK(-1)
"RTN","XUTMK",49,0)
 D CLIST,TASK
"RTN","XUTMK",50,0)
 ;Call TM error purge
"RTN","XUTMK",51,0)
 S %=$$PURGE^XUTMKE(0,ZTKEEP,"")
"RTN","XUTMK",52,0)
 K ZT,ZTDTH,ZTF,ZTI,ZTKEEP,ZTS,ZTV
"RTN","XUTMK",53,0)
 Q
"RTN","XUTMK",54,0)
 ;
"RTN","XUTMK",55,0)
CLIST ;Clean up the C list
"RTN","XUTMK",56,0)
 S ZT1=""
"RTN","XUTMK",57,0)
 F  S ZT1=$O(^%ZTSCH("C",ZT1)),ZT2="" Q:ZT1=""  F  S ZT2=$O(^%ZTSCH("C",ZT1,ZT2)),ZT3="" Q:ZT2=""  D
"RTN","XUTMK",58,0)
 . F  S ZT3=$O(^%ZTSCH("C",ZT1,ZT2,ZT3)) Q:ZT3=""  I $D(^%ZTSK(ZT3,0))[0 K ^%ZTSCH("C",ZT1,ZT2,ZT3)
"RTN","XUTMK",59,0)
 . Q
"RTN","XUTMK",60,0)
 Q
"RTN","XUTMK",61,0)
TASK ;Clean the TASK nodes.
"RTN","XUTMK",62,0)
 N ZT1,ZT2
"RTN","XUTMK",63,0)
 F ZT1=0:0 S ZT1=$O(^%ZTSCH("TASK",ZT1)) Q:ZT1'>0  D
"RTN","XUTMK",64,0)
 . S ZT2=^%ZTSCH("TASK",ZT1)
"RTN","XUTMK",65,0)
 . I "^XMAD^"[(U_$E($P(ZT2,U,2),1,4)_U) Q
"RTN","XUTMK",66,0)
 . I $H-$P(ZT2,U,5)>4  K ^(ZT1)
"RTN","XUTMK",67,0)
 . Q
"RTN","XUTMK",68,0)
 Q
"RTN","XUTMK",69,0)
 ;
"RTN","XUTMK",70,0)
OPTION ;Entry Point For ZTMCLEAN Option
"RTN","XUTMK",71,0)
 W !!,"This option queues a task to clean up the Task file."
"RTN","XUTMK",72,0)
 W !,"All tasks that have been inactive for a certain number of days are deleted.",!
"RTN","XUTMK",73,0)
 ;
"RTN","XUTMK",74,0)
ZTKEEP ;ask user how long to keep inactive tasks
"RTN","XUTMK",75,0)
 S DIR(0)="NA^0:365",DIR("A")="Number of days to save inactive tasks: ",DIR("B")=""
"RTN","XUTMK",76,0)
 S ZTV=^%ZOSF("VOL"),ZTI=$O(^%ZIS(14.5,"B",ZTV,""))
"RTN","XUTMK",77,0)
 I ZTI]"",$D(^%ZIS(14.5,ZTI,0))#2 S DIR("B")=$P(^(0),U,9)
"RTN","XUTMK",78,0)
 I DIR("B")="" S DIR("B")=7
"RTN","XUTMK",79,0)
 S DIR("?")="     Answer must be an integer between 0 and 365",DIR("??")="^D HELP1^XUTMK"
"RTN","XUTMK",80,0)
 D ^DIR W:$D(DTOUT) $C(7)
"RTN","XUTMK",81,0)
 K DIR,DIRUT,DTOUT,DUOUT,ZTI,ZTV
"RTN","XUTMK",82,0)
 I Y'=0&'Y K %,X,Y D NOTQED Q
"RTN","XUTMK",83,0)
 S ZTKEEP=Y
"RTN","XUTMK",84,0)
 ;
"RTN","XUTMK",85,0)
ZTDTH ;ask user when to start the cleanup
"RTN","XUTMK",86,0)
 S DIR(0)="DA^::AERSX",DIR("A")="Start time for cleanup task: ",DIR("B")="NOW"
"RTN","XUTMK",87,0)
 S DIR("?")="     Answer must be a date and time",DIR("??")="^D HELP2^XUTMK"
"RTN","XUTMK",88,0)
 D ^DIR W:$D(DTOUT) $C(7)
"RTN","XUTMK",89,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","XUTMK",90,0)
 I 'Y K %,X,Y D NOTQED Q
"RTN","XUTMK",91,0)
 S ZTDTH=Y
"RTN","XUTMK",92,0)
 ;
"RTN","XUTMK",93,0)
QUEUE ;queue the cleanup task
"RTN","XUTMK",94,0)
 S ZTRTN="XUTMK",ZTIO="",ZTDESC="TaskMan: clean the Task file",ZTSAVE("ZTKEEP")=""
"RTN","XUTMK",95,0)
 D ^%ZTLOAD
"RTN","XUTMK",96,0)
 W !!?5,"Task file cleanup queued!" H 1
"RTN","XUTMK",97,0)
 K ZTSK Q
"RTN","XUTMK",98,0)
 ;
"RTN","XUTMK",99,0)
HELP1 ;ZTKEEP--?? help for first prompt
"RTN","XUTMK",100,0)
 W !!?5,"Answer how many days inactive tasks should be kept."
"RTN","XUTMK",101,0)
 W !?5,"Any task currently scheduled, waiting, or running is still active."
"RTN","XUTMK",102,0)
 Q
"RTN","XUTMK",103,0)
 ;
"RTN","XUTMK",104,0)
HELP2 ;ZTDTH--?? help for second prompt
"RTN","XUTMK",105,0)
 W !!?5,"Answer exactly when the task should begin the cleanup."
"RTN","XUTMK",106,0)
 Q
"RTN","XUTMK",107,0)
 ;
"RTN","XUTMK",108,0)
NOTQED ;OPTION--feedback when task is canceled
"RTN","XUTMK",109,0)
 W !!?5,"Task file cleanup NOT queued!" H 1
"RTN","XUTMK",110,0)
 Q
"RTN","XUTMK",111,0)
 ;
"RTN","XUTMRJD")
0^1^B21145895
"RTN","XUTMRJD",1,0)
XUTMRJD ;SEA/RDS - TaskMan: Option, XURESJOB exit action ;10/16/96  08:43
"RTN","XUTMRJD",2,0)
 ;;8.0;KERNEL;**49**;Jul 10, 1995
"RTN","XUTMRJD",3,0)
MAIN ;
"RTN","XUTMRJD",4,0)
 ;Main module of XURESJOB exit action
"RTN","XUTMRJD",5,0)
 I '$O(^%ZTSCH("TASK",0)) Q
"RTN","XUTMRJD",6,0)
 N ZTCOUNT,ZTENV,ZTKEY,ZTNAME,ZTPLURAL,ZTSK,ZTOOPS,ZTOUT,XUTMUCI
"RTN","XUTMRJD",7,0)
 S (ZTOOPS,ZTOUT)=0
"RTN","XUTMRJD",8,0)
 K ^TMP($J,"XUTMRJD")
"RTN","XUTMRJD",9,0)
 D ENV^XUTMUTL Q:'$D(ZTENV)
"RTN","XUTMRJD",10,0)
 D EXPLAIN
"RTN","XUTMRJD",11,0)
 D PROMPT1 Q:ZTOUT
"RTN","XUTMRJD",12,0)
M2 F  D  I ZTOUT Q
"RTN","XUTMRJD",13,0)
 .D PROMPT2 I ZTOUT Q
"RTN","XUTMRJD",14,0)
 .D PROMPT3 Q:ZTOUT
"RTN","XUTMRJD",15,0)
 .D:'ZTOOPS DISPLAY I ZTOUT Q
"RTN","XUTMRJD",16,0)
 .D PROMPT4 I ZTOOPS!ZTOUT Q
"RTN","XUTMRJD",17,0)
 .D REMOVE
"RTN","XUTMRJD",18,0)
 .Q
"RTN","XUTMRJD",19,0)
 K ^TMP($J,"XUTMRJD")
"RTN","XUTMRJD",20,0)
 Q
"RTN","XUTMRJD",21,0)
EXPLAIN ;
"RTN","XUTMRJD",22,0)
 ;MAIN--explain purpose of this exit action
"RTN","XUTMRJD",23,0)
 W !!,"If you forcibly exited any processes, some of them may have"
"RTN","XUTMRJD",24,0)
 W !,"been TaskMan tasks.  If so, TaskMan still believes the tasks"
"RTN","XUTMRJD",25,0)
 W !,"are running.  You can correct this problem by telling TaskMan"
"RTN","XUTMRJD",26,0)
 W !,"which tasks you forcibly exited.  TaskMan will then remove those"
"RTN","XUTMRJD",27,0)
 W !,"tasks from its list of running tasks.",!
"RTN","XUTMRJD",28,0)
 Q
"RTN","XUTMRJD",29,0)
PROMPT1 ;
"RTN","XUTMRJD",30,0)
 ;MAIN--ask whether system manager forcibly exited any tasks
"RTN","XUTMRJD",31,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","XUTMRJD",32,0)
 S DIR(0)="Y",DIR("A")="Did you forcibly exit any tasks",DIR("B")="Yes"
"RTN","XUTMRJD",33,0)
 S DIR("?")="^D HELP1A^XUTMRJD1",DIR("??")="^D HELP1B^XUTMRJD1"
"RTN","XUTMRJD",34,0)
 W ! D ^DIR
"RTN","XUTMRJD",35,0)
 I $D(DTOUT) W "     ** TIME-OUT **",$C(7)
"RTN","XUTMRJD",36,0)
 I $D(DUOUT) W "     ** ^-ESCAPE **"
"RTN","XUTMRJD",37,0)
 I $D(DIRUT) S ZTOUT=1 Q
"RTN","XUTMRJD",38,0)
 S ZTOUT='Y
"RTN","XUTMRJD",39,0)
 Q
"RTN","XUTMRJD",40,0)
PROMPT2 ;
"RTN","XUTMRJD",41,0)
 ;MAIN--ask system manager to select tasks to remove from Task List
"RTN","XUTMRJD",42,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y,XUTMT S ZTSK="" K ^TMP($J,"XUTMT")
"RTN","XUTMRJD",43,0)
 F  D  Q:ZTSK!ZTOUT
"RTN","XUTMRJD",44,0)
 .W ! S XUTMT(0)="AL"
"RTN","XUTMRJD",45,0)
 .S XUTMT("A")="Which tasks did you forcibly exit (?T for list):  "
"RTN","XUTMRJD",46,0)
 .S XUTMT("S1")="D SCREEN2A^XUTMRJD1",XUTMT("S2")="D SCREEN2B^XUTMRJD1"
"RTN","XUTMRJD",47,0)
 .S XUTMT("?")="^D HELP2A^XUTMRJD1",XUTMT("??")="^D HELP2B^XUTMRJD1"
"RTN","XUTMRJD",48,0)
 .D ^XUTMT
"RTN","XUTMRJD",49,0)
P21 .;
"RTN","XUTMRJD",50,0)
 .I ZTSK="?SYSTEM STATUS" X ^%ZOSF("SS") Q
"RTN","XUTMRJD",51,0)
 .I ZTSK="?TASK LIST" D  Q
"RTN","XUTMRJD",52,0)
 ..K XUTMT
"RTN","XUTMRJD",53,0)
 ..S XUTMT(0)="R4"
"RTN","XUTMRJD",54,0)
 ..S XUTMT("NODE")="^%ZTSCH(""TASK"","
"RTN","XUTMRJD",55,0)
 ..S XUTMT("NONE")="There are no running tasks listed"
"RTN","XUTMRJD",56,0)
 ..W ! D ^XUTMT
"RTN","XUTMRJD",57,0)
 ..Q
"RTN","XUTMRJD",58,0)
 .I 'ZTSK S ZTOUT=1 W !!?5,"No tasks selected.",! Q
"RTN","XUTMRJD",59,0)
 .Q
"RTN","XUTMRJD",60,0)
 K ^TMP($J,"XUTMT")
"RTN","XUTMRJD",61,0)
 Q
"RTN","XUTMRJD",62,0)
PROMPT3 ;
"RTN","XUTMRJD",63,0)
 ;MAIN--ask system manager whether to display the selected tasks
"RTN","XUTMRJD",64,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","XUTMRJD",65,0)
 S ZTCOUNT=^TMP($J,"XUTMRJD")
"RTN","XUTMRJD",66,0)
 S ZTPLURAL="" I ZTCOUNT>1 S ZTPLURAL="s"
"RTN","XUTMRJD",67,0)
 W !!?5,"You have selected ",ZTCOUNT," task",ZTPLURAL," listed as running."
"RTN","XUTMRJD",68,0)
 W !
"RTN","XUTMRJD",69,0)
P3 ;
"RTN","XUTMRJD",70,0)
 S DIR(0)="Y",DIR("A")="Do you want to see the task"_ZTPLURAL_" you have selected",DIR("B")="Yes"
"RTN","XUTMRJD",71,0)
 S DIR("?")="^D HELP3A^XUTMRJD1",DIR("??")="^D HELP3B^XUTMRJD1"
"RTN","XUTMRJD",72,0)
 D ^DIR
"RTN","XUTMRJD",73,0)
 I $D(DTOUT) W "     ** TIME-OUT **",$C(7)
"RTN","XUTMRJD",74,0)
 I $D(DUOUT) W "     ** ^-ESCAPE **"
"RTN","XUTMRJD",75,0)
 I $D(DIRUT) S ZTOUT=1 Q
"RTN","XUTMRJD",76,0)
 I 'Y S ZTOOPS=1
"RTN","XUTMRJD",77,0)
 Q
"RTN","XUTMRJD",78,0)
DISPLAY ;
"RTN","XUTMRJD",79,0)
 ;MAIN--display the selected tasks
"RTN","XUTMRJD",80,0)
 N XUTMT,ZTSK
"RTN","XUTMRJD",81,0)
 S XUTMT(0)="R4"
"RTN","XUTMRJD",82,0)
 S XUTMT("NODE")="^TMP($J,""XUTMRJD"","
"RTN","XUTMRJD",83,0)
 S XUTMT("NONE")="There is an error in this program."
"RTN","XUTMRJD",84,0)
 W ! D ^XUTMT
"RTN","XUTMRJD",85,0)
 Q
"RTN","XUTMRJD",86,0)
PROMPT4 ;
"RTN","XUTMRJD",87,0)
 ;MAIN--ask system manager to confirm choice of tasks
"RTN","XUTMRJD",88,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","XUTMRJD",89,0)
 W ! S DIR(0)="Y",DIR("A")="Are you sure you want to remove"
"RTN","XUTMRJD",90,0)
 S DIR("A")=DIR("A")_$S(ZTCOUNT=1:" this task",1:" these tasks")_" from the list of running tasks"
"RTN","XUTMRJD",91,0)
P41 ;
"RTN","XUTMRJD",92,0)
 S DIR("B")="No",DIR("?")="^D HELP4A^XUTMRJD1",DIR("??")="^D HELP4B^XUTMRJD1"
"RTN","XUTMRJD",93,0)
 D ^DIR
"RTN","XUTMRJD",94,0)
 I $D(DTOUT) W "     ** TIME-OUT **",$C(7)
"RTN","XUTMRJD",95,0)
 I $D(DUOUT) W "     ** ^-ESCAPE **"
"RTN","XUTMRJD",96,0)
 I $D(DIRUT) S ZTOUT=1 Q
"RTN","XUTMRJD",97,0)
 S ZTOOPS='Y I Y Q
"RTN","XUTMRJD",98,0)
 W !!?5,"The selected task",ZTPLURAL," will remain listed as running.",!
"RTN","XUTMRJD",99,0)
 Q
"RTN","XUTMRJD",100,0)
REMOVE ;
"RTN","XUTMRJD",101,0)
 ;MAIN--remove selected tasks from Task List
"RTN","XUTMRJD",102,0)
 N ZTSK
"RTN","XUTMRJD",103,0)
 W !!,"Removing selected task",ZTPLURAL,"..."
"RTN","XUTMRJD",104,0)
 L +^%ZTSCH("TASK")
"RTN","XUTMRJD",105,0)
 S ZTSK=0 F  S ZTSK=$O(^TMP($J,"XUTMRJD",ZTSK)) Q:'ZTSK  D
"RTN","XUTMRJD",106,0)
 .K ^%ZTSCH("TASK",ZTSK)
"RTN","XUTMRJD",107,0)
 .W !?5,"...",ZTSK," removed."
"RTN","XUTMRJD",108,0)
 L -^%ZTSCH("TASK")
"RTN","XUTMRJD",109,0)
 W !?5,"...finished!"
"RTN","XUTMRJD",110,0)
 Q
"RTN","XUTMRJD",111,0)
ASK ;Call from the option
"RTN","XUTMRJD",112,0)
 I '$O(^%ZTSCH("TASK",0)) Q
"RTN","XUTMRJD",113,0)
 N ZTCOUNT,ZTENV,ZTKEY,ZTNAME,ZTPLURAL,ZTSK,ZTOOPS,ZTOUT,XUTMUCI
"RTN","XUTMRJD",114,0)
 S (ZTOOPS,ZTOUT)=0
"RTN","XUTMRJD",115,0)
 K ^TMP($J,"XUTMRJD")
"RTN","XUTMRJD",116,0)
 D ENV^XUTMUTL Q:'$D(ZTENV)
"RTN","XUTMRJD",117,0)
 W !,"This will allow you to remove entries from TaskMans list of",!,"running tasks that you believe are not running."
"RTN","XUTMRJD",118,0)
 W !,"The questions will be asked assuming you have just killed a task"
"RTN","XUTMRJD",119,0)
 G M2
"RTN","ZIS1")
0^24^B19253055
"RTN","ZIS1",1,0)
%ZIS1 ;SFISC/AC,RWF -- DEVICE HANDLER (DEVICE INPUT) 3/16/89  12:50 PM;3/30/89  9:58 AM ;02/11/97  10:59
"RTN","ZIS1",2,0)
 ;;8.0;KERNEL;**18,49**;JUL 10, 1995
"RTN","ZIS1",3,0)
MAIN I '$D(IOP),$D(^%ZIS(1,%E,0)),'$P(^(0),"^",3) S %A=%H,%Z=^(0) D L2^%ZIS2 G EXIT
"RTN","ZIS1",4,0)
L1 I '$D(IOP),$D(IO("Q")),POP D AQUE^%ZIS3 K:%=2 IO("Q") S:%=2 %ZISB=$S(%IS'["N":2,1:0) I %=-1 S POP=1 G EXIT ;Main Loop
"RTN","ZIS1",5,0)
 S %E=%H,POP=0
"RTN","ZIS1",6,0)
 I %IS'["Q",$D(XQNOGO) S POP=1 W:'$D(IOP) !,*7,"OUTPUT IS NEVER ALLOWED FOR THIS OPTION" G EXIT
"RTN","ZIS1",7,0)
 D IOP:$D(IOP),R:'$D(IOP)
"RTN","ZIS1",8,0)
 G EXIT:$D(DTOUT)!$D(DUOUT)!(POP&$D(IOP)),L1:POP&'$D(IOP)
"RTN","ZIS1",9,0)
 D LKUP I %A'>0 S POP=1 D:'$D(DUOUT) MSG1 K DUOUT
"RTN","ZIS1",10,0)
 I POP G EXIT:$D(IOP),L1:'$D(IOP)
"RTN","ZIS1",11,0)
 I '$D(^%ZIS(1,%A,0)) D MSG1 K %ZISIOS S POP=1
"RTN","ZIS1",12,0)
 I POP G EXIT:$D(IOP),L1:'$D(IOP)
"RTN","ZIS1",13,0)
 S %E=%A,%Z=^%ZIS(1,%A,0),%Z1=$G(^(1))
"RTN","ZIS1",14,0)
 I $D(%ZIS("S")) N Y S Y=%E D XS^ZISX S:'$T POP=1 G G:POP
"RTN","ZIS1",15,0)
 W:'$D(IOP)&($P(%Z,"^",2)'=$I)&($P(%Z1,"^")]"") "  ",$P(%Z1,"^") D L2^%ZIS2
"RTN","ZIS1",16,0)
G G L1:POP&'$D(IOP)&'($D(DTOUT)!$D(DUOUT))
"RTN","ZIS1",17,0)
EXIT I $D(IO)#2,IO]"",$D(IO(1,IO))#2,$D(%Z1),$P(%Z1,"^",11) S IO(1,IO,"NOFF")=1
"RTN","ZIS1",18,0)
 G SETVAR:'POP!(%IS["T"),KILVAR
"RTN","ZIS1",19,0)
IOP S (%ZISVT,%X)=IOP S:%X'?1.UNP %X=$$UP(%X) I %X'="Q" D SETQ Q  ;Request From IOP
"RTN","ZIS1",20,0)
 S %IS=%IS_%X K IOP W %X D SETQ Q
"RTN","ZIS1",21,0)
R I %IS["Q",$D(XQNOGO) W !,*7,"AT THIS TIME, OUTPUT MUST BE QUEUED"
"RTN","ZIS1",22,0)
 S %A=$S($D(%IS("B")):%IS("B"),1:"HOME") ;Request From Read At Device Prompt
"RTN","ZIS1",23,0)
 I %IS["P",%A="HOME",$D(^%ZIS(1,%E,99)),$D(^%ZIS(1,+^(99),0)) S %A=$P(^(0),"^",1)
"RTN","ZIS1",24,0)
RD W !,$S($D(%IS("A")):%IS("A"),1:"DEVICE: ") W:%A]"" %A,"// " D SBR S:%X="" %X=%A S %ZISVT=%X
"RTN","ZIS1",25,0)
 I %X?2"?".E D EN2^%ZIS7 G R
"RTN","ZIS1",26,0)
 I %X?1"?".E D EN1^%ZIS7 G R
"RTN","ZIS1",27,0)
 I $D(DTOUT)!$D(DUOUT)!(%X'?.ANP)!($L($P(%X,";"))>31) S:%IS["T" IO="" S POP=1 Q
"RTN","ZIS1",28,0)
 S:%X'?1.UNP %X=$$UP(%X) D SETQ G R:$T Q
"RTN","ZIS1",29,0)
SETQ S %Y=$P(%X,";",2,9),%X=$P(%X,";",1) S:$L(";"_%Y,";/")=2 IO("P")=$P(";"_%Y,";/",2)
"RTN","ZIS1",30,0)
 I %IS["Q",%X="Q" S %X=%Y,%ZISVT=$P(%ZISVT,";",2,9),%ZISB=0,IO("Q")=1,%IS("A")="DEVICE: " S:$D(IOP) %Y=$P(%X,";",2,9),%X=$P(%X,";",1)
"RTN","ZIS1",31,0)
 I $T,'$D(IOP) W "UEUE TO PRINT ON" Q  ; Return $T value
"RTN","ZIS1",32,0)
 Q
"RTN","ZIS1",33,0)
LKUP S %ZISMY=$P(%ZISVT,";",2,999),%ZISVT=$P(%ZISVT,";")
"RTN","ZIS1",34,0)
 I %X="H" W:'$D(IOP) "ome" S %X=0
"RTN","ZIS1",35,0)
 I 0[%X!(%X="HOME")!(%X=$I) S %A=%H Q
"RTN","ZIS1",36,0)
 I $E(%ZISVT)="`",$D(IOP) S %A=+$E(%ZISVT,2,999) I $G(^%ZIS(1,%A,0))]"" Q
"RTN","ZIS1",37,0)
 S %A=0 I "P"[%X Q:$D(IOP)&('$D(^%ZIS(1,%E,99)))  I $D(^%ZIS(1,%E,99)) S %A=+^(99) Q
"RTN","ZIS1",38,0)
 I %X=" ",$D(DUZ)#2,$D(^DISV(+DUZ,"^%ZIS(1,")) S %A=^("^%ZIS(1,") Q
"RTN","ZIS1",39,0)
 S %A=+$O(^%ZIS(1,"B",%ZISVT,0)) Q:%A>0  ;mixed case lookup
"RTN","ZIS1",40,0)
 I %X'=%ZISVT S %A=+$O(^%ZIS(1,"B",%X,0)) Q:%A>0  ;uppercase lookup
"RTN","ZIS1",41,0)
 D VTLKUP^%ZIS S %A=%E Q:%A>0  ;mixed case lookup
"RTN","ZIS1",42,0)
 I %X'=%ZISVT S %ZISVT=%X D VTLKUP^%ZIS S %A=%E Q:%A>0  ;uppercase lookup
"RTN","ZIS1",43,0)
 S %XX=%X D 1^%ZIS5 S %A=+%YY Q
"RTN","ZIS1",44,0)
SBR K DFOUT,DTOUT,DUOUT R %X:$S($D(DTIME)#2:DTIME,1:300) E  W *7 S DTOUT=1 Q
"RTN","ZIS1",45,0)
 S:%X="."!(%X="^") DUOUT=1,%X="" Q
"RTN","ZIS1",46,0)
LC S %X=$$UP(%X)
"RTN","ZIS1",47,0)
 Q
"RTN","ZIS1",48,0)
LOW(%)  Q $TR(%,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","ZIS1",49,0)
UP(%)   Q $TR(%,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ZIS1",50,0)
YN W "? ",$P("YES// ^NO// ",U,%)
"RTN","ZIS1",51,0)
RYN R %X:$S($D(DTIME):DTIME,$D(%ZISDTIM):%ZISDTIM,1:300) E  S DTOUT=1,%X=U W *7
"RTN","ZIS1",52,0)
 S:%X]""!'% %=$A(%X),%=$S(%=89:1,%=121:1,%=78:2,%=110:2,%=94:-1,1:0)
"RTN","ZIS1",53,0)
 I '%,%X'?."?" W *7,"??",!?4,"ANSWER 'YES' OR 'NO': " G RYN
"RTN","ZIS1",54,0)
 W:$X>73 ! W $P("  (YES)^  (NO)",U,%) Q
"RTN","ZIS1",55,0)
MSG1 I '$D(IOP) W ?20,*7,"  [DEVICE DOES NOT EXIST]"
"RTN","ZIS1",56,0)
 Q
"RTN","ZIS1",57,0)
SETVAR S:'$D(IO)#2 IO="" G KILVAR:%IS["T"&(IO="")
"RTN","ZIS1",58,0)
 S:IO'=IO(0)&($D(DUZ)#2) ^DISV(+DUZ,"^%ZIS(1,")=%E
"RTN","ZIS1",59,0)
 S ION=$P(%Z,"^",1),IOM=+%Z91,IOF=$P(%Z91,"^",2),IOSL=$P(%Z91,"^",3),IOBS=$P(%Z91,"^",4),IOXY=$P(%Z91,"^",5)
"RTN","ZIS1",60,0)
 S IOT=%ZTYPE,IOST(0)=%ZISIOST(0),IOST=%ZISIOST,IOPAR=%ZISOPAR,IOUPAR=%ZISUPAR,IOHG=%ZISHG
"RTN","ZIS1",61,0)
 ;
"RTN","ZIS1",62,0)
 K IOCPU S:$D(%ZISCPU) IOCPU=%ZISCPU G KIL
"RTN","ZIS1",63,0)
KILVAR S:0&(%IS'["T") IO="" S:'$D(IOF) IOF="#" S:'$D(IOST(0)) IOST(0)=0 F %I="IO","ION","IOM","IOBS","IOSL","IOST" S:$D(@%I)[0 @%I=""
"RTN","ZIS1",64,0)
 K IO("HFSIO"),IO("OPEN") I $D(%ZISCPU) S:'$D(IOCPU) IOCPU=%ZISCPU
"RTN","ZIS1",65,0)
KIL S:'POP IOS=%ZISIOS I POP K:%IS'["T" %ZISIOS I %IS["T" K IOS S:$D(%ZISIOS) IOS=%ZISIOS
"RTN","ZIS1",66,0)
 S:%IS["T" IO("T")=1 K %ZIS,%IS,%A,%E,%H,%ZISOS,%ZISV,IOP
"RTN","ZIS1",67,0)
K2 K %ZISCHK,%ZISCPU,%ZISI,%ZISR,%ZISVT,%ZISB,%I,%X,%Y,%Z,%Z1,%Z91,%Z95,%ZTYPE,%ZTIME,%ZISX,ZISI,%ZISHGL,%ZISHP,%ZISIO,%ZISIOS,%ZISIOM,%ZISIOF,%ZISIOSL,%ZISIOBS,%ZISIOST,%ZISIOST(0),%ZISTO,%ZISTP,%ZISHG,%ZISSIO,%ZISOPEN,%ZISOPAR,%ZISUPAR
"RTN","ZIS1",68,0)
 K %ZISMY,%ZISQUIT
"RTN","ZIS1",69,0)
 Q
"RTN","ZIS4MSM")
0^17^B15650959
"RTN","ZIS4MSM",1,0)
%ZIS4 ;SF/GFT,RWF,MVB - DEVICE HANDLER SPOOL SPECIFIC CODE(MSM) ;02/11/97  11:02
"RTN","ZIS4MSM",2,0)
 ;;8.0;KERNEL;**23,36,49**;JUL 03, 1995
"RTN","ZIS4MSM",3,0)
 ;
"RTN","ZIS4MSM",4,0)
OPEN G OPN2:$D(IO(1,IO))
"RTN","ZIS4MSM",5,0)
 S POP=0 D OP1 S:'POP IO(1,IO)="" G NOPEN:'$D(IO(1,IO))
"RTN","ZIS4MSM",6,0)
OPN2 I $D(%ZISHP),'$D(IOP) W !,*7," Routing to device "_$P(^%ZIS(1,%E,0),"^",1)_$S($D(^(1)):" "_$P(^(1),"^",1)_" ",1:"")
"RTN","ZIS4MSM",7,0)
 Q
"RTN","ZIS4MSM",8,0)
NOPEN I %IS'["D",$D(%ZISHP)!(%ZISHG]"") S POP=1 Q
"RTN","ZIS4MSM",9,0)
 I '$D(IOP) W *7,"  [BUSY]" W "  ...  RETRY" S %=2,U="^" D YN^%ZIS1 G OPEN:%=1
"RTN","ZIS4MSM",10,0)
 S POP=1 Q
"RTN","ZIS4MSM",11,0)
 Q
"RTN","ZIS4MSM",12,0)
OP1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",13,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4MSM",14,0)
 O IO::%ZISTO S:'$T POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4MSM",15,0)
OPNERR S POP=1,IO("ERROR")=$ZE,IO("LASTERR")=$ZE Q
"RTN","ZIS4MSM",16,0)
 ;
"RTN","ZIS4MSM",17,0)
O I $P($ZV,"Version ",2)'<3 D:%IS["L" ZIO
"RTN","ZIS4MSM",18,0)
 ;D:$D(%ZISIOS) ZISLPC^%ZIS Q:'%ZISB  ;No longer called in Kernel v8.
"RTN","ZIS4MSM",19,0)
OPRTPORT I $D(IO("S")),$D(^%ZIS(2,IO("S"),10)),^(10)]"" U IO(0) D X10^ZISX
"RTN","ZIS4MSM",20,0)
OPAR I $D(IOP),%ZTYPE="HFS",$D(%IS("HFSIO")),$D(%IS("IOPAR")),%IS("HFSIO")]"" S IO=%IS("HFSIO"),%ZISOPAR=%IS("IOPAR")
"RTN","ZIS4MSM",21,0)
 S %A=$S(%ZISOPAR]"":%ZISOPAR,%ZTYPE["TRM":+%Z91,1:"")
"RTN","ZIS4MSM",22,0)
 S %A=%A_$S(%A["):":"",%ZTYPE["OTH"&($P(%ZTIME,"^",3)="n"):"",1:":"_%ZISTO),%A=""""_IO_""""_$E(":",%A]"")_%A
"RTN","ZIS4MSM",23,0)
 D O1 I POP W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4MSM",24,0)
 S IO(1,IO)=""
"RTN","ZIS4MSM",25,0)
 I %ZTYPE="HFS" D  Q:POP
"RTN","ZIS4MSM",26,0)
 .N % S %=$I
"RTN","ZIS4MSM",27,0)
 .U IO S:$ZA<0 POP=1
"RTN","ZIS4MSM",28,0)
 .U:'$D(ZTQUEUED) % I POP C:IO]"" IO K:IO]"" IO(1,IO)
"RTN","ZIS4MSM",29,0)
 .I POP,'$D(IOP),'$D(ZTQUEUED) W !,?5,*7,"[FILE NOT FOUND]" Q
"RTN","ZIS4MSM",30,0)
 N DX,DY S (DX,DY)=0
"RTN","ZIS4MSM",31,0)
 U IO X:$D(^%ZOSF("XY"))&'(IO=IO(0)&'$D(ZTQUEUED)&'$D(IO("S"))) ^("XY")
"RTN","ZIS4MSM",32,0)
 I %ZISUPAR]"" S %A1=""""_IO_""":"_%ZISUPAR U @%A1
"RTN","ZIS4MSM",33,0)
 U:%IS'[0 IO(0)
"RTN","ZIS4MSM",34,0)
 G OXECUTE^%ZIS6
"RTN","ZIS4MSM",35,0)
 ;
"RTN","ZIS4MSM",36,0)
O1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",37,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4MSM",38,0)
 O @%A S:'$T&(%A?.E1":".N) POP=1 L:$D(%ZISLOCK) -@%ZISLOCK
"RTN","ZIS4MSM",39,0)
 S IO("ERROR")="" Q
"RTN","ZIS4MSM",40,0)
 ;
"RTN","ZIS4MSM",41,0)
ZIO N % S (IO("ZIO"),%)=$ZDEV($I),%=$S(%?1.3N1P.E:$TR(%,"~",":"),1:%)
"RTN","ZIS4MSM",42,0)
 S:(%?1.3N1P1.3N1P.E)&'$D(IO("IP")) IO("IP")=$TR(%,"~",":") S:(%?1A.ANP1"~"1.4N)&'$D(IO("CLNM")) IO("CLNM")=$TR($$LOW^%ZIS1(%),"~",":")
"RTN","ZIS4MSM",43,0)
 Q
"RTN","ZIS4MSM",44,0)
 ;
"RTN","ZIS4MSM",45,0)
SPOOL ;%ZDA=pointer to ^XMB(3.51, %ZFN=spool file name.
"RTN","ZIS4MSM",46,0)
 I $D(ZISDA) W:'$D(IOP) !?5,*7,"You may not Spool the printing of a Spool document" G N
"RTN","ZIS4MSM",47,0)
 I $D(DUZ)[0 W:'$D(IOP) !,"Must be a valid user." G N
"RTN","ZIS4MSM",48,0)
 S ZOSFV=($P($ZV,"Version ",2)'<2)
"RTN","ZIS4MSM",49,0)
R S %ZY=-1 D NEWDOC^ZISPL1 G N:%ZY'>0 S %ZDA=+%ZY,%ZFN=$P(%ZY(0),U,2),IO("DOC")=$P(%ZY(0),U,1) I '%ZISB!$D(IO("Q")) S:'ZOSFV IO=51 G OK
"RTN","ZIS4MSM",50,0)
 I '$P(%ZY,"^",3),%ZFN D SPL3 G N:'%ZFN,DOC
"RTN","ZIS4MSM",51,0)
 S %ZFN=-1 D SPL2 G:%ZFN<0 N S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,"C",%ZFN,%ZDA)=""
"RTN","ZIS4MSM",52,0)
DOC S IO("SPOOL")=%ZDA,^XUTL("XQ",$J,"SPOOL")=%ZDA,IOF="#"
"RTN","ZIS4MSM",53,0)
 I $D(^%ZIS(1,%ZISIOS,1)),$P(^(1),"^",8),$O(^("SPL",0)) S ^XUTL("XQ",$J,"ADSPL")=%ZISIOS,ZISPLAD=%ZISIOS
"RTN","ZIS4MSM",54,0)
OK K %ZDA,%ZFN Q
"RTN","ZIS4MSM",55,0)
N K %ZDA,%ZFN,IO("DOC") S POP=1 Q
"RTN","ZIS4MSM",56,0)
 ;
"RTN","ZIS4MSM",57,0)
SPL2 O 2:1 G SPL5:$ZA<0,SPL5:$ZC S %ZFN=$ZA#256 S IO(1,2)="",IO(1,2,"%ZFN")=%ZFN Q
"RTN","ZIS4MSM",58,0)
 ;
"RTN","ZIS4MSM",59,0)
SPL3 Q:$D(IO(1,2))#2  O 2:%ZFN+256 G:$ZA<0 SPL5:$ZA<0,SPL5:$ZC S IO(1,2)="",IO(1,2,"%ZFN")=%ZFN Q
"RTN","ZIS4MSM",60,0)
SPL4 E  G SPL5
"RTN","ZIS4MSM",61,0)
 ;U IO S %ZA=$ZA U:%IS'[0 IO(0) I %ZA<0 G SPL5
"RTN","ZIS4MSM",62,0)
 Q
"RTN","ZIS4MSM",63,0)
SPL5 W:'$D(IOP)&'$D(ZTQUEUED) !?5,*7,"Couldn't open the spool file." S %ZFN=-1 Q
"RTN","ZIS4MSM",64,0)
 ;
"RTN","ZIS4MSM",65,0)
CLOSE N %Z1 S ZOSFV=($P($ZV,"Version ",2)'<2)
"RTN","ZIS4MSM",66,0)
 C 2 K IO(1,2)
"RTN","ZIS4MSM",67,0)
 D FILE^ZISPL1 I %ZDA'>0 K ZISPLAD Q
"RTN","ZIS4MSM",68,0)
 S %Z1=+$G(^XTV(8989.3,1,"SPL"))
"RTN","ZIS4MSM",69,0)
 S IO=2,%ZFN=$P(%ZS,"^",2) D SPL3 Q:%ZFN'>0  U IO S %ZCR=$C(13),%Y=""
"RTN","ZIS4MSM",70,0)
 G V2CL1^%ZOSV
"RTN","ZIS4MSM",71,0)
 Q  ;Send error up
"RTN","ZIS4MSM",72,0)
CL2 I %Z1<(%+1) S %=%+1,^XMBS(3.519,XS,2,%,0)="*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***",$P(^XMB(3.51,%ZDA,0),"^",11)=1 Q
"RTN","ZIS4MSM",73,0)
 I %2[$C(12) S %=%+1,^XMBS(3.519,XMZ,2,%,0)="|TOP|"
"RTN","ZIS4MSM",74,0)
 S %=%+1,^XMBS(3.519,XMZ,2,%,0)=%2 Q
"RTN","ZIS4MSM",75,0)
 ;
"RTN","ZIS4MSM",76,0)
HFS G HFS^%ZISF
"RTN","ZIS4MSM",77,0)
REWMT(IO,IOPAR) ;Rewind Magtape
"RTN","ZIS4MSM",78,0)
 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",79,0)
 U IO W *5
"RTN","ZIS4MSM",80,0)
 Q 1
"RTN","ZIS4MSM",81,0)
REWSDP(IO,IOPAR) ;Rewind Sequential Block Processor
"RTN","ZIS4MSM",82,0)
 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",83,0)
 U IO:IOPAR
"RTN","ZIS4MSM",84,0)
 Q 1
"RTN","ZIS4MSM",85,0)
REWHFS(IO,IOPAR) ;Rewind Host File.
"RTN","ZIS4MSM",86,0)
REW1 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",87,0)
 U IO:(::0)
"RTN","ZIS4MSM",88,0)
 Q 1
"RTN","ZIS4MSM",89,0)
REWERR ;Error encountered.
"RTN","ZIS4MSM",90,0)
 Q 0
"RTN","ZIS4VXD")
0^16^B17418105
"RTN","ZIS4VXD",1,0)
%ZIS4 ;SFISC/GFT,RWF,MVB - DEVICE HANDLER SPOOL SPECIFIC CODE(VAX DSM) ;02/05/97  09:31
"RTN","ZIS4VXD",2,0)
 ;;8.0;KERNEL;**23,36,49**;JUL 03, 1995
"RTN","ZIS4VXD",3,0)
 ;
"RTN","ZIS4VXD",4,0)
OPEN G OPN2:$D(IO(1,IO))
"RTN","ZIS4VXD",5,0)
 S POP=0 D OP1 S:'POP IO(1,IO)="" G NOPEN:'$D(IO(1,IO))
"RTN","ZIS4VXD",6,0)
OPN2 I $D(%ZISHP),'$D(IOP) W !,*7," Routing to device "_$P(^%ZIS(1,%E,0),"^",1)_$S($D(^(1)):" "_$P(^(1),"^",1)_" ",1:"")
"RTN","ZIS4VXD",7,0)
 Q
"RTN","ZIS4VXD",8,0)
NOPEN I %IS'["D",$D(%ZISHP)!(%ZISHG]"") S POP=1 Q
"RTN","ZIS4VXD",9,0)
 I '$D(IOP) W *7,"  [BUSY]" W "  ...  RETRY" S %=2,U="^" D YN^%ZIS1 G OPEN:%=1
"RTN","ZIS4VXD",10,0)
 S POP=1 Q
"RTN","ZIS4VXD",11,0)
 Q
"RTN","ZIS4VXD",12,0)
OP1 S $ZT="OPNERR^%ZIS4",$ZE=""
"RTN","ZIS4VXD",13,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4VXD",14,0)
 O IO::%ZISTO S:'$T POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4VXD",15,0)
OPNERR S POP=1,IO("LASTERR")=$G(IO("ERROR")),IO("ERROR")=$ZE,$EC="" Q
"RTN","ZIS4VXD",16,0)
 ;
"RTN","ZIS4VXD",17,0)
O D:%IS["L" ZIO
"RTN","ZIS4VXD",18,0)
 ;D:$D(%ZISIOS) ZISLPC^%ZIS Q:'%ZISB  ;No longer called in Kernel v8.
"RTN","ZIS4VXD",19,0)
LCKGBL ;Lock Global
"RTN","ZIS4VXD",20,0)
 I %ZTYPE="CHAN" N % S %=$G(^%ZIS(1,+%E,"GBL")) I %]"" L @("+^"_%_":0") S:'$T POP=1 I POP W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4VXD",21,0)
OPRTPORT I $D(IO("S")),$D(^%ZIS(2,IO("S"),10)),^(10)]"" U IO(0) D X10^ZISX
"RTN","ZIS4VXD",22,0)
OPAR I $D(IOP),%ZTYPE="HFS",$D(%IS("HFSIO")),$D(%IS("IOPAR")),%IS("HFSIO")]"" S IO=%IS("HFSIO"),%ZISOPAR=%IS("IOPAR")
"RTN","ZIS4VXD",23,0)
 I %ZTYPE="CHAN",IO["::""TASK="!(IO["SYS$NET") D ODECNET Q:POP  G OXECUTE^%ZIS6
"RTN","ZIS4VXD",24,0)
 S %A=%ZISOPAR_$S(%ZISOPAR["):":"",%ZTYPE["CHAN"&($P(%ZTIME,"^",3)="n"):"",1:":"_%ZISTO)
"RTN","ZIS4VXD",25,0)
 N % S %(IO)="",%=$P($P($NA(%(IO)),"(",2),")")
"RTN","ZIS4VXD",26,0)
 S %A=%_$E(":",%A]"")_%A
"RTN","ZIS4VXD",27,0)
 D O1 I POP D  Q
"RTN","ZIS4VXD",28,0)
 .I %ZTYPE="HFS",'$D(IOP),$G(IO("ERROR"))["file not found" W !,?5,*7,"[FILE NOT FOUND]" Q
"RTN","ZIS4VXD",29,0)
 .W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4VXD",30,0)
 S IO(1,IO)="" U IO S:'(IO=IO(0)&'$D(ZTQUEUED)&'$D(IO("S"))) $X=0,$Y=0 I %ZTYPE["TRM" U IO:(WIDTH=+%Z91)
"RTN","ZIS4VXD",31,0)
 I %ZISUPAR]"" S %A1=""""_IO_""":"_%ZISUPAR U @%A1
"RTN","ZIS4VXD",32,0)
 U:%IS'[0 IO(0) G OXECUTE^%ZIS6
"RTN","ZIS4VXD",33,0)
 ;
"RTN","ZIS4VXD",34,0)
O1 S $ZT="OPNERR^%ZIS4"
"RTN","ZIS4VXD",35,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4VXD",36,0)
 O @%A S:'$T&(%A?.E1":".N) POP=1 L:$D(%ZISLOCK) -@%ZISLOCK
"RTN","ZIS4VXD",37,0)
 S IO("ERROR")="" Q
"RTN","ZIS4VXD",38,0)
 ;
"RTN","ZIS4VXD",39,0)
ODECNET ;OPEN DECNET CHANNEL
"RTN","ZIS4VXD",40,0)
 S $ZT="OPNERR^%ZIS4"
"RTN","ZIS4VXD",41,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60 O IO L:$D(%ZISLOCK) -@%ZISLOCK
"RTN","ZIS4VXD",42,0)
 S IO("ERROR")=""
"RTN","ZIS4VXD",43,0)
 I IO="SYS$NET",$I="SYS$INPUT:;" S IO(0)=IO U IO Q
"RTN","ZIS4VXD",44,0)
 Q
"RTN","ZIS4VXD",45,0)
ZIO N % S %=$ZIO,%=$S(%["Host:":$P($P(%,"Host: ",2)," ")_":"_$P(%,"Port: ",2),1:%) S:%[" " %=$TR(%," ")
"RTN","ZIS4VXD",46,0)
 S IO("ZIO")=% S:($ZIO["Host:")!'$D(IO("IP")) IO("IP")=$P(%,":")
"RTN","ZIS4VXD",47,0)
 Q
"RTN","ZIS4VXD",48,0)
 ;
"RTN","ZIS4VXD",49,0)
SPOOL ;%ZDA=pointer to ^XMB(3.51, %ZFN=spool file name.
"RTN","ZIS4VXD",50,0)
 I $D(ZISDA) W:'$D(IOP) !?5,*7,"You may not Spool the printing of a Spool document" G N
"RTN","ZIS4VXD",51,0)
 I $D(DUZ)[0 W:'$D(IOP) !,"Must be a valid user." G N
"RTN","ZIS4VXD",52,0)
R S %ZY=-1 D NEWDOC^ZISPL1 G N:%ZY'>0 S %ZDA=+%ZY,%ZFN=$P(%ZY(0),U,2),IO("DOC")=$P(%ZY(0),U,1) G OK:$D(IO("Q"))
"RTN","ZIS4VXD",53,0)
 G:'%ZISB OK I '$P(%ZY,"^",3),%ZFN]"" D SPL3 G N:%ZFN']"",DOC
"RTN","ZIS4VXD",54,0)
 S %ZFN=IO_"SPOOL_no_"_%ZDA_".TMP" D SPL2 G:%ZFN']"" N S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,"C",%ZFN,%ZDA)=""
"RTN","ZIS4VXD",55,0)
DOC S IO=%ZFN,IO("SPOOL")=%ZDA,^XUTL("XQ",$J,"SPOOL")=%ZDA,IOF="#"
"RTN","ZIS4VXD",56,0)
 I $D(^%ZIS(1,%ZISIOS,1)),$P(^(1),"^",8),$O(^("SPL",0)) S ^XUTL("XQ",$J,"ADSPL")=%ZISIOS,ZISPLAD=%ZISIOS
"RTN","ZIS4VXD",57,0)
OK K %ZDA,%ZFN Q
"RTN","ZIS4VXD",58,0)
N K %ZDA,%ZFN,IO("DOC") S POP=1 Q
"RTN","ZIS4VXD",59,0)
SPL2 O %ZFN:(NEWVERSION:PROT=W:RWD) G:$ZA<0 SPL4 S IO(1,%ZFN)="" Q
"RTN","ZIS4VXD",60,0)
SPL3 N X S X="SPL4^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",61,0)
 O %ZFN:READONLY:1 S:'$T ZISPLQ=1 G:$ZA<0!('$T) SPL4 S IO(1,%ZFN)="" Q
"RTN","ZIS4VXD",62,0)
SPL4 W:'$D(IOP)&'$D(ZTQUEUED) !?5,*7,"Couldn't open the spool file." S %ZFN="" Q
"RTN","ZIS4VXD",63,0)
CLOSE N %Z1 C:IO]"" IO K:IO]"" IO(1,IO) D FILE^ZISPL1 I %ZDA'>0 K ZISPLAD Q
"RTN","ZIS4VXD",64,0)
 S %ZFN=$P(%ZS,"^",2) D SPL3 Q:%ZFN']""  U %ZFN S %ZCR=$C(13),%Y="",$ZT="SPLEOF^%ZIS4"
"RTN","ZIS4VXD",65,0)
 S %Z1=+$G(^XTV(8989.3,1,"SPL"))
"RTN","ZIS4VXD",66,0)
 F %=0:0 R %X#255:5 Q:$ZA<0  S %2=%X D CL2 G:%Z1<% SPLEX
"RTN","ZIS4VXD",67,0)
SPLEOF I $ZE'["ENDO" ZQ  ;Send error up
"RTN","ZIS4VXD",68,0)
SPLEX C %ZFN:DELETE K:%ZFN]"" IO(1,%ZFN) D CLOSE^ZISPL1 K %Y,%X,%1,%ZFN Q
"RTN","ZIS4VXD",69,0)
 ;
"RTN","ZIS4VXD",70,0)
CL2 S %=%+1 I %Z1<% S ^XMBS(3.519,XS,2,%,0)="*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***",$P(^XMB(3.51,%ZDA,0),"^",11)=1 Q
"RTN","ZIS4VXD",71,0)
 I %2[$C(12) S ^XMBS(3.519,XS,2,%,0)="|TOP|" Q
"RTN","ZIS4VXD",72,0)
 S ^XMBS(3.519,XS,2,%,0)=%2 Q
"RTN","ZIS4VXD",73,0)
 ;
"RTN","ZIS4VXD",74,0)
HFS G HFS^%ZISF
"RTN","ZIS4VXD",75,0)
REWMT(IO,IOPAR) ;Rewind Magtape
"RTN","ZIS4VXD",76,0)
 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",77,0)
 U IO W *5
"RTN","ZIS4VXD",78,0)
 Q 1
"RTN","ZIS4VXD",79,0)
REWSDP(IO,IOPAR) ;Rewind SDP
"RTN","ZIS4VXD",80,0)
 G REW1
"RTN","ZIS4VXD",81,0)
REWHFS(IO,IOPAR) ;Rewind Host File.
"RTN","ZIS4VXD",82,0)
REW1 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",83,0)
 U IO:DISCONNECT
"RTN","ZIS4VXD",84,0)
 Q 1
"RTN","ZIS4VXD",85,0)
REWERR ;Error encountered
"RTN","ZIS4VXD",86,0)
 Q 0
"RTN","ZIS6")
0^6^B16912186
"RTN","ZIS6",1,0)
%ZIS6 ;SFISC/AC - DEVICE HANDLER -- RESOURCES ;11/15/96  11:35
"RTN","ZIS6",2,0)
 ;;8.0;KERNEL;**24,49**;JUL 10, 1995
"RTN","ZIS6",3,0)
 ;
"RTN","ZIS6",4,0)
OXECUTE I $D(^%ZIS(2,%ZISIOST(0),2))=1 S %Y=^(2) D 2
"RTN","ZIS6",5,0)
ANSBAK I $D(^%ZIS(2,%ZISIOST(0),102)) S %Y=^(102) D 2 E  S POP=1 W:'$D(IOP) *7,"[NOT ON LINE]" C:%ZISB IO K IO(1,IO) Q
"RTN","ZIS6",6,0)
 I $D(%ZISMTR) X ^%ZOSF("MAGTAPE") U IO W:$D(%MT("REW")) @%MT("REW") U IO(0) K %MT
"RTN","ZIS6",7,0)
 Q:'$D(IO("P"))  I $F(IO("P"),"B"),$D(^%ZIS(2,%ZISIOST(0),7)) S %Y=$P(^(7),"^",1) I %Y]"" U IO W @%Y U:%IS'[0 IO(0)
"RTN","ZIS6",8,0)
 S %Y=$F(IO("P"),"P") G QLTY:'%Y S %Y=+$E(IO("P"),%Y,99),%X=$S(%Y=16:12.1,%Y=10!(%Y=12):5,1:"") G QLTY:'%X
"RTN","ZIS6",9,0)
 S %Y=$S($D(^%ZIS(2,%ZISIOST(0),%X)):$P(^(%X),"^",$S(%Y=12:2,1:1)),1:"")
"RTN","ZIS6",10,0)
 I %Y]"" U IO W @%Y U:%IS'[0 IO(0)
"RTN","ZIS6",11,0)
QLTY S %Y=$F(IO("P"),"Q") Q:'%Y  S %Y=+$E(IO("P"),%Y,99),%X=$S(%Y<0!(%Y>2):0,1:%Y+1)
"RTN","ZIS6",12,0)
 I %X S %Y=$S($D(^%ZIS(2,%ZISIOST(0),12.2)):$P(^(12.2),"^",%X),1:"") I %Y]"" U IO W @%Y U:%IS'[0 IO(0)
"RTN","ZIS6",13,0)
 Q
"RTN","ZIS6",14,0)
2 Q:%Y=""  I %IS'[0,$D(^%ZIS(1,+%H,"TYPE")),^("TYPE")["TRM" D OH Q:POP  S IO(1,IO(0))=""
"RTN","ZIS6",15,0)
 S %X=$T U IO D %Y^ZISX Q:'%X  U IO(0) Q
"RTN","ZIS6",16,0)
OH N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP") O:$S($G(IO(0))]"":$D(IO(1,IO(0))),1:0) IO(0)::0 Q  ;ADD POP VALUE HERE.
"RTN","ZIS6",17,0)
 ;
"RTN","ZIS6",18,0)
RES1 ;Allocate a resource slot
"RTN","ZIS6",19,0)
 N A,L,X,%ZISD0
"RTN","ZIS6",20,0)
 S %ZISD0=$O(^%ZISL(3.54,"B",IO,0))
"RTN","ZIS6",21,0)
 I '%ZISD0 S %ZISD0=$$RADD(IO) ;New one
"RTN","ZIS6",22,0)
 L +^%ZISL(3.54,%ZISD0,0):2 I '$T S POP=1 W:'$D(IOP) *7,"  [NOT AVAILABLE]" G RESX
"RTN","ZIS6",23,0)
RES2 S X=$P(^%ZISL(3.54,%ZISD0,0),"^",2)
"RTN","ZIS6",24,0)
 I 'X S POP=1 W:'$D(IOP) *7,"  [NOT AVAILABLE]" G RESX
"RTN","ZIS6",25,0)
 S X=X-1,$P(^%ZISL(3.54,%ZISD0,0),"^",2)=X
"RTN","ZIS6",26,0)
 ;
"RTN","ZIS6",27,0)
R1 ;Grab a slot
"RTN","ZIS6",28,0)
 S IO(1,IO)="RES",A=$G(^%ZISL(3.54,%ZISD0,1,0),"^3.542^^")
"RTN","ZIS6",29,0)
 F L=1:1:%ZISRL I '$D(^%ZISL(3.54,%ZISD0,1,L,0)) Q
"RTN","ZIS6",30,0)
 I '$T K IO(1,IO) G RES2 ;No free slots
"RTN","ZIS6",31,0)
 S ^%ZISL(3.54,%ZISD0,1,L,0)=L_"^"_%ZISV_"^"_$J,^%ZISL(3.54,"AJ",$J,%ZISD0,L)="",^%ZISL(3.54,%ZISD0,1,"B",L,L)="",$P(A,"^",3,4)=L_U_($P(A,U,4)+1),^%ZIS(3.54,%ZISD0,1,0)=A
"RTN","ZIS6",32,0)
RESX L -^%ZISL(3.54,%ZISD0,0) Q
"RTN","ZIS6",33,0)
 ;
"RTN","ZIS6",34,0)
RADD(X) ;Add Resource
"RTN","ZIS6",35,0)
 N %1,%2
"RTN","ZIS6",36,0)
 S %1=$G(^%ZISL(3.54,0),"RESOURCE^3.54^^"),%2=$P(%1,U,3)
"RTN","ZIS6",37,0)
 F %2=%2:1 Q:'$D(^%ZISL(3.54,%2,0))
"RTN","ZIS6",38,0)
 S $P(^%ZISL(3.54,0),U,3,4)=%2_U_($P(%1,U,4)+1),^%ZISL(3.54,%2,0)=X_"^"_$G(%ZISRL,1),^%ZISL(3.54,"B",X,%2)=""
"RTN","ZIS6",39,0)
 Q %2
"RTN","ZIS6",40,0)
 ;
"RTN","ZIS6",41,0)
Q G Q^%ZIS3
"RTN","ZIS6",42,0)
HG ;
"RTN","ZIS6",43,0)
 Q
"RTN","ZIS6",44,0)
SPL N %E,%Z D MARGN^%ZIS3 W:'$D(IOP) ! D SPOOL^%ZIS4:%IS'["T" G Q ;Spool type
"RTN","ZIS6",45,0)
MT D MARGN^%ZIS3,ASKPAR,AMTREW:'POP&'$D(IOP)&%ZISB W:'$D(IOP) ! D O^%ZIS4:'POP&(%ZISB&(%IS'["T")) G Q ;Magtape type
"RTN","ZIS6",46,0)
SDP D MARGN^%ZIS3,ASKPAR W:'$D(IOP) ! D O^%ZIS4:'POP&(%ZISB&(%IS'["T")) G Q ;Sequential disk processor type
"RTN","ZIS6",47,0)
HFS D MARGN^%ZIS3,HFS^%ZIS4 W:'$D(IOP) ! D O^%ZIS4:'POP&(%ZISB&(%IS'["T")) G Q ;Host File Server type
"RTN","ZIS6",48,0)
RES G Q:%IS["T" N X,X1 I %IS'["R"!'$D(IOP) S POP=1 W:'$D(IOP) *7,"  [NOT AVAILABLE]" Q  ;Resources
"RTN","ZIS6",49,0)
 G Q:$D(IO(1,IO)) I %IS["T" S X=IO,X1="RES" D DEVOK^%ZIS3 S:Y POP=1 G Q:POP
"RTN","ZIS6",50,0)
 D:%ZISB RES1 G Q
"RTN","ZIS6",51,0)
CHAN ;Network Channel type devices -- DecNet or TCP/IP devices.
"RTN","ZIS6",52,0)
 I IO="SYS$NET",$I="SYS$INPUT:;" S IO(0)=IO U IO ;DECNET Server Device
"RTN","ZIS6",53,0)
 D MARGN^%ZIS3:'POP,ASKPAR:'POP W:'$D(IOP) ! D O^%ZIS4:'POP&(%ZISB&(%IS'["T")) G Q ;Other Device type
"RTN","ZIS6",54,0)
IMPC ;Imaging Work Station
"RTN","ZIS6",55,0)
BAR ;Bar Code
"RTN","ZIS6",56,0)
OTH ;I IO="SYS$NET",$I="SYS$INPUT:;" S IO(0)=IO U IO ;DECNET Server Device
"RTN","ZIS6",57,0)
 D MARGN^%ZIS3:'POP,ASKPAR:'POP W:'$D(IOP) ! D O^%ZIS4:'POP&(%ZISB&(%IS'["T")) G Q ;Other Device type
"RTN","ZIS6",58,0)
 ;
"RTN","ZIS6",59,0)
ASKPAR G SETPAR^%ZIS3:$D(IOP),SETPAR^%ZIS3:'$P(^%ZIS(1,%E,0),"^",4) W "  ADDRESS/PARAMETERS: " W:%ZISOPAR]"" %ZISOPAR_"// " D SBR^%ZIS1 D MSG1:%X="?" G ASKPAR:%X="?" S:%X]"" %ZISOPAR=%X I $D(DTOUT)!$D(DUOUT) S POP=1
"RTN","ZIS6",60,0)
 I POP,%ZISB&(%ZTYPE["TRM") C IO K IO(1,IO) Q
"RTN","ZIS6",61,0)
 Q:POP  G SETPAR^%ZIS3
"RTN","ZIS6",62,0)
AMTREW I %ZISB,%ZTYPE="MT",'$D(IOP) W "  REWIND" S %=2,U="^",%ZISDTIM=60 D YN^%ZIS1 K %ZISDTIM G AMTREW:%=0 I %=-1 S POP=1 Q
"RTN","ZIS6",63,0)
 S:%=1 %ZISMTR=1 Q
"RTN","ZIS6",64,0)
MSG1 W !?5,"Enter the desired parameters needed to open the selected device.",!?25 Q
"RTN","ZIS6",65,0)
 ;
"RTN","ZISC")
0^3^B20074000
"RTN","ZISC",1,0)
%ZISC ;SF/GFT,AC,MUS - CLOSE LOGIC FOR DEVICES  ;01/15/97  10:59
"RTN","ZISC",2,0)
 ;;8.0;KERNEL;**24,36,49**;JUL 10, 1995
"RTN","ZISC",3,0)
C0 ;D:$D(ZISLP) C^%ZISLPC ;-- No longer called in kernel v8.
"RTN","ZISC",4,0)
 K %,IO("DOC"),IO("HFSIO"),IO("ERROR"),IO("LASTERR")
"RTN","ZISC",5,0)
 S:$D(IO)[0 IO=$I S:'$D(IO(0)) IO(0)=$I S %=$S($D(ION):ION,1:IO)
"RTN","ZISC",6,0)
 S %ZISOS=$G(^%ZOSF("OS")),%ZISV=$G(^("VOL"))
"RTN","ZISC",7,0)
 I %=""!(IO="") G SETIO:IO(0)]"" G END
"RTN","ZISC",8,0)
 I $D(IOT),IOT="RES" D RES G SETIO
"RTN","ZISC",9,0)
 ;D CHKDVOPN ;Code needs to be reviewed before it is distributed.
"RTN","ZISC",10,0)
 ;
"RTN","ZISC",11,0)
 I $D(IOST)#2,IOST]"" K % ;Define subtype info if not already defined.
"RTN","ZISC",12,0)
 I $D(%) S IOST=$P(%,";",2) D:IOST'?1A.ANP C2A S:IOST IOST(0)=IOST
"RTN","ZISC",13,0)
 I '$D(%)!($D(%)&(IOST?1A.ANP!($D(IOST(0))))) D
"RTN","ZISC",14,0)
 . S:'$D(IOST(0)) IOST(0)=$O(^%ZIS(2,"B",IOST,0)) K %
"RTN","ZISC",15,0)
 . I $G(^%ZIS(2,+IOST(0),3))]"",$D(IO(1,IO)) D
"RTN","ZISC",16,0)
 . . U IO S:$X $X=1 D X3^ZISX:'$D(IO("T")) ;perform close execute
"RTN","ZISC",17,0)
 ;
"RTN","ZISC",18,0)
 I $D(IO(1,IO)) D  ;Perform the following if the device is open.
"RTN","ZISC",19,0)
 .I $G(IO("P"))["B" D  ;Return to normal intensity
"RTN","ZISC",20,0)
 ..S %=$P($G(^%ZIS(2,+IOST(0),7)),"^",3) I %]"" W @%
"RTN","ZISC",21,0)
 .I $G(IO("P"))["P" D  ;Return to default pitch
"RTN","ZISC",22,0)
 ..S %=$G(^%ZIS(2,+IOST(0),12.11)) I %]"" W @%
"RTN","ZISC",23,0)
 ;
"RTN","ZISC",24,0)
 W:$$FF @IOF ;form feed issued at close
"RTN","ZISC",25,0)
 I $$CLOSPP D X11^ZISX:'$D(IO("T")) K IO("S") ;Close printer port
"RTN","ZISC",26,0)
 ;
"RTN","ZISC",27,0)
 I '$D(IOCPU)&(IO'=IO(0)!$D(IO("C"))),$D(IO(1,IO)) D
"RTN","ZISC",28,0)
 .U:$S($D(ZTQUEUED):0,'$D(IO(0)):0,IO(0)']"":0,$D(IO(1,IO(0)))#2:1,1:0) IO(0)
"RTN","ZISC",29,0)
 .C IO K IO(1,IO) ;close device
"RTN","ZISC",30,0)
 ;
"RTN","ZISC",31,0)
 ;I $G(^%ZIS(2,+IOST(0),3.1))]"" D X31^ZISX:'$D(IO("T"))
"RTN","ZISC",32,0)
 ;
"RTN","ZISC",33,0)
 S IO("CLOSE")=IO D:IO'=IO(0) RESETP
"RTN","ZISC",34,0)
 I $D(IOT),IOT="CHAN",$D(IOS) D
"RTN","ZISC",35,0)
 .S %=$G(^%ZIS(1,+IOS,"GBL"))
"RTN","ZISC",36,0)
 .I %]"" L @("-^"_%) ;unlock global used to control access to network channels.
"RTN","ZISC",37,0)
 D CLOSE^%ZIS4:$D(IO("SPOOL"))
"RTN","ZISC",38,0)
SETIO I $G(IOS),$G(^%ZIS(1,+IOS,"PCX"))]"" S %ZISPCX=^("PCX")
"RTN","ZISC",39,0)
 S (IO,IOS)=IO(0) K IO("T") D CIOS
"RTN","ZISC",40,0)
 G END:'IOS S ION=$P(^%ZIS(1,IOS,0),"^",1),IOT=$G(^("TYPE")),IOST(0)=$S(IOT["TRM"&($D(^XUTL("XQ",$J,"IOST(0)"))):^("IOST(0)"),1:$G(^%ZIS(1,IOS,"SUBTYPE")))
"RTN","ZISC",41,0)
 I IOT["TRM",$D(^XUTL("XQ",$J,"IOST(0)")) D HOME^%ZIS G END
"RTN","ZISC",42,0)
 I $D(^%ZIS(1,IOS,91)) S %=^%ZIS(1,IOS,91),IOM=+%,IOF=$P(%,"^",2),IOSL=$P(%,"^",3),IOBS=$P(%,"^",4) G S1
"RTN","ZISC",43,0)
 I IOST(0),$D(^%ZIS(2,IOST(0),1)) S %=^(1),IOM=+%,IOF=$P(%,"^",2),IOSL=$P(%,"^",3),IOBS=$P(%,"^",4) G S1
"RTN","ZISC",44,0)
 S (IOM,IOF,IOSL)=""
"RTN","ZISC",45,0)
S1 S:IOST(0) IOST=$P($G(^%ZIS(2,+IOST(0),0)),"^"),IOXY=$G(^("XY"))
"RTN","ZISC",46,0)
 I '$D(ZTQUEUED),'$D(IO("C")),IOT["TRM" D RM:$D(IO(1,IO))
"RTN","ZISC",47,0)
 ;I $G(^%ZIS(1,+IOS,"PCX"))]"" D XPCX^ZISX:'$D(IO("T")) ;Post-close execute code of Device file.
"RTN","ZISC",48,0)
END I '$D(IO("T")),$G(%ZISPCX)]"" S %Y=%ZISPCX D %Y^ZISX
"RTN","ZISC",49,0)
 K %,%E,%H,%ZISI,%ZISOS,%ZISPCX,%ZISV,%ZISVT,%ZISX,IO("P"),IOC,IOCPU,IONOFF Q
"RTN","ZISC",50,0)
 ;
"RTN","ZISC",51,0)
C2A S IOS=$P(%,";") D CIOS S IOST=IOS
"RTN","ZISC",52,0)
 S IOST=$S($D(^%ZIS(1,+IOST,"SUBTYPE")):^("SUBTYPE"),1:0)
"RTN","ZISC",53,0)
 Q
"RTN","ZISC",54,0)
 ;
"RTN","ZISC",55,0)
CIOS I $D(^XUTL("XQ",$J,"IOS")) S IOS=+^("IOS") Q
"RTN","ZISC",56,0)
 I $D(^%ZOSF("VOL")) S %ZISVT=IOS D VTLKUP^%ZIS S IOS=+%E
"RTN","ZISC",57,0)
 E  S IOS=+$O(^%ZIS(1,"C",IOS,0))
"RTN","ZISC",58,0)
 Q:IOS>0!(IO(0)']"")
"RTN","ZISC",59,0)
 S %ZISVT=IO(0) D VIRTUAL^%ZIS
"RTN","ZISC",60,0)
 I $D(%ZISVT) S %H=%E I %ZISVT]"",%H>0,$D(^%ZIS(1,%H,0)),$D(^("TYPE")),^("TYPE")="VTRM" K %ZISVT S IOS=%H
"RTN","ZISC",61,0)
 Q
"RTN","ZISC",62,0)
 ;
"RTN","ZISC",63,0)
RESETP I IO]"" K ^XUTL("ZISPARAM",IO) Q
"RTN","ZISC",64,0)
 Q
"RTN","ZISC",65,0)
RM N X S X=+IOM X ^%ZOSF("RM") Q
"RTN","ZISC",66,0)
RES ;Close resource device.
"RTN","ZISC",67,0)
 Q:'$D(IO(1,IO))&'$D(^%ZISL(3.54,"AJ",$J))
"RTN","ZISC",68,0)
 S %ZISJOB=$J
"RTN","ZISC",69,0)
 ;
"RTN","ZISC",70,0)
RES1 G RQ:'$D(IOS),RQ:'$D(^%ZIS(1,+IOS,1)) S %ZISRL=+$P(^(1),"^",10),%ZISRL=$S(%ZISRL:%ZISRL,1:1)
"RTN","ZISC",71,0)
 S %X=$O(^%ZISL(3.54,"B",IO,0)) G RQ:'%X
"RTN","ZISC",72,0)
 G RQ:'$D(^%ZISL(3.54,+%X,0)) S %ZISD0=+%X,%ZISY0=^(0)
"RTN","ZISC",73,0)
 S %X=$O(^%ZISL(3.54,"AJ",%ZISJOB,%ZISD0,0)) S %ZISD1=%X G RQ:'%X
"RTN","ZISC",74,0)
 S %Y=$G(^%ZISL(3.54,%ZISD0,1,+%ZISD1,0)) G RQ:$P(%Y,"^",3)'=%ZISJOB
"RTN","ZISC",75,0)
 D KILLRES(+%ZISD0,+%ZISD1)
"RTN","ZISC",76,0)
RQ K IO(1,IO),%X,%Y,%ZISD0,%ZISD1,%ZISJOB,%ZISRES,%ZISRL,%ZISY0,%ZTRTN,ZTSAVE,ZTIO Q
"RTN","ZISC",77,0)
KILLRES(D0,D1) ;Kill one resource use
"RTN","ZISC",78,0)
 Q:(D0'>0)!(D1'>0)  N %X,%Y,%J,%ZISRL L +^%ZISL(3.54,D0,0)
"RTN","ZISC",79,0)
 S %Y=$G(^%ZISL(3.54,D0,0)) G KRX:%Y=""
"RTN","ZISC",80,0)
 S %X=$G(^%ZISL(3.54,D0,1,D1,0)),%J=$P(%X,"^",3) S:%J="" %J=" "
"RTN","ZISC",81,0)
 K ^%ZISL(3.54,D0,1,D1,0),^%ZISL(3.54,D0,1,"B",D1,D1),^%ZISL(3.54,"AJ",%J,D0,D1)
"RTN","ZISC",82,0)
 S %X=$P(%Y,"^",2)+1,$P(^%ZISL(3.54,D0,0),"^",2)=%X
"RTN","ZISC",83,0)
 ;I '$D(^%ZISL(3.54,%ZISD0,1,0)) S ^(0)="^3.542A^^" G RQ
"RTN","ZISC",84,0)
 S %Y=$G(^%ZISL(3.54,D0,1,0)),%X=$P(%Y,"^",4),$P(^%ZISL(3.54,D0,1,0),"^",3,4)="^"_$S(%X>0:(%X-1),1:1)
"RTN","ZISC",85,0)
KRX L -^%ZISL(3.54,D0,0) Q
"RTN","ZISC",86,0)
DQCRES ;Tasked entry point to close resource device.
"RTN","ZISC",87,0)
 S IO=%ZISRES G RES1
"RTN","ZISC",88,0)
CHKDVOPN ;CHECK DEVICES THAT ARE OPENED.
"RTN","ZISC",89,0)
 ;NEEDS TO BE REVIEWED BEFORE DISTRIBUTION
"RTN","ZISC",90,0)
 ;THE CODE BELOW IS SPECIFIC TO VAX DSM.
"RTN","ZISC",91,0)
 N X,Y
"RTN","ZISC",92,0)
 S X=$J D DEVOPN
"RTN","ZISC",93,0)
 S Y=","_Y,X=","_IO_","
"RTN","ZISC",94,0)
 I Y'[X K IO(1,IO)
"RTN","ZISC",95,0)
 Q
"RTN","ZISC",96,0)
DEVOPN ;
"RTN","ZISC",97,0)
 N %FST,X1,X2,X3,X4,X5,X6,X7,X8,X9
"RTN","ZISC",98,0)
 S %FST=1,Y=""
"RTN","ZISC",99,0)
 F  D  Q:%DONE=0
"RTN","ZISC",100,0)
 .S %DONE=$ZC(%OPNLIST,%FST,.X1,.X2,.X3,.X4,.X5,.X6,.X7,.X8,.X9)
"RTN","ZISC",101,0)
 .Q:%DONE=0
"RTN","ZISC",102,0)
 .S %FST=0,Y=Y_X1_","
"RTN","ZISC",103,0)
 Q
"RTN","ZISC",104,0)
FF() ;Issue form feed
"RTN","ZISC",105,0)
 I $E(IOST,1,2)'["C-",$D(IO(1,IO)),$G(IOT)="TRM"!($G(IOT)="SPL"),'$D(IO("T"))&$Y&'$D(IONOFF)&'$D(IO(1,IO,"NOFF")) Q 1
"RTN","ZISC",106,0)
 Q 0
"RTN","ZISC",107,0)
 ;I $E(IOST,1,2)'["C-",$D(IO(1,IO)),$G(IOT)="TRM"!($G(IOT)="SPL") W:'$D(IO("T"))&$Y&'$D(IONOFF)&'$D(IO(1,IO,"NOFF")) @IOF ;form feed issued at close
"RTN","ZISC",108,0)
 ;
"RTN","ZISC",109,0)
CLOSPP() ;Close printer port
"RTN","ZISC",110,0)
 I $D(IO("S")),$D(^%ZIS(2,+IO("S"),11))&$D(IO(1,IO)) Q 1
"RTN","ZISC",111,0)
 Q 0
"RTN","ZISC",112,0)
 ;I $D(IO("S")) D:$D(^%ZIS(2,+IO("S"),11))&$D(IO(1,IO)) X11^ZISX:'$D(IO("T")) K IO("S")
"RTN","ZISHMSM")
0^26^B30589986
"RTN","ZISHMSM",1,0)
%ZISH ;IHS\PR,SFISC/AC - Host File Control for MSM ;04/01/97  15:07
"RTN","ZISHMSM",2,0)
 ;;8.0;KERNEL;**24,36,49**;JUL 10, 1995
"RTN","ZISHMSM",3,0)
 ;
"RTN","ZISHMSM",4,0)
OPEN(X1,X2,X3,X4,X5)    ;SR. Open Host File
"RTN","ZISHMSM",5,0)
 ;X1=handle name
"RTN","ZISHMSM",6,0)
 ;X2=directory name \dir\
"RTN","ZISHMSM",7,0)
 ;X3=file name
"RTN","ZISHMSM",8,0)
 ;X4=file access mode e.g.: W for write, R for read, A for append.
"RTN","ZISHMSM",9,0)
 ;X5=Max record size for a new file
"RTN","ZISHMSM",10,0)
 N %,%1,%2,%I,%T,%ZA,%ZISHIO
"RTN","ZISHMSM",11,0)
 S %I=$I,%T=0,POP=0 M %ZISHIO=IO
"RTN","ZISHMSM",12,0)
 F %=51:1:54 O %::0 I $T S %T=% Q
"RTN","ZISHMSM",13,0)
 I '%T U:%I]"" %I S POP=1 Q
"RTN","ZISHMSM",14,0)
 S %1=$$MODE^%ZISF(X2_X3,X4)
"RTN","ZISHMSM",15,0)
 S %2=%_":"_%1
"RTN","ZISHMSM",16,0)
 U @%2 S %ZA=$ZA
"RTN","ZISHMSM",17,0)
 I %ZA=-1 U:%I]"" %I C % S POP=1 Q
"RTN","ZISHMSM",18,0)
 S IO=%,IO(1,IO)=""
"RTN","ZISHMSM",19,0)
 I $G(X1)]"" D SAVDEV^%ZISUTL(X1)
"RTN","ZISHMSM",20,0)
 Q
"RTN","ZISHMSM",21,0)
 ;
"RTN","ZISHMSM",22,0)
CLOSE(X) ;SR. Close HFS device not opened by %ZIS.
"RTN","ZISHMSM",23,0)
 ;X=HANDLE NAME
"RTN","ZISHMSM",24,0)
 ;IO=Device
"RTN","ZISHMSM",25,0)
 N %
"RTN","ZISHMSM",26,0)
 I $G(IO)]"" C IO K IO(1,IO)
"RTN","ZISHMSM",27,0)
 I $G(X)]"" D RMDEV^%ZISUTL(X)
"RTN","ZISHMSM",28,0)
 D HOME^%ZIS
"RTN","ZISHMSM",29,0)
 Q
"RTN","ZISHMSM",30,0)
 ;
"RTN","ZISHMSM",31,0)
OPENERR ;
"RTN","ZISHMSM",32,0)
 Q 0
"RTN","ZISHMSM",33,0)
 ;
"RTN","ZISHMSM",34,0)
DEL(%ZISHX1,%ZISHX2) ;SR. Del fl(s)
"RTN","ZISHMSM",35,0)
 ;S Y=$$DEL^ZOSHMSM("\dir\","fl")
"RTN","ZISHMSM",36,0)
 ;                         ,.array)
"RTN","ZISHMSM",37,0)
 ;Changed X2 to a $NAME string
"RTN","ZISHMSM",38,0)
 N %,%ZISH
"RTN","ZISHMSM",39,0)
 N ZOSHDA,ZOSHF,ZOSHX,ZOSHQ,ZOSHDF,ZOSHC
"RTN","ZISHMSM",40,0)
 S %ZISHX1=$TR(%ZISHX1,"/","\")
"RTN","ZISHMSM",41,0)
 ;Get fls to act on
"RTN","ZISHMSM",42,0)
 ;No '*' allowed
"RTN","ZISHMSM",43,0)
 S %ZISH="" F  S %ZISH=$O(@%ZISHX2@(%ZISH)) Q:'%ZISH  I %ZISH["*" S ZOSHQ=1 Q
"RTN","ZISHMSM",44,0)
 I $D(ZOSHQ) Q 0
"RTN","ZISHMSM",45,0)
 S %ZISH="" F   S %ZISH=$O(@%ZISHX2@(%ZISH)) Q:%ZISH=""  D
"RTN","ZISHMSM",46,0)
 .;S ZOSHC="rm "_X1_%
"RTN","ZISHMSM",47,0)
 .S ZOSHC=$ZOS(2,%ZISHX1_%ZISH)
"RTN","ZISHMSM",48,0)
 .;D JW
"RTN","ZISHMSM",49,0)
 Q 1
"RTN","ZISHMSM",50,0)
 ;
"RTN","ZISHMSM",51,0)
LIST(%ZISHX1,%ZISHX2,%ZISHX3) ;SR. Create a local array holding fl names
"RTN","ZISHMSM",52,0)
 ;S Y=$$LIST^ZOSHDOS("\dir\","fl",".return array")
"RTN","ZISHMSM",53,0)
 ;                           "fl*",
"RTN","ZISHMSM",54,0)
 ;                           .array,
"RTN","ZISHMSM",55,0)
 ;
"RTN","ZISHMSM",56,0)
 ;Change X2 = $NAME OF CLOSE ROOT
"RTN","ZISHMSM",57,0)
 ;Change X3 = $NAME OF CLOSE ROOT
"RTN","ZISHMSM",58,0)
 ;
"RTN","ZISHMSM",59,0)
 N %ZISH,%ZISHN,%ZISHX,%ZISHY
"RTN","ZISHMSM",60,0)
 S %ZISHN=0
"RTN","ZISHMSM",61,0)
 ;Get fls to act on
"RTN","ZISHMSM",62,0)
 S %ZISH="" F  S %ZISH=$O(@%ZISHX2@(%ZISH)) Q:%ZISH=""  D
"RTN","ZISHMSM",63,0)
 .S %ZISHX=%ZISHX1_%ZISH
"RTN","ZISHMSM",64,0)
 .F %ZISHN=1:1 D  Q:$P(%ZISHY,"^")=""!(%ZISHY<0)  S @%ZISHX3@($P(%ZISHY,"^"))="" ;S @%ZISHX3@(%ZISHN)=$P(%ZISHY,"^")
"RTN","ZISHMSM",65,0)
 ..I %ZISHN>1 S %ZISHY=$ZOS(13,%ZISHY)
"RTN","ZISHMSM",66,0)
 ..E  S %ZISHY=$ZOS(12,%ZISHX,0)
"RTN","ZISHMSM",67,0)
 Q $O(@%ZISHX3@(""))]""
"RTN","ZISHMSM",68,0)
 ;
"RTN","ZISHMSM",69,0)
MV(X1,X2,Y1,Y2) ;SR. Rename a fl
"RTN","ZISHMSM",70,0)
 ;S Y=$$MV^ZOSHDOS("\dir\","fl","\dir\","fl")
"RTN","ZISHMSM",71,0)
 ;
"RTN","ZISHMSM",72,0)
 N %ZB,%ZC,%ZISHDV1,%ZISHDV2,%ZISHFN1,%ZISHFN2,%ZISHPCT,%ZISHSIZ,%ZISHX,X,Y
"RTN","ZISHMSM",73,0)
 S X=X1_X2
"RTN","ZISHMSM",74,0)
 S Y=Y1_Y2
"RTN","ZISHMSM",75,0)
 I X1=Y1 Q $ZOS(3,X,Y)'<0
"RTN","ZISHMSM",76,0)
 ;
"RTN","ZISHMSM",77,0)
 S %ZISHDV1=51,%ZISHDV2=52,%ZISHFN1=X,%ZISHFN2=Y
"RTN","ZISHMSM",78,0)
 O %ZISHDV1:(%ZISHFN1)
"RTN","ZISHMSM",79,0)
 O %ZISHDV2:(%ZISHFN2:"W")
"RTN","ZISHMSM",80,0)
 U %ZISHDV1:(::0:2) S %ZISHSIZ=$ZB U %ZISHDV1:(::0:0) S (%ZISHPCT,%ZB,%ZC)=0
"RTN","ZISHMSM",81,0)
 D SLOWCOPY S %ZISHX(X2)="" S Y=$$DEL^%ZISH(X1,$NA(%ZISHX))
"RTN","ZISHMSM",82,0)
 Q 1
"RTN","ZISHMSM",83,0)
 ;
"RTN","ZISHMSM",84,0)
SLOWCOPY ; Copy without view buffer
"RTN","ZISHMSM",85,0)
 N X,Y
"RTN","ZISHMSM",86,0)
 O %ZISHDV1:(%ZISHFN1:"R"::::""),%ZISHDV2:(%ZISHFN2:"W"::::"")
"RTN","ZISHMSM",87,0)
 FOR  DO  Q:%ZC!(%ZB=%ZISHSIZ)
"RTN","ZISHMSM",88,0)
 . U %ZISHDV1 R X#1024 Q:$L(X)=0
"RTN","ZISHMSM",89,0)
 . U %ZISHDV2 W X S %ZB=$ZB,%ZC=$ZC Q:%ZC
"RTN","ZISHMSM",90,0)
 . I %ZB=%ZISHSIZ C %ZISHDV2 S %ZC=($ZA=-1)
"RTN","ZISHMSM",91,0)
 . S X=%ZB/%ZISHSIZ*100\1 ; %done
"RTN","ZISHMSM",92,0)
 . Q:X=%ZISHPCT  S %ZISHPCT=X
"RTN","ZISHMSM",93,0)
 . Q  ;U 0 W $J(%ZISHPCT,3),*13
"RTN","ZISHMSM",94,0)
 Q
"RTN","ZISHMSM",95,0)
 ;
"RTN","ZISHMSM",96,0)
PWD() ;SR. Print working directory
"RTN","ZISHMSM",97,0)
 N Y
"RTN","ZISHMSM",98,0)
 S Y=$ZOS(11,$ZOS(14))
"RTN","ZISHMSM",99,0)
 Q:Y<0 ""
"RTN","ZISHMSM",100,0)
 S Y=Y_$S($E(Y,$L(Y))'="\":"\",1:"")
"RTN","ZISHMSM",101,0)
 Q $ZOS(14)_":"_Y
"RTN","ZISHMSM",102,0)
 ;
"RTN","ZISHMSM",103,0)
JW ;Call dos $ZOS
"RTN","ZISHMSM",104,0)
 S ZOSHX=$ZOS(ZOSHNUM,ZOSHC)
"RTN","ZISHMSM",105,0)
 Q
"RTN","ZISHMSM",106,0)
DF(X) ;Dir frmt
"RTN","ZISHMSM",107,0)
 Q:X=""
"RTN","ZISHMSM",108,0)
 S X=$TR(X,"/","\")
"RTN","ZISHMSM",109,0)
 I $E(X,$L(X))'="\" S X=X_"\"
"RTN","ZISHMSM",110,0)
 Q
"RTN","ZISHMSM",111,0)
FL(X) ;Fl len
"RTN","ZISHMSM",112,0)
 N ZOSHP1,ZOSHP2
"RTN","ZISHMSM",113,0)
 S ZOSHP1=$P(X,"."),ZOSHP2=$P(X,".",2)
"RTN","ZISHMSM",114,0)
 I $L(ZOSHP1)>8 S X=4 Q
"RTN","ZISHMSM",115,0)
 I $L(ZOSHP2)>3 S X=4 Q
"RTN","ZISHMSM",116,0)
 Q
"RTN","ZISHMSM",117,0)
READNXT(REC) ;Read any sized record into array.
"RTN","ZISHMSM",118,0)
 N T,I,X,LB
"RTN","ZISHMSM",119,0)
 U IO S LB=$ZB R REC#255 S %ZA=$ZA,%ZB=$ZB,%ZC=$ZC,%ZL=%ZA Q:$$EOF(%ZC)
"RTN","ZISHMSM",120,0)
 Q:%ZA<255
"RTN","ZISHMSM",121,0)
 F I=1:1 S LB=LB+%ZA Q:LB<%ZB  R X#255 S %ZA=$ZA,%ZB=$ZB,%ZC=$ZC Q:$$EOF(%ZC)!('$L(X))  S REC(I)=X
"RTN","ZISHMSM",122,0)
 Q
"RTN","ZISHMSM",123,0)
STATUS() ;SR. Return EOF status
"RTN","ZISHMSM",124,0)
 U $I
"RTN","ZISHMSM",125,0)
 Q $$EOF($ZC)
"RTN","ZISHMSM",126,0)
 ;
"RTN","ZISHMSM",127,0)
EOF(X) ;Eof flag, pass in $ZC
"RTN","ZISHMSM",128,0)
 Q (X=-1)
"RTN","ZISHMSM",129,0)
 ;
"RTN","ZISHMSM",130,0)
READREC(X) ;Read record from host file.
"RTN","ZISHMSM",131,0)
 N Y
"RTN","ZISHMSM",132,0)
 U IO R X S Y=$ZC
"RTN","ZISHMSM",133,0)
 U $P
"RTN","ZISHMSM",134,0)
 Q Y
"RTN","ZISHMSM",135,0)
MAKEREF(HF,IX,OVF) ;Internal call to rebuild global ref.
"RTN","ZISHMSM",136,0)
 ;Return %ZISHF,%ZISHO,%ZISHI,%ZISUB
"RTN","ZISHMSM",137,0)
 N I,F,MX
"RTN","ZISHMSM",138,0)
 S OVF=$G(OVF,"%ZISHOF")
"RTN","ZISHMSM",139,0)
 S %ZISHI=$QS(HF,IX),MX=$QL(HF) ;
"RTN","ZISHMSM",140,0)
 S F=$NA(@HF,IX-1) ;Get first part
"RTN","ZISHMSM",141,0)
 I IX=1 S %ZISHF=F_"(%ZISHI" ;Build root, IX=1
"RTN","ZISHMSM",142,0)
 I IX>1 S %ZISHF=$E(F,1,$L(F)-1)_",%ZISHI" ;Build root
"RTN","ZISHMSM",143,0)
 S %ZISHO=%ZISHF_","_OVF_",%OVFCNT)" ;Make overflow
"RTN","ZISHMSM",144,0)
 F I=IX+1:1:MX S %ZISHF=%ZISHF_",%ZISUB("_I_")",%ZISUB(I)=$QS(HF,I)
"RTN","ZISHMSM",145,0)
 S %ZISHF=%ZISHF_")"
"RTN","ZISHMSM",146,0)
 Q
"RTN","ZISHMSM",147,0)
FTG(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,%ZISHX5) ;SR. Unload contents of host file into global
"RTN","ZISHMSM",148,0)
 ;p1=hostf file directory 
"RTN","ZISHMSM",149,0)
 ;p2=host file name
"RTN","ZISHMSM",150,0)
 ;p3= $NAME REFERENCE INCLUDING STARTING SUBSCRIPT
"RTN","ZISHMSM",151,0)
 ;p4=INCREMENT SUBSCRIPT
"RTN","ZISHMSM",152,0)
 ;p5=Overflow subscript, defaults to "OVF"
"RTN","ZISHMSM",153,0)
 N %ZA,%ZB,%ZC,%ZL,X,%OVFCNT,%CONT
"RTN","ZISHMSM",154,0)
 N I,%ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHOF,%ZISHOX,%ZISHS,%ZISHX,%ZISHY,POP,%ZISUB
"RTN","ZISHMSM",155,0)
 S %ZISHOF=$G(%ZISHX5,"OVF")
"RTN","ZISHMSM",156,0)
 D MAKEREF(%ZISHX3,%ZISHX4,"%ZISHOF")
"RTN","ZISHMSM",157,0)
 D OPEN^%ZISH(,%ZISHX1,%ZISHX2,"R")
"RTN","ZISHMSM",158,0)
 I POP Q 0
"RTN","ZISHMSM",159,0)
 S X="ERREOF^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHMSM",160,0)
 U IO F  K %XX D READNXT(.%XX) Q:$$EOF(%ZC)  D
"RTN","ZISHMSM",161,0)
 . S @%ZISHF=%XX
"RTN","ZISHMSM",162,0)
 . I $D(%XX)>2 F %OVFCNT=1:1 Q:'$D(%XX(%OVFCNT))  S @%ZISHO=%XX(%OVFCNT)
"RTN","ZISHMSM",163,0)
 . S %ZISHI=%ZISHI+1
"RTN","ZISHMSM",164,0)
 . Q
"RTN","ZISHMSM",165,0)
 D CLOSE() ;Normal exit
"RTN","ZISHMSM",166,0)
 Q 1
"RTN","ZISHMSM",167,0)
 ;
"RTN","ZISHMSM",168,0)
ERREOF D CLOSE() ;Error close and exit
"RTN","ZISHMSM",169,0)
 Q 0
"RTN","ZISHMSM",170,0)
 ;
"RTN","ZISHMSM",171,0)
GTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4) ;SR. Load contents of global to host file.
"RTN","ZISHMSM",172,0)
 ;Previously name LOAD
"RTN","ZISHMSM",173,0)
 ;p1=$NAME of global reference
"RTN","ZISHMSM",174,0)
 ;p2=incrementing subscript
"RTN","ZISHMSM",175,0)
 ;p3=host file directory
"RTN","ZISHMSM",176,0)
 ;p4=host file name
"RTN","ZISHMSM",177,0)
 N %ZISHY,%ZISHOX
"RTN","ZISHMSM",178,0)
 S %ZISHY=$$MGTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,"W")
"RTN","ZISHMSM",179,0)
 Q %ZISHY
"RTN","ZISHMSM",180,0)
 ;
"RTN","ZISHMSM",181,0)
GATF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4) ;SR. Append to host file.
"RTN","ZISHMSM",182,0)
 ;
"RTN","ZISHMSM",183,0)
 ;p1=$NAME of global reference
"RTN","ZISHMSM",184,0)
 ;p2=incrementing subscript
"RTN","ZISHMSM",185,0)
 ;p3=host file directory
"RTN","ZISHMSM",186,0)
 ;p4=host file name
"RTN","ZISHMSM",187,0)
 N %ZISHY
"RTN","ZISHMSM",188,0)
 S %ZISHY=$$MGTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,"A")
"RTN","ZISHMSM",189,0)
 Q %ZISHY
"RTN","ZISHMSM",190,0)
MGTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,%ZISHX5) ;
"RTN","ZISHMSM",191,0)
 ;p1=$NAME of global reference
"RTN","ZISHMSM",192,0)
 ;p2=incrementing subscript
"RTN","ZISHMSM",193,0)
 ;p3=host file directory
"RTN","ZISHMSM",194,0)
 ;p4=host file name
"RTN","ZISHMSM",195,0)
 N %ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHS,%ZISHOX,IO,%ZISHX,Y
"RTN","ZISHMSM",196,0)
 D MAKEREF(%ZISHX1,%ZISHX2)
"RTN","ZISHMSM",197,0)
 D OPEN^%ZISH(,%ZISHX3,%ZISHX4,%ZISHX5)
"RTN","ZISHMSM",198,0)
 I POP Q 0
"RTN","ZISHMSM",199,0)
 N X
"RTN","ZISHMSM",200,0)
 S X="ERREOF^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHMSM",201,0)
 F  Q:'($D(@%ZISHF)#2)  S %ZISHX=@%ZISHF,%ZISHI=%ZISHI+1 U IO W %ZISHX,!
"RTN","ZISHMSM",202,0)
 D CLOSE()
"RTN","ZISHMSM",203,0)
 Q 1
"RTN","ZISHMSM",204,0)
 ;
"RTN","ZOSVMSM")
0^22^B34006239
"RTN","ZOSVMSM",1,0)
%ZOSV ;SFISC/AC - $View commands for MSM-PC/PLUS ;01/22/97  13:53
"RTN","ZOSVMSM",2,0)
 ;;8.0;KERNEL;**13,25,49**;Jul 10, 1995
"RTN","ZOSVMSM",3,0)
 ;
"RTN","ZOSVMSM",4,0)
ACTJ() ;
"RTN","ZOSVMSM",5,0)
 Q $S($$V3:$V($V(44)+168,-3,2),1:$V(168,-4,2))
"RTN","ZOSVMSM",6,0)
AVJ() ;
"RTN","ZOSVMSM",7,0)
 Q $S($$V3:$V($V(44)+94,-3,2)+1-$V($V(44)+168,-3,2),1:$V($V(3,-5),-3,0)-$V(168,-4,2))
"RTN","ZOSVMSM",8,0)
T0 ; start RT clock
"RTN","ZOSVMSM",9,0)
 I $$OSTYPE()'=1 S XRT0=$H Q
"RTN","ZOSVMSM",10,0)
 S XRT0=$P($H,",")_","_($V(#46C,-3,4)*5.4925\1/100) Q
"RTN","ZOSVMSM",11,0)
T1 ; store RT datum
"RTN","ZOSVMSM",12,0)
 I $$OSTYPE()'=1 S ^%ZRTL(3,XRTL,+$H,$P($H,",",2))=XRT0 K XRT0 Q
"RTN","ZOSVMSM",13,0)
 S ^%ZRTL(3,XRTL,+$H,XRTN,$V(#46C,-3,4)*5.4925\1/100)=XRT0 K XRT0 Q
"RTN","ZOSVMSM",14,0)
JOBPAR ;
"RTN","ZOSVMSM",15,0)
 S Y=$V(2,X,2) Q:'Y
"RTN","ZOSVMSM",16,0)
 S Y=$ZU(Y#32,Y\32) Q
"RTN","ZOSVMSM",17,0)
PROGMODE() ;
"RTN","ZOSVMSM",18,0)
 Q $V(0,$J,2)#2
"RTN","ZOSVMSM",19,0)
PRGMODE ;
"RTN","ZOSVMSM",20,0)
 W ! S ZTPAC=$S('$D(^VA(200,+DUZ,.1)):"",1:$P(^(.1),U,5)),XUVOL=^%ZOSF("VOL")
"RTN","ZOSVMSM",21,0)
 ;I ZTPAC="" W *7,"YOU HAVE NO PROGRAMMER ACCESS CODE!",! Q
"RTN","ZOSVMSM",22,0)
 I ZTPAC]"" X ^%ZOSF("EOFF") R !,"PAC: ",X:60 X ^%ZOSF("EON") I X'=ZTPAC W "??",*7 Q
"RTN","ZOSVMSM",23,0)
 S XMB="XUPROGMODE",XMB(1)=DUZ,XMB(2)=$I D ^XMB:$L($T(^XMB)) D BYE^XUSCLEAN K ZTPAC,X,XMB
"RTN","ZOSVMSM",24,0)
 S ZOSVER='$ZB($V(140,$J,2),512,1) ; 1 if V 2.1+ err trapping in effect
"RTN","ZOSVMSM",25,0)
 X ^%ZOSF("UCI") S XUCI=Y,XQZ="PRGM^ZUA[MGR]",XUSLNT=1 D DO^%XUCI B:ZOSVER 2 V 0:$J:$ZB($V(0,$J,2),1,7):2 S $ZE="PRGMODEX^%ZOSV" ABORT
"RTN","ZOSVMSM",26,0)
PRGMODEX W !,"YOU ARE NOW IN PROGRAMMING MODE!",! S $ZE="" B:ZOSVER -2 K ZOSVER Q
"RTN","ZOSVMSM",27,0)
 ;
"RTN","ZOSVMSM",28,0)
SIGNOFF ;
"RTN","ZOSVMSM",29,0)
 I 0
"RTN","ZOSVMSM",30,0)
 ;I $V($V(44)+4,-3,2)\32768#2 Q
"RTN","ZOSVMSM",31,0)
 Q
"RTN","ZOSVMSM",32,0)
UCI ;
"RTN","ZOSVMSM",33,0)
 S Y=$ZU(0) Q  ;X ^%ZOSF("UCI") Q
"RTN","ZOSVMSM",34,0)
 ;
"RTN","ZOSVMSM",35,0)
UCICHECK(X) ;
"RTN","ZOSVMSM",36,0)
 N Y,I S Y="",$ZT="BADUCI^%ZOSV"
"RTN","ZOSVMSM",37,0)
 I X["," S Y=$ZU($P(X,","),$P(X,",",2)),(X,Y)=$ZU($P(Y,","),$P(Y,",",2)) Q:Y]"" Y
"RTN","ZOSVMSM",38,0)
 F I=1:1:64 G:$ZU(I)="" BADUCI Q:$ZU(I)=X!($P($ZU(I),",")=X)!(I=X)
"RTN","ZOSVMSM",39,0)
 Q $ZU(I)
"RTN","ZOSVMSM",40,0)
 ;
"RTN","ZOSVMSM",41,0)
BADUCI Q ""
"RTN","ZOSVMSM",42,0)
 ;
"RTN","ZOSVMSM",43,0)
BAUD S Y=^%ZOSF("MGR"),X=$S($D(^%ZIS(1,D0,0)):$P(^(0),"^",2),1:"")
"RTN","ZOSVMSM",44,0)
 Q:X=""  I '$D(^[Y]SYS(0,"DDB",+X)) S X="" Q
"RTN","ZOSVMSM",45,0)
 S X=$P(^(+X),",",3)#100 Q:'X
"RTN","ZOSVMSM",46,0)
 S X=$P("50,75,110,134.5,150,300,600,1200,1800,2400,3600,4800,9600",",",X) Q
"RTN","ZOSVMSM",47,0)
 ;
"RTN","ZOSVMSM",48,0)
LGR() Q $ZR ;Last global ref.
"RTN","ZOSVMSM",49,0)
 ;
"RTN","ZOSVMSM",50,0)
EC() Q $ZE ;Error code
"RTN","ZOSVMSM",51,0)
 ;
"RTN","ZOSVMSM",52,0)
DOLRO ;SAVE ENTIRE SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVMSM",53,0)
 S Y="%" F %=0:0 S Y=$O(@Y) Q:Y=""  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVMSM",54,0)
 Q
"RTN","ZOSVMSM",55,0)
 ;
"RTN","ZOSVMSM",56,0)
ORDER ;SAVE PART OF SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVMSM",57,0)
 S (Y,Y1)=$P(Y,"*",1) I $D(@Y)=0 F %=0:0 S Y=$O(@Y) Q:Y=""!(Y[Y1)
"RTN","ZOSVMSM",58,0)
 Q:Y=""  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVMSM",59,0)
 F %=0:0 S Y=$O(@Y) Q:Y=""!(Y'[Y1)  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVMSM",60,0)
 K %,X,Y,Y1 Q
"RTN","ZOSVMSM",61,0)
 ;
"RTN","ZOSVMSM",62,0)
PRIORITY ;
"RTN","ZOSVMSM",63,0)
 Q:X>5  N %D,%P S %P=(X>5) D INT^%HL Q
"RTN","ZOSVMSM",64,0)
 ;
"RTN","ZOSVMSM",65,0)
PRIINQ() ;
"RTN","ZOSVMSM",66,0)
 Q $S($V(20,$J,2):10,1:1)
"RTN","ZOSVMSM",67,0)
PARSIZ ;
"RTN","ZOSVMSM",68,0)
 S X=3 Q
"RTN","ZOSVMSM",69,0)
 ;
"RTN","ZOSVMSM",70,0)
NOLOG ;
"RTN","ZOSVMSM",71,0)
 S Y=$S($$V3:"$V($V(44)+4,-3,2)",1:"$V(4,-4,2)")_"\64#2" Q
"RTN","ZOSVMSM",72,0)
 ;
"RTN","ZOSVMSM",73,0)
DEVOPN ;
"RTN","ZOSVMSM",74,0)
 ;X=$J,Y=List of devices separated by a comma
"RTN","ZOSVMSM",75,0)
 N %,%1,%I,%X
"RTN","ZOSVMSM",76,0)
 S Y=""
"RTN","ZOSVMSM",77,0)
 I $$V3 S %=$V($V(44)+10,-3,2),%1=$V($V(44)+8,-3,2)+$V(44),%=$V(%*5+%1)
"RTN","ZOSVMSM",78,0)
 E  S %=$V(5,-5,0)
"RTN","ZOSVMSM",79,0)
 F %I=1:1:255 S %X=$V(%+%I+%I,-3,2) I %X,%X#4=0,%X/4=X S Y=Y_%I_","
"RTN","ZOSVMSM",80,0)
 Q
"RTN","ZOSVMSM",81,0)
DEVOK ;
"RTN","ZOSVMSM",82,0)
 ;X=Device $I, Y=0 if available, Y=Job # if owned,
"RTN","ZOSVMSM",83,0)
 ;Y=-1 if device is undefined.
"RTN","ZOSVMSM",84,0)
 G RES:$G(X1)="RES" I $E(X)="/"!($E(X)="\") S Y=0 Q
"RTN","ZOSVMSM",85,0)
 I X=2 S Y=0 Q
"RTN","ZOSVMSM",86,0)
 I X'?1.N!(X'>0!(X'<1024)) S Y=-1 Q
"RTN","ZOSVMSM",87,0)
 N %
"RTN","ZOSVMSM",88,0)
 I $$VERSION(1)["NT" D DVOPN Q
"RTN","ZOSVMSM",89,0)
 ;
"RTN","ZOSVMSM",90,0)
 I $$V3 S %=$V($V(44)+8,-3,2)+$V(44),%=$V($V($V(44)+10,-3,2)*5+%),Y=$V(%+X+X,-3,2),Y=$S(Y=0:0,Y#4=0:Y/4,1:-1)
"RTN","ZOSVMSM",91,0)
 E  S %=$V(5,-5,0),Y=$V(%+X+X,-3,2),Y=$S(Y=0:0,Y#4=0:Y/4+$V(272,-4),1:-1)
"RTN","ZOSVMSM",92,0)
 I 'Y D DVOPN Q
"RTN","ZOSVMSM",93,0)
 S:Y=$J Y=0 Q
"RTN","ZOSVMSM",94,0)
DVOPN S $ZT="DVERR",Y=0 Q:$D(%ZTIO)
"RTN","ZOSVMSM",95,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZOSVMSM",96,0)
 O X::$S($D(%ZISTO):%ZISTO,1:0) E  S Y=999 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZOSVMSM",97,0)
 L:$D(%ZISLOCK) -@%ZISLOCK
"RTN","ZOSVMSM",98,0)
 S Y=0 I '$D(%ZISCHK)!$S($D(%ZIS)#2:(%ZIS["T"),1:0) C X Q
"RTN","ZOSVMSM",99,0)
 S:X]"" IO(1,X)="" Q
"RTN","ZOSVMSM",100,0)
DVERR I $ZE["OPENERR" S Y=-1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZOSVMSM",101,0)
 I $ZE["<NODEV>" S Y=-1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZOSVMSM",102,0)
 ZQ
"RTN","ZOSVMSM",103,0)
RES S Y=0,%ZISD0=$O(^%ZISL(3.54,"B",X,0))
"RTN","ZOSVMSM",104,0)
 I '%ZISD0 S Y=-1,%ZISD0=%O(^%ZIS(1,"C",X)) Q:'%ZISD0  Q:'$D(^%ZIS(1,+%ZISD0,0))  Q:$P(^(0),"^")'=X  Q:'$D(^("TYPE"))  Q:^("TYPE")'="RES"  S Y=0 Q
"RTN","ZOSVMSM",105,0)
 S X1=$S($D(^%ZISL(3.54,+%ZISD0,0)):^(0),1:"")
"RTN","ZOSVMSM",106,0)
 I $P(X1,"^",2)&(X=$P(X1,"^")) S Y=0 Q
"RTN","ZOSVMSM",107,0)
 S Y=999 F %ZISD1=0:0 S %ZISD1=$O(^%ZISL(3.54,%ZISD0,1,%ZISD1)) Q:%ZISD1'>0  I $D(^(%ZISD1,0)) S Y=$P(^(0),"^",3) Q
"RTN","ZOSVMSM",108,0)
 K %ZISD0,%ZISD1
"RTN","ZOSVMSM",109,0)
 Q
"RTN","ZOSVMSM",110,0)
V2CL1 F %=0:0 Q:$ZA<0  R %X:5 Q:%X']""  F %1=0:0 S %1=$L(%Y),%Y=%Y_$E(%X,1,255-%1),%X=$E(%X,256-%1,$L(%X)),%1=$F(%Y,%ZCR) Q:%1'>0  S %2=$E(%Y,$A(%Y)=10+1,%1-2),%Y=$E(%Y,%1,$L(%Y)) D V2CL2
"RTN","ZOSVMSM",111,0)
 I %Y]"" S %2=$E(%Y,$A(%Y)=10+1,$L(%Y)) D V2CL2
"RTN","ZOSVMSM",112,0)
 C 2:256 K IO(1,2) D CLOSE^ZISPL1 K %Y,%X,%1,ZOSFV
"RTN","ZOSVMSM",113,0)
 Q
"RTN","ZOSVMSM",114,0)
V2CL2 S %1=$F(%2,$C(12)) I %1>0 S %=%+1 D LIMIT:%Z1<% Q:%Z1<%  S ^XMBS(3.519,XS,2,%,0)="|TOP|",%2=$E(%2,1,%1-2)_$E(%2,%1,$L(%2))
"RTN","ZOSVMSM",115,0)
 S %=%+1,^XMBS(3.519,XS,2,%,0)=%2 Q
"RTN","ZOSVMSM",116,0)
 ;
"RTN","ZOSVMSM",117,0)
LIMIT S ^XMBS(3.519,XS,2,%,0)="*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***",$P(^XMB(3.51,%ZDA,0),"^",11)=1 Q
"RTN","ZOSVMSM",118,0)
 ;
"RTN","ZOSVMSM",119,0)
SET ;SET SPECIAL VARIABLES
"RTN","ZOSVMSM",120,0)
 S X=$H X ^%ZOSF("ZD") S DT=$E(Y,7,8)+200_$E(Y,1,2)_$E(Y,4,5)
"RTN","ZOSVMSM",121,0)
 Q
"RTN","ZOSVMSM",122,0)
GETENV ;Get enviroment  (UCI^VOL^NODE)
"RTN","ZOSVMSM",123,0)
 S Y=$P($ZU(0),",",1)_"^"_$P($ZU(0),",",2)_"^^"_$P($ZU(0),",",2)
"RTN","ZOSVMSM",124,0)
 Q
"RTN","ZOSVMSM",125,0)
VERSION(X) ;return OS version, X=1 - return OS
"RTN","ZOSVMSM",126,0)
 Q $S($G(X):$P($ZV,"Version "),1:$P($ZV,"Version ",2))
"RTN","ZOSVMSM",127,0)
V3() ;returns 1=version 3, 0=version 4
"RTN","ZOSVMSM",128,0)
 Q $P($ZV,"Version ",2)<4
"RTN","ZOSVMSM",129,0)
OSTYPE() ;Return 1 = PC/PLUS, 2 = NT, 3 = UNIX
"RTN","ZOSVMSM",130,0)
 N % S %=$$VERSION(1)
"RTN","ZOSVMSM",131,0)
 Q $S(%["MSM-PC/PLUS":1,%["Windows NT":2,1:3)
"RTN","ZOSVMSM",132,0)
 ;
"RTN","ZOSVMSM",133,0)
SETNM(X) ;Set name, Fall into SETENV
"RTN","ZOSVMSM",134,0)
SETENV ;Set enviroment
"RTN","ZOSVMSM",135,0)
 Q
"RTN","ZOSVMSM",136,0)
ZHDIF ;Display dif of two $$ZH^%MSMOPS's
"RTN","ZOSVMSM",137,0)
 S U="^" W !?2,"CPU=",$J($P(%ZH1,U)-$P(%ZH0,U),6,2),?14,"ET=",$J($P(%ZH1,U,7)-$P(%ZH0,U,7),6,2),?25,"PRD=",$J($P(%ZH1,U,3)-$P(%ZH0,U,3),4),?35,"LRD=",$J($P(%ZH1,U,2)-$P(%ZH0,U,2),6),?47,"LWT=",$J($P(%ZH1,U,4)-$P(%ZH0,U,4),5)
"RTN","ZOSVMSM",138,0)
 W ?58,"TI=",$J($P(%ZH1,U,5)-$P(%ZH0,U,5),4),?67,"TO=",$J($P(%ZH1,U,6)-$P(%ZH0,U,6),5)
"RTN","ZOSVMSM",139,0)
 Q
"RTN","ZOSVMSM",140,0)
LOGRSRC(OPT) ;record resource usage in ^XUCP
"RTN","ZOSVMSM",141,0)
 Q:$$OSTYPE'=1
"RTN","ZOSVMSM",142,0)
 N C,H,I,J,U
"RTN","ZOSVMSM",143,0)
 S C=",",U="^",%=$$ZH^%MSMOPS,H=$P($H,C)_C_($V(#46C,-3,4)*5.4925\1/100)
"RTN","ZOSVMSM",144,0)
 I $P(H,",",2)\1#100=0 S J=$$HTFM^XLFDT($H,1),I=$$FMADD^XLFDT(J,365)_U_J,^XTMP("XUCP",0)=I
"RTN","ZOSVMSM",145,0)
 S ^XTMP("XUCP",$ZU(0),$P(H,C),$J,$P(H,C,2))=$P(%,U)_U_$P(%,U,3)_U_$P(%,U,2)_U_$P(%,U,4,6)_U_OPT_U_($P(%,U,7)*100\1/100)
"RTN","ZOSVMSM",146,0)
 Q
"RTN","ZOSVMSM",147,0)
SETTRM(X) ;Set specified terminators.
"RTN","ZOSVMSM",148,0)
 U $I:(::::::::X)
"RTN","ZOSVMSM",149,0)
 Q 1
"RTN","ZTER1")
0^23^B8079001
"RTN","ZTER1",1,0)
%ZTER1 ;ISC-SF.SEA/JLI - ERROR TRAP TO LOG ERRORS (VAX LOCAL SYMBOL TABLE) ;01/29/97  16:26
"RTN","ZTER1",2,0)
 ;;8.0;KERNEL;**18,24,36,49**;JUL 10, 1995
"RTN","ZTER1",3,0)
VXD ;Record VAX DSM variables
"RTN","ZTER1",4,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"J")=$J_"^"_$ZC(%GETJPI,0,"PRCNAM")_"^"_$ZC(%GETJPI,0,"USERNAME")_"^"_%ZTER11I_"^"_$ZC(%SYSFAO,"!XL",$J),^%ZTER(1,+$H,1,%ZTER11N,"I")=$IO_"^"_$ZA_"^"_$ZB_"^"_$ZIO K %ZTER11I
"RTN","ZTER1",5,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"ZH")=$TR($ZH,",","^")
"RTN","ZTER1",6,0)
 I $STACK>100 G VERR
"RTN","ZTER1",7,0)
 S %ZTER111="%" F  D  S %ZTER111=$ZSORT(@%ZTER111) Q:%ZTER111=""  ;Code from DEC
"RTN","ZTER1",8,0)
 . Q:$E(%ZTER111,1,5)="%ZTER"
"RTN","ZTER1",9,0)
 . I $D(@%ZTER111)#2 D VNXT2
"RTN","ZTER1",10,0)
 . I $D(@%ZTER111)>9 D VNXT3
"RTN","ZTER1",11,0)
 . Q
"RTN","ZTER1",12,0)
 Q
"RTN","ZTER1",13,0)
 ;
"RTN","ZTER1",14,0)
VNXT2 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=%ZTER111,^("D")=$E(@%ZTER111,1,255)
"RTN","ZTER1",15,0)
 Q
"RTN","ZTER1",16,0)
VNXT3 S %ZTER11Q=%ZTER111
"RTN","ZTER1",17,0)
 F  S %ZTER11Q=$Q(@%ZTER11Q) Q:%ZTER11Q=""  S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=%ZTER11Q,^("D")=$E(@%ZTER11Q,1,255)
"RTN","ZTER1",18,0)
 Q
"RTN","ZTER1",19,0)
 ;
"RTN","ZTER1",20,0)
STACK ;Record the new $STACK variable
"RTN","ZTER1",21,0)
 I $ECODE]"" S $ZE=""
"RTN","ZTER1",22,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$ECODE",^("D")=$E($ECODE,1,255)
"RTN","ZTER1",23,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$ESTACK",^("D")=$ESTACK
"RTN","ZTER1",24,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$ETRAP",^("D")=$ETRAP
"RTN","ZTER1",25,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK",^("D")=$STACK
"RTN","ZTER1",26,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$QUIT",^("D")=$QUIT
"RTN","ZTER1",27,0)
 N %,%1,%2 S %2=$ST
"RTN","ZTER1",28,0)
 F %=0:1:$ST S %1=$E(1000+%,2,4) Q:$ST(%,"PLACE")["^%ZTER"  D
"RTN","ZTER1",29,0)
 . S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK("_%1_")",^("D")=$STACK(%)
"RTN","ZTER1",30,0)
 . S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK("_%1_",""ECODE"")",^("D")=$STACK(%,"ECODE")
"RTN","ZTER1",31,0)
 . S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK("_%1_",""PLACE"")",^("D")=$STACK(%,"PLACE")
"RTN","ZTER1",32,0)
 . S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK("_%1_",""MCODE"")",^("D")=$STACK(%,"MCODE")
"RTN","ZTER1",33,0)
 . S:$STACK(%,"ECODE")]"" %2=%
"RTN","ZTER1",34,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"LINE")=$STACK(%2,"MCODE")
"RTN","ZTER1",35,0)
 S $ECODE=""
"RTN","ZTER1",36,0)
 Q
"RTN","ZTER1",37,0)
 ;
"RTN","ZTER1",38,0)
VERR ;
"RTN","ZTER1",39,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"ZE2")="%DSM-E-ET, Error occurred in %ZTER, "_$ECODE
"RTN","ZTER1",40,0)
 HALT
"RTN","ZTLOAD5")
0^5^B9754236
"RTN","ZTLOAD5",1,0)
%ZTLOAD5 ;SEA/RDS-TaskMan: P I: Task Status ;11/08/96  14:55
"RTN","ZTLOAD5",2,0)
 ;;8.0;KERNEL;**49**;JUL 10, 1995
"RTN","ZTLOAD5",3,0)
 ;
"RTN","ZTLOAD5",4,0)
INPUT ;check input parameters for error conditions
"RTN","ZTLOAD5",5,0)
 N %,ZT1,ZT2,ZT3
"RTN","ZTLOAD5",6,0)
 S:$D(ZTSK)[0 ZTSK=""
"RTN","ZTLOAD5",7,0)
 I $D(ZTSK)>1 S %=ZTSK K ZTSK S ZTSK=%
"RTN","ZTLOAD5",8,0)
 S ZTSK(0)=0,ZTSK(1)=0,ZTSK(2)="Undefined"
"RTN","ZTLOAD5",9,0)
 I ZTSK<1!('$D(^%ZTSK(ZTSK,0))) Q
"RTN","ZTLOAD5",10,0)
 L +^%ZTSK(ZTSK) D SEARCH L -^%ZTSK(ZTSK)
"RTN","ZTLOAD5",11,0)
 Q
"RTN","ZTLOAD5",12,0)
 ;
"RTN","ZTLOAD5",13,0)
SEARCH ;search ^%ZTSCH for task
"RTN","ZTLOAD5",14,0)
 I $D(^%ZTSCH("TASK",ZTSK))#2 S ZTSK(0)=1,ZTSK(1)=2,ZTSK(2)="Active: Running" Q
"RTN","ZTLOAD5",15,0)
 S ZT1="" D  Q:ZTSK(0)
"RTN","ZTLOAD5",16,0)
 . F  S ZT1=$O(^%ZTSCH(ZT1)) Q:ZT1'>0  I $D(^%ZTSCH(ZT1,ZTSK))#2 S ZTSK(0)=1,ZTSK(1)=1,ZTSK(2)="Active: Pending" Q
"RTN","ZTLOAD5",17,0)
 S ZT1="" D  Q:ZTSK(0)
"RTN","ZTLOAD5",18,0)
 . F  S ZT1=$O(^%ZTSCH("IO",ZT1)),ZT2="" Q:ZT1=""  D  Q:ZTSK(0)
"RTN","ZTLOAD5",19,0)
 . . F  S ZT2=$O(^%ZTSCH("IO",ZT1,ZT2)) Q:ZT2=""  I $D(^(ZT2,ZTSK))#2 S ZTSK(0)=1,ZTSK(1)=1,ZTSK(2)="Active: Pending" Q
"RTN","ZTLOAD5",20,0)
 S ZT1="" D  Q:ZTSK(0)
"RTN","ZTLOAD5",21,0)
 . F  S ZT1=$O(^%ZTSCH("JOB",ZT1)) Q:ZT1=""  I $D(^(ZT1,ZTSK))#2 S ZTSK(0)=1,ZTSK(1)=1,ZTSK(2)="Active: Pending" Q
"RTN","ZTLOAD5",22,0)
 S ZT1="" D  Q:ZTSK(0)
"RTN","ZTLOAD5",23,0)
 . F  S ZT1=$O(^%ZTSCH("LINK",ZT1)),ZT2="" Q:ZT1=""  D  Q:ZTSK(0)
"RTN","ZTLOAD5",24,0)
 . . F  S ZT2=$O(^%ZTSCH("LINK",ZT1,ZT2)) Q:ZT2=""  I $D(^(ZT2,ZTSK))#2 S ZTSK(0)=1,ZTSK(1)=1,ZTSK(2)="Active: Pending" Q
"RTN","ZTLOAD5",25,0)
 S ZT1="" D  Q:ZTSK(0)
"RTN","ZTLOAD5",26,0)
 . F  S ZT1=$O(^%ZTSCH("C",ZT1)) Q:ZT1'>0  I $D(^(ZT1,ZTSK)) S ZTSK(0)=1,ZTSK(2)="Active: Pending" Q
"RTN","ZTLOAD5",27,0)
 ;
"RTN","ZTLOAD5",28,0)
FLAG ;If we didn't find it in a list, use status flag
"RTN","ZTLOAD5",29,0)
 I $D(^%ZTSK(ZTSK,.1))[0 Q
"RTN","ZTLOAD5",30,0)
 S ZT=$P(^%ZTSK(ZTSK,.1),U),ZTSK(0)=1
"RTN","ZTLOAD5",31,0)
 I ZT=2!(ZT=4) S ZTSK(1)=1,ZTSK(2)="Active: Pending" Q
"RTN","ZTLOAD5",32,0)
 I ZT=6 S ZTSK(1)=3,ZTSK(2)="Inactive: Finished" Q
"RTN","ZTLOAD5",33,0)
 I ZT="H"!(ZT="K") S ZTSK(1)=4,ZTSK(2)="Inactive: Available" Q
"RTN","ZTLOAD5",34,0)
 S ZTSK(1)=5,ZTSK(2)="Inactive: Interrupted"
"RTN","ZTLOAD5",35,0)
 Q
"RTN","ZTLOAD5",36,0)
 ;
"RTN","ZTLOAD5",37,0)
DESC ;Find tasks with matching description.
"RTN","ZTLOAD5",38,0)
 ;From %ZTLOAD input param DESC,LST
"RTN","ZTLOAD5",39,0)
 Q:$G(DESC)=""
"RTN","ZTLOAD5",40,0)
 N ZTSK,X D ENV
"RTN","ZTLOAD5",41,0)
 S:'$D(LST) LST="^TMP($J)" S ZTSK=0
"RTN","ZTLOAD5",42,0)
 F  S ZTSK=$O(^%ZTSK(ZTSK)) Q:ZTSK'>0  S X=$G(^%ZTSK(ZTSK,0)) D
"RTN","ZTLOAD5",43,0)
 . Q:$$SKIP()
"RTN","ZTLOAD5",44,0)
 . I $G(^%ZTSK(ZTSK,.03))=DESC S @LST@(ZTSK)=""
"RTN","ZTLOAD5",45,0)
 . Q
"RTN","ZTLOAD5",46,0)
 Q
"RTN","ZTLOAD5",47,0)
RTN ;Find tasks with matching routines
"RTN","ZTLOAD5",48,0)
 ;From %ZTLOAD input param RTN,LST
"RTN","ZTLOAD5",49,0)
 Q:$G(RTN)=""
"RTN","ZTLOAD5",50,0)
 N ZTSK,X D ENV
"RTN","ZTLOAD5",51,0)
 S:'$D(LST) LST="^TMP($J)" S:RTN'["^" RTN="^"_RTN S ZTSK=0 
"RTN","ZTLOAD5",52,0)
 F  S ZTSK=$O(^%ZTSK(ZTSK)) Q:ZTSK'>0  S X=$G(^%ZTSK(ZTSK,0)) D
"RTN","ZTLOAD5",53,0)
 . Q:$$SKIP()
"RTN","ZTLOAD5",54,0)
 . I $P(X,"^",1,2)=RTN S @LST@(ZTSK)="" Q
"RTN","ZTLOAD5",55,0)
 . I "^"_($P(X,"^",2))=RTN S @LST@(ZTSK)=""
"RTN","ZTLOAD5",56,0)
 . Q
"RTN","ZTLOAD5",57,0)
 Q
"RTN","ZTLOAD5",58,0)
OPTION ;Find tasks with matching option names
"RTN","ZTLOAD5",59,0)
 ;From %ZTLOAD input param OPNM, LST
"RTN","ZTLOAD5",60,0)
 Q:$G(OPNM)=""  N ZTSK,X,FLG D ENV
"RTN","ZTLOAD5",61,0)
 S:'$D(LST) LST="^TMP($J)" S ZTSK=0,FLG=(OPNM?1.N1"^"1A.ANP)
"RTN","ZTLOAD5",62,0)
 Q:'FLG&(OPNM'?1A.ANP)
"RTN","ZTLOAD5",63,0)
 F  S ZTSK=$O(^%ZTSK(ZTSK)) Q:ZTSK'>0  S X=$G(^%ZTSK(ZTSK,0)) D
"RTN","ZTLOAD5",64,0)
 . Q:$$SKIP()
"RTN","ZTLOAD5",65,0)
 . I FLG,$P(X,"^",8,9)=OPNM S @LST@(ZTSK)="" Q
"RTN","ZTLOAD5",66,0)
 . I $P(X,"^",1,2)="ZTSK^XQ1",$P(X,"^",9)=OPNM S @LST@(ZTSK)=""
"RTN","ZTLOAD5",67,0)
 . Q
"RTN","ZTLOAD5",68,0)
 Q
"RTN","ZTLOAD5",69,0)
SKIP() ;Screen on ZTKEY, UCI, DUZ, return: 0=OK, 1=Skip
"RTN","ZTLOAD5",70,0)
 Q:ZTKEY 0
"RTN","ZTLOAD5",71,0)
 Q:($P(X,U,11)_","_$P(X,U,12))'=ZTUCI 1
"RTN","ZTLOAD5",72,0)
 Q:$P(X,U,3)'=DUZ 1
"RTN","ZTLOAD5",73,0)
 Q 0
"RTN","ZTLOAD5",74,0)
ENV ;Setup
"RTN","ZTLOAD5",75,0)
 S ZTKEY=$D(^XUSEC("ZTMQ",DUZ)),U="^"
"RTN","ZTLOAD5",76,0)
 X ^%ZOSF("UCI") S ZTUCI=Y
"RTN","ZTLOAD5",77,0)
 Q
"RTN","ZTMS1")
0^2^B20410757
"RTN","ZTMS1",1,0)
%ZTMS1 ;SEA/RDS-TaskMan: Submanager, Part 3 (Loop & Get Task) ;11/08/96  15:53
"RTN","ZTMS1",2,0)
 ;;8.0;KERNEL;**36,49**;JUL 10, 1995
"RTN","ZTMS1",3,0)
 ;
"RTN","ZTMS1",4,0)
SUBMGR ;START--outer submanager loop
"RTN","ZTMS1",5,0)
 D GETTASK G:ZTSK'>0 QUIT^%ZTMS ;task locked
"RTN","ZTMS1",6,0)
 D PROCESS^%ZTMS2 G:$D(ZTQUIT) QUIT^%ZTMS
"RTN","ZTMS1",7,0)
 G SUBMGR
"RTN","ZTMS1",8,0)
 ;
"RTN","ZTMS1",9,0)
GETTASK ;SUBMGR--retain the partition; check Waiting Lists every 5 seconds
"RTN","ZTMS1",10,0)
 I ZTYPE="C" D C Q
"RTN","ZTMS1",11,0)
 D SUB(1) S ZTSK=0
"RTN","ZTMS1",12,0)
 F ZT=0:0 D  Q:$$EXIT  S %=$S($O(^%ZTSCH("JOB",0))>0:2,1:($$SUB(0)\2+5)),ZT=ZT+% H % ;Space out the SM loop
"RTN","ZTMS1",13,0)
 . S %ZTIME=$$H3($H),ZTSK=0 I $D(^%ZTSCH("STOP")) Q
"RTN","ZTMS1",14,0)
 . I $$BALANCE S ZT=ZT+5 Q
"RTN","ZTMS1",15,0)
 . D JOB,IOQ:'ZTSK
"RTN","ZTMS1",16,0)
 . Q
"RTN","ZTMS1",17,0)
 Q
"RTN","ZTMS1",18,0)
 ;
"RTN","ZTMS1",19,0)
EXIT() ;GETTASK--decide whether to exit retention loop
"RTN","ZTMS1",20,0)
 I ZTSK,$D(^%ZTSCH("NO-OPTION")),$P(^%ZTSK(ZTSK,0),"^",1,2)="ZTSK^XQ1" D
"RTN","ZTMS1",21,0)
 . S ^%ZTSCH(ZTDTH+60,ZTSK)=%ZTIO,ZTSK=0
"RTN","ZTMS1",22,0)
 . Q
"RTN","ZTMS1",23,0)
 I ZTSK G YES
"RTN","ZTMS1",24,0)
 I $D(^%ZTSCH("STOP")) G YES
"RTN","ZTMS1",25,0)
 I ZTPFLG("RT")>ZT G NO ;Retention time check
"RTN","ZTMS1",26,0)
 I $D(^%ZTSCH("JOB")) G NO ;Keep going if anything in JOB list
"RTN","ZTMS1",27,0)
 I $$SUB(0)>ZTPFLG("MIN") G YES ;Let extras go
"RTN","ZTMS1",28,0)
NO ;EXIT--Don't exit
"RTN","ZTMS1",29,0)
 L  Q 0
"RTN","ZTMS1",30,0)
 ;
"RTN","ZTMS1",31,0)
YES ;EXIT--adjust counter and set flags
"RTN","ZTMS1",32,0)
 D SUB(-1)
"RTN","ZTMS1",33,0)
 Q 1
"RTN","ZTMS1",34,0)
 ;
"RTN","ZTMS1",35,0)
C ;GETTASK--On C type volume sets, get tasks from Cross-Volume Job List
"RTN","ZTMS1",36,0)
 L +^%ZTSCH("C",ZTPAIR)
"RTN","ZTMS1",37,0)
 S ZTDTH="",^%ZTSCH("C",ZTPAIR)=0
"RTN","ZTMS1",38,0)
 F  S ZTDTH=$O(^%ZTSCH("C",ZTPAIR,ZTDTH)),ZTSK=0 Q:ZTDTH=""  D  Q:ZTSK
"RTN","ZTMS1",39,0)
 . F  S ZTSK=$O(^%ZTSCH("C",ZTPAIR,ZTDTH,ZTSK)) Q:ZTSK=""  D  Q:ZTSK
"RTN","ZTMS1",40,0)
 .. I $D(^%ZTSK(ZTSK,0))[0!'ZTSK D  Q
"RTN","ZTMS1",41,0)
 ... I ZTSK'=0,$D(^%ZTSK(ZTSK)) S $P(^(ZTSK,.1),U,1,3)="I^"_$H_"^G"
"RTN","ZTMS1",42,0)
 ... K ^%ZTSCH("C",ZTPAIR,ZTDTH,ZTSK) S ZTSK=0
"RTN","ZTMS1",43,0)
 ... Q
"RTN","ZTMS1",44,0)
 .. S %ZTIO=^%ZTSCH("C",ZTPAIR,ZTDTH,ZTSK),ZTQUEUED=.5
"RTN","ZTMS1",45,0)
 .. I %ZTIO]"" S ZTDEVN=1
"RTN","ZTMS1",46,0)
 .. L +^%ZTSK(ZTSK) K ^%ZTSCH("C",ZTPAIR,ZTDTH,ZTSK)
"RTN","ZTMS1",47,0)
 .. S ZTREC1=$G(^%ZTSK(ZTSK,.1))
"RTN","ZTMS1",48,0)
 .. I $P(ZTREC1,U,10)]"" S $P(^%ZTSK(ZTSK,.1),U,1,3)="D^"_$H_"^G"
"RTN","ZTMS1",49,0)
 .. Q
"RTN","ZTMS1",50,0)
 . Q
"RTN","ZTMS1",51,0)
 I $D(^%ZTSCH("C",ZTPAIR))=1 K ^%ZTSCH("C",ZTPAIR)
"RTN","ZTMS1",52,0)
 L -^%ZTSCH("C",ZTPAIR)
"RTN","ZTMS1",53,0)
 Q
"RTN","ZTMS1",54,0)
 ;
"RTN","ZTMS1",55,0)
BALANCE() ;GETTASK--check load balance, and wait while Manager waits
"RTN","ZTMS1",56,0)
 Q:ZTPAIR="" 0
"RTN","ZTMS1",57,0)
 I $G(^%ZTSCH("LOADA",ZTPAIR))  H 5 Q 1
"RTN","ZTMS1",58,0)
 Q 0
"RTN","ZTMS1",59,0)
 ;
"RTN","ZTMS1",60,0)
JOB ;GETTASK--search Partition Waiting List
"RTN","ZTMS1",61,0)
 S ZTSK="",ZTDTH=""
"RTN","ZTMS1",62,0)
J2 S ZTDTH=$O(^%ZTSCH("JOB",ZTDTH)),ZTSK="" I ZTDTH="" Q
"RTN","ZTMS1",63,0)
J3 L  S ZTSK=$O(^%ZTSCH("JOB",ZTDTH,ZTSK)) I ZTSK="" G J2
"RTN","ZTMS1",64,0)
 L +^%ZTSK(ZTSK):2 G J3:'$T I $D(^%ZTSCH("JOB",ZTDTH,ZTSK))[0 G J3
"RTN","ZTMS1",65,0)
 I $D(^%ZTSK(ZTSK,0))[0!'ZTSK D BADTASK G J3
"RTN","ZTMS1",66,0)
 S %ZTIO=^%ZTSCH("JOB",ZTDTH,ZTSK) I %ZTIO]"" S ZTDEVN=1
"RTN","ZTMS1",67,0)
 S ZTQUEUED=.5 K ^%ZTSCH("JOB",ZTDTH,ZTSK)
"RTN","ZTMS1",68,0)
 I $D(^%ZTSK(ZTSK,.1))#2,$P(^(.1),U,10)]"" S $P(^(.1),U,1,3)="D^"_$H_"^3",ZTQUEUED=0 G J3
"RTN","ZTMS1",69,0)
 Q
"RTN","ZTMS1",70,0)
 ;
"RTN","ZTMS1",71,0)
BADTASK ;JOB--unschedule tasks with bad numbers or incomplete records
"RTN","ZTMS1",72,0)
 S %ZTIO=^%ZTSCH("JOB",ZTDTH,ZTSK) I %ZTIO]"" S ZTDEVN=1
"RTN","ZTMS1",73,0)
 I ZTSK'=0,$D(^%ZTSK(ZTSK)) S $P(^(ZTSK,.1),U,1,3)="I^"_$H_U_3
"RTN","ZTMS1",74,0)
 S ZTQUEUED=.5 K ^%ZTSCH("JOB",ZTDTH,ZTSK)
"RTN","ZTMS1",75,0)
 I %ZTIO]"" D DEVLK(-1,%ZTIO)
"RTN","ZTMS1",76,0)
 Q
"RTN","ZTMS1",77,0)
 ;
"RTN","ZTMS1",78,0)
IOQ ;GETTASK--search Device Waiting List, Lock IO then DEV.
"RTN","ZTMS1",79,0)
 S ZTSK=0 I '$D(^%ZTSCH("IO")) Q
"RTN","ZTMS1",80,0)
 L +^%ZTSCH("IO"):1 Q:'$T
"RTN","ZTMS1",81,0)
 S ZTH=$$H3($H),ZTI=$G(^%ZTSCH("IO")) I $$DIFF(ZTH,ZTI,1)'>15 L -^%ZTSCH("IO") Q
"RTN","ZTMS1",82,0)
 S $P(^%ZTSCH("IO"),"^")=%ZTIME,%ZTIO=$P(ZTI,"^",2)
"RTN","ZTMS1",83,0)
I2 S %ZTIO=$O(^%ZTSCH("IO",%ZTIO)),ZTDTH="" I %ZTIO="" G IOX
"RTN","ZTMS1",84,0)
 I $D(^%ZTSCH("IO",%ZTIO))=1 K ^%ZTSCH("IO",%ZTIO) G I2
"RTN","ZTMS1",85,0)
 G I2:'$$DEVLK(1,%ZTIO)
"RTN","ZTMS1",86,0)
 S X=%ZTIO,X1=$G(^%ZTSCH("IO",%ZTIO)),ZTDEVOK=X D DEVOK^%ZOSV I Y D DEVLK(-1,%ZTIO) G I2
"RTN","ZTMS1",87,0)
I3 S ZTDTH=$O(^%ZTSCH("IO",%ZTIO,ZTDTH)),ZTSK=0 I ZTDTH="" D DEVLK(-1,%ZTIO) G I2
"RTN","ZTMS1",88,0)
I5 S ZTSK=$O(^%ZTSCH("IO",%ZTIO,ZTDTH,ZTSK)) I ZTSK'>0 G I3
"RTN","ZTMS1",89,0)
 L +^%ZTSK(ZTSK):2 G I5:('$T)
"RTN","ZTMS1",90,0)
 ;I $D(^%ZTSK(ZTSK,0))[0!'ZTSK S:ZTSK'=0&$D(^%ZTSK(ZTSK)) $P(^(ZTSK,.1),U,1,3)="I^"_$H_"^A" D DQ^%ZTM4 G I5
"RTN","ZTMS1",91,0)
 S ZTQUEUED=.5 D DQ^%ZTM4 I $G(^%ZTSK(ZTSK,0))="" L -^%ZTSK(ZTSK) G I5
"RTN","ZTMS1",92,0)
 I $P($G(^%ZTSK(ZTSK,.1)),U,10)]"" S $P(^(.1),U,1,3)="D^"_$H_"^A" S ZTQUEUED=0 L -^%ZTSK(ZTSK) G I5
"RTN","ZTMS1",93,0)
 S ZTH=0
"RTN","ZTMS1",94,0)
IOX S ^%ZTSCH("IO")=ZTH_"^"_%ZTIO L -^%ZTSCH("IO")
"RTN","ZTMS1",95,0)
 K ZTDEVOK,%ZISCHK
"RTN","ZTMS1",96,0)
 Q
"RTN","ZTMS1",97,0)
 ;
"RTN","ZTMS1",98,0)
DEVLK(X,ZIO) ;1=Lock/-1=unlock the ^%ZTSCH("DEV",ZIO) node, 0=set node only.
"RTN","ZTMS1",99,0)
 I X<0 K ^%ZTSCH("DEV",ZIO) L -^%ZTSCH("DEV",ZIO) Q
"RTN","ZTMS1",100,0)
 L +^%ZTSCH("DEV",ZIO):5 I '$T Q 0
"RTN","ZTMS1",101,0)
 I $D(^%ZTSCH("DEV",ZIO)) L -^%ZTSCH("DEV",ZIO) Q 0
"RTN","ZTMS1",102,0)
 S ^%ZTSCH("DEV",ZIO)=$$H3($H)
"RTN","ZTMS1",103,0)
 I X=0 L -^%ZTSCH("DEV",ZIO)
"RTN","ZTMS1",104,0)
 Q 1
"RTN","ZTMS1",105,0)
 ;
"RTN","ZTMS1",106,0)
SUB(X) ;Inc/Dec SUB or return SUB count
"RTN","ZTMS1",107,0)
 N % L +^%ZTSCH("SUB",ZTPFLG("HOME"))
"RTN","ZTMS1",108,0)
 I X>0 S ^(ZTPFLG("HOME"))=$S($G(^%ZTSCH("SUB",ZTPFLG("HOME")))<1:1,1:^(ZTPFLG("HOME"))+1)
"RTN","ZTMS1",109,0)
 I X<0 S ^(ZTPFLG("HOME"))=$S($G(^%ZTSCH("SUB",ZTPFLG("HOME")))<2:0,1:^(ZTPFLG("HOME"))-1)
"RTN","ZTMS1",110,0)
 I X=0 S %=^%ZTSCH("SUB",ZTPFLG("HOME"))
"RTN","ZTMS1",111,0)
 L -^%ZTSCH("SUB",ZTPFLG("HOME"))
"RTN","ZTMS1",112,0)
 Q:$D(%) % Q
"RTN","ZTMS1",113,0)
 ;
"RTN","ZTMS1",114,0)
DIFF(N,O,T) ;Diff in sec.
"RTN","ZTMS1",115,0)
 Q:$G(T) N-O ;For new seconds times
"RTN","ZTMS1",116,0)
 Q N-O*86400-$P(O,",",2)+$P(N,",",2)
"RTN","ZTMS1",117,0)
 ;
"RTN","ZTMS1",118,0)
H3(%) ;Convert $H to seconds.
"RTN","ZTMS1",119,0)
 Q 86400*%+$P(%,",",2)
"RTN","ZTMS1",120,0)
H0(%) ;Covert from seconds to $H
"RTN","ZTMS1",121,0)
 Q (%\86400)_","_(%#86400)
"RTN","ZTMS3")
0^9^B21599380
"RTN","ZTMS3",1,0)
%ZTMS3 ;SEA/RDS-TaskMan: Submanager, Part 5 (Run Task) ;11/25/96  13:36
"RTN","ZTMS3",2,0)
 ;;8.0;KERNEL;**1,18,36,49**;Jul 03, 1995
"RTN","ZTMS3",3,0)
 ;
"RTN","ZTMS3",4,0)
TASK ;SUBMGR--prepare and run task; cleanup after
"RTN","ZTMS3",5,0)
 ;
"RTN","ZTMS3",6,0)
BEFORE ;prepare task
"RTN","ZTMS3",7,0)
 ;submanager's variables
"RTN","ZTMS3",8,0)
 S ZTDEF=""
"RTN","ZTMS3",9,0)
 S X=$O(^%ZIS(14.7,"B",ZTPAIR,""))
"RTN","ZTMS3",10,0)
 I X]"",$D(^%ZIS(14.7,X,0))#2 S ZTDEF=^(0)
"RTN","ZTMS3",11,0)
 S DUZ=+$P(ZTREC,U,3)
"RTN","ZTMS3",12,0)
 S %ZTTV=ZTUCI_U_IOS_U_U_ZTSK_U_IO_U_IOT_U_ZTCPU_U_ZTNODE_U_DUZ_U_U_IOF_U_IOST_U_ZTPAIR_U_ZTYPE_U
"RTN","ZTMS3",13,0)
 S %ZTTV(0)=ZTRTN_U_$P(ZTREC,U,8,9)_U_$P(ZTREC,U,6)_U_ION_U_ZTUCI_U_$P(ZTREC,U,5)_U_$S($P(ZTREC,U,10)]"":$P(ZTREC,U,10),1:$P(ZTREC,U,3))_U_$J_U_ZTSYNCFL_U
"RTN","ZTMS3",14,0)
 S %ZTTV(2)=ZTPFLG("HOME")_U_ZTPFLG("MIN")_U_ZTPFLG("RT")
"RTN","ZTMS3",15,0)
 I $D(^%ZTSCH("LOGRSRC")) D
"RTN","ZTMS3",16,0)
 .S %ZTTV(1)="!"_$P(ZTREC,U,9)
"RTN","ZTMS3",17,0)
 .I %ZTTV(1)="!" S %ZTTV(1)="!"_$P(ZTRTN,U,2)
"RTN","ZTMS3",18,0)
 ;
"RTN","ZTMS3",19,0)
 ;external calls
"RTN","ZTMS3",20,0)
 D NOW^%DTC S DT=% ;DT is Date.time at this point.
"RTN","ZTMS3",21,0)
1 D SETNM^%ZOSV($E("BTask ",(ZTIO]"")+1,6)_(ZTSK#100000000))
"RTN","ZTMS3",22,0)
 ;
"RTN","ZTMS3",23,0)
 ;priority
"RTN","ZTMS3",24,0)
 S X=$P(ZTREC,U,15)
"RTN","ZTMS3",25,0)
 S X=$S(+X'=X:0,X'<1&(X'>10):X\1,1:0)
"RTN","ZTMS3",26,0)
 S Y=$S(IOS="":0,$D(^%ZIS(1,+IOS,0))[0:0,1:+$P(^(0),U,5))
"RTN","ZTMS3",27,0)
 S Y=$S(Y'<1&(Y'>10):Y\1,1:0)
"RTN","ZTMS3",28,0)
 S X=$S(Y:Y,X:X,$P(ZTDEF,U,4):$P(ZTDEF,U,4),1:10)
"RTN","ZTMS3",29,0)
 X ^%ZOSF("PRIORITY")
"RTN","ZTMS3",30,0)
 ;
"RTN","ZTMS3",31,0)
2 ;restore saved variables
"RTN","ZTMS3",32,0)
 S X=$O(^XTV(8989.3,1,4,"B",ZTCPU,0)) S:$P($G(^XTV(8989.3,1,4,+X,0)),U,6)="y" XRTL=ZTUCI
"RTN","ZTMS3",33,0)
 K %,%H,%I,%ZTI,%ZTIO,IO("C"),IO("T"),X,Y,ZTCPU,ZTDEF,ZTIOST,ZTIOT,ZTNODE,ZTPAIR,ZTPFLG,ZTREC,ZTREC2,ZTREC21,ZTREC25,ZTUCI,^TMP($J),^UTILITY($J),^XUTL("XQ",$J)
"RTN","ZTMS3",34,0)
 S DUZ(0)="" D RESTORE^%ZTMS4
"RTN","ZTMS3",35,0)
 ;
"RTN","ZTMS3",36,0)
 ;force values
"RTN","ZTMS3",37,0)
 S DUZ=+DUZ,DTIME=0,ZTDESC=$G(^%ZTSK(ZTSK,.03)),ZTDTH=$H
"RTN","ZTMS3",38,0)
 I DUZ(0)="" S DUZ(0)=$S($D(^VA(200,DUZ,0))#2:$P(^(0),U,4),1:"")
"RTN","ZTMS3",39,0)
 I $D(DUZ(2))[0 S DUZ(2)=$S($D(^VA(200,DUZ,2,0)):$O(^(0)),1:0)
"RTN","ZTMS3",40,0)
 S ^XUTL("XQ",$J,0)=DT,^("ZTSK")=ZTDESC
"RTN","ZTMS3",41,0)
 S X="DUZ" F  S X=$Q(@X) Q:X=""  I $D(@X) S ^XUTL("XQ",$J,$TR(X,""""))=@X
"RTN","ZTMS3",42,0)
 F X="DUZ","IO","IOBS","IOF","IOM","ION","IOS","IOSL","IOST","IOST(0)","IOT","IOXY","XQVOL" I $D(@X) S ^XUTL("XQ",$J,X)=@X
"RTN","ZTMS3",43,0)
3 ;
"RTN","ZTMS3",44,0)
 ;final checks & sets
"RTN","ZTMS3",45,0)
 I '$D(^%ZTSK(ZTSK)) S ZTTASK=0 D AFTER Q
"RTN","ZTMS3",46,0)
 I $S($D(^%ZTSK(ZTSK,.1))[0:0,1:$P(^(.1),U,10)]"") S $P(^%ZTSK(ZTSK,.1),U,1,3)="D^"_$H_"^4",ZTTASK=0 D AFTER Q
"RTN","ZTMS3",47,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,3)=5_U_$H_U
"RTN","ZTMS3",48,0)
 S ZTQUEUED=ZTSK,ZTSTAT="1 General error"
"RTN","ZTMS3",49,0)
 S ^%ZTSCH("TASK",ZTSK)=%ZTTV(0)_$H
"RTN","ZTMS3",50,0)
 ;
"RTN","ZTMS3",51,0)
RUN ;run task
"RTN","ZTMS3",52,0)
 I ^%ZOSF("OS")["MSM" D
"RTN","ZTMS3",53,0)
 . I $P($ZV,"Version ",2)]]"4.3.0" D PURGELST^%MSMOPS Q
"RTN","ZTMS3",54,0)
 . I ^%ZOSF("OS")["MSM-PC/PLUS",$P($ZV,"Version ",2)]]"4.0.11D" V 360:$J:2**$V($V(58,-5)+8,-3,2)-1:4 ZSYNC  Q
"RTN","ZTMS3",55,0)
 . Q
"RTN","ZTMS3",56,0)
 L
"RTN","ZTMS3",57,0)
 I $P(^%ZIS(14.7,+$O(^%ZIS(14.7,"B",$P(%ZTTV,U,13),"")),0),U,3)="Y" D LOGIN^%ZTMS4
"RTN","ZTMS3",58,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV(%ZTTV(1))
"RTN","ZTMS3",59,0)
 S DT=DT\1 S:ZTRTN="ZTSK^XQ1" ZTREQ="@"
"RTN","ZTMS3",60,0)
 X "N %ZTTV D @ZTRTN"
"RTN","ZTMS3",61,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$AFTR ZTMS")
"RTN","ZTMS3",62,0)
 I $P(^%ZIS(14.7,+$O(^%ZIS(14.7,"B",$P(%ZTTV,"^",13),"")),0),"^",3)="Y" D LOGOUT^%ZTMS4
"RTN","ZTMS3",63,0)
 L  ;Clear all user locks.
"RTN","ZTMS3",64,0)
 ;
"RTN","ZTMS3",65,0)
AFTER ;cleanup after task; reset partition
"RTN","ZTMS3",66,0)
 S U="^",ZTSK=$P(%ZTTV,U,4) L +^%ZTSK(ZTSK)
"RTN","ZTMS3",67,0)
 I $D(ZTTASK)[0 K ^%ZTSCH("TASK",ZTSK) S ZTQUEUED=.6,ZTTASK=1
"RTN","ZTMS3",68,0)
 S X=10 X ^%ZOSF("PRIORITY")
"RTN","ZTMS3",69,0)
 D SETNM^%ZOSV("Sub "_$J) ;Change name back
"RTN","ZTMS3",70,0)
 K ^TMP($J),^UTILITY($J),^XUTL("XQ",$J) I $T(XUTL^XUSCLEAN)]"" D XUTL^XUSCLEAN
"RTN","ZTMS3",71,0)
 S ZTUCI=$P(%ZTTV,U),IOS=$P(%ZTTV,U,2),(IO,IO(0),%ZTIO)=$P(%ZTTV,U,5),IOT=$P(%ZTTV,U,6),ZTCPU=$P(%ZTTV,U,7),ZTNODE=$P(%ZTTV,U,8)
"RTN","ZTMS3",72,0)
 S IOF=$P(%ZTTV,U,11),IOST=$P(%ZTTV,U,12),ZTPAIR=$P(%ZTTV,U,13),ZTYPE=$P(%ZTTV,U,14),ZTSYNCFL=$P(%ZTTV(0),U,11)
"RTN","ZTMS3",73,0)
 S ZTPFLG("HOME")=$P(%ZTTV(2),U,1),ZTPFLG("MIN")=$P(%ZTTV(2),U,2),ZTPFLG("RT")=$P(%ZTTV(2),U,3)
"RTN","ZTMS3",74,0)
 I $G(ZTSYNCFL)]"" S X=$$SYNCFLG^%ZTMS2($S($G(ZTSTAT):"S",1:"D"),ZTSYNCFL,IO,$G(ZTSTAT)) D SCHSYNC^%ZTMS2(ZTSYNCFL,IO):'$G(ZTSTAT)
"RTN","ZTMS3",75,0)
 D POST^%ZTMS4:ZTTASK,CLOSE
"RTN","ZTMS3",76,0)
 K (%ZTIO,%ZTTV,IO,IOF,IOS,IOST,IOT,U,ZTCPU,ZTNODE,ZTNONEXT,ZTPAIR,ZTPFLG,ZTQUEUED,ZTREQ,ZTSTOP,ZTUCI,ZTYPE),IO("C"),IO("T"),IO("ERROR"),IO("LASTERR")
"RTN","ZTMS3",77,0)
 S DUZ=0,DUZ(0)="@",ZTQUEUED=0
"RTN","ZTMS3",78,0)
 L  ;Clear all locks, -^%ZTSK(ZTSK)
"RTN","ZTMS3",79,0)
 Q
"RTN","ZTMS3",80,0)
 ;
"RTN","ZTMS3",81,0)
CLOSE ;RUN--close &/or close execute
"RTN","ZTMS3",82,0)
 I %ZTIO="" S ZTNONEXT=1 G CLX
"RTN","ZTMS3",83,0)
 N ZTUCI,ZTCPU,ZTNODE,IOCPU,%IO
"RTN","ZTMS3",84,0)
 I IOT="HFS"!(IOT="SPL") S ZTNONEXT=1
"RTN","ZTMS3",85,0)
 K IO("C") S:IOT'="TRM" IO("C")=1
"RTN","ZTMS3",86,0)
 S:$D(IO("CLOSE")) IO("T")=1
"RTN","ZTMS3",87,0)
 ;Here is the Lock and hang to allow IDCU ports to reset. See %ZTMS2.
"RTN","ZTMS3",88,0)
 I IOST["MINIOUT" S IO("C")=1 L +^%ZTSCH("NETMAIL",%ZTIO):60
"RTN","ZTMS3",89,0)
 I $D(IO(1,IO))#2 D ^%ZISC
"RTN","ZTMS3",90,0)
 I IOST["MINIOUT" H 6 ;Wait for terminal server to reset.
"RTN","ZTMS3",91,0)
 ;Unlock of all locks is done in clean
"RTN","ZTMS3",92,0)
 ;See that all devices are closed.
"RTN","ZTMS3",93,0)
CLX S %IO="" F  S %IO=$O(IO(1,%IO)) Q:%IO=""  I %IO'=IO K IO(1,%IO) C %IO
"RTN","ZTMS3",94,0)
 Q
"RTN","ZTMS3",95,0)
 ;
"RTN","ZUMSM")
0^11^B3712287
"RTN","ZUMSM",1,0)
ZU ;SF/GFT - For MSM, TIE ALL TERMINALS EXCEPT CONSOLE TO THIS ROUTINE!! ;12/03/96  08:09
"RTN","ZUMSM",2,0)
 ;;8.0;KERNEL;**13,42,49**;Jul 10, 1995
"RTN","ZUMSM",3,0)
 ;FOR MSM-DOS and MSM-UNIX
"RTN","ZUMSM",4,0)
EN S $ZT="ERR^ZU",ZUGUI2=$$GUI()
"RTN","ZUMSM",5,0)
 ;The next line keeps sign-on users from taking the last slot
"RTN","ZUMSM",6,0)
 ;It can be commented out if not needed.
"RTN","ZUMSM",7,0)
JOBCHK X ^%ZOSF("AVJ") I Y<3 W $C(7),!!,"** TROUBLE ** - ** CALL IRM NOW! **" G HALT
"RTN","ZUMSM",8,0)
 ;Bump up the partition size
"RTN","ZUMSM",9,0)
 D GETENV^%ZOSV S Y=$P(Y,"^",4),%=$O(^%ZIS(14.7,"B",Y,0)),Y=$G(^%ZIS(14.7,+%,0)),%K=$P(Y,"^",5) I %K>0 D INT^%PARTSIZ
"RTN","ZUMSM",10,0)
 G ^XUSG:$G(ZUGUI1),^XUS
"RTN","ZUMSM",11,0)
 ;
"RTN","ZUMSM",12,0)
G ;Entry point for GUI device.
"RTN","ZUMSM",13,0)
 S ZUGUI1=1 G EN
"RTN","ZUMSM",14,0)
 ;
"RTN","ZUMSM",15,0)
ERR S $ZT="HALT^ZU" L  ;Come here on error.
"RTN","ZUMSM",16,0)
 B 0 ;Turn off break
"RTN","ZUMSM",17,0)
 S %ZTERLGR=$ZR,%ZT("^XUTL(""XQ"",$J)")="" D ^%ZTER
"RTN","ZUMSM",18,0)
 I $G(IO)]"",$D(IO(1,IO)),$E($G(IOST))="P" U IO W @$S($D(IOF):IOF,1:"#")
"RTN","ZUMSM",19,0)
 I $G(IO(0))]"" U IO(0) W !!,"RECORDING THAT AN ERROR OCCURRED ---",!!?15,"Sorry 'bout that",!,*7,!?10,"$ZERROR=",$ZERROR
"RTN","ZUMSM",20,0)
 X ^%ZOSF("PROGMODE") Q:Y  S $ZT="HALT^ZU"
"RTN","ZUMSM",21,0)
 I $ZE'["<INRPT>" S XUERF="" G ^XUSCLEAN
"RTN","ZUMSM",22,0)
CTRLC I $D(IO)=11 U IO(0) W !,"--Interrupt Acknowledged",!
"RTN","ZUMSM",23,0)
 D KILL1^XUSCLEAN ;Clean up symbol table
"RTN","ZUMSM",24,0)
 ;
"RTN","ZUMSM",25,0)
CTRLC2 G:$G(^XUTL("XQ",$J,"T"))<2 ^XUSCLEAN
"RTN","ZUMSM",26,0)
 S ^XUTL("XQ",$J,"T")=1,XQY=^(1),XQY0=$P(XQY,"^",2,99)
"RTN","ZUMSM",27,0)
 G:$P(XQY0,"^",4)'="M" CTRLC2
"RTN","ZUMSM",28,0)
 S XQPSM=$P(XQY,"^",1),XQY=+XQPSM,XQPSM=$P(XQPSM,XQY,2,3)
"RTN","ZUMSM",29,0)
 G:'XQY ^XUSCLEAN
"RTN","ZUMSM",30,0)
 S $ZT="ERR^ZU" G M1^XQ
"RTN","ZUMSM",31,0)
 ;
"RTN","ZUMSM",32,0)
HALT S $ZT="" I $D(^XUTL("XQ",$J)) D BYE^XUSCLEAN
"RTN","ZUMSM",33,0)
 HALT
"RTN","ZUMSM",34,0)
 ;
"RTN","ZUMSM",35,0)
GUI() ;Test if under GUI
"RTN","ZUMSM",36,0)
 Q "" ;Just say No.
"RTN","ZUMSM",37,0)
 S $ZT="GUIX",X="" G:$PD'=1 GUIX
"RTN","ZUMSM",38,0)
 S X=$G(^$DI($PD,"PLATFORM"))
"RTN","ZUMSM",39,0)
GUIX Q X
"UP",200,200.05,-1)
200^USC1
"UP",200,200.05,0)
200.05
"VER")
8.0^21.0
"^DD",3.5,3.5,1,0)
$I^RFX^^0;2^K:$L(X)>30 X I $D(X) N % S %=$G(^("TYPE")) I $D(^%ZIS(1,"C",X)) D EN^DDIOL(" This $I in use by other Devices."_$C(7),"","?30") K:%="RES" X
"^DD",3.5,3.5,1,.1)
DEVICE $I
"^DD",3.5,3.5,1,1,0)
^.1
"^DD",3.5,3.5,1,1,1,0)
3.5^C
"^DD",3.5,3.5,1,1,1,1)
S ^%ZIS(1,"C",$E(X,1,30),DA)=""
"^DD",3.5,3.5,1,1,1,2)
K ^%ZIS(1,"C",$E(X,1,30),DA)
"^DD",3.5,3.5,1,1,2,0)
3.5^AD^MUMPS
"^DD",3.5,3.5,1,1,2,1)
I $D(ZISOX) K:'$D(^%ZIS(1,DA,0))!(ZISOX=X) ZISOX I $D(ZISOX) K:$P(^(0),U,2)="" ZISOX I $D(ZISOX) K ^%ZIS(1,"G","SYS."_$P(^(0),U,9)_"."_ZISOX,DA) X ^DD(3.5,1,9.2) K ZISOX
"^DD",3.5,3.5,1,1,2,2)
S ZISOX=X
"^DD",3.5,3.5,1,1,2,"%D",0)
^^1^1^2920518^^^^
"^DD",3.5,3.5,1,1,2,"%D",1,0)
This sets up the 'G' cross-reference used to identify the primary device.
"^DD",3.5,3.5,1,1,3,0)
3.5^ACPU^MUMPS
"^DD",3.5,3.5,1,1,3,1)
S:$S($D(^%ZIS(1,DA,0)):$S(X]"":1,1:0),1:0) ^%ZIS(1,"CPU",$P(^(0),U,9)_"."_X,DA)=""
"^DD",3.5,3.5,1,1,3,2)
K:$S($D(^%ZIS(1,DA,0)):$S(X]"":1,1:0),1:0) ^%ZIS(1,"CPU",$P(^(0),U,9)_"."_X,DA)
"^DD",3.5,3.5,1,1,3,"%D",0)
^^2^2^2920518^^^^
"^DD",3.5,3.5,1,1,3,"%D",1,0)
This sets up the 'CPU' cross-reference used to find devices
"^DD",3.5,3.5,1,1,3,"%D",2,0)
that have a particular $I on a specified VOLUME SET(CPU).
"^DD",3.5,3.5,1,1,4,0)
^^TRIGGER^3.54^.01
"^DD",3.5,3.5,1,1,4,1)
X ^DD(3.5,1,1,4,1.3) I X S X=DIV X ^DD(3.5,1,1,4,89.2) S Y(101)=$S($D(^%ZISL(3.54,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S DIU=X K Y S X=DIV S X=DIV X ^DD(3.5,1,1,4,1.4)
"^DD",3.5,3.5,1,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^%ZIS(1,D0,"TYPE")):^("TYPE"),1:"") S X=$P(Y(1),U,1),X=X S X=X="RES"
"^DD",3.5,3.5,1,1,4,1.4)
S DIH=$S($D(^%ZISL(3.54,DIV(0),0)):^(0),1:""),DIV=X I $D(^(0)) S $P(^(0),U,1)=DIV,DIH=3.54,DIG=.01 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",3.5,3.5,1,1,4,2)
Q
"^DD",3.5,3.5,1,1,4,89.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^%ZIS(1,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S X=X K DIC S DIC="^%ZISL(3.54,",DIC(0)="NMFL",X=""""_X_"""" D ^DIC S (D,D0,DIV(0))=+Y
"^DD",3.5,3.5,1,1,4,"%D",0)
^^4^4^2930414^^^^
"^DD",3.5,3.5,1,1,4,"%D",1,0)
Whenever the $I is edited, the new value of $I is triggered
"^DD",3.5,3.5,1,1,4,"%D",2,0)
into the name field of the RESOURCE File(#3.54).
"^DD",3.5,3.5,1,1,4,"%D",3,0)
This ensures that an entry in the RESOURCE File(#3.54)
"^DD",3.5,3.5,1,1,4,"%D",4,0)
is established for every device entry of TYPE RESOURCE.
"^DD",3.5,3.5,1,1,4,"CREATE CONDITION")
INTERNAL(#2)="RES"
"^DD",3.5,3.5,1,1,4,"CREATE VALUE")
#1
"^DD",3.5,3.5,1,1,4,"DELETE VALUE")
NO EFFECT
"^DD",3.5,3.5,1,1,4,"DIC")
LOOKUP
"^DD",3.5,3.5,1,1,4,"DT")
2931029
"^DD",3.5,3.5,1,1,4,"FIELD")
#1:RESOURCE:#.01
"^DD",3.5,3.5,1,3)
on DSM, M+, and MSM $I must be numeric if it is for a local port.
"^DD",3.5,3.5,1,4)
W !,"If the '$I' value is zero ('0'), then",!?4,"the Device will be understood to be a slave device on the current port",!
"^DD",3.5,3.5,1,9.2)
I X]"",$P(^%ZIS(1,DA,0),U,11) X:$D(^%ZIS(1,"G","SYS."_$P(^(0),U,9)_"."_X))>9 ^DD(3.5,1,9.3) I $P(^%ZIS(1,DA,0),U,11) S ^%ZIS(1,"G","SYS."_$P(^(0),U,9)_"."_X,DA)=""
"^DD",3.5,3.5,1,9.3)
S $P(^%ZIS(1,DA,0),U,11)="" W !,*7,"CONFLICT OCCURRED.  DELETING "_$P(^DD(3.5,1.95,0),U,1)_" FROM DEVICE "_$P(^%ZIS(1,DA,0),U,1)
"^DD",3.5,3.5,1,21,0)
^^6^6^2940718^^^^
"^DD",3.5,3.5,1,21,1,0)
This field holds the Hardware port name that the OS can identify when
"^DD",3.5,3.5,1,21,2,0)
referencing a port on a CPU.
"^DD",3.5,3.5,1,21,3,0)
On layered systems where opening of host files is supported,
"^DD",3.5,3.5,1,21,4,0)
this field may hold the host file name.
"^DD",3.5,3.5,1,21,5,0)
When defining a spool device entry(TYPE="SPL") on VAX DSM or MSM-Unix,
"^DD",3.5,3.5,1,21,6,0)
enter the name of directory where spool host files will be created.
"^DD",3.5,3.5,1,"DT")
2931029
"^DD",3.5,3.5,2,0)
TYPE^RS^TRM:TERMINAL;OTH:OTHER;MT:MAGTAPE;SDP:SDP;SPL:SPOOL;BAR:BARCODE READER;HFS:HOST FILE SERVER;VTRM:VIRTUAL TERMINAL;HG:HUNT GROUP;RES:RESOURCES;CHAN:NETWORK CHANNEL;IMPC:IMAGING WORK STATION;^TYPE;1^Q
"^DD",3.5,3.5,2,.1)

"^DD",3.5,3.5,2,1,0)
^.1
"^DD",3.5,3.5,2,1,1,0)
^^TRIGGER^3.54^.01
"^DD",3.5,3.5,2,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X="RES" I X S X=DIV X ^DD(3.5,2,1,1,89.2) ;S Y(101)=$S($D(^%ZISL(3.54,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S DIU=X K Y X ^DD(3.5,2,1,1,1.1) X ^DD(3.5,2,1,1,1.4)
"^DD",3.5,3.5,2,1,1,1.1)
S X=DIV S Y(1)=$S($D(^%ZIS(1,D0,0)):^(0),1:"") S X=$P(Y(1),U,2)
"^DD",3.5,3.5,2,1,1,1.4)
S DIH=$S($D(^%ZISL(3.54,DIV(0),0)):^(0),1:""),DIV=X I $D(^(0)) S $P(^(0),U,1)=DIV,DIH=3.54,DIG=.01 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",3.5,3.5,2,1,1,2)
Q
"^DD",3.5,3.5,2,1,1,89.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^%ZIS(1,D0,0)):^(0),1:"") S X=$P(Y(1),U,2) K DIC S DIC="^%ZISL(3.54,",DIC(0)="NMFL" D ^DIC S (D,D0,DIV(0))=+Y
"^DD",3.5,3.5,2,1,1,"%D",0)
^^5^5^2930414^
"^DD",3.5,3.5,2,1,1,"%D",1,0)
Whenever the TYPE field of the DEVICE File(#3.5) is changed
"^DD",3.5,3.5,2,1,1,"%D",2,0)
to TYPE RESOURCE, the value of $I is triggered
"^DD",3.5,3.5,2,1,1,"%D",3,0)
into the NAME field of the RESOURCE File(#3.54).
"^DD",3.5,3.5,2,1,1,"%D",4,0)
This ensures that an entry in the RESOURCE File(#3.54)
"^DD",3.5,3.5,2,1,1,"%D",5,0)
is established for every device entry of TYPE RESOURCE.
"^DD",3.5,3.5,2,1,1,"CREATE CONDITION")
INTERNAL(#2)="RES"
"^DD",3.5,3.5,2,1,1,"CREATE VALUE")
#1
"^DD",3.5,3.5,2,1,1,"DELETE VALUE")
NO EFFECT
"^DD",3.5,3.5,2,1,1,"DIC")
LOOKUP
"^DD",3.5,3.5,2,1,1,"DT")
2921015
"^DD",3.5,3.5,2,1,1,"FIELD")
#1:RESOURCE
"^DD",3.5,3.5,2,1,2,0)
^^TRIGGER^3.5^35
"^DD",3.5,3.5,2,1,2,1)
X ^DD(3.5,2,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^%ZIS(1,D0,1)):^(1),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV S X="1" X ^DD(3.5,2,1,2,1.4)
"^DD",3.5,3.5,2,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X,Y(3)=$S($D(^%ZIS(1,D0,1)):^(1),1:""),X=Y(0) S X=X="RES",Y(1)=X,Y(2)=X S X=$P(Y(3),U,10) S X=X="",Y=X,X=Y(1),X=X&Y
"^DD",3.5,3.5,2,1,2,1.4)
S DIH=$S($D(^%ZIS(1,DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,10)=DIV,DIH=3.5,DIG=35 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",3.5,3.5,2,1,2,2)
Q
"^DD",3.5,3.5,2,1,2,3)
Set the default value.
"^DD",3.5,3.5,2,1,2,"%D",0)
^^3^3^2961212^
"^DD",3.5,3.5,2,1,2,"%D",1,0)
Whenever a device entry is created with a TYPE RESOURCE, a default value
"^DD",3.5,3.5,2,1,2,"%D",2,0)
of '1' is triggered into the AVAILABLE SLOTS field of the RESOURCE
"^DD",3.5,3.5,2,1,2,"%D",3,0)
File(#3.54).
"^DD",3.5,3.5,2,1,2,"CREATE CONDITION")
(INTERNAL(TYPE)="RES")&(INTERNAL(#35)="")
"^DD",3.5,3.5,2,1,2,"CREATE VALUE")
"1"
"^DD",3.5,3.5,2,1,2,"DELETE VALUE")
NO EFFECT
"^DD",3.5,3.5,2,1,2,"DT")
2961212
"^DD",3.5,3.5,2,1,2,"FIELD")
#35
"^DD",3.5,3.5,2,9)
@
"^DD",3.5,3.5,2,21,0)
24^^44^44^2921109^^^^
"^DD",3.5,3.5,2,21,1,0)
This field has the general type of device on the CPU.  'TRM' is the most
"^DD",3.5,3.5,2,21,2,0)
common entry.
"^DD",3.5,3.5,2,21,3,0)
      TRM -- Terminal devices such as most crts and printers
"^DD",3.5,3.5,2,21,4,0)
             should be associated with a corresponding device entry
"^DD",3.5,3.5,2,21,5,0)
             with a type of 'TRM'.
"^DD",3.5,3.5,2,21,6,0)
      OTH -- Other devices that do not fit a particular category
"^DD",3.5,3.5,2,21,7,0)
             should be given a type of 'OTH'.
"^DD",3.5,3.5,2,21,8,0)
       MT -- Magtape device should have a type of 'MT'.
"^DD",3.5,3.5,2,21,9,0)
      SDP -- Sequential Disk Processor is a predefined allocated
"^DD",3.5,3.5,2,21,10,0)
             disk space used for sequential processing.  On DSM-11
"^DD",3.5,3.5,2,21,11,0)
             and M/11+ systems, devices 59 thru 62 are reserved for SDP.
"^DD",3.5,3.5,2,21,12,0)
             On MSM, the Sequential Block Processor(SBP) is essentially
"^DD",3.5,3.5,2,21,13,0)
             the same as SDP.
"^DD",3.5,3.5,2,21,14,0)
      SPL -- Spool device is a predefined allocated disk space similar
"^DD",3.5,3.5,2,21,15,0)
             to SDP.  However, access to the spool device can be achieved
"^DD",3.5,3.5,2,21,16,0)
             from multiple users simultaneously.
"^DD",3.5,3.5,2,21,17,0)
      BAR -- Bar code reader.  This type identifies the device
"^DD",3.5,3.5,2,21,18,0)
             as a barcode reader.
"^DD",3.5,3.5,2,21,19,0)
      HFS -- Host File Server is only available on mumps platforms
"^DD",3.5,3.5,2,21,20,0)
             that exists on a layered system(e.g.:  DOS, VMS, UNIX, etc.).
"^DD",3.5,3.5,2,21,21,0)
             This type and the associated functionality provides
"^DD",3.5,3.5,2,21,22,0)
             the vehicle to read and write to host level files.
"^DD",3.5,3.5,2,21,23,0)
             Instead of directing reports to a printer, the results
"^DD",3.5,3.5,2,21,24,0)
             could be placed into a DOS, VMS, or UNIX file.  This would
"^DD",3.5,3.5,2,21,25,0)
             allow a non-mumps based statistical package or spreadsheet
"^DD",3.5,3.5,2,21,26,0)
             to use data produced by the mumps based application by
"^DD",3.5,3.5,2,21,27,0)
             simply extracting data from the host file.
"^DD",3.5,3.5,2,21,28,0)
     VTRM -- Virtual Terminal Server devices are those that are associated
"^DD",3.5,3.5,2,21,29,0)
             with a dynamically created mumps port identification($I).
"^DD",3.5,3.5,2,21,30,0)
             A generic device entry with a device type of 'VTRM'
"^DD",3.5,3.5,2,21,31,0)
             can be established for users who log into the system
"^DD",3.5,3.5,2,21,32,0)
             through terminal servers.
"^DD",3.5,3.5,2,21,33,0)
       HG -- Hunt Groups are groups of devices that share a purpose
"^DD",3.5,3.5,2,21,34,0)
             for printing common reports.  Printers in the same Hunt Group
"^DD",3.5,3.5,2,21,35,0)
             are usually expected to be in the same general proximity.
"^DD",3.5,3.5,2,21,36,0)
             Reports may be directed to a Hunt Group or to one of its
"^DD",3.5,3.5,2,21,37,0)
             members.  If a member is not available, the next available
"^DD",3.5,3.5,2,21,38,0)
             device in the Hunt Group is selected.
"^DD",3.5,3.5,2,21,39,0)
      RES -- Resources is a type used for special sequencing of tasks
"^DD",3.5,3.5,2,21,40,0)
             that do not require a particular device.
"^DD",3.5,3.5,2,21,41,0)
     CHAN -- Network Channels are high speed devices that use network
"^DD",3.5,3.5,2,21,42,0)
             protocols such as DECNET and TCP/IP.
"^DD",3.5,3.5,2,21,43,0)
     IMPC -- Imaging work station device(reserved for future use for
"^DD",3.5,3.5,2,21,44,0)
             DHCP Imaging Project).
"^DD",3.5,3.5,2,"DT")
2961212
"^DD",3.5,3.5,35,0)
RESOURCE SLOTS^NJ3,0^^1;10^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",3.5,3.5,35,1,0)
^.1
"^DD",3.5,3.5,35,1,1,0)
^^TRIGGER^3.54^1
"^DD",3.5,3.5,35,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 X ^DD(3.5,35,1,1,89.2) S Y(101)=$S($D(^%ZISL(3.54,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S DIU=X K Y X ^DD(3.5,35,1,1,1.1) X ^DD(3.5,35,1,1,1.4)
"^DD",3.5,3.5,35,1,1,1.1)
S X=DIV X ^DD(3.5,35,1,1,49.4) S Y=X,X=Y(1),X=X-Y S D0=I(0,0) S D1=I(101,0)
"^DD",3.5,3.5,35,1,1,1.4)
S DIH=$S($D(^%ZISL(3.54,DIV(0),0)):^(0),1:""),DIV=X I $D(^(0)) S $P(^(0),U,2)=DIV,DIH=3.54,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",3.5,3.5,35,1,1,2)
Q
"^DD",3.5,3.5,35,1,1,49.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(2)=$S($D(^%ZIS(1,D0,0)):^(0),1:"") S X=DIV,Y(1)=X S X=$P(Y(2),U,2) K DIC S DIC="^%ZISL(3.54,",DIC(0)="NMF" D ^DIC S (D,D0)=+Y
"^DD",3.5,3.5,35,1,1,49.3)
X ^DD(3.5,35,1,1,49.2) S I(100,0)=$S($D(D0):D0,1:""),I(101,0)=$S($D(D1):D1,1:""),Y(101)=X,Y(202)=""
"^DD",3.5,3.5,35,1,1,49.4)
X ^DD(3.5,35,1,1,49.3) X "F D1=0:0 S D1=$O(^%ZISL(3.54,D0,1,D1)) Q:D1'>0  S:$S($D(^(D1,0)):$P(^(0),U,1),1:"""")'?."" "" Y(202)=Y(202)+1" S D(1)=D1 S X=+Y(202)
"^DD",3.5,3.5,35,1,1,89.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^%ZIS(1,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S X=X K DIC S DIC="^%ZISL(3.54,",DIC(0)="NMF" D ^DIC S (D,D0,DIV(0))=+Y
"^DD",3.5,3.5,35,1,1,"CREATE VALUE")
(#35)-(#1:RESOURCE:COUNT(#2))
"^DD",3.5,3.5,35,1,1,"DELETE VALUE")
NO EFFECT
"^DD",3.5,3.5,35,1,1,"DIC")
LOOKUP
"^DD",3.5,3.5,35,1,1,"DT")
2921015
"^DD",3.5,3.5,35,1,1,"FIELD")
#1:RESOURCE:AVAILABLE SLOTS
"^DD",3.5,3.5,35,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",3.5,3.5,35,5,1,0)
3.5^2^2
"^DD",3.5,3.5,35,9)
^
"^DD",3.5,3.5,35,21,0)
^^3^3^2920515^^^^
"^DD",3.5,3.5,35,21,1,0)
Enter a value that will identify the limit of concurrent jobs
"^DD",3.5,3.5,35,21,2,0)
that may own the same resource.  If no data is entered, the
"^DD",3.5,3.5,35,21,3,0)
device handler will use a default value of 1.
"^DD",3.5,3.5,35,"DT")
2940422
"^DD",19,19,.01,0)
NAME^RFX^^0;1^D CHKNAME^XQ5 K:$L(X)>30!(+X=X)!($L(X)<3)!'(X'?1P.E)!(X'?.ANP) X
"^DD",19,19,.01,.1)
A unique name, which is preceded by the package abbreviation
"^DD",19,19,.01,1,0)
^.1
"^DD",19,19,.01,1,1,0)
19^B
"^DD",19,19,.01,1,1,1)
S ^DIC(19,"B",$E(X,1,30),DA)=""
"^DD",19,19,.01,1,1,2)
K ^DIC(19,"B",$E(X,1,30),DA)
"^DD",19,19,.01,1,2,0)
^^TRIGGER^19^3.6
"^DD",19,19,.01,1,2,1)
X ^DD(19,.01,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(19,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(19,.01,1,2,1.4)
"^DD",19,19,.01,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DIC(19,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,5),0)):"",1:$P(^(0),U,1))=""
"^DD",19,19,.01,1,2,1.4)
S DIH=$S($D(^DIC(19,DIV(0),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,4,99))  S DIH=DIH_U" S %=$P(DIH,U,6,999),DIU=$P(DIH,U,5),^(0)=$P(DIH,U,1,4)_U_DIV_$S(%]"":U_%,1:""),DIH=19,DIG=3.6 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",19,19,.01,1,2,2)
Q
"^DD",19,19,.01,1,2,3)
This trigger is used to record the user who created this option.
"^DD",19,19,.01,1,2,"%D",0)
^^2^2^2920512^
"^DD",19,19,.01,1,2,"%D",1,0)
This trigger is used to record the user who created this option at the
"^DD",19,19,.01,1,2,"%D",2,0)
time that the name was created.
"^DD",19,19,.01,1,2,"CREATE CONDITION")
CREATOR=""
"^DD",19,19,.01,1,2,"CREATE VALUE")
S X=DUZ
"^DD",19,19,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",19,19,.01,1,2,"DT")
2890908
"^DD",19,19,.01,1,2,"FIELD")
CREATOR
"^DD",19,19,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",19,19,.01,4)
W "THIS IS DANILA'S EXECUTABLE HELP."
"^DD",19,19,.01,7.5)

"^DD",19,19,.01,21,0)
^^4^4^2910226^^^^
"^DD",19,19,.01,21,1,0)
The formal name of an option, prefaced with the package name.
"^DD",19,19,.01,21,2,0)
 
"^DD",19,19,.01,21,3,0)
Each option must be preceded by its package prefix (a 2-4 character)
"^DD",19,19,.01,21,4,0)
code specified in the PACKAGE file, or the letter "Z" or "A".
"^DD",19,19,.01,22)

"^DD",19,19,.01,"AUDIT")

"^DD",19,19,.01,"DT")
2910226
"^DD",19,19,209.2,0)
KEEP FROM DELETING^S^y:Yes;^200.9;2^Q
"^DD",19,19,209.2,3)
Set if this is option shouldn't be purged.
"^DD",19,19,209.2,21,0)
^^4^4^2970117^
"^DD",19,19,209.2,21,1,0)
This field is to keep the DELETE UNREFERENCED OPTIONS routine from
"^DD",19,19,209.2,21,2,0)
selecting this option for deletion even if it isn't referenced in the
"^DD",19,19,209.2,21,3,0)
normal ways.  Like "Parent of Queuable Options" (ZTMQUEUABLE OPTIONS) or
"^DD",19,19,209.2,21,4,0)
XUCOMMAD. Normal options don't need to set this field.
"^DD",19,19,209.2,"DT")
2970117
"^DD",200,200.05,2,0)
Effective Date^RD^^0;2^N %DT,% S %DT="ETX",%DT(0)=+$O(^VA(200,D0,"USC1","AD",""),-1),%=$O(^(%DT(0),""),-1) K:(%DT(0)'>0)!(%=DA) %DT(0) D ^%DT S X=Y K:Y<1 X
"^DD",200,200.05,2,1,0)
^.1
"^DD",200,200.05,2,1,1,0)
200.05^AD
"^DD",200,200.05,2,1,1,1)
S ^VA(200,DA(1),"USC1","AD",$E(X,1,30),DA)=""
"^DD",200,200.05,2,1,1,2)
K ^VA(200,DA(1),"USC1","AD",$E(X,1,30),DA)
"^DD",200,200.05,2,1,1,3)
Don't Delete
"^DD",200,200.05,2,1,1,"%D",0)
^^2^2^2960529^
"^DD",200,200.05,2,1,1,"%D",1,0)
This X-ref is by date and allows us to find the most current entry
"^DD",200,200.05,2,1,1,"%D",2,0)
in the file.
"^DD",200,200.05,2,1,1,"DT")
2960529
"^DD",200,200.05,2,1,2,0)
200.05^AE^MUMPS
"^DD",200,200.05,2,1,2,1)
D SET2^XUA4A72
"^DD",200,200.05,2,1,2,2)
D KILL2^XUA4A72
"^DD",200,200.05,2,1,2,3)
Special Trigger
"^DD",200,200.05,2,1,2,"%D",0)
^^2^2^2960703^
"^DD",200,200.05,2,1,2,"%D",1,0)
This Special X-ref sets the Expiration date of the previous person class
"^DD",200,200.05,2,1,2,"%D",2,0)
entry to the current record's Effective date.
"^DD",200,200.05,2,1,2,"DT")
2960603
"^DD",200,200.05,2,3)
The date that this Person Class became effective.
"^DD",200,200.05,2,21,0)
^^1^1^2960703^^^^
"^DD",200,200.05,2,21,1,0)
This field is trigger by adding a new person class.
"^DD",200,200.05,2,"DT")
2960603
"^DD",8980,8980,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",8980,8980,.01,1,0)
^.1
"^DD",8980,8980,.01,1,1,0)
8980^B
"^DD",8980,8980,.01,1,1,1)
S ^DIZ(8980,"B",$E(X,1,30),DA)=""
"^DD",8980,8980,.01,1,1,2)
K ^DIZ(8980,"B",$E(X,1,30),DA)
"^DD",8980,8980,.01,1,2,0)
^^TRIGGER^8980^4
"^DD",8980,8980,.01,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIZ(8980,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(8980,.01,1,2,1.4)
"^DD",8980,8980,.01,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DIZ(8980,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,5),0)):"",1:$P(^(0),U,1))=""
"^DD",8980,8980,.01,1,2,1.4)
S DIH=$S($D(^DIZ(8980,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=8980,DIG=4 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",8980,8980,.01,1,2,2)
Q
"^DD",8980,8980,.01,1,2,3)
Needed as part of the security screen.
"^DD",8980,8980,.01,1,2,"CREATE CONDITION")
CREATOR=""
"^DD",8980,8980,.01,1,2,"CREATE VALUE")
S X=DUZ
"^DD",8980,8980,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",8980,8980,.01,1,2,"DT")
2890908
"^DD",8980,8980,.01,1,2,"FIELD")
CREATOR
"^DD",8980,8980,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",8980,8980,.01,21,0)
^^1^1^2920518^^^^
"^DD",8980,8980,.01,21,1,0)
This is a name used to identify the KERMIT file.
"^DD",8980,8980,.01,"DT")
2890908
**END**
**END**
