Released XU*8*23 SEQ #25
Extracted from mail message
**KIDS**:XU*8.0*23^

**INSTALL NAME**
XU*8.0*23
"BLD",28,0)
XU*8.0*23^KERNEL^0^2960304^n
"BLD",28,1,0)
^^78^78^2960605^
"BLD",28,1,1,0)
NOIS IVM-1295-30057    If printing a spool document to a slave device the
"BLD",28,1,2,0)
the question about the number of copies would go to the slave device.
"BLD",28,1,3,0)
To fix the number of copies prompt was moved before the device prompt.
"BLD",28,1,4,0)
 
"BLD",28,1,5,0)
NOIS  ANN-0296-40311  The ZISPL* routines were still looking at the old
"BLD",28,1,6,0)
Kernel site parameter file.  Fixed by having them and %ZIS4 look at the
"BLD",28,1,7,0)
new Kernel system parameter file.
"BLD",28,1,8,0)

"BLD",28,1,9,0)
NOIS ALT-1195-20982  When taskman would internally set new run times for
"BLD",28,1,10,0)
tasks it was still using the old $H format.  (Cross CPU and waiting HFS)
"BLD",28,1,11,0)

"BLD",28,1,12,0)
When investigating another problem I notice that the load balance algorithm
"BLD",28,1,13,0)
would allow more that one system to start new work.  This was fixed by having
"BLD",28,1,14,0)
the node that was going to start new work to tell the other nodes to wait.
"BLD",28,1,15,0)

"BLD",28,1,16,0)
Eric Jurasas, Change to %ZIS to work with TelNet virtual terminal on MSM 4.3
"BLD",28,1,17,0)

"BLD",28,1,18,0)
routine         new checksum
"BLD",28,1,19,0)
ZIS              9308978
"BLD",28,1,20,0)
ZIS4DTM          7025909
"BLD",28,1,21,0)
ZIS4MSM          6576195
"BLD",28,1,22,0)
ZIS4MSQ          8966654
"BLD",28,1,23,0)
ZIS4VXD          8256988
"BLD",28,1,24,0)
ZISPL           12813725
"BLD",28,1,25,0)
ZISPL1           8860672
"BLD",28,1,26,0)
ZISPL2           4292041
"BLD",28,1,27,0)
ZTM2             3666292
"BLD",28,1,28,0)
ZTM6             1889159
"BLD",28,1,29,0)
ZTMS2            5278281
"BLD",28,1,30,0)

"BLD",28,1,31,0)
========================================================================= 
"BLD",28,1,32,0)
Installation:
"BLD",28,1,33,0)

"BLD",28,1,34,0)
  1.  These routines are usually mapped on systems that allow mapping,
"BLD",28,1,35,0)
      so you will need to disable mapping for the effected routines.
"BLD",28,1,36,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",28,1,37,0)
      option will load the KIDS package onto your system.
"BLD",28,1,38,0)
  3.  The patch has now been loaded into a Transport global on your
"BLD",28,1,39,0)
      system. You now need to use KIDS to install the Transport global.
"BLD",28,1,40,0)
      On the KIDS menu, under the 'Installation' menu, use the following
"BLD",28,1,41,0)
      options:
"BLD",28,1,42,0)
         Print Transport Global
"BLD",28,1,43,0)
         Compare Transport Global to Current System
"BLD",28,1,44,0)
         Verify Checksums in Transport Global
"BLD",28,1,45,0)
         Backup a Transport Global
"BLD",28,1,46,0)
  4.  Inhibit users from login into system. 
"BLD",28,1,47,0)
      Also place TASKMAN in a wait state.
"BLD",28,1,48,0)
  5.  On the KIDS menu, under the 'Installation' menu, use the following
"BLD",28,1,49,0)
      options:
"BLD",28,1,50,0)
         Install Package(s)  'XU*8.0*23'
"BLD",28,1,51,0)
  6.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"BLD",28,1,52,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"BLD",28,1,53,0)
  7. After installing this patch, you need to move several routines from 
"BLD",28,1,54,0)
     your productions account to the manager account:
"BLD",28,1,55,0)
     ZIS
"BLD",28,1,56,0)
     ZIS4DTM
"BLD",28,1,57,0)
     ZIS4MSM
"BLD",28,1,58,0)
     ZIS4MSQ
"BLD",28,1,59,0)
     ZIS4VXD
"BLD",28,1,60,0)
     ZTM2
"BLD",28,1,61,0)
     ZTM6
"BLD",28,1,62,0)
     ZTMS2
"BLD",28,1,63,0)
     and in the manager account rename
"BLD",28,1,64,0)
     ZIS        to %ZIS
"BLD",28,1,65,0)
     ZTM2       to %ZTM2
"BLD",28,1,66,0)
     ZTM6       to %ZTM6
"BLD",28,1,67,0)
     ZTMS2      to %ZTMS2
"BLD",28,1,68,0)
     ZIS4VXD    to %ZIS4   (for DSM sites)
"BLD",28,1,69,0)
     ZIS4MSM    to %ZIS4   (for MSM sites)
"BLD",28,1,70,0)
    
"BLD",28,1,71,0)
       Example: ZL ZOSVVXD ZS %ZOSV
"BLD",28,1,72,0)
       
"BLD",28,1,73,0)
  8.  AXP Sites, after patch has installed, rebuild your map set.
"BLD",28,1,74,0)
  9.  Enable user's login.
"BLD",28,1,75,0)
      Remove TASKMAN from the wait state.
"BLD",28,1,76,0)

"BLD",28,1,77,0)
=========================================================================
"BLD",28,1,78,0)

"BLD",28,4,0)
^9.64PA^^
"BLD",28,"KRN",0)
^9.67PA^8994^15
"BLD",28,"KRN",.4,0)
.4
"BLD",28,"KRN",.401,0)
.401
"BLD",28,"KRN",.402,0)
.402
"BLD",28,"KRN",.403,0)
.403
"BLD",28,"KRN",.5,0)
.5
"BLD",28,"KRN",.84,0)
.84
"BLD",28,"KRN",3.6,0)
3.6
"BLD",28,"KRN",9.2,0)
9.2
"BLD",28,"KRN",9.8,0)
9.8
"BLD",28,"KRN",9.8,"NM",0)
^9.68A^11^11
"BLD",28,"KRN",9.8,"NM",1,0)
ZIS4DTM^^0^B12990275
"BLD",28,"KRN",9.8,"NM",2,0)
ZIS4MSM^^0^B14006165
"BLD",28,"KRN",9.8,"NM",3,0)
ZIS4MSQ^^0^B14333898
"BLD",28,"KRN",9.8,"NM",4,0)
ZIS4VXD^^0^B16768151
"BLD",28,"KRN",9.8,"NM",5,0)
ZIS^^0^B15660672
"BLD",28,"KRN",9.8,"NM",6,0)
ZISPL^^0^B21502685
"BLD",28,"KRN",9.8,"NM",7,0)
ZISPL1^^0^B14496737
"BLD",28,"KRN",9.8,"NM",8,0)
ZISPL2^^0^B5205321
"BLD",28,"KRN",9.8,"NM",9,0)
ZTM2^^0^B12041707
"BLD",28,"KRN",9.8,"NM",10,0)
ZTM6^^0^B5118461
"BLD",28,"KRN",9.8,"NM",11,0)
ZTMS2^^0^B16615342
"BLD",28,"KRN",9.8,"NM","B","ZIS",5)

"BLD",28,"KRN",9.8,"NM","B","ZIS4DTM",1)

"BLD",28,"KRN",9.8,"NM","B","ZIS4MSM",2)

"BLD",28,"KRN",9.8,"NM","B","ZIS4MSQ",3)

"BLD",28,"KRN",9.8,"NM","B","ZIS4VXD",4)

"BLD",28,"KRN",9.8,"NM","B","ZISPL",6)

"BLD",28,"KRN",9.8,"NM","B","ZISPL1",7)

"BLD",28,"KRN",9.8,"NM","B","ZISPL2",8)

"BLD",28,"KRN",9.8,"NM","B","ZTM2",9)

"BLD",28,"KRN",9.8,"NM","B","ZTM6",10)

"BLD",28,"KRN",9.8,"NM","B","ZTMS2",11)

"BLD",28,"KRN",19,0)
19
"BLD",28,"KRN",19.1,0)
19.1
"BLD",28,"KRN",101,0)
101
"BLD",28,"KRN",409.61,0)
409.61
"BLD",28,"KRN",8994,0)
8994
"BLD",28,"KRN",8995,0)
8995
"BLD",28,"KRN","B",.4,.4)

"BLD",28,"KRN","B",.401,.401)

"BLD",28,"KRN","B",.402,.402)

"BLD",28,"KRN","B",.403,.403)

"BLD",28,"KRN","B",.5,.5)

"BLD",28,"KRN","B",.84,.84)

"BLD",28,"KRN","B",3.6,3.6)

"BLD",28,"KRN","B",9.2,9.2)

"BLD",28,"KRN","B",9.8,9.8)

"BLD",28,"KRN","B",19,19)

"BLD",28,"KRN","B",19.1,19.1)

"BLD",28,"KRN","B",101,101)

"BLD",28,"KRN","B",409.61,409.61)

"BLD",28,"KRN","B",8994,8994)

"BLD",28,"KRN","B",8995,8995)

"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^XUDOCV7 NEW FEATURES
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^2950703^2951018^4
"PKG",3,22,1,"PAH",1,0)
23^2960304
"PKG",3,22,1,"PAH",1,1,0)
^^78^78^2960605
"PKG",3,22,1,"PAH",1,1,1,0)
NOIS IVM-1295-30057    If printing a spool document to a slave device the
"PKG",3,22,1,"PAH",1,1,2,0)
the question about the number of copies would go to the slave device.
"PKG",3,22,1,"PAH",1,1,3,0)
To fix the number of copies prompt was moved before the device prompt.
"PKG",3,22,1,"PAH",1,1,4,0)
 
"PKG",3,22,1,"PAH",1,1,5,0)
NOIS  ANN-0296-40311  The ZISPL* routines were still looking at the old
"PKG",3,22,1,"PAH",1,1,6,0)
Kernel site parameter file.  Fixed by having them and %ZIS4 look at the
"PKG",3,22,1,"PAH",1,1,7,0)
new Kernel system parameter file.
"PKG",3,22,1,"PAH",1,1,8,0)

"PKG",3,22,1,"PAH",1,1,9,0)
NOIS ALT-1195-20982  When taskman would internally set new run times for
"PKG",3,22,1,"PAH",1,1,10,0)
tasks it was still using the old $H format.  (Cross CPU and waiting HFS)
"PKG",3,22,1,"PAH",1,1,11,0)

"PKG",3,22,1,"PAH",1,1,12,0)
When investigating another problem I notice that the load balance algorithm
"PKG",3,22,1,"PAH",1,1,13,0)
would allow more that one system to start new work.  This was fixed by having
"PKG",3,22,1,"PAH",1,1,14,0)
the node that was going to start new work to tell the other nodes to wait.
"PKG",3,22,1,"PAH",1,1,15,0)

"PKG",3,22,1,"PAH",1,1,16,0)
Eric Jurasas, Change to %ZIS to work with TelNet virtual terminal on MSM 4.3
"PKG",3,22,1,"PAH",1,1,17,0)

"PKG",3,22,1,"PAH",1,1,18,0)
routine         new checksum
"PKG",3,22,1,"PAH",1,1,19,0)
ZIS              9308978
"PKG",3,22,1,"PAH",1,1,20,0)
ZIS4DTM          7025909
"PKG",3,22,1,"PAH",1,1,21,0)
ZIS4MSM          6576195
"PKG",3,22,1,"PAH",1,1,22,0)
ZIS4MSQ          8966654
"PKG",3,22,1,"PAH",1,1,23,0)
ZIS4VXD          8256988
"PKG",3,22,1,"PAH",1,1,24,0)
ZISPL           12813725
"PKG",3,22,1,"PAH",1,1,25,0)
ZISPL1           8860672
"PKG",3,22,1,"PAH",1,1,26,0)
ZISPL2           4292041
"PKG",3,22,1,"PAH",1,1,27,0)
ZTM2             3666292
"PKG",3,22,1,"PAH",1,1,28,0)
ZTM6             1889159
"PKG",3,22,1,"PAH",1,1,29,0)
ZTMS2            5278281
"PKG",3,22,1,"PAH",1,1,30,0)

"PKG",3,22,1,"PAH",1,1,31,0)
========================================================================= 
"PKG",3,22,1,"PAH",1,1,32,0)
Installation:
"PKG",3,22,1,"PAH",1,1,33,0)

"PKG",3,22,1,"PAH",1,1,34,0)
  1.  These routines are usually mapped on systems that allow mapping,
"PKG",3,22,1,"PAH",1,1,35,0)
      so you will need to disable mapping for the effected routines.
"PKG",3,22,1,"PAH",1,1,36,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",3,22,1,"PAH",1,1,37,0)
      option will load the KIDS package onto your system.
"PKG",3,22,1,"PAH",1,1,38,0)
  3.  The patch has now been loaded into a Transport global on your
"PKG",3,22,1,"PAH",1,1,39,0)
      system. You now need to use KIDS to install the Transport global.
"PKG",3,22,1,"PAH",1,1,40,0)
      On the KIDS menu, under the 'Installation' menu, use the following
"PKG",3,22,1,"PAH",1,1,41,0)
      options:
"PKG",3,22,1,"PAH",1,1,42,0)
         Print Transport Global
"PKG",3,22,1,"PAH",1,1,43,0)
         Compare Transport Global to Current System
"PKG",3,22,1,"PAH",1,1,44,0)
         Verify Checksums in Transport Global
"PKG",3,22,1,"PAH",1,1,45,0)
         Backup a Transport Global
"PKG",3,22,1,"PAH",1,1,46,0)
  4.  Inhibit users from login into system. 
"PKG",3,22,1,"PAH",1,1,47,0)
      Also place TASKMAN in a wait state.
"PKG",3,22,1,"PAH",1,1,48,0)
  5.  On the KIDS menu, under the 'Installation' menu, use the following
"PKG",3,22,1,"PAH",1,1,49,0)
      options:
"PKG",3,22,1,"PAH",1,1,50,0)
         Install Package(s)  'XU*8.0*23'
"PKG",3,22,1,"PAH",1,1,51,0)
  6.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"PKG",3,22,1,"PAH",1,1,52,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"PKG",3,22,1,"PAH",1,1,53,0)
  7. After installing this patch, you need to move several routines from 
"PKG",3,22,1,"PAH",1,1,54,0)
     your productions account to the manager account:
"PKG",3,22,1,"PAH",1,1,55,0)
     ZIS
"PKG",3,22,1,"PAH",1,1,56,0)
     ZIS4DTM
"PKG",3,22,1,"PAH",1,1,57,0)
     ZIS4MSM
"PKG",3,22,1,"PAH",1,1,58,0)
     ZIS4MSQ
"PKG",3,22,1,"PAH",1,1,59,0)
     ZIS4VXD
"PKG",3,22,1,"PAH",1,1,60,0)
     ZTM2
"PKG",3,22,1,"PAH",1,1,61,0)
     ZTM6
"PKG",3,22,1,"PAH",1,1,62,0)
     ZTMS2
"PKG",3,22,1,"PAH",1,1,63,0)
     and in the manager account rename
"PKG",3,22,1,"PAH",1,1,64,0)
     ZIS        to %ZIS
"PKG",3,22,1,"PAH",1,1,65,0)
     ZTM2       to %ZTM2
"PKG",3,22,1,"PAH",1,1,66,0)
     ZTM6       to %ZTM6
"PKG",3,22,1,"PAH",1,1,67,0)
     ZTMS2      to %ZTMS2
"PKG",3,22,1,"PAH",1,1,68,0)
     ZIS4VXD    to %ZIS4   (for DSM sites)
"PKG",3,22,1,"PAH",1,1,69,0)
     ZIS4MSM    to %ZIS4   (for MSM sites)
"PKG",3,22,1,"PAH",1,1,70,0)
    
"PKG",3,22,1,"PAH",1,1,71,0)
       Example: ZL ZOSVVXD ZS %ZOSV
"PKG",3,22,1,"PAH",1,1,72,0)
       
"PKG",3,22,1,"PAH",1,1,73,0)
  8.  AXP Sites, after patch has installed, rebuild your map set.
"PKG",3,22,1,"PAH",1,1,74,0)
  9.  Enable user's login.
"PKG",3,22,1,"PAH",1,1,75,0)
      Remove TASKMAN from the wait state.
"PKG",3,22,1,"PAH",1,1,76,0)

"PKG",3,22,1,"PAH",1,1,77,0)
=========================================================================
"PKG",3,22,1,"PAH",1,1,78,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
11
"RTN","ZIS")
0^5^B15660672
"RTN","ZIS",1,0)
%ZIS ;SFISC/AC,RWF -- DEVICE HANDLER ;6/3/96  16:10
"RTN","ZIS",2,0)
 ;;8.0;KERNEL;**18,23**;JUL 10, 1995
"RTN","ZIS",3,0)
INIT I $D(ZTQUEUED),$G(IOT)="SPL",$D(IO)#2,$D(IO(0))#2,IO]"",IO=IO(0),$D(IO(1,IO))#2,$D(^%ZOSF("OS")),^("OS")["VAX DSM"!(^("OS")["M/VX"),$D(IOP),IOP[ION!(IOP[IO) K %ZIS,%IS,IOP Q
"RTN","ZIS",4,0)
 ;
"RTN","ZIS",5,0)
 I '$D(%ZIS),$D(%IS) M %ZIS=%IS
"RTN","ZIS",6,0)
 S:$D(%ZIS)[0 %ZIS="M" M %IS=%ZIS ;update %IS for now
"RTN","ZIS",7,0)
 ;
"RTN","ZIS",8,0)
 I $D(ZTQUEUED) D  I '$D(IOP) S POP=1 G EXIT^%ZIS1
"RTN","ZIS",9,0)
 .I $D(ZTIO)#2,ZTIO="" S:%IS'[0 %IS=%IS_"0",%ZIS=%ZIS_"0"
"RTN","ZIS",10,0)
 I '$D(ZTQUEUED),%IS["T",$P($G(IOP),";")="Q" S POP=1 G EXIT^%ZIS1
"RTN","ZIS",11,0)
 S %ZISOS=$G(^%ZOSF("OS")),%ZISV=$G(^%ZOSF("VOL")) K IO("CLOSE"),IO("HFSIO"),IO("T")
"RTN","ZIS",12,0)
 N %,%A,%Z,%Z90,%Z95,%ZTIME,%ZTYPE,%E,%H
"RTN","ZIS",13,0)
A K %Z9,%ZISIOS,%ZISQUIT,DTOUT,DUOUT,IO("P"),IO("Q"),IO("S")
"RTN","ZIS",14,0)
K2 D K2^%ZIS1
"RTN","ZIS",15,0)
 S %ZISB=%ZIS'["N",POP=0,%Y="" S:'$D(IO(0)) IO(0)=$I
"RTN","ZIS",16,0)
 I %ZISOS["VAX DSM",$I["SYS$INPUT:.;" S:%IS'[0 %IS=%IS_"0",%ZIS=%ZIS_"0" S (%H,%E)=0 G ^%ZIS1
"RTN","ZIS",17,0)
 I %IS["T"&(%IS["0") S (%H,%E)=0 G ^%ZIS1
"RTN","ZIS",18,0)
 I $D(IOP),IOP=$I!(IOP="HOME")!(0[IOP),$D(^XUTL("XQ",$J,"IO")) D HOME K %IS,%Y,%ZIS,%ZISB,%ZISV,IOP Q
"RTN","ZIS",19,0)
 D GETHOME G EXIT^%ZIS1:POP,^%ZIS1
"RTN","ZIS",20,0)
GETHOME S %ZISVT=$I,%E=0 I $D(IO("HOME")),$P(IO("HOME"),"^",2)=IO(0) S (%E,%H)=+IO("HOME") Q
"RTN","ZIS",21,0)
 I $D(^XUTL("XQ",$J,"IOS")),$D(^("IO")),IO(0)=^("IO") S (%E,%H)=^("IOS"),IO("HOME")=%H_"^"_IO(0) Q
"RTN","ZIS",22,0)
 ;CALL LINEPORT CODE HERE---
"RTN","ZIS",23,0)
 S %=$$LINEPORT^%ZISUTL I % S (%E,%H)=% Q
"RTN","ZIS",24,0)
 S %ZISVT=$I D VTLKUP
"RTN","ZIS",25,0)
 I '%E S %ZISVT=$I D VIRTUAL I %ZISVT=""!(%E'>0) I %IS'[0 O IO(0)::0 I $T U IO(0) W !,"HOME DEVICE DOES NOT EXIST IN THE DEVICE FILE",!,"PLEASE CONTACT YOUR SYSTEM MANAGER!",*7
"RTN","ZIS",26,0)
 S %H=%E S:'%H&(%IS'[0) POP=1 Q
"RTN","ZIS",27,0)
VIRTUAL ;See if a Virtual Terminal (LAT, TELNET)
"RTN","ZIS",28,0)
 I %ZISOS["MSM" X "I $P($ZV,""Version "",2)'<3 S %ZISVT=$ZDE(+%ZISVT) I %ZISVT?.E1""~""4N S %ZISVT=""TELNET"""
"RTN","ZIS",29,0)
 F %ZISI=$L(%ZISVT):-1 D:$D(^%ZIS(1,"C",%ZISVT))  Q:$S('%E:0,'$D(^%ZIS(1,%E,"TYPE")):0,^("TYPE")="VTRM":1,1:0)  S %ZISVT=$E(%ZISVT,1,%ZISI) Q:%ZISVT=""
"RTN","ZIS",30,0)
 .D VTLKUP Q:$S('%E:0,'$D(^%ZIS(1,%E,"TYPE")):0,^("TYPE")="VTRM":1,1:0)
"RTN","ZIS",31,0)
 .S %X=0 F %ZISX=%ZISV,"" Q:%X>0  S %X=0 F  S %E=+$O(^%ZIS(1,"CPU",%ZISX_"."_%ZISVT,%X)) S %X=%E Q:%E'>0  I $G(^%ZIS(1,+%E,"TYPE"))="VTRM" Q
"RTN","ZIS",32,0)
 Q
"RTN","ZIS",33,0)
VTLKUP F %ZISX=%ZISV,"" S %E=+$O(^%ZIS(1,"G","SYS."_%ZISX_"."_%ZISVT,0)) Q:%E  S %E=+$O(^%ZIS(1,"CPU",%ZISX_"."_%ZISVT,0)) Q:%E
"RTN","ZIS",34,0)
 Q
"RTN","ZIS",35,0)
 ;
"RTN","ZIS",36,0)
CURRENT N POP S FF="#",SL=24,BS="*8",RM=80,(SUB,XY)="",%IS=0,%ZISOS=$G(^%ZOSF("OS")),%ZISV=$G(^("VOL")),POP=0
"RTN","ZIS",37,0)
 D GETHOME K %E,%IS,%ZISI,%ZISOS,%ZISV,%ZISVT,%ZISX Q:POP
"RTN","ZIS",38,0)
 I $D(^%ZIS(1,%H,"SUBTYPE")) S SUB=+^("SUBTYPE") K %H
"RTN","ZIS",39,0)
 I $D(SUB),SUB,$D(^%ZIS(2,SUB,1)) S SUB=$S($D(^(0)):$P(^(0),"^"),1:""),FF=$P(^(1),"^",2),SL=$P(^(1),"^",3),BS=$P(^(1),"^",4),XY=$P(^(1),"^",5),RM=+^(1)
"RTN","ZIS",40,0)
 E  S SUB=""
"RTN","ZIS",41,0)
 I $D(^%ZOSF("RM")) N X S X=RM X ^("RM") K %A
"RTN","ZIS",42,0)
 Q
"RTN","ZIS",43,0)
HOME ;Entry point to establish IO* variables for home device.
"RTN","ZIS",44,0)
 N %,X I '$D(^XUTL("XQ",$J,"IO")) S IOP="HOME" D ^%ZIS Q
"RTN","ZIS",45,0)
 D RESETVAR
"RTN","ZIS",46,0)
 I '$D(IO("C")),$D(IOM),IO=$I,$D(IO(1,IO)),$D(^%ZOSF("RM")) S X=+IOM X ^("RM") Q
"RTN","ZIS",47,0)
 Q
"RTN","ZIS",48,0)
RESETVAR ;Reset IO* variables.
"RTN","ZIS",49,0)
 I '$D(^XUTL("XQ",$J,"IO")) Q
"RTN","ZIS",50,0)
 N % F %="IO","IOS","IOT","IOBS","IOF","IOM","ION","IOSL","IOST","IOST(0)","IOXY" I $D(^XUTL("XQ",$J,%))#2 S @%=^(%)
"RTN","ZIS",51,0)
 S POP=0,IO(0)=IO
"RTN","ZIS",52,0)
 Q
"RTN","ZIS",53,0)
ZISLPC Q  ;No longer called in Kernel v8.
"RTN","ZIS",54,0)
 ;
"RTN","ZIS",55,0)
HLP1 G EN1^%ZIS7
"RTN","ZIS",56,0)
HLP2 N %E,%H,%X,%ZISV,X S %ZISV=$S($D(^%ZOSF("VOL")):^("VOL"),1:"") G EN2^%ZIS7
"RTN","ZIS",57,0)
 ;
"RTN","ZIS",58,0)
REWIND(IO,IOT,IOPAR) ;Rewind Device
"RTN","ZIS",59,0)
 ;S $ZT="REWERR^%ZIS"
"RTN","ZIS",60,0)
 N %,X,Y,ZISGR S ZISGR=$$LGR^%ZOSV,X="REWERR^%ZIS",@^%ZOSF("TRAP")
"RTN","ZIS",61,0)
 S %=$I I ZISGR]"",$D(@ZISGR) ;Restore last globa reference
"RTN","ZIS",62,0)
 I '($D(IO)#2)!'$D(IOT)!'$D(IOPAR) Q 0
"RTN","ZIS",63,0)
 I "MT^SDP^HFS"'[IOT Q 0
"RTN","ZIS",64,0)
 S @("Y=$$REW"_IOT_"^%ZIS4(IO,IOPAR)")
"RTN","ZIS",65,0)
 I ZISGR]"",$D(@ZISGR) ;Restore last global reference
"RTN","ZIS",66,0)
 U % Q Y
"RTN","ZIS",67,0)
REWERR ;Error encountered
"RTN","ZIS",68,0)
 I ZISGR]"",$D(@ZISGR) ;Restore last globa reference
"RTN","ZIS",69,0)
 Q 0
"RTN","ZIS4DTM")
0^1^B12990275
"RTN","ZIS4DTM",1,0)
%ZIS4 ;SFISC/GFT,RWF,MVB - DEVICE HANDLER SPOOL SPECIFIC CODE(DataTree Mumps) ;1/20/93  16:46
"RTN","ZIS4DTM",2,0)
 ;;8.0;KERNEL;**23**;JUL 03, 1995
"RTN","ZIS4DTM",3,0)
 ;
"RTN","ZIS4DTM",4,0)
OPEN G OPN2:$D(IO(1,IO))
"RTN","ZIS4DTM",5,0)
 S POP=0 D OP1 S:'POP IO(1,IO)="" G NOPEN:'$D(IO(1,IO))
"RTN","ZIS4DTM",6,0)
OPN2 I $D(%ZISHP),'$D(IOP) W !,*7," Routing to device "_$P(^%ZIS(1,%E,0),"^",1)_$S($D(^(1)):" "_$P(^(1),"^",1)_" ",1:"")
"RTN","ZIS4DTM",7,0)
 Q
"RTN","ZIS4DTM",8,0)
NOPEN I %IS'["D",$D(%ZISHP)!(%ZISHG]"") S POP=1 Q
"RTN","ZIS4DTM",9,0)
 I '$D(IOP) W *7,"  [BUSY]" W "  ...  RETRY" S %=2,U="^" D YN^%ZIS1 G OPEN:%=1
"RTN","ZIS4DTM",10,0)
 S POP=1 Q
"RTN","ZIS4DTM",11,0)
 Q
"RTN","ZIS4DTM",12,0)
OP1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4DTM",13,0)
 L:$D(%ZISLOC) +@%ZISLOCK:60
"RTN","ZIS4DTM",14,0)
 O IO::%ZISTO S:'$T POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4DTM",15,0)
OPNERR S POP=1,IO("ERROR")=$ZE,IO("LASTERR")=$ZE Q
"RTN","ZIS4DTM",16,0)
 ;
"RTN","ZIS4DTM",17,0)
O ;D:$D(%ZISIOS) ZISLPC^%ZIS Q:'%ZISB  ;No longer called in Kernel v8.
"RTN","ZIS4DTM",18,0)
OPRTPORT I $D(IO("S")),$D(^%ZIS(2,IO("S"),10)),^(10)]"" U IO(0) D X10^ZISX
"RTN","ZIS4DTM",19,0)
OPAR I $D(IOP),%ZTYPE="HFS",$D(%IS("HFSIO")),$D(%IS("IOPAR")),%IS("HFSIO")]"" S IO=%IS("HFSIO"),%ZISOPAR=%IS("IOPAR")
"RTN","ZIS4DTM",20,0)
 S %A=$S(%ZISOPAR]"":%ZISOPAR,%ZTYPE["TRM":"(WIDTH="_+%Z91_")",1:"")
"RTN","ZIS4DTM",21,0)
 I %A=""&(%ZTYPE="HFS"!(%ZTYPE="SDP")!(%ZTYPE="SPL")) S POP=1 W:'$D(IOP) !,?5,"INVALID PARAMETERS",! Q
"RTN","ZIS4DTM",22,0)
 S %A=%A_$S(%A["):":"",%ZTYPE["OTH"&($P(%ZTIME,"^",3)="n"):"",1:":"_%ZISTO),%A=""""_IO_""""_$E(":",%A]"")_%A
"RTN","ZIS4DTM",23,0)
 D O1 I POP W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4DTM",24,0)
 S IO(1,IO)="" N DX,DY S (DX,DY)=0 U IO X:$D(^%ZOSF("XY"))&'(IO=IO(0)&'$D(ZTQUEUED)&'$D(IO("S"))) ^("XY") U:%IS'[0 IO(0) I %ZISUPAR]"" S %A1=""""_IO_""":"_%ZISUPAR U @%A1 U:%IS'[0 IO(0)
"RTN","ZIS4DTM",25,0)
 G OXECUTE^%ZIS6
"RTN","ZIS4DTM",26,0)
 ;
"RTN","ZIS4DTM",27,0)
O1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4DTM",28,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4DTM",29,0)
 O @%A S:'$T&(%A?.E1":".N) POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4DTM",30,0)
 ;
"RTN","ZIS4DTM",31,0)
SPOOL ;%ZDA=pointer to ^XMB(3.51, %ZFN=spool file name.
"RTN","ZIS4DTM",32,0)
 I $D(ZISDA) W:'$D(IOP) !?5,*7,"You may not Spool the printing of a Spool document" G N
"RTN","ZIS4DTM",33,0)
 I $D(DUZ)[0 W:'$D(IOP) !,"Must be a valid user." G N
"RTN","ZIS4DTM",34,0)
R S %ZY=-1 D NEWDOC^ZISPL1 G N:%ZY'>0
"RTN","ZIS4DTM",35,0)
 S %ZDA=+%ZY,%ZFN=$P(%ZY(0),U,2),IO("DOC")=$P(%ZY(0),U,1)
"RTN","ZIS4DTM",36,0)
 G OK:'%ZISB!$D(IO("Q"))
"RTN","ZIS4DTM",37,0)
 I '$P(%ZY,"^",3),%ZFN]"" S %ZISMODE="R" D SPL G:%ZFN']"" N G DOC
"RTN","ZIS4DTM",38,0)
 S %ZFN="SPL"_%ZDA_".TMP" S %ZISMODE="W" D SPL G:%ZFN']"" N
"RTN","ZIS4DTM",39,0)
 S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,"C",%ZFN,%ZDA)=""
"RTN","ZIS4DTM",40,0)
DOC S IO("SPOOL")=%ZDA,^XUTL("XQ",$J,"SPOOL")=%ZDA,IOF="#"
"RTN","ZIS4DTM",41,0)
 I $D(^%ZIS(1,%ZISIOS,1)),$P(^(1),"^",8),$O(^("SPL",0)) S ^XUTL("XQ",$J,"ADSPL")=%ZISIOS,ZISPLAD=%ZISIOS
"RTN","ZIS4DTM",42,0)
OK K %ZDA,%ZFN,%ZISMODE,%ZY Q
"RTN","ZIS4DTM",43,0)
N K %ZDA,%ZFN,%ZISMODE,IO("DOC"),%ZY S POP=1 Q
"RTN","ZIS4DTM",44,0)
 ;
"RTN","ZIS4DTM",45,0)
SPL I IO]"" O IO:(%ZISMODE:%ZFN):0 S:$T IO(1,IO)=""
"RTN","ZIS4DTM",46,0)
 E  D FREEDEV^%ZOSV1 G NOSPL:(IO=""),SPL
"RTN","ZIS4DTM",47,0)
 Q
"RTN","ZIS4DTM",48,0)
NOSPL W:'$D(IOP) !?5,*7,"Couldn't open the spool file." S %ZFN="" Q
"RTN","ZIS4DTM",49,0)
 ;
"RTN","ZIS4DTM",50,0)
CLOSE N %Z1 C:IO=IO(0)&(IO]"") IO K:IO=IO(0)&(IO]"") IO(1,IO) D FILE^ZISPL1 I %ZDA'>0 K ZISPLAD Q
"RTN","ZIS4DTM",51,0)
 S %Z1=+$G(^XTV(8989.3,1,"SPL"))
"RTN","ZIS4DTM",52,0)
 S %ZFN=$P(%ZS,"^",2) S %ZISMODE="R" D SPL Q:%ZFN']""  U IO S %ZCR=$C(13),%Y=""
"RTN","ZIS4DTM",53,0)
 F %=0:0 R %X:5 Q:$ZIOS=3  S %2=%X D CL2
"RTN","ZIS4DTM",54,0)
 C:IO]"" IO K:IO]"" IO(1,IO) D del^%dos(%ZFN):$P($ZVER,"/",2)'<4,CLOSE^ZISPL1
"RTN","ZIS4DTM",55,0)
 K %Y,%X,%1,%ZISMODE,%ZFN
"RTN","ZIS4DTM",56,0)
 Q
"RTN","ZIS4DTM",57,0)
CL2 I %Z1<(%+1) S %=%+1,^XMBS(3.519,XS,2,%,0)="*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***",$P(^XMB(3.51,%ZDA,0),"^",11)=1 Q
"RTN","ZIS4DTM",58,0)
 I %2[$C(12) S %=%+1,^XMBS(3.519,XS,2,%,0)="|TOP|"
"RTN","ZIS4DTM",59,0)
 S %=%+1,^XMBS(3.519,XS,2,%,0)=%2 Q
"RTN","ZIS4DTM",60,0)
 ;
"RTN","ZIS4DTM",61,0)
HFS G HFS^%ZISF
"RTN","ZIS4DTM",62,0)
 ;
"RTN","ZIS4DTM",63,0)
REWMT(IO,IOPAR) ;Rewind Magtape
"RTN","ZIS4DTM",64,0)
 ;Unknown whether magtapes are supported
"RTN","ZIS4DTM",65,0)
 Q 0
"RTN","ZIS4DTM",66,0)
REWSDP(IO,IOPAR) ;Rewind SDP
"RTN","ZIS4DTM",67,0)
 G REW1
"RTN","ZIS4DTM",68,0)
REWHFS(IO,IOPAR) ;Rewind Host File
"RTN","ZIS4DTM",69,0)
REW1 S X="HFSRWERR",@^%ZOSF("TRAP")
"RTN","ZIS4DTM",70,0)
 U IO:(LFA=0)
"RTN","ZIS4DTM",71,0)
 Q 1
"RTN","ZIS4DTM",72,0)
REWERR ;Error encountered.
"RTN","ZIS4DTM",73,0)
 Q 0
"RTN","ZIS4MSM")
0^2^B14006165
"RTN","ZIS4MSM",1,0)
%ZIS4 ;SF/GFT,RWF,MVB - DEVICE HANDLER SPOOL SPECIFIC CODE(MSM) ;4/8/92  13:50
"RTN","ZIS4MSM",2,0)
 ;;8.0;KERNEL;**23**;JUL 03, 1995
"RTN","ZIS4MSM",3,0)
 ;
"RTN","ZIS4MSM",4,0)
OPEN G OPN2:$D(IO(1,IO))
"RTN","ZIS4MSM",5,0)
 S POP=0 D OP1 S:'POP IO(1,IO)="" G NOPEN:'$D(IO(1,IO))
"RTN","ZIS4MSM",6,0)
OPN2 I $D(%ZISHP),'$D(IOP) W !,*7," Routing to device "_$P(^%ZIS(1,%E,0),"^",1)_$S($D(^(1)):" "_$P(^(1),"^",1)_" ",1:"")
"RTN","ZIS4MSM",7,0)
 Q
"RTN","ZIS4MSM",8,0)
NOPEN I %IS'["D",$D(%ZISHP)!(%ZISHG]"") S POP=1 Q
"RTN","ZIS4MSM",9,0)
 I '$D(IOP) W *7,"  [BUSY]" W "  ...  RETRY" S %=2,U="^" D YN^%ZIS1 G OPEN:%=1
"RTN","ZIS4MSM",10,0)
 S POP=1 Q
"RTN","ZIS4MSM",11,0)
 Q
"RTN","ZIS4MSM",12,0)
OP1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",13,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4MSM",14,0)
 O IO::%ZISTO S:'$T POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4MSM",15,0)
OPNERR S POP=1,IO("ERROR")=$ZE,IO("LASTERR")=$ZE Q
"RTN","ZIS4MSM",16,0)
 ;
"RTN","ZIS4MSM",17,0)
O I $P($ZV,"Version ",2)'<3 S:%IS["L" IO("ZIO")=$ZDE(IO)
"RTN","ZIS4MSM",18,0)
 ;D:$D(%ZISIOS) ZISLPC^%ZIS Q:'%ZISB  ;No longer called in Kernel v8.
"RTN","ZIS4MSM",19,0)
OPRTPORT I $D(IO("S")),$D(^%ZIS(2,IO("S"),10)),^(10)]"" U IO(0) D X10^ZISX
"RTN","ZIS4MSM",20,0)
OPAR I $D(IOP),%ZTYPE="HFS",$D(%IS("HFSIO")),$D(%IS("IOPAR")),%IS("HFSIO")]"" S IO=%IS("HFSIO"),%ZISOPAR=%IS("IOPAR")
"RTN","ZIS4MSM",21,0)
 S %A=$S(%ZISOPAR]"":%ZISOPAR,%ZTYPE["TRM":+%Z91,1:"")
"RTN","ZIS4MSM",22,0)
 S %A=%A_$S(%A["):":"",%ZTYPE["OTH"&($P(%ZTIME,"^",3)="n"):"",1:":"_%ZISTO),%A=""""_IO_""""_$E(":",%A]"")_%A
"RTN","ZIS4MSM",23,0)
 D O1 I POP W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4MSM",24,0)
 S IO(1,IO)=""
"RTN","ZIS4MSM",25,0)
 I %ZTYPE="HFS" D  Q:POP
"RTN","ZIS4MSM",26,0)
 .N % S %=$I
"RTN","ZIS4MSM",27,0)
 .U IO S:$ZA<0 POP=1
"RTN","ZIS4MSM",28,0)
 .U:'$D(ZTQUEUED) % I POP C:IO]"" IO K:IO]"" IO(1,IO)
"RTN","ZIS4MSM",29,0)
 .I POP,'$D(IOP),'$D(ZTQUEUED) W !,?5,*7,"[FILE NOT FOUND]" Q
"RTN","ZIS4MSM",30,0)
 N DX,DY S (DX,DY)=0
"RTN","ZIS4MSM",31,0)
 U IO X:$D(^%ZOSF("XY"))&'(IO=IO(0)&'$D(ZTQUEUED)&'$D(IO("S"))) ^("XY")
"RTN","ZIS4MSM",32,0)
 U:%IS'[0 IO(0)
"RTN","ZIS4MSM",33,0)
 I %ZISUPAR]"" S %A1=""""_IO_""":"_%ZISUPAR U @%A1 U:%IS'[0 IO(0)
"RTN","ZIS4MSM",34,0)
 G OXECUTE^%ZIS6
"RTN","ZIS4MSM",35,0)
 ;
"RTN","ZIS4MSM",36,0)
O1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",37,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4MSM",38,0)
 O @%A S:'$T&(%A?.E1":".N) POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4MSM",39,0)
 ;
"RTN","ZIS4MSM",40,0)
SPOOL ;%ZDA=pointer to ^XMB(3.51, %ZFN=spool file name.
"RTN","ZIS4MSM",41,0)
 I $D(ZISDA) W:'$D(IOP) !?5,*7,"You may not Spool the printing of a Spool document" G N
"RTN","ZIS4MSM",42,0)
 I $D(DUZ)[0 W:'$D(IOP) !,"Must be a valid user." G N
"RTN","ZIS4MSM",43,0)
 S ZOSFV=($P($ZV,"Version ",2)'<2)
"RTN","ZIS4MSM",44,0)
R S %ZY=-1 D NEWDOC^ZISPL1 G N:%ZY'>0 S %ZDA=+%ZY,%ZFN=$P(%ZY(0),U,2),IO("DOC")=$P(%ZY(0),U,1) I '%ZISB!$D(IO("Q")) S:'ZOSFV IO=51 G OK
"RTN","ZIS4MSM",45,0)
 I '$P(%ZY,"^",3),%ZFN D SPL3 G N:'%ZFN,DOC
"RTN","ZIS4MSM",46,0)
 S %ZFN=-1 D SPL2 G:%ZFN<0 N S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,"C",%ZFN,%ZDA)=""
"RTN","ZIS4MSM",47,0)
DOC S IO("SPOOL")=%ZDA,^XUTL("XQ",$J,"SPOOL")=%ZDA,IOF="#"
"RTN","ZIS4MSM",48,0)
 I $D(^%ZIS(1,%ZISIOS,1)),$P(^(1),"^",8),$O(^("SPL",0)) S ^XUTL("XQ",$J,"ADSPL")=%ZISIOS,ZISPLAD=%ZISIOS
"RTN","ZIS4MSM",49,0)
OK K %ZDA,%ZFN Q
"RTN","ZIS4MSM",50,0)
N K %ZDA,%ZFN,IO("DOC") S POP=1 Q
"RTN","ZIS4MSM",51,0)
 ;
"RTN","ZIS4MSM",52,0)
SPL2 O 2:1 G SPL5:$ZA<0,SPL5:$ZC S %ZFN=$ZA#256 S IO(1,2)="",IO(1,2,"%ZFN")=%ZFN Q
"RTN","ZIS4MSM",53,0)
 ;
"RTN","ZIS4MSM",54,0)
SPL3 Q:$D(IO(1,2))#2  O 2:%ZFN+256 G:$ZA<0 SPL5:$ZA<0,SPL5:$ZC S IO(1,2)="",IO(1,2,"%ZFN")=%ZFN Q
"RTN","ZIS4MSM",55,0)
SPL4 E  G SPL5
"RTN","ZIS4MSM",56,0)
 ;U IO S %ZA=$ZA U:%IS'[0 IO(0) I %ZA<0 G SPL5
"RTN","ZIS4MSM",57,0)
 Q
"RTN","ZIS4MSM",58,0)
SPL5 W:'$D(IOP) !?5,*7,"Couldn't open the spool file." S %ZFN=-1 Q
"RTN","ZIS4MSM",59,0)
 ;
"RTN","ZIS4MSM",60,0)
CLOSE N %Z1 S ZOSFV=($P($ZV,"Version ",2)'<2)
"RTN","ZIS4MSM",61,0)
 C 2 K IO(1,2)
"RTN","ZIS4MSM",62,0)
 D FILE^ZISPL1 I %ZDA'>0 K ZISPLAD Q
"RTN","ZIS4MSM",63,0)
 S %Z1=+$G(^XTV(8989.3,1,"SPL"))
"RTN","ZIS4MSM",64,0)
 S IO=2,%ZFN=$P(%ZS,"^",2) D SPL3 Q:%ZFN'>0  U IO S %ZCR=$C(13),%Y=""
"RTN","ZIS4MSM",65,0)
 G V2CL1^%ZOSV
"RTN","ZIS4MSM",66,0)
 Q  ;Send error up
"RTN","ZIS4MSM",67,0)
CL2 I %Z1<(%+1) S %=%+1,^XMBS(3.519,XS,2,%,0)="*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***",$P(^XMB(3.51,%ZDA,0),"^",11)=1 Q
"RTN","ZIS4MSM",68,0)
 I %2[$C(12) S %=%+1,^XMBS(3.519,XMZ,2,%,0)="|TOP|"
"RTN","ZIS4MSM",69,0)
 S %=%+1,^XMBS(3.519,XMZ,2,%,0)=%2 Q
"RTN","ZIS4MSM",70,0)
 ;
"RTN","ZIS4MSM",71,0)
HFS G HFS^%ZISF
"RTN","ZIS4MSM",72,0)
REWMT(IO,IOPAR) ;Rewind Magtape
"RTN","ZIS4MSM",73,0)
 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",74,0)
 U IO W *5
"RTN","ZIS4MSM",75,0)
 Q 1
"RTN","ZIS4MSM",76,0)
REWSDP(IO,IOPAR) ;Rewind Sequential Block Processor
"RTN","ZIS4MSM",77,0)
 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",78,0)
 U IO:IOPAR
"RTN","ZIS4MSM",79,0)
 Q 1
"RTN","ZIS4MSM",80,0)
REWHFS(IO,IOPAR) ;Rewind Host File.
"RTN","ZIS4MSM",81,0)
REW1 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",82,0)
 U IO:(::0)
"RTN","ZIS4MSM",83,0)
 Q 1
"RTN","ZIS4MSM",84,0)
REWERR ;Error encountered.
"RTN","ZIS4MSM",85,0)
 Q 0
"RTN","ZIS4MSQ")
0^3^B14333898
"RTN","ZIS4MSQ",1,0)
%ZIS4 ;SFISC/GFT,RWF,AC - DEVICE HANDLER SPOOL SPECIFIC CODE (M/SQL) ;4/8/92  13:51
"RTN","ZIS4MSQ",2,0)
 ;;8.0;KERNEL;**23**;JUL 03, 1995
"RTN","ZIS4MSQ",3,0)
 ;
"RTN","ZIS4MSQ",4,0)
OPEN G OPN2:$D(IO(1,IO)) I %IS["T" L +^%ZTSCH("DEV",IO):0 G NOPEN:'$T,NOPEN:$D(^%ZTSCH("DEV",IO))#2,NOPEN:$D(^%ZTSCH("IO",IO))
"RTN","ZIS4MSQ",5,0)
 S POP=0 D OP1 S:'POP IO(1,IO)="" G NOPEN:'$D(IO(1,IO)) I %IS["T" S ^%ZTSCH("DEV",IO)=$H L -^%ZTSCH("DEV",IO)
"RTN","ZIS4MSQ",6,0)
OPN2 I $D(%ZISHP),'$D(IOP) W !,*7," Routing to device "_$P(^%ZIS(1,%E,0),"^",1)_$S($D(^(1)):" "_$P(^(1),"^",1)_" ",1:"")
"RTN","ZIS4MSQ",7,0)
 Q
"RTN","ZIS4MSQ",8,0)
NOPEN L:%IS["T" -^%ZTSCH("DEV",IO) I %IS'["D",$D(%ZISHP)!(%ZISHG]"") S POP=1 Q
"RTN","ZIS4MSQ",9,0)
 I '$D(IOP) W *7,"  [BUSY]" W "  ...  RETRY" S %=2,U="^" D YN^%ZIS1 G OPEN:%=1
"RTN","ZIS4MSQ",10,0)
 K:%E'=%H ^XUTL("ZISPARAM",IO)
"RTN","ZIS4MSQ",11,0)
 S POP=1 Q
"RTN","ZIS4MSQ",12,0)
 Q
"RTN","ZIS4MSQ",13,0)
OP1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSQ",14,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4MSQ",15,0)
 O IO::%ZISTO S:'$T POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4MSQ",16,0)
OPNERR S POP=1,IO("ERROR")=$ZE,IO("LASTERR")=$ZE Q
"RTN","ZIS4MSQ",17,0)
 ;
"RTN","ZIS4MSQ",18,0)
O ;D:$D(%ZISIOS) ZISLPC^%ZIS Q:'%ZISB  ;No longer called in Kernel v8.
"RTN","ZIS4MSQ",19,0)
OPRTPORT I $D(IO("S")),$D(^%ZIS(2,IO("S"),10)),^(10)]"" U IO(0) D X10^ZISX
"RTN","ZIS4MSQ",20,0)
OPAR I $D(IOP),%ZTYPE="HFS",$D(%IS("HFSIO")),$D(%IS("IOPAR")),%IS("HFSIO")]"" S IO=%IS("HFSIO"),%ZISOPAR=%IS("IOPAR")
"RTN","ZIS4MSQ",21,0)
 S %A=$S(%ZISOPAR]"":%ZISOPAR,%ZTYPE'["TRM":"",%ZISIOST?1"C".E:"("_+%Z91_":""C"")",%ZISIOST?1"PK".E:"("_+%Z91_":""P"")",1:+%Z91)
"RTN","ZIS4MSQ",22,0)
 S %A=%A_$S(%A["):":"",%ZTYPE["OTH"&($P(%ZTIME,"^",3)="n"):"",1:":"_%ZISTO),%A=""""_IO_""""_$E(":",%A]"")_%A
"RTN","ZIS4MSQ",23,0)
 D O1 I POP W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4MSQ",24,0)
 S IO(1,IO)="" N DX,DY S (DX,DY)=0 U IO X:$D(^%ZOSF("XY"))&'(IO=IO(0)&'$D(ZTQUEUED)) ^("XY") U:%IS'[0 IO(0) I %ZISUPAR]"" S %A1=""""_IO_""":"_%ZISUPAR U @%A1 U:%IS'[0 IO(0)
"RTN","ZIS4MSQ",25,0)
 G OXECUTE^%ZIS6
"RTN","ZIS4MSQ",26,0)
 ;
"RTN","ZIS4MSQ",27,0)
O1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSQ",28,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4MSQ",29,0)
 O @%A S:'$T&(%A?.E1":".N) POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4MSQ",30,0)
 ;
"RTN","ZIS4MSQ",31,0)
SPOOL ;%ZDA=pointer to ^XMB(3.51, %ZFN=spool file num.
"RTN","ZIS4MSQ",32,0)
 I '$D(^XMB(3.51,0)) W:'$D(IOP) !?5,"The spooler files are not setup in this account." G N
"RTN","ZIS4MSQ",33,0)
 I $D(ZISDA) W:'$D(IOP) !?5,*7,"You may not Spool the printing of a Spool document" G N
"RTN","ZIS4MSQ",34,0)
R S %ZY=-1 D NEWDOC^ZISPL1:$D(DUZ)=11 G N:%ZY'>0 S %ZDA=+%ZY,%ZFN=$P(%ZY(0),U,2),IO("DOC")=$P(%ZY(0),U,1) G OK:$D(IO("Q"))
"RTN","ZIS4MSQ",35,0)
 G:'%ZISB OK I '$P(Y,"^",3),%ZFN D SPL3 G N:%ZFN<0,DOC
"RTN","ZIS4MSQ",36,0)
 F %ZFN=1:1 I '$D(^XMB(3.51,"C",%ZFN))!$D(^(%ZFN,%ZDA)) Q:%ZFN<256  W:'$D(IOP) *7,"  DELETE SOME OTHER DOCUMENT!" G N
"RTN","ZIS4MSQ",37,0)
 D SPL2 S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,"C",%ZFN,%ZDA)=""
"RTN","ZIS4MSQ",38,0)
DOC S IO("SPOOL")=%ZDA,^XUTL("XQ",$J,"SPOOL")=%ZDA
"RTN","ZIS4MSQ",39,0)
 I $D(^%ZIS(1,%ZISIOS,1)),$P(^(1),"^",8),$O(^("SPL",0)) S ^XUTL("XQ",$J,"ADSPL")=%ZISIOS,ZISPLAD=%ZISIOS
"RTN","ZIS4MSQ",40,0)
OK K %ZDA,%ZFN Q
"RTN","ZIS4MSQ",41,0)
N K %ZDA,%ZFN,IO("DOC") S POP=1 Q
"RTN","ZIS4MSQ",42,0)
SPL2 O IO:(%ZFN:0) S IO(1,IO)="",^SPOOL(0,IO("DOC"),%ZFN)="",^SPOOL(%ZFN,0)=IO("DOC")_"{"_$H Q
"RTN","ZIS4MSQ",43,0)
SPL3 G SPL4:'$D(^SPOOL(%ZFN,2147483647)) O IO:(%ZFN:$P(^(2147483647),"{",3)) K ^(2147483647) S IO(1,IO)="" Q
"RTN","ZIS4MSQ",44,0)
SPL4 W:'$D(IOP) !,"Spool file already open" S %ZFN=-1 Q
"RTN","ZIS4MSQ",45,0)
CLOSE N %Z1 C:IO=IO(0) IO K:IO=IO(0) IO(1,IO) D FILE^ZISPL1 I %ZDA'>0 K ZISPLAD Q
"RTN","ZIS4MSQ",46,0)
 S %ZFN=$P(%ZS,"^",2),%ZCR=$C(13),%Y="",%=0,%3=$P(^SPOOL(%ZFN,2147483647),"{",3)-1
"RTN","ZIS4MSQ",47,0)
 S %Z1=+$G(^XTV(8989.3,1,"SPL"))
"RTN","ZIS4MSQ",48,0)
 F %2=1:1:%3 S %X=^SPOOL(%ZFN,%2),%=%+1 D LIMIT:%Z1<% Q:%Z1<%  S ^XMBS(3.519,XS,2,%,0)=$S($C(13,10)[%X:"",%X[$C(12):"|TOP|",1:$P(%X,$C(13),1))
"RTN","ZIS4MSQ",49,0)
 K ^SPOOL(%ZFN),^SPOOL(0,$P(%ZS,U,1)),%Y,%X,%1,%2,%3 D CLOSE^ZISPL1
"RTN","ZIS4MSQ",50,0)
 Q
"RTN","ZIS4MSQ",51,0)
LIMIT S ^XMBS(3.519,XS,2,%,0)="*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***",$P(^XMB(3.51,%ZDA,0),"^",11)=1 Q
"RTN","ZIS4MSQ",52,0)
HFS G HFS^%ZISF
"RTN","ZIS4VXD")
0^4^B16768151
"RTN","ZIS4VXD",1,0)
%ZIS4 ;SFISC/GFT,RWF,MVB - DEVICE HANDLER SPOOL SPECIFIC CODE(VAX DSM) ;4/8/92  13:53
"RTN","ZIS4VXD",2,0)
 ;;8.0;KERNEL;**23**;JUL 03, 1995
"RTN","ZIS4VXD",3,0)
 ;
"RTN","ZIS4VXD",4,0)
OPEN G OPN2:$D(IO(1,IO))
"RTN","ZIS4VXD",5,0)
 S POP=0 D OP1 S:'POP IO(1,IO)="" G NOPEN:'$D(IO(1,IO))
"RTN","ZIS4VXD",6,0)
OPN2 I $D(%ZISHP),'$D(IOP) W !,*7," Routing to device "_$P(^%ZIS(1,%E,0),"^",1)_$S($D(^(1)):" "_$P(^(1),"^",1)_" ",1:"")
"RTN","ZIS4VXD",7,0)
 Q
"RTN","ZIS4VXD",8,0)
NOPEN I %IS'["D",$D(%ZISHP)!(%ZISHG]"") S POP=1 Q
"RTN","ZIS4VXD",9,0)
 I '$D(IOP) W *7,"  [BUSY]" W "  ...  RETRY" S %=2,U="^" D YN^%ZIS1 G OPEN:%=1
"RTN","ZIS4VXD",10,0)
 S POP=1 Q
"RTN","ZIS4VXD",11,0)
 Q
"RTN","ZIS4VXD",12,0)
OP1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",13,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4VXD",14,0)
 O IO::%ZISTO S:'$T POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4VXD",15,0)
OPNERR S POP=1,IO("ERROR")=$ZE,IO("LASTERR")=$ZE Q
"RTN","ZIS4VXD",16,0)
 ZQ
"RTN","ZIS4VXD",17,0)
O S:%IS["L" IO("ZIO")=$ZIO
"RTN","ZIS4VXD",18,0)
 ;D:$D(%ZISIOS) ZISLPC^%ZIS Q:'%ZISB  ;No longer called in Kernel v8.
"RTN","ZIS4VXD",19,0)
LCKGBL ;Lock Global
"RTN","ZIS4VXD",20,0)
 I %ZTYPE="CHAN" N % S %=$G(^%ZIS(1,+%E,"GBL")) I %]"" L @("+^"_%_":0") S:'$T POP=1 I POP W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4VXD",21,0)
OPRTPORT I $D(IO("S")),$D(^%ZIS(2,IO("S"),10)),^(10)]"" U IO(0) D X10^ZISX
"RTN","ZIS4VXD",22,0)
OPAR I $D(IOP),%ZTYPE="HFS",$D(%IS("HFSIO")),$D(%IS("IOPAR")),%IS("HFSIO")]"" S IO=%IS("HFSIO"),%ZISOPAR=%IS("IOPAR")
"RTN","ZIS4VXD",23,0)
 I %ZTYPE="CHAN",IO["::""TASK="!(IO["SYS$NET") D ODECNET Q:POP  G OXECUTE^%ZIS6
"RTN","ZIS4VXD",24,0)
 S %A=%ZISOPAR_$S(%ZISOPAR["):":"",%ZTYPE["CHAN"&($P(%ZTIME,"^",3)="n"):"",1:":"_%ZISTO)
"RTN","ZIS4VXD",25,0)
 N % S %(IO)="",%=$P($P($NA(%(IO)),"(",2),")")
"RTN","ZIS4VXD",26,0)
 S %A=%_$E(":",%A]"")_%A
"RTN","ZIS4VXD",27,0)
 ;,%A=""""_IO_""""_$E(":",%A]"")_%A
"RTN","ZIS4VXD",28,0)
 D O1 I POP D  Q
"RTN","ZIS4VXD",29,0)
 .I %ZTYPE="HFS",'$D(IOP),$G(IO("ERROR"))["file not found" W !,?5,*7,"[FILE NOT FOUND]" Q
"RTN","ZIS4VXD",30,0)
 .W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4VXD",31,0)
 S IO(1,IO)="" N DX,DY S (DX,DY)=0 U IO X:$D(^%ZOSF("XY"))&'(IO=IO(0)&'$D(ZTQUEUED)&'$D(IO("S"))) ^("XY") U:%IS'[0 IO(0) I %ZTYPE["TRM" U IO:(WIDTH=+%Z91) U:%IS'[0 IO(0)
"RTN","ZIS4VXD",32,0)
 I %ZISUPAR]"" S %A1=""""_IO_""":"_%ZISUPAR U @%A1 U:%IS'[0 IO(0)
"RTN","ZIS4VXD",33,0)
 G OXECUTE^%ZIS6
"RTN","ZIS4VXD",34,0)
 ;
"RTN","ZIS4VXD",35,0)
O1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",36,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4VXD",37,0)
 O @%A S:'$T&(%A?.E1":".N) POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4VXD",38,0)
 ;
"RTN","ZIS4VXD",39,0)
ODECNET ;OPEN DECNET CHANNEL
"RTN","ZIS4VXD",40,0)
 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",41,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60 O IO L:$D(%ZISLOCK) -@%ZISLOCK
"RTN","ZIS4VXD",42,0)
 I IO="SYS$NET",$I="SYS$INPUT:;" S IO(0)=IO U IO Q
"RTN","ZIS4VXD",43,0)
 Q
"RTN","ZIS4VXD",44,0)
 ;
"RTN","ZIS4VXD",45,0)
SPOOL ;%ZDA=pointer to ^XMB(3.51, %ZFN=spool file name.
"RTN","ZIS4VXD",46,0)
 I $D(ZISDA) W:'$D(IOP) !?5,*7,"You may not Spool the printing of a Spool document" G N
"RTN","ZIS4VXD",47,0)
 I $D(DUZ)[0 W:'$D(IOP) !,"Must be a valid user." G N
"RTN","ZIS4VXD",48,0)
R S %ZY=-1 D NEWDOC^ZISPL1 G N:%ZY'>0 S %ZDA=+%ZY,%ZFN=$P(%ZY(0),U,2),IO("DOC")=$P(%ZY(0),U,1) G OK:$D(IO("Q"))
"RTN","ZIS4VXD",49,0)
 G:'%ZISB OK I '$P(%ZY,"^",3),%ZFN]"" D SPL3 G N:%ZFN']"",DOC
"RTN","ZIS4VXD",50,0)
 S %ZFN=IO_"SPOOL_no_"_%ZDA_".TMP" D SPL2 G:%ZFN']"" N S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,"C",%ZFN,%ZDA)=""
"RTN","ZIS4VXD",51,0)
DOC S IO=%ZFN,IO("SPOOL")=%ZDA,^XUTL("XQ",$J,"SPOOL")=%ZDA,IOF="#"
"RTN","ZIS4VXD",52,0)
 I $D(^%ZIS(1,%ZISIOS,1)),$P(^(1),"^",8),$O(^("SPL",0)) S ^XUTL("XQ",$J,"ADSPL")=%ZISIOS,ZISPLAD=%ZISIOS
"RTN","ZIS4VXD",53,0)
OK K %ZDA,%ZFN Q
"RTN","ZIS4VXD",54,0)
N K %ZDA,%ZFN,IO("DOC") S POP=1 Q
"RTN","ZIS4VXD",55,0)
SPL2 O %ZFN:(NEWVERSION:PROT=W:RWD) G:$ZA<0 SPL4 S IO(1,%ZFN)="" Q
"RTN","ZIS4VXD",56,0)
SPL3 N X S X="SPL4^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",57,0)
 O %ZFN:READONLY:1 S:'$T ZISPLQ=1 G:$ZA<0!('$T) SPL4 S IO(1,%ZFN)="" Q
"RTN","ZIS4VXD",58,0)
SPL4 W:'$D(IOP) !?5,*7,"Couldn't open the spool file." S %ZFN="" Q
"RTN","ZIS4VXD",59,0)
CLOSE N %Z1 C:IO]"" IO K:IO]"" IO(1,IO) D FILE^ZISPL1 I %ZDA'>0 K ZISPLAD Q
"RTN","ZIS4VXD",60,0)
 S %ZFN=$P(%ZS,"^",2) D SPL3 Q:%ZFN']""  U %ZFN S %ZCR=$C(13),%Y="",$ZT="SPLEOF^%ZIS4"
"RTN","ZIS4VXD",61,0)
 S %Z1=+$G(^XTV(8989.3,1,"SPL"))
"RTN","ZIS4VXD",62,0)
 F %=0:0 R %X:5 Q:$ZA<0  S %2=%X D CL2 G:%Z1<% SPLEX
"RTN","ZIS4VXD",63,0)
SPLEOF I $ZE'["ENDO" ZQ  ;Send error up
"RTN","ZIS4VXD",64,0)
SPLEX C %ZFN:DELETE K:%ZFN]"" IO(1,%ZFN) D CLOSE^ZISPL1 K %Y,%X,%1,%ZFN Q
"RTN","ZIS4VXD",65,0)
 ;
"RTN","ZIS4VXD",66,0)
CL2 S %=%+1 I %Z1<% S ^XMBS(3.519,XS,2,%,0)="*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***",$P(^XMB(3.51,%ZDA,0),"^",11)=1 Q
"RTN","ZIS4VXD",67,0)
 I %2[$C(12) S ^XMBS(3.519,XS,2,%,0)="|TOP|" Q
"RTN","ZIS4VXD",68,0)
 S ^XMBS(3.519,XS,2,%,0)=%2 Q
"RTN","ZIS4VXD",69,0)
 ;
"RTN","ZIS4VXD",70,0)
HFS G HFS^%ZISF
"RTN","ZIS4VXD",71,0)
REWMT(IO,IOPAR) ;Rewind Magtape
"RTN","ZIS4VXD",72,0)
 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",73,0)
 U IO W *5
"RTN","ZIS4VXD",74,0)
 Q 1
"RTN","ZIS4VXD",75,0)
REWSDP(IO,IOPAR) ;Rewind SDP
"RTN","ZIS4VXD",76,0)
 G REW1
"RTN","ZIS4VXD",77,0)
REWHFS(IO,IOPAR) ;Rewind Host File.
"RTN","ZIS4VXD",78,0)
REW1 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",79,0)
 U IO:DISCONNECT
"RTN","ZIS4VXD",80,0)
 Q 1
"RTN","ZIS4VXD",81,0)
REWERR ;Error encountered
"RTN","ZIS4VXD",82,0)
 Q 0
"RTN","ZISPL")
0^6^B21502685
"RTN","ZISPL",1,0)
ZISPL ;SF/RWF - UTILITIES FOR SPOOLING ;05/17/96  07:32
"RTN","ZISPL",2,0)
 ;;8.0;KERNEL;**23**;Jul 10, 1995
"RTN","ZISPL",3,0)
 ;This is the general code for managment of the spooler file.
"RTN","ZISPL",4,0)
DELETE ;delete a document from the file.
"RTN","ZISPL",5,0)
A S DIC("A")="Delete which SPOOL DOCUMENT: " D GETDOC G:Y<0 EXIT
"RTN","ZISPL",6,0)
 I '$P(ZISPL0,U,7) W !,*7,"This Document hasn't been printed.  Are you sure??"
"RTN","ZISPL",7,0)
 S DIR(0)="S^n:NO;y:YES;c:CLEAR",DIR("A")="...OK TO DELETE",DIR("B")="NO" D ^DIR K DIR G:$D(DIRUT)!("yc"'[Y) EXIT
"RTN","ZISPL",8,0)
 S ZISY=Y D DSD($P(ZISPL0,U,10)) ;delete data
"RTN","ZISPL",9,0)
 I ZISY["c" S X=^XMB(3.51,ZISDA,0),^(0)=$P(X,"^",1)_"^^^^"_DUZ_"^^^"_$P(X,"^",8) K ^XMB(3.51,ZISDA,2) W " ... DOCUMENT CLEARED!!" G EXIT
"RTN","ZISPL",10,0)
 ;
"RTN","ZISPL",11,0)
 D DSDOC(ZISDA) ;Delete entry
"RTN","ZISPL",12,0)
 W "  ...DOCUMENT DELETED!!",*7,!
"RTN","ZISPL",13,0)
 G EXIT
"RTN","ZISPL",14,0)
DEL ;Called from mailman to delete the document.
"RTN","ZISPL",15,0)
 Q  ;Obsolete
"RTN","ZISPL",16,0)
GETDOC ;Get a spool document to work on.
"RTN","ZISPL",17,0)
 S Y=-1 Q:$D(DUZ)[0  S ZISPLU=$S($D(^VA(200,DUZ,"SPL")):^("SPL"),1:"") I $P(ZISPLU,"^",1)'["y" W !,?5,*7,"You must be authorized by IRM to use spooling" Q
"RTN","ZISPL",18,0)
 S DIC=3.51,DIC(0)="AEMQZ" D ^DIC Q:Y<0  I $P(Y(0),U,2)]"" W !,?5,*7,"This spool is still active and can't be worked on." G GETDOC
"RTN","ZISPL",19,0)
 S ZISDA=+Y,ZISPL0=Y(0) K DIC Q
"RTN","ZISPL",20,0)
 ;
"RTN","ZISPL",21,0)
PRINT ;
"RTN","ZISPL",22,0)
 N DIC,DIE,DR,DA,X,Y,ZISPL0,ZISPG,ZISDA,ZISDA2,ZISPLC
"RTN","ZISPL",23,0)
P S DIC("A")="Print which SPOOL DOCUMENT: " D GETDOC K IOP,%ZIS,%IS Q:Y<0
"RTN","ZISPL",24,0)
 S ZISPG=$P(ZISPL0,U,8) I $P(ZISPL0,U,3)="m" W !,"Sorry, this spool document has been converted into a mail message",!,"and you are unable to print it" G EXIT
"RTN","ZISPL",25,0)
 I $P(ZISPL0,U,10)'>0 W !,"Sorry there isn't anything to print." G EXIT
"RTN","ZISPL",26,0)
 I $P(ZISPL0,U,11) D MSG2 S %=2 D YN^DICN G EXIT:%'=1
"RTN","ZISPL",27,0)
 S DIE="^XMB(3.51,",DR="[XU-ZISPL1]",DA=ZISDA D ^DIE G:'$D(ZISDA2) EXIT
"RTN","ZISPL",28,0)
IO S %IS="MQ" D ^%ZIS G:POP EXIT
"RTN","ZISPL",29,0)
 I +ZISPG>IOM!($P(ZISPG,";",2)>IOSL) D ^%ZISC W !,?5,"Current page is ",IOM," by ",IOSL,!?5,"Page must be at least ",+ZISPG," by ",$P(ZISPG,";",2) G IO
"RTN","ZISPL",30,0)
 W ! I '$D(IO("Q")) G DQP^ZISPL2
"RTN","ZISPL",31,0)
 S ZTRTN="DQP^ZISPL2",ZTDESC="Print spool document",ZTIO=ION_";"_IOST_";"_IOM_";"_IOSL,ZTSAVE("ZISDA")="",ZTSAVE("ZISDA2")="",ZTSAVE("ZISPLC")=""
"RTN","ZISPL",32,0)
 K IO("Q") D ^%ZTLOAD,^%ZISC K ZTSK G EXIT:$P(ZISPLU,"^",2)'["y" W !!,"Also send to" G IO
"RTN","ZISPL",33,0)
 ;
"RTN","ZISPL",34,0)
EXIT D KILL^XUSCLEAN S ZTREQ="@" Q
"RTN","ZISPL",35,0)
 ;
"RTN","ZISPL",36,0)
KERMIT ;Use Kermit to send a spooler file
"RTN","ZISPL",37,0)
 D GETDOC Q:Y'>0  S ZISDA=$P(ZISPL0,U,10) G EXIT:ZISDA'>0 S XTKDIC="^XMBS(3.519,"_ZISDA_",2,",XTKFILE=$P(ZISPL0,U)
"RTN","ZISPL",38,0)
 D MODE^XTKERMIT G EXIT:$D(DIRUT) D SEND^XTKERMIT G EXIT
"RTN","ZISPL",39,0)
 ;
"RTN","ZISPL",40,0)
BROWSE ;Use FM Browser to look at document
"RTN","ZISPL",41,0)
 D GETDOC Q:Y'>0  S ZISDA=$P(ZISPL0,U,10) G EXIT:ZISDA'>0
"RTN","ZISPL",42,0)
 D BROWSE^DDBR($NA(^XMBS(3.519,ZISDA,2)),"NR",$P(ZISPL0,U)) G EXIT
"RTN","ZISPL",43,0)
 ;
"RTN","ZISPL",44,0)
MAIL ;Make into a mail message
"RTN","ZISPL",45,0)
 S ZISPLU=$S($D(^VA(200,DUZ,"SPL")):^("SPL"),1:"") I $P(ZISPLU,U,3)["n" W !,"You are not authorized to convert Spool Documents into Mail Messages." G EXIT
"RTN","ZISPL",46,0)
 S Y=-1 D GETDOC G:Y'>0 EXIT S XS=$P(ZISPL0,"^",10) I 'XS D MSG1 G EXIT
"RTN","ZISPL",47,0)
 S DIR(0)="Y",DIR("A")="Convert spool doc: "_$P(ZISPL0,U)_" into a mail message",DIR("B")="YES" D ^DIR G EXIT:$D(DIRUT),EXIT:Y'=1
"RTN","ZISPL",48,0)
 ;The following code will move the text from file #3.519 into file #3.9,
"RTN","ZISPL",49,0)
 S %=$P(ZISPL0,U,9) I '+% D MSG1 G EXIT
"RTN","ZISPL",50,0)
 G DQMAIL:%<500 W !,"You have "_%_" lines of text to convert into a mail message.",!,"Do you wish to queue this conversion process" S %=1 D YN^DICN G EXIT:$D(DIRUT),DQMAIL:%=2
"RTN","ZISPL",51,0)
 ;
"RTN","ZISPL",52,0)
 S ZTIO="",ZTRTN="DQMAIL^ZISPL",ZTDESC="Convert spool document into mail message",ZTSAVE("ZISDA")="" D ^%ZTLOAD G EXIT
"RTN","ZISPL",53,0)
 ;
"RTN","ZISPL",54,0)
DQMAIL W:'$D(ZTQUEUED) !,"Moving it..."
"RTN","ZISPL",55,0)
 S ZISPL0=$G(^XMB(3.51,ZISDA,0)),XS=$P(ZISPL0,"^",10),XMY(DUZ)="",XMTEXT="^XMBS(3.519,"_XS_",2,",XMSUB="Spool document: "_$P(ZISPL0,"^")
"RTN","ZISPL",56,0)
 D:XS>0 ^XMD ;to make new I $D(XMZ) S XMDUZ=DUZ D NNEW^XMA
"RTN","ZISPL",57,0)
 D DSDOC(ZISDA),DSD(XS) W:'$D(ZTQUEUED) !,"  Now a normal mail message.."
"RTN","ZISPL",58,0)
 G EXIT
"RTN","ZISPL",59,0)
 ;
"RTN","ZISPL",60,0)
DSD(DA) ;Delete an entry in the spool data file.
"RTN","ZISPL",61,0)
 Q:DA'>0  N DIK K ^XMB(3.51,"AM",DA) S DIK="^XMBS(3.519," D ^DIK
"RTN","ZISPL",62,0)
 Q
"RTN","ZISPL",63,0)
DSDOC(DA) ;Delete an entry in the spool doc file.
"RTN","ZISPL",64,0)
 Q:DA'>0  N DIK S DIK="^XMB(3.51," D ^DIK
"RTN","ZISPL",65,0)
 Q
"RTN","ZISPL",66,0)
 ;
"RTN","ZISPL",67,0)
MSG1 W !,"This spool document doesn't have any text." Q
"RTN","ZISPL",68,0)
MSG2 W !,"You have exceeded the total spool document line limit allowed."
"RTN","ZISPL",69,0)
 W !,"Therefore, this spool document is incomplete."
"RTN","ZISPL",70,0)
 W !!,"Do you still wish to print this document" Q
"RTN","ZISPL",71,0)
 ;
"RTN","ZISPL1")
0^7^B14496737
"RTN","ZISPL1",1,0)
ZISPL1 ;SF/RWF - %ZIS UTILITIES FOR SPOOLING ;2/8/96  13:55
"RTN","ZISPL1",2,0)
 ;;8.0;KERNEL;**23**;Jul 10, 1995
"RTN","ZISPL1",3,0)
 ;This is general code for managment of the spooler file from %ZIS.
"RTN","ZISPL1",4,0)
 Q
"RTN","ZISPL1",5,0)
 ;
"RTN","ZISPL1",6,0)
FILE ;Called by %ZIS4 to setup spool data file.
"RTN","ZISPL1",7,0)
 S %ZDA=$S($D(IO("SPOOL")):IO("SPOOL"),$D(^XUTL("XQ",$J,"SPOOL")):^("SPOOL"),1:0) Q:%ZDA'>0
"RTN","ZISPL1",8,0)
 I '$D(ZISPLAD),$D(^XUTL("XQ",$J,"ADSPL")) S ZISPLAD=^("ADSPL")
"RTN","ZISPL1",9,0)
 K ^XUTL("XQ",$J,"SPOOL"),^("ADSPL"),IO("SPOOL") S %ZS=$S($D(^XMB(3.51,%ZDA,0)):^(0),1:"") I %ZS']"" S %ZDA=-1 Q
"RTN","ZISPL1",10,0)
 I '$D(ZTSK) S ZTRTN="DQC^ZISPL1",ZTDESC="Background Spool Filer",ZTDTH=$H,ZTIO="",ZTSAVE("%ZDA")="" S:$D(ZISPLAD) ZTSAVE("ZISPLAD")="",ZTSAVE("%ZS")="" D ^%ZTLOAD K ZISPLAD,ZTSK S %ZDA=-1 Q
"RTN","ZISPL1",11,0)
 N X,Y K DD,DO S X=%ZDA,DIC="^XMBS(3.519,",DIC(0)="LZ",DLAYGO=3.519 D FILE^DICN S XS=+Y
"RTN","ZISPL1",12,0)
 K DD,DO,DLAYGO
"RTN","ZISPL1",13,0)
 S $P(^XMB(3.51,%ZDA,0),"^",3)="a",$P(^(0),"^",6)=DT,$P(^(0),"^",10)=XS,^XMB(3.51,"AM",XS,%ZDA)="" Q
"RTN","ZISPL1",14,0)
 ;
"RTN","ZISPL1",15,0)
CLOSE S ^XMBS(3.519,XS,2,0)="^^"_%_"^"_%,$P(^XMB(3.51,%ZDA,0),"^",2,3)="^r",$P(^(0),"^",9)=%
"RTN","ZISPL1",16,0)
 I $D(ZISPLAD) F %=0:0 S %=$O(^%ZIS(1,+ZISPLAD,"SPL",%)) Q:%'>0  D
"RTN","ZISPL1",17,0)
 .I $D(^%ZIS(1,+ZISPLAD,"SPL",%,0)) S %X=^(0) D
"RTN","ZISPL1",18,0)
 ..S ZISPLC=$S($P(%X,"^",2)]"":+$P(%X,"^",2),1:1),%X=$P(%X,"^")
"RTN","ZISPL1",19,0)
 ..I $D(^%ZIS(1,+%X,0)) K ZISDA2 S ZISPLDV=$P(^(0),"^"),DIE="^XMB(3.51,",DR="[XU-ZISPL1]",(ZISDA,DA)=%ZDA D ADSPL
"RTN","ZISPL1",20,0)
 K ^XMB(3.51,"C",%ZFN),XMZ,XMDUZ,%ZDA,%ZFN,% Q
"RTN","ZISPL1",21,0)
 ;
"RTN","ZISPL1",22,0)
DQC ;DQ the move from spool to mail message.
"RTN","ZISPL1",23,0)
 S IO("SPOOL")=%ZDA D CLOSE^%ZIS4 Q
"RTN","ZISPL1",24,0)
 ;
"RTN","ZISPL1",25,0)
ADSPL N %,ZTSK D ^DIE Q:'$D(ZISDA2)
"RTN","ZISPL1",26,0)
 S %X="^"_ZISPLC_"^^^^^"_ZISPLDV_";"_$P(%ZS,"^",8)_"^"_$H
"RTN","ZISPL1",27,0)
 ;
"RTN","ZISPL1",28,0)
QDSPL S ZISPLC=$P(%X,"^",2),ZTIO=$P(%X,"^",7),ZTDTH=$P(%X,"^",8),ZTRTN="DQP^ZISPL2",ZTDESC="Auto despool document"
"RTN","ZISPL1",29,0)
 I ZTIO]"",ZTDTH]"",ZISPLC S ZISDA=%ZDA,ZTSAVE("ZISDA")="",ZTSAVE("ZISDA2")="",ZTSAVE("ZISPLC")="" D ^%ZTLOAD K ZTSK
"RTN","ZISPL1",30,0)
 Q
"RTN","ZISPL1",31,0)
 ;
"RTN","ZISPL1",32,0)
NEWDOC ;Called by %ZIS4 to get or setup a spool document.
"RTN","ZISPL1",33,0)
 N DIC,X,Y I $S($D(^VA(200,DUZ,"SPL")):$E(^("SPL"),1),1:"N")'["y" W:'$D(IOP) !?5,"You aren't an authorized SPOOLER user." Q
"RTN","ZISPL1",34,0)
 D LIMITS
"RTN","ZISPL1",35,0)
 I '$D(IOP),%Z1<%Z2!($P(%Z1,"^",2)<%Z3) D MSG1 Q
"RTN","ZISPL1",36,0)
R S %Y=$S($D(IO("DOC")):IO("DOC"),$G(%ZISMY)]"":$P(%ZISMY,";",1),1:$P(%Y,";",1)) K %Z1,%Z2,%Z3
"RTN","ZISPL1",37,0)
 S DIC=3.51,U="^",DIC("DR")="",DIC("S")="I '$P(^(0),U,10)",DIC("W")="W "" Status: "",$P(^(0),U,3),""  Lines: "",$P(^(0),U,9)"
"RTN","ZISPL1",38,0)
 I %IS'[0,$D(^%ZIS(1,%ZISIOS,1)),$P(^(1),"^",9) D GENDOC G R1
"RTN","ZISPL1",39,0)
 I $D(IOP) S X=%Y,DIC(0)="XMLZ"
"RTN","ZISPL1",40,0)
 E  S DIC(0)="AEQMZL" S:%Y?1A.ANP DIC("B")=%Y
"RTN","ZISPL1",41,0)
 S DLAYGO=3,%ZY=-1 D ^DIC K DLAYGO Q:Y<0
"RTN","ZISPL1",42,0)
R1 S %ZY=Y,%ZY(0)=Y(0),ZISIOST="P-OTHER",$P(%Z91,"^",2)="#" G:'$P(Y,"^",3) ND3
"RTN","ZISPL1",43,0)
 S %=$P($H,",",2),%=$S($D(DT)#2:DT_(%#3600\60/100+(%\3600)/100),1:"")
"RTN","ZISPL1",44,0)
 S ^XMB(3.51,+Y,0)=$P(^XMB(3.51,+Y,0),"^",1)_"^^o^"_%_U_DUZ_"^^^"_+%Z91_";"_$P(%Z91,"^",3),^XMB(3.51,"AOK",+Y,DUZ)="",^XMB(3.51,"ADUZ",DUZ,+Y)=""
"RTN","ZISPL1",45,0)
ND3 S %=$P(^XMB(3.51,+Y,0),"^",8),$P(%Z91,"^")=+%,$P(%Z91,"^",3)=$P(%,";",2)
"RTN","ZISPL1",46,0)
 Q
"RTN","ZISPL1",47,0)
LIMITS S %Z1=$G(^XTV(8989.3,1,"SPL")),(%Z2,%Z3)=0
"RTN","ZISPL1",48,0)
 F %=0:0 S %=$O(^XMB(3.51,"ADUZ",DUZ,%)) Q:%'>0  S %Z4=$S($D(^XMB(3.51,%,0)):^(0),1:""),%Z2=%Z2+$P(%Z4,"^",9),%Z3=$P(%Z4,"^",10)>1+%Z3
"RTN","ZISPL1",49,0)
 Q
"RTN","ZISPL1",50,0)
GENDOC ;Auto generate document name.
"RTN","ZISPL1",51,0)
 D FLST S %ZY=$E($P(^%ZIS(1,%ZISIOS,0),"^"),1,15)
"RTN","ZISPL1",52,0)
G1 S ZISPLST=ZISPLST+1,DIC=3.51,DIC(0)="XMLZ",DINUM=+ZISPLST,X=%ZY_"_"_+ZISPLST G G1:$D(^XMB(3.51,+ZISPLST,0)),G1:$O(^XMB(3.51,"B",X,0))>0
"RTN","ZISPL1",53,0)
 S DLAYGO=3 D ^DIC K DLAYGO I Y'>0 G G1
"RTN","ZISPL1",54,0)
 Q
"RTN","ZISPL1",55,0)
 ;
"RTN","ZISPL1",56,0)
MSG1 W !,*7,"You have too many documents or lines, Please delete some documents" Q
"RTN","ZISPL1",57,0)
 ;
"RTN","ZISPL1",58,0)
FLST S X=$S($D(^XMB(3.51,0)):$P(^(0),"^",3),1:0),A=X
"RTN","ZISPL1",59,0)
 F I=+X:1:1 S I=$O(^XMB(3.51,I)) Q:I'>0
"RTN","ZISPL1",60,0)
 S ZISPLST=A Q
"RTN","ZISPL2")
0^8^B5205321
"RTN","ZISPL2",1,0)
ZISPL2 ;SF/RWF - SPOOLER CLEAN-UP ;05/17/96  07:35
"RTN","ZISPL2",2,0)
 ;;8.0;KERNEL;**23**;Jul 10, 1995
"RTN","ZISPL2",3,0)
1 S ZISPL=$G(^XTV(1,1,"SPL"),"1^1^999"),X="T-"_$P(ZISPL,"^",3),%DT="T" D ^%DT Q:Y'>0  S ZISDT=Y
"RTN","ZISPL2",4,0)
 F DA=0:0 S DA=$O(^XMB(3.51,DA)) Q:DA'>0  S ZIS=^XMB(3.51,DA,0) I "rpm"[$P(ZIS,"^",3),ZISDT>$S($P(ZIS,"^",6)["":$P(ZIS,"^",6),$P(ZIS,"^",4)]"":$P(ZIS,"^",4),1:ZISDT) D DELETE
"RTN","ZISPL2",5,0)
 F DA=0:0 S DA=$O(^XMB(3.51,DA)) Q:DA'>0  S ZIS=^XMB(3.51,DA,0) I "ao"[$P(ZIS,"^",3),ZISDT>$S($P(ZIS,"^",6)["":$P(ZIS,"^",6),$P(ZIS,"^",4)]"":$P(ZIS,"^",4),1:ZISDT) D CLOSE
"RTN","ZISPL2",6,0)
 K DA,DIC,ZIS,ZISPL Q
"RTN","ZISPL2",7,0)
DELETE ;REMOVE SPOOL DOC.
"RTN","ZISPL2",8,0)
 D DSD^ZISPL($P(ZIS,U,10)) ;Delete Spool Data entry
"RTN","ZISPL2",9,0)
 S DIK="^XMB(3.51," D ^DIK ;Delete entry
"RTN","ZISPL2",10,0)
 Q
"RTN","ZISPL2",11,0)
CLOSE ;Close a SPOOL DOC that has been open too long.
"RTN","ZISPL2",12,0)
 S %ZFN=$P(ZIS,"^",2),IO=%ZFN,IO("SPOOL")=DA,X="ET^ZISPL2",@^%ZOSF("TRAP") D SPL3^%ZIS4 I %ZFN="" D DELETE Q
"RTN","ZISPL2",13,0)
 X "N DA,ZIS D CLOSE^%ZIS4" Q
"RTN","ZISPL2",14,0)
ET ;TRAP ERROR.
"RTN","ZISPL2",15,0)
 D DELETE Q
"RTN","ZISPL2",16,0)
DQP Q:'$D(^XMB(3.51,ZISDA,2,ZISDA2,0))!('$D(ZISPLC))  ;Dequeue print
"RTN","ZISPL2",17,0)
 S ZISPL0=^XMB(3.51,ZISDA,0),FF="|TOP|",XS=$P(ZISPL0,U,10) Q:XS'>0
"RTN","ZISPL2",18,0)
 U IO F ZISCNT=ZISPLC:-1:1 S PG=1 D OUT S $P(^(0),U,6)=$P(^XMB(3.51,ZISDA,2,ZISDA2,0),U,6)+1
"RTN","ZISPL2",19,0)
 W:$Y>3 @IOF D NOW^%DTC S $P(^XMB(3.51,ZISDA,0),"^",3)="p",$P(^(0),"^",7)=%,$P(^XMB(3.51,ZISDA,2,ZISDA2,0),U,3,5)="^^"_%
"RTN","ZISPL2",20,0)
 D ^%ZISC G EXIT^ZISPL
"RTN","ZISPL2",21,0)
 ;
"RTN","ZISPL2",22,0)
OUT ;
"RTN","ZISPL2",23,0)
 F I=0:0 S I=$O(^XMBS(3.519,XS,2,I)) Q:I'>0  S X=^(I,0),Y=(X=FF) W:Y @IOF W:'Y X,! I Y S PG=PG+1,$P(^XMB(3.51,ZISDA,2,ZISDA2,0),"^",3,4)=PG_"^"_I
"RTN","ZISPL2",24,0)
 Q
"RTN","ZTM2")
0^9^B12041707
"RTN","ZTM2",1,0)
%ZTM2 ;SEA/RDS-TaskMan: Manager, Part 4 (Link Handling 1) ;2/12/96  08:39
"RTN","ZTM2",2,0)
 ;;8.0;KERNEL;**23**;JUL 10, 1995
"RTN","ZTM2",3,0)
 ;
"RTN","ZTM2",4,0)
XLINK ;SEND^%ZTM--determine routing of XCPU task
"RTN","ZTM2",5,0)
 S ZTJOBIT=0
"RTN","ZTM2",6,0)
 S ZTI=$O(^%ZIS(14.5,"B",ZTDVOL,""))
"RTN","ZTM2",7,0)
 S ZTS=^%ZIS(14.5,ZTI,0)
"RTN","ZTM2",8,0)
 I $P(ZTS,U,4)="Y" G DOWN
"RTN","ZTM2",9,0)
 S ZTM=$P(ZTS,U,6)
"RTN","ZTM2",10,0)
 S ZTN=$P(ZTS,U,7) I ZTN S ZTN=$P(^%ZIS(14.5,ZTN,0),U)
"RTN","ZTM2",11,0)
 I ZTN="" S ZTN=ZTDVOL
"RTN","ZTM2",12,0)
 I ZTN=%ZTVOL S ZTJOBIT=1 Q
"RTN","ZTM2",13,0)
 I $D(^%ZTSCH("LINK",ZTDVOL)) G DOWN
"RTN","ZTM2",14,0)
 I ZTYPE="C" S ZTJOBIT=1 Q
"RTN","ZTM2",15,0)
 ;
"RTN","ZTM2",16,0)
OCPU ;XLINK--send task to manager on another volume set
"RTN","ZTM2",17,0)
 S X="EROCPU^%ZTM2",@^%ZOSF("TRAP")
"RTN","ZTM2",18,0)
 I '$D(^[ZTM,ZTN]%ZTSCH("RUN")) S ZTT=$H G O1
"RTN","ZTM2",19,0)
 S ZTT=^[ZTM,ZTN]%ZTSCH("RUN")
"RTN","ZTM2",20,0)
 ;
"RTN","ZTM2",21,0)
O1 L +^[ZTM,ZTN]%ZTSK(-1)
"RTN","ZTM2",22,0)
 S ZTS=^[ZTM,ZTN]%ZTSK(-1)+1
"RTN","ZTM2",23,0)
 F ZT=0:0 Q:'$D(^[ZTM,ZTN]%ZTSK(ZTS))  S ZTS=ZTS+1
"RTN","ZTM2",24,0)
 S ^[ZTM,ZTN]%ZTSK(-1)=ZTS
"RTN","ZTM2",25,0)
 ;
"RTN","ZTM2",26,0)
 L -^[ZTM,ZTN]%ZTSK(-1),+^[ZTM,ZTN]%ZTSK(ZTS)
"RTN","ZTM2",27,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,3)=1_U_ZTT_U
"RTN","ZTM2",28,0)
 S %X="^%ZTSK(ZTSK,",%Y="^[ZTM,ZTN]%ZTSK(ZTS," D %XY^%RCR
"RTN","ZTM2",29,0)
 ;Now schedule task.
"RTN","ZTM2",30,0)
 S $P(^[ZTM,ZTN]%ZTSK(ZTS,0),U,6)=ZTT,^[ZTM,ZTN]%ZTSCH($$H3^%ZTM(ZTT),ZTS)=""
"RTN","ZTM2",31,0)
 L -^[ZTM,ZTN]%ZTSK(ZTS)
"RTN","ZTM2",32,0)
 ;
"RTN","ZTM2",33,0)
 S X="",@^%ZOSF("TRAP")
"RTN","ZTM2",34,0)
 K ^%ZTSK(ZTSK,.3) S ^%ZTSK(ZTSK,.1)="6^"_$H_"^Moved to "_ZTM_","_ZTN_" as task number "_ZTS
"RTN","ZTM2",35,0)
 K ZT,ZT1,ZTD,ZTI,ZTM,ZTN,ZTR,ZTS,ZTT,ZTREP Q
"RTN","ZTM2",36,0)
 ;
"RTN","ZTM2",37,0)
EROCPU ;OCPU--trap dropped link and reroute task
"RTN","ZTM2",38,0)
 S X="",@^%ZOSF("TRAP")
"RTN","ZTM2",39,0)
 I $D(^%ZTSCH("LINK"))[0 S ^("LINK")=$H
"RTN","ZTM2",40,0)
 S ^%ZTSCH("LINK",ZTDVOL)=1
"RTN","ZTM2",41,0)
 ;
"RTN","ZTM2",42,0)
DOWN ;XLINK/EROCPU--reroute XCPU task whose link is down
"RTN","ZTM2",43,0)
 D REQRD I $D(ZTREQUIR) G ORIGNL
"RTN","ZTM2",44,0)
 I ZTIO]"",$D(IOCPU)#2,IOCPU]"" G LIST
"RTN","ZTM2",45,0)
 S ZTREP(ZTDVOL)=""
"RTN","ZTM2",46,0)
 S ZTREP=$P(^%ZIS(14.5,ZTI,0),U,8)
"RTN","ZTM2",47,0)
 I ZTREP S ZTREP=$P(^%ZIS(14.5,ZTREP,0),U)
"RTN","ZTM2",48,0)
 I ZTREP="" G ORIGNL
"RTN","ZTM2",49,0)
 I $D(ZTREP(ZTREP))#2 G ORIGNL
"RTN","ZTM2",50,0)
D1 ;
"RTN","ZTM2",51,0)
 I $D(^%ZTSK(ZTSK,.01))[0 S ^%ZTSK(ZTSK,.01)=ZTUCI_U_ZTDVOL
"RTN","ZTM2",52,0)
 S Y=$O(^%ZIS(14.6,"AT",ZTUCI,ZTDVOL,ZTREP,""))
"RTN","ZTM2",53,0)
 I Y="" S Y=ZTUCI
"RTN","ZTM2",54,0)
 S ZTUCI=Y,ZTDVOL=ZTREP
"RTN","ZTM2",55,0)
 I ZTDVOL=%ZTVOL S X=ZTUCI_","_ZTDVOL X ^%ZOSF("UCICHECK") S:0'[Y ZTUCI=Y I 0[Y S %ZTREJCT=1
"RTN","ZTM2",56,0)
 S $P(^%ZTSK(ZTSK,.02),U)=ZTUCI
"RTN","ZTM2",57,0)
 I ZTDVOL'=%ZTVOL S $P(^%ZTSK(ZTSK,.02),U,2)=ZTDVOL
"RTN","ZTM2",58,0)
 E  S $P(^%ZTSK(ZTSK,.02),U,2)=""
"RTN","ZTM2",59,0)
 I %ZTREJCT S $P(^%ZTSK(ZTSK,.1),U,1,3)="B^"_$H_"^BAD DESTINATION UCI" Q
"RTN","ZTM2",60,0)
 I ZTDVOL=%ZTVOL G SEND^%ZTM
"RTN","ZTM2",61,0)
 G XLINK
"RTN","ZTM2",62,0)
 ;
"RTN","ZTM2",63,0)
REQRD ;DOWN--is dropped link required?
"RTN","ZTM2",64,0)
 S ZTI=$O(^%ZIS(14.5,"B",ZTDVOL,""))
"RTN","ZTM2",65,0)
 I ZTI="" Q
"RTN","ZTM2",66,0)
 I $D(^%ZIS(14.5,ZTI,0))#2 S ZTS=^(0)
"RTN","ZTM2",67,0)
 E  Q
"RTN","ZTM2",68,0)
 I $P(ZTS,U,5)="Y" S ZTREQUIR=ZTDVOL
"RTN","ZTM2",69,0)
 Q
"RTN","ZTM2",70,0)
 ;
"RTN","ZTM2",71,0)
ORIGNL ;DOWN--give up trying to reroute; make it wait for original destination
"RTN","ZTM2",72,0)
 I $D(^%ZTSK(ZTSK,.01))[0 G LIST
"RTN","ZTM2",73,0)
 S ZTORIGNL=^%ZTSK(ZTSK,.01)
"RTN","ZTM2",74,0)
 S ZTUCI=$P(ZTORIGNL,U)
"RTN","ZTM2",75,0)
 S ZTDVOL=$P(ZTORIGNL,U,2)
"RTN","ZTM2",76,0)
 S $P(^%ZTSK(ZTSK,.02),U)=ZTUCI
"RTN","ZTM2",77,0)
 I ZTDVOL'=%ZTVOL S $P(^%ZTSK(ZTSK,.02),U,2)=ZTDVOL
"RTN","ZTM2",78,0)
 E  S $P(^%ZTSK(ZTSK,.02),U,2)=""
"RTN","ZTM2",79,0)
 ;
"RTN","ZTM2",80,0)
LIST ;DOWN/ORIGNL--place task on waiting list for down volume
"RTN","ZTM2",81,0)
 I $D(^%ZTSCH("LINK"))[0 S ^("LINK")=$H
"RTN","ZTM2",82,0)
 I ZTYPE'="C" S ^%ZTSCH("LINK",ZTDVOL,ZTDTH,ZTSK)=""
"RTN","ZTM2",83,0)
 E  D
"RTN","ZTM2",84,0)
 .S ^%ZTSCH("LINK",ZTDVOL)=1
"RTN","ZTM2",85,0)
 .L +^%ZTSCH("C",ZTDVOL)
"RTN","ZTM2",86,0)
 .S ^%ZTSCH("C",ZTDVOL,ZTDTH,ZTSK)=""
"RTN","ZTM2",87,0)
 .L -^%ZTSCH("C",ZTDVOL)
"RTN","ZTM2",88,0)
 .Q
"RTN","ZTM2",89,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,3)="G^"_$H_U
"RTN","ZTM2",90,0)
 L  K ZT,ZT1,ZTD,ZTI,ZTM,ZTN,ZTORIGNL,ZTR,ZTS,ZTT,ZTREP Q
"RTN","ZTM2",91,0)
 ;
"RTN","ZTM2",92,0)
ERCL ;I2^%ZTM - error in C list
"RTN","ZTM2",93,0)
 Q:$$OOS^%ZTM(ZTVOL)  N %
"RTN","ZTM2",94,0)
 S %=$O(^%ZIS(14.7,"B",ZTVOL,0))
"RTN","ZTM2",95,0)
 I %>0 S $P(^%ZIS(14.7,%,0),U,11)=1
"RTN","ZTM2",96,0)
 Q
"RTN","ZTM2",97,0)
LKUP(VS) ;Lookup a VS and place in ZTVS
"RTN","ZTM2",98,0)
 N %,%1
"RTN","ZTM2",99,0)
 S %=$O(^%ZIS(14.5,"B",VS,0)),%1=$G(^%ZIS(14.5,+%,0))
"RTN","ZTM2",100,0)
 S %ZTVS(VS)=%1,%ZTVS(VS,"IFN")=% Q
"RTN","ZTM6")
0^10^B5118461
"RTN","ZTM6",1,0)
%ZTM6 ;SEA/RDS-TaskMan: Manager, Part 8 (Load Balancing) ;2/12/96  08:38
"RTN","ZTM6",2,0)
 ;;8.0;KERNEL;**23**;JUL 10, 1995
"RTN","ZTM6",3,0)
 ;
"RTN","ZTM6",4,0)
BALANCE ;CHECK^%ZTM--determine whether cpu should wait for balance
"RTN","ZTM6",5,0)
 ;The TM with the largest value sets ^%ZTSCH("LOAD",value)=who^when
"RTN","ZTM6",6,0)
 ;If your value is greater or equal then you run.
"RTN","ZTM6",7,0)
 ;If your value is less you wait unless you set LOAD then you run.
"RTN","ZTM6",8,0)
 L +^%ZTSCH("LOAD") N X,ZTIME,ZTLEFT,ZTPREV K ZTOVERLD
"RTN","ZTM6",9,0)
 S X="ER^%ZTM6",@^%ZOSF("TRAP")
"RTN","ZTM6",10,0)
 S ZTPREV=+$O(^%ZTSCH("LOAD",0)),@("ZTLEFT="_%ZTPFLG("BAL"))
"RTN","ZTM6",11,0)
 S ZTIME=$$H3($H),ZTOVERLD=$$COMPARE(%ZTPAIR,ZTLEFT,ZTPREV)
"RTN","ZTM6",12,0)
 ;If we are RUNNING have other submanagers wait
"RTN","ZTM6",13,0)
 I 'ZTOVERLD D
"RTN","ZTM6",14,0)
 . S X="" F  S X=$O(^%ZTSCH("LOADA",X)) Q:X=""  S $P(^(X),"^")=1
"RTN","ZTM6",15,0)
 . K ^%ZTSCH("LOAD") S ^("LOAD",ZTLEFT)=%ZTPAIR_"^"_ZTIME
"RTN","ZTM6",16,0)
 ;Now set a value that is used by our %ZTMS to run/wait also
"RTN","ZTM6",17,0)
 S ^%ZTSCH("LOADA",%ZTPAIR)=ZTOVERLD_"^"_ZTLEFT_"^"_ZTIME_"^"_$J
"RTN","ZTM6",18,0)
 K:'ZTOVERLD ZTOVERLD
"RTN","ZTM6",19,0)
 L -^%ZTSCH("LOAD")
"RTN","ZTM6",20,0)
 Q
"RTN","ZTM6",21,0)
 ;
"RTN","ZTM6",22,0)
COMPARE(ID,ZTLEFT,ZTPREV) ;
"RTN","ZTM6",23,0)
 ;BALANCE--compare our cpu capacity left to that of previous checker
"RTN","ZTM6",24,0)
 ;input:  cpu name, cpu capacity left, cpu capacity of previous checker
"RTN","ZTM6",25,0)
 ;output: whether current cpu should wait, 0=run, 1=wait
"RTN","ZTM6",26,0)
 N X
"RTN","ZTM6",27,0)
 I ZTLEFT'<ZTPREV Q 0
"RTN","ZTM6",28,0)
 S X=^%ZTSCH("LOAD",ZTPREV)
"RTN","ZTM6",29,0)
 I $P(X,"^",2)+150<ZTIME Q 0
"RTN","ZTM6",30,0)
 Q $P(X,"^")'[ID
"RTN","ZTM6",31,0)
 ;
"RTN","ZTM6",32,0)
ER ;Clean up if error
"RTN","ZTM6",33,0)
 S X="",@^%ZOSF("TRAP")
"RTN","ZTM6",34,0)
 S %ZTPFLG("BAL")="" K ZTOVERLD L -^%ZTSCH("LOAD")
"RTN","ZTM6",35,0)
 Q
"RTN","ZTM6",36,0)
 ;
"RTN","ZTM6",37,0)
H3(%) ;Convert $H to seconds
"RTN","ZTM6",38,0)
 Q 86400*%+$P(%,",",2)
"RTN","ZTM6",39,0)
 ;
"RTN","ZTM6",40,0)
VXD() ;--algorithm for VAX DSM
"RTN","ZTM6",41,0)
 ;Capacity Left=Available Jobs - Active Jobs - (4 * Compute Queue Length)
"RTN","ZTM6",42,0)
 ;output: cpu capacity left
"RTN","ZTM6",43,0)
 N ZTJ,ZTL S ZTJ=$$VXDJOBS
"RTN","ZTM6",44,0)
 S ZTL=$P(ZTJ,",")-$P(ZTJ,",",2)-(4*$P(ZTJ,",",3)) I ZTL<1 S ZTL=1
"RTN","ZTM6",45,0)
 Q ZTL
"RTN","ZTM6",46,0)
 ;
"RTN","ZTM6",47,0)
VXDJOBS() ;
"RTN","ZTM6",48,0)
 ;VXD--gather job table information
"RTN","ZTM6",49,0)
 ;output: sysgen max # jobs, current # jobs, current # computable jobs
"RTN","ZTM6",50,0)
 N
"RTN","ZTM6",51,0)
 D INIT^%VOLDEF I '%SMSTART Q ""
"RTN","ZTM6",52,0)
 S ZTJOBSIZ=%JOBSIZ,ZTJOBTAB=%JOBTAB
"RTN","ZTM6",53,0)
 S ZTMAX=%MAXPROC,(ZTCOMP,ZTCOUNT)=0
"RTN","ZTM6",54,0)
 F ZTJOB=1:1:ZTMAX D
"RTN","ZTM6",55,0)
 .S ZTADDR=ZTJOB*ZTJOBSIZ+ZTJOBTAB,ZTPID=$V(ZTADDR+20) D VXDJ1:ZTPID Q
"RTN","ZTM6",56,0)
 Q ZTMAX_","_ZTCOUNT_","_ZTCOMP
"RTN","ZTM6",57,0)
 ;
"RTN","ZTM6",58,0)
VXDJ1 ;VXDJOBS--adjust # active and # computable based on current entry
"RTN","ZTM6",59,0)
 S X="VXDJE",@^%ZOSF("TRAP")
"RTN","ZTM6",60,0)
 S ZTNAME=$ZC(%GETJPI,ZTPID,"PRCNAM") Q:ZTNAME["Sub"
"RTN","ZTM6",61,0)
 S ZTSTATE=$ZC(%GETJPI,ZTPID,"STATE")
"RTN","ZTM6",62,0)
 S ZTCOUNT=ZTCOUNT+1
"RTN","ZTM6",63,0)
 I ZTSTATE["COM"!(ZTSTATE["CUR") S ZTCOMP=ZTCOMP+1
"RTN","ZTM6",64,0)
VXDJE S X="",@^%ZOSF("TRAP") Q
"RTN","ZTM6",65,0)
 ;
"RTN","ZTM6",66,0)
MSM4() ;Use MSMv4 LAT calcuation
"RTN","ZTM6",67,0)
 N MAXJOB,CURJOB
"RTN","ZTM6",68,0)
 S MAXJOB=$V($V(3,-5),-3,0),CURJOB=$V(168,-4,2)
"RTN","ZTM6",69,0)
 Q MAXJOB-CURJOB*255\MAXJOB
"RTN","ZTMS2")
0^11^B16615342
"RTN","ZTMS2",1,0)
%ZTMS2 ;SEA/RDS-TaskMan: Submanager, Part 4 (Unload, Get Device) ;2/12/96  08:40
"RTN","ZTMS2",2,0)
 ;;8.0;KERNEL;**2,18,23**;Jul 10, 1995
"RTN","ZTMS2",3,0)
 ;^%ZTSK(ZTSK) is locked on entry or return from GETNEXT
"RTN","ZTMS2",4,0)
PROCESS ;SUBMGR--process task and all others waiting for same device
"RTN","ZTMS2",5,0)
 D LOOKUP I $D(ZTREJECT) Q
"RTN","ZTMS2",6,0)
 D DEVICE
"RTN","ZTMS2",7,0)
 Q:POP
"RTN","ZTMS2",8,0)
 I ZTSYNCFL]"",'$$SYNCFLG("A",ZTSYNCFL,%ZTIO) D SYNCQ(ZTSYNCFL,%ZTIO,ZTDTH,ZTSK),^%ZISC Q
"RTN","ZTMS2",9,0)
 D TASK^%ZTMS3 I ZTYPE="C"!$D(ZTNONEXT) Q
"RTN","ZTMS2",10,0)
 D GETNEXT^%ZTMS7 I $D(ZTNONEXT)!$D(ZTQUIT) Q
"RTN","ZTMS2",11,0)
 G PROCESS
"RTN","ZTMS2",12,0)
 ;
"RTN","ZTMS2",13,0)
LOOKUP ;PROCESS--unload task, switch ucis, and test entry routine
"RTN","ZTMS2",14,0)
 K (%ZTIO,IO,U,ZTCPU,ZTDEVN,ZTDTH,ZTNODE,ZTPAIR,ZTPRE,ZTQUEUED,ZTSK,ZTUCI,ZTYPE)
"RTN","ZTMS2",15,0)
 D TSTAT(4,"")
"RTN","ZTMS2",16,0)
 S ZTREC=^%ZTSK(ZTSK,0),ZTREC02=^(.02)
"RTN","ZTMS2",17,0)
 S ZTREC2=^%ZTSK(ZTSK,.2),ZTREC21=^(.21),ZTREC25=^(.25)
"RTN","ZTMS2",18,0)
 S ZTSYNCFL=$P(ZTREC2,"^",7),DUZ=+$P(ZTREC,U,3),DUZ(0)="@"
"RTN","ZTMS2",19,0)
 S X=$P(ZTREC02,U)_","_$P(ZTREC02,U,2)
"RTN","ZTMS2",20,0)
 I $P(ZTREC02,U,4) S $P(X,",",2)=ZTCPU
"RTN","ZTMS2",21,0)
 ;should do a check to see if X is OK, Should check UCI mapping.
"RTN","ZTMS2",22,0)
 I X'=ZTUCI S ZTUCI=X D SWAP^%XUCI
"RTN","ZTMS2",23,0)
 S X=$P($P(ZTREC,U,2),"("),ZTRTN=$P(ZTREC,U,1,2)
"RTN","ZTMS2",24,0)
 I $E(X)'="%" X ^%ZOSF("TEST"):X]"" I X=""!'$T D REJECT S ZTREJECT=""
"RTN","ZTMS2",25,0)
 Q
"RTN","ZTMS2",26,0)
 ;
"RTN","ZTMS2",27,0)
REJECT ;LOOKUP--entry routine isn't here; reject task
"RTN","ZTMS2",28,0)
 N Y X ^%ZOSF("UCI")
"RTN","ZTMS2",29,0)
 D TSTAT("B","No routine at destination "_Y_".")
"RTN","ZTMS2",30,0)
 I $D(ZTDEVN) D DEVLK^%ZTMS1(-1,%ZTIO) K ZTDEVN
"RTN","ZTMS2",31,0)
 L  Q  ;Clear all locks
"RTN","ZTMS2",32,0)
 ;
"RTN","ZTMS2",33,0)
DEVICE ;PROCESS--prepare requested device; if can't, make task wait
"RTN","ZTMS2",34,0)
 ;shortcut & screen
"RTN","ZTMS2",35,0)
 S ZTIO=$P(ZTREC2,U),ZTIOT=$P(ZTREC2,U,3)
"RTN","ZTMS2",36,0)
 I ZTIO="" S (IO,IO(0),IOF,ION,IOS,IOST,IOT)="",POP=0 Q
"RTN","ZTMS2",37,0)
 ;
"RTN","ZTMS2",38,0)
 ;setup call
"RTN","ZTMS2",39,0)
 S %ZIS="LRS0"_$S($P(ZTREC2,U,5)="DIRECT":"D",1:"")
"RTN","ZTMS2",40,0)
 S:ZTIOT="HFS" %ZIS("HFSIO")=$P(ZTREC2,U,6),%ZIS("IOPAR")=ZTREC25
"RTN","ZTMS2",41,0)
 S:ZTIOT="MT" %ZIS("IOPAR")=ZTREC25
"RTN","ZTMS2",42,0)
 S (IO,IO(0))=%ZTIO,IOP=ZTIO
"RTN","ZTMS2",43,0)
 K ^XUTL("XQ",$J)
"RTN","ZTMS2",44,0)
 ;
"RTN","ZTMS2",45,0)
 S:$P(ZTREC2,U,4)["MINIOUT" %ZISLOCK="^%ZTSCH(""NETMAIL"",IO)" ;The hang is on the close
"RTN","ZTMS2",46,0)
 ;call
"RTN","ZTMS2",47,0)
 S %ZISTO=3 D ^%ZIS K %ZISTO,%ZISLOCK ;See that we use a timeout.
"RTN","ZTMS2",48,0)
 I %ZTIO]"" D DEVLK^%ZTMS1(-1,%ZTIO) K ZTDEVN
"RTN","ZTMS2",49,0)
 I 'POP,%ZTIO]"",IO'=%ZTIO C %ZTIO K IO(1,%ZTIO) S %ZTIO=IO ;Reset %ZTIO if IO doesn't match
"RTN","ZTMS2",50,0)
 ;
"RTN","ZTMS2",51,0)
 ;results
"RTN","ZTMS2",52,0)
 I POP,(ZTYPE'="C"),(ZTIOT="TRM")!(ZTIOT="RES")!(ZTIOT="HG") D IONQ Q  ;only add to IO queue if not type C.
"RTN","ZTMS2",53,0)
 I POP D SCHNQ Q
"RTN","ZTMS2",54,0)
 I IOT'="RES",IOT'="HG" U IO
"RTN","ZTMS2",55,0)
 S IO(0)=IO
"RTN","ZTMS2",56,0)
 I $P(^%ZIS(1,+IOS,0),U,7)="y" D ^%ZTMSH
"RTN","ZTMS2",57,0)
 Q
"RTN","ZTMS2",58,0)
 ;
"RTN","ZTMS2",59,0)
IONQ ;DEVICE--put task on Device Waiting List
"RTN","ZTMS2",60,0)
 L +^%ZTSCH("IO")
"RTN","ZTMS2",61,0)
 I $D(^%ZTSK(ZTSK,0))[0 D TSTAT("I",4) G IOQX
"RTN","ZTMS2",62,0)
 D TSTAT("A","")
"RTN","ZTMS2",63,0)
 S ZTIO(1)=$P(ZTREC2,U,5),ZTIOS=ZTREC21
"RTN","ZTMS2",64,0)
 D NQ^%ZTM4
"RTN","ZTMS2",65,0)
IOQX L  Q  ;Clear all Locks
"RTN","ZTMS2",66,0)
 ;
"RTN","ZTMS2",67,0)
SCHNQ ;DEVICE--if HFS or SPL or TYPE'=C, reschedule task 10 min in future (try later)
"RTN","ZTMS2",68,0)
 S ZTH=$$NEWH($H,300)
"RTN","ZTMS2",69,0)
 L +^%ZTSCH(ZTH,ZTSK)
"RTN","ZTMS2",70,0)
 D TSTAT(1,"rescheduled for busy device")
"RTN","ZTMS2",71,0)
 S ^%ZTSCH(ZTH,ZTSK)=""
"RTN","ZTMS2",72,0)
 L  Q  ;Clear all locks
"RTN","ZTMS2",73,0)
 ;
"RTN","ZTMS2",74,0)
NEWH(%H,%Y) ;Build a new schedule time, Return $H3 time.
"RTN","ZTMS2",75,0)
 N %
"RTN","ZTMS2",76,0)
 I %H["," S %H=$$H3^%ZTM(%H)
"RTN","ZTMS2",77,0)
 Q (%H+%Y)
"RTN","ZTMS2",78,0)
 ;
"RTN","ZTMS2",79,0)
SYNCFLG(ACT,FLAG,ZIO,STAT) ;Allocate/deallocate sync flag
"RTN","ZTMS2",80,0)
 N X,DA,SYNC
"RTN","ZTMS2",81,0)
 L +^%ZISL(14.8):30 E  Q 0
"RTN","ZTMS2",82,0)
 S X=0,SYNC=ZIO_"~"_FLAG,DA=$O(^%ZISL(14.8,"B",SYNC,0))
"RTN","ZTMS2",83,0)
 I ACT["A" D
"RTN","ZTMS2",84,0)
 . I DA S X=0 Q
"RTN","ZTMS2",85,0)
 . ;I $D(^%ZTSCH("SYNC",ZIO,FLAG)) S X=0 Q
"RTN","ZTMS2",86,0)
 . S X=$P(^%ZISL(14.8,0),"^",3)+1 F  Q:'$D(^%ZISL(14.8,X))  S X=X+1
"RTN","ZTMS2",87,0)
 . S $P(^(0),"^",3,4)=X_"^"_($P(^%ZISL(14.8,0),"^",4)+1),^%ZISL(14.8,X,0)=SYNC,^%ZISL(14.8,"B",SYNC,X)=""
"RTN","ZTMS2",88,0)
 . S X=1 Q
"RTN","ZTMS2",89,0)
 I ACT["D" D  S X=1
"RTN","ZTMS2",90,0)
 . Q:DA'>0
"RTN","ZTMS2",91,0)
 . K ^%ZISL(14.8,DA),^%ZISL(14.8,"B",SYNC,DA)
"RTN","ZTMS2",92,0)
 . S $P(^(0),"^",3,4)=(DA-1)_"^"_($P(^%ZISL(14.8,0),"^",4)-1)
"RTN","ZTMS2",93,0)
 . Q
"RTN","ZTMS2",94,0)
 I ACT["S" D  S X=1
"RTN","ZTMS2",95,0)
 . Q:DA'>0
"RTN","ZTMS2",96,0)
 . S ^%ZISL(14.8,DA,1)=$G(STAT)
"RTN","ZTMS2",97,0)
 . Q
"RTN","ZTMS2",98,0)
 I ACT["?" S X=(DA)!($D(^%ZTSCH("SYNC",ZIO,FLAG)))
"RTN","ZTMS2",99,0)
 L -^%ZISL(14.8)
"RTN","ZTMS2",100,0)
 Q X
"RTN","ZTMS2",101,0)
 ;
"RTN","ZTMS2",102,0)
SYNCQ(FLAG,ZIO,ZTH,ZTSK) ;Put task on sync flag waiting list
"RTN","ZTMS2",103,0)
 L +^%ZTSCH("SYNC")
"RTN","ZTMS2",104,0)
 S ^%ZTSCH("SYNC",ZIO,FLAG,ZTSK)=ZTH
"RTN","ZTMS2",105,0)
 L -^%ZTSCH("SYNC")
"RTN","ZTMS2",106,0)
 Q
"RTN","ZTMS2",107,0)
SCHSYNC(FLAG,ZIO) ;put a waiting task in IO queue
"RTN","ZTMS2",108,0)
 L +^%ZTSCH("SYNC") I $D(^%ZTSCH("SYNC",ZIO,FLAG)) N ZTH,ZTSK D
"RTN","ZTMS2",109,0)
 . S ZTSK=$O(^(FLAG,0)),ZTH=$G(^(+ZTSK)) Q:ZTSK=""  S:$D(^%ZTSCH("IO",ZIO))[0 ^(ZIO)=IOT
"RTN","ZTMS2",110,0)
 . S ^%ZTSCH("IO",ZIO,ZTH,ZTSK)=""
"RTN","ZTMS2",111,0)
 . K ^%ZTSCH("SYNC",ZIO,FLAG,ZTSK)
"RTN","ZTMS2",112,0)
 . Q
"RTN","ZTMS2",113,0)
 L -^%ZTSCH("SYNC")
"RTN","ZTMS2",114,0)
 Q
"RTN","ZTMS2",115,0)
TSTAT(CODE,TXT) ;Record status
"RTN","ZTMS2",116,0)
 Q:$D(^%ZTSK(ZTSK,.1))[0
"RTN","ZTMS2",117,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,3)=CODE_U_$H_U_TXT
"RTN","ZTMS2",118,0)
 Q
"VER")
8.0^21.0
**END**
**END**
