Released BPS*1*4 SEQ #3
Extracted from mail message
**KIDS**:BPS*1.0*4^

**INSTALL NAME**
BPS*1.0*4
"BLD",6907,0)
BPS*1.0*4^E CLAIMS MGMT ENGINE^0^3060926^y
"BLD",6907,1,0)
^^4^4^3060922^
"BLD",6907,1,1,0)
This patch modifies the Application Program Interface (API) that
"BLD",6907,1,2,0)
processes claims in E-Pharmacy to check for a valid user before it
"BLD",6907,1,3,0)
stores that information in the BPS Transaction File
"BLD",6907,1,4,0)
(#9002313.59).
"BLD",6907,4,0)
^9.64PA^^
"BLD",6907,6.3)
3
"BLD",6907,"KRN",0)
^9.67PA^8989.52^19
"BLD",6907,"KRN",.4,0)
.4
"BLD",6907,"KRN",.401,0)
.401
"BLD",6907,"KRN",.402,0)
.402
"BLD",6907,"KRN",.403,0)
.403
"BLD",6907,"KRN",.5,0)
.5
"BLD",6907,"KRN",.84,0)
.84
"BLD",6907,"KRN",3.6,0)
3.6
"BLD",6907,"KRN",3.8,0)
3.8
"BLD",6907,"KRN",9.2,0)
9.2
"BLD",6907,"KRN",9.8,0)
9.8
"BLD",6907,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",6907,"KRN",9.8,"NM",1,0)
BPSOS6D^^0^B78265988
"BLD",6907,"KRN",9.8,"NM",2,0)
BPSNCPDP^^0^B54179108
"BLD",6907,"KRN",9.8,"NM","B","BPSNCPDP",2)

"BLD",6907,"KRN",9.8,"NM","B","BPSOS6D",1)

"BLD",6907,"KRN",19,0)
19
"BLD",6907,"KRN",19.1,0)
19.1
"BLD",6907,"KRN",101,0)
101
"BLD",6907,"KRN",409.61,0)
409.61
"BLD",6907,"KRN",771,0)
771
"BLD",6907,"KRN",870,0)
870
"BLD",6907,"KRN",8989.51,0)
8989.51
"BLD",6907,"KRN",8989.52,0)
8989.52
"BLD",6907,"KRN",8994,0)
8994
"BLD",6907,"KRN","B",.4,.4)

"BLD",6907,"KRN","B",.401,.401)

"BLD",6907,"KRN","B",.402,.402)

"BLD",6907,"KRN","B",.403,.403)

"BLD",6907,"KRN","B",.5,.5)

"BLD",6907,"KRN","B",.84,.84)

"BLD",6907,"KRN","B",3.6,3.6)

"BLD",6907,"KRN","B",3.8,3.8)

"BLD",6907,"KRN","B",9.2,9.2)

"BLD",6907,"KRN","B",9.8,9.8)

"BLD",6907,"KRN","B",19,19)

"BLD",6907,"KRN","B",19.1,19.1)

"BLD",6907,"KRN","B",101,101)

"BLD",6907,"KRN","B",409.61,409.61)

"BLD",6907,"KRN","B",771,771)

"BLD",6907,"KRN","B",870,870)

"BLD",6907,"KRN","B",8989.51,8989.51)

"BLD",6907,"KRN","B",8989.52,8989.52)

"BLD",6907,"KRN","B",8994,8994)

"BLD",6907,"QUES",0)
^9.62^^
"BLD",6907,"REQB",0)
^9.611^1^1
"BLD",6907,"REQB",1,0)
BPS*1.0*3^1
"BLD",6907,"REQB","B","BPS*1.0*3",1)

"MBREQ")
0
"PKG",570,-1)
1^1
"PKG",570,0)
E CLAIMS MGMT ENGINE^BPS^ELECTRONIC CLAIMS MGT
"PKG",570,22,0)
^9.49I^1^1
"PKG",570,22,1,0)
1.0^3041008^3041108^66481
"PKG",570,22,1,"PAH",1,0)
4^3060926
"PKG",570,22,1,"PAH",1,1,0)
^^4^4^3060926
"PKG",570,22,1,"PAH",1,1,1,0)
This patch modifies the Application Program Interface (API) that
"PKG",570,22,1,"PAH",1,1,2,0)
processes claims in E-Pharmacy to check for a valid user before it
"PKG",570,22,1,"PAH",1,1,3,0)
stores that information in the BPS Transaction File
"PKG",570,22,1,"PAH",1,1,4,0)
(#9002313.59).
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","BPSNCPDP")
0^2^B54179108^B53857295
"RTN","BPSNCPDP",1,0)
BPSNCPDP ;BHAM ISC/LJE - API to submit a claim to ECME ;8/01/03
"RTN","BPSNCPDP",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3,4**;JUN 2004;Build 3
"RTN","BPSNCPDP",3,0)
 ;
"RTN","BPSNCPDP",4,0)
 ; For comments regarding this API, see routine BPSNCPD1.
"RTN","BPSNCPDP",5,0)
 ;   They were moved to BPSNCPD1 due to size constraints
"RTN","BPSNCPDP",6,0)
 ; Reference to ^PSRX supported by DBIA 1977
"RTN","BPSNCPDP",7,0)
 ;    
"RTN","BPSNCPDP",8,0)
EN(BRXIEN,BFILL,BFILLDAT,BWHERE,BILLNDC,REVREAS,DURREC,BPOVRIEN) ;
"RTN","BPSNCPDP",9,0)
EN1 N DFN,PNAME,BRX,ARRAY,MOREDATA,SITE,WFLG,OLDRESP
"RTN","BPSNCPDP",10,0)
 N %,%I,%H,X,TODAY
"RTN","BPSNCPDP",11,0)
 N QUIT,CERTIFY,CERTIEN,PAYERSH
"RTN","BPSNCPDP",12,0)
 N REBILL,REVONLY,CLMSTAT,RESPONSE,BPSTART,IB,RESP
"RTN","BPSNCPDP",13,0)
 ;
"RTN","BPSNCPDP",14,0)
 ; Default variables
"RTN","BPSNCPDP",15,0)
 S RESPONSE="",CLMSTAT=""
"RTN","BPSNCPDP",16,0)
 ;
"RTN","BPSNCPDP",17,0)
 ; Check for missing parameters
"RTN","BPSNCPDP",18,0)
 I '$G(BRXIEN) S CLMSTAT="Prescription IEN parameter missing",RESPONSE=5 G END
"RTN","BPSNCPDP",19,0)
 I $G(BWHERE)="" S CLMSTAT="RX Action parameter missing",RESPONSE=5 G END
"RTN","BPSNCPDP",20,0)
 I '$G(BFILL) S BFILL=0
"RTN","BPSNCPDP",21,0)
 ;
"RTN","BPSNCPDP",22,0)
 ; Check that the prescription exists
"RTN","BPSNCPDP",23,0)
 I '$D(^PSRX(BRXIEN,0)) S CLMSTAT="Prescription does not exist",RESPONSE=5 G END
"RTN","BPSNCPDP",24,0)
 ;
"RTN","BPSNCPDP",25,0)
 ; Get the NDC if it was not passed in
"RTN","BPSNCPDP",26,0)
 I $G(BILLNDC)="" S BILLNDC=$$GETNDC^PSONDCUT(BRXIEN,BFILL)
"RTN","BPSNCPDP",27,0)
 ;
"RTN","BPSNCPDP",28,0)
 ; Patient Info
"RTN","BPSNCPDP",29,0)
 S DFN=$$GET1^DIQ(52,BRXIEN_",",2,"I"),PNAME=$$GET1^DIQ(2,DFN,.01)
"RTN","BPSNCPDP",30,0)
 ;
"RTN","BPSNCPDP",31,0)
 ; Get prescription number
"RTN","BPSNCPDP",32,0)
 S BRX=$P(^PSRX(BRXIEN,0),"^",1)
"RTN","BPSNCPDP",33,0)
 ;
"RTN","BPSNCPDP",34,0)
 ; Set write flag
"RTN","BPSNCPDP",35,0)
 S WFLG=1
"RTN","BPSNCPDP",36,0)
 I ",ARES,AREV,CRLB,CRLR,CRLX,DDED,DE,EREV,HLD,PC,PE,PL,RS,"[(","_BWHERE_",") S WFLG=0
"RTN","BPSNCPDP",37,0)
 ;
"RTN","BPSNCPDP",38,0)
 ; Get status of previously submitted claim and set rebill/revonly flags
"RTN","BPSNCPDP",39,0)
 S (REBILL,REVONLY)=0
"RTN","BPSNCPDP",40,0)
 S OLDRESP=$P($$STATUS^BPSOSRX(BRXIEN,BFILL,1),U,1)
"RTN","BPSNCPDP",41,0)
 I ",AREV,CRLR,CRLX,DC,DDED,DE,EREV,HLD,RS,"[(","_BWHERE_",") S REVONLY=1
"RTN","BPSNCPDP",42,0)
 E  I OLDRESP="E PAYABLE"!(OLDRESP="E DUPLICATE") S REBILL=1
"RTN","BPSNCPDP",43,0)
 ;
"RTN","BPSNCPDP",44,0)
 ; Get Site info and check if the site has ECME turned on
"RTN","BPSNCPDP",45,0)
 ;   Do not check for reversals/rebill as these need to be processed for the old site
"RTN","BPSNCPDP",46,0)
 I 'BFILL S SITE=$$GET1^DIQ(52,BRXIEN,20,"I")
"RTN","BPSNCPDP",47,0)
 I BFILL S SITE=$$GET1^DIQ(52.1,BFILL_","_BRXIEN,8,"I")
"RTN","BPSNCPDP",48,0)
 I 'REVONLY,'REBILL D  I RESPONSE=1 G END
"RTN","BPSNCPDP",49,0)
 . I '$G(SITE) S CLMSTAT="No Site Information",RESPONSE=1 Q
"RTN","BPSNCPDP",50,0)
 . I '$$ECMEON^BPSUTIL(SITE) S CLMSTAT="ECME switch is not on for the site",RESPONSE=1
"RTN","BPSNCPDP",51,0)
 ;
"RTN","BPSNCPDP",52,0)
 ; In Progress/Stranded claims check
"RTN","BPSNCPDP",53,0)
 I OLDRESP["IN PROGRESS" D  G END
"RTN","BPSNCPDP",54,0)
 . S CLMSTAT="Previous request is IN PROGRESS.  It may need to be unstranded.",RESPONSE=4
"RTN","BPSNCPDP",55,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",56,0)
 . ; If not OP, then send an email to the OPECC
"RTN","BPSNCPDP",57,0)
 . I ",AREV,BB,ERES,EREV,"'[(","_BWHERE_",") D BULL^BPSNCPD1(BRXIEN,BFILL,$G(SITE),$G(DFN),$G(PNAME))
"RTN","BPSNCPDP",58,0)
 ;
"RTN","BPSNCPDP",59,0)
 ; Backbilling check
"RTN","BPSNCPDP",60,0)
 I BWHERE="BB",OLDRESP'="" D  G END
"RTN","BPSNCPDP",61,0)
 . S CLMSTAT="Previously billed through ECME: "_OLDRESP,RESPONSE=1
"RTN","BPSNCPDP",62,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",63,0)
 ;
"RTN","BPSNCPDP",64,0)
 ; Do not reverse if the prescription was not previously billed through ECME
"RTN","BPSNCPDP",65,0)
 I OLDRESP="",(",AREV,CRLR,CRLX,DC,DDED,DE,EREV,HLD,RS,"[(","_BWHERE_",")) D  G END
"RTN","BPSNCPDP",66,0)
 . S CLMSTAT="Prescription not previously billed through ECME.  Cannot Reverse claim.",RESPONSE=1
"RTN","BPSNCPDP",67,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",68,0)
 ;
"RTN","BPSNCPDP",69,0)
 ; If returning to stock or deleting and the previous claim was not paid, then no reversal is needed
"RTN","BPSNCPDP",70,0)
 ;   so close the prescription and quit
"RTN","BPSNCPDP",71,0)
 I OLDRESP'["E PAYABLE",OLDRESP'["E REVERSAL REJECTED",(",RS,DE,"[(","_BWHERE_",")) D  G END
"RTN","BPSNCPDP",72,0)
 . D CLOSE2^BPSBUTL(BRXIEN,BFILL,BWHERE)
"RTN","BPSNCPDP",73,0)
 . S CLMSTAT="Claim was not payable so it has been closed.  No ECME claim created.",RESPONSE=3
"RTN","BPSNCPDP",74,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",75,0)
 ;
"RTN","BPSNCPDP",76,0)
 ; Do not reverse if the claim is not E PAYABLE
"RTN","BPSNCPDP",77,0)
 I OLDRESP'["E PAYABLE",OLDRESP'["E DUPLICATE",(",AREV,CRLR,CRLX,DC,DDED,HLD,"[(","_BWHERE_",")) D  G END
"RTN","BPSNCPDP",78,0)
 . S CLMSTAT="Claim has status "_OLDRESP_".  Not reversed.",RESPONSE=1
"RTN","BPSNCPDP",79,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",80,0)
 ;
"RTN","BPSNCPDP",81,0)
 ; EREV can be re-reversed if the previous submission is Payable or Rejected Revesal
"RTN","BPSNCPDP",82,0)
 I BWHERE="EREV",",E PAYABLE,E DUPLICATE,E REVERSAL REJECTED,E REVERSAL STRANDED,"'[(","_OLDRESP_",") D  G END
"RTN","BPSNCPDP",83,0)
 . S CLMSTAT="Claim has status "_OLDRESP_".  Not reversed.",RESPONSE=1
"RTN","BPSNCPDP",84,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",85,0)
 ;
"RTN","BPSNCPDP",86,0)
 ; Make sure fill date is not in the future or empty
"RTN","BPSNCPDP",87,0)
 D NOW^%DTC
"RTN","BPSNCPDP",88,0)
 S TODAY=$P(%,".",1)
"RTN","BPSNCPDP",89,0)
 I '$G(BFILLDAT)!($G(BFILLDAT)>TODAY) S BFILLDAT=TODAY
"RTN","BPSNCPDP",90,0)
 ;
"RTN","BPSNCPDP",91,0)
 ; Store needed parameters into MOREDATA
"RTN","BPSNCPDP",92,0)
 ; In instances where duz is null set it equal to .5 (postmaster)
"RTN","BPSNCPDP",93,0)
 S MOREDATA("USER")=$S('DUZ:.5,1:DUZ)
"RTN","BPSNCPDP",94,0)
 S MOREDATA("RX ACTION")=$G(BWHERE)
"RTN","BPSNCPDP",95,0)
 S MOREDATA("DATE OF SERVICE")=$P($G(BFILLDAT),".",1)
"RTN","BPSNCPDP",96,0)
 S MOREDATA("REVERSAL REASON")=$S($G(REVREAS)="":"UNKNOWN",1:$E($G(REVREAS),1,40))
"RTN","BPSNCPDP",97,0)
 I $G(DURREC)]"" S MOREDATA("DUR",1,0)=DURREC
"RTN","BPSNCPDP",98,0)
 I $G(BPOVRIEN)]"" S MOREDATA("BPOVRIEN")=BPOVRIEN
"RTN","BPSNCPDP",99,0)
 ;
"RTN","BPSNCPDP",100,0)
 ; Do a reversal for the appropriate actions
"RTN","BPSNCPDP",101,0)
 I ",AREV,CRLR,CRLX,DC,DDED,DE,EREV,HLD,RS,"[(","_BWHERE_",") D  G STATUS:RESPONSE=0,END:RESPONSE=4
"RTN","BPSNCPDP",102,0)
 . ; If override flag is set, prompt for override values - MUST be commented out for any release.
"RTN","BPSNCPDP",103,0)
 . ;I $L($T(CHECK^ZZGIZOV1))>0,$$CHECK^ZZGIZOV1 D GETOVER^ZZGIZOV1(BRXIEN,BFILL,OLDRESP,BWHERE,"R")
"RTN","BPSNCPDP",104,0)
 . D LOG(DT_" Before Submit of Reversal")
"RTN","BPSNCPDP",105,0)
 . S BPSTART=$$STTM()
"RTN","BPSNCPDP",106,0)
 . S RESP=$$UNCLAIM^BPSOSRX(BRXIEN,BFILL,.MOREDATA)
"RTN","BPSNCPDP",107,0)
 . D LOG("After Submit of Reversal. Return Value: "_RESP)
"RTN","BPSNCPDP",108,0)
 . I RESP=1 D
"RTN","BPSNCPDP",109,0)
 .. S RESPONSE=0,CLMSTAT="Reversing prescription "_BRX_"."
"RTN","BPSNCPDP",110,0)
 .. I WFLG W !,CLMSTAT H 2
"RTN","BPSNCPDP",111,0)
 . I RESP=0 D
"RTN","BPSNCPDP",112,0)
 .. S RESPONSE=4,CLMSTAT="No claim submission made.  Unable to queue reversal."
"RTN","BPSNCPDP",113,0)
 .. D LOG(CLMSTAT)
"RTN","BPSNCPDP",114,0)
 .. I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",115,0)
 .. L -^BPST
"RTN","BPSNCPDP",116,0)
 ;
"RTN","BPSNCPDP",117,0)
 ; Can not resubmit reversed claims unless they are accepted
"RTN","BPSNCPDP",118,0)
 I OLDRESP]"",OLDRESP["E REVERSAL",OLDRESP'="E REVERSAL ACCEPTED" D  G END
"RTN","BPSNCPDP",119,0)
 . S CLMSTAT="Can not resubmit a rejected or stranded reversal",RESPONSE=1
"RTN","BPSNCPDP",120,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",121,0)
 ;
"RTN","BPSNCPDP",122,0)
 ; Some actions require a paid claim (they will not do a reversal/resubmit)
"RTN","BPSNCPDP",123,0)
 I OLDRESP]"",OLDRESP'="E REVERSAL ACCEPTED",OLDRESP'="E REJECTED",(",CRLB,ED,ERES,RL,RRL,"'[(","_BWHERE_",")) D  G END
"RTN","BPSNCPDP",124,0)
 . S CLMSTAT="Previously billed through ECME: "_OLDRESP,RESPONSE=1
"RTN","BPSNCPDP",125,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",126,0)
 ;
"RTN","BPSNCPDP",127,0)
 ; Certification Testing
"RTN","BPSNCPDP",128,0)
 S (QUIT,CERTIFY)=0
"RTN","BPSNCPDP",129,0)
 I ^BPS(9002313.99,1,"CERTIFIER")=DUZ D  I QUIT S CLMSTAT="User exited from certification questions",RESPONSE=1 G END
"RTN","BPSNCPDP",130,0)
 . S CERTIFY=1
"RTN","BPSNCPDP",131,0)
C1 . R !,"ENTER NDC: ",BILLNDC:120 S:BILLNDC="^" QUIT=1 Q:QUIT  I BILLNDC="" G C1
"RTN","BPSNCPDP",132,0)
C2 . R !,"PAYER SHEET: ",PAYERSH:120 I '$D(^BPSF(9002313.92,"B",PAYERSH)) S:PAYERSH="^" QUIT=1 Q:QUIT  W !,"INVALID SHEET" G C2
"RTN","BPSNCPDP",133,0)
C3 . R !,"CERTIFICATION ENTRY: ",CERTIEN:120 I '$D(^BPS(9002313.31,CERTIEN)) S:CERTIEN="^" QUIT=1 Q:QUIT  W !,"INVALID IEN" G C3
"RTN","BPSNCPDP",134,0)
 I WFLG W !!
"RTN","BPSNCPDP",135,0)
 ;
"RTN","BPSNCPDP",136,0)
 ; Build array with prescription data
"RTN","BPSNCPDP",137,0)
 D STARRAY^BPSNCPD1(BRXIEN,BFILL,BWHERE,.ARRAY)
"RTN","BPSNCPDP",138,0)
 ;
"RTN","BPSNCPDP",139,0)
 ; Do IB billing determination and check response
"RTN","BPSNCPDP",140,0)
 ; If IB=2, then not billable, so write messages
"RTN","BPSNCPDP",141,0)
 S IB=0
"RTN","BPSNCPDP",142,0)
 D EN^BPSNCPD2
"RTN","BPSNCPDP",143,0)
 I IB=2 D  G END
"RTN","BPSNCPDP",144,0)
 . S RESPONSE=2
"RTN","BPSNCPDP",145,0)
 . S CLMSTAT=$P(MOREDATA("BILL"),"^",2)
"RTN","BPSNCPDP",146,0)
 . I OLDRESP]"" D LOG(CLMSTAT)
"RTN","BPSNCPDP",147,0)
 ;
"RTN","BPSNCPDP",148,0)
 ; Check for missing data (Will IB billing determination catch this?)
"RTN","BPSNCPDP",149,0)
 I $D(MOREDATA("IBDATA",1,1)),$P(MOREDATA("IBDATA",1,1),"^",1)="" D  G END
"RTN","BPSNCPDP",150,0)
 . S RESPONSE=2,CLMSTAT="Information missing from IB data."
"RTN","BPSNCPDP",151,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",152,0)
 ;
"RTN","BPSNCPDP",153,0)
 ; Check for missing/invalid payer sheets (I think IB billing determination will catch this)
"RTN","BPSNCPDP",154,0)
 I $P($G(MOREDATA("IBDATA",1,1)),"^",4)="" D  G END
"RTN","BPSNCPDP",155,0)
 . S RESPONSE=2,CLMSTAT="Invalid/missing payer sheet from IB data."
"RTN","BPSNCPDP",156,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",157,0)
 ;
"RTN","BPSNCPDP",158,0)
 ; Check if IB says to bill
"RTN","BPSNCPDP",159,0)
 I '$G(MOREDATA("BILL")) D  G END
"RTN","BPSNCPDP",160,0)
 . S RESPONSE=2
"RTN","BPSNCPDP",161,0)
 . S CLMSTAT="Flagged by IB to not 3rd Party Insurance bill through ECME."
"RTN","BPSNCPDP",162,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",163,0)
 ;
"RTN","BPSNCPDP",164,0)
 ; Log message to ECME log
"RTN","BPSNCPDP",165,0)
 D LOG(DT_" Before submit of claim")
"RTN","BPSNCPDP",166,0)
 ;
"RTN","BPSNCPDP",167,0)
 ; If override flag is set, prompt for override values - MUST be commented out for any release.
"RTN","BPSNCPDP",168,0)
 ;I $L($T(CHECK^ZZGIZOV1))>0,$$CHECK^ZZGIZOV1 D GETOVER^ZZGIZOV1(BRXIEN,BFILL,OLDRESP,BWHERE,"S")
"RTN","BPSNCPDP",169,0)
 ;
"RTN","BPSNCPDP",170,0)
 ; Get require data
"RTN","BPSNCPDP",171,0)
 S BPSTART=$$STTM()
"RTN","BPSNCPDP",172,0)
 ;
"RTN","BPSNCPDP",173,0)
 ; Submit claim and check result
"RTN","BPSNCPDP",174,0)
 S RESP=$$CLAIM^BPSOSRX(BRXIEN,BFILL,.MOREDATA)
"RTN","BPSNCPDP",175,0)
 D LOG("After Submit of Claim.  Return Value: "_RESP)
"RTN","BPSNCPDP",176,0)
 I RESP=1 D
"RTN","BPSNCPDP",177,0)
 . S RESPONSE=0
"RTN","BPSNCPDP",178,0)
 . S CLMSTAT="Prescription "_BRX_" successfully submitted to ECME for claim generation."
"RTN","BPSNCPDP",179,0)
 . I WFLG W !!,CLMSTAT
"RTN","BPSNCPDP",180,0)
 I RESP=0 D  G END
"RTN","BPSNCPDP",181,0)
 . S RESPONSE=4
"RTN","BPSNCPDP",182,0)
 . S CLMSTAT="No claim submission made.  Unable to queue claim submission."
"RTN","BPSNCPDP",183,0)
 . I WFLG W !!,CLMSTAT,!
"RTN","BPSNCPDP",184,0)
 . D LOG(CLMSTAT)
"RTN","BPSNCPDP",185,0)
 ;
"RTN","BPSNCPDP",186,0)
 ; Display status
"RTN","BPSNCPDP",187,0)
STATUS I 'WFLG H 1
"RTN","BPSNCPDP",188,0)
 E  D STATUS^BPSNCPD1(BRXIEN,BFILL,REBILL,REVONLY,BPSTART,BWHERE)
"RTN","BPSNCPDP",189,0)
 ;
"RTN","BPSNCPDP",190,0)
 ; Clean up and quit
"RTN","BPSNCPDP",191,0)
END K BRXIEN,BFILL,BFILLDAT,BWHERE,MOREDATA
"RTN","BPSNCPDP",192,0)
 S:'$D(RESPONSE) RESPONSE=1
"RTN","BPSNCPDP",193,0)
 Q RESPONSE_"^"_$G(CLMSTAT)
"RTN","BPSNCPDP",194,0)
 ;
"RTN","BPSNCPDP",195,0)
LOG(LOGMSG) ;
"RTN","BPSNCPDP",196,0)
 D LOG59^BPSOSL($T(+0)_" - "_LOGMSG,BRXIEN_"."_$E($TR($J("",4-$L(BFILL))," ","0")_BFILL,1,4)_1)
"RTN","BPSNCPDP",197,0)
 Q
"RTN","BPSNCPDP",198,0)
STTM() ;
"RTN","BPSNCPDP",199,0)
 N %,%H,%I
"RTN","BPSNCPDP",200,0)
 D NOW^%DTC
"RTN","BPSNCPDP",201,0)
 Q %
"RTN","BPSOS6D")
0^1^B78265988^B78255184
"RTN","BPSOS6D",1,0)
BPSOS6D ;BHAM ISC/FCS/DRS/FLS - user screen subrous ;06/01/2004
"RTN","BPSOS6D",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,4**;JUN 2004;Build 3
"RTN","BPSOS6D",3,0)
 Q
"RTN","BPSOS6D",4,0)
PRINTALL ; print all pat. results
"RTN","BPSOS6D",5,0)
 I '$D(@(VALMAR)) D NA G PRINT99
"RTN","BPSOS6D",6,0)
 N IO I '$$DEVICE G PRINT99
"RTN","BPSOS6D",7,0)
 U $P D:IO=$P FULL^VALM1 U IO
"RTN","BPSOS6D",8,0)
 D PRINTHDR
"RTN","BPSOS6D",9,0)
 N A S A="" F  S A=$O(@VALMAR@(A)) Q:'A  D PRINTA(A)
"RTN","BPSOS6D",10,0)
 G PRINT9
"RTN","BPSOS6D",11,0)
PRINTHDR ;
"RTN","BPSOS6D",12,0)
 W VALM("TITLE")," "
"RTN","BPSOS6D",13,0)
 N %,%H,%I,X,Y D NOW^%DTC S Y=% X ^DD("DD") W Y,!!
"RTN","BPSOS6D",14,0)
 N A S A="" F  S A=$O(VALMHDR(A)) Q:A=""  W VALMHDR(A),!
"RTN","BPSOS6D",15,0)
 W !
"RTN","BPSOS6D",16,0)
 Q
"RTN","BPSOS6D",17,0)
PRINTA(A) ; print line A
"RTN","BPSOS6D",18,0)
 ; How can you tell whether this is a patient line or prescription line?
"RTN","BPSOS6D",19,0)
 ; Look at @DISPLINE(n)=patname or patname^rxi
"RTN","BPSOS6D",20,0)
 ; Look at @VALMIDX@(n,patien), @VALMIDX@(n,patien,rxien)
"RTN","BPSOS6D",21,0)
 I '$D(IOM) N IOM S IOM=80
"RTN","BPSOS6D",22,0)
 N X D
"RTN","BPSOS6D",23,0)
 .I $D(@VALMAR@(A,0)) S X=@VALMAR@(A,0)
"RTN","BPSOS6D",24,0)
 .E  S X="(? Line "_A_" is missing?)"
"RTN","BPSOS6D",25,0)
 .F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,$L(X)-1)
"RTN","BPSOS6D",26,0)
 .N M,N S M=32,N=IOM-M
"RTN","BPSOS6D",27,0)
 .W $E(X,1,IOM),! S X=$E(X,IOM+1,$L(X))
"RTN","BPSOS6D",28,0)
 .F  Q:X=""  W ?M-3,"...",$E(X,1,N),! S X=$E(X,N+1,$L(X))
"RTN","BPSOS6D",29,0)
 Q
"RTN","BPSOS6D",30,0)
PRINT ; Print selected lines
"RTN","BPSOS6D",31,0)
 I '$D(@(VALMAR)) D NA G PRINT99
"RTN","BPSOS6D",32,0)
 W !,"Enter the line numbers you wish to print.  For example,",!
"RTN","BPSOS6D",33,0)
 W "enter    3-7     to print lines 3 through 7.",!
"RTN","BPSOS6D",34,0)
 N IEN D SELECPAT(.IEN)
"RTN","BPSOS6D",35,0)
 I $D(IEN)<10 G PRINT99
"RTN","BPSOS6D",36,0)
 N IO I '$$DEVICE G PRINT99
"RTN","BPSOS6D",37,0)
 U $P D:IO=$P FULL^VALM1 U IO
"RTN","BPSOS6D",38,0)
 D PRINTHDR
"RTN","BPSOS6D",39,0)
 N A S A="" F  S A=$O(IEN(A)) Q:A=""  D PRINTA(A)
"RTN","BPSOS6D",40,0)
PRINT9 ; joined here from PRINTALL,CLAIMLOG
"RTN","BPSOS6D",41,0)
 D BYE^BPSOSU5 ; this does DO ^%ZISC to close IO for you
"RTN","BPSOS6D",42,0)
PRINT99 ; joined here from PRINTALL,CLAIMLOG
"RTN","BPSOS6D",43,0)
 D:'$G(STOP) ANY^BPSOS2A
"RTN","BPSOS6D",44,0)
PRINT999 S VALMBCK="R"
"RTN","BPSOS6D",45,0)
 Q
"RTN","BPSOS6D",46,0)
MAKERXI ; IEN(*)=line numbers  we want to convert to prescription numbers
"RTN","BPSOS6D",47,0)
 ; builds RXI(*)="" or maybe data, ignore whatever you get on right side
"RTN","BPSOS6D",48,0)
 S IEN="" F  S IEN=$O(IEN(IEN)) Q:IEN=""  D MRXI
"RTN","BPSOS6D",49,0)
 Q
"RTN","BPSOS6D",50,0)
MRXI S RXI=$P(@DISPLINE@(IEN),U,2)
"RTN","BPSOS6D",51,0)
 I RXI S RXI(RXI)="" Q  ; a prescription detail line; take just the one
"RTN","BPSOS6D",52,0)
 ; else it's a patient line - take all of this patient's prescrip's
"RTN","BPSOS6D",53,0)
 N PAT S PAT=$P(@DISPLINE@(IEN),U)
"RTN","BPSOS6D",54,0)
 M RXI=@DISP@(PAT) ; merge in all of the patient's prescriptions
"RTN","BPSOS6D",55,0)
 Q  ; with RXI(*) array set up
"RTN","BPSOS6D",56,0)
CLAIMLOG ; protocol BPS P1 CLAIM LOG
"RTN","BPSOS6D",57,0)
 I '$D(@(VALMAR)) D NA G PRINT99
"RTN","BPSOS6D",58,0)
 W !,"Enter the line numbers for which you wish to print claim logs.",!
"RTN","BPSOS6D",59,0)
 N IEN D SELECPAT(.IEN) ; select prescription(s) or patients
"RTN","BPSOS6D",60,0)
 I $D(IEN)<10 G PRINT99
"RTN","BPSOS6D",61,0)
 N IO I '$$DEVICE G PRINT99
"RTN","BPSOS6D",62,0)
 U $P D:IO=$P FULL^VALM1 U IO
"RTN","BPSOS6D",63,0)
 N STOP,RXI D MAKERXI ; IEN(*) -> converted to RXI(*)
"RTN","BPSOS6D",64,0)
 ; now RXI(*) is the array of RXI's we want to print logs for
"RTN","BPSOS6D",65,0)
 S RXI="" F  S RXI=$O(RXI(RXI)) Q:RXI=""  S STOP=0 D CLAIMLOG^BPSOS6M(RXI,IO)
"RTN","BPSOS6D",66,0)
 G PRINT9
"RTN","BPSOS6D",67,0)
RECEIPT ; protocol BPS P1 RECEIPT ; print receipts
"RTN","BPSOS6D",68,0)
 I '$D(@(VALMAR)) D NA G PRINT99
"RTN","BPSOS6D",69,0)
 W !,"Enter the line numbers for which you wish to print ",$$NAME^BPSOS6E(3),".",!
"RTN","BPSOS6D",70,0)
 N IEN D SELECPAT(.IEN) ; select prescription(s) or patients
"RTN","BPSOS6D",71,0)
 I $D(IEN)<10 G PRINT99
"RTN","BPSOS6D",72,0)
 N IO I '$$DEVICE G PRINT99
"RTN","BPSOS6D",73,0)
 U $P D:IO=$P FULL^VALM1
"RTN","BPSOS6D",74,0)
 N RXI D MAKERXI ; IEN(*) -> converted to RXI(*)
"RTN","BPSOS6D",75,0)
 D RECEIPTS^BPSOS6E(.RXI,IO)
"RTN","BPSOS6D",76,0)
 D BYE^BPSOSU5
"RTN","BPSOS6D",77,0)
 G PRINT9
"RTN","BPSOS6D",78,0)
REVERSE ; protocol BPS P1 REVERSE CLAIM ; reverse selected claims
"RTN","BPSOS6D",79,0)
 I '$D(@(VALMAR)) D NA G PRINT99
"RTN","BPSOS6D",80,0)
 W "Select the line(s) with the paid claim(s) you wish to REVERSE.",!
"RTN","BPSOS6D",81,0)
 S WHERE="1REVERSE"
"RTN","BPSOS6D",82,0)
 N IEN D SELECPAT(.IEN,WHERE) ; select which ones to reverse
"RTN","BPSOS6D",83,0)
 N RXI D MAKERXI ; IEN(*) -> converted to RXI(*)
"RTN","BPSOS6D",84,0)
 D FULL^VALM1
"RTN","BPSOS6D",85,0)
 N REVTOTAL,REVELECT,ERRCOUNT S (REVTOTAL,REVELECT,ERRCOUNT)=0
"RTN","BPSOS6D",86,0)
 S RXI="" F  S RXI=$O(RXI(RXI)) Q:RXI=""  D
"RTN","BPSOS6D",87,0)
 . N X S X=$$REVERS59(RXI,0)
"RTN","BPSOS6D",88,0)
 . I X D
"RTN","BPSOS6D",89,0)
 . . S REVTOTAL=REVTOTAL+1
"RTN","BPSOS6D",90,0)
 . . I X>.5 S REVELECT=REVELECT+1
"RTN","BPSOS6D",91,0)
 . E  D
"RTN","BPSOS6D",92,0)
 . . W "Cannot reverse ",RXI,! S ERRCOUNT=ERRCOUNT+1
"RTN","BPSOS6D",93,0)
 W REVTOTAL," claim reversal",$S(REVTOTAL'=1:"s",1:"")," in progress.",!
"RTN","BPSOS6D",94,0)
 I ERRCOUNT D
"RTN","BPSOS6D",95,0)
 . W "Some claim(s) could not be reversed because only paper claims",!
"RTN","BPSOS6D",96,0)
 . W "and Payable electronic claims can be reversed.",!
"RTN","BPSOS6D",97,0)
 I REVELECT D TASK^BPSOSQ1 ; task up a packetizer
"RTN","BPSOS6D",98,0)
 H 2
"RTN","BPSOS6D",99,0)
 N NODISPLY S NODISPLY=1 D UPD^BPSOS6A
"RTN","BPSOS6D",100,0)
 S VALMBCK="R"
"RTN","BPSOS6D",101,0)
 Q
"RTN","BPSOS6D",102,0)
REVERS59(IEN59,WANTQ2)    ;EP - called from BPSOSRB too
"RTN","BPSOS6D",103,0)
 ; Input:
"RTN","BPSOS6D",104,0)
 ;   IEN59 as usual
"RTN","BPSOS6D",105,0)
 ;   $G(WANT2Q)=TRUE if you want packetizer started
"RTN","BPSOS6D",106,0)
 ; Returns:
"RTN","BPSOS6D",107,0)
 ;   0 if reversal was not created
"RTN","BPSOS6D",108,0)
 ;   IEN of reversal claim if ECME reversal was submitted
"RTN","BPSOS6D",109,0)
 ; Note: MOREDATA array newed/set by BPSNCPDP
"RTN","BPSOS6D",110,0)
 N OLDSLOT S OLDSLOT=$$GETSLOT^BPSOSL
"RTN","BPSOS6D",111,0)
 D SETSLOT^BPSOSL(IEN59)
"RTN","BPSOS6D",112,0)
 D LOG^BPSOSL($T(+0)_" - Reversal - begin")
"RTN","BPSOS6D",113,0)
 ;
"RTN","BPSOS6D",114,0)
 ; Update Start Time (15), Last Update (7), Reversal Reason (404), User (13),
"RTN","BPSOS6D",115,0)
 ;   and Status (1) in BPS Transactions
"RTN","BPSOS6D",116,0)
 N DIE,DR,DA
"RTN","BPSOS6D",117,0)
 S DIE=9002313.59,DA=IEN59
"RTN","BPSOS6D",118,0)
 S DR="13////"_$G(MOREDATA("USER"))_";15///NOW;7///NOW;1201///"_$G(MOREDATA("RX ACTION"))
"RTN","BPSOS6D",119,0)
 S DR=DR_";1///0;404///"_$G(MOREDATA("REVERSAL REASON"))
"RTN","BPSOS6D",120,0)
 ; Set REVERSE AFTER SUBMIT field if needed
"RTN","BPSOS6D",121,0)
 I $G(MOREDATA("REVERSE THEN RESUBMIT")) S DR=DR_";1.12///1"
"RTN","BPSOS6D",122,0)
 D ^DIE
"RTN","BPSOS6D",123,0)
 D LOG59A^BPSOSQB ; Log contents of 9002313.59
"RTN","BPSOS6D",124,0)
 D PREVISLY^BPSOSIZ(IEN59) ; bracket result text with [Previously: ]
"RTN","BPSOS6D",125,0)
 N CLAIMIEN S CLAIMIEN=$P(^BPST(IEN59,0),U,4) ; the claim
"RTN","BPSOS6D",126,0)
 N POS S POS=$P(^BPST(IEN59,0),U,9) ; and position therein
"RTN","BPSOS6D",127,0)
 N REV S REV=$$REVERSE^BPSECA8(CLAIMIEN,POS) ; construct reversal
"RTN","BPSOS6D",128,0)
 S DIE=9002313.59,DA=IEN59,DR="401////"_REV D ^DIE
"RTN","BPSOS6D",129,0)
 D LOG^BPSOSL($T(+0)_" - Reversal claim `"_REV_" "_$P(^BPSC(REV,0),U))
"RTN","BPSOS6D",130,0)
 N ABSBRXI S ABSBRXI=IEN59 D SETSTAT^BPSOSU(30) ; waiting to packetize
"RTN","BPSOS6D",131,0)
 I $G(WANTQ2) D TASK^BPSOSQ1
"RTN","BPSOS6D",132,0)
 D RELSLOT^BPSOSL,SETSLOT^BPSOSL(OLDSLOT)
"RTN","BPSOS6D",133,0)
 Q REV
"RTN","BPSOS6D",134,0)
REVERSP(IEN59) ;
"RTN","BPSOS6D",135,0)
 N ABSBRXI,OLDSLOT,X,MSG S MSG="Reversed paper claim"
"RTN","BPSOS6D",136,0)
 S $P(^BPST(IEN59,4),U,3)=1
"RTN","BPSOS6D",137,0)
 S ABSBRXI=IEN59
"RTN","BPSOS6D",138,0)
 D SETRESU^BPSOSU(1,MSG)
"RTN","BPSOS6D",139,0)
 D LOG59^BPSOSL(MSG,IEN59)
"RTN","BPSOS6D",140,0)
 D SETSTAT^BPSOSU(99)
"RTN","BPSOS6D",141,0)
 Q
"RTN","BPSOS6D",142,0)
RESUBMIT ;
"RTN","BPSOS6D",143,0)
 I '$D(@(VALMAR)) D NA G PRINT99
"RTN","BPSOS6D",144,0)
 S WHERE="1RESUBMIT"
"RTN","BPSOS6D",145,0)
 W "Select the line(s) with the claim(s) you wish to RESUBMIT.",!
"RTN","BPSOS6D",146,0)
 N IEN D SELECPAT(.IEN,WHERE) ; gives IEN(*)
"RTN","BPSOS6D",147,0)
 N RXI D MAKERXI ; IEN(*) -> converted to RXI(*)
"RTN","BPSOS6D",148,0)
 D FULL^VALM1
"RTN","BPSOS6D",149,0)
 N REVCOUNT S REVCOUNT=0
"RTN","BPSOS6D",150,0)
 N IEN59 S IEN59="" F  S IEN59=$O(RXI(IEN59)) Q:IEN59=""  D
"RTN","BPSOS6D",151,0)
 . I $D(^PSRX($P(IEN59,".",1),"D")) W "Cannot Reverse or Resubmit "_IEN59_" because it has been deleted in Pharmacy.",! H 2 Q
"RTN","BPSOS6D",152,0)
 .N X S X=$$RESULT59^BPSOSRX(IEN59)
"RTN","BPSOS6D",153,0)
 .S RXI=$P(IEN59,".")
"RTN","BPSOS6D",154,0)
 .S RXR=+$E($P(IEN59,".",2),1,4)
"RTN","BPSOS6D",155,0)
 . I $$STATUS^BPSOSRX(RXI,RXR)["E PAYABLE" W "Cannot Resubmit "_IEN59_" because it is PAYABLE - please reverse it first.",! H 2 Q
"RTN","BPSOS6D",156,0)
 .S FILLDATE=$$RXFLDT^PSOBPSUT(RXI,RXR)
"RTN","BPSOS6D",157,0)
 .S NDC=$$GETNDC^PSONDCUT(RXI,RXR)
"RTN","BPSOS6D",158,0)
 .S BILLNUM=$$EN^BPSNCPDP(RXI,RXR,FILLDATE,"ERES","")
"RTN","BPSOS6D",159,0)
 N NODISPLY S NODISPLY=1 D UPD^BPSOS6A
"RTN","BPSOS6D",160,0)
 S VALMBCK="R"
"RTN","BPSOS6D",161,0)
 Q
"RTN","BPSOS6D",162,0)
RESUB1(IEN59,MIN) ;
"RTN","BPSOS6D",163,0)
 ; Also called here from BPSOSU, for reverse-and-resubmit action
"RTN","BPSOS6D",164,0)
 ; Kill pointers of previous submissions and reversals
"RTN","BPSOS6D",165,0)
 N DIE,DR,DA,FN,ENTRY,FDA,MSG
"RTN","BPSOS6D",166,0)
 S DIE=9002313.59,DA=IEN59
"RTN","BPSOS6D",167,0)
 S DR="" N I F I=3,4,401:1:404,301:1:302,801:1:803 D
"RTN","BPSOS6D",168,0)
 . S:DR]"" DR=DR_";" S DR=DR_I_"///@"
"RTN","BPSOS6D",169,0)
 . S DR=DR_";15///NOW;7///NOW" ; stamp new starting time, too
"RTN","BPSOS6D",170,0)
 I '$G(MIN) D  ; BPS*1.0T7*11 this whole block
"RTN","BPSOS6D",171,0)
 . F I=10,11,1.05:.01:1.08,1.13,601:1:603,701:1:703 S DR=DR_";"_I_"///@"
"RTN","BPSOS6D",172,0)
 D ^DIE
"RTN","BPSOS6D",173,0)
 ;
"RTN","BPSOS6D",174,0)
 ; Delete DUR multiple
"RTN","BPSOS6D",175,0)
 K FDA,MSG
"RTN","BPSOS6D",176,0)
 S FN=9002313.5913,ENTRY=0
"RTN","BPSOS6D",177,0)
 F  S ENTRY=$O(^BPST(IEN59,13,ENTRY)) Q:+ENTRY=0  S FDA(FN,ENTRY_","_IEN59_",",.01)=""
"RTN","BPSOS6D",178,0)
 D FILE^DIE("","FDA","MSG")
"RTN","BPSOS6D",179,0)
 ;
"RTN","BPSOS6D",180,0)
 ; Bracket result text with "[Previously: ]"
"RTN","BPSOS6D",181,0)
 D PREVISLY^BPSOSIZ(IEN59)
"RTN","BPSOS6D",182,0)
RESUB2 ;LJE;had to shorten routine to less that 10000 bytes, so moved this subroutine to BPSOS6N
"RTN","BPSOS6D",183,0)
 D RESUB^BPSOS6N
"RTN","BPSOS6D",184,0)
 Q
"RTN","BPSOS6D",185,0)
DEVICE() ; device selection for POS
"RTN","BPSOS6D",186,0)
 ; want to provide a convenient default
"RTN","BPSOS6D",187,0)
 N DEFAULT S DEFAULT="HOME"
"RTN","BPSOS6D",188,0)
 N DEVICE S DEVICE=$$DEVICE^BPSOSU8(DEFAULT)
"RTN","BPSOS6D",189,0)
 I 'DEVICE Q ""
"RTN","BPSOS6D",190,0)
 Q DEVICE
"RTN","BPSOS6D",191,0)
CANCEL ; protocol BPS P1 CANCEL CLAIM
"RTN","BPSOS6D",192,0)
 I '$D(@(VALMAR)) D NA G PRINT99
"RTN","BPSOS6D",193,0)
 N LINE
"RTN","BPSOS6D",194,0)
 W !,"Select prescription to cancel by line number.  Hurry!"
"RTN","BPSOS6D",195,0)
 D SELECPAT(.LINE)
"RTN","BPSOS6D",196,0)
 I $O(LINE(""))="" W !,"None selected for cancellation",! G CAN99
"RTN","BPSOS6D",197,0)
 S LINE="" F  S LINE=$O(LINE(LINE)) Q:LINE=""  D
"RTN","BPSOS6D",198,0)
 .N PAT,RXI S PAT=$P(@DISPLINE@(LINE),U),RXI=$P(@DISPLINE@(LINE),U,2)
"RTN","BPSOS6D",199,0)
 .I RXI D CANC5^BPSOS6L Q
"RTN","BPSOS6D",200,0)
 .; else patient was selected; cancel all of this patient's claims
"RTN","BPSOS6D",201,0)
 .S RXI="" F  S RXI=$O(@DISP@(PAT,RXI)) Q:RXI=""  D CANC5^BPSOS6L
"RTN","BPSOS6D",202,0)
 W !,"Cancellation requests made." H 1
"RTN","BPSOS6D",203,0)
CAN99 D ANY^BPSOS2A ;D PRESSANY^BPSOSU5()
"RTN","BPSOS6D",204,0)
 N NODISPLY DO UPD^BPSOS6A S VALMBCK="R"
"RTN","BPSOS6D",205,0)
 Q
"RTN","BPSOS6D",206,0)
DISMISS ; protocol BPS P1 DISMISS ; dismiss a patient from my screen
"RTN","BPSOS6D",207,0)
DIS0 I '$D(@(VALMAR)) D NA G PRINT99
"RTN","BPSOS6D",208,0)
 N IEN,TIME,X,%,%I,%H D NOW^%DTC
"RTN","BPSOS6D",209,0)
 S TIME=$$TADD^BPSOSUD(%,^TMP("BPSOS",$J,"TIME"))
"RTN","BPSOS6D",210,0)
 D SELECPAT(.IEN)
"RTN","BPSOS6D",211,0)
 S IEN="" F  S IEN=$O(IEN(IEN)) Q:IEN=""  D
"RTN","BPSOS6D",212,0)
 .N PAT,RXI S PAT=@DISPLINE@(IEN),RXI=$P(PAT,U,2),PAT=$P(PAT,U)
"RTN","BPSOS6D",213,0)
 .S @DISMISS@(PAT)=TIME
"RTN","BPSOS6D",214,0)
 .I $D(@DISP@(PAT)) S $P(@DISP@(PAT),U,3)=0
"RTN","BPSOS6D",215,0)
 .W PAT," will be dismissed.",! H 1
"RTN","BPSOS6D",216,0)
 .I RXI D
"RTN","BPSOS6D",217,0)
 ..S @DISMISS@(PAT,RXI)=TIME
"RTN","BPSOS6D",218,0)
 ..I $D(@DISP@(PAT,RXI)) S $P(@DISP@(PAT,RXI),U,3)=0
"RTN","BPSOS6D",219,0)
DIS9 ; some other functions branch to here to go back to main screen
"RTN","BPSOS6D",220,0)
 N NODISPLY DO UPD^BPSOS6A S VALMBCK="R"
"RTN","BPSOS6D",221,0)
 Q
"RTN","BPSOS6D",222,0)
SELECPAT(RET,WHERE) ; Select a patient.  Returns patient IEN(s) in array
"RTN","BPSOS6D",223,0)
 N VALMA,VAMP,VALMI,VALMAT,VALMY
"RTN","BPSOS6D",224,0)
 S VALMLST="" S VALMLST=$O(^TMP("BPSOS",$J,"VALM","IDX"),-1)  ;8/30/04;get last entry
"RTN","BPSOS6D",225,0)
 D EN^VALM2(XQORNOD(0),"O") S VALMI=0 ; allow "O"ptionally answer
"RTN","BPSOS6D",226,0)
 W !
"RTN","BPSOS6D",227,0)
SELEC2 ;
"RTN","BPSOS6D",228,0)
 G SELEC3:'$G(WHERE)
"RTN","BPSOS6D",229,0)
 G SELEC3:'$D(VALMY)
"RTN","BPSOS6D",230,0)
 N WHICH S WHICH="",WHICH=$O(VALMY(WHICH))
"RTN","BPSOS6D",231,0)
 W !,"You've chosen to "_$S(WHERE["REVERSE":"REVERSE",WHERE["RESUB":"RESUBMIT",1:"?? ")_" the following prescription for "_$P(^TMP("BPSOS",$J,"DISPLINE",WHICH),"^",1)_":"
"RTN","BPSOS6D",232,0)
 W !,^TMP("BPSOS",$J,"VALM",WHICH,0)
"RTN","BPSOS6D",233,0)
 N OK R !,"Are you sure? <Y> ",OK:120 S OK=$TR(OK,"ynq","YNQ") S:OK="" OK="Y" I OK["^"!(OK="Q") Q
"RTN","BPSOS6D",234,0)
 I OK'="Y"&(OK'="N") W !!,"You must enter Y for Yes, N for No, or ^ to exit.",! G SELEC2
"RTN","BPSOS6D",235,0)
 Q:OK="^"!(OK="N")
"RTN","BPSOS6D",236,0)
 W !
"RTN","BPSOS6D",237,0)
SELEC3 ;
"RTN","BPSOS6D",238,0)
 M RET=VALMY
"RTN","BPSOS6D",239,0)
 Q
"RTN","BPSOS6D",240,0)
NA ;
"RTN","BPSOS6D",241,0)
 W !!,"There are no 'items' to select."
"RTN","BPSOS6D",242,0)
 Q
"VER")
8.0^22.0
"BLD",6907,6)
^3
**END**
**END**
