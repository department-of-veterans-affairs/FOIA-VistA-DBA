Released IB*2*302 SEQ #314
Extracted from mail message
**KIDS**:IB*2.0*302^

**INSTALL NAME**
IB*2.0*302
"BLD",6680,0)
IB*2.0*302^INTEGRATED BILLING^0^3060411^y
"BLD",6680,1,0)
^^1^1^3060411^^
"BLD",6680,1,1,0)
ADD NEW ADJUSTMENT CODE TO AUTO BILL GENERATION LIST
"BLD",6680,4,0)
^9.64PA^^
"BLD",6680,"KRN",0)
^9.67PA^8989.52^19
"BLD",6680,"KRN",.4,0)
.4
"BLD",6680,"KRN",.401,0)
.401
"BLD",6680,"KRN",.402,0)
.402
"BLD",6680,"KRN",.403,0)
.403
"BLD",6680,"KRN",.5,0)
.5
"BLD",6680,"KRN",.84,0)
.84
"BLD",6680,"KRN",3.6,0)
3.6
"BLD",6680,"KRN",3.8,0)
3.8
"BLD",6680,"KRN",9.2,0)
9.2
"BLD",6680,"KRN",9.8,0)
9.8
"BLD",6680,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",6680,"KRN",9.8,"NM",1,0)
IBCEMQC^^0^B29805727
"BLD",6680,"KRN",9.8,"NM","B","IBCEMQC",1)

"BLD",6680,"KRN",19,0)
19
"BLD",6680,"KRN",19.1,0)
19.1
"BLD",6680,"KRN",101,0)
101
"BLD",6680,"KRN",409.61,0)
409.61
"BLD",6680,"KRN",771,0)
771
"BLD",6680,"KRN",870,0)
870
"BLD",6680,"KRN",8989.51,0)
8989.51
"BLD",6680,"KRN",8989.52,0)
8989.52
"BLD",6680,"KRN",8994,0)
8994
"BLD",6680,"KRN","B",.4,.4)

"BLD",6680,"KRN","B",.401,.401)

"BLD",6680,"KRN","B",.402,.402)

"BLD",6680,"KRN","B",.403,.403)

"BLD",6680,"KRN","B",.5,.5)

"BLD",6680,"KRN","B",.84,.84)

"BLD",6680,"KRN","B",3.6,3.6)

"BLD",6680,"KRN","B",3.8,3.8)

"BLD",6680,"KRN","B",9.2,9.2)

"BLD",6680,"KRN","B",9.8,9.8)

"BLD",6680,"KRN","B",19,19)

"BLD",6680,"KRN","B",19.1,19.1)

"BLD",6680,"KRN","B",101,101)

"BLD",6680,"KRN","B",409.61,409.61)

"BLD",6680,"KRN","B",771,771)

"BLD",6680,"KRN","B",870,870)

"BLD",6680,"KRN","B",8989.51,8989.51)

"BLD",6680,"KRN","B",8989.52,8989.52)

"BLD",6680,"KRN","B",8994,8994)

"BLD",6680,"QUES",0)
^9.62^^
"BLD",6680,"REQB",0)
^9.611^1^1
"BLD",6680,"REQB",1,0)
IB*2.0*323^1
"BLD",6680,"REQB","B","IB*2.0*323",1)

"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
302^3060411
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3060411
"PKG",200,22,1,"PAH",1,1,1,0)
ADD NEW ADJUSTMENT CODE TO AUTO BILL GENERATION LIST
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IBCEMQC")
0^1^B29805727^B29766412
"RTN","IBCEMQC",1,0)
IBCEMQC ;ALB/ESG - MRA EOB CRITERIA FOR AUTO-AUTHORIZE ; 3/1/06 9:23am
"RTN","IBCEMQC",2,0)
 ;;2.0;INTEGRATED BILLING;**155,323,302**;21-MAR-94
"RTN","IBCEMQC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMQC",4,0)
 ;
"RTN","IBCEMQC",5,0)
 Q   ; must be called at proper entry point
"RTN","IBCEMQC",6,0)
 ;
"RTN","IBCEMQC",7,0)
CRIT(IBEOB) ; Function to determine if EOB entry meets the criteria for
"RTN","IBCEMQC",8,0)
 ; auto-authorization and secondary claim submission
"RTN","IBCEMQC",9,0)
 ;
"RTN","IBCEMQC",10,0)
 ; Input:  IBEOB - internal entry number for an entry in 361.1
"RTN","IBCEMQC",11,0)
 ;
"RTN","IBCEMQC",12,0)
 ; Output:  This function returns a pieced string
"RTN","IBCEMQC",13,0)
 ;          [1] 0 or 1, EOB meets criteria
"RTN","IBCEMQC",14,0)
 ;          [2] error message if the first piece is 0
"RTN","IBCEMQC",15,0)
 ;
"RTN","IBCEMQC",16,0)
 NEW IBM,IBM3,IBM5,IBIFN,PCE,REMC,Z,OK,REASON,STOP,IBPTRESP
"RTN","IBCEMQC",17,0)
 ;
"RTN","IBCEMQC",18,0)
 S OK=0,REASON="Unknown",IBEOB=+$G(IBEOB)
"RTN","IBCEMQC",19,0)
 ;
"RTN","IBCEMQC",20,0)
 S IBM=$G(^IBM(361.1,IBEOB,0)) I IBM="" S REASON="No EOB Data Found" G CRITX
"RTN","IBCEMQC",21,0)
 I $D(^IBM(361.1,IBEOB,"ERR")) S REASON="Filing Errors" G CRITX
"RTN","IBCEMQC",22,0)
 I $P(IBM,U,13)'=1 S REASON="Claim Status is "_$$GET1^DIQ(361.1,IBEOB_",",.13)_".  It must be PROCESSED." G CRITX
"RTN","IBCEMQC",23,0)
 ;
"RTN","IBCEMQC",24,0)
 I $P(IBM,U,4)'=1 S REASON="The EOB Type is not Medicare MRA" G CRITX
"RTN","IBCEMQC",25,0)
 ;
"RTN","IBCEMQC",26,0)
 ; If any other MRA's on file for this bill failed the auto-generation
"RTN","IBCEMQC",27,0)
 ; check, then this MRA must also fail the check
"RTN","IBCEMQC",28,0)
 S IBIFN=+IBM,Z=0,STOP=0
"RTN","IBCEMQC",29,0)
 F  S Z=$O(^IBM(361.1,"B",IBIFN,Z)) Q:'Z  D  Q:STOP
"RTN","IBCEMQC",30,0)
 . I Z=IBEOB Q             ; check different EOB records if they exist
"RTN","IBCEMQC",31,0)
 . I $P($G(^IBM(361.1,Z,0)),U,4)'=1 Q     ; must be an MRA
"RTN","IBCEMQC",32,0)
 . I $P($G(^IBM(361.1,Z,30)),U,1)="" Q    ; no problems recorded
"RTN","IBCEMQC",33,0)
 . S REASON="Another MRA for this bill (ien="_Z_") failed the auto-generation criteria check."
"RTN","IBCEMQC",34,0)
 . S STOP=1
"RTN","IBCEMQC",35,0)
 . Q
"RTN","IBCEMQC",36,0)
 I STOP G CRITX
"RTN","IBCEMQC",37,0)
 ;
"RTN","IBCEMQC",38,0)
 ; If this EOB is a split EOB, then don't allow it
"RTN","IBCEMQC",39,0)
 I $$SPLIT^IBCEMU1(IBEOB) S REASON="Claim level remark code MA15 received.  Multiple MRA's" G CRITX
"RTN","IBCEMQC",40,0)
 ;
"RTN","IBCEMQC",41,0)
 ; Call the function that checks the claim level and/or line level
"RTN","IBCEMQC",42,0)
 ; adjustments for this EOB
"RTN","IBCEMQC",43,0)
 I '$$CAS(IBEOB,"B",.REASON) G CRITX      ; "B" for both
"RTN","IBCEMQC",44,0)
 ;
"RTN","IBCEMQC",45,0)
 ; Make sure the patient responsibility amount for this MRA is greater than $0
"RTN","IBCEMQC",46,0)
 S IBPTRESP=$P($G(^IBM(361.1,IBEOB,1)),U,2)      ; Pt Resp Amt 1.02 field
"RTN","IBCEMQC",47,0)
 I $$FT^IBCEF(IBIFN)=3 S IBPTRESP=$$PTRESPI^IBCECOB1(IBEOB)
"RTN","IBCEMQC",48,0)
 I IBPTRESP'>0 S REASON="Patient responsibility dollar amount is less than or equal to $0" G CRITX
"RTN","IBCEMQC",49,0)
 ;
"RTN","IBCEMQC",50,0)
 ; Check the parameter values last of all
"RTN","IBCEMQC",51,0)
 I '$P($G(^IBE(350.9,1,8)),U,11) S REASON="Automatic MRA Processing parameter is turned off.  File 350.9, Field 8.11." G CRITX
"RTN","IBCEMQC",52,0)
 I '$P($G(^IBE(350.9,1,8)),U,12) S REASON="Allow MRA Processing parameter is turned off.  File 350.9, Field 8.12." G CRITX
"RTN","IBCEMQC",53,0)
 ;
"RTN","IBCEMQC",54,0)
 ; At this point, we're OK
"RTN","IBCEMQC",55,0)
 S OK=1,REASON=""
"RTN","IBCEMQC",56,0)
 ;
"RTN","IBCEMQC",57,0)
CRITX ;
"RTN","IBCEMQC",58,0)
 Q OK_U_REASON
"RTN","IBCEMQC",59,0)
 ;
"RTN","IBCEMQC",60,0)
 ;
"RTN","IBCEMQC",61,0)
CAS(IBEOB,ADJFLAG,REASON) ; This function determines if the EOB
"RTN","IBCEMQC",62,0)
 ; adjustment group codes and reason codes from file 361.1 (either
"RTN","IBCEMQC",63,0)
 ; claim level or line level or both) meet the criteria for auto-
"RTN","IBCEMQC",64,0)
 ; authorization and secondary claim submission.
"RTN","IBCEMQC",65,0)
 ;
"RTN","IBCEMQC",66,0)
 ; Input Parameters
"RTN","IBCEMQC",67,0)
 ;        IBEOB    - ien of entry in file 361.1
"RTN","IBCEMQC",68,0)
 ;      ADJFLAG    - adjustment flag
"RTN","IBCEMQC",69,0)
 ;                   "C" - look at claim level adjustments only
"RTN","IBCEMQC",70,0)
 ;                   "L" - look at line level adjustments only
"RTN","IBCEMQC",71,0)
 ;                   "B" - look at both claim and line level adjustments
"RTN","IBCEMQC",72,0)
 ; Output Parameter
"RTN","IBCEMQC",73,0)
 ;       REASON    - error message describing why it failed
"RTN","IBCEMQC",74,0)
 ;
"RTN","IBCEMQC",75,0)
 ; Function Value is either 0 or 1, indicating if it passed the criteria
"RTN","IBCEMQC",76,0)
 ;
"RTN","IBCEMQC",77,0)
 NEW EOBADJ,OK,OKCOMBO,PATRESP,STOP,LNIEN
"RTN","IBCEMQC",78,0)
 ;
"RTN","IBCEMQC",79,0)
 S IBEOB=+$G(IBEOB)
"RTN","IBCEMQC",80,0)
 S ADJFLAG=$G(ADJFLAG,"B")     ; default is "B" if not passed in
"RTN","IBCEMQC",81,0)
 D BUILD           ; build the array of OK group/reason combinations
"RTN","IBCEMQC",82,0)
 S PATRESP=0       ; patient responsibility flag (default false)
"RTN","IBCEMQC",83,0)
 S STOP=0          ; Stop flag
"RTN","IBCEMQC",84,0)
 S OK=0            ; OK flag (function value)
"RTN","IBCEMQC",85,0)
 S REASON=""       ; error reason text
"RTN","IBCEMQC",86,0)
 ;
"RTN","IBCEMQC",87,0)
 ; claim level adjustments
"RTN","IBCEMQC",88,0)
 I $F(".C.B.","."_ADJFLAG_".") D
"RTN","IBCEMQC",89,0)
 . KILL EOBADJ
"RTN","IBCEMQC",90,0)
 . M EOBADJ=^IBM(361.1,IBEOB,10)
"RTN","IBCEMQC",91,0)
 . D ADJCHK
"RTN","IBCEMQC",92,0)
 . Q
"RTN","IBCEMQC",93,0)
 ;
"RTN","IBCEMQC",94,0)
 ; Get out if the claim level adjustments failed
"RTN","IBCEMQC",95,0)
 I STOP G CASX
"RTN","IBCEMQC",96,0)
 ;
"RTN","IBCEMQC",97,0)
 ; line level adjustments
"RTN","IBCEMQC",98,0)
 I $F(".L.B.","."_ADJFLAG_".") D
"RTN","IBCEMQC",99,0)
 . S LNIEN=0
"RTN","IBCEMQC",100,0)
 . F  S LNIEN=$O(^IBM(361.1,IBEOB,15,LNIEN)) Q:'LNIEN  D  Q:STOP
"RTN","IBCEMQC",101,0)
 .. KILL EOBADJ
"RTN","IBCEMQC",102,0)
 .. M EOBADJ=^IBM(361.1,IBEOB,15,LNIEN,1)
"RTN","IBCEMQC",103,0)
 .. D ADJCHK
"RTN","IBCEMQC",104,0)
 .. Q
"RTN","IBCEMQC",105,0)
 . Q
"RTN","IBCEMQC",106,0)
 ;
"RTN","IBCEMQC",107,0)
 ; Get out if the line level adjustments failed
"RTN","IBCEMQC",108,0)
 I STOP G CASX
"RTN","IBCEMQC",109,0)
 ;
"RTN","IBCEMQC",110,0)
 ; Get out if there was no patient responsibility adjustments found
"RTN","IBCEMQC",111,0)
 I 'PATRESP S REASON="No Patient Responsibility Adjustments found" G CASX
"RTN","IBCEMQC",112,0)
 ;
"RTN","IBCEMQC",113,0)
 ; At this point, we're OK
"RTN","IBCEMQC",114,0)
 S OK=1,REASON=""
"RTN","IBCEMQC",115,0)
CASX ;
"RTN","IBCEMQC",116,0)
 Q OK
"RTN","IBCEMQC",117,0)
 ;
"RTN","IBCEMQC",118,0)
 ;
"RTN","IBCEMQC",119,0)
ADJCHK ; This procedure checks the adjustments for this EOB.  The group codes
"RTN","IBCEMQC",120,0)
 ; and reason codes are in the EOBADJ array structures from file 361.1.
"RTN","IBCEMQC",121,0)
 ;
"RTN","IBCEMQC",122,0)
 ;   Variables STOP and REASON will be returned on an error
"RTN","IBCEMQC",123,0)
 ;   Variable PATRESP will be returned if a valid PR adjustment found
"RTN","IBCEMQC",124,0)
 ;
"RTN","IBCEMQC",125,0)
 NEW ADJIEN,GROUP,RSNIEN,RSNCODE
"RTN","IBCEMQC",126,0)
 S ADJIEN=0
"RTN","IBCEMQC",127,0)
 F  S ADJIEN=$O(EOBADJ(ADJIEN)) Q:'ADJIEN  D  Q:STOP
"RTN","IBCEMQC",128,0)
 . S GROUP=$P($G(EOBADJ(ADJIEN,0)),U,1)
"RTN","IBCEMQC",129,0)
 . I GROUP="LQ" Q      ; line level remark code kludge: 42 rec [3]
"RTN","IBCEMQC",130,0)
 . I GROUP="" S GROUP="<Undefined>"
"RTN","IBCEMQC",131,0)
 . I '$D(OKCOMBO(GROUP)) S STOP=1,REASON="Unacceptable Claim Adjustment Group Code: "_GROUP Q
"RTN","IBCEMQC",132,0)
 . S RSNIEN=0
"RTN","IBCEMQC",133,0)
 . F  S RSNIEN=$O(EOBADJ(ADJIEN,1,RSNIEN)) Q:'RSNIEN  D  Q:STOP
"RTN","IBCEMQC",134,0)
 .. S RSNCODE=$P($G(EOBADJ(ADJIEN,1,RSNIEN,0)),U,1)
"RTN","IBCEMQC",135,0)
 .. ;
"RTN","IBCEMQC",136,0)
 .. ; Ignore some special adjustment data that is filed with the MRA
"RTN","IBCEMQC",137,0)
 .. I GROUP="PR",RSNCODE="AAA" Q    ; Allowed Amount: 41 rec [3]
"RTN","IBCEMQC",138,0)
 .. I GROUP="OA",RSNCODE="AB3" Q    ; Covered Amount: 15 rec [3]
"RTN","IBCEMQC",139,0)
 .. ;
"RTN","IBCEMQC",140,0)
 .. I RSNCODE="" S RSNCODE="<Undefined>"
"RTN","IBCEMQC",141,0)
 .. I '$D(OKCOMBO(GROUP,RSNCODE)) S STOP=1,REASON="Unacceptable Reason Code ("_RSNCODE_") for Claim Adjustment Group Code ("_GROUP_")" Q
"RTN","IBCEMQC",142,0)
 .. ;
"RTN","IBCEMQC",143,0)
 .. ; Set the flag if the group is PR
"RTN","IBCEMQC",144,0)
 .. I GROUP="PR" S PATRESP=1
"RTN","IBCEMQC",145,0)
 .. Q
"RTN","IBCEMQC",146,0)
 . Q
"RTN","IBCEMQC",147,0)
ADJCHKX ;
"RTN","IBCEMQC",148,0)
 Q
"RTN","IBCEMQC",149,0)
 ;
"RTN","IBCEMQC",150,0)
 ;
"RTN","IBCEMQC",151,0)
BUILD ; This procedure builds the OKCOMBO array which identifies which
"RTN","IBCEMQC",152,0)
 ; combinations of group codes and reason codes are acceptable
"RTN","IBCEMQC",153,0)
 ;
"RTN","IBCEMQC",154,0)
 NEW LN,LINE,GROUP,RSNLST,R,RSN
"RTN","IBCEMQC",155,0)
 KILL OKCOMBO
"RTN","IBCEMQC",156,0)
 F LN=1:1 D  Q:$P(LINE,";",4)=""&$D(OKCOMBO)
"RTN","IBCEMQC",157,0)
 . S LINE=$T(OKCOMBO+LN)
"RTN","IBCEMQC",158,0)
 . S GROUP=$P(LINE,";",3) Q:GROUP=""
"RTN","IBCEMQC",159,0)
 . S RSNLST=$P(LINE,";",4) Q:RSNLST=""
"RTN","IBCEMQC",160,0)
 . F R=1:1:$L(RSNLST,",") D
"RTN","IBCEMQC",161,0)
 .. S RSN=$P(RSNLST,",",R) Q:RSN=""
"RTN","IBCEMQC",162,0)
 .. S OKCOMBO(GROUP,RSN)=""
"RTN","IBCEMQC",163,0)
 .. Q
"RTN","IBCEMQC",164,0)
 . Q
"RTN","IBCEMQC",165,0)
BUILDX ;
"RTN","IBCEMQC",166,0)
 Q
"RTN","IBCEMQC",167,0)
 ;
"RTN","IBCEMQC",168,0)
 ;
"RTN","IBCEMQC",169,0)
OKCOMBO ; This section lists OK combinations of adjustment category group codes
"RTN","IBCEMQC",170,0)
 ; and associated reason codes.
"RTN","IBCEMQC",171,0)
 ; The format is as follows - semi-colon delimiter
"RTN","IBCEMQC",172,0)
 ;     [3] Adjustment category (group code)
"RTN","IBCEMQC",173,0)
 ;     [4] List of acceptable reason codes - comma delimiter
"RTN","IBCEMQC",174,0)
 ;
"RTN","IBCEMQC",175,0)
 ; PR-AAA is created by VistA for the Allowed Amount
"RTN","IBCEMQC",176,0)
 ; OA-AB3 is created by VistA for the Covered Amount
"RTN","IBCEMQC",177,0)
 ; LQ-zzz is created by VistA for the Line Level remark
"RTN","IBCEMQC",178,0)
 ;
"RTN","IBCEMQC",179,0)
 ;;CO;A2,B6,42,45,172
"RTN","IBCEMQC",180,0)
 ;;PR;1,2,66,122,AAA
"RTN","IBCEMQC",181,0)
 ;;OA;AB3
"RTN","IBCEMQC",182,0)
 ;
"VER")
8.0^22.0
"BLD",6680,6)
^314
**END**
**END**
