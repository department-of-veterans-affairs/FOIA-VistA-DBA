Released XWB*1.1*45 SEQ #38
Extracted from mail message
**KIDS**:XWB*1.1*45^

**INSTALL NAME**
XWB*1.1*45
"BLD",538,0)
XWB*1.1*45^RPC BROKER^0^3060814^y
"BLD",538,1,0)
^^10^10^3060814^
"BLD",538,1,1,0)
Please refer to the Description in the FORUM Patch Module for details
"BLD",538,1,2,0)
on patch XWB*1.1*45.
"BLD",538,1,3,0)
This patch is part of the Broker Security Enhancement (in conjunction 
"BLD",538,1,4,0)
with patch XU*8*404).
"BLD",538,1,5,0)
 
"BLD",538,1,6,0)
**************************  NOTE  ***************************************
"BLD",538,1,7,0)
        This Patch must be installed before XU*8*404.
"BLD",538,1,8,0)
        
"BLD",538,1,9,0)
*************************************************************************
"BLD",538,1,10,0)

"BLD",538,4,0)
^9.64PA^8994.5^1
"BLD",538,4,8994.5,0)
8994.5
"BLD",538,4,8994.5,222)
y^y^f^^^^n
"BLD",538,4,"B",8994.5,8994.5)

"BLD",538,"ABPKG")
n
"BLD",538,"INIT")
XWB45PO
"BLD",538,"KRN",0)
^9.67PA^8989.52^19
"BLD",538,"KRN",.4,0)
.4
"BLD",538,"KRN",.401,0)
.401
"BLD",538,"KRN",.402,0)
.402
"BLD",538,"KRN",.403,0)
.403
"BLD",538,"KRN",.5,0)
.5
"BLD",538,"KRN",.84,0)
.84
"BLD",538,"KRN",3.6,0)
3.6
"BLD",538,"KRN",3.8,0)
3.8
"BLD",538,"KRN",9.2,0)
9.2
"BLD",538,"KRN",9.8,0)
9.8
"BLD",538,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",538,"KRN",9.8,"NM",1,0)
XWBTCPM2^^0^B3174797
"BLD",538,"KRN",9.8,"NM",2,0)
XWBM2MEZ^^0^B1400319
"BLD",538,"KRN",9.8,"NM",3,0)
XWBRM^^0^B13950171
"BLD",538,"KRN",9.8,"NM",4,0)
XWB45PO^^0^B1790358
"BLD",538,"KRN",9.8,"NM","B","XWB45PO",4)

"BLD",538,"KRN",9.8,"NM","B","XWBM2MEZ",2)

"BLD",538,"KRN",9.8,"NM","B","XWBRM",3)

"BLD",538,"KRN",9.8,"NM","B","XWBTCPM2",1)

"BLD",538,"KRN",19,0)
19
"BLD",538,"KRN",19.1,0)
19.1
"BLD",538,"KRN",101,0)
101
"BLD",538,"KRN",409.61,0)
409.61
"BLD",538,"KRN",771,0)
771
"BLD",538,"KRN",870,0)
870
"BLD",538,"KRN",8989.51,0)
8989.51
"BLD",538,"KRN",8989.52,0)
8989.52
"BLD",538,"KRN",8994,0)
8994
"BLD",538,"KRN","B",.4,.4)

"BLD",538,"KRN","B",.401,.401)

"BLD",538,"KRN","B",.402,.402)

"BLD",538,"KRN","B",.403,.403)

"BLD",538,"KRN","B",.5,.5)

"BLD",538,"KRN","B",.84,.84)

"BLD",538,"KRN","B",3.6,3.6)

"BLD",538,"KRN","B",3.8,3.8)

"BLD",538,"KRN","B",9.2,9.2)

"BLD",538,"KRN","B",9.8,9.8)

"BLD",538,"KRN","B",19,19)

"BLD",538,"KRN","B",19.1,19.1)

"BLD",538,"KRN","B",101,101)

"BLD",538,"KRN","B",409.61,409.61)

"BLD",538,"KRN","B",771,771)

"BLD",538,"KRN","B",870,870)

"BLD",538,"KRN","B",8989.51,8989.51)

"BLD",538,"KRN","B",8989.52,8989.52)

"BLD",538,"KRN","B",8994,8994)

"BLD",538,"QUES",0)
^9.62^^
"BLD",538,"REQB",0)
^9.611^1^1
"BLD",538,"REQB",1,0)
XWB*1.1*43^2
"BLD",538,"REQB","B","XWB*1.1*43",1)

"FIA",8994.5)
REMOTE APPLICATION
"FIA",8994.5,0)
^XWB(8994.5,
"FIA",8994.5,0,0)
8994.5
"FIA",8994.5,0,1)
y^y^f^^^^n
"FIA",8994.5,0,10)

"FIA",8994.5,0,11)

"FIA",8994.5,0,"RLRO")

"FIA",8994.5,0,"VR")
1.1^XWB
"FIA",8994.5,8994.5)
0
"FIA",8994.5,8994.51)
0
"INIT")
XWB45PO
"MBREQ")
0
"PKG",7,-1)
1^1
"PKG",7,0)
RPC BROKER^XWB^Remote Procedure Call Broker
"PKG",7,20,0)
^9.402P^^
"PKG",7,22,0)
^9.49I^1^1
"PKG",7,22,1,0)
1.1^3060629^2990407^126
"PKG",7,22,1,"PAH",1,0)
45^3060814
"PKG",7,22,1,"PAH",1,1,0)
^^10^10^3060814
"PKG",7,22,1,"PAH",1,1,1,0)
Please refer to the Description in the FORUM Patch Module for details
"PKG",7,22,1,"PAH",1,1,2,0)
on patch XWB*1.1*45.
"PKG",7,22,1,"PAH",1,1,3,0)
This patch is part of the Broker Security Enhancement (in conjunction 
"PKG",7,22,1,"PAH",1,1,4,0)
with patch XU*8*404).
"PKG",7,22,1,"PAH",1,1,5,0)
 
"PKG",7,22,1,"PAH",1,1,6,0)
**************************  NOTE  ***************************************
"PKG",7,22,1,"PAH",1,1,7,0)
        This Patch must be installed before XU*8*404.
"PKG",7,22,1,"PAH",1,1,8,0)
        
"PKG",7,22,1,"PAH",1,1,9,0)
*************************************************************************
"PKG",7,22,1,"PAH",1,1,10,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","XWB45PO")
0^4^B1790358^n/a
"RTN","XWB45PO",1,0)
XWB45PO ;JLI/FO-OAK-POST INSTALL FOR XWB*1.1*45 ;4/7/06  16:03
"RTN","XWB45PO",2,0)
 ;;1.1;RPC BROKER;**45**;Mar 28, 1997
"RTN","XWB45PO",3,0)
 ;
"RTN","XWB45PO",4,0)
EN ;
"RTN","XWB45PO",5,0)
 N XVALS,XWBIEN,XWBMSG
"RTN","XWB45PO",6,0)
 S XVALS(1)="XUSBSE TEST1^XWB BROKER EXAMPLE^{h6'={zC3{8=-JP1!O^R^9502^10.6.21.14"
"RTN","XWB45PO",7,0)
 S XVALS(2)="XUSBSE TEST2^XWB BROKER EXAMPLE^]?zvB$<ZwW6e$yG&9S<^M^9502^10.6.21.14"
"RTN","XWB45PO",8,0)
 S XVALS(3)="XUSBSE TEST3^XWB BROKER EXAMPLE^9~ioRB[m`Q9yS?/j?q?5^H^80^10.161.12.182"
"RTN","XWB45PO",9,0)
 N I F I=1:1:3 D
"RTN","XWB45PO",10,0)
 . W !,I
"RTN","XWB45PO",11,0)
 . N XWBLIST K XWBIEN,XWBMSG
"RTN","XWB45PO",12,0)
 . S XWBLIST(8994.5,"?+1,",.01)=$P(XVALS(I),U,1)
"RTN","XWB45PO",13,0)
 . S XWBLIST(8994.5,"?+1,",.02)=$P(XVALS(I),U,2)
"RTN","XWB45PO",14,0)
 . S XWBLIST(8994.5,"?+1,",.03)=$P(XVALS(I),U,3)
"RTN","XWB45PO",15,0)
 . S XWBLIST(8994.51,"?+2,?+1,",.01)=$P(XVALS(I),U,4)
"RTN","XWB45PO",16,0)
 . S XWBLIST(8994.51,"?+2,?+1,",.02)=$P(XVALS(I),U,5)
"RTN","XWB45PO",17,0)
 . S XWBLIST(8994.51,"?+2,?+1,",.03)=$P(XVALS(I),U,6)
"RTN","XWB45PO",18,0)
 . K XWBIEN,XWBMSG
"RTN","XWB45PO",19,0)
 . D UPDATE^DIE("E","XWBLIST","XWBIEN","XWBMSG")
"RTN","XWB45PO",20,0)
 . Q
"RTN","XWB45PO",21,0)
 Q
"RTN","XWBM2MEZ")
0^2^B1400319^n/a
"RTN","XWBM2MEZ",1,0)
XWBM2MEZ ;OIFO-Oakland/JLI - M2M Broker EZ Usage ;08/01/2006  7925229.750776
"RTN","XWBM2MEZ",2,0)
 ;;1.1;RPC BROKER;**45**;Mar 28, 1997
"RTN","XWBM2MEZ",3,0)
 ;
"RTN","XWBM2MEZ",4,0)
 QUIT
"RTN","XWBM2MEZ",5,0)
 ;
"RTN","XWBM2MEZ",6,0)
CONNECT(PORT,IP,AV) ;
"RTN","XWBM2MEZ",7,0)
 S XWBPARMS("MODE")="RPCBroker"
"RTN","XWBM2MEZ",8,0)
 S XWBPARMS("RETRIES")=3
"RTN","XWBM2MEZ",9,0)
 I '$$CONNECT^XWBM2MC(PORT,IP,AV) Q "Didn't get port open or AV failed."
"RTN","XWBM2MEZ",10,0)
 Q 1
"RTN","XWBM2MEZ",11,0)
 ;
"RTN","XWBM2MEZ",12,0)
CLOSE ;Close the connection.
"RTN","XWBM2MEZ",13,0)
 N X
"RTN","XWBM2MEZ",14,0)
 S X=$$CLOSE^XWBM2MC()
"RTN","XWBM2MEZ",15,0)
 Q
"RTN","XWBM2MEZ",16,0)
 ;
"RTN","XWBM2MEZ",17,0)
SETCNTXT(CONTX) ;
"RTN","XWBM2MEZ",18,0)
 I '$$SETCONTX^XWBM2MC(CONTX) D CLOSE Q "Didn't get Context"
"RTN","XWBM2MEZ",19,0)
 Q 1
"RTN","XWBM2MEZ",20,0)
 ;
"RTN","XWBM2MEZ",21,0)
DORPC(RESULT,RPCNAME) ;
"RTN","XWBM2MEZ",22,0)
 S RESULT=$G(RESULT)
"RTN","XWBM2MEZ",23,0)
 K XWBY
"RTN","XWBM2MEZ",24,0)
 Q $$CALLRPC^XWBM2MC(RPCNAME,.RESULT,1)
"RTN","XWBM2MEZ",25,0)
 ;
"RTN","XWBM2MEZ",26,0)
CLEARP ;
"RTN","XWBM2MEZ",27,0)
 K XWBPARMS
"RTN","XWBM2MEZ",28,0)
 S XWBPARMS("MODE")="RPCBroker"
"RTN","XWBM2MEZ",29,0)
 Q
"RTN","XWBM2MEZ",30,0)
 ;
"RTN","XWBM2MEZ",31,0)
SETPARAM(INDEX,TYPE,VALUE) ;Set a Params entry
"RTN","XWBM2MEZ",32,0)
 S XWBPARMS("PARAMS",INDEX,"TYPE")=TYPE
"RTN","XWBM2MEZ",33,0)
 S XWBPARMS("PARAMS",INDEX,"VALUE")=VALUE
"RTN","XWBM2MEZ",34,0)
 Q
"RTN","XWBM2MEZ",35,0)
 ;
"RTN","XWBRM")
0^3^B13950171^B13386009
"RTN","XWBRM",1,0)
XWBRM ;OIFO-Oakland/REM - M2M Broker Server Request Mgr  ;4/6/06  10:21
"RTN","XWBRM",2,0)
 ;;1.1;RPC BROKER;**28,45**;Mar 28, 1997
"RTN","XWBRM",3,0)
 ;
"RTN","XWBRM",4,0)
 QUIT
"RTN","XWBRM",5,0)
 ;
"RTN","XWBRM",6,0)
 ; ---------------------------------------------------------------------
"RTN","XWBRM",7,0)
 ;                             Server Request Manager (SRM)
"RTN","XWBRM",8,0)
 ; ---------------------------------------------------------------------
"RTN","XWBRM",9,0)
 ;
"RTN","XWBRM",10,0)
EN(XWBROOT) ; -- main entry point for SRM
"RTN","XWBRM",11,0)
 NEW XWBOK,XWBOPT,XWBDATA,XWBMODE
"RTN","XWBRM",12,0)
 N XWBM2M ;Flag for M2M requests **M2M
"RTN","XWBRM",13,0)
 SET XWBOK=0,XWBM2M=0
"RTN","XWBRM",14,0)
 ;
"RTN","XWBRM",15,0)
 ; -- parse the xml
"RTN","XWBRM",16,0)
 SET XWBOPT=""
"RTN","XWBRM",17,0)
 DO EN^XWBRMX(XWBROOT,.XWBOPT,.XWBDATA)
"RTN","XWBRM",18,0)
 S XWBMODE=$G(XWBDATA("MODE"))
"RTN","XWBRM",19,0)
 ;M ^REM($J)=XWBDATA ;**TEST ONLY
"RTN","XWBRM",20,0)
 ;
"RTN","XWBRM",21,0)
 I $G(XWBDATA("URI"))="XUS GET VISITOR" D EN^XWBRPC(.XWBDATA) S XWBOK=1 S:'$D(DUZ) XWBSTOP=1 Q 1
"RTN","XWBRM",22,0)
 ;Break off to RCPBroker **M2M
"RTN","XWBRM",23,0)
 IF $G(XWBDATA("MODE"))="RPCBroker" D RPC^XWBM2MS(.XWBDATA) SET XWBSTOP=0
"RTN","XWBRM",24,0)
 ; -- single call processing
"RTN","XWBRM",25,0)
 IF $G(XWBDATA("MODE"),"single call")="single call" SET XWBSTOP=1
"RTN","XWBRM",26,0)
 ;
"RTN","XWBRM",27,0)
 ; -- check if app defined
"RTN","XWBRM",28,0)
 IF $G(XWBDATA("APP"))="" DO RMERR(1) SET XWBOK=0 GOTO ENQ
"RTN","XWBRM",29,0)
 ;
"RTN","XWBRM",30,0)
 ; -- process close request
"RTN","XWBRM",31,0)
 IF $G(XWBDATA("APP"))="CLOSE" DO  SET XWBOK=0 GOTO ENQ
"RTN","XWBRM",32,0)
 . D:$G(DUZ) LOGOUT^XUSRB ;**M2M -Logout user and cleanup
"RTN","XWBRM",33,0)
 . DO RESPONSE^XWBVL()
"RTN","XWBRM",34,0)
 . SET XWBSTOP=1
"RTN","XWBRM",35,0)
 ;
"RTN","XWBRM",36,0)
 ; -- do security checks
"RTN","XWBRM",37,0)
 IF $G(XWBDATA("MODE"))'="RPCBroker",'$$SECCHK() SET XWBOK=0 GOTO ENQ
"RTN","XWBRM",38,0)
 ;
"RTN","XWBRM",39,0)
 ; -- call app to write to socket
"RTN","XWBRM",40,0)
 IF $G(XWBDATA("APP"))="RPC" DO EN^XWBRPC(.XWBDATA) SET XWBOK=1
"RTN","XWBRM",41,0)
 ;
"RTN","XWBRM",42,0)
ENQ ;
"RTN","XWBRM",43,0)
 QUIT XWBOK
"RTN","XWBRM",44,0)
 ;
"RTN","XWBRM",45,0)
 ; ---------------------------------------------------------------------
"RTN","XWBRM",46,0)
 ;
"RTN","XWBRM",47,0)
SECCHK() ; -- do security checks  (no real checks at this time)
"RTN","XWBRM",48,0)
 NEW XWBCODES
"RTN","XWBRM",49,0)
 ;
"RTN","XWBRM",50,0)
 ; -- is token valid
"RTN","XWBRM",51,0)
 IF '$$CHKTOKEN($G(XWBDATA("SECTOKEN"))) SET XWBCODES(1)="",XWBCODES=$G(XWBCODES)+1
"RTN","XWBRM",52,0)
 ;
"RTN","XWBRM",53,0)
 ; -- is DUZ valid
"RTN","XWBRM",54,0)
 IF '$$CHKDUZ($G(XWBDATA("DUZ"))) SET XWBCODES(2)="",XWBCODES=$G(XWBCODES)+1
"RTN","XWBRM",55,0)
 ;
"RTN","XWBRM",56,0)
 ; -- if security errors then send error response
"RTN","XWBRM",57,0)
 IF $G(XWBCODES) D SECERR(.XWBCODES)
"RTN","XWBRM",58,0)
 ;
"RTN","XWBRM",59,0)
 QUIT '+$G(XWBCODES)
"RTN","XWBRM",60,0)
 ;
"RTN","XWBRM",61,0)
CHKTOKEN(XWBTOKEN) ; -- do check against token for validity
"RTN","XWBRM",62,0)
 ; -- // TODO: Need to check into how we might use XUS1B and related code in Kernel Sign-On (ESSO)
"RTN","XWBRM",63,0)
 NEW XWBINVAL
"RTN","XWBRM",64,0)
 SET XWBINVAL="#UNKNOWN#"
"RTN","XWBRM",65,0)
 IF $G(XWBTOKEN,XWBINVAL)=XWBINVAL QUIT 0
"RTN","XWBRM",66,0)
 QUIT 1
"RTN","XWBRM",67,0)
 ;
"RTN","XWBRM",68,0)
CHKDUZ(XWBDUZ) ; -- do check against DUZ for validity
"RTN","XWBRM",69,0)
 ; -- // TODO: Need to check into how we might use XUS1B and related code in Kernel Sign-On (ESSO)
"RTN","XWBRM",70,0)
 NEW XWBINVAL
"RTN","XWBRM",71,0)
 SET XWBINVAL="#UNKNOWN#"
"RTN","XWBRM",72,0)
 IF $G(XWBDUZ,XWBINVAL)=XWBINVAL QUIT 0
"RTN","XWBRM",73,0)
 IF '$D(^VA(200,+XWBDUZ,0)) QUIT 0
"RTN","XWBRM",74,0)
 QUIT 1
"RTN","XWBRM",75,0)
 ;
"RTN","XWBRM",76,0)
 ; ---------------------------------------------------------------------
"RTN","XWBRM",77,0)
 ;                 Request Manager and Security Error Handlers
"RTN","XWBRM",78,0)
 ; ---------------------------------------------------------------------
"RTN","XWBRM",79,0)
RMERR(XWBCODE) ; -- send request error message
"RTN","XWBRM",80,0)
 NEW XWBDAT,XWBMSG
"RTN","XWBRM",81,0)
 SET XWBMSG=$P($TEXT(RMERRS+XWBCODE),";;",2)
"RTN","XWBRM",82,0)
 SET XWBDAT("MESSAGE TYPE")="Gov.VA.Med.Foundations.Errors"
"RTN","XWBRM",83,0)
 SET XWBDAT("ERRORS",1,"CODE")=1
"RTN","XWBRM",84,0)
 SET XWBDAT("ERRORS",1,"ERROR TYPE")="request manager"
"RTN","XWBRM",85,0)
 SET XWBDAT("ERRORS",1,"CDATA")=1
"RTN","XWBRM",86,0)
 SET XWBDAT("ERRORS",1,"MESSAGE",1)="An Request Manager error occurred: "_XWBMSG
"RTN","XWBRM",87,0)
 DO ERROR^XWBUTL(.XWBDAT)
"RTN","XWBRM",88,0)
 QUIT
"RTN","XWBRM",89,0)
 ;
"RTN","XWBRM",90,0)
RMERRS ; -- application errors
"RTN","XWBRM",91,0)
 ;;No valid application specified.
"RTN","XWBRM",92,0)
 ;
"RTN","XWBRM",93,0)
SECERR(XWBCODES) ; -- send security error message
"RTN","XWBRM",94,0)
 NEW XWBDAT,XWBCNT,XWBCODE
"RTN","XWBRM",95,0)
 SET XWBCNT=0
"RTN","XWBRM",96,0)
 SET XWBDAT("MESSAGE TYPE")="Gov.VA.Med.Foundations.Security.Errors"
"RTN","XWBRM",97,0)
 SET XWBCODE=0 FOR  SET XWBCODE=$O(XWBCODES(XWBCODE)) Q:'XWBCODE  DO
"RTN","XWBRM",98,0)
 . SET XWBCNT=XWBCNT+1
"RTN","XWBRM",99,0)
 . SET XWBDAT("ERRORS",XWBCNT,"CODE")=XWBCODE
"RTN","XWBRM",100,0)
 . SET XWBDAT("ERRORS",XWBCNT,"ERROR TYPE")="security"
"RTN","XWBRM",101,0)
 . SET XWBDAT("ERRORS",XWBCNT,"MESSAGE",1)=$P($TEXT(SECERRS+XWBCODE),";;",2)
"RTN","XWBRM",102,0)
 . SET XWBDAT("ERRORS",XWBCNT,"CDATA")=0
"RTN","XWBRM",103,0)
 DO ERROR^XWBUTL(.XWBDAT)
"RTN","XWBRM",104,0)
 QUIT
"RTN","XWBRM",105,0)
 ;
"RTN","XWBRM",106,0)
SECERRS ; -- security errors
"RTN","XWBRM",107,0)
 ;;Security token is either invalid or was not passed.
"RTN","XWBRM",108,0)
 ;;DUZ is either invalid or was not passed.
"RTN","XWBRM",109,0)
 ;;
"RTN","XWBTCPM2")
0^1^B3174797^n/a
"RTN","XWBTCPM2",1,0)
XWBTCPM2 ;ISF/RWF - BROKER Other Service ;08/01/2006  7924986.008072
"RTN","XWBTCPM2",2,0)
 ;;1.1;RPC BROKER;**45**;Mar 28, 1997
"RTN","XWBTCPM2",3,0)
 Q
"RTN","XWBTCPM2",4,0)
OTH ;Check if some other special service.
"RTN","XWBTCPM2",5,0)
 S $ETRAP="D ERR^XWBTCPM2"
"RTN","XWBTCPM2",6,0)
 I XWB="~EAC~" G EAC
"RTN","XWBTCPM2",7,0)
 I XWB="~BSE~" G BSE
"RTN","XWBTCPM2",8,0)
 I XWB="~SVR~" G SVR
"RTN","XWBTCPM2",9,0)
 D LOG("Prefix not known: "_XWB)
"RTN","XWBTCPM2",10,0)
 Q
"RTN","XWBTCPM2",11,0)
 ;
"RTN","XWBTCPM2",12,0)
SVR ;Handle
"RTN","XWBTCPM2",13,0)
 Q
"RTN","XWBTCPM2",14,0)
EAC ;Enterprise Access
"RTN","XWBTCPM2",15,0)
 Q
"RTN","XWBTCPM2",16,0)
 ;
"RTN","XWBTCPM2",17,0)
BSE ;Broker Security Enhansment
"RTN","XWBTCPM2",18,0)
 D LOG("BSE msg")
"RTN","XWBTCPM2",19,0)
 N L,HDL,RET,XWBSBUF
"RTN","XWBTCPM2",20,0)
 S XWBSBUF="",RET=""
"RTN","XWBTCPM2",21,0)
 S L=$$BREAD^XWBRW(3) I L S HDL=$$BREAD^XWBRW(L)
"RTN","XWBTCPM2",22,0)
 ;Check IT
"RTN","XWBTCPM2",23,0)
 D GETVISIT^XUSBSE1(.RET,HDL)
"RTN","XWBTCPM2",24,0)
 D WRITE(RET),WBF
"RTN","XWBTCPM2",25,0)
 Q
"RTN","XWBTCPM2",26,0)
 ;
"RTN","XWBTCPM2",27,0)
ERR ;Error Trap
"RTN","XWBTCPM2",28,0)
 D ^%ZTER
"RTN","XWBTCPM2",29,0)
 G H2^XUSCLEAN
"RTN","XWBTCPM2",30,0)
 ;
"RTN","XWBTCPM2",31,0)
LOG(%) ;Link to logger
"RTN","XWBTCPM2",32,0)
 Q:'$G(XWBDEBUG)
"RTN","XWBTCPM2",33,0)
 D LOG^XWBTCPM(%)
"RTN","XWBTCPM2",34,0)
 Q
"RTN","XWBTCPM2",35,0)
 ;
"RTN","XWBTCPM2",36,0)
WRITE(M,F) ;Write
"RTN","XWBTCPM2",37,0)
 N L S L="" I '$G(F) S L=$E(1000+$L(M),2,4)
"RTN","XWBTCPM2",38,0)
 D WRITE^XWBRW(L_M)
"RTN","XWBTCPM2",39,0)
 Q
"RTN","XWBTCPM2",40,0)
WBF ;Buffer Flush
"RTN","XWBTCPM2",41,0)
 D WBF^XWBRW
"RTN","XWBTCPM2",42,0)
 Q
"RTN","XWBTCPM2",43,0)
 ;
"RTN","XWBTCPM2",44,0)
OPEN(P1,P2) ;Open the device and set the variables
"RTN","XWBTCPM2",45,0)
 D CALL^%ZISTCP(P1,P2) Q:POP
"RTN","XWBTCPM2",46,0)
 S XWBTDEV=IO
"RTN","XWBTCPM2",47,0)
 Q
"RTN","XWBTCPM2",48,0)
 ;
"RTN","XWBTCPM2",49,0)
CALLBSE(SERVER,PORT,TOKEN) ;Special Broker service
"RTN","XWBTCPM2",50,0)
 N XWBDEBUG,XWBOS,XWBRBUF,XWBSBUF,XWBT,XWBTIME,IO
"RTN","XWBTCPM2",51,0)
 N DEMOSTR,XWBTDEV,RET
"RTN","XWBTCPM2",52,0)
 S IO(0)=$P
"RTN","XWBTCPM2",53,0)
 D INIT^XWBTCPM,LOG("CALLBSE")
"RTN","XWBTCPM2",54,0)
 D OPEN(SERVER,PORT) I POP Q "Didn't open connection." Q
"RTN","XWBTCPM2",55,0)
 S XWBSBUF="",XWBRBUF=""
"RTN","XWBTCPM2",56,0)
 U XWBTDEV
"RTN","XWBTCPM2",57,0)
 D WRITE("~BSE~",1),WRITE(TOKEN),WBF^XWBRW
"RTN","XWBTCPM2",58,0)
 S X=$$BREAD^XWBRW(3),RET="No Response" I X S RET=$$BREAD^XWBRW(X)
"RTN","XWBTCPM2",59,0)
 D CLOSE^%ZISTCP,LOG("FINISH")
"RTN","XWBTCPM2",60,0)
 Q RET
"SEC","^DIC",8994.5,8994.5,0,"AUDIT")
@
"SEC","^DIC",8994.5,8994.5,0,"DD")
@
"SEC","^DIC",8994.5,8994.5,0,"DEL")
@
"SEC","^DIC",8994.5,8994.5,0,"LAYGO")
@
"SEC","^DIC",8994.5,8994.5,0,"RD")
@
"SEC","^DIC",8994.5,8994.5,0,"WR")
@
"VER")
8.0^22.0
"^DD",8994.5,8994.5,0)
FIELD^^1^4
"^DD",8994.5,8994.5,0,"DDA")
N
"^DD",8994.5,8994.5,0,"DT")
3060407
"^DD",8994.5,8994.5,0,"IX","ACODE",8994.5,.03)

"^DD",8994.5,8994.5,0,"IX","B",8994.5,.01)

"^DD",8994.5,8994.5,0,"NM","REMOTE APPLICATION")

"^DD",8994.5,8994.5,0,"VRPK")
XU
"^DD",8994.5,8994.5,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",8994.5,8994.5,.01,1,0)
^.1
"^DD",8994.5,8994.5,.01,1,1,0)
8994.5^B
"^DD",8994.5,8994.5,.01,1,1,1)
S ^XWB(8994.5,"B",$E(X,1,30),DA)=""
"^DD",8994.5,8994.5,.01,1,1,2)
K ^XWB(8994.5,"B",$E(X,1,30),DA)
"^DD",8994.5,8994.5,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",8994.5,8994.5,.01,21,0)
^.001^2^2^3060328^^
"^DD",8994.5,8994.5,.01,21,1,0)
This is the NAME of the REMOTE GUI APPLICATION for which the data in this 
"^DD",8994.5,8994.5,.01,21,2,0)
entry pertains.
"^DD",8994.5,8994.5,.02,0)
CONTEXTOPTION^RP19'^DIC(19,^0;2^Q
"^DD",8994.5,8994.5,.02,3)
This is the option which should be given to the signed in visitor as the Context Option for this application.
"^DD",8994.5,8994.5,.02,21,0)
^^7^7^3060403^
"^DD",8994.5,8994.5,.02,21,1,0)
The name of the context (Client/Server or B-type) option that the 
"^DD",8994.5,8994.5,.02,21,2,0)
application users will need that will be added as a secondary menu item.
"^DD",8994.5,8994.5,.02,21,3,0)
 
"^DD",8994.5,8994.5,.02,21,4,0)
The user is signed on as a visitor and given the Context Option specified
"^DD",8994.5,8994.5,.02,21,5,0)
in this field as a secondary menu option.  The application still needs to
"^DD",8994.5,8994.5,.02,21,6,0)
set the Context Option using the CreateContext method, but the visitor has
"^DD",8994.5,8994.5,.02,21,7,0)
it as a valid option so that it can be used.
"^DD",8994.5,8994.5,.02,"DT")
3060403
"^DD",8994.5,8994.5,.03,0)
APPLICATIONCODE^RF^^0;3^K:$L(X)>60!($L(X)<3) X
"^DD",8994.5,8994.5,.03,1,0)
^.1
"^DD",8994.5,8994.5,.03,1,1,0)
8994.5^ACODE
"^DD",8994.5,8994.5,.03,1,1,1)
S ^XWB(8994.5,"ACODE",$E(X,1,30),DA)=""
"^DD",8994.5,8994.5,.03,1,1,2)
K ^XWB(8994.5,"ACODE",$E(X,1,30),DA)
"^DD",8994.5,8994.5,.03,1,1,3)
THIS CROSS-REFERENCE IS USED AS ENTRY BY THE APPLICATION CODE FOR THE APPLICATION.
"^DD",8994.5,8994.5,.03,1,1,"DT")
3060210
"^DD",8994.5,8994.5,.03,3)
This value is the HASHED value of the application's code phrase.
"^DD",8994.5,8994.5,.03,21,0)
^^51^51^3060403^
"^DD",8994.5,8994.5,.03,21,1,0)
This is the hashed value for a security phrase for the application and is 
"^DD",8994.5,8994.5,.03,21,2,0)
described below.
"^DD",8994.5,8994.5,.03,21,3,0)
 
"^DD",8994.5,8994.5,.03,21,4,0)
Security Phrase
"^DD",8994.5,8994.5,.03,21,5,0)
 
"^DD",8994.5,8994.5,.03,21,6,0)
The security phrase is an application's entry into the REMOTE APPLICATION 
"^DD",8994.5,8994.5,.03,21,7,0)
file (#8994.5) for accessing the information necessary to permit the 
"^DD",8994.5,8994.5,.03,21,8,0)
application to enroll a remote user.   Create a security phrase, case 
"^DD",8994.5,8994.5,.03,21,9,0)
sensitive, and at programmer mode use the command (assuming the security 
"^DD",8994.5,8994.5,.03,21,10,0)
phrase is "My Special Phrase")
"^DD",8994.5,8994.5,.03,21,11,0)
 
"^DD",8994.5,8994.5,.03,21,12,0)
   W $$EN^XUSHSH("My Special Phrase")
"^DD",8994.5,8994.5,.03,21,13,0)
 
"^DD",8994.5,8994.5,.03,21,14,0)
The resulting value:
"^DD",8994.5,8994.5,.03,21,15,0)
   "I&f).c`u:7@01#tL((x" 
"^DD",8994.5,8994.5,.03,21,16,0)
 
"^DD",8994.5,8994.5,.03,21,17,0)
This is the one-way hash value for the security phrase.  It is this 
"^DD",8994.5,8994.5,.03,21,18,0)
hashed value that will be entered into the ApplicationCode field (#.03) 
"^DD",8994.5,8994.5,.03,21,19,0)
in the REMOTE APPLICATION file (#8994.5) for the application.
"^DD",8994.5,8994.5,.03,21,20,0)
 
"^DD",8994.5,8994.5,.03,21,21,0)
To make a remote connection, the application will have the user sign onto 
"^DD",8994.5,8994.5,.03,21,22,0)
the application's authenticating server (the one entered as 
"^DD",8994.5,8994.5,.03,21,23,0)
CallbackServer) and then obtain a Token for the user (similar to 
"^DD",8994.5,8994.5,.03,21,24,0)
"XWBHDL977-124367_0") using the "XUS SET VISITOR" RPC.  The application 
"^DD",8994.5,8994.5,.03,21,25,0)
will then disconnect from the authenticating server and set the new 
"^DD",8994.5,8994.5,.03,21,26,0)
SecurityPhrase property for the TRPCBroker component to the unhashed 
"^DD",8994.5,8994.5,.03,21,27,0)
security phrase concatenated with a caret ("^") and the token for the user
"^DD",8994.5,8994.5,.03,21,28,0)
(e.g.,  "My Special Phrase^XWBHDL977-124367_0")
"^DD",8994.5,8994.5,.03,21,29,0)
 
"^DD",8994.5,8994.5,.03,21,30,0)
This property will be encoded and passed to the remote server for 
"^DD",8994.5,8994.5,.03,21,31,0)
authentication; it will hash the security phrase and use the resulting 
"^DD",8994.5,8994.5,.03,21,32,0)
value to identify the application's entry in the REMOTE APPLICATION file 
"^DD",8994.5,8994.5,.03,21,33,0)
(#8994.5).  The mechanism(s) for contacting the authenticating server 
"^DD",8994.5,8994.5,.03,21,34,0)
will be identified and the authentication server will be requested to 
"^DD",8994.5,8994.5,.03,21,35,0)
provide the demographic information necessary to identify the user and 
"^DD",8994.5,8994.5,.03,21,36,0)
create or match an entry in the NEW PERSON file (#200) based on the token 
"^DD",8994.5,8994.5,.03,21,37,0)
provided.  With this information the user will be set up as a visitor 
"^DD",8994.5,8994.5,.03,21,38,0)
entry and provided the context option specified.  The application will 
"^DD",8994.5,8994.5,.03,21,39,0)
then be notified that the user is connected.  If there is no entry for 
"^DD",8994.5,8994.5,.03,21,40,0)
the application, no match for the token, or the authenticating server can 
"^DD",8994.5,8994.5,.03,21,41,0)
not be connected, the user will be prompted with a regular sign on screen 
"^DD",8994.5,8994.5,.03,21,42,0)
(i.e., required to enter their Access and Verify codes).
"^DD",8994.5,8994.5,.03,21,43,0)
 
"^DD",8994.5,8994.5,.03,21,44,0)
Since the security phrase is the application's identifier, we recommend 
"^DD",8994.5,8994.5,.03,21,45,0)
that the security phrase in RPCBroker Delphi-based programs be identified 
"^DD",8994.5,8994.5,.03,21,46,0)
as a const value in an include file.  And that a substitute include file 
"^DD",8994.5,8994.5,.03,21,47,0)
containing a phrase similar to that used above be included with release 
"^DD",8994.5,8994.5,.03,21,48,0)
of the source code.  It must be realized that the security phrase 
"^DD",8994.5,8994.5,.03,21,49,0)
identifies any application that uses it as your application, and it 
"^DD",8994.5,8994.5,.03,21,50,0)
would, of course, be desirable that rogue applications not appear to be 
"^DD",8994.5,8994.5,.03,21,51,0)
your application.
"^DD",8994.5,8994.5,.03,"DT")
3060210
"^DD",8994.5,8994.5,1,0)
CALLBACKTYPE^8994.51S^^1;0
"^DD",8994.5,8994.5,1,21,0)
^^10^10^3060403^
"^DD",8994.5,8994.5,1,21,1,0)
This is a multiple field.  It may contain multiple values describing 
"^DD",8994.5,8994.5,1,21,2,0)
mechanisms by which the remote site can contact the application's 
"^DD",8994.5,8994.5,1,21,3,0)
authenticating site to obtain the demographic information. 
"^DD",8994.5,8994.5,1,21,4,0)
 
"^DD",8994.5,8994.5,1,21,5,0)
It consists of the following subfields:
"^DD",8994.5,8994.5,1,21,6,0)
 
"^DD",8994.5,8994.5,1,21,7,0)
   .01 CALLBACKTYPE
"^DD",8994.5,8994.5,1,21,8,0)
   .02 CALLBACKPORT
"^DD",8994.5,8994.5,1,21,9,0)
   .03 CALLBACKSERVER
"^DD",8994.5,8994.5,1,21,10,0)
   .04 URLSTRING
"^DD",8994.5,8994.5,1,"DT")
3060403
"^DD",8994.5,8994.51,0)
CALLBACKTYPE SUB-FIELD^^.04^4
"^DD",8994.5,8994.51,0,"DT")
3060407
"^DD",8994.5,8994.51,0,"IX","B",8994.51,.01)

"^DD",8994.5,8994.51,0,"NM","CALLBACKTYPE")

"^DD",8994.5,8994.51,0,"UP")
8994.5
"^DD",8994.5,8994.51,.01,0)
CALLBACKTYPE^MRS^R:RPC-BROKER;M:M2M-BROKER;H:HTTP;^0;1^Q
"^DD",8994.5,8994.51,.01,1,0)
^.1
"^DD",8994.5,8994.51,.01,1,1,0)
8994.51^B
"^DD",8994.5,8994.51,.01,1,1,1)
S ^XWB(8994.5,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",8994.5,8994.51,.01,1,1,2)
K ^XWB(8994.5,DA(1),1,"B",$E(X,1,30),DA)
"^DD",8994.5,8994.51,.01,3)
Select one of the indicators for a Call back type for this Remote GUI Application
"^DD",8994.5,8994.51,.01,21,0)
^.001^3^3^3060403^^^
"^DD",8994.5,8994.51,.01,21,1,0)
This field indicates the mechanism(s) by which the server should contact 
"^DD",8994.5,8994.51,.01,21,2,0)
the authenticating server to obtain information necessary to sign the 
"^DD",8994.5,8994.51,.01,21,3,0)
current user on to the current server.
"^DD",8994.5,8994.51,.01,"DT")
3060403
"^DD",8994.5,8994.51,.02,0)
CALLBACKPORT^RF^^0;2^K:$L(X)>5!($L(X)<2) X
"^DD",8994.5,8994.51,.02,3)
Answer must be 2-5 characters in length.
"^DD",8994.5,8994.51,.02,21,0)
^.001^2^2^3060403^^
"^DD",8994.5,8994.51,.02,21,1,0)
This is the port to be used for the callback to the authenticating server 
"^DD",8994.5,8994.51,.02,21,2,0)
for the CALLBACKTYPE specified.
"^DD",8994.5,8994.51,.02,"DT")
3060407
"^DD",8994.5,8994.51,.03,0)
CALLBACKSERVER^RF^^0;3^K:$L(X)>60!($L(X)<3) X
"^DD",8994.5,8994.51,.03,3)
This should be the server name to be used to contact the authenticating server for accessing the data to authenticate the user for this Remote GUI Application.
"^DD",8994.5,8994.51,.03,21,0)
^.001^2^2^3060403^^
"^DD",8994.5,8994.51,.03,21,1,0)
This is the server designation to be used for the callback to the 
"^DD",8994.5,8994.51,.03,21,2,0)
authenticating server for the CALLBACKTYPE specified.
"^DD",8994.5,8994.51,.03,"DT")
3060123
"^DD",8994.5,8994.51,.04,0)
URLSTRING^F^^0;4^K:$L(X)>60!($L(X)<1) X
"^DD",8994.5,8994.51,.04,3)
Answer must be 1-60 characters in length.
"^DD",8994.5,8994.51,.04,21,0)
^^14^14^3060403^
"^DD",8994.5,8994.51,.04,21,1,0)
This field holds the text that should follow the server address (field 
"^DD",8994.5,8994.51,.04,21,2,0)
#.03) for HTTP connections to obtain the information for the user token 
"^DD",8994.5,8994.51,.04,21,3,0)
passed in for a REMOTE APPLICATION connection.
"^DD",8994.5,8994.51,.04,21,4,0)
 
"^DD",8994.5,8994.51,.04,21,5,0)
If the complete URL to be used for the callback is
"^DD",8994.5,8994.51,.04,21,6,0)
   http://myserver.med.va.gov/some/kind/of/location/somePage.aspx
"^DD",8994.5,8994.51,.04,21,7,0)
 
"^DD",8994.5,8994.51,.04,21,8,0)
The CALLBACKSERVER (#.03) field could be
"^DD",8994.5,8994.51,.04,21,9,0)
   myserver.med.va.gov
"^DD",8994.5,8994.51,.04,21,10,0)
 
"^DD",8994.5,8994.51,.04,21,11,0)
and the URLSTRING would be
"^DD",8994.5,8994.51,.04,21,12,0)
   some/kind/of/location/somePage.aspx
"^DD",8994.5,8994.51,.04,21,13,0)
 
"^DD",8994.5,8994.51,.04,21,14,0)
This field is only used if the CALLBACKTYPE (#.01) value is H for HTTP
"^DD",8994.5,8994.51,.04,"DT")
3060407
"^DIC",8994.5,8994.5,0)
REMOTE APPLICATION^8994.5
"^DIC",8994.5,8994.5,0,"GL")
^XWB(8994.5,
"^DIC",8994.5,8994.5,"%D",0)
^^20^20^3060328^
"^DIC",8994.5,8994.5,"%D",1,0)
The REMOTE APPLICATION file was introduced as part of the Broker Security 
"^DIC",8994.5,8994.5,"%D",2,0)
Enhancement to secure access via the remote user or visitor approach by 
"^DIC",8994.5,8994.5,"%D",3,0)
GUI applications (formerly known as the CAPRI approach for the first 
"^DIC",8994.5,8994.5,"%D",4,0)
application to use this access style).  The remote visitor access permits 
"^DIC",8994.5,8994.5,"%D",5,0)
applications where users need to access a large number of sites to do so 
"^DIC",8994.5,8994.5,"%D",6,0)
without requiring a separate access code and verify code at each site.
"^DIC",8994.5,8994.5,"%D",7,0)
 
"^DIC",8994.5,8994.5,"%D",8,0)
Following the Broker Security Enhancement, applications will be able to 
"^DIC",8994.5,8994.5,"%D",9,0)
use the remote visitor access only if they have an entry in this file with
"^DIC",8994.5,8994.5,"%D",10,0)
a one-way hash of a secure phrase.  Identification of an entry in the file
"^DIC",8994.5,8994.5,"%D",11,0)
is based on the application passing in the original phrase which is then
"^DIC",8994.5,8994.5,"%D",12,0)
hashed and used for a cross-reference lookup. The application must have at
"^DIC",8994.5,8994.5,"%D",13,0)
least one entry in the CALLBACKTYPE sub-file indicating a connection type,
"^DIC",8994.5,8994.5,"%D",14,0)
a valid address for the authenticating server, and a connection port
"^DIC",8994.5,8994.5,"%D",15,0)
number.  This information is necessary for the remote server to directly
"^DIC",8994.5,8994.5,"%D",16,0)
connect the authenticating server to obtain the demographic information
"^DIC",8994.5,8994.5,"%D",17,0)
necessary to create or match the visitor entry in the NEW PERSON file
"^DIC",8994.5,8994.5,"%D",18,0)
(#200).  The application will also specify the desired context option for
"^DIC",8994.5,8994.5,"%D",19,0)
the user and this will be given to the remote visitor instead of the
"^DIC",8994.5,8994.5,"%D",20,0)
application having to figure out how to set this value.
"^DIC",8994.5,"B","REMOTE APPLICATION",8994.5)

"BLD",538,6)
^38
**END**
**END**
