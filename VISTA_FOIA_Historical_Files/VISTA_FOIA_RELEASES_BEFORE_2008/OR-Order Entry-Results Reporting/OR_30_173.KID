KIDS Distribution saved on Jul 22, 2003@11:31:09
OR*30*173 V11 7/22/2003 1125MT
**KIDS**:CPRS GUI 22.0^OR*3.0*149^OR*3.0*173^

**INSTALL NAME**
CPRS GUI 22.0
"BLD",15969,0)
CPRS GUI 22.0^^1^3030722^n
"BLD",15969,1,0)
^^1^1^3030505^
"BLD",15969,1,1,0)
Multi-patch distribution of patches OR*3.0*149 and OR*3.0*173.
"BLD",15969,10,0)
^9.63^2^2
"BLD",15969,10,1,0)
OR*3.0*149^1
"BLD",15969,10,2,0)
OR*3.0*173^1
"BLD",15969,10,"B","OR*3.0*149",1)

"BLD",15969,10,"B","OR*3.0*173",2)

"BLD",15969,"KRN",0)
^9.67PA^8989.52^19
"BLD",15969,"KRN",.4,0)
.4
"BLD",15969,"KRN",.401,0)
.401
"BLD",15969,"KRN",.402,0)
.402
"BLD",15969,"KRN",.403,0)
.403
"BLD",15969,"KRN",.5,0)
.5
"BLD",15969,"KRN",.84,0)
.84
"BLD",15969,"KRN",3.6,0)
3.6
"BLD",15969,"KRN",3.8,0)
3.8
"BLD",15969,"KRN",9.2,0)
9.2
"BLD",15969,"KRN",9.8,0)
9.8
"BLD",15969,"KRN",19,0)
19
"BLD",15969,"KRN",19.1,0)
19.1
"BLD",15969,"KRN",101,0)
101
"BLD",15969,"KRN",409.61,0)
409.61
"BLD",15969,"KRN",771,0)
771
"BLD",15969,"KRN",870,0)
870
"BLD",15969,"KRN",8989.51,0)
8989.51
"BLD",15969,"KRN",8989.52,0)
8989.52
"BLD",15969,"KRN",8994,0)
8994
"BLD",15969,"KRN","B",.4,.4)

"BLD",15969,"KRN","B",.401,.401)

"BLD",15969,"KRN","B",.402,.402)

"BLD",15969,"KRN","B",.403,.403)

"BLD",15969,"KRN","B",.5,.5)

"BLD",15969,"KRN","B",.84,.84)

"BLD",15969,"KRN","B",3.6,3.6)

"BLD",15969,"KRN","B",3.8,3.8)

"BLD",15969,"KRN","B",9.2,9.2)

"BLD",15969,"KRN","B",9.8,9.8)

"BLD",15969,"KRN","B",19,19)

"BLD",15969,"KRN","B",19.1,19.1)

"BLD",15969,"KRN","B",101,101)

"BLD",15969,"KRN","B",409.61,409.61)

"BLD",15969,"KRN","B",771,771)

"BLD",15969,"KRN","B",870,870)

"BLD",15969,"KRN","B",8989.51,8989.51)

"BLD",15969,"KRN","B",8989.52,8989.52)

"BLD",15969,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
OR*3.0*149
"BLD",15413,0)
OR*3.0*149^ORDER ENTRY/RESULTS REPORTING^0^3030722^y
"BLD",15413,4,0)
^9.64PA^101.24^2
"BLD",15413,4,101.24,0)
101.24
"BLD",15413,4,101.24,222)
n^n^f^^y^^y^r^n
"BLD",15413,4,101.24,224)
I $$SENDRPT^ORY149($P(^(0),U))
"BLD",15413,4,8989.51,0)
8989.51
"BLD",15413,4,8989.51,222)
n^n^f^^y^^y^r^n
"BLD",15413,4,8989.51,224)
I $$SENDPAR^ORY149($P(^(0),U))
"BLD",15413,4,"B",101.24,101.24)

"BLD",15413,4,"B",8989.51,8989.51)

"BLD",15413,"INI")
PRE^ORY149
"BLD",15413,"INID")
^n^n
"BLD",15413,"INIT")
POST^ORY149
"BLD",15413,"KRN",0)
^9.67PA^8989.52^19
"BLD",15413,"KRN",.4,0)
.4
"BLD",15413,"KRN",.401,0)
.401
"BLD",15413,"KRN",.402,0)
.402
"BLD",15413,"KRN",.403,0)
.403
"BLD",15413,"KRN",.5,0)
.5
"BLD",15413,"KRN",.84,0)
.84
"BLD",15413,"KRN",3.6,0)
3.6
"BLD",15413,"KRN",3.8,0)
3.8
"BLD",15413,"KRN",9.2,0)
9.2
"BLD",15413,"KRN",9.8,0)
9.8
"BLD",15413,"KRN",9.8,"NM",0)
^9.68A^27^22
"BLD",15413,"KRN",9.8,"NM",1,0)
ORWU1^^0^B16528156
"BLD",15413,"KRN",9.8,"NM",2,0)
ORQQCN2^^0^B31631341
"BLD",15413,"KRN",9.8,"NM",3,0)
ORWCH^^0^B12902368
"BLD",15413,"KRN",9.8,"NM",4,0)
ORWU^^0^B61251771
"BLD",15413,"KRN",9.8,"NM",5,0)
ORWDPS5^^0^B2096708
"BLD",15413,"KRN",9.8,"NM",6,0)
ORWPT^^0^B54836562
"BLD",15413,"KRN",9.8,"NM",7,0)
ORWDXR^^0^B30337944
"BLD",15413,"KRN",9.8,"NM",10,0)
ORCACT1^^0^B49093079
"BLD",15413,"KRN",9.8,"NM",11,0)
ORCACT2^^0^B60946711
"BLD",15413,"KRN",9.8,"NM",12,0)
ORCACT4^^0^B46791333
"BLD",15413,"KRN",9.8,"NM",14,0)
ORCSEND1^^0^B70868504
"BLD",15413,"KRN",9.8,"NM",15,0)
ORWDXA^^0^B73563732
"BLD",15413,"KRN",9.8,"NM",18,0)
ORWTPP^^0^B19265086
"BLD",15413,"KRN",9.8,"NM",19,0)
ORWTPN^^0^B40214765
"BLD",15413,"KRN",9.8,"NM",20,0)
ORY149^^0^B5884700
"BLD",15413,"KRN",9.8,"NM",21,0)
ORWRA^^0^B9699553
"BLD",15413,"KRN",9.8,"NM",22,0)
OREVNTX1^^0^B72653231
"BLD",15413,"KRN",9.8,"NM",23,0)
ORMPS1^^0^B61988457
"BLD",15413,"KRN",9.8,"NM",24,0)
ORCDPS1^^0^B68567933
"BLD",15413,"KRN",9.8,"NM",25,0)
ORECS01^^0^B2862433
"BLD",15413,"KRN",9.8,"NM",26,0)
ORCDPS3^^0^B35354636
"BLD",15413,"KRN",9.8,"NM",27,0)
ORMPS^^0^B69720054
"BLD",15413,"KRN",9.8,"NM","B","ORCACT1",10)

"BLD",15413,"KRN",9.8,"NM","B","ORCACT2",11)

"BLD",15413,"KRN",9.8,"NM","B","ORCACT4",12)

"BLD",15413,"KRN",9.8,"NM","B","ORCDPS1",24)

"BLD",15413,"KRN",9.8,"NM","B","ORCDPS3",26)

"BLD",15413,"KRN",9.8,"NM","B","ORCSEND1",14)

"BLD",15413,"KRN",9.8,"NM","B","ORECS01",25)

"BLD",15413,"KRN",9.8,"NM","B","OREVNTX1",22)

"BLD",15413,"KRN",9.8,"NM","B","ORMPS",27)

"BLD",15413,"KRN",9.8,"NM","B","ORMPS1",23)

"BLD",15413,"KRN",9.8,"NM","B","ORQQCN2",2)

"BLD",15413,"KRN",9.8,"NM","B","ORWCH",3)

"BLD",15413,"KRN",9.8,"NM","B","ORWDPS5",5)

"BLD",15413,"KRN",9.8,"NM","B","ORWDXA",15)

"BLD",15413,"KRN",9.8,"NM","B","ORWDXR",7)

"BLD",15413,"KRN",9.8,"NM","B","ORWPT",6)

"BLD",15413,"KRN",9.8,"NM","B","ORWRA",21)

"BLD",15413,"KRN",9.8,"NM","B","ORWTPN",19)

"BLD",15413,"KRN",9.8,"NM","B","ORWTPP",18)

"BLD",15413,"KRN",9.8,"NM","B","ORWU",4)

"BLD",15413,"KRN",9.8,"NM","B","ORWU1",1)

"BLD",15413,"KRN",9.8,"NM","B","ORY149",20)

"BLD",15413,"KRN",19,0)
19
"BLD",15413,"KRN",19,"NM",0)
^9.68A^^0
"BLD",15413,"KRN",19.1,0)
19.1
"BLD",15413,"KRN",101,0)
101
"BLD",15413,"KRN",409.61,0)
409.61
"BLD",15413,"KRN",771,0)
771
"BLD",15413,"KRN",870,0)
870
"BLD",15413,"KRN",8989.51,0)
8989.51
"BLD",15413,"KRN",8989.51,"NM",0)
^9.68A^2^2
"BLD",15413,"KRN",8989.51,"NM",1,0)
ORWOR SHOW CONSULTS^^0
"BLD",15413,"KRN",8989.51,"NM",2,0)
ORWOR SPELL CHECK ENABLED?^^0
"BLD",15413,"KRN",8989.51,"NM","B","ORWOR SHOW CONSULTS",1)

"BLD",15413,"KRN",8989.51,"NM","B","ORWOR SPELL CHECK ENABLED?",2)

"BLD",15413,"KRN",8989.52,0)
8989.52
"BLD",15413,"KRN",8994,0)
8994
"BLD",15413,"KRN",8994,"NM",0)
^9.68A^18^18
"BLD",15413,"KRN",8994,"NM",1,0)
ORWU1 NAMECVT^^0
"BLD",15413,"KRN",8994,"NM",2,0)
ORQQCN UNRESOLVED^^0
"BLD",15413,"KRN",8994,"NM",3,0)
ORWCH LDFONT^^0
"BLD",15413,"KRN",8994,"NM",4,0)
ORWDPS5 LESAPI^^0
"BLD",15413,"KRN",8994,"NM",5,0)
ORWDPS5 LESGRP^^0
"BLD",15413,"KRN",8994,"NM",6,0)
ORWDXR ORCPLX^^0
"BLD",15413,"KRN",8994,"NM",7,0)
ORWDPS1 IVDEA^^0
"BLD",15413,"KRN",8994,"NM",8,0)
ORWDXA OFCPLX^^0
"BLD",15413,"KRN",8994,"NM",9,0)
ORWDXR CANRN^^0
"BLD",15413,"KRN",8994,"NM",10,0)
ORWDXR ISCPLX^^0
"BLD",15413,"KRN",8994,"NM",11,0)
ORWDXR ISNOW^^0
"BLD",15413,"KRN",8994,"NM",12,0)
ORQQPX GET NOT PURPOSE^^0
"BLD",15413,"KRN",8994,"NM",13,0)
ORRHCQ QRYITR^^0
"BLD",15413,"KRN",8994,"NM",14,0)
OREVNTX1 GETSTS^^0
"BLD",15413,"KRN",8994,"NM",15,0)
ORWU DEFAULT DIVISION^^0
"BLD",15413,"KRN",8994,"NM",16,0)
ORWDXA ISACTOI^^0
"BLD",15413,"KRN",8994,"NM",17,0)
ORECS01 SAVPATH^^0
"BLD",15413,"KRN",8994,"NM",18,0)
ORWU1 NEWLOC^^0
"BLD",15413,"KRN",8994,"NM","B","ORECS01 SAVPATH",17)

"BLD",15413,"KRN",8994,"NM","B","OREVNTX1 GETSTS",14)

"BLD",15413,"KRN",8994,"NM","B","ORQQCN UNRESOLVED",2)

"BLD",15413,"KRN",8994,"NM","B","ORQQPX GET NOT PURPOSE",12)

"BLD",15413,"KRN",8994,"NM","B","ORRHCQ QRYITR",13)

"BLD",15413,"KRN",8994,"NM","B","ORWCH LDFONT",3)

"BLD",15413,"KRN",8994,"NM","B","ORWDPS1 IVDEA",7)

"BLD",15413,"KRN",8994,"NM","B","ORWDPS5 LESAPI",4)

"BLD",15413,"KRN",8994,"NM","B","ORWDPS5 LESGRP",5)

"BLD",15413,"KRN",8994,"NM","B","ORWDXA ISACTOI",16)

"BLD",15413,"KRN",8994,"NM","B","ORWDXA OFCPLX",8)

"BLD",15413,"KRN",8994,"NM","B","ORWDXR CANRN",9)

"BLD",15413,"KRN",8994,"NM","B","ORWDXR ISCPLX",10)

"BLD",15413,"KRN",8994,"NM","B","ORWDXR ISNOW",11)

"BLD",15413,"KRN",8994,"NM","B","ORWDXR ORCPLX",6)

"BLD",15413,"KRN",8994,"NM","B","ORWU DEFAULT DIVISION",15)

"BLD",15413,"KRN",8994,"NM","B","ORWU1 NAMECVT",1)

"BLD",15413,"KRN",8994,"NM","B","ORWU1 NEWLOC",18)

"BLD",15413,"KRN","B",.4,.4)

"BLD",15413,"KRN","B",.401,.401)

"BLD",15413,"KRN","B",.402,.402)

"BLD",15413,"KRN","B",.403,.403)

"BLD",15413,"KRN","B",.5,.5)

"BLD",15413,"KRN","B",.84,.84)

"BLD",15413,"KRN","B",3.6,3.6)

"BLD",15413,"KRN","B",3.8,3.8)

"BLD",15413,"KRN","B",9.2,9.2)

"BLD",15413,"KRN","B",9.8,9.8)

"BLD",15413,"KRN","B",19,19)

"BLD",15413,"KRN","B",19.1,19.1)

"BLD",15413,"KRN","B",101,101)

"BLD",15413,"KRN","B",409.61,409.61)

"BLD",15413,"KRN","B",771,771)

"BLD",15413,"KRN","B",870,870)

"BLD",15413,"KRN","B",8989.51,8989.51)

"BLD",15413,"KRN","B",8989.52,8989.52)

"BLD",15413,"KRN","B",8994,8994)

"BLD",15413,"PRE")
ORY149
"BLD",15413,"QUES",0)
^9.62^^
"BLD",15413,"REQB",0)
^9.611^6^6
"BLD",15413,"REQB",1,0)
OR*3.0*141^2
"BLD",15413,"REQB",2,0)
GMRC*3.0*29^2
"BLD",15413,"REQB",3,0)
OR*3.0*158^2
"BLD",15413,"REQB",4,0)
OR*3.0*163^2
"BLD",15413,"REQB",5,0)
XU*8.0*267^2
"BLD",15413,"REQB",6,0)
OR*3.0*165^2
"BLD",15413,"REQB","B","GMRC*3.0*29",2)

"BLD",15413,"REQB","B","OR*3.0*141",1)

"BLD",15413,"REQB","B","OR*3.0*158",3)

"BLD",15413,"REQB","B","OR*3.0*163",4)

"BLD",15413,"REQB","B","OR*3.0*165",6)

"BLD",15413,"REQB","B","XU*8.0*267",5)

"DATA",101.24,6,0)
ORRP IMAGING^18^^3^ORWRA^RPT1^4^R^^^^V^203
"DATA",101.24,6,2)
^^Imaging (local only)^Imaging (local only)
"DATA",101.24,6,3,0)
^101.243^9^8
"DATA",101.24,6,3,1,0)
Facility^^1
"DATA",101.24,6,3,3,0)
Procedure Date/Time     ^^3^^^^^^2
"DATA",101.24,6,3,4,0)
Procedure Name^^4
"DATA",101.24,6,3,5,0)
Case #^^7^^^^^^1
"DATA",101.24,6,3,6,0)
ID^1^2
"DATA",101.24,6,3,7,0)
Report Status^^5
"DATA",101.24,6,3,8,0)
[+]^^8
"DATA",101.24,6,3,9,0)
Exam Status^^6
"DATA",101.24,6,4)
3:4
"DATA",8989.51,222,0)
ORWOR SHOW CONSULTS^Show unresolved consults^0^^Show unresolved consults
"DATA",8989.51,222,1)
Y^^Should unresolved consults be displayed when starting a new note?
"DATA",8989.51,222,20,0)
^8989.512^5^5^3021205^^^
"DATA",8989.51,222,20,1,0)
If set to 'yes', when starting a new note, a check will be made for any 
"DATA",8989.51,222,20,2,0)
unresolved consults that the current user can act upon.  If any are 
"DATA",8989.51,222,20,3,0)
found, a dialog will be displayed asking if the user would like to see a 
"DATA",8989.51,222,20,4,0)
list of these consults. If set to 'no', this dialog will not be 
"DATA",8989.51,222,20,5,0)
displayed.
"DATA",8989.51,222,30,0)
^8989.513I^5^4
"DATA",8989.51,222,30,1,0)
5^200
"DATA",8989.51,222,30,3,0)
15^4
"DATA",8989.51,222,30,4,0)
20^4.2
"DATA",8989.51,222,30,5,0)
25^9.4
"DATA",8989.51,304,0)
ORWOR SPELL CHECK ENABLED?^Enable spelling/grammar checking in GUI.^0^^Enable spell-check
"DATA",8989.51,304,1)
S^1:ENABLE;0:DISABLE^Should spell/grammar checks be enabled in the GUI (1=yes,0=no)
"DATA",8989.51,304,20,0)
^^1^1^3021203^
"DATA",8989.51,304,20,1,0)
Should spell/grammar checks be enabled in the GUI (1=yes,0=no)
"DATA",8989.51,304,30,0)
^8989.513I^3^3
"DATA",8989.51,304,30,1,0)
1^200
"DATA",8989.51,304,30,2,0)
3^4.2
"DATA",8989.51,304,30,3,0)
5^9.4
"FIA",101.24)
OE/RR REPORT
"FIA",101.24,0)
^ORD(101.24,
"FIA",101.24,0,0)
101.24I
"FIA",101.24,0,1)
n^n^f^^y^^y^r^n
"FIA",101.24,0,10)

"FIA",101.24,0,11)
I $$SENDRPT^ORY149($P(^(0),U))
"FIA",101.24,0,"RLRO")

"FIA",101.24,0,"VR")
3.0^OR
"FIA",101.24,101.24)
0
"FIA",101.24,101.241)
0
"FIA",101.24,101.243)
0
"FIA",8989.51)
PARAMETER DEFINITION
"FIA",8989.51,0)
^XTV(8989.51,
"FIA",8989.51,0,0)
8989.51I
"FIA",8989.51,0,1)
n^n^f^^y^^y^r^n
"FIA",8989.51,0,10)

"FIA",8989.51,0,11)
I $$SENDPAR^ORY149($P(^(0),U))
"FIA",8989.51,0,"RLRO")

"FIA",8989.51,0,"VR")
3.0^OR
"FIA",8989.51,8989.51)
0
"FIA",8989.51,8989.512)
0
"FIA",8989.51,8989.513)
0
"FIA",8989.51,8989.514)
0
"FRV1",101.24,"6,0",13)
ORWRP REPORT TEXT
"FRV1",101.24,"6,0",13,"F")
;XWB(8994,
"INI")
PRE^ORY149
"INIT")
POST^ORY149
"KRN",8989.5,5567,0)
22;DIC(9.4,^ORWOR SHOW CONSULTS^1
"KRN",8989.5,5567,1)
1
"KRN",8989.5,5568,0)
22;DIC(9.4,^ORWOR SPELL CHECK ENABLED?^1
"KRN",8989.5,5568,1)
1
"KRN",8989.51,222,-1)
0^1
"KRN",8989.51,222,0)
ORWOR SHOW CONSULTS^Show unresolved consults^0^^Show unresolved consults
"KRN",8989.51,222,1)
Y^^Should unresolved consults be displayed when starting a new note?
"KRN",8989.51,222,20,0)
^8989.512^5^5^3021205^^^
"KRN",8989.51,222,20,1,0)
If set to 'yes', when starting a new note, a check will be made for any 
"KRN",8989.51,222,20,2,0)
unresolved consults that the current user can act upon.  If any are 
"KRN",8989.51,222,20,3,0)
found, a dialog will be displayed asking if the user would like to see a 
"KRN",8989.51,222,20,4,0)
list of these consults. If set to 'no', this dialog will not be 
"KRN",8989.51,222,20,5,0)
displayed.
"KRN",8989.51,222,30,0)
^8989.513I^5^4
"KRN",8989.51,222,30,1,0)
5^200
"KRN",8989.51,222,30,3,0)
15^4
"KRN",8989.51,222,30,4,0)
20^4.2
"KRN",8989.51,222,30,5,0)
25^9.4
"KRN",8989.51,304,-1)
0^2
"KRN",8989.51,304,0)
ORWOR SPELL CHECK ENABLED?^Enable spelling/grammar checking in GUI.^0^^Enable spell-check
"KRN",8989.51,304,1)
S^1:ENABLE;0:DISABLE^Should spell/grammar checks be enabled in the GUI (1=yes,0=no)
"KRN",8989.51,304,20,0)
^^1^1^3021203^
"KRN",8989.51,304,20,1,0)
Should spell/grammar checks be enabled in the GUI (1=yes,0=no)
"KRN",8989.51,304,30,0)
^8989.513I^3^3
"KRN",8989.51,304,30,1,0)
1^200
"KRN",8989.51,304,30,2,0)
3^4.2
"KRN",8989.51,304,30,3,0)
5^9.4
"KRN",8994,1326,-1)
0^3
"KRN",8994,1326,0)
ORWCH LDFONT^LDFONT^ORWCH^1
"KRN",8994,1327,-1)
0^2
"KRN",8994,1327,0)
ORQQCN UNRESOLVED^UNRSLVD^ORQQCN2^1
"KRN",8994,1327,1,0)
^^2^2^3020702^
"KRN",8994,1327,1,1,0)
Returns 1 if current user has unresolved consults for current patient, 0 
"KRN",8994,1327,1,2,0)
if not.
"KRN",8994,1327,2,0)
^8994.02A^1^1
"KRN",8994,1327,2,1,0)
PATIENT DFN^1^32^1
"KRN",8994,1327,2,"B","PATIENT DFN",1)

"KRN",8994,1328,-1)
0^1
"KRN",8994,1328,0)
ORWU1 NAMECVT^NAMECVT^ORWU1^1^^^^1
"KRN",8994,1329,-1)
0^5
"KRN",8994,1329,0)
ORWDPS5 LESGRP^LESGRP^ORWDPS5^1
"KRN",8994,1330,-1)
0^4
"KRN",8994,1330,0)
ORWDPS5 LESAPI^LESAPI^ORWDPS5^2^^^^1
"KRN",8994,1331,-1)
0^6
"KRN",8994,1331,0)
ORWDXR ORCPLX^ORCPLX^ORWDXR^2^^^^1
"KRN",8994,1332,-1)
0^9
"KRN",8994,1332,0)
ORWDXR CANRN^CANRN^ORWDXR^1
"KRN",8994,1333,-1)
0^10
"KRN",8994,1333,0)
ORWDXR ISCPLX^ISCPLX^ORWDXR^1
"KRN",8994,1334,-1)
0^8
"KRN",8994,1334,0)
ORWDXA OFCPLX^OFCPLX^ORWDXA^1^^^^1
"KRN",8994,1335,-1)
0^12
"KRN",8994,1335,0)
ORQQPX GET NOT PURPOSE^PURP^PXRMWHN^2^P^^^^20.2
"KRN",8994,1336,-1)
0^7
"KRN",8994,1336,0)
ORWDPS1 IVDEA^FDEA1^ORWDPS1^1
"KRN",8994,1337,-1)
0^11
"KRN",8994,1337,0)
ORWDXR ISNOW^ISNOW^ORWDXR^1
"KRN",8994,1338,-1)
0^13
"KRN",8994,1338,0)
ORRHCQ QRYITR^QRYITR^ORRHCQ^1^R
"KRN",8994,1338,1,0)
^8994.01^8^8^3021212^^
"KRN",8994,1338,1,1,0)
Executes the query for a patient.  An iterator is passed in, in the 
"KRN",8994,1338,1,2,0)
format:
"KRN",8994,1338,1,3,0)
 
"KRN",8994,1338,1,4,0)
  ListSource Subscript ^ DFN ^ Item#
"KRN",8994,1338,1,5,0)
 
"KRN",8994,1338,1,6,0)
The value returned includes the records found and the next iterator:
"KRN",8994,1338,1,7,0)
 
"KRN",8994,1338,1,8,0)
  PtSearched ^ RecordCount ^ ListSource Subscript ^ NextDFN ^ Next Item#
"KRN",8994,1338,2,0)
^8994.02A^1^1
"KRN",8994,1338,2,1,0)
ORRITR^1^^1^1
"KRN",8994,1338,2,1,1,0)
^8994.021^1^1^3021212^^^
"KRN",8994,1338,2,1,1,1,0)
Iterator used to get the next patient in the query.
"KRN",8994,1338,2,"B","ORRITR",1)

"KRN",8994,1338,2,"PARAMSEQ",1,1)

"KRN",8994,1338,3,0)
^8994.03^2^2^3021212^^^
"KRN",8994,1338,3,1,0)
Returns the total number of records found for the patient.  The actual
"KRN",8994,1338,3,2,0)
query results are stored in ^TMP("ORRHCQD",$J).
"KRN",8994,1339,-1)
0^15
"KRN",8994,1339,0)
ORWU DEFAULT DIVISION^DEFDIV^ORWU1^1
"KRN",8994,1339,1,0)
^^2^2^3030115^
"KRN",8994,1339,1,1,0)
Returns True or False for a user depending on default division 
"KRN",8994,1339,1,2,0)
information.
"KRN",8994,1339,2,0)
^8994.02A^^0
"KRN",8994,1339,3,0)
^8994.03^1^1^3030115^^^
"KRN",8994,1339,3,1,0)
Returns single value - True or False.
"KRN",8994,1340,-1)
0^14
"KRN",8994,1340,0)
OREVNTX1 GETSTS^GETSTS^OREVNTX1^1
"KRN",8994,1341,-1)
0^16
"KRN",8994,1341,0)
ORWDXA ISACTOI^ISACTOI^ORWDXA^1^^^^1
"KRN",8994,1343,-1)
0^17
"KRN",8994,1343,0)
ORECS01 SAVPATH^SAVPATH^ORECS01^1^^^^1
"KRN",8994,1366,-1)
0^18
"KRN",8994,1366,0)
ORWU1 NEWLOC^NEWLOC^ORWU1^2
"KRN",8994,1366,1,0)
^8994.01^2^2^3030419^^
"KRN",8994,1366,1,1,0)
Returns a list of Clinics, Wards, and "Other" category entries from the 
"KRN",8994,1366,1,2,0)
HOSPITAL LOCATION (#44) file.
"MBREQ")
1
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PGL",101.24,0,13,.13)
RPC^P8994'^XWB(8994,^0;13^Q
"PGL",101.24,0,18,.18)
DETAIL REPORT^*P101.24'^ORD(101.24,^0;18^S DIC("S")="I $P(^(0),""^"",8)=""CD""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",101.24,0,21,.192)
REPORT COMPONENT^P142.1'^GMT(142.1,^0;21^Q
"PKG",22,-1)
1^1
"PKG",22,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",22,20,0)
^9.402P^^
"PKG",22,22,0)
^9.49I^1^1
"PKG",22,22,1,0)
3.0^2971217^2980204^64
"PKG",22,22,1,"PAH",1,0)
149^3030722^1362
"PRE")
ORY149
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
22
"RTN","ORCACT1")
0^10^B49093079
"RTN","ORCACT1",1,0)
ORCACT1 ;SLC/MKB-Act on orders cont ;7/29/97  08:26
"RTN","ORCACT1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,27,56,48,86,92,116,149**;Dec 17, 1997
"RTN","ORCACT1",3,0)
 ;
"RTN","ORCACT1",4,0)
FLAG ; -- flag orders
"RTN","ORCACT1",5,0)
 D EN("FL") Q
"RTN","ORCACT1",6,0)
 ;
"RTN","ORCACT1",7,0)
UNFLAG ; -- unflag orders
"RTN","ORCACT1",8,0)
 D EN("UF") Q
"RTN","ORCACT1",9,0)
 ;
"RTN","ORCACT1",10,0)
COMMENT ; -- add ward comments to orders
"RTN","ORCACT1",11,0)
 D EN("CM") Q
"RTN","ORCACT1",12,0)
 ;
"RTN","ORCACT1",13,0)
ALERT ; -- alert provider when results available
"RTN","ORCACT1",14,0)
 D EN("AL") Q
"RTN","ORCACT1",15,0)
 ;
"RTN","ORCACT1",16,0)
UNHOLD ; -- release hold on orders - no longer in use
"RTN","ORCACT1",17,0)
 Q  ; see UNHOLD^ORCACT instead
"RTN","ORCACT1",18,0)
 ;
"RTN","ORCACT1",19,0)
EN(ORACT) ; -- Actions that don't create orders
"RTN","ORCACT1",20,0)
 ;    ORNMBR = #,#,...,# of selected orders
"RTN","ORCACT1",21,0)
 ;    ORACT  = action to be taken
"RTN","ORCACT1",22,0)
 ;
"RTN","ORCACT1",23,0)
 ;    OREBUILD defined on return if Orders tab needs to be rebuilt
"RTN","ORCACT1",24,0)
 ;
"RTN","ORCACT1",25,0)
 N ORLK,ORI,NMBR,IDX,ORIFN,ORDITM,ORERR,ORQUIT
"RTN","ORCACT1",26,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("") Q:'ORNMBR
"RTN","ORCACT1",27,0)
 D FREEZE^ORCMENU S VALMBCK="R" K OREBUILD
"RTN","ORCACT1",28,0)
 F ORI=1:1:$L(ORNMBR,",") S NMBR=$P(ORNMBR,",",ORI) D:NMBR  Q:$D(ORQUIT)
"RTN","ORCACT1",29,0)
 . S IDX=$G(^TMP("OR",$J,ORTAB,"IDX",NMBR)),ORIFN=$P(IDX,U)
"RTN","ORCACT1",30,0)
 . Q:'ORIFN  S:'$P(ORIFN,";",2) ORIFN=+ORIFN_";1"
"RTN","ORCACT1",31,0)
 . I '$D(^OR(100,+ORIFN,0)) W !,"This order has been deleted!" H 1 Q
"RTN","ORCACT1",32,0)
 . S ORDITM=$$ORDITEM^ORCACT(ORIFN) D SUBHDR^ORCACT(ORDITM)
"RTN","ORCACT1",33,0)
 . I '$$VALID^ORCACT0(ORIFN,ORACT,.ORERR) W !,ORERR H 1 Q
"RTN","ORCACT1",34,0)
 . S ORLK=$$LOCK1^ORX2(+ORIFN) I 'ORLK W !,$P(ORLK,U,2) H 1 Q
"RTN","ORCACT1",35,0)
 . D @ORACT,UNLK1^ORX2(+ORIFN)
"RTN","ORCACT1",36,0)
ENQ Q
"RTN","ORCACT1",37,0)
 ;
"RTN","ORCACT1",38,0)
FL ; -- Flag order ORIFN
"RTN","ORCACT1",39,0)
 D EN^ORCFLAG
"RTN","ORCACT1",40,0)
 Q
"RTN","ORCACT1",41,0)
 ;
"RTN","ORCACT1",42,0)
UF ; -- Unflag order ORIFN
"RTN","ORCACT1",43,0)
 D UN^ORCFLAG
"RTN","ORCACT1",44,0)
 Q
"RTN","ORCACT1",45,0)
 ;
"RTN","ORCACT1",46,0)
CM ; -- Ward Comments on order ORIFN
"RTN","ORCACT1",47,0)
 N DIC,DWPK,DIWEPSE,DIWESUB,DDWRW
"RTN","ORCACT1",48,0)
 S DIC="^OR(100,"_+ORIFN_",8,"_+$P(ORIFN,";",2)_",5,",(DWPK,DIWEPSE)=1
"RTN","ORCACT1",49,0)
 S DIWESUB=ORDITM,DDWRW="B" ;go to bottom of text
"RTN","ORCACT1",50,0)
 D EN^DIWE
"RTN","ORCACT1",51,0)
 Q
"RTN","ORCACT1",52,0)
 ;
"RTN","ORCACT1",53,0)
AL ; -- Alert when results are available for order ORIFN
"RTN","ORCACT1",54,0)
 S $P(^OR(100,+ORIFN,3),U,10)=1
"RTN","ORCACT1",55,0)
 W !?10,"... done." H 1
"RTN","ORCACT1",56,0)
 Q
"RTN","ORCACT1",57,0)
 ;
"RTN","ORCACT1",58,0)
RL ; -- Release hold on order ORIFN [No longer used]
"RTN","ORCACT1",59,0)
 D EN^ORCSEND(+ORIFN,ORACT,3,1,,,.ORERR)
"RTN","ORCACT1",60,0)
 W !,"... order "_$S($G(ORERR):"not ",1:"")_"released from hold."
"RTN","ORCACT1",61,0)
 W:$L($P($G(ORERR),U,2)) !,"  >> "_$P(ORERR,U,2) H 1
"RTN","ORCACT1",62,0)
 S OREBUILD=1 ; print?
"RTN","ORCACT1",63,0)
 Q
"RTN","ORCACT1",64,0)
 ;
"RTN","ORCACT1",65,0)
VERIFY(ORVER) ; -- Verify orders
"RTN","ORCACT1",66,0)
 N ORLK,ORI,NMBR,IDX,ORIFN,ORDITM,ORES,ORERR,ORSIG,OROLDSTS,ORNEW,ORWAIT
"RTN","ORCACT1",67,0)
 I "^"[$G(ORVER) W $C(7),!!,"You must be a nurse or clerk to verify these orders!" S VALMBCK="" H 2 Q
"RTN","ORCACT1",68,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("") Q:'ORNMBR
"RTN","ORCACT1",69,0)
 D FREEZE^ORCMENU S VALMBCK="R" K OREBUILD
"RTN","ORCACT1",70,0)
 F ORI=1:1:$L(ORNMBR,",") S NMBR=$P(ORNMBR,",",ORI) D:NMBR  Q:$D(ORQUIT)
"RTN","ORCACT1",71,0)
 . S IDX=$G(^TMP("OR",$J,ORTAB,"IDX",NMBR)),ORIFN=$P(IDX,U)
"RTN","ORCACT1",72,0)
 . Q:'ORIFN  S:'$P(ORIFN,";",2) ORIFN=+ORIFN_";1"
"RTN","ORCACT1",73,0)
 . I '$$VALID^ORCACT0(ORIFN,"VR",.ORERR) W !!,$$ORDITEM^ORCACT(ORIFN)_" invalid.",!,"  >> "_ORERR H 1 Q
"RTN","ORCACT1",74,0)
 . S ORLK=$$LOCK1^ORX2(+ORIFN) I 'ORLK W !!,$$ORDITEM^ORCACT(ORIFN)_" invalid.",!,"  >> "_$P(ORLK,U,2) H 1 Q
"RTN","ORCACT1",75,0)
 . S ORES(ORIFN)="" D REPLCD
"RTN","ORCACT1",76,0)
VR1 Q:'$O(ORES(0))  D COMPLX S ORSIG=$S($$ESIG^ORCSIGN:1,1:0)
"RTN","ORCACT1",77,0)
 I 'ORSIG W !,"Nothing verified!" D UNLOCK H 1 Q
"RTN","ORCACT1",78,0)
 W !!,"Verifying orders ..."
"RTN","ORCACT1",79,0)
 S ORIFN=0 F  S ORIFN=$O(ORES(ORIFN)) Q:ORIFN'>0  D
"RTN","ORCACT1",80,0)
 . S OROLDSTS=+$P($G(^OR(100,+ORIFN,3)),U,3)
"RTN","ORCACT1",81,0)
 . D EN^ORCSEND(ORIFN,"VR","","",,,.ORERR),UNLK1^ORX2(+ORIFN)
"RTN","ORCACT1",82,0)
 . I $G(ORERR) D  Q
"RTN","ORCACT1",83,0)
 . . W !,$$ORDITEM^ORCACT(ORIFN)_" not verified."
"RTN","ORCACT1",84,0)
 . . W:$L($P($G(ORERR),U,2)) !,"  >> "_$P(ORERR,U,2) H 1
"RTN","ORCACT1",85,0)
 . S ORNEW=+$P($G(^OR(100,+ORIFN,3)),U,3) I ORNEW'=OROLDSTS W !,$$ORDITEM^ORCACT(ORIFN)_" is now "_$$STS(ORNEW)_"." S ORWAIT=1
"RTN","ORCACT1",86,0)
 S OREBUILD=1 D:'$D(XQAID) CKALERT I $G(ORWAIT) H 2
"RTN","ORCACT1",87,0)
VRQ Q
"RTN","ORCACT1",88,0)
 ;
"RTN","ORCACT1",89,0)
STS(X) ; -- Return name of status X
"RTN","ORCACT1",90,0)
 N Y S Y=$P($G(^ORD(100.01,+$G(X),0)),U)
"RTN","ORCACT1",91,0)
 Q Y
"RTN","ORCACT1",92,0)
 ;
"RTN","ORCACT1",93,0)
REPLCD ; -- Ck for unverified replaced orders for ORIFN, add to ORES(order#)
"RTN","ORCACT1",94,0)
 ;    [Expects ORVER; also called from VERIFY^ORWDXA,VERIFY^ORRCOR]
"RTN","ORCACT1",95,0)
 N OR3,ORIG,ORFLD,ORDA,ORI,ORLK
"RTN","ORCACT1",96,0)
 S ORFLD=$S($G(ORVER)="N":8,1:10),ORDA=+$P(ORIFN,";",2)
"RTN","ORCACT1",97,0)
 I ORDA>1 D  Q  ;ck for XX action
"RTN","ORCACT1",98,0)
 . Q:$P($G(^OR(100,+ORIFN,8,ORDA,0)),U,2)'="XX"
"RTN","ORCACT1",99,0)
 . S ORI=0 F  S ORI=$O(^OR(100,+ORIFN,8,ORI)) Q:ORI<1  Q:ORI'<ORDA  D
"RTN","ORCACT1",100,0)
 .. Q:$P($G(^OR(100,+ORIFN,8,ORI,0)),U,15)'=12  Q:$P($G(^(0)),U,ORFLD)
"RTN","ORCACT1",101,0)
 .. S ORLK=$$LOCK1^ORX2(+ORIFN) Q:'ORLK
"RTN","ORCACT1",102,0)
 .. S ORES(+ORIFN_";"_ORI)="" ;verify dc/e actions
"RTN","ORCACT1",103,0)
 S OR3=$G(^OR(100,+ORIFN,3)) Q:$P(OR3,U,11)'=1
"RTN","ORCACT1",104,0)
 S ORIG=+$P(OR3,U,5) Q:'ORIG  Q:$P($G(^OR(100,ORIG,3)),U,3)'=12
"RTN","ORCACT1",105,0)
 S ORDA=0 F  S ORDA=$O(^OR(100,ORIG,8,ORDA)) Q:ORDA'>0  I '$P($G(^(ORDA,0)),U,ORFLD) D
"RTN","ORCACT1",106,0)
 . S ORLK=$$LOCK1^ORX2(ORIG) Q:'ORLK
"RTN","ORCACT1",107,0)
 . S ORES(ORIG_";"_ORDA)=""
"RTN","ORCACT1",108,0)
 Q
"RTN","ORCACT1",109,0)
 ;
"RTN","ORCACT1",110,0)
COMPLX ; -- Ck for other child orders to be verified at same time
"RTN","ORCACT1",111,0)
 N IFN,DAD,CHLD,ALL,P,X,I
"RTN","ORCACT1",112,0)
 S P=$S(ORVER="N":9,ORVER="C":11,ORVER="R":19,1:0) Q:P<1
"RTN","ORCACT1",113,0)
 S IFN=0 F  S IFN=$O(ORES(IFN)) Q:IFN<1  D
"RTN","ORCACT1",114,0)
 . S X=+$P($G(^OR(100,+IFN,0)),U,14) Q:$$NMSP^ORCD(X)'["PS"
"RTN","ORCACT1",115,0)
 . S X=$P($G(^OR(100,+IFN,8,+$P(IFN,";",2),0)),U,2) Q:X'="NW"&(X'="XX")
"RTN","ORCACT1",116,0)
 . I $P($G(^OR(100,+IFN,3)),U,9) S DAD(+$P(^(3),U,9))=""
"RTN","ORCACT1",117,0)
 Q:'$O(DAD(0))  S IFN=0 F  S IFN=+$O(DAD(IFN)) Q:IFN<1  D
"RTN","ORCACT1",118,0)
 . S CHLD=0,ALL=1
"RTN","ORCACT1",119,0)
 . F  S CHLD=+$O(^OR(100,IFN,2,CHLD)) Q:CHLD<1  F X="NW","XX" D
"RTN","ORCACT1",120,0)
 .. S I=+$O(^OR(100,CHLD,8,"C",X,0)) Q:I<1
"RTN","ORCACT1",121,0)
 .. Q:$P($G(^OR(100,CHLD,8,I,0)),U,P)  Q:$D(ORES(CHLD_";"_I))
"RTN","ORCACT1",122,0)
 .. S ORES(CHLD_";"_I)="",ALL=0
"RTN","ORCACT1",123,0)
 . Q:ALL  S X=$$ORDITEM^ORCACT(IFN) D SUBHDR^ORCACT(X)
"RTN","ORCACT1",124,0)
 . W !,"All doses of this complex order must be verified together;"
"RTN","ORCACT1",125,0)
 . W !,"adding remaining doses to signature list..."
"RTN","ORCACT1",126,0)
 Q
"RTN","ORCACT1",127,0)
 ;
"RTN","ORCACT1",128,0)
CKALERT ; -- Ck if Unverified Orders alerts can be deleted
"RTN","ORCACT1",129,0)
 N ORNOW,ORBEG,ORLIST,ORALL,ORMEDS S ORNOW=$$NOW^XLFDT
"RTN","ORCACT1",130,0)
 S:'$G(ORWARD) ORBEG=$$FMADD^XLFDT(ORNOW,"-30") I $G(ORWARD) D
"RTN","ORCACT1",131,0)
 . N DFN,VAIN,VAERR S DFN=+ORVP D INP^VADPT
"RTN","ORCACT1",132,0)
 . S ORBEG=$S($G(VAIN(7)):$P(VAIN(7),U),1:$$FMADD^XLFDT(ORNOW,-30))
"RTN","ORCACT1",133,0)
 D EN^ORQ1(ORVP,,9,,ORBEG,ORNOW) ;see if any unverified orders remain
"RTN","ORCACT1",134,0)
 I $G(ORLIST),$G(^TMP("ORR",$J,ORLIST,"TOT")) D  ;see if any are meds
"RTN","ORCACT1",135,0)
 . N ORRX,ORGRP,I,IFN,DG S ORALL=1
"RTN","ORCACT1",136,0)
 . S ORRX=+$O(^ORD(100.98,"B","RX",0)) D GRP^ORQ1(ORRX)
"RTN","ORCACT1",137,0)
 . S I=0 F  S I=$O(^TMP("ORR",$J,ORLIST,I)) Q:I'>0  S IFN=+^(I),DG=+$P($G(^OR(100,IFN,0)),U,11) I $D(ORGRP(DG)) S ORMEDS=1 Q
"RTN","ORCACT1",138,0)
 D:'$G(ORALL) DELALRT("UNVERIFIED ORDER")
"RTN","ORCACT1",139,0)
 D:'$G(ORMEDS) DELALRT("UNVERIFIED MEDICATION ORDER")
"RTN","ORCACT1",140,0)
 Q
"RTN","ORCACT1",141,0)
 ;
"RTN","ORCACT1",142,0)
DELALRT(X) ; -- delete alert X
"RTN","ORCACT1",143,0)
 N ORNIFN,XQAKILL,XQAID
"RTN","ORCACT1",144,0)
 S ORNIFN=+$O(^ORD(100.9,"B",X,0)) Q:ORNIFN'>0
"RTN","ORCACT1",145,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN)
"RTN","ORCACT1",146,0)
 S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN
"RTN","ORCACT1",147,0)
 D DELETEA^XQALERT
"RTN","ORCACT1",148,0)
 Q
"RTN","ORCACT1",149,0)
 ;
"RTN","ORCACT1",150,0)
UNLOCK ; -- Unlock orders in ORES(ORIFN) [from VR1]
"RTN","ORCACT1",151,0)
 F  S ORIFN=$O(ORES(ORIFN)) Q:ORIFN'>0  D UNLK1^ORX2(+ORIFN)
"RTN","ORCACT1",152,0)
 Q
"RTN","ORCACT1",153,0)
 ;
"RTN","ORCACT1",154,0)
SIGNREQD(IFN) ; -- Returns 2, 1, or 0, if order/actions need ES
"RTN","ORCACT1",155,0)
 Q +$P($G(^OR(100,IFN,0)),U,16)
"RTN","ORCACT1",156,0)
 ;
"RTN","ORCACT1",157,0)
SIGN ; -- Sign orders [no longer used]
"RTN","ORCACT1",158,0)
 D EN^ORCSIGN
"RTN","ORCACT1",159,0)
 Q
"RTN","ORCACT1",160,0)
 ;
"RTN","ORCACT1",161,0)
COMPLETE ; -- complete orders
"RTN","ORCACT1",162,0)
 N ORLK,ORI,NMBR,IDX,ORIFN,ORDITM,ORES,ORERR,ORSIG,ORSTOP
"RTN","ORCACT1",163,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("complete") Q:'ORNMBR
"RTN","ORCACT1",164,0)
 D FREEZE^ORCMENU S VALMBCK="R" K OREBUILD
"RTN","ORCACT1",165,0)
 F ORI=1:1:$L(ORNMBR) S NMBR=$P(ORNMBR,",",ORI) D:NMBR  Q:$D(ORQUIT)
"RTN","ORCACT1",166,0)
 . S IDX=$G(^TMP("OR",$J,ORTAB,"IDX",NMBR)),ORIFN=$P(IDX,U)
"RTN","ORCACT1",167,0)
 . Q:'ORIFN  S:'$P(ORIFN,";",2) ORIFN=+ORIFN_";1"
"RTN","ORCACT1",168,0)
 . I '$$VALID^ORCACT0(ORIFN,"CP",.ORERR) W !!,$$ORDITEM^ORCACT(ORIFN)_" invalid.",!,"  >> "_ORERR H 1 Q
"RTN","ORCACT1",169,0)
 . S ORLK=$$LOCK1^ORX2(+ORIFN) I 'ORLK W !!,$$ORDITEM^ORCACT(ORIFN)_" invalid.",!,"  >> "_$P(ORLK,U,2) H 1 Q
"RTN","ORCACT1",170,0)
 . S ORES(ORIFN)=""
"RTN","ORCACT1",171,0)
CP1 Q:'$O(ORES(0))  S ORSIG=$S($$ESIG^ORCSIGN:1,1:0)
"RTN","ORCACT1",172,0)
 I 'ORSIG W !,"Nothing completed!" D UNLOCK H 1 Q
"RTN","ORCACT1",173,0)
 W !!,"Completing orders ..." S ORSTOP=+$E($$NOW^XLFDT,1,12),ORIFN=0
"RTN","ORCACT1",174,0)
 F  S ORIFN=$O(ORES(ORIFN)) Q:ORIFN'>0  D COMP^ORCSAVE2(ORIFN,DUZ,ORSTOP),UNLK1^ORX2(+ORIFN)
"RTN","ORCACT1",175,0)
 S OREBUILD=1
"RTN","ORCACT1",176,0)
CPQ Q
"RTN","ORCACT2")
0^11^B60946711
"RTN","ORCACT2",1,0)
ORCACT2 ;SLC/MKB-DC orders ; 08 May 2002  2:12 PM
"RTN","ORCACT2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,48,79,92,108,94,141,149**;Dec 17, 1997
"RTN","ORCACT2",3,0)
DC ; -- start here with:
"RTN","ORCACT2",4,0)
 ;    ORNMBR = #,#,...,# of selected orders
"RTN","ORCACT2",5,0)
 ;
"RTN","ORCACT2",6,0)
 ;    OREBUILD defined on return if Orders tab needs to be rebuilt
"RTN","ORCACT2",7,0)
 ;
"RTN","ORCACT2",8,0)
 N ORACT,ORI,NMBR,ORQUIT,ORIFN,ORDC,OREVT,ORNATR,ORPTLK,ORLK,IDX,ORDITM,ORPRINT,ORERR,ORSTS,ORPRNT,ORCLNUP,ORDA,ORCREATE,OR0,OR3,OREASON,ORXNP,ORX S VALMBCK=""
"RTN","ORCACT2",9,0)
 S ORPTLK=$$LOCK^ORX2(+ORVP) I 'ORPTLK W !!,$C(7),$P(ORPTLK,U,2) H 2 Q
"RTN","ORCACT2",10,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("") G:'ORNMBR DCQ
"RTN","ORCACT2",11,0)
 D FREEZE^ORCMENU S ORACT="DC",VALMBCK="R" K OREBUILD
"RTN","ORCACT2",12,0)
DC1 F ORI=1:1:$L(ORNMBR,",") S NMBR=$P(ORNMBR,",",ORI) D:NMBR  Q:$D(ORQUIT)
"RTN","ORCACT2",13,0)
 . S IDX=$G(^TMP("OR",$J,ORTAB,"IDX",NMBR))
"RTN","ORCACT2",14,0)
 . S ORIFN=$S(ORTAB="MEDS":$P(IDX,U,4),1:$P(IDX,U)) Q:'ORIFN
"RTN","ORCACT2",15,0)
 . I '$D(^OR(100,+ORIFN,0)) W !,"This order has been deleted!" H 1 Q
"RTN","ORCACT2",16,0)
 . S:'$P(ORIFN,";",2) ORIFN=+ORIFN_";"_+$P($G(^OR(100,+ORIFN,3)),U,7)
"RTN","ORCACT2",17,0)
 . S ORDITM=$$ORDITEM(ORIFN) D SUBHDR(ORDITM)
"RTN","ORCACT2",18,0)
 . I '$$VALID^ORCACT0(ORIFN,ORACT,.ORERR) W !,ORERR H 1 Q
"RTN","ORCACT2",19,0)
 . S ORLK=$$LOCK1^ORX2(+ORIFN) I 'ORLK W !,$P(ORLK,U,2) H 1 Q
"RTN","ORCACT2",20,0)
 . S OR0=$G(^OR(100,+ORIFN,0)),OR3=$G(^(3)),ORSTS=$P($G(^(8,+$P(ORIFN,";",2),0)),U,15)
"RTN","ORCACT2",21,0)
 . S:$P(OR0,U,17) OREVT(+$P(OR0,U,17))="" ;ck event when done
"RTN","ORCACT2",22,0)
 . I (ORSTS=10)!(ORSTS=11) D UNREL Q  ;delete unreleased orders
"RTN","ORCACT2",23,0)
 . I $P(OR0,U,11)=$O(^ORD(100.98,"B","TF",0)),$P(OR3,U,3)=6 D RESUME(ORIFN) Q:$G(ORQUIT)
"RTN","ORCACT2",24,0)
DC2 . S ORDC(ORI)=ORIFN I $$NMSP^ORCD(+$P(OR0,U,14))="PS" S ORX=1 D  ;meds
"RTN","ORCACT2",25,0)
 .. I $P(OR3,U,9),$$VALUE^ORX8(+ORIFN,"SCHEDULE")'="NOW",$$DOSES^ORCACT4($P(OR3,U,9))>1 D
"RTN","ORCACT2",26,0)
 ... N I,X S ORDC("DAD",+$P(OR3,U,9),+ORIFN)=""
"RTN","ORCACT2",27,0)
 ... W !,$C(7),"This is part of a complex order, which will be discontinued in its entirety:"
"RTN","ORCACT2",28,0)
 ... S I=0 F  S I=$O(^OR(100,+$P(OR3,U,9),8,1,.1,I)) Q:I<1  S X=$G(^(I,0)) W:$$UP^XLFSTR(X)'=" FIRST DOSE NOW" !,X
"RTN","ORCACT2",29,0)
 .. N ORY,ORJ,ORV,ORTX,DA,DIK D DELAYED^ORX8(.ORY,+ORIFN) Q:ORY'>0
"RTN","ORCACT2",30,0)
 .. W !,+ORY_" delayed order(s) for the same medication were found:"
"RTN","ORCACT2",31,0)
 .. S ORJ=0 F  S ORJ=$O(ORY(ORJ)) Q:ORJ'>0  S ORV=ORY(ORJ) D TEXT^ORQ12(.ORTX,ORJ) W !,$E(ORTX(1),1,75)_$S($L(ORTX(1))>75:"...",1:""),!,"  >> delayed until "_$P(ORV,U,2)
"RTN","ORCACT2",32,0)
 .. I '$$OK(+ORY) W ! Q
"RTN","ORCACT2",33,0)
 .. W !,"Orders not signed or released to the service will be deleted.",!
"RTN","ORCACT2",34,0)
 .. S DIK="^OR(100,",DA=0 F  S DA=$O(ORY(DA)) Q:DA'>0  D
"RTN","ORCACT2",35,0)
 ... N ORJ,ORSIG,STS,ORLKD
"RTN","ORCACT2",36,0)
 ... S ORLKD=$$LOCK1^ORX2(+DA) I 'ORLKD W !,$P(ORLKD,U,2) H 1 Q
"RTN","ORCACT2",37,0)
 ... S STS=$P($G(^OR(100,DA,3)),U,3),ORSIG=$S($P($G(^(8,1,0)),U,4)=2:0,1:1)
"RTN","ORCACT2",38,0)
 ... I STS'=10 S ORDC($$NXT)=DA Q  ;released - add to list
"RTN","ORCACT2",39,0)
 ... D CLRDLY(DA):ORSIG,^DIK:'ORSIG S OREVT(+ORY(DA))=""
"RTN","ORCACT2",40,0)
 ... I $D(^TMP("ORNEW",$J,DA,1)) K ^(1) D UNLK1^ORX2(DA) ;unlock again
"RTN","ORCACT2",41,0)
 G:'$O(ORDC(0)) DCQ D:$D(ORDC("DAD")) COMPLX
"RTN","ORCACT2",42,0)
DC3 S OREASON=$$DCREASON I OREASON'>0 D UNLOCK G DCQ
"RTN","ORCACT2",43,0)
 S ORNATR=$P(OREASON,U,3),ORCREATE=$$CREATE^ORX1(ORNATR)
"RTN","ORCACT2",44,0)
 I 'ORCREATE,$G(ORX),$D(^XUSEC("OREMAS",DUZ)),$$GET^XPAR("ALL","OR OREMAS MED ORDERS")<2 W $C(7),!,"You are not authorized to release med orders.",! G DC3
"RTN","ORCACT2",45,0)
 I ORCREATE D  I (ORNP="^")!($G(ORL)="^") D UNLOCK G DCQ
"RTN","ORCACT2",46,0)
 . S ORNP=$$PROVIDER^ORCMENU1 Q:ORNP="^"  ;S:ORNP=DUZ ORNATR="E"
"RTN","ORCACT2",47,0)
 . I $G(ORX) D PROVIDER^ORCDPSIV I $G(ORQUIT) S ORNP="^" Q
"RTN","ORCACT2",48,0)
 . S:'$G(ORL) ORL=$$LOCATION^ORCMENU1
"RTN","ORCACT2",49,0)
 W ! W:'ORCREATE "Discontinuing orders ..."
"RTN","ORCACT2",50,0)
 S ORPRNT=$$PRINT(ORNATR),ORCLNUP=$S(ORNATR="D":1,ORNATR="M":1,1:0)
"RTN","ORCACT2",51,0)
 S (ORI,ORPRINT)=0 F  S ORI=$O(ORDC(ORI)) Q:ORI'>0  S ORIFN=ORDC(ORI) D
"RTN","ORCACT2",52,0)
 . I ORCREATE S ORDA=$$ACTION^ORCSAVE("DC",+ORIFN,ORNP) Q:'ORDA  D SET(+ORIFN,ORNATR,+OREASON,$P(OREASON,U,2)) S ^TMP("ORNEW",$J,+ORIFN,ORDA)="" W "." Q
"RTN","ORCACT2",53,0)
 . ; release -> no order or ES req'd
"RTN","ORCACT2",54,0)
 . D EN^ORCSEND(+ORIFN,ORACT,3,1,ORNATR,+OREASON,.ORERR),UNLK1^ORX2(+ORIFN)
"RTN","ORCACT2",55,0)
 . I '$G(ORERR) S:$P(ORPRNT,U)!$P(ORPRNT,U,5) ORPRINT=ORPRINT+1,ORPRINT(ORPRINT)=+ORIFN_";" W "." Q
"RTN","ORCACT2",56,0)
 . W !,$$ORDITEM(+ORIFN)_" not discontinued."
"RTN","ORCACT2",57,0)
 . W:$L($P($G(ORERR),U,2)) !,"  >> "_$P(ORERR,U,2) W ! H 1
"RTN","ORCACT2",58,0)
 W:ORCREATE "... discontinue order(s) placed." H 1
"RTN","ORCACT2",59,0)
 I $O(ORPRINT(0)) D PRINT^ORPR02(ORVP,.ORPRINT,,ORL,ORPRNT)
"RTN","ORCACT2",60,0)
 S OREBUILD=1 ; rebuild orders list
"RTN","ORCACT2",61,0)
DCQ D:$G(OREBUILD) UNOTIF^ORCSIGN ; undo notif?
"RTN","ORCACT2",62,0)
 D:'$D(^TMP("ORNEW",$J)) UNLOCK^ORX2(+ORVP) ;unlock if no new orders
"RTN","ORCACT2",63,0)
 S:$G(ORXNP) ORNP=ORXNP ;reset provider if needed
"RTN","ORCACT2",64,0)
 D:$D(OREVT) EVENT ;cancel any events?
"RTN","ORCACT2",65,0)
 Q
"RTN","ORCACT2",66,0)
 ;
"RTN","ORCACT2",67,0)
UNLOCK ; -- Unlock orders in ORDC(ORI)=ORIFN
"RTN","ORCACT2",68,0)
 N ORI,ORIFN S ORI=0
"RTN","ORCACT2",69,0)
 F  S ORI=$O(ORDC(ORI)) Q:ORI'>0  S ORIFN=+ORDC(ORI) D UNLK1^ORX2(ORIFN)
"RTN","ORCACT2",70,0)
 Q
"RTN","ORCACT2",71,0)
 ;
"RTN","ORCACT2",72,0)
OK(NUM) ; -- Ok to DC delayed order(s) too?
"RTN","ORCACT2",73,0)
 N X,Y,DIR S DIR(0)="YA",DIR("B")="NO"
"RTN","ORCACT2",74,0)
 S DIR("A")="Do you want to discontinue "_$S(NUM>1:"these orders",1:"this order")_" too? "
"RTN","ORCACT2",75,0)
 S DIR("?")="Enter YES to also cancel the delayed order(s), or NO to allow the order(s) to be activated when the designated event occurs."
"RTN","ORCACT2",76,0)
 W ! D ^DIR
"RTN","ORCACT2",77,0)
 Q +Y
"RTN","ORCACT2",78,0)
 ;
"RTN","ORCACT2",79,0)
NXT() ; -- Return next available subscript in ORDC()
"RTN","ORCACT2",80,0)
 N Y S Y=$L(ORNMBR,",")+1 S:Y'>$O(ORDC(""),-1) Y=$O(ORDC(""),-1)+1
"RTN","ORCACT2",81,0)
 Q Y
"RTN","ORCACT2",82,0)
 ;
"RTN","ORCACT2",83,0)
PRINT(NATR) ; -- Ok to print order?
"RTN","ORCACT2",84,0)
 N I,OR1,Y S I=$O(^ORD(100.02,"C",NATR,0)),OR1=$G(^ORD(100.02,I,1))
"RTN","ORCACT2",85,0)
 S Y=$P(OR1,U,2)_"^^^^"_$P(OR1,U,5)
"RTN","ORCACT2",86,0)
 Q Y
"RTN","ORCACT2",87,0)
 ;
"RTN","ORCACT2",88,0)
ORDITEM(ID) ; -- Returns order text
"RTN","ORCACT2",89,0)
 ;N X,I,MORE S X=""
"RTN","ORCACT2",90,0)
 ;I $P(ID,";",2)>1 S I=$P($G(^OR(100,+ID,8,+$P(ID,";",2),0)),U,2),X=$S(I="DC":"Discontinue ",I="HD":"Hold ",1:"")
"RTN","ORCACT2",91,0)
 ;S I=$O(^OR(100,+ID,1,0)) Q:'I "" S MORE=$O(^(I)),X=X_$G(^(I,0))
"RTN","ORCACT2",92,0)
 ;I $L(X)>68 S X=$E(X,1,68),MORE=1
"RTN","ORCACT2",93,0)
 ;S:MORE X=X_" ..."
"RTN","ORCACT2",94,0)
 N X,ORX D TEXT^ORQ12(.ORX,ID,68) S X=ORX(1)_$S(ORX>1:" ...",1:"")
"RTN","ORCACT2",95,0)
 Q X
"RTN","ORCACT2",96,0)
 ;
"RTN","ORCACT2",97,0)
SUBHDR(X) ; -- Display subheader of order being acted on
"RTN","ORCACT2",98,0)
 W !!,?(36-($L(X)\2)),"-- "_X_" --",!
"RTN","ORCACT2",99,0)
 Q
"RTN","ORCACT2",100,0)
 ;
"RTN","ORCACT2",101,0)
COMPLX ; -- Ck for other child orders to be dc'd at same time
"RTN","ORCACT2",102,0)
 N DAD,CHLD
"RTN","ORCACT2",103,0)
 S DAD=0 F  S DAD=$O(ORDC("DAD",DAD)) Q:DAD<1  D
"RTN","ORCACT2",104,0)
 . S CHLD=0 F  S CHLD=$O(^OR(100,DAD,2,CHLD)) Q:CHLD<1  D
"RTN","ORCACT2",105,0)
 .. Q:"^1^2^7^12^13^14^15^"[(U_$P($G(^OR(100,CHLD,3)),U,3)_U)
"RTN","ORCACT2",106,0)
 .. Q:$D(ORDC("DAD",DAD,CHLD))  S ORDC($$NXT)=CHLD
"RTN","ORCACT2",107,0)
 Q
"RTN","ORCACT2",108,0)
 ;
"RTN","ORCACT2",109,0)
DCREASON() ; -- Returns Reason for DC
"RTN","ORCACT2",110,0)
 N X,Y,DIC
"RTN","ORCACT2",111,0)
 ;I $D(^XUSEC("ORES",DUZ)) S Y=+$O(^ORD(100.03,"C","ORREQ",0)) I Y S Y(0)=$G(^ORD(100.03,Y,0)),Y=Y_U_$P(Y(0),U) G DCRQ ; silent
"RTN","ORCACT2",112,0)
 S DIC="^ORD(100.03,",DIC(0)="AEMQZ",DIC("B")=+$O(^ORD(100.03,"C","ORREQ",0)),DIC("W")="W:$L($P(^(0),U))>30 $E($P(^(0),U),31,999)" K:DIC("B")'>0 DIC("B")
"RTN","ORCACT2",113,0)
 S DIC("S")="I '$P(^(0),U,4),$P(^(0),U,5)="_+$O(^DIC(9.4,"C","OR",0))_",$P(^(0),U,7)'="_+$O(^ORD(100.02,"C","A",0)),DIC("A")="REASON FOR DC: "
"RTN","ORCACT2",114,0)
 D ^DIC
"RTN","ORCACT2",115,0)
DCRQ S:Y>0 Y=Y_U_$S($P(Y(0),U,7):$P($G(^ORD(100.02,+$P(Y(0),U,7),0)),U,2),1:"W") ; ^nature
"RTN","ORCACT2",116,0)
 Q Y
"RTN","ORCACT2",117,0)
 ;
"RTN","ORCACT2",118,0)
SET(ORDER,NATURE,REASON,TEXT) ; -- Set DC Reason into 6-node
"RTN","ORCACT2",119,0)
 Q:'$G(ORDER)  Q:'$D(^OR(100,+ORDER,0))  S ORDER=+ORDER
"RTN","ORCACT2",120,0)
 I $L($G(NATURE)),NATURE'>0 S NATURE=$O(^ORD(100.02,"C",NATURE,0))
"RTN","ORCACT2",121,0)
 S ^OR(100,ORDER,6)=$G(NATURE)_U_DUZ_U_$E($$NOW^XLFDT,1,12)_U_$G(REASON)_U_$G(TEXT)
"RTN","ORCACT2",122,0)
 Q
"RTN","ORCACT2",123,0)
 ;
"RTN","ORCACT2",124,0)
RESUME(ORDER) ; -- Resume tray service when dc'ing tubefeeding ORDER?
"RTN","ORCACT2",125,0)
 N X,Y,DIR,DIC,DA S X=$$RESUME^FHWORR(+ORVP)
"RTN","ORCACT2",126,0)
 I '$L(X) W !,"NOTE: NO current diet order exists for this patient!" Q
"RTN","ORCACT2",127,0)
 Q:'X  I X=2 W !,"Note: Patient is on a WITHHOLD SERVICE order!"
"RTN","ORCACT2",128,0)
 S DIR(0)="YA",DIR("A")="Do you wish to resume tray service? "
"RTN","ORCACT2",129,0)
 S DIR("?")="Enter YES to resume the previous diet order",DIR("B")="NO"
"RTN","ORCACT2",130,0)
 D ^DIR I Y'=1 S:$D(DTOUT)!(X["^") ORQUIT=1
"RTN","ORCACT2",131,0)
 D:Y=1 RESUME^ORCSAVE(+ORDER)
"RTN","ORCACT2",132,0)
 Q
"RTN","ORCACT2",133,0)
 ;
"RTN","ORCACT2",134,0)
UNREL ; -- Process unreleased/delayed order
"RTN","ORCACT2",135,0)
 N ORA,ORA0,ORDEL,DA,DR,DIE
"RTN","ORCACT2",136,0)
 S ORA=+$P(ORIFN,";",2),ORA0=$G(^OR(100,+ORIFN,8,ORA,0))
"RTN","ORCACT2",137,0)
 S ORDEL=$S(ORSTS=11:1,$P(ORA0,U,4)=2:1,1:0)
"RTN","ORCACT2",138,0)
 W !,"This order was not released "_$S(ORDEL:"to the service and will be deleted.",1:"but signed and will be cancelled.") H 1 I ORDEL D
"RTN","ORCACT2",139,0)
 . K:$P(ORA0,U,2)="DC" ^OR(100,+ORIFN,6) I $P(ORA0,U,2)="NW" D
"RTN","ORCACT2",140,0)
 .. S:$P(OR3,U,5) $P(^OR(100,+$P(OR3,U,5),3),U,6)=""
"RTN","ORCACT2",141,0)
 .. I $P(OR0,U,17) S DA=+$O(^ORE(100.2,"AO",+ORIFN,0)) I DA S DR="4///@",DIE=100.2 D ^DIE
"RTN","ORCACT2",142,0)
 . D DELETE^ORCSAVE2(ORIFN)
"RTN","ORCACT2",143,0)
 D CLRDLY(+ORIFN):'ORDEL,UNLK1^ORX2(+ORIFN) S OREBUILD=1
"RTN","ORCACT2",144,0)
 I $D(^TMP("ORNEW",$J,+ORIFN,ORA)) K ^(ORA) D UNLK1^ORX2(+ORIFN) ;decrement lock again
"RTN","ORCACT2",145,0)
 Q
"RTN","ORCACT2",146,0)
 ;
"RTN","ORCACT2",147,0)
EVENT ; -- Cancel event too?
"RTN","ORCACT2",148,0)
 N EVT,X
"RTN","ORCACT2",149,0)
 S EVT=0 F  S EVT=$O(OREVT(EVT)) Q:EVT<1  D  Q:$G(ORQUIT)
"RTN","ORCACT2",150,0)
 . Q:$G(^ORE(100.2,EVT,1))  Q:'$$EMPTY^OREVNTX(EVT)  ;done or has orders
"RTN","ORCACT2",151,0)
 . ;W !!,$P($$NAME^OREVNTX(EVT)," ",2,99)_" has no more delayed orders."
"RTN","ORCACT2",152,0)
 . ;S DIR(0)="YA",DIR("A")="Do you want to cancel this event? "
"RTN","ORCACT2",153,0)
 . ;S DIR("?")="Enter NO if you wish to enter new delayed orders for this event, otherwise enter YES to terminate it."
"RTN","ORCACT2",154,0)
 . ;S DIR("B")="YES" D ^DIR I $D(DTOUT)!$D(DUOUT) S ORQUIT=1 Q
"RTN","ORCACT2",155,0)
 . D CANCEL^OREVNTX(EVT) S X=$P($$NAME^OREVNTX(EVT)," ",2,99)
"RTN","ORCACT2",156,0)
 . W !,"   ... "_X_" event cancelled." H 1
"RTN","ORCACT2",157,0)
 . I $G(OREVENT),OREVENT=EVT D EX^OREVNT ;Return to Active Orders
"RTN","ORCACT2",158,0)
 Q
"RTN","ORCACT2",159,0)
 ;
"RTN","ORCACT2",160,0)
DCD(IFN) ; -- order discontinued already?
"RTN","ORCACT2",161,0)
 N STS,Y,I S Y=0 I '$G(IFN) Q 1
"RTN","ORCACT2",162,0)
 S STS=+$P($G(^OR(100,+IFN,3)),U,3)
"RTN","ORCACT2",163,0)
 I "^1^2^7^12^13^14^"[(U_STS_U) S Y=1 G DQ ;terminal sts
"RTN","ORCACT2",164,0)
 ;look for existing DC action awaiting ES:
"RTN","ORCACT2",165,0)
 S I=0 F  S I=+$O(^OR(100,+IFN,8,"C","DC",I)) Q:I<1  I $P($G(^OR(100,+IFN,8,I,0)),U,15)=11 S Y=1 Q
"RTN","ORCACT2",166,0)
DQ Q Y
"RTN","ORCACT2",167,0)
 ;
"RTN","ORCACT2",168,0)
CLRDLY(IFN) ; -- [old Clear delayed fields] Cancel delayed [event]order
"RTN","ORCACT2",169,0)
 N STS,ORX S IFN=+$G(IFN) Q:IFN'>0
"RTN","ORCACT2",170,0)
 Q:'$D(^OR(100,IFN,0))  S STS=$P($G(^(3)),U,3)
"RTN","ORCACT2",171,0)
 S ORX="Delayed "_$S(STS=10:"Order",1:"Release Event")_" Cancelled"
"RTN","ORCACT2",172,0)
 S ^OR(100,IFN,6)=$O(^ORD(100.02,"C","M",0))_U_DUZ_U_+$E($$NOW^XLFDT,1,12)_U_U_ORX
"RTN","ORCACT2",173,0)
 D STATUS^ORCSAVE2(IFN,13) S $P(^OR(100,IFN,8,1,0),U,15)=13
"RTN","ORCACT2",174,0)
 Q
"RTN","ORCACT4")
0^12^B46791333
"RTN","ORCACT4",1,0)
ORCACT4 ;SLC/MKB-Act on orders cont ; 08 May 2002  2:12 PM
"RTN","ORCACT4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,27,116,141,149**;Dec 17, 1997
"RTN","ORCACT4",3,0)
XX ; -- Edit/Change order ORIFN
"RTN","ORCACT4",4,0)
 N ORDIALOG,ORQUIT,FIRST,X,OREDIT,ORCHECK,ORSTS,ORDA,OR0,ORDG,ORNMSP,OREVENT,ORDUZ,ORLOG,ORTYPE
"RTN","ORCACT4",5,0)
 K ^TMP("ORWORD",$J) S FIRST=0,ORTYPE="D"
"RTN","ORCACT4",6,0)
 S OR0=$G(^OR(100,+ORIFN,0)),ORSTS=$P(^(3),U,3),ORDG=$P(OR0,U,11)
"RTN","ORCACT4",7,0)
 I $P(OR0,U,17),ORSTS=10 S OREVENT=$P(OR0,U,17)
"RTN","ORCACT4",8,0)
 S OREDIT=$S(ORSTS=11:0,ORSTS=10:0,1:1),ORNMSP=$$NMSP^ORCD($P(OR0,U,14))
"RTN","ORCACT4",9,0)
 S X=$P(OR0,U,5) I X'["101.41" D  ; 2.5
"RTN","ORCACT4",10,0)
 . N X,WP S ORDIALOG=$$PTR^ORCD("OR GXTEXT WORD PROCESSING ORDER")
"RTN","ORCACT4",11,0)
 . D GETDLG^ORCD(ORDIALOG) S WP=$$PTR^ORCD("OR GTX WORD PROCESSING 1")
"RTN","ORCACT4",12,0)
 . S ORDIALOG(WP,1)="^TMP(""ORWORD"","_$J_","_WP_",1)"
"RTN","ORCACT4",13,0)
 . M ^TMP("ORWORD",$J,WP,1)=^OR(100,+ORIFN,1) ; edit order text
"RTN","ORCACT4",14,0)
 . S X=$O(^TMP("ORWORD",$J,WP,1,0)) I X,$E(^(X,0),1,3)=">> " S ^TMP("ORWORD",$J,WP,1,X,0)=$E(^OR(100,+ORIFN,1,X,0),4,999)
"RTN","ORCACT4",15,0)
 I X["101.41" S ORDIALOG=+X S:$P($G(^ORD(101.41,+X,0)),U,4)'="D" ORDIALOG=+$P($G(^ORD(100.98,+$P(OR0,U,11),0)),U,4) D GETDLG^ORCD(ORDIALOG),GETORDER^ORCD(+ORIFN)
"RTN","ORCACT4",16,0)
 X:$D(^ORD(101.41,+ORDIALOG,3)) ^(3) G:$G(ORQUIT) XXQ ; entry action
"RTN","ORCACT4",17,0)
 D DISPLAY^ORCHECK ;pkg order checks
"RTN","ORCACT4",18,0)
XX1 D DIALOG^ORCDLG G:$G(ORQUIT)&FIRST XXQ
"RTN","ORCACT4",19,0)
 I '$$CHANGED W !!,"Nothing changed!" H 2 Q
"RTN","ORCACT4",20,0)
 D ACCEPT^ORCHECK(),DISPLAY^ORCDLG S X=$$OK(ORACT)
"RTN","ORCACT4",21,0)
 G:X="^" XXQ I X="E" K ORCHECK G XX1
"RTN","ORCACT4",22,0)
 I X="C" W !?10,"... changes cancelled.",! G XXQ
"RTN","ORCACT4",23,0)
 I X="P" D XX^ORCSAVE W !?10,$S(ORIFN:"... changes placed.",1:"ERROR"),! S:ORIFN ^TMP("ORNEW",$J,ORIFN,1)=""
"RTN","ORCACT4",24,0)
XXQ X:$D(^ORD(101.41,+ORDIALOG,4)) ^(4) K ^TMP("ORWORD",$J) ; exit action
"RTN","ORCACT4",25,0)
 Q
"RTN","ORCACT4",26,0)
 ;
"RTN","ORCACT4",27,0)
CHANGED() ; -- Returns 1 or 0, if order was actually changed
"RTN","ORCACT4",28,0)
 N OROLD,P,I,Y D GETORDER^ORCD(+ORIFN,"OROLD") S Y=0
"RTN","ORCACT4",29,0)
 S P=0 F  S P=$O(ORDIALOG(P)) Q:P'>0  D  Q:Y
"RTN","ORCACT4",30,0)
 . S I=0 F  S I=$O(OROLD(P,I)) Q:I'>0  D CHK Q:Y
"RTN","ORCACT4",31,0)
 . Q:Y  S I=0 F  S I=$O(ORDIALOG(P,I)) Q:I'>0  D CHK Q:Y
"RTN","ORCACT4",32,0)
 Q Y
"RTN","ORCACT4",33,0)
 ;
"RTN","ORCACT4",34,0)
CHK N OLD,NEW S OLD=$G(OROLD(P,I)),NEW=$G(ORDIALOG(P,I)) S:NEW'=OLD Y=1
"RTN","ORCACT4",35,0)
 ;I $E(ORDIALOG(P,0))'="W" S:NEW'=OLD Y=1 Q
"RTN","ORCACT4",36,0)
 ;I @OLD@(0)'=@NEW@(0) S Y=1
"RTN","ORCACT4",37,0)
 Q
"RTN","ORCACT4",38,0)
 ;
"RTN","ORCACT4",39,0)
RN ; -- Renew order ORIFN
"RTN","ORCACT4",40,0)
 N ORDIALOG,ORQUIT,FIRST,ORENEW,ORCHECK,ORDA,OR0,OR3,ORDG,ORNMSP,ORDUZ,ORLOG,ORTYPE,X
"RTN","ORCACT4",41,0)
 K ^TMP("ORWORD",$J) S FIRST=0,ORENEW=1,ORTYPE="D"
"RTN","ORCACT4",42,0)
 S OR0=$G(^OR(100,+ORIFN,0)),OR3=$G(^(3)),ORDIALOG=+$P(OR0,U,5)
"RTN","ORCACT4",43,0)
 S ORNMSP=$$NMSP^ORCD($P(OR0,U,14)),ORDG=$P(OR0,U,11)
"RTN","ORCACT4",44,0)
 I $P(OR3,U,9) D  Q:$G(ORQUIT)
"RTN","ORCACT4",45,0)
 . I $$DOSES($P(OR3,U,9))'>1 Q  ;dose+Now only - ok
"RTN","ORCACT4",46,0)
 . W !,$C(7),"This is part of a complex order, which must be renewed in its entirety:"
"RTN","ORCACT4",47,0)
 . S I=0 F  S I=$O(^OR(100,+$P(OR3,U,9),8,1,.1,I)) Q:I<1  S X=$G(^(I,0)) W:$$UP^XLFSTR(X)'=" FIRST DOSE NOW" !,X
"RTN","ORCACT4",48,0)
 . S:'$$OKALL ORQUIT=1 I '$G(ORQUIT) S ORIFN=+$P(OR3,U,9)
"RTN","ORCACT4",49,0)
 I $P(OR0,U,5)["101.41" S:$P($G(^ORD(101.41,ORDIALOG,0)),U,4)'="D" ORDIALOG=+$P($G(^ORD(100.98,+$P(OR0,U,11),0)),U,4) D GETDLG^ORCD(ORDIALOG),GETORDER^ORCD(+ORIFN) K ORDIALOG($$PTR^ORCD("OR GTX NOW"),1)
"RTN","ORCACT4",50,0)
 I $P(OR0,U,5)'["101.41" D  ; protocol -> use WP dialog for renewal
"RTN","ORCACT4",51,0)
 . N STOP,WP,X S ORDIALOG=$$PTR^ORCD("OR GXTEXT WORD PROCESSING ORDER")
"RTN","ORCACT4",52,0)
 . D GETDLG^ORCD(ORDIALOG)
"RTN","ORCACT4",53,0)
 . S WP=$$PTR^ORCD("OR GTX WORD PROCESSING 1"),ORDIALOG(WP,1)="^TMP(""ORWORD"","_$J_","_WP_",1)" M ^TMP("ORWORD",$J,WP,1)=^OR(100,+ORIFN,1)
"RTN","ORCACT4",54,0)
 . S X=$O(^TMP("ORWORD",$J,WP,1,0)) I X,$E(^(X,0),1,3)=">> " S ^TMP("ORWORD",$J,WP,1,X,0)=$E(^OR(100,+ORIFN,1,X,0),4,999)
"RTN","ORCACT4",55,0)
 . S STOP=$P(OR0,U,9) I STOP,STOP>$$NOW^XLFDT S ORDIALOG($$PTR^ORCD("OR GTX START DATE/TIME"),1)=STOP
"RTN","ORCACT4",56,0)
 X:$D(^ORD(101.41,+ORDIALOG,3)) ^(3) G:$G(ORQUIT) RNQ ; entry action
"RTN","ORCACT4",57,0)
 D DISPLAY^ORCHECK ;pkg order checks
"RTN","ORCACT4",58,0)
RN1 D DIALOG^ORCDLG G:$G(ORQUIT) RNQ
"RTN","ORCACT4",59,0)
 D ACCEPT^ORCHECK() S X="P"
"RTN","ORCACT4",60,0)
 I $G(ORCHECK) D DISPLAY^ORCDLG S X=$$OK(ORACT) G:X="^" RNQ
"RTN","ORCACT4",61,0)
 I X="C" W !?10,"... renewal cancelled.",! G RNQ
"RTN","ORCACT4",62,0)
 I X="P" D RN^ORCSAVE W !?10,$S(ORIFN:"... order renewed.",1:"ERROR"),! S:ORIFN ^TMP("ORNEW",$J,ORIFN,1)=""
"RTN","ORCACT4",63,0)
RNQ X:$D(^ORD(101.41,+ORDIALOG,4)) ^(4) K ^TMP("ORWORD",$J)
"RTN","ORCACT4",64,0)
 Q
"RTN","ORCACT4",65,0)
 ;
"RTN","ORCACT4",66,0)
DOSES(IFN) ; -- Return #doses in order IFN
"RTN","ORCACT4",67,0)
 N I,P,CNT S (I,CNT)=0
"RTN","ORCACT4",68,0)
 F  S I=$O(^OR(100,IFN,4.5,"ID","INSTR",I)) Q:I<1  S CNT=CNT+1
"RTN","ORCACT4",69,0)
 Q CNT
"RTN","ORCACT4",70,0)
 ;
"RTN","ORCACT4",71,0)
OKALL() ; -- OK to renew all child orders of complex?
"RTN","ORCACT4",72,0)
 N X,Y,DIR,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","ORCACT4",73,0)
 S DIR(0)="YA",DIR("A")=" ...OK? ",DIR("B")="YES"
"RTN","ORCACT4",74,0)
 S DIR("?")="Enter YES to continue and renew the entire complex order as shown, or NO to quit."
"RTN","ORCACT4",75,0)
 D ^DIR S:$D(DTOUT)!(X["^") Y="^"
"RTN","ORCACT4",76,0)
 Q Y
"RTN","ORCACT4",77,0)
 ;
"RTN","ORCACT4",78,0)
RW ; -- Rewrite order ORIFN
"RTN","ORCACT4",79,0)
 N ORDIALOG,ORQUIT,FIRST,OREWRITE,ORCHECK,ORDA,OR0,ORDG,ORNMSP,ORDUZ,ORLOG,ORTYPE,X
"RTN","ORCACT4",80,0)
 K ^TMP("ORWORD",$J) S FIRST=1,OREWRITE=1,ORTYPE="D"
"RTN","ORCACT4",81,0)
 S OR0=$G(^OR(100,+ORIFN,0)),ORNMSP=$$NMSP^ORCD($P(OR0,U,14)),ORDG=$P(OR0,U,11),ORDIALOG=+$P(OR0,U,5)
"RTN","ORCACT4",82,0)
 I $P(OR0,U,5)["101.41" D  ;get dialog, responses
"RTN","ORCACT4",83,0)
 . S:$P($G(^ORD(101.41,ORDIALOG,0)),U,4)'="D" ORDIALOG=+$P($G(^ORD(100.98,+$P(OR0,U,11),0)),U,4)
"RTN","ORCACT4",84,0)
 . I ORNMSP="PS",$G(OREVENT) D  ;use generic Meds dlg
"RTN","ORCACT4",85,0)
 .. N X S X=$P($G(^ORD(100.98,+ORDG,0)),U,3)
"RTN","ORCACT4",86,0)
 .. Q:X="IV RX"  Q:X="SPLY"  ;don't switch these
"RTN","ORCACT4",87,0)
 .. S ORDIALOG=+$O(^ORD(101.41,"AB","PS MEDS",0))
"RTN","ORCACT4",88,0)
 . D GETDLG^ORCD(ORDIALOG),GETORDER^ORCD(+ORIFN)
"RTN","ORCACT4",89,0)
 I $P(OR0,U,5)'["101.41" D  ; protocol -> use WP dialog for renewal
"RTN","ORCACT4",90,0)
 . N WP,X S ORDIALOG=$$PTR^ORCD("OR GXTEXT WORD PROCESSING ORDER")
"RTN","ORCACT4",91,0)
 . D GETDLG^ORCD(ORDIALOG)
"RTN","ORCACT4",92,0)
 . S WP=$$PTR^ORCD("OR GTX WORD PROCESSING 1"),ORDIALOG(WP,1)="^TMP(""ORWORD"","_$J_","_WP_",1)" M ^TMP("ORWORD",$J,WP,1)=^OR(100,+ORIFN,1)
"RTN","ORCACT4",93,0)
 . S X=$O(^TMP("ORWORD",$J,WP,1,0)) I X,$E(^(X,0),1,3)=">> " S ^TMP("ORWORD",$J,WP,1,X,0)=$E(^OR(100,+ORIFN,1,X,0),4,999)
"RTN","ORCACT4",94,0)
 X:$D(^ORD(101.41,+ORDIALOG,3)) ^(3) G:$G(ORQUIT) RWQ
"RTN","ORCACT4",95,0)
 D DISPLAY^ORCHECK ;pkg order checks
"RTN","ORCACT4",96,0)
RW1 D DIALOG^ORCDLG G:$G(ORQUIT)&FIRST RWQ
"RTN","ORCACT4",97,0)
 D ACCEPT^ORCHECK() ;($S(FIRST:"ALL",1:""))
"RTN","ORCACT4",98,0)
 I $G(OREVENT),$G(^ORE(100.2,+OREVENT,1)) D  ;event occurred
"RTN","ORCACT4",99,0)
 . W !!,"This release event has occurred since you started copying delayed orders."
"RTN","ORCACT4",100,0)
 . W !,"The orders that were signed have now been released; this and any other"
"RTN","ORCACT4",101,0)
 . W !,"unsigned orders will be released immediately upon signature."
"RTN","ORCACT4",102,0)
 . N X W !!,"Press <return> to continue ..." R X:DTIME K OREVENT
"RTN","ORCACT4",103,0)
 D DISPLAY^ORCDLG S X=$$OK^ORCDLG G:X="^" RWQ
"RTN","ORCACT4",104,0)
 I X="E" S FIRST=0 K ORCHECK G RW1
"RTN","ORCACT4",105,0)
 I X="C" W !?10,"... order cancelled.",! G RWQ
"RTN","ORCACT4",106,0)
 I X="P" D
"RTN","ORCACT4",107,0)
 . N OLDIFN S OLDIFN=+ORIFN K ORIFN D EN^ORCSAVE
"RTN","ORCACT4",108,0)
 . W !?10,$S($G(ORIFN):"... order rewritten.",1:"ERROR"),!
"RTN","ORCACT4",109,0)
 . I $G(ORIFN) S ^TMP("ORNEW",$J,ORIFN,1)="" S:$D(^OR(100,OLDIFN,5)) ^OR(100,ORIFN,5)=^OR(100,OLDIFN,5)
"RTN","ORCACT4",110,0)
RWQ X:$D(^ORD(101.41,+ORDIALOG,4)) ^(4) K ^TMP("ORWORD",$J)
"RTN","ORCACT4",111,0)
 Q
"RTN","ORCACT4",112,0)
 ;
"RTN","ORCACT4",113,0)
HD ; -- Hold order ORIFN
"RTN","ORCACT4",114,0)
 N X S X=$$ACTION^ORCSAVE(ORACT,+ORIFN,ORNP) Q:'X
"RTN","ORCACT4",115,0)
 S ^TMP("ORNEW",$J,+ORIFN,X)=""
"RTN","ORCACT4",116,0)
 W !?10,"... hold order placed."
"RTN","ORCACT4",117,0)
 Q
"RTN","ORCACT4",118,0)
 ;
"RTN","ORCACT4",119,0)
RL ; -- Release hold on order ORIFN
"RTN","ORCACT4",120,0)
 N X S X=$$ACTION^ORCSAVE(ORACT,+ORIFN,ORNP) Q:'X
"RTN","ORCACT4",121,0)
 S ^TMP("ORNEW",$J,+ORIFN,X)=""
"RTN","ORCACT4",122,0)
 W !?10,"... release hold order placed."
"RTN","ORCACT4",123,0)
 Q
"RTN","ORCACT4",124,0)
 ;
"RTN","ORCACT4",125,0)
OK(ACT) ; -- Ready to save?
"RTN","ORCACT4",126,0)
 N X,Y,DIR
"RTN","ORCACT4",127,0)
 S DIR(0)="SA^P:PLACE;C:CANCEL;"_$S(ACT'="RN":"E:EDIT;",1:"")
"RTN","ORCACT4",128,0)
 S:ACT="XX" DIR("A")="(P)lace, (E)dit, or (C)ancel changes? ",DIR("?")="Enter P to save the changes to this order, or E to change any of the displayed values; enter C to quit without changing this order"
"RTN","ORCACT4",129,0)
 S:ACT="RN" DIR("A")="(P)lace or (C)ancel renewal? ",DIR("?")="Enter P to save this renewal or C to quit without renewing this order"
"RTN","ORCACT4",130,0)
 S DIR("B")="PLACE" D ^DIR S:$D(DTOUT) Y="^"
"RTN","ORCACT4",131,0)
 Q Y
"RTN","ORCDPS1")
0^24^B68567933
"RTN","ORCDPS1",1,0)
ORCDPS1 ;SLC/MKB-Pharmacy dialog utilities ; 08 May 2002  2:12 PM
"RTN","ORCDPS1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**94,117,141,149**;Dec 17, 1997
"RTN","ORCDPS1",3,0)
EN(TYPE) ; -- entry action for Meds dialogs
"RTN","ORCDPS1",4,0)
 S ORINPT=$$INPT^ORCD,ORCAT=$G(TYPE) I ORCAT="" D
"RTN","ORCDPS1",5,0)
 . I $G(ORENEW)!$G(OREWRITE)!$D(OREDIT),$L($P($G(OR0),U,12)) S ORCAT=$P(OR0,U,12) Q  ;use value from order, via ORCACT4
"RTN","ORCDPS1",6,0)
 . S ORCAT=$S(ORINPT:"I",1:"O")
"RTN","ORCDPS1",7,0)
 S ORDG=+$O(^ORD(100.98,"B",$S(ORCAT="I":"UD RX",1:"O RX"),0))
"RTN","ORCDPS1",8,0)
 K ^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORCDPS1",9,0)
 I $G(ORENEW)!$G(OREWRITE)!$D(OREDIT)!$G(ORXFER) D
"RTN","ORCDPS1",10,0)
 . K ORDIALOG($$PTR("START DATE/TIME"),1)
"RTN","ORCDPS1",11,0)
 . K ORDIALOG($$PTR("NOW"),1) Q:ORCAT'="O"
"RTN","ORCDPS1",12,0)
 . I $G(OREDIT)!$G(OREWRITE) N PI S PI=$$PTR("PATIENT INSTRUCTIONS") K ORDIALOG(PI,1),^TMP("ORWORD",$J,PI) ;start over
"RTN","ORCDPS1",13,0)
 . I $D(OREDIT),'$O(ORDIALOG($$PTR^ORCD("OR GTX INSTRUCTIONS"),0)) K ^TMP("ORWORD",$J)
"RTN","ORCDPS1",14,0)
 I ORINPT,ORCAT="O" W $C(7),!!,"NOTE: This will create an outpatient prescription for an inpatient!",!
"RTN","ORCDPS1",15,0)
 Q
"RTN","ORCDPS1",16,0)
 ;
"RTN","ORCDPS1",17,0)
EN1 ; -- setup Meds dialog for quick order editor using ORDG
"RTN","ORCDPS1",18,0)
 N DG S DG=$P($G(^ORD(100.98,+$G(ORDG),0)),U,3)
"RTN","ORCDPS1",19,0)
 I $P(DG," ")="O" S ORINPT=0,ORCAT="O"
"RTN","ORCDPS1",20,0)
 E  S ORINPT=1,ORCAT="I"
"RTN","ORCDPS1",21,0)
 K ^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORCDPS1",22,0)
 Q
"RTN","ORCDPS1",23,0)
 ;
"RTN","ORCDPS1",24,0)
ENOI ; -- setup OI prompt
"RTN","ORCDPS1",25,0)
 N D S D=$G(ORDIALOG(PROMPT,"D"))
"RTN","ORCDPS1",26,0)
 S:D="S.RX" ORDIALOG(PROMPT,"D")=$S(ORCAT="I":"S.UD RX",1:"S.O RX")
"RTN","ORCDPS1",27,0)
 I ORCAT="I",'ORINPT,D="S.UD RX" D  ;limit to IV meds for outpt's
"RTN","ORCDPS1",28,0)
 . S ORDG=+$O(^ORD(100.98,"B","O RX",0)),ORDIALOG(PROMPT,"D")="S.IVM RX"
"RTN","ORCDPS1",29,0)
 . S ORDIALOG(PROMPT,"?")="Enter the IV medication you wish to order for this patient."
"RTN","ORCDPS1",30,0)
 Q
"RTN","ORCDPS1",31,0)
 ;
"RTN","ORCDPS1",32,0)
DEA ; -- ck DEA# of ordering provider if SchedII drug
"RTN","ORCDPS1",33,0)
 Q:$G(ORTYPE)="Z"  N DEAFLG,PSOI
"RTN","ORCDPS1",34,0)
 S PSOI=+$P($G(^ORD(101.43,+$G(Y),0)),U,2) Q:PSOI'>0
"RTN","ORCDPS1",35,0)
 S DEAFLG=$$OIDEA^PSSUTLA1(PSOI,ORCAT) Q:DEAFLG'>0  ;ok
"RTN","ORCDPS1",36,0)
 I $G(ORNP),'$L($P($G(^VA(200,+ORNP,"PS")),U,2)),'$L($P($G(^("PS")),U,3)) W $C(7),!,$P($G(^(0)),U)_" must have a DEA# or VA# to order this drug!" K DONE Q
"RTN","ORCDPS1",37,0)
 I DEAFLG=1 W $C(7),!,"This order will require a wet signature!"
"RTN","ORCDPS1",38,0)
 Q
"RTN","ORCDPS1",39,0)
 ;
"RTN","ORCDPS1",40,0)
CHANGED(X) ; -- Kill dependent values when prompt X changes
"RTN","ORCDPS1",41,0)
 N PROMPTS,NAME,PTR,P,I
"RTN","ORCDPS1",42,0)
 S PROMPTS=X I X="OI" D
"RTN","ORCDPS1",43,0)
 . S PROMPTS="INSTRUCTIONS^ROUTE^SCHEDULE^START DATE/TIME^DURATION^AND/THEN^DOSE^DISPENSE DRUG^SIG^PATIENT INSTRUCTIONS^DAYS SUPPLY^QUANTITY^REFILLS^SERVICE CONNECTED"
"RTN","ORCDPS1",44,0)
 . K ORDRUG,ORDOSE,OROUTE,ORSCH,ORSD,ORDSUP,ORQTY,ORQTYUNT,OREFILLS,ORCOPAY
"RTN","ORCDPS1",45,0)
 . K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORCDPS1",46,0)
 I X="DS" S PROMPTS="QUANTITY^REFILLS" K OREFILLS
"RTN","ORCDPS1",47,0)
 F P=1:1:$L(PROMPTS,U) S NAME=$P(PROMPTS,U,P) D
"RTN","ORCDPS1",48,0)
 . S PTR=$$PTR(NAME) Q:'PTR
"RTN","ORCDPS1",49,0)
 . S I=0 F  S I=$O(ORDIALOG(PTR,I)) Q:I'>0  K ORDIALOG(PTR,I)
"RTN","ORCDPS1",50,0)
 . K ORDIALOG(PTR,"LIST"),^TMP("ORWORD",$J,PTR)
"RTN","ORCDPS1",51,0)
 Q
"RTN","ORCDPS1",52,0)
 ;
"RTN","ORCDPS1",53,0)
ORDITM(OI) ; -- Check OI inactive date & type, get dependent info
"RTN","ORCDPS1",54,0)
 Q:OI'>0  ;quit - no value
"RTN","ORCDPS1",55,0)
 N ORPS,PSOI S ORPS=$G(^ORD(101.43,+OI,"PS")),PSOI=+$P($G(^(0)),U,2)
"RTN","ORCDPS1",56,0)
 S ORIV=$S($P(ORPS,U)=2:1,1:0)
"RTN","ORCDPS1",57,0)
 I $G(ORCAT)="O",'$P(ORPS,U,2) W $C(7),!,"This drug may not be used in an outpatient order." S ORQUIT=1 D WAIT Q
"RTN","ORCDPS1",58,0)
 I $G(ORCAT)="I" D  Q:$G(ORQUIT)
"RTN","ORCDPS1",59,0)
 . I $G(ORINPT),'$P(ORPS,U) W $C(7),!,"This drug may not be used in an inpatient order." S ORQUIT=1 D WAIT Q
"RTN","ORCDPS1",60,0)
 . I '$G(ORINPT),'ORIV W $C(7),!,"This drug may not be ordered for an outpatient." S ORQUIT=1 D WAIT Q
"RTN","ORCDPS1",61,0)
 I $G(ORTYPE)="Q" D  I $G(ORQUIT) D WAIT Q
"RTN","ORCDPS1",62,0)
 . N DEAFLG S DEAFLG=$$OIDEA^PSSUTLA1(PSOI,ORCAT) Q:DEAFLG'>0  ;ok
"RTN","ORCDPS1",63,0)
 . I $G(ORNP),'$L($P($G(^VA(200,+ORNP,"PS")),U,2)),'$L($P($G(^("PS")),U,3)) W $C(7),!,$P($G(^(0)),U)_" must have a DEA# or VA# to order this drug!" S ORQUIT=1 Q
"RTN","ORCDPS1",64,0)
 . I DEAFLG=1 W $C(7),!,"This order will require a wet signature!"
"RTN","ORCDPS1",65,0)
OI1 ; -ck NF status
"RTN","ORCDPS1",66,0)
 I $P(ORPS,U,6),'$G(ORENEW) D  ;prompt for alternative
"RTN","ORCDPS1",67,0)
 . W !!,"*** This medication is not in the formulary! ***"
"RTN","ORCDPS1",68,0)
 . N PSX,CNT,ORX,DIR,X,Y,DTOUT,DUOUT
"RTN","ORCDPS1",69,0)
 . D EN1^PSSUTIL1(.PSOI,ORCAT) I '$O(PSOI(0)) D  Q
"RTN","ORCDPS1",70,0)
 .. W !,"    There are no formulary alternatives entered for this item."
"RTN","ORCDPS1",71,0)
 .. W !,"    Please consult with your pharmacy before ordering it."
"RTN","ORCDPS1",72,0)
 . S PSX=0,CNT=0 F  S PSX=$O(PSOI(PSX)) Q:PSX'>0  D
"RTN","ORCDPS1",73,0)
 .. S ORX=+$O(^ORD(101.43,"ID",PSX_";99PSP",0)) Q:ORX'>0
"RTN","ORCDPS1",74,0)
 .. S CNT=CNT+1,PSOI("OI",CNT)=ORX_U_PSX
"RTN","ORCDPS1",75,0)
 .. S DIR("A",CNT)=$J(CNT,3)_" "_$P($G(^ORD(101.43,ORX,0)),U)
"RTN","ORCDPS1",76,0)
 . S DIR(0)="NAO^1:"_CNT,DIR("A")="Select alternative (or <return> to continue): "
"RTN","ORCDPS1",77,0)
 . S DIR("?")="The medication selected is not in the formulary; you may select one of the above listed alternatives instead, or press <return> to continue processing this order."
"RTN","ORCDPS1",78,0)
 . Q:CNT'>0  W !,"    Formulary alternatives:" D ^DIR
"RTN","ORCDPS1",79,0)
 . I Y'>0 S:$D(DTOUT)!$D(DUOUT) ORQUIT=1 Q
"RTN","ORCDPS1",80,0)
 . D:OI'=+PSOI("OI",+Y) CHANGED("OI") ;reset parameters if different
"RTN","ORCDPS1",81,0)
 . S OI=+PSOI("OI",+Y),ORDIALOG(PROMPT,INST)=OI,OROI=OI
"RTN","ORCDPS1",82,0)
 . S PSOI=+$P(PSOI("OI",+Y),U,2)
"RTN","ORCDPS1",83,0)
OI2 ; -get selectable routes, doses [also called from NF^ORCDPS]
"RTN","ORCDPS1",84,0)
 D:'$D(^TMP("PSJMR",$J)) START^PSSJORDF(PSOI,$G(ORCAT))
"RTN","ORCDPS1",85,0)
 I '$D(ORDOSE) D
"RTN","ORCDPS1",86,0)
 . D DOSE^PSSORUTL(.ORDOSE,PSOI,$S($G(ORCAT)="I":"U",1:"O"),+ORVP)
"RTN","ORCDPS1",87,0)
 . K:$G(ORDOSE(1))=-1 ORDOSE
"RTN","ORCDPS1",88,0)
 Q
"RTN","ORCDPS1",89,0)
 ;
"RTN","ORCDPS1",90,0)
NFI(OI) ; -- Show NFI restrictions, if exist
"RTN","ORCDPS1",91,0)
 N PSOI,I,J,LCNT,MAX,X,STOP
"RTN","ORCDPS1",92,0)
 S PSOI=+$P($G(^ORD(101.43,+$G(OI),0)),U,2)
"RTN","ORCDPS1",93,0)
 D EN^PSSDIN(PSOI,"") Q:'$D(^TMP("PSSDIN",$J,"OI",PSOI))
"RTN","ORCDPS1",94,0)
 S I=0,LCNT=0,MAX=$S($G(IOBM)&$G(IOTM):IOBM-IOTM+1,1:24) W !
"RTN","ORCDPS1",95,0)
 F  S I=$O(^TMP("PSSDIN",$J,"OI",PSOI,I)) Q:I'>0  D
"RTN","ORCDPS1",96,0)
 . S J=0 F  S J=$O(^TMP("PSSDIN",$J,"OI",PSOI,I,J)) Q:J'>0  S X=$G(^(J)) D  Q:$G(STOP)
"RTN","ORCDPS1",97,0)
 .. S LCNT=LCNT+1 I LCNT'<MAX S:'$$CONT STOP=1 Q:$G(STOP)  S LCNT=1
"RTN","ORCDPS1",98,0)
 .. W !,X
"RTN","ORCDPS1",99,0)
 W ! K ^TMP("PSSDIN",$J,"OI",PSOI)
"RTN","ORCDPS1",100,0)
 Q
"RTN","ORCDPS1",101,0)
 ;
"RTN","ORCDPS1",102,0)
CONT() ; -- Press return to cont or ^ to stop
"RTN","ORCDPS1",103,0)
 N X,Y,DIR,DUOUT,DTOUT,DIRUT,DIROUT S DIR(0)="EA"
"RTN","ORCDPS1",104,0)
 S DIR("A")="Press <return> to continue or ^ to stop ..."
"RTN","ORCDPS1",105,0)
 D ^DIR S:$D(DUOUT)!$D(DTOUT) Y=""
"RTN","ORCDPS1",106,0)
 Q +Y
"RTN","ORCDPS1",107,0)
 ;
"RTN","ORCDPS1",108,0)
WAIT ; -- Wait for user
"RTN","ORCDPS1",109,0)
 N X W !,"Press <return> to continue ..." R X:DTIME
"RTN","ORCDPS1",110,0)
 Q
"RTN","ORCDPS1",111,0)
 ;
"RTN","ORCDPS1",112,0)
ROUTES ; -- Get allowable med routes
"RTN","ORCDPS1",113,0)
 Q:$G(ORDIALOG(PROMPT,"LIST"))  N I,X,CNT S (I,CNT)=0
"RTN","ORCDPS1",114,0)
 F  S I=$O(^TMP("PSJMR",$J,I)) Q:I'>0  S X=^(I),CNT=CNT+1,ORDIALOG(PROMPT,"LIST",CNT)=$P(X,U,3)_U_$P(X,U,1,2),ORDIALOG(PROMPT,"LIST","B",$P(X,U))=$P(X,U,3)
"RTN","ORCDPS1",115,0)
 S:$G(CNT) ORDIALOG(PROMPT,"LIST")=CNT
"RTN","ORCDPS1",116,0)
 S:$G(ORTYPE)'="Z" REQD=$S(ORCAT="I":1,$P($G(^ORD(101.43,+$G(OROI),"PS")),U,5):0,1:1)
"RTN","ORCDPS1",117,0)
 Q
"RTN","ORCDPS1",118,0)
 ;
"RTN","ORCDPS1",119,0)
DEFRTE ; -- Get default route
"RTN","ORCDPS1",120,0)
 N INST1 S INST1=$O(ORDIALOG(PROMPT,0)) S:INST1'>0 INST1=INST ;1st inst
"RTN","ORCDPS1",121,0)
 I INST1=INST S Y=+$P($G(^TMP("PSJMR",$J,1)),U,3) K:Y'>0 Y Q
"RTN","ORCDPS1",122,0)
 S Y=+$G(ORDIALOG(PROMPT,INST1)) K:Y'>0 Y S:$G(Y) EDITONLY=1
"RTN","ORCDPS1",123,0)
 Q
"RTN","ORCDPS1",124,0)
 ;
"RTN","ORCDPS1",125,0)
CKSCH ; -- validate schedule [Called from P-S Action]
"RTN","ORCDPS1",126,0)
 N ORX S ORX=ORDIALOG(PROMPT,ORI) Q:ORX=$G(ORESET)  K ORSD ;reset
"RTN","ORCDPS1",127,0)
 D EN^PSSGS0(.ORX,$G(ORCAT))
"RTN","ORCDPS1",128,0)
 I $D(ORX) S ORDIALOG(PROMPT,ORI)=ORX D CHANGED("QUANTITY") Q  ;ok
"RTN","ORCDPS1",129,0)
 W $C(7),!,"Enter either a standard administration schedule or one of your own,",!,"up to 70 characters and no more than 2 spaces.",!
"RTN","ORCDPS1",130,0)
 K DONE
"RTN","ORCDPS1",131,0)
 Q
"RTN","ORCDPS1",132,0)
 ;
"RTN","ORCDPS1",133,0)
DEFCONJ ; -- Set default conjuction for previous instance
"RTN","ORCDPS1",134,0)
 ;    (Called from P-S Action of Instructions prompt)
"RTN","ORCDPS1",135,0)
 N LAST,DUR,CONJ
"RTN","ORCDPS1",136,0)
 S LAST=$O(ORDIALOG(PROMPT,ORI),-1) Q:LAST'>0  ;first instance
"RTN","ORCDPS1",137,0)
 S CONJ=$$PTR("AND/THEN") Q:$L($G(ORDIALOG(CONJ,LAST)))
"RTN","ORCDPS1",138,0)
 S DUR=$G(ORDIALOG($$PTR("DURATION"),LAST))
"RTN","ORCDPS1",139,0)
 S ORDIALOG(CONJ,LAST)=$S(+DUR'>0:"A",1:"T")
"RTN","ORCDPS1",140,0)
 Q
"RTN","ORCDPS1",141,0)
 ;
"RTN","ORCDPS1",142,0)
ENCONJ ; -- Get allowable values, if req'd for INST
"RTN","ORCDPS1",143,0)
 N P S P=$$PTR("INSTRUCTIONS")
"RTN","ORCDPS1",144,0)
 S REQD=$S($O(ORDIALOG(P,INST)):1,1:0)
"RTN","ORCDPS1",145,0)
 S ORDIALOG(PROMPT,"A")="And/then"_$S(ORCAT="O":"/except: ",1:": ")
"RTN","ORCDPS1",146,0)
 S $P(ORDIALOG(PROMPT,0),U,2)="A:AND;T:THEN;"_$S(ORCAT="O":"X:EXCEPT;",1:"")
"RTN","ORCDPS1",147,0)
 Q
"RTN","ORCDPS1",148,0)
 ;
"RTN","ORCDPS1",149,0)
DSUP ; -- Get max/default days supply
"RTN","ORCDPS1",150,0)
 N ORX,Y
"RTN","ORCDPS1",151,0)
 S ORX("PATIENT")=+$G(ORVP),ORX("DRUG")=+$G(ORDRUG)
"RTN","ORCDPS1",152,0)
 D DSUP^PSOSIGDS(.ORX) S Y=+$G(ORX("DAYS SUPPLY")) S:Y'>0 Y=90
"RTN","ORCDPS1",153,0)
 ;S $P(ORDIALOG(PROMPT,0),U,2)="1:"_Y ;max allowed
"RTN","ORCDPS1",154,0)
 I '$G(ORDIALOG(PROMPT,1)),$G(ORTYPE)'="Z" S ORDIALOG(PROMPT,1)=Y
"RTN","ORCDPS1",155,0)
 Q
"RTN","ORCDPS1",156,0)
 ;
"RTN","ORCDPS1",157,0)
QTY() ; -- Return default quantity [Expects ORDSUP]
"RTN","ORCDPS1",158,0)
 N INSTR,DOSE,DUR,SCH,I,ORX,X,Y
"RTN","ORCDPS1",159,0)
 S Y="" I $G(ORDSUP)'>0!'$G(ORDRUG) G QTYQ ;need days supply, disp drug
"RTN","ORCDPS1",160,0)
 S INSTR=$$PTR("INSTRUCTIONS")
"RTN","ORCDPS1",161,0)
 S DOSE=$$PTR("DOSE"),CONJ=$$PTR("AND/THEN")
"RTN","ORCDPS1",162,0)
 S DUR=$$PTR("DURATION"),SCH=$$PTR("SCHEDULE")
"RTN","ORCDPS1",163,0)
 S I=0 F  S I=$O(ORDIALOG(INSTR,I)) Q:I'>0  D  Q:'$D(ORX)
"RTN","ORCDPS1",164,0)
 . S X=$P($G(ORDIALOG(DOSE,I)),"&",3) I X'>0 K ORX Q
"RTN","ORCDPS1",165,0)
 . S ORX("DOSE ORDERED",I)=X,ORX("SCHEDULE",I)=$G(ORDIALOG(SCH,I))
"RTN","ORCDPS1",166,0)
 . S X=$G(ORDIALOG(DUR,I)),ORX("DURATION",I)=$$HL7DUR^ORMBLDPS
"RTN","ORCDPS1",167,0)
 . S ORX("CONJUNCTION",I)=$G(ORDIALOG(CONJ,I))
"RTN","ORCDPS1",168,0)
 G:'$D(ORX) QTYQ ;no doses
"RTN","ORCDPS1",169,0)
 S ORX("PATIENT")=+$G(ORVP),ORX("DRUG")=+$G(ORDRUG)
"RTN","ORCDPS1",170,0)
 S ORX("DAYS SUPPLY")=+$G(ORDSUP)
"RTN","ORCDPS1",171,0)
 D QTYX^PSOSIG(.ORX) S Y=$G(ORX("QTY"))
"RTN","ORCDPS1",172,0)
QTYQ Q Y
"RTN","ORCDPS1",173,0)
 ;
"RTN","ORCDPS1",174,0)
MAXREFS ; -- Get max refills allowed [Entry Action]
"RTN","ORCDPS1",175,0)
 Q:$G(ORCAT)'="O"  N ORX,X
"RTN","ORCDPS1",176,0)
 S ORX("ITEM")=+$P($G(^ORD(101.43,+$G(OROI),0)),U,2)
"RTN","ORCDPS1",177,0)
 S ORX("DRUG")=+$G(ORDRUG),ORX("PATIENT")=+$G(ORVP)
"RTN","ORCDPS1",178,0)
 I $G(OREVENT),$$TYPE^OREVNTX(OREVENT)="D" S ORX("DISCHARGE")=1
"RTN","ORCDPS1",179,0)
 S ORX("DAYS SUPPLY")=$G(ORDSUP) D MAX^PSOSIGDS(.ORX)
"RTN","ORCDPS1",180,0)
 S OREFILLS=$G(ORX("MAX")),X=$G(ORDIALOG(PROMPT,INST))
"RTN","ORCDPS1",181,0)
 I OREFILLS'>0 K ORDIALOG(PROMPT,INST) W !,"No refills allowed." Q
"RTN","ORCDPS1",182,0)
 S $P(ORDIALOG(PROMPT,0),U,2)="0:"_OREFILLS
"RTN","ORCDPS1",183,0)
 S ORDIALOG(PROMPT,"A")="Refills (0-"_OREFILLS_"): "
"RTN","ORCDPS1",184,0)
 I X,X>OREFILLS S ORDIALOG(PROMPT,INST)=OREFILLS
"RTN","ORCDPS1",185,0)
 Q
"RTN","ORCDPS1",186,0)
 ;
"RTN","ORCDPS1",187,0)
ASKSC() ; -- Return 1 or 0, if SC prompt should be asked
"RTN","ORCDPS1",188,0)
 I $$SC^PSOCP(+ORVP,+$G(ORDRUG)) Q 0
"RTN","ORCDPS1",189,0)
 ;I $$RXST^IBARXEU(+ORVP)>0 Q 0 ;exempt from copay
"RTN","ORCDPS1",190,0)
 Q 1
"RTN","ORCDPS1",191,0)
 ;
"RTN","ORCDPS1",192,0)
PTR(X) ; -- Return ptr to prompt OR GTX X
"RTN","ORCDPS1",193,0)
 Q +$O(^ORD(101.41,"AB","OR GTX "_X,0))
"RTN","ORCDPS1",194,0)
 ;
"RTN","ORCDPS1",195,0)
EXIT ; -- exit action for Meds dialogs
"RTN","ORCDPS1",196,0)
 S:$G(ORXNP) ORNP=ORXNP
"RTN","ORCDPS1",197,0)
 K ORXNP,ORINPT,ORCAT,ORPKG,OROI,ORIV,ORDRUG,ORDOSE,OROUTE,ORSCH,ORSD,ORDSUP,OREFILLS,ORQTY,ORQTYUNT,ORCOPAY,PSJNOPC,ORCOMPLX
"RTN","ORCDPS1",198,0)
 K ^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORCDPS1",199,0)
 Q
"RTN","ORCDPS3")
0^26^B35354636
"RTN","ORCDPS3",1,0)
ORCDPS3 ;SLC/MKB-Pharmacy dialog utilities ;11/25/02  09:47
"RTN","ORCDPS3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**94,116,134,158,149**;Dec 17, 1997
"RTN","ORCDPS3",3,0)
 ;
"RTN","ORCDPS3",4,0)
START ; -- Start Date entry action
"RTN","ORCDPS3",5,0)
 S $P(ORDIALOG(PROMPT,0),":",3)=$S($G(ORCAT)="I":"ETRX",1:"EX")
"RTN","ORCDPS3",6,0)
 I $G(ORCAT)'="I" K ORSD K:$G(ORENEW)!$G(OREWRITE)!$D(OREDIT) ORDIALOG(PROMPT,INST) ;Inpt only
"RTN","ORCDPS3",7,0)
 Q
"RTN","ORCDPS3",8,0)
 ;
"RTN","ORCDPS3",9,0)
ADMIN ; -- Return default admin time for order in ORSD
"RTN","ORCDPS3",10,0)
 ;    Called from EXDOSE^ORCDPS2
"RTN","ORCDPS3",11,0)
 Q:$D(ORSD)  Q:$G(ORCAT)'="I"  ;inpt only
"RTN","ORCDPS3",12,0)
 N PSOI,PSIFN,SCH,CNJ,ORI,ORX
"RTN","ORCDPS3",13,0)
 S PSOI=+$P($G(^ORD(101.43,+$G(OROI),0)),U,2)
"RTN","ORCDPS3",14,0)
 S PSIFN=$S($G(ORENEW):$G(^OR(100,+$G(ORIFN),4)),1:"")
"RTN","ORCDPS3",15,0)
 S SCH=$$PTR^ORCD("OR GTX SCHEDULE"),CNJ=$$PTR^ORCD("OR GTX AND/THEN"),ORX=""
"RTN","ORCDPS3",16,0)
 S ORI=0 F  S ORI=$O(ORDIALOG(PROMPT,ORI)) Q:ORI<1  S ORX=ORX_$S($L(ORX):U,1:"")_$G(ORDIALOG(CNJ,ORI))_";"_$G(ORDIALOG(SCH,ORI))
"RTN","ORCDPS3",17,0)
 S ORSD=$$FIRST(+ORVP,+$G(ORWARD),PSOI,ORX,PSIFN)
"RTN","ORCDPS3",18,0)
 S:$P(ORSD,U)="NEXT" ORSD="NEXTA^"_$P(ORSD,U,2,99)
"RTN","ORCDPS3",19,0)
 Q
"RTN","ORCDPS3",20,0)
 ;
"RTN","ORCDPS3",21,0)
FIRST(DFN,WARD,OI,DATA,ORDER)   ; -- Return expected first admin time of order
"RTN","ORCDPS3",22,0)
 N ORCNT,ORI,J,ORZ,Y,SCH,ORX I '$G(DFN)!'$G(OI) Q ""
"RTN","ORCDPS3",23,0)
 S ORCNT=0 F ORI=1:1:$L(DATA,"^") S ORZ=$P(DATA,U,ORI) D  Q:$E(ORZ)="T"
"RTN","ORCDPS3",24,0)
 . S SCH=$P(ORZ,";",2) Q:'$L(SCH)  S ORCNT=ORCNT+1
"RTN","ORCDPS3",25,0)
 . S ORX(ORCNT)=$$STARTSTP^PSJORPOE(DFN,SCH,OI,WARD,$G(ORDER))
"RTN","ORCDPS3",26,0)
 S Y=9999999,J=0
"RTN","ORCDPS3",27,0)
 F ORI=1:1:ORCNT S ORZ=$P(ORX(ORI),U,4) I ORZ<Y S Y=ORZ,J=ORI ;earliest
"RTN","ORCDPS3",28,0)
 S Y=$S(J:ORX(J),1:"")
"RTN","ORCDPS3",29,0)
 Q Y
"RTN","ORCDPS3",30,0)
 ;
"RTN","ORCDPS3",31,0)
NOW ; -- First dose now?
"RTN","ORCDPS3",32,0)
 N X,Y,DIR,SCH
"RTN","ORCDPS3",33,0)
 I $G(ORCAT)="O"!'$D(ORSD)!$L($G(OREVENT))!$G(ORENEW) K ORDIALOG(PROMPT,INST) Q
"RTN","ORCDPS3",34,0)
 ; ask on Copy? Change?
"RTN","ORCDPS3",35,0)
 S X=$$PTR^ORCD("OR GTX SCHEDULE"),Y=+$O(ORDIALOG(X,0))
"RTN","ORCDPS3",36,0)
 S SCH=$G(ORDIALOG(X,Y)),Y=+$O(^PS(51.1,"APPSJ",SCH,0)) ;1st one
"RTN","ORCDPS3",37,0)
 I $P($G(^PS(51.1,Y,0)),U,5)="O"!(Y<1) K ORDIALOG(PROMPT,INST) Q
"RTN","ORCDPS3",38,0)
 ; other conditions?
"RTN","ORCDPS3",39,0)
 S DIR(0)="YA",DIR("A")="Give additional dose NOW? "
"RTN","ORCDPS3",40,0)
 S DIR("B")=$S($G(ORDIALOG(PROMPT,INST)):"YES",1:"NO")
"RTN","ORCDPS3",41,0)
 I ORINPT,$P(ORSD,U,4) S DIR("A",1)="Next scheduled administration time: "_$$FMTE^XLFDT($P(ORSD,U,4))
"RTN","ORCDPS3",42,0)
 S DIR("?")="Enter YES if you want a dose given now in addition to the regular administration times for this schedule and ward."
"RTN","ORCDPS3",43,0)
 D ^DIR S:$D(DTOUT)!$D(DUOUT) ORQUIT=1
"RTN","ORCDPS3",44,0)
 I $G(ORQUIT)!(Y'>0) K ORDIALOG(PROMPT,INST) Q
"RTN","ORCDPS3",45,0)
 S ORDIALOG(PROMPT,INST)=1 I $G(ORCOMPLX) D
"RTN","ORCDPS3",46,0)
 . W $C(7),!,"  >> First Dose NOW is in addition to those already entered.    <<"
"RTN","ORCDPS3",47,0)
 . W !,"  >> Please adjust the duration of the first one, if necessary. <<"
"RTN","ORCDPS3",48,0)
 Q
"RTN","ORCDPS3",49,0)
 ;
"RTN","ORCDPS3",50,0)
DEFSTRT ; -- Returns default start date/time in Y
"RTN","ORCDPS3",51,0)
 ;    Expects PROMPT,INST,ORDIALOG,ORSD to be defined
"RTN","ORCDPS3",52,0)
 ;
"RTN","ORCDPS3",53,0)
 Q:$G(ORCAT)="O"  Q:$G(ORTYPE)="Z"  ;skip if outpt or editor
"RTN","ORCDPS3",54,0)
 N LAST,STRT,DUR,D1,D2,OFF,F1,F2,UNT,Y1,Y2,I,J K Y
"RTN","ORCDPS3",55,0)
 S LAST=+$O(ORDIALOG(+$$PTR^ORCD("OR GTX INSTRUCTIONS"),INST),-1)
"RTN","ORCDPS3",56,0)
 S STRT=$G(ORDIALOG(PROMPT,LAST))
"RTN","ORCDPS3",57,0)
 I LAST'>0!'$L(STRT) S:$L($P($G(ORSD),U)) Y=$P(ORSD,U) Q  ;first inst
"RTN","ORCDPS3",58,0)
 S DUR=$G(ORDIALOG(+$$PTR^ORCD("OR GTX DURATION"),LAST))
"RTN","ORCDPS3",59,0)
 I +DUR'>0 S Y=STRT Q  ;no duration = same start
"RTN","ORCDPS3",60,0)
 S DUR=$$FMDUR(DUR) I STRT D  Q  ;FM date/time, so just add
"RTN","ORCDPS3",61,0)
 . N X,%DT S %DT="TX",X=STRT_"+"_DUR D ^%DT
"RTN","ORCDPS3",62,0)
 . I Y'>0 S Y=STRT ;error
"RTN","ORCDPS3",63,0)
 S D1=+DUR,D2=$P(DUR,D1,2) S:(STRT="NEXTA")!(STRT="CLOSEST") STRT="NOW"
"RTN","ORCDPS3",64,0)
 S OFF=$P(STRT,"+",2) I '$L(OFF) S Y=STRT_"+"_DUR Q  ;no prev offset
"RTN","ORCDPS3",65,0)
 S F1=+OFF,F2=$P(OFF,F1,2),UNT=F2,Y=STRT
"RTN","ORCDPS3",66,0)
 I D2=F2 S Y=$P(STRT,"+")_"+"_(D1+F1)_UNT Q  ;same units
"RTN","ORCDPS3",67,0)
 F I="S","'","H","D","W","M" I (F2=I)!(D2=I) S UNT=I D  Q
"RTN","ORCDPS3",68,0)
 . S:D2=UNT Y1=D1,X1=F1,X2=F2 ; Y1=# in UNT
"RTN","ORCDPS3",69,0)
 . S:F2=UNT Y1=F1,X1=D1,X2=D2 ; X1=# in other units X2
"RTN","ORCDPS3",70,0)
 . F J=1:1 S Z=$T(CONV+J) Q:Z["ZZZZ"  I $P(Z,";",3,4)=(X2_";"_UNT) S Y2=+$P(Z,";",5) Q
"RTN","ORCDPS3",71,0)
 . S Y=$P(STRT,"+")_"+"_(Y1+$S(Y2:Y2*X1,1:0))_UNT
"RTN","ORCDPS3",72,0)
 Q
"RTN","ORCDPS3",73,0)
 ;
"RTN","ORCDPS3",74,0)
FMDUR(X)        ; -- convert '# DAYS' to #D
"RTN","ORCDPS3",75,0)
 N X1,X2,Y I +X'>0 Q ""
"RTN","ORCDPS3",76,0)
 S X1=+X,X2=$P(X," ",2) S:'$L(X2) X2="DAYS"
"RTN","ORCDPS3",77,0)
 S Y=X1_$S("MINUTES"[X2:"'",1:$E(X2))
"RTN","ORCDPS3",78,0)
 Q Y
"RTN","ORCDPS3",79,0)
 ;
"RTN","ORCDPS3",80,0)
CONV ;;unit;unit;factor
"RTN","ORCDPS3",81,0)
 ;;';S;60
"RTN","ORCDPS3",82,0)
 ;;H;';60
"RTN","ORCDPS3",83,0)
 ;;H;S;3600
"RTN","ORCDPS3",84,0)
 ;;D;H;24
"RTN","ORCDPS3",85,0)
 ;;D;';1440
"RTN","ORCDPS3",86,0)
 ;;D;S;86400
"RTN","ORCDPS3",87,0)
 ;;W;D;7
"RTN","ORCDPS3",88,0)
 ;;W;H;168
"RTN","ORCDPS3",89,0)
 ;;W;';10080
"RTN","ORCDPS3",90,0)
 ;;W;S;604800
"RTN","ORCDPS3",91,0)
 ;;M;W;4
"RTN","ORCDPS3",92,0)
 ;;M;D;30
"RTN","ORCDPS3",93,0)
 ;;M;H;720
"RTN","ORCDPS3",94,0)
 ;;M;';43200
"RTN","ORCDPS3",95,0)
 ;;M;S;2592000
"RTN","ORCDPS3",96,0)
 ;;ZZZZ
"RTN","ORCDPS3",97,0)
 ;
"RTN","ORCDPS3",98,0)
ASKDUR()        ; -- Returns 1 or 0, if Duration prompt should be asked
"RTN","ORCDPS3",99,0)
 N X,Y I '$G(ORCOMPLX) K ORDIALOG(PROMPT,INST) Q 0
"RTN","ORCDPS3",100,0)
 S Y=1 G:'$L($G(ORSCH)) ADQ ;no schedule
"RTN","ORCDPS3",101,0)
 S X=+$O(^PS(51.1,"APPSJ",ORSCH,0)) G:X'>0 ADQ
"RTN","ORCDPS3",102,0)
 S:$P($G(^PS(51.1,X,0)),U,5)="O" Y=0
"RTN","ORCDPS3",103,0)
ADQ Q Y
"RTN","ORCDPS3",104,0)
 ;
"RTN","ORCDPS3",105,0)
CKDUR(X) ; -- Returns validated form of duration X, or null if invalid
"RTN","ORCDPS3",106,0)
 N X1,X2,Y,Z S Y=""
"RTN","ORCDPS3",107,0)
 S X1=+$G(X),X2=$P($G(X),X1,2) I X1'>0 Q ""
"RTN","ORCDPS3",108,0)
 S X2=$$UP^XLFSTR(X2),X2=$$STRIP^XLFSTR(X2," ") S:'$L(X2) X2="DAYS"
"RTN","ORCDPS3",109,0)
 F Z="MONTHS^&MONTHS&MONS","WEEKS^&WEEKS&WKS","DAYS^&DAYS&DYS","HOURS^&HOURS&HRS","MINUTES^&MINUTES&MINS'","SECONDS^&SECONDS&SECS" I $P(Z,U,2)[("&"_X2) S Y=$P(Z,U) Q
"RTN","ORCDPS3",110,0)
 S:$L(Y) Y=X1_" "_$S(X1=1:$E(Y,1,$L(Y)-1),1:Y) ;strip trailing 's'
"RTN","ORCDPS3",111,0)
 Q Y
"RTN","ORCDPS3",112,0)
 ;
"RTN","ORCDPS3",113,0)
DUR ; -- Process duration [from P-S Action]
"RTN","ORCDPS3",114,0)
 N X S X=$G(ORDIALOG(PROMPT,ORI)),X=$$CKDUR(X)
"RTN","ORCDPS3",115,0)
 I '$L(X) K DONE W $C(7),!,ORDIALOG(PROMPT,"?"),! Q
"RTN","ORCDPS3",116,0)
 S ORDIALOG(PROMPT,ORI)=X D:$G(ORESET)'=X CHANGED^ORCDPS1("QUANTITY")
"RTN","ORCDPS3",117,0)
 Q
"RTN","ORCDPS3",118,0)
 ;
"RTN","ORCDPS3",119,0)
TEST(START,DURTN)       ; -- test DEFSTRT
"RTN","ORCDPS3",120,0)
 N INST,ORSD,ORDIALOG,PROMPT
"RTN","ORCDPS3",121,0)
 S ORDIALOG(136,1)="",INST=2,ORSD="NOW",PROMPT=6
"RTN","ORCDPS3",122,0)
 S:$L($G(START)) ORDIALOG(6,1)=START S:$G(DURTN) ORDIALOG(153,1)=DURTN
"RTN","ORCDPS3",123,0)
 D DEFSTRT W !,Y
"RTN","ORCDPS3",124,0)
 Q
"RTN","ORCDPS3",125,0)
 ;
"RTN","ORCDPS3",126,0)
SC ; -- Dialog validation, to ask SC questions
"RTN","ORCDPS3",127,0)
 ;    Expects ORIFN, ORDA, and ORDER
"RTN","ORCDPS3",128,0)
 ;
"RTN","ORCDPS3",129,0)
 Q:'$L($T(SCNEW^PSOCP))  Q:'$G(ORIFN)  Q:'$G(ORDA)
"RTN","ORCDPS3",130,0)
 Q:$P($G(^OR(100,ORIFN,0)),U,12)'="O"  Q:$P($G(^(8,ORDA,0)),U,2)'="NW"  Q:$P($G(^(0)),U,15)=""
"RTN","ORCDPS3",131,0)
 ;
"RTN","ORCDPS3",132,0)
 N OR3,ORDRUG,PSIFN,ORX,I,J,DIE,DR,DA,X,Y,DTOUT,ORIGVIEW,DFN
"RTN","ORCDPS3",133,0)
 S OR3=$G(^OR(100,ORIFN,3)),X=$P(OR3,U,11) I X>2 Q  ;new, edit, or renew
"RTN","ORCDPS3",134,0)
 I X S Y=$P(OR3,U,5),PSIFN=$G(^OR(100,Y,4)) ;get PS# if edit/renewal
"RTN","ORCDPS3",135,0)
 S ORDRUG=$$VALUE^ORCSAVE2(ORIFN,"DRUG")
"RTN","ORCDPS3",136,0)
 D SCNEW^PSOCP(.ORX,+ORVP,ORDRUG,$G(PSIFN)) Q:'$D(ORX)
"RTN","ORCDPS3",137,0)
 S DIE="^OR(100,",DA=ORIFN,DR="",J=0
"RTN","ORCDPS3",138,0)
 F I="SC","MST","AO","IR","EC","HNC" S J=J+1 S:$D(ORX(I)) X=ORX(I),DR=DR_";5"_J_"R"_$S($L(X):"//"_$S(X:"YES",1:"NO"),1:"")
"RTN","ORCDPS3",139,0)
 S:$E(DR)=";" DR=$E(DR,2,999) Q:'$L(DR)  S ORIGVIEW=1
"RTN","ORCDPS3",140,0)
 I $D(ORX("SC")) S DFN=+ORVP D DIS^DGRPDB ;show current SC data
"RTN","ORCDPS3",141,0)
 W !!,"Is "_$$ORDITEM^ORCACT(ORDER)_" for treatment related to:"
"RTN","ORCDPS3",142,0)
 D ^DIE S:$D(DTOUT)!$D(Y) ORQUIT=1
"RTN","ORCDPS3",143,0)
 Q
"RTN","ORCSEND1")
0^14^B70868504
"RTN","ORCSEND1",1,0)
ORCSEND1 ;SLC/MKB-Release cont ;11/25/02  09:48
"RTN","ORCSEND1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**4,29,45,61,79,94,116,138,158,149**;Dec 17, 1997
"RTN","ORCSEND1",3,0)
PKGSTUFF(PKG) ; -- Package release code
"RTN","ORCSEND1",4,0)
 S PKG=$$GET1^DIQ(9.4,+PKG_",",1) Q:'$L(PKG)
"RTN","ORCSEND1",5,0)
 D:$L($T(@PKG)) @PKG
"RTN","ORCSEND1",6,0)
 Q
"RTN","ORCSEND1",7,0)
 ;
"RTN","ORCSEND1",8,0)
LR ; -- Spawn child orders if continuous schedule
"RTN","ORCSEND1",9,0)
 N ORSTRT,ORPARENT,OR0,ORNP,ORDIALOG,ORL,ORX,ORTIME,ORPITEM,ORPSAMP,ORPSPEC,ORPURG,ORPCOMM,ORPTYPE,ORPCOLL,ORS1,ORS2,P,ORCHLD,ORDG,ORLAST,ORDUZ,ORLOG,ORCOLLCT,STS
"RTN","ORCSEND1",10,0)
 S ORPARENT=+ORIFN,OR0=$G(^OR(100,ORIFN,0)),ORL=$P(OR0,U,10)
"RTN","ORCSEND1",11,0)
 D SCHEDULE(ORIFN,"LR",.ORSTRT) I ORSTRT'>1 D  Q
"RTN","ORCSEND1",12,0)
 . N START S START=$O(ORSTRT(0)) Q:START=$P($G(^OR(100,+ORIFN,0)),U,8)
"RTN","ORCSEND1",13,0)
 . D DATES^ORCSAVE2(+ORIFN,START) ;update start date from schedule
"RTN","ORCSEND1",14,0)
 S ORNP=+$P(OR0,U,4),ORDIALOG=+$P(OR0,U,5),ORDUZ=+$P(OR0,U,6),ORLOG=$P(OR0,U,7),ORDG=+$P(OR0,U,11)
"RTN","ORCSEND1",15,0)
 D GETDLG1^ORCD(ORDIALOG),GETORDER(ORIFN),GETIMES^ORCDLR1
"RTN","ORCSEND1",16,0)
 K ORDIALOG($$PTR^ORCD("OR GTX ADMIN SCHEDULE"),1),ORDIALOG($$PTR^ORCD("OR GTX DURATION"),1)
"RTN","ORCSEND1",17,0)
 S ORPITEM=$$PTR^ORCD("OR GTX ORDERABLE ITEM")
"RTN","ORCSEND1",18,0)
 S ORPSAMP=$$PTR^ORCD("OR GTX COLLECTION SAMPLE")
"RTN","ORCSEND1",19,0)
 S ORPSPEC=$$PTR^ORCD("OR GTX SPECIMEN")
"RTN","ORCSEND1",20,0)
 S ORPURG=$$PTR^ORCD("OR GTX LAB URGENCY")
"RTN","ORCSEND1",21,0)
 S ORPCOMM=$$PTR^ORCD("OR GTX WORD PROCESSING 1")
"RTN","ORCSEND1",22,0)
 S ORPTYPE=$$PTR^ORCD("OR GTX COLLECTION TYPE")
"RTN","ORCSEND1",23,0)
 S ORPCOLL=$$PTR^ORCD("OR GTX START DATE/TIME")
"RTN","ORCSEND1",24,0)
LR1 S ORS1=0 F  S ORS1=$O(ORX(ORS1)) Q:ORS1'>0  D
"RTN","ORCSEND1",25,0)
 . F P=ORPITEM,ORPSAMP,ORPSPEC,ORPURG,ORPCOMM,ORPTYPE S ORDIALOG(P,1)=$G(ORX(ORS1,P)) ;set values to next instance
"RTN","ORCSEND1",26,0)
 . S ORCOLLCT=$G(ORDIALOG(ORPTYPE,1))
"RTN","ORCSEND1",27,0)
 . S ORS2=0 F  S ORS2=$O(ORSTRT(ORS2)) Q:ORS2'>0  D
"RTN","ORCSEND1",28,0)
 .. S ORDIALOG(ORPCOLL,1)=ORS2 ;,ORDUZ=DUZ,ORLOG=+$E($$NOW^XLFDT,1,12)
"RTN","ORCSEND1",29,0)
 .. I ORCOLLCT="LC" S ORDIALOG(ORPTYPE,1)=$S($$LABCOLL^ORCDLR1(ORS2):"LC",1:"WC")
"RTN","ORCSEND1",30,0)
 .. I ORCOLLCT="I" S ORDIALOG(ORPTYPE,1)=$S($$IMMCOLL^ORCDLR1(ORS2):"I",1:"WC")
"RTN","ORCSEND1",31,0)
 .. D CHILD()
"RTN","ORCSEND1",32,0)
 S:$G(ORCHLD) ^OR(100,ORPARENT,2,0)="^100.002PA^"_ORLAST_U_ORCHLD
"RTN","ORCSEND1",33,0)
 S ORIFN=ORPARENT,ORQUIT=1,STS=$P(^OR(100,ORIFN,3),U,3)
"RTN","ORCSEND1",34,0)
 I (STS=1)!(STS=13)!(STS=11) S ORERR="1^Unable to release orders"
"RTN","ORCSEND1",35,0)
 D RELEASE^ORCSAVE2(ORPARENT,1,ORNOW,DUZ,$G(NATURE))
"RTN","ORCSEND1",36,0)
 Q
"RTN","ORCSEND1",37,0)
 ;
"RTN","ORCSEND1",38,0)
SCHEDULE(IFN,PKG,ORY,STRT) ; -- Returns list of start time(s) from schedule
"RTN","ORCSEND1",39,0)
 N I,X,PSJSD,PSJFD,PSJW,PSJNE,PSJPP,PSJX,PSJAT,PSJM,PSJTS,PSJY,PSJAX,PSJSCH,PSJOSD,PSJOFD,PSJC,ORDUR
"RTN","ORCSEND1",40,0)
 S PSJSD=$S(+$G(STRT):STRT,1:$P($G(^OR(100,+IFN,0)),U,8)) I 'PSJSD S ORY=-1 Q
"RTN","ORCSEND1",41,0)
 S ORY=1,ORY(PSJSD)="" ;1st occurrance
"RTN","ORCSEND1",42,0)
 S I=$O(^OR(100,+IFN,4.5,"ID","SCHEDULE",0)) Q:'I  Q:'$L($G(PKG))
"RTN","ORCSEND1",43,0)
 S X=$G(^OR(100,+IFN,4.5,I,1)),PSJX=$S(X:$$GET1^DIQ(51.1,+X_",",.01),1:X)
"RTN","ORCSEND1",44,0)
 S PSJW=+$G(ORL),PSJNE="",PSJPP=PKG D ENSV^PSJEEU Q:'$L($G(PSJX))
"RTN","ORCSEND1",45,0)
 I $G(PSJTS)'="C",$G(PSJTS)'="D" Q  ;not continuous or day-of-week
"RTN","ORCSEND1",46,0)
 S PSJSCH=PSJX,I=$O(^OR(100,+IFN,4.5,"ID","DAYS",0)) Q:'I
"RTN","ORCSEND1",47,0)
 S ORDUR=$G(^OR(100,+IFN,4.5,+I,1))
"RTN","ORCSEND1",48,0)
 S:ORDUR PSJFD=$$FMADD^XLFDT(PSJSD,+ORDUR,,-1)
"RTN","ORCSEND1",49,0)
 I 'ORDUR S X=+$E(ORDUR,2,9) D
"RTN","ORCSEND1",50,0)
 . I PSJM S PSJFD=$$FMADD^XLFDT(PSJSD,,,(PSJM*X)-1) ;X_#times
"RTN","ORCSEND1",51,0)
 . E  D  ;no freq in minutes --> day of week
"RTN","ORCSEND1",52,0)
 .. N DAYS,LOCMX,SCHMX
"RTN","ORCSEND1",53,0)
 .. S LOCMX=$$GET^XPAR("ALL^LOC.`"_+ORL,"LR MAX DAYS CONTINUOUS",1,"Q")
"RTN","ORCSEND1",54,0)
 .. S SCHMX=$P(^PS(51.1,PSJY,0),U,7)
"RTN","ORCSEND1",55,0)
 .. S DAYS=$S('SCHMX:LOCMX,LOCMX<SCHMX:LOCMX,1:SCHMX)
"RTN","ORCSEND1",56,0)
 .. S PSJFD=$$FMADD^XLFDT(PSJSD,DAYS,,-1) ; get the most possible
"RTN","ORCSEND1",57,0)
 D ENSPU^PSJEEU K ORY
"RTN","ORCSEND1",58,0)
 I ORDUR M ORY=PSJC Q
"RTN","ORCSEND1",59,0)
 S ORY=$S(PSJC<$E(ORDUR,2,9):PSJC,1:$E(ORDUR,2,9))
"RTN","ORCSEND1",60,0)
 N NXT
"RTN","ORCSEND1",61,0)
 S NXT=0 F I=1:1:ORY S NXT=$O(PSJC(NXT)) Q:'NXT  S ORY(NXT)=PSJC(NXT)
"RTN","ORCSEND1",62,0)
 Q
"RTN","ORCSEND1",63,0)
 ;
"RTN","ORCSEND1",64,0)
GETORDER(IFN) ; -- Set ORX(Inst,Ptr)=Value
"RTN","ORCSEND1",65,0)
 N I,X,Y,PTR,INST,TYPE
"RTN","ORCSEND1",66,0)
 S I=0 F  S I=$O(^OR(100,IFN,4.5,I)) Q:I'>0  S X=$G(^(I,0)),Y=$G(^(1)) D
"RTN","ORCSEND1",67,0)
 . S PTR=+$P(X,U,2),INST=+$P(X,U,3),TYPE=$P($G(^ORD(101.41,PTR,1)),U)
"RTN","ORCSEND1",68,0)
 . I TYPE'="W" S ORX(INST,PTR)=Y Q
"RTN","ORCSEND1",69,0)
 . S ORX(INST,PTR)="^OR(100,"_IFN_",4.5,"_I_",2)"
"RTN","ORCSEND1",70,0)
 Q
"RTN","ORCSEND1",71,0)
 ;
"RTN","ORCSEND1",72,0)
PTR(X) ; -- Returns ptr of prompt X in Order Dialog file
"RTN","ORCSEND1",73,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_X,1,63),0))
"RTN","ORCSEND1",74,0)
 ;
"RTN","ORCSEND1",75,0)
CHILD(STRT)   ; -- Create child order, send to package
"RTN","ORCSEND1",76,0)
 K ORIFN D EN^ORCSAVE Q:'$G(ORIFN)  D STARTDT^ORCSAVE2(ORIFN)
"RTN","ORCSEND1",77,0)
 I $G(STRT) D DATES^ORCSAVE2(ORIFN,STRT)
"RTN","ORCSEND1",78,0)
 S ORCHLD=+$G(ORCHLD)+1,^OR(100,ORPARENT,2,ORIFN,0)=ORIFN,ORLAST=ORIFN
"RTN","ORCSEND1",79,0)
 S $P(^OR(100,ORIFN,3),U,9)=ORPARENT
"RTN","ORCSEND1",80,0)
 I $G(PKG)="LR" S $P(^OR(100,ORIFN,8,1,0),U,4)="" K ^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,1) ;signature tracked on parent order only, for Labs
"RTN","ORCSEND1",81,0)
 I $G(PKG)?1"PS".E D
"RTN","ORCSEND1",82,0)
 . N X0 S X0=$G(^OR(100,ORPARENT,8,1,0))
"RTN","ORCSEND1",83,0)
 . I $P(X0,U,4)'=2 D SIGN^ORCSAVE2(ORIFN,+$P(X0,U,5),ORNOW,$P(X0,U,4),1)
"RTN","ORCSEND1",84,0)
 . I $D(^OR(100,ORPARENT,9)) M ^OR(100,ORIFN,9)=^OR(100,ORPARENT,9)
"RTN","ORCSEND1",85,0)
 . I $G(ORENEW) S OLD=$O(ORENEW(0)) I OLD S $P(^OR(100,OLD,3),U,6)=ORIFN,$P(^OR(100,ORIFN,3),U,5)=OLD,$P(^(3),U,11)=2 K ORENEW(OLD)
"RTN","ORCSEND1",86,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORNOW,DUZ,$G(NATURE)),NEW^ORMBLD(ORIFN)
"RTN","ORCSEND1",87,0)
 Q
"RTN","ORCSEND1",88,0)
 ;
"RTN","ORCSEND1",89,0)
PS ; -- spawn child orders if multiple doses
"RTN","ORCSEND1",90,0)
PSJ ;    (Inpt only)
"RTN","ORCSEND1",91,0)
PSS ;
"RTN","ORCSEND1",92,0)
 N ORPARENT,OR0,ORNP,ORDIALOG,ORDUZ,ORLOG,ORL,ORDG,ORCAT,ORX,ORP,ORI,STS
"RTN","ORCSEND1",93,0)
 N ORDOSE,ORT,ORSCH,ORDUR,ORSTRT,ORFRST,ORCONJ,ORID,ORDD,ORSTR,ORDGNM
"RTN","ORCSEND1",94,0)
 N ORSTART,ORCHLD,ORLAST,ORSIG,OROI,ID,OR3,ORIG,CODE,ORPKG,ORENEW,I
"RTN","ORCSEND1",95,0)
 S ORPARENT=+ORIFN,OR0=$G(^OR(100,ORPARENT,0)),OR3=$G(^(3))
"RTN","ORCSEND1",96,0)
 Q:$P(OR0,U,12)'="I"  S ORCAT="I",ORNP=+$P(OR0,U,4)
"RTN","ORCSEND1",97,0)
 S ORDIALOG=+$P(OR0,U,5),ORDUZ=+$P(OR0,U,6),ORLOG=$P(OR0,U,7)
"RTN","ORCSEND1",98,0)
 S ORL=$P(OR0,U,10),ORDG=+$P(OR0,U,11),ORPKG=+$P(OR0,U,14)
"RTN","ORCSEND1",99,0)
 D GETDLG1^ORCD(ORDIALOG),GETORDER(ORPARENT)
"RTN","ORCSEND1",100,0)
 S ORDOSE=$$PTR("INSTRUCTIONS"),ORT=$$PTR("ROUTE")
"RTN","ORCSEND1",101,0)
 S ORSCH=$$PTR("SCHEDULE"),ORDUR=$$PTR("DURATION")
"RTN","ORCSEND1",102,0)
 S ORCONJ=$$PTR("AND/THEN") D STRT S ORSTART=$G(ORSTRT("BEG"))
"RTN","ORCSEND1",103,0)
 D DATES^ORCSAVE2(ORPARENT,ORSTART) Q:$$DOSES(ORPARENT)'>1
"RTN","ORCSEND1",104,0)
 S ORFRST=$$PTR("NOW"),ORSIG=$$PTR("SIG")
"RTN","ORCSEND1",105,0)
 S ORID=$$PTR("DOSE"),ORDD=$$PTR("DISPENSE DRUG")
"RTN","ORCSEND1",106,0)
 S ORSTR=$$PTR("STRENGTH"),ORDGNM=$$PTR("DRUG NAME")
"RTN","ORCSEND1",107,0)
 I $P(OR3,U,11)=2,$O(^OR(100,+$P(OR3,U,5),2,0)) D
"RTN","ORCSEND1",108,0)
 . S ORENEW=+$P(OR3,U,5),I=0
"RTN","ORCSEND1",109,0)
 . I $$VALUE^ORX8(ORENEW,"NOW") S I=$O(^OR(100,ORENEW,2,0))
"RTN","ORCSEND1",110,0)
 . F  S I=$O(^OR(100,ORENEW,2,I)) Q:I<1  S ORENEW(I)=""
"RTN","ORCSEND1",111,0)
PS1 F ORP="ORDERABLE ITEM","URGENCY","WORD PROCESSING 1" D
"RTN","ORCSEND1",112,0)
 . N PTR S PTR=$$PTR(ORP) Q:PTR'>0  Q:'$D(ORX(1,PTR))
"RTN","ORCSEND1",113,0)
 . S ORDIALOG(PTR,1)=ORX(1,PTR) S:$E(ORP)="O" OROI=ORX(1,PTR)
"RTN","ORCSEND1",114,0)
 S ORI=$$FRSTDOSE I $G(ORX(1,ORFRST)) D
"RTN","ORCSEND1",115,0)
 . F ORP=ORDOSE,ORT,ORID S:$D(ORX(ORI,ORP)) ORDIALOG(ORP,1)=ORX(ORI,ORP)
"RTN","ORCSEND1",116,0)
 . S ID=$G(ORX(ORI,ORID)) S:$P(ID,"&",6) ORDIALOG(ORDD,1)=$P(ID,"&",6)
"RTN","ORCSEND1",117,0)
 . S ORDIALOG(ORSCH,1)="NOW",ORSTART=$$NOW^XLFDT
"RTN","ORCSEND1",118,0)
 . D SIG,CHILD(ORSTART)
"RTN","ORCSEND1",119,0)
 F  D  S ORI=$O(ORX(ORI)) Q:ORI'>0
"RTN","ORCSEND1",120,0)
 . F ORP=ORDOSE,ORT,ORSCH,ORDUR,ORID S:$D(ORX(ORI,ORP)) ORDIALOG(ORP,1)=ORX(ORI,ORP) K:'$D(ORX(ORI,ORP)) ORDIALOG(ORP,1)
"RTN","ORCSEND1",121,0)
 . K ORDIALOG(ORDD,1) S ID=$G(ORX(ORI,ORID))
"RTN","ORCSEND1",122,0)
 . S:$P(ID,"&",6) ORDIALOG(ORDD,1)=$P(ID,"&",6)
"RTN","ORCSEND1",123,0)
 . S ORSTART=$G(ORSTRT(ORI))
"RTN","ORCSEND1",124,0)
 . D SIG,CHILD(ORSTART)
"RTN","ORCSEND1",125,0)
 S:$G(ORCHLD) ^OR(100,ORPARENT,2,0)="^100.002PA^"_ORLAST_U_ORCHLD
"RTN","ORCSEND1",126,0)
 S ORIFN=ORPARENT,ORQUIT=1,OR3=$G(^OR(100,ORIFN,3)),STS=$P(OR3,U,3)
"RTN","ORCSEND1",127,0)
 I (STS=1)!(STS=13)!(STS=11) S ORERR="1^Unable to release orders"
"RTN","ORCSEND1",128,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORNOW,DUZ,$G(NATURE)) K ^TMP("ORWORD",$J)
"RTN","ORCSEND1",129,0)
 S $P(^OR(100,ORIFN,3),U,8)=1 ;veil parent order - set stop date/time?
"RTN","ORCSEND1",130,0)
 Q:(STS=1)!(STS=13)!(STS=11)  ;unsuccessful
"RTN","ORCSEND1",131,0)
PS2 ; -- ck if parent is unsigned or edit
"RTN","ORCSEND1",132,0)
 I $P($G(^OR(100,ORIFN,8,1,0)),U,4)=2 S $P(^(0),U,4)="" K ^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,1) ;clear ES
"RTN","ORCSEND1",133,0)
 Q:$P(OR3,U,11)'=1  S ORIG=$P(OR3,U,5) Q:ORIG'>0
"RTN","ORCSEND1",134,0)
 S CODE=$S($P($G(^OR(100,ORIG,3)),U,3)=5:"CA",1:"DC")
"RTN","ORCSEND1",135,0)
 D MSG^ORMBLD(ORIG,CODE) I "^1^13^"[(U_$P($G(^OR(100,ORIG,3)),U,3)_U) D
"RTN","ORCSEND1",136,0)
 . N NATR S NATR=+$O(^ORD(100.02,"C","C",0))
"RTN","ORCSEND1",137,0)
 . S $P(^OR(100,ORIG,3),U,3)=12,$P(^(3),U,7)=0,^(6)=NATR_U_DUZ_U_ORNOW
"RTN","ORCSEND1",138,0)
 . D CANCEL^ORCSEND(ORIG) ;ck for unrel actions
"RTN","ORCSEND1",139,0)
 Q
"RTN","ORCSEND1",140,0)
 ;
"RTN","ORCSEND1",141,0)
DOSES(IFN) ; -- count number of doses in order
"RTN","ORCSEND1",142,0)
 N I,CNT S CNT=0
"RTN","ORCSEND1",143,0)
 S I=0 F  S I=$O(^OR(100,+$G(IFN),4.5,"ID","INSTR",I)) Q:I'>0  I $L($G(^OR(100,+$G(IFN),4.5,I,1))) S CNT=CNT+1
"RTN","ORCSEND1",144,0)
 S I=+$O(^OR(100,+$G(IFN),4.5,"ID","NOW",0)) I I,$G(^OR(100,+$G(IFN),4.5,I,1)) S CNT=CNT+1
"RTN","ORCSEND1",145,0)
 Q CNT
"RTN","ORCSEND1",146,0)
 ;
"RTN","ORCSEND1",147,0)
FRSTDOSE()      ; -- Return instance of first dose
"RTN","ORCSEND1",148,0)
 N I,Y S I=0,Y=1
"RTN","ORCSEND1",149,0)
 F  S I=$O(ORX(I)) Q:I'>0  I $D(ORX(I,ORDOSE)) S Y=I Q
"RTN","ORCSEND1",150,0)
 Q Y
"RTN","ORCSEND1",151,0)
 ;
"RTN","ORCSEND1",152,0)
SIG ; -- Build text of instructions
"RTN","ORCSEND1",153,0)
 N ORDRUG,ID,DOSE,ORI,ORX K ^TMP("ORWORD",$J,ORSIG,1)
"RTN","ORCSEND1",154,0)
 S ORDRUG=$G(ORDIALOG(ORDD,1)),ID=$G(ORDIALOG(ORID,1))
"RTN","ORCSEND1",155,0)
 S DOSE=$G(ORDIALOG(ORDOSE,1)),ORI=1
"RTN","ORCSEND1",156,0)
 S ORX=$$DOSE^ORCDPS2_$$RTE^ORCDPS2_$$SCH^ORCDPS2_$$DUR^ORCDPS2
"RTN","ORCSEND1",157,0)
 S ^TMP("ORWORD",$J,ORSIG,1,0)="^^1^1^"_DT_U,^(1,0)=ORX
"RTN","ORCSEND1",158,0)
 S ORDIALOG(ORSIG,1)=$NA(^TMP("ORWORD",$J,ORSIG,1))
"RTN","ORCSEND1",159,0)
 S ORDIALOG(ORDOSE,"FORMAT")="@"
"RTN","ORCSEND1",160,0)
 K ORDIALOG(ORSTR,1),ORDIALOG(ORDGNM,1)
"RTN","ORCSEND1",161,0)
 I ORDRUG,'ID D  ;set strength or drug name
"RTN","ORCSEND1",162,0)
 . N STR,ITM S STR=$P(ID,"&",7)_$P(ID,"&",8)
"RTN","ORCSEND1",163,0)
 . I STR'>0 S ORDIALOG(ORDGNM,1)=$$GET1^DIQ(50,+ORDRUG_",",.01) Q
"RTN","ORCSEND1",164,0)
 . S ITM=$P($G(^ORD(101.43,+$G(OROI),0)),U)
"RTN","ORCSEND1",165,0)
 . S:ITM'[STR ORDIALOG(ORSTR,1)=STR
"RTN","ORCSEND1",166,0)
 Q
"RTN","ORCSEND1",167,0)
 ;
"RTN","ORCSEND1",168,0)
STRT ; -- Build ORSTRT(inst)=date.time array of start times by dose
"RTN","ORCSEND1",169,0)
 N OI,PSOI,XD,XH,XM,XS,ORWD,ORI,SCH,ORSD,X,ORD K ORSTRT
"RTN","ORCSEND1",170,0)
 S OI=$G(ORX(1,$$PTR^ORCD("OR GTX ORDERABLE ITEM")))
"RTN","ORCSEND1",171,0)
 S PSOI=+$P($G(^ORD(101.43,+OI,0)),U,2),(XD,XH,XM,XS)=0
"RTN","ORCSEND1",172,0)
 S ORWD=+$G(^SC(+$G(ORL),42)) ;ward
"RTN","ORCSEND1",173,0)
 S ORI=0 F  S ORI=$O(ORX(ORI)) Q:ORI<1  D
"RTN","ORCSEND1",174,0)
 . S SCH=$G(ORX(ORI,ORSCH)),ORSD="" S:'$L(SCH) X=$$NOW^XLFDT
"RTN","ORCSEND1",175,0)
 . S:$L(SCH) ORSD=$$STARTSTP^PSJORPOE(+ORVP,SCH,PSOI,ORWD),X=$P(ORSD,U,4)
"RTN","ORCSEND1",176,0)
 . S ORSTRT(ORI)=$$FMADD^XLFDT(X,XD,XH,XM,XS) ;START+OFFSET
"RTN","ORCSEND1",177,0)
 . ; -- update OFFSET for next THEN dose
"RTN","ORCSEND1",178,0)
 . D DUR(ORI) I $G(ORX(ORI,ORCONJ))="T" D
"RTN","ORCSEND1",179,0)
 .. I $G(ORD("XD"))<1,$G(ORD("XH"))<1,$G(ORD("XM"))<1,$G(ORD("XS"))<1 S ORD("XD")=+$P(ORSD,U,3) ;default duration
"RTN","ORCSEND1",180,0)
 .. N I,Y F I="XD","XH","XM","XS" S Y=@I,@I=Y+$G(ORD(I))
"RTN","ORCSEND1",181,0)
 .. K ORD
"RTN","ORCSEND1",182,0)
 ; -- find beginning date.time for parent
"RTN","ORCSEND1",183,0)
 S ORI=0,X=9999999 F  S ORI=$O(ORSTRT(ORI)) Q:ORI<1  I ORSTRT(ORI)<X S X=ORSTRT(ORI)
"RTN","ORCSEND1",184,0)
 S ORSTRT("BEG")=X
"RTN","ORCSEND1",185,0)
 Q
"RTN","ORCSEND1",186,0)
 ;
"RTN","ORCSEND1",187,0)
DUR(I) ; -- Accumulate duration in ORD("Xt") for offsetting next THEN dose
"RTN","ORCSEND1",188,0)
 N X,Y S X=$$FMDUR^ORCDPS3($G(ORX(I,ORDUR)))
"RTN","ORCSEND1",189,0)
 I X["S",+X>$G(ORD("XS")) S ORD("XS")=+X
"RTN","ORCSEND1",190,0)
 I X["'",+X>$G(ORD("XM")) S ORD("XM")=+X
"RTN","ORCSEND1",191,0)
 I X["H",+X>$G(ORD("XH")) S ORD("XH")=+X
"RTN","ORCSEND1",192,0)
 S Y=$S(X["D":+X,X["W":+X*7,X["M":+X*30,1:0)
"RTN","ORCSEND1",193,0)
 I Y,Y>$G(ORD("XD")) S ORD("XD")=Y
"RTN","ORCSEND1",194,0)
 Q
"RTN","ORECS01")
0^25^B2862433
"RTN","ORECS01",1,0)
ORECS01 ;SLC/JDL-CPRS utility for Event Capture System; 2/10/03 13:04P
"RTN","ORECS01",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**141,149**;Dec 17, 1997
"RTN","ORECS01",3,0)
 ;
"RTN","ORECS01",4,0)
CHKESSO(ORY,CHK) ;--1=ESSO installed on site  0=not installed
"RTN","ORECS01",5,0)
 S ORY=$$PATCH^XPDUTL("XWB*1.1*26")
"RTN","ORECS01",6,0)
 Q
"RTN","ORECS01",7,0)
 ;
"RTN","ORECS01",8,0)
VSITID(ORY,VSTSTR) ;--Return Visit IEN ptr to #9000010
"RTN","ORECS01",9,0)
 ;VSTSTR=HospLoc;DateTime;Category;PtIEN
"RTN","ORECS01",10,0)
 N DTREF,PTID
"RTN","ORECS01",11,0)
 S ORY=0
"RTN","ORECS01",12,0)
 S DTREF=9999999-$P($P(VSTSTR,";",2),".")_"."_$P($P(VSTSTR,";",2),".",2)
"RTN","ORECS01",13,0)
 S PTID=+$P(VSTSTR,";",4)
"RTN","ORECS01",14,0)
 S:$D(^AUPNVSIT("AA",PTID,DTREF)) ORY=$O(^(DTREF,0))
"RTN","ORECS01",15,0)
 Q
"RTN","ORECS01",16,0)
 ;
"RTN","ORECS01",17,0)
ECRPT(ORY,ORECARY) ;--EC report
"RTN","ORECS01",18,0)
 Q:'$D(ORECARY)
"RTN","ORECS01",19,0)
 D RPTEN^ECRRPC(.ORY,.ORECARY)
"RTN","ORECS01",20,0)
 Q
"RTN","ORECS01",21,0)
 ;
"RTN","ORECS01",22,0)
ECPRINT(ORY,ORECARY) ;--Print ECS report to Device
"RTN","ORECS01",23,0)
 Q:'$D(ORECARY)
"RTN","ORECS01",24,0)
 D RPTEN^ECRRPC(.ORY,.ORECARY)
"RTN","ORECS01",25,0)
 Q
"RTN","ORECS01",26,0)
 ;
"RTN","ORECS01",27,0)
GETDIV(ORY,USR) ;--Get user's division
"RTN","ORECS01",28,0)
 S ORY=0
"RTN","ORECS01",29,0)
 S:$G(DUZ(2)) ORY=DUZ(2)
"RTN","ORECS01",30,0)
 Q
"RTN","ORECS01",31,0)
SAVPATH(ORY,ECPATH) ;--Save user's ECS path
"RTN","ORECS01",32,0)
 N IX,VAL,NM,HADIT,LST,INST,LAST
"RTN","ORECS01",33,0)
 S (IX,HADIT,INST,LAST)=0,(VAL,NM)=""
"RTN","ORECS01",34,0)
 D GETLST^XPAR(.LST,DUZ_";VA(200,","ORWT TOOLS MENU")
"RTN","ORECS01",35,0)
 S LAST=+$G(LST(LST))
"RTN","ORECS01",36,0)
 F  S IX=$O(LST(IX)) Q:('IX)!HADIT  D
"RTN","ORECS01",37,0)
 . S NM=$P($P(LST(IX),U,2),"=",1)
"RTN","ORECS01",38,0)
 . I $$UP^XLFSTR(NM)="EVENT CAPTURE INTERFACE" S HADIT=$P(LST(IX),U)
"RTN","ORECS01",39,0)
 S $P(ECPATH,"=",2)=$C(34)_$P(ECPATH,"=",2)_$C(34)
"RTN","ORECS01",40,0)
 S ORY=$P(ECPATH,"=",2)
"RTN","ORECS01",41,0)
 D:HADIT CHG^XPAR(DUZ_";VA(200,","ORWT TOOLS MENU",HADIT,ECPATH)
"RTN","ORECS01",42,0)
 D:'HADIT ADD^XPAR(DUZ_";VA(200,","ORWT TOOLS MENU",LAST+1,ECPATH)
"RTN","ORECS01",43,0)
 Q
"RTN","OREVNTX1")
0^22^B72653231
"RTN","OREVNTX1",1,0)
OREVNTX1 ; SLC/JLI - Event delayed orders RPC's ;9/19/02  13:35
"RTN","OREVNTX1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**141,165,149**;Dec 17, 1997
"RTN","OREVNTX1",3,0)
 ;
"RTN","OREVNTX1",4,0)
PUTEVNT(ORY,DFN,EVT,ORIFN) ; Save new patient delayed events to file 100.2
"RTN","OREVNTX1",5,0)
 S ORY=$$NEW^OREVNT(DFN,EVT,ORIFN)
"RTN","OREVNTX1",6,0)
 Q
"RTN","OREVNTX1",7,0)
 ;
"RTN","OREVNTX1",8,0)
GTEVT(ORY,PTEVT) ; Return Event infomation based on PTEVT ptr #100.2
"RTN","OREVNTX1",9,0)
 ;EVTID     ptr #100.5
"RTN","OREVNTX1",10,0)
 Q:'+PTEVT
"RTN","OREVNTX1",11,0)
 N EVTID,EVTTYPE,EVTNAME,EVTDISP,EVTDLG,PRTEVT
"RTN","OREVNTX1",12,0)
 S (EVTTYPE,EVTNAME,EVTDISP,PRTEVT)=""
"RTN","OREVNTX1",13,0)
 S EVTDLG=0
"RTN","OREVNTX1",14,0)
 I '$P(^ORE(100.2,+$G(PTEVT),0),U,2) Q
"RTN","OREVNTX1",15,0)
 S EVTID=$$EVT^OREVNTX(PTEVT)
"RTN","OREVNTX1",16,0)
 S PRTEVT=$P(^ORD(100.5,EVTID,0),U,12)
"RTN","OREVNTX1",17,0)
 I PRTEVT S EVTTYPE=$P(^ORD(100.5,PRTEVT,0),U,2)
"RTN","OREVNTX1",18,0)
 E  S EVTTYPE=$P(^ORD(100.5,EVTID,0),U,2)
"RTN","OREVNTX1",19,0)
 I $D(^ORD(100.5,EVTID,0)) D
"RTN","OREVNTX1",20,0)
 . S EVTNAME=$P(^ORD(100.5,EVTID,0),U,1)
"RTN","OREVNTX1",21,0)
 . S EVTDISP=$P(^ORD(100.5,EVTID,0),U,8)
"RTN","OREVNTX1",22,0)
 . S EVTDLG=$P(^ORD(100.5,EVTID,0),U,4)
"RTN","OREVNTX1",23,0)
 S ORY=EVTTYPE_U_EVTID_U_EVTNAME_U_EVTDISP_U_EVTDLG
"RTN","OREVNTX1",24,0)
 Q
"RTN","OREVNTX1",25,0)
GTEVT1(ORY,EVT) ; Return Event information based on EVT ptr #100.5
"RTN","OREVNTX1",26,0)
 ;EVT    ptr #100.5
"RTN","OREVNTX1",27,0)
 Q:'+EVT
"RTN","OREVNTX1",28,0)
 N EVTTYPE,EVTNAME,EVTDISP,EVTDLG,PRTEVT
"RTN","OREVNTX1",29,0)
 S (EVTDLG,PRTEVT)=0
"RTN","OREVNTX1",30,0)
 S PRTEVT=$P(^ORD(100.5,+EVT,0),U,12)
"RTN","OREVNTX1",31,0)
 I PRTEVT>0 S EVTTYPE=$P(^ORD(100.5,PRTEVT,0),U,2)
"RTN","OREVNTX1",32,0)
 E  S EVTTYPE=$P(^ORD(100.5,+EVT,0),U,2)
"RTN","OREVNTX1",33,0)
 S EVTNAME=$P($G(^ORD(100.5,+EVT,0)),U,1)
"RTN","OREVNTX1",34,0)
 S EVTDISP=$P($G(^ORD(100.5,+EVT,0)),U,8)
"RTN","OREVNTX1",35,0)
 S EVTDLG=$P($G(^ORD(100.5,+EVT,0)),U,4)
"RTN","OREVNTX1",36,0)
 S ORY=EVTTYPE_U_EVT_U_EVTNAME_U_EVTDISP_U_EVTDLG
"RTN","OREVNTX1",37,0)
 Q
"RTN","OREVNTX1",38,0)
 ;
"RTN","OREVNTX1",39,0)
EVT(ORY,PTEVT) ; Return Event ptr #100.5, given PTEVT ptr #100.2
"RTN","OREVNTX1",40,0)
 Q:'+PTEVT
"RTN","OREVNTX1",41,0)
 S ORY=$$EVT^OREVNTX(PTEVT)
"RTN","OREVNTX1",42,0)
 Q
"RTN","OREVNTX1",43,0)
 ; 
"RTN","OREVNTX1",44,0)
EXISTS(ORY,DFN,EVT) ;Returns PtEvtID ptr #100.2 if patient already has delayed orders
"RTN","OREVNTX1",45,0)
 I '+EVT S ORY=0 Q
"RTN","OREVNTX1",46,0)
 N PTEVT S (PTEVT,ORY)=0
"RTN","OREVNTX1",47,0)
 S PTEVT=$O(^ORE(100.2,"AE",+DFN,+EVT,PTEVT))
"RTN","OREVNTX1",48,0)
 I PTEVT>0 S ORY=PTEVT
"RTN","OREVNTX1",49,0)
 Q
"RTN","OREVNTX1",50,0)
 ;
"RTN","OREVNTX1",51,0)
TYPEXT(ORY,DFN,EVT) ; does EVT has delayed orders?
"RTN","OREVNTX1",52,0)
 ; 1 if Patient DFN has delayed orders for EVT
"RTN","OREVNTX1",53,0)
 ; 2 if Parent/Sibling event has delayed orders
"RTN","OREVNTX1",54,0)
 ; 0 if No delayed orders for EVT
"RTN","OREVNTX1",55,0)
 Q:'+EVT
"RTN","OREVNTX1",56,0)
 S ORY=$$EXISTS^OREVNTX(DFN,EVT)
"RTN","OREVNTX1",57,0)
 Q
"RTN","OREVNTX1",58,0)
 ;
"RTN","OREVNTX1",59,0)
MATCH(ORY,DFN,EVT) ;If Pt's current data match selected event
"RTN","OREVNTX1",60,0)
 ;DFN: patient DFN
"RTN","OREVNTX1",61,0)
 ;EVT: ptr to #100.5
"RTN","OREVNTX1",62,0)
 S ORY=0
"RTN","OREVNTX1",63,0)
 Q:('+DFN)!('+EVT)
"RTN","OREVNTX1",64,0)
 S ORY=$$MATCH^OREVNT(DFN,EVT)
"RTN","OREVNTX1",65,0)
 N TS,TSNM
"RTN","OREVNTX1",66,0)
 S TS=$S($G(ORTS):+ORTS,1:+$G(^DPT(DFN,.103)))
"RTN","OREVNTX1",67,0)
 S TSNM=$P($G(^DIC(45.7,TS,0)),U)
"RTN","OREVNTX1",68,0)
 S:ORY ORY=ORY_U_TSNM
"RTN","OREVNTX1",69,0)
 Q
"RTN","OREVNTX1",70,0)
 ;
"RTN","OREVNTX1",71,0)
NAME(ORY,PTEVT) ; Return Event name from #100.5, given PTEVT ptr #100.2
"RTN","OREVNTX1",72,0)
 I PTEVT'>0 S ORY="" Q
"RTN","OREVNTX1",73,0)
 S ORY=$$NAME^OREVNTX(PTEVT)
"RTN","OREVNTX1",74,0)
 Q
"RTN","OREVNTX1",75,0)
 ;
"RTN","OREVNTX1",76,0)
DIV(ORY,PTEVT) ; Return division for PTEVT ptr #100.2
"RTN","OREVNTX1",77,0)
 Q:'+PTEVT
"RTN","OREVNTX1",78,0)
 S ORY=$$DIV^OREVNTX(PTEVT)
"RTN","OREVNTX1",79,0)
 Q
"RTN","OREVNTX1",80,0)
 ;
"RTN","OREVNTX1",81,0)
DIV1(ORY,EVT) ; Return division for EVT ptr #100.5
"RTN","OREVNTX1",82,0)
 Q:'+EVT
"RTN","OREVNTX1",83,0)
 S ORY=+$P($G(^ORD(100.5,+EVT,0)),U,3) S:ORY<1 ORY=+$G(DUZ(2))
"RTN","OREVNTX1",84,0)
 Q
"RTN","OREVNTX1",85,0)
 ;
"RTN","OREVNTX1",86,0)
LOC(ORY,PTEVT) ; Return default hospital location ^SC( for PTEVT ptr #100.2
"RTN","OREVNTX1",87,0)
 Q:'+PTEVT
"RTN","OREVNTX1",88,0)
 S ORY=$$LOC^OREVNTX(PTEVT)
"RTN","OREVNTX1",89,0)
 S ORY=+ORY
"RTN","OREVNTX1",90,0)
 Q
"RTN","OREVNTX1",91,0)
 ;
"RTN","OREVNTX1",92,0)
LOC1(ORY,EVT) ; Return default hospital location ^SC( for EVT ptr #100.5
"RTN","OREVNTX1",93,0)
 Q:'+EVT
"RTN","OREVNTX1",94,0)
 S ORY=+$P($G(^ORD(100.5,+EVT,0)),U,9) S:ORY<1 ORY=+$G(ORL)
"RTN","OREVNTX1",95,0)
 Q
"RTN","OREVNTX1",96,0)
 ;
"RTN","OREVNTX1",97,0)
CHGEVT(ORY,NEWEVT,ORIDS) ; Change order's event
"RTN","OREVNTX1",98,0)
 N ORI
"RTN","OREVNTX1",99,0)
 S ORI=0
"RTN","OREVNTX1",100,0)
 F  S ORI=$O(ORIDS(ORI)) Q:'+ORI  D
"RTN","OREVNTX1",101,0)
 . D CHGEVT^OREVNTX(+$G(ORIDS(ORI)),NEWEVT)
"RTN","OREVNTX1",102,0)
 Q
"RTN","OREVNTX1",103,0)
 ;
"RTN","OREVNTX1",104,0)
EMPTY(ORY,PTEVT) ; Return 1 if PTEVT doesn't have any orders
"RTN","OREVNTX1",105,0)
 Q:'+PTEVT
"RTN","OREVNTX1",106,0)
 S ORY=$$EMPTY^OREVNTX(PTEVT)
"RTN","OREVNTX1",107,0)
 Q
"RTN","OREVNTX1",108,0)
 ;
"RTN","OREVNTX1",109,0)
DELPTEVT(ORY,PTEVT) ; Delete Patient Event in #100.2
"RTN","OREVNTX1",110,0)
 Q:'+PTEVT
"RTN","OREVNTX1",111,0)
 D CANCEL^OREVNTX(PTEVT)
"RTN","OREVNTX1",112,0)
 Q
"RTN","OREVNTX1",113,0)
 ;
"RTN","OREVNTX1",114,0)
UPDTOR(ORY,PTIFN,ORIFN,PTEVT) ; If delayed order was DCed, then update the EVENT and "AEVNT"
"RTN","OREVNTX1",115,0)
 Q  ;Don't ever need to do this!
"RTN","OREVNTX1",116,0)
CURSPE(ORY,PTIFN) ; Return current treating specialty
"RTN","OREVNTX1",117,0)
 Q:'PTIFN
"RTN","OREVNTX1",118,0)
 N SPCID
"RTN","OREVNTX1",119,0)
 I $D(^DPT(PTIFN,.103)) D
"RTN","OREVNTX1",120,0)
 . S SPCID=$G(^DPT(PTIFN,.103))
"RTN","OREVNTX1",121,0)
 . S:SPCID ORY=$P($G(^DIC(45.7,SPCID,0)),U)_U_SPCID
"RTN","OREVNTX1",122,0)
 Q
"RTN","OREVNTX1",123,0)
DFLTEVT(ORY,PVIFN) ; Return default release event based on provider IFN
"RTN","OREVNTX1",124,0)
 N CMEVTLST,IDX
"RTN","OREVNTX1",125,0)
 S CMEVTLST="",IDX=0
"RTN","OREVNTX1",126,0)
 D GETLST^OREV3(.CMEVTLST)
"RTN","OREVNTX1",127,0)
 F  S IDX=$O(CMEVTLST(IDX)) Q:'IDX  D
"RTN","OREVNTX1",128,0)
 . I $P($G(CMEVTLST(IDX)),U,2) S ORY=$P($G(CMEVTLST(IDX)),U) Q
"RTN","OREVNTX1",129,0)
 Q
"RTN","OREVNTX1",130,0)
CMEVTS(ORY,CLOC) ;Return common event list
"RTN","OREVNTX1",131,0)
 N IDX,X0,X,LOC
"RTN","OREVNTX1",132,0)
 S:CLOC>0 LOC=CLOC
"RTN","OREVNTX1",133,0)
 S IDX=0,ORY=""
"RTN","OREVNTX1",134,0)
 D GETLST^OREV3(.ORY)
"RTN","OREVNTX1",135,0)
 F  S IDX=$O(ORY(IDX)) Q:'IDX  D
"RTN","OREVNTX1",136,0)
 . S X0=""
"RTN","OREVNTX1",137,0)
 . S:$L($G(^ORD(100.5,+ORY(IDX),0))) X0=$G(^(0))
"RTN","OREVNTX1",138,0)
 . I '$L($P(X0,U,2)) D
"RTN","OREVNTX1",139,0)
 .. S X=$P(X0,U,12) S:X $P(X0,U,2)=$P($G(^ORD(100.5,+X,0)),U,2)
"RTN","OREVNTX1",140,0)
 . S:$L(X0) ORY(IDX)=+ORY(IDX)_U_X0
"RTN","OREVNTX1",141,0)
 Q
"RTN","OREVNTX1",142,0)
 ;
"RTN","OREVNTX1",143,0)
DELDFLT(ORY,PVIFN) ; Delete default release event
"RTN","OREVNTX1",144,0)
 Q:'PVIFN
"RTN","OREVNTX1",145,0)
 N ORERR
"RTN","OREVNTX1",146,0)
 S ORERR=""
"RTN","OREVNTX1",147,0)
 D DEL^XPAR(PVIFN_";VA(200,","OREVNT DEFAULT",1,.ORERR)
"RTN","OREVNTX1",148,0)
 Q
"RTN","OREVNTX1",149,0)
WRLSTED(LST,LOC,EVTID) ; Return list of dialogs for writing event delayed orders
"RTN","OREVNTX1",150,0)
 ; .Y(n): DlgName^ListBox Text
"RTN","OREVNTX1",151,0)
WRLST1 N ANENT
"RTN","OREVNTX1",152,0)
 S LOC=+$G(LOC)_";SC(" I 'LOC S LOC=""
"RTN","OREVNTX1",153,0)
 S ANENT="ALL^USR.`"_DUZ_"^"_LOC_$S($G(^VA(200,DUZ,5)):"^SRV.`"_+$G(^(5)),1:"")
"RTN","OREVNTX1",154,0)
 N MNU,SEQ,IEN,ITM,TXT,FID,DGRP,X,TYP
"RTN","OREVNTX1",155,0)
 S MNU=$$GET^XPAR(ANENT,"ORWDX WRITE ORDERS EVENT LIST",EVTID,"I") Q:'MNU
"RTN","OREVNTX1",156,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,MNU,10,"B",SEQ)) Q:'SEQ  D
"RTN","OREVNTX1",157,0)
 . S IEN=0 F  S IEN=$O(^ORD(101.41,MNU,10,"B",SEQ,IEN)) Q:'IEN  D
"RTN","OREVNTX1",158,0)
 . . S X=$G(^ORD(101.41,MNU,10,IEN,0)),ITM=+$P(X,U,2),TXT=$P(X,U,4)
"RTN","OREVNTX1",159,0)
 . . S X=$G(^ORD(101.41,ITM,5)),FID=+$P(X,U,5)
"RTN","OREVNTX1",160,0)
 . . S X=$G(^ORD(101.41,ITM,0)),TYP=$P(X,U,4),DGRP=+$P(X,U,5)
"RTN","OREVNTX1",161,0)
 . . S:'$L(TXT) TXT=$P(X,U,2)
"RTN","OREVNTX1",162,0)
 . . I TYP="M" S:'FID FID=1001
"RTN","OREVNTX1",163,0)
 . . S LST(SEQ)=ITM_";"_FID_";"_DGRP_";"_TYP_U_TXT
"RTN","OREVNTX1",164,0)
 Q
"RTN","OREVNTX1",165,0)
 ;
"RTN","OREVNTX1",166,0)
GETDLG(LST,DLGID) ; Return dialog infomation based on the DLGID
"RTN","OREVNTX1",167,0)
 N DIEN,DFID,DTXT,DTYP,DGRP,X0,X5
"RTN","OREVNTX1",168,0)
 S DLGID=+DLGID
"RTN","OREVNTX1",169,0)
 Q:'DLGID
"RTN","OREVNTX1",170,0)
 S X0=^ORD(101.41,DLGID,0),X5=$G(^(5))
"RTN","OREVNTX1",171,0)
 S DGRP=+$P(X0,U,5),DFID=+$P(X5,U,5),DTXT=$P(X5,U,4),DTYP=$P(X0,U,4)
"RTN","OREVNTX1",172,0)
    S:'$L(DTXT) DTXT=$P(X0,U,2)
"RTN","OREVNTX1",173,0)
 I $P(X0,U,4)="M" S:'DFID DFID=1001
"RTN","OREVNTX1",174,0)
 S LST=DLGID_";"_DFID_";"_DGRP_";"_DTYP_U_DTXT
"RTN","OREVNTX1",175,0)
 Q
"RTN","OREVNTX1",176,0)
DONE(LST,PTEVT) ; Terminate PTEvt
"RTN","OREVNTX1",177,0)
 Q:'PTEVT
"RTN","OREVNTX1",178,0)
 D DONE^OREVNTX(PTEVT)
"RTN","OREVNTX1",179,0)
 D ACTLOG^OREVNTX(PTEVT,"MN")
"RTN","OREVNTX1",180,0)
 Q
"RTN","OREVNTX1",181,0)
SETDFLT(ORY,EVT) ;Set personal default event
"RTN","OREVNTX1",182,0)
 N ERR,VAL S ERR=""
"RTN","OREVNTX1",183,0)
 Q:'$D(^ORD(100.5,EVT,0))
"RTN","OREVNTX1",184,0)
 S VAL=$P(^ORD(100.5,EVT,0),U)
"RTN","OREVNTX1",185,0)
 D EN^XPAR(DUZ_";VA(200,","OREVNT DEFAULT",1,VAL,ERR)
"RTN","OREVNTX1",186,0)
 S ORY=ERR
"RTN","OREVNTX1",187,0)
 Q
"RTN","OREVNTX1",188,0)
CPACT(ORY,EVT) ; Return True/False to display active orders for copy
"RTN","OREVNTX1",189,0)
 ; EVT ptr to #100.5
"RTN","OREVNTX1",190,0)
 Q:'EVT
"RTN","OREVNTX1",191,0)
 S ORY=0
"RTN","OREVNTX1",192,0)
 Q:'$D(^ORD(100.5,EVT,0))
"RTN","OREVNTX1",193,0)
 S ORY=$P(^ORD(100.5,EVT,0),U,11)
"RTN","OREVNTX1",194,0)
 Q
"RTN","OREVNTX1",195,0)
PRMPTID(ORY,PRTNM) ;Return event prompt IEN for OR GTX EVENT
"RTN","OREVNTX1",196,0)
 S:$D(^ORD(101.41,"B","OR GTX EVENT")) ORY=$O(^("OR GTX EVENT",0))
"RTN","OREVNTX1",197,0)
 Q
"RTN","OREVNTX1",198,0)
ISDCOD(ORY,ORIFN) ;True: the order need to be filtered out
"RTN","OREVNTX1",199,0)
 N PAS,X3,X0,ORGRPLST,THEGRP,IDX,ODGRP
"RTN","OREVNTX1",200,0)
 S (ORY,IDX)=0
"RTN","OREVNTX1",201,0)
 Q:'$D(^OR(100,+ORIFN,0))
"RTN","OREVNTX1",202,0)
 S X0=$G(^OR(100,+ORIFN,0))
"RTN","OREVNTX1",203,0)
 S ODGRP=$P(X0,U,11)
"RTN","OREVNTX1",204,0)
 D GETLST^XPAR(.ORGRPLST,"ALL","OREVNT EXCLUDE DGRP")
"RTN","OREVNTX1",205,0)
 F  S IDX=$O(ORGRPLST(IDX)) Q:'IDX!ORY  D
"RTN","OREVNTX1",206,0)
 . S THEGRP=$P($G(ORGRPLST(IDX)),U,2)
"RTN","OREVNTX1",207,0)
 . I $$GRPCHK(THEGRP,ODGRP) S ORY=1
"RTN","OREVNTX1",208,0)
 I ORY Q
"RTN","OREVNTX1",209,0)
 S PAS=";1;"
"RTN","OREVNTX1",210,0)
 S:$D(^OR(100,+ORIFN,3)) X3=^OR(100,+ORIFN,3)
"RTN","OREVNTX1",211,0)
 S:(PAS'[(";"_$P(X3,U,3)_";")) ORY=0
"RTN","OREVNTX1",212,0)
 Q
"RTN","OREVNTX1",213,0)
DEFLTS(ORY,EVTID) ;Return default specialty for EVTID(#100.5)
"RTN","OREVNTX1",214,0)
 Q:'+EVTID
"RTN","OREVNTX1",215,0)
 N PRTEVT
"RTN","OREVNTX1",216,0)
 S PRTEVT=0
"RTN","OREVNTX1",217,0)
 S PRTEVT=$P(^ORD(100.5,+EVTID,0),U,12)
"RTN","OREVNTX1",218,0)
 I PRTEVT>0 S EVTID=PRTEVT
"RTN","OREVNTX1",219,0)
 S ORY=$$DEFTS^ORCDADT(EVTID)
"RTN","OREVNTX1",220,0)
 Q
"RTN","OREVNTX1",221,0)
 ;
"RTN","OREVNTX1",222,0)
MULTS(ORY,EVTID) ;Return specialty list for the EVTID(#100.5)
"RTN","OREVNTX1",223,0)
 Q:'+EVTID
"RTN","OREVNTX1",224,0)
 N I,CNT,X,Y S (I,CNT)=0
"RTN","OREVNTX1",225,0)
 N PRTEVT
"RTN","OREVNTX1",226,0)
 S PRTEVT=0
"RTN","OREVNTX1",227,0)
 S PRTEVT=$P(^ORD(100.5,+EVTID,0),U,12)
"RTN","OREVNTX1",228,0)
 I PRTEVT>0 S EVTID=PRTEVT
"RTN","OREVNTX1",229,0)
 F  S I=$O(^ORD(100.5,+$G(EVTID),"TS",I)) Q:I<1  S X=+$G(^(I,0)) D
"RTN","OREVNTX1",230,0)
 . S Y=$$GET1^DIQ(45.7,X_",",.01)
"RTN","OREVNTX1",231,0)
 . S CNT=CNT+1,ORY(CNT)=X_U_Y
"RTN","OREVNTX1",232,0)
 Q
"RTN","OREVNTX1",233,0)
 ;
"RTN","OREVNTX1",234,0)
PRTIDS(ORY,IDS) ;Return some prompt ids from #101.41
"RTN","OREVNTX1",235,0)
 ; treating specialty Id^attending provider id
"RTN","OREVNTX1",236,0)
 N IDX,ORTS,ORATT
"RTN","OREVNTX1",237,0)
 S (ORY,ORTS,ORATT)=""
"RTN","OREVNTX1",238,0)
 S IDX=$O(^ORD(101.41,"B","OR GTX TREATING SPECIALTY",0))
"RTN","OREVNTX1",239,0)
 S:$D(^ORD(101.41,IDX,1)) ORTS=$P($G(^ORD(101.41,IDX,1)),U,2,3)
"RTN","OREVNTX1",240,0)
 S IDX=$O(^ORD(101.41,"B","OR GTX PROVIDER",0))
"RTN","OREVNTX1",241,0)
 S:$D(^ORD(101.41,IDX,1)) ORATT=$P($G(^ORD(101.41,IDX,1)),U,2,3)
"RTN","OREVNTX1",242,0)
 S ORY=ORTS_"~"_ORATT
"RTN","OREVNTX1",243,0)
 Q
"RTN","OREVNTX1",244,0)
 ;
"RTN","OREVNTX1",245,0)
DFLTDLG(ORY,EVTID) ;Return event default dialog IEN
"RTN","OREVNTX1",246,0)
 S ORY=0
"RTN","OREVNTX1",247,0)
 Q:'$D(^ORD(100.5,+EVTID,0))
"RTN","OREVNTX1",248,0)
 S ORY=$P(^ORD(100.5,+EVTID,0),U,4)
"RTN","OREVNTX1",249,0)
 Q
"RTN","OREVNTX1",250,0)
AUTHMREL(ORY,USER) ;1: user can manual release delayed orders 0: can't
"RTN","OREVNTX1",251,0)
 S ORY=$$CANREL^OREV3
"RTN","OREVNTX1",252,0)
 Q
"RTN","OREVNTX1",253,0)
HAVEPRT(ORY,PTEVT) ;return parent patient event from #100.2
"RTN","OREVNTX1",254,0)
 Q:'+PTEVT
"RTN","OREVNTX1",255,0)
 S ORY=""
"RTN","OREVNTX1",256,0)
 S:$L($G(^ORE(100.2,PTEVT,1))) ORY=$P(^(1),U,5)
"RTN","OREVNTX1",257,0)
 Q
"RTN","OREVNTX1",258,0)
GRPCHK(DG,AGRP) ;If an order's group belong to DG group
"RTN","OREVNTX1",259,0)
 N RST
"RTN","OREVNTX1",260,0)
 S RST=0
"RTN","OREVNTX1",261,0)
 N ORGRP
"RTN","OREVNTX1",262,0)
 D GRP^ORQ1(DG)
"RTN","OREVNTX1",263,0)
 S RST=$S($D(ORGRP(AGRP)):1,1:0)
"RTN","OREVNTX1",264,0)
 Q RST
"RTN","OREVNTX1",265,0)
ODPTEVID(ORY,ORID) ;Return PtEvtID based on the ORID
"RTN","OREVNTX1",266,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","OREVNTX1",267,0)
 S ORY=$P($G(^OR(100,+ORID,0)),U,17)
"RTN","OREVNTX1",268,0)
 Q
"RTN","OREVNTX1",269,0)
COMP(ORY,PTEVT) ;Return 1 or 0 if PTEVT completed or not
"RTN","OREVNTX1",270,0)
 Q:'+PTEVT
"RTN","OREVNTX1",271,0)
 S ORY=$$COMP^OREVNTX(+PTEVT)
"RTN","OREVNTX1",272,0)
 Q
"RTN","OREVNTX1",273,0)
ISHDORD(ORY,ORID) ;Return 1 if it's on-hold med order
"RTN","OREVNTX1",274,0)
 Q:'+ORID
"RTN","OREVNTX1",275,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","OREVNTX1",276,0)
 N STS,HDSTS,ODGP,INPT,OUPT,MEDS,IVMD
"RTN","OREVNTX1",277,0)
 S HDSTS=$O(^ORD(100.01,"B","HOLD",0))
"RTN","OREVNTX1",278,0)
 S STS=$P($G(^OR(100,+ORID,3)),U,3)
"RTN","OREVNTX1",279,0)
 S INPT=$O(^ORD(100.98,"B","UD RX",0))
"RTN","OREVNTX1",280,0)
 S OUPT=$O(^ORD(100.98,"B","O RX",0))
"RTN","OREVNTX1",281,0)
 S MEDS=$O(^ORD(100.98,"B","RX",0))
"RTN","OREVNTX1",282,0)
 S IVMD=$O(^ORD(100.98,"B","IV RX",0))
"RTN","OREVNTX1",283,0)
 S ODGP=$P(^OR(100,+ORID,0),U,11)
"RTN","OREVNTX1",284,0)
 I (U_INPT_U_OUPT_U_MEDS_U_IVMD_U[U_ODGP_U),(HDSTS=STS) S ORY=1
"RTN","OREVNTX1",285,0)
 Q
"RTN","OREVNTX1",286,0)
ISPASS(ORY,PTEVTID,EVTTYPE) ;Return 1 if it's a pass event
"RTN","OREVNTX1",287,0)
 S ORY=$$EVT^OREVNTX(PTEVTID)
"RTN","OREVNTX1",288,0)
 S ORY=$P($G(^ORD(100.5,+ORY,0)),U,7)
"RTN","OREVNTX1",289,0)
 I EVTTYPE="T",ORY,ORY<4 S ORY=1
"RTN","OREVNTX1",290,0)
 E  S ORY=0
"RTN","OREVNTX1",291,0)
 Q
"RTN","OREVNTX1",292,0)
ISPASS1(ORY,EVTID,EVTTYPE) ;Return 1 if it's a pass event
"RTN","OREVNTX1",293,0)
 S ORY=$P($G(^ORD(100.5,+EVTID,0)),U,7)
"RTN","OREVNTX1",294,0)
 I EVTTYPE="T",ORY,ORY<4 S ORY=1
"RTN","OREVNTX1",295,0)
 E  S ORY=0
"RTN","OREVNTX1",296,0)
 Q
"RTN","OREVNTX1",297,0)
DLGIEN(ORY,DLGNAME) ;Return Order Dialog IEN based on name
"RTN","OREVNTX1",298,0)
 Q:'$D(^ORD(101.41,"B",DLGNAME))
"RTN","OREVNTX1",299,0)
 S ORY=$O(^ORD(101.41,"B",DLGNAME,0))
"RTN","OREVNTX1",300,0)
 Q
"RTN","OREVNTX1",301,0)
GETSTS(ORY,ORDID) ;Return Order status
"RTN","OREVNTX1",302,0)
 Q:'+ORDID
"RTN","OREVNTX1",303,0)
 Q:'$D(^OR(100,+ORDID,0))
"RTN","OREVNTX1",304,0)
 S ORY=$P($G(^OR(100,+ORDID,3)),U,3)
"RTN","OREVNTX1",305,0)
 Q
"RTN","ORMPS")
0^27^B69720054
"RTN","ORMPS",1,0)
ORMPS ; SLC/MKB - Process Pharmacy ORM msgs ;3/8/02  13:05
"RTN","ORMPS",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**3,54,62,86,92,94,116,138,152,141,165,149**;Dec 17, 1997
"RTN","ORMPS",3,0)
EN ; -- entry point for PS messages
"RTN","ORMPS",4,0)
 I '$L($T(@ORDCNTRL)) Q  ;S ORERR="Invalid order control code" Q
"RTN","ORMPS",5,0)
 I ORDCNTRL'="SN",ORDCNTRL'="ZC",ORDCNTRL'="ZP",'ORIFN!('$D(^OR(100,+ORIFN,0))) S ORERR="Invalid OE/RR order number" Q
"RTN","ORMPS",6,0)
 N ORSTS,RXE,ZRX,ORWHO,ORNOW
"RTN","ORMPS",7,0)
 S ORSTS=$$STATUS(ORDSTS),RXE=$$RXE,ZRX=$$ZRX D QT^ORMPS1 ;QT in RXE
"RTN","ORMPS",8,0)
 S ORNOW=+$E($$NOW^XLFDT,1,12),ORWHO=+$P(ZRX,"|",6) S:'ORWHO ORWHO=DUZ
"RTN","ORMPS",9,0)
 S:ORLOG ORLOG=+$E(ORLOG,1,12) ;no seconds
"RTN","ORMPS",10,0)
 S:'$L(ORNATR) ORNATR=$P(ZRX,"|",3) S:OREASON["^" OREASON=$P(OREASON,U,5)
"RTN","ORMPS",11,0)
 I ORNATR="D",'$L(OREASON) S OREASON="DUPLICATE"
"RTN","ORMPS",12,0)
 D @ORDCNTRL
"RTN","ORMPS",13,0)
 Q
"RTN","ORMPS",14,0)
 ;
"RTN","ORMPS",15,0)
ZV ; -- Verified
"RTN","ORMPS",16,0)
 N ORUSR,ORVER,ORDA,ORES,ORI
"RTN","ORMPS",17,0)
 S ORUSR=+$P(ORC,"|",12),ORVER="N" Q:'ORUSR
"RTN","ORMPS",18,0)
 S ORDA=+$P($G(^OR(100,+ORIFN,3)),U,7),ORES(+ORIFN_";"_ORDA)=""
"RTN","ORMPS",19,0)
 Q:$P($G(^OR(100,+ORIFN,8,ORDA,0)),U,8)  ;already verified
"RTN","ORMPS",20,0)
 D REPLCD^ORCACT1 ;get unverified replaced orders
"RTN","ORMPS",21,0)
 S ORI="" F  S ORI=$O(ORES(ORI)) Q:ORI=""  D
"RTN","ORMPS",22,0)
 . S ORDA=+$P(ORI,";",2)
"RTN","ORMPS",23,0)
 . D VERIFY^ORCSAVE2(+ORI,ORDA,"N",ORUSR,ORLOG)
"RTN","ORMPS",24,0)
 Q
"RTN","ORMPS",25,0)
 ;
"RTN","ORMPS",26,0)
ZP ; -- Purged
"RTN","ORMPS",27,0)
 Q:'ORIFN  Q:'$D(^OR(100,+ORIFN,0))
"RTN","ORMPS",28,0)
 K ^OR(100,+ORIFN,4) I "^3^5^6^15^"[(U_$P($G(^(3)),U,3)_U) D STATUS^ORCSAVE2(+ORIFN,14) ;Remove pkg reference, sts=lapsed if still active
"RTN","ORMPS",29,0)
 Q
"RTN","ORMPS",30,0)
 ;
"RTN","ORMPS",31,0)
ZR ; -- Purged as requested [ack]
"RTN","ORMPS",32,0)
 D DELETE^ORCSAVE2(+ORIFN)
"RTN","ORMPS",33,0)
 Q
"RTN","ORMPS",34,0)
 ;
"RTN","ORMPS",35,0)
ZU ; -- Unable to purge [ack]
"RTN","ORMPS",36,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT ;update Last Activity
"RTN","ORMPS",37,0)
 Q
"RTN","ORMPS",38,0)
 ;
"RTN","ORMPS",39,0)
XR ; -- Changed as requested [ack]
"RTN","ORMPS",40,0)
 N ORIG S ORIG=$P(^OR(100,+ORIFN,3),U,5) I ORIG,$P(^OR(100,ORIG,3),U,3)'=12 D STATUS^ORCSAVE2(ORIG,12)
"RTN","ORMPS",41,0)
OK ; -- Order accepted, PS order # assigned [ack]
"RTN","ORMPS",42,0)
 S ^OR(100,+ORIFN,4)=PKGIFN ;PS identifier
"RTN","ORMPS",43,0)
 D:ORSTS STATUS^ORCSAVE2(+ORIFN,ORSTS)
"RTN","ORMPS",44,0)
 Q
"RTN","ORMPS",45,0)
 ;
"RTN","ORMPS",46,0)
ZC ; -- Convert existing 2.5 orders to 3.0 format
"RTN","ORMPS",47,0)
 N RXO,RXC,ORDIALOG,ORDG,ORPKG,ORP,ORSIG,ORIG,TYPE,EVNT
"RTN","ORMPS",48,0)
 I '$D(^VA(200,ORDUZ,0)) S ORERR="Missing or invalid entering person" Q
"RTN","ORMPS",49,0)
 I '$D(^VA(200,ORNP,0)) S ORERR="Missing or invalid ordering provider" Q
"RTN","ORMPS",50,0)
 I 'RXE S ORERR="Missing or invalid RXE segment" Q
"RTN","ORMPS",51,0)
 S RXO=$$RXO,RXC=$$RXC K ^TMP("ORWORD",$J)
"RTN","ORMPS",52,0)
 D @($S(RXC:"IV",$G(ORCAT)="I":"UDOSE",1:"OUT")_"^ORMPS1")
"RTN","ORMPS",53,0)
ZC1 ; continue ... save responses, post reply
"RTN","ORMPS",54,0)
 Q:$D(ORERR)  I 'ORIFN!('$D(^OR(100,+ORIFN,0))) D  Q  ;create
"RTN","ORMPS",55,0)
 . K ORIFN D SN1 Q:'$G(ORIFN)  S ORDCNTRL="SN"
"RTN","ORMPS",56,0)
 . I ORSTOP,ORSTOP<ORNOW S $P(^OR(100,ORIFN,3),U)=ORSTOP
"RTN","ORMPS",57,0)
 S ORIFN=+ORIFN D RESPONSE^ORCSAVE K ^TMP("ORWORD",$J)
"RTN","ORMPS",58,0)
 S ^OR(100,ORIFN,4)=PKGIFN,$P(^(0),U,5)=+ORDIALOG_";ORD(101.41,"
"RTN","ORMPS",59,0)
 D DATES^ORCSAVE2(ORIFN,ORSTRT,ORSTOP),STATUS^ORCSAVE2(ORIFN,ORSTS):ORSTS
"RTN","ORMPS",60,0)
 Q
"RTN","ORMPS",61,0)
 ;
"RTN","ORMPS",62,0)
SN ; -- New backdoor order, return OE# via NA msg
"RTN","ORMPS",63,0)
 I $$FINISHED^ORMPS2 D RO^ORMPS2 Q  ;change action instead
"RTN","ORMPS",64,0)
 N RXO,RXC,ORDIALOG,ORDG,ORPKG,ORP,ORSIG,ORIG,TYPE,EVNT,ZSC
"RTN","ORMPS",65,0)
 I '$D(^VA(200,ORDUZ,0)) S ORERR="Missing or invalid entering person" Q
"RTN","ORMPS",66,0)
 I '$D(^VA(200,ORNP,0)) S ORERR="Missing or invalid ordering provider" Q
"RTN","ORMPS",67,0)
 ; I '$G(ORL) S ORERR="Missing or invalid patient location" Q
"RTN","ORMPS",68,0)
 I 'RXE S ORERR="Missing or invalid RXE segment" Q
"RTN","ORMPS",69,0)
 S RXO=$$RXO,RXC=$$RXC K ^TMP("ORWORD",$J),ORIFN
"RTN","ORMPS",70,0)
 D @($S(RXC:"IV",$G(ORCAT)="I":"UDOSE",1:"OUT")_"^ORMPS1") Q:$D(ORERR)
"RTN","ORMPS",71,0)
SN1 ; continue ... save order, post messsage
"RTN","ORMPS",72,0)
 D EN^ORCSAVE K ^TMP("ORWORD",$J)
"RTN","ORMPS",73,0)
 I '$G(ORIFN) S ORERR="Cannot create new order" Q
"RTN","ORMPS",74,0)
 S ORIG=+$P(ZRX,"|",2),TYPE=$P(ZRX,"|",4) I ORIG D  ;set fwd/bwd ptrs
"RTN","ORMPS",75,0)
 . S TYPE=$S(TYPE="R":2,1:1)
"RTN","ORMPS",76,0)
 . S $P(^OR(100,ORIFN,3),U,5)=ORIG,$P(^(3),U,11)=TYPE
"RTN","ORMPS",77,0)
 . I $D(^OR(100,ORIG,0)) S $P(^(3),U,6)=ORIFN,EVNT=$P(^(0),U,17) I $L(EVNT),TYPE=1 S $P(^OR(100,ORIFN,0),U,17)=EVNT
"RTN","ORMPS",78,0)
 I $G(ORCAT)="O" S ZSC=$$ZSC^ORMPS1 I ZSC,$P(ZSC,"|",2)'?2.3U S ^OR(100,ORIFN,5)=$TR($P(ZSC,"|",2,7),"|","^") ;1 or 0 instead of [N]SC
"RTN","ORMPS",79,0)
SN2 D DATES^ORCSAVE2(ORIFN,ORSTRT,ORSTOP)
"RTN","ORMPS",80,0)
 D:ORSTS STATUS^ORCSAVE2(ORIFN,ORSTS)
"RTN","ORMPS",81,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORLOG,ORDUZ,ORNATR)
"RTN","ORMPS",82,0)
 ; if unsigned edit, leave ORIFN unsigned & mark ORIG as Sig Not Req'd
"RTN","ORMPS",83,0)
 S ORSIG=$S('ORIG:1,TYPE'=1:1,$P($G(^OR(100,ORIG,8,1,0)),U,4)'=2:1,1:0)
"RTN","ORMPS",84,0)
 D SIGSTS^ORCSAVE2(ORIFN,1):ORSIG,SIGN^ORCSAVE2(ORIG,,,5,1):'ORSIG
"RTN","ORMPS",85,0)
 I ORDCNTRL="SN" D  ;print
"RTN","ORMPS",86,0)
 . S:ORNATR="" $P(^OR(100,ORIFN,8,1,0),U,12)="" ;CHCS/OP orders
"RTN","ORMPS",87,0)
 . S ORP(1)=ORIFN_";1"_$S(ORNATR="":"^^^^1",$G(ORL):"^1",1:"")
"RTN","ORMPS",88,0)
 . I ORP(1)["^" D PRINTS^ORWD1(.ORP,+$G(ORL))
"RTN","ORMPS",89,0)
 S ^OR(100,ORIFN,4)=PKGIFN
"RTN","ORMPS",90,0)
 Q
"RTN","ORMPS",91,0)
 ;
"RTN","ORMPS",92,0)
XX ; -- Changed (new order not necessary)
"RTN","ORMPS",93,0)
 Q:$P($G(^OR(100,+ORIFN,3)),U,3)=5  ;pending - update when finished
"RTN","ORMPS",94,0)
 I '$$CHANGED^ORMPS2 D SC Q  ;ck sts/dates only
"RTN","ORMPS",95,0)
RO ; -- Replacement order (finished)
"RTN","ORMPS",96,0)
 S:ORNATR="" ORNATR="S" D RO^ORMPS2
"RTN","ORMPS",97,0)
 Q
"RTN","ORMPS",98,0)
 ;
"RTN","ORMPS",99,0)
SC ; -- Status changed (verified, expired, suspended, renewed, reinstate)
"RTN","ORMPS",100,0)
 N OR0,OR3,ZSC,DONE S OR0=$G(^OR(100,+ORIFN,0)),OR3=$G(^(3))
"RTN","ORMPS",101,0)
 I $P(OR3,U,3)=5,ORSTS=6 D  Q:$G(DONE)
"RTN","ORMPS",102,0)
 . I $$CHANGED^ORMPS2 S ORNATR="S" D RO^ORMPS2 S DONE=1 Q
"RTN","ORMPS",103,0)
 . I $P(ZRX,"|",7)="TPN",+$P(OR0,U,11)'=$O(^ORD(100.98,"B","TPN",0)) D
"RTN","ORMPS",104,0)
 .. N DA,DR,DIE,ORDG S ORDG=+$O(^ORD(100.98,"B","TPN",0))
"RTN","ORMPS",105,0)
 .. S DA=+ORIFN,DR="23////"_ORDG,DIE="^OR(100," D ^DIE
"RTN","ORMPS",106,0)
 D DATES^ORCSAVE2(+ORIFN,ORSTRT,ORSTOP)
"RTN","ORMPS",107,0)
 D:ORSTS STATUS^ORCSAVE2(+ORIFN,ORSTS)
"RTN","ORMPS",108,0)
 I ORSTS=$P(OR3,U,3),ORSTOP'=$P(OR0,U,9) D SETALL^ORDD100(+ORIFN) ;AC xrf
"RTN","ORMPS",109,0)
 S ^OR(100,+ORIFN,4)=PKGIFN
"RTN","ORMPS",110,0)
 I "^1^13^"[(U_$P(OR3,U,3)_U),"^3^5^6^15^"[(U_ORSTS_U) D  ;reinstated
"RTN","ORMPS",111,0)
 . I $P($G(^OR(100,+ORIFN,8,+$P(OR3,U,7),0)),U,2)="DC" S ^(2)=ORNOW_U_ORWHO ; When^Who reinstated order
"RTN","ORMPS",112,0)
 . S I="?" F  S I=$O(^OR(100,+ORIFN,8,I),-1) Q:'+I  I $P(^(I,0),U,15)="" S $P(^OR(100,+ORIFN,3),U,7)=I Q  ;138 Finds current action
"RTN","ORMPS",113,0)
 . K ^OR(100,+ORIFN,6) D SETALL^ORDD100(+ORIFN)
"RTN","ORMPS",114,0)
 I $G(ORCAT)="O" S ZSC=$$ZSC^ORMPS1 I ZSC,$P(ZSC,"|",2)'?2.3U S ^OR(100,+ORIFN,5)=$TR($P(ZSC,"|",2,7),"|","^") ;1 or 0 instead of [N]SC
"RTN","ORMPS",115,0)
 Q
"RTN","ORMPS",116,0)
 ;
"RTN","ORMPS",117,0)
STATUS(X) ; -- Returns order status from HL7 code
"RTN","ORMPS",118,0)
 N Y S Y=$S(X="IP":5,X="CM":6,X="DC":1,X="ZE":7,X="HD":3,X="ZX":11,X="RP":12,X="ZZ":15,X="ZS":6,X="ZU":6,1:"")
"RTN","ORMPS",119,0)
 Q Y
"RTN","ORMPS",120,0)
 ;
"RTN","ORMPS",121,0)
DE ; -- Data Errors in SS msg
"RTN","ORMPS",122,0)
 Q
"RTN","ORMPS",123,0)
 ;
"RTN","ORMPS",124,0)
UA ; -- Unable to accept [ack]
"RTN","ORMPS",125,0)
UX ; -- Unable to change [ack]
"RTN","ORMPS",126,0)
 S:'$L(ORNATR) ORNATR="X" ;Rejected
"RTN","ORMPS",127,0)
 S ^OR(100,+ORIFN,6)=$O(^ORD(100.02,"C",ORNATR,0))_U_U_ORNOW_U_U_OREASON
"RTN","ORMPS",128,0)
 I $P($G(^OR(100,+ORIFN,3)),U,11)=2 N ORIG S ORIG=$P(^(3),U,5) S:ORIG $P(^OR(100,ORIG,3),U,6)="" ;remove fwd ptr if pending renewal
"RTN","ORMPS",129,0)
 D STATUS^ORCSAVE2(+ORIFN,13)
"RTN","ORMPS",130,0)
UC ; -- Unable to cancel [ack]
"RTN","ORMPS",131,0)
UD ; -- Unable to discontinue [ack]
"RTN","ORMPS",132,0)
UH ; -- Unable to hold [ack]
"RTN","ORMPS",133,0)
UR ; -- Unable to release hold [ack]
"RTN","ORMPS",134,0)
 N ORDA S ORDA=+$P(ORIFN,";",2) I ORDA D
"RTN","ORMPS",135,0)
 . S $P(^OR(100,+ORIFN,8,ORDA,0),U,15)=13 ;request rejected
"RTN","ORMPS",136,0)
 . S:$L(OREASON) ^OR(100,+ORIFN,8,ORDA,1)=OREASON
"RTN","ORMPS",137,0)
 Q
"RTN","ORMPS",138,0)
 ;
"RTN","ORMPS",139,0)
OC ; -- Cancelled (prior to pharmacist's verification)
"RTN","ORMPS",140,0)
 G:ORTYPE="ORR" UA S:ORNATR="A" ORWHO=""
"RTN","ORMPS",141,0)
 S:'ORSTS ORSTS=13 S:ORSTS=12 ORNATR="S"
"RTN","ORMPS",142,0)
 S ^OR(100,+ORIFN,6)=$S($L(ORNATR):$O(^ORD(100.02,"C",ORNATR,0)),1:"")_U_ORWHO_U_ORNOW_U_U_OREASON
"RTN","ORMPS",143,0)
 I $P($G(^OR(100,+ORIFN,3)),U,11)=2 N ORIG S ORIG=$P(^(3),U,5) S:ORIG $P(^OR(100,ORIG,3),U,6)="" ;remove fwd ptr when pending renewal cancelled
"RTN","ORMPS",144,0)
 S ^OR(100,+ORIFN,4)=PKGIFN S:ORSTOP>ORNOW ORSTOP=ORNOW
"RTN","ORMPS",145,0)
 D UPDATE(ORSTS,"DC")
"RTN","ORMPS",146,0)
 Q
"RTN","ORMPS",147,0)
 ;
"RTN","ORMPS",148,0)
CR ; -- Cancelled [ack]
"RTN","ORMPS",149,0)
 D STATUS^ORCSAVE2(+ORIFN,13) S ^OR(100,+ORIFN,4)=PKGIFN
"RTN","ORMPS",150,0)
 Q
"RTN","ORMPS",151,0)
 ;
"RTN","ORMPS",152,0)
OD ; -- Discontinued (cancelled after pharmacist's verification)
"RTN","ORMPS",153,0)
 S:'ORSTS ORSTS=1 S:ORSTS=12 ORNATR="C"
"RTN","ORMPS",154,0)
 I ORNATR="A" S ORWHO="" I $G(DGPMT)=3,$$MVT^DGPMOBS(DGPMDA) D XTMP^ORMEVNT ;save order#
"RTN","ORMPS",155,0)
 S ^OR(100,+ORIFN,6)=$S($L(ORNATR):$O(^ORD(100.02,"C",ORNATR,0)),1:"")_U_ORWHO_U_ORNOW_U_U_OREASON
"RTN","ORMPS",156,0)
 S ^OR(100,+ORIFN,4)=PKGIFN S:ORSTOP>ORNOW ORSTOP=ORNOW
"RTN","ORMPS",157,0)
 D UPDATE(ORSTS,"DC")
"RTN","ORMPS",158,0)
 Q
"RTN","ORMPS",159,0)
 ;
"RTN","ORMPS",160,0)
DR ; -- Discontinued [ack]
"RTN","ORMPS",161,0)
 D STATUS^ORCSAVE2(+ORIFN,1) S ^OR(100,+ORIFN,4)=PKGIFN
"RTN","ORMPS",162,0)
 Q
"RTN","ORMPS",163,0)
 ;
"RTN","ORMPS",164,0)
OH ; -- Held
"RTN","ORMPS",165,0)
 S:'ORSTS ORSTS=3 D UPDATE(ORSTS,"HD")
"RTN","ORMPS",166,0)
 Q
"RTN","ORMPS",167,0)
 ;
"RTN","ORMPS",168,0)
HR ; -- Held [ack]
"RTN","ORMPS",169,0)
 D STATUS^ORCSAVE2(+ORIFN,3)
"RTN","ORMPS",170,0)
 Q
"RTN","ORMPS",171,0)
 ;
"RTN","ORMPS",172,0)
RL ; -- Released hold
"RTN","ORMPS",173,0)
OE ; -- Released hold
"RTN","ORMPS",174,0)
 N ORDA S ORDA=+$P(^OR(100,+ORIFN,3),U,7)
"RTN","ORMPS",175,0)
 I $P($G(^OR(100,+ORIFN,8,ORDA,0)),U,2)="HD" S $P(^(2),U,1,2)=ORNOW_U_ORWHO
"RTN","ORMPS",176,0)
 S:'$G(ORSTS) ORSTS=6 D UPDATE(ORSTS,"RL")
"RTN","ORMPS",177,0)
 Q
"RTN","ORMPS",178,0)
 ;
"RTN","ORMPS",179,0)
OR ; -- Released / [ack]
"RTN","ORMPS",180,0)
 S:'ORSTS ORSTS=6 D STATUS^ORCSAVE2(+ORIFN,ORSTS)
"RTN","ORMPS",181,0)
 D:ORSTRT!ORSTOP DATES^ORCSAVE2(+ORIFN,ORSTRT,ORSTOP)
"RTN","ORMPS",182,0)
 Q
"RTN","ORMPS",183,0)
 ;
"RTN","ORMPS",184,0)
UPDATE(ORSTS,ORACT) ; -- continue processing
"RTN","ORMPS",185,0)
 N ORX,ORDA,ORP D:$G(ORSTS) STATUS^ORCSAVE2(+ORIFN,ORSTS)
"RTN","ORMPS",186,0)
 D:ORSTRT!ORSTOP DATES^ORCSAVE2(+ORIFN,ORSTRT,ORSTOP)
"RTN","ORMPS",187,0)
 S ORX=$$CREATE^ORX1(ORNATR) D:ORX
"RTN","ORMPS",188,0)
 . S ORDA=$$ACTION^ORCSAVE(ORACT,+ORIFN,ORNP,OREASON,ORNOW,ORWHO)
"RTN","ORMPS",189,0)
 . I ORDA'>0 S ORERR="Cannot create new order action" Q
"RTN","ORMPS",190,0)
 . D RELEASE^ORCSAVE2(+ORIFN,ORDA,ORNOW,ORWHO,ORNATR)
"RTN","ORMPS",191,0)
 . D SIGSTS^ORCSAVE2(+ORIFN,ORDA)
"RTN","ORMPS",192,0)
 . I $G(ORL) S ORP(1)=+ORIFN_";"_ORDA_"^1" D PRINTS^ORWD1(.ORP,+ORL)
"RTN","ORMPS",193,0)
 . S $P(^OR(100,+ORIFN,3),U,7)=ORDA
"RTN","ORMPS",194,0)
 I 'ORX,ORACT="DC",'$$ACTV^ORX1(ORNATR) S $P(^OR(100,+ORIFN,3),U,7)=0
"RTN","ORMPS",195,0)
 D:$G(ORACT)="DC" CANCEL^ORCSEND(+ORIFN)
"RTN","ORMPS",196,0)
 Q
"RTN","ORMPS",197,0)
 ;
"RTN","ORMPS",198,0)
RXO() ; -- Return subscript of RXO segment
"RTN","ORMPS",199,0)
 N I,X S X="",I=$O(@ORMSG@(+ORC))
"RTN","ORMPS",200,0)
 I I,$E(@ORMSG@(I),1,3)="RXO" S X=I_U_@ORMSG@(I)
"RTN","ORMPS",201,0)
 Q X
"RTN","ORMPS",202,0)
 ;
"RTN","ORMPS",203,0)
RXE() ; -- Return subscript of RXE segment
"RTN","ORMPS",204,0)
 N X,I,SEG S X="",I=+ORC
"RTN","ORMPS",205,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  I SEG="RXE" S X=I_U_@ORMSG@(I) Q
"RTN","ORMPS",206,0)
 Q X
"RTN","ORMPS",207,0)
 ;
"RTN","ORMPS",208,0)
RXR() ; -- Return subscript of RXR segment
"RTN","ORMPS",209,0)
 N X,I,SEG S X="",I=+RXE
"RTN","ORMPS",210,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  I SEG="RXR" S X=I_U_@ORMSG@(I) Q
"RTN","ORMPS",211,0)
 Q X
"RTN","ORMPS",212,0)
 ;
"RTN","ORMPS",213,0)
RXC() ; -- Return subscript of [first] RXC segment
"RTN","ORMPS",214,0)
 N X,I,SEG S X="",I=+RXE
"RTN","ORMPS",215,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  I SEG="RXC" S X=I Q
"RTN","ORMPS",216,0)
 Q X
"RTN","ORMPS",217,0)
 ;
"RTN","ORMPS",218,0)
ZRX() ; -- Return subscript of ZRX segment
"RTN","ORMPS",219,0)
 N X,I,SEG S X="",I=+ORC
"RTN","ORMPS",220,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  I SEG="ZRX" S X=I_U_@ORMSG@(I) Q
"RTN","ORMPS",221,0)
 Q X
"RTN","ORMPS1")
0^23^B61988457
"RTN","ORMPS1",1,0)
ORMPS1 ;SLC/MKB - Process Pharmacy ORM msgs cont ;1/22/03  12:33
"RTN","ORMPS1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**86,92,94,116,134,152,158,149**;Dec 17, 1997
"RTN","ORMPS1",3,0)
UDOSE ; -- new Unit Dose order
"RTN","ORMPS1",4,0)
 N QT,DRUG,INSTR,DOSE,RTE,SCH,OI,URG,WP,DUR,STR,DRGNM,X,PSOI,PSDD,S0,ID,LDOSE,XC,NTE,S0,RXR
"RTN","ORMPS1",5,0)
 S ORDIALOG=+$O(^ORD(101.41,"AB","PSJ OR PAT OE",0))
"RTN","ORMPS1",6,0)
 S ORDG=+$O(^ORD(100.98,"B","UNIT DOSE MEDICATIONS",0))
"RTN","ORMPS1",7,0)
 S ORPKG=+$$PKG("PSJ")
"RTN","ORMPS1",8,0)
 D GETDLG1^ORCD(ORDIALOG) S QT=$G(ORQT(1))
"RTN","ORMPS1",9,0)
 S DRUG=$$PTR("DISPENSE DRUG"),INSTR=$$PTR("INSTRUCTIONS")
"RTN","ORMPS1",10,0)
 S DOSE=$$PTR("DOSE"),RTE=$$PTR("ROUTE"),SCH=$$PTR("SCHEDULE")
"RTN","ORMPS1",11,0)
 S OI=$$PTR("ORDERABLE ITEM"),URG=$$PTR("URGENCY")
"RTN","ORMPS1",12,0)
 S WP=$$PTR("WORD PROCESSING 1"),DUR=$$PTR("DURATION")
"RTN","ORMPS1",13,0)
 S STR=$$PTR("STRENGTH"),DRGNM=$$PTR("DRUG NAME")
"RTN","ORMPS1",14,0)
 ;
"RTN","ORMPS1",15,0)
UD1 S:RXO X=$P(RXO,"|",2),ORDIALOG(OI,1)=$$ORDITEM^ORM(X),PSOI=$P(X,U,4,5)
"RTN","ORMPS1",16,0)
 I '$G(ORDIALOG(OI,1)) S ORERR="Missing or invalid orderable item" Q
"RTN","ORMPS1",17,0)
 S PSDD=$P($$FIND^ORM(+RXE,3),U,4,5),ORDIALOG(DRUG,1)=+PSDD
"RTN","ORMPS1",18,0)
 S S0=$$FIND^ORM(+RXE,26)_"&"_$P($$FIND^ORM(+RXE,27),U,5)
"RTN","ORMPS1",19,0)
 S ID=$P(QT,U),LDOSE=$P(QT,U,8) I 'ID,S0 D
"RTN","ORMPS1",20,0)
 . N UNT,PTRN S UNT=$P(S0,"&",2),PTRN="1.N1"""_UNT_""""
"RTN","ORMPS1",21,0)
 . I LDOSE?@PTRN S $P(ID,"&",1,2)=+LDOSE_"&"_UNT Q  ;pre-POE orders
"RTN","ORMPS1",22,0)
 . S:$P(PSOI,U,2)'[S0 ORDIALOG(STR,1)=$TR(S0,"&")
"RTN","ORMPS1",23,0)
 I 'ID,'S0 S ORDIALOG(DRGNM,1)=$P(PSDD,U,2)
"RTN","ORMPS1",24,0)
 S:$L(ID) ORDIALOG(DOSE,1)=$P(ID,"&",1,4)_"&"_LDOSE_"&"_+PSDD_"&"_S0
"RTN","ORMPS1",25,0)
 I LDOSE="" D  I LDOSE="" S ORERR="Unable to determine instructions" Q
"RTN","ORMPS1",26,0)
 . I $G(RXC)'>0 D  Q  ;look for units/dose
"RTN","ORMPS1",27,0)
 .. S LDOSE=$P(ID,"&",3),X=$P(ID,"&",4) I 'LDOSE S LDOSE="" Q
"RTN","ORMPS1",28,0)
 .. S:'$L(X) X=$P($$FIND^ORM(+RXE,7),U,5) S:$L(X) LDOSE=LDOSE_" "_X
"RTN","ORMPS1",29,0)
 .. S ORDIALOG(DRGNM,1)=$P(PSDD,U,2) ;force use of DD
"RTN","ORMPS1",30,0)
 . F  D  Q:LDOSE'=""  S RXC=$O(@ORMSG@(RXC)) Q:'RXC  Q:$E(@ORMSG@(RXC),1,3)'="RXC"
"RTN","ORMPS1",31,0)
 .. S XC=@ORMSG@(RXC) Q:+$P($P(XC,"|",3),U,4)'=+PSOI
"RTN","ORMPS1",32,0)
 .. S LDOSE=$P(XC,"|",4)_$P($P(XC,"|",5),U,5) ;strength_units
"RTN","ORMPS1",33,0)
 S ORDIALOG(INSTR,1)=LDOSE
"RTN","ORMPS1",34,0)
UD2 S NTE=$$NTE(21) I NTE D
"RTN","ORMPS1",35,0)
 . N CNT,I S CNT=1,^TMP("ORWORD",$J,WP,1,CNT,0)=$P(@ORMSG@(NTE),"|",4)
"RTN","ORMPS1",36,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,WP,1,CNT,0)=@ORMSG@(NTE,I)
"RTN","ORMPS1",37,0)
 . S ^TMP("ORWORD",$J,WP,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",38,0)
 . S ORDIALOG(WP,1)="^TMP(""ORWORD"",$J,"_WP_",1)"
"RTN","ORMPS1",39,0)
 S RXR=$$RXR^ORMPS I 'RXR S ORERR="Missing or invalid RXR segment" Q
"RTN","ORMPS1",40,0)
 S ORDIALOG(RTE,1)=$P($P(RXR,"|",2),U,4),ORDIALOG(URG,1)=ORURG
"RTN","ORMPS1",41,0)
 S ORDIALOG(SCH,1)=$P(QT,U,2),X=$P(QT,U,3)
"RTN","ORMPS1",42,0)
 I $L(X) D  ;set only if previous order had duration
"RTN","ORMPS1",43,0)
 . N IFN S IFN=$S($G(ORIFN):+ORIFN,$P(ZRX,"|",2):+$P(ZRX,"|",2),1:0)
"RTN","ORMPS1",44,0)
 . S:$O(^OR(100,+IFN,4.5,"ID","DAYS",0)) ORDIALOG(DUR,1)=$$DURATION(X)
"RTN","ORMPS1",45,0)
 D DOSETEXT^ORCDPS2 ;reset Instructions text, SIG
"RTN","ORMPS1",46,0)
 Q
"RTN","ORMPS1",47,0)
 ;
"RTN","ORMPS1",48,0)
OUT ; -- new Outpt order
"RTN","ORMPS1",49,0)
 N OI,SIG,INSTR,DOSE,RTE,SCH,DUR,SC,STR,DRUG,PI,CONJ,PSOI,PSDD,S0,X,I,RXR,J,NTE,ZSC,CNT,PC
"RTN","ORMPS1",50,0)
 S ORDIALOG=+$O(^ORD(101.41,"AB","PSO OERR",0))
"RTN","ORMPS1",51,0)
 S ORDG=+$O(^ORD(100.98,"B","OUTPATIENT MEDICATIONS",0))
"RTN","ORMPS1",52,0)
 S ORPKG=+$$PKG("PSO") D GETDLG1^ORCD(ORDIALOG)
"RTN","ORMPS1",53,0)
 S OI=$$PTR("ORDERABLE ITEM"),SIG=$$PTR("SIG")
"RTN","ORMPS1",54,0)
 S INSTR=$$PTR("INSTRUCTIONS"),DOSE=$$PTR("DOSE")
"RTN","ORMPS1",55,0)
 S SCH=$$PTR("SCHEDULE"),DUR=$$PTR("DURATION")
"RTN","ORMPS1",56,0)
 S RTE=$$PTR("ROUTE"),SC=$$PTR("SERVICE CONNECTED")
"RTN","ORMPS1",57,0)
 S STR=$$PTR("STRENGTH"),DRUG=$$PTR("DISPENSE DRUG")
"RTN","ORMPS1",58,0)
 S PI=$$PTR("PATIENT INSTRUCTIONS"),CONJ=$$PTR("AND/THEN")
"RTN","ORMPS1",59,0)
 S PC=$$PTR("WORD PROCESSING 1")
"RTN","ORMPS1",60,0)
 ;
"RTN","ORMPS1",61,0)
 S:RXO X=$P(RXO,"|",2),ORDIALOG(OI,1)=$$ORDITEM^ORM(X),PSOI=$P(X,U,4,5)
"RTN","ORMPS1",62,0)
 I '$G(ORDIALOG(OI,1)) S ORERR="Missing or invalid orderable item" Q
"RTN","ORMPS1",63,0)
 S PSDD=$P($$FIND^ORM(+RXE,3),U,4,5),ORDIALOG(DRUG,1)=+PSDD
"RTN","ORMPS1",64,0)
 S S0=$$FIND^ORM(+RXE,26)_"&"_$P($$FIND^ORM(+RXE,27),U,5)
"RTN","ORMPS1",65,0)
 I S0,$P(PSOI,U,2)'[S0 S ORDIALOG(STR,1)=$TR(S0,"&")
"RTN","ORMPS1",66,0)
 I 'S0,'$G(ORQT(1)) S ORDIALOG($$PTR("DRUG NAME"),1)=$P(PSDD,U,2)
"RTN","ORMPS1",67,0)
OUT1 S ORDIALOG($$PTR("QUANTITY"),1)=$$FIND^ORM(+RXE,11)
"RTN","ORMPS1",68,0)
 S ORDIALOG($$PTR("REFILLS"),1)=$$FIND^ORM(+RXE,13)
"RTN","ORMPS1",69,0)
 S X=$$FIND^ORM(+RXE,23) S:$E(X)="D" X=+$E(X,2,99)
"RTN","ORMPS1",70,0)
 S:X ORDIALOG($$PTR("DAYS SUPPLY"),1)=X
"RTN","ORMPS1",71,0)
 I ZRX S X=$P(ZRX,"|",5) S:$L(X) ORDIALOG($$PTR("ROUTING"),1)=X
"RTN","ORMPS1",72,0)
 S:ORURG ORDIALOG($$PTR("URGENCY"),1)=ORURG F I=1:1:ORQT D
"RTN","ORMPS1",73,0)
 . S ORDIALOG(INSTR,I)=$P(ORQT(I),U,8),X=$P(ORQT(I),U)
"RTN","ORMPS1",74,0)
 . S:$L(X) ORDIALOG(DOSE,I)=$P(X,"&",1,4)_"&"_$P(ORQT(I),U,8)_"&"_+PSDD_"&"_S0
"RTN","ORMPS1",75,0)
 . S X=$P(ORQT(I),U,2) S:$L(X) ORDIALOG(SCH,I)=X
"RTN","ORMPS1",76,0)
 . S X=$P(ORQT(I),U,3) S:$L(X) ORDIALOG(DUR,I)=$$DURATION(X)
"RTN","ORMPS1",77,0)
 . S X=$P(ORQT(I),U,9) S:$L(X) ORDIALOG(CONJ,I)=$S(X="S":"T",1:X)
"RTN","ORMPS1",78,0)
 S RXR=$$RXR^ORMPS I RXR S ORDIALOG(RTE,1)=$P($P(RXR,"|",2),U,4) D
"RTN","ORMPS1",79,0)
 . S I=1,J=+RXR ;look for multiple RXR's
"RTN","ORMPS1",80,0)
 . F  S J=$O(@ORMSG@(J)) Q:J'>0  S RXR=@ORMSG@(J) Q:$E(RXR,1,3)'="RXR"  S I=I+1,ORDIALOG(RTE,I)=$P($P(RXR,"|",2),U,4)
"RTN","ORMPS1",81,0)
OUT2 S NTE=$$NTE(6) D:'NTE PCOMM I NTE D  ;Prov Comm
"RTN","ORMPS1",82,0)
 . S CNT=1,^TMP("ORWORD",$J,PC,1,CNT,0)=$P(@ORMSG@(NTE),"|",4)
"RTN","ORMPS1",83,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,PC,1,CNT,0)=@ORMSG@(NTE,I)
"RTN","ORMPS1",84,0)
 . S ^TMP("ORWORD",$J,PC,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",85,0)
 . S ORDIALOG(PC,1)="^TMP(""ORWORD"",$J,"_PC_",1)"
"RTN","ORMPS1",86,0)
 S NTE=$$NTE(7) I NTE D  ;Pat Instr
"RTN","ORMPS1",87,0)
 . S CNT=1,^TMP("ORWORD",$J,PI,1,CNT,0)=$P(@ORMSG@(NTE),"|",4)
"RTN","ORMPS1",88,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,PI,1,CNT,0)=@ORMSG@(NTE,I)
"RTN","ORMPS1",89,0)
 . S ^TMP("ORWORD",$J,PI,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",90,0)
 . S ORDIALOG(PI,1)="^TMP(""ORWORD"",$J,"_PI_",1)"
"RTN","ORMPS1",91,0)
 S NTE=$$NTE(21) I NTE D  ;Sig
"RTN","ORMPS1",92,0)
 . S CNT=1,^TMP("ORWORD",$J,SIG,1,CNT,0)=$P(@ORMSG@(NTE),"|",4)
"RTN","ORMPS1",93,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,SIG,1,CNT,0)=@ORMSG@(NTE,I)
"RTN","ORMPS1",94,0)
 . S ^TMP("ORWORD",$J,SIG,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",95,0)
 . S ORDIALOG(SIG,1)="^TMP(""ORWORD"",$J,"_SIG_",1)"
"RTN","ORMPS1",96,0)
 . S ORDIALOG(PI,"FORMAT")="@" ;PI already included in Sig
"RTN","ORMPS1",97,0)
OUT3 I '$G(ORQT(1))!('NTE) D DOSETEXT^ORCDPS2 ;reset Instructions text, Sig
"RTN","ORMPS1",98,0)
 S ZSC=$$ZSC,X=$P(ZSC,"|",2) I X?2.3U S ORDIALOG(SC,1)=$S(X="SC":1,1:0)
"RTN","ORMPS1",99,0)
 Q
"RTN","ORMPS1",100,0)
 ;
"RTN","ORMPS1",101,0)
IV ; -- new IV order
"RTN","ORMPS1",102,0)
 N IVTYP S IVTYP=$P(ZRX,"|",7) I IVTYP="",$$NUMADDS'>1 G UDOSE
"RTN","ORMPS1",103,0)
 N SOLN,VOL,ADDS,STR,UNITS,RATE,URG,X,X1,X2,I,J,TYPE,OI,WP,NTE,SCH
"RTN","ORMPS1",104,0)
 S ORDIALOG=+$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORMPS1",105,0)
 S ORDG=+$O(^ORD(100.98,"B",$S($P(ZRX,"|",7)="TPN":"TPN",1:"IV RX"),0))
"RTN","ORMPS1",106,0)
 S ORPKG=+$$PKG("PSIV") D GETDLG1^ORCD(ORDIALOG)
"RTN","ORMPS1",107,0)
 S SOLN=$$PTR("ORDERABLE ITEM"),VOL=$$PTR("VOLUME"),SCH=$$PTR("SCHEDULE")
"RTN","ORMPS1",108,0)
 S RATE=$$PTR("INFUSION RATE") S:ORURG ORDIALOG($$PTR("URGENCY"),1)=ORURG
"RTN","ORMPS1",109,0)
 S WP=$$PTR("WORD PROCESSING 1"),ADDS=$$PTR("ADDITIVE")
"RTN","ORMPS1",110,0)
 S STR=$$PTR("STRENGTH PSIV"),UNITS=$$PTR("UNITS")
"RTN","ORMPS1",111,0)
IV1 S NTE=$$NTE(21) I NTE D
"RTN","ORMPS1",112,0)
 . N CNT,I S CNT=1,^TMP("ORWORD",$J,WP,1,CNT,0)=$P(@ORMSG@(NTE),"|",4)
"RTN","ORMPS1",113,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,WP,1,CNT,0)=@ORMSG@(NTE,I)
"RTN","ORMPS1",114,0)
 . S ^TMP("ORWORD",$J,WP,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",115,0)
 . S ORDIALOG(WP,1)="^TMP(""ORWORD"",$J,"_WP_",1)"
"RTN","ORMPS1",116,0)
 S X=$P($$FIND^ORM(+RXE,25),U,5)
"RTN","ORMPS1",117,0)
 S ORDIALOG(RATE,1)=$$FIND^ORM(+RXE,24)_$S($L(X):" "_X,1:""),(I,J)=0
"RTN","ORMPS1",118,0)
 F  D  S RXC=$O(@ORMSG@(RXC)) Q:'RXC  Q:$E(@ORMSG@(RXC),1,3)'="RXC"
"RTN","ORMPS1",119,0)
 . S X=@ORMSG@(RXC),TYPE=$P(X,"|",2),OI=$$ORDITEM^ORM($P(X,"|",3)) Q:'OI
"RTN","ORMPS1",120,0)
 . S X1=$P(X,"|",4),X2=$P($P(X,"|",5),U,5)
"RTN","ORMPS1",121,0)
 . I $E(TYPE)="B" S J=J+1,ORDIALOG(SOLN,J)=OI,ORDIALOG(VOL,J)=X1 Q
"RTN","ORMPS1",122,0)
 . S I=I+1,ORDIALOG(ADDS,I)=OI,ORDIALOG(STR,I)=X1,ORDIALOG(UNITS,I)=X2
"RTN","ORMPS1",123,0)
 I IVTYP="" S X=$P($G(ORQT(1)),U,2) S:$L(X) ORDIALOG(SCH,1)=X
"RTN","ORMPS1",124,0)
 Q
"RTN","ORMPS1",125,0)
 ;
"RTN","ORMPS1",126,0)
NTE(ID) ; -- Return subscript of NTE segment for RXE-<ID>
"RTN","ORMPS1",127,0)
 N I,SEG,Y S Y="",I=+RXE S:'$G(ID) ID=21
"RTN","ORMPS1",128,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=@ORMSG@(I) Q:$E(SEG,1,3)="ORC"  I $P(SEG,"|",1,2)=("NTE|"_ID) S Y=I Q
"RTN","ORMPS1",129,0)
 Q Y
"RTN","ORMPS1",130,0)
 ;
"RTN","ORMPS1",131,0)
ZSC() ; -- Return subscript of ZSC segment
"RTN","ORMPS1",132,0)
 N I,SEG,Y S Y="",I=+RXE
"RTN","ORMPS1",133,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  I SEG="ZSC" S Y=I_U_@ORMSG@(I) Q
"RTN","ORMPS1",134,0)
 Q Y
"RTN","ORMPS1",135,0)
 ;
"RTN","ORMPS1",136,0)
NUMADDS() ; -- count number of additives to determine type
"RTN","ORMPS1",137,0)
 N CNT,I,X S CNT=0,I=+RXE
"RTN","ORMPS1",138,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S X=@ORMSG@(I) Q:$P(X,"|")="ORC"  I $E(X,1,6)="RXC|A|" S CNT=CNT+1
"RTN","ORMPS1",139,0)
 Q CNT
"RTN","ORMPS1",140,0)
 ;
"RTN","ORMPS1",141,0)
PKG(NMSP) ; -- Return Package file ptr for NMSP
"RTN","ORMPS1",142,0)
 N I S I=0
"RTN","ORMPS1",143,0)
 F  S I=+$O(^DIC(9.4,"C",NMSP,I)) Q:I<1  Q:'$O(^(I,0))  ;no Addl Prefs
"RTN","ORMPS1",144,0)
 Q I
"RTN","ORMPS1",145,0)
 ;
"RTN","ORMPS1",146,0)
PTR(NAME) ; -- Returns ien of prompt NAME in Order Dialog file #101.41
"RTN","ORMPS1",147,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORMPS1",148,0)
 ;
"RTN","ORMPS1",149,0)
DURATION(X) ; -- Returns "# units" from U# format
"RTN","ORMPS1",150,0)
 N Y,Y1,Y2 I X'?.1U1.N Q ""
"RTN","ORMPS1",151,0)
 S Y1=$E(X),Y2=+$E(X,2,$L(X)) I X=+X S Y1="D",Y2=+X
"RTN","ORMPS1",152,0)
 S Y=Y2_" "_$S(Y1="L":"MONTH",Y1="W":"WEEK",Y1="H":"HOUR",Y1="M":"MINUTE",Y1="S":"SECOND",1:"DAY")_$S(Y2>1:"S",1:"")
"RTN","ORMPS1",153,0)
 Q Y
"RTN","ORMPS1",154,0)
 ;
"RTN","ORMPS1",155,0)
QT ; -- Unpiece the Q/T field from RXE
"RTN","ORMPS1",156,0)
 I 'RXE S ORQT(1)=ORQT,ORQT=1 Q  ; nothing to reset
"RTN","ORMPS1",157,0)
 N X,Y,I,J,P,SEG,DONE K ORQT
"RTN","ORMPS1",158,0)
 S SEG=$G(@ORMSG@(+RXE)),X=$P(SEG,"|",2),(I,J,P,DONE)=0
"RTN","ORMPS1",159,0)
 F  D  Q:DONE
"RTN","ORMPS1",160,0)
 . S P=P+1,Y=$P(X,"~",P) I Y="" S DONE=1 Q
"RTN","ORMPS1",161,0)
 . I P<$L(X,"~") S I=I+1,ORQT(I)=Y Q
"RTN","ORMPS1",162,0)
 . I $L(SEG,"|")>2 S I=I+1,ORQT(I)=Y,DONE=1 Q
"RTN","ORMPS1",163,0)
 . S J=+$O(@ORMSG@(+RXE,J)) I J'>0 S I=I+1,ORQT(I)=Y,DONE=1 Q
"RTN","ORMPS1",164,0)
 . S SEG=$G(@ORMSG@(+RXE,J)),X=$P(SEG,"|"),P=1,I=I+1,ORQT(I)=Y_$P(X,"~")
"RTN","ORMPS1",165,0)
 S ORQT=I Q:'ORQT  ; else reset ORSTRT, ORSTOP, ORURG
"RTN","ORMPS1",166,0)
 S ORSTRT=$P(ORQT(1),U,4),ORSTOP=$P(ORQT(ORQT),U,5),ORURG=$P(ORQT(1),U,6)
"RTN","ORMPS1",167,0)
 S:ORSTRT ORSTRT=$$FMDATE^ORM(ORSTRT) S:ORSTOP ORSTOP=$$FMDATE^ORM(ORSTOP) S:$L(ORURG) ORURG=$$URGENCY^ORM(ORURG)
"RTN","ORMPS1",168,0)
 Q
"RTN","ORMPS1",169,0)
 ;
"RTN","ORMPS1",170,0)
PCOMM ; -- Get Provider Comments from previous order, when changed
"RTN","ORMPS1",171,0)
 N OLD,I
"RTN","ORMPS1",172,0)
 S OLD=+$G(ORIFN) I OLD<1 S OLD=+$P(ZRX,"|",2) Q:OLD<1
"RTN","ORMPS1",173,0)
 S I=+$O(^OR(100,OLD,4.5,"ID","COMMENT",0)) Q:I<1
"RTN","ORMPS1",174,0)
 Q:'$O(^OR(100,OLD,4.5,I,2,0))  ;none
"RTN","ORMPS1",175,0)
 M ^TMP("ORWORD",$J,PC,1)=^OR(100,OLD,4.5,I,2)
"RTN","ORMPS1",176,0)
 S ORDIALOG(PC,1)="^TMP(""ORWORD"",$J,"_PC_",1)"
"RTN","ORMPS1",177,0)
 S ORDIALOG(PC,"FORMAT")="@" ;text in Sig already
"RTN","ORMPS1",178,0)
 Q
"RTN","ORQQCN2")
0^2^B31631341
"RTN","ORQQCN2",1,0)
ORQQCN2 ; slc/REV - Functions for GUI consult actions ; 02 April 2003 4:05 PM
"RTN","ORQQCN2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,125,131,149**;Dec 17, 1997
"RTN","ORQQCN2",3,0)
 ;
"RTN","ORQQCN2",4,0)
CMT(ORERR,ORIEN,ORCOM,ORALRT,ORALTO,ORDATE) ;Add comment to existing consult without changing status
"RTN","ORQQCN2",5,0)
 ;ORIEN - IEN of consult from File 123
"RTN","ORQQCN2",6,0)
 ;ORERR - return array for results/errors
"RTN","ORQQCN2",7,0)
 ;ORCOM is the comments array to be added
"RTN","ORQQCN2",8,0)
 ;     passed in as ORCOM(1)="Xxxx Xxxxx...",ORCOM(2)="Xxxx Xx Xxx...", ORCOM(3)="Xxxxx Xxx Xx...", etc.
"RTN","ORQQCN2",9,0)
 ;ORALRT - should alerts be sent to anyone?
"RTN","ORQQCN2",10,0)
 ;ORALTO - array of alert recipient IENs
"RTN","ORQQCN2",11,0)
 N ORAD,ORDUZ,ORNP,X
"RTN","ORQQCN2",12,0)
 S ORERR=0,ORAD=$S($D(ORDATE):ORDATE,1:$$NOW^XLFDT),ORNP=""
"RTN","ORQQCN2",13,0)
 I '$D(ORCOM) S ORERR="1^Comments required - no action taken" Q
"RTN","ORQQCN2",14,0)
 I '$D(^GMR(123,ORIEN)) S ORERR="1^No such consult" Q
"RTN","ORQQCN2",15,0)
 I $G(ORALRT)=1 D
"RTN","ORQQCN2",16,0)
 .F I=1:1  S X=$P(ORALTO,";",I) Q:X=""  S ORDUZ(X)=""
"RTN","ORQQCN2",17,0)
 D CMT^GMRCGUIB(ORIEN,.ORCOM,.ORDUZ,ORAD,DUZ)
"RTN","ORQQCN2",18,0)
 Q
"RTN","ORQQCN2",19,0)
 ;
"RTN","ORQQCN2",20,0)
SCH(ORERR,ORIEN,ORNP,ORDATE,ORALRT,ORALTO,ORCOM) ;Schedule consult and change status
"RTN","ORQQCN2",21,0)
 ;ORERR - return array for results/errors
"RTN","ORQQCN2",22,0)
 ;ORIEN - IEN of consult from File 123
"RTN","ORQQCN2",23,0)
 ;ORNP - Provider who Scheduled consult
"RTN","ORQQCN2",24,0)
 ;ORDATE - Date/Time Consult was scheduled.
"RTN","ORQQCN2",25,0)
 ;ORALRT - should alerts be sent to anyone?
"RTN","ORQQCN2",26,0)
 ;ORALTO - array of alert recipient IENs
"RTN","ORQQCN2",27,0)
 ;ORCOM is the comments array to be added
"RTN","ORQQCN2",28,0)
 ;     passed in as ORCOM(1)="Xxxx Xxxxx...",ORCOM(2)="Xxxx Xx Xxx...", ORCOM(3)="Xxxxx Xxx Xx...", etc.
"RTN","ORQQCN2",29,0)
 N ORAD,ORDUZ,X
"RTN","ORQQCN2",30,0)
 S ORERR=0,ORAD=$S($D(ORDATE):ORDATE,1:$$NOW^XLFDT)
"RTN","ORQQCN2",31,0)
 S:+$G(ORNP)=0 ORNP=DUZ
"RTN","ORQQCN2",32,0)
 I '$D(^GMR(123,ORIEN)) S ORERR="1^No such consult" Q
"RTN","ORQQCN2",33,0)
 I $G(ORALRT)=1 D
"RTN","ORQQCN2",34,0)
 .F I=1:1  S X=$P(ORALTO,";",I) Q:X=""  S ORDUZ(X)=""
"RTN","ORQQCN2",35,0)
 S ORERR=$$SCH^GMRCGUIB(ORIEN,ORNP,ORAD,.ORDUZ,.ORCOM)
"RTN","ORQQCN2",36,0)
 Q
"RTN","ORQQCN2",37,0)
 ;
"RTN","ORQQCN2",38,0)
SVCTREE(Y,PURPOSE) ;Returns list of consult service for current
"RTN","ORQQCN2",39,0)
 ;  context, screening for inactive, groupers, and tracking
"RTN","ORQQCN2",40,0)
 ; PURPOSE: Display=0, Forward=1, Order=1
"RTN","ORQQCN2",41,0)
 N GMRCTO,GMRCDG,GMRCSVC,GMRCOI
"RTN","ORQQCN2",42,0)
  S GMRCTO=PURPOSE,GMRCDG=1
"RTN","ORQQCN2",43,0)
 D SERV1^GMRCASV
"RTN","ORQQCN2",44,0)
 S GMRCSVC=0
"RTN","ORQQCN2",45,0)
 I '$D(^TMP("GMRCSLIST",$J)) S Y(1)="-1^No services found" Q
"RTN","ORQQCN2",46,0)
 F I=1:1  S GMRCSVC=$O(^TMP("GMRCSLIST",$J,GMRCSVC)) Q:+GMRCSVC=0  D
"RTN","ORQQCN2",47,0)
 . S Y(I)=^TMP("GMRCSLIST",$J,GMRCSVC)
"RTN","ORQQCN2",48,0)
 . S GMRCOI=$O(^ORD(101.43,"ID",$P(Y(I),U,1)_";99CON",0))
"RTN","ORQQCN2",49,0)
 . S Y(I)=Y(I)_U_GMRCOI
"RTN","ORQQCN2",50,0)
 Q
"RTN","ORQQCN2",51,0)
 ;
"RTN","ORQQCN2",52,0)
SVCSYN(ORROOT,ORSTRT,ORWHY,ORSYN,ORIEN) ;;return CSLT services for GUI
"RTN","ORQQCN2",53,0)
 ;Input:
"RTN","ORQQCN2",54,0)
 ; ORROOT - passed in as the array to return results in
"RTN","ORQQCN2",55,0)
 ; ORSTRT- service to begin building from
"RTN","ORQQCN2",56,0)
 ; ORWHY - 0 for display, 1 for forwarding or ordering
"RTN","ORQQCN2",57,0)
 ; ORSYN - Boolean: 1=return synonyms, 0=do not
"RTN","ORQQCN2",58,0)
 ; ORIEN - Consult IEN (file 123) (OPTIONAL)
"RTN","ORQQCN2",59,0)
 ;Output: Array formatted as follows-
"RTN","ORQQCN2",60,0)
 ;      svc ien^svc name or syn^parent^has children^svc usage^orderable item
"RTN","ORQQCN2",61,0)
 N ORSVC,I,X,OI
"RTN","ORQQCN2",62,0)
 S:+$G(ORSTRT)=0 ORSTRT=1
"RTN","ORQQCN2",63,0)
 S:$G(ORWHY)="" ORWHY=1
"RTN","ORQQCN2",64,0)
 S:$G(ORSYN)="" ORSYN=1
"RTN","ORQQCN2",65,0)
 S ORROOT=$NA(^TMP("ORCSLT",$J))
"RTN","ORQQCN2",66,0)
 D GUI^GMRCASV1(ORROOT,ORSTRT,ORWHY,ORSYN,$G(ORIEN))
"RTN","ORQQCN2",67,0)
 S ORSVC=0
"RTN","ORQQCN2",68,0)
 I '$D(@ORROOT) S @ORROOT@(1)="-1^No services found" Q
"RTN","ORQQCN2",69,0)
 F I=1:1  S ORSVC=$O(@ORROOT@(ORSVC)) Q:+ORSVC=0  D
"RTN","ORQQCN2",70,0)
 . S X=@ORROOT@(ORSVC)
"RTN","ORQQCN2",71,0)
 . S OI=$O(^ORD(101.43,"ID",$P(X,U,1)_";99CON",0))
"RTN","ORQQCN2",72,0)
 . I +OI>0 S @ORROOT@(ORSVC)=X_U_OI
"RTN","ORQQCN2",73,0)
 Q
"RTN","ORQQCN2",74,0)
STATUS(Y) ; Returns a list of statuses currently in use
"RTN","ORQQCN2",75,0)
 ;
"RTN","ORQQCN2",76,0)
 N GMRCORST
"RTN","ORQQCN2",77,0)
 S GMRCORST=0,Y(999)="999^OTHER^"
"RTN","ORQQCN2",78,0)
 F  S GMRCORST=$O(^ORD(100.01,GMRCORST)) Q:'+GMRCORST  D
"RTN","ORQQCN2",79,0)
 . I '$D(^GMR(123.1,"AC",GMRCORST)) S Y(999)=Y(999)_GMRCORST_","
"RTN","ORQQCN2",80,0)
 . E  S Y(GMRCORST)=GMRCORST_U_$P(^ORD(100.01,GMRCORST,0),U,1)
"RTN","ORQQCN2",81,0)
 Q
"RTN","ORQQCN2",82,0)
 ;
"RTN","ORQQCN2",83,0)
MEDRSLT(ORY,GMRCO) ;Returns Medicine results plus TIU results
"RTN","ORQQCN2",84,0)
 S ORY=$NA(^TMP("ORRSLT",$J))
"RTN","ORQQCN2",85,0)
 D RT^GMRCGUIA(GMRCO,ORY)
"RTN","ORQQCN2",86,0)
 Q
"RTN","ORQQCN2",87,0)
 ;
"RTN","ORQQCN2",88,0)
SHOW513(ORY,GMRCO)  ;CONSULTS SF513 DISPLAY IN GUI
"RTN","ORQQCN2",89,0)
 D GUI^GMRCP5(.ORY,GMRCO)
"RTN","ORQQCN2",90,0)
 Q
"RTN","ORQQCN2",91,0)
PRT513(Y,GMRCO,GMRCCHT,GMRCDEV) ; Print SF513 to VistA device from GUI
"RTN","ORQQCN2",92,0)
 N ORSTATUS
"RTN","ORQQCN2",93,0)
 D EN^GMRCP5(GMRCO,GMRCCHT,GMRCDEV,.ORSTATUS)
"RTN","ORQQCN2",94,0)
 S Y=ORSTATUS
"RTN","ORQQCN2",95,0)
 Q
"RTN","ORQQCN2",96,0)
WPRT513(ORY,GMRCO,GMRCCHT) ;Print SF513 to Windows device from GUI
"RTN","ORQQCN2",97,0)
 N ZTQUEUED,ORHFS,ORSUB,ORIO,ORSTATUS,ROOT,ORHANDLE
"RTN","ORQQCN2",98,0)
 N IOM,IOSL,IOST,IOF,IOT,IOS
"RTN","ORQQCN2",99,0)
 S (ORSUB,ROOT)="ORDATA",ORIO="OR WINDOWS HFS",ORHANDLE="ORQQCN2"
"RTN","ORQQCN2",100,0)
 S ORY=$NA(^TMP(ORSUB,$J,1))
"RTN","ORQQCN2",101,0)
 S ORHFS=$$HFS^ORWRP()
"RTN","ORQQCN2",102,0)
 D HFSOPEN^ORWRP(ORHANDLE,ORHFS,"W")
"RTN","ORQQCN2",103,0)
 I POP D  Q
"RTN","ORQQCN2",104,0)
 . I $D(ROOT) D SETITEM^ORWRP(.ROOT,"ERROR: Unable to open HFS file for SF513 print")
"RTN","ORQQCN2",105,0)
 D IOVAR^ORWRP(.ORIO,,,"P-WINHFS80")
"RTN","ORQQCN2",106,0)
 N $ETRAP,$ESTACK
"RTN","ORQQCN2",107,0)
 S $ETRAP="D ERR^ORWRP Q"
"RTN","ORQQCN2",108,0)
 U IO
"RTN","ORQQCN2",109,0)
 D PRNT^GMRCP5A(GMRCO,0,0,GMRCCHT,0)
"RTN","ORQQCN2",110,0)
 D HFSCLOSE^ORWRP(ORHANDLE,ORHFS)
"RTN","ORQQCN2",111,0)
 Q
"RTN","ORQQCN2",112,0)
SIGFIND(Y,ORIEN,ORFL,ORCOM,ORALRT,ORALTO,ORDATE) ;Significant findings
"RTN","ORQQCN2",113,0)
 S Y=$$SFILE^GMRCGUIB(ORIEN,4,ORFL,"",DUZ,.ORCOM,ORALRT,ORALTO,ORDATE) ; "4"=SIG FIND ACTION
"RTN","ORQQCN2",114,0)
 Q
"RTN","ORQQCN2",115,0)
ADMCOMPL(Y,ORIEN,ORFL,ORCOM,ORRESP,ORALRT,ORALTO,ORDATE) ; Admin users
"RTN","ORQQCN2",116,0)
 ; Administrative complete action
"RTN","ORQQCN2",117,0)
 S Y=$$SFILE^GMRCGUIB(ORIEN,10,ORFL,ORRESP,DUZ,.ORCOM,ORALRT,ORALTO,ORDATE) ; "10"=Admin Complete
"RTN","ORQQCN2",118,0)
 Q
"RTN","ORQQCN2",119,0)
SVCLIST(ORY,FROM,DIR) ; Return a set of consult services in long list format
"RTN","ORQQCN2",120,0)
 ; .ORY=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORQQCN2",121,0)
 N I,IEN,CNT,Y,ORTMP,ORSVC,ORSTR
"RTN","ORQQCN2",122,0)
 S I=0,CNT=44,ORSVC=""
"RTN","ORQQCN2",123,0)
 D SVCTREE^ORQQCN2(.Y,1)
"RTN","ORQQCN2",124,0)
 F I=1:1  S ORSVC=$P($G(Y(I)),U,2) Q:ORSVC=""  D
"RTN","ORQQCN2",125,0)
 . S ORTMP(ORSVC)=Y(I)
"RTN","ORQQCN2",126,0)
 F I=1:1  Q:I=CNT  S FROM=$O(ORTMP(FROM),DIR) Q:FROM=""  D
"RTN","ORQQCN2",127,0)
 . S ORSTR=ORTMP(FROM)
"RTN","ORQQCN2",128,0)
 . S ORY(I)=ORSTR
"RTN","ORQQCN2",129,0)
 Q
"RTN","ORQQCN2",130,0)
GETCTXT(Y,ORUSER) ; Returns current view context for user
"RTN","ORQQCN2",131,0)
 S Y=$$GET^XPAR("ALL","ORCH CONTEXT CONSULTS",1)
"RTN","ORQQCN2",132,0)
 Q
"RTN","ORQQCN2",133,0)
SAVECTXT(Y,ORCTXT) ; Save new view preferences for user
"RTN","ORQQCN2",134,0)
 N TMP
"RTN","ORQQCN2",135,0)
 S TMP=$$GET^XPAR(DUZ_";VA(200,","ORCH CONTEXT CONSULTS",1)
"RTN","ORQQCN2",136,0)
 I TMP'="" D  Q
"RTN","ORQQCN2",137,0)
 . D CHG^XPAR(DUZ_";VA(200,","ORCH CONTEXT CONSULTS",1,ORCTXT)
"RTN","ORQQCN2",138,0)
 D ADD^XPAR(DUZ_";VA(200,","ORCH CONTEXT CONSULTS",1,ORCTXT)
"RTN","ORQQCN2",139,0)
 Q
"RTN","ORQQCN2",140,0)
 ;
"RTN","ORQQCN2",141,0)
DEFRFREQ(ORY,ORSVC,ORDFN,RESOLVE) ;Return default reason for request for service
"RTN","ORQQCN2",142,0)
 ; ORSVC=pointer to file 123.5
"RTN","ORQQCN2",143,0)
 ; ORDFN=patient, if RESOLVE=1
"RTN","ORQQCN2",144,0)
 ; RESOLVE=1 to resolve boilerplate, 0 to not resolve
"RTN","ORQQCN2",145,0)
 Q:+$G(ORSVC)=0
"RTN","ORQQCN2",146,0)
 I +RESOLVE,(+$G(ORDFN)=0) Q
"RTN","ORQQCN2",147,0)
 S ORY=$NA(^TMP("ORREQ",$J))
"RTN","ORQQCN2",148,0)
 S:$G(RESOLVE)="" RESOLVE=0
"RTN","ORQQCN2",149,0)
 D GETDEF^GMRCDRFR(.ORY,ORSVC,ORDFN,RESOLVE)
"RTN","ORQQCN2",150,0)
 K @ORY@(0)
"RTN","ORQQCN2",151,0)
 Q
"RTN","ORQQCN2",152,0)
EDITDRFR(ORY,ORSVC) ; Allow editing of reason for request?
"RTN","ORQQCN2",153,0)
 S ORY=$$REAF^GMRCDRFR(ORSVC)
"RTN","ORQQCN2",154,0)
 Q
"RTN","ORQQCN2",155,0)
SVCIEN(ORY,ORIEN) ;Given orderable item file entry, return IEN in 123.5, OR -1 IF INACTIVE IN 101.43
"RTN","ORQQCN2",156,0)
 N X1
"RTN","ORQQCN2",157,0)
 I '$D(^ORD(101.43,ORIEN)) S ORY=-1 Q
"RTN","ORQQCN2",158,0)
 S X1=$G(^ORD(101.43,ORIEN,.1))
"RTN","ORQQCN2",159,0)
 I +X1,+X1<$$NOW^XLFDT S ORY=-1 Q
"RTN","ORQQCN2",160,0)
 S ORY=$P($$USID^ORWDXC(ORIEN),U,4)
"RTN","ORQQCN2",161,0)
 Q
"RTN","ORQQCN2",162,0)
PROVDX(ORY,ORIEN) ;Return provisional dx prompting info for service
"RTN","ORQQCN2",163,0)
 S ORY=$$PROVDX^GMRCUTL1(ORIEN)
"RTN","ORQQCN2",164,0)
 Q
"RTN","ORQQCN2",165,0)
PREREQ(ORY,ORSVC,ORDFN) ;Returns prequisites for ordering
"RTN","ORQQCN2",166,0)
 Q:(+$G(ORSVC)=0)!(+$G(ORDFN)=0)
"RTN","ORQQCN2",167,0)
 S ORY=$NA(^TMP("ORPREREQ",$J))
"RTN","ORQQCN2",168,0)
 D PREREQ^GMRCUTL1(.ORY,ORSVC,ORDFN,0)  ;0=RESOLVE OBJECTS
"RTN","ORQQCN2",169,0)
 K @ORY@(0)
"RTN","ORQQCN2",170,0)
 Q
"RTN","ORQQCN2",171,0)
UNRSLVD(ORY,ORDFN) ;Returns true if unresolved consults for user/pt
"RTN","ORQQCN2",172,0)
 S ORY=0
"RTN","ORQQCN2",173,0)
 Q:'$$PATCH^XPDUTL("GMRC*3.0*27")
"RTN","ORQQCN2",174,0)
 Q:+$$GET^XPAR("ALL","ORWOR SHOW CONSULTS",1,"I")=0
"RTN","ORQQCN2",175,0)
 S ORY=+$$ANYPENDG^GMRCTIU(ORDFN,DUZ)   ;DBIA #3473
"RTN","ORQQCN2",176,0)
 Q
"RTN","ORWCH")
0^3^B12902368
"RTN","ORWCH",1,0)
ORWCH ; SLC/KCM/SCM - GUI calls specific to CPRS Chart;01:34 PM  15 Dec 1997 [10:52 AM 13 JUN 2002]
"RTN","ORWCH",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,109,149**;Dec 17, 1997
"RTN","ORWCH",3,0)
SAVESIZ(ORERR,NAM,VAL) ; save the bounds for a particular control
"RTN","ORWCH",4,0)
 ; NAM=frmName or frmName.ctrlName  VAL=left,top,width,height
"RTN","ORWCH",5,0)
 D EN^XPAR(DUZ_";VA(200,","ORWCH BOUNDS",NAM,VAL,.ORERR)
"RTN","ORWCH",6,0)
 Q
"RTN","ORWCH",7,0)
LOADSIZ(VAL,NAM)        ; return the bounds for a particular control
"RTN","ORWCH",8,0)
 I NAM="" S VAL="" Q
"RTN","ORWCH",9,0)
 S VAL=$$GET^XPAR(DUZ_";VA(200,","ORWCH BOUNDS",NAM,"I")
"RTN","ORWCH",10,0)
 Q
"RTN","ORWCH",11,0)
 ;
"RTN","ORWCH",12,0)
LDFONT(VAL,NAM) ; load the user's preferred font size
"RTN","ORWCH",13,0)
 S VAL=$$GET^XPAR(DUZ_";VA(200,","ORWCH FONT SIZE",1,"I")
"RTN","ORWCH",14,0)
 Q
"RTN","ORWCH",15,0)
SAVEALL(OK,LST) ; save the list of sizing information
"RTN","ORWCH",16,0)
 N I,TYP,NAM,VAL,PAR,ORERR
"RTN","ORWCH",17,0)
 S (I,OK)="" F  S I=$O(LST(I)) Q:'I  D
"RTN","ORWCH",18,0)
 . S TYP=$P(LST(I),U),NAM=$P(LST(I),U,2),VAL=$P(LST(I),U,3)
"RTN","ORWCH",19,0)
 . S PAR="ORWCH "_$S(TYP="B":"BOUNDS",TYP="W":"WIDTH",TYP="C":"COLUMNS")
"RTN","ORWCH",20,0)
 . D EN^XPAR(DUZ_";VA(200,",PAR,NAM,VAL,.ORERR)
"RTN","ORWCH",21,0)
 . I ORERR S OK=OK_LST(I)_":"_ORERR_U
"RTN","ORWCH",22,0)
 ; Other clean up: kill off global for sharing DFN
"RTN","ORWCH",23,0)
 K ^TMP("ORWCHART",$J),^TMP("ORECALL",$J),^TMP("ORWORD",$J)
"RTN","ORWCH",24,0)
 K ^TMP("ORWDXMQ",$J)
"RTN","ORWCH",25,0)
 Q
"RTN","ORWCH",26,0)
SAVECOL(OK,COL) ;save report column sizing information
"RTN","ORWCH",27,0)
 N NAM,VAL,ORERR
"RTN","ORWCH",28,0)
 S OK="",NAM=$P(COL,"^"),VAL=$P(COL,"^",2)
"RTN","ORWCH",29,0)
 D EN^XPAR(DUZ_";VA(200,","ORWCH COLUMNS REPORTS",NAM,VAL,.ORERR)
"RTN","ORWCH",30,0)
 I ORERR S OK=COL_":"_ORERR
"RTN","ORWCH",31,0)
 Q
"RTN","ORWCH",32,0)
LOADALL(LST) ; load all the sizing related paramters
"RTN","ORWCH",33,0)
 N ORBOUNDS,ORWIDTHS,ORCOLMNS,ILST S ILST=0
"RTN","ORWCH",34,0)
 D GETLST^XPAR(.ORBOUNDS,DUZ_";VA(200,","ORWCH BOUNDS")
"RTN","ORWCH",35,0)
 D GETLST^XPAR(.ORWIDTHS,DUZ_";VA(200,","ORWCH WIDTH")
"RTN","ORWCH",36,0)
 D GETLST^XPAR(.ORCOLMNS,DUZ_";VA(200,","ORWCH COLUMNS")
"RTN","ORWCH",37,0)
 S ILST=ILST+1,LST(ILST)="~Bounds"
"RTN","ORWCH",38,0)
 S I="" F  S I=$O(ORBOUNDS(I)) Q:'I  S ILST=ILST+1,LST(ILST)="i"_ORBOUNDS(I)
"RTN","ORWCH",39,0)
 S ILST=ILST+1,LST(ILST)="~Widths"
"RTN","ORWCH",40,0)
 S I="" F  S I=$O(ORWIDTHS(I)) Q:'I  S ILST=ILST+1,LST(ILST)="i"_ORWIDTHS(I)
"RTN","ORWCH",41,0)
 S ILST=ILST+1,LST(ILST)="~Columns"
"RTN","ORWCH",42,0)
 S I="" F  S I=$O(ORCOLMNS(I)) Q:'I  S ILST=ILST+1,LST(ILST)="i"_ORCOLMNS(I)
"RTN","ORWCH",43,0)
 Q
"RTN","ORWCH",44,0)
SAVFONT(ORERR,VAL)      ; save the user's preferred font size
"RTN","ORWCH",45,0)
 D EN^XPAR(DUZ_";VA(200,","ORWCH FONT SIZE",1,VAL,.ORERR)
"RTN","ORWCH",46,0)
 Q
"RTN","ORWCH",47,0)
 ;
"RTN","ORWCH",48,0)
CLRUSR ; clear size & position settings for user
"RTN","ORWCH",49,0)
 ; called from ORW CLEAR SIZES USER
"RTN","ORWCH",50,0)
 N DIC,DIR,DIK,ORERR,ENT,Y
"RTN","ORWCH",51,0)
 W !,"Clear GUI size & position settings for selected user -"
"RTN","ORWCH",52,0)
 S DIC=200,DIC(0)="AEMQ" D ^DIC  Q:Y<1
"RTN","ORWCH",53,0)
 S ENT=+Y_";VA(200,"
"RTN","ORWCH",54,0)
 S DIR(0)="Y",DIR("A")="Clear sizes for "_$P(Y,U,2),DIR("B")="YES"
"RTN","ORWCH",55,0)
 D ^DIR Q:Y'=1
"RTN","ORWCH",56,0)
 D NDEL^XPAR(ENT,"ORWCH BOUNDS",.ORERR) I ORERR W !,ORERR
"RTN","ORWCH",57,0)
 D NDEL^XPAR(ENT,"ORWCH WIDTH",.ORERR) I ORERR W !,ORERR
"RTN","ORWCH",58,0)
 D NDEL^XPAR(ENT,"ORWCH COLUMNS",.ORERR) I ORERR W !,ORERR
"RTN","ORWCH",59,0)
 D DEL^XPAR(ENT,"ORWCH FONT SIZE",1,.ORERR) I ORERR W !,ORERR
"RTN","ORWCH",60,0)
 W !,"Settings cleared."
"RTN","ORWCH",61,0)
 Q        ;
"RTN","ORWCH",62,0)
 ; -- are the following calls still used?
"RTN","ORWCH",63,0)
 ;
"RTN","ORWCH",64,0)
GETPOS(VAL) ; returns the position and size information for CPRSChart
"RTN","ORWCH",65,0)
 ; VAL=WindowState^Size^Position^PageSplit,PageSplit...
"RTN","ORWCH",66,0)
 N I,ORX
"RTN","ORWCH",67,0)
 S VAL=$$GET^XPAR(DUZ_";VA(200,","ORWCH MAINFORM STATE",1,"I")_U
"RTN","ORWCH",68,0)
 S VAL=VAL_$$GET^XPAR(DUZ_";VA(200,","ORWCH MAINFORM SIZE",1,"I")_U
"RTN","ORWCH",69,0)
 S VAL=VAL_$$GET^XPAR(DUZ_";VA(200,","ORWCH MAINFORM POSITION",1,"I")_U
"RTN","ORWCH",70,0)
 D GETLST^XPAR(.ORX,DUZ_";VA(200,","ORWCH PAGE SPLIT","Q")
"RTN","ORWCH",71,0)
 S ORX="",I=0 F  S I=$O(ORX(I)) Q:'I  S $P(ORX,",",+ORX(I))=$P(ORX(I),U,2)
"RTN","ORWCH",72,0)
 S VAL=VAL_ORX
"RTN","ORWCH",73,0)
 Q
"RTN","ORWCH",74,0)
SETPOS(OK,X) ; records window size and position info for the current user
"RTN","ORWCH",75,0)
 ; X=WindowState^Size^Position^PageSplit,PageSplit...
"RTN","ORWCH",76,0)
 N I,X4,ORERR S OK=1
"RTN","ORWCH",77,0)
 D EN^XPAR(DUZ_";VA(200,","ORWCH MAINFORM STATE",1,$P(X,U),.ORERR)
"RTN","ORWCH",78,0)
 D EN^XPAR(DUZ_";VA(200,","ORWCH MAINFORM SIZE",1,$P(X,U,2),.ORERR)
"RTN","ORWCH",79,0)
 D EN^XPAR(DUZ_";VA(200,","ORWCH MAINFORM POSITION",1,$P(X,U,3),.ORERR)
"RTN","ORWCH",80,0)
 S X4=$P(X,U,4)
"RTN","ORWCH",81,0)
 F I=1:1:$L(X4,",") I +$P(X4,",",I) D
"RTN","ORWCH",82,0)
 . D EN^XPAR(DUZ_";VA(200,","ORWCH PAGE SPLIT",I,$P(X4,",",I),.ORERR)
"RTN","ORWCH",83,0)
 Q
"RTN","ORWDPS5")
0^5^B2096708
"RTN","ORWDPS5",1,0)
ORWDPS5 ;SLC/JLI - CPRS Orders Utility for LES; 8/15/2002 11AM
"RTN","ORWDPS5",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**149**;Dec 17, 1997
"RTN","ORWDPS5",3,0)
LESGRP(ORY,ORLES) ;Return all of the orders' display groups LES checked
"RTN","ORWDPS5",4,0)
 ;LES will check the orders belonging to the following display group
"RTN","ORWDPS5",5,0)
 ; 1.  LAB/LABORATORY  ORDERS
"RTN","ORWDPS5",6,0)
 ; 2.  BLOOD BANK      ORDERS
"RTN","ORWDPS5",7,0)
 ; 3.  CHEMISTRY       ORDERS
"RTN","ORWDPS5",8,0)
 N LABID,BLDBKID,CHMID
"RTN","ORWDPS5",9,0)
 S (LABID,BLDBKID,CHMID,ORY)=0
"RTN","ORWDPS5",10,0)
 S:$D(^ORD(100.98,"B","LAB")) LABID=$O(^ORD(100.98,"B","LAB",0))
"RTN","ORWDPS5",11,0)
 I 'LABID S:$D(^ORD(100.98,"B","LABORATORY")) LABID=$O(^ORD(100.98,"B","LABORATORY",0))
"RTN","ORWDPS5",12,0)
 S:$D(^ORD(100.98,"B","BLOOD BANK")) BLDBKID=$O(^ORD(100.98,"B","BLOOD BANK",0))
"RTN","ORWDPS5",13,0)
 S:$D(^ORD(100.98,"B","CHEMISTRY")) CHMID=$O(^ORD(100.98,"B","CHEMISTRY",0))
"RTN","ORWDPS5",14,0)
 I ('LABID)!('BLDBKID!('CHMID)) Q
"RTN","ORWDPS5",15,0)
 S ORY=LABID_U_BLDBKID_U_CHMID
"RTN","ORWDPS5",16,0)
 Q
"RTN","ORWDPS5",17,0)
 ;
"RTN","ORWDPS5",18,0)
LESAPI(ORY,FLDS) ;Call LES Api from inside CPRS for validating changed lab order
"RTN","ORWDPS5",19,0)
 ; FLDS = DFN^TEST^ORL^ORNP^ORDT
"RTN","ORWDPS5",20,0)
 ; DFN:  Patient DFN (pointer to #2)
"RTN","ORWDPS5",21,0)
 ; TEST: Lab Test IFN (pointer to #101.43)
"RTN","ORWDPS5",22,0)
 ; ORL:  Patient Location (pointer to #44)
"RTN","ORWDPS5",23,0)
 ; ORNP: Provider IEN (pointer to #200)
"RTN","ORWDPS5",24,0)
 ; ORDT: Collection date/time (fileman format)
"RTN","ORWDPS5",25,0)
 N DFNL,TESTL,ORLOCL,ORNPL,ORDTL,HAVELES
"RTN","ORWDPS5",26,0)
 S (DFNL,TESTL,ORLOCL,ORNPL,ORDTL,HAVELES)=""
"RTN","ORWDPS5",27,0)
 S DFNL=$P(FLDS,U,1)
"RTN","ORWDPS5",28,0)
 S TESTL=$P(FLDS,U,2)
"RTN","ORWDPS5",29,0)
 S ORLOCL=$P(FLDS,U,3)
"RTN","ORWDPS5",30,0)
 S ORNPL=$P(FLDS,U,4)
"RTN","ORWDPS5",31,0)
 S ORDTL=$P(FLDS,U,5)
"RTN","ORWDPS5",32,0)
 S HAVELES=$TEXT(COM^AVJLES)
"RTN","ORWDPS5",33,0)
 I $L(HAVELES) D COM^AVJLES(.ORY,DFNL,TESTL,ORLOCL,ORNPL,ORDTL)
"RTN","ORWDPS5",34,0)
 S ORY(1)=""
"RTN","ORWDPS5",35,0)
 Q
"RTN","ORWDPS5",36,0)
 ;
"RTN","ORWDXA")
0^15^B73563732
"RTN","ORWDXA",1,0)
ORWDXA ; SLC/KCM/JLI - Utilites for Order Actions; 2/10/03 9:13Am
"RTN","ORWDXA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132,148,141,149**;Dec 17, 1997
"RTN","ORWDXA",3,0)
 ;
"RTN","ORWDXA",4,0)
VALID(VAL,ORID,ACTION,ORNP,ORWNAT) ; Return error message if not valid action for order
"RTN","ORWDXA",5,0)
 N ORACT,ORVP,ORVER,ORIFN,PRTID S VAL="",PRTID=0
"RTN","ORWDXA",6,0)
 I +ORID=0 S VAL="This order has been deleted." Q
"RTN","ORWDXA",7,0)
 I '$D(^OR(100,+ORID,0)) S VAL="This order has been deleted!" Q
"RTN","ORWDXA",8,0)
 I ACTION="XFR",'$L($T(XFR^ORCACT01)) S ACTION="RW" ; for pre-POE
"RTN","ORWDXA",9,0)
 S ORIFN=ORID,ORVP=$P(^OR(100,+ORID,0),U,2)  ; ORCACT0 expects defined
"RTN","ORWDXA",10,0)
 I (ACTION="RN") D  Q:$L(VAL)  ; ** There's got to be a better way!
"RTN","ORWDXA",11,0)
 . N DLG S DLG=$P(^OR(100,+ORID,0),U,5) Q:DLG'[";ORD(101.41,"
"RTN","ORWDXA",12,0)
 . I $G(^ORD(101.41,+DLG,3))'["PROVIDER^ORCDPSIV" Q
"RTN","ORWDXA",13,0)
 . D AUTH^ORWDPS32(.VAL,ORNP)
"RTN","ORWDXA",14,0)
 . I VAL S VAL=$P(VAL,U,2)
"RTN","ORWDXA",15,0)
 . E  S VAL=""
"RTN","ORWDXA",16,0)
 S ORVER=$S(ACTION="CR":"R",$D(^XUSEC("ORELSE",DUZ)):"N",$D(^XUSEC("OREMAS",DUZ)):"C",1:"^")
"RTN","ORWDXA",17,0)
 I ACTION="CR" S ACTION="VR"
"RTN","ORWDXA",18,0)
 I (ACTION="ES")!(ACTION="OC")!(ACTION="RS") S ORACT=ACTION ; why not defined???
"RTN","ORWDXA",19,0)
 I (ACTION="VR"),'($D(^XUSEC("ORELSE",DUZ))!$D(^XUSEC("OREMAS",DUZ))) D  Q
"RTN","ORWDXA",20,0)
 . S VAL="You are not authorized to verify these orders."
"RTN","ORWDXA",21,0)
 I $L(VAL) Q
"RTN","ORWDXA",22,0)
 N OIIEN,ISIV,IVOD
"RTN","ORWDXA",23,0)
 S (ISIV,OIIEN,IVOD)=0
"RTN","ORWDXA",24,0)
 I (ACTION="RW")!(ACTION="XX")!(ACTION="XFR") D  Q:$L(VAL)
"RTN","ORWDXA",25,0)
 . S ISIV=$P(^OR(100,+ORID,0),U,11)
"RTN","ORWDXA",26,0)
 . I ISIV,($P(^ORD(100.98,ISIV,0),U,3)="IV RX") S IVOD=1
"RTN","ORWDXA",27,0)
 . D:'IVOD GTORITM^ORWDXR(.OIIEN,+ORID)
"RTN","ORWDXA",28,0)
 . D:OIIEN ISACTOI(.VAL,OIIEN) I $L(VAL)>0 Q
"RTN","ORWDXA",29,0)
 . N DLG,FRM
"RTN","ORWDXA",30,0)
 . S DLG=$P(^OR(100,+ORID,0),U,5),FRM=0
"RTN","ORWDXA",31,0)
 . I $P(DLG,";",2)'="ORD(101.41," S DLG=0
"RTN","ORWDXA",32,0)
 . I DLG D FORMID^ORWDXM(.FRM,+DLG)
"RTN","ORWDXA",33,0)
 . I '(DLG&FRM) D
"RTN","ORWDXA",34,0)
 . . S VAL="Copy & Change are not implemented for this order that predates CPRS."
"RTN","ORWDXA",35,0)
 N OREBUILD  ; sometimes left defined by $$VALID
"RTN","ORWDXA",36,0)
 I $$VALID^ORCACT0(ORID,ACTION,.VAL,$G(ORWNAT)) S VAL="" ; VAL=error
"RTN","ORWDXA",37,0)
 Q
"RTN","ORWDXA",38,0)
HOLD(REC,ORID,ORNP)  ; Place an order on hold
"RTN","ORWDXA",39,0)
 N ACTDA
"RTN","ORWDXA",40,0)
 S ACTDA=$$ACTION^ORCSAVE("HD",+ORID,ORNP)
"RTN","ORWDXA",41,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",42,0)
 Q
"RTN","ORWDXA",43,0)
UNHOLD(REC,ORID,ORNP)  ; Release an order from hold
"RTN","ORWDXA",44,0)
 N ACTDA
"RTN","ORWDXA",45,0)
 S ACTDA=$$ACTION^ORCSAVE("RL",+ORID,ORNP)
"RTN","ORWDXA",46,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",47,0)
 Q
"RTN","ORWDXA",48,0)
DC(REC,ORID,ORNP,ORL,REASON)   ; Discontinue/Cancel/Delete an order
"RTN","ORWDXA",49,0)
 N NATURE,CREATE,PRINT,STATUS,ACTDA,SIGSTS
"RTN","ORWDXA",50,0)
 N X3,X8,CURRACT
"RTN","ORWDXA",51,0)
 Q:'+ORID
"RTN","ORWDXA",52,0)
 S CURRACT=0
"RTN","ORWDXA",53,0)
 S ORL(2)=ORL_";SC(",ORL=ORL(2),NATURE=""
"RTN","ORWDXA",54,0)
 I REASON S NATURE=$P(^ORD(100.02,$P(^ORD(100.03,REASON,0),U,7),0),U,2)
"RTN","ORWDXA",55,0)
 S:NATURE="" NATURE="W"  ; S:ORNP=DUZ NATURE="E" 
"RTN","ORWDXA",56,0)
 S CREATE=$$CREATE^ORX1(NATURE),PRINT=$$PRINT^ORCACT2(NATURE)
"RTN","ORWDXA",57,0)
 S X3=$G(^OR(100,+ORID,3))
"RTN","ORWDXA",58,0)
 S CURRACT=$P(X3,U,7) S:CURRACT<1 CURRACT=+$O(^OR(100,+ORID,8,"?"),-1)
"RTN","ORWDXA",59,0)
 I '$D(^OR(100,+ORID,8,+$P(ORID,";",2),0)) D
"RTN","ORWDXA",60,0)
 . S X8=$G(^OR(100,+ORID,8,CURRACT,0))
"RTN","ORWDXA",61,0)
 . S SIGSTS=$P(X8,U,4)
"RTN","ORWDXA",62,0)
 . S $P(ORID,";",2)=CURRACT
"RTN","ORWDXA",63,0)
 E  D
"RTN","ORWDXA",64,0)
 . S X8=^OR(100,+ORID,8,+$P(ORID,";",2),0)
"RTN","ORWDXA",65,0)
 . S SIGSTS=$P(X8,U,4)
"RTN","ORWDXA",66,0)
 I '$D(SIGSTS) S SIGSTS=1
"RTN","ORWDXA",67,0)
 S STATUS=$P($G(^OR(100,+ORID,8,+$P(ORID,";",2),0)),U,15)
"RTN","ORWDXA",68,0)
 I (STATUS=10)!(STATUS=11) D  Q   ; delete/cancel unreleased order
"RTN","ORWDXA",69,0)
 . N RPLORD
"RTN","ORWDXA",70,0)
 . S RPLORD=$P($G(^OR(100,+ORID,3)),U,5)    ; replaced order
"RTN","ORWDXA",71,0)
 . D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",72,0)
 . I STATUS=10,($P(X8,U,4)'=2) D  ; CANCEL signed, delayed, unreleased
"RTN","ORWDXA",73,0)
 . . ; taken from CLRDLY^ORCACT2
"RTN","ORWDXA",74,0)
 . . I REASON D SET^ORCACT2(+ORID,NATURE,REASON)
"RTN","ORWDXA",75,0)
 . . I 'REASON D SET^ORCACT2(+ORID,"M","","Delayed Order Cancelled")
"RTN","ORWDXA",76,0)
 . . D STATUS^ORCSAVE2(+ORID,13) S $P(^OR(100,+ORID,8,1,0),U,15)=13
"RTN","ORWDXA",77,0)
 . E  D                           ; DELETE unsigned, unreleased
"RTN","ORWDXA",78,0)
 . . I $P(X8,U,2)="DC" K ^OR(100,+ORID,6)
"RTN","ORWDXA",79,0)
 . . ; delete fwd ptr to order about to be deleted
"RTN","ORWDXA",80,0)
 . . I RPLORD,$P(X8,U,2)="NW" S $P(^OR(100,RPLORD,3),U,6)=""
"RTN","ORWDXA",81,0)
 . . ; delete ptr to order in Patient Event file #100.2
"RTN","ORWDXA",82,0)
 . . N EVT S EVT=$P($G(^OR(100,+ORID,0)),U,17) I EVT,EVT=+$O(^ORE(100.2,"AO",+ORID,0)) S $P(^ORE(100.2,EVT,0),U,4)="" K ^ORE(100.2,"AO",+ORID,EVT)
"RTN","ORWDXA",83,0)
 . . D DELETE^ORCSAVE2(ORID)
"RTN","ORWDXA",84,0)
 . I RPLORD,'(SIGSTS=1) S ORID=RPLORD  ; for Renews & Changes, show replaced order
"RTN","ORWDXA",85,0)
 . I '$D(^OR(100,+ORID)) D
"RTN","ORWDXA",86,0)
 . . S $P(REC(1),U)="~0",REC(2)="tDELETED: "_$E(REC(2),2,245)
"RTN","ORWDXA",87,0)
 . E  D
"RTN","ORWDXA",88,0)
 . . K REC
"RTN","ORWDXA",89,0)
 . . D GETBYIFN^ORWORR(.REC,+ORID_";"_$P($G(^OR(100,+ORID,3)),U,7))
"RTN","ORWDXA",90,0)
 . S $P(REC(1),U,14)=2 ; DCType = deletion
"RTN","ORWDXA",91,0)
 I CREATE D
"RTN","ORWDXA",92,0)
 . S ACTDA=$$ACTION^ORCSAVE("DC",+ORID,ORNP)
"RTN","ORWDXA",93,0)
 . D SET^ORCACT2(+ORID,NATURE,REASON)
"RTN","ORWDXA",94,0)
 E  D 
"RTN","ORWDXA",95,0)
 . D EN^ORCSEND(+ORID,"DC",3,1,NATURE,REASON)
"RTN","ORWDXA",96,0)
 . S ACTDA=$P(ORID,";",2)
"RTN","ORWDXA",97,0)
 . I PRINT ; do something to print this
"RTN","ORWDXA",98,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",99,0)
 S $P(REC(1),U,14)=$S(CREATE:1,1:3)  ;DCType - 1=NewOrder, 3=NewStatus
"RTN","ORWDXA",100,0)
 Q
"RTN","ORWDXA",101,0)
DCREASON(LST)   ; Return a list of DC reasons
"RTN","ORWDXA",102,0)
 N IEN,ILST,X
"RTN","ORWDXA",103,0)
 S ILST=1,LST(ILST)="~DCReason"
"RTN","ORWDXA",104,0)
 S IEN=0 F  S IEN=$O(^ORD(100.03,IEN)) Q:'IEN  S X=^(IEN,0) D
"RTN","ORWDXA",105,0)
 . I $P(X,U,4) Q                              ; inactive
"RTN","ORWDXA",106,0)
 . I $P(X,U,5)'=+$O(^DIC(9.4,"C","OR",0)) Q   ; not OR pkg
"RTN","ORWDXA",107,0)
 . I $P(X,U,7)=+$O(^ORD(100.02,"C","A",0)) Q  ; nature=auto
"RTN","ORWDXA",108,0)
 . S ILST=ILST+1,LST(ILST)="i"_IEN_U_$P(X,U)
"RTN","ORWDXA",109,0)
 S IEN=$O(^ORD(100.03,"C","ORREQ",0))
"RTN","ORWDXA",110,0)
 I IEN S ILST=ILST+1,LST(ILST)="d"_IEN_U_$P(^ORD(100.03,IEN,0),U)
"RTN","ORWDXA",111,0)
 Q
"RTN","ORWDXA",112,0)
DCREQIEN(VAL)   ; Return the IEN for Requesting Physician Cancelled reason
"RTN","ORWDXA",113,0)
 S VAL=$O(^ORD(100.03,"S","REQ",0))
"RTN","ORWDXA",114,0)
 Q
"RTN","ORWDXA",115,0)
COMPLETE(REC,ORID,ESCODE)      ; Complete an order (generic orders)
"RTN","ORWDXA",116,0)
 ;N X S X=+$E($$NOW^XLFDT,1,12)
"RTN","ORWDXA",117,0)
 ;D DATES^ORCSAVE2(+ORID,,X)
"RTN","ORWDXA",118,0)
 ;D STATUS^ORCSAVE2(+ORID,2)
"RTN","ORWDXA",119,0)
 ; validate ESCode
"RTN","ORWDXA",120,0)
 D COMP^ORCSAVE2(ORID)
"RTN","ORWDXA",121,0)
 D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",122,0)
 Q
"RTN","ORWDXA",123,0)
VERIFY(REC,ORID,ESCODE,ORVER) ; Verify an order
"RTN","ORWDXA",124,0)
 ; validate ESCode
"RTN","ORWDXA",125,0)
 S ORVER=$G(ORVER,$S($D(^XUSEC("ORELSE",DUZ)):"N",$D(^XUSEC("OREMAS",DUZ)):"C",1:U))
"RTN","ORWDXA",126,0)
 I ORVER'=U D
"RTN","ORWDXA",127,0)
 . N ORIFN,ORES,ORI
"RTN","ORWDXA",128,0)
 . ; to match 56, need to VERIFY any replaced orders:
"RTN","ORWDXA",129,0)
 . S ORIFN=ORID,ORES(ORIFN)="" D REPLCD^ORCACT1
"RTN","ORWDXA",130,0)
 . S ORI="" F  S ORI=$O(ORES(ORI)) Q:ORI=""  D EN^ORCSEND(ORI,"VR","",""),UNLK1^ORX2(+ORI):ORI'=ORID ;ORID locked prior
"RTN","ORWDXA",131,0)
 D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",132,0)
 Q
"RTN","ORWDXA",133,0)
ALERT(DUMMY,ORID,ORDUZ)       ;send alert to user (ORDUZ) when order (ORID) resulted
"RTN","ORWDXA",134,0)
 ;if no user passed from GUI, use ordering provider:
"RTN","ORWDXA",135,0)
 I $G(ORDUZ)<1 S ORDUZ=+$$ORDERER^ORQOR2(+ORID)
"RTN","ORWDXA",136,0)
 I $L($G(ORDUZ))<1 S ORDUZ=DUZ
"RTN","ORWDXA",137,0)
 S DUMMY=1,$P(^OR(100,+ORID,3),U,10)=ORDUZ
"RTN","ORWDXA",138,0)
 Q
"RTN","ORWDXA",139,0)
FLAG(REC,ORIFN,OREASON,ORNP)   ; Flag an order
"RTN","ORWDXA",140,0)
 N ORB,ORVP,DA,ORPS
"RTN","ORWDXA",141,0)
 D BULLETIN
"RTN","ORWDXA",142,0)
 S DA=$P(ORIFN,";",2),ORVP=+$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORWDXA",143,0)
 K ^OR(100,+ORIFN,8,DA,3) S ^(3)="1^"_$G(XMZ)_U_+$E($$NOW^XLFDT,1,12)_U_DUZ_U_OREASON
"RTN","ORWDXA",144,0)
 D KILL^XM,MSG^ORCFLAG(ORIFN)
"RTN","ORWDXA",145,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT ; Last Activity
"RTN","ORWDXA",146,0)
 I +$G(ORNP)<1 S ORNP=+$P($G(^OR(100,+ORIFN,8,DA,0)),U,3)
"RTN","ORWDXA",147,0)
 S ORB=+ORVP_U_+ORIFN_U_ORNP_"^1" D EN^OCXOERR(ORB) ; notification
"RTN","ORWDXA",148,0)
 D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXA",149,0)
 Q
"RTN","ORWDXA",150,0)
BULLETIN        ; Send flagged order bulletin (USED BY FLAG)
"RTN","ORWDXA",151,0)
 N OR0,OR3,ORDTXT,XMB,XMY,XMDUZ,ORENT,BULL,ORSRV,ORUSR
"RTN","ORWDXA",152,0)
 S OR0=$G(^OR(100,+ORIFN,0)),OR3=$G(^(3))
"RTN","ORWDXA",153,0)
 ;CLA - 3/21/96:
"RTN","ORWDXA",154,0)
 S ORUSR=+$P(OR0,U,4)
"RTN","ORWDXA",155,0)
 S ORSRV=$G(^VA(200,ORUSR,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORWDXA",156,0)
 S ORENT="USR.`"_ORUSR_"^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","ORWDXA",157,0)
 S BULL=$$GET^XPAR(ORENT,"ORB FLAGGED ORDERS BULLETIN",1,"Q")
"RTN","ORWDXA",158,0)
 Q:$G(BULL)'="Y"   ;quit if parameter value is not 'Y'es
"RTN","ORWDXA",159,0)
 ;
"RTN","ORWDXA",160,0)
 S XMB="OR FLAGGED ORDER",XMDUZ=DUZ,XMY(+$P(OR0,U,4))=""
"RTN","ORWDXA",161,0)
 S XMB(1)=$P(^DPT(+$P(OR0,U,2),0),U),XMB(2)=$P(^(0),U,9),XMB(3)="" ;sb AGE
"RTN","ORWDXA",162,0)
 S XMB(4)=$$FMTE^XLFDT($P(OR0,U,7))
"RTN","ORWDXA",163,0)
 D TEXT^ORQ12(.ORDTXT,+ORIFN,80)
"RTN","ORWDXA",164,0)
 S XMB(5)=$G(ORDTXT(1)),XMB(6)=$G(ORDTXT(2)),XMB(7)=$G(ORDTXT(3))
"RTN","ORWDXA",165,0)
 S XMB(8)=$$FMTE^XLFDT($P(OR0,U,8)),XMB(9)=$$FMTE^XLFDT($P(OR0,U,9)),XMB(10)=OREASON
"RTN","ORWDXA",166,0)
 S XMB(11)=$P($G(^ORD(100.01,+$P(OR3,U,3),0)),U)
"RTN","ORWDXA",167,0)
 D EN^XMB
"RTN","ORWDXA",168,0)
 Q
"RTN","ORWDXA",169,0)
UNFLAG(REC,ORIFN,OREASON)       ; Unflag an order
"RTN","ORWDXA",170,0)
 N DA,ORB,ORNP,ORVP,ORPS
"RTN","ORWDXA",171,0)
 S DA=$P(ORIFN,";",2),ORVP=+$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORWDXA",172,0)
 S $P(^OR(100,+ORIFN,8,DA,3),U)=0,$P(^(3),U,6,8)=+$E($$NOW^XLFDT,1,12)_U_DUZ_U_OREASON D MSG^ORCFLAG(ORIFN)
"RTN","ORWDXA",173,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT  ; Last Activity
"RTN","ORWDXA",174,0)
 S ORNP=+$P($G(^OR(100,+ORIFN,8,DA,0)),U,3)
"RTN","ORWDXA",175,0)
 S ORB=+ORVP_U_+ORIFN_U_ORNP_"^0" D EN^OCXOERR(ORB) ; notification
"RTN","ORWDXA",176,0)
 D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXA",177,0)
 Q
"RTN","ORWDXA",178,0)
FLAGTXT(LST,ORID)      ; Return flag reason
"RTN","ORWDXA",179,0)
 N FLAG
"RTN","ORWDXA",180,0)
 S FLAG=$G(^OR(100,+ORID,8,$P(ORID,";",2),3))
"RTN","ORWDXA",181,0)
 S LST(1)="FLAGGED: "_$$FMTE^XLFDT($P(FLAG,U,3))_" by "_$P($G(^VA(200,+$P(FLAG,U,4),0)),U)
"RTN","ORWDXA",182,0)
 S LST(2)=$P(FLAG,U,5) ; reason
"RTN","ORWDXA",183,0)
 Q
"RTN","ORWDXA",184,0)
WCGET(LST,ORID) ; Return ward comments
"RTN","ORWDXA",185,0)
 N I,ORIFN,ACT S ORIFN=+ORID,ACT=+$P(ORID,";",2)
"RTN","ORWDXA",186,0)
 S I=0 F  S I=$O(^OR(100,ORIFN,8,ACT,5,I)) Q:'I  S LST(I)=$G(^(I,0))
"RTN","ORWDXA",187,0)
 Q
"RTN","ORWDXA",188,0)
WCPUT(ERR,ORID,WCLST) ; Set ward comments for order
"RTN","ORWDXA",189,0)
 N DIERR,ERRLST,ORIFN,ACT S ORIFN=+ORID,ACT=+$P(ORID,";",2)
"RTN","ORWDXA",190,0)
 D WP^DIE(100.008,ACT_","_ORIFN_",",50,"","WCLST","ERRLST")
"RTN","ORWDXA",191,0)
 S ERR="" I $D(DIERR) S ERR="An error occurred while saving comments."
"RTN","ORWDXA",192,0)
 Q
"RTN","ORWDXA",193,0)
OFCPLX(ORY,ORID,PRTORDER) ;Check if ORID is an child of the PRTORDER
"RTN","ORWDXA",194,0)
 N NUMCHDS,NOWID,NOWVAL,X3,ORDA
"RTN","ORWDXA",195,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXA",196,0)
 I $L($G(^OR(100,+ORID,3))),('$L($P(^(3),U,9))) Q
"RTN","ORWDXA",197,0)
 S (NUMCHDS,NOWID,NOWVAL,X3,ORDA)=0
"RTN","ORWDXA",198,0)
 S PRTORDER=+$P(^(3),U,9)
"RTN","ORWDXA",199,0)
 S X3=$G(^OR(100,PRTORDER,3)),ORDA=$P(X3,U,7)
"RTN","ORWDXA",200,0)
 S PRTORDER=PRTORDER_";"_ORDA
"RTN","ORWDXA",201,0)
 S NUMCHDS=$P($G(^OR(100,+PRTORDER,2,0)),U,4)
"RTN","ORWDXA",202,0)
 I NUMCHDS>2 S ORY="COMPLEX-PSI"_U_PRTORDER
"RTN","ORWDXA",203,0)
 S:$D(^OR(100,+PRTORDER,4.5,"ID","NOW")) NOWID=$O(^("NOW",0))
"RTN","ORWDXA",204,0)
 S:NOWID NOWVAL=$G(^OR(100,+PRTORDER,4.5,NOWID,1))
"RTN","ORWDXA",205,0)
 I NOWVAL=1 Q
"RTN","ORWDXA",206,0)
 E  S ORY="COMPLEX-PSI"_U_PRTORDER
"RTN","ORWDXA",207,0)
 Q
"RTN","ORWDXA",208,0)
ISACTOI(ORY,OI) ;If it's an active orderable item
"RTN","ORWDXA",209,0)
 I $G(^ORD(101.43,+OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDXA",210,0)
 . S ORY=$P($G(^ORD(101.43,OI,0)),U)_" has been inactivated and may not be ordered anymore."
"RTN","ORWDXA",211,0)
 Q
"RTN","ORWDXR")
0^7^B30337944
"RTN","ORWDXR",1,0)
ORWDXR ; SLC/KCM/JDL - Utilites for Order Actions;;3/28/02  07:47 ;11/15/02  16:18
"RTN","ORWDXR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,125,131,134,141,149**;Dec 17, 1997
"RTN","ORWDXR",3,0)
 ;
"RTN","ORWDXR",4,0)
ISREL(VAL,ORIFN) ; Return true if an order has been released
"RTN","ORWDXR",5,0)
 N STS S STS=$P(^OR(100,+ORIFN,3),U,3)
"RTN","ORWDXR",6,0)
 S VAL=$S(STS=10:0,STS=11:0,1:1)  ; false if delayed or unreleased order
"RTN","ORWDXR",7,0)
 Q
"RTN","ORWDXR",8,0)
 ;RENEW(REC,ORIFN,ORVP,ORNP,ORL,FLDS) ;Renew an order
"RTN","ORWDXR",9,0)
RENEW(REC,ORIFN,ORVP,ORNP,ORL,FLDS,CPLX) ; Renew an order JD
"RTN","ORWDXR",10,0)
 N ORDG
"RTN","ORWDXR",11,0)
 N ORDUZ,ORSTS,OREVENT,ORCAT,ORDA,ORTS,ORNEW,ORCHECK,ORLOG,ORPKG
"RTN","ORWDXR",12,0)
 N ORDIALOG,PRMT,X0
"RTN","ORWDXR",13,0)
 ;JD START
"RTN","ORWDXR",14,0)
 N FSTDOSE,FST
"RTN","ORWDXR",15,0)
 S (FSTDOSE,FST)=0
"RTN","ORWDXR",16,0)
 I '$D(CPLX) S CPLX=0
"RTN","ORWDXR",17,0)
 ;JD END
"RTN","ORWDXR",18,0)
 S ORVP=ORVP_";DPT(",ORL(2)=ORL_";SC(",ORL=ORL(2)
"RTN","ORWDXR",19,0)
 S X0=^OR(100,+ORIFN,0)
"RTN","ORWDXR",20,0)
 S ORDG=$P(X0,U,11)
"RTN","ORWDXR",21,0)
 S ORPKG=$P(X0,U,14)
"RTN","ORWDXR",22,0)
 I $P(X0,U,5)["101.41," D                        ; version 3
"RTN","ORWDXR",23,0)
 . S ORDIALOG=+$P(X0,U,5),ORCAT=$P(^OR(100,+ORIFN,0),U,12)
"RTN","ORWDXR",24,0)
 . D GETDLG^ORCD(ORDIALOG),GETORDER^ORCD(+ORIFN)
"RTN","ORWDXR",25,0)
 . ;JD START
"RTN","ORWDXR",26,0)
 . S:CPLX FSTDOSE=$P($G(ORDIALOG("B","FIRST DOSE")),U,2)
"RTN","ORWDXR",27,0)
 . I FSTDOSE,$G(ORDIALOG(FSTDOSE,1)) K ORDIALOG(FSTDOSE,1)
"RTN","ORWDXR",28,0)
 . ;JD END
"RTN","ORWDXR",29,0)
 E  D                                            ; version 2.5 generic
"RTN","ORWDXR",30,0)
 . S ORDIALOG=$O(^ORD(101.41,"B","OR GXTEXT WORD PROCESSING ORDE",0))
"RTN","ORWDXR",31,0)
 . D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDXR",32,0)
 . S PRMT=$O(^ORD(101.41,"B","OR GTX WORD PROCESSING 1",0))
"RTN","ORWDXR",33,0)
 . S ORDIALOG(PRMT,1)=$NA(^TMP("ORWORD",$J,PRMT,1))
"RTN","ORWDXR",34,0)
 . M ^TMP("ORWORD",$J,PRMT,1)=^OR(100,+ORIFN,1)
"RTN","ORWDXR",35,0)
 . S PRMT=$O(^ORD(101.41,"B","OR GTX START DATE/TIME",0))
"RTN","ORWDXR",36,0)
 . I $P(X0,U,9) S ORDIALOG(PRMT,1)=$P(X0,U,9)
"RTN","ORWDXR",37,0)
 I +FLDS(1)=999 D  ; generic order
"RTN","ORWDXR",38,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX START DATE/TIME"),1)=$P(FLDS(1),U,2)
"RTN","ORWDXR",39,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX STOP DATE/TIME"),1)=$P(FLDS(1),U,3)
"RTN","ORWDXR",40,0)
 I ($O(^ORD(101.41,"AB","PS MEDS",0))>0),(+FLDS(1)=130)!(+FLDS(1)=135)!(+FLDS(1)=140),'$L($G(ORDIALOG($$PTR^ORCD("OR GTX SIG"),1))) D
"RTN","ORWDXR",41,0)
 . N ORDOSE,ORDRUG,ORCAT,ORWPSOI,PROMPT,DRUG
"RTN","ORWDXR",42,0)
 . S ORCAT=$P($G(^OR(100,+ORIFN,0)),U,12)
"RTN","ORWDXR",43,0)
 . S PROMPT=$$PTR^ORCD("OR GTX INSTRUCTIONS")
"RTN","ORWDXR",44,0)
 . S ORDRUG=$G(ORDIALOG($$PTR^ORCD("OR GTX DISPENSE DRUG"),1))
"RTN","ORWDXR",45,0)
 . S ORWPSOI=+$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORWDXR",46,0)
 . I ORWPSOI S ORWPSOI=+$P($G(^ORD(101.43,+ORWPSOI,0)),U,2)
"RTN","ORWDXR",47,0)
 . D DOSE^PSSORUTL(.ORDOSE,ORWPSOI,$S(ORCAT="I":"U",1:"O"),ORVP)       ; dflt doses
"RTN","ORWDXR",48,0)
 . D D1^ORCDPS2  ; set up ORDOSE
"RTN","ORWDXR",49,0)
 . S DRUG=$G(ORDOSE("DD",+ORDRUG))
"RTN","ORWDXR",50,0)
 . I DRUG,ORCAT="O" D RESETID^ORCDPS
"RTN","ORWDXR",51,0)
 . D SIG^ORCDPS2
"RTN","ORWDXR",52,0)
 I +FLDS(1)=140 D  ; outpatient meds
"RTN","ORWDXR",53,0)
 . K ORDIALOG($$PTR^ORCD("OR GTX START DATE"),1) ; remove effective dt
"RTN","ORWDXR",54,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX REFILLS"),1)=$P(FLDS(1),U,4)
"RTN","ORWDXR",55,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX ROUTING"),1)=$P(FLDS(1),U,5)
"RTN","ORWDXR",56,0)
 . S PRMT=$$PTR^ORCD("OR GTX WORD PROCESSING 1")
"RTN","ORWDXR",57,0)
 . K ^TMP("ORWORD",$J,PRMT,1)
"RTN","ORWDXR",58,0)
 . S I=1 F  S I=$O(FLDS(I)) Q:'I  S ^TMP("ORWORD",$J,PRMT,1,I-1,0)=FLDS(I)
"RTN","ORWDXR",59,0)
 . S ^TMP("ORWORD",$J,PRMT,1,0)=U_U_(I-1)_U_(I-1)_U_DT_U
"RTN","ORWDXR",60,0)
 . S ORDIALOG(PRMT,1)=$NA(^TMP("ORWORD",$J,PRMT,1))
"RTN","ORWDXR",61,0)
 D RN^ORCSAVE
"RTN","ORWDXR",62,0)
 S REC="" S ORIFN=+ORIFN_";"_ORDA D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXR",63,0)
 Q
"RTN","ORWDXR",64,0)
RNWFLDS(LST,ORIFN)      ; Return fields for renew action
"RTN","ORWDXR",65,0)
 ; LST(0)=RenewType^Start^Stop^Refills^Pickup  LST(n)=Comments
"RTN","ORWDXR",66,0)
 N X0,DG,PKG,RNWTYPE,START,STOP,REFILLS
"RTN","ORWDXR",67,0)
 S ORIFN=+ORIFN,X0=^OR(100,ORIFN,0),DG=$P(X0,U,11),PKG=$P(X0,U,14)
"RTN","ORWDXR",68,0)
 S PKG=$E($P(^DIC(9.4,PKG,0),U,2),1,2),DG=$P(^ORD(100.98,DG,0),U,3)
"RTN","ORWDXR",69,0)
 S LST(0)=$S(PKG="OR":999,PKG="PS"&(DG="O RX"):140,PKG="PS"&(DG="UD RX"):130,1:0)
"RTN","ORWDXR",70,0)
 I +LST(0)=140 D
"RTN","ORWDXR",71,0)
 . S LST(0)=LST(0)_U_U_U_+$$VAL(ORIFN,"REFILLS")_U_$$VAL(ORIFN,"PICKUP")
"RTN","ORWDXR",72,0)
 . D WPVAL(.LST,ORIFN,"COMMENT")
"RTN","ORWDXR",73,0)
 I +LST(0)=999 S LST(0)=LST(0)_U_$$VAL(ORIFN,"START")_U_$$VAL(ORIFN,"STOP")
"RTN","ORWDXR",74,0)
 ; make sure start/stop times are relative times, otherwise use NOW, no Stop
"RTN","ORWDXR",75,0)
 I +$P(LST(0),U,2) S $P(LST(0),U,2)="NOW"
"RTN","ORWDXR",76,0)
 I +$P(LST(0),U,3)!($P(LST(0),U,3)="0") S $P(LST(0),U,3)=""
"RTN","ORWDXR",77,0)
 Q
"RTN","ORWDXR",78,0)
VAL(ORIFN,ID)   ; Return value for order response
"RTN","ORWDXR",79,0)
 N DA S DA=+$O(^OR(100,ORIFN,4.5,"ID",ID,0))
"RTN","ORWDXR",80,0)
 Q $G(^OR(100,ORIFN,4.5,DA,1))
"RTN","ORWDXR",81,0)
WPVAL(TXT,ORIFN,ID)    ; Return word processing value
"RTN","ORWDXR",82,0)
 N DA S DA=+$O(^OR(100,ORIFN,4.5,"ID",ID,0))
"RTN","ORWDXR",83,0)
 S I=0 F  S I=$O(^OR(100,ORIFN,4.5,DA,2,I)) Q:'I  S TXT(I)=^(I,0)
"RTN","ORWDXR",84,0)
 Q
"RTN","ORWDXR",85,0)
CHKACT(ORDERID,ORWSIG,ORWREL,ORWNATR) ; Return error if can't sign/release order
"RTN","ORWDXR",86,0)
 N ORACT,ORWERR
"RTN","ORWDXR",87,0)
 ; begin case
"RTN","ORWDXR",88,0)
 S ORACT=""
"RTN","ORWDXR",89,0)
 I (ORWSIG=1),$D(^XUSEC("ORES",DUZ)) S ORACT="ES" G XC1
"RTN","ORWDXR",90,0)
 I (ORWSIG=7),$D(^XUSEC("ORES",DUZ)) S ORACT="DS" G XC1
"RTN","ORWDXR",91,0)
 I ORWREL,(ORWNATR="W") S ORACT="OC" G XC1
"RTN","ORWDXR",92,0)
 I ORWREL S ORACT="RS" S:$P($G(^OR(100,+ORDERID,0)),U,16)<2 ORACT="ES"
"RTN","ORWDXR",93,0)
XC1 ; end case
"RTN","ORWDXR",94,0)
 S ORWERR=""
"RTN","ORWDXR",95,0)
 I $L(ORACT),$$VALID^ORCACT0(ORDERID,ORACT,.ORWERR,ORWNATR) S ORWERR=""
"RTN","ORWDXR",96,0)
 Q ORWERR
"RTN","ORWDXR",97,0)
GTORITM(Y,ORIFN)        ;-- Get back the orderable item IEN
"RTN","ORWDXR",98,0)
 S ORIFN=+ORIFN
"RTN","ORWDXR",99,0)
 S Y=$$VALUE^ORCSAVE2(ORIFN,"ORDERABLE")
"RTN","ORWDXR",100,0)
 Q
"RTN","ORWDXR",101,0)
GETPKG(Y,IFN) ;Get package for an order
"RTN","ORWDXR",102,0)
 N ORDERID,PKGID
"RTN","ORWDXR",103,0)
 Q:+IFN<1
"RTN","ORWDXR",104,0)
 S ORDERID=+IFN,Y=""
"RTN","ORWDXR",105,0)
 S PKGID=$P(^OR(100,ORDERID,0),U,14)
"RTN","ORWDXR",106,0)
 S:PKGID>0 Y=$P(^DIC(9.4,PKGID,0),U,2)
"RTN","ORWDXR",107,0)
 Q
"RTN","ORWDXR",108,0)
 ;JD START
"RTN","ORWDXR",109,0)
ISCPLX(ORY,ORID) ; 1: is complex order 0: is not
"RTN","ORWDXR",110,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR",111,0)
 N NUMCHDS,NOWID,NOWVAL
"RTN","ORWDXR",112,0)
 S (NOWVAL,NOWID)=0
"RTN","ORWDXR",113,0)
 S NUMCHDS=$P($G(^OR(100,+ORID,2,0)),U,4)
"RTN","ORWDXR",114,0)
 I NUMCHDS>2 S ORY=1 Q
"RTN","ORWDXR",115,0)
 I NUMCHDS=2 D
"RTN","ORWDXR",116,0)
 . S ORY=1
"RTN","ORWDXR",117,0)
 . S:$D(^OR(100,+ORID,4.5,"ID","NOW")) NOWID=$O(^("NOW",0))
"RTN","ORWDXR",118,0)
 . S:NOWID NOWVAL=$G(^OR(100,+ORID,4.5,NOWID,1))
"RTN","ORWDXR",119,0)
 I NOWVAL=1 S ORY=0
"RTN","ORWDXR",120,0)
 Q
"RTN","ORWDXR",121,0)
ORCPLX(ORY,ORID,ORACT) ;Return children orders of the complex order
"RTN","ORWDXR",122,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR",123,0)
 N CHLDCNT,IDX,X3
"RTN","ORWDXR",124,0)
 S (CHLDCNT,IDX)=0
"RTN","ORWDXR",125,0)
 S:$L($G(^OR(100,+ORID,2,0))) CHLDCNT=$P(^(0),U,4)
"RTN","ORWDXR",126,0)
 I 'CHLDCNT Q
"RTN","ORWDXR",127,0)
 F  S IDX=$O(^OR(100,+ORID,2,IDX)) Q:'IDX  D
"RTN","ORWDXR",128,0)
 . S X3=$G(^OR(100,IDX,3))
"RTN","ORWDXR",129,0)
 . S:'ORACT ORACT=$P(X3,U,7)
"RTN","ORWDXR",130,0)
 . S ORY(IDX)=IDX_";"_ORACT
"RTN","ORWDXR",131,0)
 Q
"RTN","ORWDXR",132,0)
CANRN(ORY,ORID) ; Check conjunction for renew.
"RTN","ORWDXR",133,0)
 ; All conjunctioni = "And" return 1
"RTN","ORWDXR",134,0)
 ; Has a "Then" return 0
"RTN","ORWDXR",135,0)
 Q:'$G(^OR(100,+ORID,0))
"RTN","ORWDXR",136,0)
 N INDX,INDY,CANRENEW
"RTN","ORWDXR",137,0)
 S (INDX,INDY)=0
"RTN","ORWDXR",138,0)
 S CANRENEW=1
"RTN","ORWDXR",139,0)
 F  S INDX=$O(^OR(100,+ORID,4.5,"ID","CONJ",INDX)) Q:'INDX  D
"RTN","ORWDXR",140,0)
 . F  S INDY=$O(^OR(100,+ORID,4.5,INDX,INDY)) Q:'INDY  D
"RTN","ORWDXR",141,0)
 . . I $G(^(INDY))="T" S CANRENEW=0 Q
"RTN","ORWDXR",142,0)
 . I CANRENEW=0 Q
"RTN","ORWDXR",143,0)
 S ORY=CANRENEW
"RTN","ORWDXR",144,0)
 Q
"RTN","ORWDXR",145,0)
ISNOW(ORY,ORID) ; Is first time now order?
"RTN","ORWDXR",146,0)
 N SCH
"RTN","ORWDXR",147,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR",148,0)
 S SCH=""
"RTN","ORWDXR",149,0)
 S SCH=$O(^OR(100,+ORID,4.5,"ID","SCHEDULE",0))
"RTN","ORWDXR",150,0)
 S:SCH SCH=$G(^OR(100,+ORID,4.5,SCH,1))
"RTN","ORWDXR",151,0)
 S:SCH="NOW" ORY=1
"RTN","ORWDXR",152,0)
 Q
"RTN","ORWDXR",153,0)
 ;JD END
"RTN","ORWPT")
0^6^B54836562
"RTN","ORWPT",1,0)
ORWPT ; SLC/KCM/REV - Patient Lookup Functions ;25-JAN-1999 11:26:58 [3/25/02 3:07pm]
"RTN","ORWPT",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,149**;Dec 17, 1997
"RTN","ORWPT",3,0)
 ;
"RTN","ORWPT",4,0)
IDINFO(REC,DFN) ; Return identifying information for a patient
"RTN","ORWPT",5,0)
 ; PID^DOB^SEX^VET^SC%^WARD^RM-BED^NAME
"RTN","ORWPT",6,0)
 N X0,X1,X101,X3,XV  ; name/dob/sex/ssn, ward, room-bed, sc%, vet
"RTN","ORWPT",7,0)
 S X0=$G(^DPT(DFN,0)),X1=$G(^(.1)),X101=$G(^(.101)),X3=$G(^(.3)),XV=$G(^("VET"))
"RTN","ORWPT",8,0)
 S REC=$$SSN^DPTLK1(DFN)_U_$$DOB^DPTLK1(DFN,2)_U_$P(X0,U,2)_U_$P(XV,U)_U_$P(X3,U,2)_U_$P(X1,U)_U_$P(X101,U)_U_$P(X0,U) ;DG249
"RTN","ORWPT",9,0)
 Q
"RTN","ORWPT",10,0)
PTINQ(REF,DFN) ; Return formatted pt inquiry report
"RTN","ORWPT",11,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",12,0)
 D DGINQ^ORCXPND1(DFN)
"RTN","ORWPT",13,0)
 S REF=$NA(^TMP("ORDATA",$J,1))
"RTN","ORWPT",14,0)
 Q
"RTN","ORWPT",15,0)
SCDIS(LST,DFN) ; Return service connected % and rated disabilities
"RTN","ORWPT",16,0)
 N VAEL,VAERR,I,ILST,DIS,SC,X
"RTN","ORWPT",17,0)
 D ELIG^VADPT
"RTN","ORWPT",18,0)
 S LST(1)="Service Connected: "_$S(+VAEL(3):$P(VAEL(3),U,2)_"%",1:"NO")
"RTN","ORWPT",19,0)
 I 'VAEL(4),'$P($G(^DG(391,+VAEL(6),0)),U,2) S LST(2)="NOT A VETERAN." Q
"RTN","ORWPT",20,0)
 S I=0,ILST=1 F  S I=$O(^DPT(DFN,.372,I)) Q:'I  S X=^(I,0) D
"RTN","ORWPT",21,0)
 . S DIS=$P($G(^DIC(31,+X,0)),U) Q:DIS=""
"RTN","ORWPT",22,0)
 . S SC=$S($P(X,U,3):"SC",$P(X,U,3)']"":"not specified",1:"NSC")
"RTN","ORWPT",23,0)
 . S ILST=ILST+1,LST(ILST)=DIS_" ("_$P(X,U,2)_"% "_SC_")"
"RTN","ORWPT",24,0)
 I ILST=1 S LST(2)="Rated Disabilities: NONE STATED"
"RTN","ORWPT",25,0)
 Q
"RTN","ORWPT",26,0)
SHOW ; temporary - show patient inquiry screen
"RTN","ORWPT",27,0)
 N I,Y,DIC S DIC=2,DIC(0)="AEMQ" D ^DIC Q:'Y
"RTN","ORWPT",28,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",29,0)
 D DGINQ^ORCXPND1(+Y)
"RTN","ORWPT",30,0)
 S I=0 F  S I=$O(^TMP("ORDATA",$J,1,I)) Q:'I  W !,^(I)
"RTN","ORWPT",31,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",32,0)
 Q
"RTN","ORWPT",33,0)
SELCHK(REC,DFN) ; Check for sensitive pt
"RTN","ORWPT",34,0)
 ; SENSITIVE
"RTN","ORWPT",35,0)
 S REC=$$EN1^ORQPT2(DFN)
"RTN","ORWPT",36,0)
 Q
"RTN","ORWPT",37,0)
DIEDON(VAL,DFN) ; Check for a date of death
"RTN","ORWPT",38,0)
 S VAL=+$G(^DPT(DFN,.35))
"RTN","ORWPT",39,0)
 Q
"RTN","ORWPT",40,0)
SELECT(REC,DFN) ; Selects patient & returns key information
"RTN","ORWPT",41,0)
 ;  1    2   3   4    5      6    7    8       9       10      11  12
"RTN","ORWPT",42,0)
 ; NAME^SEX^DOB^SSN^LOCIEN^LOCNM^RMBD^CWAD^SENSITIVE^ADMITTED^CONV^SC^
"RTN","ORWPT",43,0)
 ; 13  14  15  16
"RTN","ORWPT",44,0)
 ; SC%^ICN^AGE^TS
"RTN","ORWPT",45,0)
 ;
"RTN","ORWPT",46,0)
 ; for CCOW (RV - 2/27/03)  name="-1", location=error message
"RTN","ORWPT",47,0)
 I '$D(^DPT(DFN,0)) S REC="-1^^^^^Patient is unknown to CPRS." Q
"RTN","ORWPT",48,0)
 ;
"RTN","ORWPT",49,0)
 N X
"RTN","ORWPT",50,0)
 K ^TMP("ORWPCE",$J) ; delete PCE 'cache' when switching patients
"RTN","ORWPT",51,0)
 S X=^DPT(DFN,0),REC=$P(X,U,1,3)_U_$P(X,U,9)_U_U_$G(^(.1))_U_$G(^(.101))
"RTN","ORWPT",52,0)
 S X=$P(REC,U,6) I $L(X) S $P(REC,U,5)=+$G(^DIC(42,+$O(^DIC(42,"B",X,0)),44))
"RTN","ORWPT",53,0)
 S $P(REC,U,8)=$$CWAD^ORQPT2(DFN)_U_$$EN1^ORQPT2(DFN)
"RTN","ORWPT",54,0)
 ; I $P(REC,U,9) D EN2^ORQPT2(DFN)  ;update DG security log ; DG249
"RTN","ORWPT",55,0)
 S X=$G(^DPT(DFN,.105)) I X S $P(REC,U,10)=$P($G(^DGPM(X,0)),U)
"RTN","ORWPT",56,0)
 S:'$D(IOST) IOST="P-OTHER"
"RTN","ORWPT",57,0)
 S $P(REC,U,11)=$$OTF^OR3CONV(DFN,1)
"RTN","ORWPT",58,0)
 D ELIG^VADPT S $P(REC,U,12)=$G(VAEL(3)) ;two pieces: SC^SC%
"RTN","ORWPT",59,0)
 I $L($T(GETICN^MPIF001)) S X=+$$GETICN^MPIF001(DFN) S:X>0 $P(REC,U,14)=X
"RTN","ORWPT",60,0)
 S $P(REC,U,15)=$$AGE(DFN,$P(REC,U,3))
"RTN","ORWPT",61,0)
 S $P(REC,U,16)=+$G(^DPT(DFN,.103)) ; treating specialty
"RTN","ORWPT",62,0)
 K VAEL,VAERR ;VADPT call to kill?
"RTN","ORWPT",63,0)
 S ^DISV(DUZ,"^DPT(")=DFN
"RTN","ORWPT",64,0)
 Q
"RTN","ORWPT",65,0)
SHARE(VAL,IP,HWND,DFN) ; Set global to share DFN with other applications
"RTN","ORWPT",66,0)
 K ^TMP("ORWCHART",$J),^TMP("ORECALL",$J),^TMP("ORWORD",$J)
"RTN","ORWPT",67,0)
 K ^TMP("ORWDXMQ",$J)
"RTN","ORWPT",68,0)
 S ^TMP("ORWCHART",$J,IP,HWND)=DFN
"RTN","ORWPT",69,0)
 Q
"RTN","ORWPT",70,0)
BYWARD(LST,WARD) ; Return a list of patients in a ward
"RTN","ORWPT",71,0)
 N ILST,DFN
"RTN","ORWPT",72,0)
 I +$G(WARD)<1 S LST(1)="^No ward identified" Q
"RTN","ORWPT",73,0)
 S (ILST,DFN)=0
"RTN","ORWPT",74,0)
 S WARD=$P(^DIC(42,WARD,0),"^")   ;DBIA #36
"RTN","ORWPT",75,0)
 F  S DFN=$O(^DPT("CN",WARD,DFN)) Q:DFN'>0  D
"RTN","ORWPT",76,0)
 . S ILST=ILST+1,LST(ILST)=+DFN_U_$P(^DPT(+DFN,0),U)_U_$G(^DPT(+DFN,.101))
"RTN","ORWPT",77,0)
 I ILST<1 S LST(1)="^No patients found."
"RTN","ORWPT",78,0)
 Q
"RTN","ORWPT",79,0)
LAST5(LST,ID) ; Return a list of patients matching A9999 identifiers
"RTN","ORWPT",80,0)
 N I,IEN,XREF
"RTN","ORWPT",81,0)
 S (I,IEN)=0,XREF=$S($L(ID)=5:"BS5",1:"BS")
"RTN","ORWPT",82,0)
 F  S IEN=$O(^DPT(XREF,ID,IEN)) Q:'IEN  D
"RTN","ORWPT",83,0)
 . S I=I+1,LST(I)=IEN_U_$P(^DPT(IEN,0),U)_U_$$DOB^DPTLK1(IEN,2)_U_$$SSN^DPTLK1(IEN)  ; DG249
"RTN","ORWPT",84,0)
 Q
"RTN","ORWPT",85,0)
 ;
"RTN","ORWPT",86,0)
LAST5RPL(LST,ID) ; ; Return list matching A9999 id's, but from RPL only.
"RTN","ORWPT",87,0)
 N ORRPL,ORCNT,ORPT,ORPIEN
"RTN","ORWPT",88,0)
 ; IA ____ allows read access to NEW PERSON file node 101:
"RTN","ORWPT",89,0)
 S ORRPL=$G(^VA(200,DUZ,101))
"RTN","ORWPT",90,0)
 S ORRPL=$P(ORRPL,U,2)
"RTN","ORWPT",91,0)
 I (('ORRPL)!(ORRPL="")) S LST(0)="" Q
"RTN","ORWPT",92,0)
 ;
"RTN","ORWPT",93,0)
 S (ORCNT,ORPT)=0
"RTN","ORWPT",94,0)
 F  S ORPT=$O(^OR(100.21,ORRPL,10,ORPT)) Q:'ORPT  D
"RTN","ORWPT",95,0)
 .S ORPIEN=+$G(^OR(100.21,ORRPL,10,ORPT,0))
"RTN","ORWPT",96,0)
 .I ((ORPIEN<0)!(ORPIEN="")) Q
"RTN","ORWPT",97,0)
 .S ORCNT=ORCNT+1
"RTN","ORWPT",98,0)
 .S LST(ORCNT)=ORPIEN_U_$P(^DPT(ORPIEN,0),U)_U_$$DOB^DPTLK1(ORPIEN,2)_U_$$SSN^DPTLK1(ORPIEN) ; DG249.
"RTN","ORWPT",99,0)
 ;
"RTN","ORWPT",100,0)
 Q
"RTN","ORWPT",101,0)
 ;
"RTN","ORWPT",102,0)
FULLSSN(LST,ID) ; Return a list of patients matching full SSN entered
"RTN","ORWPT",103,0)
 N I,IEN
"RTN","ORWPT",104,0)
 S (I,IEN)=0
"RTN","ORWPT",105,0)
 F  S IEN=$O(^DPT("SSN",ID,IEN)) Q:'IEN  D
"RTN","ORWPT",106,0)
 . S I=I+1,LST(I)=IEN_U_$P(^DPT(IEN,0),U)_U_$$DOB^DPTLK1(IEN,2)_U_$$SSN^DPTLK1(IEN)  ; DG249
"RTN","ORWPT",107,0)
 Q
"RTN","ORWPT",108,0)
 ;
"RTN","ORWPT",109,0)
FSSNRPL(LST,ID) ; Return list matching Full SSN, but from RPL only.
"RTN","ORWPT",110,0)
 N ORRPL,ORCNT,ORPT,ORLPT,ORPIEN
"RTN","ORWPT",111,0)
 ; IA ____ allows read access to NEW PERSON file node 101:
"RTN","ORWPT",112,0)
 S ORRPL=$G(^VA(200,DUZ,101))
"RTN","ORWPT",113,0)
 S ORRPL=$P(ORRPL,U,2)
"RTN","ORWPT",114,0)
 I (('ORRPL)!(ORRPL="")) S LST(0)="" Q
"RTN","ORWPT",115,0)
 ;
"RTN","ORWPT",116,0)
 S (ORCNT,ORPT)=0
"RTN","ORWPT",117,0)
 F  S ORPT=$O(^DPT("SSN",ID,ORPT)) Q:'ORPT  D
"RTN","ORWPT",118,0)
 .S ORLPT=0
"RTN","ORWPT",119,0)
 .F  S ORLPT=$O(^OR(100.21,ORRPL,10,ORLPT)) Q:'ORLPT  D
"RTN","ORWPT",120,0)
 ..S ORPIEN=+$G(^OR(100.21,ORRPL,10,ORLPT,0))
"RTN","ORWPT",121,0)
 ..I ((ORPIEN<0)!(ORPIEN="")) Q
"RTN","ORWPT",122,0)
 ..I (ORPIEN'=ORPT) Q
"RTN","ORWPT",123,0)
 ..S ORCNT=ORCNT+1
"RTN","ORWPT",124,0)
 ..S LST(ORCNT)=ORPIEN_U_$P(^DPT(ORPIEN,0),U)_U_$$DOB^DPTLK1(ORPIEN,2)_U_$$SSN^DPTLK1(ORPIEN) ; DG249.
"RTN","ORWPT",125,0)
 ;
"RTN","ORWPT",126,0)
 Q
"RTN","ORWPT",127,0)
 ;
"RTN","ORWPT",128,0)
TOP(LST) ; Return top for all patients list (last selected for now)
"RTN","ORWPT",129,0)
 N IEN
"RTN","ORWPT",130,0)
 S IEN=$G(^DISV(DUZ,"^DPT("))
"RTN","ORWPT",131,0)
 I IEN S LST(1)=IEN_U_$P($G(^DPT(IEN,0)),U)
"RTN","ORWPT",132,0)
 Q
"RTN","ORWPT",133,0)
ENCTITL(REC,DFN,LOC,PROV) ; Return external values for encounter
"RTN","ORWPT",134,0)
 ; LOCNAME^LOCABBR^ROOMBED^PROVNAME
"RTN","ORWPT",135,0)
 S $P(REC,U,1)=$P($G(^SC(+LOC,0)),U,1,2)
"RTN","ORWPT",136,0)
 S $P(REC,U,3)=$P($G(^DPT(DFN,.101)),U)
"RTN","ORWPT",137,0)
 S $P(REC,U,4)=$P($G(^VA(200,+PROV,0)),U)
"RTN","ORWPT",138,0)
 Q
"RTN","ORWPT",139,0)
LISTALL(Y,FROM,DIR) ; Return a bolus of patient names.  From is either Name or IEN^Name.
"RTN","ORWPT",140,0)
 N I,IEN,CNT,FROMIEN S CNT=44,I=0,FROMIEN=0
"RTN","ORWPT",141,0)
 I $P(FROM,U,2)'="" S FROMIEN=$P(FROM,U,1),FROM=$O(^DPT("B",$P(FROM,U,2)),-DIR)
"RTN","ORWPT",142,0)
 F  S FROM=$O(^DPT("B",FROM),DIR) Q:FROM=""  D  Q:I=CNT
"RTN","ORWPT",143,0)
 . S IEN=FROMIEN,FROMIEN=0 F  S IEN=$O(^DPT("B",FROM,IEN)) Q:'IEN  D  Q:I=CNT
"RTN","ORWPT",144,0)
 . . ; S X1=$G(^DPT(IEN,.1))_" "_$G(^DPT(IEN,.101))
"RTN","ORWPT",145,0)
 . . S I=I+1 S Y(I)=IEN_"^"_FROM ;_"^"_X ; _"^"_X1  ;"   ("_X_")"
"RTN","ORWPT",146,0)
 Q
"RTN","ORWPT",147,0)
APPTLST(LST,DFN) ; return a list of appointments
"RTN","ORWPT",148,0)
 ; APPTTIME^LOCIEN^LOCNAME^EXTSTATUS
"RTN","ORWPT",149,0)
 N VASD
"RTN","ORWPT",150,0)
 S VASD("F")=$$HTFM^XLFDT($H-30,1)
"RTN","ORWPT",151,0)
 S VASD("T")=$$HTFM^XLFDT($H+1,1)_".2359"
"RTN","ORWPT",152,0)
 S VASD("W")="123456789"
"RTN","ORWPT",153,0)
 D SDA^VADPT
"RTN","ORWPT",154,0)
 S I=0 F  S I=$O(^UTILITY("VASD",$J,I)) Q:'I  D
"RTN","ORWPT",155,0)
 . S LST(I)=$P(^UTILITY("VASD",$J,I,"I"),U,1,2)_U_$P(^("E"),U,2,3)
"RTN","ORWPT",156,0)
 K ^UTILITY("VASD",$J)
"RTN","ORWPT",157,0)
 Q
"RTN","ORWPT",158,0)
ADMITLST(LST,DFN) ; return a list of admissions
"RTN","ORWPT",159,0)
 ; MOVETIME^LOCIEN^LOCNAME^TYPE
"RTN","ORWPT",160,0)
 N TIM,MOV,X0,Y,MTIM,XTYP,XLOC,HLOC,ILST S ILST=0
"RTN","ORWPT",161,0)
 S TIM="" F  S TIM=$O(^DGPM("ATID1",DFN,TIM)) Q:TIM'>0  D
"RTN","ORWPT",162,0)
 . S MOV=0  F  S MOV=$O(^DGPM("ATID1",DFN,TIM,MOV)) Q:MOV'>0  D
"RTN","ORWPT",163,0)
 . . N VSTR,TIUDA
"RTN","ORWPT",164,0)
 . . S X0=$G(^DGPM(MOV,0)) I X0']"" Q
"RTN","ORWPT",165,0)
 . . S MTIM=$P(X0,U)
"RTN","ORWPT",166,0)
 . . S XTYP=$P($G(^DG(405.1,+$P(X0,U,4),0)),U,1)
"RTN","ORWPT",167,0)
 . . S XLOC=$P($G(^DIC(42,+$P(X0,U,6),0)),U,1),HLOC=+$G(^(44))
"RTN","ORWPT",168,0)
 . . S VSTR=HLOC_";"_MTIM_";H",TIUDA=$$HASDS^TIULX(DFN,VSTR)
"RTN","ORWPT",169,0)
 . . S ILST=ILST+1,LST(ILST)=MTIM_U_HLOC_U_XLOC_U_XTYP_U_MOV_U_TIUDA
"RTN","ORWPT",170,0)
 Q
"RTN","ORWPT",171,0)
CLINRNG(LST) ; return date ranges for clinic appointments
"RTN","ORWPT",172,0)
 S LST(1)="T;T^Today"
"RTN","ORWPT",173,0)
 S LST(2)="T+1;T+1^Tomorrow"
"RTN","ORWPT",174,0)
 S LST(3)="T-1;T-1^Yesterday"
"RTN","ORWPT",175,0)
 S LST(4)="T-7;T^Past Week"
"RTN","ORWPT",176,0)
 S LST(5)="T-31;T^Past Month"
"RTN","ORWPT",177,0)
 S LST(6)="S^Specify Date Range..."
"RTN","ORWPT",178,0)
 Q
"RTN","ORWPT",179,0)
 ;
"RTN","ORWPT",180,0)
 N %,%H,X,SUNDAY,START
"RTN","ORWPT",181,0)
 S LST(1)=DT_";"_DT_"^Today",X=$$HTFM^XLFDT($H+1,1)
"RTN","ORWPT",182,0)
 S LST(2)=X_";"_X_"^Tomorrow"
"RTN","ORWPT",183,0)
 S X=+$H F  Q:X#7=3  S X=X-1                        ; $H#7=3 is Sunday
"RTN","ORWPT",184,0)
 S LST(3)=$$HTFM^XLFDT(X)_";"_$$HTFM^XLFDT(X+6)_"^This Week"
"RTN","ORWPT",185,0)
 S LST(4)=$$HTFM^XLFDT(X+7)_";"_$$HTFM^XLFDT(X+13)_"^Next Week"
"RTN","ORWPT",186,0)
 S LST(5)=$E(DT,1,5)_"01;"_$E(DT,1,5)_"31^This Month"
"RTN","ORWPT",187,0)
 S X=$E(DT,4,5)+1 S:X=13 X=1 S X=$E(DT,1,3)_$TR($J(X,2)," ",0)
"RTN","ORWPT",188,0)
 S LST(6)=X_"01;"_X_"31^Next Month"
"RTN","ORWPT",189,0)
 S LST(7)="^Specify Dates"
"RTN","ORWPT",190,0)
 Q
"RTN","ORWPT",191,0)
DFLTSRC(VAL) ; return default patient list source (T, W, C, P, S)
"RTN","ORWPT",192,0)
 N SRV S SRV=+$G(^VA(200,DUZ,5))
"RTN","ORWPT",193,0)
 S VAL=$$GET^XPAR("ALL^SRV.`"_SRV,"ORLP DEFAULT LIST SOURCE")
"RTN","ORWPT",194,0)
 Q
"RTN","ORWPT",195,0)
SAVDFLT(OK,X) ; save new default patient list settings (X=type^ien^sdt;edt)
"RTN","ORWPT",196,0)
 G SAVDFLT^ORWPT1
"RTN","ORWPT",197,0)
 ;
"RTN","ORWPT",198,0)
DISCHRG(Y,DFN,ADMITDT) ; Get discharge movement information
"RTN","ORWPT",199,0)
 N VAIP
"RTN","ORWPT",200,0)
 I +$G(ADMITDT)=0 S Y=DT Q
"RTN","ORWPT",201,0)
 S VAIP("D")=ADMITDT D 52^VADPT
"RTN","ORWPT",202,0)
 I +VAIP(17)=0 S Y=DT Q
"RTN","ORWPT",203,0)
 S Y=+VAIP(17,1)
"RTN","ORWPT",204,0)
 Q
"RTN","ORWPT",205,0)
CWAD(Y,DFN) ;  returns CWAD flags for a patient
"RTN","ORWPT",206,0)
 S Y=$$CWAD^ORQPT2(DFN)
"RTN","ORWPT",207,0)
 Q
"RTN","ORWPT",208,0)
LEGACY(ORLST,DFN) ; return message if data on the legacy system
"RTN","ORWPT",209,0)
 ; ORLST(0)=1 if data,  ORLST(n)=display message if data
"RTN","ORWPT",210,0)
 S ORLST(0)=0
"RTN","ORWPT",211,0)
 I $L($T(HXDATA^A7RDPAGU)) D
"RTN","ORWPT",212,0)
 . D HXDATA^A7RDPAGU(.ORLST,DFN)
"RTN","ORWPT",213,0)
 . I $O(ORLST(0)) S ORLST(0)=1
"RTN","ORWPT",214,0)
 Q
"RTN","ORWPT",215,0)
INPLOC(REC,DFN) ; Return a patient's current location
"RTN","ORWPT",216,0)
 N X
"RTN","ORWPT",217,0)
 S X=$G(^DPT(DFN,.102)),REC=0
"RTN","ORWPT",218,0)
 I X S X=$P($G(^DGPM(X,0)),U,6)
"RTN","ORWPT",219,0)
 I X S REC=+$G(^DIC(42,X,44))
"RTN","ORWPT",220,0)
 I X S $P(REC,U,2)=$P($G(^DIC(42,X,0)),U,1)
"RTN","ORWPT",221,0)
 I X S X=$P($G(^DIC(42,X,0)),U,3)
"RTN","ORWPT",222,0)
 S $P(REC,U,3)=X
"RTN","ORWPT",223,0)
 Q
"RTN","ORWPT",224,0)
AGE(DFN,BEG) ; returns age based on date of birth and date of death (or DT)
"RTN","ORWPT",225,0)
 N END,X
"RTN","ORWPT",226,0)
 S END=+$G(^DPT(DFN,.35)),END=$S(END:END,1:DT)
"RTN","ORWPT",227,0)
 S X=$E(END,1,3)-$E(BEG,1,3)-($E(END,4,7)<$E(BEG,4,7))
"RTN","ORWPT",228,0)
 Q X
"RTN","ORWRA")
0^21^B9699553
"RTN","ORWRA",1,0)
ORWRA ; ALB/MJK/REV/JDL -Imaging Calls ;8/6/02  1:30
"RTN","ORWRA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,135,132,148,154,141,149**;Dec 17, 1997
"RTN","ORWRA",3,0)
EXAMS(ROOT,DFN) ; Return imaging exams
"RTN","ORWRA",4,0)
 ; RPC: ORWRA IMAGING EXAMS
"RTN","ORWRA",5,0)
 ;  See RPC definition for details on input and output parameters
"RTN","ORWRA",6,0)
 D GET(0)
"RTN","ORWRA",7,0)
 Q
"RTN","ORWRA",8,0)
EXAMS1(ROOT,DFN) ; Return imaging exams
"RTN","ORWRA",9,0)
 ; RPC: ORWRA IMAGING EXAMS1
"RTN","ORWRA",10,0)
 ;  See RPC definition for details on input and output parameters
"RTN","ORWRA",11,0)
 D GET(1)
"RTN","ORWRA",12,0)
 Q
"RTN","ORWRA",13,0)
GET(GSITE) ;Get the data
"RTN","ORWRA",14,0)
 N I,ID,RADATA,STRING,SITE,ORCX
"RTN","ORWRA",15,0)
 N BEG,END,MAX,P1,P2
"RTN","ORWRA",16,0)
 S RADATA=$NA(^TMP($J,"RAE1",DFN))
"RTN","ORWRA",17,0)
 S ROOT=$NA(^TMP($J,"ORAEXAMS"))
"RTN","ORWRA",18,0)
 S ORCX=1  ;show cancelled reports
"RTN","ORWRA",19,0)
 K @RADATA,@ROOT
"RTN","ORWRA",20,0)
 ;
"RTN","ORWRA",21,0)
 ; -- set date range
"RTN","ORWRA",22,0)
 D GETDEFG(.STRING)
"RTN","ORWRA",23,0)
 S BEG=$P(STRING,U)
"RTN","ORWRA",24,0)
 S END=$P(STRING,"^",2)
"RTN","ORWRA",25,0)
 S MAX=$P(STRING,"^",3)
"RTN","ORWRA",26,0)
 I GSITE="1" S MAX=MAX_"P"
"RTN","ORWRA",27,0)
 D EN1^RAO7PC1(DFN,BEG,END,MAX,ORCX)
"RTN","ORWRA",28,0)
 ;
"RTN","ORWRA",29,0)
 ; -- reformat data array for rpc
"RTN","ORWRA",30,0)
 S I=0,ID="",SITE=""
"RTN","ORWRA",31,0)
 I $G(GSITE) S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",2)_";"_$P(SITE,"^",3)_U
"RTN","ORWRA",32,0)
 F  S ID=$O(@RADATA@(ID)) Q:ID=""  D
"RTN","ORWRA",33,0)
 . S P1=$P($G(^TMP($J,"RAE1",DFN,ID,"CPRS")),U) ;The member of set indicator from Radiology 
"RTN","ORWRA",34,0)
 . S P2=$P($G(^TMP($J,"RAE1",DFN,ID,"CPRS")),U,2) ;The parent procedure name from Radiology  
"RTN","ORWRA",35,0)
 . S I=I+1
"RTN","ORWRA",36,0)
 . S @ROOT@(I)=SITE_ID_U_(9999999.9999-ID)_U_@RADATA@(ID)_U_P1_U_P2
"RTN","ORWRA",37,0)
 K @RADATA
"RTN","ORWRA",38,0)
 Q
"RTN","ORWRA",39,0)
 ;
"RTN","ORWRA",40,0)
GETDEFG(Y) ; -- get default context settings for GUI imaging reports
"RTN","ORWRA",41,0)
 N BEG,END,MAX
"RTN","ORWRA",42,0)
 ;if called from CAPRI, show all reports
"RTN","ORWRA",43,0)
 D OP^XQCHK
"RTN","ORWRA",44,0)
 I $P($G(XQOPT),"^",1)="DVBA CAPRI GUI" D
"RTN","ORWRA",45,0)
 . S BEG=$$DT^ORCHTAB1("T-36500")
"RTN","ORWRA",46,0)
 . S END=$$DT^ORCHTAB1("T")
"RTN","ORWRA",47,0)
 . S MAX="9999"
"RTN","ORWRA",48,0)
 . S Y=BEG_"^"_END_"^"_MAX
"RTN","ORWRA",49,0)
 ; if not CAPRI, use CPRS defaults
"RTN","ORWRA",50,0)
 E  D GETIMG^ORWTPD(.Y,"")
"RTN","ORWRA",51,0)
 Q
"RTN","ORWRA",52,0)
GETDEF(Y) ; -- get default context settings for LM imaging reports
"RTN","ORWRA",53,0)
 N BEG,CONTEXT,END,MAX
"RTN","ORWRA",54,0)
 S CONTEXT=$$GET^XPAR("ALL","ORCH CONTEXT REPORTS")
"RTN","ORWRA",55,0)
 S BEG=$$DT^ORCHTAB1($P(CONTEXT,";"))
"RTN","ORWRA",56,0)
 S END=$$DT^ORCHTAB1($P(CONTEXT,";",2))
"RTN","ORWRA",57,0)
 S MAX=$P(CONTEXT,";",5)
"RTN","ORWRA",58,0)
 D OP^XQCHK
"RTN","ORWRA",59,0)
 I $P($G(XQOPT),"^",1)="DVBA CAPRI GUI" D
"RTN","ORWRA",60,0)
 .S BEG=$$DT^ORCHTAB1("T-36500")
"RTN","ORWRA",61,0)
 .S END=$$DT^ORCHTAB1("T")
"RTN","ORWRA",62,0)
 .S MAX="9999"
"RTN","ORWRA",63,0)
 S Y=BEG_"^"_END_"^"_MAX
"RTN","ORWRA",64,0)
 Q
"RTN","ORWRA",65,0)
 ;
"RTN","ORWRA",66,0)
RPT1(ROOT,DFN,ORID,ALPHA,OMEGA,DTRANGE,REMOTE,ORMAX,ORFHIE) ; -- return imaging report
"RTN","ORWRA",67,0)
 D RPT(.ROOT,.DFN,.ORID,.ALPHA,.OMEGA,.DTRANGE,.REMOTE,.ORMAX,.ORFHIE)
"RTN","ORWRA",68,0)
 Q
"RTN","ORWRA",69,0)
RPT(ROOT,DFN,ORID,ALPHA,OMEGA,DTRANGE,REMOTE,ORMAX,ORFHIE) ; -- return imaging report
"RTN","ORWRA",70,0)
 ;  RPC: ORWRA REPORT TEXT
"RTN","ORWRA",71,0)
 ;  See RPC definition for details on input and output parameters
"RTN","ORWRA",72,0)
 ; -- init locals and globals
"RTN","ORWRA",73,0)
 N ID,LCNT,ORVP,EXAMDATE,CASENMBR
"RTN","ORWRA",74,0)
 S RADATA=$NA(^TMP($J,"RAE3"))
"RTN","ORWRA",75,0)
 S ROOT=$NA(^TMP("ORXPND",$J))
"RTN","ORWRA",76,0)
 K @RADATA,@ROOT
"RTN","ORWRA",77,0)
 ; 
"RTN","ORWRA",78,0)
 ; -- set up exam id and call to get report text
"RTN","ORWRA",79,0)
 S ID=$TR(ORID,"-",U)
"RTN","ORWRA",80,0)
 ;
"RTN","ORWRA",81,0)
 ; -- set up counter and vp local for dfn for formating call
"RTN","ORWRA",82,0)
 S LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWRA",83,0)
 D XRAYS^ORCXPND1
"RTN","ORWRA",84,0)
 K @RADATA
"RTN","ORWRA",85,0)
 Q
"RTN","ORWRA",86,0)
 ;
"RTN","ORWRA",87,0)
TEST ; -- test to get exam list
"RTN","ORWRA",88,0)
 N I,ROOT,DFN
"RTN","ORWRA",89,0)
 S DFN=16
"RTN","ORWRA",90,0)
 D EXAMS1(.ROOT,DFN)
"RTN","ORWRA",91,0)
 W !,"Root: ",ROOT
"RTN","ORWRA",92,0)
 S I=0 F  S I=$O(@ROOT@(I)) Q:'I  W !,@ROOT@(I)
"RTN","ORWRA",93,0)
 Q
"RTN","ORWRA",94,0)
 ;
"RTN","ORWRA",95,0)
TEST1 ; -- test to print reprt for first 3 exams
"RTN","ORWRA",96,0)
 N ORI,ROOT,ROOT1,L,X,DFN
"RTN","ORWRA",97,0)
 S DFN=16
"RTN","ORWRA",98,0)
 D EXAMS1(.ROOT,DFN)
"RTN","ORWRA",99,0)
 S ORI=0 F  S ORI=$O(@ROOT@(ORI)) Q:'ORI  D  Q:ORI=3
"RTN","ORWRA",100,0)
 . S X=@ROOT@(ORI)
"RTN","ORWRA",101,0)
 . D RPT1(.ROOT1,DFN,$P(X,U))
"RTN","ORWRA",102,0)
 . S L=0 F  S L=$O(@ROOT1@(L)) Q:'L  W !,@ROOT1@(L,0)
"RTN","ORWRA",103,0)
 Q
"RTN","ORWTPN")
0^19^B40214765
"RTN","ORWTPN",1,0)
ORWTPN ; SLC/STAFF Personal Preference - Notes ;2/21/01  08:11 [12/25/02 5:52am]
"RTN","ORWTPN",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,149**;Oct 24, 2000
"RTN","ORWTPN",3,0)
 ;
"RTN","ORWTPN",4,0)
GETSUB(VALUE,USER) ; from ORWTPP
"RTN","ORWTPN",5,0)
 ; get Ask for Subject on notes for user
"RTN","ORWTPN",6,0)
 N NODE
"RTN","ORWTPN",7,0)
 S NODE=+$O(^TIU(8926,"B",USER,0))
"RTN","ORWTPN",8,0)
 S VALUE=+$P($G(^TIU(8926,NODE,0)),U,8)
"RTN","ORWTPN",9,0)
 Q
"RTN","ORWTPN",10,0)
 ;
"RTN","ORWTPN",11,0)
SETSUB(OK,VALUE,USER) ; from ORWTPP
"RTN","ORWTPN",12,0)
 ; set Ask for Subject on note for user
"RTN","ORWTPN",13,0)
 N DA,DIE,DIK,DR,NODE,NUM
"RTN","ORWTPN",14,0)
 S OK=1
"RTN","ORWTPN",15,0)
 S VALUE=+$G(VALUE),VALUE=$S(VALUE=1:1,VALUE=0:0,1:"")
"RTN","ORWTPN",16,0)
 I VALUE="" S OK=0 Q
"RTN","ORWTPN",17,0)
 S NODE=+$O(^TIU(8926,"B",USER,0))
"RTN","ORWTPN",18,0)
 I 'NODE D  Q  ; make new entry if user does not have TIU preferences
"RTN","ORWTPN",19,0)
 .I 'VALUE Q  ; no need to set since default for no user preference is 0
"RTN","ORWTPN",20,0)
 .L +^TIU(8926,0):5 I '$T S OK=0 Q
"RTN","ORWTPN",21,0)
 .S NUM=1+$P(^TIU(8926,0),U,3)
"RTN","ORWTPN",22,0)
 .F  Q:'$D(^TIU(8926,NUM,0))  S NUM=NUM+1
"RTN","ORWTPN",23,0)
 .S $P(^(0),U,4)=1+$P(^TIU(8926,0),U,4),$P(^(0),U,3)=NUM
"RTN","ORWTPN",24,0)
 .S ^TIU(8926,NUM,0)=USER_"^^^^^^^1"
"RTN","ORWTPN",25,0)
 .L -^TIU(8926,0)
"RTN","ORWTPN",26,0)
 .S DA=NUM,DIK="^TIU(8926,"
"RTN","ORWTPN",27,0)
 .D IX1^DIK
"RTN","ORWTPN",28,0)
 I USER'=+$G(^TIU(8926,NODE,0)) Q
"RTN","ORWTPN",29,0)
 S DA=NODE,DIE="^TIU(8926,",DR=".08///"_VALUE
"RTN","ORWTPN",30,0)
 D ^DIE
"RTN","ORWTPN",31,0)
 Q
"RTN","ORWTPN",32,0)
 ;
"RTN","ORWTPN",33,0)
GETCOS(VALUES,USER,FROM,DIR,VISITORS) ; from ORWTPP
"RTN","ORWTPN",34,0)
 ; get cosigners for a user
"RTN","ORWTPN",35,0)
 N CNT,IEN,NODE,NUM,ORIEN,ORTTL,ORSRV,ORDIV,ORDD,ORGOOD,ORCNT,OR1DIV,ORMULTI,ORMRK K VALUES
"RTN","ORWTPN",36,0)
 S ORMULTI=$$ALL^VASITE ; Do once at beginning of call.
"RTN","ORWTPN",37,0)
 S CNT=11,NUM=0
"RTN","ORWTPN",38,0)
 F  Q:NUM>CNT  S FROM=$O(^VA(200,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORWTPN",39,0)
 .S IEN=0 F  S IEN=$O(^VA(200,"B",FROM,IEN)) Q:IEN<1  D
"RTN","ORWTPN",40,0)
 ..I +$G(VISITORS)=0,$D(^VA(200,"BB","VISITOR",IEN)) Q
"RTN","ORWTPN",41,0)
 ..I '$$SCRDFCS^TIULA3(USER,IEN) Q
"RTN","ORWTPN",42,0)
 ..S NODE=$P($G(^VA(200,IEN,0)),U)
"RTN","ORWTPN",43,0)
 ..I '$L(NODE) Q
"RTN","ORWTPN",44,0)
 ..S ORIEN=IEN_"," ; Add comma to IEN for DIQ calls.
"RTN","ORWTPN",45,0)
 ..S ORTTL=$$GET1^DIQ(200,ORIEN,8) ; Get Title.
"RTN","ORWTPN",46,0)
 ..S ORSRV=$$GET1^DIQ(200,ORIEN,29) ; Get Service/Section.
"RTN","ORWTPN",47,0)
 ..S ORDIV="" I ORMULTI D
"RTN","ORWTPN",48,0)
 ...K ^TMP("DILIST",$J) ; Cleanup.
"RTN","ORWTPN",49,0)
 ...D LIST^DIC(200.02,","_IEN_",",".01;1","Q",,,,,,,)
"RTN","ORWTPN",50,0)
 ...S OR1DIV="",(ORDD,ORGOOD,ORCNT)=0
"RTN","ORWTPN",51,0)
 ...F  S ORDD=$O(^TMP("DILIST",$J,"ID",ORDD)) Q:+ORDD=0!'($L(ORDD))  D  Q:ORGOOD
"RTN","ORWTPN",52,0)
 ....S ORCNT=ORCNT+1 ; Increment counter.
"RTN","ORWTPN",53,0)
 ....I ORCNT=1 D
"RTN","ORWTPN",54,0)
 .....I $D(^TMP("DILIST",$J,"ID",ORDD,01)) D 
"RTN","ORWTPN",55,0)
 ......S OR1DIV=$G(^TMP("DILIST",$J,"ID",ORDD,.01))
"RTN","ORWTPN",56,0)
 ....I $G(^TMP("DILIST",$J,"ID",ORDD,1))="Yes" S ORDIV=$G(^TMP("DILIST",$J,"ID",ORDD,.01)),ORGOOD=1  Q   ; Division text.
"RTN","ORWTPN",57,0)
 ...K ^TMP("DILIST",$J)             ; Cleanup.
"RTN","ORWTPN",58,0)
 ...I ((ORCNT=1)&(ORDIV="")) D
"RTN","ORWTPN",59,0)
 ....I OR1DIV'="" S ORDIV=OR1DIV    ; Only one? - use it. 
"RTN","ORWTPN",60,0)
 ..S NUM=NUM+1,ORMRK="",VALUES(NUM)=IEN_U_NODE  D
"RTN","ORWTPN",61,0)
 ...; Check for no data:
"RTN","ORWTPN",62,0)
 ...I (ORTTL="")&(ORSRV="")&(ORDIV="")  Q
"RTN","ORWTPN",63,0)
 ...S VALUES(NUM)=VALUES(NUM)_U_"- "
"RTN","ORWTPN",64,0)
 ...; Add Title, Service, Division as appropriate:
"RTN","ORWTPN",65,0)
 ...I (ORTTL'="") S VALUES(NUM)=VALUES(NUM)_", "_ORTTL,ORMK=", "
"RTN","ORWTPN",66,0)
 ...I (ORSRV'="") S VALUES(NUM)=VALUES(NUM)_ORMRK_ORSRV,ORMK=", "
"RTN","ORWTPN",67,0)
 ..I ORMULTI D
"RTN","ORWTPN",68,0)
 ...I (ORDIV'="") S VALUES(NUM)=VALUES(NUM)_ORMRK_ORDIV
"RTN","ORWTPN",69,0)
 Q
"RTN","ORWTPN",70,0)
 ;
"RTN","ORWTPN",71,0)
GETDCOS(VALUE,USER) ; from ORWTPP
"RTN","ORWTPN",72,0)
 ; get default cosigner for user
"RTN","ORWTPN",73,0)
 N IEN,NAME,NODE
"RTN","ORWTPN",74,0)
 S NODE=+$O(^TIU(8926,"B",USER,0))
"RTN","ORWTPN",75,0)
 S IEN=+$P($G(^TIU(8926,NODE,0)),U,9)
"RTN","ORWTPN",76,0)
 S NAME=$P($G(^VA(200,IEN,0)),U)
"RTN","ORWTPN",77,0)
 S VALUE=IEN_U_NAME
"RTN","ORWTPN",78,0)
 Q
"RTN","ORWTPN",79,0)
 ;
"RTN","ORWTPN",80,0)
SETDCOS(OK,VALUE,USER) ; from ORWTPP
"RTN","ORWTPN",81,0)
 ; set default cosigner for user
"RTN","ORWTPN",82,0)
 N DA,DIE,DIK,DR,NODE,NUM
"RTN","ORWTPN",83,0)
 S OK=1
"RTN","ORWTPN",84,0)
 S VALUE=+$G(VALUE)
"RTN","ORWTPN",85,0)
 I 'VALUE S VALUE="@"
"RTN","ORWTPN",86,0)
 S NODE=+$O(^TIU(8926,"B",USER,0))
"RTN","ORWTPN",87,0)
 I 'NODE D  Q  ; make new entry if user does not have TIU preferences
"RTN","ORWTPN",88,0)
 .I 'VALUE Q
"RTN","ORWTPN",89,0)
 .I '$$SCRDFCS^TIULA3(USER,VALUE) Q
"RTN","ORWTPN",90,0)
 .L +^TIU(8926,0):5 I '$T S OK=0 Q
"RTN","ORWTPN",91,0)
 .S NUM=1+$P(^TIU(8926,0),U,3)
"RTN","ORWTPN",92,0)
 .F  Q:'$D(^TIU(8926,NUM,0))  S NUM=NUM+1
"RTN","ORWTPN",93,0)
 .S $P(^(0),U,4)=1+$P(^TIU(8926,0),U,4),$P(^(0),U,3)=NUM
"RTN","ORWTPN",94,0)
 .S ^TIU(8926,NUM,0)=USER_"^^^^^^^^"_VALUE
"RTN","ORWTPN",95,0)
 .L -^TIU(8926,0)
"RTN","ORWTPN",96,0)
 .S DA=NUM,DIK="^TIU(8926,"
"RTN","ORWTPN",97,0)
 .D IX1^DIK
"RTN","ORWTPN",98,0)
 I USER'=+$G(^TIU(8926,NODE,0)) Q
"RTN","ORWTPN",99,0)
 S DA=NODE,DIE="^TIU(8926,",DR=".09///"_$S(VALUE:"`"_VALUE,1:"@")
"RTN","ORWTPN",100,0)
 D ^DIE
"RTN","ORWTPN",101,0)
 Q
"RTN","ORWTPN",102,0)
 ;
"RTN","ORWTPN",103,0)
GETCLASS(VALUES) ; RPC
"RTN","ORWTPN",104,0)
 ; get available document classes
"RTN","ORWTPN",105,0)
 N CNT,NODE,NUM K VALUES
"RTN","ORWTPN",106,0)
 S CNT=0
"RTN","ORWTPN",107,0)
 S NUM=0 F  S NUM=$O(^TIU(8925.1,"AT","CL",NUM)) Q:NUM<1  D
"RTN","ORWTPN",108,0)
 .I '$$CLASPICK^TIULA4(38,NUM,"CL") Q
"RTN","ORWTPN",109,0)
 .S NODE=$G(^TIU(8925.1,NUM,0))
"RTN","ORWTPN",110,0)
 .I '$L(NODE) Q
"RTN","ORWTPN",111,0)
 .S CNT=CNT+1
"RTN","ORWTPN",112,0)
 .S VALUES(CNT)=NUM_U_NODE
"RTN","ORWTPN",113,0)
 Q
"RTN","ORWTPN",114,0)
 ;
"RTN","ORWTPN",115,0)
GETTC(VALUES,CLASS,FROM,DIR) ; RPC
"RTN","ORWTPN",116,0)
 ; get titles for a class
"RTN","ORWTPN",117,0)
 N CNT,IEN,NODE,NUM K VALUES
"RTN","ORWTPN",118,0)
 S CNT=44,NUM=0
"RTN","ORWTPN",119,0)
 F  Q:NUM>CNT  S FROM=$O(^TIU(8925.1,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORWTPN",120,0)
 .S IEN=0 F  S IEN=$O(^TIU(8925.1,"B",FROM,IEN)) Q:IEN<1  D
"RTN","ORWTPN",121,0)
 ..I '$D(^TIU(8925.1,"AT","DOC",IEN)) Q
"RTN","ORWTPN",122,0)
 ..I '$$ISA^TIULX(IEN,CLASS) Q
"RTN","ORWTPN",123,0)
 ..I '$$CANPICK^TIULP(IEN) Q
"RTN","ORWTPN",124,0)
 ..I '$$CANENTR^TIULP(IEN) Q
"RTN","ORWTPN",125,0)
 ..S NODE=$G(^TIU(8925.1,IEN,0))
"RTN","ORWTPN",126,0)
 ..I '$L(NODE) Q
"RTN","ORWTPN",127,0)
 ..S NUM=NUM+1
"RTN","ORWTPN",128,0)
 ..S VALUES(NUM)=IEN_U_NODE
"RTN","ORWTPN",129,0)
 Q
"RTN","ORWTPN",130,0)
 ;
"RTN","ORWTPN",131,0)
GETTU(VALUES,CLASS,USER) ; from ORWTPP
"RTN","ORWTPN",132,0)
 ; get titles for a user
"RTN","ORWTPN",133,0)
 N CNT,IEN,NUM,NUM1,NODE K VALUES
"RTN","ORWTPN",134,0)
 S CNT=0
"RTN","ORWTPN",135,0)
 S NUM=+$O(^TIU(8925.98,"AC",USER,CLASS,0))
"RTN","ORWTPN",136,0)
 I 'NUM Q
"RTN","ORWTPN",137,0)
 S NUM1=0 F  S NUM1=$O(^TIU(8925.98,NUM,10,NUM1)) Q:NUM1<1  D
"RTN","ORWTPN",138,0)
 .S IEN=+$G(^TIU(8925.98,NUM,10,NUM1,0))
"RTN","ORWTPN",139,0)
 .S NODE=$P($G(^TIU(8925.1,IEN,0)),U)
"RTN","ORWTPN",140,0)
 .I '$L(NODE) Q
"RTN","ORWTPN",141,0)
 .S CNT=CNT+1
"RTN","ORWTPN",142,0)
 .S VALUES(CNT)=IEN_U_NODE_U_(.0000001*$P(^TIU(8925.98,NUM,10,NUM1,0),U,2))_U_$P(^(0),U,3)
"RTN","ORWTPN",143,0)
 Q
"RTN","ORWTPN",144,0)
 ;
"RTN","ORWTPN",145,0)
GETTD(VALUE,CLASS,USER) ; from ORWTPP
"RTN","ORWTPN",146,0)
 ; get default title for user
"RTN","ORWTPN",147,0)
 N IEN,NUM,NODE
"RTN","ORWTPN",148,0)
 S VALUE=-1,USER=+$G(USER)
"RTN","ORWTPN",149,0)
 S NUM=+$O(^TIU(8925.98,"AC",USER,CLASS,0))
"RTN","ORWTPN",150,0)
 I 'NUM Q
"RTN","ORWTPN",151,0)
 S IEN=+$P($G(^TIU(8925.98,NUM,0)),U,3)
"RTN","ORWTPN",152,0)
 S NODE=$G(^TIU(8925.1,IEN,0))
"RTN","ORWTPN",153,0)
 I '$L(NODE) Q
"RTN","ORWTPN",154,0)
 S VALUE=IEN
"RTN","ORWTPN",155,0)
 Q
"RTN","ORWTPN",156,0)
 ;
"RTN","ORWTPN",157,0)
SAVET(OK,CLASS,DEFAULT,VALUES,USER) ; from ORWTPP
"RTN","ORWTPN",158,0)
 ; save titles for user
"RTN","ORWTPN",159,0)
 N CNT,DA,DIK,IEN,NUM,VALUE K DA
"RTN","ORWTPN",160,0)
 S CLASS=+$G(CLASS),DEFAULT=+$G(DEFAULT),OK=1
"RTN","ORWTPN",161,0)
 I DEFAULT'>0 S DEFAULT=""
"RTN","ORWTPN",162,0)
 S IEN=+$O(^TIU(8925.98,"AC",USER,CLASS,0))
"RTN","ORWTPN",163,0)
 I IEN D  Q
"RTN","ORWTPN",164,0)
 .S DA(1)=IEN
"RTN","ORWTPN",165,0)
 .S DIK="^TIU(8925.98,"_DA(1)_",10,"
"RTN","ORWTPN",166,0)
 .L +^TIU(8925.98,IEN):5 I '$T S OK=0 Q
"RTN","ORWTPN",167,0)
 .S DA=0 F  S DA=$O(^TIU(8925.98,IEN,10,DA)) Q:DA<1  D
"RTN","ORWTPN",168,0)
 ..D ^DIK
"RTN","ORWTPN",169,0)
 .S CNT=0
"RTN","ORWTPN",170,0)
 .S NUM=0 F  S NUM=$O(VALUES(NUM)) Q:NUM<1  D
"RTN","ORWTPN",171,0)
 ..S VALUE=+VALUES(NUM) I 'VALUE Q
"RTN","ORWTPN",172,0)
 ..S CNT=CNT+1
"RTN","ORWTPN",173,0)
 ..S ^TIU(8925.98,IEN,10,CNT,0)=VALUE_U_CNT_U_$P(VALUES(NUM),U,4)
"RTN","ORWTPN",174,0)
 .S ^TIU(8925.98,IEN,10,0)="^8925.9801IP^"_CNT_U_CNT
"RTN","ORWTPN",175,0)
 .S $P(^TIU(8925.98,IEN,0),U,3)=DEFAULT
"RTN","ORWTPN",176,0)
 .K DA S DA=IEN,DIK="^TIU(8925.98,"
"RTN","ORWTPN",177,0)
 .D IX1^DIK
"RTN","ORWTPN",178,0)
 .L -^TIU(8925.98,IEN)
"RTN","ORWTPN",179,0)
 S DA=1+$P(^TIU(8925.98,0),U,3)
"RTN","ORWTPN",180,0)
 L +^TIU(8925.98,0):5 I '$T S OK=0 Q
"RTN","ORWTPN",181,0)
 F  Q:'$D(^TIU(8925.98,DA))  S DA=DA+1
"RTN","ORWTPN",182,0)
 S ^TIU(8925.98,DA,0)=USER_U_CLASS_U_DEFAULT
"RTN","ORWTPN",183,0)
 S $P(^(0),U,4)=1+$P(^TIU(8925.98,0),U,4),$P(^(0),U,3)=DA
"RTN","ORWTPN",184,0)
 L -^TIU(8925.98,0)
"RTN","ORWTPN",185,0)
 S CNT=0
"RTN","ORWTPN",186,0)
 S NUM=0 F  S NUM=$O(VALUES(NUM)) Q:NUM<1  D
"RTN","ORWTPN",187,0)
 .S VALUE=+VALUES(NUM)
"RTN","ORWTPN",188,0)
 .I 'VALUE Q
"RTN","ORWTPN",189,0)
 .S CNT=CNT+1
"RTN","ORWTPN",190,0)
 .S ^TIU(8925.98,DA,10,CNT,0)=VALUE
"RTN","ORWTPN",191,0)
 S ^TIU(8925.98,DA,10,0)="^8925.9801IP^"_CNT_U_CNT
"RTN","ORWTPN",192,0)
 S DIK="^TIU(8925.98,"
"RTN","ORWTPN",193,0)
 D IX1^DIK
"RTN","ORWTPN",194,0)
 Q
"RTN","ORWTPP")
0^18^B19265086
"RTN","ORWTPP",1,0)
ORWTPP ; SLC/STAFF Personal Preference - Personal ;1/19/01  15:30 [12/12/02 3:05pm]
"RTN","ORWTPP",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,149**;Oct 24, 2000
"RTN","ORWTPP",3,0)
 ;
"RTN","ORWTPP",4,0)
NEWLIST(VAL,LISTNAME) ; RPC
"RTN","ORWTPP",5,0)
 ; set current user's new personal list
"RTN","ORWTPP",6,0)
 D NEWLIST^ORWTPL(.VAL,LISTNAME,DUZ)
"RTN","ORWTPP",7,0)
 Q
"RTN","ORWTPP",8,0)
 ;
"RTN","ORWTPP",9,0)
DELLIST(OK,LISTNUM) ; RPC
"RTN","ORWTPP",10,0)
 ; delete current user's personal list
"RTN","ORWTPP",11,0)
 D DELLIST^ORWTPL(.OK,LISTNUM,DUZ)
"RTN","ORWTPP",12,0)
 Q
"RTN","ORWTPP",13,0)
 ;
"RTN","ORWTPP",14,0)
SAVELIST(OK,PLIST,LISTNUM) ; RPC
"RTN","ORWTPP",15,0)
 ; save current user's personal list changes
"RTN","ORWTPP",16,0)
 D SAVELIST^ORWTPL(.OK,.PLIST,LISTNUM,DUZ)
"RTN","ORWTPP",17,0)
 Q
"RTN","ORWTPP",18,0)
 ;
"RTN","ORWTPP",19,0)
LSDEF(INFO) ; RPC
"RTN","ORWTPP",20,0)
 ; get current user's list sources
"RTN","ORWTPP",21,0)
 D LSDEF^ORWTPL(.INFO,DUZ)
"RTN","ORWTPP",22,0)
 Q
"RTN","ORWTPP",23,0)
 ;
"RTN","ORWTPP",24,0)
SORTDEF(VALUE) ; RPC
"RTN","ORWTPP",25,0)
 ; get current user's sort order
"RTN","ORWTPP",26,0)
 D SORTDEF^ORWTPL(.VALUE,DUZ)
"RTN","ORWTPP",27,0)
 Q
"RTN","ORWTPP",28,0)
 ;
"RTN","ORWTPP",29,0)
CLDAYS(INFO) ; RPC
"RTN","ORWTPP",30,0)
 ; get current user's clinic defaults
"RTN","ORWTPP",31,0)
 D CLDAYS^ORWTPL(.INFO,DUZ)
"RTN","ORWTPP",32,0)
 Q
"RTN","ORWTPP",33,0)
 ;
"RTN","ORWTPP",34,0)
CLRANGE(INFO) ; RPC
"RTN","ORWTPP",35,0)
 ; get current user's default clinic start, stop dates
"RTN","ORWTPP",36,0)
 D CLRANGE^ORWTPL(.INFO,DUZ)
"RTN","ORWTPP",37,0)
 Q
"RTN","ORWTPP",38,0)
 ;
"RTN","ORWTPP",39,0)
SAVECD(OK,INFO) ; RPC
"RTN","ORWTPP",40,0)
 ; save current user's clinic defaults
"RTN","ORWTPP",41,0)
 D SAVECD^ORWTPL(.OK,INFO,DUZ)
"RTN","ORWTPP",42,0)
 Q
"RTN","ORWTPP",43,0)
 ;
"RTN","ORWTPP",44,0)
SAVEPLD(OK,INFO) ; RPC
"RTN","ORWTPP",45,0)
 ; save current user's list selection defaults
"RTN","ORWTPP",46,0)
 D SAVEPLD^ORWTPL(.OK,INFO,DUZ)
"RTN","ORWTPP",47,0)
 Q
"RTN","ORWTPP",48,0)
 ;
"RTN","ORWTPP",49,0)
CSLAB(INFO) ; RPC
"RTN","ORWTPP",50,0)
 ; get lab date range defaults
"RTN","ORWTPP",51,0)
 D CSLAB^ORWTPO(.INFO,DUZ)
"RTN","ORWTPP",52,0)
 Q
"RTN","ORWTPP",53,0)
 ;
"RTN","ORWTPP",54,0)
CSARNG(INFO) ; RPC
"RTN","ORWTPP",55,0)
 ; get current user's start, stop defaults
"RTN","ORWTPP",56,0)
 D CSARNG^ORWTPO(.INFO,DUZ)
"RTN","ORWTPP",57,0)
 Q
"RTN","ORWTPP",58,0)
 ;
"RTN","ORWTPP",59,0)
SAVECS(OK,INFO) ; RPC
"RTN","ORWTPP",60,0)
 ; save current user's date range defaults
"RTN","ORWTPP",61,0)
 D SAVECS^ORWTPO(.OK,INFO,DUZ)
"RTN","ORWTPP",62,0)
 Q
"RTN","ORWTPP",63,0)
 ;
"RTN","ORWTPP",64,0)
GETIMG(INFO) ; RPC
"RTN","ORWTPP",65,0)
 ; get current user's image report defaults
"RTN","ORWTPP",66,0)
 D GETIMG^ORWTPO(.INFO,DUZ)
"RTN","ORWTPP",67,0)
 Q
"RTN","ORWTPP",68,0)
 ;
"RTN","ORWTPP",69,0)
SETIMG(OK,MAX,START,STOP) ; RPC
"RTN","ORWTPP",70,0)
 ; save current user's image report defaults
"RTN","ORWTPP",71,0)
 D SETIMG^ORWTPO(.OK,MAX,START,STOP,DUZ)
"RTN","ORWTPP",72,0)
 Q
"RTN","ORWTPP",73,0)
 ;
"RTN","ORWTPP",74,0)
GETREM(VALUES) ; RPC
"RTN","ORWTPP",75,0)
 ; get current user's reminders
"RTN","ORWTPP",76,0)
 D GETREM^ORWTPR(.VALUES,DUZ)
"RTN","ORWTPP",77,0)
 Q
"RTN","ORWTPP",78,0)
 ;
"RTN","ORWTPP",79,0)
SETREM(OK,VALUES) ; RPC
"RTN","ORWTPP",80,0)
 ; set current user's reminders
"RTN","ORWTPP",81,0)
 D SETREM^ORWTPR(.OK,.VALUES,DUZ)
"RTN","ORWTPP",82,0)
 Q
"RTN","ORWTPP",83,0)
 ;
"RTN","ORWTPP",84,0)
GETOC(VALUES) ; RPC
"RTN","ORWTPP",85,0)
 ; get current user's order checks
"RTN","ORWTPP",86,0)
 D GETOC^ORWTPR(.VALUES,DUZ)
"RTN","ORWTPP",87,0)
 Q
"RTN","ORWTPP",88,0)
 ;
"RTN","ORWTPP",89,0)
SAVEOC(OK,VALUES) ; RPC
"RTN","ORWTPP",90,0)
 ; save current user's order checks
"RTN","ORWTPP",91,0)
 D SAVEOC^ORWTPR(.OK,.VALUES,DUZ)
"RTN","ORWTPP",92,0)
 Q
"RTN","ORWTPP",93,0)
 ;
"RTN","ORWTPP",94,0)
GETNOT(VALUES) ; RPC
"RTN","ORWTPP",95,0)
 ; get current user's notifications
"RTN","ORWTPP",96,0)
 D GETNOT^ORWTPR(.VALUES,DUZ)
"RTN","ORWTPP",97,0)
 Q
"RTN","ORWTPP",98,0)
 ;
"RTN","ORWTPP",99,0)
SAVENOT(OK,VALUES) ; RPC
"RTN","ORWTPP",100,0)
 ; save current user's notifications
"RTN","ORWTPP",101,0)
 D SAVENOT^ORWTPR(.OK,.VALUES,DUZ)
"RTN","ORWTPP",102,0)
 Q
"RTN","ORWTPP",103,0)
 ;
"RTN","ORWTPP",104,0)
CLEARNOT(OK) ; RPC
"RTN","ORWTPP",105,0)
 ; clear current user's notifications
"RTN","ORWTPP",106,0)
 D CLEARNOT^ORWTPR(.OK,DUZ)
"RTN","ORWTPP",107,0)
 Q
"RTN","ORWTPP",108,0)
 ;
"RTN","ORWTPP",109,0)
GETNOTO(INFO) ; RPC
"RTN","ORWTPP",110,0)
 ; get current user's other info for notifications
"RTN","ORWTPP",111,0)
 D GETNOTO^ORWTPR(.INFO,DUZ)
"RTN","ORWTPP",112,0)
 Q
"RTN","ORWTPP",113,0)
 ;
"RTN","ORWTPP",114,0)
CHKSURR(OK,SURR) ; RPC
"RTN","ORWTPP",115,0)
 ; check if current user's surrogate is valid
"RTN","ORWTPP",116,0)
 S OK=$$CHKSURR^ORWTPUA(DUZ,SURR)
"RTN","ORWTPP",117,0)
 Q
"RTN","ORWTPP",118,0)
 ;
"RTN","ORWTPP",119,0)
GETSURR(INFO) ; RPC
"RTN","ORWTPP",120,0)
 ; get current user's surrogate info
"RTN","ORWTPP",121,0)
 D GETSURR^ORWTPR(.INFO,DUZ)
"RTN","ORWTPP",122,0)
 Q
"RTN","ORWTPP",123,0)
 ;
"RTN","ORWTPP",124,0)
SAVESURR(OK,INFO) ; RPC
"RTN","ORWTPP",125,0)
 ; save current user's surrogate info
"RTN","ORWTPP",126,0)
 D SAVESURR^ORWTPR(.OK,INFO,DUZ)
"RTN","ORWTPP",127,0)
 Q
"RTN","ORWTPP",128,0)
 ;
"RTN","ORWTPP",129,0)
SAVENOTO(OK,INFO) ; RPC
"RTN","ORWTPP",130,0)
 ; save current user's notification info
"RTN","ORWTPP",131,0)
 D SAVENOTO^ORWTPR(.OK,INFO,DUZ)
"RTN","ORWTPP",132,0)
 Q
"RTN","ORWTPP",133,0)
 ;
"RTN","ORWTPP",134,0)
GETOTHER(INFO) ; RPC
"RTN","ORWTPP",135,0)
 ; get user's other parameter settings
"RTN","ORWTPP",136,0)
 D GETOTHER^ORWTPO(.INFO,DUZ)
"RTN","ORWTPP",137,0)
 Q
"RTN","ORWTPP",138,0)
 ;
"RTN","ORWTPP",139,0)
SETOTHER(OK,INFO) ; RPC
"RTN","ORWTPP",140,0)
 ; set current user's other parameter settings
"RTN","ORWTPP",141,0)
 D SETOTHER^ORWTPO(.OK,INFO,DUZ)
"RTN","ORWTPP",142,0)
 Q
"RTN","ORWTPP",143,0)
 ;
"RTN","ORWTPP",144,0)
GETSUB(VALUE) ; RPC
"RTN","ORWTPP",145,0)
 ; get Ask for Subject on notes for current user
"RTN","ORWTPP",146,0)
 D GETSUB^ORWTPN(.VALUE,DUZ)
"RTN","ORWTPP",147,0)
 Q
"RTN","ORWTPP",148,0)
 ;
"RTN","ORWTPP",149,0)
GETCOS(VALUES,FROM,DIR,VISITORS) ; RPC
"RTN","ORWTPP",150,0)
 ; get elgible cosigners for current user
"RTN","ORWTPP",151,0)
 I '$G(VISITORS) S VISITORS=""
"RTN","ORWTPP",152,0)
 D GETCOS^ORWTPN(.VALUES,DUZ,FROM,DIR,VISITORS)
"RTN","ORWTPP",153,0)
 Q
"RTN","ORWTPP",154,0)
 ;
"RTN","ORWTPP",155,0)
GETDCOS(VALUE) ; RPC
"RTN","ORWTPP",156,0)
 ; get default cosigner for current user
"RTN","ORWTPP",157,0)
 D GETDCOS^ORWTPN(.VALUE,DUZ)
"RTN","ORWTPP",158,0)
 Q
"RTN","ORWTPP",159,0)
 ;
"RTN","ORWTPP",160,0)
SETDCOS(OK,VALUE) ; RPC
"RTN","ORWTPP",161,0)
 ; set default cosigner for current user
"RTN","ORWTPP",162,0)
 D SETDCOS^ORWTPN(.OK,VALUE,DUZ)
"RTN","ORWTPP",163,0)
 Q
"RTN","ORWTPP",164,0)
 ;
"RTN","ORWTPP",165,0)
SETSUB(OK,VALUE) ; RPC
"RTN","ORWTPP",166,0)
 ; set Ask for Subject on note for current user
"RTN","ORWTPP",167,0)
 D SETSUB^ORWTPN(.OK,VALUE,DUZ)
"RTN","ORWTPP",168,0)
 Q
"RTN","ORWTPP",169,0)
 ;
"RTN","ORWTPP",170,0)
GETTU(VALUES,CLASS) ; RPC
"RTN","ORWTPP",171,0)
 ; get titles for current user
"RTN","ORWTPP",172,0)
 D GETTU^ORWTPN(.VALUES,CLASS,DUZ)
"RTN","ORWTPP",173,0)
 Q
"RTN","ORWTPP",174,0)
 ;
"RTN","ORWTPP",175,0)
GETTD(VALUE,CLASS) ; RPC
"RTN","ORWTPP",176,0)
 ; get default title for current user
"RTN","ORWTPP",177,0)
 D GETTD^ORWTPN(.VALUE,CLASS,DUZ)
"RTN","ORWTPP",178,0)
 Q
"RTN","ORWTPP",179,0)
 ;
"RTN","ORWTPP",180,0)
SAVET(OK,CLASS,DEFAULT,VALUES) ; RPC
"RTN","ORWTPP",181,0)
 ; save titles for current user
"RTN","ORWTPP",182,0)
 D SAVET^ORWTPN(.OK,CLASS,DEFAULT,.VALUES,DUZ)
"RTN","ORWTPP",183,0)
 Q
"RTN","ORWTPP",184,0)
 ;
"RTN","ORWTPP",185,0)
PLISTS(VALUES) ; RPC
"RTN","ORWTPP",186,0)
 ; get current user's personal lists
"RTN","ORWTPP",187,0)
 D PLISTS^ORWTPT(.VALUES,DUZ)
"RTN","ORWTPP",188,0)
 Q
"RTN","ORWTPP",189,0)
 ;
"RTN","ORWTPP",190,0)
PLTEAMS(VALUES) ; RPC
"RTN","ORWTPP",191,0)
 ; get current user's teams and personal lists
"RTN","ORWTPP",192,0)
 D PLTEAMS^ORWTPT(.VALUES,DUZ)
"RTN","ORWTPP",193,0)
 Q
"RTN","ORWTPP",194,0)
 ;
"RTN","ORWTPP",195,0)
TEAMS(VALUES) ; RPC
"RTN","ORWTPP",196,0)
 ; get teams for current user
"RTN","ORWTPP",197,0)
 D TEAMS^ORWTPT(.VALUES,DUZ)
"RTN","ORWTPP",198,0)
 Q
"RTN","ORWTPP",199,0)
 ;
"RTN","ORWTPP",200,0)
ADDLIST(OK,VALUE) ; RPC
"RTN","ORWTPP",201,0)
 ; adds current user to a team
"RTN","ORWTPP",202,0)
 D ADDLIST^ORWTPT(.OK,VALUE,DUZ)
"RTN","ORWTPP",203,0)
 Q
"RTN","ORWTPP",204,0)
 ;
"RTN","ORWTPP",205,0)
REMLIST(OK,VALUE) ; RPC
"RTN","ORWTPP",206,0)
 ; removes current user from a team
"RTN","ORWTPP",207,0)
 D REMLIST^ORWTPT(.OK,VALUE,DUZ)
"RTN","ORWTPP",208,0)
 Q
"RTN","ORWTPP",209,0)
 ;
"RTN","ORWTPP",210,0)
GETCOMBO(VALUES) ; RPC
"RTN","ORWTPP",211,0)
 ; get current user's combo list definition
"RTN","ORWTPP",212,0)
 D GETCOMBO^ORWTPT(.VALUES,DUZ)
"RTN","ORWTPP",213,0)
 Q
"RTN","ORWTPP",214,0)
 ;
"RTN","ORWTPP",215,0)
SETCOMBO(OK,VALUES) ; RPC
"RTN","ORWTPP",216,0)
 ; set current user's combo list definition
"RTN","ORWTPP",217,0)
 D SETCOMBO^ORWTPT(.OK,.VALUES,DUZ)
"RTN","ORWTPP",218,0)
 Q
"RTN","ORWU")
0^4^B61251771
"RTN","ORWU",1,0)
ORWU ; SLC/KCM - General Utilites for Windows Calls; 2/28/01 [6/4/03 1:55pm]
"RTN","ORWU",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,132,148,149**;Dec 17, 1997
"RTN","ORWU",3,0)
 ;
"RTN","ORWU",4,0)
DT(Y,X,%DT) ; Internal FM Date/Time
"RTN","ORWU",5,0)
 ; change the '00:00' that could be passed so Fileman doesn't reject
"RTN","ORWU",6,0)
 I $L($P(X,"@",2)),("00000000"[$TR($P(X,"@",2),":","")) S $P(X,"@",2)="00:00:01"
"RTN","ORWU",7,0)
 S %DT=$G(%DT,"TS") D ^%DT K %DT
"RTN","ORWU",8,0)
 Q
"RTN","ORWU",9,0)
VALDT(Y,X,%DT) ; Validate date/time
"RTN","ORWU",10,0)
 S:'$D(%DT) %DT="TX" D ^%DT
"RTN","ORWU",11,0)
 Q
"RTN","ORWU",12,0)
USERINFO(REC) ; Relevant info, current user
"RTN","ORWU",13,0)
 ; return DUZ^NAME^USRCLS^CANSIGN^ISPROVIDER^ORDERROLE^NOORDER^DTIME^
"RTN","ORWU",14,0)
 ;        COUNTDOWN^ENABLEVERIFY^NOTIFYAPPS^MSGHANG^DOMAIN^SERVICE^
"RTN","ORWU",15,0)
 ;        AUTOSAVE^INITTAB^LASTTAB^WEBACCESS^ALLOWHOLD^ISRPL^RPLLIST^
"RTN","ORWU",16,0)
 ;        CORTABS^RPTTAB^STANUM
"RTN","ORWU",17,0)
 N X,ORRPL,ORRPL1,ORRPL2,ORTAB,CORTABS,RPTTAB,ORDT,OREFF,OREXP,ORDATEOK
"RTN","ORWU",18,0)
 S REC=DUZ_U_$P(^VA(200,DUZ,0),U)
"RTN","ORWU",19,0)
 S $P(REC,U,3)=$S($D(^XUSEC("ORES",DUZ)):3,$D(^XUSEC("ORELSE",DUZ)):2,$D(^XUSEC("OREMAS",DUZ)):1,1:0)
"RTN","ORWU",20,0)
 S $P(REC,U,4)=$D(^XUSEC("ORES",DUZ))&$D(^XUSEC("PROVIDER",DUZ))
"RTN","ORWU",21,0)
 S $P(REC,U,5)=$D(^XUSEC("PROVIDER",DUZ))
"RTN","ORWU",22,0)
 S $P(REC,U,6)=$$ORDROLE
"RTN","ORWU",23,0)
 S $P(REC,U,7)=$$GET^XPAR("USR^SYS^PKG","ORWOR DISABLE ORDERING",1,"I")
"RTN","ORWU",24,0)
 S $P(REC,U,8)=$$GET^XPAR("USR^SYS","ORWOR TIMEOUT CHART",1,"I")
"RTN","ORWU",25,0)
 I '$P(REC,U,8),$G(DTIME) S $P(REC,U,8)=DTIME
"RTN","ORWU",26,0)
 S $P(REC,U,9)=$$GET^XPAR("USR^SYS^PKG","ORWOR TIMEOUT COUNTDOWN",1,"I")
"RTN","ORWU",27,0)
 S X=$$GET^XPAR("USR^SYS^PKG","ORWOR ENABLE VERIFY",1,"I")
"RTN","ORWU",28,0)
 S $P(REC,U,10)=$S(X=1:1,X=2:0,1:'$P(REC,U,7))
"RTN","ORWU",29,0)
 S $P(REC,U,11)=$$GET^XPAR("USR^SYS^PKG","ORWOR BROADCAST MESSAGES",1,"I")
"RTN","ORWU",30,0)
 S $P(REC,U,12)=$$GET^XPAR("USR^SYS^PKG","ORWOR AUTO CLOSE PT MSG",1,"I")
"RTN","ORWU",31,0)
 S $P(REC,U,13)=$$KSP^XUPARAM("WHERE")  ; domain
"RTN","ORWU",32,0)
 S $P(REC,U,14)=+$G(^VA(200,DUZ,5))     ; service/section
"RTN","ORWU",33,0)
 S $P(REC,U,15)=$$GET^XPAR("USR^SYS^PKG","ORWOR AUTOSAVE NOTE",1,"I")
"RTN","ORWU",34,0)
 S $P(REC,U,16)=$$GET^XPAR("USR^DIV^SYS^PKG","ORCH INITIAL TAB",1,"I")
"RTN","ORWU",35,0)
 S $P(REC,U,17)=$$GET^XPAR("USR^DIV^SYS^PKG","ORCH USE LAST TAB",1,"I")
"RTN","ORWU",36,0)
 S $P(REC,U,18)=$$GET^XPAR("USR^DIV^SYS^PKG","ORWOR DISABLE WEB ACCESS",1,"I")
"RTN","ORWU",37,0)
 S $P(REC,U,19)=$$GET^XPAR("SYS^PKG","ORWOR DISABLE HOLD ORDERS",1,"I")
"RTN","ORWU",38,0)
 ; Two pieces added by PKS on 11/5/2001 for "Reports Only" functions:
"RTN","ORWU",39,0)
 ; IA# 10060 allows read access to ^VA(200 file.
"RTN","ORWU",40,0)
 S ORRPL=$G(^VA(200,DUZ,101))           ; RPL node.
"RTN","ORWU",41,0)
 S ORRPL1=$P(ORRPL,U)
"RTN","ORWU",42,0)
 S $P(REC,U,20)=ORRPL1                  ; ISRPL piece.
"RTN","ORWU",43,0)
 S ORRPL2=$P(ORRPL,U,2)
"RTN","ORWU",44,0)
 S $P(REC,U,21)=ORRPL2                  ; RPLLIST piece.
"RTN","ORWU",45,0)
 ;
"RTN","ORWU",46,0)
 ; Additional pieces for CPRS tabs access:
"RTN","ORWU",47,0)
 ; IA# 10060 allows read access to ^VA(200.01013 multiple.
"RTN","ORWU",48,0)
 S ORDT=DT                              ; Today.
"RTN","ORWU",49,0)
 S (CORTABS,RPTTAB)=0
"RTN","ORWU",50,0)
 S ORRPL=0
"RTN","ORWU",51,0)
 F  S ORRPL=$O(^VA(200,DUZ,"ORD",ORRPL)) Q:ORRPL<1  D
"RTN","ORWU",52,0)
 .S ORTAB=$G(^VA(200,DUZ,"ORD",ORRPL,0))
"RTN","ORWU",53,0)
 .I ORTAB="" Q
"RTN","ORWU",54,0)
 .S OREFF=$P(ORTAB,U,2)
"RTN","ORWU",55,0)
 .S OREXP=$P(ORTAB,U,3)
"RTN","ORWU",56,0)
 .S ORTAB=$P(ORTAB,U)
"RTN","ORWU",57,0)
 .I ORTAB="" Q
"RTN","ORWU",58,0)
 .S ORTAB=$G(^ORD(101.13,ORTAB,0))
"RTN","ORWU",59,0)
 .I ORTAB="" Q
"RTN","ORWU",60,0)
 .S ORTAB=$P(ORTAB,U)
"RTN","ORWU",61,0)
 .I ORTAB="" Q
"RTN","ORWU",62,0)
 .S ORTAB=$$UP^XLFSTR(ORTAB)
"RTN","ORWU",63,0)
 .S ORDATEOK=1                             ; Default.
"RTN","ORWU",64,0)
 .I ((OREFF="")!(OREFF>ORDT)) S ORDATEOK=0 ; Eff. date NG.
"RTN","ORWU",65,0)
 .I ORDATEOK  D
"RTN","ORWU",66,0)
 ..I OREXP="" Q                            ; No exp. date.
"RTN","ORWU",67,0)
 ..I (OREXP<ORDT) S ORDATEOK=0             ; Exp. date NG.
"RTN","ORWU",68,0)
 ..I (OREXP=ORDT) S ORDATEOK=0             ; Exp. date NG.
"RTN","ORWU",69,0)
 .;
"RTN","ORWU",70,0)
 .; Set TRUE if OK:
"RTN","ORWU",71,0)
 .I ((ORTAB="COR")&(ORDATEOK)) S CORTABS=1
"RTN","ORWU",72,0)
 .I ((ORTAB="RPT")&(ORDATEOK)) S RPTTAB=1
"RTN","ORWU",73,0)
 ;
"RTN","ORWU",74,0)
 ; When done, set all valid tabs for access:
"RTN","ORWU",75,0)
 S $P(REC,U,22)=CORTABS                 ; "Core" tabs.
"RTN","ORWU",76,0)
 S $P(REC,U,23)=RPTTAB                  ; "Reports" tab.
"RTN","ORWU",77,0)
 ;
"RTN","ORWU",78,0)
 S $P(REC,U,24)=$P($$SITE^VASITE,U,3)
"RTN","ORWU",79,0)
 ;S $P(REC,U,24)=$E($$STA^XUAF4(DUZ(2)),1,3)     ; DBIA #2171 - station number for CCOW
"RTN","ORWU",80,0)
 Q
"RTN","ORWU",81,0)
 ;
"RTN","ORWU",82,0)
HASKEY(VAL,KEY) ; TRUE if user possesses security key
"RTN","ORWU",83,0)
 S VAL=''$D(^XUSEC(KEY,DUZ))
"RTN","ORWU",84,0)
 Q
"RTN","ORWU",85,0)
HASOPTN(VAL,OPTION) ; TRUE if user has access to menu option
"RTN","ORWU",86,0)
 S VAL=+$$ACCESS^XQCHK(DUZ,OPTION)
"RTN","ORWU",87,0)
 I VAL'>0 S VAL=0
"RTN","ORWU",88,0)
 E  S VAL=1
"RTN","ORWU",89,0)
 Q
"RTN","ORWU",90,0)
NPHASKEY(VAL,NP,KEY)    ; TRUE if person has security key
"RTN","ORWU",91,0)
 S VAL=''$D(^XUSEC(KEY,NP))
"RTN","ORWU",92,0)
 Q
"RTN","ORWU",93,0)
ORDROLE()    ; returns role person takes in ordering
"RTN","ORWU",94,0)
 ; VAL: 0=nokey, 1=clerk, 2=nurse, 3=physician, 4=student, 5=bad keys
"RTN","ORWU",95,0)
 ;I '$G(ORWCLVER) Q 0  ; Client version too old for ordering
"RTN","ORWU",96,0)
 I ($D(^XUSEC("OREMAS",DUZ))+$D(^XUSEC("ORELSE",DUZ))+$D(^XUSEC("ORES",DUZ)))>1 Q 5
"RTN","ORWU",97,0)
 I $D(^XUSEC("OREMAS",DUZ)) Q 1                           ; clerk
"RTN","ORWU",98,0)
 I $D(^XUSEC("ORELSE",DUZ)) Q 2                           ; nurse
"RTN","ORWU",99,0)
 I $D(^XUSEC("ORES",DUZ)),$D(^XUSEC("PROVIDER",DUZ)) Q 3  ; doctor
"RTN","ORWU",100,0)
 I $D(^XUSEC("PROVIDER",DUZ)) Q 4                         ; student
"RTN","ORWU",101,0)
 Q 0
"RTN","ORWU",102,0)
VALIDSIG(ESOK,X) ; TRUE if valid electronic signature
"RTN","ORWU",103,0)
 S X=$$DECRYP^XUSRB1(X),ESOK=0                   ; network encrypted
"RTN","ORWU",104,0)
 D HASH^XUSHSHP
"RTN","ORWU",105,0)
 I X=$P($G(^VA(200,+DUZ,20)),U,4) S ESOK=1
"RTN","ORWU",106,0)
 Q
"RTN","ORWU",107,0)
TOOLMENU(ORLST) ; List of items for Tools menu
"RTN","ORWU",108,0)
 N ANENT
"RTN","ORWU",109,0)
 S ANENT="ALL^"_$S($G(^VA(200,DUZ,5)):"^SRV.`"_+$G(^(5)),1:"")
"RTN","ORWU",110,0)
 D GETLST^XPAR(.ORLST,ANENT,"ORWT TOOLS MENU","N")
"RTN","ORWU",111,0)
 Q
"RTN","ORWU",112,0)
ACTLOC(LOC) ; Function: TRUE if active hospital location
"RTN","ORWU",113,0)
 N D0,X I +$G(^SC(LOC,"OOS")) Q 0                ; screen out OOS entry
"RTN","ORWU",114,0)
 S D0=+$G(^SC(LOC,42)) I D0 D WIN^DGPMDDCF Q 'X  ; chk out of svc wards
"RTN","ORWU",115,0)
 S X=$G(^SC(LOC,"I")) I +X=0 Q 1                 ; no inactivate date
"RTN","ORWU",116,0)
 I DT>$P(X,U)&($P(X,U,2)=""!(DT<$P(X,U,2))) Q 0  ; chk reactivate date
"RTN","ORWU",117,0)
 Q 1                                             ; must still be active
"RTN","ORWU",118,0)
 ;
"RTN","ORWU",119,0)
CLINLOC(Y,FROM,DIR) ; Set of clinics from HOSPITAL LOCATION
"RTN","ORWU",120,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",121,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",122,0)
 F  Q:I'<CNT  S FROM=$O(^SC("B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",123,0)
 . S IEN="" F  S IEN=$O(^SC("B",FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",124,0)
 . . I ($P($G(^SC(IEN,0)),U,3)'="C")!('$$ACTLOC(IEN)) Q
"RTN","ORWU",125,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",126,0)
 Q
"RTN","ORWU",127,0)
INPLOC(Y,FROM,DIR) ; Set of wards from HOSPITAL LOCATION
"RTN","ORWU",128,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",129,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",130,0)
 F  Q:I'<CNT  S FROM=$O(^SC("B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",131,0)
 . S IEN="" F  S IEN=$O(^SC("B",FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",132,0)
 . . I ($P($G(^SC(IEN,0)),U,3)'="W") Q
"RTN","ORWU",133,0)
 . . I '$$ACTLOC(IEN) Q
"RTN","ORWU",134,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",135,0)
 Q
"RTN","ORWU",136,0)
HOSPLOC(Y,FROM,DIR) ; Set of locations from HOSPITAL LOCATION
"RTN","ORWU",137,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",138,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",139,0)
 F  Q:I'<CNT  S FROM=$O(^SC("B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",140,0)
 . S IEN="" F  S IEN=$O(^SC("B",FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",141,0)
 . . I '$$ACTLOC(IEN) Q
"RTN","ORWU",142,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",143,0)
 Q
"RTN","ORWU",144,0)
NEWPERS(Y,FROM,DIR,KEY,DATE,ALLUSERS) ; Set of names from ^VA(200.
"RTN","ORWU",145,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",146,0)
 ;  KEY=screen by security key (optional)
"RTN","ORWU",147,0)
 ;  DATE=checks active person class on date (optional)
"RTN","ORWU",148,0)
 N I,IEN,CNT S I=0,CNT=44,KEY=$G(KEY),DATE=$G(DATE)
"RTN","ORWU",149,0)
 F  Q:I'<CNT  S FROM=$O(^VA(200,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",150,0)
 . S IEN="" F  S IEN=$O(^VA(200,"B",FROM,IEN),DIR) Q:'IEN  D 
"RTN","ORWU",151,0)
 . . I $L(KEY),'$D(^XUSEC(KEY,+IEN)) Q
"RTN","ORWU",152,0)
 . . I +$G(ALLUSERS)=0,'$$PROVIDER^XUSER(IEN) Q  ; terminated user
"RTN","ORWU",153,0)
 . . I DATE>0,$$GET^XUA4A72(IEN,DATE)<1 Q
"RTN","ORWU",154,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",155,0)
 Q
"RTN","ORWU",156,0)
GBLREF(VAL,FN) ; Global reference for file number
"RTN","ORWU",157,0)
 S VAL="" Q:'FN
"RTN","ORWU",158,0)
 S VAL=$$ROOT^DILFD(+FN)
"RTN","ORWU",159,0)
 ; I $E($RE(VAL))="," S VAL=$E(VAL,1,$L(VAL)-1)_")"
"RTN","ORWU",160,0)
 ; I $E($RE(VAL))="(" S VAL=$P(VAL,"(",1) 
"RTN","ORWU",161,0)
 Q
"RTN","ORWU",162,0)
GENERIC(Y,FROM,DIR,REF) ; Set of entries from xref in REF
"RTN","ORWU",163,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",164,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",165,0)
 F  Q:I'<CNT  S FROM=$O(@REF@(FROM),DIR) Q:FROM=""  D
"RTN","ORWU",166,0)
 . S IEN="" F  S IEN=$O(@REF@(FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",167,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",168,0)
 Q
"RTN","ORWU",169,0)
EXTNAME(VAL,IEN,FN) ; External form of pointer
"RTN","ORWU",170,0)
 ; IEN=internal number, FN=file number
"RTN","ORWU",171,0)
 N REF S REF=$G(^DIC(FN,0,"GL")),VAL=""
"RTN","ORWU",172,0)
 I $L(REF),+IEN S VAL=$P($G(@(REF_IEN_",0)")),U)
"RTN","ORWU",173,0)
 Q
"RTN","ORWU",174,0)
PARAM(VAL,APARAM)       ; Parameter value for a user
"RTN","ORWU",175,0)
 ; call assumes current user, default entities, single instance
"RTN","ORWU",176,0)
 S VAL=$$GET^XPAR("ALL",APARAM,1,"I")
"RTN","ORWU",177,0)
 Q
"RTN","ORWU",178,0)
DEVICE(Y,FROM,DIR) ; Subset of entries from the Device file
"RTN","ORWU",179,0)
 ; .LST(n)=IEN;Name^DisplayName^Location^RMar^PLen
"RTN","ORWU",180,0)
 ; FROM=text to $O from, DIR=$O direction
"RTN","ORWU",181,0)
 N I,IEN,CNT,SHOW,X S I=0,CNT=20
"RTN","ORWU",182,0)
 I FROM["<" S FROM=$RE($P($RE(FROM),"<  ",2))
"RTN","ORWU",183,0)
 F  Q:I'<CNT  S FROM=$O(^%ZIS(1,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",184,0)
 . S IEN=0 F  S IEN=$O(^%ZIS(1,"B",FROM,IEN)) Q:'IEN  D
"RTN","ORWU",185,0)
 .. N X0,X1,X90,X91,X95,XTYPE,XSTYPE,XTIME,%A,%X,POP
"RTN","ORWU",186,0)
 .. Q:'$D(^%ZIS(1,IEN,0))  S X0=^(0),X1=$G(^(1)),X90=$G(^(90)),X91=$G(^(91)),X95=$G(^(95)),XSTYPE=$G(^("SUBTYPE")),XTIME=$G(^("TIME")),XTYPE=$G(^("TYPE"))
"RTN","ORWU",187,0)
 .. I $E($G(^%ZIS(2,+XSTYPE,0)))'="P" Q  ;Printers only
"RTN","ORWU",188,0)
 .. S X=$P(XTYPE,"^") I X'="TRM",X'="HG",X'="HFS",X'="CHAN" Q  ;Device Types
"RTN","ORWU",189,0)
 .. S X=X0 I ($P(X,U,2)="0")!($P(X,U,12)=2) Q  ;Queuing allowed
"RTN","ORWU",190,0)
 .. S X=+X90 I X,(X'>DT) Q  ;Out of Service
"RTN","ORWU",191,0)
 .. I XTIME]"" S %A=$P(XTIME,"^"),%X=$P($H,",",2),%=%X\60#60+(%X\3600*100),%X=$P(%A,"-",2) I %X'<%A&(%'>%X&(%'<%A))!(%X<%A&(%'<%A!(%'>%X))) Q  ;Prohibited Times
"RTN","ORWU",192,0)
 .. S POP=0
"RTN","ORWU",193,0)
 .. I X95]"" S %X=$G(DUZ(0)) I %X'="@" S POP=1 F %A=1:1:$L(%X) I X95[$E(%X,%A) S POP=0 Q
"RTN","ORWU",194,0)
 .. Q:POP  ;Security check
"RTN","ORWU",195,0)
 .. S SHOW=$P(X0,U) I SHOW'=FROM S SHOW=FROM_"  <"_SHOW_">"
"RTN","ORWU",196,0)
 .. S I=I+1,Y(I)=IEN_";"_$P(X0,U)_U_SHOW_U_$P(X1,U)_U_$P(X91,U)_U_$P(X91,U,3)
"RTN","ORWU",197,0)
 Q
"RTN","ORWU",198,0)
URGENCY(Y) ; -- Set of values from dd for discharge summary urgency
"RTN","ORWU",199,0)
 N ORDD,I,X
"RTN","ORWU",200,0)
 D FIELD^DID(8925,.09,"","POINTER","ORDD")
"RTN","ORWU",201,0)
 F I=1:1 S X=$P(ORDD("POINTER"),";",I) Q:X=""   S Y(I)=$TR(X,":","^")
"RTN","ORWU",202,0)
 Q
"RTN","ORWU",203,0)
PATCH(VAL,X) ; Return 1 if patch X is installed
"RTN","ORWU",204,0)
 S VAL=$$PATCH^XPDUTL(X)
"RTN","ORWU",205,0)
 Q
"RTN","ORWU",206,0)
VERSRV(VAL,X,CLVER)   ; Server version of option name
"RTN","ORWU",207,0)
 S ORWCLVER=$G(CLVER)  ; leave in partition for session
"RTN","ORWU",208,0)
 N BADVAL,ORLST
"RTN","ORWU",209,0)
 D FIND^DIC(19,"",1,"X",X,1,,,,"ORLST")
"RTN","ORWU",210,0)
 I 'ORLST("DILIST",0) S VAL="0.0.0.0" Q
"RTN","ORWU",211,0)
 S VAL=ORLST("DILIST","ID",1,1)
"RTN","ORWU",212,0)
 S VAL=$P(VAL,"version ",2)
"RTN","ORWU",213,0)
 S BADVAL=0
"RTN","ORWU",214,0)
 I $P(VAL,".",1)="" S BADVAL=1
"RTN","ORWU",215,0)
 I $P(VAL,".",2)="" S BADVAL=1
"RTN","ORWU",216,0)
 I $P(VAL,".",3)="" S BADVAL=1
"RTN","ORWU",217,0)
 I $P(VAL,".",4)="" S BADVAL=1
"RTN","ORWU",218,0)
 I ((BADVAL)!('VAL)!(VAL="")) S VAL="0.0.0.0"
"RTN","ORWU",219,0)
 ;N IEN S VAL="",IEN=$O(^DIC(19,"B",X,0)) Q:'IEN
"RTN","ORWU",220,0)
 ;S VAL=$P($P($G(^DIC(19,IEN,0)),U,2),"version ",2)
"RTN","ORWU",221,0)
 Q
"RTN","ORWU1")
0^1^B16528156
"RTN","ORWU1",1,0)
ORWU1 ;SLC/GRE - General Utilities for Windows Calls [5/28/03 1:43pm]
"RTN","ORWU1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**149**;Aug 7, 2002
"RTN","ORWU1",3,0)
 ;
"RTN","ORWU1",4,0)
 Q
"RTN","ORWU1",5,0)
 ;
"RTN","ORWU1",6,0)
NP1 ; Return a set of names from the NEW PERSON file.
"RTN","ORWU1",7,0)
 ; (PKS/12/03/2002: Now called by NEWPERS^ORWU; internal mods made.)
"RTN","ORWU1",8,0)
 ; PARAMS from NEWPERS^ORWU call:
"RTN","ORWU1",9,0)
 ;  .ORY=returned list, ORFROM=text to $O from, ORDIR=$O direction.
"RTN","ORWU1",10,0)
 ;  ORKEY=Screen users by security key (optional).
"RTN","ORWU1",11,0)
 ;  ORDATE=Checks for an active person class on this date (optional).
"RTN","ORWU1",12,0)
 ;  ORALLUSE=If not true, screens for providers; currently that
"RTN","ORWU1",13,0)
 ;           amounts to only a check for terminated users (optional).
"RTN","ORWU1",14,0)
 ;  ORVIZ=If true, includes RDV users; otherwise not (optional).
"RTN","ORWU1",15,0)
 N ORI,ORIEN1,ORCNT,ORNAME,ORTTL,ORSRV,ORDD,ORDIV,ORIEN2,ORGOOD,OR1DIV,ORCNT,ORMULTI,ORMRK,ORMAX
"RTN","ORWU1",16,0)
 S ORI=0,ORMAX=44,ORKEY=$G(ORKEY),ORDATE=$G(ORDATE)
"RTN","ORWU1",17,0)
 S ORMULTI=$$ALL^VASITE ; Do once at beginning of call.  
"RTN","ORWU1",18,0)
 S ORNAME("FILE")=200,ORNAME("FIELD")=.01 ; Array for XLFNAME call.
"RTN","ORWU1",19,0)
 F  Q:ORI'<ORMAX  S ORFROM=$O(^VA(200,"B",ORFROM),ORDIR) Q:ORFROM=""  D
"RTN","ORWU1",20,0)
 .S ORIEN1=""
"RTN","ORWU1",21,0)
 .F  S ORIEN1=$O(^VA(200,"B",ORFROM,ORIEN1),ORDIR) Q:'ORIEN1  D
"RTN","ORWU1",22,0)
 ..; Screen out RDVs if applicable:
"RTN","ORWU1",23,0)
 ..I +$G(ORVIZ)=0,$D(^VA(200,"BB","VISITOR",ORIEN1)) Q
"RTN","ORWU1",24,0)
 ..I $L(ORKEY),'$D(^XUSEC(ORKEY,+ORIEN1)) Q
"RTN","ORWU1",25,0)
 ..I +$G(ORALLUSE)=0,'$$PROVIDER^XUSER(ORIEN1) Q  ; Terminated user.
"RTN","ORWU1",26,0)
 ..I ORDATE>0,$$GET^XUA4A72(ORIEN1,ORDATE)<1 Q
"RTN","ORWU1",27,0)
 ..S ORNAME("IENS")=ORIEN1_","
"RTN","ORWU1",28,0)
 ..;S ORI=ORI+1,ORY(ORI)=ORIEN1_"^"_$$NAMEFMT^XLFNAME(.ORNAME,"F","CDcMP")
"RTN","ORWU1",29,0)
 ..S ORI=ORI+1,ORY(ORI)=ORIEN1_"^"_ORFROM
"RTN","ORWU1",30,0)
 ..S ORIEN2=ORIEN1_"," ; Add comma to IEN for DIQ calls.
"RTN","ORWU1",31,0)
 ..S ORTTL=$$GET1^DIQ(200,ORIEN2,8)  ; Get Title.
"RTN","ORWU1",32,0)
 ..S ORSRV=$$GET1^DIQ(200,ORIEN2,29) ; Get Service/Section.
"RTN","ORWU1",33,0)
 ..;
"RTN","ORWU1",34,0)
 ..; Get Default Division, if applicable:
"RTN","ORWU1",35,0)
 ..S ORDIV=""
"RTN","ORWU1",36,0)
 ..I ORMULTI D
"RTN","ORWU1",37,0)
 ...K ^TMP("DILIST",$J) ; Cleanup.
"RTN","ORWU1",38,0)
 ...D LIST^DIC(200.02,","_ORIEN1_",",".01;1","Q",,,,,,,)
"RTN","ORWU1",39,0)
 ...S OR1DIV="",(ORDD,ORGOOD,ORCNT)=0
"RTN","ORWU1",40,0)
 ...F  S ORDD=$O(^TMP("DILIST",$J,"ID",ORDD)) Q:+ORDD=0!'($L(ORDD))  D  Q:ORGOOD
"RTN","ORWU1",41,0)
 ....S ORCNT=ORCNT+1 ; Increment counter.
"RTN","ORWU1",42,0)
 ....I ORCNT=1 D
"RTN","ORWU1",43,0)
 .....I $D(^TMP("DILIST",$J,"ID",ORDD,01)) D
"RTN","ORWU1",44,0)
 ......S OR1DIV=$G(^TMP("DILIST",$J,"ID",ORDD,.01))
"RTN","ORWU1",45,0)
 ....I $G(^TMP("DILIST",$J,"ID",ORDD,1))="Yes" S ORDIV=$G(^TMP("DILIST",$J,"ID",ORDD,.01)),ORGOOD=1  Q   ; Division text.
"RTN","ORWU1",46,0)
 ...K ^TMP("DILIST",$J)             ; Cleanup.
"RTN","ORWU1",47,0)
 ...I ((ORCNT=1)&(ORDIV="")) D
"RTN","ORWU1",48,0)
 ....I OR1DIV'="" S ORDIV=OR1DIV    ; Only one? - use it.
"RTN","ORWU1",49,0)
 ..D  ; Append new pieces to array string.
"RTN","ORWU1",50,0)
 ...S ORMRK=""
"RTN","ORWU1",51,0)
 ...; Check for no data to append:
"RTN","ORWU1",52,0)
 ...I (ORTTL="")&(ORSRV="")&(ORDIV="")  Q
"RTN","ORWU1",53,0)
 ...S ORY(ORI)=ORY(ORI)_U_"- "      ; At least something exists.
"RTN","ORWU1",54,0)
 ...; Add Title if available:
"RTN","ORWU1",55,0)
 ...I (ORTTL'="") S ORY(ORI)=ORY(ORI)_ORTTL,ORMRK=", "
"RTN","ORWU1",56,0)
 ...; Add Service if available:
"RTN","ORWU1",57,0)
 ...I (ORSRV'="") S ORY(ORI)=ORY(ORI)_ORMRK_ORSRV,ORMRK=", "
"RTN","ORWU1",58,0)
 ..I ORMULTI D                      ; Add Division if applicable.
"RTN","ORWU1",59,0)
 ...I (ORDIV'="") S ORY(ORI)=ORY(ORI)_ORMRK_ORDIV
"RTN","ORWU1",60,0)
 ;
"RTN","ORWU1",61,0)
 Q
"RTN","ORWU1",62,0)
 ;
"RTN","ORWU1",63,0)
NAMECVT(Y,IEN) ; Returns text name(mixed-case) derived from IEN xref.
"RTN","ORWU1",64,0)
 ; GRE/2002
"RTN","ORWU1",65,0)
 ; PKS-12/20/2002 Tag not presently used.
"RTN","ORWU1",66,0)
 ; Y=Returned value, IEN=Internal number
"RTN","ORWU1",67,0)
 N ORNAME
"RTN","ORWU1",68,0)
 S IEN=IEN_","
"RTN","ORWU1",69,0)
 S ORNAME=$$GET1^DIQ(200,IEN,20.2)
"RTN","ORWU1",70,0)
 S Y=$$NAMEFMT^XLFNAME(.ORNAME,"F","DcMP")
"RTN","ORWU1",71,0)
 Q
"RTN","ORWU1",72,0)
 ;
"RTN","ORWU1",73,0)
DEFDIV(Y) ; Return user's default division, if specified.
"RTN","ORWU1",74,0)
 ;
"RTN","ORWU1",75,0)
 ; Variables used:
"RTN","ORWU1",76,0)
 ;   ORDD   = Default division.
"RTN","ORWU1",77,0)
 ;   ORDIV  = Division holder variable.
"RTN","ORWU1",78,0)
 ;   ORGOOD = Flag for successful default division found.
"RTN","ORWU1",79,0)
 ;   ORIEN  = IEN of user.
"RTN","ORWU1",80,0)
 ;   Y      = Returned value.
"RTN","ORWU1",81,0)
 ;
"RTN","ORWU1",82,0)
 N ORDD,ORDIV,ORGOOD
"RTN","ORWU1",83,0)
 ;
"RTN","ORWU1",84,0)
 S ORIEN=DUZ,ORDIV=""
"RTN","ORWU1",85,0)
 K ^TMP("DILIST",$J) ; Cleanup.
"RTN","ORWU1",86,0)
 S Y=0,(ORDD,ORGOOD)=0             ; Initialize variables.
"RTN","ORWU1",87,0)
 ;
"RTN","ORWU1",88,0)
 ; Get list of divisions from NEW PERSON file multiple:
"RTN","ORWU1",89,0)
 D LIST^DIC(200.02,","_ORIEN_",",".01;1","Q",,,,,,,)
"RTN","ORWU1",90,0)
 ;
"RTN","ORWU1",91,0)
 ; Iterate through list:
"RTN","ORWU1",92,0)
 F  S ORDD=$O(^TMP("DILIST",$J,"ID",ORDD)) Q:+ORDD=0!'($L(ORDD))  D  Q:ORGOOD
"RTN","ORWU1",93,0)
 .I $G(^TMP("DILIST",$J,"ID",ORDD,1))="Yes" S ORDIV=$G(^TMP("DILIST",$J,"ID",ORDD,.01)),ORGOOD=1  Q     ; Division text.
"RTN","ORWU1",94,0)
 K ^TMP("DILIST",$J)               ; Cleanup.
"RTN","ORWU1",95,0)
 I (ORDIV="") Q                    ; Punt if no default division.
"RTN","ORWU1",96,0)
 I $$UP^XLFSTR(ORDIV)="SALT LAKE CITY OIFO" S Y=1
"RTN","ORWU1",97,0)
 ;
"RTN","ORWU1",98,0)
 Q
"RTN","ORWU1",99,0)
 ;
"RTN","ORWU1",100,0)
NEWLOC(Y,ORFROM,DIR) ; Return "CWZ" locations from HOSPITAL LOCATION file.
"RTN","ORWU1",101,0)
 ; C=Clinics, W=Wards, Z=Other, screened by $$ACTLOC^ORWU.
"RTN","ORWU1",102,0)
 ; .Y=returned list, ORFROM=text to $O from, DIR=$O direction.
"RTN","ORWU1",103,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU1",104,0)
 F  Q:I'<CNT  S ORFROM=$O(^SC("B",ORFROM),DIR) Q:ORFROM=""  D
"RTN","ORWU1",105,0)
 . S IEN="" F  S IEN=$O(^SC("B",ORFROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU1",106,0)
 . . Q:("CWZ"'[$P($G(^SC(IEN,0)),U,3)!('$$ACTLOC^ORWU(IEN)))
"RTN","ORWU1",107,0)
 . . S I=I+1,Y(I)=IEN_"^"_ORFROM
"RTN","ORWU1",108,0)
 Q
"RTN","ORWU1",109,0)
 ;
"RTN","ORY149")
0^20^B5884700
"RTN","ORY149",1,0)
ORY149 ;SLC/PKS -- postinit rtn for OR*3*149 ;12/13/01  06:25 [7/1/03 2:29pm]
"RTN","ORY149",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**149**;Dec 17, 1997
"RTN","ORY149",3,0)
 ;
"RTN","ORY149",4,0)
 I '$L($T(SETDTEXT^ORWOR1)) D
"RTN","ORY149",5,0)
 . W !,"Please install patch OR*3.0*163v11 or later before proceeding with this install",!
"RTN","ORY149",6,0)
 . S XPDQUIT=2
"RTN","ORY149",7,0)
 Q
"RTN","ORY149",8,0)
 ;
"RTN","ORY149",9,0)
PRE ; -- preinit
"RTN","ORY149",10,0)
 ;
"RTN","ORY149",11,0)
 Q
"RTN","ORY149",12,0)
 ;
"RTN","ORY149",13,0)
POST ; -- postinit
"RTN","ORY149",14,0)
 ;
"RTN","ORY149",15,0)
 N VER
"RTN","ORY149",16,0)
 ;
"RTN","ORY149",17,0)
 S VER=$P($T(VERSION^ORY149),";",3)
"RTN","ORY149",18,0)
 I +$$PATCH^XPDUTL("TIU*1.0*112") D SURGREG
"RTN","ORY149",19,0)
 D SETVAL
"RTN","ORY149",20,0)
 D MAIL
"RTN","ORY149",21,0)
 ;
"RTN","ORY149",22,0)
 Q
"RTN","ORY149",23,0)
 ;
"RTN","ORY149",24,0)
SURGREG ; Register TIU SURGERY RPCs if TIU*1.0*112 present
"RTN","ORY149",25,0)
 N MENU,RPC
"RTN","ORY149",26,0)
 S MENU="OR CPRS GUI CHART"
"RTN","ORY149",27,0)
 F RPC="TIU IS THIS A SURGERY?","TIU IDENTIFY SURGERY CLASS","TIU LONG LIST SURGERY TITLES","TIU GET DOCUMENTS FOR REQUEST" D INSERT(MENU,RPC)
"RTN","ORY149",28,0)
 Q
"RTN","ORY149",29,0)
 ;
"RTN","ORY149",30,0)
INSERT(OPTION,RPC) ; Call FM Updater with each RPC
"RTN","ORY149",31,0)
 ; Input  -- OPTION   Option file (#19) Name field (#.01)
"RTN","ORY149",32,0)
 ;           RPC      RPC sub-file (#19.05) RPC field (#.01)
"RTN","ORY149",33,0)
 ; Output -- None
"RTN","ORY149",34,0)
 N FDA,FDAIEN,ERR,DIERR
"RTN","ORY149",35,0)
 S FDA(19,"?1,",.01)=OPTION
"RTN","ORY149",36,0)
 S FDA(19.05,"?+2,?1,",.01)=RPC
"RTN","ORY149",37,0)
 D UPDATE^DIE("E","FDA","FDAIEN","ERR")
"RTN","ORY149",38,0)
 Q
"RTN","ORY149",39,0)
 ;
"RTN","ORY149",40,0)
SENDPAR(ANAME) ; Return true if the current parameter should be sent.
"RTN","ORY149",41,0)
 I ANAME="ORWOR SHOW CONSULTS" Q 1
"RTN","ORY149",42,0)
 I ANAME="ORWOR SPELL CHECK ENABLED?" Q 1
"RTN","ORY149",43,0)
 Q 0
"RTN","ORY149",44,0)
 ;
"RTN","ORY149",45,0)
SETVAL ;       Set package-level values for params
"RTN","ORY149",46,0)
 N VAL S VAL=1
"RTN","ORY149",47,0)
 D PUT^XPAR("PKG","ORWOR SHOW CONSULTS",1,VAL)
"RTN","ORY149",48,0)
 D PUT^XPAR("PKG","ORWOR SPELL CHECK ENABLED?",1,VAL)
"RTN","ORY149",49,0)
 Q
"RTN","ORY149",50,0)
 ;
"RTN","ORY149",51,0)
SENDRPT(ANAME) ;Return true if the current report should be sent.
"RTN","ORY149",52,0)
 I ANAME="ORRP IMAGING" Q 1
"RTN","ORY149",53,0)
 Q 0
"RTN","ORY149",54,0)
 ;
"RTN","ORY149",55,0)
MAIL ; send bulletin of installation time
"RTN","ORY149",56,0)
 N COUNT,DIFROM,I,START,TEXT,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","ORY149",57,0)
 S COUNT=0
"RTN","ORY149",58,0)
 S XMSUB="Version "_$P($T(VERSION),";;",2)_" Installed"
"RTN","ORY149",59,0)
 S XMDUZ="CPRS PACKAGE"
"RTN","ORY149",60,0)
 F I="G.CPRS GUI INSTALL@ISC-SLC.VA.GOV",DUZ S XMY(I)=""
"RTN","ORY149",61,0)
 S XMTEXT="TEXT("
"RTN","ORY149",62,0)
 ;
"RTN","ORY149",63,0)
 S X=$P($T(VERSION),";;",2)
"RTN","ORY149",64,0)
 D LINE("Version "_X_" has been installed.")
"RTN","ORY149",65,0)
 D LINE(" ")
"RTN","ORY149",66,0)
 D LINE("Install complete:  "_$$FMTE^XLFDT($$NOW^XLFDT()))
"RTN","ORY149",67,0)
 ;
"RTN","ORY149",68,0)
 D ^XMD
"RTN","ORY149",69,0)
 Q
"RTN","ORY149",70,0)
 ;
"RTN","ORY149",71,0)
LINE(DATA)      ; set text into array
"RTN","ORY149",72,0)
 S COUNT=COUNT+1
"RTN","ORY149",73,0)
 S TEXT(COUNT)=DATA
"RTN","ORY149",74,0)
 Q
"RTN","ORY149",75,0)
 ;
"RTN","ORY149",76,0)
VERSION ;;21.18
"VER")
8.0^22.0
"^DD",101.24,101.24,0)
FIELD^^10^36
"^DD",101.24,101.24,0,"DDA")
N
"^DD",101.24,101.24,0,"DT")
3021029
"^DD",101.24,101.24,0,"ID",.23)
W:$D(^(2)) "   ",$P(^(2),U,3)
"^DD",101.24,101.24,0,"ID",.24)
W:$D(^(2)) "   ",$P(^(2),U,4)
"^DD",101.24,101.24,0,"IX","AC",101.24,.02)

"^DD",101.24,101.24,0,"IX","B",101.24,.01)

"^DD",101.24,101.24,0,"NM","OE/RR REPORT")

"^DD",101.24,101.24,0,"PT",101.24,.18)

"^DD",101.24,101.24,0,"PT",101.241,.01)

"^DD",101.24,101.24,0,"VRPK")
OR
"^DD",101.24,101.24,.001,0)
NUMBER^NJ5,0^^ ^K:+X'=X!(X>10000)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.24,101.24,.001,3)
Type a Number between 1 and 10000, 0 Decimal Digits
"^DD",101.24,101.24,.001,21,0)
^^1^1^3000921^
"^DD",101.24,101.24,.001,21,1,0)
This is the Number field for the file.
"^DD",101.24,101.24,.001,"DT")
3000920
"^DD",101.24,101.24,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",101.24,101.24,.01,1,0)
^.1^^-1
"^DD",101.24,101.24,.01,1,1,0)
101.24^B
"^DD",101.24,101.24,.01,1,1,1)
S ^ORD(101.24,"B",$E(X,1,30),DA)=""
"^DD",101.24,101.24,.01,1,1,2)
K ^ORD(101.24,"B",$E(X,1,30),DA)
"^DD",101.24,101.24,.01,3)
Answer must be 3-30 characters in length.
"^DD",101.24,101.24,.01,21,0)
^^1^1^3000921^
"^DD",101.24,101.24,.01,21,1,0)
This is the Name of the report.
"^DD",101.24,101.24,.01,"DT")
3010510
"^DD",101.24,101.24,.02,0)
ID^RF^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",101.24,101.24,.02,1,0)
^.1
"^DD",101.24,101.24,.02,1,1,0)
101.24^AC
"^DD",101.24,101.24,.02,1,1,1)
S ^ORD(101.24,"AC",$E(X,1,30),DA)=""
"^DD",101.24,101.24,.02,1,1,2)
K ^ORD(101.24,"AC",$E(X,1,30),DA)
"^DD",101.24,101.24,.02,1,1,"DT")
3001005
"^DD",101.24,101.24,.02,3)
Answer must be 1-10 characters in length.
"^DD",101.24,101.24,.02,21,0)
^^4^4^3000921^
"^DD",101.24,101.24,.02,21,1,0)
This is the code that identifies the report.  Each tab in CPRS that
"^DD",101.24,101.24,.02,21,2,0)
uses reports looks for this ID in order to process the report.
"^DD",101.24,101.24,.02,21,3,0)
Each tab also uses a unique set of ID's.  An ID of 5 on the Reports
"^DD",101.24,101.24,.02,21,4,0)
Tab may not identify the same report on a different tab.
"^DD",101.24,101.24,.02,"DT")
3001005
"^DD",101.24,101.24,.03,0)
REMOTE^S^1:YES;^0;3^Q
"^DD",101.24,101.24,.03,21,0)
^^2^2^3000921^
"^DD",101.24,101.24,.03,21,1,0)
This field is used to identify which reports allow remote access through
"^DD",101.24,101.24,.03,21,2,0)
Remote Data Views.
"^DD",101.24,101.24,.03,"DT")
3000907
"^DD",101.24,101.24,.04,0)
QUALIFIER^S^1:HSType;2:DateTime;3:Imaging;4:NutrAssess;19:MedicineProcedure;39:ListView;5:HSComponent;6:HSWPComponent;28:Surgery;^0;4^Q
"^DD",101.24,101.24,.04,21,0)
^.001^2^2^3010531^^^
"^DD",101.24,101.24,.04,21,1,0)
This field identifies which qualifier to use when processing the report.
"^DD",101.24,101.24,.04,21,2,0)
Examples of qualifiers are HSType, DateTime, Imaging and NutrAssess.
"^DD",101.24,101.24,.04,"DT")
3011004
"^DD",101.24,101.24,.05,0)
ROUTINE^FI^^0;5^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.05,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.05,8.5)
@
"^DD",101.24,101.24,.05,9)
@
"^DD",101.24,101.24,.05,21,0)
^.001^1^1^3001026^^^
"^DD",101.24,101.24,.05,21,1,0)
This is the routine that is invoked to produce the report.
"^DD",101.24,101.24,.05,23,0)
^.001^2^2^3001026^^
"^DD",101.24,101.24,.05,23,1,0)
The Labs Tab does not have a value for this field.  The CPRS executable
"^DD",101.24,101.24,.05,23,2,0)
calls separate RPC's for each report.
"^DD",101.24,101.24,.05,"DT")
3030107
"^DD",101.24,101.24,.06,0)
ENTRY POINT^FI^^0;6^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.06,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.06,8.5)
@
"^DD",101.24,101.24,.06,9)
@
"^DD",101.24,101.24,.06,21,0)
^.001^2^2^3001026^^
"^DD",101.24,101.24,.06,21,1,0)
This is the entry point for the ROUTINE that is invoked to produce the
"^DD",101.24,101.24,.06,21,2,0)
report.
"^DD",101.24,101.24,.06,23,0)
^.001^2^2^3001026^^
"^DD",101.24,101.24,.06,23,1,0)
The Labs Tab does not have a value for this field.  The CPRS executable
"^DD",101.24,101.24,.06,23,2,0)
calls separate RPC's for each report.
"^DD",101.24,101.24,.06,"DT")
3030107
"^DD",101.24,101.24,.07,0)
CATEGORY^S^0:FIXED;1:FIXED W/DATE;2:FIXED W/HEADER;3:FIXED W/DATE&HEADER;4:SPECIALIZED;5:GRAPHIC;6:LISTVIEW;^0;7^Q
"^DD",101.24,101.24,.07,3)
Enter a category for this report
"^DD",101.24,101.24,.07,21,0)
^^2^2^3001004^
"^DD",101.24,101.24,.07,21,1,0)
This field puts reports into a category that is evaluated by the GUI
"^DD",101.24,101.24,.07,21,2,0)
when the report is processed.
"^DD",101.24,101.24,.07,"DT")
3010215
"^DD",101.24,101.24,.08,0)
TAB^S^R:REPORTS TAB;L:LABS TAB;C:COVER SHEET;CD:COVER SHEET DETAILS;^0;8^Q
"^DD",101.24,101.24,.08,3)
Enter the appropriate code for this report.
"^DD",101.24,101.24,.08,21,0)
^.001^1^1^3001003^^
"^DD",101.24,101.24,.08,21,1,0)
This fields identifies the appropriate tab for a report in CPRS.
"^DD",101.24,101.24,.08,"DT")
3001011
"^DD",101.24,101.24,.09,0)
MIXEDCASE^S^1:YES;^0;9^Q
"^DD",101.24,101.24,.09,3)
Enter YES to display the list in mixed case
"^DD",101.24,101.24,.09,21,0)
^^2^2^3001004^
"^DD",101.24,101.24,.09,21,1,0)
This is used in the cover sheet and is used to display the returned
"^DD",101.24,101.24,.09,21,2,0)
list in mixed case.
"^DD",101.24,101.24,.09,"DT")
3001004
"^DD",101.24,101.24,.1,0)
INVERT^S^1:YES;^0;10^Q
"^DD",101.24,101.24,.1,3)
Enter YES to have the returned list inverted.
"^DD",101.24,101.24,.1,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.1,21,1,0)
This field is used to invert a list of data returned in the Cover sheet
"^DD",101.24,101.24,.1,"DT")
3001004
"^DD",101.24,101.24,.11,0)
TEXT COLOR^S^Black:BLACK;Maroon:MAROON;Green:GREEN;Olive:OLIVE;Purple:PURPLE;Teal:TEAL;Red:RED;Lime:LIME;Yellow:YELLOW;Blue:BLUE;Fuchsia:FUCHSIA;Aqua:AQUA;^0;11^Q
"^DD",101.24,101.24,.11,3)
Enter the color for the text
"^DD",101.24,101.24,.11,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.11,21,1,0)
This field determines the text color for the returned data.
"^DD",101.24,101.24,.11,"DT")
3001004
"^DD",101.24,101.24,.12,0)
TYPE^S^R:REPORT;H:HTML;L:LISTMAN ONLY;S:SELECTION LIST;V:LISTVIEW;M:MENU;^0;12^Q
"^DD",101.24,101.24,.12,3)
Enter the type for this entry.
"^DD",101.24,101.24,.12,21,0)
^.001^1^1^3001017^^
"^DD",101.24,101.24,.12,21,1,0)
This field identifies the type for an entry.
"^DD",101.24,101.24,.12,"DT")
3010315
"^DD",101.24,101.24,.13,0)
RPC^P8994'^XWB(8994,^0;13^Q
"^DD",101.24,101.24,.13,3)
Select the RPC that produces this report.
"^DD",101.24,101.24,.13,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.13,21,1,0)
This is the RPC that is called inside the GUI to produce the report.
"^DD",101.24,101.24,.13,"DT")
3001004
"^DD",101.24,101.24,.14,0)
DATE FORMAT^S^D:DATE ONLY;T:DATE WITH TIME;^0;14^Q
"^DD",101.24,101.24,.14,3)
Enter the code for the desired date format.
"^DD",101.24,101.24,.14,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.14,21,1,0)
This field determines what kind of format to display date/time fields.
"^DD",101.24,101.24,.14,"DT")
3001004
"^DD",101.24,101.24,.15,0)
DATE PIECE^NJ2,0^^0;15^K:+X'=X!(X>15)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.24,101.24,.15,3)
Type a Number between 1 and 15, 0 Decimal Digits
"^DD",101.24,101.24,.15,21,0)
^^2^2^3001004^
"^DD",101.24,101.24,.15,21,1,0)
This is used on the Cover Sheet to determine which piece the date field
"^DD",101.24,101.24,.15,21,2,0)
occupies.
"^DD",101.24,101.24,.15,"DT")
3001004
"^DD",101.24,101.24,.16,0)
TAB POSITIONS^F^^0;16^K:$L(X)>15!($L(X)<1) X
"^DD",101.24,101.24,.16,3)
Answer must be 1-15 characters in length.
"^DD",101.24,101.24,.16,21,0)
^^2^2^3001005^
"^DD",101.24,101.24,.16,21,1,0)
This is the value that will be used for the Tab property for the listbox
"^DD",101.24,101.24,.16,21,2,0)
associated with this report on the Cover Sheet.
"^DD",101.24,101.24,.16,"DT")
3001005
"^DD",101.24,101.24,.17,0)
PIECES^F^^0;17^K:$L(X)>20!($L(X)<1) X
"^DD",101.24,101.24,.17,3)
Answer must be 1-20 characters in length.
"^DD",101.24,101.24,.17,21,0)
^^2^2^3001011^
"^DD",101.24,101.24,.17,21,1,0)
This field is used by the Cover Sheet to determine what pieces of data
"^DD",101.24,101.24,.17,21,2,0)
to display in the listbox.
"^DD",101.24,101.24,.17,"DT")
3001011
"^DD",101.24,101.24,.18,0)
DETAIL REPORT^*P101.24'^ORD(101.24,^0;18^S DIC("S")="I $P(^(0),""^"",8)=""CD""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",101.24,101.24,.18,3)
Enter the report to get the details for this report.
"^DD",101.24,101.24,.18,12)
Allow only Cover sheet detail type reports
"^DD",101.24,101.24,.18,12.1)
S DIC("S")="I $P(^(0),""^"",8)=""CD"""
"^DD",101.24,101.24,.18,21,0)
^^1^1^3001011^
"^DD",101.24,101.24,.18,21,1,0)
This field is used to get the details of an item on the cover sheet.
"^DD",101.24,101.24,.18,"DT")
3001011
"^DD",101.24,101.24,.19,0)
REPORT TAG^FI^^0;19^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.19,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.19,21,0)
^.001^1^1^3010503^^
"^DD",101.24,101.24,.19,21,1,0)
This is the entry point tag for a report extract.
"^DD",101.24,101.24,.19,"DT")
3011004
"^DD",101.24,101.24,.191,0)
REPORT ROUTINE^FI^^0;20^K:$L(X)>8!($L(X)<3) X
"^DD",101.24,101.24,.191,3)
Answer must be 3-8 characters in length.
"^DD",101.24,101.24,.191,21,0)
^.001^1^1^3010503^^
"^DD",101.24,101.24,.191,21,1,0)
This is the routine associated with the REPORT TAG for report extracts.
"^DD",101.24,101.24,.191,"DT")
3011004
"^DD",101.24,101.24,.192,0)
REPORT COMPONENT^P142.1'^GMT(142.1,^0;21^Q
"^DD",101.24,101.24,.192,21,0)
^.001^1^1^3010503^^
"^DD",101.24,101.24,.192,21,1,0)
This is the report component associated with this report.
"^DD",101.24,101.24,.192,"DT")
3010503
"^DD",101.24,101.24,.21,0)
PARAM 1^F^^2;1^K:$L(X)>30!($L(X)<1) X
"^DD",101.24,101.24,.21,3)
Answer must be 1-30 characters in length.
"^DD",101.24,101.24,.21,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.21,21,1,0)
This is the 1st parameter passed to the RPC, if needed.
"^DD",101.24,101.24,.21,"DT")
3001004
"^DD",101.24,101.24,.22,0)
PARAM 2^F^^2;2^K:$L(X)>30!($L(X)<1) X
"^DD",101.24,101.24,.22,3)
Answer must be 1-30 characters in length.
"^DD",101.24,101.24,.22,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.22,21,1,0)
This is the 2nd parameter passed to the RPC, if needed.
"^DD",101.24,101.24,.22,"DT")
3001004
"^DD",101.24,101.24,.23,0)
HEADING^F^^2;3^K:$L(X)>75!($L(X)<1) X
"^DD",101.24,101.24,.23,1,0)
^.1^^0
"^DD",101.24,101.24,.23,3)
Answer must be 1-75 characters in length.
"^DD",101.24,101.24,.23,21,0)
^^1^1^3001031^
"^DD",101.24,101.24,.23,21,1,0)
This is the heading used on the Cover sheet for the list of items.
"^DD",101.24,101.24,.23,"DT")
3010510
"^DD",101.24,101.24,.24,0)
DESCRIPTIVE TEXT^RF^^2;4^K:$L(X)>55!($L(X)<2) X
"^DD",101.24,101.24,.24,3)
Answer must be 2-55 characters in length.
"^DD",101.24,101.24,.24,21,0)
^.001^2^2^3010510^^
"^DD",101.24,101.24,.24,21,1,0)
This is a more descriptive name than what might be included in the 
"^DD",101.24,101.24,.24,21,2,0)
NAME field.
"^DD",101.24,101.24,.24,"DT")
3010510
"^DD",101.24,101.24,.25,0)
NODE^F^^2;5^K:$L(X)>10!($L(X)<1) X
"^DD",101.24,101.24,.25,3)
Answer must be 1-10 characters in length.
"^DD",101.24,101.24,.25,21,0)
^^2^2^3001005^
"^DD",101.24,101.24,.25,21,1,0)
This is used by the Cover Sheet routines to define the node in the ^XTMP
"^DD",101.24,101.24,.25,21,2,0)
global to store the data.
"^DD",101.24,101.24,.25,"DT")
3001005
"^DD",101.24,101.24,.26,0)
PRINT TAG^FI^^2;6^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.26,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.26,21,0)
^^2^2^3010614^
"^DD",101.24,101.24,.26,21,1,0)
This is the entry point tag used when printing reports that do their own
"^DD",101.24,101.24,.26,21,2,0)
Write statements.
"^DD",101.24,101.24,.26,"DT")
3020924
"^DD",101.24,101.24,.27,0)
PRINT ROUTINE^FI^^2;7^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.27,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.27,21,0)
^^2^2^3010614^
"^DD",101.24,101.24,.27,21,1,0)
This is the entry point routine used when printing reports that do their own
"^DD",101.24,101.24,.27,21,2,0)
Write statements.
"^DD",101.24,101.24,.27,"DT")
3020924
"^DD",101.24,101.24,.28,0)
EXTRACT TAG^FI^^2;8^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.28,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.28,21,0)
^^2^2^3010711^
"^DD",101.24,101.24,.28,21,1,0)
This is the entry point for the extract routine that pulls the data from
"^DD",101.24,101.24,.28,21,2,0)
package API's and/or package files.
"^DD",101.24,101.24,.28,"DT")
3011004
"^DD",101.24,101.24,.29,0)
EXTRACT ROUTINE^FI^^2;9^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.29,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.29,21,0)
^^2^2^3010711^
"^DD",101.24,101.24,.29,21,1,0)
This is the extract routine that pulls data from package API's and/or
"^DD",101.24,101.24,.29,21,2,0)
package files.
"^DD",101.24,101.24,.29,"DT")
3011004
"^DD",101.24,101.24,.41,0)
SORT ORDER^F^^4;1^K:$L(X)>15!($L(X)<3)!'(X?1N1":"1N) X
"^DD",101.24,101.24,.41,3)
Answer must be 3-15 characters in length.
"^DD",101.24,101.24,.41,21,0)
^^6^6^3010717^
"^DD",101.24,101.24,.41,21,1,0)
This field is used when sorting columns of data on at grid within CPRS.
"^DD",101.24,101.24,.41,21,2,0)
It determines the sort order to be used in a multi-column sort.  The
"^DD",101.24,101.24,.41,21,3,0)
primary sort column is always the column header clicked on by the user.
"^DD",101.24,101.24,.41,21,4,0)
If this field has values in the form #:#, then a multi-column sort is
"^DD",101.24,101.24,.41,21,5,0)
done, using the column numbers identified in this field for the second
"^DD",101.24,101.24,.41,21,6,0)
and third level sorting.
"^DD",101.24,101.24,.41,"DT")
3010717
"^DD",101.24,101.24,.42,0)
MAXIMUM DAYS BACK^NJ4,0^^4;2^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.24,101.24,.42,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",101.24,101.24,.42,21,0)
^^1^1^3011004^
"^DD",101.24,101.24,.42,21,1,0)
This field restricts the report date range to the maximum value specified.
"^DD",101.24,101.24,.42,"DT")
3011004
"^DD",101.24,101.24,.43,0)
FHIE REPORT^S^1:YES;0:NO;^4;3^Q
"^DD",101.24,101.24,.43,3)
Enter YES if this report is available through FHIE.
"^DD",101.24,101.24,.43,21,0)
^.001^3^3^3021029^^^
"^DD",101.24,101.24,.43,21,1,0)
This field identifies reports that are available through FHIE.
"^DD",101.24,101.24,.43,21,2,0)
Reports that have not been coded for FHIE should have this field
"^DD",101.24,101.24,.43,21,3,0)
set to NO or left blank.
"^DD",101.24,101.24,.43,23,0)
^.001^3^3^3021029^^
"^DD",101.24,101.24,.43,23,1,0)
This field is not looked at by reports that have a 'listview' format.
"^DD",101.24,101.24,.43,23,2,0)
It is only used by straight text reports that go through the routine:
"^DD",101.24,101.24,.43,23,3,0)
  ORDV01
"^DD",101.24,101.24,.43,"DT")
3021029
"^DD",101.24,101.24,3,0)
COLUMN HEADERS^101.243^^3;0
"^DD",101.24,101.24,10,0)
ITEM^101.241P^^10;0
"^DD",101.24,101.241,0)
ITEM SUB-FIELD^^.03^3
"^DD",101.24,101.241,0,"DT")
3010215
"^DD",101.24,101.241,0,"IX","B",101.241,.01)

"^DD",101.24,101.241,0,"NM","ITEM")

"^DD",101.24,101.241,0,"UP")
101.24
"^DD",101.24,101.241,.01,0)
ITEM^MP101.24^ORD(101.24,^0;1^Q
"^DD",101.24,101.241,.01,1,0)
^.1
"^DD",101.24,101.241,.01,1,1,0)
101.241^B
"^DD",101.24,101.241,.01,1,1,1)
S ^ORD(101.24,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",101.24,101.241,.01,1,1,2)
K ^ORD(101.24,DA(1),10,"B",$E(X,1,30),DA)
"^DD",101.24,101.241,.01,3)

"^DD",101.24,101.241,.01,21,0)
^^1^1^3010215^
"^DD",101.24,101.241,.01,21,1,0)
This is used in building a treeview of reports for CPRS GUI.
"^DD",101.24,101.241,.01,"DT")
3010215
"^DD",101.24,101.241,.02,0)
HEADER TEXT^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",101.24,101.241,.02,3)
Answer must be 1-30 characters in length.
"^DD",101.24,101.241,.02,21,0)
^^1^1^3010215^
"^DD",101.24,101.241,.02,21,1,0)
This is the header to be used.
"^DD",101.24,101.241,.02,"DT")
3010215
"^DD",101.24,101.241,.03,0)
SEQUENCE^NJ7,1^^0;3^K:+X'=X!(X>99999)!(X<.1)!(X?.E1"."2N.N) X
"^DD",101.24,101.241,.03,3)
Type a Number between .1 and 99999, 1 Decimal Digit
"^DD",101.24,101.241,.03,21,0)
^^1^1^3010215^
"^DD",101.24,101.241,.03,21,1,0)
This is the sequence number for this report.
"^DD",101.24,101.241,.03,"DT")
3010215
"^DD",101.24,101.243,0)
COLUMN HEADERS SUB-FIELD^^.1^10
"^DD",101.24,101.243,0,"DT")
3010727
"^DD",101.24,101.243,0,"IX","B",101.243,.01)

"^DD",101.24,101.243,0,"IX","C",101.243,.03)

"^DD",101.24,101.243,0,"NM","COLUMN HEADERS")

"^DD",101.24,101.243,0,"UP")
101.24
"^DD",101.24,101.243,.01,0)
COLUMN HEADERS^MF^^0;1^K:$L(X)>60!($L(X)<1) X
"^DD",101.24,101.243,.01,1,0)
^.1
"^DD",101.24,101.243,.01,1,1,0)
101.243^B
"^DD",101.24,101.243,.01,1,1,1)
S ^ORD(101.24,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",101.24,101.243,.01,1,1,2)
K ^ORD(101.24,DA(1),3,"B",$E(X,1,30),DA)
"^DD",101.24,101.243,.01,3)
Answer must be 1-60 characters in length.
"^DD",101.24,101.243,.01,21,0)
^.001^1^1^3010709^^^^
"^DD",101.24,101.243,.01,21,1,0)
These are the column headings used on a report in ListView format.
"^DD",101.24,101.243,.01,"DT")
3010709
"^DD",101.24,101.243,.02,0)
VISIBLE^S^0:YES;1:NO;^0;2^Q
"^DD",101.24,101.243,.02,3)
Set this field to NO to hide the column.
"^DD",101.24,101.243,.02,21,0)
^^1^1^3010420^
"^DD",101.24,101.243,.02,21,1,0)
This field determines the visible property of the column.
"^DD",101.24,101.243,.02,"DT")
3010420
"^DD",101.24,101.243,.03,0)
SEQUENCE^NJ6,1^^0;3^K:+X'=X!(X>9999)!(X<.1)!(X?.E1"."2N.N) X
"^DD",101.24,101.243,.03,1,0)
^.1
"^DD",101.24,101.243,.03,1,1,0)
101.243^C
"^DD",101.24,101.243,.03,1,1,1)
S ^ORD(101.24,DA(1),3,"C",$E(X,1,30),DA)=""
"^DD",101.24,101.243,.03,1,1,2)
K ^ORD(101.24,DA(1),3,"C",$E(X,1,30),DA)
"^DD",101.24,101.243,.03,1,1,"DT")
3010321
"^DD",101.24,101.243,.03,3)
Type a Number between .1 and 9999, 1 Decimal Digit
"^DD",101.24,101.243,.03,21,0)
^^1^1^3010215^
"^DD",101.24,101.243,.03,21,1,0)
This is the sequence for the column header.
"^DD",101.24,101.243,.03,"DT")
3010321
"^DD",101.24,101.243,.04,0)
TYPE^S^0:SINGLE PIECE VALUE;1:WORD PROCESSING;^0;4^Q
"^DD",101.24,101.243,.04,3)
Enter '1' if the value of this column contains multiple lines of text.
"^DD",101.24,101.243,.04,21,0)
^^1^1^3010420^
"^DD",101.24,101.243,.04,21,1,0)
This field identifies columns that contain multiple lines of text.
"^DD",101.24,101.243,.04,"DT")
3010420
"^DD",101.24,101.243,.05,0)
INCLUDE ON DETAIL^S^0:NO;1:YES;^0;5^Q
"^DD",101.24,101.243,.05,3)
Enter YES to include this field in detailed report
"^DD",101.24,101.243,.05,21,0)
^.001^2^2^3010628^^^^
"^DD",101.24,101.243,.05,21,1,0)
This field is used to determine what data to include in the details of
"^DD",101.24,101.243,.05,21,2,0)
a report.
"^DD",101.24,101.243,.05,"DT")
3010628
"^DD",101.24,101.243,.06,0)
PRINT LENGTH^NJ2,0^^0;6^K:+X'=X!(X>20)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.24,101.243,.06,3)
Type a Number between 1 and 20, 0 Decimal Digits
"^DD",101.24,101.243,.06,21,0)
^^1^1^3010628^
"^DD",101.24,101.243,.06,21,1,0)
This is the field length used when printing this column on a report.
"^DD",101.24,101.243,.06,"DT")
3010628
"^DD",101.24,101.243,.07,0)
INCLUDE ON PRINT^S^0:NO;1:YES;^0;7^Q
"^DD",101.24,101.243,.07,21,0)
^^2^2^3010628^
"^DD",101.24,101.243,.07,21,1,0)
This field determines which columns are included when a printout is
"^DD",101.24,101.243,.07,21,2,0)
requested.
"^DD",101.24,101.243,.07,"DT")
3010628
"^DD",101.24,101.243,.08,0)
PRINT TITLE^F^^0;8^K:$L(X)>20!($L(X)<1) X
"^DD",101.24,101.243,.08,3)
Answer must be 1-20 characters in length.
"^DD",101.24,101.243,.08,21,0)
^^1^1^3010628^
"^DD",101.24,101.243,.08,21,1,0)
This field is used when printing this field in lieu of the Column Header.
"^DD",101.24,101.243,.08,"DT")
3010628
"^DD",101.24,101.243,.09,0)
DATA TYPE^S^0:FREE TEXT;1:NUMERIC;2:DATE/TIME;^0;9^Q
"^DD",101.24,101.243,.09,3)
Enter the type of data that is in this column.
"^DD",101.24,101.243,.09,21,0)
^.001^3^3^3010718^^
"^DD",101.24,101.243,.09,21,1,0)
This is the data type of the column.  It is used when sorting columns.
"^DD",101.24,101.243,.09,21,2,0)
The default data type is 0 - FREE TEXT.  If no value is entered, it is
"^DD",101.24,101.243,.09,21,3,0)
assumed to be FREE TEXT.
"^DD",101.24,101.243,.09,"DT")
3010718
"^DD",101.24,101.243,.1,0)
WIDTH^NJ4,0^^0;10^K:+X'=X!(X>4000)!(X<-2)!(X?.E1"."1N.N) X
"^DD",101.24,101.243,.1,3)
Type a Number between -2 and 4000, 0 Decimal Digits
"^DD",101.24,101.243,.1,21,0)
^^5^5^3010727^
"^DD",101.24,101.243,.1,21,1,0)
This field is for the column width.  No value needs to be entered because
"^DD",101.24,101.243,.1,21,2,0)
the value is actually obtained from a User level parameter.  The field
"^DD",101.24,101.243,.1,21,3,0)
is defined here to reserve the 10 piece of this node so that future
"^DD",101.24,101.243,.1,21,4,0)
field definitions won't break the RPC used in CPRS to get column properties
"^DD",101.24,101.243,.1,21,5,0)
where the width is stored in the 10 piece.
"^DD",101.24,101.243,.1,"DT")
3010727
"^DD",8989.51,8989.51,0)
FIELD^^30^19
"^DD",8989.51,8989.51,0,"DDA")
N
"^DD",8989.51,8989.51,0,"DT")
2970621
"^DD",8989.51,8989.51,0,"ID","WRITE")
N X S X=^(0) D EN^DDIOL($P(X,U,2),"","?36")
"^DD",8989.51,8989.51,0,"IX","AG",8989.513,.02)

"^DD",8989.51,8989.51,0,"IX","B",8989.51,.01)

"^DD",8989.51,8989.51,0,"IX","C",8989.51,.02)

"^DD",8989.51,8989.51,0,"IX","D",8989.51,.01)

"^DD",8989.51,8989.51,0,"IX","D",8989.514,.01)

"^DD",8989.51,8989.51,0,"NM","PARAMETER DEFINITION")

"^DD",8989.51,8989.51,0,"PT",8989.5,.02)

"^DD",8989.51,8989.51,0,"PT",8989.52,.04)

"^DD",8989.51,8989.51,0,"PT",8989.521,.02)

"^DD",8989.51,8989.51,0,"VRPK")
OR
"^DD",8989.51,8989.51,.01,0)
NAME^RFX^^0;1^D VALID01^XPARDD1
"^DD",8989.51,8989.51,.01,1,0)
^.1
"^DD",8989.51,8989.51,.01,1,1,0)
8989.51^B
"^DD",8989.51,8989.51,.01,1,1,1)
S ^XTV(8989.51,"B",$E(X,1,30),DA)=""
"^DD",8989.51,8989.51,.01,1,1,2)
K ^XTV(8989.51,"B",$E(X,1,30),DA)
"^DD",8989.51,8989.51,.01,1,2,0)
8989.51^D^KWIC
"^DD",8989.51,8989.51,.01,1,2,1)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^XTV(8989.51,"D",I,DA)=""
"^DD",8989.51,8989.51,.01,1,2,2)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^XTV(8989.51,"D",I,DA)
"^DD",8989.51,8989.51,.01,1,2,"DT")
3000225
"^DD",8989.51,8989.51,.01,3)
Answer must be 3-30 characters in length.  Name must be unique.
"^DD",8989.51,8989.51,.01,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,.01,21,1,0)
This is the name of the parameter.  It should be namespaced according to the 
"^DD",8989.51,8989.51,.01,21,2,0)
package from which the parameter originated.
"^DD",8989.51,8989.51,.01,"DT")
2960207
"^DD",8989.51,8989.51,.02,0)
DISPLAY TEXT^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",8989.51,8989.51,.02,1,0)
^.1
"^DD",8989.51,8989.51,.02,1,1,0)
8989.51^C^MUMPS
"^DD",8989.51,8989.51,.02,1,1,1)
S ^XTV(8989.51,"C",$$UPPER^XPARDD1(X),DA)=""
"^DD",8989.51,8989.51,.02,1,1,2)
K ^XTV(8989.51,"C",$$UPPER^XPARDD1(X),DA)
"^DD",8989.51,8989.51,.02,1,1,"%D",0)
^^2^2^2970606^
"^DD",8989.51,8989.51,.02,1,1,"%D",1,0)
Cross references display text for lookup.  Display text is put in upper
"^DD",8989.51,8989.51,.02,1,1,"%D",2,0)
case so lookup will be case insensitive.
"^DD",8989.51,8989.51,.02,1,1,"DT")
2960409
"^DD",8989.51,8989.51,.02,3)
Answer must be 1-40 characters in length.
"^DD",8989.51,8989.51,.02,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,.02,21,1,0)
This is the displayable name for the parameter (allows mixed case, 
"^DD",8989.51,8989.51,.02,21,2,0)
non-namespaced names).
"^DD",8989.51,8989.51,.02,"DT")
2960409
"^DD",8989.51,8989.51,.03,0)
MULTIPLE VALUED^S^1:Yes;0:No;^0;3^Q
"^DD",8989.51,8989.51,.03,3)
Enter 'Yes' if multiple instances of the parameter are allowed for any single entity.
"^DD",8989.51,8989.51,.03,21,0)
^^3^3^2980705^
"^DD",8989.51,8989.51,.03,21,1,0)
If this field is set to 'Yes', multiple instances of the parameter will be 
"^DD",8989.51,8989.51,.03,21,2,0)
allowed for a single entity.  Otherwise, the value of the instance field
"^DD",8989.51,8989.51,.03,21,3,0)
for a given Entity-Parameter combination will always be '1'.
"^DD",8989.51,8989.51,.03,"DT")
2960207
"^DD",8989.51,8989.51,.04,0)
INSTANCE TERM^F^^0;4^K:$L(X)>40!($L(X)<1) X
"^DD",8989.51,8989.51,.04,3)
Answer must be 1-40 characters in length.
"^DD",8989.51,8989.51,.04,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,.04,21,1,0)
This is a free text term that can be used when prompting for a new instance of 
"^DD",8989.51,8989.51,.04,21,2,0)
the parameter (in the case where the parameter in multiple valued).  If not 
"^DD",8989.51,8989.51,.04,21,3,0)
entered, the word "Instance" will be used.
"^DD",8989.51,8989.51,.04,"DT")
2960207
"^DD",8989.51,8989.51,.05,0)
VALUE TERM^F^^0;5^K:$L(X)>40!($L(X)<1) X
"^DD",8989.51,8989.51,.05,3)
Answer must be 1-40 characters in length.
"^DD",8989.51,8989.51,.05,21,0)
^^2^2^2970626^
"^DD",8989.51,8989.51,.05,21,1,0)
This contains text that is issued as a prompt for the value.  If nothing
"^DD",8989.51,8989.51,.05,21,2,0)
is here, the prompt will be the word 'Value:'.
"^DD",8989.51,8989.51,.05,"DT")
2960612
"^DD",8989.51,8989.51,.06,0)
PROHIBIT EDITING^S^1:Yes;0:No;^0;6^Q
"^DD",8989.51,8989.51,.06,3)
Choose 'Disallow Editing' if editing of this field should not be allowed.
"^DD",8989.51,8989.51,.06,21,0)
^^2^2^2970306^
"^DD",8989.51,8989.51,.06,21,1,0)
This field prevents the parameter value from being edited with Fileman or
"^DD",8989.51,8989.51,.06,21,2,0)
any Parameters tools.
"^DD",8989.51,8989.51,.06,"DT")
2970317
"^DD",8989.51,8989.51,1.1,0)
VALUE DATA TYPE^S^D:date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;W:word processing;M:M code;C:constant;^1;1^Q
"^DD",8989.51,8989.51,1.1,3)
Enter the type of data this parameter will contain.
"^DD",8989.51,8989.51,1.1,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,1.1,21,1,0)
This is the type of data this parameter will contain.  This field is used to 
"^DD",8989.51,8989.51,1.1,21,2,0)
define a call to the reader (^DIR) in most cases.
"^DD",8989.51,8989.51,1.1,"DT")
2960528
"^DD",8989.51,8989.51,1.2,0)
VALUE DOMAIN^F^^1;2^K:$L(X)>100!($L(X)<1) X
"^DD",8989.51,8989.51,1.2,3)
Enter up to 100 characters to further define the data type (used by ^DIR).
"^DD",8989.51,8989.51,1.2,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,1.2,21,1,0)
This is a string that may be used to further specify the data type.  The 
"^DD",8989.51,8989.51,1.2,21,2,0)
string stored here should be appropriate for the second ^-piece of DIR(0) 
"^DD",8989.51,8989.51,1.2,21,3,0)
when used with the data type field.
"^DD",8989.51,8989.51,1.2,"DT")
2960207
"^DD",8989.51,8989.51,1.3,0)
VALUE HELP^F^^1;3^K:$L(X)>80!($L(X)<1) X
"^DD",8989.51,8989.51,1.3,3)
Enter a line of help text to be displayed when entering a parameter value.
"^DD",8989.51,8989.51,1.3,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,1.3,21,1,0)
This field contains a line of help text that is displayed when the user 
"^DD",8989.51,8989.51,1.3,21,2,0)
requests help or encounters an error while entering the VALUE field in the 
"^DD",8989.51,8989.51,1.3,21,3,0)
PARAMETERS file.
"^DD",8989.51,8989.51,1.3,"DT")
2960207
"^DD",8989.51,8989.51,2,0)
VALUE VALIDATION CODE^K^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,2,3)
This is M code used by DIR (3rd piece of DIR(0)).
"^DD",8989.51,8989.51,2,9)
@
"^DD",8989.51,8989.51,2,21,0)
^^2^2^2980705^
"^DD",8989.51,8989.51,2,21,1,0)
This field contains the M code that is placed in the third piece of DIR(0)
"^DD",8989.51,8989.51,2,21,2,0)
when validating a value in the PARAMETERS file.
"^DD",8989.51,8989.51,2,"DT")
2960207
"^DD",8989.51,8989.51,3,0)
VALUE SCREEN CODE^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,3,3)
This is M code placed in DIR("S").
"^DD",8989.51,8989.51,3,9)
@
"^DD",8989.51,8989.51,3,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,3,21,1,0)
This field contains M code that is used to screen allowable entries for the 
"^DD",8989.51,8989.51,3,21,2,0)
VALUE field in the PARAMETERS file.  The code is placed in DIR("S") when 
"^DD",8989.51,8989.51,3,21,3,0)
validating the entry.
"^DD",8989.51,8989.51,3,"DT")
2960207
"^DD",8989.51,8989.51,4,0)
KEYWORD^8989.514^^4;0
"^DD",8989.51,8989.51,6.1,0)
INSTANCE DATA TYPE^S^D:date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;^6;1^Q
"^DD",8989.51,8989.51,6.1,3)
Enter the type of data allowed for the INSTANCE field of the parameter.
"^DD",8989.51,8989.51,6.1,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,6.1,21,1,0)
This is the type of data that is contained in the INSTANCE field of the 
"^DD",8989.51,8989.51,6.1,21,2,0)
PARAMETERS file, if multiple parameter instances per entity are allowed.  
"^DD",8989.51,8989.51,6.1,21,3,0)
This field is used to define a call to the reader.
"^DD",8989.51,8989.51,6.1,"DT")
2960207
"^DD",8989.51,8989.51,6.2,0)
INSTANCE DOMAIN^F^^6;2^K:$L(X)>100!($L(X)<1) X
"^DD",8989.51,8989.51,6.2,3)
Enter up to 100 characters to further define the data type (used by ^DIR).
"^DD",8989.51,8989.51,6.2,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,6.2,21,1,0)
This may be used to further define the data type for the INSTANCE field of 
"^DD",8989.51,8989.51,6.2,21,2,0)
the parameter.  The string stored here should be appropriate for the second 
"^DD",8989.51,8989.51,6.2,21,3,0)
^-piece of DIR(0) when used with the data type field.
"^DD",8989.51,8989.51,6.2,"DT")
2960207
"^DD",8989.51,8989.51,6.3,0)
INSTANCE HELP^F^^6;3^K:$L(X)>80!($L(X)<1) X
"^DD",8989.51,8989.51,6.3,3)
Enter a line of help text to be displayed when entering the parameter instance.
"^DD",8989.51,8989.51,6.3,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,6.3,21,1,0)
This field contains a line of help text that is displayed when the user 
"^DD",8989.51,8989.51,6.3,21,2,0)
requests help or encounters an error while entering the INSTANCE field of 
"^DD",8989.51,8989.51,6.3,21,3,0)
the PARAMETERS file.
"^DD",8989.51,8989.51,6.3,"DT")
2960207
"^DD",8989.51,8989.51,7,0)
INSTANCE VALIDATION CODE^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,7,3)
This is M code used by DIR (3rd piece of DIR(0)).
"^DD",8989.51,8989.51,7,9)
@
"^DD",8989.51,8989.51,7,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,7,21,1,0)
This field contains M code that is placed in the third piece of DIR(0) when 
"^DD",8989.51,8989.51,7,21,2,0)
validating the INSTANCE field in the PARAMETERS file.
"^DD",8989.51,8989.51,7,"DT")
2960207
"^DD",8989.51,8989.51,8,0)
INSTANCE SCREEN CODE^K^^8;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,8,3)
This is M code placed in DIR("S").
"^DD",8989.51,8989.51,8,9)
@
"^DD",8989.51,8989.51,8,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,8,21,1,0)
This field contains M code that is used to screen allowable entries for the 
"^DD",8989.51,8989.51,8,21,2,0)
INSTANCE field in the PARAMETERS file.  The code is placed in DIR("S") when 
"^DD",8989.51,8989.51,8,21,3,0)
validating the entry.
"^DD",8989.51,8989.51,8,"DT")
2960207
"^DD",8989.51,8989.51,20,0)
DESCRIPTION^8989.512^^20;0
"^DD",8989.51,8989.51,20,21,0)
^^1^1^2970626^
"^DD",8989.51,8989.51,20,21,1,0)
A description of the parameter may be entered here.
"^DD",8989.51,8989.51,30,0)
ALLOWABLE ENTITIES^8989.513I^^30;0
"^DD",8989.51,8989.51,30,21,0)
^^2^2^2960213^^
"^DD",8989.51,8989.51,30,21,1,0)
This multiple contains a list of entities (pointers to files) for which the 
"^DD",8989.51,8989.51,30,21,2,0)
parameter may be validly set.
"^DD",8989.51,8989.512,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",8989.51,8989.512,0,"DT")
2960207
"^DD",8989.51,8989.512,0,"NM","DESCRIPTION")

"^DD",8989.51,8989.512,0,"UP")
8989.51
"^DD",8989.51,8989.512,.01,0)
DESCRIPTION^WL^^0;1^Q
"^DD",8989.51,8989.512,.01,3)
Enter a description of the parameter and how it is used.
"^DD",8989.51,8989.512,.01,21,0)
^^1^1^2960207^
"^DD",8989.51,8989.512,.01,21,1,0)
This is text that describes the purpose and use of the parameter.
"^DD",8989.51,8989.512,.01,"DT")
2960207
"^DD",8989.51,8989.513,0)
ALLOWABLE ENTITIES SUB-FIELD^^.02^2
"^DD",8989.51,8989.513,0,"DT")
2970621
"^DD",8989.51,8989.513,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",8989.51,8989.513,0,"IX","B",8989.513,.01)

"^DD",8989.51,8989.513,0,"NM","ALLOWABLE ENTITIES")

"^DD",8989.51,8989.513,0,"UP")
8989.51
"^DD",8989.51,8989.513,.01,0)
PRECEDENCE^MRNJ6,2^^0;1^K:+X'=X!(X>999.99)!(X<0)!(X?.E1"."3N.N) X
"^DD",8989.51,8989.513,.01,1,0)
^.1
"^DD",8989.51,8989.513,.01,1,1,0)
8989.513^B
"^DD",8989.51,8989.513,.01,1,1,1)
S ^XTV(8989.51,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",8989.51,8989.513,.01,1,1,2)
K ^XTV(8989.51,DA(1),30,"B",$E(X,1,30),DA)
"^DD",8989.51,8989.513,.01,3)
Type a Number between 0 and 999.99, 2 Decimal Digits
"^DD",8989.51,8989.513,.01,21,0)
^^6^6^2960213^^^
"^DD",8989.51,8989.513,.01,21,1,0)
A single parameter may be set for several different types of entities.  This 
"^DD",8989.51,8989.513,.01,21,2,0)
lists the order in which entities are searched for a defined value.  For 
"^DD",8989.51,8989.513,.01,21,3,0)
example, if a parameter may be set for a package, a location, and a user, 
"^DD",8989.51,8989.513,.01,21,4,0)
and the respective precedents are 3, 2, 1, the value of the user parameter 
"^DD",8989.51,8989.513,.01,21,5,0)
would be returned.  If it did not exist, the value of the location 
"^DD",8989.51,8989.513,.01,21,6,0)
parameter.  If that did not exist, then the value of the package parameter.
"^DD",8989.51,8989.513,.01,"DT")
2960213
"^DD",8989.51,8989.513,.02,0)
ENTITY FILE^RP8989.518'^XTV(8989.518,^0;2^Q
"^DD",8989.51,8989.513,.02,1,0)
^.1
"^DD",8989.51,8989.513,.02,1,1,0)
8989.51^AG^MUMPS
"^DD",8989.51,8989.513,.02,1,1,1)
D AGS^XPARDD1
"^DD",8989.51,8989.513,.02,1,1,2)
D AGK^XPARDD1
"^DD",8989.51,8989.513,.02,1,1,"%D",0)
^^5^5^2980422^
"^DD",8989.51,8989.513,.02,1,1,"%D",1,0)
The AG x-ref has the format ^XTV(8989.51,PARAM,30,"AG",GLOBAL REF,DA)="".
"^DD",8989.51,8989.513,.02,1,1,"%D",2,0)
 
"^DD",8989.51,8989.513,.02,1,1,"%D",3,0)
It is used to screen the parameters that may be selected for a given entity 
"^DD",8989.51,8989.513,.02,1,1,"%D",4,0)
in the PARAMETERS file.  The global root is used because the entity is a 
"^DD",8989.51,8989.513,.02,1,1,"%D",5,0)
variable pointer.
"^DD",8989.51,8989.513,.02,1,1,"DT")
2960207
"^DD",8989.51,8989.513,.02,3)
Choose a file from which entities for this parameter are identified.
"^DD",8989.51,8989.513,.02,21,0)
^^3^3^2980422^
"^DD",8989.51,8989.513,.02,21,1,0)
This identifies an entity for which the parameter can be legally entered.  
"^DD",8989.51,8989.513,.02,21,2,0)
Entities are simply variable pointers.  The files which are eligible to be
"^DD",8989.51,8989.513,.02,21,3,0)
entities are listed in the PARAMETER ENTITY file.
"^DD",8989.51,8989.513,.02,"DT")
2970621
"^DD",8989.51,8989.514,0)
KEYWORD SUB-FIELD^^.01^1
"^DD",8989.51,8989.514,0,"DT")
3020819
"^DD",8989.51,8989.514,0,"IX","B",8989.514,.01)

"^DD",8989.51,8989.514,0,"NM","KEYWORD")

"^DD",8989.51,8989.514,0,"UP")
8989.51
"^DD",8989.51,8989.514,.01,0)
KEYWORD^MFX^^0;1^K:$L(X)>30!($L(X)<3) X I $D(^XTV(8989.51,"D",X)) D EN^DDIOL($C(7)_"  "_$$EZBLD^DIALOG(89895140),"","?0")
"^DD",8989.51,8989.514,.01,1,0)
^.1
"^DD",8989.51,8989.514,.01,1,1,0)
8989.514^B
"^DD",8989.51,8989.514,.01,1,1,1)
S ^XTV(8989.51,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",8989.51,8989.514,.01,1,1,2)
K ^XTV(8989.51,DA(1),4,"B",$E(X,1,30),DA)
"^DD",8989.51,8989.514,.01,1,2,0)
8989.51^D
"^DD",8989.51,8989.514,.01,1,2,1)
S ^XTV(8989.51,"D",$E(X,1,30),DA(1),DA)=""
"^DD",8989.51,8989.514,.01,1,2,2)
K ^XTV(8989.51,"D",$E(X,1,30),DA(1),DA)
"^DD",8989.51,8989.514,.01,1,2,3)
KeyWord Lookup
"^DD",8989.51,8989.514,.01,1,2,"%D",0)
^^2^2^3020819^
"^DD",8989.51,8989.514,.01,1,2,"%D",1,0)
This cross reference allows the use of the keyword for look up of 
"^DD",8989.51,8989.514,.01,1,2,"%D",2,0)
parameters.
"^DD",8989.51,8989.514,.01,1,2,"DT")
3020819
"^DD",8989.51,8989.514,.01,3)
Answer must be 3-30 characters in length
"^DD",8989.51,8989.514,.01,21,0)
^^3^3^3021010^
"^DD",8989.51,8989.514,.01,21,1,0)
This field provides a list of KEYWORDS that can be used for lookup of 
"^DD",8989.51,8989.514,.01,21,2,0)
Parameter definitions.  It is suggested that each entry only have
"^DD",8989.51,8989.514,.01,21,3,0)
one word.
"^DD",8989.51,8989.514,.01,"DT")
3021010
"^DIC",101.24,101.24,0)
OE/RR REPORT^101.24
"^DIC",101.24,101.24,0,"GL")
^ORD(101.24,
"^DIC",101.24,101.24,"%",0)
^1.005^^0
"^DIC",101.24,101.24,"%D",0)
^1.001^7^7^3020924^^^
"^DIC",101.24,101.24,"%D",1,0)
This file contains definitions and parameters used in various reports
"^DIC",101.24,101.24,"%D",2,0)
within CPRS.
"^DIC",101.24,101.24,"%D",3,0)
 
"^DIC",101.24,101.24,"%D",4,0)
Entry numbers >1000 are reserved for national use.  Any local entries
"^DIC",101.24,101.24,"%D",5,0)
should be added to a number <1000.  If this convention is not followed,
"^DIC",101.24,101.24,"%D",6,0)
you run the risk of having your local entries overwritten by a patch
"^DIC",101.24,101.24,"%D",7,0)
or future release of CPRS.
"^DIC",101.24,"B","OE/RR REPORT",101.24)

"^DIC",8989.51,8989.51,0)
PARAMETER DEFINITION^8989.51
"^DIC",8989.51,8989.51,0,"GL")
^XTV(8989.51,
"^DIC",8989.51,8989.51,"%D",0)
^^3^3^2980920^
"^DIC",8989.51,8989.51,"%D",1,0)
This file contains the characteristics of parameters.  Entries in this
"^DIC",8989.51,8989.51,"%D",2,0)
file must be namespaced and they are exported by the package which owns
"^DIC",8989.51,8989.51,"%D",3,0)
them.
"^DIC",8989.51,"B","PARAMETER DEFINITION",8989.51)

**INSTALL NAME**
OR*3.0*173
"BLD",15968,0)
OR*3.0*173^ORDER ENTRY/RESULTS REPORTING^0^3030722^y
"BLD",15968,4,0)
^9.64PA^^
"BLD",15968,"INI")
PRE^ORY173
"BLD",15968,"INIT")
POST^ORY173
"BLD",15968,"KRN",0)
^9.67PA^8989.52^19
"BLD",15968,"KRN",.4,0)
.4
"BLD",15968,"KRN",.401,0)
.401
"BLD",15968,"KRN",.402,0)
.402
"BLD",15968,"KRN",.403,0)
.403
"BLD",15968,"KRN",.5,0)
.5
"BLD",15968,"KRN",.84,0)
.84
"BLD",15968,"KRN",3.6,0)
3.6
"BLD",15968,"KRN",3.8,0)
3.8
"BLD",15968,"KRN",9.2,0)
9.2
"BLD",15968,"KRN",9.8,0)
9.8
"BLD",15968,"KRN",9.8,"NM",0)
^9.68A^22^20
"BLD",15968,"KRN",9.8,"NM",1,0)
ORWPCE^^0^B75528607
"BLD",15968,"KRN",9.8,"NM",2,0)
ORQQPL^^0^B17756509
"BLD",15968,"KRN",9.8,"NM",3,0)
ORQQPL1^^0^B64341442
"BLD",15968,"KRN",9.8,"NM",4,0)
ORQQPL3^^0^B53234730
"BLD",15968,"KRN",9.8,"NM",5,0)
ORPRF^^0^B5880740
"BLD",15968,"KRN",9.8,"NM",6,0)
ORWPCE2^^0^B45644093
"BLD",15968,"KRN",9.8,"NM",7,0)
ORWPS^^0^B19796500
"BLD",15968,"KRN",9.8,"NM",9,0)
ORCACT0^^0^B45970139
"BLD",15968,"KRN",9.8,"NM",10,0)
ORWTPD^^0^B13429999
"BLD",15968,"KRN",9.8,"NM",11,0)
ORWORB^^0^B51967717
"BLD",15968,"KRN",9.8,"NM",12,0)
ORB31^^0^B25268978
"BLD",15968,"KRN",9.8,"NM",13,0)
ORQQPXRM^^0^B5838851
"BLD",15968,"KRN",9.8,"NM",14,0)
ORWDPS4^^0^B11105322
"BLD",15968,"KRN",9.8,"NM",15,0)
ORQORB^^0^B2651025
"BLD",15968,"KRN",9.8,"NM",17,0)
ORY173^^0^B6815878
"BLD",15968,"KRN",9.8,"NM",18,0)
ORB3MGR1^^0^B55236680
"BLD",15968,"KRN",9.8,"NM",19,0)
ORB3REC^^0^B4964745
"BLD",15968,"KRN",9.8,"NM",20,0)
ORWTPL^^0^B24336317
"BLD",15968,"KRN",9.8,"NM",21,0)
ORWTPR^^0^B16896948
"BLD",15968,"KRN",9.8,"NM",22,0)
ORQPTQ11^^0^B56149817
"BLD",15968,"KRN",9.8,"NM","B","ORB31",12)

"BLD",15968,"KRN",9.8,"NM","B","ORB3MGR1",18)

"BLD",15968,"KRN",9.8,"NM","B","ORB3REC",19)

"BLD",15968,"KRN",9.8,"NM","B","ORCACT0",9)

"BLD",15968,"KRN",9.8,"NM","B","ORPRF",5)

"BLD",15968,"KRN",9.8,"NM","B","ORQORB",15)

"BLD",15968,"KRN",9.8,"NM","B","ORQPTQ11",22)

"BLD",15968,"KRN",9.8,"NM","B","ORQQPL",2)

"BLD",15968,"KRN",9.8,"NM","B","ORQQPL1",3)

"BLD",15968,"KRN",9.8,"NM","B","ORQQPL3",4)

"BLD",15968,"KRN",9.8,"NM","B","ORQQPXRM",13)

"BLD",15968,"KRN",9.8,"NM","B","ORWDPS4",14)

"BLD",15968,"KRN",9.8,"NM","B","ORWORB",11)

"BLD",15968,"KRN",9.8,"NM","B","ORWPCE",1)

"BLD",15968,"KRN",9.8,"NM","B","ORWPCE2",6)

"BLD",15968,"KRN",9.8,"NM","B","ORWPS",7)

"BLD",15968,"KRN",9.8,"NM","B","ORWTPD",10)

"BLD",15968,"KRN",9.8,"NM","B","ORWTPL",20)

"BLD",15968,"KRN",9.8,"NM","B","ORWTPR",21)

"BLD",15968,"KRN",9.8,"NM","B","ORY173",17)

"BLD",15968,"KRN",19,0)
19
"BLD",15968,"KRN",19,"NM",0)
^9.68A^6^6
"BLD",15968,"KRN",19,"NM",1,0)
OR CPRS GUI CHART^^0
"BLD",15968,"KRN",19,"NM",2,0)
ORB NOT COORD MENU^^3
"BLD",15968,"KRN",19,"NM",3,0)
ORB NOT MENU^^3
"BLD",15968,"KRN",19,"NM",4,0)
ORB NOT MGR MENU^^3
"BLD",15968,"KRN",19,"NM",5,0)
ORB3 REC SORT METHOD^^1^
"BLD",15968,"KRN",19,"NM",6,0)
ORB3 SORT METHOD^^1^
"BLD",15968,"KRN",19,"NM","B","OR CPRS GUI CHART",1)

"BLD",15968,"KRN",19,"NM","B","ORB NOT COORD MENU",2)

"BLD",15968,"KRN",19,"NM","B","ORB NOT MENU",3)

"BLD",15968,"KRN",19,"NM","B","ORB NOT MGR MENU",4)

"BLD",15968,"KRN",19,"NM","B","ORB3 REC SORT METHOD",5)

"BLD",15968,"KRN",19,"NM","B","ORB3 SORT METHOD",6)

"BLD",15968,"KRN",19.1,0)
19.1
"BLD",15968,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",15968,"KRN",101,0)
101
"BLD",15968,"KRN",409.61,0)
409.61
"BLD",15968,"KRN",771,0)
771
"BLD",15968,"KRN",870,0)
870
"BLD",15968,"KRN",8989.51,0)
8989.51
"BLD",15968,"KRN",8989.52,0)
8989.52
"BLD",15968,"KRN",8994,0)
8994
"BLD",15968,"KRN",8994,"NM",0)
^9.68A^20^18
"BLD",15968,"KRN",8994,"NM",1,0)
ORWPCE ACTIVE CODE^^0
"BLD",15968,"KRN",8994,"NM",2,0)
ORPRF HASFLG^^0
"BLD",15968,"KRN",8994,"NM",3,0)
ORPRF GETFLG^^0
"BLD",15968,"KRN",8994,"NM",4,0)
ORPRF CLEAR^^0
"BLD",15968,"KRN",8994,"NM",5,0)
ORWU1 NEWLOC^^0
"BLD",15968,"KRN",8994,"NM",6,0)
ORQQPXRM GET WH LETTER TEXT^^0
"BLD",15968,"KRN",8994,"NM",7,0)
ORQQPXRM GET WH LETTER TYPE^^0
"BLD",15968,"KRN",8994,"NM",8,0)
ORQQPXRM GET WH PROC RESULT^^0
"BLD",15968,"KRN",8994,"NM",9,0)
ORQQPXRM WOMEN HEALTH SAVE^^0
"BLD",15968,"KRN",8994,"NM",10,0)
ORWTPD GETOCM^^0
"BLD",15968,"KRN",8994,"NM",11,0)
ORWTPD PUTOCM^^0
"BLD",15968,"KRN",8994,"NM",12,0)
ORB FORWARD ALERT^^0
"BLD",15968,"KRN",8994,"NM",15,0)
ORB RENEW ALERT^^0
"BLD",15968,"KRN",8994,"NM",16,0)
ORWORB URGENLST^^1^
"BLD",15968,"KRN",8994,"NM",17,0)
ORWTPL GETNSORT^^1^
"BLD",15968,"KRN",8994,"NM",18,0)
TIU HAS AUTHOR SIGNED?^^0
"BLD",15968,"KRN",8994,"NM",19,0)
ORQQPXRM GET WH REPORT TEXT^^0
"BLD",15968,"KRN",8994,"NM",20,0)
ORECS01 GETDIV^^0
"BLD",15968,"KRN",8994,"NM","B","ORB FORWARD ALERT",12)

"BLD",15968,"KRN",8994,"NM","B","ORB RENEW ALERT",15)

"BLD",15968,"KRN",8994,"NM","B","ORECS01 GETDIV",20)

"BLD",15968,"KRN",8994,"NM","B","ORPRF CLEAR",4)

"BLD",15968,"KRN",8994,"NM","B","ORPRF GETFLG",3)

"BLD",15968,"KRN",8994,"NM","B","ORPRF HASFLG",2)

"BLD",15968,"KRN",8994,"NM","B","ORQQPXRM GET WH LETTER TEXT",6)

"BLD",15968,"KRN",8994,"NM","B","ORQQPXRM GET WH LETTER TYPE",7)

"BLD",15968,"KRN",8994,"NM","B","ORQQPXRM GET WH PROC RESULT",8)

"BLD",15968,"KRN",8994,"NM","B","ORQQPXRM GET WH REPORT TEXT",19)

"BLD",15968,"KRN",8994,"NM","B","ORQQPXRM WOMEN HEALTH SAVE",9)

"BLD",15968,"KRN",8994,"NM","B","ORWORB URGENLST",16)

"BLD",15968,"KRN",8994,"NM","B","ORWPCE ACTIVE CODE",1)

"BLD",15968,"KRN",8994,"NM","B","ORWTPD GETOCM",10)

"BLD",15968,"KRN",8994,"NM","B","ORWTPD PUTOCM",11)

"BLD",15968,"KRN",8994,"NM","B","ORWTPL GETNSORT",17)

"BLD",15968,"KRN",8994,"NM","B","ORWU1 NEWLOC",5)

"BLD",15968,"KRN",8994,"NM","B","TIU HAS AUTHOR SIGNED?",18)

"BLD",15968,"KRN","B",.4,.4)

"BLD",15968,"KRN","B",.401,.401)

"BLD",15968,"KRN","B",.402,.402)

"BLD",15968,"KRN","B",.403,.403)

"BLD",15968,"KRN","B",.5,.5)

"BLD",15968,"KRN","B",.84,.84)

"BLD",15968,"KRN","B",3.6,3.6)

"BLD",15968,"KRN","B",3.8,3.8)

"BLD",15968,"KRN","B",9.2,9.2)

"BLD",15968,"KRN","B",9.8,9.8)

"BLD",15968,"KRN","B",19,19)

"BLD",15968,"KRN","B",19.1,19.1)

"BLD",15968,"KRN","B",101,101)

"BLD",15968,"KRN","B",409.61,409.61)

"BLD",15968,"KRN","B",771,771)

"BLD",15968,"KRN","B",870,870)

"BLD",15968,"KRN","B",8989.51,8989.51)

"BLD",15968,"KRN","B",8989.52,8989.52)

"BLD",15968,"KRN","B",8994,8994)

"BLD",15968,"QUES",0)
^9.62^^
"BLD",15968,"REQB",0)
^9.611^3^3
"BLD",15968,"REQB",1,0)
OR*3.0*149^2
"BLD",15968,"REQB",2,0)
TIU*1.0*160^2
"BLD",15968,"REQB",3,0)
TIU*1.0*164^2
"BLD",15968,"REQB","B","OR*3.0*149",1)

"BLD",15968,"REQB","B","TIU*1.0*160",2)

"BLD",15968,"REQB","B","TIU*1.0*164",3)

"INI")
PRE^ORY173
"INIT")
POST^ORY173
"KRN",19,3787,-1)
3^2
"KRN",19,3787,0)
ORB NOT COORD MENU^Notification Mgmt Menu^^M^^^^^^^^^^^
"KRN",19,3787,1,0)
^^5^5^2970630^^^^
"KRN",19,3787,1,1,0)
This menu is used by clinical coordinators and IRM staff to turn
"KRN",19,3787,1,2,0)
notifications on or off for a provider.  It prompts the coordinator for the
"KRN",19,3787,1,3,0)
user/provider for whom they are turning on/off notifications then calls 
"KRN",19,3787,1,4,0)
other notification mgmt options.  It also contains options that can
"KRN",19,3787,1,5,0)
purge exisitng notifications.
"KRN",19,3787,10,0)
^19.01PI^27^26
"KRN",19,3787,10.1)

"KRN",19,3787,15)

"KRN",19,3787,20)

"KRN",19,3787,99)
59310,32015
"KRN",19,3787,"U")
NOTIFICATION MGMT MENU
"KRN",19,3791,-1)
3^3
"KRN",19,3791,0)
ORB NOT MENU^Notification Mgmt Menu^^M^^^^^^^^^^^
"KRN",19,3791,1,0)
5^19.06^5^5^3000516^^^^
"KRN",19,3791,1,1,0)
This is a menu option which manages or directs users to options adding or
"KRN",19,3791,1,2,0)
removing notifications to those they will receive.  Users access this
"KRN",19,3791,1,3,0)
option to turn on or off notifications.  Users may review the notifications 
"KRN",19,3791,1,4,0)
they should be currently receiving.  A user may also remove all of his/her
"KRN",19,3791,1,5,0)
existing notifications via a purge option.
"KRN",19,3791,10,0)
^19.01IP^5^4
"KRN",19,3791,15)

"KRN",19,3791,20)

"KRN",19,3791,99)
59310,32015
"KRN",19,3791,"U")
NOTIFICATION MGMT MENU
"KRN",19,5221,-1)
3^4
"KRN",19,5221,0)
ORB NOT MGR MENU^Notification Mgmt Menu^^M^^^^^^^^^^^
"KRN",19,5221,1,0)
^^4^4^2961204^^^^
"KRN",19,5221,1,1,0)
This menu is used by IRM staff to turn notifications on or off for a user,
"KRN",19,5221,1,2,0)
purge existing notifications based on recipient, patient or notification.
"KRN",19,5221,1,3,0)
It will also trigger a test notification and delete all alerts from the 
"KRN",19,5221,1,4,0)
new person file (200) older than 14 days.
"KRN",19,5221,10,0)
^19.01PI^32^31
"KRN",19,5221,15)

"KRN",19,5221,20)

"KRN",19,5221,31)
&^
"KRN",19,5221,99)
59310,32015
"KRN",19,5221,"U")
NOTIFICATION MGMT MENU
"KRN",19,10082,-1)
0^1
"KRN",19,10082,0)
OR CPRS GUI CHART^CPRSChart version 1.0.22.11^^B^^^^^^^^
"KRN",19,10082,1,0)
^19.06^2^2^3030627^^^^
"KRN",19,10082,1,1,0)
This option is required by the Kernel Broker to give access to the
"KRN",19,10082,1,2,0)
RPCs used by the CPRS GUI (CPRSChart.EXE).
"KRN",19,10082,99.1)
59310,32025
"KRN",19,10082,"RPC",0)
^19.05P^1889^1889
"KRN",19,10082,"RPC",1,0)
GMRC LIST CONSULT REQUESTS
"KRN",19,10082,"RPC",218,0)
XWB GET VARIABLE VALUE
"KRN",19,10082,"RPC",219,0)
TIU AUTHORIZATION
"KRN",19,10082,"RPC",220,0)
TIU CAN CHANGE COSIGNER?
"KRN",19,10082,"RPC",221,0)
TIU CREATE ADDENDUM RECORD
"KRN",19,10082,"RPC",222,0)
TIU CREATE RECORD
"KRN",19,10082,"RPC",223,0)
TIU DELETE RECORD
"KRN",19,10082,"RPC",224,0)
TIU DETAILED DISPLAY
"KRN",19,10082,"RPC",225,0)
TIU DOCUMENTS BY CONTEXT
"KRN",19,10082,"RPC",226,0)
TIU GET ADDITIONAL SIGNERS
"KRN",19,10082,"RPC",227,0)
TIU GET ALERT INFO
"KRN",19,10082,"RPC",228,0)
TIU GET DOCUMENT PARAMETERS
"KRN",19,10082,"RPC",229,0)
TIU GET DS TITLES
"KRN",19,10082,"RPC",230,0)
TIU GET DS URGENCIES
"KRN",19,10082,"RPC",231,0)
TIU GET PERSONAL PREFERENCES
"KRN",19,10082,"RPC",232,0)
TIU GET PN TITLES
"KRN",19,10082,"RPC",233,0)
TIU GET RECORD TEXT
"KRN",19,10082,"RPC",234,0)
TIU IDENTIFY CONSULTS CLASS
"KRN",19,10082,"RPC",235,0)
TIU IS THIS A CONSULT?
"KRN",19,10082,"RPC",236,0)
TIU JUSTIFY DELETE?
"KRN",19,10082,"RPC",237,0)
TIU LOAD BOILERPLATE TEXT
"KRN",19,10082,"RPC",238,0)
TIU LOAD RECORD FOR EDIT
"KRN",19,10082,"RPC",239,0)
TIU LOCK RECORD
"KRN",19,10082,"RPC",240,0)
TIU LONG LIST CONSULT TITLES
"KRN",19,10082,"RPC",241,0)
TIU LONG LIST OF TITLES
"KRN",19,10082,"RPC",242,0)
TIU NOTES
"KRN",19,10082,"RPC",243,0)
TIU NOTES 16 BIT
"KRN",19,10082,"RPC",244,0)
TIU NOTES BY VISIT
"KRN",19,10082,"RPC",245,0)
TIU PERSONAL TITLE LIST
"KRN",19,10082,"RPC",246,0)
TIU PRINT RECORD
"KRN",19,10082,"RPC",247,0)
TIU REQUIRES COSIGNATURE
"KRN",19,10082,"RPC",248,0)
TIU SIGN RECORD
"KRN",19,10082,"RPC",249,0)
TIU SUMMARIES
"KRN",19,10082,"RPC",250,0)
TIU SUMMARIES BY VISIT
"KRN",19,10082,"RPC",251,0)
TIU UNLOCK RECORD
"KRN",19,10082,"RPC",252,0)
TIU UPDATE ADDITIONAL SIGNERS
"KRN",19,10082,"RPC",253,0)
TIU UPDATE RECORD
"KRN",19,10082,"RPC",254,0)
TIU WHICH SIGNATURE ACTION
"KRN",19,10082,"RPC",1032,0)
ORB DELETE ALERT
"KRN",19,10082,"RPC",1033,0)
ORB FOLLOW-UP ARRAY
"KRN",19,10082,"RPC",1034,0)
ORB FOLLOW-UP STRING
"KRN",19,10082,"RPC",1035,0)
ORB FOLLOW-UP TYPE
"KRN",19,10082,"RPC",1036,0)
ORB SORT METHOD
"KRN",19,10082,"RPC",1037,0)
ORK TRIGGER
"KRN",19,10082,"RPC",1038,0)
ORQ NULL LIST
"KRN",19,10082,"RPC",1039,0)
ORQOR DETAIL
"KRN",19,10082,"RPC",1040,0)
TIU TEMPLATE CHECK BOILERPLATE
"KRN",19,10082,"RPC",1041,0)
TIU TEMPLATE CREATE/MODIFY
"KRN",19,10082,"RPC",1042,0)
TIU TEMPLATE DELETE
"KRN",19,10082,"RPC",1045,0)
TIU TEMPLATE GETPROOT
"KRN",19,10082,"RPC",1049,0)
TIU TEMPLATE LISTOWNR
"KRN",19,10082,"RPC",1050,0)
TIU TEMPLATE SET ITEMS
"KRN",19,10082,"RPC",1051,0)
TIU GET LIST OF OBJECTS
"KRN",19,10082,"RPC",1052,0)
ORQOR LIST
"KRN",19,10082,"RPC",1053,0)
ORQORB SORT
"KRN",19,10082,"RPC",1054,0)
ORQPT ATTENDING/PRIMARY
"KRN",19,10082,"RPC",1055,0)
ORQPT CLINIC PATIENTS
"KRN",19,10082,"RPC",1056,0)
ORQPT CLINICS
"KRN",19,10082,"RPC",1057,0)
ORQPT DEFAULT LIST SOURCE
"KRN",19,10082,"RPC",1058,0)
ORQPT DEFAULT PATIENT LIST
"KRN",19,10082,"RPC",1059,0)
ORQPT PATIENT TEAM PROVIDERS
"KRN",19,10082,"RPC",1060,0)
ORQPT PROVIDER PATIENTS
"KRN",19,10082,"RPC",1061,0)
ORQPT PROVIDERS
"KRN",19,10082,"RPC",1062,0)
ORQPT SPECIALTIES
"KRN",19,10082,"RPC",1063,0)
ORQPT SPECIALTY PATIENTS
"KRN",19,10082,"RPC",1064,0)
ORQPT TEAM PATIENTS
"KRN",19,10082,"RPC",1065,0)
ORQPT TEAMS
"KRN",19,10082,"RPC",1066,0)
ORQPT WARD PATIENTS
"KRN",19,10082,"RPC",1067,0)
ORQPT WARDRMBED
"KRN",19,10082,"RPC",1068,0)
ORQPT WARDS
"KRN",19,10082,"RPC",1069,0)
ORQQAL DETAIL
"KRN",19,10082,"RPC",1070,0)
ORQQAL LIST
"KRN",19,10082,"RPC",1071,0)
ORQQAL LIST REPORT
"KRN",19,10082,"RPC",1072,0)
ORQQCN ADDCMT
"KRN",19,10082,"RPC",1073,0)
ORQQCN ADMIN COMPLETE
"KRN",19,10082,"RPC",1074,0)
ORQQCN DETAIL
"KRN",19,10082,"RPC",1075,0)
ORQQCN DISCONTINUE
"KRN",19,10082,"RPC",1076,0)
ORQQCN FIND CONSULT
"KRN",19,10082,"RPC",1077,0)
ORQQCN FORWARD
"KRN",19,10082,"RPC",1078,0)
ORQQCN GET CONSULT
"KRN",19,10082,"RPC",1079,0)
ORQQCN GET ORDER NUMBER
"KRN",19,10082,"RPC",1080,0)
ORQQCN GET PROC SVCS
"KRN",19,10082,"RPC",1081,0)
ORQQCN LIST
"KRN",19,10082,"RPC",1082,0)
ORQQCN LOAD FOR EDIT
"KRN",19,10082,"RPC",1083,0)
ORQQCN MED RESULTS
"KRN",19,10082,"RPC",1084,0)
ORQQCN PRINT SF513
"KRN",19,10082,"RPC",1085,0)
ORQQCN RECEIVE
"KRN",19,10082,"RPC",1086,0)
ORQQCN RESUBMIT
"KRN",19,10082,"RPC",1087,0)
ORQQCN SET ACT MENUS
"KRN",19,10082,"RPC",1088,0)
ORQQCN SHOW SF513
"KRN",19,10082,"RPC",1089,0)
ORQQCN SIGFIND
"KRN",19,10082,"RPC",1090,0)
ORQQCN STATUS
"KRN",19,10082,"RPC",1091,0)
ORQQCN SVCLIST
"KRN",19,10082,"RPC",1092,0)
ORQQCN SVCTREE
"KRN",19,10082,"RPC",1093,0)
ORQQCN URGENCIES
"KRN",19,10082,"RPC",1094,0)
ORQQCN2 GET CONTEXT
"KRN",19,10082,"RPC",1095,0)
ORQQCN2 SAVE CONTEXT
"KRN",19,10082,"RPC",1096,0)
ORQQLR DETAIL
"KRN",19,10082,"RPC",1097,0)
ORQQLR SEARCH RANGE INPT
"KRN",19,10082,"RPC",1098,0)
ORQQLR SEARCH RANGE OUTPT
"KRN",19,10082,"RPC",1099,0)
ORQQPL ADD SAVE
"KRN",19,10082,"RPC",1100,0)
ORQQPL AUDIT HIST
"KRN",19,10082,"RPC",1101,0)
ORQQPL CHECK DUP
"KRN",19,10082,"RPC",1102,0)
ORQQPL CLIN FILTER LIST
"KRN",19,10082,"RPC",1103,0)
ORQQPL CLIN SRCH
"KRN",19,10082,"RPC",1104,0)
ORQQPL DELETE
"KRN",19,10082,"RPC",1105,0)
ORQQPL DETAIL
"KRN",19,10082,"RPC",1106,0)
ORQQPL EDIT LOAD
"KRN",19,10082,"RPC",1107,0)
ORQQPL EDIT SAVE
"KRN",19,10082,"RPC",1108,0)
ORQQPL INACTIVATE
"KRN",19,10082,"RPC",1109,0)
ORQQPL INIT PT
"KRN",19,10082,"RPC",1110,0)
ORQQPL INIT USER
"KRN",19,10082,"RPC",1111,0)
ORQQPL LIST
"KRN",19,10082,"RPC",1112,0)
ORQQPL PROB COMMENTS
"KRN",19,10082,"RPC",1113,0)
ORQQPL PROBLEM LEX SEARCH
"KRN",19,10082,"RPC",1114,0)
ORQQPL PROBLEM LIST
"KRN",19,10082,"RPC",1115,0)
ORQQPL PROV FILTER LIST
"KRN",19,10082,"RPC",1116,0)
ORQQPL PROVIDER LIST
"KRN",19,10082,"RPC",1117,0)
ORQQPL REPLACE
"KRN",19,10082,"RPC",1118,0)
ORQQPL SAVEVIEW
"KRN",19,10082,"RPC",1119,0)
ORQQPL SERV FILTER LIST
"KRN",19,10082,"RPC",1120,0)
ORQQPL SRVC SRCH
"KRN",19,10082,"RPC",1121,0)
ORQQPL UPDATE
"KRN",19,10082,"RPC",1122,0)
ORQQPL USER PROB CATS
"KRN",19,10082,"RPC",1123,0)
ORQQPL USER PROB LIST
"KRN",19,10082,"RPC",1124,0)
ORQQPL VERIFY
"KRN",19,10082,"RPC",1125,0)
ORQQPP LIST
"KRN",19,10082,"RPC",1126,0)
ORQQPS DETAIL
"KRN",19,10082,"RPC",1127,0)
ORQQPS LIST
"KRN",19,10082,"RPC",1133,0)
ORQQPX REMINDER DETAIL
"KRN",19,10082,"RPC",1135,0)
ORQQPX REMINDERS LIST
"KRN",19,10082,"RPC",1136,0)
ORQQVI NOTEVIT
"KRN",19,10082,"RPC",1137,0)
ORQQVI VITALS
"KRN",19,10082,"RPC",1138,0)
ORQQVI VITALS FOR DATE RANGE
"KRN",19,10082,"RPC",1139,0)
ORQQVI1 DETAIL
"KRN",19,10082,"RPC",1140,0)
ORQQVI1 GRID
"KRN",19,10082,"RPC",1141,0)
ORQQVI2 VITALS HELP
"KRN",19,10082,"RPC",1142,0)
ORQQVI2 VITALS RATE CHECK
"KRN",19,10082,"RPC",1144,0)
ORQQVI2 VITALS VAL & STORE
"KRN",19,10082,"RPC",1145,0)
ORQQVI2 VITALS VALIDATE
"KRN",19,10082,"RPC",1146,0)
ORQQVI2 VITALS VALIDATE TYPE
"KRN",19,10082,"RPC",1147,0)
ORQQVS DETAIL NOTES
"KRN",19,10082,"RPC",1148,0)
ORQQVS DETAIL SUMMARY
"KRN",19,10082,"RPC",1149,0)
ORQQVS VISITS/APPTS
"KRN",19,10082,"RPC",1150,0)
ORQQXMB MAIL GROUPS
"KRN",19,10082,"RPC",1151,0)
ORQQXQA PATIENT
"KRN",19,10082,"RPC",1152,0)
ORQQXQA USER
"KRN",19,10082,"RPC",1153,0)
ORWCH LOADALL
"KRN",19,10082,"RPC",1154,0)
ORWCH LOADSIZ
"KRN",19,10082,"RPC",1155,0)
ORWCH SAVEALL
"KRN",19,10082,"RPC",1156,0)
ORWCH SAVESIZ
"KRN",19,10082,"RPC",1157,0)
ORWCS LIST OF CONSULT REPORTS
"KRN",19,10082,"RPC",1158,0)
ORWCS PRINT REPORT
"KRN",19,10082,"RPC",1159,0)
ORWCS REPORT TEXT
"KRN",19,10082,"RPC",1160,0)
ORWCV DTLVST
"KRN",19,10082,"RPC",1161,0)
ORWCV LAB
"KRN",19,10082,"RPC",1162,0)
ORWCV POLL
"KRN",19,10082,"RPC",1163,0)
ORWCV START
"KRN",19,10082,"RPC",1164,0)
ORWCV STOP
"KRN",19,10082,"RPC",1165,0)
ORWCV VST
"KRN",19,10082,"RPC",1166,0)
ORWD DEF
"KRN",19,10082,"RPC",1167,0)
ORWD DT
"KRN",19,10082,"RPC",1168,0)
ORWD FORMID
"KRN",19,10082,"RPC",1169,0)
ORWD GET4EDIT
"KRN",19,10082,"RPC",1170,0)
ORWD KEY
"KRN",19,10082,"RPC",1171,0)
ORWD OI
"KRN",19,10082,"RPC",1172,0)
ORWD PROVKEY
"KRN",19,10082,"RPC",1173,0)
ORWD SAVE
"KRN",19,10082,"RPC",1174,0)
ORWD SAVEACT
"KRN",19,10082,"RPC",1175,0)
ORWD SIGN
"KRN",19,10082,"RPC",1176,0)
ORWD VALIDACT
"KRN",19,10082,"RPC",1177,0)
ORWD1 PARAM
"KRN",19,10082,"RPC",1178,0)
ORWD1 PRINTGUI
"KRN",19,10082,"RPC",1179,0)
ORWD1 RVPRINT
"KRN",19,10082,"RPC",1180,0)
ORWD2 DEVINFO
"KRN",19,10082,"RPC",1181,0)
ORWD2 MANUAL
"KRN",19,10082,"RPC",1182,0)
ORWDAL32 ALLERGY MATCH
"KRN",19,10082,"RPC",1183,0)
ORWDAL32 DEF
"KRN",19,10082,"RPC",1184,0)
ORWDAL32 SYMPTOMS
"KRN",19,10082,"RPC",1185,0)
ORWDCN32 DEF
"KRN",19,10082,"RPC",1186,0)
ORWDCN32 ORDRMSG
"KRN",19,10082,"RPC",1187,0)
ORWDCN32 PROCEDURES
"KRN",19,10082,"RPC",1188,0)
ORWDCSLT DEF
"KRN",19,10082,"RPC",1189,0)
ORWDCSLT LOOK200
"KRN",19,10082,"RPC",1190,0)
ORWDFH ADDLATE
"KRN",19,10082,"RPC",1191,0)
ORWDFH ATTR
"KRN",19,10082,"RPC",1192,0)
ORWDFH CURISO
"KRN",19,10082,"RPC",1193,0)
ORWDFH DIETS
"KRN",19,10082,"RPC",1194,0)
ORWDFH FINDTYP
"KRN",19,10082,"RPC",1195,0)
ORWDFH ISOIEN
"KRN",19,10082,"RPC",1196,0)
ORWDFH ISOLIST
"KRN",19,10082,"RPC",1197,0)
ORWDFH PARAM
"KRN",19,10082,"RPC",1198,0)
ORWDFH QTY2CC
"KRN",19,10082,"RPC",1199,0)
ORWDFH TFPROD
"KRN",19,10082,"RPC",1200,0)
ORWDFH TXT
"KRN",19,10082,"RPC",1201,0)
ORWDGX LOAD
"KRN",19,10082,"RPC",1202,0)
ORWDGX VMDEF
"KRN",19,10082,"RPC",1203,0)
ORWDLR ABBSPEC
"KRN",19,10082,"RPC",1204,0)
ORWDLR ALLSAMP
"KRN",19,10082,"RPC",1205,0)
ORWDLR DEF
"KRN",19,10082,"RPC",1206,0)
ORWDLR LOAD
"KRN",19,10082,"RPC",1207,0)
ORWDLR OIPARAM
"KRN",19,10082,"RPC",1208,0)
ORWDLR STOP
"KRN",19,10082,"RPC",1209,0)
ORWDLR32 ABBSPEC
"KRN",19,10082,"RPC",1210,0)
ORWDLR32 ALLSAMP
"KRN",19,10082,"RPC",1211,0)
ORWDLR32 ALLSPEC
"KRN",19,10082,"RPC",1212,0)
ORWDLR32 DEF
"KRN",19,10082,"RPC",1213,0)
ORWDLR32 IC DEFAULT
"KRN",19,10082,"RPC",1214,0)
ORWDLR32 IC VALID
"KRN",19,10082,"RPC",1215,0)
ORWDLR32 IMMED COLLECT
"KRN",19,10082,"RPC",1216,0)
ORWDLR32 LAB COLL TIME
"KRN",19,10082,"RPC",1217,0)
ORWDLR32 LOAD
"KRN",19,10082,"RPC",1218,0)
ORWDLR32 MAXDAYS
"KRN",19,10082,"RPC",1219,0)
ORWDLR32 ONE SAMPLE
"KRN",19,10082,"RPC",1220,0)
ORWDLR32 ONE SPECIMEN
"KRN",19,10082,"RPC",1221,0)
ORWDLR32 STOP
"KRN",19,10082,"RPC",1222,0)
ORWDOR VMSLCT
"KRN",19,10082,"RPC",1227,0)
ORWDPS32 ALLROUTE
"KRN",19,10082,"RPC",1228,0)
ORWDPS32 AUTH
"KRN",19,10082,"RPC",1229,0)
ORWDPS32 DLGSLCT
"KRN",19,10082,"RPC",1230,0)
ORWDPS32 DOSES
"KRN",19,10082,"RPC",1231,0)
ORWDPS32 DRUGMSG
"KRN",19,10082,"RPC",1232,0)
ORWDPS32 FORMALT
"KRN",19,10082,"RPC",1233,0)
ORWDPS32 ISSPLY
"KRN",19,10082,"RPC",1234,0)
ORWDPS32 IVAMT
"KRN",19,10082,"RPC",1235,0)
ORWDPS32 MEDISIV
"KRN",19,10082,"RPC",1236,0)
ORWDPS32 OISLCT
"KRN",19,10082,"RPC",1237,0)
ORWDPS32 SCSTS
"KRN",19,10082,"RPC",1238,0)
ORWDPS32 VALQTY
"KRN",19,10082,"RPC",1239,0)
ORWDPS32 VALRATE
"KRN",19,10082,"RPC",1240,0)
ORWDPS32 VALSCH
"KRN",19,10082,"RPC",1241,0)
ORWDRA DEF
"KRN",19,10082,"RPC",1242,0)
ORWDRA32 APPROVAL
"KRN",19,10082,"RPC",1243,0)
ORWDRA32 DEF
"KRN",19,10082,"RPC",1244,0)
ORWDRA32 IMTYPSEL
"KRN",19,10082,"RPC",1245,0)
ORWDRA32 ISOLATN
"KRN",19,10082,"RPC",1246,0)
ORWDRA32 LOCTYPE
"KRN",19,10082,"RPC",1247,0)
ORWDRA32 PROCMSG
"KRN",19,10082,"RPC",1248,0)
ORWDRA32 RADSRC
"KRN",19,10082,"RPC",1249,0)
ORWDRA32 RAORDITM
"KRN",19,10082,"RPC",1250,0)
ORWDX AGAIN
"KRN",19,10082,"RPC",1251,0)
ORWDX DGRP
"KRN",19,10082,"RPC",1252,0)
ORWDX DISMSG
"KRN",19,10082,"RPC",1253,0)
ORWDX DLGDEF
"KRN",19,10082,"RPC",1254,0)
ORWDX DLGID
"KRN",19,10082,"RPC",1255,0)
ORWDX DLGQUIK
"KRN",19,10082,"RPC",1256,0)
ORWDX FORMID
"KRN",19,10082,"RPC",1257,0)
ORWDX LOADRSP
"KRN",19,10082,"RPC",1258,0)
ORWDX LOCK
"KRN",19,10082,"RPC",1259,0)
ORWDX MSG
"KRN",19,10082,"RPC",1260,0)
ORWDX ORDITM
"KRN",19,10082,"RPC",1261,0)
ORWDX SAVE
"KRN",19,10082,"RPC",1262,0)
ORWDX SEND
"KRN",19,10082,"RPC",1263,0)
ORWDX SENDP
"KRN",19,10082,"RPC",1264,0)
ORWDX UNLOCK
"KRN",19,10082,"RPC",1265,0)
ORWDX WRLST
"KRN",19,10082,"RPC",1266,0)
ORWDXA ALERT
"KRN",19,10082,"RPC",1267,0)
ORWDXA COMPLETE
"KRN",19,10082,"RPC",1268,0)
ORWDXA DC
"KRN",19,10082,"RPC",1269,0)
ORWDXA DCREASON
"KRN",19,10082,"RPC",1270,0)
ORWDXA DCREQIEN
"KRN",19,10082,"RPC",1271,0)
ORWDXA FLAG
"KRN",19,10082,"RPC",1272,0)
ORWDXA FLAGTXT
"KRN",19,10082,"RPC",1273,0)
ORWDXA HOLD
"KRN",19,10082,"RPC",1274,0)
ORWDXA UNFLAG
"KRN",19,10082,"RPC",1275,0)
ORWDXA UNHOLD
"KRN",19,10082,"RPC",1276,0)
ORWDXA VALID
"KRN",19,10082,"RPC",1277,0)
ORWDXA VERIFY
"KRN",19,10082,"RPC",1278,0)
ORWDXA WCGET
"KRN",19,10082,"RPC",1279,0)
ORWDXA WCPUT
"KRN",19,10082,"RPC",1280,0)
ORWDXC ACCEPT
"KRN",19,10082,"RPC",1281,0)
ORWDXC DELAY
"KRN",19,10082,"RPC",1282,0)
ORWDXC DELORD
"KRN",19,10082,"RPC",1283,0)
ORWDXC DISPLAY
"KRN",19,10082,"RPC",1284,0)
ORWDXC FILLID
"KRN",19,10082,"RPC",1285,0)
ORWDXC ON
"KRN",19,10082,"RPC",1286,0)
ORWDXC SAVECHK
"KRN",19,10082,"RPC",1287,0)
ORWDXC SESSION
"KRN",19,10082,"RPC",1288,0)
ORWDXM AUTOACK
"KRN",19,10082,"RPC",1289,0)
ORWDXM DLGNAME
"KRN",19,10082,"RPC",1290,0)
ORWDXM FORMID
"KRN",19,10082,"RPC",1291,0)
ORWDXM LOADSET
"KRN",19,10082,"RPC",1292,0)
ORWDXM MENU
"KRN",19,10082,"RPC",1293,0)
ORWDXM MSTYLE
"KRN",19,10082,"RPC",1294,0)
ORWDXM PROMPTS
"KRN",19,10082,"RPC",1295,0)
ORWDXM1 BLDQRSP
"KRN",19,10082,"RPC",1296,0)
ORWDXM2 CLRRCL
"KRN",19,10082,"RPC",1297,0)
ORWDXQ DLGNAME
"KRN",19,10082,"RPC",1298,0)
ORWDXQ DLGSAVE
"KRN",19,10082,"RPC",1299,0)
ORWDXQ GETQLST
"KRN",19,10082,"RPC",1300,0)
ORWDXQ GETQNAM
"KRN",19,10082,"RPC",1301,0)
ORWDXQ PUTQLST
"KRN",19,10082,"RPC",1302,0)
ORWDXQ PUTQNAM
"KRN",19,10082,"RPC",1303,0)
ORWDXR ISREL
"KRN",19,10082,"RPC",1304,0)
ORWDXR RENEW
"KRN",19,10082,"RPC",1305,0)
ORWDXR RNWFLDS
"KRN",19,10082,"RPC",1306,0)
ORWGEPT CLINRNG
"KRN",19,10082,"RPC",1307,0)
ORWLR CUMULATIVE REPORT
"KRN",19,10082,"RPC",1308,0)
ORWLR CUMULATIVE SECTION
"KRN",19,10082,"RPC",1309,0)
ORWLR REPORT LISTS
"KRN",19,10082,"RPC",1310,0)
ORWLRR ALLTESTS
"KRN",19,10082,"RPC",1311,0)
ORWLRR ATESTS
"KRN",19,10082,"RPC",1312,0)
ORWLRR ATG
"KRN",19,10082,"RPC",1313,0)
ORWLRR ATOMICS
"KRN",19,10082,"RPC",1314,0)
ORWLRR CHART
"KRN",19,10082,"RPC",1315,0)
ORWLRR CHEMTEST
"KRN",19,10082,"RPC",1316,0)
ORWLRR GRID
"KRN",19,10082,"RPC",1317,0)
ORWLRR INTERIM
"KRN",19,10082,"RPC",1318,0)
ORWLRR INTERIMG
"KRN",19,10082,"RPC",1319,0)
ORWLRR INTERIMS
"KRN",19,10082,"RPC",1320,0)
ORWLRR MICRO
"KRN",19,10082,"RPC",1321,0)
ORWLRR NEWOLD
"KRN",19,10082,"RPC",1322,0)
ORWLRR PARAM
"KRN",19,10082,"RPC",1323,0)
ORWLRR SPEC
"KRN",19,10082,"RPC",1324,0)
ORWLRR TG
"KRN",19,10082,"RPC",1325,0)
ORWLRR USERS
"KRN",19,10082,"RPC",1326,0)
ORWLRR UTGA
"KRN",19,10082,"RPC",1327,0)
ORWLRR UTGD
"KRN",19,10082,"RPC",1328,0)
ORWLRR UTGR
"KRN",19,10082,"RPC",1329,0)
ORWMC PATIENT PROCEDURES
"KRN",19,10082,"RPC",1330,0)
ORWOR RESULT
"KRN",19,10082,"RPC",1331,0)
ORWOR SHEETS
"KRN",19,10082,"RPC",1332,0)
ORWOR TSALL
"KRN",19,10082,"RPC",1333,0)
ORWORB AUTOUNFLAG ORDERS
"KRN",19,10082,"RPC",1334,0)
ORWORB FASTUSER
"KRN",19,10082,"RPC",1335,0)
ORWORB GET TIU ALERT INFO
"KRN",19,10082,"RPC",1336,0)
ORWORB GETDATA
"KRN",19,10082,"RPC",1337,0)
ORWORB KILL UNSIG ORDERS ALERT
"KRN",19,10082,"RPC",1339,0)
ORWORDG ALLTREE
"KRN",19,10082,"RPC",1340,0)
ORWORDG GRPSEQB
"KRN",19,10082,"RPC",1341,0)
ORWORDG IEN
"KRN",19,10082,"RPC",1342,0)
ORWORDG MAPSEQ
"KRN",19,10082,"RPC",1343,0)
ORWORDG REVSTS
"KRN",19,10082,"RPC",1344,0)
ORWORR AGET
"KRN",19,10082,"RPC",1345,0)
ORWORR GET
"KRN",19,10082,"RPC",1346,0)
ORWORR GET4LST
"KRN",19,10082,"RPC",1347,0)
ORWORR GETBYIFN
"KRN",19,10082,"RPC",1348,0)
ORWORR GETTXT
"KRN",19,10082,"RPC",1349,0)
ORWPCE ACTIVE PROV
"KRN",19,10082,"RPC",1350,0)
ORWPCE ACTPROB
"KRN",19,10082,"RPC",1351,0)
ORWPCE CPTREQD
"KRN",19,10082,"RPC",1352,0)
ORWPCE DELETE
"KRN",19,10082,"RPC",1353,0)
ORWPCE DIAG
"KRN",19,10082,"RPC",1354,0)
ORWPCE GET EDUCATION TOPICS
"KRN",19,10082,"RPC",1355,0)
ORWPCE GET EXAM TYPE
"KRN",19,10082,"RPC",1356,0)
ORWPCE GET HEALTH FACTORS TY
"KRN",19,10082,"RPC",1357,0)
ORWPCE GET IMMUNIZATION TYPE
"KRN",19,10082,"RPC",1358,0)
ORWPCE GET SET OF CODES
"KRN",19,10082,"RPC",1359,0)
ORWPCE GET SKIN TEST TYPE
"KRN",19,10082,"RPC",1360,0)
ORWPCE GET TREATMENT TYPE
"KRN",19,10082,"RPC",1361,0)
ORWPCE HF
"KRN",19,10082,"RPC",1362,0)
ORWPCE IMM
"KRN",19,10082,"RPC",1363,0)
ORWPCE LEX
"KRN",19,10082,"RPC",1364,0)
ORWPCE LEXCODE
"KRN",19,10082,"RPC",1366,0)
ORWPCE NOTEVSTR
"KRN",19,10082,"RPC",1367,0)
ORWPCE PCE4NOTE
"KRN",19,10082,"RPC",1368,0)
ORWPCE PED
"KRN",19,10082,"RPC",1369,0)
ORWPCE PROC
"KRN",19,10082,"RPC",1370,0)
ORWPCE SAVE
"KRN",19,10082,"RPC",1371,0)
ORWPCE SCDIS
"KRN",19,10082,"RPC",1372,0)
ORWPCE SCSEL
"KRN",19,10082,"RPC",1373,0)
ORWPCE SK
"KRN",19,10082,"RPC",1374,0)
ORWPCE TRT
"KRN",19,10082,"RPC",1375,0)
ORWPCE VISIT
"KRN",19,10082,"RPC",1376,0)
ORWPCE XAM
"KRN",19,10082,"RPC",1377,0)
ORWPS ACTIVE
"KRN",19,10082,"RPC",1378,0)
ORWPS COVER
"KRN",19,10082,"RPC",1379,0)
ORWPS DETAIL
"KRN",19,10082,"RPC",1380,0)
ORWPS1 NEWDLG
"KRN",19,10082,"RPC",1381,0)
ORWPS1 PICKUP
"KRN",19,10082,"RPC",1382,0)
ORWPS1 REFILL
"KRN",19,10082,"RPC",1383,0)
ORWPT ADMITLST
"KRN",19,10082,"RPC",1384,0)
ORWPT APPTLST
"KRN",19,10082,"RPC",1385,0)
ORWPT CLINRNG
"KRN",19,10082,"RPC",1386,0)
ORWPT CWAD
"KRN",19,10082,"RPC",1387,0)
ORWPT DFLTSRC
"KRN",19,10082,"RPC",1388,0)
ORWPT DIEDON
"KRN",19,10082,"RPC",1389,0)
ORWPT DISCHARGE
"KRN",19,10082,"RPC",1390,0)
ORWPT ENCTITL
"KRN",19,10082,"RPC",1391,0)
ORWPT FULLSSN
"KRN",19,10082,"RPC",1392,0)
ORWPT ID INFO
"KRN",19,10082,"RPC",1393,0)
ORWPT LAST5
"KRN",19,10082,"RPC",1394,0)
ORWPT LIST ALL
"KRN",19,10082,"RPC",1395,0)
ORWPT PTINQ
"KRN",19,10082,"RPC",1396,0)
ORWPT SAVDFLT
"KRN",19,10082,"RPC",1397,0)
ORWPT SELCHK
"KRN",19,10082,"RPC",1398,0)
ORWPT SELECT
"KRN",19,10082,"RPC",1399,0)
ORWPT SHARE
"KRN",19,10082,"RPC",1400,0)
ORWPT TOP
"KRN",19,10082,"RPC",1401,0)
ORWPT1 PCDETAIL
"KRN",19,10082,"RPC",1402,0)
ORWPT1 PRCARE
"KRN",19,10082,"RPC",1403,0)
ORWPT16 ADMITLST
"KRN",19,10082,"RPC",1404,0)
ORWPT16 APPTLST
"KRN",19,10082,"RPC",1405,0)
ORWPT16 DEMOG
"KRN",19,10082,"RPC",1406,0)
ORWPT16 GETVSIT
"KRN",19,10082,"RPC",1407,0)
ORWPT16 ID INFO
"KRN",19,10082,"RPC",1408,0)
ORWPT16 LIST ALL
"KRN",19,10082,"RPC",1409,0)
ORWPT16 LOOKUP
"KRN",19,10082,"RPC",1410,0)
ORWPT16 PSCNVT
"KRN",19,10082,"RPC",1411,0)
ORWRA DEFAULT EXAM SETTINGS
"KRN",19,10082,"RPC",1412,0)
ORWRA IMAGING EXAMS
"KRN",19,10082,"RPC",1413,0)
ORWRA PRINT REPORT
"KRN",19,10082,"RPC",1414,0)
ORWRA REPORT TEXT
"KRN",19,10082,"RPC",1415,0)
ORWRP PRINT LAB REPORTS
"KRN",19,10082,"RPC",1416,0)
ORWRP PRINT REPORT
"KRN",19,10082,"RPC",1417,0)
ORWRP REPORT LISTS
"KRN",19,10082,"RPC",1418,0)
ORWRP REPORT TEXT
"KRN",19,10082,"RPC",1419,0)
ORWRP1 LISTNUTR
"KRN",19,10082,"RPC",1420,0)
ORWRP16 REPORT LISTS
"KRN",19,10082,"RPC",1421,0)
ORWRP16 REPORT TEXT
"KRN",19,10082,"RPC",1422,0)
ORWTIU GET DCSUMM CONTEXT
"KRN",19,10082,"RPC",1423,0)
ORWTIU GET TIU CONTEXT
"KRN",19,10082,"RPC",1424,0)
ORWTIU SAVE DCSUMM CONTEXT
"KRN",19,10082,"RPC",1425,0)
ORWTIU SAVE TIU CONTEXT
"KRN",19,10082,"RPC",1426,0)
ORWU CLINLOC
"KRN",19,10082,"RPC",1427,0)
ORWU DEVICE
"KRN",19,10082,"RPC",1428,0)
ORWU DT
"KRN",19,10082,"RPC",1429,0)
ORWU EXTNAME
"KRN",19,10082,"RPC",1430,0)
ORWU GBLREF
"KRN",19,10082,"RPC",1431,0)
ORWU GENERIC
"KRN",19,10082,"RPC",1432,0)
ORWU HASKEY
"KRN",19,10082,"RPC",1433,0)
ORWU HOSPLOC
"KRN",19,10082,"RPC",1434,0)
ORWU INPLOC
"KRN",19,10082,"RPC",1435,0)
ORWU NEWPERS
"KRN",19,10082,"RPC",1436,0)
ORWU NPHASKEY
"KRN",19,10082,"RPC",1437,0)
ORWU PATCH
"KRN",19,10082,"RPC",1438,0)
ORWU TOOLMENU
"KRN",19,10082,"RPC",1439,0)
ORWU USERINFO
"KRN",19,10082,"RPC",1440,0)
ORWU VALDT
"KRN",19,10082,"RPC",1441,0)
ORWU VALIDSIG
"KRN",19,10082,"RPC",1442,0)
ORWU VERSRV
"KRN",19,10082,"RPC",1443,0)
ORWU16 DEVICE
"KRN",19,10082,"RPC",1444,0)
ORWU16 HOSPLOC
"KRN",19,10082,"RPC",1445,0)
ORWU16 NEWPERS
"KRN",19,10082,"RPC",1446,0)
ORWU16 USERINFO
"KRN",19,10082,"RPC",1447,0)
ORWU16 VALDT
"KRN",19,10082,"RPC",1448,0)
ORWU16 VALIDSIG
"KRN",19,10082,"RPC",1449,0)
ORWUH POPUP
"KRN",19,10082,"RPC",1450,0)
ORWUX SYMTAB
"KRN",19,10082,"RPC",1451,0)
ORWUXT LST
"KRN",19,10082,"RPC",1452,0)
ORWUXT REF
"KRN",19,10082,"RPC",1453,0)
ORWUXT VAL
"KRN",19,10082,"RPC",1454,0)
ORQQCN DEFAULT REQUEST REASON
"KRN",19,10082,"RPC",1455,0)
ORWDX LOCK ORDER
"KRN",19,10082,"RPC",1456,0)
ORWDX UNLOCK ORDER
"KRN",19,10082,"RPC",1457,0)
ORWDCN32 NEWDLG
"KRN",19,10082,"RPC",1458,0)
ORQQCN GET SERVICE IEN
"KRN",19,10082,"RPC",1459,0)
ORQQCN PROVDX
"KRN",19,10082,"RPC",1460,0)
TIU TEMPLATE ACCESS LEVEL
"KRN",19,10082,"RPC",1461,0)
TIU GET DOCUMENT TITLE
"KRN",19,10082,"RPC",1462,0)
ORWPT BYWARD
"KRN",19,10082,"RPC",1463,0)
ORQQPX GET HIST LOCATIONS
"KRN",19,10082,"RPC",1464,0)
ORQQPX NEW REMINDERS ACTIVE
"KRN",19,10082,"RPC",1465,0)
ORWPCE GET VISIT
"KRN",19,10082,"RPC",1480,0)
TIU GET REQUEST
"KRN",19,10082,"RPC",1481,0)
ORWORB KILL EXPIR MED ALERT
"KRN",19,10082,"RPC",1482,0)
DG CHK BS5 XREF ARRAY
"KRN",19,10082,"RPC",1483,0)
DG CHK BS5 XREF Y/N
"KRN",19,10082,"RPC",1484,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,10082,"RPC",1485,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,10082,"RPC",1486,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,10082,"RPC",1487,0)
ORQQCN CANEDIT
"KRN",19,10082,"RPC",1488,0)
ORQQCN EDIT DEFAULT REASON
"KRN",19,10082,"RPC",1489,0)
ORQQCN SF513 WINDOWS PRINT
"KRN",19,10082,"RPC",1490,0)
ORWCIRN FACLIST
"KRN",19,10082,"RPC",1491,0)
ORWDLR32 GET LAB TIMES
"KRN",19,10082,"RPC",1492,0)
ORWPT LEGACY
"KRN",19,10082,"RPC",1493,0)
ORWRP GET DEFAULT PRINTER
"KRN",19,10082,"RPC",1494,0)
ORWRP PRINT WINDOWS REPORT
"KRN",19,10082,"RPC",1495,0)
ORWRP SAVE DEFAULT PRINTER
"KRN",19,10082,"RPC",1496,0)
ORWRP WINPRINT DEFAULT
"KRN",19,10082,"RPC",1497,0)
ORWRP WINPRINT LAB REPORTS
"KRN",19,10082,"RPC",1498,0)
ORWTIU WINPRINT NOTE
"KRN",19,10082,"RPC",1500,0)
ORWPCE GAFOK
"KRN",19,10082,"RPC",1501,0)
ORWPCE MHCLINIC
"KRN",19,10082,"RPC",1502,0)
ORWPCE LOADGAF
"KRN",19,10082,"RPC",1503,0)
ORWPCE SAVEGAF
"KRN",19,10082,"RPC",1504,0)
ORWPCE FORCE
"KRN",19,10082,"RPC",1505,0)
TIU GET DEFAULT PROVIDER
"KRN",19,10082,"RPC",1506,0)
TIU GET SITE PARAMETERS
"KRN",19,10082,"RPC",1507,0)
TIU IS USER A PROVIDER?
"KRN",19,10082,"RPC",1508,0)
ORWOR VWGET
"KRN",19,10082,"RPC",1509,0)
ORWOR VWSET
"KRN",19,10082,"RPC",1510,0)
ORWU PARAM
"KRN",19,10082,"RPC",1511,0)
ORWDOR LKSCRN
"KRN",19,10082,"RPC",1512,0)
ORWDOR VALNUM
"KRN",19,10082,"RPC",1513,0)
ORWDPS32 VALROUTE
"KRN",19,10082,"RPC",1515,0)
ORWORB UNSIG ORDERS FOLLOWUP
"KRN",19,10082,"RPC",1516,0)
ORWTIU GET LISTBOX ITEM
"KRN",19,10082,"RPC",1517,0)
ORWRP2 HS COMP FILES
"KRN",19,10082,"RPC",1518,0)
ORWRP2 HS COMPONENTS
"KRN",19,10082,"RPC",1519,0)
ORWRP2 HS FILE LOOKUP
"KRN",19,10082,"RPC",1520,0)
ORWRP2 HS REPORT TEXT
"KRN",19,10082,"RPC",1521,0)
ORWRP2 HS SUBITEMS
"KRN",19,10082,"RPC",1522,0)
ORWPCE HASCPT
"KRN",19,10082,"RPC",1523,0)
ORWPCE ASKPCE
"KRN",19,10082,"RPC",1524,0)
ORWPCE MHTESTOK
"KRN",19,10082,"RPC",1525,0)
ORWPCE GAFURL
"KRN",19,10082,"RPC",1526,0)
ORQQPXRM DIALOG PROMPTS
"KRN",19,10082,"RPC",1527,0)
ORQQPXRM EDUCATION SUBTOPICS
"KRN",19,10082,"RPC",1528,0)
ORQQPXRM EDUCATION SUMMARY
"KRN",19,10082,"RPC",1529,0)
ORQQPXRM EDUCATION TOPIC
"KRN",19,10082,"RPC",1530,0)
ORQQPXRM MENTAL HEALTH
"KRN",19,10082,"RPC",1531,0)
ORQQPXRM MENTAL HEALTH RESULTS
"KRN",19,10082,"RPC",1532,0)
ORQQPXRM MENTAL HEALTH SAVE
"KRN",19,10082,"RPC",1533,0)
ORQQPXRM PROGRESS NOTE HEADER
"KRN",19,10082,"RPC",1534,0)
ORQQPXRM REMINDER CATEGORIES
"KRN",19,10082,"RPC",1535,0)
ORQQPXRM REMINDER DETAIL
"KRN",19,10082,"RPC",1536,0)
ORQQPXRM REMINDER DIALOG
"KRN",19,10082,"RPC",1537,0)
ORQQPXRM REMINDER EVALUATION
"KRN",19,10082,"RPC",1538,0)
ORQQPXRM REMINDER INQUIRY
"KRN",19,10082,"RPC",1539,0)
ORQQPXRM REMINDER WEB
"KRN",19,10082,"RPC",1540,0)
ORQQPXRM REMINDERS APPLICABLE
"KRN",19,10082,"RPC",1541,0)
ORQQPXRM REMINDERS UNEVALUATED
"KRN",19,10082,"RPC",1542,0)
ORWLRR INFO
"KRN",19,10082,"RPC",1543,0)
TIU GET PRINT NAME
"KRN",19,10082,"RPC",1544,0)
TIU WAS THIS SAVED?
"KRN",19,10082,"RPC",1545,0)
ORWD1 COMLOC
"KRN",19,10082,"RPC",1546,0)
ORWD1 SIG4ANY
"KRN",19,10082,"RPC",1547,0)
ORWD1 SIG4ONE
"KRN",19,10082,"RPC",1548,0)
ORWOR UNSIGN
"KRN",19,10082,"RPC",1549,0)
ORWPT INPLOC
"KRN",19,10082,"RPC",1553,0)
ORQQCN2 GET PREREQUISITE
"KRN",19,10082,"RPC",1554,0)
ORQQCN2 SCHEDULE CONSULT
"KRN",19,10082,"RPC",1555,0)
YS GAF API
"KRN",19,10082,"RPC",1556,0)
TIU LONG LIST BOILERPLATED
"KRN",19,10082,"RPC",1557,0)
ORWDLR33 FUTURE LAB COLLECTS
"KRN",19,10082,"RPC",1558,0)
ORWRP PRINT REMOTE REPORT
"KRN",19,10082,"RPC",1559,0)
ORWRP PRINT WINDOWS REMOTE
"KRN",19,10082,"RPC",1560,0)
ORWRP PRINT LAB REMOTE
"KRN",19,10082,"RPC",1561,0)
ORWRP PRINT WINDOWS LAB REMOTE
"KRN",19,10082,"RPC",1562,0)
ORQQPXRM DIALOG ACTIVE
"KRN",19,10082,"RPC",1563,0)
ORWPCE MH TEST AUTHORIZED
"KRN",19,10082,"RPC",1564,0)
TIU GET BOILERPLATE
"KRN",19,10082,"RPC",1565,0)
ORWRP2 HS COMPONENT SUBS
"KRN",19,10082,"RPC",1566,0)
ORWCH SAVFONT
"KRN",19,10082,"RPC",1567,0)
ORWDLR33 LASTTIME
"KRN",19,10082,"RPC",1568,0)
ORWD1 SVONLY
"KRN",19,10082,"RPC",1569,0)
ORWPCE HASVISIT
"KRN",19,10082,"RPC",1570,0)
ORWPCE GETMOD
"KRN",19,10082,"RPC",1571,0)
ORWPCE CPTMODS
"KRN",19,10082,"RPC",1572,0)
XWB REMOTE CLEAR
"KRN",19,10082,"RPC",1573,0)
XWB REMOTE GETDATA
"KRN",19,10082,"RPC",1574,0)
XWB REMOTE RPC
"KRN",19,10082,"RPC",1575,0)
XWB REMOTE STATUS CHECK
"KRN",19,10082,"RPC",1576,0)
ORQQCN ASSIGNABLE MED RESULTS
"KRN",19,10082,"RPC",1577,0)
ORQQCN ATTACH MED RESULTS
"KRN",19,10082,"RPC",1578,0)
ORQQCN GET MED RESULT DETAILS
"KRN",19,10082,"RPC",1579,0)
ORQQCN REMOVABLE MED RESULTS
"KRN",19,10082,"RPC",1580,0)
ORQQCN REMOVE MED RESULTS
"KRN",19,10082,"RPC",1581,0)
ORQQCN SVC W/SYNONYMS
"KRN",19,10082,"RPC",1582,0)
ORWCV1 COVERSHEET LIST
"KRN",19,10082,"RPC",1583,0)
ORWORB KILL EXPIR OI ALERT
"KRN",19,10082,"RPC",1584,0)
ORWPCE GETSVC
"KRN",19,10082,"RPC",1585,0)
ORWRP LAB REPORT LISTS
"KRN",19,10082,"RPC",1587,0)
ORWTPN GETCLASS
"KRN",19,10082,"RPC",1588,0)
ORWTPN GETTC
"KRN",19,10082,"RPC",1589,0)
ORWTPO CSARNGD
"KRN",19,10082,"RPC",1590,0)
ORWTPO CSLABD
"KRN",19,10082,"RPC",1591,0)
ORWTPO GETTABS
"KRN",19,10082,"RPC",1592,0)
ORWTPP ADDLIST
"KRN",19,10082,"RPC",1593,0)
ORWTPP CHKSURR
"KRN",19,10082,"RPC",1594,0)
ORWTPP CLDAYS
"KRN",19,10082,"RPC",1595,0)
ORWTPP CLEARNOT
"KRN",19,10082,"RPC",1596,0)
ORWTPP CLRANGE
"KRN",19,10082,"RPC",1597,0)
ORWTPP CSARNG
"KRN",19,10082,"RPC",1598,0)
ORWTPP CSLAB
"KRN",19,10082,"RPC",1599,0)
ORWTPP DELLIST
"KRN",19,10082,"RPC",1600,0)
ORWTPP GETCOMBO
"KRN",19,10082,"RPC",1601,0)
ORWTPP GETCOS
"KRN",19,10082,"RPC",1602,0)
ORWTPP GETDCOS
"KRN",19,10082,"RPC",1603,0)
ORWTPP GETNOT
"KRN",19,10082,"RPC",1604,0)
ORWTPP GETNOTO
"KRN",19,10082,"RPC",1605,0)
ORWTPP GETOC
"KRN",19,10082,"RPC",1606,0)
ORWTPP GETOTHER
"KRN",19,10082,"RPC",1607,0)
ORWTPP GETREM
"KRN",19,10082,"RPC",1608,0)
ORWTPP GETSUB
"KRN",19,10082,"RPC",1609,0)
ORWTPP GETSURR
"KRN",19,10082,"RPC",1610,0)
ORWTPP GETTD
"KRN",19,10082,"RPC",1611,0)
ORWTPP GETTU
"KRN",19,10082,"RPC",1612,0)
ORWTPP LSDEF
"KRN",19,10082,"RPC",1613,0)
ORWTPP NEWLIST
"KRN",19,10082,"RPC",1614,0)
ORWTPP PLISTS
"KRN",19,10082,"RPC",1615,0)
ORWTPP PLTEAMS
"KRN",19,10082,"RPC",1616,0)
ORWTPP REMLIST
"KRN",19,10082,"RPC",1617,0)
ORWTPP SAVECD
"KRN",19,10082,"RPC",1618,0)
ORWTPP SAVECS
"KRN",19,10082,"RPC",1619,0)
ORWTPP SAVELIST
"KRN",19,10082,"RPC",1620,0)
ORWTPP SAVENOT
"KRN",19,10082,"RPC",1621,0)
ORWTPP SAVENOTO
"KRN",19,10082,"RPC",1622,0)
ORWTPP SAVEOC
"KRN",19,10082,"RPC",1623,0)
ORWTPP SAVEPLD
"KRN",19,10082,"RPC",1624,0)
ORWTPP SAVESURR
"KRN",19,10082,"RPC",1625,0)
ORWTPP SAVET
"KRN",19,10082,"RPC",1626,0)
ORWTPP SETCOMBO
"KRN",19,10082,"RPC",1627,0)
ORWTPP SETDCOS
"KRN",19,10082,"RPC",1628,0)
ORWTPP SETOTHER
"KRN",19,10082,"RPC",1629,0)
ORWTPP SETREM
"KRN",19,10082,"RPC",1630,0)
ORWTPP SETSUB
"KRN",19,10082,"RPC",1631,0)
ORWTPP SORTDEF
"KRN",19,10082,"RPC",1632,0)
ORWTPP TEAMS
"KRN",19,10082,"RPC",1633,0)
ORWTPT ATEAMS
"KRN",19,10082,"RPC",1634,0)
ORWTPT GETTEAM
"KRN",19,10082,"RPC",1635,0)
TIU TEMPLATE GET DEFAULTS
"KRN",19,10082,"RPC",1636,0)
TIU TEMPLATE GET DESCRIPTION
"KRN",19,10082,"RPC",1637,0)
TIU TEMPLATE SET DEFAULTS
"KRN",19,10082,"RPC",1638,0)
ORWTIU IDNOTES INSTALLED
"KRN",19,10082,"RPC",1639,0)
ORQQPX GET FOLDERS
"KRN",19,10082,"RPC",1640,0)
ORQQPX SET FOLDERS
"KRN",19,10082,"RPC",1641,0)
TIU FIELD CAN EDIT
"KRN",19,10082,"RPC",1642,0)
TIU FIELD DELETE
"KRN",19,10082,"RPC",1643,0)
TIU FIELD EXPORT
"KRN",19,10082,"RPC",1644,0)
TIU FIELD IMPORT
"KRN",19,10082,"RPC",1645,0)
TIU FIELD LIST
"KRN",19,10082,"RPC",1646,0)
TIU FIELD LOAD
"KRN",19,10082,"RPC",1647,0)
TIU FIELD LOAD BY IEN
"KRN",19,10082,"RPC",1648,0)
TIU FIELD LOCK
"KRN",19,10082,"RPC",1649,0)
TIU FIELD NAME IS UNIQUE
"KRN",19,10082,"RPC",1650,0)
TIU FIELD SAVE
"KRN",19,10082,"RPC",1651,0)
TIU FIELD UNLOCK
"KRN",19,10082,"RPC",1652,0)
ORWDPS1 CHK94
"KRN",19,10082,"RPC",1653,0)
ORWDPS1 ODSLCT
"KRN",19,10082,"RPC",1654,0)
ORWDPS1 SCHALL
"KRN",19,10082,"RPC",1655,0)
ORWDPS2 ADMIN
"KRN",19,10082,"RPC",1656,0)
ORWDPS2 DAY2QTY
"KRN",19,10082,"RPC",1657,0)
ORWDPS2 OISLCT
"KRN",19,10082,"RPC",1658,0)
ORWDPS2 REQST
"KRN",19,10082,"RPC",1659,0)
ORWDX DGNM
"KRN",19,10082,"RPC",1660,0)
ORWUL FV4DG
"KRN",19,10082,"RPC",1661,0)
ORWUL FVIDX
"KRN",19,10082,"RPC",1662,0)
ORWUL FVSUB
"KRN",19,10082,"RPC",1663,0)
ORWUL QV4DG
"KRN",19,10082,"RPC",1664,0)
ORWUL QVIDX
"KRN",19,10082,"RPC",1665,0)
ORWUL QVSUB
"KRN",19,10082,"RPC",1666,0)
ORWDPS1 DFLTSPLY
"KRN",19,10082,"RPC",1668,0)
PXRM REMINDER DIALOG (TIU)
"KRN",19,10082,"RPC",1669,0)
ORWPCE ANYTIME
"KRN",19,10082,"RPC",1670,0)
ORQQPX GET DEF LOCATIONS
"KRN",19,10082,"RPC",1671,0)
ORWTPP GETIMG
"KRN",19,10082,"RPC",1672,0)
ORWTPP SETIMG
"KRN",19,10082,"RPC",1673,0)
ORWTPO GETIMGD
"KRN",19,10082,"RPC",1674,0)
ORQQPX REM INSERT AT CURSOR
"KRN",19,10082,"RPC",1675,0)
TIU REMINDER DIALOGS
"KRN",19,10082,"RPC",1676,0)
TIU REM DLG OK AS TEMPLATE
"KRN",19,10082,"RPC",1677,0)
ORWDPS2 MAXREF
"KRN",19,10082,"RPC",1678,0)
ORWDPS2 SCHREQ
"KRN",19,10082,"RPC",1679,0)
ORWRP COLUMN HEADERS
"KRN",19,10082,"RPC",1680,0)
TIU FIELD DOLMTEXT
"KRN",19,10082,"RPC",1681,0)
TIU TEMPLATE PERSONAL OBJECTS
"KRN",19,10082,"RPC",1682,0)
ORWPCE AUTO VISIT TYPE SELECT
"KRN",19,10082,"RPC",1683,0)
ORWDPS2 QTY2DAY
"KRN",19,10082,"RPC",1684,0)
ORWU HAS OPTION ACCESS
"KRN",19,10082,"RPC",1685,0)
TIU TEMPLATE LOCK
"KRN",19,10082,"RPC",1686,0)
ORQQPX LVREMLST
"KRN",19,10082,"RPC",1687,0)
ORQQPX NEW COVER SHEET ACTIVE
"KRN",19,10082,"RPC",1688,0)
ORQQPX NEW COVER SHEET REMS
"KRN",19,10082,"RPC",1689,0)
ORQQPX SAVELVL
"KRN",19,10082,"RPC",1690,0)
PXRM REMINDER CATEGORY
"KRN",19,10082,"RPC",1691,0)
PXRM REMINDERS AND CATEGORIES
"KRN",19,10082,"RPC",1692,0)
TIU DIV AND CLASS INFO
"KRN",19,10082,"RPC",1693,0)
TIU TEMPLATE GETBOIL
"KRN",19,10082,"RPC",1694,0)
TIU TEMPLATE GETITEMS
"KRN",19,10082,"RPC",1695,0)
TIU TEMPLATE GETROOTS
"KRN",19,10082,"RPC",1696,0)
TIU TEMPLATE GETTEXT
"KRN",19,10082,"RPC",1697,0)
TIU TEMPLATE ISEDITOR
"KRN",19,10082,"RPC",1698,0)
TIU TEMPLATE UNLOCK
"KRN",19,10082,"RPC",1699,0)
TIU USER CLASS LONG LIST
"KRN",19,10082,"RPC",1700,0)
ORWPCE ALWAYS CHECKOUT
"KRN",19,10082,"RPC",1701,0)
ORWPCE GET EXCLUDED
"KRN",19,10082,"RPC",1702,0)
ORWDPS1 FORMALT
"KRN",19,10082,"RPC",1703,0)
ORQPT DEFAULT LIST SORT
"KRN",19,10082,"RPC",1704,0)
ORWDPS1 DOSEALT
"KRN",19,10082,"RPC",1705,0)
ORWTPR OCDESC
"KRN",19,10082,"RPC",1706,0)
ORWTPR NOTDESC
"KRN",19,10082,"RPC",1707,0)
ORWDPS1 FAILDEA
"KRN",19,10082,"RPC",1708,0)
ORQPT DEFAULT CLINIC DATE RANG
"KRN",19,10082,"RPC",1709,0)
ORWTIU CANLINK
"KRN",19,10082,"RPC",1710,0)
TIU ID ATTACH ENTRY
"KRN",19,10082,"RPC",1711,0)
TIU ID CAN ATTACH
"KRN",19,10082,"RPC",1712,0)
TIU ID CAN RECEIVE
"KRN",19,10082,"RPC",1713,0)
TIU ID DETACH ENTRY
"KRN",19,10082,"RPC",1714,0)
ORWCOM GETOBJS
"KRN",19,10082,"RPC",1715,0)
ORWCOM DETAILS
"KRN",19,10082,"RPC",1716,0)
ORWCOM PTOBJ
"KRN",19,10082,"RPC",1718,0)
TIU TEMPLATE GETLINK
"KRN",19,10082,"RPC",1719,0)
TIU TEMPLATE ALL TITLES
"KRN",19,10082,"RPC",1720,0)
ORWSR LIST
"KRN",19,10082,"RPC",1721,0)
ORWSR SHOW SURG TAB
"KRN",19,10082,"RPC",1722,0)
ORWSR GET SURG CONTEXT
"KRN",19,10082,"RPC",1723,0)
ORWSR SAVE SURG CONTEXT
"KRN",19,10082,"RPC",1724,0)
ORWSR ONECASE
"KRN",19,10082,"RPC",1725,0)
ORWSR OPTOP
"KRN",19,10082,"RPC",1726,0)
ORWSR OPTOP NON-OR
"KRN",19,10082,"RPC",1727,0)
ORWSR SHOW OPTOP WHEN SIGNING
"KRN",19,10082,"RPC",1728,0)
ORWSR IS NON-OR PROCEDURE
"KRN",19,10082,"RPC",1729,0)
ORWSR CASELIST
"KRN",19,10082,"RPC",1730,0)
ORQQCN GET PROC IEN
"KRN",19,10082,"RPC",1731,0)
ORWRP PRINT V REPORT
"KRN",19,10082,"RPC",1732,0)
ORWRP3 EXPAND COLUMNS
"KRN",19,10082,"RPC",1733,0)
ORWTPD ACTDF
"KRN",19,10082,"RPC",1734,0)
ORWTPD DELDFLT
"KRN",19,10082,"RPC",1735,0)
ORWTPD GETDFLT
"KRN",19,10082,"RPC",1736,0)
ORWTPD RSDFLT
"KRN",19,10082,"RPC",1737,0)
ORWTPD SUDF
"KRN",19,10082,"RPC",1738,0)
ORWTPD SUINDV
"KRN",19,10082,"RPC",1739,0)
ORWTPD GETSETS
"KRN",19,10082,"RPC",1740,0)
ORWCOM ORDEROBJ
"KRN",19,10082,"RPC",1741,0)
ORWRP2 COMPABV
"KRN",19,10082,"RPC",1742,0)
ORWRP2 GETLKUP
"KRN",19,10082,"RPC",1743,0)
ORWRP2 SAVLKUP
"KRN",19,10082,"RPC",1744,0)
ORWRP2 COMPDISP
"KRN",19,10082,"RPC",1745,0)
ORWPCE ISCLINIC
"KRN",19,10082,"RPC",1746,0)
ORWCH SAVECOL
"KRN",19,10082,"RPC",1747,0)
ORWSR RPTLIST
"KRN",19,10082,"RPC",1748,0)
ORQQPXRM MST UPDATE
"KRN",19,10082,"RPC",1749,0)
ORWMC PATIENT PROCEDURES1
"KRN",19,10082,"RPC",1750,0)
ORWRA IMAGING EXAMS1
"KRN",19,10082,"RPC",1751,0)
ORWRA REPORT TEXT1
"KRN",19,10082,"RPC",1752,0)
ORWDPS4 CPINFO
"KRN",19,10082,"RPC",1753,0)
ORWDPS4 CPLST
"KRN",19,10082,"RPC",1754,0)
ORWORB KILL UNVER MEDS ALERT
"KRN",19,10082,"RPC",1755,0)
ORWORB KILL UNVER ORDERS ALERT
"KRN",19,10082,"RPC",1756,0)
ORWPCE HNCOK
"KRN",19,10082,"RPC",1757,0)
ORWPS MEDHIST
"KRN",19,10082,"RPC",1758,0)
TIU FIELD CHECK
"KRN",19,10082,"RPC",1759,0)
TIU FIELD LIST ADD
"KRN",19,10082,"RPC",1760,0)
TIU FIELD LIST IMPORT
"KRN",19,10082,"RPC",1761,0)
TIU SET DOCUMENT TEXT
"KRN",19,10082,"RPC",1762,0)
ORWDPS2 CHKPI
"KRN",19,10082,"RPC",1763,0)
ORWDXR GTORITM
"KRN",19,10082,"RPC",1764,0)
ORWDPS2 CHKGRP
"KRN",19,10082,"RPC",1765,0)
ORWDPS2 QOGRP
"KRN",19,10082,"RPC",1766,0)
ORWDXR GETPKG
"KRN",19,10082,"RPC",1767,0)
ORQPT MAKE RPL
"KRN",19,10082,"RPC",1768,0)
ORQPT READ RPL
"KRN",19,10082,"RPC",1769,0)
ORQPT KILL RPL
"KRN",19,10082,"RPC",1770,0)
ORWTIU GET SAVED CP FIELDS
"KRN",19,10082,"RPC",1771,0)
ORWDPS1 LOCPICK
"KRN",19,10082,"RPC",1772,0)
ORWPT LAST5 RPL
"KRN",19,10082,"RPC",1773,0)
ORWPT FULLSSN RPL
"KRN",19,10082,"RPC",1774,0)
ORWOR PKIUSE
"KRN",19,10082,"RPC",1775,0)
ORWOR1 SIG
"KRN",19,10082,"RPC",1776,0)
ORWOR1 CHKDIG
"KRN",19,10082,"RPC",1777,0)
ORWOR1 GETDTEXT
"KRN",19,10082,"RPC",1778,0)
ORWOR1 GETDSIG
"KRN",19,10082,"RPC",1779,0)
ORWTPD GETIMG
"KRN",19,10082,"RPC",1780,0)
OREVNTX1 PRMPTID
"KRN",19,10082,"RPC",1781,0)
ORECS01 CHKESSO
"KRN",19,10082,"RPC",1782,0)
ORECS01 VSITID
"KRN",19,10082,"RPC",1784,0)
OREVNTX LIST
"KRN",19,10082,"RPC",1785,0)
OREVNTX PAT
"KRN",19,10082,"RPC",1786,0)
OREVNTX1 GTEVT
"KRN",19,10082,"RPC",1787,0)
OREVNTX1 CPACT
"KRN",19,10082,"RPC",1788,0)
OREVNTX1 CURSPE
"KRN",19,10082,"RPC",1789,0)
OREVNTX1 CHGEVT
"KRN",19,10082,"RPC",1790,0)
OREVNTX1 DELPTEVT
"KRN",19,10082,"RPC",1791,0)
OREVNTX1 DFLTEVT
"KRN",19,10082,"RPC",1792,0)
OREVNTX ACTIVE
"KRN",19,10082,"RPC",1793,0)
OREVNTX1 PUTEVNT
"KRN",19,10082,"RPC",1794,0)
OREVNTX1 WRLSTED
"KRN",19,10082,"RPC",1795,0)
OREVNTX1 EVT
"KRN",19,10082,"RPC",1796,0)
OREVNTX1 NAME
"KRN",19,10082,"RPC",1797,0)
OREVNTX1 MATCH
"KRN",19,10082,"RPC",1798,0)
OREVNTX1 EMPTY
"KRN",19,10082,"RPC",1799,0)
OREVNTX1 EXISTS
"KRN",19,10082,"RPC",1800,0)
OREVNTX1 GTEVT1
"KRN",19,10082,"RPC",1801,0)
OREVNTX1 DIV
"KRN",19,10082,"RPC",1802,0)
OREVNTX1 DIV1
"KRN",19,10082,"RPC",1803,0)
OREVNTX1 LOC
"KRN",19,10082,"RPC",1804,0)
OREVNTX1 LOC1
"KRN",19,10082,"RPC",1805,0)
ORWDX SENDED
"KRN",19,10082,"RPC",1806,0)
OREVNTX1 GETDLG
"KRN",19,10082,"RPC",1807,0)
ORECS01 ECPRINT
"KRN",19,10082,"RPC",1811,0)
ORECS01 ECRPT
"KRN",19,10082,"RPC",1812,0)
OREVNTX1 ISDCOD
"KRN",19,10082,"RPC",1813,0)
OREVNTX1 SETDFLT
"KRN",19,10082,"RPC",1815,0)
TIU IS THIS A CLINPROC?
"KRN",19,10082,"RPC",1816,0)
TIU IDENTIFY CLINPROC CLASS
"KRN",19,10082,"RPC",1817,0)
TIU LONG LIST CLINPROC TITLES
"KRN",19,10082,"RPC",1819,0)
ORWDPS1 HASOIPI
"KRN",19,10082,"RPC",1821,0)
OREVNTX1 DEFLTS
"KRN",19,10082,"RPC",1822,0)
OREVNTX1 MULTS
"KRN",19,10082,"RPC",1823,0)
OREVNTX1 DONE
"KRN",19,10082,"RPC",1824,0)
OREVNTX1 PROMPT IDS
"KRN",19,10082,"RPC",1825,0)
ORWCIRN CHECKLINK
"KRN",19,10082,"RPC",1826,0)
XWB DIRECT RPC
"KRN",19,10082,"RPC",1827,0)
ORWDPS1 HASROUTE
"KRN",19,10082,"RPC",1828,0)
ORQQCN UNRESOLVED
"KRN",19,10082,"RPC",1829,0)
OREVNTX1 DELDFLT
"KRN",19,10082,"RPC",1830,0)
ORWCH LDFONT
"KRN",19,10082,"RPC",1831,0)
ORWU1 NAMECVT
"KRN",19,10082,"RPC",1832,0)
OREVNTX1 DFLTDLG
"KRN",19,10082,"RPC",1833,0)
ORWDPS5 LESAPI
"KRN",19,10082,"RPC",1834,0)
ORWDPS5 LESGRP
"KRN",19,10082,"RPC",1839,0)
OREVNTX1 TYPEXT
"KRN",19,10082,"RPC",1840,0)
ORWORR RGET
"KRN",19,10082,"RPC",1841,0)
OREVNTX1 AUTHMREL
"KRN",19,10082,"RPC",1842,0)
OREVNTX1 HAVEPRT
"KRN",19,10082,"RPC",1843,0)
OREVNTX1 CMEVTS
"KRN",19,10082,"RPC",1844,0)
OREVNTX1 ODPTEVID
"KRN",19,10082,"RPC",1845,0)
ORWOR PKISITE
"KRN",19,10082,"RPC",1846,0)
OREVNTX1 COMP
"KRN",19,10082,"RPC",1847,0)
OREVNTX1 ISHDORD
"KRN",19,10082,"RPC",1848,0)
ORWDXR ORCPLX
"KRN",19,10082,"RPC",1849,0)
OREVNTX1 ISPASS
"KRN",19,10082,"RPC",1850,0)
OREVNTX1 ISPASS1
"KRN",19,10082,"RPC",1851,0)
OREVNTX1 DLGIEN
"KRN",19,10082,"RPC",1852,0)
ORWDXR CANRN
"KRN",19,10082,"RPC",1853,0)
ORWDXR ISCPLX
"KRN",19,10082,"RPC",1854,0)
ORWDXA OFCPLX
"KRN",19,10082,"RPC",1855,0)
ORQQPX GET NOT PURPOSE
"KRN",19,10082,"RPC",1856,0)
ORWDPS1 IVDEA
"KRN",19,10082,"RPC",1857,0)
ORWDXR ISNOW
"KRN",19,10082,"RPC",1858,0)
ORRHCQ QRYITR
"KRN",19,10082,"RPC",1859,0)
OREVNTX1 GETSTS
"KRN",19,10082,"RPC",1860,0)
ORWU DEFAULT DIVISION
"KRN",19,10082,"RPC",1861,0)
ORWDXA ISACTOI
"KRN",19,10082,"RPC",1862,0)
ORECS01 SAVPATH
"KRN",19,10082,"RPC",1863,0)
ORWOR RESULT HISTORY
"KRN",19,10082,"RPC",1864,0)
XUS GET TOKEN
"KRN",19,10082,"RPC",1865,0)
ORQQPX IMMUN LIST
"KRN",19,10082,"RPC",1866,0)
XWB DEFERRED CLEARALL
"KRN",19,10082,"RPC",1867,0)
ORWOR1 SETDTEXT
"KRN",19,10082,"RPC",1868,0)
ORWOR1 GETDEA
"KRN",19,10082,"RPC",1869,0)
ORWOR1 GETDSCH
"KRN",19,10082,"RPC",1870,0)
ORWORB TEXT FOLLOWUP
"KRN",19,10082,"RPC",1871,0)
ORWU1 NEWLOC
"KRN",19,10082,"RPC",1872,0)
ORWPCE ACTIVE CODE
"KRN",19,10082,"RPC",1873,0)
ORQQPXRM GET WH LETTER TEXT
"KRN",19,10082,"RPC",1874,0)
ORQQPXRM GET WH LETTER TYPE
"KRN",19,10082,"RPC",1875,0)
ORQQPXRM GET WH PROC RESULT
"KRN",19,10082,"RPC",1876,0)
ORQQPXRM WOMEN HEALTH SAVE
"KRN",19,10082,"RPC",1877,0)
ORB FORWARD ALERT
"KRN",19,10082,"RPC",1878,0)
ORB RENEW ALERT
"KRN",19,10082,"RPC",1879,0)
ORPRF CLEAR
"KRN",19,10082,"RPC",1880,0)
ORPRF GETFLG
"KRN",19,10082,"RPC",1881,0)
ORPRF HASFLG
"KRN",19,10082,"RPC",1882,0)
ORWTPD GETOCM
"KRN",19,10082,"RPC",1883,0)
TIU ONE VISIT NOTE?
"KRN",19,10082,"RPC",1884,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,10082,"RPC",1885,0)
TIU USER INACTIVE?
"KRN",19,10082,"RPC",1886,0)
ORWTPD PUTOCM
"KRN",19,10082,"RPC",1887,0)
TIU HAS AUTHOR SIGNED?
"KRN",19,10082,"RPC",1888,0)
ORQQPXRM GET WH REPORT TEXT
"KRN",19,10082,"RPC",1889,0)
ORECS01 GETDIV
"KRN",19,10082,"U")
CPRSCHART VERSION 1.0.22.11
"KRN",19,11593,-1)
1^5
"KRN",19,11593,0)
ORB3 REC SORT METHOD
"KRN",19,11594,-1)
1^6
"KRN",19,11594,0)
ORB3 SORT METHOD
"KRN",8994,1241,-1)
0^20
"KRN",8994,1241,0)
ORECS01 GETDIV^GETDIV^ORECS01^1
"KRN",8994,1241,3,0)
^^1^1^3020819^
"KRN",8994,1241,3,1,0)
&^
"KRN",8994,1366,-1)
0^5
"KRN",8994,1366,0)
ORWU1 NEWLOC^NEWLOC^ORWU1^2
"KRN",8994,1366,1,0)
^8994.01^2^2^3030419^^
"KRN",8994,1366,1,1,0)
Returns a list of Clinics, Wards, and "Other" category entries from the 
"KRN",8994,1366,1,2,0)
HOSPITAL LOCATION (#44) file.
"KRN",8994,1369,-1)
0^2
"KRN",8994,1369,0)
ORPRF HASFLG^HASFLG^ORPRF^2^^^^1
"KRN",8994,1370,-1)
0^1
"KRN",8994,1370,0)
ORWPCE ACTIVE CODE^CODACTIV^ORWPCE2^1
"KRN",8994,1371,-1)
0^3
"KRN",8994,1371,0)
ORPRF GETFLG^GETFLG^ORPRF^2^^^^1
"KRN",8994,1372,-1)
0^4
"KRN",8994,1372,0)
ORPRF CLEAR^CLEAR^ORPRF^1
"KRN",8994,1373,-1)
0^6
"KRN",8994,1373,0)
ORQQPXRM GET WH LETTER TEXT^LETTER^WVRPCNO1^2^S
"KRN",8994,1373,1,0)
^8994.01^1^1^3030502^^
"KRN",8994,1373,1,1,0)
Retrieve letter text for a WH letter
"KRN",8994,1373,2,0)
^8994.02A^1^1
"KRN",8994,1373,2,1,0)
WVIEN^1^^1
"KRN",8994,1373,2,"B","WVIEN",1)

"KRN",8994,1374,-1)
0^7
"KRN",8994,1374,0)
ORQQPXRM GET WH LETTER TYPE^GETTYPE^WVRPCNO^2^S
"KRN",8994,1374,1,0)
^^1^1^3030502^
"KRN",8994,1374,1,1,0)
Return value from file 790.403
"KRN",8994,1375,-1)
0^8
"KRN",8994,1375,0)
ORQQPXRM GET WH PROC RESULT^DX^PXRMWOBJ^2^S
"KRN",8994,1375,1,0)
^^2^2^3030502^
"KRN",8994,1375,1,1,0)
Return correct values for a WH procedure populate a combo box in Reminder
"KRN",8994,1375,1,2,0)
Dialog.
"KRN",8994,1375,2,0)
^8994.02A^1^1
"KRN",8994,1375,2,1,0)
STRING^1^1^1
"KRN",8994,1375,2,"B","STRING",1)

"KRN",8994,1376,-1)
0^9
"KRN",8994,1376,0)
ORQQPXRM WOMEN HEALTH SAVE^WH^ORQQPXRM^2^S
"KRN",8994,1376,1,0)
^^1^1^3030502^
"KRN",8994,1376,1,1,0)
Pass back data to be file in the Women's Health Package file 790.1.
"KRN",8994,1376,2,0)
^8994.02A^1^1
"KRN",8994,1376,2,1,0)
WH RESULT^2^^1^1
"KRN",8994,1376,2,"B","WH RESULT",1)

"KRN",8994,1376,2,"PARAMSEQ",1,1)

"KRN",8994,1377,-1)
0^10
"KRN",8994,1377,0)
ORWTPD GETOCM^GETOCM^ORWTPD^1^^^^1
"KRN",8994,1378,-1)
0^11
"KRN",8994,1378,0)
ORWTPD PUTOCM^PUTOCM^ORWTPD^1^^^^1
"KRN",8994,1379,-1)
0^12
"KRN",8994,1379,0)
ORB FORWARD ALERT^FWD^ORB31^1^R
"KRN",8994,1379,1,0)
^8994.01^1^1^3030414^^
"KRN",8994,1379,1,1,0)
The rpc forwards an alert.
"KRN",8994,1379,2,0)
^8994.02A^4^4
"KRN",8994,1379,2,1,0)
XQAID^1^255^1^1
"KRN",8994,1379,2,1,1,0)
^8994.021^3^3^3030414^^^
"KRN",8994,1379,2,1,1,1,0)
The alert identifier used by the Kernel Alert utility to uniquely identify
"KRN",8994,1379,2,1,1,2,0)
an alert/notification.  For OE/RR alerts, the format is:
"KRN",8994,1379,2,1,1,3,0)
"OR,<dfn>,<notif ien>;<notif date.time>"
"KRN",8994,1379,2,2,0)
RECIPIENT^1^64^1^2
"KRN",8994,1379,2,2,1,0)
^8994.021^1^1^3030414^^^
"KRN",8994,1379,2,2,1,1,0)
DUZ (file 200 ien) of the person to receive the forwarded alert.
"KRN",8994,1379,2,3,0)
TYPE^1^16^1^3
"KRN",8994,1379,2,3,1,0)
^^2^2^3030414^
"KRN",8994,1379,2,3,1,1,0)
The type of message to be forwarded.  "A" indicates an alert is to be 
"KRN",8994,1379,2,3,1,2,0)
forwarded.
"KRN",8994,1379,2,4,0)
COMMENT^1^255^^4
"KRN",8994,1379,2,4,1,0)
^^1^1^3030414^
"KRN",8994,1379,2,4,1,1,0)
The comment (optional) to be forwarded with the alert.
"KRN",8994,1379,2,"B","COMMENT",4)

"KRN",8994,1379,2,"B","RECIPIENT",2)

"KRN",8994,1379,2,"B","TYPE",3)

"KRN",8994,1379,2,"B","XQAID",1)

"KRN",8994,1379,2,"PARAMSEQ",1,1)

"KRN",8994,1379,2,"PARAMSEQ",2,2)

"KRN",8994,1379,2,"PARAMSEQ",3,3)

"KRN",8994,1379,2,"PARAMSEQ",4,4)

"KRN",8994,1380,-1)
0^15
"KRN",8994,1380,0)
ORB RENEW ALERT^RENEW^ORB31^1^R
"KRN",8994,1380,1,0)
^8994.01^1^1^3030421^
"KRN",8994,1380,1,1,0)
This rpc renews an alert.
"KRN",8994,1380,2,0)
^8994.02A^1^1
"KRN",8994,1380,2,1,0)
XQAID^1^255^1^1
"KRN",8994,1380,2,1,1,0)
^^2^2^3030421^
"KRN",8994,1380,2,1,1,1,0)
XQAID is the unique identifier used by Kernel Alerts to process and take 
"KRN",8994,1380,2,1,1,2,0)
actions on alerts.
"KRN",8994,1380,2,"B","XQAID",1)

"KRN",8994,1380,2,"PARAMSEQ",1,1)

"KRN",8994,1381,-1)
0^18
"KRN",8994,1381,0)
TIU HAS AUTHOR SIGNED?^AUTHSIGN^TIUSRVA^1^S
"KRN",8994,1381,1,0)
^8994.01^4^4^3030521^^
"KRN",8994,1381,1,1,0)
Boolean RPC returns a value of 0 if the author has not signed and the user 
"KRN",8994,1381,1,2,0)
attempting to sign is the expected co-signer.  Returns a 1 if the 
"KRN",8994,1381,1,3,0)
author has signed or the user attempting to sign is NOT the expected 
"KRN",8994,1381,1,4,0)
co-signer.
"KRN",8994,1381,2,0)
^8994.02A^2^2
"KRN",8994,1381,2,1,0)
TIUDA^1^^1^1
"KRN",8994,1381,2,1,1,0)
^^1^1^3030520^
"KRN",8994,1381,2,1,1,1,0)
This is the TIU Document IEN.
"KRN",8994,1381,2,2,0)
TIUUSR^1^^1^2
"KRN",8994,1381,2,2,1,0)
^^1^1^3030521^
"KRN",8994,1381,2,2,1,1,0)
This is the DUZ of the user attempting to sign.
"KRN",8994,1381,2,"B","TIUDA",1)

"KRN",8994,1381,2,"B","TIUUSR",2)

"KRN",8994,1381,2,"PARAMSEQ",1,1)

"KRN",8994,1381,2,"PARAMSEQ",2,2)

"KRN",8994,1381,3,0)
^8994.03^3^3^3030521^^
"KRN",8994,1381,3,1,0)
Boolean Value:
"KRN",8994,1381,3,2,0)
0 if author has NOT signed AND user is EC
"KRN",8994,1381,3,3,0)
1 if author HAS signed OR user is NOT EC
"KRN",8994,1381,3,4,0)
 1 if author HAS signed OR user is NOT EC
"KRN",8994,1382,-1)
0^19
"KRN",8994,1382,0)
ORQQPXRM GET WH REPORT TEXT^REPORT^PXRMCWH^2
"KRN",8994,1382,1,0)
^^1^1^3030610^
"KRN",8994,1382,1,1,0)
This RPC will return the Radiology/Lab Report for a WH Procedure
"KRN",8994,1382,2,0)
^8994.02A^1^1
"KRN",8994,1382,2,1,0)
IEN^1^^1^1
"KRN",8994,1382,2,1,1,0)
^^1^1^3030610^
"KRN",8994,1382,2,1,1,1,0)
IEN is equal the Women's Health Procedure IEN
"KRN",8994,1382,2,"B","IEN",1)

"KRN",8994,1382,2,"PARAMSEQ",1,1)

"KRN",8994,1409,-1)
1^16
"KRN",8994,1409,0)
ORWORB URGENLST
"KRN",8994,1410,-1)
1^17
"KRN",8994,1410,0)
ORWTPL GETNSORT
"MBREQ")
1
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",22,-1)
1^1
"PKG",22,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",22,20,0)
^9.402P^^
"PKG",22,22,0)
^9.49I^1^1
"PKG",22,22,1,0)
3.0^2971217^2980204^64
"PKG",22,22,1,"PAH",1,0)
173^3030722^1362
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
20
"RTN","ORB31")
0^12^B25268978
"RTN","ORB31",1,0)
ORB31 ; slc/CLA - Routine to support OE/RR 3 notifications ;6/28/00  12:00 [ 04/02/97  11:12 AM ]
"RTN","ORB31",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**6,31,88,105,139,173**;Dec 17, 1997
"RTN","ORB31",3,0)
QUEUE(ORN,ORBDFN,ORNUM,ORBADUZ,ORBPMSG,ORBPDATA,ORBH,ORBD,ORDGPMA) ;
"RTN","ORB31",4,0)
 ;queue up notif for Taskman processing
"RTN","ORB31",5,0)
 ;ORN       notification ien from file 100.9
"RTN","ORB31",6,0)
 ;ORBDFN    patient dfn from file 2
"RTN","ORB31",7,0)
 ;ORNUM     order number from file 100
"RTN","ORB31",8,0)
 ;ORBADUZ   array of potential user recipients (iens from file 100)
"RTN","ORB31",9,0)
 ;ORBPMSG   alert message from triggering process
"RTN","ORB31",10,0)
 ;ORBPDATA  data potentially used in alert follow-up action
"RTN","ORB31",11,0)
 ;ORBH      $H formatted time to begin Taskman process
"RTN","ORB31",12,0)
 ;ORBD      process description for Taskman
"RTN","ORB31",13,0)
 ;ORDGPMA   DGPMA if alert triggered by A/D/T event
"RTN","ORB31",14,0)
 ;
"RTN","ORB31",15,0)
 N ZTCPU,ZTDESC,ZTDTH,ZTIO,ZTPAR,ZTPRE,ZTPRI,ZTREQ,ZTRTN,ZTSAVE,ZTSK,ZTUCI,X,Y,DIC
"RTN","ORB31",16,0)
 ;
"RTN","ORB31",17,0)
 S DIC="3.5",X="ORB NOTIFICATION RESOURCE",DIC(0)="X" D ^DIC
"RTN","ORB31",18,0)
 I (Y) S ZTIO=$P(Y,U,2)
"RTN","ORB31",19,0)
 E  S ZTIO=""
"RTN","ORB31",20,0)
 S ZTDTH=ORBH,ZTRTN="ZTSK^ORB3"
"RTN","ORB31",21,0)
 S ZTDESC=ORBD
"RTN","ORB31",22,0)
 S ZTDESC=ZTDESC_"for ("_ORBDFN_") "_$P($G(^DPT(+ORBDFN,0)),U,1)
"RTN","ORB31",23,0)
 K ZTSAVE,ZTCPU,ZTUCI,ZTPRI,ZTPAR,ZTPRE,DIC,Y,DTOUT,DUOUT
"RTN","ORB31",24,0)
 ;
"RTN","ORB31",25,0)
 S ZTSAVE("ORN")=""
"RTN","ORB31",26,0)
 S ZTSAVE("ORBDFN")=""
"RTN","ORB31",27,0)
 S ZTSAVE("ORNUM")=""
"RTN","ORB31",28,0)
 S ZTSAVE("ORBADUZ(")=""
"RTN","ORB31",29,0)
 S ZTSAVE("ORBPMSG")=""
"RTN","ORB31",30,0)
 S ZTSAVE("ORBPDATA")=""
"RTN","ORB31",31,0)
 S ZTSAVE("ORDGPMA")=""
"RTN","ORB31",32,0)
 D ^%ZTLOAD
"RTN","ORB31",33,0)
 Q
"RTN","ORB31",34,0)
DUP(ORN,ORBDFN,ORBPMSG,ORNUM) ;ext funct return "1" if a duplicate notif w/in 1 min.
"RTN","ORB31",35,0)
 N ORBDUP,ORBNOW,ORBLAST,ORLNUM,ORSAMEP
"RTN","ORB31",36,0)
 S ORBDUP=0
"RTN","ORB31",37,0)
 S ORSAMEP=0
"RTN","ORB31",38,0)
 S ORBNOW=$$NOW^XLFDT
"RTN","ORB31",39,0)
 S ^XTMP("ORBDUP",0)=$$FMADD^XLFDT(ORBNOW,1,"","","")_"^"_ORBNOW
"RTN","ORB31",40,0)
 I '$L($G(^XTMP("ORBDUP",ORBDFN_";"_ORN_";"_ORBPMSG))) S ^XTMP("ORBDUP",ORBDFN_";"_ORN_";"_ORBPMSG)=ORBNOW_"^"_$G(ORNUM)
"RTN","ORB31",41,0)
 E  D
"RTN","ORB31",42,0)
 .S ORBLAST=$G(^XTMP("ORBDUP",ORBDFN_";"_ORN_";"_ORBPMSG))
"RTN","ORB31",43,0)
 .S ORLNUM=$P(ORBLAST,"^",2)
"RTN","ORB31",44,0)
 .S ORBLAST=$P(ORBLAST,"^")
"RTN","ORB31",45,0)
 .I $L($G(ORNUM)),$L($G(ORLNUM)),($$ORDERER^ORQOR2(ORNUM)=$$ORDERER^ORQOR2(ORLNUM)) S ORSAMEP=1 ;same provider as last order that triggered this notif
"RTN","ORB31",46,0)
 .;if last occurrence of this "NOT" notif was w/in past 1 min, its a dup
"RTN","ORB31",47,0)
 .I ORBNOW<$$FMADD^XLFDT(ORBLAST,"","",1,""),ORSAMEP=1 S ORBDUP=1  ;dup
"RTN","ORB31",48,0)
 .E  S ^XTMP("ORBDUP",ORBDFN_";"_ORN_";"_ORBPMSG)=ORBNOW_"^"_ORNUM  ;refresh last pt/noti occ.
"RTN","ORB31",49,0)
 D DUPCLN(ORBNOW)  ;clean up old ^XTMP("ORBUP") entries
"RTN","ORB31",50,0)
 Q ORBDUP
"RTN","ORB31",51,0)
REGDEV(ORBDA) ;send to regular recipient devices
"RTN","ORB31",52,0)
 N ORBDT,ORBD
"RTN","ORB31",53,0)
 S ORBD=""
"RTN","ORB31",54,0)
 S ORBDT=$$NOW^XLFDT
"RTN","ORB31",55,0)
 F   S ORBD=$O(ORBDA(ORBD)) Q:ORBD=""  D
"RTN","ORB31",56,0)
 .S ZTRTN="PRINTD^ORB31",ZTDESC="Print Notification to Device",ZTDTH=$H
"RTN","ORB31",57,0)
 .S ZTIO=ORBD,ZTSAVE("XQAMSG")="",ZTSAVE("ORBDT")=""
"RTN","ORB31",58,0)
 .D ^%ZTLOAD
"RTN","ORB31",59,0)
 Q
"RTN","ORB31",60,0)
PRINTD ;print queued notification to device - setup via REGDEV^ORB3
"RTN","ORB31",61,0)
 I $G(ZTSK) D KILL^%ZTLOAD
"RTN","ORB31",62,0)
 I IOT="HFS" W XQAMSG Q  ;write msg to a file then quit
"RTN","ORB31",63,0)
 W !!!,"          ***** NOTIFICATION PROCESSED *****",!!
"RTN","ORB31",64,0)
 W $$FMTE^XLFDT(ORBDT),"   "
"RTN","ORB31",65,0)
 W XQAMSG
"RTN","ORB31",66,0)
 I $E(IOST,1,2)'="C-" W @IOF
"RTN","ORB31",67,0)
 Q
"RTN","ORB31",68,0)
FWD(ORY,ORBLST,ORBRECIP,ORBTYPE,ORBCOMNT) ; forward a notification
"RTN","ORB31",69,0)
 S ORBLST(1)=ORBLST
"RTN","ORB31",70,0)
 D FORWARD^XQALFWD(.ORBLST,.ORBRECIP,ORBTYPE,ORBCOMNT)
"RTN","ORB31",71,0)
 S ORY=1
"RTN","ORB31",72,0)
 Q
"RTN","ORB31",73,0)
RENEW(ORY,XQAID) ; renew/restore an alert/notification
"RTN","ORB31",74,0)
 Q:$L($G(XQAID))<1
"RTN","ORB31",75,0)
 K XQAKILL
"RTN","ORB31",76,0)
 I '$D(^XTV(8992,"AXQA",XQAID,DUZ)) D RESTORE^XQALERT1 ;DBIA #4100
"RTN","ORB31",77,0)
 S ORY=1
"RTN","ORB31",78,0)
 Q
"RTN","ORB31",79,0)
TERMLKUP(OCXARR,OCXTERM) ; extrinsic function returns the local terms
"RTN","ORB31",80,0)
 ; linked to the nat'l OCX term in an array and the file where those
"RTN","ORB31",81,0)
 ; array terms can be found. The value of the extrinsic function is the
"RTN","ORB31",82,0)
 ; file pointed to for the local terms.
"RTN","ORB31",83,0)
 ;
"RTN","ORB31",84,0)
 ; OCXARR  - Array of local terms
"RTN","ORB31",85,0)
 ; OCXTERM - OCX nat'l term from file ^OCXS(860.9
"RTN","ORB31",86,0)
 ;
"RTN","ORB31",87,0)
 N OCXI,OCXJ,FILE,I
"RTN","ORB31",88,0)
 S OCXI="",OCXJ=0,FILE="",I=1
"RTN","ORB31",89,0)
 S OCXI=$O(^OCXS(860.9,"B",OCXTERM,OCXI))
"RTN","ORB31",90,0)
 I +$G(OCXI)>0 D
"RTN","ORB31",91,0)
 .S FILE=$P(^OCXS(860.9,OCXI,0),U,2)
"RTN","ORB31",92,0)
 .F  S OCXJ=$O(^OCXS(860.9,OCXI,1,OCXJ)) Q:+OCXJ<1  D
"RTN","ORB31",93,0)
 ..S OCXARR(I)=$P(^OCXS(860.9,OCXI,1,OCXJ,0),U,2)_U_$P(^(0),U)
"RTN","ORB31",94,0)
 ..S OCXARR=I,I=I+1
"RTN","ORB31",95,0)
 Q FILE
"RTN","ORB31",96,0)
DUPCLN(ORBNOW) ;clean up old entires in ^XTMP("ORBDUP")
"RTN","ORB31",97,0)
 N ORBX,ORBDT,ORNDT
"RTN","ORB31",98,0)
 S ORNDT=$$FMADD^XLFDT(ORBNOW,"","",-5,"")  ;entries older than 5 minutes
"RTN","ORB31",99,0)
 S ORBX=0
"RTN","ORB31",100,0)
 F  S ORBX=$O(^XTMP("ORBDUP",ORBX)) Q:ORBX=""  D
"RTN","ORB31",101,0)
 .S ORBDT=+$G(^XTMP("ORBDUP",ORBX))
"RTN","ORB31",102,0)
 .I $L(ORBDT),(ORBDT<ORNDT) K ^XTMP("ORBDUP",ORBX)
"RTN","ORB31",103,0)
 Q
"RTN","ORB31",104,0)
TMDEV(ORBTM) ;returns Device for a team in format device ien^device name
"RTN","ORB31",105,0)
 N ORBTDEV,ORBTDEVN
"RTN","ORB31",106,0)
 S ORBTDEVN=""
"RTN","ORB31",107,0)
 Q:'$L($G(ORBTM)) ""
"RTN","ORB31",108,0)
 Q:'$D(^OR(100.21,ORBTM,0)) ""
"RTN","ORB31",109,0)
 S ORBTDEV=$P(^OR(100.21,ORBTM,0),U,4)  ;get Team's device
"RTN","ORB31",110,0)
 Q:+$G(ORBTDEV)<1 ""
"RTN","ORB31",111,0)
 S X="`"_ORBTDEV,DIC=3.5,DIC(0)="" D ^DIC  ;DBIA #10114
"RTN","ORB31",112,0)
 Q:+Y<1 ""
"RTN","ORB31",113,0)
 S ORBTDEVN=$P(Y,U,2)
"RTN","ORB31",114,0)
 K DIC,Y,X
"RTN","ORB31",115,0)
 Q ORBTDEV_U_ORBTDEVN
"RTN","ORB31",116,0)
ENTITY(ORNUM,ENTDUZ) ;ext funct. rtns entity for parameter use
"RTN","ORB31",117,0)
 N ORBENT
"RTN","ORB31",118,0)
 S ORBENT="DIV^SYS^PKG"
"RTN","ORB31",119,0)
 ;use orderer's DUZ if notif triggered by ORMTIME:
"RTN","ORB31",120,0)
 I +$G(ENTDUZ)<1 S ORBENT="SYS^PKG" D
"RTN","ORB31",121,0)
 .I $L($G(ORNUM)) D  ;if order number use orderer's division
"RTN","ORB31",122,0)
 ..N ORNDUZ,ORDIV
"RTN","ORB31",123,0)
 ..S ORNDUZ=$$ORDERER^ORQOR2(ORNUM)
"RTN","ORB31",124,0)
 ..Q:'$L($G(ORNDUZ))
"RTN","ORB31",125,0)
 ..S ORDIV=0,ORDIV=$O(^VA(200,ORNDUZ,2,ORDIV))
"RTN","ORB31",126,0)
 ..I +$G(ORDIV)>0 S ORBENT=ORDIV_";DIC(4,^SYS^PKG"
"RTN","ORB31",127,0)
 Q ORBENT
"RTN","ORB31",128,0)
 ;
"RTN","ORB31",129,0)
ADT(ORN,ORBDFN,ORBPRIM,ORBATTD,ORDGPMA) ;get inpt primary and attending for ADT notifs
"RTN","ORB31",130,0)
 N ORBADTDT,VAINDT
"RTN","ORB31",131,0)
 ;if notif is deceased or discharge use prev visit d/t:
"RTN","ORB31",132,0)
 I (ORN=20)!(ORN=35) D
"RTN","ORB31",133,0)
 .S ORBADTDT=$S($D(ORDGPMA):$P(ORDGPMA,U),1:$P($G(^DPT(ORBDFN,.35)),U))
"RTN","ORB31",134,0)
 .I $L(ORBADTDT) S VAINDT=$$FMADD^XLFDT(ORBADTDT,"","","","-1")
"RTN","ORB31",135,0)
 ;
"RTN","ORB31",136,0)
 I ORN=18 S VAINDT=$P($G(ORDGPMA),U)  ;if admission use this visit d/t
"RTN","ORB31",137,0)
 ;
"RTN","ORB31",138,0)
 I $L($G(VAINDT)) D
"RTN","ORB31",139,0)
 .D INP^VADPT  ;get new VAIN array for appropriate visit
"RTN","ORB31",140,0)
 .S ORBPRIM=+$P(VAIN(2),U),ORBATTD=+$P(VAIN(11),U)
"RTN","ORB31",141,0)
 Q
"RTN","ORB3MGR1")
0^18^B55236680
"RTN","ORB3MGR1",1,0)
ORB3MGR1 ; SLC/AEB - Manager Options - Notifications Parameters ;9/22/97
"RTN","ORB3MGR1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**31,74,85,88,105,139,173**;Dec 17, 1997
"RTN","ORB3MGR1",3,0)
 ;
"RTN","ORB3MGR1",4,0)
 ;Calls to Add/Change/Delete Parameters
"RTN","ORB3MGR1",5,0)
 ;
"RTN","ORB3MGR1",6,0)
URG ; Notification Urgency - By Entity
"RTN","ORB3MGR1",7,0)
 ;
"RTN","ORB3MGR1",8,0)
 N ORBT,ORBPAR,PIEN
"RTN","ORB3MGR1",9,0)
 S ORBT="Set URGENCY Parameters for Notifications",PIEN=0
"RTN","ORB3MGR1",10,0)
 S PIEN=$O(^XTV(8989.51,"B","ORB URGENCY",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",11,0)
 S ORBPAR=PIEN
"RTN","ORB3MGR1",12,0)
 D TITLE(ORBT) D PROC(ORBPAR)
"RTN","ORB3MGR1",13,0)
 Q
"RTN","ORB3MGR1",14,0)
 ;
"RTN","ORB3MGR1",15,0)
DEL ;
"RTN","ORB3MGR1",16,0)
 N ORBT,ORBPAR,PIEN
"RTN","ORB3MGR1",17,0)
 S ORBT="Set DELETE MECHANISM Parameters for Notifications",PIEN=0
"RTN","ORB3MGR1",18,0)
 S PIEN=$O(^XTV(8989.51,"B","ORB DELETE MECHANISM",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",19,0)
 S ORBPAR=PIEN
"RTN","ORB3MGR1",20,0)
 D TITLE(ORBT) D PROC(ORBPAR)
"RTN","ORB3MGR1",21,0)
 Q
"RTN","ORB3MGR1",22,0)
 ;
"RTN","ORB3MGR1",23,0)
REGR ;
"RTN","ORB3MGR1",24,0)
 N ORBT,ORBPAR,PIEN
"RTN","ORB3MGR1",25,0)
 S ORBT="Set REGULAR (DEFAULT) RECIPIENTS Parameters for Notifications",PIEN=0
"RTN","ORB3MGR1",26,0)
 S PIEN=$O(^XTV(8989.51,"B","ORB DEFAULT RECIPIENTS",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",27,0)
 S ORBPAR=PIEN
"RTN","ORB3MGR1",28,0)
 D TITLE(ORBT) D PROC(ORBPAR)
"RTN","ORB3MGR1",29,0)
 Q
"RTN","ORB3MGR1",30,0)
 ;
"RTN","ORB3MGR1",31,0)
REGDEV ;
"RTN","ORB3MGR1",32,0)
 N ORBT,ORBPAR,PIEN
"RTN","ORB3MGR1",33,0)
 S ORBT="Set REGULAR (DEFAULT) RECIPIENT DEVICES Parameters for Notifications",PIEN=0
"RTN","ORB3MGR1",34,0)
 S PIEN=$O(^XTV(8989.51,"B","ORB DEFAULT RECIPIENT DEVICES",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",35,0)
 S ORBPAR=PIEN
"RTN","ORB3MGR1",36,0)
 D TITLE(ORBT) D PROC(ORBPAR)
"RTN","ORB3MGR1",37,0)
 Q
"RTN","ORB3MGR1",38,0)
 ;
"RTN","ORB3MGR1",39,0)
TITLR ;
"RTN","ORB3MGR1",40,0)
 N ORBT,ORBPAR,PIEN
"RTN","ORB3MGR1",41,0)
 S ORBT="Set PROVIDER RECIPIENTS Parameters for Notifications",PIEN=0
"RTN","ORB3MGR1",42,0)
 S PIEN=$O(^XTV(8989.51,"B","ORB PROVIDER RECIPIENTS",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",43,0)
 S ORBPAR=PIEN
"RTN","ORB3MGR1",44,0)
 D TITLE(ORBT) D PROC(ORBPAR)
"RTN","ORB3MGR1",45,0)
 Q
"RTN","ORB3MGR1",46,0)
 ;
"RTN","ORB3MGR1",47,0)
PFLAG ;
"RTN","ORB3MGR1",48,0)
 N ORBT,ORBPAR,PIEN
"RTN","ORB3MGR1",49,0)
 S ORBT="Set PROCESSING FLAG Parameters for Notifications",PIEN=0
"RTN","ORB3MGR1",50,0)
 S PIEN=$O(^XTV(8989.51,"B","ORB PROCESSING FLAG",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",51,0)
 S ORBPAR=PIEN
"RTN","ORB3MGR1",52,0)
 D TITLE(ORBT) D PROC(ORBPAR)
"RTN","ORB3MGR1",53,0)
 Q
"RTN","ORB3MGR1",54,0)
 ;
"RTN","ORB3MGR1",55,0)
ERASE ;
"RTN","ORB3MGR1",56,0)
 N ORBT,ORBX,ORBPAR,ORBER,DUOUT,DIRUT
"RTN","ORB3MGR1",57,0)
 S ORBT="Erase Notifications"
"RTN","ORB3MGR1",58,0)
 S ORBER=0
"RTN","ORB3MGR1",59,0)
 Q:$D(DUOUT)!(ORBER="")
"RTN","ORB3MGR1",60,0)
 D TITLE(ORBT)
"RTN","ORB3MGR1",61,0)
 W !!!,?5,"1.  Erase all notifications for a User "
"RTN","ORB3MGR1",62,0)
 W !!,?5,"2.  Erase all notifications for a Patient "
"RTN","ORB3MGR1",63,0)
 W !!,?5,"3.  Erase all instances of a notification (regardless of Patient or User) "
"RTN","ORB3MGR1",64,0)
 W !!,?5,"4.  Erase specific notifications for a User "
"RTN","ORB3MGR1",65,0)
 W !!,?5,"5.  Edit Erase All Notifications parameter for a User ",!!
"RTN","ORB3MGR1",66,0)
 K DIR S DIR(0)="NAO^1:5",DIR("A")="Select Erase option:  "
"RTN","ORB3MGR1",67,0)
 D ^DIR S ORBER=Y K DIR Q:$D(DIRUT)
"RTN","ORB3MGR1",68,0)
 K Y,X,DTOUT,DUOUT,DIRUT
"RTN","ORB3MGR1",69,0)
 I (ORBER=1) D RECIPURG^ORB3MGR2
"RTN","ORB3MGR1",70,0)
 I (ORBER=2) D PTPURG^ORB3MGR2
"RTN","ORB3MGR1",71,0)
 I (ORBER=3) D NOTIPURG^ORB3MGR2
"RTN","ORB3MGR1",72,0)
 I (ORBER=4) D USERDEL^ORB3MGR2
"RTN","ORB3MGR1",73,0)
 I (ORBER=5) D ERASEALL^ORB3MGR2
"RTN","ORB3MGR1",74,0)
 D ERASE
"RTN","ORB3MGR1",75,0)
 Q
"RTN","ORB3MGR1",76,0)
 ;
"RTN","ORB3MGR1",77,0)
FLGOI ;
"RTN","ORB3MGR1",78,0)
 N ORBT,ORBOI,DIRUT,DUOUT,Y
"RTN","ORB3MGR1",79,0)
 S ORBT="Flag ORDERABLE ITEMS to send Notifications"
"RTN","ORB3MGR1",80,0)
 F  D  Q:$D(DUOUT)!(Y="")
"RTN","ORB3MGR1",81,0)
 .S Y=0
"RTN","ORB3MGR1",82,0)
 .D TITLE(ORBT)
"RTN","ORB3MGR1",83,0)
 .W !!,"1.  Flag INPATIENT orders/results/expiring orders."
"RTN","ORB3MGR1",84,0)
 .W !,"2.  Flag OUTPATIENT orders/results/expiring orders."
"RTN","ORB3MGR1",85,0)
 .W !,"3.  Flag Lab tests for Threshold Exceeded alerts.",!
"RTN","ORB3MGR1",86,0)
 .K DIR S DIR(0)="NAO^1:3",DIR("A")="Select ""1"" to flag INPT orders/results, ""2"" to flag OUTPT orders/results, ""3"" to set Lab Thresholds: "
"RTN","ORB3MGR1",87,0)
 .D ^DIR S ORBOI=Y K DIR Q:$D(DIRUT)
"RTN","ORB3MGR1",88,0)
 .K X,DTOUT,DUOUT,DIRUT
"RTN","ORB3MGR1",89,0)
 .I ORBOI=1 D INPTOI
"RTN","ORB3MGR1",90,0)
 .I ORBOI=2 D OUTPTOI
"RTN","ORB3MGR1",91,0)
 .I ORBOI=3 D LABTHRES^ORB3MGR2
"RTN","ORB3MGR1",92,0)
 Q
"RTN","ORB3MGR1",93,0)
INPTOI ;
"RTN","ORB3MGR1",94,0)
 N ORBT,ORBPAR,ORBOI,DIRUT,DUOUT,PIEN,Y
"RTN","ORB3MGR1",95,0)
 S ORBT="Flag INPATIENT orderable items to send Notifications/Alerts"
"RTN","ORB3MGR1",96,0)
 F  D  Q:$D(DUOUT)!(Y="")
"RTN","ORB3MGR1",97,0)
 .D TITLE(ORBT)
"RTN","ORB3MGR1",98,0)
 .W !!,"1.  Flag Inpatient ORDERS."
"RTN","ORB3MGR1",99,0)
 .W !,"2.  Flag Inpatient RESULTS."
"RTN","ORB3MGR1",100,0)
 .W !,"3.  Flag Inpatient EXPIRING orders.",!
"RTN","ORB3MGR1",101,0)
 .S PIEN=0,Y=0
"RTN","ORB3MGR1",102,0)
 .K DIR S DIR(0)="NAO^1:3",DIR("A")="Select ""1"" to flag inpt ORDERS, ""2"" to flag inpt RESULTS, ""3"" to flag inpt EXPIRING orders: "
"RTN","ORB3MGR1",103,0)
 .D ^DIR S ORBOI=Y K DIR Q:$D(DIRUT)
"RTN","ORB3MGR1",104,0)
 .K X,DTOUT,DUOUT,DIRUT
"RTN","ORB3MGR1",105,0)
 .I ORBOI=1 D
"RTN","ORB3MGR1",106,0)
 ..S PIEN=$O(^XTV(8989.51,"B","ORB OI ORDERED - INPT",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",107,0)
 ..S ORBPAR=PIEN
"RTN","ORB3MGR1",108,0)
 .I ORBOI=2 D
"RTN","ORB3MGR1",109,0)
 ..S PIEN=$O(^XTV(8989.51,"B","ORB OI RESULTS - INPT",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",110,0)
 ..S ORBPAR=PIEN
"RTN","ORB3MGR1",111,0)
 .I ORBOI=3 D
"RTN","ORB3MGR1",112,0)
 ..S PIEN=$O(^XTV(8989.51,"B","ORB OI EXPIRING - INPT",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",113,0)
 ..S ORBPAR=PIEN
"RTN","ORB3MGR1",114,0)
 .D PROC(ORBPAR)
"RTN","ORB3MGR1",115,0)
 Q
"RTN","ORB3MGR1",116,0)
 ;
"RTN","ORB3MGR1",117,0)
OUTPTOI ;
"RTN","ORB3MGR1",118,0)
 N ORBT,ORBPAR,ORBOI,DIRUT,DUOUT,PIEN,Y
"RTN","ORB3MGR1",119,0)
 S ORBT="Flag OUTPATIENT orderable items to send Notifications"
"RTN","ORB3MGR1",120,0)
 F  D  Q:$D(DUOUT)!(Y="")
"RTN","ORB3MGR1",121,0)
 .D TITLE(ORBT)
"RTN","ORB3MGR1",122,0)
 .W !!,"1.  Flag Outpatient ORDERS."
"RTN","ORB3MGR1",123,0)
 .W !,"2.  Flag Outpatient RESULTS."
"RTN","ORB3MGR1",124,0)
 .W !,"3.  Flag Outpatient EXPIRING orders.",!
"RTN","ORB3MGR1",125,0)
 .S PIEN=0,Y=0
"RTN","ORB3MGR1",126,0)
 .K DIR S DIR(0)="NAO^1:3",DIR("A")="Select ""1"" to flag outpt ORDERS, ""2"" to flag outpt RESULTS, ""3"" to flag outpt EXPIRING orders: "
"RTN","ORB3MGR1",127,0)
 .D ^DIR S ORBOI=Y K DIR Q:$D(DIRUT)
"RTN","ORB3MGR1",128,0)
 .K X,DTOUT,DUOUT,DIRUT
"RTN","ORB3MGR1",129,0)
 .I ORBOI=1 D
"RTN","ORB3MGR1",130,0)
 ..S PIEN=$O(^XTV(8989.51,"B","ORB OI ORDERED - OUTPT",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",131,0)
 ..S ORBPAR=PIEN
"RTN","ORB3MGR1",132,0)
 .I ORBOI=2 D
"RTN","ORB3MGR1",133,0)
 ..S PIEN=$O(^XTV(8989.51,"B","ORB OI RESULTS - OUTPT",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",134,0)
 ..S ORBPAR=PIEN
"RTN","ORB3MGR1",135,0)
 .I ORBOI=3 D
"RTN","ORB3MGR1",136,0)
 ..S PIEN=$O(^XTV(8989.51,"B","ORB OI EXPIRING - OUTPT",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",137,0)
 ..S ORBPAR=PIEN
"RTN","ORB3MGR1",138,0)
 .D PROC(ORBPAR)
"RTN","ORB3MGR1",139,0)
 Q
"RTN","ORB3MGR1",140,0)
 ;
"RTN","ORB3MGR1",141,0)
ARC ;
"RTN","ORB3MGR1",142,0)
 N ORBT,ORBPAR,PIEN
"RTN","ORB3MGR1",143,0)
 S ORBT="Set ARCHIVE PERIOD Parameters for Notifications",PIEN=0
"RTN","ORB3MGR1",144,0)
 S PIEN=$O(^XTV(8989.51,"B","ORB ARCHIVE PERIOD",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",145,0)
 S ORBPAR=PIEN
"RTN","ORB3MGR1",146,0)
 D TITLE(ORBT) D PROC(ORBPAR)
"RTN","ORB3MGR1",147,0)
 Q
"RTN","ORB3MGR1",148,0)
 ;
"RTN","ORB3MGR1",149,0)
FSUPER ;
"RTN","ORB3MGR1",150,0)
 N ORBT,ORBPAR,PIEN
"RTN","ORB3MGR1",151,0)
 S ORBT="Set FORWARD SUPERVISOR Parameters for Notifications",PIEN=0
"RTN","ORB3MGR1",152,0)
 S PIEN=$O(^XTV(8989.51,"B","ORB FORWARD SUPERVISOR",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",153,0)
 S ORBPAR=PIEN
"RTN","ORB3MGR1",154,0)
 D TITLE(ORBT) D PROC(ORBPAR)
"RTN","ORB3MGR1",155,0)
 Q
"RTN","ORB3MGR1",156,0)
 ;
"RTN","ORB3MGR1",157,0)
FSURR ;
"RTN","ORB3MGR1",158,0)
 N ORBT,ORBPAR,PIEN
"RTN","ORB3MGR1",159,0)
 S ORBT="Set FORWARD SURROGATES Parameters for Notifications",PIEN=0
"RTN","ORB3MGR1",160,0)
 S PIEN=$O(^XTV(8989.51,"B","ORB FORWARD SURROGATES",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",161,0)
 S ORBPAR=PIEN
"RTN","ORB3MGR1",162,0)
 D TITLE(ORBT) D PROC(ORBPAR)
"RTN","ORB3MGR1",163,0)
 Q
"RTN","ORB3MGR1",164,0)
 ;
"RTN","ORB3MGR1",165,0)
FREVIEW ;
"RTN","ORB3MGR1",166,0)
 N ORBT,ORBPAR,PIEN
"RTN","ORB3MGR1",167,0)
 S ORBT="Set FORWARD BACKUP REVIEWER Parameters for Notifications",PIEN=0
"RTN","ORB3MGR1",168,0)
 S PIEN=$O(^XTV(8989.51,"B","ORB FORWARD BACKUP REVIEWER",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",169,0)
 S ORBPAR=PIEN
"RTN","ORB3MGR1",170,0)
 D TITLE(ORBT) D PROC(ORBPAR)
"RTN","ORB3MGR1",171,0)
 Q
"RTN","ORB3MGR1",172,0)
 ;
"RTN","ORB3MGR1",173,0)
FLGOB ;
"RTN","ORB3MGR1",174,0)
 N ORBT,ORBPAR,PIEN
"RTN","ORB3MGR1",175,0)
 S ORBT="Set FLAGGED ORDERS BULLETIN Parameters for Notifications",PIEN=0
"RTN","ORB3MGR1",176,0)
 S PIEN=$O(^XTV(8989.51,"B","ORB FLAGGED ORDERS BULLETIN",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",177,0)
 S ORBPAR=PIEN
"RTN","ORB3MGR1",178,0)
 D TITLE(ORBT) D PROC(ORBPAR)
"RTN","ORB3MGR1",179,0)
 Q
"RTN","ORB3MGR1",180,0)
 ;
"RTN","ORB3MGR1",181,0)
SYSEN ;
"RTN","ORB3MGR1",182,0)
 N ORBT,ORBPAR,PIEN
"RTN","ORB3MGR1",183,0)
 S ORBT="Enable or Disable Notification System",PIEN=0
"RTN","ORB3MGR1",184,0)
 S PIEN=$O(^XTV(8989.51,"B","ORB SYSTEM ENABLE/DISABLE",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",185,0)
 S ORBPAR=PIEN
"RTN","ORB3MGR1",186,0)
 D TITLE(ORBT) D PROC(ORBPAR)
"RTN","ORB3MGR1",187,0)
 Q
"RTN","ORB3MGR1",188,0)
 ;
"RTN","ORB3MGR1",189,0)
UVMED ;
"RTN","ORB3MGR1",190,0)
 N ORBT,ORBPAR,PIEN
"RTN","ORB3MGR1",191,0)
 S ORBT="Set Delay for Unverified Medication Orders",PIEN=0
"RTN","ORB3MGR1",192,0)
 S PIEN=$O(^XTV(8989.51,"B","ORB UNVERIFIED MED ORDER",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",193,0)
 S ORBPAR=PIEN
"RTN","ORB3MGR1",194,0)
 D TITLE(ORBT) D PROC(ORBPAR)
"RTN","ORB3MGR1",195,0)
 Q
"RTN","ORB3MGR1",196,0)
 ;
"RTN","ORB3MGR1",197,0)
UNVER ;
"RTN","ORB3MGR1",198,0)
 N ORBT,ORBPAR,PIEN
"RTN","ORB3MGR1",199,0)
 S ORBT="Set Delay for All Unverified Orders",PIEN=0
"RTN","ORB3MGR1",200,0)
 S PIEN=$O(^XTV(8989.51,"B","ORB UNVERIFIED ORDER",PIEN)) Q:PIEN=""
"RTN","ORB3MGR1",201,0)
 S ORBPAR=PIEN
"RTN","ORB3MGR1",202,0)
 D TITLE(ORBT) D PROC(ORBPAR)
"RTN","ORB3MGR1",203,0)
 Q
"RTN","ORB3MGR1",204,0)
 ;
"RTN","ORB3MGR1",205,0)
TITLE(ORBT)  ;
"RTN","ORB3MGR1",206,0)
 ; Center and write title - Parameter to be set
"RTN","ORB3MGR1",207,0)
 S IOP=0 D ^%ZIS K IOP W @IOF
"RTN","ORB3MGR1",208,0)
 W !,?(80-$L(ORBT)-1/2),ORBT
"RTN","ORB3MGR1",209,0)
 Q
"RTN","ORB3MGR1",210,0)
 ;
"RTN","ORB3MGR1",211,0)
PROC(ORBPAR) ; Process Parameter Settings
"RTN","ORB3MGR1",212,0)
 D EDITPAR^XPAREDIT(ORBPAR)
"RTN","ORB3MGR1",213,0)
 Q
"RTN","ORB3REC")
0^19^B4964745
"RTN","ORB3REC",1,0)
ORB3REC ; SLC/AEB - Notification Management Options for Recipients/Users ;4/30/01  09:52
"RTN","ORB3REC",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**9,85,105,173**;Dec 17, 1997
"RTN","ORB3REC",3,0)
 ;
"RTN","ORB3REC",4,0)
ERASE ;
"RTN","ORB3REC",5,0)
 N ORBT S ORBT="Erase All of My Notifications"
"RTN","ORB3REC",6,0)
 D TITLE(ORBT)
"RTN","ORB3REC",7,0)
 I '$$GET^XPAR("ALL^USR.`"_DUZ,"ORB ERASE ALL",1,"Q") D  Q
"RTN","ORB3REC",8,0)
 .W !,"You are not authorized to perform this function."
"RTN","ORB3REC",9,0)
 W !!,"This option purges all your existing notifications",!!?20,"*** USE WITH CAUTION ***"
"RTN","ORB3REC",10,0)
 W !!,$C(7),"Do you want to purge all notifications for recipient ",$P(^VA(200,DUZ,0),"^") S %=2 D YN^DICN D
"RTN","ORB3REC",11,0)
 .I %=0 W !,"Enter 'YES' if you want to purge all existing notifications for this person.",!,"Do you want to purge all notifications for this recipient" S %=2 D YN^DICN
"RTN","ORB3REC",12,0)
 Q:%'=1  W !!,"Purging notifications...",!
"RTN","ORB3REC",13,0)
 K %
"RTN","ORB3REC",14,0)
 D RECIPURG^XQALBUTL(DUZ)
"RTN","ORB3REC",15,0)
 Q
"RTN","ORB3REC",16,0)
PFLAG ;
"RTN","ORB3REC",17,0)
 N ORBT,ENT,PAR,PIEN
"RTN","ORB3REC",18,0)
 S ORBT="Enable/Disable My Notifications",PIEN=0
"RTN","ORB3REC",19,0)
 S PIEN=$O(^XTV(8989.51,"B","ORB PROCESSING FLAG",PIEN)) Q:PIEN=""
"RTN","ORB3REC",20,0)
 S PAR=PIEN
"RTN","ORB3REC",21,0)
 D TITLE(ORBT) D PROC
"RTN","ORB3REC",22,0)
 Q
"RTN","ORB3REC",23,0)
 ;
"RTN","ORB3REC",24,0)
FLGOB ;
"RTN","ORB3REC",25,0)
 N ORBT,ENT,PAR,PIEN
"RTN","ORB3REC",26,0)
 S ORBT="Set My Flagged Orders Bulletin",PIEN=0
"RTN","ORB3REC",27,0)
 S PIEN=$O(^XTV(8989.51,"B","ORB FLAGGED ORDERS BULLETIN",PIEN)) Q:PIEN=""
"RTN","ORB3REC",28,0)
 S PAR=PIEN
"RTN","ORB3REC",29,0)
 D TITLE(ORBT) D PROC
"RTN","ORB3REC",30,0)
 Q
"RTN","ORB3REC",31,0)
 ;
"RTN","ORB3REC",32,0)
USRNOTS ; List notifications a user could receive
"RTN","ORB3REC",33,0)
 D USRNOTS^ORB3U2(DUZ)
"RTN","ORB3REC",34,0)
 Q
"RTN","ORB3REC",35,0)
 ;
"RTN","ORB3REC",36,0)
TITLE(ORBT)  ;
"RTN","ORB3REC",37,0)
 ; Center and write title
"RTN","ORB3REC",38,0)
 S IOP=0 D ^%ZIS K IOP W @IOF
"RTN","ORB3REC",39,0)
 W !,?(80-$L(ORBT)-1/2),ORBT
"RTN","ORB3REC",40,0)
 Q
"RTN","ORB3REC",41,0)
 ;
"RTN","ORB3REC",42,0)
PROC ; Process Parameter Settings
"RTN","ORB3REC",43,0)
 S ENT=DUZ_";VA(200," ;  Entity is the recipient/user
"RTN","ORB3REC",44,0)
 W !,$$DASH($S($D(IOM):IOM-1,1:78))
"RTN","ORB3REC",45,0)
 D EDIT^XPAREDIT(ENT,PAR)
"RTN","ORB3REC",46,0)
 Q
"RTN","ORB3REC",47,0)
DASH(N) ;extrinsic function returns N dashes
"RTN","ORB3REC",48,0)
 N X
"RTN","ORB3REC",49,0)
 S $P(X,"-",N+1)=""
"RTN","ORB3REC",50,0)
 Q X
"RTN","ORCACT0")
0^9^B45970139
"RTN","ORCACT0",1,0)
ORCACT0 ;SLC/MKB-Validate order action ;2/24/03  10:35
"RTN","ORCACT0",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,27,48,72,86,92,94,141,165,177,173**;Dec 17, 1997
"RTN","ORCACT0",3,0)
VALID(IFN,ACTION,ERROR,NATR) ; -- Determines if action is valid for order IFN
"RTN","ORCACT0",4,0)
 N OR0,OR3,ORA0,AIFN,PKG,DG,ORDSTS,ACTSTS,VER,X,Y,MEDPARM K ERROR
"RTN","ORCACT0",5,0)
 S OR0=$G(^OR(100,+IFN,0)),OR3=$G(^(3)),PKG=$$NMSP^ORCD($P(OR0,U,14))
"RTN","ORCACT0",6,0)
 S MEDPARM=$S($G(NATR)="A":2,PKG'="PS":2,'$D(^XUSEC("OREMAS",DUZ)):2,1:$$GET^XPAR("ALL","OR OREMAS MED ORDERS"))
"RTN","ORCACT0",7,0)
 S AIFN=$P(IFN,";",2) S:'AIFN AIFN=+$P(OR3,U,7)
"RTN","ORCACT0",8,0)
 S ORA0=$G(^OR(100,+IFN,8,AIFN,0)),ACTSTS=$P(ORA0,U,15)
"RTN","ORCACT0",9,0)
 S ORDSTS=$P(OR3,U,3),VER=$S($P(OR0,U,5)["101.41":3,1:2)
"RTN","ORCACT0",10,0)
 S DG=$P($G(^ORD(100.98,+$P(OR0,U,11),0)),U,3)
"RTN","ORCACT0",11,0)
CM I ACTION="CM" S ERROR="This action is no longer available!" G VQ ; ward comments - no restrictions
"RTN","ORCACT0",12,0)
FL I ACTION="FL" D  G VQ ; flag
"RTN","ORCACT0",13,0)
 . I +$G(^OR(100,+IFN,8,AIFN,3)) S ERROR="This order is already flagged!" Q
"RTN","ORCACT0",14,0)
UF I ACTION="UF" D  G VQ ; unflag
"RTN","ORCACT0",15,0)
 . I '+$G(^OR(100,+IFN,8,AIFN,3)) S ERROR="This order is not flagged!" Q
"RTN","ORCACT0",16,0)
DC1 I ACTION="DC",ACTSTS D  G VQ ; discontinue/cancel unrel or canc order
"RTN","ORCACT0",17,0)
 . I (ACTSTS=11)!(ACTSTS=10) D  Q  ; unreleased
"RTN","ORCACT0",18,0)
 .. I 'MEDPARM S ERROR="You are not authorized to cancel med orders!" Q
"RTN","ORCACT0",19,0)
 .. I $G(NATR)="A" S X=$O(^ORE(100.2,"AO",+IFN,0)) I X,'$G(^ORE(100.2,X,1)) S ERROR="Future event orders may not be auto-discontinued!" Q
"RTN","ORCACT0",20,0)
 . I ACTSTS=12 S ERROR="This order has been dc'd due to edit!" Q
"RTN","ORCACT0",21,0)
 . I ACTSTS=13 S ERROR="This order has been cancelled!" Q
"RTN","ORCACT0",22,0)
ES I (ACTION="ES")!(ACTION="OC")!(ACTION="RS")!(ACTION="DS") D ES^ORCACT01 G VQ ; sign
"RTN","ORCACT0",23,0)
VR I ACTION="VR" D  G VQ ; verify
"RTN","ORCACT0",24,0)
 . I $G(ORVER)="N",$P(ORA0,U,9) S ERROR="This order has been verified!" Q
"RTN","ORCACT0",25,0)
 . I $G(ORVER)="C",$P(ORA0,U,11) S ERROR="This order has been verified!" Q
"RTN","ORCACT0",26,0)
 . I $G(ORVER)="R",$P(ORA0,U,19) S ERROR="This order has been reviewed!" Q
"RTN","ORCACT0",27,0)
 . I (ACTSTS=11)!(ACTSTS=10) S ERROR="This order has not been released to the service." Q
"RTN","ORCACT0",28,0)
 . I AIFN=1,ORDSTS=5,PKG="PS" S X=$$DISABLED I X S ERROR=$P(X,U,2) Q
"RTN","ORCACT0",29,0)
DIS S X=$$DISABLED I X S ERROR=$P(X,U,2) G VQ
"RTN","ORCACT0",30,0)
MN I ACTION="MN" D  G VQ ; manually release (delayed)
"RTN","ORCACT0",31,0)
 . I ACTSTS'=10,ACTSTS'=11 S ERROR="This order has already been released!" Q
"RTN","ORCACT0",32,0)
 . I $P(OR0,U,12)="I",'$G(^DPT(+ORVP,.105)) S ERROR="This patient is not currently admitted!"
"RTN","ORCACT0",33,0)
GMRA I PKG="GMRA" S ERROR="This action is not allowed on an allergy/adverse reaction!" G VQ ; no actions allowed on Allergies
"RTN","ORCACT0",34,0)
MEDS I PKG="PS",'MEDPARM S ERROR="You are not authorized to enter med orders!" G VQ
"RTN","ORCACT0",35,0)
RW I ACTION="RW" D RW^ORCACT01 G VQ ; rewrite/copy
"RTN","ORCACT0",36,0)
XFR I ACTION="XFR" D XFR^ORCACT01 G VQ ; transfer to in/outpt
"RTN","ORCACT0",37,0)
RN I ACTION="RN" D RN^ORCACT01 G VQ ; renew
"RTN","ORCACT0",38,0)
TRM I $$DONE G VQ ; ORDSTS=1,2,7,12,13
"RTN","ORCACT0",39,0)
EV I ACTION="EV" D  G VQ ; change delay event
"RTN","ORCACT0",40,0)
 . I ORDSTS'=10,ORDSTS'=11 S ERROR="This order has been released!" Q
"RTN","ORCACT0",41,0)
 . I $$EVTORDER^OREVNTX(IFN) S ERROR="The release event for this order may not be changed!" Q
"RTN","ORCACT0",42,0)
 . S X=$P(ORA0,U,4) I X'=2,X'=3 S ERROR="Signed orders may not be delayed to another event!" Q
"RTN","ORCACT0",43,0)
DC2 I ACTION="DC",ACTSTS="" D  G VQ ; DC released order
"RTN","ORCACT0",44,0)
 . I $G(NATR)="A" D  Q:$D(ERROR)
"RTN","ORCACT0",45,0)
 .. S X=$O(^ORE(100.2,"AO",+IFN,0)) I X S:'$G(^ORE(100.2,X,1)) ERROR="Future event orders may not be auto-discontinued!" Q
"RTN","ORCACT0",46,0)
 .. I $$GET1^DIQ(9.4,+$P(OR0,U,14)_",",1)="PSO",$G(DGPMT)=1 Q  ;177 If admission auto-dc and order is outpt med then no further checking needed
"RTN","ORCACT0",47,0)
 .. I $G(DGPMT)=1,$P($G(^SC(+$P(OR0,U,10),0)),U,3)'="C" S ERROR="Only outpatient orders may be auto-discontinued!" Q
"RTN","ORCACT0",48,0)
 .. I $G(DGPMT)'=1,$P($G(^SC(+$P(OR0,U,10),0)),U,3)="C" S ERROR="Only inpatient orders may be auto-discontinued!" Q
"RTN","ORCACT0",49,0)
 . I PKG="RA",ORDSTS=6 S ERROR="Active Radiology orders cannot be discontinued!" Q
"RTN","ORCACT0",50,0)
 . I PKG="LR" D  Q
"RTN","ORCACT0",51,0)
 .. I $$COLLECTD S ERROR="Lab orders that have been collected may not be discontinued!" Q
"RTN","ORCACT0",52,0)
 .. I $G(NATR)="A","^12^38^"'[(U_$P($G(DGPMA),U,18)_U),$$VALUE^ORX8(+IFN,"COLLECT")="SP",$P(OR0,U,8)'<DT S ERROR="Future Send Patient orders may not be auto-discontinued!" Q
"RTN","ORCACT0",53,0)
 . I PKG="GMRC",ORDSTS=9 S ERROR="Consults orders with partial results cannot be discontinued!" Q
"RTN","ORCACT0",54,0)
 . I DG="DO",$G(DGPMT)'=3,ORDSTS=6,'$$NPO(+IFN) S ERROR="Active Diets cannot be discontinued; please order a new diet!" Q
"RTN","ORCACT0",55,0)
RL I ACTION="RL" D  G VQ  ; release hold
"RTN","ORCACT0",56,0)
 . I ORDSTS'=3 S ERROR="Orders not on hold cannot be released!" Q
"RTN","ORCACT0",57,0)
 . I ACTSTS S ERROR=$$ACTION($P(ORA0,U,2))_" orders cannot be released from hold!" Q
"RTN","ORCACT0",58,0)
 . N NATR,ACT S ACT=$S($P(ORA0,U,2)="HD":AIFN,1:+$P(OR3,U,7))
"RTN","ORCACT0",59,0)
 . S NATR=+$P($G(^OR(100,+IFN,8,ACT,0)),U,12),ACT=$P($G(^(0)),U,2)
"RTN","ORCACT0",60,0)
 . I PKG="RA"!(ACT'="HD")!($P($G(^ORD(100.02,NATR,0)),U,2)="S") S ERROR="Orders held by a service must be released from hold through the service!" Q
"RTN","ORCACT0",61,0)
AIFN S X=$P(ORA0,U,2) I AIFN>1,ACTSTS S ERROR="This action is not allowed on a "_$$ACTION(X)_" order!" G VQ
"RTN","ORCACT0",62,0)
RF I ACTION="RF" D  G VQ
"RTN","ORCACT0",63,0)
 . I DG'="O RX" S ERROR="Only Outpatient Med orders may be refilled!" Q
"RTN","ORCACT0",64,0)
 . I ORDSTS=5 S ERROR="Pending orders may not be refilled!" Q
"RTN","ORCACT0",65,0)
 . N X,PSIFN S PSIFN=$G(^OR(100,+IFN,4))
"RTN","ORCACT0",66,0)
 . S X=$$REFILL^PSOREF(PSIFN) I X'>0 S ERROR=$P(X,U,2) Q
"RTN","ORCACT0",67,0)
CP I ACTION="CP" D  G VQ ; complete
"RTN","ORCACT0",68,0)
 . I PKG'="OR" S ERROR="Only generic text orders may be completed through this option!" Q
"RTN","ORCACT0",69,0)
 . I ORDSTS=11!(ORDSTS=10) S ERROR="This order has not been released!" Q
"RTN","ORCACT0",70,0)
AL I ACTION="AL" D  G VQ
"RTN","ORCACT0",71,0)
 . I PKG'="LR",PKG'="RA",PKG'="GMRC" S ERROR="This order does not generate results!" Q
"RTN","ORCACT0",72,0)
 . I $P(OR3,U,10) S ERROR="This order is already flagged to alert the provider when resulted!" Q
"RTN","ORCACT0",73,0)
XX I ACTION="XX" D XX^ORCACT01 G VQ ; edit/change
"RTN","ORCACT0",74,0)
HD I ACTION="HD" D  G VQ ; hold
"RTN","ORCACT0",75,0)
 . I PKG="FH" S ERROR="Diet orders cannot be held!" Q
"RTN","ORCACT0",76,0)
 . I PKG="LR" S ERROR="Lab orders cannot be held!" Q
"RTN","ORCACT0",77,0)
 . I PKG="RA" S ERROR="Radiology orders cannot be held!" Q
"RTN","ORCACT0",78,0)
 . I PKG="GMRC" S ERROR="Consult orders cannot be held!" Q
"RTN","ORCACT0",79,0)
 . I ORDSTS=3 S ERROR="This order is already on hold!" Q
"RTN","ORCACT0",80,0)
 . I ORDSTS'=6,PKG="PS" S ERROR="Only active Pharmacy orders may be held!" Q
"RTN","ORCACT0",81,0)
 . I (ORDSTS=11)!(ORDSTS=10) S ERROR="This order has not been released to the service." Q
"RTN","ORCACT0",82,0)
VQ S Y=$S($D(ERROR):0,1:1)
"RTN","ORCACT0",83,0)
 Q Y
"RTN","ORCACT0",84,0)
 ;
"RTN","ORCACT0",85,0)
ACTION(X) ; -- Return text of action X
"RTN","ORCACT0",86,0)
 N Y S Y=$S(X="NW":"New",X="DC":"Discontinue",X="HD":"Hold",X="RL":"Release Hold",X="RN":"Renew",1:X)
"RTN","ORCACT0",87,0)
 Q Y
"RTN","ORCACT0",88,0)
 ;
"RTN","ORCACT0",89,0)
NPO(ORIFN) ; -- Returns 1 or 0, if order ORIFN is for NPO
"RTN","ORCACT0",90,0)
 N X,Y S X=$$VALUE^ORX8(+ORIFN,"ORDERABLE",1,"E")
"RTN","ORCACT0",91,0)
 S Y=$S($E(X,1,3)="NPO":1,1:0)
"RTN","ORCACT0",92,0)
 Q Y
"RTN","ORCACT0",93,0)
 ;
"RTN","ORCACT0",94,0)
COLLECTD() ; -- Lab order collected/active (incl all children)?
"RTN","ORCACT0",95,0)
 I (ORDSTS=11)!(ORDSTS=10) Q 0 ; unreleased
"RTN","ORCACT0",96,0)
 I '$O(^OR(100,+IFN,2,0)) Q (ORDSTS'=5)
"RTN","ORCACT0",97,0)
 ;I ORDSTS'=6 Q 1 ; Parent -> active instead of pending
"RTN","ORCACT0",98,0)
 N Y,Z S Y=1,Z=0
"RTN","ORCACT0",99,0)
 F  S Z=$O(^OR(100,+IFN,2,Z)) Q:Z'>0  I $P($G(^OR(100,Z,3)),U,3)=5 S Y=0 Q
"RTN","ORCACT0",100,0)
 Q Y
"RTN","ORCACT0",101,0)
 ;
"RTN","ORCACT0",102,0)
DONE() ; -- sets ERROR if terminal status
"RTN","ORCACT0",103,0)
 I ORDSTS=1 S ERROR="This order has been discontinued!" Q 1
"RTN","ORCACT0",104,0)
 I ORDSTS=2 S ERROR="This order has been completed!" Q 1
"RTN","ORCACT0",105,0)
 I ORDSTS=7 S ERROR="This order has expired!" Q 1
"RTN","ORCACT0",106,0)
 I ORDSTS=12 S ERROR="This order has been changed!" Q 1
"RTN","ORCACT0",107,0)
 I ORDSTS=13 S ERROR="This order has been cancelled!" Q 1
"RTN","ORCACT0",108,0)
 I ORDSTS=14 S ERROR="This order has lapsed!" Q 1
"RTN","ORCACT0",109,0)
 I ORDSTS=15 S ERROR="This order has been renewed!" Q 1
"RTN","ORCACT0",110,0)
 Q 0
"RTN","ORCACT0",111,0)
 ;
"RTN","ORCACT0",112,0)
DISABLED() ; -- Order dialog [or protocol] disabled?
"RTN","ORCACT0",113,0)
 N X,DLG S DLG=$P(OR0,U,5),X=0 I +DLG'>0 Q X
"RTN","ORCACT0",114,0)
 I VER'<3,DLG?1.N1";ORD(101.41," S X=$$MSG^ORXD(+DLG) Q X
"RTN","ORCACT0",115,0)
 S DLG=$S(PKG="RA":"RA OERR EXAM",PKG="GMRC":"GMRCOR CONSULT",1:"")
"RTN","ORCACT0",116,0)
 I $L(DLG) S DLG=+$O(^ORD(101.41,"AB",DLG,0)),X=$$MSG^ORXD(DLG)
"RTN","ORCACT0",117,0)
 Q X
"RTN","ORPRF")
0^5^B5880740
"RTN","ORPRF",1,0)
ORPRF ;SLC/JLI-Patient record flag ;2/28/03
"RTN","ORPRF",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**173**;Dec 17, 1997
"RTN","ORPRF",3,0)
 ;
"RTN","ORPRF",4,0)
 ; ^TMP("ORPRF",$J,NN) store the flag array.
"RTN","ORPRF",5,0)
 ;
"RTN","ORPRF",6,0)
FMT(ROOT) ; Convert record flag data to displayable data
"RTN","ORPRF",7,0)
 N IDX,IX,CNT,TMPRT
"RTN","ORPRF",8,0)
 S (IDX,IX,CNT)=0
"RTN","ORPRF",9,0)
 F  S IDX=$O(ROOT(IDX)) Q:'IDX  D
"RTN","ORPRF",10,0)
 . S TMPRT(IDX,"FLAG")=$P($G(ROOT(IDX,"FLAG")),U,2)
"RTN","ORPRF",11,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Flag Name:               "_$P($G(ROOT(IDX,"FLAG")),U,2)
"RTN","ORPRF",12,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Flag Type:               "_$P($G(ROOT(IDX,"FLAGTYPE")),U,2)
"RTN","ORPRF",13,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Flag Category:           "_$P($G(ROOT(IDX,"CATEGORY")),U)
"RTN","ORPRF",14,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Assignment Status:       "_"Active"
"RTN","ORPRF",15,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Initial Assigned Date:   "_$P($G(ROOT(IDX,"ASSIGNDT")),U,2)
"RTN","ORPRF",16,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Approved by:             "_$P($G(ROOT(IDX,"APPRVBY")),U,2)
"RTN","ORPRF",17,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Next Review Date:        "_$P($G(ROOT(IDX,"REVIEWDT")),U,2)
"RTN","ORPRF",18,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Owner Site:              "_$P($G(ROOT(IDX,"OWNER")),U,2)
"RTN","ORPRF",19,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Originating Site:        "_$P($G(ROOT(IDX,"ORIGSITE")),U,2)
"RTN","ORPRF",20,0)
 . Q:'$D(ROOT(IDX,"NARR"))
"RTN","ORPRF",21,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="            "
"RTN","ORPRF",22,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Assignment Narratives:   "
"RTN","ORPRF",23,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="-------------------------"
"RTN","ORPRF",24,0)
 . F  S IX=$O(ROOT(IDX,"NARR",IX)) Q:'IX  D
"RTN","ORPRF",25,0)
 . . S CNT=CNT+1,TMPRT(IDX,CNT)=$G(ROOT(IDX,"NARR",IX,0))
"RTN","ORPRF",26,0)
 K ROOT
"RTN","ORPRF",27,0)
 M ROOT=TMPRT
"RTN","ORPRF",28,0)
 Q
"RTN","ORPRF",29,0)
 ;
"RTN","ORPRF",30,0)
HASFLG(ORY,PTDFN) ;If patient has record flag
"RTN","ORPRF",31,0)
 ;DBIA 3860: $$GETACT^DGPFAPI(PTDFN,.FLGDATA)
"RTN","ORPRF",32,0)
 I '$L($TEXT(GETACT^DGPFAPI)) S ORY=0 Q
"RTN","ORPRF",33,0)
 N ROOT,IDX
"RTN","ORPRF",34,0)
 S ROOT="PRFARR",(ORY,IDX)=0 K ^TMP("ORPRF",$J)
"RTN","ORPRF",35,0)
 S ORY=$$GETACT^DGPFAPI(PTDFN,ROOT)
"RTN","ORPRF",36,0)
 Q:'ORY
"RTN","ORPRF",37,0)
 D FMT(.@ROOT)
"RTN","ORPRF",38,0)
 M ^TMP("ORPRF",$J)=@ROOT
"RTN","ORPRF",39,0)
 F  S IDX=$O(^TMP("ORPRF",$J,IDX)) Q:'IDX  D
"RTN","ORPRF",40,0)
 . S ORY(IDX)=IDX_U_$G(^TMP("ORPRF",$J,IDX,"FLAG"))
"RTN","ORPRF",41,0)
 Q
"RTN","ORPRF",42,0)
 ;
"RTN","ORPRF",43,0)
GETFLG(ORY,PTDFN,FLAGID) ;Return detail flag information
"RTN","ORPRF",44,0)
 I '$D(^TMP("ORPRF",$J,FLAGID)) Q
"RTN","ORPRF",45,0)
 N IX,CNT
"RTN","ORPRF",46,0)
 S (IX,CNT)=0
"RTN","ORPRF",47,0)
 F  S IX=$O(^TMP("ORPRF",$J,FLAGID,IX)) Q:'IX  D
"RTN","ORPRF",48,0)
 . S CNT=CNT+1,ORY(CNT)=$G(^TMP("ORPRF",$J,FLAGID,IX))
"RTN","ORPRF",49,0)
 Q
"RTN","ORPRF",50,0)
 ;
"RTN","ORPRF",51,0)
CLEAR(ORY) ;Clear up the temp globe
"RTN","ORPRF",52,0)
 K ^TMP("ORPRF",$J)
"RTN","ORPRF",53,0)
 Q
"RTN","ORPRF",54,0)
 ;
"RTN","ORQORB")
0^15^B2651025
"RTN","ORQORB",1,0)
ORQORB ; slc/CLA - Functions which return OE/RR Notification information ;12/15/97
"RTN","ORQORB",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**6,173**;Dec 17, 1997
"RTN","ORQORB",3,0)
 Q
"RTN","ORQORB",4,0)
LIST(Y) ;return list of notifications from Notification File [#100.9]
"RTN","ORQORB",5,0)
 ; RETURN IEN^NAME^URGENCY
"RTN","ORQORB",6,0)
 N I,J,V
"RTN","ORQORB",7,0)
 S I=1
"RTN","ORQORB",8,0)
 S J=0 F  S J=$O(^ORD(100.9,"B",J)) Q:J=""  S V=0,V=$O(^ORD(100.9,"B",J,V)) S Y(I)=V_"^"_J_"^"_^ORD(100.9,V,3),I=I+1
"RTN","ORQORB",9,0)
 Q
"RTN","ORQORB",10,0)
LISTON(Y,USER) ;return notifications the user has turned On or OFF
"RTN","ORQORB",11,0)
 ; RETURN NOTIF IEN^NOTIF NAME^ON/OFF FLAG
"RTN","ORQORB",12,0)
 N I,J,V,Z,FLAG
"RTN","ORQORB",13,0)
 S I=1,FLAG=""
"RTN","ORQORB",14,0)
 S J=0 F  S J=$O(^ORD(100.9,"B",J)) Q:J=""  S V=0,V=$O(^ORD(100.9,"B",J,V)) D
"RTN","ORQORB",15,0)
 .S Z=0,Z=$O(^ORD(100.9,"E",V,USER,Z))
"RTN","ORQORB",16,0)
 .I Z>0 S FLAG="ON"
"RTN","ORQORB",17,0)
 .E  S FLAG="OFF"
"RTN","ORQORB",18,0)
 .S Y(I)=V_"^"_J_"^"_FLAG,I=I+1
"RTN","ORQORB",19,0)
 Q
"RTN","ORQORB",20,0)
URGENCY(ORY,ORN) ;return urgency for the notification passed
"RTN","ORQORB",21,0)
 N ORSRV
"RTN","ORQORB",22,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQORB",23,0)
 S ORY=$$GET^XPAR("USR^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG","ORB URGENCY",ORN,"I")
"RTN","ORQORB",24,0)
 Q
"RTN","ORQORB",25,0)
URGLIST(ORY) ;return list of notification urgencies
"RTN","ORQORB",26,0)
 N ORSRV,ORN,ORU
"RTN","ORQORB",27,0)
 S ORN=0 F  S ORN=$O(^ORD(100.9,ORN)) Q:+$G(ORN)<1  D
"RTN","ORQORB",28,0)
 .S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQORB",29,0)
 .S ORU=$$GET^XPAR("USR^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG","ORB URGENCY",ORN,"I")
"RTN","ORQORB",30,0)
 .S ORY(ORN)=ORU
"RTN","ORQORB",31,0)
 Q
"RTN","ORQORB",32,0)
SORT(ORY) ;return notification sort method for user/division/system/pkg
"RTN","ORQORB",33,0)
 S ORY=$$GET^XPAR("USR^DIV^SYS^PKG","ORB SORT METHOD",1,"I")
"RTN","ORQORB",34,0)
 Q
"RTN","ORQPTQ11")
0^22^B56149817
"RTN","ORQPTQ11",1,0)
ORQPTQ11 ; SLC/CLA - Functs which return patient lists and sources pt 1B ;12/15/97 [ 08/04/97  3:32 PM ] [6/6/03 2:36pm]
"RTN","ORQPTQ11",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**82,85,109,132,173**;Dec 17, 1997
"RTN","ORQPTQ11",3,0)
 ;
"RTN","ORQPTQ11",4,0)
 ; SLC/PKS - Modified to deal with "Combination" lists - 3/2000.
"RTN","ORQPTQ11",5,0)
 ; SLC/PKS - Additions for "Restricted Pt. Lists" - 11/2001.
"RTN","ORQPTQ11",6,0)
 ;
"RTN","ORQPTQ11",7,0)
DEFSRC(Y) ; return current user's default list source
"RTN","ORQPTQ11",8,0)
 Q:'$D(DUZ)
"RTN","ORQPTQ11",9,0)
 N FROM,API,ORSRV
"RTN","ORQPTQ11",10,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQPTQ11",11,0)
 S FROM=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT LIST SOURCE",1,"Q")
"RTN","ORQPTQ11",12,0)
 Q:'$L($G(FROM))
"RTN","ORQPTQ11",13,0)
 I FROM="T" S Y=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT TEAM",1,"B")_"^Team"
"RTN","ORQPTQ11",14,0)
 I FROM="W" S Y=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT WARD",1,"B")_"^Ward"
"RTN","ORQPTQ11",15,0)
 I FROM="P" S Y=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT PROVIDER",1,"B")_"^Primary Provider"
"RTN","ORQPTQ11",16,0)
 I FROM="S" S Y=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT SPECIALTY",1,"B")_"^Specialty"
"RTN","ORQPTQ11",17,0)
 I FROM="C" D
"RTN","ORQPTQ11",18,0)
 .S API="ORLP DEFAULT CLINIC "_$$UP^XLFSTR($$DOW^XLFDT(DT))
"RTN","ORQPTQ11",19,0)
 .S Y=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),API,1,"B")_"^"_$$DOW^XLFDT(DT)_" Clinic"
"RTN","ORQPTQ11",20,0)
 I FROM="M" S Y="^Combination"
"RTN","ORQPTQ11",21,0)
 Q
"RTN","ORQPTQ11",22,0)
FDEFSRC(ORDUZ) ; extrinsic function return user's (ORDUZ) default list source
"RTN","ORQPTQ11",23,0)
 Q:'$D(ORDUZ) "^^Error: No user identified"
"RTN","ORQPTQ11",24,0)
 N FROM,API,RESULT,ORSRV
"RTN","ORQPTQ11",25,0)
 S ORSRV=$G(^VA(200,ORDUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQPTQ11",26,0)
 S FROM=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT LIST SOURCE",1,"Q")
"RTN","ORQPTQ11",27,0)
 Q:'$L($G(FROM)) "^^No default list source specified"
"RTN","ORQPTQ11",28,0)
 I FROM="T" S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT TEAM",1,"B")_"^Team"
"RTN","ORQPTQ11",29,0)
 I FROM="W" S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT WARD",1,"B")_"^Ward"
"RTN","ORQPTQ11",30,0)
 I FROM="P" S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT PROVIDER",1,"B")_"^Primary Provider"
"RTN","ORQPTQ11",31,0)
 I FROM="S" S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT SPECIALTY",1,"B")_"^Specialty"
"RTN","ORQPTQ11",32,0)
 I FROM="C" D
"RTN","ORQPTQ11",33,0)
 .S API="ORLP DEFAULT CLINIC "_$$UP^XLFSTR($$DOW^XLFDT(DT))
"RTN","ORQPTQ11",34,0)
 .S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),API,1,"B")_"^"_$$DOW^XLFDT(DT)_" Clinic"
"RTN","ORQPTQ11",35,0)
 I FROM="M" S RESULT="^Combination"
"RTN","ORQPTQ11",36,0)
 Q RESULT
"RTN","ORQPTQ11",37,0)
LISTSRC(ORDUZ,TYPE) ; extrinsic function return user's (ORDUZ) list source
"RTN","ORQPTQ11",38,0)
 ; for list type team, ward, primary provider, specialty, clinic, combination (TYPE)
"RTN","ORQPTQ11",39,0)
 Q:'$D(ORDUZ) "^^Error: No user identified"
"RTN","ORQPTQ11",40,0)
 Q:'$D(TYPE) "^^Error: No list type identified"
"RTN","ORQPTQ11",41,0)
 N API,RESULT,ORSRV
"RTN","ORQPTQ11",42,0)
 S ORSRV=$G(^VA(200,ORDUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQPTQ11",43,0)
 I TYPE="T" S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT TEAM",1,"B")_"^Team"
"RTN","ORQPTQ11",44,0)
 I TYPE="W" S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT WARD",1,"B")_"^Ward"
"RTN","ORQPTQ11",45,0)
 I TYPE="P" S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT PROVIDER",1,"B")_"^Primary Provider"
"RTN","ORQPTQ11",46,0)
 I TYPE="S" S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT SPECIALTY",1,"B")_"^Specialty"
"RTN","ORQPTQ11",47,0)
 I TYPE="C" D
"RTN","ORQPTQ11",48,0)
 .S API="ORLP DEFAULT CLINIC "_$$UP^XLFSTR($$DOW^XLFDT(DT))
"RTN","ORQPTQ11",49,0)
 .S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),API,1,"B")_"^"_$$DOW^XLFDT(DT)_" Clinic"
"RTN","ORQPTQ11",50,0)
 I TYPE="M" S RESULT="Combination"
"RTN","ORQPTQ11",51,0)
 I $P(RESULT,U)="" S RESULT=U_RESULT
"RTN","ORQPTQ11",52,0)
 Q RESULT
"RTN","ORQPTQ11",53,0)
DEFLIST(Y) ; return current user's default patient list
"RTN","ORQPTQ11",54,0)
 I $$BROKER^XWBLIB S Y=$NA(^TMP("OR",$J,"PATIENTS")) ; GUI = global.
"RTN","ORQPTQ11",55,0)
 I '$$BROKER^XWBLIB S ^TMP("OR",$J,"PATIENTS",0)=""
"RTN","ORQPTQ11",56,0)
 Q:'$D(DUZ)
"RTN","ORQPTQ11",57,0)
 N FROM,IEN,BEG,END,API,ORSRV,ORQDAT,ORQCNT,ORGUI
"RTN","ORQPTQ11",58,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U) ; Get S/S.
"RTN","ORQPTQ11",59,0)
 S FROM=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT LIST SOURCE",1,"Q")
"RTN","ORQPTQ11",60,0)
 Q:'$L($G(FROM))
"RTN","ORQPTQ11",61,0)
 I FROM="T" S IEN=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT TEAM",1,"Q") D:+$G(IEN)>0 TEAMPTS^ORQPTQ1(.Y,IEN)
"RTN","ORQPTQ11",62,0)
 I FROM="W" S IEN=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT WARD",1,"Q") D:+$G(IEN)>0 BYWARD^ORWPT(.Y,IEN)
"RTN","ORQPTQ11",63,0)
 I FROM="P" S IEN=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT PROVIDER",1,"Q") D:+$G(IEN)>0 PROVPTS^ORQPTQ2(.Y,IEN)
"RTN","ORQPTQ11",64,0)
 I FROM="S" S IEN=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT SPECIALTY",1,"Q") D:+$G(IEN)>0 SPECPTS^ORQPTQ2(.Y,IEN)
"RTN","ORQPTQ11",65,0)
 I FROM="C" D
"RTN","ORQPTQ11",66,0)
 .S API="ORLP DEFAULT CLINIC "_$$UP^XLFSTR($$DOW^XLFDT(DT)),IEN=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),API,1,"Q") I +$G(IEN)>0 D
"RTN","ORQPTQ11",67,0)
 ..S BEG=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC START DATE",1,"E"))
"RTN","ORQPTQ11",68,0)
 ..I BEG="T+0" S BEG=$$FMTE^XLFDT(DT,BEG)
"RTN","ORQPTQ11",69,0)
 ..S END=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC STOP DATE",1,"E"))
"RTN","ORQPTQ11",70,0)
 ..I END="T+0" S END=$$FMTE^XLFDT(DT,END)
"RTN","ORQPTQ11",71,0)
 ..D CLINPTS^ORQPTQ2(.Y,+$G(IEN),BEG,END)
"RTN","ORQPTQ11",72,0)
 I FROM="M" D
"RTN","ORQPTQ11",73,0)
 .S IEN=$D(^OR(100.24,DUZ,0)) I +$G(IEN)>0 S IEN=DUZ D
"RTN","ORQPTQ11",74,0)
 ..S BEG=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC START DATE",1,"E"))
"RTN","ORQPTQ11",75,0)
 ..I BEG="T+0" S BEG=$$FMTE^XLFDT(DT,BEG)
"RTN","ORQPTQ11",76,0)
 ..S END=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC STOP DATE",1,"E"))
"RTN","ORQPTQ11",77,0)
 ..I END="T+0" S END=$$FMTE^XLFDT(DT,END)
"RTN","ORQPTQ11",78,0)
 ..D COMBPTS^ORQPTQ6(0,+$G(IEN),BEG,END) ; "0"= GUI RPC call.
"RTN","ORQPTQ11",79,0)
 I ($$BROKER^XWBLIB)&(FROM'="M") D  ; Combinations already written to global.
"RTN","ORQPTQ11",80,0)
 .S ORQDAT="",ORQCNT=1
"RTN","ORQPTQ11",81,0)
 .F  S ORQDAT=$G(Y(ORQCNT)) Q:ORQDAT=""  D
"RTN","ORQPTQ11",82,0)
 ..S ^TMP("OR",$J,"PATIENTS",ORQCNT,0)=ORQDAT
"RTN","ORQPTQ11",83,0)
 ..S ORQCNT=ORQCNT+1
"RTN","ORQPTQ11",84,0)
 I ('$$BROKER^XWBLIB) S Y=FROM_";"_+$G(IEN)_";"_$G(BEG)_";"_$G(END) ; MKB 10/13/95
"RTN","ORQPTQ11",85,0)
 Q
"RTN","ORQPTQ11",86,0)
DEFSORT(Y) ; Return user's default sort.
"RTN","ORQPTQ11",87,0)
 ; SLC/PKS - 4/6/2001
"RTN","ORQPTQ11",88,0)
 ;
"RTN","ORQPTQ11",89,0)
 N ORSORT,ORSECT,ORPARAM
"RTN","ORQPTQ11",90,0)
 ;
"RTN","ORQPTQ11",91,0)
 I ('$D(DUZ)) S Y="Unable to determine DUZ." Q
"RTN","ORQPTQ11",92,0)
 S ORSECT=$G(^VA(200,DUZ,5))
"RTN","ORQPTQ11",93,0)
 I +ORSECT>0 S ORSECT=$P(ORSECT,U)
"RTN","ORQPTQ11",94,0)
 S Y="A" ; Default of "Alpha" sort.
"RTN","ORQPTQ11",95,0)
 S ORPARAM="ORLP DEFAULT LIST ORDER"
"RTN","ORQPTQ11",96,0)
 S ORSORT=$$GET^XPAR("USR^SRV.`"_$G(ORSECT)_"^DIV^SYS^PKG",ORPARAM,1,"I")
"RTN","ORQPTQ11",97,0)
 I (ORSORT'="") S Y=ORSORT
"RTN","ORQPTQ11",98,0)
 ;
"RTN","ORQPTQ11",99,0)
 Q
"RTN","ORQPTQ11",100,0)
 ;
"RTN","ORQPTQ11",101,0)
PNAMWRIT(ORROOT,ORDFN) ; Write patient name to ^TMP global.
"RTN","ORQPTQ11",102,0)
 ;
"RTN","ORQPTQ11",103,0)
 ; Variables used:
"RTN","ORQPTQ11",104,0)
 ;
"RTN","ORQPTQ11",105,0)
 ;   ORDFN   = Passed patient DFN.
"RTN","ORQPTQ11",106,0)
 ;   ORNAME  = Patient name.
"RTN","ORQPTQ11",107,0)
 ;   ORROOT  = ^TMP root passed by calling code.
"RTN","ORQPTQ11",108,0)
 ;   ORWRITE = Holder for ^TMP node for writing.
"RTN","ORQPTQ11",109,0)
 ;
"RTN","ORQPTQ11",110,0)
 N ORNAME,ORWRITE
"RTN","ORQPTQ11",111,0)
 S ORROOT=ORROOT_","                       ; Add necessary comma.
"RTN","ORQPTQ11",112,0)
 ;
"RTN","ORQPTQ11",113,0)
 S ORNAME=""                               ; Initializae.
"RTN","ORQPTQ11",114,0)
 S ORNAME=$G(^DPT(ORDFN,0))                ; Get zero node pt. data.
"RTN","ORQPTQ11",115,0)
 S ORNAME=$P(ORNAME,U)                     ; Extract pt. name only.
"RTN","ORQPTQ11",116,0)
 I ORNAME="" Q 0                           ; Problem - punt.
"RTN","ORQPTQ11",117,0)
 ;
"RTN","ORQPTQ11",118,0)
 ; Create naked reference string for writing to ^TMP:
"RTN","ORQPTQ11",119,0)
 S ORWRITE=ORROOT_""""_ORNAME_""""_","_ORDFN_")"
"RTN","ORQPTQ11",120,0)
 S @ORWRITE=ORDFN_U_ORNAME                 ; Write to ^TMP.
"RTN","ORQPTQ11",121,0)
 ;
"RTN","ORQPTQ11",122,0)
 Q 1
"RTN","ORQPTQ11",123,0)
 ;
"RTN","ORQPTQ11",124,0)
RPLMAKE(Y,ORTL) ; Make global restricted pt. array from Team List.
"RTN","ORQPTQ11",125,0)
 ;
"RTN","ORQPTQ11",126,0)
 ; Variables used:
"RTN","ORQPTQ11",127,0)
 ;
"RTN","ORQPTQ11",128,0)
 ;   ORDFN   = Holder for patient DFN.
"RTN","ORQPTQ11",129,0)
 ;   ORJ     = Holds $J value.
"RTN","ORQPTQ11",130,0)
 ;   ORREAD  = Holder for ^TMP root to kill.
"RTN","ORQPTQ11",131,0)
 ;   ORRET   = Returned value from function call.
"RTN","ORQPTQ11",132,0)
 ;   ORROOT  = ^TMP root to pass.
"RTN","ORQPTQ11",133,0)
 ;   ORTL    = Team List IEN.
"RTN","ORQPTQ11",134,0)
 ;   ORX     = Working variable used in $ORDER statement.
"RTN","ORQPTQ11",135,0)
 ;   Y       = Returned value (same as ORJ).
"RTN","ORQPTQ11",136,0)
 ;
"RTN","ORQPTQ11",137,0)
 N ORDFN,ORJ,ORREAD,ORRET,ORROOT,ORX
"RTN","ORQPTQ11",138,0)
 ;
"RTN","ORQPTQ11",139,0)
 I ORTL="" S Y="" Q                        ; No Team List IEN passed.
"RTN","ORQPTQ11",140,0)
 I $G(^OR(100.21,ORTL,0))="" S Y="" Q      ; No such Team List.
"RTN","ORQPTQ11",141,0)
 ;
"RTN","ORQPTQ11",142,0)
 S (ORJ,Y)=$J                              ; Assign returned value.
"RTN","ORQPTQ11",143,0)
 S ORROOT="^TMP("_"""ORRPL"""_","          ; Initial setting.
"RTN","ORQPTQ11",144,0)
 S ORROOT=ORROOT_ORJ_","_"""B"""           ; Add job number, "B."
"RTN","ORQPTQ11",145,0)
 S ORREAD=ORROOT_")"                       ; Assign "kill" root.
"RTN","ORQPTQ11",146,0)
 K @ORREAD                                 ; Kill old, if any.
"RTN","ORQPTQ11",147,0)
 ;
"RTN","ORQPTQ11",148,0)
 ; From Team List B x-ref, obtain patients, create new ^TMP entries:
"RTN","ORQPTQ11",149,0)
 S ORX=""                                  ; Initialize.
"RTN","ORQPTQ11",150,0)
 F  S ORX=$O(^OR(100.21,ORTL,10,"B",ORX)) Q:ORX=""  D
"RTN","ORQPTQ11",151,0)
 .S ORDFN=$P(ORX,";")                      ; Extract patient DFN.
"RTN","ORQPTQ11",152,0)
 .S ORRET=$$PNAMWRIT(ORROOT,ORDFN)         ; Call that writes to ^TMP.
"RTN","ORQPTQ11",153,0)
 ;
"RTN","ORQPTQ11",154,0)
 Q
"RTN","ORQPTQ11",155,0)
 ;
"RTN","ORQPTQ11",156,0)
RPLREAD(Y,ORJ,ORFROM,ORDIR) ; Read disk-based patient array from TMP.
"RTN","ORQPTQ11",157,0)
 ;
"RTN","ORQPTQ11",158,0)
 ; Variables used:
"RTN","ORQPTQ11",159,0)
 ;
"RTN","ORQPTQ11",160,0)
 ;   ORCNT   = Counter variable.
"RTN","ORQPTQ11",161,0)
 ;   ORDIR   = Direction to move through list.
"RTN","ORQPTQ11",162,0)
 ;   ORFROM  = Starting point from which to move through list.
"RTN","ORQPTQ11",163,0)
 ;   ORI     = Counter variable.
"RTN","ORQPTQ11",164,0)
 ;   ORIEN   = Record IEN holder.
"RTN","ORQPTQ11",165,0)
 ;   ORJ     = Job number to use in ^TMP global root.
"RTN","ORQPTQ11",166,0)
 ;   ORROOT  = ^TMP global file root.
"RTN","ORQPTQ11",167,0)
 ;   ORZ     = Temporary value holder.
"RTN","ORQPTQ11",168,0)
 ;   Y       = Returned array.
"RTN","ORQPTQ11",169,0)
 ;
"RTN","ORQPTQ11",170,0)
 N ORCNT,ORI,ORIEN,ORROOT,ORZ
"RTN","ORQPTQ11",171,0)
 ;
"RTN","ORQPTQ11",172,0)
 S ORROOT="^TMP("_"""ORRPL"""_","_ORJ      ; Initial setting.
"RTN","ORQPTQ11",173,0)
 S ORROOT=ORROOT_","_"""B"""               ; Add final text.
"RTN","ORQPTQ11",174,0)
 ;
"RTN","ORQPTQ11",175,0)
 ; Check for existence of data:
"RTN","ORQPTQ11",176,0)
 I '$D(@(ORROOT_")")) S Y(0)="No data available." Q
"RTN","ORQPTQ11",177,0)
 ;
"RTN","ORQPTQ11",178,0)
 S ORROOT=ORROOT_","                       ; Add comma.
"RTN","ORQPTQ11",179,0)
 S ORCNT=44                                ; Initialize to maximum.
"RTN","ORQPTQ11",180,0)
 S ORI=0                                   ; Initialize.
"RTN","ORQPTQ11",181,0)
 ;
"RTN","ORQPTQ11",182,0)
 ; Loop through ^TMP entries for data to return:
"RTN","ORQPTQ11",183,0)
 F  S ORFROM=$O(@(ORROOT_""""_ORFROM_""""_")"),ORDIR) Q:ORFROM=""  D  Q:ORI=ORCNT
"RTN","ORQPTQ11",184,0)
 .;
"RTN","ORQPTQ11",185,0)
 .; Sub-loop for entries up to ORCNT maximum:
"RTN","ORQPTQ11",186,0)
 .S ORIEN=0                                ; Initialize.
"RTN","ORQPTQ11",187,0)
 .F  S ORIEN=$O(@(ORROOT_""""_ORFROM_""""_","_ORIEN_")")) Q:'ORIEN  D  Q:ORI=ORCNT
"RTN","ORQPTQ11",188,0)
 ..S ORI=ORI+1                             ; Increment counter.
"RTN","ORQPTQ11",189,0)
 ..;
"RTN","ORQPTQ11",190,0)
 ..; Assign return array:
"RTN","ORQPTQ11",191,0)
 ..S Y(ORI)=@(ORROOT_""""_ORFROM_""""_","_ORIEN_")")
"RTN","ORQPTQ11",192,0)
 ;
"RTN","ORQPTQ11",193,0)
 Q
"RTN","ORQPTQ11",194,0)
 ;
"RTN","ORQPTQ11",195,0)
RPLCLEAN(Y,ORJ) ; Kill global data using passed global root value.
"RTN","ORQPTQ11",196,0)
 ;
"RTN","ORQPTQ11",197,0)
 ; Variables used:
"RTN","ORQPTQ11",198,0)
 ;
"RTN","ORQPTQ11",199,0)
 ;    ORJ    = Job number to use in ^TMP global root.
"RTN","ORQPTQ11",200,0)
 ;    ORROOT = Root of ^TMP global to kill.
"RTN","ORQPTQ11",201,0)
 ;    Y      = Returned RPC value.
"RTN","ORQPTQ11",202,0)
 ;
"RTN","ORQPTQ11",203,0)
 N ORROOT
"RTN","ORQPTQ11",204,0)
 ;
"RTN","ORQPTQ11",205,0)
 S Y=1                                     ; Initialize.
"RTN","ORQPTQ11",206,0)
 S ORROOT="^TMP("_"""ORRPL"""_","          ; Initial setting.
"RTN","ORQPTQ11",207,0)
 S ORROOT=ORROOT_ORJ_","_"""B"""_")"       ; Add rest.
"RTN","ORQPTQ11",208,0)
 K @ORROOT                                 ; Kill global data.
"RTN","ORQPTQ11",209,0)
 ;
"RTN","ORQPTQ11",210,0)
 Q
"RTN","ORQPTQ11",211,0)
 ;
"RTN","ORQQPL")
0^2^B17756509
"RTN","ORQQPL",1,0)
ORQQPL ; slc/CLA/REV - Functions which return patient problem list data ;12/15/97  [ 23-APR-1999 11:02:10 ]
"RTN","ORQQPL",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**9,10,85,173**;Dec 17, 1997
"RTN","ORQQPL",3,0)
LIST(ORPY,DFN,STATUS)  ;return pt's problem list in format: ien^description^
"RTN","ORQQPL",4,0)
 ; ICD^onset^last modified^SC^SpExp
"RTN","ORQQPL",5,0)
 ; STATUS = status of problems to return: (A)CTIVE, (I)NACTIVE, ("")ALL 
"RTN","ORQQPL",6,0)
 Q:'DFN
"RTN","ORQQPL",7,0)
 N ORGMPL,I,DETAIL,ORICD186
"RTN","ORQQPL",8,0)
 S ORICD186=$$PATCH^XPDUTL("ICD*18.0*6")
"RTN","ORQQPL",9,0)
 I $L($T(LIST^GMPLUTL2))>0 D
"RTN","ORQQPL",10,0)
 .D LIST^GMPLUTL2(.ORGMPL,DFN,STATUS)
"RTN","ORQQPL",11,0)
 .Q:'$D(ORGMPL(0))
"RTN","ORQQPL",12,0)
 .S DETAIL=$$DETAIL^ORWCV1(10)
"RTN","ORQQPL",13,0)
 .F I=1:1:ORGMPL(0) D
"RTN","ORQQPL",14,0)
 ..S X=ORGMPL(I),ORPY(I)=$P(X,U)_U_$P(X,U,3)_U_$P(X,U,2)_U_$P(X,U,4)_U_$P(X,U,5)_U_$P(X,U,6)_U_$P(X,U,7)_U_$P(X,U,8)_U_$P(X,U,10)_U_$P(X,U,9)_U_U_DETAIL
"RTN","ORQQPL",15,0)
 ..I +ORICD186,'+$$STATCHK^ICDAPIU($P(ORPY(I),U,4),DT) D
"RTN","ORQQPL",16,0)
 ...S $P(ORPY(I),U,13)="#",$P(ORPY(I),U,9)="#"
"RTN","ORQQPL",17,0)
 .S:+$G(ORPY(1))<1 ORPY(1)="^No problems found."
"RTN","ORQQPL",18,0)
 I $L($T(LIST^GMPLUTL2))<1 S ORPY(1)="^Problem list not available.^"
"RTN","ORQQPL",19,0)
 K X
"RTN","ORQQPL",20,0)
 Q
"RTN","ORQQPL",21,0)
DETAIL(Y,DFN,PROBIEN,ID)  ; RETURN DETAILED PROBLEM DATA
"RTN","ORQQPL",22,0)
 N ORGMPL,GMPDT
"RTN","ORQQPL",23,0)
 I $L($T(DETAIL^GMPLUTL2))>0 D
"RTN","ORQQPL",24,0)
 .D DETAIL^GMPLUTL2(PROBIEN,.ORGMPL)
"RTN","ORQQPL",25,0)
 .N CR,I,J S CR=$CHAR(13),I=1
"RTN","ORQQPL",26,0)
 .S Y(I)=ORGMPL("NARRATIVE")_" ("_ORGMPL("DIAGNOSIS")_")",I=I+1
"RTN","ORQQPL",27,0)
 .I $$PATCH^XPDUTL("ICD*18.0*6"),'+$$STATCHK^ICDAPIU(ORGMPL("DIAGNOSIS"),DT) D
"RTN","ORQQPL",28,0)
 ..S Y(I)="*** The ICD code "_ORGMPL("DIAGNOSIS")_" is currently inactive. ***",I=I+1
"RTN","ORQQPL",29,0)
 .S Y(I)=" ",I=I+1
"RTN","ORQQPL",30,0)
 .S Y(I)="   Onset: "_ORGMPL("ONSET"),I=I+1
"RTN","ORQQPL",31,0)
 .S Y(I)="  Status: "_ORGMPL("STATUS")
"RTN","ORQQPL",32,0)
 .S Y(I)=Y(I)_$S(ORGMPL("PRIORITY")="ACUTE":"/ACUTE",ORGMPL("PRIORITY")="CHRONIC":"/CHRONIC",1:""),I=I+1
"RTN","ORQQPL",33,0)
 .S Y(I)=" SC Cond: "_ORGMPL("SC"),I=I+1
"RTN","ORQQPL",34,0)
 .S Y(I)="Exposure: "_$S($G(ORGMPL("EXPOSURE"))>0:ORGMPL("EXPOSURE",1),1:"None"),I=I+1
"RTN","ORQQPL",35,0)
 .I $G(ORGMPL("EXPOSURE"))>1 F J=2:1:ORGMPL("EXPOSURE")  D
"RTN","ORQQPL",36,0)
 ..S Y(I)="          "_ORGMPL("EXPOSURE",J),I=I+1
"RTN","ORQQPL",37,0)
 .S Y(I)=" ",I=I+1
"RTN","ORQQPL",38,0)
 .S Y(I)="Provider: "_ORGMPL("PROVIDER"),I=I+1
"RTN","ORQQPL",39,0)
 .S Y(I)="  Clinic: "_ORGMPL("CLINIC"),I=I+1
"RTN","ORQQPL",40,0)
 .S Y(I)=" ",I=I+1
"RTN","ORQQPL",41,0)
 .S Y(I)="Recorded: "_$P(ORGMPL("RECORDED"),U)_", by "_$P(ORGMPL("RECORDED"),U,2),I=I+1
"RTN","ORQQPL",42,0)
 .S Y(I)=" Entered: "_$P(ORGMPL("ENTERED"),U)_", by "_$P(ORGMPL("ENTERED"),U,2),I=I+1
"RTN","ORQQPL",43,0)
 .S Y(I)=" Updated: "_ORGMPL("MODIFIED"),I=I+1
"RTN","ORQQPL",44,0)
 .S Y(I)=" ",I=I+1
"RTN","ORQQPL",45,0)
 .;S Y(I)=" Comment: "_$S($G(ORGMPL("COMMENT"))>0:ORGMPL("COMMENT"),1:"")
"RTN","ORQQPL",46,0)
 .I $G(ORGMPL("COMMENT"))>0 D
"RTN","ORQQPL",47,0)
 ..S Y(I)="----------- Comments -----------",I=I+1
"RTN","ORQQPL",48,0)
 ..;F J=ORGMPL("COMMENT"):-1:1  D
"RTN","ORQQPL",49,0)
 ..;.S Y(I)=ORGMPL("COMMENT",J)
"RTN","ORQQPL",50,0)
 ..;.S Y(I)=$P(Y(I),U)_" by "_$P(Y(I),U,2)_": "_$P(Y(I),U,3),I=I+1
"RTN","ORQQPL",51,0)
 ..F J=1:1:ORGMPL("COMMENT")  D
"RTN","ORQQPL",52,0)
 ...S Y(I)=ORGMPL("COMMENT",J)
"RTN","ORQQPL",53,0)
 ...S Y(I)=$P(Y(I),U)_" by "_$P(Y(I),U,2)_": "_$P(Y(I),U,3),I=I+1
"RTN","ORQQPL",54,0)
 .S Y(I)=" ",I=I+1
"RTN","ORQQPL",55,0)
 .D HIST^ORQQPL2(.GMPDT,PROBIEN)
"RTN","ORQQPL",56,0)
 .I $G(GMPDT(0))>0 D
"RTN","ORQQPL",57,0)
 ..S Y(I)="----------- Audit History -----------",I=I+1
"RTN","ORQQPL",58,0)
 ..F J=1:1:GMPDT(0)  S Y(I)=$P(GMPDT(J),U)_":  "_$P(GMPDT(J),U,2),I=I+1
"RTN","ORQQPL",59,0)
 I $L($T(DETAIL^GMPLUTL2))<1 S Y(1)="Problem list not available."
"RTN","ORQQPL",60,0)
 Q
"RTN","ORQQPL",61,0)
HASPROB(ORDFN,ORPROB) ;extrinsic function returns 1^problem text;ICD9 if
"RTN","ORQQPL",62,0)
 ;pt has an active problem which contains any piece of ORPROB
"RTN","ORQQPL",63,0)
 ;ORDFN   patient DFN
"RTN","ORQQPL",64,0)
 ;ORPROB  problems to check vs. active prob list in format: PROB1TEXT;PROB1ICD^PROB2TEXT;PROB2ICD^PROB3...
"RTN","ORQQPL",65,0)
 ;if ICD includes "." an exact match will be sought
"RTN","ORQQPL",66,0)
 ;if not, a match of general ICD category will be sought
"RTN","ORQQPL",67,0)
 ;Note: All ICD codes passed must be preceded with ";"
"RTN","ORQQPL",68,0)
 Q:+$G(ORDFN)<1 "0^Patient not identified."
"RTN","ORQQPL",69,0)
 Q:'$L($G(ORPROB)) "0^Problem not identified."
"RTN","ORQQPL",70,0)
 N ORQAPL,ORQY,ORI,ORJ,ORCNT,ORQPL,ORQICD,ORQRSLT
"RTN","ORQQPL",71,0)
 D LIST(.ORQY,ORDFN,"A")
"RTN","ORQQPL",72,0)
 Q:$P(ORQY(1),U)="" "0^No active problems found."
"RTN","ORQQPL",73,0)
 S ORQRSLT="0^No matching problems found."
"RTN","ORQQPL",74,0)
 S ORCNT=$L(ORPROB,U)
"RTN","ORQQPL",75,0)
 S ORI=0 F  S ORI=$O(ORQY(ORI)) Q:ORI<1  D
"RTN","ORQQPL",76,0)
 .S ORQAPL=ORQY(ORI)
"RTN","ORQQPL",77,0)
 .F ORJ=1:1:ORCNT D
"RTN","ORQQPL",78,0)
 ..S ORQPL=$P($P(ORPROB,U,ORJ),";"),ORQICD=$P($P(ORPROB,U,ORJ),";",2)
"RTN","ORQQPL",79,0)
 ..;if problem text and pt's problem contains problem text passed:
"RTN","ORQQPL",80,0)
 ..I $L(ORQPL),($P(ORQAPL,U,2)[ORQPL) D
"RTN","ORQQPL",81,0)
 ...S ORQRSLT="1^"_$P(ORQAPL,U,2)_";"_$P(ORQAPL,U,4)
"RTN","ORQQPL",82,0)
 ..;
"RTN","ORQQPL",83,0)
 ..;if specific ICD (contains ".") and pt's ICD equals ICD passed:
"RTN","ORQQPL",84,0)
 ..I $L(ORQICD),(ORQICD["."),($P(ORQAPL,U,4)=ORQICD) D
"RTN","ORQQPL",85,0)
 ...S ORQRSLT="1^"_$P(ORQAPL,U,2)_";"_$P(ORQAPL,U,4)
"RTN","ORQQPL",86,0)
 ..;
"RTN","ORQQPL",87,0)
 ..;if non-specific ICD and pt's ICD category equals ICD category passed:
"RTN","ORQQPL",88,0)
 ..I $L(ORQICD),(ORQICD'["."),($P($P(ORQAPL,U,4),".")=ORQICD) D
"RTN","ORQQPL",89,0)
 ...S ORQRSLT="1^"_$P(ORQAPL,U,2)_";"_$P(ORQAPL,U,4)
"RTN","ORQQPL",90,0)
 Q ORQRSLT
"RTN","ORQQPL1")
0^3^B64341442
"RTN","ORQQPL1",1,0)
ORQQPL1 ; ALB/PDR/REV - PROBLEM LIST FOR CPRS GUI ;03/12/02
"RTN","ORQQPL1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,148,173**;Dec 17, 1997
"RTN","ORQQPL1",3,0)
 ;
"RTN","ORQQPL1",4,0)
 ;------------------------- GET PROBLEM FROM LEXICON -------------------
"RTN","ORQQPL1",5,0)
 ;
"RTN","ORQQPL1",6,0)
LEXSRCH(LIST,FROM,N,VIEW,ORDATE) ; Get candidate Problems from LEX file
"RTN","ORQQPL1",7,0)
 N LEX,VAL,VAL1,COD,CIEN,SYS,MAX,NAME,ORLEX25
"RTN","ORQQPL1",8,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORQQPL1",9,0)
 S:'$G(N) N=100
"RTN","ORQQPL1",10,0)
 S:'$L($G(VIEW)) VIEW="PL1"
"RTN","ORQQPL1",11,0)
 S ORLEX25=$$PATCH^XPDUTL("LEX*2.0*25")
"RTN","ORQQPL1",12,0)
 I +ORLEX25 D
"RTN","ORQQPL1",13,0)
 . D CONFIG^LEXSET("GMPL",VIEW,ORDATE)
"RTN","ORQQPL1",14,0)
 . D LOOK^LEXA(FROM,"GMPL",N,"",ORDATE)
"RTN","ORQQPL1",15,0)
 E  D
"RTN","ORQQPL1",16,0)
 . D CONFIG^LEXSET("GMPL",VIEW)
"RTN","ORQQPL1",17,0)
 . D LOOK^LEXA(FROM,"GMPL",N)
"RTN","ORQQPL1",18,0)
 S S=0
"RTN","ORQQPL1",19,0)
 F  S S=$O(LEX("LIST",S)) Q:S<1  D
"RTN","ORQQPL1",20,0)
 . S VAL1=LEX("LIST",S)
"RTN","ORQQPL1",21,0)
 . S COD="",CIEN="",SYS="",NAME=""
"RTN","ORQQPL1",22,0)
 . I $L(VAL1,"ICD-9-CM ")>1 D
"RTN","ORQQPL1",23,0)
 .. S SYS="ICD-9-CM "
"RTN","ORQQPL1",24,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",25,0)
 .. I +ORLEX25 D
"RTN","ORQQPL1",26,0)
 .. . S CIEN=+$$CODEN^ICDCODE(COD,80)
"RTN","ORQQPL1",27,0)
 .. E  D
"RTN","ORQQPL1",28,0)
 .. . S CIEN=$$ICDREC(COD)
"RTN","ORQQPL1",29,0)
 .. S NAME=$P(VAL1," (ICD-9-CM")
"RTN","ORQQPL1",30,0)
 . I $L(VAL1,"CPT-4 ")>1 D
"RTN","ORQQPL1",31,0)
 .. S SYS="CPT-4 "
"RTN","ORQQPL1",32,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",33,0)
 .. I +ORLEX25 D
"RTN","ORQQPL1",34,0)
 .. . S CIEN=$$CODEN^ICPTCOD(COD)
"RTN","ORQQPL1",35,0)
 .. E  D
"RTN","ORQQPL1",36,0)
 .. . S CIEN=$$CPTREC(COD)
"RTN","ORQQPL1",37,0)
 .. S NAME=$P(VAL1," (CPT-4")
"RTN","ORQQPL1",38,0)
 . I $L(VAL1,"DSM-IV ")>1 D
"RTN","ORQQPL1",39,0)
 .. S SYS="DSM-IV "
"RTN","ORQQPL1",40,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",41,0)
 .. I +ORLEX25 D
"RTN","ORQQPL1",42,0)
 .. . S CIEN=$$CODEN^ICDCODE($$ICDONE^LEXU($P(VAL1,U,1),ORDATE),80)
"RTN","ORQQPL1",43,0)
 .. E  D
"RTN","ORQQPL1",44,0)
 .. . S CIEN=$$ICDREC($$ICDONE^LEXU($P(VAL1,U,1)))
"RTN","ORQQPL1",45,0)
 .. S NAME=$P(VAL1," (DSM-IV")
"RTN","ORQQPL1",46,0)
 .. ;
"RTN","ORQQPL1",47,0)
 . I $L(VAL1,"(TITLE 38 ")>1 D
"RTN","ORQQPL1",48,0)
 .. S SYS="TITLE 38 "
"RTN","ORQQPL1",49,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",50,0)
 .. I +ORLEX25 D
"RTN","ORQQPL1",51,0)
 .. . S CIEN=$$CODEN^ICDCODE($$ICDONE^LEXU($P(VAL1,U,1),ORDATE),80)
"RTN","ORQQPL1",52,0)
 .. E  D
"RTN","ORQQPL1",53,0)
 .. . S CIEN=$$ICDREC($$ICDONE^LEXU($P(VAL1,U,1)))
"RTN","ORQQPL1",54,0)
 .. S NAME=$P(VAL1,"(TITLE 38 ")
"RTN","ORQQPL1",55,0)
 .. ;
"RTN","ORQQPL1",56,0)
 . I $L(NAME)=0 S NAME=$P($P(VAL1," (")," *")
"RTN","ORQQPL1",57,0)
 . S VAL=NAME_U_COD_U_CIEN_U_SYS ; ien^.01^icd^icdifn^system
"RTN","ORQQPL1",58,0)
 . S LIST(S)=VAL
"RTN","ORQQPL1",59,0)
 . S MAX=S
"RTN","ORQQPL1",60,0)
 I $G(MAX)'="" S LIST(MAX+1)=$G(LEX("MAT"))
"RTN","ORQQPL1",61,0)
 Q
"RTN","ORQQPL1",62,0)
 ;
"RTN","ORQQPL1",63,0)
ICDREC(COD) ; 
"RTN","ORQQPL1",64,0)
 N CODIEN
"RTN","ORQQPL1",65,0)
 I COD="" Q ""
"RTN","ORQQPL1",66,0)
 S COD=$P($P(COD,U),"/")
"RTN","ORQQPL1",67,0)
 S CODIEN=+$O(^ICD9("AB",COD_" ",0))
"RTN","ORQQPL1",68,0)
 S:CODIEN'>0 CODIEN=+$O(^ICD9("AB",COD_"0 ",0))
"RTN","ORQQPL1",69,0)
 Q CODIEN
"RTN","ORQQPL1",70,0)
 ;Q $O(^ICD9("BA",COD,""))
"RTN","ORQQPL1",71,0)
 ;
"RTN","ORQQPL1",72,0)
CPTREC(COD) ; 
"RTN","ORQQPL1",73,0)
 I COD="" Q ""
"RTN","ORQQPL1",74,0)
 Q $O(^ICPT("BA",COD,""))
"RTN","ORQQPL1",75,0)
 ;
"RTN","ORQQPL1",76,0)
EDLOAD(RETURN,DA,GMPROV,GMPVAMC) ; LOAD  EDIT ARRAYS
"RTN","ORQQPL1",77,0)
 ; DA=problem IFN
"RTN","ORQQPL1",78,0)
 N I,GMPFLD,GMPORIG,GMPL
"RTN","ORQQPL1",79,0)
 D GETFLDS^GMPLEDT3(DA)
"RTN","ORQQPL1",80,0)
 S I=0
"RTN","ORQQPL1",81,0)
 D LOADFLDS(.RETURN,"GMPFLD","NEW",.I)
"RTN","ORQQPL1",82,0)
 D LOADFLDS(.RETURN,"GMPORIG","ORG",.I)
"RTN","ORQQPL1",83,0)
 K GMPFLD,GMPORIG,GMPL  ; should not have to do this
"RTN","ORQQPL1",84,0)
 Q
"RTN","ORQQPL1",85,0)
 ;
"RTN","ORQQPL1",86,0)
LOADFLDS(RETURN,NAM,TYP,I) ; LOAD FIELDS FOR TYPE OF ARRAY
"RTN","ORQQPL1",87,0)
 N S,V,CVP,PN,PID
"RTN","ORQQPL1",88,0)
 S S="",V=$C(254)
"RTN","ORQQPL1",89,0)
 F  S S=$O(@NAM@(S)) Q:S=10  D
"RTN","ORQQPL1",90,0)
 . S RETURN(I)=TYP_V_S_V_@NAM@(S)
"RTN","ORQQPL1",91,0)
 . S I=I+1
"RTN","ORQQPL1",92,0)
 S S=""
"RTN","ORQQPL1",93,0)
 F  S S=$O(@NAM@(10,S)) Q:S=""  D
"RTN","ORQQPL1",94,0)
 . S CVP=@NAM@(10,S)
"RTN","ORQQPL1",95,0)
 . S PN="" ; provider name
"RTN","ORQQPL1",96,0)
 . S PID=$P(CVP,U,6) ; provider id
"RTN","ORQQPL1",97,0)
 . I PID'=""  S PN=$$GET1^DIQ(200,PID,.01) ; get provider name
"RTN","ORQQPL1",98,0)
 . S RETURN(I)=TYP_V_"10,"_S_V_CVP_U_PN
"RTN","ORQQPL1",99,0)
 . S I=I+1
"RTN","ORQQPL1",100,0)
 Q
"RTN","ORQQPL1",101,0)
 ;
"RTN","ORQQPL1",102,0)
EDSAVE(RETURN,GMPIFN,GMPROV,GMPVAMC,UT,EDARRAY) ; SAVE EDITED RES
"RTN","ORQQPL1",103,0)
 ; RETURN - boolean, 1 success, 0 failure
"RTN","ORQQPL1",104,0)
 ; EDARRAY - array used for indirect sets of GMPORIG() and GMPFLDS()
"RTN","ORQQPL1",105,0)
 ;
"RTN","ORQQPL1",106,0)
 N GMPFLD,GMPORIG,S,GMPLUSER
"RTN","ORQQPL1",107,0)
 S RETURN=1 ; initialize for success
"RTN","ORQQPL1",108,0)
 I UT S GMPLUSER=1
"RTN","ORQQPL1",109,0)
 ;
"RTN","ORQQPL1",110,0)
 ;S GMPLUSER=1
"RTN","ORQQPL1",111,0)
 S S=""
"RTN","ORQQPL1",112,0)
 F  S S=$O(EDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",113,0)
 . S @EDARRAY(S)
"RTN","ORQQPL1",114,0)
 I $D(GMPFLD(10,"NEW"))>9 D  I 'RETURN Q  ; Bail Out if no lock
"RTN","ORQQPL1",115,0)
 . L +^AUPNPROB(GMPIFN,11):10  ; given bogus nature of this lock, should be able to get
"RTN","ORQQPL1",116,0)
 . I '$T S RETURN=0
"RTN","ORQQPL1",117,0)
 ;
"RTN","ORQQPL1",118,0)
 D EN^GMPLSAVE  ; save the data
"RTN","ORQQPL1",119,0)
 K GMPFLD,GMPORIG
"RTN","ORQQPL1",120,0)
 ;
"RTN","ORQQPL1",121,0)
 L -^AUPNPROB(GMPIFN,11)  ; free this instance of lock (in case it was set)
"RTN","ORQQPL1",122,0)
 S RETURN=1
"RTN","ORQQPL1",123,0)
 Q
"RTN","ORQQPL1",124,0)
 ;
"RTN","ORQQPL1",125,0)
UPDATE(ORRETURN,UPDARRAY) ; UPDATE A PROBLEM RECORD
"RTN","ORQQPL1",126,0)
 ; Does essentially same job as EDSAVE above, however does not handle edits to comments
"RTN","ORQQPL1",127,0)
 ; or addition of multiple comments. 
"RTN","ORQQPL1",128,0)
 ; Use initially just for status updates.
"RTN","ORQQPL1",129,0)
 ;
"RTN","ORQQPL1",130,0)
 N S,GMPL,GMPORIG ; last 2 vars created in nested call
"RTN","ORQQPL1",131,0)
 S S=""
"RTN","ORQQPL1",132,0)
 F  S S=$O(UPDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",133,0)
 . S @UPDARRAY(S)
"RTN","ORQQPL1",134,0)
 D UPDATE^GMPLUTL(.ORARRAY,.ORRETURN)
"RTN","ORQQPL1",135,0)
 K ORARRAY
"RTN","ORQQPL1",136,0)
 ; broker wont pick up root node RETURN
"RTN","ORQQPL1",137,0)
 S ORRETURN(1)=ORRETURN(0) ; error text
"RTN","ORQQPL1",138,0)
 S ORRETURN(0)=ORRETURN ; gmpdfn
"RTN","ORQQPL1",139,0)
 I ORRETURN(0)=""  S ORRETURN=1 ; insurance ? need
"RTN","ORQQPL1",140,0)
 Q
"RTN","ORQQPL1",141,0)
 ;
"RTN","ORQQPL1",142,0)
ADDSAVE(RETURN,GMPDFN,GMPROV,GMPVAMC,ADDARRAY) ; SAVE NEW RECORD
"RTN","ORQQPL1",143,0)
 ; RETURN - Problem IFN if success, 0 otherwise
"RTN","ORQQPL1",144,0)
 ; ADDARRAY - array used for indirect sets of  GMPFLDS()
"RTN","ORQQPL1",145,0)
 ;
"RTN","ORQQPL1",146,0)
 N DA,GMPFLD,GMPORIG,S
"RTN","ORQQPL1",147,0)
 S RETURN=0 ;
"RTN","ORQQPL1",148,0)
 L +^AUPNPROB(0):10
"RTN","ORQQPL1",149,0)
 Q:'$T  ; bail out if no lock
"RTN","ORQQPL1",150,0)
 ;
"RTN","ORQQPL1",151,0)
 S S=""
"RTN","ORQQPL1",152,0)
 F  S S=$O(ADDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",153,0)
 . S @ADDARRAY(S)
"RTN","ORQQPL1",154,0)
 ;
"RTN","ORQQPL1",155,0)
 D NEW^GMPLSAVE
"RTN","ORQQPL1",156,0)
 ;
"RTN","ORQQPL1",157,0)
 S RETURN=DA
"RTN","ORQQPL1",158,0)
 ;
"RTN","ORQQPL1",159,0)
 L -^AUPNPROB(0)
"RTN","ORQQPL1",160,0)
 S RETURN=1
"RTN","ORQQPL1",161,0)
 Q
"RTN","ORQQPL1",162,0)
 ;
"RTN","ORQQPL1",163,0)
INITUSER(RETURN,ORDUZ) ; INITIALIZE FOR NEW USER
"RTN","ORQQPL1",164,0)
 ; taken from INIT^GMPLMGR
"RTN","ORQQPL1",165,0)
 ; leave GMPLUSER on symbol table - is evaluated in EDITSAVE
"RTN","ORQQPL1",166,0)
 ; 
"RTN","ORQQPL1",167,0)
 N X,PV,CTXT,GMPLPROV
"RTN","ORQQPL1",168,0)
 S GMPLUSER=$$CLINUSER(DUZ)
"RTN","ORQQPL1",169,0)
 S CTXT=$$GET^XPAR("ALL","ORCH CONTEXT PROBLEMS",1)
"RTN","ORQQPL1",170,0)
 S X=$G(^GMPL(125.99,1,0)) ; IN1+6^GMPLMGR
"RTN","ORQQPL1",171,0)
 S RETURN(0)=GMPLUSER ;  problem list user, or other user
"RTN","ORQQPL1",172,0)
 S RETURN(1)=$$VIEW^GMPLX1(DUZ) ; GMPLVIEW("VIEW") - users default view
"RTN","ORQQPL1",173,0)
 S RETURN(2)=+$P(X,U,2) ; verify transcribed problems
"RTN","ORQQPL1",174,0)
 S RETURN(3)=+$P(X,U,3) ; prompt for chart copy
"RTN","ORQQPL1",175,0)
 S RETURN(4)=+$P(X,U,4) ; use lexicon
"RTN","ORQQPL1",176,0)
 S RETURN(5)=$S($P(X,U,5)="R":1,1:0) ; chron or reverse chron listing
"RTN","ORQQPL1",177,0)
 S RETURN(6)=$S($P($G(CTXT),";",3)'="":$P($G(CTXT),";",3),1:"A")
"RTN","ORQQPL1",178,0)
 S GMPLPROV=$P($G(CTXT),";",5)
"RTN","ORQQPL1",179,0)
 I +GMPLPROV>0,$D(^VA(200,GMPLPROV)) D
"RTN","ORQQPL1",180,0)
 . S RETURN(7)=GMPLPROV_U_$P(^VA(200,GMPLPROV,0),U)
"RTN","ORQQPL1",181,0)
 E  S RETURN(7)="0^All"
"RTN","ORQQPL1",182,0)
 S RETURN(8)=$$SERVICE^GMPLX1(DUZ) ; user's service/section
"RTN","ORQQPL1",183,0)
 ; Guessing from what I see in the data that $$VIEW^GMPLX1 actually returns a composite
"RTN","ORQQPL1",184,0)
 ; of default view (in/out patient)/(c1/c2... if out patient i.e. GMPLVIEW("CLIN")) or
"RTN","ORQQPL1",185,0)
 ;                                                      /(s1/s2... if in patient i.e. GMPLVIEW("SERV"))
"RTN","ORQQPL1",186,0)
 ; Going with this assumption for now:
"RTN","ORQQPL1",187,0)
 I $L(RETURN(1),"/")>1 D
"RTN","ORQQPL1",188,0)
 . S PV=RETURN(1)
"RTN","ORQQPL1",189,0)
 . S RETURN(1)=$P(PV,"/")
"RTN","ORQQPL1",190,0)
 . I RETURN(1)="C" S GMPLVIEW("CLIN")=$P(PV,"/",2,99)
"RTN","ORQQPL1",191,0)
 . I RETURN(1)="S" S GMPLVIEW("SERV")=$P(PV,"/",2,99)
"RTN","ORQQPL1",192,0)
 S RETURN(9)=$G(GMPLVIEW("SERV")) ; ??? Where from - see tech doc
"RTN","ORQQPL1",193,0)
 S RETURN(10)=$G(GMPLVIEW("CLIN")) ; ??? Where from - see tech doc
"RTN","ORQQPL1",194,0)
 S RETURN(11)=""
"RTN","ORQQPL1",195,0)
 S RETURN(12)=+$P($G(CTXT),";",4)    ; should comments display?
"RTN","ORQQPL1",196,0)
 K GMPLVIEW
"RTN","ORQQPL1",197,0)
 Q
"RTN","ORQQPL1",198,0)
 ;
"RTN","ORQQPL1",199,0)
CLINUSER(ORDUZ) ;is this a clinical user?
"RTN","ORQQPL1",200,0)
 N ORUSER
"RTN","ORQQPL1",201,0)
 S ORUSER=0
"RTN","ORQQPL1",202,0)
 I $D(^XUSEC("ORES",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",203,0)
 I $D(^XUSEC("ORELSE",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",204,0)
 I $D(^XUSEC("PROVIDER",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",205,0)
 Q ORUSER
"RTN","ORQQPL1",206,0)
 ;
"RTN","ORQQPL1",207,0)
INITPT(RETURN,DFN) ; GET PATIENT PARAMETERS
"RTN","ORQQPL1",208,0)
 Q:+$G(DFN)=0
"RTN","ORQQPL1",209,0)
 N GMPSC,GMPAGTOR,GMPION,GMPGULF,GMPHNC,GMPMST
"RTN","ORQQPL1",210,0)
 ;
"RTN","ORQQPL1",211,0)
 S RETURN(0)=DUZ(2) ; facility #
"RTN","ORQQPL1",212,0)
 D DEM^VADPT ; get death indicator
"RTN","ORQQPL1",213,0)
 S RETURN(1)=$G(VADM(6)) ; death indicator
"RTN","ORQQPL1",214,0)
 D VADPT^GMPLX1(DFN) ; get eligibilities
"RTN","ORQQPL1",215,0)
 S RETURN(2)=$P(GMPSC,U) ; service connected
"RTN","ORQQPL1",216,0)
 S RETURN(3)=$G(GMPAGTOR) ; agent orange exposure
"RTN","ORQQPL1",217,0)
 S RETURN(4)=$G(GMPION) ; ionizing radiation exposure
"RTN","ORQQPL1",218,0)
 S RETURN(5)=$G(GMPGULF) ; gulf war exposure
"RTN","ORQQPL1",219,0)
 S RETURN(6)=VA("BID") ; need this to reconstitute GMPDFN on return
"RTN","ORQQPL1",220,0)
 S RETURN(7)=$G(GMPHNC) ; head/neck cancer
"RTN","ORQQPL1",221,0)
 S RETURN(8)=$G(GMPMST) ; MST
"RTN","ORQQPL1",222,0)
 Q
"RTN","ORQQPL1",223,0)
 ;
"RTN","ORQQPL1",224,0)
PROVSRCH(LST,FLAG,N,FROM,PART) ; Get candidate Rroviders from person file
"RTN","ORQQPL1",225,0)
 N LV,NS,RV,IEN
"RTN","ORQQPL1",226,0)
 S RV=$NAME(LV("DILIST","ID"))
"RTN","ORQQPL1",227,0)
 IF +$G(N)=0 S N=50
"RTN","ORQQPL1",228,0)
 S FLAG=$G(FLAG),N=$G(N),FROM=$G(FROM),PART=$G(PART)
"RTN","ORQQPL1",229,0)
 D LIST^DIC(200,"",".01;1",FLAG,N,FROM,PART,"","","","LV")
"RTN","ORQQPL1",230,0)
 S NS=""
"RTN","ORQQPL1",231,0)
 F  S NS=$O(LV("DILIST",1,NS)) Q:NS=""  D
"RTN","ORQQPL1",232,0)
 . S IEN=""
"RTN","ORQQPL1",233,0)
 . S IEN=$O(^VA(200,"B",@RV@(NS,.01),IEN)) ; compliments of PROV^ORQPTQ
"RTN","ORQQPL1",234,0)
 . S LST(NS)=IEN_U_@RV@(NS,.01)  ; initials_U_@RV@(NS,1)
"RTN","ORQQPL1",235,0)
 Q
"RTN","ORQQPL1",236,0)
 ;
"RTN","ORQQPL1",237,0)
CLINSRCH(Y,X) ; Get LIST OF CLINICS
"RTN","ORQQPL1",238,0)
 ; Note: This comes from CLIN^ORQPTQ2, where it was commented out in place of 
"RTN","ORQQPL1",239,0)
 ; a call to ^XPAR. I would have just used CLIN^ORQPTQ2, but it didn't work - at
"RTN","ORQQPL1",240,0)
 ; least on SLC OEX directory.
"RTN","ORQQPL1",241,0)
 ; X has no purpose other than to satisfy apparent rpc and tcallv requirement for args
"RTN","ORQQPL1",242,0)
 N I,NAME,IEN
"RTN","ORQQPL1",243,0)
 S I=1,IEN=0,NAME=""
"RTN","ORQQPL1",244,0)
 ;access to SC global granted under DBIA #518:
"RTN","ORQQPL1",245,0)
 F  S NAME=$O(^SC("B",NAME)) Q:NAME=""  S IEN=$O(^(NAME,0)) D
"RTN","ORQQPL1",246,0)
 . I $P(^SC(IEN,0),"^",3)="C" S Y(I)=IEN_"^"_NAME,I=I+1
"RTN","ORQQPL1",247,0)
 Q
"RTN","ORQQPL1",248,0)
 ;
"RTN","ORQQPL1",249,0)
SRVCSRCH(Y,FROM,DIR,ALL) ; GET LIST OF SERVICES
"RTN","ORQQPL1",250,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORQQPL1",251,0)
 F  Q:I=CNT  S FROM=$O(^DIC(49,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORQQPL1",252,0)
 . S IEN=$O(^DIC(49,"B",FROM,0)) I '$G(ALL),$P(^DIC(49,IEN,0),U,9)'="C" Q
"RTN","ORQQPL1",253,0)
 . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORQQPL1",254,0)
 Q
"RTN","ORQQPL1",255,0)
 ;
"RTN","ORQQPL1",256,0)
DUP(Y,DFN,TERM,TEXT) ;Check for duplicate problem
"RTN","ORQQPL1",257,0)
 S Y=$$DUPL^GMPLX(DFN,TERM,TEXT) Q:+Y=0
"RTN","ORQQPL1",258,0)
 I $P(^AUPNPROB(Y,1),U,2)="H" S Y=0 Q
"RTN","ORQQPL1",259,0)
 S Y=Y_U_$P(^AUPNPROB(Y,0),U,12)
"RTN","ORQQPL1",260,0)
 Q
"RTN","ORQQPL3")
0^4^B53234730
"RTN","ORQQPL3",1,0)
ORQQPL3 ; ALB/PDR/REV ; Problem List RPC's ; 8-OCT-1998 09:08:49.29
"RTN","ORQQPL3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,148,173**;Dec 17, 1997
"RTN","ORQQPL3",3,0)
 ;
"RTN","ORQQPL3",4,0)
 ;---------------- LIST PATIENT PROBLEMS ------------------------
"RTN","ORQQPL3",5,0)
 ;
"RTN","ORQQPL3",6,0)
PROBL(ROOT,DFN,CONTEXT)        ;  GET LIST OF PATIENT PROBLEMS
"RTN","ORQQPL3",7,0)
 N DIWL,DIWR,DIWF
"RTN","ORQQPL3",8,0)
 N ST,ORI,ORX
"RTN","ORQQPL3",9,0)
 S (LCNT,NUM)=0
"RTN","ORQQPL3",10,0)
 S DIWL=1,DIWR=48,DIWF="C48"
"RTN","ORQQPL3",11,0)
 S CONTEXT=";;"_$G(CONTEXT)
"RTN","ORQQPL3",12,0)
 I CONTEXT=";;" S CONTEXT=";;A"
"RTN","ORQQPL3",13,0)
 S ST=$P(CONTEXT,";",3)
"RTN","ORQQPL3",14,0)
 ;
"RTN","ORQQPL3",15,0)
 I ST="R" D DELLIST(.ROOT,+DFN) ; show deleted only
"RTN","ORQQPL3",16,0)
 I ST'="R"  D LIST(.ROOT,+DFN,ST) ; show others - don't trust ELSE here
"RTN","ORQQPL3",17,0)
 ;
"RTN","ORQQPL3",18,0)
 I ROOT(0)<1 D
"RTN","ORQQPL3",19,0)
 . S LCNT=1
"RTN","ORQQPL3",20,0)
 . S ROOT(1)="     "_$$PAD^ORCHTAB("No data available.",49)_"|"
"RTN","ORQQPL3",21,0)
 Q
"RTN","ORQQPL3",22,0)
 ;
"RTN","ORQQPL3",23,0)
 ;
"RTN","ORQQPL3",24,0)
LIST(GMPL,GMPDFN,GMPSTAT)       ; -- Returns list of problems for patient GMPDFN
"RTN","ORQQPL3",25,0)
 ;    in GMPL(#)=ifn^status^description^ICD^onset^last modified^SC^SpExp^Condition^Loc^
"RTN","ORQQPL3",26,0)
 ;                          loc.type^prov^service
"RTN","ORQQPL3",27,0)
 ;     & GMPL(0)=number of problems returned
"RTN","ORQQPL3",28,0)
 ; This is virtually same as LIST^GMPLUTL2 except that it appends the 
"RTN","ORQQPL3",29,0)
 ; condition - T)ranscribed or P)ermanent,location,loc type,provider, service.
"RTN","ORQQPL3",30,0)
 ;
"RTN","ORQQPL3",31,0)
 N I,IFN,CNT,GMPL0,GMPL1,SP,ST,NUM,ONSET,ICD,LASTMOD,PRIO,DTREC
"RTN","ORQQPL3",32,0)
 N SC,ORLIST,ORVIEW,GMPARAM,ORTOTAL,LIN,LOC,LT,PROV,SERV,HASCMT
"RTN","ORQQPL3",33,0)
 N SCCOND,AO,IR,ENV,HNC,MST,ORICD186,INACT
"RTN","ORQQPL3",34,0)
 Q:$G(GMPDFN)'>0
"RTN","ORQQPL3",35,0)
 S CNT=0,SP=""
"RTN","ORQQPL3",36,0)
 S GMPARAM("QUIET")=1
"RTN","ORQQPL3",37,0)
 S GMPARAM("REV")=$P($G(^GMPL(125.99,1,0)),U,5)="R"
"RTN","ORQQPL3",38,0)
 S ORVIEW("ACT")=GMPSTAT
"RTN","ORQQPL3",39,0)
 S ORVIEW("PROV")=0
"RTN","ORQQPL3",40,0)
 S ORVIEW("VIEW")=""
"RTN","ORQQPL3",41,0)
 S ORICD186=$$PATCH^XPDUTL("ICD*18.0*6")
"RTN","ORQQPL3",42,0)
 ;
"RTN","ORQQPL3",43,0)
 D GETPLIST^GMPLMGR1(.ORLIST,.ORTOTAL,.ORVIEW)
"RTN","ORQQPL3",44,0)
 ;
"RTN","ORQQPL3",45,0)
 F NUM=0:0 S NUM=$O(ORLIST(NUM)) Q:NUM'>0  D
"RTN","ORQQPL3",46,0)
 . S IFN=+ORLIST(NUM) Q:IFN'>0
"RTN","ORQQPL3",47,0)
 . S INACT=""
"RTN","ORQQPL3",48,0)
 . S GMPL0=$G(^AUPNPROB(IFN,0))
"RTN","ORQQPL3",49,0)
 . S GMPL1=$G(^AUPNPROB(IFN,1))
"RTN","ORQQPL3",50,0)
 . S HASCMT=($D(^AUPNPROB(IFN,11,0))>0)
"RTN","ORQQPL3",51,0)
 . S CNT=CNT+1
"RTN","ORQQPL3",52,0)
 . I +ORICD186 D
"RTN","ORQQPL3",53,0)
 . . S ICD=$$CODEC^ICDCODE(+GMPL0)
"RTN","ORQQPL3",54,0)
 . . I '+$$STATCHK^ICDAPIU(ICD,DT) S INACT="#"
"RTN","ORQQPL3",55,0)
 . E  D
"RTN","ORQQPL3",56,0)
 . . S ICD=$P($G(^ICD9(+GMPL0,0)),U)
"RTN","ORQQPL3",57,0)
 . S LASTMOD=$P(GMPL0,U,3)
"RTN","ORQQPL3",58,0)
 . S ST=$P(GMPL0,U,12)
"RTN","ORQQPL3",59,0)
 . S ONSET=$P(GMPL0,U,13)
"RTN","ORQQPL3",60,0)
 . S SC=$S(+$P(GMPL1,U,10):"SC",$P(GMPL1,U,10)=0:"NSC",1:"")
"RTN","ORQQPL3",61,0)
 . S AO=$S(+$P(GMPL1,U,11):"/AO",1:"")
"RTN","ORQQPL3",62,0)
 . S IR=$S(+$P(GMPL1,U,12):"/IR",1:"")
"RTN","ORQQPL3",63,0)
 . S ENV=$S(+$P(GMPL1,U,13):"/EC",1:"")
"RTN","ORQQPL3",64,0)
 . S HNC=$S(+$P(GMPL1,U,15):"/HNC",1:"")
"RTN","ORQQPL3",65,0)
 . S MST=$S(+$P(GMPL1,U,16):"/MST",1:"")
"RTN","ORQQPL3",66,0)
 . S SCCOND=SC_AO_IR_ENV_HNC_MST
"RTN","ORQQPL3",67,0)
 . S LOC=$P(GMPL1,U,8)
"RTN","ORQQPL3",68,0)
 . S DTREC=$P(GMPL1,U,9)
"RTN","ORQQPL3",69,0)
 . S LT=""
"RTN","ORQQPL3",70,0)
 . I LOC'="" S LT=$P($G(^SC(LOC,0)),"^",3),LOC=LOC_";"_$P($G(^SC(LOC,0)),U,1)
"RTN","ORQQPL3",71,0)
 . S PROV=$P(GMPL1,U,5) ; responsible provider
"RTN","ORQQPL3",72,0)
 . I PROV'="" S PROV=PROV_";"_$P($G(^VA(200,PROV,0)),U,1)
"RTN","ORQQPL3",73,0)
 . S SERV=$P(GMPL1,U,6)
"RTN","ORQQPL3",74,0)
 . I SERV=0 S SERV="" ; not sure how it gets set to 0, but need consistency in GUI
"RTN","ORQQPL3",75,0)
 . I SERV'="" S SERV=SERV_";"_$P($G(^DIC(49,SERV,0)),U,1)
"RTN","ORQQPL3",76,0)
 . S SP=""
"RTN","ORQQPL3",77,0)
 . F I=11,12,13 S:$P(GMPL1,U,I) SP=SP_$S(I=11:"A",I=12:"I",1:"P")
"RTN","ORQQPL3",78,0)
 . S PRIO=$P(GMPL1,U,14)
"RTN","ORQQPL3",79,0)
 . S LIN=IFN_U_ST_U_$$PROBTEXT^GMPLX(IFN)_U_ICD_U_ONSET
"RTN","ORQQPL3",80,0)
 . S LIN=LIN_U_LASTMOD_U_SC_U_SP_U_$P(GMPL1,U,2)
"RTN","ORQQPL3",81,0)
 . S LIN=LIN_U_LOC_U_LT_U_PROV_U_SERV_U_PRIO_U_HASCMT_U_DTREC_U_SCCOND_U_INACT
"RTN","ORQQPL3",82,0)
 . S GMPL(CNT)=LIN
"RTN","ORQQPL3",83,0)
 S GMPL(0)=CNT
"RTN","ORQQPL3",84,0)
 Q
"RTN","ORQQPL3",85,0)
 ;
"RTN","ORQQPL3",86,0)
 ;
"RTN","ORQQPL3",87,0)
 ;------------------------------------- GET LIST OF DELETED PROBLEMS -----------------------------
"RTN","ORQQPL3",88,0)
 ;
"RTN","ORQQPL3",89,0)
DELLIST(RETURN,GMPDFN) ; GET LIST OF DELETED PROBLEMS
"RTN","ORQQPL3",90,0)
 ; see GETPLIST^GMPLMGR1 and LIST^GMPUTL2
"RTN","ORQQPL3",91,0)
 N S,IFN,I,L0,L1,ST,TXT,ICD,ONSET,MOD,SC,SP,LOC,LT,PROV,SERV,PRIO,HASCMT,DTREC
"RTN","ORQQPL3",92,0)
 N SCCOND,AO,IR,ENV,HNC,MST,ORICD186,INACT
"RTN","ORQQPL3",93,0)
 S I=0,S=""
"RTN","ORQQPL3",94,0)
 S ORICD186=$$PATCH^XPDUTL("ICD*18.0*6")
"RTN","ORQQPL3",95,0)
 F  S S=$O(^AUPNPROB("ACTIVE",GMPDFN,S)) Q:S=""  D
"RTN","ORQQPL3",96,0)
 . S IFN=""
"RTN","ORQQPL3",97,0)
 . F  S IFN=$O(^AUPNPROB("ACTIVE",+GMPDFN,S,IFN)) Q:IFN=""  D
"RTN","ORQQPL3",98,0)
 .. I $P($G(^AUPNPROB(IFN,1)),U,2)="H" D
"RTN","ORQQPL3",99,0)
 ... S L0=$G(^AUPNPROB(IFN,0))
"RTN","ORQQPL3",100,0)
 ... Q:L0=""
"RTN","ORQQPL3",101,0)
 ... S INACT=""
"RTN","ORQQPL3",102,0)
 ... S L1=$G(^AUPNPROB(IFN,1))
"RTN","ORQQPL3",103,0)
 ... S ST=$P(L0,U,12)
"RTN","ORQQPL3",104,0)
 ... S TXT=$$PROBTEXT^GMPLX(IFN)
"RTN","ORQQPL3",105,0)
 ... I +ORICD186 D
"RTN","ORQQPL3",106,0)
 ... . S ICD=$$CODEC^ICDCODE(+L0)
"RTN","ORQQPL3",107,0)
 ... . I '+$$STATCHK^ICDAPIU(ICD,DT) S INACT="#"
"RTN","ORQQPL3",108,0)
 ... E  D
"RTN","ORQQPL3",109,0)
 ... . S ICD=$P($G(^ICD9(+L0,0)),U)
"RTN","ORQQPL3",110,0)
 ... S ONSET=$P(L0,U,13)
"RTN","ORQQPL3",111,0)
 ... S MOD=$P(L0,U,3)
"RTN","ORQQPL3",112,0)
 ... S SC=$S(+$P(L1,U,10):"SC",$P(L1,U,10)=0:"NSC",1:"")
"RTN","ORQQPL3",113,0)
 ... S AO=$S(+$P(L1,U,11):"/AO",1:"")
"RTN","ORQQPL3",114,0)
 ... S IR=$S(+$P(L1,U,12):"/IR",1:"")
"RTN","ORQQPL3",115,0)
 ... S ENV=$S(+$P(L1,U,13):"/EC",1:"")
"RTN","ORQQPL3",116,0)
 ... S HNC=$S(+$P(L1,U,15):"/HNC",1:"")
"RTN","ORQQPL3",117,0)
 ... S MST=$S(+$P(L1,U,16):"/MST",1:"")
"RTN","ORQQPL3",118,0)
 ... S SCCOND=SC_AO_IR_ENV_HNC_MST
"RTN","ORQQPL3",119,0)
 ... S SP=$$GETSP
"RTN","ORQQPL3",120,0)
 ... S LOC=$P(L1,U,8)
"RTN","ORQQPL3",121,0)
 ... S LT=""
"RTN","ORQQPL3",122,0)
 ... I LOC'="" S LT=$P($G(^SC(LOC,0)),"^",3)
"RTN","ORQQPL3",123,0)
 ... S PROV=$P(L1,U,5) ; responsible provider
"RTN","ORQQPL3",124,0)
 ... S SERV=$P(L1,U,6)
"RTN","ORQQPL3",125,0)
 ... S PRIO=$P(L1,U,14)
"RTN","ORQQPL3",126,0)
 ... S HASCMT=($D(^AUPNPROB(IFN,11,0))>0)
"RTN","ORQQPL3",127,0)
 ... S DTREC=$P(L1,U,9)
"RTN","ORQQPL3",128,0)
 ... S I=I+1
"RTN","ORQQPL3",129,0)
 ... S RETURN(I)=IFN_U_ST_U_TXT_U_ICD_U_ONSET
"RTN","ORQQPL3",130,0)
 ... S RETURN(I)=RETURN(I)_U_MOD_U_SC_U_SP_U_$P(L1,U,2)
"RTN","ORQQPL3",131,0)
 ... S RETURN(I)=RETURN(I)_U_LOC_U_LT_U_PROV_U_SERV
"RTN","ORQQPL3",132,0)
 ... S RETURN(I)=RETURN(I)_U_PRIO_U_HASCMT_U_DTREC_U_SCCOND_U_INACT
"RTN","ORQQPL3",133,0)
 S RETURN(0)=I
"RTN","ORQQPL3",134,0)
 Q
"RTN","ORQQPL3",135,0)
 ;
"RTN","ORQQPL3",136,0)
GETSP() ; GET EXPOSURES
"RTN","ORQQPL3",137,0)
 N I
"RTN","ORQQPL3",138,0)
 S SP=""
"RTN","ORQQPL3",139,0)
 F I=11,12,13 S:$P(L1,U,I) SP=SP_$S(I=11:"A",I=12:"I",1:"P")
"RTN","ORQQPL3",140,0)
 Q SP
"RTN","ORQQPL3",141,0)
 ;
"RTN","ORQQPL3",142,0)
 ; adapted from ^GMPLBLD3 ;9/96
"RTN","ORQQPL3",143,0)
 ;
"RTN","ORQQPL3",144,0)
 ; ----------------------- GET USER PROBLEM CATEGORIES --------------
"RTN","ORQQPL3",145,0)
 ;
"RTN","ORQQPL3",146,0)
CAT(TMP,ORDUZ,CLIN) ; Get user category list
"RTN","ORQQPL3",147,0)
 N GSEQ,GCNT,GROUP,HDR,IFN,LCNT,ITEM,TG,GMPLSLST
"RTN","ORQQPL3",148,0)
 ; S TG=$NAME(^TMP("GMPLMENU",$J)) ; put list in global for testing
"RTN","ORQQPL3",149,0)
 S TG=$NAME(TMP) ; put list in local
"RTN","ORQQPL3",150,0)
 K @TG
"RTN","ORQQPL3",151,0)
 S (GSEQ,GCNT,LCNT)=0
"RTN","ORQQPL3",152,0)
 ;
"RTN","ORQQPL3",153,0)
 S GMPLSLST=$$GETUSLST(DUZ,CLIN)  ; get approp list for user
"RTN","ORQQPL3",154,0)
 ; Build multiple of category\problems
"RTN","ORQQPL3",155,0)
 ; Iterate categories
"RTN","ORQQPL3",156,0)
 F  S GSEQ=$O(^GMPL(125.1,"C",+GMPLSLST,GSEQ)) Q:GSEQ'>0  D
"RTN","ORQQPL3",157,0)
 . S IFN=$O(^GMPL(125.1,"C",+GMPLSLST,GSEQ,0)) Q:IFN'>0
"RTN","ORQQPL3",158,0)
 . S ITEM=$G(^GMPL(125.1,IFN,0))
"RTN","ORQQPL3",159,0)
 . S GROUP=+$P(ITEM,U,3)
"RTN","ORQQPL3",160,0)
 . S HDR=GROUP_U_$P(ITEM,U,4,5)
"RTN","ORQQPL3",161,0)
 . S GCNT=GCNT+1
"RTN","ORQQPL3",162,0)
 . S @TG@(GCNT)=HDR ; put category into temp global
"RTN","ORQQPL3",163,0)
 Q
"RTN","ORQQPL3",164,0)
 ;
"RTN","ORQQPL3",165,0)
GETUSLST(ORDUZ,CLIN) ; GET AN APPROPRIATE CATEGORY LIST FOR THE USER
"RTN","ORQQPL3",166,0)
 N GMPLSLST
"RTN","ORQQPL3",167,0)
 S GMPLSLST=$P($G(^VA(200,DUZ,125)),U,2)
"RTN","ORQQPL3",168,0)
 ;I 'GMPLSLST D
"RTN","ORQQPL3",169,0)
 I 'GMPLSLST,CLIN,$D(^GMPL(125,"C",+CLIN)) S GMPLSLST=$O(^(+CLIN,0))
"RTN","ORQQPL3",170,0)
 ;. S GMPLSLST=$O(^VA(200,DUZ,+CLIN,0))  ;$O(^(+CLIN,0))
"RTN","ORQQPL3",171,0)
 Q GMPLSLST
"RTN","ORQQPL3",172,0)
 ;
"RTN","ORQQPL3",173,0)
 ;----------------------- USER PROBLEM LIST --------------------------
"RTN","ORQQPL3",174,0)
 ;
"RTN","ORQQPL3",175,0)
PROB(TMP,GROUP) ; Get user problem list for given group
"RTN","ORQQPL3",176,0)
 N PSEQ,PCNT,IFN,ITEM,TG,CODE,TEXT,ORICD186
"RTN","ORQQPL3",177,0)
 ; S TG=$NAME(^TMP("GMPLMENU",$J)) ; put list in global for testing
"RTN","ORQQPL3",178,0)
 S TG=$NAME(TMP) ; put list in local
"RTN","ORQQPL3",179,0)
 K @TG
"RTN","ORQQPL3",180,0)
 S LCNT=0
"RTN","ORQQPL3",181,0)
 S ORICD186=$$PATCH^XPDUTL("ICD*18.0*6")
"RTN","ORQQPL3",182,0)
 ;
"RTN","ORQQPL3",183,0)
 ; iterate through problems in category
"RTN","ORQQPL3",184,0)
 S (PSEQ,PCNT)=0
"RTN","ORQQPL3",185,0)
 F  S PSEQ=$O(^GMPL(125.12,"C",GROUP,PSEQ)) Q:PSEQ'>0  D
"RTN","ORQQPL3",186,0)
 . S IFN=$O(^GMPL(125.12,"C",GROUP,PSEQ,0)) Q:IFN'>0
"RTN","ORQQPL3",187,0)
 . S ITEM=$G(^GMPL(125.12,IFN,0))
"RTN","ORQQPL3",188,0)
 . S TEXT=$P(ITEM,U,4)
"RTN","ORQQPL3",189,0)
 . ; SEE DD for GMPL(125.12,4 :
"RTN","ORQQPL3",190,0)
 . ; "...code which is to be displayed... generally assumed to be ICD"
"RTN","ORQQPL3",191,0)
 . S CODE=$P(ITEM,U,5)
"RTN","ORQQPL3",192,0)
 . I +ORICD186,'+$$STATCHK^ICDAPIU(CODE,DT) Q
"RTN","ORQQPL3",193,0)
 . S PCNT=PCNT+1
"RTN","ORQQPL3",194,0)
 . ; RETURN:
"RTN","ORQQPL3",195,0)
 . ; PROBLEM^DISPLAY TEXT^CODE^CODE IFN
"RTN","ORQQPL3",196,0)
 . I +ORICD186 D
"RTN","ORQQPL3",197,0)
 . . S @TG@(PCNT)=$P(ITEM,U,3,5)_U_$$CODEN^ICDCODE(CODE,80)
"RTN","ORQQPL3",198,0)
 . E  D
"RTN","ORQQPL3",199,0)
 . . S @TG@(PCNT)=$P(ITEM,U,3,5)_U_$$ICDCODE(CODE)
"RTN","ORQQPL3",200,0)
 Q
"RTN","ORQQPL3",201,0)
 ;
"RTN","ORQQPL3",202,0)
ICDCODE(COD)    ; RETURN INTERNAL ICD FOR EXTERNAL CODE  (obsolete after CSV patches released - RV)
"RTN","ORQQPL3",203,0)
 N CODIEN
"RTN","ORQQPL3",204,0)
 I COD="" Q ""
"RTN","ORQQPL3",205,0)
 S CODIEN=+$O(^ICD9("AB",$P(COD,U)_" ",0))
"RTN","ORQQPL3",206,0)
 S:CODIEN'>0 CODIEN=+$O(^ICD9("AB",$P(COD,U)_"0 ",0))
"RTN","ORQQPL3",207,0)
 Q CODIEN
"RTN","ORQQPL3",208,0)
 ;
"RTN","ORQQPL3",209,0)
 ;------------------ Filter Providers ---------------------
"RTN","ORQQPL3",210,0)
 ;
"RTN","ORQQPL3",211,0)
GETRPRV(RETURN,INP) ; GET LIST OF RESPONSIBLE PROVIDERS FROM PRBLM LIST 
"RTN","ORQQPL3",212,0)
 ; RETURN - aa list of responsible providers from which to select for filtering
"RTN","ORQQPL3",213,0)
 ; INP - array of problem list providers to select from
"RTN","ORQQPL3",214,0)
 ;
"RTN","ORQQPL3",215,0)
 N S
"RTN","ORQQPL3",216,0)
 S S=""
"RTN","ORQQPL3",217,0)
 F I=1:1 S S=$O(INP(S)) Q:S=""  D
"RTN","ORQQPL3",218,0)
 . I INP(S)'="",$G(^VA(200,INP(S),0))'="" D  Q  ; get next
"RTN","ORQQPL3",219,0)
 .. S RETURN(I)=INP(S)_U_$P(^VA(200,INP(S),0),U)
"RTN","ORQQPL3",220,0)
 S RETURN(0)="-1"_U_"<None recorded>" ; return empty provider
"RTN","ORQQPL3",221,0)
 Q
"RTN","ORQQPL3",222,0)
 ;
"RTN","ORQQPL3",223,0)
 ;---------------------------------------------------- GET FILTERED CLINIC LIST ------------------------
"RTN","ORQQPL3",224,0)
 ;
"RTN","ORQQPL3",225,0)
GETCLIN(RETURN,INP) ; Get FILTERED LIST OF CLINICS
"RTN","ORQQPL3",226,0)
 ; RETURN NAMES FOR LIST OF CLINICS PASSED IN
"RTN","ORQQPL3",227,0)
 N I,S
"RTN","ORQQPL3",228,0)
 S S=""
"RTN","ORQQPL3",229,0)
 F I=1:1 S S=$O(INP(S)) Q:S=""  D
"RTN","ORQQPL3",230,0)
 . I INP(S)'="",$G(^SC(INP(S),0))'="" D  Q  ; get next
"RTN","ORQQPL3",231,0)
 .. S RETURN(I)=INP(S)_U_$P(^SC(INP(S),0),U,1)
"RTN","ORQQPL3",232,0)
 ;. S RETURN(I)="-1"_U_"None" ; return empty location
"RTN","ORQQPL3",233,0)
 Q
"RTN","ORQQPL3",234,0)
 ;
"RTN","ORQQPL3",235,0)
GETSRVC(RETURN,INP) ; GET FILTERED LIST OF INPATIENT SERVICES
"RTN","ORQQPL3",236,0)
 ; RETURN NAMES FOR LIST OF IEN PASSED IN
"RTN","ORQQPL3",237,0)
 N I,S
"RTN","ORQQPL3",238,0)
 S S=""
"RTN","ORQQPL3",239,0)
 F I=1:1 S S=$O(INP(S)) Q:S=""  D
"RTN","ORQQPL3",240,0)
 . I INP(S)'="",$G(^DIC(49,INP(S),0))'="" D  Q  ; get next
"RTN","ORQQPL3",241,0)
 .. S RETURN(I)=INP(S)_U_$P(^DIC(49,INP(S),0),U,1)
"RTN","ORQQPL3",242,0)
 ;. S RETURN(I)="-1"_U_"None" ; return empty service
"RTN","ORQQPL3",243,0)
 Q
"RTN","ORQQPXRM")
0^13^B5838851
"RTN","ORQQPXRM",1,0)
ORQQPXRM ; SLC/PJH - Functions for reminder data ;4/15/2003
"RTN","ORQQPXRM",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,173**;Dec 17, 1997
"RTN","ORQQPXRM",3,0)
 ;
"RTN","ORQQPXRM",4,0)
 ;ORQQPXRM DIALOG ACTIVE
"RTN","ORQQPXRM",5,0)
ACTIVE(ORY,LIST) D ACTIVE^PXRMRPCC(.ORY,.LIST) Q  ; DBIA 3080
"RTN","ORQQPXRM",6,0)
 ;
"RTN","ORQQPXRM",7,0)
 ;ORQQPXRM REMINDER EVALUATION
"RTN","ORQQPXRM",8,0)
ALIST(ORY,ORPT,LIST) D ALIST^PXRMRPCA(.ORY,.ORPT,.LIST) Q  ; DBIA 3078
"RTN","ORQQPXRM",9,0)
 ;
"RTN","ORQQPXRM",10,0)
 ;ORQQPXRM REMINDERS APPLICABLE
"RTN","ORQQPXRM",11,0)
APPL(ORY,ORPT,ORLOC) D EVALCOVR^ORQQPX(.ORY,ORPT,ORLOC) Q
"RTN","ORQQPXRM",12,0)
 ;D APPL^PXRMRPCA(.ORY,ORPT,ORLOC) Q  ; DBIA 3078
"RTN","ORQQPXRM",13,0)
 ;
"RTN","ORQQPXRM",14,0)
 ;ORQQPXRM REMINDER CATEGORIES
"RTN","ORQQPXRM",15,0)
CATEGORY(ORY,ORPT,ORLOC) ;
"RTN","ORQQPXRM",16,0)
 D CATEGORY^PXRMRPCA(.ORY,ORPT,ORLOC) Q  ; DBIA 3078
"RTN","ORQQPXRM",17,0)
 ;
"RTN","ORQQPXRM",18,0)
 ;ORQQPXRM REMINDER DIALOG
"RTN","ORQQPXRM",19,0)
DIALOG(ORY,ORREM) D DIALOG^PXRMRPCC(.ORY,ORREM) Q  ; DBIA 3080
"RTN","ORQQPXRM",20,0)
 ;
"RTN","ORQQPXRM",21,0)
 ;ORQQPXRM EDUCATION SUBTOPICS
"RTN","ORQQPXRM",22,0)
EDS(ORY,OREDU) D EDS^PXRMRPCB(.ORY,OREDU) Q  ; DBIA 3079
"RTN","ORQQPXRM",23,0)
 ;
"RTN","ORQQPXRM",24,0)
 ;ORQQPXRM EDUCATION SUMMARY
"RTN","ORQQPXRM",25,0)
EDL(ORY,OREM) D EDL^PXRMRPCB(.ORY,OREM) Q  ; DBIA 3079
"RTN","ORQQPXRM",26,0)
 ;
"RTN","ORQQPXRM",27,0)
 ;ORQQPXRM EDUCATION TOPIC
"RTN","ORQQPXRM",28,0)
EDU(ORY,OREDU) D EDU^PXRMRPCB(.ORY,OREDU) Q  ; DBIA 3079
"RTN","ORQQPXRM",29,0)
 ;
"RTN","ORQQPXRM",30,0)
 ;ORQQPXRM PROGRESS NOTE HEADER
"RTN","ORQQPXRM",31,0)
HDR(ORY,ORLOC) D HDR^PXRMRPCC(.ORY,ORLOC) Q  ; DBIA 3080
"RTN","ORQQPXRM",32,0)
 ;
"RTN","ORQQPXRM",33,0)
 ;ORQQPXRM REMINDERS UNEVALUATED
"RTN","ORQQPXRM",34,0)
LIST(ORY,ORPT,ORLOC) D GETLIST^ORQQPX(.ORY,ORLOC) Q
"RTN","ORQQPXRM",35,0)
 ;D LIST^PXRMRPCA(.ORY,ORPT,ORLOC) Q  ; DBIA 3078
"RTN","ORQQPXRM",36,0)
 ;
"RTN","ORQQPXRM",37,0)
 ;ORQQPXRM MENTAL HEALTH
"RTN","ORQQPXRM",38,0)
MH(ORY,OTEST) D MH^PXRMRPCC(.ORY,OTEST) Q  ; DBIA 3080
"RTN","ORQQPXRM",39,0)
 ;
"RTN","ORQQPXRM",40,0)
 ;ORQQPXRM MENTAL HEALTH RESULTS
"RTN","ORQQPXRM",41,0)
MHR(ORY,RESULT,ORES) D MHR^PXRMRPCC(.ORY,RESULT,.ORES) Q  ; DBIA 3080
"RTN","ORQQPXRM",42,0)
 ;
"RTN","ORQQPXRM",43,0)
 ;ORQQPXRM MENTAL HEALTH SAVE
"RTN","ORQQPXRM",44,0)
MHS(ORY,ORES) D MHS^PXRMRPCC(.ORY,.ORES) Q  ; DBIA 3080
"RTN","ORQQPXRM",45,0)
 ;
"RTN","ORQQPXRM",46,0)
 ;ORQQPXRM MST UPDATE
"RTN","ORQQPXRM",47,0)
MST(ORY,ORPT,ORDATE,ORSTAT,ORPROV,ORFTYP,ORFIEN,ORRES) ;
"RTN","ORQQPXRM",48,0)
 D MST^PXRMRPCC(.ORY,ORPT,ORDATE,ORSTAT,ORPROV,ORFTYP,ORFIEN,ORRES) Q
"RTN","ORQQPXRM",49,0)
 ;
"RTN","ORQQPXRM",50,0)
 ;ORQQPXRM WOMEN HEALTH RESULT
"RTN","ORQQPXRM",51,0)
WH(ORY,RESULT) ;
"RTN","ORQQPXRM",52,0)
 D WH^PXRMRPCC(.ORY,.RESULT) Q
"RTN","ORQQPXRM",53,0)
 ;
"RTN","ORQQPXRM",54,0)
 ;ORQQPXRM DIALOG PROMPTS
"RTN","ORQQPXRM",55,0)
PROMPT(ORY,ORDLG,ORDCUR,ORFTYP) ;
"RTN","ORQQPXRM",56,0)
 D PROMPT^PXRMRPCC(.ORY,ORDLG,ORDCUR,ORFTYP) Q  ; DBIA 3080
"RTN","ORQQPXRM",57,0)
 ;
"RTN","ORQQPXRM",58,0)
 ;ORQQPXRM REMINDER DETAIL
"RTN","ORQQPXRM",59,0)
REMDET(ORY,ORPT,ORIEN) D REMDET^PXRMRPCA(.ORY,ORPT,ORIEN) Q  ; DBIA 3078
"RTN","ORQQPXRM",60,0)
 ;
"RTN","ORQQPXRM",61,0)
 ;ORQQPXRM REMINDER INQUIRY
"RTN","ORQQPXRM",62,0)
RES(ORY,ORREM) D RES^PXRMRPCC(.ORY,ORREM) Q  ; DBIA 3080
"RTN","ORQQPXRM",63,0)
 ;
"RTN","ORQQPXRM",64,0)
 ;ORQQPXRM REMINDER WEB
"RTN","ORQQPXRM",65,0)
WEB(ORY,ORREM) D WEB^PXRMRPCA(.ORY,ORREM) Q  ; DBIA 3078
"RTN","ORQQPXRM",66,0)
 ;
"RTN","ORQQPXRM",67,0)
ACT(REM) ;ORQQPX SEARCH ITEMS - XPAR value screen for active reminders
"RTN","ORQQPXRM",68,0)
 ;Treat a null value as inactive
"RTN","ORQQPXRM",69,0)
 I 'REM Q 0
"RTN","ORQQPXRM",70,0)
 ;Treat a non-existen entry as inactive
"RTN","ORQQPXRM",71,0)
 I $G(^PXD(811.9,REM,0))="" Q 0
"RTN","ORQQPXRM",72,0)
 ;Check IF inactive flag is set
"RTN","ORQQPXRM",73,0)
 I ($T(INACTIVE^PXRM)'=""),$$INACTIVE^PXRM(REM) Q 0 ; DBIA 2182
"RTN","ORQQPXRM",74,0)
 ;Otherwise active
"RTN","ORQQPXRM",75,0)
 Q 1
"RTN","ORWDPS4")
0^14^B11105322
"RTN","ORWDPS4",1,0)
ORWDPS4 ;; SLC/JDL - Order Dialogs CO-PAY;[12/31/01 6:38pm]
"RTN","ORWDPS4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**116,125,131,141,173**;Dec 17, 1997
"RTN","ORWDPS4",3,0)
 ;
"RTN","ORWDPS4",4,0)
CPLST(TEST,PTIFN,ORIFNS) ; --Get CP questions
"RTN","ORWDPS4",5,0)
 N ORIFN,ORDA,ORI,ORPSO,CPX
"RTN","ORWDPS4",6,0)
 S ORI=0,ORPSO=+$O(^DIC(9.4,"C","PSO",0))
"RTN","ORWDPS4",7,0)
 F  S ORI=$O(ORIFNS(ORI)) Q:'ORI  D
"RTN","ORWDPS4",8,0)
 .S ORIFN=+ORIFNS(ORI),ORDA=$P(ORIFNS(ORI),";",2)
"RTN","ORWDPS4",9,0)
 .I $D(^OR(100,ORIFN,0)),($P(^OR(100,ORIFN,0),U,14)=ORPSO) D
"RTN","ORWDPS4",10,0)
 ..S CPX=$$SC(ORIFN)
"RTN","ORWDPS4",11,0)
 ..I $L(CPX)>1 S TEST(ORIFN)=ORIFN_";"_ORDA_CPX
"RTN","ORWDPS4",12,0)
 K PTIFN,ORIFN,ORDA,ORI,CPX
"RTN","ORWDPS4",13,0)
 Q
"RTN","ORWDPS4",14,0)
 ;
"RTN","ORWDPS4",15,0)
CPINFO(Y,ORINFO) ; -- Save reponses to CP questions
"RTN","ORWDPS4",16,0)
 Q:'$D(ORINFO)
"RTN","ORWDPS4",17,0)
 N ORIFN,ORI,ORX,ANS S ORI=0
"RTN","ORWDPS4",18,0)
 F  S ORI=$O(ORINFO(ORI)) Q:'ORI  D
"RTN","ORWDPS4",19,0)
 .S ORIFN=$P($P(ORINFO(ORI),U,1),";",1)
"RTN","ORWDPS4",20,0)
 .S ANS=$P(ORINFO(ORI),U,2)
"RTN","ORWDPS4",21,0)
 .D REFMT(.ORX,ANS)
"RTN","ORWDPS4",22,0)
 .D SC^ORCSAVE2(.ORX,ORIFN)
"RTN","ORWDPS4",23,0)
 S Y=1
"RTN","ORWDPS4",24,0)
 K ORIFN,ORX,ORI,ANS
"RTN","ORWDPS4",25,0)
 Q
"RTN","ORWDPS4",26,0)
 ;
"RTN","ORWDPS4",27,0)
SC(ORIFN) ; -- Dialog validation, to ask CP questions
"RTN","ORWDPS4",28,0)
 ;Expects ORIFN and ORDA
"RTN","ORWDPS4",29,0)
 ;
"RTN","ORWDPS4",30,0)
 N DR S DR=""
"RTN","ORWDPS4",31,0)
 I '$L($T(SCNEW^PSOCP))!('$G(ORIFN))!('$G(ORDA)) Q DR
"RTN","ORWDPS4",32,0)
 I $P($G(^OR(100,ORIFN,8,ORDA,0)),U,2)'="NW" Q DR
"RTN","ORWDPS4",33,0)
 ;
"RTN","ORWDPS4",34,0)
 N OR3,ORDRUG,ORENEW,ORX,I,X,Y,CPNODE,ASC,AAO,AIR,AEC,AMST,AHNC
"RTN","ORWDPS4",35,0)
 S ORX=""
"RTN","ORWDPS4",36,0)
 ;--Only new, renew, edited, copied outpatient order can continue...
"RTN","ORWDPS4",37,0)
 S OR3=$G(^OR(100,ORIFN,3)),X=$P(OR3,U,11) I (X'=0)&((X'=2)&(X'=1)) Q DR
"RTN","ORWDPS4",38,0)
 I (X=1)&($D(^OR(100,ORIFN,5))=0) Q DR
"RTN","ORWDPS4",39,0)
 I $D(^OR(100,ORIFN,5))>0 D
"RTN","ORWDPS4",40,0)
 .S CPNODE=$G(^OR(100,ORIFN,5))
"RTN","ORWDPS4",41,0)
 .S ASC=$S($L($P(CPNODE,"^",1)):"SC;"_$P(CPNODE,"^",1),1:"")
"RTN","ORWDPS4",42,0)
 .S DR=$S($L(ASC):DR_U_ASC,1:DR)
"RTN","ORWDPS4",43,0)
 .S AAO=$S($L($P(CPNODE,"^",3)):"AO;"_$P(CPNODE,"^",3),1:"")
"RTN","ORWDPS4",44,0)
 .S DR=$S($L(AAO):DR_U_AAO,1:DR)
"RTN","ORWDPS4",45,0)
 .S AIR=$S($L($P(CPNODE,"^",4)):"IR;"_$P(CPNODE,"^",4),1:"")
"RTN","ORWDPS4",46,0)
 .S DR=$S($L(AIR):DR_U_AIR,1:DR)
"RTN","ORWDPS4",47,0)
 .S AEC=$S($L($P(CPNODE,"^",5)):"EC;"_$P(CPNODE,"^",5),1:"")
"RTN","ORWDPS4",48,0)
 .S DR=$S($L(AEC):DR_U_AEC,1:DR)
"RTN","ORWDPS4",49,0)
 .S AMST=$S($L($P(CPNODE,"^",2)):"MST;"_$P(CPNODE,"^",2),1:"")
"RTN","ORWDPS4",50,0)
 .S DR=$S($L(AMST):DR_U_AMST,1:DR)
"RTN","ORWDPS4",51,0)
 .S AHNC=$S($L($P(CPNODE,"^",6)):"HNC;"_$P(CPNODE,"^",6),1:"")
"RTN","ORWDPS4",52,0)
 .S DR=$S($L(AHNC):DR_U_AHNC,1:DR)
"RTN","ORWDPS4",53,0)
 .D CPCOMP(.DR)
"RTN","ORWDPS4",54,0)
 .K ASC,AAO,AIR,AEC,AMST,AHNC,CPNODE
"RTN","ORWDPS4",55,0)
 I $L(DR)>0 Q DR
"RTN","ORWDPS4",56,0)
 I X=2 S Y=$P(OR3,U,5),ORENEW=$G(^OR(100,Y,4)) ;get PS# if renewal
"RTN","ORWDPS4",57,0)
 S ORDRUG=$$VALUE^ORCSAVE2(ORIFN,"DRUG")
"RTN","ORWDPS4",58,0)
 D SCNEW^PSOCP(.ORX,+PTIFN,ORDRUG,$G(ORENEW)) I '$D(ORX) Q DR
"RTN","ORWDPS4",59,0)
 F I="SC","AO","IR","EC","MST","HNC" D
"RTN","ORWDPS4",60,0)
 . I $D(ORX(I)) S DR=DR_U_I_$S($L(ORX(I)):";"_ORX(I),1:"")
"RTN","ORWDPS4",61,0)
 Q DR
"RTN","ORWDPS4",62,0)
REFMT(ORX,INFO) ;
"RTN","ORWDPS4",63,0)
 ;"U": Unchecked ("NO") 
"RTN","ORWDPS4",64,0)
 ;"C": Checked ("YES")
"RTN","ORWDPS4",65,0)
 ;"N" : Question not asked
"RTN","ORWDPS4",66,0)
 N RST,RST1
"RTN","ORWDPS4",67,0)
 S RST=""
"RTN","ORWDPS4",68,0)
 F I=1:1:$L(INFO)  S RST=RST_U_$S($E(INFO,I)="U":0,$E(INFO,I)="C":1,1:"")
"RTN","ORWDPS4",69,0)
 S RST1=$E(RST,2,$L(RST))
"RTN","ORWDPS4",70,0)
 S ORX("SC")=$P(RST1,U,1)
"RTN","ORWDPS4",71,0)
 S ORX("MST")=$P(RST1,U,5)
"RTN","ORWDPS4",72,0)
 S ORX("AO")=$P(RST1,U,2)
"RTN","ORWDPS4",73,0)
 S ORX("IR")=$P(RST1,U,3)
"RTN","ORWDPS4",74,0)
 S ORX("EC")=$P(RST1,U,4)
"RTN","ORWDPS4",75,0)
 S ORX("HNC")=$P(RST1,U,6)
"RTN","ORWDPS4",76,0)
 K RST,RST1
"RTN","ORWDPS4",77,0)
 Q
"RTN","ORWDPS4",78,0)
CPCOMP(PREX) ; -- Compare the existed exemptions with new exemption questions
"RTN","ORWDPS4",79,0)
 N ORX1,ORDRUG1,CPI,LSTCP,TMPVAL
"RTN","ORWDPS4",80,0)
 S LSTCP=""
"RTN","ORWDPS4",81,0)
 S ORDRUG1=$$VALUE^ORCSAVE2(ORIFN,"DRUG")
"RTN","ORWDPS4",82,0)
 D SCNEW^PSOCP(.ORX1,+PTIFN,ORDRUG1,$G(ORENEW)) I '$D(ORX1) Q
"RTN","ORWDPS4",83,0)
 F CPI="SC","AO","IR","EC","MST","HNC" D
"RTN","ORWDPS4",84,0)
 . I $D(ORX1(CPI)) D
"RTN","ORWDPS4",85,0)
 . . S TMPVAL=""
"RTN","ORWDPS4",86,0)
 . . I $F(PREX,CPI) D
"RTN","ORWDPS4",87,0)
 . . . S TMPVAL=+$E(PREX,$F(PREX,CPI)+1)
"RTN","ORWDPS4",88,0)
 . . . I $L(TMPVAL),((TMPVAL=0)!(TMPVAL=1)) S TMPVAL=CPI_";"_TMPVAL
"RTN","ORWDPS4",89,0)
 . . . E  S TMPVAL=CPI
"RTN","ORWDPS4",90,0)
 . . E  S TMPVAL=CPI
"RTN","ORWDPS4",91,0)
 . . S LSTCP=LSTCP_U_TMPVAL
"RTN","ORWDPS4",92,0)
 S PREX=LSTCP
"RTN","ORWDPS4",93,0)
 Q
"RTN","ORWORB")
0^11^B51967717
"RTN","ORWORB",1,0)
ORWORB ; slc/dee/REV/CLA - RPC functions which return user alert ;10:12 am JAN 31, 2001
"RTN","ORWORB",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,148,173**;Dec 17, 1997
"RTN","ORWORB",3,0)
 ;
"RTN","ORWORB",4,0)
URGENLST(ORY) ;return array of the  urgency for the notification
"RTN","ORWORB",5,0)
 N ORSRV,ORERROR
"RTN","ORWORB",6,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORWORB",7,0)
 D GETLST^XPAR(.ORY,"USR^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG","ORB URGENCY","I",.ORERROR)
"RTN","ORWORB",8,0)
 Q
"RTN","ORWORB",9,0)
 ;
"RTN","ORWORB",10,0)
FASTUSER(ORY) ;return current user's notifications across all patients
"RTN","ORWORB",11,0)
 N STRTDATE,STOPDATE,ORTOT,I,ORURG,URG,ORN,SORT,ORN0,URGLIST
"RTN","ORWORB",12,0)
 N ALRT,ALRTDT,ALRTPT,ALRTMSG,ALRTI,ALRTLOC,ALRTXQA,J,FWDBY,PRE
"RTN","ORWORB",13,0)
 K ^TMP("ORBG",$J)
"RTN","ORWORB",14,0)
 S STRTDATE="",STOPDATE="",FWDBY="Forwarded by: "
"RTN","ORWORB",15,0)
 D GETUSER1^XQALDATA("^TMP(""ORB"",$J)",DUZ,STRTDATE,STOPDATE)
"RTN","ORWORB",16,0)
 S ORTOT=^TMP("ORB",$J)
"RTN","ORWORB",17,0)
 D URGLIST^ORQORB(.URGLIST)
"RTN","ORWORB",18,0)
 S ^TMP("ORB",0)=ORTOT
"RTN","ORWORB",19,0)
 S J=0
"RTN","ORWORB",20,0)
 F I=1:1:ORTOT D
"RTN","ORWORB",21,0)
 .S ALRT=^TMP("ORB",$J,I)
"RTN","ORWORB",22,0)
 .S PRE=$E(ALRT,1,1)
"RTN","ORWORB",23,0)
 .S ALRTXQA=$P(ALRT,U,2)  ;XQAID
"RTN","ORWORB",24,0)
 .S ALRTMSG=$P($P(ALRT,U),PRE_"  ",2)
"RTN","ORWORB",25,0)
 .I ALRT'["-----" D
"RTN","ORWORB",26,0)
 ..S ORURG="n/a"
"RTN","ORWORB",27,0)
 ..S ALRTI=$P(ALRT,"  ")
"RTN","ORWORB",28,0)
 ..S ALRTPT=""
"RTN","ORWORB",29,0)
 ..S ALRTLOC=""
"RTN","ORWORB",30,0)
 ..I $E($P(ALRTXQA,";"),1,3)="TIU" S ORURG="Moderate"
"RTN","ORWORB",31,0)
 ..I $P(ALRTXQA,",")="OR" D
"RTN","ORWORB",32,0)
 ...S ORN=$P($P(ALRTXQA,";"),",",3)
"RTN","ORWORB",33,0)
 ...S URG=$G(URGLIST(ORN))
"RTN","ORWORB",34,0)
 ...S ORURG=$S(URG=1:"HIGH",URG=2:"Moderate",1:"low")
"RTN","ORWORB",35,0)
 ...S ORN0=^ORD(100.9,ORN,0)
"RTN","ORWORB",36,0)
 ...S ALRTI=$S($P(ORN0,U,6)="INFODEL":"I",1:"")
"RTN","ORWORB",37,0)
 ..S ALRTI=$S(ALRTI="I":"I",1:"")
"RTN","ORWORB",38,0)
 ..I ALRT["): " D
"RTN","ORWORB",39,0)
 ...S ALRTPT=$P($P(ALRT,": "),"  ",2)
"RTN","ORWORB",40,0)
 ...S ALRTMSG=$P($P(ALRT,U),"): ",2)
"RTN","ORWORB",41,0)
 ...I $E(ALRTMSG,1,1)="[" D
"RTN","ORWORB",42,0)
 ....S ALRTLOC=$P(ALRTMSG,"]")_"]"
"RTN","ORWORB",43,0)
 ....S ALRTMSG=$P(ALRTMSG,"] ",2)
"RTN","ORWORB",44,0)
 ..I '$L($G(ALRTPT)) S ALRTPT="no patient",ALRTI="I"
"RTN","ORWORB",45,0)
 ..S ALRTDT=$P(ALRTXQA,";",3)
"RTN","ORWORB",46,0)
 ..S ALRTDT=($E(ALRTDT,1,3)+1700)_"/"_$E(ALRTDT,4,5)_"/"_$E(ALRTDT,6,7)_"@"_$E($P(ALRTDT,".",2),1,2)_":"_$E($P(ALRTDT,".",2),3,4)
"RTN","ORWORB",47,0)
 ..S J=J+1,^TMP("ORBG",$J,J)=ALRTI_U_ALRTPT_U_ALRTLOC_U_ORURG_U_ALRTDT_U
"RTN","ORWORB",48,0)
 ..S ^TMP("ORBG",$J,J)=^TMP("ORBG",$J,J)_ALRTMSG_U_U_ALRTXQA_U
"RTN","ORWORB",49,0)
 .;
"RTN","ORWORB",50,0)
 .;if alert forward info/comment:
"RTN","ORWORB",51,0)
 .I ALRTMSG["-----" D
"RTN","ORWORB",52,0)
 ..S ALRTMSG=$P(ALRTMSG,"-----",2)
"RTN","ORWORB",53,0)
 ..I $E(ALRTMSG,1,14)=FWDBY D
"RTN","ORWORB",54,0)
 ...S J=J+1,^TMP("ORBG",$J,J)=FWDBY_U_$P($P(ALRTMSG,FWDBY,2),"Generated: ")_$P($P(ALRTMSG,FWDBY,2),"Generated: ",2)
"RTN","ORWORB",55,0)
 ..E  S ^TMP("ORBG",$J,J)=^TMP("ORBG",$J,J)_U_""""_ALRTMSG_""""
"RTN","ORWORB",56,0)
 S ^TMP("ORBG",$J)=""
"RTN","ORWORB",57,0)
 S ORY=$NA(^TMP("ORBG",$J))
"RTN","ORWORB",58,0)
 Q
"RTN","ORWORB",59,0)
 ;
"RTN","ORWORB",60,0)
GETDATA(ORY,XQAID) ; return XQADATA for an alert
"RTN","ORWORB",61,0)
 N SHOWADD
"RTN","ORWORB",62,0)
 S ORY=""
"RTN","ORWORB",63,0)
 Q:$G(XQAID)=""!('$D(^XTV(8992,"AXQA",XQAID)))
"RTN","ORWORB",64,0)
 D GETACT^XQALERT(XQAID)
"RTN","ORWORB",65,0)
 S ORY=XQADATA
"RTN","ORWORB",66,0)
 I ($E(XQAID,1,3)="TIU"),(+ORY>0) D
"RTN","ORWORB",67,0)
 . S SHOWADD=1
"RTN","ORWORB",68,0)
 . S ORY=ORY_$$RESOLVE^TIUSRVLO(+ORY)
"RTN","ORWORB",69,0)
 K XQAID,XQADATA,XQAOPT,XQAROU
"RTN","ORWORB",70,0)
 Q
"RTN","ORWORB",71,0)
 ;
"RTN","ORWORB",72,0)
KILUNSNO(Y,ORVP) ; Delete unsigned order alerts if no unsigned orders remaining
"RTN","ORWORB",73,0)
 S ORVP=ORVP_";DPT("
"RTN","ORWORB",74,0)
 D UNOTIF^ORCSIGN
"RTN","ORWORB",75,0)
 Q
"RTN","ORWORB",76,0)
 ;
"RTN","ORWORB",77,0)
UNFLORD(Y,DFN,XQAID) ; -- auto-unflag orders?/delete alert
"RTN","ORWORB",78,0)
 Q:'$L(DFN)!('$L(XQAID))
"RTN","ORWORB",79,0)
 N ORI,ORIFN,ORA,XQAKILL,ORN,ORBY,ORAUTO,ORUNF
"RTN","ORWORB",80,0)
 S ORN=+$O(^ORD(100.9,"B","FLAGGED ORDERS",0))
"RTN","ORWORB",81,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORN)
"RTN","ORWORB",82,0)
 D LIST^ORQOR1(.ORBY,DFN,"ALL",12,"","")
"RTN","ORWORB",83,0)
 S ORAUTO=+$$GET^XPAR("ALL","ORPF AUTO UNFLAG")
"RTN","ORWORB",84,0)
 S ORI=0 F  S ORI=$O(ORBY(ORI)) Q:ORI'>0  D
"RTN","ORWORB",85,0)
 . I ORAUTO D  ; unflag
"RTN","ORWORB",86,0)
 . . S ORUNF=+$E($$NOW^XLFDT,1,12)_U_DUZ_"^Auto-Unflagged"
"RTN","ORWORB",87,0)
 . . S ORIFN=$P(ORBY(ORI),U),ORA=+$P(ORIFN,";",2)
"RTN","ORWORB",88,0)
 . . I ORIFN,$D(^OR(100,+ORIFN,0)) S $P(^(8,ORA,3),U)=0,$P(^(3),U,6,8)=ORUNF ; unflag
"RTN","ORWORB",89,0)
 I ORAUTO!(+$G(ORBY(1))=0) D DELETE^XQALERT
"RTN","ORWORB",90,0)
 Q
"RTN","ORWORB",91,0)
KILEXMED(Y,ORDFN)  ; -- Delete expiring meds notification if no expiring meds remaining
"RTN","ORWORB",92,0)
 N ORDG,ORLST S ORDG=$$DG^ORQOR1("RX")
"RTN","ORWORB",93,0)
 D AGET^ORWORR(.ORLST,ORDFN,5,ORDG)
"RTN","ORWORB",94,0)
 Q:+(@ORLST@(.1))  ;more left
"RTN","ORWORB",95,0)
 N XQAKILL,ORNIFN,ORVP
"RTN","ORWORB",96,0)
 S ORNIFN=$O(^ORD(100.9,"B","MEDICATIONS EXPIRING",0)),ORVP=ORDFN_";DPT("
"RTN","ORWORB",97,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN) ; expiring meds notif
"RTN","ORWORB",98,0)
 I $D(XQAID) D DELETE^XQALERT
"RTN","ORWORB",99,0)
 I '$D(XQAID) S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN D DELETEA^XQALERT K XQAID
"RTN","ORWORB",100,0)
 Q
"RTN","ORWORB",101,0)
KILEXOI(Y,ORDFN,ORNIFN)  ; -- Delete expiring flagged OI notification if no flagged expiring OI remaining
"RTN","ORWORB",102,0)
 N ORDG,ORLST S ORDG=$$DG^ORQOR1("ALL")
"RTN","ORWORB",103,0)
 D AGET^ORWORR(.ORLST,ORDFN,5,ORDG)
"RTN","ORWORB",104,0)
 Q:+(@ORLST@(.1))  ;more left
"RTN","ORWORB",105,0)
 N XQAKILL,ORVP
"RTN","ORWORB",106,0)
 S ORVP=ORDFN_";DPT("
"RTN","ORWORB",107,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN) ; flagged expiring OI notifications
"RTN","ORWORB",108,0)
 I $D(XQAID) D DELETE^XQALERT
"RTN","ORWORB",109,0)
 I '$D(XQAID) S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN D DELETEA^XQALERT K XQAID
"RTN","ORWORB",110,0)
 Q
"RTN","ORWORB",111,0)
KILUNVOR(Y,ORDFN)  ; -- Delete UNVERIFIED ORDER notification if none remaining within current admission/30 days
"RTN","ORWORB",112,0)
 N DFN,ORDG,ORLST,ORBDT,OREDT S ORDG=$$DG^ORQOR1("ALL")
"RTN","ORWORB",113,0)
 S OREDT=$$NOW^XLFDT
"RTN","ORWORB",114,0)
 ;get current admission date/time:
"RTN","ORWORB",115,0)
 S DFN=ORDFN,VA200="" D INP^VADPT
"RTN","ORWORB",116,0)
 S ORBDT=$P($G(VAIN(7)),U)
"RTN","ORWORB",117,0)
 S ORBDT=$S('$L($G(ORBDT)):$$FMADD^XLFDT(OREDT,"-30"),1:ORBDT)  ;<= if no admission use past 30 days
"RTN","ORWORB",118,0)
 D AGET^ORWORR(.ORLST,ORDFN,9,ORDG,ORBDT,OREDT)
"RTN","ORWORB",119,0)
 Q:+(@ORLST@(.1))  ;more left
"RTN","ORWORB",120,0)
 N XQAKILL,ORVP,ORNIFN
"RTN","ORWORB",121,0)
 S ORNIFN=$O(^ORD(100.9,"B","UNVERIFIED ORDER",0)),ORVP=ORDFN_";DPT("
"RTN","ORWORB",122,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN)
"RTN","ORWORB",123,0)
 I $D(XQAID) D DELETE^XQALERT
"RTN","ORWORB",124,0)
 I '$D(XQAID) S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN D DELETEA^XQALERT K XQAID
"RTN","ORWORB",125,0)
 Q
"RTN","ORWORB",126,0)
KILUNVMD(Y,ORDFN)  ; -- Delete UNVERIFIED MEDS notification if none remaining within current admission/30 days
"RTN","ORWORB",127,0)
 N DFN,ORDG,ORLST,ORBDT,OREDT S ORDG=$$DG^ORQOR1("RX")
"RTN","ORWORB",128,0)
 S OREDT=$$NOW^XLFDT
"RTN","ORWORB",129,0)
 ;get current admission date/time:
"RTN","ORWORB",130,0)
 S DFN=ORDFN,VA200="" D INP^VADPT
"RTN","ORWORB",131,0)
 S ORBDT=$P($G(VAIN(7)),U)
"RTN","ORWORB",132,0)
 S ORBDT=$S('$L($G(ORBDT)):$$FMADD^XLFDT(OREDT,"-30"),1:ORBDT)  ;<= if no admission use past 30 days
"RTN","ORWORB",133,0)
 D AGET^ORWORR(.ORLST,ORDFN,9,ORDG,ORBDT,OREDT)
"RTN","ORWORB",134,0)
 Q:+(@ORLST@(.1))  ;more left
"RTN","ORWORB",135,0)
 N XQAKILL,ORVP,ORNIFN
"RTN","ORWORB",136,0)
 S ORNIFN=$O(^ORD(100.9,"B","UNVERIFIED MEDICATION ORDER",0)),ORVP=ORDFN_";DPT("
"RTN","ORWORB",137,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN)
"RTN","ORWORB",138,0)
 I $D(XQAID) D DELETE^XQALERT
"RTN","ORWORB",139,0)
 I '$D(XQAID) S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN D DELETEA^XQALERT K XQAID
"RTN","ORWORB",140,0)
 Q
"RTN","ORWORB",141,0)
ESORD(ORY,XQAID)   ;order(s) requiring electronic signature follow-up
"RTN","ORWORB",142,0)
 K XQAKILL
"RTN","ORWORB",143,0)
 N ORPT,ORDG,ORBXQAID,ORY,ORX,ORZ,ORDERS,ORDNUM,ORQUIT,ORBLMDEL
"RTN","ORWORB",144,0)
 S ORBXQAID=XQAID,ORDERS=0,ORQUIT=0
"RTN","ORWORB",145,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORWORB",146,0)
 S ORDG=$$DG^ORQOR1("ALL")
"RTN","ORWORB",147,0)
 ;the FLG code for UNSIGNED orders in ORQ1 is '11'
"RTN","ORWORB",148,0)
 ;get unsigned orders - if none exist, delete alert then quit:
"RTN","ORWORB",149,0)
 D EN^ORQ1(ORPT_";DPT(",ORDG,11,"","","",0,0)
"RTN","ORWORB",150,0)
 S ORX="",ORX=$O(^TMP("ORR",$J,ORX)) Q:ORX=""  I +$G(^TMP("ORR",$J,ORX,"TOT"))<1 D DEL^ORB3FUP1(.ORY,ORBXQAID) K ^TMP("ORR",$J) Q
"RTN","ORWORB",151,0)
 ;
"RTN","ORWORB",152,0)
 ;user does not have ORES key, delete user's alert:
"RTN","ORWORB",153,0)
 I '$D(^XUSEC("ORES",DUZ)) S XQAKILL=1 D DEL^ORB3FUP1(.ORY,ORBXQAID) K ^TMP("ORR",$J) Q
"RTN","ORWORB",154,0)
 ;
"RTN","ORWORB",155,0)
 ;if prov is NOT linked to pt via attending, primary or teams:
"RTN","ORWORB",156,0)
 I $$PPLINK^ORQPTQ1(DUZ,ORPT)=0 D
"RTN","ORWORB",157,0)
 .S ORX="" F  S ORX=$O(^TMP("ORR",$J,ORX)) Q:ORX=""!(ORDERS=1)  D
"RTN","ORWORB",158,0)
 ..S ORZ="" F  S ORZ=$O(^TMP("ORR",$J,ORX,ORZ)) Q:+ORZ=0!(ORDERS=1)  D
"RTN","ORWORB",159,0)
 ...S ORDNUM=^TMP("ORR",$J,ORX,ORZ)
"RTN","ORWORB",160,0)
 ...;quit if this unsigned order's last action was made by the user
"RTN","ORWORB",161,0)
 ...I DUZ=+$$UNSIGNOR^ORQOR2(ORDNUM) S ORDERS=1
"RTN","ORWORB",162,0)
 .I ORDERS'=1 D  ;provider has no outstanding unsigned orders for pt
"RTN","ORWORB",163,0)
 ..S XQAKILL=1 D DEL^ORB3FUP1(.ORY,ORBXQAID)  ;delete alert for this user
"RTN","ORWORB",164,0)
 K ^TMP("ORR",$J)
"RTN","ORWORB",165,0)
 Q
"RTN","ORWORB",166,0)
 ;
"RTN","ORWORB",167,0)
TXTFUP(ROOT,DFN,NOTIF,XQADATA) ; Follow-up for text messages
"RTN","ORWORB",168,0)
 ;
"RTN","ORWORB",169,0)
 I NOTIF=67 D CHGRAD
"RTN","ORWORB",170,0)
 Q
"RTN","ORWORB",171,0)
 ;
"RTN","ORWORB",172,0)
CHGRAD ;GUI follow-up for Imaging Request Changed (#67)
"RTN","ORWORB",173,0)
 S ROOT=$NA(^TMP($J,"RAE4"))
"RTN","ORWORB",174,0)
 K @ROOT
"RTN","ORWORB",175,0)
 D SET1^RAO7PC4  ;DBIA #3563
"RTN","ORWORB",176,0)
 Q
"RTN","ORWORB",177,0)
 ;
"RTN","ORWPCE")
0^1^B75528607
"RTN","ORWPCE",1,0)
ORWPCE ; SLC/JM/REV - wrap calls to PCE and AICS;04/01/2003
"RTN","ORWPCE",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,173**;Dec 17, 1997
"RTN","ORWPCE",3,0)
 Q
"RTN","ORWPCE",4,0)
VISIT(LST,CLINIC,ORDATE) ; get list of visit types for clinic
"RTN","ORWPCE",5,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",6,0)
 I $$PATCH^XPDUTL("IBD*3.0*51") D
"RTN","ORWPCE",7,0)
 . D GETLST^IBDF18A(CLINIC,"DG SELECT VISIT TYPE CPT PROCEDURES","LST",,,,ORDATE)
"RTN","ORWPCE",8,0)
 E  D
"RTN","ORWPCE",9,0)
 . D GETLST^IBDF18A(CLINIC,"DG SELECT VISIT TYPE CPT PROCEDURES","LST")
"RTN","ORWPCE",10,0)
 . I $$PATCH^XPDUTL("ICPT*6.0*14") D
"RTN","ORWPCE",11,0)
 . . N ORWINDEX S ORWINDEX=0
"RTN","ORWPCE",12,0)
 . . F  S ORWINDEX=$O(LST(ORWINDEX)) Q:'ORWINDEX  D:$P(LST(ORWINDEX),"^",1)]""
"RTN","ORWPCE",13,0)
 . . . I '+$$STATCHK^ICPTAPIU($P(LST(ORWINDEX),"^",1),ORDATE) K LST(ORWINDEX) Q 
"RTN","ORWPCE",14,0)
 Q
"RTN","ORWPCE",15,0)
PROC(LST,CLINIC,ORDATE) ; get list of procedures for clinic P12 for CPTMods
"RTN","ORWPCE",16,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",17,0)
 I $$PATCH^XPDUTL("IBD*3.0*51") D
"RTN","ORWPCE",18,0)
 . D GETLST^IBDF18A(CLINIC,"DG SELECT CPT PROCEDURE CODES","LST",,,1,ORDATE)
"RTN","ORWPCE",19,0)
 E  D
"RTN","ORWPCE",20,0)
 . D GETLST^IBDF18A(CLINIC,"DG SELECT CPT PROCEDURE CODES","LST",,,1)
"RTN","ORWPCE",21,0)
 . I $$PATCH^XPDUTL("ICPT*6.0*14") D
"RTN","ORWPCE",22,0)
 . . N ORWINDEX S ORWINDEX=0
"RTN","ORWPCE",23,0)
 . . F  S ORWINDEX=$O(LST(ORWINDEX)) Q:'ORWINDEX  D:$P(LST(ORWINDEX),"^",1)]""
"RTN","ORWPCE",24,0)
 . . . I '+$$STATCHK^ICPTAPIU($P(LST(ORWINDEX),"^",1),ORDATE) S LST(ORWINDEX)=""
"RTN","ORWPCE",25,0)
 N IDX,MOD,CODES,FIRST S IDX=0
"RTN","ORWPCE",26,0)
 F  S IDX=$O(LST(IDX)) Q:'+IDX  D
"RTN","ORWPCE",27,0)
 . I LST(IDX)="" K LST(IDX) Q
"RTN","ORWPCE",28,0)
 . S MOD=0,CODES="",FIRST=1
"RTN","ORWPCE",29,0)
 . F  S MOD=$O(LST(IDX,"MODIFIER",MOD)) Q:(MOD="")  D
"RTN","ORWPCE",30,0)
 . . I FIRST S FIRST=0
"RTN","ORWPCE",31,0)
 . . E  S CODES=CODES_";"
"RTN","ORWPCE",32,0)
 . . S CODES=CODES_LST(IDX,"MODIFIER",MOD)
"RTN","ORWPCE",33,0)
 . K LST(IDX,"MODIFIER")
"RTN","ORWPCE",34,0)
 . I 'FIRST S $P(LST(IDX),U,12)=CODES
"RTN","ORWPCE",35,0)
 Q
"RTN","ORWPCE",36,0)
CPTMODS(LST,ORCPTCOD,ORDATE) ;Return CPT Modifiers for a CPT Code
"RTN","ORWPCE",37,0)
 N ORM,ORIDX,ORI,MODNAME
"RTN","ORWPCE",38,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",39,0)
 I $$PATCH^XPDUTL("ICPT*6.0*14") D
"RTN","ORWPCE",40,0)
 . I +($$CODM^ICPTCOD(ORCPTCOD,$NA(ORM),0,ORDATE)),+$D(ORM) D
"RTN","ORWPCE",41,0)
 . . S ORIDX="",ORI=0
"RTN","ORWPCE",42,0)
 . . F  S ORIDX=$O(ORM(ORIDX)) Q:(ORIDX="")  D
"RTN","ORWPCE",43,0)
 . . . S ORI=ORI+1,MODNAME=$P(ORM(ORIDX),U,1)
"RTN","ORWPCE",44,0)
 . . . S LST(MODNAME_ORI)=$P(ORM(ORIDX),U,2)_U_MODNAME_U_ORIDX
"RTN","ORWPCE",45,0)
 E  D
"RTN","ORWPCE",46,0)
 . I +($$CODM^ICPTCOD(ORCPTCOD,$NA(ORM),0,"T")),+$D(ORM) D
"RTN","ORWPCE",47,0)
 . . S ORIDX="",ORI=0
"RTN","ORWPCE",48,0)
 . . F  S ORIDX=$O(ORM(ORIDX)) Q:(ORIDX="")  D
"RTN","ORWPCE",49,0)
 . . . S ORI=ORI+1,MODNAME=$P(ORM(ORIDX),U,1)
"RTN","ORWPCE",50,0)
 . . . S LST(MODNAME_ORI)=$P(ORM(ORIDX),U,2)_U_MODNAME_U_ORIDX
"RTN","ORWPCE",51,0)
 Q
"RTN","ORWPCE",52,0)
GETMOD(MODINFO,ORMODIEN,ORDATE) ;Returns info for a specific CPT Modifier
"RTN","ORWPCE",53,0)
 N ORDATA
"RTN","ORWPCE",54,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",55,0)
 I $$PATCH^XPDUTL("ICPT*6.0*14") D
"RTN","ORWPCE",56,0)
 . S ORDATA=$$MOD^ICPTMOD(ORMODIEN,"I",ORDATE,1)
"RTN","ORWPCE",57,0)
 E  D
"RTN","ORWPCE",58,0)
 . S ORDATA=$$MOD^ICPTMOD(ORMODIEN,"I","T",1)
"RTN","ORWPCE",59,0)
 I +ORDATA>0 S MODINFO=ORMODIEN_U_$P(ORDATA,U,3)_U_$P(ORDATA,U,2)
"RTN","ORWPCE",60,0)
 Q
"RTN","ORWPCE",61,0)
DIAG(LST,CLINIC,ORDATE) ; get list of diagnoses for clinic
"RTN","ORWPCE",62,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",63,0)
 I $$PATCH^XPDUTL("IBD*3.0*51") D
"RTN","ORWPCE",64,0)
 . D GETLST^IBDF18A(CLINIC,"DG SELECT ICD-9 DIAGNOSIS CODES","LST",,,,ORDATE)
"RTN","ORWPCE",65,0)
 E  D
"RTN","ORWPCE",66,0)
 . D GETLST^IBDF18A(CLINIC,"DG SELECT ICD-9 DIAGNOSIS CODES","LST")
"RTN","ORWPCE",67,0)
 . ; DBIA   10082     NAME: ICD DIAGNOSIS FILE
"RTN","ORWPCE",68,0)
 . N ORWINDEX,ORWICD9,ORICD186
"RTN","ORWPCE",69,0)
 . S ORWINDEX=0
"RTN","ORWPCE",70,0)
 . S ORICD186=$$PATCH^XPDUTL("ICD*18.0*6")
"RTN","ORWPCE",71,0)
 . F  S ORWINDEX=$O(LST(ORWINDEX)) Q:'ORWINDEX  D:$P(LST(ORWINDEX),"^",1)]""
"RTN","ORWPCE",72,0)
 . . I +ORICD186 D
"RTN","ORWPCE",73,0)
 . . . I '+$$STATCHK^ICDAPIU($P(LST(ORWINDEX),"^",1),ORDATE) K LST(ORWINDEX) Q 
"RTN","ORWPCE",74,0)
 . . E  D
"RTN","ORWPCE",75,0)
 . . . S ORWICD9=$O(^ICD9("BA",$P(LST(ORWINDEX),"^",1)_" ",0))
"RTN","ORWPCE",76,0)
 . . . I +ORWICD9,$G(^ICD9(ORWICD9,0)) S $P(LST(ORWINDEX),"^",3)=$P(^ICD9(ORWICD9,0),"^",11)
"RTN","ORWPCE",77,0)
 Q
"RTN","ORWPCE",78,0)
IMM(LST,CLINIC) ;get list of immunizations for clinic
"RTN","ORWPCE",79,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT IMMUNIZATIONS","LST")
"RTN","ORWPCE",80,0)
 Q
"RTN","ORWPCE",81,0)
SK(LST,CLINIC) ;get list of skin test for clinic
"RTN","ORWPCE",82,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT SKIN TESTS","LST")
"RTN","ORWPCE",83,0)
 Q
"RTN","ORWPCE",84,0)
HF(LST,CLINIC) ;get list of health factors for clinic
"RTN","ORWPCE",85,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT HEALTH FACTORS","LST")
"RTN","ORWPCE",86,0)
 Q
"RTN","ORWPCE",87,0)
PED(LST,CLINIC) ;get list of education topices for clinic
"RTN","ORWPCE",88,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT EDUCATION TOPICS","LST")
"RTN","ORWPCE",89,0)
 Q
"RTN","ORWPCE",90,0)
TRT(LST,CLINIC) ;get list of treatments for clinic
"RTN","ORWPCE",91,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT TREATMENTS","LST")
"RTN","ORWPCE",92,0)
 Q
"RTN","ORWPCE",93,0)
XAM(LST,CLINIC) ;get list of exams for clinic
"RTN","ORWPCE",94,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT EXAMS","LST")
"RTN","ORWPCE",95,0)
 Q
"RTN","ORWPCE",96,0)
ACTPROB(GLST,DFN,ORDATE) ;get list of patient's active problems
"RTN","ORWPCE",97,0)
 K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE",98,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",99,0)
 D DSELECT^GMPLENFM
"RTN","ORWPCE",100,0)
 N ORPROB,ORPROBIX,ORPRCNT
"RTN","ORWPCE",101,0)
 S ORPRCNT=0
"RTN","ORWPCE",102,0)
 S ORPROBIX=0
"RTN","ORWPCE",103,0)
 F  S ORPROBIX=$O(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)) Q:'ORPROBIX  D
"RTN","ORWPCE",104,0)
 . S ORPROB=$P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)
"RTN","ORWPCE",105,0)
 . I $E(ORPROB,1)="$" S ORPROB=$E(ORPROB,2,255)
"RTN","ORWPCE",106,0)
 . I '$D(ORPROB(ORPROB)) D
"RTN","ORWPCE",107,0)
 .. S ORPROB(ORPROB)=""
"RTN","ORWPCE",108,0)
 .. S ORPRCNT=ORPRCNT+1
"RTN","ORWPCE",109,0)
 .. S $P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)=ORPROB
"RTN","ORWPCE",110,0)
 . E  K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)
"RTN","ORWPCE",111,0)
 ; DBIA   10082     NAME: ICD DIAGNOSIS FILE
"RTN","ORWPCE",112,0)
 N ORWINDEX,ORWICD9,ORITEM,ORICD186
"RTN","ORWPCE",113,0)
 S ORWINDEX=0
"RTN","ORWPCE",114,0)
 S ORICD186=$$PATCH^XPDUTL("ICD*18.0*6")
"RTN","ORWPCE",115,0)
 F  S ORWINDEX=$O(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORWINDEX)) Q:'ORWINDEX  D:$P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORWINDEX),"^",1)]""
"RTN","ORWPCE",116,0)
 . S ORITEM=^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORWINDEX)
"RTN","ORWPCE",117,0)
 . I +ORICD186 D
"RTN","ORWPCE",118,0)
 . . I '+$$STATCHK^ICDAPIU($P(ORITEM,"^",3),ORDATE) S $P(ORITEM,"^",11)="#"
"RTN","ORWPCE",119,0)
 . E  D
"RTN","ORWPCE",120,0)
 . . S ORWICD9=$O(^ICD9("BA",$P(ORITEM,"^",3)_" ",0))
"RTN","ORWPCE",121,0)
 . . I +ORWICD9,$G(^ICD9(ORWICD9,0)) S $P(ORITEM,"^",10)=$P(^ICD9(ORWICD9,0),"^",11)
"RTN","ORWPCE",122,0)
 . S ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORWINDEX)=ORITEM
"RTN","ORWPCE",123,0)
 S ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",0)=ORPRCNT
"RTN","ORWPCE",124,0)
 S GLST="^TMP(""IB"","_$J_",""INTERFACES"",""GMP SELECT PATIENT ACTIVE PROBLEMS"")"
"RTN","ORWPCE",125,0)
 Q
"RTN","ORWPCE",126,0)
SCSEL(VAL,DFN,ATM,LOC,VST) ; return SC conditions that may be selected
"RTN","ORWPCE",127,0)
 ; VAL=SCallow^SCdflt;AOallow^AOdflt;IRallow^IRdflt;ECallow^ECdflt;
"RTN","ORWPCE",128,0)
 ;     MSTallow^MSTdflt;HNCallow^HNCdflt
"RTN","ORWPCE",129,0)
 N ORX,S S S=";"
"RTN","ORWPCE",130,0)
 D SCCOND^PXUTLSCC(DFN,ATM,LOC,$G(VST),.ORX)
"RTN","ORWPCE",131,0)
 S VAL=$G(ORX("SC"))_S_$G(ORX("AO"))_S_$G(ORX("IR"))_S_$G(ORX("EC"))_S_$G(ORX("MST"))_S_$G(ORX("HNC"))
"RTN","ORWPCE",132,0)
 Q
"RTN","ORWPCE",133,0)
SCDIS(LST,DFN) ; Return service connected % and rated disabilities
"RTN","ORWPCE",134,0)
 N VAEL,VAERR,I,ILST,DIS,SC,X
"RTN","ORWPCE",135,0)
 D ELIG^VADPT
"RTN","ORWPCE",136,0)
 S LST(1)="Service Connected: "_$S(+VAEL(3):$P(VAEL(3),U,2)_"%",1:"NO")
"RTN","ORWPCE",137,0)
 I 'VAEL(4),'$P($G(^DG(391,+VAEL(6),0)),U,2) S LST(2)="NOT A VETERAN." Q
"RTN","ORWPCE",138,0)
 S I=0,ILST=1 F  S I=$O(^DPT(DFN,.372,I)) Q:'I  S X=^(I,0) D
"RTN","ORWPCE",139,0)
 . S DIS=$P($G(^DIC(31,+X,0)),U) Q:DIS=""
"RTN","ORWPCE",140,0)
 . S SC=$S($P(X,U,3):"SC",$P(X,U,3)']"":"not specified",1:"NSC")
"RTN","ORWPCE",141,0)
 . S ILST=ILST+1,LST(ILST)=DIS_" ("_$P(X,U,2)_"% "_SC_")"
"RTN","ORWPCE",142,0)
 I ILST=1 S LST(2)="Rated Disabilities: NONE STATED"
"RTN","ORWPCE",143,0)
 Q
"RTN","ORWPCE",144,0)
CPTREQD(VAL,IEN) ; return 1 in VAL if note still needs a CPT code
"RTN","ORWPCE",145,0)
 S VAL=+$P(^TIU(8925,IEN,0),U,11)
"RTN","ORWPCE",146,0)
 Q
"RTN","ORWPCE",147,0)
NOTEVSTR(VAL,IEN) ; return the VSTR^AUTHOR for a note
"RTN","ORWPCE",148,0)
 N X0,X12,VISIT
"RTN","ORWPCE",149,0)
 S X0=$G(^TIU(8925,+IEN,0)),X12=$G(^(12)),VISIT=$P(X12,U,7)
"RTN","ORWPCE",150,0)
 I +VISIT S VAL=$$VSTRBLD^TIUSRVP(VISIT) I 1
"RTN","ORWPCE",151,0)
 E  S VAL=$P(X12,U,11)_";"_$P(X0,U,7)_";"_$P(X0,U,13)
"RTN","ORWPCE",152,0)
 Q
"RTN","ORWPCE",153,0)
HASVISIT(ORY,IEN,DFN,ORLOC,ORDTE) ;Has visit or is stand alone
"RTN","ORWPCE",154,0)
 N ORVISIT
"RTN","ORWPCE",155,0)
 S ORY=-1
"RTN","ORWPCE",156,0)
 I +$G(IEN)>0 S ORVISIT=+$P($G(^TIU(8925,+IEN,0)),U,3)
"RTN","ORWPCE",157,0)
 I +$G(ORVISIT)'>0 S ORVISIT=$$GETENC^PXAPI(DFN,ORDTE,ORLOC)
"RTN","ORWPCE",158,0)
 I +$G(ORVISIT)>0 S ORY=$$VST2APPT^PXAPI(ORVISIT)
"RTN","ORWPCE",159,0)
 Q
"RTN","ORWPCE",160,0)
DELETE(VAL,VSTR,DFN) ; delete PCE info when deleting a note
"RTN","ORWPCE",161,0)
 N VISIT,ORCOUNT
"RTN","ORWPCE",162,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC,ZTSYNC,ZTSK
"RTN","ORWPCE",163,0)
 I '$D(^TMP("ORWPCE",$J,VSTR)) S VAL=0 Q  ; no PCE data saved yet
"RTN","ORWPCE",164,0)
 I $P(VSTR,";",3)="H" S VAL=0 Q           ; leave inpatient alone
"RTN","ORWPCE",165,0)
 I $L($T(DOCCNT^TIUSRVLV))=0 S VAL=0 Q    ; leave if no tiu entry point
"RTN","ORWPCE",166,0)
 D DOCCNT^TIUSRVLV(.ORCOUNT,DFN,VSTR)     ; Do not delete if another
"RTN","ORWPCE",167,0)
 I ORCOUNT>0 S VAL=0 Q                    ; title points to visit
"RTN","ORWPCE",168,0)
 S ZTIO="ORW/PXAPI RESOURCE",ZTRTN="DQDEL^ORWPCE1",ZTDTH=$H
"RTN","ORWPCE",169,0)
 S (ZTSAVE("VSTR"),ZTSAVE("DFN"))="",ZTDESC="CPRS Delete Note/PCE"
"RTN","ORWPCE",170,0)
 S ZTSYNC="ORW"_VSTR
"RTN","ORWPCE",171,0)
 D ^%ZTLOAD I '$D(ZTSK) D DQDEL^ORWPCE1
"RTN","ORWPCE",172,0)
 Q
"RTN","ORWPCE",173,0)
SAVE(OK,PCELIST,NOTEIEN,ORLOC) ; save PCE information
"RTN","ORWPCE",174,0)
 N VSTR,GMPLUSER
"RTN","ORWPCE",175,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC,ZTSYNC,ZTSK
"RTN","ORWPCE",176,0)
 S VSTR=$P(PCELIST(1),U,4) K ^TMP("ORWPCE",$J,VSTR)
"RTN","ORWPCE",177,0)
 M ^TMP("ORWPCE",$J,VSTR)=PCELIST
"RTN","ORWPCE",178,0)
 S GMPLUSER=$$CLINUSER^ORQQPL1(DUZ),NOTEIEN=+$G(NOTEIEN)
"RTN","ORWPCE",179,0)
 S ZTIO="ORW/PXAPI RESOURCE",ZTRTN="DQSAVE^ORWPCE1",ZTDTH=$H
"RTN","ORWPCE",180,0)
 S ZTSAVE("PCELIST(")="",ZTDESC="Data from CPRS to PCE"
"RTN","ORWPCE",181,0)
 S ZTSAVE("GMPLUSER")="",ZTSAVE("NOTEIEN")="",ZTSAVE("DUZ")=""
"RTN","ORWPCE",182,0)
 S ZTSYNC="ORW"_VSTR,ZTSAVE("ORLOC")=""
"RTN","ORWPCE",183,0)
 D ^%ZTLOAD I '$D(ZTSK) D DQSAVE^ORWPCE1
"RTN","ORWPCE",184,0)
 Q
"RTN","ORWPCE",185,0)
LEX(LST,X,APP,ORDATE)   ; return list after lexicon lookup
"RTN","ORWPCE",186,0)
 N LEX,ILST,I,IEN
"RTN","ORWPCE",187,0)
 S:APP="CPT" APP="CHP" ; LEX PATCH 10
"RTN","ORWPCE",188,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",189,0)
 I $$PATCH^XPDUTL("LEX*2.0*25") D
"RTN","ORWPCE",190,0)
 . D CONFIG^LEXSET(APP,APP,ORDATE)
"RTN","ORWPCE",191,0)
 . D LOOK^LEXA(X,APP,1,"",ORDATE)
"RTN","ORWPCE",192,0)
 E  D
"RTN","ORWPCE",193,0)
 . D CONFIG^LEXSET(APP,APP)
"RTN","ORWPCE",194,0)
 . D LOOK^LEXA(X,APP,1)
"RTN","ORWPCE",195,0)
 I '$D(LEX("LIST",1)) S LST(1)="-1^No matches found." Q
"RTN","ORWPCE",196,0)
 S LST(1)=LEX("LIST",1),ILST=1
"RTN","ORWPCE",197,0)
 S I="" F  S I=$O(^TMP("LEXFND",$J,I)) Q:I'<0  D
"RTN","ORWPCE",198,0)
 . S IEN=$O(^TMP("LEXFND",$J,I,0))
"RTN","ORWPCE",199,0)
 . S ILST=ILST+1,LST(ILST)=IEN_U_^TMP("LEXFND",$J,I,IEN)
"RTN","ORWPCE",200,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","ORWPCE",201,0)
 Q
"RTN","ORWPCE",202,0)
LEXCODE(VAL,IEN,APP,ORDATE)     ; return code for a lexicon entry
"RTN","ORWPCE",203,0)
 S VAL=""
"RTN","ORWPCE",204,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",205,0)
 I $$PATCH^XPDUTL("LEX*2.0*25") D
"RTN","ORWPCE",206,0)
 . I APP="ICD" S VAL=$$ICDONE^LEXU(IEN,ORDATE)
"RTN","ORWPCE",207,0)
 . I APP="CPT"!(APP="CHP") S VAL=$$CPTONE^LEXU(IEN,ORDATE) ; LEX PATCH 10
"RTN","ORWPCE",208,0)
 . I VAL="",(APP="CHP") S VAL=$$CPCONE^LEXU(IEN,ORDATE) ; LEX PATCH 10
"RTN","ORWPCE",209,0)
 E  D
"RTN","ORWPCE",210,0)
 . I APP="ICD" S VAL=$$ICDONE^LEXU(IEN)
"RTN","ORWPCE",211,0)
 . I APP="CPT"!(APP="CHP") S VAL=$$CPTONE^LEXU(IEN) ; LEX PATCH 10
"RTN","ORWPCE",212,0)
 . I VAL="",(APP="CHP") S VAL=$$CPCONE^LEXU(IEN) ; LEX PATCH 10
"RTN","ORWPCE",213,0)
 Q
"RTN","ORWPCE",214,0)
ADDRES ; Add the ORW/PXAPI RESOURCE device
"RTN","ORWPCE",215,0)
 N X
"RTN","ORWPCE",216,0)
 S X=$$RES^XUDHSET("ORW/PXAPI RESOURCE",,5,"CPRS to PCE transactions")
"RTN","ORWPCE",217,0)
 Q
"RTN","ORWPCE",218,0)
GETSVC(NEWSVC,SVC,LOC,INP) ; Returns the correct Service Connected Category
"RTN","ORWPCE",219,0)
 N DSS
"RTN","ORWPCE",220,0)
 S DSS=$P($G(^SC(+LOC,0)),U,7)
"RTN","ORWPCE",221,0)
 Q:'+DSS
"RTN","ORWPCE",222,0)
 S NEWSVC=$$SVC^PXKCO(.SVC,DSS,INP,LOC) ; DBIA #3225
"RTN","ORWPCE",223,0)
 Q
"RTN","ORWPCE2")
0^6^B45644093
"RTN","ORWPCE2",1,0)
ORWPCE2 ; ISL/JM - wrap calls to PCE ;9/25/2001
"RTN","ORWPCE2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,116,173**;Dec 17, 1997
"RTN","ORWPCE2",3,0)
GETSET(ORWLST,ORWFILE,ORWFIELD,ORWNULL) ;gets set of codes 
"RTN","ORWPCE2",4,0)
 ; ORWLST(n)=code^text for code
"RTN","ORWPCE2",5,0)
 N ORWPCE,ORWPCEL,ORWPCEC,ORWPCELO,ORWPCEHI,ORWPCECD,ORWPCET
"RTN","ORWPCE2",6,0)
 S ORWPCELO="abcdefghijklmnopqrstuvwxyz"
"RTN","ORWPCE2",7,0)
 S ORWPCEHI="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
"RTN","ORWPCE2",8,0)
 D FIELD^DID(ORWFILE,ORWFIELD,"","POINTER","ORWPCE","ORWPCE")
"RTN","ORWPCE2",9,0)
 S ORWPCEL=$L(ORWPCE("POINTER"),";")-1
"RTN","ORWPCE2",10,0)
 F ORWPCEC=1:1:ORWPCEL D
"RTN","ORWPCE2",11,0)
 . S ORWPCECD=$P($P(ORWPCE("POINTER"),";",ORWPCEC),":",1)
"RTN","ORWPCE2",12,0)
 . S ORWPCET=$P($P(ORWPCE("POINTER"),";",ORWPCEC),":",2)
"RTN","ORWPCE2",13,0)
 . S ORWLST(ORWPCEC)=ORWPCECD_"^"_$E(ORWPCET)_$TR($E(ORWPCET,2,99),ORWPCEHI,ORWPCELO)
"RTN","ORWPCE2",14,0)
 S:$G(ORWNULL) ORWLST(0)="@^(None selected)"
"RTN","ORWPCE2",15,0)
 Q
"RTN","ORWPCE2",16,0)
 ;
"RTN","ORWPCE2",17,0)
IMMTYPE(ORWLST) ;get the list of active immunizations
"RTN","ORWPCE2",18,0)
 N IEN,CNT,BINDEX S (IEN,CNT,BINDEX)=0
"RTN","ORWPCE2",19,0)
 F  S BINDEX=$O(^AUTTIMM("B",BINDEX)) Q:BINDEX']""  F  S IEN=$O(^(BINDEX,IEN)) Q:'+IEN  I $D(^AUTTIMM(IEN,0))#2,+$P(^(0),"^",7)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",20,0)
 Q
"RTN","ORWPCE2",21,0)
 ;
"RTN","ORWPCE2",22,0)
SKTYPE(ORWLST) ;get the list of active skin test
"RTN","ORWPCE2",23,0)
 N IEN,CNT,BINDEX S (IEN,CNT,BINDEX)=0
"RTN","ORWPCE2",24,0)
 F  S BINDEX=$O(^AUTTSK("B",BINDEX)) Q:BINDEX']""  F  S IEN=$O(^(BINDEX,IEN)) Q:'+IEN  I $D(^AUTTSK(IEN,0))#2,+$P(^(0),"^",3)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",25,0)
 Q
"RTN","ORWPCE2",26,0)
 ;
"RTN","ORWPCE2",27,0)
EDTTYPE(ORWLST) ;get the list of active education topics
"RTN","ORWPCE2",28,0)
 N IEN,CNT,BINDEX S (IEN,CNT,BINDEX)=0
"RTN","ORWPCE2",29,0)
 F  S BINDEX=$O(^AUTTEDT("B",BINDEX)) Q:BINDEX']""  F  S IEN=$O(^(BINDEX,IEN)) Q:'+IEN  I $D(^AUTTEDT(IEN,0))#2,+$P(^(0),"^",3)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",30,0)
 Q
"RTN","ORWPCE2",31,0)
 ;
"RTN","ORWPCE2",32,0)
HFTYPE(ORWLST,ADDCATS) ;get the list of active  health factors
"RTN","ORWPCE2",33,0)
 N IEN,CNT,BINDEX,REC
"RTN","ORWPCE2",34,0)
 S (IEN,CNT,BINDEX)=0,ADDCATS=+$G(ADDCATS)
"RTN","ORWPCE2",35,0)
 F  S BINDEX=$O(^AUTTHF("B",BINDEX)) Q:BINDEX']""  D
"RTN","ORWPCE2",36,0)
 .F  S IEN=$O(^AUTTHF("B",BINDEX,IEN)) Q:'+IEN  D
"RTN","ORWPCE2",37,0)
 ..S REC=$G(^AUTTHF(IEN,0))
"RTN","ORWPCE2",38,0)
 ..I +$P(REC,U,11) S REC=""
"RTN","ORWPCE2",39,0)
 ..I 'ADDCATS,$P(REC,U,10)="C" S REC=""
"RTN","ORWPCE2",40,0)
 ..I REC'="" D
"RTN","ORWPCE2",41,0)
 ...S CNT=CNT+1,ORWLST(CNT)=IEN_U_$P(REC,U)
"RTN","ORWPCE2",42,0)
 ...I ADDCATS S ORWLST(CNT)=ORWLST(CNT)_U_$P(REC,U,10)_U_$P(REC,U,3)
"RTN","ORWPCE2",43,0)
 Q
"RTN","ORWPCE2",44,0)
 ;
"RTN","ORWPCE2",45,0)
EXAMTYPE(ORWLST) ;get the list of active exams
"RTN","ORWPCE2",46,0)
 N IEN,CNT,BINDEX S (IEN,CNT,BINDEX)=0
"RTN","ORWPCE2",47,0)
 F  S BINDEX=$O(^AUTTEXAM("B",BINDEX)) Q:BINDEX']""  F  S IEN=$O(^(BINDEX,IEN)) Q:'+IEN  I $D(^AUTTEXAM(IEN,0))#2,+$P(^(0),"^",4)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",48,0)
 Q
"RTN","ORWPCE2",49,0)
 ;
"RTN","ORWPCE2",50,0)
TRTTYPE(ORWLST) ;get the list of active treatments
"RTN","ORWPCE2",51,0)
 N IEN,CNT,BINDEX S (IEN,CNT,BINDEX)=0
"RTN","ORWPCE2",52,0)
 F  S BINDEX=$O(^AUTTTRT("B",BINDEX)) Q:BINDEX']""  F  S IEN=$O(^(BINDEX,IEN)) Q:'+IEN  I $D(^AUTTTRT(IEN,0))#2,+$P(^(0),"^",4)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",53,0)
 Q
"RTN","ORWPCE2",54,0)
 ;
"RTN","ORWPCE2",55,0)
ACTIVPRV(ORRETURN,ORWPROV,ORWDT) ;get if provider is active or not
"RTN","ORWPCE2",56,0)
 S ORRETURN=$$ACTIVPRV^PXAPI(ORWPROV,ORWDT)
"RTN","ORWPCE2",57,0)
 Q
"RTN","ORWPCE2",58,0)
GETVISIT(VISIT,IEN,DFN,VSITSTR) ;Get the visit IEN
"RTN","ORWPCE2",59,0)
 I +$G(IEN)<1 D  I 1
"RTN","ORWPCE2",60,0)
 .S VISIT=$$GETENC^PXAPI(DFN,$P(VSITSTR,";",2),$P(VSITSTR,";"))
"RTN","ORWPCE2",61,0)
 E  S VISIT=$P(^TIU(8925,IEN,0),U,3)
"RTN","ORWPCE2",62,0)
 Q
"RTN","ORWPCE2",63,0)
GAFOK(ORY) ; Returns true if all supporting MH GAF Code exists
"RTN","ORWPCE2",64,0)
 S ORY=0
"RTN","ORWPCE2",65,0)
 I $T(GAFHX^YSGAFAPI)'="",$T(ENT^YSGAFAP1)'="" S ORY=1
"RTN","ORWPCE2",66,0)
 Q
"RTN","ORWPCE2",67,0)
MHCLINIC(ORY,ORIEN)     ; See if this is a mental health clinic
"RTN","ORWPCE2",68,0)
 I $T(MHCLIN^SDUTL2)="" S ORY=1
"RTN","ORWPCE2",69,0)
 E  S ORY=$$MHCLIN^SDUTL2(ORIEN)
"RTN","ORWPCE2",70,0)
 Q
"RTN","ORWPCE2",71,0)
LOADGAF(ORY,ORINPUT) ; Retrieve GAF scores
"RTN","ORWPCE2",72,0)
 D GAFHX^YSGAFAPI(.ORY,.ORINPUT)
"RTN","ORWPCE2",73,0)
 Q
"RTN","ORWPCE2",74,0)
SAVEGAF(ORY,ORINPUT) ; Save new GAF score
"RTN","ORWPCE2",75,0)
 N ORDATA
"RTN","ORWPCE2",76,0)
 D ENT^YSGAFAP1(.ORDATA,.ORINPUT)
"RTN","ORWPCE2",77,0)
 S ORY=($G(ORDATA(1))="[DATA]")
"RTN","ORWPCE2",78,0)
 Q
"RTN","ORWPCE2",79,0)
FORCE(ORY,USER,LOC) ; Retrieve FORCE GUI PCE Entry for a given User/Location
"RTN","ORWPCE2",80,0)
 N SRV,ORTMP,ORERR
"RTN","ORWPCE2",81,0)
 S USER=$G(USER,DUZ)
"RTN","ORWPCE2",82,0)
 S SRV=$P($G(^VA(200,USER,5)),U)
"RTN","ORWPCE2",83,0)
 D GETLST^XPAR(.ORTMP,"USR^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORWPCE FORCE PCE ENTRY","Q",.ORERR)
"RTN","ORWPCE2",84,0)
 S ORY=+$P($G(ORTMP(1)),U,2)
"RTN","ORWPCE2",85,0)
 Q
"RTN","ORWPCE2",86,0)
HASCPT(ORY,ORLIST)        ; Returns true if there are any mapped CPT Codes
"RTN","ORWPCE2",87,0)
 N IEN,IDX,FOUND
"RTN","ORWPCE2",88,0)
 S IDX=0
"RTN","ORWPCE2",89,0)
 F  S IDX=$O(ORLIST(IDX)) Q:'+IDX  D
"RTN","ORWPCE2",90,0)
 . S FOUND=0
"RTN","ORWPCE2",91,0)
 . S IEN=$$FIND1^DIC(811.1,"","QX",ORLIST(IDX))
"RTN","ORWPCE2",92,0)
 . I +IEN S FOUND=+$$GET1^DIQ(811.1,IEN,.05,"I")
"RTN","ORWPCE2",93,0)
 . S ORY(IDX)=ORLIST(IDX)_"="_FOUND
"RTN","ORWPCE2",94,0)
 Q
"RTN","ORWPCE2",95,0)
ASKPCE(ORY,USER,LOC) ; Returns ORWPCE ASK ENCOUNTER UPDATE parameter value
"RTN","ORWPCE2",96,0)
 N SRV,ORTMP,ORERR
"RTN","ORWPCE2",97,0)
 S USER=$G(USER,DUZ)
"RTN","ORWPCE2",98,0)
 S SRV=$P($G(^VA(200,USER,5)),U)
"RTN","ORWPCE2",99,0)
 D GETLST^XPAR(.ORTMP,"USR^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORWPCE ASK ENCOUNTER UPDATE","Q",.ORERR)
"RTN","ORWPCE2",100,0)
 S ORY=+$P($G(ORTMP(1)),U,2)
"RTN","ORWPCE2",101,0)
 Q
"RTN","ORWPCE2",102,0)
GAFURL(URL) ;Returns the MH GAF Web Page URL
"RTN","ORWPCE2",103,0)
 S URL=""
"RTN","ORWPCE2",104,0)
 I $T(GAFURL^YTAPI5)'="" D
"RTN","ORWPCE2",105,0)
 .N ORY
"RTN","ORWPCE2",106,0)
 .D GAFURL^YTAPI5(.ORY)
"RTN","ORWPCE2",107,0)
 .I $G(ORY(1))="[DATA]" S URL=$G(ORY(2))
"RTN","ORWPCE2",108,0)
 Q
"RTN","ORWPCE2",109,0)
MHTESTOK(ORY) ; Returns True if all supporting MH Test APIs exist
"RTN","ORWPCE2",110,0)
 D GAFOK(.ORY)
"RTN","ORWPCE2",111,0)
 I +ORY,+$G(DUZ),$T(SAVEIT^YTAPI1)'="",$T(PREVIEW^YTAPI4)'="",$T(SHOWALL^YTAPI3)'="",$T(LISTONE^YTAPI)'="",$T(MHS^PXRMRPCC)'="",$T(MHR^PXRMRPCC)'="",$T(MH^PXRMRPCC)'="" D
"RTN","ORWPCE2",112,0)
 . N SRV
"RTN","ORWPCE2",113,0)
 . S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORWPCE2",114,0)
 . S ORY=$$GET^XPAR(DUZ_";VA(200,^SRV.`"_+$G(SRV)_"^DIV^SYS","PXRM MENTAL HEALTH ACTIVE",1,"Q")
"RTN","ORWPCE2",115,0)
 . I +ORY S ORY=1
"RTN","ORWPCE2",116,0)
 Q
"RTN","ORWPCE2",117,0)
MHATHRZD(ORY,TEST,USER) ;Indicates that user can score test
"RTN","ORWPCE2",118,0)
 N ORYS,ORANS
"RTN","ORWPCE2",119,0)
 I $T(PRIVL^YTAPI5)="" S ORY=1 Q
"RTN","ORWPCE2",120,0)
 S ORY=0
"RTN","ORWPCE2",121,0)
 S ORYS("CODE")=TEST
"RTN","ORWPCE2",122,0)
 S ORYS("STAFF")=USER
"RTN","ORWPCE2",123,0)
 D PRIVL^YTAPI5(.ORANS,.ORYS)
"RTN","ORWPCE2",124,0)
 I $G(ORANS(1))="[DATA]" S ORY=+$P($G(ORANS(2)),U,1)
"RTN","ORWPCE2",125,0)
 Q
"RTN","ORWPCE2",126,0)
ANYTIME(ORY) ;Returns status of the ORWPCE ANYTIME ENCOUNTERS parameter
"RTN","ORWPCE2",127,0)
 N SRV
"RTN","ORWPCE2",128,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORWPCE2",129,0)
 S ORY=$$GET^XPAR(DUZ_";VA(200,^SRV.`"_+$G(SRV)_"^DIV^SYS","ORWPCE ANYTIME ENCOUNTERS",1,"Q")
"RTN","ORWPCE2",130,0)
 I +ORY S ORY=1
"RTN","ORWPCE2",131,0)
 Q
"RTN","ORWPCE2",132,0)
AUTOVSIT(ORY,LOC) ; Returns TRUE if automatic selection of Visit Type
"RTN","ORWPCE2",133,0)
 N SRV
"RTN","ORWPCE2",134,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORWPCE2",135,0)
 S ORY=$$GET^XPAR(DUZ_";VA(200,^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS","ORWPCE DISABLE AUTO VISIT TYPE",1,"Q")
"RTN","ORWPCE2",136,0)
 I +ORY S ORY=1
"RTN","ORWPCE2",137,0)
 S ORY='ORY
"RTN","ORWPCE2",138,0)
 Q
"RTN","ORWPCE2",139,0)
DOCHKOUT(ORY,LOC) ; Returns TRUE if automatic selection of Visit Type
"RTN","ORWPCE2",140,0)
 N SRV
"RTN","ORWPCE2",141,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORWPCE2",142,0)
 S ORY=$$GET^XPAR(DUZ_";VA(200,^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS","ORWPCE DISABLE AUTO CHECKOUT",1,"Q")
"RTN","ORWPCE2",143,0)
 I +ORY S ORY=1
"RTN","ORWPCE2",144,0)
 S ORY='ORY
"RTN","ORWPCE2",145,0)
 Q
"RTN","ORWPCE2",146,0)
CHKOUT(LOC) ; Returns TRUE if automatic selection of Visit Type
"RTN","ORWPCE2",147,0)
 N ORY
"RTN","ORWPCE2",148,0)
 D DOCHKOUT(.ORY,LOC)
"RTN","ORWPCE2",149,0)
 Q ORY
"RTN","ORWPCE2",150,0)
EXCLUDED(ORY,LOC,TYPE) ; Returns list of excluded PCE data elements
"RTN","ORWPCE2",151,0)
 N SRV,PARAM
"RTN","ORWPCE2",152,0)
 S PARAM=$S(TYPE=1:"IMMUNIZATIONS",TYPE=2:"SKIN TESTS",TYPE=3:"PATIENT ED",TYPE=4:"HEALTH FACTORS",TYPE=5:"EXAMS",1:"")
"RTN","ORWPCE2",153,0)
 Q:PARAM=""
"RTN","ORWPCE2",154,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORWPCE2",155,0)
 S PARAM="ORWPCE EXCLUDE "_PARAM
"RTN","ORWPCE2",156,0)
 D GETLST^XPAR(.ORY,"USR^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG",PARAM,"Q",.ORERR)
"RTN","ORWPCE2",157,0)
 Q
"RTN","ORWPCE2",158,0)
ISCLINIC(ORY,ORLOC) ; Returns TRUE if location is a clinic
"RTN","ORWPCE2",159,0)
 N ORTYP
"RTN","ORWPCE2",160,0)
 S ORY=0
"RTN","ORWPCE2",161,0)
 S ORTYP=$$GET1^DIQ(44,+ORLOC,2,"I")
"RTN","ORWPCE2",162,0)
 I (ORTYP="C")!(ORTYP="M") S ORY=1
"RTN","ORWPCE2",163,0)
 Q
"RTN","ORWPCE2",164,0)
HNCOK(ORY) ; Returns true if Head and/or Neck Cancer is enabled
"RTN","ORWPCE2",165,0)
 S ORY=0
"RTN","ORWPCE2",166,0)
 I $$PATCH^XPDUTL("DG*5.3*397"),$$PATCH^XPDUTL("SD*5.3*244"),$$PATCH^XPDUTL("PX*1.0*111"),$$PATCH^XPDUTL("IVM*2.0*46") S ORY=1
"RTN","ORWPCE2",167,0)
 Q
"RTN","ORWPCE2",168,0)
 ;
"RTN","ORWPCE2",169,0)
CODACTIV(ORY,ORCODE,ORAPP,ORDATE)       ; Is code active on the given date?
"RTN","ORWPCE2",170,0)
 ; Remote procedure:  ORWPCE ACTIVE CODE
"RTN","ORWPCE2",171,0)
 ; ORCODE = ICD or CPT code to be checked
"RTN","ORWPCE2",172,0)
 ; ORAPP  = "ICD" or "CHP"
"RTN","ORWPCE2",173,0)
 ; ORDATE = Date to be checked (defaults to current date)
"RTN","ORWPCE2",174,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE2",175,0)
 S ORY=1
"RTN","ORWPCE2",176,0)
 I ORAPP="ICD" D
"RTN","ORWPCE2",177,0)
 . I $$PATCH^XPDUTL("ICD*18.0*6") S ORY=+$$STATCHK^ICDAPIU(ORCODE,ORDATE)
"RTN","ORWPCE2",178,0)
 E  I ORAPP="CHP" D
"RTN","ORWPCE2",179,0)
 . I $$PATCH^XPDUTL("ICPT*6.0*14") S ORY=+$$STATCHK^ICPTAPIU(ORCODE,ORDATE)
"RTN","ORWPCE2",180,0)
 Q
"RTN","ORWPCE2",181,0)
ICDACTIV(ORCODE,ORDATE) ; Check for active ICD code
"RTN","ORWPCE2",182,0)
 D CODACTIV(.ORY,ORCODE,"ICD",$G(ORDATE))
"RTN","ORWPCE2",183,0)
 Q +ORY
"RTN","ORWPCE2",184,0)
CPTACTIV(ORCODE,ORDATE) ; Check for active CPT code
"RTN","ORWPCE2",185,0)
 D CODACTIV(.ORY,ORCODE,"CHP",$G(ORDATE))
"RTN","ORWPCE2",186,0)
 Q +ORY
"RTN","ORWPS")
0^7^B19796500
"RTN","ORWPS",1,0)
ORWPS ; SLC/KCM/JLI/REV - Meds Tab; 03/17/03
"RTN","ORWPS",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132,141,173**;Dec 17, 1997
"RTN","ORWPS",3,0)
COVER(LST,DFN)  ; retrieve meds for cover sheet
"RTN","ORWPS",4,0)
 K ^TMP("PS",$J)
"RTN","ORWPS",5,0)
 D OCL^PSOORRL(DFN,"","")
"RTN","ORWPS",6,0)
 N ILST,ITMP,X S ILST=0
"RTN","ORWPS",7,0)
 S ITMP="" F  S ITMP=$O(^TMP("PS",$J,ITMP)) Q:'ITMP  D
"RTN","ORWPS",8,0)
 . S X=^TMP("PS",$J,ITMP,0)
"RTN","ORWPS",9,0)
 . I '$L($P(X,U,2)) S X="??"  ; show something if drug empty
"RTN","ORWPS",10,0)
 . S LST($$NXT)=$P(X,U,1,2)_U_$P(X,U,8,9)
"RTN","ORWPS",11,0)
 K ^TMP("PS",$J)
"RTN","ORWPS",12,0)
 Q
"RTN","ORWPS",13,0)
DT(X) ; -- Returns FM date for X
"RTN","ORWPS",14,0)
 N Y,%DT S %DT="T",Y="" D:X'="" ^%DT
"RTN","ORWPS",15,0)
 Q Y
"RTN","ORWPS",16,0)
 ;
"RTN","ORWPS",17,0)
ACTIVE(LST,DFN) ; retrieve active inpatient & outpatient meds
"RTN","ORWPS",18,0)
 K ^TMP("PS",$J)
"RTN","ORWPS",19,0)
 N BEG,END,CTX
"RTN","ORWPS",20,0)
 S (BEG,END,CTX)=""
"RTN","ORWPS",21,0)
 S CTX=$$GET^XPAR("ALL","ORCH CONTEXT MEDS")
"RTN","ORWPS",22,0)
 S BEG=$$DT($P(CTX,";")),END=$$DT($P(CTX,";",2))
"RTN","ORWPS",23,0)
 D OCL^PSOORRL(DFN,BEG,END)
"RTN","ORWPS",24,0)
 N ITMP,FIELDS,INSTRUCT,COMMENTS,TYPE,ILST,J S ILST=0
"RTN","ORWPS",25,0)
 S ITMP="" F  S ITMP=$O(^TMP("PS",$J,ITMP),-1) Q:'ITMP  D
"RTN","ORWPS",26,0)
 . K INSTRUCT,COMMENTS
"RTN","ORWPS",27,0)
 . S (INSTRUCT,COMMENTS)="",FIELDS=^TMP("PS",$J,ITMP,0)
"RTN","ORWPS",28,0)
 . I +$P(FIELDS,"^",8),$D(^OR(100,+$P(FIELDS,"^",8),8,"C","XX")) D
"RTN","ORWPS",29,0)
 . . S $P(^TMP("PS",$J,ITMP,0),"^",2)="*"_$P(^TMP("PS",$J,ITMP,0),"^",2) ;dan testing
"RTN","ORWPS",30,0)
 . S TYPE=$S($P($P(FIELDS,U),";",2)="O":"OP",1:"UD")
"RTN","ORWPS",31,0)
 . I $O(^TMP("PS",$J,ITMP,"A",0))>0 S TYPE="IV"
"RTN","ORWPS",32,0)
 . I $O(^TMP("PS",$J,ITMP,"B",0))>0 S TYPE="IV"
"RTN","ORWPS",33,0)
 . I TYPE="UD" D UDINST(.INSTRUCT,ITMP)
"RTN","ORWPS",34,0)
 . I TYPE="OP" D OPINST(.INSTRUCT,ITMP)
"RTN","ORWPS",35,0)
 . I TYPE="IV" D IVINST(.INSTRUCT,ITMP)
"RTN","ORWPS",36,0)
 . I (TYPE="UD")!(TYPE="IV") D SETMULT(.COMMENTS,ITMP,"SIO")
"RTN","ORWPS",37,0)
 . I $D(COMMENTS(1)) S COMMENTS(1)="\"_COMMENTS(1)
"RTN","ORWPS",38,0)
 . S LST($$NXT)="~"_TYPE_U_FIELDS
"RTN","ORWPS",39,0)
 . S J=0 F  S J=$O(INSTRUCT(J)) Q:'J  S LST($$NXT)=INSTRUCT(J)
"RTN","ORWPS",40,0)
 . S J=0 F  S J=$O(COMMENTS(J)) Q:'J  S LST($$NXT)="t"_COMMENTS(J)
"RTN","ORWPS",41,0)
 K ^TMP("PS",$J)
"RTN","ORWPS",42,0)
 Q
"RTN","ORWPS",43,0)
NXT() ; increment ILST
"RTN","ORWPS",44,0)
 S ILST=ILST+1
"RTN","ORWPS",45,0)
 Q ILST
"RTN","ORWPS",46,0)
 ;
"RTN","ORWPS",47,0)
UDINST(Y,INDEX) ; assembles instructions for a unit dose order
"RTN","ORWPS",48,0)
 N I,X
"RTN","ORWPS",49,0)
 S X=^TMP("PS",$J,INDEX,0)
"RTN","ORWPS",50,0)
 S Y(1)=" "_$P(X,U,2),Y=1
"RTN","ORWPS",51,0)
 S X=$S($L($P(X,U,6)):$P(X,U,6),1:$P(X,U,7))
"RTN","ORWPS",52,0)
 I $L(X) S Y=2,Y(2)=X
"RTN","ORWPS",53,0)
 E  S Y=1 D SETMULT(.Y,INDEX,"SIG")
"RTN","ORWPS",54,0)
 S Y(2)="\Give: "_$G(Y(2)),Y=$G(Y,2)
"RTN","ORWPS",55,0)
 D SETMULT(.Y,INDEX,"MDR"),SETMULT(.Y,INDEX,"SCH")
"RTN","ORWPS",56,0)
 F I=3:1:Y S Y(I)=" "_Y(I)
"RTN","ORWPS",57,0)
 Q
"RTN","ORWPS",58,0)
OPINST(Y,INDEX) ; assembles instructions for an outpatient prescription
"RTN","ORWPS",59,0)
 N I,X
"RTN","ORWPS",60,0)
 S X=^TMP("PS",$J,INDEX,0)
"RTN","ORWPS",61,0)
 S Y(1)=" "_$P(X,U,2),Y=1
"RTN","ORWPS",62,0)
 I $L($P(X,U,12)) S Y(1)=Y(1)_"  Qty: "_$P(X,U,12)
"RTN","ORWPS",63,0)
 I $L($P(X,U,11)) S Y(1)=Y(1)_" for "_$P(X,U,11)_" days"
"RTN","ORWPS",64,0)
 D SETMULT(.Y,INDEX,"SIG")
"RTN","ORWPS",65,0)
 I Y=1 D
"RTN","ORWPS",66,0)
 . D SETMULT(.Y,INDEX,"SIO")
"RTN","ORWPS",67,0)
 . D SETMULT(.Y,INDEX,"MDR")
"RTN","ORWPS",68,0)
 . D SETMULT(.Y,INDEX,"SCH")
"RTN","ORWPS",69,0)
 S Y(2)="\ Sig: "_$G(Y(2))
"RTN","ORWPS",70,0)
 F I=3:1:Y S Y(I)=" "_Y(I)
"RTN","ORWPS",71,0)
 Q
"RTN","ORWPS",72,0)
IVINST(Y,INDEX) ; assembles instructions for an IV order
"RTN","ORWPS",73,0)
 N SOLN1,I
"RTN","ORWPS",74,0)
 S Y=0 D SETMULT(.Y,INDEX,"A") S SOLN1=Y+1
"RTN","ORWPS",75,0)
 D SETMULT(.Y,INDEX,"B")
"RTN","ORWPS",76,0)
 I $D(Y(SOLN1)),$L($P(FIELDS,U,2)) S Y(SOLN1)="in "_Y(SOLN1)
"RTN","ORWPS",77,0)
 S SOLN1=Y+1
"RTN","ORWPS",78,0)
 D SETMULT(.Y,INDEX,"SCH") S:$D(Y(SOLN1)) Y(SOLN1)=" "_Y(SOLN1)
"RTN","ORWPS",79,0)
 F I=1:1:Y S Y(I)="\"_$TR(Y(I),U," ")
"RTN","ORWPS",80,0)
 I $D(Y(1)) S Y(1)=" "_$E(Y(1),2,999)
"RTN","ORWPS",81,0)
 S Y(Y)=Y(Y)_" "_$P(^TMP("PS",$J,INDEX,0),U,3)
"RTN","ORWPS",82,0)
 Q
"RTN","ORWPS",83,0)
SETMULT(Y,INDEX,SUB) ; appends the multiple at the subscript to Y
"RTN","ORWPS",84,0)
 N I,X S I=0 F  S I=$O(^TMP("PS",$J,INDEX,SUB,I)) Q:'I  S X=$G(^(I,0)) D
"RTN","ORWPS",85,0)
 . I SUB="B",$L($P(X,U,3)) S X=$P(X,U)_" "_$P(X,U,3)_"^"_$P(X,U,2)
"RTN","ORWPS",86,0)
 . S Y=Y+1,Y(Y)=X
"RTN","ORWPS",87,0)
 Q
"RTN","ORWPS",88,0)
COMPRESS(Y) ; concatenate Y subscripts into smallest possible number
"RTN","ORWPS",89,0)
 N I,J,X S J=1,X(J)=""
"RTN","ORWPS",90,0)
 S I=0 F  S I=$O(Y(I)) Q:'I  D
"RTN","ORWPS",91,0)
 . I ($L(Y(I))+$L(X(J)))>245 S J=J+1,X(J)=""
"RTN","ORWPS",92,0)
 . S X(J)=X(J)_$S($L(X(J)):" ",1:"")_Y(I)
"RTN","ORWPS",93,0)
 K Y M Y=X
"RTN","ORWPS",94,0)
 Q
"RTN","ORWPS",95,0)
DETAIL(ROOT,DFN,ID) ; -- show details for a med order
"RTN","ORWPS",96,0)
 N LCNT,ORVP
"RTN","ORWPS",97,0)
 S LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWPS",98,0)
 D MEDS^ORCXPND1
"RTN","ORWPS",99,0)
 S ROOT=$NA(^TMP("ORXPND",$J))
"RTN","ORWPS",100,0)
 Q
"RTN","ORWPS",101,0)
MEDHIST(ORROOT,DFN,ORIFN)       ; -- show admin history for a med  (RV)
"RTN","ORWPS",102,0)
 N ORPSID,IVPKG,CKPKG,ORPHMID
"RTN","ORWPS",103,0)
 S ORPSID=+$P($$OI^ORX8(ORIFN),U,3),IVPKG=0
"RTN","ORWPS",104,0)
 S ORROOT=$NA(^TMP("ORHIST",$J)) K @ORROOT
"RTN","ORWPS",105,0)
 S IVPKG=$O(^DIC(9.4,"B","IV MEDICATIONS",IVPKG))  ; DBIA #2058
"RTN","ORWPS",106,0)
 S CKPKG=$$PATCH^XPDUTL("PSB*2.0*19")
"RTN","ORWPS",107,0)
 I $P($G(^OR(100,+ORIFN,0)),U,14)=IVPKG D  Q
"RTN","ORWPS",108,0)
 . I 'CKPKG S @ORROOT@(0)="Medication Administration History is not available at this time for IV fluids."
"RTN","ORWPS",109,0)
 . I CKPKG D
"RTN","ORWPS",110,0)
 . . S ORPHMID=$G(^OR(100,+ORIFN,4))  ;Pharmacy order number
"RTN","ORWPS",111,0)
 . . D RPC^PSBO(.ORROOT,"PM",DFN,"","","","","","","","","",ORPHMID)  ;DBIA #3955
"RTN","ORWPS",112,0)
 I '$L($T(HISTORY^PSBMLHS)) D  Q
"RTN","ORWPS",113,0)
 . S @ORROOT@(0)="This report is only available using BCMA version 2.0."
"RTN","ORWPS",114,0)
 D HISTORY^PSBMLHS(.ORROOT,DFN,ORPSID)  ; DBIA #3459 for BCMA v2.0
"RTN","ORWPS",115,0)
 Q
"RTN","ORWTPD")
0^10^B13429999
"RTN","ORWTPD",1,0)
ORWTPD ; slc/jdl - Personal Reference Tool ;6/20/02 11:40am [7/22/03 11:27am]
"RTN","ORWTPD",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**109,120,132,148,141,173**;Dec 17,1997
"RTN","ORWTPD",3,0)
 ;; Allow user to customize the CPRS reports date/time
"RTN","ORWTPD",4,0)
 ;; and max occurences setting
"RTN","ORWTPD",5,0)
 ;
"RTN","ORWTPD",6,0)
SUDF(Y,VALUE) ;----Set user default for all CPRS reports
"RTN","ORWTPD",7,0)
 N ORERR S ORERR=""
"RTN","ORWTPD",8,0)
 I VALUE=$$GET^XPAR("DIV^SYS^PKG","ORWRP TIME/OCC LIMITS ALL",1,"I") D DEL^XPAR(DUZ_";VA(200,","ORWRP TIME/OCC LIMITS ALL",1,.ORERR) K ORERR Q
"RTN","ORWTPD",9,0)
 E  D EN^XPAR(DUZ_";VA(200,","ORWRP TIME/OCC LIMITS ALL",1,VALUE,.ORERR)
"RTN","ORWTPD",10,0)
 S Y=1
"RTN","ORWTPD",11,0)
 K ORERR,VALUES1
"RTN","ORWTPD",12,0)
 Q
"RTN","ORWTPD",13,0)
 ;
"RTN","ORWTPD",14,0)
SUINDV(Y,RPTS,VALUE) ;----Set user individual time/occ setting
"RTN","ORWTPD",15,0)
 ; RPTS format: RPTIen^RPTIen^RPTIen such as 1^2^3
"RTN","ORWTPD",16,0)
 I $L(RPTS)=0 Q
"RTN","ORWTPD",17,0)
 N ORERR,RPTID,P1,P7 S ORERR=0
"RTN","ORWTPD",18,0)
 S (P1,P7)=""
"RTN","ORWTPD",19,0)
 F I=1:1:$L(RPTS,"^") S RPTID=$P(RPTS,U,I) D
"RTN","ORWTPD",20,0)
 . S P1=$P($G(^ORD(101.24,RPTID,0)),U),P7=$P($G(^(0)),U,7)
"RTN","ORWTPD",21,0)
 . I "02345"[P7,(P1'="ORRP IMAGING") D DEL^XPAR("USR.`"_DUZ,"ORWRP TIME/OCC LIMITS INDV",RPTID,.ORERR) Q
"RTN","ORWTPD",22,0)
 . D EN^XPAR(DUZ_";VA(200,","ORWRP TIME/OCC LIMITS INDV",RPTID,VALUE,.ORERR)
"RTN","ORWTPD",23,0)
 Q
"RTN","ORWTPD",24,0)
 ;
"RTN","ORWTPD",25,0)
GETIMG(Y,RPT) ; ----Get Image (local only) Time/Occ
"RTN","ORWTPD",26,0)
 N IMGID,BEG,END,MAX
"RTN","ORWTPD",27,0)
 S IMGID=0,Y=""
"RTN","ORWTPD",28,0)
 S IMGID=$O(^ORD(101.24,"B","ORRP IMAGING",0))
"RTN","ORWTPD",29,0)
 D GETINDV(.Y,IMGID)
"RTN","ORWTPD",30,0)
 I $L(Y) D
"RTN","ORWTPD",31,0)
 . S BEG=$$DT^ORCHTAB1($P(Y,";"))
"RTN","ORWTPD",32,0)
 . S END=$$DT^ORCHTAB1($P(Y,";",2))
"RTN","ORWTPD",33,0)
 . S MAX=$P(Y,";",3)
"RTN","ORWTPD",34,0)
 . S Y=BEG_"^"_END_"^"_MAX
"RTN","ORWTPD",35,0)
 I Y="" D GETDEF^ORWRA(.Y)
"RTN","ORWTPD",36,0)
 Q
"RTN","ORWTPD",37,0)
 ;
"RTN","ORWTPD",38,0)
GETINDV(Y,RPT) ;----Get time/occ limits for this report
"RTN","ORWTPD",39,0)
 ;RPT:  Report IEN of 101.24
"RTN","ORWTPD",40,0)
 N CTX,X0,X4,X,IMGCTX
"RTN","ORWTPD",41,0)
 S X0=$G(^ORD(101.24,RPT,0)),X4=$G(^(4))
"RTN","ORWTPD",42,0)
 I "02345"[($P(X0,U,7)),($P(X0,U)'="ORRP IMAGING") Q
"RTN","ORWTPD",43,0)
 S CTX="^DIV^SYS^PKG"
"RTN","ORWTPD",44,0)
 S Y=$$GET^XPAR("USR.`"_DUZ_CTX,"ORWRP TIME/OCC LIMITS INDV",RPT,"I")
"RTN","ORWTPD",45,0)
 S:'$L(Y) Y=$$GET^XPAR("USR.`"_DUZ_CTX,"ORWRP TIME/OCC LIMITS ALL",1,"I")
"RTN","ORWTPD",46,0)
 I $P(^ORD(101.24,RPT,0),U,7)=1 S $P(Y,";",3)=""
"RTN","ORWTPD",47,0)
 I $P(X4,"^",2) S X=$P($P(Y,";"),"-",2) I X,X>$P(X4,"^",2) S Y="T-"_$P(X4,"^",2)_";"_$P(Y,";",2,99)
"RTN","ORWTPD",48,0)
 Q
"RTN","ORWTPD",49,0)
 ;
"RTN","ORWTPD",50,0)
GETSETS(Y) ;----Get time/occ limit set for each report
"RTN","ORWTPD",51,0)
 N I,CNT,CAT S I=0,CNT=1,RST=""
"RTN","ORWTPD",52,0)
 F  S I=$O(^ORD(101.24,I)) Q:'I   D
"RTN","ORWTPD",53,0)
 .I $P($G(^ORD(101.24,I,0)),U,8)="R",$P($G(^ORD(101.24,I,0)),U,12)'="M" D
"RTN","ORWTPD",54,0)
 ..S CAT=$P(^ORD(101.24,I,0),U,7) I $S(CAT=1:1,CAT=6:1,1:0)!($P(^(0),U)="ORRP IMAGING") D
"RTN","ORWTPD",55,0)
 ...D GETINDV(.RST,I)
"RTN","ORWTPD",56,0)
 ...I $L($P(^ORD(101.24,I,2),U,4))>0 S Y(CNT)=I_U_$P(^ORD(101.24,I,2),U,4)_U_RST
"RTN","ORWTPD",57,0)
 ...E  S Y(CNT)=I_U_$P(^ORD(101.24,I,2),U,3)_U_RST
"RTN","ORWTPD",58,0)
 ... S CNT=CNT+1
"RTN","ORWTPD",59,0)
 K I,CNT,RST,CAT
"RTN","ORWTPD",60,0)
 Q
"RTN","ORWTPD",61,0)
 ;
"RTN","ORWTPD",62,0)
GETDFLT(Y) ;----Get default time/occ limits for all reports
"RTN","ORWTPD",63,0)
 N VALUE
"RTN","ORWTPD",64,0)
 S Y=$$GET^XPAR("USR.`"_DUZ_"^DIV^SYS^PKG","ORWRP TIME/OCC LIMITS ALL",1,"I")
"RTN","ORWTPD",65,0)
 K VALUE
"RTN","ORWTPD",66,0)
 Q
"RTN","ORWTPD",67,0)
 ;
"RTN","ORWTPD",68,0)
RSDFLT(Y) ;----Retrieve sys/pkg level default time/occ setting
"RTN","ORWTPD",69,0)
 N VALUE
"RTN","ORWTPD",70,0)
 S Y=$$GET^XPAR("DIV^SYS^PKG","ORWRP TIME/OCC LIMITS ALL",1,"I")
"RTN","ORWTPD",71,0)
 Q
"RTN","ORWTPD",72,0)
 ;
"RTN","ORWTPD",73,0)
DELDFLT(Y) ;----Delete user's default setting 
"RTN","ORWTPD",74,0)
 N ORERR S ORERR=""
"RTN","ORWTPD",75,0)
 D NDEL^XPAR(DUZ_";VA(200,","ORWRP TIME/OCC LIMITS INDV",.ORERR)
"RTN","ORWTPD",76,0)
 D DEL^XPAR(DUZ_";VA(200,","ORWRP TIME/OCC LIMITS ALL",1,.ORERR)
"RTN","ORWTPD",77,0)
 K ORERR
"RTN","ORWTPD",78,0)
 Q
"RTN","ORWTPD",79,0)
 ;
"RTN","ORWTPD",80,0)
ACTDF(Y) ;----Make default setting take action for each report
"RTN","ORWTPD",81,0)
 N IND,DFLT,VALUE,X,X0,X4,MAX,DFLT1
"RTN","ORWTPD",82,0)
 S DFLT=$$GET^XPAR("USR.`"_DUZ_"^DIV^SYS^PKG","ORWRP TIME/OCC LIMITS ALL",1,"I")
"RTN","ORWTPD",83,0)
 S IND=0,X=$P($P(DFLT,";"),"-",2)
"RTN","ORWTPD",84,0)
 F  S IND=$O(^ORD(101.24,IND)) Q:'IND  S X0=$G(^(IND,0)),X4=$G(^(4)) D
"RTN","ORWTPD",85,0)
 . I $P(X0,"^",8)="R",$P(X0,"^",12)'="M" D
"RTN","ORWTPD",86,0)
 .. S MAX=$P(X4,"^",2),DFLT1=DFLT
"RTN","ORWTPD",87,0)
 .. I MAX,X,X>MAX S DFLT1="T-"_MAX_";"_$P(DFLT,";",2,99)
"RTN","ORWTPD",88,0)
 .. D SUINDV(.Y,IND,DFLT1)
"RTN","ORWTPD",89,0)
 Q
"RTN","ORWTPD",90,0)
GETOCM(ORY) ;Get value of "ORCH CONTEXT MEDS"
"RTN","ORWTPD",91,0)
 S ORY=$$GET^XPAR("ALL","ORCH CONTEXT MEDS")
"RTN","ORWTPD",92,0)
 Q
"RTN","ORWTPD",93,0)
 ;
"RTN","ORWTPD",94,0)
PUTOCM(ORY,ORVAL) ;Set value of "ORCH CONTEXT MEDS"
"RTN","ORWTPD",95,0)
 Q:'$L(ORVAL)
"RTN","ORWTPD",96,0)
 N ORERR S ORERR=""
"RTN","ORWTPD",97,0)
 D EN^XPAR(DUZ_";VA(200,","ORCH CONTEXT MEDS",1,ORVAL,.ORERR)
"RTN","ORWTPD",98,0)
 S ORY=ORERR
"RTN","ORWTPD",99,0)
 Q
"RTN","ORWTPD",100,0)
 ;
"RTN","ORWTPL")
0^20^B24336317
"RTN","ORWTPL",1,0)
ORWTPL ; SLC/STAFF Personal Preference - Lists ;4/30/01  11:04 [5/19/03 3:11pm]
"RTN","ORWTPL",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,109,173**;Oct 24, 2000
"RTN","ORWTPL",3,0)
 ;
"RTN","ORWTPL",4,0)
NEWLIST(VAL,LISTNAME,USER) ; from ORWTPP
"RTN","ORWTPL",5,0)
 ; set user's new personal list
"RTN","ORWTPL",6,0)
 S LISTNAME=$G(LISTNAME)
"RTN","ORWTPL",7,0)
 I '$L(LISTNAME) S VAL="^invalid list name" Q
"RTN","ORWTPL",8,0)
 I $O(^OR(100.21,"B",LISTNAME,0)) S VAL="^invalid list name - duplicate of another name" Q
"RTN","ORWTPL",9,0)
 ;*** check input transform, duplicate name for same user
"RTN","ORWTPL",10,0)
 N DA,DIK,NUM
"RTN","ORWTPL",11,0)
 L +^OR(100.21,0):20 I '$T S VAL="^unable to set up" Q
"RTN","ORWTPL",12,0)
 S NUM=1+$P(^OR(100.21,0),U,3)
"RTN","ORWTPL",13,0)
 F  Q:'$D(^OR(100.21,NUM,0))  S NUM=NUM+1
"RTN","ORWTPL",14,0)
 S $P(^OR(100.21,0),U,3)=NUM,$P(^(0),U,4)=$P(^(0),U,4)+1
"RTN","ORWTPL",15,0)
 S ^OR(100.21,NUM,0)=LISTNAME_"^P"
"RTN","ORWTPL",16,0)
 L -^OR(100.21,0)
"RTN","ORWTPL",17,0)
 K ^OR(100.21,NUM,1),^(2),^(10)
"RTN","ORWTPL",18,0)
 S ^OR(100.21,NUM,1,0)="^100.212PA^"_USER_"^1"
"RTN","ORWTPL",19,0)
 S ^OR(100.21,NUM,1,USER,0)=USER
"RTN","ORWTPL",20,0)
 S DIK="^OR(100.21,",DA=NUM
"RTN","ORWTPL",21,0)
 D IX1^DIK
"RTN","ORWTPL",22,0)
 S VAL=NUM_U_LISTNAME
"RTN","ORWTPL",23,0)
 Q
"RTN","ORWTPL",24,0)
 ;
"RTN","ORWTPL",25,0)
DELLIST(OK,LISTNUM,USER) ; from ORWTPP
"RTN","ORWTPL",26,0)
 ; delete user's personal list
"RTN","ORWTPL",27,0)
 N DA,DIK
"RTN","ORWTPL",28,0)
 S LISTNUM=+$G(LISTNUM),OK=1
"RTN","ORWTPL",29,0)
 I '$O(^OR(100.21,"C",USER,LISTNUM,0)) S OK=0 Q
"RTN","ORWTPL",30,0)
 I $P($G(^OR(100.21,LISTNUM,0)),U,2)'="P" S OK=0 Q
"RTN","ORWTPL",31,0)
 S DA=LISTNUM,DIK="^OR(100.21,"
"RTN","ORWTPL",32,0)
 D ^DIK
"RTN","ORWTPL",33,0)
 Q
"RTN","ORWTPL",34,0)
 ;
"RTN","ORWTPL",35,0)
SAVELIST(OK,PLIST,LISTNUM,USER) ; from ORWTPP
"RTN","ORWTPL",36,0)
 ; save user's personal list changes
"RTN","ORWTPL",37,0)
 N CNT,DA,DFN,DIK,NUM K DA
"RTN","ORWTPL",38,0)
 S LISTNUM=+$G(LISTNUM),OK=1
"RTN","ORWTPL",39,0)
 I $P($G(^OR(100.21,LISTNUM,0)),U,2)'="P" S OK=0 Q
"RTN","ORWTPL",40,0)
 I '$D(^OR(100.21,"C",USER,LISTNUM)) S OK=0 Q
"RTN","ORWTPL",41,0)
 I '$D(^OR(100.21,LISTNUM,10,0))#2 S ^(0)="^100.2101AV^"
"RTN","ORWTPL",42,0)
 S DA(1)=LISTNUM,DIK="^OR(100.21,"_LISTNUM_",10,"
"RTN","ORWTPL",43,0)
 S DA=0 F  S DA=$O(^OR(100.21,LISTNUM,10,DA)) Q:DA<1  D ^DIK
"RTN","ORWTPL",44,0)
 K DA
"RTN","ORWTPL",45,0)
 S CNT=0
"RTN","ORWTPL",46,0)
 S NUM=0 F  S NUM=$O(PLIST(NUM)) Q:NUM<1  D
"RTN","ORWTPL",47,0)
 .S DFN=+PLIST(NUM) I 'DFN Q
"RTN","ORWTPL",48,0)
 .S CNT=CNT+1
"RTN","ORWTPL",49,0)
 .S ^OR(100.21,LISTNUM,10,CNT,0)=DFN_";DPT("
"RTN","ORWTPL",50,0)
 S ^OR(100.21,LISTNUM,10,0)="^100.2101AV^"_CNT_U_CNT
"RTN","ORWTPL",51,0)
 S DA=LISTNUM,DIK="^OR(100.21,"
"RTN","ORWTPL",52,0)
 D IX1^DIK
"RTN","ORWTPL",53,0)
 Q
"RTN","ORWTPL",54,0)
 ;
"RTN","ORWTPL",55,0)
LSDEF(INFO,USER) ; from ORWTPP
"RTN","ORWTPL",56,0)
 ; get user's list sources
"RTN","ORWTPL",57,0)
 N TYPE
"RTN","ORWTPL",58,0)
 S INFO=""
"RTN","ORWTPL",59,0)
 F TYPE="P","S","T","W","C" D
"RTN","ORWTPL",60,0)
 .S INFO=INFO_$P($$LISTSRC^ORQPTQ11(USER,TYPE),U)_U
"RTN","ORWTPL",61,0)
 Q
"RTN","ORWTPL",62,0)
 ;
"RTN","ORWTPL",63,0)
SORTDEF(SORT,USER) ; from ORWTPP
"RTN","ORWTPL",64,0)
 ; get user's sort order - Modified by PKS - 8/30/2001
"RTN","ORWTPL",65,0)
 N ORSECT
"RTN","ORWTPL",66,0)
 S ORSECT=$G(^VA(200,USER,5))
"RTN","ORWTPL",67,0)
 I +ORSECT>0 S ORSECT=$P(ORSECT,U)
"RTN","ORWTPL",68,0)
 S SORT=$$GET^XPAR("USR.`"_USER_"^SRV.`"_$G(ORSECT)_"^DIV^SYS^PKG","ORLP DEFAULT LIST ORDER",1,"I") I SORT']"" S SORT="A"
"RTN","ORWTPL",69,0)
 Q
"RTN","ORWTPL",70,0)
 ;
"RTN","ORWTPL",71,0)
CLDAYS(DAYS,USER) ; from ORWTPP
"RTN","ORWTPL",72,0)
 ; get user's clinic defaults
"RTN","ORWTPL",73,0)
 N DAY
"RTN","ORWTPL",74,0)
 S DAYS=""
"RTN","ORWTPL",75,0)
 F DAY="MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY" D
"RTN","ORWTPL",76,0)
 .S DAYS=DAYS_$$GET^XPAR("USR.`"_USER,"ORLP DEFAULT CLINIC "_DAY,1,"I")_U
"RTN","ORWTPL",77,0)
 Q
"RTN","ORWTPL",78,0)
 ;
"RTN","ORWTPL",79,0)
CLRANGE(RANGE,USER) ; from ORWTPP
"RTN","ORWTPL",80,0)
 ; get user's default clinic start, stop dates
"RTN","ORWTPL",81,0)
 N RNG
"RTN","ORWTPL",82,0)
 S RANGE=""
"RTN","ORWTPL",83,0)
 F RNG="START","STOP" D
"RTN","ORWTPL",84,0)
 .S RANGE=RANGE_$$GET^XPAR("USR.`"_USER,"ORLP DEFAULT CLINIC "_RNG_" DATE",1,"I")_U
"RTN","ORWTPL",85,0)
 Q
"RTN","ORWTPL",86,0)
 ;
"RTN","ORWTPL",87,0)
SAVECD(OK,INFO,USER) ; from ORWTPP
"RTN","ORWTPL",88,0)
 ; save user's clinic defaults
"RTN","ORWTPL",89,0)
 N FRI,MON,SAT,START,STOP,SUN,THURS,TUES,WED
"RTN","ORWTPL",90,0)
 S OK=1
"RTN","ORWTPL",91,0)
 S START=+$P(INFO,U,1) S START=$S(START=0:"T",START<0:"T"_START,1:"T+"_START)
"RTN","ORWTPL",92,0)
 S STOP=+$P(INFO,U,2) S STOP=$S(STOP=0:"T",STOP<0:"T"_STOP,1:"T+"_STOP)
"RTN","ORWTPL",93,0)
 S MON=+$P(INFO,U,3),MON=$S('MON:"@",1:"`"_MON)
"RTN","ORWTPL",94,0)
 S TUES=+$P(INFO,U,4),TUES=$S('TUES:"@",1:"`"_TUES)
"RTN","ORWTPL",95,0)
 S WED=+$P(INFO,U,5),WED=$S('WED:"@",1:"`"_WED)
"RTN","ORWTPL",96,0)
 S THURS=+$P(INFO,U,6),THURS=$S('THURS:"@",1:"`"_THURS)
"RTN","ORWTPL",97,0)
 S FRI=+$P(INFO,U,7),FRI=$S('FRI:"@",1:"`"_FRI)
"RTN","ORWTPL",98,0)
 S SAT=+$P(INFO,U,8),SAT=$S('SAT:"@",1:"`"_SAT)
"RTN","ORWTPL",99,0)
 S SUN=+$P(INFO,U,9),SUN=$S('SUN:"@",1:"`"_SUN)
"RTN","ORWTPL",100,0)
 D EN^XPAR(USER_";VA(200,","ORLP DEFAULT CLINIC START DATE",1,START)
"RTN","ORWTPL",101,0)
 D EN^XPAR(USER_";VA(200,","ORLP DEFAULT CLINIC STOP DATE",1,STOP)
"RTN","ORWTPL",102,0)
 D EN^XPAR(USER_";VA(200,","ORLP DEFAULT CLINIC MONDAY",1,MON)
"RTN","ORWTPL",103,0)
 D EN^XPAR(USER_";VA(200,","ORLP DEFAULT CLINIC TUESDAY",1,TUES)
"RTN","ORWTPL",104,0)
 D EN^XPAR(USER_";VA(200,","ORLP DEFAULT CLINIC WEDNESDAY",1,WED)
"RTN","ORWTPL",105,0)
 D EN^XPAR(USER_";VA(200,","ORLP DEFAULT CLINIC THURSDAY",1,THURS)
"RTN","ORWTPL",106,0)
 D EN^XPAR(USER_";VA(200,","ORLP DEFAULT CLINIC FRIDAY",1,FRI)
"RTN","ORWTPL",107,0)
 D EN^XPAR(USER_";VA(200,","ORLP DEFAULT CLINIC SATURDAY",1,SAT)
"RTN","ORWTPL",108,0)
 D EN^XPAR(USER_";VA(200,","ORLP DEFAULT CLINIC SUNDAY",1,SUN)
"RTN","ORWTPL",109,0)
 Q
"RTN","ORWTPL",110,0)
 ;
"RTN","ORWTPL",111,0)
SAVEPLD(OK,INFO,USER) ; from ORWTPP
"RTN","ORWTPL",112,0)
 ; save user's clinic defaults
"RTN","ORWTPL",113,0)
 N PROV,SORT,SOURCE,SPEC,TEAM,WARD
"RTN","ORWTPL",114,0)
 S OK=1
"RTN","ORWTPL",115,0)
 S SOURCE=$P(INFO,U,1)
"RTN","ORWTPL",116,0)
 S SORT=$P(INFO,U,2)
"RTN","ORWTPL",117,0)
 S PROV=+$P(INFO,U,3),PROV=$S('PROV:"@",1:"`"_PROV)
"RTN","ORWTPL",118,0)
 S SPEC=+$P(INFO,U,4),SPEC=$S('SPEC:"@",1:"`"_SPEC)
"RTN","ORWTPL",119,0)
 S TEAM=+$P(INFO,U,5),TEAM=$S('TEAM:"@",1:"`"_TEAM)
"RTN","ORWTPL",120,0)
 S WARD=+$P(INFO,U,6),WARD=$S('WARD:"@",1:"`"_WARD)
"RTN","ORWTPL",121,0)
 D EN^XPAR(USER_";VA(200,","ORLP DEFAULT LIST SOURCE",1,SOURCE)
"RTN","ORWTPL",122,0)
 D EN^XPAR(USER_";VA(200,","ORLP DEFAULT LIST ORDER",1,SORT)
"RTN","ORWTPL",123,0)
 D EN^XPAR(USER_";VA(200,","ORLP DEFAULT PROVIDER",1,PROV)
"RTN","ORWTPL",124,0)
 D EN^XPAR(USER_";VA(200,","ORLP DEFAULT SPECIALTY",1,SPEC)
"RTN","ORWTPL",125,0)
 D EN^XPAR(USER_";VA(200,","ORLP DEFAULT TEAM",1,TEAM)
"RTN","ORWTPL",126,0)
 D EN^XPAR(USER_";VA(200,","ORLP DEFAULT WARD",1,WARD)
"RTN","ORWTPL",127,0)
 Q
"RTN","ORWTPR")
0^21^B16896948
"RTN","ORWTPR",1,0)
ORWTPR ; SLC/STAFF Personal Preference - Reminders ;5/3/01  15:32
"RTN","ORWTPR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,173**;Oct 24, 2000
"RTN","ORWTPR",3,0)
 ;
"RTN","ORWTPR",4,0)
GETREM(VALUES,USER) ; from ORWTPP
"RTN","ORWTPR",5,0)
 ; get user's reminders
"RTN","ORWTPR",6,0)
 N CLASS,CNT,ERR,IEN,NUM,OK,TMPLIST,ZERO K VALUES
"RTN","ORWTPR",7,0)
 D GETLST^XPAR(.TMPLIST,"USR.`"_USER,"ORQQPX SEARCH ITEMS","Q",.ERR)
"RTN","ORWTPR",8,0)
 S CNT=0,IEN=0 F  S IEN=$O(^PXD(811.9,IEN)) Q:IEN<1  S ZERO=$G(^(IEN,0)) I $L($P(ZERO,U,3)),'$P(ZERO,U,6) D
"RTN","ORWTPR",9,0)
 .S CNT=CNT+1
"RTN","ORWTPR",10,0)
 .S VALUES(CNT)=IEN_"^0^"_$P(ZERO,U,3)_U_$P(ZERO,U)
"RTN","ORWTPR",11,0)
 .S CLASS=$P($G(^PXD(811.9,IEN,100)),U)
"RTN","ORWTPR",12,0)
 .S $P(VALUES(CNT),U,5)=$S(CLASS="N":"NATIONAL",CLASS="L":"LOCAL",1:CLASS)
"RTN","ORWTPR",13,0)
 .S OK=0,NUM=0 F  S NUM=$O(TMPLIST(NUM)) Q:NUM<1  D  Q:OK
"RTN","ORWTPR",14,0)
 ..I IEN=$P(TMPLIST(NUM),U,2) S OK=1
"RTN","ORWTPR",15,0)
 .I OK S $P(VALUES(CNT),U,2)=$P(TMPLIST(NUM),U)
"RTN","ORWTPR",16,0)
 Q
"RTN","ORWTPR",17,0)
 ;
"RTN","ORWTPR",18,0)
SETREM(OK,VALUES,USER) ; from ORWTPP
"RTN","ORWTPR",19,0)
 ; save user's reminders
"RTN","ORWTPR",20,0)
 N NUM,ERR
"RTN","ORWTPR",21,0)
 S OK=1
"RTN","ORWTPR",22,0)
 D NDEL^XPAR("USR.`"_USER,"ORQQPX SEARCH ITEMS",.ERR)
"RTN","ORWTPR",23,0)
 S NUM=0 F  S NUM=$O(VALUES(NUM)) Q:NUM<1  D
"RTN","ORWTPR",24,0)
 .D EN^XPAR(USER_";VA(200,","ORQQPX SEARCH ITEMS",$P(VALUES(NUM),U,1),"`"_$P(VALUES(NUM),U,2),.ERR)
"RTN","ORWTPR",25,0)
 Q
"RTN","ORWTPR",26,0)
 ;
"RTN","ORWTPR",27,0)
GETOC(VALUES,USER) ; from ORWTPP
"RTN","ORWTPR",28,0)
 ; get user's order checks
"RTN","ORWTPR",29,0)
 N CNT,IEN,LIST,NUM,VAL,VALOK K LIST,VALUES
"RTN","ORWTPR",30,0)
 S IEN=0 F  S IEN=$O(^ORD(100.8,IEN)) Q:IEN<1  D
"RTN","ORWTPR",31,0)
 .S VAL=$$GET^XPAR("ALL","ORK PROCESSING FLAG",IEN,"I")
"RTN","ORWTPR",32,0)
 .I '$L(VAL) Q
"RTN","ORWTPR",33,0)
 .S VALOK=$$GET^XPAR("ALL","ORK EDITABLE BY USER",IEN,"I")
"RTN","ORWTPR",34,0)
 .S LIST(IEN)=VAL_U_VALOK
"RTN","ORWTPR",35,0)
 S NUM=0,CNT=0 F  S NUM=$O(LIST(NUM)) Q:NUM<1  D
"RTN","ORWTPR",36,0)
 .S CNT=CNT+1
"RTN","ORWTPR",37,0)
 .S VALUES(CNT)=NUM_U_$P($G(^ORD(100.8,NUM,0)),U)_U_$S($P(LIST(NUM),U)="E":"ON",1:"OFF")_U_$S($P(LIST(NUM),U,2)="0":"MANDATORY",1:"")
"RTN","ORWTPR",38,0)
 Q
"RTN","ORWTPR",39,0)
 ;
"RTN","ORWTPR",40,0)
SAVEOC(OK,VALUES,USER) ; from ORWTPP
"RTN","ORWTPR",41,0)
 ; save user's order checks
"RTN","ORWTPR",42,0)
 N NUM,ERR
"RTN","ORWTPR",43,0)
 S OK=1
"RTN","ORWTPR",44,0)
 S NUM=0 F  S NUM=$O(VALUES(NUM)) Q:NUM<1  D
"RTN","ORWTPR",45,0)
 .D EN^XPAR(USER_";VA(200,","ORK PROCESSING FLAG","`"_+VALUES(NUM),$S($P(VALUES(NUM),U,2)="ON":"E",1:"D"),.ERR)
"RTN","ORWTPR",46,0)
 Q
"RTN","ORWTPR",47,0)
 ;
"RTN","ORWTPR",48,0)
 ;
"RTN","ORWTPR",49,0)
GETNOT(VALUES,USER) ; from ORWTPP
"RTN","ORWTPR",50,0)
 ; get user's notifications
"RTN","ORWTPR",51,0)
 N CNT,IEN,NAME,RESULT K VALUES
"RTN","ORWTPR",52,0)
 S CNT=0
"RTN","ORWTPR",53,0)
 S NAME="" F  S NAME=$O(^ORD(100.9,"B",NAME)) Q:NAME=""  D
"RTN","ORWTPR",54,0)
 .S IEN=0  F  S IEN=$O(^ORD(100.9,"B",NAME,IEN)) Q:IEN<1  D
"RTN","ORWTPR",55,0)
 ..S RESULT=$$ONOFF^ORB3USER(IEN,USER,"","") I $L($G(RESULT)) D
"RTN","ORWTPR",56,0)
 ...S CNT=CNT+1
"RTN","ORWTPR",57,0)
 ...S VALUES(CNT)=IEN_U_NAME_U_$P(RESULT,U)_U_$S($$UP^XLFSTR($P(RESULT,U,3))["MANDATORY":"MANDATORY",1:"")
"RTN","ORWTPR",58,0)
 Q
"RTN","ORWTPR",59,0)
 ;
"RTN","ORWTPR",60,0)
SAVENOT(OK,VALUES,USER) ; from ORWTPP
"RTN","ORWTPR",61,0)
 ; save user's notifications
"RTN","ORWTPR",62,0)
 N ERR,NUM
"RTN","ORWTPR",63,0)
 S OK=1
"RTN","ORWTPR",64,0)
 S NUM=0 F  S NUM=$O(VALUES(NUM)) Q:NUM<1  D
"RTN","ORWTPR",65,0)
 .D EN^XPAR(USER_";VA(200,","ORB PROCESSING FLAG","`"_+VALUES(NUM),$S($P(VALUES(NUM),U,2)="ON":"E",1:"D"),.ERR)
"RTN","ORWTPR",66,0)
 Q
"RTN","ORWTPR",67,0)
 ;
"RTN","ORWTPR",68,0)
CLEARNOT(OK,USER) ; from ORWTPP
"RTN","ORWTPR",69,0)
 ; clear user's notifications
"RTN","ORWTPR",70,0)
 D RECIPURG^XQALBUTL(USER)
"RTN","ORWTPR",71,0)
 S OK=1
"RTN","ORWTPR",72,0)
 Q
"RTN","ORWTPR",73,0)
 ;
"RTN","ORWTPR",74,0)
GETNOTO(INFO,USER) ; from ORWTPP
"RTN","ORWTPR",75,0)
 ; get user's other info for notifications
"RTN","ORWTPR",76,0)
 I $$GET^XPAR("USR.`"_USER,"ORB FLAGGED ORDERS BULLETIN",1,"Q")="Y" S $P(INFO,U,2)=1
"RTN","ORWTPR",77,0)
 I $$GET^XPAR("ALL^USR.`"_USER,"ORB ERASE ALL",1,"Q") S $P(INFO,U,3)=1
"RTN","ORWTPR",78,0)
 Q
"RTN","ORWTPR",79,0)
 ;
"RTN","ORWTPR",80,0)
GETSURR(INFO,USER) ; from ORWTPP
"RTN","ORWTPR",81,0)
 ; get user's surrogate info
"RTN","ORWTPR",82,0)
 N SURR
"RTN","ORWTPR",83,0)
 S INFO=""
"RTN","ORWTPR",84,0)
 S SURR=$$GETSURR^ORWTPUA(USER)
"RTN","ORWTPR",85,0)
 I SURR<.5 Q
"RTN","ORWTPR",86,0)
 S INFO=SURR_U_$P($G(^VA(200,SURR,0)),U)
"RTN","ORWTPR",87,0)
 S INFO=INFO_U_$$START^ORWTPUA(USER)_U_$$STOP^ORWTPUA(USER)
"RTN","ORWTPR",88,0)
 Q
"RTN","ORWTPR",89,0)
 ;
"RTN","ORWTPR",90,0)
SAVESURR(OK,INFO,USER) ; from ORWTPP
"RTN","ORWTPR",91,0)
 ; save user's surrogate info
"RTN","ORWTPR",92,0)
 N START,STOP,SURR
"RTN","ORWTPR",93,0)
 S OK=1
"RTN","ORWTPR",94,0)
 S SURR=$P(INFO,U,1)
"RTN","ORWTPR",95,0)
 S START=$P(INFO,U,2)
"RTN","ORWTPR",96,0)
 S STOP=$P(INFO,U,3)
"RTN","ORWTPR",97,0)
 D SAVESURR^ORWTPUA(USER,SURR,START,STOP)
"RTN","ORWTPR",98,0)
 Q
"RTN","ORWTPR",99,0)
 ;
"RTN","ORWTPR",100,0)
SAVENOTO(OK,INFO,USER) ; from ORWTPP
"RTN","ORWTPR",101,0)
 ; save user's notification settings
"RTN","ORWTPR",102,0)
 N ERR,FLAG,VAL
"RTN","ORWTPR",103,0)
 S OK=1
"RTN","ORWTPR",104,0)
 S FLAG=$P(INFO,U,3)
"RTN","ORWTPR",105,0)
 S VAL=$S(FLAG>0:"Y",1:"@")
"RTN","ORWTPR",106,0)
 D EN^XPAR(USER_";VA(200,","ORB FLAGGED ORDERS BULLETIN",1,VAL,.ERR)
"RTN","ORWTPR",107,0)
 Q
"RTN","ORWTPR",108,0)
 ;
"RTN","ORWTPR",109,0)
OCDESC(TEXT,IEN) ; from RPC
"RTN","ORWTPR",110,0)
 N CNT,LINE,NUM K TEXT
"RTN","ORWTPR",111,0)
 S IEN=+$G(IEN) I IEN<1 Q
"RTN","ORWTPR",112,0)
 S TEXT(1)=$P($G(^ORD(100.8,IEN,0)),U)
"RTN","ORWTPR",113,0)
 S TEXT(2)=""
"RTN","ORWTPR",114,0)
 S CNT=2
"RTN","ORWTPR",115,0)
 S NUM=0 F  S NUM=$O(^ORD(100.8,IEN,1,NUM)) Q:NUM<1  S LINE=$G(^(NUM,0)) D
"RTN","ORWTPR",116,0)
 .S CNT=CNT+1
"RTN","ORWTPR",117,0)
 .S TEXT(CNT)=LINE
"RTN","ORWTPR",118,0)
 S TEXT(CNT+1)=""
"RTN","ORWTPR",119,0)
 Q
"RTN","ORWTPR",120,0)
 ;
"RTN","ORWTPR",121,0)
NOTDESC(TEXT,IEN) ; from RPC
"RTN","ORWTPR",122,0)
 K TEXT
"RTN","ORWTPR",123,0)
 S IEN=+$G(IEN) I IEN<1 Q
"RTN","ORWTPR",124,0)
 S TEXT(1)=$P($G(^ORD(100.9,IEN,0)),U)
"RTN","ORWTPR",125,0)
 S TEXT(2)=""
"RTN","ORWTPR",126,0)
 S TEXT(3)=$P($G(^ORD(100.9,IEN,4)),U)
"RTN","ORWTPR",127,0)
 S TEXT(4)=""
"RTN","ORWTPR",128,0)
 Q
"RTN","ORY173")
0^17^B6815878
"RTN","ORY173",1,0)
ORY173 ;SLC/PKS -- postinit rtn for OR*3*173 ;2/11/2004  06:25 [7/1/03 2:29pm]
"RTN","ORY173",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**173**;Dec 17, 1997
"RTN","ORY173",3,0)
 ;
"RTN","ORY173",4,0)
 Q
"RTN","ORY173",5,0)
 ;
"RTN","ORY173",6,0)
PRE ; -- preinit
"RTN","ORY173",7,0)
 ;
"RTN","ORY173",8,0)
 Q
"RTN","ORY173",9,0)
 ;
"RTN","ORY173",10,0)
POST ; -- postinit
"RTN","ORY173",11,0)
 ;
"RTN","ORY173",12,0)
 N VER
"RTN","ORY173",13,0)
 ;
"RTN","ORY173",14,0)
 S VER=$P($T(VERSION^ORY173),";",3)
"RTN","ORY173",15,0)
 I +$$PATCH^XPDUTL("TIU*1.0*112") D SURGREG
"RTN","ORY173",16,0)
 D SETVAL
"RTN","ORY173",17,0)
 D MAIL
"RTN","ORY173",18,0)
 D SUPP
"RTN","ORY173",19,0)
 ;
"RTN","ORY173",20,0)
 Q
"RTN","ORY173",21,0)
 ;
"RTN","ORY173",22,0)
SURGREG ; Register TIU SURGERY RPCs if TIU*1.0*112 present
"RTN","ORY173",23,0)
 N MENU,RPC
"RTN","ORY173",24,0)
 S MENU="OR CPRS GUI CHART"
"RTN","ORY173",25,0)
 F RPC="TIU IS THIS A SURGERY?","TIU IDENTIFY SURGERY CLASS","TIU LONG LIST SURGERY TITLES","TIU GET DOCUMENTS FOR REQUEST" D INSERT(MENU,RPC)
"RTN","ORY173",26,0)
 Q
"RTN","ORY173",27,0)
 ;
"RTN","ORY173",28,0)
INSERT(OPTION,RPC) ; Call FM Updater with each RPC
"RTN","ORY173",29,0)
 ; Input  -- OPTION   Option file (#19) Name field (#.01)
"RTN","ORY173",30,0)
 ;           RPC      RPC sub-file (#19.05) RPC field (#.01)
"RTN","ORY173",31,0)
 ; Output -- None
"RTN","ORY173",32,0)
 N FDA,FDAIEN,ERR,DIERR
"RTN","ORY173",33,0)
 S FDA(19,"?1,",.01)=OPTION
"RTN","ORY173",34,0)
 S FDA(19.05,"?+2,?1,",.01)=RPC
"RTN","ORY173",35,0)
 D UPDATE^DIE("E","FDA","FDAIEN","ERR")
"RTN","ORY173",36,0)
 Q
"RTN","ORY173",37,0)
 ;
"RTN","ORY173",38,0)
SENDPAR(ANAME) ; Return true if the current parameter should be sent.
"RTN","ORY173",39,0)
 Q 0
"RTN","ORY173",40,0)
 ;
"RTN","ORY173",41,0)
SETVAL ;       Set package-level values for params
"RTN","ORY173",42,0)
 N VAL S VAL=1
"RTN","ORY173",43,0)
 Q
"RTN","ORY173",44,0)
 ;
"RTN","ORY173",45,0)
MAIL ; send bulletin of installation time
"RTN","ORY173",46,0)
 N COUNT,DIFROM,I,START,TEXT,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","ORY173",47,0)
 S COUNT=0
"RTN","ORY173",48,0)
 S XMSUB="Version "_$P($T(VERSION),";;",2)_" Installed"
"RTN","ORY173",49,0)
 S XMDUZ="CPRS PACKAGE"
"RTN","ORY173",50,0)
 F I="G.CPRS GUI INSTALL@ISC-SLC.VA.GOV",DUZ S XMY(I)=""
"RTN","ORY173",51,0)
 S XMTEXT="TEXT("
"RTN","ORY173",52,0)
 ;
"RTN","ORY173",53,0)
 S X=$P($T(VERSION),";;",2)
"RTN","ORY173",54,0)
 D LINE("Version "_X_" has been installed.")
"RTN","ORY173",55,0)
 D LINE(" ")
"RTN","ORY173",56,0)
 D LINE("Install complete:  "_$$FMTE^XLFDT($$NOW^XLFDT()))
"RTN","ORY173",57,0)
 ;
"RTN","ORY173",58,0)
 D ^XMD
"RTN","ORY173",59,0)
 Q
"RTN","ORY173",60,0)
 ;
"RTN","ORY173",61,0)
LINE(DATA)      ; set text into array
"RTN","ORY173",62,0)
 S COUNT=COUNT+1
"RTN","ORY173",63,0)
 S TEXT(COUNT)=DATA
"RTN","ORY173",64,0)
 Q
"RTN","ORY173",65,0)
 ;
"RTN","ORY173",66,0)
SUPP ;Convert all dialogs with checkbox suppressed to exclude from p/n
"RTN","ORY173",67,0)
 ;
"RTN","ORY173",68,0)
 ;E3R 15758  NOIS MAR-1201-20845
"RTN","ORY173",69,0)
 ;DBIA 4097
"RTN","ORY173",70,0)
 ;
"RTN","ORY173",71,0)
 N DIEN,FIND,SUPPRESS
"RTN","ORY173",72,0)
 S DIEN=0
"RTN","ORY173",73,0)
 F  S DIEN=$O(^PXRMD(801.41,DIEN)) Q:'DIEN  D
"RTN","ORY173",74,0)
 .S FIND=0
"RTN","ORY173",75,0)
 .;Elements and groups only
"RTN","ORY173",76,0)
 .I "EG"'[$P($G(^PXRMD(801.41,DIEN,0)),U,4) Q
"RTN","ORY173",77,0)
 .;Check if checkbox suppressed
"RTN","ORY173",78,0)
 .S SUPPRESS=$P($G(^PXRMD(801.41,DIEN,0)),U,11) Q:'SUPPRESS
"RTN","ORY173",79,0)
 .I $P($G(^PXRMD(801.41,DIEN,1)),U,5)'="" S FIND=1
"RTN","ORY173",80,0)
 .I FIND=1 Q
"RTN","ORY173",81,0)
 .;Set exclude from p/n
"RTN","ORY173",82,0)
 .I $P($G(^PXRMD(801.41,DIEN,2)),U,3)="" S $P(^PXRMD(801.41,DIEN,2),U,3)=1
"RTN","ORY173",83,0)
 Q
"RTN","ORY173",84,0)
 ;
"RTN","ORY173",85,0)
VERSION ;;22.11
"VER")
8.0^22.0
**END**
**END**
