Released PX*1*164 SEQ #135
Extracted from mail message
**KIDS**:PX*1.0*164^

**INSTALL NAME**
PX*1.0*164
"BLD",5740,0)
PX*1.0*164^PCE PATIENT CARE ENCOUNTER^0^3060227^y
"BLD",5740,1,0)
^^1^1^3051110^^
"BLD",5740,1,1,0)
PATIENT FINANCIAL SERVICES SYSTEM(PFSS) 1B - PCE
"BLD",5740,4,0)
^9.64PA^9000010.18^2
"BLD",5740,4,9000010,0)
9000010
"BLD",5740,4,9000010,2,0)
^9.641^9000010^1
"BLD",5740,4,9000010,2,9000010,0)
VISIT  (File-top level)
"BLD",5740,4,9000010,2,9000010,1,0)
^9.6411^.26^1
"BLD",5740,4,9000010,2,9000010,1,.26,0)
PFSS ACCOUNT REFERENCE
"BLD",5740,4,9000010,222)
y^n^p^^^^n
"BLD",5740,4,9000010.18,0)
9000010.18
"BLD",5740,4,9000010.18,2,0)
^9.641^9000010.18^1
"BLD",5740,4,9000010.18,2,9000010.18,0)
V CPT  (File-top level)
"BLD",5740,4,9000010.18,2,9000010.18,1,0)
^9.6411^.2^2
"BLD",5740,4,9000010.18,2,9000010.18,1,.19,0)
DEPARTMENT CODE
"BLD",5740,4,9000010.18,2,9000010.18,1,.2,0)
PFSS CHARGE ID
"BLD",5740,4,9000010.18,222)
y^n^p^^^^n
"BLD",5740,4,"APDD",9000010,9000010)

"BLD",5740,4,"APDD",9000010,9000010,.26)

"BLD",5740,4,"APDD",9000010.18,9000010.18)

"BLD",5740,4,"APDD",9000010.18,9000010.18,.19)

"BLD",5740,4,"APDD",9000010.18,9000010.18,.2)

"BLD",5740,4,"B",9000010,9000010)

"BLD",5740,4,"B",9000010.18,9000010.18)

"BLD",5740,"ABPKG")
n
"BLD",5740,"INID")
^n
"BLD",5740,"INIT")
EN^PX10164P
"BLD",5740,"KRN",0)
^9.67PA^8989.52^19
"BLD",5740,"KRN",.4,0)
.4
"BLD",5740,"KRN",.4,"NM",0)
^9.68A^^
"BLD",5740,"KRN",.401,0)
.401
"BLD",5740,"KRN",.402,0)
.402
"BLD",5740,"KRN",.403,0)
.403
"BLD",5740,"KRN",.5,0)
.5
"BLD",5740,"KRN",.84,0)
.84
"BLD",5740,"KRN",3.6,0)
3.6
"BLD",5740,"KRN",3.8,0)
3.8
"BLD",5740,"KRN",9.2,0)
9.2
"BLD",5740,"KRN",9.8,0)
9.8
"BLD",5740,"KRN",9.8,"NM",0)
^9.68A^27^19
"BLD",5740,"KRN",9.8,"NM",1,0)
PXAPI^^0^B37240429
"BLD",5740,"KRN",9.8,"NM",2,0)
PXAI^^0^B40709239
"BLD",5740,"KRN",9.8,"NM",3,0)
PXAICPT^^0^B24514877
"BLD",5740,"KRN",9.8,"NM",4,0)
PXAIVST^^0^B15847806
"BLD",5740,"KRN",9.8,"NM",5,0)
PXBCC^^0^B43965307
"BLD",5740,"KRN",9.8,"NM",12,0)
PXBSTOR^^0^B40327690
"BLD",5740,"KRN",9.8,"NM",14,0)
PXKVST^^0^B19263278
"BLD",5740,"KRN",9.8,"NM",15,0)
VSIT^^0^B33759245
"BLD",5740,"KRN",9.8,"NM",16,0)
VSITFLD^^0^B10370988
"BLD",5740,"KRN",9.8,"NM",17,0)
PXKFVST^^0^B10911741
"BLD",5740,"KRN",9.8,"NM",18,0)
PXCECPT^^0^B65152198
"BLD",5740,"KRN",9.8,"NM",19,0)
PXKFCPT^^0^B3416944
"BLD",5740,"KRN",9.8,"NM",20,0)
PXKMAIN^^0^B43120971
"BLD",5740,"KRN",9.8,"NM",21,0)
PXKMASC^^0^B46966195
"BLD",5740,"KRN",9.8,"NM",22,0)
PXBIBB^^0^B16922868
"BLD",5740,"KRN",9.8,"NM",24,0)
PXCECPT1^^0^B2104203
"BLD",5740,"KRN",9.8,"NM",25,0)
VSITDEF^^0^B40978064
"BLD",5740,"KRN",9.8,"NM",26,0)
PX10164P^^0^B2249753
"BLD",5740,"KRN",9.8,"NM",27,0)
PXBAPI1^^0^B50290247
"BLD",5740,"KRN",9.8,"NM","B","PX10164P",26)

"BLD",5740,"KRN",9.8,"NM","B","PXAI",2)

"BLD",5740,"KRN",9.8,"NM","B","PXAICPT",3)

"BLD",5740,"KRN",9.8,"NM","B","PXAIVST",4)

"BLD",5740,"KRN",9.8,"NM","B","PXAPI",1)

"BLD",5740,"KRN",9.8,"NM","B","PXBAPI1",27)

"BLD",5740,"KRN",9.8,"NM","B","PXBCC",5)

"BLD",5740,"KRN",9.8,"NM","B","PXBIBB",22)

"BLD",5740,"KRN",9.8,"NM","B","PXBSTOR",12)

"BLD",5740,"KRN",9.8,"NM","B","PXCECPT",18)

"BLD",5740,"KRN",9.8,"NM","B","PXCECPT1",24)

"BLD",5740,"KRN",9.8,"NM","B","PXKFCPT",19)

"BLD",5740,"KRN",9.8,"NM","B","PXKFVST",17)

"BLD",5740,"KRN",9.8,"NM","B","PXKMAIN",20)

"BLD",5740,"KRN",9.8,"NM","B","PXKMASC",21)

"BLD",5740,"KRN",9.8,"NM","B","PXKVST",14)

"BLD",5740,"KRN",9.8,"NM","B","VSIT",15)

"BLD",5740,"KRN",9.8,"NM","B","VSITDEF",25)

"BLD",5740,"KRN",9.8,"NM","B","VSITFLD",16)

"BLD",5740,"KRN",19,0)
19
"BLD",5740,"KRN",19,"NM",0)
^9.68A^^
"BLD",5740,"KRN",19.1,0)
19.1
"BLD",5740,"KRN",101,0)
101
"BLD",5740,"KRN",101,"NM",0)
^9.68A^1^1
"BLD",5740,"KRN",101,"NM",1,0)
PX IBB CACHE FILING EVENT^^0
"BLD",5740,"KRN",101,"NM","B","PX IBB CACHE FILING EVENT",1)

"BLD",5740,"KRN",409.61,0)
409.61
"BLD",5740,"KRN",771,0)
771
"BLD",5740,"KRN",870,0)
870
"BLD",5740,"KRN",8989.51,0)
8989.51
"BLD",5740,"KRN",8989.52,0)
8989.52
"BLD",5740,"KRN",8994,0)
8994
"BLD",5740,"KRN","B",.4,.4)

"BLD",5740,"KRN","B",.401,.401)

"BLD",5740,"KRN","B",.402,.402)

"BLD",5740,"KRN","B",.403,.403)

"BLD",5740,"KRN","B",.5,.5)

"BLD",5740,"KRN","B",.84,.84)

"BLD",5740,"KRN","B",3.6,3.6)

"BLD",5740,"KRN","B",3.8,3.8)

"BLD",5740,"KRN","B",9.2,9.2)

"BLD",5740,"KRN","B",9.8,9.8)

"BLD",5740,"KRN","B",19,19)

"BLD",5740,"KRN","B",19.1,19.1)

"BLD",5740,"KRN","B",101,101)

"BLD",5740,"KRN","B",409.61,409.61)

"BLD",5740,"KRN","B",771,771)

"BLD",5740,"KRN","B",870,870)

"BLD",5740,"KRN","B",8989.51,8989.51)

"BLD",5740,"KRN","B",8989.52,8989.52)

"BLD",5740,"KRN","B",8994,8994)

"BLD",5740,"QUES",0)
^9.62^^
"BLD",5740,"REQB",0)
^9.611^6^6
"BLD",5740,"REQB",1,0)
IB*2.0*286^2
"BLD",5740,"REQB",2,0)
SD*5.3*430^2
"BLD",5740,"REQB",3,0)
PX*1.0*41^2
"BLD",5740,"REQB",4,0)
PX*1.0*118^2
"BLD",5740,"REQB",5,0)
PX*1.0*170^2
"BLD",5740,"REQB",6,0)
PX*1.0*174^2
"BLD",5740,"REQB","B","IB*2.0*286",1)

"BLD",5740,"REQB","B","PX*1.0*118",4)

"BLD",5740,"REQB","B","PX*1.0*170",5)

"BLD",5740,"REQB","B","PX*1.0*174",6)

"BLD",5740,"REQB","B","PX*1.0*41",3)

"BLD",5740,"REQB","B","SD*5.3*430",2)

"FIA",9000010)
VISIT
"FIA",9000010,0)
^AUPNVSIT(
"FIA",9000010,0,0)
9000010sID
"FIA",9000010,0,1)
y^n^p^^^^n
"FIA",9000010,0,10)

"FIA",9000010,0,11)

"FIA",9000010,0,"RLRO")

"FIA",9000010,0,"VR")
1.0^PX
"FIA",9000010,9000010)
1
"FIA",9000010,9000010,.26)

"FIA",9000010.18)
V CPT
"FIA",9000010.18,0)
^AUPNVCPT(
"FIA",9000010.18,0,0)
9000010.18IP
"FIA",9000010.18,0,1)
y^n^p^^^^n
"FIA",9000010.18,0,10)

"FIA",9000010.18,0,11)

"FIA",9000010.18,0,"RLRO")

"FIA",9000010.18,0,"VR")
1.0^PX
"FIA",9000010.18,9000010.18)
1
"FIA",9000010.18,9000010.18,.19)

"FIA",9000010.18,9000010.18,.2)

"INIT")
EN^PX10164P
"KRN",101,7956,-1)
0^1
"KRN",101,7956,0)
PX IBB CACHE FILING EVENT^PX IBB CACHE FILING EVENT^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7956,1,0)
^101.06^3^3^3050524^^
"KRN",101,7956,1,1,0)
This protocol will call the PXBIBB routine if the site has implemented the
"KRN",101,7956,1,2,0)
COTS billing product.  It will be called from the PXKMASC routine after the
"KRN",101,7956,1,3,0)
PXK VISIT DATA EVENT has been called.
"KRN",101,7956,4)
^^^PX IBB CACHE FILING EVENT
"KRN",101,7956,20)
I $$SWSTAT^IBBAPI() D ^PXBIBB
"KRN",101,7956,99)
60270,56174
"KRN",101,7956,771)

"MBREQ")
0
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"PKG",413,-1)
1^1
"PKG",413,0)
PCE PATIENT CARE ENCOUNTER^PX^Patient Care Encounter (VA Parent package)^
"PKG",413,20,0)
^9.402P^^
"PKG",413,22,0)
^9.49I^1^1
"PKG",413,22,1,0)
1.0^2960812^2960913^12537
"PKG",413,22,1,"PAH",1,0)
164^3060227^123456828
"PKG",413,22,1,"PAH",1,1,0)
^^1^1^3060227
"PKG",413,22,1,"PAH",1,1,1,0)
PATIENT FINANCIAL SERVICES SYSTEM(PFSS) 1B - PCE
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
19
"RTN","PX10164P")
0^26^B2249753
"RTN","PX10164P",1,0)
PX10164P ;HERN/BDB - Post-init routine for PX*1.0*164 ;11/10/2005
"RTN","PX10164P",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**164**;Aug 12, 1996
"RTN","PX10164P",3,0)
 ;
"RTN","PX10164P",4,0)
 Q
"RTN","PX10164P",5,0)
EN ;This patch will update the Visit Tracking Parameters File for
"RTN","PX10164P",6,0)
 ;the Order Entry/Results Reporting Package
"RTN","PX10164P",7,0)
 ;
"RTN","PX10164P",8,0)
 N DIC,X,Y
"RTN","PX10164P",9,0)
 D BMES^XPDUTL(">>> Updating Order Entry/Results Reporting entry")
"RTN","PX10164P",10,0)
 D MES^XPDUTL("       in the Visit Tracking Parameters file.")
"RTN","PX10164P",11,0)
 S DIC="^DIC(150.9,1,3,",DA(1)=1,DIC(0)="L",X="ORDER ENTRY/RESULTS REPORTING"
"RTN","PX10164P",12,0)
 D ^DIC
"RTN","PX10164P",13,0)
 I +Y'>0 G ERROR
"RTN","PX10164P",14,0)
 N DIE,DA
"RTN","PX10164P",15,0)
 S DIE="^DIC(150.9,1,3,",DA(1)=1,DA=+Y,DR="4////1"
"RTN","PX10164P",16,0)
 D ^DIE
"RTN","PX10164P",17,0)
 D BMES^XPDUTL("   Order Entry/Results Reporting package updated")
"RTN","PX10164P",18,0)
 D MES^XPDUTL("       in Visit Tracking Parameters file.")
"RTN","PX10164P",19,0)
 Q
"RTN","PX10164P",20,0)
ERROR ;
"RTN","PX10164P",21,0)
 D BMES^XPDUTL(">>> Order Entry/Result Reporting failed to be added to the")
"RTN","PX10164P",22,0)
 D MES^XPDUTL("     Visit Tracking Parameters file.  Please contact IRM.")
"RTN","PX10164P",23,0)
 Q
"RTN","PX10164P",24,0)
VTFQ ;
"RTN","PX10164P",25,0)
 D BMES^XPDUTL(">>> Done")
"RTN","PX10164P",26,0)
 Q
"RTN","PXAI")
0^2^B40709239^B38962189
"RTN","PXAI",1,0)
PXAI ;ISL/JVS,ISA/KWP,ESW - PCE DRIVING RTN FOR 'DATA2PCE' API ;6/20/03 11:15am
"RTN","PXAI",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**15,74,69,102,111,112,130,164**;Aug 12, 1996
"RTN","PXAI",3,0)
 Q
"RTN","PXAI",4,0)
 ;
"RTN","PXAI",5,0)
 ;+  1       2       3        4        5       6      7      8       9
"RTN","PXAI",6,0)
DATA2PCE(PXADATA,PXAPKG,PXASOURC,PXAVISIT,PXAUSER,PXANOT,ERRRET,PXAPREDT,PXAPROB,PXACCNT) ;+API to pass data for add/edit/delete to PCE.
"RTN","PXAI",7,0)
 ;+  PXADATA  (required)
"RTN","PXAI",8,0)
 ;+  PXAPKG   (required)
"RTN","PXAI",9,0)
 ;+  PXASOURC (required)
"RTN","PXAI",10,0)
 ;+  PXAVISIT (optional) is pointer to a visit for which the data is to
"RTN","PXAI",11,0)
 ;+        be related.  If the visit is not known then there must be
"RTN","PXAI",12,0)
 ;+        the ENCOUNTER nodes needed to lookup/create the visit.
"RTN","PXAI",13,0)
 ;+  PXAUSER  (optional) this is a pointer to the user adding the data.
"RTN","PXAI",14,0)
 ;+  PXANOT   (optional) set to 1 if errors are to be displayed to the screen should only be set while writing and debugging the initial code.
"RTN","PXAI",15,0)
 ;+  ERRRET   (optional) passed by reference.  If present will return PXKERROR
"RTN","PXAI",16,0)
 ;+                      array elements to the caller.
"RTN","PXAI",17,0)
 ;+  PXAPREDT  (optional) Set to 1 if you want to edit the Primary Provider
"RTN","PXAI",18,0)
 ;+            only use if for the moment that editing is being done. (dangerous)
"RTN","PXAI",19,0)
 ;+  PXAPROB   (optional) A dotted variable name. When errors and
"RTN","PXAI",20,0)
 ;+             warnings occur, They will be passed back in the form
"RTN","PXAI",21,0)
 ;+            of an array with the general description of the problem.
"RTN","PXAI",22,0)
 ;+ IF ERROR1 - (GENERAL ERRORS)
"RTN","PXAI",23,0)
 ;+      PXAPROB($J,SUBSCRIPT,"ERROR1",PASSED IN 'FILE',PASSED IN FIELD,
"RTN","PXAI",24,0)
 ;+              SUBSCRIPT FROM PXADATA)
"RTN","PXAI",25,0)
 ;+      PXAPROB(23432234,2,"ERROR1","PROVIDER","NAME",7)="BECAUSE..."
"RTN","PXAI",26,0)
 ;+ IF WARNING2 - (GENERAL WARNINGS)
"RTN","PXAI",27,0)
 ;+      PXAPROB($J,SUBSCRIPT,"WARNING2",PASSED IN 'FILE',PASSED IN FIELD,
"RTN","PXAI",28,0)
 ;+              SUBSCRIPT FROM PXADATA)
"RTN","PXAI",29,0)
 ;+      PXAPROB(23432234,3,"WARNING2","PROCEDURE","QTY",3)="BECAUSE..."
"RTN","PXAI",30,0)
 ;+ IF WARNING3 - (WARNINGS FOR SERVICE CONNECTION)
"RTN","PXAI",31,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"AO")=REASON
"RTN","PXAI",32,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"EC")=REASON
"RTN","PXAI",33,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"IR")=REASON
"RTN","PXAI",34,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"SC")=REASON
"RTN","PXAI",35,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"MST")=REASON
"RTN","PXAI",36,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"HNC")=REASON
"RTN","PXAI",37,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"CV")=REASON
"RTN","PXAI",38,0)
 ;+ IF ERROR4 - (PROBLEM LIST ERRORS)
"RTN","PXAI",39,0)
 ;+      PXAPROB($J,6,"ERROR4","PX/DL",(SUBSCRIPT FROM PXADATA))=REASON
"RTN","PXAI",40,0)
 ;+ PXACCNT    (optional)  passed by reference.  Returns the PFSS Account Reference if known.
"RTN","PXAI",41,0)
 ;              Returned as null if the PFSS Account Reference is located in the Order file(#100)
"RTN","PXAI",42,0)
 ;+
"RTN","PXAI",43,0)
 ;+
"RTN","PXAI",44,0)
 ;+ Returns:
"RTN","PXAI",45,0)
 ;+   1  if no errors and process completely
"RTN","PXAI",46,0)
 ;+  -1  if errors occurred but processed completely as possible
"RTN","PXAI",47,0)
 ;+  -2  if could not get a visit
"RTN","PXAI",48,0)
 ;+  -3  if called incorrectly
"RTN","PXAI",49,0)
 ;
"RTN","PXAI",50,0)
NEW ;--NEW VARIABLES
"RTN","PXAI",51,0)
 N NOVSIT,PXAK,DFN,PXAERRF,PXADEC,PXELAP,PXASUB
"RTN","PXAI",52,0)
 N PATIENT,VALQUIET,PRIMFND
"RTN","PXAI",53,0)
 K PXAERROR,PXKERROR,PXAERR,PRVDR
"RTN","PXAI",54,0)
 S PXASUB=0,VALQUIET=1
"RTN","PXAI",55,0)
 ; needs to look up if not passed. 
"RTN","PXAI",56,0)
 I '$G(PXAVISIT),'$D(@PXADATA@("ENCOUNTER")) Q -3
"RTN","PXAI",57,0)
 I $G(PXAUSER)<1 S PXAUSER=DUZ
"RTN","PXAI",58,0)
 ;
"RTN","PXAI",59,0)
 K ^TMP("PXK",$J),^TMP("DIERR",$J),^TMP("PXAIADDPRV",$J)
"RTN","PXAI",60,0)
SOR ;--SOURCE
"RTN","PXAI",61,0)
 I PXAPKG=+PXAPKG S PXAPKG=PXAPKG
"RTN","PXAI",62,0)
 E  S PXAPKG=$$PKG2IEN^VSIT(PXAPKG)
"RTN","PXAI",63,0)
 I PXASOURC=+PXASOURC S PXASOURC=PXASOURC
"RTN","PXAI",64,0)
 E  S PXASOURC=$$SOURCE^PXAPIUTL(PXASOURC)
"RTN","PXAI",65,0)
 ;
"RTN","PXAI",66,0)
 D TMPSOURC^PXAPIUTL(PXASOURC) ;-SAVES & CREATES ^TMP("PXK",$J,"SOR")
"RTN","PXAI",67,0)
VST ;--VISIT
"RTN","PXAI",68,0)
 ;--KILL VISIT
"RTN","PXAI",69,0)
 I $G(PXAVISIT) D VPTR^PXAIVSTV I $G(PXAERRF) D ERR Q -2
"RTN","PXAI",70,0)
 D VST^PXAIVST
"RTN","PXAI",71,0)
 I $G(PXAVISIT)<0 Q -2
"RTN","PXAI",72,0)
 I $G(PXAERRF) D ERR K PXAERR Q -2
"RTN","PXAI",73,0)
PRV ;--PROVIDER
"RTN","PXAI",74,0)
 S PATIENT=$P($G(^AUPNVSIT(PXAVISIT,0)),"^",5)
"RTN","PXAI",75,0)
 S (PXAK,PRIMFND)=0
"RTN","PXAI",76,0)
 F  S PXAK=$O(@PXADATA@("PROVIDER",PXAK)) Q:(PRIMFND)!(PXAK="")  D
"RTN","PXAI",77,0)
 .I $D(@PXADATA@("PROVIDER",PXAK,"PRIMARY")) D
"RTN","PXAI",78,0)
 ..S PRIMFND=$G(@PXADATA@("PROVIDER",PXAK,"PRIMARY"))
"RTN","PXAI",79,0)
 I 'PRIMFND D  ;Check for each provider's status as Primary or Secondary
"RTN","PXAI",80,0)
 .S PXAK=0 F  S PXAK=$O(@PXADATA@("PROVIDER",PXAK)) Q:PXAK=""  D
"RTN","PXAI",81,0)
 ..I '$D(@PXADATA@("PROVIDER",PXAK,"PRIMARY")) D PROVDRST
"RTN","PXAI",82,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("PROVIDER",PXAK)) Q:PXAK=""  D
"RTN","PXAI",83,0)
 . D PRV^PXAIPRV I $G(PXAERRF) D ERR
"RTN","PXAI",84,0)
 K PRI ;--FLAG FOR PRIMARY PROVIDER
"RTN","PXAI",85,0)
 K PXAERR
"RTN","PXAI",86,0)
POV ;--DIAGNOSIS
"RTN","PXAI",87,0)
 S (PXAK,PRIMFND)=0
"RTN","PXAI",88,0)
 F  S PXAK=$O(@PXADATA@("DX/PL",PXAK)) Q:(PXAK="")  D  Q:PRIMFND
"RTN","PXAI",89,0)
 .I +$G(@PXADATA@("DX/PL",PXAK,"PRIMARY"))=1 D
"RTN","PXAI",90,0)
 ..S PRIMFND=$G(@PXADATA@("DX/PL",PXAK,"DIAGNOSIS"))
"RTN","PXAI",91,0)
 I $D(@PXADATA@("DX/PL")) D POVPRM(PXAVISIT,PRIMFND,.PXADATA) D
"RTN","PXAI",92,0)
 .S PXAK=0 F  S PXAK=$O(@PXADATA@("DX/PL",PXAK))  Q:PXAK=""  D
"RTN","PXAI",93,0)
 ..D POV^PXAIPOV I $G(PXAERRF) D ERR
"RTN","PXAI",94,0)
 K PXAERR
"RTN","PXAI",95,0)
 ;
"RTN","PXAI",96,0)
CPT ;--PROCEDURE
"RTN","PXAI",97,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("PROCEDURE",PXAK))  Q:PXAK=""  D
"RTN","PXAI",98,0)
 . D CPT^PXAICPT I $G(PXAERRF) D ERR
"RTN","PXAI",99,0)
 K PXAERR
"RTN","PXAI",100,0)
 ;
"RTN","PXAI",101,0)
EDU ;--PATIENT EDUCATION
"RTN","PXAI",102,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("PATIENT ED",PXAK))  Q:PXAK=""  D
"RTN","PXAI",103,0)
 . D EDU^PXAIPED I $G(PXAERRF) D ERR
"RTN","PXAI",104,0)
 K PXAERR
"RTN","PXAI",105,0)
 ;
"RTN","PXAI",106,0)
EXAM ;--EXAMINATION
"RTN","PXAI",107,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("EXAM",PXAK))  Q:PXAK=""  D
"RTN","PXAI",108,0)
 . D EXAM^PXAIXAM I $G(PXAERRF) D ERR
"RTN","PXAI",109,0)
 K PXAERR
"RTN","PXAI",110,0)
 ;
"RTN","PXAI",111,0)
HF ;--HEALTH FACTOR
"RTN","PXAI",112,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("HEALTH FACTOR",PXAK))  Q:PXAK=""  D
"RTN","PXAI",113,0)
 . D HF^PXAIHF I $G(PXAERRF) D ERR
"RTN","PXAI",114,0)
 K PXAERR
"RTN","PXAI",115,0)
 ;
"RTN","PXAI",116,0)
IMM ;--IMMUNIZATION
"RTN","PXAI",117,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("IMMUNIZATION",PXAK))  Q:PXAK=""  D
"RTN","PXAI",118,0)
 . D IMM^PXAIIMM I $G(PXAERRF) D ERR
"RTN","PXAI",119,0)
 K PXAERR
"RTN","PXAI",120,0)
 ;
"RTN","PXAI",121,0)
SKIN ;--SKIN TEST
"RTN","PXAI",122,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("SKIN TEST",PXAK))  Q:PXAK=""  D
"RTN","PXAI",123,0)
 . D SKIN^PXAISK I $G(PXAERRF) D ERR
"RTN","PXAI",124,0)
 K PXAERR
"RTN","PXAI",125,0)
 ;
"RTN","PXAI",126,0)
 ;
"RTN","PXAI",127,0)
 D OTHER^PXAIPRV
"RTN","PXAI",128,0)
 ;
"RTN","PXAI",129,0)
 ;
"RTN","PXAI",130,0)
 I $D(^TMP("PXK",$J)) D
"RTN","PXAI",131,0)
 . D EN1^PXKMAIN
"RTN","PXAI",132,0)
 . M ERRRET=PXKERROR
"RTN","PXAI",133,0)
 . D PRIM^PXAIPRV K PRVDR
"RTN","PXAI",134,0)
 . D EVENT^PXKMAIN
"RTN","PXAI",135,0)
 S PXACCNT=$P($G(^AUPNVSIT(PXAVISIT,0)),"^",26) ;PX*1.0*164 ;Sets the PFSS Account Reference, if any
"RTN","PXAI",136,0)
 K ^TMP("PXK",$J),PXAERR,PXKERROR
"RTN","PXAI",137,0)
 Q $S($G(PXAERRF):-1,1:1)
"RTN","PXAI",138,0)
 ;
"RTN","PXAI",139,0)
 ;
"RTN","PXAI",140,0)
EXIT ;--EXIT AND CLEAN UP
"RTN","PXAI",141,0)
 D EVENT^PXKMAIN
"RTN","PXAI",142,0)
 K ^TMP("PXK",$J),PRVDR
"RTN","PXAI",143,0)
 K PXAERR
"RTN","PXAI",144,0)
 Q
"RTN","PXAI",145,0)
 ;-----------------SUBROUTINES-----------------------
"RTN","PXAI",146,0)
ERR ;
"RTN","PXAI",147,0)
 ;
"RTN","PXAI",148,0)
 ;
"RTN","PXAI",149,0)
 I '$D(PXADI("DIALOG")) Q
"RTN","PXAI",150,0)
 N NODE,SCREEN
"RTN","PXAI",151,0)
 S PXAERR(1)=$G(PXADATA),PXAERR(2)=$G(PXAPKG),PXAERR(3)=$G(PXASOURC)
"RTN","PXAI",152,0)
 S PXAERR(4)=$G(PXAVISIT),PXAERR(5)=$G(PXAUSER)_"  "_$P($G(^VA(200,PXAUSER,0)),"^",1)
"RTN","PXAI",153,0)
 I $G(PXANOT)=1 D EXTERNAL
"RTN","PXAI",154,0)
 E  D INTERNAL
"RTN","PXAI",155,0)
 D ARRAY^PXAICPTV
"RTN","PXAI",156,0)
 K PXADI("DIALOG")
"RTN","PXAI",157,0)
 Q
"RTN","PXAI",158,0)
 ;
"RTN","PXAI",159,0)
EXTERNAL ;---SEND ERRORS TO SCREEN
"RTN","PXAI",160,0)
 W !,"-----------------------------------------------------------------"
"RTN","PXAI",161,0)
 D BLD^DIALOG($G(PXADI("DIALOG")),.PXAERR,"","SCREEN","F")
"RTN","PXAI",162,0)
 D MSG^DIALOG("ESW","",50,10,"SCREEN")
"RTN","PXAI",163,0)
 ;
"RTN","PXAI",164,0)
 Q
"RTN","PXAI",165,0)
INTERNAL ;---SET ERRORS TO GLOBAL ARRAY
"RTN","PXAI",166,0)
 S NODE=PXADATA
"RTN","PXAI",167,0)
 D BLD^DIALOG($G(PXADI("DIALOG")),.PXAERR,.PXAERR,NODE,"F")
"RTN","PXAI",168,0)
 S NODE=$NA(@PXADATA@("DIERR",$J)) D MSG^DIALOG("ESW","",50,10,NODE)
"RTN","PXAI",169,0)
 Q
"RTN","PXAI",170,0)
 ;
"RTN","PXAI",171,0)
PROVDRST ; Check provider status (Primary or Secondary)
"RTN","PXAI",172,0)
 N PRVIEN,DETS,DIC,DR,DA,DIQ,PRI,PRVPRIM
"RTN","PXAI",173,0)
 I $G(PXAK)="" QUIT
"RTN","PXAI",174,0)
 S PRVIEN=0
"RTN","PXAI",175,0)
 F  S PRVIEN=$O(^AUPNVPRV("AD",PXAVISIT,PRVIEN)) Q:PRVIEN=""  D
"RTN","PXAI",176,0)
 .S DETS=$G(^AUPNVPRV(PRVIEN,0))
"RTN","PXAI",177,0)
 .I $P(DETS,U)=$G(@PXADATA@("PROVIDER",PXAK,"NAME")) D
"RTN","PXAI",178,0)
 ..S DIC=9000010.06,DR=.04,DA=PRVIEN
"RTN","PXAI",179,0)
 ..S DIQ="PRVPRIM(",DIQ(0)="EI" D EN^DIQ1
"RTN","PXAI",180,0)
 ..S PRI=$E($G(PRVPRIM(9000010.06,DA,DR,"E")),1,1)
"RTN","PXAI",181,0)
 ..S @PXADATA@("PROVIDER",PXAK,"PRIMARY")=$S(PRI="P":1,1:0)
"RTN","PXAI",182,0)
 Q
"RTN","PXAI",183,0)
POVPRM(VISIT,PRIMFND,POVARR) ;
"RTN","PXAI",184,0)
 N PRVIEN,DETS,STOP,LPXAK,ORDX,NDX,ORDXP
"RTN","PXAI",185,0)
 S PRVIEN=0
"RTN","PXAI",186,0)
 ;create array of existing DX; ORDX - pointer to ^ICD9(
"RTN","PXAI",187,0)
 F  S PRVIEN=$O(^AUPNVPOV("AD",PXAVISIT,PRVIEN)) Q:PRVIEN=""  D
"RTN","PXAI",188,0)
 .S DETS=$G(^AUPNVPOV(PRVIEN,0)),ORDX=$P(DETS,U)
"RTN","PXAI",189,0)
 .S ORDX(ORDX)=PRVIEN I $P(DETS,U,12)="P" S ORDXP(ORDX)=""
"RTN","PXAI",190,0)
 ; create array of passed DX; NDX - pointer to ^ICD9(
"RTN","PXAI",191,0)
 S PXAK=0 F  S PXAK=$O(@POVARR@("DX/PL",PXAK)) Q:PXAK=""  D
"RTN","PXAI",192,0)
 .S NDX=$G(@POVARR@("DX/PL",PXAK,"DIAGNOSIS")) S NDX(NDX)=PXAK
"RTN","PXAI",193,0)
 ; force entry of originally primary diagnosis with "S" flag
"RTN","PXAI",194,0)
 I PRIMFND S ORDX="" D
"RTN","PXAI",195,0)
 .F  S ORDX=$O(ORDXP(ORDX)) Q:ORDX=""  I PRIMFND'=ORDX D
"RTN","PXAI",196,0)
 ..I $D(NDX(ORDX)) S @POVARR@("DX/PL",NDX(ORDX),"PRIMARY")=0
"RTN","PXAI",197,0)
 ..E  D
"RTN","PXAI",198,0)
 ...S LPXAK=$O(@POVARR@("DX/PL",""),-1)
"RTN","PXAI",199,0)
 ...S @POVARR@("DX/PL",LPXAK+1,"DIAGNOSIS")=ORDX
"RTN","PXAI",200,0)
 ...S @POVARR@("DX/PL",LPXAK+1,"PRIMARY")=0
"RTN","PXAI",201,0)
 Q
"RTN","PXAI",202,0)
 ;
"RTN","PXAICPT")
0^3^B24514877^B22419944
"RTN","PXAICPT",1,0)
PXAICPT ;ISL/JVS,ISA/KWP,ESW - SET THE PROCEDURE(CPT) NODES ;8/10/04 4:39pm
"RTN","PXAICPT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**19,73,108,112,149,124,164**;Aug 12, 1996
"RTN","PXAICPT",3,0)
 ;
"RTN","PXAICPT",4,0)
 ;
"RTN","PXAICPT",5,0)
 Q
"RTN","PXAICPT",6,0)
CPT ;--CREAT PROVIDERS
"RTN","PXAICPT",7,0)
 ;
"RTN","PXAICPT",8,0)
 ;
"RTN","PXAICPT",9,0)
SET ;--SET AND NEW VARIABLES
"RTN","PXAICPT",10,0)
 N AFTER0,AFTER1,AFTER12,AFTER801,AFTER802,AFTER811,AFTER812
"RTN","PXAICPT",11,0)
 N BEFOR0,BEFOR1,BEFOR12,BEFOR801,BEFOR802,BEFOR811,BEFOR812
"RTN","PXAICPT",12,0)
 N PXAA,PXAB,SUB,PIECE,PXAAX,IENB,STOP
"RTN","PXAICPT",13,0)
 ;New Modifier Variables
"RTN","PXAICPT",14,0)
 D SET^PXAIMOD
"RTN","PXAICPT",15,0)
 K PXAERR
"RTN","PXAICPT",16,0)
 S PXAERR(8)=PXAK
"RTN","PXAICPT",17,0)
 S PXAERR(7)="PROCEDURE"
"RTN","PXAICPT",18,0)
 ;
"RTN","PXAICPT",19,0)
 S SUB="" F  S SUB=$O(@PXADATA@("PROCEDURE",PXAK,SUB)) Q:SUB=""  D
"RTN","PXAICPT",20,0)
 .S PXAA(SUB)=$G(@PXADATA@("PROCEDURE",PXAK,SUB))
"RTN","PXAICPT",21,0)
 ;Setup PXAA array for Modifiers
"RTN","PXAICPT",22,0)
 S SUB=""
"RTN","PXAICPT",23,0)
 F  S SUB=$O(@PXADATA@("PROCEDURE",PXAK,"MODIFIERS",SUB)) Q:SUB=""  D
"RTN","PXAICPT",24,0)
 .S PXAA("MODIFIERS",SUB)=""
"RTN","PXAICPT",25,0)
 ;
"RTN","PXAICPT",26,0)
VAL ;--VALIDATE ENOUGH DATA
"RTN","PXAICPT",27,0)
 D VAL^PXAICPTV Q:$G(STOP)
"RTN","PXAICPT",28,0)
 ;
"RTN","PXAICPT",29,0)
 ;
"RTN","PXAICPT",30,0)
SETVARA ;--SET VISIT VARIABLES
"RTN","PXAICPT",31,0)
 S $P(AFTER0,"^",1)=$G(PXAA("PROCEDURE"))
"RTN","PXAICPT",32,0)
 I $G(PXAA("DELETE")) S $P(AFTER0,"^",1)="@"
"RTN","PXAICPT",33,0)
 S $P(AFTER0,"^",2)=$G(PATIENT)
"RTN","PXAICPT",34,0)
 S $P(AFTER0,"^",3)=$G(PXAVISIT)
"RTN","PXAICPT",35,0)
 S $P(AFTER0,"^",4)=$G(PXAA("NARRATIVE")) D
"RTN","PXAICPT",36,0)
 .I $G(PXAA("NARRATIVE"))']""!($L($G(PXAA("NARRATIVE")))>245) D
"RTN","PXAICPT",37,0)
 ..S $P(AFTER0,"^",4)=$P($$CPT^ICPTCOD($G(PXAA("PROCEDURE")),$G(IDATE)),"^",3) ;-- TEXT OF NARRATIVE
"RTN","PXAICPT",38,0)
 .I $G(PXAA("NARRATIVE"))]"" S $P(AFTER0,"^",4)=+$$PROVNARR^PXAPI($G(PXAA("NARRATIVE")),9000010.18)
"RTN","PXAICPT",39,0)
 I $P(AFTER0,"^",4)<0 D VAL04^PXAICPTV,ERR^PXAI Q:$D(STOP)
"RTN","PXAICPT",40,0)
 S $P(AFTER0,"^",5)=$G(PXAA("DIAGNOSIS"))
"RTN","PXAICPT",41,0)
 ;PX*1*124 - add dx
"RTN","PXAICPT",42,0)
 S $P(AFTER0,"^",9)=$G(PXAA("DIAGNOSIS 2"))
"RTN","PXAICPT",43,0)
 S $P(AFTER0,"^",10)=$G(PXAA("DIAGNOSIS 3"))
"RTN","PXAICPT",44,0)
 S $P(AFTER0,"^",11)=$G(PXAA("DIAGNOSIS 4"))
"RTN","PXAICPT",45,0)
 S $P(AFTER0,"^",12)=$G(PXAA("DIAGNOSIS 5"))
"RTN","PXAICPT",46,0)
 S $P(AFTER0,"^",13)=$G(PXAA("DIAGNOSIS 6"))
"RTN","PXAICPT",47,0)
 S $P(AFTER0,"^",14)=$G(PXAA("DIAGNOSIS 7"))
"RTN","PXAICPT",48,0)
 S $P(AFTER0,"^",15)=$G(PXAA("DIAGNOSIS 8"))
"RTN","PXAICPT",49,0)
 I $G(PXAA("QTY"))="" S PXAA("QTY")=1
"RTN","PXAICPT",50,0)
 S $P(AFTER0,"^",16)=$G(PXAA("QTY")) I $G(PXAA("QTY"))<1 S PXAA("DELETE")=1
"RTN","PXAICPT",51,0)
 S $P(AFTER0,"^",17)=$G(PXAA("ORD REFERENCE"))
"RTN","PXAICPT",52,0)
 I $$SWSTAT^IBBAPI() D  ;PX*1.0*164
"RTN","PXAICPT",53,0)
 . S $P(AFTER0,"^",19)=$G(PXAA("DEPARTMENT"))
"RTN","PXAICPT",54,0)
 . I $P(AFTER0,"^",19)="",$G(^AUPNVSIT(PXAVISIT,0)),$P(^AUPNVSIT(PXAVISIT,0),"^",8) S $P(AFTER0,"^",19)=$P($G(^DIC(40.7,$P(^AUPNVSIT(PXAVISIT,0),"^",8),0)),"^",2)
"RTN","PXAICPT",55,0)
 ;Set Modifier nodes in AFTER1
"RTN","PXAICPT",56,0)
 D SETVARA^PXAIMOD
"RTN","PXAICPT",57,0)
 ;
"RTN","PXAICPT",58,0)
 S $P(AFTER12,"^",1)=$G(PXAA("EVENT D/T"))
"RTN","PXAICPT",59,0)
 ;PX*1*124 - add ord prv
"RTN","PXAICPT",60,0)
 S $P(AFTER12,"^",2)=$G(PXAA("ORD PROVIDER"))
"RTN","PXAICPT",61,0)
 S $P(AFTER12,"^",4)=$G(PXAA("ENC PROVIDER"))
"RTN","PXAICPT",62,0)
 ;PX*1*108 - do not try to file a provider from a "DELETED" cpt
"RTN","PXAICPT",63,0)
 I $G(PXAA("ENC PROVIDER"))]"",'$G(PXAA("DELETE")) D
"RTN","PXAICPT",64,0)
 .S ^TMP("PXAIADDPRV",$J,$G(PXAA("ENC PROVIDER")))=""
"RTN","PXAICPT",65,0)
 ;PX*1*124 - do not try to file a provider from a "DELETED" cpt
"RTN","PXAICPT",66,0)
 I $G(PXAA("ORD PROVIDER"))]"",'$G(PXAA("DELETE")) D
"RTN","PXAICPT",67,0)
 .S ^TMP("PXAIADDPRV",$J,$G(PXAA("ORD PROVIDER")))=""
"RTN","PXAICPT",68,0)
 ;
"RTN","PXAICPT",69,0)
 S $P(AFTER802,"^",1)=$G(PXAA("CATEGORY"))
"RTN","PXAICPT",70,0)
 I $G(PXAA("CATEGORY"))]"" S $P(AFTER802,"^",1)=+$$PROVNARR^PXAPI($G(PXAA("CATEGORY")),9000010.18)
"RTN","PXAICPT",71,0)
 I $P(AFTER802,"^",1)<0 D VAL45^PXAICPTV,ERR^PXAI Q:$D(STOP)
"RTN","PXAICPT",72,0)
 S $P(AFTER811,"^",1)=$G(PXAA("COMMENT"))
"RTN","PXAICPT",73,0)
 ;
"RTN","PXAICPT",74,0)
 ;
"RTN","PXAICPT",75,0)
 ;
"RTN","PXAICPT",76,0)
 ;--PACKAGE AND SOURCE
"RTN","PXAICPT",77,0)
 ;
"RTN","PXAICPT",78,0)
 S $P(AFTER812,"^",2)=$G(PXAPKG)
"RTN","PXAICPT",79,0)
 S $P(AFTER812,"^",3)=$G(PXASOURC)
"RTN","PXAICPT",80,0)
 ;
"RTN","PXAICPT",81,0)
SETPXKA ;--SET PXK ARRAY AFTER
"RTN","PXAICPT",82,0)
 S ^TMP("PXK",$J,"CPT",PXAK,0,"AFTER")=AFTER0
"RTN","PXAICPT",83,0)
 ;Set ^TMP("PXK",$J,"CPT",PXAK,1,ien,"AFTER")=MODIEN
"RTN","PXAICPT",84,0)
 D SETPXKA^PXAIMOD
"RTN","PXAICPT",85,0)
 S ^TMP("PXK",$J,"CPT",PXAK,12,"AFTER")=AFTER12
"RTN","PXAICPT",86,0)
 S ^TMP("PXK",$J,"CPT",PXAK,802,"AFTER")=AFTER802
"RTN","PXAICPT",87,0)
 S ^TMP("PXK",$J,"CPT",PXAK,811,"AFTER")=AFTER811
"RTN","PXAICPT",88,0)
 S ^TMP("PXK",$J,"CPT",PXAK,812,"AFTER")=AFTER812
"RTN","PXAICPT",89,0)
 ;
"RTN","PXAICPT",90,0)
SETVARB ;--SET VARIABLES BEFORE
"RTN","PXAICPT",91,0)
 D
"RTN","PXAICPT",92,0)
 .N PXBKY,PXBSAM,PXBSKY,PXBCNT,PXI,PRV,ITEM
"RTN","PXAICPT",93,0)
 .D CPT^PXBGCPT(PXAVISIT)
"RTN","PXAICPT",94,0)
 .S PXAAX("PROCEDURE")=$P($G(^ICPT($G(PXAA("PROCEDURE")),0)),"^",1)
"RTN","PXAICPT",95,0)
 .I $G(PXAA("DELETE"))=1 S PXAAX("PROCEDURE")=$P($G(^ICPT($G(PXAA("PROCEDURE")),0)),"^",1)
"RTN","PXAICPT",96,0)
 .S ITEM=""
"RTN","PXAICPT",97,0)
 .I PXBCNT>0,$G(PXAAX("PROCEDURE"))]"" S ITEM=$O(PXBKY(PXAAX("PROCEDURE"),0))
"RTN","PXAICPT",98,0)
 .I ITEM]"" D
"RTN","PXAICPT",99,0)
 ..;--LOOK UP USING CPT AND PROVIDER
"RTN","PXAICPT",100,0)
 ..S PXI="" F  S PXI=$O(PXBKY(PXAAX("PROCEDURE"),PXI)) Q:PXI=""  D
"RTN","PXAICPT",101,0)
 ...I $D(^IBE(357.69,PXAAX("PROCEDURE"))) D  Q  ;DBIA #: 1906
"RTN","PXAICPT",102,0)
 ....S (^TMP("PXK",$J,"CPT",PXAK,"IEN"),IENB)=$O(PXBSKY(PXI,0))
"RTN","PXAICPT",103,0)
 ...I $G(PXAA("ENC PROVIDER")) D  Q
"RTN","PXAICPT",104,0)
 ....S PRV=$P(^VA(200,$G(PXAA("ENC PROVIDER")),0),"^",1)
"RTN","PXAICPT",105,0)
 ....I $P($G(PXBKY(PXAAX("PROCEDURE"),PXI)),"^",3)=PRV D
"RTN","PXAICPT",106,0)
 .....S (^TMP("PXK",$J,"CPT",PXAK,"IEN"),IENB)=$O(PXBSKY(PXI,0))
"RTN","PXAICPT",107,0)
 I $G(IENB) D
"RTN","PXAICPT",108,0)
 .F PIECE=0,12,802,811,812 S ^TMP("PXK",$J,"CPT",PXAK,PIECE,"BEFORE")=$G(^AUPNVCPT(IENB,PIECE))
"RTN","PXAICPT",109,0)
 .;Set ^TMP("PXK",$J,"CPT",PXAK,1,ien,"BEFORE")=MODIEN
"RTN","PXAICPT",110,0)
 .D SETVARB^PXAIMOD
"RTN","PXAICPT",111,0)
 E  D
"RTN","PXAICPT",112,0)
 .S (BEFOR0,BEFOR12,BEFOR802,BEFOR811,BEFOR812)=""
"RTN","PXAICPT",113,0)
 .;
"RTN","PXAICPT",114,0)
SETPXKB .;--SET PXK ARRAY BEFORE
"RTN","PXAICPT",115,0)
 .S ^TMP("PXK",$J,"CPT",PXAK,0,"BEFORE")=BEFOR0
"RTN","PXAICPT",116,0)
 .;Set ^TMP("PXK",$J,"CPT",PXAK,1,ien,"BEFORE")=MODIEN
"RTN","PXAICPT",117,0)
 .D SETPXKB^PXAIMOD
"RTN","PXAICPT",118,0)
 .S ^TMP("PXK",$J,"CPT",PXAK,12,"BEFORE")=BEFOR12
"RTN","PXAICPT",119,0)
 .S ^TMP("PXK",$J,"CPT",PXAK,802,"BEFORE")=BEFOR802
"RTN","PXAICPT",120,0)
 .S ^TMP("PXK",$J,"CPT",PXAK,811,"BEFORE")=BEFOR811
"RTN","PXAICPT",121,0)
 .S ^TMP("PXK",$J,"CPT",PXAK,812,"BEFORE")=BEFOR812
"RTN","PXAICPT",122,0)
 .S ^TMP("PXK",$J,"CPT",PXAK,"IEN")=""
"RTN","PXAICPT",123,0)
 ;
"RTN","PXAICPT",124,0)
MISC ;--MISCELLANEOUS NODE
"RTN","PXAICPT",125,0)
 ;
"RTN","PXAICPT",126,0)
 Q
"RTN","PXAIVST")
0^4^B15847806^B15439008
"RTN","PXAIVST",1,0)
PXAIVST ;ISL/JVS,KWP,ESW - GET A VISIT FROM ENCOUNTER NODE ;11/20/02 4:38pm
"RTN","PXAIVST",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**5,9,15,74,111,96,130,124,164**;Aug 12, 1996
"RTN","PXAIVST",3,0)
 ;
"RTN","PXAIVST",4,0)
 ;
"RTN","PXAIVST",5,0)
 Q
"RTN","PXAIVST",6,0)
VST ;--CREAT A VISIT
"RTN","PXAIVST",7,0)
 ;
"RTN","PXAIVST",8,0)
SET ;--SET AND NEW VARIABLES
"RTN","PXAIVST",9,0)
 N AFTER0,AFTER21,AFTER800,AFTER150,BEFOR0,BEFOR21,BEFOR800,BEFOR150
"RTN","PXAIVST",10,0)
 N AFTER811,BEFOR811,BEFOR812
"RTN","PXAIVST",11,0)
 N PXAA,PXAB,SUB,PIECE,STOP
"RTN","PXAIVST",12,0)
 N AFTER8A,AFTER812
"RTN","PXAIVST",13,0)
 ;
"RTN","PXAIVST",14,0)
 S SUB="" F  S SUB=$O(@PXADATA@("ENCOUNTER",1,SUB)) Q:SUB=""  D
"RTN","PXAIVST",15,0)
 .S PXAA(SUB)=@PXADATA@("ENCOUNTER",1,SUB)
"RTN","PXAIVST",16,0)
 ;
"RTN","PXAIVST",17,0)
 S (AFTER812,BEFOR812)=""
"RTN","PXAIVST",18,0)
 ;
"RTN","PXAIVST",19,0)
 S PXAK=1
"RTN","PXAIVST",20,0)
 S PXAERR(8)=1
"RTN","PXAIVST",21,0)
 S PXAERR(7)="ENCOUNTER"
"RTN","PXAIVST",22,0)
 ;
"RTN","PXAIVST",23,0)
VAL ;--VALIDATE ENOUGH DATA
"RTN","PXAIVST",24,0)
 I $D(@PXADATA@("ENCOUNTER")) D VAL^PXAIVSTV Q:$G(STOP)
"RTN","PXAIVST",25,0)
 I $G(PXAVISIT) S (PATIENT,PXAA("PATIENT"))=$P(^AUPNVSIT(PXAVISIT,0),"^",5) S PXAA("ENC D/T")=$P(^AUPNVSIT(PXAVISIT,0),"^",1) S PXAA("HOS LOC")=$P(^AUPNVSIT(PXAVISIT,0),"^",22)
"RTN","PXAIVST",26,0)
 ;
"RTN","PXAIVST",27,0)
SETVARA ;--SET VISIT VARIABLES
"RTN","PXAIVST",28,0)
 S $P(AFTER0,"^",1)=$G(PXAA("ENC D/T"))
"RTN","PXAIVST",29,0)
 ;PX*1*96 - Set TYPE (Piece #3) according to following;
"RTN","PXAIVST",30,0)
 ; 1. If OUTSIDE LOCATION then TYPE is "O"
"RTN","PXAIVST",31,0)
 ; 2. If no OUTSIDE LOCATION but INSTITUTION then TYPE is "V"
"RTN","PXAIVST",32,0)
 ; 3. Else set to value of DUZ("AG")
"RTN","PXAIVST",33,0)
 ;Set TYPE
"RTN","PXAIVST",34,0)
 I $L($G(PXAA("OUTSIDE LOCATION"))) S $P(AFTER0,U,3)="O"
"RTN","PXAIVST",35,0)
 E  I $L($G(PXAA("INSTITUTION"))) S $P(AFTER0,U,3)="V"
"RTN","PXAIVST",36,0)
 E  S $P(AFTER0,U,3)=$G(DUZ("AG"))
"RTN","PXAIVST",37,0)
 S $P(AFTER0,"^",5)=$G(PXAA("PATIENT"))
"RTN","PXAIVST",38,0)
 S $P(AFTER0,"^",6)=$G(PXAA("INSTITUTION"))
"RTN","PXAIVST",39,0)
 S $P(AFTER0,"^",7)=$G(PXAA("SERVICE CATEGORY"))
"RTN","PXAIVST",40,0)
 S $P(AFTER0,"^",8)="" ;$G(PXAA("DSS ID"))
"RTN","PXAIVST",41,0)
 S $P(AFTER0,"^",12)=$G(PXAA("PARENT"))
"RTN","PXAIVST",42,0)
 S $P(AFTER0,"^",18)=$G(PXAA("CHECKOUT D/T"))
"RTN","PXAIVST",43,0)
 S $P(AFTER0,"^",21)=$G(PXAA("ELIGIBILITY"))
"RTN","PXAIVST",44,0)
 S $P(AFTER0,"^",26)=$S($G(PXACCNT)>0:$G(PXACCNT),1:"") ;PX*1.0*164
"RTN","PXAIVST",45,0)
 S $P(PXELAP,"^",1)=$G(PXAA("ELIGIBILITY"))
"RTN","PXAIVST",46,0)
 S $P(PXELAP,"^",3)=$G(PXAA("APPT"))
"RTN","PXAIVST",47,0)
 S $P(AFTER0,"^",22)=$G(PXAA("HOS LOC"))
"RTN","PXAIVST",48,0)
 S $P(AFTER800,"^",1)=$G(PXAA("SC"))
"RTN","PXAIVST",49,0)
 S $P(AFTER800,"^",2)=$G(PXAA("AO"))
"RTN","PXAIVST",50,0)
 S $P(AFTER800,"^",3)=$G(PXAA("IR"))
"RTN","PXAIVST",51,0)
 S $P(AFTER800,"^",4)=$G(PXAA("EC"))
"RTN","PXAIVST",52,0)
 S $P(AFTER800,"^",5)=$G(PXAA("MST"))
"RTN","PXAIVST",53,0)
 ;PX*1*111 - Add HNC
"RTN","PXAIVST",54,0)
 S $P(AFTER800,"^",6)=$G(PXAA("HNC"))
"RTN","PXAIVST",55,0)
 S $P(AFTER800,"^",7)=$G(PXAA("CV"))
"RTN","PXAIVST",56,0)
 ;--VALIDATE SERVICE CONNECTEDNESS
"RTN","PXAIVST",57,0)
 ;
"RTN","PXAIVST",58,0)
 S AFTER8A=AFTER800 D VALSCC^PXAIVSTV
"RTN","PXAIVST",59,0)
 S AFTER800=AFTER8A
"RTN","PXAIVST",60,0)
 ;
"RTN","PXAIVST",61,0)
 S $P(AFTER21,"^",1)=$G(PXAA("OUTSIDE LOCATION")) ;PX/96
"RTN","PXAIVST",62,0)
 S $P(AFTER150,"^",3)=$G(PXAA("ENCOUNTER TYPE"))
"RTN","PXAIVST",63,0)
 S $P(AFTER811,"^",1)=$G(PXAA("COMMENT"))
"RTN","PXAIVST",64,0)
 S $P(AFTER812,"^",3)=$G(PXASOURC)
"RTN","PXAIVST",65,0)
SETPXKA ;--SET PXK ARRAY AFTER
"RTN","PXAIVST",66,0)
 S ^TMP("PXK",$J,"VST",1,0,"AFTER")=AFTER0
"RTN","PXAIVST",67,0)
 S ^TMP("PXK",$J,"VST",1,21,"AFTER")=AFTER21
"RTN","PXAIVST",68,0)
 S ^TMP("PXK",$J,"VST",1,150,"AFTER")=AFTER150
"RTN","PXAIVST",69,0)
 S ^TMP("PXK",$J,"VST",1,800,"AFTER")=AFTER800
"RTN","PXAIVST",70,0)
 S ^TMP("PXK",$J,"VST",1,811,"AFTER")=AFTER811
"RTN","PXAIVST",71,0)
 S ^TMP("PXK",$J,"VST",1,812,"AFTER")=AFTER812
"RTN","PXAIVST",72,0)
SETVARB ;--SET VARIABLES BEFORE
"RTN","PXAIVST",73,0)
 I $G(PXAVISIT) D
"RTN","PXAIVST",74,0)
 .F PIECE=0,21,150,800,811,812 S ^TMP("PXK",$J,"VST",1,PIECE,"BEFORE")=$G(^AUPNVSIT(PXAVISIT,PIECE))
"RTN","PXAIVST",75,0)
 .I '$D(@PXADATA@("ENCOUNTER")) D
"RTN","PXAIVST",76,0)
 ..F PIECE=0,21,150,800,811,812 S ^TMP("PXK",$J,"VST",1,PIECE,"AFTER")=$G(^AUPNVSIT(PXAVISIT,PIECE))
"RTN","PXAIVST",77,0)
 E  D
"RTN","PXAIVST",78,0)
 .S (BEFOR0,BEFOR21,BEFOR150,BEFOR800,BEFOR811)=""
"RTN","PXAIVST",79,0)
 .;
"RTN","PXAIVST",80,0)
SETPXKB .;--SET PXK ARRAY BEFORE
"RTN","PXAIVST",81,0)
 .S ^TMP("PXK",$J,"VST",1,0,"BEFORE")=BEFOR0
"RTN","PXAIVST",82,0)
 .S ^TMP("PXK",$J,"VST",1,21,"BEFORE")=BEFOR21
"RTN","PXAIVST",83,0)
 .S ^TMP("PXK",$J,"VST",1,150,"BEFORE")=BEFOR150
"RTN","PXAIVST",84,0)
 .S ^TMP("PXK",$J,"VST",1,800,"BEFORE")=BEFOR800
"RTN","PXAIVST",85,0)
 .S ^TMP("PXK",$J,"VST",1,811,"BEFORE")=BEFOR811
"RTN","PXAIVST",86,0)
 .S ^TMP("PXK",$J,"VST",1,812,"BEFORE")=BEFOR812
"RTN","PXAIVST",87,0)
MISC ;--MISCELLANEOUS NODE
"RTN","PXAIVST",88,0)
 S ^TMP("PXK",$J,"VST",1,"IEN")=$G(PXAVISIT)
"RTN","PXAIVST",89,0)
 ;
"RTN","PXAIVST",90,0)
CALL ;--CALL
"RTN","PXAIVST",91,0)
 S PXALOOK=$$LOOKVSIT^PXUTLVST($P(AFTER0,U,5),$P(AFTER0,U),$P(AFTER0,U,22),$P(AFTER0,"^",8),$P(AFTER0,U,6)) I $G(PXALOOK)>0 S PXAVISIT=PXALOOK ;PX/96 - included INSTITUTION - $P(AFTER0,U,6)
"RTN","PXAIVST",92,0)
 D EN1^PXKMAIN
"RTN","PXAIVST",93,0)
 I '$G(PXAVISIT) S PXAVISIT=$G(^TMP("PXK",$J,"VST",1,"IEN"))
"RTN","PXAIVST",94,0)
 Q
"RTN","PXAPI")
0^1^B37240429^B36580622
"RTN","PXAPI",1,0)
PXAPI ;ISL/dee - PCE's APIs ;4/16/97
"RTN","PXAPI",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**15,14,27,28,124,164**;Aug 12, 1996
"RTN","PXAPI",3,0)
 Q
"RTN","PXAPI",4,0)
 ;
"RTN","PXAPI",5,0)
PROVNARR(PXPNAR,PXFILE,PXCLEX) ;Convert external Provider Narrative to internal.
"RTN","PXAPI",6,0)
 ;Input:
"RTN","PXAPI",7,0)
 ;  PXPNAR    Is the text of the provider narrative.
"RTN","PXAPI",8,0)
 ;  PXFILE  Is the file that the returned pointer will be stored in.
"RTN","PXAPI",9,0)
 ;              If a new entry is created then this tells the context
"RTN","PXAPI",10,0)
 ;              that it was created under by the file using it.
"RTN","PXAPI",11,0)
 ;  PXCLEX  Is and optional pointer to the Lexicon for this narrative.
"RTN","PXAPI",12,0)
 ;
"RTN","PXAPI",13,0)
 ;Returns:
"RTN","PXAPI",14,0)
 ;  Pointer to the provider narrative file ^ narrative
"RTN","PXAPI",15,0)
 ;  or pointer to the provider narrative file ^ narrative ^1
"RTN","PXAPI",16,0)
 ;    where 1 indicates that the entry has just been added
"RTN","PXAPI",17,0)
 ;  or -1 if was unsuccessful.
"RTN","PXAPI",18,0)
 ;
"RTN","PXAPI",19,0)
 N DIC,Y,DLAYGO,DD,DO,DA
"RTN","PXAPI",20,0)
 S DIC="^AUTNPOV(",DIC(0)="L",DLAYGO=9999999.27
"RTN","PXAPI",21,0)
 S (DA,Y)=0
"RTN","PXAPI",22,0)
 S X=$E(PXPNAR,1,245)
"RTN","PXAPI",23,0)
 Q:X="" -1
"RTN","PXAPI",24,0)
 L +^AUTNPOV(0):60
"RTN","PXAPI",25,0)
 E  W !,"The Provider Narrative is LOCKED try again." Q -1
"RTN","PXAPI",26,0)
 F  S DA=$O(^AUTNPOV("B",$E(X,1,30),DA)) Q:DA'>0  I $P(^AUTNPOV(DA,0),"^")=X S Y=DA_"^"_X Q
"RTN","PXAPI",27,0)
 I '(+Y) D
"RTN","PXAPI",28,0)
 . K DA,Y
"RTN","PXAPI",29,0)
 . D FILE^DICN
"RTN","PXAPI",30,0)
 . I +Y>0,($G(PXCLEX)!$G(PXFILE)) S ^AUTNPOV(+Y,757)=$G(PXCLEX)_"^"_$G(PXFILE)
"RTN","PXAPI",31,0)
 L -^AUTNPOV(0)
"RTN","PXAPI",32,0)
 Q $S(+Y>0:Y,1:-1)
"RTN","PXAPI",33,0)
 ;
"RTN","PXAPI",34,0)
STOPCODE(PXASTOP,PXAPAT,PXADATE) ;This is the function call to return the quantity
"RTN","PXAPI",35,0)
 ;                  of a particular Stop Code for a patient on one day.
"RTN","PXAPI",36,0)
 ;Input
"RTN","PXAPI",37,0)
 ;  PXASTOP  (required) pointer to #40.7
"RTN","PXAPI",38,0)
 ;  PXAPAT   (required) pointer to #2
"RTN","PXAPI",39,0)
 ;  PXADATE  (required) the date in Fileman format
"RTN","PXAPI",40,0)
 ;                     (time is ignored if passed)
"RTN","PXAPI",41,0)
 ;Returns
"RTN","PXAPI",42,0)
 ;  the count of how many of that stop code are stored for that one day
"RTN","PXAPI",43,0)
 ;
"RTN","PXAPI",44,0)
 N PXAVST,PXREVDAT,PXENDDAT,PXACOUNT
"RTN","PXAPI",45,0)
 S PXASTOP=$G(PXASTOP)
"RTN","PXAPI",46,0)
 S PXAPAT=+$G(PXAPAT)
"RTN","PXAPI",47,0)
 S PXADATE=+$G(PXADATE)
"RTN","PXAPI",48,0)
 S (PXACOUNT,PXAVST)=0
"RTN","PXAPI",49,0)
 S PXREVDAT=9999999-$P(PXADATE,".")-.00000001
"RTN","PXAPI",50,0)
 S PXENDDAT=PXREVDAT+.9
"RTN","PXAPI",51,0)
 F  S PXREVDAT=$O(^AUPNVSIT("AA",PXAPAT,PXREVDAT)) Q:'PXREVDAT!(PXREVDAT>PXENDDAT)  D
"RTN","PXAPI",52,0)
 . F  S PXAVST=$O(^AUPNVSIT("AA",PXAPAT,PXREVDAT,PXAVST)) Q:'PXAVST  D
"RTN","PXAPI",53,0)
 .. I PXASTOP=$P(^AUPNVSIT(PXAVST,0),"^",8),"E"'=$P(^AUPNVSIT(PXAVST,0),"^",7) S PXACOUNT=PXACOUNT+1
"RTN","PXAPI",54,0)
 Q PXACOUNT
"RTN","PXAPI",55,0)
 ;
"RTN","PXAPI",56,0)
CPT(PXACPT,PXAPAT,PXADATE,PXAHLOC) ;This is the function call to return the quantity
"RTN","PXAPI",57,0)
 ;                  of a particular CPT for a patient on one day and for
"RTN","PXAPI",58,0)
 ;                  one hospital location if passed.
"RTN","PXAPI",59,0)
 ;Input
"RTN","PXAPI",60,0)
 ;  PXACPT  (required) pointer to #81
"RTN","PXAPI",61,0)
 ;  PXAPAT   (required) pointer to #2
"RTN","PXAPI",62,0)
 ;  PXADATE  (required) the date in Fileman format
"RTN","PXAPI",63,0)
 ;                     (time is ignored if passed)
"RTN","PXAPI",64,0)
 ;  PXAHLOC  (optional) pointer to #44
"RTN","PXAPI",65,0)
 ;Returns
"RTN","PXAPI",66,0)
 ;  the count of how many (and quantity) of that cpt code are stored for that one day
"RTN","PXAPI",67,0)
 ;
"RTN","PXAPI",68,0)
 ;
"RTN","PXAPI",69,0)
 N PXAVST,PXAVCPT,PXREVDAT,PXENDDAT,PXACOUNT
"RTN","PXAPI",70,0)
 S PXACPT=$G(PXACPT)
"RTN","PXAPI",71,0)
 S PXAPAT=+$G(PXAPAT)
"RTN","PXAPI",72,0)
 S PXADATE=+$G(PXADATE)
"RTN","PXAPI",73,0)
 S PXAHLOC=+$G(PXAHLOC)
"RTN","PXAPI",74,0)
 S (PXACOUNT,PXAVST)=0
"RTN","PXAPI",75,0)
 S PXREVDAT=9999999-$P(PXADATE,".")-.00000001
"RTN","PXAPI",76,0)
 S PXENDDAT=PXREVDAT+.9
"RTN","PXAPI",77,0)
 F  S PXREVDAT=$O(^AUPNVSIT("AA",PXAPAT,PXREVDAT)) Q:'PXREVDAT!(PXREVDAT>PXENDDAT)  D
"RTN","PXAPI",78,0)
 . F  S PXAVST=$O(^AUPNVSIT("AA",PXAPAT,PXREVDAT,PXAVST)) Q:'PXAVST  D
"RTN","PXAPI",79,0)
 .. Q:"E"=$P(^AUPNVSIT(PXAVST,0),"^",7)
"RTN","PXAPI",80,0)
 .. Q:"1"=$P(^AUPNVSIT(PXAVST,150),"^",2)
"RTN","PXAPI",81,0)
 .. I PXAHLOC>0,PXAHLOC'=$P(^AUPNVSIT(PXAVST,0),"^",22) Q
"RTN","PXAPI",82,0)
 .. S PXAVCPT=0
"RTN","PXAPI",83,0)
 .. F  S PXAVCPT=$O(^AUPNVCPT("AD",PXAVST,PXAVCPT)) Q:'PXAVCPT  D
"RTN","PXAPI",84,0)
 ... I PXACPT=$P(^AUPNVCPT(PXAVCPT,0),"^",1) S PXACOUNT=PXACOUNT+$P(^(0),"^",16)
"RTN","PXAPI",85,0)
 Q PXACOUNT
"RTN","PXAPI",86,0)
 ;
"RTN","PXAPI",87,0)
INTV(WHAT,PACKAGE,SOURCE,VISIT,HL,DFN,APPT,LIMITDT,ALLHLOC) ;This api will prompt the user for Visit and related V-file data used to document an encounter.
"RTN","PXAPI",88,0)
 ;See INTV^PXBAPI for parameters and return values.
"RTN","PXAPI",89,0)
 ;
"RTN","PXAPI",90,0)
 I '($D(VISIT)#2) S VISIT=""
"RTN","PXAPI",91,0)
 I '($D(DFN)#2) S DFN=""
"RTN","PXAPI",92,0)
 I '($D(HL)#2) S HL=""
"RTN","PXAPI",93,0)
 ;
"RTN","PXAPI",94,0)
 Q $$INTV^PXBAPI(WHAT,PACKAGE,SOURCE,.VISIT,.HL,.DFN,$G(APPT),$G(LIMITDT),$G(ALLHLOC))
"RTN","PXAPI",95,0)
 ;
"RTN","PXAPI",96,0)
DELVFILE(WHICH,VISIT,PACKAGE,SOURCE,ASK,ECHO,USER) ;Deletes the requested data related to the visit.
"RTN","PXAPI",97,0)
 ;See DELVFILE^PXAPIDEL for parameters and return values.
"RTN","PXAPI",98,0)
 ;
"RTN","PXAPI",99,0)
 Q $$DELVFILE^PXAPIDEL(WHICH,VISIT,$G(PACKAGE),$G(SOURCE),$G(ASK),$G(ECHO),$G(USER))
"RTN","PXAPI",100,0)
 ;
"RTN","PXAPI",101,0)
DATA2PCE(DATA,PACKAGE,SOURCE,VISIT,USER,DISPLAY,ERROR,SCREEN,ARRAY,ACCOUNT) ;API to pass data for add/edit/delete to PCE
"RTN","PXAPI",102,0)
 ;See DATA2PCE^PXAI for parameters and return values.
"RTN","PXAPI",103,0)
 ;
"RTN","PXAPI",104,0)
 I '($D(DATA)#2) Q -3
"RTN","PXAPI",105,0)
 I '($D(PACKAGE)#2) Q -3
"RTN","PXAPI",106,0)
 I '($D(SOURCE)#2) Q -3
"RTN","PXAPI",107,0)
 I '($D(VISIT)#2) S VISIT=""
"RTN","PXAPI",108,0)
 Q $$DATA2PCE^PXAI(DATA,PACKAGE,SOURCE,.VISIT,$G(USER),$G(DISPLAY),.ERROR,$G(SCREEN),.ARRAY,.ACCOUNT) ;PX*1.0*164 CHANGED $G(ERROR) TO .ERROR
"RTN","PXAPI",109,0)
 ;
"RTN","PXAPI",110,0)
SOURCE(SOURCE) ;Get IEN of data source in the PCE Data Source file
"RTN","PXAPI",111,0)
 Q $$SOURCE^PXAPIUTL($G(SOURCE))
"RTN","PXAPI",112,0)
 ;
"RTN","PXAPI",113,0)
VISITLST(DFN,BEGINDT,ENDDT,HLOC,SCREEN,APPOINT,PROMPT,COSTATUS) ;--GATHER VISITS
"RTN","PXAPI",114,0)
 ;See VISITLST^PXBGVST for parameters and return values.
"RTN","PXAPI",115,0)
 ;
"RTN","PXAPI",116,0)
 I '($D(DFN)#2) Q "-2^NO PATIENT SELECTED"
"RTN","PXAPI",117,0)
 Q $$VISITLST^PXBGVST(DFN,$G(BEGINDT),$G(ENDDT),$G(HLOC),$G(SCREEN),$G(APPOINT),$G(PROMPT),$G(COSTATUS))
"RTN","PXAPI",118,0)
 ;
"RTN","PXAPI",119,0)
ENCEDIT(WHAT,PACKAGE,SOURCE,DFN,BEGINDT,ENDDT,HLOC,SCREEN,APPOINT,PROMPT,COSTATUS) ;--Ask for encounter the edit it of delete it
"RTN","PXAPI",120,0)
 ;See ENCEDIT^PXAPIEED for parameters and return values.
"RTN","PXAPI",121,0)
 ;
"RTN","PXAPI",122,0)
 Q $$ENCEDIT^PXAPIEED($G(WHAT),$G(PACKAGE),$G(SOURCE),$G(DFN),$G(BEGINDT),$G(ENDDT),$G(HLOC),$G(SCREEN),$G(APPOINT),$G(PROMPT),$G(COSTATUS))
"RTN","PXAPI",123,0)
 ;
"RTN","PXAPI",124,0)
LOPENCED(WHAT,PACKAGE,SOURCE,DFN,BEGINDT,ENDDT,HLOC,SCREEN,APPOINT,PROMPT,COSTATUS) ;--Ask for encounter the edit it of delete it
"RTN","PXAPI",125,0)
 ;See LOPENCED^PXAPIEED for parameters and return values.
"RTN","PXAPI",126,0)
 ;
"RTN","PXAPI",127,0)
 Q $$LOPENCED^PXAPIEED($G(WHAT),$G(PACKAGE),$G(SOURCE),$G(DFN),$G(BEGINDT),$G(ENDDT),$G(HLOC),$G(SCREEN),$G(APPOINT),$G(PROMPT),$G(COSTATUS))
"RTN","PXAPI",128,0)
 ;
"RTN","PXAPI",129,0)
GETENC(DFN,ENCDT,HLOC) ;--Get all of the encounter data
"RTN","PXAPI",130,0)
 ;See GETENC^PXKENC for parameters and return values.
"RTN","PXAPI",131,0)
 ;
"RTN","PXAPI",132,0)
 Q $$GETENC^PXKENC($G(DFN),$G(ENCDT),$G(HLOC))
"RTN","PXAPI",133,0)
 ;
"RTN","PXAPI",134,0)
ENCEVENT(VISIT,DONTKILL) ;--Get all of the encounter data
"RTN","PXAPI",135,0)
 ;See ENCEVENT^PXKENC for parameters and return values.
"RTN","PXAPI",136,0)
 ;
"RTN","PXAPI",137,0)
 D ENCEVENT^PXKENC($G(VISIT),$G(DONTKILL))
"RTN","PXAPI",138,0)
 Q
"RTN","PXAPI",139,0)
 ;
"RTN","PXAPI",140,0)
VST2APPT(VISIT) ;Is this visit related to an appointment
"RTN","PXAPI",141,0)
 ;See VST2APPT^PXUTL1 for parameters and return values.
"RTN","PXAPI",142,0)
 ;
"RTN","PXAPI",143,0)
 Q $$VST2APPT^PXUTL1($G(VISIT))
"RTN","PXAPI",144,0)
 ;
"RTN","PXAPI",145,0)
APPT2VST(DFN,ENCDT,HLOC) ;Get the visit for an Appointment
"RTN","PXAPI",146,0)
 ;See APPT2VST^PXUTL1 for parameters and return values.
"RTN","PXAPI",147,0)
 ;
"RTN","PXAPI",148,0)
 Q $$APPT2VST^PXUTL1($G(DFN),$G(ENCDT),$G(HLOC))
"RTN","PXAPI",149,0)
 ;
"RTN","PXAPI",150,0)
SWITCHD() ;This returns the date that PCE starts collecting the data
"RTN","PXAPI",151,0)
 ; instead Scheduling (switch over date).
"RTN","PXAPI",152,0)
 Q $P($G(^PX(815,1,0)),"^",2)
"RTN","PXAPI",153,0)
 ;
"RTN","PXAPI",154,0)
SWITCHCK(DATE) ;Returns 1 if after the switch over date 0 otherwise.
"RTN","PXAPI",155,0)
 N SWITCH
"RTN","PXAPI",156,0)
 S SWITCH=$P($G(^PX(815,1,0)),"^",2)
"RTN","PXAPI",157,0)
 Q:SWITCH<2960000 0
"RTN","PXAPI",158,0)
 Q SWITCH'>DATE
"RTN","PXAPI",159,0)
 ;
"RTN","PXAPI",160,0)
DISPVSIT ;Called by Scheduling to create a visit for a disposition
"RTN","PXAPI",161,0)
 ;Add to fix scheduling calling visit tracking wrong without the
"RTN","PXAPI",162,0)
 ;  dispositioning clinic.  Hospital Location is required by Visit
"RTN","PXAPI",163,0)
 ;  Tracking to work correctly.
"RTN","PXAPI",164,0)
 I $G(VSIT("LOC"))>0,'$D(^PX(815,1,"DHL","B",VSIT("LOC"))) S VSIT("LOC")=""
"RTN","PXAPI",165,0)
 I $G(VSIT("LOC"))'>0,'$D(ZTQUEUED) D
"RTN","PXAPI",166,0)
 . I $P(^PX(815,1,"DHL",0),"^",4)=1 S VSIT("LOC")=$O(^PX(815,1,"DHL","B",0))
"RTN","PXAPI",167,0)
 . E  D
"RTN","PXAPI",168,0)
 .. ;ask for Hospital location from those that can disposition
"RTN","PXAPI",169,0)
 .. N DIC,DA,X,Y
"RTN","PXAPI",170,0)
DISPASK .. S DA(1)=1
"RTN","PXAPI",171,0)
 .. S DIC="^PX(815,1,""DHL"","
"RTN","PXAPI",172,0)
 .. S DIC("P")=$P(^DD(815,401,0),"^",2)
"RTN","PXAPI",173,0)
 .. S DIC(0)="AEOQ"
"RTN","PXAPI",174,0)
 .. D ^DIC
"RTN","PXAPI",175,0)
 .. I Y>0 S VSIT("LOC")=$P(Y,"^",2)
"RTN","PXAPI",176,0)
 .. ;E  I '$D(DTOUT),'$D(DUOUT) W !!,$C(7),"Disposition Hospital Location is required." G DISPASK
"RTN","PXAPI",177,0)
 .. E  W !!,$C(7),"Disposition Hospital Location is required." G DISPASK
"RTN","PXAPI",178,0)
 I $G(VSIT("LOC"))'>0 S VSIT("IEN")=-1
"RTN","PXAPI",179,0)
 E  D ^VSIT
"RTN","PXAPI",180,0)
 Q
"RTN","PXAPI",181,0)
 ;
"RTN","PXAPI",182,0)
ACTIVPRV(PROVIDER,VISITDT) ;See if this is a good provider on the date of
"RTN","PXAPI",183,0)
 ;VISITDT and returns 1 if it is 0 if it is not.
"RTN","PXAPI",184,0)
 ;Can be used like S DIC("S")="I $$ACTIVPRV^PXAPIUTL(PRV,DATE)"
"RTN","PXAPI",185,0)
 Q:+$$PRVCLASS^PXAPIUTL($G(PROVIDER),$G(VISITDT))>0 1
"RTN","PXAPI",186,0)
 Q 0
"RTN","PXAPI",187,0)
 ;
"RTN","PXAPI",188,0)
PRVCLASS(PROVIDER,VISITDT) ;See if this is a good provider
"RTN","PXAPI",189,0)
 ;See PRVCLASS^PXAPIUTL for parameters and return values.
"RTN","PXAPI",190,0)
 Q $$PRVCLASS^PXAPIUTL($G(PROVIDER),$G(VISITDT))
"RTN","PXAPI",191,0)
 ;
"RTN","PXBAPI1")
0^27^B50290247^B50226263
"RTN","PXBAPI1",1,0)
PXBAPI1 ;ISL/JVS,dee - PCE's API - interview questions ;5/6/05 2:59pm
"RTN","PXBAPI1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**1,9,23,56,104,111,113,122,116,130,147,151,124,164**;Aug 12, 1996
"RTN","PXBAPI1",3,0)
 ;;
"RTN","PXBAPI1",4,0)
 Q
"RTN","PXBAPI1",5,0)
 ;
"RTN","PXBAPI1",6,0)
PROCESS(PXBEXIT) ;
"RTN","PXBAPI1",7,0)
 N PXBREQ
"RTN","PXBAPI1",8,0)
 I WHAT="INTV" D
"RTN","PXBAPI1",9,0)
 . ;-- Interview is all of the questions
"RTN","PXBAPI1",10,0)
 . D ADQ(.PXBEXIT) I PXBEXIT<1 Q 
"RTN","PXBAPI1",11,0)
1 . D PRV(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",12,0)
3 . D POV(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",13,0)
2 . D CPT(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",14,0)
 . I $P($G(^AUPNVSIT($G(PXBVST),150)),"^",3)="O" S PXBEXIT=0 Q
"RTN","PXBAPI1",15,0)
 . I '$$DISPOSIT^PXUTL1($G(PXBPAT),$P($G(^AUPNVSIT(PXBVST,0)),"^",1),$G(PXBVST)) D STP(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",16,0)
 E  I WHAT="ADDEDIT" D
"RTN","PXBAPI1",17,0)
 . D ADDEDIT
"RTN","PXBAPI1",18,0)
 E  I WHAT="ADQ" D
"RTN","PXBAPI1",19,0)
 . ;-- Adminstrative questions
"RTN","PXBAPI1",20,0)
 . D ADQ(.PXBEXIT)
"RTN","PXBAPI1",21,0)
 E  I WHAT="CODT" D
"RTN","PXBAPI1",22,0)
 . ;-- Check out Date/Time
"RTN","PXBAPI1",23,0)
 . D CODT(.PXBEXIT)
"RTN","PXBAPI1",24,0)
 . Q:PXBEXIT<1
"RTN","PXBAPI1",25,0)
 . D VISIT(.PXBEXIT)
"RTN","PXBAPI1",26,0)
 . I PXBVST'>0 S PXBEXIT=-2 Q
"RTN","PXBAPI1",27,0)
 E  I WHAT="SCC" D
"RTN","PXBAPI1",28,0)
 . ;-- Service connected conditions
"RTN","PXBAPI1",29,0)
 . S PXCECAT="VST" D SCC(.PXBEXIT) K PXCECAT
"RTN","PXBAPI1",30,0)
 . Q:PXBEXIT<1
"RTN","PXBAPI1",31,0)
 . D VISIT(.PXBEXIT)
"RTN","PXBAPI1",32,0)
 . I PXBVST'>0 S PXBEXIT=-2 Q
"RTN","PXBAPI1",33,0)
 E  I WHAT="PRV" D
"RTN","PXBAPI1",34,0)
 . ;-- Providers
"RTN","PXBAPI1",35,0)
 . D PRV(.PXBEXIT)
"RTN","PXBAPI1",36,0)
 E  I WHAT="CPT" D
"RTN","PXBAPI1",37,0)
 . ;-- Providers and CPT codes
"RTN","PXBAPI1",38,0)
 . D CPT(.PXBEXIT)
"RTN","PXBAPI1",39,0)
 E  I WHAT="POV" D
"RTN","PXBAPI1",40,0)
 . ;-- Diagnoses
"RTN","PXBAPI1",41,0)
 . D POV(.PXBEXIT)
"RTN","PXBAPI1",42,0)
 E  I WHAT="STP" D
"RTN","PXBAPI1",43,0)
 . ;-- Stop Codes
"RTN","PXBAPI1",44,0)
 . D STP(.PXBEXIT)
"RTN","PXBAPI1",45,0)
 E  S PXBEXIT=-3 W !,"Procedure ""INTV^PXAPI"" was called incorrectly, contact IRM."
"RTN","PXBAPI1",46,0)
 Q
"RTN","PXBAPI1",47,0)
 ;
"RTN","PXBAPI1",48,0)
ADDEDIT ;
"RTN","PXBAPI1",49,0)
 N PXANS
"RTN","PXBAPI1",50,0)
ADDEDIT1 ;
"RTN","PXBAPI1",51,0)
 D ADQ(.PXBEXIT)
"RTN","PXBAPI1",52,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",53,0)
 D PRV(.PXBEXIT)
"RTN","PXBAPI1",54,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",55,0)
 D POV(.PXBEXIT)
"RTN","PXBAPI1",56,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",57,0)
 ;
"RTN","PXBAPI1",58,0)
 ;Call to CPT is not determined by a credit stop code any more
"RTN","PXBAPI1",59,0)
 ;
"RTN","PXBAPI1",60,0)
 D CPT(.PXBEXIT)
"RTN","PXBAPI1",61,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",62,0)
ADDEDIT2 ;
"RTN","PXBAPI1",63,0)
 I PXBVST>0,'$D(^AUPNVCPT("AD",PXBVST)),'$D(^AUPNVSIT("AD",PXBVST)) D  I PXANS'=1 S PXBEXIT=1 G ADDEDIT1
"RTN","PXBAPI1",64,0)
 . N DIR,X,Y
"RTN","PXBAPI1",65,0)
 . W !!
"RTN","PXBAPI1",66,0)
 . S DIR(0)="Y"
"RTN","PXBAPI1",67,0)
 . S DIR("A",1)="Must have a STOP CODE or a PROCEDURE to complete this action."
"RTN","PXBAPI1",68,0)
 . S DIR("A")="Do you want to delete this encounter"
"RTN","PXBAPI1",69,0)
 . S DIR("B")="NO"
"RTN","PXBAPI1",70,0)
 . D ^DIR
"RTN","PXBAPI1",71,0)
 . S PXANS=Y
"RTN","PXBAPI1",72,0)
 . Q:PXANS'=1
"RTN","PXBAPI1",73,0)
 . I $$DELVFILE^PXAPIDEL("ALL",PXBVST,"","","","","")=1 S PXBEXIT=-1
"RTN","PXBAPI1",74,0)
 I PXBVST>0,'$D(^AUPNVSIT(PXBVST,0)) S PXBVST=""
"RTN","PXBAPI1",75,0)
 Q
"RTN","PXBAPI1",76,0)
 ;
"RTN","PXBAPI1",77,0)
ADQ(PXBEXIT) ;Ask the Administration questions
"RTN","PXBAPI1",78,0)
 I PXBVST'>0 D
"RTN","PXBAPI1",79,0)
 . ;This is only done for new visits
"RTN","PXBAPI1",80,0)
 . I PXBPAT'>0 S PXBPAT=$$ASKPAT I PXBPAT'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",81,0)
 . S DFN=PXBPAT
"RTN","PXBAPI1",82,0)
 . I PXBHLOC'>0 S PXBHLOC=$$ASKHL I PXBHLOC'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",83,0)
 . S PXBVSTDT=$S(PXBAPPT>0:PXBAPPT,1:$$ASKDT) I PXBVSTDT'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",84,0)
 . I PXBAPPT'>0&PXBHLOC'=+$G(^DPT(PXBPAT,"S",PXBVSTDT,0)) D
"RTN","PXBAPI1",85,0)
 .. ;This is only done if there is no appointment.
"RTN","PXBAPI1",86,0)
 .. S PXELAP=$$ELAP^SDPCE(PXBPAT,PXBHLOC)
"RTN","PXBAPI1",87,0)
 I PXBEXIT'<1,PXBHLOC'>0 S PXBHLOC=$$ASKHL I PXBHLOC'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",88,0)
 I PXBEXIT'<1 D CODT(.PXBEXIT)
"RTN","PXBAPI1",89,0)
 I PXBEXIT'<1,WHAT'="INTV" S PXCECAT="VST" D SCC(.PXBEXIT) K PXCECAT
"RTN","PXBAPI1",90,0)
 I PXBEXIT'<1 D
"RTN","PXBAPI1",91,0)
 . D VISIT(.PXBEXIT)
"RTN","PXBAPI1",92,0)
 . I PXBVST'>0 S PXBEXIT=-2 Q
"RTN","PXBAPI1",93,0)
 Q
"RTN","PXBAPI1",94,0)
 ;
"RTN","PXBAPI1",95,0)
ASKPAT() ;Ask user for a patient
"RTN","PXBAPI1",96,0)
 ;DIC on file 9000001
"RTN","PXBAPI1",97,0)
 N DIR,DIC,Y,X,DA
"RTN","PXBAPI1",98,0)
 S DIR(0)="P^9000001:AEMQ"
"RTN","PXBAPI1",99,0)
 S DIR("A")="Patient Name"
"RTN","PXBAPI1",100,0)
 D ^DIR
"RTN","PXBAPI1",101,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXBAPI1",102,0)
 ;
"RTN","PXBAPI1",103,0)
ASKHL() ;Ask user for a Hospital Location
"RTN","PXBAPI1",104,0)
ASKHL2 ;DIC on file 44
"RTN","PXBAPI1",105,0)
 N DIR,DIC,Y,X,DA,PXRES
"RTN","PXBAPI1",106,0)
 S DIR(0)="PA^44:AEMQ"
"RTN","PXBAPI1",107,0)
 S DIR("A")="Clinic: "
"RTN","PXBAPI1",108,0)
 ; not occasion of service and not dispositioning
"RTN","PXBAPI1",109,0)
 ;I PXALHLOC S DIR("S")="I '+$G(^(""OOS""))&'$O(^PX(815,1,""DHL"",""B"",Y,0))"
"RTN","PXBAPI1",110,0)
 ; not occasion of service only   ;PX*1.0*116
"RTN","PXBAPI1",111,0)
 I PXALHLOC S DIR("S")="I '+$G(^(""OOS""))"   ;PX*1.0*116
"RTN","PXBAPI1",112,0)
 ; only clinic that are not occasion of service and not dispositioning
"RTN","PXBAPI1",113,0)
 ;E  S DIR("S")="I $P(^(0),U,3)=""C""&'+$G(^(""OOS""))&'$O(^PX(815,1,""DHL"",""B"",Y,0))"
"RTN","PXBAPI1",114,0)
 E  S DIR("S")="I $P(^(0),U,3)=""C""&'+$G(^(""OOS""))"   ;PX*1.0*116
"RTN","PXBAPI1",115,0)
 D ^DIR
"RTN","PXBAPI1",116,0)
 ;enable to select a disposition clinic   ;PX*1.0*116
"RTN","PXBAPI1",117,0)
 ;I $D(^PX(815,1,"DHL","B",+Y)) D HELPDISP^PXCEVSIT W !,$C(7) G ASKHL2
"RTN","PXBAPI1",118,0)
 ; disallow selection of clinics with non conforming stop codes
"RTN","PXBAPI1",119,0)
 I +Y>0 S PXRES=$$CLNCK^SDUTL2(+Y,1) I 'PXRES D  G ASKHL2
"RTN","PXBAPI1",120,0)
 .W !,?5,"Clinic MUST be corrected before continuing."
"RTN","PXBAPI1",121,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXBAPI1",122,0)
 ;
"RTN","PXBAPI1",123,0)
ASKDT() ;Ask user for the encounter Date/Time
"RTN","PXBAPI1",124,0)
 N DIR,Y,X,DA
"RTN","PXBAPI1",125,0)
 S DIR(0)="D^"_$S(PXLIMDT>2960000:PXLIMDT,1:"")_":"_(DT+.24)_":AEPRSX"
"RTN","PXBAPI1",126,0)
 S DIR("A")="Encounter Date and Time"
"RTN","PXBAPI1",127,0)
 S DIR("?")="Enter the Date and Time of this encounter"
"RTN","PXBAPI1",128,0)
 D ^DIR
"RTN","PXBAPI1",129,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXBAPI1",130,0)
 ;
"RTN","PXBAPI1",131,0)
CODT(PXBEXIT) ;Ask the user the Check out Date/Time
"RTN","PXBAPI1",132,0)
 N PXCHKOUT
"RTN","PXBAPI1",133,0)
 D CHIKOUT^PXBAPI2("",PXBPAT,PXBHLOC,PXBVSTDT)
"RTN","PXBAPI1",134,0)
 S PXBCODT=PXCHKOUT
"RTN","PXBAPI1",135,0)
 S:PXCHKOUT=-1 PXBCODT=""
"RTN","PXBAPI1",136,0)
 ;; PX*1*113 - Change for EAS*1*3 Appointment processing removed
"RTN","PXBAPI1",137,0)
 ;S X="EASMTCHK" X ^%ZOSF("TEST") I $T D  Q:PXBEXIT<1
"RTN","PXBAPI1",138,0)
 ;. S:$G(EASACT)'="W" EASACT="C"
"RTN","PXBAPI1",139,0)
 ;. I $$MT^EASMTCHK(PXBPAT,"",EASACT,PXBVSTDT) D  S PXBEXIT=-1
"RTN","PXBAPI1",140,0)
 ;. . D PAUSE^VALM1
"RTN","PXBAPI1",141,0)
 I WHAT'["ADDEDIT",PXCHKOUT=-1 S PXBEXIT=-1
"RTN","PXBAPI1",142,0)
 I $G(PXBVST),$$DISPOSIT^PXUTL1(DFN,$P($G(^AUPNVSIT(PXBVST,0)),"^",1),PXBVST) S PXBEXIT=1
"RTN","PXBAPI1",143,0)
 Q
"RTN","PXBAPI1",144,0)
 ;
"RTN","PXBAPI1",145,0)
SCC(PXBEXIT) ;Ask the user the Service connected conditions
"RTN","PXBAPI1",146,0)
 N PXBDATA,PXBCLASS,PXBOUTEN,PXDOD
"RTN","PXBAPI1",147,0)
 S (PXBOUTEN,PXDOD)=""
"RTN","PXBAPI1",148,0)
 ;I $$APPOINT^PXUTL1(PXBPAT,PXBVSTDT,PXBHLOC) D
"RTN","PXBAPI1",149,0)
 ;. S PXBOUTEN=$P($G(^DPT(+PXBPAT,"S",+PXBVSTDT,0)),"^",20)
"RTN","PXBAPI1",150,0)
 ;E  I $$DISPOSIT^PXUTL1(PXBPAT,PXBVSTDT,PXBVST) D
"RTN","PXBAPI1",151,0)
 ;. S PXBOUTEN=+$P($G(^DPT(+PXBPAT,"DIS",9999999-PXBVSTDT,0)),"^",18)
"RTN","PXBAPI1",152,0)
 ;I 'PXBOUTEN,$G(PXBVST)>0 S PXBOUTEN=$O(^SCE("AVSIT",PXBVST,0))
"RTN","PXBAPI1",153,0)
 ;D CLASS^PXBAPI21(PXBOUTEN,PXBPAT,PXBVSTDT,PXBHLOC)
"RTN","PXBAPI1",154,0)
 D CLASS^PXBAPI21(PXBOUTEN,PXBPAT,PXBVSTDT,PXBHLOC,PXBVST)
"RTN","PXBAPI1",155,0)
 ;PX*1*111 - Add HNC
"RTN","PXBAPI1",156,0)
 F PXBCLASS=1:1:7 I $G(PXBDATA("ERR",PXBCLASS))=4 S PXBEXIT=-1 Q  ; changed 6/17/98 for MST enhancement
"RTN","PXBAPI1",157,0)
 Q:PXBEXIT<1
"RTN","PXBAPI1",158,0)
 I $G(PXDOD) S PXBEXIT=-1 Q
"RTN","PXBAPI1",159,0)
 S PXB800(1)=$P($G(PXBDATA(3)),"^",2)
"RTN","PXBAPI1",160,0)
 S PXB800(2)=$P($G(PXBDATA(1)),"^",2)
"RTN","PXBAPI1",161,0)
 S PXB800(3)=$P($G(PXBDATA(2)),"^",2)
"RTN","PXBAPI1",162,0)
 S PXB800(4)=$P($G(PXBDATA(4)),"^",2)
"RTN","PXBAPI1",163,0)
 S PXB800(5)=$P($G(PXBDATA(5)),"^",2) ;added 6/17/98 for MST enhancement
"RTN","PXBAPI1",164,0)
 ;PX*1*111 - Add HNC
"RTN","PXBAPI1",165,0)
 S PXB800(6)=$P($G(PXBDATA(6)),"^",2)
"RTN","PXBAPI1",166,0)
 S PXB800(7)=$P($G(PXBDATA(7)),"^",2)
"RTN","PXBAPI1",167,0)
 Q
"RTN","PXBAPI1",168,0)
 ;
"RTN","PXBAPI1",169,0)
VISIT(PXBEXIT) ;Creat or edit the Visit
"RTN","PXBAPI1",170,0)
 ;Set up ^TMP("PXK",$J and call PXK
"RTN","PXBAPI1",171,0)
 I PXBVST>0 L +^AUPNVSIT(PXBVST):10 E  W !!,$C(7),"Cannot edit at this time, try again later." D WAIT^PXCEHELP S PXBEXIT=-2 Q
"RTN","PXBAPI1",172,0)
 K ^TMP("PXK",$J)
"RTN","PXBAPI1",173,0)
 N PXBNODE,PXBAFTER,PXKERROR
"RTN","PXBAPI1",174,0)
 F PXBNODE=0,21,150,800,811,812 D
"RTN","PXBAPI1",175,0)
 . S PXBAFTER(PXBNODE)=$S(PXBVST>0:$G(^AUPNVSIT(PXBVST,PXBNODE)),1:"")
"RTN","PXBAPI1",176,0)
 . S ^TMP("PXK",$J,"VST",1,PXBNODE,"BEFORE")=PXBAFTER(PXBNODE)
"RTN","PXBAPI1",177,0)
 I PXBVST'>0 D
"RTN","PXBAPI1",178,0)
 . S $P(PXBAFTER(0),"^",1)=PXBVSTDT
"RTN","PXBAPI1",179,0)
 . S $P(PXBAFTER(0),"^",5)=PXBPAT
"RTN","PXBAPI1",180,0)
 . S $P(PXBAFTER(0),"^",8)=$P(^SC(PXBHLOC,0),"^",7)
"RTN","PXBAPI1",181,0)
 . S:PXBAPPT>0 $P(PXBAFTER(0),"^",7)="A" ;PX*1*124
"RTN","PXBAPI1",182,0)
 . S $P(PXBAFTER(150),"^",3)="P"
"RTN","PXBAPI1",183,0)
 . S $P(PXBAFTER(812),"^",2)=PXBPKG
"RTN","PXBAPI1",184,0)
 . S $P(PXBAFTER(812),"^",3)=PXBSOURC
"RTN","PXBAPI1",185,0)
 S $P(PXBAFTER(0),"^",18)=$G(PXBCODT)
"RTN","PXBAPI1",186,0)
 S:$P(PXBAFTER(0),"^",22)="" $P(PXBAFTER(0),"^",22)=PXBHLOC
"RTN","PXBAPI1",187,0)
 S $P(PXBAFTER(800),"^",1)=$G(PXB800(1))
"RTN","PXBAPI1",188,0)
 S $P(PXBAFTER(800),"^",2)=$G(PXB800(2))
"RTN","PXBAPI1",189,0)
 S $P(PXBAFTER(800),"^",3)=$G(PXB800(3))
"RTN","PXBAPI1",190,0)
 S $P(PXBAFTER(800),"^",4)=$G(PXB800(4))
"RTN","PXBAPI1",191,0)
 S $P(PXBAFTER(800),"^",5)=$G(PXB800(5)) ;added 6/17/98 for MST emhancement
"RTN","PXBAPI1",192,0)
 ;PX*1*111 - Add HNC
"RTN","PXBAPI1",193,0)
 S $P(PXBAFTER(800),"^",6)=$G(PXB800(6))
"RTN","PXBAPI1",194,0)
 S $P(PXBAFTER(800),"^",7)=$G(PXB800(7))
"RTN","PXBAPI1",195,0)
 I $D(PXELAP)#2 D
"RTN","PXBAPI1",196,0)
 . S $P(PXBAFTER(0),"^",21)=+PXELAP
"RTN","PXBAPI1",197,0)
 F PXBNODE=0,21,150,800,811,812 D
"RTN","PXBAPI1",198,0)
 . S ^TMP("PXK",$J,"VST",1,PXBNODE,"AFTER")=PXBAFTER(PXBNODE)
"RTN","PXBAPI1",199,0)
 S ^TMP("PXK",$J,"VST",1,"IEN")=$S(PXBVST>0:PXBVST,1:"")
"RTN","PXBAPI1",200,0)
 S ^TMP("PXK",$J,"SOR")=PXBSOURC
"RTN","PXBAPI1",201,0)
 D EN1^PXKMAIN
"RTN","PXBAPI1",202,0)
 I PXBVST>0 L -^AUPNVSIT(PXBVST):5
"RTN","PXBAPI1",203,0)
 S PXBVST=$G(^TMP("PXK",$J,"VST",1,"IEN"))
"RTN","PXBAPI1",204,0)
 Q
"RTN","PXBAPI1",205,0)
 ;
"RTN","PXBAPI1",206,0)
CPT(PXBEXIT) ;Ask the user Providers and CTPs
"RTN","PXBAPI1",207,0)
 D CPT^PXBMCPT(PXBVST) K PRVDR
"RTN","PXBAPI1",208,0)
 Q
"RTN","PXBAPI1",209,0)
 ;
"RTN","PXBAPI1",210,0)
POV(PXBEXIT) ;Ask the user Diagnoses
"RTN","PXBAPI1",211,0)
 D POV^PXBMPOV(PXBVST) K PRVDR
"RTN","PXBAPI1",212,0)
 Q
"RTN","PXBAPI1",213,0)
 ;
"RTN","PXBAPI1",214,0)
PRV(PXBEXIT) ;Ask the user Providers
"RTN","PXBAPI1",215,0)
 D PRV^PXBMPRV(PXBVST,"PRV") K PRVDR
"RTN","PXBAPI1",216,0)
 Q
"RTN","PXBAPI1",217,0)
 ;
"RTN","PXBAPI1",218,0)
STP(PXBEXIT) ;Ask the user Stop Codes
"RTN","PXBAPI1",219,0)
 I $L($T(DATE^SCDXUTL)),$$DATE^SCDXUTL(+$G(^AUPNVSIT(PXBVST,0))) Q
"RTN","PXBAPI1",220,0)
 D STP^PXBMSTP(PXBVST) K PRVDR
"RTN","PXBAPI1",221,0)
 Q
"RTN","PXBAPI1",222,0)
 ;
"RTN","PXBCC")
0^5^B43965307^B43568980
"RTN","PXBCC",1,0)
PXBCC ;ISL/JVS - CURSOR CONTROLS-UTILITY ROUTINES ;9/10/04 11:33am
"RTN","PXBCC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**7,73,141,124,164**;Aug 12, 1996
"RTN","PXBCC",3,0)
 ;
"RTN","PXBCC",4,0)
 ; Variable List
"RTN","PXBCC",5,0)
 ; PXBSAVE= A Second copy fo the top Margin in a window
"RTN","PXBCC",6,0)
 ; PXBCNT=  A Count of how many Items listed in top window
"RTN","PXBCC",7,0)
 ;
"RTN","PXBCC",8,0)
ZERO ;--ZERO $X & $Y
"RTN","PXBCC",9,0)
 N DX,DY
"RTN","PXBCC",10,0)
 S DX=0,DY=0 X ^%ZOSF("XY")
"RTN","PXBCC",11,0)
 Q
"RTN","PXBCC",12,0)
DXDY ;RESET $X $Y
"RTN","PXBCC",13,0)
 X ^%ZOSF("XY")
"RTN","PXBCC",14,0)
 Q
"RTN","PXBCC",15,0)
INHI() ; Switch to highlighted video (IOINHI must be defined by caller)
"RTN","PXBCC",16,0)
 S DX=$X#81,DY=$Y#25 W IOINHI X ^%ZOSF("XY")
"RTN","PXBCC",17,0)
 Q ""
"RTN","PXBCC",18,0)
INLO() ; Switch to lowlighted video (IOINLOW must be defined by caller)
"RTN","PXBCC",19,0)
 S DX=$X#81,DY=$Y#25 W IOINLOW X ^%ZOSF("XY")
"RTN","PXBCC",20,0)
 Q ""
"RTN","PXBCC",21,0)
FIX ;--FIX
"RTN","PXBCC",22,0)
 D TERM,FULL0 W IOUOFF,IOG0
"RTN","PXBCC",23,0)
 Q
"RTN","PXBCC",24,0)
FIX1 ;--FIX
"RTN","PXBCC",25,0)
 D TERM,FULL0 W IOUOFF,IOG0
"RTN","PXBCC",26,0)
 Q
"RTN","PXBCC",27,0)
WINDOW(PXBCNT,DOWN) ;--set up window area
"RTN","PXBCC",28,0)
 N I,IOTM,IOBM
"RTN","PXBCC",29,0)
 I PXBCNT>10 S IOTM=17
"RTN","PXBCC",30,0)
 I PXBCNT<11 S IOTM=PXBCNT+7
"RTN","PXBCC",31,0)
 S PXBSAVE=IOTM I '$D(IOSC) D TERM
"RTN","PXBCC",32,0)
 S IOBM=(IOSL-1)
"RTN","PXBCC",33,0)
 W IOSC W @IOSTBM W IORC ;--Create smaller window
"RTN","PXBCC",34,0)
 I '$D(DOWN) F I=1:1:2 W IOCUD ;-- move cursor down twice
"RTN","PXBCC",35,0)
 S PXBWIN=""
"RTN","PXBCC",36,0)
 Q
"RTN","PXBCC",37,0)
WIN17(PXBCNT) ;--set up window area on the 17th line
"RTN","PXBCC",38,0)
 N I,IOTM,IOBM
"RTN","PXBCC",39,0)
 W IOCUOFF
"RTN","PXBCC",40,0)
 S IOTM=17
"RTN","PXBCC",41,0)
 S PXBSAVE=IOTM I '$D(IOSC) D TERM
"RTN","PXBCC",42,0)
 S IOBM=(IOSL-0)
"RTN","PXBCC",43,0)
 W IOSC W @IOSTBM W IORC ;--Create smaller window
"RTN","PXBCC",44,0)
 S PXBWIN=""
"RTN","PXBCC",45,0)
 W IOCUON
"RTN","PXBCC",46,0)
 Q
"RTN","PXBCC",47,0)
 ;
"RTN","PXBCC",48,0)
WINDOW1(PXBCNT) ;--set up window area
"RTN","PXBCC",49,0)
 N I,IOTM,IOBM
"RTN","PXBCC",50,0)
 S IOBM=IOSL-1
"RTN","PXBCC",51,0)
 W IOSC W @IOSTBM W IORC ;--Create smaller window
"RTN","PXBCC",52,0)
 F I=1:1:2 W IOCUD ;-- move currsor down once
"RTN","PXBCC",53,0)
 Q
"RTN","PXBCC",54,0)
 ;
"RTN","PXBCC",55,0)
TERM ;--set up the terminal variables
"RTN","PXBCC",56,0)
 N X
"RTN","PXBCC",57,0)
 S X="IOSGRO;IOSTBM;IOCUU;IOSC;IORC;IOCUD;IOHOME;IOELALL;IORVON;IORVOFF;IOCUF;IONEL;IOBON;IOBOFF;IOUON;IOUOFF;IOELEOL;IOEDALL;IOEDEOP;IOCUB;IOECH;IOELBOL;IOIND"
"RTN","PXBCC",58,0)
 D ENDR^%ZISS,GSET^%ZISS
"RTN","PXBCC",59,0)
 S X="IOINLOW;IOINHI;IOINORM;IOCUOFF;IOCUON;IORI;IOIND;IORESET;IOCUOFF;IOCUON;IOSGR0"
"RTN","PXBCC",60,0)
 D ENDR^%ZISS
"RTN","PXBCC",61,0)
 I IOSTBM="" S IOSTBM=1
"RTN","PXBCC",62,0)
 Q
"RTN","PXBCC",63,0)
FULL ;--set terminal to full scrolling window
"RTN","PXBCC",64,0)
 N IOTM,IOBM,X
"RTN","PXBCC",65,0)
 K PXBWIN
"RTN","PXBCC",66,0)
 I '$D(IOSTBM) D TERM
"RTN","PXBCC",67,0)
 I IOSTBM]"" S IOTM=1,IOBM=(IOSL-(1)) W IOSC W @IOSTBM W IORC
"RTN","PXBCC",68,0)
 S X=IOM X ^%ZOSF("RM")
"RTN","PXBCC",69,0)
 Q
"RTN","PXBCC",70,0)
FULL0 ;--set terminal to full scrolling window
"RTN","PXBCC",71,0)
 N IOTM,IOBM,X
"RTN","PXBCC",72,0)
 I '$D(IOSTBM) D TERM
"RTN","PXBCC",73,0)
 I IOSTBM]"" S IOTM=1,IOBM=IOSL W IOSC W @IOSTBM W IORC
"RTN","PXBCC",74,0)
 S X=IOM X ^%ZOSF("RM")
"RTN","PXBCC",75,0)
 Q
"RTN","PXBCC",76,0)
CLEAR1 ;--clean out all cursor control variables
"RTN","PXBCC",77,0)
 D KILL^%ZISS,GKILL^%ZISS
"RTN","PXBCC",78,0)
 Q
"RTN","PXBCC",79,0)
UNDON ;--underline on
"RTN","PXBCC",80,0)
 I '$D(IOUON) D TERM^PXBCC
"RTN","PXBCC",81,0)
 W IOUON
"RTN","PXBCC",82,0)
 Q
"RTN","PXBCC",83,0)
UNDOFF ;--underline off
"RTN","PXBCC",84,0)
 I '$D(IOUON) D TERM^PXBCC
"RTN","PXBCC",85,0)
 W IOUOFF
"RTN","PXBCC",86,0)
 Q
"RTN","PXBCC",87,0)
REVCPT(LINE,PXRVON) ;--Reverse Video a particular CPT CODE,PROVIDER OR POV
"RTN","PXBCC",88,0)
 ;
"RTN","PXBCC",89,0)
 ;     INPUT:  LINE = Selection from PXBSAM array
"RTN","PXBCC",90,0)
 ;             PXRVON = Flag to turn reverse video on/off
"RTN","PXBCC",91,0)
 ;                 where: 1 = reverse video on
"RTN","PXBCC",92,0)
 ;                        0 = reverse video off   
"RTN","PXBCC",93,0)
 ;
"RTN","PXBCC",94,0)
 Q:$G(NOREV)=1
"RTN","PXBCC",95,0)
 N ENTRY,XLINE,I,IOTM,IOBM,COL,DX,DY
"RTN","PXBCC",96,0)
 S ENTRY=$G(PXBSAM(LINE))
"RTN","PXBCC",97,0)
 ;Actual line on which CPT code displayed
"RTN","PXBCC",98,0)
 ;S XLINE=LINE#10+4
"RTN","PXBCC",99,0)
 S XLINE=PXBSAM(LINE,"LINE")#10+4 ;PX*1.0*164
"RTN","PXBCC",100,0)
 I XLINE<5 S XLINE=XLINE+10
"RTN","PXBCC",101,0)
 I '$D(IOSC) D TERM
"RTN","PXBCC",102,0)
 S COL=4
"RTN","PXBCC",103,0)
 W IOSC S IOTM=1,IOBM=IOSL W @IOSTBM W IOHOME D ZERO
"RTN","PXBCC",104,0)
 F I=1:1:XLINE W IOCUD
"RTN","PXBCC",105,0)
 F I=1:1:COL W IOCUF
"RTN","PXBCC",106,0)
 S DY=XLINE,DX=COL D DXDY
"RTN","PXBCC",107,0)
 I $G(PXRVON) W IORVON,$P(ENTRY,"^",1),IORVOFF
"RTN","PXBCC",108,0)
 I '$G(PXRVON) W IORVOFF,$P(ENTRY,"^",1)
"RTN","PXBCC",109,0)
 S IOTM=PXBSAVE,IOBM=IOSL W @IOSTBM W IORC
"RTN","PXBCC",110,0)
 Q
"RTN","PXBCC",111,0)
REVPRV(LINE) ;--Reverse Video a particular CPT CODE,PROVIDER OR POV
"RTN","PXBCC",112,0)
 Q:$G(NOREV)=1  Q:$G(FROM)["CPT"  Q:$G(FROM)["PL"
"RTN","PXBCC",113,0)
 N ENTRY,XLINE,I,IOTM,IOBM,COL,DX,DY
"RTN","PXBCC",114,0)
 S ENTRY=$G(PXBSAM(LINE)),XLINE=(LINE#10)+4
"RTN","PXBCC",115,0)
 I XLINE<5 S XLINE=XLINE+10
"RTN","PXBCC",116,0)
 I '$D(IOSC) D TERM
"RTN","PXBCC",117,0)
 S COL=4
"RTN","PXBCC",118,0)
 W IOSC S IOTM=1,IOBM=IOSL W @IOSTBM W IOHOME D ZERO
"RTN","PXBCC",119,0)
 F I=1:1:XLINE W IOCUD
"RTN","PXBCC",120,0)
 F I=1:1:COL W IOCUF
"RTN","PXBCC",121,0)
 S DY=XLINE,DX=COL D DXDY
"RTN","PXBCC",122,0)
 W IORVON,$P(ENTRY,"^",1),IORVOFF
"RTN","PXBCC",123,0)
 S IOTM=PXBSAVE,IOBM=IOSL W @IOSTBM W IORC
"RTN","PXBCC",124,0)
 Q
"RTN","PXBCC",125,0)
REVPOV(LINE) ;--Reverse Video a particular CPT CODE,PROVIDER OR POV
"RTN","PXBCC",126,0)
 Q:$G(NOREV)=1
"RTN","PXBCC",127,0)
 N ENTRY,XLINE,I,IOTM,IOBM,COL,DX,DY
"RTN","PXBCC",128,0)
 S ENTRY=$G(PXBSAM(LINE)),XLINE=(LINE*2-1#10)+4
"RTN","PXBCC",129,0)
 I XLINE<5 S XLINE=XLINE+10
"RTN","PXBCC",130,0)
 I '$D(IOSC) D TERM
"RTN","PXBCC",131,0)
 S COL=4
"RTN","PXBCC",132,0)
 W IOSC S IOTM=1,IOBM=IOSL W @IOSTBM W IOHOME D ZERO
"RTN","PXBCC",133,0)
 F I=1:1:XLINE W IOCUD
"RTN","PXBCC",134,0)
 F I=1:1:COL W IOCUF
"RTN","PXBCC",135,0)
 S DY=XLINE,DX=COL D DXDY
"RTN","PXBCC",136,0)
 W IORVON,$J($P($P(ENTRY,"^",1),".",1),4),".",$P($P(ENTRY,"^",1),".",2),IORVOFF
"RTN","PXBCC",137,0)
 S IOTM=PXBSAVE,IOBM=IOSL W @IOSTBM W IORC
"RTN","PXBCC",138,0)
 Q
"RTN","PXBCC",139,0)
REVSTP(LINE) ;--Reverse Video a particular CPT CODE,PROVIDER OR POV
"RTN","PXBCC",140,0)
 Q:$G(NOREV)=1
"RTN","PXBCC",141,0)
 N ENTRY,XLINE,I,IOTM,IOBM,COL,DX,DY
"RTN","PXBCC",142,0)
 S ENTRY=$G(PXBSAM(LINE)),XLINE=(LINE#10)+4
"RTN","PXBCC",143,0)
 I XLINE<5 S XLINE=XLINE+10
"RTN","PXBCC",144,0)
 I '$D(IOSC) D TERM
"RTN","PXBCC",145,0)
 S COL=4
"RTN","PXBCC",146,0)
 W IOSC S IOTM=1,IOBM=IOSL W @IOSTBM W IOHOME D ZERO
"RTN","PXBCC",147,0)
 F I=1:1:XLINE W IOCUD
"RTN","PXBCC",148,0)
 F I=1:1:COL W IOCUF
"RTN","PXBCC",149,0)
 S DY=XLINE,DX=COL D DXDY
"RTN","PXBCC",150,0)
 W IORVON,$P(ENTRY,"^",1),IORVOFF
"RTN","PXBCC",151,0)
 S IOTM=PXBSAVE,IOBM=IOSL W @IOSTBM W IORC
"RTN","PXBCC",152,0)
 Q
"RTN","PXBCC",153,0)
 ;
"RTN","PXBCC",154,0)
UREV(LINE) ;--Reverse Video a particular CPT CODE,PROVIDER OR POV
"RTN","PXBCC",155,0)
 Q
"RTN","PXBCC",156,0)
 ;--**OUT OF ORDER
"RTN","PXBCC",157,0)
 N ENTRY,XLINE,I,IOTM,IOBM,DX,DY
"RTN","PXBCC",158,0)
 S ENTRY=$G(PXBSAM(LINE)),XLINE=LINE+4
"RTN","PXBCC",159,0)
 I '$D(IOSC) D TERM
"RTN","PXBCC",160,0)
 W IOSC S IOTM=1,IOBM=IOSL W @IOSTBM W IOHOME D ZERO
"RTN","PXBCC",161,0)
 F I=1:1:XLINE W IOCUD
"RTN","PXBCC",162,0)
 F I=1:1:4 W IOCUF
"RTN","PXBCC",163,0)
 S DY=XLINE,DX=COL D DXDY
"RTN","PXBCC",164,0)
 W $P(ENTRY,"^",1)
"RTN","PXBCC",165,0)
 S IOTM=PXBSAVE,IOBM=IOSL W @IOSTBM W IORC
"RTN","PXBCC",166,0)
 Q
"RTN","PXBCC",167,0)
 ;
"RTN","PXBCC",168,0)
RREV(LINE,COLUMN,ENTRY) ;--Reverse REQUESTED information
"RTN","PXBCC",169,0)
 Q:$G(NOREV)=1
"RTN","PXBCC",170,0)
 N XLINE,I,IOTM,IOBM,DX,DY
"RTN","PXBCC",171,0)
 S XLINE=LINE+1
"RTN","PXBCC",172,0)
 I '$D(IOSC) D TERM
"RTN","PXBCC",173,0)
 W IOSC S IOTM=1,IOBM=IOSL W @IOSTBM W IOHOME D ZERO
"RTN","PXBCC",174,0)
 F I=1:1:XLINE W IOCUD
"RTN","PXBCC",175,0)
 F I=1:1:COLUMN W IOCUF
"RTN","PXBCC",176,0)
 S DY=XLINE,DX=COLUMN D DXDY
"RTN","PXBCC",177,0)
 W IOELEOL,IOINHI,ENTRY,IOINLOW
"RTN","PXBCC",178,0)
 S IOTM=PXBSAVE,IOBM=IOSL W @IOSTBM W IORC
"RTN","PXBCC",179,0)
 Q
"RTN","PXBCC",180,0)
RREVST(LINE,COLUMN,ENTRY) ;--Reverse REQUESTED information
"RTN","PXBCC",181,0)
 Q:$G(NOREV)=1
"RTN","PXBCC",182,0)
 N XLINE,I,IOTM,IOBM,DX,DY
"RTN","PXBCC",183,0)
 S XLINE=LINE+1
"RTN","PXBCC",184,0)
 I '$D(IOSC) D TERM
"RTN","PXBCC",185,0)
 W IOSC S IOTM=1,IOBM=IOSL W @IOSTBM W IOHOME D ZERO
"RTN","PXBCC",186,0)
 F I=1:1:XLINE W IOCUD
"RTN","PXBCC",187,0)
 F I=1:1:COLUMN W IOCUF
"RTN","PXBCC",188,0)
 S DY=XLINE,DX=COLUMN D DXDY
"RTN","PXBCC",189,0)
 W IORVON,ENTRY,IORVOFF
"RTN","PXBCC",190,0)
 S IOTM=PXBSAVE,IOBM=IOSL W @IOSTBM W IORC
"RTN","PXBCC",191,0)
 Q
"RTN","PXBCC",192,0)
RREVH(LINE,COLUMN,ENTRY) ;--Reverse REQUESTED information
"RTN","PXBCC",193,0)
 Q:$G(NOREV)=1
"RTN","PXBCC",194,0)
 N XLINE,I,IOTM,IOBM,DX,DY
"RTN","PXBCC",195,0)
 S XLINE=LINE+1
"RTN","PXBCC",196,0)
 I '$D(IOSC) D TERM
"RTN","PXBCC",197,0)
 W IOSC S IOTM=1,IOBM=IOSL W @IOSTBM W IOHOME D ZERO
"RTN","PXBCC",198,0)
 F I=1:1:XLINE W IOCUD
"RTN","PXBCC",199,0)
 F I=1:1:COLUMN W IOCUF
"RTN","PXBCC",200,0)
 S DY=XLINE,DX=COLUMN D DXDY
"RTN","PXBCC",201,0)
 W IOELEOL,IOINHI,IOUON,ENTRY,IOINLOW,IOUON F I=1:1:5 W " "
"RTN","PXBCC",202,0)
 W IOUOFF
"RTN","PXBCC",203,0)
 S IOTM=PXBSAVE,IOBM=IOSL W @IOSTBM W IORC
"RTN","PXBCC",204,0)
 Q
"RTN","PXBCC",205,0)
LOC(LINE,COLUMN) ;--Locate Cursor to specified position
"RTN","PXBCC",206,0)
 N PXBOS
"RTN","PXBCC",207,0)
 S PXBOS=^%ZOSF("OS")
"RTN","PXBCC",208,0)
 I PXBOS'["MSM" N DY,DX S DY=LINE,DX=COLUMN X IOXY,^%ZOSF("XY") Q
"RTN","PXBCC",209,0)
 N XLINE,I,IOTM,IOBM,DX,DY
"RTN","PXBCC",210,0)
 W IOCUOFF
"RTN","PXBCC",211,0)
 I '$D(IOSTBM) D TERM
"RTN","PXBCC",212,0)
 S IOTM=1,IOBM=IOSL W @IOSTBM W IOHOME D ZERO
"RTN","PXBCC",213,0)
 I $D(LINE) F I=1:1:LINE W IOIND
"RTN","PXBCC",214,0)
 F I=1:1:COLUMN W IOCUF
"RTN","PXBCC",215,0)
 I $D(LINE) S DY=LINE
"RTN","PXBCC",216,0)
 E  S DY=$Y
"RTN","PXBCC",217,0)
 S DX=COLUMN D DXDY
"RTN","PXBCC",218,0)
 W IOCUON
"RTN","PXBCC",219,0)
 Q
"RTN","PXBCC",220,0)
 ;
"RTN","PXBCC",221,0)
ERASE ;---ERASE THE LIST GOING UPWARDS
"RTN","PXBCC",222,0)
 N PXI
"RTN","PXBCC",223,0)
 I '$D(IOCUU) D TERM^PXBCC
"RTN","PXBCC",224,0)
 D LOC^PXBCC(15,1)
"RTN","PXBCC",225,0)
 S PXI=0 F I=1:1:11 W IORI,IOELALL
"RTN","PXBCC",226,0)
 Q
"RTN","PXBIBB")
0^22^B16922868
"RTN","PXBIBB",1,0)
PXBIBB ;ALB/DWS/BDB - SEND CHARGE OR CREDIT TRANSACTIONS TO IBB ;8/10/05 1:29pm
"RTN","PXBIBB",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**164**;Aug 12, 1996
"RTN","PXBIBB",3,0)
 N VSTB,PKB,VSTA,PKA,PRVB,PRVA,SC,IBBAPLR,IBBDFN
"RTN","PXBIBB",4,0)
 N IBBARFN,IBBUCID,CD,CD12,CDA,CDB,CDI,DX,IO,MOD
"RTN","PXBIBB",5,0)
 N IBBCTYPE,IBBORIEN,ND,TYPE,VDT,PPRV,SPRV,APRV,OPRV,ORY
"RTN","PXBIBB",6,0)
 S VSTA=$G(^TMP("PXKCO",$J,PXKVVST,"VST",PXKVVST,0,"AFTER"))
"RTN","PXBIBB",7,0)
 S PKA=$G(^TMP("PXKCO",$J,PXKVVST,"VST",PXKVVST,812,"AFTER"))
"RTN","PXBIBB",8,0)
 S IO=$P($G(^TMP("PXKCO",$J,PXKVVST,"VST",PXKVVST,150,"AFTER")),U,2)
"RTN","PXBIBB",9,0)
 S VSTB=$G(^TMP("PXKCO",$J,PXKVVST,"VST",PXKVVST,0,"BEFORE"))
"RTN","PXBIBB",10,0)
 S PKB=$G(^TMP("PXKCO",$J,PXKVVST,"VST",PXKVVST,812,"BEFORE"))
"RTN","PXBIBB",11,0)
 S:IO="" IO=$P($G(^TMP("PXKCO",$J,PXKVVST,"VST",PXKVVST,150,"BEFORE")),U,2)
"RTN","PXBIBB",12,0)
 Q:$P(VSTB,U,7)="E"  Q:$P(VSTA,U,7)="E"
"RTN","PXBIBB",13,0)
 Q:$P(PKB,U,2)=$$PKG2IEN^VSIT("RMPR")  Q:$P(PKA,U,2)=$$PKG2IEN^VSIT("RMPR")
"RTN","PXBIBB",14,0)
 S SC=$O(^SCE("AVSIT",PXKVVST,0))
"RTN","PXBIBB",15,0)
 S:'SC SC=$O(^TMP("PXKCO",$J,PXKVVST,"OE",0)) D:'SC  Q:'SC
"RTN","PXBIBB",16,0)
 .Q:'IO
"RTN","PXBIBB",17,0)
 .S CDI=0 F  S CDI=$O(^TMP("PXKCO",$J,PXKVVST,"CPT",CDI)) Q:CDI=""  D
"RTN","PXBIBB",18,0)
 ..S CDB=$G(^TMP("PXKCO",$J,PXKVVST,"CPT",CDI,0,"BEFORE"))
"RTN","PXBIBB",19,0)
 ..I $P(CDB,U)'="" S CD=CDB,CD12=$G(^TMP("PXKCO",$J,PXKVVST,"CPT",CDI,12,"BEFORE")) D CHG("BEFORE")
"RTN","PXBIBB",20,0)
 ..S CDA=$G(^TMP("PXKCO",$J,PXKVVST,"CPT",CDI,0,"AFTER"))
"RTN","PXBIBB",21,0)
 ..I $P(CDA,U)'="" S CD=CDA,CD12=$G(^TMP("PXKCO",$J,PXKVVST,"CPT",CDI,12,"AFTER")) D CHG("AFTER")
"RTN","PXBIBB",22,0)
 S BSTATUS=$P($G(^TMP("PXKCO",$J,PXKVVST,"OE",SC,0,"BEFORE")),U,7)
"RTN","PXBIBB",23,0)
 I '$P($G(^SCE(SC,0)),U,7) Q:'BSTATUS  D  Q
"RTN","PXBIBB",24,0)
 .S CDI=0 F  S CDI=$O(^TMP("PXKCO",$J,PXKVVST,"CPT",CDI)) Q:CDI=""  D
"RTN","PXBIBB",25,0)
 ..S CD=$G(^TMP("PXKCO",$J,PXKVVST,"CPT",CDI,0,"BEFORE"))
"RTN","PXBIBB",26,0)
 ..S CD12=$G(^TMP("PXKCO",$J,PXKVVST,"CPT",CDI,12,"BEFORE"))
"RTN","PXBIBB",27,0)
 ..D CHG("BEFORE")
"RTN","PXBIBB",28,0)
 S CDI=0 F  S CDI=$O(^TMP("PXKCO",$J,PXKVVST,"CPT",CDI)) Q:CDI=""  D
"RTN","PXBIBB",29,0)
 .S:BSTATUS CDB=$G(^TMP("PXKCO",$J,PXKVVST,"CPT",CDI,0,"BEFORE"))
"RTN","PXBIBB",30,0)
 .S CDA=$G(^TMP("PXKCO",$J,PXKVVST,"CPT",CDI,0,"AFTER"))
"RTN","PXBIBB",31,0)
 .I BSTATUS,$P(CDA,U)="" D  D CHG("BEFORE") Q
"RTN","PXBIBB",32,0)
 ..S CD=CDB,CD12=$G(^TMP("PXKCO",$J,PXKVVST,"CPT",CDI,12,"BEFORE"))
"RTN","PXBIBB",33,0)
 .S CD=CDA,CD12=$G(^TMP("PXKCO",$J,PXKVVST,"CPT",CDI,12,"AFTER"))
"RTN","PXBIBB",34,0)
 .D CHG("AFTER")
"RTN","PXBIBB",35,0)
 Q
"RTN","PXBIBB",36,0)
CHG(TYPE) ;PROCESS DEBITS OR CREDITS, BEFORE = CREDIT, AFTER = DEBIT
"RTN","PXBIBB",37,0)
 N IBBFT1,IBBPR1,IBBDG1,IBBZCL,DXS,FDX,I
"RTN","PXBIBB",38,0)
 D LD($S(VSTA:VSTA,1:VSTB))
"RTN","PXBIBB",39,0)
 S IBBUCID=$P(CD,U,20),IBBORIEN=$P(CD,U,17),IBBFT1(2)="PX"_PXKVVST,IBBFT1(20)=$P(CD12,U,4),IBBFT1(21)=$P(CD12,U,2) ;PRFM,ORDR - CPT ENC,ORD
"RTN","PXBIBB",40,0)
 I 'IBBUCID S IBBUCID=$$GETCHGID^IBBAPI(),DA=CDI,DR=".2///"_IBBUCID D
"RTN","PXBIBB",41,0)
 .S DIE="^AUPNVCPT(" D ^DIE
"RTN","PXBIBB",42,0)
 S I="" F  S I=$O(^TMP("PXKCO",$J,PXKVVST,"PRV",I)) Q:I=""  D
"RTN","PXBIBB",43,0)
 .S PRV=$G(^TMP("PXKCO",$J,PXKVVST,"PRV",I,0,TYPE))
"RTN","PXBIBB",44,0)
 .I $P(PRV,U,4)="P" S PPRV=+PRV
"RTN","PXBIBB",45,0)
 .I $P(PRV,U,4)="S" S SPRV=+PRV
"RTN","PXBIBB",46,0)
 .I $P(PRV,U,5)="A" S APRV=+PRV
"RTN","PXBIBB",47,0)
 .I $P(PRV,U,5)="O" S OPRV=+PRV
"RTN","PXBIBB",48,0)
 I IBBFT1(20)="" S IBBFT1(20)=$G(PPRV) ;PRFM - NULL, THEN PRV PRIMARY
"RTN","PXBIBB",49,0)
 S IBBCTYPE=$S(TYPE="BEFORE":"CD",1:"CG"),IBBFT1(10)=$P(CD,U,16)
"RTN","PXBIBB",50,0)
 S (IBBFT1(13),I)=$S($P(CD,U,19)]"":$P(CD,U,19),1:999),IBBFT1(4)=$S(CD12:+CD12,1:VDT)
"RTN","PXBIBB",51,0)
 S IBBPR1(3)=+CD,IBBPR1(5)=IBBFT1(4)
"RTN","PXBIBB",52,0)
 I "180^401^402^403^404^406^407^409^410^411^412^413^415^457"[I D
"RTN","PXBIBB",53,0)
 .S IBBPR1(11,1)=$G(OPRV) I IBBPR1(11,1)="" S IBBPR1(11,1)=IBBFT1(20)
"RTN","PXBIBB",54,0)
 .S IBBPR1(11,2)=$G(APRV)
"RTN","PXBIBB",55,0)
 N IBBARFNZ I $E($T(ORACTREF^ORWPFSS),9)="(",I=108,IBBORIEN D ORACTREF^ORWPFSS(.IBBARFNZ,.IBBORIEN) I IBBARFNZ]"" S IBBARFN=IBBARFNZ
"RTN","PXBIBB",56,0)
 S MOD="",I=0
"RTN","PXBIBB",57,0)
 F  S I=$O(^TMP("PXKCO",$J,PXKVVST,"CPT",CDI,1,TYPE,I)) Q:I=""  S MOD=$S(MOD="":I,1:MOD_";"_I)
"RTN","PXBIBB",58,0)
 S I=0 F  S I=$O(^TMP("PXKCO",$J,PXKVVST,"POV",I)) Q:I=""  D
"RTN","PXBIBB",59,0)
 .S DXS=$G(^(I,0,TYPE))
"RTN","PXBIBB",60,0)
 .S DXS(+DXS)=$G(^TMP("PXKCO",$J,PXKVVST,"POV",I,800,TYPE))
"RTN","PXBIBB",61,0)
 S IBBPR1(16)=MOD
"RTN","PXBIBB",62,0)
 F I=1:1:8 S SC(I)="" ;SHAD
"RTN","PXBIBB",63,0)
 S FDX=1 F I=5,9:1:15 S DX=$P(CD,U,I) I DX S J=$S(I=5:1,1:I-7) D  S FDX=0
"RTN","PXBIBB",64,0)
 .S IBBDG1(J,3)=DX,IBBDG1(J,6)="F",DXS=$G(DXS(DX))
"RTN","PXBIBB",65,0)
 .F J=1:1:8 I 'SC(J) D  ;SHAD
"RTN","PXBIBB",66,0)
 ..I $P($G(DXS(DX)),U,J) S SC(J)=1 Q
"RTN","PXBIBB",67,0)
 ..I $P($G(DXS(DX)),U,J)="" S SC(J)="" Q
"RTN","PXBIBB",68,0)
 ..I $P($G(DXS(DX)),U,J)=0,FDX=1 S SC(J)=0
"RTN","PXBIBB",69,0)
 S SC=$G(^TMP("PXKCO",$J,PXKVVST,"VST",PXKVVST,800,TYPE))
"RTN","PXBIBB",70,0)
 F I=1:1:8 I SC(I)="" S SC(I)=$P(SC,U,I) ;SHAD
"RTN","PXBIBB",71,0)
 F I=1:1:8 S J=$S(I=1:3,I=2:1,I=3:2,1:I),IBBZCL(J,2)=J,IBBZCL(J,3)=SC(I) ;SHAD
"RTN","PXBIBB",72,0)
 I IBBZCL(3,3) F I=1,2,4 S IBBZCL(I,3)=""
"RTN","PXBIBB",73,0)
 W $$CHARGE^IBBAPI(IBBDFN,IBBARFN,IBBCTYPE,IBBUCID,.IBBFT1,.IBBPR1,.IBBDG1,.IBBZCL,.IBBRXE,IBBORIEN,.IBBPROS)
"RTN","PXBIBB",74,0)
 Q
"RTN","PXBIBB",75,0)
LD(ND) S IBBDFN=$P(ND,U,5),IBBARFN=$P(ND,U,26),VDT=+ND
"RTN","PXBIBB",76,0)
 Q
"RTN","PXBSTOR")
0^12^B40327690^B38312987
"RTN","PXBSTOR",1,0)
PXBSTOR ;ISL/JVS - PASSING THE DATA TO THE V FILES ;3/21/05 1:35pm
"RTN","PXBSTOR",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**73,88,149,124,164**;Aug 12, 1996
"RTN","PXBSTOR",3,0)
 ;
"RTN","PXBSTOR",4,0)
 ;  VARIABLE LIST
"RTN","PXBSTOR",5,0)
 ;  PEICE   1        2     3     4      5     6       7       8       9
"RTN","PXBSTOR",6,0)
 ;  REQ*=PROVDER^PRIMARY^CPT^QUANTITY^POV^PRIMARY^PRV IEN^CPT IEN^POV IEN
"RTN","PXBSTOR",7,0)
 ;  PEICE   10       11        12  13  14  15  16  17  18  19     20    21  22
"RTN","PXBSTOR",8,0)
 ;  REQ  STOPCODE^STOPCODE IEN^DX1^DX2^DX3^DX4^DX5^DX6^DX7^DX8^DEPT CODE^^OrdPrv
"RTN","PXBSTOR",9,0)
 ;                             (DX5 - DX10 for future use)
"RTN","PXBSTOR",10,0)
 ;  REQ(1,MODIFIER)*=""
"RTN","PXBSTOR",11,0)
 ;  REQ("IEN")=V CPT file IEN
"RTN","PXBSTOR",12,0)
 ;  REQI=Internal Values
"RTN","PXBSTOR",13,0)
 ;  REQE=External Values
"RTN","PXBSTOR",14,0)
 ;  PXBVST=Visit Ien
"RTN","PXBSTOR",15,0)
 ;  PRVIEN=Provider IEN in V Provider file
"RTN","PXBSTOR",16,0)
 ;  CPTIEN=CPT IEN in V CPT file
"RTN","PXBSTOR",17,0)
 ;  POVIEN=POV IEN in V POV file
"RTN","PXBSTOR",18,0)
 ;  patient is defined from the visit
"RTN","PXBSTOR",19,0)
 ;
"RTN","PXBSTOR",20,0)
EN0(PXBVST,PATIENT,REQI,REQ) ;--Main Entry point
"RTN","PXBSTOR",21,0)
EN1 ;
"RTN","PXBSTOR",22,0)
 Q:'$D(REQI)!$G(PXBVST)<1
"RTN","PXBSTOR",23,0)
 K ^TMP("PXK",$J) ;--MUST BE MOVED TO AFTER THE EVENT
"RTN","PXBSTOR",24,0)
 N PRVIEN,CPTIEN,POVIEN,PRVBEF,CPTBEF,POVBEF,PPRNARR,CPRNARR
"RTN","PXBSTOR",25,0)
 N POVBEF12,PRVAFT,PRVAFT12,PRVBEF12,POVAFT12,POVAFT,POVI
"RTN","PXBSTOR",26,0)
 N CPTAFT,CPTAFT1,CPTBEF1,CPTAFT12,CPTBEF12,POVBF800,POVAF800
"RTN","PXBSTOR",27,0)
 N PRVBF812,CPTBF812,POVBF812,PRVAF812,CPTAF812,POVAF812,SEQ,CTR
"RTN","PXBSTOR",28,0)
 ;
"RTN","PXBSTOR",29,0)
SET ;--SET TEMP GLOBALS
"RTN","PXBSTOR",30,0)
 S SEQ=$$SET^PXBSTOR1
"RTN","PXBSTOR",31,0)
 D:$P(REQI,"^",1) PRV S SEQ=SEQ+1
"RTN","PXBSTOR",32,0)
 D:$P(REQI,"^",3) CPT S SEQ=SEQ+1
"RTN","PXBSTOR",33,0)
 D:$P(REQI,"^",5) POV S SEQ=SEQ+1
"RTN","PXBSTOR",34,0)
 F CTR=12:1:19 D:$P(REQI,U,CTR) DX S SEQ=SEQ+1
"RTN","PXBSTOR",35,0)
 S ^TMP("PXBSTOR",$J,"SEQ")=SEQ+1
"RTN","PXBSTOR",36,0)
 Q
"RTN","PXBSTOR",37,0)
PRV ;--PROVIDER PIECE 1 AND 2
"RTN","PXBSTOR",38,0)
 S PRVAFT=PRVBEF,PRVAFT12=PRVBEF12,PRVAF812=PRVBF812
"RTN","PXBSTOR",39,0)
 I $D(DELM),$P(DELM,"^",1)=1 S (PRVAFT,PRVAFT12)="" G PRV1
"RTN","PXBSTOR",40,0)
 S $P(PRVAFT,"^",1)=$P(REQI,"^",1) ;--PROVIDER IEN
"RTN","PXBSTOR",41,0)
 S $P(PRVAFT,"^",4)=$P(REQI,"^",2) ;--PRIMARY/SECONDARY
"RTN","PXBSTOR",42,0)
 S $P(PRVAFT,"^",2)=PATIENT ;--PATIENT
"RTN","PXBSTOR",43,0)
 S $P(PRVAFT,"^",3)=PXBVST ;--VISIT POINTER
"RTN","PXBSTOR",44,0)
 I PRVBF812']"" D
"RTN","PXBSTOR",45,0)
 .;-***POPULATE VERIFIED FIELD IN FUTURE
"RTN","PXBSTOR",46,0)
 .S $P(PRVAF812,"^",2)=$G(PXBPKG)
"RTN","PXBSTOR",47,0)
 .S $P(PRVAF812,"^",3)=$G(PXBSOURC)
"RTN","PXBSTOR",48,0)
PRV1 S ^TMP("PXK",$J,"PRV",SEQ,0,"AFTER")=PRVAFT
"RTN","PXBSTOR",49,0)
 S ^TMP("PXK",$J,"PRV",SEQ,0,"BEFORE")=PRVBEF
"RTN","PXBSTOR",50,0)
 S ^TMP("PXK",$J,"PRV",SEQ,12,"AFTER")=PRVAFT12
"RTN","PXBSTOR",51,0)
 S ^TMP("PXK",$J,"PRV",SEQ,12,"BEFORE")=PRVBEF12
"RTN","PXBSTOR",52,0)
 S ^TMP("PXK",$J,"PRV",SEQ,812,"AFTER")=PRVAF812
"RTN","PXBSTOR",53,0)
 S ^TMP("PXK",$J,"PRV",SEQ,812,"BEFORE")=PRVBF812
"RTN","PXBSTOR",54,0)
 S ^TMP("PXK",$J,"PRV",SEQ,"IEN")=PRVIEN
"RTN","PXBSTOR",55,0)
 Q
"RTN","PXBSTOR",56,0)
 ;
"RTN","PXBSTOR",57,0)
CPT ;--CPT PROCDEURE PIECE 3 AND 4
"RTN","PXBSTOR",58,0)
 N PXMODIEN
"RTN","PXBSTOR",59,0)
 S CPTAFT=CPTBEF,CPTAFT12=CPTBEF12,CPTAF812=CPTBF812
"RTN","PXBSTOR",60,0)
 I $D(DELM),$P(DELM,"^",2)=1 S (CPTAFT,CPTAFT12)="" G CPT1
"RTN","PXBSTOR",61,0)
 S $P(CPTAFT,"^",1)=$P(REQI,"^",3) ;--PROCEDURE IEN 
"RTN","PXBSTOR",62,0)
 S $P(CPTAFT,"^",2)=PATIENT ;--PATIENT
"RTN","PXBSTOR",63,0)
 S $P(CPTAFT,"^",3)=PXBVST ;--VISIT POINTER
"RTN","PXBSTOR",64,0)
 S $P(CPTAFT12,"^",4)=$P(REQI,"^",1) ;--PROVIDER POINTER
"RTN","PXBSTOR",65,0)
 S $P(CPTAFT12,"^",2)=$P(REQI,"^",22) ;--ORDERING PROVIDER POINTER
"RTN","PXBSTOR",66,0)
 S CPRNARR=$P($$CPT^ICPTCOD($P(REQI,"^",3),$G(IDATE)),U,3) ;--TEXT PROV NARR
"RTN","PXBSTOR",67,0)
 S $P(CPTAFT,"^",4)=+$$PROVNARR^PXAPI($G(CPRNARR),9000010.18) ;--PROV NAR
"RTN","PXBSTOR",68,0)
 S $P(CPTAFT,"^",16)=$P(REQI,"^",4) ;--QUANTITY
"RTN","PXBSTOR",69,0)
 S $P(CPTAFT,"^",5)=$P(REQI,"^",12) ;DX1 (REQUIRED)
"RTN","PXBSTOR",70,0)
 S $P(REQI,U,19)=$P(REQI,U,19) ;INSURE AT LEAST 19 PIECES IN REQI
"RTN","PXBSTOR",71,0)
 S $P(CPTAFT,"^",9,15)=$P(REQI,"^",13,19) ;DX2 - DX4, DX5 - DX8
"RTN","PXBSTOR",72,0)
 I $$SWSTAT^IBBAPI() D  ;DEPARTMENT CODE
"RTN","PXBSTOR",73,0)
 . I $P(CPTAFT,U,19)="",$G(^AUPNVSIT(PXBVST,0)),$P(^AUPNVSIT(PXBVST,0),"^",8) S $P(CPTAFT,U,19)=$P($G(^DIC(40.7,$P(^AUPNVSIT(PXBVST,0),"^",8),0)),"^",2)
"RTN","PXBSTOR",74,0)
 I $P(REQI,"^",4)=0 S (CPTAFT,CPTAFT12)=""
"RTN","PXBSTOR",75,0)
 I $P(REQI,"^",4)="@" S (CPTAFT,CPTAFT12)=""
"RTN","PXBSTOR",76,0)
 ;--------------------
"RTN","PXBSTOR",77,0)
 ;I $G(CPTIEN),$D(^AUPNVCPT(CPTIEN,12)),$P(REQI,"^",1)'=$P(^AUPNVCPT(CPTIEN,12),"^",4),'$D(DELM) S (CPTIEN,CPTBEF,CPTBEF12)=""
"RTN","PXBSTOR",78,0)
 ;---------------
"RTN","PXBSTOR",79,0)
 I CPTBF812']"" D
"RTN","PXBSTOR",80,0)
 .;-***POPULATE VERIFIED FIELD IN FUTURE
"RTN","PXBSTOR",81,0)
 .S $P(CPTAF812,"^",2)=$G(PXBPKG)
"RTN","PXBSTOR",82,0)
 .S $P(CPTAF812,"^",3)=$G(PXBSOURC)
"RTN","PXBSTOR",83,0)
 S PXMODIEN=""
"RTN","PXBSTOR",84,0)
 F  S PXMODIEN=$O(REQ(1,PXMODIEN)) Q:PXMODIEN=""  D
"RTN","PXBSTOR",85,0)
 .S CPTAFT1(PXMODIEN)=REQ(1,PXMODIEN)
"RTN","PXBSTOR",86,0)
CPT1 ;
"RTN","PXBSTOR",87,0)
 S ^TMP("PXK",$J,"CPT",SEQ,0,"AFTER")=CPTAFT
"RTN","PXBSTOR",88,0)
 S ^TMP("PXK",$J,"CPT",SEQ,0,"BEFORE")=CPTBEF
"RTN","PXBSTOR",89,0)
 S ^TMP("PXK",$J,"CPT",SEQ,12,"AFTER")=CPTAFT12
"RTN","PXBSTOR",90,0)
 S ^TMP("PXK",$J,"CPT",SEQ,12,"BEFORE")=CPTBEF12
"RTN","PXBSTOR",91,0)
 S ^TMP("PXK",$J,"CPT",SEQ,812,"AFTER")=CPTAF812
"RTN","PXBSTOR",92,0)
 S ^TMP("PXK",$J,"CPT",SEQ,812,"BEFORE")=CPTBF812
"RTN","PXBSTOR",93,0)
 S ^TMP("PXK",$J,"CPT",SEQ,"IEN")=CPTIEN
"RTN","PXBSTOR",94,0)
 ;Set modifiers into ^TMP
"RTN","PXBSTOR",95,0)
 S PXMODIEN=""
"RTN","PXBSTOR",96,0)
 F  S PXMODIEN=$O(CPTAFT1(PXMODIEN)) Q:PXMODIEN=""  D
"RTN","PXBSTOR",97,0)
 .S ^TMP("PXK",$J,"CPT",SEQ,1,PXMODIEN,"AFTER")=CPTAFT1(PXMODIEN)
"RTN","PXBSTOR",98,0)
 S PXMODIEN=""
"RTN","PXBSTOR",99,0)
 F  S PXMODIEN=$O(CPTBEF1(PXMODIEN)) Q:PXMODIEN=""  D
"RTN","PXBSTOR",100,0)
 .S ^TMP("PXK",$J,"CPT",SEQ,1,PXMODIEN,"BEFORE")=CPTBEF1(PXMODIEN)
"RTN","PXBSTOR",101,0)
 ;Set ^TMP file with V CPT IEN
"RTN","PXBSTOR",102,0)
 I $G(REQ)]"" D
"RTN","PXBSTOR",103,0)
 . S ^TMP("PXK",$J,"CPT",SEQ,"IEN")=REQ
"RTN","PXBSTOR",104,0)
 Q
"RTN","PXBSTOR",105,0)
 ;
"RTN","PXBSTOR",106,0)
POV ;--POV PIECE 5 AND 6
"RTN","PXBSTOR",107,0)
 S POVAFT=POVBEF,POVAFT12=POVBEF12,POVAF812=POVBF812,POVAF800=POVBF800
"RTN","PXBSTOR",108,0)
 S POVAFT17=POVBEF17
"RTN","PXBSTOR",109,0)
 I $D(DELM),$P(DELM,"^",3)=1 S (POVAFT,POVAFT12,POVAF800)="" G POV1
"RTN","PXBSTOR",110,0)
 S $P(POVAFT,"^",1)=$P(REQI,"^",5) ;--POV IEN 
"RTN","PXBSTOR",111,0)
 S $P(POVAFT,"^",12)=$P(REQI,"^",6) ;--PRI/SECONDARY
"RTN","PXBSTOR",112,0)
 S $P(POVAFT,U,17)=$P(REQI,U,7) ;--ORDERING/RESULTING
"RTN","PXBSTOR",113,0)
 S $P(POVAFT,"^",2)=PATIENT ;--PATIENT
"RTN","PXBSTOR",114,0)
 S $P(POVAFT,"^",3)=PXBVST ;--VISIT POINTER
"RTN","PXBSTOR",115,0)
 S PPRNARR=$$DXNARR^PXUTL1($P(REQI,"^",5),$G(IDATE)) ;--TEXT PROV NARR
"RTN","PXBSTOR",116,0)
 S $P(POVAFT,"^",4)=+$$PROVNARR^PXAPI($G(PPRNARR),9000010.07) ;--POI PROV NARR
"RTN","PXBSTOR",117,0)
 I $P($G(REQI),"^",7) S $P(POVAFT12,"^",4)=$P(^AUPNVPRV($P(REQI,"^",7),0),"^",1) ;--PROVIDER
"RTN","PXBSTOR",118,0)
 I $G(PXBRES) S $P(POVAFT,"^",16)=PXBRES ;-PROBLEM LIST ENTRY
"RTN","PXBSTOR",119,0)
 I POVBF812']"" D
"RTN","PXBSTOR",120,0)
 .;-**POPULATE VERIFIED FIELD IN FUTURE
"RTN","PXBSTOR",121,0)
 .S $P(POVAF812,"^",2)=$G(PXBPKG)
"RTN","PXBSTOR",122,0)
 .S $P(POVAF812,"^",3)=$G(PXBSOURC)
"RTN","PXBSTOR",123,0)
 I $D(PXBREQ($P(REQI,U,5))) S POVAF800=$G(PXBREQ($P(REQI,U,5),"I"))
"RTN","PXBSTOR",124,0)
POV1 S ^TMP("PXK",$J,"POV",SEQ,0,"AFTER")=POVAFT
"RTN","PXBSTOR",125,0)
 S ^TMP("PXK",$J,"POV",SEQ,0,"BEFORE")=POVBEF
"RTN","PXBSTOR",126,0)
 S ^TMP("PXK",$J,"POV",SEQ,12,"AFTER")=POVAFT12
"RTN","PXBSTOR",127,0)
 S ^TMP("PXK",$J,"POV",SEQ,12,"BEFORE")=POVBEF12
"RTN","PXBSTOR",128,0)
 S ^TMP("PXK",$J,"POV",SEQ,17,"AFTER")=POVAFT17
"RTN","PXBSTOR",129,0)
 S ^TMP("PXK",$J,"POV",SEQ,17,"BEFORE")=POVBEF17
"RTN","PXBSTOR",130,0)
 S ^TMP("PXK",$J,"POV",SEQ,812,"AFTER")=POVAF812
"RTN","PXBSTOR",131,0)
 S ^TMP("PXK",$J,"POV",SEQ,812,"BEFORE")=POVBF812
"RTN","PXBSTOR",132,0)
 S ^TMP("PXK",$J,"POV",SEQ,800,"AFTER")=POVAF800
"RTN","PXBSTOR",133,0)
 S ^TMP("PXK",$J,"POV",SEQ,800,"BEFORE")=POVBF800
"RTN","PXBSTOR",134,0)
 S ^TMP("PXK",$J,"POV",SEQ,"IEN")=POVIEN
"RTN","PXBSTOR",135,0)
 Q
"RTN","PXBSTOR",136,0)
 ;
"RTN","PXBSTOR",137,0)
DX ;CPT DIAGNOSIS - PX124
"RTN","PXBSTOR",138,0)
 N POVIEN,POVBF800,POVBF812,POVBEF12,POVBEF,POVBEF17
"RTN","PXBSTOR",139,0)
 N IEN,ANS,POVAF800,POVAF812,POVAFT12,POVAFT,POVAFT17
"RTN","PXBSTOR",140,0)
 S IEN=$P(REQI,U,CTR),ANS=$$XLATE^PXBGPOV(PXBVST,IEN),POVIEN=+ANS
"RTN","PXBSTOR",141,0)
 I POVIEN D
"RTN","PXBSTOR",142,0)
 .S POVBEF=$G(^AUPNVPOV(POVIEN,0)),POVBEF12=$G(^(12)),POVBF812=$G(^(812)),POVBF800=$G(^(800)),POVBEF17=$G(^(17))
"RTN","PXBSTOR",143,0)
 E  S (POVBF800,POVBF812,POVBEF12,POVBEF17,POVBEF)=""
"RTN","PXBSTOR",144,0)
 S POVAFT=POVBEF,POVAFT12=POVBEF12,POVAF812=POVBF812,POVAF800=POVBF800
"RTN","PXBSTOR",145,0)
 S POVAFT17=POVBEF17
"RTN","PXBSTOR",146,0)
 S $P(POVAFT,U,1,3)=IEN_U_PATIENT_U_PXBVST
"RTN","PXBSTOR",147,0)
 S PPRNARR=$$EXTTEXT^PXUTL1(IEN,1,80,10)
"RTN","PXBSTOR",148,0)
 S $P(POVAFT,U,4)=+$$PROVNARR^PXAPI(PPRNARR,9000010.07)
"RTN","PXBSTOR",149,0)
 S $P(POVAFT,U,12)=$S(IEN=$G(PXBDXPRI):"P",1:"S") ;PRI/SEC
"RTN","PXBSTOR",150,0)
 I $P(REQI,U,7) S $P(POVAFT12,U,4)=$P($G(^AUPNVPRV($P(REQI,U,7),0)),U,1)
"RTN","PXBSTOR",151,0)
 I POVBF812']"" S $P(POVAF812,U,2,3)=$G(PXBPKG)_U_$G(PXBSOURC)
"RTN","PXBSTOR",152,0)
 S POVAF800=$G(PXBREQ(IEN,"I")) S:POVAF800="" POVAF800=$P(ANS,U,4,20)
"RTN","PXBSTOR",153,0)
 D POV1
"RTN","PXBSTOR",154,0)
 Q
"RTN","PXCECPT")
0^18^B65152198^B64348056
"RTN","PXCECPT",1,0)
PXCECPT ;ISL/dee,ISA/Zoltan,esw - Used to edit and display V CPT ;6/22/04 3:27pm
"RTN","PXCECPT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**14,27,73,89,112,121,136,124,170,164**;Aug 12, 1996
"RTN","PXCECPT",3,0)
 ;; ;
"RTN","PXCECPT",4,0)
 Q
"RTN","PXCECPT",5,0)
 ;
"RTN","PXCECPT",6,0)
 ;+Structure of Line with the line label "FORMAT"
"RTN","PXCECPT",7,0)
 ;+;;Long name~File Number~Node Subscripts~Allow Duplicate entries (1=yes, 0=no)~File global name
"RTN","PXCECPT",8,0)
 ;+      1         2             3                   4                                   5
"RTN","PXCECPT",9,0)
 ;+
"RTN","PXCECPT",10,0)
 ;+Structure of Following lines:
"RTN","PXCECPT",11,0)
 ;+;;Node~Piece~,Field Number~Edit Label~Display Label~Display Routine~Edit Routine~Help Text for DIR("?")~Set of PXCEKEYS that can Edit~D if Detail Display Only~
"RTN","PXCECPT",12,0)
 ;+   1  ~  2  ~      3      ~     4    ~        5    ~        6      ~     7      ~       8              ~          9                  ~         10
"RTN","PXCECPT",13,0)
 ;+The Display & Edit routines are for special cases.
"RTN","PXCECPT",14,0)
 ;+  (The .01 fields cannot have a special edit.)
"RTN","PXCECPT",15,0)
 ;
"RTN","PXCECPT",16,0)
FORMAT ;;CPT~9000010.18~0,1,12,802,811,812~1~^AUPNVCPT
"RTN","PXCECPT",17,0)
 ;;0~1~.01~CPT Code:  ~CPT Code:  ~$$DISPLY01^PXCECPT~ECPTCODE^PXCECPT~^D HELP^PXCEHELP~~B
"RTN","PXCECPT",18,0)
 ;;0~19~.19~Department Code:  ~Department Code:  ~~DEPART^PXCECPT1~~~D
"RTN","PXCECPT",19,0)
 ;;0~17~.17~Order Reference:  ~Order Reference:  ~~SKIP^PXCECPT~~~D
"RTN","PXCECPT",20,0)
 ;;1~0~1~CPT Modifier:  ~CPT Modifier:  ~$$DISPMOD^PXCECPT~ECPTMOD^PXCECPT~Select a Modifier that is valid for the CPT code.~~B
"RTN","PXCECPT",21,0)
 ;;0~4~.04~Provider Narrative:  ~Provider Narrative:  ~$$DNARRAT^PXCECPT~ENARRAT^PXCEPOV1(1,1,1,81,2)~~~B
"RTN","PXCECPT",22,0)
 ;;0~16~.16~Quantity:  ~Quantity:  ~~EQUAN^PXCECPT~~~D
"RTN","PXCECPT",23,0)
 ;;0~7~.07~Principal Procedure:  ~Principal Procedure:  ~~~~~D
"RTN","PXCECPT",24,0)
 ;;12~2~1202~Ordering Provider:  ~Ordering Provider:  ~~EPROV12^PXCEPRV~~~D
"RTN","PXCECPT",25,0)
 ;;12~4~1204~Encounter Provider:  ~Encounter Provider:  ~~EPROV12^PXCEPRV~~~D
"RTN","PXCECPT",26,0)
 ;;802~1~80201~Provider Narrative Category:  ~Provider Narrative Category:  ~$$DNARRAT^PXCECPT~ENARRAT^PXCEPOV1(0,2,0,81,3)~~C~D
"RTN","PXCECPT",27,0)
 ;;811~1~81101~Comments:  ~Comments:  ~~~~~D
"RTN","PXCECPT",28,0)
 ;;0~5~.05~Primary Diagnosis:  ~Primary Diagnosis:  ~$$DISPLY01^PXCEPOV~EPOV^PXCECPT~~~
"RTN","PXCECPT",29,0)
 ;;0~9~.09~1st Secondary Diagnosis:  ~1st Secondary Diagnosis:  ~$$DISPLY01^PXCEPOV~EPOV^PXCECPT~~~
"RTN","PXCECPT",30,0)
 ;;0~10~.1~2nd Secondary Diagnosis:  ~2nd Secondary Diagnosis:  ~$$DISPLY01^PXCEPOV~EPOV^PXCECPT~~~
"RTN","PXCECPT",31,0)
 ;;0~11~.11~3rd Secondary Diagnosis:  ~3rd Secondary Diagnosis:  ~$$DISPLY01^PXCEPOV~EPOV^PXCECPT~~~
"RTN","PXCECPT",32,0)
 ;;0~12~.12~4th Secondary Diagnosis:  ~4th Secondary Diagnosis:  ~$$DISPLY01^PXCEPOV~EPOV^PXCECPT~~~
"RTN","PXCECPT",33,0)
 ;;0~13~.13~5th Secondary Diagnosis:  ~5th Secondary Diagnosis:  ~$$DISPLY01^PXCEPOV~EPOV^PXCECPT~~~
"RTN","PXCECPT",34,0)
 ;;0~14~.14~6th Secondary Diagnosis:  ~6th Secondary Diagnosis:  ~$$DISPLY01^PXCEPOV~EPOV^PXCECPT~~~
"RTN","PXCECPT",35,0)
 ;;0~15~.15~7th Secondary Diagnosis:  ~7th Secondary Diagnosis:  ~$$DISPLY01^PXCEPOV~EPOV^PXCECPT~~~
"RTN","PXCECPT",36,0)
 ;;
"RTN","PXCECPT",37,0)
 ;
"RTN","PXCECPT",38,0)
 ;The interface for AICS to get list on form for help.
"RTN","PXCECPT",39,0)
INTRFACE ;;DG SELECT CPT PROCEDURE CODES
"RTN","PXCECPT",40,0)
 ;+
"RTN","PXCECPT",41,0)
 ;+********************************
"RTN","PXCECPT",42,0)
 ;+Special cases for display.
"RTN","PXCECPT",43,0)
 ;
"RTN","PXCECPT",44,0)
DISPMOD(PXCECPT) ;
"RTN","PXCECPT",45,0)
 ;+Display the modifiers associated with this V CPT entry.
"RTN","PXCECPT",46,0)
 ;+PXCECPT = IEN in V CPT file.
"RTN","PXCECPT",47,0)
 N MODS,SIEN,MODIEN,SCRATCH,MODSTR,MODNAME,OUTSTR
"RTN","PXCECPT",48,0)
 I $G(PXCECPT)="" S PXCECPT=IEN
"RTN","PXCECPT",49,0)
 S OUTSTR=""
"RTN","PXCECPT",50,0)
 I PXCECPT="" Q OUTSTR
"RTN","PXCECPT",51,0)
 S SIEN=0
"RTN","PXCECPT",52,0)
 F MODS=1:1 S SIEN=$O(^AUPNVCPT(PXCECPT,1,SIEN)) Q:'SIEN  D
"RTN","PXCECPT",53,0)
 . S MODIEN=$P($G(^AUPNVCPT(PXCECPT,1,SIEN,0)),"^")
"RTN","PXCECPT",54,0)
 . S $P(OUTSTR,U,MODS)=$$MODTEXT(MODIEN)
"RTN","PXCECPT",55,0)
 Q OUTSTR
"RTN","PXCECPT",56,0)
DNARRAT(PNAR) ;+Display Provider Narrative for procedure in V CPT file.
"RTN","PXCECPT",57,0)
 I PNAR="" Q ""
"RTN","PXCECPT",58,0)
 N PXCEPNAR
"RTN","PXCECPT",59,0)
 S PXCEPNAR=$P(^AUTNPOV(PNAR,0),"^")
"RTN","PXCECPT",60,0)
 I $G(VIEW)="B",$D(ENTRY)>0 D
"RTN","PXCECPT",61,0)
 . ;N DIC,DR,DA,DIQ,PXCEDIQ1
"RTN","PXCECPT",62,0)
 . ;S DIC=81
"RTN","PXCECPT",63,0)
 . ;S DR="2"
"RTN","PXCECPT",64,0)
 . ;S DA=$P(ENTRY(0),"^",1)
"RTN","PXCECPT",65,0)
 . ;S DIQ="PXCEDIQ1("
"RTN","PXCECPT",66,0)
 . ;S DIQ(0)="E"
"RTN","PXCECPT",67,0)
 . ;D EN^DIQ1
"RTN","PXCECPT",68,0)
 . ;S:PXCEDIQ1(81,DA,2,"E")=PXCEPNAR PXCEPNAR=""
"RTN","PXCECPT",69,0)
 . N CPTSTR
"RTN","PXCECPT",70,0)
 . S CPTSTR=$$CPT^ICPTCOD($P(ENTRY(0),U),$P(^AUPNVSIT(PXCEVIEN,0),U))
"RTN","PXCECPT",71,0)
 . S:$P(CPTSTR,U,3)=PXCEPNAR PXCEPNAR=""
"RTN","PXCECPT",72,0)
 Q PXCEPNAR
"RTN","PXCECPT",73,0)
 ;+
"RTN","PXCECPT",74,0)
 ;+********************************
"RTN","PXCECPT",75,0)
 ;+Special cases for edit.
"RTN","PXCECPT",76,0)
 ;+
"RTN","PXCECPT",77,0)
ECPTCODE ;+Code to edit CPT Code in V CPT file.
"RTN","PXCECPT",78,0)
 K DIRUT
"RTN","PXCECPT",79,0)
 N DIC,DA,PXCPTDT,PXDFLT
"RTN","PXCECPT",80,0)
 S PXCPTDT=+^TMP("PXK",$J,"VST",1,0,"AFTER")
"RTN","PXCECPT",81,0)
 S (X,PXDFLT)=""
"RTN","PXCECPT",82,0)
 I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))'="" D
"RTN","PXCECPT",83,0)
 . N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCECPT",84,0)
 . S PXCEINT=$P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCECPT",85,0)
 . S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCECPT",86,0)
 . S PXDFLT=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCECPT",87,0)
 S Y=$$GETCODE^PXCPTAPI(PXDFLT,PXCPTDT)
"RTN","PXCECPT",88,0)
 I Y="@" S X="@" Q
"RTN","PXCECPT",89,0)
 I Y<0 S DIRUT=1 Q
"RTN","PXCECPT",90,0)
 S PXCEMOD=$P(Y,"-",2)
"RTN","PXCECPT",91,0)
 S Y=$P(Y,"-"),X=+Y
"RTN","PXCECPT",92,0)
 I PXCEDIRB="" Q
"RTN","PXCECPT",93,0)
 I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=X Q
"RTN","PXCECPT",94,0)
 Q:$$CHGCPT()
"RTN","PXCECPT",95,0)
 G ECPTCODE
"RTN","PXCECPT",96,0)
 ;
"RTN","PXCECPT",97,0)
ECPTMOD ;+Prompt for CPT Modifier in V CPT file.
"RTN","PXCECPT",98,0)
 ;
"RTN","PXCECPT",99,0)
 ;--If there are no modifiers for CPT code do not prompt
"RTN","PXCECPT",100,0)
 Q:PXMDCNT'>0
"RTN","PXCECPT",101,0)
 N DTOUT,DUOUT,DIROUT,DIR,PXSUB,PXSEQ,PXSTR,PXARR
"RTN","PXCECPT",102,0)
 N DA,DIC,PXLINE,SUBIEN,PXFILE,PXMOD,PXI
"RTN","PXCECPT",103,0)
 S PXSUB=1,PXSTR=""
"RTN","PXCECPT",104,0)
 S DA=^TMP("PXK",$J,PXCECATS,1,"IEN")
"RTN","PXCECPT",105,0)
 S DR=1
"RTN","PXCECPT",106,0)
 S DIE="^AUPNVCPT("
"RTN","PXCECPT",107,0)
 S DIC(0)="AELMQ"
"RTN","PXCECPT",108,0)
 L +@(DIE_"DA)"):10
"RTN","PXCECPT",109,0)
 I $G(PXCEMOD)]"" D
"RTN","PXCECPT",110,0)
 . I $L(PXCEMOD,",")=1 S DR="1//"_PXCEMOD Q
"RTN","PXCECPT",111,0)
 . S PXMOD=""
"RTN","PXCECPT",112,0)
 . F PXI=1:1 S PXMOD=$P(PXCEMOD,",",PXI) Q:PXMOD=""  D
"RTN","PXCECPT",113,0)
 .. K PXERR
"RTN","PXCECPT",114,0)
 .. D VAL^DIE(9000010.181,DA,.01,"",PXMOD,.PXERR)
"RTN","PXCECPT",115,0)
 .. Q:PXERR="^"
"RTN","PXCECPT",116,0)
 .. S DR="1///^S X=PXMOD"
"RTN","PXCECPT",117,0)
 .. D ^DIE
"RTN","PXCECPT",118,0)
 . S DR=1
"RTN","PXCECPT",119,0)
 D ^DIE
"RTN","PXCECPT",120,0)
 L -@(DIE_"DA)")
"RTN","PXCECPT",121,0)
 ; SET NEWLY FILED CPT MODIFIERS INTO LOCAL ARRAY
"RTN","PXCECPT",122,0)
 K PXCEAFTR(1)
"RTN","PXCECPT",123,0)
 D GETS^DIQ(9000010.18,^TMP("PXK",$J,PXCECATS,1,"IEN"),"1*","I","PXARR")
"RTN","PXCECPT",124,0)
 S PXFILE=9000010.181
"RTN","PXCECPT",125,0)
 S PXSUB=""
"RTN","PXCECPT",126,0)
 F  S PXSUB=$O(PXARR(PXFILE,PXSUB)) Q:PXSUB=""  D
"RTN","PXCECPT",127,0)
 . S PXCEAFTR(1,$P(PXSUB,","))=PXARR(PXFILE,PXSUB,.01,"I")
"RTN","PXCECPT",128,0)
 I $D(DTOUT)!$D(Y) S (PXCEEND,PXCEQUIT)=1 Q
"RTN","PXCECPT",129,0)
 Q
"RTN","PXCECPT",130,0)
 ;
"RTN","PXCECPT",131,0)
EQUAN ;+Code to edit Quantity in V CPT file.
"RTN","PXCECPT",132,0)
 I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))'="" D
"RTN","PXCECPT",133,0)
 . N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCECPT",134,0)
 . S PXCEINT=$P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCECPT",135,0)
 . S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCECPT",136,0)
 . S DIR("B")=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCECPT",137,0)
 E  S DIR("B")=1
"RTN","PXCECPT",138,0)
 S DIR(0)=PXCEFILE_","_$P(PXCETEXT,"~",3)_"A"
"RTN","PXCECPT",139,0)
 S DIR("A")=$P(PXCETEXT,"~",4)
"RTN","PXCECPT",140,0)
 S:$P(PXCETEXT,"~",8)]"" DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCECPT",141,0)
 D ^DIR
"RTN","PXCECPT",142,0)
 K DIR,DA
"RTN","PXCECPT",143,0)
 I $D(DTOUT)!$D(DUOUT) S (PXCEEND,PXCEQUIT)=1 Q
"RTN","PXCECPT",144,0)
 I +Y<1 W !,$C(7),"Quantity is required.",! G EQUAN
"RTN","PXCECPT",145,0)
 N PXTMPCPT S PXTMPCPT=$P(PXCEAFTR($P(PXCETEXT,"~")),"^")
"RTN","PXCECPT",146,0)
 I +Y>1,$$GET1^DIQ(357.69,$G(PXCEIN01),.01)>0,$$GET1^DIQ(357.69,$G(PXCEIN01),.06,"I")'="Y" D
"RTN","PXCECPT",147,0)
 .W !,"E&M code, quantity changed to 1."
"RTN","PXCECPT",148,0)
 .S $P(Y,"^")=1
"RTN","PXCECPT",149,0)
 S:$P(Y,"^")="" Y=1
"RTN","PXCECPT",150,0)
 S $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=$P(Y,"^")
"RTN","PXCECPT",151,0)
 Q
"RTN","PXCECPT",152,0)
EPOV ;Edit the Associated DX
"RTN","PXCECPT",153,0)
 I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))'="" D
"RTN","PXCECPT",154,0)
 .N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCECPT",155,0)
 .S PXCEINT=$P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCECPT",156,0)
 .S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCECPT",157,0)
 .S DIR("B")=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCECPT",158,0)
 S DIR(0)=PXCEFILE_","_$P(PXCETEXT,"~",3)_"A"
"RTN","PXCECPT",159,0)
 S DIR("A")=$P(PXCETEXT,"~",4)
"RTN","PXCECPT",160,0)
 S:$P(PXCETEXT,"~",8)]"" DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCECPT",161,0)
 D ^DIR
"RTN","PXCECPT",162,0)
 K DIR,DA
"RTN","PXCECPT",163,0)
 I X="@" S Y="@" S $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=$P(Y,"^") Q
"RTN","PXCECPT",164,0)
 I $D(DTOUT)!$D(DUOUT) S PXCEEND=1,PXCEQUIT=1 Q
"RTN","PXCECPT",165,0)
 I '+Y S PXCEEND=1 Q  ;S:$P(PXCETEXT,"~",3)=".05" PXCEQUIT=1 Q
"RTN","PXCECPT",166,0)
 ;See if this diagnosis is in the PXCEAFTR(0)
"RTN","PXCECPT",167,0)
 I $P(PXCETEXT,"~",2)'=5,(+Y=$P($G(PXCEAFTR(0)),"^",5)) S PXCEEND=1
"RTN","PXCECPT",168,0)
 I $P(PXCETEXT,"~",2)'=9,(+Y=$P($G(PXCEAFTR(0)),"^",9)) S PXCEEND=1
"RTN","PXCECPT",169,0)
 I $P(PXCETEXT,"~",2)'=10,(+Y=$P($G(PXCEAFTR(0)),"^",10)) S PXCEEND=1
"RTN","PXCECPT",170,0)
 I $P(PXCETEXT,"~",2)'=11,(+Y=$P($G(PXCEAFTR(0)),"^",11)) S PXCEEND=1
"RTN","PXCECPT",171,0)
 I $P(PXCETEXT,"~",2)'=12,(+Y=$P($G(PXCEAFTR(0)),"^",12)) S PXCEEND=1
"RTN","PXCECPT",172,0)
 I $P(PXCETEXT,"~",2)'=13,(+Y=$P($G(PXCEAFTR(0)),"^",13)) S PXCEEND=1
"RTN","PXCECPT",173,0)
 I $P(PXCETEXT,"~",2)'=14,(+Y=$P($G(PXCEAFTR(0)),"^",14)) S PXCEEND=1
"RTN","PXCECPT",174,0)
 I $P(PXCETEXT,"~",2)'=15,(+Y=$P($G(PXCEAFTR(0)),"^",15)) S PXCEEND=1
"RTN","PXCECPT",175,0)
 I PXCEEND=1 W !,$C(7),"Duplicate Diagnosis on this CPT code is not allowed." D WAIT^PXCEHELP Q
"RTN","PXCECPT",176,0)
 S $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=$P(Y,"^")
"RTN","PXCECPT",177,0)
 D:+Y>0 DIAGNOS^PXCEVFI4(+Y)
"RTN","PXCECPT",178,0)
 Q
"RTN","PXCECPT",179,0)
 ;+
"RTN","PXCECPT",180,0)
 ;+********************************
"RTN","PXCECPT",181,0)
 ;+Special Reusable Functionality
"RTN","PXCECPT",182,0)
DISPLY01(PXCECPT) ;
"RTN","PXCECPT",183,0)
 ;Display text for the .01 field which is a pointer to ^ICPT.
"RTN","PXCECPT",184,0)
 ;Also called with the Evaluation and Management Code from the visit
"RTN","PXCECPT",185,0)
 ;  in the parameter.
"RTN","PXCECPT",186,0)
 ;(Must have is called by ASK^PXCEVFI2 and DEL^PXCEVFI2.)
"RTN","PXCECPT",187,0)
 ;N DIC,DR,DA,DIQ,PXCEFNUM,PXCEDIQ1
"RTN","PXCECPT",188,0)
 ;S (DIC,PXCEFNUM)=81
"RTN","PXCECPT",189,0)
 ;S DR=".01;2"
"RTN","PXCECPT",190,0)
 ;S DA=+$P(PXCECPT,"^",1)
"RTN","PXCECPT",191,0)
 ;S DIQ="PXCEDIQ1("
"RTN","PXCECPT",192,0)
 ;S DIQ(0)="E"
"RTN","PXCECPT",193,0)
 ;D EN^DIQ1
"RTN","PXCECPT",194,0)
 ;Q PXCEDIQ1(PXCEFNUM,DA,.01,"E")_"     "_PXCEDIQ1(PXCEFNUM,DA,2,"E")
"RTN","PXCECPT",195,0)
 N CPTSTR
"RTN","PXCECPT",196,0)
 S CPTSTR=$$CPT^ICPTCOD($P(PXCECPT,U),$P(^AUPNVSIT(PXCEVIEN,0),U))
"RTN","PXCECPT",197,0)
 Q $P(CPTSTR,U,2)_"     "_$P(CPTSTR,U,3)
"RTN","PXCECPT",198,0)
EDMOD(MODS,CPT) ;+Edit the Modifiers for a CPT code entry.
"RTN","PXCECPT",199,0)
 N MNUM S MNUM=0 ; Modifier number.
"RTN","PXCECPT",200,0)
 N MIEN,MTEXT
"RTN","PXCECPT",201,0)
 Q
"RTN","PXCECPT",202,0)
MODNAME(MODIEN) ;+Return #.02 NAME for this CPT MODIFIER (#81.3)
"RTN","PXCECPT",203,0)
 Q
"RTN","PXCECPT",204,0)
MODTEXT(MODIEN) ;+Return string of text describing modifier.
"RTN","PXCECPT",205,0)
 ;+MODIEN = IEN in CPT MODIFIER file (#81.3).
"RTN","PXCECPT",206,0)
 ;+Returns:  MODIFIER (#.01) followed by NAME(#.02).
"RTN","PXCECPT",207,0)
 N MOD,DESC,TEXT,RVAL
"RTN","PXCECPT",208,0)
 S RVAL=$$MOD^ICPTMOD(MODIEN,"I",$P(^AUPNVSIT(PXCEVIEN,0),U))
"RTN","PXCECPT",209,0)
 S MOD=$P(RVAL,"^",2)
"RTN","PXCECPT",210,0)
 S DESC=$P(RVAL,"^",3)
"RTN","PXCECPT",211,0)
 S TEXT=MOD_"  "_DESC
"RTN","PXCECPT",212,0)
 Q TEXT
"RTN","PXCECPT",213,0)
CHGCPT() ;Verify CPT code should be modified
"RTN","PXCECPT",214,0)
 ;If response is yes remove modifiers on file for CPT code
"RTN","PXCECPT",215,0)
 N DIR,DA,X,Y,PXIEN
"RTN","PXCECPT",216,0)
 W !!,$C(7),"WARNING!  THIS WILL ALSO DELETE ANY MODIFIERS ASSOCIATED WITH CPT CODE "_PXCEDIRB
"RTN","PXCECPT",217,0)
 S DIR(0)="Y"
"RTN","PXCECPT",218,0)
 S DIR("A")="SURE YOU WANT TO CHANGE THE CPT CODE?"
"RTN","PXCECPT",219,0)
 S DIR("B")="YES"
"RTN","PXCECPT",220,0)
 D ^DIR
"RTN","PXCECPT",221,0)
 ;Delete CPT Modifiers from V CPT file for current IEN
"RTN","PXCECPT",222,0)
 I 'Y Q +Y
"RTN","PXCECPT",223,0)
 S DA(1)=PXCEFIEN
"RTN","PXCECPT",224,0)
 S DIK="^AUPNVCPT("_DA(1)_","_1_","
"RTN","PXCECPT",225,0)
 S PXIEN=""
"RTN","PXCECPT",226,0)
 F  S PXIEN=$O(PXCEAFTR(1,PXIEN)) Q:PXIEN=""  D
"RTN","PXCECPT",227,0)
 . S DA=PXIEN
"RTN","PXCECPT",228,0)
 . D ^DIK
"RTN","PXCECPT",229,0)
 Q 1
"RTN","PXCECPT",230,0)
 ;
"RTN","PXCECPT",231,0)
NEWCODE ;
"RTN","PXCECPT",232,0)
 K DD,DO
"RTN","PXCECPT",233,0)
 N DIC,X,Y
"RTN","PXCECPT",234,0)
 S DIC="^AUPNVCPT("
"RTN","PXCECPT",235,0)
 S DIC(0)=""
"RTN","PXCECPT",236,0)
 S DIC("DR")=".02////^S X=$P(PXCEAFTR(0),""^"",2);"
"RTN","PXCECPT",237,0)
 S DIC("DR")=DIC("DR")_".03////^S X=$P(PXCEAFTR(0),""^"",3);"
"RTN","PXCECPT",238,0)
 S X=PXCEIN01
"RTN","PXCECPT",239,0)
 D FILE^DICN
"RTN","PXCECPT",240,0)
 S PXCEFIEN=+Y
"RTN","PXCECPT",241,0)
 Q
"RTN","PXCECPT",242,0)
 ;
"RTN","PXCECPT",243,0)
SKIP ;
"RTN","PXCECPT",244,0)
 Q
"RTN","PXCECPT1")
0^24^B2104203^B373662
"RTN","PXCECPT1",1,0)
PXCECPT1 ;ISA/DHH/BDB - Used to edit and display V CPT ;9/5/2005
"RTN","PXCECPT1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**170,164**;Aug 12, 1996
"RTN","PXCECPT1",3,0)
 ;; ;
"RTN","PXCECPT1",4,0)
 Q
"RTN","PXCECPT1",5,0)
ICDEN ;diagnosis lookup using lexicon
"RTN","PXCECPT1",6,0)
 ;
"RTN","PXCECPT1",7,0)
 I $G(X)["?" Q
"RTN","PXCECPT1",8,0)
 K Y N DIC I $G(X)="?BAD" S X="" Q
"RTN","PXCECPT1",9,0)
 D CONFIG^LEXSET("ICD",,$G(PXCEAPDT))
"RTN","PXCECPT1",10,0)
 S DIC(0)=""
"RTN","PXCECPT1",11,0)
 S DIC="^LEX(757.01,",DIC(0)=$S('$L($G(X)):"",1:"")_"EQM"
"RTN","PXCECPT1",12,0)
 S DIC("A")="Enter Diagnosis: "
"RTN","PXCECPT1",13,0)
 D ^DIC
"RTN","PXCECPT1",14,0)
 I Y=-1 S X="" Q
"RTN","PXCECPT1",15,0)
 S X=$G(Y(1))
"RTN","PXCECPT1",16,0)
 Q
"RTN","PXCECPT1",17,0)
 ;
"RTN","PXCECPT1",18,0)
DEPART ;PX*1.0*164  Set the Department Code to the Clinic AMIS Reporting Stop Code
"RTN","PXCECPT1",19,0)
 Q:'$$SWSTAT^IBBAPI()  D
"RTN","PXCECPT1",20,0)
 . I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))="",$P($G(^AUPNVSIT(PXCEVIEN,0)),"^",8) S $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=$P($G(^DIC(40.7,$P(^AUPNVSIT(PXCEVIEN,0),"^",8),0)),"^",2)
"RTN","PXCECPT1",21,0)
 Q
"RTN","PXKFCPT")
0^19^B3416944^B3210816
"RTN","PXKFCPT",1,0)
PXKFCPT ;ISL/JVS - Fields for v cpt file ;3/22/05 11:48am
"RTN","PXKFCPT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,73,117,124,164**;Aug 12, 1996
"RTN","PXKFCPT",3,0)
 ;
"RTN","PXKFCPT",4,0)
 ; PX*1*117; added piece ,4, on '0' label as a required one
"RTN","PXKFCPT",5,0)
 ;  Adding or Editing of data in a particular field can be controlled
"RTN","PXKFCPT",6,0)
 ;by adding a ~ as a delimiter and the letters A and/or E to the
"RTN","PXKFCPT",7,0)
 ;end of the line of text which represents what could be added
"RTN","PXKFCPT",8,0)
 ;to the DR string in a DIE call.
"RTN","PXKFCPT",9,0)
 ; 1. If none or all three(~AE) of these characters are added then
"RTN","PXKFCPT",10,0)
 ;    the data in this field can be either added or edited.
"RTN","PXKFCPT",11,0)
 ; 2. If only the ~ is added then the data in this field can be
"RTN","PXKFCPT",12,0)
 ;    neither added or edited.
"RTN","PXKFCPT",13,0)
 ; 3. IF only the ~A is added then the data can only be added to
"RTN","PXKFCPT",14,0)
 ;    the file for this field but not edited.
"RTN","PXKFCPT",15,0)
 ; 4. If only the ~E is added the data can only be edited in
"RTN","PXKFCPT",16,0)
 ;    this file for this field. (not a likely possibility)
"RTN","PXKFCPT",17,0)
 ;
"RTN","PXKFCPT",18,0)
 ; The word "OPTION" in front of the line of text below tells the 
"RTN","PXKFCPT",19,0)
 ;software to determine,based on the data, the appropriateness
"RTN","PXKFCPT",20,0)
 ;of using either a "///" or "////" stuff in a DIE call.
"RTN","PXKFCPT",21,0)
 ;
"RTN","PXKFCPT",22,0)
 ; The information on line tag 0 $P(,," * ",1) are the piece numbers
"RTN","PXKFCPT",23,0)
 ;of the fields on the zero node that are required by the data
"RTN","PXKFCPT",24,0)
 ;dictionary and are checked for to determine if enough data is present
"RTN","PXKFCPT",25,0)
 ;to proceed without any errors. $P(,," * ",2) are the nodes and
"RTN","PXKFCPT",26,0)
 ;piece numbers of the fields used to determine duplicates in the
"RTN","PXKFCPT",27,0)
 ;file (node+piece (eg. 12+4)). $P(,," * ",3) is a flag use to
"RTN","PXKFCPT",28,0)
 ;determine if duplicates are allowed in this visit file. 
"RTN","PXKFCPT",29,0)
 ;If it is set to 0 then no duplicate checks will occur. If it is
"RTN","PXKFCPT",30,0)
 ;set to 1 then the file will be checked for duplicates based on
"RTN","PXKFCPT",31,0)
 ;the information in $P 2.
"RTN","PXKFCPT",32,0)
 ;
"RTN","PXKFCPT",33,0)
 ; The following is the file's global name.  Each global must have a
"RTN","PXKFCPT",34,0)
 ;unique name and can not have any subscripts as part of the global root.
"RTN","PXKFCPT",35,0)
GLOBAL ;;^AUPNVCPT
"RTN","PXKFCPT",36,0)
 ;
"RTN","PXKFCPT",37,0)
EN1 ;
"RTN","PXKFCPT",38,0)
 S PXKER=""
"RTN","PXKFCPT",39,0)
 S PXKER=$P($T(@PXKNOD+PXKPCE),";;",2)
"RTN","PXKFCPT",40,0)
 Q
"RTN","PXKFCPT",41,0)
EN2 ;
"RTN","PXKFCPT",42,0)
 S PXKFD=""
"RTN","PXKFCPT",43,0)
 S PXKFD=$P($T(@PXKNOD+PXKPCE),";;",2) D
"RTN","PXKFCPT",44,0)
 .I PXKFD="" S PXKPCE=PXKPCE+1 D EN2
"RTN","PXKFCPT",45,0)
 Q
"RTN","PXKFCPT",46,0)
ADD ;Add an entry to the file
"RTN","PXKFCPT",47,0)
 Q
"RTN","PXKFCPT",48,0)
0 ;;1,2,3,4,16 * 0+1,0+4,0+16,12+4 * 1
"RTN","PXKFCPT",49,0)
 ;;.01////^S X=$G(
"RTN","PXKFCPT",50,0)
 ;;.02////^S X=$G(
"RTN","PXKFCPT",51,0)
 ;;.03////^S X=$G(
"RTN","PXKFCPT",52,0)
 ;;OPTION * .04////^S X=$G( * .04///^S X=$G(
"RTN","PXKFCPT",53,0)
 ;;.05////^S X=$G(
"RTN","PXKFCPT",54,0)
 ;;
"RTN","PXKFCPT",55,0)
 ;;.07///^S X=$G(
"RTN","PXKFCPT",56,0)
 ;;
"RTN","PXKFCPT",57,0)
 ;;.09////^S X=$G(
"RTN","PXKFCPT",58,0)
 ;;.1////^S X=$G(
"RTN","PXKFCPT",59,0)
 ;;.11////^S X=$G(
"RTN","PXKFCPT",60,0)
 ;;.12////^S X=$G(
"RTN","PXKFCPT",61,0)
 ;;.13////^S X=$G(
"RTN","PXKFCPT",62,0)
 ;;.14////^S X=$G(
"RTN","PXKFCPT",63,0)
 ;;.15////^S X=$G(
"RTN","PXKFCPT",64,0)
 ;;.16////^S X=$G(
"RTN","PXKFCPT",65,0)
 ;;.17////^S X=$G(
"RTN","PXKFCPT",66,0)
 ;;
"RTN","PXKFCPT",67,0)
 ;;.19////^S X=$G(
"RTN","PXKFCPT",68,0)
 ;;.2////^S X=$G(
"RTN","PXKFCPT",69,0)
1 ;;
"RTN","PXKFCPT",70,0)
 ;;.01///^S X=$G(
"RTN","PXKFCPT",71,0)
12 ;;
"RTN","PXKFCPT",72,0)
 ;;1201////^S X=$G(
"RTN","PXKFCPT",73,0)
 ;;1202////^S X=$G(
"RTN","PXKFCPT",74,0)
 ;;
"RTN","PXKFCPT",75,0)
 ;;1204////^S X=$G(
"RTN","PXKFCPT",76,0)
801 ;;
"RTN","PXKFCPT",77,0)
 ;;80101///^S X=1;
"RTN","PXKFCPT",78,0)
 ;;80102///^S X=$G(PXKAUDIT);
"RTN","PXKFCPT",79,0)
802 ;;
"RTN","PXKFCPT",80,0)
 ;;OPTION * 80201////^S X=$G( * 80201///^S X=$G(
"RTN","PXKFCPT",81,0)
811 ;;
"RTN","PXKFCPT",82,0)
 ;;81101///^S X=$G(
"RTN","PXKFCPT",83,0)
812 ;;
"RTN","PXKFCPT",84,0)
 ;;81201///^S X=$G(
"RTN","PXKFCPT",85,0)
 ;;81202////^S X=$G(
"RTN","PXKFCPT",86,0)
 ;;81203////^S X=$G(
"RTN","PXKFVST")
0^17^B10911741^B9521492
"RTN","PXKFVST",1,0)
PXKFVST ;ISL/JVS - Fields for VISIT file ;7/29/96
"RTN","PXKFVST",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,56,111,130,124,164**;Aug 12, 1996
"RTN","PXKFVST",3,0)
 ;
"RTN","PXKFVST",4,0)
 ;  Adding or Editing of data in a particular field can be controlled
"RTN","PXKFVST",5,0)
 ;by adding a ~ as a delimiter and the letters A and/or E to the
"RTN","PXKFVST",6,0)
 ;end of the line of text which represents what could be added
"RTN","PXKFVST",7,0)
 ;to the DR string in a DIE call.
"RTN","PXKFVST",8,0)
 ; 1. If none or all three(~AE) of these characters are added then
"RTN","PXKFVST",9,0)
 ;    the data in this field can be either added or edited.
"RTN","PXKFVST",10,0)
 ; 2. If only the ~ is added then the data in this field can be
"RTN","PXKFVST",11,0)
 ;    neither added or edited.
"RTN","PXKFVST",12,0)
 ; 3. IF only the ~A is added then the data can only be added to
"RTN","PXKFVST",13,0)
 ;    the file for this field but not edited.
"RTN","PXKFVST",14,0)
 ; 4. If only the ~E is added the data can only be edited in
"RTN","PXKFVST",15,0)
 ;    this file for this field. (not a likely possibility)
"RTN","PXKFVST",16,0)
 ;
"RTN","PXKFVST",17,0)
 ; The word "OPTION" in front of the line of text below tells the 
"RTN","PXKFVST",18,0)
 ;software to determine,based on the data, the appropriateness
"RTN","PXKFVST",19,0)
 ;of using either a "///" or "////" stuff in a DIE call.
"RTN","PXKFVST",20,0)
 ;
"RTN","PXKFVST",21,0)
 ; The information on line tag 0 $P(,," * ",1) are the piece numbers
"RTN","PXKFVST",22,0)
 ;of the fields on the zero node that are required by the data
"RTN","PXKFVST",23,0)
 ;dictionary and are checked for to determine if enough data is present
"RTN","PXKFVST",24,0)
 ;to proceed without any errors. $P(,," * ",2) are the nodes and
"RTN","PXKFVST",25,0)
 ;piece numbers of the fields used to determine duplicates in the
"RTN","PXKFVST",26,0)
 ;file (node+piece (eg. 12+4)). $P(,," * ",3) is a flag use to
"RTN","PXKFVST",27,0)
 ;determine if duplicates are allowed in this visit file. 
"RTN","PXKFVST",28,0)
 ;If it is set to 0 then no duplicate checks will occur. If it is
"RTN","PXKFVST",29,0)
 ;set to 1 then the file will be checked for duplicates based on
"RTN","PXKFVST",30,0)
 ;the information in $P 2.
"RTN","PXKFVST",31,0)
 ;
"RTN","PXKFVST",32,0)
 ; The following is the file's global name.  Each global must have a
"RTN","PXKFVST",33,0)
 ;unique name and can not have any subscripts as part of the global root.
"RTN","PXKFVST",34,0)
GLOBAL ;;^AUPNVSIT
"RTN","PXKFVST",35,0)
 ;
"RTN","PXKFVST",36,0)
EN1 ;
"RTN","PXKFVST",37,0)
 S PXKER=""
"RTN","PXKFVST",38,0)
 S PXKER=$P($T(@PXKNOD+PXKPCE),";;",2) Q
"RTN","PXKFVST",39,0)
EN2 ;
"RTN","PXKFVST",40,0)
 S PXKFD=""
"RTN","PXKFVST",41,0)
 S PXKFD=$P($T(@PXKNOD+PXKPCE),";;",2) D
"RTN","PXKFVST",42,0)
 .I PXKFD="" S PXKPCE=PXKPCE+1 D EN2
"RTN","PXKFVST",43,0)
 Q
"RTN","PXKFVST",44,0)
ADD ;Add an entry to the file
"RTN","PXKFVST",45,0)
 Q
"RTN","PXKFVST",46,0)
0 ;;1,3,5,7,8,22 *  * 0
"RTN","PXKFVST",47,0)
 ;;.01///^S X=$G(~
"RTN","PXKFVST",48,0)
 ;;.02///^S X=$G(~
"RTN","PXKFVST",49,0)
 ;;.03///^S X=$G(~
"RTN","PXKFVST",50,0)
 ;;
"RTN","PXKFVST",51,0)
 ;;.05////^S X=$G(~
"RTN","PXKFVST",52,0)
 ;;.06////^S X=$G(~
"RTN","PXKFVST",53,0)
 ;;.07///^S X=$G(~
"RTN","PXKFVST",54,0)
 ;;.08////^S X=$G(~
"RTN","PXKFVST",55,0)
 ;;.09///^S X=$G(~
"RTN","PXKFVST",56,0)
 ;;
"RTN","PXKFVST",57,0)
 ;;.11///^S X=$G(~
"RTN","PXKFVST",58,0)
 ;;.12////^S X=$G(~
"RTN","PXKFVST",59,0)
 ;;.13///^S X=$G(~
"RTN","PXKFVST",60,0)
 ;;
"RTN","PXKFVST",61,0)
 ;;
"RTN","PXKFVST",62,0)
 ;;
"RTN","PXKFVST",63,0)
 ;;
"RTN","PXKFVST",64,0)
 ;;.18///^S X=$G(~
"RTN","PXKFVST",65,0)
 ;;
"RTN","PXKFVST",66,0)
 ;;
"RTN","PXKFVST",67,0)
 ;;.21////^S X=$G(~
"RTN","PXKFVST",68,0)
 ;;.22////^S X=$G(~
"RTN","PXKFVST",69,0)
 ;;.23////^S X=$G(~
"RTN","PXKFVST",70,0)
 ;;.24////^S X=$G(~
"RTN","PXKFVST",71,0)
 ;;
"RTN","PXKFVST",72,0)
 ;;.26////^S X=$G(~
"RTN","PXKFVST",73,0)
21 ;;
"RTN","PXKFVST",74,0)
 ;;2101///^S X=$G(~
"RTN","PXKFVST",75,0)
800 ;;
"RTN","PXKFVST",76,0)
 ;;80001///^S X=$G(~
"RTN","PXKFVST",77,0)
 ;;80002///^S X=$G(~
"RTN","PXKFVST",78,0)
 ;;80003///^S X=$G(~
"RTN","PXKFVST",79,0)
 ;;80004///^S X=$G(~
"RTN","PXKFVST",80,0)
 ;;80005///^S X=$G(~ ;added 6/17/98 for MST enhancement
"RTN","PXKFVST",81,0)
 ;;80006///^S X=$G(~ ;PX*1*111 - added for HNC enhancement
"RTN","PXKFVST",82,0)
 ;;80007///^S X=$G(~ ;PX*1*130
"RTN","PXKFVST",83,0)
812 ;;
"RTN","PXKFVST",84,0)
 ;;81201///^S X=$G(
"RTN","PXKFVST",85,0)
 ;;81202////^S X=$G(
"RTN","PXKFVST",86,0)
 ;;81203////^S X=$G(
"RTN","PXKFVST",87,0)
 ;
"RTN","PXKFVST",88,0)
UPD ;Up date visit file using visit tracking
"RTN","PXKFVST",89,0)
 ;--new VSIT to make sure that none are left around after call
"RTN","PXKFVST",90,0)
 N PXTMPVST
"RTN","PXKFVST",91,0)
 S PXTMPVST=VSIT("IEN")
"RTN","PXKFVST",92,0)
 N VSIT
"RTN","PXKFVST",93,0)
 S VSIT("IEN")=PXTMPVST
"RTN","PXKFVST",94,0)
 I $G(PXKAV(0,8))]"" D
"RTN","PXKFVST",95,0)
 .I PXKAV(0,8)="@" S VSIT("DSS")="@"
"RTN","PXKFVST",96,0)
 .E  D
"RTN","PXKFVST",97,0)
 ..K ^UTILITY("DIQ1",$J)
"RTN","PXKFVST",98,0)
 ..S DIC=40.7,DA=+$G(PXKAV(0,8)),DIQ(0)="I",DR=1 D EN^DIQ1
"RTN","PXKFVST",99,0)
 ..S VSIT("DSS")=$G(^UTILITY("DIQ1",$J,40.7,DA,1,"I"))
"RTN","PXKFVST",100,0)
 K ^UTILITY("DIQ1",$J),DIQ,DR,DA,DIC
"RTN","PXKFVST",101,0)
 I $G(PXKAV(0,6))]"" S VSIT("INS")=$G(PXKAV(0,6))
"RTN","PXKFVST",102,0)
 I $G(PXKAV(0,18))]"" S VSIT("COD")=$G(PXKAV(0,18))
"RTN","PXKFVST",103,0)
 ;--cannot edit "ELG"
"RTN","PXKFVST",104,0)
 I $G(PXKAV(0,22))]"" S VSIT("LOC")=$G(PXKAV(0,22))
"RTN","PXKFVST",105,0)
 I $G(PXKAV(0,26))]"" S VSIT("ACT")=$G(PXKAV(0,26)) ;PX*1.0*164 Set Patient Account Number reference
"RTN","PXKFVST",106,0)
 ;Classification questions
"RTN","PXKFVST",107,0)
 N PXP,PXV,PXN
"RTN","PXKFVST",108,0)
 ;AO, IR, and EC not applicable if SC answered YES (1)
"RTN","PXKFVST",109,0)
 ;I $G(PXKAV(800,1))=1 F PXP=2:1:4 S PXKAV(800,PXP)="@"
"RTN","PXKFVST",110,0)
 F PXP=1:1:7 D
"RTN","PXKFVST",111,0)
 .S PXV=$G(PXKAV(800,PXP))
"RTN","PXKFVST",112,0)
 .S PXN=$P("SC^AO^IR^EC^MST^HNC^CV","^",PXP)
"RTN","PXKFVST",113,0)
 .I PXV'="" S VSIT(PXN)=PXV
"RTN","PXKFVST",114,0)
 D UPD^VSIT
"RTN","PXKFVST",115,0)
 K VSIT("DSS"),VSIT("COD"),VSIT("SC"),VSIT("AO"),VSIT("IR"),VSIT("EC")
"RTN","PXKFVST",116,0)
 K VSIT("LOC"),VSIT("INS"),VSIT("ELG"),VSIT("MDT")
"RTN","PXKFVST",117,0)
 ;PX*1*111 - added for HNC enhancement
"RTN","PXKFVST",118,0)
 K VSIT("MST"),VSIT("HNC"),VSIT("CV")
"RTN","PXKFVST",119,0)
 Q
"RTN","PXKFVST",120,0)
SPEC ;
"RTN","PXKFVST",121,0)
 Q
"RTN","PXKMAIN")
0^20^B43120971^B42253213
"RTN","PXKMAIN",1,0)
PXKMAIN ;ISL/JVS,ISA/Zoltan - Main Routine for Data Capture ;9/11/98
"RTN","PXKMAIN",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,59,73,88,69,117,130,124,174,164**;Aug 12, 1996
"RTN","PXKMAIN",3,0)
 ;+This routine is responsible for:
"RTN","PXKMAIN",4,0)
 ;+
"RTN","PXKMAIN",5,0)
 ;+LOCAL VARIABLE LIST:
"RTN","PXKMAIN",6,0)
 ;+ PXP59LOC = LOCK name (introduced in patch PX*1.0*59).
"RTN","PXKMAIN",7,0)
 ;+ PXFG     = Stop flag with duplicate of delete
"RTN","PXKMAIN",8,0)
 ;+ PXKAFT   = After node
"RTN","PXKMAIN",9,0)
 ;+ PXKBEF   = Before node
"RTN","PXKMAIN",10,0)
 ;+ PXKAV    = Pieces from the after node
"RTN","PXKMAIN",11,0)
 ;+ PXKBV    = Pieces from the before node
"RTN","PXKMAIN",12,0)
 ;+ PXKERROR = Set when there is an error
"RTN","PXKMAIN",13,0)
 ;+ PXKFGAD  = ADD flag
"RTN","PXKMAIN",14,0)
 ;+ PXKFGED  = EDIT flag
"RTN","PXKMAIN",15,0)
 ;+ PXKFGDE  = DELETE flag
"RTN","PXKMAIN",16,0)
 ;+ PXKSEQ   = Sequence number in PXK tmp global
"RTN","PXKMAIN",17,0)
 ;+ PXKCAT   = Category of entry (CPT,MSR,VST...)
"RTN","PXKMAIN",18,0)
 ;+ PXKREF   = Root of temp global
"RTN","PXKMAIN",19,0)
 ;+ PXKPIEN  = IEN of v file or the visit file
"RTN","PXKMAIN",20,0)
 ;+ PXKREF   = The original reference we are ordering off of
"RTN","PXKMAIN",21,0)
 ;+ PXKRT    = name of the node in the v file
"RTN","PXKMAIN",22,0)
 ;+ PXKRTN   = routine name for the file routine
"RTN","PXKMAIN",23,0)
 ;+ PXKSOR   = the data source for this entry
"RTN","PXKMAIN",24,0)
 ;+ PXKSUB   = the subscript the data is located on the v file
"RTN","PXKMAIN",25,0)
 ;+ PXKVST   = the visit IEN
"RTN","PXKMAIN",26,0)
 ;+ PXKDUZ   = the DUZ of the user
"RTN","PXKMAIN",27,0)
 ;+ *PXKHLR* = A variable set by calling routine so that duplicate
"RTN","PXKMAIN",28,0)
 ;+            PXKERROR messages aren't produced.
"RTN","PXKMAIN",29,0)
 ;
"RTN","PXKMAIN",30,0)
 W !,"This is not an entry point" Q
"RTN","PXKMAIN",31,0)
EN1 ;+Main entry point to read ^TMP("PXK", Global
"RTN","PXKMAIN",32,0)
 ;+ Partial ^TMP Global Structure when called:
"RTN","PXKMAIN",33,0)
 ;+ ^TMP("PXK",$J,"SOR") = Source ien
"RTN","PXKMAIN",34,0)
 ;+
"RTN","PXKMAIN",35,0)
 ;+ ^TMP("PXK",$J,"VST",1,0,"BEFORE") = the 0-node of the visit file
"RTN","PXKMAIN",36,0)
 ;+ ^TMP("PXK",$J,"VST",1,0,"AFTER") = 0-node after changes.
"RTN","PXKMAIN",37,0)
 ;+ ^TMP("PXK",$J,"VST",provider counter,"IEN") = ""
"RTN","PXKMAIN",38,0)
 ;+
"RTN","PXKMAIN",39,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,0,"BEFORE") = ""
"RTN","PXKMAIN",40,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,0,"AFTER") = Provider id^DFN^Visitien^'P' or 'S' for primary/secondary
"RTN","PXKMAIN",41,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,"IEN") = ""
"RTN","PXKMAIN",42,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,"BEFORE") = ""
"RTN","PXKMAIN",43,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,"AFTER") = ^Package ien^Source ien
"RTN","PXKMAIN",44,0)
 ;+
"RTN","PXKMAIN",45,0)
 N PXP59LOC
"RTN","PXKMAIN",46,0)
 D LOCK
"RTN","PXKMAIN",47,0)
 K PXKERROR
"RTN","PXKMAIN",48,0)
 I '$G(PXKDUZ) D
"RTN","PXKMAIN",49,0)
 . I $G(DUZ) S PXKDUZ=DUZ
"RTN","PXKMAIN",50,0)
 . E  S PXKDUZ=.5
"RTN","PXKMAIN",51,0)
 D VST
"RTN","PXKMAIN",52,0)
 I $D(PXP59LOC) D UNLOCK
"RTN","PXKMAIN",53,0)
 Q
"RTN","PXKMAIN",54,0)
VST ;--Check for visit node and get one created or quit.
"RTN","PXKMAIN",55,0)
 I '$G(^TMP("PXK",$J,"VST",1,"IEN")) D
"RTN","PXKMAIN",56,0)
 .D VSIT^PXKVST
"RTN","PXKMAIN",57,0)
 I +$G(^TMP("PXK",$J,"VST",1,"IEN"))=-1 S PXKERROR("VISIT")="Visit Tracking could not get a visit." Q
"RTN","PXKMAIN",58,0)
 I +$G(^TMP("PXK",$J,"VST",1,"IEN"))=-2 S PXKERROR("VISIT")="PCE is not activated in Visit Tracking Parameters and thus cannot create visits." Q
"RTN","PXKMAIN",59,0)
 I +$G(^TMP("PXK",$J,"VST",1,"IEN"))<1 S PXKERROR("VISIT")="Did not get a visit^"_$G(^TMP("PXK",$J,"VST",1,"IEN")) Q
"RTN","PXKMAIN",60,0)
 ;
"RTN","PXKMAIN",61,0)
NEW ;--New variables and set main variables
"RTN","PXKMAIN",62,0)
 N PXKDFN,PXKSOR,PXKVST,PXKSEQ,PXFG,PXKAFT,PXKBEF,PXKAUDIT
"RTN","PXKMAIN",63,0)
 N PXKCAT,PXKER,PXKFGAD,PXKFGED,PXKFGDE,PXKNOD,PXKPCE
"RTN","PXKMAIN",64,0)
 N PXKPIEN,PXKREF,PXKRTN,PXKSORR,PXKSUB,PXKVCAT
"RTN","PXKMAIN",65,0)
 N PXKPTR,PXDFG,PX,PXJJJ,PXKAFT8,PXKAFTR,PXKGN,PXKN,PXKP
"RTN","PXKMAIN",66,0)
 N PXKRRT,PXKVRTN,PXKRT,PXKFVDLM,TMPPX
"RTN","PXKMAIN",67,0)
PRVTYPE ;---DO PROVIDER TYPE--PXKMAIN2
"RTN","PXKMAIN",68,0)
 D PRVTYPE^PXKMAIN2
"RTN","PXKMAIN",69,0)
 ;
"RTN","PXKMAIN",70,0)
SET ;--SET VARIABLES NECESSARY
"RTN","PXKMAIN",71,0)
 ;'DA' should not be defined at this point
"RTN","PXKMAIN",72,0)
 N DA ;PX*1.0*117
"RTN","PXKMAIN",73,0)
 ;
"RTN","PXKMAIN",74,0)
 S PXFG=0,TMPPX="^",PXKLAYGO="",PXDFG=0
"RTN","PXKMAIN",75,0)
SOURCE S PXKSOR=$G(^TMP("PXK",$J,"SOR")) D  Q:$D(PXKERROR("SOURCE"))
"RTN","PXKMAIN",76,0)
 .S PXKCO("SOR")=PXKSOR
"RTN","PXKMAIN",77,0)
 .I $D(PXKSOR)']"" S PXKERROR("SOURCE")="" Q
"RTN","PXKMAIN",78,0)
VISIT S (PXKVST,VSIT("IEN"))=$G(^TMP("PXK",$J,"VST",1,"IEN"))
"RTN","PXKMAIN",79,0)
ORDER ;--$ORDER Through the ^TMP("PXK", global setting variables
"RTN","PXKMAIN",80,0)
 S PXKREF="^TMP(""PXK"",$J)"
"RTN","PXKMAIN",81,0)
CATEG S PXKCAT="" F  S (PXKCAT,PXKVCAT)=$O(@PXKREF@(PXKCAT)) Q:PXKCAT=""  D
"RTN","PXKMAIN",82,0)
 .I PXKCAT="VST" S PXKVCAT="SIT"
"RTN","PXKMAIN",83,0)
 .S PXKRTN="PXKF"_PXKCAT
"RTN","PXKMAIN",84,0)
 .S X=PXKRTN X ^%ZOSF("TEST") Q:'$T
"RTN","PXKMAIN",85,0)
SEQUE .S PXKSEQ=0 F  S PXKSEQ=$O(@PXKREF@(PXKCAT,PXKSEQ)) K PXKAV,PXKBV S PXFG=0 Q:'PXKSEQ  D
"RTN","PXKMAIN",86,0)
 ..S PXKPIEN=$G(@PXKREF@(PXKCAT,PXKSEQ,"IEN")),(PXKFGAD,PXKFGDE,PXKFGED,PXDFG)=0
"RTN","PXKMAIN",87,0)
SUBSCR ..S PXKSUB="" F  S PXKSUB=$O(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB)) Q:PXKSUB["IEN"  Q:PXFG=1  Q:PXDFG=1  D
"RTN","PXKMAIN",88,0)
AFTER ...S PXKAFT(PXKSUB)=$G(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,"AFTER"))
"RTN","PXKMAIN",89,0)
BEFORE ...S PXKBEF(PXKSUB)=$G(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,"BEFORE"))
"RTN","PXKMAIN",90,0)
 ...I PXKCAT="CPT",PXKSUB=1 D SUBSCR^PXKMOD
"RTN","PXKMAIN",91,0)
 ...D LOOP^PXKMAIN1 D ERROR^PXKMAIN1 S PXDFG=0 I $G(PXKAV(0,1))["@"!('$D(PXKAV(0,1))) S PXKAFT(PXKSUB)="" K PXKAV(0) S PXDFG=1
"RTN","PXKMAIN",92,0)
 ..Q:PXFG=1
"RTN","PXKMAIN",93,0)
 ..I $D(PXKAV),'$D(PXKBV) S PXKSORR=PXKSOR_"-A "_PXKDUZ,PXKFGAD=1 I PXKCAT["VST" S PXKFGAD=0
"RTN","PXKMAIN",94,0)
 ..I '$D(PXKAV),$D(PXKBV) S PXKFGDE=1,PXKFVDLM="" D
"RTN","PXKMAIN",95,0)
 ...S PXKRT=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_PXKPIEN_")" I $D(@PXKRT) D DELETE^PXKMAIN1,EN1^PXKMASC S PXFG=1 K PXKRT Q
"RTN","PXKMAIN",96,0)
 ..I 'PXKFGAD,'PXKFGDE D
"RTN","PXKMAIN",97,0)
 ...I PXKCAT="VST" D CQDEL
"RTN","PXKMAIN",98,0)
 ...D CLEAN^PXKMAIN1
"RTN","PXKMAIN",99,0)
 ...I $D(PXKAV) S PXKSORR=PXKSOR_"-E "_PXKDUZ,PXKFGED=1 I PXKCAT="VST",'$D(PXKBV),$D(PXKVST) S PXKFGED=0
"RTN","PXKMAIN",100,0)
 ..I 'PXKFGAD,'PXKFGDE,'PXKFGED,PXKCAT["VST" D EN1^PXKMASC
"RTN","PXKMAIN",101,0)
 ..I PXKFGAD=1 D  Q:PXFG
"RTN","PXKMAIN",102,0)
 ...D ERROR^PXKMAIN1
"RTN","PXKMAIN",103,0)
 ...I $D(PXKERROR(PXKCAT,PXKSEQ)) S PXFG=1
"RTN","PXKMAIN",104,0)
 ...D:'PXFG DUP^PXKMAIN1
"RTN","PXKMAIN",105,0)
 ...I PXFG=1 D  Q
"RTN","PXKMAIN",106,0)
 ....Q:PXKCAT'="CPT"
"RTN","PXKMAIN",107,0)
 ....I $G(@PXKREF@(PXKCAT,PXKSEQ,"IEN"))]"" D REMOVE^PXCEVFIL(@PXKREF@(PXKCAT,PXKSEQ,"IEN"))
"RTN","PXKMAIN",108,0)
 ...D:'PXKPIEN FILE^PXKMAIN1
"RTN","PXKMAIN",109,0)
 ...S:'$G(DA) DA=PXKPIEN
"RTN","PXKMAIN",110,0)
 ...D AUD2^PXKMAIN1,DRDIE^PXKMAIN1,EN1^PXKMASC
"RTN","PXKMAIN",111,0)
 ..I PXKFGED=1,PXKCAT'="VST" S PXKRT=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_PXKPIEN_")" Q:'$D(@PXKRT)  S DA=PXKPIEN D DUP^PXKMAIN1 Q:PXFG=1  D AUD12^PXKMAIN1,DRDIE^PXKMAIN1,EN1^PXKMASC
"RTN","PXKMAIN",112,0)
 ..I PXKFGED=1,PXKCAT="VST" S PXKRT=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_PXKPIEN_")" Q:'$D(@PXKRT)  S DA=PXKPIEN D DUP^PXKMAIN1 Q:PXFG=1  D DRDIE^PXKMAIN1,EN1^PXKMASC
"RTN","PXKMAIN",113,0)
 ..D SPEC^PXKMAIN2
"RTN","PXKMAIN",114,0)
 ..K PXKAFT,PXKBEF
"RTN","PXKMAIN",115,0)
 I $D(^TMP("PXKSAVE",$J)) D RECALL^PXKMAIN2
"RTN","PXKMAIN",116,0)
 D EXIT
"RTN","PXKMAIN",117,0)
 Q
"RTN","PXKMAIN",118,0)
EXIT ;--EXIT
"RTN","PXKMAIN",119,0)
 I $D(PXKFVDLM) D MODIFIED^VSIT(PXKVST)
"RTN","PXKMAIN",120,0)
 K PXKPXD,TMPPX
"RTN","PXKMAIN",121,0)
 K DA,DR,PXKI,PXKJ,PXKLAYGO,PXKDUZ,PXKAFT8,PXKAFTR,VSIT("IEN") Q
"RTN","PXKMAIN",122,0)
EVENT ;--ENTRY POINT TO POST EXECUTE PCE'S EVENT
"RTN","PXKMAIN",123,0)
 ;Setting the variable PXKNOEVT=1 will stop the event from being
"RTN","PXKMAIN",124,0)
 ;fired off whenever any data is sent into PCE
"RTN","PXKMAIN",125,0)
 ;
"RTN","PXKMAIN",126,0)
 ;PX*1*124  AUTO-POPULATE THE ENCOUNTER SC/EI BASED ON THE ENCOUNTER DX'S
"RTN","PXKMAIN",127,0)
 ;PX*1.0*164 Relocate the PXCECCLS call
"RTN","PXKMAIN",128,0)
 I $D(^TMP("PXKCO",$J)) D
"RTN","PXKMAIN",129,0)
 . S PXKVVST=+$O(^TMP("PXKCO",$J,0))
"RTN","PXKMAIN",130,0)
 . I $G(PXKVVST) D VST^PXCECCLS(PXKVVST) ;PX*1.0*174
"RTN","PXKMAIN",131,0)
 ;
"RTN","PXKMAIN",132,0)
 I $G(PXKNOEVT) K ^TMP("PXKCO",$J) Q
"RTN","PXKMAIN",133,0)
 N PXP59LOC
"RTN","PXKMAIN",134,0)
 D LOCK
"RTN","PXKMAIN",135,0)
 D EVENT^PXKMASC
"RTN","PXKMAIN",136,0)
 I $D(PXP59LOC) D UNLOCK
"RTN","PXKMAIN",137,0)
 Q
"RTN","PXKMAIN",138,0)
LOCK ; Lock (results in PXP59LOC)--Patch PX*1.0*59.
"RTN","PXKMAIN",139,0)
 N PX0,PXWHO,PXWHERE,PXWHEN,PXEXIT,PXVISIT
"RTN","PXKMAIN",140,0)
 S PXEXIT=1,(PXWHO,PXWHERE,PXWHEN)=""
"RTN","PXKMAIN",141,0)
 ;First case: new visit data being saved.
"RTN","PXKMAIN",142,0)
 I 11[$D(^TMP("PXK",$J,"VST",1,0,"AFTER")) D
"RTN","PXKMAIN",143,0)
 . S PX0=^TMP("PXK",$J,"VST",1,0,"AFTER")
"RTN","PXKMAIN",144,0)
 . D L2
"RTN","PXKMAIN",145,0)
 ;Second case: use existing visit data.
"RTN","PXKMAIN",146,0)
 I 11[$D(^TMP("PXK",$J,"VST",1,"IEN")) D
"RTN","PXKMAIN",147,0)
 . S PXVISIT=+^TMP("PXK",$J,"VST",1,"IEN")
"RTN","PXKMAIN",148,0)
 . Q:'PXVISIT
"RTN","PXKMAIN",149,0)
 . Q:$D(^AUPNVSIT(PXVISIT,0))[0
"RTN","PXKMAIN",150,0)
 . S PX0=^AUPNVSIT(PXVISIT,0)
"RTN","PXKMAIN",151,0)
 . D L2
"RTN","PXKMAIN",152,0)
 ;Third case: Uses "PXKCO" instead of "PXK".
"RTN","PXKMAIN",153,0)
 I PXEXIT,$D(^TMP("PXKCO",$J)) D
"RTN","PXKMAIN",154,0)
 . S PXVISIT=$O(^TMP("PXKCO",$J,0))
"RTN","PXKMAIN",155,0)
 . Q:'PXVISIT
"RTN","PXKMAIN",156,0)
 . S PX0=$G(^TMP("PXKCO",$J,PXVISIT,"VST",PXVISIT,0,"AFTER"))
"RTN","PXKMAIN",157,0)
 . Q:PX0=""
"RTN","PXKMAIN",158,0)
 . D L2
"RTN","PXKMAIN",159,0)
 ;Fourth case: Uses "PXKENC" instead of "PXK".
"RTN","PXKMAIN",160,0)
 I PXEXIT,$D(^TMP("PXKENC",$J)) D
"RTN","PXKMAIN",161,0)
 . S PXVISIT=$O(^TMP("PXKENC",$J,0))
"RTN","PXKMAIN",162,0)
 . Q:'PXVISIT
"RTN","PXKMAIN",163,0)
 . S PX0=$G(^TMP("PXKENC",$J,PXVISIT,"VST",PXVISIT,0)) ; Look at ^TMP("PXKENC",$J
"RTN","PXKMAIN",164,0)
 . Q:PX0=""
"RTN","PXKMAIN",165,0)
 . D L2
"RTN","PXKMAIN",166,0)
 I PXEXIT Q  ; Unable to obtain non-null subscripts.
"RTN","PXKMAIN",167,0)
 S PXP59LOC=$NA(^PXLOCK(PXWHO,PXWHERE,PXWHEN))
"RTN","PXKMAIN",168,0)
 L +@PXP59LOC:300
"RTN","PXKMAIN",169,0)
 E  K PXP59LOC ; Lock was unsuccessful.
"RTN","PXKMAIN",170,0)
 Q
"RTN","PXKMAIN",171,0)
L2 ; Get values from visit 0 node (PX0).
"RTN","PXKMAIN",172,0)
 I 'PXWHO S PXWHO=$P(PX0,U,5)
"RTN","PXKMAIN",173,0)
 I 'PXWHEN S PXWHEN=$P(PX0,U,1)
"RTN","PXKMAIN",174,0)
 I 'PXWHERE S PXWHERE=+$P(PX0,U,22)
"RTN","PXKMAIN",175,0)
 I PXWHO,PXWHEN S PXEXIT=0
"RTN","PXKMAIN",176,0)
 Q
"RTN","PXKMAIN",177,0)
UNLOCK ; Unlock (use info in PXP59LOC)--Patch PX*1.0*59.
"RTN","PXKMAIN",178,0)
 L -@PXP59LOC
"RTN","PXKMAIN",179,0)
 Q
"RTN","PXKMAIN",180,0)
 ;
"RTN","PXKMAIN",181,0)
CQDEL ;Classification question deletion check
"RTN","PXKMAIN",182,0)
 I PXKCAT'="VST" Q
"RTN","PXKMAIN",183,0)
 S PXJ="" F  S PXJ=$O(PXKBV(800,PXJ)) Q:'PXJ  I PXKBV(800,PXJ)'="" I '$D(PXKAV(800,PXJ)) S PXKAV(800,PXJ)="@"
"RTN","PXKMAIN",184,0)
 K PXJ Q
"RTN","PXKMASC")
0^21^B46966195^B16811621
"RTN","PXKMASC",1,0)
PXKMASC ;ISL/JVS - Build and Pass to auto-check-out ;7/25/96  08:53
"RTN","PXKMASC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,41,73,164**;Aug 12, 1996
"RTN","PXKMASC",3,0)
 ; Builds and passes data to MAS for Auto-checkout
"RTN","PXKMASC",4,0)
 ;Variable List
"RTN","PXKMASC",5,0)
 ;
"RTN","PXKMASC",6,0)
EN1 ;Build the Temp global for MAS AND THE WORLD.
"RTN","PXKMASC",7,0)
 ;S PXKGN=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_PXKPIEN_","
"RTN","PXKMASC",8,0)
 ;^TMP("PXKCO",$J,<VISIT IEN>,"PRV",<PROVIDER ien>,0,"AFTER")=DATA
"RTN","PXKMASC",9,0)
 ;  ""                 ""                     ""    ,"BEFORE")=DATA
"RTN","PXKMASC",10,0)
 N PXKGG,PXKSUB,PXKMOD,PXKSEQ,PXKOE ;PX*1.0*164
"RTN","PXKMASC",11,0)
 Q:PXKSOR=$O(^PX(839.7,"B","PIMS CHECK-OUT",0))
"RTN","PXKMASC",12,0)
 S PXKGG=0
"RTN","PXKMASC",13,0)
 S PXKSUB=""
"RTN","PXKMASC",14,0)
 F  S PXKSUB=$O(PXKAFT(PXKSUB)) Q:PXKSUB=""  D
"RTN","PXKMASC",15,0)
 . I PXKSUB'=1 D PXGO Q
"RTN","PXKMASC",16,0)
 . S PXKSEQ=""
"RTN","PXKMASC",17,0)
 . F  S PXKSEQ=$O(PXKAFT(PXKSUB,PXKSEQ)) Q:PXKSEQ=""  D
"RTN","PXKMASC",18,0)
 .. S PXKMOD=PXKAFT(PXKSUB,PXKSEQ)
"RTN","PXKMASC",19,0)
 .. D PXGO
"RTN","PXKMASC",20,0)
 Q
"RTN","PXKMASC",21,0)
PXGO ;
"RTN","PXKMASC",22,0)
 S PXKGG=0
"RTN","PXKMASC",23,0)
 S PXKGN=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_PXKPIEN_","
"RTN","PXKMASC",24,0)
 I PXKSUB'=1 D
"RTN","PXKMASC",25,0)
 . I $D(^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,PXKSUB,"BEFORE")) S PXKGG=1
"RTN","PXKMASC",26,0)
 . S PXKGN=PXKGN_PXKSUB_")"
"RTN","PXKMASC",27,0)
 I PXKSUB=1 D
"RTN","PXKMASC",28,0)
 . I PXKMOD]"",$D(^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,PXKSUB,"BEFORE",PXKMOD)) S PXKGG=1
"RTN","PXKMASC",29,0)
 . S PXKGN=PXKGN_PXKSUB_","_PXKSEQ_","_0_")"
"RTN","PXKMASC",30,0)
 D @$S(PXKGG=1:"DUP",1:"ORG")
"RTN","PXKMASC",31,0)
 D DEL
"RTN","PXKMASC",32,0)
 D PTR
"RTN","PXKMASC",33,0)
 Q
"RTN","PXKMASC",34,0)
 ;
"RTN","PXKMASC",35,0)
DUP ;Overwrite if a duplicate just the After Node
"RTN","PXKMASC",36,0)
 I PXKSUB'=1 D  Q
"RTN","PXKMASC",37,0)
 . S ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,PXKSUB,"AFTER")=$G(@PXKGN)
"RTN","PXKMASC",38,0)
 I $G(@PXKGN)]"" D
"RTN","PXKMASC",39,0)
 . S ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,PXKSUB,"AFTER",$G(@PXKGN))=""
"RTN","PXKMASC",40,0)
 Q
"RTN","PXKMASC",41,0)
 ;
"RTN","PXKMASC",42,0)
ORG ;If original copy both
"RTN","PXKMASC",43,0)
 I PXKSUB'=1 D  Q
"RTN","PXKMASC",44,0)
 . S ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,PXKSUB,"AFTER")=$G(@PXKGN)
"RTN","PXKMASC",45,0)
 . S ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,PXKSUB,"BEFORE")=$G(PXKBEF(PXKSUB))
"RTN","PXKMASC",46,0)
 I $G(@PXKGN)]"" D
"RTN","PXKMASC",47,0)
 . S ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,PXKSUB,"AFTER",$G(@PXKGN))=""
"RTN","PXKMASC",48,0)
 I $G(PXKBEF(PXKSUB,PXKSEQ))]"" D
"RTN","PXKMASC",49,0)
 . S ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,PXKSUB,"BEFORE",PXKBEF(PXKSUB,PXKSEQ))=""
"RTN","PXKMASC",50,0)
 Q
"RTN","PXKMASC",51,0)
 ;
"RTN","PXKMASC",52,0)
DEL ;DELETE IF BOTH ARE NULL
"RTN","PXKMASC",53,0)
 I '$D(^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,0)) D
"RTN","PXKMASC",54,0)
 .K ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN)
"RTN","PXKMASC",55,0)
 I $G(^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,0,"AFTER"))']"" D
"RTN","PXKMASC",56,0)
 .I $G(^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,0,"BEFORE"))']"" D
"RTN","PXKMASC",57,0)
 ..K ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN)
"RTN","PXKMASC",58,0)
 I $P($G(^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,0,"AFTER")),"^",1)="@" D
"RTN","PXKMASC",59,0)
 .K ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN)
"RTN","PXKMASC",60,0)
 Q
"RTN","PXKMASC",61,0)
 ;
"RTN","PXKMASC",62,0)
PTR ; Set the Provider Narrative equal to the pointer in the files etc.
"RTN","PXKMASC",63,0)
 N PXJ,PXJJ,PXJJJ,PXKR
"RTN","PXKMASC",64,0)
 I $D(PXKPTR) S PXJ="" F  S PXJ=$O(PXKPTR(PXJ)) Q:PXJ=""  D
"RTN","PXKMASC",65,0)
 .S PXJJ=""  F  S PXJJ=$O(PXKPTR(PXJ,PXJJ)) Q:PXJJ=""  D
"RTN","PXKMASC",66,0)
 ..S PXJJJ="" F  S PXJJJ=$O(PXKPTR(PXJ,PXJJ,PXJJJ)) Q:PXJJJ=""  D
"RTN","PXKMASC",67,0)
 ...S PXKR=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_PXJ_","_PXJJ_")"
"RTN","PXKMASC",68,0)
 ...I $D(^TMP("PXKCO",$J,PXKVST,PXKCAT,PXJ,PXJJ,"AFTER")) D
"RTN","PXKMASC",69,0)
 ....S $P(^TMP("PXKCO",$J,PXKVST,PXKCAT,PXJ,PXJJ,"AFTER"),"^",PXJJJ)=$P($G(@PXKR),"^",PXJJJ)
"RTN","PXKMASC",70,0)
 Q
"RTN","PXKMASC",71,0)
 ;
"RTN","PXKMASC",72,0)
EVENT ; EVENT TO PRESENT THE DATA TO OTHER USERS
"RTN","PXKMASC",73,0)
 Q:'$D(PXKCO("SOR"))
"RTN","PXKMASC",74,0)
 I '$D(^TMP("PXKCO",$J)) Q
"RTN","PXKMASC",75,0)
 S PXKVVST=+$O(^TMP("PXKCO",$J,0))
"RTN","PXKMASC",76,0)
 S ^TMP("PXKCO",$J,PXKVVST,"VST",PXKVVST,0,"AFTER")=$G(^AUPNVSIT(PXKVVST,0))
"RTN","PXKMASC",77,0)
 S ^TMP("PXKCO",$J,PXKVVST,"VST",PXKVVST,21,"AFTER")=$G(^AUPNVSIT(PXKVVST,21))
"RTN","PXKMASC",78,0)
 S ^TMP("PXKCO",$J,PXKVVST,"VST",PXKVVST,800,"AFTER")=$G(^AUPNVSIT(PXKVVST,800))
"RTN","PXKMASC",79,0)
 S ^TMP("PXKCO",$J,PXKVVST,"VST",PXKVVST,811,"AFTER")=$G(^AUPNVSIT(PXKVVST,811))
"RTN","PXKMASC",80,0)
 S ^TMP("PXKCO",$J,PXKVVST,"VST",PXKVVST,150,"AFTER")=$G(^AUPNVSIT(PXKVVST,150))
"RTN","PXKMASC",81,0)
 S ^TMP("PXKCO",$J,PXKVVST,"SOR",PXKCO("SOR"),0,"AFTER")=$G(^PX(839.7,PXKCO("SOR"),0))
"RTN","PXKMASC",82,0)
 S ^TMP("PXKCO",$J,PXKVVST,"SOR",PXKCO("SOR"),0,"BEFORE")=$G(^PX(839.7,PXKCO("SOR"),0))
"RTN","PXKMASC",83,0)
 S PXKOE=$O(^SCE("AVSIT",PXKVVST,"")) I PXKOE]"" S ^TMP("PXKCO",$J,PXKVVST,"OE",PXKOE,0,"BEFORE")=$G(^SCE(PXKOE,0))
"RTN","PXKMASC",84,0)
 S X=+$O(^ORD(101,"B","PXK VISIT DATA EVENT",0))_";ORD(101,"
"RTN","PXKMASC",85,0)
 ;D ENCEVENT^PXKENC(PXKVVST) ;makes the ^TMP("PXKENC",$J, array
"RTN","PXKMASC",86,0)
 D COEVENT^PXKENC(PXKVVST) ;finishes the ^TMP("PXKCO",$J array
"RTN","PXKMASC",87,0)
 D EN^XQOR
"RTN","PXKMASC",88,0)
 D FINAL^SCDXHLDR(PXKVVST,$G(PXKVST))
"RTN","PXKMASC",89,0)
UPD ;UP DATE VISIT FILE
"RTN","PXKMASC",90,0)
 ;--REMOVE CHECK OUT DATE TIME
"RTN","PXKMASC",91,0)
 N PXSWINFO S PXSWINFO=$$SWSTAT^IBBAPI()
"RTN","PXKMASC",92,0)
 N VSIT
"RTN","PXKMASC",93,0)
 I $D(PXKVVST),$D(^AUPNVSIT(PXKVVST)) S VSIT("IEN")=PXKVVST,VSIT("COD")="@" D CHKACCT D UPD^VSIT ;PX*1.0*164
"RTN","PXKMASC",94,0)
 I +PXSWINFO D
"RTN","PXKMASC",95,0)
 .I $P($G(^AUPNVSIT(PXKVVST,0)),"^",1)<$P(PXSWINFO,"^",2),$P($G(^TMP("PXKCO",$J,PXKVVST,"VST",PXKVVST,0,"BEFORE")),"^",1)<$P(PXSWINFO,"^",2) Q  ;Check visit for PFSS Activation date
"RTN","PXKMASC",96,0)
 .S ^TMP("PXKCO",$J,PXKVVST,"VST",PXKVVST,0,"AFTER")=$G(^AUPNVSIT(PXKVVST,0))
"RTN","PXKMASC",97,0)
 .S X=+$O(^ORD(101,"B","PX IBB CACHE FILING EVENT",0))_";ORD(101,"
"RTN","PXKMASC",98,0)
 .D EN^XQOR
"RTN","PXKMASC",99,0)
 K ^TMP("PXKCO",$J),PXKVVST,PXKCO,VSIT
"RTN","PXKMASC",100,0)
 K ^TMP("PXKENC",$J)
"RTN","PXKMASC",101,0)
 Q
"RTN","PXKMASC",102,0)
CHKACCT ;
"RTN","PXKMASC",103,0)
 N PXSWINFO S PXSWINFO=$$SWSTAT^IBBAPI()
"RTN","PXKMASC",104,0)
 N OUTENC,PXPV1,PXPV2,SEQ,PXCPT0,PXPRV0,PXOERR,PXCPT,PXORREF,PXPROS
"RTN","PXKMASC",105,0)
 Q:'+PXSWINFO
"RTN","PXKMASC",106,0)
 Q:$P($G(^AUPNVSIT(PXKVVST,0)),"^",1)<$P(PXSWINFO,"^",2)  ;Check visit for PFSS Activation date
"RTN","PXKMASC",107,0)
 Q:$P($G(^AUPNVSIT(PXKVVST,0)),"^",7)="E"  ;NO ACCOUNT # FOR HISTORIC ENCOUNTERS
"RTN","PXKMASC",108,0)
 Q:$P($G(^AUPNVSIT(PXKVVST,0)),"^",7)="H"  ;NO ACCOUNT # FOR HOSPTIALIZATION ENCOUNTERS
"RTN","PXKMASC",109,0)
 Q:$P($G(^AUPNVSIT(PXKVVST,812)),"^",2)=$$PKG2IEN^VSIT("RMPR")  ;NO ACCOUNT # FOR PROSTHETICS
"RTN","PXKMASC",110,0)
 ;Check for existing ACT
"RTN","PXKMASC",111,0)
 S VSIT("ACT")=$P($G(^AUPNVSIT(PXKVVST,0)),"^",26) Q:VSIT("ACT")
"RTN","PXKMASC",112,0)
 ;Check Scheduling
"RTN","PXKMASC",113,0)
 I $T(GETARN^SDPFSS2)'="" S VSIT("ACT")=$$GETARN^SDPFSS2($P(^AUPNVSIT(PXKVVST,0),"^",1),$P(^AUPNVSIT(PXKVVST,0),"^",5),$P(^AUPNVSIT(PXKVVST,0),"^",22)) Q:VSIT("ACT")]0  S VSIT("ACT")=""
"RTN","PXKMASC",114,0)
 ;Check CPT codes for Lab 108, call ORWPFSS,
"RTN","PXKMASC",115,0)
 I $E($T(ORACTREF^ORWPFSS),9)="(" S PXOERR=1 D  Q:PXOERR
"RTN","PXKMASC",116,0)
 .I '$D(^TMP("PXKCO",$J,PXKVVST,"CPT")) S PXOERR=0 Q  ;No CPT codes, so Get Acct Ref
"RTN","PXKMASC",117,0)
 .S SEQ="" F  S SEQ=$O(^TMP("PXKCO",$J,PXKVVST,"CPT",SEQ)) Q:SEQ=""  D  Q:'PXOERR
"RTN","PXKMASC",118,0)
 ..S PXCPT0=$G(^TMP("PXKCO",$J,PXKVVST,"CPT",SEQ,0,"AFTER"))
"RTN","PXKMASC",119,0)
 ..I $P(PXCPT0,"^",19)'=108 S PXOERR=0 Q  ;Not Lab, so Get Acct Ref
"RTN","PXKMASC",120,0)
 ..I $P(PXCPT0,"^",17)="" S PXOERR=0 Q  ;Lab and no Order Reference, so Get Acct Ref
"RTN","PXKMASC",121,0)
 ..I $P(PXCPT0,"^",17)'="" S PXCPT=$P(PXCPT0,"^",17) D ORACTREF^ORWPFSS(.PXORREF,.PXCPT) I PXORREF'>0 S PXOERR=0  ;Lab and no Acct Ref, so Get Acct Ref
"RTN","PXKMASC",122,0)
 ;Call Get IBBACCT
"RTN","PXKMASC",123,0)
 S PXPV1(2)=$P(^AUPNVSIT(PXKVVST,150),"^",2) S PXPV1(2)=$S(PXPV1(2)=1:"I",PXPV1(2)=0:"O",1:"") ;Inpatient, Outpatient
"RTN","PXKMASC",124,0)
 S PXPV1(3)=$P(^AUPNVSIT(PXKVVST,0),"^",22) Q:PXPV1(3)=""  ;Hospital Location, Quit for Outside Locations
"RTN","PXKMASC",125,0)
 S OUTENC=$O(^SCE("AVSIT",PXKVVST,0)) I OUTENC]"" S PXPV1(4)=$P(^SCE(OUTENC,0),"^",10) ;Appointment type
"RTN","PXKMASC",126,0)
 ;Attending search
"RTN","PXKMASC",127,0)
 S PXPV1(7)=""
"RTN","PXKMASC",128,0)
 S SEQ="" F  S SEQ=$O(^TMP("PXKCO",$J,PXKVVST,"PRV",SEQ)) Q:SEQ=""  D  Q:PXPV1(7)]""
"RTN","PXKMASC",129,0)
 .S PXPRV0=$G(^TMP("PXKCO",$J,PXKVVST,"PRV",SEQ,0,"AFTER"))
"RTN","PXKMASC",130,0)
 .I $P(PXPRV0,"^",5)="A" S PXPV1(7)=$P(PXPRV0,"^",1)
"RTN","PXKMASC",131,0)
 S PXPV1(18)=$P(^AUPNVSIT(PXKVVST,0),"^",8) ;DSS ID
"RTN","PXKMASC",132,0)
 S PXPV1(44)=$P(^AUPNVSIT(PXKVVST,0),"^",1) ;Visit D/T
"RTN","PXKMASC",133,0)
 S PXPV2(7)="" S:$P(^AUPNVSIT(PXKVVST,0),"^",21) PXPV2(7)=$P(^DIC(8,$P(^AUPNVSIT(PXKVVST,0),"^",21),0),"^",9) ;Eligibility
"RTN","PXKMASC",134,0)
 S VSIT("PAT")=$P(^AUPNVSIT(PXKVVST,0),"^",5)
"RTN","PXKMASC",135,0)
 S VSIT("ACT")=$$GETACCT^IBBAPI(VSIT("PAT"),"","A04","PXKMASC",.PXPV1,.PXPV2,,,,"","")
"RTN","PXKMASC",136,0)
 K VSIT("PAT")
"RTN","PXKVST")
0^14^B19263278^B18960095
"RTN","PXKVST",1,0)
PXKVST ;ISL/ARS - SET UP VISIT FIELDS BEFORE CALLING OFF TO VSIT ;8/1/96
"RTN","PXKVST",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**56,111,130,164**;Aug 12, 1996
"RTN","PXKVST",3,0)
VSIT ;ENTRY POINT 
"RTN","PXKVST",4,0)
 ;COMMON SECTION
"RTN","PXKVST",5,0)
 N PXKAFTR,PXKAFT8,PXKAFT15,PXKAFT21,PXKAF811,PXKAF812,PXVSTIEN
"RTN","PXKVST",6,0)
 N VSIT,VSITPKG
"RTN","PXKVST",7,0)
 S PXKAFTR=$S($G(^TMP("PXK",$J,"VST",1,0,"AFTER"))]"":^TMP("PXK",$J,"VST",1,0,"AFTER"),1:"")
"RTN","PXKVST",8,0)
 Q:PXKAFTR=""
"RTN","PXKVST",9,0)
 S PXKAFT21=$S($G(^TMP("PXK",$J,"VST",1,21,"AFTER"))]"":^TMP("PXK",$J,"VST",1,21,"AFTER"),1:"")
"RTN","PXKVST",10,0)
 S PXKAFT15=$S($G(^TMP("PXK",$J,"VST",1,150,"AFTER"))]"":^TMP("PXK",$J,"VST",1,150,"AFTER"),1:"")
"RTN","PXKVST",11,0)
 S PXKAFT8=$S($G(^TMP("PXK",$J,"VST",1,800,"AFTER"))]"":^TMP("PXK",$J,"VST",1,800,"AFTER"),1:"")
"RTN","PXKVST",12,0)
 S PXKAF811=$S($G(^TMP("PXK",$J,"VST",1,811,"AFTER"))]"":^TMP("PXK",$J,"VST",1,811,"AFTER"),1:"")
"RTN","PXKVST",13,0)
 S PXKAF812=$S($G(^TMP("PXK",$J,"VST",1,812,"AFTER"))]"":^TMP("PXK",$J,"VST",1,812,"AFTER"),1:"")
"RTN","PXKVST",14,0)
 S VSIT("IEN")=$S(^TMP("PXK",$J,"VST",1,"IEN")]"":^TMP("PXK",$J,"VST",1,"IEN"),1:"")
"RTN","PXKVST",15,0)
 I VSIT("IEN")="" S PXKAFTR=$TR(PXKAFTR,"@"),PXKAFT8=$TR(PXKAFT8,"@")
"RTN","PXKVST",16,0)
 S VSIT("VDT")=$S($P(PXKAFTR,"^",1)]"":$P(PXKAFTR,"^",1),1:"NOW")
"RTN","PXKVST",17,0)
 S VSIT("TYP")=$P(PXKAFTR,"^",3)
"RTN","PXKVST",18,0)
 S VSIT("INS")=$P(PXKAFTR,"^",6)
"RTN","PXKVST",19,0)
 S VSIT("OUT")=$P(PXKAFT21,"^")
"RTN","PXKVST",20,0)
 S VSIT("PAT")=$P(PXKAFTR,"^",5)
"RTN","PXKVST",21,0)
 S VSIT("SVC")=$P(PXKAFTR,"^",7)
"RTN","PXKVST",22,0)
 S VSIT("DSS")=$P(PXKAFTR,"^",8)
"RTN","PXKVST",23,0)
 S VSIT("LNK")=$P(PXKAFTR,"^",12)
"RTN","PXKVST",24,0)
 S VSIT("WIA")=$P(PXKAFTR,"^",16)
"RTN","PXKVST",25,0)
 S VSIT("LOS")=$P(PXKAFTR,"^",17)
"RTN","PXKVST",26,0)
 S VSIT("COD")=$P(PXKAFTR,"^",18)
"RTN","PXKVST",27,0)
 S:$P(PXKAFTR,"^",21)]"" VSIT("ELG")=$P(PXKAFTR,"^",21)
"RTN","PXKVST",28,0)
 S VSIT("LOC")=$P(PXKAFTR,"^",22)
"RTN","PXKVST",29,0)
 S VSIT("ACT")=$P(PXKAFTR,"^",26) ;PX*1.0*164
"RTN","PXKVST",30,0)
 S:$P(PXKAFT8,"^",1)]"" VSIT("SC")=$P(PXKAFT8,"^",1)
"RTN","PXKVST",31,0)
 S:$P(PXKAFT8,"^",2)]"" VSIT("AO")=$P(PXKAFT8,"^",2)
"RTN","PXKVST",32,0)
 S:$P(PXKAFT8,"^",3)]"" VSIT("IR")=$P(PXKAFT8,"^",3)
"RTN","PXKVST",33,0)
 S:$P(PXKAFT8,"^",4)]"" VSIT("EC")=$P(PXKAFT8,"^",4)
"RTN","PXKVST",34,0)
 S:$P(PXKAFT8,"^",5)]"" VSIT("MST")=$P(PXKAFT8,"^",5) ;added 6/17/98 for MST enhancement
"RTN","PXKVST",35,0)
 ;PX*1*111 - added for HNC enhancement
"RTN","PXKVST",36,0)
 S:$P(PXKAFT8,"^",6)]"" VSIT("HNC")=$P(PXKAFT8,"^",6)
"RTN","PXKVST",37,0)
 S:$P(PXKAFT8,"^",7)]"" VSIT("CV")=$P(PXKAFT8,"^",7)
"RTN","PXKVST",38,0)
 S:$P(PXKAFT15,"^",1)]"" VSIT("SVP")=$P(PXKAFT15,"^",1)
"RTN","PXKVST",39,0)
 S:$P(PXKAFT15,"^",2)]"" VSIT("IO")=$P(PXKAFT15,"^",2)
"RTN","PXKVST",40,0)
 S:$P(PXKAFT15,"^",3)]"" VSIT("PRI")=$P(PXKAFT15,"^",3)
"RTN","PXKVST",41,0)
 S:$P(PXKAF812,"^",2)]"" VSIT("PKG")=$P(PXKAF812,"^",2)
"RTN","PXKVST",42,0)
 S:$P(PXKAF812,"^",3)]"" VSIT("SOR")=$P(PXKAF812,"^",3)
"RTN","PXKVST",43,0)
 S:PXKAF811]"" VSIT("COM")=PXKAF811
"RTN","PXKVST",44,0)
 I $G(VSIT("PRI"))="",VSIT("SVC")="E"!($P($G(^SC(+VSIT("LOC"),0)),"^",7)=VSIT("DSS")) S VSIT("PRI")="P"
"RTN","PXKVST",45,0)
 S VSITPKG="PX"
"RTN","PXKVST",46,0)
 I '$D(VSIT(0)) D
"RTN","PXKVST",47,0)
 .S VSIT(0)=$S(VSIT("SVC")="E":"D0NM",1:"D0NEM")
"RTN","PXKVST",48,0)
 ;
"RTN","PXKVST",49,0)
 ;CALL FOR VSIT
"RTN","PXKVST",50,0)
 D ^VSIT
"RTN","PXKVST",51,0)
 I '$D(VSIT("IEN"))#2 Q
"RTN","PXKVST",52,0)
 S PXVSTIEN=$P(VSIT("IEN"),"^",1)
"RTN","PXKVST",53,0)
 S ^TMP("PXK",$J,"VST",1,"IEN")=PXVSTIEN
"RTN","PXKVST",54,0)
 I PXVSTIEN<1 Q
"RTN","PXKVST",55,0)
 D VIEN(PXVSTIEN)
"RTN","PXKVST",56,0)
 I $P(VSIT("IEN"),"^",3)'=1 D
"RTN","PXKVST",57,0)
 .S ^TMP("PXK",$J,"VST",1,0,"BEFORE")=^AUPNVSIT(PXVSTIEN,0)
"RTN","PXKVST",58,0)
 .S ^TMP("PXK",$J,"VST",1,21,"BEFORE")=$G(^AUPNVSIT(PXVSTIEN,21))
"RTN","PXKVST",59,0)
 .S ^TMP("PXK",$J,"VST",1,150,"BEFORE")=$G(^AUPNVSIT(PXVSTIEN,150))
"RTN","PXKVST",60,0)
 .S ^TMP("PXK",$J,"VST",1,800,"BEFORE")=$G(^AUPNVSIT(PXVSTIEN,800))
"RTN","PXKVST",61,0)
 .S ^TMP("PXK",$J,"VST",1,811,"BEFORE")=$G(^AUPNVSIT(PXVSTIEN,811))
"RTN","PXKVST",62,0)
 .S ^TMP("PXK",$J,"VST",1,812,"BEFORE")=$G(^AUPNVSIT(PXVSTIEN,812))
"RTN","PXKVST",63,0)
 .S $P(^TMP("PXK",$J,"VST",1,0,"AFTER"),"^",3)=$P(^AUPNVSIT(PXVSTIEN,0),"^",3)
"RTN","PXKVST",64,0)
 .S $P(^TMP("PXK",$J,"VST",1,0,"AFTER"),"^",7)=$P(^AUPNVSIT(PXVSTIEN,0),"^",7)
"RTN","PXKVST",65,0)
 I $P(VSIT("IEN"),"^",3)=1 D
"RTN","PXKVST",66,0)
 .S ^TMP("PXK",$J,"VST",1,0,"AFTER")=^AUPNVSIT(PXVSTIEN,0)
"RTN","PXKVST",67,0)
 .S ^TMP("PXK",$J,"VST",1,21,"AFTER")=$G(^AUPNVSIT(PXVSTIEN,21))
"RTN","PXKVST",68,0)
 .S ^TMP("PXK",$J,"VST",1,150,"AFTER")=$G(^AUPNVSIT(PXVSTIEN,150))
"RTN","PXKVST",69,0)
 .S ^TMP("PXK",$J,"VST",1,800,"AFTER")=$G(^AUPNVSIT(PXVSTIEN,800))
"RTN","PXKVST",70,0)
 .S ^TMP("PXK",$J,"VST",1,811,"AFTER")=$G(^AUPNVSIT(PXVSTIEN,811))
"RTN","PXKVST",71,0)
 .S ^TMP("PXK",$J,"VST",1,812,"AFTER")=$G(^AUPNVSIT(PXVSTIEN,812))
"RTN","PXKVST",72,0)
 .S ^TMP("PXK",$J,"VST",1,0,"BEFORE")=""
"RTN","PXKVST",73,0)
 .S ^TMP("PXK",$J,"VST",1,21,"BEFORE")=""
"RTN","PXKVST",74,0)
 .S ^TMP("PXK",$J,"VST",1,150,"BEFORE")=""
"RTN","PXKVST",75,0)
 .S ^TMP("PXK",$J,"VST",1,800,"BEFORE")=""
"RTN","PXKVST",76,0)
 .S ^TMP("PXK",$J,"VST",1,811,"BEFORE")=""
"RTN","PXKVST",77,0)
 .S ^TMP("PXK",$J,"VST",1,812,"BEFORE")=""
"RTN","PXKVST",78,0)
 .I $D(PXELAP)#2 D
"RTN","PXKVST",79,0)
 ..S ^TMP("PXKCO",$J,PXVSTIEN,"VST",PXVSTIEN,"ELAP","BEFORE")=""
"RTN","PXKVST",80,0)
 ..S ^TMP("PXKCO",$J,PXVSTIEN,"VST",PXVSTIEN,"ELAP","AFTER")=PXELAP
"RTN","PXKVST",81,0)
 K VSIT
"RTN","PXKVST",82,0)
 Q
"RTN","PXKVST",83,0)
 ;
"RTN","PXKVST",84,0)
VIEN(VIEN) ;Put the Visit IEN in the AFTERs for all of the V-Files
"RTN","PXKVST",85,0)
 N PXCAINX1,PXCAINX2
"RTN","PXKVST",86,0)
 S PXCAINX1=""
"RTN","PXKVST",87,0)
 F  S PXCAINX1=$O(^TMP("PXK",$J,PXCAINX1)) Q:PXCAINX1']""  D:"^VST^SOR^"'[PXCAINX1
"RTN","PXKVST",88,0)
 . S PXCAINX2=""
"RTN","PXKVST",89,0)
 . F  S PXCAINX2=$O(^TMP("PXK",$J,PXCAINX1,PXCAINX2)) Q:PXCAINX2']""  D
"RTN","PXKVST",90,0)
 .. I $D(^TMP("PXK",$J,PXCAINX1,PXCAINX2,0,"AFTER"))=1 S $P(^TMP("PXK",$J,PXCAINX1,PXCAINX2,0,"AFTER"),"^",3)=VIEN
"RTN","PXKVST",91,0)
 Q
"RTN","PXKVST",92,0)
 ;
"RTN","VSIT")
0^15^B33759245^B31518436
"RTN","VSIT",1,0)
VSIT ;ISD/MRL,RJP - Visit Tracking ;5/9/02 4:31pm
"RTN","VSIT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**76,111,118,164**;Aug 12, 1996
"RTN","VSIT",3,0)
 ; Patch PX*1*76 changes the 2nd line of all VSIT* routines to reflect
"RTN","VSIT",4,0)
 ; the incorporation of the module into PCE.  For historical reference,
"RTN","VSIT",5,0)
 ; the old (VISIT TRACKING) 2nd line is included below to reference VSIT
"RTN","VSIT",6,0)
 ; patches.
"RTN","VSIT",7,0)
 ;
"RTN","VSIT",8,0)
 ;;2.0;VISIT TRACKING;**1**;Aug 12, 1996
"RTN","VSIT",9,0)
 ;
"RTN","VSIT",10,0)
 ; - pass VSIT          = <visit date [and time] in FM format>
"RTN","VSIT",11,0)
 ;        DFN           = <patient file pointer>
"RTN","VSIT",12,0)
 ;        [VSIT(0)]     = <functional parameters>
"RTN","VSIT",13,0)
 ;        [VSIT("xxx")] = <used in match logic if VSIT(0)["M">
"RTN","VSIT",14,0)
 ; - rtns VSIT("IEN")   = <visit record # in format as Y w/ ^DIC>
"RTN","VSIT",15,0)
 ;       VSIT(##,"XXX") = visit values passed by mnemonics
"RTN","VSIT",16,0)
 ;      If VSIT("IEN")  = -1 Error in creation/lookup.
"RTN","VSIT",17,0)
 ;      If Vsit("IEN")  = -2 Package is turned off or not defined in the
"RTN","VSIT",18,0)
 ;                          Visit Tracking Parameters file.
"RTN","VSIT",19,0)
 S VSIT("IEN")=$$GET($G(VSIT),$G(DFN),$G(VSIT(0)),.VSIT)
"RTN","VSIT",20,0)
EXIT ;
"RTN","VSIT",21,0)
 Q
"RTN","VSIT",22,0)
 ;
"RTN","VSIT",23,0)
GET(VDT,DFN,PRAM,VSIT) ; find or create a visit
"RTN","VSIT",24,0)
 ;
"RTN","VSIT",25,0)
 ; - pass {VDT/VSIT("VDT")} = <visit date [and time] in FM format>
"RTN","VSIT",26,0)
 ;        {DFN/VSIT("PAT")} = <patient file pointer>
"RTN","VSIT",27,0)
 ;        [PRAM/VSIT(0)]    = <functional parameters>
"RTN","VSIT",28,0)
 ;        [VSIT("xxx")]     = <array w/ mnemonic subscript>
"RTN","VSIT",29,0)
 ;                            <used in match logic if VISIT(O)["M">
"RTN","VSIT",30,0)
 ;                            <for SVC, TYP, INS, DSS, ELG , LOC>
"RTN","VSIT",31,0)
 ; - rtns                   = <visit record # in format as Y w/ ^DIC>
"RTN","VSIT",32,0)
 I $G(VSITPKG)]"" S VSIT("PKG")=VSITPKG
"RTN","VSIT",33,0)
 E  S (VSITPKG,VSIT("PKG"))=$G(VSIT("PKG"))
"RTN","VSIT",34,0)
 N VSITPKGP
"RTN","VSIT",35,0)
 S VSITPKGP=$$GETPKG^VSIT0($G(VSITPKG))
"RTN","VSIT",36,0)
 ;Check Inactive Flag
"RTN","VSIT",37,0)
 I VSITPKGP<1 S VSIT("IEN")=-2 G DONE ;Need to update Visit Tracking Parameters File
"RTN","VSIT",38,0)
 I $$ACTIVE^VSIT0(VSITPKGP)'=1 S VSIT("IEN")=-2 G DONE ;Quit if package is not active
"RTN","VSIT",39,0)
 ;Check that we now the site part of the Encounter ID
"RTN","VSIT",40,0)
 I $P($G(^DIC(150.9,1,4)),"^",2)<1 S VSIT("IEN")=-1 G DONE
"RTN","VSIT",41,0)
 ;
"RTN","VSIT",42,0)
 K VSIT("IEN"),^TMP("VSITDD",$J),^TMP($J,"VSIT-ERROR")
"RTN","VSIT",43,0)
 S:$G(VDT)]"" VSIT("VDT")=VDT
"RTN","VSIT",44,0)
 S:$G(DFN) VSIT("PAT")=+DFN
"RTN","VSIT",45,0)
 S:$G(PRAM)]"" VSIT(0)=PRAM
"RTN","VSIT",46,0)
 ;See if the old CLN nodes needs moved into the DSS node.
"RTN","VSIT",47,0)
 I '($D(VSIT("DSS"))#2),$D(VSIT("CLN"))#2 S VSIT("DSS")=VSIT("CLN")
"RTN","VSIT",48,0)
 ;
"RTN","VSIT",49,0)
 D FLD^VSITFLD
"RTN","VSIT",50,0)
 ;Set all of the VSIT nodes with $GET
"RTN","VSIT",51,0)
 D SETALL^VSITCK
"RTN","VSIT",52,0)
 ;
"RTN","VSIT",53,0)
 ;Inpatient movement
"RTN","VSIT",54,0)
 N VSITIPM S VSITIPM=+$$IP^VSITCK1(+VSIT("VDT"),+VSIT("PAT"))
"RTN","VSIT",55,0)
 ;Do the defaulting of the fields that need to be defaulted be for lookup
"RTN","VSIT",56,0)
 I $$REQUIRED^VSITDEF S VSIT("IEN")=-1 G DONE
"RTN","VSIT",57,0)
 ;
"RTN","VSIT",58,0)
 D:'$D(DT) DT^DICRW
"RTN","VSIT",59,0)
 ;
"RTN","VSIT",60,0)
 ;If Force new visit, make the visit and exit
"RTN","VSIT",61,0)
 I VSIT(0)["F" D  G QUIT
"RTN","VSIT",62,0)
 . D DEFAULTS^VSITDEF
"RTN","VSIT",63,0)
 . D ^VSITPUT
"RTN","VSIT",64,0)
 ;
"RTN","VSIT",65,0)
 ;If not forcing new visit try to look up the visit
"RTN","VSIT",66,0)
 D LST^VSITGET("","","",.VSIT,.VSITGET)
"RTN","VSIT",67,0)
 I $$SWSTAT^IBBAPI(),+$G(VSITGET)=1 D  ;PX*1.0*164
"RTN","VSIT",68,0)
 . N ACT
"RTN","VSIT",69,0)
 . I $G(VSIT("ACT"))']0 S VSIT("ACT")=$P($G(^AUPNVSIT(+VSITGET(1),0)),"^",26) Q
"RTN","VSIT",70,0)
 . I $G(VSIT("ACT"))]0 S ACT=VSIT("ACT") K VSIT S VSIT("IEN")=+$P(VSITGET(1),"^"),VSIT("ACT")=ACT D UPD^VSIT ;PX*1.0*164
"RTN","VSIT",71,0)
 ;
"RTN","VSIT",72,0)
 I +$G(VSITGET)=0,VSIT(0)["N" D  G QUIT
"RTN","VSIT",73,0)
 . D DEFAULTS^VSITDEF
"RTN","VSIT",74,0)
 . D ^VSITPUT
"RTN","VSIT",75,0)
 I +$G(VSITGET)=1 S VSIT("IEN")=$P(VSITGET(1),"|")_"^"_$P($P(VSITGET(1),"^"),"|",2) G QUIT
"RTN","VSIT",76,0)
 I +$G(VSITGET)>1,VSIT(0)["I" S Y=$$VSIT^VSITASK(VSIT("PAT"),.VSITGET) S:'+Y Y=1 S VSIT("IEN")=$P(VSITGET(+Y),"|")_"^"_$P($P(VSITGET(+Y),"^"),"|",2) G QUIT
"RTN","VSIT",77,0)
 I +$G(VSITGET)>1,VSIT(0)'["I" S VSIT("IEN")=$P(VSITGET(1),"|")_"^"_$P($P(VSITGET(1),"^"),"|",2) G QUIT
"RTN","VSIT",78,0)
 S VSIT("IEN")=-1
"RTN","VSIT",79,0)
 ;
"RTN","VSIT",80,0)
QUIT ; - end of job
"RTN","VSIT",81,0)
 ;
"RTN","VSIT",82,0)
 ; set vsit api
"RTN","VSIT",83,0)
 I +$G(VSIT("IEN"))=0 S VSIT("IEN")=-1
"RTN","VSIT",84,0)
 D:VSIT("IEN")>0 ALL^VSITVAR(+VSIT("IEN"),"B",1)
"RTN","VSIT",85,0)
 ;
"RTN","VSIT",86,0)
DONE I $D(^TMP($J,"VSIT-ERROR")),$G(VSIT("IEN"))'>0,VSIT(0)["N"!(VSIT(0)["F") D SND^VSITBUL
"RTN","VSIT",87,0)
 K VSITGET
"RTN","VSIT",88,0)
 K ^TMP("VSITDD",$J)
"RTN","VSIT",89,0)
 Q VSIT("IEN")
"RTN","VSIT",90,0)
 ;
"RTN","VSIT",91,0)
ADD ; - add to dependency count
"RTN","VSIT",92,0)
 ;   called via cross references on pointer files
"RTN","VSIT",93,0)
 D ADD^AUPNVSIT
"RTN","VSIT",94,0)
 Q
"RTN","VSIT",95,0)
 ;
"RTN","VSIT",96,0)
SUB ; - subtract from dependency count
"RTN","VSIT",97,0)
 ;   called via cross references on pointer files
"RTN","VSIT",98,0)
 ;
"RTN","VSIT",99,0)
 D SUB^AUPNVSIT
"RTN","VSIT",100,0)
 Q
"RTN","VSIT",101,0)
 ;
"RTN","VSIT",102,0)
UPD ; Update Visit File
"RTN","VSIT",103,0)
 Q:$G(VSIT("IEN"))<1
"RTN","VSIT",104,0)
 Q:'$D(^AUPNVSIT(VSIT("IEN"),0))
"RTN","VSIT",105,0)
 N DR,DIE,DA,VSITDR,VSITDATA,VSITFLD
"RTN","VSIT",106,0)
 N %,%H,%I,X
"RTN","VSIT",107,0)
 D NOW^%DTC
"RTN","VSIT",108,0)
 S VSIT("MDT")=%
"RTN","VSIT",109,0)
 D FLD^VSITFLD
"RTN","VSIT",110,0)
 S DIE=9000010,DA=VSIT("IEN")
"RTN","VSIT",111,0)
 S (VSITDR,DR)=""
"RTN","VSIT",112,0)
 L +^AUPNVSIT(+VSIT("IEN")):10
"RTN","VSIT",113,0)
 F  S VSITDR=$O(VSIT(VSITDR)) Q:VSITDR=""  I $G(^TMP("VSITDD",$J,VSITDR))'="" D
"RTN","VSIT",114,0)
 .S VSITFLD=$P($G(^TMP("VSITDD",$J,VSITDR)),";",2) ;Field
"RTN","VSIT",115,0)
 .S VSITDATA=VSIT(VSITDR) ;Data
"RTN","VSIT",116,0)
 .;S DR=""_VSITFLD_"////"_VSITDATA_"" D ^DIE  S DR="" ;Calls DIE each fld
"RTN","VSIT",117,0)
 .I $L(DR)<245 S DR=$P($G(^TMP("VSITDD",$J,VSITDR)),";",2)_"////"_VSIT(VSITDR)_";"_DR
"RTN","VSIT",118,0)
 .I $L(DR)>244 S DR=$E(DR,1,$L(DR)-1) D ^DIE S DR=$P($G(^TMP("VSITDD",$J,VSITDR)),";",2)_"////"_VSIT(VSITDR)_";"
"RTN","VSIT",119,0)
 I $G(DR)["////" S DR=$E(DR,1,$L(DR)-1) D ^DIE
"RTN","VSIT",120,0)
 ;
"RTN","VSIT",121,0)
 ;PX*1*111 - Update NTR file for Head & Neck
"RTN","VSIT",122,0)
 D
"RTN","VSIT",123,0)
 . N HNCARR,HNCERR
"RTN","VSIT",124,0)
 . K HNCARR,HNCERR
"RTN","VSIT",125,0)
 . D GETS^DIQ(9000010,+VSIT("IEN"),80006,"I","HNCARR","HNCERR")
"RTN","VSIT",126,0)
 . I $D(HNCERR) Q  ;No data found
"RTN","VSIT",127,0)
 . I $G(HNCARR(9000010,(+VSIT("IEN")_","),80006,"I"))'=1 Q
"RTN","VSIT",128,0)
 . ;Answer is 'Y' to HNC question
"RTN","VSIT",129,0)
 . N SDELG0,DGARR,PCEXDFN
"RTN","VSIT",130,0)
 . S PCEXDFN=$G(DFN)
"RTN","VSIT",131,0)
 . I PCEXDFN="" S PCEXDFN=$G(PXAA("PATIENT"))
"RTN","VSIT",132,0)
 . I PCEXDFN="" Q
"RTN","VSIT",133,0)
 . S SDELG0=$$GETCUR^DGNTAPI(PCEXDFN,"DGARR")
"RTN","VSIT",134,0)
 . S SDELG0=+$G(DGARR("STAT"))
"RTN","VSIT",135,0)
 . I SDELG0'=3 Q  ;NTR File does not require editing
"RTN","VSIT",136,0)
 . S SDELG0=$$FILEHNC^DGNTAPI1(PCEXDFN)
"RTN","VSIT",137,0)
 ;
"RTN","VSIT",138,0)
 L -^AUPNVSIT(+VSIT("IEN"))
"RTN","VSIT",139,0)
 K ^TMP("VSITDD",$J)
"RTN","VSIT",140,0)
 Q
"RTN","VSIT",141,0)
PKG2IEN(PKG) ;Pass in package name space and
"RTN","VSIT",142,0)
 ;        returns pointer to the package in the Package file #9.4
"RTN","VSIT",143,0)
 Q $$PKG2IEN^VSIT0($G(PKG))
"RTN","VSIT",144,0)
 ;
"RTN","VSIT",145,0)
PKG(PKG,VALUE) ;-Entry point to add package to multiple in tracking parameters
"RTN","VSIT",146,0)
 ;-PKG=Package Name Space
"RTN","VSIT",147,0)
 ;-VALUE=Value on the ON/OFF flag under package multiple 
"RTN","VSIT",148,0)
 ;--1=ON  0=OFF
"RTN","VSIT",149,0)
 Q $$PKG^VSIT0($G(PKG),$G(VALUE))
"RTN","VSIT",150,0)
 ;
"RTN","VSIT",151,0)
PKGON(PKG) ; -- Returns the active flag for the package
"RTN","VSIT",152,0)
 ; 1 the package can create visits
"RTN","VSIT",153,0)
 ; 0 the package cannot create visits
"RTN","VSIT",154,0)
 ; -1 called wrong or could not find package in VT parameters file
"RTN","VSIT",155,0)
 Q $$PKGON^VSIT0($G(PKG))
"RTN","VSIT",156,0)
 ;
"RTN","VSIT",157,0)
IEN2VID(IEN) ; -- Call with Visit IEN and returns the Visit ID
"RTN","VSIT",158,0)
 Q:'($D(^AUPNVSIT(+IEN,150))#2) -1
"RTN","VSIT",159,0)
 Q $P(^AUPNVSIT(IEN,150),"^",1)
"RTN","VSIT",160,0)
 ;
"RTN","VSIT",161,0)
VID2IEN(VID) ; -- Call with Visit's ID and returns the Visit IEN
"RTN","VSIT",162,0)
 N IEN
"RTN","VSIT",163,0)
 S IEN=$O(^AUPNVSIT("VID",VID,0))
"RTN","VSIT",164,0)
 Q $S(IEN]"":IEN,1:-1)
"RTN","VSIT",165,0)
 ;
"RTN","VSIT",166,0)
LOOKUP(IEN,FMT,WITHIEN) ; -- Lookup a visit and return all of its information
"RTN","VSIT",167,0)
 ;DBIA #: 1906
"RTN","VSIT",168,0)
 ;Parameters:
"RTN","VSIT",169,0)
 ; IEN     is the IEN for the Visit OR the Visit's ID
"RTN","VSIT",170,0)
 ; FMT  is the format that you want the output where
"RTN","VSIT",171,0)
 ;          I ::= internal format
"RTN","VSIT",172,0)
 ;          E ::= external format
"RTN","VSIT",173,0)
 ;          B ::= both internal and external format
"RTN","VSIT",174,0)
 ;        B is the default if FMT is anything other than "I" or "E"
"RTN","VSIT",175,0)
 ; WITHIEN is 0 if you do not want the IEN of the VSIT( as the first
"RTN","VSIT",176,0)
 ;         subscript and 1 if you do.  "1" is the default.
"RTN","VSIT",177,0)
 ;
"RTN","VSIT",178,0)
 ;Return:  -1 if IEN was not a valid IEN or Visit ID
"RTN","VSIT",179,0)
 ;         otherwise returns IEN
"RTN","VSIT",180,0)
 ;  VSIT(  an array VSIT(Visit IEN,field) or VSIT(field) depending
"RTN","VSIT",181,0)
 ;         on the value of WITHIEN.  The array is all of the fields
"RTN","VSIT",182,0)
 ;         in the visit file. If B(oth) internal and external format
"RTN","VSIT",183,0)
 ;         are returned the format is:  internal^external.
"RTN","VSIT",184,0)
 ;         If I(nternal) format is requested only the internal part
"RTN","VSIT",185,0)
 ;         is returned.
"RTN","VSIT",186,0)
 ;         If E(xternal) format is requested the format is: ^external
"RTN","VSIT",187,0)
 ;         External values, if requested, are always returned in the
"RTN","VSIT",188,0)
 ;         second pieces of the array elements.
"RTN","VSIT",189,0)
 ;  
"RTN","VSIT",190,0)
 Q:$G(IEN)']"" -1
"RTN","VSIT",191,0)
 S:+IEN'=IEN IEN=$$VID2IEN(IEN) ;PX*1.0*118
"RTN","VSIT",192,0)
 Q:'($D(^AUPNVSIT(+IEN,0))#2) -1
"RTN","VSIT",193,0)
 S FMT=$G(FMT)
"RTN","VSIT",194,0)
 S FMT=$S(FMT["B":"B",FMT["I":"I",FMT["E":"E",1:"B")
"RTN","VSIT",195,0)
 S WITHIEN=$S($G(WITHIEN)=0:0,1:1)
"RTN","VSIT",196,0)
 D ALL^VSITVAR(IEN,FMT,WITHIEN)
"RTN","VSIT",197,0)
 Q IEN
"RTN","VSIT",198,0)
 ;
"RTN","VSIT",199,0)
SELECTED(DFN,SDT,EDT,HOSLOC,ENCTYPE,NENCTYPE,SERVCAT,NSERVCAT,LASTN) ;
"RTN","VSIT",200,0)
 ;  -- Returns selected visits depending on screens passed in.
"RTN","VSIT",201,0)
 D VSITAPI^VSITOE($G(DFN),$G(SDT),$G(EDT),$G(HOSLOC),$G(ENCTYPE),$G(NENCTYPE),$G(SERVCAT),$G(NSERVCAT),$G(LASTN))
"RTN","VSIT",202,0)
 Q
"RTN","VSIT",203,0)
 ;
"RTN","VSIT",204,0)
HISTORIC(IEN) ;  -- Returns 1 if it is an Historical visit ("E" in #.07)
"RTN","VSIT",205,0)
 ;                     0 if it is not an Historical visit.
"RTN","VSIT",206,0)
 ;                    -1 if the IEN is bad
"RTN","VSIT",207,0)
 Q $S('($D(^AUPNVSIT(IEN,0))#2):-1,1:$P($G(^AUPNVSIT(IEN,0)),"^",7)="E")
"RTN","VSIT",208,0)
 ;
"RTN","VSIT",209,0)
MODIFIED(IEN) ;Sets the Date Last Modified (.13) field to NOW
"RTN","VSIT",210,0)
 ;
"RTN","VSIT",211,0)
 N VSIT
"RTN","VSIT",212,0)
 S VSIT("IEN")=IEN
"RTN","VSIT",213,0)
 D UPD
"RTN","VSIT",214,0)
 Q
"RTN","VSITDEF")
0^25^B40978064^B39387096
"RTN","VSITDEF",1,0)
VSITDEF ;ISL/dee - Defaulting Logic for the Visit ;4/17/97
"RTN","VSITDEF",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**76,111,130,164**;Aug 12, 1996
"RTN","VSITDEF",3,0)
 ; Patch PX*1*76 changes the 2nd line of all VSIT* routines to reflect
"RTN","VSITDEF",4,0)
 ; the incorporation of the module into PCE.  For historical reference,
"RTN","VSITDEF",5,0)
 ; the old (VISIT TRACKING) 2nd line is included below to reference VSIT
"RTN","VSITDEF",6,0)
 ; patches.
"RTN","VSITDEF",7,0)
 ;
"RTN","VSITDEF",8,0)
 ;;2.0;VISIT TRACKING;**1,2**;Aug 12, 1996
"RTN","VSITDEF",9,0)
 ;
"RTN","VSITDEF",10,0)
 Q  ; - not an entry point
"RTN","VSITDEF",11,0)
 ;
"RTN","VSITDEF",12,0)
REQUIRED() ;Check the required variables
"RTN","VSITDEF",13,0)
 ;and Default all fields that are need for lookup matching
"RTN","VSITDEF",14,0)
 ; Returns: 0 if no errors and 
"RTN","VSITDEF",15,0)
 ;          1 if there are errors that prevent processing
"RTN","VSITDEF",16,0)
 ;          (stored in QUIT)
"RTN","VSITDEF",17,0)
 N QUIT,SITE
"RTN","VSITDEF",18,0)
 S QUIT=0
"RTN","VSITDEF",19,0)
 S SITE=+$$SITE^VASITE($P($G(VSIT("VDT")),"^"))
"RTN","VSITDEF",20,0)
 ; - VDT
"RTN","VSITDEF",21,0)
 S VSIT("VDT")=$$ERRCHK^VSITCK("VDT",VSIT("VDT"),$S(VSIT("SVC")="E":"TS",1:""))
"RTN","VSITDEF",22,0)
 I $L(VSIT("VDT"),"^")>1 D ERR^VSITPUT($P(VSIT("VDT"),"^",2,99)) S QUIT=1
"RTN","VSITDEF",23,0)
 ; - PAT
"RTN","VSITDEF",24,0)
 S VSIT("PAT")=$$ERRCHK^VSITCK("PAT",VSIT("PAT"))
"RTN","VSITDEF",25,0)
 I $L(VSIT("PAT"),"^")>1 D ERR^VSITPUT($P(VSIT("PAT"),"^",2,99)) S QUIT=1
"RTN","VSITDEF",26,0)
 I VSIT("INS")="",VSIT("OUT")="",VSIT("SVC")'="E" D
"RTN","VSITDEF",27,0)
 . S VSIT("INS")=$$INS4LOC^VSITCK1(+VSIT("LOC"))
"RTN","VSITDEF",28,0)
 . I VSIT("INS")']"",SITE>0 S VSIT("INS")=SITE
"RTN","VSITDEF",29,0)
 . S VSIT("INS")=$$ERRCHK^VSITCK("INS",VSIT("INS"))
"RTN","VSITDEF",30,0)
 I $L(VSIT("INS"),"^")>1 D ERR^VSITPUT($P(VSIT("INS"),"^",2,99)) S QUIT=1
"RTN","VSITDEF",31,0)
 ; - LOC
"RTN","VSITDEF",32,0)
 I (VSIT("INS")=SITE&(VSIT("SVC")'="E"))!(VSIT("LOC")]"") D
"RTN","VSITDEF",33,0)
 . S VSIT("LOC")=$$ERRCHK^VSITCK("LOC",VSIT("LOC"))
"RTN","VSITDEF",34,0)
 I $L(VSIT("LOC"),"^")>1 D ERR^VSITPUT($P(VSIT("LOC"),"^",2,99)) S QUIT=1
"RTN","VSITDEF",35,0)
 ; - TYP
"RTN","VSITDEF",36,0)
 I VSIT("TYP")']"",VSIT("INS")]"" S VSIT("TYP")="V"
"RTN","VSITDEF",37,0)
 I VSIT("TYP")']"",VSIT("SVC")="E" S VSIT("TYP")="O"
"RTN","VSITDEF",38,0)
 S:VSIT("TYP")']"" VSIT("TYP")=$G(DUZ("AG"))
"RTN","VSITDEF",39,0)
 S:VSIT("TYP")']"" VSIT("TYP")=$P($G(^DIC(150.9,1,0)),"^",3)
"RTN","VSITDEF",40,0)
 S VSIT("TYP")=$$ERRCHK^VSITCK("TYP",VSIT("TYP"))
"RTN","VSITDEF",41,0)
 I $L(VSIT("TYP"),"^")>1 D ERR^VSITPUT($P(VSIT("TYP"),"^",2,99)) S QUIT=1
"RTN","VSITDEF",42,0)
 ; - DSS
"RTN","VSITDEF",43,0)
 I VSIT("DSS")="",VSIT("LOC")]"" D
"RTN","VSITDEF",44,0)
 . S VSIT("DSS")=$$DSS4LOC^VSITCK1(+VSIT("LOC"))
"RTN","VSITDEF",45,0)
 I VSIT("DSS")]"" D
"RTN","VSITDEF",46,0)
 . S VSIT("DSS")=$$ERRCHK^VSITCK("DSS",VSIT("DSS"))
"RTN","VSITDEF",47,0)
 I $L(VSIT("DSS"),"^")>1 D ERR^VSITPUT($P(VSIT("DSS"),"^",2,99)) S QUIT=1
"RTN","VSITDEF",48,0)
 ; - IO
"RTN","VSITDEF",49,0)
 S VSIT("IO")=$S(VSITIPM>0:1,1:0)
"RTN","VSITDEF",50,0)
 ; - SVC
"RTN","VSITDEF",51,0)
 I VSIT("SVC")'="E" D
"RTN","VSITDEF",52,0)
 . I +VSIT("DSS") D
"RTN","VSITDEF",53,0)
 .. ;Default svc based on the dss id
"RTN","VSITDEF",54,0)
 .. I $P(^DIC(40.7,+VSIT("DSS"),0),"^",1)["TELE" S VSIT("SVC")="T" ;any TELEphone
"RTN","VSITDEF",55,0)
 .. E  I $O(^VSIT(150.1,"B",+$P(^DIC(40.7,+VSIT("DSS"),0),"^",2),0)) S VSIT("SVC")="X"
"RTN","VSITDEF",56,0)
 .. E  I VSIT("SVC")="",VSIT("DSS")=$P($G(^SC(+VSIT("LOC"),0)),"^",7) S VSIT("SVC")="A"
"RTN","VSITDEF",57,0)
 . I VSIT("SVC")="" S VSIT("SVC")="X"
"RTN","VSITDEF",58,0)
 I VSIT("IO") D
"RTN","VSITDEF",59,0)
 . I VSIT("SVC")="A" S VSIT("SVC")="I"
"RTN","VSITDEF",60,0)
 . E  I VSIT("SVC")="X" S VSIT("SVC")="D"
"RTN","VSITDEF",61,0)
 E  D
"RTN","VSITDEF",62,0)
 . I VSIT("SVC")="I" S VSIT("SVC")="A"
"RTN","VSITDEF",63,0)
 . E  I VSIT("SVC")="D" S VSIT("SVC")="X"
"RTN","VSITDEF",64,0)
 S VSIT("SVC")=$$ERRCHK^VSITCK("SVC",VSIT("SVC"))
"RTN","VSITDEF",65,0)
 I $L(VSIT("SVC"),"^")>1 D ERR^VSITPUT($P(VSIT("SVC"),"^",2,99)) S QUIT=1
"RTN","VSITDEF",66,0)
 ;
"RTN","VSITDEF",67,0)
 Q QUIT
"RTN","VSITDEF",68,0)
 ;
"RTN","VSITDEF",69,0)
DEFAULTS ;Default all of the rest of the fields that are NOT need for lookup matching
"RTN","VSITDEF",70,0)
 ; - CDT & MDT
"RTN","VSITDEF",71,0)
 D
"RTN","VSITDEF",72,0)
 . N %,%H,%I,X
"RTN","VSITDEF",73,0)
 . D NOW^%DTC
"RTN","VSITDEF",74,0)
 . S (VSIT("CDT"),VSIT("MDT"))=%
"RTN","VSITDEF",75,0)
 ; - LNK
"RTN","VSITDEF",76,0)
 ;   check if good
"RTN","VSITDEF",77,0)
 D:VSIT("LNK")]""
"RTN","VSITDEF",78,0)
 . S VSIT("LNK")=$$GET^VSITVAR("LNK",VSIT("LNK"))
"RTN","VSITDEF",79,0)
 . I +VSIT("LNK"),+VSIT("PAT") D
"RTN","VSITDEF",80,0)
 . . S NOD=$G(^AUPNVSIT(+VSIT("LNK"),0))
"RTN","VSITDEF",81,0)
 . . S:+$P(NOD,"^",11) VSIT("LNK")="" ; delete flag
"RTN","VSITDEF",82,0)
 . . S:+VSIT("PAT")'=$P(NOD,"^",5) VSIT("LNK")="" ; different patients
"RTN","VSITDEF",83,0)
 S VSIT("LNK")=$$ERRCHK^VSITCK("LNK",VSIT("LNK"))
"RTN","VSITDEF",84,0)
 D:$L(VSIT("LNK"),"^")>1 WRN^VSITPUT($P(VSIT("LNK"),"^",2,99))
"RTN","VSITDEF",85,0)
 ; - COD
"RTN","VSITDEF",86,0)
 S VSIT("COD")=$$ERRCHK^VSITCK("COD",VSIT("COD"))
"RTN","VSITDEF",87,0)
 D:$L(VSIT("COD"),"^")>1 WRN^VSITPUT($P(VSIT("COD"),"^",2,99))
"RTN","VSITDEF",88,0)
 ; - ELG
"RTN","VSITDEF",89,0)
 I +VSIT("PAT"),$F(VSIT(0),"I")!($F(VSIT(0),"E")) D
"RTN","VSITDEF",90,0)
 . S:VSIT(0)["I" VSIT("ELG")=$$ELG^VSITASK(VSIT("PAT"))
"RTN","VSITDEF",91,0)
 . D:VSIT("ELG")=""
"RTN","VSITDEF",92,0)
 . . S:VSIT("LNK")>0 VSIT("ELG")=$P($G(^AUPNVSIT(VSIT("LNK"),0)),"^",21) ;Eligibility Code form Parent Visit
"RTN","VSITDEF",93,0)
 . . S:VSIT("ELG")="" VSIT("ELG")=$P($G(^DPT(+VSIT("PAT"),.36)),"^") ;Primary Eligibility Code
"RTN","VSITDEF",94,0)
 . . D:VSIT("ELG")=""
"RTN","VSITDEF",95,0)
 . . . N VSITI,VSITE
"RTN","VSITDEF",96,0)
 . . . S (VSITI,VSITE)=0
"RTN","VSITDEF",97,0)
 . . . ;See if any eligibilities it the Patient Eigibilities sub-file
"RTN","VSITDEF",98,0)
 . . . F  S VSITE=$O(^DPT(+VSIT("PAT"),"E",VSITE)) Q:VSITE'>0  S VSITI=VSITI+1
"RTN","VSITDEF",99,0)
 . . . I VSITI=1 S VSIT("ELG")=$O(^DPT(+VSIT("PAT"),"E",0)) ;If only one use it
"RTN","VSITDEF",100,0)
 S VSIT("ELG")=$$ERRCHK^VSITCK("ELG",VSIT("ELG"))
"RTN","VSITDEF",101,0)
 D:$L(VSIT("ELG"),"^")>1 WRN^VSITPUT($P(VSIT("ELG"),"^",2,99))
"RTN","VSITDEF",102,0)
 ; - USR
"RTN","VSITDEF",103,0)
 I VSIT("USR")="",+$G(DUZ) S VSIT("USR")=+DUZ
"RTN","VSITDEF",104,0)
 S VSIT("USR")=$$ERRCHK^VSITCK("USR",VSIT("USR"))
"RTN","VSITDEF",105,0)
 D:$L(VSIT("USR"),"^")>1 WRN^VSITPUT($P(VSIT("USR"),"^",2,99))
"RTN","VSITDEF",106,0)
 ; - OPT
"RTN","VSITDEF",107,0)
 S:VSIT("OPT")="" VSIT("OPT")=$P($G(XQY),"^")
"RTN","VSITDEF",108,0)
 S VSIT("OPT")=$$ERRCHK^VSITCK("OPT",VSIT("OPT"))
"RTN","VSITDEF",109,0)
 D:$L(VSIT("OPT"),"^")>1 WRN^VSITPUT($P(VSIT("OPT"),"^",2,99))
"RTN","VSITDEF",110,0)
 ; - PRO
"RTN","VSITDEF",111,0)
 I VSIT("PRO")="",$P($G(XQORNOD),";",2)="ORD(101," S VSIT("PRO")=$P($G(XQORNOD),";")
"RTN","VSITDEF",112,0)
 S VSIT("PRO")=$$ERRCHK^VSITCK("PRO",VSIT("PRO"))
"RTN","VSITDEF",113,0)
 D:$L(VSIT("PRO"),"^")>1 WRN^VSITPUT($P(VSIT("PRO"),"^",2,99))
"RTN","VSITDEF",114,0)
 ; - OUT
"RTN","VSITDEF",115,0)
 S VSIT("OUT")=$$ERRCHK^VSITCK("OUT",VSIT("OUT"))
"RTN","VSITDEF",116,0)
 D:$L(VSIT("OUT"),"^")>1 WRN^VSITPUT($P(VSIT("OUT"),"^",2,99))
"RTN","VSITDEF",117,0)
 ; - VID
"RTN","VSITDEF",118,0)
 S VSIT("VID")=$$GETVID^VSITVID
"RTN","VSITDEF",119,0)
 ; - PRI
"RTN","VSITDEF",120,0)
 I VSIT("PRI")="P",$O(^VSIT(150.1,"B",+$P($G(^DIC(40.7,+VSIT("DSS"),0)),"^",2),0)) S VSIT("PRI")="O"
"RTN","VSITDEF",121,0)
 S VSIT("PRI")=$$ERRCHK^VSITCK("PRI",VSIT("PRI"))
"RTN","VSITDEF",122,0)
 D:$L(VSIT("PRI"),"^")>1 WRN^VSITPUT($P(VSIT("PRI"),"^",2,99))
"RTN","VSITDEF",123,0)
 ; - SC
"RTN","VSITDEF",124,0)
 S VSIT("SC")=$$ERRCHK^VSITCK("SC",VSIT("SC"))
"RTN","VSITDEF",125,0)
 D:$L(VSIT("SC"),"^")>1 WRN^VSITPUT($P(VSIT("SC"),"^",2,99))
"RTN","VSITDEF",126,0)
 ; - AO
"RTN","VSITDEF",127,0)
 S VSIT("AO")=$$ERRCHK^VSITCK("AO",VSIT("AO"))
"RTN","VSITDEF",128,0)
 D:$L(VSIT("AO"),"^")>1 WRN^VSITPUT($P(VSIT("AO"),"^",2,99))
"RTN","VSITDEF",129,0)
 ; - IR
"RTN","VSITDEF",130,0)
 S VSIT("IR")=$$ERRCHK^VSITCK("IR",VSIT("IR"))
"RTN","VSITDEF",131,0)
 D:$L(VSIT("IR"),"^")>1 WRN^VSITPUT($P(VSIT("IR"),"^",2,99))
"RTN","VSITDEF",132,0)
 ; - EC
"RTN","VSITDEF",133,0)
 S VSIT("EC")=$$ERRCHK^VSITCK("EC",VSIT("EC"))
"RTN","VSITDEF",134,0)
 D:$L(VSIT("EC"),"^")>1 WRN^VSITPUT($P(VSIT("EC"),"^",2,99))
"RTN","VSITDEF",135,0)
 ; - HNC - PX*1*111 - Head & Neck
"RTN","VSITDEF",136,0)
 S VSIT("HNC")=$$ERRCHK^VSITCK("HNC",VSIT("HNC"))
"RTN","VSITDEF",137,0)
 D:$L(VSIT("HNC"),"^")>1 WRN^VSITPUT($P(VSIT("HNC"),"^",2,99))
"RTN","VSITDEF",138,0)
 ; - CV - PX*1*130 - Combat Vet
"RTN","VSITDEF",139,0)
 S VSIT("CV")=$$ERRCHK^VSITCK("CV",VSIT("CV"))
"RTN","VSITDEF",140,0)
 D:$L(VSIT("CV"),"^")>1 WRN^VSITPUT($P(VSIT("CV"),"^",2,99))
"RTN","VSITDEF",141,0)
 ; - COM
"RTN","VSITDEF",142,0)
 S VSIT("COM")=$$ERRCHK^VSITCK("COM",VSIT("COM"))
"RTN","VSITDEF",143,0)
 D:$L(VSIT("COM"),"^")>1 WRN^VSITPUT($P(VSIT("COM"),"^",2,99))
"RTN","VSITDEF",144,0)
 ; - VER
"RTN","VSITDEF",145,0)
 S VSIT("VER")=$$ERRCHK^VSITCK("VER",VSIT("VER"))
"RTN","VSITDEF",146,0)
 D:$L(VSIT("VER"),"^")>1 WRN^VSITPUT($P(VSIT("VER"),"^",2,99))
"RTN","VSITDEF",147,0)
 ; - PKG
"RTN","VSITDEF",148,0)
 S VSIT("PKG")=$$PKG2IEN^VSIT(VSIT("PKG"))
"RTN","VSITDEF",149,0)
 S VSIT("PKG")=$$ERRCHK^VSITCK("PKG",VSIT("PKG"))
"RTN","VSITDEF",150,0)
 D:$L(VSIT("PKG"),"^")>1 WRN^VSITPUT($P(VSIT("PKG"),"^",2,99))
"RTN","VSITDEF",151,0)
 ; - SOR
"RTN","VSITDEF",152,0)
 ;Lookup source in PCE DATA SOURCE file (#839.7) with LAYGO
"RTN","VSITDEF",153,0)
 I VSIT("SOR")'=+VSIT("SOR") D
"RTN","VSITDEF",154,0)
 . I $T(SOURCE^PXAPI)="" D
"RTN","VSITDEF",155,0)
 .. S VSIT("SOR")=$$SOURCE^PXAPI(VSIT("SOR"))
"RTN","VSITDEF",156,0)
 . E  S VSIT("SOR")=""
"RTN","VSITDEF",157,0)
 S VSIT("SOR")=$$ERRCHK^VSITCK("SOR",VSIT("SOR"))
"RTN","VSITDEF",158,0)
 D:$L(VSIT("SOR"),"^")>1 WRN^VSITPUT($P(VSIT("SOR"),"^",2,99))
"RTN","VSITDEF",159,0)
 ;
"RTN","VSITDEF",160,0)
 ;PFSS Patient Reference
"RTN","VSITDEF",161,0)
 S VSIT("ACT")=$$ERRCHK^VSITCK("ACT",VSIT("ACT"))
"RTN","VSITDEF",162,0)
 I $$SWSTAT^IBBAPI() D:$L(VSIT("ACT"),"^")>1 WRN^VSITPUT($P(VSIT("ACT"),"^",2,99))
"RTN","VSITDEF",163,0)
 Q
"RTN","VSITDEF",164,0)
 ;
"RTN","VSITFLD")
0^16^B10370988^B10171572
"RTN","VSITFLD",1,0)
VSITFLD ;ISD/MRL,RJP - Visit Tracking file fields array setup ;6/20/96
"RTN","VSITFLD",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**76,81,111,130,124,164**;Aug 12, 1996
"RTN","VSITFLD",3,0)
 ; Patch PX*1*76 changes the 2nd line of all VSIT* routines to reflect
"RTN","VSITFLD",4,0)
 ; the incorporation of the module into PCE.  For historical reference,
"RTN","VSITFLD",5,0)
 ; the old (VISIT TRACKING) 2nd line is included below to reference VSIT
"RTN","VSITFLD",6,0)
 ; patches.
"RTN","VSITFLD",7,0)
 ;
"RTN","VSITFLD",8,0)
 ;;2.0;VISIT TRACKING;**4**;Aug 12, 1996;
"RTN","VSITFLD",9,0)
 ;
"RTN","VSITFLD",10,0)
 Q
"RTN","VSITFLD",11,0)
 ;
"RTN","VSITFLD",12,0)
FLD ; - Visit file fields; array subscript and field DD number fmt
"RTN","VSITFLD",13,0)
 ;   <visit subscript>;<field#>;<node>;<piece>;<error message>
"RTN","VSITFLD",14,0)
 ;
"RTN","VSITFLD",15,0)
 S ^TMP("VSITDD",$J,"VDT")="VDT;.01;0;1;Invalid Encounter/Admit Date&Time [0;1]"
"RTN","VSITFLD",16,0)
 S ^TMP("VSITDD",$J,"CDT")="CDT;.02;0;2"
"RTN","VSITFLD",17,0)
 S ^TMP("VSITDD",$J,"TYP")="TYP;.03;0;3;Invalid Type [0:3]"
"RTN","VSITFLD",18,0)
 S ^TMP("VSITDD",$J,"PAT")="PAT;.05;0;5;Invalid Patient [0:5]"
"RTN","VSITFLD",19,0)
 S ^TMP("VSITDD",$J,"INS")="INS;.06;0;6;Invalid Loc of Encounter [0:6]"
"RTN","VSITFLD",20,0)
 S ^TMP("VSITDD",$J,"SVC")="SVC;.07;0;7;Invalid Service Category [0:7]"
"RTN","VSITFLD",21,0)
 S ^TMP("VSITDD",$J,"DSS")="DSS;.08;0;8;Invalid DSS ID [0:8]"
"RTN","VSITFLD",22,0)
 S ^TMP("VSITDD",$J,"CTR")="CTR;.09;0;9"
"RTN","VSITFLD",23,0)
 S ^TMP("VSITDD",$J,"DEL")="DEL;.11;0;11"
"RTN","VSITFLD",24,0)
 S ^TMP("VSITDD",$J,"LNK")="LNK;.12;0;12"
"RTN","VSITFLD",25,0)
 S ^TMP("VSITDD",$J,"MDT")="MDT;.13;0;13"
"RTN","VSITFLD",26,0)
 S ^TMP("VSITDD",$J,"COD")="COD;.18;0;18"
"RTN","VSITFLD",27,0)
 S ^TMP("VSITDD",$J,"ELG")="ELG;.21;0;21;Invalid Eligibility [0:21]"
"RTN","VSITFLD",28,0)
 S ^TMP("VSITDD",$J,"LOC")="LOC;.22;0;22;Invalid Hospital Location [0:22] - The specified Hospital Location was not found defined in the Hospital Location file."
"RTN","VSITFLD",29,0)
 S ^TMP("VSITDD",$J,"USR")="USR;.23;0;23;Invalid Created by User [0:23]"
"RTN","VSITFLD",30,0)
 S ^TMP("VSITDD",$J,"OPT")="OPT;.24;0;24"
"RTN","VSITFLD",31,0)
 S ^TMP("VSITDD",$J,"PRO")="PRO;.25;0;25"
"RTN","VSITFLD",32,0)
 S ^TMP("VSITDD",$J,"ACT")="ACT;.26;0;26"
"RTN","VSITFLD",33,0)
 S ^TMP("VSITDD",$J,"OUT")="OUT;2101;21;1"
"RTN","VSITFLD",34,0)
 S ^TMP("VSITDD",$J,"VID")="VID;15001;150;1"
"RTN","VSITFLD",35,0)
 S ^TMP("VSITDD",$J,"IO")="IO;15002;150;2"
"RTN","VSITFLD",36,0)
 S ^TMP("VSITDD",$J,"PRI")="PRI;15003;150;3"
"RTN","VSITFLD",37,0)
 S ^TMP("VSITDD",$J,"SC")="SC;80001;800;1"
"RTN","VSITFLD",38,0)
 S ^TMP("VSITDD",$J,"AO")="AO;80002;800;2"
"RTN","VSITFLD",39,0)
 S ^TMP("VSITDD",$J,"IR")="IR;80003;800;3"
"RTN","VSITFLD",40,0)
 S ^TMP("VSITDD",$J,"EC")="EC;80004;800;4"
"RTN","VSITFLD",41,0)
 S ^TMP("VSITDD",$J,"MST")="MST;80005;800;5" ;added 6/17/98 for MST enhancement
"RTN","VSITFLD",42,0)
 S ^TMP("VSITDD",$J,"HNC")="HNC;80006;800;6" ;PX*1*111 added for HNC enhancement
"RTN","VSITFLD",43,0)
 S ^TMP("VSITDD",$J,"CV")="CV;80007;800;7" ;PX*1*130 Combat Veteran
"RTN","VSITFLD",44,0)
 S ^TMP("VSITDD",$J,"SCEF")="SCED;80011;800;11" ;PX*1*124 SC EDIT FLAG
"RTN","VSITFLD",45,0)
 S ^TMP("VSITDD",$J,"AOEF")="AOED;80012;800;12" ;PX*1*124 AO EDIT FLAG
"RTN","VSITFLD",46,0)
 S ^TMP("VSITDD",$J,"IREF")="IRED;80013;800;13" ;PX*1*124 IR EDIT FLAG
"RTN","VSITFLD",47,0)
 S ^TMP("VSITDD",$J,"ECEF")="ECED;80014;800;14" ;PX*1*124 EC EDIT FLAG
"RTN","VSITFLD",48,0)
 S ^TMP("VSITDD",$J,"MSTEF")="MSTED;80015;800;15" ;PX*1*124 MST EDIT FLAG
"RTN","VSITFLD",49,0)
 S ^TMP("VSITDD",$J,"HNCEF")="HNCED;80016;800;16" ;PX*1*124 HNC EDIT FLAG
"RTN","VSITFLD",50,0)
 S ^TMP("VSITDD",$J,"CVEF")="CVED;80017;800;17" ;PX*1*124 CV EDIT FLAG
"RTN","VSITFLD",51,0)
 S ^TMP("VSITDD",$J,"COM")="COM;81101;811;1"
"RTN","VSITFLD",52,0)
 S ^TMP("VSITDD",$J,"VER")="VER;81201;812;1"
"RTN","VSITFLD",53,0)
 S ^TMP("VSITDD",$J,"PKG")="PKG;81202;812;2"
"RTN","VSITFLD",54,0)
 S ^TMP("VSITDD",$J,"SOR")="SOR;81203;812;3"
"RTN","VSITFLD",55,0)
 Q
"RTN","VSITFLD",56,0)
 ;
"VER")
8.0^22.0
"^DD",9000010,9000010,.26,0)
PFSS ACCOUNT REFERENCE^P375'^IBBAA(375,^0;26^Q
"^DD",9000010,9000010,.26,3)

"^DD",9000010,9000010,.26,21,0)
^^3^3^3050610^
"^DD",9000010,9000010,.26,21,1,0)
The number by which all VistA applications will reference an
"^DD",9000010,9000010,.26,21,2,0)
external medical billing system account number for purposes
"^DD",9000010,9000010,.26,21,3,0)
of attaching charges for 1st or 3rd party billing.
"^DD",9000010,9000010,.26,23,0)
^^1^1^3050610^
"^DD",9000010,9000010,.26,23,1,0)
A pointer to the PFSS ACCOUNT FILE (#375)
"^DD",9000010,9000010,.26,"DT")
3050602
"^DD",9000010.18,9000010.18,.19,0)
DEPARTMENT CODE^F^^0;19^K:$L(X)>3!($L(X)<3) X
"^DD",9000010.18,9000010.18,.19,3)
Answer must be 3 characters in length.
"^DD",9000010.18,9000010.18,.19,21,0)
^.001^2^2^3050620^^^^
"^DD",9000010.18,9000010.18,.19,21,1,0)
The 3-digit code that defines the service area associated with the
"^DD",9000010.18,9000010.18,.19,21,2,0)
charge by the sending application.
"^DD",9000010.18,9000010.18,.19,23,0)
^.001^7^7^3050620^^^
"^DD",9000010.18,9000010.18,.19,23,1,0)
All CPT-based charges coming through PCE, which
"^DD",9000010.18,9000010.18,.19,23,2,0)
are not already associated with one of the
"^DD",9000010.18,9000010.18,.19,23,3,0)
Department Codes, are assigned a Department Code.
"^DD",9000010.18,9000010.18,.19,23,4,0)
The Department Code assigned is the Stop Code
"^DD",9000010.18,9000010.18,.19,23,5,0)
associated (in the HOSPITAL LOCATION file, #44)
"^DD",9000010.18,9000010.18,.19,23,6,0)
with the Hospital Location of the patient
"^DD",9000010.18,9000010.18,.19,23,7,0)
visit/encounter.
"^DD",9000010.18,9000010.18,.19,"DT")
3050425
"^DD",9000010.18,9000010.18,.2,0)
PFSS CHARGE ID^NJ8,0^^0;20^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",9000010.18,9000010.18,.2,3)
Type a Number between 1 and 99999999, 0 Decimal Digits
"^DD",9000010.18,9000010.18,.2,21,0)
^.001^4^4^3050610^^^^
"^DD",9000010.18,9000010.18,.2,21,1,0)
A numeric identifier of not more than 8 digits that uniquely
"^DD",9000010.18,9000010.18,.2,21,2,0)
identifies the charge item in the external medical billing
"^DD",9000010.18,9000010.18,.2,21,3,0)
system.  This data item is referred to as the "PFSS Charge
"^DD",9000010.18,9000010.18,.2,21,4,0)
Identifier" within the PFSS project documentation.
"^DD",9000010.18,9000010.18,.2,23,0)
^.001^3^3^3050610^^^
"^DD",9000010.18,9000010.18,.2,23,1,0)
The application providing the data to the PFSS CHARGE CACHE file
"^DD",9000010.18,9000010.18,.2,23,2,0)
uses $$GETCHGID^IBBAPI to obtain a unique identifying number for
"^DD",9000010.18,9000010.18,.2,23,3,0)
the original charge.
"^DD",9000010.18,9000010.18,.2,"DT")
3050606
"BLD",5740,6)
^135
**END**
**END**
