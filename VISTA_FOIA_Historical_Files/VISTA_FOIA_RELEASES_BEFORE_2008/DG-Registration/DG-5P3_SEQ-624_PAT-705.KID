Released DG*5.3*705 SEQ #624
Extracted from mail message
**KIDS**:DG*5.3*705^

**INSTALL NAME**
DG*5.3*705
"BLD",6298,0)
DG*5.3*705^REGISTRATION^0^3060620^y
"BLD",6298,4,0)
^9.64PA^2^1
"BLD",6298,4,2,0)
2
"BLD",6298,4,2,2,0)
^9.641^2.101^3
"BLD",6298,4,2,2,2,0)
PATIENT  (File-top level)
"BLD",6298,4,2,2,2,1,0)
^9.6411^.2924^27
"BLD",6298,4,2,2,2,1,.01,0)
NAME
"BLD",6298,4,2,2,2,1,.02,0)
SEX
"BLD",6298,4,2,2,2,1,.03,0)
DATE OF BIRTH
"BLD",6298,4,2,2,2,1,.09,0)
SOCIAL SECURITY NUMBER
"BLD",6298,4,2,2,2,1,.0901,0)
TERMINAL DIGIT OF SSN
"BLD",6298,4,2,2,2,1,.107,0)
LODGER WARD LOCATION
"BLD",6298,4,2,2,2,1,.108,0)
CURRENT ROOM
"BLD",6298,4,2,2,2,1,.14111,0)
CONFIDENTIAL ADDRESS COUNTY
"BLD",6298,4,2,2,2,1,.211,0)
K-NAME OF PRIMARY NOK
"BLD",6298,4,2,2,2,1,.2207,0)
K-ZIP+4
"BLD",6298,4,2,2,2,1,.2401,0)
FATHER'S NAME
"BLD",6298,4,2,2,2,1,.2402,0)
MOTHER'S NAME
"BLD",6298,4,2,2,2,1,.2403,0)
MOTHER'S MAIDEN NAME
"BLD",6298,4,2,2,2,1,.2924,0)
STREET ADDRESS 1 (CIVIL)
"BLD",6298,4,2,2,2,1,.307,0)
INELIGIBLE REASON
"BLD",6298,4,2,2,2,1,.3111,0)
EMPLOYER NAME
"BLD",6298,4,2,2,2,1,.3192,0)
COVERED BY HEALTH INSURANCE?
"BLD",6298,4,2,2,2,1,.322014,0)
ENVIR. CONT. REGISTRATION DATE
"BLD",6298,4,2,2,2,1,.322015,0)
ENVIR. CONT. EXAM DATE
"BLD",6298,4,2,2,2,1,.331,0)
E-NAME
"BLD",6298,4,2,2,2,1,.341,0)
D-NAME OF DESIGNEE
"BLD",6298,4,2,2,2,1,.361,0)
PRIMARY ELIGIBILITY CODE
"BLD",6298,4,2,2,2,1,.3611,0)
ELIGIBILITY STATUS
"BLD",6298,4,2,2,2,1,.3625,0)
*AMOUNT OF MILITARY RETIREMENT
"BLD",6298,4,2,2,2,1,.3628,0)
AMOUNT OF OTHER RETIREMENT
"BLD",6298,4,2,2,2,1,401.4,0)
DATE ENTERED ON SI LIST
"BLD",6298,4,2,2,2,1,991.07,0)
SCORE CALCULATION DATE
"BLD",6298,4,2,2,2.01,0)
ALIAS  (sub-file)
"BLD",6298,4,2,2,2.01,1,0)
^9.6411^.01^1
"BLD",6298,4,2,2,2.01,1,.01,0)
ALIAS
"BLD",6298,4,2,2,2.101,0)
DISPOSITION LOG-IN DATE/TIME  (sub-file)
"BLD",6298,4,2,2,2.101,1,0)
^9.6411^30^3
"BLD",6298,4,2,2,2.101,1,.01,0)
LOG IN DATE/TIME
"BLD",6298,4,2,2,2.101,1,5,0)
LOG OUT DATE TIME
"BLD",6298,4,2,2,2.101,1,30,0)
ATTORNEY'S NAME
"BLD",6298,4,2,222)
y^n^p^^^^n^^n
"BLD",6298,4,2,223)
I $$CKUPD^DG53705E()
"BLD",6298,4,2,224)

"BLD",6298,4,"APDD",2,2)

"BLD",6298,4,"APDD",2,2,.01)

"BLD",6298,4,"APDD",2,2,.02)

"BLD",6298,4,"APDD",2,2,.03)

"BLD",6298,4,"APDD",2,2,.09)

"BLD",6298,4,"APDD",2,2,.0901)

"BLD",6298,4,"APDD",2,2,.107)

"BLD",6298,4,"APDD",2,2,.108)

"BLD",6298,4,"APDD",2,2,.14111)

"BLD",6298,4,"APDD",2,2,.211)

"BLD",6298,4,"APDD",2,2,.2207)

"BLD",6298,4,"APDD",2,2,.2401)

"BLD",6298,4,"APDD",2,2,.2402)

"BLD",6298,4,"APDD",2,2,.2403)

"BLD",6298,4,"APDD",2,2,.2924)

"BLD",6298,4,"APDD",2,2,.307)

"BLD",6298,4,"APDD",2,2,.3111)

"BLD",6298,4,"APDD",2,2,.3192)

"BLD",6298,4,"APDD",2,2,.322014)

"BLD",6298,4,"APDD",2,2,.322015)

"BLD",6298,4,"APDD",2,2,.331)

"BLD",6298,4,"APDD",2,2,.341)

"BLD",6298,4,"APDD",2,2,.361)

"BLD",6298,4,"APDD",2,2,.3611)

"BLD",6298,4,"APDD",2,2,.3625)

"BLD",6298,4,"APDD",2,2,.3628)

"BLD",6298,4,"APDD",2,2,401.4)

"BLD",6298,4,"APDD",2,2,991.07)

"BLD",6298,4,"APDD",2,2.01)

"BLD",6298,4,"APDD",2,2.01,.01)

"BLD",6298,4,"APDD",2,2.101)

"BLD",6298,4,"APDD",2,2.101,.01)

"BLD",6298,4,"APDD",2,2.101,5)

"BLD",6298,4,"APDD",2,2.101,30)

"BLD",6298,4,"B",2,2)

"BLD",6298,"INI")
EN^DG53705I
"BLD",6298,"INIT")
CLEAN^DG53705I
"BLD",6298,"KRN",0)
^9.67PA^8989.52^19
"BLD",6298,"KRN",.4,0)
.4
"BLD",6298,"KRN",.401,0)
.401
"BLD",6298,"KRN",.402,0)
.402
"BLD",6298,"KRN",.403,0)
.403
"BLD",6298,"KRN",.5,0)
.5
"BLD",6298,"KRN",.84,0)
.84
"BLD",6298,"KRN",3.6,0)
3.6
"BLD",6298,"KRN",3.8,0)
3.8
"BLD",6298,"KRN",9.2,0)
9.2
"BLD",6298,"KRN",9.8,0)
9.8
"BLD",6298,"KRN",19,0)
19
"BLD",6298,"KRN",19.1,0)
19.1
"BLD",6298,"KRN",101,0)
101
"BLD",6298,"KRN",409.61,0)
409.61
"BLD",6298,"KRN",771,0)
771
"BLD",6298,"KRN",870,0)
870
"BLD",6298,"KRN",8989.51,0)
8989.51
"BLD",6298,"KRN",8989.52,0)
8989.52
"BLD",6298,"KRN",8994,0)
8994
"BLD",6298,"KRN","B",.4,.4)

"BLD",6298,"KRN","B",.401,.401)

"BLD",6298,"KRN","B",.402,.402)

"BLD",6298,"KRN","B",.403,.403)

"BLD",6298,"KRN","B",.5,.5)

"BLD",6298,"KRN","B",.84,.84)

"BLD",6298,"KRN","B",3.6,3.6)

"BLD",6298,"KRN","B",3.8,3.8)

"BLD",6298,"KRN","B",9.2,9.2)

"BLD",6298,"KRN","B",9.8,9.8)

"BLD",6298,"KRN","B",19,19)

"BLD",6298,"KRN","B",19.1,19.1)

"BLD",6298,"KRN","B",101,101)

"BLD",6298,"KRN","B",409.61,409.61)

"BLD",6298,"KRN","B",771,771)

"BLD",6298,"KRN","B",870,870)

"BLD",6298,"KRN","B",8989.51,8989.51)

"BLD",6298,"KRN","B",8989.52,8989.52)

"BLD",6298,"KRN","B",8994,8994)

"BLD",6298,"PRE")
DG53705E
"BLD",6298,"QUES",0)
^9.62^^
"BLD",6298,"REQB",0)
^9.611^^0
"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^n^p^^^^n^^n
"FIA",2,0,10)
I $$CKUPD^DG53705E()
"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2,.01)

"FIA",2,2,.02)

"FIA",2,2,.03)

"FIA",2,2,.09)

"FIA",2,2,.0901)

"FIA",2,2,.107)

"FIA",2,2,.108)

"FIA",2,2,.14111)

"FIA",2,2,.211)

"FIA",2,2,.2207)

"FIA",2,2,.2401)

"FIA",2,2,.2402)

"FIA",2,2,.2403)

"FIA",2,2,.2924)

"FIA",2,2,.307)

"FIA",2,2,.3111)

"FIA",2,2,.3192)

"FIA",2,2,.322014)

"FIA",2,2,.322015)

"FIA",2,2,.331)

"FIA",2,2,.341)

"FIA",2,2,.361)

"FIA",2,2,.3611)

"FIA",2,2,.3625)

"FIA",2,2,.3628)

"FIA",2,2,1)

"FIA",2,2,401.4)

"FIA",2,2,991.07)

"FIA",2,2,1000)

"FIA",2,2.01)
1
"FIA",2,2.01,.01)

"FIA",2,2.101)
1
"FIA",2,2.101,.01)

"FIA",2,2.101,5)

"FIA",2,2.101,30)

"INI")
EN^DG53705I
"INIT")
CLEAN^DG53705I
"IX",2,2,"ADGFMD01",0)
2^ADGFMD01^This x-ref calls the DG FIELD MONITOR event point.^MU^^F^I^I^2^^^^^A
"IX",2,2,"ADGFMD01",.1,0)
^^5^5^3021116
"IX",2,2,"ADGFMD01",.1,1,0)
This cross reference activates the DG FIELD MONITOR event point.
"IX",2,2,"ADGFMD01",.1,2,0)
Applications that wish to monitor edit activity related to this field may
"IX",2,2,"ADGFMD01",.1,3,0)
subscribe to that event point and take action as indicated by the changes
"IX",2,2,"ADGFMD01",.1,4,0)
that occur.  Refer to the DG FIELD MONITOR protocol for a description of
"IX",2,2,"ADGFMD01",.1,5,0)
the information available at the time of the event.
"IX",2,2,"ADGFMD01",1)
D FC^DGFCPROT(.DA,2,.01,"SET",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"ADGFMD01",2)
D FC^DGFCPROT(.DA,2,.01,"KILL",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"ADGFMD01",11.1,0)
^.114IA^1^1
"IX",2,2,"ADGFMD01",11.1,1,0)
1^F^2^.01^^^F
"IX",2,2,"ADGFMD03",0)
2^ADGFMD03^This x-ref calls the DG FIELD MONITOR event point.^MU^^F^I^I^2^^^^^A
"IX",2,2,"ADGFMD03",.1,0)
^^5^5^3021116
"IX",2,2,"ADGFMD03",.1,1,0)
This cross reference activates the DG FIELD MONITOR event point.
"IX",2,2,"ADGFMD03",.1,2,0)
Applications that wish to monitor edit activity related to this field may
"IX",2,2,"ADGFMD03",.1,3,0)
subscribe to that event point and take action as indicated by the changes
"IX",2,2,"ADGFMD03",.1,4,0)
that occur.  Refer to the DG FIELD MONITOR protocol for a description of
"IX",2,2,"ADGFMD03",.1,5,0)
the information available at the time of the event.
"IX",2,2,"ADGFMD03",1)
D FC^DGFCPROT(.DA,2,.03,"SET",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"ADGFMD03",2)
D FC^DGFCPROT(.DA,2,.03,"KILL",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"ADGFMD03",11.1,0)
^.114IA^1^1
"IX",2,2,"ADGFMD03",11.1,1,0)
1^F^2^.03^^^F
"IX",2,2,"ADGFMD09",0)
2^ADGFMD09^This x-ref calls the DG FIELD MONITOR event point.^MU^^F^I^I^2^^^^^A
"IX",2,2,"ADGFMD09",.1,0)
^^5^5^3021116
"IX",2,2,"ADGFMD09",.1,1,0)
This cross reference activates the DG FIELD MONITOR event point.
"IX",2,2,"ADGFMD09",.1,2,0)
Applications that wish to monitor edit activity related to this field may
"IX",2,2,"ADGFMD09",.1,3,0)
subscribe to that event point and take action as indicated by the changes
"IX",2,2,"ADGFMD09",.1,4,0)
that occur.  Refer to the DG FIELD MONITOR protocol for a description of
"IX",2,2,"ADGFMD09",.1,5,0)
the information available at the time of the event.
"IX",2,2,"ADGFMD09",1)
D FC^DGFCPROT(.DA,2,.09,"SET",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"ADGFMD09",2)
D FC^DGFCPROT(.DA,2,.09,"KILL",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"ADGFMD09",11.1,0)
^.114IA^1^1
"IX",2,2,"ADGFMD09",11.1,1,0)
1^F^2^.09^^^F
"IX",2,2,"ADTTM3",0)
2^ADTTM3^PRIMARY NOK Cross-Reference^MU^^R^^I^2^^^^^A
"IX",2,2,"ADTTM3",.1,0)
^^2^2^3050813
"IX",2,2,"ADTTM3",.1,1,0)
This cross-reference will update the PRIMARY NOK CHANGE DATE/TIME field
"IX",2,2,"ADTTM3",.1,2,0)
when the Primary Next of Kin data changes for a patient.
"IX",2,2,"ADTTM3",1)
D PNOK^DGDDDTTM
"IX",2,2,"ADTTM3",2)
D PNOK^DGDDDTTM
"IX",2,2,"ADTTM3",11.1,0)
^.114IA^10^10
"IX",2,2,"ADTTM3",11.1,1,0)
1^F^2^.211^^^F
"IX",2,2,"ADTTM3",11.1,2,0)
2^F^2^.212^^^F
"IX",2,2,"ADTTM3",11.1,3,0)
3^F^2^.213^^^F
"IX",2,2,"ADTTM3",11.1,4,0)
4^F^2^.214^^^F
"IX",2,2,"ADTTM3",11.1,5,0)
5^F^2^.215^^^F
"IX",2,2,"ADTTM3",11.1,6,0)
6^F^2^.216^^^F
"IX",2,2,"ADTTM3",11.1,7,0)
7^F^2^.217^^^F
"IX",2,2,"ADTTM3",11.1,8,0)
8^F^2^.218^^^F
"IX",2,2,"ADTTM3",11.1,9,0)
9^F^2^.2125^^^F
"IX",2,2,"ADTTM3",11.1,10,0)
10^F^2^.2207^^^F
"IX",2,2,"ADTTM5",0)
2^ADTTM5^E-CONTACT Cross-Reference^MU^^R^^I^2^^^^^A
"IX",2,2,"ADTTM5",.1,0)
^^2^2^3050813
"IX",2,2,"ADTTM5",.1,1,0)
This cross-reference will update the E-CONTACT CHANGE DATE/TIME field when
"IX",2,2,"ADTTM5",.1,2,0)
the Emergency Contact data changes for a patient.
"IX",2,2,"ADTTM5",1)
D ECON^DGDDDTTM
"IX",2,2,"ADTTM5",2)
D ECON^DGDDDTTM
"IX",2,2,"ADTTM5",11.1,0)
^.114IA^10^10
"IX",2,2,"ADTTM5",11.1,1,0)
1^F^2^.331^^^F
"IX",2,2,"ADTTM5",11.1,2,0)
2^F^2^.332^^^F
"IX",2,2,"ADTTM5",11.1,3,0)
3^F^2^.333^^^F
"IX",2,2,"ADTTM5",11.1,4,0)
4^F^2^.334^^^F
"IX",2,2,"ADTTM5",11.1,5,0)
5^F^2^.335^^^F
"IX",2,2,"ADTTM5",11.1,6,0)
6^F^2^.336^^^F
"IX",2,2,"ADTTM5",11.1,7,0)
7^F^2^.337^^^F
"IX",2,2,"ADTTM5",11.1,8,0)
8^F^2^.338^^^F
"IX",2,2,"ADTTM5",11.1,9,0)
9^F^2^.3305^^^F
"IX",2,2,"ADTTM5",11.1,10,0)
10^F^2^.2201^^^F
"IX",2,2,"ADTTM7",0)
2^ADTTM7^DESIGNEE Cross-Reference^MU^^R^^I^2^^^^^A
"IX",2,2,"ADTTM7",.1,0)
^^2^2^3050813
"IX",2,2,"ADTTM7",.1,1,0)
This cross-reference will update the DESIGNEE CHANGE DATE/TIME field when
"IX",2,2,"ADTTM7",.1,2,0)
the Designee data changes for a patient.
"IX",2,2,"ADTTM7",1)
D DESIG^DGDDDTTM
"IX",2,2,"ADTTM7",2)
D DESIG^DGDDDTTM
"IX",2,2,"ADTTM7",11.1,0)
^.114IA^10^10
"IX",2,2,"ADTTM7",11.1,1,0)
1^F^2^.341^^^F
"IX",2,2,"ADTTM7",11.1,2,0)
2^F^2^.342^^^F
"IX",2,2,"ADTTM7",11.1,3,0)
3^F^2^.343^^^F
"IX",2,2,"ADTTM7",11.1,4,0)
4^F^2^.344^^^F
"IX",2,2,"ADTTM7",11.1,5,0)
5^F^2^.345^^^F
"IX",2,2,"ADTTM7",11.1,6,0)
6^F^2^.346^^^F
"IX",2,2,"ADTTM7",11.1,7,0)
7^F^2^.347^^^F
"IX",2,2,"ADTTM7",11.1,8,0)
8^F^2^.348^^^F
"IX",2,2,"ADTTM7",11.1,9,0)
9^F^2^.3405^^^F
"IX",2,2,"ADTTM7",11.1,10,0)
10^F^2^.2202^^^F
"IX",2,2,"ANAM01",0)
2^ANAM01^This index keeps the NAME COMPONENTS file in synch with the .01 field.^MU^^F^IR^I^2^^^^^A
"IX",2,2,"ANAM01",.1,0)
^^3^3^3050611
"IX",2,2,"ANAM01",.1,1,0)
This cross reference uses Kernel name standardization APIs to keep the NAME
"IX",2,2,"ANAM01",.1,2,0)
COMPONENTS (#20) file record associated with the #.01 field synchronized
"IX",2,2,"ANAM01",.1,3,0)
with the data value stored in that field.
"IX",2,2,"ANAM01",1)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1,DG20NAME=X D NARY^XLFNAME7(.DG20NAME),UPDCOMP^XLFNAME2(2,.DA,.01,.DG20NAME,1.01,+$P($G(^DPT(DA,"NAME")),U),"CL30") K DG20NAME Q
"IX",2,2,"ANAM01",2)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1 D DELCOMP^XLFNAME2(2,.DA,.01,1.01) Q
"IX",2,2,"ANAM01",11.1,0)
^.114IA^1^1
"IX",2,2,"ANAM01",11.1,1,0)
1^F^2^.01^^1^F
"IX",2,2,"ANAM1001",0)
2^ANAM1001^This index keeps the NAME COMPONENTS file in synch with field #30.^MU^^F^IR^W^2.101^^^^^A
"IX",2,2,"ANAM1001",.1,0)
^^3^3^3050611
"IX",2,2,"ANAM1001",.1,1,0)
This cross reference uses Kernel name standardization APIs to keep the NAME
"IX",2,2,"ANAM1001",.1,2,0)
COMPONENTS (#20) file record associated with the #30 field synchronized
"IX",2,2,"ANAM1001",.1,3,0)
with the data value stored in that field.
"IX",2,2,"ANAM1001",1)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1,DG20NAME=X D NARY^XLFNAME7(.DG20NAME),UPDCOMP^XLFNAME2(2.101,.DA,30,.DG20NAME,100.21,,"CL30") K DG20NAME Q
"IX",2,2,"ANAM1001",2)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1 D DELCOMP^XLFNAME2(2.101,.DA,30,100.21) Q
"IX",2,2,"ANAM1001",11.1,0)
^.114IA^1^1
"IX",2,2,"ANAM1001",11.1,1,0)
1^F^2.101^30^^1^F
"IX",2,2,"ANAM201",0)
2^ANAM201^This index keeps the NAME COMPONENTS file in synch with the .01 field.^MU^^F^IR^W^2.01^^^^^A
"IX",2,2,"ANAM201",.1,0)
^^3^3^3050611
"IX",2,2,"ANAM201",.1,1,0)
This cross reference uses Kernel name standardization APIs to keep the NAME
"IX",2,2,"ANAM201",.1,2,0)
COMPONENTS (#20) file record associated with the #.01 field synchronized
"IX",2,2,"ANAM201",.1,3,0)
with the data value stored in that field.
"IX",2,2,"ANAM201",1)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1,DG20NAME=X D NARY^XLFNAME7(.DG20NAME),UPDCOMP^XLFNAME2(2.01,.DA,.01,.DG20NAME,100.03,,"CL30") K DG20NAME Q
"IX",2,2,"ANAM201",2)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1 D DELCOMP^XLFNAME2(2.01,.DA,.01,100.03) Q
"IX",2,2,"ANAM201",11.1,0)
^.114IA^1^1
"IX",2,2,"ANAM201",11.1,1,0)
1^F^2.01^.01^^1^F
"IX",2,2,"ANAM211",0)
2^ANAM211^This index keeps the NAME COMPONENTS file in synch with field #.211.^MU^^F^IR^I^2^^^^^A
"IX",2,2,"ANAM211",.1,0)
^^3^3^3050611
"IX",2,2,"ANAM211",.1,1,0)
This cross reference uses Kernel name standardization APIs to keep the NAME
"IX",2,2,"ANAM211",.1,2,0)
COMPONENTS (#20) file record associated with the #.211 field synchronized
"IX",2,2,"ANAM211",.1,3,0)
with the data value stored in that field.
"IX",2,2,"ANAM211",1)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1,DG20NAME=X D NARY^XLFNAME7(.DG20NAME),UPDCOMP^XLFNAME2(2,.DA,.211,.DG20NAME,1.02,+$P($G(^DPT(DA,"NAME")),U,2),"CL35") K DG20NAME Q
"IX",2,2,"ANAM211",2)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1 D DELCOMP^XLFNAME2(2,.DA,.211,1.02) Q
"IX",2,2,"ANAM211",11.1,0)
^.114IA^1^1
"IX",2,2,"ANAM211",11.1,1,0)
1^F^2^.211^^1^F
"IX",2,2,"ANAM2401",0)
2^ANAM2401^This index keeps the NAME COMPONENTS file in synch with field #.2401.^MU^^F^IR^I^2^^^^^A
"IX",2,2,"ANAM2401",.1,0)
^^3^3^3050611
"IX",2,2,"ANAM2401",.1,1,0)
This cross reference uses Kernel name standardization APIs to keep the NAME
"IX",2,2,"ANAM2401",.1,2,0)
COMPONENTS (#20) file record associated with the #.2401 field synchronized
"IX",2,2,"ANAM2401",.1,3,0)
with the data value stored in that field.
"IX",2,2,"ANAM2401",1)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1,DG20NAME=X D NARY^XLFNAME7(.DG20NAME),UPDCOMP^XLFNAME2(2,.DA,.2401,.DG20NAME,1.04,+$P($G(^DPT(DA,"NAME")),U,4),"CL35") K DG20NAME Q
"IX",2,2,"ANAM2401",2)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1 D DELCOMP^XLFNAME2(2,.DA,.2401,1.04) Q
"IX",2,2,"ANAM2401",11.1,0)
^.114IA^1^1
"IX",2,2,"ANAM2401",11.1,1,0)
1^F^2^.2401^^1^F
"IX",2,2,"ANAM2402",0)
2^ANAM2402^This index keeps the NAME COMPONENTS file in synch with field #.2402.^MU^^F^IR^I^2^^^^^A
"IX",2,2,"ANAM2402",.1,0)
^^3^3^3050611
"IX",2,2,"ANAM2402",.1,1,0)
This cross reference uses Kernel name standardization APIs to keep the NAME
"IX",2,2,"ANAM2402",.1,2,0)
COMPONENTS (#20) file record associated with the #.2402 field synchronized
"IX",2,2,"ANAM2402",.1,3,0)
with the data value stored in that field.
"IX",2,2,"ANAM2402",1)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1,DG20NAME=X D NARY^XLFNAME7(.DG20NAME),UPDCOMP^XLFNAME2(2,.DA,.2402,.DG20NAME,1.05,+$P($G(^DPT(DA,"NAME")),U,5),"CL35") K DG20NAME Q
"IX",2,2,"ANAM2402",2)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1 D DELCOMP^XLFNAME2(2,.DA,.2402,1.05) Q
"IX",2,2,"ANAM2402",11.1,0)
^.114IA^1^1
"IX",2,2,"ANAM2402",11.1,1,0)
1^F^2^.2402^^1^F
"IX",2,2,"ANAM2403",0)
2^ANAM2403^This index keeps the NAME COMPONENTS file in synch with field #.2403.^MU^^F^IR^I^2^^^^^A
"IX",2,2,"ANAM2403",.1,0)
^^3^3^3050611
"IX",2,2,"ANAM2403",.1,1,0)
This cross reference uses Kernel name standardization APIs to keep the NAME
"IX",2,2,"ANAM2403",.1,2,0)
COMPONENTS (#20) file record associated with the #.2403 field synchronized
"IX",2,2,"ANAM2403",.1,3,0)
with the data value stored in that field.
"IX",2,2,"ANAM2403",1)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1,DG20NAME=X D NARY^XLFNAME7(.DG20NAME),UPDCOMP^XLFNAME2(2,.DA,.2403,.DG20NAME,1.06,+$P($G(^DPT(DA,"NAME")),U,6),"CL35") K DG20NAME Q
"IX",2,2,"ANAM2403",2)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1 D DELCOMP^XLFNAME2(2,.DA,.2403,1.06) Q
"IX",2,2,"ANAM2403",11.1,0)
^.114IA^1^1
"IX",2,2,"ANAM2403",11.1,1,0)
1^F^2^.2403^^1^F
"IX",2,2,"ANAM331",0)
2^ANAM331^This index keeps the NAME COMPONENTS file in synch with field #.331.^MU^^F^IR^I^2^^^^^A
"IX",2,2,"ANAM331",.1,0)
^^3^3^3050611
"IX",2,2,"ANAM331",.1,1,0)
This cross reference uses Kernel name standardization APIs to keep the NAME
"IX",2,2,"ANAM331",.1,2,0)
COMPONENTS (#20) file record associated with the #.331 field synchronized
"IX",2,2,"ANAM331",.1,3,0)
with the data value stored in that field.
"IX",2,2,"ANAM331",1)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1,DG20NAME=X D NARY^XLFNAME7(.DG20NAME),UPDCOMP^XLFNAME2(2,.DA,.331,.DG20NAME,1.07,+$P($G(^DPT(DA,"NAME")),U,7),"CL35") K DG20NAME Q
"IX",2,2,"ANAM331",2)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1 D DELCOMP^XLFNAME2(2,.DA,.331,1.07) Q
"IX",2,2,"ANAM331",11.1,0)
^.114IA^1^1
"IX",2,2,"ANAM331",11.1,1,0)
1^F^2^.331^^1^F
"IX",2,2,"ANAM341",0)
2^ANAM341^This index keeps the NAME COMPONENTS file in synch with field #.341.^MU^^F^IR^I^2^^^^^A
"IX",2,2,"ANAM341",.1,0)
^^3^3^3050611
"IX",2,2,"ANAM341",.1,1,0)
This cross reference uses Kernel name standardization APIs to keep the NAME
"IX",2,2,"ANAM341",.1,2,0)
COMPONENTS (#20) file record associated with the #.341 field synchronized
"IX",2,2,"ANAM341",.1,3,0)
with the data value stored in that field.
"IX",2,2,"ANAM341",1)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1,DG20NAME=X D NARY^XLFNAME7(.DG20NAME),UPDCOMP^XLFNAME2(2,.DA,.341,.DG20NAME,1.09,+$P($G(^DPT(DA,"NAME")),U,9),"CL35") K DG20NAME Q
"IX",2,2,"ANAM341",2)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1 D DELCOMP^XLFNAME2(2,.DA,.341,1.09) Q
"IX",2,2,"ANAM341",11.1,0)
^.114IA^1^1
"IX",2,2,"ANAM341",11.1,1,0)
1^F^2^.341^^1^F
"IX",2,2,"NOP",0)
2^NOP^Index of standardized values that don't match .01 value.^R^^F^IR^I^2^^^^^LS
"IX",2,2,"NOP",.1,0)
^^5^5^3050611
"IX",2,2,"NOP",.1,1,0)
This cross reference facilitates PATIENT file lookups by a standardized name
"IX",2,2,"NOP",.1,2,0)
value.  In addition to the standardization applied by Kernel name utilities,
"IX",2,2,"NOP",.1,3,0)
hyphens and apostrophes are also removed from the name value.  This cross
"IX",2,2,"NOP",.1,4,0)
reference is only set if the standardized name is different than the patient
"IX",2,2,"NOP",.1,5,0)
name value stored in the NAME (#.01) field.
"IX",2,2,"NOP",1)
S ^DPT("NOP",$E(X,1,30),DA)=""
"IX",2,2,"NOP",2)
K ^DPT("NOP",$E(X,1,30),DA)
"IX",2,2,"NOP",2.5)
K ^DPT("NOP")
"IX",2,2,"NOP",11.1,0)
^.114IA^1^1
"IX",2,2,"NOP",11.1,1,0)
1^F^2^.01^30^1^F
"IX",2,2,"NOP",11.1,1,2)
S X=$$NOP^XLFNAME7(X)
"IX",2,2,"NOP",11.1,1,4)
S X=$$NOP^XLFNAME7(X)
"IX",2,2.01,"AVAFC20101",0)
2.01^AVAFC20101^This x-ref calls the DG FIELD MONITOR event point.^MU^^F^I^I^2.01^^^^^A
"IX",2,2.01,"AVAFC20101",.1,0)
^^5^5^3040702
"IX",2,2.01,"AVAFC20101",.1,1,0)
This cross reference activates the DG FIELD MONITOR event point.
"IX",2,2.01,"AVAFC20101",.1,2,0)
Applications that wish to monitor edit activity related to this field may
"IX",2,2.01,"AVAFC20101",.1,3,0)
subscribe to that event point and take action as indicated by the changes
"IX",2,2.01,"AVAFC20101",.1,4,0)
that occur.  Refer to the DG FIELD MONITOR protocol for a description of
"IX",2,2.01,"AVAFC20101",.1,5,0)
the information available at the time of the event.
"IX",2,2.01,"AVAFC20101",1)
D FC^DGFCPROT(.DA,2.01,.01,"SET",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2.01,"AVAFC20101",2)
D FC^DGFCPROT(.DA,2.01,.01,"KILL",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2.01,"AVAFC20101",11.1,0)
^.114IA^1^1
"IX",2,2.01,"AVAFC20101",11.1,1,0)
1^F^2.01^.01^^^F
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
705^3060620^539
"PRE")
DG53705E
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DG53705E")
0^^B967253
"RTN","DG53705E",1,0)
DG53705E ;ALB/TMK - DG*5.3*705 Environment check ; 05-APR-2006
"RTN","DG53705E",2,0)
 ;;5.3;Registration;**705**;Aug 13, 1993
"RTN","DG53705E",3,0)
 ;
"RTN","DG53705E",4,0)
EN ; Check for need to update
"RTN","DG53705E",5,0)
 Q
"RTN","DG53705E",6,0)
 ;
"RTN","DG53705E",7,0)
CKUPD() ; Check to see if update is necessary
"RTN","DG53705E",8,0)
 ; Return 1 if necessary, 0 if not necessary
"RTN","DG53705E",9,0)
 N HASDVB54,Z,ZERR,DIERR
"RTN","DG53705E",10,0)
 S HASDVB54=0
"RTN","DG53705E",11,0)
 D FIND^DIC(9.7,"","","X","DVB*4.0*54","","","","","Z","ZERR")
"RTN","DG53705E",12,0)
 I $G(Z("DILIST",0)),$S($G(^TMP("DG*5.3*705",$J))!$D(^DIC(2,"%","B","QAM",7))!$D(^DD(2,0,"PT",19000.00001,.01))!$D(^DD(2,0,"ID","GARB")):1,1:0) S HASDVB54=1
"RTN","DG53705E",13,0)
 D CLEAN^DILF
"RTN","DG53705E",14,0)
 Q HASDVB54
"RTN","DG53705E",15,0)
 ;
"RTN","DG53705I")
0^^B30880176
"RTN","DG53705I",1,0)
DG53705I ;ALB/TMK - DG*5.3*705 Pre-Install Routine ; 05-APR-2006
"RTN","DG53705I",2,0)
 ;;5.3;Registration;**705**;Aug 13, 1993
"RTN","DG53705I",3,0)
 ;
"RTN","DG53705I",4,0)
EN ; Description: This entry point will be used as a driver for
"RTN","DG53705I",5,0)
 ;  pre-installation updates.
"RTN","DG53705I",6,0)
 ; DBIA: 4542 for direct DD global access/kills and for one-time
"RTN","DG53705I",7,0)
 ;       call to Fileman PT node cleanup (PT^DDUCHK1)
"RTN","DG53705I",8,0)
 ;
"RTN","DG53705I",9,0)
 ; If the patch DVB*4*54 was not installed, skip the cleanup
"RTN","DG53705I",10,0)
 N %
"RTN","DG53705I",11,0)
 K ^TMP("DG*5.3*705",$J)
"RTN","DG53705I",12,0)
 S %=$$CKUPD^DG53705E()
"RTN","DG53705I",13,0)
 I '% D  Q
"RTN","DG53705I",14,0)
 . N ZMES,I
"RTN","DG53705I",15,0)
 . F I=1,2 S ZMES(I)=" "
"RTN","DG53705I",16,0)
 . S ZMES(3)="**** PATCH IS BEING INSTALLED IN NON-UPDATE MODE ****"
"RTN","DG53705I",17,0)
 . S ZMES(4)=" "
"RTN","DG53705I",18,0)
 . S ZMES(5)="NOTE: THE SYSTEM HAS DETERMINED THAT YOUR PATIENT FILE DOES NOT HAVE BAD"
"RTN","DG53705I",19,0)
 . S ZMES(6)="      DATA FROM PATCH DVB*4*54.  THEREFORE, THE STATUS OF PATCH DG*5.3*705"
"RTN","DG53705I",20,0)
 . S ZMES(7)="      WILL BE 'INSTALLED', HOWEVER NO UPDATES TO YOUR SYSTEM WILL BE MADE."
"RTN","DG53705I",21,0)
 . D MES^XPDUTL(.ZMES)
"RTN","DG53705I",22,0)
 ;
"RTN","DG53705I",23,0)
 D BMES^XPDUTL("**** PATCH IS BEING INSTALLED IN UPDATE MODE ****")
"RTN","DG53705I",24,0)
 D DELMISC
"RTN","DG53705I",25,0)
 D DELPTR
"RTN","DG53705I",26,0)
 D DELXREF
"RTN","DG53705I",27,0)
 D DELID
"RTN","DG53705I",28,0)
 D DELDESCR
"RTN","DG53705I",29,0)
 D DONE
"RTN","DG53705I",30,0)
 Q
"RTN","DG53705I",31,0)
 ;
"RTN","DG53705I",32,0)
DELMISC ; Delete various miscellaneous nodes:
"RTN","DG53705I",33,0)
 ; write access, help, executable help, audit, etc
"RTN","DG53705I",34,0)
 D BMES^XPDUTL(">>> Deleting bad write access, help, audit, other miscellaneous nodes")
"RTN","DG53705I",35,0)
 K ^DD(2,.12113,9),^DD(2,.14112,9)
"RTN","DG53705I",36,0)
 K ^DD(2,.108,3)
"RTN","DG53705I",37,0)
 K ^DD(2,.391,4)
"RTN","DG53705I",38,0)
 F Z=.01,.2924,.3111,.3192,991.07 K ^DD(2,Z,"AUDIT")
"RTN","DG53705I",39,0)
 K ^DD(2.312,.18,"AUDIT")
"RTN","DG53705I",40,0)
 K ^DIC(2,0,"AUDIT")
"RTN","DG53705I",41,0)
 K ^DD(2,0,"VR")
"RTN","DG53705I",42,0)
 K ^DD(2,0,"VRPK")
"RTN","DG53705I",43,0)
 K ^DIC(2,"%",7,0)
"RTN","DG53705I",44,0)
 K ^DIC(2,"%","B","QAM",7)
"RTN","DG53705I",45,0)
 D STEP
"RTN","DG53705I",46,0)
 Q
"RTN","DG53705I",47,0)
 ;
"RTN","DG53705I",48,0)
DELPTR ; Delete bad pointer nodes
"RTN","DG53705I",49,0)
 N Z,Z0
"RTN","DG53705I",50,0)
 D BMES^XPDUTL(">>> Deleting bad pointer nodes")
"RTN","DG53705I",51,0)
 S DDUCFI=2,DDUCFIX=1 D PT^DDUCHK1 ; IA
"RTN","DG53705I",52,0)
 D STEP
"RTN","DG53705I",53,0)
 Q
"RTN","DG53705I",54,0)
 ;
"RTN","DG53705I",55,0)
DELID ; Delete bad identifier nodes
"RTN","DG53705I",56,0)
 N Z
"RTN","DG53705I",57,0)
 D BMES^XPDUTL(">>> Deleting bad identifier nodes")
"RTN","DG53705I",58,0)
 F Z=.2924,.302,.351,"GARB","WARD","WR","ZREW" K ^DD(2,0,"ID",Z)
"RTN","DG53705I",59,0)
 D STEP
"RTN","DG53705I",60,0)
 Q
"RTN","DG53705I",61,0)
 ;
"RTN","DG53705I",62,0)
DELDESCR ;Delete excess description nodes
"RTN","DG53705I",63,0)
 N Z
"RTN","DG53705I",64,0)
 D BMES^XPDUTL(">>> Deleting bad field description nodes")
"RTN","DG53705I",65,0)
 S Z=1 F  S Z=$O(^DD(2,.107,21,Z)) Q:'Z  K ^DD(2,.107,21,Z,0)
"RTN","DG53705I",66,0)
 D STEP
"RTN","DG53705I",67,0)
 Q
"RTN","DG53705I",68,0)
 ;
"RTN","DG53705I",69,0)
DELXREF ; Delete cross references and indexes
"RTN","DG53705I",70,0)
 N DGZ,DGZF,DGZFLD,DGZN,DGDEL,DGXREF,X,Z
"RTN","DG53705I",71,0)
 D BMES^XPDUTL(">>> Deleting bad cross references and indexes")
"RTN","DG53705I",72,0)
 ;
"RTN","DG53705I",73,0)
 ; Delete indexes 'ADGFM01', 'ADGFM03', 'ADGFM09', 'ADGFM351'
"RTN","DG53705I",74,0)
 F DGZ="ADGFM01","ADGFM03","ADGFM09","ADGFM351" D DELIXN^DDMOD(2,DGZ)
"RTN","DG53705I",75,0)
 ; Delete a trigger xref for file 2.01, field 100.03
"RTN","DG53705I",76,0)
 S Z=0 F  S Z=$O(^DD(2.01,100.03,1,Z)) Q:'Z  I $P($G(^DD(2.01,100.03,1,Z,0)),U,3,5)="TRIGGER^20^.01" D DELIX^DDMOD(2.01,100.03,Z) Q
"RTN","DG53705I",77,0)
 ;
"RTN","DG53705I",78,0)
 F Z=2:1 S X=$P($T(@("XREF+"_Z)),";;",2) Q:X=""  S DGZ(+X,+$P(X,U,2),$P(X,U,4))=$P(X,U,3) ;Extracts xrefs to delete
"RTN","DG53705I",79,0)
 ;
"RTN","DG53705I",80,0)
 S DGZF=0
"RTN","DG53705I",81,0)
 F  S DGZF=$O(DGZ(DGZF)) Q:'DGZF  S DGZFLD=0 F  S DGZFLD=$O(DGZ(DGZF,DGZFLD)) Q:'DGZFLD  S DGZN="" F  S DGZN=$O(DGZ(DGZF,DGZFLD,DGZN)) Q:DGZN=""  D
"RTN","DG53705I",82,0)
 . S DGZ=$G(DGZ(DGZF,DGZFLD,DGZN))
"RTN","DG53705I",83,0)
 . I 'DGZ,'$$CHK1(DGZF,DGZFLD,DGZN) K ^DD(DGZF,0,"IX",DGZN,DGZF,DGZFLD)
"RTN","DG53705I",84,0)
 . I DGZ S Z=$$CHK2(DGZF,DGZFLD,DGZN,DGZ) I Z D DELIX^DDMOD(DGZF,DGZFLD,Z)
"RTN","DG53705I",85,0)
 K ^TMP("DIERR",$J)
"RTN","DG53705I",86,0)
 D STEP
"RTN","DG53705I",87,0)
 Q
"RTN","DG53705I",88,0)
 ;
"RTN","DG53705I",89,0)
CHK1(FILE,FLD,XREFNM) ; Check if xref exists
"RTN","DG53705I",90,0)
 ; Functon returns 1 if it exists, 0 if it doesn't
"RTN","DG53705I",91,0)
 N Z,OK
"RTN","DG53705I",92,0)
 S (OK,Z)=0
"RTN","DG53705I",93,0)
 F  S Z=$O(^DD(FILE,FLD,1,Z)) Q:'Z  I $P($G(^(Z,0)),U,2)=XREFNM S OK=1 Q
"RTN","DG53705I",94,0)
 Q OK
"RTN","DG53705I",95,0)
 ;
"RTN","DG53705I",96,0)
CHK2(FILE,FLD,XREFNM,XREFNO) ; Returns ien of xref
"RTN","DG53705I",97,0)
 N Z,NUM
"RTN","DG53705I",98,0)
 S Z=0
"RTN","DG53705I",99,0)
 S NUM=$S($P($G(^DD(FILE,FLD,1,XREFNO,0)),U,2)=XREFNM:XREFNO,1:0)
"RTN","DG53705I",100,0)
 I 'NUM F  S Z=$O(^DD(FILE,FLD,1,Z)) Q:'Z  I $P($G(^DD(FILE,FLD,1,Z,0)),U,2)=XREFNM S NUM=Z Q
"RTN","DG53705I",101,0)
 Q NUM
"RTN","DG53705I",102,0)
 ;
"RTN","DG53705I",103,0)
STEP D BMES^XPDUTL(">>> Step Completed.")
"RTN","DG53705I",104,0)
 Q
"RTN","DG53705I",105,0)
 ;
"RTN","DG53705I",106,0)
DONE D BMES^XPDUTL(">>> Pre-install Cleanup Completed.")
"RTN","DG53705I",107,0)
 S ^TMP("DG*5.3*705",$J)="1^PATCH DVB*4*54 INSTALLED"
"RTN","DG53705I",108,0)
 Q
"RTN","DG53705I",109,0)
 ;
"RTN","DG53705I",110,0)
CLEAN ; Erase TMP global used to screen DD update
"RTN","DG53705I",111,0)
 K ^TMP("DG*5.3*705",$J)
"RTN","DG53705I",112,0)
 Q
"RTN","DG53705I",113,0)
 ;
"RTN","DG53705I",114,0)
XREF ; Xrefs that must be deleted
"RTN","DG53705I",115,0)
 ;; Pieces are: File #^Fld #^xref default #or null^xref name
"RTN","DG53705I",116,0)
 ;;2^.01^^AHL
"RTN","DG53705I",117,0)
 ;;2^.02^^AHL2
"RTN","DG53705I",118,0)
 ;;2^.03^^AHL3
"RTN","DG53705I",119,0)
 ;;2^.03^5^DGFCMON
"RTN","DG53705I",120,0)
 ;;2^.05^993^AENR05
"RTN","DG53705I",121,0)
 ;;2^.06^^AHL5
"RTN","DG53705I",122,0)
 ;;2^.09^^AHL4
"RTN","DG53705I",123,0)
 ;;2^.102^^A4EC
"RTN","DG53705I",124,0)
 ;;2^.118^3^AENR118
"RTN","DG53705I",125,0)
 ;;2^.121^1^AENR121
"RTN","DG53705I",126,0)
 ;;2^.12111^1^AENR12111
"RTN","DG53705I",127,0)
 ;;2^.1219^1^AENR1219
"RTN","DG53705I",128,0)
 ;;2^.14111^1^AENR14111
"RTN","DG53705I",129,0)
 ;;2^.152^4^AU
"RTN","DG53705I",130,0)
 ;;2^.1656^1^AENR1656
"RTN","DG53705I",131,0)
 ;;2^.293^1^AENR293
"RTN","DG53705I",132,0)
 ;;2^.302^^ACP
"RTN","DG53705I",133,0)
 ;;2^.302^^AP
"RTN","DG53705I",134,0)
 ;;2^.3025^3^AENR3025
"RTN","DG53705I",135,0)
 ;;2^.3025^^CHK4
"RTN","DG53705I",136,0)
 ;;2^.304^1^AENR304
"RTN","DG53705I",137,0)
 ;;2^.307^1^AENR307
"RTN","DG53705I",138,0)
 ;;2^.3111^2^AENR3111
"RTN","DG53705I",139,0)
 ;;2^.31115^^AEMP
"RTN","DG53705I",140,0)
 ;;2^.31115^992^AENR31115
"RTN","DG53705I",141,0)
 ;;2^.31115^^MAC
"RTN","DG53705I",142,0)
 ;;2^.312^2^AENR312
"RTN","DG53705I",143,0)
 ;;2^.313^992^AENR313
"RTN","DG53705I",144,0)
 ;;2^.3192^1^AENR3192
"RTN","DG53705I",145,0)
 ;;2^.32102^^AI
"RTN","DG53705I",146,0)
 ;;2^.32103^^AK
"RTN","DG53705I",147,0)
 ;;2^.323^992^AENR323
"RTN","DG53705I",148,0)
 ;;2^.351^^AEXP
"RTN","DG53705I",149,0)
 ;;2^.351^^AHL6
"RTN","DG53705I",150,0)
 ;;2^.351^^AT
"RTN","DG53705I",151,0)
 ;;2^.353^1^AENR353
"RTN","DG53705I",152,0)
 ;;2^.354^1^AENR354
"RTN","DG53705I",153,0)
 ;;2^.361^^AR
"RTN","DG53705I",154,0)
 ;;2^.3611^3^AENR3611
"RTN","DG53705I",155,0)
 ;;2^.3612^2^AENR3612
"RTN","DG53705I",156,0)
 ;;2^.3615^1^AENR3615
"RTN","DG53705I",157,0)
 ;;2^.3617^1^AENR3617
"RTN","DG53705I",158,0)
 ;;2^.3618^1^AENR3618
"RTN","DG53705I",159,0)
 ;;2^.36205^^BEN
"RTN","DG53705I",160,0)
 ;;2^.36205^^CHK1
"RTN","DG53705I",161,0)
 ;;2^.36215^^CHK2
"RTN","DG53705I",162,0)
 ;;2^.36235^^CHK3
"RTN","DG53705I",163,0)
 ;;2^.381^^AT
"RTN","DG53705I",164,0)
 ;;2^.382^1^AENR382
"RTN","DG53705I",165,0)
 ;;2^.391^1^AENR391
"RTN","DG53705I",166,0)
 ;;2^.392^1^AENR392
"RTN","DG53705I",167,0)
 ;;2^.393^1^AENR393
"RTN","DG53705I",168,0)
 ;;2^.394^1^AENR394
"RTN","DG53705I",169,0)
 ;;2^.395^1^AENR395
"RTN","DG53705I",170,0)
 ;;2^.532^2^AENR532
"RTN","DG53705I",171,0)
 ;;2^.533^1^AENR533
"RTN","DG53705I",172,0)
 ;;2^1010.1511^1^AENR10101511
"RTN","DG53705I",173,0)
 ;;2^1010.159^1^AENR1010159
"RTN","DG53705I",174,0)
 ;;2^1901^2^AN
"RTN","DG53705I",175,0)
 ;;2.04^.01^1^AENR01
"RTN","DG53705I",176,0)
 ;;2.04^2^1^AENR2
"RTN","DG53705I",177,0)
 ;;2.04^3^1^AENR3
"RTN","DG53705I",178,0)
 ;;2.312^.01^6^AENR01
"RTN","DG53705I",179,0)
 ;;2.312^.18^2^AENR18
"RTN","DG53705I",180,0)
 ;;2.312^1^2^AENR1
"RTN","DG53705I",181,0)
 ;;2.312^2^1^AENR2
"RTN","DG53705I",182,0)
 ;;2.312^3^2^AENR3
"RTN","DG53705I",183,0)
 ;;2.312^6^1^AENR6
"RTN","DG53705I",184,0)
 ;;2.312^8^2^AENR8
"RTN","DG53705I",185,0)
 ;;2.312^17^1^AENR17
"RTN","DG53705I",186,0)
 ;;2.396^.01^2^AENR01
"RTN","DG53705I",187,0)
 ;;2.397^.01^2^AENR01
"RTN","DG53705I",188,0)
 ;;2.397^1^1^AENR1
"RTN","DG53705I",189,0)
 ;;2.398^.01^2^AENR01
"RTN","DG53705I",190,0)
 ;;2.398^1^1^AENR1
"RTN","DG53705I",191,0)
 ;;2.398^2^1^AENR2
"UP",2,2.01,-1)
2^.01
"UP",2,2.01,0)
2.01
"UP",2,2.101,-1)
2^DIS
"UP",2,2.101,0)
2.101
"VER")
8.0^22.0
"^DD",2,2,.01,0)
NAME^RFX^^0;1^K:$L(X)>30!($L(X)<3) X I $D(X) S DG20NAME=X,(X,DG20NAME)=$$FORMAT^XLFNAME7(.DG20NAME,3,30) K:'$L(X) X,DG20NAME S:$D(X) DGNEWVAL=X
"^DD",2,2,.01,.1)

"^DD",2,2,.01,1,0)
^.1
"^DD",2,2,.01,1,1,0)
2^B
"^DD",2,2,.01,1,1,1)
S ^DPT("B",$E(X,1,30),DA)=""
"^DD",2,2,.01,1,1,2)
K ^DPT("B",$E(X,1,30),DA)
"^DD",2,2,.01,1,2,0)
2^BS5^MUMPS
"^DD",2,2,.01,1,2,1)
Q:$P(^DPT(DA,0),U,9)']""  S ^DPT("BS5",$E(X,1)_$E($P(^(0),U,9),6,9),DA)=""
"^DD",2,2,.01,1,2,2)
Q:$P(^DPT(DA,0),U,9)']""  K ^DPT("BS5",$E(X,1)_$E($P(^(0),U,9),6,9),DA)
"^DD",2,2,.01,1,3,0)
2^AENR01^MUMPS
"^DD",2,2,.01,1,3,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.01,1,3,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.01,1,3,3)
DO NOT DELETE
"^DD",2,2,.01,1,3,"%D",0)
^^2^2^2971007^^^^
"^DD",2,2,.01,1,3,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.01,1,3,"%D",2,0)
enrollment. 
"^DD",2,2,.01,1,3,"DT")
2971007
"^DD",2,2,.01,1,4,0)
2^AODS2^MUMPS
"^DD",2,2,.01,1,4,1)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.01,1,4,2)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.01,1,5,0)
2^ABUL^MUMPS
"^DD",2,2,.01,1,5,1)
K DGNEWVAL Q
"^DD",2,2,.01,1,5,2)
S DFN=DA D ^DGPATN K DGNEWVAL Q
"^DD",2,2,.01,1,5,"%D",0)
^^2^2^2950110^
"^DD",2,2,.01,1,5,"%D",1,0)
This cross-reference will generate a mail message when a patient is deleted
"^DD",2,2,.01,1,5,"%D",2,0)
or the patient's name is changed.
"^DD",2,2,.01,1,5,"DT")
2950110
"^DD",2,2,.01,1,301,0)
2^IVM01^MUMPS
"^DD",2,2,.01,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.01,1,301,2)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.01,1,301,"%D",0)
^^5^5^2930513^
"^DD",2,2,.01,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.01,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.01,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.01,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.01,1,301,"DT")
2930513
"^DD",2,2,.01,1,991,0)
2^AVAFC01^MUMPS
"^DD",2,2,.01,1,991,1)
I '$D(DFN),($T(AVAFC^VAFCDD01)'="") S VAFCF=".01;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.01,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".01;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.01,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.01,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.01,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.01,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.01,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.01,1,991,"%D",5,0)
 
"^DD",2,2,.01,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.01,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.01,1,991,"%D",8,0)
process.
"^DD",2,2,.01,1,991,"%D",9,0)
 
"^DD",2,2,.01,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.01,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.01,1,991,"%D",12,0)
 
"^DD",2,2,.01,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.01,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.01,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.01,1,991,"DT")
2970825
"^DD",2,2,.01,1,992,0)
2^AMPIMIS^MUMPS
"^DD",2,2,.01,1,992,1)
I $T(SET^VAFCMIS)'=""&('$D(VAFCNO)) D SET^VAFCMIS(DA)
"^DD",2,2,.01,1,992,2)
I $T(KILL^VAFCMIS)'=""&('$D(VAFCNO)) D KILL^VAFCMIS(DA)
"^DD",2,2,.01,1,992,"%D",0)
^^4^4^2980114^^^^
"^DD",2,2,.01,1,992,"%D",1,0)
Temporary cross reference that lets the MPI Missing ICN job know that a
"^DD",2,2,.01,1,992,"%D",2,0)
patient was added to the Patient file, via another package other than
"^DD",2,2,.01,1,992,"%D",3,0)
PIMS, and needs to get an ICN.  Once the ICN is assigned (local or
"^DD",2,2,.01,1,992,"%D",4,0)
national) the cross reference is killed.
"^DD",2,2,.01,1,992,"DT")
3030603
"^DD",2,2,.01,1,993,0)
2^ADGRU01^MUMPS
"^DD",2,2,.01,1,993,1)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.01,1,993,2)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.01,1,993,"%D",0)
^^9^9^3000208^
"^DD",2,2,.01,1,993,"%D",1,0)
This cross reference is used to remember that changes were made to a
"^DD",2,2,.01,1,993,"%D",2,0)
monitored data field in the PATIENT File (#2) required for a vendor
"^DD",2,2,.01,1,993,"%D",3,0)
RAI/MDS COTS system.  Execution of this cross reference will create an
"^DD",2,2,.01,1,993,"%D",4,0)
entry in the ADT/HL7 PIVOT file (#391.71) and mark it as requiring
"^DD",2,2,.01,1,993,"%D",5,0)
transmission of an HL7 demographic A08 update message to the COTS
"^DD",2,2,.01,1,993,"%D",6,0)
interface.
"^DD",2,2,.01,1,993,"%D",7,0)
 
"^DD",2,2,.01,1,993,"%D",8,0)
The local variable DGRUGA08 will be set to 1 if the cross reference is not
"^DD",2,2,.01,1,993,"%D",9,0)
to be executed as part of a re-indexing.
"^DD",2,2,.01,1,993,"DT")
3000208
"^DD",2,2,.01,3)
Enter name in 'LAST,FIRST MIDDLE SUFFIX' format, must be 3-30 characters in length.
"^DD",2,2,.01,7.5)
D INPUT^DGRPDD1
"^DD",2,2,.01,20,0)
^.3LA^1^1
"^DD",2,2,.01,20,1,0)
DEMOG^
"^DD",2,2,.01,21,0)
^^4^4^2990208^^^^
"^DD",2,2,.01,21,1,0)
Enter the patient's name in 'LAST,FIRST MIDDLE SUFFIX' format.
"^DD",2,2,.01,21,2,0)
This value must be 3-30 characters in length and may contain only uppercase
"^DD",2,2,.01,21,3,0)
alpha characters, spaces, apostrophes, hyphens and one comma.  All other
"^DD",2,2,.01,21,4,0)
characters and parenthetical text will be removed.
"^DD",2,2,.01,"AUDIT")
n
"^DD",2,2,.01,"AX")
I 1
"^DD",2,2,.01,"DEL",100,0)
I $D(^OR(100,"ACT",DA_";DPT(")) D EN^DDIOL("Patient orders must be deleted first.","","!?0")
"^DD",2,2,.01,"DEL",401,0)
I $O(^DGPM("C",DA,0)) W *7,!,"Delete Patient Movements First",!
"^DD",2,2,.01,"DEL",1900,0)
I $N(^DPT(DA,"S",DT))+1 W *7,!,"APPOINTMENT(S) PENDING!"
"^DD",2,2,.01,"DEL",3000,0)
I $N(^PS(55,DA,"P",0))+1 W *7,!,"PATIENT HAS OUTPATIENT PRESCRIPTIONS"
"^DD",2,2,.01,"DEL",999999,0)
D DEL^DPTLK2
"^DD",2,2,.01,"DT")
3050611
"^DD",2,2,.02,0)
SEX^RSa^M:MALE;F:FEMALE;^0;2^Q
"^DD",2,2,.02,1,0)
^.1^^-1
"^DD",2,2,.02,1,1,0)
2^ASX
"^DD",2,2,.02,1,1,1)
S ^DPT("ASX",$E(X,1,30),DA)=""
"^DD",2,2,.02,1,1,2)
K ^DPT("ASX",$E(X,1,30),DA)
"^DD",2,2,.02,1,2,0)
2^AENR02^MUMPS
"^DD",2,2,.02,1,2,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.02,1,2,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.02,1,2,3)
DO NOT DELETE
"^DD",2,2,.02,1,2,"%D",0)
^^2^2^2971007^^^
"^DD",2,2,.02,1,2,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.02,1,2,"%D",2,0)
enrollment. 
"^DD",2,2,.02,1,2,"DT")
2971007
"^DD",2,2,.02,1,301,0)
2^IVM02^MUMPS
"^DD",2,2,.02,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.02,1,301,2)
S IVMX=X,IVMKILL=2,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX,IVMKILL
"^DD",2,2,.02,1,301,"%D",0)
^^8^8^2991027^
"^DD",2,2,.02,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.02,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.02,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.02,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.02,1,301,"%D",5,0)
 
"^DD",2,2,.02,1,301,"%D",6,0)
Also, if this field is edited, this cross-reference will check to see if the
"^DD",2,2,.02,1,301,"%D",7,0)
patient requires a financial query to be sent to the IVM Center (Data
"^DD",2,2,.02,1,301,"%D",8,0)
Collection Division (DCD).
"^DD",2,2,.02,1,301,"DT")
2991027
"^DD",2,2,.02,1,991,0)
2^AVAFC02^MUMPS
"^DD",2,2,.02,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".02;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.02,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".02;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.02,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.02,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.02,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.02,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.02,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.02,1,991,"%D",5,0)
 
"^DD",2,2,.02,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.02,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.02,1,991,"%D",8,0)
process.
"^DD",2,2,.02,1,991,"%D",9,0)
 
"^DD",2,2,.02,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.02,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.02,1,991,"%D",12,0)
  
"^DD",2,2,.02,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.02,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.02,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.02,1,991,"DT")
2970825
"^DD",2,2,.02,1,992,0)
2^ADGRU02^MUMPS
"^DD",2,2,.02,1,992,1)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.02,1,992,2)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.02,1,992,"%D",0)
^^9^9^2990920^
"^DD",2,2,.02,1,992,"%D",1,0)
This cross reference is used to remember that changes were made to a 
"^DD",2,2,.02,1,992,"%D",2,0)
monitored data field in the PATIENT File (#2) required for a vendor
"^DD",2,2,.02,1,992,"%D",3,0)
RAI/MDS COTS system.  Execution of this cross reference will create
"^DD",2,2,.02,1,992,"%D",4,0)
an entry in the ADT/HL7 PIVOT file (#391.71) and mark it as requiring
"^DD",2,2,.02,1,992,"%D",5,0)
transmission of an HL7 demographic A08 update message to the COTS
"^DD",2,2,.02,1,992,"%D",6,0)
interface.
"^DD",2,2,.02,1,992,"%D",7,0)
 
"^DD",2,2,.02,1,992,"%D",8,0)
The local variable DGRUGA08 will be set to 1 if the cross reference is
"^DD",2,2,.02,1,992,"%D",9,0)
not to be executed as part of a re-indexing.
"^DD",2,2,.02,1,992,"DT")
2990920
"^DD",2,2,.02,3)
Enter 'M' for MALE, or 'F' for FEMALE.
"^DD",2,2,.02,20,0)
^.3LA^1^1
"^DD",2,2,.02,20,1,0)
DEMOG^
"^DD",2,2,.02,21,0)
^^1^1^2920721^^^
"^DD",2,2,.02,21,1,0)
Enter 'M' if this applicant is a male, or 'F' if female.
"^DD",2,2,.02,"AUDIT")
y
"^DD",2,2,.02,"DT")
2990105
"^DD",2,2,.03,0)
DATE OF BIRTH^RDXOa^^0;3^S %DT="EP" D ^%DT S X=Y K:1701231>X!(DT<X) X
"^DD",2,2,.03,.1)
DOB
"^DD",2,2,.03,1,0)
^.1^^-1
"^DD",2,2,.03,1,1,0)
2^ADOB
"^DD",2,2,.03,1,1,1)
S ^DPT("ADOB",$E(X,1,30),DA)=""
"^DD",2,2,.03,1,1,2)
K ^DPT("ADOB",$E(X,1,30),DA)
"^DD",2,2,.03,1,2,0)
^^TRIGGER^2^.083
"^DD",2,2,.03,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(Y(1),U,20),X=X S DIU=X K Y S X=DIV S X="1" X ^DD(2,.03,1,2,1.4)
"^DD",2,2,.03,1,2,1.4)
S DIH=$S($D(^DPT(DIV(0),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,19,99))  S DIH=DIH_U" S %=$P(DIH,U,21,999),DIU=$P(DIH,U,20),^(0)=$P(DIH,U,1,19)_U_DIV_$S(%]"":U_%,1:""),DIH=2,DIG=.083 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.03,1,2,2)
Q
"^DD",2,2,.03,1,2,"CREATE VALUE")
"1"
"^DD",2,2,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",2,2,.03,1,2,"FIELD")
#.083
"^DD",2,2,.03,1,3,0)
2^AODS3^MUMPS
"^DD",2,2,.03,1,3,1)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.03,1,3,2)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.03,1,4,0)
2^AENR03^MUMPS
"^DD",2,2,.03,1,4,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.03,1,4,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.03,1,4,3)
DO NOT DELETE
"^DD",2,2,.03,1,4,"%D",0)
^^2^2^2971007^^^
"^DD",2,2,.03,1,4,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.03,1,4,"%D",2,0)
enrollment. 
"^DD",2,2,.03,1,4,"DT")
2971007
"^DD",2,2,.03,1,301,0)
2^IVM03^MUMPS
"^DD",2,2,.03,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.03,1,301,2)
S IVMX=X,IVMKILL=3,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX,IVMKILL
"^DD",2,2,.03,1,301,"%D",0)
^^8^8^2991027^
"^DD",2,2,.03,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.03,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.03,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.03,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.03,1,301,"%D",5,0)
 
"^DD",2,2,.03,1,301,"%D",6,0)
Also, if this field is edited, this cross-reference will check to see if the
"^DD",2,2,.03,1,301,"%D",7,0)
patient requires a financial query to be sent to the IVM Center (Data
"^DD",2,2,.03,1,301,"%D",8,0)
Collection Division (DCD).
"^DD",2,2,.03,1,301,"DT")
2991027
"^DD",2,2,.03,1,991,0)
2^AVAFC03^MUMPS
"^DD",2,2,.03,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".03;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.03,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".03;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.03,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.03,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.03,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.03,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.03,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.03,1,991,"%D",5,0)
 
"^DD",2,2,.03,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.03,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.03,1,991,"%D",8,0)
process.
"^DD",2,2,.03,1,991,"%D",9,0)
 
"^DD",2,2,.03,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.03,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.03,1,991,"%D",12,0)
  
"^DD",2,2,.03,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.03,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.03,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.03,1,991,"DT")
2980501
"^DD",2,2,.03,1,992,0)
2^ADGRU03^MUMPS
"^DD",2,2,.03,1,992,1)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.03,1,992,2)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.03,1,992,"%D",0)
^^9^9^2990920^
"^DD",2,2,.03,1,992,"%D",1,0)
This cross reference is used to remember that changes were made to a 
"^DD",2,2,.03,1,992,"%D",2,0)
monitored data field in the PATIENT File (#2) required for a vendor
"^DD",2,2,.03,1,992,"%D",3,0)
RAI/MDS COTS system.  Execution of this cross reference will create
"^DD",2,2,.03,1,992,"%D",4,0)
an entry in the ADT/HL7 PIVOT file (#391.71) and mark it as requiring
"^DD",2,2,.03,1,992,"%D",5,0)
transmission of an HL7 demographic A08 update message to the COTS
"^DD",2,2,.03,1,992,"%D",6,0)
interface.
"^DD",2,2,.03,1,992,"%D",7,0)
 
"^DD",2,2,.03,1,992,"%D",8,0)
The local variable DGRUGA08 will be set to 1 if the cross reference is
"^DD",2,2,.03,1,992,"%D",9,0)
not to be executed as part of a re-indexing.
"^DD",2,2,.03,1,992,"DT")
2990920
"^DD",2,2,.03,2)
S Y(0)=Y S X=Y(0) S:X X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_(1700+$E(X,1,3)) S Y=X
"^DD",2,2,.03,2.1)
NUMDATE4(DOB)
"^DD",2,2,.03,3)
Enter the patients DATE OF BIRTH which must be later than 12/31/1870.
"^DD",2,2,.03,20,0)
^.3LA^1^1
"^DD",2,2,.03,20,1,0)
DEMOG^
"^DD",2,2,.03,21,0)
^^2^2^2990205^^^^
"^DD",2,2,.03,21,1,0)
Enter the applicant's date of birth between December 31, 1870 and today's
"^DD",2,2,.03,21,2,0)
date.
"^DD",2,2,.03,"AUDIT")
y
"^DD",2,2,.03,"DT")
3021116
"^DD",2,2,.09,0)
SOCIAL SECURITY NUMBER^RFXa^^0;9^K:X[""""!($A(X)=45) X I $D(X) S:'$D(DPTX) DFN=DA D SSN^DGINP Q  I $L(X)>10
"^DD",2,2,.09,.1)
SSN
"^DD",2,2,.09,1,0)
^.1^^-1
"^DD",2,2,.09,1,1,0)
2^BS^MUMPS
"^DD",2,2,.09,1,1,1)
S ^DPT("BS",$E(X,6,9),DA)=""
"^DD",2,2,.09,1,1,2)
K:$E(X,6,9)'="" ^DPT("BS",$E(X,6,9),DA)
"^DD",2,2,.09,1,2,0)
^^TRIGGER^2^.083
"^DD",2,2,.09,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(Y(1),U,20),X=X S DIU=X K Y S X=DIV S X="1" X ^DD(2,.09,1,2,1.4)
"^DD",2,2,.09,1,2,1.4)
S DIH=$S($D(^DPT(DIV(0),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,19,99))  S DIH=DIH_U" S %=$P(DIH,U,21,999),DIU=$P(DIH,U,20),^(0)=$P(DIH,U,1,19)_U_DIV_$S(%]"":U_%,1:""),DIH=2,DIG=.083 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.09,1,2,2)
Q
"^DD",2,2,.09,1,2,"CREATE VALUE")
"1"
"^DD",2,2,.09,1,2,"DELETE VALUE")
NO EFFECT
"^DD",2,2,.09,1,2,"FIELD")
#.083
"^DD",2,2,.09,1,3,0)
2^BS5^MUMPS
"^DD",2,2,.09,1,3,1)
S ^DPT("BS5",$E(^DPT(DA,0),1)_$E(X,6,9),DA)=""
"^DD",2,2,.09,1,3,2)
K ^DPT("BS5",$E(^DPT(DA,0),1)_$E(X,6,9),DA)
"^DD",2,2,.09,1,4,0)
2^AODS1^MUMPS
"^DD",2,2,.09,1,4,1)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.09,1,4,2)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.09,1,5,0)
2^ATP^MUMPS
"^DD",2,2,.09,1,5,1)
I $E(X,1,5)="00000" D SET^DGREGDD1(DA,.6,0,21,1)
"^DD",2,2,.09,1,5,2)
D KILL^DGREGDD1(DA,.6,0,21,0)
"^DD",2,2,.09,1,5,"%D",0)
^^2^2^2951026^^^^
"^DD",2,2,.09,1,5,"%D",1,0)
This cross reference is used to indentify test patients. Test patients are
"^DD",2,2,.09,1,5,"%D",2,0)
designated by five leading zeros in the SSN.
"^DD",2,2,.09,1,5,"DT")
2951026
"^DD",2,2,.09,1,6,0)
2^AENR09^MUMPS
"^DD",2,2,.09,1,6,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.09,1,6,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.09,1,6,3)
DO NOT DELETE
"^DD",2,2,.09,1,6,"%D",0)
^^3^3^2971007^^^
"^DD",2,2,.09,1,6,"%D",1,0)
 
"^DD",2,2,.09,1,6,"%D",2,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.09,1,6,"%D",3,0)
enrollment. 
"^DD",2,2,.09,1,6,"DT")
2971007
"^DD",2,2,.09,1,7,0)
2^SSN
"^DD",2,2,.09,1,7,1)
S ^DPT("SSN",$E(X,1,30),DA)=""
"^DD",2,2,.09,1,7,2)
K ^DPT("SSN",$E(X,1,30),DA)
"^DD",2,2,.09,1,8,0)
2^AVADPT6^MUMPS
"^DD",2,2,.09,1,8,1)
S VADFN=DA D SET^VADPT6 K VADFN
"^DD",2,2,.09,1,8,2)
S VADFN=DA D KILL^VADPT6 K VADFN
"^DD",2,2,.09,1,9,0)
2^AD^MUMPS
"^DD",2,2,.09,1,9,1)
S PPP=X,X="PPPFMX" X ^%ZOSF("TEST") D:$T SNSSN^PPPFMX S X=PPP K PPP
"^DD",2,2,.09,1,9,2)
S PPP=X,X="PPPFMX" X ^%ZOSF("TEST") D:$T KNSSN^PPPFMX S X=PPP K PPP
"^DD",2,2,.09,1,9,"%D",0)
^^2^2^2920611^
"^DD",2,2,.09,1,9,"%D",1,0)
This cross-reference is used to add a new SSN to the Prescription
"^DD",2,2,.09,1,9,"%D",2,0)
Practices Files when a new patient is added to the patient file.
"^DD",2,2,.09,1,9,"DT")
2920611
"^DD",2,2,.09,1,301,0)
2^IVM09^MUMPS
"^DD",2,2,.09,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.09,1,301,2)
S IVMX=X,IVMKILL=9,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX,IVMKILL
"^DD",2,2,.09,1,301,"%D",0)
^^8^8^2991027^
"^DD",2,2,.09,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.09,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.09,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.09,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.09,1,301,"%D",5,0)
 
"^DD",2,2,.09,1,301,"%D",6,0)
Also, if this field is edited, this cross-reference will check to see if the
"^DD",2,2,.09,1,301,"%D",7,0)
patient requires a financial query to be sent to the IVM Center (Data
"^DD",2,2,.09,1,301,"%D",8,0)
Collection Division (DCD).
"^DD",2,2,.09,1,301,"DT")
2991027
"^DD",2,2,.09,1,800,0)
2^PX09^MUMPS
"^DD",2,2,.09,1,800,1)
S PX=X,X="PXXDPT" X ^%ZOSF("TEST") D:$T SETSSN^PXXDPT S X=PX K PX
"^DD",2,2,.09,1,800,2)
S PX=X,X="PXXDPT" X ^%ZOSF("TEST") D:$T KILLSSN^PXXDPT S X=PX K PX
"^DD",2,2,.09,1,800,"%D",0)
^^2^2^2960624^^^
"^DD",2,2,.09,1,800,"%D",1,0)
This cross-reference is used to add a new SSN to the 9000001 IHS Patient
"^DD",2,2,.09,1,800,"%D",2,0)
File when a new patient is added to the Patient File.
"^DD",2,2,.09,1,800,"DT")
2930908
"^DD",2,2,.09,1,991,0)
2^AVAFC09^MUMPS
"^DD",2,2,.09,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".09;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.09,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".09;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.09,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.09,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.09,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.09,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.09,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.09,1,991,"%D",5,0)
 
"^DD",2,2,.09,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.09,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.09,1,991,"%D",8,0)
process.
"^DD",2,2,.09,1,991,"%D",9,0)
 
"^DD",2,2,.09,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.09,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.09,1,991,"%D",12,0)
  
"^DD",2,2,.09,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.09,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.09,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.09,1,991,"DT")
2970825
"^DD",2,2,.09,1,992,0)
2^ADGRU09^MUMPS
"^DD",2,2,.09,1,992,1)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.09,1,992,2)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.09,1,992,"%D",0)
^^9^9^3000202^^^^
"^DD",2,2,.09,1,992,"%D",1,0)
This cross reference is used to remember that changes were made to a 
"^DD",2,2,.09,1,992,"%D",2,0)
monitored data field in the PATIENT File (#2) required for a vendor
"^DD",2,2,.09,1,992,"%D",3,0)
RAI/MDS COTS system.  Execution of this cross reference will create
"^DD",2,2,.09,1,992,"%D",4,0)
an entry in the ADT/HL7 PIVOT file (#391.71) and mark it as requiring
"^DD",2,2,.09,1,992,"%D",5,0)
transmission of an HL7 demographic A08 update message to the COTS
"^DD",2,2,.09,1,992,"%D",6,0)
interface.
"^DD",2,2,.09,1,992,"%D",7,0)
 
"^DD",2,2,.09,1,992,"%D",8,0)
The local variable DGRUGA08 will be set to 1 if the cross reference is
"^DD",2,2,.09,1,992,"%D",9,0)
not to be executed as part of a re-indexing.
"^DD",2,2,.09,1,992,"DT")
3000202
"^DD",2,2,.09,2)
S Y(0)=Y S:$L(Y)=11 Y=$E(Y,10,11)_$E(Y,1,9)
"^DD",2,2,.09,2.1)
S:$L(Y)=11 Y=$E(Y,10,11)_$E(Y,1,9)
"^DD",2,2,.09,3)
Enter 9-digit SSN or 'P' for pseudo-SSN.
"^DD",2,2,.09,10)
10/10 FORM
"^DD",2,2,.09,11,0)
^.2LAP^^0
"^DD",2,2,.09,11,1,0)
1^
"^DD",2,2,.09,11,2,0)
2^
"^DD",2,2,.09,20,0)
^.3LA^1^1
"^DD",2,2,.09,20,1,0)
DEMOG^
"^DD",2,2,.09,21,0)
^^34^34^3000202^^^^
"^DD",2,2,.09,21,1,0)
Enter the applicants social security number as nine digits, i.e.,
"^DD",2,2,.09,21,2,0)
123456789.  If the social security number is unknown and you need to
"^DD",2,2,.09,21,3,0)
assign a pseudo SSN follow it with a 'P', i.e., 123456789P.  Simply
"^DD",2,2,.09,21,4,0)
enter a 'P' if you wish the system to determine the proper pseudo SSN.
"^DD",2,2,.09,21,5,0)
Pseudo SSN's are determined as follows:
"^DD",2,2,.09,21,6,0)
   
"^DD",2,2,.09,21,7,0)
   1.  Based on the following table assign the first three numbers
"^DD",2,2,.09,21,8,0)
       of the pseudo SSN based on the patient's three initials in
"^DD",2,2,.09,21,9,0)
       first-middle-last initial order.  For example, if the name
"^DD",2,2,.09,21,10,0)
       is 'SMITH,JOHN P' the table would be used to convert JPS
"^DD",2,2,.09,21,11,0)
       (the initials for JOHN P SMITH) into 467.
"^DD",2,2,.09,21,12,0)
    
"^DD",2,2,.09,21,13,0)
       ALPHA     NUMBER              ALPHA      NUMBER
"^DD",2,2,.09,21,14,0)
       -----     ------              -----      ------
"^DD",2,2,.09,21,15,0)
       A,B,C       1                 D,E,F        2
"^DD",2,2,.09,21,16,0)
       G,H,I       3                 J,K,L        4
"^DD",2,2,.09,21,17,0)
       M,N,O       5                 P,Q,R        6
"^DD",2,2,.09,21,18,0)
       S,T,U       7                 V,W,X        8
"^DD",2,2,.09,21,19,0)
       Y,Z         9                 NO INITIAL   0
"^DD",2,2,.09,21,20,0)
   
"^DD",2,2,.09,21,21,0)
   2.  Using the patient's date of birth convert it to six numerics
"^DD",2,2,.09,21,22,0)
       in month-day-year order.  Where a month, day or year consists of
"^DD",2,2,.09,21,23,0)
       less than one numeric, i.e., JUNE=6, preceed it by a zero, i.e.,
"^DD",2,2,.09,21,24,0)
       JUNE=06.  If the month and/or year of birth are unknown indicate
"^DD",2,2,.09,21,25,0)
       them as '00'.
"^DD",2,2,.09,21,26,0)
    
"^DD",2,2,.09,21,27,0)
 EXAMPLES
"^DD",2,2,.09,21,28,0)
 --------
"^DD",2,2,.09,21,29,0)
 Patient Name             DOB                 Pseudo SSN
"^DD",2,2,.09,21,30,0)
 ------------             ---                 ----------
"^DD",2,2,.09,21,31,0)
 SMITH,JOHN P             Jan 3, 1917         467010317P
"^DD",2,2,.09,21,32,0)
 SMITH,JOHN P             Jan 1917            467010017P
"^DD",2,2,.09,21,33,0)
 SMITH,JOHN P             1917                467000017P
"^DD",2,2,.09,21,34,0)
 SMITH,JOHN               Dec 15, 1945        407121545P
"^DD",2,2,.09,"AUDIT")
y
"^DD",2,2,.09,"DT")
3021116
"^DD",2,2,.0901,0)
TERMINAL DIGIT OF SSN^CJ9^^ ; ^S %=$S($D(^DPT(D0,0)):$P(^(0),U,9),1:""),X=$E(%,8,9)_$E(%,6,7)_$E(%,4,5)_$E(%,1,3)
"^DD",2,2,.0901,.1)

"^DD",2,2,.0901,3)
Computed field which determines last four digits of SSN.
"^DD",2,2,.0901,9)
^
"^DD",2,2,.0901,9.01)

"^DD",2,2,.0901,9.1)
S %=$S($D(^DPT(D0,0)):$P(^(0),U,9),1:""),X=$E(%,8,9)_$E(%,6,7)_$E(%,4,5)_$E(%,1,3)
"^DD",2,2,.0901,21,0)
^^6^6^2920130^^^
"^DD",2,2,.0901,21,1,0)
This is a computed field which returns the terminal digit value of the
"^DD",2,2,.0901,21,2,0)
patient's social security number.  This value is computed to be the
"^DD",2,2,.0901,21,3,0)
last 2 digits of the social security number concatenated with the sixth
"^DD",2,2,.0901,21,4,0)
and seventh digits of the social security number concatenated with the
"^DD",2,2,.0901,21,5,0)
forth and fifth pieces of the social security number concatenated with the
"^DD",2,2,.0901,21,6,0)
first 3 digits of the social security number.
"^DD",2,2,.0901,"DT")
2951107
"^DD",2,2,.107,0)
LODGER WARD LOCATION^F^^.107;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<2) X
"^DD",2,2,.107,1,0)
^.1
"^DD",2,2,.107,1,1,0)
2^LD^MUMPS
"^DD",2,2,.107,1,1,1)
D LD^DGPMDDLD
"^DD",2,2,.107,1,1,2)
K ^DPT("LD",X,DA)
"^DD",2,2,.107,3)
If the patient is a lodger, this is the ward on which the patient resides (2-30 characters).
"^DD",2,2,.107,21,0)
^.001^1^1^3060404^^
"^DD",2,2,.107,21,1,0)
The ward on which the patient currently resides if the patient is a lodger.
"^DD",2,2,.107,"DT")
2900409
"^DD",2,2,.108,0)
CURRENT ROOM^P405.4'^DG(405.4,^.108;1^Q
"^DD",2,2,.108,21,0)
^^5^5^2911214^
"^DD",2,2,.108,21,1,0)
This field contains a pointer to the ROOM-BED file denoting the current
"^DD",2,2,.108,21,2,0)
room-bed in which this inpatient resides.  This field is filled in only
"^DD",2,2,.108,21,3,0)
for inpatients.  It must NOT be edited as editing could adversely affect
"^DD",2,2,.108,21,4,0)
the operation of the MAS package as well as other DHCP packages.  This
"^DD",2,2,.108,21,5,0)
field is filled in automatically by the module.
"^DD",2,2,.108,"DT")
2900322
"^DD",2,2,.14111,0)
CONFIDENTIAL ADDRESS COUNTY^NJ3,0OX^^.141;11^N Z0,DIC S Z0=+$P($G(^DPT(D0,.141)),"^",5) K:'Z0 X Q:'$D(^DIC(5,Z0,1,0))  S DIC="^DIC(5,Z0,1,",DIC(0)="QEM" D ^DIC S X=+Y K:Y'>0 X
"^DD",2,2,.14111,2)
S Y(0)=Y S Y(0)=Y Q:Y']""  N Z0 S Z0=$P($G(^DPT(D0,.141)),"^",5) Q:'Z0  S Y=$P($G(^DIC(5,Z0,1,Y,0)),"^",3)
"^DD",2,2,.14111,2.1)
S Y(0)=Y Q:Y']""  N Z0 S Z0=$P($G(^DPT(D0,.141)),"^",5) Q:'Z0  S Y=$P($G(^DIC(5,Z0,1,Y,0)),"^",3)
"^DD",2,2,.14111,3)
Enter a valid county for the applicant's confidential address.
"^DD",2,2,.14111,4)
N Z0,DIC S X="?",Z0=+$P($G(^DPT(D0,.141)),"^",5) Q:'$D(^DIC(5,Z0,1,0))  S DIC="^DIC(5,Z0,1,",DIC(0)="QEM" D ^DIC
"^DD",2,2,.14111,21,0)
^.001^2^2^3030313^^
"^DD",2,2,.14111,21,1,0)
If the 'Confidential Address Active' prompt is answered YES,
"^DD",2,2,.14111,21,2,0)
enter the county for the applicant's confidential address.
"^DD",2,2,.14111,"DT")
3041210
"^DD",2,2,.211,0)
K-NAME OF PRIMARY NOK^Fa^^.21;1^K:$L(X)>35!($L(X)<3) X I $D(X) S DG20NAME=X,(X,DG20NAME)=$$FORMAT^XLFNAME7(.DG20NAME,3,35) K:'$L(X) X,DG20NAME
"^DD",2,2,.211,.1)
NEXT OF KIN
"^DD",2,2,.211,1,0)
^.1
"^DD",2,2,.211,1,1,0)
2^AXR^MUMPS
"^DD",2,2,.211,1,1,1)
Q
"^DD",2,2,.211,1,1,2)
S DGXRF=.211 D ^DGDDC Q
"^DD",2,2,.211,1,991,0)
2^AVAFC211^MUMPS
"^DD",2,2,.211,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".211;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.211,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".211;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.211,1,991,"%D",0)
^^15^15^2990204^^^
"^DD",2,2,.211,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.211,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.211,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.211,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.211,1,991,"%D",5,0)
 
"^DD",2,2,.211,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.211,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.211,1,991,"%D",8,0)
process.
"^DD",2,2,.211,1,991,"%D",9,0)
 
"^DD",2,2,.211,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.211,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.211,1,991,"%D",12,0)
  
"^DD",2,2,.211,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.211,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.211,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.211,1,991,"DT")
2970825
"^DD",2,2,.211,1,992,0)
2^ADGRU211^MUMPS
"^DD",2,2,.211,1,992,1)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.211,1,992,2)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.211,1,992,"%D",0)
^^9^9^2990920^
"^DD",2,2,.211,1,992,"%D",1,0)
This cross reference is used to remember that changes were made to a 
"^DD",2,2,.211,1,992,"%D",2,0)
monitored data field in the PATIENT File (#2) required for a vendor
"^DD",2,2,.211,1,992,"%D",3,0)
RAI/MDS COTS system.  Execution of this cross reference will create
"^DD",2,2,.211,1,992,"%D",4,0)
an entry in the ADT/HL7 PIVOT file (#391.71) and mark it as requiring
"^DD",2,2,.211,1,992,"%D",5,0)
transmission of an HL7 demographic A08 update message to the COTS
"^DD",2,2,.211,1,992,"%D",6,0)
interface.
"^DD",2,2,.211,1,992,"%D",7,0)
 
"^DD",2,2,.211,1,992,"%D",8,0)
The local variable DGRUGA08 will be set to 1 if the cross reference is
"^DD",2,2,.211,1,992,"%D",9,0)
not to be executed as part of a re-indexing.
"^DD",2,2,.211,1,992,"DT")
2990920
"^DD",2,2,.211,3)
Enter name in 'LAST,FIRST MIDDLE SUFFIX' format, must be 3-35 characters in length.
"^DD",2,2,.211,20,0)
^.3LA^1^1
"^DD",2,2,.211,20,1,0)
NK1
"^DD",2,2,.211,21,0)
^^4^4^2861007^
"^DD",2,2,.211,21,1,0)
Enter the primary next of kin's name in 'LAST,FIRST MIDDLE SUFFIX' format.
"^DD",2,2,.211,21,2,0)
This value must be 3-35 characters in length and may contain only uppercase
"^DD",2,2,.211,21,3,0)
alpha characters, spaces, apostrophes, hyphens and one comma.  All other
"^DD",2,2,.211,21,4,0)
characters and parenthetical text will be removed.
"^DD",2,2,.211,"AUDIT")
y
"^DD",2,2,.211,"DT")
3050611
"^DD",2,2,.2207,0)
K-ZIP+4^FOX^^.22;7^K:X[""""!($A(X)=45) X I $D(X) S DFN=DA D K1^DGLOCK2 I $D(X) K:$L(X)>15!($L(X)<5) X I $D(X) D ZIPIN^VAFADDR
"^DD",2,2,.2207,1,0)
^.1
"^DD",2,2,.2207,1,1,0)
2^ANK1ZIP4^MUMPS
"^DD",2,2,.2207,1,1,1)
D SET^DGREGDD1(DA,.218,.21,8,$E(X,1,5))
"^DD",2,2,.2207,1,1,2)
D KILL^DGREGDD1(DA,.218,.21,8,$E(X,1,5))
"^DD",2,2,.2207,1,1,"%D",0)
^^2^2^2950922^^
"^DD",2,2,.2207,1,1,"%D",1,0)
This sets the corresponding zip code field to the first 5 digits of this 
"^DD",2,2,.2207,1,1,"%D",2,0)
field.
"^DD",2,2,.2207,1,1,"DT")
2950922
"^DD",2,2,.2207,2)
S Y(0)=Y D ZIPOUT^VAFADDR
"^DD",2,2,.2207,2.1)
D ZIPOUT^VAFADDR
"^DD",2,2,.2207,3)
Answer with either 5 digit or 9 digit zip code.
"^DD",2,2,.2207,20,0)
^.3LA^1^1
"^DD",2,2,.2207,20,1,0)
NK1
"^DD",2,2,.2207,21,0)
^^3^3^2930603^
"^DD",2,2,.2207,21,1,0)
Answer with either the 5 digit format (e.g. 12345) or the nine digit
"^DD",2,2,.2207,21,2,0)
format (e.g. 12345-6789 or 123456789).  This is related to the primary
"^DD",2,2,.2207,21,3,0)
emergency contact's address.
"^DD",2,2,.2207,23,0)
^^3^3^2930603^
"^DD",2,2,.2207,23,1,0)
Related to other primary emergency contact address fields.  This field 
"^DD",2,2,.2207,23,2,0)
'triggers' the K-ZIP CODE (#.218) field, using the first 5 digits of 
"^DD",2,2,.2207,23,3,0)
this field.
"^DD",2,2,.2207,"DEL",1,0)
S DFN=DA D K1D^DGLOCK2 I '$D(X)
"^DD",2,2,.2207,"DT")
2950922
"^DD",2,2,.2401,0)
FATHER'S NAME^F^^.24;1^K:$L(X)>35!($L(X)<3) X I $D(X) S DG20NAME=X,(X,DG20NAME)=$$FORMAT^XLFNAME7(.DG20NAME,3,35) K:'$L(X) X,DG20NAME
"^DD",2,2,.2401,3)
Enter name in 'LAST,FIRST MIDDLE SUFFIX' format, must be 3-35 characters in length.
"^DD",2,2,.2401,21,0)
^^4^4^2861007^
"^DD",2,2,.2401,21,1,0)
Enter the father's name in 'LAST,FIRST MIDDLE SUFFIX' format.
"^DD",2,2,.2401,21,2,0)
This value must be 3-35 characters in length and may contain only uppercase
"^DD",2,2,.2401,21,3,0)
alpha characters, spaces, apostrophes, hyphens and one comma.  All other
"^DD",2,2,.2401,21,4,0)
characters and parenthetical text will be removed.
"^DD",2,2,.2401,"DT")
3050611
"^DD",2,2,.2402,0)
MOTHER'S NAME^F^^.24;2^K:$L(X)>35!($L(X)<3) X I $D(X) S DG20NAME=X,(X,DG20NAME)=$$FORMAT^XLFNAME7(.DG20NAME,3,35) K:'$L(X) X,DG20NAME
"^DD",2,2,.2402,3)
Enter name in 'LAST,FIRST MIDDLE SUFFIX' format, must be 3-35 characters in length.
"^DD",2,2,.2402,21,0)
^^4^4^2861007^
"^DD",2,2,.2402,21,1,0)
Enter the mother's name in 'LAST,FIRST MIDDLE SUFFIX' format.
"^DD",2,2,.2402,21,2,0)
This value must be 3-35 characters in length and may contain only uppercase
"^DD",2,2,.2402,21,3,0)
alpha characters, spaces, apostrophes, hyphens and one comma.  All other
"^DD",2,2,.2402,21,4,0)
characters and parenthetical text will be removed.
"^DD",2,2,.2402,"DT")
3050611
"^DD",2,2,.2403,0)
MOTHER'S MAIDEN NAME^Fa^^.24;3^K:$L(X)>35!($L(X)<2) X I $D(X) S DG20NAME=X,(X,DG20NAME)=$$FORMAT^XLFNAME7(.DG20NAME,3,35,,2,,1) K:'$L(X) X,DG20NAME
"^DD",2,2,.2403,1,0)
^.1
"^DD",2,2,.2403,1,991,0)
2^AVAFC2403^MUMPS
"^DD",2,2,.2403,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".2403;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.2403,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".2403;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.2403,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.2403,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.2403,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.2403,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.2403,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.2403,1,991,"%D",5,0)
 
"^DD",2,2,.2403,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.2403,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.2403,1,991,"%D",8,0)
process.
"^DD",2,2,.2403,1,991,"%D",9,0)
 
"^DD",2,2,.2403,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.2403,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.2403,1,991,"%D",12,0)
  
"^DD",2,2,.2403,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.2403,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.2403,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.2403,1,991,"DT")
2970825
"^DD",2,2,.2403,3)
Enter name in 'LAST,FIRST MIDDLE SUFFIX' format, must be 3-35 characters in length.
"^DD",2,2,.2403,21,0)
^^4^4^2861007^
"^DD",2,2,.2403,21,1,0)
Enter the mother's maiden name in 'LAST,FIRST MIDDLE SUFFIX' format.
"^DD",2,2,.2403,21,2,0)
Entry of the LAST name only is permitted and the comma may be omitted.
"^DD",2,2,.2403,21,3,0)
If the response contains no comma, one will be appended to the value.
"^DD",2,2,.2403,21,4,0)
Including the comma, the value must be at least 3 characters in length.
"^DD",2,2,.2403,"AUDIT")
y
"^DD",2,2,.2403,"DT")
3050611
"^DD",2,2,.2924,0)
STREET ADDRESS 1 (CIVIL)^F^^.291;6^K:$L(X)>30!($L(X)<2) X
"^DD",2,2,.2924,3)
ANSWER MUST BE 2-30 CHARACTERS IN LENGTH
"^DD",2,2,.2924,21,0)
^^2^2^2911224^
"^DD",2,2,.2924,21,1,0)
Enter the first line of the street address of the person responsible for
"^DD",2,2,.2924,21,2,0)
handling this patient's funds.
"^DD",2,2,.307,0)
INELIGIBLE REASON^FX^^.3;7^K:$L(X)>40!($L(X)<1) X I $D(X) D EK^DGLOCK
"^DD",2,2,.307,.1)
REASON-INELIGIBLE
"^DD",2,2,.307,3)
Enter the reason this patient is considered to be ineligible for treatment NTE 40 characters.
"^DD",2,2,.307,20,0)
^.3LA^1^1
"^DD",2,2,.307,20,1,0)
IPT
"^DD",2,2,.307,21,0)
^^5^5^2861007^^^
"^DD",2,2,.307,21,1,0)
If this applicant is ineligible for treatment enter the reason
"^DD",2,2,.307,21,2,0)
[not to exceed 40 characters].  An ineligible date must be specified
"^DD",2,2,.307,21,3,0)
in order to enter/edit this field and the user must hold the
"^DD",2,2,.307,21,4,0)
designated security key.  This field may not be deleted as long as
"^DD",2,2,.307,21,5,0)
an ineligible date is on file.
"^DD",2,2,.307,"DEL",1,0)
D EK^DGLOCK I '$D(X)
"^DD",2,2,.307,"DT")
2860728
"^DD",2,2,.3111,0)
EMPLOYER NAME^FX^^.311;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<1) X I $D(X) D EM^DGLOCK2
"^DD",2,2,.3111,.1)

"^DD",2,2,.3111,1,0)
^.1
"^DD",2,2,.3111,1,1,0)
2^AXR3^MUMPS
"^DD",2,2,.3111,1,1,1)
Q
"^DD",2,2,.3111,1,1,2)
S DGXRF=.3111 D ^DGDDC Q
"^DD",2,2,.3111,3)
Enter the name of this patient's employer [1-30 characters].
"^DD",2,2,.3111,5,1,0)
2^.31115^2
"^DD",2,2,.3111,20,0)
^.3LA^1^1
"^DD",2,2,.3111,20,1,0)
EM1
"^DD",2,2,.3111,21,0)
^^2^2^2920604^^
"^DD",2,2,.3111,21,1,0)
If employment status is indicated and is not unemployed enter the
"^DD",2,2,.3111,21,2,0)
employer name [1-30 characters], otherwise nothing may be entered.
"^DD",2,2,.3111,"DT")
2890530
"^DD",2,2,.3192,0)
COVERED BY HEALTH INSURANCE?^RS^Y:YES;N:NO;U:UNKNOWN;^.31;11^Q
"^DD",2,2,.3192,.1)
ARE YOU COVERED BY ANY HEALTH INSURANCE
"^DD",2,2,.3192,3)
Enter 'Y' if this patient is covered by health insurance, 'N' if not.
"^DD",2,2,.3192,20,0)
^.3LA^1^1
"^DD",2,2,.3192,20,1,0)
II
"^DD",2,2,.3192,21,0)
^^3^3^2861117^^^^
"^DD",2,2,.3192,21,1,0)
Enter 'Y' if this applicant is covered by a health insurance policy
"^DD",2,2,.3192,21,2,0)
regardless of who holds policy (applicant, spouse, employer, etc.),
"^DD",2,2,.3192,21,3,0)
'N' if s/he isn't covered by any policy, or 'U' if unknown.
"^DD",2,2,.3192,"DT")
2911211
"^DD",2,2,.322014,0)
ENVIR. CONT. REGISTRATION DATE^DX^^.322;14^S %DT="E",%DT(0)=-DT D ^%DT S X=Y K:Y<1 X I $D(X) S DFN=DA D EC^DGLOCK
"^DD",2,2,.322014,3)
Enter the date on which this patient was registered as being exposed to environmental contaminants.  This must be after 8/1/1990.
"^DD",2,2,.322014,5,1,0)
2^.322013^1
"^DD",2,2,.322014,21,0)
^^2^2^2930629^^
"^DD",2,2,.322014,21,1,0)
This is the date on which the patient registered for being exposed to
"^DD",2,2,.322014,21,2,0)
environmental contaminants.  This date must be after 8/1/1990.
"^DD",2,2,.322014,23,0)
^^2^2^2930629^^
"^DD",2,2,.322014,23,1,0)
This is the date on which the patient registered for being exposed to
"^DD",2,2,.322014,23,2,0)
environmental contaminants.  This date must be after 8/1/1990.
"^DD",2,2,.322014,"DT")
2930721
"^DD",2,2,.322015,0)
ENVIR. CONT. EXAM DATE^DX^^.322;15^S %DT="E",%DT(0)=-DT D ^%DT S X=Y K:Y<1 X I $D(X) D EC^DGLOCK
"^DD",2,2,.322015,3)
Enter the date this patient was examined for the environmental contaminants condition claimed (Must be after 8/1/1990).
"^DD",2,2,.322015,5,1,0)
2^.322013^2
"^DD",2,2,.322015,21,0)
^^2^2^2930629^^
"^DD",2,2,.322015,21,1,0)
This is the date on which an examination for exposure to environmental
"^DD",2,2,.322015,21,2,0)
contaminants was performed on the patient.
"^DD",2,2,.322015,"DT")
2930721
"^DD",2,2,.331,0)
E-NAME^F^^.33;1^K:$L(X)>35!($L(X)<3) X I $D(X) S DG20NAME=X,(X,DG20NAME)=$$FORMAT^XLFNAME7(.DG20NAME,3,35) K:'$L(X) X,DG20NAME
"^DD",2,2,.331,.1)
EMERGENCY CONTACT
"^DD",2,2,.331,1,0)
^.1
"^DD",2,2,.331,1,1,0)
2^AXR4^MUMPS
"^DD",2,2,.331,1,1,1)
Q
"^DD",2,2,.331,1,1,2)
S DGXRF=.331 D ^DGDDC Q
"^DD",2,2,.331,3)
Enter name in 'LAST,FIRST MIDDLE SUFFIX' format, must be 3-35 characters in length.
"^DD",2,2,.331,20,0)
^.3LA^1^1
"^DD",2,2,.331,20,1,0)
EC1
"^DD",2,2,.331,21,0)
^^4^4^2861117^^^
"^DD",2,2,.331,21,1,0)
Enter the primary emergency contact's name in 'LAST,FIRST MIDDLE SUFFIX' format.
"^DD",2,2,.331,21,2,0)
This value must be 3-35 characters in length and may contain only uppercase
"^DD",2,2,.331,21,3,0)
alpha characters, spaces, apostrophes, hyphens and one comma.  All other
"^DD",2,2,.331,21,4,0)
characters and parenthetical text will be removed.
"^DD",2,2,.331,"DT")
3050611
"^DD",2,2,.341,0)
D-NAME OF DESIGNEE^F^^.34;1^K:$L(X)>35!($L(X)<3) X I $D(X) S DG20NAME=X,(X,DG20NAME)=$$FORMAT^XLFNAME7(.DG20NAME,3,35) K:'$L(X) X,DG20NAME
"^DD",2,2,.341,.1)
DESIGNEE
"^DD",2,2,.341,1,0)
^.1
"^DD",2,2,.341,1,1,0)
2^AXR6^MUMPS
"^DD",2,2,.341,1,1,1)
Q
"^DD",2,2,.341,1,1,2)
S DGXRF=.341 D ^DGDDC Q
"^DD",2,2,.341,3)
Enter name in 'LAST,FIRST MIDDLE SUFFIX' format, must be 3-35 characters in length.
"^DD",2,2,.341,20,0)
^.3LA^1^1
"^DD",2,2,.341,20,1,0)
D1
"^DD",2,2,.341,21,0)
^^4^4^2861007^
"^DD",2,2,.341,21,1,0)
Enter the designee's name in 'LAST,FIRST MIDDLE SUFFIX' format.
"^DD",2,2,.341,21,2,0)
This value must be 3-35 characters in length and may contain only uppercase
"^DD",2,2,.341,21,3,0)
alpha characters, spaces, apostrophes, hyphens and one comma.  All other
"^DD",2,2,.341,21,4,0)
characters and parenthetical text will be removed.
"^DD",2,2,.341,"DT")
3050611
"^DD",2,2,.361,0)
PRIMARY ELIGIBILITY CODE^*P8'Xa^DIC(8,^.36;1^S DFN=DA D EV^DGLOCK I $D(X) D ECD^DGLOCK1
"^DD",2,2,.361,.1)

"^DD",2,2,.361,1,0)
^.1
"^DD",2,2,.361,1,1,0)
2^AG^MUMPS
"^DD",2,2,.361,1,1,1)
S DFN=DA D EN^DGMTR K DGREQF
"^DD",2,2,.361,1,1,2)
Q
"^DD",2,2,.361,1,1,"DT")
2920720
"^DD",2,2,.361,1,2,0)
^^TRIGGER^2.0361^.01
"^DD",2,2,.361,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 X ^DD(2,.361,1,2,89.4) S Y(102)=$S($D(^DPT(D0,"E",D1,0)):^(0),1:"") S X=$S('$D(^DIC(8,+$P(Y(102),U,1),0)):"",1:$P(^(0),U,1)) S D0=I(0,0) S D1=I(1,0) S DIU=X K Y S X=DIV S X=DIV,X=X X ^DD(2,.361,1,2,1.4)
"^DD",2,2,.361,1,2,1.4)
S DIH=$S($D(^DPT(DIV(0),"E",DIV(1),0)):^(0),1:""),DIV=X I $D(^(0)) S $P(^(0),U,1)=DIV,DIH=2.0361,DIG=.01 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.361,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 X ^DD(2,.361,1,2,2.2) I DIV(1)>0 S DIK(0)=DA,DIK="^DPT(DIV(0),""E"",",DA(1)=DIV(0),DA=DIV(1) D ^DIK S DA=DIK(0) K DIK
"^DD",2,2,.361,1,2,2.2)
X ^DD(2,.361,1,2,99.3) S X=$S('$D(^DIC(8,+$P(Y(102),U,1),0)):"",1:$P(^(0),U,1)) S D0=I(0,0) S D1=I(1,0) S DIU=X K Y
"^DD",2,2,.361,1,2,3)
This trigger stuffs the ELIGIBILITY CODE into the PATIENT'S ELIGIBILITIES multiple.
"^DD",2,2,.361,1,2,89.2)
S I(0,0)=$S($D(D0):D0,1:""),I(1,0)=$S($D(D1):D1,1:""),Y(2)=$S($D(^DPT(D0,.36)):^(.36),1:"") S X="`",Y(1)=X S X=$P(Y(2),U,1),X=X S Y=X,X=Y(1),X=X S X=X
"^DD",2,2,.361,1,2,89.3)
X ^DD(2,.361,1,2,89.2) S X=X_Y,X=X S X=X
"^DD",2,2,.361,1,2,89.4)
X ^DD(2,.361,1,2,89.3) K DIC S Y=-1,DIC="^DPT(D0,""E"",",DIC(0)="NMFL",DIC("P")="2.0361P",DIU(1)=$S($D(DA(1)):DA(1),1:0),DA(1)=D0 D ^DIC:D0>0 S (D,D1,DIV(1))=+Y,DA(1)=DIU(1)
"^DD",2,2,.361,1,2,99.2)
S I(0,0)=$S($D(D0):D0,1:""),I(1,0)=$S($D(D1):D1,1:""),Y(2)=DIV S X="`",Y(1)=X S X=$P(Y(2),U,1),X=X S Y=X,X=Y(1),X=X S X=X
"^DD",2,2,.361,1,2,99.3)
X ^DD(2,.361,1,2,99.2) S X=X_Y K DIC S Y=-1,DIC="^DPT(D0,""E"",",DIC(0)="NMF" D ^DIC:D0>0 S (D,D1,DIV(1))=+Y S Y(102)=$S($D(^DPT(D0,"E",D1,0)):^(0),1:"")
"^DD",2,2,.361,1,2,"CREATE VALUE")
INTERNAL(ELIGIBILITY CODE)
"^DD",2,2,.361,1,2,"DELETE VALUE")
@
"^DD",2,2,.361,1,2,"DIC")
LOOKUP
"^DD",2,2,.361,1,2,"DIK")
DELETE
"^DD",2,2,.361,1,2,"FIELD")
"`"_INTERNAL(ELIGIBILITY CODE):#361:#.01
"^DD",2,2,.361,1,3,0)
2^AXR28^MUMPS
"^DD",2,2,.361,1,3,1)
Q
"^DD",2,2,.361,1,3,2)
I $S('$D(^DIC(8,+X,0)):0,$P(^(0),"^",1)["DOM":0,'$D(^DPT(DA,.36)):1,'$D(^DIC(8,+^(.36),0)):1,$P(^(0),"^",1)'["DOM":1,1:0) S DGXRF=.361 D ^DGDDC Q
"^DD",2,2,.361,1,3,"%D",0)
^^8^8^2920429^
"^DD",2,2,.361,1,3,"%D",1,0)
When the eligibility code is changed, this cross-reference removes the
"^DD",2,2,.361,1,3,"%D",2,0)
data in the ELIGIBILITY STATUS field.  This only occurs if neither the
"^DD",2,2,.361,1,3,"%D",3,0)
original eligibility code nor the new eligibility code (the one being
"^DD",2,2,.361,1,3,"%D",4,0)
entered) is DOM. PATIENT.  If either is DOM. PATIENT, no update occurs.
"^DD",2,2,.361,1,3,"%D",5,0)
 
"^DD",2,2,.361,1,3,"%D",6,0)
Since the DOM. PATIENT eligibility is being inactivated with MAS 5.2,
"^DD",2,2,.361,1,3,"%D",7,0)
the conditional on this cross-reference will be removed in a future 
"^DD",2,2,.361,1,3,"%D",8,0)
version of MAS.
"^DD",2,2,.361,1,3,"DT")
2920429
"^DD",2,2,.361,1,4,0)
2^AEL^MUMPS
"^DD",2,2,.361,1,4,1)
S ^DPT("AEL",DA,+X)=""
"^DD",2,2,.361,1,4,2)
K ^DPT("AEL",DA,+X)
"^DD",2,2,.361,1,5,0)
2^AENR361^MUMPS
"^DD",2,2,.361,1,5,1)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,.361,1,5,2)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,.361,1,5,3)
DO NOT DELETE
"^DD",2,2,.361,1,5,"%D",0)
^^2^2^2970715^^
"^DD",2,2,.361,1,5,"%D",1,0)
This cross-reference is used to update the patient's current Patient Enrollment 
"^DD",2,2,.361,1,5,"%D",2,0)
record.
"^DD",2,2,.361,1,5,"DT")
2970715
"^DD",2,2,.361,3)
Select from the available list the eligibility code which best defines this applicant's primary entitlement to care.  For more detailed information, enter ??.
"^DD",2,2,.361,12)
Applicable code based on veteran or non-veteran status.
"^DD",2,2,.361,12.1)
S DFN=DA D ECD^DGLOCK1
"^DD",2,2,.361,20,0)
^.3LA^1^1
"^DD",2,2,.361,20,1,0)
ECD
"^DD",2,2,.361,21,0)
^^41^41^2940930^^^^
"^DD",2,2,.361,21,1,0)
Select from the available listing the appropriate eligibility code for
"^DD",2,2,.361,21,2,0)
this applicant.  For non-veteran applicants a wide variety of choices
"^DD",2,2,.361,21,3,0)
are available.  For veteran applicants the choices are screened [in the
"^DD",2,2,.361,21,4,0)
following order] dependent on the responses to other prompts:
"^DD",2,2,.361,21,5,0)
   
"^DD",2,2,.361,21,6,0)
1.  If the SERVICE CONNECTED prompt (field .301) is answered YES
"^DD",2,2,.361,21,7,0)
    only the following two choices are available:
"^DD",2,2,.361,21,8,0)
    
"^DD",2,2,.361,21,9,0)
    a.  If the SERVICE CONNECTED PERCENTAGE prompt (field .302) entered
"^DD",2,2,.361,21,10,0)
        is 50% or greater 'SERVICE CONNECTED 50% TO 100%' can be
"^DD",2,2,.361,21,11,0)
        selected.
"^DD",2,2,.361,21,12,0)
   
"^DD",2,2,.361,21,13,0)
    b.  Otherwise, the percentage is assumed to be less than 50% and
"^DD",2,2,.361,21,14,0)
        only 'SC, LESS THAN 50%' may be entered.
"^DD",2,2,.361,21,15,0)
   
"^DD",2,2,.361,21,16,0)
2.  If the response to the WERE YOU A PRISONER OF WAR field (# .525)
"^DD",2,2,.361,21,17,0)
    is YES and the veteran is not service connected, you must select 
"^DD",2,2,.361,21,18,0)
    PRISONER OF WAR as the eligibility code.
"^DD",2,2,.361,21,19,0)
   
"^DD",2,2,.361,21,20,0)
3.  If the veteran is receiving VA benefits, but does not meet the
"^DD",2,2,.361,21,21,0)
    criteria in items 1 and 2 above, then the following choices may
"^DD",2,2,.361,21,22,0)
    be presented for selection:
"^DD",2,2,.361,21,23,0)
 
"^DD",2,2,.361,21,24,0)
    If RECEIVING A&A BENEFITS is answered YES, the eligibility code
"^DD",2,2,.361,21,25,0)
    AID & ATTENDANCE may be selected.
"^DD",2,2,.361,21,26,0)
 
"^DD",2,2,.361,21,27,0)
    If the RECEIVING HOUSEBOUND BENEFITS is answered YES ,the eligibility
"^DD",2,2,.361,21,28,0)
    code HOUSEBOUND may be selected.
"^DD",2,2,.361,21,29,0)
 
"^DD",2,2,.361,21,30,0)
    If the above two prompts were answered NO, but the RECEIVING A VA
"^DD",2,2,.361,21,31,0)
    PENSION prompt was answered YES, only the NSC, VA PENSION prompt
"^DD",2,2,.361,21,32,0)
    may be selected.
"^DD",2,2,.361,21,33,0)
 
"^DD",2,2,.361,21,34,0)
4.  If none of the above pertain to this veteran, then the NSC eligibility
"^DD",2,2,.361,21,35,0)
    will be available for selection.
"^DD",2,2,.361,21,36,0)
 
"^DD",2,2,.361,21,37,0)
**  Dependent on the birthdate of the applicant, the following two
"^DD",2,2,.361,21,38,0)
    eligibility codes may be displayed along with those shown in items
"^DD",2,2,.361,21,39,0)
    3 through 5 above:  WORLD WAR I and MEXICAN BORDER WAR.  These would
"^DD",2,2,.361,21,40,0)
    display for veterans not meeting the criteria in items 1 and 2, but
"^DD",2,2,.361,21,41,0)
    whose date of birth is prior to 1920.
"^DD",2,2,.361,"AUDIT")
y
"^DD",2,2,.361,"DEL",1,0)
S DFN=DA D EV^DGLOCK I '$D(X)
"^DD",2,2,.361,"DT")
2970715
"^DD",2,2,.3611,0)
ELIGIBILITY STATUS^SX^P:PENDING VERIFICATION;R:PENDING RE-VERIFICATION;V:VERIFIED;^.361;1^D EK^DGLOCK Q:'$D(X)
"^DD",2,2,.3611,.1)
ELIG STATUS
"^DD",2,2,.3611,1,0)
^.1
"^DD",2,2,.3611,1,1,0)
^^TRIGGER^2^.3616
"^DD",2,2,.3611,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,.361)):^(.361),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y X ^DD(2,.3611,1,1,1.1) X ^DD(2,.3611,1,1,1.4)
"^DD",2,2,.3611,1,1,1.1)
S X=DIV S X=$S(($D(DUZ)#2):DUZ,1:"")
"^DD",2,2,.3611,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$S($D(^DD(2,.3611,0)):$P(^(0),U,3),1:"") S X=$P($P(Y(1),$C(59)_Y(0)_":",2),$C(59),1)="VERIFIED"
"^DD",2,2,.3611,1,1,1.4)
S DIH=$S($D(^DPT(DIV(0),.361)):^(.361),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,5,99))  S DIH=DIH_U" S %=$P(DIH,U,7,999),DIU=$P(DIH,U,6),^(.361)=$P(DIH,U,1,5)_U_DIV_$S(%]"":U_%,1:""),DIH=2,DIG=.3616 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.3611,1,1,2)
Q
"^DD",2,2,.3611,1,1,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$S($D(^DD(2,.3611,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^DPT(D0,.361)):^(.361),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,1)_":",2),$C(59),1)'="VERIFIED"
"^DD",2,2,.3611,1,1,2.4)
S DIH=$S($D(^DPT(DIV(0),.361)):^(.361),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,5,99))  S DIH=DIH_U" S %=$P(DIH,U,7,999),DIU=$P(DIH,U,6),^(.361)=$P(DIH,U,1,5)_U_DIV_$S(%]"":U_%,1:""),DIH=2,DIG=.3616 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.3611,1,1,"CREATE CONDITION")
ELIG STATUS="VERIFIED"
"^DD",2,2,.3611,1,1,"CREATE VALUE")
S X=$S(($D(DUZ)#2):DUZ,1:"")
"^DD",2,2,.3611,1,1,"DELETE CONDITION")
ELIG STATUS'="VERIFIED"
"^DD",2,2,.3611,1,1,"DELETE VALUE")
NO EFFECT
"^DD",2,2,.3611,1,1,"FIELD")
ELIGIBILITY STATUS ENTERED BY
"^DD",2,2,.3611,1,2,0)
^^TRIGGER^2^.3612
"^DD",2,2,.3611,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,.361)):^(.361),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(2,.3611,1,2,1.4)
"^DD",2,2,.3611,1,2,1.4)
S DIH=$S($D(^DPT(DIV(0),.361)):^(.361),1:""),DIV=X S %=$P(DIH,U,3,999),DIU=$P(DIH,U,2),^(.361)=$P(DIH,U,1,1)_U_DIV_$S(%]"":U_%,1:""),DIH=2,DIG=.3612 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.3611,1,2,2)
Q
"^DD",2,2,.3611,1,2,"CREATE VALUE")
TODAY
"^DD",2,2,.3611,1,2,"DELETE VALUE")
NO EFFECT
"^DD",2,2,.3611,1,2,"FIELD")
ELIGIBILITY STATUS DATE
"^DD",2,2,.3611,3)
Select the status of this patient's eligibility.
"^DD",2,2,.3611,5,1,0)
2^.361^3
"^DD",2,2,.3611,20,0)
^.3LA^1^1
"^DD",2,2,.3611,20,1,0)
ECD
"^DD",2,2,.3611,21,0)
^^3^3^2861117^^
"^DD",2,2,.3611,21,1,0)
Select from the available listing the appropriate eligibility status
"^DD",2,2,.3611,21,2,0)
for this applicant.  Only users who hold the designated security key
"^DD",2,2,.3611,21,3,0)
may enter/edit this field.
"^DD",2,2,.3611,"DEL",1,0)
D EK^DGLOCK I '$D(X)
"^DD",2,2,.3611,"DT")
2880925
"^DD",2,2,.3625,0)
*AMOUNT OF MILITARY RETIREMENT^NJ10,2X^^.362;5^D DOL^DGLOCK2 K:+X'=X&(X'?.N1"."2N)!(X>99999)!(X<0) X I $D(X) S DFN=DA D MV^DGLOCK I $D(X),$D(^DPT(DA,.362)),$P(^(.362),U,16)'="Y" W !?4,*7,"Not in receipt of Military Retirement benefits." K X
"^DD",2,2,.3625,.1)
MILT. RETIREMENT PAY AMOUNT
"^DD",2,2,.3625,3)
If this applicant is receiving military retirement enter the dollar amount received per year.
"^DD",2,2,.3625,5,1,0)
2^.36255^1
"^DD",2,2,.3625,9.2)
I $D(^DPT(DA,.362)),$P(^(.362),U,14)="Y" W !?4,*7,"Delete by answering 'IN RECEIPT OF MILITARY RETIREMENT' prompt NO." K X
"^DD",2,2,.3625,20,0)
^.3LA^1^1
"^DD",2,2,.3625,20,1,0)
MB
"^DD",2,2,.3625,21,0)
^^9^9^2880923^^^^
"^DD",2,2,.3625,21,1,0)
For this veteran who is in receipt of military retirement (IN RECEIPT
"^DD",2,2,.3625,21,2,0)
OF MILIT RETIREMENT prompt must be answered YES) enter the amount
"^DD",2,2,.3625,21,3,0)
received [a number between 0-99999].  Once monetary benefits are
"^DD",2,2,.3625,21,4,0)
verified only users who hold the designated security key may enter/edit
"^DD",2,2,.3625,21,5,0)
this field.  This field cannot be deleted as long as receipt of military
"^DD",2,2,.3625,21,6,0)
retirement is indicated.
"^DD",2,2,.3625,21,7,0)
  
"^DD",2,2,.3625,21,8,0)
If you wish to enter a monthly amount either preceed or follow it with
"^DD",2,2,.3625,21,9,0)
an asterisk and I'll multiply it out for you.
"^DD",2,2,.3625,"DEL",1,0)
S DFN=DA D MV^DGLOCK X ^DD(2,.3625,9.2):$D(X) I '$D(X)
"^DD",2,2,.3625,"DT")
2880923
"^DD",2,2,.3628,0)
AMOUNT OF OTHER RETIREMENT^NJ8,2X^^.362;8^D DOL^DGLOCK2 K:+X'=X&(X'?.N1"."2N)!(X>99999)!(X<1) X I $D(X) S DFN=DA D MV^DGLOCK
"^DD",2,2,.3628,.1)
OTHER RETIREMENT AMOUNT
"^DD",2,2,.3628,3)
If this patient receives retirment from another source enter the dollar amount received per year.
"^DD",2,2,.3628,20,0)
^.3LA^1^1
"^DD",2,2,.3628,20,1,0)
MB
"^DD",2,2,.3628,21,0)
^^7^7^2880923^^^^
"^DD",2,2,.3628,21,1,0)
For this veteran applicant enter the amount of other retirement s/he
"^DD",2,2,.3628,21,2,0)
is in receipt of [a number between 1-99999].  Leave blank if none
"^DD",2,2,.3628,21,3,0)
received.  Once monetary benefits have been verified only users who
"^DD",2,2,.3628,21,4,0)
hold the designated security key may enter/edit this field.
"^DD",2,2,.3628,21,5,0)
  
"^DD",2,2,.3628,21,6,0)
If you wish to enter a monthly amount either preceed or follow it with
"^DD",2,2,.3628,21,7,0)
an asterisk and I'll multiple it out for you.
"^DD",2,2,.3628,"DEL",1,0)
S DFN=DA D MV^DGLOCK I '$D(X)
"^DD",2,2,.3628,"DT")
2880923
"^DD",2,2,1,0)
ALIAS^2.01^^.01;0
"^DD",2,2,1,3)
If this patient is known by another name enter that name.
"^DD",2,2,1,20,0)
^.3LA^1^1
"^DD",2,2,1,20,1,0)
DEMOG
"^DD",2,2,1,21,0)
^^4^4^2911214^^^^
"^DD",2,2,1,21,1,0)
If this applicant is known by any name other than that entered in
"^DD",2,2,1,21,2,0)
the NAME field enter that/those other name(s) here.  Any entry
"^DD",2,2,1,21,3,0)
to this field will be cross-referenced and the applicant may be
"^DD",2,2,1,21,4,0)
called up using this alias.
"^DD",2,2,401.4,0)
DATE ENTERED ON SI LIST^RDX^^DAC;2^S %DT="EX",%DT(0)="-NOW" D ^%DT S X=Y K:Y<1 X
"^DD",2,2,401.4,3)
For this seriouslly ill patient enter the date placed on the seriouslly ill roster.
"^DD",2,2,401.4,5,1,0)
2^401.3^2
"^DD",2,2,401.4,21,0)
^^1^1^2861022^
"^DD",2,2,401.4,21,1,0)
Enter the date the patient was placed on the Seriouslly Ill list.
"^DD",2,2,401.4,"DT")
2900313
"^DD",2,2,991.07,0)
SCORE CALCULATION DATE^D^^MPI;7^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",2,2,991.07,3)
This is the last date that the CMOR Activity Score was calculated at this site.
"^DD",2,2,991.07,21,0)
^^2^2^2990111^^^^
"^DD",2,2,991.07,21,1,0)
This is the last date that the CMOR ACTIVITY SCORE was calculated
"^DD",2,2,991.07,21,2,0)
at this site.
"^DD",2,2,991.07,"AUDIT")
n
"^DD",2,2,991.07,"DT")
2970730
"^DD",2,2,1000,0)
DISPOSITION LOG-IN DATE/TIME^2.101DA^^DIS;0
"^DD",2,2,1000,3)
Enter the date/time this patient was registered for care.
"^DD",2,2,1000,21,0)
6^^6^6^2930603^^^^
"^DD",2,2,1000,21,1,0)
The date/time at which this applicant applied for medical benefits, e.g.,
"^DD",2,2,1000,21,2,0)
was registered for care using the 'Registration' option of ADT.
"^DD",2,2,1000,21,3,0)
 
"^DD",2,2,1000,21,4,0)
This multiple contains information on each registration entered for this
"^DD",2,2,1000,21,5,0)
patient including the date of registration, date of disposition, and type
"^DD",2,2,1000,21,6,0)
of disposition.
"^DD",2,2,1000,23,0)
^^6^6^2930603^^
"^DD",2,2,1000,23,1,0)
The date/time at which this applicant applied for medical benefits, e.g.,
"^DD",2,2,1000,23,2,0)
was registered for care using the 'Registration' option of ADT.
"^DD",2,2,1000,23,3,0)
 
"^DD",2,2,1000,23,4,0)
This multiple contains information on each registration entered for this
"^DD",2,2,1000,23,5,0)
patient including the date of registration, date of disposition, and type
"^DD",2,2,1000,23,6,0)
of disposition.
"^DD",2,2.01,0)
ALIAS SUB-FIELD^NL^100.03^3
"^DD",2,2.01,0,"NM","ALIAS")

"^DD",2,2.01,.01,0)
ALIAS^MF^^0;1^K:$L(X)>30!($L(X)<3) X I $D(X) S DG20NAME=X,(X,DG20NAME)=$$FORMAT^XLFNAME7(.DG20NAME,3,30) K:'$L(X) X,DG20NAME
"^DD",2,2.01,.01,1,0)
^.1
"^DD",2,2.01,.01,1,1,0)
2^B^MNEMONIC
"^DD",2,2.01,.01,1,1,1)
S:'$D(^DPT("B",$E(X,1,30),DA(1),DA)) ^(DA)=1
"^DD",2,2.01,.01,1,1,2)
I $D(^DPT("B",$E(X,1,30),DA(1),DA)),^(DA) K ^(DA)
"^DD",2,2.01,.01,3)
Enter name in 'LAST,FIRST MIDDLE SUFFIX' format, must be 3-30 characters in length.
"^DD",2,2.01,.01,21,0)
^^4^4^2861007^
"^DD",2,2.01,.01,21,1,0)
Enter the alias name in 'LAST,FIRST MIDDLE SUFFIX' format.
"^DD",2,2.01,.01,21,2,0)
This value must be 3-30 characters in length and may contain only uppercase
"^DD",2,2.01,.01,21,3,0)
alpha characters, spaces, apostrophes, hyphens and one comma.  All other
"^DD",2,2.01,.01,21,4,0)
characters and parenthetical text will be removed.
"^DD",2,2.01,.01,"DT")
3050611
"^DD",2,2.101,0)
DISPOSITION LOG-IN DATE/TIME SUB-FIELD^NL^11500.02^41
"^DD",2,2.101,0,"NM","DISPOSITION LOG-IN DATE/TIME")

"^DD",2,2.101,.01,0)
LOG IN DATE/TIME^MDX^^0;1^S %DT="ETRPX",%DT(0)="-NOW" D ^%DT S X=Y K:Y<1 X I $D(X) S DINUM=9999999-X,LL=+$O(^DPT(DA(1),"DIS",0)) I LL>0,DINUM'<LL!(DINUM'<(9999999-$P(^(LL,0),"^",6))) K X,DINUM W !!,"Entry must be after last disposition.",!!,*7
"^DD",2,2.101,.01,1,0)
^.1
"^DD",2,2.101,.01,1,1,0)
^^TRIGGER^2.101^50
"^DD",2,2.101,.01,1,1,1)
X ^DD(2.101,.01,1,1,1.3) S Y(2)=$C(59)_$S($D(^DD(2.101,50,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^DPT(D0,"DIS",D1,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,10)_":",2),$C(59),1) S DIU=X K Y S X=DIV S X="1" X ^DD(2.101,.01,1,1,1.4)
"^DD",2,2.101,.01,1,1,1.3)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1
"^DD",2,2.101,.01,1,1,1.4)
S DIH=$S($D(^DPT(DIV(0),"DIS",DIV(1),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,9,99))  S DIH=DIH_U" S %=$P(DIH,U,11,999),DIU=$P(DIH,U,10),^(0)=$P(DIH,U,1,9)_U_DIV_$S(%]"":U_%,1:""),DIH=2.101,DIG=50 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2.101,.01,1,1,2)
X ^DD(2.101,.01,1,1,2.3) S Y(2)=$C(59)_$S($D(^DD(2.101,50,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^DPT(D0,"DIS",D1,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,10)_":",2),$C(59),1) S DIU=X K Y S X=DIV S X="" X ^DD(2.101,.01,1,1,2.4)
"^DD",2,2.101,.01,1,1,2.3)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1
"^DD",2,2.101,.01,1,1,2.4)
S DIH=$S($D(^DPT(DIV(0),"DIS",DIV(1),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,9,99))  S DIH=DIH_U" S %=$P(DIH,U,11,999),DIU=$P(DIH,U,10),^(0)=$P(DIH,U,1,9)_U_DIV_$S(%]"":U_%,1:""),DIH=2.101,DIG=50 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2.101,.01,1,1,"CREATE VALUE")
"1"
"^DD",2,2.101,.01,1,1,"DELETE VALUE")
@
"^DD",2,2.101,.01,1,1,"FIELD")
AC
"^DD",2,2.101,.01,1,2,0)
2^ADIS
"^DD",2,2.101,.01,1,2,1)
S ^DPT("ADIS",$E(X,1,30),DA(1),DA)=""
"^DD",2,2.101,.01,1,2,2)
K ^DPT("ADIS",$E(X,1,30),DA(1),DA)
"^DD",2,2.101,.01,1,3,0)
2^ADI^MUMPS
"^DD",2,2.101,.01,1,3,1)
S ^DPT("ADI",$E(X,1,30),DA(1),DA)=""
"^DD",2,2.101,.01,1,3,2)
K ^DPT("ADI",$E(X,1,30),DA(1),DA)
"^DD",2,2.101,.01,1,3,"%D",0)
^^8^8^2920327^
"^DD",2,2.101,.01,1,3,"%D",1,0)
This cross-reference is identical to the ^DPT("ADIS" cross-reference on
"^DD",2,2.101,.01,1,3,"%D",2,0)
this field.  The only difference is that this ADI cross-reference was
"^DD",2,2.101,.01,1,3,"%D",3,0)
also set on disposition if the registration and disposition were in
"^DD",2,2.101,.01,1,3,"%D",4,0)
different months.
"^DD",2,2.101,.01,1,3,"%D",5,0)
 
"^DD",2,2.101,.01,1,3,"%D",6,0)
MAS no longer uses this cross-reference and this serves as notification
"^DD",2,2.101,.01,1,3,"%D",7,0)
that this cross-reference will be removed the first release of MAS
"^DD",2,2.101,.01,1,3,"%D",8,0)
released 18 months after the release of MAS 5.2.
"^DD",2,2.101,.01,1,4,0)
2.101^AODS1^MUMPS
"^DD",2,2.101,.01,1,4,1)
S A1B2TAG="REG" D ^A1B2XFR
"^DD",2,2.101,.01,1,4,2)
S A1B2TAG="REG" D ^A1B2XFR
"^DD",2,2.101,.01,3)
Enter the date and time this patient was logged as a new application for care. Date must be before today's date and must be after the last disposition.
"^DD",2,2.101,.01,4)
W !,"Enter '??' (a double question mark) for a list of the available dates and times.",!
"^DD",2,2.101,.01,21,0)
^^4^4^2911214^
"^DD",2,2.101,.01,21,1,0)
The date/time the patient was registered using the 'Register a Patient'
"^DD",2,2.101,.01,21,2,0)
option in ADT should be entered into this field.  Registrations must be
"^DD",2,2.101,.01,21,3,0)
entered using the ADT module and should not be entered or edited using
"^DD",2,2.101,.01,21,4,0)
VA FileMan options.
"^DD",2,2.101,.01,"DT")
2941215
"^DD",2,2.101,5,0)
LOG OUT DATE TIME^RDX^^0;6^S %DT="ETRX",%DT(0)="-NOW" D ^%DT S X=Y K:Y<1 X I $D(X),X<-(DA-9999999) K X
"^DD",2,2.101,5,1,0)
^.1
"^DD",2,2.101,5,1,1,0)
^^TRIGGER^2.101^50
"^DD",2,2.101,5,1,1,1)
X ^DD(2.101,5,1,1,1.3) S Y(2)=$C(59)_$S($D(^DD(2.101,50,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^DPT(D0,"DIS",D1,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,10)_":",2),$C(59),1) S DIU=X K Y S X=DIV S X="" X ^DD(2.101,5,1,1,1.4)
"^DD",2,2.101,5,1,1,1.3)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1
"^DD",2,2.101,5,1,1,1.4)
S DIH=$S($D(^DPT(DIV(0),"DIS",DIV(1),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,9,99))  S DIH=DIH_U" S %=$P(DIH,U,11,999),DIU=$P(DIH,U,10),^(0)=$P(DIH,U,1,9)_U_DIV_$S(%]"":U_%,1:""),DIH=2.101,DIG=50 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2.101,5,1,1,2)
X ^DD(2.101,5,1,1,2.3) S Y(2)=$C(59)_$S($D(^DD(2.101,50,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^DPT(D0,"DIS",D1,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,10)_":",2),$C(59),1) S DIU=X K Y S X=DIV S X="1" X ^DD(2.101,5,1,1,2.4)
"^DD",2,2.101,5,1,1,2.3)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1
"^DD",2,2.101,5,1,1,2.4)
S DIH=$S($D(^DPT(DIV(0),"DIS",DIV(1),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,9,99))  S DIH=DIH_U" S %=$P(DIH,U,11,999),DIU=$P(DIH,U,10),^(0)=$P(DIH,U,1,9)_U_DIV_$S(%]"":U_%,1:""),DIH=2.101,DIG=50 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2.101,5,1,1,"CREATE VALUE")
@
"^DD",2,2.101,5,1,1,"DELETE VALUE")
"1"
"^DD",2,2.101,5,1,1,"FIELD")
AC
"^DD",2,2.101,5,1,2,0)
2^ADIS4^MUMPS
"^DD",2,2.101,5,1,2,1)
S L=+^DPT(DA(1),"DIS",DA,0) S:$E(X,1,5)>$E(L,1,5) ^DPT("ADI",X,DA(1),DA)=""
"^DD",2,2.101,5,1,2,2)
K ^DPT("ADI",X,DA(1),DA)
"^DD",2,2.101,5,1,2,"%D",0)
^^3^3^2920327^
"^DD",2,2.101,5,1,2,"%D",1,0)
This cross-reference is also set on the LOG-IN DATE/TIME field.  It is
"^DD",2,2.101,5,1,2,"%D",2,0)
no longer used by MAS and it will be removed in the first release of MAS
"^DD",2,2.101,5,1,2,"%D",3,0)
released 18 months after MAS version 5.2.
"^DD",2,2.101,5,3)
Enter the date and time this application for care was dispositioned.
"^DD",2,2.101,5,21,0)
^^1^1^2911214^
"^DD",2,2.101,5,21,1,0)
Enter in this field the date/time the patient was dispositioned.
"^DD",2,2.101,5,"DT")
2901018
"^DD",2,2.101,30,0)
ATTORNEY'S NAME^F^^3;1^K:$L(X)>30!($L(X)<3) X I $D(X) S DG20NAME=X,(X,DG20NAME)=$$FORMAT^XLFNAME7(.DG20NAME,3,30) K:'$L(X) X,DG20NAME
"^DD",2,2.101,30,3)
Enter name in 'LAST,FIRST MIDDLE SUFFIX' format, must be 3-30 characters in length.
"^DD",2,2.101,30,21,0)
^^4^4^2911214^^
"^DD",2,2.101,30,21,1,0)
Enter the attorney's name in 'LAST,FIRST MIDDLE SUFFIX' format.
"^DD",2,2.101,30,21,2,0)
This value must be 3-30 characters in length and may contain only uppercase
"^DD",2,2.101,30,21,3,0)
alpha characters, spaces, apostrophes, hyphens and one comma.  All other
"^DD",2,2.101,30,21,4,0)
characters and parenthetical text will be removed.
"^DD",2,2.101,30,"DT")
3050611
"BLD",6298,6)
^624
**END**
**END**
