Released IB*2*312 SEQ #313
Extracted from mail message
**KIDS**:IB*2.0*312^

**INSTALL NAME**
IB*2.0*312
"BLD",5832,0)
IB*2.0*312^INTEGRATED BILLING^0^3060523^y
"BLD",5832,1,0)
^^1^1^3050630^
"BLD",5832,1,1,0)
IB SUNSETTING OF OPTIONS
"BLD",5832,4,0)
^9.64PA^^
"BLD",5832,"KRN",0)
^9.67PA^8989.52^19
"BLD",5832,"KRN",.4,0)
.4
"BLD",5832,"KRN",.401,0)
.401
"BLD",5832,"KRN",.402,0)
.402
"BLD",5832,"KRN",.403,0)
.403
"BLD",5832,"KRN",.5,0)
.5
"BLD",5832,"KRN",.84,0)
.84
"BLD",5832,"KRN",3.6,0)
3.6
"BLD",5832,"KRN",3.8,0)
3.8
"BLD",5832,"KRN",9.2,0)
9.2
"BLD",5832,"KRN",9.8,0)
9.8
"BLD",5832,"KRN",9.8,"NM",0)
^9.68A^17^17
"BLD",5832,"KRN",9.8,"NM",1,0)
IBAMTD^^0^B18809071
"BLD",5832,"KRN",9.8,"NM",2,0)
IBAMTS^^0^B17712149
"BLD",5832,"KRN",9.8,"NM",3,0)
IBAECO^^0^B16561245
"BLD",5832,"KRN",9.8,"NM",4,0)
IBAMTC^^0^B25558065
"BLD",5832,"KRN",9.8,"NM",5,0)
IBTRKR2^^0^B5693369
"BLD",5832,"KRN",9.8,"NM",6,0)
IBTRKR3^^0^B44426999
"BLD",5832,"KRN",9.8,"NM",7,0)
IBTRKR4^^0^B13921705
"BLD",5832,"KRN",9.8,"NM",8,0)
IBTRKR5^^0^B30688575
"BLD",5832,"KRN",9.8,"NM",9,0)
IBCD^^0^B9728970
"BLD",5832,"KRN",9.8,"NM",10,0)
IBAMTED^^0^B11359061
"BLD",5832,"KRN",9.8,"NM",11,0)
IBBSHDWN^^0^B27343484
"BLD",5832,"KRN",9.8,"NM",12,0)
IBCA^^0^B24308332
"BLD",5832,"KRN",9.8,"NM",13,0)
IBTRE2^^0^B32981505
"BLD",5832,"KRN",9.8,"NM",14,0)
IBTRKR41^^0^B31657328
"BLD",5832,"KRN",9.8,"NM",15,0)
IBECEA3^^0^B67660841
"BLD",5832,"KRN",9.8,"NM",16,0)
IBECEA1^^0^B14626334
"BLD",5832,"KRN",9.8,"NM",17,0)
IBECEA21^^0^B29059334
"BLD",5832,"KRN",9.8,"NM","B","IBAECO",3)

"BLD",5832,"KRN",9.8,"NM","B","IBAMTC",4)

"BLD",5832,"KRN",9.8,"NM","B","IBAMTD",1)

"BLD",5832,"KRN",9.8,"NM","B","IBAMTED",10)

"BLD",5832,"KRN",9.8,"NM","B","IBAMTS",2)

"BLD",5832,"KRN",9.8,"NM","B","IBBSHDWN",11)

"BLD",5832,"KRN",9.8,"NM","B","IBCA",12)

"BLD",5832,"KRN",9.8,"NM","B","IBCD",9)

"BLD",5832,"KRN",9.8,"NM","B","IBECEA1",16)

"BLD",5832,"KRN",9.8,"NM","B","IBECEA21",17)

"BLD",5832,"KRN",9.8,"NM","B","IBECEA3",15)

"BLD",5832,"KRN",9.8,"NM","B","IBTRE2",13)

"BLD",5832,"KRN",9.8,"NM","B","IBTRKR2",5)

"BLD",5832,"KRN",9.8,"NM","B","IBTRKR3",6)

"BLD",5832,"KRN",9.8,"NM","B","IBTRKR4",7)

"BLD",5832,"KRN",9.8,"NM","B","IBTRKR41",14)

"BLD",5832,"KRN",9.8,"NM","B","IBTRKR5",8)

"BLD",5832,"KRN",19,0)
19
"BLD",5832,"KRN",19,"NM",0)
^9.68A^^
"BLD",5832,"KRN",19.1,0)
19.1
"BLD",5832,"KRN",101,0)
101
"BLD",5832,"KRN",409.61,0)
409.61
"BLD",5832,"KRN",771,0)
771
"BLD",5832,"KRN",870,0)
870
"BLD",5832,"KRN",8989.51,0)
8989.51
"BLD",5832,"KRN",8989.52,0)
8989.52
"BLD",5832,"KRN",8994,0)
8994
"BLD",5832,"KRN","B",.4,.4)

"BLD",5832,"KRN","B",.401,.401)

"BLD",5832,"KRN","B",.402,.402)

"BLD",5832,"KRN","B",.403,.403)

"BLD",5832,"KRN","B",.5,.5)

"BLD",5832,"KRN","B",.84,.84)

"BLD",5832,"KRN","B",3.6,3.6)

"BLD",5832,"KRN","B",3.8,3.8)

"BLD",5832,"KRN","B",9.2,9.2)

"BLD",5832,"KRN","B",9.8,9.8)

"BLD",5832,"KRN","B",19,19)

"BLD",5832,"KRN","B",19.1,19.1)

"BLD",5832,"KRN","B",101,101)

"BLD",5832,"KRN","B",409.61,409.61)

"BLD",5832,"KRN","B",771,771)

"BLD",5832,"KRN","B",870,870)

"BLD",5832,"KRN","B",8989.51,8989.51)

"BLD",5832,"KRN","B",8989.52,8989.52)

"BLD",5832,"KRN","B",8994,8994)

"BLD",5832,"QUES",0)
^9.62^^
"BLD",5832,"REQB",0)
^9.611^9^7
"BLD",5832,"REQB",1,0)
IB*2.0*321^2
"BLD",5832,"REQB",3,0)
IB*2.0*240^2
"BLD",5832,"REQB",4,0)
IB*2.0*214^2
"BLD",5832,"REQB",6,0)
IB*2.0*234^2
"BLD",5832,"REQB",7,0)
IB*2.0*249^2
"BLD",5832,"REQB",8,0)
IB*2.0*292^2
"BLD",5832,"REQB",9,0)
IB*2.0*336^2
"BLD",5832,"REQB","B","IB*2.0*214",4)

"BLD",5832,"REQB","B","IB*2.0*234",6)

"BLD",5832,"REQB","B","IB*2.0*240",3)

"BLD",5832,"REQB","B","IB*2.0*249",7)

"BLD",5832,"REQB","B","IB*2.0*292",8)

"BLD",5832,"REQB","B","IB*2.0*321",1)

"BLD",5832,"REQB","B","IB*2.0*336",9)

"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^2^1
"PKG",200,20,2,0)
2^^IBAXDR
"PKG",200,20,2,1)

"PKG",200,20,"B",2,2)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
312^3060523
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3060523
"PKG",200,22,1,"PAH",1,1,1,0)
IB SUNSETTING OF OPTIONS
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
17
"RTN","IBAECO")
0^3^B16561245^B15226399
"RTN","IBAECO",1,0)
IBAECO ;ALB/BGA - LONG TERM CARE OUTPATIENT TRACKER ;16-OCT-01
"RTN","IBAECO",2,0)
 ;;2.0;INTEGRATED BILLING;**164,171,176,188,312**;21-MAR-94
"RTN","IBAECO",3,0)
 ;;Per VHA DIRECTIVE 10-93-142, this routine should not be modified.
"RTN","IBAECO",4,0)
 ;
"RTN","IBAECO",5,0)
 ; Comment- This routine is invoked via the appointment driver ^IBAMTS
"RTN","IBAECO",6,0)
 ;          This program checks for check outs and determines if
"RTN","IBAECO",7,0)
 ;          the person checking out is ELIGIBLE for Long Term Care
"RTN","IBAECO",8,0)
 ;          and determines if the encounter was related to LTC.
"RTN","IBAECO",9,0)
 ;          If the episode of care is related to LTC and the patient
"RTN","IBAECO",10,0)
 ;          is eligible to receive care and is compliant with all
"RTN","IBAECO",11,0)
 ;          the LTC business rules than the entry is added to
"RTN","IBAECO",12,0)
 ;          the LTC transaction file #351.8.
"RTN","IBAECO",13,0)
 ;
"RTN","IBAECO",14,0)
 ; Determine if this encounter has a status of checked out
"RTN","IBAECO",15,0)
EN N IBEVT,IBEV0,DFN,IBSDHDL,IBORG,IBOE,IBLTCST,IBCL,IBDT,IBST,IBM
"RTN","IBAECO",16,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBAECO",17,0)
 S IBSDHDL=0
"RTN","IBAECO",18,0)
 ;
"RTN","IBAECO",19,0)
 ; === ON/OFF Switch by date if before 11/15/06 software will not run
"RTN","IBAECO",20,0)
 ; === IBALTC=0 the Encounter is not LTC Billable pass to MT Module
"RTN","IBAECO",21,0)
 ; === IBALTC=1 Encounter is LTC Billable do NOT Pass to MTC
"RTN","IBAECO",22,0)
 ;
"RTN","IBAECO",23,0)
 S IBALTC=0
"RTN","IBAECO",24,0)
 ;I DT<$$STDATE^IBAECU1() Q  ;quit if today<effective date
"RTN","IBAECO",25,0)
 F  S IBSDHDL=$O(^TMP("SDEVT",$J,IBSDHDL)) Q:'IBSDHDL  D
"RTN","IBAECO",26,0)
 . S IBORG=0 F  S IBORG=$O(^TMP("SDEVT",$J,IBSDHDL,IBORG)) Q:'IBORG  D
"RTN","IBAECO",27,0)
 . . S IBOE=0 F  S IBOE=$O(^TMP("SDEVT",$J,IBSDHDL,IBORG,"SDOE",IBOE)) Q:'IBOE  S IBEVT=$G(^(IBOE,0,"AFTER")),IBEV0=$G(^("BEFORE")) D
"RTN","IBAECO",28,0)
 . . . ;
"RTN","IBAECO",29,0)
 . . . Q:$P(IBEVT,U,6)  ; do not evaluate sibling encounters
"RTN","IBAECO",30,0)
 . . . Q:$P(IBEVT,U,12)=8  ; do not evaluate inpatient encounters
"RTN","IBAECO",31,0)
 . . . ;
"RTN","IBAECO",32,0)
 . . . ; set variables
"RTN","IBAECO",33,0)
 . . . S DFN=$P(IBEVT,U,2),IBDT=$S(+IBEVT:+IBEVT,1:+IBEV0),IBST=$P(IBEVT,U,3)
"RTN","IBAECO",34,0)
 . . . Q:IBDT<$$STDATE^IBAECU1
"RTN","IBAECO",35,0)
 . . . Q:'DFN!('IBDT)
"RTN","IBAECO",36,0)
 . . . ;
"RTN","IBAECO",37,0)
 . . . ; Do NOT PROCESS on VistA if IBDT>=Switch Eff Date  ;CCR-930
"RTN","IBAECO",38,0)
 . . . I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q           ;IB*2.0*312
"RTN","IBAECO",39,0)
 . . . ;
"RTN","IBAECO",40,0)
 . . . ; stop code preset and LTC event?
"RTN","IBAECO",41,0)
 . . . I 'IBST Q
"RTN","IBAECO",42,0)
 . . . I '$$LTCSTOP^IBAECU(IBST) Q
"RTN","IBAECO",43,0)
 . . . ;
"RTN","IBAECO",44,0)
 . . . ; set flag to stop MT billing
"RTN","IBAECO",45,0)
 . . . S IBALTC=1
"RTN","IBAECO",46,0)
 . . . ;
"RTN","IBAECO",47,0)
 . . . ; LTC patient check
"RTN","IBAECO",48,0)
 . . . S IBLTCST=+$$LTCST^IBAECU(DFN,IBDT\1,1)
"RTN","IBAECO",49,0)
 . . . ;
"RTN","IBAECO",50,0)
 . . . ; no 1010EC on file
"RTN","IBAECO",51,0)
 . . . I IBLTCST=0 D  D XMNOEC^IBAECU(DFN,.IBDT,.IBM) Q
"RTN","IBAECO",52,0)
 . . . . S IBM(1)="",IBM(2)="  Event Type:  Outpatient Encounter"
"RTN","IBAECO",53,0)
 . . . . S IBM(3)="",IBM(4)="Event Action:  "_$S($P(IBEV0,"^",12)'=2&($P(IBEVT,"^",12)=2):"Checked Out",IBEVT&(IBEV0):"Edited",IBEV0:"Deleted",1:"Added")
"RTN","IBAECO",54,0)
 . . . . S IBM(5)="",IBM(6)="    Location:  "_$S($P(IBEVT,"^",4):$P($G(^SC(+$P(IBEVT,"^",4),0)),"^"),$P(IBEVO,"^",4):$P($G(^SC(+$P(IBEVO,"^",4),0)),"^"),1:"")
"RTN","IBAECO",55,0)
 . . . ;
"RTN","IBAECO",56,0)
 . . . ; is this a back billing issue, if so, send message and quit
"RTN","IBAECO",57,0)
 . . . I $$LASTMJ^IBAECU()>0,$$LASTMJ^IBAECU()>IBDT D  D XMBACK^IBAECU(DFN,.IBM) Q
"RTN","IBAECO",58,0)
 . . . . S IBM(1)="An Outpatient Encounter was "_$S(IBEVT&(IBEV0):"Edited",IBEV0:"Deleted",1:"Added")_"."
"RTN","IBAECO",59,0)
 . . . . S IBM(2)="This may result in a Back Billing issue for LTC.  You should review the"
"RTN","IBAECO",60,0)
 . . . . S IBM(3)="patient's records for "_$$FMTE^XLFDT(IBDT)_" to ensure correct billing."
"RTN","IBAECO",61,0)
 . . . . S IBM(4)="LTC Billing Clock and LTC charges may have to be manually adjusted."
"RTN","IBAECO",62,0)
 . . . ;
"RTN","IBAECO",63,0)
 . . . ; add LTC clock/update last event date (if not LTC exempt)
"RTN","IBAECO",64,0)
 . . . I IBLTCST=2 S IBCL=$$CLOCK^IBAECU(DFN,IBDT\1)
"RTN","IBAECO",65,0)
 . . . ;
"RTN","IBAECO",66,0)
 ;
"RTN","IBAECO",67,0)
 Q
"RTN","IBAECO",68,0)
 ;
"RTN","IBAECO",69,0)
CALC ; used to calculate the outpatient charge
"RTN","IBAECO",70,0)
 ; variables needed DFN, IBLTCST, IBCHG, IBFR
"RTN","IBAECO",71,0)
 ; this will adjust IBCHG so the patient is not above their calculated
"RTN","IBAECO",72,0)
 ; copay cap for the month.
"RTN","IBAECO",73,0)
 N IBTYP,IBT
"RTN","IBAECO",74,0)
 ;
"RTN","IBAECO",75,0)
 ; find all LTC charges and set flag to determine inpt or opt
"RTN","IBAECO",76,0)
 ; cap to be used.
"RTN","IBAECO",77,0)
 D TOT^IBAECU
"RTN","IBAECO",78,0)
 ;
"RTN","IBAECO",79,0)
 W !!,"  Calculated Monthly Copay Cap Type to be used: ",$S(IBTYP="I":"IN",1:"OUT"),"PATIENT"
"RTN","IBAECO",80,0)
 W !,"               Calculated Monthly Copay Cap is: $ ",$FN($P(IBLTCST,"^",$S(IBTYP="I":3,1:5)),",",2)
"RTN","IBAECO",81,0)
 W !,"                       Total previously billed: $ ",$FN(IBT,",",2)
"RTN","IBAECO",82,0)
 ;
"RTN","IBAECO",83,0)
 I IBCHG+IBT>$P(IBLTCST,"^",$S(IBTYP="I":3,1:5)) S IBCHG=$P(IBLTCST,"^",$S(IBTYP="I":3,1:5))-IBT
"RTN","IBAECO",84,0)
 ;
"RTN","IBAECO",85,0)
 ; check for negative $ amount cap
"RTN","IBAECO",86,0)
 I $P(IBLTCST,"^",$S(IBTYP="I":3,1:5))<0 S IBCHG=0
"RTN","IBAECO",87,0)
 ;
"RTN","IBAECO",88,0)
 Q
"RTN","IBAMTC")
0^4^B25558065^B24161099
"RTN","IBAMTC",1,0)
IBAMTC ;ALB/CPM-MEANS TEST NIGHTLY COMPILATION JOB ;09-OCT-91
"RTN","IBAMTC",2,0)
V ;;2.0;INTEGRATED BILLING;**34,52,70,93,100,118,115,132,150,153,137,176,215,275,321,312**;21-MAR-94
"RTN","IBAMTC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBAMTC",4,0)
 ;
"RTN","IBAMTC",5,0)
INIT ; Entry point - initialize variables and parameters
"RTN","IBAMTC",6,0)
 ;
"RTN","IBAMTC",7,0)
 ;***
"RTN","IBAMTC",8,0)
 ;S XRTL=$ZU(0),XRTN="IBAMTC-1" D T0^%ZOSV ;start rt clock
"RTN","IBAMTC",9,0)
 ;
"RTN","IBAMTC",10,0)
 D UPDT^IBARXEPS($$FMADD^XLFDT(DT,-30),DT,1)
"RTN","IBAMTC",11,0)
 ;
"RTN","IBAMTC",12,0)
 D NIGHTLY^IBTRKR ; claims tracking nightly update
"RTN","IBAMTC",13,0)
 ;
"RTN","IBAMTC",14,0)
 D ^IBCD ; automated biller
"RTN","IBAMTC",15,0)
 ;
"RTN","IBAMTC",16,0)
 D RELPR^IBAMTV3 ; auto-release patient charges on hold at least 60 days
"RTN","IBAMTC",17,0)
 ;
"RTN","IBAMTC",18,0)
 D EN^IBOHRL ; auto-release patient charges on hold longer than 90 days
"RTN","IBAMTC",19,0)
 ;
"RTN","IBAMTC",20,0)
 K IBDT D BJ^IBJDE  ; Automated DM extract monthly background job.
"RTN","IBAMTC",21,0)
 ;
"RTN","IBAMTC",22,0)
 ; - transfer pricing background job
"RTN","IBAMTC",23,0)
 I '+$$SWSTAT^IBBAPI() D ^IBATEI1                           ;IB*2.0*312
"RTN","IBAMTC",24,0)
 ;
"RTN","IBAMTC",25,0)
 D NIGHT^IBARXMA ; transmit copay cap info
"RTN","IBAMTC",26,0)
 ;
"RTN","IBAMTC",27,0)
 D NOW^%DTC S IBAFY=$$FY^IBOUTL(X),DT=X,U="^"
"RTN","IBAMTC",28,0)
 S (IBERRN,IBWHER,IBJOB,IBY,Y)=1,IBCNT=0 K ^TMP($J,"IBAMTC")
"RTN","IBAMTC",29,0)
 D SITE^IBAUTL I Y<1 S IBY=Y D ERR G CLEAN
"RTN","IBAMTC",30,0)
 D SERV^IBAUTL2 I IBY<1 D ERR G CLEAN
"RTN","IBAMTC",31,0)
 ;
"RTN","IBAMTC",32,0)
 ; Compile Means Test copay and per diem charges for all inpatients
"RTN","IBAMTC",33,0)
 ; Check PFSS Switch                                        ;IB*2.0*312
"RTN","IBAMTC",34,0)
 I '+$$SWSTAT^IBBAPI() S (IBWARD,DFN)="" F  S IBWARD=$O(^DPT("CN",IBWARD)) Q:IBWARD=""  F  S DFN=$O(^DPT("CN",IBWARD,DFN)) Q:'DFN  W !,DFN S IBA=^(DFN),IBY=1 D PROC
"RTN","IBAMTC",35,0)
 ;
"RTN","IBAMTC",36,0)
 ;send inpatients' CV (CombatVet) expiration e-mail alert
"RTN","IBAMTC",37,0)
 D CVEXMAIL^IBACV(DT)
"RTN","IBAMTC",38,0)
 ;
"RTN","IBAMTC",39,0)
 ;check & start LTC Monthly Job LTC if necessary
"RTN","IBAMTC",40,0)
 ; This code may need to be expanded, IF we don't          ;IB*2.0*312 
"RTN","IBAMTC",41,0)
 ; implement on the 1st of the month, for a clean cut over ;IB*2.0*312
"RTN","IBAMTC",42,0)
 I '+$$SWSTAT^IBBAPI() D NJ^IBAECN1                        ;IB*2.0*312
"RTN","IBAMTC",43,0)
 ;
"RTN","IBAMTC",44,0)
 D EN^IBCE ; Transmit electronic bills
"RTN","IBAMTC",45,0)
 ; Clean up expired Means Test billing clocks
"RTN","IBAMTC",46,0)
CLEAN S %H=+$H-1 D YMD^%DTC S IBDT=X,(IBN,DFN)=0,IBWHER=23
"RTN","IBAMTC",47,0)
 F  S DFN=$O(^IBE(351,"ACT",DFN)) Q:'DFN  D
"RTN","IBAMTC",48,0)
 . F  S IBN=$O(^IBE(351,"ACT",DFN,IBN)) Q:'IBN  D
"RTN","IBAMTC",49,0)
 ..  S IBY=1,X1=IBDT,(X2,IBCLDT)=+$P($G(^IBE(351,+IBN,0)),"^",3) D ^%DTC
"RTN","IBAMTC",50,0)
 ..  I X>364 S IBCLDA=IBN D CLOCKCL^IBAUTL3,ERR:IBY<1
"RTN","IBAMTC",51,0)
 ;
"RTN","IBAMTC",52,0)
 ; Close out incomplete events where the patient has been discharged,
"RTN","IBAMTC",53,0)
 ; pass the related charges if they appear correct, and send a bulletin
"RTN","IBAMTC",54,0)
 ; - also, send bulletins on old incomplete charges where there is no
"RTN","IBAMTC",55,0)
 ; incomplete event
"RTN","IBAMTC",56,0)
 D MAIN^IBAMTC2
"RTN","IBAMTC",57,0)
 ;
"RTN","IBAMTC",58,0)
 ;D ^IBAMTC1
"RTN","IBAMTC",59,0)
 ;
"RTN","IBAMTC",60,0)
 ; Send bulletin reporting job completion
"RTN","IBAMTC",61,0)
 I '+$$SWSTAT^IBBAPI() D BULL^IBAMTC1                     ;IB*2.0*312
"RTN","IBAMTC",62,0)
 ;
"RTN","IBAMTC",63,0)
 ; -- purge alerts
"RTN","IBAMTC",64,0)
 D PURGE^IBAERR3
"RTN","IBAMTC",65,0)
 ;
"RTN","IBAMTC",66,0)
 ; Monitor special inpatient billing cases
"RTN","IBAMTC",67,0)
 D BGJ^IBAMTI
"RTN","IBAMTC",68,0)
 ;
"RTN","IBAMTC",69,0)
 ; Print Pharmacy Copay Exemption Income Test Reminder Letters
"RTN","IBAMTC",70,0)
 D EN^IBARXEL
"RTN","IBAMTC",71,0)
 ;
"RTN","IBAMTC",72,0)
 ; Kill variables and quit.
"RTN","IBAMTC",73,0)
 D KILL1
"RTN","IBAMTC",74,0)
 ;
"RTN","IBAMTC",75,0)
 I $D(ZTQUEUED),$G(ZTSK) D KILL^%ZTLOAD
"RTN","IBAMTC",76,0)
 ;***
"RTN","IBAMTC",77,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBAMTC" D T1^%ZOSV ;stop rt clock
"RTN","IBAMTC",78,0)
 ;
"RTN","IBAMTC",79,0)
 Q
"RTN","IBAMTC",80,0)
 ;
"RTN","IBAMTC",81,0)
 ;
"RTN","IBAMTC",82,0)
PROC ; Process all currently admitted patients.
"RTN","IBAMTC",83,0)
 ;
"RTN","IBAMTC",84,0)
 D IFCVEXP^IBACV(DFN,DT,IBA) ;if CV has expired (see CVEXMAIL^IBACV)
"RTN","IBAMTC",85,0)
 ;--
"RTN","IBAMTC",86,0)
 ;1) checks effective date for LTC legislation.
"RTN","IBAMTC",87,0)
 ;2) determine current treating specialty (TS) for the 
"RTN","IBAMTC",88,0)
 ;"original" admission.
"RTN","IBAMTC",89,0)
 ;if TS is LTC: 
"RTN","IBAMTC",90,0)
 ;  - creates new LTC #350 parent event entry if necessary.
"RTN","IBAMTC",91,0)
 ;NOTE: It doesn't stop MT billing for LTC. CALC^IBAUTL4 does it.
"RTN","IBAMTC",92,0)
 I $$ISLTCADM^IBAECN1(DFN,IBA)
"RTN","IBAMTC",93,0)
 ;--
"RTN","IBAMTC",94,0)
 D ORIG  ; find "original" admission date
"RTN","IBAMTC",95,0)
 Q:$$BILST^DGMTUB(DFN)<IBADMDT  ; pat. was last billable before admission
"RTN","IBAMTC",96,0)
 Q:IBADMDT\1=DT  ; patient was admitted today - process tomorrow
"RTN","IBAMTC",97,0)
 Q:+$$MVT^DGPMOBS(IBA)  ; admitted for Observation & Examination
"RTN","IBAMTC",98,0)
 Q:$O(^IBE(351.2,"AC",IBA,0))  ; skip special inpatient admissions
"RTN","IBAMTC",99,0)
 ;
"RTN","IBAMTC",100,0)
 ; - if vet is SC, create a Special Inpatient Billing Case
"RTN","IBAMTC",101,0)
 ;   in file #351.2 (use code 3 for SC, as it is changed to 4 in IBAMTI)
"RTN","IBAMTC",102,0)
 D ELIG^VADPT I VAEL(3) D ADM^IBAMTI(DFN,IBA,3) Q
"RTN","IBAMTC",103,0)
 ;
"RTN","IBAMTC",104,0)
 ; - gather event information
"RTN","IBAMTC",105,0)
 D EVFIND^IBAUTL3 I 'IBEVDA D BSEC Q:'IBBS  ; wasn't billable yesterday
"RTN","IBAMTC",106,0)
 S X=IBADMDT D H^%DTC S IBBDT=%H D:'IBEVDA LAST^IBAUTL5
"RTN","IBAMTC",107,0)
 I IBEVDA,IBEVCAL S X1=IBEVCAL,X2=1 D C^%DTC S IBBDT=%H
"RTN","IBAMTC",108,0)
 S IBEDT=+$H-1
"RTN","IBAMTC",109,0)
 ; - gather clock information
"RTN","IBAMTC",110,0)
 S IBWHER=24 D CLOCK^IBAUTL3 I IBY<1 D ERR G PROCQ
"RTN","IBAMTC",111,0)
 I IBCLDA S X=IBCLDT D H^%DTC S IBCLCT=IBBDT-%H
"RTN","IBAMTC",112,0)
 ; - build charges for inpatient days
"RTN","IBAMTC",113,0)
 D ^IBAUTL4 I IBY<1 D ERR G PROCQ
"RTN","IBAMTC",114,0)
 ; - pass per diem if over 30 days old, or both per diem and the copay
"RTN","IBAMTC",115,0)
 ; - if 4 days from patient's statement date; update event, clock
"RTN","IBAMTC",116,0)
 S IBWHER=22
"RTN","IBAMTC",117,0)
 I $G(IBCHPDA),$P($G(^IB(+IBCHPDA,0)),"^",6)>30!($$STD^IBAUTL5(DFN)) S IBNOS=IBCHPDA D FILER^IBAUTL5 I IBY<1 D ERR G PROCQ
"RTN","IBAMTC",118,0)
 I $G(IBCHCDA),$$STD^IBAUTL5(DFN) S IBNOS=IBCHCDA D FILER^IBAUTL5 I IBY<1 D ERR G PROCQ
"RTN","IBAMTC",119,0)
 I IBEVDA,$D(IBDT) S IBEVCLD=IBDT D EVUPD^IBAUTL3
"RTN","IBAMTC",120,0)
 I IBCLDA D CLUPD^IBAUTL3
"RTN","IBAMTC",121,0)
PROCQ D KILL Q
"RTN","IBAMTC",122,0)
 ;
"RTN","IBAMTC",123,0)
BSEC ; Determine patient's bedsection for the previous day.
"RTN","IBAMTC",124,0)
 S X1=DT,X2=-1 D C^%DTC
"RTN","IBAMTC",125,0)
 S VAIP("D")=X_.2359 D IN5^VADPT S IBBS=$$SECT^IBAUTL5(+VAIP(8)) Q
"RTN","IBAMTC",126,0)
 ;
"RTN","IBAMTC",127,0)
ERR ; Error processing.  Input:  IBY, IBWHER, IBCNT
"RTN","IBAMTC",128,0)
 S IBDUZ=DUZ,IBCNT=IBCNT+1 D ^IBAERR1 K IBDUZ Q
"RTN","IBAMTC",129,0)
 ;S ^TMP($J,"IBAMTC","E",IBERRN)=$P(IBY,"^",2)_"^"_$S($D(DFN):DFN,1:"")_"^"_IBWHER,IBERRN=IBERRN+1 Q
"RTN","IBAMTC",130,0)
 ;
"RTN","IBAMTC",131,0)
ORIG ; Find first admission date, considering ASIH movements
"RTN","IBAMTC",132,0)
 ;  Input:  IBA    Output:  IBADMDT
"RTN","IBAMTC",133,0)
 N X,Y,Z S Z=IBA
"RTN","IBAMTC",134,0)
 F  S X=$G(^DGPM(Z,0)),Y=$P(X,"^",21) Q:Y=""  S Z=+$P($G(^DGPM(Y,0)),"^",14)
"RTN","IBAMTC",135,0)
 S IBADMDT=+X Q
"RTN","IBAMTC",136,0)
 ;
"RTN","IBAMTC",137,0)
KILL1 ; Kill all IB variables.
"RTN","IBAMTC",138,0)
 K VAERR,VAEL,VAIP,IBA,IBADMDT,IBAFY,IBATYP,IBBDT,IBBS,IBCHARG,IBCHG,IBCNT,IBCUR,IBDESC,IBDISDT,IBDT,IBDUZ,IBFAC,IBI,IBIL,IBJOB,IBLC,IBMAX
"RTN","IBAMTC",139,0)
 K IBN,IBNOS,IBSAVBS,IBSEQNO,IBSERV,IBSITE,IBSL,IBTRAN,IBX,IBY,IBWHER,IBWARD,IBEDT,IBCHCTY,IBCHPDE,IBERRN,IBASIH,IBRTED
"RTN","IBAMTC",140,0)
KILL ; Kill all IB variables needed to build charges.
"RTN","IBAMTC",141,0)
 K IBCLCT,IBCLDA,IBCLDT,IBCLDAY,IBCLDOL,IBCHPDA,IBCHCDA,IBCHG,IBCHFR,IBCHTO,IBCHTOTL,IBBS,IBNH
"RTN","IBAMTC",142,0)
 K IBEVDA,IBEVDT,IBEVCLD,IBEVCAL,IBEVNEW,IBEVOLD,IBMED,IBTOTL,IBDESC,IBIL,IBTRAN,IBATYP,IBDATE
"RTN","IBAMTC",143,0)
 Q
"RTN","IBAMTD")
0^1^B18809071^B18317055
"RTN","IBAMTD",1,0)
IBAMTD ;ALB/CPM - MOVEMENT EVENT DRIVER INTERFACE ;21-OCT-91
"RTN","IBAMTD",2,0)
V ;;2.0;INTEGRATED BILLING;**45,52,93,115,132,153,164,156,234,312**;21-MAR-94
"RTN","IBAMTD",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBAMTD",4,0)
 ;
"RTN","IBAMTD",5,0)
 I $G(DGPMA)="",$G(DGPMP)="" Q
"RTN","IBAMTD",6,0)
 ;
"RTN","IBAMTD",7,0)
EN ; Process events from the Movement Event Driver.
"RTN","IBAMTD",8,0)
 ;
"RTN","IBAMTD",9,0)
 ;S XRTL=$ZU(0),XRTN="IBAMTD-1" D T0^%ZOSV ;start rt clock
"RTN","IBAMTD",10,0)
 ;
"RTN","IBAMTD",11,0)
 Q:+$$SWSTAT^IBBAPI()                                      ;IB*2.0*312
"RTN","IBAMTD",12,0)
 ;
"RTN","IBAMTD",13,0)
 ; -- add admissions to claims tracking
"RTN","IBAMTD",14,0)
 D INP^IBTRKR
"RTN","IBAMTD",15,0)
 ;
"RTN","IBAMTD",16,0)
 ; -- update Transfer Pricing
"RTN","IBAMTD",17,0)
 D ^IBATEI
"RTN","IBAMTD",18,0)
 ;
"RTN","IBAMTD",19,0)
 ; -- check for Long Term Care
"RTN","IBAMTD",20,0)
 N IBALTC D EN^IBAECI Q:IBALTC
"RTN","IBAMTD",21,0)
 ;
"RTN","IBAMTD",22,0)
 ; - process billing for CHAMPVA patients
"RTN","IBAMTD",23,0)
 I $$CVA^IBAUTL5(DFN) D PROC^IBACVA G END
"RTN","IBAMTD",24,0)
 ;
"RTN","IBAMTD",25,0)
 ; - unflag continuous patients
"RTN","IBAMTD",26,0)
 S IBASIH=$$ASIH^IBAUTL5(DGPMA)
"RTN","IBAMTD",27,0)
 I DGPMP="",($P(DGPMA,"^",2)=3!(IBASIH)),$O(^IBE(351.1,"B",DFN,0)),$D(^IBE(351.1,+$O(^(0)),0)),'$P(^(0),"^",2) D UNFLAG^IBAMTD1
"RTN","IBAMTD",28,0)
 ;
"RTN","IBAMTD",29,0)
 ; - update case record on discharge for special inpatient episodes
"RTN","IBAMTD",30,0)
 S IBA=$P($S(DGPMA="":DGPMP,1:DGPMA),"^",14)
"RTN","IBAMTD",31,0)
 I $O(^IBE(351.2,"AC",IBA,0)),DGPMP="",($P(DGPMA,"^",2)=3!(IBASIH)) D DIS^IBAMTI(IBA) G END
"RTN","IBAMTD",32,0)
 ;
"RTN","IBAMTD",33,0)
 ; - quit if patient was last Means Test copay patient before adm. date
"RTN","IBAMTD",34,0)
 S IBLC=$$BILST^DGMTUB(DFN) G:'IBLC END I DGPMA="",$P(DGPMP,"^",2)=1,IBLC<$P(+DGPMP,".") G END
"RTN","IBAMTD",35,0)
 D ORIG^IBAMTC I IBLC<$P(IBADMDT,".") G END
"RTN","IBAMTD",36,0)
 ;
"RTN","IBAMTD",37,0)
 ; - if editing or deleting a movement, send bulletin; delete
"RTN","IBAMTD",38,0)
 ;   case record in #351.2 for deleted admissions
"RTN","IBAMTD",39,0)
 I DGPMP]"" S IBJOB=3 D  G END
"RTN","IBAMTD",40,0)
 .D ^IBAMTBU
"RTN","IBAMTD",41,0)
 .I DGPMA="",$P(DGPMP,"^",2)=1,$O(^IBE(351.2,"AC",IBA,0)) S DA=$O(^(0)),DIK="^IBE(351.2," D ^DIK K DA,DIK
"RTN","IBAMTD",42,0)
 ;
"RTN","IBAMTD",43,0)
 ; - add a case record for admission of special (ao/ir/ec/mst/hnc) inpatients
"RTN","IBAMTD",44,0)
 I $P(DGPMA,"^",2)=1 D  G END
"RTN","IBAMTD",45,0)
 .N IBCLSF D CL^IBACV(DFN,IBADMDT,"",.IBCLSF)
"RTN","IBAMTD",46,0)
 .S IBCLSF=$O(IBCLSF(0)) I IBCLSF,(IBCLSF<5) D ADM^IBAMTI(DFN,IBA,IBCLSF) Q
"RTN","IBAMTD",47,0)
 .I $P($$GETSTAT^DGMSTAPI(DFN,IBADMDT),U,2)="Y" S IBCLSF=5,IBCLSF(5)="" D ADM^IBAMTI(DFN,IBA,IBCLSF) Q
"RTN","IBAMTD",48,0)
 .I IBCLSF=6 D ADM^IBAMTI(DFN,IBA,IBCLSF)
"RTN","IBAMTD",49,0)
 .I IBCLSF=7 D ADM^IBAMTI(DFN,IBA,IBCLSF) ;CV has the lowest priority
"RTN","IBAMTD",50,0)
 ;
"RTN","IBAMTD",51,0)
 ; - if adding a retro-active transfer or spec. transfer, send bulletin
"RTN","IBAMTD",52,0)
 I ($P(DGPMA,"^",2)=2!($P(DGPMA,"^",2)=6)),+DGPMA<DT S IBJOB=6 D ^IBAMTBU
"RTN","IBAMTD",53,0)
 ;
"RTN","IBAMTD",54,0)
 ; - process discharges and ASIH movements only
"RTN","IBAMTD",55,0)
 I $P(DGPMA,"^",2)'=3,'IBASIH G END
"RTN","IBAMTD",56,0)
 ;
"RTN","IBAMTD",57,0)
 W:'$G(DGQUIET) !,"Billing Means Test charges...."
"RTN","IBAMTD",58,0)
 S (IBY,Y)=1,IBEVOLD=0,IBJOB=2,IBWHER=1,IBDISDT=+DGPMA\1,IBAFY=$$FY^IBOUTL(DT)
"RTN","IBAMTD",59,0)
 D SITE^IBAUTL I Y<1 S IBY=Y G END1
"RTN","IBAMTD",60,0)
 D SERV^IBAUTL2 G:IBY<1 END1
"RTN","IBAMTD",61,0)
 S IBWHER=24 D CLOCK^IBAUTL3 G:IBY<1 END1
"RTN","IBAMTD",62,0)
 ;
"RTN","IBAMTD",63,0)
 ; - Create an Outpat Copay for discharge with Observation Speciality
"RTN","IBAMTD",64,0)
 I $$MVT^DGPMOBS(IBA) D OBS^IBECEAU5 G:IBY<1 END1 G END
"RTN","IBAMTD",65,0)
 ;
"RTN","IBAMTD",66,0)
 ; - handle the variations on the basis of the event record
"RTN","IBAMTD",67,0)
 D EVFIND^IBAUTL3 ; sets IBEVDA to IEN of event record, or to 0 if none
"RTN","IBAMTD",68,0)
 S IBWHER=25 D @$S(IBEVDA:"EVT",1:"NOEVT")
"RTN","IBAMTD",69,0)
 ;
"RTN","IBAMTD",70,0)
 ; - kill variables and close
"RTN","IBAMTD",71,0)
END1 I IBY<1 S IBDUZ=DUZ D ^IBAERR1 K IBDUZ
"RTN","IBAMTD",72,0)
 W:'$G(DGQUIET) "completed."
"RTN","IBAMTD",73,0)
END D KILL1^IBAMTC
"RTN","IBAMTD",74,0)
 ;
"RTN","IBAMTD",75,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBAMTD" D T1^%ZOSV ;stop rt clock
"RTN","IBAMTD",76,0)
 ;
"RTN","IBAMTD",77,0)
 Q
"RTN","IBAMTD",78,0)
 ;
"RTN","IBAMTD",79,0)
EVT ; Billable admission event on record.
"RTN","IBAMTD",80,0)
 ; I +$$MVT^DGPMOBS(IBA) S IBDT=IBDISDT D OE^IBAMTBU1,CLOSE1 G EVTQ
"RTN","IBAMTD",81,0)
 I IBEVCAL'<IBDISDT S IBY="-1^IB033" G EVTQ
"RTN","IBAMTD",82,0)
 I IBEVCAL S X1=IBEVCAL,X2=1 D C^%DTC S IBBDT=%H I X=IBDISDT S IBDT=IBEVCAL D PASS^IBAUTL5,CLOSE1:IBY>0 G EVTQ
"RTN","IBAMTD",83,0)
 I 'IBEVCAL S X=IBEVDT D H^%DTC S IBBDT=%H
"RTN","IBAMTD",84,0)
 S X=IBDISDT D H^%DTC S IBEDT=%H-1
"RTN","IBAMTD",85,0)
 I IBCLDA S %H=IBBDT D YMD^%DTC S IBDT=X D COUNT
"RTN","IBAMTD",86,0)
 D ^IBAUTL4,CLOSE:IBY>0
"RTN","IBAMTD",87,0)
EVTQ Q
"RTN","IBAMTD",88,0)
 ;
"RTN","IBAMTD",89,0)
NOEVT ; No billable event on record since admission date.
"RTN","IBAMTD",90,0)
 ; I +$$MVT^DGPMOBS(IBA) W:'$G(DGQUIET) " patient not billed (adm. for O&E)... " G NOEVTQ ; admitted for Observation & Examination
"RTN","IBAMTD",91,0)
 S (IBCUR,VAIP("D"))=+$G(^DGPM(IBA,0)) D IN5^VADPT S IBBS=$$SECT^IBAUTL5(+VAIP(8))
"RTN","IBAMTD",92,0)
 I 'IBASIH,'IBBS G NOEVTQ ; not in billable bedsection
"RTN","IBAMTD",93,0)
 I 'IBASIH,IBCUR\1=IBDISDT S IBDT=IBDISDT D:IBBS ^IBAMTD1 G NOEVTQ
"RTN","IBAMTD",94,0)
 S X=IBADMDT\1 D H^%DTC S IBBDT=%H
"RTN","IBAMTD",95,0)
 I IBASIH S VAIP("D")=IBADMDT,IBSAVBS=IBBS D IN5^VADPT S IBBS=$$SECT^IBAUTL5(+VAIP(8)) I 'IBBS S X=IBCUR D H^%DTC S IBBDT=%H I IBCUR\1=IBDISDT S IBDT=IBDISDT,IBBS=IBSAVBS D:IBBS ^IBAMTD1 G NOEVTQ
"RTN","IBAMTD",96,0)
 D LAST^IBAUTL5
"RTN","IBAMTD",97,0)
 S X=IBDISDT D H^%DTC S IBEDT=%H-1
"RTN","IBAMTD",98,0)
 I IBCLDA S %H=IBBDT D YMD^%DTC S IBDT=X D COUNT
"RTN","IBAMTD",99,0)
 D ^IBAUTL4,CLOSE:IBY>0
"RTN","IBAMTD",100,0)
NOEVTQ Q
"RTN","IBAMTD",101,0)
 ;
"RTN","IBAMTD",102,0)
COUNT ; Find number of days on clock.    Input:  IBDT
"RTN","IBAMTD",103,0)
 S X1=IBDT,X2=IBCLDT D ^%DTC S IBCLCT=X Q
"RTN","IBAMTD",104,0)
 ;
"RTN","IBAMTD",105,0)
CLOSE ; Close out charges, events; update clocks (at discharge: tag CLOSE1)
"RTN","IBAMTD",106,0)
 I $G(IBCHPDA) S IBNOS=IBCHPDA D FILER^IBAUTL5 G:IBY<1 CLOSEQ
"RTN","IBAMTD",107,0)
 I $G(IBCHCDA) S IBNOS=IBCHCDA D FILER^IBAUTL5 G:IBY<1 CLOSEQ
"RTN","IBAMTD",108,0)
 I IBCLDA D CLUPD^IBAUTL3
"RTN","IBAMTD",109,0)
CLOSE1 I IBEVDA,$D(IBDT) S IBEVCLD=IBDT D EVCLOSE^IBAUTL3
"RTN","IBAMTD",110,0)
CLOSEQ Q
"RTN","IBAMTED")
0^10^B11359061^B10970561
"RTN","IBAMTED",1,0)
IBAMTED ;ALB/CPM,GN,PHH,EG - MEANS TEST EVENT DRIVER INTERFACE ; 11/30/05 1:48pm
"RTN","IBAMTED",2,0)
 ;;2.0;INTEGRATED BILLING;**15,255,269,321,312**;21-MAR-94
"RTN","IBAMTED",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBAMTED",4,0)
 ;
"RTN","IBAMTED",5,0)
 ;IB*2*269 add IVM converted RX Copay Test update calls to a new API.
"RTN","IBAMTED",6,0)
 ;
"RTN","IBAMTED",7,0)
 ; -- do medication copayment exemption processing
"RTN","IBAMTED",8,0)
 ;
"RTN","IBAMTED",9,0)
 ;Z06 processing for RX Copay then Quit
"RTN","IBAMTED",10,0)
 I $D(EASZ06),DGMTYPT=2 D ^IBAMTED2 G END                    ;IB*2*269
"RTN","IBAMTED",11,0)
 ;Original Non-Z06 Copay processing
"RTN","IBAMTED",12,0)
 I '$D(EASZ06) D
"RTN","IBAMTED",13,0)
 . ;this routine is called from the DG namespace and IB namespace
"RTN","IBAMTED",14,0)
 . ;when coming in from the DG namespace, variable DGMTD and DGMTDT is
"RTN","IBAMTED",15,0)
 . ;used to define the means test test.  When coming in
"RTN","IBAMTED",16,0)
 . ;from the IB namespace, variable IBDT  OR IVMMTDT is used
"RTN","IBAMTED",17,0)
 . I '$D(IBDT) N IBDT
"RTN","IBAMTED",18,0)
 . S IBDT=$S($D(IBDT):IBDT,$D(IVMMTDT):IVMMTDT,$D(DGMTDT):DGMTDT,$D(DGMTD):DGMTD,1:0)
"RTN","IBAMTED",19,0)
 . I $P($G(^DGMT(408.31,+$$LST^DGMTCOU1(DFN,IBDT,2),0)),"^",23)=2 Q
"RTN","IBAMTED",20,0)
 . I $G(^DGMT(408.31,+$$LST^DGMTCOU1(DFN,IBDT,2),"C",1,0))["Z06 MT via Edb" Q
"RTN","IBAMTED",21,0)
 . D ^IBAMTED1
"RTN","IBAMTED",22,0)
 . Q
"RTN","IBAMTED",23,0)
 ;
"RTN","IBAMTED",24,0)
 ; -- end medication copayment exemption processing
"RTN","IBAMTED",25,0)
 ;
"RTN","IBAMTED",26,0)
 Q:+$$SWSTAT^IBBAPI()                                        ;IB*2.0*312
"RTN","IBAMTED",27,0)
 ;
"RTN","IBAMTED",28,0)
 ; Quit if supported variables are unavailable.
"RTN","IBAMTED",29,0)
 Q:'$D(DFN)!('$D(DGMTA))!('$D(DGMTP))!('$D(DUZ))!('$D(DGMTINF))!('$D(DGMTACT))
"RTN","IBAMTED",30,0)
 ;
"RTN","IBAMTED",31,0)
 ;***
"RTN","IBAMTED",32,0)
 ;S XRTL=$ZU(0),XRTN="IBAMTED-1" D T0^%ZOSV ;start rt clock
"RTN","IBAMTED",33,0)
 ;
"RTN","IBAMTED",34,0)
 ; -- quit if copay exemption test
"RTN","IBAMTED",35,0)
 I $P(DGMTA,"^",19)=2!($P(DGMTP,"^",19)=2) G END
"RTN","IBAMTED",36,0)
 ;
"RTN","IBAMTED",37,0)
 ; Quit if test is a Category change resulting from a deleted test.
"RTN","IBAMTED",38,0)
 I DGMTA]"",DGMTP]"",+DGMTA'=+DGMTP G END ; on-line deletion
"RTN","IBAMTED",39,0)
 I DGMTA]"",DGMTP]"",DGMTACT="DEL" G END ; IVM 'delete' transmission
"RTN","IBAMTED",40,0)
 ;
"RTN","IBAMTED",41,0)
 ; Process Means Tests uploaded by IVM.
"RTN","IBAMTED",42,0)
 I DGMTACT="UPL"!(DGMTACT="DUP") D  G END
"RTN","IBAMTED",43,0)
 .;
"RTN","IBAMTED",44,0)
 .; - if IVM is uploading a verified test, create new MT charges
"RTN","IBAMTED",45,0)
 .I $P(DGMTP,"^",23)<2,$P(DGMTA,"^",23)>1,'$$CK^DGMTUB(DGMTP),$$CK^DGMTUB(DGMTA) D ^IBAMTV Q
"RTN","IBAMTED",46,0)
 .;
"RTN","IBAMTED",47,0)
 .; - if IVM is sending a 'Delete' transmission, cancel previous charges
"RTN","IBAMTED",48,0)
 .I $P(DGMTP,"^",23)>1,$P(DGMTA,"^",23)<2,$$CK^DGMTUB(DGMTP),'$$CK^DGMTUB(DGMTA) D CANC^IBAMTV
"RTN","IBAMTED",49,0)
 ;
"RTN","IBAMTED",50,0)
 ; Quit if the most current Means Test was not altered.
"RTN","IBAMTED",51,0)
 S IBMT=$S(DGMTA="":DGMTP,1:DGMTA)
"RTN","IBAMTED",52,0)
 S X=$$LST^DGMTU(DFN) I X,$P(X,"^",2)>+IBMT G END
"RTN","IBAMTED",53,0)
 ;
"RTN","IBAMTED",54,0)
 ; Quit if an added or deleted test is a Required test.
"RTN","IBAMTED",55,0)
 I (DGMTA=""!(DGMTP="")),$P(IBMT,"^",3)=1 G END
"RTN","IBAMTED",56,0)
 ;
"RTN","IBAMTED",57,0)
 ; Determine the billable status before and after the transaction.
"RTN","IBAMTED",58,0)
 D NOW^%DTC S IBCATCA=$$BIL^DGMTUB(DFN,%)
"RTN","IBAMTED",59,0)
 S IBCATCP=$S(DGMTP="":$$ADD,DGMTA="":$$CK^DGMTUB(DGMTP),1:$$EDIT)
"RTN","IBAMTED",60,0)
 ;
"RTN","IBAMTED",61,0)
 ; Generate a bulletin if the patient's billing status has changed.
"RTN","IBAMTED",62,0)
 I (IBCATCP&('IBCATCA))!('IBCATCP&(IBCATCA)) D
"RTN","IBAMTED",63,0)
 .S IBEFDT=$S($P(IBMT,"^",7):+$P(IBMT,"^",7),1:+IBMT)
"RTN","IBAMTED",64,0)
 .I IBCATCP,'IBCATCA,'$$CHG^IBAMTEDU(IBEFDT) Q  ; hasn't been billed since going c->a
"RTN","IBAMTED",65,0)
 .I 'IBCATCP,IBCATCA,'$$EP^IBAMTEDU(IBEFDT) Q  ; hasn't been treated since going a->c
"RTN","IBAMTED",66,0)
 .D MT^IBAMTBU2 ; create bulletin
"RTN","IBAMTED",67,0)
 ;
"RTN","IBAMTED",68,0)
END K IBARR,IBCANCEL,IBCATCA,IBCATCP,IBDIQ,IBDUZ,IBEFDT,IBMT,IBI,IBC,IBPT,IBT
"RTN","IBAMTED",69,0)
 K DIC,DIQ,DR,DA,VA,VAERR,VAEL,X,X1,X2,XMDUZ,XMTEXT,XMY,XMSUB
"RTN","IBAMTED",70,0)
 ;***
"RTN","IBAMTED",71,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBAMTED" D T1^%ZOSV ;stop rt clock
"RTN","IBAMTED",72,0)
 Q
"RTN","IBAMTED",73,0)
 ;
"RTN","IBAMTED",74,0)
 ;
"RTN","IBAMTED",75,0)
ADD() ; Determine the billable status before adding a Means Test.
"RTN","IBAMTED",76,0)
 S X1=$S($P(DGMTA,"^",3)=3:+DGMTA,1:+$P(DGMTA,"^",7)\1),X2=-1 D C^%DTC
"RTN","IBAMTED",77,0)
 Q $$BIL^DGMTUB(DFN,X)
"RTN","IBAMTED",78,0)
 ;
"RTN","IBAMTED",79,0)
 ;
"RTN","IBAMTED",80,0)
EDIT() ; Determine the billable status before editing a Means Test.
"RTN","IBAMTED",81,0)
 I $P(DGMTP,"^",3)'=1 Q $$CK^DGMTUB(DGMTP)
"RTN","IBAMTED",82,0)
 S X1=+DGMTP,X2=-1 D C^%DTC Q $$BIL^DGMTUB(DFN,X)
"RTN","IBAMTS")
0^2^B17712149^B15917567
"RTN","IBAMTS",1,0)
IBAMTS ;ALB/CPM - APPOINTMENT EVENT DRIVER INTERFACE ;20-JUL-93
"RTN","IBAMTS",2,0)
 ;;2.0;INTEGRATED BILLING;**52,115,132,153,164,156,171,247,312**;21-MAR-94
"RTN","IBAMTS",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBAMTS",4,0)
 ;
"RTN","IBAMTS",5,0)
EN ; Main interface entry point.
"RTN","IBAMTS",6,0)
 ;
"RTN","IBAMTS",7,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBAMTS",8,0)
 ;
"RTN","IBAMTS",9,0)
 S IBJOB=5,IBWHER="",IBDUZ=DUZ,IBY=1
"RTN","IBAMTS",10,0)
 ; Do Transfer Pricing
"RTN","IBAMTS",11,0)
 I '+IBSWINFO D ^IBATEO                                    ;IB*2.0*312
"RTN","IBAMTS",12,0)
 ; Check Encounter Related to LTC
"RTN","IBAMTS",13,0)
 N IBALTC D EN^IBAECO
"RTN","IBAMTS",14,0)
 I '$$BILST^DGMTUB(DFN) G ENQ ; never Means Test billable
"RTN","IBAMTS",15,0)
 I '$$CHECK^IBECEAU(0) D ^IBAERR1 G ENQ ; can't set vital parameters
"RTN","IBAMTS",16,0)
 ;
"RTN","IBAMTS",17,0)
 ; - process all parent outpatient encounters
"RTN","IBAMTS",18,0)
 S IBORG=0 F  S IBORG=$O(^TMP("SDEVT",$J,SDHDL,IBORG)) Q:'IBORG  D
"RTN","IBAMTS",19,0)
 .S IBOE=0 F  S IBOE=$O(^TMP("SDEVT",$J,SDHDL,IBORG,"SDOE",IBOE)) Q:'IBOE  S IBEVT=$G(^(IBOE,0,"AFTER")),IBEV0=$G(^("BEFORE")) D
"RTN","IBAMTS",20,0)
 ..;
"RTN","IBAMTS",21,0)
 ..S IBDT=$S(IBEVT:+IBEVT,1:+IBEV0),IBDAT=$P(IBDT,".")
"RTN","IBAMTS",22,0)
 ..; Do NOT PROCESS on VistA if IBDAT>=Switch Eff Date    ;CCR-930
"RTN","IBAMTS",23,0)
 ..I +IBSWINFO,(IBDAT+1)>$P(IBSWINFO,"^",2) Q             ;IB*2.0*312
"RTN","IBAMTS",24,0)
 ..;
"RTN","IBAMTS",25,0)
 ..S IBAPTY=$S(IBEVT:$P(IBEVT,"^",10),1:$P(IBEV0,"^",10))
"RTN","IBAMTS",26,0)
 ..S IBBILLED=$$BFO^IBECEAU(DFN,IBDAT),IBY=1
"RTN","IBAMTS",27,0)
 ..;
"RTN","IBAMTS",28,0)
 ..; - if C&P encounter, cancel charges for the day and quit
"RTN","IBAMTS",29,0)
 ..I IBAPTY=1!(IBALTC) D:IBBILLED  Q
"RTN","IBAMTS",30,0)
 ...S IBCRES=+$O(^IBE(350.3,"B",$S(IBALTC:"BILLED LTC CHARGE",1:"COMP & PENSION VISIT RECORDED"),0))
"RTN","IBAMTS",31,0)
 ...S:'IBCRES IBCRES=23 S IBWHER=""
"RTN","IBAMTS",32,0)
 ...D CANCH^IBECEAU4(IBBILLED,IBCRES,0)
"RTN","IBAMTS",33,0)
 ..;
"RTN","IBAMTS",34,0)
 ..; - quit if there are any C&P encounters on the visit date
"RTN","IBAMTS",35,0)
 ..Q:$$CNP^IBECEAU(DFN,IBDAT)
"RTN","IBAMTS",36,0)
 ..;
"RTN","IBAMTS",37,0)
 ..; - quit if there are any LTC encounters on the visit date
"RTN","IBAMTS",38,0)
 ..Q:$$LTCENC^IBAECU(DFN,IBDAT)
"RTN","IBAMTS",39,0)
 ..;
"RTN","IBAMTS",40,0)
 ..; - don't process child events
"RTN","IBAMTS",41,0)
 ..I IBEVT]"" Q:$P(IBEVT,"^",6)
"RTN","IBAMTS",42,0)
 ..I IBEVT="",IBEV0]"" Q:$P(IBEV0,"^",6)
"RTN","IBAMTS",43,0)
 ..;
"RTN","IBAMTS",44,0)
 ..; - get statuses
"RTN","IBAMTS",45,0)
 ..S IBAST=+$P(IBEVT,"^",12),IBBST=+$P(IBEV0,"^",12)
"RTN","IBAMTS",46,0)
 ..;
"RTN","IBAMTS",47,0)
 ..; - do either NEW or UPDATED processing
"RTN","IBAMTS",48,0)
 ..I IBAST=2,IBBST'=2 D NEW^IBAMTS1 Q
"RTN","IBAMTS",49,0)
 ..D UPD^IBAMTS2
"RTN","IBAMTS",50,0)
 ;
"RTN","IBAMTS",51,0)
ENQ K IBJOB,IBWHER,IBORG,IBOE,IBEVT,IBEV0,IBAST,IBBST,IBDUZ,IBY
"RTN","IBAMTS",52,0)
 K IBDT,IBDAT,IBAPTY,IBBILLED,IBSERV,IBSITE,IBFAC,IBCRES,IBRTED
"RTN","IBAMTS",53,0)
 Q
"RTN","IBAMTS",54,0)
 ;
"RTN","IBAMTS",55,0)
BULL ; Send bulletin when classified patients are billed stops which
"RTN","IBAMTS",56,0)
 ; are exempt from the classification process.
"RTN","IBAMTS",57,0)
 N IBT,IBC,IBPT,IBDUZ,IBX S IBPT=$$PT^IBEFUNC(DFN),IBX=$$CLTY
"RTN","IBAMTS",58,0)
 S XMSUB="CHARGE FOR STOP CODE EXEMPT FROM CLASSIFICATION"
"RTN","IBAMTS",59,0)
 S IBT(1)="The following patient, who "_$S(IBX="SC":"has a service connected disability,",IBX="CV":"is Combat Veteran",1:"has claimed exposure to "_IBX_",")
"RTN","IBAMTS",60,0)
 S IBT(2)="was billed the Means Test outpatient copay for a stop code which is"
"RTN","IBAMTS",61,0)
 S IBT(3)="exempt from classification:"
"RTN","IBAMTS",62,0)
 S IBT(4)=" " S IBC=4
"RTN","IBAMTS",63,0)
 S IBDUZ=DUZ D PAT^IBAERR1
"RTN","IBAMTS",64,0)
 S Y=IBDAT D DD^%DT
"RTN","IBAMTS",65,0)
 S IBC=IBC+1,IBT(IBC)="Stop Date: "_Y
"RTN","IBAMTS",66,0)
 S IBC=IBC+1,IBT(IBC)="Stop Code: "_$P($G(^DIC(40.7,+$P(IBEVT,"^",3),0)),"^")
"RTN","IBAMTS",67,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBAMTS",68,0)
 S IBC=IBC+1,IBT(IBC)="Please check this patient's medical record to determine if the care provided"
"RTN","IBAMTS",69,0)
 S IBC=IBC+1,IBT(IBC)="was related to the "_$S(IBX="SC":"SC disability",IBX="CV":"Combat Veteran status",1:"claimed exposure")_", and, if related, cancel the charge."
"RTN","IBAMTS",70,0)
 D MAIL^IBAERR1
"RTN","IBAMTS",71,0)
 K X,Y,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","IBAMTS",72,0)
 Q
"RTN","IBAMTS",73,0)
 ;
"RTN","IBAMTS",74,0)
CLTY() ; Return the classification type
"RTN","IBAMTS",75,0)
 N IBARR,Y D CL^SDCO21(DFN,IBDAT,"",.IBARR) S Y=""
"RTN","IBAMTS",76,0)
 I $D(IBARR(3)) S Y="SC" G CLTYQ
"RTN","IBAMTS",77,0)
 I $D(IBARR(7)),+$$CVEDT^IBACV(DFN,IBDAT) S Y="CV" G CLTYQ
"RTN","IBAMTS",78,0)
 I $D(IBARR(1)) S Y="Agent Orange" G CLTYQ
"RTN","IBAMTS",79,0)
 I $D(IBARR(2)) S Y="Ionizing Radiation" G CLTYQ
"RTN","IBAMTS",80,0)
 I $D(IBARR(4)) S Y="Environmental Contaminants" G CLTYQ
"RTN","IBAMTS",81,0)
 I $D(IBARR(5)) S Y="Military Sexual Trauma" G CLTYQ
"RTN","IBAMTS",82,0)
 I $D(IBARR(6)) S Y="Head/Neck Cancer" G CLTYQ
"RTN","IBAMTS",83,0)
CLTYQ Q Y
"RTN","IBBSHDWN")
0^11^B27343484
"RTN","IBBSHDWN",1,0)
IBBSHDWN ;WOIFO/CLC - IB Sunset for PFSS ;7-JUN-2005
"RTN","IBBSHDWN",2,0)
 ;;2.0;INTEGRATED BILLING;**312**;21-MAR-94
"RTN","IBBSHDWN",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBBSHDWN",4,0)
 ;********************************************************
"RTN","IBBSHDWN",5,0)
 ; PURPOSE: Sunset IB Options/functionality
"RTN","IBBSHDWN",6,0)
 ;        :
"RTN","IBBSHDWN",7,0)
 ;        : *** The CHKSHDWN TAG is NOT currently being utilized **
"RTN","IBBSHDWN",8,0)
 ;        : 
"RTN","IBBSHDWN",9,0)
 ;
"RTN","IBBSHDWN",10,0)
 ;   USAGE: PFSS - Patch(IB*2.0*312) routine
"RTN","IBBSHDWN",11,0)
 ;
"RTN","IBBSHDWN",12,0)
 ;*******************************************************************
"RTN","IBBSHDWN",13,0)
 ; @INPUTS: SRC- The Source Routine, Used for Text Tags
"RTN","IBBSHDWN",14,0)
 ;        : KEY- Identifier from Source Ex: AUTO BILLER
"RTN","IBBSHDWN",15,0)
 ; @OUTPUTS: Boolean - True=Function Shutdown, False=Function is OK 
"RTN","IBBSHDWN",16,0)
 ;*******************************************************************
"RTN","IBBSHDWN",17,0)
CHKSHDWN(SRC,KEY) ;
"RTN","IBBSHDWN",18,0)
 N SWINFO,I,ITEM,POP,RET,TAG
"RTN","IBBSHDWN",19,0)
 S SWINFO=$$SWSTAT^IBBAPI()
"RTN","IBBSHDWN",20,0)
 ;
"RTN","IBBSHDWN",21,0)
 S (RET,POP)=0
"RTN","IBBSHDWN",22,0)
 F I=1:1 S ITEM=$T(@SRC+I) Q:ITEM["%%%"  D  Q:POP
"RTN","IBBSHDWN",23,0)
    .Q:$TR($P(ITEM,";",4)," ","")'=KEY
"RTN","IBBSHDWN",24,0)
    .;
"RTN","IBBSHDWN",25,0)
    .S TAG=$TR($P(ITEM,";",5)," ","")
"RTN","IBBSHDWN",26,0)
    .I TAG="" S POP=1,RET=+SWINFO            ;No additional logic
"RTN","IBBSHDWN",27,0)
    .;
"RTN","IBBSHDWN",28,0)
    .D @TAG
"RTN","IBBSHDWN",29,0)
 Q RET
"RTN","IBBSHDWN",30,0)
IBAMTD ;
"RTN","IBBSHDWN",31,0)
 ;;;CLAIMS TRACKING  ;        ; Disable Claims Tracking
"RTN","IBBSHDWN",32,0)
 ;;;TRANSFER PRICING ;        ; Disable Transfer Pricing
"RTN","IBBSHDWN",33,0)
 ;;;LTC CLOCK        ;        ; Disable LTC Clock Creation
"RTN","IBBSHDWN",34,0)
 ;;;CHAMPVA          ;        ; Disable Co-Pay Chgs for ChampVA
"RTN","IBBSHDWN",35,0)
 ;;;CONT HOSP PAT    ;        ; Disable Unflaf Cont Hosp Pats
"RTN","IBBSHDWN",36,0)
 ;;;SPECIAL INPAT    ;        ; Disable Special Inpat Cases
"RTN","IBBSHDWN",37,0)
 ;;;OBSERVATION COPAY;        ; Disable Observation Copay
"RTN","IBBSHDWN",38,0)
 ;;;INPATIENT EVENTS ;        ; Disable Inpatient Event Charges
"RTN","IBBSHDWN",39,0)
 ;;;%%%
"RTN","IBBSHDWN",40,0)
IBAMTS ;
"RTN","IBBSHDWN",41,0)
 ;;;TRANSFER PRICING ;        ; Disable Transfer Pricing
"RTN","IBBSHDWN",42,0)
 ;;;LTC CLOCK        ;        ; Disable LTC Clock Co-pay
"RTN","IBBSHDWN",43,0)
 ;;;OUTPAT MT COPAY  ;        ; Disable Out Pat MT Co-Pay
"RTN","IBBSHDWN",44,0)
 ;;;%%%
"RTN","IBBSHDWN",45,0)
IBAMTC ;
"RTN","IBBSHDWN",46,0)
 ;;;CLAIMS TRACKING  ;        ; Disable Claims Tracking
"RTN","IBBSHDWN",47,0)
 ;;;AUTO BILLER      ;ATOBILL ; Adjust Auto-Biller Logic
"RTN","IBBSHDWN",48,0)
 ;;;TRANSFER PRICING ;        ; Disable Transfer Pricing
"RTN","IBBSHDWN",49,0)
 ;;;%%%
"RTN","IBBSHDWN",50,0)
 Q
"RTN","IBBSHDWN",51,0)
 ;*******************************************************************
"RTN","IBBSHDWN",52,0)
 ; @INPUTS: None
"RTN","IBBSHDWN",53,0)
 ; @OUTPUTS: 1/0 1=User wants to continue, 0= DO Not continue
"RTN","IBBSHDWN",54,0)
 ;*******************************************************************
"RTN","IBBSHDWN",55,0)
PFSSWARN() ;
"RTN","IBBSHDWN",56,0)
 N DIR,DIRUT,DTOUT,X,Y,IBSTAR,IBSWINFO
"RTN","IBBSHDWN",57,0)
 S IBSTAR80="",$P(IBSTAR,"*",55)="",Y=1
"RTN","IBBSHDWN",58,0)
 S IBSWINFO=$$SWSTAT^IBBAPI() G:'+IBSWINFO WARNQ
"RTN","IBBSHDWN",59,0)
 D HOME^%ZIS  W @IOF
"RTN","IBBSHDWN",60,0)
 S DIR(0)="YAO",DIR("B")="N"
"RTN","IBBSHDWN",61,0)
 S DIR("A",1)=IBSTAR,DIR("A",3)=""
"RTN","IBBSHDWN",62,0)
 S DIR("A",2)="The PFSS Environment is active as of "_$$FMTE^XLFDT($P(IBSWINFO,"^",2))_"."
"RTN","IBBSHDWN",63,0)
 S DIR("A",4)="The action you are trying to perform may not be valid"
"RTN","IBBSHDWN",64,0)
 S DIR("A",5)="for services provided on or after this date."
"RTN","IBBSHDWN",65,0)
 S DIR("A",6)=IBSTAR
"RTN","IBBSHDWN",66,0)
 S DIR("A")="Are you SURE you want to continue? "
"RTN","IBBSHDWN",67,0)
 D ^DIR
"RTN","IBBSHDWN",68,0)
 I $D(DIRUT)!$D(DTOUT) S Y=""
"RTN","IBBSHDWN",69,0)
WARNQ Q Y
"RTN","IBBSHDWN",70,0)
 ;*******************************************************************
"RTN","IBBSHDWN",71,0)
 ; @INPUTS: Action = 1-ReInstate Option 0-(Default)-Set Out of Order
"RTN","IBBSHDWN",72,0)
 ; @OUTPUTS: Mailman message indicating Invalid Options or Sucess...
"RTN","IBBSHDWN",73,0)
 ;*******************************************************************
"RTN","IBBSHDWN",74,0)
UPDOPTS(ACT) ;
"RTN","IBBSHDWN",75,0)
 N SPC,I,OPT,DN,DA,DIC,DIE,DR,MSG,DETAIL
"RTN","IBBSHDWN",76,0)
 S MSG="Option is unavailable with PFSS Active"
"RTN","IBBSHDWN",77,0)
 S SPC="",$P(SPC," ",50)=""
"RTN","IBBSHDWN",78,0)
 I $G(ACT)=1 S MSG="@"
"RTN","IBBSHDWN",79,0)
 F I=1:1 S OPT=$T(OPTIONS+I) Q:OPT["%%%"  D
"RTN","IBBSHDWN",80,0)
    .S DN=$P(OPT,";",4)
"RTN","IBBSHDWN",81,0)
    .I '$D(^DIC(19,"B",DN)) S DETAIL(I)=$E(DN_SPC,1,30)_"Invalid Name" Q
"RTN","IBBSHDWN",82,0)
    .;
"RTN","IBBSHDWN",83,0)
    .; IA#1157 - Extrinsic functions to manage fields in OPTION file
"RTN","IBBSHDWN",84,0)
    .D OUT^XPDMENU(DN,MSG)
"RTN","IBBSHDWN",85,0)
 ;
"RTN","IBBSHDWN",86,0)
 I '$D(DETAIL) S DETAIL(1)="All IB Sunset Options - Flagged:"_MSG
"RTN","IBBSHDWN",87,0)
 D NOTIFY
"RTN","IBBSHDWN",88,0)
 Q
"RTN","IBBSHDWN",89,0)
UPDBTCEX(ACT) ;
"RTN","IBBSHDWN",90,0)
 N DA,DIE,DR,DETAIL
"RTN","IBBSHDWN",91,0)
 I $G(ACT)'=1 S ACT=0
"RTN","IBBSHDWN",92,0)
 S DA=0
"RTN","IBBSHDWN",93,0)
 F  S DA=$O(^IBE(350.9,1,51.17,DA)) Q:+DA=0  D
"RTN","IBBSHDWN",94,0)
    .I ",1,2,3,4,"'[$P($G(^IBE(350.9,1,51.17,DA,0)),"^",1) Q
"RTN","IBBSHDWN",95,0)
    .S DIE="^IBE(350.9,1,51.17,",DR=".02///"_ACT D ^DIE
"RTN","IBBSHDWN",96,0)
 S DETAIL(1)="Batch Extracts Status Set to: "_ACT
"RTN","IBBSHDWN",97,0)
 D NOTIFY
"RTN","IBBSHDWN",98,0)
 Q
"RTN","IBBSHDWN",99,0)
NOTIFY ;
"RTN","IBBSHDWN",100,0)
 N XMDF,XMDUZ,XMSUB,XMDUN,XMTEXT,XMSTRIP,XMROU,XMY,XMZ,XMMG
"RTN","IBBSHDWN",101,0)
 S XMDF="",XMDUZ="IBBSHDWN-"_$TR($P($$SITE^VASITE(),"^",2,3),"^","-")
"RTN","IBBSHDWN",102,0)
 S XMY(DUZ)="",XMY("G.PATCHES")=""
"RTN","IBBSHDWN",103,0)
 S XMSUB="IB-SUNSET OPTIONS"
"RTN","IBBSHDWN",104,0)
 S XMTEXT="DETAIL("
"RTN","IBBSHDWN",105,0)
 D ^XMD
"RTN","IBBSHDWN",106,0)
 Q
"RTN","IBBSHDWN",107,0)
OPTIONS ;
"RTN","IBBSHDWN",108,0)
 ;;;IB FLAG CONTINUOUS PATIENTS
"RTN","IBBSHDWN",109,0)
 ;;;IB MT CLOCK MAINTENANCE
"RTN","IBBSHDWN",110,0)
 ;;;IB CLEAN AUTO BILLER LIST
"RTN","IBBSHDWN",111,0)
 ;;;IB OUTPUT AUTO BILLER
"RTN","IBBSHDWN",112,0)
 ;;;IB TRICARE DEL REJECT
"RTN","IBBSHDWN",113,0)
 ;;;IB TRICARE REJECT
"RTN","IBBSHDWN",114,0)
 ;;;IB TRICARE RESUBMIT
"RTN","IBBSHDWN",115,0)
 ;;;IB TRICARE REVERSE
"RTN","IBBSHDWN",116,0)
 ;;;IB TRICARE TRANSMISSION
"RTN","IBBSHDWN",117,0)
 ;;;IBAEC LTC CLOCK EDIT
"RTN","IBBSHDWN",118,0)
 ;;;IBCR ENTER TP NEG RATES
"RTN","IBBSHDWN",119,0)
 ;;;IBCN INSURANCE BUFFER PROCESS
"RTN","IBBSHDWN",120,0)
 ;;;IBCN MEDICARE INSURANCE INTAKE
"RTN","IBBSHDWN",121,0)
 ;;;IBCNE AUTO MATCH BUFFER
"RTN","IBBSHDWN",122,0)
 ;;;IBCNE AUTO MATCH ENTER/EDIT
"RTN","IBBSHDWN",123,0)
 ;;;IBT EDIT HR REVIEWS TO DO
"RTN","IBBSHDWN",124,0)
 ;;;IBT EDIT HR TRACKING ENTRY
"RTN","IBBSHDWN",125,0)
 ;;;IBT EDIT REVIEWS
"RTN","IBBSHDWN",126,0)
 ;;;IB PURGE BILLING DATA
"RTN","IBBSHDWN",127,0)
 ;;;IB PURGE DELETE TEMPLATE ENTRY
"RTN","IBBSHDWN",128,0)
 ;;;IB PURGE LIST LOG ENTRIES
"RTN","IBBSHDWN",129,0)
 ;;;IB PURGE LIST TEMPLATE ENTRIES
"RTN","IBBSHDWN",130,0)
 ;;;IB PURGE LOG INQUIRY
"RTN","IBBSHDWN",131,0)
 ;;;IB PURGE/ARCHIVE BILLING DATA
"RTN","IBBSHDWN",132,0)
 ;;;IB PURGE/FIND BILLING DATA
"RTN","IBBSHDWN",133,0)
 ;;;IBCNE PURGE IIV DATA
"RTN","IBBSHDWN",134,0)
 ;;;IBAT EXCEL REPORT
"RTN","IBBSHDWN",135,0)
 ;;;IBAT INPT PROSTHETIC ITEMS
"RTN","IBBSHDWN",136,0)
 ;;;IBAT PATIENT LIST
"RTN","IBBSHDWN",137,0)
 ;;;IBAT PATIENT REPORT
"RTN","IBBSHDWN",138,0)
 ;;;IBAT SUMMARY REPORT
"RTN","IBBSHDWN",139,0)
 ;;;IBAT TP MANAGEMENT
"RTN","IBBSHDWN",140,0)
 ;;;IBAT WORKLOAD REPORT
"RTN","IBBSHDWN",141,0)
 ;;;IBCI CLAIMSMANAGER NPT FILE
"RTN","IBBSHDWN",142,0)
 ;;;IBCI CLAIMSMANAGER PAYOR FILE
"RTN","IBBSHDWN",143,0)
 ;;;IBT RE-GEN AVE BILL AMOUNT
"RTN","IBBSHDWN",144,0)
 ;;;IBT RE-GEN UNBILLED REPORT
"RTN","IBBSHDWN",145,0)
 ;;;IBT SEND TEST UNBILLED MESS
"RTN","IBBSHDWN",146,0)
 ;;;IBT VIEW UNBILLED AMOUNTS
"RTN","IBBSHDWN",147,0)
 ;;;IBJD UTILIZATION WORKLOAD
"RTN","IBBSHDWN",148,0)
 ;;;IBT MONTHLY AUTO GEN AVE BILL
"RTN","IBBSHDWN",149,0)
 ;;;IBT MONTHLY AUTO GEN UNBILLED
"RTN","IBBSHDWN",150,0)
 ;;;IB MRA EXTRACT
"RTN","IBBSHDWN",151,0)
 ;;%%%
"RTN","IBBSHDWN",152,0)
 Q
"RTN","IBBSHDWN",153,0)
 Q
"RTN","IBCA")
0^12^B24308332^B21874886
"RTN","IBCA",1,0)
IBCA ;ALB/MRL - ADD NEW BILLING RECORD ;01 JUN 88 12:00
"RTN","IBCA",2,0)
 ;;2.0;INTEGRATED BILLING;**43,80,109,106,137,312**;21-MAR-94
"RTN","IBCA",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCA",4,0)
 ;
"RTN","IBCA",5,0)
 ;MAP TO DGCRA
"RTN","IBCA",6,0)
 ;
"RTN","IBCA",7,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBCA",8,0)
 ;
"RTN","IBCA",9,0)
 D Q1 S IBCABRT=0,IOP="HOME" D ^%ZIS K IOP I $S('$D(DFN):1,'$D(^DPT(DFN,0)):1,1:0) S IBCABRT=1 G NREC
"RTN","IBCA",10,0)
 I $S('$D(^IBE(350.9,1,1)):1,'$P(^(1),U,14):1,1:0) S IBCABRT=4 G NREC
"RTN","IBCA",11,0)
 S PRCASV("SER")=$P(^IBE(350.9,1,1),U,14)
"RTN","IBCA",12,0)
 S PRCASV("SITE")=+$P($$SITE^VASITE,"^",3) I PRCASV("SITE")<1 S IBCABRT=5 G NREC
"RTN","IBCA",13,0)
 S IBNWBL="",IBQUIT=0 I '$D(DUZ(0)) S IBCABRT=2 G NREC
"RTN","IBCA",14,0)
 I $S($D(DLAYGO):2\1-(DLAYGO\1),1:1),DUZ(0)'="@",$D(^DIC(399,0,"LAYGO")) S DLAYGO=399
"RTN","IBCA",15,0)
 ;I $S($D(DLAYGO):2\1-(DLAYGO\1),1:1),DUZ(0)'="@",$D(^DIC(399,0,"LAYGO")) F I=1:1 I DUZ(0)[$E(^("LAYGO"),I) Q:I'>$L(^("LAYGO"))  S IBCABRT=3 G NREC
"RTN","IBCA",16,0)
 ;
"RTN","IBCA",17,0)
CHKID D DEM^VADPT S DGDIR0="399,.04^399,.05^399,.06^399,155^399,151^399,152",DGDIRA="LOCATION OF CARE^EVENT INFORMATION SOURCE^TIMEFRAME^IS THIS A SENSITIVE RECORD?^STATEMENT COVERS FROM^STATEMENT COVERS TO"
"RTN","IBCA",18,0)
 S DGDIRB="1^^^NO"
"RTN","IBCA",19,0)
 F IBI=1:1:4 S:$P(DGDIRB,"^",IBI)]"" DIR("B")=$P(DGDIRB,"^",IBI) S DIR(0)=$P(DGDIR0,"^",IBI),DIR("A")="   BILLING "_$P(DGDIRA,"^",IBI) D READ G:IBQUIT NREC K DIR
"RTN","IBCA",20,0)
 S DIC="^DGCR(399.3,",DIC(0)="AEQMZ",DIC("A")="   BILLING RATE TYPE:  ",DIC("S")="I '$P(^(0),U,3)" D ^DIC K DIC G NREC:Y'>0 S IBIDS(.07)=+Y,IBIDS(.11)=$P(^DGCR(399.3,+Y,0),"^",7)
"RTN","IBCA",21,0)
 ;
"RTN","IBCA",22,0)
OP G IP:IBIDS(.05)'>2 S %DT="EAX",%DT(0)="-NOW",%DT("A")="   BILLING OUTPATIENT EVENT DATE:  " D ^%DT I Y'>0 G NREC
"RTN","IBCA",23,0)
 ;S X=Y D APPT^IBCU3
"RTN","IBCA",24,0)
 ; Do NOT PROCESS on VistA if Y >= Switch Eff Date          ;CCR-930
"RTN","IBCA",25,0)
 I +IBSWINFO,(Y+1)>$P(IBSWINFO,"^",2) S IBCABRT=7 G NREC    ;IB*2.0*312
"RTN","IBCA",26,0)
 ;
"RTN","IBCA",27,0)
 S X=$$APPT^IBCU3(Y,DFN,1)
"RTN","IBCA",28,0)
 S IBIDS(.03)=+Y X ^DD("DD") S DIR("B")=Y G CEOC
"RTN","IBCA",29,0)
 ;
"RTN","IBCA",30,0)
IP D DISPAD^IBCA0 G:'$D(IBIDS(.03)) NREC
"RTN","IBCA",31,0)
 ; Do NOT PROCESS on VistA if Date = Switch Eff Date        ;CCR-930*312
"RTN","IBCA",32,0)
 I +IBSWINFO,(IBIDS(.03)+1)>$P(IBSWINFO,"^",2) S IBCABRT=7 G NREC   ;P312
"RTN","IBCA",33,0)
 ;
"RTN","IBCA",34,0)
 I $D(IBDSDT) K:'IBDSDT IBDSDT S:$D(IBDSDT) IBDSDT=$P(IBDSDT,".")
"RTN","IBCA",35,0)
 S Y=$P(IBIDS(.03),".") X ^DD("DD") S DIR("B")=Y
"RTN","IBCA",36,0)
 ;
"RTN","IBCA",37,0)
CEOC S IBIDS(.27)="" I +$$BILLRATE^IBCRU3(IBIDS(.07),IBIDS(.05),IBIDS(.03),"RC") S IBIDS(.27)=1
"RTN","IBCA",38,0)
 S IBIDS(.22)=$P($G(^IBE(350.9,1,1)),"^",25)
"RTN","IBCA",39,0)
 I $G(IBIDS(.11))="i" N IBDTIN,IBCOVEXT S IBDTIN=$G(IBIDS(.03)),IBCOVEXT=1 W ! D DISPDT^IBCNS W !
"RTN","IBCA",40,0)
 W ! S X=$P(IBIDS(.03),".") D EN3^IBCA3 W ! S IBQUIT=0 ;show other bills this date
"RTN","IBCA",41,0)
 I IBIDS(.05)>2 S X=$$ADM^IBCU64(DFN,IBIDS(.03)) I +X W !,"Warning: Patient is an Inpatient on ",$$FMTE^XLFDT(IBIDS(.03),2),": ",$$FMTE^XLFDT(+X,2)," - " W:+$P(X,U,2) $$FMTE^XLFDT(+$P(X,U,2),2) W !
"RTN","IBCA",42,0)
 I +$G(IBIDS(.08)),+$P($G(^DGPT(+IBIDS(.08),70)),"^",2),$G(^DIC(42.4,+$P(^(70),"^",2),0))'="",$P(^(0),"^",5)="" W !!,"Discharge bedsection of this PTF record is NOT billable!",!!!
"RTN","IBCA",43,0)
 S IBI=5,DIR(0)="399,151",DIR("A")="   BILLING STATEMENT COVERS FROM" D READ G:IBQUIT NREC S DGX=IBIDS(151) D LASTDAY X ^DD("DD") S DIR("B")=Y
"RTN","IBCA",44,0)
 S IBI=6,DIR(0)="399,152",DIR("A")="   BILLING STATEMENT COVERS TO" D READ G:IBQUIT NREC
"RTN","IBCA",45,0)
 K %DT,DIR G ^IBCA1:'$O(^DGCR(399,"C",DFN,0)) S X=9999999-IBIDS(.03)
"RTN","IBCA",46,0)
 F I=0:0 S I=$O(^DGCR(399,"APDT",DFN,I)) Q:'I  I $O(^DGCR(399,"APDT",DFN,I,0))=X,$D(^DGCR(399,+I,0)),$S('$D(^DGCR(399,I,"S")):1,$P(^("S"),"^",16)=1:0,1:1) S IBIDS(.17)=$P(^(0),"^",17) Q
"RTN","IBCA",47,0)
 I $D(IBIDS(.17)) G CHKINQ
"RTN","IBCA",48,0)
 I '$D(IBIDS(.17)),IBIDS(.05)<3 G CHKINQ
"RTN","IBCA",49,0)
CEOC1 D CEOC1^IBCA0 Q:'$D(IBIDS)
"RTN","IBCA",50,0)
CHKINQ G ^IBCA1
"RTN","IBCA",51,0)
 ;
"RTN","IBCA",52,0)
READ D ^DIR I X?1"^"1.ANP W !?6,*7,"Sorry '^' not allowed!" G READ
"RTN","IBCA",53,0)
 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBCA",54,0)
 S IBIDS($P($P(DGDIR0,"^",IBI),",",2))=Y
"RTN","IBCA",55,0)
 Q
"RTN","IBCA",56,0)
 ;
"RTN","IBCA",57,0)
NREC S IBYN=0 D SET W !?6,*7,"<",$S('$G(IBCABRT):"ABORTED",$P(IBCABRT(1),U,IBCABRT)]"":$P(IBCABRT(1),U,IBCABRT),1:"ABORTED"),", NO BILLING RECORD CREATED>" K IBIFN
"RTN","IBCA",58,0)
Q1 K IBIDS,IB
"RTN","IBCA",59,0)
Q K %,%DT,D,IBCABRT,IBNWBL,IBQUIT,IBYN,DIRUT,DTOUT,DIROUT,DUOUT,PRCASV,X1,X2,IBI,IBJ,IBX,DGX,IBDSDT,IBDFN,IBID0,IBSET,IBI,DGDIRB,DGDIR0,DGDIRA,DIR,DIC,DLAYGO,I,X,Y Q
"RTN","IBCA",60,0)
 Q
"RTN","IBCA",61,0)
SET S IBCABRT(1)="PATIENT INFORMATION LACKING^FILEMAN ACCESS UNDEFINED^"
"RTN","IBCA",62,0)
 S IBCABRT(1)=IBCABRT(1)_"NO LAYGO ACCESS TO BILLING FILE^"
"RTN","IBCA",63,0)
 S IBCABRT(1)=IBCABRT(1)_"MAS SERVICE PARAMETER UNKNOWN^"
"RTN","IBCA",64,0)
 S IBCABRT(1)=IBCABRT(1)_"FACILITY UNDEFINED^"
"RTN","IBCA",65,0)
 S IBCABRT(1)=IBCABRT(1)_"UNABLE TO CREATE ACCOUNTS RECEIVABLE ENTRY^"
"RTN","IBCA",66,0)
 S IBCABRT(1)=IBCABRT(1)_"EPISODE CANNOT BE ON OR AFTER PFSS EFFECTIVE DATE"
"RTN","IBCA",67,0)
 Q
"RTN","IBCA",68,0)
 ;
"RTN","IBCA",69,0)
LASTDAY ;find last day of last month
"RTN","IBCA",70,0)
 ;  -set x to default last date
"RTN","IBCA",71,0)
 S X1=DT,X2=-($E(DT,6,7)) D C^%DTC S Y=X
"RTN","IBCA",72,0)
 K Y
"RTN","IBCA",73,0)
 I $D(IBDSDT) D  G:$D(Y) LDQ
"RTN","IBCA",74,0)
 . ;I $E(DGX,4,5)<10 S Y=$E(DGX,1,3)_"0930" S:IBDSDT<Y Y=IBDSDT Q  ;don't cross fy's
"RTN","IBCA",75,0)
 . ;I $E(DGX,4,5)>9 S Y=$E(DGX,1,3)_"1231" S:IBDSDT<Y Y=IBDSDT Q  ;don't cross cy's
"RTN","IBCA",76,0)
 . S Y=IBDSDT
"RTN","IBCA",77,0)
 ;
"RTN","IBCA",78,0)
 I DGX>X S Y=DT Q  ;billing for this month
"RTN","IBCA",79,0)
 ;
"RTN","IBCA",80,0)
 ;I $E(DGX,4,5)<10 S Y=$E(DGX,1,3)_"0930" S:X<Y Y=X G LDQ ; end of month, don't cross fy's
"RTN","IBCA",81,0)
 ;I $E(DGX,4,5)>9 S Y=$E(DGX,1,3)_"1231" S:X<Y Y=X G LDQ ; end of month, don't cross cy's
"RTN","IBCA",82,0)
 I '$D(Y) S Y=X
"RTN","IBCA",83,0)
LDQ Q
"RTN","IBCD")
0^9^B9728970^B6274000
"RTN","IBCD",1,0)
IBCD ;ALB/ARH - AUTOMATED BILLER ;8/6/93
"RTN","IBCD",2,0)
 ;;2.0;INTEGRATED BILLING;**312**;21-MAR-94
"RTN","IBCD",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCD",4,0)
 ;
"RTN","IBCD",5,0)
 ;This routine is the begining of the auto biller.  No variables are required on entry.  It is be called by the
"RTN","IBCD",6,0)
 ;IB nightly job routine IBAMTC.  It first checks to see if it should run based on the auto biller frequency
"RTN","IBCD",7,0)
 ;site parameter.  It then gathers the Claims Tracking events with an EABD into a temporary file by patient,
"RTN","IBCD",8,0)
 ;event type, and episode date.  This temporary file ("IBACAB") is then used to sort the events into groups
"RTN","IBCD",9,0)
 ;that should be added to individual bills based on the individual event type billing cycle parameters.  This
"RTN","IBCD",10,0)
 ;second temporary file is then used to create the actual bills in IBCD1-2.
"RTN","IBCD",11,0)
 ;
"RTN","IBCD",12,0)
EN ;begin process of finding and creating bills
"RTN","IBCD",13,0)
 ;determine if auto biller should run, check site parameters (350.9,7.01-7.02)
"RTN","IBCD",14,0)
 N IBSWINFO,IBPFSS S IBSWINFO=$$SWSTAT^IBBAPI()            ;IB*2.0*312
"RTN","IBCD",15,0)
 S IBPAR7=$G(^IBE(350.9,1,7)) G:'$P(IBPAR7,U,1) EXIT
"RTN","IBCD",16,0)
 I +IBPAR7,+$P(IBPAR7,U,2),$$FMADD^XLFDT(+$P(IBPAR7,U,2),+IBPAR7)>DT G EXIT
"RTN","IBCD",17,0)
 S IBAUTO=1
"RTN","IBCD",18,0)
 ;
"RTN","IBCD",19,0)
 ;begin search for events to bill, create array of events by patient
"RTN","IBCD",20,0)
 ;^TMP("IBCAB",$J, PATIENT, EVENT TYPE, EPISODE DATE, EVENT IFN)=""
"RTN","IBCD",21,0)
 ;adds all events in Claims Tracking that have an EABD not after today
"RTN","IBCD",22,0)
 S IBDFN=0 F  S IBDFN=$O(^IBT(356,"ATOBIL",IBDFN)) Q:'IBDFN  D
"RTN","IBCD",23,0)
 . S IBTYP=0 F  S IBTYP=$O(^IBT(356,"ATOBIL",IBDFN,IBTYP)) Q:'IBTYP  D
"RTN","IBCD",24,0)
 .. S IBEABD=0 F  S IBEABD=$O(^IBT(356,"ATOBIL",IBDFN,IBTYP,IBEABD)) Q:'IBEABD!(IBEABD>DT)  D
"RTN","IBCD",25,0)
 ... S IBTRN=0 F  S IBTRN=$O(^IBT(356,"ATOBIL",IBDFN,IBTYP,IBEABD,IBTRN)) Q:'IBTRN  D
"RTN","IBCD",26,0)
 .... S IBX=$$EVBILL^IBCU81(IBTRN) I 'IBX!(IBX>DT) D TEABD(IBTRN,+IBX) D:$P(IBX,U,2)'="" TERR(IBTRN,0,$P(IBX,U,2)) Q
"RTN","IBCD",27,0)
 .... S IBX=$$EVNTCHK^IBCU82(IBTRN) I +IBX D TEABD(IBTRN,0) D TERR(IBTRN,0,$P(IBX,U,2)) Q
"RTN","IBCD",28,0)
 .... S IBTRND=$G(^IBT(356,IBTRN,0))
"RTN","IBCD",29,0)
 .... I +IBSWINFO D  Q:IBPFSS                               ;IB*2.0*312
"RTN","IBCD",30,0)
   ..... S IBPFSS=1                                         ;IB*2.0*312
"RTN","IBCD",31,0)
   ..... ; Do NOT PROCESS on VistA if DT>=Switch Eff Date   ;CCR-930
"RTN","IBCD",32,0)
   ..... I ($P(IBTRND,"^",6)+1)>$P(IBSWINFO,"^",2) Q        ;IB*2.0*312
"RTN","IBCD",33,0)
   ..... I $P($G(^DPT(IBDFN,.1)),"^")'="" Q                 ;IB*2.0*312
"RTN","IBCD",34,0)
   ..... Q:$$CHKDIS()                                       ;CCR-1081
"RTN","IBCD",35,0)
   ..... S IBPFSS=0     ;Before EffDt & Discharged          ;IB*2.0*312
"RTN","IBCD",36,0)
 .... ;
"RTN","IBCD",37,0)
 .... S ^TMP("IBCAB",$J,IBDFN,IBTYP,+$P(IBTRND,U,6),IBTRN)=""
"RTN","IBCD",38,0)
 K IBDFN,IBTYP,IBEABD,IBTRN,IBTRND,IBX
"RTN","IBCD",39,0)
 ;
"RTN","IBCD",40,0)
 I $D(^TMP("IBCAB",$J)) D ^IBCD1 ; consolidate events into bills, create bills
"RTN","IBCD",41,0)
 D ^IBCDC ; set comments into file
"RTN","IBCD",42,0)
 S DIE="^IBE(350.9,",DA=1,DR="7.02////"_DT D ^DIE ;reset last date auto biller run
"RTN","IBCD",43,0)
 K ^TMP("IBCAB",$J),^TMP("IBEABD",$J),^TMP("IBCE",$J),^TMP("IBILL",$J)
"RTN","IBCD",44,0)
 F IBX=1:1:10 K ^TMP(("IBC"_IBX),$J)
"RTN","IBCD",45,0)
EXIT K IBX,IBPAR7,DIE,DA,DR,IBAUTO,IBBS,IBSC,IBT
"RTN","IBCD",46,0)
 Q
"RTN","IBCD",47,0)
CHKDIS() ; Returns 1 if discharge was on or after effective date   ;CCR-1081
"RTN","IBCD",48,0)
 N IBADMLNK,IBDISLNK
"RTN","IBCD",49,0)
 S IBADMLNK=$P(IBTRND,"^",5) G:'IBADMLNK CHKDISQ
"RTN","IBCD",50,0)
 S IBDISLNK=$P($G(^DGPM(IBADMLNK,0)),"^",17) G:'IBDISLNK CHKDISQ
"RTN","IBCD",51,0)
 ;
"RTN","IBCD",52,0)
 I (^DGPM(IBDISLNK,0)+1)>$P(IBSWINFO,"^",2) Q 1
"RTN","IBCD",53,0)
CHKDISQ Q 0
"RTN","IBCD",54,0)
 ;
"RTN","IBCD",55,0)
TEABD(TRN,IBDT) ;array contains the list of claims tracking events that need EABD updated, and the new date
"RTN","IBCD",56,0)
 S IBDT=+$G(IBDT),^TMP("IBEABD",$J,TRN,+IBDT)=""
"RTN","IBCD",57,0)
 Q
"RTN","IBCD",58,0)
TERR(TRN,IFN,ER) ;array contains events or bills that need entries created in the comments file, and the comment
"RTN","IBCD",59,0)
 N X S TRN=+$G(TRN),IFN=+$G(IFN),X=+$G(^TMP("IBCE",$J,DT,TRN,IFN))+1
"RTN","IBCD",60,0)
 S ^TMP("IBCE",$J,DT,TRN,IFN,X)=$G(ER),^TMP("IBCE",$J,DT,TRN,IFN)=X
"RTN","IBCD",61,0)
 Q
"RTN","IBCD",62,0)
TBILL(TRN,IFN) ;array contains list of events and bills to be inserted into 356.399
"RTN","IBCD",63,0)
 I '$D(^IBT(356,+$G(TRN),0))!('$D(^DGCR(399,+$G(IFN),0))) Q
"RTN","IBCD",64,0)
 S ^TMP("IBILL",$J,TRN,IFN)=""
"RTN","IBCD",65,0)
 Q
"RTN","IBECEA1")
0^16^B14626334^B13288882
"RTN","IBECEA1",1,0)
IBECEA1 ;ALB/RLW-Cancel/Edit/Add... Action Entry Points ; 12-JUN-92
"RTN","IBECEA1",2,0)
 ;;2.0;INTEGRATED BILLING;**15,27,45,176,312**;21-MAR-94
"RTN","IBECEA1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBECEA1",4,0)
 ;
"RTN","IBECEA1",5,0)
PASS ; 'Pass a Charge' Entry Action (added by Jim Moore 4/30/92)
"RTN","IBECEA1",6,0)
 N C,IBII,IBNOS,IBND,IBMSG,IBY,IBLINE,IBSTAT,IBAFY,IBATYP,IBHLDR
"RTN","IBECEA1",7,0)
 N IBARTYP,IBN,IBSEQNO,IBSERV,IBTOTL,IBTRAN,IBIL,IBNOS2,Y,IBXA
"RTN","IBECEA1",8,0)
 ;
"RTN","IBECEA1",9,0)
 S VALMBCK="R" D EN^VALM2($G(XQORNOD(0)))
"RTN","IBECEA1",10,0)
 I $D(VALMY) I '$$PFSSWARN^IBBSHDWN() S VALMBCK="R" Q
"RTN","IBECEA1",11,0)
 ;
"RTN","IBECEA1",12,0)
 S IBII="" F  S IBII=$O(VALMY(IBII)) Q:'IBII  D  L -^IB(IBNOS2) D MSG
"RTN","IBECEA1",13,0)
 .S IBY=1,IBLINE=^TMP("IBACM",$J,IBII,0)
"RTN","IBECEA1",14,0)
 .S (IBNOS,IBNOS2)=+$P(^TMP("IBACMIDX",$J,IBII),"^",4)
"RTN","IBECEA1",15,0)
 .;
"RTN","IBECEA1",16,0)
 .; - perform up-front edits
"RTN","IBECEA1",17,0)
 .L +^IB(IBNOS2):5 I '$T S IBMSG="was not passed - record not available, please try again" Q
"RTN","IBECEA1",18,0)
 .S IBND=$G(^IB(IBNOS2,0)) I IBND="" S IBMSG="was not passed - record missing the zeroth node" Q
"RTN","IBECEA1",19,0)
 .I $P(IBND,"^",12) S IBMSG="was not passed - the charge already has an AR Transaction Number" Q
"RTN","IBECEA1",20,0)
 .S IBSTAT=+$P(IBND,"^",5) I $P($G(^IBE(350.21,IBSTAT,0)),"^",4) S IBMSG="was not passed - the status indicates that the charge is billed" Q
"RTN","IBECEA1",21,0)
 .I $P(IBND,"^",7)'>0 S IBMSG="was not passed - there is no charge amount" Q
"RTN","IBECEA1",22,0)
 .S IBSEQNO=$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^",5) I 'IBSEQNO S IBMSG="was not passed (Bulletin will be generated)",IBY="-1^IB023" Q
"RTN","IBECEA1",23,0)
 .I $P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^",11)=6 S IBMSG="was not passed - CHAMPVA charges must be cancelled and rebilled" Q
"RTN","IBECEA1",24,0)
 .S IBHLDR=(IBSTAT=21)
"RTN","IBECEA1",25,0)
 .; - pass charge to AR and update list
"RTN","IBECEA1",26,0)
 .D ^IBR S IBY=$G(Y)
"RTN","IBECEA1",27,0)
 .S IBND=$G(^IB(IBNOS2,0))
"RTN","IBECEA1",28,0)
 .S (IBSTAT,Y)=$P(IBND,"^",5),C=$P($G(^DD(350,.05,0)),"^",2) D Y^DIQ
"RTN","IBECEA1",29,0)
 .S IBLINE=$$SETSTR^VALM1(Y,IBLINE,+$P(VALMDDF("STATUS"),"^",2),+$P(VALMDDF("STATUS"),"^",3))
"RTN","IBECEA1",30,0)
 .S IBLINE=$$SETSTR^VALM1($P($P(IBND,"^",11),"-",2),IBLINE,+$P(VALMDDF("BILL#"),"^",2),+$P(VALMDDF("BILL#"),"^",3))
"RTN","IBECEA1",31,0)
 .S ^TMP("IBACM",$J,IBII,0)=IBLINE
"RTN","IBECEA1",32,0)
 .S IBMSG=$S(+IBY=-1:"was not passed -",IBSTAT=8:"has now been placed ON HOLD",1:"has now been passed")
"RTN","IBECEA1",33,0)
 .;
"RTN","IBECEA1",34,0)
 .; - if there is no active billing clock, add one
"RTN","IBECEA1",35,0)
 .;   added check for LTC, don't do this for LTC
"RTN","IBECEA1",36,0)
 .S IBXA=$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^",11)
"RTN","IBECEA1",37,0)
 .I $P(IBND,"^",14),'$P($G(^IB(IBNOS2,1)),"^",5),'$D(^IBE(351,"ACT",DFN)),IBXA'=8,IBXA'=9 D
"RTN","IBECEA1",38,0)
 ..W !,"This patient has no active billing clock.  Adding a new one... "
"RTN","IBECEA1",39,0)
 ..S IBCLDT=$P(IBND,"^",14)
"RTN","IBECEA1",40,0)
 ..I '$D(IBSERV) D SERV^IBAUTL2
"RTN","IBECEA1",41,0)
 ..D CLADD^IBAUTL3 W $S(IBY>0:"done.",1:"error (see msg)")
"RTN","IBECEA1",42,0)
 .;
"RTN","IBECEA1",43,0)
 .; - if charge was on hold pending review, pass data to IVM
"RTN","IBECEA1",44,0)
 .I IBHLDR W !,"Passing billing data to the IVM package...  " D IVM^IBAMTV32(IBND) W "done."
"RTN","IBECEA1",45,0)
 Q
"RTN","IBECEA1",46,0)
 ;
"RTN","IBECEA1",47,0)
MSG ; Display results message.
"RTN","IBECEA1",48,0)
 W !,"Charge #"_IBII_" "_IBMSG I +IBY=-1 D ^IBAERR1
"RTN","IBECEA1",49,0)
 W ! S DIR(0)="E" D ^DIR K DIR W !
"RTN","IBECEA1",50,0)
 Q
"RTN","IBECEA1",51,0)
 ;
"RTN","IBECEA1",52,0)
 ;
"RTN","IBECEA1",53,0)
ADD ; 'Add a Charge' Entry Action
"RTN","IBECEA1",54,0)
 I '$$PFSSWARN^IBBSHDWN() S VALMBCK="R" Q                   ;IB*2.0*312
"RTN","IBECEA1",55,0)
 G ^IBECEA3
"RTN","IBECEA1",56,0)
 ;
"RTN","IBECEA1",57,0)
UPD ; 'Edit a Charge' Entry Action
"RTN","IBECEA1",58,0)
 S IBAUPD=1
"RTN","IBECEA1",59,0)
 ;
"RTN","IBECEA1",60,0)
CAN ; 'Cancel a Charge' Entry Action
"RTN","IBECEA1",61,0)
 D EN^VALM2(IBNOD(0)) I '$O(VALMY(0)) S VALMBCK="" G CANQ
"RTN","IBECEA1",62,0)
 I $G(IBAUPD) I '$$PFSSWARN^IBBSHDWN() S VALMBCK="R" Q       ;IB*2.0*312
"RTN","IBECEA1",63,0)
 ;
"RTN","IBECEA1",64,0)
 S (IBNBR,IBCOMMIT)=0,VALMBCK="R"
"RTN","IBECEA1",65,0)
 F  S IBNBR=$O(VALMY(IBNBR)) Q:'IBNBR  D ^@$S($G(IBAUPD):"IBECEA2",1:"IBECEA4")
"RTN","IBECEA1",66,0)
 I IBCOMMIT S IBBG=VALMBG W !,"Rebuilding list of charges..." D ARRAY^IBECEA0 S VALMBG=IBBG
"RTN","IBECEA1",67,0)
 K IBBG,IBNBR,IBAUPD,IBCOMMIT
"RTN","IBECEA1",68,0)
CANQ Q
"RTN","IBECEA1",69,0)
 ;
"RTN","IBECEA1",70,0)
PAUSE ; Keep this around for awhile.
"RTN","IBECEA1",71,0)
 W ! S DIR(0)="E" D ^DIR K DIR W !
"RTN","IBECEA1",72,0)
 Q
"RTN","IBECEA21")
0^17^B29059334^B26041958
"RTN","IBECEA21",1,0)
IBECEA21 ;ALB/CPM-Cancel/Edit/Add... Edit Prompts;19-APR-93
"RTN","IBECEA21",2,0)
 ;;2.0;INTEGRATED BILLING;**7,57,167,183,202,312**;21-MAR-94
"RTN","IBECEA21",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBECEA21",4,0)
 ;
"RTN","IBECEA21",5,0)
 ; Issue appropriate prompts for each charge type.  If the charge
"RTN","IBECEA21",6,0)
 ; being edited has not been billed, handle that charge before
"RTN","IBECEA21",7,0)
 ; returning to IBECEA2.
"RTN","IBECEA21",8,0)
 ;
"RTN","IBECEA21",9,0)
 N IBSTOPDA,IBTYPE,IBGMT
"RTN","IBECEA21",10,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                    ;IB*2.0*312
"RTN","IBECEA21",11,0)
 S IBGMT=0
"RTN","IBECEA21",12,0)
 ;
"RTN","IBECEA21",13,0)
 ; Handle Outpatient Charges
"RTN","IBECEA21",14,0)
 I IBXA=4 D  G END
"RTN","IBECEA21",15,0)
 .S (IBFR,IBTO,IBDT)=$P(IBND,"^",14),IBUNIT=IBUNITP
"RTN","IBECEA21",16,0)
 .W !,"Re-calculating the OPT copay charge for ",$$DAT1^IBOUTL(IBFR)," ..."
"RTN","IBECEA21",17,0)
 .;
"RTN","IBECEA21",18,0)
 .; need to look up stop info to populate IBTYPE *167
"RTN","IBECEA21",19,0)
 .S IBSTOPDA=$S($P($P(IBND,"^",4),":")=350:$P(IBND,"^",20),1:$$GETSC^IBEMTSCU($P(IBND,"^",4),$P(IBND,"^",17)))
"RTN","IBECEA21",20,0)
 .S IBTYPE=$S(IBSTOPDA>0:$P($G(^IBE(352.5,+$G(IBSTOPDA),0)),"^",3),1:1)
"RTN","IBECEA21",21,0)
 .;
"RTN","IBECEA21",22,0)
 .S IBX="O" D TYPE^IBAUTL2 Q:IBY<0  W "   $",IBCHG
"RTN","IBECEA21",23,0)
 .I 'IBH,IBCHG=IBCHGP W !,"This equals the billed amount - this charge cannot be edited." S IBY=-1 Q
"RTN","IBECEA21",24,0)
 .I IBCHG=IBCHGP W !,"This charge is ready to be billed." D PASS^IBECEA22 S IBY=-1 Q
"RTN","IBECEA21",25,0)
 .I IBH D UPCHG^IBECEA22(IBCHG) S IBY=-1 Q
"RTN","IBECEA21",26,0)
 .S IBCRES=$O(^IBE(350.3,"B","MT CHARGE EDITED",0)) S:'IBCRES IBCRES=19
"RTN","IBECEA21",27,0)
 .W !!,"The original charge will be cancelled and re-billed for $",IBCHG,"."
"RTN","IBECEA21",28,0)
 ;
"RTN","IBECEA21",29,0)
 ; Handle Pharmacy Copay Charges
"RTN","IBECEA21",30,0)
 I IBXA=5 D  G END
"RTN","IBECEA21",31,0)
 .D UNIT^IBECEAU2(IBUNITP) Q:IBY<0
"RTN","IBECEA21",32,0)
 .I 'IBH,IBUNIT=IBUNITP W !!,"No change was made!" S IBY=-1 Q
"RTN","IBECEA21",33,0)
 .I IBH D UPCHG^IBECEA22(IBCHG,IBUNIT) S IBY=-1 Q
"RTN","IBECEA21",34,0)
 .W !!,"The original charge will be cancelled and re-billed for $",$J(IBCHG,"",2),"."
"RTN","IBECEA21",35,0)
 ;
"RTN","IBECEA21",36,0)
 ; Handle all Inpatient Charges
"RTN","IBECEA21",37,0)
 S IBFRP=+$P(IBND,"^",14),IBTOP=+$P(IBND,"^",15),IBLIM=$S(IBXA=3:DT,1:$$FMADD^XLFDT(DT,-1))
"RTN","IBECEA21",38,0)
 S IBGMT=$$ISGMTPT^IBAGMT(DFN,IBFRP) ;Check GMT Copayment Status
"RTN","IBECEA21",39,0)
 D CLSTR^IBECEAU1(DFN,IBFRP)
"RTN","IBECEA21",40,0)
 I 'IBCLDA W !!,"I cannot find a billing clock that was effective on ",$$DAT1^IBOUTL(IBFRP),"!",!,"Please adjust this patient's billing clocks before editing this charge." S IBY=-1 Q
"RTN","IBECEA21",41,0)
 D CLDATA^IBAUTL3,DED^IBAUTL3 G:IBY<0 END
"RTN","IBECEA21",42,0)
 ;For GMT Patients reduce Medicare Deductible to 20%
"RTN","IBECEA21",43,0)
 I IBGMT>0 S IBMED=$$REDUCE^IBAGMT(IBMED) W !,"Medicare Deductible reduced due to GMT Copayment Status."
"RTN","IBECEA21",44,0)
 S:IBXA=2 IBBS=$O(^DGCR(399.1,"AC",IBATYP,0))
"RTN","IBECEA21",45,0)
 I IBXA=2,$P($G(^IBE(350.1,IBATYP,0)),"^",8)'["NHCU",IBCLDAY>90,IBCHGP'>IBCLDOL S IBMED=IBMED/2
"RTN","IBECEA21",46,0)
 I IBXA=1,IBCLDAY>90 D MED^IBECEA34 G:IBY<0 END
"RTN","IBECEA21",47,0)
 W !!,"  ** ",$S($P(IBCLST,"^",4)=1:"Active",1:"Closed")," Billing Clock **"
"RTN","IBECEA21",48,0)
 W !?2,"Begin Date: ",$$DAT1^IBOUTL(IBCLDT),"   # Inpt Days: ",IBCLDAY,"   ",$$INPT^IBECEAU(IBCLDAY)," 90 days: $",IBCLDOL,!
"RTN","IBECEA21",49,0)
 S:IBXA=3 IBDAYP=IBCLDAY-IBUNITP
"RTN","IBECEA21",50,0)
 I IBXA=1!(IBXA=2) S IBDOLP=IBCLDOL-IBCHGP S:IBDOLP<0 IBDOLP=0
"RTN","IBECEA21",51,0)
 ;
"RTN","IBECEA21",52,0)
 ; - ask for 'Bill From' date
"RTN","IBECEA21",53,0)
FR D FR^IBECEAU2(IBFRP) G:IBY<0 END
"RTN","IBECEA21",54,0)
 I +IBSWINFO,(IBFR+1)>$P(IBSWINFO,"^",2) D  G FR          ;IB*2.0*312
"RTN","IBECEA21",55,0)
   .W !!,"The 'Bill From' date cannot be on or AFTER "
"RTN","IBECEA21",56,0)
   .W "the PFSS Effective Date: ",$$FMTE^XLFDT($P(IBSWINFO,"^",2))
"RTN","IBECEA21",57,0)
 ; 
"RTN","IBECEA21",58,0)
 I IBFR<IBCLDT W !!,"The 'Bill From' date cannot preceed the Billing Clock Begin Date.",! G FR
"RTN","IBECEA21",59,0)
 S IBGMTR=0,IBGMT=$$ISGMTPT^IBAGMT(DFN,IBFR) ; GMT Status may change
"RTN","IBECEA21",60,0)
 I IBXA=3 S IBDT=IBFR D COST^IBAUTL2 S:IBGMT>0 IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG) I 'IBCHG W !!,"Unable to determine the per diem rate. Please check your rate table." S IBY=-1 G END
"RTN","IBECEA21",61,0)
 I IBXA=2 S IBDT=IBFR D COPAY^IBAUTL2 G:IBY<0 END S:IBGMT>0 IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG) I IBCHG+IBDOLP<IBMED W *7,"   ($",IBCHG,"/day)" W:IBGMTR " GMT Rate" G TO
"RTN","IBECEA21",62,0)
 I IBXA=2,IBCHG=IBCHGP D CTBB^IBECEAU3 W !!,"No change was made!" S IBY=-1 G END
"RTN","IBECEA21",63,0)
 ;
"RTN","IBECEA21",64,0)
 ; - ask for 'Bill To' date
"RTN","IBECEA21",65,0)
TO D TO^IBECEAU2(IBTOP) G:IBY<0 END
"RTN","IBECEA21",66,0)
 I +IBSWINFO,(IBTO+1)>$P(IBSWINFO,"^",2) D  G TO          ;IB*2.0*312
"RTN","IBECEA21",67,0)
  .W !!,"The 'Bill To' date cannot be on or AFTER "
"RTN","IBECEA21",68,0)
  .W "the PFSS Effective Date: ",$$FMTE^XLFDT($P(IBSWINFO,"^",2))
"RTN","IBECEA21",69,0)
 ; 
"RTN","IBECEA21",70,0)
 I $P(IBCLST,"^",10),IBTO>$P(IBCLST,"^",10) W !!,"The 'Bill To' date cannot exceed the Billing Clock End Date (",$$DAT1^IBOUTL($P(IBCLST,"^",10)),")." G TO
"RTN","IBECEA21",71,0)
 S IBUNIT=$$FMDIFF^XLFDT(IBTO,IBFR)
"RTN","IBECEA21",72,0)
 I $$FMDIFF^XLFDT(IBTOP,IBFRP)<IBUNITP!(IBFR=IBTO) S IBUNIT=IBUNIT+1
"RTN","IBECEA21",73,0)
 I IBTO'=IBFR,IBXA>0,IBXA<4,$$ISGMTPT^IBAGMT(DFN,IBTO)'=$$ISGMTPT^IBAGMT(DFN,IBFR) W !!,"The patient changed GMT Copayment status during the specified period!",! G TO
"RTN","IBECEA21",74,0)
 I IBXA>1 D  G END
"RTN","IBECEA21",75,0)
 . S IBCHG=IBUNIT*IBCHG S:IBXA=2 IBCHG=$S(IBDOLP+IBCHG>IBMED:IBMED-IBDOLP,1:IBCHG)
"RTN","IBECEA21",76,0)
 . I IBCHG=IBCHGP D CTBB^IBECEAU3 W !!,"No change was made!" S IBY=-1 Q
"RTN","IBECEA21",77,0)
 . S:IBXA=2 IBDOLA=IBDOLP+IBCHG,IBDAYA=0 S:IBXA=3 IBDAYA=IBDAYP+IBUNIT,IBDOLA=0
"RTN","IBECEA21",78,0)
 . W !!,"New charge to be billed" W:IBGMTR "(GMT Rate)" W ": $",$J(IBCHG,"",2),!
"RTN","IBECEA21",79,0)
 . I IBH D CHCL^IBECEA22
"RTN","IBECEA21",80,0)
 ;
"RTN","IBECEA21",81,0)
 ; - ask for 'Fee Amount'
"RTN","IBECEA21",82,0)
 S IBCLDOLO=IBCLDOL,IBCLDOL=IBCLDOL-IBCHGP S:IBCLDOL<0 IBCLDOL=0
"RTN","IBECEA21",83,0)
 I IBGMT>0 S IBGMTR=1 W !,"The patient has GMT Copayment Status! GMT rate must be applied.",!
"RTN","IBECEA21",84,0)
 D FEE^IBECEAU2(IBCHGP) G:IBY<0 END
"RTN","IBECEA21",85,0)
 I IBCHG=IBCHGP W !!,"No change was made!" S IBY=-1 G END
"RTN","IBECEA21",86,0)
 S IBCLDOL=IBCLDOLO,IBDOLA=IBDOLP+IBCHG,IBDAYA=0
"RTN","IBECEA21",87,0)
 I IBH D CHCL^IBECEA22
"RTN","IBECEA21",88,0)
 ;
"RTN","IBECEA21",89,0)
END Q
"RTN","IBECEA3")
0^15^B67660841^B61517877
"RTN","IBECEA3",1,0)
IBECEA3 ;ALB/CPM - Cancel/Edit/Add... Add a Charge ;30-MAR-93
"RTN","IBECEA3",2,0)
 ;;2.0;INTEGRATED BILLING;**7,57,52,132,150,153,166,156,167,176,198,188,183,202,240,312**;21-MAR-94
"RTN","IBECEA3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBECEA3",4,0)
 ;
"RTN","IBECEA3",5,0)
ADD ; Add a Charge protocol
"RTN","IBECEA3",6,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                     ;IB*2.0*312
"RTN","IBECEA3",7,0)
 N IBGMT,IBGMTR
"RTN","IBECEA3",8,0)
 S (IBGMT,IBGMTR)=0
"RTN","IBECEA3",9,0)
 S IBCOMMIT=0,IBEXSTAT=$$RXST^IBARXEU(DFN,DT),IBCATC=$$BILST^DGMTUB(DFN),IBCVAEL=$$CVA^IBAUTL5(DFN),IBLTCST=$$LTCST^IBAECU(DFN,DT,1)
"RTN","IBECEA3",10,0)
 ;I 'IBCVAEL,'IBCATC,'$G(IBRX),+IBEXSTAT<1 W !!,"This patient has never been Means Test billable." S VALMBCK="" D PAUSE^VALM1 G ADDQ1
"RTN","IBECEA3",11,0)
 ;
"RTN","IBECEA3",12,0)
 ; - clear screen and begin
"RTN","IBECEA3",13,0)
 D CLOCK^IBAUTL3 I 'IBCLDA S (IBMED,IBCLDAY,IBCLDOL,IBCLDT)=0
"RTN","IBECEA3",14,0)
 D HDR^IBECEAU("A D D")
"RTN","IBECEA3",15,0)
 I IBY<0 D NODED^IBECEAU3 G ADDQ
"RTN","IBECEA3",16,0)
 ;
"RTN","IBECEA3",17,0)
 ; - ask for the charge type
"RTN","IBECEA3",18,0)
 D CHTYP^IBECEA33 G:IBY<0 ADDQ
"RTN","IBECEA3",19,0)
 N IBAFEE S:$P($G(^IBE(350.1,+$G(IBATYP),0)),"^",8)="FEE SERVICE/OUTPATIENT" IBAFEE=IBATYP
"RTN","IBECEA3",20,0)
 ;
"RTN","IBECEA3",21,0)
 ; - process CHAMPVA charges
"RTN","IBECEA3",22,0)
 I IBXA=6 D CHMPVA^IBECEA32 G ADDQ
"RTN","IBECEA3",23,0)
 ;
"RTN","IBECEA3",24,0)
 ; - process TRICARE charges
"RTN","IBECEA3",25,0)
 I IBXA=7 D CUS^IBECEA35 G ADDQ
"RTN","IBECEA3",26,0)
 ;
"RTN","IBECEA3",27,0)
 ; - display MT billing clock data
"RTN","IBECEA3",28,0)
 I IBXA=2,$P($G(^IBE(350.1,+IBATYP,0)),"^",8)'["NHCU",IBCLDAY>90 S IBMED=IBMED/2
"RTN","IBECEA3",29,0)
 I IBXA=1,IBCLDAY>90 D MED^IBECEA34 G:IBY<0 ADDQ
"RTN","IBECEA3",30,0)
 I "^1^2^3^"[("^"_IBXA_"^"),IBCLDA W !!,"  ** Active Billing Clock **   # Inpt Days: ",IBCLDAY,"    ",$$INPT^IBECEAU(IBCLDAY)," 90 days: $",+IBCLDOL,!
"RTN","IBECEA3",31,0)
 ;
"RTN","IBECEA3",32,0)
 ; - display LTC billing clock data
"RTN","IBECEA3",33,0)
 I IBXA>7,IBXA<10 D  G:IBCLDA<1 ADDQ
"RTN","IBECEA3",34,0)
 . N IBCLZ
"RTN","IBECEA3",35,0)
 . S IBCLDA=$O(^IBA(351.81,"AE",DFN,9999999),-1)
"RTN","IBECEA3",36,0)
 . S:IBCLDA IBCLDA=$O(^IBA(351.81,"AE",DFN,IBCLDA,0))
"RTN","IBECEA3",37,0)
 . I 'IBCLDA W !!,"  ** Patient has no LTC billing clock **" Q
"RTN","IBECEA3",38,0)
 . S IBCLZ=^IBA(351.81,IBCLDA,0)
"RTN","IBECEA3",39,0)
 . W !!,"  **Last LTC Billing Clock    Start Date: ",$$FMTE^XLFDT($P(IBCLZ,"^",3)),"  Free Days Remaining: ",+$P(IBCLZ,"^",6)
"RTN","IBECEA3",40,0)
 . I $P(IBCLZ,"^",6) W !,"The patient must use his free days first." S IBCLDA=0
"RTN","IBECEA3",41,0)
 ;
"RTN","IBECEA3",42,0)
 ; - ask units for rx copay charge
"RTN","IBECEA3",43,0)
 I IBXA=5 D UNIT^IBECEAU2(0) G ADDQ:IBY<0 D  G ADDQ:IBY<0 G PROC
"RTN","IBECEA3",44,0)
 . ;
"RTN","IBECEA3",45,0)
 . ; has patient been previously tracked for cap info
"RTN","IBECEA3",46,0)
 . D TRACK^IBARXMN(DFN)
"RTN","IBECEA3",47,0)
 . ;
"RTN","IBECEA3",48,0)
 . D CTBB^IBECEAU3
"RTN","IBECEA3",49,0)
 . ;
"RTN","IBECEA3",50,0)
 . ; check if above cap
"RTN","IBECEA3",51,0)
 . I IBY'<0 D
"RTN","IBECEA3",52,0)
 .. N IBB,IBN,DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBECEA3",53,0)
 .. D NEW^IBARXMC(1,IBCHG,DT,.IBB,.IBN) Q:'IBN
"RTN","IBECEA3",54,0)
 .. ;
"RTN","IBECEA3",55,0)
 .. ; display message ask to proceed
"RTN","IBECEA3",56,0)
 .. W !!,"This charge will put the patient > $",$J(IBN,0,2)," above their cap amount."
"RTN","IBECEA3",57,0)
 .. S DIR(0)="Y",DIR("A")="Okay to proceed" D ^DIR S:'Y IBY=-1
"RTN","IBECEA3",58,0)
 .. ;
"RTN","IBECEA3",59,0)
 S IBLIM=$S(IBXA=4!(IBXA=3):DT,1:$$FMADD^XLFDT(DT,-1))
"RTN","IBECEA3",60,0)
 ;
"RTN","IBECEA3",61,0)
FR ; - ask 'bill from' date
"RTN","IBECEA3",62,0)
 D FR^IBECEAU2(0) G:IBY<0 ADDQ
"RTN","IBECEA3",63,0)
 ; Do NOT PROCESS on VistA if IBFR>=Switch Eff Date          ;CCR-930
"RTN","IBECEA3",64,0)
 I +IBSWINFO,(IBFR+1)>$P(IBSWINFO,"^",2) D  G FR             ;IB*2.0*312
"RTN","IBECEA3",65,0)
   .W !!,"The 'Bill From' date cannot be on or AFTER the PFSS Effective Date"
"RTN","IBECEA3",66,0)
   .W ": ",$$FMTE^XLFDT($P(IBSWINFO,"^",2))
"RTN","IBECEA3",67,0)
 ;
"RTN","IBECEA3",68,0)
 S IBGMT=$$ISGMTPT^IBAGMT(DFN,IBFR),IBGMTR=0 ;GMT Copayment Status
"RTN","IBECEA3",69,0)
 I IBGMT>0,IBXA>0,IBXA<4 W !,"The patient has GMT Copayment Status."
"RTN","IBECEA3",70,0)
 ; - check the MT billing clock
"RTN","IBECEA3",71,0)
 I IBXA'=8,IBXA'=9 D CLMSG^IBECEA33 G:IBY<0 ADDQ
"RTN","IBECEA3",72,0)
 ;Adjust Deductible for GMT patient
"RTN","IBECEA3",73,0)
 I IBGMT>0,IBXA>0,IBXA<4,$G(IBMED) S IBMED=$$REDUCE^IBAGMT(IBMED) W !,"Medicare Deductible reduced due to GMT Copayment Status ($",$J(IBMED,"",2),")."
"RTN","IBECEA3",74,0)
 ;
"RTN","IBECEA3",75,0)
 ; - check the LTC billing clock
"RTN","IBECEA3",76,0)
 I IBXA>7,IBXA<10 D  I IBY<0 W !!,"The patient has no LTC clock active for the date.",! G ADDQ
"RTN","IBECEA3",77,0)
 . N IBCLZ S IBCLZ=^IBA(351.81,IBCLDA,0)
"RTN","IBECEA3",78,0)
 . ;
"RTN","IBECEA3",79,0)
 . ; is this the clock and within the date range
"RTN","IBECEA3",80,0)
 . I IBFR'<$P(IBCLZ,"^",3),$$YR^IBAECU($P(IBCLZ,"^",3),IBFR) S IBY=-1 Q
"RTN","IBECEA3",81,0)
 . ;
"RTN","IBECEA3",82,0)
 . ; look for another clock that might fit the date
"RTN","IBECEA3",83,0)
 . I IBFR<$P(IBCLZ,"^",3) S IBCLDA=$O(^IBA(351.81,"AE",DFN,IBFR+1),-1) I 'IBCLDA!($$YR^IBAECU($P($G(^IBA(351.81,+IBCLDA,0)),"^",3),IBFR)) S IBY=-1
"RTN","IBECEA3",84,0)
 ;
"RTN","IBECEA3",85,0)
 ; - calculate the MT inpt copay charge
"RTN","IBECEA3",86,0)
 I IBXA=2 S IBDT=IBFR D COPAY^IBAUTL2 G ADDQ:IBY<0 S:IBGMT>0 IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG) I IBCHG+IBCLDOL<IBMED W *7,"   ($",IBCHG,"/day)" W:IBGMTR " GMT Rate"
"RTN","IBECEA3",87,0)
 ;
"RTN","IBECEA3",88,0)
 ; - find the correct clock from the 'bill from' date (ignore LTC)
"RTN","IBECEA3",89,0)
 I IBXA'=8,IBXA'=9,('IBCLDA!(IBCLDA&(IBFR<IBCLDT))) D NOCL^IBECEA33 G:IBY<0 ADDQ
"RTN","IBECEA3",90,0)
 ;
"RTN","IBECEA3",91,0)
 ; - perform outpatient edits
"RTN","IBECEA3",92,0)
 N IBSTOPDA
"RTN","IBECEA3",93,0)
 I IBXA=4 D  G ADDQ:IBY<0,PROC
"RTN","IBECEA3",94,0)
 .   ;  for visits prior to 12/6/01 or FEE
"RTN","IBECEA3",95,0)
 .   I IBFR<3011206!($G(IBAFEE)) D OPT^IBECEA33 Q
"RTN","IBECEA3",96,0)
 .   ;  for visits on or after 12/5/01
"RTN","IBECEA3",97,0)
 .   D OPT^IBEMTSCU
"RTN","IBECEA3",98,0)
 ;
"RTN","IBECEA3",99,0)
 ; - if LTC outpatient calculate the charge
"RTN","IBECEA3",100,0)
 I IBXA=8 D  G:IBY<0 ADDQ S (IBDT,IBTO,IBEVDT)=IBFR,IBDESC=$P(^IBE(350.1,IBATYP,0),"^",8),IBUNIT=1,IBEVDA="*" D COST^IBAUTL2,CALC^IBAECO,CTBB^IBECEAU3 G @$S(IBCHG:"PROC",1:"ADDQ")
"RTN","IBECEA3",101,0)
 . ;
"RTN","IBECEA3",102,0)
 . ; is this day already a free day
"RTN","IBECEA3",103,0)
 . I $D(^IBA(351.81,IBCLDA,1,"AC",IBFR)) W !!,"This day is already marked as a Free Day." S IBY=-1
"RTN","IBECEA3",104,0)
 . ;
"RTN","IBECEA3",105,0)
 . ; have we already billed for this day
"RTN","IBECEA3",106,0)
 . I $D(^IB("AFDT",DFN,-IBFR)) W !!,"This patient has already been billed for this date." S IBY=-1
"RTN","IBECEA3",107,0)
 ;
"RTN","IBECEA3",108,0)
 ; - find per diem charge and description
"RTN","IBECEA3",109,0)
 I IBXA=3 D  I 'IBCHG W !!,"Unable to determine the per diem rate.  Please check your rate table." G ADDQ
"RTN","IBECEA3",110,0)
 .N IBDT S IBDT=IBFR,IBGMTR=0 D COST^IBAUTL2
"RTN","IBECEA3",111,0)
 .I IBGMT>0 S IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG)
"RTN","IBECEA3",112,0)
 .S IBDESC="" X:$D(^IBE(350.1,IBATYP,20)) ^(20)
"RTN","IBECEA3",113,0)
 ;
"RTN","IBECEA3",114,0)
 ; - calculate charge for the inpatient copay
"RTN","IBECEA3",115,0)
 I IBXA=2,IBCHG+IBCLDOL'<IBMED S IBCHG=IBMED-IBCLDOL,IBUNIT=1,IBTO=IBFR D CTBB^IBECEAU3 G EV
"RTN","IBECEA3",116,0)
 ;
"RTN","IBECEA3",117,0)
TO ; - ask 'bill to' date
"RTN","IBECEA3",118,0)
 D TO^IBECEAU2(0) G:IBY<0 ADDQ
"RTN","IBECEA3",119,0)
 ; Do NOT PROCESS on VistA if IBTO>=Switch Eff Date         ;CCR-930
"RTN","IBECEA3",120,0)
 I +IBSWINFO,(IBTO+1)>$P(IBSWINFO,"^",2) D  G TO            ;IB*2.0*312
"RTN","IBECEA3",121,0)
  .W !!,"The 'Bill To' date cannot be on or AFTER the PFSS Effective Date"
"RTN","IBECEA3",122,0)
  .W ": ",$$FMTE^XLFDT($P(IBSWINFO,"^",2))
"RTN","IBECEA3",123,0)
 ;
"RTN","IBECEA3",124,0)
 I IBXA>0,IBXA<4,IBGMT'=$$ISGMTPT^IBAGMT(DFN,IBTO) W !!,"The patient's GMT Copayment status changed within the specified period!",! G ADDQ
"RTN","IBECEA3",125,0)
 ;
"RTN","IBECEA3",126,0)
 ; - calculate unit charge for LTC inpatient in IBCHG
"RTN","IBECEA3",127,0)
 I IBXA=9 S IBDT=IBFR,IBEVDA=$$EVF^IBECEA31(DFN,IBFR,IBTO,IBNH),IBEVDT=$E(IBFR,1,5)_"01" D:IBEVDA<1  G ADDQ:IBY<0 D COST^IBAUTL2 I $E(IBFR,1,5)'=$E(IBTO,1,5) W !!,"  LTC Copayment charges cannot go from one month to another." G ADDQ
"RTN","IBECEA3",128,0)
 . D NOEV^IBECEA31 I '$G(IBDG)!(IBY<0) S IBY=-1 Q
"RTN","IBECEA3",129,0)
 . ; - build the event record
"RTN","IBECEA3",130,0)
 . N IBNHLTC S IBNHLTC=1 D ADEV^IBECEA31
"RTN","IBECEA3",131,0)
 ;
"RTN","IBECEA3",132,0)
 ;
"RTN","IBECEA3",133,0)
 ; - calculate units and total charge
"RTN","IBECEA3",134,0)
 S IBUNIT=$$FMDIFF^XLFDT(IBTO,IBFR) S:IBXA'=3!(IBFR=IBTO) IBUNIT=IBUNIT+1
"RTN","IBECEA3",135,0)
 I IBXA=1 D:IBGMT>0  D FEPR^IBECEA32 G ADDQ:IBY<0,EV
"RTN","IBECEA3",136,0)
 . S IBGMTR=1
"RTN","IBECEA3",137,0)
 . W !,"The patient has GMT Copayment Status! GMT rate must be applied.",!
"RTN","IBECEA3",138,0)
 S IBCHG=IBCHG*IBUNIT S:IBXA=2 IBCHG=$S(IBCLDOL+IBCHG>IBMED:IBMED-IBCLDOL,1:IBCHG)
"RTN","IBECEA3",139,0)
 ;
"RTN","IBECEA3",140,0)
 ; adjust the LTC charge based on the calculated copay cap
"RTN","IBECEA3",141,0)
 I IBXA=9 D CALC^IBAECI G:IBY<1!('IBCHG) ADDQ S IBDESC="LTC INPATIENT COPAY"
"RTN","IBECEA3",142,0)
 ;
"RTN","IBECEA3",143,0)
 D CTBB^IBECEAU3 W:IBXA=3!(IBXA=9) "  (for ",IBUNIT," day",$E("s",IBUNIT>1),")" W:IBGMTR " GMT Rate"
"RTN","IBECEA3",144,0)
 ;
"RTN","IBECEA3",145,0)
EV ; - find event record, or select admission for linkage
"RTN","IBECEA3",146,0)
 I IBXA'=9 S IBEVDA=$$EVF^IBECEA31(DFN,IBFR,IBTO,IBNH)
"RTN","IBECEA3",147,0)
 I IBEVDA'>0 D NOEV^IBECEA31 G ADDQ:IBY<0,PROC
"RTN","IBECEA3",148,0)
 S IBSL=$P($G(^IB(+IBEVDA,0)),"^",4)
"RTN","IBECEA3",149,0)
 W !!,"Linked charge to ",$$TYP(),"admission on ",$$DAT1^IBOUTL($P(IBEVDA,"^",2)),"  ("
"RTN","IBECEA3",150,0)
 W $S($P(IBEVDA,"^",3)=9999999:"Still admitted)",1:"Discharged on "_$$DAT1^IBOUTL($P(IBEVDA,"^",3))_$S($P(IBEVDA,"^",3)>DT:" [pseudo])",1:")"))," ..."
"RTN","IBECEA3",151,0)
 S IBEVDA=+IBEVDA
"RTN","IBECEA3",152,0)
 I '$G(IBSIBC) D SPEC^IBECEA32(0,$O(^IBE(351.2,"AD",IBEVDA,0)))
"RTN","IBECEA3",153,0)
 ;
"RTN","IBECEA3",154,0)
 ;
"RTN","IBECEA3",155,0)
PROC ; - okay to proceed?
"RTN","IBECEA3",156,0)
 D PROC^IBECEAU4("add") G:IBY<0 ADDQ
"RTN","IBECEA3",157,0)
 ;
"RTN","IBECEA3",158,0)
 ; - build the event record first if necessary
"RTN","IBECEA3",159,0)
 I $G(IBDG),IBXA'=9 D @("ADEV^IBECEA3"_$S($G(IBFEEV):4,1:1)) G:IBY<0 ADDQ
"RTN","IBECEA3",160,0)
 ;
"RTN","IBECEA3",161,0)
 ; - disposition the special inpatient billing case, if necessary
"RTN","IBECEA3",162,0)
 I $G(IBSIBC) D CEA^IBAMTI1(IBSIBC,IBEVDA)
"RTN","IBECEA3",163,0)
 ;
"RTN","IBECEA3",164,0)
 ; - generate entry in file #354.71 and #350
"RTN","IBECEA3",165,0)
 I IBXA=5 W !!,"Building the new transaction...  " S IBAM=$$ADD^IBARXMN(DFN,"^^"_DT_"^^P^^"_IBUNIT_"^"_IBCHG_"^"_IBDESC_"^^"_IBCHG_"^0^"_IBSITE) G:IBAM<0 ADDQ
"RTN","IBECEA3",166,0)
 D ADD^IBECEAU3 G:IBY<0 ADDQ W "done."
"RTN","IBECEA3",167,0)
 ;
"RTN","IBECEA3",168,0)
 ; - pass the charge off to AR on-line
"RTN","IBECEA3",169,0)
 W !,"Passing the charge directly to Accounts Receivable... "
"RTN","IBECEA3",170,0)
 D PASSCH^IBECEA22 W:IBY>0 "done." G:IBY<0 ADDQ
"RTN","IBECEA3",171,0)
 ;
"RTN","IBECEA3",172,0)
 ; - review the special inpatient billing case
"RTN","IBECEA3",173,0)
 I $G(IBSIBC1) D CHK^IBAMTI1(IBSIBC1,IBEVDA)
"RTN","IBECEA3",174,0)
 ;
"RTN","IBECEA3",175,0)
 ; - handle updating of clock
"RTN","IBECEA3",176,0)
 I IBXA'=8,IBXA'=9 D CLUPD^IBECEA32
"RTN","IBECEA3",177,0)
 ;
"RTN","IBECEA3",178,0)
ADDQ ; - display error, rebuild list, and quit
"RTN","IBECEA3",179,0)
 D ERR^IBECEAU4:IBY<0,PAUSE^IBECEAU S VALMBCK="R"
"RTN","IBECEA3",180,0)
 I IBCOMMIT S IBBG=VALMBG W !,"Rebuilding list of charges..." D ARRAY^IBECEA0 S VALMBG=IBBG
"RTN","IBECEA3",181,0)
 K IBMED,IBCLDA,IBCLDT,IBCLDOL,IBCLDAY,IBATYP,IBDG,IBSEQNO,IBXA,IBNH,IBBS,IBLIM,IBFR,IBTO,IBRTED,IBSIBC,IBSIBC1,IBBG,IBFEEV,IBAM
"RTN","IBECEA3",182,0)
 K IBX,IBCHG,IBUNIT,IBDESC,IBDT,IBEVDT,IBEVDA,IBSL,IBNOS,IBN,IBTOTL,IBARTYP,IBIL,IBTRAN,IBAFY,IBCVA,IBCLSF,IBDD,IBND,VADM,VA,VAERR,IBADJMED
"RTN","IBECEA3",183,0)
ADDQ1 K IBEXSTAT,IBCOMMIT,IBCATC,IBCVAEL,IBLTCST
"RTN","IBECEA3",184,0)
 Q
"RTN","IBECEA3",185,0)
 ;
"RTN","IBECEA3",186,0)
 ;
"RTN","IBECEA3",187,0)
TYP() ; Return descriptive admission type.
"RTN","IBECEA3",188,0)
 N X S X=""
"RTN","IBECEA3",189,0)
 I IBNH'=2 G TYPQ
"RTN","IBECEA3",190,0)
 I $G(IBADJMED) S X=$S(IBADJMED=1:"C",1:"H")
"RTN","IBECEA3",191,0)
 E  S X=$S($P($G(^IBE(350.1,+IBATYP,0)),"^")["NHCU":"C",1:"H")
"RTN","IBECEA3",192,0)
 S X=$S(X="C":"CNH ",1:"Contract Hospital ")
"RTN","IBECEA3",193,0)
TYPQ Q X
"RTN","IBTRE2")
0^13^B32981505^B32496028
"RTN","IBTRE2",1,0)
IBTRE2 ;ALB/AAS - CLAIMS TRACKING - ACTIONS ;27-JUN-93
"RTN","IBTRE2",2,0)
 ;;2.0;INTEGRATED BILLING;**23,121,249,312**;21-MAR-94
"RTN","IBTRE2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRE2",4,0)
 ;
"RTN","IBTRE2",5,0)
% G EN^IBTRE
"RTN","IBTRE2",6,0)
 ;
"RTN","IBTRE2",7,0)
AT ; -- Add tracking entry
"RTN","IBTRE2",8,0)
 I '$$PFSSWARN^IBBSHDWN() S VALMBCK="R" Q                   ;IB*2.0*312
"RTN","IBTRE2",9,0)
 D FULL^VALM1
"RTN","IBTRE2",10,0)
 N X,Y,DIC,DA,DR,DD,DO,DIR,DIRUT,DTOUT,DUOUT,IBETYP,IBQUIT,IBTDT,VAIN,VAINDT,IBTRN,IBTDTE
"RTN","IBTRE2",11,0)
 ;
"RTN","IBTRE2",12,0)
TEST S IBQUIT=0
"RTN","IBTRE2",13,0)
 S DIC(0)="AEQMNZ",DIC="^IBE(356.6,",DIC("S")="I $P(^(0),U,3)<3",DIC("A")="Select Tracking Type: "
"RTN","IBTRE2",14,0)
 D ^DIC K DIC S IBETYP=+Y I +Y<0 G ATQ
"RTN","IBTRE2",15,0)
 W !
"RTN","IBTRE2",16,0)
 ;
"RTN","IBTRE2",17,0)
ADM I IBETYP=$O(^IBE(356.6,"AC",1,0)) D  I IBQUIT G ATQ
"RTN","IBTRE2",18,0)
 .N DIR
"RTN","IBTRE2",19,0)
 .S DIR("?")="     "
"RTN","IBTRE2",20,0)
 .S DIR("?",1)="    Enter any Date!"
"RTN","IBTRE2",21,0)
 .S DIR("?",2)="  "
"RTN","IBTRE2",22,0)
 .S DIR("?",3)="    If the patient was an inpatient on that date the system will use the"
"RTN","IBTRE2",23,0)
 .S DIR("?",4)="    correct admission date.  If you are tracking an admissions at another"
"RTN","IBTRE2",24,0)
 .S DIR("?",5)="    facility you may enter that date.  Enter '??' to get a list of the"
"RTN","IBTRE2",25,0)
 .S DIR("?",6)="    last 10 admissions for this patient."
"RTN","IBTRE2",26,0)
 .S DIR("??")="^D LISTA^IBTRE20"
"RTN","IBTRE2",27,0)
 .S DIR(0)="DO^::AEXTP",DIR("A")="Admission Date"
"RTN","IBTRE2",28,0)
 .D ^DIR K DIR S (IBTDT,VAINDT)=+Y I $P(VAINDT,".",2)="" S VAINDT=VAINDT+.24
"RTN","IBTRE2",29,0)
 .I $D(DIRUT)!($P(IBTDT,".")'?7N) S IBQUIT=1 Q
"RTN","IBTRE2",30,0)
 .; -- check for valid admission
"RTN","IBTRE2",31,0)
 .S VA200="" D INP^VADPT I VAIN(1)="" D  ;look for one day admission
"RTN","IBTRE2",32,0)
 ..S IBX=+$O(^(+$O(^DGPM("ATID1",DFN,9999999-IBTDT)),0)),IBX=+$G(^DGPM(IBX,0))
"RTN","IBTRE2",33,0)
 ..I $E(IBX,1,7)=IBTDT S VAINDT=IBX D INP^VADPT ;9999999.9999999
"RTN","IBTRE2",34,0)
 ..I VAIN(1) W !!,"WARNING: This appears to be a one day stay."
"RTN","IBTRE2",35,0)
 .I VAIN(1)="" D
"RTN","IBTRE2",36,0)
 ..W !!,*7,"WARNING: Patient does not appear to be an inpatient on this date!",!
"RTN","IBTRE2",37,0)
 ..I VAIN(7)="" S VAIN(7)=IBTDT,Y=IBTDT D D^DIQ S $P(VAIN(7),"^",2)=Y
"RTN","IBTRE2",38,0)
 .;
"RTN","IBTRE2",39,0)
 .S DIR("?")="No admission was found for this date, enter 'Yes' if you want to add this anyway, or 'No' if you do not wish to track this date."
"RTN","IBTRE2",40,0)
 .S DIR(0)="Y",DIR("A")="Okay to Add Claims Tracking entry for Admission Date "_$P(VAIN(7),"^",2),DIR("B")="NO"
"RTN","IBTRE2",41,0)
 .D ^DIR K DIR I $D(DIRUT)!('Y) S IBQUIT=1 Q
"RTN","IBTRE2",42,0)
 .I VAIN(1) D ADM^IBTUTL(VAIN(1))
"RTN","IBTRE2",43,0)
 .I 'VAIN(1) D OTH^IBTUTL(DFN,IBETYP,IBTDT)
"RTN","IBTRE2",44,0)
 .Q
"RTN","IBTRE2",45,0)
 ;
"RTN","IBTRE2",46,0)
OPT I IBETYP=$O(^IBE(356.6,"AC",2,0)) D  I IBQUIT G ATQ
"RTN","IBTRE2",47,0)
 .;
"RTN","IBTRE2",48,0)
 .N DIR,IBSD,IBARRAY
"RTN","IBTRE2",49,0)
 .;get all possible scheduling data for patient
"RTN","IBTRE2",50,0)
 .K ^TMP($J,"SDAMA301")
"RTN","IBTRE2",51,0)
 .S IBARRAY(4)=DFN,IBARRAY("SORT")="P",IBARRAY("FLDS")="1;2;3;10;12",IBSD=$$SDAPI^SDAMA301(.IBARRAY)
"RTN","IBTRE2",52,0)
 .;
"RTN","IBTRE2",53,0)
 .S DIR("?")="Time is Required."
"RTN","IBTRE2",54,0)
 .S DIR("?",1)="    Enter the Outpatient Visit Date."
"RTN","IBTRE2",55,0)
 .S DIR("?",2)="    If no scheduled visit is found you will be given a warning.  Enter"
"RTN","IBTRE2",56,0)
 .S DIR("?",3)="    '??' to get a list of scheduled visits between "_$$DAT1^IBOUTL(IBTBDT)_" and "_$$DAT1^IBOUTL(IBTEDT)_"."
"RTN","IBTRE2",57,0)
 .I '$D(IBTASS) S DIR("?",4)="    Use the change date range action to change listing of scheduled Visits."
"RTN","IBTRE2",58,0)
 .S DIR("??")="^D LISTO^IBTRE20"
"RTN","IBTRE2",59,0)
 .S DIR(0)="DO^::AEXTP",DIR("A")="Outpatient Visit Date"
"RTN","IBTRE2",60,0)
 .D ^DIR K DIR S IBTDT=Y
"RTN","IBTRE2",61,0)
 .I $D(DIRUT)!($P(IBTDT,".")'?7N) S IBQUIT=1 Q
"RTN","IBTRE2",62,0)
 .;
"RTN","IBTRE2",63,0)
 .; check scheduling and encounters file for entries
"RTN","IBTRE2",64,0)
 .S X=$D(^TMP($J,"SDAMA301",DFN,IBTDT))
"RTN","IBTRE2",65,0)
 .;
"RTN","IBTRE2",66,0)
 .I 'X,IBSD<0 W !!,*7,"WARNING: Unable to look up Visit information for this Patient" X "N IBX S IBX=0 F  S IBX=$O(^TMP($J,""SDAMA301"",IBX)) W !?5,IBX,?10,$G(^(IBX))"
"RTN","IBTRE2",67,0)
 .;
"RTN","IBTRE2",68,0)
 .I 'X,IBSD S Y=$O(^TMP($J,"SDAMA301",DFN,$P(IBTDT,"."))) I $P(IBTDT,".")=$P(Y,".") S IBTDT=Y,X=1
"RTN","IBTRE2",69,0)
 .;
"RTN","IBTRE2",70,0)
 .; if non say so
"RTN","IBTRE2",71,0)
 .I 'X,IBSD'=-1 W !!,*7,"WARNING: No Visit information for this Patient for this date.",!
"RTN","IBTRE2",72,0)
 .;
"RTN","IBTRE2",73,0)
 .; ask if okay to add entry.
"RTN","IBTRE2",74,0)
 .S Y=IBTDT D D^DIQ S IBTDTE=Y
"RTN","IBTRE2",75,0)
 .S DIR(0)="Y",DIR("A")="Okay to Add Claims Tracking entry for Visit Date "_IBTDTE,DIR("B")="NO"
"RTN","IBTRE2",76,0)
 .D ^DIR K DIR I $D(DIRUT)!('Y) S IBQUIT=1 Q
"RTN","IBTRE2",77,0)
 .D OPT^IBTUTL1(DFN,IBETYP,IBTDT,$P($G(^TMP($J,"SDAMA301",DFN,IBTDT)),"^",12))
"RTN","IBTRE2",78,0)
 .K ^TMP($J,"SDAMA301")
"RTN","IBTRE2",79,0)
 .Q
"RTN","IBTRE2",80,0)
 ;
"RTN","IBTRE2",81,0)
SCH I IBETYP=$O(^IBE(356.6,"AC",5,0)) D  I IBQUIT G ATQ
"RTN","IBTRE2",82,0)
 .N DIR
"RTN","IBTRE2",83,0)
 .S DIR("?")="   "
"RTN","IBTRE2",84,0)
 .S DIR("?",1)="    Enter date of the scheduled admission."
"RTN","IBTRE2",85,0)
 .S DIR("?",2)="    If you use the scheduled admission package to schedule admissions"
"RTN","IBTRE2",86,0)
 .S DIR("?",3)="    you may enter '??' to get a list of scheduled admissions between"
"RTN","IBTRE2",87,0)
 .S DIR("?",4)="    "_$$DAT1^IBOUTL(IBTBDT)_" and "_$$DAT1^IBOUTL(IBTEDT)_".  Use the change date range action"
"RTN","IBTRE2",88,0)
 .S DIR("?",5)="    to change listing of scheduled admissions."
"RTN","IBTRE2",89,0)
 .S DIR("?",5)="    This should be a future scheduled admission."
"RTN","IBTRE2",90,0)
 .S DIR(0)="DO^::AEXT",DIR("A")="Scheduled Admission Date"
"RTN","IBTRE2",91,0)
 .S DIR("??")="^D LISTS^IBTRE20"
"RTN","IBTRE2",92,0)
 .D ^DIR K DIR S IBTDT=+Y
"RTN","IBTRE2",93,0)
 .I $D(DIRUT)!($P(IBTDT,".")'?7N) S IBQUIT=1 Q
"RTN","IBTRE2",94,0)
 .; ask if okay to add entry.
"RTN","IBTRE2",95,0)
 .D FINDS^IBTRE20
"RTN","IBTRE2",96,0)
 .S Y=IBTDT D D^DIQ S IBTDTE=Y
"RTN","IBTRE2",97,0)
 .S DIR(0)="Y",DIR("A")="Okay to Add Claims Tracking entry for Scheduled Adm. Date "_IBTDTE,DIR("B")="NO"
"RTN","IBTRE2",98,0)
 .D ^DIR K DIR I $D(DIRUT)!('Y) S IBQUIT=1 Q
"RTN","IBTRE2",99,0)
 .I IBTDT\1'>DT S VAINDT=IBTDT\1+.24 D INP^VADPT I $G(VAIN(1)) D  Q
"RTN","IBTRE2",100,0)
 ..W !!,"Patient an inpatient on this date, using inpatient admission."
"RTN","IBTRE2",101,0)
 ..D ADM^IBTUTL(VAIN(1))
"RTN","IBTRE2",102,0)
 .D SCH^IBTUTL2(DFN,IBTDT)
"RTN","IBTRE2",103,0)
 .Q
"RTN","IBTRE2",104,0)
 I $G(IBQUIT) G ATQ
"RTN","IBTRE2",105,0)
 I $D(IBTASS) Q  ; leave prematurely if from assign reason
"RTN","IBTRE2",106,0)
 ;
"RTN","IBTRE2",107,0)
 I $G(IBTRN) N IBTATRK S IBTATRK=1 D QE1^IBTRE1
"RTN","IBTRE2",108,0)
 ;
"RTN","IBTRE2",109,0)
 D BLD^IBTRE
"RTN","IBTRE2",110,0)
ATQ Q:$D(IBTASS)
"RTN","IBTRE2",111,0)
 I $G(IBQUIT) W !,"Nothing Added",! D PAUSE^VALM1
"RTN","IBTRE2",112,0)
 S VALMBCK="R"
"RTN","IBTRE2",113,0)
 Q
"RTN","IBTRKR2")
0^5^B5693369^B4858987
"RTN","IBTRKR2",1,0)
IBTRKR2 ;ALB/AAS - ADD/TRACK SCHEDULED ADMISSION ;9-AUG-93
"RTN","IBTRKR2",2,0)
 ;;2.0;INTEGRATED BILLING;**43,62,214,312**;21-MAR-94
"RTN","IBTRKR2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRKR2",4,0)
 ;
"RTN","IBTRKR2",5,0)
% ;
"RTN","IBTRKR2",6,0)
EN ; -- add scheduled admissions to claims tracking file
"RTN","IBTRKR2",7,0)
 N I,J,X,Y,IBTRKR,IBI,IBJ,DFN,IBDATA
"RTN","IBTRKR2",8,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBTRKR2",9,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR2",10,0)
 G:'$P(IBTRKR,"^",2) ENQ ; inpatient tracking off
"RTN","IBTRKR2",11,0)
 S:'$G(IBTSBDT) IBTSBDT=$$FMADD^XLFDT(DT,-3)-.1
"RTN","IBTRKR2",12,0)
 S:'$G(IBTSEDT) IBTSEDT=$$FMADD^XLFDT(DT,7)+.9
"RTN","IBTRKR2",13,0)
 I IBTSBDT<+IBTRKR S IBTSBDT=+IBTRKR-.1 ; start date can't be before ct start date
"RTN","IBTRKR2",14,0)
 S IBI=IBTSBDT-.0001
"RTN","IBTRKR2",15,0)
 F  S IBI=$O(^DGS(41.1,"C",IBI)) Q:'IBI!(IBI>IBTSEDT)  S IBJ="" F  S IBJ=$O(^DGS(41.1,"C",IBI,IBJ)) Q:'IBJ  D
"RTN","IBTRKR2",16,0)
 .;
"RTN","IBTRKR2",17,0)
 .;Do NOT PROCESS on VistA if IBI/Sched DT>=Switch Eff Dt  ;CCR-930
"RTN","IBTRKR2",18,0)
 .I +IBSWINFO,(IBI+1)>$P(IBSWINFO,"^",2) Q                 ;IB*2.0*312
"RTN","IBTRKR2",19,0)
 .;
"RTN","IBTRKR2",20,0)
 .S IBDATA=$G(^DGS(41.1,IBJ,0))
"RTN","IBTRKR2",21,0)
 .S DFN=+IBDATA
"RTN","IBTRKR2",22,0)
 .Q:'DFN  ;  no patient
"RTN","IBTRKR2",23,0)
 .Q:$P(IBDATA,"^",17)  ; already admitted
"RTN","IBTRKR2",24,0)
 .;
"RTN","IBTRKR2",25,0)
 .S IBTRN=$O(^IBT(356,"ASCH",IBJ,0))
"RTN","IBTRKR2",26,0)
 .I $P(IBDATA,"^",13) D:IBTRN INACTIVE^IBTRKRU(IBTRN) Q  ; canceled
"RTN","IBTRKR2",27,0)
 .;
"RTN","IBTRKR2",28,0)
 .; - if not in ct add
"RTN","IBTRKR2",29,0)
 .I 'IBTRN D  Q
"RTN","IBTRKR2",30,0)
 ..I $P(IBTRKR,"^",2)=2 D SCH^IBTUTL2(DFN,IBI,IBJ) Q
"RTN","IBTRKR2",31,0)
 ..I $P(IBTRKR,"^",2)=1,$S('$$INSURED^IBCNS1(DFN,+IBI):0,1:$$PTCOV^IBCNSU3(DFN,+IBI,"INPATIENT")) D SCH^IBTUTL2(DFN,IBI,IBJ) Q
"RTN","IBTRKR2",32,0)
 ..D TRKR^IBCNRDV(DFN,IBI,IBJ,$P(IBDATA,"^",11))
"RTN","IBTRKR2",33,0)
 ..Q
"RTN","IBTRKR2",34,0)
 .;
"RTN","IBTRKR2",35,0)
 .; - if inactive re-activate
"RTN","IBTRKR2",36,0)
 .I '$P(^IBT(356,+IBTRN,0),"^",20) D
"RTN","IBTRKR2",37,0)
 ..N X,Y,I,J,DA,DR,DIE,DIC
"RTN","IBTRKR2",38,0)
 ..S DA=IBTRN,DR=".2////1",DIE="^IBT(356," D ^DIE
"RTN","IBTRKR2",39,0)
 .Q
"RTN","IBTRKR2",40,0)
 ;
"RTN","IBTRKR2",41,0)
ENQ K IBTSEDT,IBTSBDT
"RTN","IBTRKR2",42,0)
 ; add cleanup of ARDV
"RTN","IBTRKR2",43,0)
 S X=0 F  S X=$O(^IBT(356,"ARDV",X)) Q:X<1  S Y=0 F  S Y=$O(^IBT(356,"ARDV",X,Y)) Q:Y<1  I Y<DT K ^IBT(356,"ARDV",X,Y)
"RTN","IBTRKR2",44,0)
 Q
"RTN","IBTRKR2",45,0)
 ;
"RTN","IBTRKR2",46,0)
SCH(DGPMCA) ; -- is this admission movement a scheduled admission
"RTN","IBTRKR2",47,0)
 ; -- output scheduled admission pointer
"RTN","IBTRKR2",48,0)
 ;
"RTN","IBTRKR2",49,0)
 N IBTSA S IBTSA=0
"RTN","IBTRKR2",50,0)
 I '$G(DGPMCA) G SCHQ
"RTN","IBTRKR2",51,0)
 S IBTSA=+$O(^DGS(41.1,"AMVT",DGPMCA,0))
"RTN","IBTRKR2",52,0)
SCHQ Q IBTSA
"RTN","IBTRKR3")
0^6^B44426999^B39212949
"RTN","IBTRKR3",1,0)
IBTRKR3 ;ALB/AAS - CLAIMS TRACKING - ADD/TRACK RX FILLS ;13-AUG-93
"RTN","IBTRKR3",2,0)
 ;;2.0;INTEGRATED BILLING;**13,43,121,160,247,275,260,309,336,312**;21-MAR-94
"RTN","IBTRKR3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRKR3",4,0)
 ;
"RTN","IBTRKR3",5,0)
% ; -- entry point for nightly background job
"RTN","IBTRKR3",6,0)
 N IBTSBDT,IBTSEDT
"RTN","IBTRKR3",7,0)
 S IBTSBDT=$$FMADD^XLFDT(DT,-14)-.1
"RTN","IBTRKR3",8,0)
 S IBTSEDT=$$FMADD^XLFDT(DT,-7)+.9
"RTN","IBTRKR3",9,0)
 D EN1
"RTN","IBTRKR3",10,0)
 Q
"RTN","IBTRKR3",11,0)
 ;
"RTN","IBTRKR3",12,0)
EN ; -- entry point to ask date range
"RTN","IBTRKR3",13,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                     ;IB*2.0*312
"RTN","IBTRKR3",14,0)
 N IBBDT,IBEDT,IBTSBDT,IBTSEDT,IBTALK,IBMESS
"RTN","IBTRKR3",15,0)
 S IBTALK=1
"RTN","IBTRKR3",16,0)
 I '$P($G(^IBE(350.9,1,6)),"^",4) W !!,"I'm sorry, Tracking of Prescription Refills is currently turned off." G ENQ
"RTN","IBTRKR3",17,0)
 W !!!,"Select the Date Range of Rx Refills to Add to Claims Tracking.",!
"RTN","IBTRKR3",18,0)
 D DATE^IBOUTL
"RTN","IBTRKR3",19,0)
 I IBBDT<1!(IBEDT<1) G ENQ
"RTN","IBTRKR3",20,0)
 S IBTSBDT=IBBDT,IBTSEDT=IBEDT
"RTN","IBTRKR3",21,0)
 ;
"RTN","IBTRKR3",22,0)
 ; Do NOT PROCESS on VistA if Start or End>=Switch Eff Date  ;IB*2.0*312
"RTN","IBTRKR3",23,0)
 I +IBSWINFO,((IBTSBDT+1)>$P(IBSWINFO,"^",2))!((IBTSEDT+1)>$P(IBSWINFO,"^",2)) D  G EN
"RTN","IBTRKR3",24,0)
   .W !!,"The Begin OR End Date CANNOT be on or after"
"RTN","IBTRKR3",25,0)
   .W !,"the PFSS Effective Date: ",$$FMTE^XLFDT($P(IBSWINFO,"^",2))
"RTN","IBTRKR3",26,0)
 ;
"RTN","IBTRKR3",27,0)
 ; -- check selected dates
"RTN","IBTRKR3",28,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR3",29,0)
 ; start date can't be before parameters
"RTN","IBTRKR3",30,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR W !!,"Begin date is before Claims Tracking Start Date, changed to ",$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR3",31,0)
 ; -- end date into future
"RTN","IBTRKR3",32,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) W !!,"I'll automatically change the end date to 3 days prior to the date queued to run."
"RTN","IBTRKR3",33,0)
 ;
"RTN","IBTRKR3",34,0)
 W !!!,"I'm going to automatically queue this off and send you a"
"RTN","IBTRKR3",35,0)
 W !,"mail message when complete.",!
"RTN","IBTRKR3",36,0)
 S ZTIO="",ZTRTN="EN1^IBTRKR3",ZTSAVE("IB*")="",ZTDESC="IB - Add Rx Refills to Claims Tracking"
"RTN","IBTRKR3",37,0)
 D ^%ZTLOAD I $G(ZTSK) K ZTSK W !,"Request Queued"
"RTN","IBTRKR3",38,0)
ENQ K ZTSK,ZTIO,ZTSAVE,ZTDESC,ZTRTN
"RTN","IBTRKR3",39,0)
 D HOME^%ZIS
"RTN","IBTRKR3",40,0)
 Q
"RTN","IBTRKR3",41,0)
 ;
"RTN","IBTRKR3",42,0)
EN1 ; -- add rx refills to claims tracking file
"RTN","IBTRKR3",43,0)
 N I,J,X,Y,IBTRKR,IBDT,IBRXN,IBFILL,DFN,IBDATA,IBCNT,IBCNT1,IBCNT2
"RTN","IBTRKR3",44,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBTRKR3",45,0)
 ;
"RTN","IBTRKR3",46,0)
 ; -- check parameters
"RTN","IBTRKR3",47,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR3",48,0)
 G:'$P(IBTRKR,"^",4) EN1Q ; quit if rx tracking off
"RTN","IBTRKR3",49,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR ; start date can't be before parameters
"RTN","IBTRKR3",50,0)
 ;
"RTN","IBTRKR3",51,0)
 ; -- users can queue into future, make sure dates not after date run
"RTN","IBTRKR3",52,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) S IBMESS="(Selected end date of "_$$DAT1^IBOUTL(IBTSEDT)_" automatically changed to "_$$DAT1^IBOUTL($$FMADD^XLFDT(DT,-3))_".)",IBTSEDT=$$FMADD^XLFDT(DT,-3)
"RTN","IBTRKR3",53,0)
 ;
"RTN","IBTRKR3",54,0)
 S IBRXTYP=$O(^IBE(356.6,"AC",4,0)) ; event type pointer for rx billing
"RTN","IBTRKR3",55,0)
 ;
"RTN","IBTRKR3",56,0)
 ; -- cnt= total count, cnt1=count added nsc, cnt2=count of pending
"RTN","IBTRKR3",57,0)
 S (IBCNT,IBCNT1,IBCNT2)=0
"RTN","IBTRKR3",58,0)
 S IBDT=IBTSBDT-.0001
"RTN","IBTRKR3",59,0)
 F  S IBDT=$O(^PSRX("AD",IBDT)) Q:'IBDT!(IBDT>IBTSEDT)  D
"RTN","IBTRKR3",60,0)
   .I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q              ;IB*2.0*312
"RTN","IBTRKR3",61,0)
   .S IBRXN=""
"RTN","IBTRKR3",62,0)
   .F  S IBRXN=$O(^PSRX("AD",IBDT,IBRXN)) Q:'IBRXN  S IBFILL="" D
"RTN","IBTRKR3",63,0)
     ..F  S IBFILL=$O(^PSRX("AD",IBDT,IBRXN,IBFILL)) Q:IBFILL=""  D RXCHK
"RTN","IBTRKR3",64,0)
 ;
"RTN","IBTRKR3",65,0)
 I $G(IBTALK) D BULL^IBTRKR31
"RTN","IBTRKR3",66,0)
EN1Q I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBTRKR3",67,0)
 Q
"RTN","IBTRKR3",68,0)
 ;
"RTN","IBTRKR3",69,0)
RXCHK ; -- check and add rx
"RTN","IBTRKR3",70,0)
 S IBCNT=IBCNT+1
"RTN","IBTRKR3",71,0)
 ;I IBFILL<1 G RXCHKQ ;       original fill
"RTN","IBTRKR3",72,0)
 I IBDT>(DT+.24) G RXCHKQ ;  future fill
"RTN","IBTRKR3",73,0)
 I '$D(ZTQUEUED),($G(IBTALK)) W "."
"RTN","IBTRKR3",74,0)
 ;
"RTN","IBTRKR3",75,0)
 S IBRXDATA=$G(^PSRX(IBRXN,0)),IBRXSTAT=$P(IBRXDATA,"^",15)
"RTN","IBTRKR3",76,0)
 S DFN=$P(IBRXDATA,"^",2)
"RTN","IBTRKR3",77,0)
 ;I IBDT=$P($O(^DPT(DFN,"S",(IBDT-.00001))),".") G RXCHKQ ;scheduled appointment on same day as fill date
"RTN","IBTRKR3",78,0)
 ;I $$BABCSC^IBEFUNC(DFN,$P(IBDT,".",1)) G RXCHKQ ; is billable clinic stop in encounter file for data (allows telephone stops on same day, but not others) (P121 - RC, can now bill Rx if on same day as opt visit)
"RTN","IBTRKR3",79,0)
 ;
"RTN","IBTRKR3",80,0)
 ; -- not already in claims tracking
"RTN","IBTRKR3",81,0)
 I $O(^IBT(356,"ARXFL",IBRXN,IBFILL,0)) G RXCHKQ ; already in claims tracking
"RTN","IBTRKR3",82,0)
 ;
"RTN","IBTRKR3",83,0)
 ; -- see if tracking only insured and pt is insured
"RTN","IBTRKR3",84,0)
 I $P(IBTRKR,"^",4)=1,'$$INSURED^IBCNS1(DFN,IBDT) G RXCHKQ ; patient not insure
"RTN","IBTRKR3",85,0)
 ;
"RTN","IBTRKR3",86,0)
 ; -- check rx status (not deleted)
"RTN","IBTRKR3",87,0)
 I IBRXSTAT=13 G RXCHKQ
"RTN","IBTRKR3",88,0)
 ;
"RTN","IBTRKR3",89,0)
 ; -- Don't PROCESS IF there is already a PFSS ACCT REF# -- ;IB*2.0*312
"RTN","IBTRKR3",90,0)
 I 'IBFILL,+$P($G(^PSRX(IBRXN,"PFS")),"^") G RXCHKQ
"RTN","IBTRKR3",91,0)
 I +IBFILL,+$P($G(^PSRX(IBRXN,1,IBFILL,"PFS")),"^") G RXCHKQ
"RTN","IBTRKR3",92,0)
 ;
"RTN","IBTRKR3",93,0)
 ; -- original fill not released or returned to stock
"RTN","IBTRKR3",94,0)
 I 'IBFILL,'$P($G(^PSRX(IBRXN,2)),"^",13) G RXCHKQ
"RTN","IBTRKR3",95,0)
 I 'IBFILL,$P($G(^PSRX(IBRXN,2)),"^",15) G RXCHKQ
"RTN","IBTRKR3",96,0)
 ;
"RTN","IBTRKR3",97,0)
 ; -- refill not released or returned to stock
"RTN","IBTRKR3",98,0)
 I +IBFILL,'$P($G(^PSRX(IBRXN,1,IBFILL,0)),"^",18) G RXCHKQ
"RTN","IBTRKR3",99,0)
 I +IBFILL,$P($G(^PSRX(IBRXN,1,IBFILL,0)),"^",16) G RXCHKQ
"RTN","IBTRKR3",100,0)
 ;
"RTN","IBTRKR3",101,0)
 ; -- check drug (not investigational, supply, or over the counter drug
"RTN","IBTRKR3",102,0)
 S IBDRUG=$P(IBRXDATA,"^",6)
"RTN","IBTRKR3",103,0)
 D ZERO^IBRXUTL(IBDRUG)
"RTN","IBTRKR3",104,0)
 S IBDEA=$G(^TMP($J,"IBDRUG",+IBDRUG,3))
"RTN","IBTRKR3",105,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBTRKR3",106,0)
 I IBDEA["I"!(IBDEA["S")!(IBDEA["9") G RXCHKQ ; investigational drug, supply or otc
"RTN","IBTRKR3",107,0)
 ;
"RTN","IBTRKR3",108,0)
 ; -- see if insured for prescriptions
"RTN","IBTRKR3",109,0)
 I '$$PTCOV^IBCNSU3(DFN,IBDT,"PHARMACY",.IBANY) S IBRMARK=$S($G(IBANY):"SERVICE NOT COVERED",1:"NOT INSURED")
"RTN","IBTRKR3",110,0)
 ;
"RTN","IBTRKR3",111,0)
 ; -- check sc status and others
"RTN","IBTRKR3",112,0)
 ; -- new ICD node in PSO with CIDC, if it exists use this for determination
"RTN","IBTRKR3",113,0)
 I $G(IBRMARK)="",$D(^PSRX(IBRXN,"ICD")) D CL^SDCO21(DFN,IBDT,"",.IBARR) I $D(IBARR) D
"RTN","IBTRKR3",114,0)
 . S IBM=0 F  S IBM=$O(^PSRX(IBRXN,"ICD",IBM)) Q:'IBM!($G(IBRMARK)'="")  S IBZ=$G(^PSRX(IBRXN,"ICD",IBM,0)) F IBP=1:1:7 Q:$G(IBRMARK)'=""  I $D(IBARR(IBP)) D
"RTN","IBTRKR3",115,0)
 .. S IBRMARK=$S($P(IBZ,"^",IBP+1):$P($T(EXEMPT+IBP),";",3),$P(IBZ,"^",IBP+1)=0:"",1:"NEEDS SC DETERMINATION")
"RTN","IBTRKR3",116,0)
 ;
"RTN","IBTRKR3",117,0)
 ; -- no new ICD node in PSO, use old method of determining status
"RTN","IBTRKR3",118,0)
 I $G(IBRMARK)="",'$D(^PSRX(IBRXN,"ICD")) D
"RTN","IBTRKR3",119,0)
 . D ELIG^VADPT
"RTN","IBTRKR3",120,0)
 . ;if the patient is covered by insurance for pharmacy ($G(IBRMARK)="")
"RTN","IBTRKR3",121,0)
 . ;AND if no copay in #350
"RTN","IBTRKR3",122,0)
 . ;then we need to determine the non billable reason and set IBRMARK
"RTN","IBTRKR3",123,0)
 . ;
"RTN","IBTRKR3",124,0)
 . ;IF VAEL(3) -- if this is a veteran with SC(service connection) status
"RTN","IBTRKR3",125,0)
 . I VAEL(3),'$G(^PSRX(IBRXN,"IB")) D
"RTN","IBTRKR3",126,0)
 . . I $P(VAEL(3),"^",2)>49 S IBRMARK="NEEDS SC DETERMINATION"
"RTN","IBTRKR3",127,0)
 . . ;in case of POW and Unempl.vet we cannot decide if the 3rd party should be exempt
"RTN","IBTRKR3",128,0)
 . . N IBPOWUNV,IBAUTRET S IBAUTRET=$$AUTOINFO^DGMTCOU1(DFN),IBPOWUNV=$S($P(IBAUTRET,U,8):1,$P(IBAUTRET,U,9):1,1:0)
"RTN","IBTRKR3",129,0)
 . . I $P(VAEL(3),"^",2)<50 S IBRMARK=$S(IBPOWUNV:"NEEDS SC DETERMINATION",1:"SC TREATMENT")
"RTN","IBTRKR3",130,0)
 . . I $$RXST^IBARXEU(DFN,$P(IBRXDATA,U,13))>0 S IBRMARK="NEEDS SC DETERMINATION"
"RTN","IBTRKR3",131,0)
 . ;
"RTN","IBTRKR3",132,0)
 . ;IF +VAEL(3)=0 if the veteran doesn't have SC status, but
"RTN","IBTRKR3",133,0)
 . ;the veteran still may have CV status active
"RTN","IBTRKR3",134,0)
 . I $G(IBRMARK)="",+VAEL(3)=0,'$G(^PSRX(IBRXN,"IB")) D
"RTN","IBTRKR3",135,0)
 . . I $$CVEDT^IBACV(DFN,IBDT) S IBRMARK="NEEDS SC DETERMINATION" ;SC-because IB staff usually is using this reason to search for cases that need to be reviewed. COMBAT VETERAN reason will be used after review if this was a case
"RTN","IBTRKR3",136,0)
 ;
"RTN","IBTRKR3",137,0)
 ;
"RTN","IBTRKR3",138,0)
 ; -- ok to add to tracking module
"RTN","IBTRKR3",139,0)
 D REFILL^IBTUTL1(DFN,IBRXTYP,IBDT,IBRXN,IBFILL,$G(IBRMARK)) I '$D(ZTQUEUED),$G(IBTALK) W "+"
"RTN","IBTRKR3",140,0)
 I $G(IBRMARK)'="" S IBCNT2=IBCNT2+1
"RTN","IBTRKR3",141,0)
 I $G(IBRMARK)="" S IBCNT1=IBCNT1+1
"RTN","IBTRKR3",142,0)
 K IBANY,IBRMARK,VAEL,VA,IBDEA,IBDRUG,IBRXSTAT,IBRXDATA,DFN,X,Y
"RTN","IBTRKR3",143,0)
 K IBARR,IBM,IBZ,IBP
"RTN","IBTRKR3",144,0)
RXCHKQ Q
"RTN","IBTRKR3",145,0)
 ;
"RTN","IBTRKR3",146,0)
EXEMPT ; exemption reasons
"RTN","IBTRKR3",147,0)
 ;;AGENT ORANGE
"RTN","IBTRKR3",148,0)
 ;;IONIZING RADIATION
"RTN","IBTRKR3",149,0)
 ;;SC TREATMENT
"RTN","IBTRKR3",150,0)
 ;;ENV. CONTAM.
"RTN","IBTRKR3",151,0)
 ;;MILITARY SEXUAL TRAUMA
"RTN","IBTRKR3",152,0)
 ;;HEAD/NECK CANCER
"RTN","IBTRKR3",153,0)
 ;;COMBAT VETERAN
"RTN","IBTRKR3",154,0)
 ;;
"RTN","IBTRKR4")
0^7^B13921705^B12239188
"RTN","IBTRKR4",1,0)
IBTRKR4 ;ALB/AAS - CLAIMS TRACKING - ADD/TRACK OUTPATIENT ENCOUNTERS ; 13-AUG-93
"RTN","IBTRKR4",2,0)
 ;;2.0;INTEGRATED BILLING;**91,142,292,312**;21-MAR-94
"RTN","IBTRKR4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRKR4",4,0)
 ;
"RTN","IBTRKR4",5,0)
% ; -- entry point for nightly background job
"RTN","IBTRKR4",6,0)
 N IBTSBDT,IBTSEDT
"RTN","IBTRKR4",7,0)
 S IBTSBDT=$$FMADD^XLFDT(DT,$S($E(DT,6,7)=10:-730,1:-20))-.1
"RTN","IBTRKR4",8,0)
 S IBTSEDT=$$FMADD^XLFDT(DT,-2)-.9
"RTN","IBTRKR4",9,0)
 D EN1
"RTN","IBTRKR4",10,0)
 Q
"RTN","IBTRKR4",11,0)
 ;
"RTN","IBTRKR4",12,0)
EN ; -- entry point to ask date range
"RTN","IBTRKR4",13,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                     ;IB*2.0*312
"RTN","IBTRKR4",14,0)
 N IBBDT,IBEDT,IBTSBDT,IBTSEDT,IBTALK
"RTN","IBTRKR4",15,0)
 S IBTALK=1
"RTN","IBTRKR4",16,0)
 I '$P($G(^IBE(350.9,1,6)),"^",3) W !!,"I'm sorry, Tracking of Outpatient Encounters is currrently turned off." G ENQ
"RTN","IBTRKR4",17,0)
 W !!!,"Select the Date Range of Opt. Encounters to Add to Claims Tracking.",!
"RTN","IBTRKR4",18,0)
 D DATE^IBOUTL
"RTN","IBTRKR4",19,0)
 I IBBDT<1!(IBEDT<1) G ENQ
"RTN","IBTRKR4",20,0)
 S IBTSBDT=IBBDT,IBTSEDT=IBEDT
"RTN","IBTRKR4",21,0)
 ; Do NOT PROCESS on VistA if Start or End>=Switch Eff Dt    ;CCR-930
"RTN","IBTRKR4",22,0)
 ; -- check selected dates                                   ;IB*2.0*312
"RTN","IBTRKR4",23,0)
 I +IBSWINFO,((IBTSBDT+1)>$P(IBSWINFO,"^",2))!((IBTSEDT+1)>$P(IBSWINFO,"^",2)) D  G EN
"RTN","IBTRKR4",24,0)
   .W !!,"The Begin OR End Date CANNOT be on or after"
"RTN","IBTRKR4",25,0)
   .W !,"the PFSS Effective Date: ",$$FMTE^XLFDT($P(IBSWINFO,"^",2))
"RTN","IBTRKR4",26,0)
 ;
"RTN","IBTRKR4",27,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR4",28,0)
 ; start date can't be before parameters
"RTN","IBTRKR4",29,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR W !!,"Begin date is before Claims Tracking Start Date, changed to ",$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR4",30,0)
 ; -- end date into future
"RTN","IBTRKR4",31,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-1) W !!,"I'll automatically change the end date to 1 day prior to the date queued to run."
"RTN","IBTRKR4",32,0)
 W !!!,"I'm going to automatically queue this off and send you a"
"RTN","IBTRKR4",33,0)
 W !,"mail message when complete.",!
"RTN","IBTRKR4",34,0)
 S ZTIO="",ZTRTN="EN1^IBTRKR4",ZTSAVE("IB*")="",ZTDESC="IB - Add Opt Encounters to Claims Tracking"
"RTN","IBTRKR4",35,0)
 D ^%ZTLOAD I $G(ZTSK) K ZTSK W !,"Request Queued"
"RTN","IBTRKR4",36,0)
ENQ K ZTSK,ZTIO,ZTSAVE,ZTDESC,ZTRTN
"RTN","IBTRKR4",37,0)
 D HOME^%ZIS
"RTN","IBTRKR4",38,0)
 Q
"RTN","IBTRKR4",39,0)
 ;
"RTN","IBTRKR4",40,0)
EN1 ; -- add outpatient encounters to claims tracking file
"RTN","IBTRKR4",41,0)
 N I,J,X,Y,IBTRKR,IBDT,DFN,IBOETA,IBCNT,IBCNT1,IBCNT2
"RTN","IBTRKR4",42,0)
 ;
"RTN","IBTRKR4",43,0)
 ; -- check parameters
"RTN","IBTRKR4",44,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR4",45,0)
 G:'$P(IBTRKR,"^",3) EN1Q ; quit if opt tracking off
"RTN","IBTRKR4",46,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR ; start date can't be before parameters
"RTN","IBTRKR4",47,0)
 ;
"RTN","IBTRKR4",48,0)
 ; -- users can queue into future, make sure dates not after date run
"RTN","IBTRKR4",49,0)
 ;I IBTSEDT>DT S IBTSEDT=DT
"RTN","IBTRKR4",50,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-1) S IBMESS="(Selected end date of "_$$DAT1^IBOUTL(IBTSEDT)_" automatically changed to "_$$DAT1^IBOUTL($$FMADD^XLFDT(DT,-1))_".)",IBTSEDT=$$FMADD^XLFDT(DT,-1)
"RTN","IBTRKR4",51,0)
 ;
"RTN","IBTRKR4",52,0)
 S IBOETYP=$O(^IBE(356.6,"AC",2,0)) ;event type pointer for opt encounters
"RTN","IBTRKR4",53,0)
 ;
"RTN","IBTRKR4",54,0)
 ; -- cnt= total count, cnt1=count added nsc, cnt2=count of pending
"RTN","IBTRKR4",55,0)
 S (IBCNT,IBCNT1,IBCNT2)=0
"RTN","IBTRKR4",56,0)
 ;
"RTN","IBTRKR4",57,0)
 N IBVAL,IBCBK,IBFILTER
"RTN","IBTRKR4",58,0)
 S IBVAL("BDT")=IBTSBDT,IBVAL("EDT")=IBTSEDT+.9
"RTN","IBTRKR4",59,0)
 ; Only parent encounters, status is checked out, check out date exists,
"RTN","IBTRKR4",60,0)
 ;   not already in CT, not already an entry for the same encounter
"RTN","IBTRKR4",61,0)
 S IBFILTER=""
"RTN","IBTRKR4",62,0)
 ;S IBCBK="S IBCNT=IBCNT+1 I '$P(Y0,U,6),$P(Y0,U,12)=2,$P(Y0,U,7),'$O(^IBT(356,""AENC"",+$P(Y0,U,2),Y,0)),'$O(^IBT(356,""APTY"",+$P(Y0,U,2),IBOETYP,+Y0,0)) S IBDT=+Y0,IBOE=Y D OPCHK^IBTRKR41"
"RTN","IBTRKR4",63,0)
 S IBCBK="S IBCNT=IBCNT+1 I '$P(Y0,U,6),$P(Y0,U,12)=2,$P(Y0,U,7),'$O(^IBT(356,""AENC"",+$P(Y0,U,2),Y,0)),$S($D(^IBE(356.6,""ACODE"",2,IBOETYP)):1,1:'$O(^IBT(356,""APTY"",+$P(Y0,U,2),IBOETYP,+Y0,0))) S IBDT=+Y0,IBOE=Y D OPCHK^IBTRKR41"
"RTN","IBTRKR4",64,0)
 D SCAN^IBSDU("DATE/TIME",.IBVAL,IBFILTER,IBCBK,1) ;Scan,then close query
"RTN","IBTRKR4",65,0)
 ;
"RTN","IBTRKR4",66,0)
 I $G(IBTALK) D BULL^IBTRKR41
"RTN","IBTRKR4",67,0)
EN1Q I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBTRKR4",68,0)
 Q
"RTN","IBTRKR41")
0^14^B31657328^B29987868
"RTN","IBTRKR41",1,0)
IBTRKR41 ;ALB/AAS - CLAIMS TRACKING - ADD/TRACK OUTPATIENT ENCOUNTERS ;13-AUG-93
"RTN","IBTRKR41",2,0)
 ;;2.0;INTEGRATED BILLING;**43,55,91,132,174,247,260,315,292,312**;21-MAR-94
"RTN","IBTRKR41",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRKR41",4,0)
 ;
"RTN","IBTRKR41",5,0)
OPCHK ; -- check and add rx
"RTN","IBTRKR41",6,0)
 N Y,Y0
"RTN","IBTRKR41",7,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBTRKR41",8,0)
 ; IBDT is set from IBTRKR4
"RTN","IBTRKR41",9,0)
 ; Do NOT PROCESS on VistA if IBDT>=Switch Eff Date        ;CCR-930
"RTN","IBTRKR41",10,0)
 I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q                 ;IB*2.0*312
"RTN","IBTRKR41",11,0)
 ;
"RTN","IBTRKR41",12,0)
 K IBRMARK
"RTN","IBTRKR41",13,0)
 I '$D(ZTQUEUED),($G(IBTALK)) W "."
"RTN","IBTRKR41",14,0)
 ;
"RTN","IBTRKR41",15,0)
 S IBOEDATA=$$SCE^IBSDU(IBOE),IBOESTAT=$P(IBOEDATA,"^",15)
"RTN","IBTRKR41",16,0)
 S DFN=$P(IBOEDATA,"^",2)
"RTN","IBTRKR41",17,0)
 I 'DFN G OPCHKQ
"RTN","IBTRKR41",18,0)
 I $P(IBOEDATA,"^",5) S IBVSIT=$P(IBOEDATA,"^",5) I '$$BDSRC^IBEFUNC3(IBVSIT) G OPCHKQ ;non-billable data sources
"RTN","IBTRKR41",19,0)
 ; -- do not allow date/time duplicate claims before Jan. 1, 2006
"RTN","IBTRKR41",20,0)
 I $O(^IBT(356,"APTY",DFN,IBOETYP,IBDT,0)),IBDT<3060101 G OPCHKQ
"RTN","IBTRKR41",21,0)
 ;
"RTN","IBTRKR41",22,0)
 ; -- see if tracking only insured and pt is insured/insured for outpt visits
"RTN","IBTRKR41",23,0)
 I $P(IBTRKR,"^",3)=1,'$$INSURED^IBCNS1(DFN,IBDT) G OPCHKQ ; patient not insured
"RTN","IBTRKR41",24,0)
 ;
"RTN","IBTRKR41",25,0)
 ; -- see if outpatient services are covered
"RTN","IBTRKR41",26,0)
 I '$$PTCOV^IBCNSU3(DFN,IBDT,"OUTPATIENT",.IBANY) S IBRMARK=$S($G(IBANY):"SERVICE NOT COVERED",1:"NOT INSURED")
"RTN","IBTRKR41",27,0)
 ;
"RTN","IBTRKR41",28,0)
 ; -- see if appointment type is billable
"RTN","IBTRKR41",29,0)
 I '$$RPT^IBEFUNC($P(IBOEDATA,"^",10),+IBOEDATA) S IBRMARK="NON-BILLABLE APPOINTMENT TYPE"
"RTN","IBTRKR41",30,0)
 ;
"RTN","IBTRKR41",31,0)
 ; -- check sc status, special conditions etc.
"RTN","IBTRKR41",32,0)
 I $G(IBRMARK)="" S IBRMARK=$$CL(IBOEDATA)
"RTN","IBTRKR41",33,0)
 ;
"RTN","IBTRKR41",34,0)
 ; -- check for non-billable stops or clinic
"RTN","IBTRKR41",35,0)
 S X=$P(IBOEDATA,"^",4) I X,$$NBCT^IBEFUNC(X,+IBOEDATA) S IBRMARK="NON-BILLABLE CLINIC"
"RTN","IBTRKR41",36,0)
 S X=$P(IBOEDATA,"^",3) I X,$$NBST^IBEFUNC(X,+IBOEDATA) S IBRMARK="NON-BILLABLE STOP CODE"
"RTN","IBTRKR41",37,0)
 ;
"RTN","IBTRKR41",38,0)
 ; -- ok to add to tracking module
"RTN","IBTRKR41",39,0)
 D OPT^IBTUTL1(DFN,IBOETYP,IBDT,IBOE,IBRMARK,$G(IBVSIT)) I '$D(ZTQUEUED),$G(IBTALK) W "+"
"RTN","IBTRKR41",40,0)
 I IBRMARK'="" S IBCNT2=IBCNT2+1
"RTN","IBTRKR41",41,0)
 I IBRMARK="" S IBCNT1=IBCNT1+1
"RTN","IBTRKR41",42,0)
OPCHKQ K IBANY,IBRMARK,VAEL,VA,IBOEDATA,IBVSIT,DFN,X,Y
"RTN","IBTRKR41",43,0)
 Q
"RTN","IBTRKR41",44,0)
 ;
"RTN","IBTRKR41",45,0)
BULL ; -- send bulletin
"RTN","IBTRKR41",46,0)
 ;
"RTN","IBTRKR41",47,0)
 S XMSUB="Outpatient Encounters added to Claims Tracking Complete"
"RTN","IBTRKR41",48,0)
 S IBT(1)="The process to automatically add Opt Encounters has successfully completed."
"RTN","IBTRKR41",49,0)
 S IBT(1.1)=""
"RTN","IBTRKR41",50,0)
 S IBT(2)="              Start Date: "_$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR41",51,0)
 S IBT(3)="                End Date: "_$$DAT1^IBOUTL(IBTSEDT)
"RTN","IBTRKR41",52,0)
 I $D(IBMESS) S IBT(3.1)=IBMESS
"RTN","IBTRKR41",53,0)
 S IBT(4)=""
"RTN","IBTRKR41",54,0)
 S IBT(5)="            Total Encounters Checked: "_$G(IBCNT)
"RTN","IBTRKR41",55,0)
 S IBT(6)="              Total Encounters Added: "_$G(IBCNT1)
"RTN","IBTRKR41",56,0)
 S IBT(7)=" Total Non-billable Encounters Added: "_$G(IBCNT2)
"RTN","IBTRKR41",57,0)
 S IBT(8)=""
"RTN","IBTRKR41",58,0)
 S IBT(9)="*The SC, Agent Orange, Environmental Contaminate, Ionizing Radiation,"
"RTN","IBTRKR41",59,0)
 S IBT(10)="Military Sexual Trauma,Head Neck Cancer and Combat Veteran status"
"RTN","IBTRKR41",60,0)
 S IBT(11)="visits have been added for insured patients but automatically"
"RTN","IBTRKR41",61,0)
 S IBT(12)="indicated as not billable."
"RTN","IBTRKR41",62,0)
 D SEND^IBTRKR31
"RTN","IBTRKR41",63,0)
BULLQ Q
"RTN","IBTRKR41",64,0)
 ;
"RTN","IBTRKR41",65,0)
CL(IBOEDATA,IBR) ; check out classification questions for encounter
"RTN","IBTRKR41",66,0)
 ; this new check will look at the V POV level then to the Visit level
"RTN","IBTRKR41",67,0)
 ; as necessary to determine if it relates or not.  This will indicate
"RTN","IBTRKR41",68,0)
 ; if the WHOLE visit is not billable, otherwise it will say it is
"RTN","IBTRKR41",69,0)
 ; (even if just part is billable).
"RTN","IBTRKR41",70,0)
 ; call with the zero node of 409.68 in IBOEDATA
"RTN","IBTRKR41",71,0)
 ; assumes DFN and IBDT defined
"RTN","IBTRKR41",72,0)
 ; pass in IBR by ref to get values back
"RTN","IBTRKR41",73,0)
 ;
"RTN","IBTRKR41",74,0)
 N IBRMARK,IBPCEX,IBCPT,IBARR,IBP,IBDX,IBVRNB,IBENCL
"RTN","IBTRKR41",75,0)
 S IBRMARK="",IBPCEX=$P(IBOEDATA,"^",5)
"RTN","IBTRKR41",76,0)
 ;
"RTN","IBTRKR41",77,0)
 ; look up classification info needed (if any)
"RTN","IBTRKR41",78,0)
 D CL^SDCO21(DFN,IBDT,"",.IBARR) I '$D(IBARR) G CLQ
"RTN","IBTRKR41",79,0)
 ;
"RTN","IBTRKR41",80,0)
 ; if no PCE event use old approach
"RTN","IBTRKR41",81,0)
 I 'IBPCEX D:$G(IBOE)  G CLQ
"RTN","IBTRKR41",82,0)
 . S IBENCL=$$ENCL^IBAMTS2(IBOE) I IBENCL["1" D  ; return 1 in string if true "ao^ir^sc^ec^mst^hnc^cv"
"RTN","IBTRKR41",83,0)
 . I $P(IBENCL,"^",3) S IBRMARK="SC TREATMENT" Q
"RTN","IBTRKR41",84,0)
 . I $P(IBENCL,"^",1) S IBRMARK="AGENT ORANGE" Q
"RTN","IBTRKR41",85,0)
 . I $P(IBENCL,"^",2) S IBRMARK="IONIZING RADIATION" Q
"RTN","IBTRKR41",86,0)
 . I $P(IBENCL,"^",4) S IBRMARK="ENV. CONTAM." Q
"RTN","IBTRKR41",87,0)
 . I $P(IBENCL,"^",5) S IBRMARK="MILITARY SEXUAL TRAUMA" Q
"RTN","IBTRKR41",88,0)
 . I $P(IBENCL,"^",6) S IBRMARK="HEAD/NECK CANCER" Q
"RTN","IBTRKR41",89,0)
 . I $P(IBENCL,"^",7) S IBRMARK="COMBAT VETERAN" Q
"RTN","IBTRKR41",90,0)
 ;
"RTN","IBTRKR41",91,0)
 ; look up PCE info
"RTN","IBTRKR41",92,0)
 D ENCEVENT^PXKENC(IBPCEX)
"RTN","IBTRKR41",93,0)
 ;
"RTN","IBTRKR41",94,0)
 S IBVRNB=$$RNB($G(^TMP("PXKENC",$J,IBPCEX,"VST",IBPCEX,800)),.IBARR)
"RTN","IBTRKR41",95,0)
 ;
"RTN","IBTRKR41",96,0)
 ; find dx rnb's
"RTN","IBTRKR41",97,0)
 S IBDX=0 F  S IBDX=$O(^TMP("PXKENC",$J,IBPCEX,"POV",IBDX)) Q:'IBDX  S IBDX(+$G(^TMP("PXKENC",$J,IBPCEX,"POV",IBDX,0)))=$$RNB($G(^TMP("PXKENC",$J,IBPCEX,"POV",IBDX,800)),.IBARR)
"RTN","IBTRKR41",98,0)
 ;
"RTN","IBTRKR41",99,0)
 ; look for v cpt's with IBDX
"RTN","IBTRKR41",100,0)
 S IBCPT=0 F  S IBCPT=$O(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT)) Q:'IBCPT  F IBP=5,9,10,11 Q:'$D(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0))  D
"RTN","IBTRKR41",101,0)
 . ;
"RTN","IBTRKR41",102,0)
 . ; dx exists in v cpt but not v pov use visit level determination
"RTN","IBTRKR41",103,0)
 . I $P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP),'$D(IBDX($P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP))) D:IBVRNB REL(IBVRNB) Q
"RTN","IBTRKR41",104,0)
 . ;
"RTN","IBTRKR41",105,0)
 . ; use dx determination (where dx exists on v cpt)
"RTN","IBTRKR41",106,0)
 . I $P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP) D:$G(IBDX($P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP))) REL($G(IBDX($P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP)))) Q
"RTN","IBTRKR41",107,0)
 ;
"RTN","IBTRKR41",108,0)
 ; check for no assoc dx and apply visit level determination
"RTN","IBTRKR41",109,0)
 S IBCPT=0 F  S IBCPT=$O(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT)) Q:'IBCPT  D
"RTN","IBTRKR41",110,0)
 . S IBDX=0 F IBP=5,9,10,11 Q:IBDX  I +$P($G(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0)),"^",IBP) S IBDX=1
"RTN","IBTRKR41",111,0)
 . I 'IBDX,IBVRNB D REL(IBVRNB)
"RTN","IBTRKR41",112,0)
 ;
"RTN","IBTRKR41",113,0)
 ; if some procedures left, then we need to bill, set return array
"RTN","IBTRKR41",114,0)
 I $D(^TMP("PXKENC",$J,IBPCEX,"CPT")) S IBRMARK="" M IBR=^TMP("PXKENC",$J,IBPCEX)
"RTN","IBTRKR41",115,0)
 ;
"RTN","IBTRKR41",116,0)
CLQ K ^TMP("PXKENC",$J)
"RTN","IBTRKR41",117,0)
 Q IBRMARK
"RTN","IBTRKR41",118,0)
 ;
"RTN","IBTRKR41",119,0)
RNB(IBDATA,IBARR) ; find rnb's
"RTN","IBTRKR41",120,0)
 ; pass in PCE 800 data (visit or v pov) to find any reasons not billalbe
"RTN","IBTRKR41",121,0)
 ; IBARR = classifications that could apply to patient
"RTN","IBTRKR41",122,0)
 ; the RNB number returned is from the IBARR number (SDCO21 array)
"RTN","IBTRKR41",123,0)
 N IBX,IBR S IBR=""
"RTN","IBTRKR41",124,0)
 S IBX=0 F  S IBX=$O(IBARR(IBX)) Q:'IBX!(IBR)  I $P(IBDATA,"^",$P($T(CLDATA+(IBX+1)),"^",2)) S IBR=IBX
"RTN","IBTRKR41",125,0)
 Q IBR
"RTN","IBTRKR41",126,0)
 ;
"RTN","IBTRKR41",127,0)
REL(IBRNB) ; kills of tmp if related and set IBRMARK
"RTN","IBTRKR41",128,0)
 K ^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT)
"RTN","IBTRKR41",129,0)
 S IBRMARK=$P($T(CLDATA+(IBRNB+1)),"^",3)
"RTN","IBTRKR41",130,0)
 Q
"RTN","IBTRKR41",131,0)
 ;
"RTN","IBTRKR41",132,0)
CLDATA ; classification data
"RTN","IBTRKR41",133,0)
 ; format is:  SCDO21 array^vpov/vcpt/visit 800 piece^reason not billable
"RTN","IBTRKR41",134,0)
 ;;1^2^AGENT ORANGE
"RTN","IBTRKR41",135,0)
 ;;2^3^IONIZING RADIATION
"RTN","IBTRKR41",136,0)
 ;;3^1^SC TREATMENT
"RTN","IBTRKR41",137,0)
 ;;4^4^ENV. CONTAM.
"RTN","IBTRKR41",138,0)
 ;;5^5^MILITARY SEXUAL TRAUMA
"RTN","IBTRKR41",139,0)
 ;;6^6^HEAD/NECK CANCER
"RTN","IBTRKR41",140,0)
 ;;7^7^COMBAT VETERAN
"RTN","IBTRKR41",141,0)
 ;
"RTN","IBTRKR5")
0^8^B30688575^B25744902
"RTN","IBTRKR5",1,0)
IBTRKR5 ;ALB/AAS - CLAIMS TRACKING - ADD/TRACK PROSTHETICS ;13-JAN-94
"RTN","IBTRKR5",2,0)
 ;;2.0;INTEGRATED BILLING;**13,260,312**;21-MAR-94
"RTN","IBTRKR5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRKR5",4,0)
 ;
"RTN","IBTRKR5",5,0)
% ; -- entry point for nightly background job
"RTN","IBTRKR5",6,0)
 N IBTSBDT,IBTSEDT
"RTN","IBTRKR5",7,0)
 S IBTSBDT=$$FMADD^XLFDT(DT,-30)-.1
"RTN","IBTRKR5",8,0)
 S IBTSEDT=$$FMADD^XLFDT(DT,-3)+.9
"RTN","IBTRKR5",9,0)
 D EN1
"RTN","IBTRKR5",10,0)
 Q
"RTN","IBTRKR5",11,0)
 ;
"RTN","IBTRKR5",12,0)
EN ; -- entry point to ask date range
"RTN","IBTRKR5",13,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBTRKR5",14,0)
 N IBBDT,IBEDT,IBTSBDT,IBTSEDT,IBTALK
"RTN","IBTRKR5",15,0)
 S IBTALK=1
"RTN","IBTRKR5",16,0)
 I '$P($G(^IBE(350.9,1,6)),"^",4) W !!,"I'm sorry, Tracking of Prosthetics is currrently turned off." G ENQ
"RTN","IBTRKR5",17,0)
 W !!!,"Select the Date Range of Prosthetics to Add to Claims Tracking.",!
"RTN","IBTRKR5",18,0)
 D DATE^IBOUTL
"RTN","IBTRKR5",19,0)
 I IBBDT<1!(IBEDT<1) G ENQ
"RTN","IBTRKR5",20,0)
 S IBTSBDT=IBBDT,IBTSEDT=IBEDT
"RTN","IBTRKR5",21,0)
 ;
"RTN","IBTRKR5",22,0)
 ; -- check selected dates                                 ;IB*2.0*312
"RTN","IBTRKR5",23,0)
 ; Do NOT PROCESS on VistA if Start or End>=Switch Eff Dt  ;CCR-930
"RTN","IBTRKR5",24,0)
 I ((IBTSBDT+1)>$P(IBSWINFO,"^",2))!((IBTSEDT+1)>$P(IBSWINFO,"^",2)) D  G EN
"RTN","IBTRKR5",25,0)
  .W !!,"The Begin OR End Date CANNOT be on or after the PFSS Effective date"
"RTN","IBTRKR5",26,0)
  .W ": ",$$FMTE^XLFDT($P(IBSWINFO,"^",2))
"RTN","IBTRKR5",27,0)
 ;
"RTN","IBTRKR5",28,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR5",29,0)
 ; start date can't be before parameters
"RTN","IBTRKR5",30,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR W !!,"Begin date is before Claims Tracking Start Date, changed to ",$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR5",31,0)
 ; -- end date into future
"RTN","IBTRKR5",32,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) W !!,"I'll automatically change the end date to 3 days prior to the date queued to run."
"RTN","IBTRKR5",33,0)
 ;
"RTN","IBTRKR5",34,0)
 W !!!,"I'm going to automatically queue this off and send you a"
"RTN","IBTRKR5",35,0)
 W !,"mail message when complete.",!
"RTN","IBTRKR5",36,0)
 S ZTIO="",ZTRTN="EN1^IBTRKR5",ZTSAVE("IB*")="",ZTDESC="IB - Add Prosthetics to Claims Tracking"
"RTN","IBTRKR5",37,0)
 D ^%ZTLOAD I $G(ZTSK) K ZTSK W !,"Request Queued"
"RTN","IBTRKR5",38,0)
ENQ K ZTSK,ZTIO,ZTSAVE,ZTDESC,ZTRTN
"RTN","IBTRKR5",39,0)
 D HOME^%ZIS
"RTN","IBTRKR5",40,0)
 Q
"RTN","IBTRKR5",41,0)
 ;
"RTN","IBTRKR5",42,0)
EN1 ; -- add prostethics to claims tracking file
"RTN","IBTRKR5",43,0)
 N I,J,X,Y,IBTRKR,IBDT,DFN,IBDATA,IBCNT,IBCNT1,IBCNT2,IBDTS
"RTN","IBTRKR5",44,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBTRKR5",45,0)
 ;
"RTN","IBTRKR5",46,0)
 ; -- check parameters
"RTN","IBTRKR5",47,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR5",48,0)
 G:'$P(IBTRKR,"^",5) EN1Q ; quit if prothetics tracking off
"RTN","IBTRKR5",49,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR ; start date can't be before parameters
"RTN","IBTRKR5",50,0)
 ;
"RTN","IBTRKR5",51,0)
 ; -- users can queue into future, make sure dates not after date run
"RTN","IBTRKR5",52,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) S IBMESS="(Selected end date of "_$$DAT1^IBOUTL(IBTSEDT)_" automatically changed to "_$$DAT1^IBOUTL($$FMADD^XLFDT(DT,-3))_".)",IBTSEDT=$$FMADD^XLFDT(DT,-3)
"RTN","IBTRKR5",53,0)
 ;
"RTN","IBTRKR5",54,0)
 ;S IBPRTYP=$O(^IBE(356.6,"AC",3,0)) ; this is the event type pointer for prosthetics
"RTN","IBTRKR5",55,0)
 ;
"RTN","IBTRKR5",56,0)
 ; -- cnt= total count, cnt1=count added nsc, cnt2=count of pending
"RTN","IBTRKR5",57,0)
 S (IBCNT,IBCNT1,IBCNT2)=0
"RTN","IBTRKR5",58,0)
 S (IBDTS,IBDT)=IBTSBDT-.0001
"RTN","IBTRKR5",59,0)
 ;
"RTN","IBTRKR5",60,0)
 ; loop twice, once for shipmnet date (new search), and once for
"RTN","IBTRKR5",61,0)
 ; delivery date (old search) for backward compatibility.
"RTN","IBTRKR5",62,0)
 F  S IBDT=$O(^RMPR(660,"AF",IBDT)) Q:'IBDT!(IBDT>IBTSEDT)  D
"RTN","IBTRKR5",63,0)
    .; Do NOT PROCESS on VistA if IBDT>=Switch Eff Date    ;CCR-930
"RTN","IBTRKR5",64,0)
    .I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q             ;IB*2.0*312
"RTN","IBTRKR5",65,0)
    .S IBDA=0 F  S IBDA=$O(^RMPR(660,"AF",IBDT,IBDA)) Q:'IBDA  D PRCHK
"RTN","IBTRKR5",66,0)
 ;
"RTN","IBTRKR5",67,0)
 ; reset date and do old check
"RTN","IBTRKR5",68,0)
 S IBDT=IBDTS
"RTN","IBTRKR5",69,0)
 F  S IBDT=$O(^RMPR(660,"CT",IBDT)) Q:'IBDT!(IBDT>IBTSEDT)  D
"RTN","IBTRKR5",70,0)
    .; Do NOT PROCESS on VistA if IBDT>=Switch Eff Date    ;CCR-930
"RTN","IBTRKR5",71,0)
    .I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q             ;IB*2.0*312
"RTN","IBTRKR5",72,0)
    .S IBDA="" F  S IBDA=$O(^RMPR(660,"CT",IBDT,IBDA)) Q:'IBDA  D PRCHK
"RTN","IBTRKR5",73,0)
 ;
"RTN","IBTRKR5",74,0)
 I $G(IBTALK) D BULL ;^IBTRKR51
"RTN","IBTRKR5",75,0)
EN1Q I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBTRKR5",76,0)
 Q
"RTN","IBTRKR5",77,0)
 ;
"RTN","IBTRKR5",78,0)
PRCHK ; -- check and add item
"RTN","IBTRKR5",79,0)
 N IBE,IBP,IBDX,IBRMARK,IBARR,IBT
"RTN","IBTRKR5",80,0)
 S IBCNT=IBCNT+1,IBRMARK=""
"RTN","IBTRKR5",81,0)
 I '$D(ZTQUEUED),($G(IBTALK)) W "."
"RTN","IBTRKR5",82,0)
 ;
"RTN","IBTRKR5",83,0)
 S IBDATA=$G(^RMPR(660,+IBDA,0)) Q:IBDATA=""
"RTN","IBTRKR5",84,0)
 S DFN=$P(IBDATA,"^",2)
"RTN","IBTRKR5",85,0)
 D CL^SDCO21(DFN,IBDT,"",.IBARR)
"RTN","IBTRKR5",86,0)
 ;
"RTN","IBTRKR5",87,0)
 ; -- checks copied from rmprbil v2.0 /feb 2, 1994
"RTN","IBTRKR5",88,0)
 Q:'$D(^RMPR(660,+IBDA,"AM"))
"RTN","IBTRKR5",89,0)
 Q:$P(^RMPR(660,+IBDA,0),U,9)=""!($P(^(0),U,12)="")!($P(^(0),U,6)="")!($P(^(0),U,14)="V")!($P(^(0),U,2)="")!($P(^(0),U,15)="*")
"RTN","IBTRKR5",90,0)
 ;Q:($P(^RMPR(660,+IBDA,"AM"),U,3)=2)!($P(^("AM"),U,3)=3)
"RTN","IBTRKR5",91,0)
 ;
"RTN","IBTRKR5",92,0)
 ;
"RTN","IBTRKR5",93,0)
 I $O(^IBT(356,"APRO",IBDA,0)) G PRCHKQ ; already in claims tracking
"RTN","IBTRKR5",94,0)
 ;
"RTN","IBTRKR5",95,0)
 ; -- see if tracking only insured and pt is insured
"RTN","IBTRKR5",96,0)
 I $P(IBTRKR,"^",5)=1,'$$INSURED^IBCNS1(DFN,IBDT) G PRCHKQ ; patient not insure
"RTN","IBTRKR5",97,0)
 ;
"RTN","IBTRKR5",98,0)
 ; -- if clasifications required, check exemptions
"RTN","IBTRKR5",99,0)
 I '$D(IBARR) G CLQ
"RTN","IBTRKR5",100,0)
 F IBP=1:1:4 S IBDX(IBP)=$G(^RMPR(660,+IBDA,"BA"_IBP))
"RTN","IBTRKR5",101,0)
 S IBE=0 F  S IBE=$O(IBARR(IBE)) Q:'IBE!($L($G(IBRMARK)))  F IBP=1:1:4 Q:$L($G(IBRMARK))  I IBDX(IBP) S IBRMARK=$S($P(IBDX(IBP),"^",IBE+1):$P($T(CLTXT+IBE),";",3),$P(IBDX(IBP),"^",IBE+1)=0:"",1:"NEEDS SC DETERMINATION")
"RTN","IBTRKR5",102,0)
 ;
"RTN","IBTRKR5",103,0)
 ;
"RTN","IBTRKR5",104,0)
CLQ ; -- ok to add to tracking module
"RTN","IBTRKR5",105,0)
 D PRO^IBTUTL1(DFN,IBDT,IBDA,$G(IBRMARK)) I '$D(ZTQUEUED),$G(IBTALK) W "+"
"RTN","IBTRKR5",106,0)
 I $G(IBRMARK)'="" S IBCNT2=IBCNT2+1
"RTN","IBTRKR5",107,0)
 I $G(IBRMARK)="" S IBCNT1=IBCNT1+1
"RTN","IBTRKR5",108,0)
 K VAEL,VA,IBDATA,DFN,X,Y
"RTN","IBTRKR5",109,0)
PRCHKQ Q
"RTN","IBTRKR5",110,0)
 ;
"RTN","IBTRKR5",111,0)
BULL ; -- send bulletin
"RTN","IBTRKR5",112,0)
 ;
"RTN","IBTRKR5",113,0)
 S XMSUB="Prothetic Items added to Claims Tracking Complete"
"RTN","IBTRKR5",114,0)
 S IBT(1)="The process to automatically add Prosthetic Items has successfully completed."
"RTN","IBTRKR5",115,0)
 S IBT(1.1)=""
"RTN","IBTRKR5",116,0)
 S IBT(2)="                      Start Date: "_$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR5",117,0)
 S IBT(3)="                        End Date: "_$$DAT1^IBOUTL(IBTSEDT)
"RTN","IBTRKR5",118,0)
 I $D(IBMESS) S IBT(3.1)=IBMESS
"RTN","IBTRKR5",119,0)
 S IBT(4)=""
"RTN","IBTRKR5",120,0)
 S IBT(5)=" Total Prosthetics Items checked: "_$G(IBCNT)
"RTN","IBTRKR5",121,0)
 S IBT(6)="Total NSC Prosthetic Items Added: "_$G(IBCNT1)
"RTN","IBTRKR5",122,0)
 S IBT(7)=" Total SC Prosthetic Items Added: "_$G(IBCNT2)
"RTN","IBTRKR5",123,0)
 S IBT(8)=""
"RTN","IBTRKR5",124,0)
 S IBT(9)="*The items added as SC require determination and editing to be billed"
"RTN","IBTRKR5",125,0)
 D SEND^IBTRKR31
"RTN","IBTRKR5",126,0)
BULLQ Q
"RTN","IBTRKR5",127,0)
 ;
"RTN","IBTRKR5",128,0)
CLTXT ; classification text for reason not billable
"RTN","IBTRKR5",129,0)
 ;;AGENT ORANGE
"RTN","IBTRKR5",130,0)
 ;;IONIZING RADIATION
"RTN","IBTRKR5",131,0)
 ;;SC TREATMENT
"RTN","IBTRKR5",132,0)
 ;;ENV. CONTAM.
"RTN","IBTRKR5",133,0)
 ;;MILITARY SEXUAL TRAUMA
"RTN","IBTRKR5",134,0)
 ;;HEAD/NECK CANCER
"RTN","IBTRKR5",135,0)
 ;;COMBAT VETERAN
"VER")
8.0^22.0
"BLD",5832,6)
^313
**END**
**END**
