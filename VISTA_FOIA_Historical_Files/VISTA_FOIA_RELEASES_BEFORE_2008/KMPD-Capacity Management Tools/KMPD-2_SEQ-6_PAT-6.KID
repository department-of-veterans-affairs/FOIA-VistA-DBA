Released KMPD*2*6 SEQ #6
Extracted from mail message
**KIDS**:KMPD*2.0*6^

**INSTALL NAME**
KMPD*2.0*6
"BLD",796,0)
KMPD*2.0*6^CAPACITY MANAGEMENT TOOLS^0^3070515^y
"BLD",796,1,0)
^^1^1^3070104^
"BLD",796,1,1,0)
Patch KMPD*2*6
"BLD",796,4,0)
^9.64PA^^
"BLD",796,6)
6^
"BLD",796,6.3)
3
"BLD",796,"KRN",0)
^9.67PA^8989.52^19
"BLD",796,"KRN",.4,0)
.4
"BLD",796,"KRN",.401,0)
.401
"BLD",796,"KRN",.402,0)
.402
"BLD",796,"KRN",.403,0)
.403
"BLD",796,"KRN",.5,0)
.5
"BLD",796,"KRN",.84,0)
.84
"BLD",796,"KRN",3.6,0)
3.6
"BLD",796,"KRN",3.8,0)
3.8
"BLD",796,"KRN",9.2,0)
9.2
"BLD",796,"KRN",9.8,0)
9.8
"BLD",796,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",796,"KRN",9.8,"NM",1,0)
KMPDTU11^^0^B4686971
"BLD",796,"KRN",9.8,"NM",2,0)
KMPDSSS^^0^B33896326
"BLD",796,"KRN",9.8,"NM",3,0)
KMPDUTL^^0^B12190816
"BLD",796,"KRN",9.8,"NM",4,0)
KMPDSSD1^^0^B11459921
"BLD",796,"KRN",9.8,"NM","B","KMPDSSD1",4)

"BLD",796,"KRN",9.8,"NM","B","KMPDSSS",2)

"BLD",796,"KRN",9.8,"NM","B","KMPDTU11",1)

"BLD",796,"KRN",9.8,"NM","B","KMPDUTL",3)

"BLD",796,"KRN",19,0)
19
"BLD",796,"KRN",19.1,0)
19.1
"BLD",796,"KRN",101,0)
101
"BLD",796,"KRN",409.61,0)
409.61
"BLD",796,"KRN",771,0)
771
"BLD",796,"KRN",870,0)
870
"BLD",796,"KRN",8989.51,0)
8989.51
"BLD",796,"KRN",8989.52,0)
8989.52
"BLD",796,"KRN",8994,0)
8994
"BLD",796,"KRN","B",.4,.4)

"BLD",796,"KRN","B",.401,.401)

"BLD",796,"KRN","B",.402,.402)

"BLD",796,"KRN","B",.403,.403)

"BLD",796,"KRN","B",.5,.5)

"BLD",796,"KRN","B",.84,.84)

"BLD",796,"KRN","B",3.6,3.6)

"BLD",796,"KRN","B",3.8,3.8)

"BLD",796,"KRN","B",9.2,9.2)

"BLD",796,"KRN","B",9.8,9.8)

"BLD",796,"KRN","B",19,19)

"BLD",796,"KRN","B",19.1,19.1)

"BLD",796,"KRN","B",101,101)

"BLD",796,"KRN","B",409.61,409.61)

"BLD",796,"KRN","B",771,771)

"BLD",796,"KRN","B",870,870)

"BLD",796,"KRN","B",8989.51,8989.51)

"BLD",796,"KRN","B",8989.52,8989.52)

"BLD",796,"KRN","B",8994,8994)

"BLD",796,"QUES",0)
^9.62^^
"BLD",796,"REQB",0)
^9.611^1^1
"BLD",796,"REQB",1,0)
KMPD*2.0*5^1
"BLD",796,"REQB","B","KMPD*2.0*5",1)

"MBREQ")
0
"PKG",481,-1)
1^1
"PKG",481,0)
CAPACITY MANAGEMENT TOOLS^KMPD^Capacity Management Tools
"PKG",481,20,0)
^9.402P^^
"PKG",481,22,0)
^9.49I^1^1
"PKG",481,22,1,0)
2.0^3040331^3040331^577
"PKG",481,22,1,"PAH",1,0)
6^3070515^577
"PKG",481,22,1,"PAH",1,1,0)
^^1^1^3070515
"PKG",481,22,1,"PAH",1,1,1,0)
Patch KMPD*2*6
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","KMPDSSD1")
0^4^B11459921^B9539619
"RTN","KMPDSSD1",1,0)
KMPDSSD1 ;OAK/RAK - CM Tools Status ;5/1/07  15:07
"RTN","KMPDSSD1",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**3,6**;Mar 22, 2002;Build 3
"RTN","KMPDSSD1",3,0)
 ;
"RTN","KMPDSSD1",4,0)
CPU ;-- cpu/node data
"RTN","KMPDSSD1",5,0)
 ;
"RTN","KMPDSSD1",6,0)
 N COUNT,DATA,I,LEN,TEXT
"RTN","KMPDSSD1",7,0)
 ;
"RTN","KMPDSSD1",8,0)
 D CPUGET^KMPDUTL6(.DATA)
"RTN","KMPDSSD1",9,0)
 Q:'$D(DATA)
"RTN","KMPDSSD1",10,0)
 S LN=LN+1
"RTN","KMPDSSD1",11,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSD1",12,0)
 S TEXT="   Node/CPU Data............... "
"RTN","KMPDSSD1",13,0)
 S (COUNT,I,LEN)=0
"RTN","KMPDSSD1",14,0)
 F  S I=$O(DATA(I)) Q:'I  D 
"RTN","KMPDSSD1",15,0)
 .S COUNT=COUNT+1,DATA=$G(DATA(I,0)) Q:DATA=""
"RTN","KMPDSSD1",16,0)
 .; length of node name
"RTN","KMPDSSD1",17,0)
 .S:'LEN LEN=$L($P(DATA,U))+2
"RTN","KMPDSSD1",18,0)
 .S TEXT=$S(COUNT=1:TEXT,1:$J(" ",32))_$P(DATA,U)
"RTN","KMPDSSD1",19,0)
 .S TEXT=TEXT_$J(" ",32-$L(TEXT)+LEN)_$P(DATA,U,2)_" ("_$P(DATA,U,3)_")"
"RTN","KMPDSSD1",20,0)
 .S LN=LN+1
"RTN","KMPDSSD1",21,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD1",22,0)
 ;
"RTN","KMPDSSD1",23,0)
 Q
"RTN","KMPDSSD1",24,0)
 ;
"RTN","KMPDSSD1",25,0)
MGRP ;-- mail group members
"RTN","KMPDSSD1",26,0)
 ;
"RTN","KMPDSSD1",27,0)
 N MEMBER,MEMBER1,NAME,NMARRY
"RTN","KMPDSSD1",28,0)
 ;
"RTN","KMPDSSD1",29,0)
 S IEN=$O(^XMB(3.8,"B","KMP-CAPMAN",0)) Q:'IEN
"RTN","KMPDSSD1",30,0)
 ;
"RTN","KMPDSSD1",31,0)
 S LN=LN+1
"RTN","KMPDSSD1",32,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSD1",33,0)
 ;
"RTN","KMPDSSD1",34,0)
 S TEXT="   KMP-CAPMAN Mail Group......."
"RTN","KMPDSSD1",35,0)
 ; check MEMBER field #2
"RTN","KMPDSSD1",36,0)
 S MEMBER=0
"RTN","KMPDSSD1",37,0)
 F  S MEMBER=$O(^XMB(3.8,IEN,1,"B",MEMBER)) Q:'MEMBER  D
"RTN","KMPDSSD1",38,0)
 .S NAME=$P($G(^VA(200,MEMBER,0)),U)
"RTN","KMPDSSD1",39,0)
 .I NAME'="" S NMARRY(NAME)=MEMBER
"RTN","KMPDSSD1",40,0)
 ; remote members
"RTN","KMPDSSD1",41,0)
 S MEMBER="",MEMBER1=0
"RTN","KMPDSSD1",42,0)
 F  S MEMBER=$O(^XMB(3.8,IEN,6,"B",MEMBER)) Q:MEMBER=""  D 
"RTN","KMPDSSD1",43,0)
 .S MEMBER1=0
"RTN","KMPDSSD1",44,0)
 .F  S MEMBER1=$O(^XMB(3.8,IEN,6,"B",MEMBER,MEMBER1)) Q:'MEMBER1  D 
"RTN","KMPDSSD1",45,0)
 ..S NAME=$P($G(^XMB(3.8,IEN,6,MEMBER1,0)),U)
"RTN","KMPDSSD1",46,0)
 ..I NAME'="" S NMARRY(NAME)=MEMBER
"RTN","KMPDSSD1",47,0)
 ;
"RTN","KMPDSSD1",48,0)
 I '$D(NMARRY) S LN=LN+1 D SET^VALM10(LN,TEXT_" No Users") Q
"RTN","KMPDSSD1",49,0)
 ;
"RTN","KMPDSSD1",50,0)
 S NAME=""
"RTN","KMPDSSD1",51,0)
 F  S NAME=$O(NMARRY(NAME)) Q:NAME=""  D
"RTN","KMPDSSD1",52,0)
 .S MEMBER=NMARRY(NAME)
"RTN","KMPDSSD1",53,0)
 .S TEXT=TEXT_$J(" ",32-$L(TEXT))_NAME
"RTN","KMPDSSD1",54,0)
 .; if not a remote user
"RTN","KMPDSSD1",55,0)
 .I NAME'["@" D 
"RTN","KMPDSSD1",56,0)
 ..S MEMBER=$$ACTIVE^XUSER(MEMBER) I '+MEMBER S TEXT=TEXT_" ("_$P(MEMBER,U,2)_")"
"RTN","KMPDSSD1",57,0)
 .S LN=LN+1
"RTN","KMPDSSD1",58,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD1",59,0)
 .S TEXT=""
"RTN","KMPDSSD1",60,0)
 ;
"RTN","KMPDSSD1",61,0)
 Q
"RTN","KMPDSSD1",62,0)
 ;
"RTN","KMPDSSD1",63,0)
ROUCHK(KMPDPKG) ;--display routine version info
"RTN","KMPDSSD1",64,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDSSD1",65,0)
 ; KMPDPKG... CM Package:
"RTN","KMPDSSD1",66,0)
 ;            "D" - CM Tools
"RTN","KMPDSSD1",67,0)
 ;            "R" - RUM
"RTN","KMPDSSD1",68,0)
 ;            "S" - SAGG
"RTN","KMPDSSD1",69,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDSSD1",70,0)
 ;
"RTN","KMPDSSD1",71,0)
 Q:$G(KMPDPKG)=""
"RTN","KMPDSSD1",72,0)
 Q:KMPDPKG'="D"&(KMPDPKG'="R")&(KMPDPKG'="S")
"RTN","KMPDSSD1",73,0)
 ;
"RTN","KMPDSSD1",74,0)
 N I,TEXT,X
"RTN","KMPDSSD1",75,0)
 ;
"RTN","KMPDSSD1",76,0)
 ; routine check
"RTN","KMPDSSD1",77,0)
 D VERPTCH^KMPDUTL1(KMPDPKG,.X)
"RTN","KMPDSSD1",78,0)
 S LN=LN+1
"RTN","KMPDSSD1",79,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSD1",80,0)
 S LN=LN+1
"RTN","KMPDSSD1",81,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSD1",82,0)
 S TEXT="   "_$S(KMPDPKG="D":"CM TOOLS",KMPDPKG="R":"RUM",1:"SAGG")_" routines"
"RTN","KMPDSSD1",83,0)
 S TEXT=TEXT_$$REPEAT^XLFSTR(".",31-$L(TEXT))
"RTN","KMPDSSD1",84,0)
 I '$P($G(X(0)),U,3) S LN=LN+1 D SET^VALM10(LN,TEXT_" "_+X(0)_" Routines - No Problems") Q
"RTN","KMPDSSD1",85,0)
 S LN=LN+1
"RTN","KMPDSSD1",86,0)
 D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD1",87,0)
 S LN=LN+1
"RTN","KMPDSSD1",88,0)
 D SET^VALM10(LN,$J(" ",20)_"Current Version"_$J(" ",20)_"Should be")
"RTN","KMPDSSD1",89,0)
 S I=0 F  S I=$O(X(I)) Q:I=""  I $P(X(I),U) D 
"RTN","KMPDSSD1",90,0)
 .S TEXT="   "_I
"RTN","KMPDSSD1",91,0)
 .S TEXT=TEXT_$J(" ",20-$L(TEXT))_$P(X(I),U,4)
"RTN","KMPDSSD1",92,0)
 .S:$P(X(I),U,5)]"" TEXT=TEXT_" - "_$P(X(I),U,5)
"RTN","KMPDSSD1",93,0)
 .S TEXT=TEXT_$J(" ",55-$L(TEXT))_$P(X(I),U,2)
"RTN","KMPDSSD1",94,0)
 .S:$P(X(I),U,3)]"" TEXT=TEXT_" - "_$P(X(I),U,3)
"RTN","KMPDSSD1",95,0)
 .S LN=LN+1
"RTN","KMPDSSD1",96,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD1",97,0)
 ;
"RTN","KMPDSSD1",98,0)
 Q
"RTN","KMPDSSD1",99,0)
 ;
"RTN","KMPDSSD1",100,0)
PKG(KMPDNMSP) ;-- extrinsic function - return package name
"RTN","KMPDSSD1",101,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSD1",102,0)
 ; KMPDNMSP... H - HL7
"RTN","KMPDSSD1",103,0)
 ;             R - RUM
"RTN","KMPDSSD1",104,0)
 ;             S - SAGG
"RTN","KMPDSSD1",105,0)
 ;             T - Timing
"RTN","KMPDSSD1",106,0)
 ;
"RTN","KMPDSSD1",107,0)
 ; Return: Package name
"RTN","KMPDSSD1",108,0)
 ;         "" if not found
"RTN","KMPDSSD1",109,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSD1",110,0)
 ;
"RTN","KMPDSSD1",111,0)
 Q:$G(KMPDNMSP)="" ""
"RTN","KMPDSSD1",112,0)
 ;
"RTN","KMPDSSD1",113,0)
 N IEN,NMSP
"RTN","KMPDSSD1",114,0)
 S NMSP="KMP"_$S(KMPDNMSP="H"!(KMPDNMSP="T"):"D",1:KMPDNMSP)
"RTN","KMPDSSD1",115,0)
 S IEN=$O(^DIC(9.4,"C",NMSP,0))
"RTN","KMPDSSD1",116,0)
 Q $S(IEN:$P($G(^DIC(9.4,+IEN,0)),U),1:"")
"RTN","KMPDSSS")
0^2^B33896326^B37207871
"RTN","KMPDSSS",1,0)
KMPDSSS ;OAK/RAK - CP Status - SAGG ;5/1/07  15:07
"RTN","KMPDSSS",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**3,6**;Mar 22, 2002;Build 3
"RTN","KMPDSSS",3,0)
 ;
"RTN","KMPDSSS",4,0)
 ;
"RTN","KMPDSSS",5,0)
FORMAT(KMPDLN) ;-format text for dislay
"RTN","KMPDSSS",6,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSS",7,0)
 ; KMPDLN.... return number of lines - called by reference
"RTN","KMPDSSS",8,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSS",9,0)
 ;
"RTN","KMPDSSS",10,0)
 Q:$G(KMPDNMSP)=""
"RTN","KMPDSSS",11,0)
 ;
"RTN","KMPDSSS",12,0)
 N LN,X S LN=0 K TMP
"RTN","KMPDSSS",13,0)
 ;
"RTN","KMPDSSS",14,0)
 ; if no kmpsutl routine
"RTN","KMPDSSS",15,0)
 S X="KMPSUTL" X ^%ZOSF("TEST") I '$T D  Q
"RTN","KMPDSSS",16,0)
 .S LN=LN+1
"RTN","KMPDSSS",17,0)
 .D SET^VALM10(LN,"The SAGG Package is not installed!")
"RTN","KMPDSSS",18,0)
 ;
"RTN","KMPDSSS",19,0)
 ; status
"RTN","KMPDSSS",20,0)
 D STATUS
"RTN","KMPDSSS",21,0)
 ;
"RTN","KMPDSSS",22,0)
 ; option data
"RTN","KMPDSSS",23,0)
 D OPT^KMPDSSD("KMPS SAGG REPORT")
"RTN","KMPDSSS",24,0)
 ;
"RTN","KMPDSSS",25,0)
 ; bacground data
"RTN","KMPDSSS",26,0)
 D BKGRND
"RTN","KMPDSSS",27,0)
 ;
"RTN","KMPDSSS",28,0)
 ; file data
"RTN","KMPDSSS",29,0)
 D FILES
"RTN","KMPDSSS",30,0)
 ;
"RTN","KMPDSSS",31,0)
 ; routine version check
"RTN","KMPDSSS",32,0)
 D ROUCHK^KMPDSSD1("S")
"RTN","KMPDSSS",33,0)
 ;
"RTN","KMPDSSS",34,0)
 ; node/cpu data
"RTN","KMPDSSS",35,0)
 D CPU^KMPDSSD1
"RTN","KMPDSSS",36,0)
 ;
"RTN","KMPDSSS",37,0)
 ; mail group member
"RTN","KMPDSSS",38,0)
 D MGRP^KMPDSSD1
"RTN","KMPDSSS",39,0)
 ;
"RTN","KMPDSSS",40,0)
 ; legend
"RTN","KMPDSSS",41,0)
 D LEGEND
"RTN","KMPDSSS",42,0)
 ;
"RTN","KMPDSSS",43,0)
 S KMPDLN=LN
"RTN","KMPDSSS",44,0)
 ;
"RTN","KMPDSSS",45,0)
 Q
"RTN","KMPDSSS",46,0)
 ;
"RTN","KMPDSSS",47,0)
BKGRND ;- background
"RTN","KMPDSSS",48,0)
 ;
"RTN","KMPDSSS",49,0)
 N CURSTAT,LOC,OPT,PLTFRM,PROD,SITENUM,STAT,TEXT,VOL,VOLDA
"RTN","KMPDSSS",50,0)
 ;
"RTN","KMPDSSS",51,0)
 S SITENUM=$P($$SITE^VASITE(),U,3) Q:'SITENUM
"RTN","KMPDSSS",52,0)
 S OPT="KMPS SAGG REPORT",STAT=$$TSKSTAT^KMPSUTL1(OPT),CURSTAT=$$CURSTAT^KMPDUTL1(STAT)
"RTN","KMPDSSS",53,0)
 ;
"RTN","KMPDSSS",54,0)
 S LN=LN+1
"RTN","KMPDSSS",55,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSS",56,0)
 S LN=LN+1
"RTN","KMPDSSS",57,0)
 D SET^VALM10(LN,"   Temporary collection global.")
"RTN","KMPDSSS",58,0)
 S LN=LN+1
"RTN","KMPDSSS",59,0)
 D SET^VALM10(LN,"   ^XTMP(""KMPS"")............... "_$S('$D(^XTMP("KMPS",SITENUM,0)):"NOT ",1:"")_"Present")
"RTN","KMPDSSS",60,0)
 ;
"RTN","KMPDSSS",61,0)
 S PLTFRM=$$MPLTF^KMPDUTL1,PROD=$P(^%ZOSF("PROD"),",")
"RTN","KMPDSSS",62,0)
 I PLTFRM="DSM" D
"RTN","KMPDSSS",63,0)
 .S LOC=$G(^KMPS(8970.1,1,0))
"RTN","KMPDSSS",64,0)
 .S TEXT="   Global Location............ "
"RTN","KMPDSSS",65,0)
 .S TEXT=TEXT_$S($P(LOC,U,3)="":PROD,1:$P(LOC,U,3))_","_$S($P(LOC,U,2)="":"UNKNOWN",1:$P(LOC,U,2))
"RTN","KMPDSSS",66,0)
 .S LN=LN+1
"RTN","KMPDSSS",67,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSS",68,0)
 ;
"RTN","KMPDSSS",69,0)
 S LN=LN+1
"RTN","KMPDSSS",70,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSS",71,0)
 S LN=LN+1
"RTN","KMPDSSS",72,0)
 D SET^VALM10(LN,"   SAGG Project collection routines will monitor the following:")
"RTN","KMPDSSS",73,0)
 S LN=LN+1
"RTN","KMPDSSS",74,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSS",75,0)
 S (TEXT,VOL)=""
"RTN","KMPDSSS",76,0)
 F  S VOL=$O(^KMPS(8970.1,1,1,"B",VOL)) Q:VOL=""  D
"RTN","KMPDSSS",77,0)
 .S VOLDA=$O(^KMPS(8970.1,1,1,"B",VOL,0))
"RTN","KMPDSSS",78,0)
 .S LOC=$P(^KMPS(8970.1,1,1,VOLDA,0),U,2)
"RTN","KMPDSSS",79,0)
 .S:LOC="" LOC=PROD
"RTN","KMPDSSS",80,0)
 .S TEXT=$J(" ",10)_VOL,LN=LN+1
"RTN","KMPDSSS",81,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSS",82,0)
 ;
"RTN","KMPDSSS",83,0)
 I '+CURSTAT&$D(^XTMP("KMPS","START")) D 
"RTN","KMPDSSS",84,0)
 .S LN=LN+1 D SET^VALM10(LN,"") S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSS",85,0)
 .S LN=LN+1
"RTN","KMPDSSS",86,0)
 .D SET^VALM10(LN,"   SAGG Project collection routines are still running on:")
"RTN","KMPDSSS",87,0)
 .S (TEXT,VOL)=""
"RTN","KMPDSSS",88,0)
 .F  S VOL=$O(^XTMP("KMPS","START",VOL)) Q:VOL=""  D
"RTN","KMPDSSS",89,0)
 ..S TEXT=$J(" ",10)_VOL,LN=LN+1
"RTN","KMPDSSS",90,0)
 ..D SET^VALM10(LN,TEXT)
"RTN","KMPDSSS",91,0)
 ;
"RTN","KMPDSSS",92,0)
 ; check for any reported errors
"RTN","KMPDSSS",93,0)
 I $D(^XTMP("KMPS","ERROR")) D 
"RTN","KMPDSSS",94,0)
 .S LN=LN+1 D SET^VALM10(LN,"") S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSS",95,0)
 .S LN=LN+1
"RTN","KMPDSSS",96,0)
 .D SET^VALM10(LN,"   SAGG Project collection routines have recorded an error on")
"RTN","KMPDSSS",97,0)
 .S LN=LN+1
"RTN","KMPDSSS",98,0)
 .D SET^VALM10(LN,"   the following Volume Set(s):")
"RTN","KMPDSSS",99,0)
 .S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSS",100,0)
 .S (TEXT,VOL)=""
"RTN","KMPDSSS",101,0)
 .F  S VOL=$O(^XTMP("KMPS","ERROR",VOL)) Q:VOL=""  D
"RTN","KMPDSSS",102,0)
 ..S TEXT=$J(" ",10)_VOL,LN=LN+1
"RTN","KMPDSSS",103,0)
 ..D SET^VALM10(LN,TEXT) S TEXT=""
"RTN","KMPDSSS",104,0)
 ;
"RTN","KMPDSSS",105,0)
 ; check to see if SAGG was told to stop or has reported errors
"RTN","KMPDSSS",106,0)
 I (+CURSTAT)>3 D 
"RTN","KMPDSSS",107,0)
 .I +CURSTAT=4 D
"RTN","KMPDSSS",108,0)
 ..S LN=LN+1
"RTN","KMPDSSS",109,0)
 ..D SET^VALM10(LN,"   SAGG has been running over a day. Use ^%S"_$S(PLTFRM="DSM":"Y",1:"S")_" and check to see if")
"RTN","KMPDSSS",110,0)
 ..S LN=LN+1
"RTN","KMPDSSS",111,0)
 ..D SET^VALM10(LN,"   the KMPSGE routine is still running.")
"RTN","KMPDSSS",112,0)
 .S LN=LN+1
"RTN","KMPDSSS",113,0)
 .D SET^VALM10(LN,"   NOTE:  Any incomplete data that has been collected will be")
"RTN","KMPDSSS",114,0)
 .S LN=LN+1
"RTN","KMPDSSS",115,0)
 .D SET^VALM10(LN,"   deleted automatically the next time that SAGG runs.")
"RTN","KMPDSSS",116,0)
 .I $D(^XTMP("KMPS","ERROR")) S LN=LN+1 D SET^VALM10(LN,"            First determine the cause of any volume set errors.")
"RTN","KMPDSSS",117,0)
 .S LN=LN+1
"RTN","KMPDSSS",118,0)
 .D SET^VALM10(LN,"            Reschedule SAGG to collect global data if necessary.")
"RTN","KMPDSSS",119,0)
 ;
"RTN","KMPDSSS",120,0)
 Q
"RTN","KMPDSSS",121,0)
 ;
"RTN","KMPDSSS",122,0)
FILES ;-- file data
"RTN","KMPDSSS",123,0)
 ;
"RTN","KMPDSSS",124,0)
 N TEXT,X
"RTN","KMPDSSS",125,0)
 ;
"RTN","KMPDSSS",126,0)
 S LN=LN+1
"RTN","KMPDSSS",127,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSS",128,0)
 S LN=LN+1
"RTN","KMPDSSS",129,0)
 D SET^VALM10(LN,$J(" ",35)_" # of") ;     Oldest     Recent")
"RTN","KMPDSSS",130,0)
 S LN=LN+1
"RTN","KMPDSSS",131,0)
 D SET^VALM10(LN,"   File"_$J(" ",28)_"Entries") ;    Date       Date")
"RTN","KMPDSSS",132,0)
 S LN=LN+1
"RTN","KMPDSSS",133,0)
 D SET^VALM10(LN,"   -------------------------       -------") ;   -------   -------")
"RTN","KMPDSSS",134,0)
 ; file name
"RTN","KMPDSSS",135,0)
 S TEXT="   8970.1-"_$P($G(^DIC(8970.1,0)),U)
"RTN","KMPDSSS",136,0)
 ; number of entries
"RTN","KMPDSSS",137,0)
 S TEXT=TEXT_$J(" ",35-$L(TEXT))_$J($FN($P($G(^KMPS(8970.1,0)),U,4),",",0),7)
"RTN","KMPDSSS",138,0)
 S LN=LN+1
"RTN","KMPDSSS",139,0)
 D SET^VALM10(LN,TEXT)
"RTN","KMPDSSS",140,0)
 ;
"RTN","KMPDSSS",141,0)
 Q
"RTN","KMPDSSS",142,0)
 ;
"RTN","KMPDSSS",143,0)
LEGEND ;-- display full package name
"RTN","KMPDSSS",144,0)
 ;
"RTN","KMPDSSS",145,0)
 S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSS",146,0)
 S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSS",147,0)
 S LN=LN+1
"RTN","KMPDSSS",148,0)
 D SET^VALM10(LN,"   SAGG = Statistical Analysis of Global Growth")
"RTN","KMPDSSS",149,0)
 ;
"RTN","KMPDSSS",150,0)
 Q
"RTN","KMPDSSS",151,0)
 ;
"RTN","KMPDSSS",152,0)
STATUS ;-- current status
"RTN","KMPDSSS",153,0)
 ;
"RTN","KMPDSSS",154,0)
 N CURSTAT,DOW,OPT,SESSNUM,SITNUM,STAT,STRTDT
"RTN","KMPDSSS",155,0)
 ;
"RTN","KMPDSSS",156,0)
 S SITNUM=$P($$SITE^VASITE(),U,3) Q:'SITNUM
"RTN","KMPDSSS",157,0)
 S OPT="KMPS SAGG REPORT",STAT=$$TSKSTAT^KMPSUTL1(OPT),CURSTAT=$$CURSTAT^KMPDUTL1(STAT)
"RTN","KMPDSSS",158,0)
 S LN=LN+1
"RTN","KMPDSSS",159,0)
 D SET^VALM10(LN,"   Current Status.............. "_$P(CURSTAT,U,2))
"RTN","KMPDSSS",160,0)
 I $D(^XTMP("KMPS",SITNUM,0)) D
"RTN","KMPDSSS",161,0)
 .S SESSNUM=^XTMP("KMPS",SITNUM,0),STRTDT=$P(SESSNUM,U,4),SESSNUM=+SESSNUM
"RTN","KMPDSSS",162,0)
 .S LN=LN+1
"RTN","KMPDSSS",163,0)
 .D SET^VALM10(LN,"   Session Number.............. "_SESSNUM)
"RTN","KMPDSSS",164,0)
 .S DOW=$$DOW^XLFDT(STRTDT)
"RTN","KMPDSSS",165,0)
 .S LN=LN+1
"RTN","KMPDSSS",166,0)
 .D SET^VALM10(LN,"   Start Date.................. "_$$FMTE^XLFDT(STRTDT,"P")_" ("_DOW_")")
"RTN","KMPDSSS",167,0)
 ;
"RTN","KMPDSSS",168,0)
 S LN=LN+1
"RTN","KMPDSSS",169,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSS",170,0)
 ;
"RTN","KMPDSSS",171,0)
 Q
"RTN","KMPDTU11")
0^1^B4686971^B2360612
"RTN","KMPDTU11",1,0)
KMPDTU11 ;OAK/RAK - CP Tools Timing Utility ;5/1/07  15:07
"RTN","KMPDTU11",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**6**;Mar 22, 2002;Build 3
"RTN","KMPDTU11",3,0)
 ;
"RTN","KMPDTU11",4,0)
RLTMHR(KMPDQIET,KMPDASK,KMPDEF) ;-- extrinsic function - real time hours
"RTN","KMPDTU11",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU11",6,0)
 ; KMPDQIET... Display output
"RTN","KMPDTU11",7,0)
 ;              0 - display output (not quiet)
"RTN","KMPDTU11",8,0)
 ;              1 - do not display output (quiet)
"RTN","KMPDTU11",9,0)
 ; KMPDASK.... Ask user to select hours
"RTN","KMPDTU11",10,0)
 ;              0 - do not ask user to select
"RTN","KMPDTU11",11,0)
 ;              1 - ask user to select
"RTN","KMPDTU11",12,0)
 ; KMPDEF..... Default
"RTN","KMPDTU11",13,0)
 ;              0 - do not use default
"RTN","KMPDTU11",14,0)
 ;              1 - use time range as default
"RTN","KMPDTU11",15,0)
 ;
"RTN","KMPDTU11",16,0)
 ; Return: List of hours (ie, 1,2,5,6,7...)
"RTN","KMPDTU11",17,0)
 ;         "" - no selection made
"RTN","KMPDTU11",18,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU11",19,0)
 ;
"RTN","KMPDTU11",20,0)
 S KMPDQIET=+$G(KMPDQIET),KMPDASK=+$G(KMPDASK),KMPDEF=+$G(KMPDEF)
"RTN","KMPDTU11",21,0)
 N DATA,DIR,DOT,HOURS,HR,I,QUEUED,X,Y
"RTN","KMPDTU11",22,0)
 W:'KMPDQIET !," ==> building Hours list..."
"RTN","KMPDTU11",23,0)
 S I="",DOT=0
"RTN","KMPDTU11",24,0)
 F  S I=$O(^KMPTMP("KMPDT","ORWCV",I)) Q:I=""  S DATA=^(I) I DATA]"" D 
"RTN","KMPDTU11",25,0)
 .S DOT=DOT+1 W:'(DOT#1000)&('KMPDQIET) "."
"RTN","KMPDTU11",26,0)
 .; change $h to fileman format and get hour
"RTN","KMPDTU11",27,0)
 .S HR=$E($P($$HTFM^XLFDT($P(DATA,U)),".",2),1,2) S:HR>23 HR="0"
"RTN","KMPDTU11",28,0)
 .; create HOURS() array
"RTN","KMPDTU11",29,0)
 .S:HR'="" HOURS(+HR)=""
"RTN","KMPDTU11",30,0)
 ;
"RTN","KMPDTU11",31,0)
 ; if no HOURS() array
"RTN","KMPDTU11",32,0)
 Q:'$D(HOURS) ""
"RTN","KMPDTU11",33,0)
 ;
"RTN","KMPDTU11",34,0)
 ; do not ask user to select hours
"RTN","KMPDTU11",35,0)
 I 'KMPDASK D  Q X
"RTN","KMPDTU11",36,0)
 .S (I,X)="" F  S I=$O(HOURS(I)) Q:I=""  S X=X_I_","
"RTN","KMPDTU11",37,0)
 ;
"RTN","KMPDTU11",38,0)
 ; ask user to select hour(s)
"RTN","KMPDTU11",39,0)
 S DIR(0)="LO^"_$O(HOURS(""))_":"_$O(HOURS("A"),-1)
"RTN","KMPDTU11",40,0)
 S DIR("A")="Select Hour(s)"
"RTN","KMPDTU11",41,0)
 S:KMPDEF DIR("B")=$O(HOURS(""))_"-"_$O(HOURS("A"),-1)
"RTN","KMPDTU11",42,0)
 W ! D ^DIR
"RTN","KMPDTU11",43,0)
 Q $S(Y=""!(Y="^"):"",1:$G(Y(0)))
"RTN","KMPDTU11",44,0)
 ;
"RTN","KMPDTU11",45,0)
TIMING(KMPDSS,KMPDNODE,KMPDST,KMPDHTM,KMPDUZ,KMPDCL) ;-- start/stop timing stats
"RTN","KMPDTU11",46,0)
 ;--------------------------------------------------------------------
"RTN","KMPDTU11",47,0)
 ; KMPDSS... subscript (free text)
"RTN","KMPDTU11",48,0)
 ; KMPDNODE. node name (free text)
"RTN","KMPDTU11",49,0)
 ; KMPDST... start/stop
"RTN","KMPDTU11",50,0)
 ;            1 - start
"RTN","KMPDTU11",51,0)
 ;            2 - stop
"RTN","KMPDTU11",52,0)
 ; KMPDHTM.. (optional - if not defined the current $h will be used)
"RTN","KMPDTU11",53,0)
 ;           time in $h format
"RTN","KMPDTU11",54,0)
 ; KMPDUZ... (optional -if not defined the current duz will be used)
"RTN","KMPDTU11",55,0)
 ;           user duz
"RTN","KMPDTU11",56,0)
 ; KMPDCL... (optional - if not defined the current IO("CLNM")) will be used)
"RTN","KMPDTU11",57,0)
 ;           client name (free text)
"RTN","KMPDTU11",58,0)
 ; 
"RTN","KMPDTU11",59,0)
 ;--------------------------------------------------------------------
"RTN","KMPDTU11",60,0)
 ; quit if timing stats not turned on
"RTN","KMPDTU11",61,0)
 Q:'$G(^KMPTMP("KMPD-CPRS"))
"RTN","KMPDTU11",62,0)
 ; quit if no subscript
"RTN","KMPDTU11",63,0)
 Q:$G(KMPDSS)=""
"RTN","KMPDTU11",64,0)
 ; quit if no node
"RTN","KMPDTU11",65,0)
 Q:$G(KMPDNODE)=""
"RTN","KMPDTU11",66,0)
 ; start/stop
"RTN","KMPDTU11",67,0)
 S KMPDST=+$G(KMPDST)
"RTN","KMPDTU11",68,0)
 Q:KMPDST<1!(KMPDST>2)
"RTN","KMPDTU11",69,0)
 S:'$G(KMPDHTM) KMPDHTM=$H
"RTN","KMPDTU11",70,0)
 S:'$G(KMPDUZ) KMPDUZ=$G(DUZ)
"RTN","KMPDTU11",71,0)
 S:$G(KMPDCL)="" KMPDCL=$G(IO("CLNM"))
"RTN","KMPDTU11",72,0)
 ;
"RTN","KMPDTU11",73,0)
 ; start timing
"RTN","KMPDTU11",74,0)
 S:KMPDST=1 ^KMPTMP("KMPDT",KMPDSS,KMPDNODE)=KMPDHTM_"^^"_KMPDUZ_"^"_KMPDCL
"RTN","KMPDTU11",75,0)
 ; stop timing
"RTN","KMPDTU11",76,0)
 S:KMPDST=2 $P(^KMPTMP("KMPDT",KMPDSS,KMPDNODE),"^",2)=KMPDHTM
"RTN","KMPDTU11",77,0)
 ;
"RTN","KMPDTU11",78,0)
 Q
"RTN","KMPDUTL")
0^3^B12190816^B12113278
"RTN","KMPDUTL",1,0)
KMPDUTL ;OAK/RAK - CM Tools Utility ;5/1/07  15:08
"RTN","KMPDUTL",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**1,2,3,4,5,6**;Mar 22, 2002;Build 3
"RTN","KMPDUTL",3,0)
 ;
"RTN","KMPDUTL",4,0)
QUEBKG(KMPDOPT,KMPDTIME,KMPDFREQ,KMPDDEL) ;-- queue background job
"RTN","KMPDUTL",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",6,0)
 ; KMPDOPT.... Option name to queue (free text name in .01 field of 
"RTN","KMPDUTL",7,0)
 ;                                   OPTION file)
"RTN","KMPDUTL",8,0)
 ; KMPDTIME... Date/time to queue option (T@1400, etc)
"RTN","KMPDUTL",9,0)
 ; KMPDFREQ... Scheduling frequency (1D, etc)
"RTN","KMPDUTL",10,0)
 ; KMPDDEL.... Delete option if it already exists in file 19.2
"RTN","KMPDUTL",11,0)
 ;              0 - do not delete (quit if already scheduled)
"RTN","KMPDUTL",12,0)
 ;              1 - delete if already in file 19.2
"RTN","KMPDUTL",13,0)
 ;
"RTN","KMPDUTL",14,0)
 ; This API will queue an option from file #19 (OPTION) to run in file
"RTN","KMPDUTL",15,0)
 ; 19.2 (OPTION SCHEDULE).
"RTN","KMPDUTL",16,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",17,0)
 Q:$G(KMPDOPT)=""
"RTN","KMPDUTL",18,0)
 Q:$G(KMPDTIME)=""
"RTN","KMPDUTL",19,0)
 Q:$G(KMPDFREQ)=""
"RTN","KMPDUTL",20,0)
 S KMPDDEL=+$G(KMPDDEL)
"RTN","KMPDUTL",21,0)
 N DA,DIFROM,DIK,FDA,ERROR,IEN,IEN1,IENZ,TEXT,X,Y,Z
"RTN","KMPDUTL",22,0)
 ; Newing DIFROM will force reschedule when installing from KIDS
"RTN","KMPDUTL",23,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPDUTL",24,0)
 ; change to internal format
"RTN","KMPDUTL",25,0)
 D FMDTI^KMPDU(.Z,KMPDTIME)
"RTN","KMPDUTL",26,0)
 Q:Z(0)="^"!(Z(0)="")
"RTN","KMPDUTL",27,0)
 S KMPDTIME=Z(0) K Z
"RTN","KMPDUTL",28,0)
 S TEXT=KMPDOPT
"RTN","KMPDUTL",29,0)
 ; quit if not in file 19
"RTN","KMPDUTL",30,0)
 S IEN=$O(^DIC(19,"B",TEXT,0)) Q:'IEN
"RTN","KMPDUTL",31,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPDUTL",32,0)
 ; quit if already in file 19.2 and not KMPDDEL
"RTN","KMPDUTL",33,0)
 Q:IEN1&('KMPDDEL)
"RTN","KMPDUTL",34,0)
 ; delete if in file 19.2
"RTN","KMPDUTL",35,0)
 I IEN1 S DIK="^DIC(19.2,",DA=IEN1 D ^DIK
"RTN","KMPDUTL",36,0)
 ; add entry
"RTN","KMPDUTL",37,0)
 S FDA($J,19.2,"+1,",.01)=IEN
"RTN","KMPDUTL",38,0)
 ; queued to run at what time
"RTN","KMPDUTL",39,0)
 S FDA($J,19.2,"+1,",2)=KMPDTIME
"RTN","KMPDUTL",40,0)
 ; rescheduling frequency.
"RTN","KMPDUTL",41,0)
 S FDA($J,19.2,"+1,",6)=KMPDFREQ
"RTN","KMPDUTL",42,0)
 D UPDATE^DIE("","FDA($J)",.IENZ,"ERROR")
"RTN","KMPDUTL",43,0)
 I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR")
"RTN","KMPDUTL",44,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPDUTL",45,0)
 I '$G(^DIC(19.2,+IEN1,1)) D 
"RTN","KMPDUTL",46,0)
 .D MES^XPDUTL("     ERROR - Not able to reschedule "_KMPDOPT)
"RTN","KMPDUTL",47,0)
 .D MES^XPDUTL("     Use 'Schedule/Unschedule Options' [XUTM SCHEDULE] to reschedule.")
"RTN","KMPDUTL",48,0)
 ;
"RTN","KMPDUTL",49,0)
 Q
"RTN","KMPDUTL",50,0)
 ;
"RTN","KMPDUTL",51,0)
VERSION() ;-- extrinsic - return current version.
"RTN","KMPDUTL",52,0)
 Q $P($T(+2^KMPDUTL),";",3)_"^"_$P($T(+2^KMPDUTL),";",5)
"RTN","KMPDUTL",53,0)
 ;
"RTN","KMPDUTL",54,0)
VRSNGET(KMPDAPPL) ;-- extrinsic function - get version^patches
"RTN","KMPDUTL",55,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",56,0)
 ; KMPDAPPL... application:
"RTN","KMPDUTL",57,0)
 ;              0 - CM Tools
"RTN","KMPDUTL",58,0)
 ;              1 - SAGG
"RTN","KMPDUTL",59,0)
 ;              2 - RUM
"RTN","KMPDUTL",60,0)
 ;
"RTN","KMPDUTL",61,0)
 ; Return: Version^Patch^VersionInstallDate^PatchInstallDate
"RTN","KMPDUTL",62,0)
 ;         null = no application
"RTN","KMPDUTL",63,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",64,0)
 ;
"RTN","KMPDUTL",65,0)
 Q:$G(KMPDAPPL)="" ""
"RTN","KMPDUTL",66,0)
 Q:KMPDAPPL<0!(KMPDAPPL>2) ""
"RTN","KMPDUTL",67,0)
 ;
"RTN","KMPDUTL",68,0)
 N DATA,VERSION S VERSION=""
"RTN","KMPDUTL",69,0)
 ;
"RTN","KMPDUTL",70,0)
 ; cm tools
"RTN","KMPDUTL",71,0)
 I KMPDAPPL=0 D 
"RTN","KMPDUTL",72,0)
 .S DATA=$G(^KMPD(8973,1,KMPDAPPL))
"RTN","KMPDUTL",73,0)
 .S VERSION=$P(DATA,U,2)_U_$P(DATA,U,4)_U_$P(DATA,U,3)_U_$P(DATA,U,5)
"RTN","KMPDUTL",74,0)
 ;
"RTN","KMPDUTL",75,0)
 ; all other applications
"RTN","KMPDUTL",76,0)
 E  D 
"RTN","KMPDUTL",77,0)
 .S DATA=$G(^KMPD(8973,1,KMPDAPPL))
"RTN","KMPDUTL",78,0)
 .S VERSION=$P(DATA,U)_U_$P(DATA,U,3)_U_$P(DATA,U,2)_U_$P(DATA,U,4)
"RTN","KMPDUTL",79,0)
 ;
"RTN","KMPDUTL",80,0)
 Q VERSION
"RTN","KMPDUTL",81,0)
 ;
"RTN","KMPDUTL",82,0)
PTCHINFO ; -- patch information: routine name ^ current version ^ current patch(es)
"RTN","KMPDUTL",83,0)
 ;;KMPDBD01^2.0^**2**
"RTN","KMPDUTL",84,0)
 ;;KMPDECH^2.0^**5**
"RTN","KMPDUTL",85,0)
 ;;KMPDHU01^2.0^**4**
"RTN","KMPDUTL",86,0)
 ;;KMPDHU02^2.0
"RTN","KMPDUTL",87,0)
 ;;KMPDHU03^2.0
"RTN","KMPDUTL",88,0)
 ;;KMPDHUA^2.0
"RTN","KMPDUTL",89,0)
 ;;KMPDPOST^2.0^**1,2,5**
"RTN","KMPDUTL",90,0)
 ;;KMPDSS^2.0^**3**
"RTN","KMPDUTL",91,0)
 ;;KMPDSS1^2.0^**3**
"RTN","KMPDUTL",92,0)
 ;;KMPDSSD^2.0^**3**
"RTN","KMPDUTL",93,0)
 ;;KMPDSSD1^2.0^**3,6**
"RTN","KMPDUTL",94,0)
 ;;KMPDSSR^2.0^**3**
"RTN","KMPDUTL",95,0)
 ;;KMPDSSS^2.0^**3,6**
"RTN","KMPDUTL",96,0)
 ;;KMPDTM^2.0^**1,4**
"RTN","KMPDUTL",97,0)
 ;;KMPDTP1^2.0^**4**
"RTN","KMPDUTL",98,0)
 ;;KMPDTP2^2.0^**4**
"RTN","KMPDUTL",99,0)
 ;;KMPDTP3^2.0^**4**
"RTN","KMPDUTL",100,0)
 ;;KMPDTP4^2.0^**4**
"RTN","KMPDUTL",101,0)
 ;;KMPDTP5^2.0^**4**
"RTN","KMPDUTL",102,0)
 ;;KMPDTP6^2.0^**4**
"RTN","KMPDUTL",103,0)
 ;;KMPDTP7^2.0^**4**
"RTN","KMPDUTL",104,0)
 ;;KMPDTU01^2.0^**4,5**
"RTN","KMPDUTL",105,0)
 ;;KMPDTU02^2.0
"RTN","KMPDUTL",106,0)
 ;;KMPDTU10^2.0^**4**
"RTN","KMPDUTL",107,0)
 ;;KMPDTU11^2.0^**6**
"RTN","KMPDUTL",108,0)
 ;;KMPDU^2.0^**2**
"RTN","KMPDUTL",109,0)
 ;;KMPDU1^2.0
"RTN","KMPDUTL",110,0)
 ;;KMPDU2^2.0^**2**
"RTN","KMPDUTL",111,0)
 ;;KMPDU3^2.0^**2**
"RTN","KMPDUTL",112,0)
 ;;KMPDU4^2.0
"RTN","KMPDUTL",113,0)
 ;;KMPDU5^2.0^**2**
"RTN","KMPDUTL",114,0)
 ;;KMPDU11^2.0
"RTN","KMPDUTL",115,0)
 ;;KMPDUG^2.0
"RTN","KMPDUTL",116,0)
 ;;KMPDUG1^2.0
"RTN","KMPDUTL",117,0)
 ;;KMPDUG2^2.0
"RTN","KMPDUTL",118,0)
 ;;KMPDUGV^2.0
"RTN","KMPDUTL",119,0)
 ;;KMPDUT^2.0
"RTN","KMPDUTL",120,0)
 ;;KMPDUT1^2.0^**4**
"RTN","KMPDUTL",121,0)
 ;;KMPDUT2^2.0
"RTN","KMPDUTL",122,0)
 ;;KMPDUT4^2.0
"RTN","KMPDUTL",123,0)
 ;;KMPDUT4A^2.0
"RTN","KMPDUTL",124,0)
 ;;KMPDUT4B^2.0
"RTN","KMPDUTL",125,0)
 ;;KMPDUT4C^2.0
"RTN","KMPDUTL",126,0)
 ;;KMPDUT5^2.0
"RTN","KMPDUTL",127,0)
 ;;KMPDUTL^2.0^**1,2,3,4,5,6**
"RTN","KMPDUTL",128,0)
 ;;KMPDUTL1^2.0^**3**
"RTN","KMPDUTL",129,0)
 ;;KMPDUTL2^2.0^**4**
"RTN","KMPDUTL",130,0)
 ;;KMPDUTL3^2.0
"RTN","KMPDUTL",131,0)
 ;;KMPDUTL4^2.0
"RTN","KMPDUTL",132,0)
 ;;KMPDUTL5^2.0
"RTN","KMPDUTL",133,0)
 ;;KMPDUTL6^2.0
"RTN","KMPDUTL",134,0)
 ;;KMPDUTL7^2.0^**2,5**
"RTN","KMPDUTL",135,0)
 ;;KMPDUTL8^2.0^**2**
"VER")
8.0^22.0
"BLD",796,6)
^6
**END**
**END**
