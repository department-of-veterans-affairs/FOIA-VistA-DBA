Released DG*5.3*717 SEQ #635
Extracted from mail message
**KIDS**:DG*5.3*717^

**INSTALL NAME**
DG*5.3*717
"BLD",6642,0)
DG*5.3*717^REGISTRATION^0^3060619^y
"BLD",6642,4,0)
^9.64PA^^
"BLD",6642,"KRN",0)
^9.67PA^8989.52^19
"BLD",6642,"KRN",.4,0)
.4
"BLD",6642,"KRN",.401,0)
.401
"BLD",6642,"KRN",.402,0)
.402
"BLD",6642,"KRN",.403,0)
.403
"BLD",6642,"KRN",.5,0)
.5
"BLD",6642,"KRN",.84,0)
.84
"BLD",6642,"KRN",3.6,0)
3.6
"BLD",6642,"KRN",3.8,0)
3.8
"BLD",6642,"KRN",9.2,0)
9.2
"BLD",6642,"KRN",9.8,0)
9.8
"BLD",6642,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",6642,"KRN",9.8,"NM",1,0)
DGENEGT1^^0^B61320915
"BLD",6642,"KRN",9.8,"NM","B","DGENEGT1",1)

"BLD",6642,"KRN",19,0)
19
"BLD",6642,"KRN",19,"NM",0)
^9.68A^^
"BLD",6642,"KRN",19.1,0)
19.1
"BLD",6642,"KRN",101,0)
101
"BLD",6642,"KRN",409.61,0)
409.61
"BLD",6642,"KRN",771,0)
771
"BLD",6642,"KRN",870,0)
870
"BLD",6642,"KRN",8989.51,0)
8989.51
"BLD",6642,"KRN",8989.52,0)
8989.52
"BLD",6642,"KRN",8994,0)
8994
"BLD",6642,"KRN","B",.4,.4)

"BLD",6642,"KRN","B",.401,.401)

"BLD",6642,"KRN","B",.402,.402)

"BLD",6642,"KRN","B",.403,.403)

"BLD",6642,"KRN","B",.5,.5)

"BLD",6642,"KRN","B",.84,.84)

"BLD",6642,"KRN","B",3.6,3.6)

"BLD",6642,"KRN","B",3.8,3.8)

"BLD",6642,"KRN","B",9.2,9.2)

"BLD",6642,"KRN","B",9.8,9.8)

"BLD",6642,"KRN","B",19,19)

"BLD",6642,"KRN","B",19.1,19.1)

"BLD",6642,"KRN","B",101,101)

"BLD",6642,"KRN","B",409.61,409.61)

"BLD",6642,"KRN","B",771,771)

"BLD",6642,"KRN","B",870,870)

"BLD",6642,"KRN","B",8989.51,8989.51)

"BLD",6642,"KRN","B",8989.52,8989.52)

"BLD",6642,"KRN","B",8994,8994)

"BLD",6642,"QUES",0)
^9.62^^
"BLD",6642,"REQB",0)
^9.611^1^1
"BLD",6642,"REQB",1,0)
DG*5.3*672^2
"BLD",6642,"REQB","B","DG*5.3*672",1)

"MBREQ")
0
"PKG",47,-1)
1^1
"PKG",47,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",47,20,0)
^9.402P^^
"PKG",47,22,0)
^9.49I^1^1
"PKG",47,22,1,0)
5.3^2930813^2960613
"PKG",47,22,1,"PAH",1,0)
717^3060619
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","DGENEGT1")
0^1^B61320915^B56378610
"RTN","DGENEGT1",1,0)
DGENEGT1 ;ALB/KCL,ISA/KWP,LBD,RGL,BRM - Enrollment Group Threshold API's ; 7/28/04 12:54pm
"RTN","DGENEGT1",2,0)
 ;;5.3;Registration;**232,417,454,491,513,451,564,672,717**;Aug 13, 1993
"RTN","DGENEGT1",3,0)
 ;
"RTN","DGENEGT1",4,0)
 ;
"RTN","DGENEGT1",5,0)
NOTIFY(DGEGT,OLDEGT) ;
"RTN","DGENEGT1",6,0)
 ; Description: This is used to send a message to local mail group.
"RTN","DGENEGT1",7,0)
 ; The notification is used to communicate changes in the Enrollment
"RTN","DGENEGT1",8,0)
 ; Group Threshold (EGT) setting to users at the local site.
"RTN","DGENEGT1",9,0)
 ;
"RTN","DGENEGT1",10,0)
 ;  Input:
"RTN","DGENEGT1",11,0)
 ;    DGEGT - the new Enrollment Group Threshold array, passed by reference
"RTN","DGENEGT1",12,0)
 ;   OLDEGT - the previous Enrollment Group Threshold array, passed by reference
"RTN","DGENEGT1",13,0)
 ;
"RTN","DGENEGT1",14,0)
 ; Output: None
"RTN","DGENEGT1",15,0)
 ;
"RTN","DGENEGT1",16,0)
 N TEXT,XMDUN,XMDUZ,XMTEXT,XMROU,XMSTRIP,XMSUB,XMY,XMZ,OLDPRI
"RTN","DGENEGT1",17,0)
 ;
"RTN","DGENEGT1",18,0)
 ; init subject and sender
"RTN","DGENEGT1",19,0)
 S XMSUB="Enrollment Group Threshold (EGT) Changed"
"RTN","DGENEGT1",20,0)
 S (XMDUN,XMDUZ)="Registration Enrollment Module"
"RTN","DGENEGT1",21,0)
 ;
"RTN","DGENEGT1",22,0)
 ; recipient
"RTN","DGENEGT1",23,0)
 S XMY("G.DGEN EGT UPDATES")=""
"RTN","DGENEGT1",24,0)
 ;
"RTN","DGENEGT1",25,0)
 ; get old EGT priority
"RTN","DGENEGT1",26,0)
 S OLDPRI=$G(OLDEGT("PRIORITY"))
"RTN","DGENEGT1",27,0)
 ;
"RTN","DGENEGT1",28,0)
 S XMTEXT="TEXT("
"RTN","DGENEGT1",29,0)
 S TEXT(1)="The Secretary of the VA has officially changed the enrollment priority"
"RTN","DGENEGT1",30,0)
 S TEXT(2)="grouping of veterans who shall receive care.  This change may place"
"RTN","DGENEGT1",31,0)
 S TEXT(3)="veterans under your facilities care into a 'Not Enrolled' category."
"RTN","DGENEGT1",32,0)
 S TEXT(4)=""
"RTN","DGENEGT1",33,0)
 S TEXT(5)=""
"RTN","DGENEGT1",34,0)
 S TEXT(6)="           Prior EGT Priority:  "_$S($G(OLDPRI):$$EXTERNAL^DILFD(27.16,.02,"F",OLDPRI),1:"N/A")_$S($G(OLDEGT("SUBGRP")):$$EXTERNAL^DILFD(27.16,.03,"F",OLDEGT("SUBGRP")),1:"")
"RTN","DGENEGT1",35,0)
 S TEXT(7)=""
"RTN","DGENEGT1",36,0)
 S TEXT(8)=""
"RTN","DGENEGT1",37,0)
 S TEXT(9)="  New Enrollment Group Threshold (EGT) Settings:"
"RTN","DGENEGT1",38,0)
 S TEXT(10)=""
"RTN","DGENEGT1",39,0)
 S TEXT(11)="                 EGT Priority:  "_$$EXTERNAL^DILFD(27.16,.02,"F",DGEGT("PRIORITY"))_$S($G(DGEGT("SUBGRP")):$$EXTERNAL^DILFD(27.16,.03,"F",DGEGT("SUBGRP")),1:"")
"RTN","DGENEGT1",40,0)
 S TEXT(12)="                     EGT Type:  "_$$EXTERNAL^DILFD(27.16,.04,"F",DGEGT("TYPE"))
"RTN","DGENEGT1",41,0)
 S TEXT(13)="           EGT Effective Date:  "_$$EXTERNAL^DILFD(27.16,.01,"F",DGEGT("EFFDATE"))
"RTN","DGENEGT1",42,0)
 ;
"RTN","DGENEGT1",43,0)
 ; mailman deliverey
"RTN","DGENEGT1",44,0)
 D ^XMD
"RTN","DGENEGT1",45,0)
 ;
"RTN","DGENEGT1",46,0)
 Q
"RTN","DGENEGT1",47,0)
 ;
"RTN","DGENEGT1",48,0)
 ;
"RTN","DGENEGT1",49,0)
DISPLAY() ;
"RTN","DGENEGT1",50,0)
 ; Description: Display Enrollment Group Threshold (EGT) settings.
"RTN","DGENEGT1",51,0)
 ;
"RTN","DGENEGT1",52,0)
 N DGEGT
"RTN","DGENEGT1",53,0)
 ;
"RTN","DGENEGT1",54,0)
 W !
"RTN","DGENEGT1",55,0)
 I '$$GET^DGENEGT($$FINDCUR^DGENEGT(),.DGEGT) W !,"Enrollment Group Threshold (EGT) settings not found."
"RTN","DGENEGT1",56,0)
 E  D
"RTN","DGENEGT1",57,0)
 .W !,?3,"Enrollment Group Threshold (EGT) Settings"
"RTN","DGENEGT1",58,0)
 .W !,?3,"========================================="
"RTN","DGENEGT1",59,0)
 .W !
"RTN","DGENEGT1",60,0)
 .W !?5,"Date Entered",?25,": ",$S('$G(DGEGT("ENTERED")):"-none-",1:$$EXTERNAL^DILFD(27.16,.01,"F",DGEGT("ENTERED")))
"RTN","DGENEGT1",61,0)
 .W !?5,"EGT Priority",?25,": ",$S('$G(DGEGT("PRIORITY")):"-none-",1:$$EXTERNAL^DILFD(27.16,.02,"F",DGEGT("PRIORITY")))_$S($G(DGEGT("SUBGRP"))="":"",1:$$EXTERNAL^DILFD(27.16,.03,"F",DGEGT("SUBGRP")))
"RTN","DGENEGT1",62,0)
 .W !?5,"EGT Type",?25,": ",$S($G(DGEGT("TYPE"))="":"-none-",1:$$EXTERNAL^DILFD(27.16,.04,"F",DGEGT("TYPE")))
"RTN","DGENEGT1",63,0)
 .W !?5,"EGT Effective Date",?25,": ",$S('$G(DGEGT("EFFDATE")):"-none-",1:$$EXTERNAL^DILFD(27.16,.05,"F",DGEGT("EFFDATE")))
"RTN","DGENEGT1",64,0)
 ;
"RTN","DGENEGT1",65,0)
 Q
"RTN","DGENEGT1",66,0)
 ;
"RTN","DGENEGT1",67,0)
ABOVE(DPTDFN,ENRPRI,ENRGRP,EGTPRI,EGTGRP,EGTFLG) ;
"RTN","DGENEGT1",68,0)
 ; Description: This function will determine if the enrollment is above
"RTN","DGENEGT1",69,0)
 ; the threshold.
"RTN","DGENEGT1",70,0)
 ;
"RTN","DGENEGT1",71,0)
 ;Input:
"RTN","DGENEGT1",72,0)
 ; DPTDFN - Patient File IEN
"RTN","DGENEGT1",73,0)
 ; ENRPRI - Enrollment Priority
"RTN","DGENEGT1",74,0)
 ; ENRGRP - Enrollment Sub-Group
"RTN","DGENEGT1",75,0)
 ; EGTPRI - EGT Priority (optional) - not used
"RTN","DGENEGT1",76,0)
 ; EGTGRP - EGT Sub-Group (optional) - not used
"RTN","DGENEGT1",77,0)
 ; EGTFLG - Flag to bypass additional EGT type 2 check (optional)
"RTN","DGENEGT1",78,0)
 ;          It is used by $$ABOVE2 to prevent re-entering the
"RTN","DGENEGT1",79,0)
 ;          sub-priority API ($$SUBPRI^DGENELA4)
"RTN","DGENEGT1",80,0)
 ; Output:
"RTN","DGENEGT1",81,0)
 ; Returns 1 if above 0 below. 
"RTN","DGENEGT1",82,0)
 ;
"RTN","DGENEGT1",83,0)
 I $G(ENRGRP)="" S ENRGRP=""
"RTN","DGENEGT1",84,0)
 I $G(ENRPRI)="" S ENRPRI=""
"RTN","DGENEGT1",85,0)
 N ABOVE,EGT,TODAY,X
"RTN","DGENEGT1",86,0)
 I '$$GET^DGENEGT($$FINDCUR^DGENEGT(),.EGT) Q 1
"RTN","DGENEGT1",87,0)
 D NOW^%DTC S TODAY=X
"RTN","DGENEGT1",88,0)
 I TODAY<EGT("EFFDATE") Q 1
"RTN","DGENEGT1",89,0)
 ;
"RTN","DGENEGT1",90,0)
 ;EGT type 2 - Stop New Enrollments
"RTN","DGENEGT1",91,0)
 ; or EGT type 4 - Enrollment Decision (ESP DG*5.3*491)
"RTN","DGENEGT1",92,0)
 I EGT("TYPE")=2!(EGT("TYPE")=4) D  Q ABOVE
"RTN","DGENEGT1",93,0)
 .S ABOVE=0
"RTN","DGENEGT1",94,0)
 .I ENRPRI<7 D  Q
"RTN","DGENEGT1",95,0)
 ..I ENRPRI'>EGT("PRIORITY") S ABOVE=1 Q
"RTN","DGENEGT1",96,0)
 .;do check for priorities 7 and 8
"RTN","DGENEGT1",97,0)
 .I ENRPRI<EGT("PRIORITY") S ABOVE=1 Q
"RTN","DGENEGT1",98,0)
 .I ENRGRP'>EGT("SUBGRP") S ABOVE=1 Q
"RTN","DGENEGT1",99,0)
 .I $$OVRRIDE(.DPTDFN,.EGT) S ABOVE=1
"RTN","DGENEGT1",100,0)
 ;
"RTN","DGENEGT1",101,0)
 ;EGT types 1 & 3
"RTN","DGENEGT1",102,0)
 ;do check for priorities 7 and 8
"RTN","DGENEGT1",103,0)
 I ENRPRI>6&(ENRPRI=EGT("PRIORITY")) S ABOVE=0 D  Q ABOVE
"RTN","DGENEGT1",104,0)
 .I ENRGRP'>(EGT("SUBGRP")) S ABOVE=1
"RTN","DGENEGT1",105,0)
 I ENRPRI'>(EGT("PRIORITY")) Q 1
"RTN","DGENEGT1",106,0)
 Q 0
"RTN","DGENEGT1",107,0)
 ;
"RTN","DGENEGT1",108,0)
ABOVE2(DPTDFN,ENRDT,PRIORITY,SUBGRP) ;
"RTN","DGENEGT1",109,0)
 ;
"RTN","DGENEGT1",110,0)
 ; Input: DPTDFN    - Patient File IEN
"RTN","DGENEGT1",111,0)
 ;        ENRDT     - enrollment effective date
"RTN","DGENEGT1",112,0)
 ;        PRIORITY  - enrollment priority
"RTN","DGENEGT1",113,0)
 ;        SUBGRP    - enrollment sub-priority (internal numeric value)
"RTN","DGENEGT1",114,0)
 ;
"RTN","DGENEGT1",115,0)
 ; Output: 1 or 0 for above or below EGT threshold
"RTN","DGENEGT1",116,0)
 ;
"RTN","DGENEGT1",117,0)
 N ABOVE,TODAY,X,EGT
"RTN","DGENEGT1",118,0)
 S ABOVE=1
"RTN","DGENEGT1",119,0)
 S:'$G(SUBGRP) SUBGRP=""
"RTN","DGENEGT1",120,0)
 S:'$G(PRIORITY) PRIORITY=""
"RTN","DGENEGT1",121,0)
 S:'$G(ENRDT) ENRDT=""
"RTN","DGENEGT1",122,0)
 D NOW^%DTC S TODAY=X
"RTN","DGENEGT1",123,0)
 Q:'$$GET^DGENEGT($$FINDCUR^DGENEGT(ENRDT),.EGT) 1
"RTN","DGENEGT1",124,0)
 Q:'$G(EGT("EFFDATE")) 1
"RTN","DGENEGT1",125,0)
 Q:TODAY<EGT("EFFDATE") 1
"RTN","DGENEGT1",126,0)
 Q:EGT("TYPE")#2 $$ABOVE(DPTDFN,PRIORITY,SUBGRP,"","",1)  ;If EGT type 1 or 3
"RTN","DGENEGT1",127,0)
 I '$$ABOVE(DPTDFN,PRIORITY,SUBGRP,"","",1) Q 0
"RTN","DGENEGT1",128,0)
 Q ABOVE
"RTN","DGENEGT1",129,0)
 ;
"RTN","DGENEGT1",130,0)
OVRRIDE(DPTDFN,EGT) ;check for previous EGT override by HEC and new rules
"RTN","DGENEGT1",131,0)
 N CVDT,ENRCAT,ENRDT,EGTENR,ENRIEN,DGPAT,STOP,CUR,CE
"RTN","DGENEGT1",132,0)
 S (STOP,CUR)=0
"RTN","DGENEGT1",133,0)
 I '$$GET^DGENELA(DPTDFN,.DGPAT) Q 0  ;Get current Patient file data
"RTN","DGENEGT1",134,0)
 ; Find most recent enrollment record
"RTN","DGENEGT1",135,0)
 S ENRIEN=$$FINDCUR^DGENA(.DPTDFN)
"RTN","DGENEGT1",136,0)
 F  Q:STOP!CUR  D
"RTN","DGENEGT1",137,0)
 .I 'ENRIEN S STOP=1 Q  ;cannot check if no current enrollment
"RTN","DGENEGT1",138,0)
 .I '$$GET^DGENA(ENRIEN,.EGTENR) S STOP=1 Q  ;need enr info to proceed
"RTN","DGENEGT1",139,0)
 .S ENRIEN=$$FINDPRI^DGENA(ENRIEN)
"RTN","DGENEGT1",140,0)
 .; If status is Pending, Deceased, Not Eligible, or Not Applicable
"RTN","DGENEGT1",141,0)
 .; ignore record and get previous
"RTN","DGENEGT1",142,0)
 .I "^6^15^16^17^18^19^20^21^23^"[(U_EGTENR("STATUS")_U) Q
"RTN","DGENEGT1",143,0)
 .S CUR=1
"RTN","DGENEGT1",144,0)
 I STOP Q 0
"RTN","DGENEGT1",145,0)
 S ENRDT=$$EDATE($G(EGTENR("APP")),$G(EGTENR("EFFDATE"))) S:'ENRDT ENRDT=DT
"RTN","DGENEGT1",146,0)
 S ENRCAT=$P($G(^DGEN(27.15,+EGTENR("STATUS"),0)),"^",2)
"RTN","DGENEGT1",147,0)
 ; If enrollment status was overridden at HEC, then cont. enroll.
"RTN","DGENEGT1",148,0)
 I EGTENR("SOURCE")=2,ENRDT'<EGT("EFFDATE"),ENRCAT="E" Q 1
"RTN","DGENEGT1",149,0)
 ; If status is Rejected or Cancelled/Declined, quit (no cont. enroll.)
"RTN","DGENEGT1",150,0)
 I "^4^7^11^12^13^22^"[(U_EGTENR("STATUS")_U) Q 0
"RTN","DGENEGT1",151,0)
 ; If Application Date or Effective Date of Change are prior to the
"RTN","DGENEGT1",152,0)
 ; EGT Effective Date then cont. enroll.
"RTN","DGENEGT1",153,0)
 I ENRDT<EGT("EFFDATE") Q 1
"RTN","DGENEGT1",154,0)
 ; If Enrollment Record is Verified, and meets one of the special CE
"RTN","DGENEGT1",155,0)
 ; rules, then cont. enroll.
"RTN","DGENEGT1",156,0)
 I ENRCAT="E" S CE=$$RULES(DPTDFN,.EGTENR,.EGT,.DGPAT) I CE Q CE>0
"RTN","DGENEGT1",157,0)
 ; Check previous enrollment records for Application Date/Effective
"RTN","DGENEGT1",158,0)
 ; Date and special CE rules
"RTN","DGENEGT1",159,0)
 S (STOP,CE)=0
"RTN","DGENEGT1",160,0)
 F  Q:STOP  D
"RTN","DGENEGT1",161,0)
 .I 'ENRIEN S STOP=1 Q  ;cannot check if no current enrollment
"RTN","DGENEGT1",162,0)
 .I '$$GET^DGENA(ENRIEN,.EGTENR) S STOP=1 Q  ;need enr info to proceed
"RTN","DGENEGT1",163,0)
 .S ENRIEN=$$FINDPRI^DGENA(ENRIEN)
"RTN","DGENEGT1",164,0)
 .; If status is Pending, Deceased, Not Eligible; Ineligible Date,
"RTN","DGENEGT1",165,0)
 .; or Not Applicable ignore record and get previous
"RTN","DGENEGT1",166,0)
 .I "^6^15^16^17^18^19^20^21^23^"[(U_EGTENR("STATUS")_U) Q
"RTN","DGENEGT1",167,0)
 .S ENRDT=$$EDATE($G(EGTENR("APP")),$G(EGTENR("EFFDATE"))) S:'ENRDT ENRDT=DT
"RTN","DGENEGT1",168,0)
 .S ENRCAT=$P($G(^DGEN(27.15,+EGTENR("STATUS"),0)),"^",2)
"RTN","DGENEGT1",169,0)
 .; If Application Date or Effective Date of Change are prior to the
"RTN","DGENEGT1",170,0)
 .; EGT Effective Date then cont. enroll.
"RTN","DGENEGT1",171,0)
 .I ENRDT<EGT("EFFDATE") S (STOP,CE)=1 Q
"RTN","DGENEGT1",172,0)
 .; If Enrollment Record is Verified, and meets one of the special CE
"RTN","DGENEGT1",173,0)
 .; rules, then cont. enroll.
"RTN","DGENEGT1",174,0)
 .I ENRCAT="E" S CE=$$RULES(DPTDFN,.EGTENR,.EGT,.DGPAT) I CE S STOP=1,CE=CE>0 Q
"RTN","DGENEGT1",175,0)
 Q CE
"RTN","DGENEGT1",176,0)
 ;
"RTN","DGENEGT1",177,0)
RULES(DPTDFN,EGTENR,EGT,DGPAT) ;check for new cont enrollment rules (DG*5.3*672)
"RTN","DGENEGT1",178,0)
 N RTN
"RTN","DGENEGT1",179,0)
 ; If veteran ever had a verified enrollment with SC 10%+ and is now
"RTN","DGENEGT1",180,0)
 ; SC 0% non-compensable then cont. enroll
"RTN","DGENEGT1",181,0)
 I EGTENR("ELIG","VACKAMT")&(EGTENR("ELIG","SCPER")>9)&(DGPAT("SCPER")=0)&(DGPAT("VACKAMT")'>0) Q 1
"RTN","DGENEGT1",182,0)
 ; If veteran ever had a verified enrollment with one of these
"RTN","DGENEGT1",183,0)
 ; eligibilities then cont. enroll:  AA, HB, VA Pension
"RTN","DGENEGT1",184,0)
 I EGTENR("ELIG","VACKAMT")&((EGTENR("ELIG","A&A")="Y")!(EGTENR("ELIG","HB")="Y")!(EGTENR("ELIG","VAPEN")="Y")) Q 1
"RTN","DGENEGT1",185,0)
 ; If AO Exposure Location = Korean DMZ prior to ESR implementation,
"RTN","DGENEGT1",186,0)
 ; then cont. enroll.
"RTN","DGENEGT1",187,0)
 ; **** NOTE: For patch DG*5.3*672 the ESR implementation date will
"RTN","DGENEGT1",188,0)
 ; be set to 12/29/2040.  This will be changed to the actual ESR
"RTN","DGENEGT1",189,0)
 ; implementation date in a later patch.
"RTN","DGENEGT1",190,0)
 I DGPAT("AO")="Y" D  I $G(RTN) Q RTN
"RTN","DGENEGT1",191,0)
 .I $S($D(EGTENR("ELIG","AOEXPLOC")):EGTENR("ELIG","AOEXPLOC"),1:DGPAT("AOEXPLOC"))="K",EGTENR("EFFDATE"),EGTENR("EFFDATE")<3401229 S RTN=1
"RTN","DGENEGT1",192,0)
 ; If combat vet end date is before application date, cont. enroll
"RTN","DGENEGT1",193,0)
 I $G(EGTENR("ELIG","CVELEDT"))'<ENRDT Q 1
"RTN","DGENEGT1",194,0)
 ; If veteran is enrolled due to MT status or Medicaid, cont. enroll
"RTN","DGENEGT1",195,0)
 ; UNLESS first verified enrollment record is due to MT status or
"RTN","DGENEGT1",196,0)
 ; Medicaid and the primary MT of that income year was changed to a
"RTN","DGENEGT1",197,0)
 ; status that would not enroll (e.g. due to IVM converted test,
"RTN","DGENEGT1",198,0)
 ; Hardship removal, or Medicaid removal).
"RTN","DGENEGT1",199,0)
 I ((EGTENR("PRIORITY")=7)&("^2^16^"[(U_EGTENR("ELIG","MTSTA")_U)))!((EGTENR("PRIORITY")=5)&((EGTENR("ELIG","MTSTA")=4)!(EGTENR("ELIG","MEDICAID")=1))) S RTN=1 D  Q RTN
"RTN","DGENEGT1",200,0)
 .N ENIEN,ENR,MTDT,MTIEN
"RTN","DGENEGT1",201,0)
 .S ENIEN=0 F  S ENIEN=$O(^DGEN(27.11,"C",+DPTDFN,ENIEN)) Q:'ENIEN  I $P($G(^DGEN(27.11,+ENIEN,0)),U,4)=2 D  Q
"RTN","DGENEGT1",202,0)
 ..I '$$GET^DGENA(ENIEN,.ENR) Q
"RTN","DGENEGT1",203,0)
 ..I ((ENR("PRIORITY")=7)&("^2^16^"[(U_ENR("ELIG","MTSTA")_U)))!((ENR("PRIORITY")=5)&(ENR("ELIG","VAPEN")'="Y")&((ENR("ELIG","MTSTA")=4)!(ENR("ELIG","MEDICAID")=1))) D
"RTN","DGENEGT1",204,0)
 ...S MTDT=$E(ENR("APP"),1,3)_"1231",MTIEN=$$LST^DGMTU(MTDT) Q:'MTIEN
"RTN","DGENEGT1",205,0)
 ...I $P($G(^DGMT(408.31,MTIEN,0)),U,3)=6 S RTN=-1
"RTN","DGENEGT1",206,0)
 Q 0
"RTN","DGENEGT1",207,0)
 ;
"RTN","DGENEGT1",208,0)
EDATE(APP,EFF) ; Compare the Application Date and Effective Date and
"RTN","DGENEGT1",209,0)
 ; return the earlier date
"RTN","DGENEGT1",210,0)
 N EDT
"RTN","DGENEGT1",211,0)
 S APP=$G(APP),EFF=$G(EFF)
"RTN","DGENEGT1",212,0)
 S EDT=APP I 'EDT S EDT=EFF Q EDT
"RTN","DGENEGT1",213,0)
 I EFF S:EFF<EDT EDT=EFF
"RTN","DGENEGT1",214,0)
 Q EDT
"VER")
8.0^22.0
"BLD",6642,6)
^635
**END**
**END**
