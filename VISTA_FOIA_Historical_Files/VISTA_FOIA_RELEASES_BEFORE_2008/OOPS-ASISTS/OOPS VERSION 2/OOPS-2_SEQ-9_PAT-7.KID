Released OOPS*2*7 SEQ #9
Extracted from mail message
**KIDS**:OOPS*2.0*7^

**INSTALL NAME**
OOPS*2.0*7
"BLD",5878,0)
OOPS*2.0*7^ASISTS^0^3050201^y
"BLD",5878,1,0)
^^3^3^3041227^^^
"BLD",5878,1,1,0)
This build contains enhancements requested by the ASISTS TAG to implement
"BLD",5878,1,2,0)
the Occupational Safety and Health Administration (OSHA 300) Log and minor
"BLD",5878,1,3,0)
bug fixes and NOIS.
"BLD",5878,4,0)
^9.64PA^2262.7^4
"BLD",5878,4,2260,0)
2260
"BLD",5878,4,2260,2,0)
^9.641^2260^2
"BLD",5878,4,2260,2,2260,0)
ASISTS ACCIDENT REPORTING  (File-top level)
"BLD",5878,4,2260,2,2260,1,0)
^9.6411^88^16
"BLD",5878,4,2260,2,2260,1,4,0)
DATE/TIME OF OCCURRENCE
"BLD",5878,4,2260,2,2260,1,88,0)
INCLUDE ON OSHA LOG
"BLD",5878,4,2260,2,2260,1,333,0)
DATE OF DEATH
"BLD",5878,4,2260,2,2260,1,334,0)
ILLNESS TYPE
"BLD",5878,4,2260,2,2260,1,335,0)
TIME WORK BEGAN
"BLD",5878,4,2260,2,2260,1,336,0)
HIRE DATE
"BLD",5878,4,2260,2,2260,1,337,0)
PRIVACY CASE
"BLD",5878,4,2260,2,2260,1,338,0)
NON VA ER TREATMENT RCVD
"BLD",5878,4,2260,2,2260,1,339,0)
HOSPITALIZED AS INPATIENT
"BLD",5878,4,2260,2,2260,1,340,0)
TREATING PHYSICIAN
"BLD",5878,4,2260,2,2260,1,341,0)
TREATED AT DIFFERENT FACILITY
"BLD",5878,4,2260,2,2260,1,342,0)
OTHER FACILITY NAME
"BLD",5878,4,2260,2,2260,1,343,0)
OTHER FACILITY STREET
"BLD",5878,4,2260,2,2260,1,344,0)
OTHER FACILITY CITY
"BLD",5878,4,2260,2,2260,1,345,0)
OTHER FACILITY STATE
"BLD",5878,4,2260,2,2260,1,346,0)
OTHER FACILITY ZIP
"BLD",5878,4,2260,2,2260.095,0)
INCIDENT OUTCOME  (sub-file)
"BLD",5878,4,2260,2,2260.095,1,0)
^9.6411^^
"BLD",5878,4,2260,222)
y^n^p^^^^n^^n
"BLD",5878,4,2260,224)

"BLD",5878,4,2262,0)
2262
"BLD",5878,4,2262,2,0)
^9.641^2262.315^2
"BLD",5878,4,2262,2,2262.03,0)
STATION  (sub-file)
"BLD",5878,4,2262,2,2262.03,1,0)
^9.6411^13^7
"BLD",5878,4,2262,2,2262.03,1,7,0)
SAFETY OFFICER
"BLD",5878,4,2262,2,2262.03,1,8,0)
SAFETY OFFICER TITLE
"BLD",5878,4,2262,2,2262.03,1,9,0)
SAFETY OFFICER PHONE NUMBER
"BLD",5878,4,2262,2,2262.03,1,10,0)
SAFTEY OFFICER PHONE EXTENSION
"BLD",5878,4,2262,2,2262.03,1,11,0)
OSHA 300 INDUSTRY DESCRIPTION
"BLD",5878,4,2262,2,2262.03,1,12,0)
STAND INDUSTRIAL CLASS (SIC)
"BLD",5878,4,2262,2,2262.03,1,13,0)
N.A. INDUSTRIAL CLASS (NAICS)
"BLD",5878,4,2262,2,2262.315,0)
OSHA MONTH/YEAR  (sub-file)
"BLD",5878,4,2262,2,2262.315,1,0)
^9.6411^^
"BLD",5878,4,2262,222)
y^n^p^^^^n^^n
"BLD",5878,4,2262,224)

"BLD",5878,4,2262.6,0)
2262.6
"BLD",5878,4,2262.6,222)
y^n^f^^y^^y^o^n
"BLD",5878,4,2262.7,0)
2262.7
"BLD",5878,4,2262.7,222)
y^n^f^^y^^y^o^n
"BLD",5878,4,"APDD",2260,2260)

"BLD",5878,4,"APDD",2260,2260,4)

"BLD",5878,4,"APDD",2260,2260,88)

"BLD",5878,4,"APDD",2260,2260,333)

"BLD",5878,4,"APDD",2260,2260,334)

"BLD",5878,4,"APDD",2260,2260,335)

"BLD",5878,4,"APDD",2260,2260,336)

"BLD",5878,4,"APDD",2260,2260,337)

"BLD",5878,4,"APDD",2260,2260,338)

"BLD",5878,4,"APDD",2260,2260,339)

"BLD",5878,4,"APDD",2260,2260,340)

"BLD",5878,4,"APDD",2260,2260,341)

"BLD",5878,4,"APDD",2260,2260,342)

"BLD",5878,4,"APDD",2260,2260,343)

"BLD",5878,4,"APDD",2260,2260,344)

"BLD",5878,4,"APDD",2260,2260,345)

"BLD",5878,4,"APDD",2260,2260,346)

"BLD",5878,4,"APDD",2260,2260.095)

"BLD",5878,4,"APDD",2262,2262.03)

"BLD",5878,4,"APDD",2262,2262.03,7)

"BLD",5878,4,"APDD",2262,2262.03,8)

"BLD",5878,4,"APDD",2262,2262.03,9)

"BLD",5878,4,"APDD",2262,2262.03,10)

"BLD",5878,4,"APDD",2262,2262.03,11)

"BLD",5878,4,"APDD",2262,2262.03,12)

"BLD",5878,4,"APDD",2262,2262.03,13)

"BLD",5878,4,"APDD",2262,2262.315)

"BLD",5878,4,"B",2260,2260)

"BLD",5878,4,"B",2262,2262)

"BLD",5878,4,"B",2262.6,2262.6)

"BLD",5878,4,"B",2262.7,2262.7)

"BLD",5878,"ABPKG")
n
"BLD",5878,"INID")
^n
"BLD",5878,"INIT")
OOPSXV27
"BLD",5878,"KRN",0)
^9.67PA^8989.52^19
"BLD",5878,"KRN",.4,0)
.4
"BLD",5878,"KRN",.401,0)
.401
"BLD",5878,"KRN",.402,0)
.402
"BLD",5878,"KRN",.403,0)
.403
"BLD",5878,"KRN",.5,0)
.5
"BLD",5878,"KRN",.84,0)
.84
"BLD",5878,"KRN",3.6,0)
3.6
"BLD",5878,"KRN",3.6,"NM",0)
^9.68A^^0
"BLD",5878,"KRN",3.8,0)
3.8
"BLD",5878,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",5878,"KRN",9.2,0)
9.2
"BLD",5878,"KRN",9.8,0)
9.8
"BLD",5878,"KRN",9.8,"NM",0)
^9.68A^17^15
"BLD",5878,"KRN",9.8,"NM",1,0)
OOPSGUIC^^0^B58713036
"BLD",5878,"KRN",9.8,"NM",2,0)
OOPSGUI6^^0^B53278536
"BLD",5878,"KRN",9.8,"NM",3,0)
OOPSGUI8^^0^B32088285
"BLD",5878,"KRN",9.8,"NM",4,0)
OOPSGUI9^^0^B49823506
"BLD",5878,"KRN",9.8,"NM",5,0)
OOPSGUI4^^0^B52094006
"BLD",5878,"KRN",9.8,"NM",6,0)
OOPSGUI5^^0^B69696851
"BLD",5878,"KRN",9.8,"NM",8,0)
OOPSUTL4^^0^B55894258
"BLD",5878,"KRN",9.8,"NM",9,0)
OOPSGUI1^^0^B35119868
"BLD",5878,"KRN",9.8,"NM",10,0)
OOPSGUI3^^0^B47210359
"BLD",5878,"KRN",9.8,"NM",11,0)
OOPSGUIF^^0^B24447364
"BLD",5878,"KRN",9.8,"NM",12,0)
OOPSGUIT^^0^B78883010
"BLD",5878,"KRN",9.8,"NM",14,0)
OOPSGUIR^^0^B42553043
"BLD",5878,"KRN",9.8,"NM",15,0)
OOPSGUI7^^0^B29220356
"BLD",5878,"KRN",9.8,"NM",16,0)
OOPSGUI0^^0^B41861346
"BLD",5878,"KRN",9.8,"NM",17,0)
OOPSDOL1^^0^B66731874
"BLD",5878,"KRN",9.8,"NM","B","OOPSDOL1",17)

"BLD",5878,"KRN",9.8,"NM","B","OOPSGUI0",16)

"BLD",5878,"KRN",9.8,"NM","B","OOPSGUI1",9)

"BLD",5878,"KRN",9.8,"NM","B","OOPSGUI3",10)

"BLD",5878,"KRN",9.8,"NM","B","OOPSGUI4",5)

"BLD",5878,"KRN",9.8,"NM","B","OOPSGUI5",6)

"BLD",5878,"KRN",9.8,"NM","B","OOPSGUI6",2)

"BLD",5878,"KRN",9.8,"NM","B","OOPSGUI7",15)

"BLD",5878,"KRN",9.8,"NM","B","OOPSGUI8",3)

"BLD",5878,"KRN",9.8,"NM","B","OOPSGUI9",4)

"BLD",5878,"KRN",9.8,"NM","B","OOPSGUIC",1)

"BLD",5878,"KRN",9.8,"NM","B","OOPSGUIF",11)

"BLD",5878,"KRN",9.8,"NM","B","OOPSGUIR",14)

"BLD",5878,"KRN",9.8,"NM","B","OOPSGUIT",12)

"BLD",5878,"KRN",9.8,"NM","B","OOPSUTL4",8)

"BLD",5878,"KRN",19,0)
19
"BLD",5878,"KRN",19,"NM",0)
^9.68A^17^1
"BLD",5878,"KRN",19,"NM",17,0)
OOPS GUI EMPLOYEE^^0
"BLD",5878,"KRN",19,"NM","B","OOPS GUI EMPLOYEE",17)

"BLD",5878,"KRN",19.1,0)
19.1
"BLD",5878,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",5878,"KRN",101,0)
101
"BLD",5878,"KRN",409.61,0)
409.61
"BLD",5878,"KRN",771,0)
771
"BLD",5878,"KRN",870,0)
870
"BLD",5878,"KRN",8989.51,0)
8989.51
"BLD",5878,"KRN",8989.52,0)
8989.52
"BLD",5878,"KRN",8994,0)
8994
"BLD",5878,"KRN",8994,"NM",0)
^9.68A^4^4
"BLD",5878,"KRN",8994,"NM",1,0)
OOPS GET SITE PARAMETER^^0
"BLD",5878,"KRN",8994,"NM",2,0)
OOPS CREATE AMENDMENT^^0
"BLD",5878,"KRN",8994,"NM",3,0)
OOPS EDIT SITEPAR STATION^^0
"BLD",5878,"KRN",8994,"NM",4,0)
OOPS SET OSHA300A^^0
"BLD",5878,"KRN",8994,"NM","B","OOPS CREATE AMENDMENT",2)

"BLD",5878,"KRN",8994,"NM","B","OOPS EDIT SITEPAR STATION",3)

"BLD",5878,"KRN",8994,"NM","B","OOPS GET SITE PARAMETER",1)

"BLD",5878,"KRN",8994,"NM","B","OOPS SET OSHA300A",4)

"BLD",5878,"KRN","B",.4,.4)

"BLD",5878,"KRN","B",.401,.401)

"BLD",5878,"KRN","B",.402,.402)

"BLD",5878,"KRN","B",.403,.403)

"BLD",5878,"KRN","B",.5,.5)

"BLD",5878,"KRN","B",.84,.84)

"BLD",5878,"KRN","B",3.6,3.6)

"BLD",5878,"KRN","B",3.8,3.8)

"BLD",5878,"KRN","B",9.2,9.2)

"BLD",5878,"KRN","B",9.8,9.8)

"BLD",5878,"KRN","B",19,19)

"BLD",5878,"KRN","B",19.1,19.1)

"BLD",5878,"KRN","B",101,101)

"BLD",5878,"KRN","B",409.61,409.61)

"BLD",5878,"KRN","B",771,771)

"BLD",5878,"KRN","B",870,870)

"BLD",5878,"KRN","B",8989.51,8989.51)

"BLD",5878,"KRN","B",8989.52,8989.52)

"BLD",5878,"KRN","B",8994,8994)

"BLD",5878,"QUES",0)
^9.62^^
"BLD",5878,"REQB",0)
^9.611^1^1
"BLD",5878,"REQB",1,0)
OOPS*2.0*8^2
"BLD",5878,"REQB","B","OOPS*2.0*8",1)

"DATA",2262.6,1,0)
8011^Primary Care Medical Clinics
"DATA",2262.6,2,0)
8021^Clinics of Dentists
"DATA",2262.6,3,0)
8042^Offices & Clinics of Optometrists
"DATA",2262.6,4,0)
8049^Audiologists Offices (e.g. Clinics & centers)
"DATA",2262.6,5,0)
8051^Skilled Nursing Care Facilities
"DATA",2262.6,6,0)
8059^Domiciliary Care with health Care
"DATA",2262.6,7,0)
8062^General Medical and Surgical Hospitals
"DATA",2262.6,8,0)
8063^Psychiatric Hospitals
"DATA",2262.6,9,0)
8072^Dental Laboratories
"DATA",2262.6,10,0)
8093^Outpatient Mental Health Clinics
"DATA",2262.6,11,0)
6553^Cemetery
"DATA",2262.7,1,0)
621493^Ambulatory Surgical Centers (Freestanding)
"DATA",2262.7,2,0)
621111^Offices of Physician (except Mental Health Specialist)
"DATA",2262.7,3,0)
621112^Off. of Physicians, Mental Hlth Special Prim Care Clinics
"DATA",2262.7,4,0)
621210^Dentists' offices (e.g. centers, clinics)
"DATA",2262.7,5,0)
621320^Offices of Optometrists
"DATA",2262.7,6,0)
621340^Offices of Phy., Occ Speech Therapists, & Audiologists
"DATA",2262.7,7,0)
623110^Nursing Care Facilities (Part)
"DATA",2262.7,8,0)
623311^Continuing Care Retirement Communities
"DATA",2262.7,9,0)
622110^General Medical & Surgical Hospitals (Part)
"DATA",2262.7,10,0)
622210^Psychiatric and Substance abuse Hospitals (part)
"DATA",2262.7,11,0)
339116^Dental Laboratories
"DATA",2262.7,12,0)
621420^Outpatient Mental Health and Substance abuse Centers
"DATA",2262.7,13,0)
812220^Cemetery
"FIA",2260)
ASISTS ACCIDENT REPORTING
"FIA",2260,0)
^OOPS(2260,
"FIA",2260,0,0)
2260I
"FIA",2260,0,1)
y^n^p^^^^n^^n
"FIA",2260,0,10)

"FIA",2260,0,11)

"FIA",2260,0,"RLRO")

"FIA",2260,0,"VR")
2.0^OOPS
"FIA",2260,2260)
1
"FIA",2260,2260,4)

"FIA",2260,2260,88)

"FIA",2260,2260,95)

"FIA",2260,2260,333)

"FIA",2260,2260,334)

"FIA",2260,2260,335)

"FIA",2260,2260,336)

"FIA",2260,2260,337)

"FIA",2260,2260,338)

"FIA",2260,2260,339)

"FIA",2260,2260,340)

"FIA",2260,2260,341)

"FIA",2260,2260,342)

"FIA",2260,2260,343)

"FIA",2260,2260,344)

"FIA",2260,2260,345)

"FIA",2260,2260,346)

"FIA",2260,2260.095)
0
"FIA",2262)
ASISTS SITE PARAMETER
"FIA",2262,0)
^OOPS(2262,
"FIA",2262,0,0)
2262
"FIA",2262,0,1)
y^n^p^^^^n^^n
"FIA",2262,0,10)

"FIA",2262,0,11)

"FIA",2262,0,"RLRO")

"FIA",2262,0,"VR")
2.0^OOPS
"FIA",2262,2262)
1
"FIA",2262,2262.03)
1
"FIA",2262,2262.03,7)

"FIA",2262,2262.03,8)

"FIA",2262,2262.03,9)

"FIA",2262,2262.03,10)

"FIA",2262,2262.03,11)

"FIA",2262,2262.03,12)

"FIA",2262,2262.03,13)

"FIA",2262,2262.03,15)

"FIA",2262,2262.315)
0
"FIA",2262.6)
ASISTS STANDARD INDUSTRIAL CLASS. (SIC)
"FIA",2262.6,0)
^OOPS(2262.6,
"FIA",2262.6,0,0)
2262.6
"FIA",2262.6,0,1)
y^n^f^^y^^y^o^n
"FIA",2262.6,0,10)

"FIA",2262.6,0,11)

"FIA",2262.6,0,"RLRO")

"FIA",2262.6,0,"VR")
2.0^OOPS
"FIA",2262.6,2262.6)
0
"FIA",2262.7)
ASISTS N.A. INDUSTRIAL CLASSIFICATION (NAICS)
"FIA",2262.7,0)
^OOPS(2262.7,
"FIA",2262.7,0,0)
2262.7
"FIA",2262.7,0,1)
y^n^f^^y^^y^o^n
"FIA",2262.7,0,10)

"FIA",2262.7,0,11)

"FIA",2262.7,0,"RLRO")

"FIA",2262.7,0,"VR")
2.0^OOPS
"FIA",2262.7,2262.7)
0
"INIT")
OOPSXV27
"IX",2260,2260,"AF",0)
2260^AF^Reg Index on fields 4 and 88^R^^R^IR^I^2260^^^^^S
"IX",2260,2260,"AF",1)
S ^OOPS(2260,"AF",X(1),X(2),DA)=""
"IX",2260,2260,"AF",2)
K ^OOPS(2260,"AF",X(1),X(2),DA)
"IX",2260,2260,"AF",2.5)
K ^OOPS(2260,"AF")
"IX",2260,2260,"AF",11.1,0)
^.114IA^2^2
"IX",2260,2260,"AF",11.1,1,0)
1^F^2260^4^^1^F
"IX",2260,2260,"AF",11.1,2,0)
2^F^2260^88^^2^F
"IX",2260,2260.095,"AC",0)
2260.095^AC^S^R^^R^IR^I^2260.095^^^^^S
"IX",2260,2260.095,"AC",1)
S ^OOPS(2260,DA(1),"OUTC","AC",X(1),X(2),DA)=""
"IX",2260,2260.095,"AC",2)
K ^OOPS(2260,DA(1),"OUTC","AC",X(1),X(2),DA)
"IX",2260,2260.095,"AC",2.5)
K ^OOPS(2260,DA(1),"OUTC","AC")
"IX",2260,2260.095,"AC",11.1,0)
^.114IA^2^2
"IX",2260,2260.095,"AC",11.1,1,0)
1^F^2260.095^10^^1^F
"IX",2260,2260.095,"AC",11.1,1,3)

"IX",2260,2260.095,"AC",11.1,2,0)
2^F^2260.095^2^^2^F
"IX",2260,2260.095,"AC",11.1,2,3)

"KRN",19,11205,-1)
0^17
"KRN",19,11205,0)
OOPS GUI EMPLOYEE^ASISTS GUI Employee Menu (Context)^^B^^^^^^^^ASISTS
"KRN",19,11205,1,0)
^19.06^6^6^3041015^^^^
"KRN",19,11205,1,1,0)
This Option is the required menu option for any Employee to be able to 
"KRN",19,11205,1,2,0)
access their menu using ASISTS GUI.
"KRN",19,11205,1,3,0)
 
"KRN",19,11205,1,4,0)
Additionally, this option is used to provide access to the majority of RPC
"KRN",19,11205,1,5,0)
Broker Calls as every user of the ASISTS GUI package should have this menu
"KRN",19,11205,1,6,0)
option assigned to them.
"KRN",19,11205,99.1)
59861,41577
"KRN",19,11205,"RPC",0)
^19.05P^63^63
"KRN",19,11205,"RPC",1,0)
OOPS GET BODY PART
"KRN",19,11205,"RPC",2,0)
OOPS GET POINTED TO
"KRN",19,11205,"RPC",3,0)
OOPS REMOTE GET USER OPTIONS
"KRN",19,11205,"RPC",4,0)
OOPS GET CASE NUMBERS
"KRN",19,11205,"RPC",5,0)
OOPS LOAD OOPS
"KRN",19,11205,"RPC",6,0)
OOPS GET DUPLICATES
"KRN",19,11205,"RPC",7,0)
OOPS NEW PERSON DATA
"KRN",19,11205,"RPC",8,0)
OOPS EMPLOYEE DATA
"KRN",19,11205,"RPC",9,0)
OOPS REPLACE DATE/TIME
"KRN",19,11205,"RPC",10,0)
OOPS GET CKRANGE
"KRN",19,11205,"RPC",11,0)
OOPS GET 2260 DATA
"KRN",19,11205,"RPC",12,0)
OOPS GET WITNESSES
"KRN",19,11205,"RPC",13,0)
OOPS REPLACE WP
"KRN",19,11205,"RPC",14,0)
OOPS DELETE WITNESS
"KRN",19,11205,"RPC",15,0)
OOPS WITNESS CREATE
"KRN",19,11205,"RPC",16,0)
OOPS WITNESS DELETE
"KRN",19,11205,"RPC",17,0)
OOPS WITNESS EDIT
"KRN",19,11205,"RPC",18,0)
OOPS APPROVE SIGN FOR EMPLOYEE
"KRN",19,11205,"RPC",19,0)
OOPS CHANGE CASE STATUS
"KRN",19,11205,"RPC",20,0)
OOPS CREATE AMENDMENT
"KRN",19,11205,"RPC",21,0)
OOPS DELETE SITEP STATION
"KRN",19,11205,"RPC",22,0)
OOPS DELETE SITEPAR STATION
"KRN",19,11205,"RPC",23,0)
OOPS DELETE UNION
"KRN",19,11205,"RPC",24,0)
OOPS EDIT 2260
"KRN",19,11205,"RPC",25,0)
OOPS EDIT SITE PARAMETER
"KRN",19,11205,"RPC",26,0)
OOPS EDIT SITEPAR STATION
"KRN",19,11205,"RPC",27,0)
OOPS GET DATA
"KRN",19,11205,"RPC",28,0)
OOPS GET DEFAULT MD
"KRN",19,11205,"RPC",29,0)
OOPS GET SITE PARAMETER
"KRN",19,11205,"RPC",30,0)
OOPS GET STATION INFORMATION
"KRN",19,11205,"RPC",31,0)
OOPS GET SUPERVISOR
"KRN",19,11205,"RPC",32,0)
OOPS GET UNION
"KRN",19,11205,"RPC",33,0)
OOPS INCIDENT REPORT
"KRN",19,11205,"RPC",34,0)
OOPS MANUAL XMIT DATA
"KRN",19,11205,"RPC",35,0)
OOPS PUT UNION
"KRN",19,11205,"RPC",36,0)
OOPS REPLACE MULTIPLE
"KRN",19,11205,"RPC",37,0)
OOPS SET FIELD
"KRN",19,11205,"RPC",38,0)
OOPS UNION CONSENT
"KRN",19,11205,"RPC",39,0)
OOPS VALIDATE AND SIGN
"KRN",19,11205,"RPC",40,0)
OOPS VALIDATE TIME
"KRN",19,11205,"RPC",41,0)
OOPS WCEDIT
"KRN",19,11205,"RPC",42,0)
OOPS CLEAR SIGNATURE
"KRN",19,11205,"RPC",43,0)
OOPS GET OSHA DATA
"KRN",19,11205,"RPC",44,0)
OOPS GET PRT ACC STATUS RPT
"KRN",19,11205,"RPC",45,0)
OOPS NEEDLESTICK LOG
"KRN",19,11205,"RPC",46,0)
OOPS GET NOI CODE
"KRN",19,11205,"RPC",47,0)
OOPS GET ASISTS CASE
"KRN",19,11205,"RPC",48,0)
OOPS CHECK PAID EMP DATA
"KRN",19,11205,"RPC",49,0)
OOPS RELEASE RECORD LOCK
"KRN",19,11205,"RPC",50,0)
OOPS SET RECORD LOCK
"KRN",19,11205,"RPC",51,0)
OOPS GET SINGLE FIELD
"KRN",19,11205,"RPC",52,0)
OOPS GET INSTITUTIONS
"KRN",19,11205,"RPC",53,0)
OOPS SENSITIVE DATA
"KRN",19,11205,"RPC",54,0)
OOPS GET MISC REPORT DATA
"KRN",19,11205,"RPC",55,0)
OOPS GET FAC SHORT LIST
"KRN",19,11205,"RPC",56,0)
OOPS SELECT CA7
"KRN",19,11205,"RPC",57,0)
OOPS LIST CAS
"KRN",19,11205,"RPC",58,0)
OOPS MULTIPLE DATA
"KRN",19,11205,"RPC",59,0)
OOPS SET DUAL BENEFITS DATA
"KRN",19,11205,"RPC",60,0)
OOPS SIGN CA7
"KRN",19,11205,"RPC",61,0)
OOPS SIGNATURE VALIDATION
"KRN",19,11205,"RPC",62,0)
OOPS ZIP CODE MISMATCH CHECK
"KRN",19,11205,"RPC",63,0)
OOPS SET OSHA300A
"KRN",19,11205,"U")
ASISTS GUI EMPLOYEE MENU (CONT
"KRN",8994,999,-1)
0^2
"KRN",8994,999,0)
OOPS CREATE AMENDMENT^AMEND^OOPSGUI8^1
"KRN",8994,999,1,0)
^^1^1^3011011^
"KRN",8994,999,1,1,0)
Files an Amendment for the selected case in ASISTS.
"KRN",8994,999,2,0)
^8994.02A^1^1
"KRN",8994,999,2,1,0)
SING^1^256^1^1
"KRN",8994,999,2,1,1,0)
^^1^1^3011011^
"KRN",8994,999,2,1,1,1,0)
The IEN of the ASISTS case to have an Amendment created for is passed in.
"KRN",8994,999,2,"B","SING",1)

"KRN",8994,999,2,"PARAMSEQ",1,1)

"KRN",8994,999,3,0)
^^1^1^3011011^
"KRN",8994,999,3,1,0)
The new ASISTS case number is returned.
"KRN",8994,1016,-1)
0^1
"KRN",8994,1016,0)
OOPS GET SITE PARAMETER^SITEPGET^OOPSGUI6^2
"KRN",8994,1016,1,0)
^8994.01^2^2^3040802^^^
"KRN",8994,1016,1,1,0)
This broker call returns the Site Parameter Name, IEN and the DOL District
"KRN",8994,1016,1,2,0)
Office and is used to obtain the entries in the Station multiple.
"KRN",8994,1016,2,0)
^8994.02A^1^1
"KRN",8994,1016,2,1,0)
FORM^1^30^0^1
"KRN",8994,1016,2,"B","FORM",1)

"KRN",8994,1016,2,"PARAMSEQ",1,1)

"KRN",8994,1016,3,0)
^8994.03^2^2^3040802^^
"KRN",8994,1016,3,1,0)
This broker call returns the Site Parameter Name, IEN, and DOL District
"KRN",8994,1016,3,2,0)
Office and is used to obtain the entries in the Station multiple.
"KRN",8994,1020,-1)
0^3
"KRN",8994,1020,0)
OOPS EDIT SITEPAR STATION^SITEPEDT^OOPSGUI6^1
"KRN",8994,1020,1,0)
^8994.01^4^4^3040802^^^^
"KRN",8994,1020,1,1,0)
This broker call will either add a new Station subfile to the Site parameter
"KRN",8994,1020,1,2,0)
file or will allow for editing an existing Station subfile.  If the Station
"KRN",8994,1020,1,3,0)
IEN is passed in the INPUT parameter, the record will be edited.  If a Station
"KRN",8994,1020,1,4,0)
IEN is not passed in the input parameter, a new record will be created.
"KRN",8994,1020,2,0)
^8994.02A^3^3
"KRN",8994,1020,2,1,0)
INPUT^1^256^1^1
"KRN",8994,1020,2,1,1,0)
^^4^4^3011019^
"KRN",8994,1020,2,1,1,1,0)
This parameter (INPUT) contains the required IENs for filing a record.  If the
"KRN",8994,1020,2,1,1,2,0)
Station IEN is passed in the record will be edited, if no Station IEN is
"KRN",8994,1020,2,1,1,3,0)
present, a new Station subrecord will be created.  The format is:
"KRN",8994,1020,2,1,1,4,0)
SITE IEN^SUBFILE #^STATION IEN
"KRN",8994,1020,2,2,0)
DATA^1^256^1^2
"KRN",8994,1020,2,2,1,0)
^^1^1^3011019^
"KRN",8994,1020,2,2,1,1,0)
This parameter contains the data to be filed in the Station subfile.
"KRN",8994,1020,2,3,0)
FORM^1^30^0^3
"KRN",8994,1020,2,"B","DATA",2)

"KRN",8994,1020,2,"B","FORM",3)

"KRN",8994,1020,2,"B","INPUT",1)

"KRN",8994,1020,2,"PARAMSEQ",1,1)

"KRN",8994,1020,2,"PARAMSEQ",2,2)

"KRN",8994,1020,2,"PARAMSEQ",3,3)

"KRN",8994,1020,3,0)
^8994.03^8^8^3040802^^^
"KRN",8994,1020,3,1,0)
This return parameter, RESULTS, contains several messages indicating the 
"KRN",8994,1020,3,2,0)
status of filing the edits made to the Site Parameter file.  These messages
"KRN",8994,1020,3,3,0)
include:
"KRN",8994,1020,3,4,0)
  Missing Record Identifiers, Cannot file
"KRN",8994,1020,3,5,0)
  Missing Station, Cannot continue
"KRN",8994,1020,3,6,0)
  Missing Station, cannot file
"KRN",8994,1020,3,7,0)
  Update Successful
"KRN",8994,1020,3,8,0)
  Update was not Successful
"KRN",8994,1839,-1)
0^4
"KRN",8994,1839,0)
OOPS SET OSHA300A^OSHA300^OOPSGUIC^1
"KRN",8994,1839,2,0)
^8994.02A^2^2
"KRN",8994,1839,2,1,0)
STA^1^20^1^1
"KRN",8994,1839,2,2,0)
DATA^2^100^^2
"KRN",8994,1839,2,"B","DATA",2)

"KRN",8994,1839,2,"B","STA",1)

"KRN",8994,1839,2,"PARAMSEQ",1,1)

"KRN",8994,1839,2,"PARAMSEQ",2,2)

"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",472,-1)
1^1
"PKG",472,0)
ASISTS^OOPS^Automated Safety Incident Surveillance Tracking System
"PKG",472,20,0)
^9.402P^^
"PKG",472,22,0)
^9.49I^1^1
"PKG",472,22,1,0)
2.0^3020709^3030401^66481
"PKG",472,22,1,"PAH",1,0)
7^3050201
"PKG",472,22,1,"PAH",1,1,0)
^^3^3^3050201
"PKG",472,22,1,"PAH",1,1,1,0)
This build contains enhancements requested by the ASISTS TAG to implement
"PKG",472,22,1,"PAH",1,1,2,0)
the Occupational Safety and Health Administration (OSHA 300) Log and minor
"PKG",472,22,1,"PAH",1,1,3,0)
bug fixes and NOIS.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
16
"RTN","OOPSDOL1")
0^17^B66731874
"RTN","OOPSDOL1",1,0)
OOPSDOL1 ;WIOFO/CAH-CA1 EXTRACT FOR DOL ;3/15/00
"RTN","OOPSDOL1",2,0)
 ;;2.0;ASISTS;**4,7**;Jun 03, 2002
"RTN","OOPSDOL1",3,0)
EN ; Entry
"RTN","OOPSDOL1",4,0)
 N OCC,NAME,FN,KK,D62,D123,D124,D126,WITN
"RTN","OOPSDOL1",5,0)
 S OOPSAR("CA")=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA")))
"RTN","OOPSDOL1",6,0)
 S OOPSAR(0)=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,0)))
"RTN","OOPSDOL1",7,0)
 S OOPSAR("CA1A")=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA1A")))
"RTN","OOPSDOL1",8,0)
 S OOPSAR("CA1B")=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA1B")))
"RTN","OOPSDOL1",9,0)
 S OOPSAR("CA1C")=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA1C")))
"RTN","OOPSDOL1",10,0)
 S OOPSAR("CA1D")=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA1D")))
"RTN","OOPSDOL1",11,0)
 S OOPSAR("CA1ES")=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA1ES")))
"RTN","OOPSDOL1",12,0)
 S OOPSAR("CA1F")=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA1F")))
"RTN","OOPSDOL1",13,0)
 S OOPSAR("CA1G")=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA1G")))
"RTN","OOPSDOL1",14,0)
 S OOPSAR("CA1H")=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA1H")))
"RTN","OOPSDOL1",15,0)
 S OOPSAR("CA1I")=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA1I")))
"RTN","OOPSDOL1",16,0)
 S OOPSAR("CA1J")=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA1J",0)))
"RTN","OOPSDOL1",17,0)
 S OOPSAR("CA1K")=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA1K",0)))
"RTN","OOPSDOL1",18,0)
 S OOPSAR("CA1L")=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA1L")))
"RTN","OOPSDOL1",19,0)
 S OOPSAR("CA1M")=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA1M")))
"RTN","OOPSDOL1",20,0)
 S OOPSAR("CA1N")=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA1N")))
"RTN","OOPSDOL1",21,0)
 ; get witness data once
"RTN","OOPSDOL1",22,0)
 S WITN=$O(^OOPS(2260,OOPDA,"CA1W",0))
"RTN","OOPSDOL1",23,0)
 I $G(WITN)'="" D
"RTN","OOPSDOL1",24,0)
 . S OOPSAR("CA1W",0)=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA1W",WITN,0)))
"RTN","OOPSDOL1",25,0)
 . S OOPSAR("CA1W",1)=$$UP^OOPSUTL4($G(^OOPS(2260,OOPDA,"CA1W",WITN,1)))
"RTN","OOPSDOL1",26,0)
OP02 ; Seg OP02
"RTN","OOPSDOL1",27,0)
 K OPX
"RTN","OOPSDOL1",28,0)
 N OFF
"RTN","OOPSDOL1",29,0)
 S OFF=$$GET1^DIQ(2260,OOPDA,"73:1")
"RTN","OOPSDOL1",30,0)
 S OPX="OP02^"_$E("00",$L(OFF)+1,2)_OFF
"RTN","OOPSDOL1",31,0)
 S OPX=OPX_U_$P(OOPSAR("CA1M"),U,1)_U_$P(OOPSAR("CA1M"),U,2)
"RTN","OOPSDOL1",32,0)
 S OPX=OPX_U_$P(OOPSAR("CA1M"),U,3)_U_$$GET1^DIQ(2260,OOPDA,"179:1")
"RTN","OOPSDOL1",33,0)
 S OPX=OPX_U_$E($P(OOPSAR("CA1M"),U,5),1,5)_U_$P(OOPSAR("CA1F"),U,1)
"RTN","OOPSDOL1",34,0)
 S OPX=OPX_U_$P(OOPSAR("CA1F"),U,2)_U_$P(OOPSAR("CA1F"),U,3)
"RTN","OOPSDOL1",35,0)
 S OPX=OPX_U_$$GET1^DIQ(2260,OOPDA,"133:1")_U_$E($P(OOPSAR("CA1F"),U,5),1,5)
"RTN","OOPSDOL1",36,0)
 S OPX=OPX_U_U_U_"^|"
"RTN","OOPSDOL1",37,0)
 D STORE^OOPSDOLX
"RTN","OOPSDOL1",38,0)
OP03 ; Seg OP03
"RTN","OOPSDOL1",39,0)
 K OPX
"RTN","OOPSDOL1",40,0)
 S OPX="OP03^"_$$GET1^DIQ(2260,OOPDA,60,"E")
"RTN","OOPSDOL1",41,0)
 S OPX=OPX_U_$P(OOPSAR("CA"),U,5)
"RTN","OOPSDOL1",42,0)
 S D62=$$GET1^DIQ(2260,OOPDA,"62:1"),D123=$$GET1^DIQ(2260,OOPDA,"123:1")
"RTN","OOPSDOL1",43,0)
 S D124=$$GET1^DIQ(2260,OOPDA,"124:1"),D126=$$GET1^DIQ(2260,OOPDA,"126:1")
"RTN","OOPSDOL1",44,0)
 S OPX=OPX_U_$E("000",$L(D123)+1,3)_D123
"RTN","OOPSDOL1",45,0)
 S OPX=OPX_U_$E("0000",$L(D124)+1,4)_D124
"RTN","OOPSDOL1",46,0)
 S OPX=OPX_U_$E("00",$L(D62)+1,2)_D62
"RTN","OOPSDOL1",47,0)
 S OPX=OPX_U_$E("00",$L(D126)+1,2)_D126
"RTN","OOPSDOL1",48,0)
 S OPX=OPX_U_$$DC^OOPSUTL3($P(OOPSAR("CA1L"),U,7))
"RTN","OOPSDOL1",49,0)
 S NAME=$$GET1^DIQ(2260,OOPDA,"169:.01"),FN=$P(NAME,",",2)
"RTN","OOPSDOL1",50,0)
 S OPX=OPX_U_$E($P(NAME,","),1,20)
"RTN","OOPSDOL1",51,0)
 F KK=1:0:1 Q:$E(FN,KK)'=" "  S FN=$E(FN,KK+1,$L(FN))
"RTN","OOPSDOL1",52,0)
 S OPX=OPX_U_$E($P(FN," "),1,10)_U_$E($P(FN," ",2),1,10)
"RTN","OOPSDOL1",53,0)
 S OPX=OPX_U_$P(OOPSAR("CA1L"),U,4)_U_$$MKNUM^OOPSUTL2($P(OOPSAR("CA1L"),U,5))
"RTN","OOPSDOL1",54,0)
 S OPX=OPX_U_$$DC^OOPSUTL3($P(OOPSAR("CA1ES"),U,6))
"RTN","OOPSDOL1",55,0)
 S OPX=OPX_U_$$DC^OOPSUTL3($P(OOPSAR("CA1I"),U,6))
"RTN","OOPSDOL1",56,0)
 S OPX=OPX_U_$$DC^OOPSUTL3($P($P(OOPSAR(0),U,5),"."))_"^|"
"RTN","OOPSDOL1",57,0)
 D STORE^OOPSDOLX
"RTN","OOPSDOL1",58,0)
OP04 ; Seg OP04
"RTN","OOPSDOL1",59,0)
 K OPX
"RTN","OOPSDOL1",60,0)
 N CAT,GRD,STP,PAYP
"RTN","OOPSDOL1",61,0)
 S CAT=$$GET1^DIQ(2260,OOPDA,2,"I"),PAYP=$P(OOPSAR(0),U,13)
"RTN","OOPSDOL1",62,0)
 S GRD=$P(OOPSAR("2162A"),U,12),STP=$P(OOPSAR("2162A"),U,13)
"RTN","OOPSDOL1",63,0)
 I STP="N" S STP=" N"  ; special case on step
"RTN","OOPSDOL1",64,0)
 S OPX="OP04^"_$$DC^OOPSUTL3($P(OOPSAR("CA1ES"),U,3))
"RTN","OOPSDOL1",65,0)
 I $P(OOPSAR("CA1F"),U,13) D
"RTN","OOPSDOL1",66,0)
 .S Y=$P(OOPSAR("CA1F"),U,13) D DD^%DT S Y=$P($TR(Y,":",""),"@",2)
"RTN","OOPSDOL1",67,0)
 .S OPX=OPX_U_$$DC^OOPSUTL3($P($P(OOPSAR("CA1F"),U,13),"."))_Y
"RTN","OOPSDOL1",68,0)
 I '$P(OOPSAR("CA1F"),U,13) S OPX=OPX_U
"RTN","OOPSDOL1",69,0)
 I $P(OOPSAR("CA1G"),U,3) D
"RTN","OOPSDOL1",70,0)
 .S Y=$P(OOPSAR("CA1G"),U,3) D DD^%DT S Y=$P($TR(Y,":",""),"@",2)
"RTN","OOPSDOL1",71,0)
 .S OPX=OPX_U_$$DC^OOPSUTL3($P($P(OOPSAR("CA1G"),U,3),"."))_Y
"RTN","OOPSDOL1",72,0)
 I '$P(OOPSAR("CA1G"),U,3) S OPX=OPX_U
"RTN","OOPSDOL1",73,0)
 I $P(OOPSAR("CA1G"),U,2) D
"RTN","OOPSDOL1",74,0)
 .S OPX=OPX_U_$$DC^OOPSUTL3($P(OOPSAR("CA1G"),U,2))
"RTN","OOPSDOL1",75,0)
 I '$P(OOPSAR("CA1G"),U,2) S OPX=OPX_U
"RTN","OOPSDOL1",76,0)
 S RPOL=$P(OOPSAR("CA1A"),U,13)
"RTN","OOPSDOL1",77,0)
 S VAL=$S(RPOL="COP":"RS",RPOL="L":"ZZ",1:"NU")
"RTN","OOPSDOL1",78,0)
 S OPX=OPX_U_VAL_U_$P(OOPSAR("CA1I"),U,7)
"RTN","OOPSDOL1",79,0)
 S OPX=OPX_U_$E($P(OOPSAR(0),U,13),1,2)
"RTN","OOPSDOL1",80,0)
 ; V2.0 - fix Grade/Step, send nill if Volunteer or Fee Basis
"RTN","OOPSDOL1",81,0)
 I CAT=2!(PAYP="OT") S OPX=OPX_U_""
"RTN","OOPSDOL1",82,0)
 E  S OPX=OPX_U_$E("00",$L(GRD)+1,2)_GRD
"RTN","OOPSDOL1",83,0)
 I (CAT=2)!(PAYP="OT") S OPX=OPX_U_""
"RTN","OOPSDOL1",84,0)
 E  S OPX=OPX_U_$E("00",$L(STP)+1,2)_STP
"RTN","OOPSDOL1",85,0)
 I $P(OOPSAR("CA1A"),U,8)=1!($P(OOPSAR("CA1A"),U,8)=4)!($P(OOPSAR("CA1A"),U,8)=5)!($P(OOPSAR("CA1A"),U,8)=7) S OPX=OPX_U_"Y"
"RTN","OOPSDOL1",86,0)
 E  S OPX=OPX_U_"N"
"RTN","OOPSDOL1",87,0)
 I $P(OOPSAR("CA1A"),U,8)=2!($P(OOPSAR("CA1A"),U,8)=4)!($P(OOPSAR("CA1A"),U,8)=6)!($P(OOPSAR("CA1A"),U,8)=7) S OPX=OPX_U_"Y"
"RTN","OOPSDOL1",88,0)
 E  S OPX=OPX_U_"N"
"RTN","OOPSDOL1",89,0)
 I $P(OOPSAR("CA1A"),U,8)=3!($P(OOPSAR("CA1A"),U,8)=5)!($P(OOPSAR("CA1A"),U,8)=6)!($P(OOPSAR("CA1A"),U,8)=7) S OPX=OPX_U_"Y"
"RTN","OOPSDOL1",90,0)
 E  S OPX=OPX_U_"N"
"RTN","OOPSDOL1",91,0)
 S OPX=OPX_U_"Y^Y^Y^Y"
"RTN","OOPSDOL1",92,0)
 I $G(WITN) D
"RTN","OOPSDOL1",93,0)
 . S NM=$P($G(OOPSAR("CA1W",0)),U)
"RTN","OOPSDOL1",94,0)
 . S:$G(NM)'="" OPX=OPX_U_"Y" S:$G(NM)="" OPX=OPX_U_"N"
"RTN","OOPSDOL1",95,0)
 . S WS=$P($G(OOPSAR("CA1W",0)),U,6)
"RTN","OOPSDOL1",96,0)
 . S:$G(WS) OPX=OPX_U_"Y" S:'$G(WS) OPX=OPX_U
"RTN","OOPSDOL1",97,0)
 . K NM,WS
"RTN","OOPSDOL1",98,0)
 I '$G(WITN) S OPX=OPX_"^N^N"
"RTN","OOPSDOL1",99,0)
 S OPX=OPX_U_"ASISTS^C2^Y^"
"RTN","OOPSDOL1",100,0)
 S OPX=OPX_$$DC^OOPSUTL3($P(OOPSAR("CA1A"),U,11))
"RTN","OOPSDOL1",101,0)
 S OPX=OPX_U_$P(OOPSAR("CA1A"),U,9)
"RTN","OOPSDOL1",102,0)
 S OPX=OPX_U_$P(OOPSAR("CA1N"),U)
"RTN","OOPSDOL1",103,0)
 S OPX=OPX_U_$P(OOPSAR("CA1N"),U,2)
"RTN","OOPSDOL1",104,0)
 S OPX=OPX_U_$$GET1^DIQ(2260,OOPDA,"185:1")
"RTN","OOPSDOL1",105,0)
 S OPX=OPX_U_$E($P(OOPSAR("CA1A"),U,14),1,5)_"^|"
"RTN","OOPSDOL1",106,0)
 D STORE^OOPSDOLX
"RTN","OOPSDOL1",107,0)
OP05 ; Seg OP05
"RTN","OOPSDOL1",108,0)
 ;V2.0 if Pay Plan="OT" emp is Fee Basis send "C" in PPER
"RTN","OOPSDOL1",109,0)
 N PPER
"RTN","OOPSDOL1",110,0)
 S PPER=$P(OOPSAR("CA1L"),U,2) I (PAYP="OT") S PPER="C"
"RTN","OOPSDOL1",111,0)
 K OPX
"RTN","OOPSDOL1",112,0)
 S OPX="OP05^"_$P(OOPSAR("CA1G"),U,8)_U_$P(OOPSAR("CA1H"),U)
"RTN","OOPSDOL1",113,0)
 S OPX=OPX_U_$P(OOPSAR("CA1H"),U,2)_U_$P(OOPSAR("CA1H"),U,3)
"RTN","OOPSDOL1",114,0)
 S OPX=OPX_U_$$GET1^DIQ(2260,OOPDA,"154:1")_U_$E($P(OOPSAR("CA1H"),U,5),1,5)
"RTN","OOPSDOL1",115,0)
 I $P(OOPSAR("CA1I"),U)'="" D
"RTN","OOPSDOL1",116,0)
 .S OPX=OPX_U_1
"RTN","OOPSDOL1",117,0)
 .S NAME=$P(OOPSAR("CA1I"),U),FN=$P(NAME,",",2)
"RTN","OOPSDOL1",118,0)
 .F KK=1:0:1 Q:$E(FN,KK)'=" "  S FN=$E(FN,KK+1,$L(FN))
"RTN","OOPSDOL1",119,0)
 .S OPX=OPX_U_$E($P(NAME,","),1,20)
"RTN","OOPSDOL1",120,0)
 .S OPX=OPX_U_$E($P(FN," "),1,10)_U_$E($P(FN," ",2),1,10)
"RTN","OOPSDOL1",121,0)
 .S OPX=OPX_U_$$GET1^DIQ(2260,OOPDA,"182:1")
"RTN","OOPSDOL1",122,0)
 I $P(OOPSAR("CA1I"),U)="" S OPX=OPX_U_"3^^^^"
"RTN","OOPSDOL1",123,0)
 S OPX=OPX_U_$P(OOPSAR("CA1I"),U,2)_U_$P(OOPSAR("CA1I"),U,3)
"RTN","OOPSDOL1",124,0)
 S OPX=OPX_U_$$GET1^DIQ(2260,OOPDA,"159:1")_U_$E($P(OOPSAR("CA1I"),U,5),1,5)
"RTN","OOPSDOL1",125,0)
 ; if the claim is for a volunteer both the pay rate and the pay period
"RTN","OOPSDOL1",126,0)
 ; should be blank - llh 12/29/03
"RTN","OOPSDOL1",127,0)
 I CAT=2 S OPX=OPX_U_U_"^|"
"RTN","OOPSDOL1",128,0)
 E  S OPX=OPX_U_$P(OOPSAR("CA1L"),U)_U_PPER_"^|"
"RTN","OOPSDOL1",129,0)
 D STORE^OOPSDOLX
"RTN","OOPSDOL1",130,0)
OP06 ; Seg OP06
"RTN","OOPSDOL1",131,0)
 S DATA=$$CONV^OOPSUTL5($P(OOPSAR("CA1F"),U,11))
"RTN","OOPSDOL1",132,0)
 K OPX
"RTN","OOPSDOL1",133,0)
 S OPX="OP06"
"RTN","OOPSDOL1",134,0)
 F X=1:1:7 D
"RTN","OOPSDOL1",135,0)
 .I DATA[X D
"RTN","OOPSDOL1",136,0)
 ..S OPX=OPX_U_"Y"
"RTN","OOPSDOL1",137,0)
 ..S OPX=OPX_U_$$HM^OOPSUTL3($P(OOPSAR("CA1F"),U,9))
"RTN","OOPSDOL1",138,0)
 ..S OPX=OPX_U_$$HM^OOPSUTL3($P(OOPSAR("CA1F"),U,10))
"RTN","OOPSDOL1",139,0)
 .I DATA'[X S OPX=OPX_"^N^^"
"RTN","OOPSDOL1",140,0)
 ; Generate Occ Code for DOL transfer
"RTN","OOPSDOL1",141,0)
 S OCC=$$GET1^DIQ(2260,OOPDA,15)      ; Occupation code from PAID
"RTN","OOPSDOL1",142,0)
 S OCC=$S(OCC<2300:"G"_OCC,(OCC>2499&(OCC<9001)):"W"_OCC,(OCC=9999):"Z"_OCC,1:"")
"RTN","OOPSDOL1",143,0)
 S OPX=OPX_U_OCC_U_$P(OOPSAR("CA1A"),U,12)_"^|"
"RTN","OOPSDOL1",144,0)
 D STORE^OOPSDOLX
"RTN","OOPSDOL1",145,0)
 K DATA
"RTN","OOPSDOL1",146,0)
OP07 ; Seg OP07
"RTN","OOPSDOL1",147,0)
 K OPX
"RTN","OOPSDOL1",148,0)
 I $L($P(OOPSAR("CA1B"),U))<133 D
"RTN","OOPSDOL1",149,0)
 .S OPX="OP07^1^1^"_$P(OOPSAR("CA1B"),U)_"^|"
"RTN","OOPSDOL1",150,0)
 .D STORE^OOPSDOLX
"RTN","OOPSDOL1",151,0)
 I $L($P(OOPSAR("CA1B"),U))>132 D
"RTN","OOPSDOL1",152,0)
 .S OPX="OP07^1^2^"_$E($P(OOPSAR("CA1B"),U),1,132)_"^|"
"RTN","OOPSDOL1",153,0)
 .D STORE^OOPSDOLX
"RTN","OOPSDOL1",154,0)
 .K OPX
"RTN","OOPSDOL1",155,0)
 .S OPX="OP07^2^2^"_$E($P(OOPSAR("CA1B"),U),133,200)_"^|"
"RTN","OOPSDOL1",156,0)
 .D STORE^OOPSDOLX
"RTN","OOPSDOL1",157,0)
OP08 ; Seg OP08
"RTN","OOPSDOL1",158,0)
 N BK36 S BK36="" K OPX
"RTN","OOPSDOL1",159,0)
 S OPX="OP08^"_$S($P(OOPSAR("CA1G"),U,4)="N":"NW",1:"")
"RTN","OOPSDOL1",160,0)
 S OPX=OPX_U_$S($P(OOPSAR("CA1G"),U,6)="Y":"WM",1:"")
"RTN","OOPSDOL1",161,0)
 S OPX=OPX_U_$$DC^OOPSUTL3($P(OOPSAR("CA1G"),U))
"RTN","OOPSDOL1",162,0)
 I $G(OOPSAR("CA1K"))'="",($P(OOPSAR("CA1K"),U,4)'=0) S BK36="E5"
"RTN","OOPSDOL1",163,0)
 I $G(OOPSAR("CA1I"))'="",($P(OOPSAR("CA1I"),U,12)'="") S BK36="E5"
"RTN","OOPSDOL1",164,0)
 S OPX=OPX_U_BK36_U
"RTN","OOPSDOL1",165,0)
 I $P(OOPSAR("CA1I"),U,8)="N" S OPX=OPX_U_"CN"
"RTN","OOPSDOL1",166,0)
 E  S OPX=OPX_U
"RTN","OOPSDOL1",167,0)
 I $P(OOPSAR("CA1L"),U,3)'="" S OPX=OPX_U_97
"RTN","OOPSDOL1",168,0)
 E  S OPX=OPX_U
"RTN","OOPSDOL1",169,0)
 I $G(OOPSAR("CA1W",0))'="" D
"RTN","OOPSDOL1",170,0)
 . S OPX=OPX_U_"Y"
"RTN","OOPSDOL1",171,0)
 . S NAME=$P(OOPSAR("CA1W",0),U),FN=$P(NAME,",",2)
"RTN","OOPSDOL1",172,0)
 . F KK=1:0:1 Q:$E(FN,KK)'=" "  S FN=$E(FN,KK+1,$L(FN))
"RTN","OOPSDOL1",173,0)
 . S OPX=OPX_U_$E($P(NAME,","),1,20)
"RTN","OOPSDOL1",174,0)
 . S OPX=OPX_U_$E($P(FN," "),1,10)_U
"RTN","OOPSDOL1",175,0)
 . S OPX=OPX_U_$P(OOPSAR("CA1W",0),U,2)
"RTN","OOPSDOL1",176,0)
 . S OPX=OPX_U_$P(OOPSAR("CA1W",0),U,3)
"RTN","OOPSDOL1",177,0)
 . S OPX=OPX_U_$$GET1^DIQ(5,$P(OOPSAR("CA1W",0),U,4),1)  ; State Code
"RTN","OOPSDOL1",178,0)
 . S OPX=OPX_U_$E($P(OOPSAR("CA1W",0),U,5),1,5)
"RTN","OOPSDOL1",179,0)
 . S OPX=OPX_U_$$DC^OOPSUTL3($P(OOPSAR("CA1W",0),U,6))
"RTN","OOPSDOL1",180,0)
 I $G(OOPSAR("CA1W",0))="" S OPX=OPX_U_"^^^^^^^^"
"RTN","OOPSDOL1",181,0)
 S FL174=$P(OOPSAR("CA1L"),U,6)  ;FILING INSTRUCTION
"RTN","OOPSDOL1",182,0)
 S CATY=$S(FL174=1:"2^0",FL174=2:"2^1",FL174=3:"1^",FL174=4:"6^",1:"")
"RTN","OOPSDOL1",183,0)
 S OPX=OPX_U_CATY_"^|"
"RTN","OOPSDOL1",184,0)
 D STORE^OOPSDOLX
"RTN","OOPSDOL1",185,0)
OP09 ; Seg OP09
"RTN","OOPSDOL1",186,0)
 I $P(OOPSAR("CA1G"),U,4)="N" D
"RTN","OOPSDOL1",187,0)
 .K OPX
"RTN","OOPSDOL1",188,0)
 .S OPX="OP09^1^1^"_$P(OOPSAR("CA1G"),U,5)_"^|" D STORE^OOPSDOLX
"RTN","OOPSDOL1",189,0)
OP10 ; Seg OP10
"RTN","OOPSDOL1",190,0)
 I $P(OOPSAR("CA1G"),U,7)'="" D
"RTN","OOPSDOL1",191,0)
 .K OPX
"RTN","OOPSDOL1",192,0)
 .S OPX="OP10^1^1^"_$P(OOPSAR("CA1G"),U,7)_"^|" D STORE^OOPSDOLX
"RTN","OOPSDOL1",193,0)
OP11 ; Seg OP11 - Reason for Convert (Word Processing)
"RTN","OOPSDOL1",194,0)
 I ($G(OOPSAR("CA1K"))'="")!($P($G(OOPSAR("CA1I")),U,12)'="") D
"RTN","OOPSDOL1",195,0)
 .S OPFLD=165,SEG="OP11" D WP^OOPSDOLX
"RTN","OOPSDOL1",196,0)
OP12 ; Seg OP12 - Supervisor not agree explain (Word Processing)
"RTN","OOPSDOL1",197,0)
 I $G(OOPSAR("CA1J"))'="" D
"RTN","OOPSDOL1",198,0)
 .S OPFLD=164,SEG="OP12" D WP^OOPSDOLX
"RTN","OOPSDOL1",199,0)
OP13 ; Seg OP13 - Nature of Injury
"RTN","OOPSDOL1",200,0)
 I $P(OOPSAR("CA1C"),U)'="" D
"RTN","OOPSDOL1",201,0)
 .K OPX
"RTN","OOPSDOL1",202,0)
 .S OPX="OP13^1^1^"_$P(OOPSAR("CA1C"),U)_"^|" D STORE^OOPSDOLX
"RTN","OOPSDOL1",203,0)
OP14 ; Seg OP14 - Supervisor Exception
"RTN","OOPSDOL1",204,0)
 I $P(OOPSAR("CA1L"),U,3)'="" D
"RTN","OOPSDOL1",205,0)
 .K OPX
"RTN","OOPSDOL1",206,0)
 .S OPX="OP14^1^1"
"RTN","OOPSDOL1",207,0)
 .S OPX=OPX_U_$P(OOPSAR("CA1L"),U,3)_"^|" D STORE^OOPSDOLX
"RTN","OOPSDOL1",208,0)
OP20 ; Seg OP20
"RTN","OOPSDOL1",209,0)
 K OPX
"RTN","OOPSDOL1",210,0)
 I $P(OOPSAR("2162B"),U,4)'="" D
"RTN","OOPSDOL1",211,0)
 .S OPX="OP20^"_"P"_U_$$GET1^DIQ(2260,OOPDA,"30:1")_"^|" D STORE^OOPSDOLX
"RTN","OOPSDOL1",212,0)
 .Q
"RTN","OOPSDOL1",213,0)
OP21 ; Seg OP21 Defined for future use
"RTN","OOPSDOL1",214,0)
OP22 ; Seg OP22 Defined for future use
"RTN","OOPSDOL1",215,0)
OP23 ; Seg OP23 - Statement of Witness (Not yet used)
"RTN","OOPSDOL1",216,0)
 I $G(OOPSAR("CA1W",1))'="" D
"RTN","OOPSDOL1",217,0)
 . I $L(OOPSAR("CA1W",1))<133 D
"RTN","OOPSDOL1",218,0)
 .. K OPX
"RTN","OOPSDOL1",219,0)
 .. S OPX="OP23^1^1^"_OOPSAR("CA1W",1)_"^|"
"RTN","OOPSDOL1",220,0)
 .. D STORE^OOPSDOLX
"RTN","OOPSDOL1",221,0)
 . I $L(OOPSAR("CA1W",1))>132 D
"RTN","OOPSDOL1",222,0)
 .. K OPX
"RTN","OOPSDOL1",223,0)
 .. S OPX="OP23^1^2^"_$E(OOPSAR("CA1W",1),1,132)_"^|"
"RTN","OOPSDOL1",224,0)
 .. D STORE^OOPSDOLX
"RTN","OOPSDOL1",225,0)
 .. K OPX
"RTN","OOPSDOL1",226,0)
 .. S OPX="OP23^2^2^"_$E(DATA,133,264)_"^|"
"RTN","OOPSDOL1",227,0)
 .. D STORE^OOPSDOLX
"RTN","OOPSDOL1",228,0)
 ;
"RTN","OOPSDOL1",229,0)
EXIT ; End of routine
"RTN","OOPSDOL1",230,0)
 K WITN
"RTN","OOPSDOL1",231,0)
 Q
"RTN","OOPSGUI0")
0^16^B41861346
"RTN","OOPSGUI0",1,0)
OOPSGUI0 ;WIOFO/LLH-RPC routines ;01/02/02
"RTN","OOPSGUI0",2,0)
 ;;2.0;ASISTS;**2,4,7**;Jun 03, 2002
"RTN","OOPSGUI0",3,0)
 ;
"RTN","OOPSGUI0",4,0)
GETCASE(RESULTS,PERSON,CSTAT,PSTAT,CALL,OPT) ; Subroutine for Case Selection
"RTN","OOPSGUI0",5,0)
 ; Returns a list of cases that can be displayed for selection
"RTN","OOPSGUI0",6,0)
 ; RESULTS = return array containing, CASE#^IEN^NAME^DATE TIME OCCUR
"RTN","OOPSGUI0",7,0)
 ; PERSON  = 0^ if no person selected
"RTN","OOPSGUI0",8,0)
 ;           1^PERSON INVOLVED NAME
"RTN","OOPSGUI0",9,0)
 ;           2^SUPERVISOR DUZ
"RTN","OOPSGUI0",10,0)
 ;           3^USER SSN
"RTN","OOPSGUI0",11,0)
 ;           4^CASE NUMBER
"RTN","OOPSGUI0",12,0)
 ; CSTAT   = #^#^#^#  0^1^2^3 0=open, 1=closed, 2=deleted, 3=replaced
"RTN","OOPSGUI0",13,0)
 ;           99^ if all Case Status should be included
"RTN","OOPSGUI0",14,0)
 ;           CSTAT is only set programatically
"RTN","OOPSGUI0",15,0)
 ; PSTAT   = 0^  if all personnel status types should be included
"RTN","OOPSGUI0",16,0)
 ;           #^#^#^ for each personnel status selected
"RTN","OOPSGUI0",17,0)
 ; CALL    = Calling menu, used to assure proper access
"RTN","OOPSGUI0",18,0)
 ; OPT     = Option called from, used to assure proper access
"RTN","OOPSGUI0",19,0)
 ; 
"RTN","OOPSGUI0",20,0)
 K ^TMP("OOPSCASE",DUZ)
"RTN","OOPSGUI0",21,0)
 N ARR,CNUM,OOPSDA,PER,STA,SUP,VIEWSUP,VIEWEMP,VALSSN
"RTN","OOPSGUI0",22,0)
 I $G(PERSON)="" Q
"RTN","OOPSGUI0",23,0)
 I +PERSON=1 D GETPER,SORT G EXIT
"RTN","OOPSGUI0",24,0)
 I +PERSON=4 D  G EXIT
"RTN","OOPSGUI0",25,0)
 . S CNUM=$P($G(PERSON),U,2) I '$G(CNUM) Q
"RTN","OOPSGUI0",26,0)
 . S OOPSDA=$O(^OOPS(2260,"B",CNUM,"")) I '$G(OOPSDA) D  Q
"RTN","OOPSGUI0",27,0)
 .. S ^TMP("OOPSCASE",DUZ,1)="No Cases Selectable"
"RTN","OOPSGUI0",28,0)
 .. S RESULTS=$NA(^TMP("OOPSCASE",DUZ))
"RTN","OOPSGUI0",29,0)
 ..; S RESULTS(0)="No Cases Selectable"
"RTN","OOPSGUI0",30,0)
 . S STA=$$GET1^DIQ(2260,OOPSDA,51,"I")
"RTN","OOPSGUI0",31,0)
 . I +CSTAT'=99,(CSTAT'[STA_"^") Q  ;allow only selected case status
"RTN","OOPSGUI0",32,0)
 . I $$CALLER() S ARR(CNUM)=OOPSDA
"RTN","OOPSGUI0",33,0)
 . D SORT
"RTN","OOPSGUI0",34,0)
 S CNUM=0
"RTN","OOPSGUI0",35,0)
 F  S CNUM=$O(^OOPS(2260,"B",CNUM)) Q:CNUM=""  D
"RTN","OOPSGUI0",36,0)
 . S OOPSDA=""
"RTN","OOPSGUI0",37,0)
 . F  S OOPSDA=$O(^OOPS(2260,"B",CNUM,OOPSDA)) Q:OOPSDA=""  D
"RTN","OOPSGUI0",38,0)
 .. I +PERSON=3 D  Q:'VIEWEMP
"RTN","OOPSGUI0",39,0)
 ... S VIEWEMP=1,VALSSN=$P($G(PERSON),U,2)
"RTN","OOPSGUI0",40,0)
 ... I $$GET1^DIQ(2260,OOPSDA,5,"I")'=VALSSN  D
"RTN","OOPSGUI0",41,0)
 .... S VIEWEMP=0
"RTN","OOPSGUI0",42,0)
 .... S ^TMP("OOPSCASE",DUZ,1)="No Cases Selectable"
"RTN","OOPSGUI0",43,0)
 .... S RESULTS=$NA(^TMP("OOPSCASE",DUZ))
"RTN","OOPSGUI0",44,0)
 .. S STA=$$GET1^DIQ(2260,OOPSDA,51,"I")
"RTN","OOPSGUI0",45,0)
 .. I +CSTAT'=99,(CSTAT'[STA_"^") Q  ;allow only selected case status
"RTN","OOPSGUI0",46,0)
 .. S PER=$$GET1^DIQ(2260,OOPSDA,2,"I")
"RTN","OOPSGUI0",47,0)
 .. I (+PSTAT)&(PSTAT'[(PER_"^")) Q      ;allow only selected per status
"RTN","OOPSGUI0",48,0)
 .. I +PERSON=2 D  Q:'VIEWSUP
"RTN","OOPSGUI0",49,0)
 ... S VIEWSUP=1,SUP=$P(PERSON,U,2)
"RTN","OOPSGUI0",50,0)
 ... I $$GET1^DIQ(2260,OOPSDA,53,"I")'=SUP,($$GET1^DIQ(2260,OOPSDA,53.1,"I")'=SUP) D  Q
"RTN","OOPSGUI0",51,0)
 ....; S RESULTS(0)="No Cases Selectable",VIEWSUP=0
"RTN","OOPSGUI0",52,0)
 .... S ^TMP("OOPSCASE",DUZ,1)="No Cases Selectable",VIEWSUP=0
"RTN","OOPSGUI0",53,0)
 .... S RESULTS=$NA(^TMP("OOPSCASE",DUZ))
"RTN","OOPSGUI0",54,0)
 .. I $$CALLER() S CNUM=$$GET1^DIQ(2260,OOPSDA,.01),ARR(CNUM)=OOPSDA
"RTN","OOPSGUI0",55,0)
 D SORT
"RTN","OOPSGUI0",56,0)
EXIT ; quit the routine
"RTN","OOPSGUI0",57,0)
 Q
"RTN","OOPSGUI0",58,0)
GETPER ; Person Name passed in, match
"RTN","OOPSGUI0",59,0)
 ; See above for documentation
"RTN","OOPSGUI0",60,0)
 N NM
"RTN","OOPSGUI0",61,0)
 S OOPSDA="",NM=$P(PERSON,U,2)
"RTN","OOPSGUI0",62,0)
 F  S OOPSDA=$O(^OOPS(2260,"C",NM,OOPSDA)) Q:OOPSDA=""  D
"RTN","OOPSGUI0",63,0)
 . S STA=$$GET1^DIQ(2260,OOPSDA,51,"I")
"RTN","OOPSGUI0",64,0)
 . I +CSTAT'=99,(CSTAT'[STA_"^") Q  ;allow only selected case status
"RTN","OOPSGUI0",65,0)
 . S PER=$$GET1^DIQ(2260,OOPSDA,2,"I")
"RTN","OOPSGUI0",66,0)
 . I (+PSTAT)&(PSTAT'[(PER_"^")) Q      ;allow only selected per status
"RTN","OOPSGUI0",67,0)
 . I $$CALLER() S CNUM=$$GET1^DIQ(2260,OOPSDA,.01),ARR(CNUM)=OOPSDA
"RTN","OOPSGUI0",68,0)
 Q
"RTN","OOPSGUI0",69,0)
CALLER() ; Check to make sure case should be included
"RTN","OOPSGUI0",70,0)
 N EES,ESTAT,FLD,INC,SIG,SSN,VIEWC
"RTN","OOPSGUI0",71,0)
 S VIEWC=1
"RTN","OOPSGUI0",72,0)
 S INC=$$GET1^DIQ(2260,OOPSDA,52,"I")
"RTN","OOPSGUI0",73,0)
 ; get users SSN 
"RTN","OOPSGUI0",74,0)
 S SSN=$$GET1^DIQ(200,DUZ,9)
"RTN","OOPSGUI0",75,0)
 ; make sure user cannot access claim from any menu but Employee
"RTN","OOPSGUI0",76,0)
 I CALL'="E",($$GET1^DIQ(2260,OOPSDA,5,"I")=SSN) S VIEWC=0 Q VIEWC
"RTN","OOPSGUI0",77,0)
 ; Claim already sent to DOL, can't edit, Caller / Option doesnt matter
"RTN","OOPSGUI0",78,0)
 ; unless the Option = "CHGCASE"
"RTN","OOPSGUI0",79,0)
 ; Patch 4 llh - should also be able to create amendment.  NOTE: Case
"RTN","OOPSGUI0",80,0)
 ;               status should always = open
"RTN","OOPSGUI0",81,0)
 ; patch 7 llh - allow access if also opt=iocome
"RTN","OOPSGUI0",82,0)
 I ($$GET1^DIQ(2260,OOPSDA,66)'=""),(OPT'="CHGCASE"),(OPT'="PRINTCA"),(OPT'=2162),(OPT'="CRAMEND"),(OPT'="IOCOME") S VIEWC=0 Q VIEWC
"RTN","OOPSGUI0",83,0)
 ; for any option from the supervisor menu
"RTN","OOPSGUI0",84,0)
 I CALL="S" D  I 'VIEWC Q VIEWC
"RTN","OOPSGUI0",85,0)
 . I $$GET1^DIQ(2260,OOPSDA,53,"I")'=DUZ,($$GET1^DIQ(2260,OOPSDA,53.1,"I")'=DUZ) S VIEWC=0 Q
"RTN","OOPSGUI0",86,0)
 ; if opt = 2162
"RTN","OOPSGUI0",87,0)
 I OPT=2162 D  Q VIEWC
"RTN","OOPSGUI0",88,0)
 . I $$GET1^DIQ(2260,OOPSDA,51,"I")=1 S VIEWC=0  ; closed, can't edit
"RTN","OOPSGUI0",89,0)
 . ; signed SO, coming from Supervisor menu, cant access
"RTN","OOPSGUI0",90,0)
 . I (CALL="S"),+$$EDSTA^OOPSUTL1(OOPSDA,"O") S VIEWC=0
"RTN","OOPSGUI0",91,0)
 . I CALL="H" D
"RTN","OOPSGUI0",92,0)
 .. I $P($$EDSTA^OOPSUTL1(OOPSDA,"S"),U,3)!(+$$EDSTA^OOPSUTL1(OOPSDA,"O")) S VIEWC=0
"RTN","OOPSGUI0",93,0)
 . I CALL="W" D
"RTN","OOPSGUI0",94,0)
 .. I +$$EDSTA^OOPSUTL1(OOPSDA,"O") S VIEWC=0   ;safety signed cant see
"RTN","OOPSGUI0",95,0)
 ; if opt = CA1 only return/allow CA1's, caller doesnt matter
"RTN","OOPSGUI0",96,0)
 I OPT="CA1",INC'=1 S VIEWC=0 Q VIEWC
"RTN","OOPSGUI0",97,0)
 ; if opt = CA2 only return/allow CA2's, caller doesnt matter
"RTN","OOPSGUI0",98,0)
 I OPT="CA2",INC'=2 S VIEWC=0 Q VIEWC
"RTN","OOPSGUI0",99,0)
 I CALL="E" D  Q VIEWC
"RTN","OOPSGUI0",100,0)
 . I '$$ISEMP^OOPSUTL4(OOPSDA) S VIEWC=0 Q
"RTN","OOPSGUI0",101,0)
 . I '$G(SSN) S VIEWC=0 Q
"RTN","OOPSGUI0",102,0)
 . I $D(^OOPS(2260,"SSN",SSN))<1 S VIEWC=0 Q
"RTN","OOPSGUI0",103,0)
 . ; user SSN must = case IEN from Employee menu
"RTN","OOPSGUI0",104,0)
 . I $$GET1^DIQ(2260,OOPSDA,5,"I")'=SSN S VIEWC=0 Q
"RTN","OOPSGUI0",105,0)
 . S SIG=$$EDSTA^OOPSUTL1(OOPSDA,"S")
"RTN","OOPSGUI0",106,0)
 . I (OPT'="PRINTCA"),$P(SIG,U,INC) S VIEWC=0 Q
"RTN","OOPSGUI0",107,0)
 I CALL="S" D  Q VIEWC
"RTN","OOPSGUI0",108,0)
 . ; not Super or Sec Super, can't access form, regardless of form type
"RTN","OOPSGUI0",109,0)
 . I $$GET1^DIQ(2260,OOPSDA,53,"I")'=DUZ&($$GET1^DIQ(2260,OOPSDA,53.1,"I")'=DUZ) S VIEWC=0 Q
"RTN","OOPSGUI0",110,0)
 . ; Supervisor cannot complete their own form.
"RTN","OOPSGUI0",111,0)
 . I $$GET1^DIQ(2260,OOPSDA,5,"I")=SSN S VIEWC=0 Q
"RTN","OOPSGUI0",112,0)
 . I OPT="CA1"!(OPT="CA2") D  Q
"RTN","OOPSGUI0",113,0)
 .. ; if form CA, must be employee to complete
"RTN","OOPSGUI0",114,0)
 .. I '$$ISEMP^OOPSUTL4(OOPSDA) S VIEWC=0 Q
"RTN","OOPSGUI0",115,0)
 .. ; commented out next 2 lines, ? whether wanted by TAG 11/1/01 llh
"RTN","OOPSGUI0",116,0)
 .. ; Employee hasn't signed, super can't get to
"RTN","OOPSGUI0",117,0)
 .. ; I '$P($$EDSTA^OOPSUTL1(OOPSDA,"E"),U,INC) S VIEWC=0 Q
"RTN","OOPSGUI0",118,0)
 .. ; Supervisor has signed, can't re-edit
"RTN","OOPSGUI0",119,0)
 .. I $P($$EDSTA^OOPSUTL1(OOPSDA,"S"),U,INC) S VIEWC=0 Q
"RTN","OOPSGUI0",120,0)
 I CALL="O"!(CALL="W")!(CALL="H") D  Q VIEWC
"RTN","OOPSGUI0",121,0)
 . I OPT="CA1"!(OPT="CA2") D  Q
"RTN","OOPSGUI0",122,0)
 .. I '$$ISEMP^OOPSUTL4(OOPSDA) S VIEWC=0 Q
"RTN","OOPSGUI0",123,0)
 . I OPT="WCSIGN" D  Q
"RTN","OOPSGUI0",124,0)
 .. S ESTAT=$$EDSTA^OOPSUTL1(OOPSDA,"E")
"RTN","OOPSGUI0",125,0)
 .. I '$$ISEMP^OOPSUTL4(OOPSDA) S VIEWC=0 Q
"RTN","OOPSGUI0",126,0)
 .. I CALL'="W",$P(ESTAT,U,INC) S VIEWC=0 Q
"RTN","OOPSGUI0",127,0)
 .. I CALL="W" D
"RTN","OOPSGUI0",128,0)
 ... S FLD=$S(INC=1:119,INC=2:221,1:"") I 'FLD S VIEWC=0 Q
"RTN","OOPSGUI0",129,0)
 ... S EES=$$GET1^DIQ(2260,OOPSDA,FLD,"I")
"RTN","OOPSGUI0",130,0)
 ... ; employee hasn't signed, ok for WC to sign
"RTN","OOPSGUI0",131,0)
 ... I 'EES Q
"RTN","OOPSGUI0",132,0)
 ... ; employee signed, not signed by person accessing claim, no access
"RTN","OOPSGUI0",133,0)
 ... I EES'=DUZ S VIEWC=0 Q
"RTN","OOPSGUI0",134,0)
 ... I $P($$EDSTA^OOPSUTL1(OOPSDA,"S"),U,INC) S VIEWC=0 ;Sup Sign, no acc
"RTN","OOPSGUI0",135,0)
 . I OPT="WCEMPSIGN" D  Q
"RTN","OOPSGUI0",136,0)
 .. N CALLER,SVIEW
"RTN","OOPSGUI0",137,0)
 .. S CALLER=CALL
"RTN","OOPSGUI0",138,0)
 .. I $$GET1^DIQ(2260,OOPSDA,51,"I") S VIEWC=0 Q    ; claim must be open
"RTN","OOPSGUI0",139,0)
 .. I $$GET1^DIQ(2260,OOPSDA,77)="" S VIEWC=0 Q
"RTN","OOPSGUI0",140,0)
 .. I $$GET1^DIQ(2260,OOPSDA,80)="" S VIEWC=0 Q
"RTN","OOPSGUI0",141,0)
 .. S SVIEW=$$SCR^OOPSWCSE(OOPSDA) I 'SVIEW S VIEWC=0 Q
"RTN","OOPSGUI0",142,0)
 I CALL="U" D  Q VIEWC
"RTN","OOPSGUI0",143,0)
 . I '+$$EDSTA^OOPSUTL1(OOPSDA,"O") S VIEWC=0 Q
"RTN","OOPSGUI0",144,0)
 . I '$P($$EDSTA^OOPSUTL1(OOPSDA,"S"),U,3) S VIEWC=0 Q
"RTN","OOPSGUI0",145,0)
 Q VIEWC
"RTN","OOPSGUI0",146,0)
SORT ; put cases in reverse number order
"RTN","OOPSGUI0",147,0)
 N CN,CNUM,OOPSDA,SSN,DOI
"RTN","OOPSGUI0",148,0)
 S ^TMP("OOPSCASE",DUZ,0)="",CNUM="",CN=1
"RTN","OOPSGUI0",149,0)
 I '$D(ARR) S RESULTS(0)="No Cases Selectable"  D
"RTN","OOPSGUI0",150,0)
 . S ^TMP("OOPSCASE",DUZ,1)="No Cases Selectable",VIEWSUP=0
"RTN","OOPSGUI0",151,0)
 . S RESULTS=$NA(^TMP("OOPSCASE",DUZ))
"RTN","OOPSGUI0",152,0)
 F  S CNUM=$O(ARR(CNUM),-1) Q:CNUM=""  D
"RTN","OOPSGUI0",153,0)
 . S OOPSDA=ARR(CNUM)
"RTN","OOPSGUI0",154,0)
 . S NM=$$GET1^DIQ(2260,OOPSDA,1)
"RTN","OOPSGUI0",155,0)
 . S DOI=$$GET1^DIQ(2260,OOPSDA,4)
"RTN","OOPSGUI0",156,0)
 . S SSN=$$GET1^DIQ(2260,OOPSDA,5)
"RTN","OOPSGUI0",157,0)
 . I CALL="U" S (NM,DOI,SSN)=""
"RTN","OOPSGUI0",158,0)
 . S ^TMP("OOPSCASE",DUZ,CN)=CNUM_U_DOI_U_NM_U_OOPSDA_U_SSN_$C(10),CN=CN+1
"RTN","OOPSGUI0",159,0)
 S RESULTS=$NA(^TMP("OOPSCASE",DUZ))
"RTN","OOPSGUI0",160,0)
 Q
"RTN","OOPSGUI1")
0^9^B35119868
"RTN","OOPSGUI1",1,0)
OOPSGUI1 ;WIOFO/LLH-RPC routines ;9/3/01
"RTN","OOPSGUI1",2,0)
 ;;2.0;ASISTS;**4,8,7**;Jun 03, 2002
"RTN","OOPSGUI1",3,0)
 ;
"RTN","OOPSGUI1",4,0)
OPT(RESULTS,INP) ; Returns the ASISTS GUI Menus user has access to
"RTN","OOPSGUI1",5,0)
 ;      INP      - Input String containing the version of GUI making call
"RTN","OOPSGUI1",6,0)
 ;  RESUTLS      - return value for broker call
"RTN","OOPSGUI1",7,0)
 ;                 P1 = 1 DUZ defined
"RTN","OOPSGUI1",8,0)
 ;                 P2 = 1 Emp Health menu accessible
"RTN","OOPSGUI1",9,0)
 ;                 P3 = 1 Employee menu accessible
"RTN","OOPSGUI1",10,0)
 ;                 P4 = 1 Supervisor menu accessible
"RTN","OOPSGUI1",11,0)
 ;                 P5 = 1 Safety Officer menu accessible
"RTN","OOPSGUI1",12,0)
 ;                 P6 = 1 Union menu accessible
"RTN","OOPSGUI1",13,0)
 ;                 P7 = 1 Workers' Comp menu accessible
"RTN","OOPSGUI1",14,0)
 ;                 P8 = SSN from New Person file for user
"RTN","OOPSGUI1",15,0)
 ;                 P9 = server version #
"RTN","OOPSGUI1",16,0)
 ;
"RTN","OOPSGUI1",17,0)
 N CNT,MENU,OPT,PRIM,SM,VER
"RTN","OOPSGUI1",18,0)
 S CNT=1
"RTN","OOPSGUI1",19,0)
 I 'DUZ S RESULTS="0^^^^^^^" Q
"RTN","OOPSGUI1",20,0)
 S RESULTS=DUZ_"^0^0^0^0^0^0^"
"RTN","OOPSGUI1",21,0)
 S VER="2.7.1.0"        ;Define version check patch #4
"RTN","OOPSGUI1",22,0)
 I $G(INP)=""!($G(INP)'=VER) Q
"RTN","OOPSGUI1",23,0)
 S PRIM=$$GET1^DIQ(200,DUZ,201)     ; get primary menu
"RTN","OOPSGUI1",24,0)
 I $G(PRIM)'="" S MENU(PRIM)=""
"RTN","OOPSGUI1",25,0)
 S SM=0
"RTN","OOPSGUI1",26,0)
 F  S SM=$O(^VA(200,DUZ,203,SM))  Q:SM'>0  D
"RTN","OOPSGUI1",27,0)
 . S OPT=$$GET1^DIQ(19,$P($G(^VA(200,DUZ,203,SM,0)),U),.01)
"RTN","OOPSGUI1",28,0)
 . I $G(OPT)'="" S MENU(OPT)=""
"RTN","OOPSGUI1",29,0)
 I $D(MENU("OOPS GUI EMPLOYEE HEALTH MENU")) S $P(RESULTS,U,2)=1
"RTN","OOPSGUI1",30,0)
 I $D(MENU("OOPS GUI EMPLOYEE")) S $P(RESULTS,U,3)=1
"RTN","OOPSGUI1",31,0)
 I $D(MENU("OOPS GUI SUPERVISOR MENU")) S $P(RESULTS,U,4)=1
"RTN","OOPSGUI1",32,0)
 I $D(MENU("OOPS GUI SAFETY OFFICER MENU")) S $P(RESULTS,U,5)=1
"RTN","OOPSGUI1",33,0)
 I $D(MENU("OOPS GUI UNION MENU")) S $P(RESULTS,U,6)=1
"RTN","OOPSGUI1",34,0)
 I $D(MENU("OOPS GUI WORKERS' COMP MENU")) S $P(RESULTS,U,7)=1
"RTN","OOPSGUI1",35,0)
 I +$$ACCESS^XQCHK(DUZ,"OOPS GUI EMPLOYEE") S $P(RESULTS,U,3)=1
"RTN","OOPSGUI1",36,0)
 S $P(RESULTS,U,8)=$$GET1^DIQ(200,DUZ,9)
"RTN","OOPSGUI1",37,0)
 S $P(RESULTS,U,9)=VER              ;return the version defined above.
"RTN","OOPSGUI1",38,0)
 Q
"RTN","OOPSGUI1",39,0)
SETSIGN(RESULTS,INPUT,SIGN) ; This subroutine validates that the signature
"RTN","OOPSGUI1",40,0)
 ;                         can be entered and is valid
"RTN","OOPSGUI1",41,0)
 ;  Input:   INPUT - Contains the IEN of the ASISTS case, the form type,
"RTN","OOPSGUI1",42,0)
 ;                   and the field number.  The field number is used
"RTN","OOPSGUI1",43,0)
 ;                   to trigger what validation should be preformed on
"RTN","OOPSGUI1",44,0)
 ;                   the fields in the form so that the signature can
"RTN","OOPSGUI1",45,0)
 ;                   be applied. The fourth parameter is a special flag
"RTN","OOPSGUI1",46,0)
 ;                   indicating the Workers Comp is signing for employee
"RTN","OOPSGUI1",47,0)
 ;                   Format is IEN^FORM^FIELD^WCFLAG
"RTN","OOPSGUI1",48,0)
 ;            SIGN - contains the signature test to be encrypted.
"RTN","OOPSGUI1",49,0)
 ; Output: RESULTS - is an array containing a list of fields that did
"RTN","OOPSGUI1",50,0)
 ;                   not pass the data validation and must be corrected
"RTN","OOPSGUI1",51,0)
 ;                   prior to applying a signature.
"RTN","OOPSGUI1",52,0)
 N CALL,DTIME,FDUZ,FDT,FLD,IEN,INC,FORM,ESIG,VALID,CALLER,WOK
"RTN","OOPSGUI1",53,0)
 N DR,DA,DIE,WCFLG
"RTN","OOPSGUI1",54,0)
 S IEN=$P($G(INPUT),U),FORM=$P($G(INPUT),U,2),FLD=$P($G(INPUT),U,3)
"RTN","OOPSGUI1",55,0)
 I '$G(IEN)!('$G(FLD)) S RESULTS(1)="User not Authorized to sign form" Q
"RTN","OOPSGUI1",56,0)
 I FLD=45!(FLD=170)!(FLD=266) S CALL="S"
"RTN","OOPSGUI1",57,0)
 I FLD=49!(FLD=77) S CALL="O"
"RTN","OOPSGUI1",58,0)
 ; Patch 5 ll - added !(FLD=313)!(FLD=320)
"RTN","OOPSGUI1",59,0)
 I FLD=68!(FLD=313)!(FLD=320) S CALL="W"
"RTN","OOPSGUI1",60,0)
 I FLD=80 S CALL="H"
"RTN","OOPSGUI1",61,0)
 ; Patch 5 llh - added !(FLD=310)
"RTN","OOPSGUI1",62,0)
 I FLD=120!(FLD=222)!(FLD=310) S CALL="E"
"RTN","OOPSGUI1",63,0)
 S WCFLG=$P($G(INPUT),U,4)
"RTN","OOPSGUI1",64,0)
 I WCFLG'="W" D
"RTN","OOPSGUI1",65,0)
 .; Patch 5 llh - moved non fld check logic to separate line
"RTN","OOPSGUI1",66,0)
 .; added stuff to check if dual benefits have been signed
"RTN","OOPSGUI1",67,0)
 .I (FLD=120!(FLD=222)) D
"RTN","OOPSGUI1",68,0)
 .. I ($$GET1^DIQ(2260,IEN,71,"I")'="Y") D  Q
"RTN","OOPSGUI1",69,0)
 ... S RESULTS(1)="Claim cannot be signed until the Bill of Rights Statement is understood."
"RTN","OOPSGUI1",70,0)
 ... D WCPBOR^OOPSMBUL(IEN)
"RTN","OOPSGUI1",71,0)
 .. I $$GET1^DIQ(2260,IEN,310)="" D  Q
"RTN","OOPSGUI1",72,0)
 ... S RESULTS(1)="Claim cannot be signed until the Dual Benefits form has been signed."
"RTN","OOPSGUI1",73,0)
 ; check to make sure PAID fields (also Service) not "", if "" get data
"RTN","OOPSGUI1",74,0)
 D CHKPAID
"RTN","OOPSGUI1",75,0)
 S VALID=0
"RTN","OOPSGUI1",76,0)
 S INC=$$GET1^DIQ(2260,IEN,52,"I")
"RTN","OOPSGUI1",77,0)
 ; Patch 5 llh - added ,(FLD'>300)
"RTN","OOPSGUI1",78,0)
 I (FLD'=77),(FLD'=80),(FLD'>300) D  I 'VALID Q
"RTN","OOPSGUI1",79,0)
 . D VALIDATE^OOPSGUI9(IEN,FORM,CALL,.VALID)
"RTN","OOPSGUI1",80,0)
 I $G(SIGN)="" S RESULTS(1)="No Signature Entered" Q
"RTN","OOPSGUI1",81,0)
 S VALID=$$VALIDATE($$DECRYP^XUSRB1(SIGN))
"RTN","OOPSGUI1",82,0)
 I 'VALID D  Q
"RTN","OOPSGUI1",83,0)
 . I $P($G(^VA(200,DUZ,20)),"^",4)="" S RESULTS(1)="No Electronic Signature on File" Q
"RTN","OOPSGUI1",84,0)
 . S RESULTS(1)="Invalid Signature Entered."
"RTN","OOPSGUI1",85,0)
SIGN ; All field validated, file signature
"RTN","OOPSGUI1",86,0)
 I FLD=77 S FDUZ=76,FDT=78             ; Safety approve WC sign
"RTN","OOPSGUI1",87,0)
 I FLD=80 S FDUZ=79,FDT=81             ; EH approve WC sign
"RTN","OOPSGUI1",88,0)
 I FLD=120 S FDUZ=119,FDT=121          ; Employee sign CA1
"RTN","OOPSGUI1",89,0)
 I FLD=222 S FDUZ=221,FDT=223          ; Employee sign CA2
"RTN","OOPSGUI1",90,0)
 I FLD=170 S FDUZ=169,FDT=171          ; Super sign CA1
"RTN","OOPSGUI1",91,0)
 I FLD=266 S FDUZ=265,FDT=267          ; Super sign CA2
"RTN","OOPSGUI1",92,0)
 I FLD=45 S FDUZ=44,FDT=46             ; Super sign 2162
"RTN","OOPSGUI1",93,0)
 I FLD=49 S FDUZ=48,FDT=50             ; Safety sign 2162
"RTN","OOPSGUI1",94,0)
 I FLD=68 S FDUZ=67,FDT=69,WOK=1       ; WC approve to DOL
"RTN","OOPSGUI1",95,0)
 ; patch 5 llh - added next 2 lines (may need more)
"RTN","OOPSGUI1",96,0)
 I FLD=310 S FDUZ=309,FDT=311          ; Emp sign Dual Benefits
"RTN","OOPSGUI1",97,0)
 I FLD=313 S FDUZ=312,FDT=314          ; WC sign Dual Benefits
"RTN","OOPSGUI1",98,0)
 D NOW^%DTC S DTIME=%
"RTN","OOPSGUI1",99,0)
 K DR S DIE="^OOPS(2260,",DA=IEN
"RTN","OOPSGUI1",100,0)
 S DR=FDUZ_"////^S X=+DUZ;"_FLD_"////^S X=ESIG;"_FDT_"////^S X=DTIME"
"RTN","OOPSGUI1",101,0)
 D ^DIE
"RTN","OOPSGUI1",102,0)
 I $G(Y)'="" Q
"RTN","OOPSGUI1",103,0)
 I FLD=68 D WCP^OOPSMBUL(IEN,"S")
"RTN","OOPSGUI1",104,0)
 I FLD=120!(FLD=222) S CALLER=CALL D EMP^OOPSVAL1
"RTN","OOPSGUI1",105,0)
 I FLD=45 D SAFETY^OOPSMBUL(IEN)
"RTN","OOPSGUI1",106,0)
 I (FLD=170)!(FLD=266) D SUPS^OOPSMBUL(IEN),UNION^OOPSMBUL(IEN)
"RTN","OOPSGUI1",107,0)
 Q
"RTN","OOPSGUI1",108,0)
VALIDATE(X) ; Validate Electronic Sign code
"RTN","OOPSGUI1",109,0)
 ;  Input:  X - contains the signature to be validated
"RTN","OOPSGUI1",110,0)
 ; Output: VSIGN - contains a 1 if a valid e-signature, a 0 if not valid
"RTN","OOPSGUI1",111,0)
 N VSIGN
"RTN","OOPSGUI1",112,0)
 S VSIGN=0
"RTN","OOPSGUI1",113,0)
 D HASH^XUSHSHP
"RTN","OOPSGUI1",114,0)
 I X'="",(X=$P($G(^VA(200,DUZ,20)),"^",4)) S VSIGN=1,ESIG=X
"RTN","OOPSGUI1",115,0)
 Q VSIGN
"RTN","OOPSGUI1",116,0)
CHKPAID ; check to make sure PAID fields have data, if not populate
"RTN","OOPSGUI1",117,0)
 ; this subroutine can be removed when go completely to GUI
"RTN","OOPSGUI1",118,0)
 N DA,DIE,DR,CAT,FLD,IEN200,OCCD,PAY,PAYP,RET,SAL,SERV,SSN
"RTN","OOPSGUI1",119,0)
 I $$GET1^DIQ(2260,IEN,60)="" D
"RTN","OOPSGUI1",120,0)
 .S FLD=26,RET="",RET=$$PAID^OOPSUTL1(IEN,FLD)
"RTN","OOPSGUI1",121,0)
 .S RET=$S(RET="FULL CSRS":"CSRS",RET="FERS":"FERS",1:"OTHER")
"RTN","OOPSGUI1",122,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="60///^S X=RET" D ^DIE
"RTN","OOPSGUI1",123,0)
 I $$GET1^DIQ(2260,IEN,86)="" D
"RTN","OOPSGUI1",124,0)
 .S SERV="",SSN=$$GET1^DIQ(2260,IEN,5,"I")
"RTN","OOPSGUI1",125,0)
 .I $G(SSN) S IEN200=$O(^VA(200,"SSN",SSN,""))
"RTN","OOPSGUI1",126,0)
 .I $G(IEN200) S SERV=$$GET1^DIQ(200,IEN200,29)
"RTN","OOPSGUI1",127,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="86///^S X=SERV" D ^DIE
"RTN","OOPSGUI1",128,0)
 I $$GET1^DIQ(2260,IEN,166)="" D
"RTN","OOPSGUI1",129,0)
 .S FLD=28,SAL="",SAL=$$PAID^OOPSUTL1(IEN,FLD)
"RTN","OOPSGUI1",130,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="166///^S X=SAL" D ^DIE
"RTN","OOPSGUI1",131,0)
 I $$GET1^DIQ(2260,IEN,167)="" D
"RTN","OOPSGUI1",132,0)
 .S FLD=19,PAY="",PAY=$$PAID^OOPSUTL1(IEN,FLD)
"RTN","OOPSGUI1",133,0)
 .S PAY=$S(PAY="PER ANNUM":"ANNUAL",PAY="PER HOUR":"HOURLY","PER DIEM":"DAILY","BIWEEKLY":"BI-WEEKLY",1:"")
"RTN","OOPSGUI1",134,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="167///^S X=PAY" D ^DIE
"RTN","OOPSGUI1",135,0)
 I $$GET1^DIQ(2260,IEN,63)="",($$GET1^DIQ(2260,IEN,2,"I")<3) D
"RTN","OOPSGUI1",136,0)
 .S CAT=$$GET1^DIQ(2260,IEN,2,"I")
"RTN","OOPSGUI1",137,0)
 .I CAT=1 S PAYP=$$PAID^OOPSUTL1(IEN,20) I $G(PAYP)'="" S PAYP=$$PAYP^OOPSUTL1(PAYP)
"RTN","OOPSGUI1",138,0)
 .I CAT=2 S PAYP="VO"
"RTN","OOPSGUI1",139,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="63///^S X=PAYP" D ^DIE
"RTN","OOPSGUI1",140,0)
 I $$GET1^DIQ(2260,IEN,111)="" D
"RTN","OOPSGUI1",141,0)
 .S FLD=16,OCCD="",OCCD=$$PAID^OOPSUTL1(IEN,FLD)
"RTN","OOPSGUI1",142,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="111///^S X=OCCD" D ^DIE
"RTN","OOPSGUI1",143,0)
 Q
"RTN","OOPSGUI1",144,0)
VALEMP(RESULTS,INPUT) ; This broker call should be used if the Pay
"RTN","OOPSGUI1",145,0)
 ;                 Plan = "OT" (other) to determine if the claim
"RTN","OOPSGUI1",146,0)
 ;                 can be successfully submitted to DOL.  The PERSONNEL
"RTN","OOPSGUI1",147,0)
 ;                 STATUS is assumed to equal 1 (employee)
"RTN","OOPSGUI1",148,0)
 S IEN=$P($G(INPUT),U,2),FORM=$P($G(INPUT),U)
"RTN","OOPSGUI1",149,0)
 I '$G(IEN)!($G(FORM)="") S RESULTS="Invalid Input, cannot continue." Q
"RTN","OOPSGUI1",150,0)
 I $$VALEMP^OOPSUTL6 S RESULTS="Valid" Q
"RTN","OOPSGUI1",151,0)
 S RESULTS="Invalid data on claim"
"RTN","OOPSGUI1",152,0)
 Q
"RTN","OOPSGUI3")
0^10^B47210359
"RTN","OOPSGUI3",1,0)
OOPSGUI3 ;WIOFO/LLH-UTILITY BROKER CALLS ;10/03/01
"RTN","OOPSGUI3",2,0)
 ;;2.0;ASISTS;**8,7**;Jun 03, 2002
"RTN","OOPSGUI3",3,0)
 ;
"RTN","OOPSGUI3",4,0)
SETLCK(RESULTS,IEN) ; Set Lock on Claim being edited
"RTN","OOPSGUI3",5,0)
 ;  Input:  IEN - ASISTS Internal record number to be locked
"RTN","OOPSGUI3",6,0)
 ; Output: RESULTS - Status message, if record not locked
"RTN","OOPSGUI3",7,0)
 ;
"RTN","OOPSGUI3",8,0)
 I '$G(IEN) S RESULTS="Need Record Number to proceed" Q
"RTN","OOPSGUI3",9,0)
 L +^OOPS(2260,IEN):2
"RTN","OOPSGUI3",10,0)
 E  S RESULTS="Another User Editing Record, Try Again Later." Q
"RTN","OOPSGUI3",11,0)
 S RESULTS="RECORD LOCKED"
"RTN","OOPSGUI3",12,0)
 Q
"RTN","OOPSGUI3",13,0)
CLRLCK(RESULTS,IEN) ; Clears Lock on Claim being edited
"RTN","OOPSGUI3",14,0)
 ;   Input:    IEN - ASISTS Internal record number to be cleared
"RTN","OOPSGUI3",15,0)
 ;  Output: RESULTS - Status message, if appropriate
"RTN","OOPSGUI3",16,0)
 ;
"RTN","OOPSGUI3",17,0)
 I '$G(IEN) S RESULTS="Need Record Number to proceed" Q
"RTN","OOPSGUI3",18,0)
 L -^OOPS(2260,IEN)
"RTN","OOPSGUI3",19,0)
 S RESULTS="RECORD UNLOCKED"
"RTN","OOPSGUI3",20,0)
 Q
"RTN","OOPSGUI3",21,0)
GETLIST(RESULTS,FLD) ; RPC Call - Get Pointed to List
"RTN","OOPSGUI3",22,0)
 ;  Input:      FLD - will be the file and field # in FILE,FIELD format.
"RTN","OOPSGUI3",23,0)
 ;                    if there is a 3 piece of FLD, it will contain the
"RTN","OOPSGUI3",24,0)
 ;                    piece number of an extra data element to be
"RTN","OOPSGUI3",25,0)
 ;                    returned.  The format is FILE^FIELD^PIECE#
"RTN","OOPSGUI3",26,0)
 ; Output:  RESULTS - return array
"RTN","OOPSGUI3",27,0)
 ;
"RTN","OOPSGUI3",28,0)
 N FILE,FIELD,TYPE
"RTN","OOPSGUI3",29,0)
 S FILE=$P($G(FLD),U),FIELD=$P($G(FLD),U,2)
"RTN","OOPSGUI3",30,0)
 S TYPE=$$GET1^DID(FILE,FIELD,"","TYPE")
"RTN","OOPSGUI3",31,0)
 I TYPE="SET" D SET1 Q
"RTN","OOPSGUI3",32,0)
 I TYPE="POINTER" D SET3 Q
"RTN","OOPSGUI3",33,0)
 Q
"RTN","OOPSGUI3",34,0)
SET1 ;-- extract a set of codes --
"RTN","OOPSGUI3",35,0)
EN2 N LIST,MUTL,X
"RTN","OOPSGUI3",36,0)
 S LIST=$$GET1^DID(2260,FIELD,"","POINTER")
"RTN","OOPSGUI3",37,0)
 I $E(LIST,1,3)="OOPS" G SET3
"RTN","OOPSGUI3",38,0)
 S MULT=$$GET1^DID(2260,FIELD,"","SPECIFIER")
"RTN","OOPSGUI3",39,0)
 I MULT["A" D
"RTN","OOPSGUI3",40,0)
 . S LIST=$$GET1^DID(+MULT,.01,"","POINTER")
"RTN","OOPSGUI3",41,0)
 F X=1:1 Q:$P($G(LIST),";",X)']""  S RESULTS(X)=$P($G(LIST),";",X)
"RTN","OOPSGUI3",42,0)
 Q
"RTN","OOPSGUI3",43,0)
SET3 ;-- extract items from pointed-to file --
"RTN","OOPSGUI3",44,0)
 N ADDED,ITEM,MULT,ROOT,X,XREF,SFLD,VAL,PTR,PCE,VALID
"RTN","OOPSGUI3",45,0)
 S XREF="B",X=0
"RTN","OOPSGUI3",46,0)
 S ROOT="^"_$$GET1^DID(FILE,FIELD,"","POINTER")
"RTN","OOPSGUI3",47,0)
 S MULT=$$GET1^DID(FILE,FIELD,"","SPECIFIER")
"RTN","OOPSGUI3",48,0)
 I MULT["A" D
"RTN","OOPSGUI3",49,0)
 . S ROOT="^"_$$GET1^DID(+MULT,.01,"","POINTER")
"RTN","OOPSGUI3",50,0)
 S ITEM="" F  S ITEM=$O(@(ROOT_"XREF,ITEM)")) Q:$G(ITEM)']""  D
"RTN","OOPSGUI3",51,0)
 .S PTR=0 F  S PTR=$O(@(ROOT_"XREF,ITEM,PTR)")) Q:PTR=""  D
"RTN","OOPSGUI3",52,0)
 ..I PTR'?1N.N Q
"RTN","OOPSGUI3",53,0)
 ..S VAL=$P(@(ROOT_PTR_",0)"),U)
"RTN","OOPSGUI3",54,0)
 ..;Need to get Station Number with Name to uniquely identify for user
"RTN","OOPSGUI3",55,0)
 ..I FIELD=13 D  I '$G(VALID) Q
"RTN","OOPSGUI3",56,0)
 ...S VALID=1,SFLD=ROOT_PTR_",99)"
"RTN","OOPSGUI3",57,0)
 ...I $P($G(@SFLD),U,4)=1 S VALID=0
"RTN","OOPSGUI3",58,0)
 ...I $P($G(@SFLD),U)'="" S VAL=VAL_" = "_$P($G(@SFLD),U)
"RTN","OOPSGUI3",59,0)
 ...I $P(VAL," = ")="" S VALID=0
"RTN","OOPSGUI3",60,0)
 ..I (FILE=2260)&(FIELD=30!(FIELD=62)!(FIELD=70)!(FIELD=123)!(FIELD=124)!(FIELD=126)) D
"RTN","OOPSGUI3",61,0)
 ... S SFLD=ROOT_PTR_",0)"
"RTN","OOPSGUI3",62,0)
 ... I $P($G(@SFLD),U,2)'="" S VAL=VAL_" - "_$P($G(@SFLD),U,2)
"RTN","OOPSGUI3",63,0)
 ..S X=X+1,RESULTS(X)=PTR_":"_VAL
"RTN","OOPSGUI3",64,0)
 ..I $P($G(FLD),U,3)]"" D
"RTN","OOPSGUI3",65,0)
 ...S PCE=$P($G(FLD),U,3)
"RTN","OOPSGUI3",66,0)
 ...S RESULTS(X)=RESULTS(X)_":"_$P(@(ROOT_"PTR,0)"),U,PCE)
"RTN","OOPSGUI3",67,0)
 Q
"RTN","OOPSGUI3",68,0)
 ;
"RTN","OOPSGUI3",69,0)
GETSCHED(RESULTS,INPUT) ;
"RTN","OOPSGUI3",70,0)
 ;  Input: INPUT - Is the file, field #, and IEN in 
"RTN","OOPSGUI3",71,0)
 ;                 FILE^FIELD^IEN fmt
"RTN","OOPSGUI3",72,0)
 ; Output: RESULTS - return array (Integers indicating schedule)
"RTN","OOPSGUI3",73,0)
 ;
"RTN","OOPSGUI3",74,0)
 S RESULTS(1)="*"
"RTN","OOPSGUI3",75,0)
 N CODE,LAST,DATA,DAY,Y,X,FIELD,FILE,IEN,ROOT,XREF,NODE,PIECE
"RTN","OOPSGUI3",76,0)
 S FILE=$P($G(INPUT),U),FIELD=$P($G(INPUT),U,2)
"RTN","OOPSGUI3",77,0)
 S IEN=$P($G(INPUT),U,3),ROOT=$$GET1^DID(FILE,"","","GLOBAL NAME")
"RTN","OOPSGUI3",78,0)
 I '$G(IEN) Q
"RTN","OOPSGUI3",79,0)
 S XREF=$$GET1^DID(FILE,FIELD,"","GLOBAL SUBSCRIPT LOCATION")
"RTN","OOPSGUI3",80,0)
 S NODE=$P($G(XREF),";"),PIECE=$P($G(XREF),";",2)
"RTN","OOPSGUI3",81,0)
 S CODE=$P($G(@(ROOT_"IEN,NODE)")),U,PIECE) Q:$G(CODE)']""
"RTN","OOPSGUI3",82,0)
 S LAST=$L(CODE,",")
"RTN","OOPSGUI3",83,0)
 F X=1:1:LAST D
"RTN","OOPSGUI3",84,0)
 .S DATA=$P($G(CODE),",",X) Q:$G(DATA)']""  D
"RTN","OOPSGUI3",85,0)
 .I $G(DATA)'["-" S DAY(DATA)=$G(DATA) Q
"RTN","OOPSGUI3",86,0)
 .F Y=$P(DATA,"-",1):1:$P(DATA,"-",2) S DAY(Y)=Y
"RTN","OOPSGUI3",87,0)
 S X=0
"RTN","OOPSGUI3",88,0)
 F  D  Q:+X'>0
"RTN","OOPSGUI3",89,0)
 .S X=$O(DAY(X)) Q:+X'>0  S RESULTS(1)=RESULTS(1)_","_X
"RTN","OOPSGUI3",90,0)
 Q
"RTN","OOPSGUI3",91,0)
 ;
"RTN","OOPSGUI3",92,0)
REPLMULT(RESULTS,INPUT,DATA) ;
"RTN","OOPSGUI3",93,0)
 ;  Input:   INPUT - contains the FILE, FIELD, and IEN of the record
"RTN","OOPSGUI3",94,0)
 ;                   to have the data filed into.
"RTN","OOPSGUI3",95,0)
 ;            DATA - contains the replacement data (internal code/ptr)
"RTN","OOPSGUI3",96,0)
 ; Output: RESULTS - results array to be sent back to client
"RTN","OOPSGUI3",97,0)
 ;
"RTN","OOPSGUI3",98,0)
 D REPLIN,REPLDEL,REPLADD
"RTN","OOPSGUI3",99,0)
 K DA,DIK,FILE,FIELD,NODE,ROOT,SAVEDIK,SUB
"RTN","OOPSGUI3",100,0)
 Q
"RTN","OOPSGUI3",101,0)
REPLIN ;
"RTN","OOPSGUI3",102,0)
 S FILE=$P($G(INPUT),U),FIELD=$P($G(INPUT),U,2),DA(1)=$P($G(INPUT),U,3)
"RTN","OOPSGUI3",103,0)
 S ROOT=$$ROOT^DILFD(FILE,0,"GL")
"RTN","OOPSGUI3",104,0)
 S SUB=$$GET1^DID(2260,FIELD,"","GLOBAL SUBSCRIPT LOCATION")
"RTN","OOPSGUI3",105,0)
 S NODE=$P($G(SUB),";"),PCE=$P($G(SUB),";",2)
"RTN","OOPSGUI3",106,0)
 S SAVEDIK=ROOT_DA(1)_","_$C(34)_NODE_$C(34)_","
"RTN","OOPSGUI3",107,0)
 Q
"RTN","OOPSGUI3",108,0)
REPLDEL ;
"RTN","OOPSGUI3",109,0)
 S DA=0,DIK=SAVEDIK
"RTN","OOPSGUI3",110,0)
 F  S DA=$O(@(ROOT_"DA(1),NODE,DA)")) Q:(+DA'>0)  D ^DIK
"RTN","OOPSGUI3",111,0)
 Q
"RTN","OOPSGUI3",112,0)
REPLADD ;
"RTN","OOPSGUI3",113,0)
 N CNT,DIC,DLAYGO,X
"RTN","OOPSGUI3",114,0)
 S DLAYGO=DA(1),DIC=SAVEDIK,DIC(0)="LNX"
"RTN","OOPSGUI3",115,0)
 S CNT=0
"RTN","OOPSGUI3",116,0)
 F  D  Q:+CNT'>0
"RTN","OOPSGUI3",117,0)
 . S CNT=$O(DATA(CNT)) Q:+CNT'>0
"RTN","OOPSGUI3",118,0)
 . S X=DATA(CNT)
"RTN","OOPSGUI3",119,0)
 . K DD,DO D FILE^DICN
"RTN","OOPSGUI3",120,0)
 Q
"RTN","OOPSGUI3",121,0)
 ;
"RTN","OOPSGUI3",122,0)
BODY(RESULTS) ; get valid Body Parts from file 2261.1
"RTN","OOPSGUI3",123,0)
 ;  Input:          - none
"RTN","OOPSGUI3",124,0)
 ; Output:  RESULTS - an array containing the body parts
"RTN","OOPSGUI3",125,0)
 ;
"RTN","OOPSGUI3",126,0)
 N PP,COUNT,DATA,BPIEN,BPGRP,BODY
"RTN","OOPSGUI3",127,0)
 S (PP,COUNT)=0
"RTN","OOPSGUI3",128,0)
 F  S PP=$O(^OOPS(2261.1,PP)) Q:+PP'>0  D
"RTN","OOPSGUI3",129,0)
 . Q:$P(^OOPS(2261.1,PP,0),U,2)=0
"RTN","OOPSGUI3",130,0)
 . Q:+$P(^OOPS(2261.1,PP,0),U,2)>0
"RTN","OOPSGUI3",131,0)
 . S DATA=^OOPS(2261.1,PP,0)
"RTN","OOPSGUI3",132,0)
 . ; patch 5 llh - get Body Part Group IEN and Name and send back
"RTN","OOPSGUI3",133,0)
 . S BPIEN=$P($G(DATA),U,3),BPGRP=""
"RTN","OOPSGUI3",134,0)
 . I $G(BPIEN) S BPGRP=$P($G(^OOPS(2263.8,BPIEN,0)),U) D
"RTN","OOPSGUI3",135,0)
 .. S BODY(BPGRP)=BPIEN
"RTN","OOPSGUI3",136,0)
 . S RESULTS(COUNT)=$P(DATA,U)_" - "_$P(DATA,U,2)_U_BPGRP
"RTN","OOPSGUI3",137,0)
 . S COUNT=COUNT+1
"RTN","OOPSGUI3",138,0)
 S BPGRP=""
"RTN","OOPSGUI3",139,0)
 F  S BPGRP=$O(BODY(BPGRP)) Q:BPGRP=""  D
"RTN","OOPSGUI3",140,0)
 . S RESULTS(COUNT)=U_BPGRP_U_BODY(BPGRP),COUNT=COUNT+1
"RTN","OOPSGUI3",141,0)
 QUIT
"RTN","OOPSGUI3",142,0)
GETDATA(RESULTS,INPUT) ; Retrieves Set of Code, WP, and Multiple valued fields
"RTN","OOPSGUI3",143,0)
 ;    for any file and field passed in the INPUT parameter
"RTN","OOPSGUI3",144,0)
 ;  Input - INPUT contains the File & Field # of the file to retrieve the
"RTN","OOPSGUI3",145,0)
 ;          data from and the File IEN.  The format is FILE^FIELD^IEN
"RTN","OOPSGUI3",146,0)
 ; Output - RESULTS, the array containing the data being returned  
"RTN","OOPSGUI3",147,0)
 ;
"RTN","OOPSGUI3",148,0)
 N IEN,FILE,FIELD,NODE,PCE,ROOT,TYP,SUB
"RTN","OOPSGUI3",149,0)
 S FILE=$P($G(INPUT),U),FIELD=$P($G(INPUT),U,2),IEN=$P($G(INPUT),U,3)
"RTN","OOPSGUI3",150,0)
 I $G(IEN)=""!($G(FILE)="")!($G(FIELD)="") Q
"RTN","OOPSGUI3",151,0)
 S ROOT=$$ROOT^DILFD(FILE,0,"GL")
"RTN","OOPSGUI3",152,0)
 S TYP=$$GET1^DID(FILE,FIELD,"","TYPE")
"RTN","OOPSGUI3",153,0)
 S SUB=$$GET1^DID(FILE,FIELD,"","GLOBAL SUBSCRIPT LOCATION")
"RTN","OOPSGUI3",154,0)
 S NODE=$P($G(SUB),";"),PCE=$P($G(SUB),";",2)
"RTN","OOPSGUI3",155,0)
 I TYP="POINTER",PCE>0 D PTR Q
"RTN","OOPSGUI3",156,0)
 I TYP="POINTER",PCE=0 D PTRMULT Q
"RTN","OOPSGUI3",157,0)
 I TYP="SET",PCE>0 D SET Q
"RTN","OOPSGUI3",158,0)
 I TYP="SET",PCE=0 D SETMULT Q
"RTN","OOPSGUI3",159,0)
 I TYP="WORD-PROCESSING" D WPFLD Q
"RTN","OOPSGUI3",160,0)
 Q
"RTN","OOPSGUI3",161,0)
SET ;
"RTN","OOPSGUI3",162,0)
 N CODE,LIST,X
"RTN","OOPSGUI3",163,0)
 S CODE=$P(@(ROOT_"IEN,NODE)"),U,PCE)
"RTN","OOPSGUI3",164,0)
EN1 S LIST=$$GET1^DID(FILE,FIELD,"","SPECIFIER")
"RTN","OOPSGUI3",165,0)
 I +LIST S FILE=+LIST,FIELD=.01 G EN1
"RTN","OOPSGUI3",166,0)
 S LIST=$$GET1^DID(FILE,FIELD,"","POINTER")
"RTN","OOPSGUI3",167,0)
 I $G(LIST)="" Q
"RTN","OOPSGUI3",168,0)
 F X=1:1 Q:$P(LIST,";",X)']""  I $P($P(LIST,";",X),":")=CODE S RESULTS(1)=$P(LIST,";",X)
"RTN","OOPSGUI3",169,0)
 Q
"RTN","OOPSGUI3",170,0)
 ;
"RTN","OOPSGUI3",171,0)
SETMULT ;
"RTN","OOPSGUI3",172,0)
 N A,LIST,REC,DATA,X
"RTN","OOPSGUI3",173,0)
ENM S LIST=$$GET1^DID(FILE,FIELD,"","SPECIFIER")
"RTN","OOPSGUI3",174,0)
 I +LIST S FILE=+LIST,FIELD=.01 G ENM
"RTN","OOPSGUI3",175,0)
 S LIST=$$GET1^DID(FILE,FIELD,"","POINTER")
"RTN","OOPSGUI3",176,0)
 I $G(LIST)="" Q
"RTN","OOPSGUI3",177,0)
 S (REC,X)=0 F  D  Q:+REC'>0
"RTN","OOPSGUI3",178,0)
 .S REC=$O(@(ROOT_"IEN,NODE,REC)")) Q:+REC'>0
"RTN","OOPSGUI3",179,0)
 .S DATA=@(ROOT_"IEN,NODE,REC,0)")
"RTN","OOPSGUI3",180,0)
 .S A=$P($G(LIST),DATA_":",2)
"RTN","OOPSGUI3",181,0)
 .S X=X+1
"RTN","OOPSGUI3",182,0)
 .S RESULTS(X)=$G(DATA)_":"_$P($G(A),";")
"RTN","OOPSGUI3",183,0)
 Q
"RTN","OOPSGUI3",184,0)
PTR ; Pointer fields
"RTN","OOPSGUI3",185,0)
 N PTR,PROOT
"RTN","OOPSGUI3",186,0)
 S PTR=$P(@(ROOT_"IEN,NODE)"),U,PIECE)
"RTN","OOPSGUI3",187,0)
 S PROOT="^"_$$GET1^DID(FILE,FIELD,"","POINTER")
"RTN","OOPSGUI3",188,0)
 S RESULTS(1)=PTR_":"_$P(@(PROOT_"PTR,0)"),U,1)
"RTN","OOPSGUI3",189,0)
 Q
"RTN","OOPSGUI3",190,0)
PTRMULT ; Multiple pointer value fields
"RTN","OOPSGUI3",191,0)
 N DATA,XROOT,PROOT,REC,RECORD,X
"RTN","OOPSGUI3",192,0)
 S XROOT=+$$GET1^DID(FILE,FIELD,"","SPECIFIER")
"RTN","OOPSGUI3",193,0)
 S PROOT="^"_$$GET1^DID(XROOT,.01,"","POINTER")
"RTN","OOPSGUI3",194,0)
 S (REC,X)=0 F  D  Q:+REC'>0
"RTN","OOPSGUI3",195,0)
 .S REC=$O(@(ROOT_"IEN,NODE,REC)")) Q:+REC'>0
"RTN","OOPSGUI3",196,0)
 .S RECORD=@(ROOT_"IEN,NODE,REC,0)")
"RTN","OOPSGUI3",197,0)
 .S DATA=$P($G(RECORD),U,1)
"RTN","OOPSGUI3",198,0)
 .S X=X+1,RESULTS(X)=$G(DATA)_":"_$P(@(PROOT_"DATA,0)"),U,1)
"RTN","OOPSGUI3",199,0)
 Q
"RTN","OOPSGUI3",200,0)
WPFLD ; Word processing fields
"RTN","OOPSGUI3",201,0)
 N DA
"RTN","OOPSGUI3",202,0)
 S DA=0  F  D  Q:+DA'>0
"RTN","OOPSGUI3",203,0)
 .S DA=$O(@(ROOT_"IEN,NODE,DA)")) Q:+DA'>0
"RTN","OOPSGUI3",204,0)
 .S RESULTS(DA)=@(ROOT_"IEN,NODE,DA,0)")
"RTN","OOPSGUI3",205,0)
 Q
"RTN","OOPSGUI3",206,0)
 ;
"RTN","OOPSGUI3",207,0)
STATINFO(RESULTS,STATIEN) ;Get Station Info from DIC(4
"RTN","OOPSGUI3",208,0)
 ;  Input STATIEN - Required valid IEN for a station in DIC 4.
"RTN","OOPSGUI3",209,0)
 ; Output RESULTS - Station Address info stored in this format
"RTN","OOPSGUI3",210,0)
 ;                  STREET^CITY^STATE^ZIP or if not a valid IEN
"RTN","OOPSGUI3",211,0)
 ;                  "INVALID STATION"
"RTN","OOPSGUI3",212,0)
 N STATE,CITY,ADDR,ZIP
"RTN","OOPSGUI3",213,0)
 I $$GET1^DIQ(4,STATIEN,.01)="" S RESULTS(0)="INVALID STATION" Q
"RTN","OOPSGUI3",214,0)
 S STATE=$$GET1^DIQ(4,STATIEN,.02)
"RTN","OOPSGUI3",215,0)
 S CITY=$$GET1^DIQ(4,STATIEN,1.03)
"RTN","OOPSGUI3",216,0)
 S ADDR=$$GET1^DIQ(4,STATIEN,1.01)
"RTN","OOPSGUI3",217,0)
 S ZIP=$$GET1^DIQ(4,STATIEN,1.04)
"RTN","OOPSGUI3",218,0)
 S RESULTS(0)=ADDR_U_CITY_U_STATE_U_ZIP
"RTN","OOPSGUI3",219,0)
 Q
"RTN","OOPSGUI4")
0^5^B52094006
"RTN","OOPSGUI4",1,0)
OOPSGUI4 ;WIOFO/LLH-RPC BROKER CALLS ;10/02/01
"RTN","OOPSGUI4",2,0)
 ;;2.0;ASISTS;**4,8,7**;Jun 03, 2002
"RTN","OOPSGUI4",3,0)
 ;
"RTN","OOPSGUI4",4,0)
PAID(RESULTS,NAME) ; retrieves PAID employee and data from file 450
"RTN","OOPSGUI4",5,0)
 ;  Input:    NAME - the Employee Name or partial name Passed in
"RTN","OOPSGUI4",6,0)
 ; Output: RESULTS - array containing PAID fields in the order returned
"RTN","OOPSGUI4",7,0)
 ;                   from FIND^DIC
"RTN","OOPSGUI4",8,0)
 ;
"RTN","OOPSGUI4",9,0)
 N IEN200,LP,PAY,PAYP,PHONE,OCCDESC,RET,SAL,SSN,X,STATE,SERV,SAMEFLG
"RTN","OOPSGUI4",10,0)
 N IEN450
"RTN","OOPSGUI4",11,0)
 I NAME="" S RESULTS(1)="^NO SSN OR NAME PROVIDED" Q
"RTN","OOPSGUI4",12,0)
 S X=NAME,SAMEFLG=0
"RTN","OOPSGUI4",13,0)
 D FIND^DIC(450,,"@;.01;6;8;10;13;16EI;31;32;38;186.1;186.2;186;186.4;458I;30","MPS",X,500)
"RTN","OOPSGUI4",14,0)
 I $G(DIERR) D CLEAN^DILF Q
"RTN","OOPSGUI4",15,0)
 I $P(^TMP("DILIST",$J,0),U)=0 S RESULTS(0)="^NO PAID EMPLOYEE FOUND" Q
"RTN","OOPSGUI4",16,0)
 F LP=0:0 S LP=$O(^TMP("DILIST",$J,LP)) Q:LP=""  D
"RTN","OOPSGUI4",17,0)
 .; cannot pick yourself if selecting case,use SSN to see if DUZ matches
"RTN","OOPSGUI4",18,0)
 .S SSN=$TR($P($G(^TMP("DILIST",$J,LP,0)),U,4),"-","")
"RTN","OOPSGUI4",19,0)
 .I $G(SSN) S IEN200=$O(^VA(200,"SSN",SSN,""))
"RTN","OOPSGUI4",20,0)
 .; 12/29/03 llh - also cannot pick a person from the PAID file with
"RTN","OOPSGUI4",21,0)
 .;                a pseudo SSN (one that begins with 000)
"RTN","OOPSGUI4",22,0)
 .I $E(SSN,1,3)="000" Q
"RTN","OOPSGUI4",23,0)
 .I DUZ=IEN200 S SAMEFLG=1 Q
"RTN","OOPSGUI4",24,0)
 .S RESULTS(LP)=^TMP("DILIST",$J,LP,0)
"RTN","OOPSGUI4",25,0)
 .S $P(RESULTS(LP),U,5)=$E($P(RESULTS(LP),U,5),1,45)
"RTN","OOPSGUI4",26,0)
 .S $P(RESULTS(LP),U,8)=$E($P($G(RESULTS(LP)),U,8),1,4)
"RTN","OOPSGUI4",27,0)
 .S PHONE=""  ; ,SSN=$TR($P($G(RESULTS(LP)),U,4),"-","")
"RTN","OOPSGUI4",28,0)
 .I $G(IEN200) S PHONE=$P($G(^VA(200,IEN200,.13)),U)
"RTN","OOPSGUI4",29,0)
 .I $TR(PHONE,"(,)-^*/# &%@!","")'?10N S PHONE=""  ;Must be 10 char
"RTN","OOPSGUI4",30,0)
 .S RESULTS(LP)=RESULTS(LP)_U_PHONE
"RTN","OOPSGUI4",31,0)
 .S IEN450=$P(RESULTS(LP),U)
"RTN","OOPSGUI4",32,0)
 .I $G(IEN450) D
"RTN","OOPSGUI4",33,0)
 ..S PAYP=$$GET1^DIQ(450,IEN450,20) I $G(PAYP)'="" S PAYP=$$PAYP^OOPSUTL1(PAYP)
"RTN","OOPSGUI4",34,0)
 ..S SAL=$$GET1^DIQ(450,IEN450,28)
"RTN","OOPSGUI4",35,0)
 ..S RET=$$GET1^DIQ(450,IEN450,26) I $G(RET)'="" S RET=$S(RET="FULL CSRS":"CSRS",RET="FERS":"FERS",1:"OTHER")
"RTN","OOPSGUI4",36,0)
 ..S PAY=$$GET1^DIQ(450,IEN450,19) I $G(PAY)'="" S PAY=$S(PAY="PER ANNUM":"ANNUAL",PAY="PER HOUR":"HOURLY","PER DIEM":"DAILY","BIWEEKLY":"BI-WEEKLY",1:"")
"RTN","OOPSGUI4",37,0)
 ..S OCCDESC=$E($$GET1^DIQ(450,IEN450,16),1,30)
"RTN","OOPSGUI4",38,0)
 .S SERV="" I $G(IEN200) S SERV=$$GET1^DIQ(200,IEN200,29)
"RTN","OOPSGUI4",39,0)
 .S RESULTS(LP)=RESULTS(LP)_U_PAY_U_SAL_U_RET_U_PAYP_U_OCCDESC_U_SERV
"RTN","OOPSGUI4",40,0)
 I SAMEFLG,'$D(RESULTS) S RESULTS(0)="^CANNOT CREATE CASE FOR YOURSELF"
"RTN","OOPSGUI4",41,0)
 KILL DIERR,^TMP("DILIST",$J)
"RTN","OOPSGUI4",42,0)
 Q
"RTN","OOPSGUI4",43,0)
 ;
"RTN","OOPSGUI4",44,0)
ASISTS(RESULTS,NAME) ; Lookup on ASISTS Accident Reporting file_2260
"RTN","OOPSGUI4",45,0)
 ;  Input:  - Name or partial name of person to lookup on
"RTN","OOPSGUI4",46,0)
 ; Output:  - array with name of person, sex, DOB, and SSN
"RTN","OOPSGUI4",47,0)
 ;
"RTN","OOPSGUI4",48,0)
 N ARR,I,X,SAMEFLG
"RTN","OOPSGUI4",49,0)
 K ^TMP("DILIST",$J)
"RTN","OOPSGUI4",50,0)
 I NAME="" S RESULTS(0)="^NO SSN OR NAME PROVIDED" Q
"RTN","OOPSGUI4",51,0)
 S X=NAME,SAMEFLG=0
"RTN","OOPSGUI4",52,0)
 ; patch 5 llh - added the 3 indices
"RTN","OOPSGUI4",53,0)
 D FIND^DIC(2260,,"@;1;7;6;5","PSMC",X,500,"C^SSN^BS5")
"RTN","OOPSGUI4",54,0)
 I $G(DIERR) D CLEAN^DILF Q
"RTN","OOPSGUI4",55,0)
 I $P(^TMP("DILIST",$J,0),"^")=0 S RESULTS(1)="^NO ASISTS CASE FOUND" Q
"RTN","OOPSGUI4",56,0)
 F I=0:0 S I=$O(^TMP("DILIST",$J,I)) Q:I=""  D
"RTN","OOPSGUI4",57,0)
 . I DUZ=$P(^TMP("DILIST",$J,I,0),U) S SAMEFLG=1 Q
"RTN","OOPSGUI4",58,0)
 . I $D(ARR($P(^TMP("DILIST",$J,I,0),U,2))) Q
"RTN","OOPSGUI4",59,0)
 . S ARR($P(^TMP("DILIST",$J,I,0),U,2))=""
"RTN","OOPSGUI4",60,0)
 . S RESULTS(I)=^TMP("DILIST",$J,I,0)
"RTN","OOPSGUI4",61,0)
 I SAMEFLG,'$D(RESULTS) S RESULTS(0)="^CANNOT CREATE CASE FOR YOURSELF"
"RTN","OOPSGUI4",62,0)
 I '$D(RESULTS) S RESULTS(0)="^NO SELECTABLE CASES FOUND"
"RTN","OOPSGUI4",63,0)
 K DIERR,^TMP("DILIST",$J)
"RTN","OOPSGUI4",64,0)
 Q
"RTN","OOPSGUI4",65,0)
PER(RESULTS,NAME) ; Lookup for Non-Paid Employee (New Person file_
"RTN","OOPSGUI4",66,0)
 ;  Input:  - Name or partial name of person to lookup on
"RTN","OOPSGUI4",67,0)
 ; Output:  - array with name of new person, sex, DOB, and SSN
"RTN","OOPSGUI4",68,0)
 ;
"RTN","OOPSGUI4",69,0)
 N I,SSN,X,SAMEFLG
"RTN","OOPSGUI4",70,0)
 K ^TMP("DILIST",$J)
"RTN","OOPSGUI4",71,0)
 I NAME="" S RESULTS(0)="^NO SSN OR NAME PROVIDED" Q
"RTN","OOPSGUI4",72,0)
 S X=NAME,SAMEFLG=0
"RTN","OOPSGUI4",73,0)
 D FIND^DIC(200,,"@;.01;4;5;9;29","PSMC",X,500)
"RTN","OOPSGUI4",74,0)
 I $G(DIERR) D CLEAN^DILF Q
"RTN","OOPSGUI4",75,0)
 I $P(^TMP("DILIST",$J,0),"^")=0 S RESULTS(1)="^NO NEW PERSON FOUND" Q
"RTN","OOPSGUI4",76,0)
 F I=0:0 S I=$O(^TMP("DILIST",$J,I)) Q:I=""  D
"RTN","OOPSGUI4",77,0)
 . ; make sure not a PAID Employee
"RTN","OOPSGUI4",78,0)
 . S SSN=$P(^TMP("DILIST",$J,I,0),U,5)
"RTN","OOPSGUI4",79,0)
 . I $G(SSN),$$FIND1^DIC(450,"","MX",SSN) Q
"RTN","OOPSGUI4",80,0)
 . I DUZ=$P(^TMP("DILIST",$J,I,0),U) S SAMEFLG=1 Q
"RTN","OOPSGUI4",81,0)
 . S RESULTS(I)=^TMP("DILIST",$J,I,0)
"RTN","OOPSGUI4",82,0)
 I SAMEFLG,'$D(RESULTS) S RESULTS(0)="^CANNOT CREATE CASE FOR YOURSELF"
"RTN","OOPSGUI4",83,0)
 I '$D(RESULTS) S RESULTS(0)="^NO SELECTABLE CASES FOUND"
"RTN","OOPSGUI4",84,0)
 K DIERR,^TMP("DILIST",$J)
"RTN","OOPSGUI4",85,0)
 Q
"RTN","OOPSGUI4",86,0)
SUPER(RESULTS,NAME,EMPSSN) ; Lookup for Supervisors or anyone from the New 
"RTN","OOPSGUI4",87,0)
 ;                 Person file.  This broker call will also be used to
"RTN","OOPSGUI4",88,0)
 ;                 lookup Union representatives for the Enter/Edit
"RTN","OOPSGUI4",89,0)
 ;                 Union Information.
"RTN","OOPSGUI4",90,0)
 ;  Input:    NAME - Name or partial name of person to lookup on
"RTN","OOPSGUI4",91,0)
 ;             SSN - SSN of the Person Involved if called from 2162
"RTN","OOPSGUI4",92,0)
 ; Output: RESULTS - array with name of new person, sex, DOB, and SSN
"RTN","OOPSGUI4",93,0)
 ;
"RTN","OOPSGUI4",94,0)
 N I,SSN,SAME,X
"RTN","OOPSGUI4",95,0)
 K ^TMP("DILIST",$J)
"RTN","OOPSGUI4",96,0)
 I NAME="" S RESULTS(1)="^NO SSN OR NAME PROVIDED" Q
"RTN","OOPSGUI4",97,0)
 S X=NAME,SAME=0
"RTN","OOPSGUI4",98,0)
 D FIND^DIC(200,,".01;9","PSCM",X,500)
"RTN","OOPSGUI4",99,0)
 I $G(DIERR) D CLEAN^DILF Q
"RTN","OOPSGUI4",100,0)
 I $P(^TMP("DILIST",$J,0),"^")=0 S RESULTS(1)="^NO NEW PERSON FOUND" Q
"RTN","OOPSGUI4",101,0)
 F I=0:0 S I=$O(^TMP("DILIST",$J,I)) Q:I=""  D
"RTN","OOPSGUI4",102,0)
 . I $G(EMPSSN)'="",($P(^TMP("DILIST",$J,I,0),U,3)=$G(EMPSSN)) S SAME=1 Q
"RTN","OOPSGUI4",103,0)
 . S RESULTS(I)=^TMP("DILIST",$J,I,0)
"RTN","OOPSGUI4",104,0)
 I SAME,'$D(RESULTS) S RESULTS(1)="^CANNOT BE SUPERVISOR FOR YOUR CLAIM"
"RTN","OOPSGUI4",105,0)
 I '$D(RESULTS) S RESULTS(1)="^NO VALID SELECTION"
"RTN","OOPSGUI4",106,0)
 K DIERR,^TMP("DILIST",$J)
"RTN","OOPSGUI4",107,0)
 Q
"RTN","OOPSGUI4",108,0)
 ;
"RTN","OOPSGUI4",109,0)
LOAD(RESULTS,ARR) ; Create new OOPS record
"RTN","OOPSGUI4",110,0)
 ;  Input:     ARR  - contains data entered from the Create Accident/
"RTN","OOPSGUI4",111,0)
 ;                    Illness Report Option
"RTN","OOPSGUI4",112,0)
 ; Output:  RESULTS - status message
"RTN","OOPSGUI4",113,0)
 ;
"RTN","OOPSGUI4",114,0)
 N ASUB,CAT,DA,DATE,DIC,DR,ERROR,FLDS,FNUM,FYEAR,IEN2260,LP,NUM,PCE,SSN,X
"RTN","OOPSGUI4",115,0)
 N LIST,CNT,DLAYGO
"RTN","OOPSGUI4",116,0)
 S CAT=""
"RTN","OOPSGUI4",117,0)
 I $G(ARR(2)) S CAT=ARR(2)
"RTN","OOPSGUI4",118,0)
 I $G(ARR(5)) S SSN=ARR(5)
"RTN","OOPSGUI4",119,0)
 D NOW^%DTC
"RTN","OOPSGUI4",120,0)
 S DATE=X
"RTN","OOPSGUI4",121,0)
 S FYEAR=""
"RTN","OOPSGUI4",122,0)
 S FYEAR=$$FYEAR^OOPSCSN(X)
"RTN","OOPSGUI4",123,0)
 S NUM=$$NEWR^OOPSCSN(FYEAR)
"RTN","OOPSGUI4",124,0)
 K DD,DO
"RTN","OOPSGUI4",125,0)
 S DLAYGO=2260,DIC="^OOPS(2260,"
"RTN","OOPSGUI4",126,0)
 S DIC(0)="QLZ"
"RTN","OOPSGUI4",127,0)
 S X=NUM
"RTN","OOPSGUI4",128,0)
 D FILE^DICN
"RTN","OOPSGUI4",129,0)
 I Y<0 S (RESULTS,RESULTS(0))="UNABLE TO CREATE RECORD" Q
"RTN","OOPSGUI4",130,0)
 S IEN2260=+Y
"RTN","OOPSGUI4",131,0)
 S DIE="^OOPS(2260,"
"RTN","OOPSGUI4",132,0)
 S DA=IEN2260
"RTN","OOPSGUI4",133,0)
 ;
"RTN","OOPSGUI4",134,0)
 S LIST="1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,52,60,63,86,90,335,336"
"RTN","OOPSGUI4",135,0)
 I ARR(52)="Injury" S LIST=LIST_",111,166,167"
"RTN","OOPSGUI4",136,0)
 I ARR(52)="Illness/Disease" S LIST=LIST_",208,334"
"RTN","OOPSGUI4",137,0)
 F CNT=1:1 S FNUM=$P(LIST,",",CNT) Q:FNUM=""  I $G(ARR(FNUM))'="" D VAL(DA,FNUM,ARR(FNUM))
"RTN","OOPSGUI4",138,0)
 K DR S DIE="^OOPS(2260,",DA=IEN2260,DR=""
"RTN","OOPSGUI4",139,0)
 S DR(1,2260,1)="1///^S X=ARR(1)"
"RTN","OOPSGUI4",140,0)
 S DR(1,2260,2)="2///^S X=ARR(2)"
"RTN","OOPSGUI4",141,0)
 S DR(1,2260,3)="3///^S X=ARR(3)"
"RTN","OOPSGUI4",142,0)
 S DR(1,2260,4)="4///^S X=ARR(4)"
"RTN","OOPSGUI4",143,0)
 S DR(1,2260,5)="5///^S X=ARR(5)"
"RTN","OOPSGUI4",144,0)
 S DR(1,2260,6)="6///^S X=ARR(6)"
"RTN","OOPSGUI4",145,0)
 S DR(1,2260,7)="7///^S X=ARR(7)"
"RTN","OOPSGUI4",146,0)
 S DR(1,2260,8)="8///^S X=ARR(8)"
"RTN","OOPSGUI4",147,0)
 S DR(1,2260,9)="9///^S X=ARR(9)"
"RTN","OOPSGUI4",148,0)
 S DR(1,2260,10)="10///^S X=ARR(10)"
"RTN","OOPSGUI4",149,0)
 S DR(1,2260,12)="11///^S X=ARR(11)"
"RTN","OOPSGUI4",150,0)
 S DR(1,2260,15)="12///^S X=ARR(12)"
"RTN","OOPSGUI4",151,0)
 S DR(1,2260,18)="13////^S X=ARR(13)"     ; sending pointer
"RTN","OOPSGUI4",152,0)
 S DR(1,2260,21)="14///^S X=ARR(14)"
"RTN","OOPSGUI4",153,0)
 S DR(1,2260,24)="15///^S X=ARR(15)"
"RTN","OOPSGUI4",154,0)
 S DR(1,2260,27)="16///^S X=ARR(16)"
"RTN","OOPSGUI4",155,0)
 S DR(1,2260,30)="17///^S X=ARR(17)"
"RTN","OOPSGUI4",156,0)
 S DR(1,2260,33)="18///^S X=ARR(18)"
"RTN","OOPSGUI4",157,0)
 S DR(1,2260,36)="52///^S X=ARR(52)"
"RTN","OOPSGUI4",158,0)
 S DR(1,2260,39)="53////^S X=ARR(53)"     ; send pointer
"RTN","OOPSGUI4",159,0)
 S DR(1,2260,42)="53.1////^S X=ARR(22)"   ; send pointer
"RTN","OOPSGUI4",160,0)
 S DR(1,2260,45)="56////^S X=ARR(48)"     ; send pointer
"RTN","OOPSGUI4",161,0)
 S DR(1,2260,48)="60///^S X=ARR(60)"
"RTN","OOPSGUI4",162,0)
 S DR(1,2260,51)="63///^S X=ARR(63)"
"RTN","OOPSGUI4",163,0)
 S DR(1,2260,54)="86///^S X=ARR(86)"
"RTN","OOPSGUI4",164,0)
 S DR(1,2260,57)="90///^S X=ARR(90)"
"RTN","OOPSGUI4",165,0)
 S DR(1,2260,58)="335///^S X=ARR(169)"
"RTN","OOPSGUI4",166,0)
 S DR(1,2260,59)="336///^S X=ARR(170)"
"RTN","OOPSGUI4",167,0)
 I ARR(52)="Injury" D
"RTN","OOPSGUI4",168,0)
 . S DR(1,2260,60)="111///^S X=ARR(19)"
"RTN","OOPSGUI4",169,0)
 . S DR(1,2260,63)="166///^S X=ARR(166)"
"RTN","OOPSGUI4",170,0)
 . S DR(1,2260,67)="167///^S X=ARR(167)"
"RTN","OOPSGUI4",171,0)
 I ARR(52)="Illness/Disease" D
"RTN","OOPSGUI4",172,0)
 . S DR(1,2260,60)="208///^S X=ARR(19)"
"RTN","OOPSGUI4",173,0)
 . S DR(1,2260,61)="334///^S X=ARR(168)"
"RTN","OOPSGUI4",174,0)
 D ^DIE
"RTN","OOPSGUI4",175,0)
 D CASE^OOPSMBUL(IEN2260) D:(CAT=1)!(CAT=6) BOR^OOPSMBUL(IEN2260):$D(^VA(200,"SSN",SSN))
"RTN","OOPSGUI4",176,0)
 K DR S DIE="^OOPS(2260,",DA=IEN2260,DR="51///0" D ^DIE
"RTN","OOPSGUI4",177,0)
 K DIE,DR,DA
"RTN","OOPSGUI4",178,0)
 S (RESULTS,RESULTS(1))="OK" S:$G(ERROR)]"" (RESULTS,RESULTS(1))=ERROR
"RTN","OOPSGUI4",179,0)
 S RESULTS(2)=$P(^OOPS(2260,IEN2260,0),"^")
"RTN","OOPSGUI4",180,0)
 Q
"RTN","OOPSGUI4",181,0)
 ;
"RTN","OOPSGUI4",182,0)
DELETE ;Delete incomplete case
"RTN","OOPSGUI4",183,0)
 N DIK,DA
"RTN","OOPSGUI4",184,0)
 S DIK="^OOPS(2260,",DA=IEN2260
"RTN","OOPSGUI4",185,0)
 D ^DIK
"RTN","OOPSGUI4",186,0)
 Q
"RTN","OOPSGUI4",187,0)
 ;
"RTN","OOPSGUI4",188,0)
VAL(DA,FIELD,VALUE) ;Validate Input
"RTN","OOPSGUI4",189,0)
 ;  Input:   DA  - IEN of the ASISTS record
"RTN","OOPSGUI4",190,0)
 ;        FIELD  - field number for data to be validated
"RTN","OOPSGUI4",191,0)
 ;        VALUE  - data to be validated
"RTN","OOPSGUI4",192,0)
 ; Output:
"RTN","OOPSGUI4",193,0)
 ;        none
"RTN","OOPSGUI4",194,0)
 N X
"RTN","OOPSGUI4",195,0)
 D VAL^DIE(2260,DA,FIELD,"",VALUE,.X)
"RTN","OOPSGUI4",196,0)
 I X=U D
"RTN","OOPSGUI4",197,0)
 .S:$G(ERROR)]"" ERROR=ERROR_","
"RTN","OOPSGUI4",198,0)
 .S ERROR=$G(ERROR)_$$GET1^DID(2260,FIELD,"","LABEL")_U_VALUE
"RTN","OOPSGUI4",199,0)
 .; set the data to nil so filing will not bomb
"RTN","OOPSGUI4",200,0)
 .S ARR(FIELD)=""
"RTN","OOPSGUI4",201,0)
 Q
"RTN","OOPSGUI4",202,0)
DUP(RESULTS,SSN) ; Duplicate Case error checking broker call
"RTN","OOPSGUI4",203,0)
 ;  Input:    INPUT - SSN of current ASISTS case number
"RTN","OOPSGUI4",204,0)
 ; Output:  RESULTS - return array with case information
"RTN","OOPSGUI4",205,0)
 ;
"RTN","OOPSGUI4",206,0)
 N CN,DT,IEN,NM,TYPE
"RTN","OOPSGUI4",207,0)
 S IEN="",CN=0
"RTN","OOPSGUI4",208,0)
 S RESULTS(CN)="NO MATCHES FOUND"
"RTN","OOPSGUI4",209,0)
 F  S IEN=$O(^OOPS(2260,"SSN",SSN,IEN)) Q:IEN=""  D
"RTN","OOPSGUI4",210,0)
 . I $$GET1^DIQ(2260,IEN,51,"I") Q        ;case not open, don't include
"RTN","OOPSGUI4",211,0)
 . S NM=$$GET1^DIQ(2260,IEN,1)
"RTN","OOPSGUI4",212,0)
 . S TYPE=$$GET1^DIQ(2260,IEN,"3:.01")
"RTN","OOPSGUI4",213,0)
 . S DT=$$GET1^DIQ(2260,IEN,4)
"RTN","OOPSGUI4",214,0)
 . S RESULTS(CN)=NM_"  "_DT_"  "_TYPE
"RTN","OOPSGUI4",215,0)
 . S CN=CN+1,(NM,TYPE,DT)=""
"RTN","OOPSGUI4",216,0)
 Q
"RTN","OOPSGUI5")
0^6^B69696851
"RTN","OOPSGUI5",1,0)
OOPSGUI5 ;WIOFO/CVW-RPC routines ;10/11/01
"RTN","OOPSGUI5",2,0)
 ;;2.0;ASISTS;**2,8,7**;Jun 03, 2002
"RTN","OOPSGUI5",3,0)
EDIT(RESULTS,INPUT,ARR) ;
"RTN","OOPSGUI5",4,0)
 ;  Input:    INPUT - IEN^FORM where IEN = ASISTS IEN or "NEW" if the
"RTN","OOPSGUI5",5,0)
 ;                    user has requested creating a new CA7.
"RTN","OOPSGUI5",6,0)
 ;                    FORM = Either "CA1","CA2" or "2162" or "CA7"
"RTN","OOPSGUI5",7,0)
 ;         SENDPARM - Array containing the data from Delphi that will
"RTN","OOPSGUI5",8,0)
 ;                    saved into Asists File 2260. 
"RTN","OOPSGUI5",9,0)
 ; Output:  RESULTS - Array containing the results of the store/save.
"RTN","OOPSGUI5",10,0)
 ;   NOTE:  Patch 5 llh - added FILE variable based on form being
"RTN","OOPSGUI5",11,0)
 ;                        passed in so that a CA7 could also be handled.
"RTN","OOPSGUI5",12,0)
 N IEN,FILE,FORM,DIE,DA,DR
"RTN","OOPSGUI5",13,0)
 S IEN=$P($G(INPUT),U,1),FORM=$P($G(INPUT),U,2)
"RTN","OOPSGUI5",14,0)
 I $G(FORM)="" S (RESULTS,RESULTS(1))="-2^No form type" Q
"RTN","OOPSGUI5",15,0)
 S FILE=2260 I FORM="CA7" S FILE=2264
"RTN","OOPSGUI5",16,0)
 I '$D(^OOPS(FILE,$G(IEN),0))&($G(IEN)'="NEW") D  Q
"RTN","OOPSGUI5",17,0)
 . S (RESULTS,RESULTS(1))="-1^IEN:"_IEN_" not found in file "_FILE
"RTN","OOPSGUI5",18,0)
 I "CA1^CA2^CA7^2162"'[FORM D  Q
"RTN","OOPSGUI5",19,0)
 . S (RESULTS,RESULTS(1))="-2^FORM:"_FORM_" not valid, must be CA1,CA2, or 2162"
"RTN","OOPSGUI5",20,0)
 S RESULTS(1)="UPDATE FAILED"
"RTN","OOPSGUI5",21,0)
 I FORM="CA1" D SAVECA1
"RTN","OOPSGUI5",22,0)
 I FORM="CA2" D SAVECA2
"RTN","OOPSGUI5",23,0)
 I FORM="2162" D SAVE2162
"RTN","OOPSGUI5",24,0)
 ; patch 5 llh
"RTN","OOPSGUI5",25,0)
 I FORM="CA7" D SAVECA7^OOPSGUID
"RTN","OOPSGUI5",26,0)
 Q
"RTN","OOPSGUI5",27,0)
SAVECA1 ;
"RTN","OOPSGUI5",28,0)
 K DR S DIE="^OOPS(2260,",DA=IEN,DR=""
"RTN","OOPSGUI5",29,0)
 S DR(1,2260,1)="53////^S X=ARR(7)"
"RTN","OOPSGUI5",30,0)
 S DR(1,2260,2)="53.1////^S X=ARR(8)"
"RTN","OOPSGUI5",31,0)
 S DR(1,2260,3)="60///^S X=ARR(14)"
"RTN","OOPSGUI5",32,0)
 S DR(1,2260,4)="61///^S X=ARR(15)"
"RTN","OOPSGUI5",33,0)
 S DR(1,2260,5)="62////^S X=ARR(16)"
"RTN","OOPSGUI5",34,0)
 S DR(1,2260,6)="70///^S X=ARR(22)"
"RTN","OOPSGUI5",35,0)
 S DR(1,2260,7)="73///^S X=ARR(25)"
"RTN","OOPSGUI5",36,0)
 S DR(1,2260,8)="12///^S X=ARR(36)"
"RTN","OOPSGUI5",37,0)
 S DR(1,2260,11)="8///^S X=ARR(39)"
"RTN","OOPSGUI5",38,0)
 S DR(1,2260,12)="9///^S X=ARR(40)"
"RTN","OOPSGUI5",39,0)
 S DR(1,2260,13)="10///^S X=ARR(41)"
"RTN","OOPSGUI5",40,0)
 S DR(1,2260,14)="11///^S X=ARR(42)"
"RTN","OOPSGUI5",41,0)
 S DR(1,2260,15)="107///^S X=ARR(43)"
"RTN","OOPSGUI5",42,0)
 S DR(1,2260,16)="108///^S X=ARR(44)"
"RTN","OOPSGUI5",43,0)
 S DR(1,2260,17)="109///^S X=ARR(45)"
"RTN","OOPSGUI5",44,0)
 S DR(1,2260,18)="110///^S X=ARR(46)"
"RTN","OOPSGUI5",45,0)
 S DR(1,2260,19)="111///^S X=ARR(47)"
"RTN","OOPSGUI5",46,0)
 S DR(1,2260,20)="112///^S X=ARR(48)"
"RTN","OOPSGUI5",47,0)
 S DR(1,2260,21)="113///^S X=ARR(49)"
"RTN","OOPSGUI5",48,0)
 S DR(1,2260,22)="114///^S X=ARR(50)"
"RTN","OOPSGUI5",49,0)
 S DR(1,2260,24)="123///^S X=ARR(60)"
"RTN","OOPSGUI5",50,0)
 S DR(1,2260,25)="124///^S X=ARR(61)"
"RTN","OOPSGUI5",51,0)
 S DR(1,2260,26)="126///^S X=ARR(62)"
"RTN","OOPSGUI5",52,0)
 S DR(1,2260,27)="130///^S X=ARR(63)"
"RTN","OOPSGUI5",53,0)
 S DR(1,2260,28)="131///^S X=ARR(64)"
"RTN","OOPSGUI5",54,0)
 S DR(1,2260,29)="132///^S X=ARR(65)"
"RTN","OOPSGUI5",55,0)
 S DR(1,2260,30)="133///^S X=ARR(66)"
"RTN","OOPSGUI5",56,0)
 S DR(1,2260,31)="134///^S X=ARR(67)"
"RTN","OOPSGUI5",57,0)
 S DR(1,2260,32)="138///^S X=ARR(70)"
"RTN","OOPSGUI5",58,0)
 S DR(1,2260,33)="139///^S X=ARR(71)"
"RTN","OOPSGUI5",59,0)
 S DR(1,2260,34)="140///^S X=ARR(72)"
"RTN","OOPSGUI5",60,0)
 S DR(1,2260,35)="141///^S X=ARR(73)"
"RTN","OOPSGUI5",61,0)
 S DR(1,2260,36)="142///^S X=ARR(74)"
"RTN","OOPSGUI5",62,0)
 D ^DIE I '($D(Y)=0) Q
"RTN","OOPSGUI5",63,0)
 K DR S DIE="^OOPS(2260,",DA=IEN,DR=""
"RTN","OOPSGUI5",64,0)
 S DR(1,2260,37)="143///^S X=ARR(75)"
"RTN","OOPSGUI5",65,0)
 S DR(1,2260,38)="144///^S X=ARR(76)"
"RTN","OOPSGUI5",66,0)
 S DR(1,2260,39)="145///^S X=ARR(77)"
"RTN","OOPSGUI5",67,0)
 S DR(1,2260,40)="146///^S X=ARR(78)"
"RTN","OOPSGUI5",68,0)
 S DR(1,2260,41)="147///^S X=ARR(79)"
"RTN","OOPSGUI5",69,0)
 S DR(1,2260,42)="148///^S X=ARR(80)"
"RTN","OOPSGUI5",70,0)
 S DR(1,2260,43)="149///^S X=ARR(81)"
"RTN","OOPSGUI5",71,0)
 S DR(1,2260,44)="150///^S X=ARR(82)"
"RTN","OOPSGUI5",72,0)
 S DR(1,2260,45)="151///^S X=ARR(83)"
"RTN","OOPSGUI5",73,0)
 S DR(1,2260,46)="152///^S X=ARR(84)"
"RTN","OOPSGUI5",74,0)
 S DR(1,2260,47)="153///^S X=ARR(85)"
"RTN","OOPSGUI5",75,0)
 S DR(1,2260,48)="154///^S X=ARR(86)"
"RTN","OOPSGUI5",76,0)
 S DR(1,2260,49)="155///^S X=ARR(87)"
"RTN","OOPSGUI5",77,0)
 S DR(1,2260,50)="156///^S X=ARR(88)"
"RTN","OOPSGUI5",78,0)
 S DR(1,2260,51)="157///^S X=ARR(89)"
"RTN","OOPSGUI5",79,0)
 S DR(1,2260,52)="158///^S X=ARR(90)"
"RTN","OOPSGUI5",80,0)
 S DR(1,2260,53)="159///^S X=ARR(91)"
"RTN","OOPSGUI5",81,0)
 S DR(1,2260,54)="160///^S X=ARR(92)"
"RTN","OOPSGUI5",82,0)
 S DR(1,2260,55)="161///^S X=ARR(93)"
"RTN","OOPSGUI5",83,0)
 S DR(1,2260,56)="162///^S X=ARR(94)"
"RTN","OOPSGUI5",84,0)
 S DR(1,2260,57)="163///^S X=ARR(95)"
"RTN","OOPSGUI5",85,0)
 S DR(1,2260,58)="165.1///^S X=ARR(96)"
"RTN","OOPSGUI5",86,0)
 S DR(1,2260,59)="165.2///^S X=ARR(97)"
"RTN","OOPSGUI5",87,0)
 S DR(1,2260,60)="166///^S X=ARR(98)"
"RTN","OOPSGUI5",88,0)
 S DR(1,2260,61)="167///^S X=ARR(99)"
"RTN","OOPSGUI5",89,0)
 S DR(1,2260,62)="168///^S X=ARR(100)"
"RTN","OOPSGUI5",90,0)
 S DR(1,2260,63)="172///^S X=ARR(104)"
"RTN","OOPSGUI5",91,0)
 S DR(1,2260,64)="173///^S X=ARR(105)"
"RTN","OOPSGUI5",92,0)
 S DR(1,2260,65)="173.1///^S X=ARR(106)"
"RTN","OOPSGUI5",93,0)
 S DR(1,2260,66)="174///^S X=ARR(107)"
"RTN","OOPSGUI5",94,0)
 S DR(1,2260,67)="175///^S X=ARR(108)"
"RTN","OOPSGUI5",95,0)
 S DR(1,2260,68)="176///^S X=ARR(109)"
"RTN","OOPSGUI5",96,0)
 S DR(1,2260,69)="177///^S X=ARR(110)"
"RTN","OOPSGUI5",97,0)
 S DR(1,2260,70)="178///^S X=ARR(111)"
"RTN","OOPSGUI5",98,0)
 S DR(1,2260,71)="179///^S X=ARR(112)"
"RTN","OOPSGUI5",99,0)
 S DR(1,2260,72)="180///^S X=ARR(113)"
"RTN","OOPSGUI5",100,0)
 S DR(1,2260,73)="181///^S X=ARR(114)"
"RTN","OOPSGUI5",101,0)
 S DR(1,2260,74)="182///^S X=ARR(115)"
"RTN","OOPSGUI5",102,0)
 S DR(1,2260,75)="183///^S X=ARR(116)"
"RTN","OOPSGUI5",103,0)
 S DR(1,2260,76)="184///^S X=ARR(117)"
"RTN","OOPSGUI5",104,0)
 S DR(1,2260,77)="185///^S X=ARR(118)"
"RTN","OOPSGUI5",105,0)
 ; Patch 5 llh - added 3  new fields
"RTN","OOPSGUI5",106,0)
 S DR(1,2260,78)="330///^S X=ARR(119)"
"RTN","OOPSGUI5",107,0)
 S DR(1,2260,79)="331///^S X=ARR(120)"
"RTN","OOPSGUI5",108,0)
 S DR(1,2260,80)="332///^S X=ARR(121)"
"RTN","OOPSGUI5",109,0)
 D ^DIE
"RTN","OOPSGUI5",110,0)
 ;Check the return of ^DIE
"RTN","OOPSGUI5",111,0)
 I $D(Y)=0 S RESULTS(1)="UPDATE COMPLETED"
"RTN","OOPSGUI5",112,0)
 Q
"RTN","OOPSGUI5",113,0)
SAVECA2 ;
"RTN","OOPSGUI5",114,0)
 K DR S DIE="^OOPS(2260,",DA=IEN,DR=""
"RTN","OOPSGUI5",115,0)
 S DR(1,2260,1)="60///^S X=ARR(14)"
"RTN","OOPSGUI5",116,0)
 S DR(1,2260,5)="61///^S X=ARR(15)"
"RTN","OOPSGUI5",117,0)
 S DR(1,2260,7)="62////^S X=ARR(16)"
"RTN","OOPSGUI5",118,0)
 S DR(1,2260,10)="70///^S X=ARR(22)"
"RTN","OOPSGUI5",119,0)
 S DR(1,2260,15)="73///^S X=ARR(25)"
"RTN","OOPSGUI5",120,0)
 S DR(1,2260,20)="12///^S X=ARR(38)"
"RTN","OOPSGUI5",121,0)
 S DR(1,2260,25)="8///^S X=ARR(41)"
"RTN","OOPSGUI5",122,0)
 S DR(1,2260,30)="9///^S X=ARR(42)"
"RTN","OOPSGUI5",123,0)
 S DR(1,2260,35)="10///^S X=ARR(43)"
"RTN","OOPSGUI5",124,0)
 S DR(1,2260,40)="11///^S X=ARR(44)"
"RTN","OOPSGUI5",125,0)
 S DR(1,2260,41)="126///^S X=ARR(36)"
"RTN","OOPSGUI5",126,0)
 S DR(1,2260,45)="207///^S X=ARR(45)"
"RTN","OOPSGUI5",127,0)
 S DR(1,2260,50)="208///^S X=ARR(46)"
"RTN","OOPSGUI5",128,0)
 S DR(1,2260,55)="209///^S X=ARR(47)"
"RTN","OOPSGUI5",129,0)
 S DR(1,2260,60)="210///^S X=ARR(48)"
"RTN","OOPSGUI5",130,0)
 S DR(1,2260,65)="211///^S X=ARR(49)"
"RTN","OOPSGUI5",131,0)
 S DR(1,2260,70)="212///^S X=ARR(50)"
"RTN","OOPSGUI5",132,0)
 S DR(1,2260,75)="213///^S X=ARR(51)"
"RTN","OOPSGUI5",133,0)
 S DR(1,2260,80)="214///^S X=ARR(52)"
"RTN","OOPSGUI5",134,0)
 D ^DIE I '($D(Y)=0) Q
"RTN","OOPSGUI5",135,0)
 K DR S DIE="^OOPS(2260,",DA=IEN,DR=""
"RTN","OOPSGUI5",136,0)
 S DR(1,2260,85)="215///^S X=ARR(53)"
"RTN","OOPSGUI5",137,0)
 S DR(1,2260,90)="225///^S X=ARR(57)"
"RTN","OOPSGUI5",138,0)
 S DR(1,2260,95)="226///^S X=ARR(58)"
"RTN","OOPSGUI5",139,0)
 S DR(1,2260,100)="227///^S X=ARR(59)"
"RTN","OOPSGUI5",140,0)
 S DR(1,2260,105)="230///^S X=ARR(60)"
"RTN","OOPSGUI5",141,0)
 S DR(1,2260,110)="231///^S X=ARR(61)"
"RTN","OOPSGUI5",142,0)
 S DR(1,2260,115)="232///^S X=ARR(62)"
"RTN","OOPSGUI5",143,0)
 S DR(1,2260,120)="233///^S X=ARR(63)"
"RTN","OOPSGUI5",144,0)
 S DR(1,2260,125)="234///^S X=ARR(64)"
"RTN","OOPSGUI5",145,0)
 S DR(1,2260,130)="237///^S X=ARR(67)"
"RTN","OOPSGUI5",146,0)
 S DR(1,2260,135)="238///^S X=ARR(68)"
"RTN","OOPSGUI5",147,0)
 S DR(1,2260,140)="239///^S X=ARR(69)"
"RTN","OOPSGUI5",148,0)
 S DR(1,2260,145)="240///^S X=ARR(70)"
"RTN","OOPSGUI5",149,0)
 S DR(1,2260,150)="241///^S X=ARR(71)"
"RTN","OOPSGUI5",150,0)
 S DR(1,2260,155)="242///^S X=ARR(72)"
"RTN","OOPSGUI5",151,0)
 S DR(1,2260,160)="243///^S X=ARR(73)"
"RTN","OOPSGUI5",152,0)
 S DR(1,2260,165)="244///^S X=ARR(74)"
"RTN","OOPSGUI5",153,0)
 S DR(1,2260,170)="245///^S X=ARR(75)"
"RTN","OOPSGUI5",154,0)
 S DR(1,2260,175)="246///^S X=ARR(76)"
"RTN","OOPSGUI5",155,0)
 S DR(1,2260,180)="247///^S X=ARR(77)"
"RTN","OOPSGUI5",156,0)
 S DR(1,2260,185)="248///^S X=ARR(78)"
"RTN","OOPSGUI5",157,0)
 S DR(1,2260,190)="249///^S X=ARR(79)"
"RTN","OOPSGUI5",158,0)
 S DR(1,2260,192)="250///^S X=ARR(80)"
"RTN","OOPSGUI5",159,0)
 S DR(1,2260,195)="251///^S X=ARR(81)"
"RTN","OOPSGUI5",160,0)
 S DR(1,2260,200)="252///^S X=ARR(82)"
"RTN","OOPSGUI5",161,0)
 S DR(1,2260,205)="253///^S X=ARR(83)"
"RTN","OOPSGUI5",162,0)
 D ^DIE I '($D(Y)=0) Q
"RTN","OOPSGUI5",163,0)
 K DR S DIE="^OOPS(2260,",DA=IEN,DR=""
"RTN","OOPSGUI5",164,0)
 S DR(1,2260,210)="254///^S X=ARR(84)"
"RTN","OOPSGUI5",165,0)
 S DR(1,2260,215)="255///^S X=ARR(85)"
"RTN","OOPSGUI5",166,0)
 S DR(1,2260,220)="256///^S X=ARR(86)"
"RTN","OOPSGUI5",167,0)
 S DR(1,2260,225)="258///^S X=ARR(87)"
"RTN","OOPSGUI5",168,0)
 S DR(1,2260,230)="259///^S X=ARR(88)"
"RTN","OOPSGUI5",169,0)
 S DR(1,2260,235)="260///^S X=ARR(89)"
"RTN","OOPSGUI5",170,0)
 S DR(1,2260,240)="261///^S X=ARR(90)"
"RTN","OOPSGUI5",171,0)
 S DR(1,2260,245)="262///^S X=ARR(91)"
"RTN","OOPSGUI5",172,0)
 S DR(1,2260,250)="263///^S X=ARR(92)"
"RTN","OOPSGUI5",173,0)
 S DR(1,2260,255)="264///^S X=ARR(93)"
"RTN","OOPSGUI5",174,0)
 S DR(1,2260,260)="268///^S X=ARR(97)"
"RTN","OOPSGUI5",175,0)
 S DR(1,2260,265)="269///^S X=ARR(98)"
"RTN","OOPSGUI5",176,0)
 S DR(1,2260,270)="269.1///^S X=ARR(99)"
"RTN","OOPSGUI5",177,0)
 S DR(1,2260,275)="270///^S X=ARR(100)"
"RTN","OOPSGUI5",178,0)
 ; Patch 5 llh - added new fields
"RTN","OOPSGUI5",179,0)
 S DR(1,2260,276)="330///^S X=ARR(101)"
"RTN","OOPSGUI5",180,0)
 S DR(1,2260,277)="331///^S X=ARR(102)"
"RTN","OOPSGUI5",181,0)
 D ^DIE
"RTN","OOPSGUI5",182,0)
 ;Check the return of ^DIE
"RTN","OOPSGUI5",183,0)
 I $D(Y)=0 S RESULTS(1)="UPDATE COMPLETED"
"RTN","OOPSGUI5",184,0)
 Q
"RTN","OOPSGUI5",185,0)
SAVE2162 ;
"RTN","OOPSGUI5",186,0)
 K DR S DIE="^OOPS(2260,",DA=IEN,DR=""
"RTN","OOPSGUI5",187,0)
 S DR(1,2260,1)="3///^S X=ARR(3)"
"RTN","OOPSGUI5",188,0)
 S DR(1,2260,2)="5///^S X=ARR(5)"
"RTN","OOPSGUI5",189,0)
 S DR(1,2260,3)="6///^S X=ARR(6)"
"RTN","OOPSGUI5",190,0)
 S DR(1,2260,4)="7///^S X=ARR(7)"
"RTN","OOPSGUI5",191,0)
 S DR(1,2260,5)="8///^S X=ARR(8)"
"RTN","OOPSGUI5",192,0)
 S DR(1,2260,7)="9///^S X=ARR(9)"
"RTN","OOPSGUI5",193,0)
 S DR(1,2260,9)="10///^S X=ARR(10)"
"RTN","OOPSGUI5",194,0)
 S DR(1,2260,12)="11///^S X=ARR(11)"
"RTN","OOPSGUI5",195,0)
 S DR(1,2260,15)="12///^S X=ARR(12)"
"RTN","OOPSGUI5",196,0)
 S DR(1,2260,18)="13////^S X=ARR(13)"
"RTN","OOPSGUI5",197,0)
 S DR(1,2260,21)="14///^S X=ARR(14)"
"RTN","OOPSGUI5",198,0)
 S DR(1,2260,24)="15///^S X=ARR(15)"
"RTN","OOPSGUI5",199,0)
 S DR(1,2260,27)="16///^S X=ARR(16)"
"RTN","OOPSGUI5",200,0)
 S DR(1,2260,30)="17///^S X=ARR(17)"
"RTN","OOPSGUI5",201,0)
 S DR(1,2260,33)="18///^S X=ARR(18)"
"RTN","OOPSGUI5",202,0)
 S DR(1,2260,36)="26///^S X=ARR(19)"
"RTN","OOPSGUI5",203,0)
 S DR(1,2260,39)="27////^S X=ARR(20)"
"RTN","OOPSGUI5",204,0)
 S DR(1,2260,42)="29///^S X=ARR(21)"
"RTN","OOPSGUI5",205,0)
 S DR(1,2260,45)="29.5///^S X=ARR(22)"
"RTN","OOPSGUI5",206,0)
 S DR(1,2260,48)="30///^S X=ARR(23)"
"RTN","OOPSGUI5",207,0)
 S DR(1,2260,51)="30.1///^S X=ARR(24)"
"RTN","OOPSGUI5",208,0)
 S DR(1,2260,54)="31///^S X=ARR(25)"
"RTN","OOPSGUI5",209,0)
 S DR(1,2260,57)="32///^S X=ARR(26)"
"RTN","OOPSGUI5",210,0)
 S DR(1,2260,60)="33///^S X=ARR(27)"
"RTN","OOPSGUI5",211,0)
 S DR(1,2260,63)="34///^S X=ARR(28)"
"RTN","OOPSGUI5",212,0)
 S DR(1,2260,66)="35///^S X=ARR(29)"
"RTN","OOPSGUI5",213,0)
 S DR(1,2260,69)="36///^S X=ARR(30)"
"RTN","OOPSGUI5",214,0)
 S DR(1,2260,72)="37///^S X=ARR(31)"
"RTN","OOPSGUI5",215,0)
 S DR(1,2260,75)="38///^S X=ARR(32)"
"RTN","OOPSGUI5",216,0)
 S DR(1,2260,78)="41///^S X=ARR(33)"
"RTN","OOPSGUI5",217,0)
 S DR(1,2260,81)="42///^S X=ARR(34)"
"RTN","OOPSGUI5",218,0)
 S DR(1,2260,84)="42.5///^S X=ARR(35)"
"RTN","OOPSGUI5",219,0)
 S DR(1,2260,87)="43///^S X=ARR(36)"
"RTN","OOPSGUI5",220,0)
 S DR(1,2260,90)="53////^S X=ARR(45)"
"RTN","OOPSGUI5",221,0)
 S DR(1,2260,93)="53.1////^S X=ARR(46)"
"RTN","OOPSGUI5",222,0)
 S DR(1,2260,96)="60///^S X=ARR(52)"
"RTN","OOPSGUI5",223,0)
 S DR(1,2260,99)="61///^S X=ARR(53)"
"RTN","OOPSGUI5",224,0)
 S DR(1,2260,102)="62///^S X=ARR(54)"
"RTN","OOPSGUI5",225,0)
 S DR(1,2260,105)="63///^S X=ARR(55)"
"RTN","OOPSGUI5",226,0)
 S DR(1,2260,108)="70///^S X=ARR(60)"
"RTN","OOPSGUI5",227,0)
 S DR(1,2260,111)="73///^S X=ARR(63)"
"RTN","OOPSGUI5",228,0)
 S DR(1,2260,114)="82///^S X=ARR(72)"
"RTN","OOPSGUI5",229,0)
 S DR(1,2260,117)="83////^S X=ARR(73)"
"RTN","OOPSGUI5",230,0)
 S DR(1,2260,120)="84///^S X=ARR(74)"
"RTN","OOPSGUI5",231,0)
 S DR(1,2260,123)="85///^S X=ARR(75)"
"RTN","OOPSGUI5",232,0)
 S DR(1,2260,126)="86///^S X=ARR(76)"
"RTN","OOPSGUI5",233,0)
 S DR(1,2260,129)="87///^S X=ARR(77)"
"RTN","OOPSGUI5",234,0)
 S DR(1,2260,132)="88///^S X=ARR(78)"
"RTN","OOPSGUI5",235,0)
 S DR(1,2260,135)="89///^S X=ARR(79)"
"RTN","OOPSGUI5",236,0)
 S DR(1,2260,136)="335///^S X=ARR(85)"
"RTN","OOPSGUI5",237,0)
 S DR(1,2260,138)="336///^S X=ARR(86)"
"RTN","OOPSGUI5",238,0)
 S DR(1,2260,140)="337///^S X=ARR(87)"
"RTN","OOPSGUI5",239,0)
 S DR(1,2260,142)="338///^S X=ARR(88)"
"RTN","OOPSGUI5",240,0)
 S DR(1,2260,144)="339///^S X=ARR(89)"
"RTN","OOPSGUI5",241,0)
 S DR(1,2260,146)="340///^S X=ARR(90)"
"RTN","OOPSGUI5",242,0)
 S DR(1,2260,148)="341///^S X=ARR(91)"
"RTN","OOPSGUI5",243,0)
 S DR(1,2260,150)="342///^S X=ARR(92)"
"RTN","OOPSGUI5",244,0)
 S DR(1,2260,152)="343///^S X=ARR(93)"
"RTN","OOPSGUI5",245,0)
 S DR(1,2260,154)="344///^S X=ARR(94)"
"RTN","OOPSGUI5",246,0)
 S DR(1,2260,156)="345///^S X=ARR(95)"
"RTN","OOPSGUI5",247,0)
 S DR(1,2260,158)="346///^S X=ARR(96)"
"RTN","OOPSGUI5",248,0)
 S DR(1,2260,159)="334///^S X=ARR(97)"
"RTN","OOPSGUI5",249,0)
 D ^DIE
"RTN","OOPSGUI5",250,0)
 ;Check the return of ^DIE
"RTN","OOPSGUI5",251,0)
 I $D(Y)=0 S RESULTS(1)="UPDATE COMPLETED"
"RTN","OOPSGUI5",252,0)
 Q
"RTN","OOPSGUI6")
0^2^B53278536
"RTN","OOPSGUI6",1,0)
OOPSGUI6 ;WIOFO/LLH-RPC routines for ASISTS Gui ;9/18/01
"RTN","OOPSGUI6",2,0)
 ;;2.0;ASISTS;**4,8,7**;Jun 03, 2002
"RTN","OOPSGUI6",3,0)
 ;
"RTN","OOPSGUI6",4,0)
UNIGET(RESULTS) ; Returns entries in the Union table
"RTN","OOPSGUI6",5,0)
 N DATA,CNT,SUP,UIEN,UNI
"RTN","OOPSGUI6",6,0)
 S CNT=0,UNI=""
"RTN","OOPSGUI6",7,0)
 F  S UNI=$O(^OOPS(2263.7,"B",UNI)) Q:UNI=""  D
"RTN","OOPSGUI6",8,0)
 .S UIEN=0
"RTN","OOPSGUI6",9,0)
 .F  S UIEN=$O(^OOPS(2263.7,"B",UNI,UIEN)) Q:UIEN=""  D
"RTN","OOPSGUI6",10,0)
 ..S DATA=$G(^OOPS(2263.7,UIEN,0))
"RTN","OOPSGUI6",11,0)
 ..S SUP=$$GET1^DIQ(200,$P($G(DATA),U,3),.01)
"RTN","OOPSGUI6",12,0)
 ..S RESULTS(CNT)=DATA_U_SUP_U_UIEN,CNT=CNT+1
"RTN","OOPSGUI6",13,0)
 Q
"RTN","OOPSGUI6",14,0)
UNIKILL(RESULTS,INPUT) ;
"RTN","OOPSGUI6",15,0)
 ;  Input - INPUT contains the IEN for Union to be deleted
"RTN","OOPSGUI6",16,0)
 ; Output - RESULTS will contain a message indicating the record
"RTN","OOPSGUI6",17,0)
 ;          was successfully deleted.
"RTN","OOPSGUI6",18,0)
 N DA,DIK
"RTN","OOPSGUI6",19,0)
 S RESULTS="No Changes Filed"
"RTN","OOPSGUI6",20,0)
 S DIK="^OOPS(2263.7,",DA=INPUT
"RTN","OOPSGUI6",21,0)
 D ^DIK
"RTN","OOPSGUI6",22,0)
 S RESULTS="Record Successfully Deleted"
"RTN","OOPSGUI6",23,0)
 Q
"RTN","OOPSGUI6",24,0)
UNIADD ; Files a new record in ^OOPS(2263.7 
"RTN","OOPSGUI6",25,0)
 N X,DIC,DLAYGO
"RTN","OOPSGUI6",26,0)
 K DO
"RTN","OOPSGUI6",27,0)
 S DLAYGO=2263.7,DIC="^OOPS(2263.7,",DIC(0)="L",X=NM
"RTN","OOPSGUI6",28,0)
 D FILE^DICN
"RTN","OOPSGUI6",29,0)
 I Y=-1 S RESULTS="Failed" Q
"RTN","OOPSGUI6",30,0)
 S DA=+Y,RESULTS=X_" union added"
"RTN","OOPSGUI6",31,0)
 Q
"RTN","OOPSGUI6",32,0)
UNIEDT(RESULTS,INPUT) ; Edits the input in ^OOPS(2263.7
"RTN","OOPSGUI6",33,0)
 ;  Input - INPUT contains the IEN of Union to be edited or NULL if a
"RTN","OOPSGUI6",34,0)
 ;          new union is being added.  Also has the Union Name,
"RTN","OOPSGUI6",35,0)
 ;          Acronym, and  Representative in the format:
"RTN","OOPSGUI6",36,0)
 ;          IEN^UNION NAME^UNION ACRONYM^UNION REP
"RTN","OOPSGUI6",37,0)
 ; Output - RESULTS contains a status message regarding the filing of
"RTN","OOPSGUI6",38,0)
 ;          the data
"RTN","OOPSGUI6",39,0)
 N DA,DIE,DR,IEN,NM,ACR,REP
"RTN","OOPSGUI6",40,0)
 S RESULTS="No Changes Filed"
"RTN","OOPSGUI6",41,0)
 S DIE="^OOPS(2263.7,",IEN=$P($G(INPUT),U),NM=$P($G(INPUT),U,2)
"RTN","OOPSGUI6",42,0)
 I $G(NM)="" Q
"RTN","OOPSGUI6",43,0)
 I $G(IEN)="" D UNIADD S IEN=DA
"RTN","OOPSGUI6",44,0)
 I RESULTS="Failed" Q
"RTN","OOPSGUI6",45,0)
 S ACR=$P($G(INPUT),U,3),REP=$P($G(INPUT),U,4)
"RTN","OOPSGUI6",46,0)
 S DA=IEN,DR=".01///^S X=NM;1///^S X=ACR;2///^S X=REP"
"RTN","OOPSGUI6",47,0)
 D ^DIE
"RTN","OOPSGUI6",48,0)
 I $G(Y)="" D  Q
"RTN","OOPSGUI6",49,0)
 .;if next line executed, then straight edit, not an add
"RTN","OOPSGUI6",50,0)
 .I RESULTS="No Changes Filed" S RESULTS="Union Update Successful."
"RTN","OOPSGUI6",51,0)
 S RESULTS="Union Update NOT Successful."
"RTN","OOPSGUI6",52,0)
 Q
"RTN","OOPSGUI6",53,0)
SITEPGET(RESULTS,FORM) ;
"RTN","OOPSGUI6",54,0)
 ;  Input - FORM = contains either a blank for 'normal' site parameter
"RTN","OOPSGUI6",55,0)
 ;          look ups or 'OSHA300' if for the OSHA 300A summary input
"RTN","OOPSGUI6",56,0)
 ; Output - RESULTS is an array whose 0 node contains the Site 
"RTN","OOPSGUI6",57,0)
 ;          parameter name, IEN, and District Office in the format:
"RTN","OOPSGUI6",58,0)
 ;          SITE NAME^DISTRICT OFFICE^SITE IEN
"RTN","OOPSGUI6",59,0)
 ;          Subsequent nodes starting from 1 contain Station information
"RTN","OOPSGUI6",60,0)
 ;          in the following format:
"RTN","OOPSGUI6",61,0)
 ;          STANM_U_PNM_U_PADD_U_PCTY_U_PST_U_PZIP_U_PTITLE_
"RTN","OOPSGUI6",62,0)
 ;          U_CHGBKCODE_U_SUB_U_STA
"RTN","OOPSGUI6",63,0)
 N CNT,DOFF,IENS,SIEN,STA,SUB,SNAME,STR,STR2,CBCSUF
"RTN","OOPSGUI6",64,0)
 S SIEN=$P($G(^OOPS(2262,0)),U,3)
"RTN","OOPSGUI6",65,0)
 N CBC,STANM,STATION,PNM,PADD,PCTY,PST,PZIP,PTITLE
"RTN","OOPSGUI6",66,0)
 S (CBC,STATION,PNM,PADD,PCTY,PST,PZIP,PTITLE)=""
"RTN","OOPSGUI6",67,0)
 N NA,TTL,PHN,EXT,IND,NAICS,SIC
"RTN","OOPSGUI6",68,0)
 S (NA,TTL,PHN,EXT,IND,NAICS,SIC)=""
"RTN","OOPSGUI6",69,0)
 I '$G(SIEN) S RESULTS(0)="No Site Parameter File was Found" Q
"RTN","OOPSGUI6",70,0)
 L +^OOPS(2262,SIEN):2
"RTN","OOPSGUI6",71,0)
 E  S RESULTS(0)="This option in use by another user, try again later." Q
"RTN","OOPSGUI6",72,0)
 S SNAME=$$GET1^DIQ(2262,SIEN,.01),DOFF=$$GET1^DIQ(2262,SIEN,2,"E")
"RTN","OOPSGUI6",73,0)
 S RESULTS(0)=SNAME_U_DOFF_U_SIEN
"RTN","OOPSGUI6",74,0)
 S CNT=1,SUB=""
"RTN","OOPSGUI6",75,0)
 F  S SUB=$O(^OOPS(2262,SIEN,SUB)) Q:SUB=""  S STA=0 D
"RTN","OOPSGUI6",76,0)
 .F  S STA=$O(^OOPS(2262,SIEN,SUB,STA)) Q:STA'>0  D
"RTN","OOPSGUI6",77,0)
 ..S STR=$G(^OOPS(2262,SIEN,SUB,STA,0)),IENS=STA_","_SUB_","
"RTN","OOPSGUI6",78,0)
 ..S STR2=$G(^OOPS(2262,SIEN,SUB,STA,1))
"RTN","OOPSGUI6",79,0)
 ..S STATION=$$GET1^DIQ(2262.03,IENS,".01:99")
"RTN","OOPSGUI6",80,0)
 ..S STANM=$$GET1^DIQ(2262.03,IENS,.01)_" = "_STATION
"RTN","OOPSGUI6",81,0)
 ..; Patch 5 llh - if station inactive blank STA
"RTN","OOPSGUI6",82,0)
 ..I $$GET1^DIQ(4,$P(STR,U),101)'="" S STA=""
"RTN","OOPSGUI6",83,0)
 ..I $G(FORM)="" D
"RTN","OOPSGUI6",84,0)
 ...S PNM=$P(STR,U,2),PADD=$P(STR,U,3),PCTY=$P(STR,U,4),PZIP=$P(STR,U,6)
"RTN","OOPSGUI6",85,0)
 ...I $P(STR,U,5)'="" S PST=$$GET1^DIQ(2262.03,IENS,4)
"RTN","OOPSGUI6",86,0)
 ...I $P(STR,U,7)'="" S PTITLE=$$GET1^DIQ(2262.03,IENS,6)
"RTN","OOPSGUI6",87,0)
 ...S CBC=$P(STR,U,8) I $G(CBC)'="" S CBC=$$GET1^DIQ(2263.6,CBC,.01)
"RTN","OOPSGUI6",88,0)
 ...;Patch 5 llh - added CBCSUF sets
"RTN","OOPSGUI6",89,0)
 ...S CBCSUF=$P(STR,U,9)
"RTN","OOPSGUI6",90,0)
 ...S RESULTS(CNT)=STANM_U_PNM_U_PADD_U_PCTY_U_PST_U_PZIP_U_PTITLE_U_CBC_U_SUB_U_STA_U_CBCSUF
"RTN","OOPSGUI6",91,0)
 ..I $G(FORM)="OSHA300" D
"RTN","OOPSGUI6",92,0)
 ...I $P(STR2,U,1)'="" S NA=$$GET1^DIQ(2262.03,IENS,7)
"RTN","OOPSGUI6",93,0)
 ...S TTL=$P(STR2,U,2),PHN=$P(STR2,U,3),EXT=$P(STR2,U,4)
"RTN","OOPSGUI6",94,0)
 ...S IND=$P(STR2,U,5),SIC=$$GET1^DIQ(2262.03,IENS,12)
"RTN","OOPSGUI6",95,0)
 ...S NAICS=$$GET1^DIQ(2262.03,IENS,13)
"RTN","OOPSGUI6",96,0)
 ...S RESULTS(CNT)=STANM_U_NA_U_TTL_U_PHN_U_EXT_U_IND_U_SIC_U_NAICS_U_SUB_U_STA_U_$P(STR,U,1)_U
"RTN","OOPSGUI6",97,0)
 ..I $G(FORM)="" S (STANM,PNM,PADD,PCTY,PST,PZIP,PTITLE,CBC,CBCSUF)=""
"RTN","OOPSGUI6",98,0)
 ..E  S (NA,TTL,PHN,EXT,IND,NAICS,SIC)=""
"RTN","OOPSGUI6",99,0)
 ..S CNT=CNT+1
"RTN","OOPSGUI6",100,0)
 L -^OOPS(2262,SIEN)
"RTN","OOPSGUI6",101,0)
 Q
"RTN","OOPSGUI6",102,0)
SITEPADD ; Creates a new Station Subfile in the Site Parameter
"RTN","OOPSGUI6",103,0)
 ;                 File (#2262
"RTN","OOPSGUI6",104,0)
 N X,DIC,DLAYGO
"RTN","OOPSGUI6",105,0)
 S DLAYGO=2262,DIC="^OOPS(2262,"_SIEN_","_SUBF_",",DIC(0)="L"
"RTN","OOPSGUI6",106,0)
 S DA(1)=SIEN,X=STANM
"RTN","OOPSGUI6",107,0)
 D FILE^DICN
"RTN","OOPSGUI6",108,0)
 I Y=-1 S RESULTS="Failed" Q
"RTN","OOPSGUI6",109,0)
 S DA=+Y,RESULTS="Successfully Added"
"RTN","OOPSGUI6",110,0)
 Q
"RTN","OOPSGUI6",111,0)
SITEPKIL(RESULTS,INPUT) ; Deletes the Station Subfile whose IEN was passed in
"RTN","OOPSGUI6",112,0)
 ;  Input - INPUT contains the Site Parameter file IEN, the subfile IEN,
"RTN","OOPSGUI6",113,0)
 ;          and the Station IEN in the format: SIEN^SUBF^STAIEN
"RTN","OOPSGUI6",114,0)
 ; Output - RESULTS contains a message with the filing status
"RTN","OOPSGUI6",115,0)
 N DA,DIK,SIEN,SUBF,STAIEN
"RTN","OOPSGUI6",116,0)
 S SIEN=$P($G(INPUT),U),SUBF=$P($G(INPUT),U,2),STAIEN=$P($G(INPUT),U,3)
"RTN","OOPSGUI6",117,0)
 I $G(SIEN)=""!($G(SUBF)="")!($G(STAIEN)="") D  Q
"RTN","OOPSGUI6",118,0)
 .S RESULTS="Missing Record Identifiers, Cannot file."
"RTN","OOPSGUI6",119,0)
 S DIK="^OOPS(2262,"_SIEN_","_SUBF_","
"RTN","OOPSGUI6",120,0)
 S DA=STAIEN,DA(1)=SIEN
"RTN","OOPSGUI6",121,0)
 D ^DIK
"RTN","OOPSGUI6",122,0)
 I $G(Y)="" S RESULTS="Deletion did not occur." Q
"RTN","OOPSGUI6",123,0)
 S RESULTS="Record successfully deleted"
"RTN","OOPSGUI6",124,0)
 Q
"RTN","OOPSGUI6",125,0)
SITEPEDT(RESULTS,INPUT,DATA,FORM) ;
"RTN","OOPSGUI6",126,0)
 ;  Edits the Station Subfile whose data and IEN have been passed in
"RTN","OOPSGUI6",127,0)
 ;  Input - INPUT contains the IEN of the Site Parameter file, subfile
"RTN","OOPSGUI6",128,0)
 ;                & Station IEN.  If adding new station, the Station IEN 
"RTN","OOPSGUI6",129,0)
 ;                = "". INPUT format:  SITE IEN^SUBFILE IEN^STATION IEN
"RTN","OOPSGUI6",130,0)
 ;          DATA  contains the data to be filed
"RTN","OOPSGUI6",131,0)
 ;          FORM  is either "" or "OSHA300" to signify data for filing
"RTN","OOPSGUI6",132,0)
 ; Output - RESULTS is a single value with a message regarding the 
"RTN","OOPSGUI6",133,0)
 ;          filing status
"RTN","OOPSGUI6",134,0)
 N CBC,DA,DIE,DR,PNM,PADD,PCTY,PST,PZIP,PTITLE,SIEN,SUBF,CBCSUF
"RTN","OOPSGUI6",135,0)
 N STANM,STAIEN,NA,TTL,PHN,EXT,IND,SIC,NAICS
"RTN","OOPSGUI6",136,0)
 S RESULTS="Filing"
"RTN","OOPSGUI6",137,0)
 S SIEN=$P($G(INPUT),U),SUBF=$P($G(INPUT),U,2),STAIEN=$P($G(INPUT),U,3)
"RTN","OOPSGUI6",138,0)
 I $G(SIEN)="" S RESULTS="Missing Record Identifiers, Cannot file." Q
"RTN","OOPSGUI6",139,0)
 I '$G(SUBF) S SUBF=$O(^OOPS(2262,SIEN,0)) I '$G(SUBF) S SUBF=1
"RTN","OOPSGUI6",140,0)
 S STANM=$P($G(DATA),U)
"RTN","OOPSGUI6",141,0)
 I $G(STANM)="" S RESULTS="Missing Station, Cannot continue." Q
"RTN","OOPSGUI6",142,0)
 I $G(STAIEN)="" D SITEPADD S STAIEN=DA
"RTN","OOPSGUI6",143,0)
 I $G(STAIEN)="" S RESULTS="Missing Station, cannot file." Q
"RTN","OOPSGUI6",144,0)
 S DIE="^OOPS(2262,"_SIEN_","_SUBF_","
"RTN","OOPSGUI6",145,0)
 S DA=STAIEN,DA(1)=SIEN,DR=""
"RTN","OOPSGUI6",146,0)
 I $G(FORM)="" D
"RTN","OOPSGUI6",147,0)
 .S PNM=$P($G(DATA),U,2),PADD=$P($G(DATA),U,3)
"RTN","OOPSGUI6",148,0)
 .S PCTY=$P($G(DATA),U,4),PST=$P($G(DATA),U,5),PZIP=$P($G(DATA),U,6)
"RTN","OOPSGUI6",149,0)
 .S PTITLE=$P($G(DATA),U,7),CBC=$P($G(DATA),U,8)
"RTN","OOPSGUI6",150,0)
 .; Patch 5 llh - Added CBCSUF sets
"RTN","OOPSGUI6",151,0)
 .S CBCSUF=$P($G(DATA),U,9)
"RTN","OOPSGUI6",152,0)
 .S DR=".7///^S X=CBC;.8///^S X=CBCSUF;1///^S X=PNM;2///^S X=PADD;3///^S X=PCTY;4///^S X=PST;5///^S X=PZIP;6///^S X=PTITLE"
"RTN","OOPSGUI6",153,0)
 I $G(FORM)="OSHA300" D
"RTN","OOPSGUI6",154,0)
 .S NA=$P($G(DATA),U,2),TTL=$P($G(DATA),U,3),PHN=$P($G(DATA),U,4)
"RTN","OOPSGUI6",155,0)
 .S EXT=$P($G(DATA),U,5),IND=$P($G(DATA),U,6),SIC=$P($G(DATA),U,7)
"RTN","OOPSGUI6",156,0)
 .S NAICS=$P($G(DATA),U,8)
"RTN","OOPSGUI6",157,0)
 .S DR="7///^S X=NA;8///^S X=TTL;9///^S X=PHN;10///^S X=EXT"
"RTN","OOPSGUI6",158,0)
 .S DR=DR_";11///^S X=IND;12///^S X=SIC;13///^S X=NAICS"
"RTN","OOPSGUI6",159,0)
 I $G(DR)'="" D ^DIE
"RTN","OOPSGUI6",160,0)
 I $G(Y)="" D  Q
"RTN","OOPSGUI6",161,0)
 .; if line below executed, then no Add, only edit
"RTN","OOPSGUI6",162,0)
 .I RESULTS="Filing" S RESULTS="Update Successful"
"RTN","OOPSGUI6",163,0)
 S RESULTS="Update was not Successful"
"RTN","OOPSGUI6",164,0)
 Q
"RTN","OOPSGUI6",165,0)
PARMEDT(RESULTS,INPUT) ; Files changes to top level file (#2262)
"RTN","OOPSGUI6",166,0)
 ;  Input:   INPUT - This variable contains the IEN, Site Name, and 
"RTN","OOPSGUI6",167,0)
 ;                   District Office Name to be filed in the format:
"RTN","OOPSGUI6",168,0)
 ;                   IEN^SITE NAME^DISTRICT OFFICE
"RTN","OOPSGUI6",169,0)
 ; Output: RESULTS - Results will contain a filing status message
"RTN","OOPSGUI6",170,0)
 N DA,DIE,DR,IEN,SITENM,DISOFF
"RTN","OOPSGUI6",171,0)
 S IEN=$P($G(INPUT),U),SITENM=$P($G(INPUT),U,2),DISOFF=$P($G(INPUT),U,3)
"RTN","OOPSGUI6",172,0)
 I '$G(IEN) S RESULTS="Cannot File Changes, no Record Number" Q
"RTN","OOPSGUI6",173,0)
 S DIE="^OOPS(2262,",DA=IEN
"RTN","OOPSGUI6",174,0)
 S DR=".01///^S X=SITENM;2///^S X=DISOFF"
"RTN","OOPSGUI6",175,0)
 D ^DIE
"RTN","OOPSGUI6",176,0)
 I $G(Y)="" S RESULTS="Update Site data Successful" Q
"RTN","OOPSGUI6",177,0)
 S RESULTS="Update Site data was NOT Successful"
"RTN","OOPSGUI6",178,0)
 Q
"RTN","OOPSGUI6",179,0)
CHGCASE(RESULTS,INPUT,FLD58) ;  File Change Case Status
"RTN","OOPSGUI6",180,0)
 ;  Input:    INPUT  - IEN^STAT where IEN = the ASISTS case IEN and
"RTN","OOPSGUI6",181,0)
 ;                     STAT = the new case status
"RTN","OOPSGUI6",182,0)
 ;          DELETE   - Reason for Deletion, field #58, file #2260
"RTN","OOPSGUI6",183,0)
 ; Output: RESULTS   - Message back to client with new Case Status
"RTN","OOPSGUI6",184,0)
 ;
"RTN","OOPSGUI6",185,0)
 N CURRENT,DR,DIE,IEN,Y,STATUS
"RTN","OOPSGUI6",186,0)
 S IEN=$P(INPUT,U),(STATUS,Y)=$P(INPUT,U,2)
"RTN","OOPSGUI6",187,0)
 I '$G(IEN) S RESULTS="Missing Record Identifier, cannot file." Q
"RTN","OOPSGUI6",188,0)
 I $$GET1^DIQ(2260,IEN,66)'="",(Y=2) D  Q
"RTN","OOPSGUI6",189,0)
 .S RESULTS="Case transmitted to DOL, cannot change status to Deleted."
"RTN","OOPSGUI6",190,0)
 S CURRENT=$$GET1^DIQ(2260,IEN,51,"I")
"RTN","OOPSGUI6",191,0)
CLOSE ; Close
"RTN","OOPSGUI6",192,0)
 S DR=""
"RTN","OOPSGUI6",193,0)
 S DR="51////"_Y
"RTN","OOPSGUI6",194,0)
 ;If current status goes from closed/deleted to Open, reset field 57
"RTN","OOPSGUI6",195,0)
 I (CURRENT=1!(CURRENT=2)),(Y=0) S DR=DR_";57////@"
"RTN","OOPSGUI6",196,0)
 I FLD58]"" S DR=DR_";58////"_FLD58
"RTN","OOPSGUI6",197,0)
 S DIE="^OOPS(2260,",DA=IEN
"RTN","OOPSGUI6",198,0)
 D ^DIE K DIE,DA
"RTN","OOPSGUI6",199,0)
 I $D(Y)'=0 Q
"RTN","OOPSGUI6",200,0)
 S RESULTS="Case Status has been changed to: "_$$GET1^DIQ(2260,IEN,51)
"RTN","OOPSGUI6",201,0)
 ;01/02/04 Patch 4 llh- if case = closed, send bulletin
"RTN","OOPSGUI6",202,0)
 I STATUS=1 D CLSCASE^OOPSMBUL(IEN)
"RTN","OOPSGUI6",203,0)
 Q
"RTN","OOPSGUI7")
0^15^B29220356
"RTN","OOPSGUI7",1,0)
OOPSGUI7 ;WIOFO/LLH-RPC routines ;10/30/01
"RTN","OOPSGUI7",2,0)
 ;;2.0;ASISTS;**2,4,7**;Jun 03, 2002
"RTN","OOPSGUI7",3,0)
 ;
"RTN","OOPSGUI7",4,0)
ENT(RESULTS,INPUT) ; Non-interactive GUI Entry Point for transmitting data
"RTN","OOPSGUI7",5,0)
 ;                 to DOL or NDB
"RTN","OOPSGUI7",6,0)
 ;  Input:   INPUT  - Contains the date for the claims to be
"RTN","OOPSGUI7",7,0)
 ;                    retransmitted, the queue date and time for the
"RTN","OOPSGUI7",8,0)
 ;                    retransmission date to run and either DOL or NDB
"RTN","OOPSGUI7",9,0)
 ;                    to indicate which manual transmission should run.
"RTN","OOPSGUI7",10,0)
 ;                    The format is TRANSDT^QUEUEDT@TIME^DOL (or NDB)
"RTN","OOPSGUI7",11,0)
 ; Output: RESULTS -  is the return array to the client with status
"RTN","OOPSGUI7",12,0)
 ;                    message
"RTN","OOPSGUI7",13,0)
 N ARR,COMMA,ERR1,ERR2,FIELD,FL,MAILG,CURR,QDATE,QUE,RDATE,RTN,X,Y
"RTN","OOPSGUI7",14,0)
 N MAN,WOK,ZTDESC,ZTREQ,ZTRTN
"RTN","OOPSGUI7",15,0)
 S RTN=$P($G(INPUT),U,3)
"RTN","OOPSGUI7",16,0)
 S MAN=1                       ; force manual xmit flag
"RTN","OOPSGUI7",17,0)
 I RTN="DOL" D
"RTN","OOPSGUI7",18,0)
 . S MAILG="OOPS DOL XMIT DATA"
"RTN","OOPSGUI7",19,0)
 . S QUE="Q-AST.MED.VA.GOV"
"RTN","OOPSGUI7",20,0)
 I RTN="NDB" D
"RTN","OOPSGUI7",21,0)
 . S MAILG="OOPS XMIT 2162 DATA"
"RTN","OOPSGUI7",22,0)
 . S QUE="Q-ASI.MED.VA.GOV"
"RTN","OOPSGUI7",23,0)
 ;Check for security keys
"RTN","OOPSGUI7",24,0)
 I '$D(^XUSEC(MAILG,DUZ)) D  Q
"RTN","OOPSGUI7",25,0)
 .S RESULTS(0)="ERROR"
"RTN","OOPSGUI7",26,0)
 .S RESULTS(1)="You do not have the required Security Key."
"RTN","OOPSGUI7",27,0)
 ;Assure the Queue has been defined
"RTN","OOPSGUI7",28,0)
 S FIELD=.01,FL="X"
"RTN","OOPSGUI7",29,0)
 D FIND^DIC(4.2,"",FIELD,FL,QUE,"","","","","ARR")
"RTN","OOPSGUI7",30,0)
 I '$D(ARR("DILIST",1)) D  Q
"RTN","OOPSGUI7",31,0)
 .S RESULTS(0)="ERROR"
"RTN","OOPSGUI7",32,0)
 .S RESULTS(1)="Domain not found in the DOMAIN File,"
"RTN","OOPSGUI7",33,0)
 ; Get Retransmit Date from First Piece of Input & Translate into FM
"RTN","OOPSGUI7",34,0)
 S X=$P($G(INPUT),U) D ^%DT
"RTN","OOPSGUI7",35,0)
 S RDATE=Y
"RTN","OOPSGUI7",36,0)
 I RDATE=-1 S ERR1=1
"RTN","OOPSGUI7",37,0)
 S %DT="R",X=$P($G(INPUT),U,2) D ^%DT K %DT
"RTN","OOPSGUI7",38,0)
 S QDATE=Y
"RTN","OOPSGUI7",39,0)
 I QDATE=-1 S ERR2=2
"RTN","OOPSGUI7",40,0)
 I $G(ERR1)!($G(ERR2)) D  Q
"RTN","OOPSGUI7",41,0)
 . S RESULTS(0)="ERROR",RESULTS(1)="",COMMA=""
"RTN","OOPSGUI7",42,0)
 . S:$G(ERR1) RESULTS(1)="Invalid Transmission Date",COMMA=", "
"RTN","OOPSGUI7",43,0)
 . S:$G(ERR2) RESULTS(1)=RESULTS(1)_COMMA_"Invalid Queue Date."
"RTN","OOPSGUI7",44,0)
 ;
"RTN","OOPSGUI7",45,0)
 I RTN="DOL" D
"RTN","OOPSGUI7",46,0)
 . S ZTRTN="EN^OOPSDOL",WOK=1,ZTDESC="TRANSMIT DOL CA1/CA2 DATA"
"RTN","OOPSGUI7",47,0)
 I RTN="NDB" D
"RTN","OOPSGUI7",48,0)
 . S ZTRTN="EN^OOPSNDB",ZTDESC="TRANSMIT NATIONAL DATABASE 2162 DATA"
"RTN","OOPSGUI7",49,0)
 ; Make sure Queue date/time is not after current time
"RTN","OOPSGUI7",50,0)
 S CURR=$$HTFM^XLFDT(""_$H_"")
"RTN","OOPSGUI7",51,0)
 I $$FMDIFF^XLFDT(QDATE,CURR,2)<0 S QDATE=$H
"RTN","OOPSGUI7",52,0)
 ; Report will always be Queued from the GUI
"RTN","OOPSGUI7",53,0)
 K IO("Q"),ZTUCI,ZTDTH,ZTIO,ZTSAVE
"RTN","OOPSGUI7",54,0)
 S ZTDTH=QDATE,ZTIO="",ZTREQ="@",ZTSAVE("ZTREQ")=""
"RTN","OOPSGUI7",55,0)
 S ZTSAVE("RDATE")="",ZTSAVE("MAN")=""
"RTN","OOPSGUI7",56,0)
 D ^%ZTLOAD
"RTN","OOPSGUI7",57,0)
 K ZTSK
"RTN","OOPSGUI7",58,0)
 S RESULTS(0)="SUCCESSFULLY QUEUED"
"RTN","OOPSGUI7",59,0)
 Q
"RTN","OOPSGUI7",60,0)
OWCPCLR(RESULTS,IEN,CALLER,FORM) ; Entry point for clearing supervisor
"RTN","OOPSGUI7",61,0)
 ;   fields if OWPC worker has edited them
"RTN","OOPSGUI7",62,0)
 ;  Input:     IEN - ien of case to have the fields cleared
"RTN","OOPSGUI7",63,0)
 ;          CALLER - menu being called from
"RTN","OOPSGUI7",64,0)
 ;            FORM - whether a CA1 or CA2
"RTN","OOPSGUI7",65,0)
 ; Output: RESULTS - required results parameter, no data returned
"RTN","OOPSGUI7",66,0)
 ;                   from this call
"RTN","OOPSGUI7",67,0)
 I $G(IEN)=""!($G(CALLER)="")!($G(FORM)="") Q
"RTN","OOPSGUI7",68,0)
 D CLRFLDS^OOPSWCE
"RTN","OOPSGUI7",69,0)
SUPFLDS ; Clear Supervisor fields for the CA1, since fields have been changed
"RTN","OOPSGUI7",70,0)
 I FORM'="CA1" Q
"RTN","OOPSGUI7",71,0)
 N SUP
"RTN","OOPSGUI7",72,0)
 S SUP=$$GET1^DIQ(200,DUZ,.01)
"RTN","OOPSGUI7",73,0)
 S RESULTS=SUP
"RTN","OOPSGUI7",74,0)
 S $P(^OOPS(2260,IEN,"CA1L"),U,3)=""     ;Clear EXCEPTION 
"RTN","OOPSGUI7",75,0)
 S $P(^OOPS(2260,IEN,"CA1L"),U,4)=""     ;Clear SUP TITLE
"RTN","OOPSGUI7",76,0)
 S $P(^OOPS(2260,IEN,"CA1L"),U,5)=""     ;Clear SUP PHONE
"RTN","OOPSGUI7",77,0)
 Q
"RTN","OOPSGUI7",78,0)
CONSENT(RESULTS,IEN,UNIREP)     ; Employee consented to union notification,
"RTN","OOPSGUI7",79,0)
 ;                 send msg to union
"RTN","OOPSGUI7",80,0)
 ; Input
"RTN","OOPSGUI7",81,0)
 ;    IEN - Internal record number
"RTN","OOPSGUI7",82,0)
 ; UNIREP - IEN from file 200 of the Union Rep - used to send bulletin
"RTN","OOPSGUI7",83,0)
 ; Output - RESULTS - String indicating bulletin status.
"RTN","OOPSGUI7",84,0)
 D CONSENT^OOPSMBUL(IEN,UNIREP)
"RTN","OOPSGUI7",85,0)
 Q
"RTN","OOPSGUI7",86,0)
GETFLD(RESULTS,IEN,FLD) ; Send in IEN and Field number to retrieve a single 
"RTN","OOPSGUI7",87,0)
 ; data field from the ASISTS Accident Reporting File (#2260)
"RTN","OOPSGUI7",88,0)
 ;
"RTN","OOPSGUI7",89,0)
 ;  Input:   IEN - Internal record number
"RTN","OOPSGUI7",90,0)
 ; Output:   FLD - the file and field number of the data element to be
"RTN","OOPSGUI7",91,0)
 ;                 retrieved.  EX. 2260^120
"RTN","OOPSGUI7",92,0)
 N FILE,FIELD,DATA
"RTN","OOPSGUI7",93,0)
 S RESULTS="No data."
"RTN","OOPSGUI7",94,0)
 I '$G(IEN) S RESULTS="No data.  Missing Record Identifier." Q
"RTN","OOPSGUI7",95,0)
 S FILE=$P(FLD,U),FIELD=$P(FLD,U,2)
"RTN","OOPSGUI7",96,0)
 I $G(FILE)=""!($G(FIELD)="") D  Q
"RTN","OOPSGUI7",97,0)
 . S RESULTS="No data.  Missing File or Field information."
"RTN","OOPSGUI7",98,0)
 ; This should only get called when OOPS*2.0*7 is 1st released, used
"RTN","OOPSGUI7",99,0)
 ; to get hire date if it's blank and personnel status is employee
"RTN","OOPSGUI7",100,0)
 I FIELD=336 D  Q
"RTN","OOPSGUI7",101,0)
 .N SSN,STR S SSN=$$GET1^DIQ(FILE,IEN,5,"I")
"RTN","OOPSGUI7",102,0)
 .D FIND^DIC(450,,"@;.01;30","PS",SSN,"","SSN")
"RTN","OOPSGUI7",103,0)
 .S STR=$P(^TMP("DILIST",$J,0),U) I $G(STR)'=1 S RESULTS="No Data." Q
"RTN","OOPSGUI7",104,0)
 .S RESULTS=$P($G(^TMP("DILIST",$J,1,0)),U,3)
"RTN","OOPSGUI7",105,0)
 .I RESULTS="" S RESULTS="No Data."
"RTN","OOPSGUI7",106,0)
 .K ^TMP("DILIST",$J),DIERR
"RTN","OOPSGUI7",107,0)
 S DATA=$$GET1^DIQ(FILE,IEN,FIELD)
"RTN","OOPSGUI7",108,0)
 I $G(DATA)'="" S RESULTS=DATA
"RTN","OOPSGUI7",109,0)
 Q
"RTN","OOPSGUI7",110,0)
GETINST(RESULTS)        ; 
"RTN","OOPSGUI7",111,0)
 ; RPC Call - Get Institutions from File 4
"RTN","OOPSGUI7",112,0)
 ; Output:  RESULTS - global array
"RTN","OOPSGUI7",113,0)
 ;
"RTN","OOPSGUI7",114,0)
 ; 12/30/03 llh (OOPS*2*4) - this subroutine can only be used
"RTN","OOPSGUI7",115,0)
 ; to retrieve data from ^DIC(4).  There is generic code in OOPSGUI3
"RTN","OOPSGUI7",116,0)
 ; to obtain data from other 'table files'.
"RTN","OOPSGUI7",117,0)
 ;
"RTN","OOPSGUI7",118,0)
 N ITEM,ROOT,X,XREF,SFLD,VAL,PTR,PCE,VALID,FIELD
"RTN","OOPSGUI7",119,0)
 K ^TMP("OOPSINST",$J)
"RTN","OOPSGUI7",120,0)
 S XREF="B",X=0,FIELD=13
"RTN","OOPSGUI7",121,0)
 S ROOT="^"_$$GET1^DID(2260,FIELD,"","POINTER")
"RTN","OOPSGUI7",122,0)
 S ITEM="" F  S ITEM=$O(@(ROOT_"XREF,ITEM)")) Q:$G(ITEM)']""  D
"RTN","OOPSGUI7",123,0)
 .S PTR=0 F  S PTR=$O(@(ROOT_"XREF,ITEM,PTR)")) Q:PTR=""  D
"RTN","OOPSGUI7",124,0)
 ..I PTR'>0 Q
"RTN","OOPSGUI7",125,0)
 ..S VAL=$P(@(ROOT_PTR_",0)"),U)
"RTN","OOPSGUI7",126,0)
 ..S VALID=1,SFLD=ROOT_PTR_",99)"
"RTN","OOPSGUI7",127,0)
 ..I $P($G(@SFLD),U,4)=1 S VALID=0
"RTN","OOPSGUI7",128,0)
 ..I $P($G(@SFLD),U)'="" S VAL=VAL_" = "_$P($G(@SFLD),U)
"RTN","OOPSGUI7",129,0)
 ..I $P(VAL," = ")="" S VALID=0
"RTN","OOPSGUI7",130,0)
 ..I VALID S X=X+1,^TMP("OOPSINST",$J,X)=PTR_":"_VAL_$C(10)
"RTN","OOPSGUI7",131,0)
 S RESULTS=$NA(^TMP("OOPSINST",$J))
"RTN","OOPSGUI7",132,0)
 Q
"RTN","OOPSGUI7",133,0)
SENSDATA(RES,SDUZ,EMP) ;Supervisor accessed sensitive data, case not created
"RTN","OOPSGUI7",134,0)
 ; Input  EMP String which is the name of the employee accessed.
"RTN","OOPSGUI7",135,0)
 ;        DUZ DUZ of the Supervisor accessing the data. 
"RTN","OOPSGUI7",136,0)
 N MGRP,MEMS,MSG
"RTN","OOPSGUI7",137,0)
 ;Make sure mail group exists
"RTN","OOPSGUI7",138,0)
 S MGRP=$$FIND1^DIC(3.8,"","X","OOPS ISO NOTIFICATION")
"RTN","OOPSGUI7",139,0)
 I 'MGRP D  G BULL
"RTN","OOPSGUI7",140,0)
 .S XMY("G.OOPS WC MESSAGE")=""
"RTN","OOPSGUI7",141,0)
 .S XMDUZ="ASISTS Package"
"RTN","OOPSGUI7",142,0)
 .S GRP="OOPS WC MESSAGE"
"RTN","OOPSGUI7",143,0)
 .S XMSUB="ASISTS ISO NOTIFICATION Mail Group Error"
"RTN","OOPSGUI7",144,0)
 .S MSG(1)="The OOPS ISO NOTIFICATION Mail Group does not exist."
"RTN","OOPSGUI7",145,0)
 .S XMTEXT="MSG("
"RTN","OOPSGUI7",146,0)
 .D ^XMD
"RTN","OOPSGUI7",147,0)
 ;Make sure there is someone defined in the mail group
"RTN","OOPSGUI7",148,0)
 D LIST^DIC(3.81,","_MGRP_",","","",1,"","","","","","MEMS")
"RTN","OOPSGUI7",149,0)
 I '$P(MEMS("DILIST",0),U) D  G BULL
"RTN","OOPSGUI7",150,0)
 .S XMY("G.OOPS WC MESSAGE")=""
"RTN","OOPSGUI7",151,0)
 .S XMDUZ="ASISTS Package"
"RTN","OOPSGUI7",152,0)
 .S GRP="OOPS WC MESSAGE"
"RTN","OOPSGUI7",153,0)
 .S XMSUB="ASISTS ISO NOTIFICATION Mail Group Error"
"RTN","OOPSGUI7",154,0)
 .S MSG(1)="There are no members in mail group OOPS ISO NOTIFICATION."
"RTN","OOPSGUI7",155,0)
 .S XMTEXT="MSG("
"RTN","OOPSGUI7",156,0)
 .D ^XMD
"RTN","OOPSGUI7",157,0)
 S XMY("G.OOPS ISO NOTIFICATION")=""
"RTN","OOPSGUI7",158,0)
BULL S (NAME,XMB)="OOPS SENSITIVE DATA"
"RTN","OOPSGUI7",159,0)
 S XMB(1)=$$GET1^DIQ(200,SDUZ,.01)
"RTN","OOPSGUI7",160,0)
 S XMB(2)=EMP
"RTN","OOPSGUI7",161,0)
 S XMB(3)=$$FMTE^XLFDT($$NOW^XLFDT,1)
"RTN","OOPSGUI7",162,0)
 S XMBODY="",XMINSTR("FLAGS")="X"
"RTN","OOPSGUI7",163,0)
 D TASKBULL^XMXAPI(DUZ,NAME,.XMB,XMBODY,.XMY,.XMINSTR)
"RTN","OOPSGUI7",164,0)
 K NAME,XMB,XMBODY,XMY,XMINSTR
"RTN","OOPSGUI7",165,0)
 S RES="BULLETIN SENT"
"RTN","OOPSGUI7",166,0)
 Q
"RTN","OOPSGUI8")
0^3^B32088285
"RTN","OOPSGUI8",1,0)
OOPSGUI8 ;WIOFO/LLH-RPC Broker calls for GUI ;10/23/01
"RTN","OOPSGUI8",2,0)
 ;;2.0;ASISTS;**8,7**;Jun 03, 2002
"RTN","OOPSGUI8",3,0)
 ;
"RTN","OOPSGUI8",4,0)
EN1(RESULTS,INPUT) ; Entry point for routine
"RTN","OOPSGUI8",5,0)
 ;  Input:  INPUT contains the IEN of the ASISTS record and the 
"RTN","OOPSGUI8",6,0)
 ;          calling menu, in the format IEN^CALLING MENU
"RTN","OOPSGUI8",7,0)
 ; Output:  RESULTS contains status messages back to the client. 
"RTN","OOPSGUI8",8,0)
 ;          RESULTS(0) will = either 1 or 0.  1 if ok for form to be
"RTN","OOPSGUI8",9,0)
 ;          signed by calling menu option, 0 if not ok.  The RESULTS
"RTN","OOPSGUI8",10,0)
 ;          array with status message will start at 1.
"RTN","OOPSGUI8",11,0)
 ;
"RTN","OOPSGUI8",12,0)
 N CALL,CN,DIC,IEN,FORM,PRM1,PRM2,SIGN,Y
"RTN","OOPSGUI8",13,0)
 S CN=1
"RTN","OOPSGUI8",14,0)
 S IEN=$P($G(INPUT),U),CALL=$P($G(INPUT),U,2)
"RTN","OOPSGUI8",15,0)
 S FORM=$$GET1^DIQ(2260,IEN,52,"I")
"RTN","OOPSGUI8",16,0)
 S FORM=$S(FORM=1:"CA1",FORM=2:"CA2",1:"")
"RTN","OOPSGUI8",17,0)
 S PRM1=$S(CALL="O":"Safety Officer",CALL="H":"Occupational Health",1:0)
"RTN","OOPSGUI8",18,0)
 S PRM2=PRM1_" approves the WCP signing for the Employee: "
"RTN","OOPSGUI8",19,0)
 S SIGN=""
"RTN","OOPSGUI8",20,0)
 I '$G(IEN)!($G(FORM)="")!($G(CALL)="") D  Q
"RTN","OOPSGUI8",21,0)
 . S RESULTS(0)=0
"RTN","OOPSGUI8",22,0)
 . S RESULTS(1)="Missing Information, Cannot Continue"
"RTN","OOPSGUI8",23,0)
 I CALL="W" G WCPS4E
"RTN","OOPSGUI8",24,0)
 S RESULTS(0)=$$VALID()
"RTN","OOPSGUI8",25,0)
 I RESULTS(0) S RESULTS(CN)=PRM2,CN=CN+1
"RTN","OOPSGUI8",26,0)
 G EXIT
"RTN","OOPSGUI8",27,0)
WCPS4E ; allow WCP to sign for employee if all approvals given
"RTN","OOPSGUI8",28,0)
 N CONT,EHS,SIGN,SOS,VALID,VIEW
"RTN","OOPSGUI8",29,0)
 S SIGN=0,VALID=0,VIEW=1
"RTN","OOPSGUI8",30,0)
 S SOS=$$GET1^DIQ(2260,IEN,76,"I")
"RTN","OOPSGUI8",31,0)
 S EHS=$$GET1^DIQ(2260,IEN,79,"I")
"RTN","OOPSGUI8",32,0)
 S CONT=$S(DUZ=SOS:"S",DUZ=EHS:"H",1:"")
"RTN","OOPSGUI8",33,0)
 I (CONT="S")!(CONT="H") D
"RTN","OOPSGUI8",34,0)
 . S RESULTS(CN)="You have approved as "_$S(CONT="S":"Safety Officer",CONT="H":"Occ Health Rep",1:"")
"RTN","OOPSGUI8",35,0)
 . S RESULTS(CN)=RESULTS(0)_" and cannot sign as Employee.",CN=CN+1
"RTN","OOPSGUI8",36,0)
 . S RESULTS(CN)="Three different individuals must be involved."
"RTN","OOPSGUI8",37,0)
 . S VIEW=0
"RTN","OOPSGUI8",38,0)
 I '$G(SOS) S VIEW=0 D
"RTN","OOPSGUI8",39,0)
 . S RESULTS(CN)="Safety Officer has not approved WCP signing for employee.",CN=CN+1
"RTN","OOPSGUI8",40,0)
 I '$G(EHS) S VIEW=0 D
"RTN","OOPSGUI8",41,0)
 . S RESULTS(CN)="Occupational Health has not approved WCP signing for employee.",CN=CN+1
"RTN","OOPSGUI8",42,0)
 I VIEW D
"RTN","OOPSGUI8",43,0)
 . ; Allow clearing WCP signature, employee may be able to sign
"RTN","OOPSGUI8",44,0)
 . I $$GET1^DIQ(2260,IEN,119,"I") D CLRES^OOPSUTL1(IEN,"E",FORM)
"RTN","OOPSGUI8",45,0)
 . D VALIDATE^OOPSUTL4(IEN,FORM,"E",.VALID)
"RTN","OOPSGUI8",46,0)
 . I 'VALID S RESULTS(CN)="All required fields not completed",CN=CN+1 Q
"RTN","OOPSGUI8",47,0)
 . D EMP^OOPSVAL1
"RTN","OOPSGUI8",48,0)
EXIT ;
"RTN","OOPSGUI8",49,0)
 Q
"RTN","OOPSGUI8",50,0)
VALID() ; make sure same person is not signing for both safety and EH and if
"RTN","OOPSGUI8",51,0)
 ; signed from menu option being called not needed again - so quit
"RTN","OOPSGUI8",52,0)
 N CONT,EHAPP,ERR,SOAPP,VALID
"RTN","OOPSGUI8",53,0)
 S VALID=1,ERR=0
"RTN","OOPSGUI8",54,0)
 S SOAPP=$P($G(^OOPS(2260,IEN,"WCSE")),U)
"RTN","OOPSGUI8",55,0)
 S EHAPP=$P($G(^OOPS(2260,IEN,"WCSE")),U,4)
"RTN","OOPSGUI8",56,0)
 S CONT=$S(DUZ=SOAPP:"S",DUZ=EHAPP:"H",1:"")
"RTN","OOPSGUI8",57,0)
 I CALL="O" D
"RTN","OOPSGUI8",58,0)
 . I CONT="S" S ERR=1
"RTN","OOPSGUI8",59,0)
 . I $G(EHAPP)=DUZ S ERR=2
"RTN","OOPSGUI8",60,0)
 . I $G(SOAPP)&($G(CONT)="") S ERR=3
"RTN","OOPSGUI8",61,0)
 I CALL="H" D
"RTN","OOPSGUI8",62,0)
 . I CONT="H" S ERR=1
"RTN","OOPSGUI8",63,0)
 . I $G(SOAPP)=DUZ S ERR=2
"RTN","OOPSGUI8",64,0)
 . I $G(EHAPP)&($G(CONT)="") S ERR=3
"RTN","OOPSGUI8",65,0)
 I ERR=1 D
"RTN","OOPSGUI8",66,0)
 . S RESULTS(CN)="You have signed as "
"RTN","OOPSGUI8",67,0)
 . S RESULTS(CN)=RESULTS(CN)_PRM1
"RTN","OOPSGUI8",68,0)
 . S RESULTS(CN)=RESULTS(CN)_", Cannot sign."
"RTN","OOPSGUI8",69,0)
 . S CN=CN+1,VALID=0
"RTN","OOPSGUI8",70,0)
 I ERR=2 D
"RTN","OOPSGUI8",71,0)
 . S RESULTS(CN)="You have already signed as "
"RTN","OOPSGUI8",72,0)
 . S RESULTS(CN)=RESULTS(CN)_$S(CALL="O":"Occupational Health",CALL="H":"Safety Officer",1:0)_".",CN=CN+1
"RTN","OOPSGUI8",73,0)
 . S RESULTS(CN)="Both signatures cannot be made by the same person."
"RTN","OOPSGUI8",74,0)
 . S CN=CN+1,VALID=0
"RTN","OOPSGUI8",75,0)
 I ERR=3 D
"RTN","OOPSGUI8",76,0)
 . S RESULTS(CN)=PRM1_" has already signed, re-signing is not required."
"RTN","OOPSGUI8",77,0)
 . S CN=CN+1,VALID=0
"RTN","OOPSGUI8",78,0)
 Q VALID
"RTN","OOPSGUI8",79,0)
CSIGN(RESULTS,IEN,FORM,CALL) ; Clears Signature from form
"RTN","OOPSGUI8",80,0)
 ;
"RTN","OOPSGUI8",81,0)
 ;   Input:     IEN - IEN of the ASISTS case to have the
"RTN","OOPSGUI8",82,0)
 ;                    signature cleared from
"RTN","OOPSGUI8",83,0)
 ;             FORM - the Form to clear the signature from, 2162,
"RTN","OOPSGUI8",84,0)
 ;                    CA1 or CA2 or CA7 (CA7 added V2 patch 5)
"RTN","OOPSGUI8",85,0)
 ;             CALL - the calling menu
"RTN","OOPSGUI8",86,0)
 ;  Output: RESULTS - single value with status message
"RTN","OOPSGUI8",87,0)
 ;
"RTN","OOPSGUI8",88,0)
 S RESULTS="Clearing Signatures"
"RTN","OOPSGUI8",89,0)
 I ('$G(IEN))!($G(FORM)="")!($G(CALL)="") S RESULTS="FAILED"
"RTN","OOPSGUI8",90,0)
 ; V2 Patch 5 llh - added logic for CA7
"RTN","OOPSGUI8",91,0)
 I FORM'="CA7" D CLRES^OOPSUTL1(IEN,CALL,FORM)
"RTN","OOPSGUI8",92,0)
 I FORM="CA7" D CLRES^OOPSGUIS(IEN,CALL,FORM)
"RTN","OOPSGUI8",93,0)
 S RESULTS="CLEARED"
"RTN","OOPSGUI8",94,0)
 Q
"RTN","OOPSGUI8",95,0)
DTFC(RESULTS,DATE,FLAG) ; Reformat Date/Time
"RTN","OOPSGUI8",96,0)
 ;  Input  - Date to be reformatted
"RTN","OOPSGUI8",97,0)
 ;         - Flag to be used
"RTN","OOPSGUI8",98,0)
 ; Output  - RESULTS contains the reformatted date
"RTN","OOPSGUI8",99,0)
 ;
"RTN","OOPSGUI8",100,0)
 N X
"RTN","OOPSGUI8",101,0)
 S FLAG=+$G(FLAG)
"RTN","OOPSGUI8",102,0)
 I DATE=""!(FLAG="") S (RESULTS,RESULTS(1))="" Q
"RTN","OOPSGUI8",103,0)
 S X=DATE,%DT="T" D ^%DT
"RTN","OOPSGUI8",104,0)
 S DATE=Y,X="NOW"
"RTN","OOPSGUI8",105,0)
 D ^%DT
"RTN","OOPSGUI8",106,0)
 I $S(DATE=-1:1,FLAG<0:Y<DATE,FLAG>0:DATE>Y,1:0) S DATE=-1
"RTN","OOPSGUI8",107,0)
 I DATE=-1 S (RESULTS,RESULTS(1))="DATE ERROR" Q
"RTN","OOPSGUI8",108,0)
 S (RESULTS,RESULTS(1))=$$FMTE^XLFDT(DATE,5)
"RTN","OOPSGUI8",109,0)
 Q
"RTN","OOPSGUI8",110,0)
GETNOI(RESULTS,OPT) ; Broker Call to retrieve NOI Codes
"RTN","OOPSGUI8",111,0)
 ;  Input:     OPT - Either CA1 or CA2 to indicate which codes should be
"RTN","OOPSGUI8",112,0)
 ;                   retrieved.  If CA1 must start with T, otherwise CA2
"RTN","OOPSGUI8",113,0)
 ; Output: RESULTS - NOI Description and Code
"RTN","OOPSGUI8",114,0)
 N NOI,DES,CODE,CN
"RTN","OOPSGUI8",115,0)
 S DES="",CN=0
"RTN","OOPSGUI8",116,0)
 F  S DES=$O(^OOPS(2263.3,"B",DES)) Q:DES=""  S NOI="" F  S NOI=$O(^OOPS(2263.3,"B",DES,NOI)) Q:NOI=""  D
"RTN","OOPSGUI8",117,0)
 . S CODE=$P(^OOPS(2263.3,NOI,0),U,2)
"RTN","OOPSGUI8",118,0)
 . I OPT="CA1",($E(CODE,1)="T") S RESULTS(CN)=NOI_":"_DES_" - "_CODE
"RTN","OOPSGUI8",119,0)
 . I OPT="CA2",($E(CODE,1)'="T") S RESULTS(CN)=NOI_":"_DES_" - "_CODE
"RTN","OOPSGUI8",120,0)
 . S CN=CN+1
"RTN","OOPSGUI8",121,0)
 Q
"RTN","OOPSGUI8",122,0)
ZIPCHK(RESULTS,DATA) ; patch 5 - validate zip code against file 5.12
"RTN","OOPSGUI8",123,0)
 ;                 to ensure zip in file and has correct state.
"RTN","OOPSGUI8",124,0)
 ;
"RTN","OOPSGUI8",125,0)
 ;  Input:    DATA - contains ZIP CODE^STATE NAME
"RTN","OOPSGUI8",126,0)
 ; Output: RESULTS - returns message with validation results
"RTN","OOPSGUI8",127,0)
 ;
"RTN","OOPSGUI8",128,0)
 N STATE,VALSTATE,VALZIP,ZIP,ZZIP
"RTN","OOPSGUI8",129,0)
 S ZIP=$P($G(DATA),U,1),STATE=$P($G(DATA),U,2)
"RTN","OOPSGUI8",130,0)
 S RESULTS=""
"RTN","OOPSGUI8",131,0)
 I '$G(ZIP)!($G(STATE)="") S RESULTS="MISSING PARAMETERS" Q
"RTN","OOPSGUI8",132,0)
 D POSTAL^XIPUTIL(ZIP,.ZZIP)
"RTN","OOPSGUI8",133,0)
 I $G(ZZIP("ERROR"))'="" S RESULTS="ZIP CODE NOT FOUND" Q
"RTN","OOPSGUI8",134,0)
 I STATE'=ZZIP("STATE") S RESULTS="STATE MISMATCH ON ZIP" Q
"RTN","OOPSGUI8",135,0)
 S RESULTS="VALID ZIP/STATE"
"RTN","OOPSGUI8",136,0)
 Q
"RTN","OOPSGUI8",137,0)
AMEND(RESULTS,OLDIEN) ; File new Amended Case
"RTN","OOPSGUI8",138,0)
 ;  Input:  OLDIEN - The ASISTS IEN for the case to have an
"RTN","OOPSGUI8",139,0)
 ;                   amendment created for.
"RTN","OOPSGUI8",140,0)
 ; Output: RESULTS - Single value with the new case number
"RTN","OOPSGUI8",141,0)
 ;
"RTN","OOPSGUI8",142,0)
 N DLAYGO
"RTN","OOPSGUI8",143,0)
 Q:$P(^OOPS(2260,OLDIEN,0),"^",6)'=0   ;defensive code, should not occur
"RTN","OOPSGUI8",144,0)
 S NUM=$P(^OOPS(2260,OLDIEN,0),U,1),SUF=$E(NUM,11)
"RTN","OOPSGUI8",145,0)
 S $P(^OOPS(2260,OLDIEN,0),U,6)=3
"RTN","OOPSGUI8",146,0)
 S NUM=$E(NUM,1,10)_$S(SUF="":"A",1:$CHAR($ASCII(SUF)+1))
"RTN","OOPSGUI8",147,0)
 K DD,DO
"RTN","OOPSGUI8",148,0)
 S DLAYGO=2260,DIC="^OOPS(2260,",DIC(0)="QLZ",X=NUM
"RTN","OOPSGUI8",149,0)
 D FILE^DICN G:Y=-1 DONE
"RTN","OOPSGUI8",150,0)
 S NEWIEN=+Y
"RTN","OOPSGUI8",151,0)
 MERGE ^OOPS(2260,NEWIEN)=^OOPS(2260,OLDIEN)
"RTN","OOPSGUI8",152,0)
 S OOP=^OOPS(2260,NEWIEN,0)
"RTN","OOPSGUI8",153,0)
 S $P(OOP,U,1)=NUM,$P(OOP,U,6)=0,$P(OOP,U,11)="",$P(OOP,U,19)=""
"RTN","OOPSGUI8",154,0)
 S ^OOPS(2260,NEWIEN,0)=OOP,$P(^OOPS(2260,NEWIEN,"CA"),U,6)=""
"RTN","OOPSGUI8",155,0)
 S DIK="^OOPS(2260,",DA=NEWIEN D IX^DIK
"RTN","OOPSGUI8",156,0)
 K ^OOPS(2260,NEWIEN,"2162ES")
"RTN","OOPSGUI8",157,0)
 K ^OOPS(2260,NEWIEN,"CA1ES")
"RTN","OOPSGUI8",158,0)
 K ^OOPS(2260,NEWIEN,"CA2ES")
"RTN","OOPSGUI8",159,0)
 N IEN,X,WCPDUZ,WOK
"RTN","OOPSGUI8",160,0)
 S WCPDUZ=$P($G(^OOPS(2260,NEWIEN,"WCES")),U)
"RTN","OOPSGUI8",161,0)
 I $G(WCPDUZ) S WOK=1,X=WCPDUZ,IEN=OLDIEN D WK^OOPSUTL1
"RTN","OOPSGUI8",162,0)
 K ^OOPS(2260,NEWIEN,"WCES")
"RTN","OOPSGUI8",163,0)
 S RESULTS=NUM
"RTN","OOPSGUI8",164,0)
DONE K DA,DIC,OLDIEN,NEWIEN,NUM,SUF,X,Y,DIK,OOP
"RTN","OOPSGUI8",165,0)
 Q
"RTN","OOPSGUI9")
0^4^B49823506
"RTN","OOPSGUI9",1,0)
OOPSGUI9 ;WIOFO/LLH-RPC routines ;10/24/01
"RTN","OOPSGUI9",2,0)
 ;;2.0;ASISTS;**6,7**;Jun 03, 2002
"RTN","OOPSGUI9",3,0)
 ;;
"RTN","OOPSGUI9",4,0)
VALIDATE(IEN,FORM,CALLER,VALID) ;
"RTN","OOPSGUI9",5,0)
 ; Input: IEN    = Internal Entry Number of entry in file 2260
"RTN","OOPSGUI9",6,0)
 ;        FORM   = 2162,CA1, or CA2
"RTN","OOPSGUI9",7,0)
 ;        CALLER = "E" employee
"RTN","OOPSGUI9",8,0)
 ;               = "S" supervisor
"RTN","OOPSGUI9",9,0)
 ;               = "O" safety officer
"RTN","OOPSGUI9",10,0)
 ;               = "W" worker's comp personnel
"RTN","OOPSGUI9",11,0)
 ;        WCEMP  = from menu if 1 - need to execute emp validation
"RTN","OOPSGUI9",12,0)
 ;        VALID  = RESERVED FOR OUTPUT DATA
"RTN","OOPSGUI9",13,0)
 ; Output:VALID  = 1 ALL REQUIRED DATA FOR FORM IS COMPLETE
"RTN","OOPSGUI9",14,0)
 ;               = 0 DATA IS MISSING
"RTN","OOPSGUI9",15,0)
 N LIST,FLD,CN,CNT,CHK
"RTN","OOPSGUI9",16,0)
 S (FLD,LIST)=""
"RTN","OOPSGUI9",17,0)
 S VALID=1,CHK=0
"RTN","OOPSGUI9",18,0)
 S CN=2   ; start CN in RESULTS array after index 1
"RTN","OOPSGUI9",19,0)
 ; removed code in line below that would also do set if the variable
"RTN","OOPSGUI9",20,0)
 ; WCEMP set.  WCEMP was an indicator that WC was completing CA1 for
"RTN","OOPSGUI9",21,0)
 ; employee.  May need to do something else.  10/24/01 llh
"RTN","OOPSGUI9",22,0)
 I CALLER="E" D EMP
"RTN","OOPSGUI9",23,0)
 I CALLER="S" D SUP
"RTN","OOPSGUI9",24,0)
 I CALLER="O" D SOF
"RTN","OOPSGUI9",25,0)
 I CALLER="W" D WCP
"RTN","OOPSGUI9",26,0)
 F CNT=1:1 S FLD=$P(LIST,",",CNT) Q:FLD=""  D
"RTN","OOPSGUI9",27,0)
 .N LOC,NODE,PCE,BADFLD,TEXT,WP
"RTN","OOPSGUI9",28,0)
 .S BADFLD=1,WP=0
"RTN","OOPSGUI9",29,0)
 .S LOC=$$GET1^DID(2260,FLD,"","GLOBAL SUBSCRIPT LOCATION")
"RTN","OOPSGUI9",30,0)
 .S NODE=$P(LOC,";")
"RTN","OOPSGUI9",31,0)
 .S PCE=$P(LOC,";",2)
"RTN","OOPSGUI9",32,0)
 .I PCE=0 D  ;Work processing field
"RTN","OOPSGUI9",33,0)
 ..I '$D(^OOPS(2260,IEN,NODE,1,0)) S (BADFLD,VALID)=0
"RTN","OOPSGUI9",34,0)
 ..S WP=1
"RTN","OOPSGUI9",35,0)
 ..Q
"RTN","OOPSGUI9",36,0)
 .I PCE'=0  I $P($G(^OOPS(2260,IEN,NODE)),U,PCE)="" S (BADFLD,VALID)=0
"RTN","OOPSGUI9",37,0)
 .I 'BADFLD D  ; Display error messaged about fields not filled.
"RTN","OOPSGUI9",38,0)
 ..I 'CHK S RESULTS(1)="The following fields must be completed before the  "_FORM_" can be signed." S CHK=1
"RTN","OOPSGUI9",39,0)
 ..I WP D  ;Is this a wp field and where to get title
"RTN","OOPSGUI9",40,0)
 ...N NODE
"RTN","OOPSGUI9",41,0)
 ...S NODE=2260_".0"_FLD
"RTN","OOPSGUI9",42,0)
 ...; patch 11 - fix bug on fld 40, node '= 2260.040, it's 2260.01
"RTN","OOPSGUI9",43,0)
 ...I FLD=40 S NODE="2260.01"
"RTN","OOPSGUI9",44,0)
 ...S TEXT=$$GET1^DID(NODE,".01","","LABEL")
"RTN","OOPSGUI9",45,0)
 ...Q
"RTN","OOPSGUI9",46,0)
 ..I 'WP S TEXT=$$GET1^DID(2260,FLD,"","LABEL")
"RTN","OOPSGUI9",47,0)
 ..; patch 2.7 if it's body part most affected, indicate the source form
"RTN","OOPSGUI9",48,0)
 ..I FLD=30 S TEXT=$G(TEXT)_" (FORM 2162)"
"RTN","OOPSGUI9",49,0)
 ..S RESULTS(CN)=TEXT,CN=CN+1
"RTN","OOPSGUI9",50,0)
 ..Q
"RTN","OOPSGUI9",51,0)
 .Q
"RTN","OOPSGUI9",52,0)
 ; removed !($G(WCEMP)) which indicates validation coming from WC 
"RTN","OOPSGUI9",53,0)
 ; completing the employee portion of the CA1.  May need to figure
"RTN","OOPSGUI9",54,0)
 ; something else out. 10/24/01 llh
"RTN","OOPSGUI9",55,0)
 I FORM="CA1"&(CALLER="E") D   ; fld 110 check on Emp CA1 only
"RTN","OOPSGUI9",56,0)
 . I $$GET1^DIQ(2260,IEN,110,"I")<($$GET1^DIQ(2260,IEN,4,"I")\1) S VALID=0 D
"RTN","OOPSGUI9",57,0)
 .. S RESULTS(CN)=$$GET1^DID(2260,110,"","LABEL")_" must be on or after the "_$$GET1^DID(2260,4,"","LABEL"),CN=CN+1
"RTN","OOPSGUI9",58,0)
DTCHK ; Date error checking that may be missed w/input transform
"RTN","OOPSGUI9",59,0)
 ; patch 11 - Additional error checking has been added for CA2 field 214
"RTN","OOPSGUI9",60,0)
 ; removed $G(WCEMP) from line below. same concern as above 10/24/01 llh
"RTN","OOPSGUI9",61,0)
 I FORM=2162!(CALLER="O") Q
"RTN","OOPSGUI9",62,0)
 K CNT,FLD,LIST
"RTN","OOPSGUI9",63,0)
 N DATE,DATE1,DATE2,TITLE,EMPDOB
"RTN","OOPSGUI9",64,0)
 ; patch 11 - need to make sure 215 not before 214 on employee part
"RTN","OOPSGUI9",65,0)
 I CALLER="E",FORM="CA2" D  Q
"RTN","OOPSGUI9",66,0)
 . S DATE1=$$GET1^DIQ(2260,IEN,215,"I")
"RTN","OOPSGUI9",67,0)
 . S DATE2=$$GET1^DIQ(2260,IEN,214,"I")
"RTN","OOPSGUI9",68,0)
 . S EMPDOB=$$GET1^DIQ(2260,IEN,6,"I")
"RTN","OOPSGUI9",69,0)
 . I $$FMDIFF^XLFDT(DATE2,EMPDOB,2)<0 S VALID=0 D
"RTN","OOPSGUI9",70,0)
 .. S RESULTS(CN)=$$GET1^DID(2260,214,"","LABEL")_" must be on or after the "_$$GET1^DID(2260,6,"","LABEL"),CN=CN+1
"RTN","OOPSGUI9",71,0)
 . I $$FMDIFF^XLFDT(DATE1,DATE2,2)<0 S VALID=0 D
"RTN","OOPSGUI9",72,0)
 .. S RESULTS(CN)=$$GET1^DID(2260,215,"","LABEL")_" must be on or after the "_$$GET1^DID(2260,214,"","LABEL"),CN=CN+1
"RTN","OOPSGUI9",73,0)
 ; End of checks from Employee CA2
"RTN","OOPSGUI9",74,0)
 I FORM="CA1" D
"RTN","OOPSGUI9",75,0)
 . S LIST="142,161,175"
"RTN","OOPSGUI9",76,0)
 . S (DATE,DATE1)=$$GET1^DIQ(2260,IEN,4,"I")
"RTN","OOPSGUI9",77,0)
 . S TITLE=$$GET1^DID(2260,4,"","LABEL")
"RTN","OOPSGUI9",78,0)
 I FORM="CA2" D
"RTN","OOPSGUI9",79,0)
 . S LIST="215,250,252,253,255"
"RTN","OOPSGUI9",80,0)
 . S (DATE,DATE1)=$$GET1^DIQ(2260,IEN,214,"I")
"RTN","OOPSGUI9",81,0)
 . S TITLE=$$GET1^DID(2260,214,"","LABEL")
"RTN","OOPSGUI9",82,0)
 F CNT=1:1 S FLD=$P(LIST,",",CNT) Q:FLD=""  D
"RTN","OOPSGUI9",83,0)
 . S DATE2=$$GET1^DIQ(2260,IEN,FLD,"I") I FLD'=142 S DATE2=DATE2\1,DATE1=DATE\1
"RTN","OOPSGUI9",84,0)
 . I $G(DATE2),DATE2<DATE1 D  S VALID=0
"RTN","OOPSGUI9",85,0)
 .. S RESULTS(CN)=$$GET1^DID(2260,FLD,"","LABEL")_" must be on or after the "_TITLE,CN=CN+1
"RTN","OOPSGUI9",86,0)
 ; Need specific check on DATE/TIME STOPPED WORK
"RTN","OOPSGUI9",87,0)
 I FORM="CA1" D
"RTN","OOPSGUI9",88,0)
 . S LIST="143,144,145",DATE=$$GET1^DIQ(2260,IEN,142,"I")
"RTN","OOPSGUI9",89,0)
 . S TITLE=$$GET1^DID(2260,142,"","LABEL")
"RTN","OOPSGUI9",90,0)
 I FORM="CA2" D
"RTN","OOPSGUI9",91,0)
 . S LIST="254,256",DATE=$$GET1^DIQ(2260,IEN,253,"I")
"RTN","OOPSGUI9",92,0)
 . S TITLE=$$GET1^DID(2260,253,"","LABEL")
"RTN","OOPSGUI9",93,0)
 F CNT=1:1 S FLD=$P(LIST,",",CNT) Q:FLD=""  D
"RTN","OOPSGUI9",94,0)
 . S DATE2=$$GET1^DIQ(2260,IEN,FLD,"I"),DATE1=DATE D
"RTN","OOPSGUI9",95,0)
 .. I FLD=143!(FLD=144) S DATE1=DATE\1,DATE2=DATE2\1
"RTN","OOPSGUI9",96,0)
 .. I (DATE1>DATE2),$G(DATE2) D  S VALID=0
"RTN","OOPSGUI9",97,0)
 ... S RESULTS(CN)=$$GET1^DID(2260,FLD,"","LABEL")_" must be on or after the "_TITLE,CN=CN+1
"RTN","OOPSGUI9",98,0)
 .. I '$G(DATE1),$G(DATE2) D  S VALID=0
"RTN","OOPSGUI9",99,0)
 ... S RESULTS(CN)=TITLE_" cannot be blank if date in "_$$GET1^DID(2260,FLD,"","LABEL"),CN=CN+1
"RTN","OOPSGUI9",100,0)
 Q
"RTN","OOPSGUI9",101,0)
EMP ; Address fields are now all pulled from the 2162A node
"RTN","OOPSGUI9",102,0)
 ; added fields 126 & 181,183-185 to lists below - patch 8
"RTN","OOPSGUI9",103,0)
 I FORM="CA1" S LIST="8,9,10,11,12,108,109,110,111,112,113,114,126,181,183,184,185"
"RTN","OOPSGUI9",104,0)
 ; added field 213 -  ASISTS V2.0
"RTN","OOPSGUI9",105,0)
 I FORM="CA2" S LIST="8,9,10,11,12,126,208,209,213,214,215,216,217"
"RTN","OOPSGUI9",106,0)
 Q
"RTN","OOPSGUI9",107,0)
SUP ;
"RTN","OOPSGUI9",108,0)
 N F165
"RTN","OOPSGUI9",109,0)
 I FORM="2162" D F2162 Q
"RTN","OOPSGUI9",110,0)
 S LIST="30,"
"RTN","OOPSGUI9",111,0)
 I FORM="CA1" D
"RTN","OOPSGUI9",112,0)
 . S LIST=LIST_"4,60,130,131,132,133,134,138,139,140,146,148,150,"
"RTN","OOPSGUI9",113,0)
 . S LIST=LIST_"162,163,172,173,174,175,176,177,178,179,"
"RTN","OOPSGUI9",114,0)
 . S LIST=LIST_"180,181,183,184,185,"
"RTN","OOPSGUI9",115,0)
 . I $$GET1^DIQ(2260,IEN,150,"I")="Y" S LIST=LIST_"151,152,153,154,155,"
"RTN","OOPSGUI9",116,0)
 . ; V2.0 added required fields missed in patch 8
"RTN","OOPSGUI9",117,0)
 . I $$GET1^DIQ(2260,IEN,146)="No" S LIST=LIST_"147,"
"RTN","OOPSGUI9",118,0)
 . I $$GET1^DIQ(2260,IEN,148)="Yes" S LIST=LIST_"149,"
"RTN","OOPSGUI9",119,0)
 . I $$GET1^DIQ(2260,IEN,163)="No" S LIST=LIST_"164,"
"RTN","OOPSGUI9",120,0)
 . S F165=$G(^OOPS(2260,IEN,"CA1K",0))
"RTN","OOPSGUI9",121,0)
 . I $G(F165)'="",($P(F165,U,4)'=0) S LIST=LIST_"165,"
"RTN","OOPSGUI9",122,0)
 I FORM="CA2" D
"RTN","OOPSGUI9",123,0)
 . S LIST=LIST_"230,231,232,233,234,237,238,239,240,241,"
"RTN","OOPSGUI9",124,0)
 . S LIST=LIST_"242,243,244,251,252,255,258,60,268,269,"
"RTN","OOPSGUI9",125,0)
 . ; below for ASISTS V2.0, needed for roll and scroll also
"RTN","OOPSGUI9",126,0)
 . ; added next line, need to get 3rd party if 258 = y
"RTN","OOPSGUI9",127,0)
 . I $$GET1^DIQ(2260,IEN,258,"I")="Y" S LIST=LIST_"259,260,261,262,263,"
"RTN","OOPSGUI9",128,0)
 ; V2.0 if field 60="other" (3)  then 61 required for both CA1 & CA2
"RTN","OOPSGUI9",129,0)
 I $$GET1^DIQ(2260,IEN,60,"I")=3 S LIST=LIST_"61,"
"RTN","OOPSGUI9",130,0)
 ; need to check Physician information for both CA1 and CA2
"RTN","OOPSGUI9",131,0)
 D PHYCHK
"RTN","OOPSGUI9",132,0)
 Q
"RTN","OOPSGUI9",133,0)
PHYCHK ; checks physician fields for appropriate form.  If Phy Name not
"RTN","OOPSGUI9",134,0)
 ; blank address fields required.  If Phy Name blank and data in any
"RTN","OOPSGUI9",135,0)
 ; address field then all fields required.
"RTN","OOPSGUI9",136,0)
 N CTR,FLD,PHY,PLIST,NBLK
"RTN","OOPSGUI9",137,0)
 S NBLK="",PHY=$S(FORM="CA1":156,FORM="CA2":245,1:"")
"RTN","OOPSGUI9",138,0)
 I 'PHY Q
"RTN","OOPSGUI9",139,0)
 S PLIST=$S(PHY=156:"157,158,159,160,182",PHY=245:"246,247,248,249,270",1:"")
"RTN","OOPSGUI9",140,0)
 I PLIST="" Q
"RTN","OOPSGUI9",141,0)
 I PHY=156 D  Q
"RTN","OOPSGUI9",142,0)
 . I $$GET1^DIQ(2260,IEN,156)'="" D  Q
"RTN","OOPSGUI9",143,0)
 .. F CTR=1:1 S FLD=$P(PLIST,",",CTR) Q:FLD=""  I $$GET1^DIQ(2260,IEN,FLD)="" S LIST=LIST_FLD_","
"RTN","OOPSGUI9",144,0)
 . I $$GET1^DIQ(2260,IEN,156)="" D  Q
"RTN","OOPSGUI9",145,0)
 .. F CTR=1:1 S FLD=$P(PLIST,",",CTR) Q:FLD=""  I $$GET1^DIQ(2260,IEN,FLD)'="" S NBLK=NBLK_FLD_","
"RTN","OOPSGUI9",146,0)
 .. I $G(NBLK)'="" S LIST=LIST_"156," F CTR=1:1 S FLD=$P(PLIST,",",CTR) Q:FLD=""  I '$F(NBLK,FLD) S LIST=LIST_FLD_","
"RTN","OOPSGUI9",147,0)
 I PHY=245 D  Q
"RTN","OOPSGUI9",148,0)
 . I $$GET1^DIQ(2260,IEN,245)'="" D  Q
"RTN","OOPSGUI9",149,0)
 .. F CTR=1:1 S FLD=$P(PLIST,",",CTR) Q:FLD=""  I $$GET1^DIQ(2260,IEN,FLD)="" S LIST=LIST_FLD_","
"RTN","OOPSGUI9",150,0)
 . I $$GET1^DIQ(2260,IEN,245)="" D
"RTN","OOPSGUI9",151,0)
 .. F CTR=1:1 S FLD=$P(PLIST,",",CTR) Q:FLD=""  I $$GET1^DIQ(2260,IEN,FLD)'="" S NBLK=NBLK_FLD_","
"RTN","OOPSGUI9",152,0)
 .. I $G(NBLK)'="" S LIST=LIST_"245," F CTR=1:1 S FLD=$P(PLIST,",",CTR) Q:FLD=""  I '$F(NBLK,FLD) S LIST=LIST_FLD_","
"RTN","OOPSGUI9",153,0)
 Q
"RTN","OOPSGUI9",154,0)
SOF ; the call to F2162 here is overkill.  All these fields should
"RTN","OOPSGUI9",155,0)
 ; already be completed, but just in case...
"RTN","OOPSGUI9",156,0)
 ; removed field 89 from required list for patch 7
"RTN","OOPSGUI9",157,0)
 I FORM="2162" D F2162 S LIST=LIST_",55,88"
"RTN","OOPSGUI9",158,0)
 ; code below obsolete with patch 7
"RTN","OOPSGUI9",159,0)
 ;I $$ISEMP^OOPSUTL4(IEN) D
"RTN","OOPSGUI9",160,0)
 ;.S LIST=LIST_",33"
"RTN","OOPSGUI9",161,0)
 ;.I $$GET1^DIQ(2260,IEN,33)="N" S LIST=LIST_",32"
"RTN","OOPSGUI9",162,0)
 Q
"RTN","OOPSGUI9",163,0)
WCP ; Get required fields for Workers Comp
"RTN","OOPSGUI9",164,0)
 I FORM="2162" D F2162 Q
"RTN","OOPSGUI9",165,0)
 S LIST="5,6,7,15,62,70,73,"
"RTN","OOPSGUI9",166,0)
 I FORM="CA1" D
"RTN","OOPSGUI9",167,0)
 . S LIST=LIST_"123,124,"
"RTN","OOPSGUI9",168,0)
 . ; flds 166 & 167 only required if personnel status = 1
"RTN","OOPSGUI9",169,0)
 . I $$GET1^DIQ(2260,IEN,2,"I")=1 S LIST=LIST_"166,167,"
"RTN","OOPSGUI9",170,0)
 I FORM="CA2" D
"RTN","OOPSGUI9",171,0)
 . S LIST=LIST_"226,227,"
"RTN","OOPSGUI9",172,0)
 D SUP
"RTN","OOPSGUI9",173,0)
 Q
"RTN","OOPSGUI9",174,0)
F2162 ; Set required fields for form 2162
"RTN","OOPSGUI9",175,0)
 N TYP,SAF,INCID
"RTN","OOPSGUI9",176,0)
 I FORM'="2162" Q
"RTN","OOPSGUI9",177,0)
 S LIST="26,27,28,29,30,31"
"RTN","OOPSGUI9",178,0)
 S TYP=$$GET1^DIQ(2260,IEN,"3:.01","E")
"RTN","OOPSGUI9",179,0)
 I "^Sharps Exposure^Hollow Bore Needlestick^Suture Needlestick^"[TYP D
"RTN","OOPSGUI9",180,0)
 . S LIST=LIST_",34,35,36,37,38,82"
"RTN","OOPSGUI9",181,0)
 I $$GET1^DIQ(2260,IEN,"38:2","I")="N" S LIST=LIST_",83"
"RTN","OOPSGUI9",182,0)
 I "^Exposure to Body Fluids/Splash^"[TYP D
"RTN","OOPSGUI9",183,0)
 . S LIST=LIST_",34,39,40,41"
"RTN","OOPSGUI9",184,0)
 S INCID=$$GET1^DIQ(2260,IEN,3,"I")
"RTN","OOPSGUI9",185,0)
 I (INCID<11)!(INCID>14) Q
"RTN","OOPSGUI9",186,0)
 I $$GET1^DIQ(2260,IEN,42.5,"I")="Y" S LIST=LIST_",42"
"RTN","OOPSGUI9",187,0)
 S SAF=$$GET1^DIQ(2260,IEN,43,"I")
"RTN","OOPSGUI9",188,0)
 S LIST=$S(SAF="Y":LIST_",84,87",SAF="N":LIST_",85",1:LIST)
"RTN","OOPSGUI9",189,0)
 S LIST=LIST_",47"
"RTN","OOPSGUI9",190,0)
 Q
"RTN","OOPSGUIC")
0^1^B58713036
"RTN","OOPSGUIC",1,0)
OOPSGUIC ;WIOFO/LLH-RPC routine for GET/SET CA7 ;04/22/04
"RTN","OOPSGUIC",2,0)
 ;;2.0;ASISTS;**8,7**;Jun 03, 2002
"RTN","OOPSGUIC",3,0)
 ;
"RTN","OOPSGUIC",4,0)
CA7LIST(RESULTS,PERSON,CALL) ; builds CA-7 selection list from existing
"RTN","OOPSGUIC",5,0)
 ;                         cases - not an add
"RTN","OOPSGUIC",6,0)
 ;
"RTN","OOPSGUIC",7,0)
 ;   Input:  PERSON  - person's SSN whether CALL="E" or "W"
"RTN","OOPSGUIC",8,0)
 ;              CALL - contains the calling menu and file number in the
"RTN","OOPSGUIC",9,0)
 ;                     format FILENUM^CALL.
"RTN","OOPSGUIC",10,0)
 ;  Output:  RESULTS - returns an array containing
"RTN","OOPSGUIC",11,0)
 ;                     CA7 case #^IEN^DATE OF INCIDENT
"RTN","OOPSGUIC",12,0)
 K ^TMP("CA7LIST",DUZ)
"RTN","OOPSGUIC",13,0)
 N ARR,CA7,CAIEN,CALLER,ESSN,FILE
"RTN","OOPSGUIC",14,0)
 S FILE=$P($G(CALL),U),CALLER=$P($G(CALL),U,2)
"RTN","OOPSGUIC",15,0)
 I $G(PERSON)=""!($G(CALL)="")!($G(FILE)="") D  Q
"RTN","OOPSGUIC",16,0)
 . S ^TMP("CA7LIST",DUZ,1)="Not enough info - can't process request"
"RTN","OOPSGUIC",17,0)
 S CAIEN=0,^TMP("CA7LIST",DUZ,1)="No CA-7's Selectable"
"RTN","OOPSGUIC",18,0)
 S ESSN=$$GET1^DIQ(200,DUZ,9)
"RTN","OOPSGUIC",19,0)
 I CALLER="E",ESSN'=PERSON D  Q
"RTN","OOPSGUIC",20,0)
 .S ^TMP("CA7LIST",DUZ,1)="User SSN, file SSN do not match-form aborted"
"RTN","OOPSGUIC",21,0)
 F  S CAIEN=$O(^OOPS(FILE,"SSN",PERSON,CAIEN)) Q:CAIEN=""  D
"RTN","OOPSGUIC",22,0)
 .;if from emp menu & signed by both, don't give access
"RTN","OOPSGUIC",23,0)
 .I CALLER="E",$P($G(^OOPS(FILE,CAIEN,"CA7S7")),U,2)'="",($P($G(^OOPS(FILE,CAIEN,"CA7S15")),U,2)'="") Q
"RTN","OOPSGUIC",24,0)
 .I CALLER="W",(ESSN=PERSON) Q
"RTN","OOPSGUIC",25,0)
 .S CA7=$$GET1^DIQ(FILE,CAIEN,.01),ARR(CA7)=CAIEN
"RTN","OOPSGUIC",26,0)
 ; drop thru here and
"RTN","OOPSGUIC",27,0)
SORT ; reverse the order
"RTN","OOPSGUIC",28,0)
 N CN,CA7,CAIEN,DOI,NM,SSN
"RTN","OOPSGUIC",29,0)
 S ^TMP("CA7LIST",DUZ,0)="",CN=1,CA7=""
"RTN","OOPSGUIC",30,0)
 I '$D(ARR) S ^TMP("CA7LIST",DUZ,1)="No CA7's Selectable"
"RTN","OOPSGUIC",31,0)
 F  S CA7=$O(ARR(CA7),-1) Q:CA7=""  D
"RTN","OOPSGUIC",32,0)
 .S CAIEN=ARR(CA7)
"RTN","OOPSGUIC",33,0)
 .S ASISTS=$$GET1^DIQ(2260,$$GET1^DIQ(FILE,CAIEN,.7,"I"),52,"I")
"RTN","OOPSGUIC",34,0)
 .S ASISTS="CA-"_$G(ASISTS)
"RTN","OOPSGUIC",35,0)
 .S NM=$E($$GET1^DIQ(FILE,CAIEN,.9),1,27)
"RTN","OOPSGUIC",36,0)
 .S DOI=$$GET1^DIQ(FILE,CAIEN,7)
"RTN","OOPSGUIC",37,0)
 .S SSN=$$GET1^DIQ(FILE,CAIEN,.8)
"RTN","OOPSGUIC",38,0)
 .S ^TMP("CA7LIST",DUZ,CN)=CA7_U_DOI_U_NM_U_ASISTS_U_CAIEN_U_SSN_$C(10)
"RTN","OOPSGUIC",39,0)
 .S CN=CN+1
"RTN","OOPSGUIC",40,0)
 ; then quit
"RTN","OOPSGUIC",41,0)
 S RESULTS=$NA(^TMP("CA7LIST",DUZ))
"RTN","OOPSGUIC",42,0)
 Q
"RTN","OOPSGUIC",43,0)
LISTCA(RESULTS,INPUT) ; returns a list of valid CA (1 or 2) claims that
"RTN","OOPSGUIC",44,0)
 ;                 can be selected to create a new CA-7
"RTN","OOPSGUIC",45,0)
 ;  Input:   INPUT - 3 pieces to input parameter
"RTN","OOPSGUIC",46,0)
 ;                   SSN^FILE^CALLER - CALLER contains either E
"RTN","OOPSGUIC",47,0)
 ;                   or W (menu called from).
"RTN","OOPSGUIC",48,0)
 ;                   FILE now only contains 2260 (for CA-1 or 2)
"RTN","OOPSGUIC",49,0)
 ; Output: RESULTS - contains a array of ASISTS Claims with the
"RTN","OOPSGUIC",50,0)
 ;                   claim number, name, and date of injury.  Other
"RTN","OOPSGUIC",51,0)
 ;                   default fields returned are, grade, step, pay amt,
"RTN","OOPSGUIC",52,0)
 ;                   pay period, FEGLI Code, and Health Ins.
"RTN","OOPSGUIC",53,0)
 ;
"RTN","OOPSGUIC",54,0)
 K ^TMP("LISTCA",DUZ)
"RTN","OOPSGUIC",55,0)
 N ARR,CAIEN,CALLER,CAIEN,CN,CNUM,DOI,FILE,INJ,NM,PAR,PDFLD,SSN
"RTN","OOPSGUIC",56,0)
 S PAR=$P($G(INPUT),U),FILE=$P($G(INPUT),U,2),CALLER=$P($G(INPUT),U,3)
"RTN","OOPSGUIC",57,0)
 I $G(PAR)=""!($G(FILE)="")!($G(CALLER)="") D  Q
"RTN","OOPSGUIC",58,0)
 .S ^TMP("LISTCA",DUZ,0)="Missing parameters - cannot continue"
"RTN","OOPSGUIC",59,0)
 S CAIEN=0
"RTN","OOPSGUIC",60,0)
 F  S CAIEN=$O(^OOPS(FILE,"SSN",PAR,CAIEN)) Q:CAIEN=""  D
"RTN","OOPSGUIC",61,0)
 .I '$$INCLUDE() Q
"RTN","OOPSGUIC",62,0)
 .I CALLER="E",($$GET1^DIQ(200,DUZ,9)'=PAR) Q
"RTN","OOPSGUIC",63,0)
 .I CALLER="W",($$GET1^DIQ(200,DUZ,9)=PAR) Q
"RTN","OOPSGUIC",64,0)
 .S CNUM=$$GET1^DIQ(FILE,CAIEN,.01),ARR(CNUM)=CAIEN
"RTN","OOPSGUIC",65,0)
 ; No cases to send back
"RTN","OOPSGUIC",66,0)
 I '$D(ARR) D  Q
"RTN","OOPSGUIC",67,0)
 .S ^TMP("LISTCA",DUZ,1)="No Cases Selectable"
"RTN","OOPSGUIC",68,0)
 .S RESULTS=$NA(^TMP("LISTCA",DUZ))
"RTN","OOPSGUIC",69,0)
 ; get reverse order
"RTN","OOPSGUIC",70,0)
 S CNUM="",CN=1
"RTN","OOPSGUIC",71,0)
 F  S CNUM=$O(ARR(CNUM),-1) Q:CNUM=""  D
"RTN","OOPSGUIC",72,0)
 .S CAIEN=ARR(CNUM)
"RTN","OOPSGUIC",73,0)
 .S NM=$$GET1^DIQ(FILE,CAIEN,1)
"RTN","OOPSGUIC",74,0)
 .S DOI=$$GET1^DIQ(FILE,CAIEN,4)
"RTN","OOPSGUIC",75,0)
 .S SSN=$TR($$GET1^DIQ(FILE,CAIEN,5),"-","")
"RTN","OOPSGUIC",76,0)
 .S GRD=$$GET1^DIQ(FILE,CAIEN,16)
"RTN","OOPSGUIC",77,0)
 .S STP=$$GET1^DIQ(FILE,CAIEN,17)
"RTN","OOPSGUIC",78,0)
 .S INJ=$$GET1^DIQ(FILE,CAIEN,52)
"RTN","OOPSGUIC",79,0)
 .S RET=$$GET1^DIQ(FILE,CAIEN,60)
"RTN","OOPSGUIC",80,0)
 .S PAY=$$GET1^DIQ(FILE,CAIEN,166)
"RTN","OOPSGUIC",81,0)
 .S PER=$$GET1^DIQ(FILE,CAIEN,167)
"RTN","OOPSGUIC",82,0)
 .; only need to do this 1 time, should never have but 1 different
"RTN","OOPSGUIC",83,0)
 .; person in this list, many claims but all for the same person
"RTN","OOPSGUIC",84,0)
 .I CN=1 S PDFLD=$$PDDEF()
"RTN","OOPSGUIC",85,0)
 .S STR=CNUM_U_DOI_U_NM_U_CAIEN_U_SSN_U_INJ_U_GRD_U_STP_U_PAY_U_PER
"RTN","OOPSGUIC",86,0)
 .S ^TMP("LISTCA",DUZ,CN)=STR_U_RET_U_PDFLD_U_DUZ_$C(10)
"RTN","OOPSGUIC",87,0)
 .S CN=CN+1
"RTN","OOPSGUIC",88,0)
 S RESULTS=$NA(^TMP("LISTCA",DUZ))
"RTN","OOPSGUIC",89,0)
 Q
"RTN","OOPSGUIC",90,0)
INCLUDE() ; checks to make sure ok to include claim in list
"RTN","OOPSGUIC",91,0)
 N CA7OK
"RTN","OOPSGUIC",92,0)
 S CA7OK=1
"RTN","OOPSGUIC",93,0)
 ; if claim not sent to DOL, can't pick
"RTN","OOPSGUIC",94,0)
 I $$GET1^DIQ(FILE,CAIEN,67)="" S CA7OK=0
"RTN","OOPSGUIC",95,0)
 ; if deleted, replaced by amendment - can't pick
"RTN","OOPSGUIC",96,0)
 I $$GET1^DIQ(FILE,CAIEN,51,"I")>1 S CA7OK=0
"RTN","OOPSGUIC",97,0)
 Q (CA7OK)
"RTN","OOPSGUIC",98,0)
PDDEF() ; get Fegli Code and Health insurance fields from paid
"RTN","OOPSGUIC",99,0)
 N CNT,FEG,FEG1,INS,INS1,PAID
"RTN","OOPSGUIC",100,0)
 S (FEG,FEG1,INS,INS1)=""
"RTN","OOPSGUIC",101,0)
 D FIND^DIC(450,,"@;226EI;231I","MPSC",SSN,10,"SSN")
"RTN","OOPSGUIC",102,0)
 I $G(DIERR) D CLEAN^DILF Q FEG_U_INS
"RTN","OOPSGUIC",103,0)
 I $P(^TMP("DILIST",$J,0),U)=0 Q FEG_U_INS
"RTN","OOPSGUIC",104,0)
 S PAID=$G(^TMP("DILIST",$J,1,0)),FEG=$P(PAID,U,3)
"RTN","OOPSGUIC",105,0)
 ; if A0 - ineligible, B0 - waived therefore No 
"RTN","OOPSGUIC",106,0)
 I FEG="A0"!(FEG="B0") S FEG1="N;"
"RTN","OOPSGUIC",107,0)
 ; if C0 - only Basic
"RTN","OOPSGUIC",108,0)
 I FEG="C0" S FEG1="Y;"
"RTN","OOPSGUIC",109,0)
 ; has Fegli, but not basic, additional, get additional code
"RTN","OOPSGUIC",110,0)
 I $G(FEG1)="",($L($P(PAID,U,2),"Basic +")>1) S FEG1="Y;"_FEG
"RTN","OOPSGUIC",111,0)
 ; now deal with insurance
"RTN","OOPSGUIC",112,0)
 S INS=$P(PAID,U,4)
"RTN","OOPSGUIC",113,0)
 ; if INS = 000, 001, 002, 003 they don't have insurance
"RTN","OOPSGUIC",114,0)
 I (INS?.N)&(+INS<4) S INS1="N;"
"RTN","OOPSGUIC",115,0)
 ; otherwise they do, get the code
"RTN","OOPSGUIC",116,0)
 I $G(INS1)="" S INS1="Y;"_INS
"RTN","OOPSGUIC",117,0)
 Q INS1_U_FEG1
"RTN","OOPSGUIC",118,0)
MULTIPLE(RESULTS,INPUT,DATA) ; retrieve data from multiple
"RTN","OOPSGUIC",119,0)
 ; NOTE:  When filing into subrecord, the entire subrecord is deleted
"RTN","OOPSGUIC",120,0)
 ;        then rebuilt.  Also, the field number for the subrecord
"RTN","OOPSGUIC",121,0)
 ;        must be passed with the data.
"RTN","OOPSGUIC",122,0)
 ;        WORD PROCESSING fields CANNOT file using this code
"RTN","OOPSGUIC",123,0)
 ;   Input:   INPUT - in the format FILE^FIELD^IEN
"RTN","OOPSGUIC",124,0)
 ;             DATA - array of data in the format
"RTN","OOPSGUIC",125,0)
 ;                    DATA(SIEN)=data where data = P1^P2^P3 etc, where
"RTN","OOPSGUIC",126,0)
 ;                    P1 = subfield #;data
"RTN","OOPSGUIC",127,0)
 ;                    DATA="" must be true for a GET.
"RTN","OOPSGUIC",128,0)
 ;  Output: RESULTS - data from all records in the multiple will
"RTN","OOPSGUIC",129,0)
 ;                     be returned.  it will be saved in a pieced
"RTN","OOPSGUIC",130,0)
 ;                     string.
"RTN","OOPSGUIC",131,0)
 N ACTION,ARR,IEN,FIELD,FILE,ROOT,SAVEDIK,SPEC,SUB
"RTN","OOPSGUIC",132,0)
 S FILE=$P($G(INPUT),U),FIELD=$P($G(INPUT),U,2),IEN=$P($G(INPUT),U,3)
"RTN","OOPSGUIC",133,0)
 S ACTION="" I $D(DATA)>1 S ACTION=1
"RTN","OOPSGUIC",134,0)
 S RESULTS(0)="Record Accessed, no data"
"RTN","OOPSGUIC",135,0)
 I $G(IEN)=""!($G(FILE)="")!($G(FIELD)="") D  Q
"RTN","OOPSGUIC",136,0)
 . S RESULTS(0)="Invalid parameters cannot continue"
"RTN","OOPSGUIC",137,0)
 S ROOT=$$ROOT^DILFD(FILE,0,"GL")
"RTN","OOPSGUIC",138,0)
 S SPEC=+$$GET1^DID(FILE,FIELD,"","SPECIFIER")
"RTN","OOPSGUIC",139,0)
 S SUB=$$GET1^DID(FILE,FIELD,"","GLOBAL SUBSCRIPT LOCATION")
"RTN","OOPSGUIC",140,0)
 I '$$GET1^DID(FILE,FIELD,"","MULTIPLE-VALUED"),'$G(SPEC) D  Q
"RTN","OOPSGUIC",141,0)
 . S RESULTS(1)="Field in not a multiple, cannot continue"
"RTN","OOPSGUIC",142,0)
 ; now go get data from subfile
"RTN","OOPSGUIC",143,0)
 S SAVEDIK=ROOT_IEN_","_$C(34)_$P(SUB,";")_$C(34)_","
"RTN","OOPSGUIC",144,0)
 I 'ACTION D GETD
"RTN","OOPSGUIC",145,0)
 I ACTION D KILLD,SETD
"RTN","OOPSGUIC",146,0)
 Q
"RTN","OOPSGUIC",147,0)
GETD ; get the data
"RTN","OOPSGUIC",148,0)
 N CNT,DATA,FLDA,FLDS,IENS,SIEN,SFLD,SREC,TYPE
"RTN","OOPSGUIC",149,0)
 S CNT=0,IENS=IEN_","
"RTN","OOPSGUIC",150,0)
 S FLDA=FIELD_"*"
"RTN","OOPSGUIC",151,0)
 ; hate to hardwire, but need data back as entered, not canonical
"RTN","OOPSGUIC",152,0)
 I FILE=2262.03,FIELD=15 D FLD15 Q
"RTN","OOPSGUIC",153,0)
 D GETS^DIQ(FILE,IENS,FLDA,,"ARR")
"RTN","OOPSGUIC",154,0)
 I $D(ARR) S SIEN="",RESULTS(0)="" D
"RTN","OOPSGUIC",155,0)
 .F  S SIEN=$O(ARR(SPEC,SIEN)) Q:SIEN=""  D
"RTN","OOPSGUIC",156,0)
 ..S SFLD="",SREC=$P(SIEN,",")
"RTN","OOPSGUIC",157,0)
 ..F  S SFLD=$O(ARR(SPEC,SIEN,SFLD)) Q:SFLD=""  D
"RTN","OOPSGUIC",158,0)
 ...S DATA=ARR(SPEC,SIEN,SFLD)_U
"RTN","OOPSGUIC",159,0)
 ...S:$D(RESULTS(CNT))=0 RESULTS(CNT)=""
"RTN","OOPSGUIC",160,0)
 ...S RESULTS(CNT)=RESULTS(CNT)_DATA
"RTN","OOPSGUIC",161,0)
 ..S CNT=CNT+1
"RTN","OOPSGUIC",162,0)
 Q
"RTN","OOPSGUIC",163,0)
KILLD ; first kill all records in subfile, then rebuild
"RTN","OOPSGUIC",164,0)
 N DA,DIK,NODE
"RTN","OOPSGUIC",165,0)
 S NODE=$P(SUB,";"),DA=0,DA(1)=IEN,DIK=SAVEDIK
"RTN","OOPSGUIC",166,0)
 F  S DA=$O(@(ROOT_"DA(1),NODE,DA)")) Q:(+DA'>0)  D ^DIK
"RTN","OOPSGUIC",167,0)
 Q
"RTN","OOPSGUIC",168,0)
SETD ; subrecord cleaned out, now rebuild
"RTN","OOPSGUIC",169,0)
 N BAD,CN,DR,DIE,DA,DLAYGO,I,NUM,STR,DIC,TYPE
"RTN","OOPSGUIC",170,0)
 K DR
"RTN","OOPSGUIC",171,0)
 S RESULTS(0)="Filing successful"
"RTN","OOPSGUIC",172,0)
 S CN=0,DLAYGO=FILE,DA(1)=IEN,DIC=SAVEDIK,DIC(0)="L"
"RTN","OOPSGUIC",173,0)
 F  S CN=$O(DATA(CN)) Q:CN'>0  S X="",BAD=0 D
"RTN","OOPSGUIC",174,0)
 .S STR=DATA(CN),NUM=$L(DATA(CN),U),DIC("DR")=""
"RTN","OOPSGUIC",175,0)
 .F I=1:1:NUM S STR1=$P($G(STR),U,I) D:('BAD)
"RTN","OOPSGUIC",176,0)
 ..I $P(STR1,";")=.01,$P(STR1,";")="",$P(STR1,";",2)="" S BAD=1 Q
"RTN","OOPSGUIC",177,0)
 ..I $P(STR1,";")=.01 D
"RTN","OOPSGUIC",178,0)
 ...S TYPE=$$GET1^DID(SPEC,.01,"","TYPE")
"RTN","OOPSGUIC",179,0)
 ...I TYPE="DATE/TIME" S X=$$FMTE^XLFDT($P(STR1,";",2),2)
"RTN","OOPSGUIC",180,0)
 ...E  S X=$P(STR1,";",2)
"RTN","OOPSGUIC",181,0)
 ..S DIC("DR")=DIC("DR")_$P(STR1,";")_"///"_$P(STR1,";",2)_";"
"RTN","OOPSGUIC",182,0)
 .D MFILE
"RTN","OOPSGUIC",183,0)
 Q
"RTN","OOPSGUIC",184,0)
MFILE ; file the multiple
"RTN","OOPSGUIC",185,0)
 N PCE,PCE1,TMP
"RTN","OOPSGUIC",186,0)
 I X="" S RESULTS(0)=".01 field missing - could not file" Q
"RTN","OOPSGUIC",187,0)
 I $G(BAD) S RESULTS(0)="Problems Filing subrecord" Q
"RTN","OOPSGUIC",188,0)
 I $L(DIC("DR"))>240 D
"RTN","OOPSGUIC",189,0)
 .S PCE=$L(DIC("DR"),";"),TMP=DIC("DR"),PCE1=$P(PCE/2,".")
"RTN","OOPSGUIC",190,0)
 .S DIC("DR")=$P(TMP,";",1,PCE1)
"RTN","OOPSGUIC",191,0)
 .K DD,DO D FILE^DICN I Y'>0 S BAD=1
"RTN","OOPSGUIC",192,0)
 .S DIC("DR")=$P(TMP,";",(PCE1+1),PCE)
"RTN","OOPSGUIC",193,0)
 K DD,DO D FILE^DICN I Y'>0 S BAD=1
"RTN","OOPSGUIC",194,0)
 I BAD S RESULTS(0)="Problems filing subrecord"
"RTN","OOPSGUIC",195,0)
 Q
"RTN","OOPSGUIC",196,0)
OSHA300(RESULTS,STA,DATA) ; Files data into subrecord 2262.315
"RTN","OOPSGUIC",197,0)
 ;  Input - STA is the station number subrecord IEN
"RTN","OOPSGUIC",198,0)
 ;         DATA is an number subscripted array containing the records
"RTN","OOPSGUIC",199,0)
 ;              that contain the Emp Numbers and hours worked in the
"RTN","OOPSGUIC",200,0)
 ;              OSHA MONTH/YEAR subrecord.
"RTN","OOPSGUIC",201,0)
 ; Output - RESULTS indicating the success of the filing.
"RTN","OOPSGUIC",202,0)
 ;
"RTN","OOPSGUIC",203,0)
 N CNT,IENS,FILE,OSHAFDA,LV1,LV2,PAR,REC,STR
"RTN","OOPSGUIC",204,0)
 S CNT=1,FILE=2262.315
"RTN","OOPSGUIC",205,0)
 S PAR="^OOPS(2262,0)",PAR=$Q(@PAR),PAR=$Q(@PAR)
"RTN","OOPSGUIC",206,0)
 S LV1=$P(PAR,",",2),LV2=$P(PAR,",",3)
"RTN","OOPSGUIC",207,0)
 S RESULTS=""
"RTN","OOPSGUIC",208,0)
 I $D(DATA)<10 S RESULTS="NO DATA TO FILE, CANNOT CONTINUE" Q
"RTN","OOPSGUIC",209,0)
 I '$G(STA) S RESULTS="NOT ENOUGH PARAMETERS, COULDN'T FILE" Q
"RTN","OOPSGUIC",210,0)
 I '$D(^OOPS(2262,LV1,LV2,STA)) D  Q
"RTN","OOPSGUIC",211,0)
 .S RESULTS="NO STATION RECORD, COULDN'T FILE"
"RTN","OOPSGUIC",212,0)
 K ^OOPS(2262,LV1,LV2,STA,2)
"RTN","OOPSGUIC",213,0)
 S REC=0 F  S REC=$O(DATA(REC)) Q:REC=""  D
"RTN","OOPSGUIC",214,0)
 .S IENS="?+"_CNT_","_STA_","_LV1_","
"RTN","OOPSGUIC",215,0)
 .S STR=DATA(REC)
"RTN","OOPSGUIC",216,0)
 .S OSHAFDA(FILE,IENS,.01)=$P($P(STR,U,1),";",2)
"RTN","OOPSGUIC",217,0)
 .S OSHAFDA(FILE,IENS,1)=$P($P(STR,U,2),";",2)
"RTN","OOPSGUIC",218,0)
 .S OSHAFDA(FILE,IENS,2)=$P($P(STR,U,3),";",2)
"RTN","OOPSGUIC",219,0)
 .S CNT=CNT+1
"RTN","OOPSGUIC",220,0)
 D UPDATE^DIE("E","OSHAFDA","IENS","MSG")
"RTN","OOPSGUIC",221,0)
 I '$D(MSG) S RESULTS="Filing Successful"
"RTN","OOPSGUIC",222,0)
 K MSG,STR,Y,X,%DT
"RTN","OOPSGUIC",223,0)
 Q
"RTN","OOPSGUIC",224,0)
FLD15 ; retrieves OSHA 300A Summary data from file 2262
"RTN","OOPSGUIC",225,0)
 N CNT,DATE,LV1,LV2,PAR,REC
"RTN","OOPSGUIC",226,0)
 S CNT=0,PAR="^OOPS(2262,0)",PAR=$Q(@PAR),PAR=$Q(@PAR)
"RTN","OOPSGUIC",227,0)
 S LV1=$P(PAR,",",2),LV2=$P(PAR,",",3),IENS=$P(IEN,",",1),REC=0
"RTN","OOPSGUIC",228,0)
 F  S REC=$O(^OOPS(2262,LV1,LV2,IENS,2,REC)) Q:REC'>0  D
"RTN","OOPSGUIC",229,0)
 .S STR=$G(^OOPS(2262,LV1,LV2,IENS,2,REC,0))
"RTN","OOPSGUIC",230,0)
 .S Y=$P(STR,U,1) D DD^%DT
"RTN","OOPSGUIC",231,0)
 .S RESULTS(CNT)=Y_U_$P(STR,U,2,3)
"RTN","OOPSGUIC",232,0)
 .S CNT=CNT+1
"RTN","OOPSGUIC",233,0)
 Q
"RTN","OOPSGUIF")
0^11^B24447364
"RTN","OOPSGUIF",1,0)
OOPSGUIF ;WIOFO/LLH-RPC routine for OSHA Log ;11/5/01
"RTN","OOPSGUIF",2,0)
 ;;2.0;ASISTS;**6,7**;Jun 03, 2002
"RTN","OOPSGUIF",3,0)
 ;
"RTN","OOPSGUIF",4,0)
OSHA(RESULTS,INPUT,CALL) ; get the data
"RTN","OOPSGUIF",5,0)
 ;   Input:  INPUT - contains 4 values, the START AND END DATE, 
"RTN","OOPSGUIF",6,0)
 ;                   STATION, and INCLUDE NAME ON REPORT.  The Date of
"RTN","OOPSGUIF",7,0)
 ;                   Occ (fld #4) is used to in/exclude claims from the
"RTN","OOPSGUIF",8,0)
 ;                   report.  If Include name = Y, then names are
"RTN","OOPSGUIF",9,0)
 ;                   printed, else they will not,and if Station='ALL'
"RTN","OOPSGUIF",10,0)
 ;                   then all claims are included, if not 'All', then
"RTN","OOPSGUIF",11,0)
 ;                   only 1 station is included.
"RTN","OOPSGUIF",12,0)
 ;            CALL - Contains the calling menu.  If caller = "U"nion
"RTN","OOPSGUIF",13,0)
 ;                   name is excluded from printing.
"RTN","OOPSGUIF",14,0)
 ; Output: RESULTS - the results array passes data back to the client.
"RTN","OOPSGUIF",15,0)
 N CN,DA,IEN,INCNA,OCC,OOPS,PERSON,SDATE,STDT,STA,ENDDT,EDATE,X,Y
"RTN","OOPSGUIF",16,0)
 N GONE,LOST,DOI,CAX,FILL,TYPE
"RTN","OOPSGUIF",17,0)
 K ^TMP($J,"OSHA")
"RTN","OOPSGUIF",18,0)
 S CN=1,RESULTS(0)="Processing..."
"RTN","OOPSGUIF",19,0)
 S STDT=$P($G(INPUT),U),ENDDT=$P($G(INPUT),U,2)
"RTN","OOPSGUIF",20,0)
 S STA=$P($G(INPUT),U,3)
"RTN","OOPSGUIF",21,0)
 S INCNA=$P($G(INPUT),U,4)
"RTN","OOPSGUIF",22,0)
 I (STDT="")!(ENDDT="")!(STA="")!(INCNA="") D  Q
"RTN","OOPSGUIF",23,0)
 . S RESULTS(0)="Input parameters missing, cannot run report." Q
"RTN","OOPSGUIF",24,0)
 S (SDATE,EDATE)=""
"RTN","OOPSGUIF",25,0)
 S X=STDT D ^%DT S SDATE=Y
"RTN","OOPSGUIF",26,0)
 S X=ENDDT D ^%DT S EDATE=Y
"RTN","OOPSGUIF",27,0)
 ; SDATE made last time in day prior so start date correct
"RTN","OOPSGUIF",28,0)
 S SDATE=(SDATE-1)_".9999",EDATE=EDATE_".9999"
"RTN","OOPSGUIF",29,0)
 S LP="",IEN=""
"RTN","OOPSGUIF",30,0)
 F LP=SDATE:0 S LP=$O(^OOPS(2260,"AD",LP)) Q:(LP'>0)!(LP>EDATE)  D
"RTN","OOPSGUIF",31,0)
 . F  S IEN=$O(^OOPS(2260,"AD",LP,IEN)) Q:IEN'>0  D
"RTN","OOPSGUIF",32,0)
 .. I $$GET1^DIQ(2260,IEN,88,"I")'="Y" Q
"RTN","OOPSGUIF",33,0)
 .. I $$GET1^DIQ(2260,IEN,51,"I")>1 Q
"RTN","OOPSGUIF",34,0)
 .. S STATION=$P(^OOPS(2260,IEN,"2162A"),U,9)
"RTN","OOPSGUIF",35,0)
 .. I $G(STA)'="A",(STATION'=STA) Q
"RTN","OOPSGUIF",36,0)
 .. K OOPS,ARR S DIC="^OOPS(2260,"
"RTN","OOPSGUIF",37,0)
 .. S DR=".01;1;3;4;15;30;33;52;63;86;89"
"RTN","OOPSGUIF",38,0)
 .. S DA=IEN,DIQ="OOPS",DIQ(0)="IE" D EN^DIQ1
"RTN","OOPSGUIF",39,0)
 .. S CAX=OOPS(2260,IEN,52,"I")
"RTN","OOPSGUIF",40,0)
 .. S DOI=OOPS(2260,IEN,4,"I"),DOI=$P($$FMTE^XLFDT(DOI,2),"@")
"RTN","OOPSGUIF",41,0)
 .. ; PER A. BIERENBAUM, GET OCC DESC 5/13/02
"RTN","OOPSGUIF",42,0)
 .. S OCC=$$OCCDESC(IEN)
"RTN","OOPSGUIF",43,0)
 .. ; S OCC=OOPS(2260,IEN,63,"E")_$E(OOPS(2260,IEN,15,"E"),1,4)
"RTN","OOPSGUIF",44,0)
 .. S GONE=OOPS(2260,IEN,89,"I"),GONE=$S(GONE="Y":"X",1:"")
"RTN","OOPSGUIF",45,0)
 .. S LOST=OOPS(2260,IEN,33,"I")
"RTN","OOPSGUIF",46,0)
 .. S LOST=$S(LOST="Y":"X^",LOST="N":"^X",1:"^X")
"RTN","OOPSGUIF",47,0)
 .. S TYPE=OOPS(2260,IEN,3,"I")
"RTN","OOPSGUIF",48,0)
 .. I TYPE>10&(TYPE<15) S PERSON="Privacy Case"
"RTN","OOPSGUIF",49,0)
 .. S PERSON=OOPS(2260,IEN,1,"E") I CALL="Union"!(INCNA="N") S PERSON=""
"RTN","OOPSGUIF",50,0)
 .. S ARR=OOPS(2260,IEN,.01,"E")_U_DOI_U
"RTN","OOPSGUIF",51,0)
 .. S ARR=ARR_PERSON_U_OCC_U_$E(OOPS(2260,IEN,86,"E"),1,35)_U
"RTN","OOPSGUIF",52,0)
 .. S ARR=ARR_OOPS(2260,IEN,3,"E")_U_OOPS(2260,IEN,30,"E")_U
"RTN","OOPSGUIF",53,0)
 .. S FILL="" I CAX=2 S FILL="^^^"
"RTN","OOPSGUIF",54,0)
 .. S ARR=ARR_FILL_GONE_U_LOST
"RTN","OOPSGUIF",55,0)
 .. S ^TMP($J,"OSHA",CN)=ARR,CN=CN+1
"RTN","OOPSGUIF",56,0)
 S RESULTS=$NA(^TMP($J,"OSHA"))
"RTN","OOPSGUIF",57,0)
 Q
"RTN","OOPSGUIF",58,0)
NSTICK(RESULTS,INPUT,CALL) ; NeedleStick Log get data logic
"RTN","OOPSGUIF",59,0)
 ;   Input:  INPUT - contains 4 values, the START DATE, END DATE, 
"RTN","OOPSGUIF",60,0)
 ;                   STATION, and INCLUDE NAME ON REPORT.  The Date of
"RTN","OOPSGUIF",61,0)
 ;                   Occurrence (field #4) will be used to include/
"RTN","OOPSGUIF",62,0)
 ;                   exclude claims from the report.  If the Include
"RTN","OOPSGUIF",63,0)
 ;                   name is = Y then the names will be printed, if no
"RTN","OOPSGUIF",64,0)
 ;                   they will not, and if the Station = 'ALL' then any
"RTN","OOPSGUIF",65,0)
 ;                   claim will be include, if not 'All', but the
"RTN","OOPSGUIF",66,0)
 ;                   station number then only 1 station is included.
"RTN","OOPSGUIF",67,0)
 ;            CALL - Contains the calling menu.  This will be used
"RTN","OOPSGUIF",68,0)
 ;                   to exclude the name from printing if the caller
"RTN","OOPSGUIF",69,0)
 ;                   is 'U'nion.
"RTN","OOPSGUIF",70,0)
 ; Output: RESULTS - the results array passes the data back to the
"RTN","OOPSGUIF",71,0)
 ;                   client.
"RTN","OOPSGUIF",72,0)
 N CN,DA,IEN,INCNA,OCC,PERSON,SDATE,STDT,STA,ENDDT,EDATE,X,Y
"RTN","OOPSGUIF",73,0)
 N LOST,DOI,OOPS,TYPE
"RTN","OOPSGUIF",74,0)
 K ^TMP($J,"NS")
"RTN","OOPSGUIF",75,0)
 S CN=1,RESULTS(0)="Processing..."
"RTN","OOPSGUIF",76,0)
 S STDT=$P($G(INPUT),U),ENDDT=$P($G(INPUT),U,2)
"RTN","OOPSGUIF",77,0)
 S STA=$P($G(INPUT),U,3)
"RTN","OOPSGUIF",78,0)
 S INCNA=$P($G(INPUT),U,4)
"RTN","OOPSGUIF",79,0)
 I (STDT="")!(ENDDT="")!(STA="")!(INCNA="") D  Q
"RTN","OOPSGUIF",80,0)
 . S RESULTS(0)="Input parameters missing, cannot run report." Q
"RTN","OOPSGUIF",81,0)
 S (SDATE,EDATE)=""
"RTN","OOPSGUIF",82,0)
 S X=STDT D ^%DT S SDATE=Y
"RTN","OOPSGUIF",83,0)
 S X=ENDDT D ^%DT S EDATE=Y
"RTN","OOPSGUIF",84,0)
 ; SDATE made last time in day prior so start date correct
"RTN","OOPSGUIF",85,0)
 S SDATE=(SDATE-1)_".9999",EDATE=EDATE_".9999"
"RTN","OOPSGUIF",86,0)
 S LP="",IEN=""
"RTN","OOPSGUIF",87,0)
 F LP=SDATE:0 S LP=$O(^OOPS(2260,"AD",LP)) Q:(LP'>0)!(LP>EDATE)  D
"RTN","OOPSGUIF",88,0)
 . F  S IEN=$O(^OOPS(2260,"AD",LP,IEN)) Q:IEN'>0  D
"RTN","OOPSGUIF",89,0)
 .. ; exclude deleted, replaced by amendment cases
"RTN","OOPSGUIF",90,0)
 .. I $$GET1^DIQ(2260,IEN,51,"I")>1 Q
"RTN","OOPSGUIF",91,0)
 .. S STATION=$P(^OOPS(2260,IEN,"2162A"),U,9)
"RTN","OOPSGUIF",92,0)
 .. I $G(STA)'="A",(STATION'=STA) Q
"RTN","OOPSGUIF",93,0)
 .. ; if Type Incident not = Hollow Bore Needlestick, Sharps Exposure,
"RTN","OOPSGUIF",94,0)
 .. ; Exposure to Body Fluids/Splash, Suture Needlestick don't include
"RTN","OOPSGUIF",95,0)
 .. S TYPE=$$GET1^DIQ(2260,IEN,3,"I")
"RTN","OOPSGUIF",96,0)
 .. I TYPE<11!(TYPE>14) Q
"RTN","OOPSGUIF",97,0)
 .. ; now get the data and put in array.
"RTN","OOPSGUIF",98,0)
 .. K OOPS,ARR S DIC="^OOPS(2260,"
"RTN","OOPSGUIF",99,0)
 .. S DR=".01;1;3;4;15;14;29;30;33;37;38;51;52;82;86;108"
"RTN","OOPSGUIF",100,0)
 .. S DA=IEN,DIQ="OOPS",DIQ(0)="IE" D EN^DIQ1
"RTN","OOPSGUIF",101,0)
 .. S DOI=OOPS(2260,IEN,4,"E")
"RTN","OOPSGUIF",102,0)
 .. ; PER A. BIERENBAUM, USE OCC DESC 5/13/02
"RTN","OOPSGUIF",103,0)
 .. S OCC=$$OCCDESC(IEN)
"RTN","OOPSGUIF",104,0)
 .. ; S OCC=$E(OOPS(2260,IEN,15,"E"),1,4)
"RTN","OOPSGUIF",105,0)
 .. ; patch 7 remove lost time
"RTN","OOPSGUIF",106,0)
 .. ; S LOST=OOPS(2260,IEN,33,"E")
"RTN","OOPSGUIF",107,0)
 .. S INJILL=OOPS(2260,IEN,52,"I")
"RTN","OOPSGUIF",108,0)
 .. S INJILL=$S(INJILL=1:"Injury",INJILL=2:"Illness",1:"")
"RTN","OOPSGUIF",109,0)
 .. ; patch 7 - only print privacy case in name field - all cases
"RTN","OOPSGUIF",110,0)
 .. S PERSON="Privacy Case"
"RTN","OOPSGUIF",111,0)
 .. ; S PERSON=OOPS(2260,IEN,1,"E")
"RTN","OOPSGUIF",112,0)
 .. I CALL="Union"!(INCNA="N") S PERSON=""
"RTN","OOPSGUIF",113,0)
 .. S ARR=IEN_U_OOPS(2260,IEN,.01,"E")_U_DOI_U_PERSON_U_INJILL_U
"RTN","OOPSGUIF",114,0)
 .. S ARR=ARR_OOPS(2260,IEN,51,"E")_U_OCC_U_$E(OOPS(2260,DA,14,"E"),1,4)
"RTN","OOPSGUIF",115,0)
 .. S ARR=ARR_U_OOPS(2260,IEN,86,"E")_U
"RTN","OOPSGUIF",116,0)
 .. S ARR=ARR_OOPS(2260,IEN,3,"E")_U_OOPS(2260,IEN,108,"E")
"RTN","OOPSGUIF",117,0)
 .. S ARR=ARR_U_OOPS(2260,IEN,30,"E")_U_$E(OOPS(2260,IEN,29,"E"),1,45)_U
"RTN","OOPSGUIF",118,0)
 .. S ARR=ARR_$E(OOPS(2260,IEN,37,"E"),1,50)_U
"RTN","OOPSGUIF",119,0)
 .. S ARR=ARR_$E(OOPS(2260,IEN,38,"E"),1,50)_U_OOPS(2260,IEN,82,"E")
"RTN","OOPSGUIF",120,0)
 .. S ^TMP($J,"NS",CN)=ARR K ARR
"RTN","OOPSGUIF",121,0)
 .. S CN=CN+1
"RTN","OOPSGUIF",122,0)
 S RESULTS=$NA(^TMP($J,"NS"))
"RTN","OOPSGUIF",123,0)
 Q
"RTN","OOPSGUIF",124,0)
OCCDESC(IEN) ;Get Occupation Description
"RTN","OOPSGUIF",125,0)
 ;
"RTN","OOPSGUIF",126,0)
 ;  Input:  IEN - IEN of the ASISTS Case number to get the Occ Desc
"RTN","OOPSGUIF",127,0)
 ; Output:      - will be the Occupation description
"RTN","OOPSGUIF",128,0)
 ;
"RTN","OOPSGUIF",129,0)
 N INC,FLD
"RTN","OOPSGUIF",130,0)
 S INC=$$GET1^DIQ(2260,IEN,52,"I")
"RTN","OOPSGUIF",131,0)
 S FLD=$S(INC=1:111,INC=2:208,1:"")
"RTN","OOPSGUIF",132,0)
 I 'FLD Q ""
"RTN","OOPSGUIF",133,0)
 Q $$GET1^DIQ(2260,IEN,FLD)
"RTN","OOPSGUIR")
0^14^B42553043
"RTN","OOPSGUIR",1,0)
OOPSGUIR ;WIOFO/LLH-RPC routine for misc reports ;03/16/04
"RTN","OOPSGUIR",2,0)
 ;;2.0;ASISTS;**8,7**;Jun 03, 2002
"RTN","OOPSGUIR",3,0)
 ;
"RTN","OOPSGUIR",4,0)
ENT(RESULTS,INPUT,CALL) ; get the data for the report
"RTN","OOPSGUIR",5,0)
 ;   Input:  INPUT - contains 3 values, the START AND END DATE, 
"RTN","OOPSGUIR",6,0)
 ;                   STATION. The Date of Occ (fld #4) is used to 
"RTN","OOPSGUIR",7,0)
 ;                   in/exclude claims from the report. If Station='ALL'
"RTN","OOPSGUIR",8,0)
 ;                   then all claims are included, if not 'All', then
"RTN","OOPSGUIR",9,0)
 ;                   only 1 station is included.
"RTN","OOPSGUIR",10,0)
 ;            CALL - contains the report call which will invoke
"RTN","OOPSGUIR",11,0)
 ;                   the appropriate M call 
"RTN","OOPSGUIR",12,0)
 ; Output: RESULTS - the results array passes data back to the client.
"RTN","OOPSGUIR",13,0)
 N CAX,FI,LP,MENU,SDATE,STDT,STA,STATION,ENDDT,EDATE,TAG,X,Y,%DT
"RTN","OOPSGUIR",14,0)
 S RESULTS(0)="Processing..."
"RTN","OOPSGUIR",15,0)
 S STDT=$P($G(INPUT),U),ENDDT=$P($G(INPUT),U,2)
"RTN","OOPSGUIR",16,0)
 S STA=$P($G(INPUT),U,3),TAG=CALL
"RTN","OOPSGUIR",17,0)
 I (STDT="")!(ENDDT="")!(STA="")!(TAG="") D  Q
"RTN","OOPSGUIR",18,0)
 . S RESULTS(0)="Input parameters missing, cannot run report." Q
"RTN","OOPSGUIR",19,0)
 K ^TMP($J,TAG)
"RTN","OOPSGUIR",20,0)
 S (SDATE,EDATE,MENU)=""
"RTN","OOPSGUIR",21,0)
 S X=STDT D ^%DT S SDATE=Y
"RTN","OOPSGUIR",22,0)
 S X=ENDDT D ^%DT S EDATE=Y
"RTN","OOPSGUIR",23,0)
 ; SDATE made last time in day prior so start date correct
"RTN","OOPSGUIR",24,0)
 I TAG="LOG300U" S TAG="LOG300",MENU="U"
"RTN","OOPSGUIR",25,0)
 S SDATE=(SDATE-1)+.9999,EDATE=EDATE_".9999"
"RTN","OOPSGUIR",26,0)
 D @TAG
"RTN","OOPSGUIR",27,0)
 Q
"RTN","OOPSGUIR",28,0)
FLD174 ; report compiles filing instruction result counts
"RTN","OOPSGUIR",29,0)
 N ARR,CODE,CN,LP,IEN,I
"RTN","OOPSGUIR",30,0)
 S LP="",IEN="",CODE=$P($G(^DD(2260,174,0)),U,3)
"RTN","OOPSGUIR",31,0)
 F I=1:1 S LP=$P(CODE,";",I) Q:$G(LP)=""  D
"RTN","OOPSGUIR",32,0)
 . I $P(LP,":",2)'="" S ARR(LP)=0
"RTN","OOPSGUIR",33,0)
 S ARR(I_":No Data Entered")=0
"RTN","OOPSGUIR",34,0)
 F LP=SDATE:0 S LP=$O(^OOPS(2260,"AD",LP)) Q:(LP'>0)!(LP>EDATE)  D
"RTN","OOPSGUIR",35,0)
 . F  S IEN=$O(^OOPS(2260,"AD",LP,IEN)) Q:IEN'>0  D
"RTN","OOPSGUIR",36,0)
 .. I $$GET1^DIQ(2260,IEN,51,"I")>1 Q      ;only allow open/closed cases
"RTN","OOPSGUIR",37,0)
 .. S CAX=$$GET1^DIQ(2260,IEN,52,"I")
"RTN","OOPSGUIR",38,0)
 .. I CAX'=1 Q                             ;only allow CA1's
"RTN","OOPSGUIR",39,0)
 .. S STATION=$P(^OOPS(2260,IEN,"2162A"),U,9)
"RTN","OOPSGUIR",40,0)
 .. I $G(STA)'="A",(STATION'=STA) Q        ;get correct station
"RTN","OOPSGUIR",41,0)
 .. ; set filing instruction to int + : + ext for correct order
"RTN","OOPSGUIR",42,0)
 .. S FI=$$GET1^DIQ(2260,IEN,174,"I")_":"_$$GET1^DIQ(2260,IEN,174)
"RTN","OOPSGUIR",43,0)
 .. I $$GET1^DIQ(2260,IEN,174)="" S FI=I_":No Data Entered"
"RTN","OOPSGUIR",44,0)
 .. S ARR(FI)=ARR(FI)+1
"RTN","OOPSGUIR",45,0)
 .. Q
"RTN","OOPSGUIR",46,0)
 S CN=0,FI=""
"RTN","OOPSGUIR",47,0)
 F  S FI=$O(ARR(FI)) Q:FI=""  D
"RTN","OOPSGUIR",48,0)
 . S CN=$P(FI,":"),^TMP($J,TAG,CN)=$P(FI,":",2)_U_ARR(FI)
"RTN","OOPSGUIR",49,0)
 S RESULTS=$NA(^TMP($J,TAG))
"RTN","OOPSGUIR",50,0)
 Q
"RTN","OOPSGUIR",51,0)
SUM300A ; Summary of Work-related injuries and illness report
"RTN","OOPSGUIR",52,0)
 N CN,EMP,FAC,HRS,STATE,STR
"RTN","OOPSGUIR",53,0)
 N COLG,COLH,COLI,COLJ,COLK,COLL,COLM
"RTN","OOPSGUIR",54,0)
 S (COLG,COLH,COLI,COLJ,COLK,COLL)=0
"RTN","OOPSGUIR",55,0)
 S (COLM(1),COLM(2),COLM(3),COLM(4),COLM(5),COLM(6))=0
"RTN","OOPSGUIR",56,0)
 S ^TMP($J,TAG,0)="No worksheet data for this station."
"RTN","OOPSGUIR",57,0)
 S FAC=$$GET1^DIQ(4,STA,.01,"E")
"RTN","OOPSGUIR",58,0)
 K ARR D STATINFO^OOPSGUI3(.ARR,STA) I $D(ARR) D
"RTN","OOPSGUIR",59,0)
 .S STATE=$P($G(ARR(0)),U,3)
"RTN","OOPSGUIR",60,0)
 .I $G(STATE)'="" D
"RTN","OOPSGUIR",61,0)
 ..S STATE=$O(^DIC(5,"B",STATE,""))
"RTN","OOPSGUIR",62,0)
 ..S $P(ARR(0),U,3)=$P(^DIC(5,STATE,0),U,2)
"RTN","OOPSGUIR",63,0)
 .S ^TMP($J,TAG,0)=FAC_U_ARR(0)
"RTN","OOPSGUIR",64,0)
 K ARR D SITEPGET^OOPSGUI6(.ARR,"OSHA300") I $D(ARR) D 
"RTN","OOPSGUIR",65,0)
 .S CN=0 F  S CN=$O(ARR(CN)) Q:CN=""  D
"RTN","OOPSGUIR",66,0)
 ..I $P(ARR(CN),U,11)'=STA Q
"RTN","OOPSGUIR",67,0)
 ..S STR=$P($P(ARR(CN),U,1)," = ",2)
"RTN","OOPSGUIR",68,0)
 ..S STR=$P(ARR(CN),U,3)_U_$P(ARR(CN),U,4)_U_$P(ARR(CN),U,6)_U
"RTN","OOPSGUIR",69,0)
 ..S STR=STR_$P(ARR(CN),U,7)_U_$P(ARR(CN),U,8)
"RTN","OOPSGUIR",70,0)
 ..S ^TMP($J,TAG,0)=^TMP($J,TAG,0)_U_STR
"RTN","OOPSGUIR",71,0)
 K ARR,DATA S DATA=""
"RTN","OOPSGUIR",72,0)
 D EMPHRS,DETAIL
"RTN","OOPSGUIR",73,0)
 Q
"RTN","OOPSGUIR",74,0)
IRWSHT ; Incidence Rates Worksheet Report
"RTN","OOPSGUIR",75,0)
 N COLHI,EMP,HRS
"RTN","OOPSGUIR",76,0)
 S ^TMP($J,TAG,1)="No Worksheet Data for this Station"
"RTN","OOPSGUIR",77,0)
 S COLHI=0
"RTN","OOPSGUIR",78,0)
 K ARR,DATA S DATA=""
"RTN","OOPSGUIR",79,0)
 D EMPHRS,DETAIL
"RTN","OOPSGUIR",80,0)
 Q
"RTN","OOPSGUIR",81,0)
DETAIL ; now get employee information
"RTN","OOPSGUIR",82,0)
LOG300 ; entry point for the OSHA 300 LOG
"RTN","OOPSGUIR",83,0)
 N CN,CASES,DOI,FLD,IEN,INC,STATION,TYPE
"RTN","OOPSGUIR",84,0)
 S DOI=SDATE,CASES=0,CN=1
"RTN","OOPSGUIR",85,0)
 F  S DOI=$O(^OOPS(2260,"AF",DOI)) Q:(DOI>EDATE)!(DOI="")  S IEN=0 D
"RTN","OOPSGUIR",86,0)
 .F  S IEN=$O(^OOPS(2260,"AF",DOI,"Y",IEN)) Q:IEN=""  D
"RTN","OOPSGUIR",87,0)
 ..S STATION=$P(^OOPS(2260,IEN,"2162A"),U,9) I $G(STATION)'=STA Q
"RTN","OOPSGUIR",88,0)
 ..I $P(^OOPS(2260,IEN,0),U,6)>1 Q
"RTN","OOPSGUIR",89,0)
 ..S CASES=CASES+1
"RTN","OOPSGUIR",90,0)
 ..I TAG="IRWSHT" D
"RTN","OOPSGUIR",91,0)
 ...I $D(^OOPS(2260,IEN,"OUTC","AC","A","J"))!$D(^OOPS(2260,IEN,"OUTC","AC","A","A")) S COLHI=COLHI+1
"RTN","OOPSGUIR",92,0)
 ..I TAG="SUM300A" D FLD95
"RTN","OOPSGUIR",93,0)
 ..I TAG="LOG300" D FLD95 D
"RTN","OOPSGUIR",94,0)
 ...S ARR(1)=$$GET1^DIQ(2260,IEN,.01),ARR(2)=$$GET1^DIQ(2260,IEN,1)
"RTN","OOPSGUIR",95,0)
 ...I $$GET1^DIQ(2260,IEN,337,"I")="Y" S ARR(2)="Privacy Case"
"RTN","OOPSGUIR",96,0)
 ...S TYPE=$$GET1^DIQ(2260,IEN,3,"I")
"RTN","OOPSGUIR",97,0)
 ...I TYPE>10&(TYPE<15) S ARR(2)="Privacy Case"
"RTN","OOPSGUIR",98,0)
 ...I MENU="U" S ARR(2)=""
"RTN","OOPSGUIR",99,0)
 ...S INC=$$GET1^DIQ(2260,IEN,52,"I"),FLD=$S(INC=1:111,INC=2:208,1:"")
"RTN","OOPSGUIR",100,0)
 ...S ARR(3)=$$GET1^DIQ(2260,IEN,FLD)
"RTN","OOPSGUIR",101,0)
 ...S ARR(4)=$P($$FMTE^XLFDT(($$GET1^DIQ(2260,IEN,4,"I")),2),"@")
"RTN","OOPSGUIR",102,0)
 ...S ARR(5)=$$GET1^DIQ(2260,IEN,27,"E")
"RTN","OOPSGUIR",103,0)
 ...S ARR(6)=$$GET1^DIQ(2260,IEN,3)_";"_$$GET1^DIQ(2260,IEN,30)
"RTN","OOPSGUIR",104,0)
 ...S DATA=ARR(1)_U_ARR(2)_U_ARR(3)_U_ARR(4)_U_ARR(5)_U_ARR(6)_U_ARR(7)_U
"RTN","OOPSGUIR",105,0)
 ...S DATA=DATA_ARR(8)_U_ARR(9)_U_ARR(10)
"RTN","OOPSGUIR",106,0)
 ...S ^TMP($J,TAG,CN)=DATA,CN=CN+1
"RTN","OOPSGUIR",107,0)
 I TAG="IRWSHT" S ^TMP($J,TAG,1)=CASES_U_COLHI_U_HRS
"RTN","OOPSGUIR",108,0)
 I TAG="SUM300A" D
"RTN","OOPSGUIR",109,0)
 .S DATA=CASES_U_EMP_U_HRS_U_COLG_U_COLH_U_COLI_U_COLJ_U_COLK_U_COLL_U
"RTN","OOPSGUIR",110,0)
 .S DATA=DATA_COLM(1)_U_COLM(2)_U_COLM(3)_U_COLM(4)_U_COLM(5)_U_COLM(6)
"RTN","OOPSGUIR",111,0)
 .S ^TMP($J,TAG,1)=DATA
"RTN","OOPSGUIR",112,0)
 S RESULTS=$NA(^TMP($J,TAG))
"RTN","OOPSGUIR",113,0)
 K ARR,DATA
"RTN","OOPSGUIR",114,0)
 Q
"RTN","OOPSGUIR",115,0)
FLD95 ; use OUTC subrecord to retrieve data
"RTN","OOPSGUIR",116,0)
 N AVAIL,ED,SD,S0,INC,ILL,DAYA,DAYJ,DAYS,IEN95,OC,OUTC,S95
"RTN","OOPSGUIR",117,0)
 S S0=$G(^OOPS(2260,IEN,0)),INC=$P(S0,U,7)
"RTN","OOPSGUIR",118,0)
 S ILL=$P($G(^OOPS(2260,IEN,"2162B")),U,15)
"RTN","OOPSGUIR",119,0)
 ; add days away & job transfer up only to 180 for log, 4 300A get all
"RTN","OOPSGUIR",120,0)
 S (DAYA,DAYJ,TAWAY)=0,IEN95=0
"RTN","OOPSGUIR",121,0)
 F  S IEN95=$O(^OOPS(2260,IEN,"OUTC",IEN95)) Q:IEN95=""  D
"RTN","OOPSGUIR",122,0)
 .S S95=$G(^OOPS(2260,IEN,"OUTC",IEN95,0))
"RTN","OOPSGUIR",123,0)
 .S SD=$P(S95,U,1),ED=$P(S95,U,2),OC=$P(S95,U,3),DAYS=0
"RTN","OOPSGUIR",124,0)
 .I $P(S95,U,11)="D" Q      ; entry is deleted
"RTN","OOPSGUIR",125,0)
 .I $G(OC)'="" S OUTC(OC)=""
"RTN","OOPSGUIR",126,0)
 .I EDATE<SD Q
"RTN","OOPSGUIR",127,0)
 .I $G(ED)=""!($G(ED)>EDATE) S DAYS=$$FMDIFF^XLFDT(EDATE,SD,1)+1
"RTN","OOPSGUIR",128,0)
 .I '$G(DAYS) S DAYS=$S(OC="A":$P(S95,U,4),OC="J":$P(S95,U,5),1:0)
"RTN","OOPSGUIR",129,0)
 .I DAYA+DAYJ>180 Q
"RTN","OOPSGUIR",130,0)
 .S AVAIL=0
"RTN","OOPSGUIR",131,0)
 .I DAYS>180 S AVAIL=180
"RTN","OOPSGUIR",132,0)
 .I (DAYS<180) D
"RTN","OOPSGUIR",133,0)
 ..I (DAYS+DAYA+DAYJ)<180 S AVAIL=DAYS
"RTN","OOPSGUIR",134,0)
 ..I (DAYS+DAYA+DAYJ)>180 S AVAIL=(180-(DAYA+DAYJ))
"RTN","OOPSGUIR",135,0)
 .I $G(OC)="A" S DAYA=DAYA+AVAIL
"RTN","OOPSGUIR",136,0)
 .I $G(OC)="J" S DAYJ=DAYJ+AVAIL
"RTN","OOPSGUIR",137,0)
 I TAG="SUM300A" D
"RTN","OOPSGUIR",138,0)
 .S:$G(INC)=1 COLM(1)=COLM(1)+1
"RTN","OOPSGUIR",139,0)
 .I INC=2 D
"RTN","OOPSGUIR",140,0)
 ..I $G(ILL) S COLM(ILL)=COLM(ILL)+1
"RTN","OOPSGUIR",141,0)
 ..I '$G(ILL) S COLM(6)=COLM(6)+1
"RTN","OOPSGUIR",142,0)
 .S COLK=COLK+DAYA,COLL=COLL+DAYJ
"RTN","OOPSGUIR",143,0)
 .I $D(OUTC("D")) S COLG=COLG+1 Q
"RTN","OOPSGUIR",144,0)
 .I $D(OUTC("A")) S COLH=COLH+1 Q
"RTN","OOPSGUIR",145,0)
 .I $D(OUTC("J")) S COLI=COLI+1 Q
"RTN","OOPSGUIR",146,0)
 .I $D(OUTC("O")) S COLJ=COLJ+1 Q
"RTN","OOPSGUIR",147,0)
 I TAG="LOG300" D
"RTN","OOPSGUIR",148,0)
 .S ARR(7)="",ARR(10)="",(ARR(8),ARR(9))=0
"RTN","OOPSGUIR",149,0)
 .I INC=1 S ARR(10)=1
"RTN","OOPSGUIR",150,0)
 .I INC=2 S:$G(ILL) ARR(10)=ILL S:'$G(ILL) ARR(10)=6
"RTN","OOPSGUIR",151,0)
 .S ARR(8)=DAYA,ARR(9)=DAYJ
"RTN","OOPSGUIR",152,0)
 .I $D(OUTC("D")) S ARR(7)="D" S (ARR(8),ARR(9))=0 Q
"RTN","OOPSGUIR",153,0)
 .I $D(OUTC("A")) S ARR(7)="A" Q
"RTN","OOPSGUIR",154,0)
 .I $D(OUTC("J")) S ARR(7)="J" Q
"RTN","OOPSGUIR",155,0)
 .I $D(OUTC("O")) S ARR(7)="O" Q
"RTN","OOPSGUIR",156,0)
 Q
"RTN","OOPSGUIR",157,0)
EMPHRS ; get Total Num Employees and Hours worked
"RTN","OOPSGUIR",158,0)
 N CASES,ED,LV1,LV2,MON,OK,PAR,SD,SIEN,STR,WS,X,X1,X2
"RTN","OOPSGUIR",159,0)
 S (EMP,HRS,WS)=0
"RTN","OOPSGUIR",160,0)
 S PAR="^OOPS(2262,0)",PAR=$Q(@PAR),PAR=$Q(@PAR)
"RTN","OOPSGUIR",161,0)
 S LV1=$P(PAR,",",2),LV2=$P(PAR,",",3)
"RTN","OOPSGUIR",162,0)
 S SIEN=$O(^OOPS(2262,LV1,LV2,"B",STA,-1)) Q:SIEN=""
"RTN","OOPSGUIR",163,0)
 ; get month range to make sure all emp numbers and hours are entered
"RTN","OOPSGUIR",164,0)
 S SDATE=SDATE\1
"RTN","OOPSGUIR",165,0)
 S SD=$E(SDATE,1,5)_"00"_$E(SDATE,8,$L(SDATE))
"RTN","OOPSGUIR",166,0)
 S ED=$E(EDATE,1,5)_"00"_$E(EDATE,8,$L(EDATE))
"RTN","OOPSGUIR",167,0)
 S X1=$E(ED,1,3),X2=$E(SD,1,3)
"RTN","OOPSGUIR",168,0)
 I X1>X2 D
"RTN","OOPSGUIR",169,0)
 .S OK=0,X=(X1-X2) S:X>1 OK=(X-1)*12
"RTN","OOPSGUIR",170,0)
 .S OK=OK+(($E(ED,4,5)-$E(SD,4,5))+1)+$E(SD,4,5)
"RTN","OOPSGUIR",171,0)
 I X1=X2 S OK=($E(ED,4,5)-$E(SD,4,5))+1
"RTN","OOPSGUIR",172,0)
 S MON=OK
"RTN","OOPSGUIR",173,0)
 F  S WS=$O(^OOPS(2262,LV1,LV2,SIEN,2,WS)) Q:(WS'>0)  D
"RTN","OOPSGUIR",174,0)
 .S STR=^OOPS(2262,LV1,LV2,SIEN,2,WS,0)
"RTN","OOPSGUIR",175,0)
 .I ($P(STR,U)'<SD)&($P(STR,U)'>ED) D
"RTN","OOPSGUIR",176,0)
 ..I ($P(STR,U,2)="")!($P(STR,U,3)="") Q
"RTN","OOPSGUIR",177,0)
 ..S EMP=EMP+$P(STR,U,2),HRS=HRS+$P(STR,U,3),OK=OK-1
"RTN","OOPSGUIR",178,0)
 I '$G(OK) S EMP=EMP/MON
"RTN","OOPSGUIR",179,0)
 I $G(OK) S (EMP,HRS)="INCOMPLETE DATA"
"RTN","OOPSGUIR",180,0)
 Q
"RTN","OOPSGUIT")
0^12^B78883010
"RTN","OOPSGUIT",1,0)
OOPSGUIT ;WIOFO/LLH-RPC Rtn for Type of Incident rpt ;11/5/01 
"RTN","OOPSGUIT",2,0)
 ;;2.0;ASISTS;**4,7**;Jun 03, 2002
"RTN","OOPSGUIT",3,0)
 ;
"RTN","OOPSGUIT",4,0)
ENT(RESULTS,TRPT,CSTAT,STDT,ENDDT,LTNTT,STAT,PSTAT) ;
"RTN","OOPSGUIT",5,0)
 N DATA,CNT,CS,CS1,EDATE,OOPS,LOST,LP,SDATE,TOT,RPTTY
"RTN","OOPSGUIT",6,0)
 N STATION,LOSTTIME,NODE,OOPDA,PER,X,Y
"RTN","OOPSGUIT",7,0)
 S RPTTY=$$REPORT(),CS=$S(CSTAT="O":0,CSTAT="C":1,1:"")
"RTN","OOPSGUIT",8,0)
 S LOST=$S(LTNTT="L":"Y",1:"")
"RTN","OOPSGUIT",9,0)
 S (SDATE,EDATE)=""
"RTN","OOPSGUIT",10,0)
 S X=STDT D ^%DT S SDATE=Y
"RTN","OOPSGUIT",11,0)
 S X=ENDDT D ^%DT S EDATE=Y
"RTN","OOPSGUIT",12,0)
 S SDATE=(SDATE-1)_".9999",EDATE=EDATE_".9999"
"RTN","OOPSGUIT",13,0)
 S LP="",OOPDA=""
"RTN","OOPSGUIT",14,0)
 F LP=SDATE:0 S LP=$O(^OOPS(2260,"AD",LP)) Q:(LP'>0)!(LP>EDATE)  D
"RTN","OOPSGUIT",15,0)
 .F  S OOPDA=$O(^OOPS(2260,"AD",LP,OOPDA)) Q:OOPDA'>0  D
"RTN","OOPSGUIT",16,0)
 ..S OOPS(0)=$G(^OOPS(2260,OOPDA,0))
"RTN","OOPSGUIT",17,0)
 ..S CS1=$P(OOPS(0),U,6)
"RTN","OOPSGUIT",18,0)
 ..I $G(CS1)>1 Q               ; only open & closed cases
"RTN","OOPSGUIT",19,0)
 ..I (CS'=""),(CS'=CS1) Q      ; if 'All cases, case status must match
"RTN","OOPSGUIT",20,0)
 ..S PER=$$GET1^DIQ(2260,OOPDA,2,"I")
"RTN","OOPSGUIT",21,0)
 ..I (+PSTAT)&(PSTAT'[(PER_"^")) Q
"RTN","OOPSGUIT",22,0)
 ..S STATION=$$GET1^DIQ(2260,OOPDA,13,"I")
"RTN","OOPSGUIT",23,0)
 ..I STAT'="A",(STATION'=STAT) Q
"RTN","OOPSGUIT",24,0)
 ..; patch 7 - changed lost time logic
"RTN","OOPSGUIT",25,0)
 ..;S LOSTTIME=$$GET1^DIQ(2260,OOPDA,33,"I")
"RTN","OOPSGUIT",26,0)
 ..S LOSTTIME=""
"RTN","OOPSGUIT",27,0)
 ..I $O(^OOPS(2260,OOPDA,"OUTC","AC","A","A","")) S LOSTTIME="Y"
"RTN","OOPSGUIT",28,0)
 ..I LOST="Y",(LOSTTIME'="Y") Q
"RTN","OOPSGUIT",29,0)
 ..I RPTTY=3 D
"RTN","OOPSGUIT",30,0)
 ...N INC
"RTN","OOPSGUIT",31,0)
 ...S INC=$$GET1^DIQ(2260,OOPDA,RPTTY_":.01")
"RTN","OOPSGUIT",32,0)
 ...I $G(INC)="" S INC="Unknown"
"RTN","OOPSGUIT",33,0)
 ...S:$D(DATA(INC))=0 DATA(INC)=0 S DATA(INC)=DATA(INC)+1
"RTN","OOPSGUIT",34,0)
 ..I RPTTY=15 D
"RTN","OOPSGUIT",35,0)
 ...N DIC,DR,DA,DIQ,FLD,NAME,OCC,IEN450,X,Y
"RTN","OOPSGUIT",36,0)
 ...S NAME=$$GET1^DIQ(2260,OOPDA,1),FLD=16
"RTN","OOPSGUIT",37,0)
 ...S DIC="^PRSPC(",DIC(0)="Z",X=NAME D ^DIC
"RTN","OOPSGUIT",38,0)
 ...I Y>0 D
"RTN","OOPSGUIT",39,0)
 ....K DIQ S DR=FLD,DA=+Y,IEN450=+Y,DIQ="OOPS",DIQ(0)="IE"
"RTN","OOPSGUIT",40,0)
 ....D EN^DIQ1 K DIQ
"RTN","OOPSGUIT",41,0)
 ...S OCC=$$GET1^DIQ(2260,OOPDA,15,"I")
"RTN","OOPSGUIT",42,0)
 ...I $G(IEN450),$G(OCC)'="",(OCC=$E($G(OOPS(450,IEN450,FLD,"I")),1,4)) D
"RTN","OOPSGUIT",43,0)
 ....S OCC=OCC_" - "_OOPS(450,IEN450,FLD,"E")
"RTN","OOPSGUIT",44,0)
 ...I $G(OCC)="" S OCC="Unknown"
"RTN","OOPSGUIT",45,0)
 ...S:$D(DATA(OCC))=0 DATA(OCC)=0 S DATA(OCC)=DATA(OCC)+1
"RTN","OOPSGUIT",46,0)
 ..I RPTTY=29 D
"RTN","OOPSGUIT",47,0)
 ...N CHAR
"RTN","OOPSGUIT",48,0)
 ...S CHAR=$$GET1^DIQ(2260,OOPDA,RPTTY_":.01")
"RTN","OOPSGUIT",49,0)
 ...I $G(CHAR)="" S CHAR="Unknown"
"RTN","OOPSGUIT",50,0)
 ...S:$D(DATA(CHAR))=0 DATA(CHAR)=0 S DATA(CHAR)=DATA(CHAR)+1
"RTN","OOPSGUIT",51,0)
 ..I RPTTY=86 D
"RTN","OOPSGUIT",52,0)
 ...N SERV
"RTN","OOPSGUIT",53,0)
 ...S SERV=$$GET1^DIQ(2260,OOPDA,RPTTY_":.01")
"RTN","OOPSGUIT",54,0)
 ...I $G(SERV)="" S SERV="Unknown"
"RTN","OOPSGUIT",55,0)
 ...S:$D(DATA(SERV))=0 DATA(SERV)=0 S DATA(SERV)=DATA(SERV)+1
"RTN","OOPSGUIT",56,0)
 ..I RPTTY=30 D
"RTN","OOPSGUIT",57,0)
 ...N BODY
"RTN","OOPSGUIT",58,0)
 ...S BODY=$$GET1^DIQ(2260,OOPDA,RPTTY_":1")
"RTN","OOPSGUIT",59,0)
 ...F I=1:1 Q:$P($T(BODY+I),";",3)="Q"  I $P($T(BODY+I),";",4)[(U_BODY_U) S BODY=$P($T(BODY+I),";",3) Q
"RTN","OOPSGUIT",60,0)
 ...I $G(BODY)="" S BODY="Unknown"
"RTN","OOPSGUIT",61,0)
 ...S:$D(DATA(BODY))=0 DATA(BODY)=0 S DATA(BODY)=DATA(BODY)+1
"RTN","OOPSGUIT",62,0)
 ..I RPTTY=999 D
"RTN","OOPSGUIT",63,0)
 ...N DOI,DOW
"RTN","OOPSGUIT",64,0)
 ...S DOI=$$GET1^DIQ(2260,OOPDA,4,"I"),DOW=$$DOW^XLFDT(DOI)
"RTN","OOPSGUIT",65,0)
 ...S DOW=$S(DOW="Friday":"6Friday",DOW="Monday":"2Monday",DOW="Saturday":"7Saturday",DOW="Sunday":"1Sunday",DOW="Thursday":"5Thursday",DOW="Tuesday":"3Tuesday",DOW="Wednesday":"4Wednesday",1:"Unk")
"RTN","OOPSGUIT",66,0)
 ...I $G(DOI)="" S DOI="Unknown"
"RTN","OOPSGUIT",67,0)
 ...S:$D(DATA(DOW))=0 DATA(DOW)=0 S DATA(DOW)=DATA(DOW)+1
"RTN","OOPSGUIT",68,0)
 ..I RPTTY=9999 D
"RTN","OOPSGUIT",69,0)
 ...N LABEL,TDOI,TIME
"RTN","OOPSGUIT",70,0)
 ...S TDOI=$P($$GET1^DIQ(2260,OOPDA,4),"@",2)
"RTN","OOPSGUIT",71,0)
 ...I $G(TDOI)="" S TDOI="Unknown"
"RTN","OOPSGUIT",72,0)
 ...I TDOI'="Unknown" D
"RTN","OOPSGUIT",73,0)
 ....I +$P(TDOI,":")&($P(TDOI,":")'=24) S TIME=$P(TDOI,":")
"RTN","OOPSGUIT",74,0)
 ....E  S TIME=24
"RTN","OOPSGUIT",75,0)
 ....S LABEL=TIME_":"_"00 - "_TIME_":59"
"RTN","OOPSGUIT",76,0)
 ...I TDOI="Unknown" S LABEL="Unknown"
"RTN","OOPSGUIT",77,0)
 ...S:$D(DATA(LABEL))=0 DATA(LABEL)=0 S DATA(LABEL)=DATA(LABEL)+1
"RTN","OOPSGUIT",78,0)
 S TOT=1,NODE="",CNT=0
"RTN","OOPSGUIT",79,0)
 F  S NODE=$O(DATA(NODE)) Q:NODE=""  S RESULTS(TOT)=NODE_"^"_DATA(NODE),CNT=CNT+$P(RESULTS(TOT),U,2),TOT=TOT+1
"RTN","OOPSGUIT",80,0)
 I CNT S RESULTS(0)=CNT
"RTN","OOPSGUIT",81,0)
 Q
"RTN","OOPSGUIT",82,0)
REPORT() ; Get Fld # to sort on
"RTN","OOPSGUIT",83,0)
 I TRPT="Type of Incidents" S RPTTY=3
"RTN","OOPSGUIT",84,0)
 I TRPT="Occupation Code" S RPTTY=15
"RTN","OOPSGUIT",85,0)
 I TRPT="Characterization of Injury" S RPTTY=29
"RTN","OOPSGUIT",86,0)
 I TRPT="Service" S RPTTY=86
"RTN","OOPSGUIT",87,0)
 I TRPT="Body Parts" S RPTTY=30
"RTN","OOPSGUIT",88,0)
 I TRPT="Day of Week" S RPTTY=999
"RTN","OOPSGUIT",89,0)
 I TRPT="Time of Day" S RPTTY=9999
"RTN","OOPSGUIT",90,0)
 Q RPTTY
"RTN","OOPSGUIT",91,0)
BODY ; group the body parts to min # of columns
"RTN","OOPSGUIT",92,0)
 ;;Abdomen;^BA^V5^VI^V4^V3^VL^VM^VS^
"RTN","OOPSGUIT",93,0)
 ;;Arm(s) Lower;^AS^AB^A4^A6^A3^A5^
"RTN","OOPSGUIT",94,0)
 ;;Arm(s) Upper;^AX^AZ^A2^A1^
"RTN","OOPSGUIT",95,0)
 ;;Back (Lumbar Region);^BL^
"RTN","OOPSGUIT",96,0)
 ;;Back (Upper);^BU^
"RTN","OOPSGUIT",97,0)
 ;;Chest;^BC^RS^
"RTN","OOPSGUIT",98,0)
 ;;Ear(s);^H4^C2^H3^C1^
"RTN","OOPSGUIT",99,0)
 ;;Elbow;^EB^ES^
"RTN","OOPSGUIT",100,0)
 ;;Eye(s);^H2^C4^H1^C3^
"RTN","OOPSGUIT",101,0)
 ;;Face;^CK^HC^HF^CJ^HM^CM^HN^CN^CD^CT^
"RTN","OOPSGUIT",102,0)
 ;;Foot,Includes Toes;^PB^G2^G3^G4^PS^G1^
"RTN","OOPSGUIT",103,0)
 ;;Hand(s),Includes fingers;^F2^F8^MB^F4^F6^TB^FB^FS^F1^F7^MS^F3^F5^TS^
"RTN","OOPSGUIT",104,0)
 ;;Knees;^KB^KS^
"RTN","OOPSGUIT",105,0)
 ;;Leg(s), lower;^L4^L3^
"RTN","OOPSGUIT",106,0)
 ;;Leg(s), upper;^LX^LZ^
"RTN","OOPSGUIT",107,0)
 ;;Neck;^HK^CL^CR^
"RTN","OOPSGUIT",108,0)
 ;;Not Elsewhere Classified;^XZ^L2^LB^BZ^XX^VN^RP^LS^L1^
"RTN","OOPSGUIT",109,0)
 ;;Reproductive Organs;^B2^B4^BP^VR^B1^B3^B5^
"RTN","OOPSGUIT",110,0)
 ;;Ribs;^RB^RC^
"RTN","OOPSGUIT",111,0)
 ;;Shoulder;^R2^R4^SB^R1^R3^SS^
"RTN","OOPSGUIT",112,0)
 ;;Skull/Head;^CB^HX^HZ^CX^CZ^HS^CC^CS^
"RTN","OOPSGUIT",113,0)
 ;;Spinal Cord;^VC^RV^
"RTN","OOPSGUIT",114,0)
 ;;Thorax;^VH^V2^V1^
"RTN","OOPSGUIT",115,0)
 ;;Trunk;^BS^RZ^BX^VX^VZ^RX^BW^
"RTN","OOPSGUIT",116,0)
 ;;Q
"RTN","OOPSGUIT",117,0)
 Q
"RTN","OOPSGUIT",118,0)
ACCID(RESULTS,INPUT,CALL) ; Print Accident Report Status report - get data
"RTN","OOPSGUIT",119,0)
 ;  Input: INPUT - START & END DATE, & 1 Station or all. Format is 
"RTN","OOPSGUIT",120,0)
 ;                 STARTDATE^ENDDATE^STA^CASESTATUS.  STA is A or IEN
"RTN","OOPSGUIT",121,0)
 ;                 of the station to run report for; case status =
"RTN","OOPSGUIT",122,0)
 ;                 case status: open 'O', closed 'C', or both 'A'.
"RTN","OOPSGUIT",123,0)
 ;          CALL - contains the value for calling menu. This excludes
"RTN","OOPSGUIT",124,0)
 ;                 the Persons name if called from Union menu
"RTN","OOPSGUIT",125,0)
 ; Output:  - RESULTS contains the data to be displayed in the report
"RTN","OOPSGUIT",126,0)
 N ARR,CN,IEN,SDATE,SIGN,SIGSTR,STDT,STA,ENDDT,EDATE,X,Y,SUPSTR,EMPSTR
"RTN","OOPSGUIT",127,0)
 N CASE,CAT,DOI,EMP,INC,ISEMP,PERSON,SAF,SSN,SSN1,SP,SUP,WCP,PCE
"RTN","OOPSGUIT",128,0)
 ; patch 4 llh - select by case status
"RTN","OOPSGUIT",129,0)
 N CS,STATUS
"RTN","OOPSGUIT",130,0)
 N S48,S6,S20,S12
"RTN","OOPSGUIT",131,0)
 S S48="                                                "
"RTN","OOPSGUIT",132,0)
 S S6="      ",S12="            ",S20="                    "
"RTN","OOPSGUIT",133,0)
 K ^TMP($J,"ACCID")
"RTN","OOPSGUIT",134,0)
 S CN=1,RESULTS(0)="Processing..."
"RTN","OOPSGUIT",135,0)
 S STDT=$P($G(INPUT),U),ENDDT=$P($G(INPUT),U,2)
"RTN","OOPSGUIT",136,0)
 S STA=$P($G(INPUT),U,3)
"RTN","OOPSGUIT",137,0)
 ; patch 4 llh - case status
"RTN","OOPSGUIT",138,0)
 S STATUS=$P($G(INPUT),U,4)
"RTN","OOPSGUIT",139,0)
 I (STDT="")!(ENDDT="")!(STA="")!(STATUS="") D  Q
"RTN","OOPSGUIT",140,0)
 . S RESULTS(0)="Input parameters missing, cannot run report." Q
"RTN","OOPSGUIT",141,0)
 S STATUS=$S(STATUS="O":0,STATUS="C":1,1:"")
"RTN","OOPSGUIT",142,0)
 S (SDATE,EDATE)=""
"RTN","OOPSGUIT",143,0)
 S X=STDT D ^%DT S SDATE=Y
"RTN","OOPSGUIT",144,0)
 S X=ENDDT D ^%DT S EDATE=Y
"RTN","OOPSGUIT",145,0)
 S SDATE=(SDATE-1)_".9999",EDATE=EDATE_".9999"
"RTN","OOPSGUIT",146,0)
 S SSN="" I CALL="Employee" S SSN=$$GET1^DIQ(200,DUZ,9)
"RTN","OOPSGUIT",147,0)
 S LP="",IEN=""
"RTN","OOPSGUIT",148,0)
 F LP=SDATE:0 S LP=$O(^OOPS(2260,"AD",LP)) Q:(LP'>0)!(LP>EDATE)  D
"RTN","OOPSGUIT",149,0)
 . F  S IEN=$O(^OOPS(2260,"AD",LP,IEN)) Q:IEN'>0  D
"RTN","OOPSGUIT",150,0)
 .. ; patch 4 llh - allow selection on case status
"RTN","OOPSGUIT",151,0)
 .. S CS=$$GET1^DIQ(2260,IEN,51,"I")
"RTN","OOPSGUIT",152,0)
 .. I $G(CS)>1 Q               ; exclude deleted, amended cases
"RTN","OOPSGUIT",153,0)
 .. I (STATUS'=""),(CS'=STATUS) Q  ; if 'All cases, status must match
"RTN","OOPSGUIT",154,0)
 .. S STATION=$P(^OOPS(2260,IEN,"2162A"),U,9)
"RTN","OOPSGUIT",155,0)
 .. I $G(STA)'="A",STATION'=STA Q
"RTN","OOPSGUIT",156,0)
 .. I (CALL="Supervisor"),($$GET1^DIQ(2260,IEN,53,"I")'=DUZ&($$GET1^DIQ(2260,IEN,53.1,"I")'=DUZ)) Q
"RTN","OOPSGUIT",157,0)
 .. S (ARR,CASE,PERSON,SSN1,DOI,INC,CAT,WCP,EMP,SUP,SAF,SP)=""
"RTN","OOPSGUIT",158,0)
 .. S CASE=$$GET1^DIQ(2260,IEN,.01)
"RTN","OOPSGUIT",159,0)
 .. S (PERSON,SSN1)=""
"RTN","OOPSGUIT",160,0)
 .. I CALL'="Union" S PERSON=$E($$GET1^DIQ(2260,IEN,1),1,30)
"RTN","OOPSGUIT",161,0)
 .. I CALL'="Union" S SSN1=$$GET1^DIQ(2260,IEN,5)
"RTN","OOPSGUIT",162,0)
 .. S INC=$$GET1^DIQ(2260,IEN,52,"I")
"RTN","OOPSGUIT",163,0)
 .. S DOI=$$GET1^DIQ(2260,IEN,4)
"RTN","OOPSGUIT",164,0)
 .. S CAT=$$GET1^DIQ(2260,IEN,2,"I")
"RTN","OOPSGUIT",165,0)
 .. ; patch 4 llh - get case status title
"RTN","OOPSGUIT",166,0)
 .. S CS=$S(CS=0:"Open",CS=1:"Closed",1:"")
"RTN","OOPSGUIT",167,0)
 .. I SSN1="" S SSN1="           "
"RTN","OOPSGUIT",168,0)
 .. S ARR=" ",^TMP($J,"ACCID",CN)=ARR,CN=CN+1,ARR=""
"RTN","OOPSGUIT",169,0)
 .. ;S ARR="Case Number   Name                                 SSN              Date/Time of Incident     Case Status"
"RTN","OOPSGUIT",170,0)
 .. S ARR="Case Number   Name                                 SSN              Case Status    Date/Time of Incident"
"RTN","OOPSGUIT",171,0)
 .. S ^TMP($J,"ACCID",CN)=ARR,CN=CN+1,ARR=""
"RTN","OOPSGUIT",172,0)
 .. S PERSON=PERSON_"                            ",PERSON=$E(PERSON,1,37)
"RTN","OOPSGUIT",173,0)
 .. I $L(CASE)=10 S CASE=CASE_" "
"RTN","OOPSGUIT",174,0)
 .. ;patch 4 llh - pad case status title if needed for alignment
"RTN","OOPSGUIT",175,0)
 .. I $L(CS)=4 S CS=CS_"  "
"RTN","OOPSGUIT",176,0)
 .. S ARR=CASE_"   "_PERSON_SSN1_"      "_CS_"         "_DOI
"RTN","OOPSGUIT",177,0)
 .. S ^TMP($J,"ACCID",CN)=ARR,CN=CN+1,ARR=""
"RTN","OOPSGUIT",178,0)
 .. I CALL="Employee" Q:SSN'=SSN1
"RTN","OOPSGUIT",179,0)
 .. S ISEMP=$$ISEMP^OOPSUTL4(IEN)
"RTN","OOPSGUIT",180,0)
 .. I 'ISEMP S ISEMP="N/A("_$E($$GET1^DIQ(2260,IEN,2,"E"),1,10)_")"
"RTN","OOPSGUIT",181,0)
 .. S SIGN="",SIGSTR="^^^^^^"
"RTN","OOPSGUIT",182,0)
 .. S SIGN=$P($$EDSTA^OOPSUTL1(IEN,"E"),U,INC)
"RTN","OOPSGUIT",183,0)
 .. S $P(SIGSTR,U,INC)=$S('SIGN:"Un-Signed",SIGN:"Signed",1:"")
"RTN","OOPSGUIT",184,0)
 .. ; if not employee (ISEMP=1) then put value ISEMP in piece
"RTN","OOPSGUIT",185,0)
 .. I 'ISEMP S $P(SIGSTR,U,INC)=ISEMP
"RTN","OOPSGUIT",186,0)
 .. S (SIGN,PCE,SUPSTR)=""
"RTN","OOPSGUIT",187,0)
 .. S SIGN=$$EDSTA^OOPSUTL1(IEN,"S")
"RTN","OOPSGUIT",188,0)
 .. S PCE=INC+2
"RTN","OOPSGUIT",189,0)
 .. I ISEMP S $P(SIGSTR,U,PCE)=$S('$P(SIGN,U,INC):"Un-Signed",$P(SIGN,U,INC):"Signed",1:"")
"RTN","OOPSGUIT",190,0)
 .. S $P(SIGSTR,U,5)=$S($P(SIGN,U,3):"Signed",1:"Un-Signed")
"RTN","OOPSGUIT",191,0)
 .. S SIGN="",SIGN=$$EDSTA^OOPSUTL1(IEN,"O")
"RTN","OOPSGUIT",192,0)
 .. S $P(SIGSTR,U,6)=$S($P(SIGN,U):"Signed",1:"Un-Signed")
"RTN","OOPSGUIT",193,0)
 .. S SIGN="",SIGN=$$GET1^DIQ(2260,IEN,68)
"RTN","OOPSGUIT",194,0)
 .. S $P(SIGSTR,U,7)=$S((($P(SIGN,U)="")&ISEMP):"Un-Signed",($P(SIGN,U)'=""):"Signed",1:"")
"RTN","OOPSGUIT",195,0)
 .. S ARR=S48_"          "_"CA1"_S12_"CA2"_S12_"2162"_S12_"WCP"
"RTN","OOPSGUIT",196,0)
 .. S ^TMP($J,"ACCID",CN)=ARR,CN=CN+1,ARR=""
"RTN","OOPSGUIT",197,0)
 .. S ARR=S48_"          "_"---"_S12_"---"_S12_"----"_S12_"---"
"RTN","OOPSGUIT",198,0)
 .. S ^TMP($J,"ACCID",CN)=ARR,CN=CN+1,ARR=""
"RTN","OOPSGUIT",199,0)
 .. S EMPSTR=S20_S20_"     Employee:    "
"RTN","OOPSGUIT",200,0)
 .. I INC=1 S ARR=EMPSTR_$P(SIGSTR,U,1)
"RTN","OOPSGUIT",201,0)
 .. I INC=2 S ARR=EMPSTR_S12_"   "_$P(SIGSTR,U,2)
"RTN","OOPSGUIT",202,0)
 .. S ^TMP($J,"ACCID",CN)=ARR,CN=CN+1,ARR=""
"RTN","OOPSGUIT",203,0)
 .. S SUPSTR=S20_S20_"   Supervisor:    "
"RTN","OOPSGUIT",204,0)
 .. I 'ISEMP S SUPSTR=SUPSTR_"         "
"RTN","OOPSGUIT",205,0)
 .. I INC=1 D
"RTN","OOPSGUIT",206,0)
 ... I $P(SIGSTR,U,3)="Signed" S ARR=SUPSTR_$P(SIGSTR,U,3)_S20_"    "_$P(SIGSTR,U,5)
"RTN","OOPSGUIT",207,0)
 ... E  S ARR=SUPSTR_$P(SIGSTR,U,3)_S20_" "_$P(SIGSTR,U,5)
"RTN","OOPSGUIT",208,0)
 .. I INC=2 D
"RTN","OOPSGUIT",209,0)
 ... I $P(SIGSTR,U,4)="Signed" S ARR=SUPSTR_S12_"   "_$P(SIGSTR,U,4)_S6_"   "_$P(SIGSTR,U,5)
"RTN","OOPSGUIT",210,0)
 ... E  S ARR=SUPSTR_S12_"   "_$P(SIGSTR,U,4)_S6_$P(SIGSTR,U,5)
"RTN","OOPSGUIT",211,0)
 .. S ^TMP($J,"ACCID",CN)=ARR,CN=CN+1,ARR=""
"RTN","OOPSGUIT",212,0)
 .. S ARR=S20_S12_"       Safety Officer:"_S20_S12_"  "_$P(SIGSTR,U,6)
"RTN","OOPSGUIT",213,0)
 .. S ^TMP($J,"ACCID",CN)=ARR,CN=CN+1,ARR=""
"RTN","OOPSGUIT",214,0)
 .. S ARR=S20_S12_"        Workers' Comp:"_S48_"  "_$P(SIGSTR,U,7)
"RTN","OOPSGUIT",215,0)
 .. S ^TMP($J,"ACCID",CN)=ARR,CN=CN+1,ARR=""
"RTN","OOPSGUIT",216,0)
 S RESULTS=$NA(^TMP($J,"ACCID"))
"RTN","OOPSGUIT",217,0)
 Q
"RTN","OOPSUTL4")
0^8^B55894258
"RTN","OOPSUTL4",1,0)
OOPSUTL4 ;HINES/WAA-Utilities Routines ;3/24/98
"RTN","OOPSUTL4",2,0)
 ;;2.0;ASISTS;**7**;Jun 03, 2002
"RTN","OOPSUTL4",3,0)
DTVAL(DATE,FLD1,FLD2) ;
"RTN","OOPSUTL4",4,0)
 ; this subroutine called from ^DD so date error checking on fields
"RTN","OOPSUTL4",5,0)
 ; 143, 144, 145 (if CA1) and 254, 255 (if CA2).  returns a valid date 
"RTN","OOPSUTL4",6,0)
 ; (one passed in) if a date in FLD2 and is > than date passed in (DATE).
"RTN","OOPSUTL4",7,0)
 ;  Inputs:   DATE - date entered in prompt
"RTN","OOPSUTL4",8,0)
 ;            FLD1 - field of prompt date entered in
"RTN","OOPSUTL4",9,0)
 ;            FLD2 - field of date to be checked against
"RTN","OOPSUTL4",10,0)
 ; Outputs:   VAL  - contains valid date passed in if true & "" if false
"RTN","OOPSUTL4",11,0)
 N DTE2,VAL
"RTN","OOPSUTL4",12,0)
 S VAL=DATE,DTE2=""
"RTN","OOPSUTL4",13,0)
 I '$G(IEN) S IEN=$G(DA)
"RTN","OOPSUTL4",14,0)
 I IEN S DTE2=$$GET1^DIQ(2260,IEN,FLD2,"I")
"RTN","OOPSUTL4",15,0)
 I %DT'["R" S DTE2=DTE2\1
"RTN","OOPSUTL4",16,0)
 I DTE2>DATE!'$G(DTE2) S VAL=""
"RTN","OOPSUTL4",17,0)
 I 'VAL D
"RTN","OOPSUTL4",18,0)
 .I '$G(DTE2) W !!?5,$$GET1^DID(2260,FLD2,"","LABEL")_" cannot be blank if date entered in "_$$GET1^DID(2260,FLD1,"","LABEL"),! Q
"RTN","OOPSUTL4",19,0)
 .W !!?5,$$GET1^DID(2260,FLD1,"","LABEL")_" must be on or after the "_$$GET1^DID(2260,FLD2,"","LABEL"),!
"RTN","OOPSUTL4",20,0)
 Q VAL
"RTN","OOPSUTL4",21,0)
VALIDATE(IEN,FORM,CALLER,VALID) ;
"RTN","OOPSUTL4",22,0)
 ; Input: IEN    = Internal Entry Number of entry in file 2260
"RTN","OOPSUTL4",23,0)
 ;        FORM   = 2162,CA1, or CA2
"RTN","OOPSUTL4",24,0)
 ;        CALLER = "E" employee
"RTN","OOPSUTL4",25,0)
 ;               = "S" supervisor
"RTN","OOPSUTL4",26,0)
 ;               = "O" safety officer
"RTN","OOPSUTL4",27,0)
 ;               = "W" worker's comp personnel
"RTN","OOPSUTL4",28,0)
 ;        WCEMP  = from menu if 1 - need to execute emp validation
"RTN","OOPSUTL4",29,0)
 ;        VALID  = RESERVED FOR OUTPUT DATA
"RTN","OOPSUTL4",30,0)
 ; Output:VALID  = 1 ALL REQUIRED DATA FOR FORM IS COMPLETE
"RTN","OOPSUTL4",31,0)
 ;               = 0 DATA IS MISSING
"RTN","OOPSUTL4",32,0)
 N LIST,FLD,CNT,CHK
"RTN","OOPSUTL4",33,0)
 S (FLD,LIST)=""
"RTN","OOPSUTL4",34,0)
 S VALID=1,CHK=0,WCEMP=$G(WCEMP,0)
"RTN","OOPSUTL4",35,0)
 W !,"Validating data on form ",FORM,"."
"RTN","OOPSUTL4",36,0)
 I CALLER="E"!$G(WCEMP) D EMP
"RTN","OOPSUTL4",37,0)
 I CALLER="S" D SUP
"RTN","OOPSUTL4",38,0)
 I CALLER="O" D SOF
"RTN","OOPSUTL4",39,0)
 I CALLER="W" D WCP
"RTN","OOPSUTL4",40,0)
 F CNT=1:1 S FLD=$P(LIST,",",CNT) Q:FLD=""  D
"RTN","OOPSUTL4",41,0)
 .N LOC,NODE,PCE,BADFLD,TEXT,WP
"RTN","OOPSUTL4",42,0)
 .S BADFLD=1,WP=0
"RTN","OOPSUTL4",43,0)
 .S LOC=$$GET1^DID(2260,FLD,"","GLOBAL SUBSCRIPT LOCATION")
"RTN","OOPSUTL4",44,0)
 .S NODE=$P(LOC,";"),PCE=$P(LOC,";",2)
"RTN","OOPSUTL4",45,0)
 .I PCE=0 D  ;Work processing field
"RTN","OOPSUTL4",46,0)
 ..I '$D(^OOPS(2260,IEN,NODE,1,0)) S (BADFLD,VALID)=0
"RTN","OOPSUTL4",47,0)
 ..S WP=1
"RTN","OOPSUTL4",48,0)
 ..Q
"RTN","OOPSUTL4",49,0)
 .I PCE'=0  I $P($G(^OOPS(2260,IEN,NODE)),U,PCE)="" S (BADFLD,VALID)=0
"RTN","OOPSUTL4",50,0)
 .I 'BADFLD D  ; Display error messaged about fields not filled.
"RTN","OOPSUTL4",51,0)
 ..I 'CHK W !!,"The following fields must be completed before the "_FORM_" can be signed.",! S CHK=1
"RTN","OOPSUTL4",52,0)
 ..I WP D  ;Is this a wp field and where to get title
"RTN","OOPSUTL4",53,0)
 ...N NODE
"RTN","OOPSUTL4",54,0)
 ...S NODE=2260_".0"_FLD
"RTN","OOPSUTL4",55,0)
 ...; patch 11 - fix bug on fld 40, node '= 2260.040, it's 2260.01
"RTN","OOPSUTL4",56,0)
 ...I FLD=40 S NODE="2260.01"
"RTN","OOPSUTL4",57,0)
 ...S TEXT=$$GET1^DID(NODE,".01","","TITLE")
"RTN","OOPSUTL4",58,0)
 ..I 'WP S TEXT=$$GET1^DID(2260,FLD,"","TITLE") I $G(TEXT)="" S TEXT=$$GET1^DID(2260,FLD,"","LABEL")
"RTN","OOPSUTL4",59,0)
 ..; patch 2.7 - if body part affected - indicate the form
"RTN","OOPSUTL4",60,0)
 ..I FLD=30,(TEXT'="") S TEXT=TEXT_" (FORM 2162)"
"RTN","OOPSUTL4",61,0)
 ..W !,TEXT
"RTN","OOPSUTL4",62,0)
 I FORM="CA1"&(CALLER="E"!$G(WCEMP)) D   ; fld 110 check on Emp CA1 only
"RTN","OOPSUTL4",63,0)
 .I $$GET1^DIQ(2260,IEN,110,"I")<($$GET1^DIQ(2260,IEN,4,"I")\1) S VALID=0 D
"RTN","OOPSUTL4",64,0)
 ..W !?5,$$GET1^DID(2260,110,"","LABEL")_" must be on or after the "_$$GET1^DID(2260,4,"","LABEL")
"RTN","OOPSUTL4",65,0)
DTCHK ; Date error checking that may be missed w/input transform
"RTN","OOPSUTL4",66,0)
 ; patch 11 - Additional error checking has been added for CA2 field 214
"RTN","OOPSUTL4",67,0)
 I FORM=2162!(CALLER="O")!$G(WCEMP) Q
"RTN","OOPSUTL4",68,0)
 K CNT,FLD,LIST
"RTN","OOPSUTL4",69,0)
 N DATE,DTE1,DTE2,TITLE,EMPDOB
"RTN","OOPSUTL4",70,0)
 ; patch 11 - need to make sure 215 not before 214 on employee part
"RTN","OOPSUTL4",71,0)
 I CALLER="E",FORM="CA2" D  Q
"RTN","OOPSUTL4",72,0)
 .S DTE1=$$GET1^DIQ(2260,IEN,215,"I")
"RTN","OOPSUTL4",73,0)
 .S DTE2=$$GET1^DIQ(2260,IEN,214,"I")
"RTN","OOPSUTL4",74,0)
 .S EMPDOB=$$GET1^DIQ(2260,IEN,6,"I")
"RTN","OOPSUTL4",75,0)
 .I $$FMDIFF^XLFDT(DTE2,EMPDOB,2)<0 S VALID=0 D
"RTN","OOPSUTL4",76,0)
 ..W !?5,$$GET1^DID(2260,214,"","LABEL")_" must be on or after the "_$$GET1^DID(2260,6,"","LABEL")
"RTN","OOPSUTL4",77,0)
 .I $$FMDIFF^XLFDT(DTE1,DTE2,2)<0 S VALID=0 D
"RTN","OOPSUTL4",78,0)
 ..W !?5,$$GET1^DID(2260,215,"","LABEL")_" must be on or after the "_$$GET1^DID(2260,214,"","LABEL")
"RTN","OOPSUTL4",79,0)
 ; End of checks from Employee CA2
"RTN","OOPSUTL4",80,0)
 I FORM="CA1" D
"RTN","OOPSUTL4",81,0)
 .S LIST="142,161,175"
"RTN","OOPSUTL4",82,0)
 .S (DATE,DTE1)=$$GET1^DIQ(2260,IEN,4,"I")
"RTN","OOPSUTL4",83,0)
 .S TITLE=$$GET1^DID(2260,4,"","LABEL")
"RTN","OOPSUTL4",84,0)
 I FORM="CA2" D
"RTN","OOPSUTL4",85,0)
 .S LIST="215,250,252,253,255"
"RTN","OOPSUTL4",86,0)
 .S (DATE,DTE1)=$$GET1^DIQ(2260,IEN,214,"I")
"RTN","OOPSUTL4",87,0)
 .S TITLE=$$GET1^DID(2260,214,"","LABEL")
"RTN","OOPSUTL4",88,0)
 F CNT=1:1 S FLD=$P(LIST,",",CNT) Q:FLD=""  D
"RTN","OOPSUTL4",89,0)
 .S DTE2=$$GET1^DIQ(2260,IEN,FLD,"I") I FLD'=142 S DTE2=DTE2\1,DTE1=DATE\1
"RTN","OOPSUTL4",90,0)
 .I $G(DTE2),DTE2<DTE1 D  S VALID=0
"RTN","OOPSUTL4",91,0)
 ..W !?5,$$GET1^DID(2260,FLD,"","LABEL")_" must be on or after the "_TITLE
"RTN","OOPSUTL4",92,0)
 ; Need specific check on DATE/TIME STOPPED WORK
"RTN","OOPSUTL4",93,0)
 I FORM="CA1" D
"RTN","OOPSUTL4",94,0)
 .S LIST="143,144,145",DATE=$$GET1^DIQ(2260,IEN,142,"I")
"RTN","OOPSUTL4",95,0)
 .S TITLE=$$GET1^DID(2260,142,"","LABEL")
"RTN","OOPSUTL4",96,0)
 I FORM="CA2" D
"RTN","OOPSUTL4",97,0)
 .S LIST="254,256",DATE=$$GET1^DIQ(2260,IEN,253,"I")
"RTN","OOPSUTL4",98,0)
 .S TITLE=$$GET1^DID(2260,253,"","LABEL")
"RTN","OOPSUTL4",99,0)
 F CNT=1:1 S FLD=$P(LIST,",",CNT) Q:FLD=""  D
"RTN","OOPSUTL4",100,0)
 .S DTE2=$$GET1^DIQ(2260,IEN,FLD,"I"),DTE1=DATE D
"RTN","OOPSUTL4",101,0)
 ..I FLD=143!(FLD=144) S DTE1=DATE\1,DTE2=DTE2\1
"RTN","OOPSUTL4",102,0)
 ..I (DTE1>DTE2),$G(DTE2) D  S VALID=0
"RTN","OOPSUTL4",103,0)
 ...W !?5,$$GET1^DID(2260,FLD,"","LABEL")_" must be on or after the "_TITLE
"RTN","OOPSUTL4",104,0)
 ..I '$G(DTE1),$G(DTE2) D  S VALID=0
"RTN","OOPSUTL4",105,0)
 ...W !?5,TITLE_" cannot be blank if date in "_$$GET1^DID(2260,FLD,"","LABEL")
"RTN","OOPSUTL4",106,0)
 Q
"RTN","OOPSUTL4",107,0)
EMP ; Address fields are now all pulled from the 2162A node
"RTN","OOPSUTL4",108,0)
 ; added fields 126 & 181,183-185 to lists below - patch 8
"RTN","OOPSUTL4",109,0)
 I FORM="CA1" S LIST="8,9,10,11,12,108,109,110,111,112,113,114,126,181,183,184,185"
"RTN","OOPSUTL4",110,0)
 ; added field 213 - ASISTS V2.0
"RTN","OOPSUTL4",111,0)
 I FORM="CA2" S LIST="8,9,10,11,12,126,208,213,209,214,215,216,217"
"RTN","OOPSUTL4",112,0)
 Q
"RTN","OOPSUTL4",113,0)
SUP ;
"RTN","OOPSUTL4",114,0)
 N F165
"RTN","OOPSUTL4",115,0)
 I FORM="2162" D F2162 I $$ISEMP^OOPSUTL4(IEN) S LIST=LIST_",33" Q
"RTN","OOPSUTL4",116,0)
 S LIST="30,"
"RTN","OOPSUTL4",117,0)
 I FORM="CA1" D
"RTN","OOPSUTL4",118,0)
 .S LIST=LIST_"4,60,130,131,132,133,134,138,139,140,146,148,150,"
"RTN","OOPSUTL4",119,0)
 .S LIST=LIST_"162,163,172,173,174,175,176,177,178,179,"
"RTN","OOPSUTL4",120,0)
 .S LIST=LIST_"180,181,183,184,185,"
"RTN","OOPSUTL4",121,0)
 .I $$GET1^DIQ(2260,IEN,150,"I")="Y" S LIST=LIST_"151,152,153,154,155,"
"RTN","OOPSUTL4",122,0)
 .; V2.0 added required fields missed in patch 8
"RTN","OOPSUTL4",123,0)
 .I $$GET1^DIQ(2260,IEN,146)="No" S LIST=LIST_"147,"
"RTN","OOPSUTL4",124,0)
 .I $$GET1^DIQ(2260,IEN,148)="Yes" S LIST=LIST_"149,"
"RTN","OOPSUTL4",125,0)
 .I $$GET1^DIQ(2260,IEN,163)="No" S LIST=LIST_"164,"
"RTN","OOPSUTL4",126,0)
 .S F165=$G(^OOPS(2260,IEN,"CA1K",0))
"RTN","OOPSUTL4",127,0)
 .I $G(F165)'="",($P(F165,U,4)'=0) S LIST=LIST_"165,"
"RTN","OOPSUTL4",128,0)
 I FORM="CA2" D
"RTN","OOPSUTL4",129,0)
 .S LIST=LIST_"230,231,232,233,234,237,238,239,240,241,"
"RTN","OOPSUTL4",130,0)
 .S LIST=LIST_"242,243,244,251,252,255,258,60,268,269,"
"RTN","OOPSUTL4",131,0)
 .; below for ASISTS V2.0, needed for roll and scroll also
"RTN","OOPSUTL4",132,0)
 .; added next line, need to get 3rd party if 258 = y
"RTN","OOPSUTL4",133,0)
 .I $$GET1^DIQ(2260,IEN,258,"I")="Y" S LIST=LIST_"259,260,261,262,263,"
"RTN","OOPSUTL4",134,0)
 ; V2.0 if field 60="other" (3)  then 61 required for both CA1 & CA2
"RTN","OOPSUTL4",135,0)
 I $$GET1^DIQ(2260,IEN,60,"I")=3 S LIST=LIST_"61,"
"RTN","OOPSUTL4",136,0)
 ; need to check physician information
"RTN","OOPSUTL4",137,0)
 D PHYCHK^OOPSGUI9
"RTN","OOPSUTL4",138,0)
 Q
"RTN","OOPSUTL4",139,0)
SOF ;
"RTN","OOPSUTL4",140,0)
 I FORM="2162" D F2162 S LIST=LIST_",55,47"
"RTN","OOPSUTL4",141,0)
 Q
"RTN","OOPSUTL4",142,0)
WCP ; Get required fields for Workers Comp
"RTN","OOPSUTL4",143,0)
 I FORM="2162" D F2162 Q
"RTN","OOPSUTL4",144,0)
 S LIST="5,6,7,15,62,70,73,"
"RTN","OOPSUTL4",145,0)
 I FORM="CA1" D
"RTN","OOPSUTL4",146,0)
 . S LIST=LIST_"123,124,"
"RTN","OOPSUTL4",147,0)
 . ; flds 166 & 167 only required if personnel status = 1
"RTN","OOPSUTL4",148,0)
 . I $$GET1^DIQ(2260,IEN,2,"I")=1 S LIST=LIST_"166,167,"
"RTN","OOPSUTL4",149,0)
 I FORM="CA2" D
"RTN","OOPSUTL4",150,0)
 . S LIST=LIST_"226,227,"
"RTN","OOPSUTL4",151,0)
 D SUP
"RTN","OOPSUTL4",152,0)
 Q
"RTN","OOPSUTL4",153,0)
F2162 ; Set required fields for form 2162 - doesn't matter which menu
"RTN","OOPSUTL4",154,0)
 ; coming from, Supervisor, Safety, WC (for EDIT REPORT OF INCIDENT)
"RTN","OOPSUTL4",155,0)
 N TYP,SAF
"RTN","OOPSUTL4",156,0)
 I FORM'="2162" Q
"RTN","OOPSUTL4",157,0)
 S LIST="26,27,28,29,30,31"
"RTN","OOPSUTL4",158,0)
 S TYP=$$GET1^DIQ(2260,IEN,"3:.01","E")
"RTN","OOPSUTL4",159,0)
 I "^Sharps Exposure^Hollow Bore Needlestick^Suture Needlestick^"[TYP D
"RTN","OOPSUTL4",160,0)
 . S LIST=LIST_",34,35,36,37,38,82"
"RTN","OOPSUTL4",161,0)
 I $$GET1^DIQ(2260,IEN,"38:2","I")="N" S LIST=LIST_",83"
"RTN","OOPSUTL4",162,0)
 I "^Exposure to Body Fluids/Splash^"[TYP D
"RTN","OOPSUTL4",163,0)
 . S LIST=LIST_",34,39,40,41"
"RTN","OOPSUTL4",164,0)
 I $$GET1^DIQ(2260,IEN,3,"I")<11 Q
"RTN","OOPSUTL4",165,0)
 I $$GET1^DIQ(2260,IEN,42.5,"I")="Y" S LIST=LIST_",42"
"RTN","OOPSUTL4",166,0)
 S SAF=$$GET1^DIQ(2260,IEN,43,"I")
"RTN","OOPSUTL4",167,0)
 S LIST=$S(SAF="Y":LIST_",84,87",SAF="N":LIST_",85",1:LIST)
"RTN","OOPSUTL4",168,0)
 S LIST=LIST_",47"
"RTN","OOPSUTL4",169,0)
 Q
"RTN","OOPSUTL4",170,0)
UP(IN) ; Translate all lower to upper
"RTN","OOPSUTL4",171,0)
 N OUT
"RTN","OOPSUTL4",172,0)
 S OUT=$TR(IN,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","OOPSUTL4",173,0)
 Q OUT
"RTN","OOPSUTL4",174,0)
VCHAR(IN) ; Check to make sure no invalid characters have been used
"RTN","OOPSUTL4",175,0)
 ;   input  - IN, data entered by user
"RTN","OOPSUTL4",176,0)
 ;  output  - VALID, if invalid characters used, = 0
"RTN","OOPSUTL4",177,0)
 N VALID
"RTN","OOPSUTL4",178,0)
 S VALID=1
"RTN","OOPSUTL4",179,0)
 I IN'=$TR(IN,"~`@#$%*_|\}{[]><","") S VALID=0
"RTN","OOPSUTL4",180,0)
 Q VALID
"RTN","OOPSUTL4",181,0)
ISEMP(IEN) ; Determine if PERSONNEL STATUS = employee
"RTN","OOPSUTL4",182,0)
 ;  Input -  IEN     = internal Entry Number of case in File 2260
"RTN","OOPSUTL4",183,0)
 ;           CAT     = Personnel Status of Case in File 2260
"RTN","OOPSUTL4",184,0)
 ;           TST     = valid Personnel status categories for employee
"RTN","OOPSUTL4",185,0)
 ;  Output - EMP     = 1 Personnel status indicates employee
"RTN","OOPSUTL4",186,0)
 ;                     0 Personnel status indicates non-employee
"RTN","OOPSUTL4",187,0)
 NEW CAT,TST,EMP
"RTN","OOPSUTL4",188,0)
 S EMP=0
"RTN","OOPSUTL4",189,0)
 S CAT=$$GET1^DIQ(2260,IEN,2,"I")
"RTN","OOPSUTL4",190,0)
 ; 12/16/01 V2.0 removed personnel types 7,8,9,10
"RTN","OOPSUTL4",191,0)
 S TST=",1,2,6,"
"RTN","OOPSUTL4",192,0)
 I TST[(","_CAT_",") S EMP=1
"RTN","OOPSUTL4",193,0)
 Q EMP
"RTN","OOPSUTL4",194,0)
FUT(DATE) ; Check for dates prior to Date of Inj/Ill
"RTN","OOPSUTL4",195,0)
 N DAT,VIEW,FORM
"RTN","OOPSUTL4",196,0)
 S VIEW=1
"RTN","OOPSUTL4",197,0)
 S FORM=$$GET1^DIQ(2260,IEN,52,"I")
"RTN","OOPSUTL4",198,0)
 S DAT=$$GET1^DIQ(2260,IEN,4,"I")
"RTN","OOPSUTL4",199,0)
 I (DATE<$P(DAT,".")),FORM=1 D
"RTN","OOPSUTL4",200,0)
 . W !!?6,"This date cannot be prior to DATE/TIME INJURY OCCURRED entered on 2162.",! S VIEW=0
"RTN","OOPSUTL4",201,0)
 Q VIEW
"RTN","OOPSUTL4",202,0)
WP(OPFLD) ; Patch 8 - determine number of characters in WP fields that are
"RTN","OOPSUTL4",203,0)
 ;         limited to 532 characters & if invalid characters are present
"RTN","OOPSUTL4",204,0)
 ;  Input    IEN - Internal Record ID of Case
"RTN","OOPSUTL4",205,0)
 ;         OPFLD - Field number of WP field to be calculated
"RTN","OOPSUTL4",206,0)
 ; Output    OPT - Total number of characters in all lines of WP field
"RTN","OOPSUTL4",207,0)
 ;                 concatenated to VALID. ex: 165^1 or 180^0
"RTN","OOPSUTL4",208,0)
 ;         VALID - indicates whether invalid characters were detected
"RTN","OOPSUTL4",209,0)
 N DATA,DIWL,DIWR,DIWF,OPGLB,OPI,OPNODE,OPT,OPC,VALID
"RTN","OOPSUTL4",210,0)
 S VALID=1
"RTN","OOPSUTL4",211,0)
 K ^UTILITY($J,"W")
"RTN","OOPSUTL4",212,0)
 S DIWL=1,DIWR="",DIWF="|C264",OPT=0
"RTN","OOPSUTL4",213,0)
 S OPNODE=$P($$GET1^DID(2260,OPFLD,"","GLOBAL SUBSCRIPT LOCATION"),";")
"RTN","OOPSUTL4",214,0)
 S OPI=0 F  S OPI=$O(^OOPS(2260,IEN,OPNODE,OPI)) Q:'OPI  S X=$G(^OOPS(2260,IEN,OPNODE,OPI,0)) D:X]"" ^DIWP
"RTN","OOPSUTL4",215,0)
 I $G(^UTILITY($J,"W",1))+0 D
"RTN","OOPSUTL4",216,0)
 . S OPI=0 F OPC=1:1 S OPI=$O(^UTILITY($J,"W",1,OPI)) Q:'OPI  D
"RTN","OOPSUTL4",217,0)
 .. S DATA=^UTILITY($J,"W",1,OPI,0)
"RTN","OOPSUTL4",218,0)
 .. I DATA'=$TR(DATA,"~`@#$%^*_|\}{[]><","") S VALID=0
"RTN","OOPSUTL4",219,0)
 .. S OPT=OPT+$L(DATA)
"RTN","OOPSUTL4",220,0)
 K ^UTILITY($J,"W"),X
"RTN","OOPSUTL4",221,0)
 Q OPT_U_VALID
"RTN","OOPSXV27")
0^^B3155635
"RTN","OOPSXV27",1,0)
OOPSXV27 ;WIOFO/LLH-POST INIT ROUTINE, FILL FIELD 331 ;11/26/04
"RTN","OOPSXV27",2,0)
 ;;2.0;ASISTS;**7**;Jun 03, 2002
"RTN","OOPSXV27",3,0)
 ; Patch 7 - auto populate index "AF" from 1/1/2004 to date
"RTN","OOPSXV27",4,0)
 ;
"RTN","OOPSXV27",5,0)
ENT ;
"RTN","OOPSXV27",6,0)
 N IEN,FILE,FLD4,FLD88
"RTN","OOPSXV27",7,0)
 S FILE=2260,IEN=0
"RTN","OOPSXV27",8,0)
 D BMES^XPDUTL("Updating new index for OSHA 300 Log for cases created in 2004") H 1
"RTN","OOPSXV27",9,0)
 D MES^XPDUTL(" ")
"RTN","OOPSXV27",10,0)
 S FLD4=3040100
"RTN","OOPSXV27",11,0)
 F  S FLD4=$O(^OOPS(FILE,"AD",FLD4)) Q:FLD4'>0  D
"RTN","OOPSXV27",12,0)
 .S IEN=0 F   S IEN=$O(^OOPS(FILE,"AD",FLD4,IEN)) Q:IEN'>0  D
"RTN","OOPSXV27",13,0)
 ..S FLD88=$$GET1^DIQ(FILE,IEN,88,"I")
"RTN","OOPSXV27",14,0)
 ..I $G(FLD88)'="" S ^OOPS(FILE,"AF",FLD4,FLD88,IEN)=""
"RTN","OOPSXV27",15,0)
 D BMES^XPDUTL("Update Complete") H 1
"RTN","OOPSXV27",16,0)
 D MES^XPDUTL(" ")
"RTN","OOPSXV27",17,0)
 ;
"RTN","OOPSXV27",18,0)
 ; now update Type of Incident (FILE 2161.2)
"RTN","OOPSXV27",19,0)
 D BMES^XPDUTL("Updating ASISTS CRITICAL TRACKING ISSUES File (#2261.2)") H 1
"RTN","OOPSXV27",20,0)
 D MES^XPDUTL(" ")
"RTN","OOPSXV27",21,0)
 I $P(^OOPS(2261.2,15,0),U)'="Non Patient Care" D  Q
"RTN","OOPSXV27",22,0)
 .D BMES^XPDUTL("File not found as expected, update table manually")
"RTN","OOPSXV27",23,0)
 .D MES^XPDUTL(" ")
"RTN","OOPSXV27",24,0)
 I $P(^OOPS(2261.2,15,0),U)="Non Patient Care" D
"RTN","OOPSXV27",25,0)
 .S $P(^OOPS(2261.2,15,0),U)="Lifting (Non Patient Care)"
"RTN","OOPSXV27",26,0)
 .K ^OOPS(2261.2,"B","Non Patient Care",15)
"RTN","OOPSXV27",27,0)
 .S ^OOPS(2261.2,"B","Lifting (Non Patient Care)",15)=""
"RTN","OOPSXV27",28,0)
 .K ^OOPS(2261.2,"D","NON PATIENT CARE",15)
"RTN","OOPSXV27",29,0)
 .S ^OOPS(2261.2,"D","LIFTING (NON PATIENT CARE)",15)=""
"RTN","OOPSXV27",30,0)
 D BMES^XPDUTL("Table Update Complete"),MES^XPDUTL(" ")
"RTN","OOPSXV27",31,0)
 Q
"UP",2260,2260.095,-1)
2260^OUTC
"UP",2260,2260.095,0)
2260.095
"UP",2262,2262.03,-1)
2262^1
"UP",2262,2262.03,0)
2262.03
"UP",2262,2262.315,-2)
2262^1
"UP",2262,2262.315,-1)
2262.03^2
"UP",2262,2262.315,0)
2262.315
"VER")
8.0^22.0
"^DD",2260,2260,4,0)
DATE/TIME OF OCCURRENCE^RDX^^0;5^S %DT="ETX",%DT(0)="-NOW" D ^%DT K %DT S X=Y K:Y<1 X I $G(X),($$FMDIFF^XLFDT(DT,X,1)>1095) D EN^DDIOL("DATE OF OCCURRENCE must be within 3 years","","!!?5") K X
"^DD",2260,2260,4,.1)
22. DATE OF INJURY
"^DD",2260,2260,4,1,0)
^.1
"^DD",2260,2260,4,1,1,0)
2260^AD
"^DD",2260,2260,4,1,1,1)
S ^OOPS(2260,"AD",$E(X,1,30),DA)=""
"^DD",2260,2260,4,1,1,2)
K ^OOPS(2260,"AD",$E(X,1,30),DA)
"^DD",2260,2260,4,1,1,"DT")
2980407
"^DD",2260,2260,4,3)
Enter the date and time of injury, date only if illness.
"^DD",2260,2260,4,21,0)
^.001^3^3^3011015^^^^
"^DD",2260,2260,4,21,1,0)
If this is an injury, this is the date and time the incident happened.
"^DD",2260,2260,4,21,2,0)
If this is an illness, this is the date the employee first became aware of
"^DD",2260,2260,4,21,3,0)
the disease or illness.
"^DD",2260,2260,4,"DT")
3040901
"^DD",2260,2260,88,0)
INCLUDE ON OSHA LOG^S^Y:Yes;N:No;^2162B;14^Q
"^DD",2260,2260,88,1,0)
^.1
"^DD",2260,2260,88,1,1,0)
2260^AE
"^DD",2260,2260,88,1,1,1)
S ^OOPS(2260,"AE",$E(X,1,30),DA)=""
"^DD",2260,2260,88,1,1,2)
K ^OOPS(2260,"AE",$E(X,1,30),DA)
"^DD",2260,2260,88,1,1,"%D",0)
^.101^2^2^3011204^^
"^DD",2260,2260,88,1,1,"%D",1,0)
This index will be used to quickly determine if an ASISTS case should be
"^DD",2260,2260,88,1,1,"%D",2,0)
included in the Log of Federal Occupational Injuries and Illnesses report.
"^DD",2260,2260,88,1,1,"DT")
3011031
"^DD",2260,2260,88,3)
Enter 'Y'es if this claim should appear on the OSHA Log.
"^DD",2260,2260,88,21,0)
^.001^3^3^3011204^^
"^DD",2260,2260,88,21,1,0)
This field will indicate whether the ASISTS case filed should appear on the 
"^DD",2260,2260,88,21,2,0)
Log of Federal Occupational Injuries and Illnesses.  A Yes response will
"^DD",2260,2260,88,21,3,0)
indicate to include the claim, a No response will exclude it from the report.
"^DD",2260,2260,88,"DT")
3040901
"^DD",2260,2260,95,0)
INCIDENT OUTCOME^2260.095DA^^OUTC;0
"^DD",2260,2260,95,21,0)
^.001^2^2^3041123^^^^
"^DD",2260,2260,95,21,1,0)
This subfile contains information regarding the employees ability to work
"^DD",2260,2260,95,21,2,0)
as a result of the incident.
"^DD",2260,2260,333,0)
DATE OF DEATH^D^^2162A;23^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",2260,2260,333,3)
Enter the date the individual died.
"^DD",2260,2260,333,21,0)
^^2^2^3041122^
"^DD",2260,2260,333,21,1,0)
If the incident resulted in a fatality, this field contains the date of 
"^DD",2260,2260,333,21,2,0)
the death.
"^DD",2260,2260,333,"DT")
3040719
"^DD",2260,2260,334,0)
ILLNESS TYPE^S^2:Skin disorder;3:Respiratory condition;4:Poisoning;5:Hearing loss;6:All other illnesses;^2162B;15^Q
"^DD",2260,2260,334,3)
Enter the Illness type category for this incident.
"^DD",2260,2260,334,21,0)
^.001^2^2^3041122^^
"^DD",2260,2260,334,21,1,0)
This is the category of the Illness or Disease for the incident 
"^DD",2260,2260,334,21,2,0)
and is used in completing the OSHA 300 Log.
"^DD",2260,2260,334,"DT")
3041122
"^DD",2260,2260,335,0)
TIME WORK BEGAN^FX^^0;22^D TI^OOPSUTL3
"^DD",2260,2260,335,3)
Enter the time work began.
"^DD",2260,2260,335,21,0)
^^2^2^3041122^
"^DD",2260,2260,335,21,1,0)
This is the time that the individual involved in the incident began work
"^DD",2260,2260,335,21,2,0)
on the date of the incident.
"^DD",2260,2260,335,"DT")
3040826
"^DD",2260,2260,336,0)
HIRE DATE^D^^2162A;24^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",2260,2260,336,3)
Enter the date the individual began working.
"^DD",2260,2260,336,21,0)
^^2^2^3041122^
"^DD",2260,2260,336,21,1,0)
This is the date (Service Computation Date) that the individual involved 
"^DD",2260,2260,336,21,2,0)
in the incident first began working.
"^DD",2260,2260,336,"DT")
3040826
"^DD",2260,2260,337,0)
PRIVACY CASE^S^Y:Yes;N:No;^2162D;10^Q
"^DD",2260,2260,337,3)
Enter Y if the case is a 'privacy' case.
"^DD",2260,2260,337,21,0)
^^2^2^3041122^
"^DD",2260,2260,337,21,1,0)
This field indicates whether the incident should be treated as a 'privacy
"^DD",2260,2260,337,21,2,0)
case'.  If so, restrictions on how the name is displayed are in place.
"^DD",2260,2260,337,"DT")
3040827
"^DD",2260,2260,338,0)
NON VA ER TREATMENT RCVD^S^Y:Yes;N:No;^2162D;11^Q
"^DD",2260,2260,338,3)
Enter Y if the person received treatment from a non-VA facility.
"^DD",2260,2260,338,21,0)
^.001^2^2^3041122^^
"^DD",2260,2260,338,21,1,0)
This Yes/No field is used to indicate whether the individual involved in
"^DD",2260,2260,338,21,2,0)
the incident was treated at a non-VA emergency treatment center.
"^DD",2260,2260,338,"DT")
3040827
"^DD",2260,2260,339,0)
HOSPITALIZED AS INPATIENT^S^Y:Yes;N:No;^2162D;12^Q
"^DD",2260,2260,339,3)
Enter a Y if the person was hospitalized as an inpatient.
"^DD",2260,2260,339,21,0)
^^2^2^3041122^
"^DD",2260,2260,339,21,1,0)
This Yes/No field is used to indicate if the individual involved in the 
"^DD",2260,2260,339,21,2,0)
incident was admitted to as an inpatient to a medical center.
"^DD",2260,2260,339,"DT")
3040827
"^DD",2260,2260,340,0)
TREATING PHYSICIAN^F^^2162D;13^K:$L(X)>30!($L(X)<3) X
"^DD",2260,2260,340,3)
Answer must be 3-30 characters in length.
"^DD",2260,2260,340,21,0)
^^2^2^3041122^
"^DD",2260,2260,340,21,1,0)
This field contains the name of the physician who first treated the
"^DD",2260,2260,340,21,2,0)
individual involved in the incident.
"^DD",2260,2260,340,"DT")
3040827
"^DD",2260,2260,341,0)
TREATED AT DIFFERENT FACILITY^S^Y:Yes;N:No;^2162L;1^Q
"^DD",2260,2260,341,3)
Enter Y if the individual was treated at a different facility.
"^DD",2260,2260,341,21,0)
^.001^2^2^3041122^^
"^DD",2260,2260,341,21,1,0)
This Yes/No field is used to indicate whether the individual involved in
"^DD",2260,2260,341,21,2,0)
the incident was treated at a non-VA treatment center.
"^DD",2260,2260,341,"DT")
3040827
"^DD",2260,2260,342,0)
OTHER FACILITY NAME^F^^2162L;2^K:$L(X)>35!($L(X)<3) X
"^DD",2260,2260,342,3)
Answer must be 3-35 characters in length.
"^DD",2260,2260,342,21,0)
^^2^2^3041122^^
"^DD",2260,2260,342,21,1,0)
This is the name of the facility if the individual involved in the 
"^DD",2260,2260,342,21,2,0)
incident was treated at a different facility.
"^DD",2260,2260,342,"DT")
3041122
"^DD",2260,2260,343,0)
OTHER FACILITY STREET^F^^2162L;3^K:$L(X)>30!($L(X)<3) X
"^DD",2260,2260,343,3)
Answer must be 3-30 characters in length.
"^DD",2260,2260,343,21,0)
^^2^2^3041122^^
"^DD",2260,2260,343,21,1,0)
This is the street address of the facility if the individual involved 
"^DD",2260,2260,343,21,2,0)
in the incident was treated at a different facility.
"^DD",2260,2260,343,"DT")
3041122
"^DD",2260,2260,344,0)
OTHER FACILITY CITY^F^^2162L;4^K:$L(X)>25!($L(X)<3) X
"^DD",2260,2260,344,3)
Answer must be 3-25 characters in length.
"^DD",2260,2260,344,21,0)
^^2^2^3041122^^
"^DD",2260,2260,344,21,1,0)
This is the city portion of the address of the facility if the 
"^DD",2260,2260,344,21,2,0)
individual involved in the incident was treated at a different facility.
"^DD",2260,2260,344,"DT")
3041122
"^DD",2260,2260,345,0)
OTHER FACILITY STATE^P5'^DIC(5,^2162L;5^Q
"^DD",2260,2260,345,3)
Enter the State portion of the facility address.
"^DD",2260,2260,345,21,0)
^^2^2^3041122^^
"^DD",2260,2260,345,21,1,0)
This is the state portion of the address of the facility if the 
"^DD",2260,2260,345,21,2,0)
individual involved in the incident was treated at a different facility.
"^DD",2260,2260,345,"DT")
3041122
"^DD",2260,2260,346,0)
OTHER FACILITY ZIP^F^^2162L;6^K:$L(X)>10!($L(X)<5) X
"^DD",2260,2260,346,3)
Answer must be 5-10 characters in length.
"^DD",2260,2260,346,21,0)
^^2^2^3041122^
"^DD",2260,2260,346,21,1,0)
This is the zip code portion of the address of the facility if the 
"^DD",2260,2260,346,21,2,0)
individual involved in the incident was treated at a different facility.
"^DD",2260,2260,346,"DT")
3040827
"^DD",2260,2260.095,0)
INCIDENT OUTCOME SUB-FIELD^^10^11
"^DD",2260,2260.095,0,"DT")
3040924
"^DD",2260,2260.095,0,"NM","INCIDENT OUTCOME")

"^DD",2260,2260.095,0,"UP")
2260
"^DD",2260,2260.095,.01,0)
START DATE INCIDENT OUTCOME^MRD^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",2260,2260.095,.01,1,0)
^.1^^0
"^DD",2260,2260.095,.01,3)
Enter the first day for this outcome.
"^DD",2260,2260.095,.01,21,0)
^^1^1^3041122^
"^DD",2260,2260.095,.01,21,1,0)
This is the first date for the incident being entered.
"^DD",2260,2260.095,.01,"DT")
3040809
"^DD",2260,2260.095,1,0)
END DATE INCIDENT OUTCOME^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",2260,2260.095,1,3)
Enter the last date for this outcome
"^DD",2260,2260.095,1,21,0)
^^1^1^3041122^
"^DD",2260,2260.095,1,21,1,0)
This is the ending date for the incident information for this outcome.
"^DD",2260,2260.095,1,"DT")
3040715
"^DD",2260,2260.095,2,0)
INCIDENT OUTCOME^S^D:Death;A:Away Work;J:Job Transfer/Restriction;O:Other Recordable;^0;3^Q
"^DD",2260,2260.095,2,3)
Enter the type of incident outcome.
"^DD",2260,2260.095,2,21,0)
^^2^2^3041122^
"^DD",2260,2260.095,2,21,1,0)
This is the incident outcome type for this incident.  Valid choices are:
"^DD",2260,2260.095,2,21,2,0)
Death, Away Work, Job Transfer/Restriction, or Other Recordable.
"^DD",2260,2260.095,2,"DT")
3040901
"^DD",2260,2260.095,3,0)
DAYS AWAY WORK^NJ6,0^^0;4^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2260,2260.095,3,3)
Type a Number between 0 and 999999, 0 Decimal Digits
"^DD",2260,2260.095,3,21,0)
^^1^1^3041122^
"^DD",2260,2260.095,3,21,1,0)
This will contain the number of days away from work for this incident.
"^DD",2260,2260.095,3,"DT")
3040715
"^DD",2260,2260.095,4,0)
DAYS JOB TRANSFER/RESTRICTION^NJ6,0^^0;5^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2260,2260.095,4,3)
Type a Number between 0 and 999999, 0 Decimal Digits
"^DD",2260,2260.095,4,21,0)
^^2^2^3041122^
"^DD",2260,2260.095,4,21,1,0)
This will contain the number of days of job transfer or restriction
"^DD",2260,2260.095,4,21,2,0)
for this incident.
"^DD",2260,2260.095,4,"DT")
3040715
"^DD",2260,2260.095,5,0)
ESTIMATED RETURN DATE^D^^0;6^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",2260,2260.095,5,3)
Enter the date the employee is expected to return to work.
"^DD",2260,2260.095,5,21,0)
^.001^2^2^3041122^^
"^DD",2260,2260.095,5,21,1,0)
This contains the estimated return to work date determined by the workers'
"^DD",2260,2260.095,5,21,2,0)
compensation specialist or the safety official.
"^DD",2260,2260.095,5,"DT")
3040715
"^DD",2260,2260.095,6,0)
DATE OUTCOME CREATED^D^^0;7^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",2260,2260.095,6,3)
Enter the date the incident outcome was created.
"^DD",2260,2260.095,6,21,0)
^.001^2^2^3041122^^
"^DD",2260,2260.095,6,21,1,0)
This system generated date will store the date this incident outcome
"^DD",2260,2260.095,6,21,2,0)
was created.
"^DD",2260,2260.095,6,"DT")
3040809
"^DD",2260,2260.095,7,0)
INCIDENT CREATED BY^P200'^VA(200,^0;8^Q
"^DD",2260,2260.095,7,3)
Enter the person who created the record.
"^DD",2260,2260.095,7,21,0)
2^.001^2^2^3041123^^
"^DD",2260,2260.095,7,21,1,0)
The application will automatically store the user who created
"^DD",2260,2260.095,7,21,2,0)
the incident outcome record.
"^DD",2260,2260.095,7,"DT")
3040809
"^DD",2260,2260.095,8,0)
LAST EDIT DATE^D^^0;9^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",2260,2260.095,8,3)
Enter the date the incident record was last edited
"^DD",2260,2260.095,8,21,0)
^^2^2^3041122^
"^DD",2260,2260.095,8,21,1,0)
The application will automatically store the date the incident outcome
"^DD",2260,2260.095,8,21,2,0)
record was edited.
"^DD",2260,2260.095,8,"DT")
3040809
"^DD",2260,2260.095,9,0)
LAST EDITED BY^P200'^VA(200,^0;10^Q
"^DD",2260,2260.095,9,3)
Enter the person who last edited the incident record
"^DD",2260,2260.095,9,21,0)
^.001^2^2^3041123^^
"^DD",2260,2260.095,9,21,1,0)
The application will store the user who last edited this incident
"^DD",2260,2260.095,9,21,2,0)
outcome record.
"^DD",2260,2260.095,9,"DT")
3040809
"^DD",2260,2260.095,10,0)
STATUS^S^A:Added;D:Deleted;^0;11^Q
"^DD",2260,2260.095,10,3)
Enter A if the incident is active, a D if it is deleted
"^DD",2260,2260.095,10,21,0)
^^3^3^3041122^
"^DD",2260,2260.095,10,21,1,0)
This is the status of the incident outcome.  If the incident has been entered
"^DD",2260,2260.095,10,21,2,0)
in error, the user can mark the record deleted and it will not be used when 
"^DD",2260,2260.095,10,21,3,0)
determining the total number of days the individual's work was impacted.
"^DD",2260,2260.095,10,"DT")
3040924
"^DD",2262,2262.03,7,0)
SAFETY OFFICER^P200'^VA(200,^1;1^Q
"^DD",2262,2262.03,7,3)
Enter the Facility Safety Officer
"^DD",2262,2262.03,7,21,0)
^.001^2^2^3041123^^
"^DD",2262,2262.03,7,21,1,0)
This is the safety official responsible for the accuracy of the OSHA 
"^DD",2262,2262.03,7,21,2,0)
300 Log and OSHA 300A Summary report.
"^DD",2262,2262.03,7,"DT")
3040730
"^DD",2262,2262.03,8,0)
SAFETY OFFICER TITLE^F^^1;2^K:$L(X)>20!($L(X)<3) X
"^DD",2262,2262.03,8,3)
Answer must be 3-20 characters in length.
"^DD",2262,2262.03,8,21,0)
^^1^1^3041122^
"^DD",2262,2262.03,8,21,1,0)
This is the title for the safety official.
"^DD",2262,2262.03,8,"DT")
3040913
"^DD",2262,2262.03,9,0)
SAFETY OFFICER PHONE NUMBER^F^^1;3^K:$L(X)>13!($L(X)<10) X
"^DD",2262,2262.03,9,3)
Answer must be 10-13 characters in length.
"^DD",2262,2262.03,9,21,0)
^^1^1^3041122^
"^DD",2262,2262.03,9,21,1,0)
This is the safety official's phone number.
"^DD",2262,2262.03,9,"DT")
3040730
"^DD",2262,2262.03,10,0)
SAFTEY OFFICER PHONE EXTENSION^F^^1;4^K:$L(X)>20!($L(X)<3) X
"^DD",2262,2262.03,10,3)
Answer must be 3-20 characters in length.
"^DD",2262,2262.03,10,21,0)
^^1^1^3041122^
"^DD",2262,2262.03,10,21,1,0)
This is the safety official's phone number extension, if needed.
"^DD",2262,2262.03,10,"DT")
3040730
"^DD",2262,2262.03,11,0)
OSHA 300 INDUSTRY DESCRIPTION^F^^1;5^K:$L(X)>40!($L(X)<3) X
"^DD",2262,2262.03,11,3)
Answer must be 3-40 characters in length.
"^DD",2262,2262.03,11,21,0)
^^1^1^3041122^
"^DD",2262,2262.03,11,21,1,0)
This is the industry description that is used on the OSHA 300 Log.
"^DD",2262,2262.03,11,"DT")
3040730
"^DD",2262,2262.03,12,0)
STAND INDUSTRIAL CLASS (SIC)^P2262.6'^OOPS(2262.6,^1;6^Q
"^DD",2262,2262.03,12,3)
Enter the 4 digit SIC code.
"^DD",2262,2262.03,12,21,0)
^^2^2^3041122^
"^DD",2262,2262.03,12,21,1,0)
This is the 4 digit standard industry code that is used on the OSHA 300A
"^DD",2262,2262.03,12,21,2,0)
Summary. 
"^DD",2262,2262.03,12,"DT")
3040913
"^DD",2262,2262.03,13,0)
N.A. INDUSTRIAL CLASS (NAICS)^P2262.7'^OOPS(2262.7,^1;7^Q
"^DD",2262,2262.03,13,3)
Enter the 6 digit NAICS code.
"^DD",2262,2262.03,13,21,0)
^.001^2^2^3041122^^
"^DD",2262,2262.03,13,21,1,0)
This is the 6 digit North American industrial code used on the 
"^DD",2262,2262.03,13,21,2,0)
OSHA 300A summary.
"^DD",2262,2262.03,13,"DT")
3040913
"^DD",2262,2262.03,15,0)
OSHA MONTH/YEAR^2262.315DA^^2;0
"^DD",2262,2262.03,15,21,0)
^.001^3^3^3041122^^
"^DD",2262,2262.03,15,21,1,0)
This subfile is for storing the average number of employees and the total
"^DD",2262,2262.03,15,21,2,0)
hours worked by employees on a monthly basis.  This information is used
"^DD",2262,2262.03,15,21,3,0)
on the OSHA 300A Summary report.
"^DD",2262,2262.315,0)
OSHA MONTH/YEAR SUB-FIELD^^2^3
"^DD",2262,2262.315,0,"DT")
3040730
"^DD",2262,2262.315,0,"IX","B",2262.315,.01)

"^DD",2262,2262.315,0,"NM","OSHA MONTH/YEAR")

"^DD",2262,2262.315,0,"UP")
2262.03
"^DD",2262,2262.315,.01,0)
OSHA MONTH/YEAR^DX^^0;1^S %DT="EMX" D ^%DT S X=Y K:Y<1 X
"^DD",2262,2262.315,.01,1,0)
^.1
"^DD",2262,2262.315,.01,1,1,0)
2262.315^B
"^DD",2262,2262.315,.01,1,1,1)
S ^OOPS(2262,DA(2),1,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",2262,2262.315,.01,1,1,2)
K ^OOPS(2262,DA(2),1,DA(1),2,"B",$E(X,1,30),DA)
"^DD",2262,2262.315,.01,3)
Enter the month and year for the Employee data.
"^DD",2262,2262.315,.01,21,0)
^^1^1^3041122^
"^DD",2262,2262.315,.01,21,1,0)
This is the Month and Year in the format MM/YYYY for the employee data.
"^DD",2262,2262.315,.01,"DT")
3040730
"^DD",2262,2262.315,1,0)
AVG NUMBER OF EMPLOYEES^NJ6,0^^0;2^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2262,2262.315,1,3)
Type a Number between 0 and 999999, 0 Decimal Digits
"^DD",2262,2262.315,1,21,0)
^^2^2^3041122^
"^DD",2262,2262.315,1,21,1,0)
This is the average number of employees working at the facility for the 
"^DD",2262,2262.315,1,21,2,0)
month and year.
"^DD",2262,2262.315,1,"DT")
3040730
"^DD",2262,2262.315,2,0)
TOTAL HRS WORKED BY^NJ15,0^^0;3^K:+X'=X!(X>999999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2262,2262.315,2,3)
Type a Number between 0 and 999999999999999, 0 Decimal Digits
"^DD",2262,2262.315,2,21,0)
^^2^2^3041122^
"^DD",2262,2262.315,2,21,1,0)
This is the total number of hours worked by all employees at the facility
"^DD",2262,2262.315,2,21,2,0)
for the month and year indicated.
"^DD",2262,2262.315,2,"DT")
3040730
"^DD",2262.6,2262.6,0)
FIELD^^1^2
"^DD",2262.6,2262.6,0,"DDA")
N
"^DD",2262.6,2262.6,0,"DT")
3040912
"^DD",2262.6,2262.6,0,"IX","B",2262.6,.01)

"^DD",2262.6,2262.6,0,"NM","ASISTS STANDARD INDUSTRIAL CLASS. (SIC)")

"^DD",2262.6,2262.6,0,"PT",2262.03,12)

"^DD",2262.6,2262.6,0,"VRPK")
OOPS
"^DD",2262.6,2262.6,.01,0)
SIC NUMBER^RNJ4,0^^0;1^K:+X'=X!(X>9999)!(X<1111)!(X?.E1"."1N.N) X
"^DD",2262.6,2262.6,.01,1,0)
^.1
"^DD",2262.6,2262.6,.01,1,1,0)
2262.6^B
"^DD",2262.6,2262.6,.01,1,1,1)
S ^OOPS(2262.6,"B",$E(X,1,30),DA)=""
"^DD",2262.6,2262.6,.01,1,1,2)
K ^OOPS(2262.6,"B",$E(X,1,30),DA)
"^DD",2262.6,2262.6,.01,3)
Type a Number between 1111 and 9999, 0 Decimal Digits
"^DD",2262.6,2262.6,.01,21,0)
^^1^1^3041122^
"^DD",2262.6,2262.6,.01,21,1,0)
This is the 4 digit standard industrial code.
"^DD",2262.6,2262.6,.01,"DT")
3040912
"^DD",2262.6,2262.6,1,0)
SIC DESCRIPTION^F^^0;2^K:$L(X)>60!($L(X)<3) X
"^DD",2262.6,2262.6,1,3)
Answer must be 3-60 characters in length.
"^DD",2262.6,2262.6,1,21,0)
^^1^1^3041122^
"^DD",2262.6,2262.6,1,21,1,0)
This is the description for the SIC code.
"^DD",2262.6,2262.6,1,"DT")
3040912
"^DD",2262.7,2262.7,0)
FIELD^^1^2
"^DD",2262.7,2262.7,0,"DDA")
N
"^DD",2262.7,2262.7,0,"DT")
3040912
"^DD",2262.7,2262.7,0,"IX","B",2262.7,.01)

"^DD",2262.7,2262.7,0,"NM","ASISTS N.A. INDUSTRIAL CLASSIFICATION (NAICS)")

"^DD",2262.7,2262.7,0,"PT",2262.03,13)

"^DD",2262.7,2262.7,0,"VRPK")
OOPS
"^DD",2262.7,2262.7,.01,0)
NAICS NUMBER^RNJ6,0^^0;1^K:+X'=X!(X>999999)!(X<111111)!(X?.E1"."1N.N) X
"^DD",2262.7,2262.7,.01,1,0)
^.1
"^DD",2262.7,2262.7,.01,1,1,0)
2262.7^B
"^DD",2262.7,2262.7,.01,1,1,1)
S ^OOPS(2262.7,"B",$E(X,1,30),DA)=""
"^DD",2262.7,2262.7,.01,1,1,2)
K ^OOPS(2262.7,"B",$E(X,1,30),DA)
"^DD",2262.7,2262.7,.01,3)
Type a Number between 111111 and 999999, 0 Decimal Digits
"^DD",2262.7,2262.7,.01,21,0)
^.001^1^1^3041122^^
"^DD",2262.7,2262.7,.01,21,1,0)
This is the 6 digit North American industrial code.
"^DD",2262.7,2262.7,.01,"DT")
3040912
"^DD",2262.7,2262.7,1,0)
NAICS DESCRIPTION^F^^0;2^K:$L(X)>60!($L(X)<3) X
"^DD",2262.7,2262.7,1,3)
Answer must be 3-60 characters in length.
"^DD",2262.7,2262.7,1,21,0)
^^1^1^3041122^
"^DD",2262.7,2262.7,1,21,1,0)
This is the description for the NAICS code.
"^DD",2262.7,2262.7,1,"DT")
3040912
"^DIC",2262.6,2262.6,0)
ASISTS STANDARD INDUSTRIAL CLASS. (SIC)^2262.6
"^DIC",2262.6,2262.6,0,"GL")
^OOPS(2262.6,
"^DIC",2262.6,2262.6,"%",0)
^1.005^1^1
"^DIC",2262.6,2262.6,"%",1,0)
OOPS
"^DIC",2262.6,2262.6,"%","B","OOPS",1)

"^DIC",2262.6,"B","ASISTS STANDARD INDUSTRIAL CLASS. (SIC)",2262.6)

"^DIC",2262.7,2262.7,0)
ASISTS N.A. INDUSTRIAL CLASSIFICATION (NAICS)^2262.7
"^DIC",2262.7,2262.7,0,"GL")
^OOPS(2262.7,
"^DIC",2262.7,2262.7,"%",0)
^1.005^1^1
"^DIC",2262.7,2262.7,"%",1,0)
OOPS
"^DIC",2262.7,2262.7,"%","B","OOPS",1)

"^DIC",2262.7,"B","ASISTS N.A. INDUSTRIAL CLASSIFICATION (NAICS)",2262.7)

**END**
**END**
