KIDS Distribution saved on Oct 07, 2003@13:15:35
PATCH FOR THIRD PARTY EDI LOCKBOX
**KIDS**:PRCA*4.5*173^IB*2.0*135^

**INSTALL NAME**
PRCA*4.5*173
"BLD",3986,0)
PRCA*4.5*173^ACCOUNTS RECEIVABLE^0^3031007^y
"BLD",3986,1,0)
^^4^4^3030604^^^^
"BLD",3986,1,1,0)
Third Party EDI Lockbox Patch PRCA*4.5*173 (Accounts Receivable component)
"BLD",3986,1,2,0)
 
"BLD",3986,1,3,0)
Please refer to the patch description in the National Patch module and
"BLD",3986,1,4,0)
the users documentation for detailed information about this patch.
"BLD",3986,4,0)
^9.64PA^347.4^10
"BLD",3986,4,341.1,0)
341.1
"BLD",3986,4,341.1,222)
n^n^f^^n^^y^o^n
"BLD",3986,4,341.1,224)
I $P($G(^RC(341.1,Y,0)),U,2)=14
"BLD",3986,4,342,0)
342
"BLD",3986,4,342,2,0)
^9.641^342^1
"BLD",3986,4,342,2,342,0)
AR SITE PARAMETER  (File-top level)
"BLD",3986,4,342,2,342,1,0)
^9.6411^7.03^2
"BLD",3986,4,342,2,342,1,7.02,0)
NUMBER OF DAYS EFT UNMATCHED
"BLD",3986,4,342,2,342,1,7.03,0)
NUMBER OF DAYS EOB UNMATCHED
"BLD",3986,4,342,222)
y^n^p^^^^n
"BLD",3986,4,344,0)
344
"BLD",3986,4,344,2,0)
^9.641^344.01^2
"BLD",3986,4,344,2,344,0)
AR BATCH PAYMENT  (File-top level)
"BLD",3986,4,344,2,344,1,0)
^9.6411^.17^3
"BLD",3986,4,344,2,344,1,.16,0)
LOCKBOX ACH NUMBER
"BLD",3986,4,344,2,344,1,.17,0)
EFT RECORD
"BLD",3986,4,344,2,344,1,.18,0)
ERA REFERENCE
"BLD",3986,4,344,2,344.01,0)
TRANSACTION  (sub-file)
"BLD",3986,4,344,2,344.01,1,0)
^9.6411^.28^3
"BLD",3986,4,344,2,344.01,1,.01,0)
TRANSACTION
"BLD",3986,4,344,2,344.01,1,.27,0)
ERA SEQUENCE
"BLD",3986,4,344,2,344.01,1,.28,0)
AUTO DECREASE ADJUSTMENT
"BLD",3986,4,344,222)
y^n^p^^^^n
"BLD",3986,4,344.3,0)
344.3
"BLD",3986,4,344.3,222)
y^n^f^^^^n
"BLD",3986,4,344.31,0)
344.31
"BLD",3986,4,344.31,222)
y^n^f^^^^n
"BLD",3986,4,344.4,0)
344.4
"BLD",3986,4,344.4,222)
y^n^f^^^^n
"BLD",3986,4,344.49,0)
344.49
"BLD",3986,4,344.49,222)
y^n^f^^^^n
"BLD",3986,4,344.5,0)
344.5
"BLD",3986,4,344.5,222)
y^n^f^^^^n
"BLD",3986,4,347.1,0)
347.1
"BLD",3986,4,347.1,222)
n^n^f^^n^^y^o^n
"BLD",3986,4,347.1,224)
I +Y=9
"BLD",3986,4,347.4,0)
347.4
"BLD",3986,4,347.4,222)
y^n^f^^n^^y^o^n
"BLD",3986,4,"APDD",342,342)

"BLD",3986,4,"APDD",342,342,7.02)

"BLD",3986,4,"APDD",342,342,7.03)

"BLD",3986,4,"APDD",344,344)

"BLD",3986,4,"APDD",344,344,.16)

"BLD",3986,4,"APDD",344,344,.17)

"BLD",3986,4,"APDD",344,344,.18)

"BLD",3986,4,"APDD",344,344.01)

"BLD",3986,4,"APDD",344,344.01,.01)

"BLD",3986,4,"APDD",344,344.01,.27)

"BLD",3986,4,"APDD",344,344.01,.28)

"BLD",3986,4,"B",341.1,341.1)

"BLD",3986,4,"B",342,342)

"BLD",3986,4,"B",344,344)

"BLD",3986,4,"B",344.3,344.3)

"BLD",3986,4,"B",344.31,344.31)

"BLD",3986,4,"B",344.4,344.4)

"BLD",3986,4,"B",344.49,344.49)

"BLD",3986,4,"B",344.5,344.5)

"BLD",3986,4,"B",347.1,347.1)

"BLD",3986,4,"B",347.4,347.4)

"BLD",3986,"ABNS",0)
^9.66A^^
"BLD",3986,"ABPKG")
y^n
"BLD",3986,"INIT")
RCY173PO
"BLD",3986,"KRN",0)
^9.67PA^8989.52^19
"BLD",3986,"KRN",.4,0)
.4
"BLD",3986,"KRN",.4,"NM",0)
^9.68A^^
"BLD",3986,"KRN",.401,0)
.401
"BLD",3986,"KRN",.402,0)
.402
"BLD",3986,"KRN",.402,"NM",0)
^9.68A^2^2
"BLD",3986,"KRN",.402,"NM",1,0)
RCMS EDI LOCKBOX    FILE #342^342^0
"BLD",3986,"KRN",.402,"NM",2,0)
PRCA CAUSED BY    FILE #430^430^0
"BLD",3986,"KRN",.402,"NM","B","PRCA CAUSED BY    FILE #430",2)

"BLD",3986,"KRN",.402,"NM","B","RCMS EDI LOCKBOX    FILE #342",1)

"BLD",3986,"KRN",.403,0)
.403
"BLD",3986,"KRN",.5,0)
.5
"BLD",3986,"KRN",.84,0)
.84
"BLD",3986,"KRN",3.6,0)
3.6
"BLD",3986,"KRN",3.8,0)
3.8
"BLD",3986,"KRN",3.8,"NM",0)
^9.68A^6^4
"BLD",3986,"KRN",3.8,"NM",2,0)
RCDPE PAYMENTS^^0
"BLD",3986,"KRN",3.8,"NM",4,0)
RCDPE PAYMENTS MGMT^^0
"BLD",3986,"KRN",3.8,"NM",5,0)
MLB^^0
"BLD",3986,"KRN",3.8,"NM",6,0)
RCDPE PAYMENTS EXCEPTIONS^^0
"BLD",3986,"KRN",3.8,"NM","B","MLB",5)

"BLD",3986,"KRN",3.8,"NM","B","RCDPE PAYMENTS",2)

"BLD",3986,"KRN",3.8,"NM","B","RCDPE PAYMENTS EXCEPTIONS",6)

"BLD",3986,"KRN",3.8,"NM","B","RCDPE PAYMENTS MGMT",4)

"BLD",3986,"KRN",9.2,0)
9.2
"BLD",3986,"KRN",9.8,0)
9.8
"BLD",3986,"KRN",9.8,"NM",0)
^9.68A^124^66
"BLD",3986,"KRN",9.8,"NM",1,0)
RCMSITE^^0^B5701405
"BLD",3986,"KRN",9.8,"NM",2,0)
PRCABJ^^0^B29313939
"BLD",3986,"KRN",9.8,"NM",12,0)
PRCAUDT^^0^B46780803
"BLD",3986,"KRN",9.8,"NM",13,0)
PRCAUDT1^^0^B11997062
"BLD",3986,"KRN",9.8,"NM",14,0)
PRCAFBD^^0^B14582773
"BLD",3986,"KRN",9.8,"NM",16,0)
RCDPURE1^^0^B54927547
"BLD",3986,"KRN",9.8,"NM",17,0)
RCDPRPL2^^0^B62184693
"BLD",3986,"KRN",9.8,"NM",30,0)
RCDPDPLU^^0^B5368440
"BLD",3986,"KRN",9.8,"NM",34,0)
RCDPRPLM^^0^B81196267
"BLD",3986,"KRN",9.8,"NM",36,0)
RCDPDPL1^^0^B31591361
"BLD",3986,"KRN",9.8,"NM",40,0)
RCDPUDEP^^0^B13072574
"BLD",3986,"KRN",9.8,"NM",41,0)
RCDPUREC^^0^B58702599
"BLD",3986,"KRN",9.8,"NM",42,0)
RCDPRPL3^^0^B81211213
"BLD",3986,"KRN",9.8,"NM",72,0)
PRCAUT3^^0^B8305251
"BLD",3986,"KRN",9.8,"NM",73,0)
RCDPRPLU^^0^B5817284
"BLD",3986,"KRN",9.8,"NM",74,0)
RCDPEAR^^0^B2522562
"BLD",3986,"KRN",9.8,"NM",75,0)
RCDPEAR1^^0^B36689598
"BLD",3986,"KRN",9.8,"NM",76,0)
RCDPEAR2^^0^B31707246
"BLD",3986,"KRN",9.8,"NM",77,0)
RCDPEDA1^^0^B12897653
"BLD",3986,"KRN",9.8,"NM",78,0)
RCDPEDAR^^0^B75522675
"BLD",3986,"KRN",9.8,"NM",79,0)
RCDPEDS^^0^B35759608
"BLD",3986,"KRN",9.8,"NM",80,0)
RCDPEM^^0^B54610957
"BLD",3986,"KRN",9.8,"NM",81,0)
RCDPEM0^^0^B50540405
"BLD",3986,"KRN",9.8,"NM",82,0)
RCDPEM1^^0^B48711091
"BLD",3986,"KRN",9.8,"NM",83,0)
RCDPESR0^^0^B53739249
"BLD",3986,"KRN",9.8,"NM",84,0)
RCDPESR1^^0^B44106955
"BLD",3986,"KRN",9.8,"NM",85,0)
RCDPESR2^^0^B76682354
"BLD",3986,"KRN",9.8,"NM",86,0)
RCDPESR3^^0^B44199365
"BLD",3986,"KRN",9.8,"NM",87,0)
RCDPESR4^^0^B65815527
"BLD",3986,"KRN",9.8,"NM",88,0)
RCDPESR5^^0^B27161834
"BLD",3986,"KRN",9.8,"NM",89,0)
RCDPESR6^^0^B25677852
"BLD",3986,"KRN",9.8,"NM",90,0)
RCDPESR8^^0^B25145000
"BLD",3986,"KRN",9.8,"NM",91,0)
RCDPESR9^^0^B63406315
"BLD",3986,"KRN",9.8,"NM",92,0)
RCDPESRV^^0^B26559607
"BLD",3986,"KRN",9.8,"NM",93,0)
RCDPETR^^0^B58104319
"BLD",3986,"KRN",9.8,"NM",94,0)
RCDPEU^^0^B5470439
"BLD",3986,"KRN",9.8,"NM",95,0)
RCDPEWL^^0^B35876366
"BLD",3986,"KRN",9.8,"NM",96,0)
RCDPEWL0^^0^B55327578
"BLD",3986,"KRN",9.8,"NM",97,0)
RCDPEWL1^^0^B37688801
"BLD",3986,"KRN",9.8,"NM",98,0)
RCDPEWL2^^0^B76369803
"BLD",3986,"KRN",9.8,"NM",99,0)
RCDPEX^^0^B75590588
"BLD",3986,"KRN",9.8,"NM",100,0)
RCDPEX0^^0^B18970844
"BLD",3986,"KRN",9.8,"NM",101,0)
RCDPEX1^^0^B15134260
"BLD",3986,"KRN",9.8,"NM",102,0)
RCDPEX2^^0^B14767482
"BLD",3986,"KRN",9.8,"NM",103,0)
RCDPEX3^^0^B75060334
"BLD",3986,"KRN",9.8,"NM",104,0)
RCDPEX31^^0^B38002230
"BLD",3986,"KRN",9.8,"NM",105,0)
RCDPEWL3^^0^B80108655
"BLD",3986,"KRN",9.8,"NM",106,0)
RCDPEWL4^^0^B75478892
"BLD",3986,"KRN",9.8,"NM",107,0)
RCDPEWL5^^0^B31439865
"BLD",3986,"KRN",9.8,"NM",108,0)
RCXFMSUF^^0^B16584008
"BLD",3986,"KRN",9.8,"NM",109,0)
RCXFMSUR^^0^B44865483
"BLD",3986,"KRN",9.8,"NM",110,0)
RCXFMSC1^^0^B18641229
"BLD",3986,"KRN",9.8,"NM",111,0)
RCXFMSCR^^0^B29814218
"BLD",3986,"KRN",9.8,"NM",112,0)
RCXFMST1^^0^B38706112
"BLD",3986,"KRN",9.8,"NM",113,0)
RCDPEWL6^^0^B57512828
"BLD",3986,"KRN",9.8,"NM",114,0)
RCDPE8NZ^^0^B23419953
"BLD",3986,"KRN",9.8,"NM",115,0)
RCFMFN02^^0^B10757709
"BLD",3986,"KRN",9.8,"NM",116,0)
PRCABJV^^0^B27225497
"BLD",3986,"KRN",9.8,"NM",117,0)
RCDPRPL4^^0^B28894720
"BLD",3986,"KRN",9.8,"NM",118,0)
RCDPR215^^0^B36065707
"BLD",3986,"KRN",9.8,"NM",119,0)
RCDPEX32^^0^B30118420
"BLD",3986,"KRN",9.8,"NM",120,0)
RCDPURET^^0^B47778239
"BLD",3986,"KRN",9.8,"NM",121,0)
RCDPEM2^^0^B44182580
"BLD",3986,"KRN",9.8,"NM",122,0)
RCDPEWLA^^0^B40306121
"BLD",3986,"KRN",9.8,"NM",123,0)
RCDPE215^^0^B81325468
"BLD",3986,"KRN",9.8,"NM",124,0)
RCBEADJ^^0^B57558096
"BLD",3986,"KRN",9.8,"NM","B","PRCABJ",2)

"BLD",3986,"KRN",9.8,"NM","B","PRCABJV",116)

"BLD",3986,"KRN",9.8,"NM","B","PRCAFBD",14)

"BLD",3986,"KRN",9.8,"NM","B","PRCAUDT",12)

"BLD",3986,"KRN",9.8,"NM","B","PRCAUDT1",13)

"BLD",3986,"KRN",9.8,"NM","B","PRCAUT3",72)

"BLD",3986,"KRN",9.8,"NM","B","RCBEADJ",124)

"BLD",3986,"KRN",9.8,"NM","B","RCDPDPL1",36)

"BLD",3986,"KRN",9.8,"NM","B","RCDPDPLU",30)

"BLD",3986,"KRN",9.8,"NM","B","RCDPE215",123)

"BLD",3986,"KRN",9.8,"NM","B","RCDPE8NZ",114)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEAR",74)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEAR1",75)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEAR2",76)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEDA1",77)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEDAR",78)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEDS",79)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEM",80)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEM0",81)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEM1",82)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEM2",121)

"BLD",3986,"KRN",9.8,"NM","B","RCDPESR0",83)

"BLD",3986,"KRN",9.8,"NM","B","RCDPESR1",84)

"BLD",3986,"KRN",9.8,"NM","B","RCDPESR2",85)

"BLD",3986,"KRN",9.8,"NM","B","RCDPESR3",86)

"BLD",3986,"KRN",9.8,"NM","B","RCDPESR4",87)

"BLD",3986,"KRN",9.8,"NM","B","RCDPESR5",88)

"BLD",3986,"KRN",9.8,"NM","B","RCDPESR6",89)

"BLD",3986,"KRN",9.8,"NM","B","RCDPESR8",90)

"BLD",3986,"KRN",9.8,"NM","B","RCDPESR9",91)

"BLD",3986,"KRN",9.8,"NM","B","RCDPESRV",92)

"BLD",3986,"KRN",9.8,"NM","B","RCDPETR",93)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEU",94)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEWL",95)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEWL0",96)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEWL1",97)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEWL2",98)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEWL3",105)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEWL4",106)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEWL5",107)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEWL6",113)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEWLA",122)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEX",99)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEX0",100)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEX1",101)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEX2",102)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEX3",103)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEX31",104)

"BLD",3986,"KRN",9.8,"NM","B","RCDPEX32",119)

"BLD",3986,"KRN",9.8,"NM","B","RCDPR215",118)

"BLD",3986,"KRN",9.8,"NM","B","RCDPRPL2",17)

"BLD",3986,"KRN",9.8,"NM","B","RCDPRPL3",42)

"BLD",3986,"KRN",9.8,"NM","B","RCDPRPL4",117)

"BLD",3986,"KRN",9.8,"NM","B","RCDPRPLM",34)

"BLD",3986,"KRN",9.8,"NM","B","RCDPRPLU",73)

"BLD",3986,"KRN",9.8,"NM","B","RCDPUDEP",40)

"BLD",3986,"KRN",9.8,"NM","B","RCDPURE1",16)

"BLD",3986,"KRN",9.8,"NM","B","RCDPUREC",41)

"BLD",3986,"KRN",9.8,"NM","B","RCDPURET",120)

"BLD",3986,"KRN",9.8,"NM","B","RCFMFN02",115)

"BLD",3986,"KRN",9.8,"NM","B","RCMSITE",1)

"BLD",3986,"KRN",9.8,"NM","B","RCXFMSC1",110)

"BLD",3986,"KRN",9.8,"NM","B","RCXFMSCR",111)

"BLD",3986,"KRN",9.8,"NM","B","RCXFMST1",112)

"BLD",3986,"KRN",9.8,"NM","B","RCXFMSUF",108)

"BLD",3986,"KRN",9.8,"NM","B","RCXFMSUR",109)

"BLD",3986,"KRN",19,0)
19
"BLD",3986,"KRN",19,"NM",0)
^9.68A^28^24
"BLD",3986,"KRN",19,"NM",2,0)
PRCA SITE PARAMETER^^2
"BLD",3986,"KRN",19,"NM",4,0)
RCDPE EXCEPTION PROCESSING^^0
"BLD",3986,"KRN",19,"NM",5,0)
RCDPE EFT AGING REPORT^^0
"BLD",3986,"KRN",19,"NM",7,0)
RCDPE EDI LOCKBOX PARAMETERS^^0
"BLD",3986,"KRN",19,"NM",9,0)
RCDPE EDI LOCKBOX SERVER^^0
"BLD",3986,"KRN",19,"NM",10,0)
RCDPE EDI LOCKBOX WORKLIST^^0
"BLD",3986,"KRN",19,"NM",11,0)
RCDPE ERA AGING REPORT^^0
"BLD",3986,"KRN",19,"NM",12,0)
RCDPE MATCH EFT TO ERA^^0
"BLD",3986,"KRN",19,"NM",13,0)
RCDPE EDI LOCKBOX MENU^^0
"BLD",3986,"KRN",19,"NM",14,0)
RCDPE EOB TRANSFER REPORTS^^0
"BLD",3986,"KRN",19,"NM",15,0)
PRCA CLERK MENU^^2
"BLD",3986,"KRN",19,"NM",16,0)
RCDPE EDI LOCKBOX ACT REPORT^^0
"BLD",3986,"KRN",19,"NM",17,0)
RCDPE UNAPPLIED EFT DEP REPORT^^0
"BLD",3986,"KRN",19,"NM",18,0)
RCDPE EDI LOCKBOX REPORTS MENU^^0
"BLD",3986,"KRN",19,"NM",19,0)
RCDPE MANUAL MATCH EFT-ERA^^0
"BLD",3986,"KRN",19,"NM",20,0)
RCDPE MARK 0-BAL EFT MATCHED^^0
"BLD",3986,"KRN",19,"NM",21,0)
RCDPE MOVE ERA TO SUSPENSE^^0
"BLD",3986,"KRN",19,"NM",22,0)
RCDPE RATE TYPE AUTO AUDIT^^0
"BLD",3986,"KRN",19,"NM",23,0)
PRCAF SUPERVISOR MENU^^2
"BLD",3986,"KRN",19,"NM",24,0)
RCDP AGENT CASHIER MENU^^2
"BLD",3986,"KRN",19,"NM",25,0)
RCDP SUMMARY 215 REPORT^^0
"BLD",3986,"KRN",19,"NM",26,0)
RCDPE ERA POSTED BY PAPER EOB^^0
"BLD",3986,"KRN",19,"NM",27,0)
RCDPE VIEW/PRINT ERA^^0
"BLD",3986,"KRN",19,"NM",28,0)
RCDPE UNMATCH ERA^^0
"BLD",3986,"KRN",19,"NM","B","PRCA CLERK MENU",15)

"BLD",3986,"KRN",19,"NM","B","PRCA SITE PARAMETER",2)

"BLD",3986,"KRN",19,"NM","B","PRCAF SUPERVISOR MENU",23)

"BLD",3986,"KRN",19,"NM","B","RCDP AGENT CASHIER MENU",24)

"BLD",3986,"KRN",19,"NM","B","RCDP SUMMARY 215 REPORT",25)

"BLD",3986,"KRN",19,"NM","B","RCDPE EDI LOCKBOX ACT REPORT",16)

"BLD",3986,"KRN",19,"NM","B","RCDPE EDI LOCKBOX MENU",13)

"BLD",3986,"KRN",19,"NM","B","RCDPE EDI LOCKBOX PARAMETERS",7)

"BLD",3986,"KRN",19,"NM","B","RCDPE EDI LOCKBOX REPORTS MENU",18)

"BLD",3986,"KRN",19,"NM","B","RCDPE EDI LOCKBOX SERVER",9)

"BLD",3986,"KRN",19,"NM","B","RCDPE EDI LOCKBOX WORKLIST",10)

"BLD",3986,"KRN",19,"NM","B","RCDPE EFT AGING REPORT",5)

"BLD",3986,"KRN",19,"NM","B","RCDPE EOB TRANSFER REPORTS",14)

"BLD",3986,"KRN",19,"NM","B","RCDPE ERA AGING REPORT",11)

"BLD",3986,"KRN",19,"NM","B","RCDPE ERA POSTED BY PAPER EOB",26)

"BLD",3986,"KRN",19,"NM","B","RCDPE EXCEPTION PROCESSING",4)

"BLD",3986,"KRN",19,"NM","B","RCDPE MANUAL MATCH EFT-ERA",19)

"BLD",3986,"KRN",19,"NM","B","RCDPE MARK 0-BAL EFT MATCHED",20)

"BLD",3986,"KRN",19,"NM","B","RCDPE MATCH EFT TO ERA",12)

"BLD",3986,"KRN",19,"NM","B","RCDPE MOVE ERA TO SUSPENSE",21)

"BLD",3986,"KRN",19,"NM","B","RCDPE RATE TYPE AUTO AUDIT",22)

"BLD",3986,"KRN",19,"NM","B","RCDPE UNAPPLIED EFT DEP REPORT",17)

"BLD",3986,"KRN",19,"NM","B","RCDPE UNMATCH ERA",28)

"BLD",3986,"KRN",19,"NM","B","RCDPE VIEW/PRINT ERA",27)

"BLD",3986,"KRN",19.1,0)
19.1
"BLD",3986,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",3986,"KRN",19.1,"NM",1,0)
PRCA EDI LOCKBOX CHARGES^^0
"BLD",3986,"KRN",19.1,"NM","B","PRCA EDI LOCKBOX CHARGES",1)

"BLD",3986,"KRN",101,0)
101
"BLD",3986,"KRN",101,"NM",0)
^9.68A^66^42
"BLD",3986,"KRN",101,"NM",3,0)
VALM QUIT^^4^
"BLD",3986,"KRN",101,"NM",21,0)
RCDPE EOB WORKLIST CHG MAINT^^0
"BLD",3986,"KRN",101,"NM",22,0)
RCDPE EOB WORKLIST CL MATCH RPT^^0
"BLD",3986,"KRN",101,"NM",24,0)
RCDPE EOB WORKLIST DIST ADJ^^0
"BLD",3986,"KRN",101,"NM",25,0)
RCDPE EOB WORKLIST MENU^^0
"BLD",3986,"KRN",101,"NM",26,0)
RCDPE EOB WORKLIST ON HOLD RPT^^0
"BLD",3986,"KRN",101,"NM",27,0)
RCDPE EOB WORKLIST REFRESH^^0
"BLD",3986,"KRN",101,"NM",28,0)
RCDPE EOB WORKLIST REL HOLD^^0
"BLD",3986,"KRN",101,"NM",29,0)
RCDPE EOB WORKLIST RESEARCH MENU^^0
"BLD",3986,"KRN",101,"NM",30,0)
RCDPE EOB WORKLIST SPLIT LINE^^0
"BLD",3986,"KRN",101,"NM",31,0)
RCDPE EOB WORKLIST TPJI^^0
"BLD",3986,"KRN",101,"NM",32,0)
RCDPE VIEW/PRINT WORKLIST EOB^^0
"BLD",3986,"KRN",101,"NM",33,0)
RCDPE VIEW/PRINT WORKLIST ERA^^0
"BLD",3986,"KRN",101,"NM",34,0)
RCDPEX DELETE MESSAGE^^0
"BLD",3986,"KRN",101,"NM",35,0)
RCDPEX EOB EXCEPTION MENU^^0
"BLD",3986,"KRN",101,"NM",36,0)
RCDPEX EOB_SUM EXCEPTION MENU^^0
"BLD",3986,"KRN",101,"NM",37,0)
RCDPEX EOB_SUM REMOVE EXCEPT^^0
"BLD",3986,"KRN",101,"NM",38,0)
RCDPEX FILE EXCEPTION MESSAGE^^0
"BLD",3986,"KRN",101,"NM",39,0)
RCDPEX SUM_FILE EXCEPTION^^0
"BLD",3986,"KRN",101,"NM",40,0)
RCDPEX SUM_TRANSFER EOB OUT^^0
"BLD",3986,"KRN",101,"NM",41,0)
RCDPEX SUM_VIEW/PRINT MESSAGE^^0
"BLD",3986,"KRN",101,"NM",42,0)
RCDPEX VIEW/PRINT MESSAGE^^0
"BLD",3986,"KRN",101,"NM",43,0)
RCDPE EOB WORKLIST RECEIPT^^0
"BLD",3986,"KRN",101,"NM",44,0)
RCDPE EOB WL RESEARCH EXIT^^0
"BLD",3986,"KRN",101,"NM",46,0)
RCDPE EOB WORKLIST RESEARCH^^0
"BLD",3986,"KRN",101,"NM",47,0)
RCDPE EOB WL EDIT SPLIT^^0
"BLD",3986,"KRN",101,"NM",48,0)
RCDPE EOB WL SPLIT LINE^^0
"BLD",3986,"KRN",101,"NM",50,0)
RCDPE EOB WORKLIST SPLIT MENU^^0
"BLD",3986,"KRN",101,"NM",51,0)
RCDPE EOB WL RECEIPT VIEW^^0
"BLD",3986,"KRN",101,"NM",53,0)
RCDPE EOB WORKLIST PREVIEW MENU^^0
"BLD",3986,"KRN",101,"NM",54,0)
RCDPE EOB WORKLIST PREVIEW PRINT^^0
"BLD",3986,"KRN",101,"NM",55,0)
VALM PRINT LIST^^4^
"BLD",3986,"KRN",101,"NM",56,0)
RCDP RECEIPT PROFILE MENU^^2
"BLD",3986,"KRN",101,"NM",57,0)
RCDP RECEIPT PROFILE ERA WORKLIST^^0
"BLD",3986,"KRN",101,"NM",58,0)
VALM BLANK 1^^4^
"BLD",3986,"KRN",101,"NM",59,0)
RCDPE EOB WORKLIST BILL COMMENT^^0
"BLD",3986,"KRN",101,"NM",61,0)
RCDPE EOB WORKLIST REESTABLISH^^0
"BLD",3986,"KRN",101,"NM",62,0)
RCDPE EOB WORKLIST RECEIPT COMMENT^^0
"BLD",3986,"KRN",101,"NM",63,0)
RCDPEX SUM_EDIT CLAIM^^0
"BLD",3986,"KRN",101,"NM",64,0)
RCDPE EOB WL REVIEW^^0
"BLD",3986,"KRN",101,"NM",65,0)
RCDPE EOB WORKLIST ADJUST^^0
"BLD",3986,"KRN",101,"NM",66,0)
RCDPE EOB WORKLIST FULL ACCT PROF^^0
"BLD",3986,"KRN",101,"NM","B","RCDP RECEIPT PROFILE ERA WORKLIST",57)

"BLD",3986,"KRN",101,"NM","B","RCDP RECEIPT PROFILE MENU",56)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WL EDIT SPLIT",47)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WL RECEIPT VIEW",51)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WL RESEARCH EXIT",44)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WL REVIEW",64)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WL SPLIT LINE",48)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST ADJUST",65)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST BILL COMMENT",59)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST CHG MAINT",21)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST CL MATCH RPT",22)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST DIST ADJ",24)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST FULL ACCT PROF",66)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST MENU",25)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST ON HOLD RPT",26)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST PREVIEW MENU",53)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST PREVIEW PRINT",54)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST RECEIPT",43)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST RECEIPT COMMENT",62)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST REESTABLISH",61)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST REFRESH",27)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST REL HOLD",28)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST RESEARCH",46)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST RESEARCH MENU",29)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST SPLIT LINE",30)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST SPLIT MENU",50)

"BLD",3986,"KRN",101,"NM","B","RCDPE EOB WORKLIST TPJI",31)

"BLD",3986,"KRN",101,"NM","B","RCDPE VIEW/PRINT WORKLIST EOB",32)

"BLD",3986,"KRN",101,"NM","B","RCDPE VIEW/PRINT WORKLIST ERA",33)

"BLD",3986,"KRN",101,"NM","B","RCDPEX DELETE MESSAGE",34)

"BLD",3986,"KRN",101,"NM","B","RCDPEX EOB EXCEPTION MENU",35)

"BLD",3986,"KRN",101,"NM","B","RCDPEX EOB_SUM EXCEPTION MENU",36)

"BLD",3986,"KRN",101,"NM","B","RCDPEX EOB_SUM REMOVE EXCEPT",37)

"BLD",3986,"KRN",101,"NM","B","RCDPEX FILE EXCEPTION MESSAGE",38)

"BLD",3986,"KRN",101,"NM","B","RCDPEX SUM_EDIT CLAIM",63)

"BLD",3986,"KRN",101,"NM","B","RCDPEX SUM_FILE EXCEPTION",39)

"BLD",3986,"KRN",101,"NM","B","RCDPEX SUM_TRANSFER EOB OUT",40)

"BLD",3986,"KRN",101,"NM","B","RCDPEX SUM_VIEW/PRINT MESSAGE",41)

"BLD",3986,"KRN",101,"NM","B","RCDPEX VIEW/PRINT MESSAGE",42)

"BLD",3986,"KRN",101,"NM","B","VALM BLANK 1",58)

"BLD",3986,"KRN",101,"NM","B","VALM PRINT LIST",55)

"BLD",3986,"KRN",101,"NM","B","VALM QUIT",3)

"BLD",3986,"KRN",409.61,0)
409.61
"BLD",3986,"KRN",409.61,"NM",0)
^9.68A^9^7
"BLD",3986,"KRN",409.61,"NM",3,0)
RCDPE EOB WORKLIST^^0
"BLD",3986,"KRN",409.61,"NM",4,0)
RCDPEX EOB EXCEPTION LIST^^0
"BLD",3986,"KRN",409.61,"NM",5,0)
RCDPEX EOB_SUM EXCEPTION LIST^^0
"BLD",3986,"KRN",409.61,"NM",6,0)
RCDPE EOB RESEARCH^^0
"BLD",3986,"KRN",409.61,"NM",7,0)
RCDPE EOB WORKLIST SPLIT^^0
"BLD",3986,"KRN",409.61,"NM",8,0)
RCDPE EOB RECEIPT PREVIEW^^0
"BLD",3986,"KRN",409.61,"NM",9,0)
RCDP RECEIPT PROFILE^^0
"BLD",3986,"KRN",409.61,"NM","B","RCDP RECEIPT PROFILE",9)

"BLD",3986,"KRN",409.61,"NM","B","RCDPE EOB RECEIPT PREVIEW",8)

"BLD",3986,"KRN",409.61,"NM","B","RCDPE EOB RESEARCH",6)

"BLD",3986,"KRN",409.61,"NM","B","RCDPE EOB WORKLIST",3)

"BLD",3986,"KRN",409.61,"NM","B","RCDPE EOB WORKLIST SPLIT",7)

"BLD",3986,"KRN",409.61,"NM","B","RCDPEX EOB EXCEPTION LIST",4)

"BLD",3986,"KRN",409.61,"NM","B","RCDPEX EOB_SUM EXCEPTION LIST",5)

"BLD",3986,"KRN",771,0)
771
"BLD",3986,"KRN",771,"NM",0)
^9.68A^^
"BLD",3986,"KRN",870,0)
870
"BLD",3986,"KRN",8989.51,0)
8989.51
"BLD",3986,"KRN",8989.52,0)
8989.52
"BLD",3986,"KRN",8994,0)
8994
"BLD",3986,"KRN","B",.4,.4)

"BLD",3986,"KRN","B",.401,.401)

"BLD",3986,"KRN","B",.402,.402)

"BLD",3986,"KRN","B",.403,.403)

"BLD",3986,"KRN","B",.5,.5)

"BLD",3986,"KRN","B",.84,.84)

"BLD",3986,"KRN","B",3.6,3.6)

"BLD",3986,"KRN","B",3.8,3.8)

"BLD",3986,"KRN","B",9.2,9.2)

"BLD",3986,"KRN","B",9.8,9.8)

"BLD",3986,"KRN","B",19,19)

"BLD",3986,"KRN","B",19.1,19.1)

"BLD",3986,"KRN","B",101,101)

"BLD",3986,"KRN","B",409.61,409.61)

"BLD",3986,"KRN","B",771,771)

"BLD",3986,"KRN","B",870,870)

"BLD",3986,"KRN","B",8989.51,8989.51)

"BLD",3986,"KRN","B",8989.52,8989.52)

"BLD",3986,"KRN","B",8994,8994)

"BLD",3986,"QUES",0)
^9.62^^
"BLD",3986,"REQB",0)
^9.611^9^6
"BLD",3986,"REQB",2,0)
PRCA*4.5*98^2
"BLD",3986,"REQB",3,0)
PRCA*4.5*107^2
"BLD",3986,"REQB",4,0)
PRCA*4.5*149^2
"BLD",3986,"REQB",5,0)
PRCA*4.5*167^2
"BLD",3986,"REQB",8,0)
PRCA*4.5*176^2
"BLD",3986,"REQB",9,0)
PRCA*4.5*207^2
"BLD",3986,"REQB","B","PRCA*4.5*107",3)

"BLD",3986,"REQB","B","PRCA*4.5*149",4)

"BLD",3986,"REQB","B","PRCA*4.5*167",5)

"BLD",3986,"REQB","B","PRCA*4.5*176",8)

"BLD",3986,"REQB","B","PRCA*4.5*207",9)

"BLD",3986,"REQB","B","PRCA*4.5*98",2)

"DATA",341.1,14,0)
EDI LOCKBOX^14^^^^1
"DATA",347.1,9,0)
TRANSFER-EDI LOCKBOX DETAIL^TR
"DATA",347.4,1,0)
01^1^01^01^^3^18
"DATA",347.4,1,1)
REFUND RECEIVABLE
"DATA",347.4,2,0)
02^1^05^02^^3^75
"DATA",347.4,2,1)
REIMBURSEMENT RECEIVABLE
"DATA",347.4,4,0)
20^1^20^20^^1^65
"DATA",347.4,4,1)
SALARY OVERPAYMENTS
"DATA",347.4,5,0)
24^1^05^02^^^75
"DATA",347.4,5,1)
INELEIGABLE HEALTH
"DATA",347.4,6,0)
50^1^05^23^^3^33
"DATA",347.4,6,1)
TORT FEASOR
"DATA",347.4,7,0)
09^1^23^04^^3^33
"DATA",347.4,7,1)
GENERAL FUND RECEIVABLE
"DATA",347.4,8,0)
10^1^60^01^10^3^60
"DATA",347.4,8,1)
COMPENSATED WORK THERAPY
"DATA",347.4,9,0)
25^1^17^02^^3^24
"DATA",347.4,9,1)
PATIENT FUNDS
"FIA",341.1)
AR EVENT TYPE
"FIA",341.1,0)
^RC(341.1,
"FIA",341.1,0,0)
341.1
"FIA",341.1,0,1)
n^n^f^^n^^y^o^n
"FIA",341.1,0,10)

"FIA",341.1,0,11)
I $P($G(^RC(341.1,Y,0)),U,2)=14
"FIA",341.1,0,"RLRO")

"FIA",341.1,0,"VR")
4.5^PRCA
"FIA",341.1,341.1)
0
"FIA",342)
AR SITE PARAMETER
"FIA",342,0)
^RC(342,
"FIA",342,0,0)
342P
"FIA",342,0,1)
y^n^p^^^^n
"FIA",342,0,10)

"FIA",342,0,11)

"FIA",342,0,"RLRO")

"FIA",342,0,"VR")
4.5^PRCA
"FIA",342,342)
1
"FIA",342,342,7.02)

"FIA",342,342,7.03)

"FIA",344)
AR BATCH PAYMENT
"FIA",344,0)
^RCY(344,
"FIA",344,0,0)
344I
"FIA",344,0,1)
y^n^p^^^^n
"FIA",344,0,10)

"FIA",344,0,11)

"FIA",344,0,"RLRO")

"FIA",344,0,"VR")
4.5^PRCA
"FIA",344,344)
1
"FIA",344,344,.16)

"FIA",344,344,.17)

"FIA",344,344,.18)

"FIA",344,344,1)

"FIA",344,344.01)
1
"FIA",344,344.01,.01)

"FIA",344,344.01,.27)

"FIA",344,344.01,.28)

"FIA",344.3)
EDI LOCKBOX DEPOSIT
"FIA",344.3,0)
^RCY(344.3,
"FIA",344.3,0,0)
344.3I
"FIA",344.3,0,1)
y^n^f^^^^n
"FIA",344.3,0,10)

"FIA",344.3,0,11)

"FIA",344.3,0,"RLRO")

"FIA",344.3,0,"VR")
4.5^PRCA
"FIA",344.3,344.3)
0
"FIA",344.3,344.32)
0
"FIA",344.31)
EDI THIRD PARTY EFT DETAIL
"FIA",344.31,0)
^RCY(344.31,
"FIA",344.31,0,0)
344.31PI
"FIA",344.31,0,1)
y^n^f^^^^n
"FIA",344.31,0,10)

"FIA",344.31,0,11)

"FIA",344.31,0,"RLRO")

"FIA",344.31,0,"VR")
4.5^PRCA
"FIA",344.31,344.31)
0
"FIA",344.31,344.312)
0
"FIA",344.4)
ELECTRONIC REMITTANCE ADVICE
"FIA",344.4,0)
^RCY(344.4,
"FIA",344.4,0,0)
344.4I
"FIA",344.4,0,1)
y^n^f^^^^n
"FIA",344.4,0,10)

"FIA",344.4,0,11)

"FIA",344.4,0,"RLRO")

"FIA",344.4,0,"VR")
4.5^PRCA
"FIA",344.4,344.4)
0
"FIA",344.4,344.41)
0
"FIA",344.4,344.411)
0
"FIA",344.4,344.412)
0
"FIA",344.4,344.42)
0
"FIA",344.49)
EDI LOCKBOX EOB WORKLIST
"FIA",344.49,0)
^RCY(344.49,
"FIA",344.49,0,0)
344.49P
"FIA",344.49,0,1)
y^n^f^^^^n
"FIA",344.49,0,10)

"FIA",344.49,0,11)

"FIA",344.49,0,"RLRO")

"FIA",344.49,0,"VR")
4.5^PRCA
"FIA",344.49,344.49)
0
"FIA",344.49,344.491)
0
"FIA",344.49,344.4911)
0
"FIA",344.49,344.4913)
0
"FIA",344.5)
AR EDI LOCKBOX MESSAGES
"FIA",344.5,0)
^RCY(344.5,
"FIA",344.5,0,0)
344.5
"FIA",344.5,0,1)
y^n^f^^^^n
"FIA",344.5,0,10)

"FIA",344.5,0,11)

"FIA",344.5,0,"RLRO")

"FIA",344.5,0,"VR")
4.5^PRCA
"FIA",344.5,344.5)
0
"FIA",344.5,344.51)
0
"FIA",344.5,344.52)
0
"FIA",344.5,344.53)
0
"FIA",344.5,344.54)
0
"FIA",344.5,344.55)
0
"FIA",347.1)
AR FMS DOCUMENT TYPE
"FIA",347.1,0)
^RC(347.1,
"FIA",347.1,0,0)
347.1
"FIA",347.1,0,1)
n^n^f^^n^^y^o^n
"FIA",347.1,0,10)

"FIA",347.1,0,11)
I +Y=9
"FIA",347.1,0,"RLRO")

"FIA",347.1,0,"VR")
4.5^PRCA
"FIA",347.1,347.1)
0
"FIA",347.4)
AR/FMS DOCUMENTS
"FIA",347.4,0)
^PRCA(347.4,
"FIA",347.4,0,0)
347.4I
"FIA",347.4,0,1)
y^n^f^^n^^y^o^n
"FIA",347.4,0,10)

"FIA",347.4,0,11)

"FIA",347.4,0,"RLRO")

"FIA",347.4,0,"VR")
4.5^PRCA
"FIA",347.4,347.4)
0
"INIT")
RCY173PO
"IX",344.3,344.3,"ADEP",0)
344.3^ADEP^Xref by deposit date and deposit number^R^^R^IR^I^344.3^^^^^S
"IX",344.3,344.3,"ADEP",1)
S ^RCY(344.3,"ADEP",X(1),$E(X(2),1,30),DA)=""
"IX",344.3,344.3,"ADEP",2)
K ^RCY(344.3,"ADEP",X(1),$E(X(2),1,30),DA)
"IX",344.3,344.3,"ADEP",2.5)
K ^RCY(344.3,"ADEP")
"IX",344.3,344.3,"ADEP",11.1,0)
^.114IA^2^2
"IX",344.3,344.3,"ADEP",11.1,1,0)
1^F^344.3^.07^^1^F
"IX",344.3,344.3,"ADEP",11.1,2,0)
2^F^344.3^.06^30^2^F
"IX",344.3,344.3,"APOST",0)
344.3^APOST^Xref on pure numeric value of amt posted ^MU^^F^IR^I^344.3^^^^^S
"IX",344.3,344.3,"APOST",1)
S ^RCY(344.3,"APOST",+X,DA)=""
"IX",344.3,344.3,"APOST",2)
K ^RCY(344.3,"APOST",+X,DA)
"IX",344.3,344.3,"APOST",2.5)
K ^RCY(344.3,"APOST")
"IX",344.3,344.3,"APOST",11.1,0)
^.114IA^1^1
"IX",344.3,344.3,"APOST",11.1,1,0)
1^F^344.3^.12^^^F
"IX",344.3,344.3,"APOST",11.1,1,3)

"IX",344.4,344.4,"ARCT",0)
344.4^ARCT^Cross reference by AR receipt #^R^^F^IR^I^344.4^^^^^S
"IX",344.4,344.4,"ARCT",1)
S ^RCY(344.4,"ARCT",X,DA)=""
"IX",344.4,344.4,"ARCT",2)
K ^RCY(344.4,"ARCT",X,DA)
"IX",344.4,344.4,"ARCT",2.5)
K ^RCY(344.4,"ARCT")
"IX",344.4,344.4,"ARCT",11.1,0)
^.114IA^1^1
"IX",344.4,344.4,"ARCT",11.1,1,0)
1^F^344.4^.08^^1^F
"IX",344.4,344.4,"ATRID",0)
344.4^ATRID^Xref by bank trace # and ins co id #^R^^R^IR^I^344.4^^^^^S
"IX",344.4,344.4,"ATRID",1)
S ^RCY(344.4,"ATRID",$E(X(1),1,30),$E(X(2),1,30),DA)=""
"IX",344.4,344.4,"ATRID",2)
K ^RCY(344.4,"ATRID",$E(X(1),1,30),$E(X(2),1,30),DA)
"IX",344.4,344.4,"ATRID",2.5)
K ^RCY(344.4,"ATRID")
"IX",344.4,344.4,"ATRID",11.1,0)
^.114IA^2^2
"IX",344.4,344.4,"ATRID",11.1,1,0)
1^F^344.4^.02^30^1^F
"IX",344.4,344.4,"ATRID",11.1,1,3)

"IX",344.4,344.4,"ATRID",11.1,2,0)
2^F^344.4^.03^30^2^F
"IX",344.4,344.4,"ATRID",11.1,2,3)

"IX",344.4,344.41,"AVAL",0)
344.41^AVAL^Xref to find EOBs for bills not valid in VistA^MU^^R^IR^I^344.41^^^^^S
"IX",344.4,344.41,"AVAL",.1,0)
^^4^4^3020626^
"IX",344.4,344.41,"AVAL",.1,1,0)
This cross reference is set when the free text bill number is entered for
"IX",344.4,344.41,"AVAL",.1,2,0)
the EOB detail and when the EOB detail pointer is deleted.  This cross
"IX",344.4,344.41,"AVAL",.1,3,0)
reference makes it possible to find those bills that do not belong to
"IX",344.4,344.41,"AVAL",.1,4,0)
the site, but were included in the ERA received from an insurance co.
"IX",344.4,344.41,"AVAL",1)
S ^RCY(344.4,DA(1),1,"AVAL",DA)=""
"IX",344.4,344.41,"AVAL",1.4)
S X=$S(X2(1)="":1,1:0)
"IX",344.4,344.41,"AVAL",2)
K ^RCY(344.4,DA(1),1,"AVAL",DA)
"IX",344.4,344.41,"AVAL",2.4)
S X=$S(X2(1)'="":1,1:0)
"IX",344.4,344.41,"AVAL",2.5)
K ^RCY(344.4,DA(1),1,"AVAL")
"IX",344.4,344.41,"AVAL",11.1,0)
^.114IA^2^2
"IX",344.4,344.41,"AVAL",11.1,1,0)
1^F^344.41^.02^^^F
"IX",344.4,344.41,"AVAL",11.1,2,0)
2^F^344.41^.05^^^F
"IX",344.5,344.5,"AEXC",0)
344.5^AEXC^Cross reference by records with exception condition^R^^F^IR^I^344.5^^^^^S
"IX",344.5,344.5,"AEXC",1)
S ^RCY(344.5,"AEXC",X,DA)=""
"IX",344.5,344.5,"AEXC",1.4)
I X=1
"IX",344.5,344.5,"AEXC",2)
K ^RCY(344.5,"AEXC",X,DA)
"IX",344.5,344.5,"AEXC",2.5)
K ^RCY(344.5,"AEXC")
"IX",344.5,344.5,"AEXC",11.1,0)
^.114IA^1^1
"IX",344.5,344.5,"AEXC",11.1,1,0)
1^F^344.5^.08^^1^F
"IX",344.5,344.5,"AEXC",11.1,1,3)

"IX",344.5,344.5,"ATIN",0)
344.5^ATIN^Xref by file date and transferred from for message type = '835XFR'^R^^R^IR^I^344.5^^^^^S
"IX",344.5,344.5,"ATIN",1)
S ^RCY(344.5,"ATIN",X(1),$E(X(2),1,30),DA)=""
"IX",344.5,344.5,"ATIN",1.4)
I $P($G(^RCY(344.5,DA,0)),U)["XFR"
"IX",344.5,344.5,"ATIN",2)
K ^RCY(344.5,"ATIN",X(1),$E(X(2),1,30),DA)
"IX",344.5,344.5,"ATIN",2.4)
I $P($G(^RCY(344.5,DA,0)),U)["XFR"
"IX",344.5,344.5,"ATIN",2.5)
K ^RCY(344.5,"ATIN")
"IX",344.5,344.5,"ATIN",11.1,0)
^.114IA^2^2
"IX",344.5,344.5,"ATIN",11.1,1,0)
1^F^344.5^.03^^1^F
"IX",344.5,344.5,"ATIN",11.1,2,0)
2^F^344.5^.12^30^2^F
"IX",344.5,344.54,"AV",0)
344.54^AV^Cross reference on valid bills in the ERA^R^^F^IR^I^344.54^^^^^S
"IX",344.5,344.54,"AV",1)
S ^RCY(344.5,DA(1),"B","AV",X,DA)=""
"IX",344.5,344.54,"AV",1.4)
I X=1
"IX",344.5,344.54,"AV",2)
K ^RCY(344.5,DA(1),"B","AV",X,DA)
"IX",344.5,344.54,"AV",2.5)
K ^RCY(344.5,DA(1),"B","AV")
"IX",344.5,344.54,"AV",11.1,0)
^.114IA^1^1
"IX",344.5,344.54,"AV",11.1,1,0)
1^F^344.54^.02^^1^F
"IX",344.5,344.54,"AV",11.1,1,3)

"KRN",.402,396,-1)
0^2
"KRN",.402,396,0)
PRCA CAUSED BY^3030820.1224^^430^^^3030820
"KRN",.402,396,"%D",0)
^^2^2^2881006^^
"KRN",.402,396,"%D",1,0)
This template changes the cause of a bill.
"KRN",.402,396,"%D",2,0)
OPTION: PRCA BILL RESULTING
"KRN",.402,396,"DIAB",2,0,430,0)
4.5;"BILL RESULTING FROM"
"KRN",.402,396,"DR",1,430)
I $G(PRAUTOA) S Y="@10";4.5BILL RESULTING FROM~;S:'$D(PRCAT("C")) Y="";15.1;S PRCAQTY=$P(^PRCA(430.2,+X,0),U,3);20.1////^S X=PRCAQTY;K PRCAQTY;S Y="@99";@10;
"KRN",.402,396,"DR",1,430,1)
S DIPA("BRF")=$P($G(^DGCR(399.3,+$P($G(^DGCR(399,PRCABN,0)),U,7),0)),U,11) I 'DIPA("BRF") S Y="@99";4.5////^S X=DIPA("BRF");@99;
"KRN",.402,2637,-1)
0^1
"KRN",.402,2637,0)
RCMS EDI LOCKBOX^3021106.1422^@^342^^@^3030711
"KRN",.402,2637,"DR",1,342)
7.02;7.03;
"KRN",3.8,321,-1)
0^2
"KRN",3.8,321,0)
RCDPE PAYMENTS^PU^^^^^
"KRN",3.8,321,2,0)
^^2^2^3030318^
"KRN",3.8,321,2,1,0)
This is the mail group that will receive most of the bulletins produced 
"KRN",3.8,321,2,2,0)
by the 3rd Party EDI Lockbox process in VistA.
"KRN",3.8,321,3)

"KRN",3.8,6104,-1)
0^4
"KRN",3.8,6104,0)
RCDPE PAYMENTS MGMT^PU^^^^^
"KRN",3.8,6104,2,0)
^3.801^2^2^3030410^^
"KRN",3.8,6104,2,1,0)
This is the mail group for 3rd Part EDI Lockbox processing that will 
"KRN",3.8,6104,2,2,0)
receive the bulletins regarding the transfer of EOBs to another site.
"KRN",3.8,6104,3)

"KRN",3.8,6105,-1)
0^5
"KRN",3.8,6105,0)
MLB^PU^n^^^^
"KRN",3.8,6105,2,0)
^^2^2^3030410^
"KRN",3.8,6105,2,1,0)
This is the mail queue that will receive all the EDI 3rd Party Lockbox
"KRN",3.8,6105,2,2,0)
transmissions from Austin.
"KRN",3.8,6105,3)

"KRN",3.8,6105,6,0)
^3.812^^0
"KRN",3.8,6109,-1)
0^6
"KRN",3.8,6109,0)
RCDPE PAYMENTS EXCEPTIONS^PU^^^^^
"KRN",3.8,6109,2,0)
^3.801^3^3^3030425^^
"KRN",3.8,6109,2,1,0)
This is the mail group that will receive the bulletins produced by the
"KRN",3.8,6109,2,2,0)
3rd Party EDI Lockbox process that relate to exceptions found when the EFT
"KRN",3.8,6109,2,3,0)
and ERA messages are received in VistA.
"KRN",3.8,6109,3)

"KRN",19,1403,-1)
2^15
"KRN",19,1403,0)
PRCA CLERK MENU^Clerk's AR Menu^^M^.5^^^^^^^^^1^1
"KRN",19,1403,10,0)
^19.01IP^21^21
"KRN",19,1403,10,20,0)
10072
"KRN",19,1403,10,20,"^")
RCDP AGENT CASHIER MENU
"KRN",19,1403,10,21,0)
11559
"KRN",19,1403,10,21,"^")
RCDPE EDI LOCKBOX MENU
"KRN",19,1403,"U")
CLERK'S AR MENU
"KRN",19,1423,-1)
2^23
"KRN",19,1423,0)
PRCAF SUPERVISOR MENU^Supervisor's AR Menu^^M^13202^^^^^^^142^^1^1
"KRN",19,1423,10,0)
^19.01IP^29^29
"KRN",19,1423,10,16,0)
5004^
"KRN",19,1423,10,16,"^")
PRCA SITE PARAMETER
"KRN",19,1423,10,29,0)
11704
"KRN",19,1423,10,29,"^")
RCDPE RATE TYPE AUTO AUDIT
"KRN",19,1423,"U")
SUPERVISOR'S AR MENU
"KRN",19,5004,-1)
2^2
"KRN",19,5004,0)
PRCA SITE PARAMETER^Site Parameter Edit^^M^539^^^^^^^142
"KRN",19,5004,10,0)
^19.01IP^6^6
"KRN",19,5004,10,6,0)
11350
"KRN",19,5004,10,6,"^")
RCDPE EDI LOCKBOX PARAMETERS
"KRN",19,5004,"U")
SITE PARAMETER EDIT
"KRN",19,10072,-1)
2^24
"KRN",19,10072,0)
RCDP AGENT CASHIER MENU^Agent Cashier Menu^^M^1258^^^^^^^142
"KRN",19,10072,10,0)
^19.01IP^17^17
"KRN",19,10072,10,17,0)
11726^SU^15
"KRN",19,10072,10,17,"^")
RCDP SUMMARY 215 REPORT
"KRN",19,10072,"U")
AGENT CASHIER MENU
"KRN",19,11350,-1)
0^7
"KRN",19,11350,0)
RCDPE EDI LOCKBOX PARAMETERS^EDI Lockbox Parameters^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11350,1,0)
^19.06^3^3^3021106^^^^
"KRN",19,11350,1,1,0)
This option allows users to edit the EDI Lockbox site parameters.  These
"KRN",19,11350,1,2,0)
parameters include: Number of Days EFT Unmatched, and Number of Days ERA
"KRN",19,11350,1,3,0)
Unmatched. 
"KRN",19,11350,25)
EDILOCK^RCMSITE
"KRN",19,11350,"U")
EDI LOCKBOX PARAMETERS
"KRN",19,11392,-1)
0^9
"KRN",19,11392,0)
RCDPE EDI LOCKBOX SERVER^EDI Lockbox EFT/ERA/EEOB Processing Server^^S^^^^^^^^ACCOUNTS RECEIVABLE^^
"KRN",19,11392,1,0)
^19.06^2^2^3020829^^^^
"KRN",19,11392,1,1,0)
This option is the server for receiving EDI Lockbox payments and ERA's
"KRN",19,11392,1,2,0)
for automatic processing in AR.
"KRN",19,11392,20)

"KRN",19,11392,25)
SERVER^RCDPESRV
"KRN",19,11392,220)
^R^^^Y^^1^^7
"KRN",19,11392,"U")
EDI LOCKBOX EFT/ERA/EEOB PROCE
"KRN",19,11494,-1)
0^4
"KRN",19,11494,0)
RCDPE EXCEPTION PROCESSING^EDI Lockbox 3rd Party Exceptions^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11494,1,0)
^19.06^5^5^3021105^^^^
"KRN",19,11494,1,1,0)
This option provides a list of ERA/EOB records that are currently marked with
"KRN",19,11494,1,2,0)
an exception condition.  The option allows you to list either the ERA
"KRN",19,11494,1,3,0)
messages that are unfiled in VistA (transmission exceptions) or those
"KRN",19,11494,1,4,0)
that were filed, but have data exceptions.  The records can then be
"KRN",19,11494,1,5,0)
viewed and various options are provided to reconcile the exceptions.
"KRN",19,11494,25)
EN^RCDPEX1
"KRN",19,11494,"U")
EDI LOCKBOX 3RD PARTY EXCEPTIO
"KRN",19,11496,-1)
0^5
"KRN",19,11496,0)
RCDPE EFT AGING REPORT^EFT Unmatched Aging Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11496,1,0)
^19.06^4^4^3021105^^^^
"KRN",19,11496,1,1,0)
This option produces the EFT aging report.  This report contains a list
"KRN",19,11496,1,2,0)
of all Electronic Funds Transfer (EFT) records that have not been
"KRN",19,11496,1,3,0)
successfully matched to ERAs within the user specified number
"KRN",19,11496,1,4,0)
of days.  The report can be run with or without details for each record.
"KRN",19,11496,25)
EN1^RCDPEAR2
"KRN",19,11496,"U")
EFT UNMATCHED AGING REPORT
"KRN",19,11497,-1)
0^11
"KRN",19,11497,0)
RCDPE ERA AGING REPORT^ERA Unmatched Aging Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11497,1,0)
^19.06^4^4^3021216^^^^
"KRN",19,11497,1,1,0)
This option produces the ERA aging report.  This report contains a list
"KRN",19,11497,1,2,0)
of all Electronic Remittance Advice (ERA) records that have not been
"KRN",19,11497,1,3,0)
successfully matched to electronic EFTs within the user specified number
"KRN",19,11497,1,4,0)
of days.  The report can be run with or without details for each record.
"KRN",19,11497,25)
EN1^RCDPEAR1
"KRN",19,11497,"U")
ERA UNMATCHED AGING REPORT
"KRN",19,11499,-1)
0^12
"KRN",19,11499,0)
RCDPE MATCH EFT TO ERA^Automatic Match EFTs to ERAs^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11499,1,0)
^19.06^5^5^3021216^^^^
"KRN",19,11499,1,1,0)
This option will start the job to match the 3rd Party Lockbox EFT records
"KRN",19,11499,1,2,0)
that have not yet been matched to the electronic ERAs currently on file.
"KRN",19,11499,1,3,0)
This option runs a part of the normal nightly processing, but can be run
"KRN",19,11499,1,4,0)
on demand here.  The job must be queued and only one of these jobs can
"KRN",19,11499,1,5,0)
be running at any given time.
"KRN",19,11499,25)
EN1^RCDPEM1
"KRN",19,11499,"U")
AUTOMATIC MATCH EFTS TO ERAS
"KRN",19,11518,-1)
0^10
"KRN",19,11518,0)
RCDPE EDI LOCKBOX WORKLIST^EEOB Worklist^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11518,1,0)
^19.06^6^6^3030610^^^^
"KRN",19,11518,1,1,0)
This option provides a list of electronic EOB detail records that were
"KRN",19,11518,1,2,0)
included on a selected electronic remittance advice (ERA).  It allows for
"KRN",19,11518,1,3,0)
the creation of a receipt that will post the detail contained in each EOB
"KRN",19,11518,1,4,0)
against the site's A/R and to FMS.  To accomplish this, some manipulation
"KRN",19,11518,1,5,0)
of the payment data may be necessary and some of the tools for performing
"KRN",19,11518,1,6,0)
this manipulation are included in this function.
"KRN",19,11518,25)
EN^RCDPEWL
"KRN",19,11518,"U")
EEOB WORKLIST
"KRN",19,11558,-1)
0^14
"KRN",19,11558,0)
RCDPE EOB TRANSFER REPORTS^EEOB Transfer Reports^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11558,1,0)
^19.06^5^5^3030912^^^^
"KRN",19,11558,1,1,0)
This option provides the ability to produce one or both of the EOB
"KRN",19,11558,1,2,0)
Transfer reports.  The TRANSFER IN report lists all those EOBs that were
"KRN",19,11558,1,3,0)
transferred into the site from another site who had received it in error.
"KRN",19,11558,1,4,0)
The TRANSFER OUT report lists all those EOBs that were sent to another
"KRN",19,11558,1,5,0)
site because they were received in error by the current site.
"KRN",19,11558,25)
RPT^RCDPETR
"KRN",19,11558,"U")
EEOB TRANSFER REPORTS
"KRN",19,11559,-1)
0^13
"KRN",19,11559,0)
RCDPE EDI LOCKBOX MENU^EDI Lockbox^^M^^^^^^^^
"KRN",19,11559,1,0)
^19.06^1^1^3030328^^^
"KRN",19,11559,1,1,0)
This is the menu that contains the EDI Lockbox functionality.
"KRN",19,11559,10,0)
^19.01IP^12^12
"KRN",19,11559,10,2,0)
11518^WL
"KRN",19,11559,10,2,"^")
RCDPE EDI LOCKBOX WORKLIST
"KRN",19,11559,10,5,0)
11494^EXC
"KRN",19,11559,10,5,"^")
RCDPE EXCEPTION PROCESSING
"KRN",19,11559,10,6,0)
11499^MA
"KRN",19,11559,10,6,"^")
RCDPE MATCH EFT TO ERA
"KRN",19,11559,10,7,0)
11583^REP
"KRN",19,11559,10,7,"^")
RCDPE EDI LOCKBOX REPORTS MENU
"KRN",19,11559,10,8,0)
11684^MM
"KRN",19,11559,10,8,"^")
RCDPE MANUAL MATCH EFT-ERA
"KRN",19,11559,10,9,0)
11685^ZB
"KRN",19,11559,10,9,"^")
RCDPE MARK 0-BAL EFT MATCHED
"KRN",19,11559,10,10,0)
11686^MO
"KRN",19,11559,10,10,"^")
RCDPE MOVE ERA TO SUSPENSE
"KRN",19,11559,10,11,0)
11795^UP
"KRN",19,11559,10,11,"^")
RCDPE ERA POSTED BY PAPER EOB
"KRN",19,11559,10,12,0)
11829^UN
"KRN",19,11559,10,12,"^")
RCDPE UNMATCH ERA
"KRN",19,11559,99)
59436,64342
"KRN",19,11559,"U")
EDI LOCKBOX
"KRN",19,11560,-1)
0^16
"KRN",19,11560,0)
RCDPE EDI LOCKBOX ACT REPORT^Daily Activity Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11560,1,0)
^19.06^6^6^3030130^^^^
"KRN",19,11560,1,1,0)
This option produces the EDI Lockbox Daily Activity Report.  This report
"KRN",19,11560,1,2,0)
can be run in detail or summary format.  Detail format provides a detailed
"KRN",19,11560,1,3,0)
list of all EFT deposits received within the selected date range and
"KRN",19,11560,1,4,0)
the corresponding EFT payments from the payers comprising the deposit.
"KRN",19,11560,1,5,0)
Totals are provided by date and date range selected.  Summary format prints
"KRN",19,11560,1,6,0)
only the totals data.
"KRN",19,11560,25)
RPT^RCDPEDAR
"KRN",19,11560,"U")
DAILY ACTIVITY REPORT
"KRN",19,11582,-1)
0^17
"KRN",19,11582,0)
RCDPE UNAPPLIED EFT DEP REPORT^Unapplied EFT Deposits Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11582,1,0)
^19.06^3^3^3030320^^^^
"KRN",19,11582,1,1,0)
This option produces a list of EFT deposits that have EFT detail records
"KRN",19,11582,1,2,0)
whose funds have not been applied to bills in A/R.  These funds remain
"KRN",19,11582,1,3,0)
in FUND 5287, REVENUE SOURCE CODE 8NZZ.
"KRN",19,11582,25)
EN^RCDPE8NZ
"KRN",19,11582,"U")
UNAPPLIED EFT DEPOSITS REPORT
"KRN",19,11583,-1)
0^18
"KRN",19,11583,0)
RCDPE EDI LOCKBOX REPORTS MENU^EDI Lockbox Reports Menu^^M^^^^^^^^
"KRN",19,11583,1,0)
2^19.06^2^2^3030328^^
"KRN",19,11583,1,1,0)
This menu allows access to all the reports that can be produced for EDI
"KRN",19,11583,1,2,0)
Lockbox.
"KRN",19,11583,10,0)
^19.01IP^6^6
"KRN",19,11583,10,1,0)
11560^DA^10
"KRN",19,11583,10,1,"^")
RCDPE EDI LOCKBOX ACT REPORT
"KRN",19,11583,10,2,0)
11558^TR^20
"KRN",19,11583,10,2,"^")
RCDPE EOB TRANSFER REPORTS
"KRN",19,11583,10,3,0)
11496^EFT^30
"KRN",19,11583,10,3,"^")
RCDPE EFT AGING REPORT
"KRN",19,11583,10,4,0)
11497^ERA^40
"KRN",19,11583,10,4,"^")
RCDPE ERA AGING REPORT
"KRN",19,11583,10,5,0)
11582^UN^50
"KRN",19,11583,10,5,"^")
RCDPE UNAPPLIED EFT DEP REPORT
"KRN",19,11583,10,6,0)
11828^VP
"KRN",19,11583,10,6,"^")
RCDPE VIEW/PRINT ERA
"KRN",19,11583,99)
59436,64342
"KRN",19,11583,99.1)
59232,49629
"KRN",19,11583,"U")
EDI LOCKBOX REPORTS MENU
"KRN",19,11684,-1)
0^19
"KRN",19,11684,0)
RCDPE MANUAL MATCH EFT-ERA^Manual Match EFT-ERA^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11684,1,0)
^19.06^5^5^3030512^^^^
"KRN",19,11684,1,1,0)
This option will allow the user to choose an EFT detail record and an ERA
"KRN",19,11684,1,2,0)
record and will mark the 2 records as matched.  This should be used only
"KRN",19,11684,1,3,0)
if the automatic matching function is not able to make the match. The
"KRN",19,11684,1,4,0)
EFT and ERA selected must both be unmatched and the ERA must not be
"KRN",19,11684,1,5,0)
associated with a receipt.
"KRN",19,11684,25)
MATCH1^RCDPEM2
"KRN",19,11684,"U")
MANUAL MATCH EFT-ERA
"KRN",19,11685,-1)
0^20
"KRN",19,11685,0)
RCDPE MARK 0-BAL EFT MATCHED^Mark 0-Balance EFT Matched^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11685,1,0)
^19.06^3^3^3030603^^^^
"KRN",19,11685,1,1,0)
This option allows the user to select an EFT detail record that has a
"KRN",19,11685,1,2,0)
0-balance payment and mark it as matched to a paper EOB.  This will
"KRN",19,11685,1,3,0)
remove it from the EFT UNMATCHED AGING REPORT.
"KRN",19,11685,25)
MATCH2^RCDPEM2
"KRN",19,11685,"U")
MARK 0-BALANCE EFT MATCHED
"KRN",19,11686,-1)
0^21
"KRN",19,11686,0)
RCDPE MOVE ERA TO SUSPENSE^Move ERA Total To Suspense^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11686,1,0)
^19.06^10^10^3030520^^^^
"KRN",19,11686,1,1,0)
This option will allow the user to choose an ERA record that is matched
"KRN",19,11686,1,2,0)
to an EFT deposit and will create a receipt to post the total amount
"KRN",19,11686,1,3,0)
reported as being paid on the EFT to SUSPENSE.  The ERA record must
"KRN",19,11686,1,4,0)
not already have a receipt attached to it.  This option is used to force a
"KRN",19,11686,1,5,0)
'TR' document to be generated from the EDI Lockbox deposit account to the
"KRN",19,11686,1,6,0)
suspense account when creating/posting a receipt can not be done due to
"KRN",19,11686,1,7,0)
take backs or other situations where the EFT and ERA amounts do not match.
"KRN",19,11686,1,8,0)
NO posting to individual claims in AR is accomplished by this option.
"KRN",19,11686,1,9,0)
These must be done manually.  FMS is updated if there is any payment
"KRN",19,11686,1,10,0)
indicated on the EFT.
"KRN",19,11686,25)
SUSPERA^RCDPEWL5
"KRN",19,11686,"U")
MOVE ERA TOTAL TO SUSPENSE
"KRN",19,11704,-1)
0^22
"KRN",19,11704,0)
RCDPE RATE TYPE AUTO AUDIT^Update Rate Types For Auto-audit^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11704,1,0)
^19.06^4^4^3030605^^^^
"KRN",19,11704,1,1,0)
This option allows the user to select a rate type from the RATE TYPE
"KRN",19,11704,1,2,0)
file (#399.3) and to turn auto-audit ON or OFF for the rate type.  If
"KRN",19,11704,1,3,0)
auto-audit is turned ON, a valid BILL RESULTING FROM entry must be
"KRN",19,11704,1,4,0)
entered.
"KRN",19,11704,25)
RESFROM^PRCAUDT1
"KRN",19,11704,"U")
UPDATE RATE TYPES FOR AUTO-AUD
"KRN",19,11726,-1)
0^25
"KRN",19,11726,0)
RCDP SUMMARY 215 REPORT^Summary SF215 Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11726,1,0)
^^3^3^3030619^
"KRN",19,11726,1,1,0)
This option will print the summary 215 report for a selected deposit.
"KRN",19,11726,1,2,0)
It consists of an SF215 for each receipt in the deposit and a grand
"KRN",19,11726,1,3,0)
totals page summarizing all the receipt totals.
"KRN",19,11726,25)
SUMM215^RCDPE215
"KRN",19,11726,"U")
SUMMARY SF215 REPORT
"KRN",19,11795,-1)
0^26
"KRN",19,11795,0)
RCDPE ERA POSTED BY PAPER EOB^Update ERA Posted Using Paper EOB^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11795,1,0)
^19.06^4^4^3030828^^^^
"KRN",19,11795,1,1,0)
This option is used to mark an ERA as posted when the paper EOB containing
"KRN",19,11795,1,2,0)
this ERA data was posted to your A/R and FMS and no reference to the ERA
"KRN",19,11795,1,3,0)
was included.  This will mark the ERA as posted.  It will require you to
"KRN",19,11795,1,4,0)
enter the receipt # that was used to post the ERA information.
"KRN",19,11795,25)
POSTED^RCDPEM2
"KRN",19,11795,"U")
UPDATE ERA POSTED USING PAPER 
"KRN",19,11828,-1)
0^27
"KRN",19,11828,0)
RCDPE VIEW/PRINT ERA^View/Print ERA^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11828,1,0)
^19.06^1^1^3030911^^^^
"KRN",19,11828,1,1,0)
This option allows you to select an ERA and print or view its contents.
"KRN",19,11828,25)
PRTERA^RCDPEWL0
"KRN",19,11828,"U")
VIEW/PRINT ERA
"KRN",19,11829,-1)
0^28
"KRN",19,11829,0)
RCDPE UNMATCH ERA^Unmatch An ERA^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11829,1,0)
^19.06^6^6^3030912^^^^
"KRN",19,11829,1,1,0)
This option allows you to remove the match status from an ERA if it was
"KRN",19,11829,1,2,0)
added in error.  You may only select an ERA that was previously marked as
"KRN",19,11829,1,3,0)
matched and that has had no receipt created for it yet.  If the worklist
"KRN",19,11829,1,4,0)
entry has been created, it will be deleted before it allows the unmatch
"KRN",19,11829,1,5,0)
to occur.  If the ERA was matched to an EFT, the EFT will be remarked as
"KRN",19,11829,1,6,0)
unmatched too.
"KRN",19,11829,25)
UNMATCH^RCDPEM2
"KRN",19,11829,"U")
UNMATCH AN ERA
"KRN",19.1,444,-1)
0^1
"KRN",19.1,444,0)
PRCA EDI LOCKBOX CHARGES
"KRN",19.1,444,1,0)
^^2^2^3030318^
"KRN",19.1,444,1,1,0)
This is a key for the AR action in EDI Lockbox EOB Worklist to allow 
"KRN",19.1,444,1,2,0)
access to CHARGE MAINTENANCE functions.
"KRN",101,450,-1)
4^3
"KRN",101,450,0)
VALM QUIT
"KRN",101,452,-1)
4^55
"KRN",101,452,0)
VALM PRINT LIST
"KRN",101,455,-1)
4^58
"KRN",101,455,0)
VALM BLANK 1
"KRN",101,2651,-1)
2^56
"KRN",101,2651,0)
RCDP RECEIPT PROFILE MENU^Receipt Profile Menu^^M^539^^^^^^^142
"KRN",101,2651,10,0)
^101.01PA^18^18
"KRN",101,2651,10,17,0)
3434^WL^22^
"KRN",101,2651,10,17,"^")
RCDP RECEIPT PROFILE ERA WORKLIST
"KRN",101,2651,10,18,0)
455^^19^
"KRN",101,2651,10,18,"^")
VALM BLANK 1
"KRN",101,3298,-1)
0^35
"KRN",101,3298,0)
RCDPEX EOB EXCEPTION MENU^^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3298,1,0)
^101.06^2^2^3021025^^^^
"KRN",101,3298,1,1,0)
This is the main menu that contains the actions that can be performed
"KRN",101,3298,1,2,0)
manually on EOB return messages.
"KRN",101,3298,4)
26^4
"KRN",101,3298,10,0)
^101.01PA^9^9
"KRN",101,3298,10,4,0)
450^^100^^^Exit
"KRN",101,3298,10,4,"^")
VALM QUIT
"KRN",101,3298,10,5,0)
3300^^30^
"KRN",101,3298,10,5,"^")
RCDPEX DELETE MESSAGE
"KRN",101,3298,10,6,0)
3299^^20^
"KRN",101,3298,10,6,"^")
RCDPEX FILE EXCEPTION MESSAGE
"KRN",101,3298,10,8,0)
3301^^10^
"KRN",101,3298,10,8,"^")
RCDPEX VIEW/PRINT MESSAGE
"KRN",101,3298,10,9,0)
3351^^35^
"KRN",101,3298,10,9,"^")
RCDPE EOB WORKLIST TPJI
"KRN",101,3298,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,3298,26)
D SHOW^VALM
"KRN",101,3298,28)
Select Action: 
"KRN",101,3298,99)
59436,64341
"KRN",101,3299,-1)
0^38
"KRN",101,3299,0)
RCDPEX FILE EXCEPTION MESSAGE^File Message^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3299,1,0)
^101.06^2^2^3021021^^^^
"KRN",101,3299,1,1,0)
This action allows a user to manually force a message to process through the
"KRN",101,3299,1,2,0)
EDI Lockbox ERA/EOB file process.
"KRN",101,3299,20)
D UPD^RCDPEX
"KRN",101,3299,99)
59436,64341
"KRN",101,3300,-1)
0^34
"KRN",101,3300,0)
RCDPEX DELETE MESSAGE^Delete Message^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3300,1,0)
^101.06^3^3^3021017^^^^
"KRN",101,3300,1,1,0)
This action allows a user to manually delete a message that you either can't
"KRN",101,3300,1,2,0)
or don't want to continue through the EDI Lockbox message process.
"KRN",101,3300,1,3,0)
A bulletin is sent to alert that this action has been taken.
"KRN",101,3300,20)
D DEL^RCDPEX
"KRN",101,3300,99)
59436,64341
"KRN",101,3301,-1)
0^42
"KRN",101,3301,0)
RCDPEX VIEW/PRINT MESSAGE^View/Print Message^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3301,1,0)
^101.06^1^1^3021017^^
"KRN",101,3301,1,1,0)
This option allows the user to view an EDI Lockbox message.
"KRN",101,3301,4)
^^^VP
"KRN",101,3301,20)
D VP^RCDPEX
"KRN",101,3301,99)
59436,64341
"KRN",101,3303,-1)
0^36
"KRN",101,3303,0)
RCDPEX EOB_SUM EXCEPTION MENU^^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3303,1,0)
^101.06^2^2^3000223^^^^
"KRN",101,3303,1,1,0)
This is the main menu that contains the actions that can be performed
"KRN",101,3303,1,2,0)
manually on 837 return messages.
"KRN",101,3303,4)
26^4
"KRN",101,3303,10,0)
^101.01PA^14^14
"KRN",101,3303,10,4,0)
450^^100^^^Exit
"KRN",101,3303,10,4,"^")
VALM QUIT
"KRN",101,3303,10,8,0)
3306^^10^
"KRN",101,3303,10,8,"^")
RCDPEX SUM_VIEW/PRINT MESSAGE
"KRN",101,3303,10,9,0)
3307^^40^
"KRN",101,3303,10,9,"^")
RCDPEX SUM_TRANSFER EOB OUT
"KRN",101,3303,10,10,0)
3304^^30^
"KRN",101,3303,10,10,"^")
RCDPEX EOB_SUM REMOVE EXCEPT
"KRN",101,3303,10,11,0)
3305^^20^
"KRN",101,3303,10,11,"^")
RCDPEX SUM_FILE EXCEPTION
"KRN",101,3303,10,13,0)
3351^^60^
"KRN",101,3303,10,13,"^")
RCDPE EOB WORKLIST TPJI
"KRN",101,3303,10,14,0)
3470^^50^
"KRN",101,3303,10,14,"^")
RCDPEX SUM_EDIT CLAIM
"KRN",101,3303,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,3303,26)
D SHOW^VALM
"KRN",101,3303,28)
Select Action: 
"KRN",101,3303,99)
59436,64341
"KRN",101,3304,-1)
0^37
"KRN",101,3304,0)
RCDPEX EOB_SUM REMOVE EXCEPT^Remove Exception^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3304,1,0)
^101.06^3^3^3021017^^^^
"KRN",101,3304,1,1,0)
This action allows a user to manually delete a message that you either can't
"KRN",101,3304,1,2,0)
or don't want to continue through the EDI Lockbox message process.
"KRN",101,3304,1,3,0)
A bulletin is sent to alert that this action has been taken.
"KRN",101,3304,20)
D DEL^RCDPEX31
"KRN",101,3304,99)
59436,64341
"KRN",101,3305,-1)
0^39
"KRN",101,3305,0)
RCDPEX SUM_FILE EXCEPTION^File EEOB in IB^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3305,1,0)
^101.06^2^2^3021029^^^^
"KRN",101,3305,1,1,0)
This action allows a user to manually force a message to process through the
"KRN",101,3305,1,2,0)
EDI Lockbox EOB file process to store the detail data in IB.
"KRN",101,3305,20)
D UPD^RCDPEX3
"KRN",101,3305,99)
59436,64341
"KRN",101,3306,-1)
0^41
"KRN",101,3306,0)
RCDPEX SUM_VIEW/PRINT MESSAGE^View/Print Message^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3306,1,0)
^101.06^1^1^3021017^^
"KRN",101,3306,1,1,0)
This option allows the user to view an EDI Lockbox message.
"KRN",101,3306,4)
^^^VP
"KRN",101,3306,20)
D VP^RCDPEX3
"KRN",101,3306,99)
59436,64341
"KRN",101,3307,-1)
0^40
"KRN",101,3307,0)
RCDPEX SUM_TRANSFER EOB OUT^Transfer EEOB^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3307,15)
I '$D(IOUON) D ENS^%ZISS
"KRN",101,3307,20)
D XFR^RCDPEX3
"KRN",101,3307,99)
59436,64341
"KRN",101,3346,-1)
0^25
"KRN",101,3346,0)
RCDPE EOB WORKLIST MENU^EOB WORKLIST MENU^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3346,1,0)
^101.06^2^2^3030219^^^^
"KRN",101,3346,1,1,0)
This is the main menu that contains the actions that can be performed
"KRN",101,3346,1,2,0)
manually on ERAs received.
"KRN",101,3346,4)
26^4
"KRN",101,3346,10,0)
^101.01PA^15^15
"KRN",101,3346,10,4,0)
450^^100^^^Exit
"KRN",101,3346,10,4,"^")
VALM QUIT
"KRN",101,3346,10,6,0)
3419^^10^
"KRN",101,3346,10,6,"^")
RCDPE EOB WORKLIST SPLIT LINE
"KRN",101,3346,10,7,0)
3420^^30^
"KRN",101,3346,10,7,"^")
RCDPE EOB WORKLIST DIST ADJ
"KRN",101,3346,10,8,0)
3421^^60^
"KRN",101,3346,10,8,"^")
RCDPE EOB WORKLIST REFRESH
"KRN",101,3346,10,9,0)
3349^EOB^80^
"KRN",101,3346,10,9,"^")
RCDPE VIEW/PRINT WORKLIST EOB
"KRN",101,3346,10,10,0)
3422^ERA^90^
"KRN",101,3346,10,10,"^")
RCDPE VIEW/PRINT WORKLIST ERA
"KRN",101,3346,10,12,0)
3425^^70^
"KRN",101,3346,10,12,"^")
RCDPE EOB WORKLIST RESEARCH
"KRN",101,3346,10,14,0)
3429^^75^
"KRN",101,3346,10,14,"^")
RCDPE EOB WL RECEIPT VIEW
"KRN",101,3346,10,15,0)
3475^^77^
"KRN",101,3346,10,15,"^")
RCDPE EOB WL REVIEW
"KRN",101,3346,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,3346,26)
D SHOW^VALM
"KRN",101,3346,28)
Select Action: 
"KRN",101,3346,99)
59436,64341
"KRN",101,3348,-1)
0^29
"KRN",101,3348,0)
RCDPE EOB WORKLIST RESEARCH MENU^Research Menu^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3348,1,0)
^^2^2^3030220^
"KRN",101,3348,1,1,0)
This is the main menu that contains the actions that can be performed to 
"KRN",101,3348,1,2,0)
research a payment/denial for a claim when reviewing an EOB.
"KRN",101,3348,4)
26^4
"KRN",101,3348,10,0)
^101.01PA^14^14
"KRN",101,3348,10,1,0)
3352^^5^
"KRN",101,3348,10,1,"^")
RCDPE EOB WORKLIST REL HOLD
"KRN",101,3348,10,2,0)
3351^^20^
"KRN",101,3348,10,2,"^")
RCDPE EOB WORKLIST TPJI
"KRN",101,3348,10,4,0)
3410^^10^
"KRN",101,3348,10,4,"^")
RCDPE EOB WORKLIST CHG MAINT
"KRN",101,3348,10,5,0)
3412^^50^
"KRN",101,3348,10,5,"^")
RCDPE EOB WORKLIST ON HOLD RPT
"KRN",101,3348,10,6,0)
3413^^60^
"KRN",101,3348,10,6,"^")
RCDPE EOB WORKLIST CL MATCH RPT
"KRN",101,3348,10,7,0)
3424^^100^
"KRN",101,3348,10,7,"^")
RCDPE EOB WL RESEARCH EXIT
"KRN",101,3348,10,8,0)
3422^ERA^80^
"KRN",101,3348,10,8,"^")
RCDPE VIEW/PRINT WORKLIST ERA
"KRN",101,3348,10,9,0)
3349^EOB^70^
"KRN",101,3348,10,9,"^")
RCDPE VIEW/PRINT WORKLIST EOB
"KRN",101,3348,10,11,0)
3447^^65^
"KRN",101,3348,10,11,"^")
RCDPE EOB WORKLIST BILL COMMENT
"KRN",101,3348,10,12,0)
3446^^67^
"KRN",101,3348,10,12,"^")
RCDPE EOB WORKLIST REESTABLISH
"KRN",101,3348,10,13,0)
3445^^8^
"KRN",101,3348,10,13,"^")
RCDPE EOB WORKLIST ADJUST
"KRN",101,3348,10,14,0)
3411^^9^
"KRN",101,3348,10,14,"^")
RCDPE EOB WORKLIST FULL ACCT PROF
"KRN",101,3348,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,3348,26)
D SHOW^VALM
"KRN",101,3348,28)
Select Action: 
"KRN",101,3348,99)
59436,64341
"KRN",101,3349,-1)
0^32
"KRN",101,3349,0)
RCDPE VIEW/PRINT WORKLIST EOB^View/Print EEOB^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3349,1,0)
^101.06^2^2^3030220^^^^
"KRN",101,3349,1,1,0)
This option allows the user to view the detail of a selected EOB from the
"KRN",101,3349,1,2,0)
list of EOB's presented in the Worklist Scratch pad function for an ERA.
"KRN",101,3349,4)
^^^
"KRN",101,3349,20)
D PREOB^RCDPEWL2
"KRN",101,3349,99)
59436,64341
"KRN",101,3351,-1)
0^31
"KRN",101,3351,0)
RCDPE EOB WORKLIST TPJI^TPJI^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3351,1,0)
^101.06^2^2^3021127^^^^
"KRN",101,3351,1,1,0)
This option allows the user access the third party joint inquiry (TPJI)
"KRN",101,3351,1,2,0)
functions for an electronic EOB's claim.
"KRN",101,3351,4)
^^^VP
"KRN",101,3351,20)
D TPJI^RCDPEWL2
"KRN",101,3351,99)
59436,64341
"KRN",101,3352,-1)
0^28
"KRN",101,3352,0)
RCDPE EOB WORKLIST REL HOLD^Release Hold^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3352,1,0)
^101.06^2^2^3030102^^^^
"KRN",101,3352,1,1,0)
This option allows the user access the AR function for releasing a hold
"KRN",101,3352,1,2,0)
on a patient's bill(s) from within the EDI Lockbox worklist function.
"KRN",101,3352,4)
^^^RH
"KRN",101,3352,20)
D RELHOLD^RCDPEWL2
"KRN",101,3352,99)
59436,64341
"KRN",101,3410,-1)
0^21
"KRN",101,3410,0)
RCDPE EOB WORKLIST CHG MAINT^Patient Charge Maint^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3410,1,0)
^101.06^2^2^3030102^^^^
"KRN",101,3410,1,1,0)
This option allows the user access to the IB options for cancel, edit, add
"KRN",101,3410,1,2,0)
patient charges from within the EDI Lockbox worklist function.
"KRN",101,3410,4)
^^^CM
"KRN",101,3410,20)
D CHGMNT^RCDPEWL2
"KRN",101,3410,99)
59436,64341
"KRN",101,3411,-1)
0^66
"KRN",101,3411,0)
RCDPE EOB WORKLIST FULL ACCT PROF^Full Acct Prof^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3411,1,0)
^101.06^1^1^3030701^^^^
"KRN",101,3411,1,1,0)
This option allows the user access to the AR function FULL ACCOUNT PROFILE.
"KRN",101,3411,4)
^^^DA
"KRN",101,3411,20)
D FAP^RCDPEWL2
"KRN",101,3411,99)
59436,64341
"KRN",101,3412,-1)
0^26
"KRN",101,3412,0)
RCDPE EOB WORKLIST ON HOLD RPT^On Hold List^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3412,1,0)
^101.06^2^2^3030102^^^^
"KRN",101,3412,1,1,0)
This option allows the user access to the List On Hold Charges report in
"KRN",101,3412,1,2,0)
IB from within the EDI Lockbox worklist function.
"KRN",101,3412,4)
^^^OH
"KRN",101,3412,20)
D LSTHLD^RCDPEWL2
"KRN",101,3412,99)
59436,64341
"KRN",101,3413,-1)
0^22
"KRN",101,3413,0)
RCDPE EOB WORKLIST CL MATCH RPT^Claims Match Rpt^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3413,1,0)
^101.06^2^2^3030102^^^^
"KRN",101,3413,1,1,0)
This option allows the user access to the Claims Matching report in AR from
"KRN",101,3413,1,2,0)
within the EDI Lockbox worklist function.
"KRN",101,3413,4)
^^^MR
"KRN",101,3413,20)
D CMRPT^RCDPEWL2
"KRN",101,3413,99)
59436,64341
"KRN",101,3419,-1)
0^30
"KRN",101,3419,0)
RCDPE EOB WORKLIST SPLIT LINE^Split/Edit A Line^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3419,1,0)
^101.06^3^3^3030218^^^^
"KRN",101,3419,1,1,0)
This option allows the user to split the payment and adjustment amounts of
"KRN",101,3419,1,2,0)
a selected line in the ERA to redistribute the funds to more accurately
"KRN",101,3419,1,3,0)
reflect the disposition of the payment/adjustment.
"KRN",101,3419,4)
^^^TB
"KRN",101,3419,20)
D SPLIT^RCDPEWL0
"KRN",101,3419,99)
59436,64341
"KRN",101,3420,-1)
0^24
"KRN",101,3420,0)
RCDPE EOB WORKLIST DIST ADJ^Distribute Adj Amts^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3420,1,0)
^101.06^4^4^3030218^^^^
"KRN",101,3420,1,1,0)
This option allows the user to select an adjustment line that has a
"KRN",101,3420,1,2,0)
negative net payment to allow this amount to be distributed to other
"KRN",101,3420,1,3,0)
lines so the total amount of payments received to post equals the total
"KRN",101,3420,1,4,0)
amount of the deposit.
"KRN",101,3420,4)
^^^TB
"KRN",101,3420,20)
D DISTADJ^RCDPEWL6
"KRN",101,3420,99)
59436,64341
"KRN",101,3421,-1)
0^27
"KRN",101,3421,0)
RCDPE EOB WORKLIST REFRESH^Refresh Scratch Pad^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3421,1,0)
^101.06^3^3^3030218^^^^
"KRN",101,3421,1,1,0)
This option allows the user to 'refresh' the worklist scratch pad entry
"KRN",101,3421,1,2,0)
to remove all previously entered edits/splits/adjustments and restore it
"KRN",101,3421,1,3,0)
to the state it was in before any manual changes were made.
"KRN",101,3421,4)
^^^TB
"KRN",101,3421,20)
D REFRESH^RCDPEWL6
"KRN",101,3421,99)
59436,64341
"KRN",101,3422,-1)
0^33
"KRN",101,3422,0)
RCDPE VIEW/PRINT WORKLIST ERA^View/Print ERA^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3422,1,0)
^101.06^2^2^3030219^^^^
"KRN",101,3422,1,1,0)
This option allows the user to view the summary or summary and detail
"KRN",101,3422,1,2,0)
information for an electronic remittance advice (ERA).
"KRN",101,3422,20)
D PRERA^RCDPEWL0
"KRN",101,3422,99)
59436,64341
"KRN",101,3423,-1)
0^43
"KRN",101,3423,0)
RCDPE EOB WORKLIST RECEIPT^Create Receipt^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3423,20)
D NEWREC^RCDPEWL4
"KRN",101,3423,99)
59436,64341
"KRN",101,3424,-1)
0^44
"KRN",101,3424,0)
RCDPE EOB WL RESEARCH EXIT^Scratch Pad Menu/Exit^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3424,1,0)
^^1^1^3030219^
"KRN",101,3424,1,1,0)
This option allows the user access to exit back to the ERA display menu
"KRN",101,3424,4)
^^^
"KRN",101,3424,20)
D EXIT^RCDPEWL2
"KRN",101,3424,99)
59436,64341
"KRN",101,3425,-1)
0^46
"KRN",101,3425,0)
RCDPE EOB WORKLIST RESEARCH^Research Menu^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3425,1,0)
^101.06^2^2^3030219^^^^
"KRN",101,3425,1,1,0)
This option allows the user access to the IB options for cancel, edit, add
"KRN",101,3425,1,2,0)
patient charges from within the EDI Lockbox worklist function.
"KRN",101,3425,4)
^^^
"KRN",101,3425,20)
D RESEARCH^RCDPEWL2
"KRN",101,3425,99)
59436,64341
"KRN",101,3426,-1)
0^50
"KRN",101,3426,0)
RCDPE EOB WORKLIST SPLIT MENU^EOB Split Line Menu^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3426,1,0)
^101.06^2^2^3030219^^^^
"KRN",101,3426,1,1,0)
This is the main menu that contains the actions that can be performed
"KRN",101,3426,1,2,0)
manually on ERAs received.
"KRN",101,3426,4)
26^2
"KRN",101,3426,10,0)
^101.01PA^6^6
"KRN",101,3426,10,4,0)
450^^100^^^Exit
"KRN",101,3426,10,4,"^")
VALM QUIT
"KRN",101,3426,10,5,0)
3427^^5^
"KRN",101,3426,10,5,"^")
RCDPE EOB WL SPLIT LINE
"KRN",101,3426,10,6,0)
3428^^10^
"KRN",101,3426,10,6,"^")
RCDPE EOB WL EDIT SPLIT
"KRN",101,3426,15)
D:$G(^TMP($J,"RCDPE_SPLIT_FILE"))&($G(VALMBCK)'="R") CHKFILE^RCDPEWL2 I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,3426,26)
D SHOW^VALM
"KRN",101,3426,28)
Select Action:
"KRN",101,3426,99)
59436,64341
"KRN",101,3427,-1)
0^48
"KRN",101,3427,0)
RCDPE EOB WL SPLIT LINE^File New Lines^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3427,20)
D FILESP^RCDPEWL4
"KRN",101,3427,99)
59436,64341
"KRN",101,3428,-1)
0^47
"KRN",101,3428,0)
RCDPE EOB WL EDIT SPLIT^Edit Lines Split^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3428,20)
D EDITSP^RCDPEWL2
"KRN",101,3428,99)
59436,64341
"KRN",101,3429,-1)
0^51
"KRN",101,3429,0)
RCDPE EOB WL RECEIPT VIEW^Preview Receipt^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3429,20)
D VRECPT^RCDPEWL4
"KRN",101,3429,99)
59436,64341
"KRN",101,3430,-1)
0^53
"KRN",101,3430,0)
RCDPE EOB WORKLIST PREVIEW MENU^Receipt Creation Preview Menu^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3430,1,0)
^101.06^2^2^3030630^^^^
"KRN",101,3430,1,1,0)
This is the main menu that contains the actions that can be performed
"KRN",101,3430,1,2,0)
manually on ERAs received.
"KRN",101,3430,4)
25^2
"KRN",101,3430,10,0)
^101.01PA^6^6
"KRN",101,3430,10,4,0)
450^^100^^^Exit
"KRN",101,3430,10,4,"^")
VALM QUIT
"KRN",101,3430,10,5,0)
452^^10^^^Print Receipt Preview
"KRN",101,3430,10,5,"^")
VALM PRINT LIST
"KRN",101,3430,10,6,0)
3423^^30^
"KRN",101,3430,10,6,"^")
RCDPE EOB WORKLIST RECEIPT
"KRN",101,3430,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,3430,26)
D SHOW^VALM
"KRN",101,3430,28)
Select Action: 
"KRN",101,3430,99)
59436,64341
"KRN",101,3431,-1)
0^54
"KRN",101,3431,0)
RCDPE EOB WORKLIST PREVIEW PRINT^Print Receipt Preview^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3431,1,0)
^101.06^2^2^3030220^^^^
"KRN",101,3431,1,1,0)
This option allows the user to view the detail of a selected EOB from the
"KRN",101,3431,1,2,0)
list of EOB's presented in the Worklist Scratch pad function for an ERA.
"KRN",101,3431,20)
D PREOB^RCDPEWL2
"KRN",101,3431,99)
59436,64341
"KRN",101,3434,-1)
0^57
"KRN",101,3434,0)
RCDP RECEIPT PROFILE ERA WORKLIST^Worklist (ERA)^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3434,1,0)
^101.06^1^1^3030326^^^
"KRN",101,3434,1,1,0)
This option will allow entry into the ERA Worklist screens in view only mode.
"KRN",101,3434,4)
^^^
"KRN",101,3434,20)
D WL^RCDPEWL2(RCRECTDA)
"KRN",101,3434,24)

"KRN",101,3434,99)
59436,64341
"KRN",101,3445,-1)
0^65
"KRN",101,3445,0)
RCDPE EOB WORKLIST ADJUST^Adjust (Inc/Dec)^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3445,20)
D ADJUST^RCDPEWL6
"KRN",101,3445,99)
59436,64341
"KRN",101,3446,-1)
0^61
"KRN",101,3446,0)
RCDPE EOB WORKLIST REESTABLISH^Re-establish Bill^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3446,20)
D REEST^RCDPEWL2
"KRN",101,3446,99)
59436,64341
"KRN",101,3447,-1)
0^59
"KRN",101,3447,0)
RCDPE EOB WORKLIST BILL COMMENT^Bill Comment Log^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3447,20)
D BILLCOM^RCDPEWL2
"KRN",101,3447,99)
59436,64341
"KRN",101,3448,-1)
0^62
"KRN",101,3448,0)
RCDPE EOB WORKLIST RECEIPT COMMENT^Add/Edit Comment^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3448,20)
D RCOMM^RCDPEWL5
"KRN",101,3448,99)
59436,64341
"KRN",101,3470,-1)
0^63
"KRN",101,3470,0)
RCDPEX SUM_EDIT CLAIM^Edit Claim #^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3470,15)
I '$D(IOUON) D ENS^%ZISS
"KRN",101,3470,20)
D EDITNUM^RCDPEX32
"KRN",101,3470,99)
59436,64341
"KRN",101,3475,-1)
0^64
"KRN",101,3475,0)
RCDPE EOB WL REVIEW^Review Line^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3475,20)
D REVIEW^RCDPEWL5
"KRN",101,3475,99)
59436,64341
"KRN",409.61,524,-1)
0^9
"KRN",409.61,524,0)
RCDP RECEIPT PROFILE^1^^80^6^16^1^1^Transaction^RCDP RECEIPT PROFILE MENU^Receipt Profile^1^^1
"KRN",409.61,524,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,524,"ARRAY")
 ^TMP("RCDPRPLM",$J)
"KRN",409.61,524,"COL",0)
^409.621^7^6
"KRN",409.61,524,"COL",2,0)
ACCOUNT^7^26^Account
"KRN",409.61,524,"COL",3,0)
PAY DATE^35^8^Pay Date
"KRN",409.61,524,"COL",4,0)
PAY AMOUNT^63^7^Pay Amt
"KRN",409.61,524,"COL",5,0)
PROC AMOUNT^72^8^Proc Amt
"KRN",409.61,524,"COL",6,0)
BY^45^2^By
"KRN",409.61,524,"COL",7,0)
TRANS NUMBER^2^1^#
"KRN",409.61,524,"COL","B","ACCOUNT",2)

"KRN",409.61,524,"COL","B","BY",6)

"KRN",409.61,524,"COL","B","PAY AMOUNT",4)

"KRN",409.61,524,"COL","B","PAY DATE",3)

"KRN",409.61,524,"COL","B","PROC AMOUNT",5)

"KRN",409.61,524,"COL","B","TRANS NUMBER",7)

"KRN",409.61,524,"FNL")
D EXIT^RCDPRPLM
"KRN",409.61,524,"HDR")
D HDR^RCDPRPLM
"KRN",409.61,524,"INIT")
D INIT^RCDPRPLM
"KRN",409.61,719,-1)
0^4
"KRN",409.61,719,0)
RCDPEX EOB EXCEPTION LIST^1^^80^5^19^1^1^EDI Lockbox Trans. Exceptions^RCDPEX EOB EXCEPTION MENU^EEOB TRANSMISSION EXCEPTIONS^1^^1
"KRN",409.61,719,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,719,"ARRAY")
 ^TMP("RCDPEX-EOB",$J)
"KRN",409.61,719,"COL",0)
^409.621^5^5
"KRN",409.61,719,"COL",1,0)
NUMBER^1^4^  #
"KRN",409.61,719,"COL",2,0)
MSG_ID^7^20^Message ID
"KRN",409.61,719,"COL",3,0)
MSG_TYPE^29^7^Msg Type
"KRN",409.61,719,"COL",4,0)
REC_DATE^38^20^Date Received
"KRN",409.61,719,"COL",5,0)
MAIL MESSAGE #^60^17^Mail Msg #
"KRN",409.61,719,"COL","B","MAIL MESSAGE #",5)

"KRN",409.61,719,"COL","B","MSG_ID",2)

"KRN",409.61,719,"COL","B","MSG_TYPE",3)

"KRN",409.61,719,"COL","B","NUMBER",1)

"KRN",409.61,719,"COL","B","REC_DATE",4)

"KRN",409.61,719,"FNL")
D FNL^RCDPEX1
"KRN",409.61,719,"HDR")
D HDR^RCDPEX1
"KRN",409.61,719,"INIT")
D INIT^RCDPEX1
"KRN",409.61,720,-1)
0^5
"KRN",409.61,720,0)
RCDPEX EOB_SUM EXCEPTION LIST^1^^80^5^19^1^1^EDI LBox EEOB Data Exception^RCDPEX EOB_SUM EXCEPTION MENU^LOCKBOX EEOB DATA EXCEPTIONS^1^^1
"KRN",409.61,720,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,720,"ARRAY")
 ^TMP("RCDPEX_SUM-EOB",$J)
"KRN",409.61,720,"COL",0)
^409.621^4^4
"KRN",409.61,720,"COL",1,0)
NUMBER^1^4^  #
"KRN",409.61,720,"COL",2,0)
TRACE_#^7^17^Trace #
"KRN",409.61,720,"COL",3,0)
INS_CO^24^46^Insurance Co Name/ID
"KRN",409.61,720,"COL",4,0)
EOB_DATE^72^8^EOB Date
"KRN",409.61,720,"COL","B","EOB_DATE",4)

"KRN",409.61,720,"COL","B","INS_CO",3)

"KRN",409.61,720,"COL","B","NUMBER",1)

"KRN",409.61,720,"COL","B","TRACE_#",2)

"KRN",409.61,720,"FNL")
D FNL^RCDPEX2
"KRN",409.61,720,"HDR")
D HDR^RCDPEX2
"KRN",409.61,720,"INIT")
D INIT^RCDPEX2
"KRN",409.61,721,-1)
0^3
"KRN",409.61,721,0)
RCDPE EOB WORKLIST^1^^80^6^17^1^1^EEOB Line^RCDPE EOB WORKLIST MENU^EEOB Worklist/Scratch Pad^1^^1
"KRN",409.61,721,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,721,"ARRAY")
 ^TMP("RCDPE-EOB_WL",$J)
"KRN",409.61,721,"COL",0)
^409.621^^0
"KRN",409.61,721,"FNL")
D FNL^RCDPEWL
"KRN",409.61,721,"HDR")
D HDR^RCDPEWL
"KRN",409.61,721,"INIT")
D INIT^RCDPEWL
"KRN",409.61,728,-1)
0^6
"KRN",409.61,728,0)
RCDPE EOB RESEARCH^1^^80^6^17^1^1^EEOB Line^RCDPE EOB WORKLIST RESEARCH MENU^EEOB Worklist Research^1^^1
"KRN",409.61,728,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,728,"ARRAY")
 ^TMP("RCDPE-EOB_WL",$J)
"KRN",409.61,728,"FNL")
D FNL^RCDPEWL1
"KRN",409.61,728,"HDR")
D HDR^RCDPEWL1
"KRN",409.61,728,"INIT")
D INIT^RCDPEWL1
"KRN",409.61,729,-1)
0^7
"KRN",409.61,729,0)
RCDPE EOB WORKLIST SPLIT^1^1^80^10^20^1^1^Line^RCDPE EOB WORKLIST SPLIT MENU^EEOB WORKLIST SPLIT LINE^1^^1
"KRN",409.61,729,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,729,"ARRAY")
 ^TMP("RCDPE_EOB_SPLIT",$J)
"KRN",409.61,729,"COL",0)
^409.621^5^5
"KRN",409.61,729,"COL",1,0)
CLAIM^5^25^Claim #
"KRN",409.61,729,"COL",2,0)
PAYMENT^32^15^Payment Amount
"KRN",409.61,729,"COL",3,0)
ADJUSTMENT^49^15^Adjustment Amt
"KRN",409.61,729,"COL",4,0)
NET^66^15^Net Amount
"KRN",409.61,729,"COL",5,0)
NUM^1^3
"KRN",409.61,729,"COL","B","ADJUSTMENT",3)

"KRN",409.61,729,"COL","B","CLAIM",1)

"KRN",409.61,729,"COL","B","NET",4)

"KRN",409.61,729,"COL","B","NUM",5)

"KRN",409.61,729,"COL","B","PAYMENT",2)

"KRN",409.61,729,"FNL")
D FNL^RCDPEWL3
"KRN",409.61,729,"HDR")
D HDR^RCDPEWL3
"KRN",409.61,729,"INIT")
D INIT^RCDPEWL3
"KRN",409.61,730,-1)
0^8
"KRN",409.61,730,0)
RCDPE EOB RECEIPT PREVIEW^1^1^80^6^20^1^1^Preview^RCDPE EOB WORKLIST PREVIEW MENU^EEOB WORKLIST PREVIEW RECEIPT^1^^1
"KRN",409.61,730,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,730,"ARRAY")
 ^TMP("RCDPE_EOB_PREVIEW",$J)
"KRN",409.61,730,"COL",0)
^409.621^3^3
"KRN",409.61,730,"COL",1,0)
ACCOUNT^13^25^ACCOUNT
"KRN",409.61,730,"COL",2,0)
AMOUNT^43^20^AMOUNT
"KRN",409.61,730,"COL",3,0)
LINE #^2^6^LINE #
"KRN",409.61,730,"COL","B","ACCOUNT",1)

"KRN",409.61,730,"COL","B","AMOUNT",2)

"KRN",409.61,730,"COL","B","LINE #",3)

"KRN",409.61,730,"FNL")
D FNL^RCDPEWL5
"KRN",409.61,730,"HDR")
D HDR^RCDPEWL5
"KRN",409.61,730,"INIT")
D INIT^RCDPEWL5
"MBREQ")
0
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",142,-1)
1^1
"PKG",142,0)
ACCOUNTS RECEIVABLE^PRCA^BILL COLLECTIONS
"PKG",142,20,0)
^9.402P^1^1
"PKG",142,20,1,0)
2^^PRCAMRG
"PKG",142,20,1,1)

"PKG",142,20,"B",2,1)

"PKG",142,22,0)
^9.49I^1^1
"PKG",142,22,1,0)
4.5^^2950320
"PKG",142,22,1,"PAH",1,0)
173^3031007^539
"PKG",142,22,1,"PAH",1,1,0)
^^4^4^3031007
"PKG",142,22,1,"PAH",1,1,1,0)
Third Party EDI Lockbox Patch PRCA*4.5*173 (Accounts Receivable component)
"PKG",142,22,1,"PAH",1,1,2,0)
 
"PKG",142,22,1,"PAH",1,1,3,0)
Please refer to the patch description in the National Patch module and
"PKG",142,22,1,"PAH",1,1,4,0)
the users documentation for detailed information about this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
67
"RTN","PRCABJ")
0^2^B29313939
"RTN","PRCABJ",1,0)
PRCABJ ;WASH-ISC@ALTOONA,PA/LDB,TJK-NIGHTLY PROCESS FOR ACCOUNTS RECEIVABLE ;11/8/96  3:54 PM
"RTN","PRCABJ",2,0)
 ;;4.5;Accounts Receivable;**11,34,101,114,155,153,141,165,167,173**;Mar 20, 1995
"RTN","PRCABJ",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCABJ",4,0)
 ;
"RTN","PRCABJ",5,0)
 ;This routine is called by the PRCA NIGHTLY PROCESS option which should be run nightly to call the following tasks
"RTN","PRCABJ",6,0)
 ;1) Update of interest/admin charges on patients' accounts
"RTN","PRCABJ",7,0)
 ;2) Update statement days
"RTN","PRCABJ",8,0)
 ;3) Print of Patient Statements, Uniform Billing forms, and non-patient follow-up letters
"RTN","PRCABJ",9,0)
 ;4) Purge of Receipts
"RTN","PRCABJ",10,0)
 ;5) Creation of TOP (Treasury Offset Program) documents
"RTN","PRCABJ",11,0)
 ;6) Print of the Follow-up list
"RTN","PRCABJ",12,0)
 ;7) Purge AR Events
"RTN","PRCABJ",13,0)
 ;8) Flag prepayments for refund review
"RTN","PRCABJ",14,0)
 ;9) Print Comment List
"RTN","PRCABJ",15,0)
 ;10) Starts the Repayment Plan Monitor
"RTN","PRCABJ",16,0)
 ;11) Generates Diagnostic Measures Workload Reports
"RTN","PRCABJ",17,0)
 ;12) Matches EFT with ERA
"RTN","PRCABJ",18,0)
 ;
"RTN","PRCABJ",19,0)
 ;Process will first check and Validate AR pointer files 341.1,
"RTN","PRCABJ",20,0)
 ;430.2, and 430.3.
"RTN","PRCABJ",21,0)
 ;Process will terminate and send bulletin if files are not valid
"RTN","PRCABJ",22,0)
 ;
"RTN","PRCABJ",23,0)
EN ;Start of nightly process-check to see if process is already running
"RTN","PRCABJ",24,0)
 L +^RC("PRCABJ"):5 Q:'$T
"RTN","PRCABJ",25,0)
 NEW ERROR S ERROR=0
"RTN","PRCABJ",26,0)
 D VERIFY I ERROR L -^RC("PRCABJ") Q
"RTN","PRCABJ",27,0)
 ;
"RTN","PRCABJ",28,0)
DRIVER ;All processes are called from this point
"RTN","PRCABJ",29,0)
 N CHK,POP,% S CHK=0
"RTN","PRCABJ",30,0)
 D CHK,INT,CHK,EN^RCCPCBJ,CHK,STM,CHK,RECPT,CHK,TOP,CHK,EVNT,CHK,BNUM
"RTN","PRCABJ",31,0)
 D CHK,ENUM,CHK,PURFMS,CHK,EN3^RCFMOBR,CHK,START^RCRJR,CHK,UB
"RTN","PRCABJ",32,0)
 D CHK,STATMNT,CHK,UDLIST^PRCABJ1,CHK,LIST,CHK,COMMENT,CHK,REPAY
"RTN","PRCABJ",33,0)
 D CHK,WRKLD,CHK,EFT
"RTN","PRCABJ",34,0)
 D NOW^%DTC S $P(^RC(342,1,0),"^",10)=%
"RTN","PRCABJ",35,0)
 L -^RC("PRCABJ")
"RTN","PRCABJ",36,0)
 K ^RC("PRCABJ")
"RTN","PRCABJ",37,0)
 Q
"RTN","PRCABJ",38,0)
 ;
"RTN","PRCABJ",39,0)
CHK ;checkpoint of process
"RTN","PRCABJ",40,0)
 S CHK=CHK+1 S ^RC("PRCABJ")=CHK
"RTN","PRCABJ",41,0)
 Q
"RTN","PRCABJ",42,0)
 ;
"RTN","PRCABJ",43,0)
VERIFY ;Verifies Pointer Files--Will HALT Process if Pointer Files Invalid
"RTN","PRCABJ",44,0)
 NEW A,B,FILE
"RTN","PRCABJ",45,0)
 F FILE=341.1,430.2,430.3 D  Q:ERROR
"RTN","PRCABJ",46,0)
    .S A=$S(FILE=341.1:"AC;0;2",FILE=430.2:"AC;0;7",1:"AC;0;3")
"RTN","PRCABJ",47,0)
    .S B=$S(FILE=341.1:"",1:"C;0;2")
"RTN","PRCABJ",48,0)
    .D EN1^PRCABJV(FILE,A,B,.ERROR)
"RTN","PRCABJ",49,0)
    .Q:'ERROR
"RTN","PRCABJ",50,0)
    .;SEND BULLETIN HERE IF FILE IN ERROR
"RTN","PRCABJ",51,0)
    .NEW XMB,XMTEXT,XMDUZ
"RTN","PRCABJ",52,0)
    .S XMDUZ="ACCOUNTS RECEIVABLE PACKAGE"
"RTN","PRCABJ",53,0)
    .S XMB="PRCA NIGHTLY PROCESS ABORT"
"RTN","PRCABJ",54,0)
    .S XMTEXT="ERROR("
"RTN","PRCABJ",55,0)
    .D ^XMB
"RTN","PRCABJ",56,0)
    .Q
"RTN","PRCABJ",57,0)
 Q
"RTN","PRCABJ",58,0)
 ;
"RTN","PRCABJ",59,0)
INT ;  update interest and admin charges for non-benefit debts
"RTN","PRCABJ",60,0)
 ;  example: vendor, employee, ex-employee
"RTN","PRCABJ",61,0)
 D NONBENE^RCBECHGS
"RTN","PRCABJ",62,0)
 Q
"RTN","PRCABJ",63,0)
 ;
"RTN","PRCABJ",64,0)
STM ;Update statement days for PERSONS, VENDORS, and Institutions
"RTN","PRCABJ",65,0)
 D STM^PRCABJ1
"RTN","PRCABJ",66,0)
 Q
"RTN","PRCABJ",67,0)
 ;
"RTN","PRCABJ",68,0)
STATMNT ;Print patient statements
"RTN","PRCABJ",69,0)
 N IOP,ZTIO,ZTSAVE,ZTRTN,ZTDESC,ZTASK,%ZIS,ZTDTH,PRCADEV
"RTN","PRCABJ",70,0)
 S (IOP,PRCADEV)=$P($G(^RC(342,1,0)),"^",8)
"RTN","PRCABJ",71,0)
 I IOP]"" D
"RTN","PRCABJ",72,0)
 .S ZTRTN="PRCAGS",ZTDTH=$H,ZTDESC="Print AR Statements/Letters"
"RTN","PRCABJ",73,0)
 .S %ZIS="N0" D ^%ZIS Q:POP
"RTN","PRCABJ",74,0)
 .S ZTSAVE("PRCADEV")="" D ^%ZTLOAD,^%ZISC
"RTN","PRCABJ",75,0)
 Q
"RTN","PRCABJ",76,0)
 ;
"RTN","PRCABJ",77,0)
RECPT ;Manage Receipts and Deposits
"RTN","PRCABJ",78,0)
 N IOP,ZTIO,ZTSAVE,ZTRTN,ZTDESC,ZTASK,%ZIS,ZTDTH
"RTN","PRCABJ",79,0)
 S ZTIO="",ZTRTN="MAN^RCDPUT",ZTDTH=$H,ZTDESC="Manage Receipts and Deposits"
"RTN","PRCABJ",80,0)
 D ^%ZTLOAD
"RTN","PRCABJ",81,0)
 Q
"RTN","PRCABJ",82,0)
 ;
"RTN","PRCABJ",83,0)
TOP ;Transmit TOP documents
"RTN","PRCABJ",84,0)
 Q:$$DOW^XLFDT(DT,1)'=1
"RTN","PRCABJ",85,0)
 N RCM,RCDOC
"RTN","PRCABJ",86,0)
 ;Run of TOP documents every Monday
"RTN","PRCABJ",87,0)
 I +$E(DT,6,7)>7,$E(DT,6,7)<15 S RCM=1
"RTN","PRCABJ",88,0)
 I '$D(^RCD(340,"TOP")),'$G(RCM) Q
"RTN","PRCABJ",89,0)
 S RCDOC=$S($G(RCM):"M",1:"U")
"RTN","PRCABJ",90,0)
 I $E(DT,4,5)=12,RCDOC="M" S RCDOC="Y"
"RTN","PRCABJ",91,0)
TOPQUE N ZTDESC,ZTASK,ZTDTH,ZTIO,ZTRTN,ARDUZ,ZTSAVE
"RTN","PRCABJ",92,0)
 S ZTIO="",ZTRTN="^RCTOPD",ZTSAVE("RCDOC")=""
"RTN","PRCABJ",93,0)
 S ZTDESC="TOP REFERRAL DOCUMENTS",ZTDTH=$H
"RTN","PRCABJ",94,0)
 D ^%ZTLOAD
"RTN","PRCABJ",95,0)
 Q
"RTN","PRCABJ",96,0)
 ;
"RTN","PRCABJ",97,0)
UB ;Print Uniform Billing forms
"RTN","PRCABJ",98,0)
 N IOP,ZTIO,ZTSAVE,ZTRTN,ZTDESC,ZTASK,%ZIS,ZTDTH
"RTN","PRCABJ",99,0)
 S ZTIO="",ZTRTN="PRCALT2",ZTDTH=$H,ZTDESC="Print Reimbursable Health Insurance Uniform Billing forms"
"RTN","PRCABJ",100,0)
 D ^%ZTLOAD,^%ZISC
"RTN","PRCABJ",101,0)
 Q
"RTN","PRCABJ",102,0)
 ;
"RTN","PRCABJ",103,0)
LIST ;Print Follow-up List
"RTN","PRCABJ",104,0)
 N IOP,ZTIO,ZTSAVE,ZTRTN,ZTDESC,ZTASK,%ZIS,ZTDTH,BEG,END,PRCADEV
"RTN","PRCABJ",105,0)
 S IOP=$P($G(^RC(342,1,0)),"^",8)
"RTN","PRCABJ",106,0)
 I IOP]"" D
"RTN","PRCABJ",107,0)
 .S %ZIS="N0" D ^%ZIS Q:POP
"RTN","PRCABJ",108,0)
 .S ZTRTN="DQ1^PRCACM",ZTDTH=$H,PRCADEV=ION_";"_IOST_";"_IOM_";"_IOSL_";"_$G(IO("DOC"))
"RTN","PRCABJ",109,0)
 .S (ZTSAVE("BEG"),ZTSAVE("END"))=DT,ZTSAVE("PRCADEV")="",ZTDESC="Bill Comment Follow-Up List"
"RTN","PRCABJ",110,0)
 .D ^%ZTLOAD,^%ZISC
"RTN","PRCABJ",111,0)
 Q
"RTN","PRCABJ",112,0)
 ;
"RTN","PRCABJ",113,0)
COMMENT ;Print Comment List
"RTN","PRCABJ",114,0)
 N IOP,ZTIO,ZTSAVE,ZTRTN,ZTDESC,ZTASK,%ZIS,ZTDTH,BEG,END,PRCADEV
"RTN","PRCABJ",115,0)
 S IOP=$P($G(^RC(342,1,0)),"^",8)
"RTN","PRCABJ",116,0)
 I IOP]"" D
"RTN","PRCABJ",117,0)
 .S %ZIS="N0" D ^%ZIS Q:POP
"RTN","PRCABJ",118,0)
 .S ZTRTN="DQ2^PRCACM",ZTDTH=$H,PRCADEV=ION_";"_IOST_";"_IOM_";"_IOSL_";"_$G(IO("DOC"))
"RTN","PRCABJ",119,0)
 .S (ZTSAVE("BEG"),ZTSAVE("END"))=DT,ZTSAVE("PRCADEV")="",ZTDESC="Debtor Comment Follow-up List"
"RTN","PRCABJ",120,0)
 .D ^%ZTLOAD,^%ZISC
"RTN","PRCABJ",121,0)
 Q
"RTN","PRCABJ",122,0)
 ;
"RTN","PRCABJ",123,0)
REPAY ; Starts the Repayment Plan Monitor
"RTN","PRCABJ",124,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","PRCABJ",125,0)
 S ZTIO="",ZTRTN="EN^RCDMB1MT",ZTDTH=$H,ZTDESC="Repayment Plan Monitor"
"RTN","PRCABJ",126,0)
 D ^%ZTLOAD
"RTN","PRCABJ",127,0)
 Q
"RTN","PRCABJ",128,0)
 ;
"RTN","PRCABJ",129,0)
WRKLD ; Generates Diagnostic Measures Workload Reports
"RTN","PRCABJ",130,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","PRCABJ",131,0)
 S ZTIO="",ZTRTN="DQ^RCDMBWLR",ZTDTH=$H,ZTDESC="Diagnostic Measures Workload Reports"
"RTN","PRCABJ",132,0)
 D ^%ZTLOAD
"RTN","PRCABJ",133,0)
 Q
"RTN","PRCABJ",134,0)
 ;
"RTN","PRCABJ",135,0)
EVNT ;Purge AR Events
"RTN","PRCABJ",136,0)
 N IOP,ZTIO,ZTDESC,ZTASK,ZTIO,ZTRTN,ZTSAVE,%ZIS
"RTN","PRCABJ",137,0)
 S ZTIO="",ZTRTN="PUR^RCEVDRV1",ZTDTH=$H,ZTDESC="Purge AR Event Information" D ^%ZTLOAD
"RTN","PRCABJ",138,0)
 Q
"RTN","PRCABJ",139,0)
PURFMS ;Purge FMS documents
"RTN","PRCABJ",140,0)
 NEW ZTRTN,ZTIO,ZTDTH,ZTSK,ZTDESC
"RTN","PRCABJ",141,0)
 S ZTIO="",ZTRTN="EN^RCFMPUR",ZTDESC="AR/FMS DOC PURGE",ZTDTH=$H D ^%ZTLOAD
"RTN","PRCABJ",142,0)
 Q
"RTN","PRCABJ",143,0)
 ;
"RTN","PRCABJ",144,0)
EFT ; Starts matching of EFTs to EOBs job
"RTN","PRCABJ",145,0)
 NEW ZTRTN,ZTIO,ZTDTH,ZTSK,ZTDESC
"RTN","PRCABJ",146,0)
 S ZTIO="",ZTRTN="EN^RCDPEM",ZTDESC="AR/EDI LOCKBOX MATCHING EFTs",ZTDTH=$H D ^%ZTLOAD
"RTN","PRCABJ",147,0)
 Q
"RTN","PRCABJ",148,0)
 ;
"RTN","PRCABJ",149,0)
BNUM ;Check bill numbering series
"RTN","PRCABJ",150,0)
 I $P(^RC(342,1,0),"^",3)="" S $P(^RC(342,1,0),"^",3)="K"_$E($$FY^RCFN01,2)_"00000"
"RTN","PRCABJ",151,0)
 I $E($P(^RC(342,1,0),"^",3),2)'=$E($$FY^RCFN01,2) S $P(^RC(342,1,0),"^",3)="K"_$E($$FY^RCFN01,2)_"00000"
"RTN","PRCABJ",152,0)
 Q
"RTN","PRCABJ",153,0)
ENUM ;Check event numbering series
"RTN","PRCABJ",154,0)
 I $P(^RC(342,1,0),"^",6)="" S $P(^RC(342,1,0),"^",6)="K"_$E($$FY^RCFN01,2)_"A0000"
"RTN","PRCABJ",155,0)
 I $E($P(^RC(342,1,0),"^",6),2)'=$E($$FY^RCFN01,2) S $P(^RC(342,1,0),"^",6)="K"_$E($$FY^RCFN01,2)_"A0000"
"RTN","PRCABJ",156,0)
 Q
"RTN","PRCABJV")
0^116^B27225497
"RTN","PRCABJV",1,0)
PRCABJV ;WASH-ISC@ALTOONA,PA/TJK-FILE VERIFICATION FOR BACKGROUND JOB ;4/6/95  10:13 AM
"RTN","PRCABJV",2,0)
V ;;4.5;Accounts Receivable;**1,48,63,114,141,170,176,173**;Mar 20, 1995
"RTN","PRCABJV",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCABJV",4,0)
EN1(FILE,X1,X2,ERROR) ;
"RTN","PRCABJV",5,0)
 ;FILE IS THE FILE NUMBER
"RTN","PRCABJV",6,0)
 ;X1 AND X2 ARE 3 PART VARIABLES SEPARATED BY SEMI-COLONS WITH
"RTN","PRCABJV",7,0)
 ;THE FORMAT (X-REF INDEX;NODE;PIECE)
"RTN","PRCABJV",8,0)
 ;AN ERROR ARRAY IS SET IF VALIDATION FAILS
"RTN","PRCABJV",9,0)
 NEW LT,CNT,I,I1,I2,I3,REC,IND,ND,PC,DATA,J,LN,FILENT
"RTN","PRCABJV",10,0)
 S LT=$S(FILE[430.3:"TRANST",FILE[430.2:"CAT",1:"EVENT"),CNT=0
"RTN","PRCABJV",11,0)
 F I=1,2 S J=@("X"_I),IND(I)=$P(J,";"),ND(I)=$P(J,";",2),PC(I)=$P(J,";",3)
"RTN","PRCABJV",12,0)
 F I1=1:1 D  Q:(DATA(0)="EOF")!(ERROR)
"RTN","PRCABJV",13,0)
    .S LN=$T(@LT+I1) F I=3:1:6 S DATA(I-3)=$P(LN,";",I)
"RTN","PRCABJV",14,0)
    .Q:DATA(0)="EOF"
"RTN","PRCABJV",15,0)
    .G RC:FILE<430
"RTN","PRCABJV",16,0)
    .I '$D(^PRCA(FILE,"B",DATA(0))) S ERROR=1 Q
"RTN","PRCABJV",17,0)
    .S REC=$O(^PRCA(FILE,"B",DATA(0),0)) I 'REC S ERROR=1 Q
"RTN","PRCABJV",18,0)
    .I DATA(3)'=REC S ERROR=1 Q
"RTN","PRCABJV",19,0)
    .I $P(^PRCA(FILE,REC,0),U)'=DATA(0) S ERROR=1 Q
"RTN","PRCABJV",20,0)
    .G CNT:X1=""
"RTN","PRCABJV",21,0)
    .F I2=1,2 D  Q:ERROR  I I2=1,X2="" Q
"RTN","PRCABJV",22,0)
       ..I '$D(^PRCA(FILE,IND(I2),DATA(I2))) S ERROR=1 G Q2
"RTN","PRCABJV",23,0)
       ..;  do not check if category number is a zero
"RTN","PRCABJV",24,0)
       ..I I2=1,DATA(1)'=0,$O(^PRCA(FILE,IND(I2),DATA(I2),0))'=REC S ERROR=1 G Q2
"RTN","PRCABJV",25,0)
       ..I $P(^PRCA(FILE,REC,ND(I2)),U,PC(I2))'=DATA(I2) S ERROR=1
"RTN","PRCABJV",26,0)
Q2       ..Q
"RTN","PRCABJV",27,0)
CNT    .Q:ERROR
"RTN","PRCABJV",28,0)
    .S CNT=CNT+1
"RTN","PRCABJV",29,0)
Q1    .Q
"RTN","PRCABJV",30,0)
RC    .I '$D(^RC(FILE,"B",DATA(0))) S ERROR=1 Q
"RTN","PRCABJV",31,0)
    .S REC=$O(^RC(FILE,"B",DATA(0),0)) I 'REC S ERROR=1 Q
"RTN","PRCABJV",32,0)
    .I DATA(3)'=REC S ERROR=1 Q
"RTN","PRCABJV",33,0)
    .I $P(^RC(FILE,REC,0),U)'=DATA(0) S ERROR=1 Q
"RTN","PRCABJV",34,0)
    .G CNT:X1=""
"RTN","PRCABJV",35,0)
    .F I3=1,2 D  Q:ERROR  I I3=1,X2="" Q
"RTN","PRCABJV",36,0)
       ..I '$D(^RC(FILE,IND(I3),DATA(I3))) S ERROR=1 G Q3
"RTN","PRCABJV",37,0)
       ..I $O(^RC(FILE,IND(I3),DATA(I3),0))'=REC S ERROR=1 G Q3
"RTN","PRCABJV",38,0)
       ..I $P(^RC(FILE,REC,ND(I3)),U,PC(I3))'=DATA(I3) S ERROR=1
"RTN","PRCABJV",39,0)
Q3       ..Q
"RTN","PRCABJV",40,0)
    .G CNT
"RTN","PRCABJV",41,0)
 I FILE>429.99,$P(^PRCA(FILE,0),U,4)'=CNT S ERROR=1 G EXIT
"RTN","PRCABJV",42,0)
 G EXIT:FILE>429.99
"RTN","PRCABJV",43,0)
 I $P(^RC(FILE,0),U,4)'=CNT S ERROR=1
"RTN","PRCABJV",44,0)
EXIT Q:'ERROR
"RTN","PRCABJV",45,0)
 S FILENT=$S(FILE>429.99:$P(^PRCA(FILE,0),U,4),1:$P(^RC(FILE,0),U,4))
"RTN","PRCABJV",46,0)
 S ERROR(1)="An error has been detected in the "_$P(^DIC(FILE,0),U)_" File."
"RTN","PRCABJV",47,0)
 I DATA(0)="EOF" S ERROR(2)="There are too many entries in your file."
"RTN","PRCABJV",48,0)
 I DATA(0)'="EOF" S ERROR(2)="The "_DATA(0)_" Entry in your file is missing or corrupted."
"RTN","PRCABJV",49,0)
 Q
"RTN","PRCABJV",50,0)
TRANST ;
"RTN","PRCABJV",51,0)
 ;;ACTIVE;102;A;16
"RTN","PRCABJV",52,0)
 ;;ADD (AMEND);302;AD;37
"RTN","PRCABJV",53,0)
 ;;ADMIN.COST CHARGE;12;AC;12
"RTN","PRCABJV",54,0)
 ;;AMEND;303;AM;38
"RTN","PRCABJV",55,0)
 ;;AMENDED BILL;110;AB;33
"RTN","PRCABJV",56,0)
 ;;ARCHIVED;115;XX;49
"RTN","PRCABJV",57,0)
 ;;BILL INCOMPLETE;201;BI;27
"RTN","PRCABJV",58,0)
 ;;CANCELLATION;111;CN;39
"RTN","PRCABJV",59,0)
 ;;CANCELLED BILL;210;CB;26
"RTN","PRCABJV",60,0)
 ;;CASH COLLECTION BY RC/DOJ;7;CJ;7
"RTN","PRCABJV",61,0)
 ;;CHARGE SUSPENDED;19;CS;47
"RTN","PRCABJV",62,0)
 ;;COLLECTED/CLOSED;108;CC;22
"RTN","PRCABJV",63,0)
 ;;COMMENT;17;CM;45
"RTN","PRCABJV",64,0)
 ;;DEBIT VOUCHER (SF 5515);30;DV;30
"RTN","PRCABJV",65,0)
 ;;DECREASE ADJUSTMENT;21;DA;35
"RTN","PRCABJV",66,0)
 ;;DELETE (AMEND);301;DL;36
"RTN","PRCABJV",67,0)
 ;;EXEMPT INT/ADM. COST;14;E;14
"RTN","PRCABJV",68,0)
 ;;IN-ACTIVE;103;IA;17
"RTN","PRCABJV",69,0)
 ;;INCOMPLETE;101;IN;15
"RTN","PRCABJV",70,0)
 ;;INCREASE ADJUSTMENT;1;AJ;1
"RTN","PRCABJV",71,0)
 ;;INTEREST/ADM. CHARGE;13;IC;13
"RTN","PRCABJV",72,0)
 ;;MARSHAL/COURT COST;15;ML;24
"RTN","PRCABJV",73,0)
 ;;NEW BILL;104;N;18
"RTN","PRCABJV",74,0)
 ;;OLD BILL;106;OB;28
"RTN","PRCABJV",75,0)
 ;;OPEN;112;OP;42
"RTN","PRCABJV",76,0)
 ;;PAYMENT (IN FULL);20;PF;34
"RTN","PRCABJV",77,0)
 ;;PAYMENT (IN PART);2;PP;2
"RTN","PRCABJV",78,0)
 ;;PENDING APPROVAL;205;PA;20
"RTN","PRCABJV",79,0)
 ;;PENDING ARCHIVE;114;X;48
"RTN","PRCABJV",80,0)
 ;;PENDING CALM CODE;107;PC;21
"RTN","PRCABJV",81,0)
 ;;RE-ESTABLISH;250;RW;43
"RTN","PRCABJV",82,0)
 ;;REESTABLISH TO RC/DOJ;5;RR;5
"RTN","PRCABJV",83,0)
 ;;REFER TO RC;3;RC;3
"RTN","PRCABJV",84,0)
 ;;REFER TO DOJ;4;RJ;4
"RTN","PRCABJV",85,0)
 ;;REFUND REVIEW;113;PR;44
"RTN","PRCABJV",86,0)
 ;;REFUNDED;120;RF;41
"RTN","PRCABJV",87,0)
 ;;REPAYMENT PLAN;16;RP;25
"RTN","PRCABJV",88,0)
 ;;RETURNED BY RC/DOJ;6;RD;6
"RTN","PRCABJV",89,0)
 ;;RETURNED FOR AMENDMENT;230;RA;32
"RTN","PRCABJV",90,0)
 ;;RETURNED FROM AR (NEW);220;RT;31
"RTN","PRCABJV",91,0)
 ;;SUSPENDED;240;SP;40
"RTN","PRCABJV",92,0)
 ;;SUSPENSE;105;S;19
"RTN","PRCABJV",93,0)
 ;;TERM.BY COMPROMISE;9;TC;9
"RTN","PRCABJV",94,0)
 ;;TERM.BY RC/DOJ;29;TJ;29
"RTN","PRCABJV",95,0)
 ;;TERM.BY FIS.OFFICER;8;TO;8
"RTN","PRCABJV",96,0)
 ;;UNSUSPENDED;18;US;46
"RTN","PRCABJV",97,0)
 ;;WAIVED IN FULL;10;WF;10
"RTN","PRCABJV",98,0)
 ;;WAIVED IN PART;11;WP;11
"RTN","PRCABJV",99,0)
 ;;WRITE-OFF;109;WO;23
"RTN","PRCABJV",100,0)
 ;;EOF
"RTN","PRCABJV",101,0)
CAT ;
"RTN","PRCABJV",102,0)
 ;;ADULT DAY HEALTH CARE;40;AD;33
"RTN","PRCABJV",103,0)
 ;;C (MEANS TEST);24;C;18
"RTN","PRCABJV",104,0)
 ;;CHAMPUS;37;C1;30
"RTN","PRCABJV",105,0)
 ;;CHAMPUS PATIENT;38;C2;31
"RTN","PRCABJV",106,0)
 ;;CHAMPUS THIRD PARTY;39;C3;32
"RTN","PRCABJV",107,0)
 ;;CHAMPVA;36;CV;29
"RTN","PRCABJV",108,0)
 ;;CHAMPVA SUBSISTENCE;34;CS;27
"RTN","PRCABJV",109,0)
 ;;CHAMPVA THIRD PARTY;35;CT;28
"RTN","PRCABJV",110,0)
 ;;CRIME OF PER.VIO.;27;CP;8
"RTN","PRCABJV",111,0)
 ;;CURRENT EMP.;14;CE;16
"RTN","PRCABJV",112,0)
 ;;DOMICILIARY;41;DO;34
"RTN","PRCABJV",113,0)
 ;;EMERGENCY/HUMANITARIAN;25;H;2
"RTN","PRCABJV",114,0)
 ;;EX-EMPLOYEE;13;E;15
"RTN","PRCABJV",115,0)
 ;;FEDERAL AGENCIES-REFUND;15;F2;13
"RTN","PRCABJV",116,0)
 ;;FEDERAL AGENCIES-REIMB.;16;F1;14
"RTN","PRCABJV",117,0)
 ;;GERIATRIC EVAL-INSTITUTIONAL;44;GE;37
"RTN","PRCABJV",118,0)
 ;;GERIATRIC EVAL-NON-INSTITUTION;45;GN;38
"RTN","PRCABJV",119,0)
 ;;HOSPITAL CARE (NSC);1;HC;5
"RTN","PRCABJV",120,0)
 ;;HOSPITAL CARE PER DIEM;32;HP;25
"RTN","PRCABJV",121,0)
 ;;INELIGIBLE HOSP.;20;I;1
"RTN","PRCABJV",122,0)
 ;;INTERAGENCY;19;IA;20
"RTN","PRCABJV",123,0)
 ;;MEDICARE;28;MC;21
"RTN","PRCABJV",124,0)
 ;;MILITARY;17;M;12
"RTN","PRCABJV",125,0)
 ;;NO-FAULT AUTO ACC.;26;NA;7
"RTN","PRCABJV",126,0)
 ;;NURSING HOME CARE PER DIEM;31;NP;24
"RTN","PRCABJV",127,0)
 ;;NURSING HOME CARE(NSC);3;NC;3
"RTN","PRCABJV",128,0)
 ;;NURSING HOME CARE-LTC;46;NL;39
"RTN","PRCABJV",129,0)
 ;;OUTPATIENT CARE(NSC);2;OC;4
"RTN","PRCABJV",130,0)
 ;;PREPAYMENT;33;PP;26
"RTN","PRCABJV",131,0)
 ;;REIMBURS.HEALTH INS.;21;RI;9
"RTN","PRCABJV",132,0)
 ;;RESPITE CARE-INSTITUTIONAL;42;RC;35
"RTN","PRCABJV",133,0)
 ;;RESPITE CARE-NON-INSTITUTIONAL;43;RN;36
"RTN","PRCABJV",134,0)
 ;;RX CO-PAYMENT/NSC VET;30;PN;23
"RTN","PRCABJV",135,0)
 ;;RX CO-PAYMENT/SC VET;29;PS;22
"RTN","PRCABJV",136,0)
 ;;SHARING AGREEMENTS;18;SA;19
"RTN","PRCABJV",137,0)
 ;;TORT FEASOR;22;TF;10
"RTN","PRCABJV",138,0)
 ;;VENDOR;11;V;17
"RTN","PRCABJV",139,0)
 ;;WORKMAN'S COMP.;23;WC;6
"RTN","PRCABJV",140,0)
 ;;EOF
"RTN","PRCABJV",141,0)
EVENT ;
"RTN","PRCABJV",142,0)
 ;;CASH PAYMENT;6;;6
"RTN","PRCABJV",143,0)
 ;;CHECK/MO PAYMENT;4;;4
"RTN","PRCABJV",144,0)
 ;;COMMENT;1;;1
"RTN","PRCABJV",145,0)
 ;;CREDIT CARD PAYMENT;7;;7
"RTN","PRCABJV",146,0)
 ;;DEPT OF JUSTICE PAYMENT;5;;5
"RTN","PRCABJV",147,0)
 ;;REGIONAL COUNSEL PAYMENT;3;;3
"RTN","PRCABJV",148,0)
 ;;FOLLOW-UP LETTER;10;;10
"RTN","PRCABJV",149,0)
 ;;IRS PAYMENT;11;;11
"RTN","PRCABJV",150,0)
 ;;PATIENT STATEMENT;2;;2
"RTN","PRCABJV",151,0)
 ;;TDA PAYMENT;8;;8
"RTN","PRCABJV",152,0)
 ;;UB PRINTED;9;;9
"RTN","PRCABJV",153,0)
 ;;LOCKBOX;12;;12
"RTN","PRCABJV",154,0)
 ;;TOP PAYMENT;13;;13
"RTN","PRCABJV",155,0)
 ;;EDI LOCKBOX;14;;14
"RTN","PRCABJV",156,0)
 ;;EOF
"RTN","PRCAFBD")
0^14^B14582773
"RTN","PRCAFBD",1,0)
PRCAFBD ;WASH-ISC@ALTOONA,PA/CLH-Build FMS Billing Document ;8/2/95  3:14 PM
"RTN","PRCAFBD",2,0)
V ;;4.5;Accounts Receivable;**16,48,86,90,119,165,204,203,173**;Mar 20, 1995
"RTN","PRCAFBD",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCAFBD",4,0)
EN(BILL,ERR) ;Process NEW BILL to FMS
"RTN","PRCAFBD",5,0)
 S ERR=-1
"RTN","PRCAFBD",6,0)
 Q:$D(RCONVERT)
"RTN","PRCAFBD",7,0)
 I '$D(^PRCA(430,BILL,11)) S ERR="1^ACCOUNTING INFORMATION MISSING.  CANNOT PROCESS BILL" Q
"RTN","PRCAFBD",8,0)
 ;
"RTN","PRCAFBD",9,0)
 ;  funds 5014 (old), 2431 (old), 5287.* and 4032 should not create a BD
"RTN","PRCAFBD",10,0)
 S %=$P($G(^PRCA(430,BILL,11)),"^",17)
"RTN","PRCAFBD",11,0)
 I %=5014!(%=2431)!($P(%,".")=5287)!(%=4032) Q
"RTN","PRCAFBD",12,0)
 ;
"RTN","PRCAFBD",13,0)
 I '$D(PRCA("SITE")) S PRCA("SITE")=$S($G(BILL):$P($P($G(^PRCA(430,BILL,0)),"^"),"-"),1:$$SITE^RCMSITE)
"RTN","PRCAFBD",14,0)
 K ^TMP("PRCABD",$J)
"RTN","PRCAFBD",15,0)
 I $G(BILL)="" S ERR="1^Missing Bill Number"
"RTN","PRCAFBD",16,0)
 I $D(^PRCA(430,BILL,0)),$P(^(0),U,9)="" S ERR="1^No debtor for bill" Q
"RTN","PRCAFBD",17,0)
 N GECSFMS,REC,REC11,VENCODE,BFY,EFY,LINEFUND,%,%I,%H,X,VEN,CAT,CP,ADDR,AC,RJ,FMSNUM,FMSNUM1,VENDORID,ADD,DA,Y
"RTN","PRCAFBD",18,0)
 D NOW^%DTC
"RTN","PRCAFBD",19,0)
 I '$G(PRCA("AUTO_AUDIT")) W !,"Building FMS Billing Document. Please hold...",!
"RTN","PRCAFBD",20,0)
 S REC=$G(^PRCA(430,BILL,0)),REC11=$G(^PRCA(430,BILL,11)),FMSNUM=$P($P(REC,U),"-")_$P($P(REC,U),"-",2)
"RTN","PRCAFBD",21,0)
 ;gather vendor information
"RTN","PRCAFBD",22,0)
 S VENCODE=$$VENDORID^RCXFMSUV(BILL)
"RTN","PRCAFBD",23,0)
 I VENCODE="UNKNOWN" S ERR="1^Need FMS Vendor ID for BD Document" Q
"RTN","PRCAFBD",24,0)
 I VENCODE="LINK" S ERR="1^Debtor must be linked to vendor file" Q
"RTN","PRCAFBD",25,0)
 S ADD=$$SADD^RCFN01(5)
"RTN","PRCAFBD",26,0)
 I (VENCODE="PERSONOTH")!(VENCODE="XEMPL")!(VENCODE="CUREMPL")!($E(VENCODE,1,4)="CHMP")!($E(VENCODE,1,3)="TRI")!(VENCODE="INELIG") D
"RTN","PRCAFBD",27,0)
  . N I F I=1:1:6 S ADDR(I)=$P(ADD,U,I)
"RTN","PRCAFBD",28,0)
  . I ADDR(6)["-" S ADDR(7)=$P(ADDR(6),"-",2),ADDR(6)=$P(ADDR(6),"-")
"RTN","PRCAFBD",29,0)
  . Q
"RTN","PRCAFBD",30,0)
 N FMSDT S FMSDT=$$FMSDATE^RCBEUTRA(DT)
"RTN","PRCAFBD",31,0)
 S ^TMP("PRCABD",$J,1)="BD2^"_$E(FMSDT,4,5)_U_$E(FMSDT,6,7)_U_$E(FMSDT,2,3)_"^^^^^^E^"_$E(VENCODE,1,9)_U_$E(VENCODE,10,11)_U_$J($P(REC,U,3),0,2)_"^^^^"_$E($G(ADDR(1)),1,30)_U_$E($G(ADDR(2)),1,30)_U_$E($G(ADDR(3)),1,30)
"RTN","PRCAFBD",32,0)
 S ^TMP("PRCABD",$J,1)=^TMP("PRCABD",$J,1)_U_$E($G(ADDR(4)),1,19)_U_$G(ADDR(5))_U_$G(ADDR(6))_U_$G(ADDR(7))_"^N^^^^^^W^~"
"RTN","PRCAFBD",33,0)
 S ^TMP("PRCABD",$J,2)="LIN^~"
"RTN","PRCAFBD",34,0)
 ;accouting information - stored on 11th node file 430
"RTN","PRCAFBD",35,0)
 S ^TMP("PRCABD",$J,3)="BDA^"_$$LINE^RCXFMSC1(BILL)_"^"_$P(REC11,U,15)_U_$P(REC11,U,16)_U_$P(REC11,U,17)_U_$P(REC11,U,8)_U_$P(REC11,U,11)_U_$P(REC11,U,20)_U_$P(REC11,U,6)_U_$P(REC11,U,7)_U_$P(REC11,U,21)_U_$P(REC11,U,5)
"RTN","PRCAFBD",36,0)
 S ^TMP("PRCABD",$J,3)=^TMP("PRCABD",$J,3)_U_$P(REC11,U,12)_U_$P(REC11,U,14)_"^^"_$J($P(REC,U,3),0,2)_"^I^AR_INTERFACE^^^^"
"RTN","PRCAFBD",37,0)
 S ^TMP("PRCABD",$J,3)=^TMP("PRCABD",$J,3)_$P(REC11,U,10)_"^^^^^^^^"_$P(REC11,U,2)_U_$P(REC11,U,3)_"^~"
"RTN","PRCAFBD",38,0)
 ;build control segment
"RTN","PRCAFBD",39,0)
 D CONTROL^GECSUFMS("A",PRCA("SITE"),FMSNUM,"BD",10,"","","Billing Document")
"RTN","PRCAFBD",40,0)
 S FMSNUM1=$P($G(GECSFMS("DOC")),U,3)_"-"_$P($G(GECSFMS("DOC")),U,4)
"RTN","PRCAFBD",41,0)
 ;build and send document to FTH
"RTN","PRCAFBD",42,0)
 S DA=0 F  S DA=$O(^TMP("PRCABD",$J,DA)) Q:'DA  D SETCS^GECSSTAA(GECSFMS("DA"),^(DA))
"RTN","PRCAFBD",43,0)
 D OPEN^RCFMDRV1(FMSNUM1,6,"B"_BILL,.ENT,.ERR,BILL) I ERR]"" D
"RTN","PRCAFBD",44,0)
 . S ERR=-1
"RTN","PRCAFBD",45,0)
 . N Z S Z="Unable to create an entry in AR Document file."
"RTN","PRCAFBD",46,0)
 . I '$G(PRCA("AUTO_AUDIT")) W !!,Z,! Q
"RTN","PRCAFBD",47,0)
 . D SETERR^PRCAUDT("BILL: "_$$BILL^PRCAUDT(BILL)),SETERR^PRCAUDT(Z)
"RTN","PRCAFBD",48,0)
 D SETCODE^GECSSDCT(GECSFMS("DA"),"D RETN^RCFMFN02")
"RTN","PRCAFBD",49,0)
 D SETSTAT^GECSSTAA(GECSFMS("DA"),"Q")
"RTN","PRCAFBD",50,0)
 D SSTAT^RCFMFN02(FMSNUM1,1)
"RTN","PRCAFBD",51,0)
 I '$G(PRCA("AUTO_AUDIT")) D
"RTN","PRCAFBD",52,0)
 . S Y=FMSDT D DD^%DT
"RTN","PRCAFBD",53,0)
 . W !!,"FMS document, # ",GECSFMS("DA"),", built and queued for transmission on "_Y,!!
"RTN","PRCAFBD",54,0)
 Q
"RTN","PRCAFBD",55,0)
 ;
"RTN","PRCAUDT")
0^12^B46780803
"RTN","PRCAUDT",1,0)
PRCAUDT ;SF-ISC/YJK-AUDIT A NEW BILL/EDIT INCOMPLETE AR ;10/17/96  5:33 PM
"RTN","PRCAUDT",2,0)
V ;;4.5;Accounts Receivable;**1,21,57,97,143,107,173**;Mar 20, 1995
"RTN","PRCAUDT",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCAUDT",4,0)
 NEW X,Y,LOOP,DIR
"RTN","PRCAUDT",5,0)
 W ! S DIR("B")="YES",DIR("A")="Do you want to loop thru 'NEW BILLS'",DIR(0)="Y" D ^DIR K DIR G:$D(DIRUT) END S LOOP=+Y
"RTN","PRCAUDT",6,0)
 D AUDITB(0,0,LOOP)
"RTN","PRCAUDT",7,0)
 Q
"RTN","PRCAUDT",8,0)
 ;
"RTN","PRCAUDT",9,0)
AUDITB(PRCABN,PRAUTOA,LOOP) ;
"RTN","PRCAUDT",10,0)
 ; PRCABN = the ien of the entry to audit or 0 for batch entry above
"RTN","PRCAUDT",11,0)
 ; PRAUTOA = 1 for auto-audit
"RTN","PRCAUDT",12,0)
 ; LOOP = 1 if looping through bills, 0 if not
"RTN","PRCAUDT",13,0)
 N PREND,PRCA,PRCASEG,X,Y
"RTN","PRCAUDT",14,0)
 S PREND=0,PRCA("AUTO_AUDIT")=PRAUTOA
"RTN","PRCAUDT",15,0)
 F  D  Q:$S(PREND:1,PRAUTOA:1,1:0)
"RTN","PRCAUDT",16,0)
 . K PRCABT S PRCA("MESG")="*** AUDITED AND RELEASED ***"
"RTN","PRCAUDT",17,0)
 . I LOOP,'$O(^PRCA(430,"AC",18,PRCABN)) W !!,"*** Loop Done ***",!! S PREND=1 Q
"RTN","PRCAUDT",18,0)
 . I PRAUTOA S PRCA("CKSITE")="",PRCA("SITE")=$P($$BILL(PRCABN),"-") K PRCAT
"RTN","PRCAUDT",19,0)
 . I '$D(PRCA("CKSITE")) D CKSITE K:$D(PRCA("CKSITE")) PRCAT I '$D(PRCA("CKSITE")) S PREND=1 Q
"RTN","PRCAUDT",20,0)
 . I LOOP S PRCABN=$O(^PRCA(430,"AC",18,PRCABN)) I 'PRCABN S PREND=1 Q
"RTN","PRCAUDT",21,0)
 . I LOOP!PRAUTOA D
"RTN","PRCAUDT",22,0)
 .. S PRCATY=$P(^PRCA(430,PRCABN,0),U,2),PRCA("SEG")=$S(+$P(^(0),U,21)>240:$P(^(0),U,21),1:"")
"RTN","PRCAUDT",23,0)
 .. S PRCA("STATUS")=$P(^PRCA(430,PRCABN,0),U,8),PRCA("APPR")=$P(^(0),U,18)
"RTN","PRCAUDT",24,0)
 . E  D  Q:PREND
"RTN","PRCAUDT",25,0)
 .. S DIC("S")="S Z0=$S($D(^PRCA(430.3,+$P(^(0),U,8),0)):$P(^(0),U,3),1:0) I Z0=104" D DIC I '$G(PRCABN) S PREND=1
"RTN","PRCAUDT",26,0)
 . ;
"RTN","PRCAUDT",27,0)
 . S PRCAKT=$S($P(^PRCA(430,PRCABN,0),U,2)]"":$P(^(0),U,2),1:"")
"RTN","PRCAUDT",28,0)
 . I +PRCAKT'>0 D:$G(PRAUTOA) SETERR("NO CATEGORY DEFINED FOR BILL "_$$BILL(PRCABN)) D END Q
"RTN","PRCAUDT",29,0)
 . S PRCARI=$O(^PRCA(430.2,"AC",21,0))
"RTN","PRCAUDT",30,0)
 . I $P(^PRCA(430,PRCABN,0),U,21)="" S X=PRCABN D:PRCARI=PRCAKT SEGMT S:'$D(Y) Y=-1 S PRCASEG=$S(PRCARI=PRCAKT&(Y<1):"",PRCARI=PRCAKT:Y,$D(^PRCA(430.2,PRCAKT,0)):$P(^(0),U,3),1:""),$P(^PRCA(430,PRCABN,0),U,21)=PRCASEG
"RTN","PRCAUDT",31,0)
 . S PRCAT=$S($D(^PRCA(430.2,PRCAKT,0)):$P(^(0),U,6),1:"") I PRCAT="" D:$G(PRAUTOA) SETERR("NO CATEGORY TYPE DEFINED FOR BILL "_$$BILL(PRCABN)) D END Q
"RTN","PRCAUDT",32,0)
 . I $P(^PRCA(430.2,PRCAKT,0),U,7)=24 S PRCAT("C")=1,Z0=$P(^PRCA(430,PRCABN,0),U,16) S:+Z0'>0 Z0=PRCAKT S $P(^PRCA(430,PRCABN,0),U,21)=$S($D(^PRCA(430.2,+Z0,0)):$P(^(0),U,3),1:0) K Z0,PRCAKT
"RTN","PRCAUDT",33,0)
 . ;
"RTN","PRCAUDT",34,0)
 . I '$G(PRAUTOA) D DISPL,DISPLACC^PRCAFUT D  Q:PREND
"RTN","PRCAUDT",35,0)
 .. I $D(PRCA("EXIT")) S PREND=1 Q 
"RTN","PRCAUDT",36,0)
 .. D MESSG
"RTN","PRCAUDT",37,0)
 . S PRCARETN=0,PRCAOK=$G(PRAUTOA)
"RTN","PRCAUDT",38,0)
 . I '$G(PRAUTOA) D ASK I $D(PRCA("EXIT")) D END S PREND=1 Q
"RTN","PRCAUDT",39,0)
 . I PRCAOK=1 D  D:$D(PRCA("EXIT")) END Q
"RTN","PRCAUDT",40,0)
 .. K PRCA("EXIT") D MTCHK I $D(PRCA("EXIT")) Q
"RTN","PRCAUDT",41,0)
 .. D:PRCAT="T" THIRD^PRCAUDT1
"RTN","PRCAUDT",42,0)
 .. I +$P(^PRCA(430,PRCABN,0),U,5)'>0 D CAUSED^PRCAUDT1 Q:PRCAOK=0
"RTN","PRCAUDT",43,0)
 .. D COMMENTS^PRCAUT3 Q:$D(PRCA("EXIT"))
"RTN","PRCAUDT",44,0)
 .. S PRCASIG=0 D SIG K PRCA("EXIT") Q:PRCASIG=0
"RTN","PRCAUDT",45,0)
 .. D UPBALN^PRCAUDT1,UPSEG
"RTN","PRCAUDT",46,0)
 .. I '$$ACCK^PRCAACC(PRCABN),("^28^29^"'[("^"_$G(PRCAKT)_"^")) D EN^PRCAFBD(PRCABN,.ERR)
"RTN","PRCAUDT",47,0)
 .. I $G(PRCAKT)=28 D EN^PRCACPV(PRCABN,.ERR) S:ERR<0 PRCA("MESG")="FMS document created . . . "
"RTN","PRCAUDT",48,0)
 .. K PRCA("EXIT")
"RTN","PRCAUDT",49,0)
 .. I +$G(ERR)>0 D  D END Q
"RTN","PRCAUDT",50,0)
 ... N Z,Z0,Z1
"RTN","PRCAUDT",51,0)
 ... S Z="Unable to create FMS Billing Document: ",Z0=$P(ERR,U,2),Z1="Status remains NEW BILL."
"RTN","PRCAUDT",52,0)
 ... I '$G(PRAUTOA) D
"RTN","PRCAUDT",53,0)
 .... W *7,!!,Z,!,?10,Z0,!!,Z1,!! H 3
"RTN","PRCAUDT",54,0)
 ... E  D
"RTN","PRCAUDT",55,0)
 .... D SETERR(Z),SETERR(Z0),SETERR(Z1)
"RTN","PRCAUDT",56,0)
 ... S PRCA("STATUS")=18 D UPSTATS^PRCAUT2
"RTN","PRCAUDT",57,0)
 ... ;
"RTN","PRCAUDT",58,0)
 .. I '$G(PRAUTOA) D SIG1 W !,PRCA("MESG")
"RTN","PRCAUDT",59,0)
 .. D END
"RTN","PRCAUDT",60,0)
 . I PRCARETN=1,'$G(PRAUTOA) D RETN^PRCAUDT1 Q
"RTN","PRCAUDT",61,0)
 . D END
"RTN","PRCAUDT",62,0)
 D END
"RTN","PRCAUDT",63,0)
 Q
"RTN","PRCAUDT",64,0)
 ;
"RTN","PRCAUDT",65,0)
END L -^PRCA(430,+$G(PRCABN)) K %,DA,PRCAKT,PRCATY,PRCANM,PRCARETN,PRCAOK,PRCAT,DIC,DIE,DR,ERR,PRCASIG,J,Z0,D0,DI,PRC,PRCARI,DIR,DIRUT,DIROUT,DUOUT
"RTN","PRCAUDT",66,0)
 D CLEAN^DILF
"RTN","PRCAUDT",67,0)
 Q
"RTN","PRCAUDT",68,0)
 ;
"RTN","PRCAUDT",69,0)
 ;======================== SUBROUTINES ==========================
"RTN","PRCAUDT",70,0)
BULL(PRCABN) ; Send a bulletin for auto audit errors
"RTN","PRCAUDT",71,0)
 ; PRCABN = ien of bill in file 430
"RTN","PRCAUDT",72,0)
 N XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,XMZ,XMERR,PRCAE,CT,Z
"RTN","PRCAUDT",73,0)
 S XMTO("I:G.RCDPE PAYMENTS")="",CT=0
"RTN","PRCAUDT",74,0)
 S CT=CT+1,PRCAE(CT)="The following problem(s) were encountered when attempting to auto-audit a bill",CT=CT+1,PRCAE(CT)="from IB's electronic return messages"
"RTN","PRCAUDT",75,0)
 S CT=CT+1,PRCAE(CT)=" ",Z=0
"RTN","PRCAUDT",76,0)
 F  S Z=$O(^TMP($J,"PRCA_AUTO_AUDIT_ERROR",Z)) Q:'Z  S CT=CT+1,PRCAE(CT)=$G(^(Z))
"RTN","PRCAUDT",77,0)
 S XMBODY="PRCAE"
"RTN","PRCAUDT",78,0)
 D SENDMSG^XMXAPI("","AUTO AUDIT FAILED FOR BILL "_$$BILL(PRCABN),XMBODY,.XMTO)
"RTN","PRCAUDT",79,0)
 Q
"RTN","PRCAUDT",80,0)
 ;
"RTN","PRCAUDT",81,0)
DIC S DIC="^PRCA(430,",DIC(0)="AEQM" D BILLN^PRCAUTL Q
"RTN","PRCAUDT",82,0)
DIE W ! S DA=PRCABN,DIC="^PRCA(430,",PRCA("LOCK")=0 D LOCKF^PRCAWO1 Q:PRCA("LOCK")=1  S DIE=DIC
"RTN","PRCAUDT",83,0)
 I '$$ACCK^PRCAACC(PRCABN),("^27^28^"'[("^"_PRCAKT_"^")) D CPLK^PRCAFUT(PRCABN)
"RTN","PRCAUDT",84,0)
 Q:$D(PRCA("EXIT"))  S DR="[PRCAE AUDIT]" D ^DIE K DIE,DR Q
"RTN","PRCAUDT",85,0)
DISPL ;display the accounts receivable data user has entered.
"RTN","PRCAUDT",86,0)
 Q:'$D(PRCABN)  NEW DIC,L,FR,TO,FLDS,IOP,BY
"RTN","PRCAUDT",87,0)
 S IOP=IO(0),DIC="^PRCA(430,",FLDS="[PRCA DISP AUDIT]",(FR,TO)=PRCABN,L=0,BY="@NUMBER" D EN1^DIP,WOBIL^PRCAUDT1 Q
"RTN","PRCAUDT",88,0)
ASK S %=2 W !,"IS THIS DATA CORRECT" D YN^DICN I %<0 S PRCA("EXIT")="" Q
"RTN","PRCAUDT",89,0)
 I %=0 D M1^PRCAMESG G ASK
"RTN","PRCAUDT",90,0)
 I %=1 S PRCAOK=1 Q
"RTN","PRCAUDT",91,0)
ASK1 S %=2 W !!,"Do you want to edit this information " D YN^DICN I %<0 S PRCA("EXIT")="" Q
"RTN","PRCAUDT",92,0)
 I %=0 D M2^PRCAMESG G ASK1
"RTN","PRCAUDT",93,0)
 I %=1 D DIE,DISPL,DISPLACC^PRCAFUT G ASK
"RTN","PRCAUDT",94,0)
ASK2 S %=2 W !!,"Then do you want to return this bill to the service" D YN^DICN I %<0 S PRCA("EXIT")="" Q
"RTN","PRCAUDT",95,0)
 Q:%=2  I %=0 W !,"Answer 'Y' (YES) or 'N' (NO)" G ASK2
"RTN","PRCAUDT",96,0)
ASK3 S %=2 W !,"Are you sure you want to return" D YN^DICN I %<0 S PRCA("EXIT")="" Q
"RTN","PRCAUDT",97,0)
 I %=0 W "Answer 'Y' (YES) if you want to return this bill to the service that originated it.  If not, answer 'N' (NO)." G ASK3
"RTN","PRCAUDT",98,0)
 I %=1 S PRCARETN=1 Q
"RTN","PRCAUDT",99,0)
 Q  ;end of ASK
"RTN","PRCAUDT",100,0)
SIG N PRCADUZ
"RTN","PRCAUDT",101,0)
 I $G(PRAUTOA) S PRCADUZ=+$O(^VA(200,"B","PRCA,AUTOAUDIT",0)),PRCANM="AUTO-AUDIT"
"RTN","PRCAUDT",102,0)
 I '$G(PRAUTOA) S DA=PRCABN D SIG^PRCASIG
"RTN","PRCAUDT",103,0)
 D NOW^%DTC I $D(PRCANM) S $P(^PRCA(430,PRCABN,9),U,1,3)=$S('$G(PRAUTOA):+DUZ,1:PRCADUZ)_U_PRCANM_U_%,PRCASIG=1
"RTN","PRCAUDT",104,0)
 Q
"RTN","PRCAUDT",105,0)
SIG1 S PRCANM=$P($G(^VA(200,DUZ,20)),U,2) I PRCANM]"" D EN^PRCASIG(.PRCANM,DUZ,PRCABN_+$P(^PRCA(430,PRCABN,0),U,3)) S $P(^PRCA(430,PRCABN,9),U,2)=PRCANM
"RTN","PRCAUDT",106,0)
 Q
"RTN","PRCAUDT",107,0)
MESSG Q
"RTN","PRCAUDT",108,0)
SEGMT D:$D(^DGCR(399,PRCABN)) ^IBCAMS S:'$D(^DGCR(399,PRCABN)) Y=297 Q
"RTN","PRCAUDT",109,0)
UPSEG ;
"RTN","PRCAUDT",110,0)
 S PRCAT=$P(^PRCA(430,PRCABN,0),U,2),$P(^(0),U,21)=""
"RTN","PRCAUDT",111,0)
 D SEGMT^PRCAEOL
"RTN","PRCAUDT",112,0)
 Q
"RTN","PRCAUDT",113,0)
CKSITE ;check site parameter and user number.
"RTN","PRCAUDT",114,0)
 NEW DIC
"RTN","PRCAUDT",115,0)
 S DIC="^DIC(4,",DIC(0)="QEAM",DIC("B")=$P($G(^RC(342,1,0)),"^"),DIC("A")="SITE: " D ^DIC Q:Y<0  S PRCA("SITE")=+$$GET1^DIQ(4,+Y,99) Q:'PRCA("SITE")
"RTN","PRCAUDT",116,0)
 S PRCA("CKSITE")="" Q
"RTN","PRCAUDT",117,0)
MTCHK N PRCAI,PRCAMT,PRCAMT1,Z,Z0
"RTN","PRCAUDT",118,0)
 S PRCAMT1=0 F PRCAI=0:0 S PRCAI=$O(^PRCA(430,PRCABN,2,PRCAI)) Q:'PRCAI  S PRCAMT=+$P($G(^(PRCAI,0)),"^",8) I PRCAMT S PRCAMT1=PRCAMT1+1
"RTN","PRCAUDT",119,0)
 I PRCAMT1=1 Q
"RTN","PRCAUDT",120,0)
 S Z="Currently, just one Fiscal Year amount is sent to FMS.",Z0="This bill has "_PRCAMT1_" entered and should be returned to the service."
"RTN","PRCAUDT",121,0)
 I '$G(PRAUTOA) D
"RTN","PRCAUDT",122,0)
 . W !!,?3,Z,?3,Z0,!
"RTN","PRCAUDT",123,0)
 E  D
"RTN","PRCAUDT",124,0)
 . D SETERR("BILL: "_$$BILL(PRCABN)),SETERR(Z),SETERR(Z0)
"RTN","PRCAUDT",125,0)
 S PRCA("EXIT")=""
"RTN","PRCAUDT",126,0)
 Q
"RTN","PRCAUDT",127,0)
 ;
"RTN","PRCAUDT",128,0)
AUDITX(PRCABN) ; Auto audit a bill
"RTN","PRCAUDT",129,0)
 N PRAUTOA
"RTN","PRCAUDT",130,0)
 K ^TMP($J,"PRCA_AUTO_AUDIT_ERROR")
"RTN","PRCAUDT",131,0)
 L +^PRCA(430,+$G(PRCABN)):5 I '$T D SETERR(PRCABN,"ANOTHER USER HAS LOCKED BILL "_$$BILL(PRCABN))
"RTN","PRCAUDT",132,0)
 I '$D(^TMP($J,"PRCA_AUTO_AUDIT_ERROR")) D AUDITB(PRCABN,1,0)
"RTN","PRCAUDT",133,0)
 ;
"RTN","PRCAUDT",134,0)
 I $D(^TMP($J,"PRCA_AUTO_AUDIT_ERROR")) D BULL(PRCABN)
"RTN","PRCAUDT",135,0)
 K ^TMP($J,"PRCA_AUTO_AUDIT_ERROR")
"RTN","PRCAUDT",136,0)
 Q
"RTN","PRCAUDT",137,0)
 ;
"RTN","PRCAUDT",138,0)
SETERR(TEXT) ;
"RTN","PRCAUDT",139,0)
 S ^TMP($J,"PRCA_AUTO_AUDIT_ERROR",+$O(^TMP($J,"PRCA_AUTO_AUDIT_ERROR",""),-1)+1)=TEXT
"RTN","PRCAUDT",140,0)
 Q
"RTN","PRCAUDT",141,0)
 ;
"RTN","PRCAUDT",142,0)
BILL(PRCABN) ; Returns AR bill number in external format
"RTN","PRCAUDT",143,0)
 Q $P($G(^PRCA(430,+$G(PRCABN),0)),U)
"RTN","PRCAUDT",144,0)
 ;
"RTN","PRCAUDT1")
0^13^B11997062
"RTN","PRCAUDT1",1,0)
PRCAUDT1 ;SF-ISC/YJK-SUBROUTINE AUDIT A NEW BILL/EDIT INCOMPLETE AR ;5/1/95  3:05 PM
"RTN","PRCAUDT1",2,0)
V ;;4.5;Accounts Receivable;**1,173**;Mar 20, 1995
"RTN","PRCAUDT1",3,0)
 ;This audits a new bill and edits incomplete accounts receivables.
"RTN","PRCAUDT1",4,0)
 ;
"RTN","PRCAUDT1",5,0)
 ; DBIA for reference to file 399.3: DBIA4118
"RTN","PRCAUDT1",6,0)
 ;
"RTN","PRCAUDT1",7,0)
RETN S DR="36",DA=PRCABN,DIE="^PRCA(430," D ^DIE K DR,DIE,DA
"RTN","PRCAUDT1",8,0)
 S PRCA("STATUS")=$O(^PRCA(430.3,"AC",220,"")),PRCA("SDT")=DT,PRCASV("STATUS")=1 D UPSTATS^PRCAUT2 S $P(^PRCA(430,PRCABN,3),U,1)=DT,$P(^(3),U,2)=DUZ
"RTN","PRCAUDT1",9,0)
 W !,"THE BILL HAS BEEN RETURNED",! Q  ;end of RETN
"RTN","PRCAUDT1",10,0)
 K DR Q
"RTN","PRCAUDT1",11,0)
WOBIL ;Check if the patient account has old written-off bills.
"RTN","PRCAUDT1",12,0)
 Q:('$D(PRCAT))!('$D(PRCABN))  Q:"CP"'[PRCAT  S PRCA("DEBTOR")=$P(^PRCA(430,PRCABN,0),U,9) Q:PRCA("DEBTOR")=""  S PRCAWOB=$O(^PRCA(430.3,"AC",109,0)),Z0=0
"RTN","PRCAUDT1",13,0)
 F PRCAWO=0:0 S Z0=$O(^PRCA(430,"C",PRCA("DEBTOR"),Z0)) Q:+Z0'>0  I Z0'=PRCABN D WOBIL1 Q:$D(PRCA("WO"))
"RTN","PRCAUDT1",14,0)
 W:$D(PRCA("WO")) !,*7,"This debtor has had another account written-off",!
"RTN","PRCAUDT1",15,0)
 K PRCAWO,PRCAWOB,PRCA("DEBTOR"),Z0,PRCA("WO") Q
"RTN","PRCAUDT1",16,0)
WOBIL1 I $P(^PRCA(430,Z0,0),U,8)=PRCAWOB S PRCA("WO")=1 Q
"RTN","PRCAUDT1",17,0)
 Q
"RTN","PRCAUDT1",18,0)
UPBALN I $P(^PRCA(430,PRCABN,0),U,3)="",$D(^PRCA(430,PRCABN,2,0)) D ORAMT
"RTN","PRCAUDT1",19,0)
 I '$D(^PRCA(430,PRCABN,7)) S $P(^(7),U,1)=$P(^(0),U,3)
"RTN","PRCAUDT1",20,0)
 S:+$P(^PRCA(430,PRCABN,7),U,1)'>0 $P(^PRCA(430,PRCABN,7),U,1)=$P(^PRCA(430,PRCABN,0),U,3)
"RTN","PRCAUDT1",21,0)
 S $P(^PRCA(430,PRCABN,0),U,4)=$S($P(^PRCA(430,PRCABN,0),U,2)>0:$P(^PRCA(430.2,$P(^(0),U,2),0),U,4),1:"")
"RTN","PRCAUDT1",22,0)
 S $P(^PRCA(430,PRCABN,0),U,12)=$S($D(PRCA("SITE")):PRCA("SITE"),1:"") I '$D(PRCA("SITE")) W:'$G(PRAUTOA) !!,"HELP AT UPBALN+4",!
"RTN","PRCAUDT1",23,0)
 S PRCA("STATUS")=$O(^PRCA(430.3,"AC",102,"")),PRCA("SDT")=DT D UPSTATS^PRCAUT2 Q  ;end of UPBALN
"RTN","PRCAUDT1",24,0)
ORAMT S PRCAK1=0,%=0
"RTN","PRCAUDT1",25,0)
 F PRCAK=0:0 S %=$O(^PRCA(430,PRCABN,2,%)) Q:'%  S PRCAK1=PRCAK1+$P(^PRCA(430,PRCABN,2,%,0),U,2)
"RTN","PRCAUDT1",26,0)
 S $P(^PRCA(430,PRCABN,0),U,3)=PRCAK1 K PRCAK,PRCAK1,% Q
"RTN","PRCAUDT1",27,0)
 ;
"RTN","PRCAUDT1",28,0)
CAUSED ;edit caused by,principal balance and general ledger number.
"RTN","PRCAUDT1",29,0)
 I '$G(PRAUTOA) K PRCA("AUTO_AUDIT")
"RTN","PRCAUDT1",30,0)
 S DA=PRCABN,DR="[PRCA CAUSED BY]",DIE="^PRCA(430," D ^DIE
"RTN","PRCAUDT1",31,0)
 I $D(Y) D
"RTN","PRCAUDT1",32,0)
 . S PRCAOK=0
"RTN","PRCAUDT1",33,0)
 . I '$G(PRAUTOA) W *7,"YOU SHOULD MAKE AN ENTRY !" Q
"RTN","PRCAUDT1",34,0)
 . D SETERR^PRCAUDT("BILL: "_$$BILL^PRCAUDT(PRCABN)),SETERR^PRCAUDT("ERROR ENCOUNTERED STORING 'BILL RESULTING FROM'")
"RTN","PRCAUDT1",35,0)
 K DR
"RTN","PRCAUDT1",36,0)
 Q
"RTN","PRCAUDT1",37,0)
 ;
"RTN","PRCAUDT1",38,0)
THIRD ; Check for 3rd party info on AR bill
"RTN","PRCAUDT1",39,0)
 Q:$D(^PRCA(430,PRCABN,202))
"RTN","PRCAUDT1",40,0)
 ; PRAUTOA is the flag for IB's call to audit-audit an electronic bill
"RTN","PRCAUDT1",41,0)
 N Z S Z="This bill does not have 3rd party information."
"RTN","PRCAUDT1",42,0)
 I $G(PRAUTOA) D SETERR^PRCAUDT("BILL: "_$$BILL^PRCAUDT(PRCABN)),SETERR^PRCAUDT(Z) Q
"RTN","PRCAUDT1",43,0)
 W !,Z,!
"RTN","PRCAUDT1",44,0)
 S %=2 W "Do you want to enter the data " D YN^DICN Q:(%<0)!(%=2)
"RTN","PRCAUDT1",45,0)
 I %=0 W !,"You may enter 'INSURED NAME', 'ID NO', 'GROUP NAME' and 'GROUP NO' for this bill.  Answer 'Y' (YES) or 'N' (NO)." G THIRD
"RTN","PRCAUDT1",46,0)
 S DIE="^PRCA(430,",DR="[PRCAE INSURANCE DATA]",DA=PRCABN D ^DIE K DR,DIE,DA Q
"RTN","PRCAUDT1",47,0)
 ;
"RTN","PRCAUDT1",48,0)
RESFROM ; Update the BILL RESULTING FROM field for a rate type in RATE TYPE file
"RTN","PRCAUDT1",49,0)
 ; #399.3
"RTN","PRCAUDT1",50,0)
 N X,Y,DIR,RC1,RCDA,DIC,DTOUT,DUOUT
"RTN","PRCAUDT1",51,0)
 S RC1=0
"RTN","PRCAUDT1",52,0)
 F  S DIC(0)="AEMQ",DIC="^DGCR(399.3," W ! D ^DIC Q:Y'>0  S RCDA=+Y D  Q:$D(DUOUT)!$D(DTOUT)  ; IA 4118
"RTN","PRCAUDT1",53,0)
 . S RC1=1
"RTN","PRCAUDT1",54,0)
 . S DIR(0)="YA",DIR("A")="AUTO-AUDIT?: ",DIR("B")=$S($P($G(^DGCR(399.3,+RCDA,0)),U,11)'="":"YES",1:"NO")
"RTN","PRCAUDT1",55,0)
 . D ^DIR K DIR
"RTN","PRCAUDT1",56,0)
 . Q:$D(DUOUT)!$D(DTOUT)
"RTN","PRCAUDT1",57,0)
 . I Y=1 S DR=".11",DIE="^DGCR(399.3,",DA=RCDA D ^DIE Q
"RTN","PRCAUDT1",58,0)
 . S DR=".11///@",DIE="^DGCR(399.3,",DA=RCDA D ^DIE W ! Q
"RTN","PRCAUDT1",59,0)
 Q
"RTN","PRCAUDT1",60,0)
 ;
"RTN","PRCAUT3")
0^72^B8305251
"RTN","PRCAUT3",1,0)
PRCAUT3 ;SF-ISC/YJK-AR UTILITY ROUTINE ;11/19/96  10:28 AM
"RTN","PRCAUT3",2,0)
V ;;4.5;Accounts Receivable;**34,63,173**;Mar 20, 1995
"RTN","PRCAUT3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCAUT3",4,0)
CTNEW ;count new bills. called by AR clerk's main menu.
"RTN","PRCAUT3",5,0)
 I $P(^RC(342,1,0),"^",10)<DT W *7,!!,"WARNING!! The AR Package was last updated on: ",$$SLH^RCFN01($P(^RC(342,1,0),"^",10)),!,"*** Contact IRM Service!" H 5
"RTN","PRCAUT3",6,0)
 D ^RCCPCBAK
"RTN","PRCAUT3",7,0)
 I $O(^PRCA(430,"AC",+$O(^PRCA(430.3,"AC",104,0)),0)) W *7,!!,"*** You have NEW BILL(s) that need to be audited ***"
"RTN","PRCAUT3",8,0)
 I $O(^PRCA(430,"AC",+$O(^PRCA(430.3,"AC",110,0)),0)) W *7,!!,"*** You have AMENDED BILL(s) that need to be audited ***"
"RTN","PRCAUT3",9,0)
 I $O(^PRCA(430,"AC",+$O(^PRCA(430.3,"AC",113,0)),0)) W !!,*7,"*** You have PREPAYMENT BILL(s) that need to be reviewed for refund ***"
"RTN","PRCAUT3",10,0)
 D ECHK^RCRCUTL
"RTN","PRCAUT3",11,0)
 Q
"RTN","PRCAUT3",12,0)
COMMENTS ;put comments in the 430.
"RTN","PRCAUT3",13,0)
 Q:'$D(PRCABN)
"RTN","PRCAUT3",14,0)
 ;
"RTN","PRCAUT3",15,0)
 I $G(PRAUTOA) D  Q
"RTN","PRCAUT3",16,0)
 . N PRCATEXT ; Stuff comment if auto-audit
"RTN","PRCAUT3",17,0)
 . I $O(^PRCA(430,PRCABN,10,0)) S PRCATEXT(1)=" "
"RTN","PRCAUT3",18,0)
 . S PRCATEXT($O(PRCATEXT(""),-1)+1)="*** AUTO-AUDITED BY ELECTRONIC RETURN MESSAGE RECEIPT "_$$FMTE^XLFDT($$NOW^XLFDT(),2)
"RTN","PRCAUT3",19,0)
 . D WP^DIE(430,PRCABN_",",10,"A","PRCATEXT")
"RTN","PRCAUT3",20,0)
 ;
"RTN","PRCAUT3",21,0)
 S %=2 W !,"Do you want to write any comments for this bill " D YN^DICN I %<0 S PRCA("EXIT")="" Q
"RTN","PRCAUT3",22,0)
 Q:%=2  I %=0 W !," You may add/edit comments to this word processing field for the bill." G COMMENTS
"RTN","PRCAUT3",23,0)
 S DIE="^PRCA(430,",DR="98",DA=PRCABN D ^DIE K DR,DA,DIE,% Q
"RTN","PRCAUT3",24,0)
PRCOMM ;print the comments.
"RTN","PRCAUT3",25,0)
 Q:('$D(D0))&('$D(PRCABN))  S PRCAD0=$S($D(PRCABN):PRCABN,1:D0) I '$D(^PRCA(430,PRCAD0,10)) G CANCL
"RTN","PRCAUT3",26,0)
 W !,"COMMENTS:" S PRCAKN=0
"RTN","PRCAUT3",27,0)
 F PRCAI=0:0 S PRCAKN=$O(^PRCA(430,PRCAD0,10,PRCAKN)) Q:'PRCAKN  W !,?3,^(PRCAKN,0)
"RTN","PRCAUT3",28,0)
CANCL ;W ! S PRCAKSTA=$P(^PRCA(430,PRCAD0,0),U,8)
"RTN","PRCAUT3",29,0)
 ;I PRCAKSTA=$O(^PRCA(430.3,"AC",111,0)) W !,"CANCELLATION REMARKS: ",?13,$P(^PRCA(430,PRCAD0,0),U,15)
"RTN","PRCAUT3",30,0)
 W ! K PRCAKN,PRCAI,PRCAD0,PRCAKSTA Q
"RTN","PRCAUT3",31,0)
CKSTAT ;Input transform for 430,8 (AR Current Status) - DA=Bill#
"RTN","PRCAUT3",32,0)
 N Z1,Z2
"RTN","PRCAUT3",33,0)
 S Z1=100,Z2=199 S:$D(PRCASV("STATUS")) Z1=199,Z2=300 S DIC("S")="I $P(^PRCA(430.3,Y,0),U,3)>Z1,$P(^(0),U,3)<Z2" S:$D(PRCAOLD) DIC("S")="I $P(^(0),U,5)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X Q:'$D(X)
"RTN","PRCAUT3",34,0)
 I $D(^PRCA(430.3,X,0)),$P(^(0),"^",3)'=102 Q
"RTN","PRCAUT3",35,0)
 Q:",22,23,26,18,"[(","_$P(^PRCA(430,DA,0),U,2)_",")  ;RX/MEANS NO PAT
"RTN","PRCAUT3",36,0)
 ;F Y=0:0 S Y=$O(^PRCA(430,DA,2,Y)) Q:'Y  I $P(^(Y,0),"^",3)="" W *7,!!,"Fiscal Year ",+^(0)," for bill #",$P(^PRCA(430,DA,0),"^")," has no PAT ref #!",!,"A PAT ref # must be assigned to this FY before the bill",!,"can be made active.",! K X
"RTN","PRCAUT3",37,0)
 Q
"RTN","RCBEADJ")
0^124^B57558096
"RTN","RCBEADJ",1,0)
RCBEADJ ;WISC/RFJ-adjustment ;1 Mar 2001
"RTN","RCBEADJ",2,0)
 ;;4.5;Accounts Receivable;**169,172,204,173**;Mar 20, 1995
"RTN","RCBEADJ",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCBEADJ",4,0)
 Q
"RTN","RCBEADJ",5,0)
 ;
"RTN","RCBEADJ",6,0)
 ;
"RTN","RCBEADJ",7,0)
DECREASE ;  menu option: create a decrease adjustment
"RTN","RCBEADJ",8,0)
 D ADJUST("DECREASE")
"RTN","RCBEADJ",9,0)
 Q
"RTN","RCBEADJ",10,0)
 ;
"RTN","RCBEADJ",11,0)
 ;
"RTN","RCBEADJ",12,0)
INCREASE ;  menu option: create an increase adjustment
"RTN","RCBEADJ",13,0)
 D ADJUST("INCREASE")
"RTN","RCBEADJ",14,0)
 Q
"RTN","RCBEADJ",15,0)
 ;
"RTN","RCBEADJ",16,0)
ADJUST(RCBETYPE,RCEDI) ;  create an adjustment
"RTN","RCBEADJ",17,0)
 ;  rcbetype = INCREASE for increase or DECREASE for decrease
"RTN","RCBEADJ",18,0)
 ;  rcedi = the ien of the bill selected via the EDI Worklist or null
"RTN","RCBEADJ",19,0)
 ;          (or undefined) if bill should be selected here.
"RTN","RCBEADJ",20,0)
 N RCBILLDA
"RTN","RCBEADJ",21,0)
 F  D  Q:RCBILLDA<0!$G(RCEDI)
"RTN","RCBEADJ",22,0)
 .   K RCTRANDA,RCLIST
"RTN","RCBEADJ",23,0)
 .   ;
"RTN","RCBEADJ",24,0)
 .   ;  select a bill
"RTN","RCBEADJ",25,0)
 .   S RCBILLDA=$S('$G(RCEDI):$$GETABILL^RCBEUBIL,1:RCEDI)
"RTN","RCBEADJ",26,0)
 .   I RCBILLDA<1 Q
"RTN","RCBEADJ",27,0)
 .   ;
"RTN","RCBEADJ",28,0)
 .   ;  adjust the bill
"RTN","RCBEADJ",29,0)
 .   D ADJBILL(RCBETYPE,RCBILLDA)
"RTN","RCBEADJ",30,0)
 Q
"RTN","RCBEADJ",31,0)
 ;
"RTN","RCBEADJ",32,0)
ADJBILL(RCBETYPE,RCBILLDA) ;  adjust a bill
"RTN","RCBEADJ",33,0)
 N RCAMOUNT,RCBALANC,RCDATA7,RCLIST,RCONTADJ,RCTRANDA,TOTALCAL,TOTALSTO,I,X,Y
"RTN","RCBEADJ",34,0)
 ;  lock the bill
"RTN","RCBEADJ",35,0)
 L +^PRCA(430,RCBILLDA):5 I '$T W !,"ANOTHER USER IS CURRENTLY WORKING WITH THIS BILL." Q
"RTN","RCBEADJ",36,0)
 ;
"RTN","RCBEADJ",37,0)
 ;  show data for the bill
"RTN","RCBEADJ",38,0)
 D SHOWBILL^RCWROFF1(RCBILLDA)
"RTN","RCBEADJ",39,0)
 ;
"RTN","RCBEADJ",40,0)
 ;  check the balance of the bill
"RTN","RCBEADJ",41,0)
 W !!,"Checking the bill's balance ..."
"RTN","RCBEADJ",42,0)
 S RCBALANC=$$OUTOFBAL^RCBDBBAL(RCBILLDA)
"RTN","RCBEADJ",43,0)
 I RCBALANC="" W " IN Balance!"
"RTN","RCBEADJ",44,0)
 ;
"RTN","RCBEADJ",45,0)
 ;  out of balance, ask to fix it
"RTN","RCBEADJ",46,0)
 I RCBALANC'="" D  I RCBILLDA<1 D UNLOCK Q
"RTN","RCBEADJ",47,0)
 .   S TOTALCAL=$P(RCBALANC,"^")+$P(RCBALANC,"^",2)+$P(RCBALANC,"^",3)+$P(RCBALANC,"^",4)+$P(RCBALANC,"^",5)
"RTN","RCBEADJ",48,0)
 .   S RCDATA7=$G(^PRCA(430,RCBILLDA,7))
"RTN","RCBEADJ",49,0)
 .   S TOTALSTO=$P(RCDATA7,"^")+$P(RCDATA7,"^",2)+$P(RCDATA7,"^",3)+$P(RCDATA7,"^",4)+$P(RCDATA7,"^",5)
"RTN","RCBEADJ",50,0)
 .   W " OUT of Balance!"
"RTN","RCBEADJ",51,0)
 .   W !!,"                  BALANCE:",$J("Calculated",12),$J("Stored",12)
"RTN","RCBEADJ",52,0)
 .   W !,"                  ------- ",$J("------------",12),$J("------------",12)
"RTN","RCBEADJ",53,0)
 .   W !,"        Principal Balance:",$J($P(RCBALANC,"^",1),12,2),$J($P(RCDATA7,"^",1),12,2)
"RTN","RCBEADJ",54,0)
 .   I +$P(RCBALANC,"^",1)'=+$P(RCDATA7,"^",1) W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",55,0)
 .   W !,"         Interest Balance:",$J($P(RCBALANC,"^",2),12,2),$J($P(RCDATA7,"^",2),12,2)
"RTN","RCBEADJ",56,0)
 .   I +$P(RCBALANC,"^",2)'=+$P(RCDATA7,"^",2) W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",57,0)
 .   W !,"            Admin Balance:",$J($P(RCBALANC,"^",3),12,2),$J($P(RCDATA7,"^",3),12,2)
"RTN","RCBEADJ",58,0)
 .   I +$P(RCBALANC,"^",3)'=+$P(RCDATA7,"^",3) W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",59,0)
 .   W !,"               MF Balance:",$J($P(RCBALANC,"^",4),12,2),$J($P(RCDATA7,"^",4),12,2)
"RTN","RCBEADJ",60,0)
 .   I +$P(RCBALANC,"^",4)'=+$P(RCDATA7,"^",4) W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",61,0)
 .   W !,"               CC Balance:",$J($P(RCBALANC,"^",5),12,2),$J($P(RCDATA7,"^",5),12,2)
"RTN","RCBEADJ",62,0)
 .   I +$P(RCBALANC,"^",5)'=+$P(RCDATA7,"^",5) W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",63,0)
 .   W !,"                  ------- ",$J("----------",12),$J("----------",12)
"RTN","RCBEADJ",64,0)
 .   W !,"                    TOTAL:",$J(TOTALCAL,12,2),$J(TOTALSTO,12,2)
"RTN","RCBEADJ",65,0)
 .   I +TOTALCAL'=+TOTALSTO W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",66,0)
 .   ;
"RTN","RCBEADJ",67,0)
 .   ;  ask to fix the balances
"RTN","RCBEADJ",68,0)
 .   S Y=$$ASKFIX I Y'=1 W !,"  NOTE: You must fix the Balance Discrepancy before processing an adjustment!" S RCBILLDA=0 Q
"RTN","RCBEADJ",69,0)
 .   ;
"RTN","RCBEADJ",70,0)
 .   ;  fix it
"RTN","RCBEADJ",71,0)
 .   S $P(RCDATA7,"^",1)=+$P(RCBALANC,"^",1) ; principal
"RTN","RCBEADJ",72,0)
 .   S $P(RCDATA7,"^",2)=+$P(RCBALANC,"^",2) ; interest
"RTN","RCBEADJ",73,0)
 .   S $P(RCDATA7,"^",3)=+$P(RCBALANC,"^",3) ; admin
"RTN","RCBEADJ",74,0)
 .   S $P(RCDATA7,"^",4)=+$P(RCBALANC,"^",4) ; marshal fee
"RTN","RCBEADJ",75,0)
 .   S $P(RCDATA7,"^",5)=+$P(RCBALANC,"^",5) ; court cost
"RTN","RCBEADJ",76,0)
 .   S $P(^PRCA(430,RCBILLDA,7),"^",1,5)=$P(RCDATA7,"^",1,5)
"RTN","RCBEADJ",77,0)
 .   ;
"RTN","RCBEADJ",78,0)
 .   W !,"  Balance Discrepancy FIXED!"
"RTN","RCBEADJ",79,0)
 ;
"RTN","RCBEADJ",80,0)
 ;  if the principal balance is zero, do not allow it to be adjusted
"RTN","RCBEADJ",81,0)
 ;  ask to close/cancel it
"RTN","RCBEADJ",82,0)
 I RCBETYPE="DECREASE",'$G(^PRCA(430,RCBILLDA,7)) W !!,"Note: This bill has NO PRINCIPAL BALANCE to decrease !" D INTADMIN(RCBILLDA),UNLOCK Q
"RTN","RCBEADJ",83,0)
 ;
"RTN","RCBEADJ",84,0)
 ;  ask to enter adjustment amount
"RTN","RCBEADJ",85,0)
 S RCAMOUNT=$$AMOUNT(RCBILLDA,RCBETYPE)
"RTN","RCBEADJ",86,0)
 I RCAMOUNT<0 D UNLOCK Q
"RTN","RCBEADJ",87,0)
 ;
"RTN","RCBEADJ",88,0)
 ;  if decrease, make negative
"RTN","RCBEADJ",89,0)
 I RCBETYPE="DECREASE" S RCAMOUNT=-RCAMOUNT
"RTN","RCBEADJ",90,0)
 ;
"RTN","RCBEADJ",91,0)
 ;  ask if it is a contract adjustment
"RTN","RCBEADJ",92,0)
 I RCBETYPE="DECREASE","^9^28^29^30^32^"[("^"_$P($G(^PRCA(430,RCBILLDA,0)),"^",2)_"^") S RCONTADJ=$$ASKCONT I RCONTADJ<0 D UNLOCK Q
"RTN","RCBEADJ",93,0)
 ;
"RTN","RCBEADJ",94,0)
 ;  show what the new transaction will look like
"RTN","RCBEADJ",95,0)
 S RCDATA7=$G(^PRCA(430,RCBILLDA,7))
"RTN","RCBEADJ",96,0)
 W !!,"If you process the transaction, the bill will look like:"
"RTN","RCBEADJ",97,0)
 W !,"Current Principal Balance: ",$J($P(RCDATA7,"^"),9,2)
"RTN","RCBEADJ",98,0)
 W !,"  NEW ",RCBETYPE," Adjustment: ",$J(RCAMOUNT,9,2)
"RTN","RCBEADJ",99,0)
 W !,"                           ---------"
"RTN","RCBEADJ",100,0)
 W !,"    NEW Principal Balance: ",$J($P(RCDATA7,"^")+RCAMOUNT,9,2)
"RTN","RCBEADJ",101,0)
 ;
"RTN","RCBEADJ",102,0)
 ;  ask to enter transaction
"RTN","RCBEADJ",103,0)
 S Y=$$ASKOK(RCBETYPE) I Y'=1 D UNLOCK Q
"RTN","RCBEADJ",104,0)
 ;
"RTN","RCBEADJ",105,0)
 ;  add adjustment
"RTN","RCBEADJ",106,0)
 S RCTRANDA=$$INCDEC^RCBEUTR1(RCBILLDA,RCAMOUNT,"","","",$G(RCONTADJ))
"RTN","RCBEADJ",107,0)
 I 'RCTRANDA W !,"  *** W A R N I N G: Adjustment NOT Processed! ***" D UNLOCK Q
"RTN","RCBEADJ",108,0)
 I RCTRANDA W !,"  Adjustment Transaction: ",RCTRANDA," has been added."
"RTN","RCBEADJ",109,0)
 I '$G(REFMS)&(DT>$$LDATE^RCRJR(DT)) S Y=$E($$FPS^RCAMFN01(DT,1),1,5)_"01" D DD^%DT W !!,"   * * * * Transmission will be held until "_Y_" * * * *"
"RTN","RCBEADJ",110,0)
 ;
"RTN","RCBEADJ",111,0)
 ;  ask to enter a comment
"RTN","RCBEADJ",112,0)
 W !!,"Enter a comment for the ",RCBETYPE," Adjustment:"
"RTN","RCBEADJ",113,0)
 S Y=$$EDIT433^RCBEUTRA(RCTRANDA,"41;")
"RTN","RCBEADJ",114,0)
 ;
"RTN","RCBEADJ",115,0)
 ;  ask to exempt interest and admin charges
"RTN","RCBEADJ",116,0)
 I RCBETYPE="DECREASE" D INTADMIN(RCBILLDA)
"RTN","RCBEADJ",117,0)
 ;
"RTN","RCBEADJ",118,0)
 ;  notification of subsequent payer bulletin
"RTN","RCBEADJ",119,0)
 S RCDATA7=$G(^PRCA(430,RCBILLDA,7)),X=0
"RTN","RCBEADJ",120,0)
 F I=1:1:5 S X=X+$P(RCDATA7,"^",I)
"RTN","RCBEADJ",121,0)
 I RCDATA7'="",'X D
"RTN","RCBEADJ",122,0)
 .   N PRCABN,PRCAEN,PRCAMT
"RTN","RCBEADJ",123,0)
 .   S PRCABN=RCBILLDA,PRCAEN=RCTRANDA,PRCAMT=+$P($G(^PRCA(433,RCTRANDA,1)),"^",5)
"RTN","RCBEADJ",124,0)
 .   D EOB^PRCADJ
"RTN","RCBEADJ",125,0)
 ;
"RTN","RCBEADJ",126,0)
 ;  unlock and ask the next bill to adjust
"RTN","RCBEADJ",127,0)
 D UNLOCK
"RTN","RCBEADJ",128,0)
 Q
"RTN","RCBEADJ",129,0)
 ;
"RTN","RCBEADJ",130,0)
 ;
"RTN","RCBEADJ",131,0)
UNLOCK ;  unlock bill and transaction
"RTN","RCBEADJ",132,0)
 L -^PRCA(430,RCBILLDA)
"RTN","RCBEADJ",133,0)
 I $G(RCTRANDA) L -^PRCA(433,RCTRANDA)
"RTN","RCBEADJ",134,0)
 Q
"RTN","RCBEADJ",135,0)
 ;
"RTN","RCBEADJ",136,0)
 ;
"RTN","RCBEADJ",137,0)
INTADMIN(RCBILLDA) ;  ask and adjust the interest and admin
"RTN","RCBEADJ",138,0)
 N RCAMOUNT,RCTRANDA,Y
"RTN","RCBEADJ",139,0)
 ;
"RTN","RCBEADJ",140,0)
 ;  check to see if there is interest and admin charges
"RTN","RCBEADJ",141,0)
 S RCAMOUNT=$G(^PRCA(430,RCBILLDA,7))
"RTN","RCBEADJ",142,0)
 I '$P(RCAMOUNT,"^",2),'$P(RCAMOUNT,"^",3),'$P(RCAMOUNT,"^",4),'$P(RCAMOUNT,"^",5) Q
"RTN","RCBEADJ",143,0)
 ;
"RTN","RCBEADJ",144,0)
 ;  only ask if there is no principal
"RTN","RCBEADJ",145,0)
 I RCAMOUNT Q
"RTN","RCBEADJ",146,0)
 ;
"RTN","RCBEADJ",147,0)
 W !!,"You have the option to automatically EXEMPT the interest"
"RTN","RCBEADJ",148,0)
 W !,"and administrative charges.  This will close the bill."
"RTN","RCBEADJ",149,0)
 S Y=$$ASKEXEMP I Y'=1 Q
"RTN","RCBEADJ",150,0)
 ;
"RTN","RCBEADJ",151,0)
 W !!,"Creating an EXEMPT transaction ..."
"RTN","RCBEADJ",152,0)
 S RCTRANDA=$$EXEMPT^RCBEUTR2(RCBILLDA,$P(RCAMOUNT,"^",2)_"^"_$P(RCAMOUNT,"^",3)_"^^"_$P(RCAMOUNT,"^",4)_"^"_$P(RCAMOUNT,"^",5))
"RTN","RCBEADJ",153,0)
 I 'RCTRANDA W !,"  *** W A R N I N G: EXEMPTION NOT Processed! ***" Q
"RTN","RCBEADJ",154,0)
 I RCTRANDA W !,"   Exempt Transaction: ",RCTRANDA," has been added."
"RTN","RCBEADJ",155,0)
 ;
"RTN","RCBEADJ",156,0)
 W !,"  Current Bill Status: ",$P($G(^PRCA(430.3,+$P($G(^PRCA(430,RCBILLDA,0)),"^",8),0)),"^")
"RTN","RCBEADJ",157,0)
 Q
"RTN","RCBEADJ",158,0)
 ;
"RTN","RCBEADJ",159,0)
ASKOK(RCBETYPE) ;  ask record decrease or increase transaction
"RTN","RCBEADJ",160,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCBEADJ",161,0)
 S DIR(0)="YO",DIR("B")="YES"
"RTN","RCBEADJ",162,0)
 S DIR("A")="Are you sure you want to enter this "_RCBETYPE_" adjustment "
"RTN","RCBEADJ",163,0)
 W ! D ^DIR
"RTN","RCBEADJ",164,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCBEADJ",165,0)
 Q Y
"RTN","RCBEADJ",166,0)
 ;
"RTN","RCBEADJ",167,0)
 ;
"RTN","RCBEADJ",168,0)
ASKFIX() ;  ask to fix bill's balance
"RTN","RCBEADJ",169,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCBEADJ",170,0)
 S DIR(0)="YO",DIR("B")="YES"
"RTN","RCBEADJ",171,0)
 S DIR("A")="  Do you want to FIX the balance discrepancy "
"RTN","RCBEADJ",172,0)
 W ! D ^DIR
"RTN","RCBEADJ",173,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCBEADJ",174,0)
 Q Y
"RTN","RCBEADJ",175,0)
 ;
"RTN","RCBEADJ",176,0)
 ;
"RTN","RCBEADJ",177,0)
ASKEXEMP() ;  ask to record an exempt transaction
"RTN","RCBEADJ",178,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCBEADJ",179,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCBEADJ",180,0)
 S DIR("A")="  Would you like to EXEMPT the interest and admin charges "
"RTN","RCBEADJ",181,0)
 D ^DIR
"RTN","RCBEADJ",182,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCBEADJ",183,0)
 Q Y
"RTN","RCBEADJ",184,0)
 ;
"RTN","RCBEADJ",185,0)
 ;
"RTN","RCBEADJ",186,0)
ASKCONT() ;  ask if contract adjustment
"RTN","RCBEADJ",187,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCBEADJ",188,0)
 S DIR(0)="YO",DIR("B")="YES"
"RTN","RCBEADJ",189,0)
 S DIR("A")="  Is this a CONTRACT adjustment "
"RTN","RCBEADJ",190,0)
 W ! D ^DIR
"RTN","RCBEADJ",191,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCBEADJ",192,0)
 Q Y
"RTN","RCBEADJ",193,0)
 ;
"RTN","RCBEADJ",194,0)
 ;
"RTN","RCBEADJ",195,0)
ADJNUM(RCBILLDA) ;  get next adjustment number for a bill
"RTN","RCBEADJ",196,0)
 N %,ADJUST,DATA1,RCTRANDA
"RTN","RCBEADJ",197,0)
 S RCTRANDA=0
"RTN","RCBEADJ",198,0)
 F  S RCTRANDA=$O(^PRCA(433,"C",RCBILLDA,RCTRANDA)) Q:'RCTRANDA  S DATA1=$G(^PRCA(433,RCTRANDA,1)) I $P(DATA1,"^",4),$P(DATA1,"^",2)=1!($P(DATA1,"^",2)=35) S ADJUST=$P(DATA1,"^",4)+1
"RTN","RCBEADJ",199,0)
 Q ADJUST
"RTN","RCBEADJ",200,0)
 ;
"RTN","RCBEADJ",201,0)
 ;
"RTN","RCBEADJ",202,0)
AMOUNT(RCBILLDA,RCBETYPE) ;  enter the adjustment amount for a bill
"RTN","RCBEADJ",203,0)
 N DIR,DIRUT,DTOUT,DUOUT,PRINBAL,X,Y
"RTN","RCBEADJ",204,0)
 S PRINBAL=+$P($G(^PRCA(430,RCBILLDA,7)),"^")
"RTN","RCBEADJ",205,0)
 I RCBETYPE="INCREASE" S PRINBAL=99999.99
"RTN","RCBEADJ",206,0)
 W !!,"Enter the ",RCBETYPE," Adjustment AMOUNT, from .01 to ",$J(PRINBAL,0,2),"."
"RTN","RCBEADJ",207,0)
 S DIR(0)="NAO^.01:"_PRINBAL_":2"
"RTN","RCBEADJ",208,0)
 S DIR("A")="  "_RCBETYPE_" PRINCIPAL BALANCE BY: "
"RTN","RCBEADJ",209,0)
 D ^DIR
"RTN","RCBEADJ",210,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCBEADJ",211,0)
 Q $S(Y'="":Y,1:-1)
"RTN","RCDPDPL1")
0^36^B31591361
"RTN","RCDPDPL1",1,0)
RCDPDPL1 ;WISC/RFJ-deposit profile listmanager options ;1 Jun 99
"RTN","RCDPDPL1",2,0)
 ;;4.5;Accounts Receivable;**114,148,172,173**;Mar 20, 1995
"RTN","RCDPDPL1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPDPL1",4,0)
 Q
"RTN","RCDPDPL1",5,0)
 ;
"RTN","RCDPDPL1",6,0)
 ;
"RTN","RCDPDPL1",7,0)
EDITDEP ;  option: edit the deposit
"RTN","RCDPDPL1",8,0)
 D FULL^VALM1
"RTN","RCDPDPL1",9,0)
 S VALMBCK="R"
"RTN","RCDPDPL1",10,0)
 ;
"RTN","RCDPDPL1",11,0)
 I '$$LOCKDEP^RCDPDPLU(RCDEPTDA) Q
"RTN","RCDPDPL1",12,0)
 ;
"RTN","RCDPDPL1",13,0)
 W !
"RTN","RCDPDPL1",14,0)
 D EDITDEP^RCDPUDEP(RCDEPTDA)
"RTN","RCDPDPL1",15,0)
 L -^RCY(344.1,RCDEPTDA)
"RTN","RCDPDPL1",16,0)
 ;
"RTN","RCDPDPL1",17,0)
 ;  rebuild the header
"RTN","RCDPDPL1",18,0)
 D INIT^RCDPDPLM
"RTN","RCDPDPL1",19,0)
 D HDR^RCDPDPLM
"RTN","RCDPDPL1",20,0)
 Q
"RTN","RCDPDPL1",21,0)
 ;
"RTN","RCDPDPL1",22,0)
 ;
"RTN","RCDPDPL1",23,0)
CONFIRM ;  option: confirm deposit
"RTN","RCDPDPL1",24,0)
 D FULL^VALM1
"RTN","RCDPDPL1",25,0)
 S VALMBCK="R"
"RTN","RCDPDPL1",26,0)
 ;
"RTN","RCDPDPL1",27,0)
 W !!,"This option will confirm a deposit.  Once a deposit is confirmed, receipts"
"RTN","RCDPDPL1",28,0)
 W !,"can no longer be added or changed on the deposit.  Before a deposit can be"
"RTN","RCDPDPL1",29,0)
 W !,"confirmed all receipts must be processed and the cash receipt code sheets"
"RTN","RCDPDPL1",30,0)
 W !,"accepted by FMS."
"RTN","RCDPDPL1",31,0)
 ;
"RTN","RCDPDPL1",32,0)
 N DATA,ERROR,FMSDOC,RECTDA,STATUS,X
"RTN","RCDPDPL1",33,0)
 ;
"RTN","RCDPDPL1",34,0)
 I '$$LOCKDEP^RCDPDPLU(RCDEPTDA) Q
"RTN","RCDPDPL1",35,0)
 ;
"RTN","RCDPDPL1",36,0)
 ;  check bank data
"RTN","RCDPDPL1",37,0)
 S ERROR=$$CHEKBANK(RCDEPTDA)
"RTN","RCDPDPL1",38,0)
 I ERROR D  Q:ERROR
"RTN","RCDPDPL1",39,0)
 .   W ! D EDITDEP^RCDPUDEP(RCDEPTDA)
"RTN","RCDPDPL1",40,0)
 .   S ERROR=$$CHEKBANK(RCDEPTDA)
"RTN","RCDPDPL1",41,0)
 .   I 'ERROR Q
"RTN","RCDPDPL1",42,0)
 .   S VALMSG="Deposit NOT Confirmed."
"RTN","RCDPDPL1",43,0)
 .   W !,VALMSG,!,"Use the Edit Deposit option to enter missing bank data."
"RTN","RCDPDPL1",44,0)
 .   W !!,"Press RETURN to continue: " R X:DTIME
"RTN","RCDPDPL1",45,0)
 .   L -^RCY(344.1,RCDEPTDA)
"RTN","RCDPDPL1",46,0)
 .   ;  rebuild the screen
"RTN","RCDPDPL1",47,0)
 .   D INIT^RCDPDPLM
"RTN","RCDPDPL1",48,0)
 .   D HDR^RCDPDPLM
"RTN","RCDPDPL1",49,0)
 W " Done."
"RTN","RCDPDPL1",50,0)
 ;
"RTN","RCDPDPL1",51,0)
 ;  check receipts
"RTN","RCDPDPL1",52,0)
 W !!,"Checking receipts on deposit ..."
"RTN","RCDPDPL1",53,0)
 S RECTDA=0 F  S RECTDA=$O(^RCY(344,"AD",RCDEPTDA,RECTDA)) Q:'RECTDA  D
"RTN","RCDPDPL1",54,0)
 .   S DATA=$G(^RCY(344,RECTDA,0)) I DATA="" Q
"RTN","RCDPDPL1",55,0)
 .   ;  get status, error if receipt not closed
"RTN","RCDPDPL1",56,0)
 .   S STATUS=$S($P(DATA,"^",14)'=0:"OPEN",1:"CLOSED")
"RTN","RCDPDPL1",57,0)
 .   I STATUS'="CLOSED" S ERROR=1
"RTN","RCDPDPL1",58,0)
 .   ;  get fms cr doc number and status, error if doc not accepted
"RTN","RCDPDPL1",59,0)
 .   ;  returns fmsdocument ^ status ^ prelockbox flag
"RTN","RCDPDPL1",60,0)
 .   S FMSDOC=$$FMSSTAT^RCDPUREC(RECTDA)
"RTN","RCDPDPL1",61,0)
 .   ;  if status is closed and the fms document not sent (no dollars), allow confirm
"RTN","RCDPDPL1",62,0)
 .   I STATUS="CLOSED",$P(FMSDOC,"^",2)="NOT ENTERED" Q
"RTN","RCDPDPL1",63,0)
 .   ;
"RTN","RCDPDPL1",64,0)
 .   I $P(FMSDOC,"^",2)'["ON LINE ENTRY",$P(FMSDOC,"^",2)'["ACCEPTED" S ERROR=1
"RTN","RCDPDPL1",65,0)
 .   W !?5,$P(DATA,"^"),?15,STATUS,?30,$P(FMSDOC,"^"),?45,$P(FMSDOC,"^",2)
"RTN","RCDPDPL1",66,0)
 ;
"RTN","RCDPDPL1",67,0)
 I $G(ERROR) D  Q
"RTN","RCDPDPL1",68,0)
 .   W !!,"Cannot confirm deposit until all receipts are closed and the cash"
"RTN","RCDPDPL1",69,0)
 .   W !,"receipt documents have been accepted in FMS."
"RTN","RCDPDPL1",70,0)
 .   W !!,"Press RETURN to continue: " R X:DTIME
"RTN","RCDPDPL1",71,0)
 .   L -^RCY(344.1,RCDEPTDA)
"RTN","RCDPDPL1",72,0)
 ;
"RTN","RCDPDPL1",73,0)
 W !!,"All receipts are closed and accepted."
"RTN","RCDPDPL1",74,0)
 I $$ASKCONFI=1 D CONFIRM^RCDPUDEP(RCDEPTDA),HDR^RCDPDPLM
"RTN","RCDPDPL1",75,0)
 L -^RCY(344.1,RCDEPTDA)
"RTN","RCDPDPL1",76,0)
 ;
"RTN","RCDPDPL1",77,0)
 ;  rebuild the header
"RTN","RCDPDPL1",78,0)
 D INIT^RCDPDPLM
"RTN","RCDPDPL1",79,0)
 D HDR^RCDPDPLM
"RTN","RCDPDPL1",80,0)
 Q
"RTN","RCDPDPL1",81,0)
 ;
"RTN","RCDPDPL1",82,0)
 ;
"RTN","RCDPDPL1",83,0)
CHEKBANK(RCDEPTDA) ;  check the bank data for a deposit
"RTN","RCDPDPL1",84,0)
 ;  return error of 1 if data is missing
"RTN","RCDPDPL1",85,0)
 N DATA,ERROR
"RTN","RCDPDPL1",86,0)
 W !!,"Checking the deposit bank data ..."
"RTN","RCDPDPL1",87,0)
 S DATA=^RCY(344.1,RCDEPTDA,0)
"RTN","RCDPDPL1",88,0)
 I $P(DATA,"^",13)="" S ERROR=1 W !?5,"BANK is missing."
"RTN","RCDPDPL1",89,0)
 ;I $P(DATA,"^",5)="" S ERROR=1 W !?5,"BANK TRACE NUMBER is missing."
"RTN","RCDPDPL1",90,0)
 I $P(DATA,"^",14)="" S ERROR=1 W !?5,"AGENCY LOCATION CODE is missing."
"RTN","RCDPDPL1",91,0)
 I $P(DATA,"^",17)="" S ERROR=1 W !?5,"AGENCY TITLE is missing."
"RTN","RCDPDPL1",92,0)
 Q +$G(ERROR)
"RTN","RCDPDPL1",93,0)
 ;
"RTN","RCDPDPL1",94,0)
 ;
"RTN","RCDPDPL1",95,0)
ADDREC ;  add a new receipt
"RTN","RCDPDPL1",96,0)
 D FULL^VALM1
"RTN","RCDPDPL1",97,0)
 S VALMBCK="R"
"RTN","RCDPDPL1",98,0)
 ;
"RTN","RCDPDPL1",99,0)
 N RCRECTDA
"RTN","RCDPDPL1",100,0)
 W !
"RTN","RCDPDPL1",101,0)
 S RCRECTDA=$$SELRECT^RCDPUREC(1,RCDEPTDA)
"RTN","RCDPDPL1",102,0)
 I RCRECTDA<1 Q
"RTN","RCDPDPL1",103,0)
 ;
"RTN","RCDPDPL1",104,0)
 D EN^VALM("RCDP RECEIPT PROFILE")
"RTN","RCDPDPL1",105,0)
 ;
"RTN","RCDPDPL1",106,0)
 D INIT^RCDPDPLM
"RTN","RCDPDPL1",107,0)
 S VALMBCK="R"
"RTN","RCDPDPL1",108,0)
 Q
"RTN","RCDPDPL1",109,0)
 ;
"RTN","RCDPDPL1",110,0)
 ;
"RTN","RCDPDPL1",111,0)
DICW ; Write identifiers for ERA lookup
"RTN","RCDPDPL1",112,0)
 ; Assumes Y = ien of entry file 344.4
"RTN","RCDPDPL1",113,0)
 N RC0
"RTN","RCDPDPL1",114,0)
 S RC0=$G(^RCY(344.4,Y,0))
"RTN","RCDPDPL1",115,0)
 W ?9,"From: ",$E($P(RC0,U,6),1,20),"  Trace: ",$E($P(RC0,U,2),1,10),"  Amt: ",$J(+$P(RC0,U,5),"",2)_"  on ",$$FMTE^XLFDT($P(RC0,U,4),2)
"RTN","RCDPDPL1",116,0)
 Q
"RTN","RCDPDPL1",117,0)
 ;
"RTN","RCDPDPL1",118,0)
RECEIPTS ;  option: receipt profile/processing
"RTN","RCDPDPL1",119,0)
 N INDEX,RCRECTDA,VALMBG,VALMLST,VALMY
"RTN","RCDPDPL1",120,0)
 S VALMBCK="R"
"RTN","RCDPDPL1",121,0)
 ;
"RTN","RCDPDPL1",122,0)
 ;  if no receipts, quit
"RTN","RCDPDPL1",123,0)
 I '$O(^TMP("RCDPDPLM",$J,"IDX",0)) S VALMSG="There are NO receipts to profile." Q
"RTN","RCDPDPL1",124,0)
 ;
"RTN","RCDPDPL1",125,0)
 ;  if only one receipt, select that one automatically
"RTN","RCDPDPL1",126,0)
 I '$O(^TMP("RCDPDPLM",$J,"IDX",1)) S INDEX=1
"RTN","RCDPDPL1",127,0)
 ;
"RTN","RCDPDPL1",128,0)
 ;  select the entry from the list
"RTN","RCDPDPL1",129,0)
 I '$G(INDEX) D   I 'INDEX Q
"RTN","RCDPDPL1",130,0)
 .   ;  if not on first screen, make sure selection begins with 1
"RTN","RCDPDPL1",131,0)
 .   S VALMBG=1
"RTN","RCDPDPL1",132,0)
 .   ;  if not on last screen, make sure selection ends with last
"RTN","RCDPDPL1",133,0)
 .   S VALMLST=$O(^TMP("RCDPDPLM",$J,"IDX",999999999),-1)
"RTN","RCDPDPL1",134,0)
 .   D EN^VALM2($G(XQORNOD(0)),"OS")
"RTN","RCDPDPL1",135,0)
 .   S INDEX=$O(VALMY(0))
"RTN","RCDPDPL1",136,0)
 ;
"RTN","RCDPDPL1",137,0)
 S RCRECTDA=+$G(^TMP("RCDPDPLM",$J,"IDX",INDEX,INDEX))
"RTN","RCDPDPL1",138,0)
 D EN^VALM("RCDP RECEIPT PROFILE")
"RTN","RCDPDPL1",139,0)
 ;
"RTN","RCDPDPL1",140,0)
 D INIT^RCDPDPLM
"RTN","RCDPDPL1",141,0)
 S VALMBCK="R"
"RTN","RCDPDPL1",142,0)
 ;  fast exit
"RTN","RCDPDPL1",143,0)
 I $G(RCDPFXIT) S VALMBCK="Q"
"RTN","RCDPDPL1",144,0)
 Q
"RTN","RCDPDPL1",145,0)
 ;
"RTN","RCDPDPL1",146,0)
 ;
"RTN","RCDPDPL1",147,0)
CUSTOMIZ ;  option: customize display
"RTN","RCDPDPL1",148,0)
 D FULL^VALM1
"RTN","RCDPDPL1",149,0)
 S VALMBCK="R"
"RTN","RCDPDPL1",150,0)
 ;
"RTN","RCDPDPL1",151,0)
 W !!,"This option will allow the user to customize the screen and options"
"RTN","RCDPDPL1",152,0)
 W !,"used for deposit processing."
"RTN","RCDPDPL1",153,0)
 ;
"RTN","RCDPDPL1",154,0)
 ;  ask to show check/credit card data
"RTN","RCDPDPL1",155,0)
 I $$ASKFMS=-1 Q
"RTN","RCDPDPL1",156,0)
 ;
"RTN","RCDPDPL1",157,0)
 D INIT^RCDPDPLM
"RTN","RCDPDPL1",158,0)
 Q
"RTN","RCDPDPL1",159,0)
 ;
"RTN","RCDPDPL1",160,0)
 ;
"RTN","RCDPDPL1",161,0)
ASKFMS() ;  ask if its okay to show fms cr documents
"RTN","RCDPDPL1",162,0)
 ;  1 is yes, otherwise no
"RTN","RCDPDPL1",163,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPDPL1",164,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCDPDPL1",165,0)
 S DIR("A")="  Do you want to turn on the display of the FMS CR documents"
"RTN","RCDPDPL1",166,0)
 W ! D ^DIR
"RTN","RCDPDPL1",167,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPDPL1",168,0)
 I Y'=-1 S ^DISV(DUZ,"RCDPDPLM","SHOWFMS")=Y
"RTN","RCDPDPL1",169,0)
 Q Y
"RTN","RCDPDPL1",170,0)
 ;
"RTN","RCDPDPL1",171,0)
ASKCONFI() ;  ask if its okay to confirm the deposit
"RTN","RCDPDPL1",172,0)
 ;  1 is yes, otherwise no
"RTN","RCDPDPL1",173,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPDPL1",174,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCDPDPL1",175,0)
 S DIR("A")="  Are you sure you want to CONFIRM this deposit"
"RTN","RCDPDPL1",176,0)
 D ^DIR
"RTN","RCDPDPL1",177,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPDPL1",178,0)
 Q Y
"RTN","RCDPDPL1",179,0)
 ;
"RTN","RCDPDPLU")
0^30^B5368440
"RTN","RCDPDPLU",1,0)
RCDPDPLU ;WISC/RFJ-deposit profile utilities ;1 Jun 99
"RTN","RCDPDPLU",2,0)
 ;;4.5;Accounts Receivable;**114,173**;Mar 20, 1995
"RTN","RCDPDPLU",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPDPLU",4,0)
 Q
"RTN","RCDPDPLU",5,0)
 ;
"RTN","RCDPDPLU",6,0)
 ;
"RTN","RCDPDPLU",7,0)
CHECKDEP(DEPTDA) ;  check the deposit to stop edit/change if approved
"RTN","RCDPDPLU",8,0)
 ;  return 0^message to stop edit/change
"RTN","RCDPDPLU",9,0)
 ;         1         to continue
"RTN","RCDPDPLU",10,0)
 N MESSAGE,RECTDA,RESULT
"RTN","RCDPDPLU",11,0)
 ;
"RTN","RCDPDPLU",12,0)
 ;  already confirmed, status = 3 confirmed
"RTN","RCDPDPLU",13,0)
 I $P($G(^RCY(344.1,DEPTDA,0)),"^",12)=3 Q "0^Deposit has been confirmed."
"RTN","RCDPDPLU",14,0)
 ;  lockbox
"RTN","RCDPDPLU",15,0)
 S RECTDA=$O(^RCY(344,"AD",$P(^RCY(344.1,DEPTDA,0),"^"),0))
"RTN","RCDPDPLU",16,0)
 I RECTDA,$P($G(^RC(341.1,+$P($G(^RCY(344,RECTDA,0)),"^",4),0)),"^",2)=12 Q "0^Lockbox type deposit."
"RTN","RCDPDPLU",17,0)
 I RECTDA,$$EDILB^RCDPEU(RECTDA)=1 Q "0^EDI Lockbox type deposit."
"RTN","RCDPDPLU",18,0)
 ;  open
"RTN","RCDPDPLU",19,0)
 Q 1
"RTN","RCDPDPLU",20,0)
 ;
"RTN","RCDPDPLU",21,0)
 ;
"RTN","RCDPDPLU",22,0)
LOCKDEP(DEPTDA) ;  lock the deposit, call only from listmanager options
"RTN","RCDPDPLU",23,0)
 ;  if deposit not passed, return 2
"RTN","RCDPDPLU",24,0)
 I 'DEPTDA Q 2
"RTN","RCDPDPLU",25,0)
 N RESULT
"RTN","RCDPDPLU",26,0)
 S RESULT=1
"RTN","RCDPDPLU",27,0)
 L +^RCY(344.1,DEPTDA):5
"RTN","RCDPDPLU",28,0)
 I '$T D
"RTN","RCDPDPLU",29,0)
 .   S VALMSG="Another user is editing the deposit."
"RTN","RCDPDPLU",30,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPDPLU",31,0)
 .   S RESULT=0
"RTN","RCDPDPLU",32,0)
 Q RESULT
"RTN","RCDPDPLU",33,0)
 ;
"RTN","RCDPDPLU",34,0)
 ;
"RTN","RCDPDPLU",35,0)
MAILMSG(RCDEPTDA,ACTION) ;  mail a message to supervisor key holders
"RTN","RCDPDPLU",36,0)
 N %,LINE,VALMHDR,VALMSG,XMDUZ,XMZ,YY
"RTN","RCDPDPLU",37,0)
 K ^TMP($J,"RCDPDPLU")
"RTN","RCDPDPLU",38,0)
 S LINE=0
"RTN","RCDPDPLU",39,0)
 ;
"RTN","RCDPDPLU",40,0)
 ;  ---- start build mailman message ----
"RTN","RCDPDPLU",41,0)
 D SETLINE("Sent to: PRCAY PAYMENT SUP security key holders")
"RTN","RCDPDPLU",42,0)
 D SETLINE(" ")
"RTN","RCDPDPLU",43,0)
 ;
"RTN","RCDPDPLU",44,0)
 ;  build the header line
"RTN","RCDPDPLU",45,0)
 D HDR^RCDPDPLM
"RTN","RCDPDPLU",46,0)
 F %=1:1 Q:'$D(VALMHDR(%))  D SETLINE(VALMHDR(%))
"RTN","RCDPDPLU",47,0)
 ;
"RTN","RCDPDPLU",48,0)
 D SETLINE(" ")
"RTN","RCDPDPLU",49,0)
 D SETLINE("This deposit was confirmed and the following action occurred:")
"RTN","RCDPDPLU",50,0)
 D SETLINE("  ACTION: "_ACTION)
"RTN","RCDPDPLU",51,0)
 D SETLINE("      BY: "_$P(^VA(200,DUZ,0),"^"))
"RTN","RCDPDPLU",52,0)
 ;  ---- end build mailman message ----
"RTN","RCDPDPLU",53,0)
 ;
"RTN","RCDPDPLU",54,0)
 S XMSUB="Deposit Processing Audit"
"RTN","RCDPDPLU",55,0)
 S XMDUZ="Accounts Receivable Package"
"RTN","RCDPDPLU",56,0)
 S XMTEXT="^TMP($J,""RCDPDPLU"","
"RTN","RCDPDPLU",57,0)
 S %=0 F  S %=$O(^XUSEC("PRCAY PAYMENT SUP",%)) Q:'%  S XMY(%)=""
"RTN","RCDPDPLU",58,0)
 D ^XMD
"RTN","RCDPDPLU",59,0)
 K ^TMP($J,"RCDPDPLU")
"RTN","RCDPDPLU",60,0)
 Q
"RTN","RCDPDPLU",61,0)
 ;
"RTN","RCDPDPLU",62,0)
 ;
"RTN","RCDPDPLU",63,0)
SETLINE(MESSAGE) ;  set the line for the mail message
"RTN","RCDPDPLU",64,0)
 S LINE=LINE+1
"RTN","RCDPDPLU",65,0)
 S ^TMP($J,"RCDPDPLU",LINE)=MESSAGE
"RTN","RCDPDPLU",66,0)
 Q
"RTN","RCDPE215")
0^123^B81325468
"RTN","RCDPE215",1,0)
RCDPE215 ;ALB/TMK- SF215 EDI Lockbox Summary Report ;1 Jun 99
"RTN","RCDPE215",2,0)
 ;;4.5;Accounts Receivable;**114,173**;Mar 20, 1995
"RTN","RCDPE215",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPE215",4,0)
 Q
"RTN","RCDPE215",5,0)
 ;
"RTN","RCDPE215",6,0)
 ;
"RTN","RCDPE215",7,0)
SUMM215 ;  summary 215
"RTN","RCDPE215",8,0)
 D FULL^VALM1
"RTN","RCDPE215",9,0)
 S VALMBCK="R"
"RTN","RCDPE215",10,0)
 ;
"RTN","RCDPE215",11,0)
 N %,%ZIS,POP,RCDEPTDA,RCTYPE,DIC,X,Y,ZTSAVE,ZTDESC,ZTSK,ZTRTN
"RTN","RCDPE215",12,0)
 ;
"RTN","RCDPE215",13,0)
 S DIC(0)="AEMQ",DIC="^RCY(344.1,",DIC("A")="Select DEPOSIT: "
"RTN","RCDPE215",14,0)
 D ^DIC K DIC
"RTN","RCDPE215",15,0)
 I Y'>0 Q
"RTN","RCDPE215",16,0)
 S RCDEPTDA=+Y
"RTN","RCDPE215",17,0)
 S RCTYPE=$$GETTYPE^RCDPR215
"RTN","RCDPE215",18,0)
 I RCTYPE="" Q
"RTN","RCDPE215",19,0)
 ;
"RTN","RCDPE215",20,0)
 ; device
"RTN","RCDPE215",21,0)
 W ! S %ZIS="Q" D ^%ZIS Q:POP
"RTN","RCDPE215",22,0)
 I $D(IO("Q")) D  D ^%ZTLOAD K IO("Q"),ZTSK D ^%ZISC Q
"RTN","RCDPE215",23,0)
 .   S ZTDESC="Print Summary 215 Report",ZTRTN="DQ^RCDPE215"
"RTN","RCDPE215",24,0)
 .   S ZTSAVE("RCDEPTDA")="",ZTSAVE("RCTYPE")="",ZTSAVE("ZTREQ")="@"
"RTN","RCDPE215",25,0)
 W !!,"<*> please wait <*>"
"RTN","RCDPE215",26,0)
 D DQ
"RTN","RCDPE215",27,0)
 Q
"RTN","RCDPE215",28,0)
 ;
"RTN","RCDPE215",29,0)
DQ ;  queued report entrypoint
"RTN","RCDPE215",30,0)
 ;  RCDEPTDA = ien of the deposit to summarize
"RTN","RCDPE215",31,0)
 ;  RCTYPE="D"etail or "A"ccrual
"RTN","RCDPE215",32,0)
 N %I,AMOUNT,BILL,BILLDA,COMMENTS,COUNT,DA,DATA,DEPOSIT,FMSDOCNO,FUND,NOW,PAGE,PIECE,PRINTOTL,RCSTFLAG,RCYLINE,RECEIPT,SCREEN,TOTAL,TOTLAMT,UNAPPLY,X,Y,RCDETAIL,PCT,RECEIPDA,TOT,EDITOT,DETAIL,Z
"RTN","RCDPE215",33,0)
 ;
"RTN","RCDPE215",34,0)
 ;  calculate report
"RTN","RCDPE215",35,0)
 K ^TMP($J,"RCFMSCR"),^TMP($J,"RCFMSCR_SUM"),^TMP($J,"RCDPR215"),^TMP($J,"RCDET")
"RTN","RCDPE215",36,0)
 S DEPOSIT=$P($G(^RCY(344.1,RCDEPTDA,0)),U)
"RTN","RCDPE215",37,0)
 S RECEIPDA=0 F  S RECEIPDA=$O(^RCY(344,"AD",RCDEPTDA,RECEIPDA)) Q:'RECEIPDA  D
"RTN","RCDPE215",38,0)
 . D FMSLINES^RCXFMSC1(RECEIPDA)
"RTN","RCDPE215",39,0)
 . ; sort by Receipt #
"RTN","RCDPE215",40,0)
 . S ^TMP($J,"RCFMSCR_SUM",RECEIPDA)=""
"RTN","RCDPE215",41,0)
 . M ^TMP($J,"RCFMSCR_SUM",RECEIPDA)=^TMP($J,"RCFMSCR")
"RTN","RCDPE215",42,0)
 . K ^TMP($J,"RCFMSCR")
"RTN","RCDPE215",43,0)
 . I $$EDILB^RCDPEU(RECEIPDA)=1 D  ; EFT dep receipt
"RTN","RCDPE215",44,0)
 .. S TOT=0
"RTN","RCDPE215",45,0)
 .. S Z=0 F  S Z=$O(^RCY(344,RECEIPDA,1,Z)) Q:'Z  S TOT=TOT+$P($G(^(Z,0)),U,4)
"RTN","RCDPE215",46,0)
 .. S (^TMP($J,"RCFMSCR_SUM",RECEIPDA,"5287.4/8NZZ"),^TMP($J,"RCTOT","EDILBOX"))=TOT
"RTN","RCDPE215",47,0)
 ;
"RTN","RCDPE215",48,0)
 ;  summary rep for a deposit
"RTN","RCDPE215",49,0)
 S PAGE=0,RCYLINE="",$P(RCYLINE,"-",81)=""
"RTN","RCDPE215",50,0)
 D NOW^%DTC S Y=% D DD^%DT S NOW=Y
"RTN","RCDPE215",51,0)
 S SCREEN=0 I '$D(ZTQUEUED),IO=IO(0),$E(IOST)="C" S SCREEN=1
"RTN","RCDPE215",52,0)
 U IO
"RTN","RCDPE215",53,0)
 K ^TMP($J,"RCTOT")
"RTN","RCDPE215",54,0)
 S RCDETAIL=1,PCT=0,EDITOT=0
"RTN","RCDPE215",55,0)
 S RECEIPDA=0 F  S RECEIPDA=$O(^TMP($J,"RCFMSCR_SUM",RECEIPDA)) Q:'RECEIPDA  D
"RTN","RCDPE215",56,0)
 . S DATA=$G(^RCY(344,RECEIPDA,0))
"RTN","RCDPE215",57,0)
 . S RECEIPT=$P(DATA,"^")
"RTN","RCDPE215",58,0)
 . S FMSDOCNO=$P($G(^RCY(344.1,+$P(DATA,"^",6),2)),"^")
"RTN","RCDPE215",59,0)
 . D SET("<NP>",RECEIPT_"@"_FMSDOCNO_"@"_RECEIPDA,.PCT)
"RTN","RCDPE215",60,0)
 . ;
"RTN","RCDPE215",61,0)
 . S TOTAL=""  ;  stores printotal^inttotal^admintotal^marshtotal^cctotal
"RTN","RCDPE215",62,0)
 . ;
"RTN","RCDPE215",63,0)
 . S FUND="" F  S FUND=$O(^TMP($J,"RCFMSCR_SUM",RECEIPDA,FUND)) Q:'FUND  D
"RTN","RCDPE215",64,0)
 ..   D SET("!!?5","Appropriation: "_FUND,.PCT)
"RTN","RCDPE215",65,0)
 ..   I RCTYPE="D" D SET("!","",.PCT)
"RTN","RCDPE215",66,0)
 ..   ;
"RTN","RCDPE215",67,0)
 ..   S PRINTOTL=0
"RTN","RCDPE215",68,0)
 ..   S COUNT=0
"RTN","RCDPE215",69,0)
 ..   I FUND="5287.4/8NZZ" S PRINTOTL=PRINTOTL+$G(^TMP($J,"RCFMSCR_SUM",RECEIPDA,FUND)),EDITOT=EDITOT+$G(^TMP($J,"RCFMSCR_SUM",RECEIPDA,FUND))
"RTN","RCDPE215",70,0)
 ..   S BILLDA=0 F  S BILLDA=$O(^TMP($J,"RCFMSCR_SUM",RECEIPDA,FUND,BILLDA)) Q:'BILLDA  D
"RTN","RCDPE215",71,0)
 ...   S COUNT=COUNT+1
"RTN","RCDPE215",72,0)
 ...   S BILL=$P($G(^PRCA(430,BILLDA,0)),"^")
"RTN","RCDPE215",73,0)
 ...   S DATA=^TMP($J,"RCFMSCR_SUM",RECEIPDA,FUND,BILLDA)
"RTN","RCDPE215",74,0)
 ...   S PRINTOTL=PRINTOTL+$P(DATA,"^")
"RTN","RCDPE215",75,0)
 ...   F PIECE=1:1:5 S $P(TOTAL,"^",PIECE)=$P(TOTAL,"^",PIECE)+$P(DATA,"^",PIECE),$P(^TMP($J,"RCTOT","TOTAL"),"^",PIECE)=$P($G(^TMP($J,"RCTOT","TOTAL")),"^",PIECE)+$P(DATA,"^",PIECE)
"RTN","RCDPE215",76,0)
 ...   ;  if accrued report,no detail
"RTN","RCDPE215",77,0)
 ...   I RCTYPE="A" Q
"RTN","RCDPE215",78,0)
 ...   ;
"RTN","RCDPE215",79,0)
 ...   D SET("!?5",COUNT_")",.PCT),SET("?10",BILL,.PCT),SET("?30",$J($P(DATA,"^"),10,2),.PCT),SET("?45","DEBTOR: "_$E($$DEBTOR^RCDPR215(BILLDA),1,25),.PCT)
"RTN","RCDPE215",80,0)
 ...   D SET("!?15","INT:"_$J($P(DATA,"^",2),10,2)_" ADMIN:"_$J($P(DATA,"^",3),10,2)_" MARS: "_$J($P(DATA,"^",4),10,2)_" CC: "_$J($P(DATA,"^",5),10,2),.PCT,1)
"RTN","RCDPE215",81,0)
 ..   ;
"RTN","RCDPE215",82,0)
 ..   I RCTYPE="D" D SET("!?30","----------",.PCT),SET("!?5","TOTAL for "_FUND,.PCT)
"RTN","RCDPE215",83,0)
 ..   D SET("?30",$J(PRINTOTL,10,2),.PCT)
"RTN","RCDPE215",84,0)
 ..   I FUND="0160a1" D SET("?45","0160a1 sub-totals Champva receipts",.PCT),SET("!?45","not sent to FMS on the CR document.",.PCT)
"RTN","RCDPE215",85,0)
 ..   S ^TMP($J,"RCTOT","PRINTOTL",FUND)=$G(^TMP($J,"RCTOT","PRINTOTL",FUND))+PRINTOTL
"RTN","RCDPE215",86,0)
 ..   I FUND="5287.4/8NZZ" S $P(^TMP($J,"RCTOT","TOTAL"),U)=$P($G(^TMP($J,"RCTOT","TOTAL")),U)+PRINTOTL
"RTN","RCDPE215",87,0)
 . ;
"RTN","RCDPE215",88,0)
 . ;  show int, admin, etc receipt totals
"RTN","RCDPE215",89,0)
 . D SET("!","",.PCT)
"RTN","RCDPE215",90,0)
 . D SET("!?5","INTEREST : (APP: 1435)",.PCT),SET("?30",$J($P(TOTAL,"^",2),10,2),.PCT)
"RTN","RCDPE215",91,0)
 . D SET("!?5","ADMIN    : (APP: 3220)",.PCT),SET("?30",$J($P(TOTAL,"^",3),10,2),.PCT)
"RTN","RCDPE215",92,0)
 . D SET("!?5","MARSHALL : (APP: 0869)",.PCT),SET("?30",$J($P(TOTAL,"^",4),10,2),.PCT)
"RTN","RCDPE215",93,0)
 . D SET("!?5","COURTCOST: (APP: 0869)",.PCT),SET("?30",$J($P(TOTAL,"^",5),10,2),.PCT)
"RTN","RCDPE215",94,0)
 . D SET("!?30","----------",.PCT)
"RTN","RCDPE215",95,0)
 . D SET("!?30",$J($P(TOTAL,"^",2)+$P(TOTAL,"^",3)+$P(TOTAL,"^",4)+$P(TOTAL,"^",5),10,2),.PCT)
"RTN","RCDPE215",96,0)
 . ;
"RTN","RCDPE215",97,0)
 . I $G(^TMP($J,"RCFMSCR_SUM",RECEIPDA,"5287.4/8NZZ")) S $P(TOTAL,U)=$P(TOTAL,U)+^TMP($J,"RCFMSCR_SUM",RECEIPDA,"5287.4/8NZZ")
"RTN","RCDPE215",98,0)
 . D SUSP(RECEIPDA,RCTYPE,.TOTAL,.PCT)
"RTN","RCDPE215",99,0)
 . ;
"RTN","RCDPE215",100,0)
 . S TOTLAMT=0 F PIECE=1:1:5 S TOTLAMT=TOTLAMT+$P(TOTAL,"^",PIECE)
"RTN","RCDPE215",101,0)
 . D SET("!!","TOTALS: ",.PCT)
"RTN","RCDPE215",102,0)
 . D SET("!?5","TOTAL AMT POSTED FOR RECEIPT:",.PCT),SET("?30",$J(TOTLAMT,10,2),.PCT,1)
"RTN","RCDPE215",103,0)
 ;
"RTN","RCDPE215",104,0)
 D H
"RTN","RCDPE215",105,0)
 W !!,"**** GRAND TOTALS FOR DEPOSIT: "_$P($G(^RCY(344.1,+RCDEPTDA,0)),U)
"RTN","RCDPE215",106,0)
 S TOT=0
"RTN","RCDPE215",107,0)
 S FUND="" F  S FUND=$O(^TMP($J,"RCTOT","PRINTOTL",FUND)) Q:FUND=""  D
"RTN","RCDPE215",108,0)
 . W !!?5,"Appropriation: ",FUND,": ",?35,$J($G(^TMP($J,"RCTOT","PRINTOTL",FUND)),10,2)
"RTN","RCDPE215",109,0)
 . S TOT=TOT+$G(^TMP($J,"RCTOT","PRINTOTL",FUND))
"RTN","RCDPE215",110,0)
 W !,?35,"=============",!,"Total Appropriation: ",?35,$J(+TOT,10,2)
"RTN","RCDPE215",111,0)
 I FUND="0160a1" W ?47,"0160a1 sub-totals Champva receipts",!?47,"not sent to FMS on the CR doc."
"RTN","RCDPE215",112,0)
 ;
"RTN","RCDPE215",113,0)
 S TOTAL=$G(^TMP($J,"RCTOT","TOTAL"))
"RTN","RCDPE215",114,0)
 W !
"RTN","RCDPE215",115,0)
 W !?5,"INTEREST : (APP: 1435)",?35,$J($P(TOTAL,"^",2),10,2)
"RTN","RCDPE215",116,0)
 W !?5,"ADMIN    : (APP: 3220)",?35,$J($P(TOTAL,"^",3),10,2)
"RTN","RCDPE215",117,0)
 W !?5,"MARSHALL : (APP: 0869)",?35,$J($P(TOTAL,"^",4),10,2)
"RTN","RCDPE215",118,0)
 W !?5,"COURTCOST: (APP: 0869)",?35,$J($P(TOTAL,"^",5),10,2)
"RTN","RCDPE215",119,0)
 W !?35,"----------"
"RTN","RCDPE215",120,0)
 W !?35,$J($P(TOTAL,"^",2)+$P(TOTAL,"^",3)+$P(TOTAL,"^",4)+$P(TOTAL,"^",5),10,2)
"RTN","RCDPE215",121,0)
 I $G(^TMP($J,"RCTOT","SUSPENSE")) W !!?5,"Total Appropriation: 3875",?35,$J(^TMP($J,"RCTOT","SUSPENSE"),10,2)
"RTN","RCDPE215",122,0)
 ;
"RTN","RCDPE215",123,0)
 S TOTLAMT=0 F PIECE=1:1:5 S TOTLAMT=TOTLAMT+$P(TOTAL,"^",PIECE)
"RTN","RCDPE215",124,0)
 I $G(^TMP($J,"RCTOT","EDILBOX")) S TOTLAMT=TOTLAMT+^TMP($J,"RCTOT","EDILBOX")
"RTN","RCDPE215",125,0)
 W !!,"TOTALS: "
"RTN","RCDPE215",126,0)
 W !?5,"TOT AMT POSTED FOR DEPOSIT: ",?35,$J(+TOTLAMT,10,2)
"RTN","RCDPE215",127,0)
 I SCREEN D PAUSE G:$G(RCSTFLAG) Q
"RTN","RCDPE215",128,0)
 N Q,W,T,NS
"RTN","RCDPE215",129,0)
 S W=""
"RTN","RCDPE215",130,0)
 S PCT=0 F  S PCT=$O(^TMP($J,"RCDET",PCT)) Q:'PCT  D  G:$G(RCSTFLAG) Q
"RTN","RCDPE215",131,0)
 . S Q=$P($G(^TMP($J,"RCDET",PCT)),U),T=$P($G(^(PCT)),U,2),NS=$P($G(^(PCT)),U,3)
"RTN","RCDPE215",132,0)
 . I Q="<NP>" D  Q
"RTN","RCDPE215",133,0)
 .. I W'="" W @W S W="" D:SCREEN PAUSE Q:$G(RCSTFLAG)
"RTN","RCDPE215",134,0)
 .. S RECEIPT=$P(T,"@"),FMSDOCNO=$P(T,"@",2),RECEIPDA=$P(T,"@",3)
"RTN","RCDPE215",135,0)
 .. D H,H1(0)
"RTN","RCDPE215",136,0)
 . I $E(Q)="!" W:W'="" @W S W=""
"RTN","RCDPE215",137,0)
 . S W=W_$S(W="":"",1:",")_Q_$S(Q'="":",",1:"")_""""_T_""""
"RTN","RCDPE215",138,0)
 . I 'NS,$Y>(IOSL-6) D:SCREEN PAUSE I '$G(RCSTFLAG) D H,H1(1)
"RTN","RCDPE215",139,0)
 I W'="" W @W S W=""
"RTN","RCDPE215",140,0)
 I SCREEN W !,"Press RETURN to continue: " R X:DTIME
"RTN","RCDPE215",141,0)
 ;
"RTN","RCDPE215",142,0)
Q D ^%ZISC
"RTN","RCDPE215",143,0)
 K ^TMP($J,"RCFMSCR"),^TMP($J,"RCDPR215"),^TMP($J,"RCTOT"),^TMP($J,"RCFMSCR_SUM"),^TMP($J,"RCDET")
"RTN","RCDPE215",144,0)
 Q
"RTN","RCDPE215",145,0)
 ;
"RTN","RCDPE215",146,0)
 ;
"RTN","RCDPE215",147,0)
SUSP(RECEIPDA,RCTYPE,TOTAL,PCT) ;  unapplied amts for suspense
"RTN","RCDPE215",148,0)
 ; RCTYPE = see explanation at DQ above
"RTN","RCDPE215",149,0)
 ; Returns PCT,TOTAL if passed by reference
"RTN","RCDPE215",150,0)
 ;
"RTN","RCDPE215",151,0)
 N DA,AMOUNT,UNAPPLY,COUNT,PRINTOTL,COMMENTS
"RTN","RCDPE215",152,0)
 K ^TMP($J,"RCDPR215")
"RTN","RCDPE215",153,0)
 S DA=0 F  S DA=$O(^RCY(344,RECEIPDA,1,DA)) Q:'DA  D
"RTN","RCDPE215",154,0)
 .   S AMOUNT=$P($G(^RCY(344,RECEIPDA,1,DA,0)),"^",4) I 'AMOUNT Q
"RTN","RCDPE215",155,0)
 .   S UNAPPLY=$P($G(^RCY(344,RECEIPDA,1,DA,2)),"^",5) I UNAPPLY="" Q
"RTN","RCDPE215",156,0)
 .   ;  if amount has not been processed, show it in suspense
"RTN","RCDPE215",157,0)
 .   I '$P(^RCY(344,RECEIPDA,1,DA,0),"^",5) S ^TMP($J,"RCDPR215",DA)=UNAPPLY_"^"_AMOUNT_"^"_$P($G(^RCY(344,RECEIPDA,1,DA,1)),"^",2)
"RTN","RCDPE215",158,0)
 ;
"RTN","RCDPE215",159,0)
 I $O(^TMP($J,"RCDPR215",0)) D
"RTN","RCDPE215",160,0)
 .   D SET("!!?5","Appropriation: 3875",.PCT)
"RTN","RCDPE215",161,0)
 .   I RCTYPE="D" D SET("!","",.PCT)
"RTN","RCDPE215",162,0)
 .   ;
"RTN","RCDPE215",163,0)
 .   S COUNT=0,PRINTOTL=0
"RTN","RCDPE215",164,0)
 .   S DA=0 F  S DA=$O(^TMP($J,"RCDPR215",DA)) Q:'DA!($G(RCSTFLAG))  D
"RTN","RCDPE215",165,0)
 .   .   ;
"RTN","RCDPE215",166,0)
 .   .   S UNAPPLY=$P(^TMP($J,"RCDPR215",DA),"^"),AMOUNT=$P(^(DA),"^",2),COMMENTS=$P(^(DA),"^",3)
"RTN","RCDPE215",167,0)
 .   .   S PRINTOTL=PRINTOTL+AMOUNT
"RTN","RCDPE215",168,0)
 .   .   S $P(TOTAL,"^")=$P(TOTAL,"^")+AMOUNT
"RTN","RCDPE215",169,0)
 .   .   ;  no detail if accrued report
"RTN","RCDPE215",170,0)
 .   .   I RCTYPE="A" Q
"RTN","RCDPE215",171,0)
 .   .   ;
"RTN","RCDPE215",172,0)
 .   .   S COUNT=COUNT+1
"RTN","RCDPE215",173,0)
 .   .   D SET("!?5",COUNT_")",.PCT),SET("?10",UNAPPLY,.PCT),SET("?30",$J(AMOUNT,10,2),.PCT),SET("?45","COMMENTS: "_$E(COMMENTS,1,25),.PCT)
"RTN","RCDPE215",174,0)
 .   .   I $TR($E(COMMENTS,26,80)," ")'="" D SET("!?25",$E(COMMENTS,26,80),.PCT)
"RTN","RCDPE215",175,0)
 .   ;
"RTN","RCDPE215",176,0)
 .   S $P(^TMP($J,"RCTOT","TOTAL"),U)=($P($G(^TMP($J,"RCTOT","TOTAL")),U)+PRINTOTL)
"RTN","RCDPE215",177,0)
 .   I RCTYPE="D" D SET("!?30","----------",.PCT),SET("!?5","TOTAL for 3875",.PCT)
"RTN","RCDPE215",178,0)
 .   D SET("?30",$J(PRINTOTL,10,2),.PCT)
"RTN","RCDPE215",179,0)
 .   S ^TMP($J,"RCTOT","SUSPENSE")=$G(^TMP($J,"RCTOT","SUSPENSE"))+PRINTOTL
"RTN","RCDPE215",180,0)
 Q
"RTN","RCDPE215",181,0)
 ;
"RTN","RCDPE215",182,0)
 ;
"RTN","RCDPE215",183,0)
GETTYPE() ;  ask type of report to print
"RTN","RCDPE215",184,0)
 N DIR,X,Y
"RTN","RCDPE215",185,0)
 S DIR(0)="S^A:ACCRUED;D:DETAILED",DIR("A")="ACCRUED OR DETAILED REPORT",DIR("B")="ACCRUED",DIR("?")="A DETAILED Report will list out accrued bills separately"
"RTN","RCDPE215",186,0)
 S DIR("?",1)="An ACCRUED Report will list just the accrued total under each appropriation"
"RTN","RCDPE215",187,0)
 D ^DIR
"RTN","RCDPE215",188,0)
 I Y'="A",Y'="D" Q ""
"RTN","RCDPE215",189,0)
 Q Y
"RTN","RCDPE215",190,0)
 ;
"RTN","RCDPE215",191,0)
 ;
"RTN","RCDPE215",192,0)
H ;  Deposit hdr
"RTN","RCDPE215",193,0)
 N Z
"RTN","RCDPE215",194,0)
 S PAGE=PAGE+1 I PAGE'=1!(SCREEN) W @IOF
"RTN","RCDPE215",195,0)
 W $C(13),"Page ",PAGE,?(80-$L(NOW)),NOW
"RTN","RCDPE215",196,0)
 W !,$E($TR(RCYLINE,"-","*"),1,26)," 215 DEPOSIT SUMMARY REPORT ",$E($TR(RCYLINE,"-","*"),1,26)
"RTN","RCDPE215",197,0)
 W !!,"DEPOSIT #: ",DEPOSIT
"RTN","RCDPE215",198,0)
 W !,RCYLINE
"RTN","RCDPE215",199,0)
 Q
"RTN","RCDPE215",200,0)
 ;
"RTN","RCDPE215",201,0)
H1(CONT) ; Receipt Hdr
"RTN","RCDPE215",202,0)
 ; CONT = 1 if continuation from previous page
"RTN","RCDPE215",203,0)
 ;
"RTN","RCDPE215",204,0)
 N Z
"RTN","RCDPE215",205,0)
 W !!,"RECEIPT #: "_RECEIPT_$S($G(CONT):" (continued)",1:"")
"RTN","RCDPE215",206,0)
 I FMSDOCNO'="" W ?51,"FMS Document #: ",FMSDOCNO
"RTN","RCDPE215",207,0)
 S Z="",$P(Z,"-",$L(RECEIPT)+1)=""
"RTN","RCDPE215",208,0)
 W !,?11,Z
"RTN","RCDPE215",209,0)
 S Z=""
"RTN","RCDPE215",210,0)
 I $P($G(^RCY(344,RECEIPDA,0)),U,18) S Z=$E(" REFERENCE ERA #: "_$P($G(^RCY(344.4,+$P($G(^RCY(344,RECEIPDA,0)),U,18),0)),U)_" ("_$P($G(^RCY(344.4,+$P($G(^RCY(344,RECEIPDA,0)),U,18),0)),U,2)_")"_$J("",51),1,51)
"RTN","RCDPE215",211,0)
 I Z'="" W !,Z
"RTN","RCDPE215",212,0)
 W !
"RTN","RCDPE215",213,0)
 Q
"RTN","RCDPE215",214,0)
 ;
"RTN","RCDPE215",215,0)
 ;
"RTN","RCDPE215",216,0)
PAUSE ;
"RTN","RCDPE215",217,0)
 D PAUSE^RCDPR215
"RTN","RCDPE215",218,0)
 Q
"RTN","RCDPE215",219,0)
 ;
"RTN","RCDPE215",220,0)
SET(CTRL,TXT,PCT,NOSP) ; Sets print array for detail
"RTN","RCDPE215",221,0)
 ;PCT = count of lines
"RTN","RCDPE215",222,0)
 ;CTRL = Control characters
"RTN","RCDPE215",223,0)
 ;TXT = text to print
"RTN","RCDPE215",224,0)
 ;NOSP = 1 if line should always print with the previous line
"RTN","RCDPE215",225,0)
 S PCT=PCT+1,^TMP($J,"RCDET",PCT)=CTRL_U_TXT_U_+$G(NOSP)
"RTN","RCDPE215",226,0)
 Q
"RTN","RCDPE215",227,0)
 ;
"RTN","RCDPE8NZ")
0^114^B23419953
"RTN","RCDPE8NZ",1,0)
RCDPE8NZ ;ALB/TMK-report of unlinked payments in 5287/8NZZ ;19 MAR 2003
"RTN","RCDPE8NZ",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPE8NZ",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPE8NZ",4,0)
 ;
"RTN","RCDPE8NZ",5,0)
EN N RCDPPADT,%ZIS,ZTRTN,ZTSAVE,ZTDESC,POP,ZTSK,DIR,X,Y
"RTN","RCDPE8NZ",6,0)
 S DIR("A")="Start with Deposit Date: FIRST// ",DIR(0)="DOA^:"_DT_":AEP" W ! D ^DIR K DIR
"RTN","RCDPE8NZ",7,0)
 I $D(DUOUT)!$D(DTOUT) Q
"RTN","RCDPE8NZ",8,0)
 S RCDPPADT=+Y
"RTN","RCDPE8NZ",9,0)
 ; Ask device
"RTN","RCDPE8NZ",10,0)
 S %ZIS="QM" D ^%ZIS G:POP PRQ
"RTN","RCDPE8NZ",11,0)
 I $D(IO("Q")) D  G PRQ
"RTN","RCDPE8NZ",12,0)
 . S ZTRTN="PR^RCDPE8NZ",ZTDESC="AR - List of unlinked EFT deposit payments"
"RTN","RCDPE8NZ",13,0)
 . S ZTSAVE("RCDPPADT")=""
"RTN","RCDPE8NZ",14,0)
 . D ^%ZTLOAD
"RTN","RCDPE8NZ",15,0)
 . W !!,$S($D(ZTSK):"Your task number "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPE8NZ",16,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPE8NZ",17,0)
 U IO
"RTN","RCDPE8NZ",18,0)
 ;
"RTN","RCDPE8NZ",19,0)
PR ; Entrypoint for queued job
"RTN","RCDPE8NZ",20,0)
 ;
"RTN","RCDPE8NZ",21,0)
 N RCCT,RCPG,RCEFT,RCEFT1,RCDATA,RCDATA0,RCDA,RCREC,RCSTAT,RCDT,RCTOT,RCEFTD,RCSTOP,RCRDT,X,Y,Z
"RTN","RCDPE8NZ",22,0)
 ;
"RTN","RCDPE8NZ",23,0)
 ;  get list of unlinked EFT deposit data
"RTN","RCDPE8NZ",24,0)
 K ^TMP("RCDPE8NZZ_EFT",$J) ; subscripts: dep date,EFT ien,EFT det ien
"RTN","RCDPE8NZ",25,0)
 ;  Data is FMS doc indicator^FMS doc #^FMS Doc Status
"RTN","RCDPE8NZ",26,0)
 ;    FMS doc indicator = -1:no receipt  -2:no FMS doc  1:FMS doc exists
"RTN","RCDPE8NZ",27,0)
 ;
"RTN","RCDPE8NZ",28,0)
 S (RCCT,RCSTOP)=0
"RTN","RCDPE8NZ",29,0)
 S RCEFT1="" F  S RCEFT1=$O(^RCY(344.3,"ARDEP",RCEFT1)) Q:RCEFT1=""!RCSTOP  S RCDA=0 F  S RCDA=$O(^RCY(344.3,"ARDEP",RCEFT1,RCDA)) Q:'RCDA  D  Q:RCSTOP
"RTN","RCDPE8NZ",30,0)
 . S RCDATA=$G(^RCY(344.3,RCDA,0)),RCDT=$P(RCDATA,U,7),RCTOT=0
"RTN","RCDPE8NZ",31,0)
 . Q:RCDT<RCDPPADT  ; Before date selected
"RTN","RCDPE8NZ",32,0)
 . Q:'$P(RCDATA,"^",8)  ; no payment amt
"RTN","RCDPE8NZ",33,0)
 . S RCEFT=0 F  S RCEFT=$O(^RCY(344.31,"B",RCDA,RCEFT)) Q:'RCEFT!RCSTOP  S RCDATA0=$G(^RCY(344.31,RCEFT,0)) D  Q:RCSTOP  S:RCTOT ^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCDA)=RCTOT
"RTN","RCDPE8NZ",34,0)
 .. S RCCT=RCCT+1
"RTN","RCDPE8NZ",35,0)
 .. I '(RCCT#100),$D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ Q
"RTN","RCDPE8NZ",36,0)
 .. S RCREC=+$P($G(^RCY(344.4,+$P(RCDATA0,U,10),0)),U,8)
"RTN","RCDPE8NZ",37,0)
 .. I 'RCREC S ^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCDA,RCEFT)=-1,RCTOT=RCTOT+$P(RCDATA0,U,7) Q  ; No receipt
"RTN","RCDPE8NZ",38,0)
 .. S RCSTAT=$$FMSSTAT^RCDPUREC(RCREC)
"RTN","RCDPE8NZ",39,0)
 .. Q:$P(RCSTAT,U,2)["ACCEPTED"!($P(RCSTAT,U,2)["FINAL")
"RTN","RCDPE8NZ",40,0)
 .. S RCTOT=RCTOT+$P(RCDATA0,U,7)
"RTN","RCDPE8NZ",41,0)
 .. I RCSTAT=-1 S ^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCDA,RCEFT)="-2^^"_$P(RCSTAT,U) Q  ; No FMS doc
"RTN","RCDPE8NZ",42,0)
 .. S ^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCDA,RCEFT)="1^"_$P(RCSTAT,U,1,2)
"RTN","RCDPE8NZ",43,0)
 ;
"RTN","RCDPE8NZ",44,0)
 S (RCPG,RCDT)=0,RCRDT=$$FMTE^XLFDT($$NOW^XLFDT(),2)
"RTN","RCDPE8NZ",45,0)
 F  S RCDT=$O(^TMP("RCDPE8NZZ_EFT",$J,RCDT)) Q:'RCDT  D  Q:RCSTOP
"RTN","RCDPE8NZ",46,0)
 . I 'RCPG!(($Y+5)>IOSL) D  Q:RCSTOP
"RTN","RCDPE8NZ",47,0)
 .. D HDR(RCRDT,.RCPG,.RCSTOP)
"RTN","RCDPE8NZ",48,0)
 . E  W !
"RTN","RCDPE8NZ",49,0)
 . W ! S Z="DEPOSIT DATE: "_$$FMTE^XLFDT(RCDT,1) W ?(80-$L(Z)\2),Z,!
"RTN","RCDPE8NZ",50,0)
 . ;
"RTN","RCDPE8NZ",51,0)
 . S RCEFT1=0 F  S RCEFT1=$O(^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCEFT1)) Q:'RCEFT1  D
"RTN","RCDPE8NZ",52,0)
 .. S RCCT=RCCT+1
"RTN","RCDPE8NZ",53,0)
 .. I '(RCCT#100),$D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 W:$G(RCPG) !!,"TASK STOPPED BY USER!!" K ZTREQ Q
"RTN","RCDPE8NZ",54,0)
 .. S RCDATA0=$G(^RCY(344.3,RCEFT1,0))
"RTN","RCDPE8NZ",55,0)
 .. I ($Y+5)>IOSL D HDR(RCRDT,.RCPG,.RCSTOP) Q:RCSTOP
"RTN","RCDPE8NZ",56,0)
 .. W !,$J("",4),$E($P(RCDATA0,U,6)_$S('$$HACEFT^RCDPEU(RCEFT1):"",1:"-HAC")_$J("",10),1,10)_"  "_$E($$FMTE^XLFDT($P(RCDATA0,U,7),2)_$J("",16),1,16)_"  "_$E($J(+$P(RCDATA0,U,8),"",2)_$J("",20),1,20)
"RTN","RCDPE8NZ",57,0)
 .. W "  "_$J(+$G(^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCEFT1)),"",2)
"RTN","RCDPE8NZ",58,0)
 .. ;
"RTN","RCDPE8NZ",59,0)
 .. S RCEFT=0 F  S RCEFT=$O(^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCEFT1,RCEFT)) Q:'RCEFT  S RCDATA=$G(^(RCEFT)),RCEFTD=$G(^RCY(344.31,RCEFT,0)) D
"RTN","RCDPE8NZ",60,0)
 ... I ($Y+5)>IOSL D HDR(RCRDT,.RCPG,.RCSTOP) Q:RCSTOP
"RTN","RCDPE8NZ",61,0)
 ... W !,$J("",6)_$E($E($P(RCEFTD,U,2),1,20)_"/"_$E($P(RCEFTD,U,3),1,10)_$J("",33),1,33)_$E($P(RCEFTD,U,4)_$J("",13),1,13)_"  "
"RTN","RCDPE8NZ",62,0)
 ... W $E($J(+$P(RCEFTD,U,7),"",2)_$J("",14),1,14)_"  "_$S($P(RCEFTD,U,9)'="":$P($G(^RCY(344,+$P(RCEFTD,U,9),0)),U),1:"NO RECEIPT")
"RTN","RCDPE8NZ",63,0)
 ... S Z=$P(RCEFTD,U,8)
"RTN","RCDPE8NZ",64,0)
 ... W !,$J("",8)_$E($S('Z:"UNMATCHED",Z=2:"PAPER EOB",1:"MATCHED TO ERA #: "_$P(RCEFTD,U,10)_$S(Z=-1:" (TOTALS MISMATCH)",1:""))_$J("",40),1,40)_"  "
"RTN","RCDPE8NZ",65,0)
 ... W $S($P(RCDATA,U)<0:"NO FMS DOCUMENT",1:$P(RCDATA,U,2)_" - "_$P(RCDATA,U,3)),!
"RTN","RCDPE8NZ",66,0)
 ;
"RTN","RCDPE8NZ",67,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPE8NZ",68,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPE8NZ",69,0)
 G:RCSTOP PRQ
"RTN","RCDPE8NZ",70,0)
 I $E(IOST,1,2)="C-" D ASK(.RCSTOP)
"RTN","RCDPE8NZ",71,0)
 ;
"RTN","RCDPE8NZ",72,0)
PRQ K ^TMP("RCDPE8NZZ_EFT",$J)
"RTN","RCDPE8NZ",73,0)
 Q
"RTN","RCDPE8NZ",74,0)
 ;
"RTN","RCDPE8NZ",75,0)
HDR(RCRDT,RCPG,RCSTOP) ; Print header data
"RTN","RCDPE8NZ",76,0)
 I 'RCSTOP,RCPG D ASK(.RCSTOP) Q:RCSTOP
"RTN","RCDPE8NZ",77,0)
 I RCPG!($E(IOST,1,2)="C-") W @IOF,*13
"RTN","RCDPE8NZ",78,0)
 S RCPG=RCPG+1
"RTN","RCDPE8NZ",79,0)
 W !,$S(RCDPPADT'>0:"ALL ",1:"")_"UNAPPLIED EFT PAYMENT DEPOSITS"_$S(RCDPPADT>0:" AFTER "_$$FMTE^XLFDT(RCDPPADT,2),1:""),?50,RCRDT,?70,"PAGE: ",RCPG
"RTN","RCDPE8NZ",80,0)
 W !!,"    DEPOSIT #   DEPOSIT DATE      TOT AMT OF DEPOSIT    TOT AMT UNPOSTED"
"RTN","RCDPE8NZ",81,0)
 W !,$E("      PAYER/ID"_$J("",39),1,39)_"TRACE #        PAYMENT AMT     RECEIPT #",!,$J("",8)_$E("ERA MATCHED"_$J("",40),1,40)_"  FMS DOC #/STATUS"
"RTN","RCDPE8NZ",82,0)
 W !,$TR($J("",IOM)," ","=")
"RTN","RCDPE8NZ",83,0)
 Q
"RTN","RCDPE8NZ",84,0)
 ;
"RTN","RCDPE8NZ",85,0)
ASK(RCSTOP) ;
"RTN","RCDPE8NZ",86,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPE8NZ",87,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPE8NZ",88,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPE8NZ",89,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPE8NZ",90,0)
 Q
"RTN","RCDPE8NZ",91,0)
 ;
"RTN","RCDPEAR")
0^74^B2522562
"RTN","RCDPEAR",1,0)
RCDPEAR ;ALB/TMK - ELECTRONIC ERA AGING REPORTS FROM NIGHTLY JOB ;04-NOV-02
"RTN","RCDPEAR",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEAR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEAR",4,0)
 Q
"RTN","RCDPEAR",5,0)
 ;
"RTN","RCDPEAR",6,0)
AGERPT ; Entry from nightly job to run the AR EDI Lockbox Aging reports
"RTN","RCDPEAR",7,0)
 ; Bulletin is not wanted if aging parameter does not have a value
"RTN","RCDPEAR",8,0)
 ;
"RTN","RCDPEAR",9,0)
 ; ERA Aging Report (summary only)
"RTN","RCDPEAR",10,0)
 I $P($G(^RC(342,1,7)),U,3)'="" D  ; Check for ERA Aging Parameter
"RTN","RCDPEAR",11,0)
 . K ^TMP($J,"RCERAAGE")
"RTN","RCDPEAR",12,0)
 . D RPTOUT^RCDPEAR1(+$P($G(^RC(342,1,7)),U,3),0,"RCERAAGE")
"RTN","RCDPEAR",13,0)
 . D BULL("EDI LBOX ERA UNMATCHED AGING REPORT FOR "_$$FMTE^XLFDT(DT,2),"RCERAAGE")
"RTN","RCDPEAR",14,0)
 . K ^TMP($J,"RCERAAGE")
"RTN","RCDPEAR",15,0)
 ;
"RTN","RCDPEAR",16,0)
 ; EFT Aging Report (summary only)
"RTN","RCDPEAR",17,0)
 I $P($G(^RC(342,1,7)),U,2)'="" D  ; Check for EFT Aging Parameter
"RTN","RCDPEAR",18,0)
 . K ^TMP($J,"RCEFTAGE")
"RTN","RCDPEAR",19,0)
 . D RPTOUT^RCDPEAR2(+$P($G(^RC(342,1,7)),U,2),0,"RCEFTAGE")
"RTN","RCDPEAR",20,0)
 . D BULL("EDI LBOX EFT UNMATCHED AGING REPORT FOR "_$$FMTE^XLFDT(DT,2),"RCEFTAGE")
"RTN","RCDPEAR",21,0)
 . K ^TMP($J,"RCEFTAGE")
"RTN","RCDPEAR",22,0)
 ;
"RTN","RCDPEAR",23,0)
 Q
"RTN","RCDPEAR",24,0)
 ;
"RTN","RCDPEAR",25,0)
BULL(RCSUBJ,RCSUB) ; Send bulletin for aging reports
"RTN","RCDPEAR",26,0)
 N XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,RCXM,XMZ,XMERR
"RTN","RCDPEAR",27,0)
 S XMTO("I:G.RCDPE PAYMENTS")=""
"RTN","RCDPEAR",28,0)
 S XMBODY="^TMP("_$J_","""_RCSUB_""")"
"RTN","RCDPEAR",29,0)
 D
"RTN","RCDPEAR",30,0)
 . N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPEAR",31,0)
 . D SENDMSG^XMXAPI(.5,RCSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPEAR",32,0)
 Q
"RTN","RCDPEAR",33,0)
 ;
"RTN","RCDPEAR1")
0^75^B36689598
"RTN","RCDPEAR1",1,0)
RCDPEAR1 ;ALB/TMK - ELECTRONIC ERA AGING REPORT - FILE 344.4 ;31-OCT-02
"RTN","RCDPEAR1",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEAR1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEAR1",4,0)
 Q
"RTN","RCDPEAR1",5,0)
 ;
"RTN","RCDPEAR1",6,0)
EN1 ; Entry from option - run on the fly
"RTN","RCDPEAR1",7,0)
 N RCDETAIL,RCMIN,DIR,X,Y,%ZIS,ZTRTN,ZTSAVE,ZTDESC,POP
"RTN","RCDPEAR1",8,0)
 S DIR(0)="NA^0:1000",DIR("A")="Enter the minimum # of days elapsed before including on report (0-1000): " S:$P($G(^RC(342,1,7)),U,3) DIR("B")=$P(^(7),U,3)
"RTN","RCDPEAR1",9,0)
 W ! D ^DIR K DIR
"RTN","RCDPEAR1",10,0)
 I $D(DUOUT)!$D(DTOUT) G EN1Q
"RTN","RCDPEAR1",11,0)
 S RCMIN=+Y
"RTN","RCDPEAR1",12,0)
 S DIR(0)="SA^S:SUMMARY;D:DETAIL",DIR("A")="DO YOU WANT (S)UMMARY OR (D)ETAIL?: ",DIR("B")="SUMMARY" D ^DIR K DIR
"RTN","RCDPEAR1",13,0)
 I $D(DUOUT)!$D(DTOUT) G EN1Q
"RTN","RCDPEAR1",14,0)
 S RCDETAIL=(Y="D")
"RTN","RCDPEAR1",15,0)
 ; Ask device
"RTN","RCDPEAR1",16,0)
 S %ZIS="QM" D ^%ZIS G:POP EN1Q
"RTN","RCDPEAR1",17,0)
 I $D(IO("Q")) D  G EN1Q
"RTN","RCDPEAR1",18,0)
 . S ZTRTN="RPTOUT^RCDPEAR1("_RCMIN_","_RCDETAIL_")",ZTDESC="AR - EDI LOCKBOX ERA AGING REPORT"
"RTN","RCDPEAR1",19,0)
 . D ^%ZTLOAD
"RTN","RCDPEAR1",20,0)
 . W !!,$S($D(ZTSK):"Your task number "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEAR1",21,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEAR1",22,0)
 U IO
"RTN","RCDPEAR1",23,0)
 D RPTOUT(RCMIN,RCDETAIL)
"RTN","RCDPEAR1",24,0)
EN1Q Q
"RTN","RCDPEAR1",25,0)
 ;
"RTN","RCDPEAR1",26,0)
RPTOUT(RCMIN,RCDETAIL,RCPRT) ; Entrypoint for queued job, nightly job
"RTN","RCDPEAR1",27,0)
 ; RCMIN = the minimum # of days before an entry is included on report
"RTN","RCDPEAR1",28,0)
 ; RCDETAIL = 1 if detail is needed, otherwise only summary is reported
"RTN","RCDPEAR1",29,0)
 ; RCPRT = name of the subscript for ^TMP to use to return all lines
"RTN","RCDPEAR1",30,0)
 ;        (for bulletin).  If undefined or null, output is printed
"RTN","RCDPEAR1",31,0)
 ; Return global if RCPRT not null: ^TMP($J,RCPRT,line#)=line text
"RTN","RCDPEAR1",32,0)
 N RCCT,RCPG,RCSTOP,RCNT,RCDATA,RCOUT,RCEDT,RC0,RC7,RCZ,RCZ0,RCZ1,RC00,RCTOT,Z,Z0
"RTN","RCDPEAR1",33,0)
 S RCPRT=$G(RCPRT)
"RTN","RCDPEAR1",34,0)
 S (RCCT,RCSTOP,RCPG,RCNT,RCTOT)=0
"RTN","RCDPEAR1",35,0)
 S RCEDT=$$FMADD^XLFDT(DT,-RCMIN)
"RTN","RCDPEAR1",36,0)
 K ^TMP($J,"RCERA_AGED"),^TMP($J,"RCERA_ADJ")
"RTN","RCDPEAR1",37,0)
 I RCPRT'="" K ^TMP($J,RCPRT)
"RTN","RCDPEAR1",38,0)
 S RCZ0=0 F  S RCZ0=$O(^RCY(344.4,"AMATCH",0,RCZ0)) Q:'RCZ0  D
"RTN","RCDPEAR1",39,0)
 . S RC7=$P($G(^RCY(344.4,RCZ0,0)),U,7)\1
"RTN","RCDPEAR1",40,0)
 . I RC7>RCEDT Q
"RTN","RCDPEAR1",41,0)
 . ; Minimum days have elapsed - include on report
"RTN","RCDPEAR1",42,0)
 . S ^TMP($J,"RCERA_AGED",$$FMDIFF^XLFDT(RC7,DT),RCZ0)=0,RCNT=RCNT+1
"RTN","RCDPEAR1",43,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCERA_AGED",RCZ)) Q:RCZ=""  S RCZ0=0 F  S RCZ0=$O(^TMP($J,"RCERA_AGED",RCZ,RCZ0)) Q:'RCZ0  D  G:RCSTOP PRTQ
"RTN","RCDPEAR1",44,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W:RCPRT="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR1",45,0)
 . I RCDETAIL,RCPG D SETLINE(" ",.RCCT,.RCPRT) ; On detail list, skip line
"RTN","RCDPEAR1",46,0)
 . I 'RCPG!(($Y+5)>IOSL) D HDR(.RCCT,.RCPG,.RCSTOP,RCPRT,RCDETAIL,RCMIN) Q:RCSTOP
"RTN","RCDPEAR1",47,0)
 . S RC0=$G(^RCY(344.4,RCZ0,0)),RCTOT=RCTOT+$P(RC0,U,5)
"RTN","RCDPEAR1",48,0)
 . S Z=$$SETSTR^VALM1($J(-RCZ,4),"",1,4)
"RTN","RCDPEAR1",49,0)
 . S Z=$$SETSTR^VALM1("  "_$P(RC0,U,2),Z,5,22)
"RTN","RCDPEAR1",50,0)
 . S Z=$$SETSTR^VALM1("  "_$E($P(RC0,U,6),1,30)_"/"_$P(RC0,U,3),Z,27,43)
"RTN","RCDPEAR1",51,0)
 . S Z=$$SETSTR^VALM1("  "_$$FMTE^XLFDT($P(RC0,U,4),2),Z,70,10)
"RTN","RCDPEAR1",52,0)
 . D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",53,0)
 . S Z=$$SETSTR^VALM1($J("",16)_$S($P(RC0,U,7):$$FMTE^XLFDT($P(RC0,U,7)\1,2),1:""),"",1,25)
"RTN","RCDPEAR1",54,0)
 . S Z=$$SETSTR^VALM1("  "_$J($P(RC0,U,5),15,2),Z,26,17)
"RTN","RCDPEAR1",55,0)
 . S Z=$$SETSTR^VALM1("  "_+$P(RC0,U,11),Z,43,11)
"RTN","RCDPEAR1",56,0)
 . S Z=$$SETSTR^VALM1("  "_$P(RC0,U),Z_$S('$$HACERA^RCDPEU(RCZ0):"",1:" (HAC ERA)"),54,26)
"RTN","RCDPEAR1",57,0)
 . D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",58,0)
 . ;
"RTN","RCDPEAR1",59,0)
 . I "23"[$$ADJ^RCDPEU(RCZ0) D SETLINE($J("",9)_"** CLAIM LEVEL ADJUSTMENTS EXIST FOR THIS ERA ***",.RCCT,RCPRT)
"RTN","RCDPEAR1",60,0)
 . I $O(^RCY(344.4,RCZ0,2,0)) D  ; ERA level adjustments exist
"RTN","RCDPEAR1",61,0)
 .. N Q
"RTN","RCDPEAR1",62,0)
 .. D DISPADJ^RCDPESR8(RCZ0,"^TMP("_$J_",""RCERA_ADJ"")")
"RTN","RCDPEAR1",63,0)
 .. I $O(^TMP($J,"RCERA_ADJ",0)) D SETLINE($J("",9)_"** GENERAL ADJUSTMENT DATA EXISTS FOR ERA **",.RCCT,RCPRT)
"RTN","RCDPEAR1",64,0)
 .. S Q=0 F  S Q=$O(^TMP($J,"RCERA_ADJ",Q)) Q:'Q  D SETLINE($J("",9)_$G(^TMP($J,"RCERA_ADJ",Q)),.RCCT,RCPRT)
"RTN","RCDPEAR1",65,0)
 . ;
"RTN","RCDPEAR1",66,0)
 . I RCDETAIL D  ; Detail wanted
"RTN","RCDPEAR1",67,0)
 .. S RCZ1=0 F  S RCZ1=$O(^RCY(344.4,RCZ0,1,RCZ1)) Q:'RCZ1  S RC00=$G(^(RCZ1,0)) D  Q:RCSTOP
"RTN","RCDPEAR1",68,0)
 ... N D
"RTN","RCDPEAR1",69,0)
 ... K RCDATA,RCOUT
"RTN","RCDPEAR1",70,0)
 ... ;I $O(^RCY(344.4,RCZ0,1,RCZ1),-1) D SETLINE(" ",.RCCT,RCPRT)
"RTN","RCDPEAR1",71,0)
 ... I ($Y+5)>IOSL D HDR(.RCCT,.RCPG,.RCSTOP,RCPRT,RCDETAIL,RCMIN) Q:RCSTOP
"RTN","RCDPEAR1",72,0)
 ... S D=$J("",7)_" EEOB Seq #: "_$P(RC00,U)_$S($D(^RCY(344.4,RCZ0,1,"ATB",1,RCZ1)):" (REVERSAL)",1:"")_"  EEOB "
"RTN","RCDPEAR1",73,0)
 ... S D=D_$S('$P(RC00,U,2):"not on file",1:"on file for "_$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(RC00,U,2),0)),0)),U))_"  "_$J(+$P(RC00,U,3),"",2)
"RTN","RCDPEAR1",74,0)
 ... D SETLINE(D,.RCCT,RCPRT)
"RTN","RCDPEAR1",75,0)
 ... Q:$P(RC00,U,2)
"RTN","RCDPEAR1",76,0)
 ... D DISP^RCDPESR0("^RCY(344.4,"_RCZ0_",1,"_RCZ1_",1)","RCDATA",1,"RCOUT",68,1)
"RTN","RCDPEAR1",77,0)
 ... I '$O(RCOUT(0)) D SETLINE($J("",9)_" NO DETAIL FOUND",.RCCT,RCPRT) Q
"RTN","RCDPEAR1",78,0)
 ... S Z=0 F  S Z=$O(RCOUT(Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEAR1",79,0)
 .... I ($Y+5)>IOSL D HDR(.RCCT,.RCPG,.RCSTOP,RCPRT,RCDETAIL,RCMIN) Q:RCSTOP
"RTN","RCDPEAR1",80,0)
 .... D SETLINE($J("",9)_"*"_RCOUT(Z),.RCCT,RCPRT)
"RTN","RCDPEAR1",81,0)
 ;
"RTN","RCDPEAR1",82,0)
 F Z0=1:1:2 D SETLINE(" ",.RCCT,RCPRT)
"RTN","RCDPEAR1",83,0)
 I ($Y+7)>IOSL!'RCPG D HDR(.RCCT,.RCPG,.RCSTOP,RCPRT,RCDETAIL,RCMIN)
"RTN","RCDPEAR1",84,0)
 S Z=$$SETSTR^VALM1("TOTALS:","",1,79)
"RTN","RCDPEAR1",85,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",86,0)
 S Z=$$SETSTR^VALM1(" NUMBER AGED ELECTRONIC ERA MESSAGES FOUND: "_RCNT,"",1,79)
"RTN","RCDPEAR1",87,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",88,0)
 S Z=$$SETSTR^VALM1(" AMOUNT AGED ELECTRONIC ERA MESSAGES FOUND: "_$J(RCTOT,0,2),"",1,79)
"RTN","RCDPEAR1",89,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",90,0)
 ;
"RTN","RCDPEAR1",91,0)
PRTQ I '$D(ZTQUEUED),'RCSTOP,RCPG,RCPRT="" D ASK()
"RTN","RCDPEAR1",92,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAR1",93,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAR1",94,0)
 K ^TMP($J,"RCERA_AGED")
"RTN","RCDPEAR1",95,0)
 Q
"RTN","RCDPEAR1",96,0)
 ;
"RTN","RCDPEAR1",97,0)
HDR(RCCT,RCPG,RCSTOP,RCPRT,RCDETAIL,RCMIN) ;Prints report heading
"RTN","RCDPEAR1",98,0)
 ; Function returns RCPG = current page # and RCCT = running line count
"RTN","RCDPEAR1",99,0)
 ;   and RCSTOP = 1 if user aborted print 
"RTN","RCDPEAR1",100,0)
 ; Parameters must be passed by reference
"RTN","RCDPEAR1",101,0)
 ; RCDETAIL = 1 if detail is needed, otherwise only summary is reported
"RTN","RCDPEAR1",102,0)
 ; RCPRT = name of the subscript for ^TMP to use to return all lines
"RTN","RCDPEAR1",103,0)
 ;        (for bulletin).  If undefined or null, output is printed
"RTN","RCDPEAR1",104,0)
 ; RCMIN = minimum # days being used to age
"RTN","RCDPEAR1",105,0)
 N Z,Z0
"RTN","RCDPEAR1",106,0)
 Q:$G(RCSTOP)
"RTN","RCDPEAR1",107,0)
 I RCPG!($E(IOST,1,2)="C-") D  Q:$G(RCSTOP)
"RTN","RCDPEAR1",108,0)
 . I RCPG&($E(IOST,1,2)="C-")&(RCPRT="") D ASK(.RCSTOP) Q:RCSTOP
"RTN","RCDPEAR1",109,0)
 . I RCPRT="" W @IOF,*13 Q  ; Write form feed for report
"RTN","RCDPEAR1",110,0)
 . ; Add 2 blank lines for bulletin
"RTN","RCDPEAR1",111,0)
 . F Z=1:1:2 D SETLINE(" ",.RCCT,RCPRT)
"RTN","RCDPEAR1",112,0)
 S RCPG=RCPG+1
"RTN","RCDPEAR1",113,0)
 S Z0="EDI LOCKBOX ERA AGING "_$S(RCDETAIL:"DETAIL",1:"SUMMARY")_" REPORT"
"RTN","RCDPEAR1",114,0)
 S Z=$$SETSTR^VALM1($J("",80-$L(Z0)\2)_Z0,"",1,79)
"RTN","RCDPEAR1",115,0)
 S Z=$$SETSTR^VALM1("Page: "_RCPG,Z,70,10)
"RTN","RCDPEAR1",116,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",117,0)
 S Z0="MINIMUM DAYS FOR AGING: "_RCMIN,Z0=$J("",80-$L(Z0)\2)_Z0
"RTN","RCDPEAR1",118,0)
 S Z=$$SETSTR^VALM1(Z0,"",1,79)
"RTN","RCDPEAR1",119,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",120,0)
 S Z0="RUN DATE: "_$$FMTE^XLFDT(DT,2),Z0=$J("",80-$L(Z0)\2)_Z0
"RTN","RCDPEAR1",121,0)
 S Z=$$SETSTR^VALM1(Z0,"",1,79)
"RTN","RCDPEAR1",122,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",123,0)
 D SETLINE(" ",.RCCT,RCPRT)
"RTN","RCDPEAR1",124,0)
 D SETLINE("AGED",.RCCT,RCPRT)
"RTN","RCDPEAR1",125,0)
 S Z=$$SETSTR^VALM1("DAYS"_$J("",2)_"TRACE #"_$J("",15)_"PAYMENT FROM/ID"_$J("",28)_"ERA DATE","",1,79)
"RTN","RCDPEAR1",126,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",127,0)
 D SETLINE(" ",.RCCT,RCPRT)
"RTN","RCDPEAR1",128,0)
 S Z=$$SETSTR^VALM1($J("",16)_"FILE DATE"_$J("",6)_"AMOUNT PAID"_$J("",2)_"EEOB CNT "_$J("",2)_"ERA #",Z,1,79)
"RTN","RCDPEAR1",129,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",130,0)
 D SETLINE($TR($J("",IOM-1)," ","="),.RCCT,RCPRT)
"RTN","RCDPEAR1",131,0)
 Q
"RTN","RCDPEAR1",132,0)
 ;
"RTN","RCDPEAR1",133,0)
SETLINE(Z,RCCT,RCPRT) ; Sets line into print global or writes line
"RTN","RCDPEAR1",134,0)
 ; Z = txt to output
"RTN","RCDPEAR1",135,0)
 ; RCCT = line counter
"RTN","RCDPEAR1",136,0)
 ; RCPRT = flag if 1, indicates output to global, no writes 
"RTN","RCDPEAR1",137,0)
 S RCCT=RCCT+1
"RTN","RCDPEAR1",138,0)
 I RCPRT="" W !,Z Q
"RTN","RCDPEAR1",139,0)
 S ^TMP($J,RCPRT,RCCT)=Z
"RTN","RCDPEAR1",140,0)
 Q
"RTN","RCDPEAR1",141,0)
 ;
"RTN","RCDPEAR1",142,0)
ASK(RCSTOP) ; Ask to continue
"RTN","RCDPEAR1",143,0)
 ; If passed by reference ,RCSTOP is returned as 1 if print is aborted
"RTN","RCDPEAR1",144,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEAR1",145,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEAR1",146,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEAR1",147,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEAR1",148,0)
 Q
"RTN","RCDPEAR1",149,0)
 ;
"RTN","RCDPEAR2")
0^76^B31707246
"RTN","RCDPEAR2",1,0)
RCDPEAR2 ;ALB/TMK - ELECTRONIC EFT AGING REPORT - FILE 344.3 ;04-NOV-02
"RTN","RCDPEAR2",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEAR2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEAR2",4,0)
 Q
"RTN","RCDPEAR2",5,0)
 ;
"RTN","RCDPEAR2",6,0)
EN1 ; Entry from option - run on the fly
"RTN","RCDPEAR2",7,0)
 N RCDETAIL,RCMIN,DIR,X,Y,%ZIS,ZTRTN,ZTSAVE,ZTDESC,POP
"RTN","RCDPEAR2",8,0)
 S DIR(0)="NA^0:1000",DIR("A")="Enter the minimum # of days elapsed before including on report (0-1000): " S:$P($G(^RC(342,1,7)),U,2) DIR("B")=$P(^(7),U,2)
"RTN","RCDPEAR2",9,0)
 S DIR("?",1)="This is the # minimum # of days this EFT has been in an UNMATCHED status",DIR("?",2)="before being included on this report.  EFT's with a 0 dollar balance are",DIR("?")="always excluded from this report."
"RTN","RCDPEAR2",10,0)
 W ! D ^DIR K DIR
"RTN","RCDPEAR2",11,0)
 I $D(DUOUT)!$D(DTOUT) G EN1Q
"RTN","RCDPEAR2",12,0)
 S RCMIN=+Y
"RTN","RCDPEAR2",13,0)
 S DIR(0)="SA^S:SUMMARY;D:DETAIL",DIR("A")="DO YOU WANT (S)UMMARY OR (D)ETAIL?: ",DIR("B")="SUMMARY" D ^DIR K DIR
"RTN","RCDPEAR2",14,0)
 I $D(DUOUT)!$D(DTOUT) G EN1Q
"RTN","RCDPEAR2",15,0)
 S RCDETAIL=(Y="D")
"RTN","RCDPEAR2",16,0)
 ; Ask device
"RTN","RCDPEAR2",17,0)
 S %ZIS="QM" D ^%ZIS G:POP EN1Q
"RTN","RCDPEAR2",18,0)
 I $D(IO("Q")) D  G EN1Q
"RTN","RCDPEAR2",19,0)
 . S ZTRTN="RPTOUT^RCDPEAR2("_RCMIN_","_RCDETAIL_")",ZTDESC="AR - EDI LOCKBOX EFT AGING REPORT"
"RTN","RCDPEAR2",20,0)
 . D ^%ZTLOAD
"RTN","RCDPEAR2",21,0)
 . W !!,$S($D(ZTSK):"Your task number "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEAR2",22,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEAR2",23,0)
 U IO
"RTN","RCDPEAR2",24,0)
 D RPTOUT(RCMIN,RCDETAIL)
"RTN","RCDPEAR2",25,0)
EN1Q Q
"RTN","RCDPEAR2",26,0)
 ;
"RTN","RCDPEAR2",27,0)
RPTOUT(RCMIN,RCDETAIL,RCPRT) ; Entrypoint for queued job, nightly job
"RTN","RCDPEAR2",28,0)
 ; RCMIN = the minimum # of days before an entry is included on report
"RTN","RCDPEAR2",29,0)
 ; RCDETAIL = 1 if detail is needed, otherwise only summary is reported
"RTN","RCDPEAR2",30,0)
 ; RCPRT = name of the subscript for ^TMP to use to return all lines
"RTN","RCDPEAR2",31,0)
 ;        (for bulletin).  If undefined or null, output is printed
"RTN","RCDPEAR2",32,0)
 ; Return global if RCPRT not null: ^TMP($J,RCPRT,line#)=line text
"RTN","RCDPEAR2",33,0)
 N RCCT,RCPG,RCSTOP,RCNT,RCTOT,RCOUT,RCEDT,RC0,RC1,RC13,RCZ,RCZ0,RC00,Z,Z0
"RTN","RCDPEAR2",34,0)
 S RCPRT=$G(RCPRT)
"RTN","RCDPEAR2",35,0)
 S (RCCT,RCSTOP,RCPG,RCNT,RCTOT)=0
"RTN","RCDPEAR2",36,0)
 S RCEDT=$$FMADD^XLFDT(DT,-RCMIN)
"RTN","RCDPEAR2",37,0)
 K ^TMP($J,"RCEFT_AGED")
"RTN","RCDPEAR2",38,0)
 I RCPRT'="" K ^TMP($J,RCPRT)
"RTN","RCDPEAR2",39,0)
 S RCZ0=0 F  S RCZ0=$O(^RCY(344.31,"AMATCH",0,RCZ0)) Q:'RCZ0  D
"RTN","RCDPEAR2",40,0)
 . Q:$P($G(^RCY(344.31,RCZ0,0)),U,7)=0
"RTN","RCDPEAR2",41,0)
 . S RC13=$P($G(^RCY(344.31,RCZ0,0)),U,13)
"RTN","RCDPEAR2",42,0)
 . I RC13>RCEDT Q
"RTN","RCDPEAR2",43,0)
 . ; Minimum days have elapsed - include on report
"RTN","RCDPEAR2",44,0)
 . S ^TMP($J,"RCEFT_AGED",$$FMDIFF^XLFDT(RC13,DT),RCZ0)=0,RCNT=RCNT+1
"RTN","RCDPEAR2",45,0)
 ;
"RTN","RCDPEAR2",46,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCEFT_AGED",RCZ)) Q:RCZ=""  S RCZ0=0 F  S RCZ0=$O(^TMP($J,"RCEFT_AGED",RCZ,RCZ0)) Q:'RCZ0  D  G:RCSTOP PRTQ
"RTN","RCDPEAR2",47,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W:RCPRT="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR2",48,0)
 . I RCDETAIL,RCPG D SETLINE(" ",.RCCT,.RCPRT) ; On detail list, skip line
"RTN","RCDPEAR2",49,0)
 . I 'RCPG!(($Y+5)>IOSL) D HDR(.RCCT,.RCPG,RCMIN,.RCSTOP,RCPRT,RCDETAIL) Q:RCSTOP
"RTN","RCDPEAR2",50,0)
 . S RC0=$G(^RCY(344.31,RCZ0,0)),RC00=$G(^RCY(344.3,+RC0,0))
"RTN","RCDPEAR2",51,0)
 . S RCTOT=RCTOT+$P(RC0,U,7)
"RTN","RCDPEAR2",52,0)
 . S Z=$$SETSTR^VALM1($J(-RCZ,4),"",1,4)
"RTN","RCDPEAR2",53,0)
 . S Z=$$SETSTR^VALM1("  "_$P(RC0,U,4),Z,5,22)
"RTN","RCDPEAR2",54,0)
 . S Z=$$SETSTR^VALM1("  "_$E($P(RC0,U,2),1,30)_"/"_$P(RC0,U,3),Z,27,43)
"RTN","RCDPEAR2",55,0)
 . S Z=$$SETSTR^VALM1("  "_$$FMTE^XLFDT($P(RC0,U,12),2),Z,70,10)
"RTN","RCDPEAR2",56,0)
 . D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",57,0)
 . S Z=$$SETSTR^VALM1($J("",6)_$S($P(RC0,U,13):$$FMTE^XLFDT($P(RC0,U,13),2),1:""),"",1,17)
"RTN","RCDPEAR2",58,0)
 . S Z=$$SETSTR^VALM1("  "_$J($P(RC0,U,7),15,2),Z,18,17)
"RTN","RCDPEAR2",59,0)
 . S Z=$$SETSTR^VALM1("  "_$P(RC00,U,6),Z,35,8)
"RTN","RCDPEAR2",60,0)
 . S Z=$$SETSTR^VALM1("  "_$S($P(RC00,U,12):"",1:"NOT ")_"POSTED TO 8NZZ"_$S($P(RC00,U,12):" ON "_$$FMTE^XLFDT($P(RC00,U,11),2),1:""),Z,44,36)
"RTN","RCDPEAR2",61,0)
 . D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",62,0)
 . ;
"RTN","RCDPEAR2",63,0)
 . I RCDETAIL D  ; Detail wanted
"RTN","RCDPEAR2",64,0)
 .. K RCOUT
"RTN","RCDPEAR2",65,0)
 .. D GETS^DIQ(344.31,RCZ0_",",2,"E","RCOUT")
"RTN","RCDPEAR2",66,0)
 .. Q:'$O(RCOUT(344.31,RCZ0_",",2,0))
"RTN","RCDPEAR2",67,0)
 .. D SETLINE($J("",8)_"--EXCEPTION NOTES--",.RCCT,RCPRT)
"RTN","RCDPEAR2",68,0)
 .. S Z=0 F  S Z=$O(RCOUT(344.31,RCZ0_",",2,Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEAR2",69,0)
 ... I ($Y+5)>IOSL D HDR(.RCCT,.RCPG,RCMIN,.RCSTOP,RCPRT,RCDETAIL) Q:RCSTOP
"RTN","RCDPEAR2",70,0)
 ... D SETLINE($J("",8)_" "_RCOUT(344.31,RCZ0_",",2,Z),.RCCT,RCPRT)
"RTN","RCDPEAR2",71,0)
 ;
"RTN","RCDPEAR2",72,0)
 F Z0=1:1:2 D SETLINE(" ",.RCCT,RCPRT)
"RTN","RCDPEAR2",73,0)
 I ($Y+7)>IOSL!'RCPG D HDR(.RCCT,.RCPG,RCMIN,.RCSTOP,RCPRT,RCDETAIL)
"RTN","RCDPEAR2",74,0)
 S Z=$$SETSTR^VALM1("TOTALS:","",1,79)
"RTN","RCDPEAR2",75,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",76,0)
 S Z=$$SETSTR^VALM1(" NUMBER AGED ELECTRONIC EFT MESSAGES FOUND: "_RCNT,"",1,79)
"RTN","RCDPEAR2",77,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",78,0)
 S Z=$$SETSTR^VALM1(" AMOUNT AGED ELECTRONIC EFT MESSAGES FOUND: "_$J(+RCTOT,0,2),"",1,79)
"RTN","RCDPEAR2",79,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",80,0)
 ;
"RTN","RCDPEAR2",81,0)
PRTQ I '$D(ZTQUEUED),'RCSTOP,RCPG,RCPRT="" D ASK()
"RTN","RCDPEAR2",82,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAR2",83,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAR2",84,0)
 K ^TMP($J,"RCEFT_AGED")
"RTN","RCDPEAR2",85,0)
 Q
"RTN","RCDPEAR2",86,0)
 ;
"RTN","RCDPEAR2",87,0)
HDR(RCCT,RCPG,RCMIN,RCSTOP,RCPRT,RCDETAIL) ;Prints report heading
"RTN","RCDPEAR2",88,0)
 ; Function returns RCPG = current page # and RCCT = running line count
"RTN","RCDPEAR2",89,0)
 ;   and RCSTOP = 1 if user aborted print 
"RTN","RCDPEAR2",90,0)
 ; Above parameters must be passed by reference
"RTN","RCDPEAR2",91,0)
 ; RCMIN = the minimum # of days before an entry is included on report
"RTN","RCDPEAR2",92,0)
 ; RCDETAIL = 1 if detail is needed, otherwise only summary is reported
"RTN","RCDPEAR2",93,0)
 ; RCPRT = name of the subscript for ^TMP to use to return all lines
"RTN","RCDPEAR2",94,0)
 ;        (for bulletin).  If undefined or null, output is printed
"RTN","RCDPEAR2",95,0)
 N Z,Z0
"RTN","RCDPEAR2",96,0)
 I RCPG!($E(IOST,1,2)="C-") D
"RTN","RCDPEAR2",97,0)
 . I RCPG&($E(IOST,1,2)="C-")&(RCPRT="") D ASK(.RCSTOP) Q:RCSTOP
"RTN","RCDPEAR2",98,0)
 . I RCPRT="" W @IOF,*13 Q  ; Write form feed for report
"RTN","RCDPEAR2",99,0)
 . ; Add 2 blank lines for bulletin
"RTN","RCDPEAR2",100,0)
 . F Z=1:1:2 D SETLINE(" ",.RCCT,RCPRT)
"RTN","RCDPEAR2",101,0)
 Q:$G(RCSTOP)
"RTN","RCDPEAR2",102,0)
 S RCPG=RCPG+1
"RTN","RCDPEAR2",103,0)
 S Z0="EDI LOCKBOX EFT UNMATCHED AGING "_$S(RCDETAIL:"DETAIL",1:"SUMMARY")_" REPORT"
"RTN","RCDPEAR2",104,0)
 S Z=$$SETSTR^VALM1($J("",80-$L(Z0)\2)_Z0,"",1,79)
"RTN","RCDPEAR2",105,0)
 S Z=$$SETSTR^VALM1("Page: "_RCPG,Z,70,10)
"RTN","RCDPEAR2",106,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",107,0)
 S Z0="MINIMUM DAYS NOT MATCHED FOR AGING: "_RCMIN,Z0=$J("",80-$L(Z0)\2)_Z0
"RTN","RCDPEAR2",108,0)
 S Z=$$SETSTR^VALM1(Z0,"",1,79)
"RTN","RCDPEAR2",109,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",110,0)
 S Z0="RUN DATE: "_$$FMTE^XLFDT(DT,2),Z0=$J("",80-$L(Z0)\2)_Z0
"RTN","RCDPEAR2",111,0)
 S Z=$$SETSTR^VALM1(Z0,"",1,79)
"RTN","RCDPEAR2",112,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",113,0)
 D SETLINE(" ",.RCCT,RCPRT)
"RTN","RCDPEAR2",114,0)
 D SETLINE("AGED",.RCCT,RCPRT)
"RTN","RCDPEAR2",115,0)
 S Z=$$SETSTR^VALM1("DAYS"_$J("",2)_"TRACE #"_$J("",15)_"DEPOSIT FROM/ID"_$J("",28)_"DEP DATE","",1,79)
"RTN","RCDPEAR2",116,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",117,0)
 D SETLINE(" ",.RCCT,RCPRT)
"RTN","RCDPEAR2",118,0)
 S Z=$$SETSTR^VALM1($J("",6)_"FILE DATE"_$J("",5)_"DEPOSIT AMOUNT"_$J("",2)_"DEP #  "_$J("",2)_"DEPOSIT POST STATUS",Z,1,79)
"RTN","RCDPEAR2",119,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",120,0)
 D SETLINE($TR($J("",IOM-1)," ","="),.RCCT,RCPRT)
"RTN","RCDPEAR2",121,0)
 Q
"RTN","RCDPEAR2",122,0)
 ;
"RTN","RCDPEAR2",123,0)
SETLINE(Z,RCCT,RCPRT) ; Sets line into print global or writes line
"RTN","RCDPEAR2",124,0)
 ; Z = txt to output
"RTN","RCDPEAR2",125,0)
 ; RCCT = line counter
"RTN","RCDPEAR2",126,0)
 ; RCPRT = flag if 1, indicates output to global, no writes 
"RTN","RCDPEAR2",127,0)
 S RCCT=RCCT+1
"RTN","RCDPEAR2",128,0)
 I RCPRT="" W !,Z Q
"RTN","RCDPEAR2",129,0)
 S ^TMP($J,RCPRT,RCCT)=Z
"RTN","RCDPEAR2",130,0)
 Q
"RTN","RCDPEAR2",131,0)
 ;
"RTN","RCDPEAR2",132,0)
ASK(RCSTOP) ; Ask to continue
"RTN","RCDPEAR2",133,0)
 ; If passed by reference ,RCSTOP is returned as 1 if print is aborted
"RTN","RCDPEAR2",134,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEAR2",135,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEAR2",136,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEAR2",137,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEAR2",138,0)
 Q
"RTN","RCDPEAR2",139,0)
 ;
"RTN","RCDPEDA1")
0^77^B12897653
"RTN","RCDPEDA1",1,0)
RCDPEDA1 ;ALB/TMK - ACTIVITY REPORT HEADER ;04-NOV-02
"RTN","RCDPEDA1",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEDA1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEDA1",4,0)
 Q
"RTN","RCDPEDA1",5,0)
 ;
"RTN","RCDPEDA1",6,0)
HDR(RCCT,RCPG,RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) ;Prints report heading
"RTN","RCDPEDA1",7,0)
 ; Function returns RCPG = current page # and RCCT = running line count
"RTN","RCDPEDA1",8,0)
 ;   and RCSTOP = 1 if user aborted print
"RTN","RCDPEDA1",9,0)
 ; Parameters RCCT,RCPG,RCSTOP must be passed by reference
"RTN","RCDPEDA1",10,0)
 ; RCDT1,RCDT2 = from,to date
"RTN","RCDPEDA1",11,0)
 ; RCDET = flag = 1 if detail is desired
"RTN","RCDPEDA1",12,0)
 N Z,Z0,X,Y
"RTN","RCDPEDA1",13,0)
 Q:RCNITE&(RCPG)
"RTN","RCDPEDA1",14,0)
 I RCPG!($E(IOST,1,2)="C-") D
"RTN","RCDPEDA1",15,0)
 . Q:$G(RCNITE)
"RTN","RCDPEDA1",16,0)
 . I RCPG&($E(IOST,1,2)="C-") D ASK(.RCSTOP) Q:RCSTOP
"RTN","RCDPEDA1",17,0)
 . W @IOF,*13 ; Write form feed
"RTN","RCDPEDA1",18,0)
 Q:RCSTOP
"RTN","RCDPEDA1",19,0)
 S RCPG=RCPG+1
"RTN","RCDPEDA1",20,0)
 S Z0="EDI LOCKBOX DAILY ACTIVITY "_$S($G(RCDET):"DETAIL",1:"SUMMARY")_" REPORT"
"RTN","RCDPEDA1",21,0)
 S Z=$$SETSTR^VALM1($J("",80-$L(Z0)\2)_Z0,"",1,79)
"RTN","RCDPEDA1",22,0)
 S Z=$$SETSTR^VALM1("Page: "_RCPG,Z,70,10)
"RTN","RCDPEDA1",23,0)
 D SETLINE^RCDPEDAR(RCNITE,Z,.RCCT)
"RTN","RCDPEDA1",24,0)
 S Z0="RUN DATE: "_$$FMTE^XLFDT(DT,2),Z0=$J("",80-$L(Z0)\2)_Z0
"RTN","RCDPEDA1",25,0)
 S Z=$$SETSTR^VALM1(Z0,"",1,79)
"RTN","RCDPEDA1",26,0)
 D SETLINE^RCDPEDAR(RCNITE,Z,.RCCT)
"RTN","RCDPEDA1",27,0)
 D SETLINE^RCDPEDAR(RCNITE," ",.RCCT)
"RTN","RCDPEDA1",28,0)
 D SETLINE^RCDPEDAR(RCNITE,"DATE RANGE SELECTED: "_$$FMTE^XLFDT(RCDT1,2)_"-"_$$FMTE^XLFDT(RCDT2,2),.RCCT)
"RTN","RCDPEDA1",29,0)
 D SETLINE^RCDPEDAR(RCNITE," ",.RCCT)
"RTN","RCDPEDA1",30,0)
 I $G(RCDET) D
"RTN","RCDPEDA1",31,0)
 . S Z=$$SETSTR^VALM1("DEP #   DEPOSIT DT  "_$J("",22)_"DEP AMOUNT          FMS DEPOSIT STAT","",1,80)
"RTN","RCDPEDA1",32,0)
 . D SETLINE^RCDPEDAR(RCNITE,Z,.RCCT)
"RTN","RCDPEDA1",33,0)
 . D SETLINE^RCDPEDAR(RCNITE," ",.RCCT)
"RTN","RCDPEDA1",34,0)
 . S Z=$$SETSTR^VALM1($J("",3)_"EFT #  EFT PAYER TRACE #"_$J("",4)_"DATE PD   PAYMENT AMOUNT     ERA MATCH STATUS","",1,80)
"RTN","RCDPEDA1",35,0)
 . D SETLINE^RCDPEDAR(RCNITE,Z,.RCCT)
"RTN","RCDPEDA1",36,0)
 . S Z=$$SETSTR^VALM1($J("",14)_"PAYMENT FROM","",1,30)
"RTN","RCDPEDA1",37,0)
 . S Z=$$SETSTR^VALM1("DEP RECEIPT #",Z,46,15)
"RTN","RCDPEDA1",38,0)
 . S Z=$$SETSTR^VALM1("DEP RECEIPT STATUS",Z,61,19)
"RTN","RCDPEDA1",39,0)
 . D SETLINE^RCDPEDAR(RCNITE,Z,.RCCT)
"RTN","RCDPEDA1",40,0)
 D SETLINE^RCDPEDAR(RCNITE,$TR($J("",IOM-1)," ","="),.RCCT)
"RTN","RCDPEDA1",41,0)
 Q
"RTN","RCDPEDA1",42,0)
 ;
"RTN","RCDPEDA1",43,0)
ASK(RCSTOP) ; Ask to continue
"RTN","RCDPEDA1",44,0)
 ; If passed by reference ,RCSTOP is returned as 1 if print is aborted
"RTN","RCDPEDA1",45,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEDA1",46,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEDA1",47,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEDA1",48,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEDA1",49,0)
 Q
"RTN","RCDPEDA1",50,0)
 ;
"RTN","RCDPEDA1",51,0)
EFTDET(Z2,Z3,RCCT,RCPG,RCSTOP,RCDT1,RCDT2,RCDET,RCFMS1,RCNITE) ; Display EFT Detail
"RTN","RCDPEDA1",52,0)
 N X
"RTN","RCDPEDA1",53,0)
 S X=$$SETSTR^VALM1(Z2,"",4,6)
"RTN","RCDPEDA1",54,0)
 S X=$$SETSTR^VALM1($P(Z3,U,4),X,11,20)
"RTN","RCDPEDA1",55,0)
 S X=$$SETSTR^VALM1($$FMTE^XLFDT($P(Z3,U,12)\1,2),X,32,8)
"RTN","RCDPEDA1",56,0)
 S X=$$SETSTR^VALM1($J($P(Z3,U,7),"",2),X,42,18)
"RTN","RCDPEDA1",57,0)
 S X=$$SETSTR^VALM1($$EXTERNAL^DILFD(344.31,.08,"",+$P(Z3,U,8))_$S($P(Z3,U,8)=1:"/ERA #"_$P(Z3,U,10),1:""),X,61,20)
"RTN","RCDPEDA1",58,0)
 I '$G(RCNITE),($Y+5)>IOSL D HDR(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDA1",59,0)
 D SETLINE^RCDPEDAR(RCNITE,X,.RCCT)
"RTN","RCDPEDA1",60,0)
 S X=$$SETSTR^VALM1($E($P(Z3,U,2),1,20)_"/"_$P(Z3,U,3),"",15,35)
"RTN","RCDPEDA1",61,0)
 I $P(Z3,U,9) S X=$$SETSTR^VALM1($P($G(^RCY(344,+$P(Z3,U,9),0)),U),X,46,10)
"RTN","RCDPEDA1",62,0)
 S X=$$SETSTR^VALM1($G(RCFMS1(Z2)),X,61,19)
"RTN","RCDPEDA1",63,0)
 I '$G(RCNITE),($Y+5)>IOSL D HDR(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDA1",64,0)
 D SETLINE^RCDPEDAR(RCNITE,X,.RCCT)
"RTN","RCDPEDA1",65,0)
 I $O(^RCY(344.31,Z2,2,0)) D  Q:RCSTOP
"RTN","RCDPEDA1",66,0)
 . N V
"RTN","RCDPEDA1",67,0)
 . I '$G(RCNITE),($Y+5)>IOSL D HDR(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDA1",68,0)
 . D SETLINE^RCDPEDAR(RCNITE,$J("",10)_"ERROR MESSAGES FOR EFT DETAIL:",.RCCT)
"RTN","RCDPEDA1",69,0)
 . S V=0 F  S V=$O(^RCY(344.31,Z2,2,V)) Q:'V  D  Q:RCSTOP
"RTN","RCDPEDA1",70,0)
 .. I '$G(RCNITE),($Y+5)>IOSL D HDR(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDA1",71,0)
 .. D SETLINE^RCDPEDAR(RCNITE,$J("",12)_$G(^RCY(344.31,Z2,2,V,0)),.RCCT)
"RTN","RCDPEDA1",72,0)
 Q
"RTN","RCDPEDA1",73,0)
 ;
"RTN","RCDPEDAR")
0^78^B75522675
"RTN","RCDPEDAR",1,0)
RCDPEDAR ;ALB/TMK - ACTIVITY REPORT ;04-NOV-02
"RTN","RCDPEDAR",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEDAR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEDAR",4,0)
 Q
"RTN","RCDPEDAR",5,0)
 ;
"RTN","RCDPEDAR",6,0)
RPT ; Daily Activity Rpt On Demand
"RTN","RCDPEDAR",7,0)
 N DUOUT,DTOUT,DIR,X,Y,RCDT1,RCDT2,RCDET,ZTRTN,ZTSK,ZTDESC,%ZIS,POP
"RTN","RCDPEDAR",8,0)
 S DIR("A")="(S)UMMARY OR (D)ETAIL?: ",DIR(0)="SA^S:SUMMARY TOTALS ONLY;D:DETAIL AND TOTALS"
"RTN","RCDPEDAR",9,0)
 S DIR("B")="D" D ^DIR K DIR
"RTN","RCDPEDAR",10,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G RPTQ
"RTN","RCDPEDAR",11,0)
 S RCDET=(Y="D")
"RTN","RCDPEDAR",12,0)
 S DIR("?")="ENTER THE EARLIEST DATE OF RECEIPT OF DEPOSIT TO INCLUDE ON THE REPORT"
"RTN","RCDPEDAR",13,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="START DATE: " D ^DIR K DIR
"RTN","RCDPEDAR",14,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G RPTQ
"RTN","RCDPEDAR",15,0)
 S RCDT1=Y
"RTN","RCDPEDAR",16,0)
 S DIR("?")="ENTER THE LATEST DATE OF RECEIPT OF DEPOSIT TO INCLUDE ON THE REPORT"
"RTN","RCDPEDAR",17,0)
 S DIR("B")=Y(0)
"RTN","RCDPEDAR",18,0)
 S DIR(0)="DAO^"_RCDT1_":"_DT_":APE",DIR("A")="END DATE: " D ^DIR K DIR
"RTN","RCDPEDAR",19,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G RPTQ
"RTN","RCDPEDAR",20,0)
 S RCDT2=Y
"RTN","RCDPEDAR",21,0)
 ; Ask device
"RTN","RCDPEDAR",22,0)
 S %ZIS="QM" D ^%ZIS G:POP RPTQ
"RTN","RCDPEDAR",23,0)
 I $D(IO("Q")) D  G RPTQ
"RTN","RCDPEDAR",24,0)
 . S ZTRTN="EN^RCDPEDAR("_RCDET_","_RCDT1_","_RCDT2_")",ZTDESC="AR - EDI LOCKBOX DAILY ACTIVITY REPORT"
"RTN","RCDPEDAR",25,0)
 . D ^%ZTLOAD
"RTN","RCDPEDAR",26,0)
 . W !!,$S($D(ZTSK):"Your task number "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEDAR",27,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEDAR",28,0)
 U IO
"RTN","RCDPEDAR",29,0)
 D EN(RCDET,RCDT1,RCDT2)
"RTN","RCDPEDAR",30,0)
RPTQ Q
"RTN","RCDPEDAR",31,0)
 ;
"RTN","RCDPEDAR",32,0)
EN(RCDET,RCDT1,RCDT2) ; Entry point for queued job
"RTN","RCDPEDAR",33,0)
 ; RCDET = 1 to include detail, 0 for totals only
"RTN","RCDPEDAR",34,0)
 ; RCDT1,RCDT2 = date from,to
"RTN","RCDPEDAR",35,0)
 N Z,Z0,RC,RCT,DATA,RCSTOP,RCPG
"RTN","RCDPEDAR",36,0)
 K ^TMP("RCDAILYACT",$J)
"RTN","RCDPEDAR",37,0)
 S Z=RCDT1-.0001,(RCSTOP,RCT)=0
"RTN","RCDPEDAR",38,0)
 F  S Z=$O(^RCY(344.3,"ARECDT",Z)) Q:'Z!(Z>(RCDT2_".9999"))!RCSTOP  S Z0=0 F  S Z0=$O(^RCY(344.3,"ARECDT",Z,Z0)) Q:'Z0  S DATA=$G(^RCY(344.3,Z0,0)) D  Q:RCSTOP
"RTN","RCDPEDAR",39,0)
 . S RCT=RCT+1 I '(RCT#100),$D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ Q  ; Check for user stopped every 100 records
"RTN","RCDPEDAR",40,0)
 . S ^TMP("RCDAILYACT",$J,Z\1,Z0)=DATA
"RTN","RCDPEDAR",41,0)
 D:'RCSTOP RPT1(0,RCDET,RCDT1,RCDT2,.RCSTOP,.RCPG)
"RTN","RCDPEDAR",42,0)
 D ENQ(RCSTOP,$G(RCPG))
"RTN","RCDPEDAR",43,0)
 Q
"RTN","RCDPEDAR",44,0)
 ;
"RTN","RCDPEDAR",45,0)
RPT1(RCNITE,RCDET,RCDT1,RCDT2,RCSTOP,RCPG) ; Entrypoint for nightly job
"RTN","RCDPEDAR",46,0)
 ; RCNITE = 1 if called from nightly job, 0 if called from on demand
"RTN","RCDPEDAR",47,0)
 ; RCDET = 1 to include detail, 0 for totals only
"RTN","RCDPEDAR",48,0)
 ; RCDT1,RCDT2 = date from,to
"RTN","RCDPEDAR",49,0)
 ; RCSTOP = returned = 1 if user elected to quit job
"RTN","RCDPEDAR",50,0)
 ; RCPG = the last page # printed, returned if passed by reference
"RTN","RCDPEDAR",51,0)
 ;
"RTN","RCDPEDAR",52,0)
 N X,Q,Q0,Z,Z0,Z1,Z2,Z3,ZCT,RCCT,RCDEP,RCDEPA,RCDEPAP,RCFMS,RCFMS1,RCD1,RCFMSTOT,RCEFT,RCMATCH,RCDEPREC,RCDT
"RTN","RCDPEDAR",53,0)
 S (RCSTOP,RCPG,ZCT,RCCT,RCDEP,RCDEPA,RCDEPAP,RCDEPREC,Z)=0,RCD1=1
"RTN","RCDPEDAR",54,0)
 S RCNITE=+$G(RCNITE)
"RTN","RCDPEDAR",55,0)
 F  S Z=$O(^TMP("RCDAILYACT",$J,Z)) Q:'Z  D  G:RCSTOP RPT1Q ; Z = date
"RTN","RCDPEDAR",56,0)
 . I 'RCPG!$S('$G(RCNITE):($Y+5)>IOSL,1:0) D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) S RCDT=1 Q:RCSTOP
"RTN","RCDPEDAR",57,0)
 . S Q="DATE EFT DEPOSIT RECEIVED: "_$$FMTE^XLFDT(Z,2),Q=$J("",80-$L(Q)\2)_Q ; Center it
"RTN","RCDPEDAR",58,0)
 . I 'RCD1,$G(RCDET) D SETLINE(RCNITE,"",.RCCT) ; Skip line if >1 dt on pg
"RTN","RCDPEDAR",59,0)
 . S RCDT=0
"RTN","RCDPEDAR",60,0)
 . I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDAR",61,0)
 . I $G(RCDET) D
"RTN","RCDPEDAR",62,0)
 .. D SETLINE(RCNITE,Q,.RCCT)
"RTN","RCDPEDAR",63,0)
 .. D SETLINE(RCNITE,"",.RCCT)
"RTN","RCDPEDAR",64,0)
 . ; Z0 = ien of entry in file 344.3
"RTN","RCDPEDAR",65,0)
 . K RCEFT("D"),RCMATCH("D"),RCFMS("D")
"RTN","RCDPEDAR",66,0)
 . S Z0=0 F  S Z0=$O(^TMP("RCDAILYACT",$J,Z,Z0)) Q:'Z0  D  Q:RCSTOP
"RTN","RCDPEDAR",67,0)
 .. S Z1=$G(^TMP("RCDAILYACT",$J,Z,Z0))
"RTN","RCDPEDAR",68,0)
 .. S RCDEPREC=+$O(^RCY(344,"AD",+$P(Z1,U,3),0)),RCDEP(Z)=$G(RCDEP(Z))+1,RCDEPA(Z)=$G(RCDEPA(Z))+$P(Z1,U,8)
"RTN","RCDPEDAR",69,0)
 .. I $P($G(^RCY(344,RCDEPREC,2)),U)="" S RCFMS("D",-1)=$G(RCFMS("D",-1))+$P(Z1,U,8),RCFMS="NO FMS DOC"
"RTN","RCDPEDAR",70,0)
 .. I $P($G(^RCY(344,RCDEPREC,2)),U)'="" D
"RTN","RCDPEDAR",71,0)
 ... S X=$$STATUS^GECSSGET($P(^RCY(344,RCDEPREC,2),U))
"RTN","RCDPEDAR",72,0)
 ... I X=-1 S RCFMS("D",-1)=$G(RCFMS("D",-1))+$P(Z1,U,8) Q
"RTN","RCDPEDAR",73,0)
 ... S RCFMS=$E($P(X," "),1,10),Q=$E(X),Q=$S(Q="E"!(Q="R"):0,Q="Q":2,1:1),RCFMS("D",Q)=$G(RCFMS("D",Q))+$P(Z1,U,8)
"RTN","RCDPEDAR",74,0)
 ... ;
"RTN","RCDPEDAR",75,0)
 .. I $G(RCDET) D  Q:RCSTOP
"RTN","RCDPEDAR",76,0)
 ... S X=$$SETSTR^VALM1($P(Z1,U,6),"",1,6)
"RTN","RCDPEDAR",77,0)
 ... S X=$$SETSTR^VALM1($$FMTE^XLFDT($P(Z1,U,7)\1,2),X,9,10)
"RTN","RCDPEDAR",78,0)
 ... S X=$$SETSTR^VALM1("",X,21,10)
"RTN","RCDPEDAR",79,0)
 ... S X=$$SETSTR^VALM1("",X,32,10)
"RTN","RCDPEDAR",80,0)
 ... S X=$$SETSTR^VALM1($E($J($P(Z1,U,8),"",2)_$J("",20),1,20)_RCFMS,X,43,37)
"RTN","RCDPEDAR",81,0)
 ... I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDAR",82,0)
 ... D SETLINE(RCNITE,X,.RCCT)
"RTN","RCDPEDAR",83,0)
 .. S RCFMSTOT=0,RCFMS1="NO FMS DOC"
"RTN","RCDPEDAR",84,0)
 .. I $O(^RCY(344.3,Z0,2,0)) D  Q:RCSTOP
"RTN","RCDPEDAR",85,0)
 ... N V
"RTN","RCDPEDAR",86,0)
 ... I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDAR",87,0)
 ... D SETLINE(RCNITE,$J("",10)_"ERROR MESSAGES FOR EFT:",.RCCT)
"RTN","RCDPEDAR",88,0)
 ... S V=0 F  S V=$O(^RCY(344.3,Z0,2,V)) Q:'V  D  Q:RCSTOP
"RTN","RCDPEDAR",89,0)
 .... I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDAR",90,0)
 .... D SETLINE(RCNITE,$J("",12)_$G(^RCY(344.3,Z0,2,V,0)),.RCCT)
"RTN","RCDPEDAR",91,0)
 .. S Z2=0 F  S Z2=$O(^RCY(344.31,"B",Z0,Z2)) Q:'Z2  S Z3=$G(^RCY(344.31,Z2,0)) D  Q:RCSTOP
"RTN","RCDPEDAR",92,0)
 ... S RCEFT("D")=$G(RCEFT("D"))+1
"RTN","RCDPEDAR",93,0)
 ... S X=$S($P($G(^RCY(344,+$P(Z3,U,9),2)),U)'="":$$STATUS^GECSSGET($P(^RCY(344,+$P(Z3,U,9),2),U)),1:"")
"RTN","RCDPEDAR",94,0)
 ... I X'="",X'=-1,$E(X)'="R",$E(X)'="E" S RCFMSTOT=RCFMSTOT+$P(Z3,U,7),RCFMS1=$S($E(X)="Q":"QUEUED TO POST",1:"POSTED")
"RTN","RCDPEDAR",95,0)
 ... S RCFMS1(Z2)=$S(X="":"",X=-1:"NO FMS DOC",1:$E($P(X," "),1,10))
"RTN","RCDPEDAR",96,0)
 ... I $P(Z3,U,8) S RCMATCH("D")=$G(RCMATCH("D"))+1
"RTN","RCDPEDAR",97,0)
 ... ;
"RTN","RCDPEDAR",98,0)
 ... I $G(RCDET) D EFTDET^RCDPEDA1(Z2,Z3,.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,.RCFMS1,RCNITE) Q:RCSTOP
"RTN","RCDPEDAR",99,0)
 .. ;
"RTN","RCDPEDAR",100,0)
 .. Q:RCSTOP
"RTN","RCDPEDAR",101,0)
 .. I RCDET D SETLINE(RCNITE,"",.RCCT)
"RTN","RCDPEDAR",102,0)
 . ;
"RTN","RCDPEDAR",103,0)
 . Q:RCSTOP
"RTN","RCDPEDAR",104,0)
 . S RCDEPA=RCDEPA+$G(RCDEPA(Z)),RCDEP=RCDEP+$G(RCDEP(Z)),RCDEPAP=RCDEPAP+$G(RCDEPAP(Z)),RCFMSTOT("D")=$G(RCFMSTOT("D"))+$G(RCFMSTOT),RCEFT("T")=$G(RCEFT("T"))+$G(RCEFT("D")),RCMATCH("T")=$G(RCMATCH("T"))+$G(RCMATCH("D"))
"RTN","RCDPEDAR",105,0)
 . F Q=-1,0,1,2 S RCFMS("T",Q)=$G(RCFMS("T",Q))+$G(RCFMS("D",Q))
"RTN","RCDPEDAR",106,0)
 . D SETLINE(RCNITE,"",.RCCT)
"RTN","RCDPEDAR",107,0)
 . I $S('$G(RCNITE):($Y+5)>IOSL,1:0)!'RCPG D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDAR",108,0)
 . D SETLINE(RCNITE,$E("**TOTALS FOR DATE: "_$$FMTE^XLFDT(Z\1,2)_$J("",30),1,30)_"   # OF DEPOSIT TICKETS RECEIVED: "_+$G(RCDEP(Z))_$J("",5),.RCCT)
"RTN","RCDPEDAR",109,0)
 . D SETLINE(RCNITE,$J("",29)_"TOTAL AMOUNT OF DEPOSITS RECEIVED: $"_$J(+$G(RCDEPA(Z)),"",2),.RCCT)
"RTN","RCDPEDAR",110,0)
 . I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDAR",111,0)
 . D SETLINE(RCNITE,"",.RCCT)
"RTN","RCDPEDAR",112,0)
 . D SETLINE(RCNITE,$J("",20)_"DEPOSIT AMOUNTS SENT TO FMS:",.RCCT)
"RTN","RCDPEDAR",113,0)
 . I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDAR",114,0)
 . D SETLINE(RCNITE,$J("",39)_"ACCEPTED: $"_$J(+$G(RCFMS("D",1)),"",2),.RCCT)
"RTN","RCDPEDAR",115,0)
 . I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDAR",116,0)
 . D SETLINE(RCNITE,$J("",41)_"QUEUED: $"_$J(+$G(RCFMS("D",2)),"",2),.RCCT)
"RTN","RCDPEDAR",117,0)
 . I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDAR",118,0)
 . D SETLINE(RCNITE,$J("",35)_"ERROR/REJECT: $"_$J(+$G(RCFMS("D",0)),"",2),.RCCT)
"RTN","RCDPEDAR",119,0)
 . I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDAR",120,0)
 . D SETLINE(RCNITE,$J("",37)_"NOT IN FMS: $"_$J(+$G(RCFMS("D",-1)),"",2),.RCCT)
"RTN","RCDPEDAR",121,0)
 . D SETLINE(RCNITE,"",.RCCT)
"RTN","RCDPEDAR",122,0)
 . I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDAR",123,0)
 . D SETLINE(RCNITE,$J("",26)_"# EFT PAYMENT RECORDS: "_+$G(RCEFT("D")),.RCCT)
"RTN","RCDPEDAR",124,0)
 . I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDAR",125,0)
 . D SETLINE(RCNITE,$J("",25)_"# EFT PAYMENTS MATCHED: "_+$G(RCMATCH("D")),.RCCT)
"RTN","RCDPEDAR",126,0)
 . I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) Q:RCSTOP
"RTN","RCDPEDAR",127,0)
 . D SETLINE(RCNITE,$J("",18)_"MATCHED PAYMENT AMOUNT POSTED: $"_$J(+$G(RCDEPAP(Z)),"",2),.RCCT)
"RTN","RCDPEDAR",128,0)
 . D SETLINE(RCNITE,"",.RCCT)
"RTN","RCDPEDAR",129,0)
 I '$O(^TMP("RCDAILYACT",$J,0)) D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE)
"RTN","RCDPEDAR",130,0)
 G:RCSTOP!RCNITE RPT1Q
"RTN","RCDPEDAR",131,0)
 D SETLINE(RCNITE,"",.RCCT)
"RTN","RCDPEDAR",132,0)
 I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",133,0)
 D SETLINE(RCNITE,$E("**** TOTALS FOR DATE RANGE:"_$J("",30),1,30)_"   # OF DEPOSIT TICKETS RECEIVED: "_+$G(RCDEP)_$J("",5),.RCCT)
"RTN","RCDPEDAR",134,0)
 D SETLINE(RCNITE,$J("",29)_"TOTAL AMOUNT OF DEPOSITS RECEIVED: $"_$J(+$G(RCDEPA),"",2),.RCCT)
"RTN","RCDPEDAR",135,0)
 I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",136,0)
 D SETLINE(RCNITE,"",.RCCT)
"RTN","RCDPEDAR",137,0)
 D SETLINE(RCNITE,$J("",20)_"DEPOSIT AMOUNTS SENT TO FMS:",.RCCT)
"RTN","RCDPEDAR",138,0)
 I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",139,0)
 D SETLINE(RCNITE,$J("",39)_"ACCEPTED: $"_+$G(RCFMS("T",1)),.RCCT)
"RTN","RCDPEDAR",140,0)
 I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",141,0)
 D SETLINE(RCNITE,$J("",41)_"QUEUED: $"_+$G(RCFMS("T",2)),.RCCT)
"RTN","RCDPEDAR",142,0)
 I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",143,0)
 D SETLINE(RCNITE,$J("",35)_"ERROR/REJECT: $"_+$G(RCFMS("T",0)),.RCCT)
"RTN","RCDPEDAR",144,0)
 I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",145,0)
 D SETLINE(RCNITE,$J("",37)_"NOT IN FMS: $"_$J(+$G(RCFMS("T",-1)),"",2),.RCCT)
"RTN","RCDPEDAR",146,0)
 D SETLINE(RCNITE,"",.RCCT)
"RTN","RCDPEDAR",147,0)
 I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",148,0)
 D SETLINE(RCNITE,$J("",26)_"# EFT PAYMENT RECORDS: "_+$G(RCEFT("T")),.RCCT)
"RTN","RCDPEDAR",149,0)
 I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",150,0)
 D SETLINE(RCNITE,$J("",25)_"# EFT PAYMENTS MATCHED: "_+$G(RCMATCH("T")),.RCCT)
"RTN","RCDPEDAR",151,0)
 I '$G(RCNITE),($Y+5)>IOSL D HDR^RCDPEDA1(.RCCT,.RCPG,.RCSTOP,RCDT1,RCDT2,RCDET,RCNITE) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",152,0)
 D SETLINE(RCNITE,$J("",18)_"MATCHED PAYMENT AMOUNT POSTED: $"_$J(+$G(RCDEPAP),"",2),.RCCT)
"RTN","RCDPEDAR",153,0)
 D SETLINE(RCNITE,"",.RCCT)
"RTN","RCDPEDAR",154,0)
 ;
"RTN","RCDPEDAR",155,0)
RPT1Q K ^TMP("RCDAILYACT",$J)
"RTN","RCDPEDAR",156,0)
 Q
"RTN","RCDPEDAR",157,0)
 ;
"RTN","RCDPEDAR",158,0)
ENQ(RCSTOP,RCPG) ; Clean up
"RTN","RCDPEDAR",159,0)
 I '$D(ZTQUEUED) D ^%ZISC I 'RCSTOP,RCPG D ASK^RCDPEDA1()
"RTN","RCDPEDAR",160,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEDAR",161,0)
 Q
"RTN","RCDPEDAR",162,0)
 ;
"RTN","RCDPEDAR",163,0)
SETLINE(RCNITE,Z,RCCT) ; Writes line
"RTN","RCDPEDAR",164,0)
 ; RCNITE = 1 to set array,  0 to write line
"RTN","RCDPEDAR",165,0)
 ; Z = txt to output
"RTN","RCDPEDAR",166,0)
 ; RCCT = line counter
"RTN","RCDPEDAR",167,0)
 S RCCT=RCCT+1
"RTN","RCDPEDAR",168,0)
 I $G(RCNITE) S ^TMP($J,"RCDPE_DAR",RCCT)=Z Q
"RTN","RCDPEDAR",169,0)
 W !,Z
"RTN","RCDPEDAR",170,0)
 Q
"RTN","RCDPEDAR",171,0)
 ;
"RTN","RCDPEDS")
0^79^B35759608
"RTN","RCDPEDS",1,0)
RCDPEDS ;ALB/TMK - Display EEOB detail from receipt ;15 Oct 02
"RTN","RCDPEDS",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEDS",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEDS",4,0)
 ; IA for call to GETEOB^IBCECSA6 = 4044
"RTN","RCDPEDS",5,0)
 ;
"RTN","RCDPEDS",6,0)
DISP(RCTDA) ; Display EEOB detail/raw data from file 344.4
"RTN","RCDPEDS",7,0)
 ; RCTDA = ien of entry in file 344.4 to display
"RTN","RCDPEDS",8,0)
 ; Returns global ^TMP("$J,"RCDISP")
"RTN","RCDPEDS",9,0)
 ;
"RTN","RCDPEDS",10,0)
 N RCZ,RCZ0,RCCT
"RTN","RCDPEDS",11,0)
 K ^TMP($J,"RCDISP")
"RTN","RCDPEDS",12,0)
 S RCCT=0
"RTN","RCDPEDS",13,0)
 ; 
"RTN","RCDPEDS",14,0)
 D SUM(RCTDA,.RCCT)
"RTN","RCDPEDS",15,0)
 ;
"RTN","RCDPEDS",16,0)
 S RCZ=0 F  S RCZ=$O(^RCY(344.4,RCTDA,1,RCZ)) Q:'RCZ  S RCZ0=$G(^(RCZ,0)) I RCZ0'="" D SEQ(RCTDA,.RCCT,RCZ,RCZ0)
"RTN","RCDPEDS",17,0)
 ;
"RTN","RCDPEDS",18,0)
 Q
"RTN","RCDPEDS",19,0)
 ;
"RTN","RCDPEDS",20,0)
SEQ(RCTDA,RCCT,RC34441,RC0) ;
"RTN","RCDPEDS",21,0)
 ; RCTDA = ien of record in file 344.4
"RTN","RCDPEDS",22,0)
 ; RCCT = line counter, updated if passed by ref
"RTN","RCDPEDS",23,0)
 ; RC34441 = ien of seq # in file 344.41
"RTN","RCDPEDS",24,0)
 ; RC0 = the data on the 0-node of the sequence entry in file 344.41
"RTN","RCDPEDS",25,0)
 ;
"RTN","RCDPEDS",26,0)
 N RCIEN,RCZ,RCDPDATA
"RTN","RCDPEDS",27,0)
 I $P(RC0,U,2) D  ; Get detail from EOB file
"RTN","RCDPEDS",28,0)
 . K ^TMP("PRCA_EOB",$J)
"RTN","RCDPEDS",29,0)
 . S RCIEN=+$P(RC0,U,2)
"RTN","RCDPEDS",30,0)
 . D GETEOB^IBCECSA6(RCIEN,1) ; IA 4044
"RTN","RCDPEDS",31,0)
 . I $O(^IBM(361.1,RCIEN,"ERR",0)) D  ; Add error msgs
"RTN","RCDPEDS",32,0)
 .. D GETERR(RCIEN,+$O(^TMP("PRCA_EOB",$J,RCIEN," "),-1))
"RTN","RCDPEDS",33,0)
 . D SEQHDR(RCTDA,RC34441,.RCCT)
"RTN","RCDPEDS",34,0)
 . S RCZ=0
"RTN","RCDPEDS",35,0)
 . F  S RCZ=$O(^TMP("PRCA_EOB",$J,RCIEN,RCZ)) Q:'RCZ  S RCCT=RCCT+1 S ^TMP($J,"RCDISP",RCCT)=$G(^TMP("PRCA_EOB",$J,RCIEN,RCZ))
"RTN","RCDPEDS",36,0)
 ;
"RTN","RCDPEDS",37,0)
 I '$P(RC0,U,2),$O(^RCY(344.4,RCTDA,1,RC34441,1,0)) D  ; Get detail from raw data in file 344.411
"RTN","RCDPEDS",38,0)
 . K ^TMP($J,"RCOUT"),^TMP($J,"RCRAW")
"RTN","RCDPEDS",39,0)
 . D SEQHDR(RCTDA,RC34441,.RCCT)
"RTN","RCDPEDS",40,0)
 . D DISP^RCDPESR0("^RCY(344.4,"_RCTDA_",1,"_RC34441_",1)","^TMP($J,""RCRAW"")",1,"^TMP($J,""RCOUT"")",75,1)
"RTN","RCDPEDS",41,0)
 . K ^TMP($J,"RCRAW")
"RTN","RCDPEDS",42,0)
 . S RCZ=0
"RTN","RCDPEDS",43,0)
 . F  S RCZ=$O(^TMP($J,"RCOUT",RCZ)) Q:'RCZ  S RCCT=RCCT+1,^TMP($J,"RCDISP",RCCT)=$G(^TMP($J,"RCOUT",RCZ))
"RTN","RCDPEDS",44,0)
 K ^TMP($J,"RCOUT"),^TMP("PRCA_EOB",$J)
"RTN","RCDPEDS",45,0)
 Q
"RTN","RCDPEDS",46,0)
 ;
"RTN","RCDPEDS",47,0)
SEQHDR(RCTDA,RC34441,RCCT) ; Extract header data from sequence record
"RTN","RCDPEDS",48,0)
 ; RCTDA = ien of record in file 344.4
"RTN","RCDPEDS",49,0)
 ; RC34441 = ien of seq # in file 344.41
"RTN","RCDPEDS",50,0)
 ; RCCT = line counter, updated if passed by ref
"RTN","RCDPEDS",51,0)
 ; Returns line # incremented and ^TMP($J,"RCDISP" array
"RTN","RCDPEDS",52,0)
 ;
"RTN","RCDPEDS",53,0)
 N RCDPDATA,RCINV
"RTN","RCDPEDS",54,0)
 S RCCT=RCCT+1,^TMP($J,"RCDISP",RCCT)=" "
"RTN","RCDPEDS",55,0)
 D DIQ34441(RCTDA,RC34441,".01:.15")
"RTN","RCDPEDS",56,0)
 S RCCT=RCCT+1
"RTN","RCDPEDS",57,0)
 S RCINV=($G(RCDPDATA(344.41,RC34441,.02,"E"))="")
"RTN","RCDPEDS",58,0)
 S ^TMP($J,"RCDISP",RCCT)=$E("Sequence #: "_$G(RCDPDATA(344.41,RC34441,.01,"E"))_$S(RCINV:" (Not Stored in IB)",1:"")_$J("",32),1,32)
"RTN","RCDPEDS",59,0)
 S ^TMP($J,"RCDISP",RCCT)=^TMP($J,"RCDISP",RCCT)_"Bill Number: "_$S('RCINV:RCDPDATA(344.41,RC34441,.02,"E"),1:$G(RCDPDATA(344.41,RC34441,.05,"E"))_" (Not in AR)")
"RTN","RCDPEDS",60,0)
 I $G(RCDPDATA(344.41,RC34441,.14,"E"))="YES" S RCCT=RCCT+1,^TMP($J,"RCDISP",RCCT)="  *** REVERSAL ***"
"RTN","RCDPEDS",61,0)
 S RCCT=RCCT+1,^TMP($J,"RCDISP",RCCT)=$E("Amount "_$S($G(RCDPDATA(344.41,RC34441,.14,"E"))="YES":"Reversed",1:"Paid")_": "_$G(RCDPDATA(344.41,RC34441,.03,"E"))_$J("",32),1,32)_"Ins Co: "_$E($G(RCDPDATA(344.41,RC34441,.04,"E")),1,30)
"RTN","RCDPEDS",62,0)
 I $G(RCDPDATA(344.41,RC34441,.07,"E"))'="" S RCCT=RCCT+1,^TMP($J,"RCDISP",RCCT)="Error: "_RCDPDATA(344.41,RC34441,.07,"E")_$S($G(RCDPDATA(344.41,RC34441,.08,"E"))'="":" - "_$G(RCDPDATA(344.41,RC34441,.08,"E")),1:"")
"RTN","RCDPEDS",63,0)
 S RCCT=RCCT+1,^TMP($J,"RCDISP",RCCT)="Worklist Status: "_$G(RCDPDATA(344.41,RC34441,.06,"E"))
"RTN","RCDPEDS",64,0)
 Q
"RTN","RCDPEDS",65,0)
 ;
"RTN","RCDPEDS",66,0)
GETERR(RCIEN,Z) ; Extract error messages from entry RCIEN in file 361.1
"RTN","RCDPEDS",67,0)
 ; Z = the last line # in the ^TMP("PRCA_EOB",$J,RCIEN,n array
"RTN","RCDPEDS",68,0)
 ; Function returns error lines from file #361.1 in the
"RTN","RCDPEDS",69,0)
 ;   ^TMP("PRCA_EOB",$J,RCIEN,n array in subscripts at the end of the
"RTN","RCDPEDS",70,0)
 ;    array
"RTN","RCDPEDS",71,0)
 N Z0,DATA,RCRAW,RCFORM,RCLINE,X
"RTN","RCDPEDS",72,0)
 S Z=Z+1,^TMP("PRCA_EOB",$J,RCIEN,Z)="EEOB FILING ERRORS:"
"RTN","RCDPEDS",73,0)
 S Z0=0 F  S Z0=$O(^IBM(361.1,RCIEN,"ERR",Z0)) Q:'Z0  S X=$G(^(Z0,0)) D
"RTN","RCDPEDS",74,0)
 . I +X S RCLINE=+X_"^RCDPESR9" I $T(@RCLINE)'="" D  Q
"RTN","RCDPEDS",75,0)
 .. S RCRAW(1,0)=X
"RTN","RCDPEDS",76,0)
 .. D DISP^RCDPESR0("RCRAW","RCFORM",1,"RCDATA",80,0)
"RTN","RCDPEDS",77,0)
 .. S X=0 F  S X=$O(RCFORM(X)) Q:'X  S Z=Z+1,^TMP("PRCA_EOB",$J,RCIEN,Z)="  "_RCFORM(X)
"RTN","RCDPEDS",78,0)
 . S Z=Z+1,^TMP("PRCA_EOB",$J,RCIEN,Z)="  "_$G(^IBM(361.1,RCIEN,"ERR",Z0,0))
"RTN","RCDPEDS",79,0)
 Q
"RTN","RCDPEDS",80,0)
 ;
"RTN","RCDPEDS",81,0)
SUM(RCTDA,RCCT) ; Extract pertinent top-level data
"RTN","RCDPEDS",82,0)
 ; RCTDA = ien of record in file 344.4
"RTN","RCDPEDS",83,0)
 ; RCCT = line counter, updated if passed by ref
"RTN","RCDPEDS",84,0)
 ;
"RTN","RCDPEDS",85,0)
 N Z,Z0,CT,CT1,RCDPDATA,RCADJ,RCREV
"RTN","RCDPEDS",86,0)
 D DIQ3444(RCTDA,".02:.11")
"RTN","RCDPEDS",87,0)
 S (Z,CT,RCADJ)=0 F  S Z=$O(^RCY(344.4,RCTDA,2,Z)) Q:'Z  S CT=CT+1,RCADJ=RCADJ+$J($P($G(^(Z,0)),U,3),0,2)
"RTN","RCDPEDS",88,0)
 S (Z,CT1,RCREV)=0 S Z=0 F  S Z0=$O(^RCY(344.4,RCTDA,1,"ATB",1,Z)) Q:'Z  S Z0=$G(^RCY(344.4,RCTDA,1,Z,0)),CT1=CT1+1,RCREV(Z)=$$BILLREF^RCDPESR0(RCTDA,Z)_U_$J($P(Z0,U,3),0,2),RCREV=RCREV+$P(RCREV(Z),U,2)
"RTN","RCDPEDS",89,0)
 S RCCT=RCCT+1,Z="There is data for "_+$G(RCDPDATA(344.4,RCTDA,.11,"E"))_" EEOBs"_$S(CT:", "_CT_" ERA adjustments",1:"")_$S(CT1:", "_CT1_" EEOB reversals",1:"")
"RTN","RCDPEDS",90,0)
 S ^TMP($J,"RCDISP",RCCT)=$J("",(80-$L(Z))\2)_Z
"RTN","RCDPEDS",91,0)
 S RCCT=RCCT+1,^TMP($J,"RCDISP",RCCT)="TOTAL AMT PAID: "_+$G(RCDPDATA(344.4,RCTDA,.05,"E"))
"RTN","RCDPEDS",92,0)
 I RCADJ D
"RTN","RCDPEDS",93,0)
 . S RCCT=RCCT+1,^TMP($J,"RCDISP",RCCT)="TOTAL AMT ERA ADJUSTED: "_RCADJ
"RTN","RCDPEDS",94,0)
 . D DISPADJ^RCDPESR8(RCTDA,"RCADJ")
"RTN","RCDPEDS",95,0)
 . S Z=0 F  S Z=$O(RCADJ(Z)) Q:'Z  S RCCT=RCCT+1,^TMP($J,"RCDISP",RCCT)="  "_RCADJ(Z)
"RTN","RCDPEDS",96,0)
 I RCREV D
"RTN","RCDPEDS",97,0)
 . S RCCT=RCCT+1,^TMP($J,"RCDISP",RCCT)="TOTAL AMT REVERSED: "_RCREV
"RTN","RCDPEDS",98,0)
 . S Z=0 F  S Z=$O(RCREV(Z)) Q:'Z  S RCCT=RCCT+1,^TMP($J,"RCDISP",RCCT)=$E("  BILL REFERENCE: "_$P(RCREV(Z),U)_$J("",30),1,30)_"  REVERSAL AMT: "_$P(RCREV,U,2)
"RTN","RCDPEDS",99,0)
 S RCCT=RCCT+1,^TMP($J,"RCDISP",RCCT)=$E("TRACE #: "_$G(RCDPDATA(344.4,RCTDA,.02,"E"))_$J("",35),1,35)_"RECEIPT #: "_$G(RCDPDATA(344.4,RCTDA,.08,"E"))
"RTN","RCDPEDS",100,0)
 S RCCT=RCCT+1,^TMP($J,"RCDISP",RCCT)=$E("INS CO ID: "_$G(RCDPDATA(344.4,RCTDA,.03,"E"))_$J("",35),1,35)_"NAME: "_$E($G(RCDPDATA(344.4,RCTDA,.06,"E")),1,29)
"RTN","RCDPEDS",101,0)
 S RCCT=RCCT+1,^TMP($J,"RCDISP",RCCT)=$E("ERA DATE: "_$G(RCDPDATA(344.4,RCTDA,.04,"E"))_$J("",35),1,35)_"DATE ERA RECEIVED: "_$G(RCDPDATA(344.4,RCTDA,.07,"E"))
"RTN","RCDPEDS",102,0)
 S RCCT=RCCT+1,^TMP($J,"RCDISP",RCCT)="EFT MATCH STATUS: "_$G(RCDPDATA(344.4,RCTDA,.09,"E"))
"RTN","RCDPEDS",103,0)
 Q
"RTN","RCDPEDS",104,0)
 ;
"RTN","RCDPEDS",105,0)
DIQ34441(RCTDA,RC0,DR,ARR) ; DIQ call to retrieve data for DR fields in
"RTN","RCDPEDS",106,0)
 ; file 344.41
"RTN","RCDPEDS",107,0)
 N %I,D0,D1,DA,DIC,DIQ,DIQ2,YY
"RTN","RCDPEDS",108,0)
 I $G(ARR)="" S ARR="RCDPDATA"
"RTN","RCDPEDS",109,0)
 K @ARR@(344.41,RC0)
"RTN","RCDPEDS",110,0)
 S DA=RC0,DA(1)=RCTDA,DIQ(0)="E",DIC="^RCY(344.4,"_DA(1)_",1,",DIQ=ARR D EN^DIQ1
"RTN","RCDPEDS",111,0)
 Q
"RTN","RCDPEDS",112,0)
 ;
"RTN","RCDPEDS",113,0)
DIQ3444(DA,DR,ARR) ; DIQ call to retrieve data for DR fields in file 344.41
"RTN","RCDPEDS",114,0)
 N %I,D0,DIC,DIQ,DIQ2,YY
"RTN","RCDPEDS",115,0)
 I $G(ARR)="" S ARR="RCDPDATA"
"RTN","RCDPEDS",116,0)
 K @ARR@(344.4,DA)
"RTN","RCDPEDS",117,0)
 S DIQ(0)="E",DIC="^RCY(344.4,",DIQ=ARR D EN^DIQ1
"RTN","RCDPEDS",118,0)
 Q
"RTN","RCDPEDS",119,0)
 ;
"RTN","RCDPEM")
0^80^B54610957
"RTN","RCDPEM",1,0)
RCDPEM ;ALB/TMK - POST EFT, ERA MATCHING TO EFT ;05-NOV-02
"RTN","RCDPEM",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEM",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEM",4,0)
 ; IA 4050 covers call to SPL1^IBCEOBAR
"RTN","RCDPEM",5,0)
 Q
"RTN","RCDPEM",6,0)
 ; Note - keep processing in line with RCDPXPAP 
"RTN","RCDPEM",7,0)
EN ; Post EFT deposits, auto-match EFT's and ERA's 
"RTN","RCDPEM",8,0)
 ;
"RTN","RCDPEM",9,0)
 K ^TMP($J,"RCDPETOT")
"RTN","RCDPEM",10,0)
 ; ^TMP($J,"RCDPETOT",344.3 or 344.31,file ien)=
"RTN","RCDPEM",11,0)
 ;  (1) match (0/1/-1)   (2) total $   (3) posted (0/1)  (4) error ref
"RTN","RCDPEM",12,0)
 ;  (5) EFT deposit ien 344.1 if added for EFT
"RTN","RCDPEM",13,0)
 ;
"RTN","RCDPEM",14,0)
 N RCZ,RCSUM,RCDEP,RECTDA,RC0,RCER,RCDUZ,Z,Z0,Z1,DA,X,Y,DIE,DR
"RTN","RCDPEM",15,0)
 M RCDUZ=DUZ
"RTN","RCDPEM",16,0)
 N DUZ S DUZ=+$O(^VA(200,"B","EDILOCKBOX,AUTOMATIC",0)),DUZ(0)="" S:'DUZ DUZ=.5
"RTN","RCDPEM",17,0)
 K ^TMP($J,"RCXM"),^TMP($J,"RCTOT")
"RTN","RCDPEM",18,0)
 S ZTREQ="@"
"RTN","RCDPEM",19,0)
 L +^RCY(344.3,"ALOCK"):5 I '$T D  G ENQ ; Lock record
"RTN","RCDPEM",20,0)
 . ; Send bulletin that job could not be run
"RTN","RCDPEM",21,0)
 . S ^TMP($J,"RCXM",1)="The nightly job to post EFT deposits and match EFTs to ERAs could not be run",^TMP($J,"RCXM",2)="Another match process was already running (lock on ^RCY(344.3,""ALOCK"") )"
"RTN","RCDPEM",22,0)
 . D SENDBULL^RCDPEM1
"RTN","RCDPEM",23,0)
 ;
"RTN","RCDPEM",24,0)
 ; Post deposits for any unposted EFTs in file 344.3
"RTN","RCDPEM",25,0)
 ; 'Unposted' EFTs have a 0 in AMOUNT POSTED field
"RTN","RCDPEM",26,0)
 S ^TMP($J,"RCTOT","EFT_DEP")=0
"RTN","RCDPEM",27,0)
 S RCZ=0 F  S RCZ=$O(^RCY(344.3,"APOST",0,RCZ)) Q:'RCZ  S RC0=$G(^RCY(344.3,RCZ,0))  I RC0'="",$E($P(RC0,U,6),1,3)="469",$P(RC0,U,8) D
"RTN","RCDPEM",28,0)
 . S ^TMP($J,"RCTOT","EFT_DEP")=^TMP($J,"RCTOT","EFT_DEP")+1
"RTN","RCDPEM",29,0)
 . ; Verify check sums
"RTN","RCDPEM",30,0)
 . S RCSUM=$$CHKSUM^RCDPESR3(RCZ)
"RTN","RCDPEM",31,0)
 . I RCSUM'=$P(RC0,U,9) D  Q
"RTN","RCDPEM",32,0)
 .. ; Bulletin that check sums do not match
"RTN","RCDPEM",33,0)
 .. ; Update record error list and checksum error field
"RTN","RCDPEM",34,0)
 .. S RCER(1)=$$SETERR^RCDPEM0(2)
"RTN","RCDPEM",35,0)
 .. S RCER(2)="  Checksum is invalid and the EFT deposit record is corrupted.",RCER(3)="  Stored Checksum = "_$P(RC0,U,9)_" Calculated Checksum: "_RCSUM,RCER(4)="  This EFT deposit cannot be sent to FMS.  You must ask for it to be"
"RTN","RCDPEM",36,0)
 .. S RCER(5)="   retransmitted to your site."
"RTN","RCDPEM",37,0)
 .. D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM",38,0)
 .. S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM",39,0)
 .. D STORERR^RCDPEM0(RCZ,.RCER)
"RTN","RCDPEM",40,0)
 .. S DIE="^RCY(344.3,",DA=RCZ,DR=".1////1" D ^DIE
"RTN","RCDPEM",41,0)
 .. S ^TMP($J,"RCTOT","CSUM")=$G(^TMP($J,"RCTOT","CSUM"))+1
"RTN","RCDPEM",42,0)
 . ;
"RTN","RCDPEM",43,0)
 . S RCDEP=+$P(RC0,U,3),RECTDA=+$O(^RCY(344,"AD",RCDEP,0))
"RTN","RCDPEM",44,0)
 . I RCDEP D LOCKDEP(RCDEP,1)
"RTN","RCDPEM",45,0)
 . I 'RCDEP!'RECTDA D  ;  Add deposit and/or receipt to files 344.1, 344
"RTN","RCDPEM",46,0)
 .. I 'RCDEP D  ; Add dep record RCDEP, update field .03 with the pointer
"RTN","RCDPEM",47,0)
 ... S RCDEP=+$$ADDDEP^RCDPEM0($P(RC0,U,6),$P(RC0,U,7),RCZ)
"RTN","RCDPEM",48,0)
 ... S ^TMP($J,"RCTOT","DEPOSIT")=$G(^TMP($J,"RCTOT","DEPOSIT"))+1
"RTN","RCDPEM",49,0)
 .. ;
"RTN","RCDPEM",50,0)
 .. I 'RECTDA,RCDEP D  ; Add receipt record, post to rev source cd 8NZZ
"RTN","RCDPEM",51,0)
 ... S RECTDA=+$$ADDREC^RCDPEM0(RCDEP,RCZ)
"RTN","RCDPEM",52,0)
 .. ;
"RTN","RCDPEM",53,0)
 . I RCDEP D LOCKDEP(RCDEP,0)
"RTN","RCDPEM",54,0)
 . ;
"RTN","RCDPEM",55,0)
 . I 'RCDEP!'RECTDA D  Q  ; Could not add entry to file 344.1 or 344 
"RTN","RCDPEM",56,0)
 .. ; Send a bulletin, update error text
"RTN","RCDPEM",57,0)
 .. S RCER(1)=$$SETERR^RCDPEM0(2),RCER(2)="  "_$S('RCDEP:"Neither a deposit nor a receipt were able",1:"A receipt was not able")_" to be added - no match attempted"
"RTN","RCDPEM",58,0)
 .. I RCDEP,'RECTDA S RCER(3)="  Deposit Ticket # created: "_$P($G(^RCY(344.1,+$P(RC0,U,3),0)),U)
"RTN","RCDPEM",59,0)
 .. S RCER($O(RCER(""),-1)+1)="This EFT deposit can't be sent to FMS.  You must ask Austin to retransmit"
"RTN","RCDPEM",60,0)
 .. D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM",61,0)
 .. S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM",62,0)
 .. D STORERR^RCDPEM0(RCZ,.RCER)
"RTN","RCDPEM",63,0)
 .. S ^TMP($J,"RCTOT","ERR")=$G(^TMP($J,"RCTOT","ERR"))+1
"RTN","RCDPEM",64,0)
 . ;
"RTN","RCDPEM",65,0)
 . S DIE="^RCY(344.31," S Z=0 F  S Z=$O(^RCY(344.31,"B",RCZ,Z)) Q:'Z  S DA=Z,DR=".11////1" D ^DIE
"RTN","RCDPEM",66,0)
 ;
"RTN","RCDPEM",67,0)
 D MATCH(0,1)
"RTN","RCDPEM",68,0)
 L -^RCY(344.3,"ALOCK")
"RTN","RCDPEM",69,0)
ENQ K ^TMP($J,"RCDPETOT")
"RTN","RCDPEM",70,0)
 Q
"RTN","RCDPEM",71,0)
 ;
"RTN","RCDPEM",72,0)
MATCH(RCMAN,RCPROC) ; Try to matched unmatched EFTs
"RTN","RCDPEM",73,0)
 ; RCMAN = 1 if job run manually, outside of nightly processing
"RTN","RCDPEM",74,0)
 ; RCPROC = 1 if called from EFT-EOB automatch, 0 if from manual match
"RTN","RCDPEM",75,0)
 ;
"RTN","RCDPEM",76,0)
 N RC0,RCER,RCZ,RCHAC
"RTN","RCDPEM",77,0)
 I '$O(^RCY(344.31,"AMATCH",0,0)) D  G MATCHQ
"RTN","RCDPEM",78,0)
 . ; Send bulletin - no unmatched EFTs found
"RTN","RCDPEM",79,0)
 . N RCT
"RTN","RCDPEM",80,0)
 . S RCT=+$O(^TMP($J,"RCXM"," "),-1)+1
"RTN","RCDPEM",81,0)
 . S ^TMP($J,"RCXM",RCT)=$S('$G(RCMAN):"The nightly job",1:"The manual option")_" to match EFTs has found no EFTs are currently unmatched on your system"
"RTN","RCDPEM",82,0)
 . I $G(RCMAN) S ^TMP($J,"RCXM",RCT+1)="The action was initiated by "_$P($G(^VA(200,DUZ,0)),U)
"RTN","RCDPEM",83,0)
 . D SENDBULL^RCDPEM1
"RTN","RCDPEM",84,0)
 ;
"RTN","RCDPEM",85,0)
 S RCZ=0 F  S RCZ=$O(^RCY(344.31,"AMATCH",0,RCZ)) Q:'RCZ  D
"RTN","RCDPEM",86,0)
 . K RCER
"RTN","RCDPEM",87,0)
 . S RC0=$G(^RCY(344.31,RCZ,0)),RCHAC=($E($P($G(^RCY(344.3,+RC0,0)),U,6),1,3)="HAC")
"RTN","RCDPEM",88,0)
 . Q:RC0=""  ; Bad xref
"RTN","RCDPEM",89,0)
 . Q:$S('RCHAC:'$P(RC0,U,11),1:0)  ; EFT deposit must have been recorded
"RTN","RCDPEM",90,0)
 . S ^TMP($J,"RCTOT","EFT")=$G(^TMP($J,"RCTOT","EFT"))+1
"RTN","RCDPEM",91,0)
 . I RCHAC S ^TMP($J,"RCTOT","EFT_HAC")=$G(^TMP($J,"RCTOT","EFT_HAC"))+1
"RTN","RCDPEM",92,0)
 . S ^TMP($J,"RCDPETOT",344.31,RCZ)=""
"RTN","RCDPEM",93,0)
 . ;
"RTN","RCDPEM",94,0)
 . D MATCH^RCDPEM0(RCZ,RCPROC)
"RTN","RCDPEM",95,0)
 ;
"RTN","RCDPEM",96,0)
 I '$O(^TMP($J,"RCXM",0)) K RCER S RCER(1)="",RCER(2)="NO EXCEPTIONS WHILE MATCHING EFTs-ERAs OR IN RECORDING THE DEPOSITS TO FMS" D BULL^RCDPEM1("","",.RCER) K RCER
"RTN","RCDPEM",97,0)
 D EN2^RCDPEM1,BULL^RCDPEM1("","",.RCER)
"RTN","RCDPEM",98,0)
 D SENDBULL^RCDPEM1
"RTN","RCDPEM",99,0)
 ;
"RTN","RCDPEM",100,0)
MATCHQ K ^TMP($J,"RCDPETOT"),^TMP($J,"RCTOT")
"RTN","RCDPEM",101,0)
 Q
"RTN","RCDPEM",102,0)
 ;
"RTN","RCDPEM",103,0)
LOCKDEP(RCDEP,LOCK) ; Lock/confirm deposit ien RCDEP file 341.1
"RTN","RCDPEM",104,0)
 ; If LOCK = 1 lock deposit
"RTN","RCDPEM",105,0)
 ; If LOCK = 0 unlock deposit
"RTN","RCDPEM",106,0)
 I $G(LOCK) D
"RTN","RCDPEM",107,0)
 . L +^RCY(344.1,RCDEP,0)
"RTN","RCDPEM",108,0)
 . D CONFIRM^RCDPUDEP(RCDEP) ; confirm to prevent changes
"RTN","RCDPEM",109,0)
 I '$G(LOCK) L -^RCY(344.1,RCDEP,0)
"RTN","RCDPEM",110,0)
 Q
"RTN","RCDPEM",111,0)
 ;
"RTN","RCDPEM",112,0)
RCPTDET(RCRZ,RECTDA1,RCER) ; Adds detail to a receipt based on file 344.49
"RTN","RCDPEM",113,0)
 ; RCRZ = ien of ERA entry in file 344.49
"RTN","RCDPEM",114,0)
 ; RECTDA1 = ien of receipt entry in file 344
"RTN","RCDPEM",115,0)
 ; RCER = error array returned if passed by reference
"RTN","RCDPEM",116,0)
 ;
"RTN","RCDPEM",117,0)
 N RCR,RCSPL,RCZ0,RCTRANDA,RCQ,DR,DA,DIE,X,Y,Q,Z0,Z1,Z
"RTN","RCDPEM",118,0)
 ;
"RTN","RCDPEM",119,0)
 S RCR=0 F  S RCR=$O(^RCY(344.49,RCRZ,1,RCR)) Q:'RCR  D
"RTN","RCDPEM",120,0)
 . S RCZ0=$G(^RCY(344.49,RCRZ,1,RCR,0))
"RTN","RCDPEM",121,0)
 . I $P(RCZ0,U)'["." S RCSPL(+RCZ0)=$P(RCZ0,U,9) Q
"RTN","RCDPEM",122,0)
 . I $S(+$P(RCZ0,U,3)=0:$P($G(^RCY(344.49,RCRZ,0)),U,3),1:$P(RCZ0,U,3)<0) S RCSPL(RCZ0\1,+RCZ0)=RCZ0 Q
"RTN","RCDPEM",123,0)
 . S RCTRANDA=$$ADDTRAN^RCDPURET(RECTDA1)
"RTN","RCDPEM",124,0)
 . ;
"RTN","RCDPEM",125,0)
 . I 'RCTRANDA D  Q  ; Error adding receipt detail
"RTN","RCDPEM",126,0)
 .. S RCER(1)=$$SETERR^RCDPEM0() S RCER($O(RCER(""),-1)+1)="  NO DETAIL LINE ADDED TO RECEIPT "_$P($G(^RCY(344,RECTDA1,0)),U)_" FOR LINE #"_$P(RCZ0,U)_" IN EEOB WORKLIST SCRATCH PAD"
"RTN","RCDPEM",127,0)
 . ;
"RTN","RCDPEM",128,0)
 . ;Store receipt line detail
"RTN","RCDPEM",129,0)
 . D DET(RCRZ,RCR,RECTDA1,RCTRANDA)
"RTN","RCDPEM",130,0)
 . S RCSPL(RCZ0\1,+RCZ0)=RCZ0
"RTN","RCDPEM",131,0)
 S Z=0 F  S Z=$O(RCSPL(Z)) Q:'Z  S RCQ=+$G(RCSPL(Z)) I RCQ D
"RTN","RCDPEM",132,0)
 . S Z1=$O(RCSPL(Z,"")) Q:$O(RCSPL(Z,""),-1)=Z1  ; No split occurred
"RTN","RCDPEM",133,0)
 . S Z1=0 F  S Z1=$O(RCSPL(Z,Z1)) Q:'Z1  S Z0=$G(RCSPL(Z,Z1)) D
"RTN","RCDPEM",134,0)
 .. S Q=+$P($G(^RCY(344.4,RCRZ,1,RCQ,0)),U,2) ; EOB detail rec
"RTN","RCDPEM",135,0)
 .. Q:'Q
"RTN","RCDPEM",136,0)
 .. I '$P(Z0,U,7)!($P(Z0,U,2)="") D  ; Suspensed
"RTN","RCDPEM",137,0)
 ... D SPL1^IBCEOBAR(Q,$S($P(Z0,U,2)="":"NO BILL",1:$P(Z0,U,2)),"",$P(Z0,U,6)) ; IA 4050
"RTN","RCDPEM",138,0)
 .. E  D
"RTN","RCDPEM",139,0)
 ... D SPL1^IBCEOBAR(Q,$P(Z0,U,2),$P(Z0,U,7),$P(Z0,U,6)) ; Add the split bill # ; IA 4050
"RTN","RCDPEM",140,0)
 ;
"RTN","RCDPEM",141,0)
 Q
"RTN","RCDPEM",142,0)
 ;
"RTN","RCDPEM",143,0)
DET(RCZ,RCR,RECTDA1,RCTRANDA) ; Store receipt detail
"RTN","RCDPEM",144,0)
 ; RCZ = ien of entry file 344.49
"RTN","RCDPEM",145,0)
 ; RCR = ien of entry in file 344.491
"RTN","RCDPEM",146,0)
 ; RCPROC = Function calling this subroutine
"RTN","RCDPEM",147,0)
 ;        = 1 EFT match to ERA   = 0 manual add receipt
"RTN","RCDPEM",148,0)
 ; RECTDA1 = ien of entry in file 344
"RTN","RCDPEM",149,0)
 ; RCTRANDA = ien of entry in subfile 344.01
"RTN","RCDPEM",150,0)
 ;
"RTN","RCDPEM",151,0)
 N DIE,DA,DR,X,Y,Z,RCUP,RCCOM,RCZ0,RC0
"RTN","RCDPEM",152,0)
 S RC0=$G(^RCY(344.49,RCZ,0))
"RTN","RCDPEM",153,0)
 S RCZ0=$G(^RCY(344.49,RCZ,1,RCR,0))
"RTN","RCDPEM",154,0)
 S DR="",RCUP=+$O(^RCY(344.49,RCZ,1,"B",+RCZ0/1,0)),RCUP=$G(^RCY(344.49,RCZ,1,RCUP,0))
"RTN","RCDPEM",155,0)
 I $P(RCZ0,U,7) S DR=".09////^S X="_+$P(RCZ0,U,7)_"_$C(59)_""PRCA(430,"";"
"RTN","RCDPEM",156,0)
 S DR=DR_".04////"_(+$P(RCZ0,U,3))_";"_$S($P(RC0,U,4)'="":".13////"_$P(RC0,U,4)_";",1:"")_".27////"_RCR_";"
"RTN","RCDPEM",157,0)
 I $P(RC0,U,5)'="" S DR=DR_".1////"_$P(RC0,U,5)_";"
"RTN","RCDPEM",158,0)
 I $P(RC0,U,6)'="" S DR=DR_".08////"_$P(RC0,U,6)_";"
"RTN","RCDPEM",159,0)
 S RCCOM=$P(RCZ0,U,10)
"RTN","RCDPEM",160,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCZ,1,RCR,1,Z)) Q:'Z  I $P($G(^(Z,0)),U,5)=1 S DR=DR_".28////1;" Q  ; Update receipt line with dec adj flag
"RTN","RCDPEM",161,0)
 I $P(RCUP,U,2)["**ADJ" S DR=DR_"1.02////"_$E($S(RCCOM'="":RCCOM_"/",1:"")_$S($P($P(RCUP,U,2),"ADJ",2):"ERA adjustment - no bill referenced",1:"Total of EFT mismatched to ERA"),1,60)_";"
"RTN","RCDPEM",162,0)
 I $P($G(^RCY(344.49,RCZ,0)),U,4)'="" S DR=DR_".07////"_$P($G(^RCY(344.49,RCZ,0)),U,4)_";"
"RTN","RCDPEM",163,0)
 S DA(1)=RECTDA1,DA=RCTRANDA,DIE="^RCY(344,"_DA(1)_",1,"
"RTN","RCDPEM",164,0)
 D ^DIE
"RTN","RCDPEM",165,0)
 Q
"RTN","RCDPEM",166,0)
 ;
"RTN","RCDPEM0")
0^81^B50540405
"RTN","RCDPEM0",1,0)
RCDPEM0 ;ALB/TMK - ERA MATCHING TO EFT (cont) ;05-NOV-02
"RTN","RCDPEM0",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEM0",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEM0",4,0)
 Q
"RTN","RCDPEM0",5,0)
 ;
"RTN","RCDPEM0",6,0)
MATCH(RCZ,RCPROC) ; Match EFT to ERA
"RTN","RCDPEM0",7,0)
 ; RCZ = ien of file 344.31
"RTN","RCDPEM0",8,0)
 ; RCPROC = 1 if called from EFT-EOB automatch, 0 if from manual match
"RTN","RCDPEM0",9,0)
 N RCER,RCRZ,RCMATCH,RCER,RC0,RC3444,RC34431,DIE,DA,DR,X,Y,Z,Z0
"RTN","RCDPEM0",10,0)
 ; Find ERA to match to EFT by trace, date, amt
"RTN","RCDPEM0",11,0)
 S RC34431=$G(^RCY(344.31,RCZ,0))
"RTN","RCDPEM0",12,0)
 S RCRZ=0 F  S RCRZ=$O(^RCY(344.4,"ATRID",$P(RC34431,U,4),$P(RC34431,U,3),RCRZ)) Q:'RCRZ  S RC3444=$G(^RCY(344.4,RCRZ,0)) I '$O(^RCY(344.31,"AERA",RCRZ,0)),'$P(RC3444,U,9) D  Q:$D(Z(1))
"RTN","RCDPEM0",13,0)
 . S Z($S(+$P(RC34431,U,7)=+$P(RC3444,U,5):1,1:-1),RCRZ)="" ;Total match?
"RTN","RCDPEM0",14,0)
 ;
"RTN","RCDPEM0",15,0)
 S RCMATCH=+$O(Z(""),-1),RCRZ=+$O(Z(RCMATCH,0))
"RTN","RCDPEM0",16,0)
 S $P(^TMP($J,"RCDPETOT",344.31,RCZ),U)=RCMATCH
"RTN","RCDPEM0",17,0)
 ;
"RTN","RCDPEM0",18,0)
 I 'RCMATCH D  Q  ; Match failure
"RTN","RCDPEM0",19,0)
 . S ^TMP($J,"RCTOT","NO_MATCH")=$G(^TMP($J,"RCTOT","NO_MATCH"))+1
"RTN","RCDPEM0",20,0)
 ;
"RTN","RCDPEM0",21,0)
 I RCMATCH<0 D
"RTN","RCDPEM0",22,0)
 . ; Bulletin for totals don't match warning
"RTN","RCDPEM0",23,0)
 . S ^TMP($J,"RCTOT","TOTMIS")=$G(^TMP($J,"RCTOT","TOTMIS"))+1
"RTN","RCDPEM0",24,0)
 . N XMSUBJ,XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,XMZ,XMERR,RCER,RCT,RCM,RCLESS
"RTN","RCDPEM0",25,0)
 . S RCT=0
"RTN","RCDPEM0",26,0)
 . D BLD^RCDPEM1("RCER",.RCT,344.31,RC34431)
"RTN","RCDPEM0",27,0)
 . S RCT=RCT+1,RCER(RCT)=""
"RTN","RCDPEM0",28,0)
 . K RCM S RCM=RCT
"RTN","RCDPEM0",29,0)
 . S RCLESS=($P(RC34431,U,7)<$P($G(^RCY(344.4,RCRZ,0)),U,5))
"RTN","RCDPEM0",30,0)
 . S RCT=RCT+1,RCER(RCT)="  TOTALS ON ERA AND EFT DON'T MATCH.",RCT=RCT+1,RCER(RCT)="  EFT TOTAL IS "_$S(RCLESS:"LESS",1:"GREATER")_" THAN ERA AMOUNT TOTAL"
"RTN","RCDPEM0",31,0)
 . I RCLESS D
"RTN","RCDPEM0",32,0)
 .. S RCT=RCT+1,RCER(RCT)="  DECREASE ADJUSTMENT IS NEEDED BEFORE THE ERA RECEIPT CAN BE PROCESSED."
"RTN","RCDPEM0",33,0)
 . I 'RCLESS D
"RTN","RCDPEM0",34,0)
 .. S RCT=RCT+1,RCER(RCT)="  A SUSPENSE LINE IS NEEDED ON THE RECEIPT TO ACCOUNT FOR THE DIFFERENCE."
"RTN","RCDPEM0",35,0)
 . S RCT=RCT+1,RCER(RCT)="  IF YOU USE THE ERA WORKLIST SCRATCH PAD, THIS WILL BE GENERATED FOR YOU."
"RTN","RCDPEM0",36,0)
 . ;
"RTN","RCDPEM0",37,0)
 . S RCT=RCT+1,RCER(RCT)="  EFT WAS MATCHED TO ERA ENTRY #: "_RCRZ_" ($"_$J(+$P($G(^RCY(344.4,RCRZ,0)),U,5),"",2)_")."
"RTN","RCDPEM0",38,0)
 . S XMTO("I:G.RCDPE PAYMENTS")=""
"RTN","RCDPEM0",39,0)
 . S XMBODY="RCER"
"RTN","RCDPEM0",40,0)
 . S XMSUBJ="EDI LBOX TOTALS MISMATCH ON EFT-ERA MATCH"
"RTN","RCDPEM0",41,0)
 . D
"RTN","RCDPEM0",42,0)
 .. N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPEM0",43,0)
 .. D SENDMSG^XMXAPI(.5,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPEM0",44,0)
 . ; Update log
"RTN","RCDPEM0",45,0)
 . F  S RCM=$O(RCER(RCM)) Q:'RCM  S RCT=RCT+1,RCM(RCT)=RCER(RCM)
"RTN","RCDPEM0",46,0)
 . D STORERR(344.31,RCZ,.RCM)
"RTN","RCDPEM0",47,0)
 ;
"RTN","RCDPEM0",48,0)
 I RCMATCH D
"RTN","RCDPEM0",49,0)
 . S DIE="^RCY(344.31,",DA=RCZ,DR=".08////"_RCMATCH_";.1////"_RCRZ D ^DIE
"RTN","RCDPEM0",50,0)
 . S DIE="^RCY(344.4,",DA=RCRZ,DR=".09////"_RCMATCH D ^DIE
"RTN","RCDPEM0",51,0)
 . S ^TMP($J,"RCTOT","MATCH")=$G(^TMP($J,"RCTOT","MATCH"))+1
"RTN","RCDPEM0",52,0)
 ;
"RTN","RCDPEM0",53,0)
 Q
"RTN","RCDPEM0",54,0)
 ;
"RTN","RCDPEM0",55,0)
ADDDEP(RCD,RCDDT,RCZ) ; Add deposit
"RTN","RCDPEM0",56,0)
 ; RCD = deposit #
"RTN","RCDPEM0",57,0)
 ; RCDDT = deposit date FM format
"RTN","RCDPEM0",58,0)
 ; RCZ = ien of entry in file 344.3
"RTN","RCDPEM0",59,0)
 ; Function returns IEN of new deposit entry
"RTN","RCDPEM0",60,0)
 ;
"RTN","RCDPEM0",61,0)
 N RCDEP,RC0,DIE,DR,DA,X,Y
"RTN","RCDPEM0",62,0)
 S RCDEP=+$$ADDDEPT^RCDPUDEP(RCD,RCDDT)
"RTN","RCDPEM0",63,0)
 I RCDEP D
"RTN","RCDPEM0",64,0)
 . D LOCKDEP^RCDPEM(RCDEP,1)
"RTN","RCDPEM0",65,0)
 . S RC0=$G(^RCY(344.3,RCZ,0))
"RTN","RCDPEM0",66,0)
 . S DIE="^RCY(344.1,",DA=RCDEP,DR=".04////"_+$P(RC0,U,8)_$S($P(RC0,U,4)'="":";.05////"_$P(RC0,U,4),1:"")  D ^DIE
"RTN","RCDPEM0",67,0)
 . S DIE="^RCY(344.3,",DR=".03////"_RCDEP,DA=RCZ D ^DIE
"RTN","RCDPEM0",68,0)
 . S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,5)=RCDEP
"RTN","RCDPEM0",69,0)
 Q RCDEP
"RTN","RCDPEM0",70,0)
 ;
"RTN","RCDPEM0",71,0)
ADDREC(RCDEP,RCZ) ; Add receipt, send CR to FUND 5287.4, Rev src cd 8NZZ
"RTN","RCDPEM0",72,0)
 ;   for total EFT amt
"RTN","RCDPEM0",73,0)
 ; RCDEP = ien of the deposit file entry
"RTN","RCDPEM0",74,0)
 ; RCZ = ien in file 344.3
"RTN","RCDPEM0",75,0)
 ; Function returns IEN of new receipt entry
"RTN","RCDPEM0",76,0)
 ;
"RTN","RCDPEM0",77,0)
 N RCER,RCTRANDA,RECTDA,RCQUIT,RCDPDATA,RCTOTCT,RC0,DIE,DA,DR,X,Y
"RTN","RCDPEM0",78,0)
 S RC0=$G(^RCY(344.3,RCZ,0))
"RTN","RCDPEM0",79,0)
 S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,3)=0
"RTN","RCDPEM0",80,0)
 ; Single receipt - multiple transactions for EFT payments
"RTN","RCDPEM0",81,0)
 S RECTDA=+$$ADDRECT^RCDPUREC($P(RC0,U,7),RCDEP,+$O(^RC(341.1,"AC",14,0)))
"RTN","RCDPEM0",82,0)
 ; Create detail lines for deposit amount, process whole receipt to send
"RTN","RCDPEM0",83,0)
 ;   CR document for deposit amount
"RTN","RCDPEM0",84,0)
 I RECTDA D
"RTN","RCDPEM0",85,0)
 . N STATUS,RC00,RCT
"RTN","RCDPEM0",86,0)
 . S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U)=RECTDA,^TMP($J,"RCTOT","EFT_RECPT")=$G(^TMP($J,"RCTOT","EFT_RECPT"))+1
"RTN","RCDPEM0",87,0)
 . L +^RCY(344,RECTDA)
"RTN","RCDPEM0",88,0)
 . ;  check to see if receipt has been processed (fms document)
"RTN","RCDPEM0",89,0)
 . D DIQ344^RCDPRPLM(RECTDA,"200;")
"RTN","RCDPEM0",90,0)
 . ;  code sheet already sent once, this is a retransmission, check it
"RTN","RCDPEM0",91,0)
 . I RCDPDATA(344,RECTDA,200,"E")'="" S RCQUIT=0 D  Q:RCQUIT
"RTN","RCDPEM0",92,0)
 .. S STATUS=$$STATUS^GECSSGET(RCDPDATA(344,RECTDA,200,"E"))
"RTN","RCDPEM0",93,0)
 .. ;  okay to continue if status is Error, Rejected, or not defined (-1)
"RTN","RCDPEM0",94,0)
 .. I $E(STATUS)="E"!($E(STATUS)="R")!(STATUS=-1) Q
"RTN","RCDPEM0",95,0)
 .. S RCER(1)=$$SETERR(2),RCER(2)="  Receipt already sent to FMS - No change"
"RTN","RCDPEM0",96,0)
 .. D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM0",97,0)
 .. S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM0",98,0)
 .. D STORERR(344.3,RCZ,.RCER)
"RTN","RCDPEM0",99,0)
 .. L -^RCY(344,RECTDA)
"RTN","RCDPEM0",100,0)
 .. L -^RCY(344.1,RCDEP)
"RTN","RCDPEM0",101,0)
 .. S RCQUIT=1 K RCER
"RTN","RCDPEM0",102,0)
 . ;  mark receipt as processed (closed) to prevent editing
"RTN","RCDPEM0",103,0)
 . D MARKPROC^RCDPUREC(RECTDA,"")
"RTN","RCDPEM0",104,0)
 . S DIE="^RCY(344,",DR=".04////"_+$O(^RC(341.1,"AC",14,0)),DA=RECTDA D ^DIE ; Add EDI Lockbox payment type
"RTN","RCDPEM0",105,0)
 . ;
"RTN","RCDPEM0",106,0)
 . ; Add receipt line for each payer's EFT
"RTN","RCDPEM0",107,0)
 . S RCT=0 F  S RCT=$O(^RCY(344.31,"B",RCZ,RCT)) Q:'RCT  D  Q:$O(RCER(0))
"RTN","RCDPEM0",108,0)
 .. S RC00=$G(^RCY(344.31,RCT,0)),DR=""
"RTN","RCDPEM0",109,0)
 .. S RCTRANDA=$S('$P(RC00,U,14):$$ADDTRAN^RCDPURET(RECTDA),1:$P(RC00,U,14)) ; detail line
"RTN","RCDPEM0",110,0)
 .. I 'RCTRANDA D  Q
"RTN","RCDPEM0",111,0)
 ... S RCER(1)=$$SETERR(2),RCER(2)="  The receipt for the EFT deposit was not created correctly",RCER(3)="  You may have to add the detail manually to send the FMS CR doc to revenue"
"RTN","RCDPEM0",112,0)
 ... S RCER(4)="  source code 8NZZ in fund 5287.4.  Receipt # is "_$P($G(^RCY(344,RECTDA,0)),U),RCER(5)="  Trace # being processed at time of error was: "_$P(RC00,U,4)_"."
"RTN","RCDPEM0",113,0)
 ... D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM0",114,0)
 ... S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM0",115,0)
 ... D STORERR(344.3,RCZ,.RCER)
"RTN","RCDPEM0",116,0)
 .. ;
"RTN","RCDPEM0",117,0)
 .. S DR=DR_";1.02////Auto added EDI Lockbox deposit;.06////"_$P(RC00,U,12)_";.04////"_$J(+$P(RC00,U,7),"",2)_";.14////"_RCTRANDA
"RTN","RCDPEM0",118,0)
 .. N N S N=+$O(^VA(200,"B","EDILOCKBOX,AUTOMATIC",0)) S:N=0 N=.5
"RTN","RCDPEM0",119,0)
 .. S DR=DR_";.12////"_N
"RTN","RCDPEM0",120,0)
 .. S DA(1)=RECTDA,DA=RCTRANDA,DIE="^RCY(344,"_DA(1)_",1,"
"RTN","RCDPEM0",121,0)
 .. S:$E(DR)=";" DR=$P(DR,";",2,999) D ^DIE
"RTN","RCDPEM0",122,0)
 .. S DR=".14////"_RCTRANDA_";.09////"_RECTDA,DIE="^RCY(344.31,",DA=RCT D ^DIE
"RTN","RCDPEM0",123,0)
 .. ;
"RTN","RCDPEM0",124,0)
 . ;Post to FUND 5287.4/RSC 8NZZ
"RTN","RCDPEM0",125,0)
 . D PROCESS^RCDPURE1(RECTDA,2)
"RTN","RCDPEM0",126,0)
 . ;Save details for status report
"RTN","RCDPEM0",127,0)
 . N Z,TOT
"RTN","RCDPEM0",128,0)
 . S (TOT,Z)=0 F  S Z=$O(^RCY(344,RECTDA,1,Z)) Q:'Z  S TOT=TOT+$P($G(^RCY(344,RECTDA,1,Z,0)),U,4)
"RTN","RCDPEM0",129,0)
 . S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,2)=TOT
"RTN","RCDPEM0",130,0)
 . ;
"RTN","RCDPEM0",131,0)
 . I $P($G(^RCY(344,RECTDA,2)),U)="" D  ; Receipt not processed fully
"RTN","RCDPEM0",132,0)
 .. N CT,Z
"RTN","RCDPEM0",133,0)
 .. S RCER(1)=$$SETERR(2),RCER(2)="  The receipt "_$P($G(^RCY(344,RECTDA,0)),U)_" for the EFT deposit was not processed fully" S:TOT RCER(3)="  You must manually process it to create the FMS CR doc to rev src code 8NZZ"
"RTN","RCDPEM0",134,0)
 .. S Z=0,CT=+$O(RCER(" "),-1) F  S Z=$O(^TMP($J,"RCDPEMSG",Z)) Q:'Z  S CT=CT+1,RCER(CT)=$G(^TMP($J,"RCDPEMSG",Z))
"RTN","RCDPEM0",135,0)
 .. D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM0",136,0)
 .. S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM0",137,0)
 .. D STORERR(344.3,RCZ,.RCER)
"RTN","RCDPEM0",138,0)
 . ;
"RTN","RCDPEM0",139,0)
 . S DIE="^RCY(344.3,",DR=".11////^S X=DT;.12////"_$J(+TOT,"",2),DA=RCZ D ^DIE
"RTN","RCDPEM0",140,0)
 . S ^TMP($J,"RCTOT","SUSPAMT")=$G(^TMP($J,"RCTOT","SUSPAMT"))+TOT
"RTN","RCDPEM0",141,0)
 . S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,3)="1"
"RTN","RCDPEM0",142,0)
 ;
"RTN","RCDPEM0",143,0)
 I RECTDA L -^RCY(344,RECTDA)
"RTN","RCDPEM0",144,0)
 Q RECTDA
"RTN","RCDPEM0",145,0)
 ;
"RTN","RCDPEM0",146,0)
SETERR(RCPROC) ; Set up first line of error message to be stored
"RTN","RCDPEM0",147,0)
 ; RCPROC = 1 if called from EFT-EOB automatch, 0 if from manual match
"RTN","RCDPEM0",148,0)
 ;        =2 if called from EFT deposit creation
"RTN","RCDPEM0",149,0)
 N LINE1
"RTN","RCDPEM0",150,0)
 I RCPROC S LINE1=$$FMTE^XLFDT($$NOW^XLFDT(),2)_" - PROCESS TO "_$S(RCPROC=1:"CREATE RECEIPT FROM ERA",1:"SEND EFT DEPOSIT TO FMS")
"RTN","RCDPEM0",151,0)
 Q LINE1
"RTN","RCDPEM0",152,0)
 ;
"RTN","RCDPEM0",153,0)
STORERR(RCFILE,RCZ,RCER) ; Store error text in word processing field
"RTN","RCDPEM0",154,0)
 ; RCFILE = 344.3 or 344.31
"RTN","RCDPEM0",155,0)
 ; RCZ = ien of the entry in file RCFILE
"RTN","RCDPEM0",156,0)
 ; RCER = array containing the error text (passed by ref)
"RTN","RCDPEM0",157,0)
 D WP^DIE(RCFILE,RCZ_",",2,"A","RCER")
"RTN","RCDPEM0",158,0)
 Q
"RTN","RCDPEM0",159,0)
 ;
"RTN","RCDPEM1")
0^82^B48711091
"RTN","RCDPEM1",1,0)
RCDPEM1 ;ALB/TMK - ERA MATCH TO EFT (cont) ;05-NOV-02
"RTN","RCDPEM1",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEM1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEM1",4,0)
 Q
"RTN","RCDPEM1",5,0)
 ;
"RTN","RCDPEM1",6,0)
BULL(RCFILE,RC0,RCER) ; Add the error to the bulletin text array
"RTN","RCDPEM1",7,0)
 ; RCFILE = null, 344.3 or 344.31, depending on the file being worked
"RTN","RCDPEM1",8,0)
 ; RC0 = the 0-node of the RCFILE entry
"RTN","RCDPEM1",9,0)
 ; RCER = the error text to be placed in the bulletin (passed by ref)
"RTN","RCDPEM1",10,0)
 ;
"RTN","RCDPEM1",11,0)
 N RCHCT,CT,Z
"RTN","RCDPEM1",12,0)
 I '$O(^TMP($J,"RCXM",0)) S ^TMP($J,"RCXM",1)="The following exceptions were encountered attempting",^TMP($J,"RCXM",2)="to post EFT deposits OR to match EFT's with ERA's:",^TMP($J,"RCXM",3)=" "
"RTN","RCDPEM1",13,0)
 S (RCHCT,CT)=+$O(^TMP($J,"RCXM",""),-1)
"RTN","RCDPEM1",14,0)
 S ^TMP($J,"RCXM",0)=$G(^TMP($J,"RCXM",0))+1
"RTN","RCDPEM1",15,0)
 I RC0'="" D
"RTN","RCDPEM1",16,0)
 . D BLD("^TMP($J,""RCXM"")",.CT,RCFILE,RC0)
"RTN","RCDPEM1",17,0)
 . S RCER=$G(RCER)+1,RCHCT=RCHCT+1
"RTN","RCDPEM1",18,0)
 . S ^TMP($J,"RCXM",RCHCT)=$E(^TMP($J,"RCXM",0)_$J("",4),1,4)_$G(^TMP($J,"RCXM",RCHCT))
"RTN","RCDPEM1",19,0)
 S Z=1 F  S Z=$O(RCER(Z)) Q:'Z  S CT=CT+1,^TMP($J,"RCXM",CT)="  "_RCER(Z)
"RTN","RCDPEM1",20,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)="  "
"RTN","RCDPEM1",21,0)
 Q
"RTN","RCDPEM1",22,0)
 ;
"RTN","RCDPEM1",23,0)
SENDBULL ; Sends the bulletin when all processing is complete
"RTN","RCDPEM1",24,0)
 N XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,XMZ,XMERR,XMSUBJ
"RTN","RCDPEM1",25,0)
 S XMTO("I:G.RCDPE PAYMENTS")=""
"RTN","RCDPEM1",26,0)
 S XMBODY="^TMP($J,""RCXM"")"
"RTN","RCDPEM1",27,0)
 S XMSUBJ="EDI LBOX "_$$FMTE^XLFDT(DT,2)_" EXCEPTIONS EFT DEP/MATCH EFTs TO ERAs"
"RTN","RCDPEM1",28,0)
 D  ;
"RTN","RCDPEM1",29,0)
 . N DUZ
"RTN","RCDPEM1",30,0)
 . S DUZ=.5,DUZ(0)="@"
"RTN","RCDPEM1",31,0)
 . D SENDMSG^XMXAPI(.5,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPEM1",32,0)
 K ^TMP($J,"RCXM")
"RTN","RCDPEM1",33,0)
 Q
"RTN","RCDPEM1",34,0)
 ;
"RTN","RCDPEM1",35,0)
BLD(RCARRAY,RCT,RCFILE,RC0) ; Build the array for entry 344.31 detail
"RTN","RCDPEM1",36,0)
 ; RCARRAY = the name of the array to be set
"RTN","RCDPEM1",37,0)
 ; RCT = the # of lines already output into this array
"RTN","RCDPEM1",38,0)
 ; RCFILE = 344.3 or 344.31
"RTN","RCDPEM1",39,0)
 ; RC0 = the 0-node of the entry in RCFILE
"RTN","RCDPEM1",40,0)
 ;
"RTN","RCDPEM1",41,0)
 N Z,RC00
"RTN","RCDPEM1",42,0)
 I RCFILE=344.31 D
"RTN","RCDPEM1",43,0)
 . S RC00=$G(^RCY(344.3,+RC0,0))
"RTN","RCDPEM1",44,0)
 . S Z=$$SETSTR^VALM1("  TRACE #: "_$P(RC0,U,4),"",1,31)
"RTN","RCDPEM1",45,0)
 . S Z=$$SETSTR^VALM1("  INS CO: "_$E($P(RC0,U,2),1,22)_"/"_$P(RC0,U,3),Z,32,43)
"RTN","RCDPEM1",46,0)
 . S RCT=RCT+1,@RCARRAY@(RCT)=Z
"RTN","RCDPEM1",47,0)
 . S Z=$$SETSTR^VALM1("  DEPOSIT DATE: "_$$FMTE^XLFDT($P(RC00,U,7),2),"",1,24)
"RTN","RCDPEM1",48,0)
 . S Z=$$SETSTR^VALM1("  DATE REC'D: "_$S($P(RC00,U,13):$$FMTE^XLFDT($P(RC00,U,13)\1,2),1:""),Z,25,22)
"RTN","RCDPEM1",49,0)
 . S Z=$$SETSTR^VALM1("  PAYMENT AMT: "_$TR($J($P(RC0,U,7),15,2)," "),Z,47,30)
"RTN","RCDPEM1",50,0)
 . S RCT=RCT+1,@RCARRAY@(RCT)=Z
"RTN","RCDPEM1",51,0)
 ;
"RTN","RCDPEM1",52,0)
 I RCFILE=344.3 D
"RTN","RCDPEM1",53,0)
 . S Z=$$SETSTR^VALM1("  DEPOSIT #: "_$P(RC0,U,6),"",1,13)
"RTN","RCDPEM1",54,0)
 . S Z=$$SETSTR^VALM1("  DEPOSIT DATE: "_$$FMTE^XLFDT($P(RC0,U,7),2),Z,16,24)
"RTN","RCDPEM1",55,0)
 . S RCT=RCT+1,@RCARRAY@(RCT)=Z
"RTN","RCDPEM1",56,0)
 . S Z=$$SETSTR^VALM1("  DATE REC'D: "_$S($P(RC0,U,13):$$FMTE^XLFDT($P(RC0,U,13)\1,2),1:""),"",25,22)
"RTN","RCDPEM1",57,0)
 . S Z=$$SETSTR^VALM1("  DEPOSIT AMT: "_$TR($J($P(RC0,U,8),15,2)," "),Z,47,30)
"RTN","RCDPEM1",58,0)
 . S RCT=RCT+1,@RCARRAY@(RCT)=Z
"RTN","RCDPEM1",59,0)
 ;
"RTN","RCDPEM1",60,0)
 Q
"RTN","RCDPEM1",61,0)
 ;
"RTN","RCDPEM1",62,0)
EN1 ; Queue match job for run on demand
"RTN","RCDPEM1",63,0)
 N DIR,X,Y,ZTIO,ZTRTN,ZTSK,ZTDESC,ZTDTH
"RTN","RCDPEM1",64,0)
 S DIR(0)="YA",DIR("A",1)="THIS OPTION QUEUES THE JOB TO MATCH EFTs TO ELECTRONIC ERAs"
"RTN","RCDPEM1",65,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO RUN THIS JOB?: ",DIR("B")="NO"
"RTN","RCDPEM1",66,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM1",67,0)
 I Y'=1 G EN1Q
"RTN","RCDPEM1",68,0)
 L +^RCY(344.3,"ALOCK"):5 I '$T D  G EN1Q
"RTN","RCDPEM1",69,0)
 . S DIR(0)="EA",DIR("A",1)="This job is currently running ... try again later",DIR("A")="Press ENTER to continue: " D ^DIR K DIR
"RTN","RCDPEM1",70,0)
 S ZTIO="",ZTDTH=$$NOW^XLFDT()
"RTN","RCDPEM1",71,0)
 S ZTRTN="MATCH^RCDPEM(1,1)",ZTDESC="AR - MANUAL EFT-ERA MATCH EDI LOCKBOX"
"RTN","RCDPEM1",72,0)
 D ^%ZTLOAD
"RTN","RCDPEM1",73,0)
 W !!,$S($D(ZTSK):"Your job has been queued - task number "_ZTSK,1:"Unable to queue this job.")
"RTN","RCDPEM1",74,0)
 U IO
"RTN","RCDPEM1",75,0)
EN1Q L -^RCY(344.3,"ALOCK")
"RTN","RCDPEM1",76,0)
 Q
"RTN","RCDPEM1",77,0)
 ;
"RTN","RCDPEM1",78,0)
EN2 ; Entrypoint from nightly job to put Nightly and Daily Activity Report
"RTN","RCDPEM1",79,0)
 ; data into the nightly job's status bulletin
"RTN","RCDPEM1",80,0)
 N CT,DATA,Z,Z0,RCHD,T,T0
"RTN","RCDPEM1",81,0)
 S CT=+$O(^TMP($J,"RCXM",""),-1)
"RTN","RCDPEM1",82,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)=""
"RTN","RCDPEM1",83,0)
 I $D(^TMP($J,"RCTOT","EFT_DEP")) D
"RTN","RCDPEM1",84,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)=$J("",12)_"********** TOTALS **********"
"RTN","RCDPEM1",85,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)="DEPOSITS"
"RTN","RCDPEM1",86,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL # UNPOSTED EFT DEPOSITS FOUND: "_+$G(^TMP($J,"RCTOT","EFT_DEP"))
"RTN","RCDPEM1",87,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL # NEW EFT DEPOSITS CREATED: "_+$G(^TMP($J,"RCTOT","DEPOSIT"))
"RTN","RCDPEM1",88,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL # NEW EFT DEPOSIT RECEIPTS CREATED: "_+$G(^TMP($J,"RCTOT","EFT_RECPT"))
"RTN","RCDPEM1",89,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL # EFT DEPOSITS WITH CHECK SUM ERRORS: "_+$G(^TMP($J,"RCTOT","CSUM"))
"RTN","RCDPEM1",90,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL # EFT DEPOSITS WITH OTHER ERRORS: "_+$G(^TMP($J,"RCTOT","ERR"))
"RTN","RCDPEM1",91,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL EFT DEPOSIT AMOUNT POSTED TO REV SRC CD 8NZZ: "_$J(+$G(^TMP($J,"RCTOT","SUSPAMT")),"",2)
"RTN","RCDPEM1",92,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)=""
"RTN","RCDPEM1",93,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)="EFT-ERA MATCHES"
"RTN","RCDPEM1",94,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL # UNMATCHED ERAs CHECKED: "_+$G(^TMP($J,"RCTOT","EFT"))
"RTN","RCDPEM1",95,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL # ERAs MATCHED TO EFTs: "_+$G(^TMP($J,"RCTOT","MATCH"))_$S($G(^TMP($J,"RCTOT","MATCH"))&$G(^TMP($J,"RCTOT","TOTMIS")):" INCLUDING "_+$G(^TMP($J,"RCTOT","TOTMIS"))_" WITH MISMATCHED TOTALS",1:"")
"RTN","RCDPEM1",96,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL # ERAs STILL UNMATCHED: "_+$G(^TMP($J,"RCTOT","NO_MATCH"))
"RTN","RCDPEM1",97,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)=""
"RTN","RCDPEM1",98,0)
 K ^TMP("RCDAILYACT",$J),^TMP($J,"RC1")
"RTN","RCDPEM1",99,0)
 ;
"RTN","RCDPEM1",100,0)
 S Z=0 F  S Z=$O(^TMP($J,"RCDPETOT",344.31,Z)) Q:'Z  S Z0=$G(^RCY(344.31,Z,0)) I Z0 S ^TMP($J,"RC1",+Z0,Z)=Z0
"RTN","RCDPEM1",101,0)
 ;
"RTN","RCDPEM1",102,0)
 S (RCHD,Z)=0 F  S Z=$O(^TMP($J,"RCDPETOT",344.3,Z)) Q:'Z  S DATA=$G(^(Z)) D
"RTN","RCDPEM1",103,0)
 . I 'RCHD D HDR(.CT,.RCHD) ; Add headers
"RTN","RCDPEM1",104,0)
 . S Z0=$G(^RCY(344.3,Z,0))
"RTN","RCDPEM1",105,0)
 . S CT=CT+1
"RTN","RCDPEM1",106,0)
 . S ^TMP($J,"RCXM",CT)=""
"RTN","RCDPEM1",107,0)
 . I '$G(DATA) D
"RTN","RCDPEM1",108,0)
 .. S CT=CT+1
"RTN","RCDPEM1",109,0)
 .. S ^TMP($J,"RCXM",CT)=^TMP($J,"RCXM",CT)_"  "_$E($P($G(^RCY(344.1,+$P(Z0,U,3),0)),U)_$J("",15),1,15)_"  "_$E($P($G(^RCY(344,+$O(^RCY(344,"AD",+$P(Z0,U,3),0)),0)),U)_$J("",15),1,15)_"  "
"RTN","RCDPEM1",110,0)
 .. S ^TMP($J,"RCXM",CT)=^TMP($J,"RCXM",CT)_$J(+$P(Z0,U,12),"",2)
"RTN","RCDPEM1",111,0)
 . I $G(DATA) D
"RTN","RCDPEM1",112,0)
 .. S ^TMP($J,"RCXM",CT)=^TMP($J,"RCXM",CT)_"  "_$E($P($G(^RCY(344.1,+$P(DATA,U,5),0)),U)_$J("",15),1,15)_"  "_$E($S($P(DATA,U,5):$P($G(^RCY(344,+DATA,0)),U),1:"")_$J("",15),1,15)_"  "
"RTN","RCDPEM1",113,0)
 .. S ^TMP($J,"RCXM",CT)=^TMP($J,"RCXM",CT)_$J($S($P(DATA,U,3):+$P(DATA,U,2),1:0),"",2)
"RTN","RCDPEM1",114,0)
 . I $P(DATA,U,4) S CT=CT+1,^TMP($J,"RCXM",CT)="    ERROR # REFERENCED ABOVE : "_$P(DATA,U,4)
"RTN","RCDPEM1",115,0)
 . S T=0 F  S T=$O(^TMP($J,"RC1",Z,T)) Q:'T  S T0=$G(^(T)) D
"RTN","RCDPEM1",116,0)
 .. S CT=CT+1
"RTN","RCDPEM1",117,0)
 .. S ^TMP($J,"RCXM",CT)=$J("",5)_$E($P(T0,U,4)_$J("",20),1,20)_"  "_$P(T0,U,2)_"/"_$P(T0,U,3)
"RTN","RCDPEM1",118,0)
 .. S CT=CT+1,^TMP($J,"RCXM",CT)=$J("",10)_"PAYMENT AMOUNT: "_$J(+$P(T0,U,7),"",2)_"  MATCH STATUS: "_$$EXTERNAL^DILFD(344.31,.08,,$P(T0,U,8))
"RTN","RCDPEM1",119,0)
 .. S:$O(^TMP($J,"RCDPETOT",344.3,Z)) CT=CT+1,^TMP($J,"RCXM",CT)=" "
"RTN","RCDPEM1",120,0)
 . I $P(DATA,U,3) S ^TMP("RCDAILYACT",$J,DT,Z)=Z0
"RTN","RCDPEM1",121,0)
 ;
"RTN","RCDPEM1",122,0)
 K ^TMP($J,"RC1")
"RTN","RCDPEM1",123,0)
 I $O(^TMP("RCDAILYACT",$J,0)) D  ; Daily activity rep automatic bulletin
"RTN","RCDPEM1",124,0)
 . N XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,XMZ,XMERR,XMSUBJ
"RTN","RCDPEM1",125,0)
 . K ^TMP($J,"RCDPE_DAR")
"RTN","RCDPEM1",126,0)
 . D RPT1^RCDPEDAR(1,0,DT,DT)
"RTN","RCDPEM1",127,0)
 . K ^TMP("RCDAILYACT",$J)
"RTN","RCDPEM1",128,0)
 . Q:'$O(^TMP($J,"RCDPE_DAR",0))
"RTN","RCDPEM1",129,0)
 . S XMTO("I:G.RCDPE PAYMENTS")=""
"RTN","RCDPEM1",130,0)
 . S XMBODY="^TMP($J,""RCDPE_DAR"")"
"RTN","RCDPEM1",131,0)
 . S XMSUBJ="EDI LBOX - AUTO DAILY ACTIVITY SUMMARY - "_$$FMTE^XLFDT(DT,2)
"RTN","RCDPEM1",132,0)
 . D  ;
"RTN","RCDPEM1",133,0)
 .. N DUZ
"RTN","RCDPEM1",134,0)
 .. S DUZ=.5,DUZ(0)="@"
"RTN","RCDPEM1",135,0)
 .. D SENDMSG^XMXAPI(.5,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPEM1",136,0)
 . K ^TMP($J,"RCDPE_DAR")
"RTN","RCDPEM1",137,0)
 Q
"RTN","RCDPEM1",138,0)
 ;
"RTN","RCDPEM1",139,0)
HDR(CT,HD) ; Header array set
"RTN","RCDPEM1",140,0)
 ; CT = line count, passed by reference
"RTN","RCDPEM1",141,0)
 ; HD = flag returned as 1 so the header is only output once
"RTN","RCDPEM1",142,0)
 N Q
"RTN","RCDPEM1",143,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)=" "
"RTN","RCDPEM1",144,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)=$J("",20)_"********** EFT DEPOSIT RECORDS **********"
"RTN","RCDPEM1",145,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)="  EFT DEPOSIT      EFT RECEIPT      POSTED AMOUNT"
"RTN","RCDPEM1",146,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)=" "
"RTN","RCDPEM1",147,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)="     TRACE #               PAYER NAME/ID"
"RTN","RCDPEM1",148,0)
 S CT=CT+1,Q="",$P(Q,"=",79)="",^TMP($J,"RCXM",CT)=Q
"RTN","RCDPEM1",149,0)
 S HD=1
"RTN","RCDPEM1",150,0)
 Q
"RTN","RCDPEM1",151,0)
 ;
"RTN","RCDPEM2")
0^121^B44182580
"RTN","RCDPEM2",1,0)
RCDPEM2 ;ALB/TMK - MANUAL ERA AND EFT MATCHING ;05-NOV-02
"RTN","RCDPEM2",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEM2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEM2",4,0)
 Q
"RTN","RCDPEM2",5,0)
MATCH1 ; Manually 'match' an ERA to an EFT
"RTN","RCDPEM2",6,0)
 N DA,DR,DIE,DIC,DIR,X,Y,RCEFT,RCERA,RCNAME,RCMATCH,RCQUIT,DUOUT,DTOUT
"RTN","RCDPEM2",7,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MATCH AN EFT DETAIL RECORD",!,"WITH AN ERA RECORD"
"RTN","RCDPEM2",8,0)
M1 S DIR("A")="SELECT THE UNMATCHED EFT TO MATCH TO AN ERA: "
"RTN","RCDPEM2",9,0)
 S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("S")="I '$P(^(0),U,8)"
"RTN","RCDPEM2",10,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",11,0)
 I $D(DUOUT)!$D(DTOUT)!(Y<0) G M1Q
"RTN","RCDPEM2",12,0)
 S RCEFT=+Y,RCEFT(0)=$G(^RCY(344.31,+Y,0))
"RTN","RCDPEM2",13,0)
 W !
"RTN","RCDPEM2",14,0)
 S DIC="^RCY(344.31,",DR="0",DA=RCEFT D EN^DIQ
"RTN","RCDPEM2",15,0)
 W !
"RTN","RCDPEM2",16,0)
 S DIR("A")="ARE YOU SURE THIS IS THE EFT YOU WANT TO MATCH?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",17,0)
 I $D(DUOUT)!$D(DTOUT) G M1Q
"RTN","RCDPEM2",18,0)
 I Y'=1 G M1
"RTN","RCDPEM2",19,0)
M12 S DIR("A")="SELECT THE UNMATCHED ERA TO MATCH TO EFT #"_RCEFT_": "
"RTN","RCDPEM2",20,0)
 S DIR(0)="PAO^RCY(344.4,:AEMQ",DIR("S")="I '$P(^(0),U,9),'$P(^(0),U,8)"
"RTN","RCDPEM2",21,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",22,0)
 I $D(DUOUT)!$D(DTOUT)!(Y<0) G M1Q
"RTN","RCDPEM2",23,0)
 S RCERA=+Y,RCERA(0)=$G(^RCY(344.4,+Y,0))
"RTN","RCDPEM2",24,0)
 W !
"RTN","RCDPEM2",25,0)
 S DIC="^RCY(344.4,",DR="0",DA=RCERA D EN^DIQ
"RTN","RCDPEM2",26,0)
 W !
"RTN","RCDPEM2",27,0)
 S DIR("A")="ARE YOU SURE THIS IS THE CORRECT ERA TO MATCH TO?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",28,0)
 I $D(DUOUT)!$D(DTOUT) G M1Q
"RTN","RCDPEM2",29,0)
 I Y'=1 G M12
"RTN","RCDPEM2",30,0)
 S RCMATCH=(+$P(RCERA(0),U,5)=+$P(RCEFT(0),U,7))
"RTN","RCDPEM2",31,0)
 S RCNAME=($P(RCERA(0),U,6)=$P(RCEFT(0),U,2))
"RTN","RCDPEM2",32,0)
 I 'RCMATCH!'RCNAME D  G:RCQUIT M1Q
"RTN","RCDPEM2",33,0)
 . N Z
"RTN","RCDPEM2",34,0)
 . S RCQUIT=0,Z=1
"RTN","RCDPEM2",35,0)
 . S DIR("A",1)="***WARNING***"
"RTN","RCDPEM2",36,0)
 . I 'RCNAME S Z=Z+1,DIR("A",Z)=$J("",3)_"> The payer names on these two records do not agree"
"RTN","RCDPEM2",37,0)
 . I 'RCMATCH S Z=Z+1,DIR("A",Z)=$J("",3)_"> The amount of payment on these two records do not agree"
"RTN","RCDPEM2",38,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A")="ARE YOU SURE YOU WANT TO MATCH THESE 2 RECORDS?: " W ! D ^DIR K DIR
"RTN","RCDPEM2",39,0)
 . I $S($D(DUOUT)!$D(DTOUT):1,Y'=1:1,1:0) S RCQUIT=1 Q
"RTN","RCDPEM2",40,0)
 S DIE="^RCY(344.4,",DR=".09////1",DA=RCERA D ^DIE
"RTN","RCDPEM2",41,0)
 I '$D(Y) S DIE="^RCY(344.31,",DR=".08////1;.1////"_RCERA,DA=RCEFT D ^DIE
"RTN","RCDPEM2",42,0)
 S DIR(0)="EA",DIR("A",1)="EFT #"_RCEFT_" WAS "_$S('$D(Y):"SUCCESSFULLY",1:"NOT")_" MATCHED TO ERA #"_RCERA,DIR("A")="PRESS RETURN TO CONTINUE: " D ^DIR K DIR
"RTN","RCDPEM2",43,0)
M1Q Q
"RTN","RCDPEM2",44,0)
 ;
"RTN","RCDPEM2",45,0)
MATCH2 ; Manually 'match' a 0-balance EFT to a paper EOB
"RTN","RCDPEM2",46,0)
 N DUOUT,DTOUT,DA,DR,DIE,DIC,DIR,X,Y,RCEFT,RCRCPT
"RTN","RCDPEM2",47,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MARK A 0-BALANCE EFT DETAIL RECORD",!,"AS MATCHED TO A PAPER EOB"
"RTN","RCDPEM2",48,0)
M2 S DIR("A")="SELECT THE UNMATCHED 0-BALANCE EFT TO MARK AS MATCHED TO PAPER EOB: "
"RTN","RCDPEM2",49,0)
 S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("S")="I '$P(^(0),U,8),'$P(^(0),U,7)"
"RTN","RCDPEM2",50,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",51,0)
 I $D(DUOUT)!$D(DTOUT)!(Y'>0) G M2Q
"RTN","RCDPEM2",52,0)
 S RCEFT=+Y
"RTN","RCDPEM2",53,0)
 W !
"RTN","RCDPEM2",54,0)
 S DIC="^RCY(344.31,",DR="0",DA=RCEFT D EN^DIQ
"RTN","RCDPEM2",55,0)
 W !
"RTN","RCDPEM2",56,0)
 S DIR("A")="ARE YOU SURE THIS IS THE EFT YOU WANT TO MARK AS MATCHED?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",57,0)
 I $D(DUOUT)!$D(DTOUT) G M2Q
"RTN","RCDPEM2",58,0)
 I Y'=1 G M2
"RTN","RCDPEM2",59,0)
 S DIE="^RCY(344.31,",DR=".08////2",DA=RCEFT D ^DIE
"RTN","RCDPEM2",60,0)
 S DIR(0)="EA",DIR("A")="EFT #"_RCEFT_" WAS "_$S('$D(Y):"SUCCESSFULLY",1:"NOT")_" MARKED AS MATCHED TO PAPER EOB" D ^DIR K DIR
"RTN","RCDPEM2",61,0)
M2Q Q
"RTN","RCDPEM2",62,0)
 ;
"RTN","RCDPEM2",63,0)
POSTMAN ; Mark an ERA/check combination as posted manually
"RTN","RCDPEM2",64,0)
 N DA,DR,DIE,DIR,X,Y,RCERA,RCRECTDA,DUOUT,DTOUT
"RTN","RCDPEM2",65,0)
 ; ERA cannot have a receipt, been previously posted or be matched to
"RTN","RCDPEM2",66,0)
 ;  an EFT
"RTN","RCDPEM2",67,0)
 S DIR(0)="PA^RCY(344.4,:AEMQ",DIR("A")="SELECT THE ERA TO MARK AS MANUALLY POSTED: ",DIR("S")="I '$P(^(0),U,8),'$P(^(0),U,14),$P(^(0),U,9)'[""1"""
"RTN","RCDPEM2",68,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",69,0)
 I $D(DTOUT)!$D(DUOUT) G POSTQ
"RTN","RCDPEM2",70,0)
 S RCERA=+Y
"RTN","RCDPEM2",71,0)
 ; Receipt must be closed, not reference an ERA or EFT, must be a type 4
"RTN","RCDPEM2",72,0)
 S DIR(0)="PA^RCY(344,:AEMQ",DIR("A")="ENTER THE RECEIPT # THAT POSTED THE ERA DETAIL: ",DIR("S")="I '$P(^(0),U,14),'$P(^(0),U,18),'$P(^(0),U,17),$P(^(0),U,4)=$$CHK^RCDPEM2()"
"RTN","RCDPEM2",73,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",74,0)
 I $D(DTOUT)!$D(DUOUT) G POSTQ
"RTN","RCDPEM2",75,0)
 S RCRECTDA=+Y
"RTN","RCDPEM2",76,0)
 S DIR(0)="YA",DIR("B")="NO",DIR("A",1)="THIS WILL MARK ERA #: "_RCERA_" AS MANUALLY POSTED ON RECEIPT: "_$P($G(^RCY(344,+RCRECTDA,0)),U)
"RTN","RCDPEM2",77,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE?: " W ! D ^DIR K DIR
"RTN","RCDPEM2",78,0)
 I Y'=1 D  G POSTQ
"RTN","RCDPEM2",79,0)
 . S DIR(0)="EA",DIR("A")="ERA NOT UPDATED - PLEASE PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR
"RTN","RCDPEM2",80,0)
 S DIE="^RCY(344.4,",DA=RCERA,DR=".08////"_RCRECTDA_";.14////2" D ^DIE
"RTN","RCDPEM2",81,0)
 S DIE="^RCY(344,",DA=RCRECTDA,DR=".18////"_RCERA D ^DIE
"RTN","RCDPEM2",82,0)
 S DIR(0)="EA",DIR("A")="POSTED STATUS UPDATED FOR ERA #: "_RCERA_" - PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR
"RTN","RCDPEM2",83,0)
POSTQ Q
"RTN","RCDPEM2",84,0)
 ;
"RTN","RCDPEM2",85,0)
CHK() ; Function returns the ien of CHECK/MO payment type
"RTN","RCDPEM2",86,0)
 Q +$O(^RC(341.1,"AC",4,0))
"RTN","RCDPEM2",87,0)
 ;
"RTN","RCDPEM2",88,0)
POSTED ; Mark an ERA as posted when the data was previously posted using
"RTN","RCDPEM2",89,0)
 ; paper EOB information
"RTN","RCDPEM2",90,0)
 N DIC,DIE,DIR,DA,DR,X,Y
"RTN","RCDPEM2",91,0)
 ; Must be unmatched or matched to paper check, must not already have a receipt, must not be posted yet and must have an amount to post
"RTN","RCDPEM2",92,0)
 W !!,"THIS OPTION IS USED WHEN YOU HAVE POSTED AN ERA PAID WITH A PAPER CHECK",!,"BY USING THE PAPER EOB AND YOU DID NOT REFERENCE THE ERA IN THE RECEIPT",!!
"RTN","RCDPEM2",93,0)
 S DIC("S")="I ""02""[+$P(^(0),U,9),'$P(^(0),U,8),$P(^(0),U,14)=0,$P(^(0),U,5)",DIC="^RCY(344.4,",DIC(0)="AEMQ"
"RTN","RCDPEM2",94,0)
 D ^DIC K DIC
"RTN","RCDPEM2",95,0)
 ;
"RTN","RCDPEM2",96,0)
 I Y'>0 G POSTEDQ
"RTN","RCDPEM2",97,0)
 ;
"RTN","RCDPEM2",98,0)
 S DIE="^RCY(344.4,",DR=".08;I X="""" S Y=""@99"";.09////2;.14////2;20.03////1;@99",DA=+Y D ^DIE
"RTN","RCDPEM2",99,0)
 I '$D(Y) D
"RTN","RCDPEM2",100,0)
 . S DIR(0)="EA",DIR("A",1)="ERA HAS BEEN MARKED AS POSTED USING PAPER EOB",DIR("A")="PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEM2",101,0)
 ;
"RTN","RCDPEM2",102,0)
POSTEDQ Q
"RTN","RCDPEM2",103,0)
 ;
"RTN","RCDPEM2",104,0)
MATCH3 ; Manually 'match' a 0-balance ERA that has no check or EFT
"RTN","RCDPEM2",105,0)
 N DUOUT,DTOUT,DA,DR,DIE,DIC,DIR,X,Y,RCERA,RCRCPT
"RTN","RCDPEM2",106,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MARK A 0-BALANCE ERA WITH NO",!,"CHECK OR EFT AS 'MATCH-0 PAYMENT' TO REMOVE IT FROM THE ERA AGING REPORT"
"RTN","RCDPEM2",107,0)
M3 S DIR("A")="SELECT THE UNMATCHED 0-BALANCE ERA TO MARK AS MATCHED: "
"RTN","RCDPEM2",108,0)
 S DIR(0)="PAO^RCY(344.4,:AEMQ",DIR("S")="I '$P(^(0),U,9),'$P(^(0),U,5)"
"RTN","RCDPEM2",109,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",110,0)
 I $D(DUOUT)!$D(DTOUT)!(Y'>0) G M3Q
"RTN","RCDPEM2",111,0)
 S RCERA=+Y
"RTN","RCDPEM2",112,0)
 W !
"RTN","RCDPEM2",113,0)
 S DIC="^RCY(344.4,",DR="0",DA=RCERA D EN^DIQ
"RTN","RCDPEM2",114,0)
 W !
"RTN","RCDPEM2",115,0)
 S DIR("A")="ARE YOU SURE THIS IS THE ERA YOU WANT TO MARK AS MATCH-0 PAYMENT?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",116,0)
 I $D(DUOUT)!$D(DTOUT) G M3Q
"RTN","RCDPEM2",117,0)
 I Y'=1 G M3
"RTN","RCDPEM2",118,0)
 S DIE="^RCY(344.4,",DR=".09////3",DA=RCERA D ^DIE
"RTN","RCDPEM2",119,0)
 S DIR(0)="EA",DIR("A")="ERA #"_RCERA_" WAS "_$S('$D(Y):"SUCCESSFULLY",1:"NOT")_" MARKED AS MATCH-0 PAYMENT" D ^DIR K DIR
"RTN","RCDPEM2",120,0)
M3Q Q
"RTN","RCDPEM2",121,0)
 ;
"RTN","RCDPEM2",122,0)
UNMATCH ; Used to 'unmatch' an ERA matched in error
"RTN","RCDPEM2",123,0)
 N X,Y,DIR,DIC,DIE,DIK,DA,DR,RCWL,RCEFT,RCQUIT
"RTN","RCDPEM2",124,0)
 S DIC(0)="AEMQ",DIC="^RCY(344.4,",DIC("S")="I '$P(^(0),U,8),$S('$P(^(0),U,14):1,1:$P(^(0),U,9)=3),$P(^(0),U,9)" D ^DIC K DIC
"RTN","RCDPEM2",125,0)
 Q:Y'>0
"RTN","RCDPEM2",126,0)
 S RCWL=+Y,RCQUIT=0
"RTN","RCDPEM2",127,0)
 I $D(^RCY(344.49,RCWL,0)) D  Q:RCQUIT
"RTN","RCDPEM2",128,0)
 . S DIR(0)="YA",DIR("A",1)="THIS ERA ALREADY HAS A WORKLIST ENTRY AND MUST BE DELETED BEFORE IT CAN BE UNMATCHED",DIR("A")="DO YOU WANT TO DELETE THE WORKLIST ENTRY FOR THIS ERA NOW?: "
"RTN","RCDPEM2",129,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEM2",130,0)
 . I Y'=1 S RCQUIT=1 Q
"RTN","RCDPEM2",131,0)
 . S DIK="^RCY(344.49,",DA=RCWL D ^DIK
"RTN","RCDPEM2",132,0)
 I $O(^RCY(344.31,"AERA",RCWL,0)) S RCEFT=+$O(^(0)) D  Q:RCQUIT
"RTN","RCDPEM2",133,0)
 . S DIR("A",1)="THIS ERA IS MATCHED TO EFT #"_RCEFT,DIR("A")="ARE YOU SURE YOU WANT TO UNMATCH THEM?: ",DIR(0)="YA"
"RTN","RCDPEM2",134,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEM2",135,0)
 . I Y'=1 S RCQUIT=1 Q
"RTN","RCDPEM2",136,0)
 . S DIE="^RCY(344.31,",DR=".1///@;.08////0",DA=RCEFT D ^DIE
"RTN","RCDPEM2",137,0)
 . W !,"EFT #"_RCEFT_" IS NOW UNMATCHED",!
"RTN","RCDPEM2",138,0)
 S DIE="^RCY(344.4,",DR=".09////0;.14////0",DA=RCWL D ^DIE
"RTN","RCDPEM2",139,0)
 S DIR("A")="ERA HAS BEEN SUCCESSFULLY UNMATCHED - PRESS RETURN TO CONTINUE "
"RTN","RCDPEM2",140,0)
 S DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEM2",141,0)
 Q
"RTN","RCDPEM2",142,0)
 ;
"RTN","RCDPESR0")
0^83^B53739249
"RTN","RCDPESR0",1,0)
RCDPESR0 ;ALB/TMK - Server auto-update utilities - EDI Lockbox ;06/03/02
"RTN","RCDPESR0",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPESR0",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPESR0",4,0)
 ; IA for read access to ^IBM(361.1 = 4051
"RTN","RCDPESR0",5,0)
 ;
"RTN","RCDPESR0",6,0)
DISP(RCMIN,RCMOUT,RCFMT,RCFULL,RCW,RC3444) ; Format the 835 return msg
"RTN","RCDPESR0",7,0)
 ; RCMIN = the name of the array that contains the raw message data
"RTN","RCDPESR0",8,0)
 ;         The data is contained at the next level and the subscript is
"RTN","RCDPESR0",9,0)
 ;         numeric and greater than 0 or the data can be at the
"RTN","RCDPESR0",10,0)
 ;         0-node subsequent to the final subscript.
"RTN","RCDPESR0",11,0)
 ;         If the message array is a global ^TMP($J,"MSG",n), RCMIN
"RTN","RCDPESR0",12,0)
 ;         will equal "^TMP($J,""MSG"")" and the message text will be
"RTN","RCDPESR0",13,0)
 ;         in ^TMP($J,"MSG",1), ^TMP($J,"MSG",2), etc.  OR
"RTN","RCDPESR0",14,0)
 ;         the message text can be defined at TMP($J,"MSG",1,0) ^...,2,0)
"RTN","RCDPESR0",15,0)
 ;         etc.
"RTN","RCDPESR0",16,0)
 ; RCMOUT = the name of the array that should be returned.  This array
"RTN","RCDPESR0",17,0)
 ;          will follow the same convention as the input array.  The
"RTN","RCDPESR0",18,0)
 ;          array will be returned with a numeric final subscript.  If
"RTN","RCDPESR0",19,0)
 ;          RCMOUT is passed as "^TMP($J,""MSG1"")", then the display
"RTN","RCDPESR0",20,0)
 ;          lines will be returned in ^TMP($J,"MSG1",1),
"RTN","RCDPESR0",21,0)
 ;          ^TMP($J,"MSG1",2), etc.  Note the array RCMOUT is killed
"RTN","RCDPESR0",22,0)
 ;          on entry to this call
"RTN","RCDPESR0",23,0)
 ; RCFMT = 0 or null if call should return raw data, 1 to execute the
"RTN","RCDPESR0",24,0)
 ;         transforms attached to the fields
"RTN","RCDPESR0",25,0)
 ; RCFULL = the name of an array if the data should be returned in
"RTN","RCDPESR0",26,0)
 ;          this array, formatted into lines for display.  If not sent,
"RTN","RCDPESR0",27,0)
 ;          only the display data by element is returned in RCMOUT.  If
"RTN","RCDPESR0",28,0)
 ;          RCFULL is sent, the array is killed before populating it
"RTN","RCDPESR0",29,0)
 ; RCW = max # of characters per line to return in array RCFULL
"RTN","RCDPESR0",30,0)
 ; RC3444 = flag that indicates only return bill data, not header data
"RTN","RCDPESR0",31,0)
 ;
"RTN","RCDPESR0",32,0)
 N Z,Z0,Z1,RC,RCCT,RCREF,RCDATA,RCQ,R
"RTN","RCDPESR0",33,0)
 S RCCT=0,RCREF="" K @RCMOUT
"RTN","RCDPESR0",34,0)
 S Z=0 F  S Z=$O(@RCMIN@(Z)) Q:'Z  S Z0=$S($G(@RCMIN@(Z))'="":@RCMIN@(Z),1:$G(@RCMIN@(Z,0))) I Z0'="" S RCQ=0 D
"RTN","RCDPESR0",35,0)
 . F Z1=1:1:$L(Z0,U) I $P(Z0,U,Z1)'="" D  Q:RCQ
"RTN","RCDPESR0",36,0)
 .. S RCDATA=$P(Z0,U,Z1)
"RTN","RCDPESR0",37,0)
 .. I Z1=1 D  Q:RCQ
"RTN","RCDPESR0",38,0)
 ... S RC=""
"RTN","RCDPESR0",39,0)
 ... I RCDATA'="",RCDATA?.N.A D
"RTN","RCDPESR0",40,0)
 .... S RCREF=$S($E(RCDATA,1,3)'="835":$E(RCDATA,1,8),1:"835"),R=RCREF_"^RCDPESR9",RC=$P($T(@R),";;",2)
"RTN","RCDPESR0",41,0)
 ... I RC="" S RCCT=RCCT+1,@RCMOUT@(RCCT)="<<<INVALID LINE TYPE - RAW DATA IS:",RCCT=RCCT+1,@RCMOUT@(RCCT)=Z0,RCDATA=""
"RTN","RCDPESR0",42,0)
 .. Q:RCDATA=""!(RCREF="")!$S(RCREF="835":$G(RC3444),1:0)
"RTN","RCDPESR0",43,0)
 .. S RC=""
"RTN","RCDPESR0",44,0)
 .. I RCREF?.A.N D
"RTN","RCDPESR0",45,0)
 ... S R=RCREF_"+"_Z1_"^RCDPESR9",RC=$P($T(@R),";;",2)
"RTN","RCDPESR0",46,0)
 .. I RC=""!($P(RC,U)'=RCREF) S:$S(RCDATA'="":1,1:'$P(RC,U,2)) RCCT=RCCT+1,@RCMOUT@(RCCT)="NO DATA DEFINITION PC "_Z1_": "_RCDATA Q
"RTN","RCDPESR0",47,0)
 .. I RC'="" D
"RTN","RCDPESR0",48,0)
 ... N X,X1,Y
"RTN","RCDPESR0",49,0)
 ... S X1=$P(RC,U,4,99)
"RTN","RCDPESR0",50,0)
 ... I $G(RCFMT),X1'="" S X=RCDATA X X1 S RCDATA=Y ; Output transform
"RTN","RCDPESR0",51,0)
 ... Q:RCDATA=""&($P(RC,U,2))  ; Don't output if null data
"RTN","RCDPESR0",52,0)
 ... S RC=$P(RC,U,3)
"RTN","RCDPESR0",53,0)
 ... S RCCT=RCCT+1,@RCMOUT@(RCCT)=$S(Z1=1:"<<<",1:"")_RC_": "_RCDATA_$S(Z1=1:">>>",1:"")
"RTN","RCDPESR0",54,0)
 I $G(RCFULL)'="" D FMTDSP(RCMOUT,RCFULL,$G(RCW),$G(RC3444))
"RTN","RCDPESR0",55,0)
 Q
"RTN","RCDPESR0",56,0)
 ;
"RTN","RCDPESR0",57,0)
FMTDSP(RCMUN,RCMFO,RCW,RCNOH05) ; Format the display data in array named in
"RTN","RCDPESR0",58,0)
 ; RCMUN into lines up to RCW characters wide  RCMUN must be set up the
"RTN","RCDPESR0",59,0)
 ; same as the output of the DISP call above
"RTN","RCDPESR0",60,0)
 ; Returns array named in RCMFO with the last subscript being the line #
"RTN","RCDPESR0",61,0)
 ; Note @RCMFO is killed on entry to this call
"RTN","RCDPESR0",62,0)
 ; Default is 80 if RCW=0 or null
"RTN","RCDPESR0",63,0)
 ; RCNOH05 = flag that if =1, suppresses the '05' header
"RTN","RCDPESR0",64,0)
 ;
"RTN","RCDPESR0",65,0)
 N Z,RCLINE,RCCT,RCCT1,RCMID,RCD,RCSTART,RCLINE,RCDASH
"RTN","RCDPESR0",66,0)
 K @RCMFO
"RTN","RCDPESR0",67,0)
 S:'$G(RCW) RCW=80
"RTN","RCDPESR0",68,0)
 S RCDASH=" "_$TR($J("",RCW-2)," ","-")
"RTN","RCDPESR0",69,0)
 S (RCCT,RCCT1)=0,RCLINE="",RCMID=RCW\2-1
"RTN","RCDPESR0",70,0)
 S Z=0 F  S Z=$O(@RCMUN@(Z)) Q:'Z  S RCD=$G(@RCMUN@(Z)) D
"RTN","RCDPESR0",71,0)
 . I $E(RCD,1,3)="<<<" D  Q  ; New line needed ... record start
"RTN","RCDPESR0",72,0)
 .. I $L(RCLINE)>0 S RCCT=RCCT+1,@RCMFO@(RCCT)=RCLINE,RCLINE=""
"RTN","RCDPESR0",73,0)
 .. I $L(RCLINE)=0 D
"RTN","RCDPESR0",74,0)
 ... I Z>1 S RCCT=RCCT+1,@RCMFO@(RCCT)=" "
"RTN","RCDPESR0",75,0)
 ... I RCD["<<<Line Type: 05 ",'$G(RCNOH05) S RCCT1=RCCT1+1,RCCT=RCCT+1,@RCMFO@(RCCT)=RCDASH,RCCT=RCCT+1,@RCMFO@(RCCT)="****** ERA DETAIL START ******",RCCT=RCCT+1,@RCMFO@(RCCT)=RCDASH
"RTN","RCDPESR0",76,0)
 ... I $L(RCD)>RCW D  Q
"RTN","RCDPESR0",77,0)
 .... S RCSTART=1
"RTN","RCDPESR0",78,0)
 .... F  S RCCT=RCCT+1,@RCMFO@(RCCT)=$E(RCD,RCSTART,RCSTART+RCW-1),RCSTART=RCSTART+RCW Q:RCSTART>$L(RCD)
"RTN","RCDPESR0",79,0)
 ... S RCCT=RCCT+1,@RCMFO@(RCCT)=RCD
"RTN","RCDPESR0",80,0)
 . ;
"RTN","RCDPESR0",81,0)
 . I $L(RCD)>RCW D  Q  ; Split line if greater than width given
"RTN","RCDPESR0",82,0)
 .. I $L(RCLINE) S RCCT=RCCT+1,@RCMFO@(RCCT)=RCLINE
"RTN","RCDPESR0",83,0)
 .. S RCSTART=1
"RTN","RCDPESR0",84,0)
 .. F  S RCCT=RCCT+1,@RCMFO@(RCCT)=$E(RCD,RCSTART,RCSTART+RCW-1),RCSTART=RCSTART+RCW Q:RCSTART>$L(RCD)
"RTN","RCDPESR0",85,0)
 .. S RCLINE=""
"RTN","RCDPESR0",86,0)
 . I $L(RCLINE)=0 D  Q  ; Format left side of line
"RTN","RCDPESR0",87,0)
 .. S RCLINE=RCD
"RTN","RCDPESR0",88,0)
 .. ;
"RTN","RCDPESR0",89,0)
 .. I $L(RCLINE)>RCMID S RCCT=RCCT+1,@RCMFO@(RCCT)=RCLINE,RCLINE=""
"RTN","RCDPESR0",90,0)
 . ;
"RTN","RCDPESR0",91,0)
 . I (RCMID+$L(RCD)+1)>RCW D  Q  ; data too long for right side of line
"RTN","RCDPESR0",92,0)
 .. S RCCT=RCCT+1,@RCMFO@(RCCT)=RCLINE,RCLINE=""
"RTN","RCDPESR0",93,0)
 . S RCLINE=$E(RCLINE_$J("",RCMID),1,RCMID)_"  "_RCD,RCCT=RCCT+1,@RCMFO@(RCCT)=RCLINE,RCLINE=""
"RTN","RCDPESR0",94,0)
 I $L(RCLINE) S RCCT=RCCT+1,@RCMFO@(RCCT)=RCLINE
"RTN","RCDPESR0",95,0)
 Q
"RTN","RCDPESR0",96,0)
 ;
"RTN","RCDPESR0",97,0)
BULLERA(RC,RCTDA,RCXMG,RCSUBJ,RCERR,RCTYP) ; Send a bulletin for entries in 344.5
"RTN","RCDPESR0",98,0)
 ; RC = flags for data to include (one or more can can be used)
"RTN","RCDPESR0",99,0)
 ;   'D': display text   'R': raw data    'F': formatted data from raw
"RTN","RCDPESR0",100,0)
 ;        data in file 344.5
"RTN","RCDPESR0",101,0)
 ; RCTDA = ien of the entry in file 344.5
"RTN","RCDPESR0",102,0)
 ; RCXMG = mail msg # for the ERA
"RTN","RCDPESR0",103,0)
 ; RCSUBJ = subject of the bulletin 
"RTN","RCDPESR0",104,0)
 ; RCERR = error text in array or name of error global
"RTN","RCDPESR0",105,0)
 ; RCTYP = if 0:ERA  1:EEOB
"RTN","RCDPESR0",106,0)
 ;
"RTN","RCDPESR0",107,0)
 N XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,XMZ,XMERR,Z,Z0,CT,RCXM,RCVAR
"RTN","RCDPESR0",108,0)
 K ^TMP("RCXM_344.5",$J)
"RTN","RCDPESR0",109,0)
 S RCERR=$G(RCERR)
"RTN","RCDPESR0",110,0)
 S RCVAR=$S($E(RCERR,1,5)="^TMP(":RCERR,1:"RCERR")
"RTN","RCDPESR0",111,0)
 S XMTO("I:G.RCDPE PAYMENTS EXCEPTIONS")="",CT=0,RCTYP=$S('$G(RCTYP):"ERA",1:"EEOB")
"RTN","RCDPESR0",112,0)
 S CT=CT+1,^TMP("RCXM_344.5",$J,CT)="The following electronic "_RCTYP_" was received at your site.",CT=CT+1,^TMP("RCXM_344.5",$J,CT)="It was received on: "_$$FMTE^XLFDT($$NOW^XLFDT(),2)_" in mail msg # "_RCXMG_"."
"RTN","RCDPESR0",113,0)
 S CT=CT+1,^TMP("RCXM_344.5",$J,CT)="This message is sent to alert you to conditions regarding this "_RCTYP_".",CT=CT+1,^TMP("RCXM_344.5",$J,CT)=" "
"RTN","RCDPESR0",114,0)
 I RC["D" D DTXT(RCTDA,.RCXM,.CT) M ^TMP("RCXM_344.5",$J)=RCXM K RCXM
"RTN","RCDPESR0",115,0)
 S Z=0 F  S Z=$O(@RCVAR@(Z)) Q:'Z  I $D(@RCVAR@(Z,"*")) S CT=CT+1,^TMP("RCXM_344.5",$J,CT)=@RCVAR@(Z,"*")
"RTN","RCDPESR0",116,0)
 I $G(RCERR)'="",RCVAR="RCERR" S CT=CT+1,^TMP("RCXM_344.5",$J,CT)=RCERR,CT=CT+1,^TMP("RCXM_344.5",$J,CT)=" "
"RTN","RCDPESR0",117,0)
 I $O(@RCVAR@(""))'="" D
"RTN","RCDPESR0",118,0)
 . S Z="" F  S Z=$O(@RCVAR@(Z)) Q:Z=""  D
"RTN","RCDPESR0",119,0)
 .. I $G(@RCVAR@(Z))'="" S CT=CT+1,^TMP("RCXM_344.5",$J,CT)=@RCVAR@(Z)
"RTN","RCDPESR0",120,0)
 .. I $O(@RCVAR@(Z,0)) S Z0="" F  S Z0=$O(@RCVAR@(Z,Z0)) Q:Z0=""  I Z0'="*" S CT=CT+1,^TMP("RCXM_344.5",$J,CT)=@RCVAR@(Z,Z0)
"RTN","RCDPESR0",121,0)
 I RC["F" D
"RTN","RCDPESR0",122,0)
 . N RCCT1
"RTN","RCDPESR0",123,0)
 . S RCCT1=0
"RTN","RCDPESR0",124,0)
 . K ^TMP($J,"PRCAZ_RAW"),^TMP($J,"PRCAZ_FMT1"),^TMP($J,"PRCAZ_FMT")
"RTN","RCDPESR0",125,0)
 . D DISP("^RCY(344.5,"_RCTDA_",2)","^TMP($J,""PRCAZ_FMT1"")",1,"^TMP($J,""PRCAZ_FMT"")",75)
"RTN","RCDPESR0",126,0)
 . S CT=CT+1,^TMP("RCXM_344.5",$J,CT)="FORMATTED DATA: "
"RTN","RCDPESR0",127,0)
 . S Z=0 F  S Z=$O(^TMP($J,"PRCAZ_FMT",Z)) Q:'Z  S CT=CT+1,^TMP("RCXM_344.5",$J,CT)=^TMP($J,"PRCAZ_FMT",Z)
"RTN","RCDPESR0",128,0)
 . S:RC["R" CT=CT+1,^TMP("RCXM_344.5",$J,CT)=" "
"RTN","RCDPESR0",129,0)
 I RC["R" D
"RTN","RCDPESR0",130,0)
 . S CT=CT+1,^TMP("RCXM_344.5",$J,CT)="RAW DATA: "
"RTN","RCDPESR0",131,0)
 . S Z=0 F  S Z=$O(^RCY(344.5,RCTDA,2,Z)) Q:'Z  S CT=CT+1,^TMP("RCXM_344.5",$J,CT)=$G(^RCY(344.5,RCTDA,2,Z,0))
"RTN","RCDPESR0",132,0)
 S XMBODY="^TMP(""RCXM_344.5"",$J)"
"RTN","RCDPESR0",133,0)
 D
"RTN","RCDPESR0",134,0)
 . N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPESR0",135,0)
 . D SENDMSG^XMXAPI(.5,RCSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPESR0",136,0)
 K ^TMP($J,"PRCAZ_RAW"),^TMP($J,"PRCAZ_FMT1"),^TMP($J,"PRCAZ_FMT"),^TMP("RCXM_344.5",$J)
"RTN","RCDPESR0",137,0)
 Q
"RTN","RCDPESR0",138,0)
 ;
"RTN","RCDPESR0",139,0)
BULLEFT(RCTDA,RCXMG,RCSUBJ,RCERR) ; Send a bulletin for 'bad' EFT entries
"RTN","RCDPESR0",140,0)
 ; RCTDA = ien of the entry in file 344.3
"RTN","RCDPESR0",141,0)
 ; RCXMG = mail msg # for the EFT
"RTN","RCDPESR0",142,0)
 ; RCSUBJ = subject of the bulletin 
"RTN","RCDPESR0",143,0)
 ; RCERR = error text in array
"RTN","RCDPESR0",144,0)
 N XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,RCXM,XMZ,XMERR,Z,Z0,CT
"RTN","RCDPESR0",145,0)
 S XMTO("I:G.RCDPE PAYMENTS EXCEPTIONS")="",CT=0
"RTN","RCDPESR0",146,0)
 S CT=CT+1,RCXM(CT)="The following electronic EFT deposit was received at your site.",CT=CT+1,RCXM(CT)="It was received on: "_$$FMTE^XLFDT($$NOW^XLFDT(),2)_" in mail msg # "_RCXMG_"."
"RTN","RCDPESR0",147,0)
 S CT=CT+1,RCXM(CT)="This message is sent to alert you to conditions regarding this EFT.",CT=CT+1,RCXM(CT)=" "
"RTN","RCDPESR0",148,0)
 I $G(RCERR)'="" S CT=CT+1,RCXM(CT)=RCERR,CT=CT+1,RCXM(CT)=" "
"RTN","RCDPESR0",149,0)
 I $O(RCERR(""))'="" D
"RTN","RCDPESR0",150,0)
 . S Z="" F  S Z=$O(RCERR(Z)) Q:Z=""  D
"RTN","RCDPESR0",151,0)
 .. I $G(RCERR(Z))'="" S CT=CT+1,RCXM(CT)=RCERR(Z)
"RTN","RCDPESR0",152,0)
 .. I $O(RCERR(Z,0)) S Z0="" F  S Z0=$O(RCERR(Z,Z0)) Q:Z0=""  S CT=CT+1,RCXM(CT)=RCERR(Z,Z0)
"RTN","RCDPESR0",153,0)
 S XMBODY="RCXM"
"RTN","RCDPESR0",154,0)
 D
"RTN","RCDPESR0",155,0)
 . N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPESR0",156,0)
 . D SENDMSG^XMXAPI(.5,RCSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPESR0",157,0)
 Q
"RTN","RCDPESR0",158,0)
 ;
"RTN","RCDPESR0",159,0)
DTXT(RCTDA,RCXM,RCNT) ; Add display text to array RCXM(CT)
"RTN","RCDPESR0",160,0)
 ; RCTDA = ien of entry in file 344.5
"RTN","RCDPESR0",161,0)
 ; Send RCNT and RCXM by reference for return values
"RTN","RCDPESR0",162,0)
 N RCDIQ
"RTN","RCDPESR0",163,0)
 D GETS^DIQ(344.5,RCTDA_",",1,"EN","RCDIQ")
"RTN","RCDPESR0",164,0)
 D TXTDE^RCDPEX(RCTDA,.RCDIQ,1,.RCXM,.RCNT)
"RTN","RCDPESR0",165,0)
 Q
"RTN","RCDPESR0",166,0)
 ;
"RTN","RCDPESR0",167,0)
BILLREF(RC3444,RC34441) ; Returns the bill # for the EOB in file 344.4, entry
"RTN","RCDPESR0",168,0)
 ; number RC3444 and subfile entry RC34441
"RTN","RCDPESR0",169,0)
 N RCARR
"RTN","RCDPESR0",170,0)
 D DIQ34441^RCDPEDS(RC3444,RC34441,99,"RCARR")
"RTN","RCDPESR0",171,0)
 Q $G(RCARR(344.41,RC34441,99,"E"))
"RTN","RCDPESR0",172,0)
 ;
"RTN","RCDPESR0",173,0)
GETBILL(DA) ; Called from computed field to find bill reference
"RTN","RCDPESR0",174,0)
 ;  Assumes DA(1)= ien of file 344.4,  DA = ien of file 344.41
"RTN","RCDPESR0",175,0)
 N Z,VAL
"RTN","RCDPESR0",176,0)
 S Z=$G(^RCY(344.4,DA(1),1,DA,0))
"RTN","RCDPESR0",177,0)
 I $P(Z,U,2) S VAL=$$BN1^PRCAFN(+$G(^IBM(361.1,+$P(Z,U,2),0))) ; IA 4051
"RTN","RCDPESR0",178,0)
 I $G(VAL)="" S VAL=$P(Z,U,5)
"RTN","RCDPESR0",179,0)
 Q VAL
"RTN","RCDPESR0",180,0)
 ;
"RTN","RCDPESR1")
0^84^B44106955
"RTN","RCDPESR1",1,0)
RCDPESR1 ;ALB/TMP - Server interface to AR from Austin ;06/03/02
"RTN","RCDPESR1",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPESR1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPESR1",4,0)
 Q
"RTN","RCDPESR1",5,0)
 ;
"RTN","RCDPESR1",6,0)
PERROR(RCERR,RCEMG,RCXMZ) ; Process Errors - Send bulletin to mail group
"RTN","RCDPESR1",7,0)
 ; RCERR = Error text array
"RTN","RCDPESR1",8,0)
 ; RCEMG = name of the mail group to which these errors should be sent
"RTN","RCDPESR1",9,0)
 ; RCXMZ = internal entry # of the mailman msg
"RTN","RCDPESR1",10,0)
 ; RCTYPE = msg type, if known
"RTN","RCDPESR1",11,0)
 N CT,XMDUZ,XMSUBJ,XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,RCXM,XMZ,XMERR,Z
"RTN","RCDPESR1",12,0)
 ;
"RTN","RCDPESR1",13,0)
 S CT=0
"RTN","RCDPESR1",14,0)
 ;
"RTN","RCDPESR1",15,0)
 I $G(RCEMG)="" S CT=CT+1,RCXM(CT)=$P($T(ERROR+2),";;",2),XMTO(.5)=""
"RTN","RCDPESR1",16,0)
 ;
"RTN","RCDPESR1",17,0)
 I $D(RCEMG) D
"RTN","RCDPESR1",18,0)
 . S:RCEMG="" RCEMG="RCDPE PAYMENTS EXCEPTIONS"
"RTN","RCDPESR1",19,0)
 . S:$E(RCEMG,1,2)'="G." RCEMG="G."_RCEMG
"RTN","RCDPESR1",20,0)
 . S XMTO("I:"_RCEMG)=""
"RTN","RCDPESR1",21,0)
 ;
"RTN","RCDPESR1",22,0)
 S Z=$O(XMTO("")) I Z=.5,'$O(XMTO(.5)) S XMTO("I:G.RCDPE PAYMENTS EXCEPTIONS")=""
"RTN","RCDPESR1",23,0)
 D EMFORM(CT,.RCERR,.RCXM,RCXMZ)
"RTN","RCDPESR1",24,0)
 ;
"RTN","RCDPESR1",25,0)
 S XMDUZ=""
"RTN","RCDPESR1",26,0)
 S XMSUBJ="EDI LBOX SERVER OPTION ERROR",XMBODY="RCXM"
"RTN","RCDPESR1",27,0)
 D
"RTN","RCDPESR1",28,0)
 . N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPESR1",29,0)
 . D SENDMSG^XMXAPI(.5,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPESR1",30,0)
 K ^TMP("RCRAW",$J)
"RTN","RCDPESR1",31,0)
 Q
"RTN","RCDPESR1",32,0)
 ;
"RTN","RCDPESR1",33,0)
EMFORM(CT,RCERR,RCXM,RCXMZ) ; Format error msgs
"RTN","RCDPESR1",34,0)
 ; INPUT:
"RTN","RCDPESR1",35,0)
 ;   CT = # of lines previously populated in error msg
"RTN","RCDPESR1",36,0)
 ;   RCERR = array of errors
"RTN","RCDPESR1",37,0)
 ;   RCXMZ = internal entry # of mailman msg
"RTN","RCDPESR1",38,0)
 ;
"RTN","RCDPESR1",39,0)
 ; OUTPUT:
"RTN","RCDPESR1",40,0)
 ;   RCXM = array containing the complete error msg text
"RTN","RCDPESR1",41,0)
 ;
"RTN","RCDPESR1",42,0)
 N TTYPE,TDATE,TTIME,Z
"RTN","RCDPESR1",43,0)
 ;
"RTN","RCDPESR1",44,0)
 S TDATE=$G(^TMP("RCERR",$J,"DATE")),TTIME=$P(TDATE,".",2)_"000000",TDATE=$$FMTE^XLFDT($P(TDATE,"."),"2D")
"RTN","RCDPESR1",45,0)
 S TTYPE=$G(^TMP("RCMSG",$J))
"RTN","RCDPESR1",46,0)
 ;
"RTN","RCDPESR1",47,0)
 S CT=CT+1
"RTN","RCDPESR1",48,0)
 S RCXM(CT)="** AN EXCEPTION HAS BEEN DETECTED FOR AN EDI LOCKBOX RETURN MESSAGE **",CT=CT+1,RCXM(CT)=" "
"RTN","RCDPESR1",49,0)
 S CT=CT+1
"RTN","RCDPESR1",50,0)
 S RCXM(CT)="             Return Message Code: "_$S(TTYPE="":$S($G(^TMP("RCERR",$J,"TYPE"))'="":^("TYPE"),1:"Cannot be determined"),1:TTYPE)
"RTN","RCDPESR1",51,0)
 ;
"RTN","RCDPESR1",52,0)
 S CT=CT+2
"RTN","RCDPESR1",53,0)
 S RCXM(CT-1)=" ",RCXM(CT)=$J("",13)_"Return Message Date: "_TDATE_"    Message Time: "_$E(TTIME,1,2)_":"_$E(TTIME,3,4)_":"_$E(TTIME,5,6),CT=CT+1
"RTN","RCDPESR1",54,0)
 ;
"RTN","RCDPESR1",55,0)
 S CT=CT+2,RCXM(CT-1)=" ",RCXM(CT)=$J("",15)_"Mailman Message #: "_$G(RCXMZ)
"RTN","RCDPESR1",56,0)
 ;
"RTN","RCDPESR1",57,0)
 I $G(RCERR)'="",RCERR?1A.E S CT=CT+2,RCXM(CT-1)=" ",RCXM(CT)=RCERR
"RTN","RCDPESR1",58,0)
 I $G(^TMP("RCERR",$J,"TEXT"))'="" S CT=CT+2,RCXM(CT)=^("TEXT"),RCXM(CT-1)=" "
"RTN","RCDPESR1",59,0)
 ;
"RTN","RCDPESR1",60,0)
 S Z="" F  S Z=$O(RCERR(Z)) Q:Z=""  S:$G(^TMP("RCERR",$J,"TEXT"))="" CT=CT+1,RCXM(CT)=" " I $G(RCERR(Z))'="",RCERR(Z)'=" " S CT=CT+1,RCXM(CT)=RCERR(Z)
"RTN","RCDPESR1",61,0)
 S Z=0 F  S Z=$O(^TMP("RCERR",$J,"MSG",Z)) Q:'Z  S CT=CT+1,RCXM(CT)=^(Z)
"RTN","RCDPESR1",62,0)
 ;
"RTN","RCDPESR1",63,0)
 Q
"RTN","RCDPESR1",64,0)
 ;
"RTN","RCDPESR1",65,0)
EXTERR(RCERR,RCE) ; Put error into error array
"RTN","RCDPESR1",66,0)
 ; Returns: (must be passed by reference)
"RTN","RCDPESR1",67,0)
 ;   RCERR = specific error encountered, returned as 4
"RTN","RCDPESR1",68,0)
 ;   RCE = error text from the word processing field update error global
"RTN","RCDPESR1",69,0)
 N RCZ,Q
"RTN","RCDPESR1",70,0)
 S RCE="",RCERR=4 ; error reported as 'record was partially stored'
"RTN","RCDPESR1",71,0)
 S RCZ=0 F  S RCZ=$O(RCE("DIERR",RCZ)) Q:'RCZ  S Q=$G(RCE("DIERR",RCZ,"TEXT",1)) I $L(Q),$L(Q)+$L(RCE)<99 S RCE=RCE_Q_";;"
"RTN","RCDPESR1",72,0)
 Q
"RTN","RCDPESR1",73,0)
 ;
"RTN","RCDPESR1",74,0)
ERRUPD(RCGBL,RCD,RCTYPE,RCERR) ; Set up global array to hold msg data
"RTN","RCDPESR1",75,0)
 ; RCGBL = name of the global or array where msg data is found
"RTN","RCDPESR1",76,0)
 ; RCD = array containing mail header data for the msg
"RTN","RCDPESR1",77,0)
 ; RCTYPE = type of msg (835ERA/835XFR/etc)
"RTN","RCDPESR1",78,0)
 ; RCERR = error array - text or reference to error tables below
"RTN","RCDPESR1",79,0)
 ;
"RTN","RCDPESR1",80,0)
 ; Returns ^TMP("RCERR",$J,"MSG" array with formatted error text
"RTN","RCDPESR1",81,0)
 ;
"RTN","RCDPESR1",82,0)
 N Z,Z0,Z1,Z2,CT,RCE
"RTN","RCDPESR1",83,0)
 ;
"RTN","RCDPESR1",84,0)
 Q:$G(RCERR)<0
"RTN","RCDPESR1",85,0)
 K ^TMP("RCERR",$J)
"RTN","RCDPESR1",86,0)
 S CT=0
"RTN","RCDPESR1",87,0)
 ;
"RTN","RCDPESR1",88,0)
 S ^TMP("RCERR",$J,"DATE")=$G(RCD("DATE"))
"RTN","RCDPESR1",89,0)
 S ^TMP("RCERR",$J,"TYPE")=$G(RCTYPE)
"RTN","RCDPESR1",90,0)
 S ^TMP("RCERR",$J,"SUBJ")=$G(RCD("SUBJ"))
"RTN","RCDPESR1",91,0)
 ;
"RTN","RCDPESR1",92,0)
 I $G(RCERR)>0,RCERR<20 D
"RTN","RCDPESR1",93,0)
 . S Z="ERROR2+"_RCERR
"RTN","RCDPESR1",94,0)
 . S RCE=$P($T(@Z),";;",2)
"RTN","RCDPESR1",95,0)
 . I RCE'="" S ^TMP("RCERR",$J,"TEXT")=RCE
"RTN","RCDPESR1",96,0)
 ;
"RTN","RCDPESR1",97,0)
 S Z="" F  S Z=$O(RCERR(Z)) Q:Z=""  S Z0="" F  S Z0=$O(RCERR(Z,Z0)) Q:Z0=""  S RCE=$G(RCERR(Z,Z0)) D
"RTN","RCDPESR1",98,0)
 . I $L(RCE) S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=$S(RCE:$P($T(ERROR+RCE),";;",2),1:RCE)
"RTN","RCDPESR1",99,0)
 . S RCTYPE=$P($G(@RCGBL@(0)),U)
"RTN","RCDPESR1",100,0)
 . S:$G(^TMP("RCERR",$J,"TYPE"))="" ^("TYPE")=RCTYPE
"RTN","RCDPESR1",101,0)
 . S Z1=""
"RTN","RCDPESR1",102,0)
 . F  S Z1=$O(@RCGBL@(1,"D",Z1)) Q:Z1=""  S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=$G(@RCGBL@(1,"D",Z1))
"RTN","RCDPESR1",103,0)
 ;
"RTN","RCDPESR1",104,0)
 I $D(@RCGBL@(2,"D")) D
"RTN","RCDPESR1",105,0)
 . S CT=CT+2,^TMP("RCERR",$J,"MSG",CT-1)=" ",^TMP("RCERR",$J,"MSG",CT)="**** RAW MESSAGE DATA ****:"
"RTN","RCDPESR1",106,0)
 . I $G(^TMP("RCMSGH",$J,0))'="" S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=^TMP("RCMSGH",$J,0)
"RTN","RCDPESR1",107,0)
 . S Z2="" F  S Z2=$O(@RCGBL@(2,"D",Z2)) Q:Z2=""  S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=$G(@RCGBL@(2,"D",Z2))
"RTN","RCDPESR1",108,0)
 E  D
"RTN","RCDPESR1",109,0)
 . Q:'$D(^TMP("RCRAW",$J))
"RTN","RCDPESR1",110,0)
 . S CT=CT+2,^TMP("RCERR",$J,"MSG",CT-1)=" ",^TMP("RCERR",$J,"MSG",CT)="**** RAW MESSAGE DATA ****:"
"RTN","RCDPESR1",111,0)
 . I $G(^TMP("RCMSGH",$J,0))'="" S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=^TMP("RCMSGH",$J,0)
"RTN","RCDPESR1",112,0)
 . S Z2="" F  S Z2=$O(^TMP("RCRAW",$J,Z2)) Q:Z2=""  S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=$G(^TMP("RCRAW",$J,Z2))
"RTN","RCDPESR1",113,0)
 ;
"RTN","RCDPESR1",114,0)
 Q
"RTN","RCDPESR1",115,0)
 ;
"RTN","RCDPESR1",116,0)
DKILL(RCXMZ) ; Delete server mail msg from postmaster mailbox
"RTN","RCDPESR1",117,0)
 ; RCXMZ = ien of mailman msg
"RTN","RCDPESR1",118,0)
 ;
"RTN","RCDPESR1",119,0)
 D ZAPSERV^XMXAPI("S.RCDPE EDI LOCKBOX SERVER",RCXMZ)
"RTN","RCDPESR1",120,0)
 Q
"RTN","RCDPESR1",121,0)
 ;
"RTN","RCDPESR1",122,0)
TEMPDEL(DA) ; Delete msg from temporary msg file
"RTN","RCDPESR1",123,0)
 ; DA = ien of the entry in file 344.5
"RTN","RCDPESR1",124,0)
 ;
"RTN","RCDPESR1",125,0)
 N DIK,Y,X
"RTN","RCDPESR1",126,0)
 S DIK="^RCY(344.5," D ^DIK
"RTN","RCDPESR1",127,0)
 L -^RCY(344.5,DA,0)
"RTN","RCDPESR1",128,0)
 Q
"RTN","RCDPESR1",129,0)
 ;
"RTN","RCDPESR1",130,0)
RESTMSG(RCD,RCARRAY,XMZ) ; Read rest of msg, store in array
"RTN","RCDPESR1",131,0)
 ; RCD = last line # already in the msg
"RTN","RCDPESR1",132,0)
 ; RCARRAY = name of the array to store the data in
"RTN","RCDPESR1",133,0)
 ; XMZ = ien of the mailman msg
"RTN","RCDPESR1",134,0)
 ;
"RTN","RCDPESR1",135,0)
 F  X XMREC Q:XMER<0  S RCD=RCD+1,@RCARRAY@(RCD)=XMRG
"RTN","RCDPESR1",136,0)
 Q
"RTN","RCDPESR1",137,0)
 ;
"RTN","RCDPESR1",138,0)
TAXERR(RCTYPE,RCINS,RCTID,RCCHG) ; Send a bulletin for a bad tax id
"RTN","RCDPESR1",139,0)
 ; RCTYPE = "ERA" for an ERA record,  "EFT" for an EFT record
"RTN","RCDPESR1",140,0)
 ; RCINS = name and id to identify the ins co
"RTN","RCDPESR1",141,0)
 ; RCTID = tax id sent in error
"RTN","RCDPESR1",142,0)
 ; RCCHG = code describing how correction was made
"RTN","RCDPESR1",143,0)
 ;         'E'=EPHRA, 'C'=Changed by looking at claim #'s
"RTN","RCDPESR1",144,0)
 ;
"RTN","RCDPESR1",145,0)
 N XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,RCDXM,XMZ,XMERR,RCCT,RCDXM,RCCT
"RTN","RCDPESR1",146,0)
 S RCCT=0
"RTN","RCDPESR1",147,0)
 S RCCT=RCCT+1,RCDXM(RCCT)="An "_RCTYPE_" was received at your site "_$$FMTE^XLFDT($$NOW^XLFDT(),2)_" with an invalid tax id.",RCCT=RCCT+1,RCDXM(RCCT)=" From: "_RCINS
"RTN","RCDPESR1",148,0)
 S RCCT=RCCT+1,RCDXM(RCCT)=" The tax id sent was: "_RCTID_" and it was corrected by: "
"RTN","RCDPESR1",149,0)
 S RCCT=RCCT+1,RCDXM(RCCT)=" "_$S(RCCHG="E":"EPHRA",1:"Extracting it based on bill numbers in the ERA")
"RTN","RCDPESR1",150,0)
 S RCCT=RCCT+2,RCDXM(RCCT-1)=" ",RCDXM(RCCT)="If your site continues to receive these bulletins for this payer,",RCCT=RCCT+1,RCDXM(RCCT)="contact the payer and request they correct their tax id for your site"
"RTN","RCDPESR1",151,0)
 ;
"RTN","RCDPESR1",152,0)
 S XMTO("I:G.RCDPE PAYMENTS")="",XMBODY="RCDXM"
"RTN","RCDPESR1",153,0)
 D
"RTN","RCDPESR1",154,0)
 . N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPESR1",155,0)
 . D SENDMSG^XMXAPI(.5,"EDI LBOX ERRONEOUS TAX ID ON "_RCTYPE,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPESR1",156,0)
 Q
"RTN","RCDPESR1",157,0)
 ;
"RTN","RCDPESR1",158,0)
BILL(X,RCIB) ; Returns ien of bill in X or -1 if not valid
"RTN","RCDPESR1",159,0)
 ; and, if passed by reference, RCIB = 1 if an insurance bill
"RTN","RCDPESR1",160,0)
 N DIC,Y
"RTN","RCDPESR1",161,0)
 I X'["-",$E(X,4)=" " S $E(X,4)="-"
"RTN","RCDPESR1",162,0)
 S DIC="^PRCA(430,",DIC(0)="MZ" D ^DIC
"RTN","RCDPESR1",163,0)
 I Y>0 S RCIB=($P($G(^RCD(340,+$P(Y(0),U,9),0)),U)["DIC(36,")
"RTN","RCDPESR1",164,0)
 Q +Y
"RTN","RCDPESR1",165,0)
 ;
"RTN","RCDPESR1",166,0)
FMDT(X) ; Format date (X) in YYYYMMDD to Fileman format
"RTN","RCDPESR1",167,0)
 I $L(X)=8 D
"RTN","RCDPESR1",168,0)
 . S X=$E(X,1,4)-1700_$E(X,5,8)
"RTN","RCDPESR1",169,0)
 Q X
"RTN","RCDPESR1",170,0)
 ;
"RTN","RCDPESR1",171,0)
ERROR ; Top level error msgs for msgs
"RTN","RCDPESR1",172,0)
 ;;Invalid mailgroup designated for EDI Lockbox errors
"RTN","RCDPESR1",173,0)
 ;;Message header error
"RTN","RCDPESR1",174,0)
 ;
"RTN","RCDPESR1",175,0)
ERROR2 ; Error condition msgs for msgs
"RTN","RCDPESR1",176,0)
 ;;Message code is invalid for EDI Lockbox.
"RTN","RCDPESR1",177,0)
 ;;This message has no ending $ or 99 record.
"RTN","RCDPESR1",178,0)
 ;;Message file problem - no message stored.
"RTN","RCDPESR1",179,0)
 ;;Message file problem - message partially stored.
"RTN","RCDPESR1",180,0)
 ;
"RTN","RCDPESR2")
0^85^B76682354
"RTN","RCDPESR2",1,0)
RCDPESR2 ;ALB/TMK - Server auto-update utilities - EDI Lockbox ;06/03/02
"RTN","RCDPESR2",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPESR2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPESR2",4,0)
 ; IA 4042 calls to DUP^IBCEOB, ADD3611^IBCEOB, UPD3611^IBCEOB,
"RTN","RCDPESR2",5,0)
 ;         ERRUPD^IBCEOB
"RTN","RCDPESR2",6,0)
 ;
"RTN","RCDPESR2",7,0)
TASKERA(RCTDA) ; Task to upd VistA for ERA's
"RTN","RCDPESR2",8,0)
 ; RCTDA = ien file 344.5
"RTN","RCDPESR2",9,0)
 N ZTDTH,ZTUCI,ZTSAVE,ZTIO,ZTDESC,ZTRTN,ZTSK,DIE,DR,DA
"RTN","RCDPESR2",10,0)
 S (ZTSAVE("DT"),ZTSAVE("U"),ZTSAVE("DUZ"))="",ZTSAVE("ZTREQ")="@",ZTRTN="NEWERA^RCDPESR2("_RCTDA_",0)",ZTDTH=$H,ZTIO=""
"RTN","RCDPESR2",11,0)
 D ^%ZTLOAD
"RTN","RCDPESR2",12,0)
 Q
"RTN","RCDPESR2",13,0)
 ;
"RTN","RCDPESR2",14,0)
NEWERA(RCTDA,RCREFILE) ; Tasked entry
"RTN","RCDPESR2",15,0)
 ; Add new EOB's to IB/ERA tot rec to AR
"RTN","RCDPESR2",16,0)
 ; RCTDA = ien 344.5
"RTN","RCDPESR2",17,0)
 ; RCREFILE = 1: re-filing rec via exc proc
"RTN","RCDPESR2",18,0)
 N RCDUPERR,RCPAYER,RCRTOT,RCE,RCEC,RCERR,RCR1,RCADJ,DIE,DR,DA,Z,Q
"RTN","RCDPESR2",19,0)
 S ZTREQ="@"
"RTN","RCDPESR2",20,0)
 K ^TMP($J,"RCDPERA")
"RTN","RCDPESR2",21,0)
 L +^RCY(344.5,RCTDA):5
"RTN","RCDPESR2",22,0)
 I $D(ZTQUEUED) S DIE="^RCY(344.5,",DA=RCTDA,DR=".05////"_ZTSK_";.04////1" D ^DIE
"RTN","RCDPESR2",23,0)
 I $P($G(^RCY(344.5,RCTDA,0)),U,5),'$G(RCREFILE) S DIE="^RCY(344.5,",DA=RCTDA,DR=".1////4;.08///1" D ^DIE
"RTN","RCDPESR2",24,0)
 S RCR1=$P($G(^RCY(344.5,RCTDA,0)),U,7),RCPAYER=$P($G(^RCY(344.5,RCTDA,3)),U)
"RTN","RCDPESR2",25,0)
 S RCRTOT=$S(RCR1:RCR1,1:$$ERATOT^RCDPESR6(RCTDA,.RCERR)) ; ERA rec
"RTN","RCDPESR2",26,0)
 S RCDUPERR=$S($G(RCERR)="DUP":$G(RCERR(1)),1:0) K RCERR(1)
"RTN","RCDPESR2",27,0)
 I RCRTOT,'RCR1 S DIE="^RCY(344.5,",DR=".07////"_RCRTOT,DA=RCTDA D ^DIE
"RTN","RCDPESR2",28,0)
 D UPDEOB(RCTDA,5,$S('$G(RCREFILE):RCDUPERR,1:1)) ; Add EOB det to IB
"RTN","RCDPESR2",29,0)
 I RCRTOT D UPDCON^RCDPESR6(RCRTOT),UPDADJ^RCDPESR6(RCRTOT),UPD3444^RCDPESR6(.RCRTOT) ; Bills added 344.41
"RTN","RCDPESR2",30,0)
 I RCRTOT,RCTDA S DIE="^RCY(344.5,",DR=".08////0;.1///@",DA=RCTDA D ^DIE
"RTN","RCDPESR2",31,0)
 I 'RCRTOT D  G QNEW
"RTN","RCDPESR2",32,0)
 . I RCDUPERR Q:'RCTDA  D TEMPDEL^RCDPESR1(RCTDA) S RCTDA="" Q
"RTN","RCDPESR2",33,0)
 . S RCE(1)=$$FMTE^XLFDT($$NOW^XLFDT(),2)_" An error occurred while storing ERA data.  ",RCE(2)="No totals data was stored for this ERA record"_$S('$G(RCREFILE):" and an",1:" on this re-file attempt.")
"RTN","RCDPESR2",34,0)
 . S RCE(3)=$S('$G(RCREFILE):"ERA transmission exception was created.",1:"")
"RTN","RCDPESR2",35,0)
 . D WP^DIE(344.5,RCTDA_",",5,"A","RCE")
"RTN","RCDPESR2",36,0)
 . S DIE="^RCY(344.5,",DA=RCTDA,DR=".07///@;.08////1;.1////1" D ^DIE
"RTN","RCDPESR2",37,0)
 . K RCERR
"RTN","RCDPESR2",38,0)
 . S RCERR(1)=$$FMTE^XLFDT($$NOW^XLFDT(),2)_" The ERA data could not be stored.  The AR receipt",RCERR(2)=" for this data must be created/processed manually for the bills included"
"RTN","RCDPESR2",39,0)
 . S RCERR(3)=" in this ERA."_$S('$G(RCREFILE):"",1:"  This error occurred during a refile attempt."),RCERR(4)=" "
"RTN","RCDPESR2",40,0)
 . D BULLERA^RCDPESR0("DF",RCTDA,$P($G(^RCY(344.5,RCTDA,0)),U,11),"EDI LBOX - TOTALS FILE EXCEPTION "_$E(RCPAYER,1,20),.RCERR,0)
"RTN","RCDPESR2",41,0)
 . K RCERR
"RTN","RCDPESR2",42,0)
 I $$ADJ^RCDPEU(RCRTOT,.RCADJ) D  ; Bulletin adjs
"RTN","RCDPESR2",43,0)
 . S RCERR(1)="At least 1 adjustment transaction has been found on this ERA.  Before the",RCERR(2)="   receipt for this ERA can be processed, the appropriate adjustments",RCERR(3)="   must be made using the EEOB Worklist",RCERR(4)=" "
"RTN","RCDPESR2",44,0)
 . S RCEC=4
"RTN","RCDPESR2",45,0)
 . I RCADJ'=2 S RCEC=RCEC+1,RCERR(RCEC)=" THERE ARE ERA LEVEL ADJUSTMENT(S)",RCEC=RCEC+1,RCERR(RCEC)=" "
"RTN","RCDPESR2",46,0)
 . I RCADJ'=1 S RCEC=RCEC+1,RCERR(RCEC)=" THE FOLLOWING BILL(S) HAVE RETRACTIONS:" D
"RTN","RCDPESR2",47,0)
 .. S (Q,Z)=0 S Z=0 F  S Z=$O(RCADJ(RCRTOT,Z)) Q:'Z  S:'Q RCEC=RCEC+1,RCERR(RCEC)="  " S Q=Q+1,RCERR(RCEC)=RCERR(RCEC)_"  "_RCADJ(RCRTOT,Z) S:Q=4 Q=0
"RTN","RCDPESR2",48,0)
 .. S RCEC=RCEC+1,RCERR(RCEC)=" "
"RTN","RCDPESR2",49,0)
 . D BULLERA^RCDPESR0("D",RCTDA,$P($G(^RCY(344.5,RCTDA,0)),U,11),"EDI LBOX - ERA HAS ADJ/TAKEBACKS "_$E(RCPAYER,1,20),.RCERR,0)
"RTN","RCDPESR2",50,0)
 ;
"RTN","RCDPESR2",51,0)
QNEW I RCTDA,'$P($G(^RCY(344.5,RCTDA,0)),U,8) D TEMPDEL^RCDPESR1(RCTDA) S RCTDA=""
"RTN","RCDPESR2",52,0)
 I RCTDA,$P($G(^RCY(344.5,RCTDA,0)),U)'="" S DIE="^RCY(344.5,",DR=".04////0;.05///@"_$S('$G(RCR1)&$G(RCRTOT):";.07////"_RCRTOT,1:""),DA=RCTDA D ^DIE
"RTN","RCDPESR2",53,0)
 K ^TMP($J,"RCDPERA")
"RTN","RCDPESR2",54,0)
 I RCTDA L -^RCY(344.5,RCTDA)
"RTN","RCDPESR2",55,0)
 Q
"RTN","RCDPESR2",56,0)
 ;
"RTN","RCDPESR2",57,0)
UPDEOB(RCTDA,RCFILE,DUP) ; Upd 361.1 from ERA msg in 344.5 or .4
"RTN","RCDPESR2",58,0)
 ; RCTDA = ien ERA msg in 344.5 or ;subfile ien in 344.4
"RTN","RCDPESR2",59,0)
 ; RCFILE = 4 file 344.4, 5 if from 344.5
"RTN","RCDPESR2",60,0)
 ; DUP = mail msg # if dup msg, but not same # or -1 if same mail msg #
"RTN","RCDPESR2",61,0)
 ; Returned for each bill found in ERA:
"RTN","RCDPESR2",62,0)
 ;   ^TMP($J,"RCDPEOB",n)=Bill ien^AR bill #
"RTN","RCDPESR2",63,0)
 ;   ^TMP($J,"RCDPEOB",n,"EOB")=EOB ien^amt pd^ins co ptr^reversal flag^
"RTN","RCDPESR2",64,0)
 ;                              patient name (if invalid bill)^amt billed
"RTN","RCDPESR2",65,0)
 ;   ^TMP($J,"RCDPEOB","ADJ",x)=adj rec ('02')
"RTN","RCDPESR2",66,0)
 ;
"RTN","RCDPESR2",67,0)
 ; Also: ^TMP($J,"RCDPEOB","HDR")=hdr rec from txmn
"RTN","RCDPESR2",68,0)
 ;       ^TMP($J,"RCDPEOB","CONTACT")=ERA contact rec ('01')
"RTN","RCDPESR2",69,0)
 ;
"RTN","RCDPESR2",70,0)
 N RCGBL,RC,RC0,RCCT,RCCT1,RCEOB,RCBILL,RCMNUM,RCIFN,RCIB,RCERR,RCSTAR,RCET,RCX,RCXMG,Z,Q,DA,DR,DIE,RCPAYER,RCFILED,RCEOBD
"RTN","RCDPESR2",71,0)
 K ^TMP($J,"RCDP-EOB"),^TMP("RCDPERR-EOB",$J)
"RTN","RCDPESR2",72,0)
 ;
"RTN","RCDPESR2",73,0)
 S RCPAYER="",RCFILED=1
"RTN","RCDPESR2",74,0)
 I RCFILE=5 D
"RTN","RCDPESR2",75,0)
 . S RCGBL="^RCY(344.5,"_RCTDA_",2)"
"RTN","RCDPESR2",76,0)
 . S RCMNUM=+$G(^RCY(344.5,RCTDA,0)),RCXMG=$P($G(^(0)),U,11)
"RTN","RCDPESR2",77,0)
 . S ^TMP($J,"RCDPEOB","HDR")=$G(^RCY(344.5,RCTDA,2,1,0))
"RTN","RCDPESR2",78,0)
 . I $P(^TMP($J,"RCDPEOB","HDR"),U)["XFR",'$P($G(^RCY(344.5,RCTDA,0)),U,14) D
"RTN","RCDPESR2",79,0)
 .. D SENDACK^RCDPESR5(RCTDA,1)
"RTN","RCDPESR2",80,0)
 .. S DR=".14////1",DIE="^RCY(344.5,",DA=RCTDA D ^DIE
"RTN","RCDPESR2",81,0)
 ;
"RTN","RCDPESR2",82,0)
 I RCFILE=4 D
"RTN","RCDPESR2",83,0)
 . S RCGBL="^RCY(344.4,"_+RCTDA_",1,"_+$P(RCTDA,";",2)_",1)"
"RTN","RCDPESR2",84,0)
 . S RCMNUM=$P($G(^RCY(344.4,+RCTDA,0)),U,12),RCXMG=$P($G(^(0)),U,12)
"RTN","RCDPESR2",85,0)
 . S ^TMP($J,"RCDPEOB","HDR")=$G(^RCY(344.4,+RCTDA,1,+$P(RCTDA,";",2),1,1,0))
"RTN","RCDPESR2",86,0)
 ;
"RTN","RCDPESR2",87,0)
 S RCPAYER=$P($G(^TMP($J,"RCDPEOB","HDR")),U,6)
"RTN","RCDPESR2",88,0)
 S RC=1,(RCCT,RCCT1,RCX)=0,RCBILL=""
"RTN","RCDPESR2",89,0)
 K ^TMP("RCERR1",$J)
"RTN","RCDPESR2",90,0)
 F  S RC=$O(@RCGBL@(RC)) Q:'RC  S RC0=$G(^(RC,0)) D
"RTN","RCDPESR2",91,0)
 . I RCFILE=5,+RC0=1 D  Q  ; Contact
"RTN","RCDPESR2",92,0)
 .. S ^TMP($J,"RCDPEOB","CONTACT")=RC0
"RTN","RCDPESR2",93,0)
 . ;
"RTN","RCDPESR2",94,0)
 . I RCFILE=5,+RC0=2 D  Q  ; adj
"RTN","RCDPESR2",95,0)
 .. S RCX=RCX+1,^TMP($J,"RCDPEOB","ADJ",RCX)=RC0
"RTN","RCDPESR2",96,0)
 . ;
"RTN","RCDPESR2",97,0)
 . I +RC0=5 S RCCT=RCCT+1,RCCT1=0,RCBILL=$P(RC0,U,2),Z=$$BILL^RCDPESR1(RCBILL,.RCIB),Z=$S(Z:$S($G(RCIB):Z,1:-1),1:-1),^TMP($J,"RCDP-EOB",RCCT,0)=Z_U_RCBILL D
"RTN","RCDPESR2",98,0)
 .. I Z'>0 S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,5)=$P(RC0,U,3)_","_$P(RC0,U,4)_" "_$P(RC0,U,5) ; Save pt name
"RTN","RCDPESR2",99,0)
 .. I Z>0 S Q=+$P($G(^PRCA(430,Z,0)),U,9) I $P($G(^RCD(340,Q,0)),U)["DIC(36," S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,3)=+^RCD(340,Q,0) ; Save ins co
"RTN","RCDPESR2",100,0)
 . ;
"RTN","RCDPESR2",101,0)
 . I +RC0=10 D  ; Save amt pd/billed, rev flag
"RTN","RCDPESR2",102,0)
 .. S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,2)=$S(+$P(RC0,U,11):$J($P(RC0,U,11)/100,"",2),1:0),$P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,6)=$J($P(RC0,U,11),"",2)
"RTN","RCDPESR2",103,0)
 .. I $P(RC0,U,6)="Y"!($P(RC0,U,7)=22) S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,4)=1
"RTN","RCDPESR2",104,0)
 . I RCBILL=$P(RC0,U,2) S RCCT1=RCCT1+1,^TMP($J,"RCDP-EOB",RCCT,RCCT1,0)=RC0
"RTN","RCDPESR2",105,0)
 ;
"RTN","RCDPESR2",106,0)
 S RCSTAR=$TR($J("",15)," ","*"),RCET=RCSTAR_"ERROR/WARNING EEOB DETAIL SEQ #"
"RTN","RCDPESR2",107,0)
 S RCCT=0 F  S RCCT=$O(^TMP($J,"RCDP-EOB",RCCT)) Q:'RCCT  S RCIFN=+$G(^(RCCT,0)),RCBILL=$P($G(^(0)),U,2),^TMP($J,"RCDPEOB",RCCT)=$G(^TMP($J,"RCDP-EOB",RCCT,0)) D
"RTN","RCDPESR2",108,0)
 . S RCEOB=-1,RCEOBD=""
"RTN","RCDPESR2",109,0)
 . I RCIFN'>0,$G(DUP)'>0 D
"RTN","RCDPESR2",110,0)
 .. S ^TMP("RCERR1",$J,RCCT)=" ",^TMP("RCERR1",$J,RCCT,1)=RCET_RCCT_RCSTAR
"RTN","RCDPESR2",111,0)
 .. S ^TMP("RCERR1",$J,RCCT,2)="Bill "_RCBILL_" isn't valid/wasn't found so its detail wasn't stored in IB" S:RCFILE=5 ^TMP("RCERR1",$J,RCCT,"*")=^TMP("RCERR1",$J,RCCT,2)
"RTN","RCDPESR2",112,0)
 .. S ^TMP("RCERR1",$J,RCCT,3)="  The reported amount paid on this bill was: "_$P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,2)
"RTN","RCDPESR2",113,0)
 .. S ^TMP("RCERR1",$J,RCCT,4)="  If the bill is not for your site, it must be transferred to the",^TMP("RCERR1",$J,RCCT,5)="   correct site and manually adjusted in your AR."
"RTN","RCDPESR2",114,0)
 .. S ^TMP("RCERR1",$J,RCCT,6)="  You can perform this transfer using EDI Lockbox ERA/EEOB exception process.",^TMP("RCERR1",$J,RCCT,7)=" "
"RTN","RCDPESR2",115,0)
 .. D DISP1^RCDPESR5(RCCT,1)
"RTN","RCDPESR2",116,0)
 .. S Q=0 F  S Q=$O(^TMP($J,"RCDP-EOB",RCCT,Q)) Q:'Q  S ^TMP($J,"RCDPEOB",RCCT,Q)=$G(^TMP($J,"RCDP-EOB",RCCT,Q,0))
"RTN","RCDPESR2",117,0)
 .. S ^TMP($J,"RCDPEOB",RCCT)=^TMP($J,"RCDP-EOB",RCCT,0) M ^TMP($J,"RCDPEOB",RCCT,"ERR")=^TMP("RCERR1",$J,RCCT)
"RTN","RCDPESR2",118,0)
 .. ;
"RTN","RCDPESR2",119,0)
 .. I RCFILE=5 D  ; Store error if trans-in failed
"RTN","RCDPESR2",120,0)
 ... N RCE,RC,DIE,X,Y,DA,DR
"RTN","RCDPESR2",121,0)
 ... S RCE(1)=$$FMTE^XLFDT($$NOW^XLFDT(),2)_" "_$G(^TMP("RCERR1",$J,RCCT,"*"))
"RTN","RCDPESR2",122,0)
 ... S RCE(2)=" ",RCFILED=0
"RTN","RCDPESR2",123,0)
 ... D WP^DIE(344.5,RCTDA_",",5,"A","RCE")
"RTN","RCDPESR2",124,0)
 .. ;
"RTN","RCDPESR2",125,0)
 . I RCIFN>0 D
"RTN","RCDPESR2",126,0)
 .. N RCDUPEOB,RCALLDUP
"RTN","RCDPESR2",127,0)
 .. ; Chk rec exists
"RTN","RCDPESR2",128,0)
 .. S RCDUPEOB=0
"RTN","RCDPESR2",129,0)
 .. S RCEOB=$$DUP^RCDPESR3(RCMNUM,RCIFN,$P($G(^TMP($J,"RCDPEOB",RCCT,"EOB")),U,2),$P($G(^TMP($J,"RCDPEOB",RCCT,"EOB")),U,6)) ; Same mail message for update?
"RTN","RCDPESR2",130,0)
 .. I RCEOB,$P(RCEOB,U,2) S RCEOB=0  ; If chksum exists, let below check it
"RTN","RCDPESR2",131,0)
 .. S ^TMP($J,"RCDP-EOB",RCCT,.5,0)="835ERA" ; Needed for checksum
"RTN","RCDPESR2",132,0)
 .. S RCALLDUP=$$DUP^IBCEOB("^TMP("_$J_",""RCDP-EOB"","_RCCT_")",RCIFN) ; IA 4042 - make sure an exact dup does not already exist
"RTN","RCDPESR2",133,0)
 .. I $S(RCALLDUP:1,RCEOB:$G(DUP)'>0,1:0) D
"RTN","RCDPESR2",134,0)
 ... S RCDUPEOB=1
"RTN","RCDPESR2",135,0)
 ... D DUPREC^RCDPESR6(RCET,RCCT,RCSTAR,RCFILE,RCALLDUP,RCEOB,RCBILL,.RCDUPEOB)
"RTN","RCDPESR2",136,0)
 ... S:RCALLDUP RCEOBD=RCALLDUP
"RTN","RCDPESR2",137,0)
 .. ;
"RTN","RCDPESR2",138,0)
 .. ; Add new stub rec to 361.1
"RTN","RCDPESR2",139,0)
 .. I 'RCDUPEOB S RCEOB=+$$ADD3611^IBCEOB(RCMNUM,"","",RCIFN,1,"^TMP("_$J_",""RCDP-EOB"","_RCCT_")") ;IA 4042
"RTN","RCDPESR2",140,0)
 .. K ^TMP($J,"RCDP-EOB",RCCT,.5,0)
"RTN","RCDPESR2",141,0)
 .. ;
"RTN","RCDPESR2",142,0)
 .. I RCEOB<0 D:$G(DUP)'>0  Q
"RTN","RCDPESR2",143,0)
 ... S ^TMP("RCERR1",$J,RCCT)=" ",^TMP("RCERR1",$J,RCCT,1)=RCET_RCCT_RCSTAR,RCFILED=0
"RTN","RCDPESR2",144,0)
 ... S ^TMP("RCERR1",$J,RCCT,2)="Error - EEOB detail not added to IB for bill "_RCBILL,$P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U)="" S:RCFILE=5 ^TMP("RCERR1",$J,RCCT,"*")=^TMP("RCERR1",$J,RCCT,2)
"RTN","RCDPESR2",145,0)
 ... D DISP1^RCDPESR5(RCCT,1)
"RTN","RCDPESR2",146,0)
 ... S Q=0 F  S Q=$O(^TMP($J,"RCDP-EOB",RCCT,Q)) Q:'Q  S ^TMP($J,"RCDPEOB",RCCT,Q)=$G(^TMP($J,"RCDP-EOB",RCCT,Q,0))
"RTN","RCDPESR2",147,0)
 ... S ^TMP($J,"RCDPEOB",RCCT)=^TMP($J,"RCDP-EOB",RCCT,0) M ^TMP($J,"RCDPEOB",RCCT,"ERR")=^TMP("RCERR1",$J,RCCT)
"RTN","RCDPESR2",148,0)
 .. ;
"RTN","RCDPESR2",149,0)
 .. ; Upd EOB file 361.1
"RTN","RCDPESR2",150,0)
 .. ; Needs ^TMP arrays: $J,"RCDPEOB","HDR" and $J,"RCDP-EOB"
"RTN","RCDPESR2",151,0)
 .. I RCDUPEOB'<0 D UPD3611^IBCEOB(RCEOB,RCCT,1) ; IA 4042
"RTN","RCDPESR2",152,0)
 .. ; errors in ^TMP("RCDPERR-EOB",$J
"RTN","RCDPESR2",153,0)
 .. I $O(^TMP("RCDPERR-EOB",$J,0)) D ERRUPD^IBCEOB(RCEOB,"RCDPERR-EOB") ; Adds error msgs to IB file 361.1 ; IA 4042
"RTN","RCDPESR2",154,0)
 .. S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U)=$S('$G(RCEOBD):RCEOB,1:RCEOBD)
"RTN","RCDPESR2",155,0)
 . ;
"RTN","RCDPESR2",156,0)
 . K ^TMP("RCDPERR-EOB",$J)
"RTN","RCDPESR2",157,0)
 ;
"RTN","RCDPESR2",158,0)
 I $O(^TMP("RCERR1",$J,"")) D
"RTN","RCDPESR2",159,0)
 . I RCFILE=5 D BULL1^RCDPESR5(RCTDA,"^TMP(""RCERR1"",$J)",$S($G(DUP)>0:$G(DUP),1:RCXMG))
"RTN","RCDPESR2",160,0)
 . I RCFILE=4 D BULL2^RCDPESR5(RCTDA,"^TMP(""RCERR1"",$J)",RCXMG)
"RTN","RCDPESR2",161,0)
 ;
"RTN","RCDPESR2",162,0)
 K ^TMP("RCDPERR-EOB",$J),^TMP($J,"RCDP-EOB"),^TMP("RCERR1",$J)
"RTN","RCDPESR2",163,0)
 D CLEAN^DILF
"RTN","RCDPESR2",164,0)
 Q
"RTN","RCDPESR2",165,0)
 ;
"RTN","RCDPESR3")
0^86^B44199365
"RTN","RCDPESR3",1,0)
RCDPESR3 ;ALB/TMK - Server auto-update utilities - EDI Lockbox ;06/06/02
"RTN","RCDPESR3",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPESR3",3,0)
 Q
"RTN","RCDPESR3",4,0)
 ;
"RTN","RCDPESR3",5,0)
EFTIN(RCTXN,RCD,XMZ,RCGBL,RCEFLG) ; Adds a new EFT record to AR file 344.3
"RTN","RCDPESR3",6,0)
 ;  from Lockbox EFT msg
"RTN","RCDPESR3",7,0)
 ; RCTXN = the data on the header record of the message text
"RTN","RCDPESR3",8,0)
 ; RCD = array containing formatted mail message header data
"RTN","RCDPESR3",9,0)
 ; XMZ = the mail message number
"RTN","RCDPESR3",10,0)
 ; RCGBL = the name of the array or global where the message is stored
"RTN","RCDPESR3",11,0)
 ; RCEFLG = error flag returned if passed by reference
"RTN","RCDPESR3",12,0)
 ;
"RTN","RCDPESR3",13,0)
 N CT,RC,RC1,RCLAST,RCEFT,RCTDA,RCERR,RCTYP1,DA,DIK,RCZ,Z,Z0,DLAYGO
"RTN","RCDPESR3",14,0)
 ;
"RTN","RCDPESR3",15,0)
 ; Take data out of mail message
"RTN","RCDPESR3",16,0)
 S (RCEFLG,RCLAST)=0,CT=0,RCTYP1="835EFT"
"RTN","RCDPESR3",17,0)
 F  X XMREC Q:XMER<0  D  Q:RCLAST
"RTN","RCDPESR3",18,0)
 . I +XMRG=99,$P(XMRG,U,2)="$" S RCLAST=1 Q
"RTN","RCDPESR3",19,0)
 . S:XMRG'="" CT=CT+1,@RCGBL@(2,"D",CT)=XMRG
"RTN","RCDPESR3",20,0)
 ;
"RTN","RCDPESR3",21,0)
 I 'RCLAST,'$G(RCERR) K @RCGBL S RCERR=2 ;No $ as last character of msg
"RTN","RCDPESR3",22,0)
 ;
"RTN","RCDPESR3",23,0)
 I $G(RCERR)>0 D  G EFTQ
"RTN","RCDPESR3",24,0)
 . D ERRUPD^RCDPESR1(RCGBL,.RCD,RCTYP1,.RCERR)
"RTN","RCDPESR3",25,0)
 . S RCEFLG=1
"RTN","RCDPESR3",26,0)
 ;
"RTN","RCDPESR3",27,0)
 ; Add top-level entry to file 344.3
"RTN","RCDPESR3",28,0)
 S RCEFT=$$ADDEFT(RCTXN,XMZ,RCGBL,.RCERR)
"RTN","RCDPESR3",29,0)
 ;
"RTN","RCDPESR3",30,0)
 I $G(RCERR) D  G EFTQ ; 'BAD' EFT's
"RTN","RCDPESR3",31,0)
 . D ERRUPD^RCDPESR1(RCGBL,.RCD,RCTYP1,.RCERR)
"RTN","RCDPESR3",32,0)
 . S RCEFLG=1
"RTN","RCDPESR3",33,0)
 ;
"RTN","RCDPESR3",34,0)
 G:'RCEFT EFTQ
"RTN","RCDPESR3",35,0)
 ;
"RTN","RCDPESR3",36,0)
 ; Add the detail data to file 344.31 for this EFT record
"RTN","RCDPESR3",37,0)
 S Z=0 F  S Z=$O(^RCY(344.31,"B",RCEFT,Z)) Q:'Z  S DA=Z,DIK="^RCY(344.31," D ^DIK ; Delete any detail data already there
"RTN","RCDPESR3",38,0)
 ;
"RTN","RCDPESR3",39,0)
 S (RC,RC1,RCZ)=0
"RTN","RCDPESR3",40,0)
 F  S RCZ=$O(@RCGBL@(2,"D",RCZ)) Q:'RCZ  S Z0=$G(^(RCZ)) I Z0'="" D  Q:$G(RCERR)
"RTN","RCDPESR3",41,0)
 . I $P(Z0,U)="01" D  ; Each payer's data
"RTN","RCDPESR3",42,0)
 .. N DA,DIE,DR,X,Y,DO,DD,DIC
"RTN","RCDPESR3",43,0)
 .. S X=RCEFT
"RTN","RCDPESR3",44,0)
 .. S DIC("DR")=".11////0;.04////"_$P(Z0,U,2)_";.08////0"_$S($P(Z0,U,5)'="":";.02////"_$P(Z0,U,5),1:"")_$S($P(Z0,U,6)'="":";.03////"_$P(Z0,U,6),1:"")_";.07////"_$J(+$P(Z0,U,4)/100,"",2)_";.06////"_$S($P(Z0,U,8)'="":1,1:0)
"RTN","RCDPESR3",45,0)
 .. S DIC("DR")=DIC("DR")_";.12///"_$$FDT^RCDPESR9($P(Z0,U,3))_";.13////"_DT_$S($P(Z0,U,7)'="":";.05////"_$P(Z0,U,7),1:"")_$S($P(Z0,U,9)'="":";.15////"_$P(Z0,U,9),1:"")
"RTN","RCDPESR3",46,0)
 .. ;
"RTN","RCDPESR3",47,0)
 .. I $P(Z0,U,8)'="" D  ; tax id error
"RTN","RCDPESR3",48,0)
 ... D TAXERR^RCDPESR1("EFT",$P(Z0,U,5)_"  Payer ID: "_$P(RCTXN,U,6),$P(RCTXN,U,7),$P(RCTXN,U,8)) ; Send bad tax id bulletin
"RTN","RCDPESR3",49,0)
 .. ;
"RTN","RCDPESR3",50,0)
 .. S DIC(0)="L",DIC="^RCY(344.31,",DLAYGO=344.31 D FILE^DICN K DIC,DLAYGO,DO,DD
"RTN","RCDPESR3",51,0)
 .. I Y'>0 D  ; Error filing data
"RTN","RCDPESR3",52,0)
 ... S DIK="^RCY(344.3,",DA=RCEFT D ^DIK
"RTN","RCDPESR3",53,0)
 ... S Z=0 F  S Z=$O(^RCY(344.31,"B",RCEFT,Z)) Q:'Z  S DIK="^RCY(344.31,",DA=Z D ^DIK
"RTN","RCDPESR3",54,0)
 ... S RCEFLG=1,RCERR=3
"RTN","RCDPESR3",55,0)
 ... D ERRUPD^RCDPESR1(RCGBL,.RCD,RCTYP1,RCERR)
"RTN","RCDPESR3",56,0)
 ;
"RTN","RCDPESR3",57,0)
 I '$G(RCEFLG) D
"RTN","RCDPESR3",58,0)
 . S DIE="^RCY(344.3,",DA=RCEFT,DR=".09////"_$$CHKSUM(RCEFT) D ^DIE
"RTN","RCDPESR3",59,0)
 ;
"RTN","RCDPESR3",60,0)
EFTQ ;
"RTN","RCDPESR3",61,0)
 D CLEAN^DILF
"RTN","RCDPESR3",62,0)
 Q
"RTN","RCDPESR3",63,0)
 ;
"RTN","RCDPESR3",64,0)
ADDEFT(RCTXN,RCXMZ,RCGBL,RCERR) ; File EFT TOTAL record in file 344.3
"RTN","RCDPESR3",65,0)
 ; RCTXN = the data on the header record of the message text
"RTN","RCDPESR3",66,0)
 ; RCXMZ = the mail message number
"RTN","RCDPESR3",67,0)
 ; RCGBL = the name of the array or global where the message is stored
"RTN","RCDPESR3",68,0)
 ; Function returns the ien of the total record found/added
"RTN","RCDPESR3",69,0)
 ;    and also returns RCERR if passed by reference
"RTN","RCDPESR3",70,0)
 ;
"RTN","RCDPESR3",71,0)
 N RCTDA,RCRCPT,RCDUP,RCHAC,Z,Z0
"RTN","RCDPESR3",72,0)
 S (RCERR,RCTDA)=""
"RTN","RCDPESR3",73,0)
 ;
"RTN","RCDPESR3",74,0)
 I $E($P(RCTXN,U,6),1,3)'="469",$E($P(RCTXN,U,6),1,3)'="HAC" D  G ADDQ ; Invalid EFT deposit number
"RTN","RCDPESR3",75,0)
 . N RCDXM,RCCT
"RTN","RCDPESR3",76,0)
 . S RCCT=0
"RTN","RCDPESR3",77,0)
 . S RCCT=RCCT+1,RCDXM(RCCT)="This EFT has an invalid deposit number for EDI Lockbox and has been rejected.",RCCT=RCCT+1,RCDXM(RCCT)=" "
"RTN","RCDPESR3",78,0)
 . S RCCT=RCCT+1,RCDXM(RCCT)=" ",RCCT=RCCT+1,RCDXM(RCCT)="Here are the contents of this message:"
"RTN","RCDPESR3",79,0)
 . D DISP("EDI LBOX INVALID EFT DEPOSIT #",RCCT,.RCDXM,RCXMZ)
"RTN","RCDPESR3",80,0)
 ;
"RTN","RCDPESR3",81,0)
 ; Make sure it's not already there or if so, it has no ptr to a deposit
"RTN","RCDPESR3",82,0)
 ; or if a deposit exists, that the deposit does not yet have a receipt
"RTN","RCDPESR3",83,0)
 S RCDUP=0,RCHAC=$E($P(RCTXN,U,6),1,3)="HAC" ; This is a HAC deposit
"RTN","RCDPESR3",84,0)
 I $P(RCTXN,U,6)'="" D
"RTN","RCDPESR3",85,0)
 . S Z=0 ; Lookup deposit by deposit #
"RTN","RCDPESR3",86,0)
 . F  S Z=$O(^RCY(344.3,"C",$P(RCTXN,U,6),Z)) Q:'Z  S Z0=$G(^RCY(344.3,Z,0)) S:'$P(Z0,U,3) RCTDA=Z Q:RCTDA  D  Q
"RTN","RCDPESR3",87,0)
 .. ; Deposit found - find receipt
"RTN","RCDPESR3",88,0)
 .. I $O(^RCY(344,"AD",$P(Z0,U,3),0)) S RCDUP=Z Q
"RTN","RCDPESR3",89,0)
 .. S RCTDA=Z
"RTN","RCDPESR3",90,0)
 ;
"RTN","RCDPESR3",91,0)
 I RCDUP D  ; Send bulletin that duplicate EFT received
"RTN","RCDPESR3",92,0)
 . N RCDXM,RCCT
"RTN","RCDPESR3",93,0)
 . S RCCT=0
"RTN","RCDPESR3",94,0)
 . S RCCT=RCCT+1,RCDXM(RCCT)="This EFT appears to be a duplicate transaction and has been rejected.",RCCT=RCCT+1,RCDXM(RCCT)=" "
"RTN","RCDPESR3",95,0)
 . S RCCT=RCCT+1,RCDXM(RCCT)=" ",RCCT=RCCT+1,RCDXM(RCCT)="Here are the contents of this message:"
"RTN","RCDPESR3",96,0)
 . D DISP("EDI LBOX DUP EFT DEPOSIT RECEIVED",RCCT,.RCDXM,RCXMZ)
"RTN","RCDPESR3",97,0)
 ;
"RTN","RCDPESR3",98,0)
 I 'RCDUP D  ; Add or update the record
"RTN","RCDPESR3",99,0)
 . N RCX,RCDTTM,DIE,DIC,DLAYGO,DD,DA,DO,DR,X,Y,%DT
"RTN","RCDPESR3",100,0)
 . ;
"RTN","RCDPESR3",101,0)
 . S X=$$FDT^RCDPESR9($P(RCTXN,U,3))_"@"_$P(RCTXN,U,4)
"RTN","RCDPESR3",102,0)
 . S %DT="XTS" D ^%DT S:Y>0 RCDTTM=Y
"RTN","RCDPESR3",103,0)
 . ;
"RTN","RCDPESR3",104,0)
 . S DIC("DR")=""
"RTN","RCDPESR3",105,0)
 . S DIC("DR")=$S(RCDTTM'="":".02////"_RCDTTM,1:"")
"RTN","RCDPESR3",106,0)
 . S DIC("DR")=DIC("DR")_$S(DIC("DR")'="":";",1:"")_".06////"_$P(RCTXN,U,6)_";.07///"_$$FDT^RCDPESR9($P(RCTXN,U,7))
"RTN","RCDPESR3",107,0)
 . S DIC("DR")=DIC("DR")_";.08////"_$$ZERO^RCDPESR9($P(RCTXN,U,8),1)_";.13////"_$$NOW^XLFDT()_";.05////"_RCXMZ_";.14////0;.12////0"
"RTN","RCDPESR3",108,0)
 . ;
"RTN","RCDPESR3",109,0)
 . I RCTDA D  ; Overwrite the data already there
"RTN","RCDPESR3",110,0)
 .. L +^RCY(344.3,RCTDA):1 I '$T S RCTDA=-1 Q
"RTN","RCDPESR3",111,0)
 .. S DIE="^RCY(344.3,",DA=RCTDA,DR=DIC("DR") K DIC D ^DIE
"RTN","RCDPESR3",112,0)
 .. L -^RCY(344.3,RCTDA)
"RTN","RCDPESR3",113,0)
 . ;
"RTN","RCDPESR3",114,0)
 . I 'RCTDA D
"RTN","RCDPESR3",115,0)
 .. S RCX=+$O(^RCY(344.3," "),-1)
"RTN","RCDPESR3",116,0)
 .. F RCX=RCX+1:1 I '$D(^RCY(344.3,RCX,0)) L +^RCY(344.3,RCX,0):1 I $T S X=RCX Q
"RTN","RCDPESR3",117,0)
 .. S DIC(0)="L",DIC="^RCY(344.3,",DLAYGO=344.3
"RTN","RCDPESR3",118,0)
 .. D FILE^DICN K DO,DD,DLAYGO,DIC
"RTN","RCDPESR3",119,0)
 .. L -^RCY(344.3,RCX,0)
"RTN","RCDPESR3",120,0)
 .. S RCTDA=$S(Y<0:"",1:+Y)
"RTN","RCDPESR3",121,0)
 . ;
"RTN","RCDPESR3",122,0)
 . I 'RCTDA S RCERR=3 ; Error in add of EFT record to file 344.3 
"RTN","RCDPESR3",123,0)
 ;
"RTN","RCDPESR3",124,0)
ADDQ Q $S(RCTDA>0:RCTDA,1:"")
"RTN","RCDPESR3",125,0)
 ;
"RTN","RCDPESR3",126,0)
CHKSUM(RCTDA) ; Calc the checksum for EFT record stored in RCTDA in 344.3
"RTN","RCDPESR3",127,0)
 ;
"RTN","RCDPESR3",128,0)
 N RCDPCSUM,RCDPDATA,X,Y,Z,Z0
"RTN","RCDPESR3",129,0)
 ;
"RTN","RCDPESR3",130,0)
 S (RCDPCSUM,X)=0,Z0=$G(^RCY(344.3,RCTDA,0))
"RTN","RCDPESR3",131,0)
 ; Use pcs 1-8, leaving out piece 3
"RTN","RCDPESR3",132,0)
 S RCDPDATA=$P(Z0,U,1,8),$P(RCDPDATA,U,3)=""
"RTN","RCDPESR3",133,0)
 S X=RCDPCSUM_RCDPDATA X $S($G(^%ZOSF("LPC"))'="":^("LPC"),1:"S Y=""""") S RCDPCSUM=Y
"RTN","RCDPESR3",134,0)
 ; Use detail iens and pieces 3,4,7 to complete the checksum
"RTN","RCDPESR3",135,0)
 S Z=0 F  S Z=$O(^RCY(344.31,"B",RCTDA,Z)) Q:'Z  S Z0=$G(^RCY(344.31,Z,0)),RCDPDATA=Z_U_$P(Z0,U,3,4)_U_$P(Z0,U,7),X=RCDPCSUM_RCDPDATA X $S($G(^%ZOSF("LPC"))'="":^("LPC"),1:"S Y=""""") S RCDPCSUM=Y
"RTN","RCDPESR3",136,0)
 Q RCDPCSUM
"RTN","RCDPESR3",137,0)
 ;
"RTN","RCDPESR3",138,0)
DISP(RCTIT,RCCT,RCDXM,RCXMZ) ; Sends bulletin with formatted data from message
"RTN","RCDPESR3",139,0)
 ; RCTIT = title of bulletin
"RTN","RCDPESR3",140,0)
 ; RCCT = # of lines previously populated
"RTN","RCDPESR3",141,0)
 ; RCXDM = array containing the text of the bulletin
"RTN","RCDPESR3",142,0)
 N RC,Z
"RTN","RCDPESR3",143,0)
 K ^TMP("RC1",$J),^TMP("RC",$J),^TMP("RCTEMP",$J)
"RTN","RCDPESR3",144,0)
 S RC=1,^TMP("RCTEMP",$J,RC)=$G(^TMP("RCMSGH",$J,0))
"RTN","RCDPESR3",145,0)
 S Z=0 F  S Z=$O(^TMP("RCMSG",$J,2,"D",Z)) Q:'Z  S RC=RC+1,^TMP("RCTEMP",$J,RC)=$G(^TMP("RCMSG",$J,2,"D",Z))
"RTN","RCDPESR3",146,0)
 D DISP^RCDPESR8("^TMP(""RCTEMP"",$J)","^TMP(""RC1"",$J)",1,"^TMP(""RC"",$J)",75)
"RTN","RCDPESR3",147,0)
 S Z=0 F  S Z=$O(^TMP("RC",$J,Z)) Q:'Z  S RCCT=RCCT+1,RCDXM(RCCT)=$G(^TMP("RC",$J,Z))
"RTN","RCDPESR3",148,0)
 D BULLEFT^RCDPESR0("",RCXMZ,RCTIT,.RCDXM)
"RTN","RCDPESR3",149,0)
 K ^TMP("RC1",$J),^TMP("RC",$J),^TMP("RCTEMP",$J)
"RTN","RCDPESR3",150,0)
 Q
"RTN","RCDPESR3",151,0)
 ;
"RTN","RCDPESR3",152,0)
DUP(RCM,RCIFN,RCAMT,RCAMT1) ; EOB in mail message already stored in 361.1?
"RTN","RCDPESR3",153,0)
 ; RCM = msg # EOB was received in
"RTN","RCDPESR3",154,0)
 ; RCIFN = bill ien
"RTN","RCDPESR3",155,0)
 ; RCAMT = amt pd
"RTN","RCDPESR3",156,0)
 ; RCAMT1 = amt reported billed
"RTN","RCDPESR3",157,0)
 ; Returns 0 if none found, entry #^message checksum on file if found
"RTN","RCDPESR3",158,0)
 N Z,DUP,DUP1
"RTN","RCDPESR3",159,0)
 S (DUP,DUP1,Z)=0
"RTN","RCDPESR3",160,0)
 F  S Z=$O(^IBM(361.1,"AC",RCM,Z)) Q:'Z  I +$G(^IBM(361.1,Z,0))=RCIFN D  Q:DUP
"RTN","RCDPESR3",161,0)
 . I '$P($G(^IBM(361.1,Z,100)),U,5) S DUP1=Z Q  ; Partially filed before
"RTN","RCDPESR3",162,0)
 . I +$G(^IBM(361.1,Z,1))=+RCAMT,+$P($G(^IBM(361.1,1,Z,2)),U,4)=+RCAMT1 S DUP=Z_U_+$P($G(^IBM(361.1,Z,100)),U,5) Q
"RTN","RCDPESR3",163,0)
 I 'DUP,DUP1 S DUP=DUP1_"^0"
"RTN","RCDPESR3",164,0)
 Q DUP
"RTN","RCDPESR3",165,0)
 ;
"RTN","RCDPESR4")
0^87^B65815527
"RTN","RCDPESR4",1,0)
RCDPESR4 ;ALB/TMK - Server interface 835ERA processing ;06/03/02
"RTN","RCDPESR4",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPESR4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPESR4",4,0)
 ;
"RTN","RCDPESR4",5,0)
ERAEOBIN(RCTXN,RCD,RCGBL,RCEFLG) ; Store/process 835ERA or 835XFR
"RTN","RCDPESR4",6,0)
 ;  transaction coming into the site
"RTN","RCDPESR4",7,0)
 ; RCTXN = data on the hdr record of the msg text
"RTN","RCDPESR4",8,0)
 ; RCD = array with formatted hdr data
"RTN","RCDPESR4",9,0)
 ; RCGBL = name of the array or global where the msg is stored
"RTN","RCDPESR4",10,0)
 ; RCEFLG = error flag returned if passed by reference
"RTN","RCDPESR4",11,0)
 ;
"RTN","RCDPESR4",12,0)
 N RCLAST,RCBILL,RCTDA,RCMSG,RCERR
"RTN","RCDPESR4",13,0)
 S (RCTDA,RCEFLG)=0
"RTN","RCDPESR4",14,0)
 ;
"RTN","RCDPESR4",15,0)
 L +^RCY(344.5,"AMSEQ",+$P(RCTXN,U,13))
"RTN","RCDPESR4",16,0)
 S RCMSG=$$EXTERA(RCTXN,.RCLAST,.RCBILL) ; Extract from mail msg
"RTN","RCDPESR4",17,0)
 ;
"RTN","RCDPESR4",18,0)
 ; If full msg received (99^$ record exists), file it
"RTN","RCDPESR4",19,0)
 I 'RCLAST,'$G(RCERR) D  ;No $ as last character of msg
"RTN","RCDPESR4",20,0)
 . S RCERR=2
"RTN","RCDPESR4",21,0)
 ;
"RTN","RCDPESR4",22,0)
 I RCLAST S RCTDA=+$$ADD(RCGBL,RCD("MSG#"),RCMSG,.RCBILL,.RCERR,.RCD)
"RTN","RCDPESR4",23,0)
 ;
"RTN","RCDPESR4",24,0)
 I $G(RCERR)>0 D
"RTN","RCDPESR4",25,0)
 . D ERRUPD^RCDPESR1(RCGBL,.RCD,$P(RCTXN,U),.RCERR)
"RTN","RCDPESR4",26,0)
 . I RCTDA D  ; Store exception msgs in file 344.5
"RTN","RCDPESR4",27,0)
 .. N A,C,Z
"RTN","RCDPESR4",28,0)
 .. S C=1,A(1)="Date: "_$$FMTE^XLFDT($$NOW^XLFDT(),2)
"RTN","RCDPESR4",29,0)
 .. I $G(^TMP("RCERR",$J,"TEXT"))'="" S C=C+1,A(C)=^TMP("RCERR",$J,"TEXT"),C=C+1,A(C)=" "
"RTN","RCDPESR4",30,0)
 .. S Z=0 F  S Z=$O(^TMP("RCERR",$J,"MSG",Z)) Q:'Z  S C=C+1,A(C)=^(Z)
"RTN","RCDPESR4",31,0)
 .. I $O(A(0)) D WP^DIE(344.5,RCTDA_",",5,"A","A")
"RTN","RCDPESR4",32,0)
 . S RCEFLG=1
"RTN","RCDPESR4",33,0)
 ;
"RTN","RCDPESR4",34,0)
 L -^RCY(344.5,"AMSEQ",+$P(RCTXN,U,13))
"RTN","RCDPESR4",35,0)
 I $P(RCTXN,U)'["XFR",$P(RCTXN,U,12)'="" D TAXERR^RCDPESR1("ERA",$P(RCTXN,U,6)_"  Payer ID: "_$P(RCTXN,U,7),$P(RCTXN,U,11),$P(RCTXN,U,12)) ; Send bad tax id bulletin
"RTN","RCDPESR4",36,0)
 ;
"RTN","RCDPESR4",37,0)
 Q
"RTN","RCDPESR4",38,0)
 ;
"RTN","RCDPESR4",39,0)
EXTERA(RCTXN,RCLAST,RCBILL) ;Extract 835ERA or 835XFR transaction
"RTN","RCDPESR4",40,0)
 ; INPUT:
"RTN","RCDPESR4",41,0)
 ;   RCTXN = data on 835ERA/835XFR hdr record
"RTN","RCDPESR4",42,0)
 ;   RCLAST = passed by reference and returned=1 if entire record exists
"RTN","RCDPESR4",43,0)
 ;
"RTN","RCDPESR4",44,0)
 ; OUTPUT:
"RTN","RCDPESR4",45,0)
 ;   ^TMP("RCMSG",$J,1,"D",line #)=formatted hdr data
"RTN","RCDPESR4",46,0)
 ;   ^TMP("RCMSG",$J,2,"D",line #)=raw msg data
"RTN","RCDPESR4",47,0)
 ;   if passed by reference, RCLAST = 1 if '99' record found
"RTN","RCDPESR4",48,0)
 ;   if passed by reference, RCBILL(AR bill number) is returned
"RTN","RCDPESR4",49,0)
 ;         with a 'list' of bills included in the ERA.  If an
"RTN","RCDPESR4",50,0)
 ;         entry = 1, 3rd party bill was found in file 430.
"RTN","RCDPESR4",51,0)
 ; Function returns existing ien in file 344.5 for multi part ERAs
"RTN","RCDPESR4",52,0)
 ;
"RTN","RCDPESR4",53,0)
 N CT,LINE,HCT,RCH,RCMSG,RCREFORM
"RTN","RCDPESR4",54,0)
 S (RCLAST,HCT,RCH)=0
"RTN","RCDPESR4",55,0)
 ;
"RTN","RCDPESR4",56,0)
 ; Check if sequence control # already exists or if a new record needed
"RTN","RCDPESR4",57,0)
 S RCMSG=+$O(^RCY(344.5,"AMSEQ",+$P(RCTXN,U,13),0))
"RTN","RCDPESR4",58,0)
 S CT=0
"RTN","RCDPESR4",59,0)
 I 'RCMSG D  ; Build display data for the first sequence only
"RTN","RCDPESR4",60,0)
 . S HCT=HCT+1 S LINE(HCT)="Payer Name: "_$P(RCTXN,U,6)_"    Payer ID: "_$P(RCTXN,U,7)
"RTN","RCDPESR4",61,0)
 . S HCT=HCT+1,LINE(HCT)="Trace #: "_$P(RCTXN,U,8)
"RTN","RCDPESR4",62,0)
 . S HCT=HCT+1,LINE(HCT)="Date Paid: "_$$FDT^RCDPESR9($P(RCTXN,U,9))_"    Total Amt Paid: "_$J($P(RCTXN,U,10)/100,0,2)
"RTN","RCDPESR4",63,0)
 . I $P(RCTXN,U)["XFR",$P(RCTXN,U,16)'="" S HCT=HCT+1,LINE(HCT)="Contact Info: "_$P(RCTXN,U,16)
"RTN","RCDPESR4",64,0)
 . M ^TMP("RCMSG",$J,1,"D")=LINE
"RTN","RCDPESR4",65,0)
 . S CT=CT+1,^TMP("RCMSG",$J,2,"D",CT)=RCTXN
"RTN","RCDPESR4",66,0)
 ;
"RTN","RCDPESR4",67,0)
 S ^TMP("RCMSG",$J,0)=RCTXN
"RTN","RCDPESR4",68,0)
 S RCREFORM=""
"RTN","RCDPESR4",69,0)
 F  X XMREC Q:XMER<0  D  Q:RCLAST
"RTN","RCDPESR4",70,0)
 . I +XMRG=99,$P(XMRG,U,2)="$" S RCLAST=1 Q
"RTN","RCDPESR4",71,0)
 . I +XMRG=5,$P(XMRG,U,2)'="" D
"RTN","RCDPESR4",72,0)
 .. S RCREFORM=""
"RTN","RCDPESR4",73,0)
 .. ; Check if bill is in AR & is a 3rd party bill
"RTN","RCDPESR4",74,0)
 .. S RCBILL=+$O(^PRCA(430,"B",$P(XMRG,U,2),0))
"RTN","RCDPESR4",75,0)
 .. I 'RCBILL,$E($P(XMRG,U,2),1,3)?3N,$L($P(XMRG,U,2))>7 D
"RTN","RCDPESR4",76,0)
 ... N A,B
"RTN","RCDPESR4",77,0)
 ... S A=$P(XMRG,U,2),B=$E(A,1,3)_"-"_$E(A,4,$L(A))
"RTN","RCDPESR4",78,0)
 ... I $O(^PRCA(430,"B",B,0)) S RCBILL=$O(^(0)),$P(XMRG,U,2)=B,RCREFORM=B
"RTN","RCDPESR4",79,0)
 .. I RCBILL S RCBILL=$S($P($G(^RCD(340,+$P($G(^PRCA(430,RCBILL,0)),U,9),0)),U)["DIC(36,":1,1:0)
"RTN","RCDPESR4",80,0)
 .. S RCBILL($P(XMRG,U,2))=RCBILL
"RTN","RCDPESR4",81,0)
 . I RCREFORM'="",+XMRG>5 S $P(XMRG,U,2)=RCREFORM
"RTN","RCDPESR4",82,0)
 . S:XMRG'="" CT=CT+1,^TMP("RCMSG",$J,2,"D",CT)=XMRG
"RTN","RCDPESR4",83,0)
 Q RCMSG
"RTN","RCDPESR4",84,0)
 ;
"RTN","RCDPESR4",85,0)
ADD(RCGBL,RCDMSG,RCMSG,RCBILL,RCERR,RCD) ; Add msg(s) in @RCGBL to
"RTN","RCDPESR4",86,0)
 ;  file 344.5
"RTN","RCDPESR4",87,0)
 ; RCGBL = name of the global used to store the msg data
"RTN","RCDPESR4",88,0)
 ; RCDMSG = Mailman msg number the ERA arrived in.
"RTN","RCDPESR4",89,0)
 ; RCMSG = ien of the existing entry in file 344.5 for multipart ERAs
"RTN","RCDPESR4",90,0)
 ; RCBILL(AR bill number) = list of bills included, pass by reference
"RTN","RCDPESR4",91,0)
 ; RCD = array with formatted hdr data
"RTN","RCDPESR4",92,0)
 ;
"RTN","RCDPESR4",93,0)
 ;   Errors returned in RCERR and RCERR(n)
"RTN","RCDPESR4",94,0)
 ;   Function returns entry # of msg added or "" if none added
"RTN","RCDPESR4",95,0)
 ;
"RTN","RCDPESR4",96,0)
 N RCHDR,RCTYP,RCIEN
"RTN","RCDPESR4",97,0)
 S RCHDR=$G(^TMP("RCMSGH",$J,0))
"RTN","RCDPESR4",98,0)
 S RCTYP=$P(RCHDR,U)
"RTN","RCDPESR4",99,0)
 S RCIEN=$S($G(RCMSG):RCMSG,1:$$ADDTXN(RCHDR,RCDMSG)) ;File msg hdr
"RTN","RCDPESR4",100,0)
 I RCIEN'>0 S RCERR=3 ;msg hdr can't be filed
"RTN","RCDPESR4",101,0)
 I '$G(RCERR) D LOADDET(RCIEN,RCGBL,RCHDR,.RCBILL,.RCD,.RCERR)
"RTN","RCDPESR4",102,0)
 I '$G(RCERR),'$O(RCERR(0)),RCTYP["835ERA",'$P($G(^RCY(344.5,RCIEN,0)),U,8) D TASKERA^RCDPESR2(RCIEN) ;Task to upd VistA for complete 835ERA only
"RTN","RCDPESR4",103,0)
 ;
"RTN","RCDPESR4",104,0)
 Q $S($G(RCIEN)>0&'$G(RCERR):RCIEN,1:"")
"RTN","RCDPESR4",105,0)
 ;
"RTN","RCDPESR4",106,0)
ADDTXN(RCDATA,RCDMSG) ; Add a trxn for msg in RCDATA to file 344.5
"RTN","RCDPESR4",107,0)
 ; RCDATA = data on the msg hdr record
"RTN","RCDPESR4",108,0)
 ; RCDMSG = Mailman msg number the ERA arrived in
"RTN","RCDPESR4",109,0)
 ;Function returns ien of the new entry in file 344.5 or "" if an error
"RTN","RCDPESR4",110,0)
 ;
"RTN","RCDPESR4",111,0)
 N A,RCY,DLAYGO,DIC,DD,DO,DA,X,Y,Z
"RTN","RCDPESR4",112,0)
 ;
"RTN","RCDPESR4",113,0)
 S (X,A)=RCDMSG ;Use msg ID as basis for the .01 field
"RTN","RCDPESR4",114,0)
 F Z=1:1 Q:'$D(^RCY(344.5,"B",A))  S A=X_"."_Z
"RTN","RCDPESR4",115,0)
 S X=A
"RTN","RCDPESR4",116,0)
 S DIC(0)="L",DIC="^RCY(344.5,",DLAYGO=344.5
"RTN","RCDPESR4",117,0)
 S DIC("DR")=".02////"_$E($P(RCDATA,U),1,6)_";.03///^S X=""NOW"";.04////0;.06////"_$S($P(RCDATA,U)'["XFR":1,1:0)_$S($P(RCDATA,U,13)'="":";.09////"_+$P(RCDATA,U,13)_";.08////1",1:"")_";.1////2;.11////"_RCDMSG
"RTN","RCDPESR4",118,0)
 I $P(RCDATA,U,6)'="" S DIC("DR")=DIC("DR")_";3.01////"_$P(RCDATA,U,6)
"RTN","RCDPESR4",119,0)
 D FILE^DICN K DO,DD,DLAYGO,DA,DIC
"RTN","RCDPESR4",120,0)
 S RCY=+Y
"RTN","RCDPESR4",121,0)
 Q $S(RCY>0:+RCY,1:"")
"RTN","RCDPESR4",122,0)
 ;
"RTN","RCDPESR4",123,0)
LOADDET(RCTDA,RCGBL,RCHDR,RCBILL,RCD,RCERR) ; Load the rest of the text
"RTN","RCDPESR4",124,0)
 ; into the msg
"RTN","RCDPESR4",125,0)
 ; RCTDA = ien in file 344.5
"RTN","RCDPESR4",126,0)
 ; RCGBL = name of the array holding the detail msg text to be loaded
"RTN","RCDPESR4",127,0)
 ; RCHDR = data on ERA hdr record
"RTN","RCDPESR4",128,0)
 ; RCBILL(AR bill number) = list of bills included, pass by reference
"RTN","RCDPESR4",129,0)
 ; RCD = array with formatted hdr data
"RTN","RCDPESR4",130,0)
 ;
"RTN","RCDPESR4",131,0)
 ; OUTPUT: RCERR if any errors found, pass by reference
"RTN","RCDPESR4",132,0)
 ;
"RTN","RCDPESR4",133,0)
 N RCE,RCDATA,RCMSG,RCFROM,Z,Z0
"RTN","RCDPESR4",134,0)
 K ^TMP("RCTEXT",$J),^TMP("RCRAW",$J)
"RTN","RCDPESR4",135,0)
 ;
"RTN","RCDPESR4",136,0)
 M ^TMP("RCTEXT",$J)=@RCGBL@(1,"D")
"RTN","RCDPESR4",137,0)
 M ^TMP("RCRAW",$J)=@RCGBL@(2,"D")
"RTN","RCDPESR4",138,0)
 ;
"RTN","RCDPESR4",139,0)
 S RCDATA=$G(^RCY(344.5,RCTDA,0)),RCMSG=$G(RCD("MSG#")),RCFROM=$G(RCD("FROM"))
"RTN","RCDPESR4",140,0)
 ;
"RTN","RCDPESR4",141,0)
 ; For multi-part ERA, don't update if sequence already filed
"RTN","RCDPESR4",142,0)
 ; Add seq # if not already there
"RTN","RCDPESR4",143,0)
 I $P(RCHDR,U)'["XFR",$P(RCHDR,U,13) Q:$D(^RCY(344.5,RCTDA,"S","B",+$P(RCHDR,U,14)))
"RTN","RCDPESR4",144,0)
 ;
"RTN","RCDPESR4",145,0)
 D STOREM(+$G(RCTDA),"^TMP(""RCTEXT"",$J)","^TMP(""RCRAW"",$J)",.RCE)
"RTN","RCDPESR4",146,0)
 ;
"RTN","RCDPESR4",147,0)
 I $D(RCE("DIERR")) D  ; Extract error
"RTN","RCDPESR4",148,0)
 . N DIE,DA,DR,X,Y
"RTN","RCDPESR4",149,0)
 . D EXTERR^RCDPESR1(.RCERR,.RCE)
"RTN","RCDPESR4",150,0)
 . S:$L($G(RCE)) RCERR(+$O(RCERR(""),-1)+1)=RCE
"RTN","RCDPESR4",151,0)
 . I $D(^RCY(344.5,RCTDA,0)) S DIE="^RCY(344.5,",DR=".1////4",DA=RCTDA D ^DIE
"RTN","RCDPESR4",152,0)
 E  D  ; No error - store rest of data
"RTN","RCDPESR4",153,0)
 . N Z,RCT,RCCT,RCX,RCB ; Add bills included in ERA
"RTN","RCDPESR4",154,0)
 . S RCT=0,RCCT=0,RCX=$J("",4)
"RTN","RCDPESR4",155,0)
 . S Z="" F  S Z=$O(RCBILL(Z)) Q:Z=""  D
"RTN","RCDPESR4",156,0)
 .. N DO,DD,DIC,DLAYGO,X,Y
"RTN","RCDPESR4",157,0)
 .. S:RCT=4 RCCT=RCCT+1,RCB(RCCT)=RCX,RCT=0,RCX=$J("",4) S RCX=RCX_$E($S(+RCBILL(Z):"",1:"*")_Z_$J("",15),1,15),RCT=RCT+1
"RTN","RCDPESR4",158,0)
 .. S DIC(0)="L",DIC("DR")=".02////"_(+RCBILL(Z)),X=Z,DA(1)=RCTDA,DIC="^RCY(344.5,"_DA(1)_",""B"",",DLAYGO=344.54 D FILE^DICN K DO,DD,DLAYGO,DIC
"RTN","RCDPESR4",159,0)
 .. ;
"RTN","RCDPESR4",160,0)
 . I $L(RCX)>4 S RCCT=RCCT+1,RCB(RCCT)=RCX
"RTN","RCDPESR4",161,0)
 . ; Add list of bills to display data
"RTN","RCDPESR4",162,0)
 . I $O(RCB(0)) D WP^DIE(344.5,RCTDA_",",1,"A","RCB")
"RTN","RCDPESR4",163,0)
 . ; Add seq #
"RTN","RCDPESR4",164,0)
 . S DA(1)=RCTDA,DIC="^RCY(344.5,"_DA(1)_",""S"",",DIC(0)="L",X=$P(RCHDR,U,14),DIC("DR")=".02////"_$S($P(RCHDR,U,15)="Y":1,1:0)_";.03///^S X=""NOW"";.04////"_RCMSG,X=+$P(RCHDR,U,14),DLAYGO=344.53
"RTN","RCDPESR4",165,0)
 . D FILE^DICN K DO,DD,DLAYGO,DIC
"RTN","RCDPESR4",166,0)
 . ;
"RTN","RCDPESR4",167,0)
 . I $P(RCHDR,U)["835XFR" D XFR^RCDPESR5(RCTDA,RCFROM,RCMSG,.RCD) Q
"RTN","RCDPESR4",168,0)
 . ;
"RTN","RCDPESR4",169,0)
 . ; Proceed only if not a transfer record
"RTN","RCDPESR4",170,0)
 . I $P(RCDATA,U,9)'="" D  ; Determine if all sequences received yet
"RTN","RCDPESR4",171,0)
 .. N RCOK,RCLAST
"RTN","RCDPESR4",172,0)
 .. S RCOK=1,RCLAST=0
"RTN","RCDPESR4",173,0)
 .. F Z=1:1 Q:'RCOK!RCLAST  D
"RTN","RCDPESR4",174,0)
 ... I 'RCLAST,'$D(^RCY(344.5,RCTDA,"S","B",Z)) S RCOK=0 Q
"RTN","RCDPESR4",175,0)
 ... S Z0=+$O(^RCY(344.5,RCTDA,"S","B",Z,0)),Z0=$G(^RCY(344.5,RCTDA,"S",Z0,0))
"RTN","RCDPESR4",176,0)
 ... I Z0="" S RCOK=0 Q
"RTN","RCDPESR4",177,0)
 ... I $P(Z0,U,2) S RCLAST=1 ; Last sequence received and all before it
"RTN","RCDPESR4",178,0)
 .. ;
"RTN","RCDPESR4",179,0)
 .. I RCOK D
"RTN","RCDPESR4",180,0)
 ... N DA,DIE,DR,X,Y
"RTN","RCDPESR4",181,0)
 ... S DA=RCTDA,DR=".08////0;.1///@",DIE="^RCY(344.5," D ^DIE
"RTN","RCDPESR4",182,0)
 ... I '$O(^RCY(344.5,RCTDA,"B","AV",1,0)) S RCERR=-1 D  ; No valid bills found
"RTN","RCDPESR4",183,0)
 .... N RCE,DIK,DA
"RTN","RCDPESR4",184,0)
 .... S RCE(1)="No valid bills for this site were found in this ERA",RCE(2)="Please contact the Implementation Manager group with this information",RCE(3)=" "
"RTN","RCDPESR4",185,0)
 .... D BULLERA^RCDPESR0("D"_$S($O(^RCY(344.5,RCTDA,2,0)):"F",1:""),RCTDA,$G(RCD("MSG#")),"EDI LBOX - NO VALID BILLS ON ERA "_$E($G(RCD("PAYFROM")),1,20),.RCE,0)
"RTN","RCDPESR4",186,0)
 .... S DIK="^RCY(344.5,",DA=RCTDA D ^DIK ; Delete entry
"RTN","RCDPESR4",187,0)
 ;
"RTN","RCDPESR4",188,0)
 K ^TMP("RCTEXT",$J),^TMP("RCRAW",$J)
"RTN","RCDPESR4",189,0)
 Q
"RTN","RCDPESR4",190,0)
 ;
"RTN","RCDPESR4",191,0)
STOREM(RCTDA,RCDISP,RCTEXT,RCE) ;Store msg text in file 344.5
"RTN","RCDPESR4",192,0)
 ; INPUT:
"RTN","RCDPESR4",193,0)
 ;   RCTDA = ien of the entry in file 344.5
"RTN","RCDPESR4",194,0)
 ;   RCDISP = name of the array where display msg text is retrieved from
"RTN","RCDPESR4",195,0)
 ;            or "@" to delete the text from the display text field
"RTN","RCDPESR4",196,0)
 ;   RCTEXT = name of the array where raw msg text is retrieved from
"RTN","RCDPESR4",197,0)
 ;            or "@" to delete the text from the raw msg field
"RTN","RCDPESR4",198,0)
 ; OUTPUT:
"RTN","RCDPESR4",199,0)
 ;   RCE = array of errors (RCE("DIERR")) returned, pass by reference
"RTN","RCDPESR4",200,0)
 ;
"RTN","RCDPESR4",201,0)
 N RCZ,X,Y,DIE
"RTN","RCDPESR4",202,0)
 K RCE("DIERR")
"RTN","RCDPESR4",203,0)
 ;
"RTN","RCDPESR4",204,0)
 I $S($G(RCDISP)="@":1,1:$D(@RCDISP)'<10) D
"RTN","RCDPESR4",205,0)
 . F RCZ=1:1:20 D WP^DIE(344.5,RCTDA_",",1,"AK",""_RCDISP_"","RCE") Q:$S('$D(RCE("DIERR")):1,+RCE("DIERR")=1:$G(RCE("DIERR",1))'=110,1:1)  K:RCZ<20 RCE("DIERR") ; On lock error, retry up to 20 times
"RTN","RCDPESR4",206,0)
 ;
"RTN","RCDPESR4",207,0)
 I '$O(RCE("DIERR",0)),$S($G(RCTEXT)="@":1,1:$D(@RCTEXT)'<10) D
"RTN","RCDPESR4",208,0)
 . F RCZ=1:1:20 D WP^DIE(344.5,RCTDA_",",2,"AK",""_RCTEXT_"","RCE") Q:$S('$D(RCE("DIERR")):1,+RCE("DIERR")=1:$G(RCE("DIERR",1))'=110,1:1)  K:RCZ<20 RCE("DIERR") ; On lock error, retry up to 20 times
"RTN","RCDPESR4",209,0)
 Q
"RTN","RCDPESR4",210,0)
 ;
"RTN","RCDPESR5")
0^88^B27161834
"RTN","RCDPESR5",1,0)
RCDPESR5 ;ALB/TMK - Server interface 835XFR processing ;10/01/02
"RTN","RCDPESR5",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPESR5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPESR5",4,0)
 ;
"RTN","RCDPESR5",5,0)
XFR(RCTDA,RCFROM,RCMSG,RCD) ; Send bulletin, update 344.5 for transfer EOB into site
"RTN","RCDPESR5",6,0)
 ; RCTDA = ien in file 344.5 being updated
"RTN","RCDPESR5",7,0)
 ; RCFROM = the sender's mail address from the mail message
"RTN","RCDPESR5",8,0)
 ; RCMSG = message # the data was received in
"RTN","RCDPESR5",9,0)
 ; RCD = array containing formatted header data
"RTN","RCDPESR5",10,0)
 ;
"RTN","RCDPESR5",11,0)
 N RCCT,RCDXM,DA,DR,DIE,X,Y,Z,RCFROMNM
"RTN","RCDPESR5",12,0)
 S Z=$P($P(RCD("SUBJ"),"REF #",2),"#"),RCFROMNM=$TR($P(RCFROM,"@",2),">")
"RTN","RCDPESR5",13,0)
 I RCFROMNM="" S RCFROMNM=RCFROM
"RTN","RCDPESR5",14,0)
 S DA=RCTDA,DR=".05///@;.08////1;.1///3"_$S($P(RCFROM,"@",2)'="":";.12////"_RCFROMNM,1:"")_";.13////^S X=("_+Z_"_$C(59)_"_$P(Z,";",2)_")"_$S($G(RCD("PAYFROM"))'="":";3.01////"_RCD("PAYFROM"),1:"")
"RTN","RCDPESR5",15,0)
 S DIE="^RCY(344.5," D ^DIE
"RTN","RCDPESR5",16,0)
 ;
"RTN","RCDPESR5",17,0)
 D SENDACK(RCTDA,"") ; acknowledge receipt of transferred EOB
"RTN","RCDPESR5",18,0)
 ;
"RTN","RCDPESR5",19,0)
 S RCDXM(1)="An EEOB transmission has been received by the EDI Lockbox",RCDXM(2)="  system that was sent to you from another VistA site.  Please review"
"RTN","RCDPESR5",20,0)
 S RCDXM(3)="  it in EEOB exception processing and file the EEOB if it belongs to your",RCDXM(4)="  site or delete the message to return the EEOB to the site it was sent from."
"RTN","RCDPESR5",21,0)
 S RCDXM(5)=" ",RCDXM(6)="The message was sent by "_RCFROM
"RTN","RCDPESR5",22,0)
 S RCDXM(7)="The mail message number is "_RCMSG
"RTN","RCDPESR5",23,0)
 S RCDXM(8)=" ",RCDXM(9)="EEOB DATA INCLUDED:"
"RTN","RCDPESR5",24,0)
 S RCCT=9
"RTN","RCDPESR5",25,0)
 K ^TMP($J)
"RTN","RCDPESR5",26,0)
 D DISP^RCDPESR0("^RCY(344.5,"_RCTDA_",2)","^TMP($J,""PRCA_EXT"")",1,"^TMP($J,""PRCA_LINES"")",70)
"RTN","RCDPESR5",27,0)
 S Z=0 F  S Z=$O(^TMP($J,"PRCA_LINES",Z)) Q:'Z  S RCCT=RCCT+1,RCDXM(RCCT)=$J("",3)_$G(^TMP($J,"PRCA_LINES",Z))
"RTN","RCDPESR5",28,0)
 D BULLERA^RCDPESR0("",RCTDA,RCMSG,"EDI LBOX EEOB FROM "_$E(RCFROMNM,1,18)_" FOR "_$E($G(RCD("PAYFROM")),1,20),.RCDXM,1)
"RTN","RCDPESR5",29,0)
 K ^TMP($J)
"RTN","RCDPESR5",30,0)
 Q
"RTN","RCDPESR5",31,0)
 ;
"RTN","RCDPESR5",32,0)
SENDACK(RCTDA,RCSTAT) ; Send accept/reject msg to transf 'from' site
"RTN","RCDPESR5",33,0)
 ; RCTDA = ien of entry file 344.5
"RTN","RCDPESR5",34,0)
 ; RCSTAT = flag to indicate what happened
"RTN","RCDPESR5",35,0)
 ;   values:  "" = receipt   1 = accepted   0 = rejected
"RTN","RCDPESR5",36,0)
 ;
"RTN","RCDPESR5",37,0)
 N RC,RC0,RCDOM,RCREF,XMTO,XMBODY,XMZ
"RTN","RCDPESR5",38,0)
 ; Send a mail message to sending site for accept/reject of EOB
"RTN","RCDPESR5",39,0)
 S RC0=$G(^RCY(344.5,RCTDA,0)),RCREF=$P(RC0,U,13)
"RTN","RCDPESR5",40,0)
 S RCDOM="@"_$S($P(RC0,U,12)'="":$P(RC0,U,12),1:$$KSP^XUPARAM("WHERE")) S:RCDOM="@" RCDOM=""
"RTN","RCDPESR5",41,0)
 I RCREF,$P(RCREF,";",2) D
"RTN","RCDPESR5",42,0)
 . ; 835ACK^accept/reject flag (""/0/1)^ien file 344_;_ien file 344.41
"RTN","RCDPESR5",43,0)
 . S RC(1)="835XAK^"_RCSTAT_U_+$P(RCREF,";")_";"_+$P(RCREF,";",2)
"RTN","RCDPESR5",44,0)
 . S XMBODY="RC",XMTO("S.RCDPE EDI LOCKBOX SERVER"_RCDOM)=""
"RTN","RCDPESR5",45,0)
 . D
"RTN","RCDPESR5",46,0)
 .. N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPESR5",47,0)
 .. D SENDMSG^XMXAPI(.5,"TRANSFER EEOB ACKNOWLEDGEMENT",XMBODY,.XMTO,,.XMZ)
"RTN","RCDPESR5",48,0)
 Q
"RTN","RCDPESR5",49,0)
 ;
"RTN","RCDPESR5",50,0)
FILEEOB(RCTDA) ; Files trans-in EOB in IB
"RTN","RCDPESR5",51,0)
 N DIE,DA,DR,X,Y,RCE
"RTN","RCDPESR5",52,0)
 D UPDEOB^RCDPESR2(RCTDA,5)
"RTN","RCDPESR5",53,0)
 I $D(^RCY(344.5,RCTDA,0)) D
"RTN","RCDPESR5",54,0)
 . S DIE="^RCY(344.5,",DR=".04////0;.05///@;.1////5",DA=RCTDA D ^DIE
"RTN","RCDPESR5",55,0)
 Q
"RTN","RCDPESR5",56,0)
 ;
"RTN","RCDPESR5",57,0)
BULL1(RCTDA,RCERR,DUP) ; Send bulletin for EDI Lockbox EOB exceptions
"RTN","RCDPESR5",58,0)
 ; RCTDA = ien of entry in file 344.5
"RTN","RCDPESR5",59,0)
 ; RCERR = the name of the error global
"RTN","RCDPESR5",60,0)
 ; DUP = ien of existing entry in file 344.4 if ERA is duplicate
"RTN","RCDPESR5",61,0)
 ;
"RTN","RCDPESR5",62,0)
 S DUP=+$G(DUP)
"RTN","RCDPESR5",63,0)
 D BULLERA^RCDPESR0("D",RCTDA,$P($G(^RCY(344.5,RCTDA,0)),U,11),"EDI LBOX "_$S(DUP:"ERA - DUPLICATE TRANSMISSION MSG #"_DUP,1:" EEOB - EXCEPTIONS")_" "_$E($P($G(^RCY(344.5,RCTDA,3)),U),1,20),RCERR,0)
"RTN","RCDPESR5",64,0)
 Q
"RTN","RCDPESR5",65,0)
 ;
"RTN","RCDPESR5",66,0)
BULL2(RCTDA,RCERR,RCXMG) ; Send bulletin for EOB transfer received at site
"RTN","RCDPESR5",67,0)
 ; RCTDA = ien of entry in file 344.5
"RTN","RCDPESR5",68,0)
 ; RCXMG = incoming message #
"RTN","RCDPESR5",69,0)
 ; RCERR = the name of the error global
"RTN","RCDPESR5",70,0)
 ;
"RTN","RCDPESR5",71,0)
 N RCDIQ,RCXM,RCXM1,XMBODY,XMZ,XMTO,RC,Z,Q,RCSUBJ
"RTN","RCDPESR5",72,0)
 S RCSUBJ="EDI LBOX EEOB DETAIL RE-FILE ATTEMPTED TO IB"
"RTN","RCDPESR5",73,0)
 S XMTO("I:G.RCDPE PAYMENTS")="",RC=0
"RTN","RCDPESR5",74,0)
 K ^TMP("RCERR_BULL2",$J)
"RTN","RCDPESR5",75,0)
 S RC=RC+1,^TMP("RCERR_BULL2",$J,RC)="The following EEOB was received at your site.",RC=RC+1,^TMP("RCERR_BULL2",$J,RC)="It was received on: "_$$FMTE^XLFDT($$NOW^XLFDT(),2)_" in mail msg # "_RCXMG_"."
"RTN","RCDPESR5",76,0)
 S RC=RC+1,^TMP("RCERR_BULL2",$J,RC)="The initial attempt to file this data in IB failed and this message",RC=RC+1,^TMP("RCERR_BULL2",$J,RC)="is the result of a subsequent attempt to file this EEOB detail data in IB"
"RTN","RCDPESR5",77,0)
 S RC=RC+1,^TMP("RCERR_BULL2",$J,RC)=" "
"RTN","RCDPESR5",78,0)
 D GETS^DIQ(344.4,+RCTDA_",","*","IEN","RCDIQ")
"RTN","RCDPESR5",79,0)
 D TXT0^RCDPEX31(+RCTDA,.RCDIQ,.RCXM,0)
"RTN","RCDPESR5",80,0)
 S Z=0 F  S Z=$O(RCXM(Z)) Q:'Z  S RC=RC+1,^TMP("RCERR_BULL2",$J,RC)=RCXM(Z)
"RTN","RCDPESR5",81,0)
 I $G(RCERR)'="",$E(RCERR,1,5)'="^TMP(" S RC=RC+1,^TMP("RCERR_BULL2",$J,RC)=RCERR,RC=RC+1,^TMP("RCERR_BULL2",$J,RC)=" "
"RTN","RCDPESR5",82,0)
 S RCERR=$S($E(RCERR,1,5)="^TMP(":RCERR,1:"RCERR")
"RTN","RCDPESR5",83,0)
 I $O(@RCERR@(""))'="" D
"RTN","RCDPESR5",84,0)
 . S Z="" F  S Z=$O(@RCERR@(Z)) Q:Z=""  D
"RTN","RCDPESR5",85,0)
 .. I $G(@RCERR@(Z))'="" S RC=RC+1,^TMP("RCERR_BULL2",$J,RC)=@RCERR@(Z)
"RTN","RCDPESR5",86,0)
 .. I $O(@RCERR@(Z,0)) S Q="" F  S Q=$O(@RCERR@(Z,Q)) Q:Q=""  S RC=RC+1,^TMP("RCERR_BULL2",$J,RC)=@RCERR@(Z,Q)
"RTN","RCDPESR5",87,0)
 S XMBODY="^TMP(""RCERR_BULL2"","_$J_")"
"RTN","RCDPESR5",88,0)
 D
"RTN","RCDPESR5",89,0)
 . N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPESR5",90,0)
 . D SENDMSG^XMXAPI(.5,RCSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPESR5",91,0)
 K ^TMP("RCERR_BULL2",$J)
"RTN","RCDPESR5",92,0)
 Q
"RTN","RCDPESR5",93,0)
 ;
"RTN","RCDPESR5",94,0)
DISP1(RCCT,RCNOH) ; Extract formatted EOB detail for bill
"RTN","RCDPESR5",95,0)
 ; RCCT = bill seq# within ERA transmission
"RTN","RCDPESR5",96,0)
 ; RCNOH = 1 if no header text needed on 05 rec
"RTN","RCDPESR5",97,0)
 ;
"RTN","RCDPESR5",98,0)
 ; Error array returned in ^TMP("RCERR1",$J)
"RTN","RCDPESR5",99,0)
 ;
"RTN","RCDPESR5",100,0)
 N RC1,RC2,RCCT1,Z
"RTN","RCDPESR5",101,0)
 D DISP^RCDPESR0("^TMP($J,""RCDP-EOB"","_RCCT_")","RC1",1)
"RTN","RCDPESR5",102,0)
 D FMTDSP^RCDPESR0("RC1","RC2",75,RCNOH)
"RTN","RCDPESR5",103,0)
 S Z=0,RCCT1=$O(^TMP("RCERR1",$J,RCCT," "),-1)
"RTN","RCDPESR5",104,0)
 F  S Z=$O(RC2(Z)) Q:'Z  S RCCT1=RCCT1+1,^TMP("RCERR1",$J,RCCT,RCCT1)=RC2(Z)
"RTN","RCDPESR5",105,0)
 Q
"RTN","RCDPESR5",106,0)
 ;
"RTN","RCDPESR6")
0^89^B25677852
"RTN","RCDPESR6",1,0)
RCDPESR6 ;ALB/TMK - Server auto-update file 344.4 - EDI Lockbox ;10/29/02
"RTN","RCDPESR6",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPESR6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPESR6",4,0)
 ;
"RTN","RCDPESR6",5,0)
UPD3444(RCRTOT) ; Add EOB detail to list in 344.41 for file 344.4 entry RCRTOT
"RTN","RCDPESR6",6,0)
 ; If passed by reference, RCRTOT is returned = "" if errors
"RTN","RCDPESR6",7,0)
 ;
"RTN","RCDPESR6",8,0)
 N RC,RCCT,RC1,RC2,RCEOB,DA,DR,DO,DD,DLAYGO,DIC,DIK,X,Y,Z
"RTN","RCDPESR6",9,0)
 S RC=0 F  S RC=$O(^TMP($J,"RCDPEOB",RC)) Q:'RC  S RC1=$G(^(RC)),RC2=$G(^(RC,"EOB")),RCEOB=+RC2 D  Q:'RCRTOT
"RTN","RCDPESR6",10,0)
 . ; Upd 344.41 with reference to this record if it doesn't already exist
"RTN","RCDPESR6",11,0)
 . I RCEOB>0 Q:$D(^RCY(344.4,RCRTOT,1,"AC",RCEOB))
"RTN","RCDPESR6",12,0)
 . I RCEOB'>0,$S($P(RC1,U,2)'="":$D(^RCY(344.4,RCRTOT,1,"AD",$P(RC1,U,2))),1:0) Q
"RTN","RCDPESR6",13,0)
 . S DA(1)=RCRTOT,X=RC,DIC="^RCY(344.4,"_DA(1)_",1,",DIC(0)="L",DLAYGO=344.41
"RTN","RCDPESR6",14,0)
 . S DIC("DR")=$S($G(RCEOB)>0:".02////"_RCEOB,1:".05////"_$P(RC1,U,2)_";.07////1")
"RTN","RCDPESR6",15,0)
 . I $P(RC2,U,2)'="" S DIC("DR")=DIC("DR")_$S($L(DIC("DR")):";",1:"")_".03///"_$P(RC2,U,2) ; amt
"RTN","RCDPESR6",16,0)
 . I $P(RC2,U,3)'="" S DIC("DR")=DIC("DR")_$S($L(DIC("DR")):";",1:"")_".04////"_$P(RC2,U,3) ;ins co
"RTN","RCDPESR6",17,0)
 . I $P(RC2,U,4) S DIC("DR")=DIC("DR")_$S($L(DIC("DR")):";",1:"")_".14////1" ;reversal
"RTN","RCDPESR6",18,0)
 . I $P(RC2,U,5)'="" S DIC("DR")=DIC("DR")_$S($L(DIC("DR")):";",1:"")_".15////^S X=$E($P(RC2,U,5),1,30)" ; Patient name
"RTN","RCDPESR6",19,0)
 . D FILE^DICN K DO,DD,DLAYGO,DIC,DIK
"RTN","RCDPESR6",20,0)
 . S RCCT=+Y
"RTN","RCDPESR6",21,0)
 . I RCCT<0 D  Q
"RTN","RCDPESR6",22,0)
 .. S DA=RCRTOT,DIK="^RCY(344.4," D ^DIK
"RTN","RCDPESR6",23,0)
 .. S RCRTOT=0
"RTN","RCDPESR6",24,0)
 . ; If there is no IB EOB record, store the raw data in 344.411
"RTN","RCDPESR6",25,0)
 . I RC1'>0!(RCEOB'>0) D
"RTN","RCDPESR6",26,0)
 .. N RCDATA,RCC,RCDA
"RTN","RCDPESR6",27,0)
 .. S RCC=2,RCDATA(1)=$G(^TMP($J,"RCDPEOB","HDR"))
"RTN","RCDPESR6",28,0)
 .. S Z=0 F  S Z=$O(^TMP($J,"RCDPEOB",RCCT,Z)) Q:'Z  S RCC=RCC+1,RCDATA(RCC)=$G(^TMP($J,"RCDPEOB",RCCT,Z))
"RTN","RCDPESR6",29,0)
 .. S RCDA(1)=RCRTOT,RCDA=RCCT
"RTN","RCDPESR6",30,0)
 .. D WP^DIE(344.41,$$IENS^DILF(.RCDA),1,"A","RCDATA")
"RTN","RCDPESR6",31,0)
 Q
"RTN","RCDPESR6",32,0)
 ;
"RTN","RCDPESR6",33,0)
ERATOT(RCTDA,RCERR) ; File ERA TOTAL rec in 344.4 from entry RCTDA in 344.5
"RTN","RCDPESR6",34,0)
 ; RCTDA = ien file 344.5
"RTN","RCDPESR6",35,0)
 ; Returns: the ien file 344.4
"RTN","RCDPESR6",36,0)
 ;          RCERR if passed by reference, with error text
"RTN","RCDPESR6",37,0)
 ;          RCERR(1)=duplicated message
"RTN","RCDPESR6",38,0)
 N RCTYPE,RCDA,RCMETH,RCTRACE,RCID,RCDT,RCAMT,RCDUP,RCZ,RCX,RCPAYER,DIE,DIK,DIC,DLAYGO,DD,DO,DR,DA,X,Y,Z0,Z1
"RTN","RCDPESR6",39,0)
 S (RCERR,RCDA)=""
"RTN","RCDPESR6",40,0)
 S RCZ=$G(^RCY(344.5,RCTDA,2,1,0))
"RTN","RCDPESR6",41,0)
 S RCTYPE=$P(RCZ,U),RCTRACE=$P(RCZ,U,8),RCID=$P(RCZ,U,7),RCPAYER=$P(RCZ,U,6),RCMETH=$P(RCZ,U,17)
"RTN","RCDPESR6",42,0)
 ; Need header record as first entry in field
"RTN","RCDPESR6",43,0)
 I RCTYPE'["835ERA" S RCERR="No header record found in message.  An EEOB exception record was created" G ERATOTQ
"RTN","RCDPESR6",44,0)
 ;
"RTN","RCDPESR6",45,0)
 S RCDT=$$FMDT^RCDPESR1($P(RCZ,U,9)),RCAMT=$J(($P(RCZ,U,10)/100),0,2)
"RTN","RCDPESR6",46,0)
 ;Elec ERA's must have a trace # and an ins co id
"RTN","RCDPESR6",47,0)
 I RCTRACE=""!(RCID="") S RCERR="Trace # or ins ID missing on ERA transaction.  An EEOB exception record was created." G ERATOTQ
"RTN","RCDPESR6",48,0)
 ; Make sure it's not already there
"RTN","RCDPESR6",49,0)
 S (RCDUP,Z1)=0
"RTN","RCDPESR6",50,0)
 F  S Z1=$O(^RCY(344.4,"ATRID",RCTRACE,RCID,Z1)) Q:'Z1  S Z0=$G(^RCY(344.4,Z1,0)) I $P(Z0,U,4)=RCDT,+$P(Z0,U,5)=+RCAMT S RCDUP=1 Q
"RTN","RCDPESR6",51,0)
 ;
"RTN","RCDPESR6",52,0)
 I RCDUP S RCERR="DUP",RCERR(1)=$S($P(Z0,U,12)'=$P($G(^RCY(344.5,RCTDA,0)),U,11):$P(Z0,U,12),1:-1) G ERATOTQ
"RTN","RCDPESR6",53,0)
 ;
"RTN","RCDPESR6",54,0)
 S RCX=+$O(^RCY(344.4," "),-1)
"RTN","RCDPESR6",55,0)
 S DIC(0)="L",DIC="^RCY(344.4,",DLAYGO=344.4
"RTN","RCDPESR6",56,0)
 S DIC("DR")=".02////"_RCTRACE_";.03////"_RCID_";.04////"_RCDT_";.05////"_RCAMT_";.06////"_$P(RCZ,U,6)_";.09////0;.12////"_$P($G(^RCY(344.5,RCTDA,0)),U,11)_";.07////"_$$NOW^XLFDT()_";.1////1"
"RTN","RCDPESR6",57,0)
 I RCMETH'="" S DIC("DR")=DIC("DR")_";.15////"_RCMETH
"RTN","RCDPESR6",58,0)
 F RCX=RCX+1:1 L +^RCY(344.4,RCX,0):1 I $T,'$D(^RCY(344.4,RCX,0)) S X=RCX Q
"RTN","RCDPESR6",59,0)
 D FILE^DICN K DO,DLAYGO,DD,DIC
"RTN","RCDPESR6",60,0)
 L -^RCY(344.4,RCX,0)
"RTN","RCDPESR6",61,0)
 S RCDA=$S(Y<0:"",1:+Y)
"RTN","RCDPESR6",62,0)
 I 'RCDA D
"RTN","RCDPESR6",63,0)
 . S RCERR="An error was encountered that prevented the adding of an ERA totals record.  An EEOB exception record was created."
"RTN","RCDPESR6",64,0)
 ;
"RTN","RCDPESR6",65,0)
ERATOTQ Q RCDA
"RTN","RCDPESR6",66,0)
 ;
"RTN","RCDPESR6",67,0)
UPDCON(RCRTOT) ; Add contact information to file 344.4 for an ERA
"RTN","RCDPESR6",68,0)
 N DIE,DA,DR,Z,Q,X,Y
"RTN","RCDPESR6",69,0)
 S Z=$G(^TMP($J,"RCDPEOB","CONTACT"))
"RTN","RCDPESR6",70,0)
 Q:$TR($P(Z,U,3,9),U)=""
"RTN","RCDPESR6",71,0)
 S DA=RCRTOT,DIE="^RCY(344.4,",DR=""
"RTN","RCDPESR6",72,0)
 F Q=3:1:9 S DR=DR_$S(DR'="":";3.0",1:"3.0")_(Q-2)_"///"_$S($P(Z,U,Q)="":"@",1:"/"_$P(Z,U,Q))
"RTN","RCDPESR6",73,0)
 D ^DIE
"RTN","RCDPESR6",74,0)
 Q
"RTN","RCDPESR6",75,0)
 ;
"RTN","RCDPESR6",76,0)
UPDADJ(RCRTOT) ; Add ERA level adj data to file 344.4
"RTN","RCDPESR6",77,0)
 N Z,Z0,DA,DIC,DLAYGO,DR,X,Y,DO,DD
"RTN","RCDPESR6",78,0)
 ; Remove any already there
"RTN","RCDPESR6",79,0)
 S Z=0 F  S Z=$O(^RCY(344.4,RCRTOT,2,Z)) Q:'Z  S DA(1)=RCRTOT,DA=Z D ^DIK
"RTN","RCDPESR6",80,0)
 ;
"RTN","RCDPESR6",81,0)
 S Z=0 F  S Z=$O(^TMP($J,"RCDPEOB","ADJ",Z)) Q:'Z  S Z0=$G(^(Z)) D
"RTN","RCDPESR6",82,0)
 . S DIC(0)="L",X=$P(Z0,U,3)_" ",DA(1)=RCRTOT,DIC="^RCY(344.4,"_DA(1)_",2,",DIC("DR")=$S($P(Z0,U,2)'="":".02////"_$P(Z0,U,2),1:"")
"RTN","RCDPESR6",83,0)
 . S DIC("DR")=DIC("DR")_$S(DIC("DR")'="":";",1:"")_$S($P(Z0,U,4)'="":".03////"_$J(-$P(Z0,U,4)/100,"",2),1:"")
"RTN","RCDPESR6",84,0)
 . S DIC("DR")=DIC("DR")_$S(DIC("DR")'="":";",1:"")_$S($P(Z0,U,5)'="":".04////"_$P(Z0,U,5),1:""),DLAYGO=344.42
"RTN","RCDPESR6",85,0)
 . S:$O(^RCY(344.4,RCRTOT,2,"B",X,0)) X=""""_X_""""
"RTN","RCDPESR6",86,0)
 . D FILE^DICN K DIC,DO,DD
"RTN","RCDPESR6",87,0)
 Q
"RTN","RCDPESR6",88,0)
 ;
"RTN","RCDPESR6",89,0)
DUPREC(RCET,RCCT,RCSTAR,RCFILE,RCALLDUP,RCEOB,RCBILL,RCDUPEOB) ; Overflow from RCDPESR2
"RTN","RCDPESR6",90,0)
 S ^TMP("RCERR1",$J,RCCT)=" ",^TMP("RCERR1",$J,RCCT,1)=RCET_RCCT_RCSTAR
"RTN","RCDPESR6",91,0)
 S ^TMP("RCERR1",$J,RCCT,2)="(Warning): EEOB detail already filed for "_RCBILL_" - "_$S(RCALLDUP:"Duplicate not stored",1:"EEOB updated"),^TMP("RCERR1",$J,RCCT,3)=" " S:RCFILE=5 ^TMP("RCERR1",$J,RCCT,"*")=^TMP("RCERR1",$J,RCCT,2)
"RTN","RCDPESR6",92,0)
 I RCALLDUP S RCEOB="",RCDUPEOB=-1 Q
"RTN","RCDPESR6",93,0)
 S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U)=RCEOB
"RTN","RCDPESR6",94,0)
 Q
"RTN","RCDPESR6",95,0)
 ;
"RTN","RCDPESR8")
0^90^B25145000
"RTN","RCDPESR8",1,0)
RCDPESR8 ;ALB/TMK - EFT return file field captions ;09-SEP-2003
"RTN","RCDPESR8",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPESR8",3,0)
 ;
"RTN","RCDPESR8",4,0)
 ; Note: if the 835 EFT flat file changes, make the corresponding changes
"RTN","RCDPESR8",5,0)
 ;       in this routine.
"RTN","RCDPESR8",6,0)
DISP(RCMIN,RCMOUT,RCFMT,RCFULL,RCW) ; Format display for 835 EFT return msg
"RTN","RCDPESR8",7,0)
 ; RCMIN = the name of the array that contains the raw message data
"RTN","RCDPESR8",8,0)
 ;         The data is contained at the next level and the subscript is
"RTN","RCDPESR8",9,0)
 ;         numeric and greater than 0 OR the data can be at the
"RTN","RCDPESR8",10,0)
 ;         0-node subsequent to the final subscript.
"RTN","RCDPESR8",11,0)
 ;         If the message array is a global ^TMP($J,"MSG",n), RCMIN
"RTN","RCDPESR8",12,0)
 ;         will equal "^TMP($J,""MSG"")" and the message text will be
"RTN","RCDPESR8",13,0)
 ;         in ^TMP($J,"MSG",1), ^TMP($J,"MSG",2), etc.  OR
"RTN","RCDPESR8",14,0)
 ;         the message text can be defined at TMP($J,"MSG",1,0) ^...,2,0)
"RTN","RCDPESR8",15,0)
 ;         etc.
"RTN","RCDPESR8",16,0)
 ; RCMOUT = the name of the array that should be returned.  This array
"RTN","RCDPESR8",17,0)
 ;          will follow the same convention as the input array.  The
"RTN","RCDPESR8",18,0)
 ;          array will be returned with a numeric final subscript.  If
"RTN","RCDPESR8",19,0)
 ;          RCMOUT is passed as "^TMP($J,""MSG1"")", then the display
"RTN","RCDPESR8",20,0)
 ;          lines will be returned in ^TMP($J,"MSG1",1),
"RTN","RCDPESR8",21,0)
 ;          ^TMP($J,"MSG1",2), etc.  Note the array RCMOUT is killed
"RTN","RCDPESR8",22,0)
 ;          on entry to this call
"RTN","RCDPESR8",23,0)
 ; RCFMT = 0 or null if call should return raw data, 1 to execute the
"RTN","RCDPESR8",24,0)
 ;         transforms attached to the fields
"RTN","RCDPESR8",25,0)
 ; RCFULL = the name of an array if the data should be returned in
"RTN","RCDPESR8",26,0)
 ;          this array, formatted into lines for display.  If not sent,
"RTN","RCDPESR8",27,0)
 ;          only the display data by element is returned in RCMOUT.  If
"RTN","RCDPESR8",28,0)
 ;          RCFULL is sent, the array is killed before populating it
"RTN","RCDPESR8",29,0)
 ; RCW = max # of characters per line to return in array RCFULL
"RTN","RCDPESR8",30,0)
 ;
"RTN","RCDPESR8",31,0)
 N Z,Z0,Z1,R,RC,RCCT,RCREF,RCDATA,RCQ
"RTN","RCDPESR8",32,0)
 S RCCT=0 K @RCMOUT
"RTN","RCDPESR8",33,0)
 S Z=0 F  S Z=$O(@RCMIN@(Z)) Q:'Z  S Z0=$S($G(@RCMIN@(Z))'="":@RCMIN@(Z),1:$G(@RCMIN@(Z,0))) I Z0'="" S RCQ=0 D
"RTN","RCDPESR8",34,0)
 . F Z1=1:1:$L(Z0,U) I $P(Z0,U,Z1)'="" D  Q:RCQ
"RTN","RCDPESR8",35,0)
 .. S RCDATA=$P(Z0,U,Z1)
"RTN","RCDPESR8",36,0)
 .. I Z1=1 D  Q:RCQ
"RTN","RCDPESR8",37,0)
 ... S RCREF=$S(RCDATA'["EFT":RCDATA,1:"EFT"),R=RCREF_"^RCDPESR8",RC=$P($T(@R),";;",2)
"RTN","RCDPESR8",38,0)
 ... I RC="" S RCCT=RCCT+1,@RCMOUT@(RCCT)="<<<INVALID LINE TYPE - RAW DATA IS:",RCCT=RCCT+1,@RCMOUT@(RCCT)=Z0
"RTN","RCDPESR8",39,0)
 .. Q:RCDATA=""
"RTN","RCDPESR8",40,0)
 .. S R=RCREF_"+"_Z1_"^RCDPESR8",RC=$P($T(@R),";;",2)
"RTN","RCDPESR8",41,0)
 .. I RC=""!($P(RC,U)'=RCREF) S:$S(RCDATA'="":1,1:'$P(RC,U,2)) RCCT=RCCT+1,@RCMOUT@(RCCT)="NO DATA DEFINITION PC "_Z1_": "_RCDATA Q
"RTN","RCDPESR8",42,0)
 .. I RC'="" D
"RTN","RCDPESR8",43,0)
 ... N X,X1,Y
"RTN","RCDPESR8",44,0)
 ... S X1=$P(RC,U,4,99)
"RTN","RCDPESR8",45,0)
 ... I $G(RCFMT),X1'="" S X=RCDATA X X1 S RCDATA=Y ; Output transform
"RTN","RCDPESR8",46,0)
 ... S RC=$P(RC,U,3)
"RTN","RCDPESR8",47,0)
 ... Q:RC=""&(RCDATA="")
"RTN","RCDPESR8",48,0)
 ... S RCCT=RCCT+1,@RCMOUT@(RCCT)=$S(Z1=1:"<<<",1:"")_RC_": "_RCDATA_$S(Z1=1:">>>",1:"")
"RTN","RCDPESR8",49,0)
 I $G(RCFULL)'="" D FMTDSP(RCMOUT,RCFULL,$G(RCW))
"RTN","RCDPESR8",50,0)
 Q
"RTN","RCDPESR8",51,0)
 ;
"RTN","RCDPESR8",52,0)
FMTDSP(RCMUN,RCMFO,RCW) ; Format the display data in array named in RCMUN into
"RTN","RCDPESR8",53,0)
 ; lines up to RCW characters wide  RCMUN must be set up the same as the
"RTN","RCDPESR8",54,0)
 ; output of the DISP call above
"RTN","RCDPESR8",55,0)
 ; Returns array named in RCMFO with the last subscript being the line #
"RTN","RCDPESR8",56,0)
 ; Note @RCMFO is killed on entry to this call
"RTN","RCDPESR8",57,0)
 ; Default is 80 if RCW=0 or null
"RTN","RCDPESR8",58,0)
 N Z,RCLINE,RCCT,RCCT1,RCMID,RCD,RCSTART,RCDASH
"RTN","RCDPESR8",59,0)
 K @RCMFO
"RTN","RCDPESR8",60,0)
 S:'$G(RCW) RCW=80
"RTN","RCDPESR8",61,0)
 S RCDASH=" "_$TR($J("",RCW-2)," ","-")
"RTN","RCDPESR8",62,0)
 S (RCCT,RCCT1)=0,RCLINE="",RCMID=RCW\2-1
"RTN","RCDPESR8",63,0)
 S Z=0 F  S Z=$O(@RCMUN@(Z)) Q:'Z  S RCD=$G(@RCMUN@(Z)) D
"RTN","RCDPESR8",64,0)
 . I $E(RCD,1,3)="<<<" D  Q  ; New line needed ... record start
"RTN","RCDPESR8",65,0)
 .. I $L(RCLINE)>0 S RCCT=RCCT+1,@RCMFO@(RCCT)=RCLINE,RCLINE=""
"RTN","RCDPESR8",66,0)
 .. I $L(RCLINE)=0 D
"RTN","RCDPESR8",67,0)
 ... I Z>1 S RCCT=RCCT+1,@RCMFO@(RCCT)=" "
"RTN","RCDPESR8",68,0)
 ... I RCD["<<<Line Type: 01 " S RCCT1=RCCT1+1,RCCT=RCCT+1,@RCMFO@(RCCT)=RCDASH,RCCT=RCCT+1,@RCMFO@(RCCT)="*** EFT PAYMENT DETAIL START - PAYMENT SEQUENCE #"_RCCT1_"***",RCCT=RCCT+1,@RCMFO@(RCCT)=RCDASH
"RTN","RCDPESR8",69,0)
 ... I $L(RCD)>RCW D  Q
"RTN","RCDPESR8",70,0)
 .... S RCSTART=1
"RTN","RCDPESR8",71,0)
 .... F  S RCCT=RCCT+1,@RCMFO@(RCCT)=$E(RCD,RCSTART,RCSTART+RCW-1),RCSTART=RCSTART+RCW Q:RCSTART>$L(RCD)
"RTN","RCDPESR8",72,0)
 ... S RCCT=RCCT+1,@RCMFO@(RCCT)=RCD
"RTN","RCDPESR8",73,0)
 . ;
"RTN","RCDPESR8",74,0)
 . I $L(RCD)>RCW D  Q  ; Split line if greater than width given
"RTN","RCDPESR8",75,0)
 .. I $L(RCLINE) S RCCT=RCCT+1,@RCMFO@(RCCT)=RCLINE
"RTN","RCDPESR8",76,0)
 .. S RCSTART=1
"RTN","RCDPESR8",77,0)
 .. F  S RCCT=RCCT+1,@RCMFO@(RCCT)=$E(RCD,RCSTART,RCSTART+RCW-1),RCSTART=RCSTART+RCW Q:RCSTART>$L(RCD)
"RTN","RCDPESR8",78,0)
 .. S RCLINE=""
"RTN","RCDPESR8",79,0)
 . I $L(RCLINE)=0 D  Q  ; Format left side of line
"RTN","RCDPESR8",80,0)
 .. S RCLINE=RCD
"RTN","RCDPESR8",81,0)
 .. ;
"RTN","RCDPESR8",82,0)
 .. I $L(RCLINE)>RCMID S RCCT=RCCT+1,@RCMFO@(RCCT)=RCLINE,RCLINE=""
"RTN","RCDPESR8",83,0)
 . ;
"RTN","RCDPESR8",84,0)
 . I (RCMID+$L(RCD)+1)>RCW D  Q  ; data too long for right side of line
"RTN","RCDPESR8",85,0)
 .. S RCCT=RCCT+1,@RCMFO@(RCCT)=RCLINE,RCLINE=""
"RTN","RCDPESR8",86,0)
 . S RCLINE=$E(RCLINE_$J("",RCMID),1,RCMID)_"  "_RCD,RCCT=RCCT+1,@RCMFO@(RCCT)=RCLINE,RCLINE=""
"RTN","RCDPESR8",87,0)
 I $L(RCLINE) S RCCT=RCCT+1,@RCMFO@(RCCT)=RCLINE
"RTN","RCDPESR8",88,0)
 Q
"RTN","RCDPESR8",89,0)
 ;
"RTN","RCDPESR8",90,0)
 ;
"RTN","RCDPESR8",91,0)
DISPADJ(RC3444,RCARRAY) ; Returns formatted lines of ERA level takeback data
"RTN","RCDPESR8",92,0)
 ; in array @RCARRAY@(n) where n=line #.  Data is taken from entry
"RTN","RCDPESR8",93,0)
 ; # RC3444 in file 344.4, subfile 344.42
"RTN","RCDPESR8",94,0)
 N RCT,Z,Z0
"RTN","RCDPESR8",95,0)
 S RCT=0
"RTN","RCDPESR8",96,0)
 S Z=0 F  S Z=$O(^RCY(344.4,RC3444,2,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","RCDPESR8",97,0)
 . S RCT=RCT+1,@RCARRAY@(RCT)="REFERENCE #/BILL #: "_$P(Z0,U)
"RTN","RCDPESR8",98,0)
 . S RCT=RCT+1,@RCARRAY@(RCT)="   "_$E("ADJUSTMENT CODE: "_$P(Z0,U,2)_$J("",30),1,30)_"AMOUNT: "_$J($P(Z0,U,3),0,2)
"RTN","RCDPESR8",99,0)
 Q
"RTN","RCDPESR8",100,0)
 ;
"RTN","RCDPESR8",101,0)
EFT ;;HEADER DATA
"RTN","RCDPESR8",102,0)
 ;;EFT^^Return Message ID^S Y=X_" (EFT HEADER DATA)"
"RTN","RCDPESR8",103,0)
 ;;EFT^^^S Y=""
"RTN","RCDPESR8",104,0)
 ;;EFT^^File Date^S Y=$$FDT^RCDPESR9(X)
"RTN","RCDPESR8",105,0)
 ;;EFT^^File Time^S Y=$E(X,1,2)-$S($E(X,1,2)>12:12,1:0)_":"_$E(X,3,4)_$S($E(X,1,2)=24:" AM",$E(X,1,2)>11:" PM",1:" AM")
"RTN","RCDPESR8",106,0)
 ;;EFT^1^
"RTN","RCDPESR8",107,0)
 ;;EFT^^Deposit #
"RTN","RCDPESR8",108,0)
 ;;EFT^^Deposit Date^S Y=$$FDT^RCDPESR9(X)
"RTN","RCDPESR8",109,0)
 ;;EFT^^Total Deposit Amount^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR8",110,0)
 ;
"RTN","RCDPESR8",111,0)
01 ;;EFT DETAIL RECORD
"RTN","RCDPESR8",112,0)
 ;;01^^Line Type^S Y=X_" (PAYMENT IDENTIFICATION)"
"RTN","RCDPESR8",113,0)
 ;;01^^Trace #
"RTN","RCDPESR8",114,0)
 ;;01^^Date Claims Paid^S Y=$$FDT^RCDPESR9(X)
"RTN","RCDPESR8",115,0)
 ;;01^^TOTAL AMOUNT PAID^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR8",116,0)
 ;;01^^Payer Name
"RTN","RCDPESR8",117,0)
 ;;01^^Payer ID
"RTN","RCDPESR8",118,0)
 ;;01^^Provider Tax ID Sent
"RTN","RCDPESR8",119,0)
 ;;01^^Tax ID correction Flag^S Y=$S(X="E":"CHANGED BY EPHRA",X="C":"DETERMINED FROM CLAIM DATA",X="":"NO CHANGE MADE",1:X)
"RTN","RCDPESR8",120,0)
 ;;01^^ACH Trace #
"RTN","RCDPESR8",121,0)
 ;
"RTN","RCDPESR9")
0^91^B63406315
"RTN","RCDPESR9",1,0)
RCDPESR9 ;ALB/TMK - ERA return file field captions ;09-SEP-2003
"RTN","RCDPESR9",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPESR9",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPESR9",4,0)
 ;
"RTN","RCDPESR9",5,0)
 ; Note: if the 835 flat file changes, make the corresponding changes
"RTN","RCDPESR9",6,0)
 ;       in this routine.
"RTN","RCDPESR9",7,0)
835 ;;HEADER DATA
"RTN","RCDPESR9",8,0)
 ;;835^^Return Message ID^S Y=X_" (ERA HEADER DATA)"
"RTN","RCDPESR9",9,0)
 ;;835^^X12/Proprietary flag^S Y=$S(X="X":"X12",1:X)
"RTN","RCDPESR9",10,0)
 ;;835^^File Date^S Y=$$FDT^RCDPESR9(X)
"RTN","RCDPESR9",11,0)
 ;;835^^File Time^S Y=$E(X,1,2)-$S($E(X,1,2)>12:12,1:0)_":"_$E(X,3,4)_$S($E(X,1,2)=24:" AM",$E(X,1,2)>11:" PM",1:" AM")
"RTN","RCDPESR9",12,0)
 ;;835^1^MRA^S Y=""
"RTN","RCDPESR9",13,0)
 ;;835^^Payer Name
"RTN","RCDPESR9",14,0)
 ;;835^^Payer ID
"RTN","RCDPESR9",15,0)
 ;;835^^Trace Number
"RTN","RCDPESR9",16,0)
 ;;835^^Date Claims Paid^S Y=$$FDT^RCDPESR9(X)
"RTN","RCDPESR9",17,0)
 ;;835^^Total ERA Amount^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR9",18,0)
 ;;835^^Erroneous Provider Tax ID
"RTN","RCDPESR9",19,0)
 ;;835^^Tax ID correction Flag^S Y=$S(X="E":"CHANGED BY EPHRA",X="C":"DETERMINED FROM CLAIM DATA",X="":"NO CHANGE MADE",1:X)
"RTN","RCDPESR9",20,0)
 ;;835^^Sequence Control #
"RTN","RCDPESR9",21,0)
 ;;835^^Sequence #
"RTN","RCDPESR9",22,0)
 ;;835^^Last Sequence #
"RTN","RCDPESR9",23,0)
 ;;835^^Contact Information
"RTN","RCDPESR9",24,0)
 ;;835^^Payment Method Code
"RTN","RCDPESR9",25,0)
 ;
"RTN","RCDPESR9",26,0)
01 ;;PAYER CONTACT INFORMATION
"RTN","RCDPESR9",27,0)
 ;;01^^ERA Contact Name
"RTN","RCDPESR9",28,0)
 ;;01^^ERA Contact #1
"RTN","RCDPESR9",29,0)
 ;;01^^ERA Contact #1 Type^S Y=$$EXTERNAL^DILFD(344.4,3.03,,X)
"RTN","RCDPESR9",30,0)
 ;;01^^ERA Contact #2
"RTN","RCDPESR9",31,0)
 ;;01^^ERA Contact #2 Type^S Y=$$EXTERNAL^DILFD(344.4,3.05,,X)
"RTN","RCDPESR9",32,0)
 ;;01^^ERA Contact #3
"RTN","RCDPESR9",33,0)
 ;;01^^ERA Contact #3 Type^S Y=$$EXTERNAL^DILFD(344.4,3.07,,X)
"RTN","RCDPESR9",34,0)
 ;
"RTN","RCDPESR9",35,0)
02 ;;PAYER ADJUSTMENT RECORD
"RTN","RCDPESR9",36,0)
 ;;02^^Line Type^S Y=X_" (ERA LEVEL PAYER ADJUSTMENT RECORD)"
"RTN","RCDPESR9",37,0)
 ;;02^^X12 Adjustment Reason Code
"RTN","RCDPESR9",38,0)
 ;;02^^Provider Adjustment Identifier
"RTN","RCDPESR9",39,0)
 ;;02^^Adjustment Amount^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR9",40,0)
 ;;02^^X12 Reason Text
"RTN","RCDPESR9",41,0)
 ;
"RTN","RCDPESR9",42,0)
05 ;;CLAIM PATIENT ID
"RTN","RCDPESR9",43,0)
 ;;05^^Line Type^S Y=X_" (CLAIM LEVEL PATIENT ID DATA)"
"RTN","RCDPESR9",44,0)
 ;;05^^Bill #
"RTN","RCDPESR9",45,0)
 ;;05^^Patient Last Name
"RTN","RCDPESR9",46,0)
 ;;05^^Patient First Name
"RTN","RCDPESR9",47,0)
 ;;05^^Patient Middle Name
"RTN","RCDPESR9",48,0)
 ;;05^^Patient ID #
"RTN","RCDPESR9",49,0)
 ;;05^1^Record Contains Patient Name Change^S Y=""
"RTN","RCDPESR9",50,0)
 ;;05^1^Record Contains Patient ID Change^S Y=""
"RTN","RCDPESR9",51,0)
 ;;05^^Statement Start Date^S Y=$$FDT^RCDPESR9(X)
"RTN","RCDPESR9",52,0)
 ;;05^^Statement End Date^S Y=$$FDT^RCDPESR9(X)
"RTN","RCDPESR9",53,0)
 ;
"RTN","RCDPESR9",54,0)
10 ;;CLAIM STATUS DATA
"RTN","RCDPESR9",55,0)
 ;;10^^Line Type^S Y=X_" (CLAIM LEVEL CLAIM STATUS DATA)"
"RTN","RCDPESR9",56,0)
 ;;10^^Bill #
"RTN","RCDPESR9",57,0)
 ;;10^^Claim Processed^S Y=$$YN^RCDPESR9(X)
"RTN","RCDPESR9",58,0)
 ;;10^^Claim Denied^S Y=$$YN^RCDPESR9(X)
"RTN","RCDPESR9",59,0)
 ;;10^^Claim Pended^S Y=$$YN^RCDPESR9(X)
"RTN","RCDPESR9",60,0)
 ;;10^^Claim Reversal^S Y=$$YN^RCDPESR9(X)
"RTN","RCDPESR9",61,0)
 ;;10^^Claim Status Code
"RTN","RCDPESR9",62,0)
 ;;10^1^Crossed Over Name^S Y=""
"RTN","RCDPESR9",63,0)
 ;;10^1^Crossed Over ID^S Y=""
"RTN","RCDPESR9",64,0)
 ;;10^^Submitted Charge^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR9",65,0)
 ;;10^^Amount Paid^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR9",66,0)
 ;;10^^ICN
"RTN","RCDPESR9",67,0)
 ;;10^^DRG Code Used
"RTN","RCDPESR9",68,0)
 ;;10^^DRG Weight Used^S Y=$J($$ZERO^RCDPESR9(X,1)/100,4)
"RTN","RCDPESR9",69,0)
 ;;10^^Discharge Fraction^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR9",70,0)
 ;
"RTN","RCDPESR9",71,0)
15 ;;CLAIM STATUS DATA
"RTN","RCDPESR9",72,0)
 ;;15^^Line Type^S Y=X_" (CLAIM LEVEL CLAIM STATUS DATA (CONTINUED))"
"RTN","RCDPESR9",73,0)
 ;;15^^Bill #
"RTN","RCDPESR9",74,0)
 ;;15^^Covered Amount^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR9",75,0)
 ;;15^1^Discount Amount^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",76,0)
 ;;15^1^Day Limit Amt^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",77,0)
 ;;15^1^Interest Amount^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",78,0)
 ;;15^1^Tax Amount^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",79,0)
 ;;15^1^Total Before Taxes Amt^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",80,0)
 ;;15^^Patient Responsibility Amount^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR9",81,0)
 ;;15^1^Negative Reimbursement^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",82,0)
 ;
"RTN","RCDPESR9",83,0)
17 ;;CLAIM LEVEL PAYER CONTACT INFORMATION
"RTN","RCDPESR9",84,0)
 ;;17^^Line Type^S Y=X_" (CLAIM LEVEL PAYER CONTACT INFO)"
"RTN","RCDPESR9",85,0)
 ;;17^^Bill #
"RTN","RCDPESR9",86,0)
 ;;17^^Contact Name
"RTN","RCDPESR9",87,0)
 ;;17^^Contact #1
"RTN","RCDPESR9",88,0)
 ;;17^^Contact #1 Type^S Y=$$EXTERNAL^DILFD(361.1,25.03,,X)
"RTN","RCDPESR9",89,0)
 ;;17^^Contact #2
"RTN","RCDPESR9",90,0)
 ;;17^^Contact #2 Type^S Y=$$EXTERNAL^DILFD(361.1,25.05,,X)
"RTN","RCDPESR9",91,0)
 ;;17^^Contact #3
"RTN","RCDPESR9",92,0)
 ;;17^^Contact #3 Type^S Y=$$EXTERNAL^DILFD(361.1,25.07,,X)
"RTN","RCDPESR9",93,0)
 ;
"RTN","RCDPESR9",94,0)
20 ;;CLAIM LEVEL ADJUSTMENT DATA
"RTN","RCDPESR9",95,0)
 ;;20^^Line Type^S Y=X_" (CLAIM LEVEL CLAIM ADJUSTMENT DATA)"
"RTN","RCDPESR9",96,0)
 ;;20^^Bill #
"RTN","RCDPESR9",97,0)
 ;;20^^Adjustment Group Code
"RTN","RCDPESR9",98,0)
 ;;20^^Adjustment Reason Code
"RTN","RCDPESR9",99,0)
 ;;20^^Adjustment Amount^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR9",100,0)
 ;;20^^Quantity^S Y=$$ZERO^RCDPESR9(X)
"RTN","RCDPESR9",101,0)
 ;;20^^Reason Code Text
"RTN","RCDPESR9",102,0)
 ;
"RTN","RCDPESR9",103,0)
30 ;;CLAIM LEVEL MEDICARE INPT ADJUDICATION DATA
"RTN","RCDPESR9",104,0)
 ;;30^^Line Type^S Y=X_" (CLAIM LEVEL MEDICARE INPATIENT ADJUDICATION DATA)"
"RTN","RCDPESR9",105,0)
 ;;30^^Bill #
"RTN","RCDPESR9",106,0)
 ;;30^^Covered Days/Visits^S Y=$$ZERO^RCDPESR9(X)
"RTN","RCDPESR9",107,0)
 ;;30^1^Lifetime Reserve Days Count^S Y=$$ZERO^RCDPESR9(X,,1)
"RTN","RCDPESR9",108,0)
 ;;30^1^Lifetime Psych Days Count^S Y=$$ZERO^RCDPESR9(X,,1)
"RTN","RCDPESR9",109,0)
 ;;30^^Claim DRG Amt^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR9",110,0)
 ;;30^1^Claim Disproportionate Share Amt^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",111,0)
 ;;30^1^Claim MSP Pass thru Amt^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",112,0)
 ;;30^1^Claim PPS Capital Amt^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",113,0)
 ;;30^1^PPS-Capital FSP DRG Amt^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",114,0)
 ;;30^1^PPS-Capital HSP DRG Amt^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",115,0)
 ;;30^1^PPS-Capital DSH DRG Amt^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",116,0)
 ;;30^1^Old Capital Amt^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",117,0)
 ;;30^^Non-Covered Days^S Y=$$ZERO^RCDPESR9(X)
"RTN","RCDPESR9",118,0)
 ;
"RTN","RCDPESR9",119,0)
35 ;;CLAIM LEVEL MEDICARE ADJUDICATION DATA
"RTN","RCDPESR9",120,0)
 ;;35^^Line Type^S Y=X_" (CLAIM LEVEL MEDICARE ADJUDICATION DATA)"
"RTN","RCDPESR9",121,0)
 ;;35^^Bill #
"RTN","RCDPESR9",122,0)
 ;;35^1^PPS-Capital IME Amt^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",123,0)
 ;;35^1^PPS-Operating Hosp Specific DRG Amt^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",124,0)
 ;;35^1^Cost Report Day Count^S Y=$$ZERO^RCDPESR9(X)
"RTN","RCDPESR9",125,0)
 ;;35^1^PPS-Operating Fed Specific DRG Amt^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",126,0)
 ;;35^1^Claim PPS Capital Outlier Amt^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",127,0)
 ;;35^1^Claim Indirect Teaching Amt^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",128,0)
 ;;35^1^Non-payable Professional Component Amt^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",129,0)
 ;;35^1^PPS-Capital Exception Amt^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",130,0)
 ;;35^1^Outpatient Reimbursement %^S Y=$$ZERO^RCDPESR9(X)
"RTN","RCDPESR9",131,0)
 ;;35^1^HCPCS Payable Amount^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",132,0)
 ;;35^1^ESRD Paid Amount^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",133,0)
 ;;35^1^Non-payable Professional Component^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",134,0)
 ;
"RTN","RCDPESR9",135,0)
37 ;;CLAIM LEVEL MEDICARE ADJUDICATION DATA REMARKS
"RTN","RCDPESR9",136,0)
 ;;37^^Line Type^S Y=X_" (CLAIM LEVEL MEDICARE ADJUDICATION DATA REMARKS)"
"RTN","RCDPESR9",137,0)
 ;;37^^Bill #
"RTN","RCDPESR9",138,0)
 ;;37^^Type^S Y=$S(X="O":"MOA",X="I":"MIA",1:X)
"RTN","RCDPESR9",139,0)
 ;;37^^Claim Payment Remark Code
"RTN","RCDPESR9",140,0)
 ;;37^^Claim Payment Remark Code Message Text
"RTN","RCDPESR9",141,0)
 ;
"RTN","RCDPESR9",142,0)
40 ;;SERVICE LINE DATA
"RTN","RCDPESR9",143,0)
 ;;40^^Line Type^S Y=X_" (CLAIM LEVEL SERVICE LINE DATA)"
"RTN","RCDPESR9",144,0)
 ;;40^^Bill #
"RTN","RCDPESR9",145,0)
 ;;40^^Procedure
"RTN","RCDPESR9",146,0)
 ;;40^^Revenue Code
"RTN","RCDPESR9",147,0)
 ;;40^^Modifier 1
"RTN","RCDPESR9",148,0)
 ;;40^^Modifier 2
"RTN","RCDPESR9",149,0)
 ;;40^^Modifier 3
"RTN","RCDPESR9",150,0)
 ;;40^^Modifier 4
"RTN","RCDPESR9",151,0)
 ;;40^^Description
"RTN","RCDPESR9",152,0)
 ;;40^^Original Procedure
"RTN","RCDPESR9",153,0)
 ;;40^^Original Modifier 1
"RTN","RCDPESR9",154,0)
 ;;40^^Original Modifier 2
"RTN","RCDPESR9",155,0)
 ;;40^^Original Modifier 3
"RTN","RCDPESR9",156,0)
 ;;40^^Original Modifier 4
"RTN","RCDPESR9",157,0)
 ;;40^^Original Charge^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR9",158,0)
 ;;40^^Original Units^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR9",159,0)
 ;;40^^Amount Paid^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR9",160,0)
 ;;40^^Covered Units^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR9",161,0)
 ;;40^^Service From Date^S Y=$$FDT^RCDPESR9(X)
"RTN","RCDPESR9",162,0)
 ;;40^^Service To Date^S Y=$$FDT^RCDPESR9(X)
"RTN","RCDPESR9",163,0)
 ;;40^^Procedure Type
"RTN","RCDPESR9",164,0)
 ;;40^^Applies to Billing Line
"RTN","RCDPESR9",165,0)
 ;
"RTN","RCDPESR9",166,0)
41 ;;SERVICE LINE DATA
"RTN","RCDPESR9",167,0)
 ;;41^^Line Type^S Y=X_" (CLAIM LEVEL SERVICE LINE DATA (CONTINUED))"
"RTN","RCDPESR9",168,0)
 ;;41^^Bill #
"RTN","RCDPESR9",169,0)
 ;;41^^Allowed Amount^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR9",170,0)
 ;;41^1^Per Diem Amount^S Y=$$ZERO^RCDPESR9(X,1,1)
"RTN","RCDPESR9",171,0)
 ;
"RTN","RCDPESR9",172,0)
42 ; SERVICE LINE DATA
"RTN","RCDPESR9",173,0)
 ;;42^^Line Type^S Y=X_" (CLAIM LEVEL SERVICE LINE DATA (CONTINUED))"
"RTN","RCDPESR9",174,0)
 ;;42^^Bill #
"RTN","RCDPESR9",175,0)
 ;;42^^Line Item Remark Code
"RTN","RCDPESR9",176,0)
 ;;42^^Line Item Remark Code Text
"RTN","RCDPESR9",177,0)
 ;
"RTN","RCDPESR9",178,0)
45 ;;SERVICE LINE ADJUSTMENT DATA
"RTN","RCDPESR9",179,0)
 ;;45^^Line Type^S Y=X_" (CLAIM LEVEL SERVICE LINE ADJUSTMENT DATA)"
"RTN","RCDPESR9",180,0)
 ;;45^^Bill #
"RTN","RCDPESR9",181,0)
 ;;45^^Adjustment Group Code
"RTN","RCDPESR9",182,0)
 ;;45^^Adjustment Reason Code
"RTN","RCDPESR9",183,0)
 ;;45^^Adjustment Amount^S Y=$$ZERO^RCDPESR9(X,1)
"RTN","RCDPESR9",184,0)
 ;;45^^Quantity^S Y=$$ZERO^RCDPESR9(X)
"RTN","RCDPESR9",185,0)
 ;;45^^Reason Code Text
"RTN","RCDPESR9",186,0)
 ;
"RTN","RCDPESR9",187,0)
FDT(X) ; returns MM/DD/YYYY or MM/DD/YY from YYYYMMDD or YYMMDD in X
"RTN","RCDPESR9",188,0)
 I $L(X)=8,X?8N S X=$E(X,5,6)_"/"_$E(X,7,8)_"/"_$E(X,1,4)
"RTN","RCDPESR9",189,0)
 I $L(X)=6,X?6N S X=$E(X,3,4)_"/"_$E(X,5,6)_"/"_$E(X,1,2)
"RTN","RCDPESR9",190,0)
 Q X
"RTN","RCDPESR9",191,0)
 ;
"RTN","RCDPESR9",192,0)
ZERO(X,D,NULL) ; Returns numeric value of X without leading 0's
"RTN","RCDPESR9",193,0)
 ; or null if no value wanted for 0 amount
"RTN","RCDPESR9",194,0)
 ; D = 1 if dollar amt
"RTN","RCDPESR9",195,0)
 N Z
"RTN","RCDPESR9",196,0)
 I X["." S Z=$P(X,"."),X=+Z_"."_$P(X,".",2)
"RTN","RCDPESR9",197,0)
 I X'["." D
"RTN","RCDPESR9",198,0)
 . I $G(D) S X=+$E(X,1,$L(X)-2)_"."_$E(X,$L(X)-1,$L(X))
"RTN","RCDPESR9",199,0)
 . S X=$S('$G(D):+X,1:$J(X,"",2))
"RTN","RCDPESR9",200,0)
 Q $S(X:X,$G(NULL):"",1:X)
"RTN","RCDPESR9",201,0)
 ;
"RTN","RCDPESR9",202,0)
YN(X) ; Returns YES for X="Y" and NO for X="N"
"RTN","RCDPESR9",203,0)
 S X=$S(X="Y":"YES",X="N":"NO",1:X)
"RTN","RCDPESR9",204,0)
 Q X
"RTN","RCDPESR9",205,0)
 ;
"RTN","RCDPESRV")
0^92^B26559607
"RTN","RCDPESRV",1,0)
RCDPESRV ;ALB/TMK - Server interface to AR from Austin ;06/03/02
"RTN","RCDPESRV",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPESRV",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPESRV",4,0)
 ;
"RTN","RCDPESRV",5,0)
SERVER ; Entry point for server option to process EDI Lockbox msgs received
"RTN","RCDPESRV",6,0)
 ; from Austin and redirected EOB transactions received from another
"RTN","RCDPESRV",7,0)
 ; VistA site
"RTN","RCDPESRV",8,0)
 ;
"RTN","RCDPESRV",9,0)
 N RCEFLG,RCERR,XMER,RCXMZ,RCTYPE
"RTN","RCDPESRV",10,0)
 K ^TMP("RCERR",$J),^TMP("RCMSG",$J),^TMP("RCMSGH",$J),^TMP($J)
"RTN","RCDPESRV",11,0)
 S RCXMZ=$G(XMZ)
"RTN","RCDPESRV",12,0)
 S RCEFLG=$$MSG(RCXMZ,.RCERR)
"RTN","RCDPESRV",13,0)
 D:$G(RCEFLG) PERROR^RCDPESR1(.RCERR,"G.RCDPE PAYMENTS EXCEPTIONS",RCXMZ)
"RTN","RCDPESRV",14,0)
 D DKILL^RCDPESR1(RCXMZ) S ZTREQ="@"
"RTN","RCDPESRV",15,0)
 K ^TMP("RCERR",$J),^TMP("RCMSG",$J),^TMP("RCMSGH",$J),^TMP($J)
"RTN","RCDPESRV",16,0)
 Q
"RTN","RCDPESRV",17,0)
 ;
"RTN","RCDPESRV",18,0)
MSG(RCXMZ,RCERR) ; Read/Store message lines
"RTN","RCDPESRV",19,0)
 ; RCERR = array of errors
"RTN","RCDPESRV",20,0)
 ; RCXMZ = the # of the Mailman message contianing this message
"RTN","RCDPESRV",21,0)
 ; 
"RTN","RCDPESRV",22,0)
 ; OUTPUT:
"RTN","RCDPESRV",23,0)
 ;  Function returns flag ... 0 = no errors    1 = errors
"RTN","RCDPESRV",24,0)
 ;     and the standard Mailman error variable contents of XMER
"RTN","RCDPESRV",25,0)
 ;
"RTN","RCDPESRV",26,0)
 N RCTYP1,RCDATE,RCHD,RCTXN,XMDUZ,RCGBL,RCD,RCEFLG,RCCT,RCDXM,X,Y
"RTN","RCDPESRV",27,0)
 K ^TMP("RCERR",$J),^TMP("RCMSG",$J),^TMP("RCMSGH",$J)
"RTN","RCDPESRV",28,0)
 ;
"RTN","RCDPESRV",29,0)
 S (RCEFLG,RCERR,RCTXN)="",RCGBL="RCTXN"
"RTN","RCDPESRV",30,0)
 ; Set up formatted mailman header data in RCD
"RTN","RCDPESRV",31,0)
 S RCD("MSG#")=RCXMZ\1
"RTN","RCDPESRV",32,0)
 S RCHD=$$NET^XMRENT(RCXMZ)
"RTN","RCDPESRV",33,0)
 S RCD("FROM")=$P(RCHD,U,3)
"RTN","RCDPESRV",34,0)
 S RCD("SUBJ")=$P(RCHD,U,6)
"RTN","RCDPESRV",35,0)
 S (X,RCDATE)=$P(RCHD,U)
"RTN","RCDPESRV",36,0)
 I X'="" D  ;Reformat date, if needed
"RTN","RCDPESRV",37,0)
 . N %DT
"RTN","RCDPESRV",38,0)
 . I X'["@" S X=$P(X," ",1,3)_"@"_$P(X," ",4)
"RTN","RCDPESRV",39,0)
 . S %DT="XTS" D ^%DT S:Y>0 RCDATE=Y\.0001*.0001
"RTN","RCDPESRV",40,0)
 ;
"RTN","RCDPESRV",41,0)
 S RCD("DATE")=RCDATE
"RTN","RCDPESRV",42,0)
 ; Read up to the header line of message
"RTN","RCDPESRV",43,0)
 S RCCT=1
"RTN","RCDPESRV",44,0)
 F  X XMREC Q:$S(XMER<0:1,1:$E(XMRG,1,3)="835"&($E(XMRG,4,6)="ERA"!($E(XMRG,4,6)="EFT")!($E(XMRG,4,6)="XFR")!($E(XMRG,4,6)="XAK")))  S RCCT=RCCT+1,^TMP("RCERR",$J,"MSG",RCCT)=XMRG
"RTN","RCDPESRV",45,0)
 I XMER<0 D  G MSGQ
"RTN","RCDPESRV",46,0)
 . S (RCEFLG,RCERR)=1
"RTN","RCDPESRV",47,0)
 . S ^TMP("RCERR",$J,"MSG",.5)=RCHD
"RTN","RCDPESRV",48,0)
 . S ^TMP("RCERR",$J,"DATE")=RCDATE
"RTN","RCDPESRV",49,0)
 ;
"RTN","RCDPESRV",50,0)
 K ^TMP("RCERR",$J,"MSG")
"RTN","RCDPESRV",51,0)
 S RCTXN=XMRG,RCD("PAYFROM")=$P(RCTXN,U,6)
"RTN","RCDPESRV",52,0)
 S RCTYP1=$P(RCTXN,U)
"RTN","RCDPESRV",53,0)
 ;
"RTN","RCDPESRV",54,0)
 I RCTYP1["835XAK" D  G MSGQ ; Accept/reject of transferred EOB
"RTN","RCDPESRV",55,0)
 . N DA,DR,DIE,RCACC,RC0,RC00,XMZ,XMTO,XMBODY,RCXM,X,Y
"RTN","RCDPESRV",56,0)
 . S RCACC=$P(RCTXN,U,2)
"RTN","RCDPESRV",57,0)
 . S DR=$S(RCACC'="":".1////"_RCACC_";.13////"_RCACC,1:".16////1")
"RTN","RCDPESRV",58,0)
 . S DA(1)=+$P(RCTXN,U,3),DA=$P($P(RCTXN,U,3),";",2)
"RTN","RCDPESRV",59,0)
 . S RC0=$G(^RCY(344.4,DA(1),0))
"RTN","RCDPESRV",60,0)
 . S RC00=$G(^RCY(344.4,DA(1),1,DA,0))
"RTN","RCDPESRV",61,0)
 . I $P(RC00,U,10)'="" Q  ; Already updated
"RTN","RCDPESRV",62,0)
 . S DIE="^RCY(344.4,"_DA(1)_",1,"
"RTN","RCDPESRV",63,0)
 . I DA(1),DA,RC00'="" D ^DIE
"RTN","RCDPESRV",64,0)
 . S RCXM(1)="An EEOB record for bill "_$P(RC00,U,5)_" was transferred to",RCXM(2)=$P($G(^DIC(4,+$P(RC00,U,11),0)),U)_" on "_$$FMTE^XLFDT($P(RC00,U,12),2)
"RTN","RCDPESRV",65,0)
 . S RCXM(3)=" ",RCXM(4)=" ERA TRACE #: "_$P(RC0,U,2)_"  SEQ #:"_+RC00
"RTN","RCDPESRV",66,0)
 . S RCXM(5)=" ",RCXM(6)=" ",RCXM(7)="    This message is to inform you this transfer was **** "_$S(RCACC="":"RECEIVED",1:$P("REJECTED^ACCEPTED",U,RCACC+1))_" ****"
"RTN","RCDPESRV",67,0)
 . S RCXM(8)=" ",RCXM(9)=" "
"RTN","RCDPESRV",68,0)
 . I RCACC S RCXM(10)=" You must make the appropriate funds transfers manually"
"RTN","RCDPESRV",69,0)
 . I 'RCACC S RCXM(10)=$S(RCACC="":" Contact this site if the EEOB is not ACCEPTED or REJECTED in a timely manner",1:" Try another site or contact your IMPLEMENTATION MANAGER to reconcile this")
"RTN","RCDPESRV",70,0)
 . S XMBODY="RCXM"
"RTN","RCDPESRV",71,0)
 . S XMTO("I:G.RCDPE PAYMENTS"_$S(RCACC:" MGMNT",1:""))=""
"RTN","RCDPESRV",72,0)
 . D
"RTN","RCDPESRV",73,0)
 .. N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPESRV",74,0)
 .. D SENDMSG^XMXAPI(.5,"EDI LBOX TRANSFERRED EEOB "_$S(RCACC="":"RECEIVED",RCACC:"ACCEPTED",1:"REJECTED"),XMBODY,.XMTO,,.XMZ)
"RTN","RCDPESRV",75,0)
 . ;
"RTN","RCDPESRV",76,0)
 ;
"RTN","RCDPESRV",77,0)
 I RCTYP1["835",$E(RCTYP1,1,4)'="835X",RCD("FROM")'["POSTMASTER@FOC-AUSTIN.VA.GOV" D  G MSGQ
"RTN","RCDPESRV",78,0)
 . ;Send bulletin warning for non-Austin ERA/EFT message received
"RTN","RCDPESRV",79,0)
 . S RCDXM(1)="An electronic transmission ("_$E($P(RCTXN,U),4,6)_") has been received by the EDI Lockbox",RCDXM(2)="  system that did not originate from the Austin system.  This message"
"RTN","RCDPESRV",80,0)
 . S RCDXM(3)="  WILL NOT be stored on your system and may be a breach of security.",RCDXM(4)=" "
"RTN","RCDPESRV",81,0)
 . S RCDXM(5)="  Please contact your IRM with the following information:",RCDXM(6)=" ",RCDXM(7)="The message was sent from "_RCD("FROM")
"RTN","RCDPESRV",82,0)
 . S RCDXM(8)="The mail message number is "_RCXMZ
"RTN","RCDPESRV",83,0)
 . S RCDXM(9)="The text received in the message is:",RCDXM(10)=" "
"RTN","RCDPESRV",84,0)
 . S RCDXM(11)=RCTXN
"RTN","RCDPESRV",85,0)
 . D RESTMSG^RCDPESR1(+$O(RCDXM(""),-1),"RCDXM",RCXMZ)
"RTN","RCDPESRV",86,0)
 . D BULLERA^RCDPESR0("","",RCXMZ,"EDI LBOX - ERA/EFT NOT FROM AUSTIN "_$G(RCD("PAYFROM")),.RCDXM,0)
"RTN","RCDPESRV",87,0)
 ;
"RTN","RCDPESRV",88,0)
 S RCGBL="^TMP(""RCMSG"","_$J_")"
"RTN","RCDPESRV",89,0)
 S @RCGBL=RCTYP1,^TMP("RCMSGH",$J,0)=RCTXN
"RTN","RCDPESRV",90,0)
 ;
"RTN","RCDPESRV",91,0)
 I RCTYP1["835ERA"!(RCTYP1["835XFR") D ERAEOBIN^RCDPESR4(RCTXN,.RCD,RCGBL,.RCEFLG)
"RTN","RCDPESRV",92,0)
 ;
"RTN","RCDPESRV",93,0)
 I RCTYP1["835EFT" D EFTIN^RCDPESR3(RCTXN,.RCD,XMZ,RCGBL,.RCEFLG)
"RTN","RCDPESRV",94,0)
 ;
"RTN","RCDPESRV",95,0)
MSGQ Q RCEFLG
"RTN","RCDPESRV",96,0)
 ;
"RTN","RCDPETR")
0^93^B58104319
"RTN","RCDPETR",1,0)
RCDPETR ;ALB/TMK - EOB TRANSFER IN/TRANSFER OUT REPORTS ;04-NOV-02
"RTN","RCDPETR",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPETR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPETR",4,0)
 ; IA for read access to ^IBM(361.1 = 4051
"RTN","RCDPETR",5,0)
 Q
"RTN","RCDPETR",6,0)
 ;
"RTN","RCDPETR",7,0)
RPT ; Transfer In/Out Report
"RTN","RCDPETR",8,0)
 N DIR,X,Y,POP,RCRPT,RCDT1,RCDT2,ZTRTN,ZTSK,ZTDESC,%ZIS
"RTN","RCDPETR",9,0)
 S DIR(0)="SBO^I:TRANSFER IN REPORT;O:TRANSFER OUT REPORT;B:BOTH REPORTS",DIR("A")="SELECT REPORT" D ^DIR K DIR
"RTN","RCDPETR",10,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G RPTQ
"RTN","RCDPETR",11,0)
 S RCRPT=Y
"RTN","RCDPETR",12,0)
 S DIR("?")="ENTER THE EARLIEST TRANSFERRED FROM/TO DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPETR",13,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="START DATE: " D ^DIR K DIR
"RTN","RCDPETR",14,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G RPTQ
"RTN","RCDPETR",15,0)
 S RCDT1=Y
"RTN","RCDPETR",16,0)
 S DIR("?")="ENTER THE LATEST TRANSFERRED FROM/TO DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPETR",17,0)
 S DIR(0)="DAO^"_RCDT1_":"_DT_":APE",DIR("A")="END DATE: " D ^DIR K DIR
"RTN","RCDPETR",18,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G RPTQ
"RTN","RCDPETR",19,0)
 S RCDT2=Y
"RTN","RCDPETR",20,0)
 ; Ask device
"RTN","RCDPETR",21,0)
 S %ZIS="QM" D ^%ZIS G:POP RPTQ
"RTN","RCDPETR",22,0)
 I $D(IO("Q")) D  G RPTQ
"RTN","RCDPETR",23,0)
 . S ZTRTN="EN^RCDPETR("_RCRPT_","_RCDT1_","_RCDT2_")",ZTDESC="AR - EDI LOCKBOX TRANSFERRED EEOB REPORT"
"RTN","RCDPETR",24,0)
 . D ^%ZTLOAD
"RTN","RCDPETR",25,0)
 . W !!,$S($D(ZTSK):"Your task number "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPETR",26,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPETR",27,0)
 U IO
"RTN","RCDPETR",28,0)
 D EN(RCRPT,RCDT1,RCDT2)
"RTN","RCDPETR",29,0)
RPTQ Q
"RTN","RCDPETR",30,0)
 ;
"RTN","RCDPETR",31,0)
EN(RCRPT,RCDT1,RCDT2) ; Entry point for queued job
"RTN","RCDPETR",32,0)
 N Q,Z,Z0,Z1,Z2,ZCT,RCSTOP,RCPG,RCDAT,RCDAT1,RCCT,RCACC,RCNOT,RCRCV,RCNRCV
"RTN","RCDPETR",33,0)
 K ^TMP($J,"RCDPE_TROUT"),^("RCDPE_TRIN")
"RTN","RCDPETR",34,0)
 S (RCSTOP,ZCT)=0
"RTN","RCDPETR",35,0)
 I RCRPT="O"!(RCRPT="B") D  ; Transfer out
"RTN","RCDPETR",36,0)
 . S Z=RCDT1-.0001
"RTN","RCDPETR",37,0)
 . F  S Z=$O(^RCY(344.4,"ATOUT",Z)) Q:'Z!RCSTOP  S Z0=0 F  S Z0=$O(^RCY(344.4,"ATOUT",Z,Z0)) Q:'Z0!(Z0>RCDT2)!RCSTOP  S Z1=0 F  S Z1=$O(^RCY(344.4,"ATOUT",Z,Z0,Z1)) Q:'Z1  D  Q:RCSTOP
"RTN","RCDPETR",38,0)
 .. Q:$$STOP(.ZCT,.RCSTOP,0)
"RTN","RCDPETR",39,0)
 .. ; EOB transferred out was found in date range
"RTN","RCDPETR",40,0)
 .. S ^TMP($J,"RCDPE_TROUT",Z,Z0,Z1)=$G(^RCY(344.4,Z0,1,Z1,0))
"RTN","RCDPETR",41,0)
 .. ; sbscrpts are: date,ien file 344.4,ien file 344.41
"RTN","RCDPETR",42,0)
 ;
"RTN","RCDPETR",43,0)
 I 'RCSTOP,(RCRPT="I"!(RCRPT="B")) D  ; Transfer in
"RTN","RCDPETR",44,0)
 . S Z=RCDT1-.0001 ;  Look for accepted ones
"RTN","RCDPETR",45,0)
 . F  S Z=$O(^IBM(361.1,"ATIN",Z)) Q:'Z!(Z>RCDT2)!RCSTOP  S Z0="" F  S Z0=$O(^IBM(361.1,"ATIN",Z,Z0)) Q:Z0=""!RCSTOP  S Z1=0 F  S Z1=$O(^IBM(361.1,"ATIN",Z,Z0,Z1)) Q:'Z1  D  Q:RCSTOP  ; IA 4051
"RTN","RCDPETR",46,0)
 .. ; EOB transfer in/accepted was found in date range
"RTN","RCDPETR",47,0)
 .. Q:$$STOP(.ZCT,.RCSTOP,0)
"RTN","RCDPETR",48,0)
 .. S ^TMP($J,"RCDPE_TRIN",Z,361.1,Z0,Z1)=$G(^IBM(361.1,Z1,0)) ; IA 4051
"RTN","RCDPETR",49,0)
 .. ;sbscrpts are: date,file,transferred from name,ien file 361.1
"RTN","RCDPETR",50,0)
 .. S ^TMP($J,"RCDPE_TRIN",Z,361.1,Z0,Z1,7)=$G(^IBM(361.1,Z1,7)) ; IA 4051
"RTN","RCDPETR",51,0)
 .. S ^TMP($J,"RCDPE_TRIN",Z,361.1,Z0,Z1,1)=$G(^IBM(361.1,Z1,1)) ; IA 4051
"RTN","RCDPETR",52,0)
 . Q:RCSTOP
"RTN","RCDPETR",53,0)
 . S Z=RCDT1-.0001 ;  Look for pending accept ones
"RTN","RCDPETR",54,0)
 . F  S Z=$O(^RCY(344.5,"ATIN",Z)) Q:Z'!(Z>RCDT2)!RCSTOP  S Z0="" F  S Z0=$O(^RCY(344.5,"ATIN",Z,Z0)) Q:Z0=""!RCSTOP  S Z1=0 F  S Z1=$O(^RCY(344.5,"ATIN",Z,Z0,Z1)) Q:'Z1  D  Q:RCSTOP
"RTN","RCDPETR",55,0)
 .. ; EOB transfer in/pending acceptance was found in date range
"RTN","RCDPETR",56,0)
 .. S ^TMP($J,"RCDPE_TRIN",Z,344.5,Z0,Z1)=$G(^RCY(344.5,Z1,0))
"RTN","RCDPETR",57,0)
 .. ;sbscrpts are: date,file,transferred from name,ien file 344.5
"RTN","RCDPETR",58,0)
 ;
"RTN","RCDPETR",59,0)
 G:RCSTOP ENQ
"RTN","RCDPETR",60,0)
 S (RCPG,RCCT,Z,RCACC,RCNOT,RCRCV,RCNRCV)=0
"RTN","RCDPETR",61,0)
 F  S Z=$O(^TMP($J,"RCDPE_TROUT",Z)) Q:'Z!RCSTOP  S Z0="" F  S Z0=$O(^TMP($J,"RCDPE_TROUT",Z,Z0)) Q:Z0=""!RCSTOP  S Z1=0 F  S Z1=$O(^TMP($J,"RCDPE_TROUT",Z,Z0,Z1)) Q:'Z1  S RCDAT=$G(^(Z1)) D  Q:RCSTOP
"RTN","RCDPETR",62,0)
 . I 'RCPG!(($Y+5)>IOSL) D HDR(.RCCT,.RCPG,.RCSTOP,1,RCDT1,RCDT2) Q:RCSTOP
"RTN","RCDPETR",63,0)
 . S Q=$$SETSTR^VALM1($P(RCDAT,U,5),"",1,11)
"RTN","RCDPETR",64,0)
 . S Q=$$SETSTR^VALM1($$FMTE^XLFDT($P(RCDAT,U,12),"2D"),Q,14,8)
"RTN","RCDPETR",65,0)
 . S Q=$$SETSTR^VALM1($P($G(^DIC(4,+$P(RCDAT,U,11),0)),U),Q,24,20)
"RTN","RCDPETR",66,0)
 . S Q=$$SETSTR^VALM1($$FMTE^XLFDT($P($G(^RCY(344.4,+Z0,0)),U,4),"2D"),Q,46,8)
"RTN","RCDPETR",67,0)
 . S Q=$$SETSTR^VALM1($J(+$P(RCDAT,U,3),"",2),Q,56,12)
"RTN","RCDPETR",68,0)
 . S Q=$$SETSTR^VALM1($S('$P(RCDAT,U,16):"NOT REC'D",$P(RCDAT,U,10)="":"REC'D",$P(RCDAT,U,10)=0:"NOT ACCPTD",1:"ACCPTD"),Q,70,10)
"RTN","RCDPETR",69,0)
 . I '$P(RCDAT,U,16) S RCNRCV=RCNRCV+1
"RTN","RCDPETR",70,0)
 . I $P(RCDAT,U,16)=1,$P(RCDAT,U,10)="" S RCRCV=RCRCV+1
"RTN","RCDPETR",71,0)
 . I $P(RCDAT,U,10) S RCACC=RCACC+1
"RTN","RCDPETR",72,0)
 . I $P(RCDAT,U,10)=0 S RCNOT=RCNOT+1
"RTN","RCDPETR",73,0)
 . D SETLINE(Q,.RCCT)
"RTN","RCDPETR",74,0)
 ;
"RTN","RCDPETR",75,0)
 G:RCSTOP ENQ
"RTN","RCDPETR",76,0)
 ; 
"RTN","RCDPETR",77,0)
 I RCRPT="B"!(RCRPT="O") D
"RTN","RCDPETR",78,0)
 . I '$O(^TMP($J,"RCDPE_TROUT",0)) D  Q
"RTN","RCDPETR",79,0)
 .. D HDR(.RCCT,.RCPG,.RCSTOP,1,RCDT1,RCDT2) Q:RCSTOP
"RTN","RCDPETR",80,0)
 .. D SETLINE("** THERE WERE NO EEOBs TRANSFERRED OUT WITHIN THE DATE RANGE SELECTED",.RCCT)
"RTN","RCDPETR",81,0)
 . I ($Y+5)>IOSL D HDR(.RCCT,.RCPG,.RCSTOP,1,RCDT1,RCDT2) Q:RCSTOP
"RTN","RCDPETR",82,0)
 . D SETLINE(" ",.RCCT)
"RTN","RCDPETR",83,0)
 . D SETLINE(" TOTAL # EEOBs NOT CONFIRMED AS 'RECEIVED' BY OTHER SITES: "_RCNRCV,.RCCT)
"RTN","RCDPETR",84,0)
 . D SETLINE(" TOTAL # EEOBs STILL JUST 'RECEIVED' BY OTHER SITES: "_RCRCV,.RCCT)
"RTN","RCDPETR",85,0)
 . D SETLINE(" TOTAL # EEOBs ACCEPTED BY OTHER SITES: "_RCACC,.RCCT)
"RTN","RCDPETR",86,0)
 . D SETLINE(" TOTAL # EEOBs NOT ACCEPTED BY OTHER SITES: "_RCNOT,.RCCT)
"RTN","RCDPETR",87,0)
 ;
"RTN","RCDPETR",88,0)
 G:RCSTOP ENQ
"RTN","RCDPETR",89,0)
 ;
"RTN","RCDPETR",90,0)
 I RCPG D ASK()
"RTN","RCDPETR",91,0)
 S (RCACC,RCNOT,RCPG)=0
"RTN","RCDPETR",92,0)
 S Z=0 F  S Z=$O(^TMP($J,"RCDPE_TRIN",Z)) Q:'Z  S Z0=0 F  S Z0=$O(^TMP($J,"RCDPE_TRIN",Z,Z0)) Q:'Z0  S Z1="" F  S Z1=$O(^TMP($J,"RCDPE_TRIN",Z,Z0,Z1)) Q:Z1=""  S Z2=0 F  S Z2=$O(^TMP($J,"RCDPE_TRIN",Z,Z0,Z1,Z2)) Q:'Z2  D
"RTN","RCDPETR",93,0)
 . S RCDAT=$G(^TMP($J,"RCDPE_TRIN",Z,Z0,Z1,Z2))
"RTN","RCDPETR",94,0)
 . I Z0=361.1 S RCDAT(7)=$G(^TMP($J,"RCDPE_TRIN",Z,Z0,Z1,Z2,7)),RCDAT(1)=$G(^(1))
"RTN","RCDPETR",95,0)
 . I 'RCPG!(($Y+5)>IOSL) D HDR(.RCCT,.RCPG,.RCSTOP,0,RCDT1,RCDT2) Q:RCSTOP
"RTN","RCDPETR",96,0)
 . I Z0=361.1 D
"RTN","RCDPETR",97,0)
 .. S Q=$$SETSTR^VALM1($$BN1^PRCAFN(+RCDAT),"",1,11)
"RTN","RCDPETR",98,0)
 .. S Q=$$SETSTR^VALM1($$FMTE^XLFDT($P(RCDAT,U,5),"2D"),Q,14,8)
"RTN","RCDPETR",99,0)
 .. S Q=$$SETSTR^VALM1($P(RCDAT(7),U),Q,24,20)
"RTN","RCDPETR",100,0)
 .. S Q=$$SETSTR^VALM1($$FMTE^XLFDT($P(RCDAT,U,6),"2D"),Q,46,8)
"RTN","RCDPETR",101,0)
 .. S Q=$$SETSTR^VALM1($J(+$P(RCDAT(1),U),"",2),Q,56,12)
"RTN","RCDPETR",102,0)
 .. S Q=$$SETSTR^VALM1("ACCEPTED",Q,70,10)
"RTN","RCDPETR",103,0)
 .. S RCACC=RCACC+1
"RTN","RCDPETR",104,0)
 . E  D
"RTN","RCDPETR",105,0)
 .. D RAWBILL(Z2,.RCDAT1)
"RTN","RCDPETR",106,0)
 .. S RCDAT1=+$O(RCDAT1(0)),RCDAT1=$G(RCDAT1(RCDAT1))
"RTN","RCDPETR",107,0)
 .. S Q=$$SETSTR^VALM1($P(RCDAT1,U),"",1,11)
"RTN","RCDPETR",108,0)
 .. S Q=$$SETSTR^VALM1($$FMTE^XLFDT($P(RCDAT,U,3),"2D"),Q,14,8)
"RTN","RCDPETR",109,0)
 .. S Q=$$SETSTR^VALM1($P(RCDAT,U,12),Q,24,20)
"RTN","RCDPETR",110,0)
 .. S Q=$$SETSTR^VALM1($S($G(RCDAT1(0)):$E(RCDAT1(0),5,6)_"/"_$E(RCDAT1(0),7,8)_"/"_$E(RCDAT1(0),3,4),1:""),Q,46,8)
"RTN","RCDPETR",111,0)
 .. S Q=$$SETSTR^VALM1($J(+$P(RCDAT1,U,2),"",2),Q,56,12)
"RTN","RCDPETR",112,0)
 .. S Q=$$SETSTR^VALM1("PENDING",Q,70,10)
"RTN","RCDPETR",113,0)
 .. S RCNOT=RCNOT+1
"RTN","RCDPETR",114,0)
 . D SETLINE(Q,.RCCT)
"RTN","RCDPETR",115,0)
 ;
"RTN","RCDPETR",116,0)
 G:RCSTOP ENQ
"RTN","RCDPETR",117,0)
 ; 
"RTN","RCDPETR",118,0)
 I RCRPT="B"!(RCRPT="I") D
"RTN","RCDPETR",119,0)
 . I '$O(^TMP($J,"RCDPE_TRIN",0)) D  Q
"RTN","RCDPETR",120,0)
 .. D HDR(.RCCT,.RCPG,.RCSTOP,0,RCDT1,RCDT2) Q:RCSTOP
"RTN","RCDPETR",121,0)
 .. D SETLINE("** THERE WERE NO EEOBs TRANSFERRED 'IN' WITHIN THE DATE RANGE SELECTED",.RCCT)
"RTN","RCDPETR",122,0)
 . I ($Y+5)>IOSL D HDR(.RCCT,.RCPG,.RCSTOP,0,RCDT1,RCDT2) Q:RCSTOP
"RTN","RCDPETR",123,0)
 . D SETLINE(" ",.RCCT)
"RTN","RCDPETR",124,0)
 . D SETLINE(" TOTAL # EEOBs YOU ACCEPTED: "_RCACC,.RCCT)
"RTN","RCDPETR",125,0)
 . D SETLINE(" TOTAL # EEOBs STILL PENDING: "_RCNOT,.RCCT)
"RTN","RCDPETR",126,0)
 ;
"RTN","RCDPETR",127,0)
ENQ I '$D(ZTQUEUED) D ^%ZISC I 'RCSTOP,RCPG D ASK()
"RTN","RCDPETR",128,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPETR",129,0)
 K ^TMP($J,"RCDPE_TROUT"),^("RCDPE_TRIN")
"RTN","RCDPETR",130,0)
 Q
"RTN","RCDPETR",131,0)
 ;
"RTN","RCDPETR",132,0)
HDR(RCCT,RCPG,RCSTOP,RCINOUT,RCDT1,RCDT2) ;Prints report heading
"RTN","RCDPETR",133,0)
 ; Function returns RCPG = current page # and RCCT = running line count
"RTN","RCDPETR",134,0)
 ;   and RCSTOP = 1 if user aborted print
"RTN","RCDPETR",135,0)
 ; Parameters must be passed by reference
"RTN","RCDPETR",136,0)
 N Z,Z0
"RTN","RCDPETR",137,0)
 I RCPG!($E(IOST,1,2)="C-") D
"RTN","RCDPETR",138,0)
 . I RCPG&($E(IOST,1,2)="C-") D ASK(.RCSTOP) Q:RCSTOP
"RTN","RCDPETR",139,0)
 . W @IOF,*13 ; Write form feed
"RTN","RCDPETR",140,0)
 S RCPG=RCPG+1
"RTN","RCDPETR",141,0)
 S Z0="EDI LOCKBOX EEOBs TRANSFERRED "_$S(RCINOUT=1:"OUT",1:"IN")_" REPORT"
"RTN","RCDPETR",142,0)
 S Z=$$SETSTR^VALM1($J("",80-$L(Z0)\2)_Z0,"",1,79)
"RTN","RCDPETR",143,0)
 S Z=$$SETSTR^VALM1("Page: "_RCPG,Z,70,10)
"RTN","RCDPETR",144,0)
 D SETLINE(Z,.RCCT)
"RTN","RCDPETR",145,0)
 S Z0="RUN DATE: "_$$FMTE^XLFDT(DT,2),Z0=$J("",80-$L(Z0)\2)_Z0
"RTN","RCDPETR",146,0)
 S Z=$$SETSTR^VALM1(Z0,"",1,79)
"RTN","RCDPETR",147,0)
 D SETLINE(Z,.RCCT)
"RTN","RCDPETR",148,0)
 D SETLINE(" ",.RCCT)
"RTN","RCDPETR",149,0)
 D SETLINE("DATE RANGE SELECTED: "_$$FMTE^XLFDT(RCDT1,2)_"-"_$$FMTE^XLFDT(RCDT2,2),.RCCT)
"RTN","RCDPETR",150,0)
 D SETLINE(" ",.RCCT)
"RTN","RCDPETR",151,0)
 S Z=$$SETSTR^VALM1($E("BILL #"_$J("",13),1,13)_"TRANS DT"_$J("",2)_$E("TRANS "_$S(RCINOUT=1:"TO",1:"FROM")_$J("",21),1,21)_"EEOB DATE"_$J("",2)_$E("AMT PAID"_$J("",14),1,14)_"STATUS","",1,80)
"RTN","RCDPETR",152,0)
 D SETLINE(Z,.RCCT)
"RTN","RCDPETR",153,0)
 D SETLINE($TR($J("",IOM-1)," ","="),.RCCT)
"RTN","RCDPETR",154,0)
 I $$STOP(99,.RCSTOP,0)
"RTN","RCDPETR",155,0)
 Q
"RTN","RCDPETR",156,0)
 ;
"RTN","RCDPETR",157,0)
SETLINE(Z,RCCT) ; Writes line
"RTN","RCDPETR",158,0)
 ; Z = txt to output
"RTN","RCDPETR",159,0)
 ; RCCT = line counter
"RTN","RCDPETR",160,0)
 S RCCT=RCCT+1
"RTN","RCDPETR",161,0)
 W !,Z
"RTN","RCDPETR",162,0)
 Q
"RTN","RCDPETR",163,0)
 ;
"RTN","RCDPETR",164,0)
ASK(RCSTOP) ; Ask to continue
"RTN","RCDPETR",165,0)
 ; If passed by reference ,RCSTOP is returned as 1 if print is aborted
"RTN","RCDPETR",166,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPETR",167,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPETR",168,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPETR",169,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPETR",170,0)
 Q
"RTN","RCDPETR",171,0)
 ;
"RTN","RCDPETR",172,0)
STOP(CT,RCSTOP,RCPG) ; Function returns 1 if queued job/user requested forced exit
"RTN","RCDPETR",173,0)
 ; Function returns CT if passed by ref to only check every 100 records
"RTN","RCDPETR",174,0)
 S CT=CT+1
"RTN","RCDPETR",175,0)
 I (CT#100) Q 0
"RTN","RCDPETR",176,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W !,"***TASK STOPPED BY USER***" Q 1
"RTN","RCDPETR",177,0)
 Q 0
"RTN","RCDPETR",178,0)
 ;
"RTN","RCDPETR",179,0)
RAWBILL(RC3445,RCDAT) ; Returns bill specific data for entry in file 344.5
"RTN","RCDPETR",180,0)
 ; RC3445 = Ien file 344.5
"RTN","RCDPETR",181,0)
 ; FUNCTION RETURNS RCDAT(SEQ #)=Bill #^amt pd^EOB date  (pass by ref)
"RTN","RCDPETR",182,0)
 N DAT,Z,Z0,RCT
"RTN","RCDPETR",183,0)
 S (RCT,Z)=0 F  S Z=$O(^RCY(344.5,RC3445,2,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","RCDPETR",184,0)
 . I +Z0=835 S RCDAT(0)=$P(Z0,U,3) Q
"RTN","RCDPETR",185,0)
 . I +Z0=10 S RCT=RCT+1,RCDAT(RCT)=$P(Z0,U,2)_U_$J($P(Z0,U,11)/100,"",2)
"RTN","RCDPETR",186,0)
 Q
"RTN","RCDPETR",187,0)
 ;
"RTN","RCDPEU")
0^94^B5470439
"RTN","RCDPEU",1,0)
RCDPEU ;ALB/TMK - ELECTRONIC ERA UTILITIES ;05-NOV-02
"RTN","RCDPEU",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEU",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEU",4,0)
 Q
"RTN","RCDPEU",5,0)
 ;
"RTN","RCDPEU",6,0)
EFTMTCH ; Match an electronic EFT's deposit to a paper EOB's receipt record
"RTN","RCDPEU",7,0)
 ; Select the receipt record.  Match the totals.
"RTN","RCDPEU",8,0)
 N DIR,X,Y,RCDEP,DUOUT,DTOUT
"RTN","RCDPEU",9,0)
 S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("S")="I $P($G(^(0),U,8)=0" ; must be unmatched
"RTN","RCDPEU",10,0)
 S DIR("A")="Select EFT RECORD (Unmatched to an ERA): " D ^DIR K DIR
"RTN","RCDPEU",11,0)
 I $D(DTOUT)!$D(DUOUT) G MATCHQ2
"RTN","RCDPEU",12,0)
 S RCDEP=+Y
"RTN","RCDPEU",13,0)
MATCHQ2 Q
"RTN","RCDPEU",14,0)
 ;
"RTN","RCDPEU",15,0)
MATCH ; Manual start of ERA/EFT automatic matching
"RTN","RCDPEU",16,0)
 D EN^RCDPEM(1,1)
"RTN","RCDPEU",17,0)
 Q
"RTN","RCDPEU",18,0)
 ;
"RTN","RCDPEU",19,0)
ADJ(RC3444,RCADJ) ; Function-determines if ERA record contains adjustments
"RTN","RCDPEU",20,0)
 ; RC3444 = ien of ERA entry in file 344.4
"RTN","RCDPEU",21,0)
 ; Return value = 1 for ERA level adjustments found, 2 if claim level
"RTN","RCDPEU",22,0)
 ;                      adjustments found, 3 if both found
"RTN","RCDPEU",23,0)
 ; Also returns RCADJ(ERA ien,seq#)=bill # for claim level adjustments
"RTN","RCDPEU",24,0)
 ;
"RTN","RCDPEU",25,0)
 N Z,DA
"RTN","RCDPEU",26,0)
 S RCADJ=0
"RTN","RCDPEU",27,0)
 ;
"RTN","RCDPEU",28,0)
 I $O(^RCY(344.4,RC3444,2,0)) S RCADJ=1  ;ERA level adjustment
"RTN","RCDPEU",29,0)
 ;
"RTN","RCDPEU",30,0)
 I 'RCADJ D  ; Claim level adjustment
"RTN","RCDPEU",31,0)
 . S DA(1)=RC3444
"RTN","RCDPEU",32,0)
 . S Z=0 F  S Z=$O(^RCY(344.4,RC3444,1,Z)) Q:'Z  I $P($G(^(Z,0)),U,14) S RCADJ=RCADJ+2,DA=Z,RCADJ(RC3444,Z)=$$GETBILL^RCDPESR0(.DA)
"RTN","RCDPEU",33,0)
 ;
"RTN","RCDPEU",34,0)
 Q RCADJ
"RTN","RCDPEU",35,0)
 ;
"RTN","RCDPEU",36,0)
DEPREC(RC3443) ; Returns the ien of the receipt for the EFT deposit RC3443
"RTN","RCDPEU",37,0)
 ; RC3443 = ien of entry in file 344.3
"RTN","RCDPEU",38,0)
 N Z
"RTN","RCDPEU",39,0)
 S Z=+$P($G(^RCY(344.3,+RC3443,0)),U,3)
"RTN","RCDPEU",40,0)
 S Z=+$O(^RCY(344,"AD",Z,0))
"RTN","RCDPEU",41,0)
 Q Z
"RTN","RCDPEU",42,0)
 ;
"RTN","RCDPEU",43,0)
EDILB(RCRCPT) ;  Given receipt ien RCRCPT, return 1 if the receipt is for
"RTN","RCDPEU",44,0)
 ; an EDI Lockbox deposit (EFT), 2 if for EDI Lockbox detail (EOB/ERA)
"RTN","RCDPEU",45,0)
 ; or 0 if not EDI Lockbox related (paper check)
"RTN","RCDPEU",46,0)
 N X,Z
"RTN","RCDPEU",47,0)
 S Z=0
"RTN","RCDPEU",48,0)
 S X=$$EDILBEV($P($G(^RCY(344,RCRCPT,0)),U,4))
"RTN","RCDPEU",49,0)
 I X D
"RTN","RCDPEU",50,0)
 . I $P($G(^RCY(344,RCRCPT,0)),U,6),$$EDILBDEP(+$P(^(0),U,6)) S Z=1 Q  ; EFT deposit associated with receipt
"RTN","RCDPEU",51,0)
 . I '$P($G(^RCY(344,RCRCPT,0)),U,6) S Z=2 Q  ; EFT detail
"RTN","RCDPEU",52,0)
 Q Z
"RTN","RCDPEU",53,0)
 ;
"RTN","RCDPEU",54,0)
EDILBDEP(RCDEP) ; Given deposit ien RCDEP (file 344.1), return 1 if there is
"RTN","RCDPEU",55,0)
 ; an EFT referrencing it in file 344.3
"RTN","RCDPEU",56,0)
 N X,Y
"RTN","RCDPEU",57,0)
 S X=$O(^RCY(344.3,"ARDEP",RCDEP,0))
"RTN","RCDPEU",58,0)
 Q (X>0)
"RTN","RCDPEU",59,0)
 ;
"RTN","RCDPEU",60,0)
EDILBEV(PAYTYP) ; Given ien of file 341.1 PAYTYP, return 1 if the pay type's
"RTN","RCDPEU",61,0)
 ;  event number is EDI LOCKBOX
"RTN","RCDPEU",62,0)
 Q ($P($G(^RC(341.1,+$G(PAYTYP),0)),U,2)=14)
"RTN","RCDPEU",63,0)
 ;
"RTN","RCDPEU",64,0)
LBEVENT() ; Returns the IEN of EDI Lockbox event 14 in file 341.1
"RTN","RCDPEU",65,0)
 Q +$O(^RC(341.1,"AC",14,0))
"RTN","RCDPEU",66,0)
 ;
"RTN","RCDPEU",67,0)
HACERA(RCERA) ; Functions to determine if ERA entry in file 344.4 is an
"RTN","RCDPEU",68,0)
 ; ERA received from HAC (CHAMPVA)
"RTN","RCDPEU",69,0)
 ; RCERA = ien of entry file 344.4
"RTN","RCDPEU",70,0)
 ; Returns 1 if it is, 0 if not
"RTN","RCDPEU",71,0)
 N X
"RTN","RCDPEU",72,0)
 S X=0 ; Add code here to make the determination
"RTN","RCDPEU",73,0)
 Q X
"RTN","RCDPEU",74,0)
 ;
"RTN","RCDPEU",75,0)
HACEFT(RCEFT) ; Functions to determine if EFT entry in file 344.3 is an
"RTN","RCDPEU",76,0)
 ; EFT received from HAC (CHAMPVA)
"RTN","RCDPEU",77,0)
 ; RCEFT = ien of entry file 344.3
"RTN","RCDPEU",78,0)
 ; Returns 1 if it is, 0 if not
"RTN","RCDPEU",79,0)
 Q ($E($P($G(^RCY(344.3,+RCEFT,0)),U,6),1,3)="HAC")
"RTN","RCDPEU",80,0)
 ;
"RTN","RCDPEWL")
0^95^B35876366
"RTN","RCDPEWL",1,0)
RCDPEWL ;ALB/TMK - ELECTRONIC EOB MESSAGE WORKLIST ;06-FEB-2003
"RTN","RCDPEWL",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEWL",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEWL",4,0)
 ; IA for read access to ^IBM(361.1 = 4051
"RTN","RCDPEWL",5,0)
 ;
"RTN","RCDPEWL",6,0)
EN ; Main entry point
"RTN","RCDPEWL",7,0)
 N RCFASTXT,DA,DIC,X,Y,DIR,RCERA,RCNOED,RCPOST,RCDFR,RCDTO,RCMATCH,RCQUIT
"RTN","RCDPEWL",8,0)
 D FULL^VALM1
"RTN","RCDPEWL",9,0)
 ;
"RTN","RCDPEWL",10,0)
 S RCQUIT=0
"RTN","RCDPEWL",11,0)
 D PARAMS^RCDPEWL0(.RCQUIT,.RCPOST,.RCMATCH,.RCDFR,.RCDTO)
"RTN","RCDPEWL",12,0)
 G:RCQUIT ENQ
"RTN","RCDPEWL",13,0)
 ;
"RTN","RCDPEWL",14,0)
 S DIC="^RCY(344.4,",DIC(0)="AEMQZ",DIC("S")="I $$FILTER^RCDPEWL0(Y,$G(^(0)),RCPOST,RCMATCH,RCDFR,RCDTO)"
"RTN","RCDPEWL",15,0)
 D ^DIC K DIC
"RTN","RCDPEWL",16,0)
 S RCERA=+Y,RCNOED=0
"RTN","RCDPEWL",17,0)
 G:RCERA'>0 ENQ
"RTN","RCDPEWL",18,0)
 I $P(Y(0),U,8) S RCNOED=+$P(Y(0),U,8) D
"RTN","RCDPEWL",19,0)
 . S DIR(0)="EA",DIR("A",1)="THIS ERA ALREADY HAS A RECEIPT - YOU MAY ONLY VIEW ITS SCRATCH PAD",DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEWL",20,0)
 . W ! D ^DIR K DIR W !
"RTN","RCDPEWL",21,0)
 D DISP(RCERA,RCNOED)
"RTN","RCDPEWL",22,0)
 ;
"RTN","RCDPEWL",23,0)
ENQ Q
"RTN","RCDPEWL",24,0)
 ;
"RTN","RCDPEWL",25,0)
DISP(RCERA,RCNOED) ; Entry to worklist from receipt processing
"RTN","RCDPEWL",26,0)
 ; RCERA = ien of entry in file 344.4
"RTN","RCDPEWL",27,0)
 ; RCNOED = 1 if receipt exists/no editing allowed
"RTN","RCDPEWL",28,0)
 ;        = 2 if no edit and called from receipt processing
"RTN","RCDPEWL",29,0)
 ;
"RTN","RCDPEWL",30,0)
 N DUOUT,DTOUT,DIC,X,Y,DIR,RCQUIT,DA,DIE,DR,RCSCR,RC0,RCDAT,RCUNM
"RTN","RCDPEWL",31,0)
 ;
"RTN","RCDPEWL",32,0)
 S RCSCR("NOEDIT")=+$G(RCNOED)
"RTN","RCDPEWL",33,0)
 S RCQUIT=0,RC0=$G(^RCY(344.4,RCERA,0))
"RTN","RCDPEWL",34,0)
 I $$HACERA^RCDPEU(RCERA) S DIR(0)="YA",DIR("A")="THIS ERA IS FROM CHAMPVA (HAC) - ARE YOU SURE YOU WANT TO CONTINUE?: ",DIR("B")="YES" D ^DIR K DIR G:Y'=1 DISPQ
"RTN","RCDPEWL",35,0)
 I 'RCSCR("NOEDIT"),'$O(^RCY(344.49,"B",RCERA,0)) D  G:RCQUIT DISPQ
"RTN","RCDPEWL",36,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A",1)="NO WORKLIST SCRATCH PAD ENTRY EXISTS FOR THIS ERA",DIR("A")="DO YOU WANT TO CREATE ONE NOW?: "
"RTN","RCDPEWL",37,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEWL",38,0)
 . I Y'=1 S RCERA=-1,RCQUIT=1 Q
"RTN","RCDPEWL",39,0)
 . ;
"RTN","RCDPEWL",40,0)
 . I $P(RC0,U,15)'="" W !!,"PAYMENT METHOD CODE REPORTED: "_$P(RC0,U,15),!
"RTN","RCDPEWL",41,0)
 . I $P(RC0,U,15)="" W !!,"NO PAYMENT METHOD CODE REPORTED",!
"RTN","RCDPEWL",42,0)
 . I $P(RC0,U,9)=0,$P(RC0,U,13)="",'$$HACERA^RCDPEU(RCERA) D  Q:RCQUIT
"RTN","RCDPEWL",43,0)
 .. S RCQUIT=0,RCUNM=0
"RTN","RCDPEWL",44,0)
 .. I +$P(RC0,U,5)=0,"NON"[$P(RC0,U,15) D  Q:RCQUIT!RCUNM
"RTN","RCDPEWL",45,0)
 ... S DIR("A",1)="THIS ERA HAS NO PAYMENT ASSOCIATED WITH IT AND CAN BE MARKED AS",DIR("A",2)="'MATCH-0 PAYMENT' TO REMOVE IT FROM THE ERA AGING REPORT IF NO PAPER CHECK OR",DIR("A",3)="EFT IS EXPECTED TO BE RECEIVED FOR THIS ERA"
"RTN","RCDPEWL",46,0)
 ... S DIR("?")="DO NOT RESPOND YES HERE UNLESS YOU ARE SURE THRE WILL BE NO EFT OR PAPER",DIR("?",1)=" CHECK TO BE RECEIVED FOR THIS 0-PAYMENT ERA"
"RTN","RCDPEWL",47,0)
 ... S DIR("A")="DO YOU WANT TO DO THIS?: "
"RTN","RCDPEWL",48,0)
 ... S DIR(0)="YA"
"RTN","RCDPEWL",49,0)
 ... D ^DIR K DIR
"RTN","RCDPEWL",50,0)
 ... I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWL",51,0)
 ... I Y'=1 Q
"RTN","RCDPEWL",52,0)
 ... S DIE="^RCY(344.4,",DR=".09////3;.14////3",DA=RCERA D ^DIE S RCUNM=1
"RTN","RCDPEWL",53,0)
 .. I 'RCUNM D
"RTN","RCDPEWL",54,0)
 ... S DIR("A",1)="THIS ERA DOES NOT HAVE A MATCHING EFT",DIR("A")="ENTER THE NUMBER OF THE PAPER CHECK YOU RECEIVED FOR THIS ERA: ",DIR(0)="344.01,.07A"
"RTN","RCDPEWL",55,0)
 ... I $P(RC0,U,13)'="" S DIR("B")=$P(RC0,U,13)
"RTN","RCDPEWL",56,0)
 ... I $G(DIR("B"))="",$P(RC0,U,2)'="" S DIR("B")=$P(RC0,U,2)
"RTN","RCDPEWL",57,0)
 ... W ! D ^DIR K DIR
"RTN","RCDPEWL",58,0)
 ... I $D(DTOUT)!$D(DUOUT)!(Y="") D  S RCQUIT=1 Q
"RTN","RCDPEWL",59,0)
 .... S DIR(0)="EA",DIR("A",1)="THERE MUST EITHER BE A PAPER CHECK OR AN EFT FOR THIS ERA",DIR("A")="PRESS RETURN TO CONTINUE " W !!  D ^DIR K DIR
"RTN","RCDPEWL",60,0)
 ... S RCDAT("CHECK#")=Y
"RTN","RCDPEWL",61,0)
 ... S DIR(0)="344.01,.1O",DIR("B")=$$FMTE^XLFDT($P(RC0,U,4),2)
"RTN","RCDPEWL",62,0)
 ... W ! D ^DIR K DIR
"RTN","RCDPEWL",63,0)
 ... I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWL",64,0)
 ... S RCDAT("CHECKDT")=Y
"RTN","RCDPEWL",65,0)
 ... S DIR(0)="344.01,.08O"
"RTN","RCDPEWL",66,0)
 ... W ! D ^DIR K DIR
"RTN","RCDPEWL",67,0)
 ... I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWL",68,0)
 ... S RCDAT("BANK")=Y
"RTN","RCDPEWL",69,0)
 ... S DIR("A",1)="ERA #"_RCERA_" (TRACE #:"_$P(RC0,U,2)_") MATCHED TO PAPER CHECK "_RCDAT("CHECK#"),DIR("A")="IS THIS CORRECT?: ",DIR(0)="YA",DIR("B")="YES" W ! D ^DIR K DIR
"RTN","RCDPEWL",70,0)
 ... I Y'=1 S RCQUIT=1 Q
"RTN","RCDPEWL",71,0)
 ... S DIE="^RCY(344.4,",DA=RCERA,DR=".13////"_RCDAT("CHECK#")_";.09////2" D ^DIE
"RTN","RCDPEWL",72,0)
 ;
"RTN","RCDPEWL",73,0)
 I 'RCSCR("NOEDIT") L +^RCY(344.4,RCERA):5 I '$T W !!,"Another user is currently editing this entry",! S DIR(0)="E" D ^DIR K DIR G DISPQ
"RTN","RCDPEWL",74,0)
 ;
"RTN","RCDPEWL",75,0)
 S RCSCR=+$O(^RCY(344.49,"B",RCERA,0))
"RTN","RCDPEWL",76,0)
 I 'RCSCR D  ; Build the entry in file 344.49
"RTN","RCDPEWL",77,0)
 . I RCSCR("NOEDIT") D  Q
"RTN","RCDPEWL",78,0)
 .. S DIR("A")="NO WORKLIST ENTRY EXISTS FOR THIS ERA - PRESS RETURN TO CONTINUE ",DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEWL",79,0)
 . ;
"RTN","RCDPEWL",80,0)
 . S RCSCR=+$$ADDREC(RCERA,.RCDAT)
"RTN","RCDPEWL",81,0)
 . I RCSCR D ADDLINES^RCDPEWLA(RCSCR)
"RTN","RCDPEWL",82,0)
 ;
"RTN","RCDPEWL",83,0)
 I RCSCR D
"RTN","RCDPEWL",84,0)
 . D EN^VALM("RCDPE EOB WORKLIST")
"RTN","RCDPEWL",85,0)
 ;
"RTN","RCDPEWL",86,0)
DISPQ L -^RCY(344.4,+$G(RCERA))
"RTN","RCDPEWL",87,0)
 Q
"RTN","RCDPEWL",88,0)
 ;
"RTN","RCDPEWL",89,0)
INIT ; -- set up initial variables
"RTN","RCDPEWL",90,0)
 N RCQUIT
"RTN","RCDPEWL",91,0)
 S VALMCNT=0,VALMBG=1
"RTN","RCDPEWL",92,0)
 I '$D(RCSCR) S VALMQUIT=1 Q
"RTN","RCDPEWL",93,0)
 D BLD^RCDPEWL1($$SELSORT^RCDPEWLA(.RCQUIT))
"RTN","RCDPEWL",94,0)
 I $G(RCQUIT) S VALMQUIT=1
"RTN","RCDPEWL",95,0)
 Q
"RTN","RCDPEWL",96,0)
 ;
"RTN","RCDPEWL",97,0)
ADDREC(RCERA,RCDAT) ; Add a record to file 344.49
"RTN","RCDPEWL",98,0)
 ; RCERA = ien of file 344.4
"RTN","RCDPEWL",99,0)
 ; RCDAT = array containing additional data to add to new entry
"RTN","RCDPEWL",100,0)
 ;
"RTN","RCDPEWL",101,0)
 N DIC,DLAYGO,X,Y,DO,DD,RCY,DINUM
"RTN","RCDPEWL",102,0)
 S RCY=0,DIC("DR")=""
"RTN","RCDPEWL",103,0)
 S DIC(0)="L",DLAYGO=344.49,(DINUM,X)=RCERA,DIC="^RCY(344.49,"
"RTN","RCDPEWL",104,0)
 I $G(RCDAT("CHECK#"))'="" S DIC("DR")=".04////"_RCDAT("CHECK#")_";"
"RTN","RCDPEWL",105,0)
 I $G(RCDAT("CHECKDT"))'="" S DIC("DR")=DIC("DR")_".05////"_RCDAT("CHECKDT")_";"
"RTN","RCDPEWL",106,0)
 I $G(RCDAT("BANK"))'="" S DIC("DR")=DIC("DR")_".06////"_RCDAT("BANK")_";"
"RTN","RCDPEWL",107,0)
 K DD,DO D FILE^DICN K DIC
"RTN","RCDPEWL",108,0)
 I Y>0 S RCY=+Y
"RTN","RCDPEWL",109,0)
 Q RCY
"RTN","RCDPEWL",110,0)
 ;
"RTN","RCDPEWL",111,0)
HDR ; Creates header lines for the selected ERA display
"RTN","RCDPEWL",112,0)
 N X,Z,RC
"RTN","RCDPEWL",113,0)
 I '$G(RCSCR) S VALMQUIT=1 Q
"RTN","RCDPEWL",114,0)
 S RC=$G(^RCY(344.4,+RCSCR,0))
"RTN","RCDPEWL",115,0)
 S VALMHDR(1)=$E("ERA Entry #: "_$P(RC,U)_$J("",31),1,31)_"Payer Name/ID: "_$P(RC,U,6)_"/"_$P(RC,U,3)
"RTN","RCDPEWL",116,0)
 S VALMHDR(2)=$E("Total Amt Pd: "_$J(+$P(RC,U,5),"",2)_$J("",31),1,31)
"RTN","RCDPEWL",117,0)
 S Z=+$O(^RCY(344.31,"AERA",+RCSCR,0))
"RTN","RCDPEWL",118,0)
 I Z S VALMHDR(2)=VALMHDR(2)_"EFT #/TRACE #: "_$P($G(^RCY(344.3,+$G(^RCY(344.31,Z,0)),0)),U)_"/"_$P(RC,U,2)
"RTN","RCDPEWL",119,0)
 I 'Z,$P(RC,U,13)'="" S VALMHDR(2)=VALMHDR(2)_"PAPER CHECK #: "_$P(RC,U,13)
"RTN","RCDPEWL",120,0)
 I $G(RCSCR("NOEDIT")) S VALMHDR(3)="*** RECEIPT ALREADY CREATED ("_$P($G(^RCY(344,+$P(RC,U,8),0)),U)_") ***"
"RTN","RCDPEWL",121,0)
 Q
"RTN","RCDPEWL",122,0)
 ;
"RTN","RCDPEWL",123,0)
FNL ; -- Clean up list
"RTN","RCDPEWL",124,0)
 K ^TMP("RCDPE-EOB_WLDX",$J),^TMP("RCDPE-EOB_WL",$J),^TMP($J,"RC_SORTPARM"),^TMP($J,"RC_BILL")
"RTN","RCDPEWL",125,0)
 D CLEAN^VALM10,CLEAR^VALM1
"RTN","RCDPEWL",126,0)
 K RCFASTXT
"RTN","RCDPEWL",127,0)
 Q
"RTN","RCDPEWL",128,0)
 ;
"RTN","RCDPEWL",129,0)
SEL(RCDA) ; Select entry from worklist scratch pad screen
"RTN","RCDPEWL",130,0)
 ; RCDA = array returned if selections made
"RTN","RCDPEWL",131,0)
 ;    RCDA(n)=ien of entry(s) in file 344.41 
"RTN","RCDPEWL",132,0)
 ;            where n = the line # selected  
"RTN","RCDPEWL",133,0)
 K RCDA
"RTN","RCDPEWL",134,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","RCDPEWL",135,0)
 S RCDA=0 F  S RCDA=$O(VALMY(RCDA)) Q:'RCDA  S RCDA(RCDA)=$P($G(^TMP("RCDPE-EOB_WLDX",$J,RCDA)),U,2,5)
"RTN","RCDPEWL",136,0)
 Q
"RTN","RCDPEWL",137,0)
 ;
"RTN","RCDPEWL",138,0)
NOEDIT ; Display no edit allowed if receipt exists
"RTN","RCDPEWL",139,0)
 N DIR,X,Y
"RTN","RCDPEWL",140,0)
 S DIR(0)="EA",DIR("A",1)="THIS ACTION IS NOT AVAILABLE SINCE THE ERA ALREADY HAS A RECEIPT."
"RTN","RCDPEWL",141,0)
 S DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEWL",142,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEWL",143,0)
 Q
"RTN","RCDPEWL",144,0)
 ;
"RTN","RCDPEWL0")
0^96^B55327578
"RTN","RCDPEWL0",1,0)
RCDPEWL0 ;ALB/TMK - ELECTRONIC EOB WORKLIST ACTIONS ;26-NOV-02
"RTN","RCDPEWL0",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEWL0",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEWL0",4,0)
 Q
"RTN","RCDPEWL0",5,0)
 ;
"RTN","RCDPEWL0",6,0)
PARAMS(RCQUIT,RCPOST,RCMATCH,RCDFR,RCDTO) ; Select parameters for ERAs
"RTN","RCDPEWL0",7,0)
 ; Return all variables in list
"RTN","RCDPEWL0",8,0)
 N DIR,X,Y
"RTN","RCDPEWL0",9,0)
 W !,"SELECT PARAMETERS FOR SELECTING AN ERA",!
"RTN","RCDPEWL0",10,0)
 S DIR(0)="SA^U:UNPOSTED;P:POSTED;B:BOTH",DIR("B")="UNPOSTED",DIR("A")="ERA POSTING STATUS: " W ! D ^DIR K DIR
"RTN","RCDPEWL0",11,0)
 I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 G PARAMSQ
"RTN","RCDPEWL0",12,0)
 S RCPOST=Y
"RTN","RCDPEWL0",13,0)
 S DIR(0)="SA^N:NOT MATCHED;M:MATCHED;B:BOTH",DIR("B")="BOTH",DIR("A")="ERA-EFT MATCH STATUS: " W ! D ^DIR K DIR
"RTN","RCDPEWL0",14,0)
 I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 G PARAMSQ
"RTN","RCDPEWL0",15,0)
 S RCMATCH=Y
"RTN","RCDPEWL0",16,0)
 S RCDTO=DT,RCDFR=0
"RTN","RCDPEWL0",17,0)
DT1 S DIR(0)="YA",DIR("A")="LIMIT THE SELECTION TO A DATE RANGE WHEN THE ERA WAS RECEIVED?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEWL0",18,0)
 I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 G PARAMSQ
"RTN","RCDPEWL0",19,0)
 I Y=1 S RCQUIT=0 D  G:RCQUIT DT1
"RTN","RCDPEWL0",20,0)
 . S DIR(0)="DA",DIR("A")="EARLIEST DATE: " D ^DIR K DIR
"RTN","RCDPEWL0",21,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWL0",22,0)
 . S RCDFR=Y
"RTN","RCDPEWL0",23,0)
 . S DIR(0)="DA^"_RCDFR_";"_DT,DIR("A")="LATEST DATE: " D ^DIR K DIR
"RTN","RCDPEWL0",24,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWL0",25,0)
 . S RCDTO=Y
"RTN","RCDPEWL0",26,0)
 W !
"RTN","RCDPEWL0",27,0)
PARAMSQ Q
"RTN","RCDPEWL0",28,0)
 ;
"RTN","RCDPEWL0",29,0)
FILTER(Y,RCZ,RCPOST,RCMATCH,RCDFR,RCDTO) ; Function returns 1 if record in Y
"RTN","RCDPEWL0",30,0)
 ; passes the edits for the worklist selection of ERAs
"RTN","RCDPEWL0",31,0)
 N OK
"RTN","RCDPEWL0",32,0)
 S OK=1
"RTN","RCDPEWL0",33,0)
 ; If receipt exists, scratchpad must already exist to use this option
"RTN","RCDPEWL0",34,0)
 I $P(RCZ,U,8),'$D(^RCY(344.49,+Y,0)) S OK=0 G FQ
"RTN","RCDPEWL0",35,0)
 I $S(RCPOST="B":0,RCPOST="U":$P(RCZ,U,14),1:'$P(RCZ,U,14)) S OK=0 G FQ
"RTN","RCDPEWL0",36,0)
 I $S(RCMATCH="B":0,RCMATCH="N":$P(RCZ,U,9),1:'$P(RCZ,U,9)) S OK=0 G FQ
"RTN","RCDPEWL0",37,0)
 I $S(RCDFR=0:0,1:$P(RCZ,U,7)\1<RCDFR) S OK=0 G FQ
"RTN","RCDPEWL0",38,0)
 I $S(RCDTO=DT:0,1:$P(RCZ,U,7)\1>RCDTO) S OK=0 G FQ
"RTN","RCDPEWL0",39,0)
FQ Q OK
"RTN","RCDPEWL0",40,0)
 ;
"RTN","RCDPEWL0",41,0)
SPLIT ; Split a line in the ERA list
"RTN","RCDPEWL0",42,0)
 N RCZ,RCDA,Q,Q0,Z,Z0,DIR,X,Y,CT,L,L1,RCONE
"RTN","RCDPEWL0",43,0)
 D FULL^VALM1
"RTN","RCDPEWL0",44,0)
 I $G(RCSCR("NOEDIT")) D NOEDIT^RCDPEWL G SPLITQ
"RTN","RCDPEWL0",45,0)
 W !!,"SELECT THE ENTRY THAT HAS A LINE YOU NEED TO SPLIT/EDIT",!
"RTN","RCDPEWL0",46,0)
 D SEL^RCDPEWL(.RCDA)
"RTN","RCDPEWL0",47,0)
 S Z=+$O(RCDA(0)) G:'$G(RCDA(Z)) SPLITQ
"RTN","RCDPEWL0",48,0)
 ;S RCLZ=+$G(^RCY(344.49,RCSCR,1,+RCDA(Z),0))
"RTN","RCDPEWL0",49,0)
 S Z0=+$O(^TMP("RCDPE-EOB_WLDX",$J,Z_".999"),-1)
"RTN","RCDPEWL0",50,0)
 S RCZ=Z F  S RCZ=$O(^TMP("RCDPE-EOB_WLDX",$J,RCZ)) Q:'RCZ!(RCZ\1'=Z)  D
"RTN","RCDPEWL0",51,0)
 . S Q=$P($G(^TMP("RCDPE-EOB_WLDX",$J,RCZ)),U,2)
"RTN","RCDPEWL0",52,0)
 . Q:'Q
"RTN","RCDPEWL0",53,0)
 . S RCZ(RCZ)=Q
"RTN","RCDPEWL0",54,0)
 . S Q0=0 F  S Q0=$O(^RCY(344.49,RCSCR,1,Q,1,Q0)) Q:'Q0  I "01"[$P($G(^(Q0,0)),U,2) K RCZ(RCZ) Q
"RTN","RCDPEWL0",55,0)
 I '$O(RCZ(0)) D  G SPLITQ
"RTN","RCDPEWL0",56,0)
 . S DIR(0)="EA",DIR("A",1)="THIS ENTRY HAS NO LINES AVAILABLE TO EDIT/SPLIT",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL0",57,0)
 S CT=0,CT=CT+1,DIR("?",CT)="Enter the line # that you want to split or edit:",RCONE=1
"RTN","RCDPEWL0",58,0)
 S L=Z F  S L=$O(RCZ(L)) Q:'L  D
"RTN","RCDPEWL0",59,0)
 . S L1=+$G(^TMP("RCDPE-EOB_WLDX",$J,L))
"RTN","RCDPEWL0",60,0)
 . S CT=CT+1
"RTN","RCDPEWL0",61,0)
 . S DIR("?",CT)=$G(^TMP("RCDPE-EOB_WL",$J,L1,0)),CT=CT+1,DIR("?",CT)=$G(^TMP("RCDPE-EOB_WL",$J,L1+1,0)) S RCONE(1)=$S(RCONE:L,1:"") S RCONE=0
"RTN","RCDPEWL0",62,0)
 S DIR("?")=" ",Y=-1
"RTN","RCDPEWL0",63,0)
 I $G(RCONE(1)) S Y=+RCONE(1) K DIR G:'Y SPLITQ
"RTN","RCDPEWL0",64,0)
 I '$G(RCONE(1)) D  K DIR I $D(DTOUT)!$D(DUOUT)!(Y\1'=Z) G SPLITQ
"RTN","RCDPEWL0",65,0)
 . F  S DIR(0)="NAO^"_(Z+.001)_":"_Z0_":3",DIR("A")="WHICH LINE OF ENTRY "_Z_" DO YOU WANT TO SPLIT/EDIT?: " S:$G(RCONE(1))'="" DIR("B")=RCONE(1) D ^DIR Q:'Y!$D(DUOUT)!$D(DTOUT)  D  Q:Y>0
"RTN","RCDPEWL0",66,0)
 .. I '$D(^TMP("RCDPE-EOB_WLDX",$J,Y)) W !!,"LINE "_Y_" DOES NOT EXIST - TRY AGAIN",! S Y=-1 Q
"RTN","RCDPEWL0",67,0)
 .. I '$D(RCZ(Y)) W !!,"LINE "_Y_" HAS BEEN USED IN A DISTRIBUTE ADJ ACTION AND CAN'T BE EDITED",! S Y=-1 Q
"RTN","RCDPEWL0",68,0)
 .. S Q=+$O(^RCY(344.49,RCSCR,1,"B",Y,0))
"RTN","RCDPEWL0",69,0)
 ;
"RTN","RCDPEWL0",70,0)
 K ^TMP("RCDPE_SPLIT_REBLD",$J)
"RTN","RCDPEWL0",71,0)
 D SPLIT^RCDPEWL3(RCSCR,+Y)
"RTN","RCDPEWL0",72,0)
 I $G(^TMP("RCDPE_SPLIT_REBLD",$J)) K ^TMP("RCDPE_SPLIT_REBLD",$J) D BLD^RCDPEWL1($G(^TMP($J,"RC_SORTPARM")))
"RTN","RCDPEWL0",73,0)
 ;
"RTN","RCDPEWL0",74,0)
SPLITQ S VALMBCK="R"
"RTN","RCDPEWL0",75,0)
 Q
"RTN","RCDPEWL0",76,0)
 ;
"RTN","RCDPEWL0",77,0)
PRTERA ; Select ERA and view/print
"RTN","RCDPEWL0",78,0)
 N DIC,X,Y,RCSCR
"RTN","RCDPEWL0",79,0)
 S DIC="^RCY(344.4,",DIC(0)="AEMQ" D ^DIC
"RTN","RCDPEWL0",80,0)
 Q:Y'>0
"RTN","RCDPEWL0",81,0)
 S RCSCR=+Y
"RTN","RCDPEWL0",82,0)
 D PRERA1
"RTN","RCDPEWL0",83,0)
 Q
"RTN","RCDPEWL0",84,0)
 ;
"RTN","RCDPEWL0",85,0)
PRERA ; Print/View ERA
"RTN","RCDPEWL0",86,0)
 D FULL^VALM1 ; Protocol entrypoint
"RTN","RCDPEWL0",87,0)
PRERA1 ; Option entrypoint
"RTN","RCDPEWL0",88,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC,POP,DIR,X,Y,RCERADET
"RTN","RCDPEWL0",89,0)
 S DIR("?",1)="INCLUDING EXPANDED DETAIL WILL SIGNIFICANTLY INCREASE THE SIZE OF THIS REPORT",DIR("?",2)="IF YOU CHOOSE TO INCLUDE IT, ALL PAYMENT DETAILS FOR EACH EEOB WILL BE"
"RTN","RCDPEWL0",90,0)
 S DIR("?")="LISTED.  IF YOU WANT JUST SUMMARY DATA FOR EACH EEOB, DO NOT INCLUDE IT."
"RTN","RCDPEWL0",91,0)
 S DIR(0)="YA",DIR("A")="DO YOU WANT TO INCLUDE EXPANDED EEOB DETAIL?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEWL0",92,0)
 I $D(DUOUT)!$D(DTOUT) G PRERAQ
"RTN","RCDPEWL0",93,0)
 S RCERADET=+Y
"RTN","RCDPEWL0",94,0)
 S %ZIS="QM" D ^%ZIS G:POP PRERAQ
"RTN","RCDPEWL0",95,0)
 I $D(IO("Q")) D  G PRERAQ
"RTN","RCDPEWL0",96,0)
 . S ZTRTN="VPERA^RCDPEWL0("_RCSCR_","_RCERADET_")",ZTDESC="AR - Print ERA From Worklist"
"RTN","RCDPEWL0",97,0)
 . D ^%ZTLOAD
"RTN","RCDPEWL0",98,0)
 . W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEWL0",99,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEWL0",100,0)
 U IO
"RTN","RCDPEWL0",101,0)
 D VPERA(RCSCR,RCERADET)
"RTN","RCDPEWL0",102,0)
 Q
"RTN","RCDPEWL0",103,0)
 ;
"RTN","RCDPEWL0",104,0)
VPERA(RCSCR,RCERADET) ; Queued job entry point
"RTN","RCDPEWL0",105,0)
 ; RCSCR = ien of entry in file 344.4
"RTN","RCDPEWL0",106,0)
 ; RCERADET = 1 if inclusion of all EOB details from file 361.1 is
"RTN","RCDPEWL0",107,0)
 ;  desired, 0 if it is not
"RTN","RCDPEWL0",108,0)
 N Z,Z0,RCSTOP,RCZ,RCPG,RCDOT,RCDIQ,RCDIQ1,RCDIQ2,RCXM1,RC,RCSCR1,RC3611
"RTN","RCDPEWL0",109,0)
 K ^TMP($J,"RC_SUMRAW"),^TMP($J,"RC_SUMOUT"),^TMP($J,"RC_SUMALL")
"RTN","RCDPEWL0",110,0)
 S (RCSTOP,RCPG)=0,RCDOT="",$P(RCDOT,".",79)=""
"RTN","RCDPEWL0",111,0)
 D GETS^DIQ(344.4,RCSCR_",","*","IEN","RCDIQ")
"RTN","RCDPEWL0",112,0)
 D TXT0^RCDPEX31(RCSCR,.RCDIQ,.RCXM1,.RC) ; Get top level 0-node captioned fields
"RTN","RCDPEWL0",113,0)
 I $O(^RCY(344.4,RCSCR,2,0)) S RC=RC+1,RCXM1(RC)="  **ERA LEVEL ADJUSTMENTS**"
"RTN","RCDPEWL0",114,0)
 S RCSCR1=0 F  S RCSCR1=$O(^RCY(344.4,RCSCR,2,RCSCR1)) Q:'RCSCR1  D
"RTN","RCDPEWL0",115,0)
 . K RCDIQ2
"RTN","RCDPEWL0",116,0)
 . D GETS^DIQ(344.42,RCSCR1_","_RCSCR_",","*","IEN","RCDIQ2")
"RTN","RCDPEWL0",117,0)
 . D TXT2^RCDPEX31(RCSCR,RCSCR1,.RCDIQ2,.RCXM1,.RC) ; Get top level ERA adjs
"RTN","RCDPEWL0",118,0)
 S RCSCR1=0 F  S RCSCR1=$O(^RCY(344.4,RCSCR,1,RCSCR1)) Q:'RCSCR1  D
"RTN","RCDPEWL0",119,0)
 . K RCDIQ1
"RTN","RCDPEWL0",120,0)
 . D GETS^DIQ(344.41,RCSCR1_","_RCSCR_",","*","IEN","RCDIQ1")
"RTN","RCDPEWL0",121,0)
 . D TXT00^RCDPEX31(RCSCR,RCSCR1,.RCDIQ1,.RCXM1,.RC)
"RTN","RCDPEWL0",122,0)
 . S RC=RC+1,RCXM1(RC-1)=$E("PATIENT: "_$$PNM4^RCDPEWL1(RCSCR,RCSCR1)_$J("",41),1,41)_"CLAIM #: "_$$BILLREF^RCDPESR0(RCSCR,RCSCR1),RCXM1(RC)=" "
"RTN","RCDPEWL0",123,0)
 . S RC3611=$P($G(^RCY(344.4,RCSCR,1,RCSCR1,0)),U,2)
"RTN","RCDPEWL0",124,0)
 . I RCERADET D  ; Include formatted text from file 361.1 or 344.411
"RTN","RCDPEWL0",125,0)
 .. I 'RC3611 D  Q  ; Formatted raw data
"RTN","RCDPEWL0",126,0)
 ... D DISP^RCDPESR0("^RCY(344.4,"_RCSCR_",1,"_RCSCR1_",1)","^TMP($J,""RC_SUMRAW"")",1,"^TMP($J,""RC_SUMOUT"")",75,1)
"RTN","RCDPEWL0",127,0)
 ..;
"RTN","RCDPEWL0",128,0)
 .. E  D  ; Detail record exists in 361.1
"RTN","RCDPEWL0",129,0)
 ... K ^TMP("PRCA_EOB",$J)
"RTN","RCDPEWL0",130,0)
 ... D GETEOB^IBCECSA6(RC3611,2)
"RTN","RCDPEWL0",131,0)
 ... I $O(^IBM(361.1,RC3611,"ERR",0)) D GETERR^RCDPEDS(RC3611,+$O(^TMP("PRCA_EOB",$J,RC3611," "),-1)) ; get filing errors
"RTN","RCDPEWL0",132,0)
 ... S Z=0 F  S Z=$O(^TMP("PRCA_EOB",$J,RC3611,Z)) Q:'Z  S RC=RC+1,^TMP($J,"RC_SUMOUT",RC)=$G(^TMP("PRCA_EOB",$J,RC3611,Z))
"RTN","RCDPEWL0",133,0)
 ... S RC=RC+2,^TMP($J,"RC_SUMOUT",RC-1)=" ",^TMP($J,"RC_SUMOUT",RC)=" "
"RTN","RCDPEWL0",134,0)
 ... K ^TMP("PRCA_EOB",$J)
"RTN","RCDPEWL0",135,0)
 . I $D(RCDIQ1(344.41,RCSCR1_","_RCSCR_",",2)) D
"RTN","RCDPEWL0",136,0)
 .. S RC=RC+1,RCXM1(RC)="  **EXCEPTION RESOLUTION LOG DATA**"
"RTN","RCDPEWL0",137,0)
 .. S Z=0 F  S Z=$O(RCDIQ1(344.41,RCSCR1_","_RCSCR_",",2,Z)) Q:'Z  S RC=RC+1,RCXM1(RC)=RCDIQ1(344.41,RCSCR1_","_RCSCR_",",2,Z)
"RTN","RCDPEWL0",138,0)
 . S RC=RC+1,RCXM1(RC)=" "
"RTN","RCDPEWL0",139,0)
 . S Z0=+$O(^TMP($J,"RC_SUMALL"," "),-1)
"RTN","RCDPEWL0",140,0)
 . S Z=0 F  S Z=$O(RCXM1(Z)) Q:'Z  S Z0=Z0+1,^TMP($J,"RC_SUMALL",Z0)=RCXM1(Z)
"RTN","RCDPEWL0",141,0)
 . K RCXM1 S RC=0
"RTN","RCDPEWL0",142,0)
 . S Z=0 F  S Z=$O(^TMP($J,"RC_SUMOUT",Z)) Q:'Z  S Z0=Z0+1,^TMP($J,"RC_SUMALL",Z0)=$G(^TMP($J,"RC_SUMOUT",Z))
"RTN","RCDPEWL0",143,0)
 S RCSTOP=0,Z=""
"RTN","RCDPEWL0",144,0)
 F  S Z=$O(^TMP($J,"RC_SUMALL",Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEWL0",145,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEWL0",146,0)
 . I 'RCPG!(($Y+5)>IOSL) D  I RCSTOP Q
"RTN","RCDPEWL0",147,0)
 .. D:RCPG ASK(.RCSTOP) I RCSTOP Q
"RTN","RCDPEWL0",148,0)
 .. D HDR(.RCPG)
"RTN","RCDPEWL0",149,0)
 . W !,$G(^TMP($J,"RC_SUMALL",Z))
"RTN","RCDPEWL0",150,0)
 ;
"RTN","RCDPEWL0",151,0)
 I 'RCSTOP,RCPG D ASK(.RCSTOP)
"RTN","RCDPEWL0",152,0)
 ;
"RTN","RCDPEWL0",153,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEWL0",154,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEWL0",155,0)
 ;
"RTN","RCDPEWL0",156,0)
PRERAQ K ^TMP($J,"RC_SUMRAW"),^TMP($J,"RC_SUMOUT"),^TMP($J,"SUMALL")
"RTN","RCDPEWL0",157,0)
 S VALMBCK="R"
"RTN","RCDPEWL0",158,0)
 Q
"RTN","RCDPEWL0",159,0)
 ;
"RTN","RCDPEWL0",160,0)
HDR(RCPG) ;Print report hdr
"RTN","RCDPEWL0",161,0)
 ; RCPG = last page #
"RTN","RCDPEWL0",162,0)
 I RCPG!($E(IOST,1,2)="C-") W @IOF,*13
"RTN","RCDPEWL0",163,0)
 S RCPG=$G(RCPG)+1
"RTN","RCDPEWL0",164,0)
 W !,?5,"EDI LOCKBOX WORKLIST - ERA DETAIL",?55,$$FMTE^XLFDT(DT,2),?70,"Page: ",RCPG,!,$TR($J("",IOM)," ","=")
"RTN","RCDPEWL0",165,0)
 Q
"RTN","RCDPEWL0",166,0)
 ;
"RTN","RCDPEWL0",167,0)
ASK(RCSTOP) ;
"RTN","RCDPEWL0",168,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEWL0",169,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEWL0",170,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEWL0",171,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEWL0",172,0)
 Q
"RTN","RCDPEWL0",173,0)
 ;
"RTN","RCDPEWL1")
0^97^B37688801
"RTN","RCDPEWL1",1,0)
RCDPEWL1 ;ALB/TMK - ELECTRONIC EOB WORKLIST SCREEN ;26-NOV-02
"RTN","RCDPEWL1",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEWL1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEWL1",4,0)
 ; IA for read access to ^IBM(361.1 = 4051
"RTN","RCDPEWL1",5,0)
 ; IA for call to ^DGENA = 3812
"RTN","RCDPEWL1",6,0)
 Q
"RTN","RCDPEWL1",7,0)
 ;
"RTN","RCDPEWL1",8,0)
BLD(RCSORT) ; Build the detail display record for the WL scratch pad record
"RTN","RCDPEWL1",9,0)
 ; Assume RCSCR = ien from file 344.49
"RTN","RCDPEWL1",10,0)
 ; RCSORT = "" or 'N' for no sort  'F' for 0-pays first, 'L' for last
"RTN","RCDPEWL1",11,0)
 ;
"RTN","RCDPEWL1",12,0)
 N A,A0,B,Q,Q0,Q1,QQ,V1,X,Y,Z,Z0,Z3,ZZ,ZZ1,RCT,RCZ,RCZ0,RCZZ0,RCSA,RCAZ,RCAZ0,RCSCT,RCS1,RCLI1,RCY34441,RCZERO,RCTS,RCTL
"RTN","RCDPEWL1",13,0)
 S RCSORT=$P($G(RCSORT),U),RCSORT=$S(RCSORT="":"N",1:RCSORT),RCTS=0
"RTN","RCDPEWL1",14,0)
 K ^TMP("RCDPE-EOB_WL",$J),^TMP("RCDPE-EOB_WLDX",$J),^TMP($J,"RCS"),^TMP($J,"RC_BILL")
"RTN","RCDPEWL1",15,0)
 ;
"RTN","RCDPEWL1",16,0)
 S VALMCNT=0
"RTN","RCDPEWL1",17,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,1,"B",Z)) Q:'Z  I Z#1=0 S ZZ=+$O(^RCY(344.49,RCSCR,1,"B",Z,0)) I ZZ D
"RTN","RCDPEWL1",18,0)
 . S RCZ=ZZ,RCZ0=$G(^RCY(344.49,RCSCR,1,ZZ,0)),RCS1=$P(RCZ0,U,6)
"RTN","RCDPEWL1",19,0)
 . S RCZERO=$S($P(RCZ0,U,2)["**ADJ":"-1",RCSORT="N":1,RCSORT="F":+RCS1'=0,1:+RCS1=0)
"RTN","RCDPEWL1",20,0)
 . ;
"RTN","RCDPEWL1",21,0)
 . ; This is a top-level entry - find the sublines
"RTN","RCDPEWL1",22,0)
 . S Z0=Z F  S Z0=$O(^RCY(344.49,RCSCR,1,"B",Z0)) Q:((Z0\1)'=(Z\1))  S Z=Z0,ZZ1=+$O(^RCY(344.49,RCSCR,1,"B",Z0,0)) I ZZ1 D
"RTN","RCDPEWL1",23,0)
 .. S ^TMP($J,"RCS",RCZERO,ZZ,ZZ1)=""
"RTN","RCDPEWL1",24,0)
 . S ^TMP($J,"RCS",RCZERO,ZZ)=""
"RTN","RCDPEWL1",25,0)
 ;
"RTN","RCDPEWL1",26,0)
 S RCZERO="",RCTS=0 F  S RCZERO=$O(^TMP($J,"RCS",RCZERO)) Q:RCZERO=""  S ZZ=0 F  S ZZ=$O(^TMP($J,"RCS",RCZERO,ZZ)) Q:'ZZ  D
"RTN","RCDPEWL1",27,0)
 . N A
"RTN","RCDPEWL1",28,0)
 . S RCZ0=$G(^RCY(344.49,RCSCR,1,ZZ,0)),RCS1=$P(RCZ0,U,6),RCTS=RCTS+1,RCY34441=$G(^RCY(344.4,RCSCR,1,+$P(RCZ0,U,9),0))
"RTN","RCDPEWL1",29,0)
 . S A=" EEOB Seq #"_$S($P(RCZ0,U,9)[",":"'s",1:"")_" On ERA: "_$S($P(RCZ0,U,9)'="":$P(RCZ0,U,9),1:"None")_"   Net Payment Amt: "_$J(+RCS1,"",2)
"RTN","RCDPEWL1",30,0)
 . I $P($G(^TMP($J,"RC_SORTPARM")),U,2) S A=A_"  Reviewed?: "_$$EXTERNAL^DILFD(344.491,.11,,$S($P(RCZ0,U,11)'="":$P(RCZ0,U,11),1:"NO"))
"RTN","RCDPEWL1",31,0)
 . D SET($E(RCTS_$J("",4),1,4)_A,RCTS,RCTS,ZZ)
"RTN","RCDPEWL1",32,0)
 . I $P(RCY34441,U,11) D
"RTN","RCDPEWL1",33,0)
 .. D SET("EEOB TRANSFERRED TO "_$E($P($G(^DIC(4,+$P(RCY34441,U,11),0)),U),1,20)_" "_$$FMTE^XLFDT($P(RCY34441,U,12),"2D")_" STATUS: "_$$EXTERNAL^DILFD(344.41,.1,"",+$P(RCY34441,U,10)),RCTS,RCTS,ZZ)
"RTN","RCDPEWL1",34,0)
 . ;
"RTN","RCDPEWL1",35,0)
 . S RCT=RCTS
"RTN","RCDPEWL1",36,0)
 . S ZZ1=0 F  S ZZ1=$O(^TMP($J,"RCS",RCZERO,ZZ,ZZ1)) Q:'ZZ1  D
"RTN","RCDPEWL1",37,0)
 .. S RCT=RCT+.001
"RTN","RCDPEWL1",38,0)
 .. S RCTL=$L(RCT)
"RTN","RCDPEWL1",39,0)
 .. S RCZZ0=$G(^RCY(344.49,RCSCR,1,ZZ1,0))
"RTN","RCDPEWL1",40,0)
 .. S V1=$S($P(RCZ0,U,2)'["**ADJ":"",$P($P(RCZ0,U,2),"ADJ",2):"***ADJUSTMENT AT ERA LEVEL",1:"*** ADJUSTMENT LINE FOR TOTALS MISMATCH")
"RTN","RCDPEWL1",41,0)
 .. S RCLI1=$S(V1="":"  Claim #: "_$P(RCZZ0,U,2)_$J("",3)_"Patient/Last 4: "_$S($P(RCZZ0,U,7):$$PNM4("","",$P(RCZZ0,U,7)),'$P($G(^RCY(344.49,RCSCR,1,ZZ1,2)),U,3):$$PNM4(+$G(^RCY(344.49,RCSCR,0)),RCZ),1:"??"),1:V1)
"RTN","RCDPEWL1",42,0)
 .. D SET($J("",4)_RCT_RCLI1,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",43,0)
 .. I '$P(RCZZ0,U,7),$P(RCZ0,U,2)'["**ADJ" D SET($J("",4+RCTL)_"***CLAIM NOT FOUND IN YOUR AR ***",RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",44,0)
 .. I $P(RCZZ0,U,7) D
"RTN","RCDPEWL1",45,0)
 ... N A,RCX
"RTN","RCDPEWL1",46,0)
 ... S A("OA")=$$ORI^PRCAFN(+$P(RCZZ0,U,7)),A("SDT")=$P($G(^DGCR(399,+$P(RCZZ0,U,7),"U")),U),A("DFN")=+$P($G(^(0)),U,2),A("ENRPR")=""
"RTN","RCDPEWL1",47,0)
 ... ; Find Rx copay status
"RTN","RCDPEWL1",48,0)
 ... S A("RXCP")=$S('A("SDT"):"",1:$$RXST^IBARXEU(A("DFN"),A("SDT"))),A("RXCP")=$S($P(A("RXCP"),U)'="":$P(A("RXCP"),U,2),1:"UNKNOWN") ;IA #10147
"RTN","RCDPEWL1",49,0)
 ... ; Find M/T status
"RTN","RCDPEWL1",50,0)
 ... S RCX=$$LST^DGMTU(A("DFN"),A("SDT")),A("M/T")=$P(RCX,U,4)
"RTN","RCDPEWL1",51,0)
 ... S A("M/T")=$S('RCX:"??",A("M/T")="P":"PEN",A("M/T")="C":"YES",A("M/T")="G":"GMT",A("M/T")="R":"REQ",1:"NO")
"RTN","RCDPEWL1",52,0)
 ... ;
"RTN","RCDPEWL1",53,0)
 ... S QQ="   Billed Amt: "_$J(A("OA"),"",2)_"   Amt To Post: "_$J(+$P(RCZZ0,U,3),"",2)
"RTN","RCDPEWL1",54,0)
 ... D SET($J("",4+RCTL)_"Claim Bal: "_$J(+$P($$BILL^RCJIBFN2(+$P(RCZZ0,U,7)),U,3),"",2)_QQ,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",55,0)
 ... S ^TMP($J,"RC_BILL",$P(RCZZ0,U,7),RCT)=QQ
"RTN","RCDPEWL1",56,0)
 ... S Z3=$J("",4+RCTL)_"Svc Dt: "_$S(A("SDT")'="":$$FMTE^XLFDT(A("SDT"),2),1:"UNKNOWN")
"RTN","RCDPEWL1",57,0)
 ... S Z3=Z3_"  COB: "_$S($D(^DGCR(399,+$P(RCZZ0,U,7),"I"_($$COBN(+$P(RCZZ0,U,7))+1))):"YES",1:"NO ")
"RTN","RCDPEWL1",58,0)
 ... D SET(Z3_"  Rx Copay: "_$E(A("RXCP"),1,17)_"  Means Tst: "_A("M/T"),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",59,0)
 .. ;
"RTN","RCDPEWL1",60,0)
 .. D SET($J("",4+RCTL)_"Payment Amt: "_$J(+$P(RCZZ0,U,5),"",2)_"   Total Adjustments: "_$J(+$P(RCZZ0,U,8),"",2)_"  Net: "_$J($P(RCZZ0,U,5)+$P(RCZZ0,U,8),"",2),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",61,0)
 .. I $P(RCZZ0,U,10)'="" D SET($J("",9)_"Receipt Comment: "_$P(RCZZ0,U,10),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",62,0)
 .. I $O(^RCY(344.49,RCSCR,1,ZZ1,1,0)) D
"RTN","RCDPEWL1",63,0)
 ... S Z3=""
"RTN","RCDPEWL1",64,0)
 ... D SET($J("",4+RCTL)_"ADJUSTMENTS:",RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",65,0)
 ... S RCAZ=0 F  S RCAZ=$O(^RCY(344.49,RCSCR,1,ZZ1,1,RCAZ)) Q:'RCAZ  S RCAZ0=$G(^(RCAZ,0)) D
"RTN","RCDPEWL1",66,0)
 .... S Z3=$J("",6+RCTL)_+RCAZ0_".  ",Q=$L(Z3)
"RTN","RCDPEWL1",67,0)
 .... ;
"RTN","RCDPEWL1",68,0)
 .... I $P(RCAZ0,U,2)=0 S Z3=Z3_"Distributed adj dec for retraction "_$P(RCAZ0,U,4)_": "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",69,0)
 .... I $P(RCAZ0,U,2)=1 S Z3=Z3_"Adjustment distribution to balance receipt: "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",70,0)
 .... ;
"RTN","RCDPEWL1",71,0)
 .... I $P(RCAZ0,U,2)=2!($P(RCAZ0,U,2)=4) D
"RTN","RCDPEWL1",72,0)
 ..... S Z3=Z3_"ERA payment adjusted from "_$J($P(RCZZ0,U,5)-$P(RCZZ0,U,6),"",2)_" to "_$J(+$P(RCZZ0,U,5),"",2)_"  NET: "_$J($P(RCZZ0,U,5)+$P(RCAZ0,U,3),"",2)
"RTN","RCDPEWL1",73,0)
 .... I $P(RCAZ0,U,2)=5 S Z3=Z3_"Non-specific payment (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",74,0)
 .... I $P(RCAZ0,U,2)=3 S Z3=Z3_"Non-specific retraction (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",75,0)
 .... D SET(Z3,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",76,0)
 .... I $P(RCAZ0,U,9)'="" D SET($J("",Q)_$P(RCAZ0,U,9),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",77,0)
 .. ;
"RTN","RCDPEWL1",78,0)
 .. I $P($G(^TMP($J,"RC_SORTPARM")),U,2),$O(^RCY(344.49,RCSCR,1,ZZ,3,0)) D
"RTN","RCDPEWL1",79,0)
 ... S A=$J("",10)_"REVIEW NOTES:"
"RTN","RCDPEWL1",80,0)
 ... I $P(RCZ0,U,12) S A=A_" (LAST REVIEW STATUS SET BY: "_$P($G(^VA(200,$P(RCZ0,U,12),0)),U)_")"
"RTN","RCDPEWL1",81,0)
 ... D SET(A,+RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",82,0)
 ... S A=0 F  S A=$O(^RCY(344.49,RCSCR,1,ZZ,3,A)) Q:'A  D SET($J("",12)_$G(^RCY(344.49,RCSCR,1,ZZ,3,A,0)),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",83,0)
 .. S A="",$P(A,".",79)="" D SET(A,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",84,0)
 ;
"RTN","RCDPEWL1",85,0)
 K ^TMP($J,"RCS")
"RTN","RCDPEWL1",86,0)
 Q
"RTN","RCDPEWL1",87,0)
 ;
"RTN","RCDPEWL1",88,0)
INIT ;
"RTN","RCDPEWL1",89,0)
 S VALMBG=$G(^TMP($J,"RC_VALMBG"))
"RTN","RCDPEWL1",90,0)
 Q
"RTN","RCDPEWL1",91,0)
 ;
"RTN","RCDPEWL1",92,0)
HDR ;
"RTN","RCDPEWL1",93,0)
 D HDR^RCDPEWL
"RTN","RCDPEWL1",94,0)
 Q
"RTN","RCDPEWL1",95,0)
 ;
"RTN","RCDPEWL1",96,0)
FNL ; -- Clean up list
"RTN","RCDPEWL1",97,0)
 K RCFASTXT
"RTN","RCDPEWL1",98,0)
 Q
"RTN","RCDPEWL1",99,0)
 ;
"RTN","RCDPEWL1",100,0)
SET(X,RCSEQ,RCSEQ1,RCZ9) ; -- set arrays
"RTN","RCDPEWL1",101,0)
 ; X = the data to set into the global
"RTN","RCDPEWL1",102,0)
 ; RCSEQ = the selectable line #
"RTN","RCDPEWL1",103,0)
 ; RCSEQ1 = the sub line #
"RTN","RCDPEWL1",104,0)
 ; RCZ9 = reference to the line(s) in file 344.41 or to the subline in
"RTN","RCDPEWL1",105,0)
 ;        file 344.49 for RCSEQ having a decimal
"RTN","RCDPEWL1",106,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPE-EOB_WL",$J,VALMCNT,0)=X
"RTN","RCDPEWL1",107,0)
 I $G(RCSEQ) S ^TMP("RCDPE-EOB_WL",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEWL1",108,0)
 I $G(RCSEQ1),'$D(^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)) S ^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)=VALMCNT_U_$G(RCZ9)
"RTN","RCDPEWL1",109,0)
 Q
"RTN","RCDPEWL1",110,0)
 ;
"RTN","RCDPEWL1",111,0)
PNM4(RCIFN,RCDA,RC) ; Returns either the patient name or patient name/last 4
"RTN","RCDPEWL1",112,0)
 ; RCIFN = ien of file 344.4
"RTN","RCDPEWL1",113,0)
 ; RCDA = ien of file 344.41
"RTN","RCDPEWL1",114,0)
 ; RC = the ien of file 430
"RTN","RCDPEWL1",115,0)
 N Z,Z0,Q
"RTN","RCDPEWL1",116,0)
 S Z=""
"RTN","RCDPEWL1",117,0)
 I $G(RCIFN)'="" D
"RTN","RCDPEWL1",118,0)
 . S Z0=$G(^RCY(344.4,RCIFN,1,RCDA,0)),Z=""
"RTN","RCDPEWL1",119,0)
 . I $P(Z0,U,2) S Q=+$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(Z0,U,2),0)),0)),U,2),Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9) ; IA 4051
"RTN","RCDPEWL1",120,0)
 . I $TR(Z,"/")="" S Z=$P(Z0,U,15)
"RTN","RCDPEWL1",121,0)
 I $G(RC)'="" D
"RTN","RCDPEWL1",122,0)
 . S Q=+$P($G(^PRCA(430,RC,0)),U,7)
"RTN","RCDPEWL1",123,0)
 . I Q S Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9)
"RTN","RCDPEWL1",124,0)
 Q Z
"RTN","RCDPEWL1",125,0)
 ;
"RTN","RCDPEWL1",126,0)
COBN(RC,A) ; Return seq # of selected payer
"RTN","RCDPEWL1",127,0)
 ; A = 'PST' or null to get current bill payer seq #
"RTN","RCDPEWL1",128,0)
 I $G(A)="" S A=$P($G(^DGCR(399,RC,0)),U,21) S:A="" A="P" S:"PST"'[A A="P"
"RTN","RCDPEWL1",129,0)
 I 'A S A=$F("PST",A)-1 S:A<1 A=1
"RTN","RCDPEWL1",130,0)
 Q A
"RTN","RCDPEWL1",131,0)
 ;
"RTN","RCDPEWL2")
0^98^B76369803
"RTN","RCDPEWL2",1,0)
RCDPEWL2 ;ALB/TMK - ELECTRONIC EOB WORKLIST ACTIONS ;26-NOV-02
"RTN","RCDPEWL2",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEWL2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEWL2",4,0)
 ; IA for call to OPTION^IBJTLA = 4121
"RTN","RCDPEWL2",5,0)
 ; IA for call to ASK^IBRREL = 306
"RTN","RCDPEWL2",6,0)
 ; IA call for EN1AR^IBECEA = 4047
"RTN","RCDPEWL2",7,0)
 ; IA call for MAIN^IBOHPT1 = 4048
"RTN","RCDPEWL2",8,0)
 ; IA for read access to ^IBM(361.1 = 4051
"RTN","RCDPEWL2",9,0)
 Q
"RTN","RCDPEWL2",10,0)
 ;
"RTN","RCDPEWL2",11,0)
VP(RCSCR,RCDAZ) ; View/Print EOB Detail data from file 361.1
"RTN","RCDPEWL2",12,0)
 ; RCSCR = ien of entry in file 344.4
"RTN","RCDPEWL2",13,0)
 ; RCDAZ = array subscripted by a sequential # and
"RTN","RCDPEWL2",14,0)
 ;   RCDAZ(n) = one of 3 formats
"RTN","RCDPEWL2",15,0)
 ;     ERA level adjustments
"RTN","RCDPEWL2",16,0)
 ;          ADJ^the ien of the adj in 344.42
"RTN","RCDPEWL2",17,0)
 ;     EOB exists in file 361.1:
"RTN","RCDPEWL2",18,0)
 ;          ien of line in 344.41^ien of 361.1
"RTN","RCDPEWL2",19,0)
 ;     EOB doesn't exist in 361.1:
"RTN","RCDPEWL2",20,0)
 ;          ien of line in 344.41^-1
"RTN","RCDPEWL2",21,0)
 ;
"RTN","RCDPEWL2",22,0)
 N RCDA,%ZIS,ZTRTN,ZTSAVE,ZTDESC,POP
"RTN","RCDPEWL2",23,0)
 ; Ask device
"RTN","RCDPEWL2",24,0)
 S %ZIS="QM" D ^%ZIS G:POP VPQ
"RTN","RCDPEWL2",25,0)
 I $D(IO("Q")) D  G VPQ
"RTN","RCDPEWL2",26,0)
 . S ZTRTN="VPOUT^RCDPEWL2",ZTDESC="AR - Print EEOB Detail from Worklist"
"RTN","RCDPEWL2",27,0)
 . S ZTSAVE("RC*")=""
"RTN","RCDPEWL2",28,0)
 . D ^%ZTLOAD
"RTN","RCDPEWL2",29,0)
 . W !!,$S($D(ZTSK):"Your task number "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEWL2",30,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEWL2",31,0)
 U IO
"RTN","RCDPEWL2",32,0)
 ;
"RTN","RCDPEWL2",33,0)
VPOUT ; Entrypoint for queued job
"RTN","RCDPEWL2",34,0)
 N Z,Z0,RCSTOP,RCPG,RCREF,RC3611,RCDASH,RCDT,RC1,RC3444,RCZ,RCZ0
"RTN","RCDPEWL2",35,0)
 ;
"RTN","RCDPEWL2",36,0)
 K ^TMP("PRCA_EOB",$J),^TMP("PRCA_EOB1",$J)
"RTN","RCDPEWL2",37,0)
 S RCDT=DT,(RCSTOP,RCPG)=0,RC3444=RCSCR,RCDASH="",$P(RCDASH,"-",71)=""
"RTN","RCDPEWL2",38,0)
 I '$O(RCDAZ(0)) G VPQ
"RTN","RCDPEWL2",39,0)
 S RCZ=0 F  S RCZ=$O(RCDAZ(RCZ)) Q:'RCZ  D
"RTN","RCDPEWL2",40,0)
 . S RCREF=$P(RCDAZ(RCZ),U),RC3611=+$P(RCDAZ(RCZ),U,2)
"RTN","RCDPEWL2",41,0)
 . K ^TMP("PRCA_EOB1",$J,RC3611)
"RTN","RCDPEWL2",42,0)
 . ;
"RTN","RCDPEWL2",43,0)
 . I $E(RCREF,1,3)["ADJ" D  Q
"RTN","RCDPEWL2",44,0)
 .. ;Display ERA level adj
"RTN","RCDPEWL2",45,0)
 .. S RCZ0=$G(^RCY(344.4,RCSCR,2,RC3611,0))
"RTN","RCDPEWL2",46,0)
 .. S ^TMP("PRCA_EOB",$J,"ADJ",1)="ERA LEVEL ADJUSTMENT #"_RC3611
"RTN","RCDPEWL2",47,0)
 .. S ^TMP("PRCA_EOB",$J,"ADJ",2)="   ADJUSTMENT REFERENCE #: "_$P(RCZ0,U)
"RTN","RCDPEWL2",48,0)
 .. S ^TMP("PRCA_EOB",$J,"ADJ",3)="   ADJUSTMENT REASON CODE: "_$P(RCZ0,U,2)
"RTN","RCDPEWL2",49,0)
 .. S ^TMP("PRCA_EOB",$J,"ADJ",4)="        ADJUSTMENT AMOUNT: "_$J(+$P(RCZ0,U,3),"",2)
"RTN","RCDPEWL2",50,0)
 .. S ^TMP("PRCA_EOB",$J,"ADJ",5)=RCDASH
"RTN","RCDPEWL2",51,0)
 . ;
"RTN","RCDPEWL2",52,0)
 . I $P(RCDAZ(RCZ),U,2)'>0 D  Q
"RTN","RCDPEWL2",53,0)
 .. ;Display formatted raw data - no EOB data in 361.1
"RTN","RCDPEWL2",54,0)
 .. K ^TMP($J,"RC_SUMRAW")
"RTN","RCDPEWL2",55,0)
 .. D DISP^RCDPESR0("^RCY(344.4,"_RCSCR_",1,"_+RCDAZ(RCZ)_",1)","^TMP($J,""RC_SUMRAW"")",1,"^TMP(""PRCA_EOB"",$J,0)")
"RTN","RCDPEWL2",56,0)
 .. S ^TMP("PRCA_EOB1",$J,RC3611,1)="CLAIM #: "_$$BILLREF^RCDPESR0(RCSCR,+RCDAZ(RCZ))_"*** NOT IDENTIFIED IN A/R ****"_$S($P($G(^RCY(344.4,RCSCR,1,+RCDAZ(RCZ),0)),U,14):" (REVERSAL)",1:"")
"RTN","RCDPEWL2",57,0)
 .. K ^TMP($J,"RC_SUMRAW")
"RTN","RCDPEWL2",58,0)
 .. S ^TMP("PRCA_EOB",$J,+$O(^TMP("PRCA_EOB",$J,""),-1)+1)=RCDASH
"RTN","RCDPEWL2",59,0)
 . ;
"RTN","RCDPEWL2",60,0)
 . K ^TMP("PRCA_EOB1",$J,RC3611)
"RTN","RCDPEWL2",61,0)
 . S ^TMP("PRCA_EOB1",$J,RC3611,1)="CLAIM #: "_$$BILLREF^RCDPESR0(RCSCR,+RCDAZ(RCZ))_$S($P($G(^RCY(344.4,RCSCR,1,+RCDAZ(RCZ),0)),U,14):" (REVERSAL)",1:"")
"RTN","RCDPEWL2",62,0)
 . D GETEOB^IBCECSA6(RC3611,2)
"RTN","RCDPEWL2",63,0)
 . I $O(^IBM(361.1,RC3611,"ERR",0)) D GETERR^RCDPEDS(RC3611,+$O(^TMP("PRCA_EOB",$J,RC3611," "),-1)) ; get filing errors
"RTN","RCDPEWL2",64,0)
 . S ^TMP("PRCA_EOB",$J,+$O(^TMP("PRCA_EOB",$J,""),-1)+1)=RCDASH
"RTN","RCDPEWL2",65,0)
 . ;
"RTN","RCDPEWL2",66,0)
 S RC3611="" F  S RC3611=$O(^TMP("PRCA_EOB",$J,RC3611)) Q:RC3611=""!RCSTOP  D
"RTN","RCDPEWL2",67,0)
 . S RC1=1
"RTN","RCDPEWL2",68,0)
 . S Z0=0 F  S Z0=$O(^TMP("PRCA_EOB",$J,RC3611,Z0)) Q:'Z0  D  Q:RCSTOP
"RTN","RCDPEWL2",69,0)
 .. I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W !,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEWL2",70,0)
 .. I 'RCPG!(($Y+5)>IOSL) D  I RCSTOP Q
"RTN","RCDPEWL2",71,0)
 ... D:RCPG ASK(.RCSTOP) I RCSTOP Q
"RTN","RCDPEWL2",72,0)
 ... D RHDR(RCSCR,RCDT,.RCPG)
"RTN","RCDPEWL2",73,0)
 .. I RC1 W !!,$G(^TMP("PRCA_EOB1",$J,RC3611,1)) S RC1=0
"RTN","RCDPEWL2",74,0)
 .. W !,$G(^TMP("PRCA_EOB",$J,RC3611,Z0))
"RTN","RCDPEWL2",75,0)
 I 'RCSTOP,RCPG D ASK(.RCSTOP)
"RTN","RCDPEWL2",76,0)
 ;
"RTN","RCDPEWL2",77,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEWL2",78,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEWL2",79,0)
 ;
"RTN","RCDPEWL2",80,0)
VPQ K ^TMP("PRCA_EOB",$J),^TMP("PRCA_EOB1",$J)
"RTN","RCDPEWL2",81,0)
 S VALMBCK="R"
"RTN","RCDPEWL2",82,0)
 Q
"RTN","RCDPEWL2",83,0)
 ;
"RTN","RCDPEWL2",84,0)
TPJI ; Jump to Third Party Joint Inquiry for the claim
"RTN","RCDPEWL2",85,0)
 D FULL^VALM1
"RTN","RCDPEWL2",86,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G TPJIQ
"RTN","RCDPEWL2",87,0)
 D OPTION^IBJTLA ; IA 4121
"RTN","RCDPEWL2",88,0)
 ;
"RTN","RCDPEWL2",89,0)
TPJIQ S VALMBCK="R"
"RTN","RCDPEWL2",90,0)
 Q
"RTN","RCDPEWL2",91,0)
 ;
"RTN","RCDPEWL2",92,0)
FAP ; Jump to Full Account Profile
"RTN","RCDPEWL2",93,0)
 D FULL^VALM1
"RTN","RCDPEWL2",94,0)
 ;
"RTN","RCDPEWL2",95,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G FAPQ
"RTN","RCDPEWL2",96,0)
 ;
"RTN","RCDPEWL2",97,0)
 D EN^PRCAAPR("ALL"),RET K DTOUT
"RTN","RCDPEWL2",98,0)
 ;
"RTN","RCDPEWL2",99,0)
FAPQ S VALMBCK="R"
"RTN","RCDPEWL2",100,0)
 Q
"RTN","RCDPEWL2",101,0)
 ;
"RTN","RCDPEWL2",102,0)
RELHOLD ; Jump to Release Hold function
"RTN","RCDPEWL2",103,0)
 N DIR,X,Y,RCDA,RCSCR
"RTN","RCDPEWL2",104,0)
 D FULL^VALM1
"RTN","RCDPEWL2",105,0)
 ;
"RTN","RCDPEWL2",106,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G RELHQ
"RTN","RCDPEWL2",107,0)
 ;
"RTN","RCDPEWL2",108,0)
 D ^IBRREL,RET ; IA = 306
"RTN","RCDPEWL2",109,0)
 ;
"RTN","RCDPEWL2",110,0)
RELHQ S VALMBCK="R"
"RTN","RCDPEWL2",111,0)
 Q
"RTN","RCDPEWL2",112,0)
 ;
"RTN","RCDPEWL2",113,0)
CMRPT ; Jump to claims matching report
"RTN","RCDPEWL2",114,0)
 N DIR,X,Y,RCIBY
"RTN","RCDPEWL2",115,0)
 D FULL^VALM1
"RTN","RCDPEWL2",116,0)
 ;
"RTN","RCDPEWL2",117,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G CMQ
"RTN","RCDPEWL2",118,0)
 ;
"RTN","RCDPEWL2",119,0)
 D ^RCDPRTP,RET
"RTN","RCDPEWL2",120,0)
 ;
"RTN","RCDPEWL2",121,0)
CMQ S VALMBCK="R"
"RTN","RCDPEWL2",122,0)
 Q
"RTN","RCDPEWL2",123,0)
 ;
"RTN","RCDPEWL2",124,0)
CHGMNT ; Jump to charge maintenance
"RTN","RCDPEWL2",125,0)
 N DIR,X,Y,RCSCR
"RTN","RCDPEWL2",126,0)
 D FULL^VALM1
"RTN","RCDPEWL2",127,0)
 ;
"RTN","RCDPEWL2",128,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G CHMQ
"RTN","RCDPEWL2",129,0)
 ;
"RTN","RCDPEWL2",130,0)
 I $D(^XUSEC("PRCA EDI LOCKBOX CHARGES",DUZ)) D
"RTN","RCDPEWL2",131,0)
 . D EN1AR^IBECEA ; IA 4047
"RTN","RCDPEWL2",132,0)
 E  D
"RTN","RCDPEWL2",133,0)
 . S DIR(0)="EA",DIR("A",1)="YOU DO NOT HAVE THE KEY NEEDED TO ACCESS THIS OPTION.",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL2",134,0)
 ;
"RTN","RCDPEWL2",135,0)
 S VALMBCK="R"
"RTN","RCDPEWL2",136,0)
CHMQ Q
"RTN","RCDPEWL2",137,0)
 ;
"RTN","RCDPEWL2",138,0)
LSTHLD ; Jump to list current/on hold charges
"RTN","RCDPEWL2",139,0)
 N DIR,X,Y,RCIBY
"RTN","RCDPEWL2",140,0)
 D FULL^VALM1
"RTN","RCDPEWL2",141,0)
 ;
"RTN","RCDPEWL2",142,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G LHQ
"RTN","RCDPEWL2",143,0)
 ;
"RTN","RCDPEWL2",144,0)
 D MAIN^IBOHPT1,RET ; IA 4048
"RTN","RCDPEWL2",145,0)
 ;
"RTN","RCDPEWL2",146,0)
 S VALMBCK="R"
"RTN","RCDPEWL2",147,0)
LHQ Q
"RTN","RCDPEWL2",148,0)
 ;
"RTN","RCDPEWL2",149,0)
REEST ; Jump to re-establish bill
"RTN","RCDPEWL2",150,0)
 N PRC
"RTN","RCDPEWL2",151,0)
 D FULL^VALM1
"RTN","RCDPEWL2",152,0)
 ;
"RTN","RCDPEWL2",153,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G REESTQ
"RTN","RCDPEWL2",154,0)
 ;
"RTN","RCDPEWL2",155,0)
 D ^PRCAWREA K DTOUT
"RTN","RCDPEWL2",156,0)
 D RET
"RTN","RCDPEWL2",157,0)
 ;
"RTN","RCDPEWL2",158,0)
REESTQ S VALMBCK="R"
"RTN","RCDPEWL2",159,0)
 Q
"RTN","RCDPEWL2",160,0)
 ;
"RTN","RCDPEWL2",161,0)
BILLCOM ; Jump to bill comment log
"RTN","RCDPEWL2",162,0)
 D FULL^VALM1
"RTN","RCDPEWL2",163,0)
 ;
"RTN","RCDPEWL2",164,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G BILLCOMQ
"RTN","RCDPEWL2",165,0)
 ;
"RTN","RCDPEWL2",166,0)
 D ^PRCACM K DTOUT
"RTN","RCDPEWL2",167,0)
 D RET
"RTN","RCDPEWL2",168,0)
 ;
"RTN","RCDPEWL2",169,0)
BILLCOMQ S VALMBCK="R"
"RTN","RCDPEWL2",170,0)
 Q
"RTN","RCDPEWL2",171,0)
 ;
"RTN","RCDPEWL2",172,0)
ASK(RCSTOP) ;
"RTN","RCDPEWL2",173,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEWL2",174,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEWL2",175,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEWL2",176,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEWL2",177,0)
 Q
"RTN","RCDPEWL2",178,0)
 ;
"RTN","RCDPEWL2",179,0)
RHDR(RCSCR,RCDT,RCPG) ;Prints EOB detail report heading
"RTN","RCDPEWL2",180,0)
 N Z
"RTN","RCDPEWL2",181,0)
 S Z=$G(^RCY(344.4,RCSCR,0))
"RTN","RCDPEWL2",182,0)
 I RCPG!($E(IOST,1,2)="C-") W @IOF,*13
"RTN","RCDPEWL2",183,0)
 S RCPG=RCPG+1
"RTN","RCDPEWL2",184,0)
 W !,?15,"EDI LOCKBOX EEOB DETAIL FROM WORKLIST",?55,$$FMTE^XLFDT(RCDT,2),?70,"Page: ",RCPG
"RTN","RCDPEWL2",185,0)
 W !!,$E(" ERA NUMBER: "_RCSCR_$J("",25),1,25)_$E("ERA TRACE #: "_$P(Z,U,2)_$J("",30),1,30)_"ERA DATE: "_$$FMTE^XLFDT($P(Z,U,4)),!,"INS COMPANY: "_$P(Z,U,6)_"/"_$P(Z,U,3)
"RTN","RCDPEWL2",186,0)
 W !,$TR($J("",IOM)," ","=")
"RTN","RCDPEWL2",187,0)
 Q
"RTN","RCDPEWL2",188,0)
 ;
"RTN","RCDPEWL2",189,0)
RET ; Pause before returning to list
"RTN","RCDPEWL2",190,0)
 N DIR,X,Y
"RTN","RCDPEWL2",191,0)
 S DIR(0)="EA",DIR("A")="RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL2",192,0)
 Q
"RTN","RCDPEWL2",193,0)
 ;
"RTN","RCDPEWL2",194,0)
NOWAY ; Msg for unidentified bill
"RTN","RCDPEWL2",195,0)
 N DIR,X,Y
"RTN","RCDPEWL2",196,0)
 S DIR(0)="EA",DIR("A",1)="THIS BILL IS NOT IDENTIFIED IN YOUR A/R",DIR("A")="THIS FUNCTION IS NOT AVAILABLE ... RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL2",197,0)
 Q
"RTN","RCDPEWL2",198,0)
 ;
"RTN","RCDPEWL2",199,0)
NOWAY1 ; Msg for ERA level Adjustment 
"RTN","RCDPEWL2",200,0)
 N DIR,X,Y
"RTN","RCDPEWL2",201,0)
 S DIR(0)="EA",DIR("A",1)="THIS IS AN ERA LEVEL ADJUSTMENT - NO DATA EXISTS FOR IT IN YOUR AR",DIR("A")="PRESS ENTER TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL2",202,0)
 Q
"RTN","RCDPEWL2",203,0)
 ;
"RTN","RCDPEWL2",204,0)
SET1(RCIBY,RCDA,RCDA1,RC3444,RCREF) ; Set up variables for receipt/ERA
"RTN","RCDPEWL2",205,0)
 S RCDA1=+RCIBY("IBEOB"),RCDA=+$P(RCIBY("IBEOB"),U,2),RC3444=+$P(RCIBY("IBEOB"),U,3),RCREF=+$P(RCIBY("IBEOB"),U,4)
"RTN","RCDPEWL2",206,0)
 Q
"RTN","RCDPEWL2",207,0)
 ;
"RTN","RCDPEWL2",208,0)
CHKFILE ; If the user leaves the split line screen without filing - double check
"RTN","RCDPEWL2",209,0)
 ; that they didn't want to file it.
"RTN","RCDPEWL2",210,0)
 N DIR,X,Y
"RTN","RCDPEWL2",211,0)
 D FULL^VALM1 W !!
"RTN","RCDPEWL2",212,0)
 I $G(^TMP("RCDPE_EOB_SPLIT_OK",$J)),$O(RCSPLIT(0)) D
"RTN","RCDPEWL2",213,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A",1)="YOU HAVE NOT FILED THESE CHANGES",DIR("A")="DO YOU WANT TO FILE THEM BEFORE YOU EXIT?: " D ^DIR K DIR
"RTN","RCDPEWL2",214,0)
 . I Y=1 D FILESP^RCDPEWL4
"RTN","RCDPEWL2",215,0)
 K ^TMP($J,"RCDPE_SPLIT_FILE")
"RTN","RCDPEWL2",216,0)
 Q
"RTN","RCDPEWL2",217,0)
 ;
"RTN","RCDPEWL2",218,0)
EDITSP ; Action that edits the split lines
"RTN","RCDPEWL2",219,0)
 ; RCLINE,RCSCR must already exist
"RTN","RCDPEWL2",220,0)
 N DA,RCEDIT,RCDONE,RCDEF,RCSAVE,RCSAVE1
"RTN","RCDPEWL2",221,0)
 D FULL^VALM1
"RTN","RCDPEWL2",222,0)
 ;
"RTN","RCDPEWL2",223,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G EDITQ
"RTN","RCDPEWL2",224,0)
 ;
"RTN","RCDPEWL2",225,0)
 D SEL(.RCEDIT)
"RTN","RCDPEWL2",226,0)
 G:'RCEDIT EDITQ
"RTN","RCDPEWL2",227,0)
 S RCDONE=0
"RTN","RCDPEWL2",228,0)
 M RCSAVE=RCSPLIT,RCSAVE1=RCDIR S RCDEF=$G(RCSPLIT(RCEDIT)),RCSPLIT=RCEDIT
"RTN","RCDPEWL2",229,0)
 D EDIT^RCDPEWL3(RCSCR,RCLINE,.RCDIR,.RCSPLIT,RCDEF,.RCDONE)
"RTN","RCDPEWL2",230,0)
 I '$D(RCSPLIT(RCSAVE)) K RCSPLIT M RCSPLIT=RCSAVE K RCDIR M RCDIR=RCSAVE1
"RTN","RCDPEWL2",231,0)
 D INIT^RCDPEWL3
"RTN","RCDPEWL2",232,0)
EDITQ S VALMBCK="R"
"RTN","RCDPEWL2",233,0)
 Q
"RTN","RCDPEWL2",234,0)
 ;
"RTN","RCDPEWL2",235,0)
PREOB ; Print/View EOB detail
"RTN","RCDPEWL2",236,0)
 N RCDA,RCDAZ,Z,Z0
"RTN","RCDPEWL2",237,0)
 D FULL^VALM1
"RTN","RCDPEWL2",238,0)
 D SEL^RCDPEWL(.RCDA)
"RTN","RCDPEWL2",239,0)
 S RCDA=+$O(RCDA(0)),RCDA=$G(RCDA(RCDA))
"RTN","RCDPEWL2",240,0)
 I RCDA="" G PREOBQ
"RTN","RCDPEWL2",241,0)
 S RCDA=$P($G(^RCY(344.49,RCSCR,1,+RCDA,0)),U,9)
"RTN","RCDPEWL2",242,0)
 F RCDAZ=1:1:$L(RCDA,",") S RCDAZ(RCDAZ)=$P(RCDA,",",RCDAZ)
"RTN","RCDPEWL2",243,0)
 S Z=0 F  S Z=$O(RCDAZ(Z)) Q:'Z  D
"RTN","RCDPEWL2",244,0)
 . ;
"RTN","RCDPEWL2",245,0)
 . S Z0=RCDAZ(Z)
"RTN","RCDPEWL2",246,0)
 . I $E(Z0,1,3)="ADJ" D  Q
"RTN","RCDPEWL2",247,0)
 .. I $G(^RCY(344.4,RCSCR,2,+$P(Z0,"ADJ",2),0))'="" S RCDAZ(Z)="ADJ^"_+$P(Z0,"ADJ",2)
"RTN","RCDPEWL2",248,0)
 . ;
"RTN","RCDPEWL2",249,0)
 . S Z0=$G(^RCY(344.4,RCSCR,1,+Z0,0))
"RTN","RCDPEWL2",250,0)
 . S RCDAZ(Z)=+Z0_U_$S($P(Z0,U,2):$P(Z0,U,2),1:-1) Q
"RTN","RCDPEWL2",251,0)
 ;
"RTN","RCDPEWL2",252,0)
 D VP(RCSCR,.RCDAZ)
"RTN","RCDPEWL2",253,0)
 ;
"RTN","RCDPEWL2",254,0)
PREOBQ S VALMBCK="R"
"RTN","RCDPEWL2",255,0)
 Q
"RTN","RCDPEWL2",256,0)
 ;
"RTN","RCDPEWL2",257,0)
RESEARCH ; Invoke the research menu
"RTN","RCDPEWL2",258,0)
 ;
"RTN","RCDPEWL2",259,0)
 K ^TMP($J,"RC_VALMBG")
"RTN","RCDPEWL2",260,0)
 S ^TMP($J,"RC_VALMBG")=$G(VALMBG)
"RTN","RCDPEWL2",261,0)
 D FULL^VALM1
"RTN","RCDPEWL2",262,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G RQ
"RTN","RCDPEWL2",263,0)
 ;
"RTN","RCDPEWL2",264,0)
 D EN^VALM("RCDPE EOB RESEARCH")
"RTN","RCDPEWL2",265,0)
 ;
"RTN","RCDPEWL2",266,0)
RQ K ^TMP($J,"RC_VALMBG")
"RTN","RCDPEWL2",267,0)
 Q
"RTN","RCDPEWL2",268,0)
 ;
"RTN","RCDPEWL2",269,0)
SEL(RCEDIT) ;
"RTN","RCDPEWL2",270,0)
 N VALMY
"RTN","RCDPEWL2",271,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","RCDPEWL2",272,0)
 S RCEDIT=+$O(VALMY(0))
"RTN","RCDPEWL2",273,0)
 Q
"RTN","RCDPEWL2",274,0)
 ;
"RTN","RCDPEWL2",275,0)
EXIT ; Exits back to ERA menu actions from research
"RTN","RCDPEWL2",276,0)
 S VALMBCK="Q"
"RTN","RCDPEWL2",277,0)
 Q
"RTN","RCDPEWL2",278,0)
 ;
"RTN","RCDPEWL2",279,0)
WL(RCRCPT) ; Entrypoint to the ERA Worklist from Receipt Processing
"RTN","RCDPEWL2",280,0)
 ;RCRCPT = ien of entry in file 344
"RTN","RCDPEWL2",281,0)
 N DIR,X,Y,Z
"RTN","RCDPEWL2",282,0)
 D FULL^VALM1
"RTN","RCDPEWL2",283,0)
 S Z=+$O(^RCY(344.4,"AREC",RCRCPT,0))
"RTN","RCDPEWL2",284,0)
 I 'Z D  G WLQ
"RTN","RCDPEWL2",285,0)
 . S DIR("A")="THIS RECEIPT IS NOT ASSOCIATED WITH AN ERA RECORD - PRESS RETURN TO CONTINUE ",DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEWL2",286,0)
 ;
"RTN","RCDPEWL2",287,0)
 I '$D(^RCY(344.49,Z,0)) D  G WLQ
"RTN","RCDPEWL2",288,0)
 . S DIR("A")="NO ERA WORKLIST EXISTS FOR THIS ERA - PRESS RETURN TO CONTINUE ",DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEWL2",289,0)
 ;
"RTN","RCDPEWL2",290,0)
 D DISP^RCDPEWL(Z,2)
"RTN","RCDPEWL2",291,0)
 ;
"RTN","RCDPEWL2",292,0)
WLQ S VALMBCK="R"
"RTN","RCDPEWL2",293,0)
 Q
"RTN","RCDPEWL2",294,0)
 ;
"RTN","RCDPEWL2",295,0)
NOTAV ; Display not available msg
"RTN","RCDPEWL2",296,0)
 N DIR,X,Y
"RTN","RCDPEWL2",297,0)
 ;
"RTN","RCDPEWL2",298,0)
 S DIR(0)="EA",DIR("A")="THIS ACTION NOT CURRENTLY AVAILABLE - PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL2",299,0)
 S VALMBCK="R"
"RTN","RCDPEWL2",300,0)
 Q
"RTN","RCDPEWL2",301,0)
 ;
"RTN","RCDPEWL3")
0^105^B80108655
"RTN","RCDPEWL3",1,0)
RCDPEWL3 ;ALB/TMK - ELECTRONIC EOB WORKLIST ACTIONS ;24-FEB-03
"RTN","RCDPEWL3",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEWL3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEWL3",4,0)
 Q
"RTN","RCDPEWL3",5,0)
 ;
"RTN","RCDPEWL3",6,0)
SPLIT(RCSCR,RCL) ; Perform line splits
"RTN","RCDPEWL3",7,0)
 N Z,Z0,DIR,X,Y,RCL1,DA,DR,DIE,DIC,RCDONE,RCDIR,RCSPLIT,RCTOT,RCOK,RCLINE
"RTN","RCDPEWL3",8,0)
 ;
"RTN","RCDPEWL3",9,0)
 D CLEAR^VALM1
"RTN","RCDPEWL3",10,0)
 S ^TMP($J,"RCDPE_SPLIT")=""
"RTN","RCDPEWL3",11,0)
 S RCLINE=$G(^TMP("RCDPE-EOB_WLDX",$J,RCL)),RCL1=$G(^TMP("RCDPE-EOB_WLDX",$J,RCL\1))
"RTN","RCDPEWL3",12,0)
 ;
"RTN","RCDPEWL3",13,0)
 S Z=+$O(^TMP("RCDPE-EOB_WLDX",$J,RCL)),Z0=+$G(^TMP("RCDPE-EOB_WLDX",$J,Z)) S:'Z0 Z0=999
"RTN","RCDPEWL3",14,0)
 W !
"RTN","RCDPEWL3",15,0)
 F Z=+RCLINE:1:Z0 Q:'$D(^TMP("RCDPE-EOB_WL",$J,Z,0))!(Z'<Z0)  W !,^TMP("RCDPE-EOB_WL",$J,Z,0)
"RTN","RCDPEWL3",16,0)
 ;
"RTN","RCDPEWL3",17,0)
 I $E($P(RCL1,U,2),1,3)["ADJ" D  G SPLITQ
"RTN","RCDPEWL3",18,0)
 . W !,"THIS IS AN ERA-LEVEL ADJUSTMENT - ONLY THE ADJUSTMENT COMMENT CAN BE EDITED"
"RTN","RCDPEWL3",19,0)
 . S DIR(0)="A" D ^DIR K DIR
"RTN","RCDPEWL3",20,0)
 . S DA(2)=RCSCR,DA(1)=+$P(RCLINE,U,2),DA=+$P($P(RCL1,U,2),"ADJ",2)
"RTN","RCDPEWL3",21,0)
 . Q:'DA
"RTN","RCDPEWL3",22,0)
 . D EDITCOM(.DA)
"RTN","RCDPEWL3",23,0)
 ;
"RTN","RCDPEWL3",24,0)
 S RCDONE=0,RCDIR(1)=$P($G(^RCY(344.49,RCSCR,1,+$P(RCLINE,U,2),0)),U,2),RCDIR(2)=$P($G(^RCY(344.49,RCSCR,1,+$P(RCLINE,U,2),0)),U,5),RCDIR(3)=$P($G(^RCY(344.49,RCSCR,1,+$P(RCLINE,U,2),0)),U,8),RCDIR(6)=+$P(RCLINE,U,2)
"RTN","RCDPEWL3",25,0)
 S RCDIR=RCDIR(1)_U_RCDIR(2)_U_RCDIR(3)
"RTN","RCDPEWL3",26,0)
 ;
"RTN","RCDPEWL3",27,0)
 S RCSPLIT=0
"RTN","RCDPEWL3",28,0)
 I $P(RCDIR,U,3) W !!,"NOTE: THIS LINE HAS AN ADJUSTMENT RECORD ASSOCIATED WITH IT",!
"RTN","RCDPEWL3",29,0)
 F  D  Q:RCDONE
"RTN","RCDPEWL3",30,0)
 . S RCSPLIT=RCSPLIT+1
"RTN","RCDPEWL3",31,0)
 . D EDIT(RCSCR,RCLINE,.RCDIR,.RCSPLIT,"",.RCDONE)
"RTN","RCDPEWL3",32,0)
 . I '$D(RCSPLIT(RCSPLIT)) S RCSPLIT=RCSPLIT-1
"RTN","RCDPEWL3",33,0)
 ;
"RTN","RCDPEWL3",34,0)
 G:'$O(RCSPLIT(0)) SPLITQ
"RTN","RCDPEWL3",35,0)
 N VALMCNT,VALMBG
"RTN","RCDPEWL3",36,0)
 S VALMCNT=0,VALMBG=1
"RTN","RCDPEWL3",37,0)
 S ^TMP($J,"RCDPE_SPLIT_FILE")=1
"RTN","RCDPEWL3",38,0)
 D EN^VALM("RCDPE EOB WORKLIST SPLIT")
"RTN","RCDPEWL3",39,0)
 ;
"RTN","RCDPEWL3",40,0)
SPLITQ Q
"RTN","RCDPEWL3",41,0)
 ;
"RTN","RCDPEWL3",42,0)
TOT(N,RCSPLIT,RCLINE) ; CALCULATE TOTAL OF PAY (N=2) or ADJ (N=3)
"RTN","RCDPEWL3",43,0)
 ; RCSPLIT = the array (passed by ref) where the amounts are stored
"RTN","RCDPEWL3",44,0)
 ; RCLINE = if editing, this is the line # NOT to add in when
"RTN","RCDPEWL3",45,0)
 ;          determining previous amounts entered
"RTN","RCDPEWL3",46,0)
 N Z,Z0
"RTN","RCDPEWL3",47,0)
 S (Z,Z0)=0
"RTN","RCDPEWL3",48,0)
 F  S Z=$O(RCSPLIT(Z)) Q:'Z  I $S('$G(RCLINE):1,1:RCLINE'=Z) S Z0=Z0+$P(RCSPLIT(Z),U,N)
"RTN","RCDPEWL3",49,0)
 Q $J(Z0,"",2)
"RTN","RCDPEWL3",50,0)
 ;
"RTN","RCDPEWL3",51,0)
UPD(Q,Q1) ;
"RTN","RCDPEWL3",52,0)
 N DA,DIE,DR,X,Y
"RTN","RCDPEWL3",53,0)
 S DA(1)=Q,DA=Q1
"RTN","RCDPEWL3",54,0)
 S DIE="^RCY(344.49,"_DA(1)_",1,",DR="2.03////"_DUZ_";2.04////"_$$NOW^XLFDT() D ^DIE
"RTN","RCDPEWL3",55,0)
 S ^TMP("RCDPE_SPLIT_REBLD",$J)=1
"RTN","RCDPEWL3",56,0)
 Q
"RTN","RCDPEWL3",57,0)
 ;
"RTN","RCDPEWL3",58,0)
HDR ;
"RTN","RCDPEWL3",59,0)
 N Z,Z0,ZCT
"RTN","RCDPEWL3",60,0)
 S ZCT=0
"RTN","RCDPEWL3",61,0)
 S Z=+$O(^TMP("RCDPE-EOB_WLDX",$J,RCL)),Z0=+$G(^TMP("RCDPE-EOB_WLDX",$J,Z)) S:'Z0 Z0=999
"RTN","RCDPEWL3",62,0)
 F Z=+RCLINE:1:Z0 Q:'$D(^TMP("RCDPE-EOB_WL",$J,Z,0))!(Z'<Z0)!(ZCT'<6)  S ZCT=ZCT+1,VALMHDR(ZCT)=^TMP("RCDPE-EOB_WL",$J,Z,0)
"RTN","RCDPEWL3",63,0)
 S ZCT=ZCT+1,VALMHDR(ZCT)=" "
"RTN","RCDPEWL3",64,0)
 Q
"RTN","RCDPEWL3",65,0)
 ;
"RTN","RCDPEWL3",66,0)
FNL ;
"RTN","RCDPEWL3",67,0)
 K ^TMP("RCDPE_EOB_SPLIT",$J),^TMP("RCDPE_EOB_SPLIT_OK",$J),^TMP("RCDPE_EOB_SPLITDX",$J)
"RTN","RCDPEWL3",68,0)
 Q
"RTN","RCDPEWL3",69,0)
 ;
"RTN","RCDPEWL3",70,0)
INIT ; Build screen for display
"RTN","RCDPEWL3",71,0)
 ; RCSCR, RCDIR, RCSPLIT must already exist
"RTN","RCDPEWL3",72,0)
 N Z,RCTOT,DIR,X,Y,RCNT,RCCT,Q,RCT
"RTN","RCDPEWL3",73,0)
 K ^TMP("RCDPE_EOB_SPLIT",$J)
"RTN","RCDPEWL3",74,0)
 S (VALMCNT,RCNT)=0
"RTN","RCDPEWL3",75,0)
 S ^TMP("RCDPE_EOB_SPLIT_OK",$J)=1
"RTN","RCDPEWL3",76,0)
 F Z=2,3 S RCTOT(Z)=$$TOT(Z,.RCSPLIT)
"RTN","RCDPEWL3",77,0)
 I +RCTOT(2)'=+$P(RCDIR,U,2)!(+RCTOT(3)'=+$P(RCDIR,U,3)) D
"RTN","RCDPEWL3",78,0)
 . D SET("**** TOTAL AMOUNTS ENTERED DO NOT MATCH THE ORIGINAL AMOUNTS ****",1),SET(" ",1)
"RTN","RCDPEWL3",79,0)
 . S ^TMP("RCDPE_EOB_SPLIT_OK",$J)=0
"RTN","RCDPEWL3",80,0)
 ;
"RTN","RCDPEWL3",81,0)
 S (RCCT,Z,RCT(1),RCT(2),RCT(3))=0
"RTN","RCDPEWL3",82,0)
 F  S Z=$O(RCSPLIT(Z)) Q:'Z  D
"RTN","RCDPEWL3",83,0)
 . S X="",RCCT=RCCT+1
"RTN","RCDPEWL3",84,0)
 . S X=$$SETFLD^VALM1(RCCT,X,"NUM")
"RTN","RCDPEWL3",85,0)
 . S X=$$SETFLD^VALM1($P(RCSPLIT(Z),U)_$S('$P(RCSPLIT(Z),U,5):" (NOT IN A/R)",1:""),X,"CLAIM")
"RTN","RCDPEWL3",86,0)
 . S X=$$SETFLD^VALM1($J(+$P(RCSPLIT(Z),U,2),15,2),X,"PAYMENT"),RCT(1)=RCT(1)+$P(RCSPLIT(Z),U,2)
"RTN","RCDPEWL3",87,0)
 . S X=$$SETFLD^VALM1($J(+$P(RCSPLIT(Z),U,3),15,2),X,"ADJUSTMENT"),RCT(2)=RCT(2)+$P(RCSPLIT(Z),U,3)
"RTN","RCDPEWL3",88,0)
 . S X=$$SETFLD^VALM1($J($P(RCSPLIT(Z),U,2)+$P(RCSPLIT(Z),U,3),15,2),X,"NET"),RCT(3)=RCT(3)+$P(RCSPLIT(Z),U,2)+$P(RCSPLIT(Z),U,3)
"RTN","RCDPEWL3",89,0)
 . D SET(X,RCCT)
"RTN","RCDPEWL3",90,0)
 . I $P(RCSPLIT(Z),U,6)'="",$P(RCSPLIT(Z),U,6)'="@" S X=$$SETSTR^VALM1($J("",10)_$P(RCSPLIT(Z),U,6),"",1,70) D SET(X,RCCT)
"RTN","RCDPEWL3",91,0)
 S Q="",$P(Q,"=",15)=""
"RTN","RCDPEWL3",92,0)
 D SET($J("",32)_Q_"   "_Q_"   "_Q,RCCT),SET($E("    TOTALS: "_$J("",31),1,31)_$E($J(+RCT(1),15,2)_$J("",17),1,17)_$E($J(+RCT(2),15,2)_$J("",17),1,17)_$E($J(+RCT(3),15,2)_$J("",17),1,17),RCCT)
"RTN","RCDPEWL3",93,0)
 ;
"RTN","RCDPEWL3",94,0)
 Q
"RTN","RCDPEWL3",95,0)
 ;
"RTN","RCDPEWL3",96,0)
SET(X,RCSEQ) ;
"RTN","RCDPEWL3",97,0)
 S VALMCNT=VALMCNT+1
"RTN","RCDPEWL3",98,0)
 S ^TMP("RCDPE_EOB_SPLIT",$J,VALMCNT,0)=X
"RTN","RCDPEWL3",99,0)
 S ^TMP("RCDPE_EOB_SPLIT",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEWL3",100,0)
 S ^TMP("RCDPE_EOB_SPLITDX",$J,RCSEQ)=VALMCNT
"RTN","RCDPEWL3",101,0)
 Q
"RTN","RCDPEWL3",102,0)
 ;
"RTN","RCDPEWL3",103,0)
EDITCOM(DA) ; Edit the comment for an adjustment entry
"RTN","RCDPEWL3",104,0)
 N RCX,DIE,X,Y,DR
"RTN","RCDPEWL3",105,0)
 S RCX=$P($G(^RCY(344.49,DA(2),1,DA(1),1,DA,0)),U,9)
"RTN","RCDPEWL3",106,0)
 S DIE="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,",DR=".09"
"RTN","RCDPEWL3",107,0)
 D ^DIE
"RTN","RCDPEWL3",108,0)
 Q:$P($G(^RCY(344.49,DA(2),1,DA(1),1,DA,0)),U,9)=RCX
"RTN","RCDPEWL3",109,0)
 D UPD(DA(2),DA(1))
"RTN","RCDPEWL3",110,0)
 Q
"RTN","RCDPEWL3",111,0)
 ;
"RTN","RCDPEWL3",112,0)
EDIT(RCSCR,RCLINE,RCDIR,RCSPLIT,RCDEF,RCDONE) ; Edit a split line
"RTN","RCDPEWL3",113,0)
 ;
"RTN","RCDPEWL3",114,0)
 N CT,DIR,DIC,X,Y,RCOK,RCL,Z,DUOUT,DTOUT
"RTN","RCDPEWL3",115,0)
 ; Enter claim #
"RTN","RCDPEWL3",116,0)
 S RCL=$G(RCDIR(6))
"RTN","RCDPEWL3",117,0)
EDCL S DIR("?",1)="ENTER THE CLAIM # TO WHICH THE PAYMENT OR ADJUSTMENT WILL BE APPLIED.",DIR("?",2)="THE CLAIM # DOES NOT HAVE TO EXIST IN YOUR AR IF THE PAYMENT/ADJUSTMENT",DIR("?")="BELONGS TO ANOTHER SITE."
"RTN","RCDPEWL3",118,0)
 S DIR(0)="FAO^1:15",DIR("A")="CLAIM #: " S:$P($G(RCDEF),U)'="" DIR("B")=$P(RCDEF,U) S:$G(RCDIR(1))'=""&($G(DIR("B"))="") DIR("B")=RCDIR(1) W ! D ^DIR K DIR
"RTN","RCDPEWL3",119,0)
 I $D(DTOUT)!$D(DUOUT) D ABORT Q
"RTN","RCDPEWL3",120,0)
 I Y="" D  G:'RCDONE EDCL Q
"RTN","RCDPEWL3",121,0)
 . S DIR(0)="YA",DIR("A",1)="YOU MUST SPLIT THE ENTIRE AMOUNT OF THE LINE.",DIR("A",2)=" $"_$J(+RCDIR(2),"",2)_" PAYMENT IS LEFT"_$S($P(RCDIR,U,3)&$G(RCDIR(3)):" AND $"_$J(+RCDIR(3),"",2)_" ADJ IS LEFT",1:"")
"RTN","RCDPEWL3",122,0)
 . S DIR("A")="DO YOU WANT TO ABORT THIS SPLIT NOW?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEWL3",123,0)
 . I Y'=0 D ABORT Q
"RTN","RCDPEWL3",124,0)
 S $P(RCSPLIT(RCSPLIT),U)=Y
"RTN","RCDPEWL3",125,0)
 ;
"RTN","RCDPEWL3",126,0)
 I $E(Y,1,3)?3N,$L(Y)>7,Y'["-" S Y=$E(Y,1,3)_"-"_$E(Y,4,$L(Y))
"RTN","RCDPEWL3",127,0)
 I $TR(Y," ")="" S Y=-1
"RTN","RCDPEWL3",128,0)
 I Y'=-1 S DIC(0)="M",DIC="^PRCA(430,",X=Y D ^DIC
"RTN","RCDPEWL3",129,0)
 I Y<0 D  G:'RCOK EDCL
"RTN","RCDPEWL3",130,0)
 . S RCOK=1
"RTN","RCDPEWL3",131,0)
 . S DIR("A")="   THIS CLAIM WAS NOT FOUND IN YOUR AR.  DO YOU WANT TO CONTINUE?: ",DIR("B")="NO",DIR(0)="YA" D ^DIR K DIR W ! I Y'=1 K RCSPLIT(RCSPLIT) S RCOK=0
"RTN","RCDPEWL3",132,0)
 E  D
"RTN","RCDPEWL3",133,0)
 . S $P(RCSPLIT(RCSPLIT),U,5)=+Y
"RTN","RCDPEWL3",134,0)
 . W "  >>Current claim balance is: ",$J(+$P($$BILL^RCJIBFN2(+Y),U,3),"",2)
"RTN","RCDPEWL3",135,0)
 ; Enter payment
"RTN","RCDPEWL3",136,0)
 S RCDIR(1)=""
"RTN","RCDPEWL3",137,0)
 S DIR("?",1)="**************"
"RTN","RCDPEWL3",138,0)
 S CT=1
"RTN","RCDPEWL3",139,0)
 I $P(RCDIR,U,3) D
"RTN","RCDPEWL3",140,0)
 . S DIR("?",CT+1)="SINCE THIS LINE HAS AN ADJUSTMENT, THE AMOUNT ENTERED HERE SHOULD BE THE",DIR("?",CT+2)="CORRECTED AMOUNT THE PAYER INDICATED THEY SHOULD HAVE PAID FOR THE CLAIM",DIR("?",CT+3)=" ",CT=CT+3
"RTN","RCDPEWL3",141,0)
 S CT=CT+1,DIR("?",CT)="ENTER THE AMT FROM THE PAYMENT TOTAL FOR THIS LINE ("_$J(+$P(RCDIR,U,2),"",2)_")"
"RTN","RCDPEWL3",142,0)
 I $G(RCDEF)="" D
"RTN","RCDPEWL3",143,0)
 . S CT=CT+1,DIR("?",CT)=" THAT APPLIES TO THIS CLAIM.  THE PAYMENT AMOUNT ALREADY USED FOR THIS"
"RTN","RCDPEWL3",144,0)
 . S CT=CT+1,DIR("?",CT)=" LINE SPLIT IS: "_$J(+$$TOT(2,.RCSPLIT,$S(RCDEF="":"",1:RCSPLIT)),"",2)_" LEAVING A BALANCE TO DISTRIBUTE OF: "_$J($P(RCDIR,U,2)-$$TOT(2,.RCSPLIT,$S(RCDEF="":"",1:RCSPLIT)),"",2)
"RTN","RCDPEWL3",145,0)
 S CT=CT+1,DIR("?",CT)="THE TOTAL PAYMENTS ENTERED DURING THIS SPLIT MUST EQUAL THE ORIGINAL LINE",DIR("?")=" PAYMENT AMOUNT OF $"_$J(+$P(RCDIR,U,2),"",2)
"RTN","RCDPEWL3",146,0)
 S DIR(0)="NAO^0:"_$S(RCDEF="":$P(RCDIR,U,2)-$$TOT(2,.RCSPLIT,RCSPLIT),1:$P(RCDIR,U,2))_":2"
"RTN","RCDPEWL3",147,0)
 S DIR("A")="PAYMENT AMOUNT TO APPLY TO THIS CLAIM: " S:$P($G(RCDEF),U,2)'="" DIR("B")=$J(+$P(RCDEF,U,2),"",2) S:$G(RCDIR(2))'=""&($G(DIR("B"))="") DIR("B")=RCDIR(2) D ^DIR K DIR
"RTN","RCDPEWL3",148,0)
 I $D(DTOUT)!$D(DUOUT) K RCSPLIT(RCSPLIT) G EDCL
"RTN","RCDPEWL3",149,0)
 S $P(RCSPLIT(RCSPLIT),U,2)=Y,RCDIR(2)=$J($P(RCDIR,U,2)-$$TOT(2,.RCSPLIT),"",2)
"RTN","RCDPEWL3",150,0)
 ; Enter adj
"RTN","RCDPEWL3",151,0)
 I $O(^RCY(344.49,RCSCR,1,+$P(RCLINE,U,2),1,0)) D  G:'RCOK EDCL
"RTN","RCDPEWL3",152,0)
 . S RCOK=1
"RTN","RCDPEWL3",153,0)
 . W !!,$J("",5)_"THIS LINE CONTAINS AN ADJUSTMENT AMOUNT OF $"_$J(+$P(RCDIR,U,3),"",2),!,$J("",5)_"THIS AMT IS USUALLY THE AMT THE PAYER PREVIOUSLY PAID",!,$J("",5),"ON A CLAIM WHICH THEY HAVE NOW AMENDED.  IF THERE WAS"
"RTN","RCDPEWL3",154,0)
 . W !,$J("",5)_"AN AMT PREVIOUSLY PAID FOR THIS CLAIM, ENTER THAT AMOUNT",!,$J("",5),"AS A NEGATIVE AMOUNT HERE.",!
"RTN","RCDPEWL3",155,0)
 . S DIR("?",1)="**************"
"RTN","RCDPEWL3",156,0)
 . S DIR("?",2)="ENTER THE AMT FROM THE ADJUSTMENT TOTAL FOR THIS LINE ("_$J(+$P(RCDIR,U,3),"",2)_")",DIR("?",3)=" THAT APPLIES TO THIS CLAIM.  THE ADJUSTMENT AMOUNT ALREADY USED FOR THIS"
"RTN","RCDPEWL3",157,0)
 . S DIR("?",4)=" LINE SPLIT IS "_$J(+$$TOT(3,.RCSPLIT,$S(RCDEF="":"",1:RCSPLIT)),"",2)_" LEAVING A BALANCE OF "_$J($P(RCDIR,U,3)-$$TOT(3,.RCSPLIT,$S(RCDEF="":"",1:RCSPLIT)),"",2)_" TO DISTRIBUTE"
"RTN","RCDPEWL3",158,0)
 . S DIR("?",5)=" ENTER IT AS THE NEGATIVE OF THE AMT THE PAYER PREVIOUSLY PAID ON THIS CLAIM"
"RTN","RCDPEWL3",159,0)
 . S DIR("?",6)="THE TOTAL ADJUSTMENTS ENTERED DURING THIS SPLIT MUST EQUAL THE ORIGINAL LINE",DIR("?")=" ADJUSTMENT AMOUNT OF $"_$J(+$P(RCDIR,U,3),"",2)
"RTN","RCDPEWL3",160,0)
 . S DIR(0)="NAO^"_$J($P(RCDIR,U,3)-$$TOT(3,.RCSPLIT,$S(RCDEF="":"",1:RCSPLIT)),"",2)_":0:2",DIR("A")="ADJUSTMENT AMOUNT: " S:$P($G(RCDEF),U,3)'="" DIR("B")=$J(+$P(RCDEF,U,3),"",2) S:$G(RCDIR(3))'=""&($G(DIR("B"))="") DIR("B")=RCDIR(3)
"RTN","RCDPEWL3",161,0)
 . D ^DIR K DIR
"RTN","RCDPEWL3",162,0)
 . I $D(DTOUT)!$D(DUOUT) S RCOK=0 K RCSPLIT(RCSPLIT) Q
"RTN","RCDPEWL3",163,0)
 . S $P(RCSPLIT(RCSPLIT),U,3)=Y,RCDIR(3)=$J($P(RCDIR,U,3)-$$TOT(3,.RCSPLIT),"",2)
"RTN","RCDPEWL3",164,0)
 I +RCDIR(2)=0,+RCDIR(3)=0 S RCDONE=1
"RTN","RCDPEWL3",165,0)
 S DIR(0)="344.491,.1AO",DIR("A")="RECEIPT LINE COMMENT: "
"RTN","RCDPEWL3",166,0)
 I $P($G(RCSPLIT(RCSPLIT)),U,6)'="" D
"RTN","RCDPEWL3",167,0)
 . I $P(RCSPLIT(RCSPLIT),U,6)'="@" S DIR("B")=$P(RCSPLIT(RCSPLIT),U,6)
"RTN","RCDPEWL3",168,0)
 E  D
"RTN","RCDPEWL3",169,0)
 . I $P($G(^RCY(344.49,RCSCR,1,+RCL,0)),U,10)'="" S DIR("B")=$P(^(0),U,10)
"RTN","RCDPEWL3",170,0)
 D ^DIR
"RTN","RCDPEWL3",171,0)
 I Y="",$G(DIR("B"))'="" W "   Comment will be deleted"
"RTN","RCDPEWL3",172,0)
 K DIR
"RTN","RCDPEWL3",173,0)
 I $D(DTOUT)!$D(DUOUT) K RCSPLIT(RCSPLIT) G EDCL
"RTN","RCDPEWL3",174,0)
 S $P(RCSPLIT(RCSPLIT),U,6)=$S(Y="":"@",1:Y)
"RTN","RCDPEWL3",175,0)
 Q
"RTN","RCDPEWL3",176,0)
 ;
"RTN","RCDPEWL3",177,0)
ABORT ; User aborted split - kill split array
"RTN","RCDPEWL3",178,0)
 N Z
"RTN","RCDPEWL3",179,0)
 S Z=RCSPLIT K RCSPLIT S RCSPLIT=Z,RCDONE=1
"RTN","RCDPEWL3",180,0)
 Q
"RTN","RCDPEWL3",181,0)
 ;
"RTN","RCDPEWL4")
0^106^B75478892
"RTN","RCDPEWL4",1,0)
RCDPEWL4 ;ALB/TMK - ELECTRONIC EOB WORKLIST ACTIONS ;24-FEB-03
"RTN","RCDPEWL4",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEWL4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEWL4",4,0)
 ; RCSCR variable must be defined for this routine
"RTN","RCDPEWL4",5,0)
 Q
"RTN","RCDPEWL4",6,0)
 ;
"RTN","RCDPEWL4",7,0)
FILESP ; Action that files the split lines
"RTN","RCDPEWL4",8,0)
 ; Assumes RCDIR,RCLINE,RCSCR,RCSPLIT array defined
"RTN","RCDPEWL4",9,0)
 N RCTOT,Z,RCZ0,RCZ1,DIR,X,Y,DIE,DA,DR,DIC,DD,DO,DLAYGO,RCZ,RCZZ,RCZT
"RTN","RCDPEWL4",10,0)
 D FULL^VALM1
"RTN","RCDPEWL4",11,0)
 I '$G(^TMP("RCDPE_EOB_SPLIT_OK",$J)) D  Q
"RTN","RCDPEWL4",12,0)
 . S VALMBCK="R"
"RTN","RCDPEWL4",13,0)
 . F Z=2,3 S RCTOT(Z)=$$TOT^RCDPEWL3(Z,.RCSPLIT)
"RTN","RCDPEWL4",14,0)
 . S DIR(0)="EA"
"RTN","RCDPEWL4",15,0)
 . S DIR("A",1)="TOTAL "_$S(+RCTOT(2)'=+$P(RCDIR,U,2):"PAYMENTS",1:"ADJUSTMENTS")_$S(+RCTOT(3)=+$P(RCDIR,U,3):"",+RCTOT(2)'=+$P(RCDIR,U,2):" AND ADJUSTMENTS",1:"")_" DO NOT MATCH THE ORIGINAL AMOUNT(s):"
"RTN","RCDPEWL4",16,0)
 . S DIR("A",2)=$E("  ORIG PAY AMT: "_$J(+$P(RCDIR,U,2),"",2)_$J("",35),1,35)_" ORIG ADJ AMT: "_$J(+$P(RCDIR,U,3),"",2)
"RTN","RCDPEWL4",17,0)
 . S DIR("A",3)=$E("   AMT ENTERED: "_$J(+RCTOT(2),"",2)_$J("",35),1,35)_"  AMT ENTERED: "_$J(+RCTOT(3),"",2)
"RTN","RCDPEWL4",18,0)
 . S DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL4",19,0)
 ;
"RTN","RCDPEWL4",20,0)
 S DA(1)=RCSCR
"RTN","RCDPEWL4",21,0)
 S RCZ0=+$P(RCLINE,U,2),RCZZ=+$G(^RCY(344.49,DA(1),1,RCZ0,0)),RCZZ(1)=""
"RTN","RCDPEWL4",22,0)
 S RCZ=+$O(RCSPLIT(0))
"RTN","RCDPEWL4",23,0)
 I RCZ D
"RTN","RCDPEWL4",24,0)
 . S DIE="^RCY(344.49,"_DA(1)_",1,",DA=RCZ0,RCZT=$P(RCSPLIT(RCZ),U,2)+$P(RCSPLIT(RCZ),U,3)
"RTN","RCDPEWL4",25,0)
 . S DR=".02////"_$P(RCSPLIT(RCZ),U)_";.05////"_$J(+$P(RCSPLIT(RCZ),U,2),"",2)_";.06////"_$J(+RCZT,"",2)_";.08////"_$J($P(RCSPLIT(RCZ),U,3),"",2)
"RTN","RCDPEWL4",26,0)
 . S DR=DR_";.07///"_$S($P(RCSPLIT(RCZ),U,5):"/"_$P(RCSPLIT(RCZ),U,5),1:"@")_";.03////"_$S(RCZT'<0:$J(+RCZT,"",2),1:"0.00")_$S($P(RCSPLIT(RCZ),U,6)'="":";.1///"_$S($P(RCSPLIT(RCZ),U,6)'="@":"/^S X=$P(RCSPLIT(RCZ),U,6)",1:"@"),1:"")
"RTN","RCDPEWL4",27,0)
 . D ^DIE,UPD^RCDPEWL3(DA(1),DA)
"RTN","RCDPEWL4",28,0)
 . I $P(RCDIR,U,3) D
"RTN","RCDPEWL4",29,0)
 .. N DA
"RTN","RCDPEWL4",30,0)
 .. S DA(2)=RCSCR,DA(1)=RCZ0,DA=1,DIE="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWL4",31,0)
 .. S RCZZ(1)=$G(^RCY(344.49,DA(2),1,DA(1),1,1,0))
"RTN","RCDPEWL4",32,0)
 .. S DR=".03////"_$J(+$P(RCSPLIT(RCZ),U,3),"",2)_$S($P(RCSPLIT(RCZ),U,4)'="":".09////"_$P(RCSPLIT(RCZ),U,4),1:"")
"RTN","RCDPEWL4",33,0)
 .. D ^DIE
"RTN","RCDPEWL4",34,0)
 F  S RCZ=$O(RCSPLIT(RCZ)) Q:'RCZ  D
"RTN","RCDPEWL4",35,0)
 . S DIC(0)="L",DLAYGO=344.491,DIC="^RCY(344.49,"_DA(1)_",1,",X=+$O(^RCY(344.49,RCSCR,1,"B",RCZZ\1+.999),-1)+.001
"RTN","RCDPEWL4",36,0)
 . S DIC("DR")=".02////"_$P(RCSPLIT(RCZ),U)_";.05////"_$J(+$P(RCSPLIT(RCZ),U,2),"",2)_";.08////"_$J(+$P(RCSPLIT(RCZ),U,3),"",2)_";.06////"_$J($P(RCSPLIT(RCZ),U,2)+$P(RCSPLIT(RCZ),U,3),"",2)
"RTN","RCDPEWL4",37,0)
 . I $P(RCSPLIT(RCZ),U,6)'="" S DIC("DR")=DIC("DR")_";.1///"_$S($P(RCSPLIT(RCZ),U,6)'="@":"/^S X=$P(RCSPLIT(RCZ),U,6)",1:"@")
"RTN","RCDPEWL4",38,0)
 . I $P(RCSPLIT(RCZ),U,5) S DIC("DR")=DIC("DR")_";.07////"_$P(RCSPLIT(RCZ),U,5)
"RTN","RCDPEWL4",39,0)
 . K DD,DO D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","RCDPEWL4",40,0)
 . S RCZ1=+Y
"RTN","RCDPEWL4",41,0)
 . I Y D UPD^RCDPEWL3(RCSCR,RCZ1)
"RTN","RCDPEWL4",42,0)
 . I Y,$P(RCDIR,U,3) D
"RTN","RCDPEWL4",43,0)
 .. N DA
"RTN","RCDPEWL4",44,0)
 .. S DA(2)=RCSCR,DA(1)=RCZ1,X=1,DIC(0)="L",DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWL4",45,0)
 .. S DIC("DR")=".02////"_$P(RCZZ(1),U,2)_";.03////"_$J(+$P(RCSPLIT(RCZ),U,3),"",2)_$S($P(RCSPLIT(RCZ),U,4)'="":";.09////"_$P(RCSPLIT(RCZ),U,4),$P(RCZZ(1),U,9)'="":";.09////"_$P(RCZZ(1),U,9),1:"")
"RTN","RCDPEWL4",46,0)
 .. F Z=4:1:8 I $P(RCZZ(1),U,Z)'="" S DIC("DR")=DIC("DR")_";"_(Z/100)_"////"_$P(RCZZ(1),U,Z)
"RTN","RCDPEWL4",47,0)
 .. D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","RCDPEWL4",48,0)
 K ^TMP($J,"RCDPE_SPLIT_FILE")
"RTN","RCDPEWL4",49,0)
 S VALMBCK="Q"
"RTN","RCDPEWL4",50,0)
 Q
"RTN","RCDPEWL4",51,0)
 ;
"RTN","RCDPEWL4",52,0)
DISTADJ(RCFR,RCTO,RCAMT,RCCOM) ; Action that distributes an adjustment amount
"RTN","RCDPEWL4",53,0)
 ; against another line item's payment
"RTN","RCDPEWL4",54,0)
 ; Assumes RCSCR = ien of the entry in file 344.49
"RTN","RCDPEWL4",55,0)
 ; RCFR = ien of entry in 344.491 that has a negative net
"RTN","RCDPEWL4",56,0)
 ; RCTO = ien of entry in 344.491 that will be decremented
"RTN","RCDPEWL4",57,0)
 ; RCAMT = the amount being adjusted (positive #)
"RTN","RCDPEWL4",58,0)
 ; RCCOM = the comment to place on the decrease adjustment
"RTN","RCDPEWL4",59,0)
 ;
"RTN","RCDPEWL4",60,0)
 N RCFRX,RCREF,RCFR0,RCFR1,RCFR10,RCTO0,RCTO1,RCTO10,RCY,DIK,DA,DR,DIC,X,Y,DLAYGO,DD,DO,DIE,DIR
"RTN","RCDPEWL4",61,0)
 S RCFR0=$G(^RCY(344.49,RCSCR,1,RCFR,0)),RCTO0=$G(^RCY(344.49,RCSCR,1,RCTO,0)),RCFRX=+$O(^RCY(344.49,RCSCR,1,"B",RCFR0\1,0)),RCFRX=$G(^RCY(344.49,RCSCR,1,RCFRX,0))
"RTN","RCDPEWL4",62,0)
 S RCREF=$P($P(RCFRX,U,2),"**ADJ",2),RCREF=$S(RCREF="":"",RCREF=0:$P(RCFRX,U,9),1:$P($G(^RCY(344.4,RCSCR,2,+RCREF,0)),U))
"RTN","RCDPEWL4",63,0)
 S RCFR1=+$O(^RCY(344.49,RCSCR,1,"B",RCFR0\1,0)),RCTO1=+$O(^RCY(344.49,RCSCR,1,"B",RCTO0\1,0))
"RTN","RCDPEWL4",64,0)
 S RCFR10=$G(^RCY(344.49,RCSCR,1,RCFR1,0)),RCTO10=$G(^RCY(344.49,RCSCR,1,RCTO1,0))
"RTN","RCDPEWL4",65,0)
 S RCFR0=$G(^RCY(344.49,RCSCR,1,RCFR,0)),RCTO0=$G(^RCY(344.49,RCSCR,1,RCTO,0))
"RTN","RCDPEWL4",66,0)
 S DA(2)=RCSCR,DA(1)=RCFR
"RTN","RCDPEWL4",67,0)
 S DIC("DR")=".02////1;.03////"_RCAMT_";.04////"_$S($P(RCTO0,U,2)'="":$P(RCTO0,U,2),RCREF'="":RCREF,1:"UNKNOWN")
"RTN","RCDPEWL4",68,0)
 S DIC("DR")=DIC("DR")_";.05////0;.06////0;.09////RETRACTED FUNDS DEDUCTED FROM OTHER PAYMENT ON THIS ERA",DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWL4",69,0)
 S DLAYGO=344.4911,DIC(0)="L",X=+$O(^RCY(344.49,RCSCR,1,RCFR,1,"B",""),-1)+1
"RTN","RCDPEWL4",70,0)
 D FILE^DICN K DIC,DD,DO,DLAYGO
"RTN","RCDPEWL4",71,0)
 S RCY=+Y
"RTN","RCDPEWL4",72,0)
 I RCY'>0 D  Q
"RTN","RCDPEWL4",73,0)
 . S DIR(0)="EA",DIR("A",1)="PROBLEM ADDING ADJUSTMENT - NO DISTRIBUTION PERFORMED",DIR("A")="PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEWL4",74,0)
 ;
"RTN","RCDPEWL4",75,0)
 S DA(2)=RCSCR,DA(1)=RCTO
"RTN","RCDPEWL4",76,0)
 S DIC("DR")=".02////0;.03////"_$J(-RCAMT,"",2)
"RTN","RCDPEWL4",77,0)
 S DIC("DR")=DIC("DR")_";.04////"_$S($P(RCFR0,U,2)'="":$P(RCFR0,U,2),RCREF'="":RCREF,1:"UNKNOWN")_";.05////"_$S($P($G(^RCY(344.49,RCSCR,1,RCTO1,0)),U,2)'["**ADJ":"1;.08////0",1:0)_";.06////0"_$S(RCCOM'="":";.09////"_RCCOM,1:"")
"RTN","RCDPEWL4",78,0)
 S DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWL4",79,0)
 S DLAYGO=344.4911,DIC(0)="L",X=+$O(^RCY(344.49,RCSCR,1,RCTO,1,"B",""),-1)+1
"RTN","RCDPEWL4",80,0)
 D FILE^DICN K DIC,DD,DO,DLAYGO
"RTN","RCDPEWL4",81,0)
 S RCY=+Y
"RTN","RCDPEWL4",82,0)
 ;
"RTN","RCDPEWL4",83,0)
 I RCY'>0 D  Q
"RTN","RCDPEWL4",84,0)
 . N DA
"RTN","RCDPEWL4",85,0)
 . S DA(2)=RCSCR,DA(1)=RCFR,DA=RCY,DIK="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1," D ^DIK
"RTN","RCDPEWL4",86,0)
 . S DIR(0)="EA",DIR("A",1)="PROBLEM ADDING ADJUSTMENT - NO DISTRIBUTION PERFORMED",DIR("A")="PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEWL4",87,0)
 ;
"RTN","RCDPEWL4",88,0)
 S DA(1)=RCSCR,DA=RCFR,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".06////"_$J($P(RCFR0,U,6)+RCAMT,"",2)_";.08////"_$J($P(RCFR0,U,8)+RCAMT,"",2) D ^DIE
"RTN","RCDPEWL4",89,0)
 S DA=RCFR1,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".06////"_$J($P(RCFR10,U,6)+RCAMT,"",2) D ^DIE
"RTN","RCDPEWL4",90,0)
 S DA(1)=RCSCR,DA=RCTO,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".06////"_$J($P(RCTO0,U,6)-RCAMT,"",2)_";.03////"_$J($P(RCTO0,U,3)-RCAMT,"",2)_";.08////"_$J($P(RCTO0,U,8)-RCAMT,"",2) D ^DIE
"RTN","RCDPEWL4",91,0)
 S DA(1)=RCSCR,DA=RCTO1,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".06////"_$J($P(RCTO10,U,6)-RCAMT,"",2)_";.03////"_$J($P(RCTO10,U,3)-RCAMT,"",2)_";.08////"_$J($P(RCTO10,U,8)-RCAMT,"",2) D ^DIE
"RTN","RCDPEWL4",92,0)
 D BLD^RCDPEWL1($G(^TMP($J,"RC_SORTPARM")))
"RTN","RCDPEWL4",93,0)
 Q
"RTN","RCDPEWL4",94,0)
 ;
"RTN","RCDPEWL4",95,0)
NEWREC ; Create a new receipt from scratch pad entry
"RTN","RCDPEWL4",96,0)
 N Z,Z0,RCOK,RCRECTDA,RCSTOP,DIR,X,Y,RECTDA,CT,DIE,DA,DR,RCER,RCPAYTY,RCHAC,RCDEP,DIC
"RTN","RCDPEWL4",97,0)
 D FULL^VALM1
"RTN","RCDPEWL4",98,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV^RCDPEWL2 G NEWRECQ
"RTN","RCDPEWL4",99,0)
 S (RCSTOP,RCOK)=0,VALMBCK="R"
"RTN","RCDPEWL4",100,0)
 S RECTDA=$P($G(^RCY(344.49,RCSCR,0)),U,2)
"RTN","RCDPEWL4",101,0)
 I 'RECTDA S RECTDA=$P($G(^RCY(344.4,RCSCR,0)),U,8)
"RTN","RCDPEWL4",102,0)
 I RECTDA D  G NEWRECQ
"RTN","RCDPEWL4",103,0)
 . S DIR(0)="EA",DIR("A",1)="THIS ERA ALREADY HAS A RECEIPT - "_$P($G(^RCY(344,+$P($G(^RCY(344.49,RCSCR,0)),U,2),0)),U)_" - NO RECEIPT CREATED",DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL4",104,0)
 S DIR("A",1)="THIS ACTION WILL CREATE THE RECEIPT FOR THIS ERA.  ONCE THE RECEIPT IS",DIR("A",2)=" CREATED HERE, NO MORE AUTOMATIC ADJUSTMENTS MAY BE MADE FOR THIS ERA.",DIR("A",3)=" "
"RTN","RCDPEWL4",105,0)
 S DIR("A")="ARE YOU SURE YOU ARE READY TO CREATE THIS RECEIPT?: ",DIR("B")="NO",DIR(0)="YA"
"RTN","RCDPEWL4",106,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEWL4",107,0)
 I Y'=1 S DIR(0)="EA",DIR("A")="NO RECEIPT CREATED - PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR G NEWRECQ
"RTN","RCDPEWL4",108,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,1,Z)) Q:'Z  S Z0=$G(^(Z,0)) D  G:RCSTOP NEWRECQ
"RTN","RCDPEWL4",109,0)
 . I $P(Z0,U,6)>0!$O(^RCY(344.49,RCSCR,1,Z,1,0)) S RCOK=1 Q
"RTN","RCDPEWL4",110,0)
 . I $P(Z0,U,6)<0 D  Q
"RTN","RCDPEWL4",111,0)
 .. S DIR(0)="EA",DIR("A",1)="AT LEAST ONE LINE ITEM WAS FOUND WITH A NEGATIVE PAYMENT AMOUNT",DIR("A")="NO RECEIPT CAN BE CREATED - PRESS RETURN TO CONTINUE " D ^DIR K DIR S RCSTOP=1
"RTN","RCDPEWL4",112,0)
 I 'RCOK S DIR(0)="EA",DIR("A")="NO RECEIPT CAN BE CREATED - NO POSTABLE LINE ITEMS WERE FOUND" W ! D ^DIR K DIR G NEWRECQ
"RTN","RCDPEWL4",113,0)
 ;
"RTN","RCDPEWL4",114,0)
 S RCHAC=$$HACERA^RCDPEU(RCSCR)
"RTN","RCDPEWL4",115,0)
 S RCPAYTY=$S(RCHAC:8,$P($G(^RCY(344.4,+RCSCR,0)),U,13)="":14,1:4)
"RTN","RCDPEWL4",116,0)
 S RCDEP=""
"RTN","RCDPEWL4",117,0)
 I RCPAYTY=4 D
"RTN","RCDPEWL4",118,0)
 . N RCOK1
"RTN","RCDPEWL4",119,0)
 . F  D  Q:RCOK1
"RTN","RCDPEWL4",120,0)
 .. S RCOK1=1
"RTN","RCDPEWL4",121,0)
 .. S DIC="^RCY(344.1,",DIC("S")="I $P(^(0),U,12)=1",DIC(0)="AEMQ" D ^DIC
"RTN","RCDPEWL4",122,0)
 .. Q:Y'>0
"RTN","RCDPEWL4",123,0)
 .. S RCDEP=+Y
"RTN","RCDPEWL4",124,0)
 .. I RCDEP,$$TOOOLD^RCDPEWLA(RCDEP) S RCOK1=0,RCDEP=""
"RTN","RCDPEWL4",125,0)
 S RECTDA=$$BLDRCPT^RCDPUREC(DT,+RCDEP_$S(RCPAYTY=4:"ERACHK",1:""),+$O(^RC(341.1,"AC",+RCPAYTY,0))) ; Note:ERA with paper check is type 4, but receipt needs to start with an 'E'
"RTN","RCDPEWL4",126,0)
 I 'RECTDA W ! S DIR(0)="EA",DIR("A",1)="A PROBLEM WAS ENCOUNTERED ADDING THE RECEIPT - NO RECEIPT ADDED",DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR G NEWRECQ
"RTN","RCDPEWL4",127,0)
 ;
"RTN","RCDPEWL4",128,0)
 D RCPTDET^RCDPEM(RCSCR,RECTDA,.RCER)
"RTN","RCDPEWL4",129,0)
 ;
"RTN","RCDPEWL4",130,0)
 S DIE="^RCY(344.49,",DA=RCSCR,DR=".02////"_RECTDA D ^DIE
"RTN","RCDPEWL4",131,0)
 S DIE="^RCY(344.4,",DA=RCSCR,DR=".08////"_RECTDA D ^DIE
"RTN","RCDPEWL4",132,0)
 S Z=+$O(^RCY(344.31,"AERA",RCSCR,0))
"RTN","RCDPEWL4",133,0)
 S DIE="^RCY(344,",DA=RECTDA,DR=".18////"_RCSCR_$S(Z:";.17////"_Z,1:"")_$S(RCPAYTY=4:";.06////"_RCDEP,1:"")_$S($P($G(^RCY(344.31,Z,0)),U,15)'="":";.16////"_$P(^RCY(344.31,Z,0),U,15),1:"") D ^DIE
"RTN","RCDPEWL4",134,0)
 ;
"RTN","RCDPEWL4",135,0)
 I $O(RCER(0)) D
"RTN","RCDPEWL4",136,0)
 . S CT=1,DIR(0)="EA",DIR("A",1)="THE FOLLOWING PROBLEMS OCCURRED WHILE ADDING THE RECEIPT: "
"RTN","RCDPEWL4",137,0)
 . S Z=0 F  S Z=$O(RCER(Z)) Q:'Z  S CT=CT+1,DIR("A",CT)=RCER(Z)
"RTN","RCDPEWL4",138,0)
 . S DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEWL4",139,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEWL4",140,0)
 ;
"RTN","RCDPEWL4",141,0)
 S DIR(0)="YA",DIR("A")="DO YOU WANT TO GO TO RECEIPT PROCESSING NOW? ",DIR("A",1)=" ",DIR("A",2)="RECEIPT "_$P($G(^RCY(344,+RECTDA,0)),U)_" HAS BEEN CREATED FOR THIS ERA",DIR("B")="YES" W ! D ^DIR K DIR
"RTN","RCDPEWL4",142,0)
 I Y=1 S RCRECTDA=RECTDA D EN^VALM("RCDP RECEIPT PROFILE")
"RTN","RCDPEWL4",143,0)
 K RCSCR
"RTN","RCDPEWL4",144,0)
 S VALMBCK="Q"
"RTN","RCDPEWL4",145,0)
 ;
"RTN","RCDPEWL4",146,0)
NEWRECQ Q
"RTN","RCDPEWL4",147,0)
 ;
"RTN","RCDPEWL4",148,0)
VRECPT ; Preview receipt lines
"RTN","RCDPEWL4",149,0)
 N RCZ,Z,Z0,DIR,X,Y
"RTN","RCDPEWL4",150,0)
 D FULL^VALM1
"RTN","RCDPEWL4",151,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,1,Z)) Q:'Z  I $P(Z,".",2) S Z0=$G(^(Z,0)) I $P(Z0,U,6)<0 S RCZ($P(Z0,U))=$P(Z0,U,2)_U_$P(Z0,U,6)
"RTN","RCDPEWL4",152,0)
 I $O(RCZ(""))'="" D
"RTN","RCDPEWL4",153,0)
 . W !,"THE FOLLOWING LINES HAVE A NET PAYMENT LESS THAN 0.  THESE LINES MUST HAVE",!,"THIS NEGATIVE AMOUNT DISTRIBUTED TO OTHER LINE(S) IN THE ERA BEFORE A",!,"RECEIPT CAN BE CREATED."
"RTN","RCDPEWL4",154,0)
 . S Z="" F  S Z=$O(RCZ(Z)) Q:Z=""  W !,$J("",5)_$J(Z,10)_"  "_$E($P(RCZ(Z),U)_$J("",15),1,15)_"  "_$J(+$P(RCZ(Z),U,2),"",2)
"RTN","RCDPEWL4",155,0)
 . W !
"RTN","RCDPEWL4",156,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","RCDPEWL4",157,0)
 ;
"RTN","RCDPEWL4",158,0)
 D EN^VALM("RCDPE EOB RECEIPT PREVIEW")
"RTN","RCDPEWL4",159,0)
 S VALMBCK=$S('$G(RCSCR):"Q",1:"R")
"RTN","RCDPEWL4",160,0)
 Q
"RTN","RCDPEWL4",161,0)
 ;
"RTN","RCDPEWL5")
0^107^B31439865
"RTN","RCDPEWL5",1,0)
RCDPEWL5 ;ALB/TMK - ELECTRONIC EOB WORKLIST ACTIONS ;24-FEB-03
"RTN","RCDPEWL5",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEWL5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEWL5",4,0)
 Q
"RTN","RCDPEWL5",5,0)
 ;
"RTN","RCDPEWL5",6,0)
INIT ; Build receipt preview
"RTN","RCDPEWL5",7,0)
 N X,Z,Z1,Z10,Z0,Z2,RCZ
"RTN","RCDPEWL5",8,0)
 K ^TMP("RCDPE_EOB_PREVIEW",$J)
"RTN","RCDPEWL5",9,0)
 S VALMCNT=0,VALMBG=1
"RTN","RCDPEWL5",10,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,1,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","RCDPEWL5",11,0)
 . I $P(Z0,U)\1=+Z0 S Z2=$P(Z0,U,2)
"RTN","RCDPEWL5",12,0)
 . I $P($P(Z0,U),".",2) D
"RTN","RCDPEWL5",13,0)
 .. S:$P(Z0,U,2)="" $P(Z0,U,2)=Z2
"RTN","RCDPEWL5",14,0)
 .. S RCZ=$S(+$P(Z0,U,6)=0:0,+$P(Z0,U,6)<0:-1,$P(Z0,U,7):1,1:2)
"RTN","RCDPEWL5",15,0)
 .. S RCZ(RCZ,Z)=Z0
"RTN","RCDPEWL5",16,0)
 .. S Z1=0 F  S Z1=$O(^RCY(344.49,RCSCR,1,Z,1,Z1)) Q:'Z1  S Z10=$G(^(Z1,0)) D
"RTN","RCDPEWL5",17,0)
 ... I $P(Z10,U,5)=1 S RCZ(RCZ,Z,"ADJ",Z1)="Dec adj $"_$J(0-$P(Z10,U,3),"",2)_" pending - ",RCZ(RCZ,Z,"ADJ",Z1,1)=$J("",4)_$P(Z10,U,9)
"RTN","RCDPEWL5",18,0)
 F RCZ=1,2,0,-1 D
"RTN","RCDPEWL5",19,0)
 . Q:'$D(RCZ(RCZ))
"RTN","RCDPEWL5",20,0)
 . I RCZ=1 D SET("PAYMENTS (LINES FOR RECEIPT):")
"RTN","RCDPEWL5",21,0)
 . I RCZ=0,VALMCNT>0 D SET(" ") D SET("ZERO DOLLAR PAYMENTS:")
"RTN","RCDPEWL5",22,0)
 . I RCZ=-1,VALMCNT>0 D SET(" ") D SET("LINES WITH NEGATIVE BALANCES STILL NEEDING TO BE DISTRIBUTED:")
"RTN","RCDPEWL5",23,0)
 . S Z=0 F  S Z=$O(RCZ(RCZ,Z)) Q:'Z  S Z0=RCZ(RCZ,Z) D
"RTN","RCDPEWL5",24,0)
 .. S X=""
"RTN","RCDPEWL5",25,0)
 .. S X=$$SETFLD^VALM1($P(Z0,U),X,"LINE #")
"RTN","RCDPEWL5",26,0)
 .. S X=$$SETFLD^VALM1($S($P(Z0,U,7):$$BN1^PRCAFN($P(Z0,U,7)),1:$S(RCZ=0:"",1:"[SUSPENSE]")_$S($P(Z0,U,2)["**ADJ"&'$P($P(Z0,U,2),"ADJ",2):"TOTALS MISMATCH ADJ",1:$P(Z0,U,2))),X,"ACCOUNT")
"RTN","RCDPEWL5",27,0)
 .. S X=$$SETFLD^VALM1($J(+$P(Z0,U,6),"",2),X,"AMOUNT")
"RTN","RCDPEWL5",28,0)
 .. D SET(X)
"RTN","RCDPEWL5",29,0)
 .. S Z1=0 F  S Z1=$O(RCZ(RCZ,Z,"ADJ",Z1)) Q:'Z1  D SET($J("",12)_$G(RCZ(RCZ,Z,"ADJ",Z1))) S Z2=0 F  S Z2=$O(RCZ(RCZ,Z,"ADJ",Z1,Z2)) Q:'Z2  D SET($J("",12)_$G(RCZ(RCZ,Z,"ADJ",Z1,Z2)))
"RTN","RCDPEWL5",30,0)
 Q
"RTN","RCDPEWL5",31,0)
 ;
"RTN","RCDPEWL5",32,0)
SET(X) ;
"RTN","RCDPEWL5",33,0)
 S VALMCNT=VALMCNT+1
"RTN","RCDPEWL5",34,0)
 S ^TMP("RCDPE_EOB_PREVIEW",$J,VALMCNT,0)=X
"RTN","RCDPEWL5",35,0)
 Q
"RTN","RCDPEWL5",36,0)
 ;
"RTN","RCDPEWL5",37,0)
HDR ;
"RTN","RCDPEWL5",38,0)
 D HDR^RCDPEWL
"RTN","RCDPEWL5",39,0)
 Q
"RTN","RCDPEWL5",40,0)
 ;
"RTN","RCDPEWL5",41,0)
FNL ;
"RTN","RCDPEWL5",42,0)
 K ^TMP("RCDPE_EOB_PREVIEW",$J)
"RTN","RCDPEWL5",43,0)
 Q
"RTN","RCDPEWL5",44,0)
 ;
"RTN","RCDPEWL5",45,0)
RCOMM ; Allow entry of receipt comment to be moved to line on receipt
"RTN","RCDPEWL5",46,0)
 N RCEDIT
"RTN","RCDPEWL5",47,0)
 D FULL^VALM1
"RTN","RCDPEWL5",48,0)
 ;
"RTN","RCDPEWL5",49,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV^RCDPEWL2 G RCOMMQ
"RTN","RCDPEWL5",50,0)
 ;
"RTN","RCDPEWL5",51,0)
 D SEL^RCDPEWL2(.RCEDIT)
"RTN","RCDPEWL5",52,0)
 G:'RCEDIT RCOMMQ
"RTN","RCDPEWL5",53,0)
 ;
"RTN","RCDPEWL5",54,0)
RCOMMQ S VALMBCK="R"
"RTN","RCDPEWL5",55,0)
 Q
"RTN","RCDPEWL5",56,0)
 ;
"RTN","RCDPEWL5",57,0)
SUSPERA ; Option entrypoint to select an ERA to be posted to suspense
"RTN","RCDPEWL5",58,0)
 N DIC,X,Y,RCERA,RCSCR,DTOUT,DUOUT
"RTN","RCDPEWL5",59,0)
 S DIC(0)="AEMQ",DIC="^RCY(344.4,",DIC("S")="I '$P(^(0),U,8),'$G(^(20))"
"RTN","RCDPEWL5",60,0)
 D ^DIC K DIC
"RTN","RCDPEWL5",61,0)
 I Y'>0 Q
"RTN","RCDPEWL5",62,0)
 S RCERA=+Y
"RTN","RCDPEWL5",63,0)
 S DIR(0)="YA",DIR("B")="YES",DIR("A")="DO YOU WANT TO PRINT/VIEW THE ERA FIRST?: " W ! D ^DIR K DIR
"RTN","RCDPEWL5",64,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","RCDPEWL5",65,0)
 I Y=1 S RCSCR=RCERA D PRERA^RCDPEWL0
"RTN","RCDPEWL5",66,0)
 D SUSP(RCERA,0)
"RTN","RCDPEWL5",67,0)
 Q
"RTN","RCDPEWL5",68,0)
 ;
"RTN","RCDPEWL5",69,0)
SUSP(RCERA,LM) ; Function to send receipt to suspense for ERA
"RTN","RCDPEWL5",70,0)
 ; RCERA = ien of entry in file 344.4
"RTN","RCDPEWL5",71,0)
 ; LM = flag to indicate it was called from list manager protocol
"RTN","RCDPEWL5",72,0)
 ;    =  1 if true, 0 if false
"RTN","RCDPEWL5",73,0)
 N CT,DIR,X,Y,RC0,RCCOM,RCER,RCPAYTY,RECTDA,RCTRANDA,DIE,DA,DR,Z,DTOUT,DUOUT
"RTN","RCDPEWL5",74,0)
 S RC0=$G(^RCY(344.4,RCERA,0))
"RTN","RCDPEWL5",75,0)
 I $G(LM) D FULL^VALM1
"RTN","RCDPEWL5",76,0)
 I $$HACERA^RCDPEU(RCERA) D  G SUSPQ
"RTN","RCDPEWL5",77,0)
 . S DIR(0)="EA",DIR("A")="THIS IS NOT A VALID ACTION FOR AN ERA FROM HAC" W ! D ^DIR K DIR
"RTN","RCDPEWL5",78,0)
 S DIR(0)="YA",DIR("B")="NO"
"RTN","RCDPEWL5",79,0)
 I $P(RC0,U,5) D
"RTN","RCDPEWL5",80,0)
 . S DIR("A",1)="THIS WILL CREATE A RECEIPT THAT WILL MOVE THE FUNDS ($"_$J($P(RC0,U,5),"",2)_")",DIR("A",2)="FOR THIS ENTIRE ERA TO YOUR SUSPENSE ACCOUNT",Z=3
"RTN","RCDPEWL5",81,0)
 E  D
"RTN","RCDPEWL5",82,0)
 . S DIR("A",1)="THIS WILL CREATE AND POST A RECEIPT FOR $0.00 FOR THIS ERA",Z=2
"RTN","RCDPEWL5",83,0)
 S DIR("A",Z+1)=" ",DIR("A",Z+2)="***ALL POSTINGS TO A/R FOR ANY CLAIMS IN THIS ERA MUST BE DONE MANUALLY***",DIR("A",Z+3)=" "
"RTN","RCDPEWL5",84,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE?: "
"RTN","RCDPEWL5",85,0)
 W ! D ^DIR K DIR
"RTN","RCDPEWL5",86,0)
 I Y'=1 D NOACT G SUSPQ
"RTN","RCDPEWL5",87,0)
 S DIR("A",1)="ENTER A 1-60 CHARACTER COMMENT TO BE PLACED ON THE RECEIPT: ",DIR("A")=">: ",DIR(0)="FA^1:60",DIR("B")="REF ERA #:"_RCERA_"  FROM "_$E($P(RC0,U,6),1,20) W ! D ^DIR K DIR
"RTN","RCDPEWL5",88,0)
 I $D(DTOUT)!$D(DUOUT) D NOACT G SUSPQ
"RTN","RCDPEWL5",89,0)
 S RCCOM=Y
"RTN","RCDPEWL5",90,0)
 S RCPAYTY=$S($P(RC0,U,13)="":14,1:4)
"RTN","RCDPEWL5",91,0)
 S RECTDA=$$BLDRCPT^RCDPUREC(DT,"",+$O(^RC(341.1,"AC",+RCPAYTY,0)))
"RTN","RCDPEWL5",92,0)
 I 'RECTDA D  G SUSPQ
"RTN","RCDPEWL5",93,0)
 . S DIR(0)="EA",DIR("A",1)="A PROBLEM WAS ENCOUNTERED ADDING THE RECEIPT",DIR("A")="NO ACTION TAKEN - RETURN TO CONTINUE: " W ! D ^DIR K DIR
"RTN","RCDPEWL5",94,0)
 ;
"RTN","RCDPEWL5",95,0)
 S RCTRANDA=$$ADDTRAN^RCDPURET(RECTDA)
"RTN","RCDPEWL5",96,0)
 S DR=".04////"_(+$P(RC0,U,5))_$S($P(RC0,U,13)'="":";.13////"_$P(RC0,U,13),1:"")_$S(RCCOM'="":";1.02////"_RCCOM,1:"")
"RTN","RCDPEWL5",97,0)
 S DA(1)=RECTDA,DA=RCTRANDA,DIE="^RCY(344,"_DA(1)_",1,"
"RTN","RCDPEWL5",98,0)
 D ^DIE
"RTN","RCDPEWL5",99,0)
 ;
"RTN","RCDPEWL5",100,0)
 I $D(^RCY(344.49,RCERA,0)) S DIE="^RCY(344.49,",DA=RCERA,DR=".02////"_RECTDA D ^DIE
"RTN","RCDPEWL5",101,0)
 S DIE="^RCY(344.4,",DA=RCERA,DR=".08////"_RECTDA_";20.01///^S X=""NOW"";20.02////"_DUZ D ^DIE
"RTN","RCDPEWL5",102,0)
 S Z=+$O(^RCY(344.31,"AERA",RCERA,0))
"RTN","RCDPEWL5",103,0)
 S DIE="^RCY(344,",DA=RECTDA,DR=".18////"_RCERA_$S(Z:";.17////"_Z,1:"") D ^DIE
"RTN","RCDPEWL5",104,0)
 ;
"RTN","RCDPEWL5",105,0)
 D PROCESS^RCDPURE1(RECTDA,1)
"RTN","RCDPEWL5",106,0)
 I '$P(RC0,U,5) S DIE="^RCY(344.4,",DA=RCERA,DR=".09////3;.14////1" D ^DIE
"RTN","RCDPEWL5",107,0)
 S DIR(0)="E" W ! D ^DIR K DIR
"RTN","RCDPEWL5",108,0)
 ;
"RTN","RCDPEWL5",109,0)
SUSPQ I $G(LM) S VALMBCK="R"
"RTN","RCDPEWL5",110,0)
 Q
"RTN","RCDPEWL5",111,0)
 ;
"RTN","RCDPEWL5",112,0)
REVIEW ; Action to enter review information on worklist lines
"RTN","RCDPEWL5",113,0)
 ; Assumes RCSCR = ien of the entry in file 344.49
"RTN","RCDPEWL5",114,0)
 N Z,RCDA,RCZ,DA,DIE,DR,X,Y,DIR,NEWON
"RTN","RCDPEWL5",115,0)
 S NEWON=0
"RTN","RCDPEWL5",116,0)
 D FULL^VALM1
"RTN","RCDPEWL5",117,0)
 I '$P($G(^TMP($J,"RC_SORTPARM")),U,2) D
"RTN","RCDPEWL5",118,0)
 . S DIR(0)="YA",DIR("A")="DO YOU WANT TO TURN DISPLAY REVIEW DATA ON?: ",DIR("B")="NO" W ! D ^DIR K DIR I Y=1 S $P(^TMP($J,"RC_SORTPARM"),U,2)=1,NEWON=1
"RTN","RCDPEWL5",119,0)
 W !
"RTN","RCDPEWL5",120,0)
 D SEL^RCDPEWL(.RCDA)
"RTN","RCDPEWL5",121,0)
 S RCZ=+$O(RCDA(0)),RCZ=+$G(RCDA(RCZ)) G:'RCZ REVIEWQ
"RTN","RCDPEWL5",122,0)
 S DA(1)=RCSCR,DA=RCZ,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".11;I X=""""!(X=0) S Y=""@10"";.12////^S X=DUZ;S Y=""@20"";@10;.12///@;@20;3" D ^DIE
"RTN","RCDPEWL5",123,0)
 D BLD^RCDPEWL1($G(^TMP($J,"RC_SORTPARM")))
"RTN","RCDPEWL5",124,0)
 S NEWON=""
"RTN","RCDPEWL5",125,0)
 ;
"RTN","RCDPEWL5",126,0)
REVIEWQ I $G(NEWON) D BLD^RCDPEWL1(1)
"RTN","RCDPEWL5",127,0)
 S VALMBCK="R"
"RTN","RCDPEWL5",128,0)
 Q
"RTN","RCDPEWL5",129,0)
 ;
"RTN","RCDPEWL5",130,0)
NOACT ;
"RTN","RCDPEWL5",131,0)
 N DIR,X,Y
"RTN","RCDPEWL5",132,0)
 S DIR(0)="EA",DIR("A")="NO ACTION TAKEN - RETURN TO CONTINUE: " W ! D ^DIR K DIR
"RTN","RCDPEWL5",133,0)
 Q
"RTN","RCDPEWL5",134,0)
 ;
"RTN","RCDPEWL6")
0^113^B57512828
"RTN","RCDPEWL6",1,0)
RCDPEWL6 ;ALB/TMK - ELECTRONIC EOB WORKLIST ACTIONS ;18-MAR-03
"RTN","RCDPEWL6",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEWL6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEWL6",4,0)
 Q
"RTN","RCDPEWL6",5,0)
 ;
"RTN","RCDPEWL6",6,0)
DISTADJ ; Distribute an adjustment that retracts a payment to other bill(s)
"RTN","RCDPEWL6",7,0)
 ; NOTE: RCSCR is assumed to be the IEN of the ERA entry in file 344.49
"RTN","RCDPEWL6",8,0)
 N RCDA,RCDA1,RCAMT,RCADJ,RCQUIT,Z,Z0,Z1,DIR,X,Y,CT,RCZ,RCZ1,RCZ2,RCADJOK,TOT,DTOUT,DUOUT
"RTN","RCDPEWL6",9,0)
 D FULL^VALM1
"RTN","RCDPEWL6",10,0)
 I $G(RCSCR("NOEDIT")) D NOEDIT^RCDPEWL G DISTQ
"RTN","RCDPEWL6",11,0)
 ;
"RTN","RCDPEWL6",12,0)
 S Z=0,RCADJOK="" F  S Z=$O(^TMP("RCDPE-EOB_WLDX",$J,Z)) Q:'Z  S Z1=+$P($G(^(Z)),U,2),Z0=$G(^RCY(344.49,RCSCR,1,Z1,0)) D
"RTN","RCDPEWL6",13,0)
 . ;(^RCY(344.49,RCSCR,1,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","RCDPEWL6",14,0)
 . I $P(Z0,U)'["." S RCADJOK=($P(Z0,U,2)["**ADJ") Q
"RTN","RCDPEWL6",15,0)
 . I '$P(Z0,U,7),'RCADJOK Q  ; Suspense item cannot be used to adjust
"RTN","RCDPEWL6",16,0)
 . I $P(Z0,U,6)<0 S RCZ(Z)=$P(Z0,U,6)_U_Z1 Q
"RTN","RCDPEWL6",17,0)
 . I $P(Z0,U,6)>0 D  Q
"RTN","RCDPEWL6",18,0)
 .. N Q,ONHLD,IBA
"RTN","RCDPEWL6",19,0)
 .. S ONHLD=0
"RTN","RCDPEWL6",20,0)
 .. I $P(Z0,U,7) I $$IB^IBRUTL(+$P(Z0,U,7),1) S Q=0 F  S Q=$O(IBA(Q)) Q:'Q  I $P($G(^IB(+IBA(Q),0)),U,5)=8 S ONHLD=1 Q
"RTN","RCDPEWL6",21,0)
 .. S RCZ1(+$P(Z0,U,6),Z)=Z1_U_ONHLD,RCZ2(Z)=Z1_U_$P(Z0,U,6)_U_ONHLD Q
"RTN","RCDPEWL6",22,0)
 ;
"RTN","RCDPEWL6",23,0)
 I $O(RCZ(0))="" D  G DISTQ
"RTN","RCDPEWL6",24,0)
 . S DIR(0)="EA",DIR("A",1)="NO LINES EXIST NEEDING ADJUSTMENT DISTRIBUTION",DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL6",25,0)
 ;
"RTN","RCDPEWL6",26,0)
 I $O(RCZ1(0))="" D  G DISTQ
"RTN","RCDPEWL6",27,0)
 . S DIR(0)="EA",DIR("A",1)="NO VALID LINES EXIST ON THIS ERA WHERE A DISTRIBUTION CAN BE MADE",DIR("A",2)=$$WHAT(RCSCR),DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL6",28,0)
 ;
"RTN","RCDPEWL6",29,0)
 S RCQUIT=0
"RTN","RCDPEWL6",30,0)
 F  S DIR(0)="NA^1:99:3",DIR("A")="SELECT A LINE THAT NEEDS AN ADJUSTMENT AMOUNT DISTRIBUTED: " D  Q:RCQUIT
"RTN","RCDPEWL6",31,0)
 . S DIR("?",1)="THE FOLLOWING LINE(S) HAVE AN ADJUSTMENT THAT CAUSED A NEGATIVE NET PAYMENT.",DIR("?",2)="IN ORDER TO BALANCE THE RECEIPT AND THE DEPOSIT, THESE AMOUNTS WILL NEED TO",DIR("?",3)="  BE DISTRIBUTED TO OTHER LINE(S)",CT=3
"RTN","RCDPEWL6",32,0)
 . S Z=0
"RTN","RCDPEWL6",33,0)
 . F  S Z=$O(RCZ(Z)) Q:'Z  S CT=CT+1,DIR("?",CT)="  "_$J(Z,8)_"  "_$J($P(RCZ(Z),U),15,2)
"RTN","RCDPEWL6",34,0)
 . S DIR("?")=" "
"RTN","RCDPEWL6",35,0)
 . I $O(RCZ(0))=$O(RCZ(""),-1) S DIR("B")=$O(RCZ(0))
"RTN","RCDPEWL6",36,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEWL6",37,0)
 . I $D(DUOUT)!$D(DTOUT)!(Y="") S RCQUIT=1,RCDA="" Q
"RTN","RCDPEWL6",38,0)
 . I '$D(^TMP("RCDPE-EOB_WLDX",$J,Y)) W !,"THIS LINE DOES NOT EXIST FOR THIS ERA" W ! Q
"RTN","RCDPEWL6",39,0)
 . I '$D(RCZ(Y)) D  Q:Y=""
"RTN","RCDPEWL6",40,0)
 .. I Y'[".",$D(RCZ(Y_".001")),$O(RCZ(Y+1),-1)=(Y_".001") S Y=Y_".001" Q
"RTN","RCDPEWL6",41,0)
 .. W !,$S(Y["."!($O(RCZ(Y))\1'=(Y\1)):"THIS LINE DOESN'T NEED AN ADJUSTMENT DISTRIBUTION",1:"PLEASE ENTER THE ENTIRE LINE # (Such as: 1.001)") W !
"RTN","RCDPEWL6",42,0)
 .. S Y=""
"RTN","RCDPEWL6",43,0)
 . W !,"  LINE #: "_+Y_"  AMOUNT NEEDED TO DISTRIBUTE: "_$J(+RCZ(Y),"",2),!
"RTN","RCDPEWL6",44,0)
 . ; RCDA = the ien of the line in file 344.491
"RTN","RCDPEWL6",45,0)
 . ; RCDA(1) = the line #        RCDA(2) = the amount to be adjusted (+)
"RTN","RCDPEWL6",46,0)
 . S RCDA=$P(RCZ(Y),U,2),RCDA(1)=Y,RCQUIT=1,RCDA(2)=-$P(RCZ(Y),U)
"RTN","RCDPEWL6",47,0)
 ;
"RTN","RCDPEWL6",48,0)
 G:$G(RCDA)="" DISTQ
"RTN","RCDPEWL6",49,0)
 ;
"RTN","RCDPEWL6",50,0)
 S RCQUIT=0
"RTN","RCDPEWL6",51,0)
 ;
"RTN","RCDPEWL6",52,0)
 S (TOT,Z)=0 F  S Z=$O(RCZ1(Z)) Q:'Z  S TOT=TOT+Z
"RTN","RCDPEWL6",53,0)
 I TOT<RCDA(2) D  G DISTQ
"RTN","RCDPEWL6",54,0)
 . S DIR(0)="EA",DIR("A",1)="THE ERA DOES NOT HAVE ENOUGH VALID PAYMENTS TO OFFSET THIS DISTRIBUTION",DIR("A",2)=$$WHAT(RCSCR),DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL6",55,0)
 ;
"RTN","RCDPEWL6",56,0)
 F  S DIR(0)="NA^1:99:3",DIR("A")="SELECT A LINE TO DISTRIBUTE THE ADJUSTMENT AMOUNT TO: " D  Q:RCQUIT
"RTN","RCDPEWL6",57,0)
 . S DIR("?",1)="THE FOLLOWING LINE(S) HAVE A NET PAYMENT THAT CAN BE USED TO OFFSET THE",DIR("?",2)="  NEGATIVE NET PAYMENT FOR LINE "_RCDA(1)_" ("_$J(+$P(RCZ(RCDA(1)),U),"",2)_"):",CT=2
"RTN","RCDPEWL6",58,0)
 . S Z="" F  S Z=$O(RCZ1(Z),-1) Q:'Z  S Z0=0 F  S Z0=$O(RCZ1(Z,Z0)) Q:'Z0  S CT=CT+1,DIR("?",CT)="  "_$J(Z0,8)_"  "_$J(+Z,15,2)_$S($P(RCZ1(Z,Z0),U,2):" On hold exists",1:"")
"RTN","RCDPEWL6",59,0)
 . S DIR("?")=" "
"RTN","RCDPEWL6",60,0)
 . I $O(RCZ2(0))=$O(RCZ2(""),-1) S DIR("B")=$O(RCZ2(0))
"RTN","RCDPEWL6",61,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEWL6",62,0)
 . I $D(DUOUT)!$D(DTOUT)!(Y="") S RCQUIT=1,RCDA1="" Q
"RTN","RCDPEWL6",63,0)
 . I '$D(^TMP("RCDPE-EOB_WLDX",$J,Y)) W !,"THIS LINE DOES NOT EXIST FOR THIS ERA" W ! Q
"RTN","RCDPEWL6",64,0)
 . I '$D(RCZ2(Y)) D  Q:Y=""
"RTN","RCDPEWL6",65,0)
 .. I Y'[".",$D(RCZ2(Y_".001")),$O(RCZ2(Y+1),-1)=(Y_".001") S Y=Y_".001" Q
"RTN","RCDPEWL6",66,0)
 .. I Y'[".",$O(RCZ2(Y))\1'=Y S Y=Y_"."
"RTN","RCDPEWL6",67,0)
 .. W !,$S(Y[".":"THIS LINE CANNOT BE USED FOR AN ADJUSTMENT DISTRIBUTION",1:"PLEASE ENTER THE ENTIRE LINE # (Such as: 1.001)") W !
"RTN","RCDPEWL6",68,0)
 .. S Y=""
"RTN","RCDPEWL6",69,0)
 . I $P(RCZ2(Y),U,3) W !,"Warning - on-hold exists for this claim",!
"RTN","RCDPEWL6",70,0)
 . W !,"  LINE #: "_+Y_"  LINE BALANCE: "_$J(+$P(RCZ2(Y),U,2),"",2),!
"RTN","RCDPEWL6",71,0)
 . ; RCDA1 = the ien of the line in file 344.491
"RTN","RCDPEWL6",72,0)
 . ; RCDA1(1) = the line # in the display
"RTN","RCDPEWL6",73,0)
 . S RCDA1(1)=Y,RCDA1=+$G(RCZ2(Y)),RCQUIT=1
"RTN","RCDPEWL6",74,0)
 . S Z=$O(^RCY(344.49,RCSCR,1,"B",RCDA1(1)\1,0))
"RTN","RCDPEWL6",75,0)
 . S RCADJ=0
"RTN","RCDPEWL6",76,0)
 . I $P($G(^RCY(344.49,RCSCR,1,Z,0)),U,2)["**ADJ" S RCADJ=1 W !,"THE LINE SELECTED IS AN ADDITIONAL PAYMENT LINE, NOT SPECIFIC TO A CLAIM",!,"THE AMT WILL BE DISTRIBUTED, BUT A DECREASE ADJUSTMENT WILL NOT BE PERFORMED",!
"RTN","RCDPEWL6",77,0)
 ;
"RTN","RCDPEWL6",78,0)
 G:'$G(RCDA1) DISTQ
"RTN","RCDPEWL6",79,0)
 ;
"RTN","RCDPEWL6",80,0)
 S DIR("B")=$S(RCDA(2)<$P(RCZ2(RCDA1(1)),U,2):$J(RCDA(2),"",2),1:$J($P(RCZ2(+RCDA1(1)),U,2),"",2))
"RTN","RCDPEWL6",81,0)
 S DIR(0)="NA^.01:"_DIR("B")_":2",DIR("A")="ADJUSTMENT AMOUNT TO DISTRIBUTE: "
"RTN","RCDPEWL6",82,0)
 S DIR("?",1)="THIS IS THE AMOUNT OF THE ADJUSTMENT THAT SHOULD BE APPLIED TO THIS",DIR("?")="PAYMENT LINE.  THE AMT ENTERED MUST BE BETWEEN .01 AND "_$J(DIR("B"),"",2)
"RTN","RCDPEWL6",83,0)
 D ^DIR K DIR
"RTN","RCDPEWL6",84,0)
 ;
"RTN","RCDPEWL6",85,0)
 I $D(DUOUT)!$D(DTOUT)!'Y D  G DISTQ
"RTN","RCDPEWL6",86,0)
 . S DIR(0)="EA",DIR("A",1)="NO AMOUNT WAS ENTERED - TRY AGAIN LATER",DIR("A")="PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEWL6",87,0)
 S RCAMT=$J(Y,"",2)
"RTN","RCDPEWL6",88,0)
 ;
"RTN","RCDPEWL6",89,0)
 D ^DIR K DIR
"RTN","RCDPEWL6",90,0)
 I $D(DUOUT)!$D(DTOUT) D  G DISTQ
"RTN","RCDPEWL6",91,0)
 . S DIR(0)="EA",DIR("A")="USER ABORT - PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEWL6",92,0)
 ;
"RTN","RCDPEWL6",93,0)
 S Y=""
"RTN","RCDPEWL6",94,0)
 I 'RCADJ D  G:'$D(RCDA) DISTQ
"RTN","RCDPEWL6",95,0)
 . N Z,RCA
"RTN","RCDPEWL6",96,0)
 . S RCA=0,Z1=+$P($G(^TMP("RCDPE-EOB_WLDX",$J,RCDA(1)\1)),U,2),Z=$G(^RCY(344.49,RCSCR,1,Z1,0)),RCA("#")=+$P($P(Z,U,2),"**ADJ",2)
"RTN","RCDPEWL6",97,0)
 . I $P(Z,U,2)["**ADJ" D
"RTN","RCDPEWL6",98,0)
 .. S RCA=1
"RTN","RCDPEWL6",99,0)
 .. S RCA("REF")=$S(RCA("#"):$P($G(^RCY(344.4,RCSCR,2,RCA("#"),0)),U),1:$P(Z,U,9))
"RTN","RCDPEWL6",100,0)
 . S Z=$S(RCA:RCA("#"),1:$G(^RCY(344.49,RCSCR,1,RCDA,0)))
"RTN","RCDPEWL6",101,0)
 . S DIR(0)="FAO^1:60",DIR("A")="  > ",DIR("A",1)="DECREASE ADJ COMMENT (1-60 CHARACTERS): "
"RTN","RCDPEWL6",102,0)
 . S DIR("B")="RETRACTED FOR "
"RTN","RCDPEWL6",103,0)
 . S DIR("B")=DIR("B")_$S(RCA:"ERA ADJ #"_Z_" Ref: "_RCA("REF"),1:"CLAIM "_$S($P(Z,U,2)'="":$P(Z,U,2),1:"UNKNOWN"))
"RTN","RCDPEWL6",104,0)
 . I $L(DIR("B"))>60 S DIR("B")=$E(DIR("B"),1,60)
"RTN","RCDPEWL6",105,0)
 . D ^DIR K DIR
"RTN","RCDPEWL6",106,0)
 . ;
"RTN","RCDPEWL6",107,0)
 . I $D(DUOUT)!$D(DTOUT) D  Q
"RTN","RCDPEWL6",108,0)
 .. K RCDA
"RTN","RCDPEWL6",109,0)
 .. S DIR(0)="EA",DIR("A")="USER ABORT - PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEWL6",110,0)
 ;
"RTN","RCDPEWL6",111,0)
 D DISTADJ^RCDPEWL4(RCDA,RCDA1,RCAMT,Y)
"RTN","RCDPEWL6",112,0)
 ;
"RTN","RCDPEWL6",113,0)
DISTQ S VALMBCK="R"
"RTN","RCDPEWL6",114,0)
 Q
"RTN","RCDPEWL6",115,0)
 ;
"RTN","RCDPEWL6",116,0)
REFRESH ; Refresh the entry in file 344.49 to remove all user adjustments
"RTN","RCDPEWL6",117,0)
 N DIR,X,Y
"RTN","RCDPEWL6",118,0)
 D FULL^VALM1
"RTN","RCDPEWL6",119,0)
 I $G(RCSCR("NOEDIT")) D NOEDIT^RCDPEWL G REFQ
"RTN","RCDPEWL6",120,0)
 S DIR(0)="YA"
"RTN","RCDPEWL6",121,0)
 S DIR("A",1)="THIS ACTION WILL DELETE AND REBUILD THIS EEOB WORKLIST SCRATCH PAD ENTRY",DIR("A",2)="ALL EDITS/SPLITS/ADJUSTMENTS PREVIOUSLY ENTERED FOR THIS ERA WILL BE ERASED",DIR("A",3)=" "
"RTN","RCDPEWL6",122,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO DO THIS?: "
"RTN","RCDPEWL6",123,0)
 W ! D ^DIR K DIR
"RTN","RCDPEWL6",124,0)
 I Y'=1 G REFQ
"RTN","RCDPEWL6",125,0)
 D ADDLINES^RCDPEWLA(RCSCR)
"RTN","RCDPEWL6",126,0)
 D BLD^RCDPEWL1($G(^TMP($J,"RC_SORTPARM")))
"RTN","RCDPEWL6",127,0)
REFQ S VALMBG=1,VALMBCK="R"
"RTN","RCDPEWL6",128,0)
 Q
"RTN","RCDPEWL6",129,0)
 ;
"RTN","RCDPEWL6",130,0)
WHAT(RCSCR) ; Text for what to do if not enough funds found for dist adj
"RTN","RCDPEWL6",131,0)
 Q $S($O(^RCY(344.31,"AERA",+RCSCR,0)):"THIS ERA MUST BE MOVED TO SUSPENSE",1:"THIS ERA'S RECEIPT MUST BE ENTERED MANUALLY")
"RTN","RCDPEWL6",132,0)
 ;
"RTN","RCDPEWL6",133,0)
ADJUST ; Allow entry into increase/decrease adjustment functions
"RTN","RCDPEWL6",134,0)
 N DIR,X,Y,RCTYP,RCY,DIC
"RTN","RCDPEWL6",135,0)
 D FULL^VALM1
"RTN","RCDPEWL6",136,0)
 ;
"RTN","RCDPEWL6",137,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV^RCDPEWL2 G ADJUSTQ
"RTN","RCDPEWL6",138,0)
 ;
"RTN","RCDPEWL6",139,0)
 S DIR(0)="SA^D:DECREASE ADJUSTMENT;I:INCREASE ADJUSTMENT",DIR("B")="DECREASE ADJUSTMENT",DIR("A")="TYPE OF ADJUSTMENT: "
"RTN","RCDPEWL6",140,0)
 W ! D ^DIR K DIR
"RTN","RCDPEWL6",141,0)
 I $D(DUOUT)!$D(DTOUT)!(Y="") G ADJUSTQ
"RTN","RCDPEWL6",142,0)
 ;
"RTN","RCDPEWL6",143,0)
 S RCTYP=$S(Y="D":"DECREASE",1:"INCREASE")
"RTN","RCDPEWL6",144,0)
 F  S RCY=$$GETABILL^RCBEUBIL Q:RCY<0!(RCY'<1)
"RTN","RCDPEWL6",145,0)
 G:RCY<1 ADJUSTQ
"RTN","RCDPEWL6",146,0)
 D ADJUST^RCBEADJ(RCTYP,RCY)
"RTN","RCDPEWL6",147,0)
 I $D(^TMP($J,"RC_BILL",RCY)) D
"RTN","RCDPEWL6",148,0)
 . ;D UPDBAL(RCY)
"RTN","RCDPEWL6",149,0)
 . W !,"Claim balance is now: ",$J(+$P($$BILL^RCJIBFN2(RCY),U,3),"",2),!!,"PLEASE NOTE: This will not be reflected in the worklist until the worklist",!,"             is closed and reopened"
"RTN","RCDPEWL6",150,0)
ADJUSTQ D RET^RCDPEWL2
"RTN","RCDPEWL6",151,0)
 S VALMBCK="R"
"RTN","RCDPEWL6",152,0)
 Q
"RTN","RCDPEWL6",153,0)
 ;
"RTN","RCDPEWL6",154,0)
UPDBAL(RCY) ; Updates the claim balance if bill exists in list
"RTN","RCDPEWL6",155,0)
 ; RCY = ien of bill in file 430
"RTN","RCDPEWL6",156,0)
 ;
"RTN","RCDPEWL6",157,0)
 N X,Y,Z,Z0,Z1
"RTN","RCDPEWL6",158,0)
 S Z0=$J(+$P($$BILL^RCJIBFN2(RCY),U,3),"",2)
"RTN","RCDPEWL6",159,0)
 S Z=0 F  S Z=$O(^TMP($J,"RC_BILL",RCY,Z)) Q:'Z  D
"RTN","RCDPEWL6",160,0)
 . S X=+$G(^TMP("RCDPE-EOB_WLDX",$J,Z))
"RTN","RCDPEWL6",161,0)
 . Q:'X
"RTN","RCDPEWL6",162,0)
 . S Y=$G(^TMP("RCDPE-EOB_WL",$J,X+1,0))
"RTN","RCDPEWL6",163,0)
 . I Y["Claim Bal: " S Z1=$P(Y,"Claim Bal: ")_"Claim Bal: "_Z0_$G(^TMP($J,"RC_BILL",RCY,Z)),^TMP("RCDPE-EOB_WL",$J,X+1,0)=Z1
"RTN","RCDPEWL6",164,0)
 Q
"RTN","RCDPEWL6",165,0)
 ;
"RTN","RCDPEWLA")
0^122^B40306121
"RTN","RCDPEWLA",1,0)
RCDPEWLA ;ALB/TMK - ELECTRONIC EOB MESSAGE WORKLIST ;06-FEB-2003
"RTN","RCDPEWLA",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEWLA",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEWLA",4,0)
ADDLINES(RCSCR) ; Add lines to file 344.49, delete any existing lines
"RTN","RCDPEWLA",5,0)
 ; RCSCR = ien of entry in file 344.49
"RTN","RCDPEWLA",6,0)
 ;
"RTN","RCDPEWLA",7,0)
 N Z,Z0,Q,Q0,Q1,DA,DIK,X,Y,DIE,DO,DD,DR,RC0,RCA,RCA0,RCIFN,RCX,RCADJ,RCDEC,DIC,DLAYGO,RCLINE
"RTN","RCDPEWLA",8,0)
 K ^TMP($J,"RCA")
"RTN","RCDPEWLA",9,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,1,Z)) Q:'Z  S DA(1)=RCSCR,DA=Z,DIK="^RCY(344.49,"_DA(1)_",1," D ^DIK
"RTN","RCDPEWLA",10,0)
 ;
"RTN","RCDPEWLA",11,0)
 S RC0=$G(^RCY(344.4,RCSCR,0)) ; Entries are DINUMED
"RTN","RCDPEWLA",12,0)
 I $P(RC0,U,5)'="" S DR=".03////"_$P(RC0,U,5),DIE="^RCY(344.49,",DA=RCSCR D ^DIE
"RTN","RCDPEWLA",13,0)
 ;
"RTN","RCDPEWLA",14,0)
 S Z=0 F  S Z=$O(^RCY(344.4,+RC0,1,Z)) Q:'Z  S RCA0=$G(^(Z,0)) I RCA0'="" D  ; Sort the lines to put adjustments with the payments, check sort order
"RTN","RCDPEWLA",15,0)
 . ; for 0-pays
"RTN","RCDPEWLA",16,0)
 . I $P(RCA0,U,2) S RCIFN=+$G(^IBM(361.1,+$P(RCA0,U,2),0)),RCA=$P($G(^DGCR(399,RCIFN,0)),U) ; IA 4051
"RTN","RCDPEWLA",17,0)
 . I '$P(RCA0,U,2) S RCIFN="0;"_Z,RCA=$P(RCA0,U,5)
"RTN","RCDPEWLA",18,0)
 . I RCA="" S RCA=RCIFN
"RTN","RCDPEWLA",19,0)
 . I $D(^TMP($J,"RCA",RCA,+$P(RCA0,U,14))) D
"RTN","RCDPEWLA",20,0)
 .. F Q0=1:1:999 S Q=RCA_";"_$E(1000+Q0,2,4) I '$D(^TMP($J,"RCA",Q,+$P(RCA0,U,14))) S RCA=Q Q
"RTN","RCDPEWLA",21,0)
 . S ^TMP($J,"RCA",RCA,+$P(RCA0,U,14))=RCIFN_U_Z
"RTN","RCDPEWLA",22,0)
 ;
"RTN","RCDPEWLA",23,0)
 S Z=0 F  S Z=$O(^RCY(344.4,+RC0,2,Z)) Q:'Z  S RCA0=$G(^(Z,0)) I RCA0'="" D  ; Extract ERA level adjs
"RTN","RCDPEWLA",24,0)
 . S RCIFN=$P(RCA0,U),RCA="**ADJ"_Z
"RTN","RCDPEWLA",25,0)
 . S ^TMP($J,"RCA",RCA,1)=RCIFN_U_Z
"RTN","RCDPEWLA",26,0)
 ;
"RTN","RCDPEWLA",27,0)
 I $P(RC0,U,9)=-1 D  ; Check dec adj or additional receipt line needed
"RTN","RCDPEWLA",28,0)
 . S Z=+$O(^RCY(344.31,"AERA",RCSCR,0))
"RTN","RCDPEWLA",29,0)
 . Q:'Z
"RTN","RCDPEWLA",30,0)
 . I $P($G(^RCY(344.31,Z,0)),U,7)-$P(RC0,U,5) D  Q
"RTN","RCDPEWLA",31,0)
 .. S ^TMP($J,"RCA","**ADJ0",1)="TOTALS MISMATCH^^"_($P($G(^RCY(344.31,Z,0)),U,7)-$P(RC0,U,5))
"RTN","RCDPEWLA",32,0)
 ;
"RTN","RCDPEWLA",33,0)
 S Z="" F  S Z=$O(^TMP($J,"RCA",Z)) Q:Z=""  S Z0="" F  S Z0=$O(^TMP($J,"RCA",Z,Z0)) Q:Z0=""  D
"RTN","RCDPEWLA",34,0)
 . S Q=$P(Z,";") ; claim #
"RTN","RCDPEWLA",35,0)
 . S Q0=$S($E(Q,1,2)'="**":$G(^RCY(344.4,+RC0,1,+$P(^TMP($J,"RCA",Z,Z0),U,2),0)),Q["ADJ"&($P(Q,"ADJ",2)):$G(^RCY(344.4,+RC0,2,+$P(^TMP($J,"RCA",Z,Z0),U,2),0)),1:$G(^TMP($J,"RCA",Z,Z0)))
"RTN","RCDPEWLA",36,0)
 . ;
"RTN","RCDPEWLA",37,0)
 . S RCDEC=($P(Q0,U,3)<0) ; is this a decrease
"RTN","RCDPEWLA",38,0)
 . I Z0=0 D  Q  ; Add a payment line from the ERA
"RTN","RCDPEWLA",39,0)
 .. K DO,DD
"RTN","RCDPEWLA",40,0)
 .. S DIC(0)="L",DLAYGO=344.491,DA(1)=RCSCR,DIC="^RCY(344.49,"_DA(1)_",1,"
"RTN","RCDPEWLA",41,0)
 .. S DIC("DR")=".02////"_Q_";.05////"_$P(Q0,U,3)_";.06////"_$P(Q0,U,3)_";.09////"_$P(^TMP($J,"RCA",Z,Z0),U,2)
"RTN","RCDPEWLA",42,0)
 .. F X=$O(^RCY(344.49,RCSCR,1,"ASEQ"," "),-1)+1:1 I '$D(^RCY(344.49,RCSCR,"B",X)) Q
"RTN","RCDPEWLA",43,0)
 .. S RCLINE=X
"RTN","RCDPEWLA",44,0)
 .. D FILE^DICN K DIC,DO,DD
"RTN","RCDPEWLA",45,0)
 .. S ^TMP($J,"RCA",Z)=+Y
"RTN","RCDPEWLA",46,0)
 .. S DIC(0)="L",DLAYGO=344.491,DA(1)=RCSCR,DIC="^RCY(344.49,"_DA(1)_",1,"
"RTN","RCDPEWLA",47,0)
 .. S DIC("DR")=".02////"_Q_";.05////"_$P(Q0,U,3)_";.06////"_$P(Q0,U,3)_$S($P(^TMP($J,"RCA",Z,Z0),U):";.07////"_$P(^TMP($J,"RCA",Z,Z0),U),1:"")
"RTN","RCDPEWLA",48,0)
 .. S X=RCLINE+.001
"RTN","RCDPEWLA",49,0)
 .. D FILE^DICN K DIC,DO,DD,DA
"RTN","RCDPEWLA",50,0)
 .. S $P(^TMP($J,"RCA",Z,0),U,3)=+Y
"RTN","RCDPEWLA",51,0)
 . ;
"RTN","RCDPEWLA",52,0)
 . I Z0=1,$P($G(^TMP($J,"RCA",Z,0)),U,3) D  Q  ; rev of claim within this ERA
"RTN","RCDPEWLA",53,0)
 .. ; Add adj to line previously added for payment
"RTN","RCDPEWLA",54,0)
 .. K DO,DD
"RTN","RCDPEWLA",55,0)
 .. S DA(2)=RCSCR,DA(1)=+$P($G(^TMP($J,"RCA",Z,0)),U,3),DIC(0)="L",DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,",DLAYGO=344.4911,X=+$O(^RCY(344.49,DA(2),1,DA(1),1," "),-1)+1
"RTN","RCDPEWLA",56,0)
 .. S DIC("DR")=".02////"_$S(RCDEC:2,1:4)_";.03////"_$P(Q0,U,3)_";.05////"_$S(RCDEC:"0;.08////1;.06////1",1:"3;.08////0;.06////0")_";.07////"_+Q0
"RTN","RCDPEWLA",57,0)
 .. D FILE^DICN K DIC,DO,DD,DA
"RTN","RCDPEWLA",58,0)
 .. S Q1=$G(^RCY(344.49,RCSCR,1,+$P($G(^TMP($J,"RCA",Z,0)),U,3),0))
"RTN","RCDPEWLA",59,0)
 .. ; Upd net amt
"RTN","RCDPEWLA",60,0)
 .. S DA(1)=RCSCR,DA=+$P($G(^TMP($J,"RCA",Z,0)),U,3),DIE="^RCY(344.49,"_DA(1)_",1,",DR=".06////"_$J($P(Q1,U,6)+$P(Q0,U,3),"",2)_";.08////"_$J($P(Q1,U,8)+$P(Q0,U,3),"",2) D ^DIE
"RTN","RCDPEWLA",61,0)
 .. ;Upd seq ref,net in 'parent'
"RTN","RCDPEWLA",62,0)
 .. I $G(^TMP($J,"RCA",Z)) D
"RTN","RCDPEWLA",63,0)
 ... S DA(1)=RCSCR,DA=+$G(^TMP($J,"RCA",Z)),DIE="^RCY(344.49,"_DA(1)_",1,",DR=".09////"_($P($G(^RCY(344.49,RCSCR,1,DA,0)),U,9)_","_$P(^TMP($J,"RCA",Z,Z0),U,2))_";.06////"_$J($P($G(^RCY(344.49,DA(1),1,DA,0)),U,6)+$P(Q0,U,3),"",2) D ^DIE
"RTN","RCDPEWLA",64,0)
 . ;
"RTN","RCDPEWLA",65,0)
 . I Z0=1 D  Q  ; ERA level adj, no payment for claim lev adj or mismatch
"RTN","RCDPEWLA",66,0)
 .. ; Add a line
"RTN","RCDPEWLA",67,0)
 .. K DO,DD
"RTN","RCDPEWLA",68,0)
 .. S RCADJ=$S(Z["**ADJ":1,1:0)
"RTN","RCDPEWLA",69,0)
 .. S DIC(0)="L",DLAYGO=344.491,DA(1)=RCSCR,DIC="^RCY(344.49,"_DA(1)_",1,"
"RTN","RCDPEWLA",70,0)
 .. S DIC("DR")=$S(Q'=0:".02////"_Q_";",1:"")_".03////0.00;.05////0.00"
"RTN","RCDPEWLA",71,0)
 .. F X=$O(^RCY(344.49,RCSCR,1,"ASEQ"," "),-1)+1:1 I '$D(^RCY(344.49,RCSCR,"B",X)) L +^RCY(344.49,RCSCR,1,X,0):1 Q:$T
"RTN","RCDPEWLA",72,0)
 .. D FILE^DICN K DIC,DO,DD,DA
"RTN","RCDPEWLA",73,0)
 .. S RCLINE=+$P(Y,U,2),^TMP($J,"RCA",Z)=+Y
"RTN","RCDPEWLA",74,0)
 .. ;
"RTN","RCDPEWLA",75,0)
 .. S DIC(0)="L",DLAYGO=344.491,DA(1)=RCSCR,DIC="^RCY(344.49,"_DA(1)_",1,"
"RTN","RCDPEWLA",76,0)
 .. S DIC("DR")=$S('RCADJ:".02///"_$P(Z,";")_";",1:"")_".03////0.00;.05////0.00;.06////0.00"_$S($P(^TMP($J,"RCA",Z,Z0),U)&'RCADJ:";.07////"_$P(^TMP($J,"RCA",Z,Z0),U),1:"")
"RTN","RCDPEWLA",77,0)
 .. S X=RCLINE+.001
"RTN","RCDPEWLA",78,0)
 .. D FILE^DICN K DIC,DO,DD,DA
"RTN","RCDPEWLA",79,0)
 .. L -^RCY(344.49,RCSCR,1,RCLINE,0)
"RTN","RCDPEWLA",80,0)
 .. S RCLINE=+Y
"RTN","RCDPEWLA",81,0)
 .. ; Add adj record
"RTN","RCDPEWLA",82,0)
 .. S DIC(0)="L",DLAYGO=344.4911,DA(2)=RCSCR,DA(1)=RCLINE,DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWLA",83,0)
 .. S DIC("DR")=".02////"_$S(RCDEC:2+RCADJ,1:4+RCADJ)_";.03////"_$P(Q0,U,3)_";.05////"_$S('RCDEC:"3;.06////0;.08////0",1:"0;.06////1;.08////1")_";.07////"_$S(RCADJ:Z_";.04////"_$P(^TMP($J,"RCA",Z,Z0),U),1:+$P(^TMP($J,"RCA",Z,Z0),U,2))
"RTN","RCDPEWLA",84,0)
 .. F RCX=$O(^RCY(344.49,RCSCR,1,RCLINE,1," "),-1)+1:1 I '$D(^RCY(344.49,RCSCR,1,RCLINE,1,X,0)) L +^RCY(344.49,RCSCR,1,RCLINE,1,RCX,0):1 Q:$T
"RTN","RCDPEWLA",85,0)
 .. S X=RCX
"RTN","RCDPEWLA",86,0)
 .. D FILE^DICN K DIC,DO,DD,DA
"RTN","RCDPEWLA",87,0)
 .. L -^RCY(344.49,RCSCR,1,RCLINE,1,RCX,0)
"RTN","RCDPEWLA",88,0)
 .. S DA(1)=RCSCR,DA=RCLINE,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".06////"_$P(Q0,U,3)_";.08////"_$P(Q0,U,3) D ^DIE
"RTN","RCDPEWLA",89,0)
 .. S Q1=$G(^RCY(344.49,RCSCR,1,RCLINE,0))
"RTN","RCDPEWLA",90,0)
 .. ; Upd seq ref,adj,payment in 'parent'
"RTN","RCDPEWLA",91,0)
 .. I $G(^TMP($J,"RCA",Z)) D
"RTN","RCDPEWLA",92,0)
 ... S DA(1)=RCSCR,DA=+^TMP($J,"RCA",Z),DIE="^RCY(344.49,"_DA(1)_",1,"
"RTN","RCDPEWLA",93,0)
 ... S DR=".09////"_$S(RCADJ:$S($P(Z,"**ADJ",2):$P(Z,"**",2),1:"TOTALS MISMATCH"),1:$P(^TMP($J,"RCA",Z,Z0),U,2))_";.06////"_$J($P($G(^RCY(344.49,DA(1),1,DA,0)),U,6)+$P(Q0,U,3),"",2)_";.08////"_$P(Q0,U,3)
"RTN","RCDPEWLA",94,0)
 ... D ^DIE
"RTN","RCDPEWLA",95,0)
 ;
"RTN","RCDPEWLA",96,0)
 K ^TMP($J,"RCA")
"RTN","RCDPEWLA",97,0)
 Q
"RTN","RCDPEWLA",98,0)
 ;
"RTN","RCDPEWLA",99,0)
SELSORT(RCQUIT) ; Function returns selection of sort for worklist entries
"RTN","RCDPEWLA",100,0)
 ; RCQUIT returned = 1 if passed by ref and user aborts question
"RTN","RCDPEWLA",101,0)
 N DIR,X,Y,DTOUT,DUOUT
"RTN","RCDPEWLA",102,0)
 S DIR(0)="SA^N:NO ORDER;F:ZERO-PAYMENTS FIRST;L:ZERO-PAYMENTS LAST",DIR("A")="ORDER OF PAYMENTS: ",DIR("B")="NO ORDER" W ! D ^DIR K DIR
"RTN","RCDPEWLA",103,0)
 I $D(DTOUT)!$D(DUOUT) S RCQUIT=1,Y=""
"RTN","RCDPEWLA",104,0)
 S $P(^TMP($J,"RC_SORTPARM"),U)=Y
"RTN","RCDPEWLA",105,0)
 Q Y
"RTN","RCDPEWLA",106,0)
 ;
"RTN","RCDPEWLA",107,0)
TOOOLD(RCDEP) ; Check if deposit in ien RCDPE (file 344.1) is too old to use
"RTN","RCDPEWLA",108,0)
 N RCOLD,Q,DIR,X,Y
"RTN","RCDPEWLA",109,0)
 S Q=$$FMADD^XLFDT(DT,-7),RCOLD=0
"RTN","RCDPEWLA",110,0)
 I $P($G(^RCY(344.1,RCDEP,0)),U,3)<Q D
"RTN","RCDPEWLA",111,0)
 . S DIR("A",1)="THIS DEPOSIT WAS OPENED MORE THAN ONE WEEK AGO ("_$$FMTE^XLFDT($P($G(^RCY(344.1,RCDEP,0)),U,3),2)_")",DIR("A")="ARE YOU SURE YOU WANT TO USE THIS DEPOSIT?: ",DIR("B")="NO",DIR(0)="YA" W ! D ^DIR K DIR
"RTN","RCDPEWLA",112,0)
 . I Y'=1 S RCOLD=1
"RTN","RCDPEWLA",113,0)
 Q RCOLD
"RTN","RCDPEWLA",114,0)
 ;
"RTN","RCDPEX")
0^99^B75590588
"RTN","RCDPEX",1,0)
RCDPEX ;ALB/TMK - ELECTRONIC EOB EXCEPTION PROCESSING - FILE 344.5 ;10-OCT-02
"RTN","RCDPEX",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEX",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEX",4,0)
 Q
"RTN","RCDPEX",5,0)
 ;
"RTN","RCDPEX",6,0)
UPD ; Update (File) ERA msgs manually from EOB exception list for file 344.5
"RTN","RCDPEX",7,0)
 N RCDA,RCOK,RCTDA,ZTSK,RCTSK,RCTYP,RCU,RC0
"RTN","RCDPEX",8,0)
 D FULL^VALM1
"RTN","RCDPEX",9,0)
 D SEL(.RCDA,1)
"RTN","RCDPEX",10,0)
 S RCDA=$O(RCDA(""))
"RTN","RCDPEX",11,0)
 I RCDA="" G UPDQ
"RTN","RCDPEX",12,0)
 S RCTDA=+RCDA(RCDA)
"RTN","RCDPEX",13,0)
 I '$$LOCK(RCTDA) G UPDQ
"RTN","RCDPEX",14,0)
 S RC0=$G(^RCY(344.5,RCTDA,0))
"RTN","RCDPEX",15,0)
 ;
"RTN","RCDPEX",16,0)
 I RC0="" D  G UPDQ
"RTN","RCDPEX",17,0)
 . W !,*7,"ERA #",RCDA," is no longer in exception file" S RCOK=""
"RTN","RCDPEX",18,0)
 . D PAUSE^VALM1
"RTN","RCDPEX",19,0)
 I $P(RC0,U,5) S RCOK=1 D  G:'RCOK UPDQ
"RTN","RCDPEX",20,0)
 . N ZTSK
"RTN","RCDPEX",21,0)
 . S ZTSK=$P(RC0,U,5) D STAT^%ZTLOAD Q:ZTSK(0)=0  ;Task not scheduled
"RTN","RCDPEX",22,0)
 . I "12"[ZTSK(1) W *7,!,"This record has already been scheduled for update.  Task # is: ",$P(RC0,U,5) S RCOK="" D PAUSE^VALM1
"RTN","RCDPEX",23,0)
 ;
"RTN","RCDPEX",24,0)
 S RCTYP=$P(RC0,U,2)
"RTN","RCDPEX",25,0)
 S RCU=$S(RCTYP="835ERA":"NEWERA^RCDPESR2("_RCTDA_",1)",RCTYP="835XFR":"FILEEOB^RCDPESR5("_RCTDA_")",1:"")
"RTN","RCDPEX",26,0)
 I RCU="" W !,*7,"This message has an invalid 'type' - can't update" D PAUSE^VALM1 G UPDQ
"RTN","RCDPEX",27,0)
 S RCTSK=$$TASK(RCU,RCTDA)
"RTN","RCDPEX",28,0)
 I RCTSK W !,"File update has been tasked (#",RCTSK,")"
"RTN","RCDPEX",29,0)
 I 'RCTSK W !,*7,"File update could not be tasked.  Please try again later!!!"
"RTN","RCDPEX",30,0)
 D PAUSE^VALM1
"RTN","RCDPEX",31,0)
 ;
"RTN","RCDPEX",32,0)
 D BLD^RCDPEX1
"RTN","RCDPEX",33,0)
UPDQ I $G(RCTDA) L -^RCY(344.5,RCTDA,0)
"RTN","RCDPEX",34,0)
 S VALMBCK="R"
"RTN","RCDPEX",35,0)
 Q
"RTN","RCDPEX",36,0)
 ;
"RTN","RCDPEX",37,0)
VP ; View/Print ERA Messages - File 344.5
"RTN","RCDPEX",38,0)
 N DHD,DIC,FLDS,BY,FR,TO,DIR,Y,L,RCDA,RCTDA,RCRAW,POP
"RTN","RCDPEX",39,0)
 D FULL^VALM1,SEL(.RCDA,1)
"RTN","RCDPEX",40,0)
 S RCDA=$O(RCDA(""))
"RTN","RCDPEX",41,0)
 G:'RCDA VPQ
"RTN","RCDPEX",42,0)
 S RCTDA=$G(RCDA(RCDA))
"RTN","RCDPEX",43,0)
 S DIR(0)="YA",DIR("A")="DO YOU WANT TO INCLUDE DATA THE WAY IT WAS RECEIVED (RAW DATA)?: ",DIR("B")="N" D ^DIR K DIR
"RTN","RCDPEX",44,0)
 I $D(DUOUT)!$D(DTOUT) G VPQ
"RTN","RCDPEX",45,0)
 S RCRAW=+Y
"RTN","RCDPEX",46,0)
 ; Ask device
"RTN","RCDPEX",47,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","RCDPEX",48,0)
 S %ZIS="QM" D ^%ZIS G:POP VPQ
"RTN","RCDPEX",49,0)
 I $D(IO("Q")) D  G VPQ
"RTN","RCDPEX",50,0)
 . S ZTRTN="VPOUT^RCDPEX",ZTDESC="AR - Print EEOB Exception Message"
"RTN","RCDPEX",51,0)
 . S ZTSAVE("RCTDA")="",ZTSAVE("RCRAW")=""
"RTN","RCDPEX",52,0)
 . D ^%ZTLOAD
"RTN","RCDPEX",53,0)
 . W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEX",54,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEX",55,0)
 U IO
"RTN","RCDPEX",56,0)
 ;
"RTN","RCDPEX",57,0)
VPOUT ; Entrypoint for queued job
"RTN","RCDPEX",58,0)
 N Z,Z0,RCSTOP,RCPG,RCXM,RCXM1,RC,RCZ,RCTDAC
"RTN","RCDPEX",59,0)
 K ^TMP($J,"RCRAW"),^TMP($J,"RCOUT")
"RTN","RCDPEX",60,0)
 S RCTDAC=RCTDA_","
"RTN","RCDPEX",61,0)
 ;
"RTN","RCDPEX",62,0)
 D GETS^DIQ(344.5,RCTDAC,"*","IEN","RCZ")
"RTN","RCDPEX",63,0)
 D TXTDE(RCTDA,.RCZ,1,.RCXM,.RC)
"RTN","RCDPEX",64,0)
 ;
"RTN","RCDPEX",65,0)
 I $O(^RCY(344.5,RCTDA,"EX",0)) D
"RTN","RCDPEX",66,0)
 . S RC=RC+1,RCXM(RC)="**EXCEPTION MESSAGES**"
"RTN","RCDPEX",67,0)
 . D TXTDE(RCTDA,.RCZ,5,.RCXM,.RC)
"RTN","RCDPEX",68,0)
 ;
"RTN","RCDPEX",69,0)
 K ^TMP("RCSAVE",$J)
"RTN","RCDPEX",70,0)
 M ^TMP("RCSAVE",$J)=^RCY(344.5,RCTDA,2)
"RTN","RCDPEX",71,0)
 S Z=0 F  S Z=$O(^TMP("RCSAVE",$J,Z)) Q:'Z  I $P($G(^(Z,0)),U)["835" K ^(0) Q  ; Get rid of header node
"RTN","RCDPEX",72,0)
 D DISP^RCDPESR0("^TMP(""RCSAVE"",$J)","^TMP($J,""RCRAW"")",1,"^TMP($J,""RCOUT"")",75) ; Get formatted 'raw' data
"RTN","RCDPEX",73,0)
 K ^TMP("RCSAVE",$J)
"RTN","RCDPEX",74,0)
 I $G(RCRAW) D
"RTN","RCDPEX",75,0)
 . S RC=$O(^TMP($J,"RCOUT",""),-1)+1,^TMP($J,"RCOUT",RC)=" "
"RTN","RCDPEX",76,0)
 . S RC=RC+1,^TMP($J,"RCOUT",RC)="**RAW DATA**"
"RTN","RCDPEX",77,0)
 . S Z=0 F  S Z=$O(^RCY(344.5,RCTDA,2,Z)) Q:'Z  D
"RTN","RCDPEX",78,0)
 .. F Z0=1:80:$L($G(^RCY(344.5,RCTDA,2,Z,0))) S RC=RC+1,^TMP($J,"RCOUT",RC)=$E($G(^RCY(344.5,RCTDA,2,Z,0)),Z0,Z0+79)
"RTN","RCDPEX",79,0)
 ;
"RTN","RCDPEX",80,0)
 S (RCPG,RCSTOP,Z)=0
"RTN","RCDPEX",81,0)
 F  S Z=$O(RCXM(Z)) Q:'Z  S ^TMP($J,"RCOUT",Z-999)=RCXM(Z)
"RTN","RCDPEX",82,0)
 S Z=""
"RTN","RCDPEX",83,0)
 F  S Z=$O(^TMP($J,"RCOUT",Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEX",84,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W !,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEX",85,0)
 . I 'RCPG!(($Y+5)>IOSL) D  I RCSTOP Q
"RTN","RCDPEX",86,0)
 .. D:RCPG ASK(.RCSTOP) I RCSTOP Q
"RTN","RCDPEX",87,0)
 .. D HDR(RCTDA,.RCPG)
"RTN","RCDPEX",88,0)
 . W !,$G(^TMP($J,"RCOUT",Z))
"RTN","RCDPEX",89,0)
 I 'RCSTOP,RCPG D ASK(.RCSTOP)
"RTN","RCDPEX",90,0)
 ;
"RTN","RCDPEX",91,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEX",92,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEX",93,0)
 ;
"RTN","RCDPEX",94,0)
VPQ K ^TMP($J,"RCRAW"),^TMP($J,"RCOUT")
"RTN","RCDPEX",95,0)
 S VALMBCK="R"
"RTN","RCDPEX",96,0)
 Q
"RTN","RCDPEX",97,0)
 ;
"RTN","RCDPEX",98,0)
SEL(RCDA,ONE) ; Select entry(s) from list
"RTN","RCDPEX",99,0)
 ; RCDA = array returned if selections made
"RTN","RCDPEX",100,0)
 ;    RCDA(n)=ien of bill selected in file 344.5
"RTN","RCDPEX",101,0)
 ; ONE = if set to 1, only one selection can be made at a time
"RTN","RCDPEX",102,0)
 N RC
"RTN","RCDPEX",103,0)
 K RCDA
"RTN","RCDPEX",104,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","RCDPEX",105,0)
 S RCDA=0 F  S RCDA=$O(VALMY(RCDA)) Q:'RCDA  S RC=$G(^TMP("RCDPEX-EOBDX",$J,RCDA)),RCDA(RCDA)=+$P(RC,U,2)
"RTN","RCDPEX",106,0)
 Q
"RTN","RCDPEX",107,0)
 ;
"RTN","RCDPEX",108,0)
 ;
"RTN","RCDPEX",109,0)
DEL ; Delete messages from messages list - file 344.5
"RTN","RCDPEX",110,0)
 N RCDA,RCOK,RCTDA,RCTDAC,RCTYP,RCU,RC0,DIR,RCT,RCE,RCDIQ,RCX,Z,X,Y,XMSUBJ,XMTO,XMBODY,XMDUZ,XMZ
"RTN","RCDPEX",111,0)
 D FULL^VALM1
"RTN","RCDPEX",112,0)
 S RCTDA=0
"RTN","RCDPEX",113,0)
 D SEL(.RCDA,1)
"RTN","RCDPEX",114,0)
 S RCDA=$O(RCDA(""))
"RTN","RCDPEX",115,0)
 I RCDA="" G DELQ
"RTN","RCDPEX",116,0)
 W !
"RTN","RCDPEX",117,0)
 S DIR(0)="YA",DIR("A",1)="This action will PERMANENTLY delete an EDI Lockbox message from your system",DIR("A",2)="A bulletin will be sent to report the deletion",DIR("A",3)=" "
"RTN","RCDPEX",118,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE? ",DIR("B")="NO"
"RTN","RCDPEX",119,0)
 D ^DIR K DIR
"RTN","RCDPEX",120,0)
 G:Y'=1 DELQ
"RTN","RCDPEX",121,0)
 S RCTDA=+RCDA(RCDA),RCTDAC=RCTDA_","
"RTN","RCDPEX",122,0)
 I '$$LOCK(RCTDA) G DELQ
"RTN","RCDPEX",123,0)
 S RC0=$G(^RCY(344.5,RCTDA,0))
"RTN","RCDPEX",124,0)
 ;
"RTN","RCDPEX",125,0)
 I $P(RC0,U,5) S RCOK=1 D  G:'RCOK DELQ
"RTN","RCDPEX",126,0)
 . N ZTSK
"RTN","RCDPEX",127,0)
 . S ZTSK=$P(RC0,U,5) D STAT^%ZTLOAD Q:ZTSK(0)=0  ;Task not scheduled
"RTN","RCDPEX",128,0)
 . I "12"[ZTSK(1) W *7,!,"This message is currently scheduled for update.  Task # is: ",$P(RC0,U,11) S RCOK="" D PAUSE^VALM1
"RTN","RCDPEX",129,0)
 ;
"RTN","RCDPEX",130,0)
 S DIR(0)="YA",DIR("A",1)=" ",DIR("A",2)="",$P(DIR("A",2),"*",54)="",DIR("A",3)="* This EDI Lockbox message is about to be PERMANENTLY deleted!! *",DIR("A",4)=DIR("A",2),DIR("A",5)=" "
"RTN","RCDPEX",131,0)
 S DIR("A")="ARE YOU STILL SURE YOU WANT TO CONTINUE? ",DIR("B")="NO"
"RTN","RCDPEX",132,0)
 W ! D ^DIR W ! K DIR
"RTN","RCDPEX",133,0)
 I Y'=1 W !!,"Nothing deleted" D PAUSE^VALM1 G DELQ
"RTN","RCDPEX",134,0)
 ;
"RTN","RCDPEX",135,0)
 D GETS^DIQ(344.5,RCTDAC,"*","IEN","RCDIQ")
"RTN","RCDPEX",136,0)
 S RCE=0
"RTN","RCDPEX",137,0)
 D TXTDE(RCTDA,.RCDIQ,1,.RCX,.RCE)
"RTN","RCDPEX",138,0)
 S RCE=RCE+1,RCX(RCE)="RAW MESSAGE DATA:"
"RTN","RCDPEX",139,0)
 D TXTDE(RCTDA,.RCDIQ,2,.RCX,.RCE)
"RTN","RCDPEX",140,0)
 D DELMSG(RCTDA)
"RTN","RCDPEX",141,0)
 I $D(^RCY(344.5,RCTDA)) D  G DELQ
"RTN","RCDPEX",142,0)
 . W !,"Message not deleted - problem with delete" D PAUSE^VALM1
"RTN","RCDPEX",143,0)
 ;
"RTN","RCDPEX",144,0)
 I $P(RC0,U,2)["XFR",'$P(RC0,U,14) D
"RTN","RCDPEX",145,0)
 . S DIR(0)="YA"
"RTN","RCDPEX",146,0)
 . S DIR("A")="ARE YOU DELETING THIS BECAUSE THE EEOB DOES NOT BELONG TO YOUR SITE?: ",DIR("B")="YES",DIR("?")="IF YOU RESPOND YES TO THIS QUESTION, A REJECT MESSAGE WILL BE SENT BACK TO",DIR("?",1)=" THE SENDING SITE FOR THIS EEOB"
"RTN","RCDPEX",147,0)
 .  W ! D ^DIR K DIR
"RTN","RCDPEX",148,0)
 . Q:Y'=1
"RTN","RCDPEX",149,0)
 . D SENDACK^RCDPESR5(RCTDA,0) ; Send reject notice
"RTN","RCDPEX",150,0)
 S RCT(1)="Electronic EDI Lockbox message "_$P(RC0,U)_" has been deleted"
"RTN","RCDPEX",151,0)
 S RCT(2)=" "
"RTN","RCDPEX",152,0)
 S RCT(3)="DELETED BY: "_$P($G(^VA(200,+$G(DUZ),0)),U)_"   "_$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","RCDPEX",153,0)
 S RCT(4)=" ",RCE=+$O(RCT(""),-1)
"RTN","RCDPEX",154,0)
 S Z=0 F  S Z=$O(RCX(Z)) Q:'Z  S RCE=RCE+1,RCT(RCE)=RCX(Z)
"RTN","RCDPEX",155,0)
 S RCE=RCE+1,RCT(RCE)=" "
"RTN","RCDPEX",156,0)
 S XMSUBJ="EDI LBOX MESSAGE DELETED",XMBODY="RCT",XMDUZ="",XMTO("I:G.RCDPE PAYMENTS")=""
"RTN","RCDPEX",157,0)
 D SENDMSG^XMXAPI(.5,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPEX",158,0)
 ;
"RTN","RCDPEX",159,0)
 W !,"A bulletin has been sent to report this deletion",!
"RTN","RCDPEX",160,0)
 D PAUSE^VALM1
"RTN","RCDPEX",161,0)
 ;
"RTN","RCDPEX",162,0)
 D BLD^RCDPEX1
"RTN","RCDPEX",163,0)
DELQ L -^RCY(344.5,RCTDA,0)
"RTN","RCDPEX",164,0)
 S VALMBCK="R"
"RTN","RCDPEX",165,0)
 Q
"RTN","RCDPEX",166,0)
 ;
"RTN","RCDPEX",167,0)
DELMSG(RCTDA) ; Delete message from temporary message holding file 344.5
"RTN","RCDPEX",168,0)
 ;
"RTN","RCDPEX",169,0)
 N DIK,DA,Y S DIK="^RCY(344.5,",DA=RCTDA D ^DIK
"RTN","RCDPEX",170,0)
 Q
"RTN","RCDPEX",171,0)
 ;
"RTN","RCDPEX",172,0)
TASK(RCRTN,RCTDA) ; Schedule the task to update data base from message
"RTN","RCDPEX",173,0)
 ; RCRTN = routine to task
"RTN","RCDPEX",174,0)
 ; RCTDA = internal entry of message in file 344.5
"RTN","RCDPEX",175,0)
 ;
"RTN","RCDPEX",176,0)
 N ZTSK,ZTDESC,ZTIO,ZTDTH,ZTSAVE,DA,DR,DIE
"RTN","RCDPEX",177,0)
 S ZTIO="",ZTDTH=$H,ZTDESC="UPDATE DATA BASE FROM EEOB EXCEPTION PROCESSING",ZTSAVE("RC*")="",ZTRTN=RCRTN
"RTN","RCDPEX",178,0)
 D ^%ZTLOAD
"RTN","RCDPEX",179,0)
 I $G(ZTSK),$G(^RCY(344.5,RCTDA,0)) D
"RTN","RCDPEX",180,0)
 . S DIE="^RCY(344.5,",DR=".05////"_ZTSK_";.04////1;.08////0",DA=RCTDA D ^DIE
"RTN","RCDPEX",181,0)
 Q $G(ZTSK)
"RTN","RCDPEX",182,0)
 ;
"RTN","RCDPEX",183,0)
LOCK(RCTDA) ; Attempt to lock message file entry RCTDA in file 344.5
"RTN","RCDPEX",184,0)
 ; Return 1 if successful, 0 if not able to lock
"RTN","RCDPEX",185,0)
 ;
"RTN","RCDPEX",186,0)
 N OK
"RTN","RCDPEX",187,0)
 S OK=1
"RTN","RCDPEX",188,0)
 L +^RCY(344.5,RCTDA,0):5
"RTN","RCDPEX",189,0)
 I '$T D
"RTN","RCDPEX",190,0)
 . I '$D(DIQUIET) W !,*7,"Another user is editing this entry ... please try again later" D PAUSE^VALM1
"RTN","RCDPEX",191,0)
 . S OK=0
"RTN","RCDPEX",192,0)
 Q OK
"RTN","RCDPEX",193,0)
 ;
"RTN","RCDPEX",194,0)
HDR(RCTDA,RCPG) ;Prints report heading
"RTN","RCDPEX",195,0)
 ; RCTDA = ien of file 344.5
"RTN","RCDPEX",196,0)
 ; RCPG = page # last printed
"RTN","RCDPEX",197,0)
 N Z
"RTN","RCDPEX",198,0)
 I RCPG!($E(IOST,1,2)="C-") W @IOF,*13
"RTN","RCDPEX",199,0)
 I 'RCPG D
"RTN","RCDPEX",200,0)
 . N RCX,RCZ
"RTN","RCDPEX",201,0)
 . D TXT0(RCTDA,.RCZ,.RCX,0) ; Get 0-node captioned fields
"RTN","RCDPEX",202,0)
 . S Z=0 F  S Z=$O(RCX(Z)) Q:'Z  S ^TMP($J,"RCHDR_EX",Z)=RCX(Z)
"RTN","RCDPEX",203,0)
 S RCPG=RCPG+1
"RTN","RCDPEX",204,0)
 W !,?15,"EDI LBOX - EEOB EXCEPTIONS - EEOB DETAIL",?55,$$FMTE^XLFDT(DT,2),?70,"Page: ",RCPG,!
"RTN","RCDPEX",205,0)
 S Z=0 F  S Z=$O(^TMP($J,"RCHDR_EX",Z)) Q:'Z  W !,$G(^(Z))
"RTN","RCDPEX",206,0)
 W !,$TR($J("",IOM)," ","=")
"RTN","RCDPEX",207,0)
 Q
"RTN","RCDPEX",208,0)
 ;
"RTN","RCDPEX",209,0)
ASK(RCSTOP) ; Ask to stop
"RTN","RCDPEX",210,0)
 ; RCSTOP: passed by ref, flag to stop processing
"RTN","RCDPEX",211,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEX",212,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEX",213,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEX",214,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEX",215,0)
 Q
"RTN","RCDPEX",216,0)
 ; ***
"RTN","RCDPEX",217,0)
 ; *** Entrypoints TXT* assume these parameter definitions ***
"RTN","RCDPEX",218,0)
 ; ***
"RTN","RCDPEX",219,0)
 ; FUNCTIONs returns RCXM1 and RCCT if passed by reference
"RTN","RCDPEX",220,0)
 ; RCTDA = ien, file 344.5
"RTN","RCDPEX",221,0)
 ; RCXM1 = the array returned with text, captioned
"RTN","RCDPEX",222,0)
 ; RCCT = # of lines already in array (optional)
"RTN","RCDPEX",223,0)
 ; RCDIQ = the array returned from GETS^DIQ
"RTN","RCDPEX",224,0)
 ; ***
"RTN","RCDPEX",225,0)
 ;
"RTN","RCDPEX",226,0)
TXT0(RCTDA,RCDIQ,RCXM1,RCCT) ; Append 0-node captioned data to array RCXM1
"RTN","RCDPEX",227,0)
 ; See above for parameter definitions
"RTN","RCDPEX",228,0)
 ;
"RTN","RCDPEX",229,0)
 N RCZ,RCTDAC,LINE,DAT,Z,Z0
"RTN","RCDPEX",230,0)
 S LINE="",RCCT=+$G(RCCT),RCTDAC=RCTDA_","
"RTN","RCDPEX",231,0)
 S Z=0 F  S Z=$O(RCDIQ(344.5,RCTDAC,Z)) Q:'Z!(Z'<1)  D
"RTN","RCDPEX",232,0)
 . S Z0=$$GET1^DID(344.5,Z,,"LABEL")
"RTN","RCDPEX",233,0)
 . S DAT=Z0_": "_$G(RCDIQ(344.5,RCTDAC,Z,"E"))
"RTN","RCDPEX",234,0)
 . I $L(DAT)>39 S:$L(LINE) RCCT=RCCT+1,RCXM1(RCCT)=LINE S RCCT=RCCT+1,RCXM1(RCCT)=DAT,LINE="" Q
"RTN","RCDPEX",235,0)
 . I $L(LINE) D  Q:LINE=""  ; Left side exists
"RTN","RCDPEX",236,0)
 .. I $L(LINE)+$L(DAT)>75 S RCCT=RCCT+1,RCXM1(RCCT)=LINE,LINE=DAT Q
"RTN","RCDPEX",237,0)
 .. S LINE=LINE_"  "_DAT,RCCT=RCCT+1,RCXM1(RCCT)=LINE,LINE=""
"RTN","RCDPEX",238,0)
 . S LINE=$E(DAT_$J("",39),1,39)
"RTN","RCDPEX",239,0)
 I $L(LINE) S RCCT=RCCT+1,RCXM1(RCCT)=LINE
"RTN","RCDPEX",240,0)
 S:RCCT RCCT=RCCT+1,RCXM1(RCCT)=" "
"RTN","RCDPEX",241,0)
 Q
"RTN","RCDPEX",242,0)
 ;
"RTN","RCDPEX",243,0)
TXTDE(RCTDA,RCDIQ,RCNODE,RCXM1,RCCT) ; Append display data to array RCXM1
"RTN","RCDPEX",244,0)
 ; See above for parameter definitions
"RTN","RCDPEX",245,0)
 ; RCNODE = the WP field # to return
"RTN","RCDPEX",246,0)
 ;
"RTN","RCDPEX",247,0)
 N RCCT1,LINE,Z,RCTDAC
"RTN","RCDPEX",248,0)
 S LINE="",RCCT=+$G(RCCT),RCCT1=RCCT
"RTN","RCDPEX",249,0)
 S RCTDAC=RCTDA_","
"RTN","RCDPEX",250,0)
 S Z=0 F  S Z=$O(RCDIQ(344.5,RCTDAC,RCNODE,Z)) Q:'Z  D
"RTN","RCDPEX",251,0)
 . S RCCT=RCCT+1,RCXM1(RCCT)=$G(RCDIQ(344.5,RCTDAC,RCNODE,Z))
"RTN","RCDPEX",252,0)
 S:RCCT'=RCCT1 RCCT=RCCT+1,RCXM1(RCCT)=" "
"RTN","RCDPEX",253,0)
 Q
"RTN","RCDPEX",254,0)
 ;
"RTN","RCDPEX0")
0^100^B18970844
"RTN","RCDPEX0",1,0)
RCDPEX0 ;ALB/TMK - 837 EDI RETURN MSG EXTRACT MAIN LIST TEMPLATE ;02-MAY-96
"RTN","RCDPEX0",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEX0",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEX0",4,0)
 ;
"RTN","RCDPEX0",5,0)
SCRIT(RCSCRIT) ; Enter display selection criteria
"RTN","RCDPEX0",6,0)
 ; Pass RCSCRIT by reference - returned containing selection criteria
"RTN","RCDPEX0",7,0)
 ; RCSCRIT(n)=n-level sort RCSCRIT(n,1-x)=selections
"RTN","RCDPEX0",8,0)
 ;  RCSCRIT(n,"D1") = from DATE range  RCSCRIT(n,"D2") = to DATE range 
"RTN","RCDPEX0",9,0)
 N DIR,X,Y
"RTN","RCDPEX0",10,0)
 D FULL^VALM1
"RTN","RCDPEX0",11,0)
 W !
"RTN","RCDPEX0",12,0)
 S DIR("B")="ALL"
"RTN","RCDPEX0",13,0)
 S DIR("A",1)="Enter sort and selection criteria for message list",DIR("A",2)=" ",DIR("A")="First level sort field: "
"RTN","RCDPEX0",14,0)
 S DIR(0)="SA^MT:TYPE OF MESSAGE;ER:TYPE OF ERROR;ALL:ALL MESSAGES"
"RTN","RCDPEX0",15,0)
 S DIR("?")="Enter the top-level sort for the list of messages"
"RTN","RCDPEX0",16,0)
 D ^DIR K DIR
"RTN","RCDPEX0",17,0)
 I $D(DIRUT) K RCSCRIT Q
"RTN","RCDPEX0",18,0)
 S RCSCRIT(1)=Y
"RTN","RCDPEX0",19,0)
 I Y="ALL" Q
"RTN","RCDPEX0",20,0)
 D SELECT(1,.RCSCRIT) Q:'$D(RCSCRIT)
"RTN","RCDPEX0",21,0)
 S DIR("A",1)=" ",DIR("A")="Second level sort field: "
"RTN","RCDPEX0",22,0)
 S DIR(0)="SAO^"_$S($S(RCSCRIT(1)'="MT":"MT:TYPE OF MESSAGE;",1:"")_RCSCRIT(1)'="MS":"ER:TYPE OF ERROR;",1:"")_"MD:ERA MESSAGE DATE;RD:ERA RECORDED DATE"
"RTN","RCDPEX0",23,0)
 S DIR("?")="Enter the second-level sort for the list of messages"
"RTN","RCDPEX0",24,0)
 S DIR("?",1)="First level sort selected was: "_$$FLD(RCSCRIT(1))
"RTN","RCDPEX0",25,0)
 D ^DIR K DIR
"RTN","RCDPEX0",26,0)
 I $D(DTOUT)!$D(DUOUT) K RCSCRIT Q
"RTN","RCDPEX0",27,0)
 I Y="" Q
"RTN","RCDPEX0",28,0)
 S RCSCRIT(2)=Y
"RTN","RCDPEX0",29,0)
 D SELECT(2,.RCSCRIT) Q:'$D(RCSCRIT)
"RTN","RCDPEX0",30,0)
 S DIR("A",1)=" ",DIR("A")="Third level sort field: "
"RTN","RCDPEX0",31,0)
 S DIR(0)="SAO^"
"RTN","RCDPEX0",32,0)
 S DIR(0)=DIR(0)_$S(RCSCRIT(1)'="MT"&(RCSCRIT(2)'="MT"):"MT:TYPE OF MESSAGE;",1:"")_$S(RCSCRIT(1)'="ER"&(RCSCRIT(2)'="ER"):"ER:TYPE OF ERROR",1:"")
"RTN","RCDPEX0",33,0)
 S DIR(0)=DIR(0)_$S(RCSCRIT(2)'="MD":"MD:ERA MESSAGE DATE;",1:"")_$S(RCSCRIT(2)'="RD":"RD:ERA RECORDED DATE",1:"")
"RTN","RCDPEX0",34,0)
 S DIR("?")="Enter the third-level sort for the list of messages"
"RTN","RCDPEX0",35,0)
 D ^DIR K DIR
"RTN","RCDPEX0",36,0)
 I $D(DTOUT)!$D(DUOUT) K RCSCRIT Q
"RTN","RCDPEX0",37,0)
 I Y="" Q
"RTN","RCDPEX0",38,0)
 S RCSCRIT(3)=Y
"RTN","RCDPEX0",39,0)
 D SELECT(3,.RCSCRIT)
"RTN","RCDPEX0",40,0)
 Q
"RTN","RCDPEX0",41,0)
 ;
"RTN","RCDPEX0",42,0)
SELECT(LEVEL,RCSCRIT) ; Select specific or all values/date range for RCSCRIT(LEVEL)
"RTN","RCDPEX0",43,0)
 ; LEVEL = sort level 1-3
"RTN","RCDPEX0",44,0)
 N SELNM,SEL,CT,Y,DIR,DUOUT,DTOUT,DIRUT,X,Z
"RTN","RCDPEX0",45,0)
 S SEL=$G(RCSCRIT(LEVEL)) I SEL="" K RCSCRIT Q
"RTN","RCDPEX0",46,0)
 S SELNM=$$FLD(SEL)
"RTN","RCDPEX0",47,0)
RESEL S DIR("A")="Do you want ALL "_SELNM_"'s",DIR(0)="Y",DIR("?")="ANSWER YES TO INCLUDE ALL "_SELNM_" OR NO TO SELECT SPECIFIC VALUES OR RANGES"
"RTN","RCDPEX0",48,0)
 D ^DIR K DIR
"RTN","RCDPEX0",49,0)
 I $D(DIRUT) K RCSCRIT Q
"RTN","RCDPEX0",50,0)
 I Y=1 Q
"RTN","RCDPEX0",51,0)
 I SEL="MD"!(SEL="RD") D  Q  ;Date field
"RTN","RCDPEX0",52,0)
 . S DIR("A")="From Date: ",DIR(0)="DA^:"_DT_":P",DIR("?")="Enter the earliest date you want included in the list" D ^DIR
"RTN","RCDPEX0",53,0)
 . I $D(DIRUT) K RCSCRIT Q
"RTN","RCDPEX0",54,0)
 . S RCSCRIT(LEVEL,"D1")=Y I 'X W "  ",$$FMTE^XLFDT(Y,2)
"RTN","RCDPEX0",55,0)
 . S DIR("A")="To Date: ",DIR(0)="DA^:"_DT_":P",DIR("?")="Enter the latest date you want included in the list" D ^DIR
"RTN","RCDPEX0",56,0)
 . I $D(DIRUT) K RCSCRIT Q
"RTN","RCDPEX0",57,0)
 . S RCSCRIT(LEVEL,"D2")=Y I 'X W "  ",$$FMTE^XLFDT(Y,2)
"RTN","RCDPEX0",58,0)
 S CT=0
"RTN","RCDPEX0",59,0)
 S DIR("A",1)=" ",DIR("A",2)="Enter your selections one at a time.",DIR("A",3)="When done, press return at the "_SELNM_" prompt to continue."
"RTN","RCDPEX0",60,0)
 S DIR("A")=SELNM_": ",DIR(0)=$S(SEL="ER":"344.5,.1",SEL="MT":"344.5,.02",1:"")_"AO"
"RTN","RCDPEX0",61,0)
 F  D ^DIR D  Q:"^"[Y
"RTN","RCDPEX0",62,0)
 . Q:$D(DUOUT)
"RTN","RCDPEX0",63,0)
 . I Y="" Q:CT  W !,*7,"You must select at least one entry" S Y=-1 Q
"RTN","RCDPEX0",64,0)
 . S CT=CT+1,RCSCRIT(LEVEL,$P(Y,U))=Y
"RTN","RCDPEX0",65,0)
 . I $D(DIR("A",1)) F Z=1:1:3 K DIR("A",Z)
"RTN","RCDPEX0",66,0)
 K DIR
"RTN","RCDPEX0",67,0)
 I $D(DUOUT)!$D(DTOUT) D  I $D(RCSCRIT) K RCSCRIT(LEVEL) S RCSCRIT(LEVEL)=SEL G RESEL
"RTN","RCDPEX0",68,0)
 . S DIR(0)="Y",DIR("A",1)=" ",DIR("A")="Do you want to abort this entire sort/selection"
"RTN","RCDPEX0",69,0)
 . S DIR("?")="Answer YES if you want to abort or to re-enter all sort/selection criteria",DIR("?",1)="Answer NO if you want to re-enter just this sort level's criteria"
"RTN","RCDPEX0",70,0)
 . D ^DIR K DIR
"RTN","RCDPEX0",71,0)
 . I $D(DIRUT)!Y K RCSCRIT
"RTN","RCDPEX0",72,0)
 Q
"RTN","RCDPEX0",73,0)
 ;
"RTN","RCDPEX0",74,0)
FLD(FLD) ; RETURN NAME OF FIELD
"RTN","RCDPEX0",75,0)
 Q $S(FLD="ER":"ERROR CATEGORY",FLD="MT":"TYPE OF MESSAGE",FLD="MD":"MESSAGE DATE",FLD="RD":"DATE RECORDED",1:"")
"RTN","RCDPEX0",76,0)
 ;
"RTN","RCDPEX1")
0^101^B15134260
"RTN","RCDPEX1",1,0)
RCDPEX1 ;ALB/TMK - ELECTRONIC EOB MESSAGE EXCEPTIONS PROCESS ;02-MAY-96
"RTN","RCDPEX1",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEX1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEX1",4,0)
 ;
"RTN","RCDPEX1",5,0)
EN ; Main entry point
"RTN","RCDPEX1",6,0)
 D DT^DICRW
"RTN","RCDPEX1",7,0)
 N XQORS,VALMEVL,RCFASTXT,RCDA,RCEXCTYP,DIR,Y,X
"RTN","RCDPEX1",8,0)
 ; Ask for TRANSMISSION exceptions or DATA exceptions
"RTN","RCDPEX1",9,0)
 S DIR("A")="DO YOU WANT TO SEE (T)RANSMISSION OR (D)ATA EXCEPTIONS?: ",DIR("B")="T",DIR(0)="SAO^T:TRANSMISSION;D:DATA"
"RTN","RCDPEX1",10,0)
 S DIR("?",1)="TRANSMISSION EXCEPTIONS INCLUDE ANY PROBLEM ENCOUNTERED WHEN AN ERA/EEOB",DIR("?",2)="  IS RECEIVED AT THE SITE AND BEFORE IT IS STORED PERMANENTLY IN VISTA."
"RTN","RCDPEX1",11,0)
 S DIR("?",3)="  THIS INCLUDES PARTIAL MESSAGE RECEIPTS, EXTRACT PROBLEMS AND EEOBs THAT ",DIR("?",4)="  WERE TRANSFERRED IN FROM ANOTHER SITE."
"RTN","RCDPEX1",12,0)
 S DIR("?",5)="DATA EXCEPTIONS INCLUDE EEOB DETAIL RECORDS FOR SPECIFIC BILLS THAT CAN'T BE"
"RTN","RCDPEX1",13,0)
 S DIR("?",6)="  FULLY PROCESSED INTO THE VISTA SYSTEM.  THIS INCLUDES EEOB DETAIL FOR",DIR("?",7)="  CLAIMS THAT NEED TO BE TRANSFERRED TO ANOTHER SITE OR WHOSE DETAIL COULD",DIR("?")="  NOT BE STORED IN IB"
"RTN","RCDPEX1",14,0)
 D ^DIR K DIR
"RTN","RCDPEX1",15,0)
 S RCEXCTYP=Y
"RTN","RCDPEX1",16,0)
 ; Transmission exceptions
"RTN","RCDPEX1",17,0)
 I RCEXCTYP="T" D EN^VALM("RCDPEX EOB EXCEPTION LIST")
"RTN","RCDPEX1",18,0)
 I RCEXCTYP="D" D EN^VALM("RCDPEX EOB_SUM EXCEPTION LIST")
"RTN","RCDPEX1",19,0)
 K RCFASTXT,RCDA
"RTN","RCDPEX1",20,0)
 Q
"RTN","RCDPEX1",21,0)
 ;
"RTN","RCDPEX1",22,0)
INIT ; -- set up inital variables
"RTN","RCDPEX1",23,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","RCDPEX1",24,0)
 D BLD
"RTN","RCDPEX1",25,0)
 Q
"RTN","RCDPEX1",26,0)
 ;
"RTN","RCDPEX1",27,0)
REBLD ; Set up formatted global
"RTN","RCDPEX1",28,0)
 ;
"RTN","RCDPEX1",29,0)
BLD ; -- build list of messages
"RTN","RCDPEX1",30,0)
 N DA,DR,RCSEQ,RCMSG,RCS,RCER,RCDPDATA,RC0,TOOSOON,X,Z
"RTN","RCDPEX1",31,0)
 K ^TMP("RCDPEX-EOB",$J),^TMP("RCDPEX-EOBDX",$J)
"RTN","RCDPEX1",32,0)
 S (RCMSG,RCSEQ,VALMCNT)=0
"RTN","RCDPEX1",33,0)
 ;
"RTN","RCDPEX1",34,0)
 ; Extract from 344.5
"RTN","RCDPEX1",35,0)
 F  S RCMSG=$O(^RCY(344.5,"AEXC",1,RCMSG)) Q:'RCMSG  S RC0=$G(^(RCMSG,0)) D
"RTN","RCDPEX1",36,0)
 . I ($P(RC0,U,3)\1)=DT S TOOSOON=0 D  Q:TOOSOON
"RTN","RCDPEX1",37,0)
 .. ; If partial msg, allow a day before it's an exception
"RTN","RCDPEX1",38,0)
 .. I $P(RC0,U,10)=2 Q
"RTN","RCDPEX1",39,0)
 . ;
"RTN","RCDPEX1",40,0)
 . ; -- add to list
"RTN","RCDPEX1",41,0)
 . ;Display message id, type, date recorded, exception, mail msg #
"RTN","RCDPEX1",42,0)
 . S RCSEQ=RCSEQ+1
"RTN","RCDPEX1",43,0)
 . S DR=".01:.03;.1;.11",DA=RCMSG D DIQ3445(DA,DR)
"RTN","RCDPEX1",44,0)
 . S X=""
"RTN","RCDPEX1",45,0)
 . S X=$$SETSTR^VALM1($E(RCSEQ_$J("",4),1,4)_"  "_$G(RCDPDATA(344.5,RCMSG,.01,"E")),"",1,26)
"RTN","RCDPEX1",46,0)
 . S X=$$SETSTR^VALM1("  "_$E($G(RCDPDATA(344.5,RCMSG,.02,"I")),4,6),X,27,9)
"RTN","RCDPEX1",47,0)
 . S X=$$SETSTR^VALM1("  "_$G(RCDPDATA(344.5,RCMSG,.03,"E")),X,36,22)
"RTN","RCDPEX1",48,0)
 . S X=$$SETSTR^VALM1("  "_$G(RCDPDATA(344.5,RCMSG,.11,"E")),X,58,17)
"RTN","RCDPEX1",49,0)
 . D SET(X,344.5,RCMSG,RCSEQ)
"RTN","RCDPEX1",50,0)
 . S X=$J("",4)_"EXCEPTION: "_$G(RCDPDATA(344.5,RCMSG,.1,"E"))
"RTN","RCDPEX1",51,0)
 . D SET(X,344.5,RCMSG,RCSEQ)
"RTN","RCDPEX1",52,0)
 . S DR=1,DA=RCMSG D DIQ3445(DA,DR) ; Get display data
"RTN","RCDPEX1",53,0)
 . S Z=0 F  S Z=$O(RCDPDATA(344.5,RCMSG,1,Z)) Q:'Z  S X=$J("",6)_RCDPDATA(344.5,RCMSG,1,Z) D SET(X,344.5,RCMSG,RCSEQ)
"RTN","RCDPEX1",54,0)
 ;
"RTN","RCDPEX1",55,0)
 I '$D(^TMP("RCDPEX-EOB",$J)) S VALMCNT=2,^TMP("RCDPEX-EOB",$J,1,0)=" ",^TMP("RCDPEX-EOB",$J,2,0)="   There Are No EEOB Exception Records On File"
"RTN","RCDPEX1",56,0)
 Q
"RTN","RCDPEX1",57,0)
 ;
"RTN","RCDPEX1",58,0)
FNL ; -- Clean up list
"RTN","RCDPEX1",59,0)
 K ^TMP("RCDPEX-EOBDX",$J)
"RTN","RCDPEX1",60,0)
 D CLEAN^VALM10
"RTN","RCDPEX1",61,0)
 K RCFASTXT
"RTN","RCDPEX1",62,0)
 Q
"RTN","RCDPEX1",63,0)
 ;
"RTN","RCDPEX1",64,0)
SET(X,FILE,RCMSG,RCSEQ) ; -- set arrays for EOB exception records
"RTN","RCDPEX1",65,0)
 ; X = the data to set into the global
"RTN","RCDPEX1",66,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPEX-EOB",$J,VALMCNT,0)=X
"RTN","RCDPEX1",67,0)
 S ^TMP("RCDPEX-EOB",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEX1",68,0)
 S ^TMP("RCDPEX-EOBDX",$J,RCSEQ)=VALMCNT_U_RCMSG_U_FILE
"RTN","RCDPEX1",69,0)
 Q
"RTN","RCDPEX1",70,0)
 ;
"RTN","RCDPEX1",71,0)
HDR ;
"RTN","RCDPEX1",72,0)
 S VALMHDR(1)=$J("",21)_"ERA/EEOB MESSAGES WITH EXCEPTION CONDITIONS"
"RTN","RCDPEX1",73,0)
 S VALMHDR(2)=" "
"RTN","RCDPEX1",74,0)
 Q
"RTN","RCDPEX1",75,0)
 ;
"RTN","RCDPEX1",76,0)
DIQ3445(DA,DR) ; DIQ call to retrieve data for DR fields in file 344.5
"RTN","RCDPEX1",77,0)
 N %I,D0,DIC,DIQ,DIQ2,YY
"RTN","RCDPEX1",78,0)
 K RCDPDATA(344.5,DA)
"RTN","RCDPEX1",79,0)
 S DIQ(0)="EI",DIC="^RCY(344.5,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPEX1",80,0)
 Q
"RTN","RCDPEX1",81,0)
 ;
"RTN","RCDPEX1",82,0)
DIQ3444(DA,DR) ; DIQ call to retrieve data for DR fields in file 344.5
"RTN","RCDPEX1",83,0)
 N %I,D0,DIC,DIQ,DIQ2,YY
"RTN","RCDPEX1",84,0)
 K RCDPDATA(344.4,DA)
"RTN","RCDPEX1",85,0)
 S DIQ(0)="EI",DIC="^RCY(344.4,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPEX1",86,0)
 Q
"RTN","RCDPEX1",87,0)
 ;
"RTN","RCDPEX2")
0^102^B14767482
"RTN","RCDPEX2",1,0)
RCDPEX2 ;ALB/TMK - ELECTRONIC EOB DETAIL EXCEPTION MAIN LIST TEMPLATE ;24-OCT-02
"RTN","RCDPEX2",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEX2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEX2",4,0)
 ;
"RTN","RCDPEX2",5,0)
INIT ; -- set up inital variables
"RTN","RCDPEX2",6,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","RCDPEX2",7,0)
 D BLD
"RTN","RCDPEX2",8,0)
 Q
"RTN","RCDPEX2",9,0)
 ;
"RTN","RCDPEX2",10,0)
REBLD ; Set up formatted global
"RTN","RCDPEX2",11,0)
 ;
"RTN","RCDPEX2",12,0)
BLD ; -- build list of messages from file 344.4
"RTN","RCDPEX2",13,0)
 N RCBILL,RCSUB,RCSEQ,RCMSG,RCEXC,RCS,RCER,RCDPDATA,RCX,RC0,DA,X,DR,Y
"RTN","RCDPEX2",14,0)
 K ^TMP("RCDPEX_SUM-EOB",$J),^TMP("RCDPEX_SUM-EOBDX",$J)
"RTN","RCDPEX2",15,0)
 S (RCMSG,RCSEQ,VALMCNT)=0
"RTN","RCDPEX2",16,0)
 ;
"RTN","RCDPEX2",17,0)
 ; Extract from 344.4
"RTN","RCDPEX2",18,0)
 S RCER=0
"RTN","RCDPEX2",19,0)
 F  S RCER=$O(^RCY(344.4,"AEXC",RCER)) Q:'RCER  F  S RCMSG=$O(^RCY(344.4,"AEXC",RCER,RCMSG)) Q:'RCMSG  D
"RTN","RCDPEX2",20,0)
 . ;Extract trace #, ins co name/id, ERA Date
"RTN","RCDPEX2",21,0)
 . S RCSUB=RCMSG_",",DR=".02:.06",DA=RCMSG K DA(1) D DIQ3444(DA,DR)
"RTN","RCDPEX2",22,0)
 . S RCX("TRACE")=$G(RCDPDATA(344.4,RCSUB,.02,"E"))
"RTN","RCDPEX2",23,0)
 . S RCX=$$SETSTR^VALM1("  "_$E($G(RCDPDATA(344.4,RCSUB,.06,"E")),1,25)_"/"_$E($G(RCDPDATA(344.4,RCSUB,.03,"E")),1,20),"",22,48)
"RTN","RCDPEX2",24,0)
 . S RCX=$$SETSTR^VALM1("  "_$$FMTE^XLFDT($G(RCDPDATA(344.4,RCSUB,.04,"I")),2),RCX,70,10)
"RTN","RCDPEX2",25,0)
 . ;
"RTN","RCDPEX2",26,0)
 . S RCS=0 F  S RCS=$O(^RCY(344.4,"AEXC",RCER,RCMSG,RCS)) Q:'RCS  S RC0=$G(^RCY(344.4,RCMSG,1,RCS,0)) D
"RTN","RCDPEX2",27,0)
 .. S RCSEQ=RCSEQ+1
"RTN","RCDPEX2",28,0)
 .. S RCX=$$SETSTR^VALM1($E(RCSEQ_$J("",4),1,4)_"  "_$G(RCX("TRACE")),RCX,1,21)
"RTN","RCDPEX2",29,0)
 .. D SET(RCX,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",30,0)
 .. S DA(1)=RCMSG,DA=RCS,RCSUB=DA_","_DA(1)_","
"RTN","RCDPEX2",31,0)
 .. S DR=".01;.02;.03;.05;.07;.08;.1;.11;.12;.15",DA=RCS D DIQ3444(.DA,DR)
"RTN","RCDPEX2",32,0)
 .. S X=$$SETSTR^VALM1($J("",6)_"Seq #: "_$G(RCDPDATA(344.41,RCSUB,.01,"E")),"",1,17)
"RTN","RCDPEX2",33,0)
 .. S RCBILL=$S($G(RCDPDATA(344.41,RCSUB,.02,"E"))'="":RCDPDATA(344.41,RCSUB,.02,"E"),1:"*"_$G(RCDPDATA(344.41,RCSUB,.05,"E")))
"RTN","RCDPEX2",34,0)
 .. S X=$$SETSTR^VALM1(" Bill: "_RCBILL,X,18,20)
"RTN","RCDPEX2",35,0)
 .. S X=$$SETSTR^VALM1(" Pt: "_$G(RCDPDATA(344.41,RCSUB,.15,"E")),X,38,25)
"RTN","RCDPEX2",36,0)
 .. S X=$$SETSTR^VALM1(" Pd: "_$J(+$G(RCDPDATA(344.41,RCSUB,.03,"E")),"",2),X,63,17)
"RTN","RCDPEX2",37,0)
 .. D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",38,0)
 .. I $P(RC0,U,11) D
"RTN","RCDPEX2",39,0)
 ... S X=$J("",10)_"Transferred To: "_$G(RCDPDATA(344.41,RCSUB,.11,"E"))
"RTN","RCDPEX2",40,0)
 ... S X=$$SETSTR^VALM1("  On: "_$$FMTE^XLFDT($G(RCDPDATA(344.41,RCSUB,.12,"I")),2),X,$L(X)+1,25)
"RTN","RCDPEX2",41,0)
 ... D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",42,0)
 .. S RCEXC=$S($G(RCDPDATA(344.41,RCSUB,.07,"I"))=99:$S($G(RCDPDATA(344.41,RCSUB,.08,"E"))'="":RCDPDATA(344.41,RCSUB,.08,"E"),1:"UNKNOWN"),1:$G(RCDPDATA(344.41,RCSUB,.07,"E")))
"RTN","RCDPEX2",43,0)
 .. S X=$J("",10)_"**Exception: "_RCEXC_$S($P(RC0,U,7)=1:$S('$P(RC0,U,11):" (TRANSFER NEEDED IF NOT YOURS)",$P(RC0,U,10)=0:" (TRANSFER REJECTED)",$P(RC0,U,16):" (TRANSFER ACKNOWLEDGED)",1:" (TRANSFER NOT ACKNOWLEDGED)"),1:"")
"RTN","RCDPEX2",44,0)
 .. D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",45,0)
 ;
"RTN","RCDPEX2",46,0)
 I '$D(^TMP("RCDPEX_SUM-EOB",$J)) S VALMCNT=2,^TMP("RCDPEX_SUM-EOB",$J,1,0)=" ",^TMP("RCDPEX_SUM-EOB",$J,2,0)="   There Are No EEOB Detail Exceptions On File"
"RTN","RCDPEX2",47,0)
 Q
"RTN","RCDPEX2",48,0)
 ;
"RTN","RCDPEX2",49,0)
FNL ; -- Clean up list
"RTN","RCDPEX2",50,0)
 K ^TMP("RCDPEX_SUM-EOBDX",$J)
"RTN","RCDPEX2",51,0)
 D CLEAN^VALM10
"RTN","RCDPEX2",52,0)
 K RCFASTXT
"RTN","RCDPEX2",53,0)
 Q
"RTN","RCDPEX2",54,0)
 ;
"RTN","RCDPEX2",55,0)
SET(X,RCSEQ,RCMSG,RCS) ; -- set arrays for EOB exception records
"RTN","RCDPEX2",56,0)
 ; X = the data to set into the global
"RTN","RCDPEX2",57,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPEX_SUM-EOB",$J,VALMCNT,0)=X
"RTN","RCDPEX2",58,0)
 S ^TMP("RCDPEX_SUM-EOB",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEX2",59,0)
 S ^TMP("RCDPEX_SUM-EOBDX",$J,RCSEQ)=VALMCNT_U_RCMSG_U_RCS
"RTN","RCDPEX2",60,0)
 Q
"RTN","RCDPEX2",61,0)
 ;
"RTN","RCDPEX2",62,0)
HDR ;
"RTN","RCDPEX2",63,0)
 S VALMHDR(1)=$J("",19)_"EEOB DETAIL DATA WITH EXCEPTION CONDITIONS"
"RTN","RCDPEX2",64,0)
 S VALMHDR(2)=" "
"RTN","RCDPEX2",65,0)
 Q
"RTN","RCDPEX2",66,0)
 ;
"RTN","RCDPEX2",67,0)
DIQ3444(DA,DR) ; DIQ call to retrieve data for DR fields in file 344.4/344.41
"RTN","RCDPEX2",68,0)
 N %I,D0,DIC,DIQ,DIQ2,YY,FILE
"RTN","RCDPEX2",69,0)
 S FILE=$S($D(DA(1)):344.41,1:344.4)
"RTN","RCDPEX2",70,0)
 K RCDPDATA(FILE)
"RTN","RCDPEX2",71,0)
 D GETS^DIQ(FILE,DA_","_$S($G(DA(1)):DA(1)_",",1:""),DR,"EI","RCDPDATA")
"RTN","RCDPEX2",72,0)
 Q
"RTN","RCDPEX2",73,0)
 ;
"RTN","RCDPEX3")
0^103^B75060334
"RTN","RCDPEX3",1,0)
RCDPEX3 ;ALB/TMK - ELECTRONIC EOB EXCEPTION PROCESSING - FILE 344.4 ;10-OCT-02
"RTN","RCDPEX3",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEX3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEX3",4,0)
 ; IA REF TO ^IBE(350.9 = 4049
"RTN","RCDPEX3",5,0)
 Q
"RTN","RCDPEX3",6,0)
 ;
"RTN","RCDPEX3",7,0)
VP ; View/Print ERA Msgs - File 344.4
"RTN","RCDPEX3",8,0)
 N X,Y,RCDA,RCTDA,RCALL,DIR,POP
"RTN","RCDPEX3",9,0)
 D FULL^VALM1
"RTN","RCDPEX3",10,0)
 S DIR(0)="SA^A:ALL;S:SELECTED",DIR("A")="PRINT (A)LL or (S)ELECTED RECORDS?: "
"RTN","RCDPEX3",11,0)
 S DIR("B")="ALL"
"RTN","RCDPEX3",12,0)
 D ^DIR K DIR
"RTN","RCDPEX3",13,0)
 G:$D(DUOUT)!$D(DTOUT) VPQ
"RTN","RCDPEX3",14,0)
 S RCALL=(Y="A")
"RTN","RCDPEX3",15,0)
 ;
"RTN","RCDPEX3",16,0)
 I 'RCALL D  G:'$O(RCDA("")) VPQ
"RTN","RCDPEX3",17,0)
 . D SEL(.RCDA)
"RTN","RCDPEX3",18,0)
 ;
"RTN","RCDPEX3",19,0)
 ; device
"RTN","RCDPEX3",20,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","RCDPEX3",21,0)
 S %ZIS="QM" D ^%ZIS G:POP VPQ
"RTN","RCDPEX3",22,0)
 I $D(IO("Q")) D  G VPQ
"RTN","RCDPEX3",23,0)
 . S ZTRTN="VPOUT^RCDPEX3",ZTDESC="AR - Print ERA/EEOB Data With Exceptions"
"RTN","RCDPEX3",24,0)
 . S ZTSAVE("RCDA")="",ZTSAVE("RCALL")="",ZTSAVE("^TMP(""RCDPEX_SUM-EOBDX"",$J,")=""
"RTN","RCDPEX3",25,0)
 . D ^%ZTLOAD
"RTN","RCDPEX3",26,0)
 . W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEX3",27,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEX3",28,0)
 U IO
"RTN","RCDPEX3",29,0)
 ;
"RTN","RCDPEX3",30,0)
VPOUT ; Entrypoint queued job
"RTN","RCDPEX3",31,0)
 ; RCDA, RCALL must be defined
"RTN","RCDPEX3",32,0)
 N Z,RCSTOP,RCZ,RCPG,RCDOT,RCTDA1
"RTN","RCDPEX3",33,0)
 K ^TMP($J,"RC_SUMRAW"),^TMP($J,"RC_SUMOUT")
"RTN","RCDPEX3",34,0)
 S (RCSTOP,RCPG)=0,RCDOT="",$P(RCDOT,".",79)=""
"RTN","RCDPEX3",35,0)
 I RCALL D
"RTN","RCDPEX3",36,0)
 . S RCZ=0 F  S RCZ=$O(^TMP("RCDPEX_SUM-EOBDX",$J,RCZ)) Q:'RCZ  S RCTDA=$G(^(RCZ)),RCTDA1=+$P(RCTDA,U,3),RCTDA=+$P(RCTDA,U,2) D  Q:RCSTOP
"RTN","RCDPEX3",37,0)
 .. D PRT(RCTDA,RCTDA1,.RCPG,.RCSTOP)
"RTN","RCDPEX3",38,0)
 .. I $O(^TMP("RCDPEX_SUM-EOBDX",$J,RCZ)) D WRTSEP(RCDOT,RCPG)
"RTN","RCDPEX3",39,0)
 I 'RCALL D
"RTN","RCDPEX3",40,0)
 . S RCZ=0 F  S RCZ=$O(RCDA(RCZ)) Q:'RCZ  D
"RTN","RCDPEX3",41,0)
 .. S RCTDA1=+$P(RCDA(RCZ),U,2),RCTDA=+RCDA(RCZ) D PRT(RCTDA,RCTDA1,.RCPG,.RCSTOP) I $O(RCDA(RCZ)) D WRTSEP(RCDOT,RCPG)
"RTN","RCDPEX3",42,0)
 ;
"RTN","RCDPEX3",43,0)
 I '$D(ZTQUEUED),'RCSTOP,RCPG D ASK(.RCSTOP)
"RTN","RCDPEX3",44,0)
 ;
"RTN","RCDPEX3",45,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEX3",46,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEX3",47,0)
 ;
"RTN","RCDPEX3",48,0)
VPQ K ^TMP($J,"RC_SUMRAW"),^TMP($J,"RC_SUMOUT")
"RTN","RCDPEX3",49,0)
 S VALMBCK="R"
"RTN","RCDPEX3",50,0)
 Q
"RTN","RCDPEX3",51,0)
 ;
"RTN","RCDPEX3",52,0)
WRTSEP(RCDOT,RCPG) ; Separating lines if more records to print
"RTN","RCDPEX3",53,0)
 W !,RCDOT,!,RCDOT
"RTN","RCDPEX3",54,0)
 I (($Y+5)>IOSL) D HDR(.RCPG) Q
"RTN","RCDPEX3",55,0)
 W !!
"RTN","RCDPEX3",56,0)
 Q
"RTN","RCDPEX3",57,0)
 ;
"RTN","RCDPEX3",58,0)
PRT(RCTDA,RCTDA1,RCPG,RCSTOP) ; Print data from file 344.4 and 344.41
"RTN","RCDPEX3",59,0)
 ; RCTDA = ien file 344.4
"RTN","RCDPEX3",60,0)
 ; RCTDA1 = ien file 344.41
"RTN","RCDPEX3",61,0)
 ; RCPG = last page extracted
"RTN","RCDPEX3",62,0)
 ; RCSTOP = returned 1 if passed by ref and process stopped
"RTN","RCDPEX3",63,0)
 ;
"RTN","RCDPEX3",64,0)
 N RCDIQ,RCDIQ1,RCDIQ2,RCXM1,RC,Z
"RTN","RCDPEX3",65,0)
 D GETS^DIQ(344.4,RCTDA_",","*","IEN","RCDIQ")
"RTN","RCDPEX3",66,0)
 D TXT0^RCDPEX31(RCTDA,.RCDIQ,.RCXM1,.RC) ; Get top level 0-node captioned fields
"RTN","RCDPEX3",67,0)
 ;
"RTN","RCDPEX3",68,0)
 I $O(^RCY(344.4,RCTDA,2,0)) S RC=RC+1,RCXM1(RC)="  **ERA LEVEL ADJUSTMENTS**"
"RTN","RCDPEX3",69,0)
 S Z=0 F  S Z=$O(^RCY(344.4,RCTDA,2,Z)) Q:'Z  D
"RTN","RCDPEX3",70,0)
 . D GETS^DIQ(344.42,Z_","_RCTDA_",","*","IEN","RCDIQ2")
"RTN","RCDPEX3",71,0)
 . D TXT2^RCDPEX31(RCTDA,Z,.RCDIQ2,.RCXM1,.RC) ; Get top level ERA adjs
"RTN","RCDPEX3",72,0)
 ;
"RTN","RCDPEX3",73,0)
 D GETS^DIQ(344.41,RCTDA1_","_RCTDA_",","*","IEN","RCDIQ1")
"RTN","RCDPEX3",74,0)
 D TXT00^RCDPEX31(RCTDA,RCTDA1,.RCDIQ1,.RCXM1,.RC)
"RTN","RCDPEX3",75,0)
 D DISP^RCDPESR0("^RCY(344.4,"_RCTDA_",1,"_RCTDA1_",1)","^TMP($J,""RC_SUMRAW"")",1,"^TMP($J,""RC_SUMOUT"")",75) ; Get formatted 'raw' data
"RTN","RCDPEX3",76,0)
 ;
"RTN","RCDPEX3",77,0)
 I $D(RCDIQ1(344.41,RCTDA1_","_RCTDA_",",2)) D
"RTN","RCDPEX3",78,0)
 . S RC=RC+1,RCXM1(RC)="  **RESOLUTION LOG DATA**"
"RTN","RCDPEX3",79,0)
 . S Z=0 F  S Z=$O(RCDIQ1(344.41,RCTDA1_","_RCTDA_",",2,Z)) Q:'Z  S RC=RC+1,RCXM1(RC)=RCDIQ1(344.41,RCTDA1_","_RCTDA_",",2,Z)
"RTN","RCDPEX3",80,0)
 . S RC=RC+1,RCXM1(RC)=" "
"RTN","RCDPEX3",81,0)
 S (RCSTOP,Z)=0
"RTN","RCDPEX3",82,0)
 F  S Z=$O(RCXM1(Z)) Q:'Z  S ^TMP($J,"RC_SUMOUT",Z-999)=RCXM1(Z)
"RTN","RCDPEX3",83,0)
 S Z=""
"RTN","RCDPEX3",84,0)
 F  S Z=$O(^TMP($J,"RC_SUMOUT",Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEX3",85,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEX3",86,0)
 . I 'RCPG!(($Y+5)>IOSL) D  I RCSTOP Q
"RTN","RCDPEX3",87,0)
 .. D:RCPG ASK(.RCSTOP) I RCSTOP Q
"RTN","RCDPEX3",88,0)
 .. D HDR(.RCPG)
"RTN","RCDPEX3",89,0)
 . W !,$G(^TMP($J,"RC_SUMOUT",Z))
"RTN","RCDPEX3",90,0)
 ;
"RTN","RCDPEX3",91,0)
 Q
"RTN","RCDPEX3",92,0)
 ;
"RTN","RCDPEX3",93,0)
XFR ; Transfer EOB(s) to other site
"RTN","RCDPEX3",94,0)
 N RC,RC0,RCCHG,RCOK,RCDOMAIN,RCDEF,RCDA,RCWHY,RCER,RCECT,RCXTO,RCALL,RCCONT,DIR,X,Y,DA,DIE,DR,POP,RCDA,RCXDA,RCXDA1,RCDUZ,XMBODY,XMTO
"RTN","RCDPEX3",95,0)
 D FULL^VALM1
"RTN","RCDPEX3",96,0)
 D SEL(.RCDA)
"RTN","RCDPEX3",97,0)
 ;
"RTN","RCDPEX3",98,0)
 G:'$O(RCDA(0)) XFRQ
"RTN","RCDPEX3",99,0)
 S DIR("S")="I +$G(^DIC(4,+Y,6))",DIR(0)="PA^4:AME",DIR("A")="TRANSFER TO WHICH SITE?: " D ^DIR K DIR
"RTN","RCDPEX3",100,0)
 I $D(DUOUT)!$D(DTOUT) G XFRQ
"RTN","RCDPEX3",101,0)
 S RCXTO=+Y,RCCHG=0
"RTN","RCDPEX3",102,0)
 ;
"RTN","RCDPEX3",103,0)
 S RCDOMAIN=$$EXTERNAL^DILFD(4,60,,+$G(^DIC(4,+RCXTO,6))),RCECT=0
"RTN","RCDPEX3",104,0)
 I RCDOMAIN="" D  G XFRQ
"RTN","RCDPEX3",105,0)
 . S DIR("A",1)="THERE IS NO VALID DOMAIN SET UP FOR THIS SITE. YOU MUST CHOOSE ANOTHER ONE.",DIR("A")="PRESS RETURN TO CONTINUE",DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEX3",106,0)
 ;
"RTN","RCDPEX3",107,0)
 S RCDEF=$S($P($G(^IBE(350.9,1,2)),U,6)'="":$E("AGENT CASHIER-"_$P(^IBE(350.9,1,2),U,6),1,45),1:"")
"RTN","RCDPEX3",108,0)
 S DIR("A",1)="ENTER THE CONTACT INFORMATION FOR THE PERSON AT YOUR SITE",DIR("A",2)="   WHO MAY BE CONTACTED BY THE OTHER SITE REGARDING THIS EEOB",DIR("A")="   (1-45 CHARACTERS): "_$S(RCDEF'="":RCDEF_"// ",1:"") ; IA 4049
"RTN","RCDPEX3",109,0)
 S DIR(0)="FA"_$S(RCDEF'="":"O",1:"")_"^1:45" W ! D ^DIR K DIR
"RTN","RCDPEX3",110,0)
 I $D(DUOUT)!$D(DTOUT) G XFRQ
"RTN","RCDPEX3",111,0)
 I Y="" S Y=RCDEF
"RTN","RCDPEX3",112,0)
 S RCCONT=Y
"RTN","RCDPEX3",113,0)
 ;
"RTN","RCDPEX3",114,0)
 S DIR(0)="YA",DIR("A")="DO YOU WANT TO PRINT THE EEOB(s)?: ",DIR("B")="Y"
"RTN","RCDPEX3",115,0)
 D ^DIR K DIR
"RTN","RCDPEX3",116,0)
 I $D(DUOUT)!$D(DTOUT) G XFRQ
"RTN","RCDPEX3",117,0)
 I Y=1 S RCER=0 D  I RCER G XFRQ
"RTN","RCDPEX3",118,0)
 . N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","RCDPEX3",119,0)
 . S %ZIS="QM" D ^%ZIS I POP S RCER=1 Q
"RTN","RCDPEX3",120,0)
 . I $D(IO("Q")) D  Q
"RTN","RCDPEX3",121,0)
 .. S RCALL=0
"RTN","RCDPEX3",122,0)
 .. S ZTRTN="VPOUT^RCDPEX3",ZTDESC="AR - Print EEOB Data Before Transfer"
"RTN","RCDPEX3",123,0)
 .. S ZTSAVE("RCDA")="",ZTSAVE("RCALL")="",ZTSAVE("^TMP(""RCDPEX_SUM-EOBDX"",$J)")=""
"RTN","RCDPEX3",124,0)
 .. D ^%ZTLOAD
"RTN","RCDPEX3",125,0)
 .. I '$D(ZTSK) S RCER=1
"RTN","RCDPEX3",126,0)
 .. K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEX3",127,0)
 . S RCALL=0
"RTN","RCDPEX3",128,0)
 . D VPOUT^RCDPEX3
"RTN","RCDPEX3",129,0)
 ;
"RTN","RCDPEX3",130,0)
 S RCWHY(1)="Transfer EEOB detail to another site"
"RTN","RCDPEX3",131,0)
 S RC=0 F  S RC=$O(RCDA(RC)) Q:'RC  D  L -^RCY(344.4,RCXDA,1,RCXDA1,0)
"RTN","RCDPEX3",132,0)
 . N RCBODY,RCAMT,RCBILL,RCX,XMZ
"RTN","RCDPEX3",133,0)
 . S RCXDA=+RCDA(RC),RCXDA1=+$P(RCDA(RC),U,2),RCWHY(2)=""
"RTN","RCDPEX3",134,0)
 . I '$$LOCK^RCDPEX31(RCXDA,RCXDA1,1) D  Q
"RTN","RCDPEX3",135,0)
 .. S RCECT=RCECT+1,RCER(RCECT)="**Selection #"_RC_" is being edited by another user - ... please try again later"
"RTN","RCDPEX3",136,0)
 . ;
"RTN","RCDPEX3",137,0)
 . S RC0=$G(^RCY(344.4,RCXDA,1,RCXDA1,0))
"RTN","RCDPEX3",138,0)
 . M RCBODY=^RCY(344.4,RCXDA,1,RCXDA1,1)
"RTN","RCDPEX3",139,0)
 . S RCAMT=$P(RC0,U,3)
"RTN","RCDPEX3",140,0)
 . S RCBILL=$P(RC0,U,5)
"RTN","RCDPEX3",141,0)
 . S DIR("A",1)="ONCE THIS EEOB HAS BEEN TRANSFERRED, ITS BILL # CANNOT BE EDITED",DIR("A")="ARE YOU SURE THIS IS NOT A CLAIM FOR YOUR SITE?: ",DIR(0)="YA",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEX3",142,0)
 . Q:Y'=1
"RTN","RCDPEX3",143,0)
 . I $P(RC0,U,11) D  Q:'RCOK
"RTN","RCDPEX3",144,0)
 .. S RCOK=1
"RTN","RCDPEX3",145,0)
 .. S DIR("A",1)="WARNING: EEOB FOR #"_RC_" ("_RCBILL_") HAS ALREADY BEEN TRANSFERRED",DIR("A",2)="   TO "_$P($G(^DIC(4,+$P(RC0,U,11),0)),U)_"   ON: "_$$FMTE^XLFDT($P(RC0,U,12),2)
"RTN","RCDPEX3",146,0)
 .. S DIR("A")="ARE YOU SURE YOU WANT TO TRANSFER IT AGAIN?: "
"RTN","RCDPEX3",147,0)
 .. S DIR(0)="YA",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEX3",148,0)
 .. I Y=1 Q
"RTN","RCDPEX3",149,0)
 .. S RCOK=0
"RTN","RCDPEX3",150,0)
 .. S RCECT=RCECT+1,RCER(RCECT)="**Selection #"_RC_" already transferred - "_RCBILL_" NOT transferred again"
"RTN","RCDPEX3",151,0)
 . K RCBODY(0)
"RTN","RCDPEX3",152,0)
 . S RCX=$G(RCBODY(1,0))
"RTN","RCDPEX3",153,0)
 . ;
"RTN","RCDPEX3",154,0)
 . I $P($G(^RCY(344.4,RCXDA,1,RCXDA1,0)),U,7)'=1 D  Q
"RTN","RCDPEX3",155,0)
 .. S RCECT=RCECT+1,RCER(RCECT)="**Selection #"_RC_" is not available for transfer - "_RCBILL_" NOT transferred"
"RTN","RCDPEX3",156,0)
 . ;
"RTN","RCDPEX3",157,0)
 . I $P(RCX,U)'["835ERA"!'$O(RCBODY(1)) D  Q
"RTN","RCDPEX3",158,0)
 .. S RCECT=RCECT+1,RCER(RCECT)="**Selection #"_RC_" format is not valid for transfer - "_RCBILL_" NOT transferred"
"RTN","RCDPEX3",159,0)
 . ;
"RTN","RCDPEX3",160,0)
 . S $P(RCX,U)="835XFR",$P(RCX,U,10,16)=(RCAMT_"^^^^^^"_RCCONT)
"RTN","RCDPEX3",161,0)
 . S RCBODY(1,0)=RCX
"RTN","RCDPEX3",162,0)
 . S RCBODY(+$O(RCBODY(""),-1)+1,0)="99^$"
"RTN","RCDPEX3",163,0)
 . S RCBODY(+$O(RCBODY(""),-1)+1,0)="NNNN"
"RTN","RCDPEX3",164,0)
 . S XMTO("S.RCDPE EDI LOCKBOX SERVER@"_RCDOMAIN)=""
"RTN","RCDPEX3",165,0)
 . S XMBODY="RCBODY",RCDUZ=$G(DUZ),DUZ=.5
"RTN","RCDPEX3",166,0)
 . D SENDMSG^XMXAPI(.5,"TRANSFER 3RD PARTY EEOB "_RCBILL_"(REF #"_RCXDA_";"_RCXDA1_"#)",XMBODY,.XMTO,,.XMZ)
"RTN","RCDPEX3",167,0)
 . ;
"RTN","RCDPEX3",168,0)
 . S DUZ=RCDUZ
"RTN","RCDPEX3",169,0)
 . I $G(XMZ) D  ; Report msg #
"RTN","RCDPEX3",170,0)
 .. S RCCHG=1
"RTN","RCDPEX3",171,0)
 .. S RCECT=RCECT+1,RCER(RCECT)="Entry #"_RC_" was successfully transferred - msg # is "_XMZ
"RTN","RCDPEX3",172,0)
 .. S DA(1)=RCXDA,DA=RCXDA1,DIE="^RCY(344.4,"_DA(1)_",1,",DR=".09////"_XMZ_";.11////"_RCXTO_";.12////"_$E($$NOW^XLFDT(),1,12) D ^DIE
"RTN","RCDPEX3",173,0)
 .. S RCWHY(2)=" Transfer to "_$P($G(^DIC(4,+RCXTO,0)),U)_" was successful"
"RTN","RCDPEX3",174,0)
 .. ;
"RTN","RCDPEX3",175,0)
 . E  D  ; error - transfer not done
"RTN","RCDPEX3",176,0)
 .. S RCECT=RCECT+1,RCER(RCECT)="**Entry #"_RC_" was NOT transferred due to a msg build error ("_RCBILL_")"
"RTN","RCDPEX3",177,0)
 .. S RCWHY(2)=" Transfer to "_$P($G(^DIC(4,+RCXTO,0)),U)_" was UNSUCCESSFUL"
"RTN","RCDPEX3",178,0)
 .. ;
"RTN","RCDPEX3",179,0)
 . D STORACT^RCDPEX31(RCXDA,RCXDA1,.RCWHY)
"RTN","RCDPEX3",180,0)
 ;
"RTN","RCDPEX3",181,0)
 I $O(RCER(0)) D
"RTN","RCDPEX3",182,0)
 . ; Write msgs
"RTN","RCDPEX3",183,0)
 . W !!,"TRANSFER OF EEOB TO "_$P($G(^DIC(4,RCXTO,0)),U)_" RESULTS: ",!
"RTN","RCDPEX3",184,0)
 . S RCECT=0 F  S RCECT=$O(RCER(RCECT)) Q:'RCECT  W !,"  ",RCER(RCECT)
"RTN","RCDPEX3",185,0)
 . W !
"RTN","RCDPEX3",186,0)
 ;
"RTN","RCDPEX3",187,0)
 D PAUSE^VALM1
"RTN","RCDPEX3",188,0)
 ;
"RTN","RCDPEX3",189,0)
XFRQ I $G(RCCHG) D BLD^RCDPEX2
"RTN","RCDPEX3",190,0)
 S VALMBCK="R"
"RTN","RCDPEX3",191,0)
 Q
"RTN","RCDPEX3",192,0)
 ;
"RTN","RCDPEX3",193,0)
SEL(RCDA,ONE) ; Select entry(s) from list
"RTN","RCDPEX3",194,0)
 ; RCDA = array returned if selections made
"RTN","RCDPEX3",195,0)
 ;    RCDA(n)=ien of bill selected file 344.4
"RTN","RCDPEX3",196,0)
 ; ONE = if set to 1, only one selection can be made at a time
"RTN","RCDPEX3",197,0)
 N RC
"RTN","RCDPEX3",198,0)
 K RCDA
"RTN","RCDPEX3",199,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","RCDPEX3",200,0)
 S RCDA=0 F  S RCDA=$O(VALMY(RCDA)) Q:'RCDA  S RC=$G(^TMP("RCDPEX_SUM-EOBDX",$J,RCDA)),RCDA(RCDA)=+$P(RC,U,2)_U_+$P(RC,U,3)
"RTN","RCDPEX3",201,0)
 Q
"RTN","RCDPEX3",202,0)
 ;
"RTN","RCDPEX3",203,0)
HDR(RCPG) ;Print report hdr
"RTN","RCDPEX3",204,0)
 ; RCPG = last page #
"RTN","RCDPEX3",205,0)
 I RCPG!($E(IOST,1,2)="C-") W @IOF,*13
"RTN","RCDPEX3",206,0)
 S RCPG=$G(RCPG)+1
"RTN","RCDPEX3",207,0)
 W !,?5,"EDI LOCKBOX EEOB DATA EXCEPTIONS - EEOB DETAIL",?55,$$FMTE^XLFDT(DT,2),?70,"Page: ",RCPG,!,$TR($J("",IOM)," ","=")
"RTN","RCDPEX3",208,0)
 Q
"RTN","RCDPEX3",209,0)
 ;
"RTN","RCDPEX3",210,0)
ASK(RCSTOP) ;
"RTN","RCDPEX3",211,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEX3",212,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEX3",213,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEX3",214,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEX3",215,0)
 Q
"RTN","RCDPEX3",216,0)
 ; ***
"RTN","RCDPEX3",217,0)
 ; *** Entrypoints TXT* assume these variable definitions ***
"RTN","RCDPEX3",218,0)
 ; ***
"RTN","RCDPEX3",219,0)
 ; FUNCTIONs returns RCXM1 and RC if passed by reference
"RTN","RCDPEX3",220,0)
 ; RCTDA = ien, file 344.4
"RTN","RCDPEX3",221,0)
 ; RCXM1 = array returned with text, captioned
"RTN","RCDPEX3",222,0)
 ; RC = # of lines already in array (optional)
"RTN","RCDPEX3",223,0)
 ; RCDIQ and RCDIQ1 = arrays returned from GETS^DIQ
"RTN","RCDPEX3",224,0)
 ; ***
"RTN","RCDPEX3",225,0)
 ;
"RTN","RCDPEX3",226,0)
UPD ; Try to update the IB EOB file from exception in 344.41
"RTN","RCDPEX3",227,0)
 D UPD^RCDPEX31 ; Moved for space
"RTN","RCDPEX3",228,0)
 Q
"RTN","RCDPEX3",229,0)
 ;
"RTN","RCDPEX31")
0^104^B38002230
"RTN","RCDPEX31",1,0)
RCDPEX31 ;ALB/TMK - ELECTRONIC EOB EXCEPTION PROCESSING - FILE 344.4 ;10-OCT-02
"RTN","RCDPEX31",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEX31",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEX31",4,0)
 ;
"RTN","RCDPEX31",5,0)
UPD ; Try to update the IB EOB file from exception in 344.41
"RTN","RCDPEX31",6,0)
 N RCDA,RCTDA,RCTDA1,RCWHY,Z,DA,DIE,DR
"RTN","RCDPEX31",7,0)
 D FULL^VALM1
"RTN","RCDPEX31",8,0)
 D SEL^RCDPEX3(.RCDA,1)
"RTN","RCDPEX31",9,0)
 S RCDA=$O(RCDA(0)) G:'RCDA UPDQ
"RTN","RCDPEX31",10,0)
 S RCTDA=+RCDA(RCDA),RCTDA1=+$P(RCDA(RCDA),U,2)
"RTN","RCDPEX31",11,0)
 I '$$LOCK(RCTDA,RCTDA1,0) G UPDQ
"RTN","RCDPEX31",12,0)
 I $P($G(^RCY(344.4,RCTDA,1,RCTDA1,0)),U,7)'=2 D  G UPDQ
"RTN","RCDPEX31",13,0)
 . W !,"EEOB cannot be filed in IB"_$S($P($G(^RCY(344.4,RCTDA,1,RCTDA1,0)),U,7)=1:" - the bill # is invalid",1:"")
"RTN","RCDPEX31",14,0)
 . D PAUSE^VALM1
"RTN","RCDPEX31",15,0)
 I RCTDA,RCTDA1 D UPDEOB^RCDPESR2(RCTDA_";"_RCTDA1,4)
"RTN","RCDPEX31",16,0)
 S Z=$P($G(^RCY(344.4,RCTDA,1,RCTDA1,0)),U,2)
"RTN","RCDPEX31",17,0)
 I Z D  ; Update file 344.41 record
"RTN","RCDPEX31",18,0)
 . S DA(1)=RCTDA,DA=RCTDA1,DR=".07///@;.13////1;.02////"_Z,DIE="^RCY(344.4,"_DA(1)_",1," D ^DIE
"RTN","RCDPEX31",19,0)
 W !,"EEOB DETAIL UPDATE ",$S(Z:"WAS SUCCESSFUL",1:"ENCOUNTERED ERRORS")
"RTN","RCDPEX31",20,0)
 S RCWHY(1)="Update IB with EEOB detail",RCWHY(2)="Update EEOB detail was "_$S('Z:"NOT",1:"")_" successful"
"RTN","RCDPEX31",21,0)
 D STORACT(RCTDA,RCTDA1,.RCWHY)
"RTN","RCDPEX31",22,0)
 D PAUSE^VALM1
"RTN","RCDPEX31",23,0)
 D BLD^RCDPEX2
"RTN","RCDPEX31",24,0)
 ;
"RTN","RCDPEX31",25,0)
UPDQ S VALMBCK="R"
"RTN","RCDPEX31",26,0)
 Q
"RTN","RCDPEX31",27,0)
 ;
"RTN","RCDPEX31",28,0)
DEL ; Delete exception conditions from EOB detail list - file 344.4
"RTN","RCDPEX31",29,0)
 N DIR,X,Y,Z,RCDA,RCOK,RCTDA,RCTDA1,RCWHY,DA,DR,DIE,RC0,RC00,RCDIQ,RCE,RCT,RCX,RCWHYTXT,XMDUZ,XMSUBJ,XMZ,XMER,XMBODY,XMTO,RCDIQ1,DTOUT,DUOUT
"RTN","RCDPEX31",30,0)
 D FULL^VALM1
"RTN","RCDPEX31",31,0)
 D SEL^RCDPEX3(.RCDA,1)
"RTN","RCDPEX31",32,0)
 S RCDA=$O(RCDA(""))
"RTN","RCDPEX31",33,0)
 I RCDA="" G DELQ
"RTN","RCDPEX31",34,0)
 S RCTDA=+RCDA(RCDA),RCTDA1=$P(RCDA(RCDA),U,2)
"RTN","RCDPEX31",35,0)
 I '$$LOCK(RCTDA,RCTDA1,0) G DELQ
"RTN","RCDPEX31",36,0)
 W !
"RTN","RCDPEX31",37,0)
 S DIR(0)="YA",DIR("A",1)="This action will mark this EEOB detail record so it no longer appears as an",DIR("A",2)="exception.  A bulletin will be sent to report this action",DIR("A",3)=" "
"RTN","RCDPEX31",38,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE? ",DIR("B")="NO"
"RTN","RCDPEX31",39,0)
 D ^DIR K DIR
"RTN","RCDPEX31",40,0)
 G:Y'=1 DELQ
"RTN","RCDPEX31",41,0)
 S DIR(0)="FA;3:60",DIR("A")="ENTER A REASON FOR THIS ACTION: ",DIR("?",1)="Enter the reason why this EEOB exception is being removed from the",DIR("?")=" exception list (3-60 characters are REQUIRED)"
"RTN","RCDPEX31",42,0)
 D ^DIR K DIR
"RTN","RCDPEX31",43,0)
 I $D(DUOUT)!$D(DTOUT) G DELQ
"RTN","RCDPEX31",44,0)
 S RCWHY(1)="Removal of EEOB detail entry from the exception list",RCWHY(2)="  Reason Entered: "_Y,RCWHYTXT=Y
"RTN","RCDPEX31",45,0)
 S RC0=$G(^RCY(344.4,RCTDA,0)),RC00=$G(^(1,RCTDA1,0))
"RTN","RCDPEX31",46,0)
 ;
"RTN","RCDPEX31",47,0)
 D GETS^DIQ(344.4,RCTDA_",","*","IEN","RCDIQ")
"RTN","RCDPEX31",48,0)
 D GETS^DIQ(344.41,RCTDA1_","_RCTDA_",","*","IEN","RCDIQ1")
"RTN","RCDPEX31",49,0)
 S RCE=0
"RTN","RCDPEX31",50,0)
 D TXT0(RCTDA,.RCDIQ,.RCX,.RCE)
"RTN","RCDPEX31",51,0)
 S RCE=RCE+1,RCX(RCE)="RAW MESSAGE DATA:"
"RTN","RCDPEX31",52,0)
 D TXT00(RCTDA,RCTDA1,.RCDIQ1,.RCX,.RCE)
"RTN","RCDPEX31",53,0)
 S DA=RCTDA1,DA(1)=RCTDA,DR=".07///@;.13////0",DIE="^RCY(344.4,"_DA(1)_",1," D ^DIE
"RTN","RCDPEX31",54,0)
 D STORACT(RCTDA,RCTDA1,.RCWHY)
"RTN","RCDPEX31",55,0)
 ;
"RTN","RCDPEX31",56,0)
 S RCT(1)="The electronic EEOB detail for Trace #: "_$P(RC0,U,2)_" and Seq #"_$P(RC00,U),RCT(2)=" is no longer flagged for an exception condition"
"RTN","RCDPEX31",57,0)
 S RCT(3)="PAYMENT FROM: "_$P(RC0,U,6)_" on "_$$FMTE^XLFDT($P(RC0,U,4),2)
"RTN","RCDPEX31",58,0)
 S RCT(4)=" "
"RTN","RCDPEX31",59,0)
 S RCT(5)="REASON: "_RCWHYTXT
"RTN","RCDPEX31",60,0)
 S RCT(6)="ACTION PERFORMED BY: "_$P($G(^VA(200,+$G(DUZ),0)),U)_"   "_$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","RCDPEX31",61,0)
 S RCT(7)=" ",RCE=+$O(RCT(""),-1)
"RTN","RCDPEX31",62,0)
 S Z=0 F  S Z=$O(RCX(Z)) Q:'Z  S RCE=RCE+1,RCT(RCE)=RCX(Z)
"RTN","RCDPEX31",63,0)
 S RCE=RCE+1,RCT(RCE)=" "
"RTN","RCDPEX31",64,0)
 S XMSUBJ="EDI LBOX EEOB DETAIL EXCEPTION REMOVED",XMBODY="RCT",XMDUZ="",XMTO("I:G.RCDPE PAYMENTS")=""
"RTN","RCDPEX31",65,0)
 D  ;
"RTN","RCDPEX31",66,0)
 . N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPEX31",67,0)
 . D SENDMSG^XMXAPI(.5,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPEX31",68,0)
 ;
"RTN","RCDPEX31",69,0)
 W !,"A bulletin has been sent to report this action",!
"RTN","RCDPEX31",70,0)
 D PAUSE^VALM1
"RTN","RCDPEX31",71,0)
 D BLD^RCDPEX2
"RTN","RCDPEX31",72,0)
 ;
"RTN","RCDPEX31",73,0)
DELQ I $G(RCTDA),$G(RCTDA1) L -^RCY(344.4,RCTDA,1,RCTDA1,0)
"RTN","RCDPEX31",74,0)
 S VALMBCK="R"
"RTN","RCDPEX31",75,0)
 Q
"RTN","RCDPEX31",76,0)
 ;
"RTN","RCDPEX31",77,0)
TXT0(RCTDA,RCDIQ,RCXM1,RC) ; Append 0-node captioned data to array RCXM1
"RTN","RCDPEX31",78,0)
 ;
"RTN","RCDPEX31",79,0)
 N LINE,DAT,Z,Z0,Z1
"RTN","RCDPEX31",80,0)
 S LINE="",RC=+$G(RC)
"RTN","RCDPEX31",81,0)
 S RC=RC+1,RCXM1(RC)="  **ERA SUMMARY DATA**"
"RTN","RCDPEX31",82,0)
 F Z=.02:.01 D  S Z1=+$O(RCDIQ(344.4,RCTDA_",",Z)) Q:Z1'<1!'Z1
"RTN","RCDPEX31",83,0)
 . I $G(RCDIQ(344.4,RCTDA_",",Z,"E"))="" Q
"RTN","RCDPEX31",84,0)
 . S Z0=$$GET1^DID(344.4,Z,,"LABEL")
"RTN","RCDPEX31",85,0)
 . S DAT=Z0_": "_$G(RCDIQ(344.4,RCTDA_",",Z,"E"))
"RTN","RCDPEX31",86,0)
 . I $L(DAT)>39 S:$L(LINE) RC=RC+1,RCXM1(RC)=LINE S RC=RC+1,RCXM1(RC)=DAT,LINE="" Q
"RTN","RCDPEX31",87,0)
 . I $L(LINE) D  Q:LINE=""  ; Left side exists
"RTN","RCDPEX31",88,0)
 .. I $L(LINE)+$L(DAT)>75 S RC=RC+1,RCXM1(RC)=LINE,LINE=DAT Q
"RTN","RCDPEX31",89,0)
 .. S LINE=LINE_"  "_DAT,RC=RC+1,RCXM1(RC)=LINE,LINE=""
"RTN","RCDPEX31",90,0)
 . S LINE=$E(DAT_$J("",39),1,39)
"RTN","RCDPEX31",91,0)
 I $L(LINE) S RC=RC+1,RCXM1(RC)=LINE
"RTN","RCDPEX31",92,0)
 S:RC RC=RC+1,RCXM1(RC)=" "
"RTN","RCDPEX31",93,0)
 Q
"RTN","RCDPEX31",94,0)
 ;
"RTN","RCDPEX31",95,0)
TXT00(RCTDA,RCTDA1,RCDIQ1,RCXM1,RC) ; Extract 0-node data for file 344.41
"RTN","RCDPEX31",96,0)
 ;
"RTN","RCDPEX31",97,0)
 N RCT,LINE,DAT,Z,Z0,Z1
"RTN","RCDPEX31",98,0)
 S LINE="",RC=+$G(RC)
"RTN","RCDPEX31",99,0)
 S RC=RC+1,RCXM1(RC)="  **EEOB DETAIL DATA**",RCT=RCTDA1_","_RCTDA_","
"RTN","RCDPEX31",100,0)
 F Z=.01:.01 D  S Z1=+$O(RCDIQ1(344.41,RCT,Z)) Q:Z1'<1!'Z1
"RTN","RCDPEX31",101,0)
 . I $G(RCDIQ1(344.41,RCT,Z,"E"))="" Q
"RTN","RCDPEX31",102,0)
 . S Z0=$$GET1^DID(344.41,Z,,"LABEL")
"RTN","RCDPEX31",103,0)
 . S DAT=Z0_": "_$G(RCDIQ1(344.41,RCT,Z,"E"))
"RTN","RCDPEX31",104,0)
 . I $L(DAT)>39 S:$L(LINE) RC=RC+1,RCXM1(RC)=LINE S RC=RC+1,RCXM1(RC)=DAT,LINE="" Q
"RTN","RCDPEX31",105,0)
 . I $L(LINE) D  Q:LINE=""  ; Left side exists
"RTN","RCDPEX31",106,0)
 .. I $L(LINE)+$L(DAT)>75 S RC=RC+1,RCXM1(RC)=LINE,LINE=DAT Q
"RTN","RCDPEX31",107,0)
 .. S LINE=LINE_"  "_DAT,RC=RC+1,RCXM1(RC)=LINE,LINE=""
"RTN","RCDPEX31",108,0)
 . S LINE=$E(DAT_$J("",39),1,39)
"RTN","RCDPEX31",109,0)
 I $L(LINE) S RC=RC+1,RCXM1(RC)=LINE
"RTN","RCDPEX31",110,0)
 S:RC RC=RC+1,RCXM1(RC)=" "
"RTN","RCDPEX31",111,0)
 Q
"RTN","RCDPEX31",112,0)
 ;
"RTN","RCDPEX31",113,0)
TXT2(RCTDA,RCTDA1,RCDIQ2,RCXM1,RC) ; Extract all data for file 344.42
"RTN","RCDPEX31",114,0)
 ;
"RTN","RCDPEX31",115,0)
 N RCT,LINE,DAT,Z,Z0
"RTN","RCDPEX31",116,0)
 S LINE="",RC=+$G(RC)
"RTN","RCDPEX31",117,0)
 S RCT=RCTDA1_","_RCTDA_","
"RTN","RCDPEX31",118,0)
 S Z=0 F  S Z=$O(RCDIQ2(344.42,RCT,Z)) Q:'Z  D
"RTN","RCDPEX31",119,0)
 . I $G(RCDIQ2(344.42,RCT,Z,"E"))="" Q
"RTN","RCDPEX31",120,0)
 . S Z0=$$GET1^DID(344.42,Z,,"LABEL")
"RTN","RCDPEX31",121,0)
 . S DAT=Z0_": "_$G(RCDIQ2(344.42,RCT,Z,"E"))
"RTN","RCDPEX31",122,0)
 . I $L(DAT)>39 S:$L(LINE) RC=RC+1,RCXM1(RC)=LINE S RC=RC+1,RCXM1(RC)=DAT,LINE="" Q
"RTN","RCDPEX31",123,0)
 . I $L(LINE) D  Q:LINE=""  ; Left side exists
"RTN","RCDPEX31",124,0)
 .. I $L(LINE)+$L(DAT)>75 S RC=RC+1,RCXM1(RC)=LINE,LINE=DAT Q
"RTN","RCDPEX31",125,0)
 .. S LINE=LINE_"  "_DAT,RC=RC+1,RCXM1(RC)=LINE,LINE=""
"RTN","RCDPEX31",126,0)
 . S LINE=$E(DAT_$J("",39),1,39)
"RTN","RCDPEX31",127,0)
 I $L(LINE) S RC=RC+1,RCXM1(RC)=LINE
"RTN","RCDPEX31",128,0)
 S:RC RC=RC+1,RCXM1(RC)=" "
"RTN","RCDPEX31",129,0)
 Q
"RTN","RCDPEX31",130,0)
 ;
"RTN","RCDPEX31",131,0)
LOCK(RCTDA,RCTDA1,RCSHH) ; Attempt to lock file entry in file 344.41
"RTN","RCDPEX31",132,0)
 ; Return 1 if successful, 0 if not able to lock
"RTN","RCDPEX31",133,0)
 ; RCSHH = 1 if there should be no direct writes
"RTN","RCDPEX31",134,0)
 ;
"RTN","RCDPEX31",135,0)
 N OK
"RTN","RCDPEX31",136,0)
 S OK=1
"RTN","RCDPEX31",137,0)
 L +^RCY(344.4,RCTDA,1,RCTDA1,0):5
"RTN","RCDPEX31",138,0)
 I '$T D
"RTN","RCDPEX31",139,0)
 . I '$D(DIQUIET),'$G(RCSHH) W !,*7,"Another user is editing this entry ... please try again later" D PAUSE^VALM1
"RTN","RCDPEX31",140,0)
 . S OK=0
"RTN","RCDPEX31",141,0)
 Q OK
"RTN","RCDPEX31",142,0)
 ;
"RTN","RCDPEX31",143,0)
STORACT(RCTDA,RCTDA1,RCWHY) ; Store the detail for the action taken for
"RTN","RCDPEX31",144,0)
 ; the exception record at ^RCY(344.4,RCTDA,1,RCTDA,0)
"RTN","RCDPEX31",145,0)
 ; RCWHY(#) = lines containing the reason/explanation for the action
"RTN","RCDPEX31",146,0)
 ;   RCWHY(1) should contain the description of the action taken
"RTN","RCDPEX31",147,0)
 ;            It will be appended to the first line of the message after
"RTN","RCDPEX31",148,0)
 ;            the date and user who made the change.
"RTN","RCDPEX31",149,0)
 ;
"RTN","RCDPEX31",150,0)
 N RCDA,RCTXT,RC,Z
"RTN","RCDPEX31",151,0)
 S RCDA(1)=RCTDA,RCDA=RCTDA1
"RTN","RCDPEX31",152,0)
 S RCTXT(1)=$$FMTE^XLFDT($$NOW^XLFDT(),2)_" "_$P($G(^VA(200,+DUZ,0)),U)_" "_$G(RCWHY(1))
"RTN","RCDPEX31",153,0)
 S (RC,Z)=1
"RTN","RCDPEX31",154,0)
 F  S Z=$O(RCWHY(Z)) Q:'Z  S RC=RC+1,RCTXT(RC)=" "_RCWHY(Z)
"RTN","RCDPEX31",155,0)
 D WP^DIE(344.41,$$IENS^DILF(.RCDA),2,"A","RCTXT")
"RTN","RCDPEX31",156,0)
 Q
"RTN","RCDPEX31",157,0)
 ;
"RTN","RCDPEX32")
0^119^B30118420
"RTN","RCDPEX32",1,0)
RCDPEX32 ;ALB/TMK - ELECTRONIC EOB EXCEPTION PROCESSING - FILE 344.4 ;10-OCT-02
"RTN","RCDPEX32",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCDPEX32",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEX32",4,0)
 ;
"RTN","RCDPEX32",5,0)
EDITNUM ; Edit invalid claim # to valid, refile EOB
"RTN","RCDPEX32",6,0)
 N RC,RC0,RCDA,RCXDA,RCXDA1,RCSAVE,RCEOB,RCWARN,Q,Q0,DA,DR,DIE,DIC,DIR,X,Y,RCBILL,RCCHG
"RTN","RCDPEX32",7,0)
 D FULL^VALM1
"RTN","RCDPEX32",8,0)
 D SEL^RCDPEX3(.RCDA)
"RTN","RCDPEX32",9,0)
 G:'$O(RCDA(0)) EDITNQ
"RTN","RCDPEX32",10,0)
 ;
"RTN","RCDPEX32",11,0)
 S RC=0 F  S RC=$O(RCDA(RC)) Q:'RC  D  L -^RCY(344.4,RCXDA1,1,RCXDA,0)
"RTN","RCDPEX32",12,0)
 . S RCXDA1=+RCDA(RC),RCXDA=+$P(RCDA(RC),U,2),RCSAVE=""
"RTN","RCDPEX32",13,0)
 . I '$$LOCK^RCDPEX31(RCXDA1,RCXDA,1) D  Q
"RTN","RCDPEX32",14,0)
 .. S DIR(0)="EA",DIR("A",1)="**Selection #"_RC_" is being edited by another user - ... please try again later",DIR("A")="PRESS RETURN TO CONTINUE" D ^DIR K DIR
"RTN","RCDPEX32",15,0)
 . S RC0=$G(^RCY(344.4,RCXDA1,1,RCXDA,0))
"RTN","RCDPEX32",16,0)
 . I $P(RC0,U,5)="" D  Q
"RTN","RCDPEX32",17,0)
 .. S DIR(0)="EA",DIR("A",1)="The claim for selection #"_RC_" can't be edited as the bill # is not invalid",DIR("A")="PRESS RETURN TO CONTINUE" D ^DIR K DIR
"RTN","RCDPEX32",18,0)
 . I $P(RC0,U,9) D  Q
"RTN","RCDPEX32",19,0)
 .. S DIR(0)="EA",DIR("A",1)="The claim for selection #"_RC_" can't be edited as the claim has already",DIR("A")="been transferred to another site - PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEX32",20,0)
 . ;
"RTN","RCDPEX32",21,0)
 . I $D(^RCY(344.49,RCXDA1)) D
"RTN","RCDPEX32",22,0)
 .. N X
"RTN","RCDPEX32",23,0)
 .. S X=$G(^RCY(344,+$P($G(^RCY(344.49,RCXDA1,0)),U,2),0))
"RTN","RCDPEX32",24,0)
 .. W !!,*7,"Warning: EEOB Worklist entry #"_RCXDA1_$S($P(X,U)'="":" and receipt "_$P(X,U),1:"")_" exist for this EEOB"
"RTN","RCDPEX32",25,0)
 .. I X="" W !,"You should refresh the worklist entry to include the new claim #",!," before creating the receipt",!
"RTN","RCDPEX32",26,0)
 . I $P($G(^RCY(344.4,RCXDA1,0)),U,8) D
"RTN","RCDPEX32",27,0)
 .. W !,"Since the receipt for this EEOB ("_$P($G(^RCY(344,+$P($G(^RCY(344.4,RCXDA1,0)),U,8),0)),U)_") already exists"
"RTN","RCDPEX32",28,0)
 .. I '$P($G(^RCY(344,+$P($G(^RCY(344.4,RCXDA1,0)),U,8),0)),U,14) W !," and is closed, you will need to use link payment to apply the payment",!," to the correct account",! Q
"RTN","RCDPEX32",29,0)
 .. W !," you should edit the receipt and change the claim # so it posts to the",!," correct account",!
"RTN","RCDPEX32",30,0)
 . ;
"RTN","RCDPEX32",31,0)
 . I $P(RC0,U,17)="" S RCSAVE=$P(RC0,U,5)
"RTN","RCDPEX32",32,0)
 . W !,"Selection #: "_RC_$J("",5)_$P(RC0,U,5)
"RTN","RCDPEX32",33,0)
 . S DIC("A")="Select A/R Bill this EEOB is actually paying on: ",DIC="^PRCA(430,",DIC(0)="AEMQ",DIC("S")="I $D(^DGCR(399,+Y,0))" W ! D ^DIC K DIC
"RTN","RCDPEX32",34,0)
 . Q:Y'>0
"RTN","RCDPEX32",35,0)
 . S RCBILL=+Y,RCBILL(1)=$P($G(^PRCA(430,RCBILL,0)),U),RCWARN=0
"RTN","RCDPEX32",36,0)
 . I $P($G(^RCY(344.4,RCXDA1,0)),U,14) S RCWARN=RCWARN+1,DIR("A",RCWARN+1)=$J("",4)_"THE RECEIPT FOR THIS EEOB HAS ALREADY BEEN POSTED."
"RTN","RCDPEX32",37,0)
 . I $P($G(^PRCA(430.3,+$P($G(^PRCA(430,RCBILL,0)),U,8),0)),U,3)'=102 S RCWARN=RCWARN+1,DIR("A",RCWARN+1)=$J("",4)_"THIS IS NOT AN ACTIVE ACCOUNTS RECEIVABLE."
"RTN","RCDPEX32",38,0)
 . I RCWARN D  I Y'=1 Q
"RTN","RCDPEX32",39,0)
 .. S DIR("A",1)="** WARNING"_$S(RCWARN>1:"S",1:"")_":"
"RTN","RCDPEX32",40,0)
 .. S DIR("A",RCWARN+1)=" "
"RTN","RCDPEX32",41,0)
 .. S DIR(0)="YA",DIR("A")="ARE YOU SURE YOU WANT TO FILE THIS EEOB FOR CLAIM #: "_RCBILL(1)_"?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEX32",42,0)
 .. ;
"RTN","RCDPEX32",43,0)
 . ; File EOB for new claim #
"RTN","RCDPEX32",44,0)
 . K ^TMP($J,"RCDP-EOB"),^TMP($J,"RCDPEOB","HDR")
"RTN","RCDPEX32",45,0)
 . S Q=0 F  S Q=$O(^RCY(344.4,RCXDA1,1,RCXDA,1,Q)) Q:'Q  S Q0=$G(^(Q,0)) D
"RTN","RCDPEX32",46,0)
 .. I $P(Q0,U)["835ERA" S ^TMP($J,"RCDPEOB","HDR")=Q0
"RTN","RCDPEX32",47,0)
 .. I $P(Q0,U,2)=$P(RC0,U,5) S $P(Q0,U,2)=RCBILL(1)
"RTN","RCDPEX32",48,0)
 .. S ^TMP($J,"RCDP-EOB",1,Q,0)=Q0
"RTN","RCDPEX32",49,0)
 . S ^TMP($J,"RCDP-EOB",1,.5,0)="835ERA"
"RTN","RCDPEX32",50,0)
 . S RCEOB=$$DUP^IBCEOB(RCBILL,"^TMP("_$J_",""RCDP-EOB"",1)") ; IA 4042
"RTN","RCDPEX32",51,0)
 . K ^TMP($J,"RCDP-EOB",1,.5,0)
"RTN","RCDPEX32",52,0)
 . I RCEOB D  Q
"RTN","RCDPEX32",53,0)
 .. N RCWHY S RCWHY(1)="EEOB already found on file while trying to change claim # and filing into IB"
"RTN","RCDPEX32",54,0)
 .. D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX32",55,0)
 .. S RCCHG=1,DA(1)=RCXDA1,DA=RCXDA D CHGED(.DA,RCEOB,RCSAVE)
"RTN","RCDPEX32",56,0)
 .. S DIR(0)="YA",DIR("A",1)="EEOB detail is already on file for "_RCBILL(1)_" - Exception removed",DIR("A")="PRESS RETURN TO CONTINUE" D ^DIR K DIR
"RTN","RCDPEX32",57,0)
 . ;
"RTN","RCDPEX32",58,0)
 . ; Add stub rec to 361.1 if not there
"RTN","RCDPEX32",59,0)
 . S RCEOB=+$$ADD3611^IBCEOB(+$P($G(^RCY(344.4,RCXDA1,0)),U,12),"","",RCBILL,1,"^TMP("_$J_",""RCDP-EOB"",1)") ; IA 4042
"RTN","RCDPEX32",60,0)
 . ;
"RTN","RCDPEX32",61,0)
 . I RCEOB<0 D  Q
"RTN","RCDPEX32",62,0)
 .. N RCWHY S RCWHY(1)="Error encountered trying to change claim # and file into IB"
"RTN","RCDPEX32",63,0)
 .. D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX32",64,0)
 .. S DIR("A")="EA",DIR("A",1)="Error - EEOB detail not added to IB for bill "_RCBILL(1),DIR("A")="PRESS RETURN TO CONTINUE" D ^DIR K DIR
"RTN","RCDPEX32",65,0)
 . ;
"RTN","RCDPEX32",66,0)
 . ; Update EOB in file 361.1
"RTN","RCDPEX32",67,0)
 . ; Call needs ^TMP arrays: $J,"RCDPEOB","HDR" and $J,"RCDP-EOB"
"RTN","RCDPEX32",68,0)
 . D UPD3611^IBCEOB(RCEOB,1,1) ; IA 4042
"RTN","RCDPEX32",69,0)
 . ; errors in ^TMP("RCDPERR-EOB",$J
"RTN","RCDPEX32",70,0)
 . I $O(^TMP("RCDPERR-EOB",$J,0)) D
"RTN","RCDPEX32",71,0)
 .. D ERRUPD^IBCEOB(RCEOB,"RCDPERR-EOB") ; Adds error msgs to IB file 361.1 ; IA 4042
"RTN","RCDPEX32",72,0)
 . ;
"RTN","RCDPEX32",73,0)
 . S RCCHG=1
"RTN","RCDPEX32",74,0)
 . N RCWHY S RCWHY(1)="EEOB claim # changed and filed into IB under new claim #"
"RTN","RCDPEX32",75,0)
 . D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX32",76,0)
 . S DA(1)=RCXDA1,DA=RCXDA
"RTN","RCDPEX32",77,0)
 . D CHGED(.DA,RCEOB,RCSAVE)
"RTN","RCDPEX32",78,0)
 . S DIE="^RCY(344.4,"_DA(1)_",1,",DR="1///@" D ^DIE
"RTN","RCDPEX32",79,0)
 . S DIR("A",1)="EEOB Filed.  Its detail may be viewed using Third Party Joint Inquiry",DIR("A")="PRESS RETURN TO CONTINUE ",DIR(0)="EA"
"RTN","RCDPEX32",80,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEX32",81,0)
 . S VALMBG=1
"RTN","RCDPEX32",82,0)
 ;
"RTN","RCDPEX32",83,0)
EDITNQ I $G(RCCHG) D BLD^RCDPEX2
"RTN","RCDPEX32",84,0)
 K ^TMP($J,"RCDP-EOB"),^TMP($J,"RCDPEOB","HDR"),^TMP("RCDPERR-EOB",$J)
"RTN","RCDPEX32",85,0)
 S VALMBCK="R"
"RTN","RCDPEX32",86,0)
 Q
"RTN","RCDPEX32",87,0)
 ;
"RTN","RCDPEX32",88,0)
CHGED(DA,RCEOB,RCSAVE) ;  Change bad bill # to good one for EOB
"RTN","RCDPEX32",89,0)
 ; DA = DA and DA(1) to use for DIE call
"RTN","RCDPEX32",90,0)
 ; RCEOB = the ien of the entry in file 361.1
"RTN","RCDPEX32",91,0)
 ; RCSAVE = the free text of the original bill #
"RTN","RCDPEX32",92,0)
 N DIE,DR,X,Y
"RTN","RCDPEX32",93,0)
 S DIE="^RCY(344.4,"_DA(1)_",1,",DR=".05///@;.02////"_RCEOB_";.13////1"_$S(RCSAVE'="":";.17////"_RCSAVE,1:"")_";.07///@" D ^DIE
"RTN","RCDPEX32",94,0)
 Q
"RTN","RCDPEX32",95,0)
 ;
"RTN","RCDPR215")
0^118^B36065707
"RTN","RCDPR215",1,0)
RCDPR215 ;WISC/RFJ-receipt processing sf215 report ;1 Jun 99
"RTN","RCDPR215",2,0)
 ;;4.5;Accounts Receivable;**114,173**;Mar 20, 1995
"RTN","RCDPR215",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPR215",4,0)
 Q
"RTN","RCDPR215",5,0)
 ;
"RTN","RCDPR215",6,0)
 ;
"RTN","RCDPR215",7,0)
DQ ;  queued report starts here, input RECEIPDA
"RTN","RCDPR215",8,0)
 ;  RCTYPE="D"etail or "A"ccrual
"RTN","RCDPR215",9,0)
 N %I,AMOUNT,BILL,BILLDA,COMMENTS,COUNT,DA,DATA,DEPOSIT,DETAIL,FMSDOCNO,FUND,NOW,PAGE,PIECE,PRINTOTL,RCSTFLAG,RCYLINE,RECEIPT,SCREEN,TOTAL,TOTLAMT,UNAPPLY,X,Y,TOT,%
"RTN","RCDPR215",10,0)
 ;
"RTN","RCDPR215",11,0)
 ;  calculate report
"RTN","RCDPR215",12,0)
 ;  input receipda (ien of receipt)
"RTN","RCDPR215",13,0)
 K ^TMP($J,"RCFMSCR"),^TMP($J,"RCDPR215")
"RTN","RCDPR215",14,0)
 D FMSLINES^RCXFMSC1(RECEIPDA)
"RTN","RCDPR215",15,0)
 I $$EDILB^RCDPEU(RECEIPDA)=1 D  ; EFT deposit receipt
"RTN","RCDPR215",16,0)
 . S TOT=0
"RTN","RCDPR215",17,0)
 . S Z=0 F  S Z=$O(^RCY(344,RECEIPDA,1,Z)) Q:'Z  S TOT=TOT+$P($G(^(Z,0)),U,4)
"RTN","RCDPR215",18,0)
 . S ^TMP($J,"RCFMSCR","5287.4/8NZZ")=TOT
"RTN","RCDPR215",19,0)
 ;
"RTN","RCDPR215",20,0)
 ;  print report
"RTN","RCDPR215",21,0)
 S DATA=$G(^RCY(344,RECEIPDA,0))
"RTN","RCDPR215",22,0)
 S RECEIPT=$P(DATA,"^")
"RTN","RCDPR215",23,0)
 S DEPOSIT=$P($G(^RCY(344.1,+$P(DATA,"^",6),0)),"^")
"RTN","RCDPR215",24,0)
 S FMSDOCNO=$P($G(^RCY(344.1,+$P(DATA,"^",6),2)),"^")
"RTN","RCDPR215",25,0)
 ;
"RTN","RCDPR215",26,0)
 D NOW^%DTC S Y=% D DD^%DT S NOW=Y
"RTN","RCDPR215",27,0)
 S PAGE=0,RCYLINE="",$P(RCYLINE,"-",81)=""
"RTN","RCDPR215",28,0)
 S SCREEN=0 I '$D(ZTQUEUED),IO=IO(0),$E(IOST)="C" S SCREEN=1
"RTN","RCDPR215",29,0)
 U IO D H
"RTN","RCDPR215",30,0)
 ;
"RTN","RCDPR215",31,0)
 S TOTAL=""  ;  stores printotal^inttotal^admintotal^marshtotal^cctotal
"RTN","RCDPR215",32,0)
 S FUND="" F  S FUND=$O(^TMP($J,"RCFMSCR",FUND)) Q:'FUND!($G(RCSTFLAG))  D
"RTN","RCDPR215",33,0)
 .   I $Y>(IOSL-6) D:SCREEN PAUSE Q:$G(RCSTFLAG)  D H
"RTN","RCDPR215",34,0)
 .   W !!?5,"Appropriation: ",FUND
"RTN","RCDPR215",35,0)
 .   I RCTYPE="D" W !
"RTN","RCDPR215",36,0)
 .   ;
"RTN","RCDPR215",37,0)
 .   S PRINTOTL=0
"RTN","RCDPR215",38,0)
 .   S COUNT=0
"RTN","RCDPR215",39,0)
 .   I FUND="5287.4/8NZZ" S PRINTOTL=PRINTOTL+$G(^TMP($J,"RCFMSCR",FUND))
"RTN","RCDPR215",40,0)
 .   S BILLDA=0 F  S BILLDA=$O(^TMP($J,"RCFMSCR",FUND,BILLDA)) Q:'BILLDA!($G(RCSTFLAG))  D
"RTN","RCDPR215",41,0)
 .   .   I $Y>(IOSL-5) D:SCREEN PAUSE Q:$G(RCSTFLAG)  D H
"RTN","RCDPR215",42,0)
 .   .   S COUNT=COUNT+1
"RTN","RCDPR215",43,0)
 .   .   S BILL=$P($G(^PRCA(430,BILLDA,0)),"^")
"RTN","RCDPR215",44,0)
 .   .   S DATA=^TMP($J,"RCFMSCR",FUND,BILLDA)
"RTN","RCDPR215",45,0)
 .   .   S PRINTOTL=PRINTOTL+$P(DATA,"^")
"RTN","RCDPR215",46,0)
 .   .   F PIECE=1:1:5 S $P(TOTAL,"^",PIECE)=$P(TOTAL,"^",PIECE)+$P(DATA,"^",PIECE)
"RTN","RCDPR215",47,0)
 .   .   ;  if accrued report, do not show detail
"RTN","RCDPR215",48,0)
 .   .   I RCTYPE="A" Q
"RTN","RCDPR215",49,0)
 .   .   ;
"RTN","RCDPR215",50,0)
 .   .   W !?5,COUNT,")",?10,BILL,?30,$J($P(DATA,"^"),10,2),?45,"DEBTOR: ",$E($$DEBTOR(BILLDA),1,25)
"RTN","RCDPR215",51,0)
 .   .   W !?15,"INT:",$J($P(DATA,"^",2),10,2)," ADMIN:",$J($P(DATA,"^",3),10,2)," MARS: ",$J($P(DATA,"^",4),10,2)," CC: ",$J($P(DATA,"^",5),10,2)
"RTN","RCDPR215",52,0)
 .   ;
"RTN","RCDPR215",53,0)
 .   I $G(RCSTFLAG) Q
"RTN","RCDPR215",54,0)
 .   I RCTYPE="D" W !?30,"----------",!?5,"TOTAL for ",FUND
"RTN","RCDPR215",55,0)
 .   W ?30,$J(PRINTOTL,10,2)
"RTN","RCDPR215",56,0)
 .   I FUND="0160a1" W ?45,"0160a1 sub-totals Champva receipts",!?45,"not sent to FMS on the CR document."
"RTN","RCDPR215",57,0)
 ;
"RTN","RCDPR215",58,0)
 I $G(RCSTFLAG) D Q Q
"RTN","RCDPR215",59,0)
 I $Y>(IOSL-6) D:SCREEN PAUSE I '$G(RCSTFLAG) D H
"RTN","RCDPR215",60,0)
 I $G(RCSTFLAG) D Q Q
"RTN","RCDPR215",61,0)
 ;
"RTN","RCDPR215",62,0)
 ;  show int, admin, etc totals
"RTN","RCDPR215",63,0)
 W !
"RTN","RCDPR215",64,0)
 W !?5,"INTEREST : (APP: 1435)",?30,$J($P(TOTAL,"^",2),10,2)
"RTN","RCDPR215",65,0)
 W !?5,"ADMIN    : (APP: 3220)",?30,$J($P(TOTAL,"^",3),10,2)
"RTN","RCDPR215",66,0)
 W !?5,"MARSHALL : (APP: 0869)",?30,$J($P(TOTAL,"^",4),10,2)
"RTN","RCDPR215",67,0)
 W !?5,"COURTCOST: (APP: 0869)",?30,$J($P(TOTAL,"^",5),10,2)
"RTN","RCDPR215",68,0)
 W !?30,"----------"
"RTN","RCDPR215",69,0)
 W !?30,$J($P(TOTAL,"^",2)+$P(TOTAL,"^",3)+$P(TOTAL,"^",4)+$P(TOTAL,"^",5),10,2)
"RTN","RCDPR215",70,0)
 ;
"RTN","RCDPR215",71,0)
 I $Y>(IOSL-8) D:SCREEN PAUSE I '$G(RCSTFLAG) D H
"RTN","RCDPR215",72,0)
 I $G(RCSTFLAG) D Q Q
"RTN","RCDPR215",73,0)
 ;
"RTN","RCDPR215",74,0)
 I $G(^TMP($J,"RCFMSCR","5287.4/8NZZ")) S $P(TOTAL,U)=$P(TOTAL,U)+^TMP($J,"RCFMSCR","5287.4/8NZZ")
"RTN","RCDPR215",75,0)
 ;  compile unapplied amounts that went to suspense
"RTN","RCDPR215",76,0)
 S DA=0 F  S DA=$O(^RCY(344,RECEIPDA,1,DA)) Q:'DA  D
"RTN","RCDPR215",77,0)
 .   S AMOUNT=$P($G(^RCY(344,RECEIPDA,1,DA,0)),"^",4) I 'AMOUNT Q
"RTN","RCDPR215",78,0)
 .   S UNAPPLY=$P($G(^RCY(344,RECEIPDA,1,DA,2)),"^",5) I UNAPPLY="" Q
"RTN","RCDPR215",79,0)
 .   ;  if amount has not been processed, show it in suspense
"RTN","RCDPR215",80,0)
 .   I '$P(^RCY(344,RECEIPDA,1,DA,0),"^",5) S ^TMP($J,"RCDPR215",DA)=UNAPPLY_"^"_AMOUNT_"^"_$P($G(^RCY(344,RECEIPDA,1,DA,1)),"^",2)
"RTN","RCDPR215",81,0)
 ;
"RTN","RCDPR215",82,0)
 ;  print unapplied amounts that went to suspense
"RTN","RCDPR215",83,0)
 I $O(^TMP($J,"RCDPR215",0)) D
"RTN","RCDPR215",84,0)
 .   W !!?5,"Appropriation: 3875"
"RTN","RCDPR215",85,0)
 .   I RCTYPE="D" W !
"RTN","RCDPR215",86,0)
 .   ;
"RTN","RCDPR215",87,0)
 .   S COUNT=0,PRINTOTL=0
"RTN","RCDPR215",88,0)
 .   S DA=0 F  S DA=$O(^TMP($J,"RCDPR215",DA)) Q:'DA!($G(RCSTFLAG))  D
"RTN","RCDPR215",89,0)
 .   .   I $Y>(IOSL-6) D:SCREEN PAUSE Q:$G(RCSTFLAG)  D H
"RTN","RCDPR215",90,0)
 .   .   ;
"RTN","RCDPR215",91,0)
 .   .   S UNAPPLY=$P(^TMP($J,"RCDPR215",DA),"^"),AMOUNT=$P(^(DA),"^",2),COMMENTS=$P(^(DA),"^",3)
"RTN","RCDPR215",92,0)
 .   .   S PRINTOTL=PRINTOTL+AMOUNT
"RTN","RCDPR215",93,0)
 .   .   S $P(TOTAL,"^")=$P(TOTAL,"^")+AMOUNT
"RTN","RCDPR215",94,0)
 .   .   ;  if accrued report, do not show detail
"RTN","RCDPR215",95,0)
 .   .   I RCTYPE="A" Q
"RTN","RCDPR215",96,0)
 .   .   ;
"RTN","RCDPR215",97,0)
 .   .   S COUNT=COUNT+1
"RTN","RCDPR215",98,0)
 .   .   W !?5,COUNT,")",?10,UNAPPLY,?30,$J(AMOUNT,10,2),?45,"COMMENTS: ",$E(COMMENTS,1,25)
"RTN","RCDPR215",99,0)
 .   .   I $TR($E(COMMENTS,26,80)," ")'="" W !?25,$E(COMMENTS,26,80)
"RTN","RCDPR215",100,0)
 .   ;
"RTN","RCDPR215",101,0)
 .   I $G(RCSTFLAG) Q
"RTN","RCDPR215",102,0)
 .   I RCTYPE="D" W !?30,"----------",!?5,"TOTAL for 3875"
"RTN","RCDPR215",103,0)
 .   W ?30,$J(PRINTOTL,10,2)
"RTN","RCDPR215",104,0)
 I $G(RCSTFLAG) D Q Q
"RTN","RCDPR215",105,0)
 ;
"RTN","RCDPR215",106,0)
 S TOTLAMT=0 F PIECE=1:1:5 S TOTLAMT=TOTLAMT+$P(TOTAL,"^",PIECE)
"RTN","RCDPR215",107,0)
 W !!,"TOTALS: "
"RTN","RCDPR215",108,0)
 W !?5,"TOTAL AMOUNT POSTED:",?30,$J(TOTLAMT,10,2)
"RTN","RCDPR215",109,0)
 ;
"RTN","RCDPR215",110,0)
 I SCREEN W !,"Press RETURN to continue: " R X:DTIME
"RTN","RCDPR215",111,0)
Q D ^%ZISC
"RTN","RCDPR215",112,0)
 K ^TMP($J,"RCFMSCR"),^TMP($J,"RCDPR215")
"RTN","RCDPR215",113,0)
 Q
"RTN","RCDPR215",114,0)
 ;
"RTN","RCDPR215",115,0)
 ;
"RTN","RCDPR215",116,0)
GETTYPE() ;  ask the type of report to print
"RTN","RCDPR215",117,0)
 N DIR,X,Y
"RTN","RCDPR215",118,0)
 S DIR(0)="S^A:ACCRUED;D:DETAILED",DIR("A")="ACCRUED OR DETAILED REPORT",DIR("B")="ACCRUED",DIR("?")="A DETAILED Report will list out accrued bills separately"
"RTN","RCDPR215",119,0)
 S DIR("?",1)="An ACCRUED Report will list just the accrued total under each appropriation"
"RTN","RCDPR215",120,0)
 D ^DIR
"RTN","RCDPR215",121,0)
 I Y'="A",Y'="D" Q ""
"RTN","RCDPR215",122,0)
 Q Y
"RTN","RCDPR215",123,0)
 ;
"RTN","RCDPR215",124,0)
 ;
"RTN","RCDPR215",125,0)
DEBTOR(DA) ;  returns the debtor name for ien of bill (da) in file 430
"RTN","RCDPR215",126,0)
 N D0,DEBTOR,DIC,DIQ,DR
"RTN","RCDPR215",127,0)
 S DIC="^PRCA(430,",DR=9,DIQ(0)="E",DIQ="DEBTOR"
"RTN","RCDPR215",128,0)
 D EN^DIQ1
"RTN","RCDPR215",129,0)
 Q $G(DEBTOR(430,DA,9,"E"))
"RTN","RCDPR215",130,0)
 ;
"RTN","RCDPR215",131,0)
 ;
"RTN","RCDPR215",132,0)
H ;  header
"RTN","RCDPR215",133,0)
 N Z
"RTN","RCDPR215",134,0)
 S PAGE=PAGE+1 I PAGE'=1!(SCREEN) W @IOF
"RTN","RCDPR215",135,0)
 W $C(13),"Page ",PAGE,?(80-$L(NOW)),NOW
"RTN","RCDPR215",136,0)
 W !,$E($TR(RCYLINE,"-","*"),1,34)," 215 REPORT ",$E($TR(RCYLINE,"-","*"),1,34)
"RTN","RCDPR215",137,0)
 W !!,"RECEIPT #: ",RECEIPT,?25,"for DEPOSIT #: ",DEPOSIT
"RTN","RCDPR215",138,0)
 I FMSDOCNO'="" W ?51,"FMS Document #: ",FMSDOCNO
"RTN","RCDPR215",139,0)
 S Z=""
"RTN","RCDPR215",140,0)
 I $P($G(^RCY(344,RECEIPDA,0)),U,18) S Z=$E(" REFERENCE ERA #: "_$P($G(^RCY(344.4,+$P($G(^RCY(344,RECEIPDA,0)),U,18),0)),U)_" ("_$P($G(^RCY(344.4,+$P($G(^RCY(344,RECEIPDA,0)),U,18),0)),U,2)_")"_$J("",51),1,51)
"RTN","RCDPR215",141,0)
 I Z'="" W !,Z
"RTN","RCDPR215",142,0)
 W !,RCYLINE
"RTN","RCDPR215",143,0)
 Q
"RTN","RCDPR215",144,0)
 ;
"RTN","RCDPR215",145,0)
 ;
"RTN","RCDPR215",146,0)
PAUSE ;  pause at end of page
"RTN","RCDPR215",147,0)
 N X U IO(0) W !,"Press RETURN to continue, '^' to exit:" R X:DTIME S:'$T X="^" S:X["^" RCSTFLAG=1 U IO
"RTN","RCDPR215",148,0)
 Q
"RTN","RCDPRPL2")
0^17^B62184693
"RTN","RCDPRPL2",1,0)
RCDPRPL2 ;WISC/RFJ-receipt profile listmanager options ;1 Jun 99
"RTN","RCDPRPL2",2,0)
 ;;4.5;Accounts Receivable;**114,148,173**;Mar 20, 1995
"RTN","RCDPRPL2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPRPL2",4,0)
 Q
"RTN","RCDPRPL2",5,0)
 ;
"RTN","RCDPRPL2",6,0)
 ;  this routine contains entry points for customize and printing
"RTN","RCDPRPL2",7,0)
 ;
"RTN","RCDPRPL2",8,0)
 ;
"RTN","RCDPRPL2",9,0)
ACCTPROF ;  option: account profile
"RTN","RCDPRPL2",10,0)
 D FULL^VALM1
"RTN","RCDPRPL2",11,0)
 S VALMBCK="R"
"RTN","RCDPRPL2",12,0)
 ;
"RTN","RCDPRPL2",13,0)
 N ACCT,RCDEBTDA,RCTRANDA
"RTN","RCDPRPL2",14,0)
 ;  select the payment transaction
"RTN","RCDPRPL2",15,0)
 S RCTRANDA=$$SELPAY^RCDPRPL1(RCRECTDA)
"RTN","RCDPRPL2",16,0)
 I RCTRANDA>0 D
"RTN","RCDPRPL2",17,0)
 .   ;  find debtor (file 340) entry
"RTN","RCDPRPL2",18,0)
 .   S RCDEBTDA=0
"RTN","RCDPRPL2",19,0)
 .   S ACCT=$P(^RCY(344,RCRECTDA,1,RCTRANDA,0),"^",3)
"RTN","RCDPRPL2",20,0)
 .   I ACCT[";DPT(" S RCDEBTDA=$O(^RCD(340,"B",ACCT,0))
"RTN","RCDPRPL2",21,0)
 .   I ACCT["PRCA(430," S RCDEBTDA=$P($G(^PRCA(430,+ACCT,0)),"^",9)
"RTN","RCDPRPL2",22,0)
 .   I 'RCDEBTDA S VALMSG="Account NOT found for payment transaction."
"RTN","RCDPRPL2",23,0)
 ;
"RTN","RCDPRPL2",24,0)
 ;  payment not selected ask to select an account
"RTN","RCDPRPL2",25,0)
 I '$D(RCDEBTDA) S RCDEBTDA=$$SELACCT^RCDPAPLM
"RTN","RCDPRPL2",26,0)
 ;
"RTN","RCDPRPL2",27,0)
 I $G(RCDEBTDA)'>0 Q
"RTN","RCDPRPL2",28,0)
 D EN^VALM("RCDP ACCOUNT PROFILE")
"RTN","RCDPRPL2",29,0)
 S VALMBCK="R"
"RTN","RCDPRPL2",30,0)
 ;  fast exit
"RTN","RCDPRPL2",31,0)
 I $G(RCDPFXIT) S VALMBCK="Q"
"RTN","RCDPRPL2",32,0)
 Q
"RTN","RCDPRPL2",33,0)
 ;
"RTN","RCDPRPL2",34,0)
 ;
"RTN","RCDPRPL2",35,0)
PRINRECT ;  option: print a receipt
"RTN","RCDPRPL2",36,0)
 D FULL^VALM1
"RTN","RCDPRPL2",37,0)
 S VALMBCK="R"
"RTN","RCDPRPL2",38,0)
 ;
"RTN","RCDPRPL2",39,0)
 N RCTRANDA
"RTN","RCDPRPL2",40,0)
 ;  select the payment transaction
"RTN","RCDPRPL2",41,0)
 S RCTRANDA=$$SELPAY^RCDPRPL1(RCRECTDA) I RCTRANDA<1 Q
"RTN","RCDPRPL2",42,0)
 ;
"RTN","RCDPRPL2",43,0)
 ;  check if transaction has a payment amount
"RTN","RCDPRPL2",44,0)
 I '$P($G(^RCY(344,RCRECTDA,1,RCTRANDA,0)),"^",4) S VALMSG="NO Payment Amount on Transaction." Q
"RTN","RCDPRPL2",45,0)
 ;
"RTN","RCDPRPL2",46,0)
 S VALMSG=$$DEVICE^RCDPRECT
"RTN","RCDPRPL2",47,0)
 I VALMSG=0 S VALMSG="Receipt NOT printed"
"RTN","RCDPRPL2",48,0)
 Q
"RTN","RCDPRPL2",49,0)
 ;
"RTN","RCDPRPL2",50,0)
 ;
"RTN","RCDPRPL2",51,0)
PRINT215 ;  print 215 report
"RTN","RCDPRPL2",52,0)
 N %ZIS,POP
"RTN","RCDPRPL2",53,0)
 D FULL^VALM1
"RTN","RCDPRPL2",54,0)
 S VALMBCK="R"
"RTN","RCDPRPL2",55,0)
 ;
"RTN","RCDPRPL2",56,0)
 N RECEIPDA,RCTYPE
"RTN","RCDPRPL2",57,0)
 S RECEIPDA=RCRECTDA
"RTN","RCDPRPL2",58,0)
 ;
"RTN","RCDPRPL2",59,0)
 S RCTYPE=$$GETTYPE^RCDPR215
"RTN","RCDPRPL2",60,0)
 I RCTYPE="" Q
"RTN","RCDPRPL2",61,0)
 ;
"RTN","RCDPRPL2",62,0)
 ;  select device
"RTN","RCDPRPL2",63,0)
 W ! S %ZIS="Q" D ^%ZIS Q:POP
"RTN","RCDPRPL2",64,0)
 I $D(IO("Q")) D  D ^%ZTLOAD K IO("Q"),ZTSK D ^%ZISC Q
"RTN","RCDPRPL2",65,0)
 .   S ZTDESC="Print 215 Report",ZTRTN="DQ^RCDPR215"
"RTN","RCDPRPL2",66,0)
 .   S ZTSAVE("RECEIPDA")="",ZTSAVE("RCTYPE")="",ZTSAVE("ZTREQ")="@"
"RTN","RCDPRPL2",67,0)
 W !!,"<*> please wait <*>"
"RTN","RCDPRPL2",68,0)
 D DQ^RCDPR215
"RTN","RCDPRPL2",69,0)
 Q
"RTN","RCDPRPL2",70,0)
 ;
"RTN","RCDPRPL2",71,0)
 ;
"RTN","RCDPRPL2",72,0)
CUSTOMIZ ;  option: customize display
"RTN","RCDPRPL2",73,0)
 D FULL^VALM1
"RTN","RCDPRPL2",74,0)
 S VALMBCK="R"
"RTN","RCDPRPL2",75,0)
 ;
"RTN","RCDPRPL2",76,0)
 W !!,"This option will allow the user to customize the screen and options"
"RTN","RCDPRPL2",77,0)
 W !,"used for receipt processing."
"RTN","RCDPRPL2",78,0)
 ;
"RTN","RCDPRPL2",79,0)
 ;  ask to show check/credit card data
"RTN","RCDPRPL2",80,0)
 I $$ASKCHECK=-1 Q
"RTN","RCDPRPL2",81,0)
 ;
"RTN","RCDPRPL2",82,0)
 ;  ask to show acct lookup, batch and sequence number
"RTN","RCDPRPL2",83,0)
 I $$ASKACCT=-1 D INIT^RCDPRPLM Q
"RTN","RCDPRPL2",84,0)
 ;
"RTN","RCDPRPL2",85,0)
 ;  ask to show comments
"RTN","RCDPRPL2",86,0)
 I $$ASKCOMM=-1 D INIT^RCDPRPLM Q
"RTN","RCDPRPL2",87,0)
 ;
"RTN","RCDPRPL2",88,0)
 ;  ask to show fms cr documents
"RTN","RCDPRPL2",89,0)
 I $$ASKFMS=-1 D INIT^RCDPRPLM Q
"RTN","RCDPRPL2",90,0)
 ;
"RTN","RCDPRPL2",91,0)
 ;  ask to show EOB detail information
"RTN","RCDPRPL2",92,0)
 I $$ASKEOB=-1 D INIT^RCDPRPLM Q
"RTN","RCDPRPL2",93,0)
 ;
"RTN","RCDPRPL2",94,0)
 ;  make sure form is rebuilt based on the above answers
"RTN","RCDPRPL2",95,0)
 D INIT^RCDPRPLM
"RTN","RCDPRPL2",96,0)
 ;
"RTN","RCDPRPL2",97,0)
 ;
"RTN","RCDPRPL2",98,0)
 W !!,"The next prompts will allow the user to individually set up the way receipts"
"RTN","RCDPRPL2",99,0)
 W !,"should be printed when entering payment transactions.  The user can set"
"RTN","RCDPRPL2",100,0)
 W !,"the software up to automatically print a receipt to a device, never print"
"RTN","RCDPRPL2",101,0)
 W !,"the receipt, or ask to print the receipt.  The user can also specify the"
"RTN","RCDPRPL2",102,0)
 W !,"printer used for printing receipts, preventing from having to re-enter it."
"RTN","RCDPRPL2",103,0)
 N DEVICE,TYPE
"RTN","RCDPRPL2",104,0)
 ;
"RTN","RCDPRPL2",105,0)
 ;  for printing receipts
"RTN","RCDPRPL2",106,0)
 D  Q:TYPE<0
"RTN","RCDPRPL2",107,0)
 .   W !
"RTN","RCDPRPL2",108,0)
 .   S TYPE=$$ASKRECT
"RTN","RCDPRPL2",109,0)
 .   I TYPE<0 Q
"RTN","RCDPRPL2",110,0)
 .   ;
"RTN","RCDPRPL2",111,0)
 .   ;  never print receipt
"RTN","RCDPRPL2",112,0)
 .   I TYPE=0 S ^DISV(DUZ,"RCDPRPLM","RECEIPT")=0 Q
"RTN","RCDPRPL2",113,0)
 .   ;
"RTN","RCDPRPL2",114,0)
 .   ;  ask default printer device
"RTN","RCDPRPL2",115,0)
 .   S DEVICE=$$ASKDEVIC(1)
"RTN","RCDPRPL2",116,0)
 .   ;
"RTN","RCDPRPL2",117,0)
 .   ;  no default printer, always print receipt
"RTN","RCDPRPL2",118,0)
 .   I DEVICE="",TYPE=1 D  Q
"RTN","RCDPRPL2",119,0)
 .   .   W !,"Since you did not enter a default printer for printing receipts,"
"RTN","RCDPRPL2",120,0)
 .   .   W !,"I will change it so the software will ask you to print the receipt"
"RTN","RCDPRPL2",121,0)
 .   .   W !,"when entering a payment transaction."
"RTN","RCDPRPL2",122,0)
 .   .   S ^DISV(DUZ,"RCDPRPLM","RECEIPT")=2
"RTN","RCDPRPL2",123,0)
 .   ;
"RTN","RCDPRPL2",124,0)
 .   ;  set default printer for receipts
"RTN","RCDPRPL2",125,0)
 .   S ^DISV(DUZ,"RCDPRPLM","RECEIPT")=TYPE_"^"_DEVICE
"RTN","RCDPRPL2",126,0)
 ;
"RTN","RCDPRPL2",127,0)
 ;  for printing 215 report
"RTN","RCDPRPL2",128,0)
 W !!!,"You now have the option of setting up the default printer for automatically"
"RTN","RCDPRPL2",129,0)
 W !,"printing the 215 report when a receipt is processed.",!
"RTN","RCDPRPL2",130,0)
 ;  ask default printer device
"RTN","RCDPRPL2",131,0)
 S DEVICE=$$ASKDEVIC(2)
"RTN","RCDPRPL2",132,0)
 S ^DISV(DUZ,"RCDPRPLM","215REPORT")=DEVICE
"RTN","RCDPRPL2",133,0)
 Q
"RTN","RCDPRPL2",134,0)
 ;
"RTN","RCDPRPL2",135,0)
 ;
"RTN","RCDPRPL2",136,0)
ASKCHECK() ;  ask if its okay to show check/credit card data
"RTN","RCDPRPL2",137,0)
 ;  1 is yes, otherwise no
"RTN","RCDPRPL2",138,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPRPL2",139,0)
 S DIR(0)="YO"
"RTN","RCDPRPL2",140,0)
 S DIR("B")="NO"
"RTN","RCDPRPL2",141,0)
 I $G(^DISV(DUZ,"RCDPRPLM","SHOWCHECK")) S DIR("B")="YES"
"RTN","RCDPRPL2",142,0)
 S DIR("A")="  Do you want to show check and credit card information"
"RTN","RCDPRPL2",143,0)
 W ! D ^DIR
"RTN","RCDPRPL2",144,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPRPL2",145,0)
 I Y'=-1 S ^DISV(DUZ,"RCDPRPLM","SHOWCHECK")=Y
"RTN","RCDPRPL2",146,0)
 Q Y
"RTN","RCDPRPL2",147,0)
 ;
"RTN","RCDPRPL2",148,0)
ASKEOB() ;  ask if its okay to show EOB detail data
"RTN","RCDPRPL2",149,0)
 ;  1 is yes, otherwise no
"RTN","RCDPRPL2",150,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPRPL2",151,0)
 S DIR(0)="YO"
"RTN","RCDPRPL2",152,0)
 S DIR("B")="NO"
"RTN","RCDPRPL2",153,0)
 I $G(^DISV(DUZ,"RCDPRPLM","SHOWEOB")) S DIR("B")="YES"
"RTN","RCDPRPL2",154,0)
 S DIR("A")="  Do you want to show electronic EEOB detail data"
"RTN","RCDPRPL2",155,0)
 W ! D ^DIR
"RTN","RCDPRPL2",156,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPRPL2",157,0)
 I Y'=-1 S ^DISV(DUZ,"RCDPRPLM","SHOWEOB")=Y
"RTN","RCDPRPL2",158,0)
 Q Y
"RTN","RCDPRPL2",159,0)
 ;
"RTN","RCDPRPL2",160,0)
ASKACCT() ;  ask if its okay to show acct lookup, batch, and sequence
"RTN","RCDPRPL2",161,0)
 ;  1 is yes, otherwise no
"RTN","RCDPRPL2",162,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPRPL2",163,0)
 S DIR(0)="YO"
"RTN","RCDPRPL2",164,0)
 S DIR("B")="NO"
"RTN","RCDPRPL2",165,0)
 I $G(^DISV(DUZ,"RCDPRPLM","SHOWACCT")) S DIR("B")="YES"
"RTN","RCDPRPL2",166,0)
 S DIR("A")="  Do you want to show acct lookup, batch and sequence information"
"RTN","RCDPRPL2",167,0)
 W ! D ^DIR
"RTN","RCDPRPL2",168,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPRPL2",169,0)
 I Y'=-1 S ^DISV(DUZ,"RCDPRPLM","SHOWACCT")=Y
"RTN","RCDPRPL2",170,0)
 Q Y
"RTN","RCDPRPL2",171,0)
 ;
"RTN","RCDPRPL2",172,0)
 ;
"RTN","RCDPRPL2",173,0)
ASKCOMM() ;  ask if its okay to show comments and posting errors
"RTN","RCDPRPL2",174,0)
 ;  1 is yes, otherwise no
"RTN","RCDPRPL2",175,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPRPL2",176,0)
 S DIR(0)="YO"
"RTN","RCDPRPL2",177,0)
 S DIR("B")="NO"
"RTN","RCDPRPL2",178,0)
 I $G(^DISV(DUZ,"RCDPRPLM","SHOWCOMMENTS")) S DIR("B")="YES"
"RTN","RCDPRPL2",179,0)
 S DIR("A")="  Do you want to show comments"
"RTN","RCDPRPL2",180,0)
 W ! D ^DIR
"RTN","RCDPRPL2",181,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPRPL2",182,0)
 I Y'=-1 S ^DISV(DUZ,"RCDPRPLM","SHOWCOMMENTS")=Y
"RTN","RCDPRPL2",183,0)
 Q Y
"RTN","RCDPRPL2",184,0)
 ;
"RTN","RCDPRPL2",185,0)
 ;
"RTN","RCDPRPL2",186,0)
ASKFMS() ;  ask if its okay to show fms documents
"RTN","RCDPRPL2",187,0)
 ;  1 is yes, otherwise no
"RTN","RCDPRPL2",188,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPRPL2",189,0)
 S DIR(0)="YO"
"RTN","RCDPRPL2",190,0)
 S DIR("B")="NO"
"RTN","RCDPRPL2",191,0)
 I $G(^DISV(DUZ,"RCDPRPLM","SHOWFMS")) S DIR("B")="YES"
"RTN","RCDPRPL2",192,0)
 S DIR("A")="  Do you want to show the FMS cash receipt documents"
"RTN","RCDPRPL2",193,0)
 W ! D ^DIR
"RTN","RCDPRPL2",194,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPRPL2",195,0)
 I Y'=-1 S ^DISV(DUZ,"RCDPRPLM","SHOWFMS")=Y
"RTN","RCDPRPL2",196,0)
 Q Y
"RTN","RCDPRPL2",197,0)
 ;
"RTN","RCDPRPL2",198,0)
 ;
"RTN","RCDPRPL2",199,0)
ASKRECT() ;  ask to print the receipt
"RTN","RCDPRPL2",200,0)
 ;  returns 0 (never), 1 (always), or 2 (ask)
"RTN","RCDPRPL2",201,0)
 N DEFAULT,DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPRPL2",202,0)
 S DEFAULT="ALWAYS"
"RTN","RCDPRPL2",203,0)
 I $G(^DISV(DUZ,"RCDPRPLM","RECEIPT"))'="" S DEFAULT=^("RECEIPT"),DEFAULT=$S(DEFAULT=0:"NEVER",DEFAULT=1:"ALWAYS",1:"MAYBE")
"RTN","RCDPRPL2",204,0)
 S DIR(0)="SO^0:Never Print the Receipt;1:Always Print the Receipt;2:Maybe, Ask to Print the Receipt"
"RTN","RCDPRPL2",205,0)
 S DIR("A")="Print Receipt"
"RTN","RCDPRPL2",206,0)
 S DIR("B")=DEFAULT
"RTN","RCDPRPL2",207,0)
 D ^DIR
"RTN","RCDPRPL2",208,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPRPL2",209,0)
 Q Y
"RTN","RCDPRPL2",210,0)
 ;
"RTN","RCDPRPL2",211,0)
 ;
"RTN","RCDPRPL2",212,0)
ASKDEVIC(RCTYPE) ;  ask the default printer for receipts and for 215 report
"RTN","RCDPRPL2",213,0)
 ;  rctype=1 for receipts, rctype=2 for 215 report
"RTN","RCDPRPL2",214,0)
 N RCION
"RTN","RCDPRPL2",215,0)
 S %ZIS="NP0"
"RTN","RCDPRPL2",216,0)
 S %ZIS("A")="Enter the Default Printer for Printing Receipts: "
"RTN","RCDPRPL2",217,0)
 I RCTYPE=2 S %ZIS("A")="Enter the Default Printer for Printing the 215 Report: "
"RTN","RCDPRPL2",218,0)
 S %ZIS("B")=""
"RTN","RCDPRPL2",219,0)
 I RCTYPE=1,$P($G(^DISV(DUZ,"RCDPRPLM","RECEIPT")),"^",2)'="" S %ZIS("B")=$P(^("RECEIPT"),"^",2)
"RTN","RCDPRPL2",220,0)
 I RCTYPE=2,$G(^DISV(DUZ,"RCDPRPLM","215REPORT"))'="" S %ZIS("B")=^("215REPORT")
"RTN","RCDPRPL2",221,0)
 D ^%ZIS
"RTN","RCDPRPL2",222,0)
 I IO=IO(0) W !,"You cannot select your current device as a default printer." Q ""
"RTN","RCDPRPL2",223,0)
 S RCION=ION
"RTN","RCDPRPL2",224,0)
 ;  reset current device
"RTN","RCDPRPL2",225,0)
 D ^%ZISC
"RTN","RCDPRPL2",226,0)
 Q RCION
"RTN","RCDPRPL2",227,0)
 ;
"RTN","RCDPRPL2",228,0)
SHEOB ;  show EEOB detail if switch on - moved from RCDPRPLM
"RTN","RCDPRPL2",229,0)
 I $G(^DISV(DUZ,"RCDPRPLM","SHOWEOB")) D
"RTN","RCDPRPL2",230,0)
 .   N Z
"RTN","RCDPRPL2",231,0)
 .   S Z=$O(^RCY(344.4,"ARCT",RCRECTDA,0))
"RTN","RCDPRPL2",232,0)
 .   Q:'Z
"RTN","RCDPRPL2",233,0)
 .   S RCLINE=RCLINE+1 D SET^RCDPRPLM(" ",RCLINE,1,80)
"RTN","RCDPRPL2",234,0)
 .   S RCLINE=RCLINE+1 D SET^RCDPRPLM("EEOB Detail:",RCLINE,1,80,0,IOUON,IOUOFF)
"RTN","RCDPRPL2",235,0)
 .   K ^TMP($J,"RCDISP") D DISP^RCDPEDS(Z)
"RTN","RCDPRPL2",236,0)
 .   S Z=0 F  S Z=$O(^TMP($J,"RCDISP",Z)) Q:'Z  S RCLINE=RCLINE+1 D SET^RCDPRPLM(^TMP($J,"RCDISP",Z),RCLINE,1,80)
"RTN","RCDPRPL2",237,0)
 .   K ^TMP($J,"RCDISP")
"RTN","RCDPRPL2",238,0)
 Q
"RTN","RCDPRPL2",239,0)
 ;
"RTN","RCDPRPL3")
0^42^B81211213
"RTN","RCDPRPL3",1,0)
RCDPRPL3 ;WISC/RFJ-receipt profile listmanager options ;1 Jun 99
"RTN","RCDPRPL3",2,0)
 ;;4.5;Accounts Receivable;**114,148,153,173**;Mar 20, 1995
"RTN","RCDPRPL3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPRPL3",4,0)
 Q
"RTN","RCDPRPL3",5,0)
 ;
"RTN","RCDPRPL3",6,0)
 ;  routine contains the entry points for receipt management
"RTN","RCDPRPL3",7,0)
 ;
"RTN","RCDPRPL3",8,0)
 ;
"RTN","RCDPRPL3",9,0)
EDITREC ;  option: edit the receipt, deposit #
"RTN","RCDPRPL3",10,0)
 D FULL^VALM1
"RTN","RCDPRPL3",11,0)
 S VALMBCK="R"
"RTN","RCDPRPL3",12,0)
 ;
"RTN","RCDPRPL3",13,0)
 I '$$LOCKREC^RCDPRPLU(RCRECTDA) Q
"RTN","RCDPRPL3",14,0)
 ;
"RTN","RCDPRPL3",15,0)
 W !
"RTN","RCDPRPL3",16,0)
 D EDITREC^RCDPUREC(RCRECTDA)
"RTN","RCDPRPL3",17,0)
 L -^RCY(344,RCRECTDA)
"RTN","RCDPRPL3",18,0)
 ;
"RTN","RCDPRPL3",19,0)
 ;  rebuild the header
"RTN","RCDPRPL3",20,0)
 D HDR^RCDPRPLM
"RTN","RCDPRPL3",21,0)
 Q
"RTN","RCDPRPL3",22,0)
 ;
"RTN","RCDPRPL3",23,0)
 ;
"RTN","RCDPRPL3",24,0)
PROCESS ;  option: process receipt
"RTN","RCDPRPL3",25,0)
 N RCOK,RCEFT,RCEFT1,RCHAC,RC,RCERA,RCAMT,RCQUIT,CRTR,Z
"RTN","RCDPRPL3",26,0)
 D FULL^VALM1
"RTN","RCDPRPL3",27,0)
 S VALMBCK="R"
"RTN","RCDPRPL3",28,0)
 ;
"RTN","RCDPRPL3",29,0)
 S RC=$S('$P($G(^RCY(344,RCRECTDA,0)),U,6)&$$LBEVENT^RCDPEU():1,1:0),CRTR=$P("cash^transfer",U,RC+1)
"RTN","RCDPRPL3",30,0)
 W !!,"This option will process the payments for the receipt updating the AR"
"RTN","RCDPRPL3",31,0)
 W !,"Package and generate the "_CRTR_" receipt document to FMS.  Any decrease"
"RTN","RCDPRPL3",32,0)
 W !,"adjustments entered via the EDI Lockbox Worklist will also be generated."
"RTN","RCDPRPL3",33,0)
 W !,"Once a receipt has been processed, the receipt status will change to closed"
"RTN","RCDPRPL3",34,0)
 W !,"and no further processing of the receipt can occur.  If the FMS "_CRTR
"RTN","RCDPRPL3",35,0)
 W !," receipt document rejects, you can use this same option to reprocess the"
"RTN","RCDPRPL3",36,0)
 W !,"receipt.",!
"RTN","RCDPRPL3",37,0)
 ;
"RTN","RCDPRPL3",38,0)
 S RCEFT=+$P($G(^RCY(344,RCRECTDA,0)),U,17),RCERA=$P($G(^(0)),U,18),RCHAC=0
"RTN","RCDPRPL3",39,0)
 S RCAMT=+$$PAYTOTAL^RCDPURED(RCRECTDA)
"RTN","RCDPRPL3",40,0)
 ;
"RTN","RCDPRPL3",41,0)
 S RCQUIT=0
"RTN","RCDPRPL3",42,0)
 I RCERA,'RCEFT D  Q:RCQUIT
"RTN","RCDPRPL3",43,0)
 . I +$P($G(^RCY(344.4,+RCERA,0)),U,5)'=RCAMT D  S RCQUIT=1 Q
"RTN","RCDPRPL3",44,0)
 .. W !,"This receipt cannot be processed because the total amount of the associated",!," ERA ("_$J(+$P($G(^RCY(344.4,+RCERA,0)),U,5),"",2)_") does not equal the total amount on the receipt ("_$J(RCAMT,"",2)_")"
"RTN","RCDPRPL3",45,0)
 .. S VALMSG="Receipt total not = ERA total - Receipt NOT processed"
"RTN","RCDPRPL3",46,0)
 .. D RET^RCDPEWL2
"RTN","RCDPRPL3",47,0)
 ;
"RTN","RCDPRPL3",48,0)
 I RCEFT D  Q:'RCOK
"RTN","RCDPRPL3",49,0)
 . N RCOK1
"RTN","RCDPRPL3",50,0)
 . S RCOK=0,RCEFT1=+$G(^RCY(344.3,+RCEFT,0)),RCHAC=($E($P($G(^RCY(344.3,RCEFT1,0)),U,6),1,3)="HAC")
"RTN","RCDPRPL3",51,0)
 . N Z,DIR,DIE,DA,DR
"RTN","RCDPRPL3",52,0)
 . I $P($G(^RCY(344.3,+RCEFT1,0)),U,10) D  Q
"RTN","RCDPRPL3",53,0)
 .. W !,"This receipt cannot be processed until EDI Lockbox checksum exception is",!," cleared on the EFT transmission"
"RTN","RCDPRPL3",54,0)
 .. S VALMSG="EDI LOCKBOX exception still exists - Receipt NOT processed"
"RTN","RCDPRPL3",55,0)
 .. D RET^RCDPEWL2
"RTN","RCDPRPL3",56,0)
 . ;
"RTN","RCDPRPL3",57,0)
 . I +$P($G(^RCY(344.31,+RCEFT,0)),U,7)'=RCAMT D  Q
"RTN","RCDPRPL3",58,0)
 .. W !,"This receipt cannot be processed - the receipt total does not match the",!," EFT total for this EDI Lockbox receipt"
"RTN","RCDPRPL3",59,0)
 .. S VALMSG="EDI LOCKBOX total of receipt not = EFT - Receipt NOT processed"
"RTN","RCDPRPL3",60,0)
 .. D RET^RCDPEWL2
"RTN","RCDPRPL3",61,0)
 . ; Check that EFT funds were posted
"RTN","RCDPRPL3",62,0)
 . S RCOK1=1
"RTN","RCDPRPL3",63,0)
 . I $P($G(^RCY(344.3,+$G(^RCY(344.31,+RCEFT,0)),0)),U,8),$P($G(^RCY(344.31,+RCEFT,0)),U,7) D  Q:'RCOK1
"RTN","RCDPRPL3",64,0)
 .. N RCRECTDA,RCDEPDA
"RTN","RCDPRPL3",65,0)
 .. S RCDEPDA=+$P($G(^RCY(344.3,+$G(^RCY(344.31,+RCEFT,0)),0)),U,3),RCRECTDA=+$O(^RCY(344,"AD",+RCDEPDA,0)) ; Get deposit and its receipt
"RTN","RCDPRPL3",66,0)
 .. I RCRECTDA S Z=$P($$FMSSTAT^RCDPUREC(RCRECTDA),U,2) I $E(Z)="A" Q  ; Accepted by FMS
"RTN","RCDPRPL3",67,0)
 .. W !,"This receipt cannot be processed yet - the EFT's deposit has not been",!," successfully sent to FMS.  Status currently is "_Z
"RTN","RCDPRPL3",68,0)
 .. S VALMSG="EDI LOCKBOX EFT not yet posted",RCOK1=0
"RTN","RCDPRPL3",69,0)
 .. D RET^RCDPEWL2
"RTN","RCDPRPL3",70,0)
 . S RCOK=1
"RTN","RCDPRPL3",71,0)
 ;
"RTN","RCDPRPL3",72,0)
 I +$P($G(^RCY(344,RCRECTDA,0)),U,6),+$P(^(0),U,17) D  Q:'RCOK
"RTN","RCDPRPL3",73,0)
 . S RCOK=0
"RTN","RCDPRPL3",74,0)
 . S DIR("A",1)="A DEPOSIT CANNOT BE ASSOCIATED WITH AN EDI LOCKBOX EFT DETAIL RECEIPT"
"RTN","RCDPRPL3",75,0)
 . S DIR(0)="YA",DIR("A")="DO YOU WANT TO DELETE THIS RECEIPT'S DEPOSIT REFERENCE NOW?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPRPL3",76,0)
 . I Y=1 S DIE="^RCY(344,",DR=".06///@",DA=RCRECTDA D ^DIE S RCOK=1 Q
"RTN","RCDPRPL3",77,0)
 . S VALMSG="EDI LBOX ERA receipt cannot have a deposit - Receipt NOT processed"
"RTN","RCDPRPL3",78,0)
 ;
"RTN","RCDPRPL3",79,0)
 N RCDEPTDA,RCDPDATA,RCDPFLAG,RCDPFHLP,RCTRDA,RCSCR,STATUS,RCADJ
"RTN","RCDPRPL3",80,0)
 ;
"RTN","RCDPRPL3",81,0)
 ;  lock receipt
"RTN","RCDPRPL3",82,0)
 I '$$LOCKREC^RCDPRPLU(RCRECTDA) S VALMSG="Receipt NOT Processed." Q
"RTN","RCDPRPL3",83,0)
 ;
"RTN","RCDPRPL3",84,0)
 ;  apply decrease adjustments from worklist entry
"RTN","RCDPRPL3",85,0)
 S RCSCR=+$O(^RCY(344.4,"ARCT",RCRECTDA,0)),RCSCR=$S($D(^RCY(344.49,+RCSCR,0)):RCSCR,1:0)
"RTN","RCDPRPL3",86,0)
 S RCADJ=$$ERAWL^RCDPRPL4(RCSCR)
"RTN","RCDPRPL3",87,0)
 I RCADJ=2 D UNLOCK Q
"RTN","RCDPRPL3",88,0)
 I RCADJ<0 D  Q
"RTN","RCDPRPL3",89,0)
 . W !,"The bill balance for the bills listed above must be manually increased to",!,"accommodate the automatic ERA Worklist dec adjustment amounts and to allow",!,"the ERA receipt to be balanced - Receipt NOT processed."
"RTN","RCDPRPL3",90,0)
 . D UNLOCK
"RTN","RCDPRPL3",91,0)
 ;
"RTN","RCDPRPL3",92,0)
 ;  warning no transactions
"RTN","RCDPRPL3",93,0)
 I '$O(^RCY(344,RCRECTDA,1,0)) D
"RTN","RCDPRPL3",94,0)
 .   W !,"WARNING, no transactions are on the receipt.  Processing will only change"
"RTN","RCDPRPL3",95,0)
 .   W !,"the status of the receipt to closed."
"RTN","RCDPRPL3",96,0)
 ;
"RTN","RCDPRPL3",97,0)
 D DIQ344^RCDPRPLM(RCRECTDA,".06;.08;.17;.18;200;")
"RTN","RCDPRPL3",98,0)
 ;  code sheet already sent once, this is a retransmission, check it
"RTN","RCDPRPL3",99,0)
 I RCDPDATA(344,RCRECTDA,200,"E")'="" D
"RTN","RCDPRPL3",100,0)
 .   S STATUS=$$STATUS^GECSSGET(RCDPDATA(344,RCRECTDA,200,"E"))
"RTN","RCDPRPL3",101,0)
 .   W !,"This receipt has been previously processed to FMS in the cash receipt"
"RTN","RCDPRPL3",102,0)
 .   W !,"document ",$TR(RCDPDATA(344,RCRECTDA,200,"E")," "),".  The current status for this document in the"
"RTN","RCDPRPL3",103,0)
 .   W !,"Generic Code Sheet Stack file is ",STATUS,"."
"RTN","RCDPRPL3",104,0)
 .   ;
"RTN","RCDPRPL3",105,0)
 .   ;  okay to continue if status is Error, Rejected, or not defined (-1)
"RTN","RCDPRPL3",106,0)
 .   I $E(STATUS)="E"!($E(STATUS)="R")!(STATUS=-1) Q
"RTN","RCDPRPL3",107,0)
 .   ;  okay to continue if document has not been transmitted
"RTN","RCDPRPL3",108,0)
 .   I $E(STATUS)="Q"!($E(STATUS)="M") Q
"RTN","RCDPRPL3",109,0)
 .   ;  okay to continue if document is transmitted for 2 days
"RTN","RCDPRPL3",110,0)
 .   I $E(STATUS)="T",$$FMDIFF^XLFDT(DT,RCDPDATA(344,RCRECTDA,.08,"I"))>1 Q
"RTN","RCDPRPL3",111,0)
 .   ;
"RTN","RCDPRPL3",112,0)
 .   ;  do not allow reprocessing
"RTN","RCDPRPL3",113,0)
 .   S RCDPFLAG=1
"RTN","RCDPRPL3",114,0)
 .   I $E(STATUS)="A" W !!,"You cannot reprocess and retransmit an ACCEPTED document."
"RTN","RCDPRPL3",115,0)
 .   I $E(STATUS)="T" W !!,"You cannot reprocess and retransmit a document which has previously been",!,"transmitted and is waiting on confirmation (less than 2 days since",!,"processing)."
"RTN","RCDPRPL3",116,0)
 I $G(RCDPFLAG) D UNLOCK Q
"RTN","RCDPRPL3",117,0)
 ;
"RTN","RCDPRPL3",118,0)
 ;  check payments to verify it doesn't exceed bill amt
"RTN","RCDPRPL3",119,0)
 W !!,"Checking payment amounts versus billed amounts ..."
"RTN","RCDPRPL3",120,0)
 S RCTRDA=0 F  S RCTRDA=$O(^RCY(344,RCRECTDA,1,RCTRDA)) Q:'RCTRDA  D
"RTN","RCDPRPL3",121,0)
 .   S X=$$CHECKPAY(RCRECTDA,RCTRDA)
"RTN","RCDPRPL3",122,0)
 .   I 'X Q
"RTN","RCDPRPL3",123,0)
 .   ;  exceeds billed amt
"RTN","RCDPRPL3",124,0)
 .   S RCDPFLAG=1
"RTN","RCDPRPL3",125,0)
 .   ;  check for >1 pending payment for this transaction
"RTN","RCDPRPL3",126,0)
 .   I +$P(X,"^",3)'=$P(^RCY(344,RCRECTDA,1,RCTRDA,0),"^",4) S RCDPFLAG=2
"RTN","RCDPRPL3",127,0)
 .   W !," " I RCDPFLAG=2 W "*" S RCDPFHLP=1
"RTN","RCDPRPL3",128,0)
 .   W "WARNING: Trans# ",RCTRDA,". Pending Payments $ ",$J($P(X,"^",3),0,2)," exceed billed amount $ ",$J($P(X,"^",2),0,2)
"RTN","RCDPRPL3",129,0)
 I $G(RCDPFLAG) D  Q
"RTN","RCDPRPL3",130,0)
 .   I $G(RCDPFHLP) W !,"NOTE: * Indicates more than one pending payment entered against this bill."
"RTN","RCDPRPL3",131,0)
 .   W !,"Adjust payments listed above before processing."
"RTN","RCDPRPL3",132,0)
 .   D UNLOCK
"RTN","RCDPRPL3",133,0)
 ;
"RTN","RCDPRPL3",134,0)
 W "  payments okay."
"RTN","RCDPRPL3",135,0)
 ;
"RTN","RCDPRPL3",136,0)
 S RCDEPTDA=RCDPDATA(344,RCRECTDA,.06,"I")
"RTN","RCDPRPL3",137,0)
 ;  lock deposit tckt
"RTN","RCDPRPL3",138,0)
 I RCDEPTDA I '$$LOCKDEP^RCDPDPLU(RCDEPTDA) D UNLOCK Q
"RTN","RCDPRPL3",139,0)
 ;
"RTN","RCDPRPL3",140,0)
 ;  check for critical fields, deposit ticket, date of deposit
"RTN","RCDPRPL3",141,0)
 ; No deposit ticket is OK for ERA not related to an EFT or for HAC ERA
"RTN","RCDPRPL3",142,0)
 I 'RCDEPTDA,$S('$G(RCDPDATA(344,RCRECTDA,.18,"I")):1,$$EDILB^RCDPEU(RCRECTDA)=2:0,1:'$$HAC^RCDPURE1(RCRECTDA)) D
"RTN","RCDPRPL3",143,0)
 .   W !!,"WARNING, Deposit Ticket is missing.  If you continue with processing,"
"RTN","RCDPRPL3",144,0)
 .   W !,"the AR accounts will be updated and a cash receipt (CR) document will"
"RTN","RCDPRPL3",145,0)
 .   W !,"NOT be sent to FMS.  You have the option to add the Deposit Ticket now."
"RTN","RCDPRPL3",146,0)
 .   D EDITREC^RCDPUREC(RCRECTDA,".06;")
"RTN","RCDPRPL3",147,0)
 .   S (RCDEPTDA,RCDPDATA(344,RCRECTDA,.06,"I"))=$P(^RCY(344,RCRECTDA,0),"^",6)
"RTN","RCDPRPL3",148,0)
 ;
"RTN","RCDPRPL3",149,0)
 ;  deposit ticket added
"RTN","RCDPRPL3",150,0)
 I RCDEPTDA D
"RTN","RCDPRPL3",151,0)
 .   D EDITDEP^RCDPUDEP(RCDEPTDA,1)
"RTN","RCDPRPL3",152,0)
 .   D DIQ3441^RCDPDPLM(RCDEPTDA,".03;")
"RTN","RCDPRPL3",153,0)
 .   I RCDPDATA(344.1,RCDEPTDA,.03,"I") Q
"RTN","RCDPRPL3",154,0)
 .   W !!,"No DEPOSIT DATE, you can edit the deposit data now."
"RTN","RCDPRPL3",155,0)
 .   D EDITDEP^RCDPUDEP(RCDEPTDA,1)
"RTN","RCDPRPL3",156,0)
 .   D DIQ3441^RCDPDPLM(RCDEPTDA,".03;")
"RTN","RCDPRPL3",157,0)
 .   I RCDPDATA(344.1,RCDEPTDA,.03,"I") Q
"RTN","RCDPRPL3",158,0)
 .   W !!,"Still No DEPOSIT DATE, use the Edit Deposit option under Deposit Processing."
"RTN","RCDPRPL3",159,0)
 .   S RCDPFLAG=1
"RTN","RCDPRPL3",160,0)
 I $G(RCDPFLAG) D UNLOCK Q
"RTN","RCDPRPL3",161,0)
 ;
"RTN","RCDPRPL3",162,0)
 W !
"RTN","RCDPRPL3",163,0)
 I $$ASKPROC'=1 D  Q
"RTN","RCDPRPL3",164,0)
 . I $G(RCADJ)>0 W !!,*7,"WARNING - EDI Lbox Worklist auto dec adjustments have already been made for",!,"this receipt!!!"
"RTN","RCDPRPL3",165,0)
 . D UNLOCK
"RTN","RCDPRPL3",166,0)
 ;
"RTN","RCDPRPL3",167,0)
 ;  process receipt, pass 1 to show messages
"RTN","RCDPRPL3",168,0)
 D PROCESS^RCDPURE1(RCRECTDA,1)
"RTN","RCDPRPL3",169,0)
 D UNLOCK
"RTN","RCDPRPL3",170,0)
 D INIT^RCDPRPLM
"RTN","RCDPRPL3",171,0)
 D HDR^RCDPRPLM
"RTN","RCDPRPL3",172,0)
 I $P(^RCY(344,RCRECTDA,0),"^",8) S VALMSG="Receipt PROCESSED."
"RTN","RCDPRPL3",173,0)
 Q
"RTN","RCDPRPL3",174,0)
 ;
"RTN","RCDPRPL3",175,0)
 ;
"RTN","RCDPRPL3",176,0)
UNLOCK ;  unlock/pause
"RTN","RCDPRPL3",177,0)
 L -^RCY(344,RCRECTDA)
"RTN","RCDPRPL3",178,0)
 I $G(RCDEPTDA) L -^RCY(344.1,RCDEPTDA)
"RTN","RCDPRPL3",179,0)
 W !!,"Press RETURN to continue: " R X:DTIME
"RTN","RCDPRPL3",180,0)
 S VALMSG="Receipt NOT Processed."
"RTN","RCDPRPL3",181,0)
 D HDR^RCDPRPLM
"RTN","RCDPRPL3",182,0)
 Q
"RTN","RCDPRPL3",183,0)
 ;
"RTN","RCDPRPL3",184,0)
 ;
"RTN","RCDPRPL3",185,0)
CHECKPAY(RCRECTDA,RCTRDA) ;  called to check amt pd against amt of bill
"RTN","RCDPRPL3",186,0)
 N PAYDATA,PENDING,X
"RTN","RCDPRPL3",187,0)
 ;  receipt already processed
"RTN","RCDPRPL3",188,0)
 I $P($G(^RCY(344,RCRECTDA,0)),"^",7) Q 0
"RTN","RCDPRPL3",189,0)
 S PAYDATA=$G(^RCY(344,RCRECTDA,1,RCTRDA,0))
"RTN","RCDPRPL3",190,0)
 ;  payment is 0
"RTN","RCDPRPL3",191,0)
 I '$P(PAYDATA,"^",4) Q 0
"RTN","RCDPRPL3",192,0)
 ;  payment processed
"RTN","RCDPRPL3",193,0)
 I $P(PAYDATA,"^",5) Q 0
"RTN","RCDPRPL3",194,0)
 ;  not a bill
"RTN","RCDPRPL3",195,0)
 I $P(PAYDATA,"^",3)'["PRCA(430," Q 0
"RTN","RCDPRPL3",196,0)
 ;  first party bill (do not check dollars)
"RTN","RCDPRPL3",197,0)
 I $P($G(^RCD(340,+$P($G(^PRCA(430,+$P(PAYDATA,"^",3),0)),"^",9),0)),"^")["DPT(" Q 0
"RTN","RCDPRPL3",198,0)
 ;  bill not activated or open
"RTN","RCDPRPL3",199,0)
 S X=$P($G(^PRCA(430,+$P(PAYDATA,"^",3),0)),"^",8)
"RTN","RCDPRPL3",200,0)
 I X'=42,X'=16 Q "1^0"
"RTN","RCDPRPL3",201,0)
 ;  calculate dollars on receivable
"RTN","RCDPRPL3",202,0)
 S X=$G(^PRCA(430,+$P(PAYDATA,"^",3),7)),X=$P(X,"^")+$P(X,"^",2)+$P(X,"^",3)+$P(X,"^",4)+$P(X,"^",5)
"RTN","RCDPRPL3",203,0)
 ;  get pending payments
"RTN","RCDPRPL3",204,0)
 ;  use pending since there may be more than one payment
"RTN","RCDPRPL3",205,0)
 ;  to the same bill on the receipt
"RTN","RCDPRPL3",206,0)
 S PENDING=$$PENDPAY^RCDPURET($P(PAYDATA,"^",3))
"RTN","RCDPRPL3",207,0)
 K ^TMP($J,"RCDPUREC","PP") ;set by pending payment call
"RTN","RCDPRPL3",208,0)
 ;  pending payments is not > billed
"RTN","RCDPRPL3",209,0)
 I PENDING'>X Q 0
"RTN","RCDPRPL3",210,0)
 ;  greater, return billed amt ^ pending payment amt
"RTN","RCDPRPL3",211,0)
 Q "1^"_X_"^"_PENDING
"RTN","RCDPRPL3",212,0)
 ;
"RTN","RCDPRPL3",213,0)
 ;
"RTN","RCDPRPL3",214,0)
ASKPROC() ;  ask if its okay to process the receipt
"RTN","RCDPRPL3",215,0)
 ;  1 is yes, otherwise no
"RTN","RCDPRPL3",216,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPRPL3",217,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCDPRPL3",218,0)
 S DIR("A")="  Are you sure you want to PROCESS this receipt"
"RTN","RCDPRPL3",219,0)
 D ^DIR
"RTN","RCDPRPL3",220,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPRPL3",221,0)
 Q Y
"RTN","RCDPRPL4")
0^117^B28894720
"RTN","RCDPRPL4",1,0)
RCDPRPL4 ;WISC/RFJ-receipt profile listmanager options ;1 Apr 01
"RTN","RCDPRPL4",2,0)
 ;;4.5;Accounts Receivable;**169,172,173**;Mar 20, 1995
"RTN","RCDPRPL4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPRPL4",4,0)
 Q
"RTN","RCDPRPL4",5,0)
 ;
"RTN","RCDPRPL4",6,0)
 ;  this routine contains the entry points for receipt management
"RTN","RCDPRPL4",7,0)
 ;
"RTN","RCDPRPL4",8,0)
 ;
"RTN","RCDPRPL4",9,0)
ONLINE ;  allow the supervisor to mark the CR document as input on line
"RTN","RCDPRPL4",10,0)
 D FULL^VALM1
"RTN","RCDPRPL4",11,0)
 S VALMBCK="R"
"RTN","RCDPRPL4",12,0)
 ;
"RTN","RCDPRPL4",13,0)
 ;  get fms document and status
"RTN","RCDPRPL4",14,0)
 N %,FMSDOC,GECSDATA
"RTN","RCDPRPL4",15,0)
 S FMSDOC=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPRPL4",16,0)
 ;
"RTN","RCDPRPL4",17,0)
 W !!,"This option will allow you to mark a rejected Cash Receipt document as"
"RTN","RCDPRPL4",18,0)
 W !,"entered on line.  This will prevent the document from being listed on"
"RTN","RCDPRPL4",19,0)
 W !,"the nightly mailman message used to help manage the receipts and deposits."
"RTN","RCDPRPL4",20,0)
 ;
"RTN","RCDPRPL4",21,0)
 W !!,"FMS Cash Receipt Document: ",$P(FMSDOC,"^"),?48,"Status: ",$P(FMSDOC,"^",2)
"RTN","RCDPRPL4",22,0)
 ;
"RTN","RCDPRPL4",23,0)
 I '$D(^XUSEC("PRCAY PAYMENT SUP",DUZ)) W !!,"You are not an owner of the supervisor PRCAY PAYMENT SUP security key." D QUIT Q
"RTN","RCDPRPL4",24,0)
 ;
"RTN","RCDPRPL4",25,0)
 ;  cr accepted
"RTN","RCDPRPL4",26,0)
 I $E($P(FMSDOC,"^",2))="A" W !!,"You CANNOT mark the Cash Receipt document as entered on line.",!,"The CR document is ACCEPTED ??" D QUIT Q
"RTN","RCDPRPL4",27,0)
 ;
"RTN","RCDPRPL4",28,0)
 ;  not been transmitted for 2 days
"RTN","RCDPRPL4",29,0)
 I $E($P(FMSDOC,"^",2))="T",$$FMDIFF^XLFDT(DT,$P(^RCY(344,RCRECTDA,0),"^",8))'>2 W !!,"You CANNOT mark the Cash Receipt document as entered on line.",!,"The CR document has NOT been TRANSMITTED for 2 days ??" D QUIT Q
"RTN","RCDPRPL4",30,0)
 ;
"RTN","RCDPRPL4",31,0)
 ;  cr queued for transmission
"RTN","RCDPRPL4",32,0)
 I $E($P(FMSDOC,"^",2))="Q"!($E($P(FMSDOC,"^",2))="M") W !!,"You CANNOT mark the Cash Receipt document as entered on line.",!,"The CR document is waiting to be TRANSMITTED ??" D QUIT Q
"RTN","RCDPRPL4",33,0)
 ;
"RTN","RCDPRPL4",34,0)
 ;  check to see if already marked as entered on line
"RTN","RCDPRPL4",35,0)
 I $E($P(FMSDOC,"^",2))="O" D  Q
"RTN","RCDPRPL4",36,0)
 .   I $$ASKSTAT("REMOVE")'=1 Q
"RTN","RCDPRPL4",37,0)
 .   W !,"... removing CR status as entered on line ..."
"RTN","RCDPRPL4",38,0)
 .   ;  remove the status on field 201
"RTN","RCDPRPL4",39,0)
 .   D EDITREC^RCDPUREC(RCRECTDA,"201////0;")
"RTN","RCDPRPL4",40,0)
 .   ;  show the new status
"RTN","RCDPRPL4",41,0)
 .   S FMSDOC=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPRPL4",42,0)
 .   W !!,"FMS Cash Receipt Document: ",$P(FMSDOC,"^"),?48,"Status: ",$P(FMSDOC,"^",2)
"RTN","RCDPRPL4",43,0)
 .   D QUIT
"RTN","RCDPRPL4",44,0)
 ;
"RTN","RCDPRPL4",45,0)
 ;  ask to change the status to entered on line
"RTN","RCDPRPL4",46,0)
 I $$ASKSTAT("ENTER")'=1 D QUIT Q
"RTN","RCDPRPL4",47,0)
 ;
"RTN","RCDPRPL4",48,0)
 ;  change the status to entered on line
"RTN","RCDPRPL4",49,0)
 W !,"... changing status to entered on line ..."
"RTN","RCDPRPL4",50,0)
 W !,"... changing the generic code sheet stack file status to ACCEPTED ..."
"RTN","RCDPRPL4",51,0)
 ;
"RTN","RCDPRPL4",52,0)
 ;  set the status to entered on line in field 201
"RTN","RCDPRPL4",53,0)
 D EDITREC^RCDPUREC(RCRECTDA,"201////1;")
"RTN","RCDPRPL4",54,0)
 ;
"RTN","RCDPRPL4",55,0)
 ;  set the generic code sheet status as accepted
"RTN","RCDPRPL4",56,0)
 ;  get the document ien
"RTN","RCDPRPL4",57,0)
 D DATA^GECSSGET($P(FMSDOC,"^"))
"RTN","RCDPRPL4",58,0)
 I $G(GECSDATA) D SETSTAT^GECSSTAA(GECSDATA,"A")
"RTN","RCDPRPL4",59,0)
 ;
"RTN","RCDPRPL4",60,0)
 ;  show the new status
"RTN","RCDPRPL4",61,0)
 S FMSDOC=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPRPL4",62,0)
 W !!,"FMS Cash Receipt Document: ",$P(FMSDOC,"^"),?48,"Status: ",$P(FMSDOC,"^",2)
"RTN","RCDPRPL4",63,0)
 ;
"RTN","RCDPRPL4",64,0)
QUIT ;  pause and rebuild the header
"RTN","RCDPRPL4",65,0)
 W !!,"press RETURN to continue: "
"RTN","RCDPRPL4",66,0)
 R %:DTIME
"RTN","RCDPRPL4",67,0)
 D HDR^RCDPRPLM
"RTN","RCDPRPL4",68,0)
 Q
"RTN","RCDPRPL4",69,0)
 ;
"RTN","RCDPRPL4",70,0)
 ;
"RTN","RCDPRPL4",71,0)
ASKSTAT(ACTION) ;  ask if its okay to remove or change the entered online status
"RTN","RCDPRPL4",72,0)
 ;  1 is yes, otherwise no
"RTN","RCDPRPL4",73,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPRPL4",74,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCDPRPL4",75,0)
 S DIR("A",1)="  Do you want to "_ACTION_" the status showing the Cash Receipt"
"RTN","RCDPRPL4",76,0)
 S DIR("A")="  document was entered ON LINE"
"RTN","RCDPRPL4",77,0)
 D ^DIR
"RTN","RCDPRPL4",78,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPRPL4",79,0)
 Q Y
"RTN","RCDPRPL4",80,0)
 ;
"RTN","RCDPRPL4",81,0)
ERAWL(RCSCR) ; Generate automatic dec adj from ERA Worklist in RCSCR
"RTN","RCDPRPL4",82,0)
 ; RCADJ returned = 1 if passed by reference and adjustment successful
"RTN","RCDPRPL4",83,0)
 ;       returned = 2 if passed by ref and adjustments aborted
"RTN","RCDPRPL4",84,0)
 ;       returned = -1 if error
"RTN","RCDPRPL4",85,0)
 ;       returned = 0 if no WL adjustments found
"RTN","RCDPRPL4",86,0)
 N RCZ,RCZ0,Z00,V00,RCCOM,RC1,RCADJ,RCOK
"RTN","RCDPRPL4",87,0)
 S RC1=1,RCZ=0,RCADJ=0
"RTN","RCDPRPL4",88,0)
 F  S RCZ=$O(^RCY(344.49,RCSCR,1,RCZ)) Q:'RCZ!(RCADJ=2)  S V00=$G(^(RCZ,0)),RCZ0=0 F  S RCZ0=$O(^RCY(344.49,RCSCR,1,RCZ,1,RCZ0)) Q:'RCZ0!(RCADJ=2)  S Z00=$G(^(RCZ0,0)) Q:"12"'[+$P(Z00,U,5)  D
"RTN","RCDPRPL4",89,0)
 . S RCCOM(1)=$P(Z00,U,9)
"RTN","RCDPRPL4",90,0)
 . I RC1,$P(Z00,U,5)=1 D  Q:RCADJ=2
"RTN","RCDPRPL4",91,0)
 .. S RC1=0
"RTN","RCDPRPL4",92,0)
 .. S DIR(0)="YA",DIR("B")="YES",DIR("A",1)="Generating automatic decrease adjustments from EDI Lbox Worklist ...",DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE?: "
"RTN","RCDPRPL4",93,0)
 .. D ^DIR K DIR
"RTN","RCDPRPL4",94,0)
 .. I Y'=1 S RCADJ=2
"RTN","RCDPRPL4",95,0)
 . I $P(Z00,U,8)=1 D  Q  ; previously done
"RTN","RCDPRPL4",96,0)
 .. I $P(Z00,U,5)=1 W !,"  Automatic decrease adj from ERA Worklist for bill #"_$P($G(^PRCA(430,+$P(V00,U,7),0)),U),!,"    for amount of "_$J(+$P(Z00,U,3),"",2)_" was previously completed" S RCADJ=1
"RTN","RCDPRPL4",97,0)
 . I $P(Z00,U,5)=1 D  Q  ; Decrease adj
"RTN","RCDPRPL4",98,0)
 .. I '$$INCDEC^RCBEUTR1($P(V00,U,7),$P(Z00,U,3),.RCCOM) D
"RTN","RCDPRPL4",99,0)
 ... W !,"  Could not perform automatic decrease adj from ERA Worklist for ",!,"    bill # "_$P($G(^PRCA(430,+$P(V00,U,7),0)),U)_" for amount of "_$J(+$P(Z00,U,3),"",2)
"RTN","RCDPRPL4",100,0)
 ... S RCADJ=-1
"RTN","RCDPRPL4",101,0)
 .. E  D  ; success
"RTN","RCDPRPL4",102,0)
 ... D UPD(RCSCR,RCZ,RCZ0)
"RTN","RCDPRPL4",103,0)
 ... S RCADJ=1
"RTN","RCDPRPL4",104,0)
 ... W !,"  EDI Lbox Worklist automatic dec adjustment made to "_$P($G(^PRCA(430,+$P(V00,U,7),0)),U)_": "_$J(+$P(Z00,U,3),"",2)
"RTN","RCDPRPL4",105,0)
 . I $P(Z00,U,5)=2 D  Q  ; Bill comment
"RTN","RCDPRPL4",106,0)
 .. D ADDCOMM^RCBEUTRA($P(V00,U,7),.RCCOM),UPD(RCSCR,RCZ,RCZ0)
"RTN","RCDPRPL4",107,0)
 ;
"RTN","RCDPRPL4",108,0)
 Q $G(RCADJ)
"RTN","RCDPRPL4",109,0)
 ;
"RTN","RCDPRPL4",110,0)
UPD(RCSCR,Z,Z0) ; Mark as complete so it doesn't get done twice
"RTN","RCDPRPL4",111,0)
 N DA,DIE,DR
"RTN","RCDPRPL4",112,0)
 S DA(2)=RCSCR,DA(1)=Z,DA=Z0
"RTN","RCDPRPL4",113,0)
 S DIE="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,",DR=".08////1" D ^DIE
"RTN","RCDPRPL4",114,0)
 Q
"RTN","RCDPRPL4",115,0)
 ;
"RTN","RCDPRPLM")
0^34^B81196267
"RTN","RCDPRPLM",1,0)
RCDPRPLM ;WISC/RFJ-receipt profile listmanager top routine ;1 Jun 99
"RTN","RCDPRPLM",2,0)
 ;;4.5;Accounts Receivable;**114,148,149,173**;Mar 20, 1995
"RTN","RCDPRPLM",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPRPLM",4,0)
 ;
"RTN","RCDPRPLM",5,0)
 N RCDPFXIT
"RTN","RCDPRPLM",6,0)
 ;
"RTN","RCDPRPLM",7,0)
RECTPROF ;  entry point called by link payment to prevent newing
"RTN","RCDPRPLM",8,0)
 ;  fast exit var RCDPFXIT
"RTN","RCDPRPLM",9,0)
 N RCRECTDA
"RTN","RCDPRPLM",10,0)
 ;
"RTN","RCDPRPLM",11,0)
 F  D  Q:'RCRECTDA
"RTN","RCDPRPLM",12,0)
 .   W !! S RCRECTDA=$$SELRECT^RCDPUREC(1)  ;  allow adding new receipt
"RTN","RCDPRPLM",13,0)
 .   I RCRECTDA<1 S RCRECTDA=0 Q
"RTN","RCDPRPLM",14,0)
 .   D EN^VALM("RCDP RECEIPT PROFILE")
"RTN","RCDPRPLM",15,0)
 .   ;  fast exit
"RTN","RCDPRPLM",16,0)
 .   I $G(RCDPFXIT) S RCRECTDA=0
"RTN","RCDPRPLM",17,0)
 Q
"RTN","RCDPRPLM",18,0)
 ;
"RTN","RCDPRPLM",19,0)
 ;
"RTN","RCDPRPLM",20,0)
INIT ;  init for list manager
"RTN","RCDPRPLM",21,0)
 N DATE,FMSDOC,GECSDA1,GECSDATA,RCCANCEL,RCDPDATA,RCDPFCAN,RCLINE,RCTOTAL,RCTRDA,SPACE,RCEFT,X,Z,Z0,RCZ,RCZ0,RCZ1,RCZ2
"RTN","RCDPRPLM",22,0)
 K ^TMP("RCDPRPLM",$J),^TMP("VALM VIDEO",$J)
"RTN","RCDPRPLM",23,0)
 ;
"RTN","RCDPRPLM",24,0)
 ;  fast exit
"RTN","RCDPRPLM",25,0)
 I $G(RCDPFXIT) S VALMQUIT=1 Q
"RTN","RCDPRPLM",26,0)
 ;
"RTN","RCDPRPLM",27,0)
 D DIQ344(RCRECTDA,".02:200")
"RTN","RCDPRPLM",28,0)
 ;
"RTN","RCDPRPLM",29,0)
 ;  set listmanager line #
"RTN","RCDPRPLM",30,0)
 S RCLINE=0
"RTN","RCDPRPLM",31,0)
 ;
"RTN","RCDPRPLM",32,0)
 K ^TMP($J,"RCEFT")
"RTN","RCDPRPLM",33,0)
 S RCEFT=+$O(^RCY(344.3,"ARDEP",+$P($G(^RCY(344,RCRECTDA,0)),U,6),0))
"RTN","RCDPRPLM",34,0)
 I RCEFT D
"RTN","RCDPRPLM",35,0)
 .   S Z=0 F  S Z=$O(^RCY(344.31,"B",RCEFT,Z)) Q:'Z  S Z0=$G(^RCY(344.31,+Z,0)) I $P(Z0,U,14) S ^TMP($J,"RCEFT",$P(Z0,U,14))=Z_U_$E($P(Z0,U,2),1,12)
"RTN","RCDPRPLM",36,0)
 S RCTRDA=0 F  S RCTRDA=$O(^RCY(344,RCRECTDA,1,RCTRDA)) Q:'RCTRDA  D
"RTN","RCDPRPLM",37,0)
 .   D DIQ34401(RCRECTDA,RCTRDA)
"RTN","RCDPRPLM",38,0)
 .   S RCLINE=RCLINE+1 D SET("",RCLINE,1,80,.01)
"RTN","RCDPRPLM",39,0)
 .   ;  check for payment cancelled
"RTN","RCDPRPLM",40,0)
 .   S RCCANCEL=0
"RTN","RCDPRPLM",41,0)
 .   I $P($G(^RCY(344,RCRECTDA,1,RCTRDA,0)),"^",4)=0,$P($G(^(1)),"^")'="" D
"RTN","RCDPRPLM",42,0)
 .   .   S RCCANCEL=1,RCDPFCAN=1
"RTN","RCDPRPLM",43,0)
 .   .   D SET("**",RCLINE,5,6)
"RTN","RCDPRPLM",44,0)
 .   ;  account
"RTN","RCDPRPLM",45,0)
 .   I $G(RCDPDATA(344.01,RCTRDA,.03,"E"))="" D
"RTN","RCDPRPLM",46,0)
 .   .   S RCDPDATA(344.01,RCTRDA,.03,"E")="[ "_$S(RCEFT:"5287.4/8NZZ "_$P($G(^TMP($J,"RCEFT",RCTRDA)),U,2),1:"suspense"_$$GETUNAPP^RCXFMSCR(RCRECTDA,RCTRDA,0))_" ]"
"RTN","RCDPRPLM",47,0)
 .   D SET("",RCLINE,7,33,.03)
"RTN","RCDPRPLM",48,0)
 .   ;  date of payment
"RTN","RCDPRPLM",49,0)
 .   I RCDPDATA(344.01,RCTRDA,.06,"I") D
"RTN","RCDPRPLM",50,0)
 .   .   D SET($E(RCDPDATA(344.01,RCTRDA,.06,"I"),4,5)_"/"_$E(RCDPDATA(344.01,RCTRDA,.06,"I"),6,7)_"/"_$E(RCDPDATA(344.01,RCTRDA,.06,"I"),2,3),RCLINE,35,42)
"RTN","RCDPRPLM",51,0)
 .   ;  entered by
"RTN","RCDPRPLM",52,0)
 .   I RCDPDATA(344.01,RCTRDA,.12,"E")'="" D
"RTN","RCDPRPLM",53,0)
 .   .   S X=$E($P(RCDPDATA(344.01,RCTRDA,.12,"E"),",",2))_$E(RCDPDATA(344.01,RCTRDA,.12,"E"))
"RTN","RCDPRPLM",54,0)
 .   .   I RCDPDATA(344.01,RCTRDA,.12,"I")=.5 S X="ar"
"RTN","RCDPRPLM",55,0)
 .   .   D SET(X,RCLINE,45,46)
"RTN","RCDPRPLM",56,0)
 .   D SET($J(RCDPDATA(344.01,RCTRDA,.04,"E"),8,2),RCLINE,62,70)
"RTN","RCDPRPLM",57,0)
 .   D SET($J(RCDPDATA(344.01,RCTRDA,.05,"E"),8,2),RCLINE,72,80)
"RTN","RCDPRPLM",58,0)
 .   ;
"RTN","RCDPRPLM",59,0)
 .   ;  if not processed, show if amount > bill
"RTN","RCDPRPLM",60,0)
 .   S X=$$CHECKPAY^RCDPRPL3(RCRECTDA,RCTRDA) I X D
"RTN","RCDPRPLM",61,0)
 .   .   S RCLINE=RCLINE+1
"RTN","RCDPRPLM",62,0)
 .   .   D SET("  WARNING: Pending Payments ($ "_$J($P(X,"^",3),0,2)_") exceed amount billed ($ "_$J($P(X,"^",2),0,2)_")",RCLINE,1,80)
"RTN","RCDPRPLM",63,0)
 .   ;
"RTN","RCDPRPLM",64,0)
 .   ;  show line 2 for check/credit payment
"RTN","RCDPRPLM",65,0)
 .   I $G(^DISV(DUZ,"RCDPRPLM","SHOWCHECK")) D
"RTN","RCDPRPLM",66,0)
 .   .   ;  receipt type of payment is check
"RTN","RCDPRPLM",67,0)
 .   .   I RCDPDATA(344,RCRECTDA,.04,"I")=4!(RCDPDATA(344,RCRECTDA,.04,"I")=12) D  Q
"RTN","RCDPRPLM",68,0)
 .   .   .   S RCLINE=RCLINE+1
"RTN","RCDPRPLM",69,0)
 .   .   .   D SET("      Check #",RCLINE,1,80,.07)
"RTN","RCDPRPLM",70,0)
 .   .   .   I 'RCDPDATA(344.01,RCTRDA,.1,"I") S RCDPDATA(344.01,RCTRDA,.1,"I")="???????"
"RTN","RCDPRPLM",71,0)
 .   .   .   D SET("Date: "_$E(RCDPDATA(344.01,RCTRDA,.1,"I"),4,5)_"/"_$E(RCDPDATA(344.01,RCTRDA,.1,"I"),6,7)_"/"_$E(RCDPDATA(344.01,RCTRDA,.1,"I"),2,3),RCLINE,32,80)
"RTN","RCDPRPLM",72,0)
 .   .   .   D SET("Bank #",RCLINE,47,80,.08)
"RTN","RCDPRPLM",73,0)
 .   .   ;  receipt type of payment is credit
"RTN","RCDPRPLM",74,0)
 .   .   I RCDPDATA(344,RCRECTDA,.04,"I")=7 D
"RTN","RCDPRPLM",75,0)
 .   .   .   S RCLINE=RCLINE+1
"RTN","RCDPRPLM",76,0)
 .   .   .   D SET("      Card #",RCLINE,1,80,.11)
"RTN","RCDPRPLM",77,0)
 .   .   .   D SET("Confirmation #",RCLINE,35,80,.02)
"RTN","RCDPRPLM",78,0)
 .   ;
"RTN","RCDPRPLM",79,0)
 .   ;  show line 3 for acct lookup, batch and seq #
"RTN","RCDPRPLM",80,0)
 .   I $G(^DISV(DUZ,"RCDPRPLM","SHOWACCT")) D
"RTN","RCDPRPLM",81,0)
 .   .   I RCDPDATA(344.01,RCTRDA,.21,"E")="",RCDPDATA(344.01,RCTRDA,.22,"E")="",RCDPDATA(344.01,RCTRDA,.23,"E")="" Q
"RTN","RCDPRPLM",82,0)
 .   .   S RCLINE=RCLINE+1
"RTN","RCDPRPLM",83,0)
 .   .   D SET("      AcctLU",RCLINE,1,80,.21)
"RTN","RCDPRPLM",84,0)
 .   .   D SET("Batch/Sequence: "_RCDPDATA(344.01,RCTRDA,.22,"E")_"/"_RCDPDATA(344.01,RCTRDA,.23,"E"),RCLINE,37,80)
"RTN","RCDPRPLM",85,0)
 .   ;
"RTN","RCDPRPLM",86,0)
 .   ;  show if posting error
"RTN","RCDPRPLM",87,0)
 .   I $G(^DISV(DUZ,"RCDPRPLM","SHOWCOMMENTS")),RCDPDATA(344.01,RCTRDA,1.01,"E")'="" D
"RTN","RCDPRPLM",88,0)
 .   .   S RCLINE=RCLINE+1
"RTN","RCDPRPLM",89,0)
 .   .   S X="Posting Error"
"RTN","RCDPRPLM",90,0)
 .   .   I RCCANCEL S X="Cancel Data"
"RTN","RCDPRPLM",91,0)
 .   .   D SET("      "_X,RCLINE,1,80,1.01)
"RTN","RCDPRPLM",92,0)
 .   ;
"RTN","RCDPRPLM",93,0)
 .   ;  show if comment
"RTN","RCDPRPLM",94,0)
 .   I $G(^DISV(DUZ,"RCDPRPLM","SHOWCOMMENTS")),RCDPDATA(344.01,RCTRDA,1.02,"E")'="" D
"RTN","RCDPRPLM",95,0)
 .   .   S RCLINE=RCLINE+1
"RTN","RCDPRPLM",96,0)
 .   .   D SET("      Comment",RCLINE,1,80,1.02)
"RTN","RCDPRPLM",97,0)
 .   ;
"RTN","RCDPRPLM",98,0)
 .   ;  if EDI Lockbox pending adjustments, show it
"RTN","RCDPRPLM",99,0)
 .   I $P($G(^RCY(344,RCRECTDA,0)),U,18),$G(RCDPDATA(344.01,RCTRDA,.27,"E")) D
"RTN","RCDPRPLM",100,0)
 .   .   S RCZ=$P(^RCY(344,RCRECTDA,0),U,18),RCZ0=RCDPDATA(344.01,RCTRDA,.27,"E")
"RTN","RCDPRPLM",101,0)
 .   .   S RCZ1=0 F  S RCZ1=$O(^RCY(344.49,RCZ,1,RCZ0,1,RCZ1)) Q:'RCZ1  S RCZ2=$G(^(RCZ1,0)) I $P(RCZ2,U,5)'="","12"[$P(RCZ2,U,5),'$P(RCZ2,U,8) D
"RTN","RCDPRPLM",102,0)
 .   .   .   I $P(RCZ2,U,5)=1 S RCLINE=RCLINE+1 D SET("      Pending decrease adjustment for "_$J($P(RCZ2,U,3),"",2),RCLINE,1,80) Q
"RTN","RCDPRPLM",103,0)
 .   .   .   I $G(^DISV(DUZ,"RCDPRPLM","SHOWCOMMENTS")),$P(RCZ2,U,5)=2 S RCLINE=RCLINE+1 D SET("      Comment: "_$P(RCZ2,U,9),RCLINE,1,80) Q
"RTN","RCDPRPLM",104,0)
 .   ;
"RTN","RCDPRPLM",105,0)
 .   ;  calculate totals
"RTN","RCDPRPLM",106,0)
 .   S RCTOTAL(1)=$G(RCTOTAL(1))+RCDPDATA(344.01,RCTRDA,.04,"E")
"RTN","RCDPRPLM",107,0)
 .   S RCTOTAL(2)=$G(RCTOTAL(2))+RCDPDATA(344.01,RCTRDA,.05,"E")
"RTN","RCDPRPLM",108,0)
 .   ;
"RTN","RCDPRPLM",109,0)
 .   ;  kill local variable to prevent store errors
"RTN","RCDPRPLM",110,0)
 .   K RCDPDATA(344.01,RCTRDA)
"RTN","RCDPRPLM",111,0)
 ;
"RTN","RCDPRPLM",112,0)
 ;  show totals
"RTN","RCDPRPLM",113,0)
 K ^TMP($J,"RCEFT")
"RTN","RCDPRPLM",114,0)
 S RCLINE=RCLINE+1 D SET("",RCLINE,1,80)
"RTN","RCDPRPLM",115,0)
 D SET("--------  --------",RCLINE,62,80)
"RTN","RCDPRPLM",116,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",117,0)
 D SET("      TOTAL DOLLARS FOR RECEIPT",RCLINE,1,80)
"RTN","RCDPRPLM",118,0)
 D SET($J($G(RCTOTAL(1)),8,2),RCLINE,62,70)
"RTN","RCDPRPLM",119,0)
 D SET($J($G(RCTOTAL(2)),8,2),RCLINE,72,80)
"RTN","RCDPRPLM",120,0)
 ;  show cancelled
"RTN","RCDPRPLM",121,0)
 I $G(RCDPFCAN) D
"RTN","RCDPRPLM",122,0)
 .   S RCLINE=RCLINE+1
"RTN","RCDPRPLM",123,0)
 .   D SET("**indicates payment is CANCELLED",RCLINE,5,80)
"RTN","RCDPRPLM",124,0)
 ;
"RTN","RCDPRPLM",125,0)
 ;  show history
"RTN","RCDPRPLM",126,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",127,0)
 D SET(" ",RCLINE,1,80)
"RTN","RCDPRPLM",128,0)
 ;  start history on first line of a screen if it does not fit on
"RTN","RCDPRPLM",129,0)
 ;  current screen
"RTN","RCDPRPLM",130,0)
 I (RCLINE#12)>8 F SPACE=(RCLINE#12):1:12 S RCLINE=RCLINE+1 D SET(" ",RCLINE,1,80)
"RTN","RCDPRPLM",131,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",132,0)
 D SET("Receipt History",RCLINE,1,80,0,IOUON,IOUOFF)
"RTN","RCDPRPLM",133,0)
 S DATE=RCDPDATA(344,RCRECTDA,.03,"E"),DATE=$P(DATE,"@")_"  "_$P($P(DATE,"@",2),":",1,2)
"RTN","RCDPRPLM",134,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",135,0)
 S SPACE="",$P(SPACE," ",80)=""
"RTN","RCDPRPLM",136,0)
 I RCDPDATA(344,RCRECTDA,.02,"I")=.5 S RCDPDATA(344,RCRECTDA,.02,"E")="accounts receivable"
"RTN","RCDPRPLM",137,0)
 D SET($E("   Opened By: "_RCDPDATA(344,RCRECTDA,.02,"E")_SPACE,1,39)_"Date/Time    Opened: "_DATE,RCLINE,1,80)
"RTN","RCDPRPLM",138,0)
 S DATE=RCDPDATA(344,RCRECTDA,.12,"E"),DATE=$P(DATE,"@")_"  "_$P($P(DATE,"@",2),":",1,2)
"RTN","RCDPRPLM",139,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",140,0)
 I RCDPDATA(344,RCRECTDA,.11,"I")=.5 S RCDPDATA(344,RCRECTDA,.11,"E")="accounts receivable"
"RTN","RCDPRPLM",141,0)
 D SET($E("Last Edit By: "_RCDPDATA(344,RCRECTDA,.11,"E")_SPACE,1,39)_"Date/Time Last Edit: "_DATE,RCLINE,1,80)
"RTN","RCDPRPLM",142,0)
 S DATE=RCDPDATA(344,RCRECTDA,.08,"E"),DATE=$P(DATE,"@")_"  "_$P($P(DATE,"@",2),":",1,2)
"RTN","RCDPRPLM",143,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",144,0)
 I RCDPDATA(344,RCRECTDA,.07,"I")=.5 S RCDPDATA(344,RCRECTDA,.07,"E")="accounts receivable"
"RTN","RCDPRPLM",145,0)
 D SET($E("Processed By: "_RCDPDATA(344,RCRECTDA,.07,"E")_SPACE,1,39)_"Date/Time Processed: "_DATE,RCLINE,1,80)
"RTN","RCDPRPLM",146,0)
 ;
"RTN","RCDPRPLM",147,0)
 ;  show fms code sheets if switch on
"RTN","RCDPRPLM",148,0)
 I $G(^DISV(DUZ,"RCDPRPLM","SHOWFMS")) D
"RTN","RCDPRPLM",149,0)
 .   S FMSDOC=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPRPLM",150,0)
 .   S RCLINE=RCLINE+1 D SET(" ",RCLINE,1,80)
"RTN","RCDPRPLM",151,0)
 .   S RCLINE=RCLINE+1 D SET("FMS Cash Receipt Document:",RCLINE,1,80,0,IOUON,IOUOFF)
"RTN","RCDPRPLM",152,0)
 .   D SET($P(FMSDOC,"^")_$S($P(FMSDOC,"^",3):"(on deposit)",1:""),RCLINE,28,80)
"RTN","RCDPRPLM",153,0)
 .   D SET("Status: "_$P(FMSDOC,"^",2),RCLINE,55,80)
"RTN","RCDPRPLM",154,0)
 .   N DIQ2 D DATA^GECSSGET($P(FMSDOC,"^"),1)
"RTN","RCDPRPLM",155,0)
 .   I '$G(GECSDATA) Q
"RTN","RCDPRPLM",156,0)
 .   S GECSDA1=0 F  S GECSDA1=$O(GECSDATA(2100.1,GECSDATA,10,GECSDA1)) Q:'GECSDA1  D
"RTN","RCDPRPLM",157,0)
 .   .   S RCLINE=RCLINE+1 D SET(GECSDATA(2100.1,GECSDATA,10,GECSDA1),RCLINE,1,80)
"RTN","RCDPRPLM",158,0)
 ;
"RTN","RCDPRPLM",159,0)
 ;  show EEOB detail if switch on
"RTN","RCDPRPLM",160,0)
 D SHEOB^RCDPRPL2
"RTN","RCDPRPLM",161,0)
 ;
"RTN","RCDPRPLM",162,0)
 ;  set valmcnt to # of lines in list
"RTN","RCDPRPLM",163,0)
 S VALMCNT=RCLINE
"RTN","RCDPRPLM",164,0)
 D HDR
"RTN","RCDPRPLM",165,0)
 Q
"RTN","RCDPRPLM",166,0)
 ;
"RTN","RCDPRPLM",167,0)
 ;
"RTN","RCDPRPLM",168,0)
SET(STRING,LINE,COLBEG,COLEND,FIELD,ON,OFF) ;  set array
"RTN","RCDPRPLM",169,0)
 I $G(FIELD) S STRING=STRING_$S(STRING="":"",1:": ")_$G(RCDPDATA(344.01,RCTRDA,FIELD,"E"))
"RTN","RCDPRPLM",170,0)
 I STRING="",'$G(FIELD) D SET^VALM10(LINE,$J("",80)) Q
"RTN","RCDPRPLM",171,0)
 I '$D(@VALMAR@(LINE,0)) D SET^VALM10(LINE,$J("",80))
"RTN","RCDPRPLM",172,0)
 D SET^VALM10(LINE,$$SETSTR^VALM1(STRING,@VALMAR@(LINE,0),COLBEG,COLEND-COLBEG+1))
"RTN","RCDPRPLM",173,0)
 I $G(ON)]""!($G(OFF)]"") D CNTRL^VALM10(LINE,COLBEG,$L(STRING),ON,OFF)
"RTN","RCDPRPLM",174,0)
 Q
"RTN","RCDPRPLM",175,0)
 ;
"RTN","RCDPRPLM",176,0)
 ;
"RTN","RCDPRPLM",177,0)
DIQ344(DA,DR) ;  retrieves data for flds in file 344
"RTN","RCDPRPLM",178,0)
 N %I,D0,DIC,DIQ,DIQ2,YY
"RTN","RCDPRPLM",179,0)
 K RCDPDATA(344,DA)
"RTN","RCDPRPLM",180,0)
 S DIQ(0)="IE",DIC="^RCY(344,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPRPLM",181,0)
 Q
"RTN","RCDPRPLM",182,0)
 ;
"RTN","RCDPRPLM",183,0)
 ;
"RTN","RCDPRPLM",184,0)
DIQ34401(DA,SUBDA) ;  retrieves data for flds in file 344
"RTN","RCDPRPLM",185,0)
 ;  da = receipt da
"RTN","RCDPRPLM",186,0)
 N %I,D0,DIC,DIQ,DIQ2,DR
"RTN","RCDPRPLM",187,0)
 K RCDPDATA(344.01,SUBDA)
"RTN","RCDPRPLM",188,0)
 S DR=1,DR(344.01)=".01:1.02",DA(344.01)=SUBDA
"RTN","RCDPRPLM",189,0)
 S DIQ(0)="IE",DIC="^RCY(344,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPRPLM",190,0)
 Q
"RTN","RCDPRPLM",191,0)
 ;
"RTN","RCDPRPLM",192,0)
 ;
"RTN","RCDPRPLM",193,0)
HDR ;  header code for list manager display
"RTN","RCDPRPLM",194,0)
 N DATE,FMSDOC,RCDPDATA,SPACE,RCEFT,Z
"RTN","RCDPRPLM",195,0)
 D DIQ344(RCRECTDA,".01;.04;.06;.08;.14;.17;.18;")
"RTN","RCDPRPLM",196,0)
 S SPACE="",$P(SPACE," ",80)=""
"RTN","RCDPRPLM",197,0)
 S VALMHDR(1)=$E("   Receipt #: "_RCDPDATA(344,RCRECTDA,.01,"E")_SPACE,1,39)_"Type of Payment: "_RCDPDATA(344,RCRECTDA,.04,"E")
"RTN","RCDPRPLM",198,0)
 S Z=RCDPDATA(344,RCRECTDA,.06,"E"),RCEFT=+$O(^RCY(344.3,"ARDEP",+$P($G(^RCY(344,RCRECTDA,0)),U,6),0))
"RTN","RCDPRPLM",199,0)
 S VALMHDR(2)=$E($S('RCEFT&'RCDPDATA(344,RCRECTDA,.17,"I"):"   Deposit #: "_Z,RCEFT:" EFT Deposit: "_Z,1:"EFT Detail #: "_RCDPDATA(344,RCRECTDA,.17,"E"))_" "_$P($G(^RCY(344.31,+RCDPDATA(344,RCRECTDA,.17,"I"),0)),U,2)_SPACE,1,23)
"RTN","RCDPRPLM",200,0)
 S VALMHDR(2)=VALMHDR(2)_$E($S(RCDPDATA(344,RCRECTDA,.18,"E")'="":"   ERA #: "_RCDPDATA(344,RCRECTDA,.18,"E"),1:"")_SPACE,1,16)_" Receipt Status: "_RCDPDATA(344,RCRECTDA,.14,"E")
"RTN","RCDPRPLM",201,0)
 ;  get fms document and status
"RTN","RCDPRPLM",202,0)
 S FMSDOC=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPRPLM",203,0)
 S VALMHDR(3)=$E("FMS Document: "_$TR($P(FMSDOC,"^")," ")_$S($P(FMSDOC,"^",3):"(on deposit)",1:"")_SPACE,1,39)_" FMS Doc Status: "_$P(FMSDOC,"^",2)
"RTN","RCDPRPLM",204,0)
 ;
"RTN","RCDPRPLM",205,0)
 I RCDPDATA(344,RCRECTDA,.08,"I") S VALMSG="Receipt processed on "_RCDPDATA(344,RCRECTDA,.08,"E")
"RTN","RCDPRPLM",206,0)
 Q
"RTN","RCDPRPLM",207,0)
 ;
"RTN","RCDPRPLM",208,0)
 ;
"RTN","RCDPRPLM",209,0)
EXIT ;  exit option/clean up
"RTN","RCDPRPLM",210,0)
 K ^TMP("RCDPRPLM",$J)
"RTN","RCDPRPLM",211,0)
 Q
"RTN","RCDPRPLU")
0^73^B5817284
"RTN","RCDPRPLU",1,0)
RCDPRPLU ;WISC/RFJ-receipt profile utilities ;1 Jun 99
"RTN","RCDPRPLU",2,0)
 ;;4.5;Accounts Receivable;**114,173**;Mar 20, 1995
"RTN","RCDPRPLU",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPRPLU",4,0)
 Q
"RTN","RCDPRPLU",5,0)
 ;
"RTN","RCDPRPLU",6,0)
 ;
"RTN","RCDPRPLU",7,0)
CHECKREC(RECTDA) ;  check the receipt to stop edit/change if approved
"RTN","RCDPRPLU",8,0)
 ;  return 0^message to stop edit/change
"RTN","RCDPRPLU",9,0)
 ;         1         to continue
"RTN","RCDPRPLU",10,0)
 N MESSAGE,RESULT
"RTN","RCDPRPLU",11,0)
 ;
"RTN","RCDPRPLU",12,0)
 ;  closed
"RTN","RCDPRPLU",13,0)
 I $P($G(^RCY(344,RECTDA,0)),"^",14)=0 Q "0^Receipt has been PROCESSED to AR and FMS."
"RTN","RCDPRPLU",14,0)
 I $$EDILB^RCDPEU(RECTDA)=1,$P($G(^RCY(344,RECTDA,0)),U,6) Q "0^EDI 3rd Party Lockbox deposit type receipt."
"RTN","RCDPRPLU",15,0)
 ;  lockbox
"RTN","RCDPRPLU",16,0)
 ;  this screen was removed so sites could hand enter lockbox receipts
"RTN","RCDPRPLU",17,0)
 ;I $P($G(^RC(341.1,+$P($G(^RCY(344,RECTDA,0)),"^",4),0)),"^",2)=12 Q "0^Lockbox type receipt."
"RTN","RCDPRPLU",18,0)
 ;  open
"RTN","RCDPRPLU",19,0)
 Q 1
"RTN","RCDPRPLU",20,0)
 ;
"RTN","RCDPRPLU",21,0)
 ;
"RTN","RCDPRPLU",22,0)
LOCKREC(RECTDA) ;  lock the receipt, call only from listmanager options
"RTN","RCDPRPLU",23,0)
 ;  if receipt not passed, return 2
"RTN","RCDPRPLU",24,0)
 I 'RECTDA Q 2
"RTN","RCDPRPLU",25,0)
 N RESULT
"RTN","RCDPRPLU",26,0)
 S RESULT=1
"RTN","RCDPRPLU",27,0)
 L +^RCY(344,RECTDA):5
"RTN","RCDPRPLU",28,0)
 I '$T D
"RTN","RCDPRPLU",29,0)
 .   S VALMSG="Another user is editing the receipt."
"RTN","RCDPRPLU",30,0)
 .   D WRITE(VALMSG)
"RTN","RCDPRPLU",31,0)
 .   S RESULT=0
"RTN","RCDPRPLU",32,0)
 Q RESULT
"RTN","RCDPRPLU",33,0)
 ;
"RTN","RCDPRPLU",34,0)
 ;
"RTN","RCDPRPLU",35,0)
WRITE(MESSAGE) ;  write message on screen with delay
"RTN","RCDPRPLU",36,0)
 N %
"RTN","RCDPRPLU",37,0)
 W !,MESSAGE
"RTN","RCDPRPLU",38,0)
 W !,"press RETURN to continue: "
"RTN","RCDPRPLU",39,0)
 R %:DTIME
"RTN","RCDPRPLU",40,0)
 Q
"RTN","RCDPRPLU",41,0)
 ;
"RTN","RCDPRPLU",42,0)
 ;
"RTN","RCDPRPLU",43,0)
MAILMSG(RCRECTDA,ACTION) ;  mail a message to supervisor key holders
"RTN","RCDPRPLU",44,0)
 N %,LINE,VALMHDR,VALMSG,XMDUZ,XMZ,YY,XMSUB,XMTEXT,XMY
"RTN","RCDPRPLU",45,0)
 K ^TMP($J,"RCDPRPLU")
"RTN","RCDPRPLU",46,0)
 S LINE=0
"RTN","RCDPRPLU",47,0)
 ;
"RTN","RCDPRPLU",48,0)
 ;  ---- start build mailman message ----
"RTN","RCDPRPLU",49,0)
 D SETLINE("Sent to: PRCAY PAYMENT SUP security key holders")
"RTN","RCDPRPLU",50,0)
 D SETLINE(" ")
"RTN","RCDPRPLU",51,0)
 ;
"RTN","RCDPRPLU",52,0)
 ;  build the header line
"RTN","RCDPRPLU",53,0)
 D HDR^RCDPRPLM
"RTN","RCDPRPLU",54,0)
 F %=1:1 Q:'$D(VALMHDR(%))  D SETLINE(VALMHDR(%))
"RTN","RCDPRPLU",55,0)
 ;
"RTN","RCDPRPLU",56,0)
 D SETLINE(" ")
"RTN","RCDPRPLU",57,0)
 D SETLINE("This receipt was approved and the following action occurred:")
"RTN","RCDPRPLU",58,0)
 D SETLINE("  ACTION: "_ACTION)
"RTN","RCDPRPLU",59,0)
 D SETLINE("      BY: "_$P(^VA(200,DUZ,0),"^"))
"RTN","RCDPRPLU",60,0)
 ;  ---- end build mailman message ----
"RTN","RCDPRPLU",61,0)
 ;
"RTN","RCDPRPLU",62,0)
 S XMSUB="Receipt Processing Audit"
"RTN","RCDPRPLU",63,0)
 S XMDUZ="Accounts Receivable Package"
"RTN","RCDPRPLU",64,0)
 S XMTEXT="^TMP($J,""RCDPRPLU"","
"RTN","RCDPRPLU",65,0)
 S %=0 F  S %=$O(^XUSEC("PRCAY PAYMENT SUP",%)) Q:'%  S XMY(%)=""
"RTN","RCDPRPLU",66,0)
 D ^XMD
"RTN","RCDPRPLU",67,0)
 K ^TMP($J,"RCDPRPLU")
"RTN","RCDPRPLU",68,0)
 Q
"RTN","RCDPRPLU",69,0)
 ;
"RTN","RCDPRPLU",70,0)
 ;
"RTN","RCDPRPLU",71,0)
SETLINE(MESSAGE) ;  set the line for the mail message
"RTN","RCDPRPLU",72,0)
 S LINE=LINE+1
"RTN","RCDPRPLU",73,0)
 S ^TMP($J,"RCDPRPLU",LINE)=MESSAGE
"RTN","RCDPRPLU",74,0)
 Q
"RTN","RCDPUDEP")
0^40^B13072574
"RTN","RCDPUDEP",1,0)
RCDPUDEP ;WISC/RFJ-deposit utilities ;1 Jun 99
"RTN","RCDPUDEP",2,0)
 ;;4.5;Accounts Receivable;**114,173**;Mar 20, 1995
"RTN","RCDPUDEP",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPUDEP",4,0)
 Q
"RTN","RCDPUDEP",5,0)
 ;
"RTN","RCDPUDEP",6,0)
 ;
"RTN","RCDPUDEP",7,0)
ADDDEPT(DEPOSIT,DEPDATE) ;  if the deposit is not entered, add it
"RTN","RCDPUDEP",8,0)
 ;
"RTN","RCDPUDEP",9,0)
 ;  if deposit date is missing, do not add the deposit
"RTN","RCDPUDEP",10,0)
 I 'DEPDATE Q 0
"RTN","RCDPUDEP",11,0)
 ;
"RTN","RCDPUDEP",12,0)
 ;  already in file, deposit number and deposit date match
"RTN","RCDPUDEP",13,0)
 N DA,RCDPFLAG
"RTN","RCDPUDEP",14,0)
 S DA=0 F  S DA=$O(^RCY(344.1,"B",DEPOSIT,DA)) Q:'DA  I $P($G(^RCY(344.1,DA,0)),"^",3)=DEPDATE S RCDPFLAG=1 Q
"RTN","RCDPUDEP",15,0)
 I $G(RCDPFLAG) Q DA
"RTN","RCDPUDEP",16,0)
 ;
"RTN","RCDPUDEP",17,0)
 ;  add it
"RTN","RCDPUDEP",18,0)
 N %,%DT,D0,DA,DD,DI,DIC,DIE,DLAYGO,DO,DQ,DR,X,Y
"RTN","RCDPUDEP",19,0)
 S DIC="^RCY(344.1,",DIC(0)="L",DLAYGO=344.1
"RTN","RCDPUDEP",20,0)
 ;  .03 = deposit date               .06 = opened by
"RTN","RCDPUDEP",21,0)
 ;  .07 = date/time opened           .12 = status (set to 1:open)
"RTN","RCDPUDEP",22,0)
 S DIC("DR")=".03////"_DEPDATE_";.06////"_DUZ_";.07///NOW;.12////1;"
"RTN","RCDPUDEP",23,0)
 S X=DEPOSIT
"RTN","RCDPUDEP",24,0)
 D FILE^DICN
"RTN","RCDPUDEP",25,0)
 I Y>0 Q +Y
"RTN","RCDPUDEP",26,0)
 Q 0
"RTN","RCDPUDEP",27,0)
 ;
"RTN","RCDPUDEP",28,0)
 ;
"RTN","RCDPUDEP",29,0)
SELDEPT(ADDNEW) ;  select a deposit
"RTN","RCDPUDEP",30,0)
 ;  if $g(addnew) allow adding a new deposit
"RTN","RCDPUDEP",31,0)
 ;  returns -1 for timeout or ^, 0 for no selection, or ien of deposit
"RTN","RCDPUDEP",32,0)
 N %,%T,%Y,C,D0,DA,DIC,DIE,DLAYGO,DQ,DR,DTOUT,DUOUT,RCDEFLUP,X,Y
"RTN","RCDPUDEP",33,0)
 S DIC="^RCY(344.1,",DIC(0)="QEAM",DIC("A")="Select DEPOSIT: "
"RTN","RCDPUDEP",34,0)
 S DIC("W")="D DICW^RCDPUDEP"
"RTN","RCDPUDEP",35,0)
 ;  use special lookup on input
"RTN","RCDPUDEP",36,0)
 S RCDEFLUP=1
"RTN","RCDPUDEP",37,0)
 I $G(ADDNEW) S DIC(0)="QEALM",DLAYGO=344.1,DIC("DR")=".03///TODAY;.06////"_DUZ_";.07///NOW;.12////1;"
"RTN","RCDPUDEP",38,0)
 D ^DIC
"RTN","RCDPUDEP",39,0)
 I Y<0,'$G(DUOUT),'$G(DTOUT) S Y=0
"RTN","RCDPUDEP",40,0)
 Q +Y
"RTN","RCDPUDEP",41,0)
 ;
"RTN","RCDPUDEP",42,0)
 ;
"RTN","RCDPUDEP",43,0)
DICW ;  write identifier code for receipt lookup
"RTN","RCDPUDEP",44,0)
 N DATA
"RTN","RCDPUDEP",45,0)
 S DATA=$G(^RCY(344.1,Y,0)) I DATA="" Q
"RTN","RCDPUDEP",46,0)
 ;  opened by
"RTN","RCDPUDEP",47,0)
 W ?13,"by: ",$E($P($G(^VA(200,+$P(DATA,"^",6),0)),"^"),1,15)
"RTN","RCDPUDEP",48,0)
 ;  date opened
"RTN","RCDPUDEP",49,0)
 I '$P(DATA,"^",7) S $P(DATA,"^",7)="???????"
"RTN","RCDPUDEP",50,0)
 W ?35," on: ",$E($P(DATA,"^",7),4,5),"/",$E($P(DATA,"^",7),6,7),"/",$E($P(DATA,"^",7),2,3)
"RTN","RCDPUDEP",51,0)
 ;  total dollars
"RTN","RCDPUDEP",52,0)
 W ?50," amt: $",$J($P(DATA,"^",4),9,2)
"RTN","RCDPUDEP",53,0)
 ;  status
"RTN","RCDPUDEP",54,0)
 W ?69," ",$P("N/A^OPEN^DEPOSITED^CONFIRMED^PROCESSED^VOID","^",+$P(DATA,"^",12)+1)
"RTN","RCDPUDEP",55,0)
 Q
"RTN","RCDPUDEP",56,0)
 ;
"RTN","RCDPUDEP",57,0)
 ;
"RTN","RCDPUDEP",58,0)
LOOKUP ;  special lookup on deposits, called from ^dd(344.1,.01,7.5)
"RTN","RCDPUDEP",59,0)
 ;  if rcdeflup flag not set, do not use special lookup
"RTN","RCDPUDEP",60,0)
 I '$D(RCDEFLUP) Q
"RTN","RCDPUDEP",61,0)
 ;  1:OPEN;3:CONFIRMED
"RTN","RCDPUDEP",62,0)
 ;  user entered O.? for lookup on open deposits
"RTN","RCDPUDEP",63,0)
 I X["O."!(X["o.") S DIC("S")="I $P(^(0),U,12)=1" S X="?" Q
"RTN","RCDPUDEP",64,0)
 ;  user entered C.? for lookup on confirmed deposits
"RTN","RCDPUDEP",65,0)
 I X["C."!(X["c.") S DIC("S")="I $P(^(0),U,12)=3" S X="?" Q
"RTN","RCDPUDEP",66,0)
 ;  deposit ticket # manually entered is for electronic ticket only
"RTN","RCDPUDEP",67,0)
 I $G(DIC(0))["L",$$AUTODEP(X) D EN^DDIOL(" ** Deposit #'s starting with "_$E(X,1,3)_" can only be used by automatic deposits",,"!") S X=""
"RTN","RCDPUDEP",68,0)
 K DIC("S")
"RTN","RCDPUDEP",69,0)
 Q
"RTN","RCDPUDEP",70,0)
 ;
"RTN","RCDPUDEP",71,0)
 ;
"RTN","RCDPUDEP",72,0)
EDITDEP(DA,ASKDATE) ;  edit the deposit
"RTN","RCDPUDEP",73,0)
 ;  if $g(askdate) ask only the deposit date
"RTN","RCDPUDEP",74,0)
 N %,D,D0,DI,DIC,DIE,DQ,DR,J,X,Y
"RTN","RCDPUDEP",75,0)
 S (DIC,DIE)="^RCY(344.1,",DR=""
"RTN","RCDPUDEP",76,0)
 ;  deposit date(.03), do not allow edit if closed or either lockbox
"RTN","RCDPUDEP",77,0)
 I $$CHECKDEP^RCDPDPLU(DA) S DR=".03BANK DEPOSIT DATE//TODAY;"
"RTN","RCDPUDEP",78,0)
 ;  bank(.13)
"RTN","RCDPUDEP",79,0)
 S DR=DR_".13//"_$P($G(^RC(342.1,+$O(^RC(342.1,"AC",9,0)),0)),"^")_";"
"RTN","RCDPUDEP",80,0)
 ;  bank trace(.05)
"RTN","RCDPUDEP",81,0)
 S DR=DR_".05;"
"RTN","RCDPUDEP",82,0)
 ;  agency title(.17)
"RTN","RCDPUDEP",83,0)
 S DR=DR_".17//"_$P($G(^RC(342.1,+$O(^RC(342.1,"AC",10,0)),0)),"^")_";"
"RTN","RCDPUDEP",84,0)
 ;  agency location code(.14), comments(1)
"RTN","RCDPUDEP",85,0)
 S DR=DR_".14//"_$P(^RC(342,1,0),"^",7)_";1;"
"RTN","RCDPUDEP",86,0)
 ;
"RTN","RCDPUDEP",87,0)
 ;  only ask deposit date
"RTN","RCDPUDEP",88,0)
 I $G(ASKDATE) S DR=".03BANK DEPOSIT DATE//TODAY;"
"RTN","RCDPUDEP",89,0)
 D ^DIE
"RTN","RCDPUDEP",90,0)
 Q
"RTN","RCDPUDEP",91,0)
 ;
"RTN","RCDPUDEP",92,0)
 ;
"RTN","RCDPUDEP",93,0)
CONFIRM(DA) ;  confirm the deposit
"RTN","RCDPUDEP",94,0)
 N %DT,D,D0,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCDPUDEP",95,0)
 S (DIC,DIE)="^RCY(344.1,"
"RTN","RCDPUDEP",96,0)
 S DR=".04///"_$$TOTAL(DA)_";.12////3;.1////"_DUZ_";.11///NOW;"
"RTN","RCDPUDEP",97,0)
 D ^DIE
"RTN","RCDPUDEP",98,0)
 Q
"RTN","RCDPUDEP",99,0)
 ;
"RTN","RCDPUDEP",100,0)
 ;
"RTN","RCDPUDEP",101,0)
TOTAL(RCDEPTDA) ;  compute total dollars for all receipts on the deposit
"RTN","RCDPUDEP",102,0)
 N RCRECTDA,RCTRANDA,TOTAL
"RTN","RCDPUDEP",103,0)
 S RCRECTDA=0
"RTN","RCDPUDEP",104,0)
 F  S RCRECTDA=$O(^RCY(344,"AD",RCDEPTDA,RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPUDEP",105,0)
 .   S RCTRANDA=0
"RTN","RCDPUDEP",106,0)
 .   F  S RCTRANDA=$O(^RCY(344,RCRECTDA,1,RCTRANDA)) Q:'RCTRANDA  D
"RTN","RCDPUDEP",107,0)
 .   .   S TOTAL=$G(TOTAL)+$P($G(^RCY(344,RCRECTDA,1,RCTRANDA,0)),"^",4)
"RTN","RCDPUDEP",108,0)
 Q +$G(TOTAL)
"RTN","RCDPUDEP",109,0)
 ;
"RTN","RCDPUDEP",110,0)
AUTODEP(X) ; Function returns 1 if the deposit ticket # in X is in the auto
"RTN","RCDPUDEP",111,0)
 ; deposit number space 269xxx, 369xxx, 469xxx, 569xxx
"RTN","RCDPUDEP",112,0)
 N Y
"RTN","RCDPUDEP",113,0)
 S Y=0
"RTN","RCDPUDEP",114,0)
 I $L(X)=6,$E(X,2,3)="69","2345"[$E(X),'$D(^RCY(344.1,"B",X)) S Y=1
"RTN","RCDPUDEP",115,0)
 Q Y
"RTN","RCDPUDEP",116,0)
 ;
"RTN","RCDPURE1")
0^16^B54927547
"RTN","RCDPURE1",1,0)
RCDPURE1 ;WISC/RFJ-process a receipt ;1 Jun 99
"RTN","RCDPURE1",2,0)
 ;;4.5;Accounts Receivable;**114,148,153,169,204,173**;Mar 20, 1995
"RTN","RCDPURE1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPURE1",4,0)
 Q
"RTN","RCDPURE1",5,0)
 ;
"RTN","RCDPURE1",6,0)
 ;
"RTN","RCDPURE1",7,0)
PROCESS(RCRECTDA,RCSCREEN) ;  process a receipt, update ar, generate cr/tr documents to fms
"RTN","RCDPURE1",8,0)
 ;  the receipt and deposit must be locked before calling this label
"RTN","RCDPURE1",9,0)
 ;  if $g(rcscreen) = 1 show messages during processing
"RTN","RCDPURE1",10,0)
 ;  if $g(rcscreen) = 2 store messages during processing
"RTN","RCDPURE1",11,0)
 N RCPAYDA,RCDPFPAY,RCERROR,RCMSG,RCEFT,RCERA
"RTN","RCDPURE1",12,0)
 K ^TMP($J,"RCDPEMSG")
"RTN","RCDPURE1",13,0)
 ;
"RTN","RCDPURE1",14,0)
 ;  first mark the receipt as processed/closed to prevent changing the
"RTN","RCDPURE1",15,0)
 ;  data if the receipt does not fully process.  this will lock the
"RTN","RCDPURE1",16,0)
 ;  cancel payment, edit payment, etc. options.  once a receipt is
"RTN","RCDPURE1",17,0)
 ;  processed, even partially, it should not be changed.
"RTN","RCDPURE1",18,0)
 D MARKPROC^RCDPUREC(RCRECTDA,"")
"RTN","RCDPURE1",19,0)
 ;
"RTN","RCDPURE1",20,0)
 ; Special processing needed for EFT-related receipts
"RTN","RCDPURE1",21,0)
 ; RCEFT = 1 if EFT deposit, = 2 if receipt detail transfer, 0 if no EFT
"RTN","RCDPURE1",22,0)
 S RCEFT=+$$EDILB^RCDPEU(RCRECTDA)
"RTN","RCDPURE1",23,0)
 S RCERA=$P($G(^RCY(344,RCRECTDA,0)),U,18)
"RTN","RCDPURE1",24,0)
 ;
"RTN","RCDPURE1",25,0)
 ;  === no payments ===
"RTN","RCDPURE1",26,0)
 ;  if there are no payments for the receipt, quit
"RTN","RCDPURE1",27,0)
 I '$O(^RCY(344,RCRECTDA,1,0)) D  Q
"RTN","RCDPURE1",28,0)
 .   I $G(RCSCREEN) S RCMSG="Receipt does not have any payments and has been marked as processed/closed." D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",29,0)
 .   I RCERA D UPDERA(RCERA)
"RTN","RCDPURE1",30,0)
 ;
"RTN","RCDPURE1",31,0)
 ;  check to see if the payments have dollar amounts
"RTN","RCDPURE1",32,0)
 S RCPAYDA=0 F  S RCPAYDA=$O(^RCY(344,RCRECTDA,1,RCPAYDA)) Q:'RCPAYDA  I $P($G(^(RCPAYDA,0)),"^",4) S RCDPFPAY=1 Q
"RTN","RCDPURE1",33,0)
 I '$G(RCDPFPAY) D  Q
"RTN","RCDPURE1",34,0)
 .   I $G(RCSCREEN)  S RCMSG="Receipt does not have any payments and has been marked as processed/closed." D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",35,0)
 .   I RCERA D UPDERA(RCERA)
"RTN","RCDPURE1",36,0)
 ;
"RTN","RCDPURE1",37,0)
 ;  === update AR accounts ===
"RTN","RCDPURE1",38,0)
 I $G(RCSCREEN) S RCMSG="Updating AR accounts..." D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",39,0)
 ;
"RTN","RCDPURE1",40,0)
 ;  loop payments and apply to account in AR
"RTN","RCDPURE1",41,0)
 S RCPAYDA=0 F  S RCPAYDA=$O(^RCY(344,RCRECTDA,1,RCPAYDA)) Q:'RCPAYDA  D  I RCERROR Q
"RTN","RCDPURE1",42,0)
 .   S RCERROR=$$PROCESS^RCBEPAY(RCRECTDA,RCPAYDA)
"RTN","RCDPURE1",43,0)
 ;
"RTN","RCDPURE1",44,0)
 ;  an error occurred during processing a payment
"RTN","RCDPURE1",45,0)
 I $G(RCERROR) D  Q
"RTN","RCDPURE1",46,0)
 .   I '$G(RCSCREEN) Q
"RTN","RCDPURE1",47,0)
 .   S RCMSG="+-----------------------------------------------------------------------------+" D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",48,0)
 .   S RCMSG="|  An ERROR has occurred when processing payment "_RCPAYDA_" on receipt "_$P(^RCY(344,RCRECTDA,0),"^")_".",RCMSG=$E(RCMSG_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",49,0)
 .   S RCMSG="|  The error message returned during processing is:",RCMSG=$E(RCMSG_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",50,0)
 .   S RCMSG="|"_$J("",77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",51,0)
 .   S RCMSG=$E("|  "_$P(RCERROR,"^",2)_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",52,0)
 .   S RCMSG="|"_$J("",77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",53,0)
 .   S RCMSG=$E("|  You will need to correct the error before you can completely process the"_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",54,0)
 .   S RCMSG=$E("|  receipt.  Once the receipt is completely processed, the FMS "_$S(RCEFT'=2:"Cash Receipt",1:"'TR'")_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",55,0)
 .   S RCMSG=$E("|  document will be generated."_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",56,0)
 .   S RCMSG="+-----------------------------------------------------------------------------+" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",57,0)
 ;
"RTN","RCDPURE1",58,0)
 ;  all payments processed correctly
"RTN","RCDPURE1",59,0)
 I RCERA D UPDERA(RCERA)
"RTN","RCDPURE1",60,0)
 I $G(RCSCREEN) D MSG(" Done.",RCSCREEN)
"RTN","RCDPURE1",61,0)
 ;
"RTN","RCDPURE1",62,0)
 ;  if no deposit ticket and not related to EFT or is a HAC payment, do not send to fms
"RTN","RCDPURE1",63,0)
 I '$P(^RCY(344,RCRECTDA,0),"^",6),$S('RCEFT:1,1:$$HACEFT^RCDPEU(+$P(^RCY(344,RCRECTDA,0),U,17))) D  Q
"RTN","RCDPURE1",64,0)
 .   D 215
"RTN","RCDPURE1",65,0)
 .   I $G(RCSCREEN) S RCMSG="Receipt does not have a deposit ticket and will NOT be sent to FMS." D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",66,0)
 ;
"RTN","RCDPURE1",67,0)
 ;  === send fms cash receipt document ===
"RTN","RCDPURE1",68,0)
 N GECSDATA,FMSDOCNO,RESULT,REFMS
"RTN","RCDPURE1",69,0)
 ;  lookup fms document number to see if the receipt has been
"RTN","RCDPURE1",70,0)
 ;  sent to fms (field 200 in file 344)
"RTN","RCDPURE1",71,0)
 S FMSDOCNO=$P($G(^RCY(344,RCRECTDA,2)),"^")
"RTN","RCDPURE1",72,0)
 ;  if there is an entry, find the code sheet in gcs to rebuild
"RTN","RCDPURE1",73,0)
 ;  gecsdata will be the ien for file 2100.1
"RTN","RCDPURE1",74,0)
 I FMSDOCNO'="" S REFMS=1 N DIQ2 D DATA^GECSSGET(FMSDOCNO,0)
"RTN","RCDPURE1",75,0)
 ;
"RTN","RCDPURE1",76,0)
 I $G(RCSCREEN)&$G(GECSDATA) S RCMSG="Re-Transmitting CR document to FMS... " D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",77,0)
 I $G(RCSCREEN)&'$G(GECSDATA) S RCMSG="Transmitting CR document to FMS... " D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",78,0)
 ;
"RTN","RCDPURE1",79,0)
 ;  build and send the tr/cr document to fms
"RTN","RCDPURE1",80,0)
 I RCEFT'=2 D  ; Send CR doc
"RTN","RCDPURE1",81,0)
 . S RESULT=$$BUILDCR^RCXFMSCR(RCRECTDA,+$G(GECSDATA),RCEFT)
"RTN","RCDPURE1",82,0)
 E  D  ; Send TR doc
"RTN","RCDPURE1",83,0)
 . S RESULT=$$GETTR^RCXFMST1(RCRECTDA,+$G(GECSDATA))
"RTN","RCDPURE1",84,0)
 ;  error in building code sheet
"RTN","RCDPURE1",85,0)
 I 'RESULT D:$G(RCSCREEN) MSG("ERROR - "_$P(RESULT,"^",2),RCSCREEN,"!!") Q
"RTN","RCDPURE1",86,0)
 ;
"RTN","RCDPURE1",87,0)
 ;  no document to send
"RTN","RCDPURE1",88,0)
 I $P(RESULT,"^")=-1,$G(RCSCREEN) S RCMSG="NOTE - "_$P(RESULT,"^",2) S $P(RESULT,"^",2)="" D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",89,0)
 ;  document built and sent
"RTN","RCDPURE1",90,0)
 I $P(RESULT,"^")=1,$G(RCSCREEN) D
"RTN","RCDPURE1",91,0)
 . N Z,DIE,DR,DA
"RTN","RCDPURE1",92,0)
 . D MSG("Done. FMS document number "_$P(RESULT,"^",2),RCSCREEN,"!!")
"RTN","RCDPURE1",93,0)
 . I +$O(^RCY(344.4,"ARCT",RCRECTDA,0)) S DIE="^RCY(344.4,",DR=".14////1",DA=+$O(^RCY(344.4,"ARCT",RCRECTDA,0)) D ^DIE
"RTN","RCDPURE1",94,0)
 . I $P($G(^RCY(344,RCRECTDA,0)),U,17) S Z=$P($G(^RCY(344.31,+$P(^RCY(344,RCRECTDA,0),U,17),0)),U,15) I Z'="" S DIE="^RCY(344,",DR=".16////"_Z D ^DIE
"RTN","RCDPURE1",95,0)
 I $G(RCSCREEN) D
"RTN","RCDPURE1",96,0)
 . I '$G(REFMS)&(DT>$$LDATE^RCRJR(DT)) S Y=$E($$FPS^RCAMFN01(DT,1),1,5)_"01" D DD^%DT W !! S RCMSG="   * * * * Transmission will be held until "_Y_" * * * *" D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",97,0)
 ;
"RTN","RCDPURE1",98,0)
 ;
"RTN","RCDPURE1",99,0)
 ;  store the fms document number (receipt already marked processed/
"RTN","RCDPURE1",100,0)
 ;  closed at the top of the routine just before posting the dollars.
"RTN","RCDPURE1",101,0)
 D MARKPROC^RCDPUREC(RCRECTDA,$P(RESULT,"^",2))
"RTN","RCDPURE1",102,0)
 I RCEFT=2 D MSG("No 215 report generated for this receipt",RCSCREEN,"!!") G Q215
"RTN","RCDPURE1",103,0)
 ;
"RTN","RCDPURE1",104,0)
 ;
"RTN","RCDPURE1",105,0)
215 ;  === print 215 report ===
"RTN","RCDPURE1",106,0)
 I $G(RCSCREEN) D MSG("Queuing 215 report...",RCSCREEN,"!!")
"RTN","RCDPURE1",107,0)
 N DEVICE
"RTN","RCDPURE1",108,0)
 S DEVICE=$G(^DISV(DUZ,"RCDPRPLM","215REPORT"))
"RTN","RCDPURE1",109,0)
 I DEVICE="" D:$G(RCSCREEN) MSG(" Use Customize Option to set up the default printer.",RCSCREEN) Q
"RTN","RCDPURE1",110,0)
 ;
"RTN","RCDPURE1",111,0)
 S ZTIO=DEVICE,ZTDTH=$H,ZTRTN="DQ^RCDPR215",ZTSAVE("RECEIPDA")=RCRECTDA,ZTSAVE("RCTYPE")="A"
"RTN","RCDPURE1",112,0)
 D ^%ZTLOAD,^%ZISC
"RTN","RCDPURE1",113,0)
Q215 I $G(RCSCREEN) D MSG(" Done.",RCSCREEN)
"RTN","RCDPURE1",114,0)
 Q
"RTN","RCDPURE1",115,0)
 ;
"RTN","RCDPURE1",116,0)
UPDERA(RCERA) ; Update detail posted status for ERA entry RCERA
"RTN","RCDPURE1",117,0)
 ;
"RTN","RCDPURE1",118,0)
 N DA,DIE,DR
"RTN","RCDPURE1",119,0)
 S DA=+$G(RCERA),DR=".14////1",DIE="^RCY(344.4," D:DA ^DIE
"RTN","RCDPURE1",120,0)
 Q
"RTN","RCDPURE1",121,0)
 ;
"RTN","RCDPURE1",122,0)
MSG(RCMSG,RCSCREEN,PRELINE,POSTLINE) ; Write message or set into msg array
"RTN","RCDPURE1",123,0)
 ; RCMSG = text to write  RCSCREEN = screen flag
"RTN","RCDPURE1",124,0)
 ; PRELINE = the line feeds to print before the text
"RTN","RCDPURE1",125,0)
 ; POSTLINE = the line feeds to print after the text
"RTN","RCDPURE1",126,0)
 Q:'RCSCREEN
"RTN","RCDPURE1",127,0)
 N RCPRE,RCPOST,Z
"RTN","RCDPURE1",128,0)
 S RCPRE=$L($G(PRELINE),"!")-1,RCPOST=$L($G(POSTLINE),"!")-1
"RTN","RCDPURE1",129,0)
 I RCSCREEN=1 D  G MSGQ
"RTN","RCDPURE1",130,0)
 . F Z=1:1:RCPRE W !
"RTN","RCDPURE1",131,0)
 . W RCMSG
"RTN","RCDPURE1",132,0)
 . F Z=1:1:RCPOST W !
"RTN","RCDPURE1",133,0)
 F Z=1:1:RCPRE S ^TMP($J,"RCDPEMSG",+$O(^TMP("RCDPEMSG",""),-1)+1)=""
"RTN","RCDPURE1",134,0)
 S ^TMP($J,"RCDPEMSG",+$O(^TMP("RCDPEMSG",""),-1)+1)=RCMSG
"RTN","RCDPURE1",135,0)
 F Z=1:1:RCPOST S ^TMP($J,"RCDPEMSG",+$O(^TMP("RCDPEMSG",""),-1)+1)=""
"RTN","RCDPURE1",136,0)
MSGQ Q
"RTN","RCDPURE1",137,0)
 ;
"RTN","RCDPURE1",138,0)
EDIT4(DA,DR,RCDR1,RCDR2,RCDR3) ; Modify DR string for type of payment edit
"RTN","RCDPURE1",139,0)
 ;   for EDI Lockbox
"RTN","RCDPURE1",140,0)
 ; Input: DA,DR   Output: RCDR1,RCDR2,RCDR3
"RTN","RCDPURE1",141,0)
 ; If type unchanged, or neither old/new are EDI Lockbox, no chk needed
"RTN","RCDPURE1",142,0)
 ; If old type is EDI Lockbox and scratch pad exists, no change allowed
"RTN","RCDPURE1",143,0)
 ; If changed to EDI Lockbox and detail already exists, no chg allowed
"RTN","RCDPURE1",144,0)
 ; If changed to EDI Lockbox, ask for related EFT
"RTN","RCDPURE1",145,0)
 N Z,Z0,RCSTRT,RCLST,RCDR,RCOE,RCNE,RCNO,RCM,RCM1,RCM2,RCM3,RCO4,RCN4,RCP,DIPA
"RTN","RCDPURE1",146,0)
 S (RCDR1,RCDR2,RCDR3)=""
"RTN","RCDPURE1",147,0)
 ;
"RTN","RCDPURE1",148,0)
 S RCP=10 F Z=2:1 Q:DR'[("@"_RCP)&(DR'[("@"_(RCP+1)))&(DR'[("@"_(RCP+2)))&(DR'[("@"_(RCP+3)))&(DR'[("@"_(RCP+4)))  S RCP=RCP*Z
"RTN","RCDPURE1",149,0)
 ;
"RTN","RCDPURE1",150,0)
 S Z=$L(DR,".04;"),RCSTRT=1,RCLST=Z
"RTN","RCDPURE1",151,0)
 I Z>2 D  ; Find .04, not n.04
"RTN","RCDPURE1",152,0)
 . F  S Z0=$P(DR,".04;",RCSTRT) Q:Z0=""!'$E(Z0,$L(Z0))  S RCSTRT=RCSTRT+1
"RTN","RCDPURE1",153,0)
 ;
"RTN","RCDPURE1",154,0)
 ; If unchanged/changed from/to other than EDI Lockbox, jump over edits
"RTN","RCDPURE1",155,0)
 S RCDR1="S RCP="_RCP_" D SETV^RCDPURE1;"_$P(DR,".04;",1,RCSTRT)
"RTN","RCDPURE1",156,0)
 S RCDR2="@"_RCP_";.04;S RCNO=0,RCN4=X D TYP^RCDPUREC(.Y);.17////^S X=RCNE;S Y=""@"_(RCP+2)_""""
"RTN","RCDPURE1",157,0)
 ; Reset field .04 and .17 if not a valid type change
"RTN","RCDPURE1",158,0)
 S RCDR2=RCDR2_";@"_(RCP+1)_";.04////^S X=RCO4;I RCOE="""" S Y=""@"_(RCP+3)_""";.17////^S X=RCOE;@"_(RCP+3)_";W !,*7,$S(RCO4=14:$S('RCNO:RCM1,1:RCM2),1:RCM) S Y=""@"_RCP_""";@"_(RCP+2)
"RTN","RCDPURE1",159,0)
 S RCDR3=$P(DR,".04;",RCSTRT+1,RCLST)
"RTN","RCDPURE1",160,0)
 Q
"RTN","RCDPURE1",161,0)
 ;
"RTN","RCDPURE1",162,0)
SETV ; Set up variables needed to edit change of receipt type
"RTN","RCDPURE1",163,0)
 S DIPA("RCPT")=$G(^RCY(344,DA,0)),RCO4=$P(DIPA("RCPT"),U,4),RCOE=$P(DIPA("RCPT"),U,17)
"RTN","RCDPURE1",164,0)
 S RCM="EDI Lockbox payment type is invalid for this receipt",RCM1="Payment type can't be changed once detail has been loaded from the ERA",RCM2="Must have an EFT for an EFT Lockbox payment type"
"RTN","RCDPURE1",165,0)
 S RCM3=">>If receipt is for an ERA and a paper check, select the ERA now"
"RTN","RCDPURE1",166,0)
 Q
"RTN","RCDPURE1",167,0)
 ;
"RTN","RCDPURE1",168,0)
WL(DA) ; Function returns 0 if the worklist did not create the receipt
"RTN","RCDPURE1",169,0)
 ;  or the ien of the worklist entry if it did (344.4 and 344.49 are DINUMED)
"RTN","RCDPURE1",170,0)
 N Z
"RTN","RCDPURE1",171,0)
 S Z=+$O(^RCY(344.4,"AREC",DA,0))
"RTN","RCDPURE1",172,0)
 Q Z
"RTN","RCDPURE1",173,0)
 ;
"RTN","RCDPURE1",174,0)
HAC(RC) ; Returns 1 if the receipt in RC is related to a HAC EFT
"RTN","RCDPURE1",175,0)
 N Z,HAC
"RTN","RCDPURE1",176,0)
 S HAC=0
"RTN","RCDPURE1",177,0)
 ; ERA related to an EFT detail record
"RTN","RCDPURE1",178,0)
 S Z=+$G(^RCY(344.31,+$P($G(^RCY(344,RC,0)),U,17),0))
"RTN","RCDPURE1",179,0)
 ; Deposit # in EFT transmission starts with HAC
"RTN","RCDPURE1",180,0)
 I Z S Z=$P($G(^RCY(344.3,+Z,0)),U,6) I $E(Z,1,3)="HAC" S HAC=1
"RTN","RCDPURE1",181,0)
 Q HAC
"RTN","RCDPURE1",182,0)
 ;
"RTN","RCDPUREC")
0^41^B58702599
"RTN","RCDPUREC",1,0)
RCDPUREC ;WISC/RFJ-receipt utilities ;1 Jun 99
"RTN","RCDPUREC",2,0)
 ;;4.5;Accounts Receivable;**114,148,169,173**;Mar 20, 1995
"RTN","RCDPUREC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPUREC",4,0)
 Q
"RTN","RCDPUREC",5,0)
 ;
"RTN","RCDPUREC",6,0)
 ;
"RTN","RCDPUREC",7,0)
ADDRECT(TRANDATE,RCDEPTDA,PAYTYPDA) ;  add a receipt
"RTN","RCDPUREC",8,0)
 ;
"RTN","RCDPUREC",9,0)
 ;  if deposit or payment type is missing, do not add the receipt
"RTN","RCDPUREC",10,0)
 I 'RCDEPTDA!('PAYTYPDA) Q 0
"RTN","RCDPUREC",11,0)
 ;
"RTN","RCDPUREC",12,0)
 N DA,DATA,RCDPFLAG,RECEIPT,TYPE
"RTN","RCDPUREC",13,0)
 ;  if a receipt has already been added for this transmission date
"RTN","RCDPUREC",14,0)
 ;  and deposit number, do not add a new one
"RTN","RCDPUREC",15,0)
 S DA=0 F  S DA=$O(^RCY(344,"AD",+RCDEPTDA,DA)) Q:'DA  S DATA=$G(^RCY(344,DA,0)) I $P($P(DATA,"^",3),".")=TRANDATE,$P(DATA,"^",4)=PAYTYPDA S RCDPFLAG=1 Q
"RTN","RCDPUREC",16,0)
 I $G(RCDPFLAG) Q DA
"RTN","RCDPUREC",17,0)
 ;
"RTN","RCDPUREC",18,0)
 Q $$BLDRCPT(TRANDATE,RCDEPTDA,PAYTYPDA)
"RTN","RCDPUREC",19,0)
 ;
"RTN","RCDPUREC",20,0)
BLDRCPT(TRANDATE,RCDEPTDA,PAYTYPDA) ; Build a receipt with/without deposit
"RTN","RCDPUREC",21,0)
 ;
"RTN","RCDPUREC",22,0)
 N TYPE,RECEIPT
"RTN","RCDPUREC",23,0)
 ;  build unique receipt number for date
"RTN","RCDPUREC",24,0)
 S TYPE=$E($G(^RC(341.1,PAYTYPDA,0))) I TYPE="" S TYPE="Z"
"RTN","RCDPUREC",25,0)
 I TYPE="C",$G(RCDEPTDA)["ERACHK" S RCDEPTDA=+RCDEPTDA,TYPE="E" ; ERA plus paper check EDI Lockbox receipt
"RTN","RCDPUREC",26,0)
 ;  lockbox receipt in the form of L980901A0, do not include century
"RTN","RCDPUREC",27,0)
 S RECEIPT=$$NEXT(TYPE_$E(TRANDATE,2,7))  ;get last two digits from 00 to ZZ
"RTN","RCDPUREC",28,0)
 ;
"RTN","RCDPUREC",29,0)
 ;  add it
"RTN","RCDPUREC",30,0)
 N %,%DT,D0,DA,DD,DI,DIC,DIE,DLAYGO,DO,DQ,DR,X,Y
"RTN","RCDPUREC",31,0)
 S DIC="^RCY(344,",DIC(0)="L",DLAYGO=344
"RTN","RCDPUREC",32,0)
 ;  .02 = opened by                  .03 = date opened = transmission dt
"RTN","RCDPUREC",33,0)
 ;  .04 = type of payment            .06 = deposit ticket
"RTN","RCDPUREC",34,0)
 ;  .14 = status (set to 1:open)
"RTN","RCDPUREC",35,0)
 S DIC("DR")=".02////"_DUZ_";.03///"_TRANDATE_";.04////"_PAYTYPDA_$S(RCDEPTDA:";.06////"_RCDEPTDA,1:"")_";.14////1;"
"RTN","RCDPUREC",36,0)
 S X=RECEIPT
"RTN","RCDPUREC",37,0)
 D FILE^DICN
"RTN","RCDPUREC",38,0)
 I Y>0 Q +Y
"RTN","RCDPUREC",39,0)
 Q 0
"RTN","RCDPUREC",40,0)
 ;
"RTN","RCDPUREC",41,0)
 ;
"RTN","RCDPUREC",42,0)
NEXT(RECEIPT) ;  get next 2 digits in sequence 00 to ZZ for receipt
"RTN","RCDPUREC",43,0)
 ;
"RTN","RCDPUREC",44,0)
 ;  start with 00
"RTN","RCDPUREC",45,0)
 I '$D(^RCY(344,"B",RECEIPT_"00")) Q RECEIPT_"00"
"RTN","RCDPUREC",46,0)
 ;
"RTN","RCDPUREC",47,0)
 N DIGIT1,DIGIT2,LAST
"RTN","RCDPUREC",48,0)
 ;  get the last one used and increment by 1
"RTN","RCDPUREC",49,0)
 S LAST=$O(^RCY(344,"B",RECEIPT_"ZZ"),-1)  ;example L2980901ZZ
"RTN","RCDPUREC",50,0)
 S DIGIT1=$A($E(LAST,8)),DIGIT2=$A($E(LAST,9))
"RTN","RCDPUREC",51,0)
 ;  increment the ascii value of last digit
"RTN","RCDPUREC",52,0)
 S DIGIT2=DIGIT2+1
"RTN","RCDPUREC",53,0)
 ;  ascii 48=0, 57=9, 65=A, 90=Z
"RTN","RCDPUREC",54,0)
 I DIGIT2>57,DIGIT2<65 S DIGIT2=65 ;an A
"RTN","RCDPUREC",55,0)
 ;  digit2 above a Z, set digit2 to a 0 and increment digit 1
"RTN","RCDPUREC",56,0)
 I DIGIT2>90 S DIGIT2=48,DIGIT1=DIGIT1+1
"RTN","RCDPUREC",57,0)
 I DIGIT1>57,DIGIT1<65 S DIGIT1=65 ;an A
"RTN","RCDPUREC",58,0)
 ;  digit 1 is above a Z, reset and reuse the Z
"RTN","RCDPUREC",59,0)
 I DIGIT1>90 S DIGIT1=90,DIGIT2=90
"RTN","RCDPUREC",60,0)
 ;
"RTN","RCDPUREC",61,0)
 Q RECEIPT_$C(DIGIT1)_$C(DIGIT2)
"RTN","RCDPUREC",62,0)
 ;
"RTN","RCDPUREC",63,0)
 ;
"RTN","RCDPUREC",64,0)
SELRECT(ADDNEW,RCDEPTDA) ;  select a receipt
"RTN","RCDPUREC",65,0)
 ;  if $g(addnew) allow adding a new receipt
"RTN","RCDPUREC",66,0)
 ;  if $g(rcdeptda) allow selection of receipts for the deposit only
"RTN","RCDPUREC",67,0)
 ;  if $g(addnew) and $g(rcdeptda) deposit number auto set for new receipt
"RTN","RCDPUREC",68,0)
 ;  returns -1 for timeout or ^, 0 for no selection, or ien of receipt
"RTN","RCDPUREC",69,0)
 N %,%Y,C,D0,DA,DI,DIC,DIE,DIK,DG,DLAYGO,DQ,DR,DTOUT,DUOUT,RCREFLUP,X,Y,RCDE,RCLB,RC1,RC2,RCREQ
"RTN","RCDPUREC",70,0)
 S DIC="^RCY(344,",DIC(0)="QEAM",DIC("A")="Select RECEIPT: "
"RTN","RCDPUREC",71,0)
 S DIC("W")="D DICW^RCDPUREC"
"RTN","RCDPUREC",72,0)
 ;  set screen to select receipts linked to deposit and to screen out
"RTN","RCDPUREC",73,0)
 ;  selection of EDI Lockbox-type receipts unless an EFT is associated
"RTN","RCDPUREC",74,0)
 ;  with the deposit and the receipt is not associated with an ERA
"RTN","RCDPUREC",75,0)
 S RCDE=+$O(^RCY(344.3,"ARDEP",+$G(RCDEPTDA),0))
"RTN","RCDPUREC",76,0)
 I $G(RCDEPTDA) D
"RTN","RCDPUREC",77,0)
 .   S DIC("S")="N Z S Z=$G(^(0)) I $S('$$EDILBEV^RCDPEU($P(Z,U,4)):'RCDE,1:RCDE&'$P(Z,U,18)),($P(Z,U,6)=""""!($P(Z,U,6)=RCDEPTDA))"
"RTN","RCDPUREC",78,0)
 .   S DIC("A")="Select RECEIPT (for deposit "_$P(^RCY(344.1,RCDEPTDA,0),"^")_"): "
"RTN","RCDPUREC",79,0)
 ;  use special lookup on input
"RTN","RCDPUREC",80,0)
 I '$G(RCDEPTDA) S RCREFLUP=1
"RTN","RCDPUREC",81,0)
 ;  add new entries
"RTN","RCDPUREC",82,0)
 S RC1="TYPE NOT VALID FOR THIS RECEIPT",RC2=">>AN EFT REFERENCE IS REQUIRED"
"RTN","RCDPUREC",83,0)
 I $G(ADDNEW) D
"RTN","RCDPUREC",84,0)
 .   S DIC("A")="Select RECEIPT (or add a new one): "
"RTN","RCDPUREC",85,0)
 .   S DIC(0)="QEALM",DLAYGO=344
"RTN","RCDPUREC",86,0)
 .   S DIC("DR")="S RCREQ=0;.02////"_DUZ_";.03///NOW;.14////1;@4;.04"_$S(RCDE:"////"_$$LBEVENT^RCDPEU(),1:"")
"RTN","RCDPUREC",87,0)
 .   S DIC("DR")=DIC("DR")_";S RCLB=$$EDILBEV^RCDPEU(+X) S:'RCLB Y=""@6"";I $G(RCDEPTDA) S Y=$S('RCDE:""@8"",1:""@6"");W !,RC2 S RCREQ=1;.17;S Y=""@99"""
"RTN","RCDPUREC",88,0)
 .   S DIC("DR")=DIC("DR")_";@6;.06"_$S($G(RCDEPTDA):"////"_RCDEPTDA,1:"")_";S:'RCDE Y=""@99"";.17////"_+RCDE_";S Y=""@99"";@8;W *7,!,RC1 S Y=""@4"";@99"
"RTN","RCDPUREC",89,0)
 .   S DIC("DR")=DIC("DR")_";"
"RTN","RCDPUREC",90,0)
 D ^DIC
"RTN","RCDPUREC",91,0)
 I Y<0,'$G(DUOUT),'$G(DTOUT) S Y=0
"RTN","RCDPUREC",92,0)
 I $P(Y,U,3),$G(RCREQ),'$P($G(^RCY(344,+Y,0)),U,17) D
"RTN","RCDPUREC",93,0)
 . W !,*7,"NO EFT REFERENCED - RECEIPT NOT ADDED"
"RTN","RCDPUREC",94,0)
 . S DA=+Y,DIK="^RCY(344," D ^DIK
"RTN","RCDPUREC",95,0)
 . S Y=0
"RTN","RCDPUREC",96,0)
 Q +Y
"RTN","RCDPUREC",97,0)
 ;
"RTN","RCDPUREC",98,0)
 ;
"RTN","RCDPUREC",99,0)
DICW ;  write identifier code for receipt lookup
"RTN","RCDPUREC",100,0)
 N DATA
"RTN","RCDPUREC",101,0)
 S DATA=$G(^RCY(344,Y,0)) I DATA="" Q
"RTN","RCDPUREC",102,0)
 ;  opened by
"RTN","RCDPUREC",103,0)
 W ?13,"by: ",$E($P($G(^VA(200,+$P(DATA,"^",2),0)),"^"),1,15)
"RTN","RCDPUREC",104,0)
 ;  date opened
"RTN","RCDPUREC",105,0)
 I '$P(DATA,"^",3) S $P(DATA,"^",3)="???????"
"RTN","RCDPUREC",106,0)
 W ?35," on: ",$E($P(DATA,"^",3),4,5),"/",$E($P(DATA,"^",3),6,7),"/",$E($P(DATA,"^",3),2,3)
"RTN","RCDPUREC",107,0)
 ;  type of payment
"RTN","RCDPUREC",108,0)
 W ?50," ",$E($P($G(^RC(341.1,+$P(DATA,"^",4),0)),"^"),1,18)
"RTN","RCDPUREC",109,0)
 ;  status
"RTN","RCDPUREC",110,0)
 W ?70," ",$S($P(DATA,"^",14):"OPEN",1:"CLOSED")
"RTN","RCDPUREC",111,0)
 Q
"RTN","RCDPUREC",112,0)
 ;
"RTN","RCDPUREC",113,0)
 ;
"RTN","RCDPUREC",114,0)
LOOKUP ;  special lookup on receipts, called from ^dd(344,.01,7.5)
"RTN","RCDPUREC",115,0)
 ;  if rcreflup flag not set, do not use special lookup
"RTN","RCDPUREC",116,0)
 I '$D(RCREFLUP) Q
"RTN","RCDPUREC",117,0)
 ;  user entered O.? for lookup on open receipts
"RTN","RCDPUREC",118,0)
 I X["O."!(X["o.") S DIC("S")="I $P(^(0),U,14)" S X="?" Q
"RTN","RCDPUREC",119,0)
 ;  user entered C.? for lookup on closed receipts
"RTN","RCDPUREC",120,0)
 I X["C."!(X["c.") S DIC("S")="I '$P(^(0),U,14)" S X="?" Q
"RTN","RCDPUREC",121,0)
 K DIC("S")
"RTN","RCDPUREC",122,0)
 Q
"RTN","RCDPUREC",123,0)
 ;
"RTN","RCDPUREC",124,0)
 ;
"RTN","RCDPUREC",125,0)
EDITREC(DA,DR) ;  edit the receipt (dr = string of fields to ask)
"RTN","RCDPUREC",126,0)
 N D,D0,DI,DIC,DIE,DQ,X,Y,RCDR1,RCDR2,RCDR3,DIPA
"RTN","RCDPUREC",127,0)
 S (DIC,DIE)="^RCY(344,"
"RTN","RCDPUREC",128,0)
 I $G(DR)="" N DR D
"RTN","RCDPUREC",129,0)
 . S DR=".01;.04;"_$S($P($G(^RCY(344,DA,0)),U,17):"",1:"I $P($G(^RCY(344,DA,0)),U,17) S Y=""@1001"";.06;@1001;")_"D LBT^RCDPUREC(.Y);.18;@99"
"RTN","RCDPUREC",130,0)
 ;
"RTN","RCDPUREC",131,0)
 I $G(DR)[".04;" D  ; Add a check to DR string for type of payment edit
"RTN","RCDPUREC",132,0)
 . D EDIT4^RCDPURE1(DA,DR,.RCDR1,.RCDR2,.RCDR3)
"RTN","RCDPUREC",133,0)
 . S DR=RCDR1_$S($E(RCDR1,$L(RCDR1))=";":"",1:";")_RCDR2_$S($E(RCDR2,$L(RCDR2))=";":"",1:";")_RCDR3
"RTN","RCDPUREC",134,0)
 ;
"RTN","RCDPUREC",135,0)
 D ^DIE
"RTN","RCDPUREC",136,0)
 I $P($G(^RCY(344,DA,0)),U,6),$P(^(0),U,17),$$EDILBEV^RCDPEU(+$P(^(0),U,4)) S DIE="^RCY(344,",DR=".06///@" D ^DIE ; Delete deposit if EDI LB event and EFT referenced 
"RTN","RCDPUREC",137,0)
 D LASTEDIT(DA)
"RTN","RCDPUREC",138,0)
 Q
"RTN","RCDPUREC",139,0)
 ;
"RTN","RCDPUREC",140,0)
LBT(Y) ; Determine if Y should be set to @99 ; DR string too long
"RTN","RCDPUREC",141,0)
 ;  Assume DA,RCM3 is set
"RTN","RCDPUREC",142,0)
 N Z,Z0
"RTN","RCDPUREC",143,0)
 S Z0=$G(^RCY(344,DA,0)),Z=($P(Z0,U,4)=$$LBEVENT^RCDPEU())
"RTN","RCDPUREC",144,0)
 ; Don't allow to edit ERA reference if worklist created it
"RTN","RCDPUREC",145,0)
 I $P($G(^RCY(344.49,+$P(Z0,U,18),0)),U,2)=DA S Y="@99" Q
"RTN","RCDPUREC",146,0)
 ; only ask for ERA if not EDI lockbox and deposit # exists
"RTN","RCDPUREC",147,0)
 I $S(Z:1,1:'$P($G(^RCY(344,DA,0)),U,6)) S Y="@99" Q
"RTN","RCDPUREC",148,0)
 W !,RCM3
"RTN","RCDPUREC",149,0)
 Q
"RTN","RCDPUREC",150,0)
 ;
"RTN","RCDPUREC",151,0)
TYP(Y) ; Determine where to jump to in the 'type' edit of the template
"RTN","RCDPUREC",152,0)
 ; DR string too long
"RTN","RCDPUREC",153,0)
 ;  Assumes RCP,RCN0,RCN4,RCO4,DA defined
"RTN","RCDPUREC",154,0)
 N RCCHANGE
"RTN","RCDPUREC",155,0)
 I $S(RCN4=RCO4&(RCN4'=14):1,RCN4'=14&(RCO4'=14):1,1:0) S Y=RCP+2 G TYPQ
"RTN","RCDPUREC",156,0)
 ; To get here, the type was changed and it either was 14 or is now 14
"RTN","RCDPUREC",157,0)
 S RCCHANGE=(RCN4'=RCO4)
"RTN","RCDPUREC",158,0)
 I RCCHANGE D  G:Y TYPQ
"RTN","RCDPUREC",159,0)
 . ; Type can't be changed if the old type was EDI Lockbox and there is
"RTN","RCDPUREC",160,0)
 . ;    an ERA detail record associated with it
"RTN","RCDPUREC",161,0)
 . I RCO4=14,$P($G(^RCY(344,DA,0)),U,18) S Y=RCP+1 Q
"RTN","RCDPUREC",162,0)
 . ; Type can't be changed to EDI Lockbox if rcpt detail already exists
"RTN","RCDPUREC",163,0)
 . I RCN4=14,$O(^RCY(344,DA,1,0)) S Y=RCP+1 Q
"RTN","RCDPUREC",164,0)
 . ; If type changed to EDI LOCKBOX, must have an EFT reference
"RTN","RCDPUREC",165,0)
 I RCN4'=14 S Y=RCP+2 G TYPQ
"RTN","RCDPUREC",166,0)
TYPQ I '$G(Y) D
"RTN","RCDPUREC",167,0)
 . ; If ERA is matched to EFT, don't allow to edit EFT
"RTN","RCDPUREC",168,0)
 . I $P($G(^RCY(344,DA,0)),U,17),$P($G(^(0)),U,18),$D(^RCY(344.31,"AERA",+$P($G(^RCY(344,DA,0)),U,18),+$P($G(^RCY(344,DA,0)),U,17))) S Y=RCP+2 Q
"RTN","RCDPUREC",169,0)
 . S RCNE=$$ASK17^RCDPUREC(DA) I 'RCNE S RCNO=1,Y=RCP+1
"RTN","RCDPUREC",170,0)
 I $G(Y) S Y="@"_Y
"RTN","RCDPUREC",171,0)
 Q
"RTN","RCDPUREC",172,0)
 ;
"RTN","RCDPUREC",173,0)
LASTEDIT(DA) ;  set when receipt last edit
"RTN","RCDPUREC",174,0)
 N %DT,D,D0,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCDPUREC",175,0)
 S (DIC,DIE)="^RCY(344,"
"RTN","RCDPUREC",176,0)
 S DR=".11////"_DUZ_";.12///NOW;"
"RTN","RCDPUREC",177,0)
 D ^DIE
"RTN","RCDPUREC",178,0)
 Q
"RTN","RCDPUREC",179,0)
 ;
"RTN","RCDPUREC",180,0)
 ;
"RTN","RCDPUREC",181,0)
MARKPROC(DA,FMSDOCNO) ;  mark receipt as processed, set receipt as closed,
"RTN","RCDPUREC",182,0)
 ;  store fms document number if passed
"RTN","RCDPUREC",183,0)
 N %DT,D,D0,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCDPUREC",184,0)
 S (DIC,DIE)="^RCY(344,"
"RTN","RCDPUREC",185,0)
 S DR=".07////"_DUZ_";.08///NOW;.14////0;"
"RTN","RCDPUREC",186,0)
 I $G(FMSDOCNO)'="" S DR=DR_"200////"_FMSDOCNO_";"
"RTN","RCDPUREC",187,0)
 D ^DIE
"RTN","RCDPUREC",188,0)
 Q
"RTN","RCDPUREC",189,0)
 ;
"RTN","RCDPUREC",190,0)
 ;
"RTN","RCDPUREC",191,0)
FMSSTAT(RCRECTDA) ;  return the fms cr document ^ status ^ if sent before lockbox
"RTN","RCDPUREC",192,0)
 N FMSDOCNO,PRELOCK,STATUS
"RTN","RCDPUREC",193,0)
 ;  get the fms document from the receipt
"RTN","RCDPUREC",194,0)
 S FMSDOCNO=$P($G(^RCY(344,RCRECTDA,2)),"^")
"RTN","RCDPUREC",195,0)
 ;  if not on receipt, it may be earlier than lockbox and on deposit
"RTN","RCDPUREC",196,0)
 I FMSDOCNO="" S FMSDOCNO=$P($G(^RCY(344.1,+$P($G(^RCY(344,RCRECTDA,0)),"^",6),2)),"^") I FMSDOCNO'="" S PRELOCK=1
"RTN","RCDPUREC",197,0)
 S STATUS=$$STATUS^GECSSGET(FMSDOCNO)
"RTN","RCDPUREC",198,0)
 I STATUS=-1 S STATUS="NOT ENTERED"
"RTN","RCDPUREC",199,0)
 ;
"RTN","RCDPUREC",200,0)
 ;  if the cr document is entered, check to see if entered on line
"RTN","RCDPUREC",201,0)
 I FMSDOCNO'="",$P($G(^RCY(344,RCRECTDA,2)),"^",2) S STATUS="ON LINE ENTRY"
"RTN","RCDPUREC",202,0)
 ;
"RTN","RCDPUREC",203,0)
 ;  if the cr document is missing, set status to not sent
"RTN","RCDPUREC",204,0)
 I FMSDOCNO="" S FMSDOCNO="NOT SENT"
"RTN","RCDPUREC",205,0)
 ;
"RTN","RCDPUREC",206,0)
 Q FMSDOCNO_"^"_STATUS_"^"_$G(PRELOCK)
"RTN","RCDPUREC",207,0)
 ;
"RTN","RCDPUREC",208,0)
ASK17(DA) ; Ask,return the EFT detail record for a receipt
"RTN","RCDPUREC",209,0)
 ; DA = the ien of the RECEIPT (file 344)
"RTN","RCDPUREC",210,0)
 N DIR,X,Y
"RTN","RCDPUREC",211,0)
 S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("?",1)="Select the EFT that contained the deposited money that this receipt details",DIR("?",2)="An EFT detail record can only be associated with one receipt"
"RTN","RCDPUREC",212,0)
 S DIR("?")="This is required if the type of payment is EDI LOCKBOX"
"RTN","RCDPUREC",213,0)
 S DIR("A")="  EFT DETAIL RECORD: ",DIR("S")="I $S('$O(^RCY(344,""AEFT"",+Y,0)):1,1:$O(^(0))=DA)"
"RTN","RCDPUREC",214,0)
 S:$P($G(^RCY(344,DA,0)),U,17) DIR("B")=$P(^(0),U,17)
"RTN","RCDPUREC",215,0)
 D ^DIR K DIR
"RTN","RCDPUREC",216,0)
 I $D(DUOUT)!$D(DTOUT)!Y=""!(Y<0) Q 0
"RTN","RCDPUREC",217,0)
 Q +Y
"RTN","RCDPUREC",218,0)
 ;
"RTN","RCDPURET")
0^120^B47778239
"RTN","RCDPURET",1,0)
RCDPURET ;WISC/RFJ-receipt utilities (transactions) ;1 Jun 99
"RTN","RCDPURET",2,0)
 ;;4.5;Accounts Receivable;**114,141,169,173**;Mar 20, 1995
"RTN","RCDPURET",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPURET",4,0)
 Q
"RTN","RCDPURET",5,0)
 ;
"RTN","RCDPURET",6,0)
 ;
"RTN","RCDPURET",7,0)
SELTRAN(DA) ;  select a transaction for a receipt
"RTN","RCDPURET",8,0)
 ;  returns -1 for timeout or ^, 0 for no selection, or ien of trans
"RTN","RCDPURET",9,0)
 N %,DIC,DTOUT,DUOUT,RCDATA,X,Y
"RTN","RCDPURET",10,0)
 S DIC="^RCY(344,"_DA_",1,",DIC(0)="QEAM",DIC("A")="Select Receipt TRANSACTION #: "
"RTN","RCDPURET",11,0)
 S DIC("W")="S RCDATA=@(DIC_Y_"",0)"") W:$P(RCDATA,U,3) ?8,""  "",$P(@(U_$P($P(RCDATA,U,3),"";"",2)_+$P(RCDATA,U,3)_"",0)""),U) W ?40,""  $ "",$J($P(RCDATA,U,4),0,2)"
"RTN","RCDPURET",12,0)
 D ^DIC
"RTN","RCDPURET",13,0)
 I Y<0,'$G(DTOUT),'$G(DUOUT) S Y=0
"RTN","RCDPURET",14,0)
 Q +Y
"RTN","RCDPURET",15,0)
 ;
"RTN","RCDPURET",16,0)
 ;
"RTN","RCDPURET",17,0)
ADDTRAN(RECTDA) ;  add transaction for receipt (in da)
"RTN","RCDPURET",18,0)
 N %DT,%T,D0,DA,DD,DI,DIC,DIE,DINUM,DLAYGO,DO,DQ,DR,X,Y
"RTN","RCDPURET",19,0)
 I '$D(^RCY(344,RECTDA,1,0)) S ^(0)="^344.01A^"
"RTN","RCDPURET",20,0)
 ;
"RTN","RCDPURET",21,0)
 ;  find next transaction number
"RTN","RCDPURET",22,0)
 S X=$O(^RCY(344,RECTDA,1,9999999),-1)
"RTN","RCDPURET",23,0)
 F X=X+1:1 Q:'$D(^RCY(344,RECTDA,1,X,0))
"RTN","RCDPURET",24,0)
 S DINUM=X
"RTN","RCDPURET",25,0)
 ;
"RTN","RCDPURET",26,0)
 S DA(1)=RECTDA
"RTN","RCDPURET",27,0)
 S DIC="^RCY(344,"_RECTDA_",1,",DIC(0)="L",DLAYGO=344.01
"RTN","RCDPURET",28,0)
 S DIC("DR")=".12////"_DUZ_";.06///TODAY;"
"RTN","RCDPURET",29,0)
 D FILE^DICN
"RTN","RCDPURET",30,0)
 Q +Y
"RTN","RCDPURET",31,0)
 ;
"RTN","RCDPURET",32,0)
 ;
"RTN","RCDPURET",33,0)
EDITTRAN(RECTDA,TRANDA) ;  edit a receipt transaction
"RTN","RCDPURET",34,0)
 ;  returns 1 for success, or 0 (error message)
"RTN","RCDPURET",35,0)
 I '$D(^RCY(344,RECTDA,1,TRANDA,0)) Q 0
"RTN","RCDPURET",36,0)
 ;
"RTN","RCDPURET",37,0)
 N %,%DT,%T,%Y,C,D,D0,D1,DA,DATA,DDH,DI,DIC,DICR,DIE,DIG,DIH,DIPGM,DIU,DIV,DIW,DG,DQ,DR,DZ,RCAMOUNT,RCTYPE,RESULT,X,Y
"RTN","RCDPURET",38,0)
 N RCXAMONT,RCXSUSP,RCXADJ,RCERA,RCADJ
"RTN","RCDPURET",39,0)
 ;
"RTN","RCDPURET",40,0)
 ;  build dr string based on type of payment on receipt
"RTN","RCDPURET",41,0)
 S RCTYPE=$P($G(^RC(341.1,+$P(^RCY(344,RECTDA,0),"^",4),0)),"^",2)
"RTN","RCDPURET",42,0)
 S RCADJ=0,RCERA=+$O(^RCY(344.4,"AREC",RECTDA,0))
"RTN","RCDPURET",43,0)
 S DR=""
"RTN","RCDPURET",44,0)
 I RCERA,$D(^RCY(344.49,+RCERA,0)),$P(^RCY(344,RECTDA,1,TRANDA,0),"^",28) D  ; Worklist has a dec adj associated with it
"RTN","RCDPURET",45,0)
 . N Z,RCXERA
"RTN","RCDPURET",46,0)
 . S Z=$$EXTERNAL^DILFD(344.01,.09,,$P($G(^RCY(344,RECTDA,1,TRANDA,0)),U,9))
"RTN","RCDPURET",47,0)
 . S RCADJ=1,RCXERA="W !,""NOTE: This payment has an EEOB Worklist dec adj associated with it."",!,""BILL NUMBER: "_Z_" (uneditable)""",DR="X RCXERA;"
"RTN","RCDPURET",48,0)
 E  D
"RTN","RCDPURET",49,0)
 . ;  patient name or bill number
"RTN","RCDPURET",50,0)
 . S DR=".09;"
"RTN","RCDPURET",51,0)
 S DR=DR_"S Y=$S('$P(^RCY(344,DA(1),1,DA,0),U,9):""@1"",1:""@2"");"
"RTN","RCDPURET",52,0)
 ;  ask comment if no acct (unapplied)
"RTN","RCDPURET",53,0)
 S RCXSUSP="W !?5,""NOTE: This payment will be posted to the station's suspense fund."""
"RTN","RCDPURET",54,0)
 S DR=DR_"@1;X RCXSUSP;1.02;S Y=""@3"";"
"RTN","RCDPURET",55,0)
 ;  payment amount
"RTN","RCDPURET",56,0)
 S RCXAMONT="W !,""  Amount Owed: $"",$J($$PAYDEF^RCDPURET($P(^RCY(344,DA(1),1,DA,0),U,9)),0,2)"
"RTN","RCDPURET",57,0)
 S DR=DR_"@2;X RCXAMONT;@3;.04;"
"RTN","RCDPURET",58,0)
 ;  date of payment
"RTN","RCDPURET",59,0)
 S DR=DR_".06;"
"RTN","RCDPURET",60,0)
 ;  type of payment = district counsel (3), check (4),
"RTN","RCDPURET",61,0)
 ;                    dept of justice  (5), irs (11),
"RTN","RCDPURET",62,0)
 ;                    lockbox (12)
"RTN","RCDPURET",63,0)
 I RCTYPE=3!(RCTYPE=4)!(RCTYPE=5)!(RCTYPE=11)!(RCTYPE=12)!(RCTYPE=13) D
"RTN","RCDPURET",64,0)
 .   S DR=DR_".07d;"     ; check number
"RTN","RCDPURET",65,0)
 .   S DR=DR_".08d;"     ; bank number
"RTN","RCDPURET",66,0)
 .   S DR=DR_".1d;"      ; date of check
"RTN","RCDPURET",67,0)
 ;  type of payment = credit card (7)
"RTN","RCDPURET",68,0)
 I RCTYPE=7 D
"RTN","RCDPURET",69,0)
 .   S DR=DR_".11d;"     ; credit card number
"RTN","RCDPURET",70,0)
 .   S DR=DR_".02d;"     ; confirmation number
"RTN","RCDPURET",71,0)
 ;
"RTN","RCDPURET",72,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",73,0)
 S DA=TRANDA,DA(1)=RECTDA
"RTN","RCDPURET",74,0)
 D ^DIE
"RTN","RCDPURET",75,0)
 D LASTEDIT^RCDPUREC(RECTDA)
"RTN","RCDPURET",76,0)
 ;
"RTN","RCDPURET",77,0)
 ;  check for missing fields
"RTN","RCDPURET",78,0)
 S DATA=^RCY(344,RECTDA,1,TRANDA,0)
"RTN","RCDPURET",79,0)
 S RESULT=1
"RTN","RCDPURET",80,0)
 I RESULT,'$P(DATA,"^",4) S RESULT="Payment Amount is ZERO."
"RTN","RCDPURET",81,0)
 I RESULT,'$P(DATA,"^",6) S RESULT="Date of Payment NOT entered."
"RTN","RCDPURET",82,0)
 I RESULT,RCTYPE=13,$$TRACE($P(DATA,"^",3))="" S RESULT="TOP TRACE NUMBER NOT ENTERED"
"RTN","RCDPURET",83,0)
 I RESULT,RCTYPE=7,$P(DATA,"^",11)="" W !,"WARNING: Credit Card Number NOT entered."
"RTN","RCDPURET",84,0)
 I RESULT,$P(DATA,"^",6)<$P(DATA,"^",10) W !,"WARNING: Date of check is greater than the date of payment."
"RTN","RCDPURET",85,0)
 ;
"RTN","RCDPURET",86,0)
 ;  if field is missing, delete the transaction
"RTN","RCDPURET",87,0)
 I 'RESULT D DELETRAN(RECTDA,TRANDA)
"RTN","RCDPURET",88,0)
 ;
"RTN","RCDPURET",89,0)
 ;  if transaction okay, print receipt
"RTN","RCDPURET",90,0)
 I RESULT D RECEIPT^RCDPRECT(RECTDA,TRANDA)
"RTN","RCDPURET",91,0)
 ;
"RTN","RCDPURET",92,0)
 Q RESULT
"RTN","RCDPURET",93,0)
 ;
"RTN","RCDPURET",94,0)
 ;
"RTN","RCDPURET",95,0)
EDITACCT(RECTDA,TRANDA) ;  edit the account on a receipt
"RTN","RCDPURET",96,0)
 N C,D,D0,D1,DA,DDH,DI,DIC,DICR,DIE,DIG,DIH,DIPGM,DISYS,DIU,DIV,DIW,DQ,DR,DZ,X
"RTN","RCDPURET",97,0)
 S DR=".09;"
"RTN","RCDPURET",98,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",99,0)
 S DA=TRANDA,DA(1)=RECTDA
"RTN","RCDPURET",100,0)
 D ^DIE
"RTN","RCDPURET",101,0)
 D LASTEDIT^RCDPUREC(RECTDA)
"RTN","RCDPURET",102,0)
 Q
"RTN","RCDPURET",103,0)
 ;
"RTN","RCDPURET",104,0)
 ;
"RTN","RCDPURET",105,0)
DELEACCT(RECTDA,TRANDA) ;  delete the account on a receipt
"RTN","RCDPURET",106,0)
 N D,D0,D1,DA,DI,DIC,DICR,DIE,DIG,DIH,DIU,DIV,DIW,DQ,DR,X
"RTN","RCDPURET",107,0)
 S DR=".09///@;.03///@;"
"RTN","RCDPURET",108,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",109,0)
 S DA=TRANDA,DA(1)=RECTDA
"RTN","RCDPURET",110,0)
 D ^DIE
"RTN","RCDPURET",111,0)
 D LASTEDIT^RCDPUREC(RECTDA)
"RTN","RCDPURET",112,0)
 Q
"RTN","RCDPURET",113,0)
 ;
"RTN","RCDPURET",114,0)
 ;
"RTN","RCDPURET",115,0)
EDITFMS(RECTDA,TRANDA,DEFAULT) ;  edit fms document number for clearing suspense
"RTN","RCDPURET",116,0)
 N C,D,D0,D1,DA,DDH,DI,DIC,DICR,DIE,DIG,DIH,DIPGM,DISYS,DIU,DIV,DIW,DQ,DR,DZ,X
"RTN","RCDPURET",117,0)
 S DR=".26;"
"RTN","RCDPURET",118,0)
 I $G(DEFAULT)'="" S DR=".26////"_DEFAULT_";"
"RTN","RCDPURET",119,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",120,0)
 S DA=TRANDA,DA(1)=RECTDA
"RTN","RCDPURET",121,0)
 D ^DIE
"RTN","RCDPURET",122,0)
 Q
"RTN","RCDPURET",123,0)
 ;
"RTN","RCDPURET",124,0)
 ;
"RTN","RCDPURET",125,0)
MOVETRAN(RCOLDREC,RCOLDTRA,RCNEWREC) ;  move a transactions data
"RTN","RCDPURET",126,0)
 N %DT,%T,D0,D1,DA,DG,DIC,DICR,DIK,DIU,RCNEWTRA,RESULT,X,Y
"RTN","RCDPURET",127,0)
 ;
"RTN","RCDPURET",128,0)
 ;  add new transaction to 2nd receipt
"RTN","RCDPURET",129,0)
 W !,"Adding a NEW payment transaction to receipt "_$P(^RCY(344,RCNEWREC,0),"^")_": "
"RTN","RCDPURET",130,0)
 S RCNEWTRA=$$ADDTRAN(RCNEWREC)
"RTN","RCDPURET",131,0)
 I 'RCNEWTRA Q "Unable to ADD a new payment transaction."
"RTN","RCDPURET",132,0)
 ;
"RTN","RCDPURET",133,0)
 W "# ",RCNEWTRA
"RTN","RCDPURET",134,0)
 ;
"RTN","RCDPURET",135,0)
 ;  move data to selected receipt and re-index entry
"RTN","RCDPURET",136,0)
 S ^RCY(344,RCNEWREC,1,RCNEWTRA,0)=RCNEWTRA_"^"_$P(^RCY(344,RCOLDREC,1,RCOLDTRA,0),"^",2,99)
"RTN","RCDPURET",137,0)
 S DIK="^RCY(344,"_RCNEWREC_",1,",DA(1)=RCNEWREC,DA=RCNEWTRA
"RTN","RCDPURET",138,0)
 D IX^DIK
"RTN","RCDPURET",139,0)
 ;
"RTN","RCDPURET",140,0)
 S RESULT=$$EDITTRAN(RCNEWREC,RCNEWTRA)
"RTN","RCDPURET",141,0)
 Q RESULT
"RTN","RCDPURET",142,0)
 ;
"RTN","RCDPURET",143,0)
 ;
"RTN","RCDPURET",144,0)
CANCTRAN(RECTDA,RECTRAN) ;  cancel a transaction
"RTN","RCDPURET",145,0)
 N D,D0,DA,DI,DIC,DIE,DQ,DR,RCDATA,X,Y
"RTN","RCDPURET",146,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",147,0)
 S RCDATA="Cancelled by: "_$P(^VA(200,DUZ,0),"^")_"    Amount: $ "_$J($P(^RCY(344,RECTDA,1,RECTRAN,0),"^",4),0,2)
"RTN","RCDPURET",148,0)
 S DR="1.01////^S X=RCDATA;.04////^S X=0;.05////^S X=0;1.02;"
"RTN","RCDPURET",149,0)
 S DA=RECTRAN,DA(1)=RECTDA
"RTN","RCDPURET",150,0)
 D ^DIE
"RTN","RCDPURET",151,0)
 D LASTEDIT^RCDPUREC(RECTDA)
"RTN","RCDPURET",152,0)
 Q
"RTN","RCDPURET",153,0)
 ;
"RTN","RCDPURET",154,0)
 ;
"RTN","RCDPURET",155,0)
DELETRAN(RECTDA,TRANDA) ;  delete a transaction
"RTN","RCDPURET",156,0)
 N %,D0,D1,DA,DIC,DICR,DIG,DIH,DIK,DIU,DIV,DIW,X,Y
"RTN","RCDPURET",157,0)
 S DIK="^RCY(344,"_RECTDA_",1,",DA(1)=RECTDA,DA=TRANDA
"RTN","RCDPURET",158,0)
 D ^DIK
"RTN","RCDPURET",159,0)
 D LASTEDIT^RCDPUREC(RECTDA)
"RTN","RCDPURET",160,0)
 Q
"RTN","RCDPURET",161,0)
 ;
"RTN","RCDPURET",162,0)
 ;
"RTN","RCDPURET",163,0)
SETUNAPP(RECTDA,TRANDA,UNAPPNUM) ;  store the unapplied deposit number
"RTN","RCDPURET",164,0)
 N D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCDPURET",165,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",166,0)
 S DR=".25////"_UNAPPNUM_";"
"RTN","RCDPURET",167,0)
 S DA=TRANDA,DA(1)=RECTDA
"RTN","RCDPURET",168,0)
 D ^DIE
"RTN","RCDPURET",169,0)
 Q
"RTN","RCDPURET",170,0)
 ;
"RTN","RCDPURET",171,0)
 ;
"RTN","RCDPURET",172,0)
PAYDEF(DEBTOR) ;  get default for payment amount (used in input templates for payments)
"RTN","RCDPURET",173,0)
 N X
"RTN","RCDPURET",174,0)
 I 'DEBTOR Q 0
"RTN","RCDPURET",175,0)
 I DEBTOR[";DPT(" S X=$$BAL^PRCAFN(DEBTOR)
"RTN","RCDPURET",176,0)
 I DEBTOR[";PRCA(430,",",112,107,102,"[(","_$P($G(^PRCA(430.3,+$P($G(^PRCA(430,+DEBTOR,0)),"^",8),0)),"^",3)_",") S X=$G(^PRCA(430,+DEBTOR,7)),X=$P(X,"^")+$P(X,"^",2)+$P(X,"^",3)+$P(X,"^",4)+$P(X,"^",5)
"RTN","RCDPURET",177,0)
 Q +$G(X)
"RTN","RCDPURET",178,0)
 ;
"RTN","RCDPURET",179,0)
 ;
"RTN","RCDPURET",180,0)
PENDPAY(DEBTOR) ;  return pending payments for a debtor
"RTN","RCDPURET",181,0)
 ;  returns ^tmp($j,"rcdpurec","pp",rectda,tranda)=data in 344.01
"RTN","RCDPURET",182,0)
 ;  and the total pending payment dollars
"RTN","RCDPURET",183,0)
 N DATA,RECTDA,TOTAL,TRANDA
"RTN","RCDPURET",184,0)
 K ^TMP($J,"RCDPUREC","PP")
"RTN","RCDPURET",185,0)
 ;  look at open receipts
"RTN","RCDPURET",186,0)
 S RECTDA=0 F  S RECTDA=$O(^RCY(344,"ASTAT",1,RECTDA)) Q:'RECTDA  D
"RTN","RCDPURET",187,0)
 .   S TRANDA=0 F  S TRANDA=$O(^RCY(344,"AACCT",DEBTOR,RECTDA,TRANDA)) Q:'TRANDA  D
"RTN","RCDPURET",188,0)
 .   .   S DATA=$G(^RCY(344,RECTDA,1,TRANDA,0)) I DATA="" Q
"RTN","RCDPURET",189,0)
 .   .   ;  total paid = total processed
"RTN","RCDPURET",190,0)
 .   .   I +$P(DATA,"^",4)=+$P(DATA,"^",5) Q
"RTN","RCDPURET",191,0)
 .   .   S ^TMP($J,"RCDPUREC","PP",RECTDA,TRANDA)=DATA
"RTN","RCDPURET",192,0)
 .   .   S TOTAL=$G(TOTAL)+$P(DATA,"^",4)
"RTN","RCDPURET",193,0)
 Q +$G(TOTAL)
"RTN","RCDPURET",194,0)
TRACE(DEBTOR) ;ENTER TOP TRACE NUMBER FOR TOP RECEIPTS
"RTN","RCDPURET",195,0)
 N TRACE,DIC,DIE,DR,DA
"RTN","RCDPURET",196,0)
 S TRACE="" G TRACEQ:'DEBTOR
"RTN","RCDPURET",197,0)
 S DA=$S(DEBTOR["DPT(":$O(^RCD(340,"B",DEBTOR,0)),1:$P($G(^PRCA(430,+DEBTOR,0)),U,9))
"RTN","RCDPURET",198,0)
 G TRACEQ:'DA
"RTN","RCDPURET",199,0)
 S (DIC,DIE)="^RCD(340,",DR=6.07 D ^DIE
"RTN","RCDPURET",200,0)
 S TRACE=$P($G(^RCD(340,DA,6)),"^",7)
"RTN","RCDPURET",201,0)
TRACEQ Q TRACE
"RTN","RCFMFN02")
0^115^B10757709
"RTN","RCFMFN02",1,0)
RCFMFN02 ;WASH-ISC@ATLOONA,PA/RGY-Return information for FMS Document processing ;8/27/94  8:40 PM
"RTN","RCFMFN02",2,0)
V ;;4.5;Accounts Receivable;**114,204,173**;Mar 20, 1995
"RTN","RCFMFN02",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCFMFN02",4,0)
DEL(ID) ;Delete entry from DOCUMENT file (347)
"RTN","RCFMFN02",5,0)
 NEW DA
"RTN","RCFMFN02",6,0)
 I '$D(ID) Q
"RTN","RCFMFN02",7,0)
 S DA=+$O(^RC(347,"C",ID,0)) S:'DA DA=+$O(^RC(347,"D",ID,0))
"RTN","RCFMFN02",8,0)
 I '$D(^RC(347,DA,0)) Q
"RTN","RCFMFN02",9,0)
 D DEL^RCFMPUR(DA)
"RTN","RCFMFN02",10,0)
 Q
"RTN","RCFMFN02",11,0)
SSTAT(ID,STAT) ;Set status for DOCUMENT file (347)
"RTN","RCFMFN02",12,0)
 NEW %DT,D,D0,DA,DI,DIC,DIE,DQ,DR,X
"RTN","RCFMFN02",13,0)
 I '$D(ID) Q
"RTN","RCFMFN02",14,0)
 S DA=+$O(^RC(347,"C",ID,0)) S:'DA DA=+$O(^RC(347,"D",ID,0))
"RTN","RCFMFN02",15,0)
 I '$D(^RC(347,DA,0)) Q
"RTN","RCFMFN02",16,0)
 I ",0,1,2,3,"'[(","_$G(STAT)_",") Q
"RTN","RCFMFN02",17,0)
 S DIE="^RC(347,",DR=".05///^S X=""NOW"";.03////^S X="_STAT D ^DIE
"RTN","RCFMFN02",18,0)
 ;Update the FMS TRAMSISSION DATE in files 430 and 347
"RTN","RCFMFN02",19,0)
 S FMSDT=$S($G(FMSDT):FMSDT,1:DT)
"RTN","RCFMFN02",20,0)
 ;DA is already set above
"RTN","RCFMFN02",21,0)
 I $D(^RC(347,DA,2)) K ^RC(347,"FMS",^RC(347,DA,2),DA)
"RTN","RCFMFN02",22,0)
 S ^RC(347,DA,2)=FMSDT,^RC(347,"FMS",FMSDT,DA)=""
"RTN","RCFMFN02",23,0)
 ;need to set DA for file 430... from the AR Bill number from file 347.
"RTN","RCFMFN02",24,0)
 S DA=$P($G(^RC(347,DA,0)),"^",7) I DA D
"RTN","RCFMFN02",25,0)
 .I $D(^PRCA(430,DA,203)) K ^PRCA(430,"FMS",^PRCA(430,DA,203),DA)
"RTN","RCFMFN02",26,0)
 .S ^PRCA(430,DA,203)=FMSDT,^PRCA(430,"FMS",FMSDT,DA)=""
"RTN","RCFMFN02",27,0)
 Q
"RTN","RCFMFN02",28,0)
GSTAT(ID) ;Get status for DOCUMENT file (347)
"RTN","RCFMFN02",29,0)
 NEW DA
"RTN","RCFMFN02",30,0)
 I '$D(ID) Q -1
"RTN","RCFMFN02",31,0)
 S DA=+$O(^RC(347,"C",ID,0)) S:'DA DA=+$O(^RC(347,"D",ID,0))
"RTN","RCFMFN02",32,0)
 I '$D(^RC(347,DA,0)) Q -1
"RTN","RCFMFN02",33,0)
 Q $P(^RC(347,DA,0),"^",3)
"RTN","RCFMFN02",34,0)
RETN(ID,ST) ;Process return document from stacker
"RTN","RCFMFN02",35,0)
 NEW DA
"RTN","RCFMFN02",36,0)
 I '$D(ID) Q
"RTN","RCFMFN02",37,0)
 ;line removed to accomodate full fms doc number - CLH
"RTN","RCFMFN02",38,0)
 S ST=$G(ST),ST=$S(ST="A":2,ST="R":3,1:-1)
"RTN","RCFMFN02",39,0)
 I ST<0 Q
"RTN","RCFMFN02",40,0)
 ;  if a CR document and it rejects, send message to users
"RTN","RCFMFN02",41,0)
 I $S($E(ID,1,3)="CR-":1,$E(ID,1,3)="TR-":1,1:0),ST=3 D MAILREJ(ID)
"RTN","RCFMFN02",42,0)
 D SSTAT(ID,ST)
"RTN","RCFMFN02",43,0)
 Q
"RTN","RCFMFN02",44,0)
STSTAT(DA,ST) ;set processed status in 433 (used for summary docs)
"RTN","RCFMFN02",45,0)
 Q:'$D(DA)
"RTN","RCFMFN02",46,0)
 Q:'$D(ST)
"RTN","RCFMFN02",47,0)
 Q:'$D(^PRCA(433,DA,0))
"RTN","RCFMFN02",48,0)
 N DIE,DR
"RTN","RCFMFN02",49,0)
 S DIE="^PRCA(433,",DR="91///^S X="_ST D ^DIE
"RTN","RCFMFN02",50,0)
 Q
"RTN","RCFMFN02",51,0)
GTSTAT(DA) ;function to return transaction status
"RTN","RCFMFN02",52,0)
 I DA<0 Q -1
"RTN","RCFMFN02",53,0)
 I '$D(^PRCA(433,DA,8)) Q -1
"RTN","RCFMFN02",54,0)
 Q $P(^PRCA(433,DA,0),U,9)
"RTN","RCFMFN02",55,0)
 ;
"RTN","RCFMFN02",56,0)
 ;
"RTN","RCFMFN02",57,0)
MAILREJ(DOCUMENT) ;  mail reject message to user to ask for retransmission
"RTN","RCFMFN02",58,0)
 N MESSAGE,RECEIPT,XCNP,XMDUZ,XMZ,RCCR
"RTN","RCFMFN02",59,0)
 S RCCR=$S($E(DOCUMENT,1,3)="CR-":1,$E(DOCUMENT,1,4)="TR-":2,1:0)
"RTN","RCFMFN02",60,0)
 S MESSAGE(1)="The following "_$E(DOCUMENT,1,2)_" FMS document rejected and needs to be retransmitted."
"RTN","RCFMFN02",61,0)
 S MESSAGE(2)=" "
"RTN","RCFMFN02",62,0)
 S MESSAGE(3)="        Document: "_DOCUMENT
"RTN","RCFMFN02",63,0)
 S MESSAGE(4)=" "
"RTN","RCFMFN02",64,0)
 ;  show information for cash receipt/transfer receipt for EDI document
"RTN","RCFMFN02",65,0)
 I RCCR D
"RTN","RCFMFN02",66,0)
 .   S MESSAGE(5)="You may regenerate this "_$P("cash^transfer",U,RCCR)_" receipt document by selecting the"
"RTN","RCFMFN02",67,0)
 .   S MESSAGE(6)="option Process Receipt (PR) located under the Receipt Processing"
"RTN","RCFMFN02",68,0)
 .   S MESSAGE(7)="Listmanager screen."
"RTN","RCFMFN02",69,0)
 .   S RECEIPT=$P($G(^RCY(344,+$O(^RCY(344,"ADOC",DOCUMENT,0)),0)),"^")
"RTN","RCFMFN02",70,0)
 .   I RECEIPT'="" S MESSAGE(8)=" ",MESSAGE(9)="  This "_$P("cash^transfer",U,RCCR)_" receipt document was generated by receipt "_RECEIPT_"."
"RTN","RCFMFN02",71,0)
 ;
"RTN","RCFMFN02",72,0)
 S XMTEXT="MESSAGE("
"RTN","RCFMFN02",73,0)
 S XMSUB="FMS "_$S(RCCR'=2:"Cash",1:"Transfer")_" Receipt Document Rejected"
"RTN","RCFMFN02",74,0)
 S XMDUZ="AR Package",XMY("G.RCDP PAYMENTS")=""
"RTN","RCFMFN02",75,0)
 D ^XMD
"RTN","RCFMFN02",76,0)
 Q
"RTN","RCMSITE")
0^1^B5701405
"RTN","RCMSITE",1,0)
RCMSITE ;ALB/RRG - EDIT SITE PARAMETERS ;03/12/02
"RTN","RCMSITE",2,0)
V ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCMSITE",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCMSITE",4,0)
BEG ;Start editing site paramters
"RTN","RCMSITE",5,0)
 N DIC,DLAYGO,X,Y,DIE,DA,DR
"RTN","RCMSITE",6,0)
 S DIC="^RC(342,",DIC(0)="QEAML",DLAYGO=342 D ^DIC I Y>0 S DA=+Y,DR=.01,DIE="^RC(342," D ^DIE
"RTN","RCMSITE",7,0)
 Q
"RTN","RCMSITE",8,0)
ALC ;Edit ALC parameter
"RTN","RCMSITE",9,0)
 NEW DIC,DR,DA,Y
"RTN","RCMSITE",10,0)
 S DIE="^RC(342,",DA=1,DR=.07 D ^DIE
"RTN","RCMSITE",11,0)
 Q
"RTN","RCMSITE",12,0)
IRS ;Edit IRS OFFSET site parameters
"RTN","RCMSITE",13,0)
 NEW DIE,DR,DA,Y
"RTN","RCMSITE",14,0)
 I '$D(^RC(342,1,0)) D BEG G:'$D(^RC(342,1,0)) Q
"RTN","RCMSITE",15,0)
 S DA=1,DR="[RCMS IRS]",DIE="^RC(342," D ^DIE
"RTN","RCMSITE",16,0)
Q Q
"RTN","RCMSITE",17,0)
STAT ;Edit NOTIFICATION site parameters
"RTN","RCMSITE",18,0)
 NEW DIE,DR,DA,Y
"RTN","RCMSITE",19,0)
 I '$D(^RC(342,1,0)) D BEG G:'$D(^RC(342,1,0)) Q1
"RTN","RCMSITE",20,0)
 S DA=1,DR="[RCMS NOTIFICATION]",DIE="^RC(342," D ^DIE
"RTN","RCMSITE",21,0)
Q1 Q
"RTN","RCMSITE",22,0)
GRP ;Edit AR Group Parameters
"RTN","RCMSITE",23,0)
 NEW DIE,DR,DA,Y
"RTN","RCMSITE",24,0)
 F  W ! S DIC(0)="QEAML",DIC="^RC(342.1,",DLAYGO=342.1 D ^DIC K DIC G:Y<0 Q3 S DA=+Y,DIE="^RC(342.1,",DR=$P($G(^RC(342.2,+$P(^RC(342.1,+Y,0),"^",2),1)),"^") I DR]"" D ^DIE
"RTN","RCMSITE",25,0)
Q3 Q
"RTN","RCMSITE",26,0)
DEA ;Deactive an AR group
"RTN","RCMSITE",27,0)
 NEW DIE,DIC,DA,DR,Y,GRP
"RTN","RCMSITE",28,0)
 S DIC="^RC(342.1,",DIC(0)="QEAM",DIC("S")="I $P(^(0),""^"",2)'=7" D ^DIC Q:Y<0  S GRP=+Y
"RTN","RCMSITE",29,0)
 W ! S DIR("A")="Are you sure you want to Deactive Group '"_$P(^RC(342.1,GRP,0),"^")_"'",DIR(0)="Y",DIR("B")="NO" D ^DIR K DIR
"RTN","RCMSITE",30,0)
 I 'Y W !!,"*** NO ACTION TAKEN ***" Q
"RTN","RCMSITE",31,0)
 I Y S DIE="^RC(342.1,",DA=GRP,DR=".02////^S X=7" D ^DIE W !!,"*** Group Deactivated ***"
"RTN","RCMSITE",32,0)
 Q
"RTN","RCMSITE",33,0)
SITE() ;Return site number
"RTN","RCMSITE",34,0)
 Q +$G(^DIC(4,+$P($G(^RC(342,1,0)),"^"),99))
"RTN","RCMSITE",35,0)
INT ;Print Inter/Admin/Pen effective report
"RTN","RCMSITE",36,0)
 NEW DIC,BY,FR,TO,FLDS,L
"RTN","RCMSITE",37,0)
 S DIC="^RC(342,",BY=.01,(FR,TO)="",FLDS="[RCMS INT/ADM/PEN]",L=0 D EN1^DIP
"RTN","RCMSITE",38,0)
 Q
"RTN","RCMSITE",39,0)
UPINT ;Update Rate site parameters
"RTN","RCMSITE",40,0)
 NEW DIE,DR,DA,Y,IOP
"RTN","RCMSITE",41,0)
 S IOP=ION D INT
"RTN","RCMSITE",42,0)
 I '$D(^RC(342,1,0)) D BEG G:'$D(^RC(342,1,0)) Q4
"RTN","RCMSITE",43,0)
 F  W ! S DA=1,DR="[RCMS RATES]",DIE="^RC(342," D ^DIE Q:$D(Y)
"RTN","RCMSITE",44,0)
Q4 Q
"RTN","RCMSITE",45,0)
 ;
"RTN","RCMSITE",46,0)
EDILOCK ;Update EDI Lockbox site parameters
"RTN","RCMSITE",47,0)
 N DIE,DR,DA,Y
"RTN","RCMSITE",48,0)
 I '$D(^RC(342,1,0)) D BEG G:'$D(^RC(342,1,0)) Q5
"RTN","RCMSITE",49,0)
 S DA=1,DR="[RCMS EDI LOCKBOX]",DIE="^RC(342," D ^DIE
"RTN","RCMSITE",50,0)
Q5 Q
"RTN","RCMSITE",51,0)
 ;
"RTN","RCXFMSC1")
0^110^B18641229
"RTN","RCXFMSC1",1,0)
RCXFMSC1 ;WISC/RFJ-fms cash receipt (cr) build lines ;1 Oct 97
"RTN","RCXFMSC1",2,0)
 ;;4.5;Accounts Receivable;**90,96,106,113,135,98,173**;Mar 20, 1995
"RTN","RCXFMSC1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCXFMSC1",4,0)
 Q
"RTN","RCXFMSC1",5,0)
 ;
"RTN","RCXFMSC1",6,0)
 ;
"RTN","RCXFMSC1",7,0)
FMSLINES(RECEIPDA,RCTR) ;  receipda is the ien for the receipt in file 344
"RTN","RCXFMSC1",8,0)
 ;  return total(fund,revsrce,vendorid,fmstrantype) = dollar amount
"RTN","RCXFMSC1",9,0)
 ; RCTR = 1 if extracting for a TR document, null or 0 if for CR
"RTN","RCXFMSC1",10,0)
 ;
"RTN","RCXFMSC1",11,0)
 N %,ACCRUAL,AMOUNT,BILLDA,CATEGORY,FMSTYPE,FUND,RECEIPT,REVSRCE
"RTN","RCXFMSC1",12,0)
 N TRAN0,TRAN3,TRANDA,VENDORID,RECEFT,RCEDILB,Z
"RTN","RCXFMSC1",13,0)
 ;
"RTN","RCXFMSC1",14,0)
 S RCEDILB=$$EDILB^RCDPEU(RECEIPDA),RCTR=$G(RCTR)
"RTN","RCXFMSC1",15,0)
 S RECEFT=$S(RCEDILB=1:1,1:"") ; EFT deposit CR doc
"RTN","RCXFMSC1",16,0)
 S RECEIPT=$P($G(^RCY(344,RECEIPDA,0)),"^")
"RTN","RCXFMSC1",17,0)
 I RECEIPT="" Q
"RTN","RCXFMSC1",18,0)
 ;
"RTN","RCXFMSC1",19,0)
 S TRANDA=0 F  S TRANDA=$O(^PRCA(433,"AF",RECEIPT,TRANDA)) Q:'TRANDA  D
"RTN","RCXFMSC1",20,0)
 .   S TRAN0=$G(^PRCA(433,TRANDA,0)),TRAN3=$G(^PRCA(433,TRANDA,3))
"RTN","RCXFMSC1",21,0)
 .   S CATEGORY=$P($G(^PRCA(430,+$P(TRAN0,"^",2),0)),"^",2)
"RTN","RCXFMSC1",22,0)
 .   S BILLDA=+$P(TRAN0,"^",2)
"RTN","RCXFMSC1",23,0)
 .   ;
"RTN","RCXFMSC1",24,0)
 .   ;  do not send champva
"RTN","RCXFMSC1",25,0)
 .   I CATEGORY=29 S FUND="0160a1" D SETTMP Q
"RTN","RCXFMSC1",26,0)
 .   ;
"RTN","RCXFMSC1",27,0)
 .   S ACCRUAL=$$ACCK^PRCAACC(BILLDA)
"RTN","RCXFMSC1",28,0)
 .   ;
"RTN","RCXFMSC1",29,0)
 .   ;  if its not an accrual, send a detail document
"RTN","RCXFMSC1",30,0)
 .   I 'ACCRUAL D  Q
"RTN","RCXFMSC1",31,0)
 .   .   S FMSTYPE=$$GETTYPE(BILLDA,RCTR)
"RTN","RCXFMSC1",32,0)
 .   .   I FMSTYPE="" S FMSTYPE="XX" ; make it reject if missing
"RTN","RCXFMSC1",33,0)
 .   .   ;  send a detail document only if there is principal
"RTN","RCXFMSC1",34,0)
 .   .   I $P(TRAN3,"^") S DETAIL(FMSTYPE,BILLDA)=$G(DETAIL(FMSTYPE,BILLDA))+$P(TRAN3,"^")
"RTN","RCXFMSC1",35,0)
 .   .   ;  set tmp global which is used by the 215 report
"RTN","RCXFMSC1",36,0)
 .   .   S FUND=$$GETFUNDB^RCXFMSUF(BILLDA,,RECEFT) D SETTMP
"RTN","RCXFMSC1",37,0)
 .   .   ;
"RTN","RCXFMSC1",38,0)
 .   .   ;  look for interest and admin charges
"RTN","RCXFMSC1",39,0)
 .   .   ;  use vendorid x for totals
"RTN","RCXFMSC1",40,0)
 .   .   S VENDORID="MISCN"
"RTN","RCXFMSC1",41,0)
 .   .   ;  get the revenue source code for the bill
"RTN","RCXFMSC1",42,0)
 .   .   S REVSRCE=$$CALCRSC^RCXFMSUR(BILLDA,RECEFT)
"RTN","RCXFMSC1",43,0)
 .   .   D INTADMIN
"RTN","RCXFMSC1",44,0)
 .   ;
"RTN","RCXFMSC1",45,0)
 .   ;  get the fund for the bill
"RTN","RCXFMSC1",46,0)
 .   S FUND=$$GETFUNDB^RCXFMSUF(BILLDA,,RECEFT)
"RTN","RCXFMSC1",47,0)
 .   ;
"RTN","RCXFMSC1",48,0)
 .   ;  get the vendor id $p(2) for the bill
"RTN","RCXFMSC1",49,0)
 .   S VENDORID=$S(FUND=4032:"EXCFVALUE",1:"MCCFVALUE")
"RTN","RCXFMSC1",50,0)
 .   ;
"RTN","RCXFMSC1",51,0)
 .   ;  get the revenue source code for the bill
"RTN","RCXFMSC1",52,0)
 .   S REVSRCE=$$CALCRSC^RCXFMSUR(BILLDA,RECEFT)
"RTN","RCXFMSC1",53,0)
 .   ;
"RTN","RCXFMSC1",54,0)
 .   ;  get the principle collected, $p(tran3,"^"), if prepayment
"RTN","RCXFMSC1",55,0)
 .   ;  set it to 1;5 with no interest, admin, etc.
"RTN","RCXFMSC1",56,0)
 .   I CATEGORY=26 S TRAN3=$P($G(^PRCA(433,TRANDA,1)),"^",5)
"RTN","RCXFMSC1",57,0)
 .   ;
"RTN","RCXFMSC1",58,0)
 .   ;  total principal
"RTN","RCXFMSC1",59,0)
 .   D TOTAL($P(TRAN3,"^"))
"RTN","RCXFMSC1",60,0)
 .   ;
"RTN","RCXFMSC1",61,0)
 .   ;  set tmp for detail
"RTN","RCXFMSC1",62,0)
 .   D SETTMP
"RTN","RCXFMSC1",63,0)
 .   ;
"RTN","RCXFMSC1",64,0)
 .   ;  check for interest collected
"RTN","RCXFMSC1",65,0)
 .   D INTADMIN
"RTN","RCXFMSC1",66,0)
 Q
"RTN","RCXFMSC1",67,0)
 ;
"RTN","RCXFMSC1",68,0)
 ;
"RTN","RCXFMSC1",69,0)
INTADMIN ;  check for interest and admin charges
"RTN","RCXFMSC1",70,0)
 S AMOUNT=$P(TRAN3,"^",2)
"RTN","RCXFMSC1",71,0)
 I AMOUNT S FUND=$$GETFUNDO^RCXFMSUF("I") D TOTAL(AMOUNT)
"RTN","RCXFMSC1",72,0)
 ;  check for admin collected
"RTN","RCXFMSC1",73,0)
 S AMOUNT=$P(TRAN3,"^",3)
"RTN","RCXFMSC1",74,0)
 I AMOUNT S FUND=$$GETFUNDO^RCXFMSUF("A") D TOTAL(AMOUNT)
"RTN","RCXFMSC1",75,0)
 ;  check for marshall fee collected
"RTN","RCXFMSC1",76,0)
 S AMOUNT=$P(TRAN3,"^",4)
"RTN","RCXFMSC1",77,0)
 I AMOUNT S FUND=$$GETFUNDO^RCXFMSUF("M") D TOTAL(AMOUNT)
"RTN","RCXFMSC1",78,0)
 ;  check for court cost collected
"RTN","RCXFMSC1",79,0)
 S AMOUNT=$P(TRAN3,"^",5)
"RTN","RCXFMSC1",80,0)
 I AMOUNT S FUND=$$GETFUNDO^RCXFMSUF("C") D TOTAL(AMOUNT)
"RTN","RCXFMSC1",81,0)
 Q
"RTN","RCXFMSC1",82,0)
 ;
"RTN","RCXFMSC1",83,0)
 ;
"RTN","RCXFMSC1",84,0)
TOTAL(AMOUNT) ;  accumulate totals for summary document
"RTN","RCXFMSC1",85,0)
 I 'AMOUNT Q
"RTN","RCXFMSC1",86,0)
 ;  check key elements and if null set to X's to reject
"RTN","RCXFMSC1",87,0)
 I FUND="" S FUND="XXXXXX"
"RTN","RCXFMSC1",88,0)
 I REVSRCE="" S REVSRCE="XXXX"
"RTN","RCXFMSC1",89,0)
 I VENDORID="" S VENDORID="XXXXX"
"RTN","RCXFMSC1",90,0)
 ;
"RTN","RCXFMSC1",91,0)
 S TOTAL(FUND,REVSRCE,VENDORID)=$G(TOTAL(FUND,REVSRCE,VENDORID))+AMOUNT
"RTN","RCXFMSC1",92,0)
 Q
"RTN","RCXFMSC1",93,0)
 ;
"RTN","RCXFMSC1",94,0)
 ;
"RTN","RCXFMSC1",95,0)
SETTMP ;  set the tmp global for detailed data by bill
"RTN","RCXFMSC1",96,0)
 ;  the tmp global is used by the 215 report (rcy215a)
"RTN","RCXFMSC1",97,0)
 I FUND="" S FUND="XXXXXX"
"RTN","RCXFMSC1",98,0)
 ;
"RTN","RCXFMSC1",99,0)
 S %=$G(^TMP($J,"RCFMSCR",FUND,BILLDA))
"RTN","RCXFMSC1",100,0)
 S $P(%,"^",1)=$P(%,"^",1)+$P(TRAN3,"^",1)  ; principal
"RTN","RCXFMSC1",101,0)
 S $P(%,"^",2)=$P(%,"^",2)+$P(TRAN3,"^",2)  ; interest
"RTN","RCXFMSC1",102,0)
 S $P(%,"^",3)=$P(%,"^",3)+$P(TRAN3,"^",3)  ; admin
"RTN","RCXFMSC1",103,0)
 S $P(%,"^",4)=$P(%,"^",4)+$P(TRAN3,"^",4)  ; marshal fee
"RTN","RCXFMSC1",104,0)
 S $P(%,"^",5)=$P(%,"^",5)+$P(TRAN3,"^",5)  ; court cost
"RTN","RCXFMSC1",105,0)
 S ^TMP($J,"RCFMSCR",FUND,BILLDA)=%
"RTN","RCXFMSC1",106,0)
 Q
"RTN","RCXFMSC1",107,0)
 ;
"RTN","RCXFMSC1",108,0)
 ;
"RTN","RCXFMSC1",109,0)
GETTYPE(BILLDA,RCTR) ;  return a bills fms transaction type (which goes on the CRA code
"RTN","RCXFMSC1",110,0)
 ;  sheet) from the field 259 refund/reimbursement in file 430.
"RTN","RCXFMSC1",111,0)
 ; If RCTR = 1, return TR code, otherwise return CR code
"RTN","RCXFMSC1",112,0)
 N REFUND
"RTN","RCXFMSC1",113,0)
 S RCTR=$S($G(RCTR):7,1:3) ; CR code is in piece 3 of data, TR is in pc 7
"RTN","RCXFMSC1",114,0)
 S REFUND=$$RECTYP^PRCAFUT(BILLDA)
"RTN","RCXFMSC1",115,0)
 I REFUND<0 S REFUND=""
"RTN","RCXFMSC1",116,0)
 I $L(REFUND)=1 S REFUND="0"_REFUND
"RTN","RCXFMSC1",117,0)
 ;  this call gets the transaction type from file 347.4
"RTN","RCXFMSC1",118,0)
 S REFUND=$$DTYPE^PRCAFBD1(REFUND)
"RTN","RCXFMSC1",119,0)
 I REFUND<0 S REFUND=""
"RTN","RCXFMSC1",120,0)
 Q $S($P(REFUND,"^",RCTR)'="":$P(REFUND,"^",RCTR),1:REFUND)
"RTN","RCXFMSC1",121,0)
 ;
"RTN","RCXFMSC1",122,0)
 ;
"RTN","RCXFMSC1",123,0)
LINE(BILLDA) ;
"RTN","RCXFMSC1",124,0)
 ;returns FMS line number
"RTN","RCXFMSC1",125,0)
 N X
"RTN","RCXFMSC1",126,0)
 S X=$P($G(^PRCA(430,BILLDA,11)),"^",4)
"RTN","RCXFMSC1",127,0)
 I X="" S X="001"
"RTN","RCXFMSC1",128,0)
 Q X
"RTN","RCXFMSCR")
0^111^B29814218
"RTN","RCXFMSCR",1,0)
RCXFMSCR ;WISC/RFJ-fms cash receipt (cr) code sheet generator ;1 Oct 97
"RTN","RCXFMSCR",2,0)
 ;;4.5;Accounts Receivable;**90,114,148,172,204,203,173**;Mar 20, 1995
"RTN","RCXFMSCR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCXFMSCR",4,0)
 Q
"RTN","RCXFMSCR",5,0)
 ;
"RTN","RCXFMSCR",6,0)
BUILDCR(RCRECTDA,RCGECSDA,RCEFT) ;  generate a cr/tr code sheet for a receipt
"RTN","RCXFMSCR",7,0)
 ;  rcgecsda is the ien for the gcs stack file 2100.1 for rebuilds
"RTN","RCXFMSCR",8,0)
 ;  rceft = 1 if processing CR for an EFT deposit (CR to rev src cd 8NZZ)
"RTN","RCXFMSCR",9,0)
 ;        = 2 if processing TR for the receipt detail relating to an EFT
"RTN","RCXFMSCR",10,0)
 ;              (TR from 5287.4/8NZZ to original fund/rsc)
"RTN","RCXFMSCR",11,0)
 ;
"RTN","RCXFMSCR",12,0)
 N AMOUNT,BILLDA,COUNT,CR2,DETAIL,DEPOSIT,DESCRIP,DOCTOTAL,FISCALYR,FMSTYPE,FUND,GECSFMS,LINE,RCDEPTDA,REVSRCE,TOTAL,TRANDA,TRANNUMB,UNAPPLY,UNAPPNUM,VENDORID,EFTDEP
"RTN","RCXFMSCR",13,0)
 ;
"RTN","RCXFMSCR",14,0)
 ;  build the lines for all payments on receipt
"RTN","RCXFMSCR",15,0)
 S RCEFT=+$G(RCEFT)
"RTN","RCXFMSCR",16,0)
 K ^TMP($J,"RCFMSCR")  ;  used for 215 report, not used here
"RTN","RCXFMSCR",17,0)
 D FMSLINES^RCXFMSC1(RCRECTDA)
"RTN","RCXFMSCR",18,0)
 K ^TMP($J,"RCFMSCR")
"RTN","RCXFMSCR",19,0)
 ;
"RTN","RCXFMSCR",20,0)
 ;  unapplied payments to accounts
"RTN","RCXFMSCR",21,0)
 S TRANDA=0 F  S TRANDA=$O(^RCY(344,RCRECTDA,1,TRANDA)) Q:'TRANDA  D
"RTN","RCXFMSCR",22,0)
 .   ;  dollars applied in AR
"RTN","RCXFMSCR",23,0)
 .   I $P(^RCY(344,RCRECTDA,1,TRANDA,0),"^",5) Q
"RTN","RCXFMSCR",24,0)
 .   ;  no dollars on transaction
"RTN","RCXFMSCR",25,0)
 .   S AMOUNT=$P(^RCY(344,RCRECTDA,1,TRANDA,0),"^",4) I 'AMOUNT Q
"RTN","RCXFMSCR",26,0)
 .   ;
"RTN","RCXFMSCR",27,0)
 .   I RCEFT=1 S TOTAL("5287"_$S(DT<3030926:"",1:".4"),"8NZZ","MCCFVALUE")=$G(TOTAL("5287"_$S(DT<3030926:"",1:".4"),"8NZZ","MCCFVALUE"))+AMOUNT Q
"RTN","RCXFMSCR",28,0)
 .   S UNAPPLY($$GETUNAPP(RCRECTDA,TRANDA,1))=AMOUNT
"RTN","RCXFMSCR",29,0)
 ;
"RTN","RCXFMSCR",30,0)
 ;  no code sheets to send
"RTN","RCXFMSCR",31,0)
 I '$D(DETAIL),'$D(TOTAL),'$D(UNAPPLY) Q "-1^No code sheets to send for this receipt"
"RTN","RCXFMSCR",32,0)
 ;
"RTN","RCXFMSCR",33,0)
 ;  get the next common number in the series = station "-" nextnumber
"RTN","RCXFMSCR",34,0)
 ;  use (field 200 in file 344) if document previously sent
"RTN","RCXFMSCR",35,0)
 S TRANNUMB=$P($P($G(^RCY(344,RCRECTDA,2)),"^"),"-",2)
"RTN","RCXFMSCR",36,0)
 I TRANNUMB="" S TRANNUMB=$$ENUM^RCMSNUM
"RTN","RCXFMSCR",37,0)
 I TRANNUMB<0 Q "0^Unable to lookup next transaction number"
"RTN","RCXFMSCR",38,0)
 ;  remove the dash (i,e, 460-K1A05HY)
"RTN","RCXFMSCR",39,0)
 S TRANNUMB=$TR(TRANNUMB,"-")
"RTN","RCXFMSCR",40,0)
 ;
"RTN","RCXFMSCR",41,0)
 S FISCALYR=$$FY^RCFN01(DT)
"RTN","RCXFMSCR",42,0)
 ;
"RTN","RCXFMSCR",43,0)
 S COUNT=0,DOCTOTAL=0
"RTN","RCXFMSCR",44,0)
 ;  build detail line
"RTN","RCXFMSCR",45,0)
 S FMSTYPE="" F  S FMSTYPE=$O(DETAIL(FMSTYPE)) Q:FMSTYPE=""  D
"RTN","RCXFMSCR",46,0)
 .   S BILLDA=0 F  S BILLDA=$O(DETAIL(FMSTYPE,BILLDA)) Q:'BILLDA  D
"RTN","RCXFMSCR",47,0)
 .   .   S AMOUNT=DETAIL(FMSTYPE,BILLDA),DOCTOTAL=DOCTOTAL+AMOUNT
"RTN","RCXFMSCR",48,0)
 .   .   S COUNT=COUNT+1
"RTN","RCXFMSCR",49,0)
 .   .   S LINE(COUNT)="LIN^~CRA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMSCR",50,0)
 .   .   S $P(LINE(COUNT),"^",20)=$J(AMOUNT,0,2)
"RTN","RCXFMSCR",51,0)
 .   .   S $P(LINE(COUNT),"^",21)="I"
"RTN","RCXFMSCR",52,0)
 .   .   S $P(LINE(COUNT),"^",23)=FMSTYPE
"RTN","RCXFMSCR",53,0)
 .   .   S $P(LINE(COUNT),"^",24)="BD"
"RTN","RCXFMSCR",54,0)
 .   .   S $P(LINE(COUNT),"^",25)=$TR($P(^PRCA(430,BILLDA,0),"^"),"-")
"RTN","RCXFMSCR",55,0)
 .   .   S $P(LINE(COUNT),"^",26)=$$LINE^RCXFMSC1(BILLDA)
"RTN","RCXFMSCR",56,0)
 .   .   S $P(LINE(COUNT),"^",27)="~"
"RTN","RCXFMSCR",57,0)
 ;
"RTN","RCXFMSCR",58,0)
 ;  build summary line
"RTN","RCXFMSCR",59,0)
 S FUND="" F  S FUND=$O(TOTAL(FUND)) Q:FUND=""  D
"RTN","RCXFMSCR",60,0)
 .   S REVSRCE="" F  S REVSRCE=$O(TOTAL(FUND,REVSRCE)) Q:REVSRCE=""  D
"RTN","RCXFMSCR",61,0)
 .   .   S VENDORID="" F  S VENDORID=$O(TOTAL(FUND,REVSRCE,VENDORID)) Q:VENDORID=""  D
"RTN","RCXFMSCR",62,0)
 .   .   .   S AMOUNT=TOTAL(FUND,REVSRCE,VENDORID),DOCTOTAL=DOCTOTAL+AMOUNT
"RTN","RCXFMSCR",63,0)
 .   .   .   S COUNT=COUNT+1
"RTN","RCXFMSCR",64,0)
 .   .   .   S LINE(COUNT)="LIN^~CRA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMSCR",65,0)
 .   .   .   S $P(LINE(COUNT),"^",4)=$S(FUND=4032:"03",1:FISCALYR)
"RTN","RCXFMSCR",66,0)
 .   .   .   S $P(LINE(COUNT),"^",6)=FUND
"RTN","RCXFMSCR",67,0)
 .   .   .   S $P(LINE(COUNT),"^",7)=$E(TRANNUMB,1,3) ; station #
"RTN","RCXFMSCR",68,0)
 .   .   .   S $P(LINE(COUNT),"^",10)=REVSRCE
"RTN","RCXFMSCR",69,0)
 .   .   .   ;I FUND=4032 S $P(LINE(COUNT),"^",13)="24GX40100"
"RTN","RCXFMSCR",70,0)
 .   .   .   S $P(LINE(COUNT),"^",18)=VENDORID
"RTN","RCXFMSCR",71,0)
 .   .   .   S $P(LINE(COUNT),"^",20)=$J(AMOUNT,0,2)
"RTN","RCXFMSCR",72,0)
 .   .   .   S $P(LINE(COUNT),"^",21)="I"
"RTN","RCXFMSCR",73,0)
 .   .   .   S $P(LINE(COUNT),"^",23)=23
"RTN","RCXFMSCR",74,0)
 .   .   .   S $P(LINE(COUNT),"^",24)="~"
"RTN","RCXFMSCR",75,0)
 ;
"RTN","RCXFMSCR",76,0)
 ;  build unapplied payment lines
"RTN","RCXFMSCR",77,0)
 S UNAPPNUM="" F  S UNAPPNUM=$O(UNAPPLY(UNAPPNUM)) Q:UNAPPNUM=""  D
"RTN","RCXFMSCR",78,0)
 .   S AMOUNT=UNAPPLY(UNAPPNUM),DOCTOTAL=DOCTOTAL+AMOUNT
"RTN","RCXFMSCR",79,0)
 .   S COUNT=COUNT+1
"RTN","RCXFMSCR",80,0)
 .   S LINE(COUNT)="LIN^~CRA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMSCR",81,0)
 .   S $P(LINE(COUNT),"^",4)=FISCALYR
"RTN","RCXFMSCR",82,0)
 .   S $P(LINE(COUNT),"^",6)=3875
"RTN","RCXFMSCR",83,0)
 .   S $P(LINE(COUNT),"^",7)=$E(TRANNUMB,1,3) ; station #
"RTN","RCXFMSCR",84,0)
 .   S $P(LINE(COUNT),"^",20)=$J(AMOUNT,0,2)
"RTN","RCXFMSCR",85,0)
 .   S $P(LINE(COUNT),"^",21)="I"
"RTN","RCXFMSCR",86,0)
 .   S $P(LINE(COUNT),"^",23)=17
"RTN","RCXFMSCR",87,0)
 .   S $P(LINE(COUNT),"^",24)="~CRB"
"RTN","RCXFMSCR",88,0)
 .   S $P(LINE(COUNT),"^",32)=UNAPPNUM
"RTN","RCXFMSCR",89,0)
 .   S $P(LINE(COUNT),"^",33)="~"
"RTN","RCXFMSCR",90,0)
 ;
"RTN","RCXFMSCR",91,0)
 ;  get data from file 344.1, the ar deposit file
"RTN","RCXFMSCR",92,0)
 S RCDEPTDA=$P(^RCY(344,RCRECTDA,0),"^",6),DEPOSIT=$G(^RCY(344.1,RCDEPTDA,0))
"RTN","RCXFMSCR",93,0)
 ;
"RTN","RCXFMSCR",94,0)
 ;  build cr2, $p(deposit,^,3)=deposit date
"RTN","RCXFMSCR",95,0)
 N FMSDT S FMSDT=$$FMSDATE^RCBEUTRA(DT)
"RTN","RCXFMSCR",96,0)
 S CR2="CR2^"_$E(FMSDT,2,3)_"^"_$E(FMSDT,4,5)_"^"_$E(FMSDT,6,7)_"^^^^^^E^^^"
"RTN","RCXFMSCR",97,0)
 S CR2=CR2_$P(DEPOSIT,"^")_"^^"_$J(DOCTOTAL,0,2)_"^^"
"RTN","RCXFMSCR",98,0)
 S CR2=CR2_$E($P(DEPOSIT,"^",3),2,3)_"^"_$E($P(DEPOSIT,"^",3),4,5)_"^"_$E($P(DEPOSIT,"^",3),6,7)_"^~"
"RTN","RCXFMSCR",99,0)
 ;
"RTN","RCXFMSCR",100,0)
 ;  put together document in gcs
"RTN","RCXFMSCR",101,0)
 N %DT,D,D0,DA,DI,DIC,DIE,DIQ2,DQ,DR
"RTN","RCXFMSCR",102,0)
 S DESCRIP="Receipt: "_$P(^RCY(344,RCRECTDA,0),"^")
"RTN","RCXFMSCR",103,0)
 I 'RCGECSDA D CONTROL^GECSUFMS("A",$E(TRANNUMB,1,3),TRANNUMB,"CR",10,0,"",DESCRIP)
"RTN","RCXFMSCR",104,0)
 I RCGECSDA D REBUILD^GECSUFM1(RCGECSDA,"A",10,"N","Rebuild "_DESCRIP) S GECSFMS("DA")=RCGECSDA
"RTN","RCXFMSCR",105,0)
 ;
"RTN","RCXFMSCR",106,0)
 ;  store document in gcs
"RTN","RCXFMSCR",107,0)
 D SETCS^GECSSTAA(GECSFMS("DA"),CR2)
"RTN","RCXFMSCR",108,0)
 F COUNT=1:1 Q:'$D(LINE(COUNT))  D SETCS^GECSSTAA(GECSFMS("DA"),LINE(COUNT))
"RTN","RCXFMSCR",109,0)
 D SETCODE^GECSSDCT(GECSFMS("DA"),"D RETN^RCFMFN02")
"RTN","RCXFMSCR",110,0)
 D SETSTAT^GECSSTAA(GECSFMS("DA"),"Q")
"RTN","RCXFMSCR",111,0)
 ;
"RTN","RCXFMSCR",112,0)
 ;  add/update entry in file 347 for unprocessed document report
"RTN","RCXFMSCR",113,0)
 N %DT,%X,D,DA347,D0,DI,DQ,DIC,ERROR,FMSDOCNO,X
"RTN","RCXFMSCR",114,0)
 S FMSDOCNO="CR-"_$P(GECSFMS("CTL"),"^",9)
"RTN","RCXFMSCR",115,0)
 S DA347=$O(^RC(347,"C",FMSDOCNO,0))
"RTN","RCXFMSCR",116,0)
 ;  if not in the file, addit   fmsdocid   cr   id
"RTN","RCXFMSCR",117,0)
 I 'DA347 D OPEN^RCFMDRV1(FMSDOCNO,3,"RC"_$P($G(^RCY(344,RCRECTDA,0)),"^"),.DA347,.ERROR)
"RTN","RCXFMSCR",118,0)
 I DA347 D SSTAT^RCFMFN02(FMSDOCNO,1)
"RTN","RCXFMSCR",119,0)
 ;
"RTN","RCXFMSCR",120,0)
 ;  return 1 for success ^ fms document transaction number
"RTN","RCXFMSCR",121,0)
 Q "1^"_FMSDOCNO
"RTN","RCXFMSCR",122,0)
 ;
"RTN","RCXFMSCR",123,0)
 ;
"RTN","RCXFMSCR",124,0)
GETUNAPP(RCRECTDA,RCTRANDA,RCSTORE) ;  get unapplied deposit number for receipt
"RTN","RCXFMSCR",125,0)
 ;  if $g(rcstore) store it with transaction
"RTN","RCXFMSCR",126,0)
 N UNAPPNUM
"RTN","RCXFMSCR",127,0)
 ;  if number is already assigned, use it
"RTN","RCXFMSCR",128,0)
 I $P($G(^RCY(344,RCRECTDA,1,RCTRANDA,2)),"^",5)'="" Q $P(^(2),"^",5)
"RTN","RCXFMSCR",129,0)
 ;
"RTN","RCXFMSCR",130,0)
 S UNAPPNUM=$P(^RCY(344,RCRECTDA,0),"^")
"RTN","RCXFMSCR",131,0)
 ;  if the receipt number is more than 9 characters, take the last 9
"RTN","RCXFMSCR",132,0)
 I $L(UNAPPNUM)>9 S UNAPPNUM=$E(UNAPPNUM,$L(UNAPPNUM)-8,$L(UNAPPNUM))
"RTN","RCXFMSCR",133,0)
 S UNAPPNUM=UNAPPNUM_$TR($J(RCTRANDA,4)," ",0)
"RTN","RCXFMSCR",134,0)
 ;
"RTN","RCXFMSCR",135,0)
 ;  store unapplied number
"RTN","RCXFMSCR",136,0)
 I $G(RCSTORE) D SETUNAPP^RCDPURET(RCRECTDA,RCTRANDA,UNAPPNUM)
"RTN","RCXFMSCR",137,0)
 ;
"RTN","RCXFMSCR",138,0)
 Q UNAPPNUM
"RTN","RCXFMST1")
0^112^B38706112
"RTN","RCXFMST1",1,0)
RCXFMST1 ;ALB/TMK-EDI Lockbox fms transfer (tr) cd sht gen ;31 Mar 03
"RTN","RCXFMST1",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCXFMST1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCXFMST1",4,0)
 Q
"RTN","RCXFMST1",5,0)
 ;
"RTN","RCXFMST1",6,0)
 ;
"RTN","RCXFMST1",7,0)
GETTR(RCRECTDA,RCGECSDA) ;  extract transfer data for TR code sheet for
"RTN","RCXFMST1",8,0)
 ;  a receipt in rcrectda
"RTN","RCXFMST1",9,0)
 ;  rcgecsda is the ien for the gcs stack file 2100.1 for rebuilds
"RTN","RCXFMST1",10,0)
 ;
"RTN","RCXFMST1",11,0)
 N TRANDA,AMOUNT,DETAIL,UNAPPLY,TOTAL,RCTOTAL,FUND,REVSRCE,VENDORID,RCSEQ,RESULT,GECSDATA,RCTRANS,UNAPPNUM,TRANNUMB
"RTN","RCXFMST1",12,0)
 ;
"RTN","RCXFMST1",13,0)
 ;  extract all payments on receipt
"RTN","RCXFMST1",14,0)
 S RESULT=""
"RTN","RCXFMST1",15,0)
 K ^TMP($J,"RCFMSCR")  ;  used for 215 report, not used here
"RTN","RCXFMST1",16,0)
 D FMSLINES^RCXFMSC1(RCRECTDA,1)
"RTN","RCXFMST1",17,0)
 K ^TMP($J,"RCFMSCR")
"RTN","RCXFMST1",18,0)
 ;
"RTN","RCXFMST1",19,0)
 ;  unapplied payments to accounts
"RTN","RCXFMST1",20,0)
 S TRANDA=0 F  S TRANDA=$O(^RCY(344,RCRECTDA,1,TRANDA)) Q:'TRANDA  D
"RTN","RCXFMST1",21,0)
 .   ;  dollars applied in AR
"RTN","RCXFMST1",22,0)
 .   I $P(^RCY(344,RCRECTDA,1,TRANDA,0),U,5) Q
"RTN","RCXFMST1",23,0)
 .   ;  no dollars on transaction
"RTN","RCXFMST1",24,0)
 .   S AMOUNT=$P(^RCY(344,RCRECTDA,1,TRANDA,0),U,4) I 'AMOUNT Q
"RTN","RCXFMST1",25,0)
 .   ;
"RTN","RCXFMST1",26,0)
 .   S UNAPPLY($$GETUNAPP^RCXFMSCR(RCRECTDA,TRANDA,1))=AMOUNT
"RTN","RCXFMST1",27,0)
 ;
"RTN","RCXFMST1",28,0)
 ;  no code sheets to send
"RTN","RCXFMST1",29,0)
 I '$D(DETAIL),'$D(TOTAL),'$D(UNAPPLY) S RESULT="-1^No code sheets to send for this receipt" G QUIT
"RTN","RCXFMST1",30,0)
 ;
"RTN","RCXFMST1",31,0)
 ;  get the next common number in the series = station "-" nextnumber
"RTN","RCXFMST1",32,0)
 ;  use (field 200 in file 344) if document previously sent
"RTN","RCXFMST1",33,0)
 S TRANNUMB=$P($P($G(^RCY(344,RCRECTDA,2)),U),"-",2)
"RTN","RCXFMST1",34,0)
 I TRANNUMB="" S TRANNUMB=$$ENUM^RCMSNUM
"RTN","RCXFMST1",35,0)
 I TRANNUMB<0 S RESULT="0^Unable to lookup next transaction number" G QUIT
"RTN","RCXFMST1",36,0)
 ;  remove the dash (i,e, 460-K1A05HY)
"RTN","RCXFMST1",37,0)
 S TRANNUMB=$TR(TRANNUMB,"-")
"RTN","RCXFMST1",38,0)
 ;
"RTN","RCXFMST1",39,0)
 ;  extract transfer from/to array for applied payments
"RTN","RCXFMST1",40,0)
 S (RCTOTAL,RCSEQ)=0
"RTN","RCXFMST1",41,0)
 S FUND="" F  S FUND=$O(TOTAL(FUND)) Q:FUND=""  D
"RTN","RCXFMST1",42,0)
 .   S REVSRCE="" F  S REVSRCE=$O(TOTAL(FUND,REVSRCE)) Q:REVSRCE=""  D
"RTN","RCXFMST1",43,0)
 .   .   S VENDORID="" F  S VENDORID=$O(TOTAL(FUND,REVSRCE,VENDORID)) Q:VENDORID=""  D
"RTN","RCXFMST1",44,0)
 .   .   .   S RCSEQ=RCSEQ+1,RCTRANS($$TRFUND(),"8NZZ",RCSEQ)=FUND_U_REVSRCE_U_TOTAL(FUND,REVSRCE,VENDORID)_U_U_VENDORID
"RTN","RCXFMST1",45,0)
 ;
"RTN","RCXFMST1",46,0)
 ;  extract unapplied payments
"RTN","RCXFMST1",47,0)
 S UNAPPNUM="" F  S UNAPPNUM=$O(UNAPPLY(UNAPPNUM)) Q:UNAPPNUM=""  D
"RTN","RCXFMST1",48,0)
 .   S RCSEQ=RCSEQ+1,RCTRANS($$TRFUND(),"8NZZ",RCSEQ)=3875_U_U_UNAPPLY(UNAPPNUM)_U_UNAPPNUM
"RTN","RCXFMST1",49,0)
 ;
"RTN","RCXFMST1",50,0)
 ;  build the TR document
"RTN","RCXFMST1",51,0)
 S RESULT=$$BUILDTR(.RCTRANS,.DETAIL,+$G(GECSDATA),TRANNUMB,RCRECTDA)
"RTN","RCXFMST1",52,0)
 ;
"RTN","RCXFMST1",53,0)
QUIT Q RESULT
"RTN","RCXFMST1",54,0)
 ;
"RTN","RCXFMST1",55,0)
BUILDTR(RCTRANS,RCDETAIL,RCGECSDA,TRANNUMB,RCRECTDA) ;  generate a tr code
"RTN","RCXFMST1",56,0)
 ;  sheet for transferring dollars out of 5287.4/8NZZ
"RTN","RCXFMST1",57,0)
 ;
"RTN","RCXFMST1",58,0)
 ;  rctrans(fund,rsc,seq) = data array passed
"RTN","RCXFMST1",59,0)
 ;    fund=fund to transfer from (always 5287.4)
"RTN","RCXFMST1",60,0)
 ;    rsc = rsc to transfer from (always 8NZZ)
"RTN","RCXFMST1",61,0)
 ;    seq = sequence to make record unique for each 'transferred to' rsc
"RTN","RCXFMST1",62,0)
 ;    data = fund to transfer to (piece 1)
"RTN","RCXFMST1",63,0)
 ;           rsc  to transfer to (piece 2)
"RTN","RCXFMST1",64,0)
 ;           dollars to transfer (piece 3)
"RTN","RCXFMST1",65,0)
 ;           unapplied deposit # for suspense (fund to transfer to=3875)
"RTN","RCXFMST1",66,0)
 ;           vendor id (piece 5)
"RTN","RCXFMST1",67,0)
 ;
"RTN","RCXFMST1",68,0)
 ;  rcgecsda is the ien for the gcs stack file 2100.1 for rebuilds
"RTN","RCXFMST1",69,0)
 ;
"RTN","RCXFMST1",70,0)
 ;  trannumb is the document identifier
"RTN","RCXFMST1",71,0)
 ;
"RTN","RCXFMST1",72,0)
 ;  rcrectda is the ien of the receipt (file 344)
"RTN","RCXFMST1",73,0)
 ;
"RTN","RCXFMST1",74,0)
 ;  rcdetail array contains accrual data for BD transactions
"RTN","RCXFMST1",75,0)
 ;
"RTN","RCXFMST1",76,0)
 N COUNT,DATA,DESCRIP,FISCALYR,FUND,GECSFMS,LINE,REVSRCE,TR2,X,Y,RCSUSP,BILLDA,FMSTYPE,AMOUNT,RCSEQ
"RTN","RCXFMST1",77,0)
 ;
"RTN","RCXFMST1",78,0)
 S FISCALYR=$$FY^RCFN01(DT)
"RTN","RCXFMST1",79,0)
 ;
"RTN","RCXFMST1",80,0)
 ;  build detail lines
"RTN","RCXFMST1",81,0)
 S COUNT=0
"RTN","RCXFMST1",82,0)
 ;
"RTN","RCXFMST1",83,0)
 S FMSTYPE="" F  S FMSTYPE=$O(RCDETAIL(FMSTYPE)) Q:FMSTYPE=""  D
"RTN","RCXFMST1",84,0)
 .   S BILLDA=0 F  S BILLDA=$O(RCDETAIL(FMSTYPE,BILLDA)) Q:'BILLDA  D
"RTN","RCXFMST1",85,0)
 .    .   S AMOUNT=RCDETAIL(FMSTYPE,BILLDA)
"RTN","RCXFMST1",86,0)
 .    . ; Decrease from 5287.4/8NZZ
"RTN","RCXFMST1",87,0)
 .    .   S COUNT=COUNT+1
"RTN","RCXFMST1",88,0)
 .    .   S LINE(COUNT)=$$DEC(COUNT,FISCALYR,TRANNUMB,AMOUNT)
"RTN","RCXFMST1",89,0)
 .    . ; Send BD
"RTN","RCXFMST1",90,0)
 .    .   S COUNT=COUNT+1
"RTN","RCXFMST1",91,0)
 .    .   S LINE(COUNT)="LIN^~CRA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMST1",92,0)
 .    .   S $P(LINE(COUNT),U,20)=$J(AMOUNT,0,2)
"RTN","RCXFMST1",93,0)
 .    .   S $P(LINE(COUNT),U,21)="I"
"RTN","RCXFMST1",94,0)
 .    .   S $P(LINE(COUNT),U,23)=$S(FMSTYPE'=75:FMSTYPE,$$GETFUNDB^RCXFMSUF(BILLDA,1)["5287":33,1:75)
"RTN","RCXFMST1",95,0)
 .    .   S $P(LINE(COUNT),U,24)="BD"
"RTN","RCXFMST1",96,0)
 .    .   S $P(LINE(COUNT),U,25)=$TR($P(^PRCA(430,BILLDA,0),U),"-")
"RTN","RCXFMST1",97,0)
 .    .   S $P(LINE(COUNT),U,26)=$$LINE^RCXFMSC1(BILLDA)
"RTN","RCXFMST1",98,0)
 .    .   S $P(LINE(COUNT),U,27)="~"
"RTN","RCXFMST1",99,0)
 .    ;
"RTN","RCXFMST1",100,0)
 ;
"RTN","RCXFMST1",101,0)
 S FUND=$$TRFUND(),REVSRCE="8NZZ"
"RTN","RCXFMST1",102,0)
 S RCSEQ=0 F  S RCSEQ=$O(RCTRANS(FUND,REVSRCE,RCSEQ)) Q:'RCSEQ  D
"RTN","RCXFMST1",103,0)
 .   S DATA=RCTRANS(FUND,REVSRCE,RCSEQ)
"RTN","RCXFMST1",104,0)
 .   ;  if no value, quit
"RTN","RCXFMST1",105,0)
 .   I '$P(DATA,U,3) Q
"RTN","RCXFMST1",106,0)
 .   ;
"RTN","RCXFMST1",107,0)
 .   ;  create line to transfer from (decrease)
"RTN","RCXFMST1",108,0)
 .   S COUNT=COUNT+1
"RTN","RCXFMST1",109,0)
 .   S LINE(COUNT)=$$DEC(COUNT,FISCALYR,TRANNUMB,$P(DATA,U,3))
"RTN","RCXFMST1",110,0)
 .   ;
"RTN","RCXFMST1",111,0)
 .   ;  create line to transfer to (increase)
"RTN","RCXFMST1",112,0)
 .   S COUNT=COUNT+1
"RTN","RCXFMST1",113,0)
 .   S RCSUSP=($P(DATA,U)=3875)
"RTN","RCXFMST1",114,0)
 .   S LINE(COUNT)="LIN^~CRA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMST1",115,0)
 .   S $P(LINE(COUNT),U,4)=FISCALYR
"RTN","RCXFMST1",116,0)
 .   S $P(LINE(COUNT),U,6)=$P(DATA,U)
"RTN","RCXFMST1",117,0)
 .   S $P(LINE(COUNT),U,7)=$E(TRANNUMB,1,3) ; station #
"RTN","RCXFMST1",118,0)
 .   I 'RCSUSP S $P(LINE(COUNT),U,10)=$P(DATA,U,2)
"RTN","RCXFMST1",119,0)
 .   ;
"RTN","RCXFMST1",120,0)
 .   ;  vendor id
"RTN","RCXFMST1",121,0)
 .   I 'RCSUSP S $P(LINE(COUNT),U,18)=$P(DATA,U,5)
"RTN","RCXFMST1",122,0)
 .   ;
"RTN","RCXFMST1",123,0)
 .   S $P(LINE(COUNT),U,20)=$J($P(DATA,U,3),0,2)
"RTN","RCXFMST1",124,0)
 .   S $P(LINE(COUNT),U,21)="I"
"RTN","RCXFMST1",125,0)
 .   S $P(LINE(COUNT),U,23)=$S('RCSUSP:33,1:24)
"RTN","RCXFMST1",126,0)
 .   S $P(LINE(COUNT),U,24)=$S('RCSUSP:"~",1:"~CRB")
"RTN","RCXFMST1",127,0)
 .   I RCSUSP D
"RTN","RCXFMST1",128,0)
 .   .   S $P(LINE(COUNT),U,32)=$P(DATA,U,4)
"RTN","RCXFMST1",129,0)
 .   .   S $P(LINE(COUNT),U,33)="~"
"RTN","RCXFMST1",130,0)
 ;
"RTN","RCXFMST1",131,0)
 ;  build tr2
"RTN","RCXFMST1",132,0)
 N FMSDT S FMSDT=$$FMSDATE^RCBEUTRA(DT)
"RTN","RCXFMST1",133,0)
 S TR2="CR2^"_$E(FMSDT,2,3)_U_$E(FMSDT,4,5)_U_$E(FMSDT,6,7)_"^^^^^^E^^^"
"RTN","RCXFMST1",134,0)
 ;  deposit number which is equal to the gcs id
"RTN","RCXFMST1",135,0)
 ;  $j(0,0,2) is the document total which is zero
"RTN","RCXFMST1",136,0)
 S TR2=TR2_$P(TRANNUMB,U)_"^^"_$J(0,0,2)_"^^"
"RTN","RCXFMST1",137,0)
 ;  deposit/transfer date
"RTN","RCXFMST1",138,0)
 S TR2=TR2_$E(DT,2,3)_U_$E(DT,4,5)_U_$E(DT,6,7)_"^~"
"RTN","RCXFMST1",139,0)
 ;
"RTN","RCXFMST1",140,0)
 ;  put together document in gcs
"RTN","RCXFMST1",141,0)
 N D0,DA,DI,DIC,DIE,DIQ2,DQ,DR
"RTN","RCXFMST1",142,0)
 S DESCRIP="EDI Lockbox Detail Receipt: "_$P(^RCY(344,RCRECTDA,0),U)
"RTN","RCXFMST1",143,0)
 I 'RCGECSDA D CONTROL^GECSUFMS("A",$E(TRANNUMB,1,3),TRANNUMB,"TR",10,0,"",DESCRIP)
"RTN","RCXFMST1",144,0)
 I RCGECSDA D REBUILD^GECSUFM1(RCGECSDA,"A",10,"N","Rebuild "_DESCRIP) S GECSFMS("DA")=RCGECSDA
"RTN","RCXFMST1",145,0)
 ;
"RTN","RCXFMST1",146,0)
 ;  store document in gcs
"RTN","RCXFMST1",147,0)
 D SETCS^GECSSTAA(GECSFMS("DA"),TR2)
"RTN","RCXFMST1",148,0)
 F COUNT=1:1 Q:'$D(LINE(COUNT))  D SETCS^GECSSTAA(GECSFMS("DA"),LINE(COUNT))
"RTN","RCXFMST1",149,0)
 D SETCODE^GECSSDCT(GECSFMS("DA"),"D RETN^RCFMFN02")
"RTN","RCXFMST1",150,0)
 D SETSTAT^GECSSTAA(GECSFMS("DA"),"Q")
"RTN","RCXFMST1",151,0)
 ;
"RTN","RCXFMST1",152,0)
 ;  add/update entry in file 347 for unprocessed document report
"RTN","RCXFMST1",153,0)
 N %DT,%X,D,DA347,D0,DI,DQ,DIC,ERROR,FMSDOCNO,X
"RTN","RCXFMST1",154,0)
 S FMSDOCNO="TR-"_$P(GECSFMS("CTL"),U,9)
"RTN","RCXFMST1",155,0)
 S DA347=$O(^RC(347,"C",FMSDOCNO,0))
"RTN","RCXFMST1",156,0)
 ;  if not in the file, addit   fmsdocid   tr   id
"RTN","RCXFMST1",157,0)
 I 'DA347 D OPEN^RCFMDRV1(FMSDOCNO,9,"TR-"_$P($G(^RCY(344,RCRECTDA,0)),U),.DA347,.ERROR)
"RTN","RCXFMST1",158,0)
 I DA347 D SSTAT^RCFMFN02(FMSDOCNO,1)
"RTN","RCXFMST1",159,0)
 ;
"RTN","RCXFMST1",160,0)
 ;  return 1 for success ^ fms document id
"RTN","RCXFMST1",161,0)
 Q 1_"^TR-"_$P(GECSFMS("CTL"),U,9)
"RTN","RCXFMST1",162,0)
 ;
"RTN","RCXFMST1",163,0)
 ;
"RTN","RCXFMST1",164,0)
DEC(COUNT,FISCALYR,TRANNUMB,AMOUNT) ; Add decrease from 5287.4/8NZZ
"RTN","RCXFMST1",165,0)
 ; Returns LINE with decrease TR info
"RTN","RCXFMST1",166,0)
 ; FISCALYR/TRANNUMB from above
"RTN","RCXFMST1",167,0)
 ; COUNT = line counter
"RTN","RCXFMST1",168,0)
 ; AMOUNT = amount to be transferred
"RTN","RCXFMST1",169,0)
 ;
"RTN","RCXFMST1",170,0)
 S LINE="LIN^~CRA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMST1",171,0)
 S $P(LINE,U,4)=FISCALYR
"RTN","RCXFMST1",172,0)
 S $P(LINE,U,6)=$$TRFUND()
"RTN","RCXFMST1",173,0)
 S $P(LINE,U,7)=$E(TRANNUMB,1,3) ; station #
"RTN","RCXFMST1",174,0)
 S $P(LINE,U,10)="8NZZ"
"RTN","RCXFMST1",175,0)
 ;
"RTN","RCXFMST1",176,0)
 ;  vendor id
"RTN","RCXFMST1",177,0)
 S $P(LINE,U,18)="MCCFVALUE"
"RTN","RCXFMST1",178,0)
 S $P(LINE,U,20)=$J(AMOUNT,0,2)
"RTN","RCXFMST1",179,0)
 S $P(LINE,U,21)="D"
"RTN","RCXFMST1",180,0)
 S $P(LINE,U,23)=33
"RTN","RCXFMST1",181,0)
 S $P(LINE,U,24)="~"
"RTN","RCXFMST1",182,0)
 Q LINE
"RTN","RCXFMST1",183,0)
 ;
"RTN","RCXFMST1",184,0)
TRFUND() ; Determine if fund should be 5287 or 5287.4, based on date
"RTN","RCXFMST1",185,0)
 I DT<3030926 Q 5287
"RTN","RCXFMST1",186,0)
 Q 5287.4
"RTN","RCXFMST1",187,0)
 ;
"RTN","RCXFMSUF")
0^108^B16584008
"RTN","RCXFMSUF",1,0)
RCXFMSUF ;WISC/RFJ-calculate fms fund code for a bill ;1 Oct 97
"RTN","RCXFMSUF",2,0)
 ;;4.5;Accounts Receivable;**90,101,135,157,160,165,170,203,207,173**;Mar 20, 1995
"RTN","RCXFMSUF",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCXFMSUF",4,0)
 Q
"RTN","RCXFMSUF",5,0)
 ;
"RTN","RCXFMSUF",6,0)
 ;
"RTN","RCXFMSUF",7,0)
GETFUNDO(TYPE) ;  return the fund for other type associated collections
"RTN","RCXFMSUF",8,0)
 ;  type can equal:
"RTN","RCXFMSUF",9,0)
 ;  I for interest         A for admin
"RTN","RCXFMSUF",10,0)
 ;  M for marshall fee     C for court cost
"RTN","RCXFMSUF",11,0)
 I TYPE="I" Q "1435"
"RTN","RCXFMSUF",12,0)
 I TYPE="A" Q "3220"
"RTN","RCXFMSUF",13,0)
 I TYPE="M" Q "0869"
"RTN","RCXFMSUF",14,0)
 I TYPE="C" Q "0869"
"RTN","RCXFMSUF",15,0)
 Q ""
"RTN","RCXFMSUF",16,0)
 ;
"RTN","RCXFMSUF",17,0)
 ;
"RTN","RCXFMSUF",18,0)
GETFUNDB(BILLDA,DONTSTOR,RCEFT) ;  return a bills fms fund code
"RTN","RCXFMSUF",19,0)
 ;  pass DONTSTOR equal 1 to prevent storing the fund code
"RTN","RCXFMSUF",20,0)
 ;  cannot rely on data in the fund field since it may reference the
"RTN","RCXFMSUF",21,0)
 ;  old funds S FUND=$P($G(^PRCA(430,BILLDA,11)),"^",17).  since there
"RTN","RCXFMSUF",22,0)
 ;  are reports which use 11;17, set it for a bill once its computed
"RTN","RCXFMSUF",23,0)
 ;  until all references to the fund are eliminated.
"RTN","RCXFMSUF",24,0)
 ;  rceft = 1 if processing an EFT deposit
"RTN","RCXFMSUF",25,0)
 ;
"RTN","RCXFMSUF",26,0)
 N ACTDATE,CATEGDA,FUND
"RTN","RCXFMSUF",27,0)
 ;
"RTN","RCXFMSUF",28,0)
 ;  calculate a bills fund
"RTN","RCXFMSUF",29,0)
 I $G(RCEFT)=1 S FUND="5287"_$S(DT<3030926:"",1:".4") Q FUND
"RTN","RCXFMSUF",30,0)
 S CATEGDA=+$P($G(^PRCA(430,BILLDA,0)),"^",2)
"RTN","RCXFMSUF",31,0)
 I CATEGDA>39 Q ""
"RTN","RCXFMSUF",32,0)
 ;
"RTN","RCXFMSUF",33,0)
 ;  piece 5 is new fund, remove spaces
"RTN","RCXFMSUF",34,0)
 S FUND=$P($TR($T(@CATEGDA)," "),";",5)
"RTN","RCXFMSUF",35,0)
 ;
"RTN","RCXFMSUF",36,0)
 ;  if category is vendor(17), ex-employee(15), current employee(16)
"RTN","RCXFMSUF",37,0)
 ;  federal agency refund(13), federal agency reimb(14), military(12)
"RTN","RCXFMSUF",38,0)
 ;  set the fund to what is stored in the file.  This was entered
"RTN","RCXFMSUF",39,0)
 ;  by the user during the audit process.  If fund is in the file
"RTN","RCXFMSUF",40,0)
 ;  already, do not need to store it again.
"RTN","RCXFMSUF",41,0)
 I CATEGDA=17!(CATEGDA=15)!(CATEGDA=16)!(CATEGDA=13)!(CATEGDA=14)!(CATEGDA=12) D
"RTN","RCXFMSUF",42,0)
 .   I $P($G(^PRCA(430,BILLDA,11)),"^",17)'="" S FUND=$P(^(11),"^",17),DONTSTOR=1
"RTN","RCXFMSUF",43,0)
 ;
"RTN","RCXFMSUF",44,0)
 ;  public law states that bills in the category ineligible (1),
"RTN","RCXFMSUF",45,0)
 ;  emerg/human (2), torts (10), or medicare (21) which are older 
"RTN","RCXFMSUF",46,0)
 ;  than oct 1, 1992 should be reported under fund 3220.
"RTN","RCXFMSUF",47,0)
 I CATEGDA=1!(CATEGDA=2)!(CATEGDA=10)!(CATEGDA=21) D
"RTN","RCXFMSUF",48,0)
 .   S ACTDATE=$P($G(^PRCA(430,BILLDA,6)),"^",21)
"RTN","RCXFMSUF",49,0)
 .   I ACTDATE,ACTDATE<2921001 S FUND=3220 Q
"RTN","RCXFMSUF",50,0)
 .   ;
"RTN","RCXFMSUF",51,0)
 .   ;  patch157 changes ineligibles.  an ineligible activated before
"RTN","RCXFMSUF",52,0)
 .   ;  oct 1, 1992 or after sep 30, 2000 will be recorded in fund 0160A1.
"RTN","RCXFMSUF",53,0)
 .   ;  otherwise it will be recorded in fund 5287.3
"RTN","RCXFMSUF",54,0)
 .   I CATEGDA=1,ACTDATE,ACTDATE<3001001 S FUND=5287.3
"RTN","RCXFMSUF",55,0)
 ;
"RTN","RCXFMSUF",56,0)
 ;  set the fund for the bill
"RTN","RCXFMSUF",57,0)
 I $G(DONTSTOR)'=1 D STORE^RCXFMSUR(BILLDA,"",FUND)
"RTN","RCXFMSUF",58,0)
 ;
"RTN","RCXFMSUF",59,0)
 I DT<3030926,$P(FUND,".")=5287 Q 5287 ; Effective date
"RTN","RCXFMSUF",60,0)
 I DT<3031001,$P(FUND,".")=5287,$G(REFMS) Q 5287 ; Resubmitted documents not held
"RTN","RCXFMSUF",61,0)
 Q FUND
"RTN","RCXFMSUF",62,0)
 ;
"RTN","RCXFMSUF",63,0)
 ;
"RTN","RCXFMSUF",64,0)
 ;  this is a listing of all categories and associated funds
"RTN","RCXFMSUF",65,0)
 ;  the label is from the internal entry number in the category
"RTN","RCXFMSUF",66,0)
 ;  file 430.2.  piece 3 is a description, piece 4 is the old fund,
"RTN","RCXFMSUF",67,0)
 ;  piece 5 is the new fund
"RTN","RCXFMSUF",68,0)
0 ;;no fund                       ;       ;    
"RTN","RCXFMSUF",69,0)
1 ;;INELIGIBLE HOSP.              ;3220   ;0160A1
"RTN","RCXFMSUF",70,0)
2 ;;EMERGENCY/HUMANITARIAN        ;0160A1 ;5287.3
"RTN","RCXFMSUF",71,0)
3 ;;NURSING HOME CARE(NSC)        ;2431   ;5287.3
"RTN","RCXFMSUF",72,0)
4 ;;OUTPATIENT CARE(NSC)          ;2431   ;5287.3
"RTN","RCXFMSUF",73,0)
5 ;;HOSPITAL CARE (NSC)           ;2431   ;5287.3
"RTN","RCXFMSUF",74,0)
6 ;;WORKMAN'S COMP.               ;5014   ;5287.4
"RTN","RCXFMSUF",75,0)
7 ;;NO-FAULT AUTO ACC.            ;5014   ;5287.4
"RTN","RCXFMSUF",76,0)
8 ;;CRIME OF PER.VIO.             ;5014   ;5287.4
"RTN","RCXFMSUF",77,0)
9 ;;REIMBURS.HEALTH INS.          ;5014   ;5287.4
"RTN","RCXFMSUF",78,0)
10 ;;TORT FEASOR                   ;0160A1 ;5287.4
"RTN","RCXFMSUF",79,0)
11 ;;no entry                      ;       ;
"RTN","RCXFMSUF",80,0)
12 ;;MILITARY                      ;0160A1 ;0160A1
"RTN","RCXFMSUF",81,0)
13 ;;FEDERAL AGENCIES-REFUND       ;0160A1 ;0160A1
"RTN","RCXFMSUF",82,0)
14 ;;FEDERAL AGENCIES-REIMB.       ;0160A1 ;0160A1
"RTN","RCXFMSUF",83,0)
15 ;;EX-EMPLOYEE                   ;0160A1 ;0160A1
"RTN","RCXFMSUF",84,0)
16 ;;CURRENT EMP.                  ;0160A1 ;0160A1
"RTN","RCXFMSUF",85,0)
17 ;;VENDOR                        ;0160A1 ;0160A1
"RTN","RCXFMSUF",86,0)
18 ;;C (MEANS TEST)                ;2431   ;5287.3
"RTN","RCXFMSUF",87,0)
19 ;;SHARING AGREEMENTS            ;0160A1 ;0160A1
"RTN","RCXFMSUF",88,0)
20 ;;INTERAGENCY                   ;0160A1 ;0160A1
"RTN","RCXFMSUF",89,0)
21 ;;MEDICARE                      ;5014   ;5287.4
"RTN","RCXFMSUF",90,0)
22 ;;RX CO-PAYMENT/SC VET          ;5014   ;5287.1
"RTN","RCXFMSUF",91,0)
23 ;;RX CO-PAYMENT/NSC VET         ;5014   ;5287.1
"RTN","RCXFMSUF",92,0)
24 ;;NURSING HOME CARE PER DIEM    ;2431   ;5287.3
"RTN","RCXFMSUF",93,0)
25 ;;HOSPITAL CARE PER DIEM        ;2431   ;5287.3
"RTN","RCXFMSUF",94,0)
26 ;;PREPAYMENT                    ;5014   ;5287.3
"RTN","RCXFMSUF",95,0)
27 ;;CHAMPVA SUBSISTENCE           ;3220   ;3220
"RTN","RCXFMSUF",96,0)
28 ;;CHAMPVA THIRD PARTY           ;3220   ;3220
"RTN","RCXFMSUF",97,0)
29 ;;CHAMPVA                       ;0160A1 ;0160A1
"RTN","RCXFMSUF",98,0)
30 ;;CHAMPUS                       ;0160A1 ;0160A1
"RTN","RCXFMSUF",99,0)
31 ;;CHAMPUS PATIENT               ;0160A1 ;0160A1
"RTN","RCXFMSUF",100,0)
32 ;;CHAMPUS THIRD PARTY           ;0160A1 ;0160A1
"RTN","RCXFMSUF",101,0)
33 ;;ADULT DAY HEALTH CARE         ;       ;4032
"RTN","RCXFMSUF",102,0)
34 ;;DOMICILIARY                   ;       ;4032
"RTN","RCXFMSUF",103,0)
35 ;;RESPITE CARE-INSTITUTIONAL    ;       ;4032
"RTN","RCXFMSUF",104,0)
36 ;;RESPITE CARE-NON-INSTITUTIONAL;       ;4032
"RTN","RCXFMSUF",105,0)
37 ;;GERIATRIC EVAL-INSTITUTIONAL  ;       ;4032
"RTN","RCXFMSUF",106,0)
38 ;;GERIATRIC EVAL-NON-INSTITUTION;       ;4032
"RTN","RCXFMSUF",107,0)
39 ;;NURSING HOME CARE-LTC         ;       ;4032
"RTN","RCXFMSUR")
0^109^B44865483
"RTN","RCXFMSUR",1,0)
RCXFMSUR ;WISC/RFJ-revenue source codes ;1 Oct 97
"RTN","RCXFMSUR",2,0)
 ;;4.5;Accounts Receivable;**90,101,170,203,173**;Mar 20, 1995
"RTN","RCXFMSUR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCXFMSUR",4,0)
 Q
"RTN","RCXFMSUR",5,0)
 ;
"RTN","RCXFMSUR",6,0)
 ;
"RTN","RCXFMSUR",7,0)
CALCRSC(BILLDA,RCEFT) ;  calculate the revenue source code for a bill
"RTN","RCXFMSUR",8,0)
 ;  rceft = 1 if processing an EFT deposit
"RTN","RCXFMSUR",9,0)
 ;  returns the 4 column (character) rsc
"RTN","RCXFMSUR",10,0)
 N CATEGDA,COLUMN1,COLUMN2,COLUMN3,COLUMN4,RSC
"RTN","RCXFMSUR",11,0)
 ;  if rsc already calculated, return it
"RTN","RCXFMSUR",12,0)
 I $G(RCEFT)=1 S RSC="8NZZ" Q RSC
"RTN","RCXFMSUR",13,0)
 S RSC=$P($G(^PRCA(430,BILLDA,11)),"^",23)
"RTN","RCXFMSUR",14,0)
 I $L(RSC)=4,RSC'="ARRV" Q RSC
"RTN","RCXFMSUR",15,0)
 ;
"RTN","RCXFMSUR",16,0)
 ;  calculate it and store it
"RTN","RCXFMSUR",17,0)
 S CATEGDA=+$P($G(^PRCA(430,BILLDA,0)),"^",2)
"RTN","RCXFMSUR",18,0)
 ;
"RTN","RCXFMSUR",19,0)
 ;  if prepayment, send ARRV
"RTN","RCXFMSUR",20,0)
 I CATEGDA=26 D STORE(BILLDA,"ARRV") Q "ARRV"
"RTN","RCXFMSUR",21,0)
 ;
"RTN","RCXFMSUR",22,0)
 S COLUMN1=$$COLUMN1
"RTN","RCXFMSUR",23,0)
 S COLUMN2=$$COLUMN2
"RTN","RCXFMSUR",24,0)
 ;
"RTN","RCXFMSUR",25,0)
 ;  if column2 cannot be determined, return the rsc of ARRV
"RTN","RCXFMSUR",26,0)
 I COLUMN2="" D STORE(BILLDA,"ARRV") Q "ARRV"
"RTN","RCXFMSUR",27,0)
 ;
"RTN","RCXFMSUR",28,0)
 ;  if column2 is not a 5 for reimbursable health insurance,
"RTN","RCXFMSUR",29,0)
 ;  return ZZ in columns 3 and 4
"RTN","RCXFMSUR",30,0)
 I COLUMN2'=5 D STORE(BILLDA,COLUMN1_COLUMN2_"ZZ") Q COLUMN1_COLUMN2_"ZZ"
"RTN","RCXFMSUR",31,0)
 ;
"RTN","RCXFMSUR",32,0)
 ;  for reimbursable health insurance, compute columns 3 and 4
"RTN","RCXFMSUR",33,0)
 S COLUMN3=$$COLUMN3
"RTN","RCXFMSUR",34,0)
 S COLUMN4=$$COLUMN4
"RTN","RCXFMSUR",35,0)
 ;
"RTN","RCXFMSUR",36,0)
 D STORE(BILLDA,COLUMN1_COLUMN2_COLUMN3_COLUMN4)
"RTN","RCXFMSUR",37,0)
 Q COLUMN1_COLUMN2_COLUMN3_COLUMN4
"RTN","RCXFMSUR",38,0)
 ;
"RTN","RCXFMSUR",39,0)
 ;
"RTN","RCXFMSUR",40,0)
STORE(DA,RSC,FUND) ;  store the revenue source code  or fund in the file
"RTN","RCXFMSUR",41,0)
 I $G(^PRCA(430,DA,0))="" Q
"RTN","RCXFMSUR",42,0)
 N D,D0,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCXFMSUR",43,0)
 S DR=""
"RTN","RCXFMSUR",44,0)
 I $G(RSC)'="" S DR="255.1////"_RSC_";"
"RTN","RCXFMSUR",45,0)
 I $G(FUND)'="" S DR=DR_"203////"_FUND_";"
"RTN","RCXFMSUR",46,0)
 S (DIC,DIE)="^PRCA(430,"
"RTN","RCXFMSUR",47,0)
 D ^DIE
"RTN","RCXFMSUR",48,0)
 Q
"RTN","RCXFMSUR",49,0)
 ;
"RTN","RCXFMSUR",50,0)
 ;
"RTN","RCXFMSUR",51,0)
COLUMN1() ;  return column 1 number
"RTN","RCXFMSUR",52,0)
 Q 8
"RTN","RCXFMSUR",53,0)
 ;
"RTN","RCXFMSUR",54,0)
 ;
"RTN","RCXFMSUR",55,0)
COLUMN2() ;  return column 2 number
"RTN","RCXFMSUR",56,0)
 I CATEGDA=5 Q 1     ; hospital care (nsc)
"RTN","RCXFMSUR",57,0)
 I CATEGDA=4 Q 2     ; outpatient care (nsc)
"RTN","RCXFMSUR",58,0)
 I CATEGDA=3 Q 3     ; nursing home care (nsc)
"RTN","RCXFMSUR",59,0)
 I CATEGDA=1 Q 4     ; ineligible hospital
"RTN","RCXFMSUR",60,0)
 I CATEGDA=9 Q 5     ; reimbursable health insurance
"RTN","RCXFMSUR",61,0)
 I CATEGDA=10 Q 6    ; tort fesor
"RTN","RCXFMSUR",62,0)
 I CATEGDA=6 Q 7     ; workmans comp
"RTN","RCXFMSUR",63,0)
 I CATEGDA=18 Q 8    ; c (means test)
"RTN","RCXFMSUR",64,0)
 I CATEGDA=2 Q 9     ; emergency/humanitarian
"RTN","RCXFMSUR",65,0)
 I CATEGDA=7 Q "A"   ; no fault auto accident
"RTN","RCXFMSUR",66,0)
 I CATEGDA=22 Q "B"  ; rx copay/sc vet
"RTN","RCXFMSUR",67,0)
 I CATEGDA=23 Q "C"  ; rx copay/nsc vet
"RTN","RCXFMSUR",68,0)
 I CATEGDA=24 Q "D"  ; nursing home care per diem
"RTN","RCXFMSUR",69,0)
 I CATEGDA=25 Q "E"  ; hospital care per diem
"RTN","RCXFMSUR",70,0)
 I CATEGDA=21 Q "F"  ; medicare
"RTN","RCXFMSUR",71,0)
 I CATEGDA=33 Q "G"  ; adult day health care
"RTN","RCXFMSUR",72,0)
 I CATEGDA=34 Q "H"  ; domiciliary
"RTN","RCXFMSUR",73,0)
 I CATEGDA=35 Q "I"  ; respite care - institutional
"RTN","RCXFMSUR",74,0)
 I CATEGDA=36 Q "J"  ; respite care - non-institutional
"RTN","RCXFMSUR",75,0)
 I CATEGDA=37 Q "K"  ; geriatric evaluation - institutional
"RTN","RCXFMSUR",76,0)
 I CATEGDA=38 Q "L"  ; geriatric evaluation - non-institutional
"RTN","RCXFMSUR",77,0)
 I CATEGDA=39 Q "M"  ; nursing home care - ltc
"RTN","RCXFMSUR",78,0)
 Q ""
"RTN","RCXFMSUR",79,0)
 ;
"RTN","RCXFMSUR",80,0)
 ;
"RTN","RCXFMSUR",81,0)
COLUMN3() ;  return the column 3 number
"RTN","RCXFMSUR",82,0)
 N AGE,DECIMAL,DFN,IBCNDATA,TYPEAGE,TYPECARE,TYPEMEAN,TYPESERV,VA,VADM,VAERR
"RTN","RCXFMSUR",83,0)
 D DIQ399(BILLDA)
"RTN","RCXFMSUR",84,0)
 ;
"RTN","RCXFMSUR",85,0)
 D TYPECARE
"RTN","RCXFMSUR",86,0)
 ;
"RTN","RCXFMSUR",87,0)
 ;  compute service connected at time of care (1 digit binary)
"RTN","RCXFMSUR",88,0)
 ;  type of service connected is set as follows:
"RTN","RCXFMSUR",89,0)
 ;        0 = SC Vet                   1 = NSC Vet
"RTN","RCXFMSUR",90,0)
 S TYPESERV=1
"RTN","RCXFMSUR",91,0)
 ;  service connected at time of care (.18) = yes (1)
"RTN","RCXFMSUR",92,0)
 I $G(IBCNDATA(399,BILLDA,.18,"I"))=1 S TYPESERV=0
"RTN","RCXFMSUR",93,0)
 ;
"RTN","RCXFMSUR",94,0)
 S DFN=$P($G(^PRCA(430,BILLDA,0)),"^",7)
"RTN","RCXFMSUR",95,0)
 D DEM^VADPT
"RTN","RCXFMSUR",96,0)
 ;
"RTN","RCXFMSUR",97,0)
 ;  compute means test at time of care (1 digit binary)
"RTN","RCXFMSUR",98,0)
 ;  type of means test is set as follows:
"RTN","RCXFMSUR",99,0)
 ;        0 = Cat A                    1 = Cat C
"RTN","RCXFMSUR",100,0)
 S TYPEMEAN=0
"RTN","RCXFMSUR",101,0)
 I $$BIL^DGMTUB(DFN,$G(IBCNDATA(399,BILLDA,151,"I")))=1 S TYPEMEAN=1
"RTN","RCXFMSUR",102,0)
 ;
"RTN","RCXFMSUR",103,0)
 ;  compute patient age at time of care (1 digit binary)
"RTN","RCXFMSUR",104,0)
 ;  type of age is set as follows:
"RTN","RCXFMSUR",105,0)
 ;        0 = under 65                 1 = 65 and older
"RTN","RCXFMSUR",106,0)
 S AGE=$$FMDIFF^XLFDT($G(IBCNDATA(399,BILLDA,151,"I")),$P($G(VADM(3)),"^"))\365.25
"RTN","RCXFMSUR",107,0)
 S TYPEAGE=1
"RTN","RCXFMSUR",108,0)
 I AGE<65 S TYPEAGE=0
"RTN","RCXFMSUR",109,0)
 ;
"RTN","RCXFMSUR",110,0)
 ;  convert to decimal  typecare  typeserv  typemean  typeage
"RTN","RCXFMSUR",111,0)
 ;             binary=  1   1         1         1         1
"RTN","RCXFMSUR",112,0)
 ;            decimal= 16 + 8     +   4     +   2     +   1
"RTN","RCXFMSUR",113,0)
 S DECIMAL=$S(TYPECARE="11":24,TYPECARE="10":16,TYPECARE="01":8,1:0)
"RTN","RCXFMSUR",114,0)
 I TYPESERV S DECIMAL=DECIMAL+4
"RTN","RCXFMSUR",115,0)
 I TYPEMEAN S DECIMAL=DECIMAL+2
"RTN","RCXFMSUR",116,0)
 I TYPEAGE S DECIMAL=DECIMAL+1
"RTN","RCXFMSUR",117,0)
 I DECIMAL<10 Q DECIMAL
"RTN","RCXFMSUR",118,0)
 Q $C(65+DECIMAL-10)
"RTN","RCXFMSUR",119,0)
 ;
"RTN","RCXFMSUR",120,0)
 ;
"RTN","RCXFMSUR",121,0)
COLUMN4() ;  return the column 4 number (reserved for future expansion)
"RTN","RCXFMSUR",122,0)
 Q "Z"
"RTN","RCXFMSUR",123,0)
 ;
"RTN","RCXFMSUR",124,0)
 ;
"RTN","RCXFMSUR",125,0)
DIQ399(DA)  ;  get data from file 399
"RTN","RCXFMSUR",126,0)
 N D0,DIC,DIQ,DIQ2,DR
"RTN","RCXFMSUR",127,0)
 K IBCNDATA
"RTN","RCXFMSUR",128,0)
 S DIQ(0)="IE",DIC="^DGCR(399,",DIQ="IBCNDATA",DR=".04;.05;.18;151;" D EN^DIQ1
"RTN","RCXFMSUR",129,0)
 Q
"RTN","RCXFMSUR",130,0)
 ;
"RTN","RCXFMSUR",131,0)
 ;
"RTN","RCXFMSUR",132,0)
TYPECARE ;  compute type of care (2 digit binary)
"RTN","RCXFMSUR",133,0)
 ;  type of care is set as follows:
"RTN","RCXFMSUR",134,0)
 ;      00 = inpatient (hospital)    01 = outpatient
"RTN","RCXFMSUR",135,0)
 ;      10 = nursing home            11 = other
"RTN","RCXFMSUR",136,0)
 ;  default is other if it cannot be computed
"RTN","RCXFMSUR",137,0)
 S TYPECARE="11"
"RTN","RCXFMSUR",138,0)
 ;  bill classification (.05) = outpatient (3) or human.emerg(opt) (4)
"RTN","RCXFMSUR",139,0)
 I $G(IBCNDATA(399,BILLDA,.05,"I"))=3!($G(IBCNDATA(399,BILLDA,.05,"I"))=4) S TYPECARE="01" Q
"RTN","RCXFMSUR",140,0)
 ;  location of care (.04) = hospital inpt or outpt (1)
"RTN","RCXFMSUR",141,0)
 I $G(IBCNDATA(399,BILLDA,.04,"I"))=1 S TYPECARE="00" Q
"RTN","RCXFMSUR",142,0)
 ;  location of care (.04) = skilled nursing (nhcu) (2)
"RTN","RCXFMSUR",143,0)
 I $G(IBCNDATA(399,BILLDA,.04,"I"))=2 S TYPECARE="10"
"RTN","RCXFMSUR",144,0)
 Q
"RTN","RCXFMSUR",145,0)
 ;
"RTN","RCXFMSUR",146,0)
 ;
"RTN","RCXFMSUR",147,0)
ADDEDIT ;  enter/edit revenue source codes for fund 0160A1 bills.  These
"RTN","RCXFMSUR",148,0)
 ;  bills have the rsc entered by the user.  The user can select
"RTN","RCXFMSUR",149,0)
 ;  from rscs in file 347.3
"RTN","RCXFMSUR",150,0)
 W !!,"This option should be used with CAUTION.  This option will allow the"
"RTN","RCXFMSUR",151,0)
 W !,"user owning the PRCASVC supervisor security key, to add or edit the"
"RTN","RCXFMSUR",152,0)
 W !,"Revenue Source Codes selectable for non MCCF bills.  If an invalid"
"RTN","RCXFMSUR",153,0)
 W !,"Revenue Source Code is entered or changed, all code sheets sent to"
"RTN","RCXFMSUR",154,0)
 W !,"FMS referencing the invalid Revenue Source Code will reject.  Be"
"RTN","RCXFMSUR",155,0)
 W !,"cautious when entering new Revenue Source Codes or editing existing"
"RTN","RCXFMSUR",156,0)
 W !,"Revenue Source Codes.  New Revenue Source Codes should only be added"
"RTN","RCXFMSUR",157,0)
 W !,"after they have been added in FMS."
"RTN","RCXFMSUR",158,0)
 ;
"RTN","RCXFMSUR",159,0)
 I '$D(^XUSEC("PRCASVC",DUZ)) W !!,"You are not an owner of the PRCASVC security key." Q
"RTN","RCXFMSUR",160,0)
 ;
"RTN","RCXFMSUR",161,0)
 N %,%Y,C,D,D0,DA,DI,DIC,DIE,DLAYGO,DQ,DR,RCRJFLAG,X,Y
"RTN","RCXFMSUR",162,0)
 ;
"RTN","RCXFMSUR",163,0)
 F  D  Q:$G(RCRJFLAG)
"RTN","RCXFMSUR",164,0)
 .   S (DIC,DIE)="^RC(347.3,",DIC(0)="QEALM",DLAYGO=347.3
"RTN","RCXFMSUR",165,0)
 .   W ! D ^DIC
"RTN","RCXFMSUR",166,0)
 .   I Y<1 S RCRJFLAG=1 Q
"RTN","RCXFMSUR",167,0)
 .   S DIE="^RC(347.3,",DA=+Y,DR=".02;.03;"
"RTN","RCXFMSUR",168,0)
 .   D ^DIE
"RTN","RCXFMSUR",169,0)
 Q
"RTN","RCXFMSUR",170,0)
 ;
"RTN","RCXFMSUR",171,0)
 ;
"RTN","RCXFMSUR",172,0)
SHOW ;  show/calculate revenue source code for a selected bill
"RTN","RCXFMSUR",173,0)
 W !!,"This option will show the calculated Revenue Source Code for a selected"
"RTN","RCXFMSUR",174,0)
 W !,"bill.  The Revenue Source Code is only calculated for accrued bills in"
"RTN","RCXFMSUR",175,0)
 W !,"fund 5287."
"RTN","RCXFMSUR",176,0)
 ;
"RTN","RCXFMSUR",177,0)
 N %,%Y,BILLDA,C,DIC,FUND,I,RCRJFLAG,RSC,X,Y
"RTN","RCXFMSUR",178,0)
 ;
"RTN","RCXFMSUR",179,0)
 F  D  Q:$G(RCRJFLAG)
"RTN","RCXFMSUR",180,0)
 .   S DIC="^PRCA(430,",DIC(0)="QEAM"
"RTN","RCXFMSUR",181,0)
 .   W ! D ^DIC
"RTN","RCXFMSUR",182,0)
 .   I Y<1 S RCRJFLAG=1 Q
"RTN","RCXFMSUR",183,0)
 .   S BILLDA=+Y
"RTN","RCXFMSUR",184,0)
 .   S FUND=$$GETFUNDB^RCXFMSUF(BILLDA,1)
"RTN","RCXFMSUR",185,0)
 .   W !!,"        Bill Number: ",$P($G(^PRCA(430,BILLDA,0)),"^")
"RTN","RCXFMSUR",186,0)
 .   W !,"               Fund: ",FUND
"RTN","RCXFMSUR",187,0)
 .   I $P(FUND,".")'=5287,FUND'=4032 D  Q
"RTN","RCXFMSUR",188,0)
 .   .   W !,"  The Revenue Source Code cannot be calculated for non-accrued bills."
"RTN","RCXFMSUR",189,0)
 .   .   W !,"  The Revenue Source Code for non-accrued bills are input by the user."
"RTN","RCXFMSUR",190,0)
 .   .   W !,"  The Revenue Source Code is currently entered as: "
"RTN","RCXFMSUR",191,0)
 .   .   S RSC=$P($G(^PRCA(430,BILLDA,11)),"^",6)
"RTN","RCXFMSUR",192,0)
 .   .   W $S(RSC="":"<not entered>",1:RSC)
"RTN","RCXFMSUR",193,0)
 .   ;
"RTN","RCXFMSUR",194,0)
 .   S RSC=$$CALCRSC(BILLDA)
"RTN","RCXFMSUR",195,0)
 .   W !,"Revenue Source Code: ",RSC
"RTN","RCXFMSUR",196,0)
 Q
"RTN","RCY173PO")
0^^B9154726
"RTN","RCY173PO",1,0)
RCY173PO ;ALB/TMK - PRCA*4.5*173 POST-INSTALL ;31-OCT-2002
"RTN","RCY173PO",2,0)
 ;;4.5;Accounts Receivable;**173**;Mar 20, 1995
"RTN","RCY173PO",3,0)
 ;
"RTN","RCY173PO",4,0)
POST ;Set up check points for post-init
"RTN","RCY173PO",5,0)
 N %
"RTN","RCY173PO",6,0)
 S %=$$NEWCP^XPDUTL("U342","U342^RCY173PO")
"RTN","RCY173PO",7,0)
 S %=$$NEWCP^XPDUTL("ADDUSER","ADDUSERS^RCY173PO")
"RTN","RCY173PO",8,0)
 S %=$$NEWCP^XPDUTL("ADDGMBR","ADDGMBR^RCY173PO")
"RTN","RCY173PO",9,0)
 S %=$$NEWCP^XPDUTL("END","END^RCY173PO") ; Leave as last update
"RTN","RCY173PO",10,0)
 Q
"RTN","RCY173PO",11,0)
 ;
"RTN","RCY173PO",12,0)
U342 N Z,DA,DIE,X,Y,DR
"RTN","RCY173PO",13,0)
 D BMES^XPDUTL("Adding default values to 'aging' site parameters")
"RTN","RCY173PO",14,0)
 S DIE="^RC(342,",DA=1,DR="7.02////5;7.03////7" D ^DIE
"RTN","RCY173PO",15,0)
 D COMPLETE
"RTN","RCY173PO",16,0)
 Q
"RTN","RCY173PO",17,0)
 ;
"RTN","RCY173PO",18,0)
ADDUSERS N DIC,X,Y,DO,DD,DLAYGO
"RTN","RCY173PO",19,0)
 D BMES^XPDUTL("Adding new EDI Lockbox generic users")
"RTN","RCY173PO",20,0)
 S DIC(0)="",DIC="^VA(200,",X="EDILOCKBOX,AUTOMATIC" D ^DIC
"RTN","RCY173PO",21,0)
 I Y>0 D  G ADD1
"RTN","RCY173PO",22,0)
 . D BMES^XPDUTL("User 'EDILOCKBOX,AUTOMATIC' already exists in the NEW PERSON file - not added")
"RTN","RCY173PO",23,0)
 D BMES^XPDUTL("Adding new user 'EDILOCKBOX,AUTOMATIC' to the NEW PERSON file")
"RTN","RCY173PO",24,0)
 S DLAYGO=200,DIC(0)="L",DIC="^VA(200,",DIC("DR")="1////EDI",X="EDILOCKBOX,AUTOMATIC" D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","RCY173PO",25,0)
 I Y'>0 D
"RTN","RCY173PO",26,0)
 . D BMES^XPDUTL("A PROBLEM WAS ENCOUNTERED TRYING TO ADD USER 'EDILOCKBOX,AUTOMATIC'")
"RTN","RCY173PO",27,0)
 . D BMES^XPDUTL("THE ENTRY MUST BE ADDED MANUALLY TO THE NEW PERSON FILE")
"RTN","RCY173PO",28,0)
 E  D
"RTN","RCY173PO",29,0)
 . D BMES^XPDUTL("USER 'EDILOCKBOX,AUTOMATIC' WAS SUCCESSFULLY ADDED TO THE NEW PERSON FILE")
"RTN","RCY173PO",30,0)
 ;
"RTN","RCY173PO",31,0)
ADD1 S DIC(0)="",DIC="^VA(200,",X="PRCA,AUTOAUDIT" D ^DIC
"RTN","RCY173PO",32,0)
 I Y>0 D  G ADDQ
"RTN","RCY173PO",33,0)
 . D BMES^XPDUTL("User 'PRCA,AUTOAUDIT' already exists in the NEW PERSON file - not added")
"RTN","RCY173PO",34,0)
 D BMES^XPDUTL("Adding new user 'PRCA,AUTOAUDIT' to the NEW PERSON file")
"RTN","RCY173PO",35,0)
 S DLAYGO=200,DIC(0)="L",DIC="^VA(200,",DIC("DR")="1////EDI",X="PRCA,AUTOAUDIT" D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","RCY173PO",36,0)
 I Y'>0 D
"RTN","RCY173PO",37,0)
 . D BMES^XPDUTL("A PROBLEM WAS ENCOUNTERED TRYING TO ADD USER 'PRCA,AUTOAUDIT'")
"RTN","RCY173PO",38,0)
 . D BMES^XPDUTL("THE ENTRY MUST BE ADDED MANUALLY TO THE NEW PERSON FILE")
"RTN","RCY173PO",39,0)
 E  D
"RTN","RCY173PO",40,0)
 . D BMES^XPDUTL("USER 'PRCA,AUTOAUDIT' WAS SUCCESSFULLY ADDED TO THE NEW PERSON FILE")
"RTN","RCY173PO",41,0)
 ;
"RTN","RCY173PO",42,0)
ADDQ D COMPLETE
"RTN","RCY173PO",43,0)
 Q
"RTN","RCY173PO",44,0)
 ;
"RTN","RCY173PO",45,0)
ADDGMBR ; Add S.RCDPE EDI LOCKBOX SERVER server option to mailgroup MLB
"RTN","RCY173PO",46,0)
 D BMES^XPDUTL("Note: SERVER OPTION S.RCDPE EDI LOCKBOX SERVER@<your site's domain>"),MES^XPDUTL("      MUST BE ADDED MANUALLY TO MAIL GROUP MLB")
"RTN","RCY173PO",47,0)
 D COMPLETE
"RTN","RCY173PO",48,0)
 Q
"RTN","RCY173PO",49,0)
 ;
"RTN","RCY173PO",50,0)
COMPLETE ;
"RTN","RCY173PO",51,0)
 D BMES^XPDUTL("Step complete.")
"RTN","RCY173PO",52,0)
 Q
"RTN","RCY173PO",53,0)
 ;
"RTN","RCY173PO",54,0)
END ;
"RTN","RCY173PO",55,0)
 D BMES^XPDUTL("Post install complete.")
"RTN","RCY173PO",56,0)
 Q
"RTN","RCY173PO",57,0)
 ;
"UP",344,344.01,-1)
344^1
"UP",344,344.01,0)
344.01
"VER")
8.0^22
"^DD",341.1,341.1,0)
FIELD^^1.02^5
"^DD",341.1,341.1,0,"DDA")
N
"^DD",341.1,341.1,0,"DT")
2991014
"^DD",341.1,341.1,0,"IX","AC",341.1,.02)

"^DD",341.1,341.1,0,"IX","B",341.1,.01)

"^DD",341.1,341.1,0,"NM","AR EVENT TYPE")

"^DD",341.1,341.1,0,"PT",341,.02)

"^DD",341.1,341.1,0,"PT",344,.04)

"^DD",341.1,341.1,0,"VRPK")
PRCA
"^DD",341.1,341.1,.01,0)
NAME^RFI^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",341.1,341.1,.01,1,0)
^.1
"^DD",341.1,341.1,.01,1,1,0)
341.1^B
"^DD",341.1,341.1,.01,1,1,1)
S ^RC(341.1,"B",$E(X,1,30),DA)=""
"^DD",341.1,341.1,.01,1,1,2)
K ^RC(341.1,"B",$E(X,1,30),DA)
"^DD",341.1,341.1,.01,1,1,3)
Needed to look-up AR Event Types by Name
"^DD",341.1,341.1,.01,1,1,"%D",0)
^^2^2^2930609^
"^DD",341.1,341.1,.01,1,1,"%D",1,0)
This cross reference is not used in the AR package, but exists for
"^DD",341.1,341.1,.01,1,1,"%D",2,0)
FileMan look-up on this file by the AR event type name.
"^DD",341.1,341.1,.01,3)
Answer must be 3-30 characters in length.
"^DD",341.1,341.1,.01,21,0)
^^2^2^2930609^^
"^DD",341.1,341.1,.01,21,1,0)
The name of an event describes the type of event the occurred to a debtor's
"^DD",341.1,341.1,.01,21,2,0)
account.
"^DD",341.1,341.1,.01,"DT")
2991025
"^DD",341.1,341.1,.02,0)
EVENT NUMBER^NJ2,0XI^^0;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X D:$D(X) EVNNUM^RCEVDD1
"^DD",341.1,341.1,.02,1,0)
^.1
"^DD",341.1,341.1,.02,1,1,0)
341.1^AC
"^DD",341.1,341.1,.02,1,1,1)
S ^RC(341.1,"AC",$E(X,1,30),DA)=""
"^DD",341.1,341.1,.02,1,1,2)
K ^RC(341.1,"AC",$E(X,1,30),DA)
"^DD",341.1,341.1,.02,1,1,3)
Needed to look-up events by their assigned number
"^DD",341.1,341.1,.02,1,1,"%D",0)
^^2^2^2930609^
"^DD",341.1,341.1,.02,1,1,"%D",1,0)
Since the AR event type file is a table file, AR event types are
"^DD",341.1,341.1,.02,1,1,"%D",2,0)
found by their associated event number using this cross reference.
"^DD",341.1,341.1,.02,1,1,"DT")
2930101
"^DD",341.1,341.1,.02,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",341.1,341.1,.02,21,0)
^^6^6^2930604^^
"^DD",341.1,341.1,.02,21,1,0)
The event number is how the AR package determines what type of event
"^DD",341.1,341.1,.02,21,2,0)
exists.  Since various files and functionality are driven by different
"^DD",341.1,341.1,.02,21,3,0)
types of events, the AR package uses this field to determine what action
"^DD",341.1,341.1,.02,21,4,0)
to take.
"^DD",341.1,341.1,.02,21,5,0)
 
"^DD",341.1,341.1,.02,21,6,0)
This field should NEVER be edited.
"^DD",341.1,341.1,.02,"DT")
2930604
"^DD",341.1,341.1,.06,0)
CATEGORY^S^1:PAYMENT;2:NOTIFICATION;^0;6^Q
"^DD",341.1,341.1,.06,21,0)
^^4^4^2941115^^^^
"^DD",341.1,341.1,.06,21,1,0)
Events are categorized by the Category field.  This allows different
"^DD",341.1,341.1,.06,21,2,0)
event types to be associated with each other.  For example, there are
"^DD",341.1,341.1,.06,21,3,0)
many different types of payment events (Cash, Check, Credit Card, etc.)
"^DD",341.1,341.1,.06,21,4,0)
that are separate events, buy these events are categorized as 'Payments'.
"^DD",341.1,341.1,.06,"DT")
2991014
"^DD",341.1,341.1,1.01,0)
INPUT TEMPLATE^F^^1;1^K:$L(X)>30!($L(X)<1) X
"^DD",341.1,341.1,1.01,3)
Answer must be 1-30 characters in length.
"^DD",341.1,341.1,1.01,21,0)
^^3^3^2930604^^^
"^DD",341.1,341.1,1.01,21,1,0)
The input template field identifies an input template in file 341.  This
"^DD",341.1,341.1,1.01,21,2,0)
allows the AR package to have a 'generic' enter module for entering
"^DD",341.1,341.1,1.01,21,3,0)
AR events into file 341.
"^DD",341.1,341.1,1.01,"DT")
2930220
"^DD",341.1,341.1,1.02,0)
PRINT TEMPLATE^F^^1;2^K:$L(X)>30!($L(X)<1) X
"^DD",341.1,341.1,1.02,3)
Answer must be 1-30 characters in length.
"^DD",341.1,341.1,1.02,21,0)
^^3^3^2930604^
"^DD",341.1,341.1,1.02,21,1,0)
The print template field identifies a print template in file 341.  This
"^DD",341.1,341.1,1.02,21,2,0)
allows the AR package to have a 'generic' print module for printing
"^DD",341.1,341.1,1.02,21,3,0)
and displaying AR events in file 341.
"^DD",341.1,341.1,1.02,"DT")
2930220
"^DD",342,342,7.02,0)
NUMBER OF DAYS EFT UNMATCHED^NJ2,0^^7;2^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",342,342,7.02,3)
Type a Number between 0 and 99, 0 Decimal Digits
"^DD",342,342,7.02,21,0)
^.001^2^2^3021206^^^
"^DD",342,342,7.02,21,1,0)
This field allows the user to select how many days an EFT (electronic funds
"^DD",342,342,7.02,21,2,0)
transfer) shall age before it is reported as unmatched.
"^DD",342,342,7.02,"DT")
3020117
"^DD",342,342,7.03,0)
NUMBER OF DAYS ERA UNMATCHED^NJ2,0^^7;3^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",342,342,7.03,3)
Type a Number between 0 and 99, 0 Decimal Digits
"^DD",342,342,7.03,21,0)
^.001^2^2^3021206^^
"^DD",342,342,7.03,21,1,0)
This field allows the user to select how many days an ERA (electronic
"^DD",342,342,7.03,21,2,0)
remittance advice) shall age before it is reported as unmatched.
"^DD",342,342,7.03,"DT")
3021206
"^DD",344,344,.16,0)
LOCKBOX ACH NUMBER^F^^0;16^K:$L(X)>9!($L(X)<1) X
"^DD",344,344,.16,3)
Answer must be 1-9 characters in length.
"^DD",344,344,.16,21,0)
^^2^2^3030313^
"^DD",344,344,.16,21,1,0)
Number assigned by banking institution to track their electronic deposit
"^DD",344,344,.16,21,2,0)
for the V.A.
"^DD",344,344,.16,"DT")
3030313
"^DD",344,344,.17,0)
EFT RECORD^R*P344.31'^RCY(344.31,^0;17^S DIC("S")="I $S('$O(^RCY(344,""AEFT"",+Y,0)):1,1:$O(^(0))=DA)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",344,344,.17,1,0)
^.1
"^DD",344,344,.17,1,1,0)
344^AEFT
"^DD",344,344,.17,1,1,1)
S ^RCY(344,"AEFT",$E(X,1,30),DA)=""
"^DD",344,344,.17,1,1,2)
K ^RCY(344,"AEFT",$E(X,1,30),DA)
"^DD",344,344,.17,1,1,3)
Do not delete
"^DD",344,344,.17,1,1,"DT")
3030228
"^DD",344,344,.17,3)
Enter the EFT from which this receipt detail record was generated
"^DD",344,344,.17,5,1,0)
344^.04^2
"^DD",344,344,.17,12)
An EFT record can only be associated with 1 EDI Lockbox type receipt.
"^DD",344,344,.17,12.1)
S DIC("S")="I $S('$O(^RCY(344,""AEFT"",+Y,0)):1,1:$O(^(0))=DA)"
"^DD",344,344,.17,21,0)
^^2^2^3030228^
"^DD",344,344,.17,21,1,0)
If this is the detail receipt for a payment made via an EFT, this is the
"^DD",344,344,.17,21,2,0)
pointer to the individual EFT that was received.
"^DD",344,344,.17,"DT")
3030428
"^DD",344,344,.18,0)
ERA REFERENCE^*P344.4'^RCY(344.4,^0;18^S DIC("S")="N Z S Z=$O(^RCY(344.4,""ARCT"",+DA,0)) I 'Z!(Z=+Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",344,344,.18,3)
Enter the ERA record that will be used to populate this receipt detail.
"^DD",344,344,.18,12)
Only 1 receipt can be associated with an ERA record
"^DD",344,344,.18,12.1)
S DIC("S")="N Z S Z=$O(^RCY(344.4,""ARCT"",+DA,0)) I 'Z!(Z=+Y)"
"^DD",344,344,.18,21,0)
^.001^2^2^3030314^^
"^DD",344,344,.18,21,1,0)
This is the pointer to the ERA record that will be associated with this
"^DD",344,344,.18,21,2,0)
receipt.
"^DD",344,344,.18,"DT")
3030314
"^DD",344,344,1,0)
TRANSACTION^344.01AI^^1;0
"^DD",344,344,1,21,0)
^.001^1^1^3031006^^^^
"^DD",344,344,1,21,1,0)
This multiple contains all the payment transactions within a receipt.
"^DD",344,344,1,"DT")
2920619
"^DD",344,344.01,0)
TRANSACTION SUB-FIELD^^.13^23
"^DD",344,344.01,0,"NM","TRANSACTION")

"^DD",344,344.01,.01,0)
TRANSACTION^MRNJ5,0X^^0;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",344,344.01,.01,1,0)
^.1
"^DD",344,344.01,.01,1,1,0)
344.01^B
"^DD",344,344.01,.01,1,1,1)
S ^RCY(344,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",344,344.01,.01,1,1,2)
K ^RCY(344,DA(1),1,"B",$E(X,1,30),DA)
"^DD",344,344.01,.01,1,1,"%D",0)
^^1^1^2931014^^
"^DD",344,344.01,.01,1,1,"%D",1,0)
This x-ref is used for look-up and sorting by FileMan.
"^DD",344,344.01,.01,1,2,0)
344^AN01^MUMPS
"^DD",344,344.01,.01,1,2,1)
I '$P($G(^RCY(344,DA(1),1,DA,0)),"^",3),$$EDILB^RCDPEU(DA(1))'=1 S ^RCY(344,"AN",DA(1),DA)=""
"^DD",344,344.01,.01,1,2,2)
K ^RCY(344,"AN",DA(1),DA)
"^DD",344,344.01,.01,1,2,"%D",0)
^^7^7^3030313^
"^DD",344,344.01,.01,1,2,"%D",1,0)
This cross reference is used to build the list of payments that are
"^DD",344,344.01,.01,1,2,"%D",2,0)
unlinked.  An unlinked payment does not have an entry in field .03.
"^DD",344,344.01,.01,1,2,"%D",3,0)
The cross reference for field .03 will remove the cross reference
"^DD",344,344.01,.01,1,2,"%D",4,0)
when the field is populated.  EDI Lockbox deposit receipts will
"^DD",344,344.01,.01,1,2,"%D",5,0)
not have an entry in the .03 field, but are excluded from this xref
"^DD",344,344.01,.01,1,2,"%D",6,0)
since the funds are not deposited into suspense but are instead
"^DD",344,344.01,.01,1,2,"%D",7,0)
placed in FUND 5287/revenue source code 8NZZ.
"^DD",344,344.01,.01,1,2,"DT")
3030313
"^DD",344,344.01,.01,3)
Type a Number between 1 and 99999, 0 Decimal Digits
"^DD",344,344.01,.01,21,0)
^^2^2^2990507^^^^
"^DD",344,344.01,.01,21,1,0)
This DINUM field is the entry number for each transaction within a receipt.
"^DD",344,344.01,.01,21,2,0)
This field is sequentially assigned by the computer.
"^DD",344,344.01,.01,"DT")
3030313
"^DD",344,344.01,.01,"V",0)
^.12P^2^2
"^DD",344,344.01,.01,"V",1,0)
430^BILL NUMBER^1^B^n^n
"^DD",344,344.01,.01,"V",2,0)
2^NAME^2^P^n^n
"^DD",344,344.01,.27,0)
ERA WORKLIST SEQUENCE^NJ5,0^^0;27^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",344,344.01,.27,3)
Type a Number between 1 and 99999, 0 Decimal Digits
"^DD",344,344.01,.27,21,0)
^.001^2^2^3030729^^^
"^DD",344,344.01,.27,21,1,0)
This is the ien of the entry in file 344.491 that was used to create this
"^DD",344,344.01,.27,21,2,0)
line in the receipt.
"^DD",344,344.01,.27,"DT")
3030729
"^DD",344,344.01,.28,0)
AUTO DECREASE ADJUSTMENT^S^0:NO;1:YES;^0;28^Q
"^DD",344,344.01,.28,3)
Enter 1 if there is a decrease adjustment from EOB Worklist for this payment.
"^DD",344,344.01,.28,21,0)
^^2^2^3030509^
"^DD",344,344.01,.28,21,1,0)
This is the flag that indicates the EOB Worklist has a pending decrease
"^DD",344,344.01,.28,21,2,0)
adjustment for this payment.
"^DD",344,344.01,.28,"DT")
3030509
"^DD",344.3,344.3,0)
FIELD^^2^14
"^DD",344.3,344.3,0,"DDA")
N
"^DD",344.3,344.3,0,"DT")
3030319
"^DD",344.3,344.3,0,"ID",.06)
W "   ",$P(^(0),U,6)
"^DD",344.3,344.3,0,"ID",.07)
W "   ",$$FMTE^DILIBF($P(^(0),U,7),6)
"^DD",344.3,344.3,0,"IX","AD",344.3,.06)

"^DD",344.3,344.3,0,"IX","ALOCK",344.3,.01)

"^DD",344.3,344.3,0,"IX","ARDEP",344.3,.03)

"^DD",344.3,344.3,0,"IX","ARECDT",344.3,.13)

"^DD",344.3,344.3,0,"IX","B",344.3,.01)

"^DD",344.3,344.3,0,"IX","C",344.3,.06)

"^DD",344.3,344.3,0,"NM","EDI LOCKBOX DEPOSIT")

"^DD",344.3,344.3,0,"PT",344.31,.01)

"^DD",344.3,344.3,0,"VRPK")
PRCA
"^DD",344.3,344.3,.01,0)
NUMBER^RNJ10,0^^0;1^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",344.3,344.3,.01,1,0)
^.1
"^DD",344.3,344.3,.01,1,1,0)
344.3^B
"^DD",344.3,344.3,.01,1,1,1)
S ^RCY(344.3,"B",$E(X,1,30),DA)=""
"^DD",344.3,344.3,.01,1,1,2)
K ^RCY(344.3,"B",$E(X,1,30),DA)
"^DD",344.3,344.3,.01,1,2,0)
344.3^ALOCK^MUMPS
"^DD",344.3,344.3,.01,1,2,1)
I '$D(^RCY(344.3,"ALOCK")) S ^RCY(344.3,"ALOCK")=""
"^DD",344.3,344.3,.01,1,2,2)
Q
"^DD",344.3,344.3,.01,1,2,3)
Do not delete
"^DD",344.3,344.3,.01,1,2,"%D",0)
^^3^3^3021106^
"^DD",344.3,344.3,.01,1,2,"%D",1,0)
This xref is set to allow a lock to be placed on the file so only one job
"^DD",344.3,344.3,.01,1,2,"%D",2,0)
that tries to match EFTs to ERAs is run at a time.
"^DD",344.3,344.3,.01,1,2,"%D",3,0)
This xref is set the first time an entry is added to the file.
"^DD",344.3,344.3,.01,1,2,"DT")
3021106
"^DD",344.3,344.3,.01,3)
Type a Number between 1 and 9999999999, 0 Decimal Digits
"^DD",344.3,344.3,.01,21,0)
^.001^3^3^3021206^^^^
"^DD",344.3,344.3,.01,21,1,0)
This field contains a sequential number generated at the time a record
"^DD",344.3,344.3,.01,21,2,0)
is stored in the file.  It only serves to create an entry in the file
"^DD",344.3,344.3,.01,21,3,0)
and has no other special meaning.
"^DD",344.3,344.3,.01,"DT")
3021106
"^DD",344.3,344.3,.02,0)
FILE DATE/TIME^D^^0;2^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",344.3,344.3,.02,3)
Enter the date/time this record was reported filed by the EFT transaction.
"^DD",344.3,344.3,.02,21,0)
^.001^1^1^3030127^^^^
"^DD",344.3,344.3,.02,21,1,0)
This field is used to store the file date/time for payments.
"^DD",344.3,344.3,.02,"DT")
3020606
"^DD",344.3,344.3,.03,0)
AR DEPOSIT RECORD^*P344.1'^RCY(344.1,^0;3^S DIC("S")="I $E($P(^(0),U),1,3)=""469""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",344.3,344.3,.03,1,0)
^.1
"^DD",344.3,344.3,.03,1,1,0)
344.3^ARDEP
"^DD",344.3,344.3,.03,1,1,1)
S ^RCY(344.3,"ARDEP",$E(X,1,30),DA)=""
"^DD",344.3,344.3,.03,1,1,2)
K ^RCY(344.3,"ARDEP",$E(X,1,30),DA)
"^DD",344.3,344.3,.03,1,1,3)
Do not delete
"^DD",344.3,344.3,.03,1,1,"DT")
3030123
"^DD",344.3,344.3,.03,3)
Enter the AR Deposit ticket # that was created by this EFT.
"^DD",344.3,344.3,.03,12)
Deposit number must begin with 469
"^DD",344.3,344.3,.03,12.1)
S DIC("S")="I $E($P(^(0),U),1,3)=""469"""
"^DD",344.3,344.3,.03,21,0)
^^2^2^3020930^
"^DD",344.3,344.3,.03,21,1,0)
This is the reference to the deposit ticket in AR that was created by
"^DD",344.3,344.3,.03,21,2,0)
this EFT.
"^DD",344.3,344.3,.03,"DT")
3030123
"^DD",344.3,344.3,.05,0)
MAIL MESSAGE^NJ15,0^^0;5^K:+X'=X!(X>999999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",344.3,344.3,.05,3)
Type a Number between 0 and 999999999999999, 0 Decimal Digits
"^DD",344.3,344.3,.05,21,0)
^^1^1^3030127^
"^DD",344.3,344.3,.05,21,1,0)
This is the number of the mail message in which this EFT was received.
"^DD",344.3,344.3,.05,"DT")
3030127
"^DD",344.3,344.3,.06,0)
DEPOSIT NUMBER^F^^0;6^K:$L(X)>10!($L(X)<1) X
"^DD",344.3,344.3,.06,1,0)
^.1
"^DD",344.3,344.3,.06,1,1,0)
344.3^C
"^DD",344.3,344.3,.06,1,1,1)
S ^RCY(344.3,"C",$E(X,1,30),DA)=""
"^DD",344.3,344.3,.06,1,1,2)
K ^RCY(344.3,"C",$E(X,1,30),DA)
"^DD",344.3,344.3,.06,1,1,3)
Do not delete
"^DD",344.3,344.3,.06,1,1,"DT")
3030127
"^DD",344.3,344.3,.06,1,2,0)
344.3^AD^MUMPS
"^DD",344.3,344.3,.06,1,2,1)
N Z,Z0 S Z=0 F  S Z=$O(^RCY(344.3,DA,1,Z)) Q:'Z  S Z0=$P($G(^(Z,0)),U,3) I Z0'="" S ^RCY(344.3,"AD",$E(X,1,30),$E(Z0,1,30),DA,Z)=""
"^DD",344.3,344.3,.06,1,2,2)
N Z,Z0 S Z=0 F  S Z=$O(RCY(344.3,DA,1,Z)) Q:'Z  S Z0=$P($G(^(Z,0)),U,3) I Z0'="" K ^RCY(344.3,"AD",$E(X,1,30),$E(Z0,1,30),DA,Z)
"^DD",344.3,344.3,.06,1,2,3)
Do not delete
"^DD",344.3,344.3,.06,1,2,"%D",0)
^.101^1^1^3030127^^
"^DD",344.3,344.3,.06,1,2,"%D",1,0)
Xref by deposit number at the top level and payer ID at the 344.31 level
"^DD",344.3,344.3,.06,1,2,"DT")
3030127
"^DD",344.3,344.3,.06,3)
Answer must be 1-10 characters in length.
"^DD",344.3,344.3,.06,21,0)
^^1^1^3020406^
"^DD",344.3,344.3,.06,21,1,0)
This is the deposit number assigned by the banking institution for this payment.
"^DD",344.3,344.3,.06,"DT")
3030319
"^DD",344.3,344.3,.07,0)
DEPOSIT DATE^D^^0;7^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",344.3,344.3,.07,21,0)
^^1^1^3020406^
"^DD",344.3,344.3,.07,21,1,0)
This is the deposit date assigned by the banking institution for this payment.
"^DD",344.3,344.3,.07,"DT")
3020606
"^DD",344.3,344.3,.08,0)
TOTAL DEPOSIT AMOUNT^NJ18,2^^0;8^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999999999999)!(X<0) X
"^DD",344.3,344.3,.08,3)
Type a Dollar Amount between 0 and 999999999999999, 2 Decimal Digits
"^DD",344.3,344.3,.08,21,0)
^.001^1^1^3021001^^
"^DD",344.3,344.3,.08,21,1,0)
This is the amount of the deposit into the banking institution.
"^DD",344.3,344.3,.08,"DT")
3021104
"^DD",344.3,344.3,.09,0)
EFT CHECKSUM^NJ5,0^^0;9^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",344.3,344.3,.09,3)
Type a Number between 0 and 99999, 0 Decimal Digits
"^DD",344.3,344.3,.09,21,0)
^^3^3^3030127^
"^DD",344.3,344.3,.09,21,1,0)
This is the value of the checksum for the detail records in this record.
"^DD",344.3,344.3,.09,21,2,0)
It is used to ensure the records are not changed after the data has been
"^DD",344.3,344.3,.09,21,3,0)
stored and before it has been recorded in AR.
"^DD",344.3,344.3,.09,"DT")
3030127
"^DD",344.3,344.3,.1,0)
CHECKSUM ERROR^S^0:NO ERROR;1:CHECKSUM ERROR EXISTS;^0;10^Q
"^DD",344.3,344.3,.1,3)
Enter a 1 if a checksum error exists.
"^DD",344.3,344.3,.1,21,0)
^^2^2^3030127^
"^DD",344.3,344.3,.1,21,1,0)
This is the indicator that says the checksum stored does not match the
"^DD",344.3,344.3,.1,21,2,0)
calculated checksum for this record.
"^DD",344.3,344.3,.1,"DT")
3030127
"^DD",344.3,344.3,.11,0)
DATE POSTED^D^^0;11^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",344.3,344.3,.11,3)
Enter the date the funds for this EFT were posted.
"^DD",344.3,344.3,.11,21,0)
^^1^1^3030127^
"^DD",344.3,344.3,.11,21,1,0)
This is the date the funds for this EFT were posted.
"^DD",344.3,344.3,.11,"DT")
3030127
"^DD",344.3,344.3,.12,0)
AMOUNT POSTED TO DEPOSIT^NJ15,2^^0;12^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999999999)!(X<0) X
"^DD",344.3,344.3,.12,1,0)
^.1^^0
"^DD",344.3,344.3,.12,3)
Type a Dollar Amount between 0 and 999999999999, 2 Decimal Digits
"^DD",344.3,344.3,.12,21,0)
^.001^2^2^3030128^^
"^DD",344.3,344.3,.12,21,1,0)
This is the amount of money that was posted as a deposit as a result
"^DD",344.3,344.3,.12,21,2,0)
of this EFT.
"^DD",344.3,344.3,.12,"DT")
3030128
"^DD",344.3,344.3,.13,0)
DATE/TIME ADDED^D^^0;13^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",344.3,344.3,.13,1,0)
^.1
"^DD",344.3,344.3,.13,1,1,0)
344.3^ARECDT
"^DD",344.3,344.3,.13,1,1,1)
S ^RCY(344.3,"ARECDT",$E(X,1,30),DA)=""
"^DD",344.3,344.3,.13,1,1,2)
K ^RCY(344.3,"ARECDT",$E(X,1,30),DA)
"^DD",344.3,344.3,.13,1,1,3)
Do not delete
"^DD",344.3,344.3,.13,1,1,"DT")
3030129
"^DD",344.3,344.3,.13,3)
Enter the date and time this record was stored in VistA
"^DD",344.3,344.3,.13,21,0)
^^1^1^3030127^
"^DD",344.3,344.3,.13,21,1,0)
This is the date and time this record was last stored in VistA.
"^DD",344.3,344.3,.13,"DT")
3030129
"^DD",344.3,344.3,.14,0)
TOTAL AMOUNT MATCHED^NJ15,2^^0;14^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999999999)!(X<0) X
"^DD",344.3,344.3,.14,3)
Type a Dollar Amount between 0 and 999999999999, 2 Decimal Digits
"^DD",344.3,344.3,.14,5,1,0)
344.31^.08^2
"^DD",344.3,344.3,.14,21,0)
^^2^2^3030128^
"^DD",344.3,344.3,.14,21,1,0)
This is the total amount of dollars that have been matched from the EFT
"^DD",344.3,344.3,.14,21,2,0)
detail to ERAs or paper EOBs.
"^DD",344.3,344.3,.14,"DT")
3030128
"^DD",344.3,344.3,2,0)
ERROR MESSAGES^344.32^^2;0
"^DD",344.3,344.3,2,21,0)
^^2^2^3021001^
"^DD",344.3,344.3,2,21,1,0)
This field stores any error messages that report problems with the 
"^DD",344.3,344.3,2,21,2,0)
incoming transmission.
"^DD",344.3,344.32,0)
ERROR MESSAGES SUB-FIELD^^.01^1
"^DD",344.3,344.32,0,"DT")
3020423
"^DD",344.3,344.32,0,"NM","ERROR MESSAGES")

"^DD",344.3,344.32,0,"UP")
344.3
"^DD",344.3,344.32,.01,0)
ERROR MESSAGES^WL^^0;1^Q
"^DD",344.3,344.32,.01,3)
Enter the error messages that report problems with the transaction.
"^DD",344.3,344.32,.01,21,0)
^.001^2^2^3021001^^^
"^DD",344.3,344.32,.01,21,1,0)
This word processing field stores any error messages that report problems
"^DD",344.3,344.32,.01,21,2,0)
with the incoming transmission.
"^DD",344.3,344.32,.01,"DT")
3020423
"^DD",344.31,344.31,0)
FIELD^^2^16
"^DD",344.31,344.31,0,"DT")
3030512
"^DD",344.31,344.31,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",344.31,344.31,0,"ID",.04)
W "   ",$P(^(0),U,4)
"^DD",344.31,344.31,0,"ID",.07)
W "   ",$P(^(0),U,7)
"^DD",344.31,344.31,0,"IX","AERA",344.31,.1)

"^DD",344.31,344.31,0,"IX","AMATCH",344.31,.08)

"^DD",344.31,344.31,0,"IX","B",344.31,.01)

"^DD",344.31,344.31,0,"IX","C",344.31,.02)

"^DD",344.31,344.31,0,"IX","D",344.31,.04)

"^DD",344.31,344.31,0,"NM","EDI THIRD PARTY EFT DETAIL")

"^DD",344.31,344.31,0,"PT",344,.17)

"^DD",344.31,344.31,0,"VRPK")
PRCA
"^DD",344.31,344.31,.01,0)
EFT TRANSACTION^RP344.3'^RCY(344.3,^0;1^Q
"^DD",344.31,344.31,.01,1,0)
^.1
"^DD",344.31,344.31,.01,1,1,0)
344.31^B
"^DD",344.31,344.31,.01,1,1,1)
S ^RCY(344.31,"B",$E(X,1,30),DA)=""
"^DD",344.31,344.31,.01,1,1,2)
K ^RCY(344.31,"B",$E(X,1,30),DA)
"^DD",344.31,344.31,.01,3)
Enter the reference to the eFT transaction that contains this EFT record.
"^DD",344.31,344.31,.01,21,0)
^^1^1^3030128^
"^DD",344.31,344.31,.01,21,1,0)
This is the pointer to the EFT totals record that this EFT was received in.
"^DD",344.31,344.31,.01,"DT")
3030128
"^DD",344.31,344.31,.02,0)
PAYER NAME^F^^0;2^K:$L(X)>35!($L(X)<1) X
"^DD",344.31,344.31,.02,1,0)
^.1
"^DD",344.31,344.31,.02,1,1,0)
344.31^C
"^DD",344.31,344.31,.02,1,1,1)
S ^RCY(344.31,"C",$E(X,1,30),DA)=""
"^DD",344.31,344.31,.02,1,1,2)
K ^RCY(344.31,"C",$E(X,1,30),DA)
"^DD",344.31,344.31,.02,1,1,3)
Do not delete
"^DD",344.31,344.31,.02,1,1,"DT")
3030129
"^DD",344.31,344.31,.02,3)
Answer must be 1-35 characters in length.
"^DD",344.31,344.31,.02,21,0)
^^1^1^3030128^
"^DD",344.31,344.31,.02,21,1,0)
This is the insurance co name as reported for the payment on the EFT.
"^DD",344.31,344.31,.02,"DT")
3030129
"^DD",344.31,344.31,.03,0)
PAYER ID^F^^0;3^K:$L(X)>20!($L(X)<1) X
"^DD",344.31,344.31,.03,3)
Answer must be 1-20 characters in length.
"^DD",344.31,344.31,.03,21,0)
^^1^1^3030128^
"^DD",344.31,344.31,.03,21,1,0)
This is the payer id as reported for the payment on the EFT.
"^DD",344.31,344.31,.03,"DT")
3030128
"^DD",344.31,344.31,.04,0)
TRACE #^F^^0;4^K:$L(X)>30!($L(X)<3) X
"^DD",344.31,344.31,.04,1,0)
^.1
"^DD",344.31,344.31,.04,1,1,0)
344.31^D
"^DD",344.31,344.31,.04,1,1,1)
S ^RCY(344.31,"D",$E(X,1,30),DA)=""
"^DD",344.31,344.31,.04,1,1,2)
K ^RCY(344.31,"D",$E(X,1,30),DA)
"^DD",344.31,344.31,.04,1,1,3)
do not delete
"^DD",344.31,344.31,.04,1,1,"DT")
3030129
"^DD",344.31,344.31,.04,3)
Answer must be 3-30 characters in length.
"^DD",344.31,344.31,.04,21,0)
^^2^2^3030128^
"^DD",344.31,344.31,.04,21,1,0)
This is the bank trace number assigned to the electronic funds transfer
"^DD",344.31,344.31,.04,21,2,0)
(EFT) by the payer's bank.
"^DD",344.31,344.31,.04,"DT")
3030129
"^DD",344.31,344.31,.05,0)
PROVIDER TAX ID SENT^F^^0;5^K:$L(X)>15!($L(X)<1) X
"^DD",344.31,344.31,.05,3)
Answer must be 1-15 characters in length.
"^DD",344.31,344.31,.05,21,0)
^^4^4^3030128^
"^DD",344.31,344.31,.05,21,1,0)
This is the tax ID of the Medical Center.  The EFT's are routed to the
"^DD",344.31,344.31,.05,21,2,0)
correct site based on this tax ID.  If the 'TAX ID CORRECTED' is 'Y',
"^DD",344.31,344.31,.05,21,3,0)
this field will contain the incorrect tax ID as received by the FSC in
"^DD",344.31,344.31,.05,21,4,0)
Austin.
"^DD",344.31,344.31,.05,"DT")
3030128
"^DD",344.31,344.31,.06,0)
TAX ID CORRECTION^S^0:NO CHANGE;E:CHANGE BY EPHRA;C:CHANGE BY CLAIM DATA;^0;6^Q
"^DD",344.31,344.31,.06,3)
If the tax id was corrected, enter the entity who corrected it.
"^DD",344.31,344.31,.06,21,0)
^^1^1^3030128^
"^DD",344.31,344.31,.06,21,1,0)
This field indicates if the tax id was corrected and if so, who did it.
"^DD",344.31,344.31,.06,"DT")
3030128
"^DD",344.31,344.31,.07,0)
AMOUNT OF PAYMENT^NJ18,2^^0;7^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999999999999)!(X<0) X
"^DD",344.31,344.31,.07,3)
Type a Dollar Amount between 0 and 999999999999999, 2 Decimal Digits
"^DD",344.31,344.31,.07,21,0)
^^2^2^3030128^
"^DD",344.31,344.31,.07,21,1,0)
This is the amount of the deposit made by the payer into the banking
"^DD",344.31,344.31,.07,21,2,0)
institution.
"^DD",344.31,344.31,.07,"DT")
3030128
"^DD",344.31,344.31,.08,0)
MATCH STATUS^S^-1:MATCHED WITH ERRORS;0:UNMATCHED;1:MATCHED;2:PAPER EOB MATCH;^0;8^Q
"^DD",344.31,344.31,.08,1,0)
^.1
"^DD",344.31,344.31,.08,1,1,0)
344.31^AMATCH
"^DD",344.31,344.31,.08,1,1,1)
S ^RCY(344.31,"AMATCH",$E(X,1,30),DA)=""
"^DD",344.31,344.31,.08,1,1,2)
K ^RCY(344.31,"AMATCH",$E(X,1,30),DA)
"^DD",344.31,344.31,.08,1,1,3)
Do not delete
"^DD",344.31,344.31,.08,1,1,"DT")
3030128
"^DD",344.31,344.31,.08,1,2,0)
^^TRIGGER^344.3^.14
"^DD",344.31,344.31,.08,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X I X S X=DIV X ^DD(344.31,.08,1,2,89.2) S X=$P(Y(101),U,14) S D0=I(0,0) S DIU=X K Y X ^DD(344.31,.08,1,2,1.1) X ^DD(344.31,.08,1,2,1.4)
"^DD",344.31,344.31,.08,1,2,1.1)
S X=DIV S Y(1)=$S($D(^RCY(344.31,D0,0)):^(0),1:"") S X=DIU+$P(Y(1),U,7)
"^DD",344.31,344.31,.08,1,2,1.4)
S DIH=$G(^RCY(344.3,DIV(0),0)),DIV=X I $D(^(0)) S $P(^(0),U,14)=DIV,DIH=344.3,DIG=.14 D ^DICR
"^DD",344.31,344.31,.08,1,2,2)
X ^DD(344.31,.08,1,2,2.3) I X S X=DIV X ^DD(344.31,.08,1,2,89.2) S X=$P(Y(101),U,14) S D0=I(0,0) S DIU=X K Y X ^DD(344.31,.08,1,2,2.1) X ^DD(344.31,.08,1,2,2.4)
"^DD",344.31,344.31,.08,1,2,2.1)
S X=DIV S Y(1)=$S($D(^RCY(344.31,D0,0)):^(0),1:"") S X=DIU-$P(Y(1),U,7)
"^DD",344.31,344.31,.08,1,2,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(344.31,.08,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59))'["UNMATCH"
"^DD",344.31,344.31,.08,1,2,2.4)
S DIH=$G(^RCY(344.3,DIV(0),0)),DIV=X I $D(^(0)) S $P(^(0),U,14)=DIV,DIH=344.3,DIG=.14 D ^DICR
"^DD",344.31,344.31,.08,1,2,89.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^RCY(344.31,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'D0!'$D(^RCY(344.3,+D0,0)) D0=-1 S DIV(0)=D0 S Y(101)=$S($D(^RCY(344.3,D0,0)):^(0),1:"")
"^DD",344.31,344.31,.08,1,2,"CREATE CONDITION")
INTERNAL(MATCH STATUS)
"^DD",344.31,344.31,.08,1,2,"CREATE VALUE")
TOTAL AMOUNT MATCHED+AMOUNT OF PAYMENT
"^DD",344.31,344.31,.08,1,2,"DELETE CONDITION")
OLD MATCH STATUS'["UNMATCH"
"^DD",344.31,344.31,.08,1,2,"DELETE VALUE")
TOTAL AMOUNT MATCHED-AMOUNT OF PAYMENT
"^DD",344.31,344.31,.08,1,2,"DT")
3030129
"^DD",344.31,344.31,.08,1,2,"FIELD")
#.01:TOTAL AMOUNT MATCHED
"^DD",344.31,344.31,.08,3)
Enter the status to indicate if the payment has been matched to an ERA.
"^DD",344.31,344.31,.08,21,0)
^^4^4^3030128^
"^DD",344.31,344.31,.08,21,1,0)
This is the status that indicates whether or not the EFT payment has been
"^DD",344.31,344.31,.08,21,2,0)
matched to an ERA record.  If the total amt of the EFT payment does not =
"^DD",344.31,344.31,.08,21,3,0)
the total amount of the ERA payment, the status will be -1 (MATCHED WITH
"^DD",344.31,344.31,.08,21,4,0)
ERRORS).
"^DD",344.31,344.31,.08,"DT")
3030129
"^DD",344.31,344.31,.09,0)
RECEIPT #^P344'^RCY(344,^0;9^Q
"^DD",344.31,344.31,.09,3)
Enter the receipt that was created for this EFT detail record.
"^DD",344.31,344.31,.09,21,0)
^.001^1^1^3030129^^^
"^DD",344.31,344.31,.09,21,1,0)
This is the receipt that was created for this EFT record.
"^DD",344.31,344.31,.09,"DT")
3030128
"^DD",344.31,344.31,.1,0)
ERA RECORD^P344.4'^RCY(344.4,^0;10^Q
"^DD",344.31,344.31,.1,1,0)
^.1
"^DD",344.31,344.31,.1,1,1,0)
344.31^AERA
"^DD",344.31,344.31,.1,1,1,1)
S ^RCY(344.31,"AERA",$E(X,1,30),DA)=""
"^DD",344.31,344.31,.1,1,1,2)
K ^RCY(344.31,"AERA",$E(X,1,30),DA)
"^DD",344.31,344.31,.1,1,1,3)
Do not delete
"^DD",344.31,344.31,.1,1,1,"DT")
3030128
"^DD",344.31,344.31,.1,3)
Enter the id of the ERA record for this EFT.
"^DD",344.31,344.31,.1,21,0)
^^1^1^3030128^
"^DD",344.31,344.31,.1,21,1,0)
This is the ERA record that contains the detail for this EFT.
"^DD",344.31,344.31,.1,"DT")
3030128
"^DD",344.31,344.31,.11,0)
EFT RECORDED AT SITE^S^0:NO;1:YES;^0;11^Q
"^DD",344.31,344.31,.11,3)
Enter a 1 if the EFT deposit this EFT was received in has been
"^DD",344.31,344.31,.11,21,0)
^^3^3^3030128^
"^DD",344.31,344.31,.11,21,1,0)
This is a flag that indicates the EFT deposit this EFT was received in
"^DD",344.31,344.31,.11,21,2,0)
has been recorded to the FMS system.  This locks the record and it cannot
"^DD",344.31,344.31,.11,21,3,0)
be overwritten by another transmission of the same EFT deposit.
"^DD",344.31,344.31,.11,"DT")
3030128
"^DD",344.31,344.31,.12,0)
DATE CLAIMS PAID^D^^0;12^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",344.31,344.31,.12,3)
Enter the date the payer reported the claims were paid.
"^DD",344.31,344.31,.12,21,0)
^^1^1^3030128^
"^DD",344.31,344.31,.12,21,1,0)
This is the date the payer reported the claims were paid.
"^DD",344.31,344.31,.12,"DT")
3030128
"^DD",344.31,344.31,.13,0)
DATE RECEIVED^D^^0;13^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",344.31,344.31,.13,3)
Enter the date this record was added to the system.
"^DD",344.31,344.31,.13,21,0)
^.001^1^1^3030128^^
"^DD",344.31,344.31,.13,21,1,0)
This is the date this record was added to the system.
"^DD",344.31,344.31,.13,"DT")
3030129
"^DD",344.31,344.31,.14,0)
TRANSACTION #^NJ3,0^^0;14^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",344.31,344.31,.14,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",344.31,344.31,.14,21,0)
^^1^1^3030313^
"^DD",344.31,344.31,.14,21,1,0)
This is the transaction # within the receipt for this EFT.
"^DD",344.31,344.31,.14,"DT")
3030313
"^DD",344.31,344.31,.15,0)
ACH TRACE #^F^^0;15^K:$L(X)>30!($L(X)<1) X
"^DD",344.31,344.31,.15,3)
Answer must be 1-30 characters in length.
"^DD",344.31,344.31,.15,21,0)
^^2^2^3030512^
"^DD",344.31,344.31,.15,21,1,0)
This is the ACH trace # assigned by the Lockbox banking institution to
"^DD",344.31,344.31,.15,21,2,0)
this EFT detail record.
"^DD",344.31,344.31,.15,"DT")
3030512
"^DD",344.31,344.31,2,0)
ERROR MESSAGES^344.312^^2;0
"^DD",344.31,344.31,2,21,0)
^^1^1^3030128^
"^DD",344.31,344.31,2,21,1,0)
This is the record of error messages for the EFT record.
"^DD",344.31,344.312,0)
ERROR MESSAGES SUB-FIELD^^.01^1
"^DD",344.31,344.312,0,"DT")
3030128
"^DD",344.31,344.312,0,"NM","ERROR MESSAGES")

"^DD",344.31,344.312,0,"UP")
344.31
"^DD",344.31,344.312,.01,0)
ERROR MESSAGES^WL^^0;1^Q
"^DD",344.31,344.312,.01,3)
Enter the text of the error
"^DD",344.31,344.312,.01,21,0)
^.001^1^1^3030128^^
"^DD",344.31,344.312,.01,21,1,0)
This is the record of error messages encountered for this EFT record.
"^DD",344.31,344.312,.01,"DT")
3030128
"^DD",344.4,344.4,0)
FIELD^^20.03^27
"^DD",344.4,344.4,0,"DDA")
N
"^DD",344.4,344.4,0,"DT")
3030916
"^DD",344.4,344.4,0,"ID",.02)
W $P(^(0),U,2)
"^DD",344.4,344.4,0,"ID",.04)
W $E($P(^(0),U,4),4,5)_"-"_$E($P(^(0),U,4),6,7)_"-"_$E($P(^(0),U,4),2,3)
"^DD",344.4,344.4,0,"ID",.05)
W $P(^(0),U,5)
"^DD",344.4,344.4,0,"ID",.06)
W $P(^(0),U,6)
"^DD",344.4,344.4,0,"ID",.09)
N Z S Z="S Z=$P($P($C(59)_$S($D(^DD(344.4,.09,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,9)_"":"",2),$C(59),1)" X Z W:Z'="" Z
"^DD",344.4,344.4,0,"ID",.14)
D:$P(^(0),U,14)=1 EN^DDIOL("POSTED",,"?$X")
"^DD",344.4,344.4,0,"IX","ADET",344.41,.02)

"^DD",344.4,344.4,0,"IX","AEXC",344.41,.07)

"^DD",344.4,344.4,0,"IX","AMATCH",344.4,.09)

"^DD",344.4,344.4,0,"IX","AREC",344.4,.08)

"^DD",344.4,344.4,0,"IX","ATOUT",344.41,.12)

"^DD",344.4,344.4,0,"IX","B",344.4,.01)

"^DD",344.4,344.4,0,"IX","C",344.4,.06)

"^DD",344.4,344.4,0,"IX","D",344.4,.02)

"^DD",344.4,344.4,0,"NM","ELECTRONIC REMITTANCE ADVICE")

"^DD",344.4,344.4,0,"PT",344,.18)

"^DD",344.4,344.4,0,"PT",344.31,.1)

"^DD",344.4,344.4,0,"PT",344.49,.01)

"^DD",344.4,344.4,0,"PT",344.5,.07)

"^DD",344.4,344.4,0,"VRPK")
PRCA
"^DD",344.4,344.4,.01,0)
ENTRY^RNJ10,0X^^0;1^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X I $D(X) S DINUM=X
"^DD",344.4,344.4,.01,1,0)
^.1
"^DD",344.4,344.4,.01,1,1,0)
344.4^B
"^DD",344.4,344.4,.01,1,1,1)
S ^RCY(344.4,"B",$E(X,1,30),DA)=""
"^DD",344.4,344.4,.01,1,1,2)
K ^RCY(344.4,"B",$E(X,1,30),DA)
"^DD",344.4,344.4,.01,1,2,0)
^^TRIGGER^344.4^.14
"^DD",344.4,344.4,.01,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^RCY(344.4,D0,0)):^(0),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X=DIV S X=0 S DIH=$G(^RCY(344.4,DIV(0),0)),DIV=X S $P(^(0),U,14)=DIV,DIH=344.4,DIG=.14 D ^DICR
"^DD",344.4,344.4,.01,1,2,2)
Q
"^DD",344.4,344.4,.01,1,2,3)
Do not delete
"^DD",344.4,344.4,.01,1,2,"CREATE VALUE")
S X=0
"^DD",344.4,344.4,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",344.4,344.4,.01,1,2,"DT")
3030314
"^DD",344.4,344.4,.01,1,2,"FIELD")
DETAIL POST STATUS
"^DD",344.4,344.4,.01,3)
Type a Number between 1 and 9999999999, 0 Decimal Digits
"^DD",344.4,344.4,.01,21,0)
^.001^3^3^3021001^^^^
"^DD",344.4,344.4,.01,21,1,0)
This field contains a sequential number generated at the time a record
"^DD",344.4,344.4,.01,21,2,0)
is stored in the file.  It only serves to create an entry in the file
"^DD",344.4,344.4,.01,21,3,0)
and has no other special meaning.
"^DD",344.4,344.4,.01,"DT")
3030314
"^DD",344.4,344.4,.02,0)
TRACE NUMBER^F^^0;2^K:$L(X)>30!($L(X)<3) X
"^DD",344.4,344.4,.02,1,0)
^.1
"^DD",344.4,344.4,.02,1,1,0)
344.4^D
"^DD",344.4,344.4,.02,1,1,1)
S ^RCY(344.4,"D",$E(X,1,30),DA)=""
"^DD",344.4,344.4,.02,1,1,2)
K ^RCY(344.4,"D",$E(X,1,30),DA)
"^DD",344.4,344.4,.02,1,1,3)
Do not delete
"^DD",344.4,344.4,.02,1,1,"DT")
3030611
"^DD",344.4,344.4,.02,3)
Answer must be 3-30 characters in length.
"^DD",344.4,344.4,.02,21,0)
^.001^2^2^3030612^^^^
"^DD",344.4,344.4,.02,21,1,0)
This is the bank trace number assigned to the ERA received.  If the ERA
"^DD",344.4,344.4,.02,21,2,0)
was paid by paper check, this should be the check #.
"^DD",344.4,344.4,.02,"DT")
3030611
"^DD",344.4,344.4,.03,0)
INSURANCE CO ID^RF^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",344.4,344.4,.03,3)
Answer must be 1-30 characters in length.
"^DD",344.4,344.4,.03,21,0)
^^3^3^3020523^
"^DD",344.4,344.4,.03,21,1,0)
This is the insurance co's electronic ID that will be recorded on each
"^DD",344.4,344.4,.03,21,2,0)
ERA received at the site.  This field, along
"^DD",344.4,344.4,.03,21,3,0)
with the trace number should always be unique in this file.
"^DD",344.4,344.4,.03,"DT")
3020524
"^DD",344.4,344.4,.04,0)
ERA DATE^D^^0;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",344.4,344.4,.04,3)
Enter the date from the ERA record
"^DD",344.4,344.4,.04,21,0)
^.001^1^1^3021206^^
"^DD",344.4,344.4,.04,21,1,0)
This is the date the ERA was generated by the payer.
"^DD",344.4,344.4,.04,"DT")
3021206
"^DD",344.4,344.4,.05,0)
TOTAL AMOUNT PAID^NJ15,2^^0;5^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999999999)!(X<0) X
"^DD",344.4,344.4,.05,3)
Type a Dollar Amount between 0 and 999999999999, 2 Decimal Digits
"^DD",344.4,344.4,.05,21,0)
^^2^2^3020524^
"^DD",344.4,344.4,.05,21,1,0)
This is the total amount of all the individual EOB records included in
"^DD",344.4,344.4,.05,21,2,0)
the ERA.
"^DD",344.4,344.4,.05,"DT")
3020924
"^DD",344.4,344.4,.06,0)
PAYMENT FROM^F^^0;6^K:$L(X)>35!($L(X)<1) X
"^DD",344.4,344.4,.06,1,0)
^.1
"^DD",344.4,344.4,.06,1,1,0)
344.4^C
"^DD",344.4,344.4,.06,1,1,1)
S ^RCY(344.4,"C",$E(X,1,30),DA)=""
"^DD",344.4,344.4,.06,1,1,2)
K ^RCY(344.4,"C",$E(X,1,30),DA)
"^DD",344.4,344.4,.06,1,1,3)
Do not delete
"^DD",344.4,344.4,.06,1,1,"DT")
3030312
"^DD",344.4,344.4,.06,3)
Answer must be 1-35 characters in length.
"^DD",344.4,344.4,.06,21,0)
^^1^1^3020613^
"^DD",344.4,344.4,.06,21,1,0)
This is the name of the insurance co as returned on the ERA.
"^DD",344.4,344.4,.06,"DT")
3030312
"^DD",344.4,344.4,.07,0)
FILE DATE/TIME^D^^0;7^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",344.4,344.4,.07,3)
Enter the date/time the ERA was filed in VistA.
"^DD",344.4,344.4,.07,21,0)
^^1^1^3020613^
"^DD",344.4,344.4,.07,21,1,0)
This is the date/time the ERA was filed in VistA.
"^DD",344.4,344.4,.07,"DT")
3020613
"^DD",344.4,344.4,.08,0)
RECEIPT^P344'^RCY(344,^0;8^Q
"^DD",344.4,344.4,.08,1,0)
^.1
"^DD",344.4,344.4,.08,1,1,0)
344.4^AREC
"^DD",344.4,344.4,.08,1,1,1)
S ^RCY(344.4,"AREC",$E(X,1,30),DA)=""
"^DD",344.4,344.4,.08,1,1,2)
K ^RCY(344.4,"AREC",$E(X,1,30),DA)
"^DD",344.4,344.4,.08,1,1,3)
Do not delete
"^DD",344.4,344.4,.08,1,1,"DT")
3030326
"^DD",344.4,344.4,.08,3)
Enter the receipt that this ERA detail is contained in.
"^DD",344.4,344.4,.08,21,0)
^^1^1^3020613^
"^DD",344.4,344.4,.08,21,1,0)
This is the receipt created to record the detail of the ERA for AR posting.
"^DD",344.4,344.4,.08,"DT")
3030326
"^DD",344.4,344.4,.09,0)
EFT MATCH STATUS^S^0:UNMATCHED;-1:MATCHED WITH ERRORS;1:MATCHED;2:MATCHED TO PAPER CHECK;3:MATCH-0 PAYMENT;^0;9^Q
"^DD",344.4,344.4,.09,1,0)
^.1
"^DD",344.4,344.4,.09,1,1,0)
344.4^AMATCH
"^DD",344.4,344.4,.09,1,1,1)
S ^RCY(344.4,"AMATCH",$E(X,1,30),DA)=""
"^DD",344.4,344.4,.09,1,1,2)
K ^RCY(344.4,"AMATCH",$E(X,1,30),DA)
"^DD",344.4,344.4,.09,1,1,3)
Do not delete
"^DD",344.4,344.4,.09,1,1,"%D",0)
^^1^1^3021022^
"^DD",344.4,344.4,.09,1,1,"%D",1,0)
This xref allows easy access to unmatched or mismatched ERA records.
"^DD",344.4,344.4,.09,1,1,"DT")
3021022
"^DD",344.4,344.4,.09,3)
Enter the status to indicate if the ERA has been matched
"^DD",344.4,344.4,.09,21,0)
^.001^6^6^3030912^^^^
"^DD",344.4,344.4,.09,21,1,0)
This is the status that indicates whether or not the ERA has been
"^DD",344.4,344.4,.09,21,2,0)
matched to an electronic EFT record.  If the total amt of the EFT payment
"^DD",344.4,344.4,.09,21,3,0)
does not equal the total amount of the ERA payment, the status will be
"^DD",344.4,344.4,.09,21,4,0)
-1 (MATCHED WITH ERRORS).  If the ERA has a 0-payment and no EFT or check,
"^DD",344.4,344.4,.09,21,5,0)
the status will be 3 (MATCH-0 PAYMENT) and if matched to a paper check,
"^DD",344.4,344.4,.09,21,6,0)
the status will be 2 (MATCHED TO PAPER CHECK).
"^DD",344.4,344.4,.09,"DT")
3030912
"^DD",344.4,344.4,.1,0)
ERA TYPE^S^0:MRA;1:ERA;^0;10^Q
"^DD",344.4,344.4,.1,3)
Enter a 0 if this is an ERA from MEDICARE (MRA)
"^DD",344.4,344.4,.1,21,0)
^.001^2^2^3021206^^
"^DD",344.4,344.4,.1,21,1,0)
This is the field that will designate whether the ERA is from an
"^DD",344.4,344.4,.1,21,2,0)
insurance company or from MEDICARE via the MRA requests.
"^DD",344.4,344.4,.1,"DT")
3021206
"^DD",344.4,344.4,.11,0)
INDIVIDUAL EOB COUNT^NJ3,0^^0;11^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",344.4,344.4,.11,3)
Type a Number between 0 and 999, 0 Decimal Digits
"^DD",344.4,344.4,.11,5,1,0)
344.41^.01^3
"^DD",344.4,344.4,.11,21,0)
^.001^1^1^3020917^^
"^DD",344.4,344.4,.11,21,1,0)
This field contains the total # of EOB detail records included in the ERA.
"^DD",344.4,344.4,.11,"DT")
3020917
"^DD",344.4,344.4,.12,0)
MAIL MESSAGE^F^^0;12^K:$L(X)>60!($L(X)<1) X
"^DD",344.4,344.4,.12,3)
Answer must be 1-60 characters in length.
"^DD",344.4,344.4,.12,21,0)
^.001^2^2^3030114^^^^
"^DD",344.4,344.4,.12,21,1,0)
This is the list of message #s where the original ERA was received,
"^DD",344.4,344.4,.12,21,2,0)
separated by commas.
"^DD",344.4,344.4,.12,"DT")
3030114
"^DD",344.4,344.4,.13,0)
CHECK #^F^^0;13^K:$L(X)>15!($L(X)<1) X
"^DD",344.4,344.4,.13,3)
Answer must be 1-15 characters in length.
"^DD",344.4,344.4,.13,21,0)
^^2^2^3030226^
"^DD",344.4,344.4,.13,21,1,0)
This is the # of the paper check that was received for payment of this 
"^DD",344.4,344.4,.13,21,2,0)
ERA.
"^DD",344.4,344.4,.13,"DT")
3030226
"^DD",344.4,344.4,.14,0)
DETAIL POST STATUS^S^0:NOT POSTED;1:POSTED;2:MANUALLY POSTED;3:POSTING NOT NEEDED;^0;14^Q
"^DD",344.4,344.4,.14,3)
Enter the code that corresponds to whether or not the ERA detail was posted and if so, if it was manually posted.
"^DD",344.4,344.4,.14,5,1,0)
344.4^.01^2
"^DD",344.4,344.4,.14,21,0)
^.001^3^3^3030916^^
"^DD",344.4,344.4,.14,21,1,0)
This is a flag that indicates whether or not the receipt for the ERA has 
"^DD",344.4,344.4,.14,21,2,0)
been posted.  It is used to limit the choices when selecting ERAs for the 
"^DD",344.4,344.4,.14,21,3,0)
worklist function.
"^DD",344.4,344.4,.14,"DT")
3030916
"^DD",344.4,344.4,.15,0)
EXPECTED PAYMENT METHOD CODE^F^^0;15^K:$L(X)>3!($L(X)<1) X
"^DD",344.4,344.4,.15,3)
Answer must be 1-3 characters in length.
"^DD",344.4,344.4,.15,21,0)
^^2^2^3030912^
"^DD",344.4,344.4,.15,21,1,0)
This is the code that indicates the method of payemnt that can be expected
"^DD",344.4,344.4,.15,21,2,0)
as a result of this ERA.
"^DD",344.4,344.4,.15,"DT")
3030912
"^DD",344.4,344.4,1,0)
ERA DETAIL^344.41A^^1;0
"^DD",344.4,344.4,1,21,0)
^^2^2^3021206^
"^DD",344.4,344.4,1,21,1,0)
This subfile contains the list of individual EOBs that were processed
"^DD",344.4,344.4,1,21,2,0)
in this ERA from a single payer.
"^DD",344.4,344.4,1,"DT")
3030812
"^DD",344.4,344.4,2,0)
ERA LEVEL ADJUSTMENTS^344.42A^^2;0
"^DD",344.4,344.4,2,21,0)
^^4^4^3021223^
"^DD",344.4,344.4,2,21,1,0)
This field holds the ERA level adjustments the payer has applied to the 
"^DD",344.4,344.4,2,21,2,0)
ERA.  These can be additional monies or less monies, depending on the   
"^DD",344.4,344.4,2,21,3,0)
type of adjustment (i.e. Takeback would be less money, interest would be
"^DD",344.4,344.4,2,21,4,0)
more money).
"^DD",344.4,344.4,3.01,0)
CONTACT NAME^F^^3;1^K:$L(X)>30!($L(X)<1) X
"^DD",344.4,344.4,3.01,3)
Answer must be 1-30 characters in length.
"^DD",344.4,344.4,3.01,21,0)
^^2^2^3030320^
"^DD",344.4,344.4,3.01,21,1,0)
This is the name of the contact the payer has provided for questions
"^DD",344.4,344.4,3.01,21,2,0)
regarding this ERA.
"^DD",344.4,344.4,3.01,"DT")
3030320
"^DD",344.4,344.4,3.02,0)
CONTACT NUMBER 1^F^^3;2^K:$L(X)>30!($L(X)<1) X
"^DD",344.4,344.4,3.02,3)
Answer must be 1-30 characters in length.
"^DD",344.4,344.4,3.02,21,0)
^^1^1^3030320^
"^DD",344.4,344.4,3.02,21,1,0)
This is a phone #/telephone extension or email address for the contact.
"^DD",344.4,344.4,3.02,"DT")
3030320
"^DD",344.4,344.4,3.03,0)
CONTACT TYPE 1^S^EM:E-MAIL;FX:FAX;TE:TELEPHONE;EX:TELEPHONE EXTENSION;^3;3^Q
"^DD",344.4,344.4,3.03,3)
Enter the code for the type of contact information.
"^DD",344.4,344.4,3.03,21,0)
^.001^2^2^3030320^^
"^DD",344.4,344.4,3.03,21,1,0)
This is the code that describes the type of contact information provided in
"^DD",344.4,344.4,3.03,21,2,0)
the CONTACT NUMBER 1 field.
"^DD",344.4,344.4,3.03,"DT")
3030320
"^DD",344.4,344.4,3.04,0)
CONTACT NUMBER 2^F^^3;4^K:$L(X)>30!($L(X)<1) X
"^DD",344.4,344.4,3.04,3)
Answer must be 1-30 characters in length.
"^DD",344.4,344.4,3.04,21,0)
^.001^1^1^3030320^^
"^DD",344.4,344.4,3.04,21,1,0)
This is a phone #/telephone extension or email address for the contact.
"^DD",344.4,344.4,3.04,"DT")
3030320
"^DD",344.4,344.4,3.05,0)
CONTACT TYPE 2^S^EM:E-MAIL;FX:FAX;TE:TELEPHONE;EX:TELEPHONE EXTENSION;^3;5^Q
"^DD",344.4,344.4,3.05,3)
Enter the code for the type of contact information.
"^DD",344.4,344.4,3.05,21,0)
^^2^2^3030320^
"^DD",344.4,344.4,3.05,21,1,0)
This is the code that describes the type of contact information provided in
"^DD",344.4,344.4,3.05,21,2,0)
the CONTACT NUMBER 2 field.
"^DD",344.4,344.4,3.05,"DT")
3030320
"^DD",344.4,344.4,3.06,0)
CONTACT NUMBER 3^F^^3;6^K:$L(X)>30!($L(X)<1) X
"^DD",344.4,344.4,3.06,3)
Answer must be 1-30 characters in length.
"^DD",344.4,344.4,3.06,21,0)
^^1^1^3030320^
"^DD",344.4,344.4,3.06,21,1,0)
This is a phone #/telephone extension or email address for the contact.
"^DD",344.4,344.4,3.06,"DT")
3030320
"^DD",344.4,344.4,3.07,0)
CONTACT TYPE 3^S^EM:E-MAIL;FX:FAX;TE:TELEPHONE;EX:TELEPHONE EXTENSION;^3;7^Q
"^DD",344.4,344.4,3.07,3)
Enter the code for the type of contact information.
"^DD",344.4,344.4,3.07,21,0)
^^2^2^3030320^
"^DD",344.4,344.4,3.07,21,1,0)
This is the code that describes the type of contact information provided in
"^DD",344.4,344.4,3.07,21,2,0)
the CONTACT NUMBER 3 field.
"^DD",344.4,344.4,3.07,"DT")
3030320
"^DD",344.4,344.4,20.01,0)
DATE POSTED TO SUSPENSE^D^^20;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",344.4,344.4,20.01,3)
Enter the date/time this receipt was posted to suspense.
"^DD",344.4,344.4,20.01,21,0)
^.001^1^1^3030515^^
"^DD",344.4,344.4,20.01,21,1,0)
This is the date/time this ERA was posted to suspense.
"^DD",344.4,344.4,20.01,"DT")
3030515
"^DD",344.4,344.4,20.02,0)
POSTED TO SUSPENSE BY^P200'^VA(200,^20;2^Q
"^DD",344.4,344.4,20.02,3)
Enter the name of the person who posted this ERA to suspense.
"^DD",344.4,344.4,20.02,21,0)
^^1^1^3030515^
"^DD",344.4,344.4,20.02,21,1,0)
This is the person who posted this ERA to suspense.
"^DD",344.4,344.4,20.02,"DT")
3030515
"^DD",344.4,344.4,20.03,0)
PAPER EOB ENTRY^S^0:NO;1:YES;^20;3^Q
"^DD",344.4,344.4,20.03,3)
Enter a 1 (YES) if the ERA was posted using a paper EOB.
"^DD",344.4,344.4,20.03,21,0)
^^3^3^3030828^
"^DD",344.4,344.4,20.03,21,1,0)
This is a flag that indicates if the ERA was not referenced when its
"^DD",344.4,344.4,20.03,21,2,0)
data was posted to A/R and FMS because the data was posted using the
"^DD",344.4,344.4,20.03,21,3,0)
paper EOB instead.
"^DD",344.4,344.4,20.03,"DT")
3030828
"^DD",344.4,344.41,0)
ERA DETAIL SUB-FIELD^^99^20
"^DD",344.4,344.41,0,"DT")
3030409
"^DD",344.4,344.41,0,"IX","AC",344.41,.02)

"^DD",344.4,344.41,0,"IX","AD",344.41,.05)

"^DD",344.4,344.41,0,"IX","ATB",344.41,.14)

"^DD",344.4,344.41,0,"IX","B",344.41,.01)

"^DD",344.4,344.41,0,"NM","ERA DETAIL")

"^DD",344.4,344.41,0,"UP")
344.4
"^DD",344.4,344.41,.01,0)
SEQUENCE #^MRNJ8,0X^^0;1^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1.N) X I $D(X) S DINUM=X
"^DD",344.4,344.41,.01,1,0)
^.1^^-1
"^DD",344.4,344.41,.01,1,1,0)
344.41^B
"^DD",344.4,344.41,.01,1,1,1)
S ^RCY(344.4,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",344.4,344.41,.01,1,1,2)
K ^RCY(344.4,DA(1),1,"B",$E(X,1,30),DA)
"^DD",344.4,344.41,.01,1,3,0)
^^TRIGGER^344.4^.11
"^DD",344.4,344.41,.01,1,3,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA S Y(1)=$S($D(^RCY(344.4,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=DIU+1 S DIH=$G(^RCY(344.4,DIV(0),0)),DIV=X S $P(^(0),U,11)=DIV,DIH=344.4,DIG=.11 D ^DICR
"^DD",344.4,344.41,.01,1,3,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA S Y(1)=$S($D(^RCY(344.4,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=DIU-1 S DIH=$G(^RCY(344.4,DIV(0),0)),DIV=X S $P(^(0),U,11)=DIV,DIH=344.4,DIG=.11 D ^DICR
"^DD",344.4,344.41,.01,1,3,3)
Do not delete
"^DD",344.4,344.41,.01,1,3,"%D",0)
^^1^1^3020924^
"^DD",344.4,344.41,.01,1,3,"%D",1,0)
Keeps track of the number of individual EOBs in the EOB transmission.
"^DD",344.4,344.41,.01,1,3,"CREATE VALUE")
INDIVIDUAL EOB COUNT+1
"^DD",344.4,344.41,.01,1,3,"DELETE VALUE")
INDIVIDUAL EOB COUNT-1
"^DD",344.4,344.41,.01,1,3,"DT")
3020924
"^DD",344.4,344.41,.01,1,3,"FIELD")
INDIVIDUAL EOB COUNT
"^DD",344.4,344.41,.01,3)
Type a number between 0 and 99999999, 0 Decimal Digits
"^DD",344.4,344.41,.01,21,0)
^.001^1^1^3020626^^^^
"^DD",344.4,344.41,.01,21,1,0)
This is a sequence # used internally to identify this ERA detail record.
"^DD",344.4,344.41,.01,"DT")
3030812
"^DD",344.4,344.41,.02,0)
EOB DETAIL^*P361.1'^IBM(361.1,^0;2^S DIC("S")="I '$P(^(0),U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",344.4,344.41,.02,1,0)
^.1
"^DD",344.4,344.41,.02,1,1,0)
344.41^AC
"^DD",344.4,344.41,.02,1,1,1)
S ^RCY(344.4,DA(1),1,"AC",$E(X,1,30),DA)=""
"^DD",344.4,344.41,.02,1,1,2)
K ^RCY(344.4,DA(1),1,"AC",$E(X,1,30),DA)
"^DD",344.4,344.41,.02,1,1,3)
Do not delete
"^DD",344.4,344.41,.02,1,1,"DT")
3020924
"^DD",344.4,344.41,.02,1,2,0)
344.4^ADET
"^DD",344.4,344.41,.02,1,2,1)
S ^RCY(344.4,"ADET",$E(X,1,30),DA(1),DA)=""
"^DD",344.4,344.41,.02,1,2,2)
K ^RCY(344.4,"ADET",$E(X,1,30),DA(1),DA)
"^DD",344.4,344.41,.02,1,2,3)
Do not delete
"^DD",344.4,344.41,.02,1,2,"%D",0)
^^1^1^3021125^
"^DD",344.4,344.41,.02,1,2,"%D",1,0)
Cross references entire file by EOB detail pointer to file 361.1
"^DD",344.4,344.41,.02,1,2,"DT")
3021125
"^DD",344.4,344.41,.02,3)
Enter the EOB detail records that will comprise the EOB record
"^DD",344.4,344.41,.02,12)
This can only be regular EOB's, not MRA's
"^DD",344.4,344.41,.02,12.1)
S DIC("S")="I '$P(^(0),U,4)"
"^DD",344.4,344.41,.02,21,0)
^.001^1^1^3021024^^
"^DD",344.4,344.41,.02,21,1,0)
The detail EOB records that comprise the 835 transaction.
"^DD",344.4,344.41,.02,"DT")
3021125
"^DD",344.4,344.41,.03,0)
AMOUNT PAID^NJ16,2^^0;3^S:X["$" X=$P(X,"$",2) K:X'?."-".N.1".".2N!(X>9999999999999)!(X<-9999999999999) X
"^DD",344.4,344.41,.03,3)
Type a Dollar Amount between -9999999999999 and 9999999999999, 2 Decimal Digits
"^DD",344.4,344.41,.03,21,0)
^^1^1^3020626^
"^DD",344.4,344.41,.03,21,1,0)
This is the specific amount the payer has paid on this bill.
"^DD",344.4,344.41,.03,"DT")
3030213
"^DD",344.4,344.41,.04,0)
INSURANCE COMPANY ON BILL^P36'^DIC(36,^0;4^Q
"^DD",344.4,344.41,.04,3)
Enter the name of the insurance co who supplied this EOB data
"^DD",344.4,344.41,.04,21,0)
^^1^1^3020626^
"^DD",344.4,344.41,.04,21,1,0)
This is the insurance company that supplied this EOB data
"^DD",344.4,344.41,.04,"DT")
3030827
"^DD",344.4,344.41,.05,0)
INVALID BILL NUMBER^F^^0;5^K:$L(X)>20!($L(X)<1) X
"^DD",344.4,344.41,.05,1,0)
^.1
"^DD",344.4,344.41,.05,1,1,0)
344.41^AD
"^DD",344.4,344.41,.05,1,1,1)
S ^RCY(344.4,DA(1),1,"AD",$E(X,1,30),DA)=""
"^DD",344.4,344.41,.05,1,1,2)
K ^RCY(344.4,DA(1),1,"AD",$E(X,1,30),DA)
"^DD",344.4,344.41,.05,1,1,3)
Do not delete
"^DD",344.4,344.41,.05,1,1,"DT")
3020924
"^DD",344.4,344.41,.05,1,2,0)
^^TRIGGER^344.41^.17
"^DD",344.4,344.41,.05,1,2,1)
Q
"^DD",344.4,344.41,.05,1,2,2)
X ^DD(344.41,.05,1,2,2.3) I X S X=DIV S Y(1)=$S($D(^RCY(344.4,D0,1,D1,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y X ^DD(344.41,.05,1,2,2.1) X ^DD(344.41,.05,1,2,2.4)
"^DD",344.4,344.41,.05,1,2,2.1)
S X=DIV S Y(1)=$S($D(^RCY(344.4,D0,1,D1,0)):^(0),1:"") S X=$P(Y(1),U,5)
"^DD",344.4,344.41,.05,1,2,2.3)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(0)=X S Y(1)=$S($D(^RCY(344.4,D0,1,D1,0)):^(0),1:"") S X=$P(Y(1),U,17)=""
"^DD",344.4,344.41,.05,1,2,2.4)
S DIH=$G(^RCY(344.4,DIV(0),1,DIV(1),0)),DIV=X S $P(^(0),U,17)=DIV,DIH=344.41,DIG=.17 D ^DICR
"^DD",344.4,344.41,.05,1,2,3)
Do not delete
"^DD",344.4,344.41,.05,1,2,"CREATE VALUE")
NO EFFECT
"^DD",344.4,344.41,.05,1,2,"DELETE CONDITION")
BILL NUMBER FROM PAYER=""
"^DD",344.4,344.41,.05,1,2,"DELETE VALUE")
INVALID BILL NUMBER
"^DD",344.4,344.41,.05,1,2,"DT")
3030409
"^DD",344.4,344.41,.05,1,2,"FIELD")
BILL NUMBER FROM PAYER
"^DD",344.4,344.41,.05,3)
Answer must be 1-20 characters in length.
"^DD",344.4,344.41,.05,21,0)
^^1^1^3020626^
"^DD",344.4,344.41,.05,21,1,0)
This is the bill # received on the EOB, but it doesn't exist in VistA.
"^DD",344.4,344.41,.05,"DT")
3030409
"^DD",344.4,344.41,.07,0)
ERROR CATEGORY^S^1:VALID BILL NOT FOUND;2:EOB DETAIL NOT IN IB;99:OTHER;^0;7^Q
"^DD",344.4,344.41,.07,1,0)
^.1
"^DD",344.4,344.41,.07,1,1,0)
344.4^AEXC
"^DD",344.4,344.41,.07,1,1,1)
S ^RCY(344.4,"AEXC",$E(X,1,30),DA(1),DA)=""
"^DD",344.4,344.41,.07,1,1,2)
K ^RCY(344.4,"AEXC",$E(X,1,30),DA(1),DA)
"^DD",344.4,344.41,.07,1,1,"%D",0)
^.101^1^1^3021024^^
"^DD",344.4,344.41,.07,1,1,"%D",1,0)
This xref is used to identify EOB records with exception conditions.
"^DD",344.4,344.41,.07,1,1,"DT")
3021022
"^DD",344.4,344.41,.07,3)
Enter the # corresponding to the specific error detected
"^DD",344.4,344.41,.07,21,0)
^.001^3^3^3021223^^^
"^DD",344.4,344.41,.07,21,1,0)
This field is used to categorize the specific errors associated with
"^DD",344.4,344.41,.07,21,2,0)
EOB detail records.  This is the coded error for special exception
"^DD",344.4,344.41,.07,21,3,0)
processing.
"^DD",344.4,344.41,.07,"DT")
3021223
"^DD",344.4,344.41,.08,0)
UNSPECIFIC ERROR^F^^0;8^K:$L(X)>60!($L(X)<1) X
"^DD",344.4,344.41,.08,3)
Answer must be 1-60 characters in length.
"^DD",344.4,344.41,.08,21,0)
^.001^2^2^3020924^^
"^DD",344.4,344.41,.08,21,1,0)
This is the text to describe the error associated with EOB detail records
"^DD",344.4,344.41,.08,21,2,0)
when the ERROR CATEGORY field is OTHER.
"^DD",344.4,344.41,.08,"DT")
3020924
"^DD",344.4,344.41,.09,0)
TRANSFERRED OUT MSG #^F^^0;9^K:$L(X)>20!($L(X)<1) X
"^DD",344.4,344.41,.09,3)
Answer must be 1-20 characters in length.
"^DD",344.4,344.41,.09,21,0)
^^2^2^3021024^
"^DD",344.4,344.41,.09,21,1,0)
This field will hold the last mail message number used to transmit a
"^DD",344.4,344.41,.09,21,2,0)
detail record for an EOB received for a bill belonging to another site.
"^DD",344.4,344.41,.09,"DT")
3021024
"^DD",344.4,344.41,.1,0)
TRANSFER STATUS^S^0:NOT ACCEPTED;1:ACCEPTED;^0;10^Q
"^DD",344.4,344.41,.1,3)
Enter the code that corresponds to the status of the EOB transferred to another site
"^DD",344.4,344.41,.1,21,0)
^.001^2^2^3030115^^
"^DD",344.4,344.41,.1,21,1,0)
This field indicates whether or not an EOB transfer has been accepted by
"^DD",344.4,344.41,.1,21,2,0)
a site to whom this EOB detail record was sent.
"^DD",344.4,344.41,.1,"DT")
3021024
"^DD",344.4,344.41,.11,0)
TRANSFERRED TO SITE^P4'^DIC(4,^0;11^Q
"^DD",344.4,344.41,.11,3)
Enter the name of the site where the EOB detail record will be sent
"^DD",344.4,344.41,.11,21,0)
^.001^1^1^3021025^^^
"^DD",344.4,344.41,.11,21,1,0)
This is the name of the site where the EOB detail record will be sent.
"^DD",344.4,344.41,.11,"DT")
3021025
"^DD",344.4,344.41,.12,0)
TRANSFERRED DATE^D^^0;12^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",344.4,344.41,.12,1,0)
^.1
"^DD",344.4,344.41,.12,1,1,0)
344.4^ATOUT
"^DD",344.4,344.41,.12,1,1,1)
S ^RCY(344.4,"ATOUT",$E(X,1,30),DA(1),DA)=""
"^DD",344.4,344.41,.12,1,1,2)
K ^RCY(344.4,"ATOUT",$E(X,1,30),DA(1),DA)
"^DD",344.4,344.41,.12,1,1,3)
Do not delete
"^DD",344.4,344.41,.12,1,1,"%D",0)
^^2^2^3030113^
"^DD",344.4,344.41,.12,1,1,"%D",1,0)
This cross reference allows easy access to EOBs that have been transferred
"^DD",344.4,344.41,.12,1,1,"%D",2,0)
out of the site to another site.
"^DD",344.4,344.41,.12,1,1,"DT")
3030113
"^DD",344.4,344.41,.12,3)
Enter the date the EOB was last transferred to another site
"^DD",344.4,344.41,.12,21,0)
^.001^2^2^3030115^^^^
"^DD",344.4,344.41,.12,21,1,0)
This is the latest date/time when the transfer of the EOB detail record
"^DD",344.4,344.41,.12,21,2,0)
took place.
"^DD",344.4,344.41,.12,"DT")
3030115
"^DD",344.4,344.41,.13,0)
ERROR STATUS^S^0:UNRESOLVED;1:RESOLVED;^0;13^Q
"^DD",344.4,344.41,.13,3)
Enter the code to indicate if the error for this EOB detail record has been resolved.
"^DD",344.4,344.41,.13,21,0)
^^3^3^3021024^
"^DD",344.4,344.41,.13,21,1,0)
This indicates if the error associated with this EOB detail record was
"^DD",344.4,344.41,.13,21,2,0)
resolved or not.  If resolved, it will not appear on any more EOB
"^DD",344.4,344.41,.13,21,3,0)
detail exception lists.
"^DD",344.4,344.41,.13,"DT")
3021024
"^DD",344.4,344.41,.14,0)
REVERSAL^S^0:NO;1:YES;^0;14^Q
"^DD",344.4,344.41,.14,1,0)
^.1
"^DD",344.4,344.41,.14,1,1,0)
344.41^ATB
"^DD",344.4,344.41,.14,1,1,1)
S ^RCY(344.4,DA(1),1,"ATB",$E(X,1,30),DA)=""
"^DD",344.4,344.41,.14,1,1,2)
K ^RCY(344.4,DA(1),1,"ATB",$E(X,1,30),DA)
"^DD",344.4,344.41,.14,1,1,3)
Do not delete
"^DD",344.4,344.41,.14,1,1,"%D",0)
^^1^1^3030107^
"^DD",344.4,344.41,.14,1,1,"%D",1,0)
This xref is used to easily find reversal or takeback EOBs in an ERA.
"^DD",344.4,344.41,.14,1,1,"DT")
3030107
"^DD",344.4,344.41,.14,3)
Enter a 1 (YES) if this is a reversal notification
"^DD",344.4,344.41,.14,21,0)
^^1^1^3021223^
"^DD",344.4,344.41,.14,21,1,0)
This is the flag that indicates the bill was not paid, but was reversed.
"^DD",344.4,344.41,.14,"DT")
3030107
"^DD",344.4,344.41,.15,0)
FREE TEXT PATIENT NAME^F^^0;15^K:$L(X)>35!($L(X)<1) X
"^DD",344.4,344.41,.15,3)
Answer must be 1-35 characters in length.
"^DD",344.4,344.41,.15,21,0)
^^2^2^3021223^
"^DD",344.4,344.41,.15,21,1,0)
This is the name of the patient as returned by the payer.  Used only if
"^DD",344.4,344.41,.15,21,2,0)
the bill cannot be found at the site.
"^DD",344.4,344.41,.15,"DT")
3021223
"^DD",344.4,344.41,.16,0)
TRANSFER RECEIVED OTHER SITE^S^0:NO;1:YES;^0;16^Q
"^DD",344.4,344.41,.16,3)
Enter YES (1) if the other site has received the transferred EOB
"^DD",344.4,344.41,.16,21,0)
^^2^2^3030115^
"^DD",344.4,344.41,.16,21,1,0)
This indicates whether or not the other site has received the transferred
"^DD",344.4,344.41,.16,21,2,0)
EOB record.
"^DD",344.4,344.41,.16,"DT")
3030115
"^DD",344.4,344.41,.17,0)
BILL NUMBER FROM PAYER^F^^0;17^K:$L(X)>15!($L(X)<1) X
"^DD",344.4,344.41,.17,3)
Answer must be 1-15 characters in length.
"^DD",344.4,344.41,.17,5,1,0)
344.41^.05^2
"^DD",344.4,344.41,.17,9)
^
"^DD",344.4,344.41,.17,21,0)
^^2^2^3030409^
"^DD",344.4,344.41,.17,21,1,0)
If a bill number must be edited because it could not be found in the site's
"^DD",344.4,344.41,.17,21,2,0)
A/R file, this is the original bill # that the payer sent.
"^DD",344.4,344.41,.17,"DT")
3030409
"^DD",344.4,344.41,1,0)
RAW DATA^344.411^^1;0
"^DD",344.4,344.41,1,21,0)
^^2^2^3021125^
"^DD",344.4,344.41,1,21,1,0)
This field stores the raw data as it was received for the individual EOB
"^DD",344.4,344.41,1,21,2,0)
if its detail could not be stored in IB.
"^DD",344.4,344.41,1.1,0)
FORMATTED MESSAGE DATA^CJ8^^ ; ^S X="" N Q,Q0,Q1 D DISP^RCDPESR0("^RCY(344.4,"_D0_",1,"_D1_",1)","Q0",1,"Q1",75,1) I $O(Q1(0)) D EN^DDIOL("FORMATTED MESSAGE DATA: ","","!!") S Q=0 F  S Q=$O(Q1(Q)) D:'Q EN^DDIOL(" ","","!") Q:'Q  D EN^DDIOL(Q1(Q),"","!")
"^DD",344.4,344.41,1.1,9)
^
"^DD",344.4,344.41,1.1,9.01)

"^DD",344.4,344.41,1.1,9.1)
S X="" N Q,Q0,Q1 D DISP^RCDPESR0("^RCY(344.4,"_D0_",1,"_D1_",1)","Q0",1,"Q1",75,1) I $O(Q1(0)) D EN^DDIOL("FORMATTED MESSAGE DATA: ","","!!") S Q=0 F  S Q=$O(Q1(Q)) D:'Q EN^DDIOL(" ","","!") Q:'Q  D EN^DDIOL(Q1(Q),"","!")
"^DD",344.4,344.41,1.1,"DT")
3021104
"^DD",344.4,344.41,2,0)
RESOLUTION LOG^344.412^^2;0
"^DD",344.4,344.41,2,21,0)
^^2^2^3021125^
"^DD",344.4,344.41,2,21,1,0)
This field contains comments to detail the attempts made to remove the
"^DD",344.4,344.41,2,21,2,0)
exception condition associated with this individual EOB.
"^DD",344.4,344.41,99,0)
BILL REFERENCE NUMBER^CJ8^^ ; ^S:'$G(DA(1)) DA(1)=+$G(D0),DA=+$G(D1) S X=$$GETBILL^RCDPESR0(.DA)
"^DD",344.4,344.41,99,9)
^
"^DD",344.4,344.41,99,9.01)

"^DD",344.4,344.41,99,9.1)
S:'$G(DA(1)) DA(1)=+$G(D0),DA=+$G(D1) S X=$$GETBILL^RCDPESR0(.DA)
"^DD",344.4,344.41,99,9.2)
S Y(344.41,99,81)=$G(D1),Y(344.41,99,80)=$G(D0),Y(344.41,99,1)=$S($D(^RCY(344.4,D0,1,D1,0)):^(0),1:"")
"^DD",344.4,344.41,99,9.3)
X ^DD(344.41,99,9.2) S D0=$P(Y(344.41,99,1),U,2) S:'D0!'$D(^IBM(361.1,+D0,0)) D0=-1 S Y(344.41,99,101)=$S($D(^IBM(361.1,D0,0)):^(0),1:"")
"^DD",344.4,344.41,99,9.4)
X ^DD(344.41,99,9.3) S Y(344.41,99,102)=$G(X),D0=$P(Y(344.41,99,101),U,1) S:'D0!'$D(^DGCR(399,+D0,0)) D0=-1 S Y(344.41,99,201)=$S($D(^DGCR(399,D0,0)):^(0),1:"")
"^DD",344.4,344.41,99,9.5)
X ^DD(344.41,99,9.4) S D0=$P(Y(344.41,99,1),U,2) S:'D0!'$D(^IBM(361.1,+D0,0)) D0=-1 S Y(344.41,99,280)=$G(D0),Y(344.41,99,201)=$S($D(^IBM(361.1,D0,0)):^(0),1:"")
"^DD",344.4,344.41,99,9.6)
X ^DD(344.41,99,9.5) S Y(344.41,99,202)=$G(X),D0=$P(Y(344.41,99,201),U,1) S:'D0!'$D(^DGCR(399,+D0,0)) D0=-1 S Y(344.41,99,301)=$S($D(^DGCR(399,D0,0)):^(0),1:"")
"^DD",344.4,344.41,99,"DT")
3030925
"^DD",344.4,344.411,0)
RAW DATA SUB-FIELD^^.01^1
"^DD",344.4,344.411,0,"DT")
3020924
"^DD",344.4,344.411,0,"NM","RAW DATA")

"^DD",344.4,344.411,0,"UP")
344.41
"^DD",344.4,344.411,.01,0)
RAW DATA^WL^^0;1^Q
"^DD",344.4,344.411,.01,3)
Enter the raw data associated with this EOB record
"^DD",344.4,344.411,.01,21,0)
^^3^3^3020924^
"^DD",344.4,344.411,.01,21,1,0)
This is the raw data received in a message for an EOB record in error.
"^DD",344.4,344.411,.01,21,2,0)
It is saved here so the data is not lost if needed for transfer to
"^DD",344.4,344.411,.01,21,3,0)
another station or for recovery of data unable to be stored in IB.
"^DD",344.4,344.411,.01,"DT")
3020924
"^DD",344.4,344.412,0)
RESOLUTION LOG SUB-FIELD^^.01^1
"^DD",344.4,344.412,0,"DT")
3021030
"^DD",344.4,344.412,0,"NM","RESOLUTION LOG")

"^DD",344.4,344.412,0,"UP")
344.41
"^DD",344.4,344.412,.01,0)
RESOLUTION LOG^WL^^0;1^Q
"^DD",344.4,344.412,.01,3)
Enter a description of the attempts to resolve any exception
"^DD",344.4,344.412,.01,21,0)
^^2^2^3021030^
"^DD",344.4,344.412,.01,21,1,0)
This is the log used to keep track of the actions/results of any attempts
"^DD",344.4,344.412,.01,21,2,0)
to resolve the exceptions associated with this EOB detail record.
"^DD",344.4,344.412,.01,"DT")
3021030
"^DD",344.4,344.42,0)
ERA LEVEL ADJUSTMENTS SUB-FIELD^^.04^4
"^DD",344.4,344.42,0,"DT")
3030311
"^DD",344.4,344.42,0,"IX","B",344.42,.01)

"^DD",344.4,344.42,0,"NM","ERA LEVEL ADJUSTMENTS")

"^DD",344.4,344.42,0,"UP")
344.4
"^DD",344.4,344.42,.01,0)
REFERENCE NUMBER^MF^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",344.4,344.42,.01,1,0)
^.1
"^DD",344.4,344.42,.01,1,1,0)
344.42^B
"^DD",344.4,344.42,.01,1,1,1)
S ^RCY(344.4,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",344.4,344.42,.01,1,1,2)
K ^RCY(344.4,DA(1),2,"B",$E(X,1,30),DA)
"^DD",344.4,344.42,.01,3)
Answer must be 1-30 characters in length.
"^DD",344.4,344.42,.01,21,0)
^.001^1^1^3021223^^
"^DD",344.4,344.42,.01,21,1,0)
This is the bill # or other reference number that applies to the adjustment
"^DD",344.4,344.42,.01,"DT")
3021223
"^DD",344.4,344.42,.02,0)
ADJUSTMENT CODE^F^^0;2^K:$L(X)>5!($L(X)<1) X
"^DD",344.4,344.42,.02,3)
Answer must be 1-5 characters in length.
"^DD",344.4,344.42,.02,21,0)
^^1^1^3021223^
"^DD",344.4,344.42,.02,21,1,0)
This is the X12 code for the reason for the adjustment.
"^DD",344.4,344.42,.02,"DT")
3021223
"^DD",344.4,344.42,.03,0)
ADJUSTMENT AMOUNT^NJ15,2^^0;3^S:X["$" X=$P(X,"$",2) K:X'?."-".N.1".".2N!(X>999999999999.99)!(X<-999999999999.99) X
"^DD",344.4,344.42,.03,3)
Type a Dollar Amount between -999999999999.99 and 999999999999.99, 2 Decimal Digits
"^DD",344.4,344.42,.03,21,0)
^^1^1^3021223^
"^DD",344.4,344.42,.03,21,1,0)
This is the amount of the adjustment.
"^DD",344.4,344.42,.03,"DT")
3021223
"^DD",344.4,344.42,.04,0)
ADJUSTMENT TEXT^F^^0;4^K:$L(X)>190!($L(X)<1) X
"^DD",344.4,344.42,.04,3)
Answer must be 1-190 characters in length.
"^DD",344.4,344.42,.04,21,0)
^^1^1^3030311^
"^DD",344.4,344.42,.04,21,1,0)
This is the text that describes the adjustment code.
"^DD",344.4,344.42,.04,"DT")
3030311
"^DD",344.49,344.49,0)
FIELD^^1^7
"^DD",344.49,344.49,0,"DDA")
N
"^DD",344.49,344.49,0,"DT")
3030620
"^DD",344.49,344.49,0,"IX","B",344.49,.01)

"^DD",344.49,344.49,0,"NM","EDI LOCKBOX EOB WORKLIST")

"^DD",344.49,344.49,0,"VRPK")
PRCA
"^DD",344.49,344.49,.01,0)
ERA REFERENCE^RP344.4'X^RCY(344.4,^0;1^S:$D(X) DINUM=X Q
"^DD",344.49,344.49,.01,1,0)
^.1
"^DD",344.49,344.49,.01,1,1,0)
344.49^B
"^DD",344.49,344.49,.01,1,1,1)
S ^RCY(344.49,"B",$E(X,1,30),DA)=""
"^DD",344.49,344.49,.01,1,1,2)
K ^RCY(344.49,"B",$E(X,1,30),DA)
"^DD",344.49,344.49,.01,3)
Enter the reference to the ERA that caused this scratch pad record to exist.
"^DD",344.49,344.49,.01,21,0)
^^2^2^3030203^
"^DD",344.49,344.49,.01,21,1,0)
This is the pointer to the record in file 344.4 that contains the ERA
"^DD",344.49,344.49,.01,21,2,0)
detail as received from the EDI Lockbox transmission.
"^DD",344.49,344.49,.01,"DT")
3030203
"^DD",344.49,344.49,.02,0)
RECEIPT #^P344'^RCY(344,^0;2^Q
"^DD",344.49,344.49,.02,3)
Enter the receipt number that was created from this entry.
"^DD",344.49,344.49,.02,21,0)
^^2^2^3030204^
"^DD",344.49,344.49,.02,21,1,0)
This is the pointer to the receipt entry that was created as a result of
"^DD",344.49,344.49,.02,21,2,0)
this EDI Lockbox Worklist entry.
"^DD",344.49,344.49,.02,"DT")
3030204
"^DD",344.49,344.49,.03,0)
TOTAL PAYMENT RECEIVED^NJ16,2^^0;3^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999999999)!(X<0) X
"^DD",344.49,344.49,.03,3)
Type a Dollar Amount between 0 and 9999999999999, 2 Decimal Digits
"^DD",344.49,344.49,.03,21,0)
^^3^3^3030204^
"^DD",344.49,344.49,.03,21,1,0)
This is the total amount of money that was received in conjunction with
"^DD",344.49,344.49,.03,21,2,0)
the ERA.  This amount must equal the total amount being posted in the
"^DD",344.49,344.49,.03,21,3,0)
receipt.
"^DD",344.49,344.49,.03,"DT")
3030204
"^DD",344.49,344.49,.04,0)
CHECK #^F^^0;4^K:$L(X)>15!($L(X)<1) X
"^DD",344.49,344.49,.04,3)
Answer must be 1-15 characters in length.
"^DD",344.49,344.49,.04,21,0)
^.001^3^3^3030522^^^
"^DD",344.49,344.49,.04,21,1,0)
This is the paper check number that is matched to this ERA.
"^DD",344.49,344.49,.04,21,2,0)
It will be included on each receipt transaction if the receipt is
"^DD",344.49,344.49,.04,21,3,0)
created through the EOB Worklist options.
"^DD",344.49,344.49,.04,"DT")
3030508
"^DD",344.49,344.49,.05,0)
CHECK DATE^D^^0;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",344.49,344.49,.05,3)
Enter the date on the bank's check.
"^DD",344.49,344.49,.05,21,0)
^^1^1^3030620^
"^DD",344.49,344.49,.05,21,1,0)
This is the date on the check.
"^DD",344.49,344.49,.05,"DT")
3030620
"^DD",344.49,344.49,.06,0)
BANK ROUTING #^F^^0;6^K:$L(X)>15!($L(X)<1) X
"^DD",344.49,344.49,.06,3)
Answer must be 1-15 characters in length.
"^DD",344.49,344.49,.06,21,0)
^^1^1^3030620^
"^DD",344.49,344.49,.06,21,1,0)
This is the bank routing number to be put on the receipt.
"^DD",344.49,344.49,.06,"DT")
3030620
"^DD",344.49,344.49,1,0)
SEQUENCE #^344.491A^^1;0
"^DD",344.49,344.49,1,"DT")
3030214
"^DD",344.49,344.491,0)
SEQUENCE # SUB-FIELD^^3^18
"^DD",344.49,344.491,0,"DT")
3030612
"^DD",344.49,344.491,0,"IX","ASEQ",344.491,.01)

"^DD",344.49,344.491,0,"IX","B",344.491,.01)

"^DD",344.49,344.491,0,"NM","SEQUENCE #")

"^DD",344.49,344.491,0,"UP")
344.49
"^DD",344.49,344.491,.01,0)
ERA SEQUENCE #^MNJ7,3^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."4N.N) X
"^DD",344.49,344.491,.01,1,0)
^.1
"^DD",344.49,344.491,.01,1,1,0)
344.491^B
"^DD",344.49,344.491,.01,1,1,1)
S ^RCY(344.49,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",344.49,344.491,.01,1,1,2)
K ^RCY(344.49,DA(1),1,"B",$E(X,1,30),DA)
"^DD",344.49,344.491,.01,1,2,0)
344.491^ASEQ^MUMPS
"^DD",344.49,344.491,.01,1,2,1)
S:(X\1=X) ^RCY(344.49,DA(1),1,"ASEQ",X,DA)=""
"^DD",344.49,344.491,.01,1,2,2)
K:(X\1=X) ^RCY(344.49,DA(1),1,"ASEQ",X,DA)
"^DD",344.49,344.491,.01,1,2,3)
Do not delete
"^DD",344.49,344.491,.01,1,2,"DT")
3030219
"^DD",344.49,344.491,.01,3)
Type a Number between 1 and 999, 3 Decimal Digits
"^DD",344.49,344.491,.01,21,0)
^.001^5^5^3030214^^^^
"^DD",344.49,344.491,.01,21,1,0)
This field contains a number consisting of a whole number and optionally
"^DD",344.49,344.491,.01,21,2,0)
a decimal.  The whole number represents the place holder for the line in
"^DD",344.49,344.491,.01,21,3,0)
the original ERA that was used to initially create the scratch pad.  The
"^DD",344.49,344.491,.01,21,4,0)
decimal portion represents additional lines that have been added to break
"^DD",344.49,344.491,.01,21,5,0)
down and further define the allocation of this payment.
"^DD",344.49,344.491,.01,"DT")
3030219
"^DD",344.49,344.491,.02,0)
CLAIM #^F^^0;2^K:$L(X)>15!($L(X)<1) X
"^DD",344.49,344.491,.02,3)
Answer must be 1-15 characters in length.
"^DD",344.49,344.491,.02,21,0)
^.001^2^2^3030204^^
"^DD",344.49,344.491,.02,21,1,0)
This is the claim # that will be posted against when/if this line is added
"^DD",344.49,344.491,.02,21,2,0)
to a receipt.  If this field is blank, assume SUSPENSE as the account.
"^DD",344.49,344.491,.02,"DT")
3030204
"^DD",344.49,344.491,.03,0)
AMOUNT TO POST ON RECEIPT^NJ16,2^^0;3^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999999999)!(X<0) X
"^DD",344.49,344.491,.03,3)
Type a Dollar Amount between 0 and 9999999999999, 2 Decimal Digits
"^DD",344.49,344.491,.03,5,1,0)
344.491^.06^1
"^DD",344.49,344.491,.03,5,2,0)
344.491^.06^1
"^DD",344.49,344.491,.03,21,0)
^^1^1^3030204^
"^DD",344.49,344.491,.03,21,1,0)
This is the amount of money to post for this line item on the receipt.
"^DD",344.49,344.491,.03,"DT")
3030204
"^DD",344.49,344.491,.04,0)
INCLUDE ON RECEIPT^S^1:YES;0:NO;^0;4^Q
"^DD",344.49,344.491,.04,3)
Enter a '1' (YES) to include this line on a receipt.
"^DD",344.49,344.491,.04,21,0)
^^3^3^3030204^
"^DD",344.49,344.491,.04,21,1,0)
Responding YES here will force a line item with the data contained on
"^DD",344.49,344.491,.04,21,2,0)
this record to be added to the EDI Lockbox receipt that will be created
"^DD",344.49,344.491,.04,21,3,0)
from this worklist entry.
"^DD",344.49,344.491,.04,"DT")
3030204
"^DD",344.49,344.491,.05,0)
AMT OF PAYMENT^NJ16,2^^0;5^S:X["$" X=$P(X,"$",2) K:X'?."-".N.1".".2N!(X>9999999999999)!(X<-9999999999999) X
"^DD",344.49,344.491,.05,3)
Type a Dollar Amount between -9999999999999 and 9999999999999, 2 Decimal Digits
"^DD",344.49,344.491,.05,21,0)
^.001^3^3^3030204^^^^
"^DD",344.49,344.491,.05,21,1,0)
This is the amount of money paid for the claim in the ERA.  If this
"^DD",344.49,344.491,.05,21,2,0)
amount is negative, it indicates an adjustment of this amount was found
"^DD",344.49,344.491,.05,21,3,0)
on the ERA for the claim.
"^DD",344.49,344.491,.05,"DT")
3030204
"^DD",344.49,344.491,.06,0)
NET AMOUNT OF PAYMENT^NJ16,2^^0;6^S:X["$" X=$P(X,"$",2) K:X'?."-".N.1".".2N!(X>9999999999999)!(X<-9999999999999) X
"^DD",344.49,344.491,.06,1,0)
^.1
"^DD",344.49,344.491,.06,1,1,0)
^^TRIGGER^344.491^.03
"^DD",344.49,344.491,.06,1,1,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(0)=X S X=Y(0)'<0 I X S X=DIV S Y(1)=$S($D(^RCY(344.49,D0,1,D1,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=DIV X ^DD(344.491,.06,1,1,1.4)
"^DD",344.49,344.491,.06,1,1,1.4)
S DIH=$G(^RCY(344.49,DIV(0),1,DIV(1),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=344.491,DIG=.03 D ^DICR
"^DD",344.49,344.491,.06,1,1,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^RCY(344.49,D0,1,D1,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(344.491,.06,1,1,2.4)
"^DD",344.49,344.491,.06,1,1,2.4)
S DIH=$G(^RCY(344.49,DIV(0),1,DIV(1),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=344.491,DIG=.03 D ^DICR
"^DD",344.49,344.491,.06,1,1,"CREATE CONDITION")
NET AMOUNT OF PAYMENT'<0
"^DD",344.49,344.491,.06,1,1,"CREATE VALUE")
NET AMOUNT OF PAYMENT
"^DD",344.49,344.491,.06,1,1,"DELETE VALUE")
@
"^DD",344.49,344.491,.06,1,1,"FIELD")
AMOUNT TO POST ON RECEIPT
"^DD",344.49,344.491,.06,3)
Type a Dollar Amount between -9999999999999 and 9999999999999, 2 Decimal Digits
"^DD",344.49,344.491,.06,21,0)
^^1^1^3030204^
"^DD",344.49,344.491,.06,21,1,0)
This is the amount of the original payment less any adjustments recorded.
"^DD",344.49,344.491,.06,"DT")
3030204
"^DD",344.49,344.491,.07,0)
AR BILL #^P430'^PRCA(430,^0;7^Q
"^DD",344.49,344.491,.07,3)
Enter the AR bill # that corresponds to the claim # on this record.
"^DD",344.49,344.491,.07,21,0)
^^3^3^3030206^
"^DD",344.49,344.491,.07,21,1,0)
This is the pointer to file 430 for the AR bill that corresponds to the
"^DD",344.49,344.491,.07,21,2,0)
claim # on file for the payment.  Thi sfield will be blank for 'SUSPENSE'
"^DD",344.49,344.491,.07,21,3,0)
items.
"^DD",344.49,344.491,.07,"DT")
3030206
"^DD",344.49,344.491,.08,0)
NET AMT OF ADJUSTMENTS^NJ16,2^^0;8^S:X["$" X=$P(X,"$",2) K:X'?."-".N.1".".2N!(X>9999999999999)!(X<-9999999999999) X
"^DD",344.49,344.491,.08,1,0)
^.1^^0
"^DD",344.49,344.491,.08,3)
Type a Dollar Amount between -9999999999999 and 9999999999999, 2 Decimal Digits
"^DD",344.49,344.491,.08,21,0)
^^1^1^3030206^
"^DD",344.49,344.491,.08,21,1,0)
This is the total net amount of all adjustments for the line item.
"^DD",344.49,344.491,.08,"DT")
3030423
"^DD",344.49,344.491,.09,0)
ORIGINAL ERA SEQUENCES^F^^0;9^K:$L(X)>10!($L(X)<1) X
"^DD",344.49,344.491,.09,3)
Answer must be 1-10 characters in length.
"^DD",344.49,344.491,.09,21,0)
^^6^6^3030214^
"^DD",344.49,344.491,.09,21,1,0)
This is the list of sequence #'s in the original ERA that was used to
"^DD",344.49,344.491,.09,21,2,0)
create this sequence in the scratch pad.  It will only exist on the
"^DD",344.49,344.491,.09,21,3,0)
record whose sequence # is a whole number.  An ERA level adjustment
"^DD",344.49,344.491,.09,21,4,0)
will be listed as ADJ followed by the ien of the adjustment in the
"^DD",344.49,344.491,.09,21,5,0)
ERA record in file 344.42.  The referenced sequence numbers are separated
"^DD",344.49,344.491,.09,21,6,0)
by commas.
"^DD",344.49,344.491,.09,"DT")
3030214
"^DD",344.49,344.491,.1,0)
RECEIPT LINE COMMENT^F^^0;10^K:$L(X)>60!($L(X)<1) X
"^DD",344.49,344.491,.1,3)
Answer must be 1-60 characters in length.
"^DD",344.49,344.491,.1,21,0)
^^2^2^3030429^
"^DD",344.49,344.491,.1,21,1,0)
This is the text that will be used to create a bill comment for the
"^DD",344.49,344.491,.1,21,2,0)
bill referenced by this sequence.
"^DD",344.49,344.491,.1,"DT")
3030429
"^DD",344.49,344.491,.11,0)
REVIEWED?^S^0:NO;1:YES;I:IN PROCESS;^0;11^Q
"^DD",344.49,344.491,.11,3)
Enter the code that corresponds to the review status of this EOB.
"^DD",344.49,344.491,.11,21,0)
^.001^1^1^3030612^^
"^DD",344.49,344.491,.11,21,1,0)
This is the review status of the EOB.
"^DD",344.49,344.491,.11,"DT")
3030612
"^DD",344.49,344.491,.12,0)
REVIEWED BY^P200'^VA(200,^0;12^Q
"^DD",344.49,344.491,.12,3)
Enter the name of the user who performed the revieew for this EOB
"^DD",344.49,344.491,.12,21,0)
^^1^1^3030612^
"^DD",344.49,344.491,.12,21,1,0)
This is the name of the user who performed the revieew for this EOB.
"^DD",344.49,344.491,.12,"DT")
3030612
"^DD",344.49,344.491,1,0)
ADJUSTMENT LOG^344.4911A^^1;0
"^DD",344.49,344.491,2.01,0)
ADDED BY^P200'^VA(200,^2;1^Q
"^DD",344.49,344.491,2.01,3)
Enter the name of the person who wqs responsible for creating this record.
"^DD",344.49,344.491,2.01,21,0)
^^2^2^3030218^
"^DD",344.49,344.491,2.01,21,1,0)
This is the name of the person whose actions caused this record to be
"^DD",344.49,344.491,2.01,21,2,0)
created.
"^DD",344.49,344.491,2.01,"DT")
3030218
"^DD",344.49,344.491,2.02,0)
DATE/TIME ADDED^D^^2;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",344.49,344.491,2.02,3)
Enter the date and time the record was added.
"^DD",344.49,344.491,2.02,21,0)
^.001^1^1^3030218^^
"^DD",344.49,344.491,2.02,21,1,0)
This is the date and time the record was first added to the scratch pad.
"^DD",344.49,344.491,2.02,"DT")
3030218
"^DD",344.49,344.491,2.03,0)
LAST EDITED BY^P200'^VA(200,^2;3^Q
"^DD",344.49,344.491,2.03,3)
Enter the name of the person who last edited this record.
"^DD",344.49,344.491,2.03,21,0)
^^1^1^3030218^
"^DD",344.49,344.491,2.03,21,1,0)
This is the aname of the person who last edited this record.
"^DD",344.49,344.491,2.03,"DT")
3030218
"^DD",344.49,344.491,2.04,0)
LAST EDITED DATE/TIME^D^^2;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",344.49,344.491,2.04,3)
Enter the date and time this record was last edited.
"^DD",344.49,344.491,2.04,21,0)
^^1^1^3030218^
"^DD",344.49,344.491,2.04,21,1,0)
This is the date and time this record was last edited.
"^DD",344.49,344.491,2.04,"DT")
3030218
"^DD",344.49,344.491,3,0)
REVIEW NOTES^344.4913^^3;0
"^DD",344.49,344.4911,0)
ADJUSTMENT LOG SUB-FIELD^^.09^9
"^DD",344.49,344.4911,0,"DT")
3030220
"^DD",344.49,344.4911,0,"IX","B",344.4911,.01)

"^DD",344.49,344.4911,0,"NM","ADJUSTMENT LOG")

"^DD",344.49,344.4911,0,"UP")
344.491
"^DD",344.49,344.4911,.01,0)
ADJUSTMENT #^MNJ2,0^^0;1^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",344.49,344.4911,.01,1,0)
^.1
"^DD",344.49,344.4911,.01,1,1,0)
344.4911^B
"^DD",344.49,344.4911,.01,1,1,1)
S ^RCY(344.49,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",344.49,344.4911,.01,1,1,2)
K ^RCY(344.49,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",344.49,344.4911,.01,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",344.49,344.4911,.01,21,0)
^^2^2^3030204^
"^DD",344.49,344.4911,.01,21,1,0)
This is a sequential # used to enumerate the adjustments made as a result
"^DD",344.49,344.4911,.01,21,2,0)
of or to this line item.
"^DD",344.49,344.4911,.01,"DT")
3030204
"^DD",344.49,344.4911,.02,0)
ADJUSTMENT CAUSE^RS^0:ADJUSTED DUE TO ANOTHER CLAIM;1:CAUSED ANOTHER CLAIM TO BE ADJUSTED;2:RETRACTION - SPECIFIC CLAIM;3:RETRACTION - NO SPECIFIC CLAIM;4:ADDITIONAL PAYMENT - SPECIFIC CLAIM;5:ADDITIONAL PAYMENT - NO SPECIFIC CLAIM;^0;2^Q
"^DD",344.49,344.4911,.02,3)
Enter the code that corresponds to the reason the adjustment record is being added.
"^DD",344.49,344.4911,.02,21,0)
^.001^5^5^3030214^^^^
"^DD",344.49,344.4911,.02,21,1,0)
This is a flag that indicates if the adjustment was caused by this line
"^DD",344.49,344.4911,.02,21,2,0)
item, if the adjustment is a result of another line item needing to decrease
"^DD",344.49,344.4911,.02,21,3,0)
the amount of money being applied for this ERA or if the adjustment is a
"^DD",344.49,344.4911,.02,21,4,0)
result of a reversal or additional payment on the ERA for a specific or
"^DD",344.49,344.4911,.02,21,5,0)
non-specific claim.
"^DD",344.49,344.4911,.02,"DT")
3030214
"^DD",344.49,344.4911,.03,0)
ADJUSTMENT AMOUNT^NJ16,2^^0;3^S:X["$" X=$P(X,"$",2) K:X'?."-".N.1".".2N!(X>9999999999999)!(X<-9999999999999) X
"^DD",344.49,344.4911,.03,3)
Type a Dollar Amount between -9999999999999 and 9999999999999, 2 Decimal Digits
"^DD",344.49,344.4911,.03,21,0)
^.001^2^2^3030204^^^
"^DD",344.49,344.4911,.03,21,1,0)
This is the amount that will be used to either reduce or increase the net
"^DD",344.49,344.4911,.03,21,2,0)
amount of payment for the line item.
"^DD",344.49,344.4911,.03,"DT")
3030204
"^DD",344.49,344.4911,.04,0)
REFERENCE #^F^^0;4^K:$L(X)>30!($L(X)<1) X
"^DD",344.49,344.4911,.04,3)
Answer must be 1-30 characters in length.
"^DD",344.49,344.4911,.04,21,0)
^^2^2^3030204^
"^DD",344.49,344.4911,.04,21,1,0)
This is the reference # or claim # that was provided to identify the
"^DD",344.49,344.4911,.04,21,2,0)
cause of the adjustment.
"^DD",344.49,344.4911,.04,"DT")
3030204
"^DD",344.49,344.4911,.05,0)
BACKGROUND ACTION^S^0:NONE;1:DECREASE ADJUSTMENT;2:COMMENT;3:ADD LINE TO RECEIPT;^0;5^Q
"^DD",344.49,344.4911,.05,3)
Enter the code that corresponds to the action that should be applied to this record as a result of this adjustment.
"^DD",344.49,344.4911,.05,21,0)
^.001^2^2^3030214^^
"^DD",344.49,344.4911,.05,21,1,0)
This indicates the action that should be taken to apply this adjustment to
"^DD",344.49,344.4911,.05,21,2,0)
the claim referenced when the receipt is ready to be created.
"^DD",344.49,344.4911,.05,"DT")
3030214
"^DD",344.49,344.4911,.06,0)
USER OFFSET ACTION NEEDED^S^0:NO;1:YES;^0;6^Q
"^DD",344.49,344.4911,.06,3)
Enter a 1 (YES) if the user needs to offset this adjustment with a dec adj on another claim.
"^DD",344.49,344.4911,.06,21,0)
^.001^2^2^3030214^^^
"^DD",344.49,344.4911,.06,21,1,0)
This indicates what action the user is expected to take to reconcile
"^DD",344.49,344.4911,.06,21,2,0)
the adjustment so the ERA is ready for receipt creation.
"^DD",344.49,344.4911,.06,"DT")
3030214
"^DD",344.49,344.4911,.07,0)
ERA SEQUENCE REF^F^^0;7^K:$L(X)>10!($L(X)<1) X
"^DD",344.49,344.4911,.07,1,0)
^.1^^0
"^DD",344.49,344.4911,.07,3)
Answer must be 1-10 characters in length.
"^DD",344.49,344.4911,.07,21,0)
^^2^2^3030206^
"^DD",344.49,344.4911,.07,21,1,0)
This is the reference to the actual seq or ERA adjustment record that this
"^DD",344.49,344.4911,.07,21,2,0)
adjustment was received in.
"^DD",344.49,344.4911,.07,"DT")
3030214
"^DD",344.49,344.4911,.08,0)
BACKGROUND ACTION COMPLETED^S^0:NO;1:YES;^0;8^Q
"^DD",344.49,344.4911,.08,3)
Enter a 1 (YES) if the background action has been completed.
"^DD",344.49,344.4911,.08,21,0)
^^3^3^3030214^
"^DD",344.49,344.4911,.08,21,1,0)
This field keeps track of whther or not the background action that has
"^DD",344.49,344.4911,.08,21,2,0)
been assigned to this adjustment has been completed or not.  This prevents
"^DD",344.49,344.4911,.08,21,3,0)
decrease adjustments from being performed more than once.
"^DD",344.49,344.4911,.08,"DT")
3030214
"^DD",344.49,344.4911,.09,0)
ADJUSTMENT COMMENT^F^^0;9^K:$L(X)>60!($L(X)<1) X
"^DD",344.49,344.4911,.09,3)
Answer must be 1-60 characters in length.
"^DD",344.49,344.4911,.09,21,0)
^^2^2^3030220^
"^DD",344.49,344.4911,.09,21,1,0)
This is the comment that will be placed in the bill record as a result of 
"^DD",344.49,344.4911,.09,21,2,0)
this adjustment.
"^DD",344.49,344.4911,.09,"DT")
3030225
"^DD",344.49,344.4913,0)
REVIEW NOTES SUB-FIELD^^.01^1
"^DD",344.49,344.4913,0,"DT")
3030612
"^DD",344.49,344.4913,0,"NM","REVIEW NOTES")

"^DD",344.49,344.4913,0,"UP")
344.491
"^DD",344.49,344.4913,.01,0)
REVIEW NOTES^W^^0;1^Q
"^DD",344.49,344.4913,.01,3)
Enter any notes for this EOB that you want to keep for future reference
"^DD",344.49,344.4913,.01,21,0)
^^2^2^3030612^
"^DD",344.49,344.4913,.01,21,1,0)
This is a free text word processing field to be used to keep track of
"^DD",344.49,344.4913,.01,21,2,0)
any notes or special circumstances that occur during the review of this EOB. 
"^DD",344.49,344.4913,.01,"DT")
3030612
"^DD",344.5,344.5,0)
FIELD^^5^20
"^DD",344.5,344.5,0,"DT")
3030425
"^DD",344.5,344.5,0,"IX","AMSEQ",344.5,.09)

"^DD",344.5,344.5,0,"IX","B",344.5,.01)

"^DD",344.5,344.5,0,"NM","AR EDI LOCKBOX MESSAGES")

"^DD",344.5,344.5,0,"VRPK")
PRCA
"^DD",344.5,344.5,.01,0)
MESSAGE ID^RF^^0;1^K:$L(X)>20!($L(X)<1)!'(X'?1P.E) X
"^DD",344.5,344.5,.01,1,0)
^.1
"^DD",344.5,344.5,.01,1,1,0)
344.5^B
"^DD",344.5,344.5,.01,1,1,1)
S ^RCY(344.5,"B",$E(X,1,30),DA)=""
"^DD",344.5,344.5,.01,1,1,2)
K ^RCY(344.5,"B",$E(X,1,30),DA)
"^DD",344.5,344.5,.01,3)
Answer must be 1-20 characters in length.
"^DD",344.5,344.5,.01,21,0)
^^2^2^3020603^
"^DD",344.5,344.5,.01,21,1,0)
This is the id to identify the message uniquely to the system.  It is
"^DD",344.5,344.5,.01,21,2,0)
calculated from the mail message number that delivers it to the system.
"^DD",344.5,344.5,.01,"DT")
3020603
"^DD",344.5,344.5,.02,0)
MESSAGE TYPE^S^835ERA:ERA RECORD;835XFR:EOB TRANSFER;^0;2^Q
"^DD",344.5,344.5,.02,3)
Enter the code to specify which type of information the message will contain.
"^DD",344.5,344.5,.02,21,0)
^^1^1^3020603^
"^DD",344.5,344.5,.02,21,1,0)
This is the type of information contained in the transmission record.
"^DD",344.5,344.5,.02,"DT")
3020606
"^DD",344.5,344.5,.03,0)
DATE RECORDED^D^^0;3^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",344.5,344.5,.03,3)
Enter the time the record was recorded at the site.
"^DD",344.5,344.5,.03,21,0)
^^1^1^3020603^
"^DD",344.5,344.5,.03,21,1,0)
This is the actual time the record was added to the file at the site.
"^DD",344.5,344.5,.03,"DT")
3030113
"^DD",344.5,344.5,.04,0)
UPDATE STATUS^S^0:NOT UPDATING;1:UPDATING;^0;4^Q
"^DD",344.5,344.5,.04,3)
Enter a 1 if VistA is currently being updated with the information in this record.
"^DD",344.5,344.5,.04,21,0)
^.001^2^2^3020604^^^
"^DD",344.5,344.5,.04,21,1,0)
This is the indicator of whether or not the VistA database is being
"^DD",344.5,344.5,.04,21,2,0)
updated with the data contained in the electronic transmission record.
"^DD",344.5,344.5,.04,"DT")
3020604
"^DD",344.5,344.5,.05,0)
UPDATE TASK^F^^0;5^K:$L(X)>20!($L(X)<1) X
"^DD",344.5,344.5,.05,3)
Answer must be 1-20 characters in length.
"^DD",344.5,344.5,.05,21,0)
^^2^2^3020603^
"^DD",344.5,344.5,.05,21,1,0)
This is the # of the background task that is updating the VistA data
"^DD",344.5,344.5,.05,21,2,0)
with the information in this electronic transmission record.
"^DD",344.5,344.5,.05,"DT")
3020603
"^DD",344.5,344.5,.06,0)
ALLOW AUTO-UPDATE^S^0:NO;1:YES;^0;6^Q
"^DD",344.5,344.5,.06,3)
Enter YES (1) to allow this record to auto update VistA
"^DD",344.5,344.5,.06,21,0)
^^3^3^3020603^
"^DD",344.5,344.5,.06,21,1,0)
This field controls whether the data in the record can be automatically
"^DD",344.5,344.5,.06,21,2,0)
updated into the VistA database or if it must be manually reviewed
"^DD",344.5,344.5,.06,21,3,0)
and updated.
"^DD",344.5,344.5,.06,"DT")
3020603
"^DD",344.5,344.5,.07,0)
ERA TOTALS RECORD^P344.4'^RCY(344.4,^0;7^Q
"^DD",344.5,344.5,.07,3)
Enter the ERA record created by this message
"^DD",344.5,344.5,.07,21,0)
^.001^1^1^3021206^^
"^DD",344.5,344.5,.07,21,1,0)
This is the ERA totals batch entry that was created by this message.
"^DD",344.5,344.5,.07,"DT")
3021206
"^DD",344.5,344.5,.08,0)
EXCEPTION STATUS^S^0:NO EXCEPTION;1:EXCEPTION EXISTS;^0;8^Q
"^DD",344.5,344.5,.08,3)
Enter a 1 if this message should appear on the exception processing list.
"^DD",344.5,344.5,.08,21,0)
^^2^2^3020705^
"^DD",344.5,344.5,.08,21,1,0)
This is the indicator used to inlcude/exclude the record from the
"^DD",344.5,344.5,.08,21,2,0)
exception processing list.
"^DD",344.5,344.5,.08,"DT")
3021010
"^DD",344.5,344.5,.09,0)
MULTI SEQUENCE NUMBER^NJ10,0^^0;9^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",344.5,344.5,.09,1,0)
^.1
"^DD",344.5,344.5,.09,1,1,0)
344.5^AMSEQ
"^DD",344.5,344.5,.09,1,1,1)
S ^RCY(344.5,"AMSEQ",$E(X,1,30),DA)=""
"^DD",344.5,344.5,.09,1,1,2)
K ^RCY(344.5,"AMSEQ",$E(X,1,30),DA)
"^DD",344.5,344.5,.09,1,1,3)
Do not delete
"^DD",344.5,344.5,.09,1,1,"%D",0)
^^1^1^3020819^
"^DD",344.5,344.5,.09,1,1,"%D",1,0)
This cross reference is needed to associate all 'pieces' of an ERA
"^DD",344.5,344.5,.09,1,1,"DT")
3020819
"^DD",344.5,344.5,.09,3)
Type a Number between 1 and 9999999999, 0 Decimal Digits
"^DD",344.5,344.5,.09,21,0)
^^2^2^3020819^
"^DD",344.5,344.5,.09,21,1,0)
This number is used to associate ERA messages that must be broken up and
"^DD",344.5,344.5,.09,21,2,0)
sent in pieces from the FSC due to size constraints on the DMI Queues.
"^DD",344.5,344.5,.09,"DT")
3020819
"^DD",344.5,344.5,.1,0)
EXCEPTION CATEGORY^S^1:SUMMARY RECORD STORE ERROR;2:PARTIAL MESSAGE RECEIVED;3:EOB TRANSFERRED IN;4:TRANSMISSION STORE ERROR;5:ERROR STORING EOB TRANSFER IN;99:OTHER;^0;10^Q
"^DD",344.5,344.5,.1,3)
Enter the code that corresponds to the exception condition of the ERA/EOB record
"^DD",344.5,344.5,.1,21,0)
^.001^2^2^3021223^^^
"^DD",344.5,344.5,.1,21,1,0)
This is the specific exception that occurred to cause the ERA/EOB record to
"^DD",344.5,344.5,.1,21,2,0)
be placed in an exception status.
"^DD",344.5,344.5,.1,"DT")
3030117
"^DD",344.5,344.5,.11,0)
MAIL MESSAGE^F^^0;11^K:$L(X)>60!($L(X)<1) X
"^DD",344.5,344.5,.11,3)
Answer must be 1-60 characters in length.
"^DD",344.5,344.5,.11,21,0)
^.001^2^2^3030114^^^
"^DD",344.5,344.5,.11,21,1,0)
This is the list of message #s the ERA/EOB record was delivered in,
"^DD",344.5,344.5,.11,21,2,0)
separated by commas.
"^DD",344.5,344.5,.11,"DT")
3030114
"^DD",344.5,344.5,.12,0)
TRANSFERRED EOB RECEIVED FROM^F^^0;12^K:$L(X)>64!($L(X)<1) X
"^DD",344.5,344.5,.12,3)
Answer must be 1-64 characters in length.
"^DD",344.5,344.5,.12,21,0)
^^1^1^3021028^
"^DD",344.5,344.5,.12,21,1,0)
This is the name of the domain from which the transfer was received
"^DD",344.5,344.5,.12,"DT")
3030425
"^DD",344.5,344.5,.13,0)
REFERENCE AT OTHER SITE^F^^0;13^K:$L(X)>30!($L(X)<3)!'(X?1N.N1";"1N.N) X
"^DD",344.5,344.5,.13,3)
Answer must be 3-30 characters in length.
"^DD",344.5,344.5,.13,21,0)
^.001^4^4^3030115^^
"^DD",344.5,344.5,.13,21,1,0)
This is the field that holds the reference to the entry in file 344.4
"^DD",344.5,344.5,.13,21,2,0)
that correspond to this EOB message if it is a transfer EOB type.
"^DD",344.5,344.5,.13,21,3,0)
The format is ien of file 344 followed by a semicolon (;) followed by the
"^DD",344.5,344.5,.13,21,4,0)
ien of the entry in file 344.41.
"^DD",344.5,344.5,.13,"DT")
3030115
"^DD",344.5,344.5,.14,0)
EOB ACCEPTANCE SENT^S^0:NO;1:YES;^0;14^Q
"^DD",344.5,344.5,.14,3)
Enter 1 if this EOB has been confirmed as accepted to the sending site.
"^DD",344.5,344.5,.14,21,0)
^^3^3^3030117^
"^DD",344.5,344.5,.14,21,1,0)
This is a flag that indicates whether or not an EOB has been confirmed as
"^DD",344.5,344.5,.14,21,2,0)
being accepted by the sending site.  This is used so multiple attempts at
"^DD",344.5,344.5,.14,21,3,0)
filing do not send multiple confirmation records.
"^DD",344.5,344.5,.14,"DT")
3030117
"^DD",344.5,344.5,1,0)
DISPLAY DATA^344.51^^1;0
"^DD",344.5,344.5,1,21,0)
^^2^2^3021125^
"^DD",344.5,344.5,1,21,1,0)
This is the formatted data, extracted from the raw text of the message
"^DD",344.5,344.5,1,21,2,0)
that will be used to update VistA.  
"^DD",344.5,344.5,1,"DT")
3020604
"^DD",344.5,344.5,2,0)
RAW MESSAGE DATA^344.52^^2;0
"^DD",344.5,344.5,2,21,0)
^^2^2^3021125^
"^DD",344.5,344.5,2,21,1,0)
This is the actual text that was received at the site in the 
"^DD",344.5,344.5,2,21,2,0)
electronic transmission.
"^DD",344.5,344.5,3,0)
SEQUENCE RECEIVED^344.53A^^S;0
"^DD",344.5,344.5,3,21,0)
^^3^3^3020819^
"^DD",344.5,344.5,3,21,1,0)
This multiple field stores all the sequences received for an ERA
"^DD",344.5,344.5,3,21,2,0)
that was trasnmitted in 'pieces' due to the DMI queue's limit on the
"^DD",344.5,344.5,3,21,3,0)
size of messages that can be transmitted.
"^DD",344.5,344.5,3.01,0)
ERA PAYER NAME^F^^3;1^K:$L(X)>30!($L(X)<1) X
"^DD",344.5,344.5,3.01,3)
Answer must be 1-30 characters in length.
"^DD",344.5,344.5,3.01,21,0)
^^1^1^3030425^
"^DD",344.5,344.5,3.01,21,1,0)
This is the name of the payer as provided on the ERA transmission record.
"^DD",344.5,344.5,3.01,"DT")
3030425
"^DD",344.5,344.5,4,0)
BILL REFERENCE^344.54A^^B;0
"^DD",344.5,344.5,4,21,0)
^^1^1^3020820^
"^DD",344.5,344.5,4,21,1,0)
This is a list of the bills included in the ERA record.
"^DD",344.5,344.5,4,"DT")
3020924
"^DD",344.5,344.5,5,0)
EXCEPTION MESSAGES^344.55^^EX;0
"^DD",344.5,344.5,5,21,0)
^^1^1^3021125^
"^DD",344.5,344.5,5,21,1,0)
This is where the text of the error or exception condition is stored.
"^DD",344.5,344.51,0)
DISPLAY DATA SUB-FIELD^^.01^1
"^DD",344.5,344.51,0,"DT")
3020603
"^DD",344.5,344.51,0,"NM","DISPLAY DATA")

"^DD",344.5,344.51,0,"UP")
344.5
"^DD",344.5,344.51,.01,0)
DISPLAY DATA^WL^^0;1^Q
"^DD",344.5,344.51,.01,3)
Enter the data in the format appropriate to the message type.
"^DD",344.5,344.51,.01,21,0)
^.001^2^2^3020603^^
"^DD",344.5,344.51,.01,21,1,0)
This is the formatted data, extracted from the raw text of the message
"^DD",344.5,344.51,.01,21,2,0)
that will be used to update VistA.
"^DD",344.5,344.51,.01,"DT")
3020604
"^DD",344.5,344.52,0)
RAW MESSAGE DATA SUB-FIELD^^.01^1
"^DD",344.5,344.52,0,"DT")
3020603
"^DD",344.5,344.52,0,"NM","RAW MESSAGE DATA")

"^DD",344.5,344.52,0,"UP")
344.5
"^DD",344.5,344.52,.01,0)
RAW MESSAGE DATA^WL^^0;1^Q
"^DD",344.5,344.52,.01,3)
Enter the raw data that was received at the site
"^DD",344.5,344.52,.01,21,0)
^.001^2^2^3020603^^^
"^DD",344.5,344.52,.01,21,1,0)
This is the actual text that was received at the site in the
"^DD",344.5,344.52,.01,21,2,0)
electronic transmission.
"^DD",344.5,344.52,.01,"DT")
3020603
"^DD",344.5,344.53,0)
SEQUENCE RECEIVED SUB-FIELD^^.04^4
"^DD",344.5,344.53,0,"DT")
3030114
"^DD",344.5,344.53,0,"IX","B",344.53,.01)

"^DD",344.5,344.53,0,"NM","SEQUENCE RECEIVED")

"^DD",344.5,344.53,0,"UP")
344.5
"^DD",344.5,344.53,.01,0)
SEQUENCE RECEIVED^MNJ2,0^^0;1^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",344.5,344.53,.01,1,0)
^.1
"^DD",344.5,344.53,.01,1,1,0)
344.53^B
"^DD",344.5,344.53,.01,1,1,1)
S ^RCY(344.5,DA(1),"S","B",$E(X,1,30),DA)=""
"^DD",344.5,344.53,.01,1,1,2)
K ^RCY(344.5,DA(1),"S","B",$E(X,1,30),DA)
"^DD",344.5,344.53,.01,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",344.5,344.53,.01,21,0)
^.001^1^1^3020819^^
"^DD",344.5,344.53,.01,21,1,0)
This is the sequence # of the message 'piece' for the ERA received.
"^DD",344.5,344.53,.01,"DT")
3020819
"^DD",344.5,344.53,.02,0)
LAST SEQUENCE^S^0:NO;1:YES;^0;2^Q
"^DD",344.5,344.53,.02,3)
Enter 1 if this is the last sequence # expected
"^DD",344.5,344.53,.02,21,0)
^^2^2^3020820^
"^DD",344.5,344.53,.02,21,1,0)
This is the flag that indicates the last sequence # for a message
"^DD",344.5,344.53,.02,21,2,0)
transmitted in parts was received.
"^DD",344.5,344.53,.02,"DT")
3020820
"^DD",344.5,344.53,.03,0)
DATE/TIME RECEIVED^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",344.5,344.53,.03,3)
Enter the date/time this record was entered
"^DD",344.5,344.53,.03,21,0)
^^2^2^3020820^
"^DD",344.5,344.53,.03,21,1,0)
This is the date/time the sequence 'piece' of the ERA was received and
"^DD",344.5,344.53,.03,21,2,0)
stored at the site.
"^DD",344.5,344.53,.03,"DT")
3020820
"^DD",344.5,344.53,.04,0)
MAIL MESSAGE^NJ15,0^^0;4^K:+X'=X!(X>999999999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",344.5,344.53,.04,3)
Type a Number between 1 and 999999999999999, 0 Decimal Digits
"^DD",344.5,344.53,.04,21,0)
^.001^1^1^3030114^^
"^DD",344.5,344.53,.04,21,1,0)
This is the number of the mail message the sequence was received in.
"^DD",344.5,344.53,.04,"DT")
3030114
"^DD",344.5,344.54,0)
BILL REFERENCE SUB-FIELD^^.02^2
"^DD",344.5,344.54,0,"DT")
3020820
"^DD",344.5,344.54,0,"IX","B",344.54,.01)

"^DD",344.5,344.54,0,"NM","BILL REFERENCE")

"^DD",344.5,344.54,0,"UP")
344.5
"^DD",344.5,344.54,.01,0)
BILL REFERENCE^MF^^0;1^K:$L(X)>20!($L(X)<1) X
"^DD",344.5,344.54,.01,1,0)
^.1
"^DD",344.5,344.54,.01,1,1,0)
344.54^B
"^DD",344.5,344.54,.01,1,1,1)
S ^RCY(344.5,DA(1),"B","B",$E(X,1,30),DA)=""
"^DD",344.5,344.54,.01,1,1,2)
K ^RCY(344.5,DA(1),"B","B",$E(X,1,30),DA)
"^DD",344.5,344.54,.01,3)
Answer must be 1-20 characters in length.
"^DD",344.5,344.54,.01,21,0)
^.001^1^1^3020820^^
"^DD",344.5,344.54,.01,21,1,0)
This is a bill included in this ERA record.
"^DD",344.5,344.54,.01,"DT")
3020924
"^DD",344.5,344.54,.02,0)
FOUND IN AR BILL FILE^S^0:NO;1:YES;^0;2^Q
"^DD",344.5,344.54,.02,3)
Enter a 1 if this bill can be found in the VistA AR bill file.
"^DD",344.5,344.54,.02,21,0)
^^1^1^3020820^
"^DD",344.5,344.54,.02,21,1,0)
This indicates whether or not the referenced bill exists at the VistA site.
"^DD",344.5,344.54,.02,"DT")
3020923
"^DD",344.5,344.55,0)
EXCEPTION MESSAGES SUB-FIELD^^.01^1
"^DD",344.5,344.55,0,"DT")
3021017
"^DD",344.5,344.55,0,"NM","EXCEPTION MESSAGES")

"^DD",344.5,344.55,0,"UP")
344.5
"^DD",344.5,344.55,.01,0)
EXCEPTION MESSAGES^WL^^0;1^Q
"^DD",344.5,344.55,.01,3)
Enter a description of the exception existing for this ERA record.
"^DD",344.5,344.55,.01,21,0)
^.001^1^1^3021017^^
"^DD",344.5,344.55,.01,21,1,0)
This is the free text explanation of any exceptions found for this record.
"^DD",344.5,344.55,.01,"DT")
3021017
"^DD",347.1,347.1,0)
FIELD^^.02^2
"^DD",347.1,347.1,0,"DT")
2940616
"^DD",347.1,347.1,0,"IX","B",347.1,.01)

"^DD",347.1,347.1,0,"NM","AR FMS DOCUMENT TYPE")

"^DD",347.1,347.1,0,"PT",347,.02)

"^DD",347.1,347.1,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",347.1,347.1,.01,1,0)
^.1
"^DD",347.1,347.1,.01,1,1,0)
347.1^B
"^DD",347.1,347.1,.01,1,1,1)
S ^RC(347.1,"B",$E(X,1,30),DA)=""
"^DD",347.1,347.1,.01,1,1,2)
K ^RC(347.1,"B",$E(X,1,30),DA)
"^DD",347.1,347.1,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",347.1,347.1,.01,21,0)
^^1^1^2941019^
"^DD",347.1,347.1,.01,21,1,0)
Defines the AR FMS DOCUMENT type.
"^DD",347.1,347.1,.02,0)
ABBREVIATION^RF^^0;2^K:$L(X)>2!($L(X)<2) X
"^DD",347.1,347.1,.02,3)
Answer must be 2 characters in length.
"^DD",347.1,347.1,.02,21,0)
^^1^1^2941019^
"^DD",347.1,347.1,.02,21,1,0)
Used to identify FMS document type.
"^DD",347.1,347.1,.02,"DT")
2940616
"^DD",347.4,347.4,0)
FIELD^^1.01^8
"^DD",347.4,347.4,0,"DDA")
N
"^DD",347.4,347.4,0,"DT")
3030911
"^DD",347.4,347.4,0,"ID",1.01)
W:$D(^(1)) "   ",$P(^(1),U,1)
"^DD",347.4,347.4,0,"IX","ACR",347.4,.03)

"^DD",347.4,347.4,0,"IX","AWR",347.4,.04)

"^DD",347.4,347.4,0,"IX","B",347.4,.01)

"^DD",347.4,347.4,0,"NM","AR/FMS DOCUMENTS")

"^DD",347.4,347.4,0,"VRPK")
PRCA
"^DD",347.4,347.4,.01,0)
TRANS TYPE^RF^^0;1^K:$L(X)>2!($L(X)<2)!'(X?2N) X
"^DD",347.4,347.4,.01,1,0)
^.1
"^DD",347.4,347.4,.01,1,1,0)
347.4^B
"^DD",347.4,347.4,.01,1,1,1)
S ^PRCA(347.4,"B",$E(X,1,30),DA)=""
"^DD",347.4,347.4,.01,1,1,2)
K ^PRCA(347.4,"B",$E(X,1,30),DA)
"^DD",347.4,347.4,.01,3)
Answer must be 2 characters in length.
"^DD",347.4,347.4,.01,21,0)
^^1^1^2941209^
"^DD",347.4,347.4,.01,21,1,0)
This field contains the trans code sent to FMS.
"^DD",347.4,347.4,.01,"DT")
2941209
"^DD",347.4,347.4,.02,0)
DOCUMENT TYPE^S^1:BILLING DOCUMENT (DETAIL);2:CASH RECEIPT (DEATIL);3:CASH RECEIPT (SUMMARY);4:OVER PAYMENT;5:WRITE OFF (DETAIL);6:WRITE OFF (SUMMARY);7:STANDARD VOUCHER (SUMMARY);^0;2^Q
"^DD",347.4,347.4,.02,21,0)
^^1^1^2941209^
"^DD",347.4,347.4,.02,21,1,0)
This field is the document type associated with the trans type
"^DD",347.4,347.4,.02,"DT")
2941209
"^DD",347.4,347.4,.03,0)
CR TYPE^F^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>2!($L(X)<2)!'(X?2N) X
"^DD",347.4,347.4,.03,1,0)
^.1
"^DD",347.4,347.4,.03,1,1,0)
347.4^ACR
"^DD",347.4,347.4,.03,1,1,1)
S ^PRCA(347.4,"ACR",$E(X,1,30),DA)=""
"^DD",347.4,347.4,.03,1,1,2)
K ^PRCA(347.4,"ACR",$E(X,1,30),DA)
"^DD",347.4,347.4,.03,1,1,"%D",0)
^^1^1^2950110^
"^DD",347.4,347.4,.03,1,1,"%D",1,0)
This x-ref is used to look-up CR documents
"^DD",347.4,347.4,.03,1,1,"DT")
2950110
"^DD",347.4,347.4,.03,3)
Enter 2 digit CR trans code
"^DD",347.4,347.4,.03,21,0)
^^1^1^2941209^
"^DD",347.4,347.4,.03,21,1,0)
This field determines whic type of CR trans code is sent to FMS.
"^DD",347.4,347.4,.03,"DT")
2950110
"^DD",347.4,347.4,.04,0)
WR TYPE^F^^0;4^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>2!($L(X)<2)!'(X?2N) X
"^DD",347.4,347.4,.04,1,0)
^.1
"^DD",347.4,347.4,.04,1,1,0)
347.4^AWR
"^DD",347.4,347.4,.04,1,1,1)
S ^PRCA(347.4,"AWR",$E(X,1,30),DA)=""
"^DD",347.4,347.4,.04,1,1,2)
K ^PRCA(347.4,"AWR",$E(X,1,30),DA)
"^DD",347.4,347.4,.04,1,1,"%D",0)
^^1^1^2950110^
"^DD",347.4,347.4,.04,1,1,"%D",1,0)
This x-ref used to look up WR documents
"^DD",347.4,347.4,.04,1,1,"DT")
2950110
"^DD",347.4,347.4,.04,3)
Enter 2 digit write off tran type
"^DD",347.4,347.4,.04,21,0)
^^2^2^2941209^
"^DD",347.4,347.4,.04,21,1,0)
This field determines which type of trans code is sent to FMS for a WRITE
"^DD",347.4,347.4,.04,21,2,0)
OFF document.
"^DD",347.4,347.4,.04,"DT")
2950110
"^DD",347.4,347.4,.05,0)
BD TYPE^F^^0;5^K:$L(X)>2!($L(X)<2)!'(X?2N) X
"^DD",347.4,347.4,.05,3)
Answer must be 2 characters in length.
"^DD",347.4,347.4,.05,"DT")
2941209
"^DD",347.4,347.4,.06,0)
TYPE^S^1:EMPLOYEE/EX-EMPLOYEE;2:VENDOR;3:ALL;^0;6^Q
"^DD",347.4,347.4,.06,21,0)
^^2^2^2950412^
"^DD",347.4,347.4,.06,21,1,0)
This field is used as a screen to limit selection of document type based
"^DD",347.4,347.4,.06,21,2,0)
on category of bill.
"^DD",347.4,347.4,.06,"DT")
2950412
"^DD",347.4,347.4,.07,0)
TR TYPE^F^^0;7^K:$L(X)>2!($L(X)<2)!'(X?2N) X
"^DD",347.4,347.4,.07,3)
Answer must be 2 characters in length.
"^DD",347.4,347.4,.07,21,0)
^^1^1^3030911^
"^DD",347.4,347.4,.07,21,1,0)
The 2 digit FMS Code to be sent for TR documents.
"^DD",347.4,347.4,.07,"DT")
3030911
"^DD",347.4,347.4,1.01,0)
DESCRIPTION^F^^1;1^K:$L(X)>30!($L(X)<3) X
"^DD",347.4,347.4,1.01,3)
Answer must be 3-30 characters in length.
"^DD",347.4,347.4,1.01,21,0)
^^1^1^2941209^
"^DD",347.4,347.4,1.01,21,1,0)
This field describes the use of the trans code.
"^DD",347.4,347.4,1.01,"DT")
2941209
"^DIC",341.1,341.1,0)
AR EVENT TYPE^341.1
"^DIC",341.1,341.1,0,"GL")
^RC(341.1,
"^DIC",341.1,341.1,"%D",0)
^^6^6^2941108^^^^
"^DIC",341.1,341.1,"%D",1,0)
This file is a table that allows the AR package to manage events throughout
"^DIC",341.1,341.1,"%D",2,0)
the AR package.  This file MUST NEVER be edited by sites or any users.
"^DIC",341.1,341.1,"%D",3,0)
By editing this file, data corruption can occur and functionality in the
"^DIC",341.1,341.1,"%D",4,0)
AR package may be compromised.
"^DIC",341.1,341.1,"%D",5,0)
 
"^DIC",341.1,341.1,"%D",6,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",341.1,"B","AR EVENT TYPE",341.1)

"^DIC",344.3,344.3,0)
EDI LOCKBOX DEPOSIT^344.3
"^DIC",344.3,344.3,0,"GL")
^RCY(344.3,
"^DIC",344.3,344.3,"%D",0)
^1.001^3^3^3030128^^^^
"^DIC",344.3,344.3,"%D",1,0)
This file is used to store EFT payment data received to allow the site to
"^DIC",344.3,344.3,"%D",2,0)
record the amount of the daily EDI Lockbox deposit to treasury that belongs
"^DIC",344.3,344.3,"%D",3,0)
to their site.
"^DIC",344.3,"B","EDI LOCKBOX DEPOSIT",344.3)

"^DIC",344.31,344.31,0)
EDI THIRD PARTY EFT DETAIL^344.31
"^DIC",344.31,344.31,0,"GL")
^RCY(344.31,
"^DIC",344.31,344.31,"%D",0)
^^3^3^3030318^
"^DIC",344.31,344.31,"%D",1,0)
This file is used to store each individual payment from a single payer
"^DIC",344.31,344.31,"%D",2,0)
made to the site using Electronic Funds Transfer and the EDI 3rd Party
"^DIC",344.31,344.31,"%D",3,0)
Lockbox system in VistA.
"^DIC",344.31,"B","EDI THIRD PARTY EFT DETAIL",344.31)

"^DIC",344.4,344.4,0)
ELECTRONIC REMITTANCE ADVICE^344.4
"^DIC",344.4,344.4,0,"GL")
^RCY(344.4,
"^DIC",344.4,344.4,"%",0)
^1.005^^0
"^DIC",344.4,344.4,"%D",0)
^1.001^4^4^3021205^^^^
"^DIC",344.4,344.4,"%D",1,0)
This file holds the ERA (Electronic Remittance Advice) information that
"^DIC",344.4,344.4,"%D",2,0)
is received electronically.  It holds the summary for each individual EOB
"^DIC",344.4,344.4,"%D",3,0)
(Explanation of Benefits) that comprise the ERA.  Individual EOB detail
"^DIC",344.4,344.4,"%D",4,0)
data is found in file 361.1 in Integrated Billing.
"^DIC",344.4,"B","ELECTRONIC REMITTANCE ADVICE",344.4)

"^DIC",344.49,344.49,0)
EDI LOCKBOX EOB WORKLIST^344.49
"^DIC",344.49,344.49,0,"GL")
^RCY(344.49,
"^DIC",344.49,344.49,"%D",0)
^^2^2^3030204^
"^DIC",344.49,344.49,"%D",1,0)
This file contains the data that will be used to auto-create a receipt
"^DIC",344.49,344.49,"%D",2,0)
from data received via the EDI Lockbox system for ERAs.
"^DIC",344.49,"B","EDI LOCKBOX EOB WORKLIST",344.49)

"^DIC",344.5,344.5,0)
AR EDI LOCKBOX MESSAGES^344.5
"^DIC",344.5,344.5,0,"GL")
^RCY(344.5,
"^DIC",344.5,344.5,"%D",0)
^1.001^5^5^3021205^^^
"^DIC",344.5,344.5,"%D",1,0)
This file receives the raw data from electronic ERAs and EOBs.  Once filed
"^DIC",344.5,344.5,"%D",2,0)
here, the records are verified and sent to the permanent file where the
"^DIC",344.5,344.5,"%D",3,0)
summaries are kept (#344.4) and the detail is stored in Integrated
"^DIC",344.5,344.5,"%D",4,0)
Billing's file #361.1.  Once permanently filed, the raw data is deleted
"^DIC",344.5,344.5,"%D",5,0)
from this file.
"^DIC",344.5,"B","AR EDI LOCKBOX MESSAGES",344.5)

"^DIC",347.1,347.1,0)
AR FMS DOCUMENT TYPE^347.1
"^DIC",347.1,347.1,0,"GL")
^RC(347.1,
"^DIC",347.1,347.1,"%D",0)
^^8^8^2941115^^
"^DIC",347.1,347.1,"%D",1,0)
Information that is transmitted to the FMS System are sent via
"^DIC",347.1,347.1,"%D",2,0)
records called 'documents'.  Each FMS document has a field called
"^DIC",347.1,347.1,"%D",3,0)
'type' that describe the information or transaction being transmitted.
"^DIC",347.1,347.1,"%D",4,0)
When the Accounts Receivable system transmits documents, certain parameters
"^DIC",347.1,347.1,"%D",5,0)
are stored in this field that help define the layout of the
"^DIC",347.1,347.1,"%D",6,0)
document.
"^DIC",347.1,347.1,"%D",7,0)
 
"^DIC",347.1,347.1,"%D",8,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",347.1,"B","AR FMS DOCUMENT TYPE",347.1)

"^DIC",347.4,347.4,0)
AR/FMS DOCUMENTS^347.4I
"^DIC",347.4,347.4,0,"GL")
^PRCA(347.4,
"^DIC",347.4,347.4,"%D",0)
^^7^7^2941209^
"^DIC",347.4,347.4,"%D",1,0)
This file contains the Transaction codes sent to FMS and the trans code
"^DIC",347.4,347.4,"%D",2,0)
for related document.  IE.  BD 01 is sent to FMS, any other document that
"^DIC",347.4,347.4,"%D",3,0)
references the BD 01 must contain a related tran code.
"^DIC",347.4,347.4,"%D",4,0)

"^DIC",347.4,347.4,"%D",5,0)
BD 01 requires CR 05 and WR 01.
"^DIC",347.4,347.4,"%D",6,0)

"^DIC",347.4,347.4,"%D",7,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",347.4,"B","AR/FMS DOCUMENTS",347.4)

**INSTALL NAME**
IB*2.0*135
"BLD",4319,0)
IB*2.0*135^INTEGRATED BILLING^0^3031007^y
"BLD",4319,1,0)
^9.61A^6^6^3030604^^^^
"BLD",4319,1,1,0)
Third Party EDI Lockbox patch IB*2.0*135 (Integrated Billing component)
"BLD",4319,1,2,0)
 
"BLD",4319,1,3,0)
This patch is being released as part of a build that also includes patch
"BLD",4319,1,4,0)
PRCA*4.5*173.  Please refer to the patch description in the National Patch
"BLD",4319,1,5,0)
module and the users documentation for patch PRCA*4.5*173 for detailed
"BLD",4319,1,6,0)
information about this patch.
"BLD",4319,4,0)
^9.64PA^364.7^3
"BLD",4319,4,361.1,0)
361.1
"BLD",4319,4,361.1,2,0)
^9.641^361.1152^6
"BLD",4319,4,361.1,2,361.1,0)
EXPLANATION OF BENEFITS  (File-top level)
"BLD",4319,4,361.1,2,361.1,1,0)
^9.6411^.07^15
"BLD",4319,4,361.1,2,361.1,1,.04,0)
EOB TYPE
"BLD",4319,4,361.1,2,361.1,1,.05,0)
ENTRY DATE/TIME
"BLD",4319,4,361.1,2,361.1,1,.06,0)
EOB DATE/TIME
"BLD",4319,4,361.1,2,361.1,1,.07,0)
TRACE NUMBER
"BLD",4319,4,361.1,2,361.1,1,.21,0)
CLAIM STATUS CODE
"BLD",4319,4,361.1,2,361.1,1,7.01,0)
TRANSFERRED IN
"BLD",4319,4,361.1,2,361.1,1,20,0)
MESSAGE STORAGE ERRORS
"BLD",4319,4,361.1,2,361.1,1,25.01,0)
PAYER CONTACT NAME
"BLD",4319,4,361.1,2,361.1,1,25.02,0)
CONTACT NUMBER 1
"BLD",4319,4,361.1,2,361.1,1,25.03,0)
CONTACT TYPE 1
"BLD",4319,4,361.1,2,361.1,1,25.04,0)
CONTACT NUMBER 2
"BLD",4319,4,361.1,2,361.1,1,25.05,0)
CONTACT TYPE 2
"BLD",4319,4,361.1,2,361.1,1,25.06,0)
CONTACT NUMBER 3
"BLD",4319,4,361.1,2,361.1,1,25.07,0)
CONTACT TYPE 3
"BLD",4319,4,361.1,2,361.1,1,100.05,0)
MESSAGE CHECKSUM
"BLD",4319,4,361.1,2,361.111,0)
REASONS  (sub-file)
"BLD",4319,4,361.1,2,361.111,1,0)
^9.6411^.02^1
"BLD",4319,4,361.1,2,361.111,1,.02,0)
AMOUNT
"BLD",4319,4,361.1,2,361.115,0)
835 LINE LEVEL ADJUSTMENTS  (sub-file)
"BLD",4319,4,361.1,2,361.115,1,0)
^9.6411^.04^7
"BLD",4319,4,361.1,2,361.115,1,.03,0)
AMOUNT PAID
"BLD",4319,4,361.1,2,361.115,1,.04,0)
PROCEDURE
"BLD",4319,4,361.1,2,361.115,1,.16,0)
SERVICE DATE FROM
"BLD",4319,4,361.1,2,361.115,1,.17,0)
SERVICE DATE TO
"BLD",4319,4,361.1,2,361.115,1,.18,0)
PROCEDURE TYPE
"BLD",4319,4,361.1,2,361.115,1,3.01,0)
LINE ITEM REMARK CODE
"BLD",4319,4,361.1,2,361.115,1,3.02,0)
LINE ITEM REMARK CODE TEXT
"BLD",4319,4,361.1,2,361.11511,0)
REASONS  (sub-file)
"BLD",4319,4,361.1,2,361.11511,1,0)
^9.6411^.02^1
"BLD",4319,4,361.1,2,361.11511,1,.02,0)
AMOUNT
"BLD",4319,4,361.1,2,361.1152,0)
PAID MODIFIERS  (sub-file)
"BLD",4319,4,361.1,2,361.1152,1,0)
^9.6411^.01^1
"BLD",4319,4,361.1,2,361.1152,1,.01,0)
PAID MODIFIERS
"BLD",4319,4,361.1,2,361.18,0)
AR AMOUNTS DISTRIBUTION  (sub-file)
"BLD",4319,4,361.1,2,361.18,1,0)
^9.6411^^0
"BLD",4319,4,361.1,222)
y^n^p^^^^n
"BLD",4319,4,364.7,0)
364.7
"BLD",4319,4,364.7,222)
n^n^f^^y^^y^o^n
"BLD",4319,4,364.7,224)
I +Y=181!(+Y=182)
"BLD",4319,4,399.3,0)
399.3
"BLD",4319,4,399.3,2,0)
^9.641^399.3^1
"BLD",4319,4,399.3,2,399.3,0)
RATE TYPE  (File-top level)
"BLD",4319,4,399.3,2,399.3,1,0)
^9.6411^.11^1
"BLD",4319,4,399.3,2,399.3,1,.11,0)
BILL RESULTING FROM
"BLD",4319,4,399.3,222)
y^y^p^^^^n
"BLD",4319,4,"APDD",361.1,361.1)

"BLD",4319,4,"APDD",361.1,361.1,.04)

"BLD",4319,4,"APDD",361.1,361.1,.05)

"BLD",4319,4,"APDD",361.1,361.1,.06)

"BLD",4319,4,"APDD",361.1,361.1,.07)

"BLD",4319,4,"APDD",361.1,361.1,.21)

"BLD",4319,4,"APDD",361.1,361.1,7.01)

"BLD",4319,4,"APDD",361.1,361.1,20)

"BLD",4319,4,"APDD",361.1,361.1,25.01)

"BLD",4319,4,"APDD",361.1,361.1,25.02)

"BLD",4319,4,"APDD",361.1,361.1,25.03)

"BLD",4319,4,"APDD",361.1,361.1,25.04)

"BLD",4319,4,"APDD",361.1,361.1,25.05)

"BLD",4319,4,"APDD",361.1,361.1,25.06)

"BLD",4319,4,"APDD",361.1,361.1,25.07)

"BLD",4319,4,"APDD",361.1,361.1,100.05)

"BLD",4319,4,"APDD",361.1,361.111)

"BLD",4319,4,"APDD",361.1,361.111,.02)

"BLD",4319,4,"APDD",361.1,361.115)

"BLD",4319,4,"APDD",361.1,361.115,.03)

"BLD",4319,4,"APDD",361.1,361.115,.04)

"BLD",4319,4,"APDD",361.1,361.115,.16)

"BLD",4319,4,"APDD",361.1,361.115,.17)

"BLD",4319,4,"APDD",361.1,361.115,.18)

"BLD",4319,4,"APDD",361.1,361.115,3.01)

"BLD",4319,4,"APDD",361.1,361.115,3.02)

"BLD",4319,4,"APDD",361.1,361.11511)

"BLD",4319,4,"APDD",361.1,361.11511,.02)

"BLD",4319,4,"APDD",361.1,361.1152)

"BLD",4319,4,"APDD",361.1,361.1152,.01)

"BLD",4319,4,"APDD",361.1,361.18)

"BLD",4319,4,"APDD",399.3,399.3)

"BLD",4319,4,"APDD",399.3,399.3,.11)

"BLD",4319,4,"B",361.1,361.1)

"BLD",4319,4,"B",364.7,364.7)

"BLD",4319,4,"B",399.3,399.3)

"BLD",4319,"ABPKG")
n
"BLD",4319,"INI")
IBY135PR
"BLD",4319,"KRN",0)
^9.67PA^8989.52^19
"BLD",4319,"KRN",.4,0)
.4
"BLD",4319,"KRN",.4,"NM",0)
^9.68A^^
"BLD",4319,"KRN",.401,0)
.401
"BLD",4319,"KRN",.402,0)
.402
"BLD",4319,"KRN",.403,0)
.403
"BLD",4319,"KRN",.5,0)
.5
"BLD",4319,"KRN",.84,0)
.84
"BLD",4319,"KRN",3.6,0)
3.6
"BLD",4319,"KRN",3.8,0)
3.8
"BLD",4319,"KRN",9.2,0)
9.2
"BLD",4319,"KRN",9.8,0)
9.8
"BLD",4319,"KRN",9.8,"NM",0)
^9.68A^17^15
"BLD",4319,"KRN",9.8,"NM",1,0)
IBCECSA5^^0^B46215470
"BLD",4319,"KRN",9.8,"NM",2,0)
IBCECSA6^^0^B75283312
"BLD",4319,"KRN",9.8,"NM",4,0)
IBCEOB1^^0^B56328849
"BLD",4319,"KRN",9.8,"NM",5,0)
IBCEOB^^0^B71751656
"BLD",4319,"KRN",9.8,"NM",6,0)
IBCEOBAR^^0^B1094956
"BLD",4319,"KRN",9.8,"NM",7,0)
IBECEA^^0^B10792926
"BLD",4319,"KRN",9.8,"NM",8,0)
IBCEST^^0^B51376525
"BLD",4319,"KRN",9.8,"NM",9,0)
IBJTBA^^0^B46844175
"BLD",4319,"KRN",9.8,"NM",10,0)
IBJTBA1^^0^B18556768
"BLD",4319,"KRN",9.8,"NM",11,0)
IBCEOB0^^0^B75930442
"BLD",4319,"KRN",9.8,"NM",12,0)
IBCEMU1^^0^B1328522
"BLD",4319,"KRN",9.8,"NM",14,0)
IBCE835^^0^B35915356
"BLD",4319,"KRN",9.8,"NM",15,0)
IBCE835A^^0^B6339242
"BLD",4319,"KRN",9.8,"NM",16,0)
IBCEF22^^0^B50754397
"BLD",4319,"KRN",9.8,"NM",17,0)
IBCECSA7^^0^B7222380
"BLD",4319,"KRN",9.8,"NM","B","IBCE835",14)

"BLD",4319,"KRN",9.8,"NM","B","IBCE835A",15)

"BLD",4319,"KRN",9.8,"NM","B","IBCECSA5",1)

"BLD",4319,"KRN",9.8,"NM","B","IBCECSA6",2)

"BLD",4319,"KRN",9.8,"NM","B","IBCECSA7",17)

"BLD",4319,"KRN",9.8,"NM","B","IBCEF22",16)

"BLD",4319,"KRN",9.8,"NM","B","IBCEMU1",12)

"BLD",4319,"KRN",9.8,"NM","B","IBCEOB",5)

"BLD",4319,"KRN",9.8,"NM","B","IBCEOB0",11)

"BLD",4319,"KRN",9.8,"NM","B","IBCEOB1",4)

"BLD",4319,"KRN",9.8,"NM","B","IBCEOBAR",6)

"BLD",4319,"KRN",9.8,"NM","B","IBCEST",8)

"BLD",4319,"KRN",9.8,"NM","B","IBECEA",7)

"BLD",4319,"KRN",9.8,"NM","B","IBJTBA",9)

"BLD",4319,"KRN",9.8,"NM","B","IBJTBA1",10)

"BLD",4319,"KRN",19,0)
19
"BLD",4319,"KRN",19,"NM",0)
^9.68A^^
"BLD",4319,"KRN",19.1,0)
19.1
"BLD",4319,"KRN",101,0)
101
"BLD",4319,"KRN",101,"NM",0)
^9.68A^^0
"BLD",4319,"KRN",409.61,0)
409.61
"BLD",4319,"KRN",409.61,"NM",0)
^9.68A^^0
"BLD",4319,"KRN",771,0)
771
"BLD",4319,"KRN",870,0)
870
"BLD",4319,"KRN",8989.51,0)
8989.51
"BLD",4319,"KRN",8989.52,0)
8989.52
"BLD",4319,"KRN",8994,0)
8994
"BLD",4319,"KRN","B",.4,.4)

"BLD",4319,"KRN","B",.401,.401)

"BLD",4319,"KRN","B",.402,.402)

"BLD",4319,"KRN","B",.403,.403)

"BLD",4319,"KRN","B",.5,.5)

"BLD",4319,"KRN","B",.84,.84)

"BLD",4319,"KRN","B",3.6,3.6)

"BLD",4319,"KRN","B",3.8,3.8)

"BLD",4319,"KRN","B",9.2,9.2)

"BLD",4319,"KRN","B",9.8,9.8)

"BLD",4319,"KRN","B",19,19)

"BLD",4319,"KRN","B",19.1,19.1)

"BLD",4319,"KRN","B",101,101)

"BLD",4319,"KRN","B",409.61,409.61)

"BLD",4319,"KRN","B",771,771)

"BLD",4319,"KRN","B",870,870)

"BLD",4319,"KRN","B",8989.51,8989.51)

"BLD",4319,"KRN","B",8989.52,8989.52)

"BLD",4319,"KRN","B",8994,8994)

"BLD",4319,"QUES",0)
^9.62^^
"BLD",4319,"REQB",0)
^9.611^3^3
"BLD",4319,"REQB",1,0)
IB*2.0*197^2
"BLD",4319,"REQB",2,0)
IB*2.0*199^2
"BLD",4319,"REQB",3,0)
IB*2.0*210^2
"BLD",4319,"REQB","B","IB*2.0*197",1)

"BLD",4319,"REQB","B","IB*2.0*199",2)

"BLD",4319,"REQB","B","IB*2.0*210",3)

"DATA",364.7,181,0)
128^N^5^^^^N
"DATA",364.7,181,1)
N Z S Z=0 F  S Z=$O(IBXSAVE("INPT",Z)) Q:'Z  S:$P(IBXSAVE("INPT",Z),U,9)'="" IBXSAVE("PMOD",Z)=$P(IBXSAVE("INPT",Z),U,9),IBXDATA(Z)=$P(IBXSAVE("PMOD",Z),",")
"DATA",364.7,181,3,0)
^364.73^1^1^3001005^^^^
"DATA",364.7,181,3,1,0)
Save the data element in the IBXSAVE("PMOD") array for later use.
"DATA",364.7,182,0)
129^N^5^^^^N
"DATA",364.7,182,1)
N Z S Z=0 F  S Z=$O(IBXSAVE("PMOD",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE("PMOD",Z),",",2) I '$O(IBXSAVE("PMOD",Z)) K IBXSAVE("PMOD")
"DATA",364.7,182,3,0)
^364.73^2^2^3001005^^^^
"DATA",364.7,182,3,1,0)
This data element relies on the existence of the variable IBXSAVE("PMOD")
"DATA",364.7,182,3,2,0)
previously extracted.
"FIA",361.1)
EXPLANATION OF BENEFITS
"FIA",361.1,0)
^IBM(361.1,
"FIA",361.1,0,0)
361.1PI
"FIA",361.1,0,1)
y^n^p^^^^n
"FIA",361.1,0,10)

"FIA",361.1,0,11)

"FIA",361.1,0,"RLRO")

"FIA",361.1,0,"VR")
2.0^IB
"FIA",361.1,361.1)
1
"FIA",361.1,361.1,.04)

"FIA",361.1,361.1,.05)

"FIA",361.1,361.1,.06)

"FIA",361.1,361.1,.07)

"FIA",361.1,361.1,.21)

"FIA",361.1,361.1,7.01)

"FIA",361.1,361.1,8)

"FIA",361.1,361.1,20)

"FIA",361.1,361.1,25.01)

"FIA",361.1,361.1,25.02)

"FIA",361.1,361.1,25.03)

"FIA",361.1,361.1,25.04)

"FIA",361.1,361.1,25.05)

"FIA",361.1,361.1,25.06)

"FIA",361.1,361.1,25.07)

"FIA",361.1,361.1,100.05)

"FIA",361.1,361.111)
1
"FIA",361.1,361.111,.02)

"FIA",361.1,361.115)
1
"FIA",361.1,361.115,.03)

"FIA",361.1,361.115,.04)

"FIA",361.1,361.115,.16)

"FIA",361.1,361.115,.17)

"FIA",361.1,361.115,.18)

"FIA",361.1,361.115,2)

"FIA",361.1,361.115,3.01)

"FIA",361.1,361.115,3.02)

"FIA",361.1,361.11511)
1
"FIA",361.1,361.11511,.02)

"FIA",361.1,361.1152)
1
"FIA",361.1,361.1152,.01)

"FIA",361.1,361.12)
0
"FIA",361.1,361.18)
0
"FIA",364.7)
IB FORM FIELD CONTENT
"FIA",364.7,0)
^IBA(364.7,
"FIA",364.7,0,0)
364.7IP
"FIA",364.7,0,1)
n^n^f^^y^^y^o^n
"FIA",364.7,0,10)

"FIA",364.7,0,11)
I +Y=181!(+Y=182)
"FIA",364.7,0,"RLRO")

"FIA",364.7,0,"VR")
2.0^IB
"FIA",364.7,364.7)
0
"FIA",364.7,364.73)
0
"FIA",399.3)
RATE TYPE
"FIA",399.3,0)
^DGCR(399.3,
"FIA",399.3,0,0)
399.3I
"FIA",399.3,0,1)
y^y^p^^^^n
"FIA",399.3,0,10)

"FIA",399.3,0,11)

"FIA",399.3,0,"RLRO")

"FIA",399.3,0,"VR")
2.0^IB
"FIA",399.3,399.3)
1
"FIA",399.3,399.3,.11)

"INI")
IBY135PR
"IX",361.1,361.1,"ABD",0)
361.1^ABD^This xref provides an index by bill # and EOB date^R^^R^IR^I^361.1^^^^^S
"IX",361.1,361.1,"ABD",1)
S ^IBM(361.1,"ABD",X2(1),X2(2),DA)=""
"IX",361.1,361.1,"ABD",1.4)
I X2(1)=""!(X2(2)="") S X=0
"IX",361.1,361.1,"ABD",2)
K ^IBM(361.1,"ABD",X1(1),X1(2),DA)
"IX",361.1,361.1,"ABD",2.4)
I X1(1)=""!(X1(2)="") S X=0
"IX",361.1,361.1,"ABD",2.5)
K ^IBM(361.1,"ABD")
"IX",361.1,361.1,"ABD",11.1,0)
^.114IA^2^2
"IX",361.1,361.1,"ABD",11.1,1,0)
1^F^361.1^.01^^1^F
"IX",361.1,361.1,"ABD",11.1,2,0)
2^F^361.1^.06^^2^F
"IX",361.1,361.1,"ATIN",0)
361.1^ATIN^Xref by date filed and transferred from^R^^R^IR^I^361.1^^^^^S
"IX",361.1,361.1,"ATIN",1)
S ^IBM(361.1,"ATIN",X(1),$E(X(2),1,30),DA)=""
"IX",361.1,361.1,"ATIN",2)
K ^IBM(361.1,"ATIN",X(1),$E(X(2),1,30),DA)
"IX",361.1,361.1,"ATIN",2.5)
K ^IBM(361.1,"ATIN")
"IX",361.1,361.1,"ATIN",11.1,0)
^.114IA^2^2
"IX",361.1,361.1,"ATIN",11.1,1,0)
1^F^361.1^.05^^1^F
"IX",361.1,361.1,"ATIN",11.1,1,3)

"IX",361.1,361.1,"ATIN",11.1,2,0)
2^F^361.1^7.01^30^2^F
"IX",361.1,361.1,"ATIN",11.1,2,3)

"IX",361.1,361.1,"ATRID",0)
361.1^ATRID^Xref by bank trace # and ins co id for uniqueness^R^^R^IR^I^361.1^^^^^S
"IX",361.1,361.1,"ATRID",1)
S ^IBM(361.1,"ATRID",$E(X(1),1,30),$E(X(2),1,30),DA)=""
"IX",361.1,361.1,"ATRID",1.4)
I 'X(3)
"IX",361.1,361.1,"ATRID",2)
K ^IBM(361.1,"ATRID",$E(X(1),1,30),$E(X(2),1,30),DA)
"IX",361.1,361.1,"ATRID",2.5)
K ^IBM(361.1,"ATRID")
"IX",361.1,361.1,"ATRID",11.1,0)
^.114IA^3^3
"IX",361.1,361.1,"ATRID",11.1,1,0)
1^F^361.1^.07^30^1^F
"IX",361.1,361.1,"ATRID",11.1,1,3)

"IX",361.1,361.1,"ATRID",11.1,2,0)
2^F^361.1^.03^30^2^F
"IX",361.1,361.1,"ATRID",11.1,2,3)

"IX",361.1,361.1,"ATRID",11.1,3,0)
3^F^361.1^.04^^^F
"IX",361.1,361.1,"ATRID",11.1,3,3)

"IX",364.7,364.7,"ALL",0)
364.7^ALL^Xref contains all local overrides defined for all insurance and type^MU^^F^IR^I^364.7^^^^^S
"IX",364.7,364.7,"ALL",1)
S ^IBA(364.7,"ALL",X2(2),DA)=""
"IX",364.7,364.7,"ALL",1.4)
I 'X2(2)!(X2(4)'="")!(X2(5)'="")!(X2(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2)
K ^IBA(364.7,"ALL",X1(2),DA)
"IX",364.7,364.7,"ALL",2.4)
I 'X1(2)!(X1(4)'="")!(X1(5)'="")!(X1(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.7,364.7,"ALL",11.1,0)
^.114IA^5^5
"IX",364.7,364.7,"ALL",11.1,1,0)
1^F^364.7^.01^15^^F
"IX",364.7,364.7,"ALL",11.1,1,3)

"IX",364.7,364.7,"ALL",11.1,2,0)
2^C^^^10^1
"IX",364.7,364.7,"ALL",11.1,2,1.5)
S X=$P($G(^IBA(364.6,+X(1),0)),U,3)
"IX",364.7,364.7,"ALL",11.1,3,0)
3^F^364.7^.02^10^^F
"IX",364.7,364.7,"ALL",11.1,3,3)

"IX",364.7,364.7,"ALL",11.1,4,0)
4^F^364.7^.05^20^^F
"IX",364.7,364.7,"ALL",11.1,4,3)

"IX",364.7,364.7,"ALL",11.1,5,0)
5^F^364.7^.06^20^^F
"IX",364.7,364.7,"ALL",11.1,5,3)

"MBREQ")
0
"PGL",364.7,0,5,.05)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
135^3031007^539
"PKG",200,22,1,"PAH",1,1,0)
^^6^6^3031007
"PKG",200,22,1,"PAH",1,1,1,0)
Third Party EDI Lockbox patch IB*2.0*135 (Integrated Billing component)
"PKG",200,22,1,"PAH",1,1,2,0)
 
"PKG",200,22,1,"PAH",1,1,3,0)
This patch is being released as part of a build that also includes patch
"PKG",200,22,1,"PAH",1,1,4,0)
PRCA*4.5*173.  Please refer to the patch description in the National Patch
"PKG",200,22,1,"PAH",1,1,5,0)
module and the users documentation for patch PRCA*4.5*173 for detailed
"PKG",200,22,1,"PAH",1,1,6,0)
information about this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
16
"RTN","IBCE835")
0^14^B35915356
"RTN","IBCE835",1,0)
IBCE835 ;ALB/TMP - 835 EDI EXPLANATION OF BENEFITS MSG PROCESSING ;19-JAN-99
"RTN","IBCE835",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135**;21-MAR-94
"RTN","IBCE835",3,0)
 Q
"RTN","IBCE835",4,0)
 ;
"RTN","IBCE835",5,0)
 ; MESSAGE HEADER DATA STRING =
"RTN","IBCE835",6,0)
 ;   type of message^msg queue^msg #^bill #^^date/time
"RTN","IBCE835",7,0)
 ;
"RTN","IBCE835",8,0)
HDR(IBCLNO,IBD) ;Process header data
"RTN","IBCE835",9,0)
 ; INPUT:
"RTN","IBCE835",10,0)
 ;   IBCLNO = claim #
"RTN","IBCE835",11,0)
 ;
"RTN","IBCE835",12,0)
 ;   ^TMP("IBMSGH",$J,0) = header message text
"RTN","IBCE835",13,0)
 ;
"RTN","IBCE835",14,0)
 ; OUTPUT:
"RTN","IBCE835",15,0)
 ;   IBD array returned with processed data
"RTN","IBCE835",16,0)
 ;      "LINE"  = The last line # populated in the message
"RTN","IBCE835",17,0)
 ;      "DATE"  = Date/Time of EOB (Fileman format)
"RTN","IBCE835",18,0)
 ;      "MRA"   = 1 if MRA, 0 if not
"RTN","IBCE835",19,0)
 ;      "X12"   = 1 if X12, 0 if not
"RTN","IBCE835",20,0)
 ;
"RTN","IBCE835",21,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,0)=MESSAGE HEADER DATA STRING
"RTN","IBCE835",22,0)
 ;                                  ,"D",0,1)=header record raw data
"RTN","IBCE835",23,0)
 ;                                  ,"D1",1,0)=header record raw data
"RTN","IBCE835",24,0)
 ;                                  ,line #)=EOB message lines
"RTN","IBCE835",25,0)
 ;
"RTN","IBCE835",26,0)
 N CT,IB399,IBD0,IBBILL,LINE,L,X,Y,Z,%DT
"RTN","IBCE835",27,0)
 S IBD0=$G(^TMP("IBMSGH",$J,0)),IBD("LINE")=0
"RTN","IBCE835",28,0)
 Q:IBD0=""
"RTN","IBCE835",29,0)
 S X=$P(IBD0,U,3),X=$E(X,5,8)_$E(X,1,4)_"@"_$P(IBD0,U,4)
"RTN","IBCE835",30,0)
 I X S %DT="XTS" D ^%DT
"RTN","IBCE835",31,0)
 S IBD("DATE")=$S(Y>0:Y,1:"")
"RTN","IBCE835",32,0)
 S IBD("MRA")=$P(IBD0,U,5)
"RTN","IBCE835",33,0)
 S IBD("X12")=($P(IBD0,U,2)="X")
"RTN","IBCE835",34,0)
 S CT=0
"RTN","IBCE835",35,0)
 ;
"RTN","IBCE835",36,0)
 I $P(IBD0,U,6)'="" S CT=CT+1 S LINE(CT)=$G(LINE(CT))_"Payer Name: "_$P(IBD0,U,6)
"RTN","IBCE835",37,0)
 ;
"RTN","IBCE835",38,0)
 I CT D
"RTN","IBCE835",39,0)
 . S (L,Z)=0
"RTN","IBCE835",40,0)
 . F  S Z=$O(LINE(Z)) Q:'Z  S L=L+1,^TMP("IBMSG",$J,"CLAIM",IBCLNO,L)=LINE(Z)
"RTN","IBCE835",41,0)
 . S IBD("LINE")=IBD("LINE")+CT
"RTN","IBCE835",42,0)
 ;
"RTN","IBCE835",43,0)
 S IB399=+$O(^DGCR(399,"B",$$GETCLM^IBCE277(IBCLNO),""),-1)
"RTN","IBCE835",44,0)
 ;
"RTN","IBCE835",45,0)
 S IBBILL=$$LAST364^IBCEF4(IB399)
"RTN","IBCE835",46,0)
 ;
"RTN","IBCE835",47,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLNO,0)="835EOB"_U_$G(IBD("MSG#"))_U_$G(IBD("SUBJ"))_U_IBBILL_U_U_IBD("DATE")
"RTN","IBCE835",48,0)
 ;
"RTN","IBCE835",49,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLNO,"D",0,1)="##RAW DATA: "_IBD0
"RTN","IBCE835",50,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLNO,"D1",1,0)="##RAW DATA: "_IBD0
"RTN","IBCE835",51,0)
 Q
"RTN","IBCE835",52,0)
 ;
"RTN","IBCE835",53,0)
5(IBD) ; Process claim patient ID data
"RTN","IBCE835",54,0)
 ; INPUT:
"RTN","IBCE835",55,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE835",56,0)
 ;
"RTN","IBCE835",57,0)
 ; OUTPUT:
"RTN","IBCE835",58,0)
 ;   IBD array
"RTN","IBCE835",59,0)
 ;      "LINE" = the last line # populated in the message
"RTN","IBCE835",60,0)
 ;
"RTN","IBCE835",61,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,line#)=claim pt id message lines
"RTN","IBCE835",62,0)
 ;                                  ,"D",5,msg seq #)=
"RTN","IBCE835",63,0)
 ;                                  ,"D1",msg seq #,5)=
"RTN","IBCE835",64,0)
 ;                                       claim pt id message raw data
"RTN","IBCE835",65,0)
 ;
"RTN","IBCE835",66,0)
 N IBBILL
"RTN","IBCE835",67,0)
 S IBBILL=$$GETCLM^IBCE277($P(IBD,U,2))
"RTN","IBCE835",68,0)
 ;
"RTN","IBCE835",69,0)
 I '$D(^TMP("IBMSG",$J,"CLAIM",IBBILL)) D HDR(IBBILL,.IBD) ;Process header data if not already done for claim
"RTN","IBCE835",70,0)
 ;
"RTN","IBCE835",71,0)
 I $P(IBD,U,7)="Y"!($P(IBD,U,8)="Y") D  ;New patient name or id reported
"RTN","IBCE835",72,0)
 . ;
"RTN","IBCE835",73,0)
 . ; Alert to EDI mail group that name or ID has changed
"RTN","IBCE835",74,0)
 . N XQA,XQAMSG
"RTN","IBCE835",75,0)
 . S XQA("G.IB EDI")=""
"RTN","IBCE835",76,0)
 . S XQAMSG="EOB for bill # "_IBBILL_" indicates a new name or id exists for patient"
"RTN","IBCE835",77,0)
 . D SETUP^XQALERT
"RTN","IBCE835",78,0)
 . ;
"RTN","IBCE835",79,0)
 . S IBD("LINE")=$G(IBD("LINE"))+1
"RTN","IBCE835",80,0)
 . I $P(IBD,U,7)="Y" S ^TMP("IBMSG",$J,"CLAIM",IBBILL,IBD("LINE"))="New patient name: "_$P(IBD,U,3)_","_$P(IBD,U,4)_" "_$P(IBD,U,5)_"  "
"RTN","IBCE835",81,0)
 . I $P(IBD,U,8)="Y" S ^TMP("IBMSG",$J,"CLAIM",IBBILL,IBD("LINE"))=$G(^TMP("IBMSG",$J,"CLAIM",IBBILL,IBD("LINE")))_"New patient id: "_$P(IBD,U,6)
"RTN","IBCE835",82,0)
 ;
"RTN","IBCE835",83,0)
 I $P(IBD,U,9) D  ;Statement dates
"RTN","IBCE835",84,0)
 . S IBD("LINE")=$G(IBD("LINE"))+1
"RTN","IBCE835",85,0)
 . S ^TMP("IBMSG",$J,"CLAIM",IBBILL,IBD("LINE"))="Statement Dates: "_$$DATE^IBCE277($P(IBD,U,9))_" - "_$$DATE^IBCE277($P(IBD,U,10))
"RTN","IBCE835",86,0)
 ;
"RTN","IBCE835",87,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBBILL,"D",5,1)="##RAW DATA: "_IBD
"RTN","IBCE835",88,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBBILL,"D1",1,5)="##RAW DATA: "_IBD
"RTN","IBCE835",89,0)
 Q
"RTN","IBCE835",90,0)
 ;
"RTN","IBCE835",91,0)
10(IBD) ; Process claim status data
"RTN","IBCE835",92,0)
 ; INPUT:
"RTN","IBCE835",93,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE835",94,0)
 ;
"RTN","IBCE835",95,0)
 ; OUTPUT:
"RTN","IBCE835",96,0)
 ;   IBD array returned with processed data
"RTN","IBCE835",97,0)
 ;      "CLAIM" = The claim #
"RTN","IBCE835",98,0)
 ;      "LINE" = The last line # populated in the message
"RTN","IBCE835",99,0)
 ;
"RTN","IBCE835",100,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,line#)=claim status message lines
"RTN","IBCE835",101,0)
 ;                                  ,"D",10,msg seq #)=
"RTN","IBCE835",102,0)
 ;                                  ,"D1",msg seq #,10)=
"RTN","IBCE835",103,0)
 ;                                       claim status raw data
"RTN","IBCE835",104,0)
 ;
"RTN","IBCE835",105,0)
 N IBCLM,CT,LINE,L,Z,Z0,IBDATA,IBSTAT
"RTN","IBCE835",106,0)
 S IBCLM=$$GETCLM^IBCE277($P(IBD,U,2))
"RTN","IBCE835",107,0)
 Q:IBCLM=""
"RTN","IBCE835",108,0)
 ;
"RTN","IBCE835",109,0)
 I '$D(^TMP("IBMSG",$J,"CLAIM",IBCLM)) D HDR(IBCLM,.IBD) ;Process header data if not already done for claim
"RTN","IBCE835",110,0)
 ;
"RTN","IBCE835",111,0)
 S CT=0
"RTN","IBCE835",112,0)
 F Z=3:1:6 I $P(IBD,U,Z)="Y" D  Q  ;Claim status
"RTN","IBCE835",113,0)
 . S IBSTAT=(Z-2)
"RTN","IBCE835",114,0)
 . S CT=CT+1,LINE(CT)="CLAIM STATUS: "_$P("PROCESSED^DENIED^PENDED^REVERSAL",U,IBSTAT)
"RTN","IBCE835",115,0)
 I '$G(IBSTAT) D
"RTN","IBCE835",116,0)
 . S CT=CT+1,LINE(CT)="CLAIM STATUS: "_$P(IBD,U,7)_" (OTHER)"
"RTN","IBCE835",117,0)
 ;
"RTN","IBCE835",118,0)
 I $P(IBD,U,8)'="" D  ;Crossed over info
"RTN","IBCE835",119,0)
 . S LINE(CT)=LINE(CT)_"  Crossed over to: "_$P(IBD,U,9)_"  "_$P(IBD,U,8)
"RTN","IBCE835",120,0)
 ;
"RTN","IBCE835",121,0)
 I CT D
"RTN","IBCE835",122,0)
 . S L=$G(IBD("LINE")),Z=0
"RTN","IBCE835",123,0)
 . F  S Z=$O(LINE(Z)) Q:'Z  S L=L+1,^TMP("IBMSG",$J,"CLAIM",IBCLM,L)=LINE(Z)
"RTN","IBCE835",124,0)
 . S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",10,1)="##RAW DATA: "_IBD
"RTN","IBCE835",125,0)
 . S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D1",1,10)="##RAW DATA: "_IBD
"RTN","IBCE835",126,0)
 . S IBD("LINE")=$G(IBD("LINE"))+CT
"RTN","IBCE835",127,0)
 Q
"RTN","IBCE835",128,0)
 ;
"RTN","IBCE835",129,0)
15(IBD) ; Process claim status data
"RTN","IBCE835",130,0)
 ; INPUT:
"RTN","IBCE835",131,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE835",132,0)
 ;
"RTN","IBCE835",133,0)
 ; OUTPUT:
"RTN","IBCE835",134,0)
 ;   IBD array
"RTN","IBCE835",135,0)
 ;      "LINE" = The last line # populated in the message
"RTN","IBCE835",136,0)
 ;
"RTN","IBCE835",137,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,"D",15,msg seq #)=
"RTN","IBCE835",138,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,"D1",msg seq #,15)=
"RTN","IBCE835",139,0)
 ;                                       claim status raw data
"RTN","IBCE835",140,0)
 ;
"RTN","IBCE835",141,0)
 N IBCLM,Z,Z0,IBDATA
"RTN","IBCE835",142,0)
 S IBCLM=$$GETCLM^IBCE277($P(IBD,U,2))
"RTN","IBCE835",143,0)
 Q:IBCLM=""
"RTN","IBCE835",144,0)
 ;
"RTN","IBCE835",145,0)
 I '$D(^TMP("IBMSG",$J,"CLAIM",IBCLM)) D HDR(IBCLM,.IBD) ;Process header data if not already done for claim
"RTN","IBCE835",146,0)
 ;
"RTN","IBCE835",147,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",15,1)="##RAW DATA: "_IBD
"RTN","IBCE835",148,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D1",1,15)="##RAW DATA: "_IBD
"RTN","IBCE835",149,0)
 Q
"RTN","IBCE835",150,0)
 ;
"RTN","IBCE835",151,0)
20(IBD) ; Process claim level adjustment data
"RTN","IBCE835",152,0)
 ; Claim must have been referenced by a previous '05' level
"RTN","IBCE835",153,0)
 ;
"RTN","IBCE835",154,0)
 ; INPUT:
"RTN","IBCE835",155,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE835",156,0)
 ;
"RTN","IBCE835",157,0)
 ; OUTPUT:
"RTN","IBCE835",158,0)
 ;    IBD("LINE") = The last line # populated in the message
"RTN","IBCE835",159,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,line #)=claim level adjustment
"RTN","IBCE835",160,0)
 ;                                  ,"D",20,seq#)=
"RTN","IBCE835",161,0)
 ;                                  ,"D1",seq#,20)=
"RTN","IBCE835",162,0)
 ;                                          claim level adjust. raw data
"RTN","IBCE835",163,0)
 ;
"RTN","IBCE835",164,0)
 N IBCLM
"RTN","IBCE835",165,0)
 S IBCLM=$$GETCLM^IBCE277($P(IBD,U,2))
"RTN","IBCE835",166,0)
 Q:'$D(^TMP("IBMSG",$J,"CLAIM",IBCLM))
"RTN","IBCE835",167,0)
 S IBD("LINE")=$G(IBD("LINE"))+1
"RTN","IBCE835",168,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,IBD("LINE"))="ADJUSTMENT GROUP: "_$P(IBD,U,3)_"  QTY: "_+$P(IBD,U,6)_", AMT: "_($P(IBD,U,5)/100)
"RTN","IBCE835",169,0)
 S IBD("LINE")=IBD("LINE")+1
"RTN","IBCE835",170,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,IBD("LINE"))="   REASON: ("_$P(IBD,U,4)_")  "_$P(IBD,U,7)
"RTN","IBCE835",171,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",20,IBD("LINE"))="##RAW DATA: "_IBD
"RTN","IBCE835",172,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D1",IBD("LINE"),20)="##RAW DATA: "_IBD
"RTN","IBCE835",173,0)
 Q
"RTN","IBCE835",174,0)
 ;
"RTN","IBCE835",175,0)
37(IBD) ; Process claim level adjustment data for Inpatient MEDICARE
"RTN","IBCE835",176,0)
 D 37^IBCE835A(.IBD)
"RTN","IBCE835",177,0)
 Q
"RTN","IBCE835",178,0)
 ;
"RTN","IBCE835",179,0)
40(IBD) ; Process service line data
"RTN","IBCE835",180,0)
 D 40^IBCE835A(.IBD)
"RTN","IBCE835",181,0)
 Q
"RTN","IBCE835",182,0)
 ;
"RTN","IBCE835",183,0)
45(IBD) ; Process service line adjustment data
"RTN","IBCE835",184,0)
 D 45^IBCE835A(.IBD)
"RTN","IBCE835",185,0)
 Q
"RTN","IBCE835",186,0)
 ;
"RTN","IBCE835",187,0)
30(IBD) ; Process MEDICARE inpatient adjudication data (part 1)
"RTN","IBCE835",188,0)
 D XX(.IBD,30)
"RTN","IBCE835",189,0)
 Q
"RTN","IBCE835",190,0)
 ;
"RTN","IBCE835",191,0)
35(IBD) ; Process MEDICARE inpatient adjudication data (part 2)
"RTN","IBCE835",192,0)
 D XX(.IBD,35)
"RTN","IBCE835",193,0)
 Q
"RTN","IBCE835",194,0)
 ;
"RTN","IBCE835",195,0)
41(IBD) ; Process service line data (part 2)
"RTN","IBCE835",196,0)
 D XX(.IBD,41)
"RTN","IBCE835",197,0)
 Q
"RTN","IBCE835",198,0)
 ;
"RTN","IBCE835",199,0)
42(IBD) ; Process service line data (part 3)
"RTN","IBCE835",200,0)
 D XX(.IBD,42)
"RTN","IBCE835",201,0)
 Q
"RTN","IBCE835",202,0)
 ;
"RTN","IBCE835",203,0)
99(IBD) ; Process trailer record for non-MRA EOB
"RTN","IBCE835",204,0)
 D XX(.IBD,99)
"RTN","IBCE835",205,0)
 Q
"RTN","IBCE835",206,0)
 ;
"RTN","IBCE835",207,0)
XX(IBD,IBID) ; Store non-displayed data nodes in TMP array
"RTN","IBCE835",208,0)
 ;
"RTN","IBCE835",209,0)
 ; INPUT:
"RTN","IBCE835",210,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE835",211,0)
 ;   IBID = record id for generic store
"RTN","IBCE835",212,0)
 ;
"RTN","IBCE835",213,0)
 ; OUTPUT:
"RTN","IBCE835",214,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,"D",IBID,msg seq #)=
"RTN","IBCE835",215,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,"D1",msg seq #,IBID)=
"RTN","IBCE835",216,0)
 ;                                       claim status raw data
"RTN","IBCE835",217,0)
 ;    IBD("LINE") = The last line # populated in the message
"RTN","IBCE835",218,0)
 ;
"RTN","IBCE835",219,0)
 N IBCLM
"RTN","IBCE835",220,0)
 S IBCLM=$$GETCLM^IBCE277($P(IBD,U,2))
"RTN","IBCE835",221,0)
 ;
"RTN","IBCE835",222,0)
 S IBD("LINE")=$G(IBD("LINE"))+1
"RTN","IBCE835",223,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",IBID,IBD("LINE"))="##RAW DATA: "_IBD
"RTN","IBCE835",224,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D1",IBD("LINE"),IBID)="##RAW DATA: "_IBD
"RTN","IBCE835",225,0)
 ;
"RTN","IBCE835",226,0)
 Q
"RTN","IBCE835",227,0)
 ;
"RTN","IBCE835A")
0^15^B6339242
"RTN","IBCE835A",1,0)
IBCE835A ;ALB/ESG - 835 EDI EOB PROCESSING CONTINUED ;30-APR-03
"RTN","IBCE835A",2,0)
 ;;2.0;INTEGRATED BILLING;**135**;21-MAR-94
"RTN","IBCE835A",3,0)
 Q
"RTN","IBCE835A",4,0)
 ; Continue processing of IBCE835 since that routine grew too large
"RTN","IBCE835A",5,0)
 ;
"RTN","IBCE835A",6,0)
37(IBD) ; Process claim level adjustment data for Inpatient MEDICARE
"RTN","IBCE835A",7,0)
 ; Claim must have been referenced by a previous '05' level
"RTN","IBCE835A",8,0)
 ;
"RTN","IBCE835A",9,0)
 ; INPUT:
"RTN","IBCE835A",10,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE835A",11,0)
 ;
"RTN","IBCE835A",12,0)
 ; OUTPUT:
"RTN","IBCE835A",13,0)
 ;    IBD("LINE") = The last line # populated in the message
"RTN","IBCE835A",14,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,line #)=claim level adjustment msg
"RTN","IBCE835A",15,0)
 ;                                  ,"D",37,seq#)=
"RTN","IBCE835A",16,0)
 ;                                  ,"D1",seq#,37)=
"RTN","IBCE835A",17,0)
 ;                                          claim level adjust. raw data
"RTN","IBCE835A",18,0)
 ;
"RTN","IBCE835A",19,0)
 N IBCLM
"RTN","IBCE835A",20,0)
 S IBCLM=$$GETCLM^IBCE277($P(IBD,U,2))
"RTN","IBCE835A",21,0)
 Q:'$D(^TMP("IBMSG",$J,"CLAIM",IBCLM))
"RTN","IBCE835A",22,0)
 S IBD("LINE")=$G(IBD("LINE"))+1
"RTN","IBCE835A",23,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,IBD("LINE"))=$S($D(^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",37)):$J("",34),1:"MEDICARE ADJUDICATION MESSAGE(S): ")_"("_$P(IBD,U,4)_")  "_$P(IBD,U,5)
"RTN","IBCE835A",24,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",37,IBD("LINE"))="##RAW DATA: "_IBD
"RTN","IBCE835A",25,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D1",IBD("LINE"),37)="##RAW DATA: "_IBD
"RTN","IBCE835A",26,0)
 Q
"RTN","IBCE835A",27,0)
 ;
"RTN","IBCE835A",28,0)
40(IBD) ; Process service line data
"RTN","IBCE835A",29,0)
 ;
"RTN","IBCE835A",30,0)
 ; INPUT:
"RTN","IBCE835A",31,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE835A",32,0)
 ;
"RTN","IBCE835A",33,0)
 ; OUTPUT:
"RTN","IBCE835A",34,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,"D",40,msg seq #)=
"RTN","IBCE835A",35,0)
 ;                                   "D1",msg seq #,40)=
"RTN","IBCE835A",36,0)
 ;                                       claim status raw data
"RTN","IBCE835A",37,0)
 ;    IBD("LINE") = The last line # populated in the message
"RTN","IBCE835A",38,0)
 ;
"RTN","IBCE835A",39,0)
 N IBCLM
"RTN","IBCE835A",40,0)
 S IBCLM=$$GETCLM^IBCE277($P(IBD,U,2))
"RTN","IBCE835A",41,0)
 S IBD("LINE")=$G(IBD("LINE"))+1
"RTN","IBCE835A",42,0)
 ;
"RTN","IBCE835A",43,0)
 I '$D(^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",40)) D
"RTN","IBCE835A",44,0)
 . S ^TMP("IBMSG",$J,"CLAIM",IBCLM,IBD("LINE"))="Line level detail exists for this claim"
"RTN","IBCE835A",45,0)
 . S IBD("LINE")=IBD("LINE")+1
"RTN","IBCE835A",46,0)
 ;
"RTN","IBCE835A",47,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",40,IBD("LINE"))="##RAW DATA: "_IBD
"RTN","IBCE835A",48,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D1",IBD("LINE"),40)="##RAW DATA: "_IBD
"RTN","IBCE835A",49,0)
 ;
"RTN","IBCE835A",50,0)
 Q
"RTN","IBCE835A",51,0)
 ;
"RTN","IBCE835A",52,0)
45(IBD) ; Process service line adjustment data
"RTN","IBCE835A",53,0)
 ;
"RTN","IBCE835A",54,0)
 ; INPUT:
"RTN","IBCE835A",55,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE835A",56,0)
 ;
"RTN","IBCE835A",57,0)
 ; OUTPUT:
"RTN","IBCE835A",58,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,"D",45,msg seq #)=
"RTN","IBCE835A",59,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,"D1",msg seq #,45)=
"RTN","IBCE835A",60,0)
 ;                                       claim status raw data
"RTN","IBCE835A",61,0)
 ;    IBD("LINE") = The last line # populated in the message
"RTN","IBCE835A",62,0)
 ;
"RTN","IBCE835A",63,0)
 N IBCLM
"RTN","IBCE835A",64,0)
 S IBCLM=$$GETCLM^IBCE277($P(IBD,U,2))
"RTN","IBCE835A",65,0)
 S IBD("LINE")=$G(IBD("LINE"))+1
"RTN","IBCE835A",66,0)
 ;
"RTN","IBCE835A",67,0)
 I '$D(^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",45)) D
"RTN","IBCE835A",68,0)
 . S ^TMP("IBMSG",$J,"CLAIM",IBCLM,IBD("LINE"))="Line level adjustments exist for this claim"
"RTN","IBCE835A",69,0)
 . S IBD("LINE")=IBD("LINE")+1
"RTN","IBCE835A",70,0)
 ;
"RTN","IBCE835A",71,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",45,IBD("LINE"))="##RAW DATA: "_IBD
"RTN","IBCE835A",72,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D1",IBD("LINE"),45)="##RAW DATA: "_IBD
"RTN","IBCE835A",73,0)
 ;
"RTN","IBCE835A",74,0)
 Q
"RTN","IBCE835A",75,0)
 ;
"RTN","IBCECSA5")
0^1^B46215470
"RTN","IBCECSA5",1,0)
IBCECSA5 ;ALB/CXW - VIEW EOB SCREEN ;01-OCT-1999
"RTN","IBCECSA5",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135**;21-MAR-1994
"RTN","IBCECSA5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCECSA5",4,0)
 ;
"RTN","IBCECSA5",5,0)
EN ; -- main entry point for VIEW EOB
"RTN","IBCECSA5",6,0)
 N VALMCNT,VALMBG,VALMHDR
"RTN","IBCECSA5",7,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCECSA5",8,0)
 D EN^VALM("IBCEM VIEW EOB")
"RTN","IBCECSA5",9,0)
 Q
"RTN","IBCECSA5",10,0)
 ;
"RTN","IBCECSA5",11,0)
INIT ; -- init variables and list array
"RTN","IBCECSA5",12,0)
 I '$G(IBIFN) S VALMQUIT="" G INITQ
"RTN","IBCECSA5",13,0)
 D HDR^IBCEOB2,BLD^IBCEOB2
"RTN","IBCECSA5",14,0)
 K IBCNT,IBONE,^TMP("IBCECSD",$J)
"RTN","IBCECSA5",15,0)
 S IBONE=0
"RTN","IBCECSA5",16,0)
 M ^TMP("IBCECSD",$J)=^TMP("IBCEOB",$J)
"RTN","IBCECSA5",17,0)
 ;
"RTN","IBCECSA5",18,0)
 ; 4/7/03 - If only 1 EOB record found for this bill, then set the
"RTN","IBCECSA5",19,0)
 ;          IBCNT variable, the IBONE one-time flag, and build the
"RTN","IBCECSA5",20,0)
 ;          detail sections of this list.
"RTN","IBCECSA5",21,0)
 I $G(VALMCNT)=1 S IBCNT=$P($G(^TMP("IBCECSD",$J,1)),U,2),IBONE=1 D BLD^IBCECSA6
"RTN","IBCECSA5",22,0)
 ;
"RTN","IBCECSA5",23,0)
INITQ Q
"RTN","IBCECSA5",24,0)
 ;
"RTN","IBCECSA5",25,0)
HELP ; -- help code
"RTN","IBCECSA5",26,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCECSA5",27,0)
 Q
"RTN","IBCECSA5",28,0)
 ;
"RTN","IBCECSA5",29,0)
EXIT ; -- exit code
"RTN","IBCECSA5",30,0)
 K ^TMP("IBCECSD",$J)
"RTN","IBCECSA5",31,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBCECSA5",32,0)
 Q
"RTN","IBCECSA5",33,0)
MIN ;
"RTN","IBCECSA5",34,0)
 N IBREC1,IBRM1,IBRM2,IBRM3,IBRM4,IBRM5,IBRL,IBTYPE,IBT,IBTX,IBD
"RTN","IBCECSA5",35,0)
 S IBTYPE=$$INPAT^IBCEF(+IBREC)
"RTN","IBCECSA5",36,0)
 I $G(IBSRC) Q:'$D(^IBM(361.1,IBCNT,4))
"RTN","IBCECSA5",37,0)
 S IB=$$SETSTR^VALM1("MEDICARE INFORMATION:","",1,50)
"RTN","IBCECSA5",38,0)
 D SET(IB)
"RTN","IBCECSA5",39,0)
 I '$G(IBSRC) D
"RTN","IBCECSA5",40,0)
 . D CNTRL^VALM10(VALMCNT,1,21,IORVON,IORVOFF)
"RTN","IBCECSA5",41,0)
 . S ^TMP("IBCECSD",$J,"X",5)=VALMCNT
"RTN","IBCECSA5",42,0)
 I '$D(^IBM(361.1,IBCNT,4)) Q
"RTN","IBCECSA5",43,0)
 I 'IBTYPE Q
"RTN","IBCECSA5",44,0)
 D SET(" INPATIENT:")
"RTN","IBCECSA5",45,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,4)),(IB,IBRL)=""
"RTN","IBCECSA5",46,0)
 ;
"RTN","IBCECSA5",47,0)
 F IBT=2:1 S IBTX=$P($T(MINDAT+IBT),";",3) Q:IBTX=""  D
"RTN","IBCECSA5",48,0)
 . S IBD=$P(IBREC1,"^",+IBTX)
"RTN","IBCECSA5",49,0)
 . I $L($P(IBTX,"^",4)) X $P(IBTX,"^",4) E  N IBFULL S IBFULL=1
"RTN","IBCECSA5",50,0)
 . I $S(IBFULL:1,1:IBD) D
"RTN","IBCECSA5",51,0)
 .. I $L($P(IBTX,"^",4)) X $P(IBTX,"^",4) I  Q
"RTN","IBCECSA5",52,0)
 .. X "S IBD="_$S($L($P(IBTX,"^",3)):$P(IBTX,"^",3),1:"$$A10(IBD)")
"RTN","IBCECSA5",53,0)
 .. S IB=$$SETSTR^VALM1($P(IBTX,"^",2)_IBD,IB,$S('IBRL:4,1:37),$S('IBRL:41,1:38))
"RTN","IBCECSA5",54,0)
 .. S IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA5",55,0)
 .. I 'IBRL D SET(IB,IBRL) S IB=""
"RTN","IBCECSA5",56,0)
 ;
"RTN","IBCECSA5",57,0)
 D:IBRL'="" SET(IB)
"RTN","IBCECSA5",58,0)
 Q
"RTN","IBCECSA5",59,0)
 ;
"RTN","IBCECSA5",60,0)
MINDAT ; data for MIN tag
"RTN","IBCECSA5",61,0)
 ; format:  piece^lable^special format code^special decision for disp
"RTN","IBCECSA5",62,0)
 ;;1^Cov Days/Visit Ct  : ^$$RJ(+IBD)^I $G(IBSRC)
"RTN","IBCECSA5",63,0)
 ;;3^Claim DRG Amt      : 
"RTN","IBCECSA5",64,0)
 ;;2^Lifetm Psych Dy Ct : ^$$RJ(IBD)
"RTN","IBCECSA5",65,0)
 ;;5^Disprop Share Amt  : ^^I IBTYPE
"RTN","IBCECSA5",66,0)
 ;;4^Cap Exception Amt  : 
"RTN","IBCECSA5",67,0)
 ;;7^PPS Capital Amt    : 
"RTN","IBCECSA5",68,0)
 ;;6^MSP Pass Thru Amt  : 
"RTN","IBCECSA5",69,0)
 ;;9^PPS Cap HSP-DRG Amt: ^^I IBTYPE
"RTN","IBCECSA5",70,0)
 ;;8^PPS Cap FSP-DRG Amt: ^^I IBTYPE
"RTN","IBCECSA5",71,0)
 ;;11^Old Capital Amt    : ^^I IBTYPE
"RTN","IBCECSA5",72,0)
 ;;10^PPS Cap DSH-DRG Amt: ^^I IBTYPE
"RTN","IBCECSA5",73,0)
 ;;13^PPS Op Hos DRG Amt : 
"RTN","IBCECSA5",74,0)
 ;;12^PPS Capital IME Amt: ^^I IBTYPE
"RTN","IBCECSA5",75,0)
 ;;15^PPS Op Fed DRG Amt : ^^I IBTYPE
"RTN","IBCECSA5",76,0)
 ;;14^Cost Report Day Ct : ^$$RJ(IBD)
"RTN","IBCECSA5",77,0)
 ;;17^Indirect Teach Amt : 
"RTN","IBCECSA5",78,0)
 ;;16^PPS Cap Outlier Amt: 
"RTN","IBCECSA5",79,0)
 ;;18^Non-Pay Prof Comp  : ^$$RJ(IBD)
"RTN","IBCECSA5",80,0)
 ;;19^Non-Covered Days Ct: ^$$RJ(+IBD)^I $G(IBSRC)
"RTN","IBCECSA5",81,0)
 ;;
"RTN","IBCECSA5",82,0)
 ;
"RTN","IBCECSA5",83,0)
REMARK ; set up remarks and line level details
"RTN","IBCECSA5",84,0)
 N IBREC1,IBP,IBT,IBX
"RTN","IBCECSA5",85,0)
 S IBREC1=$S($$INPAT^IBCEF(+IBREC):$G(^IBM(361.1,IBCNT,5)),1:$P($G(^IBM(361.1,IBCNT,3)),"^",3,7))
"RTN","IBCECSA5",86,0)
 I $TR(IBREC1,U)'=""!'$G(IBSRC) D
"RTN","IBCECSA5",87,0)
 . D SET("  REMARK:")
"RTN","IBCECSA5",88,0)
 . D SET("   CODE    SHORT DESCRIPTION")
"RTN","IBCECSA5",89,0)
 . F IBP=1:1:5 I $L($P(IBREC1,"^",IBP))!($L($G(^IBM(361.1,IBCNT,"RM"_IBP)))) S IBT(IBP)=$S($L($P(IBREC1,"^",IBP)):$P(IBREC1,"^",IBP),1:"    ")_"   "_$G(^("RM"_IBP)) D TXT1(.IBT,4,79) S IBX=0 F  S IBX=$O(IBT(IBX)) Q:IBX<1  D SET(IBT(IBX))
"RTN","IBCECSA5",90,0)
 . D SET(" ")
"RTN","IBCECSA5",91,0)
MRALLA S IB=$$SETSTR^VALM1("LINE LEVEL ADJUSTMENTS:","",1,50)
"RTN","IBCECSA5",92,0)
 D SET(IB)
"RTN","IBCECSA5",93,0)
 I '$G(IBSRC) D
"RTN","IBCECSA5",94,0)
 . D CNTRL^VALM10(VALMCNT,1,23,IORVON,IORVOFF)
"RTN","IBCECSA5",95,0)
 . S ^TMP("IBCECSD",$J,"X",7)=VALMCNT
"RTN","IBCECSA5",96,0)
 I '$D(^IBM(361.1,IBCNT,15,0)) D SET("NONE") Q  ; only if there is info
"RTN","IBCECSA5",97,0)
 ;
"RTN","IBCECSA5",98,0)
 ; look up all billed data
"RTN","IBCECSA5",99,0)
 N IBZDATA,IBFORM,IBX2,IBX3,IBREC2,IBREC3,IBTX
"RTN","IBCECSA5",100,0)
 S IBFORM=0                             ; hcfa-1500
"RTN","IBCECSA5",101,0)
 I $$FT^IBCEF(+IBREC)=3 S IBFORM=1      ; ub92
"RTN","IBCECSA5",102,0)
 D F^IBCEF("N-"_$S(IBFORM:"UB92",1:"HCFA 1500")_" SERVICE LINE (EDI)","IBZDATA",,+IBREC)
"RTN","IBCECSA5",103,0)
 ;
"RTN","IBCECSA5",104,0)
 D SET("  #   SV DT   REVCD  PROC  MOD  UNITS  BILLED  DEDUCT  COINS    ALLOW     PYMT")
"RTN","IBCECSA5",105,0)
 S IBX=0 F  S IBX=$O(^IBM(361.1,IBCNT,15,IBX)) Q:IBX<1  S IBREC1=^IBM(361.1,IBCNT,15,IBX,0) D
"RTN","IBCECSA5",106,0)
 . NEW RVL
"RTN","IBCECSA5",107,0)
 . S RVL=+$P(IBREC1,U,12)       ; referenced Vista line#
"RTN","IBCECSA5",108,0)
 . I 'RVL S RVL=IBX             ; use the EOB line# if not there
"RTN","IBCECSA5",109,0)
 . S IBT=$$RJ($P(IBREC1,"^"),3) ;             line number
"RTN","IBCECSA5",110,0)
 . S IBT=IBT_" "_$$DAT1^IBOUTL($P($P(IBREC1,"^",16),".")) ; service date
"RTN","IBCECSA5",111,0)
 . S IBT=IBT_" "_$$RJ($$EXTERNAL^DILFD(361.115,.1,"",$P(IBREC1,"^",10)),6) ;                                                revcd
"RTN","IBCECSA5",112,0)
 . S IBT=IBT_" "_$$RJ($P(IBREC1,"^",4),5) ;   procedure
"RTN","IBCECSA5",113,0)
 . S IBT=IBT_" "_$$RJ($P($G(^IBM(361.1,IBCNT,15,IBX,2,1,0)),"^"),3)_$S($D(^IBM(361.1,IBCNT,15,IBX,2,2,0)):"+",1:" ") ;      modifiers
"RTN","IBCECSA5",114,0)
 . S IBT=IBT_" "_$$RJ($FN($P(IBREC1,"^",11),"",0),5) ; units
"RTN","IBCECSA5",115,0)
 . S IBT=IBT_" "_$$RJ($FN($S(IBFORM:$P($G(IBZDATA(RVL)),"^",5),1:$P($G(IBZDATA(RVL)),"^",8)*$P($G(IBZDATA(RVL)),"^",9)),"",2),8) ;    billed
"RTN","IBCECSA5",116,0)
 . S IBT=IBT_" "_$$RJ($FN($P($G(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,+$O(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,"B",1,0)),0)),"^",2),"",2),7) ;  deduct
"RTN","IBCECSA5",117,0)
 . S IBT=IBT_" "_$$RJ($FN($P($G(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,+$O(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,"B",2,0)),0)),"^",2),"",2),6) ;   coins
"RTN","IBCECSA5",118,0)
 . S IBT=IBT_" "_$$RJ($FN($P(IBREC1,"^",13),"",2),8) ; allow
"RTN","IBCECSA5",119,0)
 . S IBT=IBT_" "_$$RJ($FN($P(IBREC1,"^",3),"",2),8) ;  payment
"RTN","IBCECSA5",120,0)
 . D SET(IBT)
"RTN","IBCECSA5",121,0)
 . S IBX2=0 F  S IBX2=$O(^IBM(361.1,IBCNT,15,IBX,1,IBX2)) Q:IBX2<1  D
"RTN","IBCECSA5",122,0)
 .. S IBREC2=^IBM(361.1,IBCNT,15,IBX,1,IBX2,0),IBX3=0
"RTN","IBCECSA5",123,0)
 .. F  S IBX3=$O(^IBM(361.1,IBCNT,15,IBX,1,IBX2,1,IBX3)) Q:IBX3<1  D
"RTN","IBCECSA5",124,0)
 ... S IBREC3=^IBM(361.1,IBCNT,15,IBX,1,IBX2,1,IBX3,0)
"RTN","IBCECSA5",125,0)
 ... S IBTX(1)="ADJ: "_$P(IBREC2,"^")_"  "_$P(IBREC3,"^")_"  "_$P(IBREC3,"^",4) D TXT1(.IBTX,0,79) S IBT=0 F  S IBT=$O(IBTX(IBT)) Q:IBT<1  D SET(IBTX(IBT))
"RTN","IBCECSA5",126,0)
 ... K IBTX
"RTN","IBCECSA5",127,0)
 ... D SET("ADJ AMT: "_$FN($P(IBREC3,"^",2),"",2))
"RTN","IBCECSA5",128,0)
 . S IBREC2=$G(^IBM(361.1,IBCNT,15,IBX,3))
"RTN","IBCECSA5",129,0)
 . I $L(IBREC2) S IBTX(1)="REMARK CODE: "_$P(IBREC2,"^")_"  "_$P(IBREC2,"^",2) D TXT1(.IBTX,0,79) S IBT=0 F  S IBT=$O(IBTX(IBT)) Q:IBT<1  D SET(IBTX(IBT))
"RTN","IBCECSA5",130,0)
 . D SET(" ")
"RTN","IBCECSA5",131,0)
 D SET(" ")
"RTN","IBCECSA5",132,0)
 Q
"RTN","IBCECSA5",133,0)
 ;
"RTN","IBCECSA5",134,0)
TXT(IBRM,IBLN,IBXY)     ;display text over 79 chars
"RTN","IBCECSA5",135,0)
 ;IBRM - text, IBLN - length, IBXY - position
"RTN","IBCECSA5",136,0)
 S IBRM=$E(IBRM,IBLN+1,999)
"RTN","IBCECSA5",137,0)
REP I $E(IBRM,1,IBLN)'="" S IB=$$SETSTR^VALM1($E(IBRM,1,IBLN),"",IBXY,IBLN) D SET(IB) S IBRM=$E(IBRM,IBLN+1,999) G REP
"RTN","IBCECSA5",138,0)
 Q
"RTN","IBCECSA5",139,0)
 ;
"RTN","IBCECSA5",140,0)
SET(IB,IBSAV) ;
"RTN","IBCECSA5",141,0)
 I '$G(IBSAV) D SET^IBCECSA6($G(IBSRC),IB,CNT,IBCNT)
"RTN","IBCECSA5",142,0)
 Q
"RTN","IBCECSA5",143,0)
 ;
"RTN","IBCECSA5",144,0)
A10(X) ;
"RTN","IBCECSA5",145,0)
 Q $$A10^IBCECSA6(X)
"RTN","IBCECSA5",146,0)
 ;
"RTN","IBCECSA5",147,0)
A7(X) ; returns a dollar amount right justified to 7 characters
"RTN","IBCECSA5",148,0)
 Q $$RJ($FN(X,"",2),7)
"RTN","IBCECSA5",149,0)
 ;
"RTN","IBCECSA5",150,0)
TXT1(IBT,DIWL,DIWR) ; sets up text for over 79 chars
"RTN","IBCECSA5",151,0)
 ; IBT - pass by ref, array of text to be formatted back in array
"RTN","IBCECSA5",152,0)
 ; DIWL - left margin, DIWR = right margin
"RTN","IBCECSA5",153,0)
 N IBX,X,DIWF,IBS K ^UTILITY($J,"W")
"RTN","IBCECSA5",154,0)
 S DIWF="|I"_DIWL
"RTN","IBCECSA5",155,0)
 S IBX=0 F  S IBX=$O(IBT(IBX)) Q:IBX<1  S X=IBT(IBX) D ^DIWP
"RTN","IBCECSA5",156,0)
 K IBT F  S IBX=$O(^UTILITY($J,"W",DIWL,IBX)) Q:IBX<1  S IBT(IBX)=^UTILITY($J,"W",DIWL,IBX,0)
"RTN","IBCECSA5",157,0)
 K ^UTILITY($J,"W")
"RTN","IBCECSA5",158,0)
 Q
"RTN","IBCECSA5",159,0)
 ;
"RTN","IBCECSA5",160,0)
RJ(X,Y) ; right just, default is 10
"RTN","IBCECSA5",161,0)
 Q $$RJ^XLFSTR(X,$G(Y,10)," ")
"RTN","IBCECSA5",162,0)
 ;
"RTN","IBCECSA6")
0^2^B75283312
"RTN","IBCECSA6",1,0)
IBCECSA6 ;ALB/CXW - VIEW EOB SCREEN ;01-OCT-1999
"RTN","IBCECSA6",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135**;21-MAR-1994
"RTN","IBCECSA6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCECSA6",4,0)
 ;
"RTN","IBCECSA6",5,0)
BLD ;build EOB data display
"RTN","IBCECSA6",6,0)
 D GETEOB(IBCNT,0)
"RTN","IBCECSA6",7,0)
 Q
"RTN","IBCECSA6",8,0)
 ;
"RTN","IBCECSA6",9,0)
GETEOB(IBCNT,IBSRC,IBFULL) ; Get EOB data in display format
"RTN","IBCECSA6",10,0)
 ; IBCNT = the ien of the entry in file 361.1
"RTN","IBCECSA6",11,0)
 ; IBSRC = 1 if called from AR, 0 if List Manager format needed
"RTN","IBCECSA6",12,0)
 ;       = 2 if called from AR and header data is desired
"RTN","IBCECSA6",13,0)
 ;   If IBSRC > 0  ^TMP("PRCA_EOB",$J,IBCNT,n)=line n's text is ret'd
"RTN","IBCECSA6",14,0)
 ; IBFULL = 1 if no check should be made to eliminate a fld whose value=0
"RTN","IBCECSA6",15,0)
 ;
"RTN","IBCECSA6",16,0)
 N IBREC,IBTYP,CNT,IBREM
"RTN","IBCECSA6",17,0)
 S IBFULL=$G(IBFULL),IBSRC=$G(IBSRC)
"RTN","IBCECSA6",18,0)
 I IBSRC N VALMBG,VALMCNT
"RTN","IBCECSA6",19,0)
 S VALMCNT=0,VALMBG=1,CNT=0
"RTN","IBCECSA6",20,0)
 S IBREC=$G(^IBM(361.1,IBCNT,0)),IBTYP=$P(IBREC,U,4)
"RTN","IBCECSA6",21,0)
 I IBSRC K ^TMP("PRCA_EOB",$J,IBCNT)
"RTN","IBCECSA6",22,0)
 D GEN,PAY,ARCP^IBCECSA7,CLVL,CLVLA,MIN^IBCECSA5,MOUT,REMARK^IBCECSA5 D:'IBSRC RDATA^IBCECSA7
"RTN","IBCECSA6",23,0)
 Q
"RTN","IBCECSA6",24,0)
 ;
"RTN","IBCECSA6",25,0)
SEL(IB,ONE) ;
"RTN","IBCECSA6",26,0)
 N IBDA
"RTN","IBCECSA6",27,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","IBCECSA6",28,0)
 S IBDA=0 S IBDA=$O(VALMY(IBDA)) Q:'IBDA  D
"RTN","IBCECSA6",29,0)
 . S IB=$P($G(^TMP("IBCECSD",$J,IBDA)),U,2)
"RTN","IBCECSA6",30,0)
 . S IBONE=1
"RTN","IBCECSA6",31,0)
 Q
"RTN","IBCECSA6",32,0)
 ;
"RTN","IBCECSA6",33,0)
ACT ; Reposition display using actions
"RTN","IBCECSA6",34,0)
 I '$G(IBONE) D SEL(.IBCNT,1) D BLD:$G(IBCNT)
"RTN","IBCECSA6",35,0)
 S VALMBG=$G(^TMP("IBCECSD",$J,"X",+$G(IBACT))) S:'VALMBG VALMBG=1
"RTN","IBCECSA6",36,0)
 S VALMBCK="R"
"RTN","IBCECSA6",37,0)
 Q
"RTN","IBCECSA6",38,0)
 ;
"RTN","IBCECSA6",39,0)
SET(IBSRC,X,CNT,IBCNT) ;set list manager arrays
"RTN","IBCECSA6",40,0)
 S VALMCNT=VALMCNT+1,IBSRC=$G(IBSRC)
"RTN","IBCECSA6",41,0)
 ;
"RTN","IBCECSA6",42,0)
 I IBSRC D  Q
"RTN","IBCECSA6",43,0)
 . S ^TMP("PRCA_EOB",$J,IBCNT,VALMCNT)=X
"RTN","IBCECSA6",44,0)
 ;
"RTN","IBCECSA6",45,0)
 S ^TMP("IBCECSD",$J,VALMCNT,0)=X
"RTN","IBCECSA6",46,0)
 S ^TMP("IBCECSD",$J,"IDX",VALMCNT,CNT)=""
"RTN","IBCECSA6",47,0)
 S ^TMP("IBCECSD",$J,CNT)=VALMCNT_U_IBCNT
"RTN","IBCECSA6",48,0)
 Q
"RTN","IBCECSA6",49,0)
 ;
"RTN","IBCECSA6",50,0)
GEN ;
"RTN","IBCECSA6",51,0)
 S IBSRC=$G(IBSRC) Q:IBSRC=1
"RTN","IBCECSA6",52,0)
 N IBREC1,IBTMP,IBSPL
"RTN","IBCECSA6",53,0)
 S IBSPL=+$O(^IBM(361.1,IBCNT,8,0)),IBSPL=(+$O(^(IBSPL))'=IBSPL)
"RTN","IBCECSA6",54,0)
 S IB=$$SETSTR^VALM1("EOB GENERAL INFORMATION:","",1,50)
"RTN","IBCECSA6",55,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",56,0)
 I 'IBSRC D
"RTN","IBCECSA6",57,0)
 . D CNTRL^VALM10(VALMCNT,1,24,IORVON,IORVOFF)
"RTN","IBCECSA6",58,0)
 . S ^TMP("IBCECSD",$J,"X",1)=VALMCNT
"RTN","IBCECSA6",59,0)
 S IB=$$SETSTR^VALM1("Type        : "_$S(IBTYP:"MEDICARE MRA",1:"NORMAL EOB")_$S(IBSPL:" (SPLIT IN A/R)",1:""),"",2,39)
"RTN","IBCECSA6",60,0)
 S IB=$$SETSTR^VALM1("EOB Paid DT  : "_$$FMTE^XLFDT($P(IBREC,U,6),2),IB,41,38)
"RTN","IBCECSA6",61,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",62,0)
 S IB=$$SETSTR^VALM1("Entry Dt/Tm : "_$$FMTE^XLFDT($P(IBREC,U,5),2),"",2,39)
"RTN","IBCECSA6",63,0)
 S IBTMP=$P(IBREC,U,13)
"RTN","IBCECSA6",64,0)
 S IB=$$SETSTR^VALM1("Claim Status : "_$$EXTERNAL^DILFD(361.1,.13,"",IBTMP),IB,41,38)
"RTN","IBCECSA6",65,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",66,0)
 I 'IBSRC D
"RTN","IBCECSA6",67,0)
 . S IB=$$SETSTR^VALM1($S($P(IBREC,U,17):"Manual Entry: YES",1:""),"",2,39)
"RTN","IBCECSA6",68,0)
 . S IBTMP=$P(IBREC,U,16)
"RTN","IBCECSA6",69,0)
 . S IB=$$SETSTR^VALM1("Review Status: "_$$EXTERNAL^DILFD(361.1,.16,"",IBTMP),IB,41,38)
"RTN","IBCECSA6",70,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",71,0)
 S IB=$$SETSTR^VALM1("Entered By  : "_$P($G(^VA(200,+$P(IBREC,U,18),0)),U),"",2,39)
"RTN","IBCECSA6",72,0)
 S IBTMP=$P(IBREC,U,15)
"RTN","IBCECSA6",73,0)
 S IB=$$SETSTR^VALM1("Insurance Seq: "_$$EXTERNAL^DILFD(361.1,.15,"",IBTMP),IB,41,38)
"RTN","IBCECSA6",74,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",75,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,100))
"RTN","IBCECSA6",76,0)
 I $S($G(IBFULL):1,1:$P(IBREC1,U,4)'=""!($P(IBREC1,U,3)'="")) D
"RTN","IBCECSA6",77,0)
 . S IB=$$SETSTR^VALM1("Last Edited : "_$$DAT1^IBOUTL($P(IBREC1,U,4),1),"",2,39)
"RTN","IBCECSA6",78,0)
 . S IB=$$SETSTR^VALM1("Last Edit By : "_$P($G(^VA(200,+$P(IBREC1,U,3),0)),U),IB,41,38)
"RTN","IBCECSA6",79,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",80,0)
 ;
"RTN","IBCECSA6",81,0)
 D INSINF^IBCECSA7(+IBREC,CNT,IBCNT)
"RTN","IBCECSA6",82,0)
 ;
"RTN","IBCECSA6",83,0)
 I $S($G(IBFULL):1,1:$P($G(^IBM(361.1,IBCNT,6)),U)'=""!($P($G(^IBM(361.1,IBCNT,6)),U,2)'="")) D
"RTN","IBCECSA6",84,0)
 . S IB=$$SETSTR^VALM1("New Pat. Nm.: "_$P($G(^IBM(361.1,IBCNT,6)),U),"",2,39)
"RTN","IBCECSA6",85,0)
 . S IB=$$SETSTR^VALM1("New Pat. Id  : "_$P($G(^IBM(361.1,IBCNT,6)),U,2),IB,41,38)
"RTN","IBCECSA6",86,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",87,0)
 D:IBSRC SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",88,0)
 Q
"RTN","IBCECSA6",89,0)
 ;
"RTN","IBCECSA6",90,0)
PAY ;
"RTN","IBCECSA6",91,0)
 S IBSRC=$G(IBSRC) Q:IBSRC=1
"RTN","IBCECSA6",92,0)
 N IBREC1,IBTMP
"RTN","IBCECSA6",93,0)
 S IB=$$SETSTR^VALM1("PAYER INFORMATION:","",1,50)
"RTN","IBCECSA6",94,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",95,0)
 I 'IBSRC D
"RTN","IBCECSA6",96,0)
 . D CNTRL^VALM10(VALMCNT,1,18,IORVON,IORVOFF)
"RTN","IBCECSA6",97,0)
 . S ^TMP("IBCECSD",$J,"X",2)=VALMCNT
"RTN","IBCECSA6",98,0)
 S IB=$$SETSTR^VALM1("Payer Name   : "_$P($G(^DIC(36,+$P(IBREC,U,2),0)),U),"",2,39)
"RTN","IBCECSA6",99,0)
 S IB=$$SETSTR^VALM1("Payer Id    : "_$P(IBREC,U,3),IB,41,38)
"RTN","IBCECSA6",100,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",101,0)
 S IB=$$SETSTR^VALM1("ICN          : "_$P(IBREC,U,14),"",2,39)
"RTN","IBCECSA6",102,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",103,0)
 I $P(IBREC,U,9)'=""!($P(IBREC,U,8)'="") D
"RTN","IBCECSA6",104,0)
 . S IB=$$SETSTR^VALM1("Cross Ovr ID : "_$P(IBREC,U,9),"",2,39)
"RTN","IBCECSA6",105,0)
 . S IB=$$SETSTR^VALM1("Cross Ovr Nm: "_$P(IBREC,U,8),IB,41,38)
"RTN","IBCECSA6",106,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",107,0)
 D:IBSRC SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",108,0)
 Q
"RTN","IBCECSA6",109,0)
 ;
"RTN","IBCECSA6",110,0)
CLVL ;
"RTN","IBCECSA6",111,0)
 N IBREC1,IBTMP,IBRL
"RTN","IBCECSA6",112,0)
 S IB=$$SETSTR^VALM1("CLAIM LEVEL PAY STATUS:","",1,50),IBSRC=$G(IBSRC)
"RTN","IBCECSA6",113,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",114,0)
 I 'IBSRC D
"RTN","IBCECSA6",115,0)
 . D CNTRL^VALM10(VALMCNT,1,23,IORVON,IORVOFF)
"RTN","IBCECSA6",116,0)
 . S ^TMP("IBCECSD",$J,"X",3)=VALMCNT
"RTN","IBCECSA6",117,0)
 I '$D(^IBM(361.1,IBCNT,2)),'$D(^IBM(361.1,IBCNT,1)) D SET(IBSRC," NONE",CNT,IBCNT) Q
"RTN","IBCECSA6",118,0)
 S IB=$$SETSTR^VALM1("Tot Submitted Chrg: "_$$A10($P($G(^IBM(361.1,IBCNT,2)),U,4)),"",2,39)
"RTN","IBCECSA6",119,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,1))
"RTN","IBCECSA6",120,0)
 S IB=$$SETSTR^VALM1("Covered Amt       : "_$$A10($P(IBREC1,U,3)),IB,41,38)
"RTN","IBCECSA6",121,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",122,0)
 S IB=$$SETSTR^VALM1("Payer Paid Amt    : "_$$A10($P(IBREC1,U)),"",2,39)
"RTN","IBCECSA6",123,0)
 S IB=$$SETSTR^VALM1("Patient Resp. Amt : "_$$A10($P(IBREC1,U,2)),IB,41,38)
"RTN","IBCECSA6",124,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",125,0)
 S (IB,IBRL)=""
"RTN","IBCECSA6",126,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,4)) S IB=$$SETSTR^VALM1("Discount Amt      : "_$$A10($P(IBREC1,U,4)),"",2,39),IBRL=1
"RTN","IBCECSA6",127,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,5)) S IB=$$SETSTR^VALM1("Per Day Limit Amt : "_$$A10($P(IBREC1,U,5)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",128,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,8)) S IB=$$SETSTR^VALM1("Tax Amt           : "_$$A10($P(IBREC1,U,8)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",129,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,9)) S IB=$$SETSTR^VALM1("Tot Before Tax Amt: "_$$A10($P(IBREC1,U,9)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",130,0)
 I $S(IBFULL:1,1:$P($G(^IBM(361.1,IBCNT,2)),U,3)) S IB=$$SETSTR^VALM1("Total Allowed Amt : "_$$A10($P($G(^IBM(361.1,IBCNT,2)),U,3)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",131,0)
 I $S(IBFULL:1,1:$P($G(^IBM(361.1,IBCNT,2)),U,5)) S IB=$$SETSTR^VALM1("Negative Reimb Amt: "_$$A10($P($G(^IBM(361.1,IBCNT,2)),U,5)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",132,0)
 I $S(IBFULL:1,1:$P(IBREC,U,12)) S IB=$$SETSTR^VALM1("Discharge Fraction: "_$$A10($P(IBREC,U,12)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",133,0)
 I $S(IBFULL:1,1:$P(IBREC,U,10)) S IB=$$SETSTR^VALM1("DRG Code Used     :"_$$RJ^XLFSTR($P(IBREC,U,10),11," "),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",134,0)
 I $S(IBFULL:1,1:$P(IBREC,U,11)) S IB=$$SETSTR^VALM1("DRG Weight Used   :"_$$RJ^XLFSTR($P(IBREC,U,11),11," "),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",135,0)
 D:IBRL'="" SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",136,0)
 D:IBSRC SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",137,0)
 Q
"RTN","IBCECSA6",138,0)
 ;
"RTN","IBCECSA6",139,0)
MOUT ;
"RTN","IBCECSA6",140,0)
 N IBREC1,IBRL
"RTN","IBCECSA6",141,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,3)),IBSRC=$G(IBSRC)
"RTN","IBCECSA6",142,0)
 I IBREC1="",$G(IBSRC) Q
"RTN","IBCECSA6",143,0)
 I IBREC1="" D:'$D(^IBM(361.1,IBCNT,4)) SET(IBSRC,"  NONE",CNT,IBCNT) D SET(IBSRC,"",CNT,IBCNT) Q
"RTN","IBCECSA6",144,0)
 D SET(IBSRC," OUTPATIENT:",CNT,IBCNT)
"RTN","IBCECSA6",145,0)
 S IBRL=""
"RTN","IBCECSA6",146,0)
 I $S(IBFULL:1,1:$P(IBREC1,U)) S IB=$$SETSTR^VALM1("Reimburse Rate    : "_$$P10($P(IBREC1,U)),"",$S('IBRL:4,1:40),$S('IBRL:41,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",147,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,2)) S IB=$$SETSTR^VALM1("HCPCS Pay Amt     : "_$$A10($P(IBREC1,U,2)),IB,$S('IBRL:4,1:40),$S('IBRL:41,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",148,0)
 D:IBRL=0 SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",149,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,8)) S IB=$$SETSTR^VALM1("Esrd Paid Amt     : "_$$A10($P(IBREC1,U,8)),"",$S('IBRL:4,1:40),$S('IBRL:41,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",150,0)
 D:IBRL=0 SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",151,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,9)) S IB=$$SETSTR^VALM1("Non-Pay Prof Comp : "_$$A10($P(IBREC1,U,9)),IB,$S('IBRL:4,1:40),$S('IBRL:41,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",152,0)
 D:IBRL'="" SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",153,0)
 D REMARK^IBCECSA5
"RTN","IBCECSA6",154,0)
 D SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",155,0)
 Q
"RTN","IBCECSA6",156,0)
 ;
"RTN","IBCECSA6",157,0)
CLVLA ;
"RTN","IBCECSA6",158,0)
 N IBREC,IBFLG,Y,Z
"RTN","IBCECSA6",159,0)
 S IB=$$SETSTR^VALM1("CLAIM LEVEL ADJUSTMENTS:","",1,50),IBSRC=$G(IBSRC)
"RTN","IBCECSA6",160,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",161,0)
 I 'IBSRC D
"RTN","IBCECSA6",162,0)
 . D CNTRL^VALM10(VALMCNT,1,24,IORVON,IORVOFF)
"RTN","IBCECSA6",163,0)
 . S ^TMP("IBCECSD",$J,"X",4)=VALMCNT
"RTN","IBCECSA6",164,0)
 S (Y,IBFLG)=0 F  S Y=$O(^IBM(361.1,IBCNT,10,Y)) Q:'Y  D
"RTN","IBCECSA6",165,0)
 . S IBREC=$G(^IBM(361.1,IBCNT,10,Y,0)),IBFLG=1
"RTN","IBCECSA6",166,0)
 . S IBREC=$$EXTERNAL^DILFD(361.11,.01,"",$P(IBREC,U,1))
"RTN","IBCECSA6",167,0)
 . D SET(IBSRC," GROUP CODE: "_IBREC,CNT,IBCNT)
"RTN","IBCECSA6",168,0)
 . S Z=0 F  S Z=$O(^IBM(361.1,IBCNT,10,Y,1,Z)) Q:'Z  D
"RTN","IBCECSA6",169,0)
 .. S IBREC=$G(^IBM(361.1,IBCNT,10,Y,1,Z,0))
"RTN","IBCECSA6",170,0)
 .. S IB=$$SETSTR^VALM1("REASON CODE: "_$P(IBREC,U)_"  "_$P(IBREC,U,4),"",3,77)
"RTN","IBCECSA6",171,0)
 .. D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",172,0)
 .. S IB=$$SETSTR^VALM1("Amount: "_$$A10($P(IBREC,U,2)),"",3,40)
"RTN","IBCECSA6",173,0)
 .. S IB=$$SETSTR^VALM1("Quantity: "_$P(IBREC,U,3),IB,41,38)
"RTN","IBCECSA6",174,0)
 .. D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",175,0)
 I 'IBFLG D SET(IBSRC," NONE",CNT,IBCNT)
"RTN","IBCECSA6",176,0)
 D:IBSRC SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",177,0)
 Q
"RTN","IBCECSA6",178,0)
 ;
"RTN","IBCECSA6",179,0)
A10(X) ; returns a dollar amount right justified to 10 characters
"RTN","IBCECSA6",180,0)
 Q $$RJ^XLFSTR($FN(X,"",2),10," ")
"RTN","IBCECSA6",181,0)
 ;
"RTN","IBCECSA6",182,0)
P10(X) ; returns a percentage amount right justified to 10 characters
"RTN","IBCECSA6",183,0)
 ; X is assumed to be a decimal number between 0 and 1 inclusive
"RTN","IBCECSA6",184,0)
 ;   so it will be multiplied by 100.
"RTN","IBCECSA6",185,0)
 Q $$RJ^XLFSTR((X*100)_"%",10," ")
"RTN","IBCECSA6",186,0)
 ;
"RTN","IBCECSA7")
0^17^B7222380
"RTN","IBCECSA7",1,0)
IBCECSA7 ;ALB/ESG - VIEW EOB SCREEN CONTINUED ;26-JUN-2003
"RTN","IBCECSA7",2,0)
 ;;2.0;INTEGRATED BILLING;**135**;21-MAR-1994
"RTN","IBCECSA7",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCECSA7",4,0)
 ;
"RTN","IBCECSA7",5,0)
 Q     ; Must be called at proper entry points
"RTN","IBCECSA7",6,0)
 ;
"RTN","IBCECSA7",7,0)
RDATA ;
"RTN","IBCECSA7",8,0)
 N IBRM,IBREC,IBFLG,IBFST,Y
"RTN","IBCECSA7",9,0)
 Q:$G(IBSRC)
"RTN","IBCECSA7",10,0)
 S IB=$$SETSTR^VALM1("REVIEW DATA:","",1,50)
"RTN","IBCECSA7",11,0)
 D SET(IB)
"RTN","IBCECSA7",12,0)
 D CNTRL^VALM10(VALMCNT,1,12,IORVON,IORVOFF)
"RTN","IBCECSA7",13,0)
 S ^TMP("IBCECSD",$J,"X",8)=VALMCNT
"RTN","IBCECSA7",14,0)
 S (Y,IBFLG)=0 F  S Y=$O(^IBM(361.1,IBCNT,21,Y)) Q:'Y  D
"RTN","IBCECSA7",15,0)
 . S IBREC=$G(^IBM(361.1,IBCNT,21,Y,0)),IBFLG=1
"RTN","IBCECSA7",16,0)
 . D SET("  REVIEW DATE/TIME: "_$$DAT1^IBOUTL($P(IBREC,U),1))
"RTN","IBCECSA7",17,0)
 . S Z=0,IBFST=1 F  S Z=$O(^IBM(361.1,IBCNT,21,Y,1,Z)) Q:'Z  D
"RTN","IBCECSA7",18,0)
 .. S IBRM=$G(^IBM(361.1,IBCNT,21,Y,1,Z,0))
"RTN","IBCECSA7",19,0)
 .. D:IBFST SET("  COMMENT:"_$E(IBRM,1,68))
"RTN","IBCECSA7",20,0)
 .. D TXT^IBCECSA5(IBRM,68,11)
"RTN","IBCECSA7",21,0)
 .. S IBFST=0
"RTN","IBCECSA7",22,0)
 D:'IBFLG SET(" NONE")
"RTN","IBCECSA7",23,0)
 Q
"RTN","IBCECSA7",24,0)
 ;
"RTN","IBCECSA7",25,0)
ARCP ; A/R corrected payment data from splitting payment in EOB Worklist
"RTN","IBCECSA7",26,0)
 N Z,Z0
"RTN","IBCECSA7",27,0)
 I '$O(^IBM(361.1,IBCNT,8,0)) Q
"RTN","IBCECSA7",28,0)
 S IB=$$SETSTR^VALM1(" **A/R CORRECTED PAYMENT DATA:","",1,50)
"RTN","IBCECSA7",29,0)
 D SET(IB)
"RTN","IBCECSA7",30,0)
 I '$G(IBSRC) D
"RTN","IBCECSA7",31,0)
 . D CNTRL^VALM10(VALMCNT,1,27,IORVON,IORVOFF)
"RTN","IBCECSA7",32,0)
 . S ^TMP("IBCECSD",$J,"X",5)=VALMCNT
"RTN","IBCECSA7",33,0)
 D SET("   TOTAL AMT PD: "_$J(+$P($G(^IBM(361.1,IBCNT,1)),U,1),"",2))
"RTN","IBCECSA7",34,0)
 S Z=0 F  S Z=$O(^IBM(361.1,IBCNT,8,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","IBCECSA7",35,0)
 . S IB=$E($J("",6)_$S($P(Z0,U,3):$$BN1^PRCAFN(+$P(Z0,U,3)),1:"[suspense]"_$P(Z0,U))_$J("",25),1,25)_"  "_$J(+$P(Z0,U,2),"",2)
"RTN","IBCECSA7",36,0)
 . D SET(IB)
"RTN","IBCECSA7",37,0)
 Q
"RTN","IBCECSA7",38,0)
 ;
"RTN","IBCECSA7",39,0)
INSINF(IBREC,CNT,IBCNT) ; Extract insured information (moved from IBCECSA6)
"RTN","IBCECSA7",40,0)
 N IB,IBZ,IBSEQ,IBREL,Z,Z0
"RTN","IBCECSA7",41,0)
 S IBSEQ=+$$COBN^IBCEF(IBREC)
"RTN","IBCECSA7",42,0)
 S IB=$$SETSTR^VALM1("Patient Name: "_$P($G(^DPT(+$P($G(^DGCR(399,IBREC,0)),U,2),0)),U),"",2,39)
"RTN","IBCECSA7",43,0)
 D F^IBCEF("N-ALL INSURED PT RELATION","IBZ",,IBREC)
"RTN","IBCECSA7",44,0)
 S IBREL=$G(IBZ(IBSEQ))
"RTN","IBCECSA7",45,0)
 S IB=$$SETSTR^VALM1("Pt. Relation : "_$$EXTERNAL^DILFD(2.312,16,"",IBREL),IB,41,38)
"RTN","IBCECSA7",46,0)
 D SET^IBCECSA6($G(IBSRC),IB,CNT,IBCNT)
"RTN","IBCECSA7",47,0)
 S Z=2,Z0=39,IB=""
"RTN","IBCECSA7",48,0)
 I +IBREL'=1 D
"RTN","IBCECSA7",49,0)
 . D F^IBCEF("N-ALL INSURED FULL NAMES","IBZ",,IBREC)
"RTN","IBCECSA7",50,0)
 . S IB=$$SETSTR^VALM1("Insured Name: "_$G(IBZ(IBSEQ)),IB,Z,Z0)
"RTN","IBCECSA7",51,0)
 . S Z=41,Z0=38
"RTN","IBCECSA7",52,0)
 D F^IBCEF("N-ALL INSURANCE NUMBER","IBZ",,IBREC)
"RTN","IBCECSA7",53,0)
 S IB=$$SETSTR^VALM1("Insured ID  "_$S(Z=41:" ",1:"")_": "_$G(IBZ(IBSEQ)),IB,Z,Z0)
"RTN","IBCECSA7",54,0)
 D SET^IBCECSA6($G(IBSRC),IB,CNT,IBCNT)
"RTN","IBCECSA7",55,0)
 Q
"RTN","IBCECSA7",56,0)
 ;
"RTN","IBCECSA7",57,0)
SET(IB,IBSAV) ;
"RTN","IBCECSA7",58,0)
 I '$G(IBSAV) D SET^IBCECSA6($G(IBSRC),IB,CNT,IBCNT)
"RTN","IBCECSA7",59,0)
 Q
"RTN","IBCECSA7",60,0)
 ;
"RTN","IBCEF22")
0^16^B50754397
"RTN","IBCEF22",1,0)
IBCEF22 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS ;06-FEB-96
"RTN","IBCEF22",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,135**;21-MAR-94
"RTN","IBCEF22",3,0)
 ;
"RTN","IBCEF22",4,0)
 ;  OVERFLOW FROM ROUTINE IBCEF2
"RTN","IBCEF22",5,0)
HOS(IBIFN) ; Extract rev codes for episode billed on a UB92 into IBXDATA
"RTN","IBCEF22",6,0)
 ; IBIFN = bill ien
"RTN","IBCEF22",7,0)
 ; Format: IBXDATA(n) =
"RTN","IBCEF22",8,0)
 ;  rev cd ptr ^ CPT CODE ptr ^ unit chg ^ units ^ tot charge
"RTN","IBCEF22",9,0)
 ;    ^ tot uncov^ FL49 value ^ ien of rev code multiple entry(s)
"RTN","IBCEF22",10,0)
 ;      (separated by ";")
"RTN","IBCEF22",11,0)
 ;    ^ modifiers specific to rev code/proc (separated by ",")
"RTN","IBCEF22",12,0)
 ;    ^ rev code date, if it can be determined by a corresponding proc
"RTN","IBCEF22",13,0)
 ;
"RTN","IBCEF22",14,0)
 ;   Also Returns IBXDATA(IBI,"COB",COB,m) with COB data for each line
"RTN","IBCEF22",15,0)
 ;      item found in an accepted EOB for the bill and = the reference
"RTN","IBCEF22",16,0)
 ;      line in the first '^' piece followed by the '0' node of file
"RTN","IBCEF22",17,0)
 ;      361.115 (LINE LEVEL ADJUSTMENTS)
"RTN","IBCEF22",18,0)
 ;       COB = COB seq # of adjustment's ins co, m = seq #
"RTN","IBCEF22",19,0)
 ;         -- AND --
"RTN","IBCEF22",20,0)
 ;    IBXDATA(IBI,"COB",COB,m,z,p)=
"RTN","IBCEF22",21,0)
 ;           the '0' node for each subordinate entry of file
"RTN","IBCEF22",22,0)
 ;           361.11511 (REASONS) (Only first 3 pieces for 837)
"RTN","IBCEF22",23,0)
 ;       z = group code, sometimes preceeded by a space   p = seq #
"RTN","IBCEF22",24,0)
 ;
"RTN","IBCEF22",25,0)
 N IBDA,IBCOMB,IBINPAT,IBLN,IBX,IBY,IBZ,IBS,IBSS,IBXTRA,IBX1,IBXS,IBP,IBPO,IBP1,IBDEF,Z,Z0,Z1,ZX,QQ,IBMOD
"RTN","IBCEF22",26,0)
 S IBINPAT=$$INPAT^IBCEF(IBIFN,1)
"RTN","IBCEF22",27,0)
 I 'IBINPAT D F^IBCEF("N-STATEMENT COVERS FROM DATE","IBZ",,IBIFN)
"RTN","IBCEF22",28,0)
 S IBDEF=$G(IBZ)
"RTN","IBCEF22",29,0)
 ; loop through all proc codes - sort by procedure, modifiers and print order
"RTN","IBCEF22",30,0)
 S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"CP",IBDA)) Q:'IBDA  S IBZ=$G(^(IBDA,0)) I IBZ D
"RTN","IBCEF22",31,0)
 . S IBP(+$P(IBZ,U)_U_$$GETMOD^IBEFUNC(IBIFN,IBDA,1),$S($P(IBZ,U,4):$P(IBZ,U,4),1:999),IBDA)=$P(IBZ,U,2)
"RTN","IBCEF22",32,0)
 ; loop through all rev codes - sort by rev code
"RTN","IBCEF22",33,0)
 S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"RC",IBDA)) Q:'IBDA  S IBZ=$G(^(IBDA,0)) I IBZ S IBMOD="" D
"RTN","IBCEF22",34,0)
 . S IBX=$G(^DGCR(399.2,+IBZ,0)),IBX1="",IBPO=0
"RTN","IBCEF22",35,0)
 . ; Auto-added procedure charge
"RTN","IBCEF22",36,0)
 . I $P(IBZ,U,10)=4,$P(IBZ,U,11) D  ; Soft link to proc
"RTN","IBCEF22",37,0)
 .. S Z=$G(^DGCR(399,IBIFN,"CP",$P(IBZ,U,11),0))
"RTN","IBCEF22",38,0)
 .. Q:Z=""
"RTN","IBCEF22",39,0)
 .. S ZX=+Z_U_$$GETMOD^IBEFUNC(IBIFN,$P(IBZ,U,11),1)
"RTN","IBCEF22",40,0)
 .. Q:'$O(IBP(ZX,0))&'$O(IBP1(ZX,0))
"RTN","IBCEF22",41,0)
 .. I $P(IBZ,U,6) Q:$S($P(Z,U)'["ICPT":1,1:+$P(Z,U)'=$P(IBZ,U,6))
"RTN","IBCEF22",42,0)
 .. S Z0=$S($D(IBP(ZX)):$O(IBP(ZX,0)),1:$O(IBP1(ZX,0)))
"RTN","IBCEF22",43,0)
 .. S:'Z0 Z0=999
"RTN","IBCEF22",44,0)
 .. Q:'$D(IBP(ZX,+Z0,$P(IBZ,U,11)))&'$D(IBP1(ZX,+Z0,$P(IBZ,U,11)))
"RTN","IBCEF22",45,0)
 .. I '$D(IBP1(ZX,+Z0,$P(IBZ,U,11))) S IBP1(ZX,+Z0,$P(IBZ,U,11))=IBP(ZX,+Z0,$P(IBZ,U,11)) K IBP(ZX,+Z0,$P(IBZ,U,11))
"RTN","IBCEF22",46,0)
 .. S IBX1=$P(Z,U,2),IBPO=+Z0,IBMOD=$P(ZX,U,2)
"RTN","IBCEF22",47,0)
 . ; Manually added charge with a procedure
"RTN","IBCEF22",48,0)
 . I $P(IBZ,U,6),$S($P(IBZ,U,10)=4:'$P(IBZ,U,11),1:1),+$O(IBP($P(IBZ,U,6)))=$P(IBZ,U,6) D
"RTN","IBCEF22",49,0)
 .. ; No direct link, but a proc exists on rev code and in procedure mult without and then with modifiers
"RTN","IBCEF22",50,0)
 .. S ZX=$O(IBP($P(IBZ,U,6)))
"RTN","IBCEF22",51,0)
 .. F QQ=1,2 Q:IBPO  S Z="" F  S Z=$O(IBP(ZX,Z),-1) Q:'Z!(IBPO)  S Z0=0 F  S Z0=$O(IBP(ZX,Z,Z0)) Q:'Z0  S Z1=$G(^DGCR(399,IBIFN,"CP",Z0,0)) D  Q:IBPO
"RTN","IBCEF22",52,0)
 ... ; Ignore if not a CPT or a modifier exists and this is first pass
"RTN","IBCEF22",53,0)
 ... S IBMOD=$$GETMOD^IBEFUNC(IBIFN,Z0,1)
"RTN","IBCEF22",54,0)
 ... Q:$S($P(Z1,U)'["ICPT":1,QQ=1:IBMOD'="",1:0)
"RTN","IBCEF22",55,0)
 ... S IBPO=+$P(Z1,U,4),IBX1=$P(Z1,U,2)
"RTN","IBCEF22",56,0)
 ... K IBP(+Z1_U_IBMOD,Z,Z0)
"RTN","IBCEF22",57,0)
 . ;
"RTN","IBCEF22",58,0)
 . I IBX'="" D  ; revenue code is valid
"RTN","IBCEF22",59,0)
 .. F Z=900:1 S Z0=$S(IBPO:IBPO,$D(IBX(" "_$P(IBX,U),Z)):0,1:Z) I Z0 S IBPO=Z0 Q
"RTN","IBCEF22",60,0)
 .. S IBX(" "_$P(IBX,U),IBPO,IBDA)=IBX,IBX(" "_$P(IBX,U),IBPO,IBDA,"DT")=$S(IBX1:IBX1,1:IBDEF),IBX(" "_$P(IBX,U),IBPO,IBDA,"MOD")=IBMOD
"RTN","IBCEF22",61,0)
 ;
"RTN","IBCEF22",62,0)
 S IBS="" F  S IBS=$O(IBX(IBS)) Q:IBS=""  S IBPO=0 F  S IBPO=$O(IBX(IBS,IBPO)) Q:'IBPO  D
"RTN","IBCEF22",63,0)
 . S IBDA=0 F  S IBDA=$O(IBX(IBS,IBPO,IBDA)) Q:'IBDA  S IBX=$G(IBX(IBS,IBPO,IBDA)),IBZ=$G(^DGCR(399,IBIFN,"RC",IBDA,0)) I IBX'="" D
"RTN","IBCEF22",64,0)
 .. ;S IBXS=$P(IBZ,U,2)_U_$P(IBZ,U,6)_U_$G(IBX(IBS,IBPO,IBDA,"MOD"))
"RTN","IBCEF22",65,0)
 .. S IBXS=U_$P(IBZ,U,6)_U_$G(IBX(IBS,IBPO,IBDA,"MOD")) ;combine same proc and modifiers regardless of rate
"RTN","IBCEF22",66,0)
 .. S:IBPO'<900&'$$ACCRV($P(IBS," ",2))&$S(IBINPAT:$P(IBZ,U,6),1:1) IBCOMB(IBS,IBXS,IBPO)=IBDA
"RTN","IBCEF22",67,0)
 .. S:'$D(IBX1(IBS,IBPO,IBXS,1)) IBX1(IBS,IBPO,IBXS,1)=IBX,IBX1(IBS,IBPO,IBXS,2)=IBZ
"RTN","IBCEF22",68,0)
 .. S $P(IBX1(IBS,IBPO,IBXS),U)=$P($G(IBX1(IBS,IBPO,IBXS)),U)+$P(IBZ,U,3)
"RTN","IBCEF22",69,0)
 .. S $P(IBX1(IBS,IBPO,IBXS),U,2)=$P($G(IBX1(IBS,IBPO,IBXS)),U,2)+$P(IBZ,U,4)
"RTN","IBCEF22",70,0)
 .. S IBX1(IBS,IBPO,IBXS,"DT")=$G(IBX(IBS,IBPO,IBDA,"DT")),IBX1(IBS,IBPO,IBXS,"IEN")=$G(IBX1(IBS,IBPO,IBXS,"IEN"))_$S($G(IBX1(IBS,IBPO,IBXS,"IEN")):";",1:"")_IBDA
"RTN","IBCEF22",71,0)
 ;
"RTN","IBCEF22",72,0)
 S IBS="" F  S IBS=$O(IBX1(IBS)) Q:IBS=""  S IBPO=899 F  S IBPO=$O(IBX1(IBS,IBPO)) Q:'IBPO  D  ; Check to combine like rev codes without print order
"RTN","IBCEF22",73,0)
 . N Q,Q0,Q1,Z,Z0,Z1,Z2,IBZ1,IBZ2
"RTN","IBCEF22",74,0)
 . S Z=""
"RTN","IBCEF22",75,0)
 . N IBACC
"RTN","IBCEF22",76,0)
 . F  S Z=$O(IBX1(IBS,IBPO,Z)) Q:Z=""  S Q=IBPO F  S Q=$O(IBCOMB(IBS,Z,Q)) Q:'Q  I Q'=IBPO S IBZ1=$G(IBX1(IBS,IBPO,Z,1)),IBZ2=$G(IBX1(IBS,IBPO,Z,2)) D
"RTN","IBCEF22",77,0)
 .. Q:$G(IBX1(IBS,IBPO,Z,1))'=$G(IBX1(IBS,Q,Z,1))
"RTN","IBCEF22",78,0)
 .. S Q1=1,IBACC=$$ACCRV(+$P(IBS," ",2))
"RTN","IBCEF22",79,0)
 .. F Q0=1,5:1:7,10:1:13,15 D  Q:'Q1
"RTN","IBCEF22",80,0)
 ... I IBACC Q:Q0=5!(Q0>6)
"RTN","IBCEF22",81,0)
 ... I (Q0=11!(Q0=15))&($P($G(IBX1(IBS,Q,Z,2)),U,10)=3) Q
"RTN","IBCEF22",82,0)
 ... I Q0=5,'IBINPAT Q
"RTN","IBCEF22",83,0)
 ... I $P($G(IBX1(IBS,IBPO,Z,2)),U,Q0)'=$P($G(IBX1(IBS,Q,Z,2)),U,Q0) S Q1=0
"RTN","IBCEF22",84,0)
 .. Q:'Q1
"RTN","IBCEF22",85,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,3)=$P(IBX1(IBS,IBPO,Z,2),U,3)+$P(IBX1(IBS,Q,Z,2),U,3)
"RTN","IBCEF22",86,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,4)=$P(IBX1(IBS,IBPO,Z,2),U,4)+$P(IBX1(IBS,Q,Z,2),U,4)
"RTN","IBCEF22",87,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,9)=$P(IBX1(IBS,IBPO,Z,2),U,9)+$P(IBX1(IBS,Q,Z,2),U,9)
"RTN","IBCEF22",88,0)
 .. S IBX1(IBS,IBPO,Z)=$P(IBX1(IBS,IBPO,Z,2),U,3)_U_$P(IBX1(IBS,IBPO,Z,2),U,4)
"RTN","IBCEF22",89,0)
 .. S IBX1(IBS,IBPO,Z,"IEN")=IBX1(IBS,IBPO,Z,"IEN")_";"_IBX1(IBS,Q,Z,"IEN")
"RTN","IBCEF22",90,0)
 .. K IBX1(IBS,Q,Z)
"RTN","IBCEF22",91,0)
 ;
"RTN","IBCEF22",92,0)
 S IBS="",IBLN=0
"RTN","IBCEF22",93,0)
 F  S IBS=$O(IBX1(IBS)) Q:IBS=""  S IBPO=0 F  S IBPO=$O(IBX1(IBS,IBPO)) Q:'IBPO  S IBSS="" F  S IBSS=$O(IBX1(IBS,IBPO,IBSS)) Q:IBSS=""  D
"RTN","IBCEF22",94,0)
 . S IBX=$G(IBX1(IBS,IBPO,IBSS,1)),IBZ=$G(IBX1(IBS,IBPO,IBSS,2))
"RTN","IBCEF22",95,0)
 . S IBLN=$G(IBLN)+1,IBXDATA(IBLN)=$P(IBX,U)_U_$P(IBZ,U,6)_U_$P(IBZ,U,2)_U_+IBX1(IBS,IBPO,IBSS)_U_+$P(IBX1(IBS,IBPO,IBSS),U,2),$P(IBXDATA(IBLN),U,10)=$G(IBX1(IBS,IBPO,IBSS,"DT"))
"RTN","IBCEF22",96,0)
 . S $P(IBXDATA(IBLN),U,6)=$P(IBZ,U,9),$P(IBXDATA(IBLN),U,7)=$P(IBZ,U,13),$P(IBXDATA(IBLN),U,8)=$G(IBX1(IBS,IBPO,IBSS,"IEN")),$P(IBXDATA(IBLN),U,9)=$P($P(IBSS,U,3),",",1,2)
"RTN","IBCEF22",97,0)
 . ; Extract line lev COB data for sec or tert bill
"RTN","IBCEF22",98,0)
 . I $$COBN^IBCEF(IBIFN)>1 D COBLINE^IBCEU1(IBIFN,IBLN,.IBXDATA,,.IBXTRA)  I $D(IBXTRA) D COMBO^IBCEU2(.IBXDATA,.IBXTRA,1) ;Handle bundled/unbundled
"RTN","IBCEF22",99,0)
 I $D(^IBA(362.4,"AIFN"_IBIFN))!$D(^IBA(362.5,"AIFN"_IBIFN)) D
"RTN","IBCEF22",100,0)
 . N IBARRAY,IBX,IBZ,IBRX,IBLCNT
"RTN","IBCEF22",101,0)
 . S IBLCNT=0
"RTN","IBCEF22",102,0)
 . ; Print prescriptions, prosthetics on front of UB-92
"RTN","IBCEF22",103,0)
 . D SET^IBCSC5A(IBIFN,.IBARRAY)
"RTN","IBCEF22",104,0)
 . I $P(IBARRAY,U,2) D
"RTN","IBCEF22",105,0)
 .. S IBX=+$P(IBARRAY,U,2)+2
"RTN","IBCEF22",106,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB92",IBLCNT)=""
"RTN","IBCEF22",107,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB92",IBLCNT)="PRESCRIPTION REFILLS:",IBLCNT=2
"RTN","IBCEF22",108,0)
 .. S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  S IBRX=IBARRAY(IBX,IBY) D
"RTN","IBCEF22",109,0)
 ... S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB92",IBLCNT)=IBX_$J(" ",(11-$L(IBX)))_" "_$J($S($P(IBRX,U,6):"$"_$FN($P(IBRX,U,6),",",2),1:""),10)_"  "_$J($$FMTE^XLFDT(IBY,2),8)_"  "_$P($G(^PSDRUG(+$P(IBRX,U,2),0)),U,1)
"RTN","IBCEF22",110,0)
 ... S IBZ=$S(+$P(IBRX,U,4):"QTY: "_$P(IBRX,U,4)_" ",1:"")_$S(+$P(IBRX,U,3):"for "_$P(IBRX,U,3)_" days supply ",1:"") I IBZ'="" S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB92",IBLCNT)=$J(" ",35)_IBZ
"RTN","IBCEF22",111,0)
 ... S IBZ=$S($P(IBRX,U,5)'="":"NDC #: "_$P(IBRX,U,5),1:"") I IBZ'="" S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB92",IBLCNT)=$J(" ",35)_IBZ
"RTN","IBCEF22",112,0)
 . ;
"RTN","IBCEF22",113,0)
 . D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBCEF22",114,0)
 . I $P(IBARRAY,U,2) D
"RTN","IBCEF22",115,0)
 .. S IBLCNT=0
"RTN","IBCEF22",116,0)
 .. S IBX=+$P(IBARRAY,U,2)+2
"RTN","IBCEF22",117,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB92",IBLCNT)=""
"RTN","IBCEF22",118,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB92",IBLCNT)="PROSTHETIC REFILLS:",IBLCNT=2
"RTN","IBCEF22",119,0)
 .. S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  D
"RTN","IBCEF22",120,0)
 ... S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB92",IBLCNT)=$$FMTE^XLFDT(IBX,2)_" "_$J($S($P(IBARRAY(IBX,IBY),U,2):"$"_$FN($P(IBARRAY(IBX,IBY),U,2),",",2),1:""),10)_"  "_$E($P($$PIN^IBCSC5B(IBY),U,2),1,54)
"RTN","IBCEF22",121,0)
 Q
"RTN","IBCEF22",122,0)
 ;
"RTN","IBCEF22",123,0)
ACCRV(X) ; Returns 1 if X is an accomodation RC, 0 if not
"RTN","IBCEF22",124,0)
 Q ((X'<100&(X'>219))!(X=224))
"RTN","IBCEF22",125,0)
 ;
"RTN","IBCEMU1")
0^12^B1328522
"RTN","IBCEMU1",1,0)
IBCEMU1 ;ALB/DSM - IB MRA Utility ;26-MAR-2003
"RTN","IBCEMU1",2,0)
 ;;2.0;INTEGRATED BILLING;**135**;21-MAR-94
"RTN","IBCEMU1",3,0)
 ;
"RTN","IBCEMU1",4,0)
CHKSUM(IBARRAY) ; Incoming 835 checksum calculation
"RTN","IBCEMU1",5,0)
 ; This function calculates the checksum of the raw 835 data from
"RTN","IBCEMU1",6,0)
 ; the data in array IBARRAY.  This is done to prevent duplicates.
"RTN","IBCEMU1",7,0)
 ; Input parameter IBARRAY is the array reference where the data exists
"RTN","IBCEMU1",8,0)
 ;    at @IBARRAY@(n,0) where n is a sequential #
"RTN","IBCEMU1",9,0)
 ; For file 364.2, IBARRAY = "^IBA(364.2,IBIEN,2)" where IBIEN = the ien
"RTN","IBCEMU1",10,0)
 ;    of the entry in file 364.2 being evaluated
"RTN","IBCEMU1",11,0)
 ;
"RTN","IBCEMU1",12,0)
 NEW Y,LN,DATA,IBREC,POS,EOBFLG
"RTN","IBCEMU1",13,0)
 S Y=0,EOBFLG=0
"RTN","IBCEMU1",14,0)
 S LN=0
"RTN","IBCEMU1",15,0)
 F  S LN=$O(@IBARRAY@(LN)) Q:'LN  D
"RTN","IBCEMU1",16,0)
 . S DATA=$$EXT($G(@IBARRAY@(LN,0))) Q:DATA=""
"RTN","IBCEMU1",17,0)
 . S IBREC=$P(DATA,U,1)
"RTN","IBCEMU1",18,0)
 . I IBREC="835EOB"!(IBREC="835ERA") S EOBFLG=1 Q      ; set the EOB flag
"RTN","IBCEMU1",19,0)
 . I IBREC<1 Q             ; rec# too low
"RTN","IBCEMU1",20,0)
 . I IBREC'<99 Q           ; rec# too high
"RTN","IBCEMU1",21,0)
 . F POS=1:1:$L(DATA) S Y=Y+($A(DATA,POS)*POS)
"RTN","IBCEMU1",22,0)
 . Q
"RTN","IBCEMU1",23,0)
 ;
"RTN","IBCEMU1",24,0)
 I 'EOBFLG S Y=0   ; if this array is not an 835
"RTN","IBCEMU1",25,0)
 Q Y
"RTN","IBCEMU1",26,0)
 ;
"RTN","IBCEMU1",27,0)
EXT(DATA) ; Extracts from the text in DATA if the text contains 
"RTN","IBCEMU1",28,0)
 ;  "##RAW DATA: "
"RTN","IBCEMU1",29,0)
 Q $S(DATA["##RAW DATA: ":$P(DATA,"##RAW DATA: ",2,99),1:DATA)
"RTN","IBCEMU1",30,0)
 ;
"RTN","IBCEOB")
0^5^B71751656
"RTN","IBCEOB",1,0)
IBCEOB ;ALB/TMP - 835 EDI EOB MESSAGE PROCESSING ;20-JAN-99
"RTN","IBCEOB",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135**;21-MAR-94
"RTN","IBCEOB",3,0)
 Q
"RTN","IBCEOB",4,0)
 ;
"RTN","IBCEOB",5,0)
UPDEOB(IBTDA) ; Update EXPLANATION OF BENEFITS file (#361.1) from return msg
"RTN","IBCEOB",6,0)
 ; IBTDA = ien of return message
"RTN","IBCEOB",7,0)
 ; Function returns ien of EOB file entry or "" if errors found
"RTN","IBCEOB",8,0)
 ;          the data.  Any errors found are
"RTN","IBCEOB",9,0)
 ;          stored in array ^TMP("IBCERR-EOB",$J,n) in text format
"RTN","IBCEOB",10,0)
 ;          n = seq # and are stored with the EOB in a wp field
"RTN","IBCEOB",11,0)
 ;
"RTN","IBCEOB",12,0)
 N IB0,IB100,IBBTCH,IBE,IBMNUM,IBT,DLAYGO,DIC,DD,DO,X,Y,Z,Z0,Z1,IBEOB,IBBAD,IBOK,IB,IBA1,IBIFN,IBFILE
"RTN","IBCEOB",13,0)
 K ^TMP($J),^TMP("IBCERR-EOB",$J)
"RTN","IBCEOB",14,0)
 ;
"RTN","IBCEOB",15,0)
 S (IBBAD,IBEOB)=""
"RTN","IBCEOB",16,0)
 S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCEOB",17,0)
 S IBMNUM=+$P(IB0,U)
"RTN","IBCEOB",18,0)
 S X=+$G(^IBA(364,+$P(IB0,U,5),0))
"RTN","IBCEOB",19,0)
 ;
"RTN","IBCEOB",20,0)
 G:$S(IBMNUM=""!(X=""):1,1:$D(^IBM(361.1,"AC",IBMNUM))) UPDQ
"RTN","IBCEOB",21,0)
 ;
"RTN","IBCEOB",22,0)
 ; Duplicate EOB Check
"RTN","IBCEOB",23,0)
 S IBFILE="^IBA(364.2,"_IBTDA_",2)"
"RTN","IBCEOB",24,0)
 I $$DUP(IBFILE,X) G UPDQ
"RTN","IBCEOB",25,0)
 ;
"RTN","IBCEOB",26,0)
 I '$$LOCK^IBCEM(IBTDA) G UPDQ ;Lock msg file 364.2
"RTN","IBCEOB",27,0)
 S IBEOB=+$$ADD3611(IBMNUM,$P(IB0,U,5),$P(IB0,U,4),X,0,IBFILE)
"RTN","IBCEOB",28,0)
 L -^IBA(364.2,IBTDA,0)
"RTN","IBCEOB",29,0)
 ;
"RTN","IBCEOB",30,0)
 I IBEOB<0 S IBEOB="" G UPDQ
"RTN","IBCEOB",31,0)
 D UPD3611(IBEOB,IBTDA,0)
"RTN","IBCEOB",32,0)
 ;
"RTN","IBCEOB",33,0)
UPDQ I IBEOB,$O(^TMP("IBCERR-EOB",$J,0)) D ERRUPD(IBEOB,"IBCERR-EOB")
"RTN","IBCEOB",34,0)
 K ^TMP($J),^TMP("IBCERR-EOB",$J)
"RTN","IBCEOB",35,0)
 D CLEAN^DILF
"RTN","IBCEOB",36,0)
 Q +IBEOB
"RTN","IBCEOB",37,0)
 ;
"RTN","IBCEOB",38,0)
 ;
"RTN","IBCEOB",39,0)
 ; NOTE: **** For all variables IB0,IBEGBL,IBEOB below:
"RTN","IBCEOB",40,0)
 ; IB0 = raw data received for this record type on the 835 flat file
"RTN","IBCEOB",41,0)
 ; IBEGBL = subscript to use in error global
"RTN","IBCEOB",42,0)
 ; IBEOB = ien in file 361.1 for this EOB
"RTN","IBCEOB",43,0)
 ;
"RTN","IBCEOB",44,0)
835(IB0,IBEGBL,IBEOB) ; Store header
"RTN","IBCEOB",45,0)
 ;
"RTN","IBCEOB",46,0)
 Q $$HDR^IBCEOB1(IB0,IBEGBL,IBEOB)
"RTN","IBCEOB",47,0)
 ;
"RTN","IBCEOB",48,0)
5(IB0,IBEGBL,IBEOB) ; Record '05'
"RTN","IBCEOB",49,0)
 ;
"RTN","IBCEOB",50,0)
 N IBOK,IBBULL,DA,DR,DIE,X,Y
"RTN","IBCEOB",51,0)
 K IBZDATA
"RTN","IBCEOB",52,0)
 S DR=";",IBOK=1
"RTN","IBCEOB",53,0)
 S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB",54,0)
 ;
"RTN","IBCEOB",55,0)
 S IBBULL=""
"RTN","IBCEOB",56,0)
 I $$UPDNM^IBCEOB1(IBEOB,IB0,.IBBULL,.DR)!$$UPDID^IBCEOB1(IBEOB,IB0,.IBBULL,.DR) D  ; New insured's name and/or HIC # found
"RTN","IBCEOB",57,0)
 . D CHGBULL^IBCEOB3(IBEOB,IBBULL) ;Send a bulletin reporting change
"RTN","IBCEOB",58,0)
 ;
"RTN","IBCEOB",59,0)
 S DR=$P(DR,";",2,$L(DR,";")-1)
"RTN","IBCEOB",60,0)
 I DR'="" D ^DIE S IBOK=$D(Y)=0
"RTN","IBCEOB",61,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 5 data"
"RTN","IBCEOB",62,0)
 Q IBOK
"RTN","IBCEOB",63,0)
 ;
"RTN","IBCEOB",64,0)
10(IB0,IBEGBL,IBEOB) ; Record '10'
"RTN","IBCEOB",65,0)
 ;
"RTN","IBCEOB",66,0)
 N DA,DR,DIE,X,Y,VAL,IBOK
"RTN","IBCEOB",67,0)
 S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB",68,0)
 S DR=".13////"_$S($P(IB0,U,3)="Y":1,$P(IB0,U,4)="Y":2,$P(IB0,U,5)="Y":3,$P(IB0,U,6)="Y":4,1:5)_";.21////"_$P(IB0,U,3)
"RTN","IBCEOB",69,0)
 S DR=DR_";2.04////"_$$DOLLAR($P(IB0,U,10))_";1.01////"_$$DOLLAR($P(IB0,U,11))_$S($P(IB0,U,12)'="":";.14///"_$P(IB0,U,12),1:"")
"RTN","IBCEOB",70,0)
 S DR=DR_$S($P(IB0,U,13)'="":";.1///"_$P(IB0,U,13),1:"")_";.11///"_($P(IB0,U,14)/10000)_";.12///"_($P(IB0,U,15)/100)
"RTN","IBCEOB",71,0)
 I $P(IB0,U,8)'="" S DR=DR_";.08////"_$P(IB0,U,8)_$S($P(IB0,U,9)'="":";.09///"_$P(IB0,U,9),1:"")
"RTN","IBCEOB",72,0)
 ;
"RTN","IBCEOB",73,0)
 D ^DIE
"RTN","IBCEOB",74,0)
 S IBOK=($D(Y)=0)
"RTN","IBCEOB",75,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 10 data" G Q10
"RTN","IBCEOB",76,0)
Q10 Q IBOK
"RTN","IBCEOB",77,0)
 ;
"RTN","IBCEOB",78,0)
15(IB0,IBEGBL,IBEOB) ; Record '15'
"RTN","IBCEOB",79,0)
 ;
"RTN","IBCEOB",80,0)
 N A,IBOK
"RTN","IBCEOB",81,0)
 ;
"RTN","IBCEOB",82,0)
 S A="3;1.03;1;0;0^4;1.04;1;0;0^5;1.05;1;0;0^6;1.07;1;0;0^7;1.08;1;0;0^8;1.09;1;0;0^9;1.02;1;0;0^10;2.05;1;0;0"
"RTN","IBCEOB",83,0)
 ;
"RTN","IBCEOB",84,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB",85,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 15 data"
"RTN","IBCEOB",86,0)
Q15 Q IBOK
"RTN","IBCEOB",87,0)
 ;
"RTN","IBCEOB",88,0)
17(IB0,IBEGBL,IBEOB) ; Record '17'
"RTN","IBCEOB",89,0)
 N A,IBOK
"RTN","IBCEOB",90,0)
 S A="3;25.01;0;1;0^4;25.02;0;1;0^5;25.03;0;1;0^6;25.04;0;1;0^7;25.05;0;1;0^8;25.06;0;1;0^9;25.07;0;1;0"
"RTN","IBCEOB",91,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB",92,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 17 data"
"RTN","IBCEOB",93,0)
Q17 Q IBOK
"RTN","IBCEOB",94,0)
 ;
"RTN","IBCEOB",95,0)
20(IB0,IBEGBL,IBEOB) ; Record '20'
"RTN","IBCEOB",96,0)
 ;
"RTN","IBCEOB",97,0)
 N A,LEVEL,IBGRP,IBDA,IBOK
"RTN","IBCEOB",98,0)
 ;
"RTN","IBCEOB",99,0)
 S IBGRP=$P(IB0,U,3)
"RTN","IBCEOB",100,0)
 S IBDA(1)=$O(^IBM(361.1,IBEOB,10,"B",IBGRP,0))
"RTN","IBCEOB",101,0)
 ;
"RTN","IBCEOB",102,0)
 I 'IBDA(1) D  ;Needs a new entry at group level
"RTN","IBCEOB",103,0)
 . N X,Y,DA,DD,DO,DIC,DLAYGO
"RTN","IBCEOB",104,0)
 . S DIC="^IBM(361.1,"_IBEOB_",10,",DIC(0)="L",DLAYGO=361.11,DA(1)=IBEOB
"RTN","IBCEOB",105,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.1,10)
"RTN","IBCEOB",106,0)
 . S X=IBGRP
"RTN","IBCEOB",107,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEOB",108,0)
 . I Y<0 K IBDA S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Adjustment group code could not be added" Q
"RTN","IBCEOB",109,0)
 . S IBDA(1)=+Y
"RTN","IBCEOB",110,0)
 ;
"RTN","IBCEOB",111,0)
 I $G(IBDA(1)) D  ;Add a new entry at the reason code level
"RTN","IBCEOB",112,0)
 . S DIC="^IBM(361.1,"_IBEOB_",10,"_IBDA(1)_",1,",DIC(0)="L",DLAYGO=361.111,DA(2)=IBEOB,DA(1)=IBDA(1)
"RTN","IBCEOB",113,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.11,1)
"RTN","IBCEOB",114,0)
 . S X=$P(IB0,U,4)
"RTN","IBCEOB",115,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEOB",116,0)
 . I Y<0 K IBDA S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Adjustment reason code could not be added" Q
"RTN","IBCEOB",117,0)
 . S IBDA=+Y
"RTN","IBCEOB",118,0)
 ;
"RTN","IBCEOB",119,0)
 I $G(IBDA) D
"RTN","IBCEOB",120,0)
 . S LEVEL=10,LEVEL("DIE")="^IBM(361.1,"_IBEOB_",10,"_IBDA(1)_",1,"
"RTN","IBCEOB",121,0)
 . S LEVEL(0)=IBDA,LEVEL(1)=IBDA(1),LEVEL(2)=IBEOB
"RTN","IBCEOB",122,0)
 . S A="5;.02;1;0;0^6;.03;0;1;1^7;.04;0;1;0"
"RTN","IBCEOB",123,0)
 . S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB,.LEVEL)
"RTN","IBCEOB",124,0)
 . I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad adjustment reason code ("_$P(IB0,U,4)_") data" Q
"RTN","IBCEOB",125,0)
Q20 Q $G(IBOK)
"RTN","IBCEOB",126,0)
 ;
"RTN","IBCEOB",127,0)
30(IB0,IBEGBL,IBEOB) ; Record '30'
"RTN","IBCEOB",128,0)
 ;
"RTN","IBCEOB",129,0)
 N A,IBOK
"RTN","IBCEOB",130,0)
 ;
"RTN","IBCEOB",131,0)
 S A="3;4.01;0;1;1^5;4.02;0;1;1^6;4.03;1;0;0^7;4.05;1;0;0^8;4.06;1;0;0^9;4.07;1;0;0^10;4.08;1;0;0^11;4.09;1;0;0^12;4.1;1;0;0^13;4.11;1;0;0"
"RTN","IBCEOB",132,0)
 ;
"RTN","IBCEOB",133,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB",134,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad MEDICARE Inpt Adjudication data"
"RTN","IBCEOB",135,0)
Q30 Q $G(IBOK)
"RTN","IBCEOB",136,0)
 ;
"RTN","IBCEOB",137,0)
35(IB0,IBEGBL,IBEOB) ; Record '35'
"RTN","IBCEOB",138,0)
 ;
"RTN","IBCEOB",139,0)
 N A,IBOK
"RTN","IBCEOB",140,0)
 ;
"RTN","IBCEOB",141,0)
 S A="3;4.12;1;0;0^4;4.13;1;0;0^5;4.14;0;1;1^6;4.15;1;0;0^7;4.16;1;0;0^8;4.17;1;0;0^9;4.18;1;0;0^10;4.04;1;0;0^11;3.01;0;1;1^12;3.02;1;0;0^13;3.08;1;0;0^14;3.09;1;0;0"
"RTN","IBCEOB",142,0)
 ;
"RTN","IBCEOB",143,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB",144,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad MEDICARE Inpt Adjudication data"
"RTN","IBCEOB",145,0)
Q35 Q $G(IBOK)
"RTN","IBCEOB",146,0)
 ;
"RTN","IBCEOB",147,0)
37(IB0,IBEGBL,IBEOB) ; Record '37'
"RTN","IBCEOB",148,0)
 ;
"RTN","IBCEOB",149,0)
 N IBOK,IBCT
"RTN","IBCEOB",150,0)
 S IBCT=$G(^TMP($J,37))+1
"RTN","IBCEOB",151,0)
 I IBCT>5 S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Too many Medicare Claim Level Adjudication Remarks" G Q37    ; Max 5 allowed
"RTN","IBCEOB",152,0)
 S A="4;"_$S($P(IB0,U,3)="O":"3.0"_(IBCT+2),1:"5.0"_IBCT)_";0;0;0^5;5.0"_IBCT_"1;0;0;0"
"RTN","IBCEOB",153,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB",154,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad Medicare Claim Level Adjudication Remarks data"
"RTN","IBCEOB",155,0)
 ;
"RTN","IBCEOB",156,0)
 ; 4/22/03 - esg - If claim level remark code MA15 is reported, then
"RTN","IBCEOB",157,0)
 ;         this is a split EOB and we need to change the REVIEW STATUS
"RTN","IBCEOB",158,0)
 ;         of this EOB to be ACCEPTED-INTERIM EOB.
"RTN","IBCEOB",159,0)
 ;
"RTN","IBCEOB",160,0)
 I $P(IB0,U,4)["MA15" D
"RTN","IBCEOB",161,0)
 . N DA,DIE,DR,DIC
"RTN","IBCEOB",162,0)
 . S DA=IBEOB,DIE=361.1,DR=".16////2" D ^DIE S IBOK=($D(Y)=0)
"RTN","IBCEOB",163,0)
 . I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Split EOB, but review status was not updated correctly"
"RTN","IBCEOB",164,0)
 . Q
"RTN","IBCEOB",165,0)
 ;
"RTN","IBCEOB",166,0)
Q37 S ^TMP($J,37)=$G(^TMP($J,37))+1 ; Saves the # of entries for 37 records
"RTN","IBCEOB",167,0)
 Q $G(IBOK)
"RTN","IBCEOB",168,0)
 ;
"RTN","IBCEOB",169,0)
40(IB0,IBEGBL,IBEOB) ; Record '40'
"RTN","IBCEOB",170,0)
 ;
"RTN","IBCEOB",171,0)
 N IBOK
"RTN","IBCEOB",172,0)
 D 40^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",173,0)
Q40 Q $G(IBOK)
"RTN","IBCEOB",174,0)
 ;
"RTN","IBCEOB",175,0)
41(IB0,IBEGBL,IBEOB) ; Record '41'
"RTN","IBCEOB",176,0)
 ;
"RTN","IBCEOB",177,0)
 N IBOK
"RTN","IBCEOB",178,0)
 D 41^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",179,0)
Q41 Q $G(IBOK)
"RTN","IBCEOB",180,0)
 ;
"RTN","IBCEOB",181,0)
42(IB0,IBEGBL,IBEOB) ; Record '42'
"RTN","IBCEOB",182,0)
 ;
"RTN","IBCEOB",183,0)
 N IBOK
"RTN","IBCEOB",184,0)
 D 42^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",185,0)
Q42 Q $G(IBOK)
"RTN","IBCEOB",186,0)
 ;
"RTN","IBCEOB",187,0)
45(IB0,IBEGBL,IBEOB) ; Record '45'
"RTN","IBCEOB",188,0)
 ;
"RTN","IBCEOB",189,0)
 N IBOK
"RTN","IBCEOB",190,0)
 D 45^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",191,0)
 Q $G(IBOK)
"RTN","IBCEOB",192,0)
 ;
"RTN","IBCEOB",193,0)
DOLLAR(X) ; Convert value in X to dollar format XXX.XX
"RTN","IBCEOB",194,0)
 Q $S(+X:$J(X/100,$L(+X),2),1:0)
"RTN","IBCEOB",195,0)
 ;
"RTN","IBCEOB",196,0)
ADD3611(IBMNUM,IBTBILL,IBBATCH,X,IBAR,IBFILE) ; Add stub record to file 361.1
"RTN","IBCEOB",197,0)
 ; X = the ien of the referenced bill in file 399
"RTN","IBCEOB",198,0)
 ; IBTBILL = ien of transmitted bill (optional)
"RTN","IBCEOB",199,0)
 ; IBBATCH = ien of batch # the transmitted bill was in (optional)
"RTN","IBCEOB",200,0)
 ; IBMNUM = the message # from which this record originally came
"RTN","IBCEOB",201,0)
 ; IBAR = 1 only if called from AR
"RTN","IBCEOB",202,0)
 ; IBFILE = array reference of raw EOB data
"RTN","IBCEOB",203,0)
 ;
"RTN","IBCEOB",204,0)
 N DIC,DA,DR,DO,DD,DLAYGO,Y
"RTN","IBCEOB",205,0)
 F  L +^IBM(361.1,0):10 Q:$T
"RTN","IBCEOB",206,0)
 S DIC(0)="L",DIC="^IBM(361.1,",DLAYGO=361.1
"RTN","IBCEOB",207,0)
 S DIC("DR")=".16////0;.17////0"_";100.02////"_IBMNUM_$S('$G(IBAR):";.19////"_+IBTBILL_";100.01////"_IBBATCH,1:"")
"RTN","IBCEOB",208,0)
 S DIC("DR")=DIC("DR")_";100.05////"_$$CHKSUM^IBCEMU1(IBFILE)
"RTN","IBCEOB",209,0)
 D FILE^DICN
"RTN","IBCEOB",210,0)
 L -^IBM(361.1,0)
"RTN","IBCEOB",211,0)
 Q +Y
"RTN","IBCEOB",212,0)
 ;
"RTN","IBCEOB",213,0)
UPD3611(IBEOB,IBTDA,IBAR) ; From flat file 835 format, add EOB record
"RTN","IBCEOB",214,0)
 ; IBEOB = the ien of the entry in file 361.1 being updated
"RTN","IBCEOB",215,0)
 ; IBTDA = the ien in the source file
"RTN","IBCEOB",216,0)
 ; IBAR = 1 if being called from AR
"RTN","IBCEOB",217,0)
 N IBA1,IBFILE,IBEGBL,Z,IBREC,Q
"RTN","IBCEOB",218,0)
 S IBFILE=$S('$G(IBAR):"^IBA(364.2,"_IBTDA_",2)",1:"^TMP("_$J_",""RCDP-EOB"","_IBTDA_")")
"RTN","IBCEOB",219,0)
 S IBEGBL=$S('$G(IBAR):"IBCERR-EOB",1:"RCDPERR-EOB")
"RTN","IBCEOB",220,0)
 I $G(IBAR),'$$HDR^IBCEOB1($G(^TMP($J,"RCDPEOB","HDR")),IBEGBL,IBEOB) Q
"RTN","IBCEOB",221,0)
 S IBA1=0
"RTN","IBCEOB",222,0)
 F  S IBA1=$O(@IBFILE@(IBA1)) Q:'IBA1  S IB0=$S('$G(IBAR):$P($G(^(IBA1,0)),"##RAW DATA: ",2),1:$G(@IBFILE@(IBA1,0))) I IB0'="" D
"RTN","IBCEOB",223,0)
 . S IBREC=+IB0
"RTN","IBCEOB",224,0)
 . I IBREC'=37 K ^TMP($J,37)
"RTN","IBCEOB",225,0)
 . I IBREC S IB="S IBOK=$$"_IBREC_"(IB0,IBEGBL,IBEOB)",Q=IBREC_"^IBCEOB" I $T(@Q)'="" X IB S:'IBOK ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)=$S('$G(IBAR):"  ##RAW DATA: ",1:"")_IB0
"RTN","IBCEOB",226,0)
 ;
"RTN","IBCEOB",227,0)
 Q
"RTN","IBCEOB",228,0)
 ;
"RTN","IBCEOB",229,0)
ERRUPD(IBEOB,IBEGBL) ; Update error text in entry, if needed
"RTN","IBCEOB",230,0)
 D WP^DIE(361.1,IBEOB_",",20,"","^TMP(IBEGBL,$J)","")
"RTN","IBCEOB",231,0)
 Q
"RTN","IBCEOB",232,0)
 ;
"RTN","IBCEOB",233,0)
 ;
"RTN","IBCEOB",234,0)
DUP(IBARRAY,IBIFN) ; Duplicate Check
"RTN","IBCEOB",235,0)
 ; This function determines if the EOB data already exists in file
"RTN","IBCEOB",236,0)
 ; 361.1 by comparing the checksums of the raw 835 data.
"RTN","IBCEOB",237,0)
 ;
"RTN","IBCEOB",238,0)
 ; IBARRAY = Literal array reference where the raw 835 data exists.
"RTN","IBCEOB",239,0)
 ;           The data exists at @IBARRAY@(n,0), where n is the seq#.
"RTN","IBCEOB",240,0)
 ;           For example, IBARRAY = "^IBA(364.2,IBIEN,2)"
"RTN","IBCEOB",241,0)
 ;
"RTN","IBCEOB",242,0)
 ; IBIFN = the bill # (ptr to 399).  The checksums of the EOB's on 
"RTN","IBCEOB",243,0)
 ;         file for this bill will be compared to the checksum of the
"RTN","IBCEOB",244,0)
 ;         835 raw data in the IBARRAY reference.
"RTN","IBCEOB",245,0)
 ;
"RTN","IBCEOB",246,0)
 ; This function returns 0 if the entry is not found (no duplicate),
"RTN","IBCEOB",247,0)
 ; Otherwise, the IEN of the entry in file 361.1 is returned if this
"RTN","IBCEOB",248,0)
 ; is a duplicate EOB.
"RTN","IBCEOB",249,0)
 ;
"RTN","IBCEOB",250,0)
 NEW DUP,IBEOB,CHKSUM1,CHKSUM2
"RTN","IBCEOB",251,0)
 S DUP=0,IBIFN=+$G(IBIFN)
"RTN","IBCEOB",252,0)
 I $G(IBARRAY)=""!'IBIFN G DUPX
"RTN","IBCEOB",253,0)
 I '$D(^IBM(361.1,"B",IBIFN)) G DUPX     ; no EOB's on file yet
"RTN","IBCEOB",254,0)
 S CHKSUM1=$$CHKSUM^IBCEMU1(IBARRAY)     ; checksum of current EOB
"RTN","IBCEOB",255,0)
 I 'CHKSUM1 G DUPX                       ; must be able to be calculated
"RTN","IBCEOB",256,0)
 S IBEOB=0
"RTN","IBCEOB",257,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D  Q:DUP
"RTN","IBCEOB",258,0)
 . S CHKSUM2=+$P($G(^IBM(361.1,IBEOB,100)),U,5)   ; checksum of old EOB
"RTN","IBCEOB",259,0)
 . I 'CHKSUM2 Q
"RTN","IBCEOB",260,0)
 . I CHKSUM1=CHKSUM2 S DUP=IBEOB Q                    ; comparison
"RTN","IBCEOB",261,0)
 . Q
"RTN","IBCEOB",262,0)
DUPX ;
"RTN","IBCEOB",263,0)
 Q DUP
"RTN","IBCEOB",264,0)
 ;
"RTN","IBCEOB0")
0^11^B75930442
"RTN","IBCEOB0",1,0)
IBCEOB0 ;ALB/TMP - 835 EDI EOB MSG PROCESSING ;18-FEB-99
"RTN","IBCEOB0",2,0)
 ;;2.0;INTEGRATED BILLING;**135**;21-MAR-94
"RTN","IBCEOB0",3,0)
 Q
"RTN","IBCEOB0",4,0)
 ;
"RTN","IBCEOB0",5,0)
 ; For numeric entrypoints below, the following parameters are defined:
"RTN","IBCEOB0",6,0)
 ; IB0 = record being processed
"RTN","IBCEOB0",7,0)
 ; IBEOB = ien of EOB entry in 361.1
"RTN","IBCEOB0",8,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error
"RTN","IBCEOB0",9,0)
 ;
"RTN","IBCEOB0",10,0)
40(IB0,IBEOB,IBOK) ; Process record type 40 for EOB
"RTN","IBCEOB0",11,0)
 ; Parameters defined at top of routine
"RTN","IBCEOB0",12,0)
 ;
"RTN","IBCEOB0",13,0)
 ; IBZDATA is also assumed to exist or if not, is created in FINDLN
"RTN","IBCEOB0",14,0)
 ;
"RTN","IBCEOB0",15,0)
 N A,LEVEL,IBSEQ,IBDA,IBPC,IBLREF,IBIFN,Q,X,Y,DA,DD,DO,DIC,DLAYGO
"RTN","IBCEOB0",16,0)
 K ^TMP($J,40) ; the entry # for corresponding 41, 42, 45 records
"RTN","IBCEOB0",17,0)
 ;
"RTN","IBCEOB0",18,0)
 S IBIFN=+$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEOB0",19,0)
 L +^IBM(361.1,IBEOB,15):0 I $T S IBSEQ=+$O(^IBM(361.1,IBEOB,15," "),-1)+1
"RTN","IBCEOB0",20,0)
 I '$G(IBSEQ) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Record lock failure - could not acquire next service line number" G Q40
"RTN","IBCEOB0",21,0)
 ;
"RTN","IBCEOB0",22,0)
 ; Update the 40 record data a little bit (pieces 3/4/16)
"RTN","IBCEOB0",23,0)
 I $P(IB0,U,21)="NU" S $P(IB0,U,4)=$P(IB0,U,3),$P(IB0,U,3)=""
"RTN","IBCEOB0",24,0)
 S $P(IB0,U,16)=$S(+$P(IB0,U,16):$P(IB0,U,16)/100,1:+$P(IB0,U,18)/100)
"RTN","IBCEOB0",25,0)
 I $P(IB0,U,4)?1.N S $P(IB0,U,4)=+$P(IB0,U,4)
"RTN","IBCEOB0",26,0)
 ;
"RTN","IBCEOB0",27,0)
 ; Find the line item from orig bill for this adjustment
"RTN","IBCEOB0",28,0)
 S IBLREF=+$$FINDLN^IBCEOB1(IB0,IBEOB,.IBZDATA)
"RTN","IBCEOB0",29,0)
 I 'IBLREF D  G Q40
"RTN","IBCEOB0",30,0)
 . N Z,Z0,CT
"RTN","IBCEOB0",31,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line detail could not be matched to a billed item"
"RTN","IBCEOB0",32,0)
 . D DET40(IB0,.Z0)
"RTN","IBCEOB0",33,0)
 . S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",34,0)
 ;
"RTN","IBCEOB0",35,0)
 S DIC="^IBM(361.1,"_IBEOB_",15,",DIC(0)="L",DLAYGO=361.115,DA(1)=IBEOB
"RTN","IBCEOB0",36,0)
 S X=IBSEQ
"RTN","IBCEOB0",37,0)
 S DIC("DR")=".12////"_+IBLREF_$S($P(IBLREF,U,2)="":"",1:";.15////"_$P(IBLREF,U,2))_";.16////"_$$DATE^IBCEU($P(IB0,U,19))_$S($P(IB0,U,20):";.17////"_$$DATE^IBCEU($P(IB0,U,20)),1:"")
"RTN","IBCEOB0",38,0)
 D FILE^DICN K DIC,DO,DD,DLAYGO ;Add a new LINE LEVEL ADJUSTMENT ('SVC')
"RTN","IBCEOB0",39,0)
 I Y<0 S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not add a LINE LEVEL ADJUSTMENT ("_IBSEQ_")" G Q40
"RTN","IBCEOB0",40,0)
 ;
"RTN","IBCEOB0",41,0)
 L -^IBM(361.1,IBEOB,15)
"RTN","IBCEOB0",42,0)
 ;
"RTN","IBCEOB0",43,0)
 S LEVEL=15.1,LEVEL(0)=+Y,LEVEL(1)=IBEOB,LEVEL("DIE")="^IBM(361.1,"_IBEOB_",15,"
"RTN","IBCEOB0",44,0)
 S A="3;.04;0;0;0^4;.1;0;0;0^9;.09;0;0;0^17;.03;1;0;0^18;.11;0;1;D2^21;.18;0;0;0"
"RTN","IBCEOB0",45,0)
 I $$STORE^IBCEOB1(A,IB0,IBEOB,.LEVEL) S ^TMP($J,40)=LEVEL(0),IBOK=1
"RTN","IBCEOB0",46,0)
 I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad data for line level adjustment "_IBSEQ G Q40
"RTN","IBCEOB0",47,0)
 ;
"RTN","IBCEOB0",48,0)
 ; Store modifiers
"RTN","IBCEOB0",49,0)
 S DIC="^IBM(361.1,"_IBEOB_",15,"_LEVEL(0)_",2,",DIC(0)="L",DLAYGO=361.1152,DA(2)=IBEOB,DA(1)=LEVEL(0)
"RTN","IBCEOB0",50,0)
 F Q=5:1:8 S X=$P(IB0,U,Q) I X'="" D FILE^DICN K DO,DD I Y<0 S IBOK=0 Q
"RTN","IBCEOB0",51,0)
 K DLAYGO,DIC,DR,DA
"RTN","IBCEOB0",52,0)
 I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not file modifier data for line level adjustment "_IBSEQ G Q40
"RTN","IBCEOB0",53,0)
Q40 Q
"RTN","IBCEOB0",54,0)
 ;
"RTN","IBCEOB0",55,0)
 ;
"RTN","IBCEOB0",56,0)
41(IB0,IBEOB,IBOK) ; Process record type 41 for EOB
"RTN","IBCEOB0",57,0)
 ; Parameters defined at top of routine
"RTN","IBCEOB0",58,0)
 ;
"RTN","IBCEOB0",59,0)
 N DA,DR,DIE,X,Y,Z,Z0,CT
"RTN","IBCEOB0",60,0)
 I '$G(^TMP($J,40)) D  G Q41
"RTN","IBCEOB0",61,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment has no corresponding service line"
"RTN","IBCEOB0",62,0)
 . D DET4X(41,IB0,.Z0)
"RTN","IBCEOB0",63,0)
 . S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",64,0)
 ;
"RTN","IBCEOB0",65,0)
 S DR="",IBOK=1
"RTN","IBCEOB0",66,0)
 S DA=+^TMP($J,40),DA(1)=IBEOB
"RTN","IBCEOB0",67,0)
 S DIE="^IBM(361.1,"_DA(1)_",15,"
"RTN","IBCEOB0",68,0)
 I +$P(IB0,U,3) S DR=".13///"_$$DOLLAR^IBCEOB($P(IB0,U,3))
"RTN","IBCEOB0",69,0)
 I +$P(IB0,U,4) S DR=DR_$S(DR="":"",1:";")_".14///"_$$DOLLAR^IBCEOB($P(IB0,U,4))
"RTN","IBCEOB0",70,0)
 I DR'="" D ^DIE S IBOK=($D(Y)=0)
"RTN","IBCEOB0",71,0)
 I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad data for service line adjustment-2"
"RTN","IBCEOB0",72,0)
Q41 Q
"RTN","IBCEOB0",73,0)
 ;
"RTN","IBCEOB0",74,0)
42(IB0,IBEOB,IBOK) ; Process record type 42 for EOB 
"RTN","IBCEOB0",75,0)
 ; Parameters defined at top of routine
"RTN","IBCEOB0",76,0)
 ;
"RTN","IBCEOB0",77,0)
 N DA,DR,DIE,X,Y,Z,Z0,CT
"RTN","IBCEOB0",78,0)
 S IBOK=0
"RTN","IBCEOB0",79,0)
 I '$G(^TMP($J,40)) D  G Q42
"RTN","IBCEOB0",80,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment has no corresponding service line"
"RTN","IBCEOB0",81,0)
 . D DET4X(42,IB0,.Z0)
"RTN","IBCEOB0",82,0)
 . S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",83,0)
 ;
"RTN","IBCEOB0",84,0)
 S DR="",IBOK=1
"RTN","IBCEOB0",85,0)
 S DA=+^TMP($J,40),DA(1)=IBEOB
"RTN","IBCEOB0",86,0)
 S DIE="^IBM(361.1,"_DA(1)_",15,"
"RTN","IBCEOB0",87,0)
 I $P(IB0,U,3)'="" S DR="3.01////"_$P(IB0,U,3)_$S($P(IB0,U,4)'="":";3.02////"_$P(IB0,U,4),1:"")
"RTN","IBCEOB0",88,0)
 I DR'="" D ^DIE S IBOK=($D(Y)=0)
"RTN","IBCEOB0",89,0)
 I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad data for service line adjustment-3"
"RTN","IBCEOB0",90,0)
Q42 Q
"RTN","IBCEOB0",91,0)
 ;
"RTN","IBCEOB0",92,0)
45(IB0,IBEOB,IBOK) ; Process record type 45 for EOB 
"RTN","IBCEOB0",93,0)
 ; Parameters defined at top of routine
"RTN","IBCEOB0",94,0)
 ;
"RTN","IBCEOB0",95,0)
 N IBDA,LEVEL,A,Z0,CT,Z
"RTN","IBCEOB0",96,0)
 I '$G(^TMP($J,40)) D  G Q45
"RTN","IBCEOB0",97,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment has no corresponding service line"
"RTN","IBCEOB0",98,0)
 . D DET4X(45,IB0,.Z0)
"RTN","IBCEOB0",99,0)
 . S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",100,0)
 ;
"RTN","IBCEOB0",101,0)
 I $P(IB0,U,3)'="" S $P(^TMP($J,40),U,2)=$P(IB0,U,3)
"RTN","IBCEOB0",102,0)
 I $P(IB0,U,3)="" S $P(IB0,U,3)=$P(^TMP($J,40),U,2)
"RTN","IBCEOB0",103,0)
 I $P(IB0,U,3)="" S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment is missing its group code" G Q45
"RTN","IBCEOB0",104,0)
 ;
"RTN","IBCEOB0",105,0)
 S IBDA(2)=+^TMP($J,40)
"RTN","IBCEOB0",106,0)
 S IBDA(1)=+$O(^IBM(361.1,IBEOB,15,IBDA(2),1,"B",$P(IB0,U,3),0))
"RTN","IBCEOB0",107,0)
 ;
"RTN","IBCEOB0",108,0)
 I 'IBDA(1) D  ;Needs a new entry at group level
"RTN","IBCEOB0",109,0)
 . N X,Y,DA,DD,DO,DIC,DLAYGO
"RTN","IBCEOB0",110,0)
 . S DIC="^IBM(361.1,"_IBEOB_",15,"_IBDA(2)_",1,",DIC(0)="L",DLAYGO=361.1151,DA(2)=IBEOB,DA(1)=IBDA(2)
"RTN","IBCEOB0",111,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.115,1)
"RTN","IBCEOB0",112,0)
 . S X=$P(IB0,U,3)
"RTN","IBCEOB0",113,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEOB0",114,0)
 . I Y<0 K IBDA S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not add adjustment group code ("_$P(IB0,U,3)_") at line adjustment "_+^TMP($J,40) Q
"RTN","IBCEOB0",115,0)
 . S IBDA(1)=+Y
"RTN","IBCEOB0",116,0)
 ;
"RTN","IBCEOB0",117,0)
 ; Add new entry at reason code level
"RTN","IBCEOB0",118,0)
 I $G(IBDA(1)) D
"RTN","IBCEOB0",119,0)
 . S DIC="^IBM(361.1,"_IBEOB_",15,"_IBDA(2)_",1,"_IBDA(1)_",1,",DIC(0)="L",DLAYGO=361.11511,DA(1)=IBDA(1),DA(2)=IBDA(2),DA(3)=IBEOB
"RTN","IBCEOB0",120,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.1151,1)
"RTN","IBCEOB0",121,0)
 . S X=$P(IB0,U,4)
"RTN","IBCEOB0",122,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEOB0",123,0)
 . I Y<0 K IBDA S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not add reason code ("_$P(IB0,U,4)_") for adjustment group code ("_$P(IB0,U,3)_") at line adjustment "_+^TMP($J,40) Q
"RTN","IBCEOB0",124,0)
 . S IBDA=+Y
"RTN","IBCEOB0",125,0)
 ;
"RTN","IBCEOB0",126,0)
 I $G(IBDA) D
"RTN","IBCEOB0",127,0)
 . S LEVEL=15,LEVEL("DIE")="^IBM(361.1,"_IBEOB_",15,"_IBDA(2)_",1,"_IBDA(1)_",1,"
"RTN","IBCEOB0",128,0)
 . S LEVEL(0)=IBDA,LEVEL(1)=IBDA(1),LEVEL(2)=IBDA(2),LEVEL(3)=IBEOB
"RTN","IBCEOB0",129,0)
 . S A="5;.02;1;0;0^6;.03;0;1;1^7;.04;0;1;0"
"RTN","IBCEOB0",130,0)
 . S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB,.LEVEL)
"RTN","IBCEOB0",131,0)
 . I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad data for reason code ("_$P(IB0,U,4)_"), adjustment group code ("_$P(IB0,U,3)_") at line adjustment "_+^TMP($J,40) Q
"RTN","IBCEOB0",132,0)
 ;
"RTN","IBCEOB0",133,0)
Q45 Q
"RTN","IBCEOB0",134,0)
 ;
"RTN","IBCEOB0",135,0)
RCRU(IBZDATA,IB0,IBLN) ; Rev Code Roll-up procedure check -
"RTN","IBCEOB0",136,0)
 ; Total outbound line items by rev code and compare with
"RTN","IBCEOB0",137,0)
 ; incoming EOB 40 record to see if rolled up
"RTN","IBCEOB0",138,0)
 ;
"RTN","IBCEOB0",139,0)
 ; IBZDATA - ub92 output formatter array, pass by ref
"RTN","IBCEOB0",140,0)
 ; IB0     - 40 record data
"RTN","IBCEOB0",141,0)
 ; IBLN    - output, pass by ref
"RTN","IBCEOB0",142,0)
 ;
"RTN","IBCEOB0",143,0)
 NEW Z,LN,REV,UN,CH,RUD
"RTN","IBCEOB0",144,0)
 I $P(IB0,U,4)="" G RCRUX
"RTN","IBCEOB0",145,0)
 S IBLN="",Z=0
"RTN","IBCEOB0",146,0)
 F  S Z=$O(IBZDATA(Z)) Q:'Z  S LN=IBZDATA(Z) D
"RTN","IBCEOB0",147,0)
 . S REV=$P(LN,U,1),UN=$P(LN,U,4),CH=$P(LN,U,5)
"RTN","IBCEOB0",148,0)
 . I REV="" Q
"RTN","IBCEOB0",149,0)
 . S RUD=$G(RUD(REV))           ; roll up data array for rev code
"RTN","IBCEOB0",150,0)
 . S $P(RUD,U,1)=$P(RUD,U,1)+CH ; total charges
"RTN","IBCEOB0",151,0)
 . S $P(RUD,U,2)=$P(RUD,U,2)+UN ; total units
"RTN","IBCEOB0",152,0)
 . S $P(RUD,U,3)=$P(RUD,U,3)+1  ; total line items
"RTN","IBCEOB0",153,0)
 . S RUD(REV)=RUD
"RTN","IBCEOB0",154,0)
 . S RUD(REV,Z)=""
"RTN","IBCEOB0",155,0)
 . Q
"RTN","IBCEOB0",156,0)
 I '$D(RUD) G RCRUX
"RTN","IBCEOB0",157,0)
 ;
"RTN","IBCEOB0",158,0)
 ; delete rev code roll-up, if only 1 line item.
"RTN","IBCEOB0",159,0)
 S REV=""     ; this is not a roll up situation
"RTN","IBCEOB0",160,0)
 F  S REV=$O(RUD(REV)) Q:REV=""  I $P(RUD(REV),U,3)=1 KILL RUD(REV)
"RTN","IBCEOB0",161,0)
 I '$D(RUD) G RCRUX
"RTN","IBCEOB0",162,0)
 ;
"RTN","IBCEOB0",163,0)
 S RUD=$G(RUD($P(IB0,U,4)))   ; compare with 40 record data
"RTN","IBCEOB0",164,0)
 I RUD="" G RCRUX             ; make sure it exists
"RTN","IBCEOB0",165,0)
 I $P(RUD,U,1)'=+$$DOLLAR^IBCEOB($P(IB0,U,15)) G RCRUX    ; charges
"RTN","IBCEOB0",166,0)
 I $P(RUD,U,2)'=$P(IB0,U,16) G RCRUX                      ; units
"RTN","IBCEOB0",167,0)
 ;
"RTN","IBCEOB0",168,0)
 S IBLN=$O(RUD($P(IB0,U,4),""))  ; use 1st line# found
"RTN","IBCEOB0",169,0)
RCRUX ;
"RTN","IBCEOB0",170,0)
 Q
"RTN","IBCEOB0",171,0)
 ;
"RTN","IBCEOB0",172,0)
DET40(IB0,ARRAY) ; Format important details of rec 40 for error
"RTN","IBCEOB0",173,0)
 ; IB0 = data on 40 record (some pieces pre-formatted)
"RTN","IBCEOB0",174,0)
 ;  ARRAY(n)=formatted line returned if passed by ref
"RTN","IBCEOB0",175,0)
 N Q
"RTN","IBCEOB0",176,0)
 S ARRAY(1)="Payer reported the following was billed to them:"
"RTN","IBCEOB0",177,0)
 S ARRAY(2)=" "_$S($P(IB0,U,21)="NU":"Rev Cd",1:"Proc")_": "_$S($P(IB0,U,10)'="":$P(IB0,U,10),1:"Same as adjudicated")_"  Chg: "_$J($P(IB0,U,15)/100,"",2)_"  Units: "_$S($P(IB0,U,16):$P(IB0,U,16),1:1)
"RTN","IBCEOB0",178,0)
 S ARRAY(3)="  Svc Date(s): "_$S($P(IB0,U,19)'="":$$FDT($P(IB0,U,19)),1:"??")_$S($P(IB0,U,20)'="":"-"_$$FDT($P(IB0,U,20)),1:"")
"RTN","IBCEOB0",179,0)
 I $P(IB0,U,11)'="" S ARRAY(3)=ARRAY(3)_"  Mods: " F Q=11:1:14 I $P(IB0,U,Q)'="" S ARRAY(3)=ARRAY(3)_$S(Q=14:"",$P(IB0,U,Q+1)'="":",",1:"")_$P(IB0,U,Q)
"RTN","IBCEOB0",180,0)
 S ARRAY(4)="Payer reported adjudication on:"
"RTN","IBCEOB0",181,0)
 S ARRAY(5)=" "_$S($P(IB0,U,21)="NU":"Rev Cd",1:"Proc")_": "_$S($P(IB0,U,3)'="":$P(IB0,U,3),1:$P(IB0,U,4))
"RTN","IBCEOB0",182,0)
 S ARRAY(5)=ARRAY(5)_"  Type: "_$P(IB0,U,21)_$S($P(IB0,U,21)'="NU":"  Rev Cd: "_$P(IB0,U,4),1:"")_"  Units: "_$S($P(IB0,U,18):$P(IB0,U,18)/100,1:1)_"  Amt: "_$J($P(IB0,U,17)/100,"",2)
"RTN","IBCEOB0",183,0)
 I $P(IB0,U,5)'="" S ARRAY(5)=ARRAY(5)_"  Mods: " F Q=5:1:8 I $P(IB0,U,Q)'="" S ARRAY(5)=ARRAY(5)_$S(Q=8:"",$P(IB0,U,Q+1)'="":",",1:"")_$P(IB0,U,Q)
"RTN","IBCEOB0",184,0)
 Q
"RTN","IBCEOB0",185,0)
 ;
"RTN","IBCEOB0",186,0)
DET4X(RECID,IB0,ARRAY) ; Format important details of recs 41-45 for error
"RTN","IBCEOB0",187,0)
 ; RECID = 41,42,45
"RTN","IBCEOB0",188,0)
 ; IB0 = data on RECID rec
"RTN","IBCEOB0",189,0)
 ;  ARRAY(n)=formatted line returned if passed by ref
"RTN","IBCEOB0",190,0)
 N CT,Q
"RTN","IBCEOB0",191,0)
 I RECID=41 D  Q
"RTN","IBCEOB0",192,0)
 . S ARRAY(1)="Allowed Amt: "_$J($P(IB0,U,3)/100,"",2)_"  Per Diem Amt: "_$J($P(IB0,U,4)/100,"",2)
"RTN","IBCEOB0",193,0)
 ;
"RTN","IBCEOB0",194,0)
 I RECID=42 D  Q
"RTN","IBCEOB0",195,0)
 . S ARRAY(1)="Line Item Remark Code: "_$P(IB0,U,3)
"RTN","IBCEOB0",196,0)
 . I $P(IB0,U,4)'="" S CT=1 F Q=0:80:190 I $E($P(IB0,U,4),Q+1,Q+80)'="" S CT=CT+1,ARRAY(CT)=$E($P(IB0,U,4),Q+1,Q+80)
"RTN","IBCEOB0",197,0)
 ;
"RTN","IBCEOB0",198,0)
 I RECID=45 D
"RTN","IBCEOB0",199,0)
 . S ARRAY(1)="Adj Group Cd: "_$P(IB0,U,3)_"  Reason Cd: "_$P(IB0,U,4)_"  Amt: "_$J($P(IB0,U,5)/100,"",2)_"  Quantity: "_+$P(IB0,U,6)
"RTN","IBCEOB0",200,0)
 . I $P(IB0,U,7)'="" S CT=1 F Q=0:80:190 I $E($P(IB0,U,7),Q+1,Q+80)'="" S CT=CT+1,ARRAY(CT)=$E($P(IB0,U,7),Q+1,Q+80)
"RTN","IBCEOB0",201,0)
 Q
"RTN","IBCEOB0",202,0)
 ; 
"RTN","IBCEOB0",203,0)
FDT(X) ; Format date in X (YYYYMMDD) to MM/DD/YYYY
"RTN","IBCEOB0",204,0)
 S:X'="" X=$E(X,5,6)_"/"_$E(X,7,8)_"/"_$E(X,1,4)
"RTN","IBCEOB0",205,0)
 Q X
"RTN","IBCEOB0",206,0)
 ;
"RTN","IBCEOB1")
0^4^B56328849
"RTN","IBCEOB1",1,0)
IBCEOB1 ;ALB/TMP - 835 EDI EOB MSG PROCESSING ;18-FEB-99
"RTN","IBCEOB1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135**;21-MAR-94
"RTN","IBCEOB1",3,0)
 Q
"RTN","IBCEOB1",4,0)
 ;
"RTN","IBCEOB1",5,0)
STORE(A,IB0,IBEOB,LEVEL) ;
"RTN","IBCEOB1",6,0)
 ; A = the string of data to extract and try to store
"RTN","IBCEOB1",7,0)
 ;       each ^ piece is a field to store
"RTN","IBCEOB1",8,0)
 ;         within each ^ piece, there are 5 ';' pieces:
"RTN","IBCEOB1",9,0)
 ;            1 = piece to extract from the data string;
"RTN","IBCEOB1",10,0)
 ;            2 = field to update;
"RTN","IBCEOB1",11,0)
 ;            3 = flag for dollar amt (1=YES);
"RTN","IBCEOB1",12,0)
 ;            4 = flag for 4-slash stuff without transform (1=YES);
"RTN","IBCEOB1",13,0)
 ;            5 = flag for numeric/non-dollar amt (1=Yes, 0=No,
"RTN","IBCEOB1",14,0)
 ;                 Dn = the field is numeric with 'n' decimal places
"RTN","IBCEOB1",15,0)
 ; IB0 = the record being processed
"RTN","IBCEOB1",16,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB1",17,0)
 ; LEVEL = the array that contains the DIE and DA values if stuffing at a
"RTN","IBCEOB1",18,0)
 ;         level other than the top level
"RTN","IBCEOB1",19,0)
 ;
"RTN","IBCEOB1",20,0)
 N B,IBPC,IBFLD,DA,DR,DIE,X,Y
"RTN","IBCEOB1",21,0)
 S DR=";"
"RTN","IBCEOB1",22,0)
 ;
"RTN","IBCEOB1",23,0)
 I '$G(LEVEL) S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB1",24,0)
 ;
"RTN","IBCEOB1",25,0)
 I $G(LEVEL) D
"RTN","IBCEOB1",26,0)
 . N Q
"RTN","IBCEOB1",27,0)
 . S DIE=$G(LEVEL("DIE"))
"RTN","IBCEOB1",28,0)
 . S Q=0 F  S Q=$O(LEVEL(Q)) Q:'Q  S DA(Q)=LEVEL(Q)
"RTN","IBCEOB1",29,0)
 . S DA=LEVEL(0)
"RTN","IBCEOB1",30,0)
 ;
"RTN","IBCEOB1",31,0)
 I $G(DA) F B=1:1:$L(A,U) D
"RTN","IBCEOB1",32,0)
 . S IBPC=$P(A,U,B),IBFLD=$P(IBPC,";",2)
"RTN","IBCEOB1",33,0)
 . I $P(IB0,U,+IBPC)'="",IBFLD D
"RTN","IBCEOB1",34,0)
 .. N VAL
"RTN","IBCEOB1",35,0)
 .. ; For dollar amts, add full cents; For numerics, strip leading
"RTN","IBCEOB1",36,0)
 .. ;   0's; For non-numeric/non-dollar amts, make any ; in data into |
"RTN","IBCEOB1",37,0)
 .. S VAL=$S($P(IBPC,";",3):$$DOLLAR^IBCEOB($P(IB0,U,+IBPC)),$P(IBPC,";",5):+$P(IB0,U,+IBPC),$P($P(IBPC,";",5),"D",2):$P(IB0,U,+IBPC)/(10**$P($P(IBPC,";",5),"D",2)),1:$TR($P(IB0,U,+IBPC),";","|"))
"RTN","IBCEOB1",38,0)
 .. I $P(IBPC,";",3),VAL S VAL=$P(VAL,".")_"."_$E($P(VAL,".",2)_"00",1,2)
"RTN","IBCEOB1",39,0)
 .. S DR=DR_IBFLD_"///"_$S($P(IBPC,";",4):"/",1:"")_VAL_";"
"RTN","IBCEOB1",40,0)
 ;
"RTN","IBCEOB1",41,0)
 S DR=$P(DR,";",2,$L(DR,";")-1)
"RTN","IBCEOB1",42,0)
 I DR'="" D ^DIE
"RTN","IBCEOB1",43,0)
 Q ($D(Y)=0) ;Successfully stored all the data it was sent if $D(Y)=0
"RTN","IBCEOB1",44,0)
 ;
"RTN","IBCEOB1",45,0)
HDR(IB0,IBEGBL,IBEOB) ; Store header data for EOB
"RTN","IBCEOB1",46,0)
 ; IB0 = the record being processed from the msg
"RTN","IBCEOB1",47,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB1",48,0)
 ;
"RTN","IBCEOB1",49,0)
 N IBDT,IBDTP,DA,DR,DIE,X,Y
"RTN","IBCEOB1",50,0)
 K IBXSAVE("XTRA"),IBZSAVE
"RTN","IBCEOB1",51,0)
 ;
"RTN","IBCEOB1",52,0)
 S IBDT=$P(IB0,U,3),IBDT=$E(IBDT,1,4)-1700_$E(IBDT,5,8)_"."_$P(IB0,U,4)
"RTN","IBCEOB1",53,0)
 S IBDTP=$P(IB0,U,9)
"RTN","IBCEOB1",54,0)
 I IBDTP S IBDTP=$E(IBDTP,1,4)-1700_$E(IBDTP,5,8)
"RTN","IBCEOB1",55,0)
 S DR=".03////"_$P(IB0,U,7)_";.05////"_IBDT_";.04////"_($P(IB0,U,5)="Y")_";.15///"_$$COBN^IBCEF(+$G(^IBM(361.1,IBEOB,0)))_";.07///"_$P(IB0,U,8)_$S(IBDTP:";.06////"_IBDTP,1:"")
"RTN","IBCEOB1",56,0)
 S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB1",57,0)
 D ^DIE
"RTN","IBCEOB1",58,0)
 I $D(Y)'=0 D
"RTN","IBCEOB1",59,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad header data"
"RTN","IBCEOB1",60,0)
 Q ($D(Y)=0)
"RTN","IBCEOB1",61,0)
 ;
"RTN","IBCEOB1",62,0)
FINDLN(IB0,IBEOB,IBZDATA) ; Find the corresponding billed line for the adj
"RTN","IBCEOB1",63,0)
 ; IB0 = the record being processed
"RTN","IBCEOB1",64,0)
 ;       NOTE: pieces 3,4,16 are already reformatted
"RTN","IBCEOB1",65,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB1",66,0)
 ; IBZDATA = the array from the output formatter containing line
"RTN","IBCEOB1",67,0)
 ;           items for the bill.  This is passed in so this data only has
"RTN","IBCEOB1",68,0)
 ;           to be extracted once for each bill (the first time in, it
"RTN","IBCEOB1",69,0)
 ;           will be undefined)
"RTN","IBCEOB1",70,0)
 ; OUTPUT = Line # in the original bill that this adjustment relates to
"RTN","IBCEOB1",71,0)
 ;          ^ paid procedure code if different from original procedure OR
"RTN","IBCEOB1",72,0)
 ;            paid rev code if different from original and no proc code
"RTN","IBCEOB1",73,0)
 ;
"RTN","IBCEOB1",74,0)
 N IBLN,IBLN1,IBBNDL,OCHG,OPROC,OREVCD,IBIFN,IBXARRAY,IBXARRY,IBXERR,UNITS,IBMOD,Z,Z0
"RTN","IBCEOB1",75,0)
 ;
"RTN","IBCEOB1",76,0)
 S (IBLN,IBLN1)="",IBIFN=+$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEOB1",77,0)
 ;
"RTN","IBCEOB1",78,0)
 ; if original procedure exists and is different than the 835 procedure,
"RTN","IBCEOB1",79,0)
 ; the procedure or revenue code originally billed will be in piece 10
"RTN","IBCEOB1",80,0)
 ; of the '40' record of the 835 flat file.  Otherwise, pc 10 is null.
"RTN","IBCEOB1",81,0)
 S IBBNDL=$S($P(IB0,U,10)'="":1,1:0)
"RTN","IBCEOB1",82,0)
 ;
"RTN","IBCEOB1",83,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,19)=3 D  G FINDLNX     ; UB92 format
"RTN","IBCEOB1",84,0)
 . I '$D(IBZDATA) D F^IBCEF("N-UB92 SERVICE LINE (EDI)","IBZDATA",,IBIFN)
"RTN","IBCEOB1",85,0)
 . I $P(IB0,U,22),$D(IBZDATA(+$P(IB0,U,22))) S IBLN=+$P(IB0,U,22)_U_$P(IB0,U,10) Q
"RTN","IBCEOB1",86,0)
 . ;
"RTN","IBCEOB1",87,0)
 . S Z=0 F  S Z=$O(IBZDATA(Z)) Q:'Z  D  Q:IBLN
"RTN","IBCEOB1",88,0)
 .. I $G(IBZDATA(Z))="" Q
"RTN","IBCEOB1",89,0)
 .. S OCHG=$P(IBZDATA(Z),U,3)*$P(IBZDATA(Z),U,4) ; Total charge from bill
"RTN","IBCEOB1",90,0)
 .. ;
"RTN","IBCEOB1",91,0)
 .. S OPROC=$$PRCD^IBCEF1(+$P(IBZDATA(Z),U,2)_";ICPT(") ; proc from bill
"RTN","IBCEOB1",92,0)
 .. S OREVCD=+$P($G(^DGCR(399.2,+IBZDATA(Z),0)),U) ; Rev cd from bill
"RTN","IBCEOB1",93,0)
 .. ;
"RTN","IBCEOB1",94,0)
 .. ; if not bundled/unbundled
"RTN","IBCEOB1",95,0)
 .. I 'IBBNDL D  Q
"RTN","IBCEOB1",96,0)
 ... I OPROC="",OREVCD,OREVCD'=$P(IB0,U,4) Q      ; revenue code
"RTN","IBCEOB1",97,0)
 ... I OPROC'="",OPROC'=$P(IB0,U,3) Q             ; procedure code
"RTN","IBCEOB1",98,0)
 ... I +$P(IBZDATA(Z),U,4)'=$P(IB0,U,16) Q        ; original units
"RTN","IBCEOB1",99,0)
 ... I +OCHG'=+$$DOLLAR^IBCEOB($P(IB0,U,15)) Q    ; original charges
"RTN","IBCEOB1",100,0)
 ... I '$$MODMATCH($P(IBZDATA(Z),U,9),$P(IB0,U,5,8)) Q  ; modifiers
"RTN","IBCEOB1",101,0)
 ... S IBLN=Z
"RTN","IBCEOB1",102,0)
 ... Q
"RTN","IBCEOB1",103,0)
 .. ;
"RTN","IBCEOB1",104,0)
 .. ; if bundled/unbundled
"RTN","IBCEOB1",105,0)
 .. I IBBNDL D  Q
"RTN","IBCEOB1",106,0)
 ... I OPROC="",OREVCD,OREVCD'=+$P(IB0,U,10) Q     ; revenue code
"RTN","IBCEOB1",107,0)
 ... I OPROC'="",OPROC'=$P(IB0,U,10) Q             ; procedure code
"RTN","IBCEOB1",108,0)
 ... I +$P(IBZDATA(Z),U,4)'=$P(IB0,U,16) Q         ; original units
"RTN","IBCEOB1",109,0)
 ... I +OCHG'=+$$DOLLAR^IBCEOB($P(IB0,U,15)) Q     ; original charges
"RTN","IBCEOB1",110,0)
 ... I '$$MODMATCH($P(IBZDATA(Z),U,9),$P(IB0,U,11,14)) Q  ; modifiers
"RTN","IBCEOB1",111,0)
 ... S IBLN=Z_U_$S(OPROC'="":OPROC,1:OREVCD)
"RTN","IBCEOB1",112,0)
 ... Q
"RTN","IBCEOB1",113,0)
 .. Q
"RTN","IBCEOB1",114,0)
 . ; When dealing with Inpatient UB92's, check for revenue code roll-ups
"RTN","IBCEOB1",115,0)
 . I 'IBLN,$$INPAT^IBCEF(IBIFN,1) D RCRU^IBCEOB0(.IBZDATA,IB0,.IBLN)
"RTN","IBCEOB1",116,0)
 . ; If only 1 rev code and charges are the same, assume a match
"RTN","IBCEOB1",117,0)
 . I 'IBLN,'$P($G(^IBM(361.1,IBEOB,0)),U,4),$O(IBZDATA(""),-1)=$O(IBZDATA("")),+OCHG=+$$DOLLAR^IBCEOB($P(IB0,U,15)) S IBLN=+$O(IBZDATA(""))_U_OREVCD
"RTN","IBCEOB1",118,0)
 ;
"RTN","IBCEOB1",119,0)
 ; At this point, we can assume the claim is HCFA 1500 format
"RTN","IBCEOB1",120,0)
 I '$D(IBZDATA) D F^IBCEF("N-HCFA 1500 SERVICE LINE (EDI)","IBZDATA",,IBIFN)
"RTN","IBCEOB1",121,0)
 I $P(IB0,U,22),$D(IBZDATA(+$P(IB0,U,22))) S IBLN=+$P(IB0,U,22)_U_$P(IB0,U,10) G FINDLNX
"RTN","IBCEOB1",122,0)
 S Z=0 F  S Z=$O(IBZDATA(Z)) Q:'Z  D  Q:IBLN
"RTN","IBCEOB1",123,0)
 . S OCHG=$P(IBZDATA(Z),U,8)*$P(IBZDATA(Z),U,9) ; charge from bill
"RTN","IBCEOB1",124,0)
 . S UNITS=$S('$P(IBZDATA(Z),U,12):$P(IBZDATA(Z),U,9),1:$P(IBZDATA(Z),U,12)/15) ; original units from bill
"RTN","IBCEOB1",125,0)
 . S OPROC=$$PRCD^IBCEF1(+$P(IBZDATA(Z),U,5)_";ICPT(") ; proc from bill
"RTN","IBCEOB1",126,0)
 . Q:OPROC'=$S('IBBNDL:$P(IB0,U,3),1:$P(IB0,U,10))
"RTN","IBCEOB1",127,0)
 . S MODOK=0
"RTN","IBCEOB1",128,0)
 . I $$DOLLAR^IBCEFG1(OCHG)=+$P(IB0,U,15),UNITS=$P(IB0,U,16),$S($P(IB0,U,19):$P(IB0,U,19)=$P(IBZDATA(Z),U),1:1) D
"RTN","IBCEOB1",129,0)
 .. ;Original procedure/chg/units/date match to get here
"RTN","IBCEOB1",130,0)
 .. ;Check matching original modifiers
"RTN","IBCEOB1",131,0)
 .. S MODOK=$$MODMATCH($$MODLST^IBEFUNC2($P(IBZDATA(Z),U,10)),$S('IBBNDL:$P(IB0,U,5,8),1:$P(IB0,U,11,14)))
"RTN","IBCEOB1",132,0)
 .. I 'MODOK,'IBLN1 S IBLN1=Z_$S(IBBNDL:U_OPROC,1:"")
"RTN","IBCEOB1",133,0)
 .. Q:'MODOK
"RTN","IBCEOB1",134,0)
 .. S IBLN=Z_$S(IBBNDL:U_OPROC,1:"")
"RTN","IBCEOB1",135,0)
 I 'IBLN,IBLN1 S IBLN=IBLN1
"RTN","IBCEOB1",136,0)
 ;
"RTN","IBCEOB1",137,0)
FINDLNX ;
"RTN","IBCEOB1",138,0)
 Q IBLN
"RTN","IBCEOB1",139,0)
 ;
"RTN","IBCEOB1",140,0)
MODMATCH(IB,MODLST) ; Match modifiers
"RTN","IBCEOB1",141,0)
 ; IB = the list of modifiers iens from the bill, comma delimited
"RTN","IBCEOB1",142,0)
 ; MODLST = the 4 '^' pieces of the reported modifiers
"RTN","IBCEOB1",143,0)
 ; 
"RTN","IBCEOB1",144,0)
 N MODOK,Q,Z0,IBMOD
"RTN","IBCEOB1",145,0)
 S MODOK=1
"RTN","IBCEOB1",146,0)
 I $TR(MODLST,U)'="" F Q=1:1:$L(MODLST,U) S Z0=$P(MODLST,U,Q) I Z0'="" S IBMOD(Z0)=$G(IBMOD(Z0))+1
"RTN","IBCEOB1",147,0)
 I IB="",$O(IBMOD(""))="" G MODQ ; No modifiers used
"RTN","IBCEOB1",148,0)
 F Z0=1:1:4 D  Q:'MODOK
"RTN","IBCEOB1",149,0)
 . Q:$P(IB,",",Z0)=""
"RTN","IBCEOB1",150,0)
 . I $D(IBMOD($P(IB,",",Z0))) S IBMOD($P(IB,",",Z0))=IBMOD($P(IB,",",Z0))-1 K:'IBMOD($P(IB,",",Z0)) IBMOD($P(IB,",",Z0)) Q
"RTN","IBCEOB1",151,0)
 . S MODOK=0  ; All original mods not matched
"RTN","IBCEOB1",152,0)
 G:'MODOK MODQ
"RTN","IBCEOB1",153,0)
 I $O(IBMOD(""))'="" S MODOK=0 ; All submitted mods not matched
"RTN","IBCEOB1",154,0)
MODQ Q MODOK
"RTN","IBCEOB1",155,0)
 ;
"RTN","IBCEOB1",156,0)
UPDNM(IBEOB,IB0,IBBULL,IBDR) ; Update name on claim if it comes back changed
"RTN","IBCEOB1",157,0)
 ; IBEOB = the internal entry # of the entry in file 361.1
"RTN","IBCEOB1",158,0)
 ; IB0 = the raw data returned from the 835 flat file
"RTN","IBCEOB1",159,0)
 ; IBBULL = holds result of name change check in piece 1 - if name
"RTN","IBCEOB1",160,0)
 ;          changed, first '^' piece is 1, 3rd '^' piece is the old
"RTN","IBCEOB1",161,0)
 ;          insured's name
"RTN","IBCEOB1",162,0)
 ; IBDR = returned as the updated 'DR' string with the name changed
"RTN","IBCEOB1",163,0)
 ;       fields to use to update the EOB file (361.1) - pass by reference
"RTN","IBCEOB1",164,0)
 ;
"RTN","IBCEOB1",165,0)
 N IBCHGED,IBIFN,IBNEW,IBCOB,DIE,DR,X,Y
"RTN","IBCEOB1",166,0)
 I $P(IB0,U,7) D
"RTN","IBCEOB1",167,0)
 . S IBNEW=$P(IB0,U,3)_","_$P(IB0,U,4)_$S($P(IB0,U,5)'="":" "_$P(IB0,U,5),1:""),$P(IBBULL,U)=1
"RTN","IBCEOB1",168,0)
 . S IBCOB=+$P($G(^IBM(361.1,IBEOB,0)),U,15)
"RTN","IBCEOB1",169,0)
 . S IBIFN=+$G(^IBM(361.1,+IBEOB,0))
"RTN","IBCEOB1",170,0)
 . S IB=$G(^DGCR(399,IBIFN,"I"_IBCOB))
"RTN","IBCEOB1",171,0)
 . ;
"RTN","IBCEOB1",172,0)
 . I IB'="",$P(IB,U,17)'=IBNEW D
"RTN","IBCEOB1",173,0)
 .. ; Update the claim data only
"RTN","IBCEOB1",174,0)
 .. S $P(IBBULL,U,3)=$P(IB,U,17) ; save old value
"RTN","IBCEOB1",175,0)
 .. S $P(IB,U,17)=IBNEW
"RTN","IBCEOB1",176,0)
 .. S DIE="^DGCR(399,",DA=IBIFN,DR="30"_IBCOB_"////"_IB
"RTN","IBCEOB1",177,0)
 .. D:DA ^DIE
"RTN","IBCEOB1",178,0)
 .. S IBCHGED=1
"RTN","IBCEOB1",179,0)
 . S IBDR=$G(IBDR)_"6.01////"_$P(IB0,U,3)_","_$P(IB0,U,4)_" "_$P(IB0,U,5)_";"
"RTN","IBCEOB1",180,0)
 ;
"RTN","IBCEOB1",181,0)
 Q $G(IBCHGED)
"RTN","IBCEOB1",182,0)
 ;
"RTN","IBCEOB1",183,0)
UPDID(IBEOB,IB0,IBBULL,IBDR) ; Update id # on claim and policy if it comes back
"RTN","IBCEOB1",184,0)
 ;   changed
"RTN","IBCEOB1",185,0)
 ; IBEOB = the internal entry # of the entry in file 361.1
"RTN","IBCEOB1",186,0)
 ; IB0 = the raw data returned from the 835 flat file
"RTN","IBCEOB1",187,0)
 ; IBBULL = holds result of id change check in piece 2 - if id changed,
"RTN","IBCEOB1",188,0)
 ;          second '^' piece = 1,4th '^' piece is the old insured's id
"RTN","IBCEOB1",189,0)
 ; IBDR = returned as the updated 'DR' string with the id changed fields
"RTN","IBCEOB1",190,0)
 ;        to use to update the EOB file (361.1) - pass by reference
"RTN","IBCEOB1",191,0)
 ;
"RTN","IBCEOB1",192,0)
 N IBCHGED,IBNEW,IBCOB,IB,DIE,DR,DA,X,Y
"RTN","IBCEOB1",193,0)
 I $P(IB0,U,8) D
"RTN","IBCEOB1",194,0)
 . S IBNEW=$P(IB0,U,6),$P(IBBULL,U,2)=1
"RTN","IBCEOB1",195,0)
 . S IBIFN=+$G(^IBM(361.1,+IBEOB,0))
"RTN","IBCEOB1",196,0)
 . S IBCOB=+$P($G(^IBM(361.1,IBEOB,0)),U,15)
"RTN","IBCEOB1",197,0)
 . S IB=$G(^DGCR(399,IBIFN,"I"_IBCOB))
"RTN","IBCEOB1",198,0)
 . ;
"RTN","IBCEOB1",199,0)
 . I IB'="",$P(IB,U,2)'=IBNEW D
"RTN","IBCEOB1",200,0)
 .. ; Update the claim
"RTN","IBCEOB1",201,0)
 .. S $P(IBBULL,U,4)=$P(IB,U,2) ; save old value
"RTN","IBCEOB1",202,0)
 .. S $P(IB,U,2)=IBNEW
"RTN","IBCEOB1",203,0)
 .. S DIE="^DGCR(399,",DA=IBIFN,DR="30"_IBCOB_"////"_IB D ^DIE
"RTN","IBCEOB1",204,0)
 .. ;
"RTN","IBCEOB1",205,0)
 .. ; Update the policy
"RTN","IBCEOB1",206,0)
 .. S DA(1)=$P($G(^DGCR(399,IBIFN,0)),U,2),DA=$P($G(^("M")),U,(11+IBCOB)),DR="1////"_IBNEW,DIE="^DPT("_DA(1)_",.312,"
"RTN","IBCEOB1",207,0)
 .. I DA(1),DA D ^DIE
"RTN","IBCEOB1",208,0)
 .. S IBCHGED=1
"RTN","IBCEOB1",209,0)
 . S IBDR=$G(IBDR)_"6.02////"_$P(IB0,U,6)_";"
"RTN","IBCEOB1",210,0)
 ;
"RTN","IBCEOB1",211,0)
 Q $G(IBCHGED)
"RTN","IBCEOB1",212,0)
 ;
"RTN","IBCEOBAR")
0^6^B1094956
"RTN","IBCEOBAR",1,0)
IBCEOBAR ;ALB/TMK - EOB FUNCTIONS FOR A/R ;06-JUN-02
"RTN","IBCEOBAR",2,0)
 ;;2.0;INTEGRATED BILLING;**135**;21-MAR-94
"RTN","IBCEOBAR",3,0)
 Q
"RTN","IBCEOBAR",4,0)
 ;
"RTN","IBCEOBAR",5,0)
SPL1(IB3611,IBBILL,IBBREF,IBAMT) ; Store the split amts in IB's EOB file
"RTN","IBCEOBAR",6,0)
 N DD,DO,DIC,X,Y,DLAYGO,DA,Z,DR
"RTN","IBCEOBAR",7,0)
 S Z=+$O(^IBM(361.1,+IB3611,8,"B",IBBILL,0))
"RTN","IBCEOBAR",8,0)
 I Z,+$P($G(^IBM(361.1,IB3611,8,Z,0)),U,2)=+IBAMT Q  ; Duplicate
"RTN","IBCEOBAR",9,0)
 S DLAYGO=361.18,DA(1)=IB3611,DIC(0)="L",X=IBBILL,DIC("DR")=".02////"_$J(+IBAMT,"",2)_$S(IBBREF:";.03////"_IBBREF,1:""),DIC="^IBM(361.1,"_DA(1)_",8,"
"RTN","IBCEOBAR",10,0)
 D FILE^DICN K DIC,DD,DO,DLAYGO
"RTN","IBCEOBAR",11,0)
 Q
"RTN","IBCEOBAR",12,0)
 ;
"RTN","IBCEST")
0^8^B51376525
"RTN","IBCEST",1,0)
IBCEST ;ALB/TMP - 837 EDI STATUS MESSAGE PROCESSING ;17-APR-96
"RTN","IBCEST",2,0)
 ;;2.0;INTEGRATED BILLING;**137,189,197,135**;21-MAR-94
"RTN","IBCEST",3,0)
 ; IA 4042 for call to AUDITX^PRCAUDT
"RTN","IBCEST",4,0)
 Q
"RTN","IBCEST",5,0)
 ;
"RTN","IBCEST",6,0)
UPD361(IBTDA) ; Update IB BILL STATUS MESSAGES file
"RTN","IBCEST",7,0)
 ; IBTDA = ien of return message in file 364.2
"RTN","IBCEST",8,0)
 ;
"RTN","IBCEST",9,0)
 N IB,IB0,IBSEQ,IB00,IBBILL,IBBTCH,IBMNUM
"RTN","IBCEST",10,0)
 ;
"RTN","IBCEST",11,0)
 I '$$LOCK^IBCEM(IBTDA) G UPDQ ;Lock message in file 364.2
"RTN","IBCEST",12,0)
 ;
"RTN","IBCEST",13,0)
 S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCEST",14,0)
 S IBMNUM=$P(IB0,U) ; Message number
"RTN","IBCEST",15,0)
 S IB00=$G(^IBA(364,+$P(IB0,U,5),0)) ; Transmit bill entry
"RTN","IBCEST",16,0)
 S IBBILL=+IB00 ; Actual bill ien in file 399
"RTN","IBCEST",17,0)
 S IBBTCH=$P(IB0,U,4) ; Batch #
"RTN","IBCEST",18,0)
 ;
"RTN","IBCEST",19,0)
 ; Auto-audit bills based on status code on '10' record of status msg
"RTN","IBCEST",20,0)
 ; flat file
"RTN","IBCEST",21,0)
 I IBBILL,$P($T(PRCAUDT+1^PRCAUDT),"**",2)[",173" D
"RTN","IBCEST",22,0)
 . N Z,Z0,Z1,OK
"RTN","IBCEST",23,0)
 . Q:+$$STA^PRCAFN(IBBILL)'=104
"RTN","IBCEST",24,0)
 . S (Z,OK)=0
"RTN","IBCEST",25,0)
 . F  S Z=$O(^IBA(364.2,IBTDA,2,Z)) Q:'Z  S Z0=$P($G(^(Z,0)),"##RAW DATA: ",2) I +Z0=10 S Z0=$P(Z0,U,5) D  Q:OK
"RTN","IBCEST",26,0)
 .. ; Strip leading spaces
"RTN","IBCEST",27,0)
 .. F  S Z0=$P(Z0," ",2,99) Q:$E(Z0)'=" "
"RTN","IBCEST",28,0)
 .. Q:Z0=""
"RTN","IBCEST",29,0)
 .. I "A3^AC^A7^A8^AA^2P^10^11"[Z0,$P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBBILL,0)),U,7),0)),U,11) D AUDITX^PRCAUDT(IBBILL) S OK=1 ; IA 4042
"RTN","IBCEST",30,0)
 ;
"RTN","IBCEST",31,0)
 I $S(IBMNUM="":1,1:'IBBILL&(IBBTCH="")) D DELMSG^IBCESRV2(IBTDA) G UPDQ
"RTN","IBCEST",32,0)
 ;
"RTN","IBCEST",33,0)
 ; Individual bill
"RTN","IBCEST",34,0)
 I IBBILL D  G UPDQ
"RTN","IBCEST",35,0)
 . N IBA1,IBMSG0,IBPID
"RTN","IBCEST",36,0)
 . S IBPID="",IBA1=0
"RTN","IBCEST",37,0)
 . F  S IBA1=$O(^IBA(364.2,IBTDA,2,IBA1)) Q:'IBA1  S IBMSG0=$P($G(^(IBA1,0)),"##RAW DATA: ",2) I +IBMSG0=277,$P(IBMSG0,U,5)="N" S IBPID=$P(IBMSG0,U,11) Q
"RTN","IBCEST",38,0)
 . S IBSEQ=$P(IB00,U,8) S:IBSEQ="" IBSEQ="P"
"RTN","IBCEST",39,0)
 . D STORE(IB0,IBBTCH,IBMNUM,IBTDA,IBBILL,IBSEQ,IBPID,1)
"RTN","IBCEST",40,0)
 ;
"RTN","IBCEST",41,0)
 ; Batch - update each bill separately
"RTN","IBCEST",42,0)
 S IBBILL=""
"RTN","IBCEST",43,0)
 F  S IBBILL=$O(^IBA(364,"ABABI",+IBBTCH,IBBILL)) Q:'IBBILL  D
"RTN","IBCEST",44,0)
 . Q:$D(^TMP("IBCONF",$J,IBBILL))  ;Bill was rejected
"RTN","IBCEST",45,0)
 . S IB=$O(^IBA(364,"ABABI",+IBBTCH,IBBILL,0)) Q:'IB
"RTN","IBCEST",46,0)
 . S IBSEQ=$P($G(^IBA(364,IB,0)),U,8) S:IBSEQ="" IBSEQ="P"
"RTN","IBCEST",47,0)
 . D STORE(IB0,IBBTCH,IBMNUM,IBTDA,IBBILL,IBSEQ,"",0)
"RTN","IBCEST",48,0)
 ;
"RTN","IBCEST",49,0)
 Q
"RTN","IBCEST",50,0)
 ;
"RTN","IBCEST",51,0)
STORE(IB0,IBBTCH,IBMNUM,IBTDA,IBBILL,IBSEQ,IBPID,IB1) ;
"RTN","IBCEST",52,0)
 ;
"RTN","IBCEST",53,0)
 ; IB0 = 0-node of message in file 364.2
"RTN","IBCEST",54,0)
 ; IBBTCH = ien of batch in file 364.1
"RTN","IBCEST",55,0)
 ; IBMNUM = actual message number
"RTN","IBCEST",56,0)
 ; IBTDA = ien of message in file 364.2
"RTN","IBCEST",57,0)
 ; IBBILL = ien of bill in 399
"RTN","IBCEST",58,0)
 ; IBSEQ = P/S/T/ for COB sequence related to message
"RTN","IBCEST",59,0)
 ; IBPID = the payer id returned from clearinghouse for the claim
"RTN","IBCEST",60,0)
 ; IB1 = flag that says if the message was for a single bill or a batch.
"RTN","IBCEST",61,0)
 ;       Batch statuses have an additional standard text entry.
"RTN","IBCEST",62,0)
 ;       1 = single bill 0 = batch
"RTN","IBCEST",63,0)
 ; 
"RTN","IBCEST",64,0)
 N DA,DIK,DIE,DIC,X,Y,DR,DO,DD,DLAYGO,Z,Z0,Z1,IBE,IBT,IBDUP,IBFLDS,IBY,IBAUTO
"RTN","IBCEST",65,0)
 ;
"RTN","IBCEST",66,0)
 S X=IBBILL,IBDUP=0
"RTN","IBCEST",67,0)
 ;
"RTN","IBCEST",68,0)
 I $D(^IBM(361,"AC",IBMNUM\1)) D  ; Message already there for bill
"RTN","IBCEST",69,0)
 . S Z=0 F  S Z=$O(^IBM(361,"AC",IBMNUM\1,Z)) Q:'Z  I +$G(^IBM(361,Z,0))=IBBILL S IBDUP=Z Q
"RTN","IBCEST",70,0)
 ;
"RTN","IBCEST",71,0)
 S IBFLDS=".02////"_$P(IB0,U,3)
"RTN","IBCEST",72,0)
 S IBFLDS=IBFLDS_";.03////"_$S($E(IBPID,2,5)="PRNT":"I",$$EXTERNAL^DILFD(364.2,.02,"U",$P(IB0,U,2))["REJ":"R",1:"I")_";.05////"_IBBTCH_";.06////"_IBMNUM_";.04////"_+$P(IB0,U,8)_";.07////"_IBSEQ_$S($P(IB0,U,5):";.11////"_$P(IB0,U,5),1:"")
"RTN","IBCEST",73,0)
 S IBFLDS=IBFLDS_";.12////"_$P(IB0,U,10)_";.09////0"
"RTN","IBCEST",74,0)
 I IBPID'="" D
"RTN","IBCEST",75,0)
 . S IBPID("TYPE")=$S($$FT^IBCEF(IBBILL)=2:"P",1:"I")
"RTN","IBCEST",76,0)
 . D UPDINS(.IBPID,$$POLICY^IBCEF(IBBILL,1,$TR(IBSEQ,"PST","123")),IBBILL)
"RTN","IBCEST",77,0)
 ;
"RTN","IBCEST",78,0)
 I IBDUP D  I $D(Y) G UPDQ
"RTN","IBCEST",79,0)
 . ; Stuff fields into existing entry
"RTN","IBCEST",80,0)
 . ; (may be needed for reprocessing of aborted updates)
"RTN","IBCEST",81,0)
 . S DIE="^IBM(361,",DA=IBDUP,DR=IBFLDS_";1///@"
"RTN","IBCEST",82,0)
 . D ^DIE
"RTN","IBCEST",83,0)
 . I $D(Y) S IBY=-1 Q  ;Update not successful
"RTN","IBCEST",84,0)
 . S IBY=IBDUP
"RTN","IBCEST",85,0)
 ;
"RTN","IBCEST",86,0)
 K IBT
"RTN","IBCEST",87,0)
 I 'IBDUP D  ; Create new entry and stuff fields
"RTN","IBCEST",88,0)
 . S DIC(0)="L",DIC="^IBM(361,",DLAYGO=361
"RTN","IBCEST",89,0)
 . S DIC("DR")=IBFLDS
"RTN","IBCEST",90,0)
 . D FILE^DICN
"RTN","IBCEST",91,0)
 . K DO,DD,DLAYGO,DIC
"RTN","IBCEST",92,0)
 . S IBY=+Y
"RTN","IBCEST",93,0)
 . Q:IBY'>0
"RTN","IBCEST",94,0)
 . F Z=1:1:10 L +^IBM(361,"AD",IBBILL):10 Q:$T
"RTN","IBCEST",95,0)
 . I '$T S DA=IBY,DIK="^IBM(361," D ^DIK S IBY=-1 Q
"RTN","IBCEST",96,0)
 . S Z=0
"RTN","IBCEST",97,0)
 . F  S Z=$O(^IBM(361,"AD",IBBILL,+$P(IB0,U,10),Z)) Q:'Z  I Z'=IBY D  Q:IBY'>0
"RTN","IBCEST",98,0)
 .. ; Check for same exact message
"RTN","IBCEST",99,0)
 .. S IB0=$G(^IBM(361,Z,0)),IB00=$G(^IBM(361,IBY,0))
"RTN","IBCEST",100,0)
 .. S $P(IB0,U,6)="",$P(IB00,U,6)=""
"RTN","IBCEST",101,0)
 .. I $P(IB0,U,3,8)=$P(IB00,U,3,8) D
"RTN","IBCEST",102,0)
 ... N IBSAME
"RTN","IBCEST",103,0)
 ... D BLDMSG(IB1,IBTDA,.IBT)
"RTN","IBCEST",104,0)
 ... S IBSAME=1,(Z1,Z0)=0 F  S Z0=$O(^IBM(361,Z,1,Z0)) S:'Z0&($O(IBT(Z1))) IBSAME=0 Q:'Z0  S Z1=Z0 I $G(IBT(Z0))'=$G(^IBM(361,Z,1,Z0,0)) S IBSAME=0 Q
"RTN","IBCEST",105,0)
 ... I IBSAME S DIK="^IBM(361,",DA=IBY,IBY=-1 D ^DIK D DELMSG^IBCESRV2(IBTDA)
"RTN","IBCEST",106,0)
 ;
"RTN","IBCEST",107,0)
 I IBY>0 D  ;Move text over
"RTN","IBCEST",108,0)
 . K IBE("DIERR")
"RTN","IBCEST",109,0)
 . ;
"RTN","IBCEST",110,0)
 . I '$D(IBT) D
"RTN","IBCEST",111,0)
 .. D BLDMSG(IB1,IBTDA,.IBT,.IBAUTO)
"RTN","IBCEST",112,0)
 .. ; if info msg, ck for no review needed based on first line of text
"RTN","IBCEST",113,0)
 .. I $G(IBAUTO),$P($G(^IBM(361,+IBY,0)),U,3)="I" D
"RTN","IBCEST",114,0)
 ... S DIE="^IBM(361,",DR=".09////2;.14////1",DA=+IBY D ^DIE
"RTN","IBCEST",115,0)
 ... I IB1,$P($G(^IBM(361,+IBY,0)),U,11),$$PRINTUPD^IBCEU0($G(IBT(1)),$P($G(^IBM(361,+IBY,0)),U,11))
"RTN","IBCEST",116,0)
 . ;
"RTN","IBCEST",117,0)
 . F Z=1:1:20 D WP^DIE(361,+IBY_",",1,"AK","IBT","IBE") Q:$S('$D(IBE("DIERR")):1,+IBE("DIERR")=1:$G(IBE("DIERR",1))'=110,1:1)  K IBE("DIERR") ; On lock error (110), retry up to 20 times
"RTN","IBCEST",118,0)
 . ;
"RTN","IBCEST",119,0)
 . ; Delete message after it successfully updates the database.
"RTN","IBCEST",120,0)
 . I '$D(IBE("DIERR")) D DELMSG^IBCESRV2(IBTDA)
"RTN","IBCEST",121,0)
 ;
"RTN","IBCEST",122,0)
UPDQ L -^IBA(364.2,IBTDA,0),-^IBM(361,"AD",IBBILL)
"RTN","IBCEST",123,0)
 Q
"RTN","IBCEST",124,0)
 ;
"RTN","IBCEST",125,0)
BLDMSG(IB1,IBTDA,IBT,IBAUTO) ; Builds message text
"RTN","IBCEST",126,0)
 ; IB1 = flag for batch message
"RTN","IBCEST",127,0)
 ; IBTDA = ien of entry in file 364.2
"RTN","IBCEST",128,0)
 ; IBT = array returned with message text
"RTN","IBCEST",129,0)
 ; IBAUTO = if passed by reference, returns 1 if text indicates review
"RTN","IBCEST",130,0)
 ;          not needed
"RTN","IBCEST",131,0)
 N IBDATA,IBCK,IBZ,IBZ0,IBZ1,Z
"RTN","IBCEST",132,0)
 S (IBZ,IBZ0,IBDATA,IBAUTO,IBCK)=0
"RTN","IBCEST",133,0)
 I 'IB1 S IBT(1)="Status message received for batch "_$P($G(^IBA(364.1,IBBTCH,0)),U)_" dated "_$$FMTE^XLFDT($P($G(^IBA(364.2,IBTDA,0)),U,10),2),IBZ0=1
"RTN","IBCEST",134,0)
 ; Don't move the raw data over, just move the text of the message
"RTN","IBCEST",135,0)
 F  S IBZ=$O(^IBA(364.2,IBTDA,2,IBZ)) Q:'IBZ  S IBZ1=$G(^(IBZ,0)) S IBDATA=($E(IBZ1,1,2)="##") Q:IBDATA  S IBZ0=IBZ0+1,IBT(IBZ0)=IBZ1 I 'IBCK S Z=$$CKREVU^IBCEM4(IBZ1,,,.IBCK),IBAUTO=$S(IBCK:0,Z:1,1:IBAUTO)
"RTN","IBCEST",136,0)
 Q
"RTN","IBCEST",137,0)
 ;
"RTN","IBCEST",138,0)
UPDINS(IBPID,IBINS,IBIFN) ; Update the insurance id or the bill printed at
"RTN","IBCEST",139,0)
 ;    the EDI contractor's print shop and mailed to the ins co.
"RTN","IBCEST",140,0)
 ; IBPID = the id returned from the EDI contractor for the ins co
"RTN","IBCEST",141,0)
 ;      ("TYPE") = P if professional id or I if institutional id
"RTN","IBCEST",142,0)
 ; IBINS = the ien of the insurance co it was sent to (file 36)
"RTN","IBCEST",143,0)
 ; IBIFN = the ien of the claim (file 399)
"RTN","IBCEST",144,0)
 ;
"RTN","IBCEST",145,0)
 N IBID,IBIDFLD,IBPRT,IBLOOK,DA,DR,DIE,X,Y,Z
"RTN","IBCEST",146,0)
 ;
"RTN","IBCEST",147,0)
 Q:'$G(IBINS)!($G(IBPID)="")
"RTN","IBCEST",148,0)
 ;
"RTN","IBCEST",149,0)
 ; Strip spaces off the end of data
"RTN","IBCEST",150,0)
 S IBLOOK=""
"RTN","IBCEST",151,0)
 I $L(IBPID) F Z=$L(IBPID):-1:1 I $E(IBPID,Z)'=" " S IBLOOK=$E(IBPID,1,Z) Q
"RTN","IBCEST",152,0)
 ;
"RTN","IBCEST",153,0)
 S IBPRT=($E(IBLOOK,2,5)="PRNT")
"RTN","IBCEST",154,0)
 I IBPRT D  ; Set printed via EDI field on bill
"RTN","IBCEST",155,0)
 . S DA=IBIFN,DIE="^DGCR(399,",DR="26////1" D ^DIE
"RTN","IBCEST",156,0)
 ;
"RTN","IBCEST",157,0)
 S IBLOOK=$E($S('IBPRT:$P(IBLOOK,"PAYID=",2),1:""),1,5)
"RTN","IBCEST",158,0)
 Q:IBLOOK=""!($E(IBLOOK,2,5)="PRNT")
"RTN","IBCEST",159,0)
 S IBIDFLD="3.0"_$S($G(IBPID("TYPE"))="I":4,1:2)
"RTN","IBCEST",160,0)
 S IBID=$P($G(^DIC(36,+IBINS,3)),U,IBIDFLD*100#100)
"RTN","IBCEST",161,0)
 Q:IBID=IBLOOK
"RTN","IBCEST",162,0)
 I IBID="" D  G UPDINSQ ; Update insurance co electronic id # if blank
"RTN","IBCEST",163,0)
 . S DIE="^DIC(36,",DR=IBIDFLD_"////"_IBLOOK,DA=IBINS D ^DIE
"RTN","IBCEST",164,0)
 I IBID'="",IBLOOK'="" D  ; Bulletin that the id on file and id returned
"RTN","IBCEST",165,0)
 . ; are different
"RTN","IBCEST",166,0)
 . N XMTO,XMDUZ,XMBODY,IBXM,XMSUBJ,XMZ
"RTN","IBCEST",167,0)
 . S XMTO("I:G.IB EDI")=""
"RTN","IBCEST",168,0)
 . S XMDUZ="",XMBODY="IBXM",XMSUBJ="PAYER ID RETURNED IS DIFFERENT THAN PAYER ID ON FILE"
"RTN","IBCEST",169,0)
 . S IBXM(1)="BILL #     : "_$P($G(^DGCR(399,IBIFN,0)),U)
"RTN","IBCEST",170,0)
 . S IBXM(2)="PAYER      : "_$P($G(^DIC(36,+IBINS,0)),U)
"RTN","IBCEST",171,0)
 . S IBXM(3)="BILL TYPE  : "_$S($G(IBPID("TYPE"))="I":"INSTITUT",1:"PROFESS")_"IONAL"
"RTN","IBCEST",172,0)
 . S IBXM(4)="ID ON FILE : "_IBID
"RTN","IBCEST",173,0)
 . S IBXM(5)="ID RETURNED: "_IBLOOK
"RTN","IBCEST",174,0)
 . S IBXM(6)=" ",IBXM(7)="   Please determine which id number is correct and correct the id in the",IBXM(8)="insurance file for this payer, if needed"
"RTN","IBCEST",175,0)
 . D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","IBCEST",176,0)
 ;
"RTN","IBCEST",177,0)
UPDINSQ Q
"RTN","IBCEST",178,0)
 ;
"RTN","IBECEA")
0^7^B10792926
"RTN","IBECEA",1,0)
IBECEA ;ALB/RLW - Cancel/Edit/Add Patient Charges ;12-JUN-92
"RTN","IBECEA",2,0)
 ;;2.0; INTEGRATED BILLING ;**199,135**;21-MAR-94
"RTN","IBECEA",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBECEA",4,0)
 ;
"RTN","IBECEA",5,0)
EN ; Cancel/Edit/Add Patient Charges -- invoke the List Manager.
"RTN","IBECEA",6,0)
 K XQORS,VALMEVL
"RTN","IBECEA",7,0)
EN1 ; Entrypoint to avoid killing XQORS
"RTN","IBECEA",8,0)
 I '$$CHECK^IBECEAU(1) G ENQ
"RTN","IBECEA",9,0)
 D EN^VALM("IB CHARGES")
"RTN","IBECEA",10,0)
ENQ K IBSITE,IBFAC,IBSERV
"RTN","IBECEA",11,0)
 Q
"RTN","IBECEA",12,0)
 ;
"RTN","IBECEA",13,0)
EN1AR ; AR entry for charge maintenance
"RTN","IBECEA",14,0)
 N DIR,X,Y
"RTN","IBECEA",15,0)
 D EN1
"RTN","IBECEA",16,0)
 S DIR(0)="EA",DIR("A")="PRESS RETURN TO CONTINUE. "
"RTN","IBECEA",17,0)
 W ! D ^DIR K DIR
"RTN","IBECEA",18,0)
 Q
"RTN","IBECEA",19,0)
 ;
"RTN","IBECEA",20,0)
INIT ; List Manager (IB CHARGES) main entry point.
"RTN","IBECEA",21,0)
 S IBJOB=4,IBWHER="IBECEA",IBDUZ=DUZ
"RTN","IBECEA",22,0)
 S IBACMAR="^TMP(""IBACM"",$J)",IBACMIDX="^TMP(""IBACMIDX"",$J)",VALMIDX="^TMP(""IBCMLIDX"",$J)"
"RTN","IBECEA",23,0)
 I '$$SLPT S VALMQUIT="" D FNL G INITQ
"RTN","IBECEA",24,0)
 I $$SLDT S VALMQUIT="" D FNL G INITQ
"RTN","IBECEA",25,0)
 I $$SLRX S VALMQUIT="" D FNL G INITQ
"RTN","IBECEA",26,0)
 D ARRAY^IBECEA0
"RTN","IBECEA",27,0)
INITQ Q
"RTN","IBECEA",28,0)
 ;
"RTN","IBECEA",29,0)
PAT ; 'Change Patient' protocol entry action.
"RTN","IBECEA",30,0)
 N IBDFN S IBDFN=DFN
"RTN","IBECEA",31,0)
 I '$$SLPT D MSG S DFN=IBDFN G PATQ
"RTN","IBECEA",32,0)
DATE ; 'Change Date' protocol entry action.
"RTN","IBECEA",33,0)
 N IBDT1,IBDT2,IBRXXX S IBDT1=IBABEG,IBDT2=IBAEND,IBRXXX=IBRX
"RTN","IBECEA",34,0)
 I $$SLDT D MSG S IBABEG=IBDT1,IBAEND=IBDT2 S:$D(IBDFN) DFN=IBDFN G PATQ
"RTN","IBECEA",35,0)
 I $$SLRX D MSG S IBABEG=IBDT1,IBAEND=IBDT2,IBRX=IBRXXX S:$D(IBDFN) DFN=IBDFN G PATQ
"RTN","IBECEA",36,0)
 D ARRAY^IBECEA0,HDR S VALMBCK="R"
"RTN","IBECEA",37,0)
PATQ Q
"RTN","IBECEA",38,0)
 ;
"RTN","IBECEA",39,0)
MSG ; Quick message display.
"RTN","IBECEA",40,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBECEA",41,0)
 W !!,*7,"No changes were made!",!
"RTN","IBECEA",42,0)
 S DIR(0)="E" D ^DIR S VALMBCK=""
"RTN","IBECEA",43,0)
 Q
"RTN","IBECEA",44,0)
 ;
"RTN","IBECEA",45,0)
HDR ; Build screen header.
"RTN","IBECEA",46,0)
 S IBNAM=$$PT^IBEFUNC(DFN)
"RTN","IBECEA",47,0)
 S VALMHDR(1)=$$SETSTR^VALM1($$FDATE^VALM1(IBABEG)_" THRU "_$$FDATE^VALM1(IBAEND),"Cancel/Edit/Add Charges",59,22)
"RTN","IBECEA",48,0)
 S VALMHDR(2)=$E("Patient: "_$P(IBNAM,"^"),1,25)_" "_$E(IBNAM)_$P(IBNAM,"^",3)
"RTN","IBECEA",49,0)
 Q
"RTN","IBECEA",50,0)
 ;
"RTN","IBECEA",51,0)
SLPT() ; Select a patient.
"RTN","IBECEA",52,0)
 N DIC,X,Y
"RTN","IBECEA",53,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBECEA",54,0)
 S DIC="^DPT(",DIC(0)="AEMQ" D ^DIC S DFN=+Y
"RTN","IBECEA",55,0)
 Q Y>0
"RTN","IBECEA",56,0)
 ;
"RTN","IBECEA",57,0)
SLDT() ; Select Charge dates.
"RTN","IBECEA",58,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBECEA",59,0)
 S DIR(0)="DA^2860101:NOW:EX",DIR("A")="Search for CHARGES from: ",DIR("B")=$$DAT2^IBOUTL($$FMADD^XLFDT(DT,-365)) D ^DIR S IBABEG=+Y G:'Y SLDTQ
"RTN","IBECEA",60,0)
 S DIR(0)="DA^"_+Y_":NOW:EX",DIR("A")="                     to: ",DIR("B")=$$DAT2^IBOUTL(DT) D ^DIR S IBAEND=+Y+.999999
"RTN","IBECEA",61,0)
SLDTQ Q $D(DIRUT)!($D(DUOUT))
"RTN","IBECEA",62,0)
 ;
"RTN","IBECEA",63,0)
SLRX() ; Include Rx copay charges?
"RTN","IBECEA",64,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBECEA",65,0)
 S DIR(0)="Y",DIR("A")="Include RX COPAY charges",DIR("B")="NO" D ^DIR S IBRX=Y
"RTN","IBECEA",66,0)
 Q $D(DIRUT)!($D(DUOUT))
"RTN","IBECEA",67,0)
 ;
"RTN","IBECEA",68,0)
FNL ; List Manager (IB CHARGES) exit action.
"RTN","IBECEA",69,0)
 K:$D(IBACMAR) @IBACMAR,IBACMAR K:$D(IBACMIDX) @IBACMIDX,IBACMIDX K:$D(VALMIDX) @VALMIDX,VALMIDX
"RTN","IBECEA",70,0)
 K IBABEG,IBAEND,DFN,IBAT,IBAX,IBY,VA,IBRX,IBWHER,X,^TMP("IBECEA",$J),^TMP("IBCMLIDX",$J),DFN,IBSAVY,IBARTYP,IBPRNT,IBDUZ,IBJOB,IBXA,IBNOW,IBLDT,IBL,IBIL,IBNAM
"RTN","IBECEA",71,0)
 Q
"RTN","IBECEA",72,0)
 ;
"RTN","IBECEA",73,0)
EXIT Q
"RTN","IBJTBA")
0^9^B46844175
"RTN","IBJTBA",1,0)
IBJTBA ;ALB/ARH - TPI BILL CHARGE INFO SCREEN ;01-MAR-1995
"RTN","IBJTBA",2,0)
 ;;2.0;INTEGRATED BILLING;**39,80,51,137,135**;21-MAR-94
"RTN","IBJTBA",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJTBA",4,0)
 ;
"RTN","IBJTBA",5,0)
EN ; -- main entry point for IBJ TP BILL CHARGES
"RTN","IBJTBA",6,0)
 D EN^VALM("IBJT BILL CHARGES")
"RTN","IBJTBA",7,0)
 Q
"RTN","IBJTBA",8,0)
 ;
"RTN","IBJTBA",9,0)
HDR ; -- header code
"RTN","IBJTBA",10,0)
 D HDR^IBJTU1(+IBIFN,+DFN,12)
"RTN","IBJTBA",11,0)
 Q
"RTN","IBJTBA",12,0)
 ;
"RTN","IBJTBA",13,0)
INIT ; -- init variables and list array
"RTN","IBJTBA",14,0)
 N IBOK,IBEOBDET
"RTN","IBJTBA",15,0)
 K ^TMP("IBJTBA",$J) N IBFT
"RTN","IBJTBA",16,0)
 I '$G(DFN)!'$G(IBIFN) S VALMQUIT="" G INITQ
"RTN","IBJTBA",17,0)
 S IBFT=+$P($G(^DGCR(399,+IBIFN,0)),U,19),IBOK=1
"RTN","IBJTBA",18,0)
 I $D(^IBM(361.1,"B",IBIFN))!$D(^IBM(361.1,"C",IBIFN)) D  G:'IBOK INITQ
"RTN","IBJTBA",19,0)
 . S DIR("A")="DO YOU WANT ALL EEOB DETAILS?: ",DIR("B")="NO",DIR(0)="YA"
"RTN","IBJTBA",20,0)
 . D FULL^VALM1 W ! D ^DIR K DIR
"RTN","IBJTBA",21,0)
 . I $D(DTOUT)!$D(DUOUT) S IBOK=0 Q
"RTN","IBJTBA",22,0)
 . S IBEOBDET=+Y
"RTN","IBJTBA",23,0)
 D BLD
"RTN","IBJTBA",24,0)
INITQ Q
"RTN","IBJTBA",25,0)
 ;
"RTN","IBJTBA",26,0)
MRA ; -- mra/eob
"RTN","IBJTBA",27,0)
 N IBI,Z,IBSTR,IBSHEOB,IBCT
"RTN","IBJTBA",28,0)
 S IBCT=0
"RTN","IBJTBA",29,0)
 S IBI=0 F  S IBI=$O(^IBM(361.1,"B",IBIFN,IBI)) Q:'IBI  S Z=+$O(^IBM(361.1,IBI,8,0)) I '$O(^(Z)) S IBCT=IBCT+1,IBSHEOB(IBI)=0  ; Entire EOB belongs to the bill
"RTN","IBJTBA",30,0)
 S IBI=0 F  S IBI=$O(^IBM(361.1,"C",IBIFN,IBI)) Q:'IBI  S IBCT=IBCT+1,IBSHEOB(IBI)=1 ; EOB has been reapportioned at the site
"RTN","IBJTBA",31,0)
 I 'IBCT D
"RTN","IBJTBA",32,0)
 . S IBSTR=$$SETLN("No EEOB/MRA Information","",1,79)
"RTN","IBJTBA",33,0)
 . S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",34,0)
 I IBCT D
"RTN","IBJTBA",35,0)
 . S Z=0
"RTN","IBJTBA",36,0)
 . S IBI=0 F  S IBI=$O(IBSHEOB(IBI)) Q:'IBI  S Z=Z+1 D SHEOB^IBJTBA1(IBI,+IBSHEOB(IBI),Z,IBCT)
"RTN","IBJTBA",37,0)
 ;
"RTN","IBJTBA",38,0)
 Q
"RTN","IBJTBA",39,0)
 ;
"RTN","IBJTBA",40,0)
HELP ; -- help code
"RTN","IBJTBA",41,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJTBA",42,0)
 Q
"RTN","IBJTBA",43,0)
 ;
"RTN","IBJTBA",44,0)
EXIT ; -- exit code
"RTN","IBJTBA",45,0)
 K ^TMP("IBJTBA",$J)
"RTN","IBJTBA",46,0)
 D CLEAR^VALM1
"RTN","IBJTBA",47,0)
 Q
"RTN","IBJTBA",48,0)
 ;
"RTN","IBJTBA",49,0)
BLD ; charges, as they would display on the bill
"RTN","IBJTBA",50,0)
 N IBXDATA,IBXSAVE
"RTN","IBJTBA",51,0)
 I $P($G(^DGCR(399,+IBIFN,0)),U,19)=2 D H1500 Q
"RTN","IBJTBA",52,0)
 D UB92
"RTN","IBJTBA",53,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBJTBA",54,0)
 Q
"RTN","IBJTBA",55,0)
 ;
"RTN","IBJTBA",56,0)
H1500 ; block 24
"RTN","IBJTBA",57,0)
 N X,IBI,IBJ,IBLN,IBX,IBSTR,IBLKLN,IBPFORM,IBLIN
"RTN","IBJTBA",58,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBJTBA",59,0)
 S IBLIN=$$BOX24D^IBCEF11("",1),IBLKLN=0,IBLN=1
"RTN","IBJTBA",60,0)
 Q:'$G(IBIFN)  K ^TMP("IBXDISP",$J)
"RTN","IBJTBA",61,0)
 S IBPFORM=$S($P($G(^IBE(353,2,2)),U,8):$P(^(2),U,8),1:2),IBLN=1
"RTN","IBJTBA",62,0)
 S IBX=$$BILLN^IBCEFG0(1,"1^99",IBLIN,+IBIFN,IBPFORM)
"RTN","IBJTBA",63,0)
 S IBI=$O(^TMP("IBXDISP",$J,""),-1)
"RTN","IBJTBA",64,0)
 S IBJ="" F  S IBJ=$O(^TMP("IBXDISP",$J,IBI,IBJ),-1) Q:$S('IBJ:1,1:$TR($G(^(IBJ))," ")'="")  K ^TMP("IBXDISP",$J,IBI,IBJ)
"RTN","IBJTBA",65,0)
 I '$O(^TMP("IBXDISP",$J,IBI,0)) S VALMSG="No charges or procedures defined.",VALMQUIT="" G H1500Q
"RTN","IBJTBA",66,0)
 S IBI="" F  S IBI=$O(^TMP("IBXDISP",$J,IBI)) Q:'IBI  S IBJ=0 F  S IBJ=$O(^TMP("IBXDISP",$J,IBI,IBJ)) Q:'IBJ  D
"RTN","IBJTBA",67,0)
 . S IBX=$G(^TMP("IBXDISP",$J,IBI,IBJ)),IBLN=$$SET(IBX,IBLN)
"RTN","IBJTBA",68,0)
 K ^TMP("IBXDISP",$J)
"RTN","IBJTBA",69,0)
 D COB,MRA
"RTN","IBJTBA",70,0)
 I $$ISRX^IBCEF1(IBIFN) D RX
"RTN","IBJTBA",71,0)
 I $$ISPROS^IBCEF1(IBIFN) D PROS
"RTN","IBJTBA",72,0)
 S VALMCNT=IBLN-1
"RTN","IBJTBA",73,0)
H1500Q Q
"RTN","IBJTBA",74,0)
 ;
"RTN","IBJTBA",75,0)
UB92 ;form locator 42-49,   IBIFN required
"RTN","IBJTBA",76,0)
 N X,Y,DIR,IBI,IBJ,IBX,IBLN,IBLC,IBLIN,IBPFORM,IBSTATE,IBCBILL,IBINPAT,IBQ,Z,Z0
"RTN","IBJTBA",77,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBJTBA",78,0)
 S IBLIN=$$RCBOX^IBCEF11()
"RTN","IBJTBA",79,0)
 S IBQ=0,IBLC=9 Q:'$G(IBIFN)  K ^TMP("IBXDISP",$J)
"RTN","IBJTBA",80,0)
 S IBPFORM=$S($P($G(^IBE(353,3,2)),U,8):$P(^(2),U,8),1:3)
"RTN","IBJTBA",81,0)
 S IBX=$$BILLN^IBCEFG0(1,"1^99",IBLIN,+IBIFN,IBPFORM)
"RTN","IBJTBA",82,0)
 I '$O(^TMP("IBXDISP",$J,0)) S VALMSG="No charges defined.",VALMQUIT="" G UB92Q
"RTN","IBJTBA",83,0)
 S Z="" F  S Z=$O(^TMP("IBXDISP",$J,1,Z),-1) Q:Z=""  S Z0=$G(^(Z)) Q:$TR(Z0," ")'=""  K ^(Z)
"RTN","IBJTBA",84,0)
 S:Z ^TMP("IBXDISP",$J,1,Z+1)=" "
"RTN","IBJTBA",85,0)
 S IBINPAT=$$INPAT^IBCEF(IBIFN,1)
"RTN","IBJTBA",86,0)
 S IBSTATE=$G(^DGCR(399,IBIFN,"U")),IBCBILL=$G(^DGCR(399,IBIFN,0))
"RTN","IBJTBA",87,0)
 ;
"RTN","IBJTBA",88,0)
 S (VALMCNT,IBLN)=1,IBLKLN=0
"RTN","IBJTBA",89,0)
 I +IBINPAT D  S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",90,0)
 . S IBX=$P(IBSTATE,U,15),IBSTR=+IBX_" DAY"_$S(IBX'=1:"S",1:"")_" INPATIENT CARE"
"RTN","IBJTBA",91,0)
 . S IBX=$$LOS^IBCU64(+IBSTATE,+$P(IBSTATE,U,2),+$P(IBCBILL,U,6)),IBX=IBX-$$LOS1^IBCU64(IBIFN) I IBX>0 S IBSTR=IBSTR_$J("Pass Days: "_IBX,55)
"RTN","IBJTBA",92,0)
 ;
"RTN","IBJTBA",93,0)
 S IBI="" F  S IBI=$O(^TMP("IBXDISP",$J,IBI)) Q:'IBI  S IBJ=0 F  S IBJ=$O(^TMP("IBXDISP",$J,IBI,IBJ)) Q:'IBJ  D
"RTN","IBJTBA",94,0)
 . S IBX=$G(^TMP("IBXDISP",$J,IBI,IBJ)),IBLN=$$SET(IBX,IBLN)
"RTN","IBJTBA",95,0)
 . I $E(IBX,1,3)="001" D COB
"RTN","IBJTBA",96,0)
 ;
"RTN","IBJTBA",97,0)
 K ^TMP("IBXDISP",$J)
"RTN","IBJTBA",98,0)
 ;
"RTN","IBJTBA",99,0)
 D MRA
"RTN","IBJTBA",100,0)
 S VALMCNT=IBLN-1
"RTN","IBJTBA",101,0)
UB92Q Q
"RTN","IBJTBA",102,0)
 ;
"RTN","IBJTBA",103,0)
SETLN(STR,IBX,COL,WD) ;
"RTN","IBJTBA",104,0)
 S IBX=$$SETSTR^VALM1(STR,IBX,COL,WD)
"RTN","IBJTBA",105,0)
 Q IBX
"RTN","IBJTBA",106,0)
 ;
"RTN","IBJTBA",107,0)
SET(STR,LN) ; set up TMP array with screen data (allows 2 blank lines, if not at end of array)
"RTN","IBJTBA",108,0)
 N IBX,IBI I STR?80" " S IBLKLN=IBLKLN+1 G SETQ
"RTN","IBJTBA",109,0)
 F IBI=1:1:IBLKLN D SET^VALM10(LN," ") S LN=LN+1 Q:IBI>1
"RTN","IBJTBA",110,0)
 D SET^VALM10(LN,STR)
"RTN","IBJTBA",111,0)
 S LN=LN+1,IBLKLN=0
"RTN","IBJTBA",112,0)
SETQ Q LN
"RTN","IBJTBA",113,0)
 ;
"RTN","IBJTBA",114,0)
COB ; if there is an offset or a secondary/tertiary payer add it to the display, with ins co, and prior bill #
"RTN","IBJTBA",115,0)
 ; IBIFN and IBLN must exist upon entry, IBLN is updated with new line count
"RTN","IBJTBA",116,0)
 N IBM,IBM1,IBI,IBJ,IBD,IBSTR,IBCU2,IBCU1 Q:'$G(IBIFN)
"RTN","IBJTBA",117,0)
 S IBM=$G(^DGCR(399,IBIFN,"M")),IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBJTBA",118,0)
 S IBCU2=$G(^DGCR(399,IBIFN,"U2")),IBCU1=$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBJTBA",119,0)
 S IBJ=$P($G(^DGCR(399,IBIFN,0)),U,21),IBJ=$S(IBJ="P":3,IBJ="S":3,IBJ="T":3,1:0),IBSTR=""
"RTN","IBJTBA",120,0)
 I +$P(IBM,U,2)!(+$P(IBM,U,3)) F IBI=1:1:IBJ I +$P(IBM,U,IBI) D  S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",121,0)
 . I IBSTR="" S IBLN=$$SET("",IBLN)
"RTN","IBJTBA",122,0)
 . S IBD=$S(IBI=1:"Primary",IBI=2:"Secondary",1:"Tertiary")_": " S IBSTR=$$SETLN(IBD,"",5,11)
"RTN","IBJTBA",123,0)
 . S IBD=$P($G(^DIC(36,+$P(IBM,U,IBI),0)),U,1) S IBSTR=$$SETLN(IBD,IBSTR,17,25)
"RTN","IBJTBA",124,0)
 . I $P(IBCU2,U,(IBI+3))'="" S IBD=$J(+$P(IBCU2,U,(IBI+3)),9,2) S IBSTR=$$SETLN(IBD,IBSTR,44,11)
"RTN","IBJTBA",125,0)
 . I $P(IBM1,U,(IBI+4))'="" S IBD=$$BN1^PRCAFN(+$P(IBM1,U,(IBI+4))) S IBSTR=$$SETLN(IBD,IBSTR,60,11)
"RTN","IBJTBA",126,0)
 I +$P(IBCU1,U,2) D  S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",127,0)
 . I IBSTR="" S IBLN=$$SET("",IBLN)
"RTN","IBJTBA",128,0)
 . S IBD="Offset: " S IBSTR=$$SETLN(IBD,"",5,11)
"RTN","IBJTBA",129,0)
 . S IBD=$P(IBCU1,U,3) S IBSTR=$$SETLN(IBD,IBSTR,17,25)
"RTN","IBJTBA",130,0)
 . S IBD=$J($P(IBCU1,U,2),9,2) S IBSTR=$$SETLN(IBD,IBSTR,44,11)
"RTN","IBJTBA",131,0)
 . S IBD=$P(IBCU1,U,1)-$P(IBCU1,U,2),IBD="Billed: "_$J(IBD,0,2) S IBSTR=$$SETLN(IBD,IBSTR,60,17)
"RTN","IBJTBA",132,0)
 Q
"RTN","IBJTBA",133,0)
 ;
"RTN","IBJTBA",134,0)
RX ;RX refill info for HCFA 1500 TPJI display
"RTN","IBJTBA",135,0)
 N Z,Z0,Z1,IBSPC,IBD,IBI,IBSTR,IBARRAY,IBRXX
"RTN","IBJTBA",136,0)
 S IBLN=IBLN+1
"RTN","IBJTBA",137,0)
 S IBSPC=$J("",5)
"RTN","IBJTBA",138,0)
 D SET^IBCSC5A(IBIFN,.IBARRAY)
"RTN","IBJTBA",139,0)
 I $D(IBARRAY) D
"RTN","IBJTBA",140,0)
 . S (Z,Z0)=0 F  S Z0=$O(IBARRAY(Z0)) Q:Z0=""  S Z1=0 F  S Z1=$O(IBARRAY(Z0,Z1)) Q:'Z1  S Z=Z+1 S IBXDATA(Z)=$$DAT1^IBOUTL(Z1)_U_$G(IBARRAY(Z0,Z1))
"RTN","IBJTBA",141,0)
 S IBD=$$SET("",IBLN)
"RTN","IBJTBA",142,0)
 S IBD="PRESCRIPTION REFILLS: (For TPJI display only)"
"RTN","IBJTBA",143,0)
 S IBSTR=$$SETLN(IBD,"",1,79),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",144,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:IBI=""  D
"RTN","IBJTBA",145,0)
 . S IBRXX=$G(IBXDATA(IBI))
"RTN","IBJTBA",146,0)
 . S IBD=$J($P(IBRXX,U,7),9,2)_IBSPC_$P(IBRXX,U)_IBSPC_$P($G(^PSDRUG($P(IBRXX,U,3),0)),U)
"RTN","IBJTBA",147,0)
 . S IBSTR=$$SETLN(IBD,"",1,79),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",148,0)
 . S IBD="QTY: "_$P(IBRXX,U,5)_" for "_$P(IBRXX,U,4)_" days supply "_"NDC# "_$P(IBRXX,U,6)
"RTN","IBJTBA",149,0)
 . S IBSTR=$$SETLN(IBD,"",23,79),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",150,0)
 Q
"RTN","IBJTBA",151,0)
 ;
"RTN","IBJTBA",152,0)
PROS ;prosthetic info for HCFA 1500 TPJI display
"RTN","IBJTBA",153,0)
 N Z,Z0,Z1,IBARRAY,IBSPC,IBD,IBI,IBSTR
"RTN","IBJTBA",154,0)
 S IBSPC=$J("",10),IBLN=IBLN+1
"RTN","IBJTBA",155,0)
 D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBJTBA",156,0)
 I $D(IBARRAY) D
"RTN","IBJTBA",157,0)
 . S (Z,Z0)=0 F  S Z0=$O(IBARRAY(Z0)) Q:Z0=""  S Z1=0 F  S Z1=$O(IBARRAY(Z0,Z1)) Q:'Z1  S Z=Z+1,IBXDATA(Z)=$$DAT1^IBOUTL(Z0)_U_$E($P($$PIN^IBCSC5B(Z1),U,2),1,39)
"RTN","IBJTBA",158,0)
 S IBD=$$SET("",IBLN)
"RTN","IBJTBA",159,0)
 S IBD="PROSTHETIC REFILLS: (For TPJI display only)"
"RTN","IBJTBA",160,0)
 S IBSTR=$$SETLN(IBD,"",1,79),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",161,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:IBI=""  D
"RTN","IBJTBA",162,0)
 . S IBD=$P(IBXDATA(IBI),U)_IBSPC_$P(IBXDATA(IBI),U,2)
"RTN","IBJTBA",163,0)
 . S IBSTR=$$SETLN(IBD,"",1,79),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",164,0)
 Q
"RTN","IBJTBA",165,0)
 ;
"RTN","IBJTBA1")
0^10^B18556768
"RTN","IBJTBA1",1,0)
IBJTBA1 ;ALB/TMK - TPJI BILL CHARGE INFO SCREEN ;01-MAR-1995
"RTN","IBJTBA1",2,0)
 ;;2.0;INTEGRATED BILLING;**135**;21-MAR-94
"RTN","IBJTBA1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJTBA1",4,0)
 ;
"RTN","IBJTBA1",5,0)
SHEOB(IBI,IBSPL,IBEOBCT,IBCTOF) ; Format EOB called from IBJTBA
"RTN","IBJTBA1",6,0)
 ; IBSPL = 0 if EOB represents one bill's payment
"RTN","IBJTBA1",7,0)
 ;       =  1 if AR had to split the EOB between multiple bills
"RTN","IBJTBA1",8,0)
 ; Assumes IBLN is defined and returns it with line count
"RTN","IBJTBA1",9,0)
 ; Assumes IBEOBDET may be defined as a flag to control detail level of print
"RTN","IBJTBA1",10,0)
 N X,IBPT,IBCN,IBM,IBM1,IBM2,IBTY,IBPY,IBPR,IBST,IBSTR,IBCA,IBTS,IBTA,Z,Z0
"RTN","IBJTBA1",11,0)
 S X="0.00"
"RTN","IBJTBA1",12,0)
 S IBM=$G(^IBM(361.1,IBI,0))
"RTN","IBJTBA1",13,0)
 S IBTY=$P(IBM,U,4),IBTY=$S(IBTY:"MEDICARE MRA",1:"NORMAL EOB")
"RTN","IBJTBA1",14,0)
 I IBTY'["MRA",IBSPL S IBTY="A/R SPLIT/COVERS MORE THAN 1 BILL"
"RTN","IBJTBA1",15,0)
 I $P(IBM,U,13)>1,$P(IBM,U,13)<5 S IBTY=IBTY_" ("_$$EXTERNAL^DILFD(361.1,.13,,$P(IBM,U,13))_")"
"RTN","IBJTBA1",16,0)
 S IBCN=$P(IBM,U,14),IBPY=$P(IBM,U,2)
"RTN","IBJTBA1",17,0)
 S:IBPY IBPY=$P($G(^DIC(36,IBPY,0)),U)
"RTN","IBJTBA1",18,0)
 S IBPR=$$FMTE^XLFDT($P(IBM,U,6)),IBST=$P(IBM,U,16)
"RTN","IBJTBA1",19,0)
 S IBST=$$EXPAND^IBTRE(361.1,.16,+IBST)
"RTN","IBJTBA1",20,0)
 S IBM1=$G(^IBM(361.1,IBI,1))
"RTN","IBJTBA1",21,0)
 S IBPT=$P(IBM1,U,2),IBCA=$P(IBM1,U)
"RTN","IBJTBA1",22,0)
 S IBM2=$G(^IBM(361.1,IBI,2)),IBTA=$P(IBM2,U,3)
"RTN","IBJTBA1",23,0)
 S IBTS=$P(IBM2,U,4)
"RTN","IBJTBA1",24,0)
 D MRA2
"RTN","IBJTBA1",25,0)
 I '$G(IBEOBDET),IBSPL D
"RTN","IBJTBA1",26,0)
 . S IBSTR=$$SETLN^IBJTBA("    **A/R CORRECTED PAYMENT DATA:","",1,50),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",27,0)
 . S IBSTR=$$SETLN^IBJTBA("     TOTAL AMT PD: "_$J(+$P($G(^IBM(361.1,IBI,1)),U,1),"",2),"",1,75),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",28,0)
 . S Z=0 F  S Z=$O(^IBM(361.1,IBI,8,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","IBJTBA1",29,0)
 .. S IBSTR=$$SETLN^IBJTBA($E($J("",8)_$S($P(Z0,U,3):$$BN1^PRCAFN(+$P(Z0,U,3)),1:"[suspense]"_$P(Z0,U))_$J("",25),1,25)_"  "_$J(+$P(Z0,U,2),"",2),"",1,75),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",30,0)
 I $G(IBEOBDET) D
"RTN","IBJTBA1",31,0)
 . N VALMCNT
"RTN","IBJTBA1",32,0)
 . K ^TMP("PRCA_EOB",$J)
"RTN","IBJTBA1",33,0)
 . D GETEOB^IBCECSA6(IBI,1)
"RTN","IBJTBA1",34,0)
 . S Z=0 F  S Z=$O(^TMP("PRCA_EOB",$J,IBI,Z)) Q:'Z  S IBSTR=$$SETLN^IBJTBA($G(^TMP("PRCA_EOB",$J,IBI,Z)),"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",35,0)
 . K ^TMP("PRCA_EOB",$J)
"RTN","IBJTBA1",36,0)
 . I $O(^IBM(361.1,IBI,"ERR",0)) D
"RTN","IBJTBA1",37,0)
 .. S IBSTR=$$SETLN^IBJTBA(" ** MESSAGE STORAGE ERRORS  **","",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",38,0)
 .. S Z=0 F  S Z=$O(^IBM(361.1,IBI,"ERR",Z)) Q:'Z  S IBSTR=$$SETLN^IBJTBA($G(^(Z,0)),"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",39,0)
 Q
"RTN","IBJTBA1",40,0)
 ;
"RTN","IBJTBA1",41,0)
MRA2 ;
"RTN","IBJTBA1",42,0)
 N IBD
"RTN","IBJTBA1",43,0)
 S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",44,0)
 S IBD="EOB/MRA Information"_$S($D(IBCTOF):" ("_$G(IBEOBCT)_" OF "_IBCTOF_")",1:"")
"RTN","IBJTBA1",45,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,"",30,45),$E(IBSTR,1,2)=">>",IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",46,0)
 S IBD="EOB Type: "_IBTY,IBSTR=$$SETLN^IBJTBA(IBD,"",4,60)
"RTN","IBJTBA1",47,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",48,0)
 S IBD="ICN: "_IBCN,IBSTR=$$SETLN^IBJTBA(IBD,"",9,38)
"RTN","IBJTBA1",49,0)
 S IBD="Patient Resp Amount: "_$S('IBPT:X,1:IBPT)
"RTN","IBJTBA1",50,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,44,35)
"RTN","IBJTBA1",51,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",52,0)
 S IBD="Payer Name: "_IBPY,IBSTR=$$SETLN^IBJTBA(IBD,"",2,38)
"RTN","IBJTBA1",53,0)
 S IBD="Total Allowed Amount: "_$S('IBTA:X,1:IBTA)
"RTN","IBJTBA1",54,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,43,36)
"RTN","IBJTBA1",55,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",56,0)
 S IBD="EOB Date: "_IBPR,IBSTR=$$SETLN^IBJTBA(IBD,"",4,38)
"RTN","IBJTBA1",57,0)
 S IBD="Total Submitted Charges: "_$S('IBTS:X,1:IBTS)
"RTN","IBJTBA1",58,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,40,39)
"RTN","IBJTBA1",59,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",60,0)
 S IBSTR=""
"RTN","IBJTBA1",61,0)
 I IBTY["MRA" S IBD="MRA Review Status: "_IBST,IBSTR=$$SETLN^IBJTBA(IBD,"",2,38)
"RTN","IBJTBA1",62,0)
 S IBD=$S('$G(IBSPL):"  ",1:"**")_"Reported Payment Amt: "_$S('IBCA:$J(X,"",2),1:$J(+IBCA,"",2))
"RTN","IBJTBA1",63,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,41,37)
"RTN","IBJTBA1",64,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",65,0)
 I IBTY["MRA" D
"RTN","IBJTBA1",66,0)
 . S IBD=$TR($J("",35)," ","-")_"Review"_$TR($J("",38)," ","-")
"RTN","IBJTBA1",67,0)
 . S IBSTR=$$SETLN^IBJTBA(IBD,"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",68,0)
 . S (IBST,IBCN)=0 F  S IBCN=$O(^IBM(361.1,IBI,21,IBCN)) Q:'IBCN  S X=$G(^(IBCN,0)) D
"RTN","IBJTBA1",69,0)
 .. S IBST=0
"RTN","IBJTBA1",70,0)
 .. S IBD="Review Date: "_$$DAT1^IBOUTL($P(X,U))
"RTN","IBJTBA1",71,0)
 .. S IBSTR=$$SETLN^IBJTBA(IBD,"",1,30)
"RTN","IBJTBA1",72,0)
 .. S IBD="Reviewed By: "_$P($G(^VA(200,+$P(X,U,2),0)),U)
"RTN","IBJTBA1",73,0)
 .. S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,40,39)
"RTN","IBJTBA1",74,0)
 .. S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",75,0)
 .. S IBD=0 F  S IBD=$O(^IBM(361.1,IBI,21,IBCN,1,IBD)) Q:'IBD  S IBSTR=$$SETLN^IBJTBA($S('IBST:"Comments: ",1:"")_$G(^(IBD,0)),"",1,$S('IBST:69,1:79)),IBST=1,IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",76,0)
 . I 'IBST D
"RTN","IBJTBA1",77,0)
 .. S IBSTR=$$SETLN^IBJTBA("None","",1,10)
"RTN","IBJTBA1",78,0)
 .. S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",79,0)
 Q
"RTN","IBJTBA1",80,0)
 ;
"RTN","IBY135PR")
0^^B933652
"RTN","IBY135PR",1,0)
IBY135PR ;ALB/TMK - IB*2*135 PRE-INSTALL ;06-OCT-03
"RTN","IBY135PR",2,0)
 ;;2.0;INTEGRATED BILLING;**135**;21-MAR-94
"RTN","IBY135PR",3,0)
 ;
"RTN","IBY135PR",4,0)
 N DA,DIK,X,Y
"RTN","IBY135PR",5,0)
 D BMES^XPDUTL("Pre-Installation Updates")
"RTN","IBY135PR",6,0)
 D BMES^XPDUTL("Delete PROCEDURE field in file #361.1, subfield 15 that changes from pointer to free text")
"RTN","IBY135PR",7,0)
 I $D(^DD(361.115,.04,0)) S DA(1)=361.115,DA=.04,DIK="^DD(361.115," D ^DIK
"RTN","IBY135PR",8,0)
 ;
"RTN","IBY135PR",9,0)
 D BMES^XPDUTL("Pre-install complete")
"RTN","IBY135PR",10,0)
 Q
"RTN","IBY135PR",11,0)
 ;
"UP",361.1,361.111,-2)
361.1^10
"UP",361.1,361.111,-1)
361.11^1
"UP",361.1,361.111,0)
361.111
"UP",361.1,361.115,-1)
361.1^15
"UP",361.1,361.115,0)
361.115
"UP",361.1,361.11511,-3)
361.1^15
"UP",361.1,361.11511,-2)
361.115^1
"UP",361.1,361.11511,-1)
361.1151^1
"UP",361.1,361.11511,0)
361.11511
"UP",361.1,361.1152,-2)
361.1^15
"UP",361.1,361.1152,-1)
361.115^2
"UP",361.1,361.1152,0)
361.1152
"UP",361.1,361.12,-1)
361.1^ERR
"UP",361.1,361.12,0)
361.12
"UP",361.1,361.18,-1)
361.1^8
"UP",361.1,361.18,0)
361.18
"VER")
8.0^22
"^DD",361.1,361.1,.04,0)
EOB TYPE^SO^0:NORMAL EOB;1:MEDICARE MRA;^0;4^Q
"^DD",361.1,361.1,.04,2)
S Y(0)=Y S Y=$S(Y=0:"NORMAL EOB",1:"MRA") N Z S Z=$O(^(8,0)) I $O(^IBM(361.1,D0,8,Z),-1)'=Z S Y=Y_" (SPLIT TO MORE CLAIMS)"
"^DD",361.1,361.1,.04,2.1)
S Y=$S(Y=0:"NORMAL EOB",1:"MRA") N Z S Z=$O(^(8,0)) I $O(^IBM(361.1,D0,8,Z),-1)'=Z S Y=Y_" (SPLIT TO MORE CLAIMS)"
"^DD",361.1,361.1,.04,3)
Enter 1 if an MRA from MEDICARE
"^DD",361.1,361.1,.04,21,0)
^.001^2^2^3001130^^
"^DD",361.1,361.1,.04,21,1,0)
This field indicates whether this EOB contains actual payment data or is
"^DD",361.1,361.1,.04,21,2,0)
simply an MRA received from MEDICARE.
"^DD",361.1,361.1,.04,"DT")
3030318
"^DD",361.1,361.1,.05,0)
ENTRY DATE/TIME^RD^^0;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",361.1,361.1,.05,3)
Enter the date and time this entry is added to the file
"^DD",361.1,361.1,.05,21,0)
^.001^2^2^3030625^^^^
"^DD",361.1,361.1,.05,21,1,0)
This is the date and time that this EOB entry was added to the Vista file.
"^DD",361.1,361.1,.05,21,2,0)
This is not mapped from the 835 transmission.
"^DD",361.1,361.1,.05,"DT")
3030113
"^DD",361.1,361.1,.06,0)
EOB PAID DATE^D^^0;6^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",361.1,361.1,.06,1,0)
^.1^^0
"^DD",361.1,361.1,.06,3)
Enter the date the payer paid the claim
"^DD",361.1,361.1,.06,21,0)
^.001^2^2^3030625^^^^
"^DD",361.1,361.1,.06,21,1,0)
This is the efffective date of money movement (paid date) from payer, as
"^DD",361.1,361.1,.06,21,2,0)
indicated in the 835 transmission.
"^DD",361.1,361.1,.06,"DT")
3030630
"^DD",361.1,361.1,.07,0)
TRACE NUMBER^F^^0;7^K:$L(X)>20!($L(X)<1) X
"^DD",361.1,361.1,.07,1,0)
^.1^^0
"^DD",361.1,361.1,.07,3)
Answer must be 1-20 characters in length.
"^DD",361.1,361.1,.07,21,0)
^^1^1^2981007^
"^DD",361.1,361.1,.07,21,1,0)
This is the TRACE NUMBER from the 835 transaction for this EOB
"^DD",361.1,361.1,.07,23,0)
^^1^1^2990112^^
"^DD",361.1,361.1,.07,23,1,0)
This is the data from the 835 data field (TRN-02)
"^DD",361.1,361.1,.07,"DT")
3030113
"^DD",361.1,361.1,.21,0)
CLAIM STATUS CODE^F^^0;21^K:$L(X)>2!($L(X)<1) X
"^DD",361.1,361.1,.21,3)
Answer must be 1-2 characters in length.
"^DD",361.1,361.1,.21,21,0)
^^1^1^3030325^
"^DD",361.1,361.1,.21,21,1,0)
This is the actual X12 claim status code that was received for this EOB.
"^DD",361.1,361.1,.21,"DT")
3030325
"^DD",361.1,361.1,7.01,0)
TRANSFERRED IN^F^^7;1^K:$L(X)>64!($L(X)<1) X
"^DD",361.1,361.1,7.01,3)
Answer must be 1-64 characters in length.
"^DD",361.1,361.1,7.01,21,0)
^.001^1^1^3030313^^
"^DD",361.1,361.1,7.01,21,1,0)
This is the site that this EOB was transferred into this site from.
"^DD",361.1,361.1,7.01,"DT")
3030113
"^DD",361.1,361.1,8,0)
AR AMOUNTS DISTRIBUTION^361.18A^^8;0
"^DD",361.1,361.1,8,21,0)
^^2^2^3030313^
"^DD",361.1,361.1,8,21,1,0)
This is the list of bills that AR has determined will apply to this ERA 
"^DD",361.1,361.1,8,21,2,0)
along with the amount that was paid/retracted.
"^DD",361.1,361.1,20,0)
MESSAGE STORAGE ERRORS^361.12^^ERR;0
"^DD",361.1,361.1,25.01,0)
PAYER CONTACT NAME^F^^25;1^K:$L(X)>30!($L(X)<1) X
"^DD",361.1,361.1,25.01,3)
Answer must be 1-30 characters in length.
"^DD",361.1,361.1,25.01,21,0)
^^2^2^3030324^
"^DD",361.1,361.1,25.01,21,1,0)
This is the name of the contact the payer has provided for questions
"^DD",361.1,361.1,25.01,21,2,0)
concerning this particular claim's adjudication.
"^DD",361.1,361.1,25.01,"DT")
3030324
"^DD",361.1,361.1,25.02,0)
CONTACT NUMBER 1^F^^25;2^K:$L(X)>30!($L(X)<1) X
"^DD",361.1,361.1,25.02,3)
Answer must be 1-30 characters in length.
"^DD",361.1,361.1,25.02,21,0)
^^1^1^3030324^
"^DD",361.1,361.1,25.02,21,1,0)
This is a phone #/telephone extension or email address for the contact.
"^DD",361.1,361.1,25.02,"DT")
3030324
"^DD",361.1,361.1,25.03,0)
CONTACT TYPE 1^S^EM:E-MAIL;FX:FAX;TE:TELEPHONE;EX:TELEPHONE EXTENSION;^25;3^Q
"^DD",361.1,361.1,25.03,3)
Enter the code for the type of contact information.
"^DD",361.1,361.1,25.03,21,0)
^.001^2^2^3030324^^
"^DD",361.1,361.1,25.03,21,1,0)
This is the code that describes the type of contact information provided in
"^DD",361.1,361.1,25.03,21,2,0)
the CONTACT NUMBER 1 field.
"^DD",361.1,361.1,25.03,"DT")
3030324
"^DD",361.1,361.1,25.04,0)
CONTACT NUMBER 2^F^^25;4^K:$L(X)>30!($L(X)<1) X
"^DD",361.1,361.1,25.04,3)
Answer must be 1-30 characters in length.
"^DD",361.1,361.1,25.04,21,0)
^^1^1^3030324^
"^DD",361.1,361.1,25.04,21,1,0)
This is a phone #/telephone extension or email address for the contact.
"^DD",361.1,361.1,25.04,"DT")
3030324
"^DD",361.1,361.1,25.05,0)
CONTACT TYPE 2^S^EM:E-MAIL;FX:FAX;TE:TELEPHONE;EX:TELEPHONE EXTENSION;^25;5^Q
"^DD",361.1,361.1,25.05,3)
Enter the code for the type of contact information.
"^DD",361.1,361.1,25.05,21,0)
^^2^2^3030324^
"^DD",361.1,361.1,25.05,21,1,0)
This is the code that describes the type of contact information provided in
"^DD",361.1,361.1,25.05,21,2,0)
the CONTACT NUMBER 2 field.
"^DD",361.1,361.1,25.05,"DT")
3030324
"^DD",361.1,361.1,25.06,0)
CONTACT NUMBER 3^F^^25;6^K:$L(X)>30!($L(X)<1) X
"^DD",361.1,361.1,25.06,3)
Answer must be 1-30 characters in length.
"^DD",361.1,361.1,25.06,21,0)
^^1^1^3030324^
"^DD",361.1,361.1,25.06,21,1,0)
This is a phone #/telephone extension or email address for the contact.
"^DD",361.1,361.1,25.06,"DT")
3030324
"^DD",361.1,361.1,25.07,0)
CONTACT TYPE 3^S^EM:E-MAIL;FX:FAX;TE:TELEPHONE;EX:TELEPHONE EXTENSION;^25;7^Q
"^DD",361.1,361.1,25.07,3)
Enter the code for the type of contact information.
"^DD",361.1,361.1,25.07,21,0)
^^2^2^3030324^
"^DD",361.1,361.1,25.07,21,1,0)
This is the code that describes the type of contact information provided in
"^DD",361.1,361.1,25.07,21,2,0)
the CONTACT NUMBER 3 field.
"^DD",361.1,361.1,25.07,"DT")
3030324
"^DD",361.1,361.1,100.05,0)
MESSAGE CHECKSUM^F^^100;5^K:$L(X)>10!($L(X)<1) X
"^DD",361.1,361.1,100.05,3)
Answer must be 1-10 characters in length.
"^DD",361.1,361.1,100.05,21,0)
^.001^7^7^3030618^^^^
"^DD",361.1,361.1,100.05,21,1,0)
This field contains the calculated checksum value of the X12
"^DD",361.1,361.1,100.05,21,2,0)
835 transaction data from the payer.  It is a unique number
"^DD",361.1,361.1,100.05,21,3,0)
which is mathematically generated based on the actual data in
"^DD",361.1,361.1,100.05,21,4,0)
the 835 flat file received from Austin.
"^DD",361.1,361.1,100.05,21,5,0)
 
"^DD",361.1,361.1,100.05,21,6,0)
This number will be used to identify and eliminate duplicate
"^DD",361.1,361.1,100.05,21,7,0)
835 transmissions into VistA.
"^DD",361.1,361.1,100.05,23,0)
^.001^1^1^3030618^^^^
"^DD",361.1,361.1,100.05,23,1,0)
This field should not be set manually.
"^DD",361.1,361.1,100.05,"DT")
3030508
"^DD",361.1,361.111,.02,0)
AMOUNT^NJ16,2^^0;2^S:X["$" X=$P(X,"$",2) K:X'?."-".N.1".".2N!(X>9999999999999)!(X<-9999999999999) X
"^DD",361.1,361.111,.02,3)
Type a Dollar Amount between -9999999999999 and 9999999999999, 2 Decimal Digits
"^DD",361.1,361.111,.02,21,0)
^^1^1^2990202^^^^
"^DD",361.1,361.111,.02,21,1,0)
This is the adjusted amount for the reason code
"^DD",361.1,361.111,.02,23,0)
^^2^2^2990202^^^
"^DD",361.1,361.111,.02,23,1,0)
This data is found in the electronic eob (835) in the data elements
"^DD",361.1,361.111,.02,23,2,0)
CAS-03,6,9,12,15,18
"^DD",361.1,361.111,.02,"DT")
3030411
"^DD",361.1,361.115,.03,0)
AMOUNT PAID^NJ13,2^^0;3^S:X["$" X=$P(X,"$",2) K:X'?."-".N.1".".2N!(X>9999999999)!(X<-9999999999)!(X?.E1"."3.N) X
"^DD",361.1,361.115,.03,3)
Type a Dollar amount between -9999999999 and 9999999999, 2 Decimal Digits
"^DD",361.1,361.115,.03,21,0)
^^1^1^2990201^^^
"^DD",361.1,361.115,.03,21,1,0)
This is the amount that was actually paid on this procedure.
"^DD",361.1,361.115,.03,23,0)
^^1^1^2990201^^^
"^DD",361.1,361.115,.03,23,1,0)
This data is found in the electronic 835 at the SVC03 data element.
"^DD",361.1,361.115,.03,"DT")
3030912
"^DD",361.1,361.115,.04,0)
PROCEDURE^F^^0;4^K:$L(X)>15!($L(X)<3) X
"^DD",361.1,361.115,.04,3)
Answer must be 3-15 characters in length.
"^DD",361.1,361.115,.04,21,0)
^.001^1^1^3031006^^^^
"^DD",361.1,361.115,.04,21,1,0)
This is the procedure for which payment was considered.
"^DD",361.1,361.115,.04,23,0)
^.001^1^1^3031006^^^^
"^DD",361.1,361.115,.04,23,1,0)
This data is found in the electronic 835 at the SVC01-02 data element.
"^DD",361.1,361.115,.04,"DT")
3031006
"^DD",361.1,361.115,.16,0)
SERVICE DATE FROM^D^^0;16^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",361.1,361.115,.16,3)
Enter the date the service was performed
"^DD",361.1,361.115,.16,21,0)
^.001^1^1^3030324^^^^
"^DD",361.1,361.115,.16,21,1,0)
This is the first date of service for the claim.
"^DD",361.1,361.115,.16,"DT")
3030324
"^DD",361.1,361.115,.17,0)
SERVICE DATE TO^D^^0;17^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",361.1,361.115,.17,3)
Enter the date the service was performed
"^DD",361.1,361.115,.17,21,0)
^^1^1^3030324^
"^DD",361.1,361.115,.17,21,1,0)
This is the last date of service for the claim.
"^DD",361.1,361.115,.17,"DT")
3030324
"^DD",361.1,361.115,.18,0)
PROCEDURE TYPE^F^^0;18^K:$L(X)>2!($L(X)<1) X
"^DD",361.1,361.115,.18,3)
Answer must be 1-2 characters in length.
"^DD",361.1,361.115,.18,21,0)
^^2^2^3030324^
"^DD",361.1,361.115,.18,21,1,0)
This is the code representing the type of procedure as reported in this
"^DD",361.1,361.115,.18,21,2,0)
record.
"^DD",361.1,361.115,.18,"DT")
3030325
"^DD",361.1,361.115,2,0)
PAID MODIFIERS^361.1152A^^2;0
"^DD",361.1,361.115,3.01,0)
LINE ITEM REMARK CODE^F^^3;1^K:$L(X)>10!($L(X)<1) X
"^DD",361.1,361.115,3.01,3)
Answer must be 1-10 characters in length.
"^DD",361.1,361.115,3.01,21,0)
^^1^1^3030324^
"^DD",361.1,361.115,3.01,21,1,0)
This is the remark code provided by MEDICARE for this line item.
"^DD",361.1,361.115,3.01,"DT")
3030324
"^DD",361.1,361.115,3.02,0)
LINE ITEM REMARK CODE TEXT^F^^3;2^K:$L(X)>190!($L(X)<1) X
"^DD",361.1,361.115,3.02,3)
Answer must be 1-190 characters in length.
"^DD",361.1,361.115,3.02,21,0)
^^1^1^3030324^
"^DD",361.1,361.115,3.02,21,1,0)
This is the free text explanation of the remark code in this record.
"^DD",361.1,361.115,3.02,"DT")
3030324
"^DD",361.1,361.11511,.02,0)
AMOUNT^NJ13,2^^0;2^S:X["$" X=$P(X,"$",2) K:X'?."-".N.1".".2N!(X>9999999999)!(X<-9999999999) X
"^DD",361.1,361.11511,.02,3)
Type a Dollar Amount between -9999999999 and 9999999999, 2 Decimal Digits
"^DD",361.1,361.11511,.02,21,0)
^^1^1^2990202^^
"^DD",361.1,361.11511,.02,21,1,0)
This is the adjusted amount for the reason code
"^DD",361.1,361.11511,.02,23,0)
^^2^2^2990202^^
"^DD",361.1,361.11511,.02,23,1,0)
This data is found in the electronic eob (835) in the data elements
"^DD",361.1,361.11511,.02,23,2,0)
CAS-03,6,9,12,15,18
"^DD",361.1,361.11511,.02,"DT")
3030411
"^DD",361.1,361.1152,0)
PAID MODIFIERS SUB-FIELD^^.01^1
"^DD",361.1,361.1152,0,"NM","PAID MODIFIERS")

"^DD",361.1,361.1152,.01,0)
PAID MODIFIERS^MF^^0;1^K:$L(X)>2!($L(X)<2) X
"^DD",361.1,361.1152,.01,1,0)
^.1
"^DD",361.1,361.1152,.01,1,1,0)
361.1152^B
"^DD",361.1,361.1152,.01,1,1,1)
S ^IBM(361.1,DA(2),15,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",361.1,361.1152,.01,1,1,2)
K ^IBM(361.1,DA(2),15,DA(1),2,"B",$E(X,1,30),DA)
"^DD",361.1,361.1152,.01,3)
Answer must be 2 characters in length.
"^DD",361.1,361.1152,.01,21,0)
^.001^1^1^3030618^^^
"^DD",361.1,361.1152,.01,21,1,0)
This field contains the procedure modifiers used to pay on this line item.
"^DD",361.1,361.1152,.01,"DT")
3030618
"^DD",361.1,361.12,0)
MESSAGE STORAGE ERRORS SUB-FIELD^^.01^1
"^DD",361.1,361.12,0,"DT")
3030626
"^DD",361.1,361.12,0,"NM","MESSAGE STORAGE ERRORS")

"^DD",361.1,361.12,0,"UP")
361.1
"^DD",361.1,361.12,.01,0)
MESSAGE STORAGE ERRORS^WL^^0;1^Q
"^DD",361.1,361.12,.01,3)
Enter the text of the error message
"^DD",361.1,361.12,.01,21,0)
^.001^2^2^3030626^^^
"^DD",361.1,361.12,.01,21,1,0)
This is the text of all the errors encountered for this EOB when attempting
"^DD",361.1,361.12,.01,21,2,0)
to load it from the EDI MESSAGES file.
"^DD",361.1,361.12,.01,"DT")
3030626
"^DD",361.1,361.18,0)
AR AMOUNTS DISTRIBUTION SUB-FIELD^^.03^3
"^DD",361.1,361.18,0,"DT")
3030318
"^DD",361.1,361.18,0,"IX","AC",361.18,.03)

"^DD",361.1,361.18,0,"IX","B",361.18,.01)

"^DD",361.1,361.18,0,"NM","AR AMOUNTS DISTRIBUTION")

"^DD",361.1,361.18,0,"UP")
361.1
"^DD",361.1,361.18,.01,0)
BILL #^MRF^^0;1^K:$L(X)>15!($L(X)<1) X
"^DD",361.1,361.18,.01,1,0)
^.1^^-1
"^DD",361.1,361.18,.01,1,1,0)
361.18^B
"^DD",361.1,361.18,.01,1,1,1)
S ^IBM(361.1,DA(1),8,"B",$E(X,1,30),DA)=""
"^DD",361.1,361.18,.01,1,1,2)
K ^IBM(361.1,DA(1),8,"B",$E(X,1,30),DA)
"^DD",361.1,361.18,.01,1,2,0)
361.1^C
"^DD",361.1,361.18,.01,1,2,1)
S ^IBM(361.1,"C",$E(X,1,30),DA(1),DA)=""
"^DD",361.1,361.18,.01,1,2,2)
K ^IBM(361.1,"C",$E(X,1,30),DA(1),DA)
"^DD",361.1,361.18,.01,1,2,3)
Do not delete
"^DD",361.1,361.18,.01,1,2,"DT")
3030313
"^DD",361.1,361.18,.01,3)
Answer must be 1-15 characters in length.
"^DD",361.1,361.18,.01,21,0)
^^2^2^3030318^
"^DD",361.1,361.18,.01,21,1,0)
This is the free text bill # that AR has determined this ERA has
"^DD",361.1,361.18,.01,21,2,0)
referenced.
"^DD",361.1,361.18,.01,"DT")
3030318
"^DD",361.1,361.18,.02,0)
AMOUNT^NJ16,2^^0;2^S:X["$" X=$P(X,"$",2) K:X'?."-".N.1".".2N!(X>9999999999999)!(X<-9999999999999) X
"^DD",361.1,361.18,.02,3)
Type a Dollar Amount between -9999999999999 and 9999999999999, 2 Decimal Digits
"^DD",361.1,361.18,.02,21,0)
^^2^2^3030313^
"^DD",361.1,361.18,.02,21,1,0)
This is the amount of money from this ERA that AR has determined applies
"^DD",361.1,361.18,.02,21,2,0)
to the corresponding bill.
"^DD",361.1,361.18,.02,"DT")
3030313
"^DD",361.1,361.18,.03,0)
BILL REFERENCE^P399'^DGCR(399,^0;3^Q
"^DD",361.1,361.18,.03,1,0)
^.1
"^DD",361.1,361.18,.03,1,1,0)
361.1^C
"^DD",361.1,361.18,.03,1,1,1)
S ^IBM(361.1,"C",$E(X,1,30),DA(1),DA)=""
"^DD",361.1,361.18,.03,1,1,2)
K ^IBM(361.1,"C",$E(X,1,30),DA(1),DA)
"^DD",361.1,361.18,.03,1,1,3)
Do not delete
"^DD",361.1,361.18,.03,1,1,"DT")
3030318
"^DD",361.1,361.18,.03,1,2,0)
361.18^AC
"^DD",361.1,361.18,.03,1,2,1)
S ^IBM(361.1,DA(1),8,"AC",$E(X,1,30),DA)=""
"^DD",361.1,361.18,.03,1,2,2)
K ^IBM(361.1,DA(1),8,"AC",$E(X,1,30),DA)
"^DD",361.1,361.18,.03,1,2,3)
Do not delete
"^DD",361.1,361.18,.03,1,2,"DT")
3030318
"^DD",361.1,361.18,.03,3)
Enter the IB bill reference for this distribution amount
"^DD",361.1,361.18,.03,21,0)
^^3^3^3030318^
"^DD",361.1,361.18,.03,21,1,0)
This is the actual pointer to file 399 for the bill referenced in this 
"^DD",361.1,361.18,.03,21,2,0)
distribution record.  If this data is missing, the amount was posted to 
"^DD",361.1,361.18,.03,21,3,0)
suspense.
"^DD",361.1,361.18,.03,"DT")
3030318
"^DD",364.7,364.7,0)
FIELD^^3^12
"^DD",364.7,364.7,0,"DDA")
N
"^DD",364.7,364.7,0,"DT")
2960710
"^DD",364.7,364.7,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBA(364.5,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(364.5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.7,364.7,0,"IX","AINS",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINS1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINTYP1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP2",364.7,.06)

"^DD",364.7,364.7,0,"IX","ATYPE",364.7,.01)

"^DD",364.7,364.7,0,"IX","ATYPE1",364.7,.06)

"^DD",364.7,364.7,0,"IX","B",364.7,.01)

"^DD",364.7,364.7,0,"IX","C",364.7,.03)

"^DD",364.7,364.7,0,"NM","IB FORM FIELD CONTENT")

"^DD",364.7,364.7,0,"VRPK")
IB
"^DD",364.7,364.7,.01,0)
FORM FIELD REFERENCE^RP364.6'^IBA(364.6,^0;1^Q
"^DD",364.7,364.7,.01,1,0)
^.1
"^DD",364.7,364.7,.01,1,1,0)
364.7^B
"^DD",364.7,364.7,.01,1,1,1)
S ^IBA(364.7,"B",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.01,1,1,2)
K ^IBA(364.7,"B",$E(X,1,30),DA)
"^DD",364.7,364.7,.01,1,2,0)
364.7^ATYPE^MUMPS
"^DD",364.7,364.7,.01,1,2,1)
N Z1,Z0 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3),'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,2,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,2,"%D",0)
^^1^1^2980104^^^^
"^DD",364.7,364.7,.01,1,2,"%D",1,0)
Xref by form and bill type
"^DD",364.7,364.7,.01,1,2,"DT")
2960117
"^DD",364.7,364.7,.01,1,3,0)
364.7^AINTYP^MUMPS
"^DD",364.7,364.7,.01,1,3,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) S ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)=""
"^DD",364.7,364.7,.01,1,3,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)
"^DD",364.7,364.7,.01,1,3,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,3,"%D",0)
^^1^1^2971231^^^
"^DD",364.7,364.7,.01,1,3,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.01,1,3,"DT")
2960117
"^DD",364.7,364.7,.01,1,4,0)
364.7^AINS^MUMPS
"^DD",364.7,364.7,.01,1,4,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3),$P(Z0,U,6)="" S ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,4,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,4,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,4,"%D",0)
^^1^1^2971231^^
"^DD",364.7,364.7,.01,1,4,"%D",1,0)
Xref by form field and insurance company
"^DD",364.7,364.7,.01,1,4,"DT")
2960118
"^DD",364.7,364.7,.01,3)
Enter the billing form that this field is associated with
"^DD",364.7,364.7,.01,21,0)
^^2^2^2951207^^^^
"^DD",364.7,364.7,.01,21,1,0)
This is a pointer to the billing form field that this field is associated
"^DD",364.7,364.7,.01,21,2,0)
with.
"^DD",364.7,364.7,.01,"DT")
3000428
"^DD",364.7,364.7,.02,0)
SECURITY LEVEL^S^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.7,364.7,.02,1,0)
^.1^^0
"^DD",364.7,364.7,.02,3)
Enter N for nationally released fields (no edit) or L for locally added fields.
"^DD",364.7,364.7,.02,21,0)
^^3^3^2951219^^^
"^DD",364.7,364.7,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  For
"^DD",364.7,364.7,.02,21,2,0)
NATIONAL (N) field, no local editing is allowed.  If LOCAL (L) field is
"^DD",364.7,364.7,.02,21,3,0)
created, editing is allowed.
"^DD",364.7,364.7,.02,"DT")
3000428
"^DD",364.7,364.7,.03,0)
DATA ELEMENT^P364.5'^IBA(364.5,^0;3^Q
"^DD",364.7,364.7,.03,1,0)
^.1
"^DD",364.7,364.7,.03,1,1,0)
364.7^C
"^DD",364.7,364.7,.03,1,1,1)
S ^IBA(364.7,"C",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.03,1,1,2)
K ^IBA(364.7,"C",$E(X,1,30),DA)
"^DD",364.7,364.7,.03,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.03,1,1,"%D",0)
^^1^1^2960702^
"^DD",364.7,364.7,.03,1,1,"%D",1,0)
Xref by DATA ELEMENT NAME
"^DD",364.7,364.7,.03,1,1,"DT")
2960702
"^DD",364.7,364.7,.03,3)
Enter the data element that will define this form field.  If used on a screen, it must be a fileman type.
"^DD",364.7,364.7,.03,21,0)
^^1^1^2960627^^^^
"^DD",364.7,364.7,.03,21,1,0)
This identifies the data element that be extracted for this entry.
"^DD",364.7,364.7,.03,23,0)
^^4^4^2960627^^^^
"^DD",364.7,364.7,.03,23,1,0)
This is the data element that will be allowed to be displayed/edited on a
"^DD",364.7,364.7,.03,23,2,0)
screen, extracted for a transmit, or printed on a printed form.  If used on
"^DD",364.7,364.7,.03,23,3,0)
a screen, the data element must be a fileman type and a local field (>10000
"^DD",364.7,364.7,.03,23,4,0)
for ifn and on a node >10000) to be editable.
"^DD",364.7,364.7,.03,"DT")
2960702
"^DD",364.7,364.7,.04,0)
SCREEN PROMPT^FX^^0;4^K:$L(X)>70!($L(X)<1) X I $D(X),$P($G(^IBE(353,+$G(^IBA(364.6,+$G(^IBA(364.7,DA,0)),0)),2)),U,2)'="S" K X
"^DD",364.7,364.7,.04,.1)
 
"^DD",364.7,364.7,.04,1,0)
^.1^^0
"^DD",364.7,364.7,.04,3)
Answer must be 1-70 characters in length.
"^DD",364.7,364.7,.04,21,0)
3^^2^2^2960321^^^^
"^DD",364.7,364.7,.04,21,1,0)
This is used only by screen-type forms to place a prompt on the screen
"^DD",364.7,364.7,.04,21,2,0)
for a particular field.
"^DD",364.7,364.7,.04,23,0)
^^3^3^2960321^^^^
"^DD",364.7,364.7,.04,23,1,0)
This is the prompt that will preceed the data element defined for this
"^DD",364.7,364.7,.04,23,2,0)
entry.  If no data element, this prompt will display.  This field is only
"^DD",364.7,364.7,.04,23,3,0)
used for screen-type forms.
"^DD",364.7,364.7,.04,"DT")
2960321
"^DD",364.7,364.7,.05,0)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"^DD",364.7,364.7,.05,1,0)
^.1
"^DD",364.7,364.7,.05,1,1,0)
364.7^AINS1^MUMPS
"^DD",364.7,364.7,.05,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,$P(Z0,U,6)="" S ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.05,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA) I Z2'="",$D(^IBA(364.7,"AINTYP",Z1,X,Z2,DA)) S ^IBA(364.7,"ATYPE",Z1,Z2,DA)=""
"^DD",364.7,364.7,.05,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,1,"%D",0)
^^1^1^2960118^
"^DD",364.7,364.7,.05,1,1,"%D",1,0)
Xref by form field and insurance company.
"^DD",364.7,364.7,.05,1,1,"DT")
2960118
"^DD",364.7,364.7,.05,1,2,0)
364.7^AINTYP1^MUMPS
"^DD",364.7,364.7,.05,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) I Z1,Z2'="" S ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)="" K ^IBA(364.7,"ATYPE",Z1,Z2,DA),^IBA(364.7,"AINS",Z1,X,DA)
"^DD",364.7,364.7,.05,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K:Z1&(Z2'="") ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)
"^DD",364.7,364.7,.05,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.05,1,2,"%D",1,0)
Xref by insurance company and bill type
"^DD",364.7,364.7,.05,1,2,"DT")
2960117
"^DD",364.7,364.7,.05,3)
Enter the name of the insurance company that this field is associated with.
"^DD",364.7,364.7,.05,21,0)
^^2^2^2951207^
"^DD",364.7,364.7,.05,21,1,0)
This is the insurance company who has a need for other than the standard
"^DD",364.7,364.7,.05,21,2,0)
data in this field.
"^DD",364.7,364.7,.05,"DT")
3000428
"^DD",364.7,364.7,.06,0)
BILL TYPE^S^I:INPATIENT;O:OUTPATIENT;^0;6^Q
"^DD",364.7,364.7,.06,1,0)
^.1
"^DD",364.7,364.7,.06,1,1,0)
364.7^ATYPE1^MUMPS
"^DD",364.7,364.7,.06,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1 K ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA) I Z2,$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) S ^IBA(364.7,"AINS",Z1,Z2,DA)=""
"^DD",364.7,364.7,.06,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,1,1,"%D",1,0)
Xref by form and bill type.
"^DD",364.7,364.7,.06,1,1,"DT")
2960117
"^DD",364.7,364.7,.06,1,2,0)
364.7^AINTYP2^MUMPS
"^DD",364.7,364.7,.06,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1,Z2 K:'$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) ^IBA(364.7,"AINS",Z1,Z2,DA) S ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) K:Z1&Z2 ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)
"^DD",364.7,364.7,.06,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.06,1,2,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.06,1,2,"DT")
2960117
"^DD",364.7,364.7,.06,3)
Enter the type of the bill.
"^DD",364.7,364.7,.06,21,0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,21,1,0)
This is the type of bill that requires this field.
"^DD",364.7,364.7,.06,"DT")
3000428
"^DD",364.7,364.7,.07,0)
PAD CHARACTER^S^ZL:ZERO PAD ON LEFT;ZR:ZERO PAD ON RIGHT;SL:SPACE PAD ON LEFT;SR:SPACE PAD ON RIGHT;N:NO PAD REQUIRED;^0;7^Q
"^DD",364.7,364.7,.07,3)
Enter the code that corresponds to the format and pad character to use for the data output in this field.
"^DD",364.7,364.7,.07,21,0)
^.001^3^3^3001212^^^^
"^DD",364.7,364.7,.07,21,1,0)
If present, this defines the character to be used to pad the DATA
"^DD",364.7,364.7,.07,21,2,0)
ELEMENT to its desired length and the orientation of the padding characters
"^DD",364.7,364.7,.07,21,3,0)
to the left or right of the data.  The default is space pad to the right.
"^DD",364.7,364.7,.07,"DT")
2960126
"^DD",364.7,364.7,.08,0)
REQUIRED^S^0:NO;1:YES;^0;8^Q
"^DD",364.7,364.7,.08,3)
Enter 1 (YES) if this data element is on a local screen 9 form and the data is required for the bill to be authorized.
"^DD",364.7,364.7,.08,21,0)
^.001^4^4^3001030^^
"^DD",364.7,364.7,.08,21,1,0)
This field controls the required/not required status of a data element
"^DD",364.7,364.7,.08,21,2,0)
on a local screen 9 form.  If this field is 1 (YES), this data element
"^DD",364.7,364.7,.08,21,3,0)
is always required to have data (not null) in order for a bill to be
"^DD",364.7,364.7,.08,21,4,0)
authorized.
"^DD",364.7,364.7,.08,"DT")
2951207
"^DD",364.7,364.7,.09,0)
EDIT STATUS^S^E:EDITABLE;D:DISPLAY ONLY;^0;9^Q
"^DD",364.7,364.7,.09,3)
Enter 'E' to enable editing for this field, 'D' for a display only field.
"^DD",364.7,364.7,.09,21,0)
^^2^2^2960320^
"^DD",364.7,364.7,.09,21,1,0)
This field is used to control whether or not a data element on a screen is
"^DD",364.7,364.7,.09,21,2,0)
editable or for display-only purposes.
"^DD",364.7,364.7,.09,"DT")
2960320
"^DD",364.7,364.7,.1,0)
EDIT GROUP NUMBER^NJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",364.7,364.7,.1,3)
 Enter the edit group # that this field will be included in.  Valid #'s are 1-99.
"^DD",364.7,364.7,.1,21,0)
^^6^6^2960321^^
"^DD",364.7,364.7,.1,21,1,0)
This field contains the # of the edit group that the screen data element
"^DD",364.7,364.7,.1,21,2,0)
will be included with.  When this group # is selected on an edit screen,
"^DD",364.7,364.7,.1,21,3,0)
all data elements assigned to this group # on this screen will be presented
"^DD",364.7,364.7,.1,21,4,0)
for editing.  If no # is entered here, this field will not be available for
"^DD",364.7,364.7,.1,21,5,0)
editing.  This field will only apply to screen-type forms' editable data
"^DD",364.7,364.7,.1,21,6,0)
element descriptions.
"^DD",364.7,364.7,.1,"DT")
2960321
"^DD",364.7,364.7,1,0)
FORMAT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.7,364.7,1,3)
This is Standard MUMPS code.
"^DD",364.7,364.7,1,9)
@
"^DD",364.7,364.7,1,21,0)
^^8^8^2951207^
"^DD",364.7,364.7,1,21,1,0)
This is the code that will be xecuted to format the 'raw' data element
"^DD",364.7,364.7,1,21,2,0)
value that is returned from the execution of the DATA ELEMENT's definition.
"^DD",364.7,364.7,1,21,3,0)
This code can assume the variable/array IBXDATA is available as input and
"^DD",364.7,364.7,1,21,4,0)
should set this variable/array as its output.  Standard calls for data
"^DD",364.7,364.7,1,21,5,0)
formatting have been provided.  The variables IBXPG, IBXLN, IBXCOL are the
"^DD",364.7,364.7,1,21,6,0)
only IBX* variables that should be changed in this routine.  These represent
"^DD",364.7,364.7,1,21,7,0)
the page, line, column as the first 3 levels of subscript for the output
"^DD",364.7,364.7,1,21,8,0)
array.
"^DD",364.7,364.7,1,"DT")
2951207
"^DD",364.7,364.7,3,0)
FORMAT CODE DESCRIPTION^364.73^^3;0
"^DD",364.7,364.7,3,21,0)
^.001^1^1^3001030^^
"^DD",364.7,364.7,3,21,1,0)
This field describes the function of the format code entered.
"^DD",364.7,364.7,3,"DT")
2960710
"^DD",364.7,364.73,0)
FORMAT CODE DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.7,364.73,0,"DT")
2960710
"^DD",364.7,364.73,0,"NM","FORMAT CODE DESCRIPTION")

"^DD",364.7,364.73,0,"UP")
364.7
"^DD",364.7,364.73,.01,0)
FORMAT CODE DESCRIPTION^W^^0;1^Q
"^DD",364.7,364.73,.01,3)
Enter a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,21,0)
^.001^1^1^3001030^^^^
"^DD",364.7,364.73,.01,21,1,0)
This is a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,"DT")
2960710
"^DD",399.3,399.3,.11,0)
BILL RESULTING FROM^*P430.6'^PRCA(430.6,^0;11^S DIC("S")="N Z0 S Z0=$P($G(^DGCR(399.3,DA,0)),U,6) Q:+Z0'>0  S Z0=$P(^PRCA(430.2,Z0,0),U,6) I ($P(^PRCA(430.6,Y,0),U,4)[Z0)!($P(^(0),U,4)[""X"")" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399.3,399.3,.11,3)
Enter the default that will be used for the BILL RESULTING FROM field when auto-audit is invoked
"^DD",399.3,399.3,.11,12)
Type for the entry must be compatible with Rate Type/AR Category's Type
"^DD",399.3,399.3,.11,12.1)
S DIC("S")="N Z0 S Z0=$P($G(^DGCR(399.3,DA,0)),U,6) Q:+Z0'>0  S Z0=$P(^PRCA(430.2,Z0,0),U,6) I ($P(^PRCA(430.6,Y,0),U,4)[Z0)!($P(^(0),U,4)[""X"")"
"^DD",399.3,399.3,.11,21,0)
^.001^3^3^3021217^^
"^DD",399.3,399.3,.11,21,1,0)
This is the default value for the BILL RESULTING FROM (#4.5) field in the
"^DD",399.3,399.3,.11,21,2,0)
ACCOUNTS RECEIVABLE file (#430) that will be used during auto-audit
"^DD",399.3,399.3,.11,21,3,0)
for all bills with this rate type.
"^DD",399.3,399.3,.11,"DT")
3021217
"^DIC",364.7,364.7,0)
IB FORM FIELD CONTENT^364.7P
"^DIC",364.7,364.7,0,"GL")
^IBA(364.7,
"^DIC",364.7,364.7,"%D",0)
^^9^9^2970606^^^^
"^DIC",364.7,364.7,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.7,364.7,"%D",2,0)
 
"^DIC",364.7,364.7,"%D",3,0)
This is the file that contains the specific fields to be used to produce
"^DIC",364.7,364.7,"%D",4,0)
the associated form or screen.  If there is no insurance company or bill
"^DIC",364.7,364.7,"%D",5,0)
type specified for an entry, this is assumed to be the default definition
"^DIC",364.7,364.7,"%D",6,0)
of the field.
"^DIC",364.7,364.7,"%D",7,0)
 
"^DIC",364.7,364.7,"%D",8,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.7,364.7,"%D",9,0)
NATIONAL should not be deleted or edited.
"^DIC",364.7,"B","IB FORM FIELD CONTENT",364.7)

**END**
**END**
