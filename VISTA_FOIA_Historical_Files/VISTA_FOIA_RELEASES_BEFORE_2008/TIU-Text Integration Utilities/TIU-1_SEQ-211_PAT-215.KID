Released TIU*1*215 SEQ #211
Extracted from mail message
**KIDS**:TIU*1.0*215^

**INSTALL NAME**
TIU*1.0*215
"BLD",6902,0)
TIU*1.0*215^TEXT INTEGRATION UTILITIES^0^3070613^y
"BLD",6902,1,0)
^^10^10^3070613^
"BLD",6902,1,1,0)
When using Copy to create a new document, the print name from the 
"BLD",6902,1,2,0)
origingal document is the print name for the newly created document.  
"BLD",6902,1,3,0)
Since the print name is what is displayed in CPRS this causes a problem.
"BLD",6902,1,4,0)
 
"BLD",6902,1,5,0)
 
"BLD",6902,1,6,0)
Prohibit Edit, Delete, Amend of TIU Surgery documents in TIU LM or CPRS.
"BLD",6902,1,7,0)
Change error message when trying to delete Interdisciplinary Parent Note 
"BLD",6902,1,8,0)
that has kids.
"BLD",6902,1,9,0)
 
"BLD",6902,1,10,0)
Prohibit Edit or Send Back of uncosinged documents.
"BLD",6902,4,0)
^9.64PA^^
"BLD",6902,6)
3^
"BLD",6902,6.3)
6
"BLD",6902,"ABPKG")
n
"BLD",6902,"KRN",0)
^9.67PA^8989.52^19
"BLD",6902,"KRN",.4,0)
.4
"BLD",6902,"KRN",.401,0)
.401
"BLD",6902,"KRN",.402,0)
.402
"BLD",6902,"KRN",.403,0)
.403
"BLD",6902,"KRN",.5,0)
.5
"BLD",6902,"KRN",.84,0)
.84
"BLD",6902,"KRN",3.6,0)
3.6
"BLD",6902,"KRN",3.8,0)
3.8
"BLD",6902,"KRN",9.2,0)
9.2
"BLD",6902,"KRN",9.8,0)
9.8
"BLD",6902,"KRN",9.8,"NM",0)
^9.68A^7^4
"BLD",6902,"KRN",9.8,"NM",4,0)
TIUFLF4^^0^B17239031
"BLD",6902,"KRN",9.8,"NM",5,0)
TIULP^^0^B49749884
"BLD",6902,"KRN",9.8,"NM",6,0)
TIULP2^^0^B5528800
"BLD",6902,"KRN",9.8,"NM",7,0)
TIUSRVA^^0^B22465828
"BLD",6902,"KRN",9.8,"NM","B","TIUFLF4",4)

"BLD",6902,"KRN",9.8,"NM","B","TIULP",5)

"BLD",6902,"KRN",9.8,"NM","B","TIULP2",6)

"BLD",6902,"KRN",9.8,"NM","B","TIUSRVA",7)

"BLD",6902,"KRN",19,0)
19
"BLD",6902,"KRN",19.1,0)
19.1
"BLD",6902,"KRN",101,0)
101
"BLD",6902,"KRN",409.61,0)
409.61
"BLD",6902,"KRN",771,0)
771
"BLD",6902,"KRN",870,0)
870
"BLD",6902,"KRN",8989.51,0)
8989.51
"BLD",6902,"KRN",8989.52,0)
8989.52
"BLD",6902,"KRN",8994,0)
8994
"BLD",6902,"KRN","B",.4,.4)

"BLD",6902,"KRN","B",.401,.401)

"BLD",6902,"KRN","B",.402,.402)

"BLD",6902,"KRN","B",.403,.403)

"BLD",6902,"KRN","B",.5,.5)

"BLD",6902,"KRN","B",.84,.84)

"BLD",6902,"KRN","B",3.6,3.6)

"BLD",6902,"KRN","B",3.8,3.8)

"BLD",6902,"KRN","B",9.2,9.2)

"BLD",6902,"KRN","B",9.8,9.8)

"BLD",6902,"KRN","B",19,19)

"BLD",6902,"KRN","B",19.1,19.1)

"BLD",6902,"KRN","B",101,101)

"BLD",6902,"KRN","B",409.61,409.61)

"BLD",6902,"KRN","B",771,771)

"BLD",6902,"KRN","B",870,870)

"BLD",6902,"KRN","B",8989.51,8989.51)

"BLD",6902,"KRN","B",8989.52,8989.52)

"BLD",6902,"KRN","B",8994,8994)

"BLD",6902,"QUES",0)
^9.62^^
"BLD",6902,"REQB",0)
^9.611^6^3
"BLD",6902,"REQB",1,0)
TIU*1.0*43^1
"BLD",6902,"REQB",5,0)
TIU*1.0*217^1
"BLD",6902,"REQB",6,0)
TIU*1.0*157^1
"BLD",6902,"REQB","B","TIU*1.0*157",6)

"BLD",6902,"REQB","B","TIU*1.0*217",5)

"BLD",6902,"REQB","B","TIU*1.0*43",1)

"MBREQ")
0
"PKG",470,-1)
1^1
"PKG",470,0)
TEXT INTEGRATION UTILITIES^TIU^Text Integration Utilities 
"PKG",470,20,0)
^9.402P^^
"PKG",470,22,0)
^9.49I^1^1
"PKG",470,22,1,0)
1.0^3010801^3010806^66481
"PKG",470,22,1,"PAH",1,0)
215^3070613^101036
"PKG",470,22,1,"PAH",1,1,0)
^^10^10^3070613
"PKG",470,22,1,"PAH",1,1,1,0)
When using Copy to create a new document, the print name from the 
"PKG",470,22,1,"PAH",1,1,2,0)
origingal document is the print name for the newly created document.  
"PKG",470,22,1,"PAH",1,1,3,0)
Since the print name is what is displayed in CPRS this causes a problem.
"PKG",470,22,1,"PAH",1,1,4,0)
 
"PKG",470,22,1,"PAH",1,1,5,0)
 
"PKG",470,22,1,"PAH",1,1,6,0)
Prohibit Edit, Delete, Amend of TIU Surgery documents in TIU LM or CPRS.
"PKG",470,22,1,"PAH",1,1,7,0)
Change error message when trying to delete Interdisciplinary Parent Note 
"PKG",470,22,1,"PAH",1,1,8,0)
that has kids.
"PKG",470,22,1,"PAH",1,1,9,0)
 
"PKG",470,22,1,"PAH",1,1,10,0)
Prohibit Edit or Send Back of uncosinged documents.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","TIUFLF4")
0^4^B17239031^B16683756
"RTN","TIUFLF4",1,0)
TIUFLF4 ; SLC/MAM - Lib; ANCESTOR(FILEDA,NODE0,ANCESTOR,DOCFLAG), ORPHAN(FILEDA,NODE0,ANCESTOR), STUFFLDS(FILEDA,PFILEDA), ADDTEN(PFILEDA,FILEDA,NODE0,TENDA),NUMITEMS(FILEDA), MISSITEM(FILEDA) ;4/23/97  11:02
"RTN","TIUFLF4",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**11,43,215**;Jun 20, 1997;Build 6
"RTN","TIUFLF4",3,0)
 ;
"RTN","TIUFLF4",4,0)
NUMITEMS(FILEDA) ; Function returns Number of Items of FILEDA; Possibly 0
"RTN","TIUFLF4",5,0)
 N ITEMSANS,TIUFI
"RTN","TIUFLF4",6,0)
 S (ITEMSANS,TIUFI)=0
"RTN","TIUFLF4",7,0)
 F  S TIUFI=$O(^TIU(8925.1,FILEDA,10,TIUFI)) G:'TIUFI NUMIX S ITEMSANS=ITEMSANS+1
"RTN","TIUFLF4",8,0)
NUMIX Q ITEMSANS
"RTN","TIUFLF4",9,0)
 ;
"RTN","TIUFLF4",10,0)
MISSITEM(FILEDA) ; Function Checks FILEDA Items (doesn't check subitems etc.) for existence only. Returns IFN of first missing item it finds, else 0.
"RTN","TIUFLF4",11,0)
 ; Requires FILEDA.
"RTN","TIUFLF4",12,0)
 N TIUI,IFILEDA,MISSANS
"RTN","TIUFLF4",13,0)
 S TIUI=0,MISSANS=0
"RTN","TIUFLF4",14,0)
 F  S TIUI=$O(^TIU(8925.1,FILEDA,10,TIUI)) Q:'TIUI!MISSANS  D
"RTN","TIUFLF4",15,0)
 . S IFILEDA=+^TIU(8925.1,FILEDA,10,TIUI,0)
"RTN","TIUFLF4",16,0)
 . I '$D(^TIU(8925.1,IFILEDA,0)) S MISSANS=IFILEDA
"RTN","TIUFLF4",17,0)
 Q MISSANS
"RTN","TIUFLF4",18,0)
 ;
"RTN","TIUFLF4",19,0)
ANCESTOR(FILEDA,NODE0,ANCESTOR,DOCFLAG) ; Module traces ancestors of FILEDA,
"RTN","TIUFLF4",20,0)
 ;creates array ANCESTOR,
"RTN","TIUFLF4",21,0)
 ; where ANCESTOR(0)=FILEDA,
"RTN","TIUFLF4",22,0)
 ; where ANCESTOR(1)=Parent IFN of FILEDA,
"RTN","TIUFLF4",23,0)
 ;       ANCESTOR(2)=Parent IFN of ANCESTOR(1)
"RTN","TIUFLF4",24,0)
 ;       ...
"RTN","TIUFLF4",25,0)
 ;       ANCESTOR(last subscript)=IFN of oldest ancestor of FILEDA if
"RTN","TIUFLF4",26,0)
 ;                                '$G(DOCFLAG)
"RTN","TIUFLF4",27,0)
 ;                                           OR
"RTN","TIUFLF4",28,0)
 ;                                IFN of oldest ancestor of FILEDA NOT
"RTN","TIUFLF4",29,0)
 ;                                OF TYPE DC OR CL if $G(DOCFLAG)
"RTN","TIUFLF4",30,0)
 ; Don't stop the array for problems like bad type, no type, type object.
"RTN","TIUFLF4",31,0)
 ; If DOCFLAG, DON'T GET DC or CL; don't want array to mistakenly
"RTN","TIUFLF4",32,0)
 ;go all  the way to CLinical Documents.
"RTN","TIUFLF4",33,0)
 ; Array may not EXIST if DOCFLAG
"RTN","TIUFLF4",34,0)
 ; Requires FILEDA, NODE0= 0 Node;
"RTN","TIUFLF4",35,0)
 ; DOCFLAG optional, 0 or 1
"RTN","TIUFLF4",36,0)
 N TIUI,QUIT,ANODE0
"RTN","TIUFLF4",37,0)
 S DOCFLAG=+$G(DOCFLAG)
"RTN","TIUFLF4",38,0)
 I DOCFLAG,($P(NODE0,U,4)="DC")!($P(NODE0,U,4)="CL") G ANCEX
"RTN","TIUFLF4",39,0)
 S TIUI=0,ANCESTOR(0)=FILEDA
"RTN","TIUFLF4",40,0)
 F  D  Q:$G(QUIT)
"RTN","TIUFLF4",41,0)
 . S ANCESTOR(TIUI+1)=$O(^TIU(8925.1,"AD",ANCESTOR(TIUI),0))
"RTN","TIUFLF4",42,0)
 . I 'ANCESTOR(TIUI+1) K ANCESTOR(TIUI+1) S QUIT=1 Q
"RTN","TIUFLF4",43,0)
 . I DOCFLAG S ANODE0=^TIU(8925.1,ANCESTOR(TIUI+1),0) I ($P(ANODE0,U,4)="DC")!($P(ANODE0,U,4)="CL") K ANCESTOR(TIUI+1) S QUIT=1 Q
"RTN","TIUFLF4",44,0)
 . S TIUI=TIUI+1
"RTN","TIUFLF4",45,0)
ANCEX Q
"RTN","TIUFLF4",46,0)
 ;
"RTN","TIUFLF4",47,0)
ORPHAN(FILEDA,NODE0,ANCESTOR) ; Function traces ancestors of FILEDA,
"RTN","TIUFLF4",48,0)
 ; Returns NA if FILEDA is Object or Shared Component,
"RTN","TIUFLF4",49,0)
 ;         NO if NOT NA AND FILEDA belongs to Clinical Docmts Hierarchy,
"RTN","TIUFLF4",50,0)
 ;         YES if NOT NA, AND doesn't belong.
"RTN","TIUFLF4",51,0)
 ; Requires FILEDA, NODE0= 0 Node;
"RTN","TIUFLF4",52,0)
 N ORPHAN,LAST
"RTN","TIUFLF4",53,0)
 I $P(NODE0,U,4)="O" S ORPHAN="NA" G ORPHX
"RTN","TIUFLF4",54,0)
 I '$D(ANCESTOR) D ANCESTOR(FILEDA,NODE0,.ANCESTOR)
"RTN","TIUFLF4",55,0)
 I '$D(^TMP("TIUF",$J,"CLINDOC")) D  G:Y=-1 ORPHX
"RTN","TIUFLF4",56,0)
 . N DIC,X,Y
"RTN","TIUFLF4",57,0)
 . S DIC=8925.1,DIC(0)="X",X="CLINICAL DOCUMENTS" D ^DIC
"RTN","TIUFLF4",58,0)
 . I Y=-1 S ORPHAN="UNKNOWN" Q
"RTN","TIUFLF4",59,0)
 . S ^TMP("TIUF",$J,"CLINDOC")=+Y
"RTN","TIUFLF4",60,0)
 S LAST=$O(ANCESTOR(100),-1) I ANCESTOR(LAST)=^TMP("TIUF",$J,"CLINDOC") S ORPHAN="NO" G ORPHX
"RTN","TIUFLF4",61,0)
 S ORPHAN="YES"
"RTN","TIUFLF4",62,0)
ORPHX Q ORPHAN
"RTN","TIUFLF4",63,0)
 ;
"RTN","TIUFLF4",64,0)
STUFFLDS(FILEDA,PFILEDA) ; Stuff fields .03, .04 (tries), .07, [.1]
"RTN","TIUFLF4",65,0)
 ;for 8925.1 entry FILEDA.
"RTN","TIUFLF4",66,0)
 ; Requires FILEDA.
"RTN","TIUFLF4",67,0)
 ; Requires TIUFTLST as set in TYPELIST^TIUFLF7
"RTN","TIUFLF4",68,0)
 ; Requires PFILEDA if entry has prospective (as in Create and Add Item)
"RTN","TIUFLF4",69,0)
 ;or actual parent in order to try to stuff Type.
"RTN","TIUFLF4",70,0)
 ; Stuffs .03 Print Name = First 60 chars of .01 Name if not from copy
"RTN","TIUFLF4",71,0)
 ;action.
"RTN","TIUFLF4",72,0)
 ; Stuffs .04 Type if only 1 possible type in TIUFTLST (because of parent
"RTN","TIUFLF4",73,0)
 ;or duplicates or option e.g. create objects).
"RTN","TIUFLF4",74,0)
 ; Stuffs .07 Status = Inactive.
"RTN","TIUFLF4",75,0)
 ; If receives parent PFILEDA, parent is Shared, then
"RTN","TIUFLF4",76,0)
 ;stuffs .1 Shared = 1
"RTN","TIUFLF4",77,0)
 ; Should Lock FILEDA before calling STUFFLDS.
"RTN","TIUFLF4",78,0)
 N DIE,DA,DR,Y,NAME,PRINTDR,TYPEDR,STATUSDR,SHAREDR
"RTN","TIUFLF4",79,0)
 N NATL,NATLDR,NODE0,TYPE
"RTN","TIUFLF4",80,0)
 I '$G(PFILEDA) S PFILEDA=0
"RTN","TIUFLF4",81,0)
 S DIE=8925.1,DA=FILEDA
"RTN","TIUFLF4",82,0)
 S NODE0=^TIU(8925.1,FILEDA,0),NAME=$P(NODE0,U),PRINTDR=".03///^S X=NAME"
"RTN","TIUFLF4",83,0)
 I $L(TIUFTLST,U)=3 S TYPE=$P(TIUFTLST,U,2),TYPEDR=".04////^S X=TYPE"
"RTN","TIUFLF4",84,0)
 S STATUSDR=".07///INACTIVE"
"RTN","TIUFLF4",85,0)
 S SHAREDR=".1////1"
"RTN","TIUFLF4",86,0)
 I $G(XQORNOD(0))'["Copy" S DR=PRINTDR
"RTN","TIUFLF4",87,0)
 ;VMP/ELR P215. Copy print name menu not an object menu. DBIA 3356 FOR XQY0
"RTN","TIUFLF4",88,0)
 I $G(XQORNOD(0))["Copy",$G(XQY0)'["OBJECTS" S DR=PRINTDR
"RTN","TIUFLF4",89,0)
 I $G(TYPEDR) S DR=$S($D(DR):DR_";"_TYPEDR,1:TYPEDR)
"RTN","TIUFLF4",90,0)
 S DR=$S($D(DR):DR_";"_STATUSDR,1:STATUSDR)
"RTN","TIUFLF4",91,0)
 I $P($G(^TIU(8925.1,PFILEDA,0)),U,10) S DR=DR_";"_SHAREDR
"RTN","TIUFLF4",92,0)
 D ^DIE
"RTN","TIUFLF4",93,0)
STUFFX Q
"RTN","TIUFLF4",94,0)
 ;
"RTN","TIUFLF4",95,0)
ADDTEN(PFILEDA,FILEDA,NODE0,TENDA) ; Add item FILEDA to 10 NODE of
"RTN","TIUFLF4",96,0)
 ;File 8925.1 entry PFILEDA. Stuff item Menu Text
"RTN","TIUFLF4",97,0)
 ; Requires PFILEDA = 8925.1 IFN of parent of FILEDA.
"RTN","TIUFLF4",98,0)
 ; Requires FILEDA, Requires NODE0 = ^TIU(8925.1,FILEDA,0)
"RTN","TIUFLF4",99,0)
 ; Returns TENDA = 10 node DA of new item.
"RTN","TIUFLF4",100,0)
 ; Returns TENDA="" if fails lookup.  Screen on fld 10, subfld .01
"RTN","TIUFLF4",101,0)
 ;prevents lookup failure due to duplicate names by allowing only
"RTN","TIUFLF4",102,0)
 ;FILEDA to pass screen.
"RTN","TIUFLF4",103,0)
 ;Should Lock PFILEDA before calling ADDTEN.
"RTN","TIUFLF4",104,0)
 N X,Y,DIE,DR,NAME,DA,DIC,DLAYGO,TIUFISCR,MSG,DUPITEM
"RTN","TIUFLF4",105,0)
 S TENDA=""
"RTN","TIUFLF4",106,0)
 I ('$G(PFILEDA))!('$G(FILEDA)) G ADDTX
"RTN","TIUFLF4",107,0)
 S NAME=$P(NODE0,U)
"RTN","TIUFLF4",108,0)
 I '$D(TIUFTLST) S DUPITEM=0,DUPITEM=$$DUPITEM^TIUFLF7(NAME,PFILEDA) I DUPITEM S MSG=" Can't add Item; Parent already has Item with the same Name" W !!,MSG,! G ADDTX ; possibly needed when called from TIU rather than from TIUF.
"RTN","TIUFLF4",109,0)
 S X=""""_NAME_""""
"RTN","TIUFLF4",110,0)
 S DA(1)=PFILEDA,DLAYGO=8925.1
"RTN","TIUFLF4",111,0)
 S TIUFISCR=FILEDA ; activates screen on fld 10, Subfld .01 in DD
"RTN","TIUFLF4",112,0)
 S DIC="^TIU(8925.1,DA(1),10,",DIC(0)="L",DIC("P")=$P(^DD(8925.1,10,0),U,2)
"RTN","TIUFLF4",113,0)
 D ^DIC S TENDA=+Y I Y=-1 S TENDA="" G ADDTX
"RTN","TIUFLF4",114,0)
 K DIC
"RTN","TIUFLF4",115,0)
 S DA=TENDA,DA(1)=PFILEDA D MTXTCHEC^TIUFT1(.DA,FILEDA,1)
"RTN","TIUFLF4",116,0)
ADDTX Q
"RTN","TIULP")
0^5^B49749884^B47310116
"RTN","TIULP",1,0)
TIULP ; SLC/JER - Functions determining privilege ; 4/17/07
"RTN","TIULP",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**98,100,116,109,138,152,175,157,182,184,217,215**;Jun 20, 1997;Build 6
"RTN","TIULP",3,0)
CANDO(TIUDA,TIUACT,PERSON) ; Can PERSON perform action now
"RTN","TIULP",4,0)
 ; Receives: TIUDA=Record number in file 8925
"RTN","TIULP",5,0)
 ;           TIUACT=Name of user action in 8930.8 (USR ACTION)
"RTN","TIULP",6,0)
 ;           PERSON=New Person file IFN.
"RTN","TIULP",7,0)
 ;                  Assumed to be DUZ if not received.
"RTN","TIULP",8,0)
 ;                  New **100** ID param, backward compatible.
"RTN","TIULP",9,0)
 ;  Returns:   TIUY=1:yes,0:no_"^"_why not message
"RTN","TIULP",10,0)
 N TIUI,TIUTYP,TIUROLE,STATUS,TIUY,TIUATYP,MSG,WHO,MODIFIER,TIUD0,TIUACTW,TIUMSG
"RTN","TIULP",11,0)
 S TIUY=0 I '$G(PERSON) S PERSON=DUZ
"RTN","TIULP",12,0)
 S TIUD0=$G(^TIU(8925,+TIUDA,0)) I 'TIUD0 G CANDOX
"RTN","TIULP",13,0)
 I $$ISPRFDOC^TIUPRF(TIUDA),((TIUACT="ATTACH ID ENTRY")!(TIUACT="ATTACH TO ID NOTE")) S TIUY="0^Patient Record Flag notes may not be used as Interdisciplinary notes." G CANDOX
"RTN","TIULP",14,0)
 S TIUACTW=$G(TIUACT)
"RTN","TIULP",15,0)
 ;**100** was I +TIUACT'>0 S TIUACT etc.
"RTN","TIULP",16,0)
 S TIUACT=$$USREVNT(TIUACT) I +TIUACT'>0 G CANDOX
"RTN","TIULP",17,0)
 ; -- Historical Procedures - Prohibit actions detailed in
"RTN","TIULP",18,0)
 ;    HPCAN^TIUCP: P182
"RTN","TIULP",19,0)
 N HPCAN I $$ISHISTCP^TIUCP(+TIUD0) S HPCAN=$$HPCAN^TIUCP(+TIUACT) I 'HPCAN S TIUY=HPCAN G CANDOX
"RTN","TIULP",20,0)
 ; **152 Get status
"RTN","TIULP",21,0)
 S STATUS=+$P(TIUD0,U,5)
"RTN","TIULP",22,0)
 ; **152[215] prevent edit,send back for completed [& uncos] documents.
"RTN","TIULP",23,0)
 I STATUS>5,(+TIUACT=9)!(+TIUACT=17) D  G CANDOX
"RTN","TIULP",24,0)
 .; **152[215] Displays message to user
"RTN","TIULP",25,0)
 . I +TIUACT=9 S TIUY="0^ You may not edit uncosigned or completed documents."
"RTN","TIULP",26,0)
 . I +TIUACT=17 S TIUY="0^ You may not send back uncosigned or completed documents."
"RTN","TIULP",27,0)
 ; -- In case business rules have changed, & children already existed:
"RTN","TIULP",28,0)
 I +TIUACT=24,$D(^TIU(8925,"GDAD",TIUDA)) D  G CANDOX
"RTN","TIULP",29,0)
 . S TIUY="0^ This note cannot be attached; it has its own children."
"RTN","TIULP",30,0)
 I +TIUACT=25,+$G(^TIU(8925,TIUDA,21)) D  G CANDOX
"RTN","TIULP",31,0)
 . S TIUY="0^ This note cannot receive interdisciplinary children; it is itself a child."
"RTN","TIULP",32,0)
 I +TIUACT=4!(+TIUACT=5),+$$BLANK^TIULC(TIUDA) D  G CANDOX
"RTN","TIULP",33,0)
 . S TIUY="0^ Contains blanks ("_$P(TIUPRM1,U,6)_") which must be filled before "_$P(TIUACT,U,2)_"ATURE."
"RTN","TIULP",34,0)
 S TIUROLE=$$USRROLE(TIUDA,PERSON)
"RTN","TIULP",35,0)
 S TIUTYP=+TIUD0
"RTN","TIULP",36,0)
 I $$ISADDNDM^TIULC1(+TIUDA) S TIUATYP=TIUTYP,TIUTYP=+$G(^TIU(8925,+$P(TIUD0,U,6),0))
"RTN","TIULP",37,0)
 I TIUROLE']"" S TIUY=$$CANDO^USRLA(TIUTYP,STATUS,+TIUACT,PERSON)
"RTN","TIULP",38,0)
 F TIUI=1:1:($L(TIUROLE,U)-1) D  Q:+$G(TIUY)>0
"RTN","TIULP",39,0)
 . S TIUY=$$CANDO^USRLA(TIUTYP,STATUS,+TIUACT,PERSON,$P(TIUROLE,U,TIUI))
"RTN","TIULP",40,0)
 I +$G(TIUATYP) S TIUTYP=+$G(TIUATYP)
"RTN","TIULP",41,0)
 ;**100** update for PERSON param; update for verb modifier:
"RTN","TIULP",42,0)
 I +TIUY'>0 D  G CANDOX
"RTN","TIULP",43,0)
 . S WHO=" You"
"RTN","TIULP",44,0)
 . ;I PERSON'=DUZ S WHO=$P(^VA(200,PERSON,0),U),WHO=$$NAME^TIULS(WHO,"FIRST LAST")
"RTN","TIULP",45,0)
 . I PERSON'=DUZ S WHO=$$NAME^TIULS($$GET1^DIQ(200,PERSON,.01),"FIRST LAST") ;P182
"RTN","TIULP",46,0)
 . S MODIFIER=$P(TIUACT,U,3) I $L(MODIFIER) S MODIFIER=" "_MODIFIER
"RTN","TIULP",47,0)
 . ;e.g. "You may not ATTACH this UNSIGNED TELEPHONE NOTE TO AN ID NOTE."
"RTN","TIULP",48,0)
 . S MSG=WHO_" may not "_$P(TIUACT,U,2)_" this "_$P($G(^TIU(8925.6,+STATUS,0)),U)_" "_$$PNAME^TIULC1(TIUTYP)_MODIFIER_"."
"RTN","TIULP",49,0)
 . S TIUY=TIUY_U_MSG
"RTN","TIULP",50,0)
 I +TIUACT=15,$$HASIMG^TIURB2(+TIUDA) D  G CANDOX
"RTN","TIULP",51,0)
 . S TIUY="0^ This document contains linked images. You must ""delete"" the Images using the Imaging package before proceeding."
"RTN","TIULP",52,0)
 ;VMP/ELR P217. Do not allow deletion of a parent with child
"RTN","TIULP",53,0)
 I $G(TIUACTW)["DELETE RECORD",$$HASIDKID^TIUGBR(+TIUDA) D  G CANDOX
"RTN","TIULP",54,0)
 . ;VMP/ELR P215. Create new error msg.
"RTN","TIULP",55,0)
 . D IDMSG^TIULP2(.TIUMSG) S TIUY="0^"_TIUMSG
"RTN","TIULP",56,0)
 ;VMP/ELR P215. Do not allow Addendum, Edit or Delete of Anesthesia Report or Nurse Intraoperative Report
"RTN","TIULP",57,0)
 I $$ACTION^TIULP2($G(TIUACTW)),$$ISSURG^TIULP2(+TIUDA),$$SURGNOK^TIULP2(+TIUDA) D  G CANDOX
"RTN","TIULP",58,0)
 . S TIUY="0^ "_$$SURMSG^TIULP2($G(TIUACTW))
"RTN","TIULP",59,0)
CANDOX Q TIUY
"RTN","TIULP",60,0)
 ;
"RTN","TIULP",61,0)
CANLINK(TIUTYP) ; Can user (DUZ) link (attach) a document of a particular type
"RTN","TIULP",62,0)
 ;to an ID note.
"RTN","TIULP",63,0)
 ; For use in ADD NEW ID NOTE, where docmt is not entered yet.
"RTN","TIULP",64,0)
 ; Assume most favorable circumstances (user will complete
"RTN","TIULP",65,0)
 ;the note, so if user still can't attach, can tell them no,
"RTN","TIULP",66,0)
 ;when they first select title for the new entry.
"RTN","TIULP",67,0)
 ; Rule out if TIUTYP can be an ID parent, since ID parent
"RTN","TIULP",68,0)
 ;and ID kid function as mutually exclusive, (regardless of
"RTN","TIULP",69,0)
 ;business rules).
"RTN","TIULP",70,0)
 N TIUACT,STATUS,USRROLE,TIUY
"RTN","TIULP",71,0)
 S TIUACT=$$USREVNT("ATTACH TO ID NOTE"),STATUS=7 ; complete
"RTN","TIULP",72,0)
 S USRROLE=+$O(^USR(8930.2,"B","COMPLETER",0))
"RTN","TIULP",73,0)
 S TIUY=$$CANDO^USRLA(TIUTYP,STATUS,+TIUACT,DUZ,USRROLE)
"RTN","TIULP",74,0)
 I '$G(TIUY) S TIUY="0^ You may not use this title for interdisciplinary child entries." Q TIUY
"RTN","TIULP",75,0)
 ; -- If user can attach a certain note, but note can also receive
"RTN","TIULP",76,0)
 ;    ID entries, don't let user attach it. --
"RTN","TIULP",77,0)
 I $$POSSPRNT^TIULP(TIUTYP) S TIUY="0^ This interdisciplinary PARENT title cannot be used for CHILD entries."
"RTN","TIULP",78,0)
 ; -- If selected type is a CWAD, don't let user attach it: --
"RTN","TIULP",79,0)
 I $$ISCWAD^TIULX(TIUTYP) S TIUY="0^ CWAD titles cannot be used for interdisciplinary entries."
"RTN","TIULP",80,0)
 ; -- If selected type is a PRF, don't let user attach it: --
"RTN","TIULP",81,0)
 I $$ISPFTTL^TIUPRFL(TIUTYP) S TIUY="0^ Patient Record Flag titles cannot be used for interdisciplinary entries."
"RTN","TIULP",82,0)
 ; -- If selected type is a consult, don't let user attach it: --
"RTN","TIULP",83,0)
 I $$ISA^TIULX(TIUTYP,+$$CLASS^TIUCNSLT) S TIUY="0^ Consult titles cannot be used for interdisciplinary entries."
"RTN","TIULP",84,0)
 Q TIUY
"RTN","TIULP",85,0)
 ;
"RTN","TIULP",86,0)
POSSPRNT(TIUTYP) ; Is a docmt intended as a possible ID parent?
"RTN","TIULP",87,0)
 ;Returns 1^WHYCAN'TATTACH if there are business rules permitting ANYONE
"RTN","TIULP",88,0)
 ;to attach ID entries to notes of type TIUTYP.
"RTN","TIULP",89,0)
 ;Else returns 0.
"RTN","TIULP",90,0)
 N TIUACT,STATUS,TIUY,DADTYP
"RTN","TIULP",91,0)
 S TIUY=0,TIUACT=+$$USREVNT("ATTACH ID ENTRY")
"RTN","TIULP",92,0)
 F STATUS=6,7,8 D  G:TIUY POSSX
"RTN","TIULP",93,0)
 . I $O(^USR(8930.1,"AR",TIUTYP,STATUS,TIUACT,0)) S TIUY=1 Q
"RTN","TIULP",94,0)
 . I $O(^USR(8930.1,"AC",TIUTYP,STATUS,TIUACT,0)) S TIUY=1
"RTN","TIULP",95,0)
 ; -- If no rules for TIUTYP, try its parent: --
"RTN","TIULP",96,0)
 S DADTYP=$O(^TIU(8925.1,"AD",TIUTYP,0)) G:DADTYP'>0 POSSX
"RTN","TIULP",97,0)
 S TIUY=$$POSSPRNT(DADTYP)
"RTN","TIULP",98,0)
POSSX I TIUY S TIUY="1^ Interdisciplinary PARENT notes cannot be attached as CHILD entries."
"RTN","TIULP",99,0)
 Q TIUY
"RTN","TIULP",100,0)
 ;
"RTN","TIULP",101,0)
CANENTR(TIUTYP) ; Evaluate privilege to enter a document of a particular type
"RTN","TIULP",102,0)
 N TIUACT,STATUS,USRROLE,TIUY
"RTN","TIULP",103,0)
 S TIUACT=$$USREVNT("ENTRY"),STATUS=2 ; untranscribed
"RTN","TIULP",104,0)
 S USRROLE=3 ; transcriber
"RTN","TIULP",105,0)
 S TIUY=$$CANDO^USRLA(TIUTYP,STATUS,+TIUACT,DUZ,USRROLE)
"RTN","TIULP",106,0)
 Q TIUY
"RTN","TIULP",107,0)
USRROLE(TIUDA,PERSON) ; Identify the user's role with respect to the document
"RTN","TIULP",108,0)
 ; 3/20/00 **100** Added role COMPLETER
"RTN","TIULP",109,0)
 ; 3/20/00 **100** Added PERSON param
"RTN","TIULP",110,0)
 N TIU0,TIU12,TIU13,TIUY,TIU15,COMPLTR,STATUS
"RTN","TIULP",111,0)
 S PERSON=$G(PERSON,DUZ)
"RTN","TIULP",112,0)
 S TIU0=$G(^TIU(8925,+TIUDA,0)),STATUS=$P(TIU0,U,5)
"RTN","TIULP",113,0)
 S TIU12=$G(^TIU(8925,+TIUDA,12))
"RTN","TIULP",114,0)
 S TIU13=$G(^TIU(8925,+TIUDA,13)),TIU15=$G(^TIU(8925,+TIUDA,15))
"RTN","TIULP",115,0)
 I PERSON=+$P(TIU13,U,2) S TIUY=+$O(^USR(8930.2,"B","TRANSCRIBER",0))_U
"RTN","TIULP",116,0)
 I PERSON=+$P(TIU12,U,2) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","AUTHOR/DICTATOR",0))_U
"RTN","TIULP",117,0)
 I PERSON=+$P(TIU12,U,9) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","ATTENDING PHYSICIAN",0))_U
"RTN","TIULP",118,0)
 I PERSON=+$P(TIU12,U,4) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","EXPECTED SIGNER",0))_U
"RTN","TIULP",119,0)
 I PERSON=+$P(TIU12,U,8) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","EXPECTED COSIGNER",0))_U
"RTN","TIULP",120,0)
 I $$ASURG^TIUADSIG(TIUDA) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","SURROGATE",0))_U ;P157
"RTN","TIULP",121,0)
 ;Check if the person can be an Interpreter for this document via a Consult API
"RTN","TIULP",122,0)
 I $$CPINTERP^GMRCCP(+TIUDA,PERSON) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","INTERPRETER",0))_U
"RTN","TIULP",123,0)
 I STATUS>6 D  I COMPLTR S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","COMPLETER",0))_U
"RTN","TIULP",124,0)
 . S COMPLTR=0
"RTN","TIULP",125,0)
 . I PERSON=+$P(TIU15,U,8) S COMPLTR=1 Q
"RTN","TIULP",126,0)
 . I '$P(TIU15,U,8),PERSON=+$P(TIU15,U,2) S COMPLTR=1
"RTN","TIULP",127,0)
 I +$O(^TIU(8925.7,"AE",+TIUDA,+PERSON,0)) D
"RTN","TIULP",128,0)
 . N TIUXTRA S TIUXTRA=+$O(^TIU(8925.7,"AE",+TIUDA,+PERSON,0))
"RTN","TIULP",129,0)
 . I +$P($G(^TIU(8925.7,+TIUXTRA,0)),U,4) Q
"RTN","TIULP",130,0)
 . S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","ADDITIONAL SIGNER",0))_U
"RTN","TIULP",131,0)
 Q $G(TIUY)
"RTN","TIULP",132,0)
USREVNT(EVENT) ; Given event name, return:
"RTN","TIULP",133,0)
 ;EVENT = event pointer^user verb^verb modifier
"RTN","TIULP",134,0)
 ; **100** added verb modifier piece (.07)
"RTN","TIULP",135,0)
 N TIUY,TIUDA,NODE0
"RTN","TIULP",136,0)
 S TIUDA=+$O(^USR(8930.8,"B",EVENT,0))
"RTN","TIULP",137,0)
 S NODE0=$G(^USR(8930.8,TIUDA,0))
"RTN","TIULP",138,0)
 S TIUY=TIUDA_U_$P(NODE0,U,5)_U_$P(NODE0,U,7)
"RTN","TIULP",139,0)
 Q TIUY
"RTN","TIULP",140,0)
CANPICK(TIUTYP) ; Screens selection of title by title status and
"RTN","TIULP",141,0)
 ;(for status TEST), by owner.
"RTN","TIULP",142,0)
 N TIUPOWN,TIUCOWN,TIUT0,TIUTSTAT,TIUY S TIUY=0
"RTN","TIULP",143,0)
 S TIUT0=$G(^TIU(8925.1,+TIUTYP,0)),TIUTSTAT=$P(TIUT0,U,7)
"RTN","TIULP",144,0)
 I TIUTSTAT']"" S TIUY=0 G CANPIX
"RTN","TIULP",145,0)
 I TIUTSTAT=13 S TIUY=0 G CANPIX
"RTN","TIULP",146,0)
 I TIUTSTAT=11 S TIUY=1 G CANPIX
"RTN","TIULP",147,0)
 S TIUPOWN=$P(TIUT0,U,5),TIUCOWN=+$P(TIUT0,U,6)
"RTN","TIULP",148,0)
 I TIUTSTAT=10 S TIUY=$S(TIUPOWN=DUZ:1,+$$ISA^USRLM(DUZ,TIUCOWN):1,1:0)
"RTN","TIULP",149,0)
CANPIX Q +$G(TIUY)
"RTN","TIULP",150,0)
REQCOSIG(TIUTYP,TIUDA,USER,TIUDT) ; Evaluate whether user requires cosignature
"RTN","TIULP",151,0)
 N TIUI,TIUY,TIUDPRM S USER=$S(+$G(USER):+$G(USER),1:+$G(DUZ))
"RTN","TIULP",152,0)
 D DOCPRM^TIULC1(TIUTYP,.TIUDPRM,+$G(TIUDA))
"RTN","TIULP",153,0)
 I $G(TIUDPRM(5))="" G REQCOSX
"RTN","TIULP",154,0)
 I +$G(TIUDT)'>0 S TIUDT=+$P($P(+$G(^TIU(8925,+$G(TIUDA),13)),U),".")
"RTN","TIULP",155,0)
 F TIUI=1:1:$L(TIUDPRM(5),U) D  Q:+TIUY>0
"RTN","TIULP",156,0)
 . S TIUY=+$$ISA^USRLM(+USER,+$P(TIUDPRM(5),U,TIUI),,+$G(TIUDT))
"RTN","TIULP",157,0)
REQCOSX Q +$G(TIUY)
"RTN","TIULP",158,0)
 ;
"RTN","TIULP",159,0)
REQCPF(TIUCDA) ;Check if clinical procedure fields are required
"RTN","TIULP",160,0)
 ; Input  -- TIUCDA   Request/Consult File (#123) IEN
"RTN","TIULP",161,0)
 ; Output -- 1=Required and 0=Not Required
"RTN","TIULP",162,0)
 N TIUCPACT,REQF
"RTN","TIULP",163,0)
 I '$G(TIUCDA) G REQCPFQ
"RTN","TIULP",164,0)
 S TIUCPACT=$$CPACTM^GMRCCP(TIUCDA)
"RTN","TIULP",165,0)
 I TIUCPACT=1!(TIUCPACT=3) S REQF=1
"RTN","TIULP",166,0)
REQCPFQ Q +$G(REQF)
"RTN","TIULP2")
0^6^B5528800^n/a
"RTN","TIULP2",1,0)
TIULP2 ;SLC/JER - Functions determining privilege continued ;11/15/2006
"RTN","TIULP2",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**215**;Jun 20, 1997;Build 6
"RTN","TIULP2",3,0)
ISSURG(TIUDA) ;GET 8925.1 IEN
"RTN","TIULP2",4,0)
 NEW TIUY
"RTN","TIULP2",5,0)
 D ISSURG^TIUSROI(.TIUY,+$G(^TIU(8925,+TIUDA,0)))
"RTN","TIULP2",6,0)
 Q TIUY
"RTN","TIULP2",7,0)
SURGNOK(TIUDA) ;SEE IF IT IS AN NIR OR AR
"RTN","TIULP2",8,0)
 N TIUY,TIUS0,TIUSNAME
"RTN","TIULP2",9,0)
 S TIUY=0
"RTN","TIULP2",10,0)
 G SURGEX:'$L(TIUDA)
"RTN","TIULP2",11,0)
 G SURGEX:'$D(^TIU(8925,+TIUDA,0))
"RTN","TIULP2",12,0)
 S TIUS0=+$G(^TIU(8925,+TIUDA,0))
"RTN","TIULP2",13,0)
 G SURGEX:'$L(TIUS0)
"RTN","TIULP2",14,0)
 S TIUSNAME=$$PNAME^TIULC1(+TIUS0)
"RTN","TIULP2",15,0)
 G SURGEX:'$L(TIUSNAME)
"RTN","TIULP2",16,0)
 I TIUSNAME["NURSE INTRAOPERATIVE REPORT" S TIUY=1 G SURGEX
"RTN","TIULP2",17,0)
 I TIUSNAME["ANESTHESIA REPORT" S TIUY=1 G SURGEX
"RTN","TIULP2",18,0)
SURGEX Q TIUY
"RTN","TIULP2",19,0)
ACTION(TIUACTW) ;CHECK ACTION
"RTN","TIULP2",20,0)
 NEW TIUY S TIUY=0
"RTN","TIULP2",21,0)
 I (($G(TIUACTW)["DELETE RECORD")!($G(TIUACTW)["AMENDMENT")!($G(TIUACTW)["EDIT RECORD")!($G(TIUACTW)["ADDEND")) S TIUY=1 G ACTEX
"RTN","TIULP2",22,0)
ACTEX Q TIUY
"RTN","TIULP2",23,0)
SURMSG(TIUACTW) ;SET SURGERY ERROR MSG
"RTN","TIULP2",24,0)
 NEW TIUY,TIUDOC S TIUDOC=""
"RTN","TIULP2",25,0)
 I TIUACTW["DELETE" S TIUDOC="DELETE"
"RTN","TIULP2",26,0)
 I TIUACTW["EDIT" S TIUDOC="EDIT"
"RTN","TIULP2",27,0)
 I ((TIUACTW["ADDEND")!(TIUACTW["AMEND")) S TIUDOC="CREATE AN ADDENDUM FOR"
"RTN","TIULP2",28,0)
 S TIUY="You must use the Surgery Package to "_TIUDOC_" this Document"
"RTN","TIULP2",29,0)
 Q TIUY
"RTN","TIULP2",30,0)
IDMSG(TIUMSG) ;SET DELETE ID MSG
"RTN","TIULP2",31,0)
 S TIUMSG="You may NOT delete this parent ID note.  It has child ID notes attached. "
"RTN","TIULP2",32,0)
 S TIUMSG=TIUMSG_"If you need to delete this note you must first detach the Child from the Parent note."
"RTN","TIULP2",33,0)
 I $G(XQY0)["OR CPRS GUI CHART" D                 ;DBIA 3356
"RTN","TIULP2",34,0)
 . S TIUMSG=TIUMSG_" Select Action/Detach from Interdisciplinary note to accomplish this."
"RTN","TIULP2",35,0)
 E  S TIUMSG=TIUMSG_" Select the Child note from the LM screen, then select Interdiscipl'ry Note."
"RTN","TIULP2",36,0)
 Q
"RTN","TIUSRVA")
0^7^B22465828^B22071569
"RTN","TIUSRVA",1,0)
TIUSRVA ; SLC/JER,AJB - API's for Authorization ; 4/18/07
"RTN","TIUSRVA",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**19,28,47,80,100,116,152,160,178,175,157,215**;Jun 20, 1997;Build 6
"RTN","TIUSRVA",3,0)
 ;
"RTN","TIUSRVA",4,0)
 ;External reference to File ^AUPNVSIT supported by DBIA 3580
"RTN","TIUSRVA",5,0)
REQCOS(TIUY,TIUTYP,TIUDA,TIUSER,TIUDT) ; Evaluate cosignature requirement
"RTN","TIUSRVA",6,0)
 ; Initialize return value
"RTN","TIUSRVA",7,0)
 N TIUDPRM
"RTN","TIUSRVA",8,0)
 S TIUY=0
"RTN","TIUSRVA",9,0)
 I +$G(TIUTYP)'>0,'+$G(TIUDA) Q
"RTN","TIUSRVA",10,0)
 I +$G(TIUDA) S TIUTYP=+$G(^TIU(8925,+$G(TIUDA),0))
"RTN","TIUSRVA",11,0)
 S:'+$G(TIUSER) TIUSER=+$G(DUZ)
"RTN","TIUSRVA",12,0)
 S TIUY=+$$REQCOSIG^TIULP(TIUTYP,+$G(TIUDA),+$G(TIUSER),+$G(TIUDT))
"RTN","TIUSRVA",13,0)
 Q
"RTN","TIUSRVA",14,0)
URGENCY(Y) ; -- retrieve set values from dd for discharge summary urgency
"RTN","TIUSRVA",15,0)
 N TIUDD,TIUI,TIUX
"RTN","TIUSRVA",16,0)
 D FIELD^DID(8925,.09,"","POINTER","TIUDD")
"RTN","TIUSRVA",17,0)
 F TIUI=1:1 S TIUX=$P(TIUDD("POINTER"),";",TIUI) Q:TIUX=""   S Y(TIUI)=$TR(TIUX,":","^")
"RTN","TIUSRVA",18,0)
 Q
"RTN","TIUSRVA",19,0)
CANDO(Y,TIUDA,TIUACT) ; Boolean function to evaluate privilege
"RTN","TIUSRVA",20,0)
 N TIUPOP,TIUDPRM S TIUPOP=0
"RTN","TIUSRVA",21,0)
 ; **152,[215]** prevent editing a completed [uncosigned] document.
"RTN","TIUSRVA",22,0)
 I $P($G(^TIU(8925,TIUDA,0)),U,5)>5,(TIUACT="EDIT RECORD") S Y="0^ You may not edit uncosigned or completed documents" Q
"RTN","TIUSRVA",23,0)
 I $S(TIUACT["SIGN":1,TIUACT="EDIT RECORD":1,TIUACT="DELETE RECORD":1,1:0) D  Q:+TIUPOP=1
"RTN","TIUSRVA",24,0)
 . L +^TIU(8925,+TIUDA):1
"RTN","TIUSRVA",25,0)
 . E  S Y="0^ Another session is editing this entry.",TIUPOP=1
"RTN","TIUSRVA",26,0)
 . L -^TIU(8925,+TIUDA)
"RTN","TIUSRVA",27,0)
 I TIUACT["SIGN",+$$NEEDCS(TIUDA) S Y="0^ You must name a cosigner before signing this document." Q
"RTN","TIUSRVA",28,0)
 S Y=$$CANDO^TIULP(TIUDA,TIUACT)
"RTN","TIUSRVA",29,0)
 Q
"RTN","TIUSRVA",30,0)
NEEDCS(TIUDA) ; Does user need a cosigner?
"RTN","TIUSRVA",31,0)
 N TIUD0,TIUD12,TIUY,SIGNER,COSIGNER,XTRASGNR
"RTN","TIUSRVA",32,0)
 S TIUD0=$G(^TIU(8925,TIUDA,0)),TIUD12=$G(^(12))
"RTN","TIUSRVA",33,0)
 S SIGNER=$P(TIUD12,U,4),COSIGNER=$P(TIUD12,U,8),XTRASGNR=0
"RTN","TIUSRVA",34,0)
 I (DUZ'=SIGNER),(DUZ'=COSIGNER) S XTRASGNR=+$O(^TIU(8925.7,"AE",+TIUDA,+DUZ,0))
"RTN","TIUSRVA",35,0)
 I +XTRASGNR S TIUY=0
"RTN","TIUSRVA",36,0)
 E  I +$$REQCOSIG^TIULP(+TIUD0,TIUDA,DUZ),(+$P(TIUD12,U,8)'>0) S TIUY=1
"RTN","TIUSRVA",37,0)
 Q +$G(TIUY)
"RTN","TIUSRVA",38,0)
USRINACT(TIUY,TIUDA) ; Is user inactive?
"RTN","TIUSRVA",39,0)
 S TIUY=+$$GET1^DIQ(200,TIUDA_",",7,"I")
"RTN","TIUSRVA",40,0)
 Q
"RTN","TIUSRVA",41,0)
AUTHSIGN(TIUY,TIUDA,TIUUSR) ; Has Author signed?
"RTN","TIUSRVA",42,0)
 ; if TIUY = 
"RTN","TIUSRVA",43,0)
 ; 0 = Author has NOT signed & TIUUSR = Expected Cosigner
"RTN","TIUSRVA",44,0)
 ; 1 = Author HAS signed or TIUUSR '= Expected Cosigner
"RTN","TIUSRVA",45,0)
 ;
"RTN","TIUSRVA",46,0)
 N TIUD12,TIUD15
"RTN","TIUSRVA",47,0)
 S TIUD12=$G(^TIU(8925,TIUDA,12)),TIUD15=$G(^(15))
"RTN","TIUSRVA",48,0)
 S TIUY=1
"RTN","TIUSRVA",49,0)
 D:$P(TIUD12,U,8)=TIUUSR  Q
"RTN","TIUSRVA",50,0)
 . S:$P(TIUD12,U,2)'=$P(TIUD15,U,2) TIUY=0
"RTN","TIUSRVA",51,0)
 Q
"RTN","TIUSRVA",52,0)
TIUVISIT(TIUY,DOCTYP,DFN,VISIT) ;  Check for a 1 time only doc
"RTN","TIUSRVA",53,0)
 ;  TIUY    =    return value
"RTN","TIUSRVA",54,0)
 ;          = 0 if can add more than one or none already exist
"RTN","TIUSRVA",55,0)
 ;          = 1 if cannot add more than one and one already exists
"RTN","TIUSRVA",56,0)
 ;  DOCTYP  =    Pointer to ^TUI(8925.1,   TIU DOCUMENT DEFINITION
"RTN","TIUSRVA",57,0)
 ;  DFN     =    Patient IEN
"RTN","TIUSRVA",58,0)
 ;  VISIT   =    Visit String "LOC;VDATE;VTYP"
"RTN","TIUSRVA",59,0)
 I $$PATCH^XPDUTL("OR*3.0*195") D
"RTN","TIUSRVA",60,0)
 . Q:($G(DOCTYP)="")!($G(DFN)="")!($G(VISIT)="")
"RTN","TIUSRVA",61,0)
 . N TIUDPRM,TIUTEST
"RTN","TIUSRVA",62,0)
 . D DOCPRM^TIULC1(DOCTYP,.TIUDPRM)
"RTN","TIUSRVA",63,0)
 . S TIUY=$S($P(TIUDPRM(0),U,10)="":1,1:$P(TIUDPRM(0),U,10))
"RTN","TIUSRVA",64,0)
 . I TIUY=1 S TIUY=0 Q
"RTN","TIUSRVA",65,0)
 . I $L(VISIT,";")=3 D
"RTN","TIUSRVA",66,0)
 . . S TIUTEST=$$EXIST^TIUEDI3(DFN,DOCTYP,VISIT)
"RTN","TIUSRVA",67,0)
 . . I TIUTEST S TIUY=1
"RTN","TIUSRVA",68,0)
 . . I 'TIUTEST S TIUY=0
"RTN","TIUSRVA",69,0)
 I '$$PATCH^XPDUTL("OR*3.0*195") D
"RTN","TIUSRVA",70,0)
 . Q:($G(DOCTYP)="")!($G(DFN)="")!($G(VISIT)="")
"RTN","TIUSRVA",71,0)
 . N TIUX3
"RTN","TIUSRVA",72,0)
 . S TIUX3=+$O(^TIU(8925.95,"B",DOCTYP,""))
"RTN","TIUSRVA",73,0)
 . S TIUY=$P($G(^TIU(8925.95,TIUX3,0)),U,10) S TIUY=$S(TIUY=0:1,1:0)
"RTN","TIUSRVA",74,0)
 . Q:'TIUY
"RTN","TIUSRVA",75,0)
 . S VISIT=((9999999-$P(VISIT,"."))_"."_$P(VISIT,".",2))
"RTN","TIUSRVA",76,0)
 . S VISIT=+$O(^AUPNVSIT("AA",DFN,VISIT,""))
"RTN","TIUSRVA",77,0)
 . S TIUY=$S($D(^TIU(8925,"AV",DFN,DOCTYP,VISIT)):0,1:1)
"RTN","TIUSRVA",78,0)
 . S TIUY=$S(TIUY=0:1,1:0)
"RTN","TIUSRVA",79,0)
 Q
"RTN","TIUSRVA",80,0)
WHATACT(Y,TIUDA) ; Evaluate/return whether signature or cosignature
"RTN","TIUSRVA",81,0)
 N TIUD0,TIUD12,TIUSTAT,SIGNER,COSIGNER,XTRASGNR
"RTN","TIUSRVA",82,0)
 S TIUD0=$G(^TIU(8925,+TIUDA,0)),TIUD12=$G(^TIU(8925,+TIUDA,12))
"RTN","TIUSRVA",83,0)
 S SIGNER=$P(TIUD12,U,4),COSIGNER=$P(TIUD12,U,8)
"RTN","TIUSRVA",84,0)
 I (DUZ'=SIGNER),(DUZ'=COSIGNER) S XTRASGNR=+$O(^TIU(8925.7,"AE",+TIUDA,+DUZ,0))
"RTN","TIUSRVA",85,0)
 I '$G(XTRASGNR) S XTRASGNR=$$ASURG^TIUADSIG(TIUDA)
"RTN","TIUSRVA",86,0)
 S TIUSTAT=+$P(TIUD0,U,5)
"RTN","TIUSRVA",87,0)
 S Y=$S(TIUSTAT'>5:"SIGNATURE",+$G(XTRASGNR):"SIGNATURE",1:"COSIGNATURE")
"RTN","TIUSRVA",88,0)
 Q
"RTN","TIUSRVA",89,0)
CANCHCOS(Y,TIUDA) ; Evaluate/return whether user can change cosigner
"RTN","TIUSRVA",90,0)
 S Y=$$MAYCHNG^TIURA1(TIUDA)
"RTN","TIUSRVA",91,0)
 Q
"RTN","TIUSRVA",92,0)
NEEDJUST(Y,TIUDA) ; Is justification required for deletion?
"RTN","TIUSRVA",93,0)
 N TIUD0 S TIUD0=$G(^TIU(8925,+TIUDA,0)),Y=0
"RTN","TIUSRVA",94,0)
 I +$P(TIUD0,U,5)'<6 S Y=1
"RTN","TIUSRVA",95,0)
 Q
"RTN","TIUSRVA",96,0)
GETTITLE(Y,TIUDA) ; Get the title from a TIU Document Record
"RTN","TIUSRVA",97,0)
 S Y=+$G(^TIU(8925,+TIUDA,0))
"RTN","TIUSRVA",98,0)
 Q
"RTN","TIUSRVA",99,0)
CANATTCH(Y,TIUDA) ; Can this document be attached as an ID Child
"RTN","TIUSRVA",100,0)
 N TITLEDA,PARENTDA
"RTN","TIUSRVA",101,0)
 S TITLEDA=+$G(^TIU(8925,TIUDA,0))
"RTN","TIUSRVA",102,0)
 I TITLEDA'>0 S Y="0^Document #"_TIUDA_" does not exist." Q
"RTN","TIUSRVA",103,0)
 S PARENTDA=+$G(^TIU(8925,TIUDA,21))
"RTN","TIUSRVA",104,0)
 S Y=$$POSSPRNT^TIULP(TITLEDA)
"RTN","TIUSRVA",105,0)
 I +Y S Y="-1"_U_$P(Y,U,2) Q
"RTN","TIUSRVA",106,0)
 I +$$ISCWAD^TIULX(TITLEDA) D  Q
"RTN","TIUSRVA",107,0)
 . S Y="0^ CWAD Documents may not be Attached as Interdisciplinary Entries."
"RTN","TIUSRVA",108,0)
 I +$$ISA^TIULX(TITLEDA,+$$CLASS^TIUCNSLT) D  Q
"RTN","TIUSRVA",109,0)
 . S Y="0^ Consult Results may not be Attached as Interdisciplinary Entries."
"RTN","TIUSRVA",110,0)
 S Y=$$CANDO^TIULP(TIUDA,"ATTACH TO ID NOTE")
"RTN","TIUSRVA",111,0)
 I PARENTDA D  ; action must be "detach"
"RTN","TIUSRVA",112,0)
 . I 'Y S Y="0^ You may not detach this note from an interdisciplinary note." Q
"RTN","TIUSRVA",113,0)
 . S Y=$$CANDO^TIULP(PARENTDA,"ATTACH ID ENTRY")
"RTN","TIUSRVA",114,0)
 . I 'Y S Y="0^ You may not detach this note from its interdisciplinary note."
"RTN","TIUSRVA",115,0)
 Q
"RTN","TIUSRVA",116,0)
CANRCV(Y,TIUDA) ; Can this document receive an ID Child?
"RTN","TIUSRVA",117,0)
 S Y=$$CANDO^TIULP(TIUDA,"ATTACH ID ENTRY")
"RTN","TIUSRVA",118,0)
 Q
"VER")
8.0^22.0
"BLD",6902,6)
^211
**END**
**END**
