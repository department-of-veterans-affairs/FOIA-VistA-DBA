KIDS Distribution saved on Mar 08, 2004@13:21:34
SD*5.3*333 KID
**KIDS**:SD*5.3*333^

**INSTALL NAME**
SD*5.3*333
"BLD",4103,0)
SD*5.3*333^SCHEDULING^0^3040308^y
"BLD",4103,1,0)
^^16^16^3040129^
"BLD",4103,1,1,0)
This patch contains several enhancements and modifications to the
"BLD",4103,1,2,0)
Patient Appointment Information Transmission, originally released in 
"BLD",4103,1,3,0)
patch SD*5.3*290.
"BLD",4103,1,4,0)
 
"BLD",4103,1,5,0)
   - New components are added to SCH.11, SCH6, and SCH.7 segments of
"BLD",4103,1,6,0)
     HL7 transmission.
"BLD",4103,1,7,0)
   - The appointment selection logic for update runs has been modified.
"BLD",4103,1,8,0)
   - Rejection error codes have been expanded.
"BLD",4103,1,9,0)
   - Independent reports, reflecting the transmission status, have been 
"BLD",4103,1,10,0)
     developed by AAC and the Messaging and Interface Services Team.
"BLD",4103,1,11,0)
   - New report options added to print Transmission and Acknowledgement
"BLD",4103,1,12,0)
     Summaries.  
"BLD",4103,1,13,0)
   - Release Notes have been updated with additional, detailed
"BLD",4103,1,14,0)
     technical information.
"BLD",4103,1,15,0)
   - An expanded 409.6 file will permanently store detailed transmission
"BLD",4103,1,16,0)
     information.
"BLD",4103,4,0)
^9.64PA^404.472^2
"BLD",4103,4,404.472,0)
404.472
"BLD",4103,4,404.472,222)
n^n^f^^y^^y^o^n
"BLD",4103,4,409.6,0)
409.6
"BLD",4103,4,409.6,222)
y^y^f^^^^n
"BLD",4103,4,"B",404.472,404.472)

"BLD",4103,4,"B",409.6,409.6)

"BLD",4103,"ABPKG")
n
"BLD",4103,"INID")
^
"BLD",4103,"INIT")

"BLD",4103,"KRN",0)
^9.67PA^8989.52^19
"BLD",4103,"KRN",.4,0)
.4
"BLD",4103,"KRN",.4,"NM",0)
^9.68A^5^4
"BLD",4103,"KRN",.4,"NM",1,0)
SD-PAIT PAIT ACK SUMMARY    FILE #409.6^409.6^0
"BLD",4103,"KRN",.4,"NM",2,0)
SD-PAIT PATIENT PENDING APPT    FILE #409.6^409.6^0
"BLD",4103,"KRN",.4,"NM",3,0)
SD-PAIT TRANS SUMMARY    FILE #409.6^409.6^0
"BLD",4103,"KRN",.4,"NM",5,0)
SD-PAIT REJECTED APPT    FILE #409.6^409.6^0
"BLD",4103,"KRN",.4,"NM","B","SD-PAIT PAIT ACK SUMMARY    FILE #409.6",1)

"BLD",4103,"KRN",.4,"NM","B","SD-PAIT PATIENT PENDING APPT    FILE #409.6",2)

"BLD",4103,"KRN",.4,"NM","B","SD-PAIT REJECTED APPT    FILE #409.6",5)

"BLD",4103,"KRN",.4,"NM","B","SD-PAIT TRANS SUMMARY    FILE #409.6",3)

"BLD",4103,"KRN",.401,0)
.401
"BLD",4103,"KRN",.401,"NM",0)
^9.68A^7^4
"BLD",4103,"KRN",.401,"NM",2,0)
SD-PAIT PAIT ACK SORT    FILE #409.6^409.6^0
"BLD",4103,"KRN",.401,"NM",3,0)
SD-PAIT PEND EXCL FUTURE    FILE #409.6^409.6^0
"BLD",4103,"KRN",.401,"NM",4,0)
SD-PAIT REJECTED APPT    FILE #409.6^409.6^0
"BLD",4103,"KRN",.401,"NM",7,0)
SD-PAIT TRANS SUMMARY    FILE #409.6^409.6^0
"BLD",4103,"KRN",.401,"NM","B","SD-PAIT PAIT ACK SORT    FILE #409.6",2)

"BLD",4103,"KRN",.401,"NM","B","SD-PAIT PEND EXCL FUTURE    FILE #409.6",3)

"BLD",4103,"KRN",.401,"NM","B","SD-PAIT REJECTED APPT    FILE #409.6",4)

"BLD",4103,"KRN",.401,"NM","B","SD-PAIT TRANS SUMMARY    FILE #409.6",7)

"BLD",4103,"KRN",.402,0)
.402
"BLD",4103,"KRN",.403,0)
.403
"BLD",4103,"KRN",.5,0)
.5
"BLD",4103,"KRN",.84,0)
.84
"BLD",4103,"KRN",3.6,0)
3.6
"BLD",4103,"KRN",3.8,0)
3.8
"BLD",4103,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",4103,"KRN",9.2,0)
9.2
"BLD",4103,"KRN",9.8,0)
9.8
"BLD",4103,"KRN",9.8,"NM",0)
^9.68A^9^7
"BLD",4103,"KRN",9.8,"NM",1,0)
SDRPA00^^0^B80077482
"BLD",4103,"KRN",9.8,"NM",3,0)
SDRPA06^^0^B53243846
"BLD",4103,"KRN",9.8,"NM",4,0)
SDRPA07^^0^B41483190
"BLD",4103,"KRN",9.8,"NM",5,0)
SDRPA05^^0^B22064423
"BLD",4103,"KRN",9.8,"NM",7,0)
SDRPA08^^0^B33266783
"BLD",4103,"KRN",9.8,"NM",8,0)
SDP333P^^0^B5309329
"BLD",4103,"KRN",9.8,"NM",9,0)
SDRPA09^^0^B6442115
"BLD",4103,"KRN",9.8,"NM","B","SDP333P",8)

"BLD",4103,"KRN",9.8,"NM","B","SDRPA00",1)

"BLD",4103,"KRN",9.8,"NM","B","SDRPA05",5)

"BLD",4103,"KRN",9.8,"NM","B","SDRPA06",3)

"BLD",4103,"KRN",9.8,"NM","B","SDRPA07",4)

"BLD",4103,"KRN",9.8,"NM","B","SDRPA08",7)

"BLD",4103,"KRN",9.8,"NM","B","SDRPA09",9)

"BLD",4103,"KRN",19,0)
19
"BLD",4103,"KRN",19,"NM",0)
^9.68A^10^8
"BLD",4103,"KRN",19,"NM",1,0)
SD-PAIT ACK SUMMARY^^0
"BLD",4103,"KRN",19,"NM",3,0)
SD-PAIT PENDING^^0
"BLD",4103,"KRN",19,"NM",4,0)
SD-PAIT REJECTED^^0
"BLD",4103,"KRN",19,"NM",5,0)
SD-PAIT REPORTS^^0
"BLD",4103,"KRN",19,"NM",7,0)
SD-PAIT TASKED TRANSMISSION^^0
"BLD",4103,"KRN",19,"NM",8,0)
SD-PAIT TRANSMISSION SUMMARY^^0
"BLD",4103,"KRN",19,"NM",9,0)
SD-PAIT MANUAL BATCH REJECT^^0
"BLD",4103,"KRN",19,"NM",10,0)
SD-PAIT MANUAL TRANSMISSION^^0
"BLD",4103,"KRN",19,"NM","B","SD-PAIT ACK SUMMARY",1)

"BLD",4103,"KRN",19,"NM","B","SD-PAIT MANUAL BATCH REJECT",9)

"BLD",4103,"KRN",19,"NM","B","SD-PAIT MANUAL TRANSMISSION",10)

"BLD",4103,"KRN",19,"NM","B","SD-PAIT PENDING",3)

"BLD",4103,"KRN",19,"NM","B","SD-PAIT REJECTED",4)

"BLD",4103,"KRN",19,"NM","B","SD-PAIT REPORTS",5)

"BLD",4103,"KRN",19,"NM","B","SD-PAIT TASKED TRANSMISSION",7)

"BLD",4103,"KRN",19,"NM","B","SD-PAIT TRANSMISSION SUMMARY",8)

"BLD",4103,"KRN",19.1,0)
19.1
"BLD",4103,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",4103,"KRN",101,0)
101
"BLD",4103,"KRN",101,"NM",0)
^9.68A^2^2
"BLD",4103,"KRN",101,"NM",1,0)
SD-PAIT-EVENT^^0
"BLD",4103,"KRN",101,"NM",2,0)
SD-PAIT-SUBS^^0
"BLD",4103,"KRN",101,"NM","B","SD-PAIT-EVENT",1)

"BLD",4103,"KRN",101,"NM","B","SD-PAIT-SUBS",2)

"BLD",4103,"KRN",409.61,0)
409.61
"BLD",4103,"KRN",771,0)
771
"BLD",4103,"KRN",771,"NM",0)
^9.68A^^0
"BLD",4103,"KRN",870,0)
870
"BLD",4103,"KRN",870,"NM",0)
^9.68A^^0
"BLD",4103,"KRN",8989.51,0)
8989.51
"BLD",4103,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",4103,"KRN",8989.52,0)
8989.52
"BLD",4103,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",4103,"KRN",8994,0)
8994
"BLD",4103,"KRN","B",.4,.4)

"BLD",4103,"KRN","B",.401,.401)

"BLD",4103,"KRN","B",.402,.402)

"BLD",4103,"KRN","B",.403,.403)

"BLD",4103,"KRN","B",.5,.5)

"BLD",4103,"KRN","B",.84,.84)

"BLD",4103,"KRN","B",3.6,3.6)

"BLD",4103,"KRN","B",3.8,3.8)

"BLD",4103,"KRN","B",9.2,9.2)

"BLD",4103,"KRN","B",9.8,9.8)

"BLD",4103,"KRN","B",19,19)

"BLD",4103,"KRN","B",19.1,19.1)

"BLD",4103,"KRN","B",101,101)

"BLD",4103,"KRN","B",409.61,409.61)

"BLD",4103,"KRN","B",771,771)

"BLD",4103,"KRN","B",870,870)

"BLD",4103,"KRN","B",8989.51,8989.51)

"BLD",4103,"KRN","B",8989.52,8989.52)

"BLD",4103,"KRN","B",8994,8994)

"BLD",4103,"QUES",0)
^9.62^^0
"BLD",4103,"REQB",0)
^9.611^1^1
"BLD",4103,"REQB",1,0)
SD*5.3*290^1
"BLD",4103,"REQB","B","SD*5.3*290",1)

"DATA",404.472,1,0)
000M^^^No errors
"DATA",404.472,1,"DESC",0)
^404.482^1^1^3021210^^^
"DATA",404.472,1,"DESC",1,0)
No errors.
"DATA",404.472,2,0)
001M^^^ENV segment missing
"DATA",404.472,2,"DESC",0)
^404.482^1^1^3030102^^^
"DATA",404.472,2,"DESC",1,0)
EVN segment missing (Contact IRM for assistance).
"DATA",404.472,3,0)
002M^^^PID segment missing
"DATA",404.472,3,"DESC",0)
^^1^1^3000222^
"DATA",404.472,3,"DESC",1,0)
PID segment missing (Contact IRM for assistance).
"DATA",404.472,4,0)
003M^^^ZPC segment missing
"DATA",404.472,4,"DESC",0)
^^1^1^3000222^
"DATA",404.472,4,"DESC",1,0)
ZPC segment missing (Contact IRM for assistance).
"DATA",404.472,5,0)
005M^^^Invalid segment name
"DATA",404.472,5,"DESC",0)
^404.482^1^1^3030102^^
"DATA",404.472,5,"DESC",1,0)
Invalid segment name (Contact IRM for assistance).
"DATA",404.472,6,0)
104M^EVN^Event Date/Time^Event Date missing or out of range
"DATA",404.472,6,"DESC",0)
^^1^1^3000224^^^^
"DATA",404.472,6,"DESC",1,0)
Event Date is missing or out of range.
"DATA",404.472,7,0)
106M^EVN^Event Date/Time^Event Time invalid or missing
"DATA",404.472,7,"DESC",0)
^^1^1^3000224^^^^
"DATA",404.472,7,"DESC",1,0)
Event Time is invalid or missing.
"DATA",404.472,8,0)
110M^MSH^Message Control ID^Message Control ID missing
"DATA",404.472,8,"DESC",0)
^^1^1^3000222^
"DATA",404.472,8,"DESC",1,0)
Message Control ID missing (Contact IRM for assistance).
"DATA",404.472,9,0)
113M^EVN^Event Type^Event Type is not 'A08'
"DATA",404.472,9,"DESC",0)
^^1^1^3000224^^
"DATA",404.472,9,"DESC",1,0)
Event Type is not 'A08' (Contact IRM for assistance).
"DATA",404.472,10,0)
200M^PID^Patient Name^Patient Name invalid or missing
"DATA",404.472,10,"DESC",0)
^^1^1^3040126^
"DATA",404.472,10,"DESC",1,0)
Patient Name is missing or invalid..
"DATA",404.472,11,0)
210M^PID^Patient ID^Patient ID invalid or not numeric
"DATA",404.472,11,"DESC",0)
^^1^1^3000224^^
"DATA",404.472,11,"DESC",1,0)
Patient ID is missing or not numeric.
"DATA",404.472,12,0)
220M^PID^Date of Birth^Patient Date of Birth missing
"DATA",404.472,12,"DESC",0)
^^1^1^3000201^
"DATA",404.472,12,"DESC",1,0)
Date of Birth is missing.
"DATA",404.472,13,0)
221M^PID^Date of Birth^Patient year invalid
"DATA",404.472,13,"DESC",0)
^^1^1^3000224^^^
"DATA",404.472,13,"DESC",1,0)
Invalid year or year greater than the processing year.
"DATA",404.472,14,0)
223M^PID^Date of Birth^Patient Date of Birth invalid
"DATA",404.472,14,"DESC",0)
^^1^1^3000224^^^
"DATA",404.472,14,"DESC",1,0)
Invalid Date of Birth.
"DATA",404.472,15,0)
224M^PID^Date of Birth^Patient Date of Birth greater than processing date
"DATA",404.472,15,"DESC",0)
^^1^1^3000201^
"DATA",404.472,15,"DESC",1,0)
Date of Birth greater than processing date.
"DATA",404.472,16,0)
230M^PID^Sex^Patient Sex code invalid or missing
"DATA",404.472,16,"DESC",0)
^^1^1^3000224^
"DATA",404.472,16,"DESC",1,0)
Sex code is invalid or missing.
"DATA",404.472,17,0)
240M^PID^Race^Patient Race code invalid
"DATA",404.472,17,"DESC",0)
^^1^1^3000201^
"DATA",404.472,17,"DESC",1,0)
Invalid Race code.
"DATA",404.472,18,0)
250M^PID^Marital Status^Patient Marital Status code invalid
"DATA",404.472,18,"DESC",0)
^^1^1^3000201^
"DATA",404.472,18,"DESC",1,0)
Invalid Marital Status code.
"DATA",404.472,19,0)
260M^PID^State^Patient State Code invalid
"DATA",404.472,19,"DESC",0)
^^1^1^3000201^
"DATA",404.472,19,"DESC",1,0)
Invalid state code.
"DATA",404.472,20,0)
261M^PID^County^Patient County code invalid
"DATA",404.472,20,"DESC",0)
^^1^1^3000201^
"DATA",404.472,20,"DESC",1,0)
Invalid County code.
"DATA",404.472,21,0)
262M^PID^Address Line 1^Patient Address Line 1 is all numeric
"DATA",404.472,21,"DESC",0)
^^1^1^3000224^^
"DATA",404.472,21,"DESC",1,0)
Address Line 1 is all numeric.
"DATA",404.472,22,0)
263M^PID^Address Line 2^Patient Address Line 2 is all numeric
"DATA",404.472,22,"DESC",0)
^^1^1^3000224^^
"DATA",404.472,22,"DESC",1,0)
Address Line 2 is all numeric.
"DATA",404.472,23,0)
264M^PID^City^Patient City invalid
"DATA",404.472,23,"DESC",0)
^^1^1^3000201^
"DATA",404.472,23,"DESC",1,0)
City contains all numbers.
"DATA",404.472,24,0)
270M^PID^Religion^Patient Religion code invalid
"DATA",404.472,24,"DESC",0)
^^1^1^3000201^
"DATA",404.472,24,"DESC",1,0)
Invalid Religion code.
"DATA",404.472,25,0)
280M^PID^Zip Code^Patient Zip Code invalid
"DATA",404.472,25,"DESC",0)
^^1^1^3000201^
"DATA",404.472,25,"DESC",1,0)
Zip Code not numeric.
"DATA",404.472,26,0)
290M^PID^SSN^Patient SSN invalid
"DATA",404.472,26,"DESC",0)
^^1^1^3000201^
"DATA",404.472,26,"DESC",1,0)
SSN is missing, or not numeric, or is equal to zeros.
"DATA",404.472,27,0)
291M^PID^SSN^Patient Pseudo SSN invalid
"DATA",404.472,27,"DESC",0)
^^1^1^3000224^^^^
"DATA",404.472,27,"DESC",1,0)
Pseudo SSN is not 'P' or blank.
"DATA",404.472,28,0)
300M^ZPC^Provider Assignment ID^Provider Assignment ID invalid
"DATA",404.472,28,"DESC",0)
^404.482^1^1^3021119^^^^
"DATA",404.472,28,"DESC",1,0)
Provider Assignment ID is invalid.
"DATA",404.472,29,0)
310M^ZPC^Provider ID^Provider ID invalid
"DATA",404.472,29,"DESC",0)
^^1^1^3000224^^
"DATA",404.472,29,"DESC",1,0)
Non-numeric ID and/or invalid entry.
"DATA",404.472,30,0)
320M^ZPC^Date Provider Assigned^Provider Assigned Date invalid
"DATA",404.472,30,"DESC",0)
^^1^1^3000224^^
"DATA",404.472,30,"DESC",1,0)
Date Provider Assigned is an invalid date.
"DATA",404.472,31,0)
330M^ZPC^Date Provider Unassigned^Provider Unassigned Date invalid
"DATA",404.472,31,"DESC",0)
^^1^1^3000224^^
"DATA",404.472,31,"DESC",1,0)
Date Provider Unassigned is an invalid date (if date is present).
"DATA",404.472,32,0)
340M^ZPC^Provider Type Code^Provider Type Code invalid
"DATA",404.472,32,"DESC",0)
^^1^1^3000224^^
"DATA",404.472,32,"DESC",1,0)
Provider Type Code is not 'PCP' or 'AP'.
"DATA",404.472,33,0)
350M^ZPC^Provider Person Class^Provider Person Class Type Code invalid
"DATA",404.472,33,"DESC",0)
^^1^1^3000201^^
"DATA",404.472,33,"DESC",1,0)
Provider Person Class (seq 6 comp 1) is invalid.
"DATA",404.472,34,0)
360M^ZPC^Provider Person Class^Provider Person Class file invalid
"DATA",404.472,34,"DESC",0)
^404.482^1^1^3040102^^^^
"DATA",404.472,34,"DESC",1,0)
Provider Person Class (seq 6 comp 3) not 'VA8932.1'.
"DATA",404.472,35,0)
008M^ZPT^^ZPT Segment Missing
"DATA",404.472,35,"DESC",0)
^^1^1^3030102^
"DATA",404.472,35,"DESC",1,0)
ZPT Segment Missing
"DATA",404.472,36,0)
007M^STF^^STF Segment Missing
"DATA",404.472,36,"DESC",0)
^^1^1^3030102^
"DATA",404.472,36,"DESC",1,0)
STF Segment Missing
"DATA",404.472,37,0)
006M^ORG^^ORG segment missing
"DATA",404.472,37,"DESC",0)
^^1^1^3030102^
"DATA",404.472,37,"DESC",1,0)
ORG segment missing
"DATA",404.472,38,0)
114M^EVN^2^EVN must be B02
"DATA",404.472,38,"DESC",0)
^^1^1^3030102^
"DATA",404.472,38,"DESC",1,0)
EVN must be B02
"DATA",404.472,39,0)
502M^STF^2^Invalid Staff Code
"DATA",404.472,39,"DESC",0)
^^1^1^3030102^
"DATA",404.472,39,"DESC",1,0)
Invalid Staff Code
"DATA",404.472,40,0)
602M^ORG^2^Invalid Organization Unit Code
"DATA",404.472,40,"DESC",0)
^404.482^1^1^3031218^^^^
"DATA",404.472,40,"DESC",1,0)
Invalid Organization Unit Code
"DATA",404.472,41,0)
608M^ORG^8^Invalid Area of Specialization
"DATA",404.472,41,"DESC",0)
^404.482^1^1^3030102^
"DATA",404.472,41,"DESC",1,0)
Invalid Area of Specialization
"DATA",404.472,42,0)
702M^ZFT^2^DIRECT PATIENT CARE FTEE INVALID
"DATA",404.472,42,"DESC",0)
^404.482^1^1^3030102^
"DATA",404.472,42,"DESC",1,0)
DIRECT PATIENT CARE FTEE INVALID
"DATA",404.472,43,0)
703M^ZFT^3^MAXIMUM WORKLOAD INVALID
"DATA",404.472,43,"DESC",0)
^^1^1^3030102^
"DATA",404.472,43,"DESC",1,0)
MAXIMUM WORKLOAD INVALID
"DATA",404.472,44,0)
801M^MSH^1^Missing Field Separator
"DATA",404.472,44,"DESC",0)
^^1^1^3030204^
"DATA",404.472,44,"DESC",1,0)
Missing Field Separator
"DATA",404.472,45,0)
802M^MSH^2^Missing encoding character
"DATA",404.472,45,"DESC",0)
^^1^1^3030204^
"DATA",404.472,45,"DESC",1,0)
Missing encoding character
"DATA",404.472,46,0)
809M^MSH^9^Missing Message Type
"DATA",404.472,46,"DESC",0)
^^1^1^3030204^
"DATA",404.472,46,"DESC",1,0)
Missing Message Type
"DATA",404.472,47,0)
810M^MSH^10^Missing Message control ID
"DATA",404.472,47,"DESC",0)
^^1^1^3030204^
"DATA",404.472,47,"DESC",1,0)
Missing Message control ID
"DATA",404.472,48,0)
811M^MSH^11^Missing processing ID
"DATA",404.472,48,"DESC",0)
^^1^1^3030204^
"DATA",404.472,48,"DESC",1,0)
Missing processing ID
"DATA",404.472,49,0)
812M^MSH^12^Missing version ID
"DATA",404.472,49,"DESC",0)
^^1^1^3030204^
"DATA",404.472,49,"DESC",1,0)
Missing version ID
"DATA",404.472,50,0)
390M^ZPC^Provider Facility/Suffix.^Invalid facility Number/Suffix.
"DATA",404.472,50,"DESC",0)
^404.482^1^1^3030423^^^^
"DATA",404.472,50,"DESC",1,0)
Required, Must ba a valid facility number/suffix.
"DATA",404.472,51,0)
100^PID^3^Patient DFN is not numeric or is missing
"DATA",404.472,52,0)
150^AIL^6^Clinic IEN is not numeric or is missing
"DATA",404.472,53,0)
200^PV1^39^BHS Station Number and STA3N are not equal
"DATA",404.472,54,0)
250^BHS^4^Invalid or missing BHS Station Number
"DATA",404.472,55,0)
300^PV1^39^Invalid or missing STA3N
"DATA",404.472,56,0)
350^SCH^11^HL7 date is not in proper format or is missing
"DATA",404.472,57,0)
400^PID^7^DOB is misssing or invalid
"DATA",404.472,58,0)
450^SCH^11^Create Date or Appointment Date is missing
"DATA",404.472,59,0)
500^SCH^11^Creation date is before Sep 1st, 2002
"DATA",404.472,60,0)
550^SCH^8^Auto-rebook date and Appt Type are not in agreement
"DATA",404.472,60,"DESC",0)
^^1^1^3040126^
"DATA",404.472,60,"DESC",1,0)
Autorebook date requires SCH.8 Appt Type="ABK" and vice versa.
"DATA",404.472,61,0)
600^SCH^8^Rescheduled Date and Appt Type are not in agreement
"DATA",404.472,61,"DESC",0)
^^1^1^3040126^
"DATA",404.472,61,"DESC",1,0)
Rescheduled date requires SCH.8 Appt Type= 'RS' and vice versa.
"DATA",404.472,62,0)
650^SCH^7^Check out Date and Event Reason are not in agreement.
"DATA",404.472,62,"DESC",0)
^^1^1^3040126^
"DATA",404.472,62,"DESC",1,0)
Check out date requires either SCH.6 Event Reason='CO' or 'COE'.
"DATA",404.472,63,0)
700^SCH^7^Cancellation Date and Event REason are not in agreement
"DATA",404.472,63,"DESC",0)
^^1^1^3040126^
"DATA",404.472,63,"DESC",1,0)
Cancellation Date requires SCH.6 Event Reason='CC' or 'CP' or 'NS'.
"DATA",404.472,64,0)
750^sch^25^Event Reason and Filler Status are not in agreement.
"DATA",404.472,64,"DESC",0)
^^3^3^3040126^
"DATA",404.472,64,"DESC",1,0)
All SCH.6 Event Reason codes, except 'CI' require SCH.25 Filler status to 
"DATA",404.472,64,"DESC",2,0)
be 'F' - Final and accordingly only 'CI' and NULL should have SCH.25 
"DATA",404.472,64,"DESC",3,0)
Filler Status to be 'P' - Pending.
"DATA",404.472,65,0)
800^SCH^25^Filler Status is mssing or invalid.
"DATA",404.472,66,0)
R^BSH^11^Rejection code assigned if the whole batch is rejected.
"FIA",404.472)
PCMM HL7 ERROR CODE
"FIA",404.472,0)
^SCPT(404.472,
"FIA",404.472,0,0)
404.472
"FIA",404.472,0,1)
n^n^f^^y^^y^o^n
"FIA",404.472,0,10)

"FIA",404.472,0,11)

"FIA",404.472,0,"RLRO")

"FIA",404.472,0,"VR")
5.3^SD
"FIA",404.472,404.472)
0
"FIA",404.472,404.482)
0
"FIA",409.6)
PATIENT APPOINTMENT INFO LOG
"FIA",409.6,0)
^SDWL(409.6,
"FIA",409.6,0,0)
409.6D
"FIA",409.6,0,1)
y^y^f^^^^n
"FIA",409.6,0,10)

"FIA",409.6,0,11)

"FIA",409.6,0,"RLRO")

"FIA",409.6,0,"VR")
5.3^SD
"FIA",409.6,409.6)
0
"FIA",409.6,409.69)
0
"FIA",409.6,409.7)
0
"IX",409.6,409.6,"AC",0)
409.6^AC^XREF^R^^R^IR^W^409.69^^^^^S
"IX",409.6,409.6,"AC",1)
S ^SDWL(409.6,"AC",X(1),X(2),DA(1),DA)=""
"IX",409.6,409.6,"AC",2)
K ^SDWL(409.6,"AC",X(1),X(2),DA(1),DA)
"IX",409.6,409.6,"AC",2.5)
K ^SDWL(409.6,"AC")
"IX",409.6,409.6,"AC",11.1,0)
^.114IA^2^2
"IX",409.6,409.6,"AC",11.1,1,0)
1^F^409.69^.01^^1^F
"IX",409.6,409.6,"AC",11.1,1,3)

"IX",409.6,409.6,"AC",11.1,2,0)
2^F^409.69^1^^2^F
"IX",409.6,409.6,"AC",11.1,2,3)

"IX",409.6,409.6,"AE",0)
409.6^AE^RETENTION FLAGE XREF^R^^F^IR^W^409.69^^^^^S
"IX",409.6,409.6,"AE",1)
S ^SDWL(409.6,"AE",$E(X,1,1),DA(1),DA)=""
"IX",409.6,409.6,"AE",2)
K ^SDWL(409.6,"AE",$E(X,1,1),DA(1),DA)
"IX",409.6,409.6,"AE",2.5)
K ^SDWL(409.6,"AE")
"IX",409.6,409.6,"AE",11.1,0)
^.114IA^1^1
"IX",409.6,409.6,"AE",11.1,1,0)
1^F^409.69^4^1^1^F
"IX",409.6,409.6,"AE",11.1,1,3)

"IX",409.6,409.6,"AMSG",0)
409.6^AMSG^Message xref^R^^R^IR^W^409.69^^^^^S
"IX",409.6,409.6,"AMSG",1)
S ^SDWL(409.6,"AMSG",$E(X(1),1,30),$E(X(2),1,30),DA(1),DA)=""
"IX",409.6,409.6,"AMSG",2)
K ^SDWL(409.6,"AMSG",$E(X(1),1,30),$E(X(2),1,30),DA(1),DA)
"IX",409.6,409.6,"AMSG",2.5)
K ^SDWL(409.6,"AMSG")
"IX",409.6,409.6,"AMSG",11.1,0)
^.114IA^2^2
"IX",409.6,409.6,"AMSG",11.1,1,0)
1^F^409.69^2^30^1^F
"IX",409.6,409.6,"AMSG",11.1,1,3)

"IX",409.6,409.6,"AMSG",11.1,2,0)
2^F^409.69^3^30^2^F
"IX",409.6,409.6,"AMSG",11.1,2,3)

"KRN",.4,2394,-1)
0^2
"KRN",.4,2394,0)
SD-PAIT PATIENT PENDING APPT^3040122.2116^@^409.6^^@^3040127
"KRN",.4,2394,"F",2)
2,.01~2,1~2,5~2,8~2,9~
"KRN",.4,2394,"H")
PATIENT PENDING APPOINTMENT LOG
"KRN",.4,2395,-1)
0^5
"KRN",.4,2395,0)
SD-PAIT REJECTED APPT^3040129.1032^^409.6^^^3040223
"KRN",.4,2395,"F",1)
2,.01~2,1~2,-404.472,^SCPT(404.472,^^S I(1,0)=D1 S I(0,0)=D0 S DIP(1)=$S($D(^SDWL(409.6,D0,1,D1,0)):^(0),1:"") S X=$P(DIP(1),U,8),X=X S D(0)=+X;Z;"7:"~
"KRN",.4,2395,"F",2)
2,-404.472,.04~2,-404.472,S DIP(1)=$S($D(^SDWL(409.6,I(0,0),1,I(1,0),0)):^(0),1:"") S X=$P($G(^SCPT(404.472,+$P(DIP(1),U,8),0)),U) W X K DIP;Z;"ERROR MESSAGE"~
"KRN",.4,2395,"F",3)
2,-404.472,S DIP(1)=$S($D(^SDWL(409.6,I(0,0),1,I(1,0),0)):^(0),1:"") S X=$P($G(^SC(+$P(DIP(1),U,10),0)),U) W X K DIP;Z;"CLINIC"~
"KRN",.4,2395,"H")
PATIENT APPOINTMENT INFO LOG LIST
"KRN",.4,2403,-1)
0^1
"KRN",.4,2403,0)
SD-PAIT PAIT ACK SUMMARY^3040127.1409^@^409.6^^@^3040226
"KRN",.4,2403,"F",2)
3,.01~3,.03~3,.04~3,.05~
"KRN",.4,2403,"H")
PAIT ACK SUMMARY
"KRN",.4,2406,-1)
0^3
"KRN",.4,2406,0)
SD-PAIT TRANS SUMMARY^3040127.1347^@^409.6^^@^3040301
"KRN",.4,2406,"F",2)
.01~1.2~1.3~1.4;S~3,.01~3,.02~3,.03~
"KRN",.4,2406,"H")
PATIENT APPOINTMENT INFO LOG LIST
"KRN",.401,1667,-1)
0^3
"KRN",.401,1667,0)
SD-PAIT PEND EXCL FUTURE^3040127.1448^@^409.6^^@^3040127
"KRN",.401,1667,2,0)
^.4014^4^4
"KRN",.401,1667,2,1,0)
409.69^4^RETENTION FLAG^^^^^^^3
"KRN",.401,1667,2,1,1,0)
^.40141^1^1
"KRN",.401,1667,2,1,1,1,0)
409.6^1
"KRN",.401,1667,2,1,1,"B",409.6,1)

"KRN",.401,1667,2,1,"F")
Xz^Y^Y (YES - to be sent when 'Final')
"KRN",.401,1667,2,1,"GET")
S DISX(1)=$P($G(^SDWL(409.6,D0,1,D1,0)),U,5)
"KRN",.401,1667,2,1,"IX")
^SDWL(409.6,"AE",^SDWL(409.6,^2
"KRN",.401,1667,2,1,"QCON")
I DISX(1)="Y"
"KRN",.401,1667,2,1,"T")
Y^Y^Y (YES - to be sent when 'Final')
"KRN",.401,1667,2,1,"TXT")
RETENTION FLAG equals Y (YES - to be sent when 'Final')
"KRN",.401,1667,2,2,0)
409.69^6^DATE APPT MADE^^^^^^^1
"KRN",.401,1667,2,2,1,0)
^.40141^1^1
"KRN",.401,1667,2,2,1,1,0)
409.6^1
"KRN",.401,1667,2,2,1,"B",409.6,1)

"KRN",.401,1667,2,2,"F")
3020900.999999^Sep 1,2002^Sep 1,2002
"KRN",.401,1667,2,2,"GET")
S DISX(2)=$P($G(^SDWL(409.6,D0,1,D1,0)),U,7)
"KRN",.401,1667,2,2,"QCON")
I (DISX(2)]]3020900.999999)&(DISX(2)']]3040126.24)
"KRN",.401,1667,2,2,"T")
3040126.24^Jan 26,2004@2400^Jan 26,2004@24:00
"KRN",.401,1667,2,2,"TXT")
DATE APPT MADE from Sep 1,2002 to Jan 26,2004@24:00
"KRN",.401,1667,2,3,0)
409.69^8^APPOINTMENT TYPE^^^^^^^3
"KRN",.401,1667,2,3,1,0)
^.40141^1^1
"KRN",.401,1667,2,3,1,1,0)
409.6^1
"KRN",.401,1667,2,3,1,"B",409.6,1)

"KRN",.401,1667,2,3,"F")
?z^@
"KRN",.401,1667,2,3,"GET")
S DISX(3)=$P($G(^SDWL(409.6,D0,1,D1,0)),U,9)
"KRN",.401,1667,2,3,"QCON")
I 1
"KRN",.401,1667,2,3,"T")
z^
"KRN",.401,1667,2,3,"TXT")
All APPOINTMENT TYPE (includes nulls)
"KRN",.401,1667,2,4,0)
409.69^5^EVENT REASON^^^^^^^3
"KRN",.401,1667,2,4,1,0)
^.40141^1^1
"KRN",.401,1667,2,4,1,1,0)
409.6^1
"KRN",.401,1667,2,4,1,"B",409.6,1)

"KRN",.401,1667,2,4,"F")
?z^@
"KRN",.401,1667,2,4,"GET")
S DISX(4)=$P($G(^SDWL(409.6,D0,1,D1,0)),U,6)
"KRN",.401,1667,2,4,"QCON")
I 1
"KRN",.401,1667,2,4,"T")
z^
"KRN",.401,1667,2,4,"TXT")
All EVENT REASON (includes nulls)
"KRN",.401,1667,2,"B",409.69,1)

"KRN",.401,1667,2,"B",409.69,2)

"KRN",.401,1667,2,"B",409.69,3)

"KRN",.401,1667,2,"B",409.69,4)

"KRN",.401,1667,"%D",0)
^.4012^2^2^3040127^^
"KRN",.401,1667,"%D",1,0)
This template allows to print a list of pending appointments in the APPT 
"KRN",.401,1667,"%D",2,0)
DATE order, to be evaluated for possible finalizing.
"KRN",.401,1668,-1)
0^4
"KRN",.401,1668,0)
SD-PAIT REJECTED APPT^3040129.0955^@^409.6^^@^3040223
"KRN",.401,1668,2,0)
^.4014^3^3
"KRN",.401,1668,2,1,0)
409.69^^ERROR MESSAGE^"7^^^^^^4
"KRN",.401,1668,2,1,1,0)
^.40141^1^1
"KRN",.401,1668,2,1,1,1,0)
409.6^1
"KRN",.401,1668,2,1,1,"B",409.6,1)

"KRN",.401,1668,2,1,"CM")
S Y(1)=$S($D(^SDWL(409.6,D0,1,D1,0)):^(0),1:"") S X=$P($G(^SCPT(404.472,+$P(Y(1),U,8),0)),U) I D1>0 S DISX(1)=X
"KRN",.401,1668,2,1,"GET")
S Y(1)=$S($D(^SDWL(409.6,D0,1,D1,0)):^(0),1:"") S X=$P($G(^SCPT(404.472,+$P(Y(1),U,8),0)),U) I D1>0 S DISX(1)=X
"KRN",.401,1668,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,1668,2,1,"TXT")
ERROR MESSAGE not null
"KRN",.401,1668,2,2,0)
409.69^^PATIENT^".01^^^^^^4
"KRN",.401,1668,2,2,1,0)
^.40141^1^1
"KRN",.401,1668,2,2,1,1,0)
409.6^1
"KRN",.401,1668,2,2,1,"B",409.6,1)

"KRN",.401,1668,2,2,"CM")
S Y(1)=$S($D(^SDWL(409.6,D0,1,D1,0)):^(0),1:"") S X=$P($G(^DPT(+$P(Y(1),U,1),0)),U) I D1>0 S DISX(2)=X
"KRN",.401,1668,2,2,"GET")
S Y(1)=$S($D(^SDWL(409.6,D0,1,D1,0)):^(0),1:"") S X=$P($G(^DPT(+$P(Y(1),U,1),0)),U) I D1>0 S DISX(2)=X
"KRN",.401,1668,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,1668,2,2,"TXT")
PATIENT not null
"KRN",.401,1668,2,3,0)
409.69^1^APPT DATE^^^^^^^1
"KRN",.401,1668,2,3,1,0)
^.40141^1^1
"KRN",.401,1668,2,3,1,1,0)
409.6^1
"KRN",.401,1668,2,3,1,"B",409.6,1)

"KRN",.401,1668,2,3,"GET")
S DISX(3)=$P($G(^SDWL(409.6,D0,1,D1,0)),U,2)
"KRN",.401,1668,2,3,"QCON")
I DISX(3)'=""
"KRN",.401,1668,2,3,"TXT")
APPT DATE not null
"KRN",.401,1668,2,"B",409.69,1)

"KRN",.401,1668,2,"B",409.69,2)

"KRN",.401,1668,2,"B",409.69,3)

"KRN",.401,1668,"%D",0)
^.4012^2^2^3040129^^^^
"KRN",.401,1668,"%D",1,0)
This template will generate rejected appointments that are still in 
"KRN",.401,1668,"%D",2,0)
pending status, ready to be transmitted.
"KRN",.401,1685,-1)
0^2
"KRN",.401,1685,0)
SD-PAIT PAIT ACK SORT^3040127.1408^@^409.6^^@^3040226
"KRN",.401,1685,2,0)
^.4014^3^3
"KRN",.401,1685,2,1,0)
409.6^1.5^TRANSMISSION FINISHED^^^^^^^1
"KRN",.401,1685,2,1,"GET")
S DISX(1)=$P($G(^SDWL(409.6,D0,0)),U,7)
"KRN",.401,1685,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,1685,2,1,"SER")
0.0000^0.0000
"KRN",.401,1685,2,1,"TXT")
TRANSMISSION FINISHED not null
"KRN",.401,1685,2,2,0)
409.7^.01^BATCH CONTROL ID^^^^^^^4
"KRN",.401,1685,2,2,1,0)
^.40141^1^1
"KRN",.401,1685,2,2,1,1,0)
409.6^2
"KRN",.401,1685,2,2,1,"B",409.6,1)

"KRN",.401,1685,2,2,"GET")
S DISX(2)=$P($G(^SDWL(409.6,D0,2,D1,0)),U)
"KRN",.401,1685,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,1685,2,2,"TXT")
BATCH CONTROL ID not null
"KRN",.401,1685,2,3,0)
409.7^.03^MESSAGE CONTROL ID^^^^^^^4
"KRN",.401,1685,2,3,1,0)
^.40141^1^1
"KRN",.401,1685,2,3,1,1,0)
409.6^2
"KRN",.401,1685,2,3,1,"B",409.6,1)

"KRN",.401,1685,2,3,"GET")
S DISX(3)=$P($G(^SDWL(409.6,D0,2,D1,0)),U,3)
"KRN",.401,1685,2,3,"QCON")
I DISX(3)'=""
"KRN",.401,1685,2,3,"TXT")
MESSAGE CONTROL ID not null
"KRN",.401,1685,2,"B",409.6,1)

"KRN",.401,1685,2,"B",409.7,2)

"KRN",.401,1685,2,"B",409.7,3)

"KRN",.401,1687,-1)
0^7
"KRN",.401,1687,0)
SD-PAIT TRANS SUMMARY^3040127.1342^@^409.6^^@^3040301
"KRN",.401,1687,2,0)
^.4014^1^1
"KRN",.401,1687,2,1,0)
409.6^.01^RUN DATE^^^^^^^1
"KRN",.401,1687,2,1,"ASK")
1
"KRN",.401,1687,2,1,"F")
3040219.999999^Feb 20,2004^Feb 20,2004
"KRN",.401,1687,2,1,"GET")
S DISX(1)=$P($G(^SDWL(409.6,D0,0)),U)
"KRN",.401,1687,2,1,"IX")
^SDWL(409.6,"B",^SDWL(409.6,^2
"KRN",.401,1687,2,1,"QCON")
I DISX(1)]]3040219.999999
"KRN",.401,1687,2,1,"T")
z^
"KRN",.401,1687,2,1,"TXT")
RUN DATE from Feb 20,2004
"KRN",.401,1687,2,"B",409.6,1)

"KRN",19,12117,-1)
0^7
"KRN",19,12117,0)
SD-PAIT TASKED TRANSMISSION^Taskman PAIT Transmission^^R^^^^^^^^^^
"KRN",19,12117,1,0)
^^2^2^3040304^
"KRN",19,12117,1,1,0)
This is the non-interactive tasked background option to schedule PAIT 
"KRN",19,12117,1,2,0)
transmission.
"KRN",19,12117,20)

"KRN",19,12117,25)
START^SDRPA00
"KRN",19,12117,200.9)
y
"KRN",19,12117,"U")
TASKMAN PAIT TRANSMISSION
"KRN",19,12118,-1)
0^10
"KRN",19,12118,0)
SD-PAIT MANUAL TRANSMISSION^Manual Startup PAIT Transmission^^R^^^^^^^^
"KRN",19,12118,1,0)
^^1^1^3040304^
"KRN",19,12118,1,1,0)
This option may be used to start/queue PAIT manually.
"KRN",19,12118,25)
EN^SDRPA00
"KRN",19,12118,99)
59371,35194
"KRN",19,12118,"U")
MANUAL STARTUP PAIT TRANSMISSI
"KRN",19,12186,-1)
0^5
"KRN",19,12186,0)
SD-PAIT REPORTS^PAIT Reports Menu^^M^^^^^^^y^SCHEDULING
"KRN",19,12186,1,0)
^^1^1^3040304^
"KRN",19,12186,1,1,0)
This SD-PAIT top level report menu.
"KRN",19,12186,10,0)
^19.01IP^4^4
"KRN",19,12186,10,1,0)
12187
"KRN",19,12186,10,1,"^")
SD-PAIT PENDING
"KRN",19,12186,10,2,0)
12188
"KRN",19,12186,10,2,"^")
SD-PAIT REJECTED
"KRN",19,12186,10,3,0)
12195
"KRN",19,12186,10,3,"^")
SD-PAIT ACK SUMMARY
"KRN",19,12186,10,4,0)
12197
"KRN",19,12186,10,4,"^")
SD-PAIT TRANSMISSION SUMMARY
"KRN",19,12186,99)
59561,49946
"KRN",19,12186,"U")
PAIT REPORTS MENU
"KRN",19,12187,-1)
0^3
"KRN",19,12187,0)
SD-PAIT PENDING^Pending Transmissions^^P^^^^^^^^
"KRN",19,12187,1,0)
^19.06^3^3^3040304^^
"KRN",19,12187,1,1,0)
This option has to be used to take an action of finalizing appointments 
"KRN",19,12187,1,2,0)
with the appointment scheduled date already in the past. If the listed
"KRN",19,12187,1,3,0)
appointments are not sent again and will stay in the 409.6 file.
"KRN",19,12187,30)
SDWL(409.6,
"KRN",19,12187,60)
SDWL(409.6,
"KRN",19,12187,63)
[SD-PAIT PATIENT PENDING APPT]
"KRN",19,12187,64)
[SD-PAIT PEND EXCL FUTURE]
"KRN",19,12187,"U")
PENDING TRANSMISSIONS
"KRN",19,12188,-1)
0^4
"KRN",19,12188,0)
SD-PAIT REJECTED^Rejected Transmissions^^P^^^^^^^y^SCHEDULING
"KRN",19,12188,1,0)
^19.06^3^3^3040304^^^^
"KRN",19,12188,1,1,0)
This menu allows to print all currently rejected appointments with their 
"KRN",19,12188,1,2,0)
related error codes. If 'R' is printed intead of an error code then it 
"KRN",19,12188,1,3,0)
means that the whole batch was rejected.
"KRN",19,12188,30)
SDWL(409.6,
"KRN",19,12188,60)
SDWL(409.6,
"KRN",19,12188,63)
[SD-PAIT REJECTED APPT]
"KRN",19,12188,64)
[SD-PAIT REJECTED APPT]
"KRN",19,12188,99)
59561,52461
"KRN",19,12188,"U")
REJECTED TRANSMISSIONS
"KRN",19,12195,-1)
0^1
"KRN",19,12195,0)
SD-PAIT ACK SUMMARY^Acknowledgement Summary^^P^^^^^^^y^
"KRN",19,12195,1,0)
^^3^3^3040304^
"KRN",19,12195,1,1,0)
This report lists all batches in batch control ID order. The report also 
"KRN",19,12195,1,2,0)
indicates the Message Control ID, the Acknowledgement Date, and the 
"KRN",19,12195,1,3,0)
Acknowledgement Type.
"KRN",19,12195,30)
SDWL(409.6,
"KRN",19,12195,60)
SDWL(409.6,
"KRN",19,12195,63)
[SD-PAIT PAIT ACK SUMMARY
"KRN",19,12195,64)
[SD-PAIT PAIT ACK SORT]
"KRN",19,12195,99)
59556,65216
"KRN",19,12195,"U")
ACKNOWLEDGEMENT SUMMARY
"KRN",19,12197,-1)
0^8
"KRN",19,12197,0)
SD-PAIT TRANSMISSION SUMMARY^Transmission Summary^^P^^^^^^^^
"KRN",19,12197,1,0)
^^3^3^3040304^
"KRN",19,12197,1,1,0)
This option generate a detailed report for eatch transmission, with batch 
"KRN",19,12197,1,2,0)
control IDs, message control IDs, and date/time the batches were created.
"KRN",19,12197,1,3,0)
This option may be used for verification of batches recived by AAC. 
"KRN",19,12197,30)
SDWL(409.6,
"KRN",19,12197,60)
SDWL(409.6,
"KRN",19,12197,63)
[SD-PAIT TRANS SUMMARY]
"KRN",19,12197,64)
[SD-PAIT TRANS SUMMARY]
"KRN",19,12197,"U")
TRANSMISSION SUMMARY
"KRN",19,12204,-1)
0^9
"KRN",19,12204,0)
SD-PAIT MANUAL BATCH REJECT^Manual Batch Reject^^R^^^^^^^^
"KRN",19,12204,1,0)
^^6^6^3040304^
"KRN",19,12204,1,1,0)
This option allows to 'reject' a batch that was created and its all 
"KRN",19,12204,1,2,0)
records have to be retransmitted. The transmission date has to be enter 
"KRN",19,12204,1,3,0)
to proceed with this option. Only batch control ID numbers are accepted 
"KRN",19,12204,1,4,0)
that have not been acknowledged. More that one batch number can be 
"KRN",19,12204,1,5,0)
entered. After rejection the related recors will be sent with the 
"KRN",19,12204,1,6,0)
followed up transmission.
"KRN",19,12204,25)
SDRPA09
"KRN",19,12204,"U")
MANUAL BATCH REJECT
"KRN",101,4867,-1)
0^1
"KRN",101,4867,0)
SD-PAIT-EVENT^PAIT TRANSMISSION EVENT^^E^^^^^^^^
"KRN",101,4867,99)
59276,35601
"KRN",101,4867,770)
SD-SITE-PAIT^SD-AAC-PAIT^SIU^S12^^^SD-PAIT^AL^AL^2.4^ACK
"KRN",101,4867,771)

"KRN",101,4867,772)
D ACK^SDRPA06
"KRN",101,4867,773)
0^0
"KRN",101,4867,775,0)
^101.0775PA^1^1
"KRN",101,4867,775,1,0)
4868
"KRN",101,4867,775,1,"^")
SD-PAIT-SUBS
"KRN",101,4868,-1)
0^2
"KRN",101,4868,0)
SD-PAIT-SUBS^SC PAIT SUBSCRIBERS^^S^^^^^^^^
"KRN",101,4868,99)
59276,35964
"KRN",101,4868,770)
^SD-AAC-PAIT^^S12^^^SD-PAIT^^^^ACK
"KRN",101,4868,773)
1^1^0
"KRN",101,4868,774)

"MBREQ")
0
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813^2930824^10000000057
"PKG",16,22,1,"PAH",1,0)
333^3040308
"PKG",16,22,1,"PAH",1,1,0)
^^16^16^3040308
"PKG",16,22,1,"PAH",1,1,1,0)
This patch contains several enhancements and modifications to the
"PKG",16,22,1,"PAH",1,1,2,0)
Patient Appointment Information Transmission, originally released in 
"PKG",16,22,1,"PAH",1,1,3,0)
patch SD*5.3*290.
"PKG",16,22,1,"PAH",1,1,4,0)
 
"PKG",16,22,1,"PAH",1,1,5,0)
   - New components are added to SCH.11, SCH6, and SCH.7 segments of
"PKG",16,22,1,"PAH",1,1,6,0)
     HL7 transmission.
"PKG",16,22,1,"PAH",1,1,7,0)
   - The appointment selection logic for update runs has been modified.
"PKG",16,22,1,"PAH",1,1,8,0)
   - Rejection error codes have been expanded.
"PKG",16,22,1,"PAH",1,1,9,0)
   - Independent reports, reflecting the transmission status, have been 
"PKG",16,22,1,"PAH",1,1,10,0)
     developed by AAC and the Messaging and Interface Services Team.
"PKG",16,22,1,"PAH",1,1,11,0)
   - New report options added to print Transmission and Acknowledgement
"PKG",16,22,1,"PAH",1,1,12,0)
     Summaries.  
"PKG",16,22,1,"PAH",1,1,13,0)
   - Release Notes have been updated with additional, detailed
"PKG",16,22,1,"PAH",1,1,14,0)
     technical information.
"PKG",16,22,1,"PAH",1,1,15,0)
   - An expanded 409.6 file will permanently store detailed transmission
"PKG",16,22,1,"PAH",1,1,16,0)
     information.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","SDP333P")
0^8^B5309329
"RTN","SDP333P",1,0)
SDP333P ;bpiofo/swo sd*5.3*333 post init
"RTN","SDP333P",2,0)
 ;;5.3;Scheduling;**333**;July 23, 2003
"RTN","SDP333P",3,0)
 ;PAIT Clean-UP remove all entries from file 409.6
"RTN","SDP333P",4,0)
 I $P($G(^SDWL(409.6,0)),"^",4)=0 D  Q
"RTN","SDP333P",5,0)
 . W !,"File 409.6 has no entries - nothing to clean up."
"RTN","SDP333P",6,0)
 N DIR
"RTN","SDP333P",7,0)
 W !,"SD*5.3*333 POST INIT"
"RTN","SDP333P",8,0)
 S DIR(0)="YA^^",DIR("A")="Clean-Up file 409.6? ",DIR("B")="NO"
"RTN","SDP333P",9,0)
 S DIR("?")="If this is the first installation of the patch answer 'YES'"
"RTN","SDP333P",10,0)
 S DIR("?",1)="ATTENTION:  Answering 'YES' will delete all entries from file 409.6"
"RTN","SDP333P",11,0)
 S DIR("?",2)="(Patient Appointment Information Transmission).  This is CORRECT"
"RTN","SDP333P",12,0)
 S DIR("?",3)="for a first installation of the patch.  If you are re-installing the"
"RTN","SDP333P",13,0)
 S DIR("?",4)="patch and want to keep the entries in 409.6 answer 'NO'"
"RTN","SDP333P",14,0)
 D ^DIR Q:'Y
"RTN","SDP333P",15,0)
 S ZTDTH=$H,ZTRTN="START^SDP333P",ZTIO=""
"RTN","SDP333P",16,0)
 S ZTDESC="PAIT Clean-Up"
"RTN","SDP333P",17,0)
 K ZTSK D ^%ZTLOAD I '$D(ZTSK) D  Q
"RTN","SDP333P",18,0)
 . W !,"Failed to create Task!"
"RTN","SDP333P",19,0)
 W !,"PAIT Clean-UP Task Submitted.  Task number: "_$G(ZTSK)
"RTN","SDP333P",20,0)
 W !,"Members of the SD-PAIT mail group will receive a notification message"
"RTN","SDP333P",21,0)
 W !,"when the clean-up job has completed."
"RTN","SDP333P",22,0)
 Q
"RTN","SDP333P",23,0)
START ;tasked entry point
"RTN","SDP333P",24,0)
 N DA,DIK,SDV1
"RTN","SDP333P",25,0)
 S DIK="^SDWL(409.6,"
"RTN","SDP333P",26,0)
 S SDV1=0 F  S SDV1=$O(^SDWL(409.6,SDV1)) Q:'SDV1  D
"RTN","SDP333P",27,0)
 . S DA=SDV1 D ^DIK
"RTN","SDP333P",28,0)
 K DIK
"RTN","SDP333P",29,0)
MSG ;
"RTN","SDP333P",30,0)
 N SDAMX,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","SDP333P",31,0)
 S XMSUB=$P($$SITE^VASITE(),"^",3)_" PAIT Clean-Up"
"RTN","SDP333P",32,0)
 S XMY("G.SD-PAIT")=""
"RTN","SDP333P",33,0)
 S XMY("S.SD-PAIT-SERVER@FORUM.VA.GOV")=""
"RTN","SDP333P",34,0)
 S XMTEXT="SDAMX("
"RTN","SDP333P",35,0)
 S XMDUZ="POSTMASTER"
"RTN","SDP333P",36,0)
 S SDAMX(1)=""
"RTN","SDP333P",37,0)
 S SDAMX(2)="The PAIT Clean-Up, task #"_$G(ZTSK)_", from the post installation"
"RTN","SDP333P",38,0)
 S SDAMX(3)="of SD*5.3*333 has completed.  You may resume post installation activities."
"RTN","SDP333P",39,0)
 D ^XMD
"RTN","SDRPA00")
0^1^B80077482
"RTN","SDRPA00",1,0)
SDRPA00 ;BP-OIFO/OWAIN,ESW - Patient Appointment Information Transmission  ; 1/21/04 8:05am [3/3/04 5:22pm]
"RTN","SDRPA00",2,0)
 ;;5.3;Scheduling;**290,333**;Aug 13, 1993
"RTN","SDRPA00",3,0)
EN ;manual entry point
"RTN","SDRPA00",4,0)
 N SDI,Y,ZTSK,ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTSAVE,RUNID,REC
"RTN","SDRPA00",5,0)
 ; Insert checks that the run is not already underway and so on ...
"RTN","SDRPA00",6,0)
 ; If the job is queued or running, enforce changes via TASKMAN.
"RTN","SDRPA00",7,0)
 S RUNID=$O(^SDWL(409.6,":"),-1)
"RTN","SDRPA00",8,0)
 I RUNID S ZTSK=$P(^SDWL(409.6,RUNID,0),"^",2) D STAT^%ZTLOAD I ZTSK(1)=1!(ZTSK(1)=2) W !,"A task is currently active." Q
"RTN","SDRPA00",9,0)
 K ZTSK
"RTN","SDRPA00",10,0)
 S %DT("A")="Queue to run:  "
"RTN","SDRPA00",11,0)
 S %DT="AEFXR" W ! D ^%DT S DT=Y D:Y'=-1
"RTN","SDRPA00",12,0)
 .S ZTDTH=Y,ZTRTN="START^SDRPA00",ZTIO=""
"RTN","SDRPA00",13,0)
 .S ZTDESC="Patient Appointment Information Transmission."
"RTN","SDRPA00",14,0)
 .I RUNID I $P(^SDWL(409.6,RUNID,0),U,7)="" W !!,"The previous task has not finished....check TASKMAN. ",! Q
"RTN","SDRPA00",15,0)
 .F SDI=1:1:20 D ^%ZTLOAD Q:$G(ZTSK)
"RTN","SDRPA00",16,0)
 .W !,"Task # "_ZTSK_" queued!" ;esw
"RTN","SDRPA00",17,0)
 .Q
"RTN","SDRPA00",18,0)
 I '$G(ZTSK) W !!,"Extract not queued.",! Q
"RTN","SDRPA00",19,0)
 W !!,"Task number: ",ZTSK,!
"RTN","SDRPA00",20,0)
 Q
"RTN","SDRPA00",21,0)
START ;Tasked entry point.
"RTN","SDRPA00",22,0)
 N SDOUT,DFN,DFNEND,SDCNT,SDCNT0,RUNID,RUNDT,SDPREV,FIRST,SDDAM,TODAY,SD6A,SD8A,SD68,RUNIDP,SDPR
"RTN","SDRPA00",23,0)
 I $G(ZTSK)="" D  Q
"RTN","SDRPA00",24,0)
 . W !,"NOT AN INTERACTIVE OPTION...schedule through TaskMan",!!
"RTN","SDRPA00",25,0)
 S SDPR=$O(^SDWL(409.6,":"),-1) ;previous run
"RTN","SDRPA00",26,0)
 I SDPR I $P(^SDWL(409.6,SDPR,0),U,7)="" D  Q  ;
"RTN","SDRPA00",27,0)
 .;send mail message
"RTN","SDRPA00",28,0)
 .N SDAMX,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","SDRPA00",29,0)
 .S XMSUB="PAIT BACKGROUND JOB"
"RTN","SDRPA00",30,0)
 .S XMY("G.SD-PAIT")=""
"RTN","SDRPA00",31,0)
 .S XMTEXT="SDAMX("
"RTN","SDRPA00",32,0)
 .S XMDUZ="POSTMASTER"
"RTN","SDRPA00",33,0)
 .S SDAMX(1)=""
"RTN","SDRPA00",34,0)
 .S SDAMX(2)="The PAIT requested- TASK #: "_ZTSK_" has been terminated "
"RTN","SDRPA00",35,0)
 .S SDAMX(3)=""
"RTN","SDRPA00",36,0)
 .S SDAMX(4)="The previous transmission has not finished."
"RTN","SDRPA00",37,0)
 .S SDAMX(5)=""
"RTN","SDRPA00",38,0)
 .D ^XMD
"RTN","SDRPA00",39,0)
 ;
"RTN","SDRPA00",40,0)
 S DIC=409.6,DIC(0)="X"
"RTN","SDRPA00",41,0)
 D NOW^%DTC S TODAY=X
"RTN","SDRPA00",42,0)
 D FILE^DICN
"RTN","SDRPA00",43,0)
 S DA=+Y,DIE=DIC,DR="1///"_ZTSK D ^DIE
"RTN","SDRPA00",44,0)
 S (SDOUT,SDCNT)=0
"RTN","SDRPA00",45,0)
 K ^TMP("SDDPT",$J)
"RTN","SDRPA00",46,0)
 N CRUNID S CRUNID=$O(^SDWL(409.6,"AD",ZTSK,""))
"RTN","SDRPA00",47,0)
 S RUNDT=$P(^SDWL(409.6,CRUNID,0),"^")
"RTN","SDRPA00",48,0)
 I SDPR=0 S SDPREV=3020831,FIRST=1 ;first run
"RTN","SDRPA00",49,0)
 E  S SDPREV=$P(^SDWL(409.6,SDPR,0),U,4),FIRST=0 ;
"RTN","SDRPA00",50,0)
 N SDFIN,SDPEN,SDF,SDTR S (RUNID,SDFIN,SDPEN,SDTR,SDF)=0
"RTN","SDRPA00",51,0)
 S SDDAM=SDPREV ;creation date
"RTN","SDRPA00",52,0)
 D NOW^%DTC S TODAY=X
"RTN","SDRPA00",53,0)
 F  S SDDAM=$O(^DPT("ASADM",SDDAM)) Q:SDDAM=""  Q:SDDAM=TODAY!SDOUT  D
"RTN","SDRPA00",54,0)
 .N DFN S DFN=0
"RTN","SDRPA00",55,0)
 .F  S DFN=$O(^DPT("ASADM",SDDAM,DFN)) Q:+DFN'=DFN!SDOUT  D
"RTN","SDRPA00",56,0)
 ..N SDADT S SDADT=0 ;appt date/time
"RTN","SDRPA00",57,0)
 ..S SDADT=0
"RTN","SDRPA00",58,0)
 ..F  S SDADT=$O(^DPT("ASADM",SDDAM,DFN,SDADT)) Q:+SDADT'=SDADT!SDOUT  D
"RTN","SDRPA00",59,0)
 ...I SDDAM'=$$GET1^DIQ(2.98,SDADT_","_DFN_",",20,"I") Q  ;compare creation dates
"RTN","SDRPA00",60,0)
 ...; Check for 'stop task' request
"RTN","SDRPA00",61,0)
 ...S SDCNT=SDCNT+1 I SDCNT#500=0 S SDOUT=$$S^%ZTLOAD I SDOUT D  N SDBCID,SDMCID,SDSTOP D SNDS19^SDRPA07(ZTSK,.SDBCID,.SDMCID) S SDSTOP=1 D MSGT K ^TMP("SDDPT",$J) Q
"RTN","SDRPA00",62,0)
 ....N DA,DIE,DR,SDD D
"RTN","SDRPA00",63,0)
 ....S SDD=$O(^DPT("ASADM",SDDAM),-1)
"RTN","SDRPA00",64,0)
 ....S DA=CRUNID,DIE=409.6,DR="1.2///"_SDD D ^DIE
"RTN","SDRPA00",65,0)
 ...N SDCL,SDSTAT,SDSTTY
"RTN","SDRPA00",66,0)
 ...S SDCL=$$GET1^DIQ(2.98,SDADT_","_DFN_",",.01,"I")
"RTN","SDRPA00",67,0)
 ...Q:SDCL=""  ; If this happens, there's something wrong. Do we need to handle exceptions like this?
"RTN","SDRPA00",68,0)
 ...;
"RTN","SDRPA00",69,0)
 ...; Check status.
"RTN","SDRPA00",70,0)
 ...; If the appointment is terminated and it is the first run, do not send if the date apoinment made is more than 90 days old.
"RTN","SDRPA00",71,0)
 ...; If it is not the first run, send but don't create a pending file
"RTN","SDRPA00",72,0)
 ...; Otherwise add to pending file.
"RTN","SDRPA00",73,0)
 ...D NOW^%DTC S TODAY=X
"RTN","SDRPA00",74,0)
 ...S SDSTAT=$$STATUS^SDRPA05(DFN,SDADT,SDCL,TODAY,1)
"RTN","SDRPA00",75,0)
 ...I $P(SDSTAT,"^")=0 Q
"RTN","SDRPA00",76,0)
 ...N SDCLL S SDCLL=$P(SDSTAT,U,6) I SDCLL'="" S SDCL=SDCLL ;assign a new clinic if from matching non count with encounter
"RTN","SDRPA00",77,0)
 ...S SDSTTY=$P(SDSTAT,U,2),SD6A=$P(SDSTAT,U,3),SD8A=$P(SDSTAT,U,4)
"RTN","SDRPA00",78,0)
 ...I SDSTTY="F" Q:'$$GT90DAYS(SDDAM,3030831)  ; pending and final from 09/01/2003, previously 90 days
"RTN","SDRPA00",79,0)
 ...I SDSTTY="F",SD6A="NM",SD8A="NC" Q  ; skip non-count if not matching count and scheduled date already expired
"RTN","SDRPA00",80,0)
 ...N SDCOA,SDMSHA S SDCOA=$P(SDSTAT,U,5) S SDMSHA=$P(SDSTAT,U)
"RTN","SDRPA00",81,0)
 ...N SDCE Q:'$$DPT^SDRPA08(DFN,.SDCE)  ; Create demographic node of ^TMP file. Quit if this failed.
"RTN","SDRPA00",82,0)
 ...N DIC,DA,X,SDRET D
"RTN","SDRPA00",83,0)
 ....N SDRET S SDRET=$S(SDSTTY="F":"N",1:"Y")
"RTN","SDRPA00",84,0)
 ....S DIC="^SDWL(409.6,"_CRUNID_",1,",DA(1)=CRUNID,DIC("P")=409.69,DIC(0)="X"
"RTN","SDRPA00",85,0)
 ....S X=DFN D FILE^DICN
"RTN","SDRPA00",86,0)
 ....S DA=+Y,DIE=DIC,DR="1///"_SDADT_";4///"_SDRET_";5///"_SD6A_";6///"_SDDAM_";8///"_SD8A_";9////"_SDCL D ^DIE
"RTN","SDRPA00",87,0)
 ....Q
"RTN","SDRPA00",88,0)
 ...D APPT^SDRPA08(DFN,SDADT,$$DTCONV^SDRPA08(SDDAM),SDCL,SDSTAT)
"RTN","SDRPA00",89,0)
 ...S SDFF=$P(SDSTAT,"^",4) D STAT(SDSTTY,SDFF,.SDFIN,.SDPEN,.SDF)
"RTN","SDRPA00",90,0)
 ...S SDTR=SDTR+1 I SDTR=5000 D SNDS19^SDRPA07(ZTSK,.SDBCID,.SDMCID) K ^TMP("SDDPT",$J) S SDTR=0
"RTN","SDRPA00",91,0)
 Q:SDOUT
"RTN","SDRPA00",92,0)
 N SDD S SDD=$O(^DPT("ASADM",TODAY),-1) ;enter the last scanned day
"RTN","SDRPA00",93,0)
 S DA=CRUNID,DIE=409.6,DR="1.2///"_SDD D ^DIE
"RTN","SDRPA00",94,0)
 ; scan the previous runs
"RTN","SDRPA00",95,0)
 S RUNID=0
"RTN","SDRPA00",96,0)
 F  S RUNID=$O(^SDWL(409.6,RUNID)) Q:+RUNID=CRUNID!SDOUT  D
"RTN","SDRPA00",97,0)
 .N APPTID,SDADT,REC
"RTN","SDRPA00",98,0)
 .S APPTID=0
"RTN","SDRPA00",99,0)
 .;scanning only appointments that were sent as 'pending'
"RTN","SDRPA00",100,0)
 .F  S APPTID=$O(^SDWL(409.6,"AE","Y",RUNID,APPTID)) Q:APPTID=""!SDOUT  S REC=^SDWL(409.6,RUNID,1,APPTID,0),DFN=$P(REC,"^"),SDADT=$P(REC,"^",2) D
"RTN","SDRPA00",101,0)
 ..; Check for 'stop task' request
"RTN","SDRPA00",102,0)
 ..S SDCNT=SDCNT+1 I SDCNT#500=0 S SDOUT=$$S^%ZTLOAD I SDOUT N SDBCID,SDMCID,SDSTOP D SNDS19^SDRPA07(ZTSK,.SDBCID,.SDMCID) S SDSTOP=1 D MSGT K ^TMP("SDDPT",$J) Q  ;
"RTN","SDRPA00",103,0)
 ..N SDCL,SDCLO,SDCE,SDSTAT,SDREJ,SDDAM,SDDAMO
"RTN","SDRPA00",104,0)
 ..S SDCLO=$P(REC,"^",10)
"RTN","SDRPA00",105,0)
 ..S SDREJ=$P(REC,"^",8),SDDAMO=$P(REC,"^",7) ;esw
"RTN","SDRPA00",106,0)
 ..;evaluate if the same creation date
"RTN","SDRPA00",107,0)
 ..S SDDAM=$$GET1^DIQ(2.98,SDADT_","_DFN_",",20,"I")
"RTN","SDRPA00",108,0)
 ..S SDCL=$$GET1^DIQ(2.98,SDADT_","_DFN_",",.01,"I")
"RTN","SDRPA00",109,0)
 ..Q:SDCL=""  ; If this happens, there's something wrong. Do we need to handle exceptions like this?
"RTN","SDRPA00",110,0)
 ..; Check status. If it is a termination, continue.
"RTN","SDRPA00",111,0)
 ..I $D(^SDWL(409.6,"AC",DFN,SDADT,CRUNID)) D
"RTN","SDRPA00",112,0)
 ...S SDSTAT="S15"_U_"F"_U_"CT"_U_U_U_U_U,SDDAM=SDDAMO,SDCL=SDCLO
"RTN","SDRPA00",113,0)
 ..S SDSTAT=$$STATUS^SDRPA05(DFN,SDADT,SDCL,TODAY,0)
"RTN","SDRPA00",114,0)
 ..I $P(SDSTAT,"^")=0 Q
"RTN","SDRPA00",115,0)
 ..N SDCOA,SDMSHA S SDCOA=$P(SDSTAT,U,5) S SDMSHA=$P(SDSTAT,U),SD6A=$P(SDSTAT,U,3),SD8A=$P(SDSTAT,U,4)
"RTN","SDRPA00",116,0)
 ..N SDCLL S SDCLL=$P(SDSTAT,U,6) I SDCLL'="" S SDCL=SDCLL
"RTN","SDRPA00",117,0)
 ..S SDSTTY=$P(SDSTAT,U,2)
"RTN","SDRPA00",118,0)
 ..I SDSTTY="P"&(SDREJ="") Q  ;do not send in pending status if not rejected ;esw
"RTN","SDRPA00",119,0)
 ..N SDCE Q:'$$DPT^SDRPA08(DFN,.SDCE)  ; Create demographic node of ^TMP file. Quit if this failed.
"RTN","SDRPA00",120,0)
 ..N DIC,DA,X D
"RTN","SDRPA00",121,0)
 ...N SDRET S SDRET=$S(SDSTTY="F":"N",1:"Y")
"RTN","SDRPA00",122,0)
 ...S DIC="^SDWL(409.6,"_CRUNID_",1,",DA(1)=CRUNID,DIC("P")=409.69,DIC(0)="X"
"RTN","SDRPA00",123,0)
 ...S X=DFN D FILE^DICN
"RTN","SDRPA00",124,0)
 ...S DA=+Y,DIE=DIC,DA=+Y,DR="1///"_SDADT_";4///"_SDRET_";5///"_SD6A_";6///"_SDDAM_";8///"_SD8A_";9////"_SDCL D ^DIE
"RTN","SDRPA00",125,0)
 ...Q
"RTN","SDRPA00",126,0)
 ..N DIC,DA D
"RTN","SDRPA00",127,0)
 ...N SDRET S SDRET=$S(SDREJ'="":"R",SDSTTY="F":"S") ; indicates that it was: R - sent as rejected, S - sent as final
"RTN","SDRPA00",128,0)
 ...S DIC="^SDWL(409.6,"_RUNID_",1,",DA(1)=RUNID
"RTN","SDRPA00",129,0)
 ...S DA=APPTID,DIE=DIC,DR="4////"_SDRET D ^DIE
"RTN","SDRPA00",130,0)
 ...Q
"RTN","SDRPA00",131,0)
 ..D APPT^SDRPA08(DFN,SDADT,$$DTCONV^SDRPA08(SDDAM),SDCL,SDSTAT)
"RTN","SDRPA00",132,0)
 ..S SDFF=$P(SDSTAT,"^",4) D STAT(SDSTTY,SDFF,.SDFIN,.SDPEN,.SDF)
"RTN","SDRPA00",133,0)
 ..S SDTR=SDTR+1 I SDTR=5000 D SNDS19^SDRPA07(ZTSK,.SDBCID,.SDMCID) K ^TMP("SDDPT",$J) S SDTR=0
"RTN","SDRPA00",134,0)
 ..Q
"RTN","SDRPA00",135,0)
 .Q
"RTN","SDRPA00",136,0)
 Q:SDOUT
"RTN","SDRPA00",137,0)
 I $O(^TMP("SDDPT",$J,"")) D SNDS19^SDRPA07(ZTSK,.SDBCID,.SDMCID)
"RTN","SDRPA00",138,0)
 K ^TMP("SDDPT",$J)
"RTN","SDRPA00",139,0)
MSGT N SDTOT,SDB,SDTRF S SDTOT=SDPEN+SDFIN ;# of appointments
"RTN","SDRPA00",140,0)
 S SDB=SDTOT\5000 I SDTOT-(5000*SDB)>0 S SDB=SDB+1 ;# of batches
"RTN","SDRPA00",141,0)
 N NOW S NOW=$$NOW^XLFDT S SDTRF=$$FMTE^XLFDT(NOW,2),SDTRF=$P(SDTRF,":",1,2)
"RTN","SDRPA00",142,0)
 N DA,DIE,DR D
"RTN","SDRPA00",143,0)
 .S DA=CRUNID,DIE=409.6,DR="1.3///"_SDTOT_";1.4///"_SDB_";1.5///"_NOW D ^DIE
"RTN","SDRPA00",144,0)
 N SDS,SDSTAT,SDIP,SDAR,SDAP,SDMT,SDMS,SD870
"RTN","SDRPA00",145,0)
 H 60 ; wait to complete transmisssion
"RTN","SDRPA00",146,0)
 ;SDS - STATION #
"RTN","SDRPA00",147,0)
 ;SDSTAT - SD-PAIT STATUS
"RTN","SDRPA00",148,0)
 ;SDAIP  - IP ADDRESS
"RTN","SDRPA00",149,0)
 ;SDAR   - COMMIT ACK RECEIVED
"RTN","SDRPA00",150,0)
 ;SDAP   - COMMIT ACK PROCESSED
"RTN","SDRPA00",151,0)
 ;SDMT   - MESSAGES (BATCHES) TO SEND
"RTN","SDRPA00",152,0)
 ;SDMS   - MESSAGES (BATCHES) SENT
"RTN","SDRPA00",153,0)
 S SD870=$O(^HLCS(870,"B","SD-PAIT",""))
"RTN","SDRPA00",154,0)
 N ARRAY D GETS^DIQ(870,SD870_",","4;5;6;7;8;400.01","I","ARRAY")
"RTN","SDRPA00",155,0)
 N SD87 S SD87=SD870_","
"RTN","SDRPA00",156,0)
 S SDSTAT=ARRAY(870,SD87,4,"I")
"RTN","SDRPA00",157,0)
 S SDAR=ARRAY(870,SD87,5,"I")
"RTN","SDRPA00",158,0)
 S SDAP=ARRAY(870,SD87,6,"I")
"RTN","SDRPA00",159,0)
 S SDMS=ARRAY(870,SD87,7,"I")
"RTN","SDRPA00",160,0)
 S SDMT=ARRAY(870,SD87,8,"I")
"RTN","SDRPA00",161,0)
 S SDIP=ARRAY(870,SD87,400.01,"I")
"RTN","SDRPA00",162,0)
 S SDS=$P($$SITE^VASITE(),"^",3)
"RTN","SDRPA00",163,0)
 ;S SDS=$E($O(^SDWL(409.6,"AMSG","")),1,3)
"RTN","SDRPA00",164,0)
MSG ;send mail message
"RTN","SDRPA00",165,0)
 N SDAMX,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","SDRPA00",166,0)
 S XMSUB=$G(SDS)_" - PAIT BACKGROUND JOB"
"RTN","SDRPA00",167,0)
 S XMY("G.SD-PAIT")=""
"RTN","SDRPA00",168,0)
 S XMY("S.SD-PAIT-SERVER@FORUM.VA.GOV")=""
"RTN","SDRPA00",169,0)
 S XMTEXT="SDAMX("
"RTN","SDRPA00",170,0)
 S XMDUZ="POSTMASTER"
"RTN","SDRPA00",171,0)
 S SDAMX(1)=""
"RTN","SDRPA00",172,0)
 S SDAMX(2)="The PAIT job has completed - TASK #: "_ZTSK_" Log #: "_CRUNID_" on "_SDTRF
"RTN","SDRPA00",173,0)
 S SDAMX(3)=""
"RTN","SDRPA00",174,0)
 S SDAMX(4)="Pending appointments: "_$J(SDPEN,10)
"RTN","SDRPA00",175,0)
 S SDAMX(5)="Final appointments:   "_$J(SDFIN,10)
"RTN","SDRPA00",176,0)
 S SDAMX(6)="                       ----------"
"RTN","SDRPA00",177,0)
 S SDAMX(7)="Total appointments:   "_$J(SDTOT,10)_"   Number of batches: "_SDB
"RTN","SDRPA00",178,0)
 S SDAMX(8)=""
"RTN","SDRPA00",179,0)
 S SDAMX(9)="Fac Log Bch Appt #  Date finished  IP Address  Gen  Sent Com R Com P  Status"
"RTN","SDRPA00",180,0)
 S SDAMX(10)="-----------------------------------------------------------------------"
"RTN","SDRPA00",181,0)
 S SDAMX(11)=SDS_"|"_$J(CRUNID,3)_"|"_$J(SDB,3)_"|"_$J(SDTOT,7)_"|"_SDTRF_"|"_$J(SDIP,11)_"|"_$J(SDMT,4)_"|"_$J(SDMS,4)_"|"_$J(SDAR,4)_"|"_$J(SDAP,4)_"| "_SDSTAT
"RTN","SDRPA00",182,0)
 S SDAMX(12)=""
"RTN","SDRPA00",183,0)
 I $G(SDSTOP) S SDAMX(13)="WARNING: TASK STOPPED BY USER." D ^XMD Q
"RTN","SDRPA00",184,0)
 I (SDMT-SDMS)=0 D  D ^XMD Q
"RTN","SDRPA00",185,0)
 .S SDAMX(13)="SUCCESS: Transmission completed."
"RTN","SDRPA00",186,0)
 E  I (SDMT-SDMS)<SDB S SDAMX(13)="WARNING: "_(SDMT-SDMS)_" out of "_SDB_" batches have to be still transmitted." D ^XMD Q
"RTN","SDRPA00",187,0)
 S XMY("VHACIONHD@MED.VA.GOV")=""
"RTN","SDRPA00",188,0)
 S SDAMX(14)="            National Help Desk has been notified."
"RTN","SDRPA00",189,0)
 I (SDMT-SDMS)'<SDB D
"RTN","SDRPA00",190,0)
 .S SDAMX(13)="WARNING!!!: Transmission has failed."
"RTN","SDRPA00",191,0)
 D ^XMD
"RTN","SDRPA00",192,0)
 K ^TMP("SDDPT",$J)
"RTN","SDRPA00",193,0)
 Q
"RTN","SDRPA00",194,0)
 ;
"RTN","SDRPA00",195,0)
GT90DAYS(X1,X2) ; Date is older than Sep 1st 2003, see specs.
"RTN","SDRPA00",196,0)
 ; X1 - creation date. More efficient to have it set at the top instead of every time this subroutine is called.
"RTN","SDRPA00",197,0)
 ; X2 - comparison date, now sent as Sep 1 2003, both in Vista format cyymmdd
"RTN","SDRPA00",198,0)
 D ^%DTC
"RTN","SDRPA00",199,0)
 Q X>0  ;
"RTN","SDRPA00",200,0)
 ;
"RTN","SDRPA00",201,0)
STAT(SDSTTY,SDFF,SDFIN,SDPEN,SDF) ;summarize pending and finals
"RTN","SDRPA00",202,0)
 I SDSTTY="F" S SDFIN=SDFIN+1 Q
"RTN","SDRPA00",203,0)
 I SDSTTY="P" S SDPEN=SDPEN+1 I SDFF="F" S SDF=SDF+1
"RTN","SDRPA00",204,0)
 Q
"RTN","SDRPA05")
0^5^B22064423
"RTN","SDRPA05",1,0)
SDRPA05 ;BP-OIFO/ESW - Evaluate appointment status for HL7  ; 1/5/04 6:10pm [3/1/04 2:54pm]
"RTN","SDRPA05",2,0)
 ;;5.3;Scheduling;**290,333**;AUG 13, 2003
"RTN","SDRPA05",3,0)
 ;Evaluation of the appointment status is done from the computed field to match the displayed/printed status in the appointment management
"RTN","SDRPA05",4,0)
 Q
"RTN","SDRPA05",5,0)
 ;
"RTN","SDRPA05",6,0)
STATUS(DFN,SDADT,SDCL,TODAY,SDF) ;
"RTN","SDRPA05",7,0)
 ;Input:
"RTN","SDRPA05",8,0)
 ;      SDADT - Appt date/time
"RTN","SDRPA05",9,0)
 ;      SDCL  - Clinic IEN
"RTN","SDRPA05",10,0)
 ;      SDF:   - 0 - if called from scanning previous runs - update
"RTN","SDRPA05",11,0)
 ;             - 1 - if called from scanning 2.98
"RTN","SDRPA05",12,0)
 ;Output: 
"RTN","SDRPA05",13,0)
 ;       SDSTAT=SDMSH_U_SD25_U_SD6_U_SD8_U_SDCO_U_SDCLL_U_SD8RD
"RTN","SDRPA05",14,0)
 ;        where:
"RTN","SDRPA05",15,0)
 ;              SDMSH -HL7 segment
"RTN","SDRPA05",16,0)
 ;              SD25  - Filler Status:
"RTN","SDRPA05",17,0)
 ;                                    P - Pending
"RTN","SDRPA05",18,0)
 ;                                    F - Final
"RTN","SDRPA05",19,0)
 ;              SD6   - Event Reason
"RTN","SDRPA05",20,0)
 ;              SD8   - Appt Type
"RTN","SDRPA05",21,0)
 ;              SD8RD - rescheduled date/time if SD8="RS"
"RTN","SDRPA05",22,0)
 ;              SDCO  - check out date
"RTN","SDRPA05",23,0)
 ;              SDCLL - clinic IEN from matching encounter
"RTN","SDRPA05",24,0)
 ;
"RTN","SDRPA05",25,0)
 N SD0,SDST,SD6,SD8,SD25,SDMSH,SDCO,SDSTAT,SD8S,SD8RD
"RTN","SDRPA05",26,0)
 S SDST=$$GET1^DIQ(2.98,SDADT_","_DFN_",",3,"I")
"RTN","SDRPA05",27,0)
 I SDST'="" I SDST'="NT"&(SDST'="I") D  Q SDSTAT
"RTN","SDRPA05",28,0)
 .S SD25="F",SDCO="",SD8RD=""
"RTN","SDRPA05",29,0)
 .I SDST="C" S SD6="CC",SD8="",SDMSH="S15" D  ;cancel by clinic
"RTN","SDRPA05",30,0)
 ..S SD8S=$$SCHEDULE(DFN,SDCL,SDADT),SD8=$P(SD8S,U),SD8RD=$P(SD8S,U,2)
"RTN","SDRPA05",31,0)
 .I SDST="CA" S SD6="CC",SD8="ABK",SDMSH="S15" ;cancel bt clinic and auto rebook
"RTN","SDRPA05",32,0)
 .I SDST="PC" S SD6="CP",SD8="",SDMSH="S15" D  ; cancel by patient
"RTN","SDRPA05",33,0)
 ..S SD8S=$$SCHEDULE(DFN,SDCL,SDADT),SD8=$P(SD8S,U),SD8RD=$P(SD8S,U,2)
"RTN","SDRPA05",34,0)
 .I SDST="PCA" S SD6="CP",SD8="ABK",SDMSH="S15" ;cancel by patient and auto rebook
"RTN","SDRPA05",35,0)
 .I SDST="NA" S SD6="NS",SD8="ABK",SDMSH="S26" ;no show and auto rebook
"RTN","SDRPA05",36,0)
 .I SDST="N" S SD6="NS",SD8="",SDMSH="S26" ;no show
"RTN","SDRPA05",37,0)
 .S SDSTAT=SDMSH_U_SD25_U_SD6_U_SD8_U_SDCO_U_U_SD8RD
"RTN","SDRPA05",38,0)
 ;process all others
"RTN","SDRPA05",39,0)
 S SD0=^DPT(DFN,"S",SDADT,0)
"RTN","SDRPA05",40,0)
 ; check out from OUTPAT ENCOUNTER
"RTN","SDRPA05",41,0)
 N SCE S SCE=$P(SD0,"^",20) S SDCO="" I SCE>0 S SDCO=$P(^SCE(SCE,0),"^",7)
"RTN","SDRPA05",42,0)
 N SDSTATX,SDX3
"RTN","SDRPA05",43,0)
 S SDSTATX=$$STATUS^SDAM1(DFN,SDADT,SDCL,SD0) ;call to compute the status (VistA)
"RTN","SDRPA05",44,0)
 ;SDSTATX=Appt status IFN in 409.63 ; status name ; print status ; check in ; check out 
"RTN","SDRPA05",45,0)
 I SDCO="" S SDCO=$P(SDSTATX,";",5) ; check out from clinic if NULL
"RTN","SDRPA05",46,0)
 I SDCO'=""&(+SDSTATX'=12) D  Q SDSTAT
"RTN","SDRPA05",47,0)
 .S SD6="CO",SD25="F",SD8="",SD8RD="",SDMSH=$S(SDF=0:"S14",1:"S12")
"RTN","SDRPA05",48,0)
 .I +SDSTATX=3 S SD8="AR" ; action required
"RTN","SDRPA05",49,0)
 .I +SDSTATX=8 S SD8="I" ;inpatient
"RTN","SDRPA05",50,0)
 .;I +SDSTATX=12 S SD8="NC" ;non-count excluded to be compared to possible encounter does not matter if check out
"RTN","SDRPA05",51,0)
 .I +SDSTATX=2 S SD8="O" ;outpatient
"RTN","SDRPA05",52,0)
 .S SDSTAT=SDMSH_U_SD25_U_SD6_U_SD8_U_SDCO_U_U_SD8RD
"RTN","SDRPA05",53,0)
 I +SDSTATX=3 D  Q SDSTAT
"RTN","SDRPA05",54,0)
 .S SD25="P",SDMSH="S12",SDCO="",SD8RD=""
"RTN","SDRPA05",55,0)
 .I $P(SDSTATX,";",4)'="" S SD6="CI",SD8="AR" ;check in/action required
"RTN","SDRPA05",56,0)
 .E  S SD6="",SD8="NAT",SD8RD="" ;no action taken
"RTN","SDRPA05",57,0)
 .S SDSTAT=SDMSH_U_SD25_U_SD6_U_SD8_U_SDCO_U_U_SD8RD
"RTN","SDRPA05",58,0)
 I +SDSTATX=8!(+SDSTATX=11) S SD25="P",SD8RD="" D  Q SDSTAT
"RTN","SDRPA05",59,0)
 .I +SDSTATX=8 S SD6="",SD8="I",SDCO="",SDMSH="S12" ;inpatient
"RTN","SDRPA05",60,0)
 .I +SDSTATX=11 S SD6="",SD8="F",SDCO="",SDMSH="S12" ;future
"RTN","SDRPA05",61,0)
 .S SDSTAT=SDMSH_U_SD25_U_SD6_U_SD8_U_SDCO_U_U_SD8RD
"RTN","SDRPA05",62,0)
 ;
"RTN","SDRPA05",63,0)
 ;process non-count (not checked out)
"RTN","SDRPA05",64,0)
 I +SDSTATX=12 N SDCLL S SDCLL="" D  S:SD6'="COE" SDCLL=SDCL S SDSTAT=SDMSH_U_SD25_U_SD6_U_SD8_U_SDCO_U_SDCLL Q SDSTAT
"RTN","SDRPA05",65,0)
 .S SD6="",SD8="NC",SDCO="",SDMSH="S12",SD25="P"
"RTN","SDRPA05",66,0)
 .I (SDADT\1)-(TODAY\1)>0 S SD6="",SD8="NCF",SD25="P" Q
"RTN","SDRPA05",67,0)
 .N SDADTC,SDSCE,SDADTCK S SDADTC=(SDADT\1)-1+.99,SDADTCK=SDADTC+1 F  D  Q:'SDSCE!(SD6="COE")
"RTN","SDRPA05",68,0)
 ..S SDSCE=$$EXAE^SDOE(DFN,SDADTC,SDADTCK)
"RTN","SDRPA05",69,0)
 ..I SDSCE>1 N SDDATA D GETGEN^SDOE(SDSCE,"SDDATA") D
"RTN","SDRPA05",70,0)
 ...N SDCL0,SDCL1,SDCL2
"RTN","SDRPA05",71,0)
 ...S SDCLL=$P(SDDATA(0),"^",4) I $P(^SC(SDCLL,0),"^",17)="Y" D  Q
"RTN","SDRPA05",72,0)
 ....S SDADTC=$P(^SCE(SDSCE,0),"^")+.000001 ;
"RTN","SDRPA05",73,0)
 ...S SDCL0=$P(^SC(SDCL,0),"^",7)_$P(^SC(SDCL,0),"^",18)
"RTN","SDRPA05",74,0)
 ...S SDCL2=$P(^SC(SDCLL,0),"^",7)_$P(^SC(SDCLL,0),"^",18)
"RTN","SDRPA05",75,0)
 ...I SDCL0'=SDCL2 S SDADTC=$P(^SCE(SDSCE,0),"^")+.000001 Q
"RTN","SDRPA05",76,0)
 ...; proceed if the same DSS IDs pairs
"RTN","SDRPA05",77,0)
 ...S SDCO=$P(SDDATA(0),"^",7)
"RTN","SDRPA05",78,0)
 ...I SDCO'="" S SD6="COE",SD25="F",SDMSH=$S(SDF=0:"S14",1:"S12") Q
"RTN","SDRPA05",79,0)
 ...;encounter exists but not in final (chek out) status
"RTN","SDRPA05",80,0)
 ...S SDADTC=$P(^SCE(SDSCE,0),"^")+.000001
"RTN","SDRPA05",81,0)
 .I SD6="COE" Q
"RTN","SDRPA05",82,0)
 .;check out by matching encounter
"RTN","SDRPA05",83,0)
 .E  I ((TODAY\1)-(SDADT\1))>2 D   ;give 2 days to update
"RTN","SDRPA05",84,0)
 ..S SD6="NM",SD25="F",SDMSH=$S(SDF=0:"S14",1:0) ;no match, to be skipped
"RTN","SDRPA05",85,0)
 Q 0
"RTN","SDRPA05",86,0)
 ;
"RTN","SDRPA05",87,0)
SCHEDULE(DFN,SDCL,SDADT) ; Scheduling flag
"RTN","SDRPA05",88,0)
 ; If the patient has another appointment created on the same day as the cancellation date of the calceled appt, and that
"RTN","SDRPA05",89,0)
 ; appointment is created for a clinic with the same stop code then return "RS".
"RTN","SDRPA05",90,0)
 ; If there is not another appointment made on the same day, return "".
"RTN","SDRPA05",91,0)
 N SDCDT,SDCLN S SDCDT=$$GET1^DIQ(2.98,SDADT_","_DFN_",",15,"I") ;cancellation date
"RTN","SDRPA05",92,0)
 Q:'SDCDT ""
"RTN","SDRPA05",93,0)
 N SDCDTI S SDCDTI=SDCDT\1
"RTN","SDRPA05",94,0)
 N SDRESCH S SDRESCH=""
"RTN","SDRPA05",95,0)
 N SDAPDT S SDAPDT="" F  S SDAPDT=$O(^DPT("ASADM",SDCDTI,DFN,SDAPDT)) Q:SDAPDT=""  D  Q:SDRESCH'=""
"RTN","SDRPA05",96,0)
 .S SDCLN=+$P(^DPT(DFN,"S",SDAPDT,0),U) I $P(^SC(SDCLN,0),"^",7)=$P(^SC(SDCL,0),"^",7) S SDRESCH="RS"_"^"_SDAPDT ;compare stop code pointers
"RTN","SDRPA05",97,0)
 S:SDRESCH="" SDRESCH="^" Q SDRESCH
"RTN","SDRPA06")
0^3^B53243846
"RTN","SDRPA06",1,0)
SDRPA06 ;bp-oifo/swo pait hl7 ack handling [1/20/04 3:41pm]
"RTN","SDRPA06",2,0)
 ;;5.3;Scheduling;**290,333**;AUG 13, 1993
"RTN","SDRPA06",3,0)
 ;routine called from Vista HL7 when ack messages are received in response
"RTN","SDRPA06",4,0)
 ;to an out going HL7 message generated by protocol SC-PAIT-EVENT
"RTN","SDRPA06",5,0)
ACK ;entry point from Vista HL7
"RTN","SDRPA06",6,0)
 ;ACKDATE   :  date/time ack received
"RTN","SDRPA06",7,0)
 ;FLDSEP    :  field seperator
"RTN","SDRPA06",8,0)
 ;CMPNTSEP  :  component seperator
"RTN","SDRPA06",9,0)
 ;REPTNSEP  :  repetition seperator
"RTN","SDRPA06",10,0)
 ;ACKCODE   :  acknowledgement code
"RTN","SDRPA06",11,0)
 ;ERROR     :  reject reason
"RTN","SDRPA06",12,0)
 ;BATCHID   :  batch control ID
"RTN","SDRPA06",13,0)
 ;BATCHIDO  :  original batch control ID
"RTN","SDRPA06",14,0)
 N ACKCODE,ACKDATE,BATCHID,BATCHIDO,CMPNTSEP,ERROR,FLDSEP,REPTNSEP,RUNIEN,SDZAP,V1
"RTN","SDRPA06",15,0)
 K ^TMP("SDRPA06",$J)
"RTN","SDRPA06",16,0)
 S SDZAP=0
"RTN","SDRPA06",17,0)
 S ACKDATE=$$NOW^XLFDT()
"RTN","SDRPA06",18,0)
 S FLDSEP=HL("FS")
"RTN","SDRPA06",19,0)
 S CMPNTSEP=$E(HL("ECH"),1)
"RTN","SDRPA06",20,0)
 S REPTNSEP=$E(HL("ECH"),2)
"RTN","SDRPA06",21,0)
 S ACKCODE=$P(HLMSA,FLDSEP)
"RTN","SDRPA06",22,0)
 S ERROR=$P(HLMSA,FLDSEP,4)
"RTN","SDRPA06",23,0)
 S (BATCHID,BATCHIDO)=$P(HLMSA,FLDSEP,2)
"RTN","SDRPA06",24,0)
 S BATCHID=$$OURB(BATCHID) ;convert to our batch id
"RTN","SDRPA06",25,0)
 Q:BATCHID=""  ;error needs to be handled
"RTN","SDRPA06",26,0)
 S V1=$O(^SDWL(409.6,"AMSG",BATCHID,"")),RUNIEN=$O(^SDWL(409.6,"AMSG",BATCHID,V1,""))
"RTN","SDRPA06",27,0)
 S ^XTMP("SDRPA-"_BATCHID,0)=$$FMADD^XLFDT($$DT^XLFDT(),3)_"^"_$$DT^XLFDT() ;set xtmp global for diagnostics
"RTN","SDRPA06",28,0)
 I $E(ACKCODE,1,2)="AR" D AR(BATCHID,BATCHIDO),MSG(BATCHIDO,3,RUNIEN,BATCHID) Q  ;whole batch rejection
"RTN","SDRPA06",29,0)
 ;Q:($E(ACKCODE,1,2)'="AA")  ;quit if not a application ack
"RTN","SDRPA06",30,0)
 ;will only be 2 ACKCODEs AA and AE so don't have to screen anymore
"RTN","SDRPA06",31,0)
 F  X HLNEXT Q:(HLQUIT'>0)  D  ;start looping the msg text
"RTN","SDRPA06",32,0)
 . Q:($E(HLNODE,1,3)'="MSA")  ;skip if not a MSA segment
"RTN","SDRPA06",33,0)
 . I $P(HLNODE,FLDSEP,2)="AE" D  ;it's an error
"RTN","SDRPA06",34,0)
 .. Q:($P($P(HLNODE,FLDSEP,3),"-",2))=""  ;no message number
"RTN","SDRPA06",35,0)
 .. S ^TMP("SDRPA06",$J,+$P($P(HLNODE,FLDSEP,3),"-",2))=+$P(HLNODE,"^",4) ;set xref with message #
"RTN","SDRPA06",36,0)
 I '$D(^TMP("SDRPA06",$J)) D AA(BATCHID,BATCHIDO),MSG(BATCHIDO,2,RUNIEN,BATCHID) Q  ;whole batch accept
"RTN","SDRPA06",37,0)
 D AAAR(BATCHID,BATCHIDO),MSG(BATCHIDO,1,RUNIEN,BATCHID) ;batch accept with errors   
"RTN","SDRPA06",38,0)
 Q
"RTN","SDRPA06",39,0)
AR(BATCH,BATCHIDO) ;whole batch rejection
"RTN","SDRPA06",40,0)
 ;BATCH    :  originating batch number
"RTN","SDRPA06",41,0)
 ;BATCHIDO :  original batch number from HL7 ACK
"RTN","SDRPA06",42,0)
 ;V1       :  sequence #  (individual message number in batch)
"RTN","SDRPA06",43,0)
 ;V2       :  run #       (ien of multiple entry)
"RTN","SDRPA06",44,0)
 ;V3       :  ien         (ien in patient multiple)
"RTN","SDRPA06",45,0)
 ;V4       :  ien         (ien batch tracking multiple)
"RTN","SDRPA06",46,0)
 Q:($G(BATCH)="")
"RTN","SDRPA06",47,0)
 N DA,DIE,DR,V1,V2,V3,V4,ZNODE
"RTN","SDRPA06",48,0)
 S V1=0
"RTN","SDRPA06",49,0)
 F  S V1=$O(^SDWL(409.6,"AMSG",BATCH,V1)) Q:'V1  D
"RTN","SDRPA06",50,0)
 . S V2=$O(^SDWL(409.6,"AMSG",BATCH,V1,"")) Q:'V2
"RTN","SDRPA06",51,0)
 . ;batch tracking enhancement
"RTN","SDRPA06",52,0)
 . S V4=$O(^SDWL(409.6,V2,2,"B",BATCHIDO,"")) Q:'V4  D
"RTN","SDRPA06",53,0)
 .. S DA=V4,DA(1)=V2,DIE="^SDWL(409.6,"_V2_",2,",DR=".04///"_$$NOW^XLFDT_";.05///"_ACKCODE
"RTN","SDRPA06",54,0)
 .. D ^DIE K DIE
"RTN","SDRPA06",55,0)
 . S V3=0 F  S V3=$O(^SDWL(409.6,"AMSG",BATCH,V1,V2,V3)) Q:'V3  D
"RTN","SDRPA06",56,0)
 .. S ZNODE=$G(^SDWL(409.6,V2,1,V3,0)) Q:ZNODE=""
"RTN","SDRPA06",57,0)
 .. ;4TH PIECE IS MESSAGE NUMBER
"RTN","SDRPA06",58,0)
 .. S DA=V3,DA(1)=V2,DIE="^SDWL(409.6,"_V2_",1,"
"RTN","SDRPA06",59,0)
 .. S DR="7////"_$O(^SCPT(404.472,"B","R","")) D ^DIE
"RTN","SDRPA06",60,0)
 .. I $D(^SDWL(409.6,"AE","Y",V2,V3)) Q
"RTN","SDRPA06",61,0)
 .. I $D(^SDWL(409.6,"AE","N",V2,V3)) D
"RTN","SDRPA06",62,0)
 ... S DR="4///Y" D ^DIE
"RTN","SDRPA06",63,0)
 D:+$G(V2) CLEAN(V2)
"RTN","SDRPA06",64,0)
 Q
"RTN","SDRPA06",65,0)
AA(BATCH,BATCHIDO) ;whole batch accept
"RTN","SDRPA06",66,0)
 ;if the batch is accepted and no rejections then get the run # sequence #
"RTN","SDRPA06",67,0)
 ;from AMSG xref.  If no "AE","Y" xref then call DIK to delete the entry
"RTN","SDRPA06",68,0)
 ;BATCH    :  originating batch number
"RTN","SDRPA06",69,0)
 ;BATCHIDO :  original batch number from HL7 ACK
"RTN","SDRPA06",70,0)
 ;V1       :  sequence #  (individual message number in batch)
"RTN","SDRPA06",71,0)
 ;V2       :  run #       (ien of multiple entry)
"RTN","SDRPA06",72,0)
 ;V3       :  ien         (ien in patient multiple)
"RTN","SDRPA06",73,0)
 ;V4       :  ien         (ien batch tracking multiple)
"RTN","SDRPA06",74,0)
 Q:($G(BATCH)="")
"RTN","SDRPA06",75,0)
 N DA,DIK,DR,V1,V2,V3,V4,ZNODE
"RTN","SDRPA06",76,0)
 S V1=0
"RTN","SDRPA06",77,0)
 F  S V1=$O(^SDWL(409.6,"AMSG",BATCH,V1)) Q:'V1  D
"RTN","SDRPA06",78,0)
 . S V2=$O(^SDWL(409.6,"AMSG",BATCH,V1,"")) Q:'V2
"RTN","SDRPA06",79,0)
 . ;batch tracking enhancement
"RTN","SDRPA06",80,0)
 . S V4=$O(^SDWL(409.6,V2,2,"B",BATCHIDO,"")) Q:'V4  D
"RTN","SDRPA06",81,0)
 .. S DA=V4,DA(1)=V2,DIE="^SDWL(409.6,"_V2_",2,",DR=".04///"_$$NOW^XLFDT_";.05///"_ACKCODE
"RTN","SDRPA06",82,0)
 .. D ^DIE K DIE
"RTN","SDRPA06",83,0)
 . S V3=0 F  S V3=$O(^SDWL(409.6,"AMSG",BATCH,V1,V2,V3)) Q:'V3  D
"RTN","SDRPA06",84,0)
 .. S ZNODE=$G(^SDWL(409.6,V2,1,V3,0)) Q:ZNODE=""
"RTN","SDRPA06",85,0)
 .. ;4th piece is the message #
"RTN","SDRPA06",86,0)
 .. I '$D(^SDWL(409.6,"AE","Y",V2,V3)) D
"RTN","SDRPA06",87,0)
 ... S DIK="^SDWL(409.6,"_V2_",1,"
"RTN","SDRPA06",88,0)
 ... S DA(1)=V2,DA=V3 D ^DIK
"RTN","SDRPA06",89,0)
 ... S ^XTMP("SDRPA-"_BATCH,+$P(ZNODE,"^",4),0)=ZNODE ;diagnostics
"RTN","SDRPA06",90,0)
 D:+$G(V2) CLEAN(V2)
"RTN","SDRPA06",91,0)
 Q
"RTN","SDRPA06",92,0)
AAAR(BATCH,BATCHIDO) ;batch accept with errors
"RTN","SDRPA06",93,0)
 ;BATCH    :  originating batch number
"RTN","SDRPA06",94,0)
 ;BATCHIDO :  original batch number from HL7 ACK
"RTN","SDRPA06",95,0)
 ;V1       :  sequence #  (individual message number in batch)
"RTN","SDRPA06",96,0)
 ;V2       :  run #       (ien of multiple entry)
"RTN","SDRPA06",97,0)
 ;V3       :  ien         (ien in patient multiple)
"RTN","SDRPA06",98,0)
 ;V4       :  ien         (ien batch tracking multiple))
"RTN","SDRPA06",99,0)
 Q:($G(BATCH)="")
"RTN","SDRPA06",100,0)
 N DA,DIK,DR,V1,V2,V3,V4,ZNODE
"RTN","SDRPA06",101,0)
 S V1=0
"RTN","SDRPA06",102,0)
 F  S V1=$O(^SDWL(409.6,"AMSG",BATCH,V1)) Q:'V1  D
"RTN","SDRPA06",103,0)
 . S V2=$O(^SDWL(409.6,"AMSG",BATCH,V1,"")) Q:'V2
"RTN","SDRPA06",104,0)
 . ;batch tracking enhancement
"RTN","SDRPA06",105,0)
 . S V4=$O(^SDWL(409.6,V2,2,"B",BATCHIDO,"")) Q:'V4  D
"RTN","SDRPA06",106,0)
 .. S DA=V4,DA(1)=V2,DIE="^SDWL(409.6,"_V2_",2,",DR=".04///"_$$NOW^XLFDT_";.05///"_ACKCODE
"RTN","SDRPA06",107,0)
 .. D ^DIE K DIE
"RTN","SDRPA06",108,0)
 . S V3=0 F  S V3=$O(^SDWL(409.6,"AMSG",BATCH,V1,V2,V3)) Q:'V3  D
"RTN","SDRPA06",109,0)
 .. S ZNODE=$G(^SDWL(409.6,V2,1,V3,0)) Q:ZNODE=""
"RTN","SDRPA06",110,0)
 .. ;4th piece is the message #
"RTN","SDRPA06",111,0)
 .. ;next line screens for accepted batch + accepted message + status final and can be deleted
"RTN","SDRPA06",112,0)
 .. I '$D(^SDWL(409.6,"AE","Y",V2,V3))&('$D(^TMP("SDRPA06",$J,$P(ZNODE,"^",4)))) D
"RTN","SDRPA06",113,0)
 ... S DIK="^SDWL(409.6,"_V2_",1,"
"RTN","SDRPA06",114,0)
 ... S DA(1)=V2,DA=V3 D ^DIK
"RTN","SDRPA06",115,0)
 ... S ^XTMP("SDRPA-"_BATCH,+$P(ZNODE,"^",4),0)=ZNODE ;diagnostics
"RTN","SDRPA06",116,0)
 .. ;next line screens for accepted batch + error message
"RTN","SDRPA06",117,0)
 .. I $D(^TMP("SDRPA06",$J,$P(ZNODE,"^",4))) D
"RTN","SDRPA06",118,0)
 ... S DA=V3,DA(1)=V2,DIE="^SDWL(409.6,"_V2_",1,"
"RTN","SDRPA06",119,0)
 ... S DR="7////"_$O(^SCPT(404.472,"B",$G(^TMP("SDRPA06",$J,$P(ZNODE,"^",4))),"")) D ^DIE
"RTN","SDRPA06",120,0)
 ... I $D(^SDWL(409.6,"AE","Y",V2,V3)) Q
"RTN","SDRPA06",121,0)
 ... I $D(^SDWL(409.6,"AE","N",V2,V3)) D
"RTN","SDRPA06",122,0)
 .... S DR="4///Y" D ^DIE
"RTN","SDRPA06",123,0)
 D:+$G(V2) CLEAN(V2)
"RTN","SDRPA06",124,0)
 Q
"RTN","SDRPA06",125,0)
CLEAN(RUN) ;housekeeping
"RTN","SDRPA06",126,0)
 ;clean up batch previous to current one by checking for "AE",("S" or "R") xref and
"RTN","SDRPA06",127,0)
 ;deleting if entry in xref exists
"RTN","SDRPA06",128,0)
 ;RUN  :  run #           (ien of multiple entry)
"RTN","SDRPA06",129,0)
 ;V1   :  previous run #  (ien of multiple entry)  
"RTN","SDRPA06",130,0)
 ;V2   :  ien           (ien in multiple)
"RTN","SDRPA06",131,0)
 Q:($G(RUN)="")
"RTN","SDRPA06",132,0)
 N V1,V2,V3
"RTN","SDRPA06",133,0)
 S V1=$O(^SDWL(409.6,RUN),-1) Q:'V1
"RTN","SDRPA06",134,0)
 F V3="R","S" S V2=0 F  S V2=$O(^SDWL(409.6,"AE",V3,V1,V2)) Q:'V2  D
"RTN","SDRPA06",135,0)
 . S ZNODE=$G(^SDWL(409.6,V1,1,V2,0))
"RTN","SDRPA06",136,0)
 . S DIK="^SDWL(409.6,"_V1_",1,"
"RTN","SDRPA06",137,0)
 . S DA(1)=V1,DA=V2 D ^DIK
"RTN","SDRPA06",138,0)
 . S ^XTMP("SDRPA-"_$P(ZNODE,"^",3),"CLEAN",+$P(ZNODE,"^",4),0)=ZNODE ;diagnostics
"RTN","SDRPA06",139,0)
 Q
"RTN","SDRPA06",140,0)
MSG(BATCHIDO,TYPE,RUNIEN,BATCHID) ;acknowlegement notification to mail group
"RTN","SDRPA06",141,0)
 ;BATCHID :  Our Message ID
"RTN","SDRPA06",142,0)
 ;BATCHID0:  Batch Control ID
"RTN","SDRPA06",143,0)
 ;TYPE    :  type of message (accept with rejects - 1, whole accept 2, whole reject -3)
"RTN","SDRPA06",144,0)
 ;RUNIEN  :  run ien associated with this batch
"RTN","SDRPA06",145,0)
 ;SDAMX   :  message text array
"RTN","SDRPA06",146,0)
 ;XMSUB   :  subject
"RTN","SDRPA06",147,0)
 ;XMY     :  addressee
"RTN","SDRPA06",148,0)
 ;XMTEXT  :  location of text array
"RTN","SDRPA06",149,0)
 ;XMDUZ   :  sender of the message
"RTN","SDRPA06",150,0)
 ;RUNZ    :  zero node of run associated with this batch
"RTN","SDRPA06",151,0)
 N RUNZ,SDAMX,V0,V1,V2,V3,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","SDRPA06",152,0)
 Q:BATCHID=""
"RTN","SDRPA06",153,0)
 S V0=$P($G(^SDWL(409.6,RUNIEN,2,0)),"^",4)
"RTN","SDRPA06",154,0)
 S (V1,V3)=0 F  S V1=$O(^SDWL(409.6,RUNIEN,2,V1)) Q:'V1  D
"RTN","SDRPA06",155,0)
 . S V2=$P($G(^SDWL(409.6,RUNIEN,2,V1,0)),"^",4)
"RTN","SDRPA06",156,0)
 . S:V2'="" V3=V3+1
"RTN","SDRPA06",157,0)
 . ;S V3=V3+1
"RTN","SDRPA06",158,0)
 S RUNZ=$G(^SDWL(409.6,RUNIEN,0))
"RTN","SDRPA06",159,0)
 S XMSUB="PAIT BATCH ACKNOWLEGEMENT "_BATCHIDO
"RTN","SDRPA06",160,0)
 S XMY("G.SD-PAIT")=""
"RTN","SDRPA06",161,0)
 S XMY("S.SD-PAIT-SERVER@FORUM.VA.GOV")=""
"RTN","SDRPA06",162,0)
 S XMTEXT="SDAMX("
"RTN","SDRPA06",163,0)
 S XMDUZ="POSTMASTER"
"RTN","SDRPA06",164,0)
 I TYPE=1 D
"RTN","SDRPA06",165,0)
 . S SDAMX(1)="  Station Number: "_$P($$SITE^VASITE(),"^",3)
"RTN","SDRPA06",166,0)
 . S SDAMX(2)="Batch Control ID: "_BATCHIDO
"RTN","SDRPA06",167,0)
 . S SDAMX(3)="      Message ID: "_BATCHID
"RTN","SDRPA06",168,0)
 . S SDAMX(4)="       Log Entry: "_RUNIEN
"RTN","SDRPA06",169,0)
 . S SDAMX(5)="        Run Date: "_$$FMTE^XLFDT($P(RUNZ,"^",7))
"RTN","SDRPA06",170,0)
 . S SDAMX(6)="          Status: Acknowledged - with rejections "
"RTN","SDRPA06",171,0)
 . S SDAMX(7)="                  "_V3_" of "_V0_" ACKs received for this run date"
"RTN","SDRPA06",172,0)
 . S SDAMX(8)=""
"RTN","SDRPA06",173,0)
 . S SDAMX(9)="Use option SD-PAIT REJECTED  Rejected Transmissions to view the rejections."
"RTN","SDRPA06",174,0)
 I TYPE=2 D
"RTN","SDRPA06",175,0)
 . S SDAMX(1)="  Station Number: "_$P($$SITE^VASITE(),"^",3)
"RTN","SDRPA06",176,0)
 . S SDAMX(2)="Batch Control ID: "_BATCHIDO
"RTN","SDRPA06",177,0)
 . S SDAMX(3)="      Message ID: "_BATCHID
"RTN","SDRPA06",178,0)
 . S SDAMX(4)="       Log Entry: "_RUNIEN
"RTN","SDRPA06",179,0)
 . S SDAMX(5)="        Run Date: "_$$FMTE^XLFDT($P(RUNZ,"^",7))
"RTN","SDRPA06",180,0)
 . S SDAMX(6)="          Status: Acknowledged - No Rejections"
"RTN","SDRPA06",181,0)
 . S SDAMX(7)="                  "_V3_" of "_V0_" ACKs received for this run date"
"RTN","SDRPA06",182,0)
 I TYPE=3 D
"RTN","SDRPA06",183,0)
 . S SDAMX(1)="  Station Number: "_$P($$SITE^VASITE(),"^",3)
"RTN","SDRPA06",184,0)
 . S SDAMX(2)="Batch Control ID: "_BATCHIDO
"RTN","SDRPA06",185,0)
 . S SDAMX(3)="      Message ID: "_BATCHID
"RTN","SDRPA06",186,0)
 . S SDAMX(4)="       Log Entry: "_RUNIEN
"RTN","SDRPA06",187,0)
 . S SDAMX(5)="        Run Date: "_$$FMTE^XLFDT($P(RUNZ,"^",7))
"RTN","SDRPA06",188,0)
 . S SDAMX(6)="          Status: Acknowledged - Entire Batch Rejected"
"RTN","SDRPA06",189,0)
 . S SDAMX(7)="                  "_V3_" of "_V0_" ACKs received for this run date"
"RTN","SDRPA06",190,0)
 D ^XMD
"RTN","SDRPA06",191,0)
 Q
"RTN","SDRPA06",192,0)
OURB(CONID) ;match control id to batch id
"RTN","SDRPA06",193,0)
 ;CONID  :  the batch control id of the original message
"RTN","SDRPA06",194,0)
 ;V1     :  ien of related message in message admin file
"RTN","SDRPA06",195,0)
 ;V2     :  pointer to related entry in message text file
"RTN","SDRPA06",196,0)
 ;V3     :  our batch #
"RTN","SDRPA06",197,0)
 N V1,V2,V3
"RTN","SDRPA06",198,0)
 S CONID=$G(CONID,"")
"RTN","SDRPA06",199,0)
 S V3=""
"RTN","SDRPA06",200,0)
 ;integration reference 4070 and 4069
"RTN","SDRPA06",201,0)
 S V1=$O(^HLMA("C",+CONID,"")) I 'V1 Q V3
"RTN","SDRPA06",202,0)
 S V2=$P($G(^HLMA(V1,0)),"^") I 'V2 Q V3
"RTN","SDRPA06",203,0)
 S V3=$P($G(^HL(772,V2,0)),"^",6)
"RTN","SDRPA06",204,0)
 Q V3
"RTN","SDRPA07")
0^4^B41483190
"RTN","SDRPA07",1,0)
SDRPA07 ;BP-OIFO/ESW - APPOINTMENT BATCH TRANSMISSION BUILDER; ; 1/20/04 12:51pm
"RTN","SDRPA07",2,0)
 ;;5.3;Scheduling;**290,333**;AUG 13 1993
"RTN","SDRPA07",3,0)
 ;
"RTN","SDRPA07",4,0)
 ;
"RTN","SDRPA07",5,0)
SNDS19(ZTSK,SDBCID,SDMCID) ;Main entry point for the sending of SIU-S19 batch messages to
"RTN","SDRPA07",6,0)
 ; the National Patient Care Database
"RTN","SDRPA07",7,0)
 ;
"RTN","SDRPA07",8,0)
 ;Input  : ZTSK
"RTN","SDRPA07",9,0)
 ;Output : SDBCID - Batch Control ID
"RTN","SDRPA07",10,0)
 ;         SDMCID - Message Control ID
"RTN","SDRPA07",11,0)
 ;
"RTN","SDRPA07",12,0)
 ;
"RTN","SDRPA07",13,0)
 ;Declare variables
"RTN","SDRPA07",14,0)
 N X,X1,X2,%H
"RTN","SDRPA07",15,0)
 N BATCHC,MSGN,CURLINE
"RTN","SDRPA07",16,0)
 N LINEN,MSHLINE,XMITERR,HL7XMIT,ERROR,ORIGENT,ORIGMNT
"RTN","SDRPA07",17,0)
 N HLEID,HL,HLECH,HLFS,HLQ,HLMID,HLMTIEN,HLDT,HLDT1,MSGID,HLRESLT,HLP
"RTN","SDRPA07",18,0)
 ;Set message count limit for batch message
"RTN","SDRPA07",19,0)
 ;Initialize global locations
"RTN","SDRPA07",20,0)
 S XMITERR="^TMP(""SD-PAIT-BLD"","_$J_",""ERRORS"")"
"RTN","SDRPA07",21,0)
 S HL7XMIT="^TMP(""HLS"","_$J_")"
"RTN","SDRPA07",22,0)
 K @XMITERR,@HL7XMIT
"RTN","SDRPA07",23,0)
 ;Initiate
"RTN","SDRPA07",24,0)
 D INIT^HLFNC2("SD-PAIT-EVENT",.HL)
"RTN","SDRPA07",25,0)
 ;Unable to initiate HL7 varable - send error bulletin - done
"RTN","SDRPA07",26,0)
 ;I ($O(HL(""))="") D ERRBUL($P(HL,U,2)) Q  ; create ERRBUL later
"RTN","SDRPA07",27,0)
 ;Create batch message
"RTN","SDRPA07",28,0)
 D CREATE^HLTF(.HLMID,.HLMTIEN,.HLDT,.HLDT1)
"RTN","SDRPA07",29,0)
 ;HLMID - value of batch ID
"RTN","SDRPA07",30,0)
 ;HLMTIEN - IEN of Message Text file entry
"RTN","SDRPA07",31,0)
 ;HLDT - current date/time in FM internal format
"RTN","SDRPA07",32,0)
 ;HLDT1 - current date/time in HL7 format
"RTN","SDRPA07",33,0)
 N SDA,SDDT S SDA=HLMID,SDDT=HLDT ; to be used to file later
"RTN","SDRPA07",34,0)
 ;Unable to create batch message - send error bulletin - done
"RTN","SDRPA07",35,0)
 ;I ('HLMTIEN) D ERRBUL("Unable to create batch HL7 message") Q
"RTN","SDRPA07",36,0)
 ;Initialize message count
"RTN","SDRPA07",37,0)
 S BATCHC=0
"RTN","SDRPA07",38,0)
 ;Initialize message number
"RTN","SDRPA07",39,0)
 S MSGN=0
"RTN","SDRPA07",40,0)
 ;Initialize line count
"RTN","SDRPA07",41,0)
 S LINEN=1
"RTN","SDRPA07",42,0)
 S CURLINE=LINEN
"RTN","SDRPA07",43,0)
 ;Loop through list of appointments requiring transmission
"RTN","SDRPA07",44,0)
 N RUNID S RUNID=$O(^SDWL(409.6,"AD",ZTSK,""))
"RTN","SDRPA07",45,0)
 N DFN,SD25,SD6,SD8,SD7,SDPATCL S DFN="" F  S DFN=$O(^TMP("SDDPT",$J,DFN)) Q:DFN=""  D
"RTN","SDRPA07",46,0)
 .N SDP,ICN,SSN,SNM,FNM,MNM,DOB,SDSC,SDSCP,SDENRO,SDAPPT S SDP=^TMP("SDDPT",$J,DFN)
"RTN","SDRPA07",47,0)
 .S ICN=$P(SDP,U),SSN=$P(SDP,U,2),SNM=$P(SDP,U,3),FNM=$P(SDP,U,4)
"RTN","SDRPA07",48,0)
 .S MNM=$P(SDP,U,5),DOB=$P(SDP,U,6),SDSC=$P(SDP,U,7),SDSCP=$P(SDP,U,8),SDENRO=$P(SDP,U,9)
"RTN","SDRPA07",49,0)
 .N SDADT S SDADT="" F  S SDADT=$O(^TMP("SDDPT",$J,DFN,SDADT)) Q:SDADT=""  D
"RTN","SDRPA07",50,0)
 ..N SDPT,SDADID,SDSDDT,SDSTAT,SDNAVA,SDCHKOUT,SDCDT,SDARF,SDARDT,SDNEW,SDCL,SDCLNUM,SDSTOP,SDCSTOP,SDFAC,SDDAM,SDCLNM,SDSTOPD,SDCSTOPD
"RTN","SDRPA07",51,0)
 ..N SDSTOPDD,SD8RD
"RTN","SDRPA07",52,0)
 ..S SDPT=^TMP("SDDPT",$J,DFN,SDADT),SDADID=$P(SDPT,U),SDDAM=$P(SDPT,U,2),SDSDDT=$P(SDPT,U,3),SDNAVA=$P(SDPT,U,5)
"RTN","SDRPA07",53,0)
 ..S SDCHKOUT=$P(SDPT,U,6),SDCDT=$P(SDPT,U,7),SDARDT=$P(SDPT,U,9),SDNEW=$P(SDPT,U,10),SDCL=$P(SDPT,U,12),SDCLNM=$P(SDPT,U,13)
"RTN","SDRPA07",54,0)
 ..S SDSTOP=$P(SDPT,U,14),SDCSTOP=$P(SDPT,U,15),SDFAC=$P(SDPT,U,16),SDPATCL=$P(SDPT,U,4)
"RTN","SDRPA07",55,0)
 ..S SDAPPT=^TMP("SDDPT",$J,DFN,SDADT,"SCH"),SD25=$P(SDAPPT,"^",2),SD6=$P(SDAPPT,"^",3),SD8=$P(SDAPPT,"^",4),SD8RD=$P(SDAPPT,"^",7)
"RTN","SDRPA07",56,0)
 ..S SDSTOPDD=^TMP("SDDPT",$J,DFN,SDADT,"STDC"),SDSTOPD=$P(SDSTOPDD,"^"),SDCSTOPD=$P(SDSTOPDD,"^",2)
"RTN","SDRPA07",57,0)
 ..;Calculate message control ID
"RTN","SDRPA07",58,0)
 ..S MSGN=MSGN+1
"RTN","SDRPA07",59,0)
 ..S MSGID=HLMID_"-"_MSGN
"RTN","SDRPA07",60,0)
 ..;Build MSG segment
"RTN","SDRPA07",61,0)
 ..I (MSGID'="") D
"RTN","SDRPA07",62,0)
 ...;remember orig message and event type
"RTN","SDRPA07",63,0)
 ...S ORIGMNT="SIU"
"RTN","SDRPA07",64,0)
 ...S ORIGENT="S12"
"RTN","SDRPA07",65,0)
 ...S HL("MNT")="SIU",HL("ETN")=$P(SDAPPT,"^")
"RTN","SDRPA07",66,0)
 ...;build MSH segment
"RTN","SDRPA07",67,0)
 ...K RESULT D MSH^HLFNC2(.HL,MSGID,.RESULT)
"RTN","SDRPA07",68,0)
 ...;reset message & event type to its orig values
"RTN","SDRPA07",69,0)
 ...S HL("MNT")=ORIGMNT
"RTN","SDRPA07",70,0)
 ...S HL("ETN")=ORIGENT
"RTN","SDRPA07",71,0)
 ...;copy MSH segment into HL7 message
"RTN","SDRPA07",72,0)
 ...S @HL7XMIT@(CURLINE)=RESULT
"RTN","SDRPA07",73,0)
 ...N SDFACL S SDFACL=$P($$SITE^VASITE(),"^",3)
"RTN","SDRPA07",74,0)
 ...S $P(@HL7XMIT@(CURLINE),U,4)=SDFACL ;sending facility station #
"RTN","SDRPA07",75,0)
 ...S $P(@HL7XMIT@(CURLINE),U,5)="SD-AAC-PAIT" ;Receiving Application
"RTN","SDRPA07",76,0)
 ...S $P(@HL7XMIT@(CURLINE),U,6)=200 ; Receiving Facility
"RTN","SDRPA07",77,0)
 ...I ($D(RESULT(1))) D
"RTN","SDRPA07",78,0)
 ....S @HL7XMIT@(CURLINE,1)=RESULT(1)
"RTN","SDRPA07",79,0)
 ....S CURLINE=CURLINE+1
"RTN","SDRPA07",80,0)
 ...E  S CURLINE=CURLINE+1
"RTN","SDRPA07",81,0)
 ..;get list of segments
"RTN","SDRPA07",82,0)
 ..N SDSCH S SDSCH="SCH"_HLFS_1_"^^^^^"
"RTN","SDRPA07",83,0)
 ..S SD7=SDNAVA
"RTN","SDRPA07",84,0)
 ..;S ^TMP("HLS",$J,CURLINE)
"RTN","SDRPA07",85,0)
 ..S @HL7XMIT@(CURLINE)=SDSCH_SD6_"^"_SD7_"^"_SD8_"^^^"
"RTN","SDRPA07",86,0)
 ..N SDDAT S SDDAT="~~~"_SDDAM_"~~~"_"Date Appt Created|~~~"_SDSDDT_"~~~"_"Desired Date|~~~"_SDADID_"~~~"_"Appt Date"
"RTN","SDRPA07",87,0)
 ..S SDDAT=SDDAT_"|~~~"_SDCHKOUT_"~~~"_"Checkout Date"
"RTN","SDRPA07",88,0)
 ..S SDDAT=SDDAT_"|~~~"_SDCDT_"~~~"_"Cancellation Date"
"RTN","SDRPA07",89,0)
 ..S SDDAT=SDDAT_"|~~~"_SDARDT_"~~~"_"Auto-rebook Date"
"RTN","SDRPA07",90,0)
 ..S SDDAT=SDDAT_"|~~~"_SD8RD_"~~~"_"Resched Date"
"RTN","SDRPA07",91,0)
 ..;S $P(SDSCH,U,12)=SDDAT,$P(SDSCH,U,26)=SDSTAT
"RTN","SDRPA07",92,0)
 ..S @HL7XMIT@(CURLINE,1)=SDDAT_"^^^^^^^^^^^^^^"_SD25
"RTN","SDRPA07",93,0)
 ..S CURLINE=CURLINE+1
"RTN","SDRPA07",94,0)
 ..S @HL7XMIT@(CURLINE)=$$EN^VAFHLPID(DFN,"1,3,5,7,11,19",1,1)
"RTN","SDRPA07",95,0)
 ..N SDCDFN S SDCDFN=$P(@HL7XMIT@(CURLINE),"^",4),SDCDFN=SDCDFN_"|"_DFN_"~~~USVHA&&L~PI" I $P(SDCDFN,"~")["V" S $P(SDCDFN,"~",2)=""
"RTN","SDRPA07",96,0)
 ..S $P(@HL7XMIT@(CURLINE),"^",4)=SDCDFN
"RTN","SDRPA07",97,0)
 ..N SDZIP S SDZIP=$P(@HL7XMIT@(CURLINE),U,12),SDZIP=$P(SDZIP,"~",5) S $P(@HL7XMIT@(CURLINE),U,12)="~~~~"_SDZIP
"RTN","SDRPA07",98,0)
 ..S CURLINE=CURLINE+1
"RTN","SDRPA07",99,0)
 ..S @HL7XMIT@(CURLINE)="PV1^1^"_SDPATCL_"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"_SDFAC
"RTN","SDRPA07",100,0)
 ..S CURLINE=CURLINE+1
"RTN","SDRPA07",101,0)
 ..S SDNEW=$S(SDNEW="Y":"NTF",SDNEW="N":"SHB")
"RTN","SDRPA07",102,0)
 ..S @HL7XMIT@(CURLINE)="PV2^^^^^^^^^^^^^^^^^^^^^^^^"_SDNEW
"RTN","SDRPA07",103,0)
 ..S CURLINE=CURLINE+1
"RTN","SDRPA07",104,0)
 ..I $D(^TMP("SDDPT",$J,DFN,SDADT,"ROL")) D
"RTN","SDRPA07",105,0)
 ...N SDCNT,SDAIP S SDAIP="AIP^" S SDCNT="" F  S SDCNT=$O(^TMP("SDDPT",$J,DFN,SDADT,"ROL",SDCNT)) Q:SDCNT=""  D
"RTN","SDRPA07",106,0)
 ....N SDPOVID,SDPROVNM,SDROLS
"RTN","SDRPA07",107,0)
 ....S SDROLS=^TMP("SDDPT",$J,DFN,SDADT,"ROL",SDCNT)
"RTN","SDRPA07",108,0)
 ....S SDPOVID=$P(SDROLS,U,3),SDPROVNM=$P(SDROLS,U,4),SDPROVNM=$TR(SDPROVNM,",","~")
"RTN","SDRPA07",109,0)
 ....S SDPROVNM=$TR(SDPROVNM," ","~")
"RTN","SDRPA07",110,0)
 ....S @HL7XMIT@(CURLINE)=SDAIP_SDCNT_"^^"_SDPOVID_"~"_SDPROVNM_"^"_"Provider"
"RTN","SDRPA07",111,0)
 ....S CURLINE=CURLINE+1
"RTN","SDRPA07",112,0)
 ..S @HL7XMIT@(CURLINE)="AIL^1^^"_SDCL_"~~~~~~~~"_SDCLNM_"^"_SDSTOP_"~"_SDSTOPD_"~DSS Clinic ID^"_SDCSTOP_"~"_SDCSTOPD_"~DSS Credit Stop"
"RTN","SDRPA07",113,0)
 ..S CURLINE=CURLINE+1
"RTN","SDRPA07",114,0)
 ..N SDCNT S SDCNT="" F  S SDCNT=$O(^TMP("SDDPT",$J,DFN,SDADT,"ZCL",SDCNT)) Q:SDCNT=""  D
"RTN","SDRPA07",115,0)
 ...S @HL7XMIT@(CURLINE)=^TMP("SDDPT",$J,DFN,SDADT,"ZCL",SDCNT,0)
"RTN","SDRPA07",116,0)
 ...S CURLINE=CURLINE+1
"RTN","SDRPA07",117,0)
 ..;create ZEN only if enrollment was retrieved
"RTN","SDRPA07",118,0)
 ..I SDENRO>0 S @HL7XMIT@(CURLINE)="ZEN^1^^^^^^^^"_SDENRO,CURLINE=CURLINE+1
"RTN","SDRPA07",119,0)
 ..S @HL7XMIT@(CURLINE)="ZSP^1^"_SDSC_"^"_SDSCP
"RTN","SDRPA07",120,0)
 ..S CURLINE=CURLINE+1
"RTN","SDRPA07",121,0)
 ..;file MSGID into 409.69 serarately as batch # and ID # 
"RTN","SDRPA07",122,0)
 ..N DIE,DA D
"RTN","SDRPA07",123,0)
 ...S DIE="^SDWL(409.6,"_RUNID_",1,",DA(1)=RUNID
"RTN","SDRPA07",124,0)
 ...S DA=$O(^SDWL(409.6,"AC",DFN,SDADT,RUNID,"")),DR="2///"_+MSGID_";3///"_$P(MSGID,"-",2) D ^DIE
"RTN","SDRPA07",125,0)
 D GENERATE^HLMA("SD-PAIT-EVENT","GB",1,.HLRESLT,HLMTIEN,.HLP) K @HL7XMIT
"RTN","SDRPA07",126,0)
 N DA,DIE,DR S DA=RUNID,DIE=409.6,DR="1.1///"_+$G(MSGID) D ^DIE
"RTN","SDRPA07",127,0)
 S SDMCID=+$G(SDMCID)
"RTN","SDRPA07",128,0)
 ;file message control ID # and batch control ID number
"RTN","SDRPA07",129,0)
 N DIC,DA,X,Y D
"RTN","SDRPA07",130,0)
 .S DIC="^SDWL(409.6,"_RUNID_",2,",DA(1)=RUNID,DIC("P")=409.7,DIC(0)="X"
"RTN","SDRPA07",131,0)
 .S SDBCID=+$G(HLRESLT)
"RTN","SDRPA07",132,0)
 .S X=+$G(SDBCID) D FILE^DICN
"RTN","SDRPA07",133,0)
 .S DA=+Y,DIE=DIC,DR=".02///"_+$G(SDDT)_";.03///"_+$G(SDA) D ^DIE
"RTN","SDRPA07",134,0)
 Q
"RTN","SDRPA08")
0^7^B33266783
"RTN","SDRPA08",1,0)
SDRPA08 ;BP-OIFO/OWAIN,ESW - Patient Appointment Data Compilation  ; 1/6/04 8:03am [1/20/04 3:35pm]
"RTN","SDRPA08",2,0)
 ;;5.3;Scheduling;**290,333**;AUG 13, 1993
"RTN","SDRPA08",3,0)
 ;This program generates appointment data into ^TMP("SDDPT",$J to be used by HL7 builder
"RTN","SDRPA08",4,0)
 Q
"RTN","SDRPA08",5,0)
 ;
"RTN","SDRPA08",6,0)
APPT(DFN,SDADT,SDDM,SDCL,SDSTAT) ;
"RTN","SDRPA08",7,0)
 ;SDDM - HL7 format of creation date
"RTN","SDRPA08",8,0)
 ;SDSTAT - string from SDRPA05
"RTN","SDRPA08",9,0)
 N ARRAY,SDCLNM,SDSTOP,SDSTOP1,SDCSTOP,SDCSTOP1,SDINST,SDFAC,SDSDDT,SDCDT,SDARF,SDARDT,SDENRO,SDNAVA,SD6A,SD8A,SD8RD
"RTN","SDRPA08",10,0)
 N SDNEW,SDSCHED,SDCHKOUT,SDPRVSEQ,SDCNT,SDSCE,SDSTOPD,SDCSTOPD
"RTN","SDRPA08",11,0)
 D GETS^DIQ(44,SDCL_",",".01;3;8;99;2503","I","ARRAY")  ; GETS called to try to improve efficiency.
"RTN","SDRPA08",12,0)
 S SDCLNM=$G(ARRAY(44,SDCL_",",.01,"I"))  ; Clinic name.
"RTN","SDRPA08",13,0)
 S SDSTOP1=$G(ARRAY(44,SDCL_",",8,"I"))  ; DSS identifier of clinic.
"RTN","SDRPA08",14,0)
 S SDSTOP=$$GET1^DIQ(40.7,SDSTOP1_",",1,"I")
"RTN","SDRPA08",15,0)
 S SDSTOPD=$$GET1^DIQ(40.7,SDSTOP1_",",.01,"I") ;description
"RTN","SDRPA08",16,0)
 S SDCSTOP1=$G(ARRAY(44,SDCL_",",2503,"I"))  ; DSS credit stop of clinic.
"RTN","SDRPA08",17,0)
 S SDCSTOP="",SDCSTOPD=""
"RTN","SDRPA08",18,0)
 I SDCSTOP1>0 S SDCSTOP=$$GET1^DIQ(40.7,SDCSTOP1_",",1,"I"),SDCSTOPD=$$GET1^DIQ(40.7,SDCSTOP1_",",.01,"I")
"RTN","SDRPA08",19,0)
 S SDINST=$G(ARRAY(44,SDCL_",",3,"I"))  ; Institution
"RTN","SDRPA08",20,0)
 S SDFAC=$S(SDINST="":"",1:$$GET1^DIQ(4,SDINST_",",99,"I"))  ; Facility.
"RTN","SDRPA08",21,0)
 I SDFAC="" S SDDIV=$$GET1^DIQ(44,SDCL_",",3.5,"I") D
"RTN","SDRPA08",22,0)
 .S SDFAC=$P($$SITE^VASITE(,SDDIV),"^",3)
"RTN","SDRPA08",23,0)
 ;N SEQ S SEQ=0 F  S SEQ=$O(^SC(SDCL,"S",SDADT,1,SEQ)) Q:+SEQ'=SEQ  I $P(^SC(SDCL,"S",SDADT,1,SEQ,0),"^")=DFN Q
"RTN","SDRPA08",24,0)
 ;S SDCHKOUT=$$DTCONV($$GET1^DIQ(44.003,SEQ_","_SDADT_","_SDCL_",",303,"I"))  ; Checked out date.
"RTN","SDRPA08",25,0)
 S SDCHKOUT=""
"RTN","SDRPA08",26,0)
 I $P(SDSTAT,"^",5)'="" S SDCHKOUT=$$DTCONV($P(SDSTAT,"^",5))
"RTN","SDRPA08",27,0)
 S SD8RD=""
"RTN","SDRPA08",28,0)
 I $P(SDSTAT,"^",7)'="" S SD8RD=$$DTCONV($P(SDSTAT,"^",7))
"RTN","SDRPA08",29,0)
 S SDSDDT=$$DTCONV($$GET1^DIQ(2.98,SDADT_","_DFN_",",27,"I"))  ; desired date 
"RTN","SDRPA08",30,0)
 S SDCDT=$$GET1^DIQ(2.98,SDADT_","_DFN_",",15,"I")  ; Cancellation date.
"RTN","SDRPA08",31,0)
 S SDARF=$S($$GET1^DIQ(2.98,SDADT_","_DFN_",",25,"I")="A":"A",1:"")  ; Auto-rebook flag.
"RTN","SDRPA08",32,0)
 S SDARDT=$$DTCONV($$GET1^DIQ(2.98,SDADT_","_DFN_",",12,"I"))  ; Auto-rebook date.
"RTN","SDRPA08",33,0)
 S SDNAVA=$$GET1^DIQ(2.98,SDADT_","_DFN_",",26,"I")  ; Next available appointment indicator.
"RTN","SDRPA08",34,0)
 I SDNAVA=0 D
"RTN","SDRPA08",35,0)
 .I SDARF="A" S SDNAVA=4
"RTN","SDRPA08",36,0)
 .E  S SDNAVA=5
"RTN","SDRPA08",37,0)
 I SDNAVA="" S SDNAVA=6
"RTN","SDRPA08",38,0)
 S SDNEW=$$NEWAT(DFN,SDADT,SDSTOP1,SDCSTOP1,SDFAC)  ; New to facility/clinic flag.
"RTN","SDRPA08",39,0)
 ;
"RTN","SDRPA08",40,0)
 S SD6A=$P(SDSTAT,"^",3) S SD8A=$P(SDSTAT,"^",4)
"RTN","SDRPA08",41,0)
 ;get patient class
"RTN","SDRPA08",42,0)
 D GETAPPT^SDAMA201(DFN,"12",,SDADT,SDADT) N SDPATCL D  K ^TMP($J,"SDAMA201")
"RTN","SDRPA08",43,0)
 .S SDPATCL=$G(^TMP($J,"SDAMA201","GETAPPT",1,12)) I SDPATCL="" S SDPATCL="U"
"RTN","SDRPA08",44,0)
 S ^TMP("SDDPT",$J,DFN,SDADT)=$$DTCONV(SDADT)_"^"_SDDM_"^"_SDSDDT_"^"_SDPATCL_"^"_SDNAVA_"^"_SDCHKOUT_"^"_$$DTCONV(SDCDT)_"^^"_SDARDT
"RTN","SDRPA08",45,0)
 S ^TMP("SDDPT",$J,DFN,SDADT)=^TMP("SDDPT",$J,DFN,SDADT)_"^"_SDNEW_"^^"_SDCL_"^"_SDCLNM_"^"_SDSTOP_"^"_SDCSTOP_"^"_SDFAC
"RTN","SDRPA08",46,0)
 S ^TMP("SDDPT",$J,DFN,SDADT,"SCH")=$P(SDSTAT,U,1,6)_U_SD8RD
"RTN","SDRPA08",47,0)
 S ^TMP("SDDPT",$J,DFN,SDADT,"STDC")=SDSTOPD_"^"_SDCSTOPD
"RTN","SDRPA08",48,0)
 ; Outpatient classification.
"RTN","SDRPA08",49,0)
 S SDSCE=$$GET1^DIQ(2.98,SDADT_","_DFN_",",21,"I")
"RTN","SDRPA08",50,0)
 I SDSCE'="" D EN^VAFHLZCL(DFN,SDSCE,"1,2,3,4,5,6","","^","^TMP(""SDDPT"",$J,DFN,SDADT,""ZCL"")")
"RTN","SDRPA08",51,0)
 ; Get providers for clinic.
"RTN","SDRPA08",52,0)
 N SDPROV S (SDPRVSEQ,SDCNT)=0,SDPROV=""
"RTN","SDRPA08",53,0)
 N PROVID
"RTN","SDRPA08",54,0)
 F  S SDPRVSEQ=$O(^SC(SDCL,"PR",SDPRVSEQ)) Q:+SDPRVSEQ'=SDPRVSEQ!(SDCNT>10)  D
"RTN","SDRPA08",55,0)
 .S SDCNT=SDCNT+1,PROVID=$$GET1^DIQ(44.1,SDPRVSEQ_","_SDCL_",",.01,"I")
"RTN","SDRPA08",56,0)
 .S ^TMP("SDDPT",$J,DFN,SDADT,"ROL",SDCNT)="ROL^"_SDCNT_"^"_PROVID_"^"_$$GET1^DIQ(200,PROVID_",",.01,"I")
"RTN","SDRPA08",57,0)
 .Q
"RTN","SDRPA08",58,0)
 Q
"RTN","SDRPA08",59,0)
NEWAT(DFN,SDADT,SDSTOP1,SDCSTOP1,SDFAC) ; New to facility/clinic flag.
"RTN","SDRPA08",60,0)
 N OK,SDADT0,SDFAC1,SDDIV
"RTN","SDRPA08",61,0)
 S OK=0,SDADT0=SDADT
"RTN","SDRPA08",62,0)
 F  S SDADT=$O(^DPT(DFN,"S",SDADT),-1) Q:'SDADT  Q:$$GT24(SDADT,SDADT0)  D  Q:OK
"RTN","SDRPA08",63,0)
 .N SDCL,SDDIV,ARRAY
"RTN","SDRPA08",64,0)
 .S SDCL=$$GET1^DIQ(2.98,SDADT_","_DFN_",",.01,"I")
"RTN","SDRPA08",65,0)
 .Q:$$GET1^DIQ(44,SDCL_",",8,"I")'=SDSTOP1
"RTN","SDRPA08",66,0)
 .Q:$$GET1^DIQ(44,SDCL_",",2503,"I")'=SDCSTOP1
"RTN","SDRPA08",67,0)
 .D GETS^DIQ(44,SDCL_",","3","I","ARRAY")
"RTN","SDRPA08",68,0)
 .S SDINST=$G(ARRAY(44,SDCL_",",3,"I"))  ; Institution
"RTN","SDRPA08",69,0)
 .S SDFAC1=$S(SDINST="":"",1:$$GET1^DIQ(4,SDINST_",",99,"I"))  ; Facility.
"RTN","SDRPA08",70,0)
 .I SDFAC1="" S SDDIV=$$GET1^DIQ(44,SDCL_",",3.5,"I") I SDDIV'="" D
"RTN","SDRPA08",71,0)
 ..S SDFAC1=$P($$SITE^VASITE(,SDDIV),"^",3)
"RTN","SDRPA08",72,0)
 .I SDFAC1=SDFAC S OK=1
"RTN","SDRPA08",73,0)
 .Q
"RTN","SDRPA08",74,0)
 Q $S(OK:"N",1:"Y")
"RTN","SDRPA08",75,0)
 ;
"RTN","SDRPA08",76,0)
SCHEDULE(DFN,SDCL,SDCDT) ; Scheduling flag
"RTN","SDRPA08",77,0)
 ; If the patient has another appointment created on the same day as the cancellation date of the calceled appt, return "RS".
"RTN","SDRPA08",78,0)
 ; If there is not another appointment made on the same day, return "".
"RTN","SDRPA08",79,0)
 Q:'SDCDT ""
"RTN","SDRPA08",80,0)
 N SDCDTI S SDCDTI=SDCDT\1
"RTN","SDRPA08",81,0)
 N SDRESCH S SDRESCH=""
"RTN","SDRPA08",82,0)
 N SDAPDT S SDAPDT="" F  S SDAPDT=$O(^DPT("ASADM",SDCDTI,DFN,SDAPDT)) Q:SDAPDT=""  D  Q:SDRESCH
"RTN","SDRPA08",83,0)
 .I +$P(^DPT(DFN,"S",SDAPDT,0),U)=SDCL S SDRESCH=1
"RTN","SDRPA08",84,0)
 Q $S(SDRESCH=1:"RS",1:"")
"RTN","SDRPA08",85,0)
 ;
"RTN","SDRPA08",86,0)
GT24(DATE1,DATE2) ; Are two dates greater than 24 months apart?
"RTN","SDRPA08",87,0)
 ; DATE1 should be before DATE2.
"RTN","SDRPA08",88,0)
 ; If they are not in that order, they are swapped anyway.
"RTN","SDRPA08",89,0)
 N MONTHS,TEMP
"RTN","SDRPA08",90,0)
 I DATE1>DATE2 S TEMP=DATE1,DATE1=DATE2,DATE2=TEMP
"RTN","SDRPA08",91,0)
 S MONTHS=$E(DATE2,2,3)-$E(DATE1,2,3)*12+$E(DATE2,4,5)-$E(DATE1,4,5)
"RTN","SDRPA08",92,0)
 Q MONTHS>24
"RTN","SDRPA08",93,0)
DPT(DFN,SDCE) ;
"RTN","SDRPA08",94,0)
 ; Extrinsic. Returns boolean, 0: ^TMP("SDDPT",$J,DFN) not created; 1: created.
"RTN","SDRPA08",95,0)
 ;
"RTN","SDRPA08",96,0)
 N SDNAMEL,SDNAMEF,SDNAMEM,SDNAMES,SDNAME,NAME,DOB,SSN,SSNP,SDSC,ICN,SDADT,SDSCP,ARRAY,SDDCE
"RTN","SDRPA08",97,0)
 S SDDCE=$$GET1^DIQ(2,DFN_",",27.01,"I")  ; Current enrollment. Required elsewhere.
"RTN","SDRPA08",98,0)
 S:SDDCE="" SDCE="" I SDDCE>0 S SDCE=$$GET1^DIQ(27.11,SDDCE_",",.07,"I") ; Enrollment priority
"RTN","SDRPA08",99,0)
 Q:$D(^TMP("SDDPT",$J,DFN)) 1
"RTN","SDRPA08",100,0)
 D GETS^DIQ(2,DFN_",",".301;.302;991.01","I","ARRAY")  ; GETS called to try to improve efficiency.
"RTN","SDRPA08",101,0)
 S SDSC=$G(ARRAY(2,DFN_",",.301,"I"))  ; Service connected.
"RTN","SDRPA08",102,0)
 S SDSCP=$G(ARRAY(2,DFN_",",.302,"I"))  ; Service connected percentage.
"RTN","SDRPA08",103,0)
 S ICN=$$GETICN^MPIF001(DFN)  ; Integration Control Number.
"RTN","SDRPA08",104,0)
 I +ICN<0 S ICN="" ; 
"RTN","SDRPA08",105,0)
 D DEM^VADPT
"RTN","SDRPA08",106,0)
 S (SDNAMEL,SDNAMEF,SDNAMEM,SDNAMES,SDNAME,NAME(1))=""
"RTN","SDRPA08",107,0)
 S NAME=$$GETNAME(DFN)
"RTN","SDRPA08",108,0)
 S DOB=$$DTCONV($P($G(VADM(3)),"^"))  ; Date of birth.
"RTN","SDRPA08",109,0)
 S (SSN,SSNP)="" S SSN=$P($G(VADM(2)),"^") I SSN["P" S SSNP="P",SSN=$E(SSN,1,9)  ; Social security number.
"RTN","SDRPA08",110,0)
 Q:$E(SSN,1,5)="00000" 0  ; Exclude test patients.
"RTN","SDRPA08",111,0)
 ;
"RTN","SDRPA08",112,0)
 S ^TMP("SDDPT",$J,DFN)=ICN_"^"_SSN_SSNP_"^"_NAME_"^"_DOB_"^"_$E(SDSC)_"^"_SDSCP_"^"_SDCE
"RTN","SDRPA08",113,0)
 Q 1
"RTN","SDRPA08",114,0)
DTCONV(DT) ; Date convertion.
"RTN","SDRPA08",115,0)
 ; CYYMMDD -> CCYYMMDD
"RTN","SDRPA08",116,0)
 ; CYYMMDD.H{HMMSS} -> CCYYMMDDHHMM
"RTN","SDRPA08",117,0)
 I DT?7N Q DT+17E6
"RTN","SDRPA08",118,0)
 Q:DT?7N1"."1.6N DT\1+17E6_$E(DT#1+1*1E4,2,5)
"RTN","SDRPA08",119,0)
 Q ""
"RTN","SDRPA08",120,0)
GETNAME(NMID) ; Name in HL7 format.
"RTN","SDRPA08",121,0)
 N SDNAME,NAME,SDNAMEL,SDNAMF,SDNAMEM,SDNAMES,SDNAMEF
"RTN","SDRPA08",122,0)
 S SDNAME("FILE")=2,SDNAME("IENS")=NMID,SDNAME("FIELD")=.01
"RTN","SDRPA08",123,0)
 S NAME(1)=$$HLNAME^XLFNAME(.SDNAME,"","^")
"RTN","SDRPA08",124,0)
 S SDNAMEL=$P($G(NAME(1)),"^"),SDNAMEF=$P($G(NAME(1)),"^",2),SDNAMEM=$P($G(NAME(1)),"^",3),SDNAMES=$P($G(NAME(1)),"^",4)
"RTN","SDRPA08",125,0)
 Q SDNAMEL_"^"_SDNAMEF_"^"_SDNAMEM_" "_SDNAMES
"RTN","SDRPA08",126,0)
 Q
"RTN","SDRPA09")
0^9^B6442115
"RTN","SDRPA09",1,0)
SDRPA09 ;BP-OIFO/SWO,ESW - rejection utility ; 12/16/03 8:25am [2/19/04 5:24pm]
"RTN","SDRPA09",2,0)
 ;;5.3;Scheduling;**333**;Aug 13, 199
"RTN","SDRPA09",3,0)
 ;Rejection processing of all batches from the first run
"RTN","SDRPA09",4,0)
 ;
"RTN","SDRPA09",5,0)
 ;
"RTN","SDRPA09",6,0)
SELECT ;Select Batch Control Id  for the rejection process
"RTN","SDRPA09",7,0)
 N SDPT,SDAR,DIC,Y,SDBM,SDBS,SDOUT S SDPT=0,SDOUT=1 N % S %=0 F  Q:(%=1!(SDOUT=0))  S DIC="409.6",DIC(0)="QEAMZ",DIC("A")="Select running date:" D ^DIC Q:Y<1  S SDPT=+Y D  Q:SDOUT=0
"RTN","SDRPA09",8,0)
 .S SDPT=+Y
"RTN","SDRPA09",9,0)
 .I SDPT>0 W !,"Correct Running Date? " S %=1 D YN^DICN D:(%=1)  Q:Y<1
"RTN","SDRPA09",10,0)
 ..N DA S DIR(0)="409.7,.01" F  D ^DIR S SDB=+Y Q:'SDB  D 
"RTN","SDRPA09",11,0)
 ...I $D(^SDWL(409.6,SDPT,2,"B",SDB)) S SDBS=$O(^SDWL(409.6,SDPT,2,"B",SDB,"")) D  Q
"RTN","SDRPA09",12,0)
 ....I $P(^SDWL(409.6,SDPT,2,SDBS,0),"^",5)'="" W !,"Batch already Acknowledged!" Q
"RTN","SDRPA09",13,0)
 ....S SDBM=$P(^SDWL(409.6,SDPT,2,SDBS,0),"^",3),SDAR(SDBM)=SDB
"RTN","SDRPA09",14,0)
 ...I '$D(^SDWL(409.6,SDPT,2,"B",SDB)) W !,"Non existing batch control ID from this run!" Q
"RTN","SDRPA09",15,0)
 ..I '$O(SDAR("")) W !,"No Batches Selected, OK to quit? " S %=1 D YN^DICN S SDOUT=0 Q
"RTN","SDRPA09",16,0)
 Q:'$D(SDAR)
"RTN","SDRPA09",17,0)
QUE W !!,"This job has been tasked"
"RTN","SDRPA09",18,0)
 N ZTSAVE,IOP S IOP=0 F X="SDPT","SDAR(","IOP" S ZTSAVE(X)=""
"RTN","SDRPA09",19,0)
 W ! D EN^XUTMDEVQ("STRT^SDRPA09","Whole Batch Rejection Report",.ZTSAVE) S SDOUT=0 Q
"RTN","SDRPA09",20,0)
 Q
"RTN","SDRPA09",21,0)
STRT ;Tasked Entry
"RTN","SDRPA09",22,0)
 N BATCHID0,SDB,V4
"RTN","SDRPA09",23,0)
 S SDB="" F  S SDB=$O(SDAR(SDB)) Q:SDB=""  S BATCHID0=SDAR(SDB) D AR(SDB) D  D MSG^SDRPA06(BATCHID0,3,SDPT,SDB)
"RTN","SDRPA09",24,0)
 .S V4=$O(^SDWL(409.6,SDPT,2,"B",BATCHID0,""))
"RTN","SDRPA09",25,0)
 .S DA=V4,DA(1)=SDPT,DIE="^SDWL(409.6,"_SDPT_",2,",DR=".04///"_$$NOW^XLFDT_";.05///"_"MR"
"RTN","SDRPA09",26,0)
 .D ^DIE K DIE
"RTN","SDRPA09",27,0)
 Q
"RTN","SDRPA09",28,0)
AR(BATCH) ;whole batch rejection
"RTN","SDRPA09",29,0)
 ;BATCH  :  originating batch number
"RTN","SDRPA09",30,0)
 ;V1     :  sequence #  (individual message number in batch)
"RTN","SDRPA09",31,0)
 ;V2     :  run #       (ien of multiple entry)
"RTN","SDRPA09",32,0)
 ;V3     :  ien         (ien in multiple)
"RTN","SDRPA09",33,0)
 N DA,DIE,DR,V1,V2,V3,ZNODE
"RTN","SDRPA09",34,0)
 S V1=0
"RTN","SDRPA09",35,0)
 F  S V1=$O(^SDWL(409.6,"AMSG",BATCH,V1)) Q:'V1  D
"RTN","SDRPA09",36,0)
 . S V2=$O(^SDWL(409.6,"AMSG",BATCH,V1,"")) Q:'V2
"RTN","SDRPA09",37,0)
 . S V3=0 F  S V3=$O(^SDWL(409.6,"AMSG",BATCH,V1,V2,V3)) Q:'V3  D
"RTN","SDRPA09",38,0)
 .. S ZNODE=$G(^SDWL(409.6,V2,1,V3,0)) Q:ZNODE=""
"RTN","SDRPA09",39,0)
 .. ;4TH PIECE IS MESSAGE NUMBER
"RTN","SDRPA09",40,0)
 .. S DA=V3,DA(1)=V2,DIE="^SDWL(409.6,"_V2_",1,"
"RTN","SDRPA09",41,0)
 .. S DR="7///R" D ^DIE
"RTN","SDRPA09",42,0)
 .. I $D(^SDWL(409.6,"AE","Y",V2,V3)) Q
"RTN","SDRPA09",43,0)
 .. I $D(^SDWL(409.6,"AE","N",V2,V3)) D
"RTN","SDRPA09",44,0)
 ... S DR="4///Y" D ^DIE
"RTN","SDRPA09",45,0)
 Q
"SEC","^DIC",409.6,409.6,0,"AUDIT")
@
"SEC","^DIC",409.6,409.6,0,"DD")
@
"SEC","^DIC",409.6,409.6,0,"DEL")
@
"SEC","^DIC",409.6,409.6,0,"LAYGO")
@
"SEC","^DIC",409.6,409.6,0,"RD")

"SEC","^DIC",409.6,409.6,0,"WR")
@
"VER")
8.0^22.0
"^DD",404.472,404.472,0)
FIELD^^10^5
"^DD",404.472,404.472,0,"DDA")
N
"^DD",404.472,404.472,0,"DT")
3000217
"^DD",404.472,404.472,0,"IX","B",404.472,.01)

"^DD",404.472,404.472,0,"NM","PCMM HL7 ERROR CODE")

"^DD",404.472,404.472,0,"PT",404.47142,.01)

"^DD",404.472,404.472,0,"PT",409.69,7)

"^DD",404.472,404.472,0,"VRPK")
SD
"^DD",404.472,404.472,.01,0)
ERROR CODE^RF^^0;1^K:$L(X)>10!($L(X)<1)!'(X'?1P.E) X
"^DD",404.472,404.472,.01,1,0)
^.1
"^DD",404.472,404.472,.01,1,1,0)
404.472^B
"^DD",404.472,404.472,.01,1,1,1)
S ^SCPT(404.472,"B",$E(X,1,30),DA)=""
"^DD",404.472,404.472,.01,1,1,2)
K ^SCPT(404.472,"B",$E(X,1,30),DA)
"^DD",404.472,404.472,.01,3)
Answer must be 1-10 characters in length.
"^DD",404.472,404.472,.01,21,0)
^.001^1^1^3040126^^
"^DD",404.472,404.472,.01,21,1,0)
This is the unique ID assigned by Austin for each error code.
"^DD",404.472,404.472,.01,"DT")
2991216
"^DD",404.472,404.472,.02,0)
SEGMENT^F^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",404.472,404.472,.02,3)
Enter HL7 message segment. Answer must be 1-10 characters in length.
"^DD",404.472,404.472,.02,21,0)
^^1^1^3000307^
"^DD",404.472,404.472,.02,21,1,0)
The three letter designation of the applicable HL7 segment.
"^DD",404.472,404.472,.02,"DT")
2991216
"^DD",404.472,404.472,.03,0)
FIELD^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",404.472,404.472,.03,3)
Enter the segment field name. Answer must be 1-30 characters in length.
"^DD",404.472,404.472,.03,21,0)
^^1^1^3000307^
"^DD",404.472,404.472,.03,21,1,0)
The segment field where the error occurred.
"^DD",404.472,404.472,.03,"DT")
2991216
"^DD",404.472,404.472,.04,0)
SHORT DESCRIPTION^F^^0;4^K:$L(X)>60!($L(X)<1) X
"^DD",404.472,404.472,.04,3)
Answer must be 1-60 characters in length.
"^DD",404.472,404.472,.04,21,0)
^^2^2^3000307^
"^DD",404.472,404.472,.04,21,1,0)
The short desciption is used in the Listman display where users
"^DD",404.472,404.472,.04,21,2,0)
select errors for retransmission.
"^DD",404.472,404.472,.04,"DT")
3000217
"^DD",404.472,404.472,10,0)
DESCRIPTION^404.482^^DESC;0
"^DD",404.472,404.472,10,21,0)
^^1^1^3000307^
"^DD",404.472,404.472,10,21,1,0)
The is the full description of this error.
"^DD",404.472,404.482,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",404.472,404.482,0,"DT")
3000209
"^DD",404.472,404.482,0,"NM","DESCRIPTION")

"^DD",404.472,404.482,0,"UP")
404.472
"^DD",404.472,404.482,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",404.472,404.482,.01,3)

"^DD",404.472,404.482,.01,"DT")
3000209
"^DD",409.6,409.6,0)
FIELD^^1.5^9
"^DD",409.6,409.6,0,"DDA")
N
"^DD",409.6,409.6,0,"DT")
3040210
"^DD",409.6,409.6,0,"IX","AD",409.6,1)

"^DD",409.6,409.6,0,"IX","B",409.6,.01)

"^DD",409.6,409.6,0,"NM","PATIENT APPOINTMENT INFO LOG")

"^DD",409.6,409.6,.01,0)
RUN DATE^RD^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",409.6,409.6,.01,1,0)
^.1
"^DD",409.6,409.6,.01,1,1,0)
409.6^B
"^DD",409.6,409.6,.01,1,1,1)
S ^SDWL(409.6,"B",$E(X,1,30),DA)=""
"^DD",409.6,409.6,.01,1,1,2)
K ^SDWL(409.6,"B",$E(X,1,30),DA)
"^DD",409.6,409.6,.01,3)
Date the extract is run
"^DD",409.6,409.6,.01,21,0)
^^2^2^3040121^
"^DD",409.6,409.6,.01,21,1,0)
The date the extract started running at the site. Extracts are run as 
"^DD",409.6,409.6,.01,21,2,0)
Taskman background jobs.
"^DD",409.6,409.6,.01,23,0)
^.001^1^1^3040121^^
"^DD",409.6,409.6,.01,23,1,0)
This field is populated by the run routine.
"^DD",409.6,409.6,.01,"DT")
3030924
"^DD",409.6,409.6,1,0)
TASK ID^F^^0;2^K:$L(X)>15!($L(X)<1) X
"^DD",409.6,409.6,1,1,0)
^.1
"^DD",409.6,409.6,1,1,1,0)
409.6^AD
"^DD",409.6,409.6,1,1,1,1)
S ^SDWL(409.6,"AD",$E(X,1,30),DA)=""
"^DD",409.6,409.6,1,1,1,2)
K ^SDWL(409.6,"AD",$E(X,1,30),DA)
"^DD",409.6,409.6,1,1,1,"DT")
3030717
"^DD",409.6,409.6,1,3)
Taskman Task ID
"^DD",409.6,409.6,1,21,0)
^^2^2^3030924^
"^DD",409.6,409.6,1,21,1,0)
The Taskman task ID number.  When the extract is run the Taskman ID of 
"^DD",409.6,409.6,1,21,2,0)
the process is stored in this field.
"^DD",409.6,409.6,1,"DT")
3030924
"^DD",409.6,409.6,1.1,0)
LAST BATCH # OF THIS RUN^NJ13,0^^0;3^K:+X'=X!(X>9999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",409.6,409.6,1.1,3)
Type a Number between 0 and 9999999999999, 0 Decimal Digits
"^DD",409.6,409.6,1.1,21,0)
^.001^3^3^3040121^^^^
"^DD",409.6,409.6,1.1,21,1,0)
This is the the Message Conrol ID of MSH segment in the latest created 
"^DD",409.6,409.6,1.1,21,2,0)
HL7 batch. When the extract is run an HL7 batch is created that may 
"^DD",409.6,409.6,1.1,21,3,0)
contain up to 5000 individual messages.
"^DD",409.6,409.6,1.1,"DT")
3040121
"^DD",409.6,409.6,1.2,0)
LAST SCANNED DATE^RD^^0;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",409.6,409.6,1.2,3)
(No range limit on date)
"^DD",409.6,409.6,1.2,21,0)
^^2^2^3040121^
"^DD",409.6,409.6,1.2,21,1,0)
This field represents an appointment creation date that was completely 
"^DD",409.6,409.6,1.2,21,2,0)
scanned as the last one with this transmission.
"^DD",409.6,409.6,1.2,"DT")
3040121
"^DD",409.6,409.6,1.3,0)
# OF APPOINTMENTS^NJ9,0^^0;5^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",409.6,409.6,1.3,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",409.6,409.6,1.3,21,0)
^^2^2^3040121^
"^DD",409.6,409.6,1.3,21,1,0)
This is the number of appointments corresponding to individual MSG 
"^DD",409.6,409.6,1.3,21,2,0)
segments sent with this transmission.
"^DD",409.6,409.6,1.3,"DT")
3040121
"^DD",409.6,409.6,1.4,0)
# OF BATCHES^RNJ6,0^^0;6^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",409.6,409.6,1.4,3)
Type a Number between 0 and 999999, 0 Decimal Digits
"^DD",409.6,409.6,1.4,21,0)
^.001^1^1^3040121^^
"^DD",409.6,409.6,1.4,21,1,0)
This is the number of batches generated during the run.
"^DD",409.6,409.6,1.4,23,0)
^^1^1^3040121^
"^DD",409.6,409.6,1.4,23,1,0)
Batches are generated with up to 5000 messages per batch.
"^DD",409.6,409.6,1.4,"DT")
3040121
"^DD",409.6,409.6,1.5,0)
TRANSMISSION FINISHED^RD^^0;7^S %DT="ETR" D ^%DT S X=Y K:Y<1 X
"^DD",409.6,409.6,1.5,3)
This is a date/time when generating of all batches is complete.
"^DD",409.6,409.6,1.5,"DT")
3040121
"^DD",409.6,409.6,2,0)
PATIENT^409.69PA^^1;0
"^DD",409.6,409.6,2,21,0)
^.001^2^2^3040126^^^^
"^DD",409.6,409.6,2,21,1,0)
The multiple field that records key elements of the patient appointment
"^DD",409.6,409.6,2,21,2,0)
extract.
"^DD",409.6,409.6,2,"DT")
3031021
"^DD",409.6,409.6,3,0)
BATCH TRACKING^409.7A^^2;0
"^DD",409.6,409.69,0)
PATIENT SUB-FIELD^^9^10
"^DD",409.6,409.69,0,"DT")
3040126
"^DD",409.6,409.69,0,"IX","B",409.69,.01)

"^DD",409.6,409.69,0,"NM","PATIENT")

"^DD",409.6,409.69,0,"UP")
409.6
"^DD",409.6,409.69,.01,0)
PATIENT^P2'^DPT(^0;1^Q
"^DD",409.6,409.69,.01,1,0)
^.1
"^DD",409.6,409.69,.01,1,1,0)
409.69^B
"^DD",409.6,409.69,.01,1,1,1)
S ^SDWL(409.6,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",409.6,409.69,.01,1,1,2)
K ^SDWL(409.6,DA(1),1,"B",$E(X,1,30),DA)
"^DD",409.6,409.69,.01,3)
The patient whose appoinment is being transmitted
"^DD",409.6,409.69,.01,21,0)
^.001^2^2^3040121^^
"^DD",409.6,409.69,.01,21,1,0)
This subfield will hold the pointer to the Patient file to identify a name
"^DD",409.6,409.69,.01,21,2,0)
of each patient whose appointment information is being transmitted.
"^DD",409.6,409.69,.01,"DT")
3030929
"^DD",409.6,409.69,1,0)
APPT DATE^D^^0;2^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",409.6,409.69,1,3)
Scheduled date/time of the transmitted appointment
"^DD",409.6,409.69,1,21,0)
^^3^3^3040121^
"^DD",409.6,409.69,1,21,1,0)
This is the date/timen the appointment was scheduled for by the scheduling
"^DD",409.6,409.69,1,21,2,0)
package. This date and the appointment creation date is used in the 
"^DD",409.6,409.69,1,21,3,0)
patient wait time calculation.
"^DD",409.6,409.69,1,"DT")
3040121
"^DD",409.6,409.69,2,0)
HL7 BATCH #^F^^0;3^K:$L(X)>50!($L(X)<1) X
"^DD",409.6,409.69,2,3)
The HL7 batch number.
"^DD",409.6,409.69,2,21,0)
^^4^4^3040121^
"^DD",409.6,409.69,2,21,1,0)
This field records the HL7 batch number.  The batch number is used in
"^DD",409.6,409.69,2,21,2,0)
conjunction with incoming HL7 acknowledgement messages to identify the 
"^DD",409.6,409.69,2,21,3,0)
original extract message. This batch # corresponds to the Message Control 
"^DD",409.6,409.69,2,21,4,0)
ID in MSG segment.
"^DD",409.6,409.69,2,"DT")
3030924
"^DD",409.6,409.69,3,0)
HL7 SEQUENCE ID^RF^^0;4^K:$L(X)>50!($L(X)<1) X
"^DD",409.6,409.69,3,3)
Sequence # of this message within the batch
"^DD",409.6,409.69,3,21,0)
^^1^1^3040121^
"^DD",409.6,409.69,3,21,1,0)
This number corresponds to a location of this nessage within the Batch #.
"^DD",409.6,409.69,3,"DT")
3040120
"^DD",409.6,409.69,4,0)
RETENTION FLAG^RS^Y:YES - to be sent when 'Final';N:NO - was sent as 'Final';S:SENT as 'Final' with another entry;R:RESENT - because of rejection;^0;5^Q
"^DD",409.6,409.69,4,.1)
RETENTION FLAG INDICATING STATUS OF RECORD
"^DD",409.6,409.69,4,3)
Will the entry be retained for next transmission
"^DD",409.6,409.69,4,21,0)
^.001^4^4^3040121^^
"^DD",409.6,409.69,4,21,1,0)
This flag will determine if the entry is to remain in the file to be 
"^DD",409.6,409.69,4,21,2,0)
transmitted on the subsequent run. Also it may indicate that another 
"^DD",409.6,409.69,4,21,3,0)
entry was created because of 'S' - sending as final or 'R' - resending 
"^DD",409.6,409.69,4,21,4,0)
because of rejection.
"^DD",409.6,409.69,4,"DT")
3030919
"^DD",409.6,409.69,5,0)
EVENT REASON^S^CI:Check-in;NS:No Show;CC:Canceled by Clinic;CP:Canceled by Patient;COE:Checked out by Encounter;NM:No Match;CO:Checked-out;CT:Canceled Terminated;^0;6^Q
"^DD",409.6,409.69,5,3)

"^DD",409.6,409.69,5,21,0)
^.001^1^1^3040121^^^^
"^DD",409.6,409.69,5,21,1,0)
Event reason code as it is files into SCH.6 segment of HL7 message.
"^DD",409.6,409.69,5,"DT")
3040121
"^DD",409.6,409.69,6,0)
DATE APPT MADE^RD^^0;7^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",409.6,409.69,6,3)
(No range limit on date)
"^DD",409.6,409.69,6,21,0)
^^1^1^3040121^
"^DD",409.6,409.69,6,21,1,0)
This is the date when an appointment was created.
"^DD",409.6,409.69,6,"DT")
3040121
"^DD",409.6,409.69,7,0)
ERROR MESSAGE^P404.472'^SCPT(404.472,^0;8^Q
"^DD",409.6,409.69,7,.1)
Optional Error Flag or Error Code indicating rejection
"^DD",409.6,409.69,7,3)

"^DD",409.6,409.69,7,21,0)
^.001^3^3^3040126^^^^
"^DD",409.6,409.69,7,21,1,0)
If the Error Flag as 'R' or numeric error code is
"^DD",409.6,409.69,7,21,2,0)
entered it means that that appointment has to
"^DD",409.6,409.69,7,21,3,0)
be resent with its current status. A new entry will be created.
"^DD",409.6,409.69,7,"DT")
3040126
"^DD",409.6,409.69,8,0)
APPOINTMENT TYPE^S^AR:Action Required;NAT:No Action Taken;F:Future;NC:Non Count;I:Inpatient;NCF:Non Count Future;ABK:Auto Rebook;RS:Rescheduled;O:Outpatient;^0;9^Q
"^DD",409.6,409.69,8,3)

"^DD",409.6,409.69,8,21,0)
^^2^2^3040121^
"^DD",409.6,409.69,8,21,1,0)
This field records a descriptive code of the appointment type and it 
"^DD",409.6,409.69,8,21,2,0)
implements the Event Reason as the appointment identifier.
"^DD",409.6,409.69,8,"DT")
3030925
"^DD",409.6,409.69,9,0)
CLINIC^P44'^SC(^0;10^Q
"^DD",409.6,409.69,9,"DT")
3031229
"^DD",409.6,409.7,0)
BATCH TRACKING SUB-FIELD^^.05^5
"^DD",409.6,409.7,0,"DT")
3040210
"^DD",409.6,409.7,0,"IX","B",409.7,.01)

"^DD",409.6,409.7,0,"NM","BATCH TRACKING")

"^DD",409.6,409.7,0,"UP")
409.6
"^DD",409.6,409.7,.01,0)
BATCH CONTROL ID^F^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",409.6,409.7,.01,1,0)
^.1
"^DD",409.6,409.7,.01,1,1,0)
409.7^B
"^DD",409.6,409.7,.01,1,1,1)
S ^SDWL(409.6,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",409.6,409.7,.01,1,1,2)
K ^SDWL(409.6,DA(1),2,"B",$E(X,1,30),DA)
"^DD",409.6,409.7,.01,3)
Answer must be 1-30 characters in length.
"^DD",409.6,409.7,.01,21,0)
^^1^1^3040121^
"^DD",409.6,409.7,.01,21,1,0)
This fields corresponds to the Batch Control ID from the BSH segment.
"^DD",409.6,409.7,.01,"DT")
3040108
"^DD",409.6,409.7,.02,0)
BATCH CREATE DATE/TIME^D^^0;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",409.6,409.7,.02,21,0)
^.001^1^1^3040121^^
"^DD",409.6,409.7,.02,21,1,0)
The date/time HL7 packages creates the batch message.
"^DD",409.6,409.7,.02,"DT")
3031224
"^DD",409.6,409.7,.03,0)
MESSAGE CONTROL ID^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",409.6,409.7,.03,3)
Answer must be 1-30 characters in length.
"^DD",409.6,409.7,.03,21,0)
^^1^1^3040121^
"^DD",409.6,409.7,.03,21,1,0)
This fields corresponds to the Message Control ID from MSH segment.
"^DD",409.6,409.7,.03,"DT")
3040121
"^DD",409.6,409.7,.04,0)
APPLICATION ACK DATE/TIME^D^^0;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",409.6,409.7,.04,21,0)
^.001^2^2^3040121^^^^
"^DD",409.6,409.7,.04,21,1,0)
This is the date/time Vista HL7 receives the application acknowledgement 
"^DD",409.6,409.7,.04,21,2,0)
from the Vista Interface Engine.
"^DD",409.6,409.7,.04,"DT")
3031224
"^DD",409.6,409.7,.05,0)
APPLICATION ACK TYPE^S^AA:APPLICATION ACCEPT;AE:APPLICATION ERROR;AR:APPLICATION REJECT;MR:MANUAL REJECTION;^0;5^Q
"^DD",409.6,409.7,.05,"DT")
3040210
"^DIC",404.472,404.472,0)
PCMM HL7 ERROR CODE^404.472
"^DIC",404.472,404.472,0,"GL")
^SCPT(404.472,
"^DIC",404.472,404.472,"%",0)
^1.005^^0
"^DIC",404.472,404.472,"%D",0)
^^7^7^3000322^
"^DIC",404.472,404.472,"%D",1,0)
This table file contains a list of all error codes that the Austin
"^DIC",404.472,404.472,"%D",2,0)
Automation Center (AAC) will report when processing PCMM HL7
"^DIC",404.472,404.472,"%D",3,0)
Transmissions.
"^DIC",404.472,404.472,"%D",4,0)
 
"^DIC",404.472,404.472,"%D",5,0)
This table should not be edited in anyway by the site. If an entry in this
"^DIC",404.472,404.472,"%D",6,0)
file needs to be to be added, modified or deleted; a patch will be issued
"^DIC",404.472,404.472,"%D",7,0)
instructing the site how to make the change.
"^DIC",404.472,"B","PCMM HL7 ERROR CODE",404.472)

"^DIC",409.6,409.6,0)
PATIENT APPOINTMENT INFO LOG^409.6
"^DIC",409.6,409.6,0,"GL")
^SDWL(409.6,
"^DIC",409.6,409.6,"%",0)
^1.005^^
"^DIC",409.6,409.6,"%D",0)
^1.001^4^4^3040122^^
"^DIC",409.6,409.6,"%D",1,0)
The Patient Appointment Information Transmission (PAIT) log is maintained 
"^DIC",409.6,409.6,"%D",2,0)
in this file.  Log entries are added when appointment information is 
"^DIC",409.6,409.6,"%D",3,0)
transmitted to the Austin Automation Center via HL7 messages.  File 
"^DIC",409.6,409.6,"%D",4,0)
entries are deleted automatically when HL7 acknowledgments are received.
"^DIC",409.6,"B","PATIENT APPOINTMENT INFO LOG",409.6)

**END**
**END**
