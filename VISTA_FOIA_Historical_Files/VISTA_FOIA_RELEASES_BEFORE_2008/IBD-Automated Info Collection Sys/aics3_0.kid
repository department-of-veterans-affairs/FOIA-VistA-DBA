KIDS Distribution saved on Apr 24, 1997@08:53:49
AICS V3.0 RELEASE 4/24/97
**KIDS**:AUTOMATED INFO COLLECTION SYS 3.0^

**INSTALL NAME**
AUTOMATED INFO COLLECTION SYS 3.0
"BLD",116,0)
AUTOMATED INFO COLLECTION SYS 3.0^AUTOMATED INFO COLLECTION SYS^0^2970212^y
"BLD",116,1,0)
^^1^1^2970319^^^^
"BLD",116,1,1,0)
AICS v3.0, including scannable encounter form support.
"BLD",116,4,0)
^9.64PA^359.3^42
"BLD",116,4,357,0)
357
"BLD",116,4,357,222)
y^y^f^^^^n
"BLD",116,4,357.08,0)
357.08
"BLD",116,4,357.08,222)
y^y^f^^^^n
"BLD",116,4,357.09,0)
357.09
"BLD",116,4,357.09,222)
y^y^f^^^^n
"BLD",116,4,357.1,0)
357.1
"BLD",116,4,357.1,222)
y^y^f^^n^^n^o^n
"BLD",116,4,357.2,0)
357.2
"BLD",116,4,357.2,222)
y^y^f^^^^n
"BLD",116,4,357.3,0)
357.3
"BLD",116,4,357.3,222)
y^y^f^^^^n
"BLD",116,4,357.4,0)
357.4
"BLD",116,4,357.4,222)
y^y^f^^^^n
"BLD",116,4,357.5,0)
357.5
"BLD",116,4,357.5,222)
y^y^f^^^^n
"BLD",116,4,357.6,0)
357.6
"BLD",116,4,357.6,222)
y^y^f^^y^^y^o^n
"BLD",116,4,357.69,0)
357.69
"BLD",116,4,357.69,222)
y^y^f^^n^^y^m^n
"BLD",116,4,357.7,0)
357.7
"BLD",116,4,357.7,222)
y^y^f^^^^n
"BLD",116,4,357.8,0)
357.8
"BLD",116,4,357.8,222)
y^y^f^^^^n
"BLD",116,4,357.91,0)
357.91
"BLD",116,4,357.91,222)
y^y^f^^n^^y^o^n
"BLD",116,4,357.92,0)
357.92
"BLD",116,4,357.92,222)
y^y^f^^n^^y^o^n
"BLD",116,4,357.93,0)
357.93
"BLD",116,4,357.93,222)
y^y^f^^^^n
"BLD",116,4,357.94,0)
357.94
"BLD",116,4,357.94,222)
y^y^f^^^^n
"BLD",116,4,357.95,0)
357.95
"BLD",116,4,357.95,222)
y^y^f^^^^n
"BLD",116,4,357.96,0)
357.96
"BLD",116,4,357.96,222)
y^y^f^^^^n
"BLD",116,4,357.97,0)
357.97
"BLD",116,4,357.97,222)
y^y^f^^^^n
"BLD",116,4,357.98,0)
357.98
"BLD",116,4,357.98,222)
y^y^f^^n^^y^m^n
"BLD",116,4,357.99,0)
357.99
"BLD",116,4,357.99,222)
y^y^f^^^^n
"BLD",116,4,358,0)
358
"BLD",116,4,358,222)
y^y^f^^n^^y^o^n
"BLD",116,4,358.1,0)
358.1
"BLD",116,4,358.1,222)
y^y^f^^n^^y^o^n
"BLD",116,4,358.2,0)
358.2
"BLD",116,4,358.2,222)
y^y^f^^n^^y^o^n
"BLD",116,4,358.3,0)
358.3
"BLD",116,4,358.3,222)
y^y^f^^n^^y^o^n
"BLD",116,4,358.4,0)
358.4
"BLD",116,4,358.4,222)
y^y^f^^n^^y^o^n
"BLD",116,4,358.5,0)
358.5
"BLD",116,4,358.5,222)
y^y^f^^n^^y^o^n
"BLD",116,4,358.6,0)
358.6
"BLD",116,4,358.6,222)
y^y^f^^n^^y^o^n
"BLD",116,4,358.7,0)
358.7
"BLD",116,4,358.7,222)
y^y^f^^n^^y^o^n
"BLD",116,4,358.8,0)
358.8
"BLD",116,4,358.8,222)
y^y^f^^n^^y^o^n
"BLD",116,4,358.91,0)
358.91
"BLD",116,4,358.91,222)
y^y^f^^n^^y^o^n
"BLD",116,4,358.93,0)
358.93
"BLD",116,4,358.93,222)
y^y^f^^n^^y^o^n
"BLD",116,4,358.94,0)
358.94
"BLD",116,4,358.94,222)
y^y^f^^n^^y^o^n
"BLD",116,4,358.98,0)
358.98
"BLD",116,4,358.98,222)
y^y^f^^n^^y^o^n
"BLD",116,4,358.99,0)
358.99
"BLD",116,4,358.99,222)
y^y^f^^n^^y^o^n
"BLD",116,4,359,0)
359
"BLD",116,4,359,222)
y^y^f^^^^n
"BLD",116,4,359.1,0)
359.1
"BLD",116,4,359.1,222)
y^y^f^^n^^y^o^n
"BLD",116,4,359.2,0)
359.2
"BLD",116,4,359.2,222)
y^y^f^^^^n
"BLD",116,4,359.3,0)
359.3
"BLD",116,4,359.3,222)
y^y^f^^^^n
"BLD",116,4,359.94,0)
359.94
"BLD",116,4,359.94,222)
y^y^f^^^^n
"BLD",116,4,409.95,0)
409.95
"BLD",116,4,409.95,222)
y^y^f^^^^n
"BLD",116,4,409.96,0)
409.96
"BLD",116,4,409.96,222)
y^y^f^^^^n
"BLD",116,4,"B",357,357)

"BLD",116,4,"B",357.08,357.08)

"BLD",116,4,"B",357.09,357.09)

"BLD",116,4,"B",357.1,357.1)

"BLD",116,4,"B",357.2,357.2)

"BLD",116,4,"B",357.3,357.3)

"BLD",116,4,"B",357.4,357.4)

"BLD",116,4,"B",357.5,357.5)

"BLD",116,4,"B",357.6,357.6)

"BLD",116,4,"B",357.69,357.69)

"BLD",116,4,"B",357.7,357.7)

"BLD",116,4,"B",357.8,357.8)

"BLD",116,4,"B",357.91,357.91)

"BLD",116,4,"B",357.92,357.92)

"BLD",116,4,"B",357.93,357.93)

"BLD",116,4,"B",357.94,357.94)

"BLD",116,4,"B",357.95,357.95)

"BLD",116,4,"B",357.96,357.96)

"BLD",116,4,"B",357.97,357.97)

"BLD",116,4,"B",357.98,357.98)

"BLD",116,4,"B",357.99,357.99)

"BLD",116,4,"B",358,358)

"BLD",116,4,"B",358.1,358.1)

"BLD",116,4,"B",358.2,358.2)

"BLD",116,4,"B",358.3,358.3)

"BLD",116,4,"B",358.4,358.4)

"BLD",116,4,"B",358.5,358.5)

"BLD",116,4,"B",358.6,358.6)

"BLD",116,4,"B",358.7,358.7)

"BLD",116,4,"B",358.8,358.8)

"BLD",116,4,"B",358.91,358.91)

"BLD",116,4,"B",358.93,358.93)

"BLD",116,4,"B",358.94,358.94)

"BLD",116,4,"B",358.98,358.98)

"BLD",116,4,"B",358.99,358.99)

"BLD",116,4,"B",359,359)

"BLD",116,4,"B",359.1,359.1)

"BLD",116,4,"B",359.2,359.2)

"BLD",116,4,"B",359.3,359.3)

"BLD",116,4,"B",359.94,359.94)

"BLD",116,4,"B",409.95,409.95)

"BLD",116,4,"B",409.96,409.96)

"BLD",116,"ABNS",0)
^9.66A^1^1
"BLD",116,"ABNS",1,0)
IBD
"BLD",116,"ABNS",1,1,0)
^9.661A^^
"BLD",116,"ABNS","B","IBD",1)

"BLD",116,"ABPKG")
n^n^
"BLD",116,"INI")
IBDE2
"BLD",116,"INIT")
IBD3KPT
"BLD",116,"KRN",0)
^9.67PA^19^18
"BLD",116,"KRN",.4,0)
.4
"BLD",116,"KRN",.4,"NM",0)
^9.68A^1^1
"BLD",116,"KRN",.4,"NM",1,0)
IBD LIST ERRORS    FILE #359.3^359.3^0
"BLD",116,"KRN",.4,"NM","B","IBD LIST ERRORS    FILE #359.3",1)

"BLD",116,"KRN",.401,0)
.401
"BLD",116,"KRN",.401,"NM",0)
^9.68A^3^3
"BLD",116,"KRN",.401,"NM",1,0)
IBD PRIM CARE SEARCH    FILE #357.6^357.6^0
"BLD",116,"KRN",.401,"NM",2,0)
IBD RPC LIST    FILE #8994^8994^0
"BLD",116,"KRN",.401,"NM",3,0)
IBD LIST ERRORS    FILE #359.3^359.3^0
"BLD",116,"KRN",.401,"NM","B","IBD LIST ERRORS    FILE #359.3",3)

"BLD",116,"KRN",.401,"NM","B","IBD PRIM CARE SEARCH    FILE #357.6",1)

"BLD",116,"KRN",.401,"NM","B","IBD RPC LIST    FILE #8994",2)

"BLD",116,"KRN",.402,0)
.402
"BLD",116,"KRN",.402,"NM",0)
^9.68A^26^26
"BLD",116,"KRN",.402,"NM",1,0)
IBDF EDIT AVAILABLE HLTH SMRY    FILE #357.6^357.6^0
"BLD",116,"KRN",.402,"NM",2,0)
IBDF EDIT AVAILABLE REPORT    FILE #357.6^357.6^0
"BLD",116,"KRN",.402,"NM",3,0)
IBDF EDIT DATA FIELD    FILE #357.5^357.5^0
"BLD",116,"KRN",.402,"NM",4,0)
IBDF EDIT FORM HEADER    FILE #357.5^357.5^0
"BLD",116,"KRN",.402,"NM",5,0)
IBDF EDIT HAND PRINT FIELD    FILE #359.94^359.94^0
"BLD",116,"KRN",.402,"NM",6,0)
IBDF EDIT HEADER BLOCK    FILE #357.1^357.1^0
"BLD",116,"KRN",.402,"NM",7,0)
IBDF EDIT HEADER&OUTLINE    FILE #357.1^357.1^0
"BLD",116,"KRN",.402,"NM",8,0)
IBDF EDIT LABEL FIELD    FILE #357.5^357.5^0
"BLD",116,"KRN",.402,"NM",9,0)
IBDF EDIT MARKING AREA    FILE #357.91^357.91^0
"BLD",116,"KRN",.402,"NM",10,0)
IBDF EDIT MULT CHOICE FIELD    FILE #357.93^357.93^0
"BLD",116,"KRN",.402,"NM",11,0)
IBDF EDIT NEW FORM    FILE #357^357^0
"BLD",116,"KRN",.402,"NM",12,0)
IBDF EDIT OLD OR COPIED FORM    FILE #357^357^0
"BLD",116,"KRN",.402,"NM",13,0)
IBDF EDIT OUTPUT/SELECTION RTN    FILE #357.6^357.6^0
"BLD",116,"KRN",.402,"NM",14,0)
IBDF EDIT PLACE HOLDER    FILE #357.3^357.3^0
"BLD",116,"KRN",.402,"NM",15,0)
IBDF EDIT PRINTER    FILE #357.94^357.94^0
"BLD",116,"KRN",.402,"NM",16,0)
IBDF EDIT SELECTION    FILE #357.3^357.3^0
"BLD",116,"KRN",.402,"NM",17,0)
IBDF EDIT SELECTION LIST    FILE #357.2^357.2^0
"BLD",116,"KRN",.402,"NM",18,0)
IBDF EDIT TEXT AREA    FILE #357.8^357.8^0
"BLD",116,"KRN",.402,"NM",19,0)
IBDF FORM LINE    FILE #357.7^357.7^0
"BLD",116,"KRN",.402,"NM",20,0)
IBDF NEW EMPTY BLOCK    FILE #357.1^357.1^0
"BLD",116,"KRN",.402,"NM",21,0)
IBDF POSITION COPIED BLOCK    FILE #357.1^357.1^0
"BLD",116,"KRN",.402,"NM",22,0)
IBDF POSITION/SIZE COLUMNS    FILE #357.2^357.2^0
"BLD",116,"KRN",.402,"NM",23,0)
IBDF PRINT MANAGER    FILE #409.95^409.95^0
"BLD",116,"KRN",.402,"NM",24,0)
IBDF PRINT MANAGER    FILE #409.96^409.96^0
"BLD",116,"KRN",.402,"NM",25,0)
IBD CREATE FORM TRACKING    FILE #357.96^357.96^0
"BLD",116,"KRN",.402,"NM",26,0)
IBD EDIT FORM TRACKING STATUS    FILE #357.96^357.96^0
"BLD",116,"KRN",.402,"NM","B","IBD CREATE FORM TRACKING    FILE #357.96",25)

"BLD",116,"KRN",.402,"NM","B","IBD EDIT FORM TRACKING STATUS    FILE #357.96",26)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT AVAILABLE HLTH SMRY    FILE #357.6",1)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT AVAILABLE REPORT    FILE #357.6",2)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT DATA FIELD    FILE #357.5",3)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT FORM HEADER    FILE #357.5",4)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT HAND PRINT FIELD    FILE #359.94",5)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT HEADER BLOCK    FILE #357.1",6)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT HEADER&OUTLINE    FILE #357.1",7)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT LABEL FIELD    FILE #357.5",8)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT MARKING AREA    FILE #357.91",9)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT MULT CHOICE FIELD    FILE #357.93",10)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT NEW FORM    FILE #357",11)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT OLD OR COPIED FORM    FILE #357",12)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT OUTPUT/SELECTION RTN    FILE #357.6",13)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT PLACE HOLDER    FILE #357.3",14)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT PRINTER    FILE #357.94",15)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT SELECTION    FILE #357.3",16)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT SELECTION LIST    FILE #357.2",17)

"BLD",116,"KRN",.402,"NM","B","IBDF EDIT TEXT AREA    FILE #357.8",18)

"BLD",116,"KRN",.402,"NM","B","IBDF FORM LINE    FILE #357.7",19)

"BLD",116,"KRN",.402,"NM","B","IBDF NEW EMPTY BLOCK    FILE #357.1",20)

"BLD",116,"KRN",.402,"NM","B","IBDF POSITION COPIED BLOCK    FILE #357.1",21)

"BLD",116,"KRN",.402,"NM","B","IBDF POSITION/SIZE COLUMNS    FILE #357.2",22)

"BLD",116,"KRN",.402,"NM","B","IBDF PRINT MANAGER    FILE #409.95",23)

"BLD",116,"KRN",.402,"NM","B","IBDF PRINT MANAGER    FILE #409.96",24)

"BLD",116,"KRN",.403,0)
.403
"BLD",116,"KRN",.403,"NM",0)
^9.68A^^
"BLD",116,"KRN",.5,0)
.5
"BLD",116,"KRN",.5,"NM",0)
^9.68A^^
"BLD",116,"KRN",.84,0)
.84
"BLD",116,"KRN",.84,"NM",0)
^9.68A^27^27
"BLD",116,"KRN",.84,"NM",1,0)
3579501^^0
"BLD",116,"KRN",.84,"NM",2,0)
3579502^^0
"BLD",116,"KRN",.84,"NM",3,0)
3579601^^0
"BLD",116,"KRN",.84,"NM",4,0)
3579602^^0
"BLD",116,"KRN",.84,"NM",5,0)
3570001^^0
"BLD",116,"KRN",.84,"NM",6,0)
3579503^^0
"BLD",116,"KRN",.84,"NM",7,0)
3579504^^0
"BLD",116,"KRN",.84,"NM",8,0)
3579603^^0
"BLD",116,"KRN",.84,"NM",9,0)
3579505^^0
"BLD",116,"KRN",.84,"NM",10,0)
3579506^^0
"BLD",116,"KRN",.84,"NM",11,0)
3591001^^0
"BLD",116,"KRN",.84,"NM",12,0)
3576001^^0
"BLD",116,"KRN",.84,"NM",13,0)
3576002^^0
"BLD",116,"KRN",.84,"NM",14,0)
3576003^^0
"BLD",116,"KRN",.84,"NM",15,0)
3570002^^0
"BLD",116,"KRN",.84,"NM",16,0)
3579604^^0
"BLD",116,"KRN",.84,"NM",17,0)
3579605^^0
"BLD",116,"KRN",.84,"NM",18,0)
3579606^^0
"BLD",116,"KRN",.84,"NM",19,0)
3579607^^0
"BLD",116,"KRN",.84,"NM",20,0)
3579608^^0
"BLD",116,"KRN",.84,"NM",21,0)
3579609^^0
"BLD",116,"KRN",.84,"NM",22,0)
3579610^^0
"BLD",116,"KRN",.84,"NM",23,0)
3570003^^0
"BLD",116,"KRN",.84,"NM",24,0)
3579600^^0
"BLD",116,"KRN",.84,"NM",25,0)
3579611^^0
"BLD",116,"KRN",.84,"NM",26,0)
3570004^^0
"BLD",116,"KRN",.84,"NM",27,0)
3590000.1^^0
"BLD",116,"KRN",.84,"NM","B",3570001,5)

"BLD",116,"KRN",.84,"NM","B",3570002,15)

"BLD",116,"KRN",.84,"NM","B",3570003,23)

"BLD",116,"KRN",.84,"NM","B",3570004,26)

"BLD",116,"KRN",.84,"NM","B",3576001,12)

"BLD",116,"KRN",.84,"NM","B",3576002,13)

"BLD",116,"KRN",.84,"NM","B",3576003,14)

"BLD",116,"KRN",.84,"NM","B",3579501,1)

"BLD",116,"KRN",.84,"NM","B",3579502,2)

"BLD",116,"KRN",.84,"NM","B",3579503,6)

"BLD",116,"KRN",.84,"NM","B",3579504,7)

"BLD",116,"KRN",.84,"NM","B",3579505,9)

"BLD",116,"KRN",.84,"NM","B",3579506,10)

"BLD",116,"KRN",.84,"NM","B",3579600,24)

"BLD",116,"KRN",.84,"NM","B",3579601,3)

"BLD",116,"KRN",.84,"NM","B",3579602,4)

"BLD",116,"KRN",.84,"NM","B",3579603,8)

"BLD",116,"KRN",.84,"NM","B",3579604,16)

"BLD",116,"KRN",.84,"NM","B",3579605,17)

"BLD",116,"KRN",.84,"NM","B",3579606,18)

"BLD",116,"KRN",.84,"NM","B",3579607,19)

"BLD",116,"KRN",.84,"NM","B",3579608,20)

"BLD",116,"KRN",.84,"NM","B",3579609,21)

"BLD",116,"KRN",.84,"NM","B",3579610,22)

"BLD",116,"KRN",.84,"NM","B",3579611,25)

"BLD",116,"KRN",.84,"NM","B",3590000.1,27)

"BLD",116,"KRN",.84,"NM","B",3591001,11)

"BLD",116,"KRN",3.6,0)
3.6
"BLD",116,"KRN",3.6,"NM",0)
^9.68A^^
"BLD",116,"KRN",3.8,0)
3.8
"BLD",116,"KRN",3.8,"NM",0)
^9.68A^^
"BLD",116,"KRN",9.2,0)
9.2
"BLD",116,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",116,"KRN",9.8,0)
9.8
"BLD",116,"KRN",9.8,"NM",0)
^9.68A^391^226
"BLD",116,"KRN",9.8,"NM",2)
^^^
"BLD",116,"KRN",9.8,"NM",2,0)
IBD21KPR^^1^B2256197
"BLD",116,"KRN",9.8,"NM",8,0)
IBDE^^0^B4416892
"BLD",116,"KRN",9.8,"NM",9,0)
IBDE1^^0^B20530359
"BLD",116,"KRN",9.8,"NM",10,0)
IBDE1A^^0^B7333929
"BLD",116,"KRN",9.8,"NM",11,0)
IBDE1B^^0^B2390505
"BLD",116,"KRN",9.8,"NM",12,0)
IBDE2^^0^B885906
"BLD",116,"KRN",9.8,"NM",13,0)
IBDE3^^0^B22491681
"BLD",116,"KRN",9.8,"NM",14,0)
IBDE4^^0^B9080516
"BLD",116,"KRN",9.8,"NM",15,0)
IBDEHELP^^0^B17863225
"BLD",116,"KRN",9.8,"NM",68,0)
IBDEPRE^^0^B5404741
"BLD",116,"KRN",9.8,"NM",69,0)
IBDEPT^^0^B285907
"BLD",116,"KRN",9.8,"NM",70,0)
IBDF10^^0^B22746022
"BLD",116,"KRN",9.8,"NM",71,0)
IBDF10A^^0^B32981510
"BLD",116,"KRN",9.8,"NM",72,0)
IBDF10B^^0^B5552462
"BLD",116,"KRN",9.8,"NM",73,0)
IBDF10C^^0^B17141242
"BLD",116,"KRN",9.8,"NM",74,0)
IBDF11^^0^B7174368
"BLD",116,"KRN",9.8,"NM",75,0)
IBDF11A^^0^B5846124
"BLD",116,"KRN",9.8,"NM",76,0)
IBDF12^^0^B4851825
"BLD",116,"KRN",9.8,"NM",77,0)
IBDF13^^0^B13225816
"BLD",116,"KRN",9.8,"NM",78,0)
IBDF14^^0^B4148285
"BLD",116,"KRN",9.8,"NM",79,0)
IBDF14A^^0^B18221276
"BLD",116,"KRN",9.8,"NM",80,0)
IBDF15^^0^B4135551
"BLD",116,"KRN",9.8,"NM",81,0)
IBDF15A^^0^B22820339
"BLD",116,"KRN",9.8,"NM",82,0)
IBDF16^^0^B15361550
"BLD",116,"KRN",9.8,"NM",83,0)
IBDF17^^0^B19311881
"BLD",116,"KRN",9.8,"NM",84,0)
IBDF18^^0^B12592769
"BLD",116,"KRN",9.8,"NM",85,0)
IBDF18A^^0^B8128379
"BLD",116,"KRN",9.8,"NM",86,0)
IBDF18A1^^0^B16248968
"BLD",116,"KRN",9.8,"NM",87,0)
IBDF18B^^0^B2901601
"BLD",116,"KRN",9.8,"NM",88,0)
IBDF18C^^0^B33242900
"BLD",116,"KRN",9.8,"NM",89,0)
IBDF18D^^0^B3223739
"BLD",116,"KRN",9.8,"NM",90,0)
IBDF18E^^0^B33688796
"BLD",116,"KRN",9.8,"NM",91,0)
IBDF18E1^^0^B37960932
"BLD",116,"KRN",9.8,"NM",92,0)
IBDF19^^0^B22187387
"BLD",116,"KRN",9.8,"NM",93,0)
IBDF1A^^0^B15995674
"BLD",116,"KRN",9.8,"NM",94,0)
IBDF1B^^0^B36764571
"BLD",116,"KRN",9.8,"NM",95,0)
IBDF1B1^^0^B22436738
"BLD",116,"KRN",9.8,"NM",96,0)
IBDF1B1A^^0^B25135963
"BLD",116,"KRN",9.8,"NM",97,0)
IBDF1B1B^^0^B2981186
"BLD",116,"KRN",9.8,"NM",98,0)
IBDF1B2^^0^B3327541
"BLD",116,"KRN",9.8,"NM",99,0)
IBDF1B3^^0^B23656217
"BLD",116,"KRN",9.8,"NM",100,0)
IBDF1B5^^0^B23192084
"BLD",116,"KRN",9.8,"NM",101,0)
IBDF1BA^^0^B19149892
"BLD",116,"KRN",9.8,"NM",102,0)
IBDF1C^^0^B7016442
"BLD",116,"KRN",9.8,"NM",103,0)
IBDF2A^^0^B28922797
"BLD",116,"KRN",9.8,"NM",104,0)
IBDF2A1^^0^B37345380
"BLD",116,"KRN",9.8,"NM",105,0)
IBDF2A2^^0^B6279235
"BLD",116,"KRN",9.8,"NM",106,0)
IBDF2B^^0^B16192726
"BLD",116,"KRN",9.8,"NM",107,0)
IBDF2B1^^0^B3345156
"BLD",116,"KRN",9.8,"NM",108,0)
IBDF2D^^0^B29691873
"BLD",116,"KRN",9.8,"NM",109,0)
IBDF2D1^^0^B15404785
"BLD",116,"KRN",9.8,"NM",110,0)
IBDF2D2^^0^B44523884
"BLD",116,"KRN",9.8,"NM",111,0)
IBDF2D3^^0^B24692992
"BLD",116,"KRN",9.8,"NM",112,0)
IBDF2E^^0^B2204126
"BLD",116,"KRN",9.8,"NM",113,0)
IBDF2F^^0^B51568352
"BLD",116,"KRN",9.8,"NM",114,0)
IBDF2F1^^0^B15653116
"BLD",116,"KRN",9.8,"NM",115,0)
IBDF2G^^0^B2657801
"BLD",116,"KRN",9.8,"NM",116,0)
IBDF2H^^0^B1685748
"BLD",116,"KRN",9.8,"NM",117,0)
IBDF3^^0^B24796002
"BLD",116,"KRN",9.8,"NM",118,0)
IBDF4^^0^B70022639
"BLD",116,"KRN",9.8,"NM",119,0)
IBDF4A^^0^B39177722
"BLD",116,"KRN",9.8,"NM",120,0)
IBDF5^^0^B17073479
"BLD",116,"KRN",9.8,"NM",121,0)
IBDF5A^^0^B8497887
"BLD",116,"KRN",9.8,"NM",122,0)
IBDF5B^^0^B17974851
"BLD",116,"KRN",9.8,"NM",123,0)
IBDF5C^^0^B8857181
"BLD",116,"KRN",9.8,"NM",124,0)
IBDF5D^^0^B6700922
"BLD",116,"KRN",9.8,"NM",125,0)
IBDF6^^0^B17874713
"BLD",116,"KRN",9.8,"NM",126,0)
IBDF6A^^0^B15897163
"BLD",116,"KRN",9.8,"NM",127,0)
IBDF6C^^0^B1778463
"BLD",116,"KRN",9.8,"NM",128,0)
IBDF7^^0^B5091202
"BLD",116,"KRN",9.8,"NM",129,0)
IBDF8^^0^B2071881
"BLD",116,"KRN",9.8,"NM",130,0)
IBDF9^^0^B6295987
"BLD",116,"KRN",9.8,"NM",131,0)
IBDF9A^^0^B37361594
"BLD",116,"KRN",9.8,"NM",132,0)
IBDF9A1^^0^B20396325
"BLD",116,"KRN",9.8,"NM",133,0)
IBDF9A3^^0^B12685155
"BLD",116,"KRN",9.8,"NM",134,0)
IBDF9B^^0^B23526128
"BLD",116,"KRN",9.8,"NM",135,0)
IBDF9B1^^0^B28851228
"BLD",116,"KRN",9.8,"NM",136,0)
IBDF9B2^^0^B11998465
"BLD",116,"KRN",9.8,"NM",137,0)
IBDF9B3^^0^B10685448
"BLD",116,"KRN",9.8,"NM",138,0)
IBDF9B4^^0^B12555749
"BLD",116,"KRN",9.8,"NM",139,0)
IBDF9C^^0^B9373619
"BLD",116,"KRN",9.8,"NM",140,0)
IBDF9D^^0^B10416171
"BLD",116,"KRN",9.8,"NM",141,0)
IBDF9E^^0^B12821108
"BLD",116,"KRN",9.8,"NM",142,0)
IBDFBK1^^0^B17092946
"BLD",116,"KRN",9.8,"NM",143,0)
IBDFBK2^^0^B16683162
"BLD",116,"KRN",9.8,"NM",144,0)
IBDFBK3^^0^B32281921
"BLD",116,"KRN",9.8,"NM",145,0)
IBDFBKR^^0^B29774790
"BLD",116,"KRN",9.8,"NM",146,0)
IBDFBKS^^0^B47115892
"BLD",116,"KRN",9.8,"NM",147,0)
IBDFBKS1^^0^B51048469
"BLD",116,"KRN",9.8,"NM",148,0)
IBDFBKS2^^0^B69267536
"BLD",116,"KRN",9.8,"NM",149,0)
IBDFBKS3^^0^B55383129
"BLD",116,"KRN",9.8,"NM",150,0)
IBDFBKS4^^0^B20375936
"BLD",116,"KRN",9.8,"NM",151,0)
IBDFC^^0^B30799045
"BLD",116,"KRN",9.8,"NM",152,0)
IBDFC1^^0^B13457318
"BLD",116,"KRN",9.8,"NM",153,0)
IBDFC2^^0^B29667302
"BLD",116,"KRN",9.8,"NM",154,0)
IBDFC2A^^0^B15200420
"BLD",116,"KRN",9.8,"NM",155,0)
IBDFC2B^^0^B30216039
"BLD",116,"KRN",9.8,"NM",156,0)
IBDFC3^^0^B5127082
"BLD",116,"KRN",9.8,"NM",157,0)
IBDFC4^^0^B86781
"BLD",116,"KRN",9.8,"NM",158,0)
IBDFCG^^0^B40040584
"BLD",116,"KRN",9.8,"NM",159,0)
IBDFCG1^^0^B8806341
"BLD",116,"KRN",9.8,"NM",160,0)
IBDFCMP^^0^B28346911
"BLD",116,"KRN",9.8,"NM",161,0)
IBDFCMP1^^0^B28951214
"BLD",116,"KRN",9.8,"NM",162,0)
IBDFCNOF^^0^B22813864
"BLD",116,"KRN",9.8,"NM",163,0)
IBDFDE^^0^B73610506
"BLD",116,"KRN",9.8,"NM",164,0)
IBDFDE0^^0^B31406680
"BLD",116,"KRN",9.8,"NM",165,0)
IBDFDE1^^0^B42667964
"BLD",116,"KRN",9.8,"NM",166,0)
IBDFDE2^^0^B49571691
"BLD",116,"KRN",9.8,"NM",167,0)
IBDFDE21^^0^B73461259
"BLD",116,"KRN",9.8,"NM",168,0)
IBDFDE22^^0^B10626718
"BLD",116,"KRN",9.8,"NM",169,0)
IBDFDE3^^0^B54675126
"BLD",116,"KRN",9.8,"NM",170,0)
IBDFDE4^^0^B26071805
"BLD",116,"KRN",9.8,"NM",171,0)
IBDFDE5^^0^B71541193
"BLD",116,"KRN",9.8,"NM",172,0)
IBDFDE6^^0^B76903684
"BLD",116,"KRN",9.8,"NM",173,0)
IBDFDE61^^0^B5289484
"BLD",116,"KRN",9.8,"NM",174,0)
IBDFDE7^^0^B45086212
"BLD",116,"KRN",9.8,"NM",175,0)
IBDFDE8^^0^B15810835
"BLD",116,"KRN",9.8,"NM",176,0)
IBDFDE9^^0^B17338562
"BLD",116,"KRN",9.8,"NM",177,0)
IBDFDEA^^0^B21831002
"BLD",116,"KRN",9.8,"NM",178,0)
IBDFDVE^^0^B576354
"BLD",116,"KRN",9.8,"NM",179,0)
IBDFESP^^0^B7283127
"BLD",116,"KRN",9.8,"NM",180,0)
IBDFFSMP^^0^B9929055
"BLD",116,"KRN",9.8,"NM",181,0)
IBDFFT^^0^B43248827
"BLD",116,"KRN",9.8,"NM",182,0)
IBDFFT1^^0^B80632527
"BLD",116,"KRN",9.8,"NM",183,0)
IBDFFT2^^0^B6562468
"BLD",116,"KRN",9.8,"NM",184,0)
IBDFFV^^0^B12061481
"BLD",116,"KRN",9.8,"NM",185,0)
IBDFFV1^^0^B4555363
"BLD",116,"KRN",9.8,"NM",186,0)
IBDFFV2^^0^B6093684
"BLD",116,"KRN",9.8,"NM",187,0)
IBDFFV3^^0^B14617775
"BLD",116,"KRN",9.8,"NM",188,0)
IBDFGRP^^0^B21848520
"BLD",116,"KRN",9.8,"NM",189,0)
IBDFHLP^^0^B7021849
"BLD",116,"KRN",9.8,"NM",190,0)
IBDFLST^^0^B26165000
"BLD",116,"KRN",9.8,"NM",191,0)
IBDFLST1^^0^B2836396
"BLD",116,"KRN",9.8,"NM",192,0)
IBDFM1^^0^B31417580
"BLD",116,"KRN",9.8,"NM",193,0)
IBDFN^^0^B30939470
"BLD",116,"KRN",9.8,"NM",194,0)
IBDFN1^^0^B2746299
"BLD",116,"KRN",9.8,"NM",195,0)
IBDFN10^^0^B7926856
"BLD",116,"KRN",9.8,"NM",196,0)
IBDFN12^^0^B6233980
"BLD",116,"KRN",9.8,"NM",197,0)
IBDFN13^^0^B118134
"BLD",116,"KRN",9.8,"NM",198,0)
IBDFN14^^0^B5003154
"BLD",116,"KRN",9.8,"NM",199,0)
IBDFN2^^0^B16697465
"BLD",116,"KRN",9.8,"NM",200,0)
IBDFN3^^0^B4841459
"BLD",116,"KRN",9.8,"NM",201,0)
IBDFN4^^0^B6656679
"BLD",116,"KRN",9.8,"NM",202,0)
IBDFN5^^0^B3933959
"BLD",116,"KRN",9.8,"NM",203,0)
IBDFN6^^0^B5241261
"BLD",116,"KRN",9.8,"NM",204,0)
IBDFN7^^0^B3325804
"BLD",116,"KRN",9.8,"NM",205,0)
IBDFN8^^0^B192707
"BLD",116,"KRN",9.8,"NM",206,0)
IBDFN9^^0^B399325
"BLD",116,"KRN",9.8,"NM",207,0)
IBDFOSG^^0^B25176467
"BLD",116,"KRN",9.8,"NM",208,0)
IBDFOSG1^^0^B18935062
"BLD",116,"KRN",9.8,"NM",209,0)
IBDFOSG2^^0^B42849185
"BLD",116,"KRN",9.8,"NM",210,0)
IBDFOSG3^^0^B18159684
"BLD",116,"KRN",9.8,"NM",211,0)
IBDFOSG4^^0^B6067002
"BLD",116,"KRN",9.8,"NM",212)
^^^
"BLD",116,"KRN",9.8,"NM",212,0)
IBDFOSG9^^1
"BLD",116,"KRN",9.8,"NM",213,0)
IBDFPCE^^0^B4438660
"BLD",116,"KRN",9.8,"NM",214,0)
IBDFPE^^0^B25429405
"BLD",116,"KRN",9.8,"NM",215,0)
IBDFPE1^^0^B13475173
"BLD",116,"KRN",9.8,"NM",216,0)
IBDFPRG^^0^B26143827
"BLD",116,"KRN",9.8,"NM",217,0)
IBDFPRG1^^0^B9016199
"BLD",116,"KRN",9.8,"NM",218,0)
IBDFQB^^0^B36825604
"BLD",116,"KRN",9.8,"NM",219,0)
IBDFQEA^^0^B29261676
"BLD",116,"KRN",9.8,"NM",220,0)
IBDFQEA1^^0^B68530
"BLD",116,"KRN",9.8,"NM",221,0)
IBDFQS^^0^B1969260
"BLD",116,"KRN",9.8,"NM",222,0)
IBDFQSL^^0^B5375184
"BLD",116,"KRN",9.8,"NM",223,0)
IBDFQSL1^^0^B16849153
"BLD",116,"KRN",9.8,"NM",224,0)
IBDFQSL2^^0^B9293770
"BLD",116,"KRN",9.8,"NM",225,0)
IBDFREG^^0^B14290257
"BLD",116,"KRN",9.8,"NM",226,0)
IBDFRPC^^0^B35705919
"BLD",116,"KRN",9.8,"NM",227,0)
IBDFRPC1^^0^B17999832
"BLD",116,"KRN",9.8,"NM",228,0)
IBDFRPC2^^0^B49049772
"BLD",116,"KRN",9.8,"NM",229,0)
IBDFRPC3^^0^B13629639
"BLD",116,"KRN",9.8,"NM",230,0)
IBDFRPC4^^0^B15307122
"BLD",116,"KRN",9.8,"NM",231,0)
IBDFSS^^0^B33364586
"BLD",116,"KRN",9.8,"NM",232,0)
IBDFSS1^^0^B5301881
"BLD",116,"KRN",9.8,"NM",233,0)
IBDFST^^0^B19477796
"BLD",116,"KRN",9.8,"NM",234,0)
IBDFU^^0^B40607659
"BLD",116,"KRN",9.8,"NM",235,0)
IBDFU1^^0^B28658638
"BLD",116,"KRN",9.8,"NM",236,0)
IBDFU10^^0^B696220
"BLD",116,"KRN",9.8,"NM",237,0)
IBDFU1A^^0^B2262164
"BLD",116,"KRN",9.8,"NM",238,0)
IBDFU1B^^0^B23536814
"BLD",116,"KRN",9.8,"NM",239,0)
IBDFU1C^^0^B15403409
"BLD",116,"KRN",9.8,"NM",240,0)
IBDFU2^^0^B27957994
"BLD",116,"KRN",9.8,"NM",241,0)
IBDFU2A^^0^B39651125
"BLD",116,"KRN",9.8,"NM",242,0)
IBDFU2B^^0^B47875740
"BLD",116,"KRN",9.8,"NM",243,0)
IBDFU2C^^0^B19147360
"BLD",116,"KRN",9.8,"NM",244,0)
IBDFU3^^0^B20119293
"BLD",116,"KRN",9.8,"NM",245,0)
IBDFU4^^0^B10236465
"BLD",116,"KRN",9.8,"NM",246,0)
IBDFU5^^0^B22747341
"BLD",116,"KRN",9.8,"NM",247,0)
IBDFU5A^^0^B3914879
"BLD",116,"KRN",9.8,"NM",248,0)
IBDFU6^^0^B427128
"BLD",116,"KRN",9.8,"NM",249,0)
IBDFU7^^0^B1128095
"BLD",116,"KRN",9.8,"NM",250,0)
IBDFU8^^0^B13867822
"BLD",116,"KRN",9.8,"NM",251,0)
IBDFU9^^0^B4638447
"BLD",116,"KRN",9.8,"NM",252,0)
IBDFU91^^0^B4644604
"BLD",116,"KRN",9.8,"NM",253,0)
IBDFUA^^0^B8416962
"BLD",116,"KRN",9.8,"NM",254,0)
IBDFUTI^^0^B5791009
"BLD",116,"KRN",9.8,"NM",255,0)
IBDFUTL^^0^B24644726
"BLD",116,"KRN",9.8,"NM",256,0)
IBDFUTL1^^0^B42449880
"BLD",116,"KRN",9.8,"NM",257,0)
IBDFUTL2^^0^B21931458
"BLD",116,"KRN",9.8,"NM",258,0)
IBDFUTL3^^0^B4956030
"BLD",116,"KRN",9.8,"NM",263)
^^^
"BLD",116,"KRN",9.8,"NM",263,0)
IBDPPRE^^1
"BLD",116,"KRN",9.8,"NM",264)
^^^
"BLD",116,"KRN",9.8,"NM",264,0)
IBDPPT^^1
"BLD",116,"KRN",9.8,"NM",265)
^^^
"BLD",116,"KRN",9.8,"NM",265,0)
IBD21IN^^1^B2830991
"BLD",116,"KRN",9.8,"NM",266)
^^^
"BLD",116,"KRN",9.8,"NM",266,0)
IBD21P5^^1^B687354
"BLD",116,"KRN",9.8,"NM",267)
^^^
"BLD",116,"KRN",9.8,"NM",267,0)
IBD21PRE^^1^B7214343
"BLD",116,"KRN",9.8,"NM",268)
^^^
"BLD",116,"KRN",9.8,"NM",268,0)
IBD21PT^^1^B29482519
"BLD",116,"KRN",9.8,"NM",269)
^^^
"BLD",116,"KRN",9.8,"NM",269,0)
IBD21PT1^^1^B6451207
"BLD",116,"KRN",9.8,"NM",270)
^^^
"BLD",116,"KRN",9.8,"NM",270,0)
IBD21PT2^^1^B14037498
"BLD",116,"KRN",9.8,"NM",322)
^^^
"BLD",116,"KRN",9.8,"NM",322,0)
IBDY217^^1^B1341955
"BLD",116,"KRN",9.8,"NM",375,0)
IBDNTEG^^0^B18920575
"BLD",116,"KRN",9.8,"NM",376,0)
IBDNTEG0^^0^B5350985
"BLD",116,"KRN",9.8,"NM",377,0)
IBDFFT4^^0^B9210507
"BLD",116,"KRN",9.8,"NM",378,0)
IBDFFT3^^0^B29953323
"BLD",116,"KRN",9.8,"NM",379,0)
IBD3KENV^^0^B4957724
"BLD",116,"KRN",9.8,"NM",380,0)
IBD3KPT^^0^B38065984
"BLD",116,"KRN",9.8,"NM",381,0)
IBDF18E2^^0^B11690111
"BLD",116,"KRN",9.8,"NM",382,0)
IBDFST1^^0^B18358004
"BLD",116,"KRN",9.8,"NM",383,0)
IBDFN11^^0^B4317722
"BLD",116,"KRN",9.8,"NM",384,0)
IBDFDE10^^0^B716836
"BLD",116,"KRN",9.8,"NM",385,0)
IBDF18E0^^0^B20705712
"BLD",116,"KRN",9.8,"NM",386,0)
IBDF18E3^^0^B875886
"BLD",116,"KRN",9.8,"NM",387,0)
IBDFFRFT^^0^B8173671
"BLD",116,"KRN",9.8,"NM",388,0)
IBDFDE41^^0^B15981896
"BLD",116,"KRN",9.8,"NM",389,0)
IBDFDE42^^0^B4640064
"BLD",116,"KRN",9.8,"NM",390)
^^^
"BLD",116,"KRN",9.8,"NM",390,0)
IBDNTEG1^^1
"BLD",116,"KRN",9.8,"NM",391)
^^^
"BLD",116,"KRN",9.8,"NM",391,0)
IBDNTEG2^^1
"BLD",116,"KRN",9.8,"NM","B","IBD21IN",265)

"BLD",116,"KRN",9.8,"NM","B","IBD21KPR",2)

"BLD",116,"KRN",9.8,"NM","B","IBD21P5",266)

"BLD",116,"KRN",9.8,"NM","B","IBD21PRE",267)

"BLD",116,"KRN",9.8,"NM","B","IBD21PT",268)

"BLD",116,"KRN",9.8,"NM","B","IBD21PT1",269)

"BLD",116,"KRN",9.8,"NM","B","IBD21PT2",270)

"BLD",116,"KRN",9.8,"NM","B","IBD3KENV",379)

"BLD",116,"KRN",9.8,"NM","B","IBD3KPT",380)

"BLD",116,"KRN",9.8,"NM","B","IBDE",8)

"BLD",116,"KRN",9.8,"NM","B","IBDE1",9)

"BLD",116,"KRN",9.8,"NM","B","IBDE1A",10)

"BLD",116,"KRN",9.8,"NM","B","IBDE1B",11)

"BLD",116,"KRN",9.8,"NM","B","IBDE2",12)

"BLD",116,"KRN",9.8,"NM","B","IBDE3",13)

"BLD",116,"KRN",9.8,"NM","B","IBDE4",14)

"BLD",116,"KRN",9.8,"NM","B","IBDEHELP",15)

"BLD",116,"KRN",9.8,"NM","B","IBDEPRE",68)

"BLD",116,"KRN",9.8,"NM","B","IBDEPT",69)

"BLD",116,"KRN",9.8,"NM","B","IBDF10",70)

"BLD",116,"KRN",9.8,"NM","B","IBDF10A",71)

"BLD",116,"KRN",9.8,"NM","B","IBDF10B",72)

"BLD",116,"KRN",9.8,"NM","B","IBDF10C",73)

"BLD",116,"KRN",9.8,"NM","B","IBDF11",74)

"BLD",116,"KRN",9.8,"NM","B","IBDF11A",75)

"BLD",116,"KRN",9.8,"NM","B","IBDF12",76)

"BLD",116,"KRN",9.8,"NM","B","IBDF13",77)

"BLD",116,"KRN",9.8,"NM","B","IBDF14",78)

"BLD",116,"KRN",9.8,"NM","B","IBDF14A",79)

"BLD",116,"KRN",9.8,"NM","B","IBDF15",80)

"BLD",116,"KRN",9.8,"NM","B","IBDF15A",81)

"BLD",116,"KRN",9.8,"NM","B","IBDF16",82)

"BLD",116,"KRN",9.8,"NM","B","IBDF17",83)

"BLD",116,"KRN",9.8,"NM","B","IBDF18",84)

"BLD",116,"KRN",9.8,"NM","B","IBDF18A",85)

"BLD",116,"KRN",9.8,"NM","B","IBDF18A1",86)

"BLD",116,"KRN",9.8,"NM","B","IBDF18B",87)

"BLD",116,"KRN",9.8,"NM","B","IBDF18C",88)

"BLD",116,"KRN",9.8,"NM","B","IBDF18D",89)

"BLD",116,"KRN",9.8,"NM","B","IBDF18E",90)

"BLD",116,"KRN",9.8,"NM","B","IBDF18E0",385)

"BLD",116,"KRN",9.8,"NM","B","IBDF18E1",91)

"BLD",116,"KRN",9.8,"NM","B","IBDF18E2",381)

"BLD",116,"KRN",9.8,"NM","B","IBDF18E3",386)

"BLD",116,"KRN",9.8,"NM","B","IBDF19",92)

"BLD",116,"KRN",9.8,"NM","B","IBDF1A",93)

"BLD",116,"KRN",9.8,"NM","B","IBDF1B",94)

"BLD",116,"KRN",9.8,"NM","B","IBDF1B1",95)

"BLD",116,"KRN",9.8,"NM","B","IBDF1B1A",96)

"BLD",116,"KRN",9.8,"NM","B","IBDF1B1B",97)

"BLD",116,"KRN",9.8,"NM","B","IBDF1B2",98)

"BLD",116,"KRN",9.8,"NM","B","IBDF1B3",99)

"BLD",116,"KRN",9.8,"NM","B","IBDF1B5",100)

"BLD",116,"KRN",9.8,"NM","B","IBDF1BA",101)

"BLD",116,"KRN",9.8,"NM","B","IBDF1C",102)

"BLD",116,"KRN",9.8,"NM","B","IBDF2A",103)

"BLD",116,"KRN",9.8,"NM","B","IBDF2A1",104)

"BLD",116,"KRN",9.8,"NM","B","IBDF2A2",105)

"BLD",116,"KRN",9.8,"NM","B","IBDF2B",106)

"BLD",116,"KRN",9.8,"NM","B","IBDF2B1",107)

"BLD",116,"KRN",9.8,"NM","B","IBDF2D",108)

"BLD",116,"KRN",9.8,"NM","B","IBDF2D1",109)

"BLD",116,"KRN",9.8,"NM","B","IBDF2D2",110)

"BLD",116,"KRN",9.8,"NM","B","IBDF2D3",111)

"BLD",116,"KRN",9.8,"NM","B","IBDF2E",112)

"BLD",116,"KRN",9.8,"NM","B","IBDF2F",113)

"BLD",116,"KRN",9.8,"NM","B","IBDF2F1",114)

"BLD",116,"KRN",9.8,"NM","B","IBDF2G",115)

"BLD",116,"KRN",9.8,"NM","B","IBDF2H",116)

"BLD",116,"KRN",9.8,"NM","B","IBDF3",117)

"BLD",116,"KRN",9.8,"NM","B","IBDF4",118)

"BLD",116,"KRN",9.8,"NM","B","IBDF4A",119)

"BLD",116,"KRN",9.8,"NM","B","IBDF5",120)

"BLD",116,"KRN",9.8,"NM","B","IBDF5A",121)

"BLD",116,"KRN",9.8,"NM","B","IBDF5B",122)

"BLD",116,"KRN",9.8,"NM","B","IBDF5C",123)

"BLD",116,"KRN",9.8,"NM","B","IBDF5D",124)

"BLD",116,"KRN",9.8,"NM","B","IBDF6",125)

"BLD",116,"KRN",9.8,"NM","B","IBDF6A",126)

"BLD",116,"KRN",9.8,"NM","B","IBDF6C",127)

"BLD",116,"KRN",9.8,"NM","B","IBDF7",128)

"BLD",116,"KRN",9.8,"NM","B","IBDF8",129)

"BLD",116,"KRN",9.8,"NM","B","IBDF9",130)

"BLD",116,"KRN",9.8,"NM","B","IBDF9A",131)

"BLD",116,"KRN",9.8,"NM","B","IBDF9A1",132)

"BLD",116,"KRN",9.8,"NM","B","IBDF9A3",133)

"BLD",116,"KRN",9.8,"NM","B","IBDF9B",134)

"BLD",116,"KRN",9.8,"NM","B","IBDF9B1",135)

"BLD",116,"KRN",9.8,"NM","B","IBDF9B2",136)

"BLD",116,"KRN",9.8,"NM","B","IBDF9B3",137)

"BLD",116,"KRN",9.8,"NM","B","IBDF9B4",138)

"BLD",116,"KRN",9.8,"NM","B","IBDF9C",139)

"BLD",116,"KRN",9.8,"NM","B","IBDF9D",140)

"BLD",116,"KRN",9.8,"NM","B","IBDF9E",141)

"BLD",116,"KRN",9.8,"NM","B","IBDFBK1",142)

"BLD",116,"KRN",9.8,"NM","B","IBDFBK2",143)

"BLD",116,"KRN",9.8,"NM","B","IBDFBK3",144)

"BLD",116,"KRN",9.8,"NM","B","IBDFBKR",145)

"BLD",116,"KRN",9.8,"NM","B","IBDFBKS",146)

"BLD",116,"KRN",9.8,"NM","B","IBDFBKS1",147)

"BLD",116,"KRN",9.8,"NM","B","IBDFBKS2",148)

"BLD",116,"KRN",9.8,"NM","B","IBDFBKS3",149)

"BLD",116,"KRN",9.8,"NM","B","IBDFBKS4",150)

"BLD",116,"KRN",9.8,"NM","B","IBDFC",151)

"BLD",116,"KRN",9.8,"NM","B","IBDFC1",152)

"BLD",116,"KRN",9.8,"NM","B","IBDFC2",153)

"BLD",116,"KRN",9.8,"NM","B","IBDFC2A",154)

"BLD",116,"KRN",9.8,"NM","B","IBDFC2B",155)

"BLD",116,"KRN",9.8,"NM","B","IBDFC3",156)

"BLD",116,"KRN",9.8,"NM","B","IBDFC4",157)

"BLD",116,"KRN",9.8,"NM","B","IBDFCG",158)

"BLD",116,"KRN",9.8,"NM","B","IBDFCG1",159)

"BLD",116,"KRN",9.8,"NM","B","IBDFCMP",160)

"BLD",116,"KRN",9.8,"NM","B","IBDFCMP1",161)

"BLD",116,"KRN",9.8,"NM","B","IBDFCNOF",162)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE",163)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE0",164)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE1",165)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE10",384)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE2",166)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE21",167)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE22",168)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE3",169)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE4",170)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE41",388)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE42",389)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE5",171)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE6",172)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE61",173)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE7",174)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE8",175)

"BLD",116,"KRN",9.8,"NM","B","IBDFDE9",176)

"BLD",116,"KRN",9.8,"NM","B","IBDFDEA",177)

"BLD",116,"KRN",9.8,"NM","B","IBDFDVE",178)

"BLD",116,"KRN",9.8,"NM","B","IBDFESP",179)

"BLD",116,"KRN",9.8,"NM","B","IBDFFRFT",387)

"BLD",116,"KRN",9.8,"NM","B","IBDFFSMP",180)

"BLD",116,"KRN",9.8,"NM","B","IBDFFT",181)

"BLD",116,"KRN",9.8,"NM","B","IBDFFT1",182)

"BLD",116,"KRN",9.8,"NM","B","IBDFFT2",183)

"BLD",116,"KRN",9.8,"NM","B","IBDFFT3",378)

"BLD",116,"KRN",9.8,"NM","B","IBDFFT4",377)

"BLD",116,"KRN",9.8,"NM","B","IBDFFV",184)

"BLD",116,"KRN",9.8,"NM","B","IBDFFV1",185)

"BLD",116,"KRN",9.8,"NM","B","IBDFFV2",186)

"BLD",116,"KRN",9.8,"NM","B","IBDFFV3",187)

"BLD",116,"KRN",9.8,"NM","B","IBDFGRP",188)

"BLD",116,"KRN",9.8,"NM","B","IBDFHLP",189)

"BLD",116,"KRN",9.8,"NM","B","IBDFLST",190)

"BLD",116,"KRN",9.8,"NM","B","IBDFLST1",191)

"BLD",116,"KRN",9.8,"NM","B","IBDFM1",192)

"BLD",116,"KRN",9.8,"NM","B","IBDFN",193)

"BLD",116,"KRN",9.8,"NM","B","IBDFN1",194)

"BLD",116,"KRN",9.8,"NM","B","IBDFN10",195)

"BLD",116,"KRN",9.8,"NM","B","IBDFN11",383)

"BLD",116,"KRN",9.8,"NM","B","IBDFN12",196)

"BLD",116,"KRN",9.8,"NM","B","IBDFN13",197)

"BLD",116,"KRN",9.8,"NM","B","IBDFN14",198)

"BLD",116,"KRN",9.8,"NM","B","IBDFN2",199)

"BLD",116,"KRN",9.8,"NM","B","IBDFN3",200)

"BLD",116,"KRN",9.8,"NM","B","IBDFN4",201)

"BLD",116,"KRN",9.8,"NM","B","IBDFN5",202)

"BLD",116,"KRN",9.8,"NM","B","IBDFN6",203)

"BLD",116,"KRN",9.8,"NM","B","IBDFN7",204)

"BLD",116,"KRN",9.8,"NM","B","IBDFN8",205)

"BLD",116,"KRN",9.8,"NM","B","IBDFN9",206)

"BLD",116,"KRN",9.8,"NM","B","IBDFOSG",207)

"BLD",116,"KRN",9.8,"NM","B","IBDFOSG1",208)

"BLD",116,"KRN",9.8,"NM","B","IBDFOSG2",209)

"BLD",116,"KRN",9.8,"NM","B","IBDFOSG3",210)

"BLD",116,"KRN",9.8,"NM","B","IBDFOSG4",211)

"BLD",116,"KRN",9.8,"NM","B","IBDFOSG9",212)

"BLD",116,"KRN",9.8,"NM","B","IBDFPCE",213)

"BLD",116,"KRN",9.8,"NM","B","IBDFPE",214)

"BLD",116,"KRN",9.8,"NM","B","IBDFPE1",215)

"BLD",116,"KRN",9.8,"NM","B","IBDFPRG",216)

"BLD",116,"KRN",9.8,"NM","B","IBDFPRG1",217)

"BLD",116,"KRN",9.8,"NM","B","IBDFQB",218)

"BLD",116,"KRN",9.8,"NM","B","IBDFQEA",219)

"BLD",116,"KRN",9.8,"NM","B","IBDFQEA1",220)

"BLD",116,"KRN",9.8,"NM","B","IBDFQS",221)

"BLD",116,"KRN",9.8,"NM","B","IBDFQSL",222)

"BLD",116,"KRN",9.8,"NM","B","IBDFQSL1",223)

"BLD",116,"KRN",9.8,"NM","B","IBDFQSL2",224)

"BLD",116,"KRN",9.8,"NM","B","IBDFREG",225)

"BLD",116,"KRN",9.8,"NM","B","IBDFRPC",226)

"BLD",116,"KRN",9.8,"NM","B","IBDFRPC1",227)

"BLD",116,"KRN",9.8,"NM","B","IBDFRPC2",228)

"BLD",116,"KRN",9.8,"NM","B","IBDFRPC3",229)

"BLD",116,"KRN",9.8,"NM","B","IBDFRPC4",230)

"BLD",116,"KRN",9.8,"NM","B","IBDFSS",231)

"BLD",116,"KRN",9.8,"NM","B","IBDFSS1",232)

"BLD",116,"KRN",9.8,"NM","B","IBDFST",233)

"BLD",116,"KRN",9.8,"NM","B","IBDFST1",382)

"BLD",116,"KRN",9.8,"NM","B","IBDFU",234)

"BLD",116,"KRN",9.8,"NM","B","IBDFU1",235)

"BLD",116,"KRN",9.8,"NM","B","IBDFU10",236)

"BLD",116,"KRN",9.8,"NM","B","IBDFU1A",237)

"BLD",116,"KRN",9.8,"NM","B","IBDFU1B",238)

"BLD",116,"KRN",9.8,"NM","B","IBDFU1C",239)

"BLD",116,"KRN",9.8,"NM","B","IBDFU2",240)

"BLD",116,"KRN",9.8,"NM","B","IBDFU2A",241)

"BLD",116,"KRN",9.8,"NM","B","IBDFU2B",242)

"BLD",116,"KRN",9.8,"NM","B","IBDFU2C",243)

"BLD",116,"KRN",9.8,"NM","B","IBDFU3",244)

"BLD",116,"KRN",9.8,"NM","B","IBDFU4",245)

"BLD",116,"KRN",9.8,"NM","B","IBDFU5",246)

"BLD",116,"KRN",9.8,"NM","B","IBDFU5A",247)

"BLD",116,"KRN",9.8,"NM","B","IBDFU6",248)

"BLD",116,"KRN",9.8,"NM","B","IBDFU7",249)

"BLD",116,"KRN",9.8,"NM","B","IBDFU8",250)

"BLD",116,"KRN",9.8,"NM","B","IBDFU9",251)

"BLD",116,"KRN",9.8,"NM","B","IBDFU91",252)

"BLD",116,"KRN",9.8,"NM","B","IBDFUA",253)

"BLD",116,"KRN",9.8,"NM","B","IBDFUTI",254)

"BLD",116,"KRN",9.8,"NM","B","IBDFUTL",255)

"BLD",116,"KRN",9.8,"NM","B","IBDFUTL1",256)

"BLD",116,"KRN",9.8,"NM","B","IBDFUTL2",257)

"BLD",116,"KRN",9.8,"NM","B","IBDFUTL3",258)

"BLD",116,"KRN",9.8,"NM","B","IBDNTEG",375)

"BLD",116,"KRN",9.8,"NM","B","IBDNTEG0",376)

"BLD",116,"KRN",9.8,"NM","B","IBDNTEG1",390)

"BLD",116,"KRN",9.8,"NM","B","IBDNTEG2",391)

"BLD",116,"KRN",9.8,"NM","B","IBDPPRE",263)

"BLD",116,"KRN",9.8,"NM","B","IBDPPT",264)

"BLD",116,"KRN",9.8,"NM","B","IBDY217",322)

"BLD",116,"KRN",19,0)
19
"BLD",116,"KRN",19,"NM",0)
^9.68A^48^48
"BLD",116,"KRN",19,"NM",1,0)
IBD MANUAL DATA DISPLAY^^0
"BLD",116,"KRN",19,"NM",2,0)
IBD MANUAL DATA ENTRY BY CLIN^^0
"BLD",116,"KRN",19,"NM",3,0)
IBD MANUAL DATA ENTRY BY FORM^^0
"BLD",116,"KRN",19,"NM",4,0)
IBD MANUAL DATA ENTRY GROUP^^0
"BLD",116,"KRN",19,"NM",5,0)
IBD MANUAL DATA ENTRY MENU^^0
"BLD",116,"KRN",19,"NM",6,0)
IBD MANUAL DATA ENTRY PRE^^0
"BLD",116,"KRN",19,"NM",7,0)
IBDF AUTO PURGE FORM TRACKING^^0
"BLD",116,"KRN",19,"NM",8,0)
IBDF BACKGRD EF PRINT QUEUE^^0
"BLD",116,"KRN",19,"NM",9,0)
IBDF CLINIC SETUP/EDIT FORMS^^0
"BLD",116,"KRN",19,"NM",10,0)
IBDF COPY CPTS TO FORM^^0
"BLD",116,"KRN",19,"NM",11,0)
IBDF DEFINE AVAILABLE REPORT^^0
"BLD",116,"KRN",19,"NM",12,0)
IBDF DEFINE AVLABLE HLTH SMRY^^0
"BLD",116,"KRN",19,"NM",13,0)
IBDF EDIT CLINIC REPORTS^^0
"BLD",116,"KRN",19,"NM",14,0)
IBDF EDIT DIVISION REPORTS^^0
"BLD",116,"KRN",19,"NM",15,0)
IBDF EDIT ENCOUNTER FORMS^^0
"BLD",116,"KRN",19,"NM",16,0)
IBDF EDIT MARKING AREA^^0
"BLD",116,"KRN",19,"NM",17,0)
IBDF EDIT PACKAGE INTERFACE^^0
"BLD",116,"KRN",19,"NM",18,0)
IBDF EDIT PRINTERS^^0
"BLD",116,"KRN",19,"NM",19,0)
IBDF EDIT SITE PARAM^^0
"BLD",116,"KRN",19,"NM",20,0)
IBDF EDIT TOOL KIT^^0
"BLD",116,"KRN",19,"NM",21,0)
IBDF EDIT TOOL KIT BLOCKS^^0
"BLD",116,"KRN",19,"NM",22,0)
IBDF EDIT TOOL KIT FORMS^^0
"BLD",116,"KRN",19,"NM",23,0)
IBDF ENCOUNTER FORM^^0
"BLD",116,"KRN",19,"NM",24,0)
IBDF FORMS TRACKING^^0
"BLD",116,"KRN",19,"NM",25,0)
IBDF IMPORT/EXPORT UTILITY^^0
"BLD",116,"KRN",19,"NM",26,0)
IBDF IRM OPTIONS^^0
"BLD",116,"KRN",19,"NM",27,0)
IBDF LIST CLINICS USING FORMS^^0
"BLD",116,"KRN",19,"NM",28,0)
IBDF LIST CLINICS WITH NO FORM^^0
"BLD",116,"KRN",19,"NM",29,0)
IBDF MANUAL PURGE FORM TRACK^^0
"BLD",116,"KRN",19,"NM",30,0)
IBDF MISCELLANEOUS CLEANUP^^0
"BLD",116,"KRN",19,"NM",31,0)
IBDF PRINT BLNK ENCOUNTER FORM^^0
"BLD",116,"KRN",19,"NM",32,0)
IBDF PRINT ENCOUNTER FORMS^^0
"BLD",116,"KRN",19,"NM",33,0)
IBDF PRINT MANAGER^^0
"BLD",116,"KRN",19,"NM",34,0)
IBDF PRINT OPTIONS^^0
"BLD",116,"KRN",19,"NM",35,0)
IBDF PRINT SAMPLE ALL CLINICS^^0
"BLD",116,"KRN",19,"NM",36,0)
IBDF PRNT FORM W/DATA NO APPT.^^0
"BLD",116,"KRN",19,"NM",37,0)
IBDF RECOMPILE ALL FORMS^^0
"BLD",116,"KRN",19,"NM",38,0)
IBDF REPORT CLINIC SETUPS^^0
"BLD",116,"KRN",19,"NM",39,0)
IBDF REPORTS MENU^^0
"BLD",116,"KRN",19,"NM",40,0)
IBDF SCANNED W/BILL GEN^^0
"BLD",116,"KRN",19,"NM",41,0)
IBDF SETUP AUTO CLINIC PRINT^^0
"BLD",116,"KRN",19,"NM",42,0)
IBDF UTIL MAINTENANCE UTILITY^^0
"BLD",116,"KRN",19,"NM",43,0)
IBDF VALIDATE FORMS^^0
"BLD",116,"KRN",19,"NM",44,0)
IBDFC CONVERSION UTILITY^^0
"BLD",116,"KRN",19,"NM",45,0)
IBD SCANNING WORKSTATION^^0
"BLD",116,"KRN",19,"NM",46,0)
IBDF EF FORM COMPONENTS^^0
"BLD",116,"KRN",19,"NM",47,0)
IBDF PRINT ERROR LIST^^0
"BLD",116,"KRN",19,"NM",48,0)
IB OUTPUT MOST COMMON OPT CPT^^0
"BLD",116,"KRN",19,"NM","B","IB OUTPUT MOST COMMON OPT CPT",48)

"BLD",116,"KRN",19,"NM","B","IBD MANUAL DATA DISPLAY",1)

"BLD",116,"KRN",19,"NM","B","IBD MANUAL DATA ENTRY BY CLIN",2)

"BLD",116,"KRN",19,"NM","B","IBD MANUAL DATA ENTRY BY FORM",3)

"BLD",116,"KRN",19,"NM","B","IBD MANUAL DATA ENTRY GROUP",4)

"BLD",116,"KRN",19,"NM","B","IBD MANUAL DATA ENTRY MENU",5)

"BLD",116,"KRN",19,"NM","B","IBD MANUAL DATA ENTRY PRE",6)

"BLD",116,"KRN",19,"NM","B","IBD SCANNING WORKSTATION",45)

"BLD",116,"KRN",19,"NM","B","IBDF AUTO PURGE FORM TRACKING",7)

"BLD",116,"KRN",19,"NM","B","IBDF BACKGRD EF PRINT QUEUE",8)

"BLD",116,"KRN",19,"NM","B","IBDF CLINIC SETUP/EDIT FORMS",9)

"BLD",116,"KRN",19,"NM","B","IBDF COPY CPTS TO FORM",10)

"BLD",116,"KRN",19,"NM","B","IBDF DEFINE AVAILABLE REPORT",11)

"BLD",116,"KRN",19,"NM","B","IBDF DEFINE AVLABLE HLTH SMRY",12)

"BLD",116,"KRN",19,"NM","B","IBDF EDIT CLINIC REPORTS",13)

"BLD",116,"KRN",19,"NM","B","IBDF EDIT DIVISION REPORTS",14)

"BLD",116,"KRN",19,"NM","B","IBDF EDIT ENCOUNTER FORMS",15)

"BLD",116,"KRN",19,"NM","B","IBDF EDIT MARKING AREA",16)

"BLD",116,"KRN",19,"NM","B","IBDF EDIT PACKAGE INTERFACE",17)

"BLD",116,"KRN",19,"NM","B","IBDF EDIT PRINTERS",18)

"BLD",116,"KRN",19,"NM","B","IBDF EDIT SITE PARAM",19)

"BLD",116,"KRN",19,"NM","B","IBDF EDIT TOOL KIT",20)

"BLD",116,"KRN",19,"NM","B","IBDF EDIT TOOL KIT BLOCKS",21)

"BLD",116,"KRN",19,"NM","B","IBDF EDIT TOOL KIT FORMS",22)

"BLD",116,"KRN",19,"NM","B","IBDF EF FORM COMPONENTS",46)

"BLD",116,"KRN",19,"NM","B","IBDF ENCOUNTER FORM",23)

"BLD",116,"KRN",19,"NM","B","IBDF FORMS TRACKING",24)

"BLD",116,"KRN",19,"NM","B","IBDF IMPORT/EXPORT UTILITY",25)

"BLD",116,"KRN",19,"NM","B","IBDF IRM OPTIONS",26)

"BLD",116,"KRN",19,"NM","B","IBDF LIST CLINICS USING FORMS",27)

"BLD",116,"KRN",19,"NM","B","IBDF LIST CLINICS WITH NO FORM",28)

"BLD",116,"KRN",19,"NM","B","IBDF MANUAL PURGE FORM TRACK",29)

"BLD",116,"KRN",19,"NM","B","IBDF MISCELLANEOUS CLEANUP",30)

"BLD",116,"KRN",19,"NM","B","IBDF PRINT BLNK ENCOUNTER FORM",31)

"BLD",116,"KRN",19,"NM","B","IBDF PRINT ENCOUNTER FORMS",32)

"BLD",116,"KRN",19,"NM","B","IBDF PRINT ERROR LIST",47)

"BLD",116,"KRN",19,"NM","B","IBDF PRINT MANAGER",33)

"BLD",116,"KRN",19,"NM","B","IBDF PRINT OPTIONS",34)

"BLD",116,"KRN",19,"NM","B","IBDF PRINT SAMPLE ALL CLINICS",35)

"BLD",116,"KRN",19,"NM","B","IBDF PRNT FORM W/DATA NO APPT.",36)

"BLD",116,"KRN",19,"NM","B","IBDF RECOMPILE ALL FORMS",37)

"BLD",116,"KRN",19,"NM","B","IBDF REPORT CLINIC SETUPS",38)

"BLD",116,"KRN",19,"NM","B","IBDF REPORTS MENU",39)

"BLD",116,"KRN",19,"NM","B","IBDF SCANNED W/BILL GEN",40)

"BLD",116,"KRN",19,"NM","B","IBDF SETUP AUTO CLINIC PRINT",41)

"BLD",116,"KRN",19,"NM","B","IBDF UTIL MAINTENANCE UTILITY",42)

"BLD",116,"KRN",19,"NM","B","IBDF VALIDATE FORMS",43)

"BLD",116,"KRN",19,"NM","B","IBDFC CONVERSION UTILITY",44)

"BLD",116,"KRN",19.1,0)
19.1
"BLD",116,"KRN",19.1,"NM",0)
^9.68A^4^3
"BLD",116,"KRN",19.1,"NM",1,0)
IBDF IRM^^0
"BLD",116,"KRN",19.1,"NM",3,0)
IBD MANAGER^^0
"BLD",116,"KRN",19.1,"NM",4,0)
IBD SCAN MANAGER^^0
"BLD",116,"KRN",19.1,"NM","B","IBD MANAGER",3)

"BLD",116,"KRN",19.1,"NM","B","IBD SCAN MANAGER",4)

"BLD",116,"KRN",19.1,"NM","B","IBDF IRM",1)

"BLD",116,"KRN",101,0)
101
"BLD",116,"KRN",101,"NM",0)
^9.68A^158^156
"BLD",116,"KRN",101,"NM",1,0)
IBDE ADD BLOCK TO IMP/EXP WS^^0
"BLD",116,"KRN",101,"NM",2,0)
IBDE ADD FORM TO IMP/EXP WS^^0
"BLD",116,"KRN",101,"NM",3,0)
IBDE DELETE FORM FROM IMP/EXP FILES^^0
"BLD",116,"KRN",101,"NM",4,0)
IBDE DELETE IMP/EXP FILES^^0
"BLD",116,"KRN",101,"NM",5,0)
IBDE DELTE TK BLOCK FROM IMP/EXP FILES^^0
"BLD",116,"KRN",101,"NM",6,0)
IBDE DISPLAY TK BLOCKS^^0
"BLD",116,"KRN",101,"NM",7,0)
IBDE EDIT BLOCK'S IMP/EXP NOTES^^0
"BLD",116,"KRN",101,"NM",8,0)
IBDE EDIT FORM'S IMP/EXP NOTES^^0
"BLD",116,"KRN",101,"NM",9,0)
IBDE EXECUTE DIFROM^^0
"BLD",116,"KRN",101,"NM",10,0)
IBDE EXECUTE INITS^^0
"BLD",116,"KRN",101,"NM",11,0)
IBDE IMP/EXP HELP^^0
"BLD",116,"KRN",101,"NM",12,0)
IBDE IMP/EXP MENU FOR BLOCKS^^0
"BLD",116,"KRN",101,"NM",13,0)
IBDE IMP/EXP MENU FOR FORMS^^0
"BLD",116,"KRN",101,"NM",14,0)
IBDE IMPORT FORM^^0
"BLD",116,"KRN",101,"NM",15,0)
IBDE IMPORT TK BLOCK^^0
"BLD",116,"KRN",101,"NM",16,0)
IBDE VIEW BLOCK'S IMP/EXP NOTES^^0
"BLD",116,"KRN",101,"NM",17,0)
IBDE VIEW FORM'S IMP/EXP NOTES^^0
"BLD",116,"KRN",101,"NM",18,0)
IBDF ADD BLANK GROUP^^0
"BLD",116,"KRN",101,"NM",19,0)
IBDF ADD BLANK SELECTION^^0
"BLD",116,"KRN",101,"NM",20,0)
IBDF ADD GROUP^^0
"BLD",116,"KRN",101,"NM",21,0)
IBDF ADD SELECTION^^0
"BLD",116,"KRN",101,"NM",22,0)
IBDF ADD TO CLINIC SETUP^^0
"BLD",116,"KRN",101,"NM",23,0)
IBDF CHANGE BLOCK TK ORDER^^0
"BLD",116,"KRN",101,"NM",24,0)
IBDF CHANGE CLINIC^^0
"BLD",116,"KRN",101,"NM",25,0)
IBDF CLINIC'S FORMS MENU^^0
"BLD",116,"KRN",101,"NM",26,0)
IBDF COMP EXP^^0
"BLD",116,"KRN",101,"NM",27,0)
IBDF COMPILE FORM^^0
"BLD",116,"KRN",101,"NM",28,0)
IBDF COMPONENT EXP PROTO^^0
"BLD",116,"KRN",101,"NM",29,0)
IBDF COPY BLOCK INTO TOOL KIT^^0
"BLD",116,"KRN",101,"NM",30,0)
IBDF COPY FORM^^0
"BLD",116,"KRN",101,"NM",31,0)
IBDF COPY FORM BLOCK^^0
"BLD",116,"KRN",101,"NM",32,0)
IBDF CREATE BLANK FORM^^0
"BLD",116,"KRN",101,"NM",33,0)
IBDF CREATE EMPTY BLOCK^^0
"BLD",116,"KRN",101,"NM",34,0)
IBDF DATA FIELD^^0
"BLD",116,"KRN",101,"NM",35,0)
IBDF DELETE A BLOCK^^0
"BLD",116,"KRN",101,"NM",36,0)
IBDF DELETE FORM^^0
"BLD",116,"KRN",101,"NM",37,0)
IBDF DELETE FROM CLINIC SETUP^^0
"BLD",116,"KRN",101,"NM",38,0)
IBDF DELETE GROUP^^0
"BLD",116,"KRN",101,"NM",39,0)
IBDF DELETE SELECTION^^0
"BLD",116,"KRN",101,"NM",40,0)
IBDF DELETE TOOL KIT BLOCK^^0
"BLD",116,"KRN",101,"NM",41,0)
IBDF DELETE TOOL KIT FORM^^0
"BLD",116,"KRN",101,"NM",42,0)
IBDF DISPLAY FORM BLOCK FOR EDIT^^0
"BLD",116,"KRN",101,"NM",43,0)
IBDF DISPLAY GRP'S SLCTNS FOR EDIT^^0
"BLD",116,"KRN",101,"NM",44,0)
IBDF DISPLAY TOOL KIT BLOCKS FOR ADDING^^0
"BLD",116,"KRN",101,"NM",45,0)
IBDF EDIT FORM^^0
"BLD",116,"KRN",101,"NM",46,0)
IBDF EDIT FORM BLOCK MENU^^0
"BLD",116,"KRN",101,"NM",47,0)
IBDF EDIT FORM NAME/DESCR/SIZE^^0
"BLD",116,"KRN",101,"NM",48,0)
IBDF EDIT GROUP HDR/ORDER^^0
"BLD",116,"KRN",101,"NM",49,0)
IBDF EDIT GROUP'S SELECTIONS MENU^^0
"BLD",116,"KRN",101,"NM",50,0)
IBDF EDIT HEADER BLOCK^^0
"BLD",116,"KRN",101,"NM",51,0)
IBDF EDIT NAME,HEADER,OUTLINE^^0
"BLD",116,"KRN",101,"NM",52,0)
IBDF EDIT SELECTION^^0
"BLD",116,"KRN",101,"NM",53,0)
IBDF EDIT SELECTION LIST MENU^^0
"BLD",116,"KRN",101,"NM",54,0)
IBDF EDIT TOOL KIT BLOCK^^0
"BLD",116,"KRN",101,"NM",55,0)
IBDF EDIT TOOL KIT BLOCKS MENU^^0
"BLD",116,"KRN",101,"NM",56,0)
IBDF EF ADD QUEUE PARMS^^0
"BLD",116,"KRN",101,"NM",57,0)
IBDF EF CLINIC GROUP ADD^^0
"BLD",116,"KRN",101,"NM",58,0)
IBDF EF CLINIC GROUP DELETE^^0
"BLD",116,"KRN",101,"NM",59,0)
IBDF EF CLINIC GROUP EDIT^^0
"BLD",116,"KRN",101,"NM",60,0)
IBDF EF CLINIC GROUP JUMP^^0
"BLD",116,"KRN",101,"NM",61,0)
IBDF EF CLINIC GROUP MENU^^0
"BLD",116,"KRN",101,"NM",62,0)
IBDF EF CLINIC GROUP MENU ACTION^^0
"BLD",116,"KRN",101,"NM",63,0)
IBDF EF DELETE QUEUE PARMS^^0
"BLD",116,"KRN",101,"NM",64,0)
IBDF EF EDIT QUEUE PARMS^^0
"BLD",116,"KRN",101,"NM",65,0)
IBDF EF EXIT^^0
"BLD",116,"KRN",101,"NM",66,0)
IBDF EF HELP MENU^^0
"BLD",116,"KRN",101,"NM",67,0)
IBDF EF HELP SPEC INST^^0
"BLD",116,"KRN",101,"NM",68,0)
IBDF EF PARAMETER GROUP JUMP^^0
"BLD",116,"KRN",101,"NM",69,0)
IBDF EF QUEUE PARMS MENU^^0
"BLD",116,"KRN",101,"NM",70,0)
IBDF EF QUEUE PRINT FORMS^^0
"BLD",116,"KRN",101,"NM",71,0)
IBDF EF QUEUE STATS^^0
"BLD",116,"KRN",101,"NM",72,0)
IBDF EF QUIT^^0
"BLD",116,"KRN",101,"NM",74,0)
IBDF FORM COMPONENT ACTION^^0
"BLD",116,"KRN",101,"NM",75,0)
IBDF FORM COMPONENT MENU^^0
"BLD",116,"KRN",101,"NM",76,0)
IBDF FORMAT ALL SELECTIONS^^0
"BLD",116,"KRN",101,"NM",77,0)
IBDF FORMAT GROUP'S SELECTIONS^^0
"BLD",116,"KRN",101,"NM",78,0)
IBDF FT CHANGE LIST^^0
"BLD",116,"KRN",101,"NM",79,0)
IBDF FT DELETE^^0
"BLD",116,"KRN",101,"NM",80,0)
IBDF FT MENU^^0
"BLD",116,"KRN",101,"NM",81,0)
IBDF FT STATISTICS^^0
"BLD",116,"KRN",101,"NM",82,0)
IBDF FT STATS MENU^^0
"BLD",116,"KRN",101,"NM",83,0)
IBDF FT STATUS SELECT^^0
"BLD",116,"KRN",101,"NM",84,0)
IBDF FT STATUS SELECT MENU^^0
"BLD",116,"KRN",101,"NM",85,0)
IBDF HIDDEN ACTIONS^^0
"BLD",116,"KRN",101,"NM",86,0)
IBDF MENU FOR ADDING TOOL KIT BLOCK^^0
"BLD",116,"KRN",101,"NM",87,0)
IBDF MENU FOR EDITING DISPLAYED FORM^^0
"BLD",116,"KRN",101,"NM",88,0)
IBDF MOVE BLOCK^^0
"BLD",116,"KRN",101,"NM",89,0)
IBDF NEW TOOL KIT BLOCK^^0
"BLD",116,"KRN",101,"NM",90,0)
IBDF PCE EVENT^^0
"BLD",116,"KRN",101,"NM",91,0)
IBDF PRINT FORM DEFINITION^^0
"BLD",116,"KRN",101,"NM",92,0)
IBDF PRINT MANAGER CLINIC SETUP^^0
"BLD",116,"KRN",101,"NM",93,0)
IBDF PRINT MANAGER DIVISION SETUP^^0
"BLD",116,"KRN",101,"NM",94,0)
IBDF PRINT SAMPLE FORM^^0
"BLD",116,"KRN",101,"NM",95,0)
IBDF QUICK ACTION ADD^^0
"BLD",116,"KRN",101,"NM",96,0)
IBDF QUICK ACTION ADD BLANK^^0
"BLD",116,"KRN",101,"NM",97,0)
IBDF QUICK ACTION DELETE^^0
"BLD",116,"KRN",101,"NM",98,0)
IBDF QUICK ACTION EDIT^^0
"BLD",116,"KRN",101,"NM",99,0)
IBDF QUICK ACTION FORMAT GROUP^^0
"BLD",116,"KRN",101,"NM",100,0)
IBDF QUICK EDIT ACTIONS MENU^^0
"BLD",116,"KRN",101,"NM",101,0)
IBDF QUICK EDIT GRP^^0
"BLD",116,"KRN",101,"NM",102,0)
IBDF QUICK GROUP ADD^^0
"BLD",116,"KRN",101,"NM",103,0)
IBDF QUICK GROUP COPY SELECTION^^0
"BLD",116,"KRN",101,"NM",104,0)
IBDF QUICK GRP COPY^^0
"BLD",116,"KRN",101,"NM",105,0)
IBDF QUICK GRP DELETE^^0
"BLD",116,"KRN",101,"NM",106,0)
IBDF QUICK GRP MENU^^0
"BLD",116,"KRN",101,"NM",107,0)
IBDF QUICK SELECTION EDIT^^0
"BLD",116,"KRN",101,"NM",108,0)
IBDF QUICK SELECTION EDIT 2ND SCREEN^^0
"BLD",116,"KRN",101,"NM",109,0)
IBDF QUIT^^0
"BLD",116,"KRN",101,"NM",110,0)
IBDF REDRAW FORM^^0
"BLD",116,"KRN",101,"NM",111,0)
IBDF RESEQUENCE LIST^^0
"BLD",116,"KRN",101,"NM",112,0)
IBDF RESIZE BLOCK (WHILE EDITING BLOCK)^^0
"BLD",116,"KRN",101,"NM",113,0)
IBDF RESIZE BLOCK (WHILE EDITING FORM)^^0
"BLD",116,"KRN",101,"NM",114,0)
IBDF SAVE/DISCARD BLOCK CHANGES^^0
"BLD",116,"KRN",101,"NM",115,0)
IBDF SELECT TOOL KIT BLOCK^^0
"BLD",116,"KRN",101,"NM",116,0)
IBDF SELECTION LIST^^0
"BLD",116,"KRN",101,"NM",117,0)
IBDF SHIFT BLOCK CONTENTS^^0
"BLD",116,"KRN",101,"NM",118,0)
IBDF SHIFT BLOCKS^^0
"BLD",116,"KRN",101,"NM",119,0)
IBDF STRAIGHT LINE^^0
"BLD",116,"KRN",101,"NM",120,0)
IBDF TEXT AREA^^0
"BLD",116,"KRN",101,"NM",121,0)
IBDF TOOL KIT FORMS MENU^^0
"BLD",116,"KRN",101,"NM",122,0)
IBDF UTIL CHANGE LIST^^0
"BLD",116,"KRN",101,"NM",123,0)
IBDF UTIL COMPLETE INVALID LIST^^0
"BLD",116,"KRN",101,"NM",124,0)
IBDF UTIL COMPLETE LIST MENU^^0
"BLD",116,"KRN",101,"NM",125,0)
IBDF UTIL DELETE FROM SELECTION LIST^^0
"BLD",116,"KRN",101,"NM",126,0)
IBDF UTIL INVALID CODES JUMP^^0
"BLD",116,"KRN",101,"NM",127,0)
IBDF UTIL JUMP^^0
"BLD",116,"KRN",101,"NM",128,0)
IBDF UTIL PRIMARY PROTOCOL^^0
"BLD",116,"KRN",101,"NM",129,0)
IBDF UTIL REPLACE CODE^^0
"BLD",116,"KRN",101,"NM",130,0)
IBDF VIEW FORM W/WO DATA^^0
"BLD",116,"KRN",101,"NM",131,0)
IBDF VIEW TOOL KIT BLOCK^^0
"BLD",116,"KRN",101,"NM",132,0)
IBDFC ADD FORM TO LIST^^0
"BLD",116,"KRN",101,"NM",133,0)
IBDFC CONVERSION UTILITY MENU^^0
"BLD",116,"KRN",101,"NM",134,0)
IBDFC CONVERT LISTED FORMS^^0
"BLD",116,"KRN",101,"NM",135,0)
IBDFC DELETE CONVERTED FORM^^0
"BLD",116,"KRN",101,"NM",136,0)
IBDFC LIST CONVERTED FORMS^^0
"BLD",116,"KRN",101,"NM",137,0)
IBDFC MENU FOR CONVERTED FORMS^^0
"BLD",116,"KRN",101,"NM",138,0)
IBDFC PURGE CONVERSION LOG^^0
"BLD",116,"KRN",101,"NM",139,0)
IBDFC REMOVE FORM FROM LIST^^0
"BLD",116,"KRN",101,"NM",140,0)
IBDFC REPLACE IN CLINICS^^0
"BLD",116,"KRN",101,"NM",141,0)
IBDFC VIEW SCANNING WARNINGS^^0
"BLD",116,"KRN",101,"NM",142,0)
IBDF QUICK GROUP RESEQUENCE^^0
"BLD",116,"KRN",101,"NM",143,0)
VALM NEXT SCREEN^^0
"BLD",116,"KRN",101,"NM",144,0)
VALM PREVIOUS SCREEN^^0
"BLD",116,"KRN",101,"NM",145,0)
VALM UP ONE LINE^^0
"BLD",116,"KRN",101,"NM",146,0)
VALM DOWN A LINE^^0
"BLD",116,"KRN",101,"NM",147,0)
VALM REFRESH^^0
"BLD",116,"KRN",101,"NM",148,0)
VALM PRINT LIST^^0
"BLD",116,"KRN",101,"NM",149,0)
VALM RIGHT^^0
"BLD",116,"KRN",101,"NM",150,0)
VALM LEFT^^0
"BLD",116,"KRN",101,"NM",151,0)
VALM LAST SCREEN^^0
"BLD",116,"KRN",101,"NM",152,0)
VALM FIRST SCREEN^^0
"BLD",116,"KRN",101,"NM",153,0)
VALM GOTO PAGE^^0
"BLD",116,"KRN",101,"NM",154,0)
VALM QUIT^^0
"BLD",116,"KRN",101,"NM",155,0)
VALM EXPAND^^0
"BLD",116,"KRN",101,"NM",157,0)
IBDF FT RELEASE^^0
"BLD",116,"KRN",101,"NM",158,0)
IBDF EF TASK INTERRUPT^^0
"BLD",116,"KRN",101,"NM","B","IBDE ADD BLOCK TO IMP/EXP WS",1)

"BLD",116,"KRN",101,"NM","B","IBDE ADD FORM TO IMP/EXP WS",2)

"BLD",116,"KRN",101,"NM","B","IBDE DELETE FORM FROM IMP/EXP FILES",3)

"BLD",116,"KRN",101,"NM","B","IBDE DELETE IMP/EXP FILES",4)

"BLD",116,"KRN",101,"NM","B","IBDE DELTE TK BLOCK FROM IMP/EXP FILES",5)

"BLD",116,"KRN",101,"NM","B","IBDE DISPLAY TK BLOCKS",6)

"BLD",116,"KRN",101,"NM","B","IBDE EDIT BLOCK'S IMP/EXP NOTES",7)

"BLD",116,"KRN",101,"NM","B","IBDE EDIT FORM'S IMP/EXP NOTES",8)

"BLD",116,"KRN",101,"NM","B","IBDE EXECUTE DIFROM",9)

"BLD",116,"KRN",101,"NM","B","IBDE EXECUTE INITS",10)

"BLD",116,"KRN",101,"NM","B","IBDE IMP/EXP HELP",11)

"BLD",116,"KRN",101,"NM","B","IBDE IMP/EXP MENU FOR BLOCKS",12)

"BLD",116,"KRN",101,"NM","B","IBDE IMP/EXP MENU FOR FORMS",13)

"BLD",116,"KRN",101,"NM","B","IBDE IMPORT FORM",14)

"BLD",116,"KRN",101,"NM","B","IBDE IMPORT TK BLOCK",15)

"BLD",116,"KRN",101,"NM","B","IBDE VIEW BLOCK'S IMP/EXP NOTES",16)

"BLD",116,"KRN",101,"NM","B","IBDE VIEW FORM'S IMP/EXP NOTES",17)

"BLD",116,"KRN",101,"NM","B","IBDF ADD BLANK GROUP",18)

"BLD",116,"KRN",101,"NM","B","IBDF ADD BLANK SELECTION",19)

"BLD",116,"KRN",101,"NM","B","IBDF ADD GROUP",20)

"BLD",116,"KRN",101,"NM","B","IBDF ADD SELECTION",21)

"BLD",116,"KRN",101,"NM","B","IBDF ADD TO CLINIC SETUP",22)

"BLD",116,"KRN",101,"NM","B","IBDF CHANGE BLOCK TK ORDER",23)

"BLD",116,"KRN",101,"NM","B","IBDF CHANGE CLINIC",24)

"BLD",116,"KRN",101,"NM","B","IBDF CLINIC'S FORMS MENU",25)

"BLD",116,"KRN",101,"NM","B","IBDF COMP EXP",26)

"BLD",116,"KRN",101,"NM","B","IBDF COMPILE FORM",27)

"BLD",116,"KRN",101,"NM","B","IBDF COMPONENT EXP PROTO",28)

"BLD",116,"KRN",101,"NM","B","IBDF COPY BLOCK INTO TOOL KIT",29)

"BLD",116,"KRN",101,"NM","B","IBDF COPY FORM",30)

"BLD",116,"KRN",101,"NM","B","IBDF COPY FORM BLOCK",31)

"BLD",116,"KRN",101,"NM","B","IBDF CREATE BLANK FORM",32)

"BLD",116,"KRN",101,"NM","B","IBDF CREATE EMPTY BLOCK",33)

"BLD",116,"KRN",101,"NM","B","IBDF DATA FIELD",34)

"BLD",116,"KRN",101,"NM","B","IBDF DELETE A BLOCK",35)

"BLD",116,"KRN",101,"NM","B","IBDF DELETE FORM",36)

"BLD",116,"KRN",101,"NM","B","IBDF DELETE FROM CLINIC SETUP",37)

"BLD",116,"KRN",101,"NM","B","IBDF DELETE GROUP",38)

"BLD",116,"KRN",101,"NM","B","IBDF DELETE SELECTION",39)

"BLD",116,"KRN",101,"NM","B","IBDF DELETE TOOL KIT BLOCK",40)

"BLD",116,"KRN",101,"NM","B","IBDF DELETE TOOL KIT FORM",41)

"BLD",116,"KRN",101,"NM","B","IBDF DISPLAY FORM BLOCK FOR EDIT",42)

"BLD",116,"KRN",101,"NM","B","IBDF DISPLAY GRP'S SLCTNS FOR EDIT",43)

"BLD",116,"KRN",101,"NM","B","IBDF DISPLAY TOOL KIT BLOCKS FOR ADDING",44)

"BLD",116,"KRN",101,"NM","B","IBDF EDIT FORM",45)

"BLD",116,"KRN",101,"NM","B","IBDF EDIT FORM BLOCK MENU",46)

"BLD",116,"KRN",101,"NM","B","IBDF EDIT FORM NAME/DESCR/SIZE",47)

"BLD",116,"KRN",101,"NM","B","IBDF EDIT GROUP HDR/ORDER",48)

"BLD",116,"KRN",101,"NM","B","IBDF EDIT GROUP'S SELECTIONS MENU",49)

"BLD",116,"KRN",101,"NM","B","IBDF EDIT HEADER BLOCK",50)

"BLD",116,"KRN",101,"NM","B","IBDF EDIT NAME,HEADER,OUTLINE",51)

"BLD",116,"KRN",101,"NM","B","IBDF EDIT SELECTION",52)

"BLD",116,"KRN",101,"NM","B","IBDF EDIT SELECTION LIST MENU",53)

"BLD",116,"KRN",101,"NM","B","IBDF EDIT TOOL KIT BLOCK",54)

"BLD",116,"KRN",101,"NM","B","IBDF EDIT TOOL KIT BLOCKS MENU",55)

"BLD",116,"KRN",101,"NM","B","IBDF EF ADD QUEUE PARMS",56)

"BLD",116,"KRN",101,"NM","B","IBDF EF CLINIC GROUP ADD",57)

"BLD",116,"KRN",101,"NM","B","IBDF EF CLINIC GROUP DELETE",58)

"BLD",116,"KRN",101,"NM","B","IBDF EF CLINIC GROUP EDIT",59)

"BLD",116,"KRN",101,"NM","B","IBDF EF CLINIC GROUP JUMP",60)

"BLD",116,"KRN",101,"NM","B","IBDF EF CLINIC GROUP MENU",61)

"BLD",116,"KRN",101,"NM","B","IBDF EF CLINIC GROUP MENU ACTION",62)

"BLD",116,"KRN",101,"NM","B","IBDF EF DELETE QUEUE PARMS",63)

"BLD",116,"KRN",101,"NM","B","IBDF EF EDIT QUEUE PARMS",64)

"BLD",116,"KRN",101,"NM","B","IBDF EF EXIT",65)

"BLD",116,"KRN",101,"NM","B","IBDF EF HELP MENU",66)

"BLD",116,"KRN",101,"NM","B","IBDF EF HELP SPEC INST",67)

"BLD",116,"KRN",101,"NM","B","IBDF EF PARAMETER GROUP JUMP",68)

"BLD",116,"KRN",101,"NM","B","IBDF EF QUEUE PARMS MENU",69)

"BLD",116,"KRN",101,"NM","B","IBDF EF QUEUE PRINT FORMS",70)

"BLD",116,"KRN",101,"NM","B","IBDF EF QUEUE STATS",71)

"BLD",116,"KRN",101,"NM","B","IBDF EF QUIT",72)

"BLD",116,"KRN",101,"NM","B","IBDF EF TASK INTERRUPT",158)

"BLD",116,"KRN",101,"NM","B","IBDF FORM COMPONENT ACTION",74)

"BLD",116,"KRN",101,"NM","B","IBDF FORM COMPONENT MENU",75)

"BLD",116,"KRN",101,"NM","B","IBDF FORMAT ALL SELECTIONS",76)

"BLD",116,"KRN",101,"NM","B","IBDF FORMAT GROUP'S SELECTIONS",77)

"BLD",116,"KRN",101,"NM","B","IBDF FT CHANGE LIST",78)

"BLD",116,"KRN",101,"NM","B","IBDF FT DELETE",79)

"BLD",116,"KRN",101,"NM","B","IBDF FT MENU",80)

"BLD",116,"KRN",101,"NM","B","IBDF FT RELEASE",157)

"BLD",116,"KRN",101,"NM","B","IBDF FT STATISTICS",81)

"BLD",116,"KRN",101,"NM","B","IBDF FT STATS MENU",82)

"BLD",116,"KRN",101,"NM","B","IBDF FT STATUS SELECT",83)

"BLD",116,"KRN",101,"NM","B","IBDF FT STATUS SELECT MENU",84)

"BLD",116,"KRN",101,"NM","B","IBDF HIDDEN ACTIONS",85)

"BLD",116,"KRN",101,"NM","B","IBDF MENU FOR ADDING TOOL KIT BLOCK",86)

"BLD",116,"KRN",101,"NM","B","IBDF MENU FOR EDITING DISPLAYED FORM",87)

"BLD",116,"KRN",101,"NM","B","IBDF MOVE BLOCK",88)

"BLD",116,"KRN",101,"NM","B","IBDF NEW TOOL KIT BLOCK",89)

"BLD",116,"KRN",101,"NM","B","IBDF PCE EVENT",90)

"BLD",116,"KRN",101,"NM","B","IBDF PRINT FORM DEFINITION",91)

"BLD",116,"KRN",101,"NM","B","IBDF PRINT MANAGER CLINIC SETUP",92)

"BLD",116,"KRN",101,"NM","B","IBDF PRINT MANAGER DIVISION SETUP",93)

"BLD",116,"KRN",101,"NM","B","IBDF PRINT SAMPLE FORM",94)

"BLD",116,"KRN",101,"NM","B","IBDF QUICK ACTION ADD",95)

"BLD",116,"KRN",101,"NM","B","IBDF QUICK ACTION ADD BLANK",96)

"BLD",116,"KRN",101,"NM","B","IBDF QUICK ACTION DELETE",97)

"BLD",116,"KRN",101,"NM","B","IBDF QUICK ACTION EDIT",98)

"BLD",116,"KRN",101,"NM","B","IBDF QUICK ACTION FORMAT GROUP",99)

"BLD",116,"KRN",101,"NM","B","IBDF QUICK EDIT ACTIONS MENU",100)

"BLD",116,"KRN",101,"NM","B","IBDF QUICK EDIT GRP",101)

"BLD",116,"KRN",101,"NM","B","IBDF QUICK GROUP ADD",102)

"BLD",116,"KRN",101,"NM","B","IBDF QUICK GROUP COPY SELECTION",103)

"BLD",116,"KRN",101,"NM","B","IBDF QUICK GROUP RESEQUENCE",142)

"BLD",116,"KRN",101,"NM","B","IBDF QUICK GRP COPY",104)

"BLD",116,"KRN",101,"NM","B","IBDF QUICK GRP DELETE",105)

"BLD",116,"KRN",101,"NM","B","IBDF QUICK GRP MENU",106)

"BLD",116,"KRN",101,"NM","B","IBDF QUICK SELECTION EDIT",107)

"BLD",116,"KRN",101,"NM","B","IBDF QUICK SELECTION EDIT 2ND SCREEN",108)

"BLD",116,"KRN",101,"NM","B","IBDF QUIT",109)

"BLD",116,"KRN",101,"NM","B","IBDF REDRAW FORM",110)

"BLD",116,"KRN",101,"NM","B","IBDF RESEQUENCE LIST",111)

"BLD",116,"KRN",101,"NM","B","IBDF RESIZE BLOCK (WHILE EDITING BLOCK)",112)

"BLD",116,"KRN",101,"NM","B","IBDF RESIZE BLOCK (WHILE EDITING FORM)",113)

"BLD",116,"KRN",101,"NM","B","IBDF SAVE/DISCARD BLOCK CHANGES",114)

"BLD",116,"KRN",101,"NM","B","IBDF SELECT TOOL KIT BLOCK",115)

"BLD",116,"KRN",101,"NM","B","IBDF SELECTION LIST",116)

"BLD",116,"KRN",101,"NM","B","IBDF SHIFT BLOCK CONTENTS",117)

"BLD",116,"KRN",101,"NM","B","IBDF SHIFT BLOCKS",118)

"BLD",116,"KRN",101,"NM","B","IBDF STRAIGHT LINE",119)

"BLD",116,"KRN",101,"NM","B","IBDF TEXT AREA",120)

"BLD",116,"KRN",101,"NM","B","IBDF TOOL KIT FORMS MENU",121)

"BLD",116,"KRN",101,"NM","B","IBDF UTIL CHANGE LIST",122)

"BLD",116,"KRN",101,"NM","B","IBDF UTIL COMPLETE INVALID LIST",123)

"BLD",116,"KRN",101,"NM","B","IBDF UTIL COMPLETE LIST MENU",124)

"BLD",116,"KRN",101,"NM","B","IBDF UTIL DELETE FROM SELECTION LIST",125)

"BLD",116,"KRN",101,"NM","B","IBDF UTIL INVALID CODES JUMP",126)

"BLD",116,"KRN",101,"NM","B","IBDF UTIL JUMP",127)

"BLD",116,"KRN",101,"NM","B","IBDF UTIL PRIMARY PROTOCOL",128)

"BLD",116,"KRN",101,"NM","B","IBDF UTIL REPLACE CODE",129)

"BLD",116,"KRN",101,"NM","B","IBDF VIEW FORM W/WO DATA",130)

"BLD",116,"KRN",101,"NM","B","IBDF VIEW TOOL KIT BLOCK",131)

"BLD",116,"KRN",101,"NM","B","IBDFC ADD FORM TO LIST",132)

"BLD",116,"KRN",101,"NM","B","IBDFC CONVERSION UTILITY MENU",133)

"BLD",116,"KRN",101,"NM","B","IBDFC CONVERT LISTED FORMS",134)

"BLD",116,"KRN",101,"NM","B","IBDFC DELETE CONVERTED FORM",135)

"BLD",116,"KRN",101,"NM","B","IBDFC LIST CONVERTED FORMS",136)

"BLD",116,"KRN",101,"NM","B","IBDFC MENU FOR CONVERTED FORMS",137)

"BLD",116,"KRN",101,"NM","B","IBDFC PURGE CONVERSION LOG",138)

"BLD",116,"KRN",101,"NM","B","IBDFC REMOVE FORM FROM LIST",139)

"BLD",116,"KRN",101,"NM","B","IBDFC REPLACE IN CLINICS",140)

"BLD",116,"KRN",101,"NM","B","IBDFC VIEW SCANNING WARNINGS",141)

"BLD",116,"KRN",101,"NM","B","VALM DOWN A LINE",146)

"BLD",116,"KRN",101,"NM","B","VALM EXPAND",155)

"BLD",116,"KRN",101,"NM","B","VALM FIRST SCREEN",152)

"BLD",116,"KRN",101,"NM","B","VALM GOTO PAGE",153)

"BLD",116,"KRN",101,"NM","B","VALM LAST SCREEN",151)

"BLD",116,"KRN",101,"NM","B","VALM LEFT",150)

"BLD",116,"KRN",101,"NM","B","VALM NEXT SCREEN",143)

"BLD",116,"KRN",101,"NM","B","VALM PREVIOUS SCREEN",144)

"BLD",116,"KRN",101,"NM","B","VALM PRINT LIST",148)

"BLD",116,"KRN",101,"NM","B","VALM QUIT",154)

"BLD",116,"KRN",101,"NM","B","VALM REFRESH",147)

"BLD",116,"KRN",101,"NM","B","VALM RIGHT",149)

"BLD",116,"KRN",101,"NM","B","VALM UP ONE LINE",145)

"BLD",116,"KRN",409.61,0)
409.61
"BLD",116,"KRN",409.61,"NM",0)
^9.68A^26^26
"BLD",116,"KRN",409.61,"NM",1,0)
IBDE IMP/EXP FORMS^^0
"BLD",116,"KRN",409.61,"NM",2,0)
IBDE IMP/EXP TK BLOCKS^^0
"BLD",116,"KRN",409.61,"NM",3,0)
IBDE TEXT DISPLAY^^0
"BLD",116,"KRN",409.61,"NM",4,0)
IBDF CLINIC FORM LIST^^0
"BLD",116,"KRN",409.61,"NM",5,0)
IBDF COMPONENT EXPAND^^0
"BLD",116,"KRN",409.61,"NM",6,0)
IBDF DISPLAY FORM FOR EDIT^^0
"BLD",116,"KRN",409.61,"NM",7,0)
IBDF DISPLAY GROUPS FOR EDIT^^0
"BLD",116,"KRN",409.61,"NM",8,0)
IBDF EDIT GROUP'S SELECTIONS^^0
"BLD",116,"KRN",409.61,"NM",9,0)
IBDF EDIT TOOL KIT BLOCKS^^0
"BLD",116,"KRN",409.61,"NM",10,0)
IBDF EF CLINIC GROUP LT^^0
"BLD",116,"KRN",409.61,"NM",11,0)
IBDF EF HELP SPEC INSTR.^^0
"BLD",116,"KRN",409.61,"NM",12,0)
IBDF EF QUEUE PARMS^^0
"BLD",116,"KRN",409.61,"NM",13,0)
IBDF FORM BLOCK EDIT^^0
"BLD",116,"KRN",409.61,"NM",14,0)
IBDF FORM COMPONENTS^^0
"BLD",116,"KRN",409.61,"NM",15,0)
IBDF FT REPORT^^0
"BLD",116,"KRN",409.61,"NM",16,0)
IBDF FT STATS^^0
"BLD",116,"KRN",409.61,"NM",17,0)
IBDF FT STATUS SELECT^^0
"BLD",116,"KRN",409.61,"NM",18,0)
IBDF QUICK GRP COPY^^0
"BLD",116,"KRN",409.61,"NM",19,0)
IBDF QUICK SELECTION EDIT^^0
"BLD",116,"KRN",409.61,"NM",20,0)
IBDF TOOL KIT BLOCK LIST^^0
"BLD",116,"KRN",409.61,"NM",21,0)
IBDF TOOL KIT FORMS^^0
"BLD",116,"KRN",409.61,"NM",22,0)
IBDF UTIL COMPLETE LIST TEMP^^0
"BLD",116,"KRN",409.61,"NM",23,0)
IBDF UTIL PRIMARY SCREEN^^0
"BLD",116,"KRN",409.61,"NM",24,0)
IBDF VIEW TOOL KIT BLOCK^^0
"BLD",116,"KRN",409.61,"NM",25,0)
IBDFC CONVERSION LOG^^0
"BLD",116,"KRN",409.61,"NM",26,0)
IBDFC CONVERSION UTILITY^^0
"BLD",116,"KRN",409.61,"NM","B","IBDE IMP/EXP FORMS",1)

"BLD",116,"KRN",409.61,"NM","B","IBDE IMP/EXP TK BLOCKS",2)

"BLD",116,"KRN",409.61,"NM","B","IBDE TEXT DISPLAY",3)

"BLD",116,"KRN",409.61,"NM","B","IBDF CLINIC FORM LIST",4)

"BLD",116,"KRN",409.61,"NM","B","IBDF COMPONENT EXPAND",5)

"BLD",116,"KRN",409.61,"NM","B","IBDF DISPLAY FORM FOR EDIT",6)

"BLD",116,"KRN",409.61,"NM","B","IBDF DISPLAY GROUPS FOR EDIT",7)

"BLD",116,"KRN",409.61,"NM","B","IBDF EDIT GROUP'S SELECTIONS",8)

"BLD",116,"KRN",409.61,"NM","B","IBDF EDIT TOOL KIT BLOCKS",9)

"BLD",116,"KRN",409.61,"NM","B","IBDF EF CLINIC GROUP LT",10)

"BLD",116,"KRN",409.61,"NM","B","IBDF EF HELP SPEC INSTR.",11)

"BLD",116,"KRN",409.61,"NM","B","IBDF EF QUEUE PARMS",12)

"BLD",116,"KRN",409.61,"NM","B","IBDF FORM BLOCK EDIT",13)

"BLD",116,"KRN",409.61,"NM","B","IBDF FORM COMPONENTS",14)

"BLD",116,"KRN",409.61,"NM","B","IBDF FT REPORT",15)

"BLD",116,"KRN",409.61,"NM","B","IBDF FT STATS",16)

"BLD",116,"KRN",409.61,"NM","B","IBDF FT STATUS SELECT",17)

"BLD",116,"KRN",409.61,"NM","B","IBDF QUICK GRP COPY",18)

"BLD",116,"KRN",409.61,"NM","B","IBDF QUICK SELECTION EDIT",19)

"BLD",116,"KRN",409.61,"NM","B","IBDF TOOL KIT BLOCK LIST",20)

"BLD",116,"KRN",409.61,"NM","B","IBDF TOOL KIT FORMS",21)

"BLD",116,"KRN",409.61,"NM","B","IBDF UTIL COMPLETE LIST TEMP",22)

"BLD",116,"KRN",409.61,"NM","B","IBDF UTIL PRIMARY SCREEN",23)

"BLD",116,"KRN",409.61,"NM","B","IBDF VIEW TOOL KIT BLOCK",24)

"BLD",116,"KRN",409.61,"NM","B","IBDFC CONVERSION LOG",25)

"BLD",116,"KRN",409.61,"NM","B","IBDFC CONVERSION UTILITY",26)

"BLD",116,"KRN",771,0)
771
"BLD",116,"KRN",771,"NM",0)
^9.68A^^
"BLD",116,"KRN",869.2,0)
869.2
"BLD",116,"KRN",869.2,"NM",0)
^9.68A^^
"BLD",116,"KRN",870,0)
870
"BLD",116,"KRN",870,"NM",0)
^9.68A^^
"BLD",116,"KRN",8994,0)
8994
"BLD",116,"KRN",8994,"NM",0)
^9.68A^12^12
"BLD",116,"KRN",8994,"NM",1,0)
IBD EXPAND FORMID^^0
"BLD",116,"KRN",8994,"NM",2,0)
IBD GET FORMSPEC^^0
"BLD",116,"KRN",8994,"NM",3,0)
IBD GET INPUT OBJECT BY CLINIC^^0
"BLD",116,"KRN",8994,"NM",4,0)
IBD GET INPUT OBJECT BY FORM^^0
"BLD",116,"KRN",8994,"NM",5,0)
IBD GET ONE INPUT OBJECT^^0
"BLD",116,"KRN",8994,"NM",6,0)
IBD RECEIVE DATA^^0
"BLD",116,"KRN",8994,"NM",7,0)
IBD RECEIVE FORM DATA^^0
"BLD",116,"KRN",8994,"NM",8,0)
IBD RETURN IMAGE ID^^0
"BLD",116,"KRN",8994,"NM",9,0)
IBD VALIDATE USER^^0
"BLD",116,"KRN",8994,"NM",10,0)
IBD ELAPSED TIME^^0
"BLD",116,"KRN",8994,"NM",11,0)
IBD STORE WORKSTATION ERROR^^0
"BLD",116,"KRN",8994,"NM",12,0)
IBD STORE IMAGE NAME^^0
"BLD",116,"KRN",8994,"NM","B","IBD ELAPSED TIME",10)

"BLD",116,"KRN",8994,"NM","B","IBD EXPAND FORMID",1)

"BLD",116,"KRN",8994,"NM","B","IBD GET FORMSPEC",2)

"BLD",116,"KRN",8994,"NM","B","IBD GET INPUT OBJECT BY CLINIC",3)

"BLD",116,"KRN",8994,"NM","B","IBD GET INPUT OBJECT BY FORM",4)

"BLD",116,"KRN",8994,"NM","B","IBD GET ONE INPUT OBJECT",5)

"BLD",116,"KRN",8994,"NM","B","IBD RECEIVE DATA",6)

"BLD",116,"KRN",8994,"NM","B","IBD RECEIVE FORM DATA",7)

"BLD",116,"KRN",8994,"NM","B","IBD RETURN IMAGE ID",8)

"BLD",116,"KRN",8994,"NM","B","IBD STORE IMAGE NAME",12)

"BLD",116,"KRN",8994,"NM","B","IBD STORE WORKSTATION ERROR",11)

"BLD",116,"KRN",8994,"NM","B","IBD VALIDATE USER",9)

"BLD",116,"KRN","B",.4,.4)

"BLD",116,"KRN","B",.401,.401)

"BLD",116,"KRN","B",.402,.402)

"BLD",116,"KRN","B",.403,.403)

"BLD",116,"KRN","B",.5,.5)

"BLD",116,"KRN","B",.84,.84)

"BLD",116,"KRN","B",3.6,3.6)

"BLD",116,"KRN","B",3.8,3.8)

"BLD",116,"KRN","B",9.2,9.2)

"BLD",116,"KRN","B",9.8,9.8)

"BLD",116,"KRN","B",19,19)

"BLD",116,"KRN","B",19.1,19.1)

"BLD",116,"KRN","B",101,101)

"BLD",116,"KRN","B",409.61,409.61)

"BLD",116,"KRN","B",771,771)

"BLD",116,"KRN","B",869.2,869.2)

"BLD",116,"KRN","B",870,870)

"BLD",116,"KRN","B",8994,8994)

"BLD",116,"PRE")
IBD3KENV
"BLD",116,"QUES",0)
^9.62^^
"BLD",116,"REQB",0)
^9.611^^
"DATA",357.6,1,0)
DPT PATIENT'S NAME^VADPT^IBDFN^REGISTRATION^1^2^1^1^1^^^1^^^^
"DATA",357.6,1,1,0)
^^2^2^2930212^^^^
"DATA",357.6,1,1,1,0)
 
"DATA",357.6,1,1,2,0)
Patient's Name
"DATA",357.6,1,2)
Patient's Name^30^^^^^^^^^^^^^^^1
"DATA",357.6,1,3)
PATIENT NAME
"DATA",357.6,1,7,0)
^357.67^1^1
"DATA",357.6,1,7,1,0)
DFN
"DATA",357.6,1,15,0)
^357.615I^^0
"DATA",357.6,2,0)
DPT PATIENT'S SEX^VADPT^IBDFN^REGISTRATION^1^2^2^^1^^^1^^^^
"DATA",357.6,2,1,0)
^^1^1^2931015^^^^
"DATA",357.6,2,1,1,0)
Patient's sex, either 'MALE' or 'FEMALE', or "M" or "F".
"DATA",357.6,2,2)
Patient's Sex^6^^^^^^^^^^^^^^^1
"DATA",357.6,2,3)
SEX
"DATA",357.6,2,7,0)
^357.67^1^1
"DATA",357.6,2,7,1,0)
DFN
"DATA",357.6,2,15,0)
^357.615I^2^2
"DATA",357.6,2,15,2,0)
Patient's Sex (Code)^1^2^
"DATA",357.6,3,0)
DPT PATIENT'S DOB/AGE^VADPT^IBDFN^REGISTRATION^1^2^2^^1^^^1^^^^
"DATA",357.6,3,1,0)
^^2^2^2951023^
"DATA",357.6,3,1,1,0)
Patient's DOB in MM DD, YYYY format
"DATA",357.6,3,1,2,0)
Patient's age in years.
"DATA",357.6,3,2)
Patient's DOB^12^Patient's Age^3^^^^^^^^^^^^^1
"DATA",357.6,3,3)
PATIENT DOB AGE PIMS
"DATA",357.6,3,7,0)
^357.67^1^1
"DATA",357.6,3,7,1,0)
DFN
"DATA",357.6,3,15,0)
^357.615I^2^2
"DATA",357.6,3,15,2,0)
Patient's Age^3^2^
"DATA",357.6,4,0)
GMRA PATIENT'S ALLERGIES^ALLERGY^IBDFN2^GEN. MED. REC. - ALLERGIES^1^2^4^1^1^^^1^^^1^^
"DATA",357.6,4,1,0)
^^7^7^2951023^
"DATA",357.6,4,1,1,0)
Used to display a list of the patient's allergies, both true and adverse
"DATA",357.6,4,1,2,0)
reactions, verified and unverified. Data returned:
"DATA",357.6,4,1,3,0)
  allergy name
"DATA",357.6,4,1,4,0)
  type of allergen
"DATA",357.6,4,1,5,0)
  type (code only - F=food, D=drug,O=other)
"DATA",357.6,4,1,6,0)
  verified? YES/NO
"DATA",357.6,4,1,7,0)
  true allergy? YES/NO
"DATA",357.6,4,2)
ALLERGY NAME^30^^^^^^^^^^^^^^^1
"DATA",357.6,4,3)
ALLERGIES ALLERGY PATIENT
"DATA",357.6,4,7,0)
^357.67^1^1
"DATA",357.6,4,7,1,0)
DFN
"DATA",357.6,4,15,0)
^357.615I^5^5
"DATA",357.6,4,15,2,0)
TYPE OF ALLERGEN^5^2^
"DATA",357.6,4,15,3,0)
TYPE (F=FOOD,D=DRUG,O=OTHER)^1^3^
"DATA",357.6,4,15,4,0)
VERIFIED? (YES/NO)^3^4^
"DATA",357.6,4,15,5,0)
TRUE ALLERGY? (YES/NO)^3^5^
"DATA",357.6,7,0)
DG SELECT CPT PROCEDURE CODES^CPT^IBDFN4^SCHEDULING^^3^2^^1^^^1^59^^^
"DATA",357.6,7,1,0)
^^2^2^2961007^^^^
"DATA",357.6,7,1,1,0)
Allows for the selection of CPT codes from the CPT file. Only active codes
"DATA",357.6,7,1,2,0)
are allowed.
"DATA",357.6,7,2)
CODE^5^^^^^^^^^^^^^^CODE^1^1
"DATA",357.6,7,3)
SELECT CPT PROCEDURE CODES
"DATA",357.6,7,9)

"DATA",357.6,7,11)
D TESTCPT^IBDFN7
"DATA",357.6,7,15,0)
^357.615I^3^3
"DATA",357.6,7,15,2,0)
SHORT NAME^28^2^^PROCEDURE
"DATA",357.6,7,15,3,0)
DESCRIPTION^161^3^^PROCEDURE
"DATA",357.6,7,16)
o^18^Procedure Narrative^^r^2^CPT CODE^1
"DATA",357.6,8,0)
DPT PATIENT'S SC CONDITIONS^ELIG^IBDFN^REGISTRATION^1^2^4^1^1^^^1^^^1^
"DATA",357.6,8,1,0)
^^7^7^2951023^
"DATA",357.6,8,1,1,0)
Used to output a list of the patients service connected conditions,
"DATA",357.6,8,1,2,0)
along with the percentage ratings. Data returned:
"DATA",357.6,8,1,3,0)
  disability name
"DATA",357.6,8,1,4,0)
  disability percentage
"DATA",357.6,8,1,5,0)
  disability percentage with the label "%"
"DATA",357.6,8,1,6,0)
  disability percentage with the label "%SC"
"DATA",357.6,8,1,7,0)
  disability percentage with the label "% - SERVICE CONNECTED"
"DATA",357.6,8,2)
Disability Name^45^^^^^^^^^^^^^^^1
"DATA",357.6,8,3)
SERVICE CONNECTED CONDITIONS PATIENT MAS PIMS DISABILITY DISABILITIES
"DATA",357.6,8,7,0)
^357.67^1^1
"DATA",357.6,8,7,1,0)
DFN
"DATA",357.6,8,15,0)
^357.615I^5^5
"DATA",357.6,8,15,2,0)
Disability % (number only)^3^2^
"DATA",357.6,8,15,3,0)
Disability % (label=%)^4^3^
"DATA",357.6,8,15,4,0)
Disabilty % (label=%SC)^6^4^
"DATA",357.6,8,15,5,0)
Dis.%_"% - SERVICE CONNECTED"^24^5^
"DATA",357.6,9,0)
DG SELECT ICD-9 DIAGNOSIS CODES^ICD9^IBDFN4^SCHEDULING^^3^2^^1^^^1^69^^^^1^1
"DATA",357.6,9,1,0)
^^2^2^2970304^^^^
"DATA",357.6,9,1,1,0)
Allows the user to select ICD-9 diagnosis codes from the ICD Diagnosis
"DATA",357.6,9,1,2,0)
file. Allows only active codes to be selected.
"DATA",357.6,9,2)
CODE^7^^^^^^^^^^^^^^^1^1
"DATA",357.6,9,3)
SELECT ICD9 ICD-9 CODES DIAGNOSIS
"DATA",357.6,9,9)
D INPUTICD^IBDFN8(.X)
"DATA",357.6,9,11)
D TESTICD^IBDFN7
"DATA",357.6,9,13,0)
^357.613V^2^2
"DATA",357.6,9,13,1,0)
2;IBD(357.98,
"DATA",357.6,9,13,2,0)
3;IBD(357.98,
"DATA",357.6,9,14)

"DATA",357.6,9,15,0)
^357.615I^3^3
"DATA",357.6,9,15,2,0)
DIAGNOSIS^30^2^^DIAGNOSIS
"DATA",357.6,9,15,3,0)
DESCRIPTION^200^3^^DIAGNOSIS
"DATA",357.6,9,16)
o^18^Diagnosis^^r^1^ICD-9 Code^^1
"DATA",357.6,9,17)
D SLCTDX^IBDFN12(.X)
"DATA",357.6,9,19)
D DX^IBDFN14(X)
"DATA",357.6,10,0)
DPT PATIENT'S PID^VADPT^IBDFN^REGISTRATION^1^2^1^1^1^^^1^^^^
"DATA",357.6,10,1,0)
^^1^1^2931015^^
"DATA",357.6,10,1,1,0)
Used to display the patient identifier.
"DATA",357.6,10,2)
PATIENT IDENTIFIER^15^^^^^^^^^^^^^^^1
"DATA",357.6,10,3)
PATIENT IDENTIFIER PID
"DATA",357.6,10,7,0)
^357.67^1^1
"DATA",357.6,10,7,1,0)
DFN
"DATA",357.6,10,15,0)
^357.615I^^0
"DATA",357.6,11,0)
IBDF UTILITY FOR SELECTING BLANKS^NULL^IBDFN4^AUTOMATED INFO COLLECTION SYS^^3^2^^1^^^1^^^^
"DATA",357.6,11,1,0)
^^2^2^2930414^^^^
"DATA",357.6,11,1,1,0)
No data is returned, so this interface allows the user to create a
"DATA",357.6,11,1,2,0)
selection list with what ever text he desires.
"DATA",357.6,11,2)
Enter Anything!^^^^^^^^^^^^^^^^1^1
"DATA",357.6,11,3)
UTILITY SELECT NULL BLANKS
"DATA",357.6,11,15,0)
^357.615I^^0
"DATA",357.6,12,0)
DPT PATIENT ADDRESS LINES^ADDRESS^IBDFN6^REGISTRATION^1^2^3^1^1^^^1^^^^
"DATA",357.6,12,1,0)
^^1^1^2950117^^
"DATA",357.6,12,1,1,0)
Outputs the patient's address, up to 4 lines of 45 characters each.
"DATA",357.6,12,2)
ADDRESS LINE^45^^^^^^^^^^^^^^^1
"DATA",357.6,12,3)
PATIENT ADDRESS
"DATA",357.6,12,7,0)
^357.67^1^1
"DATA",357.6,12,7,1,0)
DFN
"DATA",357.6,12,15,0)
^357.615I^1^1
"DATA",357.6,13,0)
DPT PATIENT'S TELEPHONE NUMBER^ADDRESS^IBDFN6^REGISTRATION^1^2^1^^1^^^1^^^^
"DATA",357.6,13,1,0)
^^1^1^2930217^^
"DATA",357.6,13,1,1,0)
Used to display the patient's telephone number.
"DATA",357.6,13,2)
TELEPHONE NUMBER^20^^^^^^^^^^^^^^^1
"DATA",357.6,13,3)
PATIENT TELEPHONE
"DATA",357.6,13,7,0)
^357.67^1^1
"DATA",357.6,13,7,1,0)
DFN
"DATA",357.6,13,15,0)
^357.615I^1^1
"DATA",357.6,13,15,1,0)
TELEPHONE NUMBER^20^^
"DATA",357.6,14,0)
DPT IS PATIENT INSURED?^INSURED^IBDFN6^REGISTRATION^1^2^1^^1^^^1^^^^
"DATA",357.6,14,1,0)
^^2^2^2931130^^^^
"DATA",357.6,14,1,1,0)
Prints 'YES','NO', or 'UNKNOWN' based on the field COVERED BY INSURANCE?
"DATA",357.6,14,1,2,0)
from the patient file.
"DATA",357.6,14,2)
Covered by Ins?^7^^^^^^^^^^^^^^^1
"DATA",357.6,14,3)
PATIENT INSURANCE
"DATA",357.6,14,7,0)
^357.67^1^1
"DATA",357.6,14,7,1,0)
DFN
"DATA",357.6,14,15,0)
^357.615I^^0
"DATA",357.6,15,0)
DPT PATIENT'S INSURANCE POLICIES^INSURANC^IBDFN6^REGISTRATION^1^2^4^1^1^^^1^^^1^^
"DATA",357.6,15,1,0)
^^10^10^2931201^
"DATA",357.6,15,1,1,0)
For displaying information on the patient's health insurance. Returns
"DATA",357.6,15,1,2,0)
active insurance policies and policies that do not reimburse (Medicare).
"DATA",357.6,15,1,3,0)
Data returned:
"DATA",357.6,15,1,4,0)
    insurance company
"DATA",357.6,15,1,5,0)
    policy number
"DATA",357.6,15,1,6,0)
    group name
"DATA",357.6,15,1,7,0)
    policy holder's relationship to the patient
"DATA",357.6,15,1,8,0)
    policy expiration date
"DATA",357.6,15,1,9,0)
    group number
"DATA",357.6,15,1,10,0)
    name of insured
"DATA",357.6,15,2)
INSURANCE COMPANY^30^^^^^^^^^^^^^^^1
"DATA",357.6,15,3)
PATIENT INSURANCE PIMS
"DATA",357.6,15,4)
S ACT=2
"DATA",357.6,15,6,0)
^357.66^1^1
"DATA",357.6,15,6,1,0)
ACT
"DATA",357.6,15,7,0)
^357.67^1^1
"DATA",357.6,15,7,1,0)
DFN
"DATA",357.6,15,15,0)
^357.615I^7^7
"DATA",357.6,15,15,2,0)
EXPIRATION DATE^12^2^
"DATA",357.6,15,15,3,0)
POLICY NUMBER^20^3^
"DATA",357.6,15,15,4,0)
GROUP NUMBER^17^4^
"DATA",357.6,15,15,5,0)
GROUP NAME^20^5^
"DATA",357.6,15,15,6,0)
NAME OF INSURED^30^6^
"DATA",357.6,15,15,7,0)
HOLDER'S RELATIONSHIP^9^7^
"DATA",357.6,16,0)
IBDF UTILITY FOR BLANK LINES^BLANKS^IBDFN^AUTOMATED INFO COLLECTION SYS^0^2^5^^1^^^1^^^^
"DATA",357.6,16,1,0)
^^2^2^2930408^^
"DATA",357.6,16,1,1,0)
No data is returned by this interface - it's purpose is to print blank
"DATA",357.6,16,1,2,0)
lines to the form for data entry.
"DATA",357.6,16,2)
^0^^^^^^^^^^^^^^^1
"DATA",357.6,16,3)
UTILITY BLANKS LINES
"DATA",357.6,16,15,0)
^357.615I^0^0
"DATA",357.6,17,0)
IBDF UTILITY FOR LABELS ONLY^LABELS^IBDFN^AUTOMATED INFO COLLECTION SYS^0^2^2^^1^^^1^^^^
"DATA",357.6,17,1,0)
^^2^2^2970319^^^
"DATA",357.6,17,1,1,0)
This interface returns no data. Its purpose is to print labels without
"DATA",357.6,17,1,2,0)
data to the form.
"DATA",357.6,17,2)
Underscore Only^0^^^^^^^^^^^^^^^1
"DATA",357.6,17,3)
UTILITY BLANKS LABELS
"DATA",357.6,17,15,0)
^357.615I^^0
"DATA",357.6,18,0)
GMP PATIENT ACTIVE PROBLEMS^ACTIVE^GMPLENFM^PROBLEM LIST^1^2^4^1^1^^^1^^^^
"DATA",357.6,18,1,0)
^^8^8^2960207^^^^
"DATA",357.6,18,1,1,0)
For displaying the patient's active problems. Returns a list.
"DATA",357.6,18,1,2,0)
Data returned:
"DATA",357.6,18,1,3,0)
  problem text
"DATA",357.6,18,1,4,0)
  corresponding ICD-9 code (if there is a mapping)
"DATA",357.6,18,1,5,0)
  date of onset (MM/DD/YY)
"DATA",357.6,18,1,6,0)
  SC indicator (SC/NSC/"")
"DATA",357.6,18,1,7,0)
  special exposure (A/I/P/"")
"DATA",357.6,18,1,8,0)
  special exposure (returns the full text of the type of exposure)
"DATA",357.6,18,2)
PROBLEM TEXT^80^^^^^^^^^^^^^^^1
"DATA",357.6,18,3)
ACTIVE PROBLEMS LIST PATIENT
"DATA",357.6,18,7,0)
^357.67^1^1
"DATA",357.6,18,7,1,0)
DFN
"DATA",357.6,18,15,0)
^357.615I^7^6
"DATA",357.6,18,15,2,0)
CORRESPONDNG ICD-9 Dx CODE^7^2^
"DATA",357.6,18,15,3,0)
DATE OF ONSET (MM/DD/YY)^8^3^
"DATA",357.6,18,15,4,0)
SC INDICATOR (SC/NSC/"")^3^4^
"DATA",357.6,18,15,5,0)
SC INDICATOR (Y/N/"")^1^5^
"DATA",357.6,18,15,6,0)
SPECIAL EXPOSURE (A/I/P/"")^1^6^
"DATA",357.6,18,15,7,0)
SPECIAL EXPOSURE (FULL TEXT)^12^7^
"DATA",357.6,19,0)
DPT PATIENT'S EMPLOYER NAME^EMPLOYER^IBDFN2^REGISTRATION^1^2^1^^1^^^1^^^^
"DATA",357.6,19,1,0)
^^1^1^2930217^
"DATA",357.6,19,1,1,0)
For displaying the patient's employer.
"DATA",357.6,19,2)
employer name^45^^^^^^^^^^^^^^^1
"DATA",357.6,19,3)
PATIENT EMPLOYER
"DATA",357.6,19,7,0)
^357.67^1^1
"DATA",357.6,19,7,1,0)
DFN
"DATA",357.6,19,15,0)
^357.615I^^0
"DATA",357.6,20,0)
DPT PATIENT'S EMPLOYER ADDRESS LINES^EMPLOYER^IBDFN2^REGISTRATION^1^2^3^^1^^^1^^^^
"DATA",357.6,20,1,0)
^^3^3^2930217^
"DATA",357.6,20,1,1,0)
For displaying the patient's employer's address. The address is in the form
"DATA",357.6,20,1,2,0)
of a list of address lines each up to 30 characters long. The number of lines
"DATA",357.6,20,1,3,0)
is variable, up to 4.
"DATA",357.6,20,2)
ADDRESS LINE^45^^^^^^^^^^^^^^^1
"DATA",357.6,20,3)
PATIENT EMPLOYER ADDRESS
"DATA",357.6,20,7,0)
^357.67^1^1
"DATA",357.6,20,7,1,0)
DFN
"DATA",357.6,20,15,0)
^357.615I^^0
"DATA",357.6,21,0)
DPT PATIENT'S EMPLOYER TELEPHONE^EMPLOYER^IBDFN2^REGISTRATION^1^2^1^^1^^^1^^^^
"DATA",357.6,21,1,0)
^^1^1^2930217^
"DATA",357.6,21,1,1,0)
For displaying the patient's employer's telephone number.
"DATA",357.6,21,2)
telephone number^20^^^^^^^^^^^^^^^1
"DATA",357.6,21,3)
PATIENT EMPLOYER TELEPHONE
"DATA",357.6,21,7,0)
^357.67^1^1
"DATA",357.6,21,7,1,0)
DFN
"DATA",357.6,21,15,0)
^357.615I^^0
"DATA",357.6,22,0)
DPT SPOUSE'S EMPLOYER NAME^SPSEMPLR^IBDFN2^REGISTRATION^1^2^1^^1^^^1^^^^
"DATA",357.6,22,1,0)
^^1^1^2930217^
"DATA",357.6,22,1,1,0)
For displaying the spouse's employer.
"DATA",357.6,22,2)
employer name^45^^^^^^^^^^^^^^^1
"DATA",357.6,22,3)
PATIENT SPOUSE EMPLOYER
"DATA",357.6,22,7,0)
^357.67^1^1
"DATA",357.6,22,7,1,0)
DFN
"DATA",357.6,22,15,0)
^357.615I^^0
"DATA",357.6,23,0)
DPT SPOUSE'S EMPLOYER ADDRESS LINES^SPSEMPLR^IBDFN2^REGISTRATION^1^2^4^^1^^^1^^^^
"DATA",357.6,23,1,0)
^^3^3^2951023^
"DATA",357.6,23,1,1,0)
For displaying the patient's spouse's employer's address. The address is in the form
"DATA",357.6,23,1,2,0)
of a list of address lines each up to 30 characters long. The number of line
"DATA",357.6,23,1,3,0)
is variable, up to 4.
"DATA",357.6,23,2)
address line^45^^^^^^^^^^^^^^^1
"DATA",357.6,23,3)
PATIENT SPOUSE EMPLOYER ADDRESS
"DATA",357.6,23,7,0)
^357.67^1^1
"DATA",357.6,23,7,1,0)
DFN
"DATA",357.6,23,15,0)
^357.615I^^0
"DATA",357.6,24,0)
DPT SPOUSE'S EMPLOYER TELEPHONE^SPSEMPLR^IBDFN2^REGISTRATION^1^2^1^^1^^^1^^^^
"DATA",357.6,24,1,0)
^^1^1^2930217^
"DATA",357.6,24,1,1,0)
For displaying the telephone number of the spouse's employer.
"DATA",357.6,24,2)
telephone number^20^^^^^^^^^^^^^^^1
"DATA",357.6,24,3)
PATIENT SPOUSE EMPLOYER TELEPHONE WIFE HUSBAND
"DATA",357.6,24,7,0)
^357.67^1^1
"DATA",357.6,24,7,1,0)
DFN
"DATA",357.6,24,15,0)
^357.615I^^0
"DATA",357.6,25,0)
DPT PATIENT'S MARITAL STATUS^VADPT^IBDFN^REGISTRATION^1^2^1^^1^^^1^^^^
"DATA",357.6,25,1,0)
^^1^1^2930217^
"DATA",357.6,25,1,1,0)
For displaying the patient's marital status.
"DATA",357.6,25,2)
MARITAL STATUS^15^^^^^^^^^^^^^^^1
"DATA",357.6,25,3)
PATIENT MARITAL STATUS
"DATA",357.6,25,7,0)
^357.67^1^1
"DATA",357.6,25,7,1,0)
DFN
"DATA",357.6,25,15,0)
^357.615I^^0
"DATA",357.6,26,0)
DPT PATIENT'S EMPLOYMENT STATUS^EMPLMNT^IBDFN^REGISTRATION^1^2^1^^1^^^1^^^^
"DATA",357.6,26,1,0)
^^1^1^2930217^
"DATA",357.6,26,1,1,0)
For displaying the employment status of the patient.
"DATA",357.6,26,2)
EMPLOYMENT STATUS^20^^^^^^^^^^^^^^^1
"DATA",357.6,26,3)
PATIENT EMPLOYER EMPLOYMENT
"DATA",357.6,26,7,0)
^357.67^1^1
"DATA",357.6,26,7,1,0)
DFN
"DATA",357.6,26,15,0)
^357.615I^^0
"DATA",357.6,27,0)
SD CLINIC NAME^CLINIC^IBDFN1^SCHEDULING^1^2^1^^1^^^1^^^^
"DATA",357.6,27,1,0)
^^2^2^2960528^^^
"DATA",357.6,27,1,1,0)
 
"DATA",357.6,27,1,2,0)
Outputs the name of the clinic.
"DATA",357.6,27,2)
CLINIC NAME^30^^^^^^^^^^^^^^^1
"DATA",357.6,27,3)
CLINIC SCHEDULING
"DATA",357.6,27,7,0)
^357.67^1^1
"DATA",357.6,27,7,1,0)
IBCLINIC
"DATA",357.6,27,15,0)
^357.615I^^0
"DATA",357.6,28,0)
SD APPOINTMENT DATE/TIME^APPT^IBDFN2^SCHEDULING^1^2^2^^1^^^1^^^0^^
"DATA",357.6,28,1,0)
^^2^2^2950413^^^^
"DATA",357.6,28,1,1,0)
 
"DATA",357.6,28,1,2,0)
Returns the date/time of the appointment.
"DATA",357.6,28,2)
APPT. DATE/TIME^18^^^^^^^^^^^^^^^1
"DATA",357.6,28,3)
APPOINTMENT DATE TIME SCHEDULING
"DATA",357.6,28,7,0)
^357.67^3^3
"DATA",357.6,28,7,1,0)
IBAPPT
"DATA",357.6,28,7,2,0)
DFN
"DATA",357.6,28,7,3,0)
IBCLINIC
"DATA",357.6,28,15,0)
^357.615I^3^3
"DATA",357.6,28,15,2,0)
APPT. DATE (MMM DD,YYYY)^12^2^
"DATA",357.6,28,15,3,0)
APPT. TIME (HH:MM)^5^3^
"DATA",357.6,30,0)
DPT PATIENT ELIGIBILITY DATA^ELIG^IBDFN^REGISTRATION^1^2^2^^1^^^1^^^^
"DATA",357.6,30,1,0)
^^8^8^2931015^^^^
"DATA",357.6,30,1,1,0)
Returns patient eligibility data. Data returned is:
"DATA",357.6,30,1,2,0)
   eligibility code in external form
"DATA",357.6,30,1,3,0)
   period of service
"DATA",357.6,30,1,4,0)
   service connected? YES/NO
"DATA",357.6,30,1,5,0)
   veteran? YES/NO
"DATA",357.6,30,1,6,0)
   eligible for care? YES/NO
"DATA",357.6,30,1,7,0)
   type of patient
"DATA",357.6,30,1,8,0)
   SC%
"DATA",357.6,30,2)
ELIGIBILTY CODE/EXTERNAL FORM^30^^^^^^^^^TYPE OF PATIENT^^^^^^1
"DATA",357.6,30,3)
ELIGIBLE ELIGIBILITY PATIENT PERIOD SERVICE CONNECTED VETERAN STATUS
"DATA",357.6,30,7,0)
^357.67^1^1
"DATA",357.6,30,7,1,0)
DFN
"DATA",357.6,30,15,0)
^357.615I^7^7
"DATA",357.6,30,15,2,0)
PERIOD OF SERVICE^25^2^
"DATA",357.6,30,15,3,0)
SERVICE CONNECTED?^3^3^
"DATA",357.6,30,15,4,0)
VETERAN?^3^4^
"DATA",357.6,30,15,5,0)
ELIGIBLE FOR CARE?^3^5^
"DATA",357.6,30,15,6,0)
TYPE OF PATIENT^20^6^
"DATA",357.6,30,15,7,0)
SC %^3^7^
"DATA",357.6,31,0)
DPT SERVICE HISTORY RELATED DATA^ELIG^IBDFN^REGISTRATION^1^2^2^0^1^^^1^^^^
"DATA",357.6,31,1,0)
^^7^7^2931015^^^^
"DATA",357.6,31,1,1,0)
For displaying service history data. Data returned:
"DATA",357.6,31,1,2,0)
  Vietnam service? YES/NO
"DATA",357.6,31,1,3,0)
  Agent Orange exposure? YES/NO
"DATA",357.6,31,1,4,0)
  radiation exposure? YES/NO
"DATA",357.6,31,1,5,0)
  combat service? YES/NO
"DATA",357.6,31,1,6,0)
  POW? YES/NO
"DATA",357.6,31,1,7,0)
  environmental contaminants exposure? YES/NO
"DATA",357.6,31,2)
VIETNAM SERVICE?^3^^^^^^^^^ENVIRONMENTAL CONTAMINANTS?^^^^^^1
"DATA",357.6,31,3)
PATIENT MAS VIETNAM SERVICE AGENT ORANGE RADIATION COMBAT POW HISTORY ENVIRONMENTAL CONTAMINANT PERSIAN
"DATA",357.6,31,7,0)
^357.67^1^1
"DATA",357.6,31,7,1,0)
DFN
"DATA",357.6,31,15,0)
^357.615I^6^6
"DATA",357.6,31,15,2,0)
AGENT ORANGE EXPOSURE?^3^2^
"DATA",357.6,31,15,3,0)
RADIATION EXPOSURE?^3^3^
"DATA",357.6,31,15,4,0)
POW?^3^4^
"DATA",357.6,31,15,5,0)
COMBAT SERVICE?^3^5^
"DATA",357.6,31,15,6,0)
ENVIRONMENTAL CONTAMINANTS?^3^6^
"DATA",357.6,32,0)
DPT PATIENT'S MEANS TEST DATA^MT^IBDFN2^REGISTRATION^1^2^2^^1^^^1^^^^
"DATA",357.6,32,1,0)
^^5^5^2931015^^^
"DATA",357.6,32,1,1,0)
Returns the patient's current means test category and the date of the most
"DATA",357.6,32,1,2,0)
recent means test. Data returned:
"DATA",357.6,32,1,3,0)
  means test category
"DATA",357.6,32,1,4,0)
  means test code
"DATA",357.6,32,1,5,0)
  date of last means test
"DATA",357.6,32,2)
MEANS TEST CATEGORY^20^^^^^^^^^^^^^^^1
"DATA",357.6,32,3)
MEANS TEST CATEGORY PATIENT
"DATA",357.6,32,7,0)
^357.67^1^1
"DATA",357.6,32,7,1,0)
DFN
"DATA",357.6,32,15,0)
^357.615I^3^3
"DATA",357.6,32,15,2,0)
DATE OF LAST MEANS TEST^12^2^
"DATA",357.6,32,15,3,0)
MEANS TEST CODE^1^3^
"DATA",357.6,33,0)
GMP SELECT CLINIC COMMON PROBLEMS^SELECT^GMPLENFM^PROBLEM LIST^0^3^2^^1^^^1^103^^^
"DATA",357.6,33,1,0)
^^11^11^2970305^^^^
"DATA",357.6,33,1,1,0)
This interface allows users to build selection lists (pick lists)
"DATA",357.6,33,1,2,0)
using terms from the Clinical Lexicon.  These pick lists would then
"DATA",357.6,33,1,3,0)
be similar to pick lists created in the Problem List package.  This
"DATA",357.6,33,1,4,0)
is an alternative to building pick lists based on Diagnosis.  The primary
"DATA",357.6,33,1,5,0)
purpose is to provide lists of terms that can be the primary or a 
"DATA",357.6,33,1,6,0)
secondary purpose of visit and can be added to the patients active
"DATA",357.6,33,1,7,0)
problem list.
"DATA",357.6,33,1,8,0)
 
"DATA",357.6,33,1,9,0)
Warning: If you do not see ICD codes when creating pick lists you must
"DATA",357.6,33,1,10,0)
edit the Problem List User Defaults to show ICD codes.  Failure to do so
"DATA",357.6,33,1,11,0)
may result in inaccurate or invalid ICD codes.
"DATA",357.6,33,2)
POINTER TO CLINICAL LEX FILE^9^^^^^^^^^^^^^^^0^1
"DATA",357.6,33,3)
COMMON PROBLEMS SELECT LIST
"DATA",357.6,33,11)
D TESTLEX^IBDFN7
"DATA",357.6,33,15,0)
^357.615I^3^3
"DATA",357.6,33,15,2,0)
PROBLEM TEXT^210^2^^PROBLEM
"DATA",357.6,33,15,3,0)
CORRESPNDNG ICD-9 Dx CODE^7^3^^ICD-9
"DATA",357.6,33,16)
^^^^
"DATA",357.6,40,0)
ACTION PROFILE - 45 DAYS^RXPROF^IBDFN3^OUTPATIENT PHARMACY^1^4^^^1^0^^1^^^^
"DATA",357.6,40,1,0)
^^2^2^2970409^^^^
"DATA",357.6,40,1,1,0)
The Action Profile from Outpatient Pharmacy. The  medicine profile is printed
"DATA",357.6,40,1,2,0)
for the last 45 days.
"DATA",357.6,40,3)
OUTPATIENT PHARMACY ACTION PROFILE
"DATA",357.6,40,4)
S PSTYPE=1,PSDAYS=45
"DATA",357.6,40,6,0)
^357.66^25^2
"DATA",357.6,40,6,23,0)
PSTYPE
"DATA",357.6,40,6,25,0)
PSDAYS
"DATA",357.6,40,7,0)
^357.67^1^1
"DATA",357.6,40,7,1,0)
DFN
"DATA",357.6,41,0)
INFORMATION PROFILE - 45 DAYS^RXPROF^IBDFN3^OUTPATIENT PHARMACY^1^4^^^1^^^1^^^^
"DATA",357.6,41,1,0)
^^3^3^2930524^^
"DATA",357.6,41,1,1,0)
 
"DATA",357.6,41,1,2,0)
Prints the Information Profile from Outpatient Pharmacy. The medication
"DATA",357.6,41,1,3,0)
profile is printed for 45 days.
"DATA",357.6,41,2)
^^^^^^^^^^^^^^^^1
"DATA",357.6,41,3)
INFORMATION PROFILE OUTPATIENT PHARMACY RX
"DATA",357.6,41,4)
S PSTYPE=0,PSDAYS=45
"DATA",357.6,41,6,0)
^357.66^2^2
"DATA",357.6,41,6,1,0)
PSTYPE
"DATA",357.6,41,6,2,0)
PSDAYS
"DATA",357.6,41,7,0)
^357.67^1^1
"DATA",357.6,41,7,1,0)
DFN
"DATA",357.6,42,0)
ROUTING SLIP^ROUTING^IBDFN3^SCHEDULING^1^4^^^1^0^^1^^^^
"DATA",357.6,42,1,0)
^^1^1^2961024^^^^
"DATA",357.6,42,1,1,0)
Prints the routing slip from the scheduling package.
"DATA",357.6,42,3)
ROUTING SLIP SCHEDULING
"DATA",357.6,42,5)

"DATA",357.6,42,7,0)
^357.67^3^3
"DATA",357.6,42,7,1,0)
DFN
"DATA",357.6,42,7,2,0)
IBCLINIC
"DATA",357.6,42,7,3,0)
IBAPPT
"DATA",357.6,44,0)
IB CURRENT DATE^NOW^IBDFN2^AUTOMATED INFO COLLECTION SYS^1^2^1^0^1^^^1^^^^
"DATA",357.6,44,1,0)
^^1^1^2951023^
"DATA",357.6,44,1,1,0)
Prints the current date in MM DD,YYYY format.
"DATA",357.6,44,2)
CURRENT DATE (MMM DD, YYYY)^12^^^^^^^^^^^^^^^1
"DATA",357.6,44,3)
TODAY CURRENT DATE DAY
"DATA",357.6,44,15,0)
^357.615I^^0
"DATA",357.6,45,0)
IB CURRENT DATE@TIME^NOW^IBDFN2^AUTOMATED INFO COLLECTION SYS^1^2^1^0^1^^^1^^^^
"DATA",357.6,45,1,0)
^^1^1^2951023^
"DATA",357.6,45,1,1,0)
Returns the current date and time in MM DD, YYY@HH:MM:SS format.
"DATA",357.6,45,2)
DT/TM (MMM DD, YYYY@HH:MM:SS)^21^^^^^^^^^^^^^^^1
"DATA",357.6,45,3)
DATE TIME NOW DAY
"DATA",357.6,45,15,0)
^357.615I^^0
"DATA",357.6,46,0)
IB CURRENT TIME^NOW^IBDFN2^AUTOMATED INFO COLLECTION SYS^1^2^1^0^1^^^1^^^^
"DATA",357.6,46,1,0)
^^1^1^2930528^
"DATA",357.6,46,1,1,0)
Returns the time in HH:MM:SS format.
"DATA",357.6,46,2)
CURRENT TIME (HH:MM:SS)^8^^^^^^^^^^^^^^^1
"DATA",357.6,46,3)
TIME NOW
"DATA",357.6,46,15,0)
^357.615I^^0
"DATA",357.6,47,0)
SD DIVISION NAME^DIVISION^IBDFN1^SCHEDULING^1^2^1^0^1^^^1^^^^
"DATA",357.6,47,1,0)
^^1^1^2930603^^
"DATA",357.6,47,1,1,0)
Gets the name of the division that the clinic belongs to.
"DATA",357.6,47,2)
DIVISION NAME^30^^^^^^^^^^^^^^^1
"DATA",357.6,47,3)
DIVISION PIMS FACILITY
"DATA",357.6,47,7,0)
^357.67^1^1
"DATA",357.6,47,7,1,0)
IBCLINIC
"DATA",357.6,47,15,0)
^357.615I^^0
"DATA",357.6,48,0)
SD INSTITUTION NAME^INST^IBDFN1^SCHEDULING^1^2^1^0^1^^^1^^^^
"DATA",357.6,48,1,0)
^^1^1^2930603^^
"DATA",357.6,48,1,1,0)
Obtains the name of the institution of the clinic of the appointment.
"DATA",357.6,48,2)
INSTITUTION NAME^30^^^^^^^^^^^^^^^1
"DATA",357.6,48,3)
FACILITY INSTITUTION PIMS SCHEDULING
"DATA",357.6,48,7,0)
^357.67^1^1
"DATA",357.6,48,7,1,0)
IBCLINIC
"DATA",357.6,48,15,0)
^357.615I^^0
"DATA",357.6,49,0)
DPT PATIENT SHORT ADDRESS^ADDRESS^IBDFN6^REGISTRATION^1^2^1^1^1^0^^1^^
"DATA",357.6,49,1,0)
^^2^2^2931014^^^
"DATA",357.6,49,1,1,0)
The patient's address shortened to fit on a single line. It consists of the
"DATA",357.6,49,1,2,0)
first address line followed by the city, state, and ZIP.
"DATA",357.6,49,2)
SHORT ADDRESS - SINGLE LINE^65^^^^^^^^^^^^^^^1
"DATA",357.6,49,3)
PATIENT SHORT ADDRESS
"DATA",357.6,49,6,0)
^357.66^^0
"DATA",357.6,49,7,0)
^357.67^1^1
"DATA",357.6,49,7,1,0)
DFN
"DATA",357.6,49,15,0)
^357.615I^^0
"DATA",357.6,50,0)
DPT SC HIDDEN LABELS^ELIG^IBDFN^REGISTRATION^1^2^2^0^1^0^^1^^^^
"DATA",357.6,50,1,0)
^^9^9^2931015^^
"DATA",357.6,50,1,1,0)
This interface gives the ability to place labels that refer to SC conditions
"DATA",357.6,50,1,2,0)
on the form that won't actually be displayed if the patient is not a 
"DATA",357.6,50,1,3,0)
service connected veteran. It consists of a list of possible labels that will
"DATA",357.6,50,1,4,0)
only print if the veteran is SLabels returned:
"DATA",357.6,50,1,5,0)
  %
"DATA",357.6,50,1,6,0)
  % - SERVICE CONNECTED
"DATA",357.6,50,1,7,0)
  S/C
"DATA",357.6,50,1,8,0)
  SERVICE CONNECTED
"DATA",357.6,50,1,9,0)
  SC CONDITIONS:
"DATA",357.6,50,2)
 % ^1^^^^^^^^^^^^^^^1
"DATA",357.6,50,3)
SERVICE CONNECTED HIDDEN LABELS DPT PIMS S/C
"DATA",357.6,50,7,0)
^357.67^1^1
"DATA",357.6,50,7,1,0)
DFN
"DATA",357.6,50,15,0)
^357.615I^5^5
"DATA",357.6,50,15,2,0)
% - SERVICE CONNECTED^21^2^
"DATA",357.6,50,15,3,0)
SERVICE CONNECTED^17^3^
"DATA",357.6,50,15,4,0)
SC CONDITIONS:^13^4^
"DATA",357.6,50,15,5,0)
S/C^3^5^
"DATA",357.6,51,0)
DPT SC TREATMENT QUESTIONS^ELIG^IBDFN^REGISTRATION^1^2^2^0^1^^^1^^
"DATA",357.6,51,1,0)
^^8^8^2931018^^^^
"DATA",357.6,51,1,1,0)
Prints questions concerning whether treatment was related to service.
"DATA",357.6,51,1,2,0)
Each question is printed only if it applies to the patient. Questions are:
"DATA",357.6,51,1,3,0)
 
"DATA",357.6,51,1,4,0)
Was treatment for a SC condition? __ YES __ NO
"DATA",357.6,51,1,5,0)
Was treatment related to exposure to Agent Orange? __ YES __ NO
"DATA",357.6,51,1,6,0)
Was treatment related to exposure to Ionization Radiation? __ YES __ NO
"DATA",357.6,51,1,7,0)
Was treatment related to exposure to Environmental Contaminants? __ YES __ NO
"DATA",357.6,51,1,8,0)
Was treatment related to: AO __ IR __ EC __
"DATA",357.6,51,2)
RELATED TO SC CONDITION?^46^^^^^^^^^^^^^^^1
"DATA",357.6,51,3)
PATIENT TREATMENT QUESTIONS SERVICE CONNECTED EXPOSURE
"DATA",357.6,51,7,0)
^357.67^1^1
"DATA",357.6,51,7,1,0)
DFN
"DATA",357.6,51,8)
^^^^
"DATA",357.6,51,15,0)
^357.615I^5^5
"DATA",357.6,51,15,2,0)
RELATED TO AO?^63^2^
"DATA",357.6,51,15,3,0)
RELATED TO IR?^71^3^
"DATA",357.6,51,15,4,0)
RELATED TO EC?^77^4^1
"DATA",357.6,51,15,5,0)
RELATED TO AO,IR, OR EC?^43^5^1
"DATA",357.6,52,0)
SD FUTURE APPTS, SAME DAY^SAMEDAY^IBDFN1^SCHEDULING^1^2^4^1^1^^^1^^^1^^
"DATA",357.6,52,1,0)
^^8^8^2950413^^^^
"DATA",357.6,52,1,1,0)
Returns a list of all the patient's future appointments for the same day.
"DATA",357.6,52,1,2,0)
 Includes:
"DATA",357.6,52,1,3,0)
  Appointment Date
"DATA",357.6,52,1,4,0)
  Appointment Time
"DATA",357.6,52,1,5,0)
  Appointment Date@Time
"DATA",357.6,52,1,6,0)
  Clinic
"DATA",357.6,52,1,7,0)
  Status
"DATA",357.6,52,1,8,0)
  Appointment Type
"DATA",357.6,52,2)
DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1
"DATA",357.6,52,3)
FUTURE APPOINTMENTS SCHEDULING
"DATA",357.6,52,7,0)
^357.67^2^2
"DATA",357.6,52,7,1,0)
DFN
"DATA",357.6,52,7,2,0)
IBAPPT
"DATA",357.6,52,15,0)
^357.615I^6^6
"DATA",357.6,52,15,2,0)
TIME (HH:MM)^5^2^
"DATA",357.6,52,15,3,0)
DATE@TIME^17^3^
"DATA",357.6,52,15,4,0)
CLINIC^30^4^
"DATA",357.6,52,15,5,0)
STATUS^35^5^
"DATA",357.6,52,15,6,0)
APPOINTMENT TYPE^25^6^
"DATA",357.6,53,0)
SD FUTURE APPTS, ALL^ALLFUTR^IBDFN1^SCHEDULING^1^2^4^1^1^^^1^^^1^^
"DATA",357.6,53,1,0)
^^7^7^2951026^
"DATA",357.6,53,1,1,0)
Returns a list of all future appointments for all clinics. Includes:
"DATA",357.6,53,1,2,0)
  Appointment Date
"DATA",357.6,53,1,3,0)
  Appointment Time
"DATA",357.6,53,1,4,0)
  Appointment Date@Time
"DATA",357.6,53,1,5,0)
  Clinic
"DATA",357.6,53,1,6,0)
  Status
"DATA",357.6,53,1,7,0)
  Appointment Type
"DATA",357.6,53,2)
DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1
"DATA",357.6,53,3)
FUTURE APPOINTMENTS SCHEDULING
"DATA",357.6,53,7,0)
^357.67^2^2
"DATA",357.6,53,7,1,0)
DFN
"DATA",357.6,53,7,2,0)
IBAPPT
"DATA",357.6,53,15,0)
^357.615I^6^6
"DATA",357.6,53,15,2,0)
TIME^5^2^
"DATA",357.6,53,15,3,0)
DATE@TIME^17^3^
"DATA",357.6,53,15,4,0)
CLINIC^30^4^
"DATA",357.6,53,15,5,0)
STATUS^35^5^
"DATA",357.6,53,15,6,0)
APPOINTMENT TYPE^25^6^
"DATA",357.6,54,0)
SD FUTURE APPTS, SAME CLINIC^CLNCFUTR^IBDFN1^SCHEDULING^1^2^4^1^1^^^1^^^1^^
"DATA",357.6,54,1,0)
^^8^8^2950413^^
"DATA",357.6,54,1,1,0)
Returns a list of all the patient's future appointments for the same day
"DATA",357.6,54,1,2,0)
and clinic. Includes:
"DATA",357.6,54,1,3,0)
  Appointment Date
"DATA",357.6,54,1,4,0)
  Appointment Time
"DATA",357.6,54,1,5,0)
  Appointment Date@Time
"DATA",357.6,54,1,6,0)
  Clinic
"DATA",357.6,54,1,7,0)
  Status
"DATA",357.6,54,1,8,0)
  Appointment Type
"DATA",357.6,54,2)
DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1
"DATA",357.6,54,3)
FUTURE APPOINTMENTS SCHEDULING
"DATA",357.6,54,7,0)
^357.67^3^3
"DATA",357.6,54,7,1,0)
DFN
"DATA",357.6,54,7,2,0)
IBAPPT
"DATA",357.6,54,7,3,0)
IBCLINIC
"DATA",357.6,54,15,0)
^357.615I^6^6
"DATA",357.6,54,15,2,0)
TIME^5^2^
"DATA",357.6,54,15,3,0)
DATE@TIME^17^3^
"DATA",357.6,54,15,4,0)
CLINIC^30^4^
"DATA",357.6,54,15,5,0)
STATUS^35^5^
"DATA",357.6,54,15,6,0)
APPOINTMENT TYPE^25^6^
"DATA",357.6,55,0)
DPT PATIENT'S INSURANCE - ALL^INSURANC^IBDFN6^REGISTRATION^1^2^4^1^1^^^1^^^1^^
"DATA",357.6,55,1,0)
^^10^10^2950505^^
"DATA",357.6,55,1,1,0)
For displaying information on the patient's health insurance. Returns
"DATA",357.6,55,1,2,0)
ALL insurance policies, including inactive ones.
"DATA",357.6,55,1,3,0)
Data returned:
"DATA",357.6,55,1,4,0)
  insurance company
"DATA",357.6,55,1,5,0)
  policy number
"DATA",357.6,55,1,6,0)
  group name
"DATA",357.6,55,1,7,0)
  policy holder's relationship to the patient
"DATA",357.6,55,1,8,0)
  policy expiration date
"DATA",357.6,55,1,9,0)
  group number
"DATA",357.6,55,1,10,0)
  name of insured
"DATA",357.6,55,2)
INSURANCE COMPANY^30^^^^^^^^^^^^^^^1
"DATA",357.6,55,3)
PATIENT INSURANCE PIMS
"DATA",357.6,55,4)
S ACT=""
"DATA",357.6,55,6,0)
^357.66^1^1
"DATA",357.6,55,6,1,0)
ACT
"DATA",357.6,55,7,0)
^357.67^1^1
"DATA",357.6,55,7,1,0)
DFN
"DATA",357.6,55,15,0)
^357.615I^7^7
"DATA",357.6,55,15,2,0)
EXPIRATION DATE^12^2^
"DATA",357.6,55,15,3,0)
POLICY NUMBER^20^3^
"DATA",357.6,55,15,4,0)
GROUP NUMBER^17^4^
"DATA",357.6,55,15,5,0)
GROUP NAME^20^5^
"DATA",357.6,55,15,6,0)
NAME OF INSURED^30^6^
"DATA",357.6,55,15,7,0)
HOLDER'S RELATIONSHIP^9^7^
"DATA",357.6,56,0)
DPT PATIENT'S INSURANCE - ACTIVE ONLY^INSURANC^IBDFN6^REGISTRATION^1^2^4^1^1^^^1^^^1^^
"DATA",357.6,56,1,0)
^^10^10^2950412^^
"DATA",357.6,56,1,1,0)
For displaying information on the patient's health insurance. Returns ONLY
"DATA",357.6,56,1,2,0)
active insurance, excluding policies that do not reimburse.
"DATA",357.6,56,1,3,0)
Data returned:
"DATA",357.6,56,1,4,0)
  insurance company
"DATA",357.6,56,1,5,0)
  policy number
"DATA",357.6,56,1,6,0)
  group name
"DATA",357.6,56,1,7,0)
  policy holder's relationship to the patient
"DATA",357.6,56,1,8,0)
  policy expiration date
"DATA",357.6,56,1,9,0)
  group number
"DATA",357.6,56,1,10,0)
  name of insured
"DATA",357.6,56,2)
INSURANCE COMPANY^30^^^^^^^^^NAME OF INSURED^^^^^^1^0
"DATA",357.6,56,3)
PATIENT INSURANCE PIMS ACTIVE
"DATA",357.6,56,4)
S ACT=1
"DATA",357.6,56,6,0)
^357.66^1^1
"DATA",357.6,56,6,1,0)
ACT
"DATA",357.6,56,7,0)
^357.67^1^1
"DATA",357.6,56,7,1,0)
DFN
"DATA",357.6,56,15,0)
^357.615I^7^7
"DATA",357.6,56,15,2,0)
EXPIRATION DATE^12^2^
"DATA",357.6,56,15,3,0)
POLICY NUMBER^20^3^
"DATA",357.6,56,15,4,0)
GROUP NUMBER^17^4^
"DATA",357.6,56,15,5,0)
GROUP NAME^20^5^
"DATA",357.6,56,15,6,0)
NAME OF INSURED^30^6^
"DATA",357.6,56,15,7,0)
HOLDER'S RELATIONSHIP^9^7^
"DATA",357.6,59,0)
INPUT PROCEDURE CODE (CPT4)^^^PATIENT CARE ENCOUNTER^^1^4^^1^0^^1^^^^SMP^
"DATA",357.6,59,1,0)
^^1^1^2960205^^^^
"DATA",357.6,59,1,1,0)
Used for inputting CPT coded procedures performed on the patient.
"DATA",357.6,59,2)
^^^^^^^^^^^^^^^^^1
"DATA",357.6,59,3)
CPT4 PROCEDURE CODES
"DATA",357.6,59,9)
D INPUTCPT^IBDFN8(.X)
"DATA",357.6,59,10)
Enter an active CPT procedure code.
"DATA",357.6,59,11)
D TESTCPT^IBDFN7
"DATA",357.6,59,12)
PROCEDURE^1^6^7^3^2^^
"DATA",357.6,59,13,0)
^357.613V^2^2
"DATA",357.6,59,13,1,0)
2;IBD(357.98,^^0
"DATA",357.6,59,13,2,0)
3;IBD(357.98,^^0
"DATA",357.6,59,14)
S Y=$$DSPLYCPT^IBDFN9(Y)
"DATA",357.6,59,16)
^^^^^
"DATA",357.6,59,17)
D SLCTCPT^IBDFN12(.X)
"DATA",357.6,59,18)
S IBDF("OTHER")="81^I '$P(^(0),U,4)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"CPT Procedure Code")
"DATA",357.6,59,19)
D CPT^IBDFN14(X)
"DATA",357.6,60,0)
DG SELECT VISIT TYPE CPT PROCEDURES^VSIT^IBDFN4^SCHEDULING^^3^2^^1^^^1^62^^
"DATA",357.6,60,1,0)
^^1^1^2941116^^^^
"DATA",357.6,60,1,1,0)
Allows for select of just Visit type CPT codes from the CPT file.
"DATA",357.6,60,2)
CODE^5^RECOMMENDED TEXT-SHORT NAME^40^RECOMMENDED HEADER^30^SHORT NAME FROM CPT FILE^28^^^^^^^^^1^1
"DATA",357.6,60,3)
SELECT TYPE OF VISIT CPT
"DATA",357.6,60,11)
D TESTVST^IBDFN7
"DATA",357.6,60,15,0)
^357.615I^4^4
"DATA",357.6,60,15,2,0)
RECOMMENDED TEXT-SHORT NAME^40^2^
"DATA",357.6,60,15,3,0)
RECOMMENDED HEADER^30^3^
"DATA",357.6,60,15,4,0)
SHORT NAME FROM CPT FILE^28^4^
"DATA",357.6,61,0)
INPUT PROVIDER^PRVDR^IBDFN4^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^1^^SP^^^1
"DATA",357.6,61,1,0)
^^1^1^2960129^^^^
"DATA",357.6,61,1,1,0)
Used for inputting the provider of the service.
"DATA",357.6,61,2)
^^^^^^^^^^^^^^^^^0
"DATA",357.6,61,3)
PROVIDER DOCTOR NURSE
"DATA",357.6,61,12)
ENCOUNTER^4^^^15^^^
"DATA",357.6,61,13,0)
^357.613V^2^2
"DATA",357.6,61,13,1,0)
2;IBD(357.98,^^0^^^^^^
"DATA",357.6,61,13,2,0)
3;IBD(357.98,^^0^^^^^^
"DATA",357.6,61,14)
S Y=$$DSPLYPRV^IBDFN9(Y)
"DATA",357.6,61,16)
n^^^^n
"DATA",357.6,61,18)
S IBDF("OTHER")="200^I $$SCREEN^IBDFDE10(+Y)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Provider")
"DATA",357.6,62,0)
INPUT VISIT TYPE^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP^
"DATA",357.6,62,1,0)
^^1^1^2951023^
"DATA",357.6,62,1,1,0)
Used for inputting the visit type that applies to the visit.
"DATA",357.6,62,2)
^^^^^^^^^^^^^^^^^1
"DATA",357.6,62,3)
VISIT TYPE OF VISIT
"DATA",357.6,62,9)
D INPUTCPT^IBDFN8(.X)
"DATA",357.6,62,10)
Enter an active Visit Type code.
"DATA",357.6,62,11)
D TESTVST^IBDFN7
"DATA",357.6,62,12)
ENCOUNTER^5^^^^^^
"DATA",357.6,62,14)
S Y=$$DSPLYCPT^IBDFN9(Y)
"DATA",357.6,62,17)
D SLCTVST^IBDFN12(.X)
"DATA",357.6,62,18)
S IBDF("OTHER")="357.69^I '$P(^(0),U,4)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Visit Type (EM) Code")
"DATA",357.6,62,19)
D VST^IBDFN14(X)
"DATA",357.6,63,0)
INPUT SC RELATED?^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^P
"DATA",357.6,63,1,0)
^^2^2^2960903^^^^
"DATA",357.6,63,1,1,0)
Used for inputting whether the visit was related to a service connected
"DATA",357.6,63,1,2,0)
condition.
"DATA",357.6,63,2)
^^^^^^^^^^^^^^^^^1
"DATA",357.6,63,3)
SERVICE CONNECTED
"DATA",357.6,63,9)

"DATA",357.6,63,10)
Enter YES or NO.
"DATA",357.6,63,12)
ENCOUNTER^6^^^6^^^
"DATA",357.6,63,14)
S Y=$$DSPLYYN^IBDFN9(Y)
"DATA",357.6,63,17)
D SLCTYN^IBDFN12(.X)
"DATA",357.6,63,19)
D YN^IBDFN14(X)
"DATA",357.6,64,0)
INPUT AO RELATED?^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^P
"DATA",357.6,64,1,0)
^^2^2^2950913^^^
"DATA",357.6,64,1,1,0)
Used for inputting of whether or not the visit was related to Agent Orange
"DATA",357.6,64,1,2,0)
exposure.
"DATA",357.6,64,2)
^^^^^^^^^^^^^^^^^1
"DATA",357.6,64,3)
AGENT ORANGE
"DATA",357.6,64,9)

"DATA",357.6,64,10)
Enter YES or NO.
"DATA",357.6,64,12)
ENCOUNTER^7^^^^^^
"DATA",357.6,64,14)
S Y=$$DSPLYYN^IBDFN9(Y)
"DATA",357.6,64,17)
D SLCTYN^IBDFN12(.X)
"DATA",357.6,64,19)
D YN^IBDFN14(X)
"DATA",357.6,65,0)
INPUT IR RELATED?^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^P
"DATA",357.6,65,1,0)
^^2^2^2950913^^^
"DATA",357.6,65,1,1,0)
Used for inputting whether or not the patient's visit was related to
"DATA",357.6,65,1,2,0)
ionizing radiation.
"DATA",357.6,65,2)
^^^^^^^^^^^^^^^^^1
"DATA",357.6,65,3)
IONIZING RADIATION
"DATA",357.6,65,9)

"DATA",357.6,65,10)
Enter YES or NO.
"DATA",357.6,65,12)
ENCOUNTER^8^^^9^^^
"DATA",357.6,65,14)
S Y=$$DSPLYYN^IBDFN9(Y)
"DATA",357.6,65,17)
D SLCTYN^IBDFN12(.X)
"DATA",357.6,65,19)
D YN^IBDFN14(X)
"DATA",357.6,66,0)
INPUT EC RELATED?^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^P
"DATA",357.6,66,1,0)
^^2^2^2950828^^
"DATA",357.6,66,1,1,0)
Used for inputting whether or not the visit was related to environmental
"DATA",357.6,66,1,2,0)
contaminants.
"DATA",357.6,66,2)
^^^^^^^^^^^^^^^^^1
"DATA",357.6,66,3)
ENVIRONMENTAL CONTAMINANTS
"DATA",357.6,66,9)

"DATA",357.6,66,10)
Enter YES or NO.
"DATA",357.6,66,12)
ENCOUNTER^^^^9^^^
"DATA",357.6,66,14)
S Y=$$DSPLYYN^IBDFN9(Y)
"DATA",357.6,66,17)
D SLCTYN^IBDFN12(.X)
"DATA",357.6,66,19)
D YN^IBDFN14(X)
"DATA",357.6,67,0)
INPUT PROVIDER INDICATOR^^^PANDAS^^1^^^0^^^1^^^^P
"DATA",357.6,67,1,0)
^^1^1^2950913^^
"DATA",357.6,67,1,1,0)
Used by PANDAS only.
"DATA",357.6,67,2)
^^^^^^^^^^^^^^^^^0
"DATA",357.6,67,3)
PANDAS
"DATA",357.6,67,12)
ENCOUNTER^15^^^^^^
"DATA",357.6,68,0)
PX INPUT ATTENDING PHYSICIAN^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^S
"DATA",357.6,68,1,0)
^^1^1^2950825^
"DATA",357.6,68,1,1,0)
Used for inputting the attending physician.
"DATA",357.6,68,2)
^^^^^^^^^^^^^^^^^0
"DATA",357.6,68,3)
ATTENDING PHYSICIAN DOCTOR
"DATA",357.6,68,12)
ENCOUNTER^16^^^^^^
"DATA",357.6,68,14)
S Y=$$DSPLYPRV^IBDFN9(Y)
"DATA",357.6,69,0)
INPUT DIAGNOSIS CODE (ICD9)^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP^^^1
"DATA",357.6,69,1,0)
^^1^1^2970304^^^^
"DATA",357.6,69,1,1,0)
Used for inputting ICD9 diagnosis codes.
"DATA",357.6,69,2)
^^^^^^^^^^^^^^^^^1
"DATA",357.6,69,3)
INPUT ICD9 ICD-9 DIAGNOSIS CODES
"DATA",357.6,69,9)
D INPUTICD^IBDFN8(.X)
"DATA",357.6,69,10)
Enter an active ICD9 diagnosis code.
"DATA",357.6,69,11)
D TESTICD^IBDFN7
"DATA",357.6,69,12)
DIAGNOSIS/PROBLEM^1^13^14^2^^^
"DATA",357.6,69,13,0)
^357.613V^10^10
"DATA",357.6,69,13,1,0)
2;IBD(357.98,^^1^^^^^2^
"DATA",357.6,69,13,2,0)
3;IBD(357.98,^^1^^^^^2^
"DATA",357.6,69,13,3,0)
10;IBD(357.98,^^1^^^^^9^
"DATA",357.6,69,13,4,0)
1;IBE(359.1,^^0^^^^^^
"DATA",357.6,69,13,5,0)
11;IBD(357.98,^^1^^^^^10
"DATA",357.6,69,13,6,0)
12;IBD(357.98,^^1^^^^^11
"DATA",357.6,69,13,7,0)
13;IBD(357.98,^^1^^^^^12
"DATA",357.6,69,13,8,0)
9;IBD(357.98,^^1^^^^^5
"DATA",357.6,69,13,9,0)
6;IBD(357.98,^^1^^^^^6
"DATA",357.6,69,13,10,0)
7;IBD(357.98,^^1^^^^^6
"DATA",357.6,69,14)
S Y=$$DSPLYICD^IBDFN9(Y)
"DATA",357.6,69,15,0)
^357.615I^0^0
"DATA",357.6,69,16)
^^^^^^
"DATA",357.6,69,17)
D SLCTDX^IBDFN12(.X)
"DATA",357.6,69,18)
S IBDF("OTHER")="80^I '$P(^(0),U,9)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Diagnosis Code")
"DATA",357.6,69,19)
D DX^IBDFN14(X)
"DATA",357.6,70,0)
INPUT EDIT INFORMATION^^^PANDAS^^1^1^^0^^^1^^^^P
"DATA",357.6,70,1,0)
^^2^2^2950913^^
"DATA",357.6,70,1,1,0)
This package interface was created for the Pandas forms for those fields
"DATA",357.6,70,1,2,0)
that require editing by hand.
"DATA",357.6,70,3)
PANDAS
"DATA",357.6,71,0)
SD SELECT PROVIDER^PRVDR^IBDFN4^SCHEDULING^1^3^4^0^1^0^^1^61^1^^
"DATA",357.6,71,1,0)
^^2^2^2951020^
"DATA",357.6,71,1,1,0)
Used to indicate the provider.  The list of providers is obtained from
"DATA",357.6,71,1,2,0)
scheduling.  
"DATA",357.6,71,2)
POINTER TO NEW PERSON^10^^^^^^^^^^^^^^^0^0
"DATA",357.6,71,3)
PROVIDER DOCTOR NURSE
"DATA",357.6,71,7,0)
^357.67^1^1
"DATA",357.6,71,7,1,0)
IBCLINIC
"DATA",357.6,71,13,0)
^357.613V^2^2
"DATA",357.6,71,13,1,0)
2;IBD(357.98,^^0^^^^^^
"DATA",357.6,71,13,2,0)
3;IBD(357.98,^^0^^^^^^
"DATA",357.6,71,15,0)
^357.615I^1^1
"DATA",357.6,71,15,1,0)
PROVIDER^30^2^^PROVIDER
"DATA",357.6,71,16)
n^^^^n
"DATA",357.6,72,0)
IBDF FORM ID ASSIGNED BY FORM TRACKING^IBPFID^IBDFN4^AUTOMATED INFO COLLECTION SYS^1^2^1^1^1^^^1^^
"DATA",357.6,72,1,0)
^^4^4^2951020^
"DATA",357.6,72,1,1,0)
Used to display the form number assigned by Form Tracking. DO NOT use this
"DATA",357.6,72,1,2,0)
for scannable forms or forms designed to be printed on a laser printer
"DATA",357.6,72,1,3,0)
with a page size of (133 col)x(80 lines). The form tracking number will be
"DATA",357.6,72,1,4,0)
printed automatically in those cases.
"DATA",357.6,72,2)
FORM TRACKING NUMBER^8^^^^^^^^^^^^^^^1
"DATA",357.6,72,3)
FORM TRACKING NUMBER PRINTED FORM ID
"DATA",357.6,73,0)
GMP SELECT PATIENT ACTIVE PROBLEMS^DSELECT^GMPLENFM^PROBLEM LIST^1^3^4^1^1^^^1^74^1^1^
"DATA",357.6,73,1,0)
^^8^8^2960426^^^^
"DATA",357.6,73,1,1,0)
For displaying the patient's active problems. Returns a list.
"DATA",357.6,73,1,2,0)
Data returned:
"DATA",357.6,73,1,3,0)
  problem text
"DATA",357.6,73,1,4,0)
  corresponding ICD-9 code (if there is a mapping)
"DATA",357.6,73,1,5,0)
  date of onset (MM/DD/YY)
"DATA",357.6,73,1,6,0)
  SC indicator (SC/NSC/"")
"DATA",357.6,73,1,7,0)
  special exposure (A/I/P/"")
"DATA",357.6,73,1,8,0)
  special exposure (returns the full text of the type of exposure)
"DATA",357.6,73,2)
PROBLEM^10^^^^^^^^^^^^^^^0^0
"DATA",357.6,73,3)
SELECT ACTIVE PROBLEMS LIST PATIENT
"DATA",357.6,73,7,0)
^357.67^1^1
"DATA",357.6,73,7,1,0)
DFN
"DATA",357.6,73,13,0)
^357.613V^2^2
"DATA",357.6,73,13,1,0)
2;IBD(357.98,^^0^^^^^^
"DATA",357.6,73,13,2,0)
3;IBD(357.98,^^0^^^^^^
"DATA",357.6,73,15,0)
^357.615I^7^7
"DATA",357.6,73,15,1,0)
PROBLEM TEXT^80^2^^PROBLEM NARRATIVE/NOTES
"DATA",357.6,73,15,2,0)
CORRESPONDNG ICD-9 Dx CODE^7^3
"DATA",357.6,73,15,3,0)
DATE OF ONSET (MM/DD/YY)^8^4
"DATA",357.6,73,15,4,0)
SC INDICATOR (SC/NSC/"")^3^5
"DATA",357.6,73,15,5,0)
SC INDICATOR (Y/N/"")^1^6
"DATA",357.6,73,15,6,0)
SPECIAL EXPOSURE (A/I/P/"")^1^7
"DATA",357.6,73,15,7,0)
SPECIAL EXPOSURE (FULL TEXT)^12^8
"DATA",357.6,73,16)
n^^^^n
"DATA",357.6,74,0)
PX INPUT PATIENT ACTIVE PROBLEM^DSELECT^GMPLENFM^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^1^^S
"DATA",357.6,74,1,0)
^^1^1^2951206^^
"DATA",357.6,74,1,1,0)
Used for inputting data selected from the Patient's Active Problem List.
"DATA",357.6,74,2)
^^^^^^^^^^^^^^^^^0
"DATA",357.6,74,3)
PATIENT'S ACTIVE PROBLEM LIST
"DATA",357.6,74,9)

"DATA",357.6,74,12)
DIAGNOSIS/PROBLEM^4^13^14^2
"DATA",357.6,74,13,0)
^357.613V^9^9
"DATA",357.6,74,13,1,0)
2;IBD(357.98,^^1^^^^^2^
"DATA",357.6,74,13,2,0)
3;IBD(357.98,^^1^^^^^2^
"DATA",357.6,74,13,3,0)
10;IBD(357.98,^^1^^^^^9
"DATA",357.6,74,13,4,0)
11;IBD(357.98,^^1^^^^^10
"DATA",357.6,74,13,5,0)
12;IBD(357.98,^^1^^^^^11
"DATA",357.6,74,13,6,0)
13;IBD(357.98,^^1^^^^^12
"DATA",357.6,74,13,7,0)
6;IBD(357.98,^^1^^^^^6
"DATA",357.6,74,13,8,0)
7;IBD(357.98,^^1^^^^^6
"DATA",357.6,74,13,9,0)
29;IBD(357.98,^^1^^^^^9
"DATA",357.6,74,14)

"DATA",357.6,74,18)
D LIST^IBDFDE2(.IBDSEL,.IBDF,"Active Problem")
"DATA",357.6,75,0)
DPT PATIENT'S SC CONDITIONS^ELIG^IBDFN^REGISTRATION^1^3^4^1^1^^^1^^1^^
"DATA",357.6,75,1,0)
^^7^7^2951023^
"DATA",357.6,75,1,1,0)
Used to output a list of the patients service connected conditions,
"DATA",357.6,75,1,2,0)
along with the percentage ratings. Data returned:
"DATA",357.6,75,1,3,0)
  disability name
"DATA",357.6,75,1,4,0)
  disability percentage
"DATA",357.6,75,1,5,0)
  disability percentage with the label "%"
"DATA",357.6,75,1,6,0)
  disability percentage with the label "%SC"
"DATA",357.6,75,1,7,0)
  disability percentage with the label "% - SERVICE CONNECTED"
"DATA",357.6,75,2)
Disability Name^45^^^^^^^^^^^^^^DISABILITY^1^0
"DATA",357.6,75,3)
SERVICE CONNECTED CONDITIONS PATIENT PIMS DISABILITY DISABILITIES
"DATA",357.6,75,7,0)
^357.67^1^1
"DATA",357.6,75,7,1,0)
DFN
"DATA",357.6,75,15,0)
^357.615I^5^4
"DATA",357.6,75,15,2,0)
Disability % (number only)^3^2
"DATA",357.6,75,15,3,0)
Disability % (label=%)^4^3
"DATA",357.6,75,15,4,0)
Disabilty % (label=%SC)^6^4
"DATA",357.6,75,15,5,0)
Dis.%_"% - SERVICE CONNECTED"^24^5
"DATA",357.6,76,0)
SD FUTURE APPTS, SAME DAY^SAMEDAY^IBDFN1^SCHEDULING^1^3^4^1^1^^^1^^1^^
"DATA",357.6,76,1,0)
^^8^8^2950413^^^
"DATA",357.6,76,1,1,0)
Returns a list of all the patient's future appointments for the same day.
"DATA",357.6,76,1,2,0)
 Includes:
"DATA",357.6,76,1,3,0)
  Appointment Date
"DATA",357.6,76,1,4,0)
  Appointment Time
"DATA",357.6,76,1,5,0)
  Appointment Date@Time
"DATA",357.6,76,1,6,0)
  Clinic
"DATA",357.6,76,1,7,0)
  Status
"DATA",357.6,76,1,8,0)
  Appointment Type
"DATA",357.6,76,2)
DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1^0
"DATA",357.6,76,3)
FUTURE APPOINTMENTS SCHEDULING
"DATA",357.6,76,7,0)
^357.67^2^2
"DATA",357.6,76,7,1,0)
DFN
"DATA",357.6,76,7,2,0)
IBAPPT
"DATA",357.6,76,15,0)
^357.615I^6^5
"DATA",357.6,76,15,2,0)
TIME (HH:MM)^5^2
"DATA",357.6,76,15,3,0)
DATE@TIME^17^3
"DATA",357.6,76,15,4,0)
CLINIC^30^4
"DATA",357.6,76,15,5,0)
STATUS^35^5
"DATA",357.6,76,15,6,0)
APPOINTMENT TYPE^25^6
"DATA",357.6,77,0)
SD FUTURE APPTS, ALL^ALLFUTR^IBDFN1^SCHEDULING^1^3^4^1^1^^^1^^1^^
"DATA",357.6,77,1,0)
^^7^7^2951026^
"DATA",357.6,77,1,1,0)
Returns a list of all future appointments for all clinics. Includes:
"DATA",357.6,77,1,2,0)
  Appointment Date
"DATA",357.6,77,1,3,0)
  Appointment Time
"DATA",357.6,77,1,4,0)
  Appointment Date@Time
"DATA",357.6,77,1,5,0)
  Clinic
"DATA",357.6,77,1,6,0)
  Status
"DATA",357.6,77,1,7,0)
  Appointment Type
"DATA",357.6,77,2)
DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1^0
"DATA",357.6,77,3)
FUTURE APPOINTMENTS SCHEDULING
"DATA",357.6,77,7,0)
^357.67^2^2
"DATA",357.6,77,7,1,0)
DFN
"DATA",357.6,77,7,2,0)
IBAPPT
"DATA",357.6,77,15,0)
^357.615I^6^5
"DATA",357.6,77,15,2,0)
TIME^5^2
"DATA",357.6,77,15,3,0)
DATE@TIME^17^3
"DATA",357.6,77,15,4,0)
CLINIC^30^4
"DATA",357.6,77,15,5,0)
STATUS^35^5
"DATA",357.6,77,15,6,0)
APPOINTMENT TYPE^25^6
"DATA",357.6,78,0)
SD FUTURE APPTS, SAME CLINIC^CLNCFUTR^IBDFN1^SCHEDULING^1^3^4^1^1^^^1^^1^^
"DATA",357.6,78,1,0)
^^8^8^2950413^^^
"DATA",357.6,78,1,1,0)
Returns a list of all the patient's future appointments for the same day
"DATA",357.6,78,1,2,0)
and clinic. Includes:
"DATA",357.6,78,1,3,0)
  Appointment Date
"DATA",357.6,78,1,4,0)
  Appointment Time
"DATA",357.6,78,1,5,0)
  Appointment Date@Time
"DATA",357.6,78,1,6,0)
  Clinic
"DATA",357.6,78,1,7,0)
  Status
"DATA",357.6,78,1,8,0)
  Appointment Type
"DATA",357.6,78,2)
DATE (MMM DD,YYYY)^11^^^^^^^^^APPOINTMENT TYPE^^^^^^1^0
"DATA",357.6,78,3)
FUTURE APPOINTMENTS SCHEDULING
"DATA",357.6,78,7,0)
^357.67^3^3
"DATA",357.6,78,7,1,0)
DFN
"DATA",357.6,78,7,2,0)
IBAPPT
"DATA",357.6,78,7,3,0)
IBCLINIC
"DATA",357.6,78,15,0)
^357.615I^6^5
"DATA",357.6,78,15,2,0)
TIME^5^2
"DATA",357.6,78,15,3,0)
DATE@TIME^17^3
"DATA",357.6,78,15,4,0)
CLINIC^30^4
"DATA",357.6,78,15,5,0)
STATUS^35^5
"DATA",357.6,78,15,6,0)
APPOINTMENT TYPE^25^6
"DATA",357.6,79,0)
DPT PATIENT'S INSURANCE - ALL^INSURANC^IBDFN6^REGISTRATION^1^3^4^1^1^^^1^^1^1^^
"DATA",357.6,79,1,0)
^^10^10^2950505^^^
"DATA",357.6,79,1,1,0)
For displaying information on the patient's health insurance. Returns
"DATA",357.6,79,1,2,0)
ALL insurance policies, including inactive ones.
"DATA",357.6,79,1,3,0)
Data returned:
"DATA",357.6,79,1,4,0)
  insurance company
"DATA",357.6,79,1,5,0)
  policy number
"DATA",357.6,79,1,6,0)
  group name
"DATA",357.6,79,1,7,0)
  policy holder's relationship to the patient
"DATA",357.6,79,1,8,0)
  policy expiration date
"DATA",357.6,79,1,9,0)
  group number
"DATA",357.6,79,1,10,0)
  name of insured
"DATA",357.6,79,2)
INSURANCE COMPANY^30^^^^^^^^^^^^^^^1^0
"DATA",357.6,79,3)
PATIENT INSURANCE PIMS
"DATA",357.6,79,4)
S ACT=""
"DATA",357.6,79,6,0)
^357.66^1^1
"DATA",357.6,79,6,1,0)
ACT
"DATA",357.6,79,7,0)
^357.67^1^1
"DATA",357.6,79,7,1,0)
DFN
"DATA",357.6,79,15,0)
^357.615I^7^6
"DATA",357.6,79,15,2,0)
EXPIRATION DATE^12^2
"DATA",357.6,79,15,3,0)
POLICY NUMBER^20^3
"DATA",357.6,79,15,4,0)
GROUP NUMBER^17^4
"DATA",357.6,79,15,5,0)
GROUP NAME^20^5
"DATA",357.6,79,15,6,0)
NAME OF INSURED^30^6
"DATA",357.6,79,15,7,0)
HOLDER'S RELATIONSHIP^9^7
"DATA",357.6,80,0)
DPT PATIENT'S INSURANCE - ACTIVE ONLY^INSURANC^IBDFN6^REGISTRATION^1^3^4^1^1^^^1^^1^1^^
"DATA",357.6,80,1,0)
^^10^10^2950413^^^
"DATA",357.6,80,1,1,0)
For displaying information on the patient's health insurance. Returns ONLY
"DATA",357.6,80,1,2,0)
active insurance, excluding policies that do not reimburse.
"DATA",357.6,80,1,3,0)
Data returned:
"DATA",357.6,80,1,4,0)
  insurance company
"DATA",357.6,80,1,5,0)
  policy number
"DATA",357.6,80,1,6,0)
  group name
"DATA",357.6,80,1,7,0)
  policy holder's relationship to the patient
"DATA",357.6,80,1,8,0)
  policy expiration date
"DATA",357.6,80,1,9,0)
  group number
"DATA",357.6,80,1,10,0)
  name of insured
"DATA",357.6,80,2)
INSURANCE COMPANY^30^^^^^^^^^NAME OF INSURED^^^^^^1^0
"DATA",357.6,80,3)
PATIENT INSURANCE PIMS ACTIVE
"DATA",357.6,80,4)
S ACT=1
"DATA",357.6,80,6,0)
^357.66^1^1
"DATA",357.6,80,6,1,0)
ACT
"DATA",357.6,80,7,0)
^357.67^1^1
"DATA",357.6,80,7,1,0)
DFN
"DATA",357.6,80,15,0)
^357.615I^7^6
"DATA",357.6,80,15,2,0)
EXPIRATION DATE^12^2
"DATA",357.6,80,15,3,0)
POLICY NUMBER^20^3
"DATA",357.6,80,15,4,0)
GROUP NUMBER^17^4
"DATA",357.6,80,15,5,0)
GROUP NAME^20^5
"DATA",357.6,80,15,6,0)
NAME OF INSURED^30^6
"DATA",357.6,80,15,7,0)
HOLDER'S RELATIONSHIP^9^7
"DATA",357.6,81,0)
DPT PATIENT'S INSURANCE POLICIES^INSURANC^IBDFN6^REGISTRATION^1^3^4^1^1^^^1^^1^1^^
"DATA",357.6,81,1,0)
^^10^10^2950413^^
"DATA",357.6,81,1,1,0)
For displaying information on the patient's health insurance. Returns
"DATA",357.6,81,1,2,0)
active insurance policies and policies that do not reimburse (Medicare).
"DATA",357.6,81,1,3,0)
Data returned:
"DATA",357.6,81,1,4,0)
    insurance company
"DATA",357.6,81,1,5,0)
    policy number
"DATA",357.6,81,1,6,0)
    group name
"DATA",357.6,81,1,7,0)
    policy holder's relationship to the patient
"DATA",357.6,81,1,8,0)
    policy expiration date
"DATA",357.6,81,1,9,0)
    group number
"DATA",357.6,81,1,10,0)
    name of insured
"DATA",357.6,81,2)
INSURANCE COMPANY^30^^^^^^^^^NAME OF INSURED^^^^^^1^0
"DATA",357.6,81,3)
PATIENT INSURANCE PIMS
"DATA",357.6,81,4)
S ACT=2
"DATA",357.6,81,6,0)
^357.66^1^1
"DATA",357.6,81,6,1,0)
ACT
"DATA",357.6,81,7,0)
^357.67^1^1
"DATA",357.6,81,7,1,0)
DFN
"DATA",357.6,81,15,0)
^357.615I^7^6
"DATA",357.6,81,15,2,0)
EXPIRATION DATE^12^2
"DATA",357.6,81,15,3,0)
POLICY NUMBER^20^3
"DATA",357.6,81,15,4,0)
GROUP NUMBER^17^4
"DATA",357.6,81,15,5,0)
GROUP NAME^20^5
"DATA",357.6,81,15,6,0)
NAME OF INSURED^30^6
"DATA",357.6,81,15,7,0)
HOLDER'S RELATIONSHIP^9^7
"DATA",357.6,82,0)
GMRA PATIENT'S ALLERGIES^ALLERGY^IBDFN2^GEN. MED. REC. - ALLERGIES^1^3^4^1^1^^^1^^1^1^^
"DATA",357.6,82,1,0)
^^7^7^2951023^
"DATA",357.6,82,1,1,0)
Used to display a list of the patient's allergies, both true and adverse
"DATA",357.6,82,1,2,0)
reactions, verified and unverified. Data returned:
"DATA",357.6,82,1,3,0)
  allergy name
"DATA",357.6,82,1,4,0)
  type of allergen
"DATA",357.6,82,1,5,0)
  type (code only - F=food, D=drug,O=other)
"DATA",357.6,82,1,6,0)
  verified? YES/NO
"DATA",357.6,82,1,7,0)
  true allergy? YES/NO
"DATA",357.6,82,2)
ALLERGY NAME^30^^^^^^^^^^^^^^^1^0
"DATA",357.6,82,3)
ALLERGIES ALLERGY PATIENT
"DATA",357.6,82,7,0)
^357.67^1^1
"DATA",357.6,82,7,1,0)
DFN
"DATA",357.6,82,15,0)
^357.615I^5^4
"DATA",357.6,82,15,2,0)
TYPE OF ALLERGEN^5^2
"DATA",357.6,82,15,3,0)
TYPE (F=FOOD,D=DRUG,O=OTHER)^1^3
"DATA",357.6,82,15,4,0)
VERIFIED? (YES/NO)^3^4
"DATA",357.6,82,15,5,0)
TRUE ALLERGY? (YES/NO)^3^5
"DATA",357.6,85,0)
PX SELECT EDUCATION TOPICS^EDTOP^IBDFN10^PATIENT CARE ENCOUNTER^0^3^2^^1^0^^1^91^^^
"DATA",357.6,85,1,0)
^^1^1^2960403^^
"DATA",357.6,85,1,1,0)
Allows education topics from the EDUCATION TOPICS file to be selected.
"DATA",357.6,85,2)
Internal Number^9^^^^^^^^^^^^^^^0^0
"DATA",357.6,85,3)
EDUCATION TOPICS TRAINING
"DATA",357.6,85,11)
D TESTEDT^PXAPIIB
"DATA",357.6,85,15,0)
^357.615I^2^2
"DATA",357.6,85,15,1,0)
Topic^30^2^^EDUCATION TOPIC
"DATA",357.6,85,15,2,0)
Mneumonic^6^3
"DATA",357.6,85,16)
o
"DATA",357.6,86,0)
PX SELECT IMMUNIZATIONS^IMM^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^1^^^1^94
"DATA",357.6,86,1,0)
^^1^1^2961024^^^
"DATA",357.6,86,1,1,0)
Allows immunizations form the IMMUNIZATION file to be selected.
"DATA",357.6,86,2)
Internal Number^9^^^^^^^^^^^^^^^0^0
"DATA",357.6,86,3)
IMMUNIZATIONS SHOTS IMMUNIZE
"DATA",357.6,86,11)
D TESTIMM^PXAPIIB
"DATA",357.6,86,15,0)
^357.615I^3^3
"DATA",357.6,86,15,1,0)
Immunization Name^45^2^^IMMUNIZATION
"DATA",357.6,86,15,2,0)
Short Name^10^3
"DATA",357.6,86,15,3,0)
Code^10^4
"DATA",357.6,87,0)
PX SELECT EXAMS^EXAM^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^1^^^1^92^^^
"DATA",357.6,87,1,0)
^^1^1^2950911^
"DATA",357.6,87,1,1,0)
Allows exams from the EXAM file to be selected.
"DATA",357.6,87,2)
Internal Number^9^^^^^^^^^^^^^^^0^0
"DATA",357.6,87,3)
EXAMS EXAMINATIONS PATIENT
"DATA",357.6,87,11)
D TESTEXM^PXAPIIB
"DATA",357.6,87,15,0)
^357.615I^3^3
"DATA",357.6,87,15,1,0)
Exam Name^30^2^^EXAM
"DATA",357.6,87,15,2,0)
Code^2^3
"DATA",357.6,87,15,3,0)
Sex Specific^6^4^^FOR
"DATA",357.6,87,18)

"DATA",357.6,88,0)
PX SELECT TREATMENTS^TRTMNT^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^0^^^1^
"DATA",357.6,88,1,0)
^^1^1^2970403^^^
"DATA",357.6,88,1,1,0)
Allows treatments found in the TREATMENT file to be selected.
"DATA",357.6,88,2)
Internal Number^9^^^^^^^^^^^^^^^0^0
"DATA",357.6,88,3)
TREATMENTS PATIENT
"DATA",357.6,88,11)
D TESTTRT^PXAPIIB
"DATA",357.6,88,15,0)
^357.615I^2^2
"DATA",357.6,88,15,1,0)
Treatment Name^30^2^^TREATMENT
"DATA",357.6,88,15,2,0)
Code^6^3
"DATA",357.6,89,0)
PX SELECT SKIN TESTS^SKINTST^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^1^^^1^97
"DATA",357.6,89,1,0)
^^1^1^2960228^^
"DATA",357.6,89,1,1,0)
Allows skin tests found in the SKIN TEST file to be selected.
"DATA",357.6,89,2)
Internal Number^9^^^^^^^^^^^^^^^0^0
"DATA",357.6,89,3)
SKIN TESTS
"DATA",357.6,89,11)
D TESTSK^PXAPIIB
"DATA",357.6,89,15,0)
^357.615I^2^2
"DATA",357.6,89,15,1,0)
Skin Test Name^30^2^^SKIN TEST
"DATA",357.6,89,15,2,0)
code^2^3
"DATA",357.6,90,0)
PX SELECT HEALTH FACTORS^HF^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^1^^^1^93
"DATA",357.6,90,1,0)
^^1^1^2951208^^^
"DATA",357.6,90,1,1,0)
Allows health factors from the HEALTH FACTORS file to be selected.
"DATA",357.6,90,2)
Internal Number^9^^^^^^^^^^^^^^^0^0
"DATA",357.6,90,3)
PATIENT HEALTH FACTORS
"DATA",357.6,90,11)
D TESTHF^PXAPIIB
"DATA",357.6,90,15,0)
^357.615I^4^4
"DATA",357.6,90,15,1,0)
Health Factor Name^30^2^^HEALTH FACTOR
"DATA",357.6,90,15,2,0)
Code^5^3
"DATA",357.6,90,15,3,0)
Short Name^10^5^^
"DATA",357.6,90,15,4,0)
Sex Specific^6^6^^FOR
"DATA",357.6,90,16)
n^^^^n
"DATA",357.6,91,0)
PX INPUT EDUCATION TOPICS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
"DATA",357.6,91,1,0)
^^1^1^2960531^^
"DATA",357.6,91,1,1,0)
Used for inputting education topics that the patient was instructed in.
"DATA",357.6,91,2)
^^^^^^^^^^^^^^^^^0
"DATA",357.6,91,3)
EDUCATION TOPICS TRAINING
"DATA",357.6,91,9)

"DATA",357.6,91,10)
Enter a Patient Education Topic.
"DATA",357.6,91,11)
D TESTEDT^PXAPIIB
"DATA",357.6,91,12)
PATIENT ED^1^^^2^^^
"DATA",357.6,91,13,0)
^357.613V^5^5
"DATA",357.6,91,13,1,0)
16;IBD(357.98,^^0
"DATA",357.6,91,13,2,0)
17;IBD(357.98,^^0
"DATA",357.6,91,13,3,0)
18;IBD(357.98,^^0
"DATA",357.6,91,13,4,0)
19;IBD(357.98,^^0
"DATA",357.6,91,13,5,0)
20;IBD(357.98,^^0
"DATA",357.6,91,14)
S Y=$$DSPLYED^PXAPIIB(Y)
"DATA",357.6,91,17)
D SLCTED^IBDFN12(.X)
"DATA",357.6,91,18)
S IBDF("OTHER")="9999999.09^I '$P(^(0),U,3)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Patient Education")
"DATA",357.6,91,19)
D ED^IBDFN14(X)
"DATA",357.6,92,0)
PX INPUT EXAMS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
"DATA",357.6,92,1,0)
^^1^1^2970321^^^^
"DATA",357.6,92,1,1,0)
Used for inputting exams that were performed on the patient.
"DATA",357.6,92,2)
^^^^^^^^^^^^^^^^^0
"DATA",357.6,92,3)
EXAMS EXAMINATIONS
"DATA",357.6,92,9)

"DATA",357.6,92,10)
Enter a Patient Exam.
"DATA",357.6,92,11)
D TESTEXM^PXAPIIB
"DATA",357.6,92,12)
EXAM^1^^^2^^^
"DATA",357.6,92,13,0)
^357.613V^2^2
"DATA",357.6,92,13,1,0)
14;IBD(357.98,^^0
"DATA",357.6,92,13,2,0)
15;IBD(357.98,^^0
"DATA",357.6,92,14)
S Y=$$DSPLYEX^PXAPIIB(Y)
"DATA",357.6,92,17)
D SLCTEX^IBDFN12(.X)
"DATA",357.6,92,18)
S IBDF("OTHER")="9999999.15^I '$P(^(0),U,4)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Exam")
"DATA",357.6,92,19)
D EXAM^IBDFN14(X)
"DATA",357.6,93,0)
PX INPUT HEALTH FACTORS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
"DATA",357.6,93,1,0)
^^1^1^2951208^^^
"DATA",357.6,93,1,1,0)
Used for inputting health factors determined to apply to the patient.
"DATA",357.6,93,2)
^^^^^^^^^^^^^^^^^0
"DATA",357.6,93,3)
HEALTH FACTORS
"DATA",357.6,93,9)

"DATA",357.6,93,10)
Enter a Patient Health Factor.
"DATA",357.6,93,11)
D TESTHF^PXAPIIB
"DATA",357.6,93,12)
HEALTH FACTORS^1^^^2^^^
"DATA",357.6,93,13,0)
^357.613V^3^3
"DATA",357.6,93,13,1,0)
21;IBD(357.98,^^0
"DATA",357.6,93,13,2,0)
22;IBD(357.98,^^0
"DATA",357.6,93,13,3,0)
23;IBD(357.98,^^0
"DATA",357.6,93,14)
S Y=$$DSPLYHF^PXAPIIB(Y)
"DATA",357.6,93,17)
D SLCTHF^IBDFN12(.X)
"DATA",357.6,93,18)
S IBDF("OTHER")="9999999.64^I '$P(^(0),U,10),$P(^(0),U,10)=""F""" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Health Factors")
"DATA",357.6,93,19)
D HF^IBDFN14(X)
"DATA",357.6,94,0)
PX INPUT IMMUNIZATION^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
"DATA",357.6,94,1,0)
^^1^1^2961015^^^^
"DATA",357.6,94,1,1,0)
Used for inputting immunizations administered to the patient.
"DATA",357.6,94,2)
^^^^^^^^^^^^^^^^^0
"DATA",357.6,94,3)
IMMUNIZATIONS SHOTS
"DATA",357.6,94,9)

"DATA",357.6,94,10)
Enter a Patient Immunization.
"DATA",357.6,94,11)
D TESTIMM^PXAPIIB
"DATA",357.6,94,12)
IMMUNIZATION^1^7^^^^^
"DATA",357.6,94,13,0)
^357.613V^3^3
"DATA",357.6,94,13,1,0)
26;IBD(357.98,^^1^IMMUNIZATION^1^^^5
"DATA",357.6,94,13,2,0)
27;IBD(357.98,^^1^IMMUNIZATION^1
"DATA",357.6,94,13,3,0)
28;IBD(357.98,^^1^IMMUNIZATION^1^^^8
"DATA",357.6,94,14)
S Y=$$DSPLYIM^PXAPIIB(Y)
"DATA",357.6,94,17)
D SLCTIMM^IBDFN12(.X)
"DATA",357.6,94,18)
S IBDF("OTHER")="9999999.14^I '$P(^(0),U,7)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Immunizations")
"DATA",357.6,94,19)
D IMMUN^IBDFN14(X)
"DATA",357.6,95,0)
PX INPUT CHECKOUT TIME^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^H
"DATA",357.6,95,1,0)
^^1^1^2960820^^^^
"DATA",357.6,95,1,1,0)
Allows checkout time to be entered.
"DATA",357.6,95,3)
CHECKOUT TIME
"DATA",357.6,95,12)
ENCOUNTER^14^^^^^^
"DATA",357.6,95,13,0)
^357.613V^2^2
"DATA",357.6,95,13,1,0)
17;IBE(359.1,^^0
"DATA",357.6,95,13,2,0)
31;IBE(359.1,^^0
"DATA",357.6,95,18)

"DATA",357.6,97,0)
PX INPUT SKIN TESTS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
"DATA",357.6,97,1,0)
^^1^1^2950825^
"DATA",357.6,97,1,1,0)
Used for inputting skin tests performed on the patient.
"DATA",357.6,97,2)
^^^^^^^^^^^^^^^^^0
"DATA",357.6,97,3)
SKIN TESTS
"DATA",357.6,97,9)

"DATA",357.6,97,10)
Enter a Patient Skin Test.
"DATA",357.6,97,11)
D TESTSK^PXAPIIB
"DATA",357.6,97,12)
SKIN TEST^1^^^^^^
"DATA",357.6,97,14)
S Y=$$DSPLYSK^PXAPIIB(Y)
"DATA",357.6,97,17)
D SLCTSKN^IBDFN12(.X)
"DATA",357.6,97,18)
S IBDF("OTHER")="9999999.28^I '$P(^(0),U,3)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Skin Tests")
"DATA",357.6,97,19)
D ST^IBDFN14(X)
"DATA",357.6,99,0)
PX INPUT VITALS^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^H
"DATA",357.6,99,1,0)
^^1^1^2960307^^^
"DATA",357.6,99,1,1,0)
Used for inputting vitals recorded at the visit.
"DATA",357.6,99,3)
VITALS
"DATA",357.6,99,12)
VITALS^2^^^^^^
"DATA",357.6,99,13,0)
^357.613V^16^16
"DATA",357.6,99,13,1,0)
7;IBE(359.1,^^0^^^^^^^^
"DATA",357.6,99,13,2,0)
15;IBE(359.1,^^0
"DATA",357.6,99,13,3,0)
6;IBE(359.1,^^0
"DATA",357.6,99,13,4,0)
16;IBE(359.1,^^0
"DATA",357.6,99,13,5,0)
19;IBE(359.1,^^0
"DATA",357.6,99,13,6,0)
20;IBE(359.1,^^0
"DATA",357.6,99,13,7,0)
21;IBE(359.1,^^0
"DATA",357.6,99,13,8,0)
22;IBE(359.1,^^0
"DATA",357.6,99,13,9,0)
23;IBE(359.1,^^0
"DATA",357.6,99,13,10,0)
24;IBE(359.1,^^0
"DATA",357.6,99,13,11,0)
25;IBE(359.1,^^0
"DATA",357.6,99,13,12,0)
26;IBE(359.1,^^0
"DATA",357.6,99,13,13,0)
27;IBE(359.1,^^0
"DATA",357.6,99,13,14,0)
28;IBE(359.1,^^0
"DATA",357.6,99,13,15,0)
29;IBE(359.1,^^0
"DATA",357.6,99,13,16,0)
30;IBE(359.1,^^0
"DATA",357.6,99,18)
D HNDPR^IBDFDE3(.IBDSEL,.IBDF)
"DATA",357.6,100,0)
PX INPUT VISIT CLASSIFICATION^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^MP
"DATA",357.6,100,1,0)
^^3^3^2970204^^^^
"DATA",357.6,100,1,1,0)
Used for inputting visit classifications. Examples classifications are
"DATA",357.6,100,1,2,0)
service connected, related to Agent Orange exposure, ionizing
"DATA",357.6,100,1,3,0)
radiation exposure, or environmental contaminants exposure. 
"DATA",357.6,100,2)
^^^^^^^^^^^^^^^^^1
"DATA",357.6,100,3)
CLASSIFICATIONS AGENT ORANGE IONIZING RADIATION PERSIAN GULF ENVIRONMENTAL CONTAMINANTS SERVICE CONNECTED
"DATA",357.6,100,9)

"DATA",357.6,100,10)
Enter a classification.
"DATA",357.6,100,12)
ENCOUNTER
"DATA",357.6,100,13,0)
^357.613V^4^4
"DATA",357.6,100,13,1,0)
13;IBD(357.98,^^0^^^^^
"DATA",357.6,100,13,2,0)
10;IBD(357.98,^^0^^^^^
"DATA",357.6,100,13,3,0)
11;IBD(357.98,^^0^^^^^
"DATA",357.6,100,13,4,0)
12;IBD(357.98,^^0^^^^^
"DATA",357.6,100,17)
D SLCTCLS^IBDFN12(PI,.X)
"DATA",357.6,100,18)

"DATA",357.6,100,20)
1
"DATA",357.6,100,21)
S X=$$VARVAL^IBDFN9(Y)
"DATA",357.6,101,0)
DG APPOINTMENT DISPOSITION^CHECKOUT^IBDFN10^SCHEDULING^^3^4^^1^^^1^112^0^1^S
"DATA",357.6,101,1,0)
^^5^5^2970319^^^^
"DATA",357.6,101,1,1,0)
Allows placing a Noshow, Cancel, or Reschedule bubble on the encounter
"DATA",357.6,101,1,2,0)
form.  If Noshow or Cancel is marked then AICS will abort sending data
"DATA",357.6,101,1,3,0)
to PCE and Scheduling and a Warning will be logged in the AICS ERROR AND
"DATA",357.6,101,1,4,0)
WARNING file (359.3) to remind users to manually Noshow or Cancel the
"DATA",357.6,101,1,5,0)
encounter.  Marking of Reschedule has no affect.
"DATA",357.6,101,2)
CODE^1^^^^^^^^^^^^^^^0^1
"DATA",357.6,101,3)
VISIT APPOINTMENT CHECKOUT DISPOSITION ENCOUNTER
"DATA",357.6,101,15,0)
^357.615I^1^1
"DATA",357.6,101,15,1,0)
APPOINTMENT DISPOSITION^12^2
"DATA",357.6,101,16)
n^^^^o
"DATA",357.6,102,0)
PX INPUT VISIT TYPE^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
"DATA",357.6,102,1,0)
^^1^1^2951101^
"DATA",357.6,102,1,1,0)
Used for inputting the visit type that applies to the visit.
"DATA",357.6,102,2)
^^^^^^^^^^^^^^^^^1
"DATA",357.6,102,3)
VISIT TYPE OF VISIT
"DATA",357.6,102,9)
D INPUTCPT^IBDFN8(.X)
"DATA",357.6,102,10)
Enter an active Visit Type code.
"DATA",357.6,102,11)
D TESTVST^IBDFN7
"DATA",357.6,102,12)
ENCOUNTER^5
"DATA",357.6,102,14)
S Y=$$DSPLYCPT^IBDFN9(Y)
"DATA",357.6,102,17)
D SLCTVST^IBDFN12(.X)
"DATA",357.6,102,19)
D VST^IBDFN14(X)
"DATA",357.6,103,0)
GMP INPUT CLINIC COMMON PROBLEMS^^^PROBLEM LIST^^1^^^1^^^1^^^^SM
"DATA",357.6,103,1,0)
^^3^3^2970328^^^
"DATA",357.6,103,1,1,0)
Input interface allows inputting into VISTA of selections based on
"DATA",357.6,103,1,2,0)
the clinical lexicon.  Data passes to PCE with associated qualifiers
"DATA",357.6,103,1,3,0)
for adding to problem list, etc.
"DATA",357.6,103,2)
^^^^^^^^^^^^^^^^^1
"DATA",357.6,103,10)
Enter an active clincical lexicon term.
"DATA",357.6,103,12)
DIAGNOSIS/PROBLEM^3^13^14^2
"DATA",357.6,103,13,0)
^357.613V^10^10
"DATA",357.6,103,13,1,0)
2;IBD(357.98,^^1^^^^^2
"DATA",357.6,103,13,2,0)
3;IBD(357.98,^^1^^^^^2
"DATA",357.6,103,13,3,0)
10;IBD(357.98,^^1^^^^^9
"DATA",357.6,103,13,4,0)
11;IBD(357.98,^^1^^^^^10
"DATA",357.6,103,13,5,0)
12;IBD(357.98,^^1^^^^^11
"DATA",357.6,103,13,6,0)
13;IBD(357.98,^^1^^^^^12
"DATA",357.6,103,13,7,0)
9;IBD(357.98,^^1^^^^^5
"DATA",357.6,103,13,8,0)
6;IBD(357.98,^^1^^^^^6
"DATA",357.6,103,13,9,0)
7;IBD(357.98,^^1^^^^^6
"DATA",357.6,103,13,10,0)
29;IBD(357.98,^^1^^^^^9
"DATA",357.6,103,18)
S IBDF("LEXICON")=1,IBDF("OTHER")="757.01^" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Diagnosis, Problem, or Term")
"DATA",357.6,104,0)
LAB^IBDFUTL^IBDFUTL^LAB^1^2^5^^1^0
"DATA",357.6,104,1,0)
^^1^1^2970411^^^^
"DATA",357.6,104,1,1,0)
HHHH
"DATA",357.6,104,3)
LAQB
"DATA",357.6,104,6,0)
^357.66^1^1
"DATA",357.6,104,6,1,0)
IBLAB
"DATA",357.6,105,0)
LABB^PRNTSMRY^IBDFN5^HEALTH SUMMARY^^3^^^1^1^13
"DATA",357.6,105,1,0)
^^1^1^2970326^^^^
"DATA",357.6,105,1,1,0)
HHJK
"DATA",357.6,105,3)

"DATA",357.6,106,0)
SD PRIMARY CARE TEAM^PCTM^IBDFN4^SCHEDULING^1^2^1^^1^^^1
"DATA",357.6,106,2)
Primary Care Team Name^30^^^^^^^^^^^^^^^1
"DATA",357.6,106,3)
TEAM PRIMARY CARE SCHEDULING
"DATA",357.6,106,7,0)
^357.67^1^1
"DATA",357.6,106,7,1,0)
DFN
"DATA",357.6,107,0)
SD PRIMARY CARE PRACTIONER^PCPR^IBDFN4^SCHEDULING^1^2^1^^1^^^1
"DATA",357.6,107,2)
Primary Care Practioner Name^30^^^^^^^^^^^^^^^1
"DATA",357.6,107,3)
SCHEDULING PRIMARY CARE PRACTIONER
"DATA",357.6,107,7,0)
^357.67^1^1
"DATA",357.6,107,7,1,0)
DFN
"DATA",357.6,108,0)
DPT SC HIDDEN TREATMENT QUESTIONS^ELIG2^IBDFN^REGISTRATION^1^3^4^0^1^0^^1^109^1^^^^^
"DATA",357.6,108,1,0)
^^9^9^2970204^^^^
"DATA",357.6,108,1,1,0)
Prints questions concerning whether treatment was related to service.
"DATA",357.6,108,1,2,0)
Each question is printed only if it applies to the patient.  Questions are:
"DATA",357.6,108,1,3,0)
 
"DATA",357.6,108,1,4,0)
    Was treatment for an SC condition?
"DATA",357.6,108,1,5,0)
    Was treatment related to exposure to Agent Orange?
"DATA",357.6,108,1,6,0)
    Was treatment related to exposure to Ionization Radiation?
"DATA",357.6,108,1,7,0)
    Was treatment related to exposure to Environmental Contaminants?
"DATA",357.6,108,1,8,0)
 
"DATA",357.6,108,1,9,0)
Results are scannable!!!
"DATA",357.6,108,2)
CLASSIFICATION ABBREVIATION^2^^^^^^^^^^^^^^^0^0
"DATA",357.6,108,3)
PATIENT TREATMENT SCANNABLE QUESTIONS SERVICE CONNECTED EXPOSURE
"DATA",357.6,108,7,0)
^357.67^1^1
"DATA",357.6,108,7,1,0)
DFN
"DATA",357.6,108,13,0)
^357.613V^2^2
"DATA",357.6,108,13,1,0)
24;IBD(357.98,^^0
"DATA",357.6,108,13,2,0)
25;IBD(357.98,^^0
"DATA",357.6,108,15,0)
^357.615I^1^1
"DATA",357.6,108,15,1,0)
CLASSIFICATION QUESTION^65^2
"DATA",357.6,109,0)
PX INPUT SC TREATMENT QUESTIONS^ELIG1^IBDFN^REGISTRATION^1^1^^^1^^^1^^1^^S^^^1
"DATA",357.6,109,1,0)
^^1^1^2960923^
"DATA",357.6,109,1,1,0)
Used for inputting SC conditions.
"DATA",357.6,109,2)
^^^^^^^^^^^^^^^^^0
"DATA",357.6,109,3)
PATIENT TREATMENT SCANNABLE QUESTIONS SERVICE CONNECTED EXPOSURE
"DATA",357.6,109,12)
ENCOUNTER
"DATA",357.6,109,13,0)
^357.613V^2^2
"DATA",357.6,109,13,1,0)
24;IBD(357.98,^^0
"DATA",357.6,109,13,2,0)
25;IBD(357.98,^^0
"DATA",357.6,109,14)
S Y=$$DSPLYYN^IBDFN9(Y)
"DATA",357.6,109,16)
n^^^^n
"DATA",357.6,109,20)
1
"DATA",357.6,109,21)
S X=$$VARVAL^IBDFN9(Y)
"DATA",357.6,110,0)
SD OTHER INFO^EN^SDZEFOI^SCHEDULING^1^2^1^^0^0
"DATA",357.6,110,1,0)
^^1^1^2970407^^^^
"DATA",357.6,110,1,1,0)
OTHER INFO FROM FILE 44
"DATA",357.6,110,2)
OTHER INFO FROM FILE 44^60
"DATA",357.6,110,6,0)
^358.66^2^2
"DATA",357.6,110,6,1,0)
ZZDA
"DATA",357.6,110,6,2,0)
ZZQ
"DATA",357.6,110,7,0)
^358.67^3^3
"DATA",357.6,110,7,1,0)
DFN
"DATA",357.6,110,7,2,0)
IBCLINIC
"DATA",357.6,110,7,3,0)
IBAPPT
"DATA",357.6,111,0)
DPT SC HIDDEN TREATMENT QUESTIONS^ELIG1^IBDFN^REGISTRATION^1^3^4^0^1^0^^1^109^1
"DATA",357.6,111,1,0)
^^9^9^2961001^^^^
"DATA",357.6,111,1,1,0)
Prints questions concerning whether treatment was related to service.
"DATA",357.6,111,1,2,0)
Each question is printed only if it applies to the patient.  Questions are:
"DATA",357.6,111,1,3,0)
 
"DATA",357.6,111,1,4,0)
    Was treatment for an SC condition?
"DATA",357.6,111,1,5,0)
    Was treatment related to exposure to Agent Orange?
"DATA",357.6,111,1,6,0)
    Was treatment related to exposure to Ionization Radiation?
"DATA",357.6,111,1,7,0)
    Was treatment related to exposure to Environmental Contaminants?
"DATA",357.6,111,1,8,0)
 
"DATA",357.6,111,1,9,0)
Results are scannable!!!
"DATA",357.6,111,2)
CLASSIFICATION ABBREVIATION^2^^^^^^^^^^^^^^^0^0
"DATA",357.6,111,3)
PATIENT TREATMENT SCANNABLE QUESTIONS SERVICE CONNECTED EXPOSURE
"DATA",357.6,111,7,0)
^358.67^1^1
"DATA",357.6,111,7,1,0)
DFN
"DATA",357.6,111,13,0)
^358.613V^2^2
"DATA",357.6,111,13,1,0)
24;IBD(357.98,^^0
"DATA",357.6,111,13,2,0)
25;IBD(357.98,^^0
"DATA",357.6,111,15,0)
^358.615I^1^1
"DATA",357.6,111,15,1,0)
CLASSIFICATION QUESTION^65^2
"DATA",357.6,112,0)
IBD INPUT CANCEL/NOSHOW^^^AUTOMATED INFO COLLECTION SYS^^1^^^1^^^1^^^^S
"DATA",357.6,112,1,0)
^^3^3^2970319^^
"DATA",357.6,112,1,1,0)
If a cancel or Noshow bubble is input then this will cause AICS to abort
"DATA",357.6,112,1,2,0)
sending data to pce.
"DATA",357.6,112,1,3,0)

"DATA",357.6,112,12)
IBD-ABORT^1^2^3^4^5
"DATA",357.6,114,0)
TEST^^^^^4
"DATA",357.6,115,0)
TEST^^^^^4
"DATA",357.6,116,0)
LABB^PRNTSMRY^IBDFN5^HEALTH SUMMARY^^3^^^1^1^13
"DATA",357.6,117,0)
LABB^PRNTSMRY^IBDFN5^HEALTH SUMMARY^^4^^^1^1^13
"DATA",357.6,117,1,0)
^^2^2^2970326^^
"DATA",357.6,117,1,1,0)
 
"DATA",357.6,117,1,2,0)
 
"DATA",357.6,118,0)
DG 1010F PRINT^PRMT^IBDFN2^REGISTRATION^1^4^^^1^0^^1
"DATA",357.6,118,1,0)
^^3^3^2970410^^^
"DATA",357.6,118,1,1,0)
This will print a 1010F with the encounter form if a new Means Test or
"DATA",357.6,118,1,2,0)
Copay Test is due within the number of days you specified in the AICS
"DATA",357.6,118,1,3,0)
Paramenters (the default is 30).
"DATA",357.6,118,3)
MEANS TEST COPAY TEST
"DATA",357.6,118,6,0)
^357.66^^0
"DATA",357.6,118,7,0)
^357.67^2^2
"DATA",357.6,118,7,1,0)
DFN
"DATA",357.6,118,7,2,0)
IBAPPT
"DATA",357.69,77419,0)
77419^Radiation Therapy^Weekly Radiation Therapy^^9
"DATA",357.69,77420,0)
77420^Radiation Therapy^Weekly Radiation Therapy^^9
"DATA",357.69,77425,0)
77425^Radiation Therapy^Weekly Radiation Therapy^^9
"DATA",357.69,77430,0)
77430^Radiation Therapy^Weekly Radiation Therapy^^9
"DATA",357.69,77431,0)
77431^Radiation Therapy^Radiation Therapy Management^^9
"DATA",357.69,77432,0)
77432^Radiation Therapy^Stereotactic Radiation Trmt^^9
"DATA",357.69,90801,0)
90801^Psychiatry^Interview^^9
"DATA",357.69,90820,0)
90820^Psychiatry^Diagnostic Interview^^9
"DATA",357.69,90825,0)
90825^Psychiatry^Evaluation of Test/Records^^9
"DATA",357.69,90830,0)
90830^Psychiatry^Psychological Testing^^9
"DATA",357.69,90835,0)
90835^Psychiatry^Special Interview^^9
"DATA",357.69,90841,0)
90841^Psychiatry^Psychotherapy^^9
"DATA",357.69,90842,0)
90842^Psychiatry^Psychotherapy, 75-80 Min^^9
"DATA",357.69,90843,0)
90843^Psychiatry^Psychotherapy, 20-30 Min^^9
"DATA",357.69,90844,0)
90844^Psychiatry^Psychotherapy, 45-50 Min^^9
"DATA",357.69,90845,0)
90845^Psychiatry^Medical Psychoanalysis^^9
"DATA",357.69,90847,0)
90847^Psychiatry^Special Family Therapy^^9
"DATA",357.69,90849,0)
90849^Psychiatry^Special Family Therapy^^9
"DATA",357.69,90853,0)
90853^Psychiatry^Special Group Therapy^^9
"DATA",357.69,90855,0)
90855^Psychiatry^Individaul Pshycotherapy^^9
"DATA",357.69,90857,0)
90857^Psychiatry^Special Group Therapy^^9
"DATA",357.69,90862,0)
90862^Psychiatry^Medication Management^^9
"DATA",357.69,92002,0)
92002^Eye^Eye Exam, New Patient^^1
"DATA",357.69,92004,0)
92004^Eye^Eye Exam, New Patient^^1
"DATA",357.69,92012,0)
92012^Eye^Eye Exam, Established Patient^^2
"DATA",357.69,92014,0)
92014^Eye^Eye Exam, Established Patient^^2
"DATA",357.69,97700,0)
97700^Rehab^Training Checkout^^9
"DATA",357.69,97701,0)
97701^Rehab^Supplemental Checkout^^9
"DATA",357.69,99024,0)
99024^Post-op^Post-Op Follow-up Visit^^9
"DATA",357.69,99025,0)
99025^Other^Inital Surgical Evaluation^^9
"DATA",357.69,99050,0)
99050^Post-Op^Post-Op Follow-up Visit^^9
"DATA",357.69,99052,0)
99052^Other^Medical Services at Night^^9
"DATA",357.69,99054,0)
99054^Other^Medical Services, Unusual Hours^^9
"DATA",357.69,99056,0)
99056^Other^Non-Office Medical Services^^9
"DATA",357.69,99058,0)
99058^Other^Office Emergency Care^^9
"DATA",357.69,99201,0)
99201^NEW PATIENT^Brief Exam         (1-15 Min)^^1
"DATA",357.69,99202,0)
99202^NEW PATIENT^Limited Exam       (16-25 Min)^^1
"DATA",357.69,99203,0)
99203^NEW PATIENT^Intermediate Exam  (26-35 Min)^^1
"DATA",357.69,99204,0)
99204^NEW PATIENT^Extended Exam      (36-50 Min)^^1
"DATA",357.69,99205,0)
99205^NEW PATIENT^Comprehensive Exam (51-60+ Min)^^1
"DATA",357.69,99211,0)
99211^ESTABLISHED PATIENT^Brief Exam         (1-5 Min)^^2
"DATA",357.69,99212,0)
99212^ESTABLISHED PATIENT^Limited Exam       (6-10 Min)^^2
"DATA",357.69,99213,0)
99213^ESTABLISHED PATIENT^Intermediate Exam  (11-19 Min)^^2
"DATA",357.69,99214,0)
99214^ESTABLISHED PATIENT^Extended Exam      (20-30 Min)^^2
"DATA",357.69,99215,0)
99215^ESTABLISHED PATIENT^Comprehensive Exam (31-40+ Min)^^2
"DATA",357.69,99217,0)
99217^Observation Care^Discharge Day Mgmt.^^9
"DATA",357.69,99218,0)
99218^Observation Care^w/History & Exam, Low Severity^^9
"DATA",357.69,99219,0)
99219^Observation Care^w/History and Exam, Moderate Severity^^9
"DATA",357.69,99220,0)
99220^Observation Care^w/History and Exam, High Severity^^9
"DATA",357.69,99221,0)
99221^Hospital Admission^Brief Admission Care   (1-30 Min)^^9
"DATA",357.69,99222,0)
99222^Hospital Admission^Intermediate Admit Care   (31-50 Min)^^9
"DATA",357.69,99223,0)
99223^Hospital Admission^Comprehensive Admit Care  (51-70 Min)^^9
"DATA",357.69,99231,0)
99231^Subsequent Hospital Care^Brief Hosp. Care      (1-15 Min)^^9
"DATA",357.69,99232,0)
99232^Subsequent Hospital Care^Intermediate Hosp. Care  (16-25 Min)^^9
"DATA",357.69,99233,0)
99233^Subsequent Hospital Care^Comprehensive Hosp. Care  (26-35 Min)^^9
"DATA",357.69,99238,0)
99238^Hospital Discharge^Discharge Day Mgmt.^^9
"DATA",357.69,99241,0)
99241^CONSULT^Brief Exam         (1-20 Min)^^3
"DATA",357.69,99242,0)
99242^CONSULT^Limited Exam       (21-35 Min)^^3
"DATA",357.69,99243,0)
99243^CONSULT^Intermediate Exam  (36-50 Min)^^3
"DATA",357.69,99244,0)
99244^CONSULT^Extended Exam      (51-60 Min)^^3
"DATA",357.69,99245,0)
99245^CONSULT^Comprehensive Exam (71-80+ Min)^^3
"DATA",357.69,99251,0)
99251^Initial Inpatient Consult^Brief Exam    (1-20 Min)^^3
"DATA",357.69,99252,0)
99252^Initial Inpatient Consult^Limited Exam  (21-40 Min)^^3
"DATA",357.69,99253,0)
99253^Initial Inpatient Consult^Intermediate Exam (41-55 Min)^^3
"DATA",357.69,99254,0)
99254^Initial Inpatient Consult^Extended Exam (56-80 Min)^^3
"DATA",357.69,99255,0)
99255^Initial Inpatient Consult^Comprehensive Exam (81-110 Min)^^3
"DATA",357.69,99261,0)
99261^Follow-up Inpatient Consult^Brief Consult   (1-10 Min)^^3
"DATA",357.69,99262,0)
99262^Follow-up Inpatient Consult^Intermediate Consult   (11-20 Min)^^3
"DATA",357.69,99263,0)
99263^Follow-up Inpatient Consult^Comprehensive Consult   (21-30 Min)^^3
"DATA",357.69,99271,0)
99271^Confirmatory Consultation^Minor Problems^^3
"DATA",357.69,99272,0)
99272^Confirmatory Consultation^Low Severity Problem^^3
"DATA",357.69,99273,0)
99273^Confirmatory Consultation^Moderate Severity Problem^^3
"DATA",357.69,99274,0)
99274^Confirmatory Consultation^Moderate to High Severity Problem^^3
"DATA",357.69,99275,0)
99275^Confirmatoy Consultation^High Severity Problem^^3
"DATA",357.69,99281,0)
99281^Emergency Room Visit^Brief Exam^^9
"DATA",357.69,99282,0)
99282^Emergency Room Visit^Limited Exam^^9
"DATA",357.69,99283,0)
99283^Emergency Room Visit^Intermediate Exam^^9
"DATA",357.69,99284,0)
99284^Emergency Room Visit^Extended Exam^^9
"DATA",357.69,99285,0)
99285^Emergency Room Visit^Comprehensive Exam^^9
"DATA",357.69,99288,0)
99288^Emergency Room Visit^Advanced Life Support^^9
"DATA",357.69,99291,0)
99291^Critical Care^First Hour^^9
"DATA",357.69,99292,0)
99292^Critical Care^Each Additional 30 Min.^^9
"DATA",357.69,99295,0)
99295^Neonatal Critical Care^Admission Care^^9
"DATA",357.69,99296,0)
99296^NeoNatal Critical Care^Unstable Daily Care^^9
"DATA",357.69,99297,0)
99297^Neonatal Critical Care^Stable Daily Care^^9
"DATA",357.69,99301,0)
99301^Nursing Home Assessment^Brief Exam    (1-30 Min)^^9
"DATA",357.69,99302,0)
99302^Nursing Home Assessment^Intermediate Exam  (31-40 Min)^^9
"DATA",357.69,99303,0)
99303^Nursing Home Assessment^Comprehensive Exam  (41-50 Min)^^9
"DATA",357.69,99311,0)
99311^Follow-up Nursing Home Care^Brief Exam    (1-15 Min)^^9
"DATA",357.69,99312,0)
99312^Follow-up Nursing Home Care^Intermediate Exam   (16-25 Min)^^9
"DATA",357.69,99313,0)
99313^Follow-up Nursing Home Care^Comprehensive Exam  (26-35 Min)^^9
"DATA",357.69,99321,0)
99321^Domiciliary Care, New Patient^Brief Exam^^1
"DATA",357.69,99322,0)
99322^Domiciliary Care, New Patient^Intermediate Exam^^1
"DATA",357.69,99323,0)
99323^Domiciliary Care, New Patient^Comprehensive Exam^^1
"DATA",357.69,99331,0)
99331^Dom Care, Established Patient^Brief Exam^^2
"DATA",357.69,99332,0)
99332^Dom Care, Established Patient^Intermediate Exam^^2
"DATA",357.69,99333,0)
99333^Dom Care, Established Patient^Comprehensive Exam^^2
"DATA",357.69,99341,0)
99341^Home Visit, New Patient^Low Severity Problem^^1
"DATA",357.69,99342,0)
99342^Home Visit, New Patient^Moderate Severity Problem^^1
"DATA",357.69,99343,0)
99343^Home Visit, New Patient^High Severity Problem^^1
"DATA",357.69,99351,0)
99351^Home Visit, Estab. Patient^Stable or Recovering^^2
"DATA",357.69,99352,0)
99352^Home Visit, Estab. Patient^Minor Complications^^2
"DATA",357.69,99353,0)
99353^Home Visit, Estab. Patient^Significant Complication or New Problem^^2
"DATA",357.69,99354,0)
99354^Prolonged Office Visit^First Hour^^9
"DATA",357.69,99355,0)
99355^Prolonged Office Visit^Additional 30 Min^^9
"DATA",357.69,99356,0)
99356^Prolonged Inpatient Visit^First Hour^^9
"DATA",357.69,99357,0)
99357^Prolonged Inpatient Visit^Additional 30 Min^^9
"DATA",357.69,99358,0)
99358^Prolonged Service w/o Contact^First Hour^^9
"DATA",357.69,99359,0)
99359^Prolonged Service w/o Contact^Additional 30 Min^^9
"DATA",357.69,99360,0)
99360^Physician Standby Services^Each 30 Min.^^9
"DATA",357.69,99361,0)
99361^Case Management Conferences^30 Minutes^^9
"DATA",357.69,99362,0)
99362^Case Management Conferences^60 minutes^^9
"DATA",357.69,99371,0)
99371^Telephone Consult^Brief Call^^3
"DATA",357.69,99372,0)
99372^Telephone Consult^Intermediate Call^^3
"DATA",357.69,99373,0)
99373^Telephone Consult^Complex or lenghty Call^^3
"DATA",357.69,99375,0)
99375^Care Plan Oversight^30-60 minutes^^9
"DATA",357.69,99376,0)
99376^Care Plan OVersight^Over 60 minutes^^9
"DATA",357.69,99381,0)
99381^Preventive Care, New Patient^Infant Under 1 year^^1
"DATA",357.69,99382,0)
99382^Preventive Care, New Patient^Age 1-4^^1
"DATA",357.69,99383,0)
99383^Preventive Care, New Patient^Age 5-11^^1
"DATA",357.69,99384,0)
99384^Preventive Care, New Patient^Age 12-17^^1
"DATA",357.69,99385,0)
99385^Preventive Care, New Patient^Age 18-39^^1
"DATA",357.69,99386,0)
99386^Preventive Care, New Patient^Age 40-64^^1
"DATA",357.69,99387,0)
99387^Preventive Care, New Patient^Age 65 and over^^1
"DATA",357.69,99391,0)
99391^Preventive Visit, Est. Patient^Infant Under 1 year^^2
"DATA",357.69,99392,0)
99392^Preventive Visit, Est. Patient^Age 1-4^^2
"DATA",357.69,99393,0)
99393^Preventive Visit, Est. Patient^Age 5-11^^2
"DATA",357.69,99394,0)
99394^Preventive Visit, Est. Patient^Age 12-17^^2
"DATA",357.69,99395,0)
99395^Preventive Visit, Est. Patient^Age 18-39^^2
"DATA",357.69,99396,0)
99396^Preventive Visit, Est. Patient^Age 40-64^^2
"DATA",357.69,99397,0)
99397^Preventive Visit, Est. Patient^Age 65 and over^^2
"DATA",357.69,99401,0)
99401^Individual Preventive Counsel^Brief  (15 min)^^9
"DATA",357.69,99402,0)
99402^Individual Preventive Counsel^Intermediate  (30 Min)^^9
"DATA",357.69,99403,0)
99403^Individual Preventive Counsel^Extended (45 Min)^^9
"DATA",357.69,99404,0)
99404^Individual Preventive Counsel^Comprehensive (60 Min)^^9
"DATA",357.69,99411,0)
99411^Group Preventive Counseling^Brief   (30 Min)^^9
"DATA",357.69,99412,0)
99412^Group Preventive Counseling^Intermediate  (60 Min)^^9
"DATA",357.69,99420,0)
99420^Health Risk Assessment^Health Risk Assessment^^9
"DATA",357.69,99429,0)
99429^Unlisted Services^Preventive Medicine^^9
"DATA",357.69,99431,0)
99431^Newborn Care^Initial Care^^9
"DATA",357.69,99432,0)
99432^Newborn Care^Office Visit^^9
"DATA",357.69,99433,0)
99433^Newborn Care^Hospital Care^^9
"DATA",357.69,99440,0)
99440^Newborn Care^Resuscitation^^9
"DATA",357.69,99450,0)
99450^Life/Health Insurance Exam^Life/Health Insurance Exam^^9
"DATA",357.69,99455,0)
99455^Disability Exam^By treating physician^^9
"DATA",357.69,99456,0)
99456^Disability Exam^By other than treating physician^^9
"DATA",357.69,99499,0)
99499^Unlisted Services^Evaluation and Management^^9
"DATA",357.91,1,0)
( )^( )^1^
"DATA",357.91,2,0)
_^_^1^
"DATA",357.91,3,0)
SPACE^ ^1^
"DATA",357.91,4,0)
BLANK^^1^
"DATA",357.91,5,0)
TWO SPACES^  ^1^
"DATA",357.91,6,0)
__ yes^__ yes^1^
"DATA",357.91,7,0)
__ no^__ no^1^
"DATA",357.91,8,0)
THREE SPACES^   ^1^
"DATA",357.91,9,0)
__^__^1^
"DATA",357.91,10,0)
(P) (S)^(P) (S)^1^
"DATA",357.91,11,0)
(Y)^(Y)^1^
"DATA",357.91,12,0)
(A) (I) (H)^(A) (I) (H)^1^
"DATA",357.91,13,0)
5 SPACES^     ^1^
"DATA",357.91,14,0)
(A) (I)^(A) (I)^1
"DATA",357.91,15,0)
BUBBLE (use for scanning)^[ ]^1^1
"DATA",357.91,16,0)
DATE^             ^0
"DATA",357.92,1,0)
FOR EVERY APPOINTMENT
"DATA",357.92,2,0)
ONLY FOR EARLIEST APPOINTMENT
"DATA",357.92,3,0)
ONLY IF MULTIPLE APPOINTMENTS
"DATA",357.98,1,0)
NONE APPLICABLE^ 
"DATA",357.98,2,0)
PRIMARY^P^P
"DATA",357.98,3,0)
SECONDARY^S^S
"DATA",357.98,6,0)
ACTIVE^A^A
"DATA",357.98,7,0)
INACTIVE^I^I
"DATA",357.98,8,0)
HISTORICAL^H
"DATA",357.98,9,0)
ADD TO PROBLEM LIST^1^ADD
"DATA",357.98,10,0)
SERVICE CONNECTED^1^SC
"DATA",357.98,11,0)
AGENT ORANGE RELATED^1^AO
"DATA",357.98,12,0)
IONIZING RADIATION RELATED^1^IR
"DATA",357.98,13,0)
ENVIRONMENTAL CONTAMINANTS RELATED^1^EC
"DATA",357.98,14,0)
ABNORMAL RESULT^A^ABNORM
"DATA",357.98,15,0)
NORMAL RESULT^N^NORM
"DATA",357.98,16,0)
POOR UNDERSTANDING^1^POOR
"DATA",357.98,17,0)
FAIR UNDERSTANDING^2^FAIR
"DATA",357.98,18,0)
GOOD UNDERSTANDING^3^GOOD
"DATA",357.98,19,0)
UNDERSTANDING NOT ASSESSED^4^N/A
"DATA",357.98,20,0)
PATIENT ED REFUSED^5^REFUSED
"DATA",357.98,21,0)
MINIMAL SEVERITY^M^MINIMAL
"DATA",357.98,22,0)
MODERATE SEVERITY^MO^MODERATE
"DATA",357.98,23,0)
HEAVY SEVERITY^H^SEVERE
"DATA",357.98,24,0)
YES^1^YES
"DATA",357.98,25,0)
NO^0^NO
"DATA",357.98,26,0)
CONTRAINDICATED^1^CONTRA.
"DATA",357.98,27,0)
GIVEN^0^GIV
"DATA",357.98,28,0)
REFUSED^1^REFUSED
"DATA",357.98,29,0)
NON-SERVICE CONNECTED^0^NSC
"DATA",358.1,1,0)
EYE ART I V3.0^^^0^0^64^31^^^2^^^Picture of eyes for Opthamology Clinic^1
"DATA",358.1,2,0)
EYE ART II V3.0^^^0^0^64^31^^^2^^^Picture of eyes for Opthamology Clinic^1
"DATA",358.1,3,0)
HIDDEN CLASSIFICATIONS (V3.0)^^^0^0^90^9^^^1^CLASSIFICATION QUESTIONS^CR^Classifications for visit - scannable^1
"DATA",358.1,4,0)
PATIENT IMMUNIZATIONS (V3.0)^^^241^0^55^11^^^1^IMMUNIZATIONS^CR^Patient immunizations^1
"DATA",358.1,5,0)
PRACTITIONER(V3.0)^^^999^0^38^12^^^1^PRACTITIONER^RC^Clinics practitioner^1
"DATA",358.2,1,0)
CLASSIFICATION QUESTIONS^3^^^^^2^0^^^1^0^^1^0
"DATA",358.2,1,2,0)
^358.22I^4^3
"DATA",358.2,1,2,2,0)
2^YES^^2^^1^^1^1^0
"DATA",358.2,1,2,3,0)
3^NO^^2^^1^^1^2^0
"DATA",358.2,1,2,4,0)
1^ ^65^1^2
"DATA",358.2,2,0)
IMMUNIZATIONS^4^^^^^4^1^CS^^3^1^^0^^0
"DATA",358.2,2,2,0)
^358.22I^4^4
"DATA",358.2,2,2,1,0)
2^GIV^22^2^2^1^1^1^4^0
"DATA",358.2,2,2,2,0)
1^^22^1^2^^1
"DATA",358.2,2,2,3,0)
3^CONTRA.^^2^^1^^1^3^0
"DATA",358.2,2,2,4,0)
4^REFUSED^^2^^1^^1^5^0
"DATA",358.2,3,0)
PRACTITIONER^5^^^^^2^0^RC^^5^0^^1^0^0
"DATA",358.2,3,1,0)
^358.21I^1^1
"DATA",358.2,3,1,1,0)
1^^1
"DATA",358.2,3,2,0)
^358.22I^3^3
"DATA",358.2,3,2,1,0)
3^PRACTITIONER^20^1^2
"DATA",358.2,3,2,2,0)
1^P^^2^^1^^1^6^2
"DATA",358.2,3,2,3,0)
2^S^^2^^1^^1^7^0
"DATA",358.6,1,0)
DPT SC HIDDEN TREATMENT QUESTIONS^ELIG2^IBDFN^REGISTRATION^1^3^4^0^1^0^^1^2^1^^^^^
"DATA",358.6,1,1,0)
^^9^9^2970204^^^^
"DATA",358.6,1,1,1,0)
Prints questions concerning whether treatment was related to service.
"DATA",358.6,1,1,2,0)
Each question is printed only if it applies to the patient.  Questions are:
"DATA",358.6,1,1,3,0)
 
"DATA",358.6,1,1,4,0)
    Was treatment for an SC condition?
"DATA",358.6,1,1,5,0)
    Was treatment related to exposure to Agent Orange?
"DATA",358.6,1,1,6,0)
    Was treatment related to exposure to Ionization Radiation?
"DATA",358.6,1,1,7,0)
    Was treatment related to exposure to Environmental Contaminants?
"DATA",358.6,1,1,8,0)
 
"DATA",358.6,1,1,9,0)
Results are scannable!!!
"DATA",358.6,1,2)
CLASSIFICATION ABBREVIATION^2^^^^^^^^^^^^^^^0^0
"DATA",358.6,1,3)
PATIENT TREATMENT SCANNABLE QUESTIONS SERVICE CONNECTED EXPOSURE
"DATA",358.6,1,7,0)
^357.67^1^1
"DATA",358.6,1,7,1,0)
DFN
"DATA",358.6,1,13,0)
^357.613V^2^2
"DATA",358.6,1,13,1,0)
1;IBD(358.98,^^0
"DATA",358.6,1,13,2,0)
2;IBD(358.98,^^0
"DATA",358.6,1,15,0)
^357.615I^1^1
"DATA",358.6,1,15,1,0)
CLASSIFICATION QUESTION^65^2
"DATA",358.6,2,0)
PX INPUT SC TREATMENT QUESTIONS^ELIG1^IBDFN^REGISTRATION^1^1^^^1^^^1^^1^^S^^^1
"DATA",358.6,2,1,0)
^^1^1^2960923^
"DATA",358.6,2,1,1,0)
Used for inputting SC conditions.
"DATA",358.6,2,2)
^^^^^^^^^^^^^^^^^0
"DATA",358.6,2,3)
PATIENT TREATMENT SCANNABLE QUESTIONS SERVICE CONNECTED EXPOSURE
"DATA",358.6,2,12)
ENCOUNTER
"DATA",358.6,2,13,0)
^357.613V^2^2
"DATA",358.6,2,13,1,0)
1;IBD(358.98,^^0
"DATA",358.6,2,13,2,0)
2;IBD(358.98,^^0
"DATA",358.6,2,14)
S Y=$$DSPLYYN^IBDFN9(Y)
"DATA",358.6,2,16)
n^^^^n
"DATA",358.6,2,20)
1
"DATA",358.6,2,21)
S X=$$VARVAL^IBDFN9(Y)
"DATA",358.6,3,0)
PX SELECT IMMUNIZATIONS^IMM^IBDFN10^PATIENT CARE ENCOUNTER^^3^2^^1^^^1^4
"DATA",358.6,3,1,0)
^^1^1^2961024^^^
"DATA",358.6,3,1,1,0)
Allows immunizations form the IMMUNIZATION file to be selected.
"DATA",358.6,3,2)
Internal Number^9^^^^^^^^^^^^^^^0^0
"DATA",358.6,3,3)
IMMUNIZATIONS SHOTS IMMUNIZE
"DATA",358.6,3,11)
D TESTIMM^PXAPIIB
"DATA",358.6,3,15,0)
^357.615I^3^3
"DATA",358.6,3,15,1,0)
Immunization Name^45^2^^IMMUNIZATION
"DATA",358.6,3,15,2,0)
Short Name^10^3
"DATA",358.6,3,15,3,0)
Code^10^4
"DATA",358.6,4,0)
PX INPUT IMMUNIZATION^^^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^^^SMP
"DATA",358.6,4,1,0)
^^1^1^2961015^^^^
"DATA",358.6,4,1,1,0)
Used for inputting immunizations administered to the patient.
"DATA",358.6,4,2)
^^^^^^^^^^^^^^^^^0
"DATA",358.6,4,3)
IMMUNIZATIONS SHOTS
"DATA",358.6,4,10)
Enter a Patient Immunization.
"DATA",358.6,4,11)
D TESTIMM^PXAPIIB
"DATA",358.6,4,12)
IMMUNIZATION^1^7^^^^^
"DATA",358.6,4,13,0)
^357.613V^3^3
"DATA",358.6,4,13,1,0)
3;IBD(358.98,^^1^IMMUNIZATION^1^^^5
"DATA",358.6,4,13,2,0)
4;IBD(358.98,^^1^IMMUNIZATION^1
"DATA",358.6,4,13,3,0)
5;IBD(358.98,^^1^IMMUNIZATION^1^^^8
"DATA",358.6,4,14)
S Y=$$DSPLYIM^PXAPIIB(Y)
"DATA",358.6,4,17)
D SLCTIMM^IBDFN12(.X)
"DATA",358.6,4,18)
S IBDF("OTHER")="9999999.14^I '$P(^(0),U,7)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Immunizations")
"DATA",358.6,4,19)
D IMMUN^IBDFN14(X)
"DATA",358.6,5,0)
SD SELECT PROVIDER^PRVDR^IBDFN4^SCHEDULING^1^3^4^0^1^0^^1^6^1^^
"DATA",358.6,5,1,0)
^^2^2^2951020^
"DATA",358.6,5,1,1,0)
Used to indicate the provider.  The list of providers is obtained from
"DATA",358.6,5,1,2,0)
scheduling.  
"DATA",358.6,5,2)
POINTER TO NEW PERSON^10^^^^^^^^^^^^^^^0^0
"DATA",358.6,5,3)
PROVIDER DOCTOR NURSE
"DATA",358.6,5,7,0)
^357.67^1^1
"DATA",358.6,5,7,1,0)
IBCLINIC
"DATA",358.6,5,13,0)
^357.613V^2^2
"DATA",358.6,5,13,1,0)
6;IBD(358.98,^^0^^^^^^
"DATA",358.6,5,13,2,0)
7;IBD(358.98,^^0^^^^^^
"DATA",358.6,5,15,0)
^357.615I^1^1
"DATA",358.6,5,15,1,0)
PROVIDER^30^2^^PROVIDER
"DATA",358.6,5,16)
n^^^^n
"DATA",358.6,6,0)
INPUT PROVIDER^PRVDR^IBDFN4^PATIENT CARE ENCOUNTER^^1^^^1^^^1^^1^^SP^^^1
"DATA",358.6,6,1,0)
^^1^1^2960129^^^^
"DATA",358.6,6,1,1,0)
Used for inputting the provider of the service.
"DATA",358.6,6,2)
^^^^^^^^^^^^^^^^^0
"DATA",358.6,6,3)
PROVIDER DOCTOR NURSE
"DATA",358.6,6,12)
ENCOUNTER^4^^^15^^^
"DATA",358.6,6,13,0)
^357.613V^2^2
"DATA",358.6,6,13,1,0)
6;IBD(358.98,^^0^^^^^^
"DATA",358.6,6,13,2,0)
7;IBD(358.98,^^0^^^^^^
"DATA",358.6,6,14)
S Y=$$DSPLYPRV^IBDFN9(Y)
"DATA",358.6,6,16)
n^^^^n
"DATA",358.6,6,18)
S IBDF("OTHER")="200^I $$SCREEN^IBDFDE10(+Y)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Provider")
"DATA",358.8,1,0)
EYEBALLS^1^0^0^63^31
"DATA",358.8,1,1,0)
^^31^31^2970316^^^^
"DATA",358.8,1,1,1,0)
         @ @ @ @ @ @                       @ @ @ @ @ @ 
"DATA",358.8,1,1,2,0)
     @    (       )    @               @    (       )    @
"DATA",358.8,1,1,3,0)
   @     (         )     @           @     (         )     @
"DATA",358.8,1,1,4,0)
 <      (           )      >       <      (           )      >
"DATA",358.8,1,1,5,0)
   @     (         )     @           @     (         )     @
"DATA",358.8,1,1,6,0)
     @    (       )    @               @    (       )    @
"DATA",358.8,1,1,7,0)
         @ @ @ @ @ @                       @ @ @ @ @ @
"DATA",358.8,1,1,8,0)
 
"DATA",358.8,1,1,9,0)
 
"DATA",358.8,1,1,10,0)
 
"DATA",358.8,1,1,11,0)
 
"DATA",358.8,1,1,12,0)
 
"DATA",358.8,1,1,13,0)
            @ @ @           @ @ @
"DATA",358.8,1,1,14,0)
          @       @       @       @
"DATA",358.8,1,1,15,0)
         @         @     @         @
"DATA",358.8,1,1,16,0)
          @       @       @       @
"DATA",358.8,1,1,17,0)
            @ @ @           @ @ @ 
"DATA",358.8,1,1,18,0)
 
"DATA",358.8,1,1,19,0)
 
"DATA",358.8,1,1,20,0)
 
"DATA",358.8,1,1,21,0)
 
"DATA",358.8,1,1,22,0)
 
"DATA",358.8,1,1,23,0)
           @ @ @ @              @ @ @ @
"DATA",358.8,1,1,24,0)
         @         @          @         @
"DATA",358.8,1,1,25,0)
       @             @      @             @
"DATA",358.8,1,1,26,0)
      @               @    @               @
"DATA",358.8,1,1,27,0)
      @               @    @               @
"DATA",358.8,1,1,28,0)
       @             @      @             @
"DATA",358.8,1,1,29,0)
         @         @          @         @
"DATA",358.8,1,1,30,0)
           @ @ @ @              @ @ @ @
"DATA",358.8,2,0)
EYEBALLS^2^0^0^63^31
"DATA",358.8,2,1,0)
^^31^31^2970411^^^^
"DATA",358.8,2,1,1,0)
         - - - - - -                       - - - - - - 
"DATA",358.8,2,1,2,0)
     -    (       )    -               -    (       )    -
"DATA",358.8,2,1,3,0)
   -     (         )     -           -     (         )     -
"DATA",358.8,2,1,4,0)
 <      (           )      >       <      (           )      >
"DATA",358.8,2,1,5,0)
   -     (         )     -           -     (         )     -
"DATA",358.8,2,1,6,0)
     -    (       )    -               -    (       )    -
"DATA",358.8,2,1,7,0)
         - - - - - -                       - - - - - -
"DATA",358.8,2,1,8,0)
 
"DATA",358.8,2,1,9,0)
 
"DATA",358.8,2,1,10,0)
 
"DATA",358.8,2,1,11,0)
 
"DATA",358.8,2,1,12,0)
 
"DATA",358.8,2,1,13,0)
            - - -           - - -
"DATA",358.8,2,1,14,0)
          -       -       -       -
"DATA",358.8,2,1,15,0)
         -         -     -         -
"DATA",358.8,2,1,16,0)
          -       -       -       -
"DATA",358.8,2,1,17,0)
            - - -           - - - 
"DATA",358.8,2,1,18,0)
 
"DATA",358.8,2,1,19,0)
 
"DATA",358.8,2,1,20,0)
 
"DATA",358.8,2,1,21,0)
 
"DATA",358.8,2,1,22,0)
 
"DATA",358.8,2,1,23,0)
           - - - -              - - - -
"DATA",358.8,2,1,24,0)
         -         -          -         -
"DATA",358.8,2,1,25,0)
       -             -      -             -
"DATA",358.8,2,1,26,0)
      -               -    -               -
"DATA",358.8,2,1,27,0)
      -               -    -               -
"DATA",358.8,2,1,28,0)
       -             -      -             -
"DATA",358.8,2,1,29,0)
        -           -         -         -
"DATA",358.8,2,1,30,0)
           - - - -              - - - -
"DATA",358.91,1,0)
BUBBLE (use for scanning)^[ ]^1^1
"DATA",358.98,1,0)
YES^1^YES
"DATA",358.98,2,0)
NO^0^NO
"DATA",358.98,3,0)
CONTRAINDICATED^1^CONTRA.
"DATA",358.98,4,0)
GIVEN^0^GIV
"DATA",358.98,5,0)
REFUSED^1^REFUSED
"DATA",358.98,6,0)
PRIMARY^P^P
"DATA",358.98,7,0)
SECONDARY^S^S
"DATA",359.1,1,0)
ICD-9 DIAGNOSIS CODE^7^^^____.__^7^10^^^^^ICD-9
"DATA",359.1,1,1)
D INPUTICD^IBDFN8(.X)
"DATA",359.1,1,10)
a^XF^^####.##
"DATA",359.1,2,0)
CPT-4 PROCEDURE CODE^5^^^^5^10^^^^^CPT-4
"DATA",359.1,2,1)
D INPUTCPT^IBDFN8(.X)
"DATA",359.1,2,10)
a^X####^
"DATA",359.1,6,0)
BODY WEIGHT^5^^^___._^5^10^^^Weight:^lbs^WT^LB
"DATA",359.1,6,10)
f^^^###.#
"DATA",359.1,7,0)
BODY TEMPERATURE^5^^^___._^5^10^^^Temperature:^Fahr^TMP^F
"DATA",359.1,7,10)
f^^^###.#
"DATA",359.1,15,0)
BLOOD PRESSURE^7^^^___/___^7^10^^^Blood Press.:^systolic/diastolic^BP
"DATA",359.1,15,10)
a^###P##^^###/###
"DATA",359.1,16,0)
AUDIOMETRY - LEFT EAR^31^^^___/___/___/___/___/___/___/___^31^10^^^^lft ear^AUD
"DATA",359.1,16,10)
a^^^###/###/###/###/###/###/###/###
"DATA",359.1,17,0)
CHECKOUT DATE@TIME^11^^^____9_@____^11^10^^^Checkout:^mmddyy@hhmm^CODT
"DATA",359.1,17,1)
D CKOUT^IBDFN13(.X)
"DATA",359.1,17,10)
a
"DATA",359.1,18,0)
SHORT NARRATIVE (30 CHAR)^^^^_______________________________^30^10^^^^^NARR
"DATA",359.1,18,10)
a^^^################################
"DATA",359.1,19,0)
ABDOMINAL GIRTH^^^^___^3^10^^^Abdominal Girth:^in^AG^IN
"DATA",359.1,19,10)
i^^^###
"DATA",359.1,20,0)
AUDIOMETRY - RIGHT EAR^^^^___/___/___/___/___/___/___/___^31^10^^^^rt ear^AUD
"DATA",359.1,20,10)
a^^^###/###/###/###/###/###/###/###
"DATA",359.1,21,0)
FUNDAL HEIGHT^2^^^__^2^10^^^Fundal Ht:^in^FH^IN
"DATA",359.1,21,10)
a^^^##
"DATA",359.1,22,0)
FETAL HEART TONES^^^^___^3^10^^^Fetal Heart Tone:^per sec^FT
"DATA",359.1,22,10)
a^^^###
"DATA",359.1,23,0)
HEAD CIRCUMFERENCE^^^^__._^4^10^^^Head Circumference:^in^HC^IN
"DATA",359.1,23,10)
f^^^##.#
"DATA",359.1,24,0)
HEARING^^^^_^1^10^^^Hearing:^N=normal,A=abnormal^HE^
"DATA",359.1,24,10)
a^^^#
"DATA",359.1,25,0)
BODY HEIGHT^4^^^__._^4^10^^^Height:^in^HT^IN
"DATA",359.1,25,10)
f^^^##.#
"DATA",359.1,26,0)
PULSE^3^^^___^3^10^^^Pulse^per sec^PU
"DATA",359.1,26,10)
i^^^###
"DATA",359.1,27,0)
RESPIRATION^^^^__^2^10^^^Respiration:^per sec^RS
"DATA",359.1,27,10)
i^^^##
"DATA",359.1,28,0)
TONOMETRY^^^^__/__^5^10^^^Tonometry:^lft eye/rt eye^TON
"DATA",359.1,28,10)
a^^^##/##
"DATA",359.1,29,0)
VISION CORRECTED^^^^__/__^5^10^^^Vision Corrected:^lft eye/rt eye^VC
"DATA",359.1,29,10)
a^^^##/##
"DATA",359.1,30,0)
VISION UNCORRECTED^^^^__/__^5^10^^^Vison Uncorrected:^lft eye/rt eye^VU
"DATA",359.1,30,10)
a^^^##/##
"DATA",359.1,31,0)
CHECKOUT TIME - DATE ASSUMED^4^^^____^4^10^^^Checkout:^hhmm^COTIME
"DATA",359.1,31,1)
D CKOUTTM^IBDFN13(.X,.IBFORMID)
"DATA",359.1,31,10)
t^^^
"FIA",357)
ENCOUNTER FORM
"FIA",357,0)
^IBE(357,
"FIA",357,0,0)
357I
"FIA",357,0,1)
y^y^f^^^^n
"FIA",357,0,10)

"FIA",357,0,11)

"FIA",357,0,"RLRO")

"FIA",357,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357,357)
0
"FIA",357,357.02)
0
"FIA",357.08)
AICS PURGE LOG
"FIA",357.08,0)
^IBD(357.08,
"FIA",357.08,0,0)
357.08D
"FIA",357.08,0,1)
y^y^f^^^^n
"FIA",357.08,0,10)

"FIA",357.08,0,11)

"FIA",357.08,0,"RLRO")

"FIA",357.08,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.08,357.08)
0
"FIA",357.09)
ENCOUNTER FORM PARAMETERS
"FIA",357.09,0)
^IBD(357.09,
"FIA",357.09,0,0)
357.09
"FIA",357.09,0,1)
y^y^f^^^^n
"FIA",357.09,0,10)

"FIA",357.09,0,11)

"FIA",357.09,0,"RLRO")

"FIA",357.09,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.09,357.09)
0
"FIA",357.09,357.091)
0
"FIA",357.1)
ENCOUNTER FORM BLOCK
"FIA",357.1,0)
^IBE(357.1,
"FIA",357.1,0,0)
357.1I
"FIA",357.1,0,1)
y^y^f^^n^^n^o^n
"FIA",357.1,0,10)

"FIA",357.1,0,11)

"FIA",357.1,0,"RLRO")

"FIA",357.1,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.1,357.1)
0
"FIA",357.1,357.11)
0
"FIA",357.1,357.12)
0
"FIA",357.1,357.13)
0
"FIA",357.1,357.14)
0
"FIA",357.2)
SELECTION LIST
"FIA",357.2,0)
^IBE(357.2,
"FIA",357.2,0,0)
357.2I
"FIA",357.2,0,1)
y^y^f^^^^n
"FIA",357.2,0,10)

"FIA",357.2,0,11)

"FIA",357.2,0,"RLRO")

"FIA",357.2,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.2,357.2)
0
"FIA",357.2,357.21)
0
"FIA",357.2,357.22)
0
"FIA",357.3)
SELECTION
"FIA",357.3,0)
^IBE(357.3,
"FIA",357.3,0,0)
357.3I
"FIA",357.3,0,1)
y^y^f^^^^n
"FIA",357.3,0,10)

"FIA",357.3,0,11)

"FIA",357.3,0,"RLRO")

"FIA",357.3,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.3,357.3)
0
"FIA",357.3,357.31)
0
"FIA",357.4)
SELECTION GROUP
"FIA",357.4,0)
^IBE(357.4,
"FIA",357.4,0,0)
357.4I
"FIA",357.4,0,1)
y^y^f^^^^n
"FIA",357.4,0,10)

"FIA",357.4,0,11)

"FIA",357.4,0,"RLRO")

"FIA",357.4,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.4,357.4)
0
"FIA",357.5)
DATA FIELD
"FIA",357.5,0)
^IBE(357.5,
"FIA",357.5,0,0)
357.5I
"FIA",357.5,0,1)
y^y^f^^^^n
"FIA",357.5,0,10)

"FIA",357.5,0,11)

"FIA",357.5,0,"RLRO")

"FIA",357.5,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.5,357.5)
0
"FIA",357.5,357.52)
0
"FIA",357.6)
PACKAGE INTERFACE
"FIA",357.6,0)
^IBE(357.6,
"FIA",357.6,0,0)
357.6I
"FIA",357.6,0,1)
y^y^f^^y^^y^o^n
"FIA",357.6,0,10)

"FIA",357.6,0,11)

"FIA",357.6,0,"RLRO")

"FIA",357.6,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.6,357.6)
0
"FIA",357.6,357.61)
0
"FIA",357.6,357.613)
0
"FIA",357.6,357.615)
0
"FIA",357.6,357.66)
0
"FIA",357.6,357.67)
0
"FIA",357.69)
TYPE OF VISIT
"FIA",357.69,0)
^IBE(357.69,
"FIA",357.69,0,0)
357.69IP
"FIA",357.69,0,1)
y^y^f^^n^^y^m^n
"FIA",357.69,0,10)

"FIA",357.69,0,11)

"FIA",357.69,0,"RLRO")

"FIA",357.69,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.69,357.69)
0
"FIA",357.7)
FORM LINE
"FIA",357.7,0)
^IBE(357.7,
"FIA",357.7,0,0)
357.7I
"FIA",357.7,0,1)
y^y^f^^^^n
"FIA",357.7,0,10)

"FIA",357.7,0,11)

"FIA",357.7,0,"RLRO")

"FIA",357.7,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.7,357.7)
0
"FIA",357.8)
TEXT AREA
"FIA",357.8,0)
^IBE(357.8,
"FIA",357.8,0,0)
357.8
"FIA",357.8,0,1)
y^y^f^^^^n
"FIA",357.8,0,10)

"FIA",357.8,0,11)

"FIA",357.8,0,"RLRO")

"FIA",357.8,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.8,357.8)
0
"FIA",357.8,357.81)
0
"FIA",357.91)
MARKING AREA TYPE
"FIA",357.91,0)
^IBE(357.91,
"FIA",357.91,0,0)
357.91
"FIA",357.91,0,1)
y^y^f^^n^^y^o^n
"FIA",357.91,0,10)

"FIA",357.91,0,11)

"FIA",357.91,0,"RLRO")

"FIA",357.91,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.91,357.91)
0
"FIA",357.92)
PRINT CONDITIONS
"FIA",357.92,0)
^IBE(357.92,
"FIA",357.92,0,0)
357.92
"FIA",357.92,0,1)
y^y^f^^n^^y^o^n
"FIA",357.92,0,10)

"FIA",357.92,0,11)

"FIA",357.92,0,"RLRO")

"FIA",357.92,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.92,357.92)
0
"FIA",357.93)
MULTIPLE CHOICE FIELD
"FIA",357.93,0)
^IBE(357.93,
"FIA",357.93,0,0)
357.93
"FIA",357.93,0,1)
y^y^f^^^^n
"FIA",357.93,0,10)

"FIA",357.93,0,11)

"FIA",357.93,0,"RLRO")

"FIA",357.93,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.93,357.93)
0
"FIA",357.93,357.931)
0
"FIA",357.94)
ENCOUNTER FORM PRINTERS
"FIA",357.94,0)
^IBE(357.94,
"FIA",357.94,0,0)
357.94P
"FIA",357.94,0,1)
y^y^f^^^^n
"FIA",357.94,0,10)

"FIA",357.94,0,11)

"FIA",357.94,0,"RLRO")

"FIA",357.94,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.94,357.94)
0
"FIA",357.95)
FORM DEFINITION
"FIA",357.95,0)
^IBD(357.95,
"FIA",357.95,0,0)
357.95I
"FIA",357.95,0,1)
y^y^f^^^^n
"FIA",357.95,0,10)

"FIA",357.95,0,11)

"FIA",357.95,0,"RLRO")

"FIA",357.95,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.95,357.95)
0
"FIA",357.95,357.9501)
0
"FIA",357.95,357.951)
0
"FIA",357.95,357.9511)
0
"FIA",357.95,357.952)
0
"FIA",357.95,357.953)
0
"FIA",357.96)
ENCOUNTER FORM TRACKING
"FIA",357.96,0)
^IBD(357.96,
"FIA",357.96,0,0)
357.96I
"FIA",357.96,0,1)
y^y^f^^^^n
"FIA",357.96,0,10)

"FIA",357.96,0,11)

"FIA",357.96,0,"RLRO")

"FIA",357.96,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.96,357.96)
0
"FIA",357.96,357.9601)
0
"FIA",357.96,357.961)
0
"FIA",357.96,357.962)
0
"FIA",357.96,357.963)
0
"FIA",357.96,357.969)
0
"FIA",357.97)
ENCOUNTER FORM COUNTERS
"FIA",357.97,0)
^IBD(357.97,
"FIA",357.97,0,0)
357.97
"FIA",357.97,0,1)
y^y^f^^^^n
"FIA",357.97,0,10)

"FIA",357.97,0,11)

"FIA",357.97,0,"RLRO")

"FIA",357.97,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.97,357.97)
0
"FIA",357.98)
AICS DATA QUALIFIERS
"FIA",357.98,0)
^IBD(357.98,
"FIA",357.98,0,0)
357.98I
"FIA",357.98,0,1)
y^y^f^^n^^y^m^n
"FIA",357.98,0,10)

"FIA",357.98,0,11)

"FIA",357.98,0,"RLRO")

"FIA",357.98,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.98,357.98)
0
"FIA",357.99)
PRINT MANAGER CLINIC GROUPS
"FIA",357.99,0)
^IBD(357.99,
"FIA",357.99,0,0)
357.99
"FIA",357.99,0,1)
y^y^f^^^^n
"FIA",357.99,0,10)

"FIA",357.99,0,11)

"FIA",357.99,0,"RLRO")

"FIA",357.99,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",357.99,357.99)
0
"FIA",357.99,357.9901)
0
"FIA",357.99,357.9911)
0
"FIA",358)
IMP/EXP ENCOUNTER FORM
"FIA",358,0)
^IBE(358,
"FIA",358,0,0)
358I
"FIA",358,0,1)
y^y^f^^n^^y^o^n
"FIA",358,0,10)

"FIA",358,0,11)

"FIA",358,0,"RLRO")

"FIA",358,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",358,358)
0
"FIA",358,358.01)
0
"FIA",358,358.02)
0
"FIA",358.1)
IMP/EXP ENCOUNTER FORM BLOCK
"FIA",358.1,0)
^IBE(358.1,
"FIA",358.1,0,0)
358.1I
"FIA",358.1,0,1)
y^y^f^^n^^y^o^n
"FIA",358.1,0,10)

"FIA",358.1,0,11)

"FIA",358.1,0,"RLRO")

"FIA",358.1,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",358.1,358.1)
0
"FIA",358.1,358.11)
0
"FIA",358.2)
IMP/EXP SELECTION LIST
"FIA",358.2,0)
^IBE(358.2,
"FIA",358.2,0,0)
358.2I
"FIA",358.2,0,1)
y^y^f^^n^^y^o^n
"FIA",358.2,0,10)

"FIA",358.2,0,11)

"FIA",358.2,0,"RLRO")

"FIA",358.2,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",358.2,358.2)
0
"FIA",358.2,358.21)
0
"FIA",358.2,358.22)
0
"FIA",358.3)
IMP/EXP SELECTION
"FIA",358.3,0)
^IBE(358.3,
"FIA",358.3,0,0)
358.3I
"FIA",358.3,0,1)
y^y^f^^n^^y^o^n
"FIA",358.3,0,10)

"FIA",358.3,0,11)

"FIA",358.3,0,"RLRO")

"FIA",358.3,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",358.3,358.3)
0
"FIA",358.3,358.31)
0
"FIA",358.4)
IMP/EXP SELECTION GROUP
"FIA",358.4,0)
^IBE(358.4,
"FIA",358.4,0,0)
358.4I
"FIA",358.4,0,1)
y^y^f^^n^^y^o^n
"FIA",358.4,0,10)

"FIA",358.4,0,11)

"FIA",358.4,0,"RLRO")

"FIA",358.4,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",358.4,358.4)
0
"FIA",358.5)
IMP/EXP DATA FIELD
"FIA",358.5,0)
^IBE(358.5,
"FIA",358.5,0,0)
358.5I
"FIA",358.5,0,1)
y^y^f^^n^^y^o^n
"FIA",358.5,0,10)

"FIA",358.5,0,11)

"FIA",358.5,0,"RLRO")

"FIA",358.5,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",358.5,358.5)
0
"FIA",358.5,358.52)
0
"FIA",358.6)
IMP/EXP PACKAGE INTERFACE
"FIA",358.6,0)
^IBE(358.6,
"FIA",358.6,0,0)
358.6I
"FIA",358.6,0,1)
y^y^f^^n^^y^o^n
"FIA",358.6,0,10)

"FIA",358.6,0,11)

"FIA",358.6,0,"RLRO")

"FIA",358.6,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",358.6,358.6)
0
"FIA",358.6,358.61)
0
"FIA",358.6,358.613)
0
"FIA",358.6,358.615)
0
"FIA",358.6,358.66)
0
"FIA",358.6,358.67)
0
"FIA",358.7)
IMP/EXP FORM LINE
"FIA",358.7,0)
^IBE(358.7,
"FIA",358.7,0,0)
358.7I
"FIA",358.7,0,1)
y^y^f^^n^^y^o^n
"FIA",358.7,0,10)

"FIA",358.7,0,11)

"FIA",358.7,0,"RLRO")

"FIA",358.7,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",358.7,358.7)
0
"FIA",358.8)
IMP/EXP TEXT AREA
"FIA",358.8,0)
^IBE(358.8,
"FIA",358.8,0,0)
358.8
"FIA",358.8,0,1)
y^y^f^^n^^y^o^n
"FIA",358.8,0,10)

"FIA",358.8,0,11)

"FIA",358.8,0,"RLRO")

"FIA",358.8,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",358.8,358.8)
0
"FIA",358.8,358.81)
0
"FIA",358.91)
IMP/EXP MARKING AREA
"FIA",358.91,0)
^IBE(358.91,
"FIA",358.91,0,0)
358.91
"FIA",358.91,0,1)
y^y^f^^n^^y^o^n
"FIA",358.91,0,10)

"FIA",358.91,0,11)

"FIA",358.91,0,"RLRO")

"FIA",358.91,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",358.91,358.91)
0
"FIA",358.93)
IMP/EXP MULTIPLE CHOICE FIELD
"FIA",358.93,0)
^IBE(358.93,
"FIA",358.93,0,0)
358.93
"FIA",358.93,0,1)
y^y^f^^n^^y^o^n
"FIA",358.93,0,10)

"FIA",358.93,0,11)

"FIA",358.93,0,"RLRO")

"FIA",358.93,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",358.93,358.93)
0
"FIA",358.93,358.931)
0
"FIA",358.94)
IMP/EXP HAND PRINT FIELD
"FIA",358.94,0)
^IBE(358.94,
"FIA",358.94,0,0)
358.94
"FIA",358.94,0,1)
y^y^f^^n^^y^o^n
"FIA",358.94,0,10)

"FIA",358.94,0,11)

"FIA",358.94,0,"RLRO")

"FIA",358.94,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",358.94,358.94)
0
"FIA",358.98)
IMP/EXP AICS DATA QUALIFIERS
"FIA",358.98,0)
^IBD(358.98,
"FIA",358.98,0,0)
358.98I
"FIA",358.98,0,1)
y^y^f^^n^^y^o^n
"FIA",358.98,0,10)

"FIA",358.98,0,11)

"FIA",358.98,0,"RLRO")

"FIA",358.98,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",358.98,358.98)
0
"FIA",358.99)
IMP/EXP AICS DATA ELEMENTS
"FIA",358.99,0)
^IBE(358.99,
"FIA",358.99,0,0)
358.99
"FIA",358.99,0,1)
y^y^f^^n^^y^o^n
"FIA",358.99,0,10)

"FIA",358.99,0,11)

"FIA",358.99,0,"RLRO")

"FIA",358.99,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",358.99,358.99)
0
"FIA",359)
CONVERTED FORMS
"FIA",359,0)
^IBD(359,
"FIA",359,0,0)
359P
"FIA",359,0,1)
y^y^f^^^^n
"FIA",359,0,10)

"FIA",359,0,11)

"FIA",359,0,"RLRO")

"FIA",359,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",359,359)
0
"FIA",359,359.01)
0
"FIA",359.1)
AICS DATA ELEMENTS
"FIA",359.1,0)
^IBE(359.1,
"FIA",359.1,0,0)
359.1
"FIA",359.1,0,1)
y^y^f^^n^^y^o^n
"FIA",359.1,0,10)

"FIA",359.1,0,11)

"FIA",359.1,0,"RLRO")

"FIA",359.1,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",359.1,359.1)
0
"FIA",359.2)
FORM SPECS
"FIA",359.2,0)
^IBD(359.2,
"FIA",359.2,0,0)
359.2I
"FIA",359.2,0,1)
y^y^f^^^^n
"FIA",359.2,0,10)

"FIA",359.2,0,11)

"FIA",359.2,0,"RLRO")

"FIA",359.2,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",359.2,359.2)
0
"FIA",359.2,359.21)
0
"FIA",359.3)
AICS ERROR AND WARNING LOG
"FIA",359.3,0)
^IBD(359.3,
"FIA",359.3,0,0)
359.3DIAO
"FIA",359.3,0,1)
y^y^f^^^^n
"FIA",359.3,0,10)

"FIA",359.3,0,11)

"FIA",359.3,0,"RLRO")

"FIA",359.3,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",359.3,359.3)
0
"FIA",359.3,359.31)
0
"FIA",359.94)
HAND PRINT FIELD
"FIA",359.94,0)
^IBE(359.94,
"FIA",359.94,0,0)
359.94
"FIA",359.94,0,1)
y^y^f^^^^n
"FIA",359.94,0,10)

"FIA",359.94,0,11)

"FIA",359.94,0,"RLRO")

"FIA",359.94,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",359.94,359.94)
0
"FIA",409.95)
PRINT MANAGER CLINIC SETUP
"FIA",409.95,0)
^SD(409.95,
"FIA",409.95,0,0)
409.95P
"FIA",409.95,0,1)
y^y^f^^^^n
"FIA",409.95,0,10)

"FIA",409.95,0,11)

"FIA",409.95,0,"RLRO")

"FIA",409.95,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",409.95,409.95)
0
"FIA",409.95,409.9501)
0
"FIA",409.95,409.9502)
0
"FIA",409.96)
PRINT MANAGER DIVISION SETUP
"FIA",409.96,0)
^SD(409.96,
"FIA",409.96,0,0)
409.96P
"FIA",409.96,0,1)
y^y^f^^^^n
"FIA",409.96,0,10)

"FIA",409.96,0,11)

"FIA",409.96,0,"RLRO")

"FIA",409.96,0,"VR")
3.0^AUTOMATED INFO COLLECTION SYS
"FIA",409.96,409.96)
0
"FIA",409.96,409.961)
0
"FRV1",357.6,"101,0",13)
IBD INPUT CANCEL/NOSHOW
"FRV1",357.6,"101,0",13,"F")
;IBE(357.6,
"FRV1",357.6,"105,0",11)
SAMPLE 1
"FRV1",357.6,"105,0",11,"F")
;GMT(142,
"FRV1",357.6,"108,0",13)
PX INPUT SC TREATMENT QUESTIONS
"FRV1",357.6,"108,0",13,"F")
;IBE(357.6,
"FRV1",357.6,"111,0",13)
PX INPUT SC TREATMENT QUESTIONS
"FRV1",357.6,"111,0",13,"F")
;IBE(357.6,
"FRV1",357.6,"116,0",11)
SAMPLE 1
"FRV1",357.6,"116,0",11,"F")
;GMT(142,
"FRV1",357.6,"117,0",11)
SAMPLE 1
"FRV1",357.6,"117,0",11,"F")
;GMT(142,
"FRV1",357.6,"33,0",13)
GMP INPUT CLINIC COMMON PROBLEMS
"FRV1",357.6,"33,0",13,"F")
;IBE(357.6,
"FRV1",357.6,"60,0",13)
INPUT VISIT TYPE
"FRV1",357.6,"60,0",13,"F")
;IBE(357.6,
"FRV1",357.6,"7,0",13)
INPUT PROCEDURE CODE (CPT4)
"FRV1",357.6,"7,0",13,"F")
;IBE(357.6,
"FRV1",357.6,"7,16",2)
SHORT NARRATIVE (30 CHAR)
"FRV1",357.6,"7,16",2,"F")
;IBE(359.1,
"FRV1",357.6,"7,16",6)
CPT-4 PROCEDURE CODE
"FRV1",357.6,"7,16",6,"F")
;IBE(359.1,
"FRV1",357.6,"71,0",13)
INPUT PROVIDER
"FRV1",357.6,"71,0",13,"F")
;IBE(357.6,
"FRV1",357.6,"73,0",13)
PX INPUT PATIENT ACTIVE PROBLEM
"FRV1",357.6,"73,0",13,"F")
;IBE(357.6,
"FRV1",357.6,"85,0",13)
PX INPUT EDUCATION TOPICS
"FRV1",357.6,"85,0",13,"F")
;IBE(357.6,
"FRV1",357.6,"86,0",13)
PX INPUT IMMUNIZATION
"FRV1",357.6,"86,0",13,"F")
;IBE(357.6,
"FRV1",357.6,"87,0",13)
PX INPUT EXAMS
"FRV1",357.6,"87,0",13,"F")
;IBE(357.6,
"FRV1",357.6,"89,0",13)
PX INPUT SKIN TESTS
"FRV1",357.6,"89,0",13,"F")
;IBE(357.6,
"FRV1",357.6,"9,0",13)
INPUT DIAGNOSIS CODE (ICD9)
"FRV1",357.6,"9,0",13,"F")
;IBE(357.6,
"FRV1",357.6,"9,16",2)
SHORT NARRATIVE (30 CHAR)
"FRV1",357.6,"9,16",2,"F")
;IBE(359.1,
"FRV1",357.6,"9,16",6)
ICD-9 DIAGNOSIS CODE
"FRV1",357.6,"9,16",6,"F")
;IBE(359.1,
"FRV1",357.6,"90,0",13)
PX INPUT HEALTH FACTORS
"FRV1",357.6,"90,0",13,"F")
;IBE(357.6,
"INI")
IBDE2
"INIT")
IBD3KPT
"KRN",.4,1615,-1)
0^1
"KRN",.4,1615,0)
IBD LIST ERRORS^2970227.1235^@^359.3^^@^2970416
"KRN",.4,1615,"F",1)
.02;L20~-2,^DPT(^^S I(0,0)=D0 S DIP(1)=$S($D(^IBD(359.3,D0,0)):^(0),1:"") S X=$P(DIP(1),U,2),X=X S D(0)=+X;Z;"PATIENT:"~-2,.363;"ID";L12~
"KRN",.4,1615,"F",2)
.03;"APPOINTMENT DATE";L16~.05;"FORM TRACKING ID";R9~.08~.13;L20~10,.01;W35~
"KRN",.4,1615,"H")
AICS UNCORRECTED SCANNING ERROR LIST
"KRN",.401,1026,-1)
0^1
"KRN",.401,1026,0)
IBD PRIM CARE SEARCH^2960530.1526^@^357.6^^@^2960530
"KRN",.401,1026,"%D",0)
^^1^1^2960530^
"KRN",.401,1026,"%D",1,0)
List of new primary care interfaces for patch.
"KRN",.401,1026,"DC",1)
.01^["PRIMARY CARE"^
"KRN",.401,1026,"DIS",0)
I $S($D(^IBE(357.6,D0,0)):$P(^(0),U,1),1:"")["PRIMARY CARE"
"KRN",.401,1026,"DL")
1
"KRN",.401,1026,"DL",0)
^1^
"KRN",.401,1026,"O",0)
^
"KRN",.401,1026,"O",1,0)
NAME CONTAINS "PRIMARY CARE"
"KRN",.401,1026,"QR")
2960530.152646^2
"KRN",.401,1028,-1)
0^2
"KRN",.401,1028,0)
IBD RPC LIST^2960604.1119^@^8994^^@
"KRN",.401,1028,"%D",0)
^^1^1^2960604^^
"KRN",.401,1028,"%D",1,0)
AICS Remote Procedure List
"KRN",.401,1028,"QR")
2960604^8
"KRN",.401,1119,-1)
0^3
"KRN",.401,1119,0)
IBD LIST ERRORS^2970314.1644^@^359.3^^@^2970416
"KRN",.401,1119,2,0)
^.4014^4^4
"KRN",.401,1119,2,1,0)
359.3^.01^ERROR DATE/TIME^'@^^^^^^1
"KRN",.401,1119,2,1,"ASK")
1
"KRN",.401,1119,2,1,"F")
2970415.99999^T^4/16/97
"KRN",.401,1119,2,1,"GET")
S DISX(1)=$P($G(^IBD(359.3,D0,0)),U,1)
"KRN",.401,1119,2,1,"IX")
^IBD(359.3,"B",^IBD(359.3,^2
"KRN",.401,1119,2,1,"QCON")
I (DISX(1)]]2970415.99999)&(DISX(1)']]2970416.235959)
"KRN",.401,1119,2,1,"SER")
100.0000^1.0000
"KRN",.401,1119,2,1,"T")
2970416.235959^T@23:59:59^4/16/97@23:59:59
"KRN",.401,1119,2,1,"TXT")
ERROR DATE/TIME from 4/16/97 to 4/16/97@23:59:59
"KRN",.401,1119,2,2,0)
359.3^^USER^#".13^^^^^^4
"KRN",.401,1119,2,2,"ASK")
1
"KRN",.401,1119,2,2,"CM")
S Y(1)=$S($D(^IBD(359.3,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,13),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(2)=X
"KRN",.401,1119,2,2,"F")
@z^A
"KRN",.401,1119,2,2,"GET")
S Y(1)=$S($D(^IBD(359.3,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,13),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(2)=X
"KRN",.401,1119,2,2,"IX")
^IBD(359.3,"AC",^IBD(359.3,^2
"KRN",.401,1119,2,2,"PTRIX")
^VA(200,"B",
"KRN",.401,1119,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,1119,2,2,"SER")
0.0000^0.0000
"KRN",.401,1119,2,2,"T")
A^A
"KRN",.401,1119,2,2,"TXT")
USER not null
"KRN",.401,1119,2,3,0)
359.3^^PATIENT^".02^^^^^^4
"KRN",.401,1119,2,3,"CM")
S Y(1)=$S($D(^IBD(359.3,D0,0)):^(0),1:"") S X=$S('$D(^DPT(+$P(Y(1),U,2),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(3)=X
"KRN",.401,1119,2,3,"F")
?z^@
"KRN",.401,1119,2,3,"GET")
S Y(1)=$S($D(^IBD(359.3,D0,0)):^(0),1:"") S X=$S('$D(^DPT(+$P(Y(1),U,2),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(3)=X
"KRN",.401,1119,2,3,"QCON")
I 1
"KRN",.401,1119,2,3,"T")
z^
"KRN",.401,1119,2,3,"TXT")
All PATIENT (includes nulls)
"KRN",.401,1119,2,4,0)
359.3^.03^ENCOUNTER DATE/TIME^^;S1^^^^^1
"KRN",.401,1119,2,4,"F")
?z^@
"KRN",.401,1119,2,4,"GET")
S DISX(4)=$P($G(^IBD(359.3,D0,0)),U,3)
"KRN",.401,1119,2,4,"QCON")
I 1
"KRN",.401,1119,2,4,"SER")
0.0000^0.0000
"KRN",.401,1119,2,4,"T")
z^
"KRN",.401,1119,2,4,"TXT")
All ENCOUNTER DATE/TIME (includes nulls)
"KRN",.401,1119,2,"B",359.3,1)

"KRN",.401,1119,2,"B",359.3,2)

"KRN",.401,1119,2,"B",359.3,3)

"KRN",.401,1119,2,"B",359.3,4)

"KRN",.402,1228,-1)
0^21
"KRN",.402,1228,0)
IBDF POSITION COPIED BLOCK^2950224.0837^^357.1^^^2970328
"KRN",.402,1228,"%D",0)
^^1^1^2940308^
"KRN",.402,1228,"%D",1,0)
Used to position a copied block onto a form.
"KRN",.402,1228,"DIAB",5,0,357.1,0)
.06;T;REQ
"KRN",.402,1228,"DIAB",7,0,357.1,0)
.07;T;REQ
"KRN",.402,1228,"DR",1,357.1)
.04;S IBY=X;.05;S IBX=X;.06R~T~;I (X+IBX)>$G(IBFORM("WIDTH")) W !,"WARNING!, The block extends past the right margin!";.07R~T~;I (X+IBY)>$G(IBFORM("HT")) W !,"WARNING!, The block extends past the bottom margin!";S IBDONE=1;
"KRN",.402,1229,-1)
0^7
"KRN",.402,1229,0)
IBDF EDIT HEADER&OUTLINE^2930415.0801^^357.1^^^2970121^
"KRN",.402,1229,"%D",0)
^^1^1^2940308^
"KRN",.402,1229,"%D",1,0)
Used to edit a block's header and outline.
"KRN",.402,1229,"DIAB",2,0,357.1,0)
.13;T
"KRN",.402,1229,"DIAB",3,0,357.1,0)
.11;T
"KRN",.402,1229,"DIAB",5,0,357.1,0)
.12;T
"KRN",.402,1229,"DIAB",7,0,357.1,0)
.1;T
"KRN",.402,1229,"DR",1,357.1)
.01////^S X=IBNAME;.13T~;.11T~;I $P(^IBE(357.1,D0,0),U,11)="" S Y="@1";.12T~;@1;.1T~;
"KRN",.402,1230,-1)
0^3
"KRN",.402,1230,0)
IBDF EDIT DATA FIELD^2940527.101^^357.5^^^2970324^
"KRN",.402,1230,"%D",0)
^^1^1^2940308^
"KRN",.402,1230,"%D",1,0)
Used to edit a data field.
"KRN",.402,1230,"DIAB",1,0,357.5,1)
.1;T;REQ
"KRN",.402,1230,"DIAB",1,1,357.52,1)
.09;"Select Subfield's Data"
"KRN",.402,1230,"DIAB",2,0,357.5,1)
.12;T;REQ
"KRN",.402,1230,"DIAB",3,0,357.5,1)
.13;T;REQ
"KRN",.402,1230,"DIAB",4,0,357.5,1)
.14;T;REQ
"KRN",.402,1230,"DIAB",4,1,357.52,0)
.03;T
"KRN",.402,1230,"DIAB",9,0,357.5,0)
.05;T;REQ
"KRN",.402,1230,"DIAB",10,0,357.5,0)
.04;T
"KRN",.402,1230,"DIAB",13,0,357.5,0)
.06;T
"KRN",.402,1230,"DIAB",15,0,357.5,0)
.07;T
"KRN",.402,1230,"DIAB",17,0,357.5,0)
.11;T;REQ
"KRN",.402,1230,"DR",1,357.5)
.01;I IBOLD S Y="@1";.02////^S X=$G(IBBLK);.03////^S X=$G(IBRTN);D DATATYPE^IBDF9B(+$G(IBRTN));D RESET^VALM4:VALMCC,REFRESH^VALM;@1;I '$G(IBLIST) S Y="@2";.05R~T~;.04T~;@2;I '$G(IBWP) S Y="@5";.06T~;S:X="" Y="@4";.07T~;@4;.11R~T~;
"KRN",.402,1230,"DR",1,357.5,1)
.1R~T~;.12R~T~;.13R~T~;.14R~T~;S Y="@99";@5;D FULL^VALM1;D HELP3^IBDFU5;S (IBY,IBX)=1;2;@99;S IBDELETE=0;
"KRN",.402,1230,"DR",2,357.52)
.01;S:X="" Y="@99" S IBW=$L(X);D RESET^VALM4:VALMCC,REFRESH^VALM;.03T~;I X["I" S Y="@7",IBW=0;.05//^S X=+IBY;S IBY=X+1;.04//^S X=+IBX;S IBX=X+2+IBW;@7;I $G(IBMF) S Y="@8";.09////^S X=1;S IBP=1;S Y="@9";@8;D HELP1^IBDFU5;
"KRN",.402,1230,"DR",2,357.52,1)
.09Select Subfield's Data~;I 'X S Y="@10";S IBP=X;@9;.08//^S X=$G(IBLEN(IBP));S IBW=+X;.06//^S X=+IBY;S IBY=X+1;.07//^S X=+IBX;S IBX=X+2+IBW;@10;D FULL^VALM1;D HELP3^IBDFU5;
"KRN",.402,1230,"ROU")
^IBDXI5
"KRN",.402,1230,"ROUOLD")
IBDXI5
"KRN",.402,1231,-1)
0^4
"KRN",.402,1231,0)
IBDF EDIT FORM HEADER^2930730.1158^^357.5^^^2961024^
"KRN",.402,1231,"%D",0)
^^1^1^2940308^
"KRN",.402,1231,"%D",1,0)
Used to edit the data field that is the form header.
"KRN",.402,1231,"DIAB",1,1,357.52,0)
.01;"HEADER LINE"
"KRN",.402,1231,"DIAB",2,1,357.52,0)
.03;"HOW SHOULD THE HEADER LINE APPEAR? CHOOSE FROM {B=bold,U=underline}"
"KRN",.402,1231,"DIAB",3,0,357.5,0)
2;"HEADER LINE"
"KRN",.402,1231,"DR",1,357.5)
W !!,"***** Each subfield entered here will be a header line *****",!;W "**** Lines will appear in the order entered ****",!;2HEADER LINE~;
"KRN",.402,1231,"DR",2,357.52)
.01HEADER LINE~;.03HOW SHOULD THE HEADER LINE APPEAR? CHOOSE FROM {B=bold,U=underline}~;
"KRN",.402,1232,-1)
0^6
"KRN",.402,1232,0)
IBDF EDIT HEADER BLOCK^2950914.1133^^357.1^^^2961024
"KRN",.402,1232,"%D",0)
^^1^1^2940308^
"KRN",.402,1232,"%D",1,0)
Used to edit the header block of a form.
"KRN",.402,1232,"DIAB",1,0,357.1,0)
.1//INVISIBLE;"HEADER BLOCK OUTLINE TYPE"
"KRN",.402,1232,"DIAB",5,0,357.1,0)
.04//2;"ROW TO BEGIN THE HEADER BLOCK AT"
"KRN",.402,1232,"DR",1,357.1)
.1HEADER BLOCK OUTLINE TYPE~//INVISIBLE;I X=1 S IBBOX=2;.06////^S X=+$G(MAXLEN)+IBBOX;.07////^S X=+$G(HDRLINES)+IBBOX;.04ROW TO BEGIN THE HEADER BLOCK AT~//2;.05//^S X=$$DFLTCOL^IBDF9C;S IBDELETE=0;
"KRN",.402,1233,-1)
0^19
"KRN",.402,1233,0)
IBDF FORM LINE^2950616.1517^^357.7^^^2960521
"KRN",.402,1233,"%D",0)
^^1^1^2940308^
"KRN",.402,1233,"%D",1,0)
Used to edit a line.
"KRN",.402,1233,"DIAB",6,0,357.7,0)
.04;T
"KRN",.402,1233,"DR",1,357.7)
S IBDFDONE=0;.03;I (X<$$MINY^IBDFU1B)!(X>$$MAXY^IBDFU1B) D WARNING^IBDFU1B("line");.02;I (X<$$MINX^IBDFU1B)!(X>$$MAXX^IBDFU1B) D WARNING^IBDFU1B("line");.04T~;.05;I X>$$MAXLEN^IBDF9D D WARNING^IBDFU1B("line");
"KRN",.402,1233,"DR",1,357.7,1)
I $P($G(^IBE(357.7,IBLINE,0)),"^",4)'="H" S Y="@1";.07;I X<2 S Y="@1";.08;I $$TOOMANY^IBDF9D() D WARNING^IBDFU1B("line");@1;.01///^S X=$$NEWNAME^IBDF9D($G(IBLINE));.06////^S X=$G(IBBLK);S IBDFDONE=1;
"KRN",.402,1234,-1)
0^20
"KRN",.402,1234,0)
IBDF NEW EMPTY BLOCK^2950417.1028^^357.1^^^2970319
"KRN",.402,1234,"%D",0)
^^2^2^2940308^
"KRN",.402,1234,"%D",1,0)
Used to edit the header, position, outline, and other characteristics of a
"KRN",.402,1234,"%D",2,0)
new block.
"KRN",.402,1234,"DIAB",6,0,357.1,0)
.14;REQ
"KRN",.402,1234,"DIAB",8,0,357.1,0)
.11;T
"KRN",.402,1234,"DIAB",10,0,357.1,0)
.12//CR;T
"KRN",.402,1234,"DIAB",12,0,357.1,0)
.1//SOLID LINE;T
"KRN",.402,1234,"DIAB",14,0,357.1,0)
.04;T
"KRN",.402,1234,"DIAB",15,0,357.1,0)
.05;T
"KRN",.402,1234,"DIAB",17,0,357.1,0)
.06;T
"KRN",.402,1234,"DIAB",18,0,357.1,0)
.07;T
"KRN",.402,1234,"DIAB",19,0,357.1,0)
.13;T
"KRN",.402,1234,"DR",1,357.1)
S IBDFDONE=0;.01;.02////^S X=$G(IBFORM);S:'$G(IBTKBLK) Y="@1";.14///^S X=$$TKORDER^IBDF13();.14R~;@1;.11T~;I X="" S Y="@2";.12T~//CR;@2;.1T~//SOLID LINE;S:$G(IBTKBLK) Y="@3";.04T~;.05T~;@3;.06T~;.07T~;.13T~;S IBDFDONE=1;
"KRN",.402,1235,-1)
0^18
"KRN",.402,1235,0)
IBDF EDIT TEXT AREA^2930730.1203^^357.8^^^2960820^
"KRN",.402,1235,"%D",0)
^^1^1^2940308^
"KRN",.402,1235,"%D",1,0)
Used to edit a text area.
"KRN",.402,1235,"DR",1,357.8)
S IBDELETE=1;.01;.02////^S X=$G(IBBLK);.04;I (X<$$MINY^IBDFU1B)!(X>$$MAXY^IBDFU1B) D WARNING^IBDFU1B("text area");.03;I (X<$$MINX^IBDFU1B)!(X>$$MAXX^IBDFU1B) D WARNING^IBDFU1B("text area");.05;
"KRN",.402,1235,"DR",1,357.8,1)
I X>$$MAXW^IBDF9E D WARNING^IBDFU1B("text area");.06;I X>$$MAXHT^IBDF9E D WARNING^IBDFU1B("text area");D FULL^VALM1;1;D FORMAT^IBDF9E;S IBDELETE=0;
"KRN",.402,1236,-1)
0^17
"KRN",.402,1236,0)
IBDF EDIT SELECTION LIST^2961219.0943^^357.2^^^2970328
"KRN",.402,1236,"%D",0)
^^2^2^2961219^^
"KRN",.402,1236,"%D",1,0)
Used to edit a selection list, except for the position and size of the
"KRN",.402,1236,"%D",2,0)
columns.
"KRN",.402,1236,"DIAB",2,0,357.2,1)
.09//CSU;T
"KRN",.402,1236,"DIAB",2,0,357.2,2)
.17//NARRATIVE AND CODE;T;REQ
"KRN",.402,1236,"DIAB",2,1,357.22,3)
.06//BUBBLE;T;REQ
"KRN",.402,1236,"DIAB",3,0,357.2,2)
.18//CODE ONLY;T;REQ
"KRN",.402,1236,"DIAB",3,1,357.22,1)
.04//TEXT;T
"KRN",.402,1236,"DIAB",3,1,357.22,6)
.07;T;REQ
"KRN",.402,1236,"DIAB",4,0,357.2,1)
.08//0;T
"KRN",.402,1236,"DIAB",4,1,357.22,0)
.01;"SUBCOLUMN NUMBER"
"KRN",.402,1236,"DIAB",5,0,357.2,1)
.12//NO;T
"KRN",.402,1236,"DIAB",5,1,357.22,4)
.02;T
"KRN",.402,1236,"DIAB",7,1,357.22,5)
.02;T
"KRN",.402,1236,"DIAB",10,0,357.2,0)
.15;T
"KRN",.402,1236,"DIAB",11,1,357.22,4)
.05;"Select Subcolumn's Data";REQ
"KRN",.402,1236,"DIAB",12,0,357.2,0)
.05;T
"KRN",.402,1236,"DIAB",14,0,357.2,0)
.06;T
"KRN",.402,1236,"DIAB",16,0,357.2,1)
.16//1;T
"KRN",.402,1236,"DIAB",17,0,357.2,0)
.07//SPACE/LINE/SPACE;T
"KRN",.402,1236,"DR",1,357.2)
S IBDELETE=1;.01;I IBOLD S Y="@1";D FULL^VALM1;.02////^S X=$G(IBBLK);.11////^S X=$G(IBRTN);D DATASIZE^IBDF9A(+X),LISTTYPE^IBDF9A(+X);@1;S:'IBDYN Y="@5";.15T~;@5;.05T~;I X="" S Y="@2";.06T~;@2;.04;.07T~//SPACE/LINE/SPACE;
"KRN",.402,1236,"DR",1,357.2,1)
S:IBDYN Y="@4";.09T~//CSU;@4;.08T~//0;.12T~//NO;D MSG3^IBDF9A;D HELP4^IBDFU5;2;K ^DIE("NO^");I ('IBDYN)!(IBINPUT) S Y="@100";.13;D RESET^VALM4:VALMCC,REFRESH^VALM;1//1;@100;S:'$$OTHEROK^IBDF9A(IBRTN) Y="@101";.16T~//1;
"KRN",.402,1236,"DR",1,357.2,2)
S:X=0 Y="@101";.17R~T~//NARRATIVE AND CODE;.18R~T~//CODE ONLY;@101;S IBDELETE=0;
"KRN",.402,1236,"DR",2,357.21)
.01;.02;.03//^S X=1+$S($G(IBBLK("BOX"))=1:1,1:0);.04;
"KRN",.402,1236,"DR",2,357.22)
S DIE("NO^")="BACKOUTOK";S IBSC1=$P($G(^IBE(357.2,D0,2,D1,0)),U);S IBSC1(IBSC1)=$P($G(^IBE(357.2,D0,2,D1,0)),U,4)_"^"_$P($G(^IBE(357.2,D0,2,D1,0)),U,5);.01SUBCOLUMN NUMBER~;N IBSC3,IBSC4 D SCLOOP^IBDF9A3;
"KRN",.402,1236,"DR",2,357.22,1)
S IBSC2=$P($G(^IBE(357.2,D0,2,D1,0)),U);S:(IBSC1'=IBSC2) IBSWITCH(+$G(IBSWITCH))=IBSC1_"^"_IBSC2,IBSWITCH=$G(IBSWITCH)+1;.04T~//TEXT;
"KRN",.402,1236,"DR",2,357.22,2)
I X'=$P(IBSC1(IBSC1),U,1),$P(IBSC1(IBSC1),U,1)]"" S $P(^IBE(357.2,D0,2,D1,0),U,4)=$P(IBSC1(IBSC1),U,1) W !!,"*** PREVENTING LOSS OF DATA ***",!,"NOT ALLOWING THE 'TYPE OF SUBCOLUMN' TO BE CHANGED",!! S X=$P(IBSC1(IBSC1),U,1);
"KRN",.402,1236,"DR",2,357.22,3)
I X=1 S Y="@3";.06R~T~//BUBBLE;I $P(^IBE(357.91,X,0),"^")'["BUBBLE" S Y="@6";.08////1;S Y="@7";@6;.08;@7;S:'$G(IBINPUT) Y="@8",IBD=0;.1;S:'$O(^IBE(357.6,IBINPUT,13,0)) Y="@8",IBD=0;.09;S IBD=+X;@8;
"KRN",.402,1236,"DR",2,357.22,4)
I $P(^IBE(357.2,D0,2,D1,0),U,2)'="" S Y="@10";.02///^S X=$S(IBD:$P($G(^IBD(357.98,IBD,0)),U,3),1:"");@10;S X=X;.02T~;I X'="" S Y="@99";.02////^S X=" ";S Y="@99";@3;D HELP2^IBDFU5;.05R~Select Subcolumn's Data~;S IBD=+X;
"KRN",.402,1236,"DR",2,357.22,5)
N IBDFFLG D SCDEL^IBDF9A3 I $D(IBDFFLG) S Y="@99";.03//^S X=+$G(IBLEN(IBD));I $P(^IBE(357.2,D0,2,D1,0),U,2)'="" S Y="@11";.02///^S X=$P($G(IBLEN(IBD)),U,2);@11;S X=X;.02T~;I X'="" S Y="@9";.02////^S X=" ";@9;I IBD<2 S Y="@99";
"KRN",.402,1236,"DR",2,357.22,6)
I IBDYN S Y="@99";S:IBDYN Y="@99";.07R~T~;@99;D HELP4^IBDFU5;
"KRN",.402,1236,"ROU")
^IBDXI2
"KRN",.402,1236,"ROUOLD")
IBDXI2
"KRN",.402,1237,-1)
0^16
"KRN",.402,1237,0)
IBDF EDIT SELECTION^2950127.1445^^357.3^^^2951207
"KRN",.402,1237,"%D",0)
^^1^1^2940308^
"KRN",.402,1237,"%D",1,0)
Used to edit a selection.
"KRN",.402,1237,"DR",1,357.3)
.05;1;
"KRN",.402,1237,"DR",2,357.31)
I '$G(IBDFEDIT(+$G(^IBE(357.3,D0,1,D1,0)))) S Y="@1";.02;
"KRN",.402,1238,-1)
0^12
"KRN",.402,1238,0)
IBDF EDIT OLD OR COPIED FORM^2950814.0909^^357^^^2970423
"KRN",.402,1238,"%D",0)
^^1^1^2940308^
"KRN",.402,1238,"%D",1,0)
Used to edit an existing form.
"KRN",.402,1238,"DIAB",5,0,357,0)
.12;REQ
"KRN",.402,1238,"DIAB",8,0,357,0)
.06;T
"KRN",.402,1238,"DIAB",11,0,357,1)
.03;T
"KRN",.402,1238,"DR",1,357)
S IBDELETE=1;.01;.02//DUPLEX,SHORT-EDGE BINDING;.04////1;.12R~;S IBSCAN=X;I 'IBSCAN S Y="@1";.06T~;.16///1;.09///133;.1///80;.11//1;W !!,"ENTER THE PAGES THAT SHOULD BE SCANNED.";2;S Y="@2";@1;S:'IBOLD Y="@3";.09;.1;.11//1;
"KRN",.402,1238,"DR",1,357,1)
S Y="@2";@3;.16//133 COLUMNS x 80 LINES;S IBTXTSZ=X;.09///^S X=$S(IBTXTSZ=1:133,IBTXTSZ=2:96,1:80);.1///^S X=$S(IBTXTSZ=1:80,IBTXTSZ=2:72,1:80);.11//1;@2;.14///1;.15///p;.03T~;.07////^S X=$S(+$G(IBTKFORM):1,1:0);S IBDELETE=0;
"KRN",.402,1238,"DR",2,357.02)
.01;.02////1;
"KRN",.402,1239,-1)
0^11
"KRN",.402,1239,0)
IBDF EDIT NEW FORM^2951103.1343^^357^^^2970404
"KRN",.402,1239,"%D",0)
^^1^1^2940308^
"KRN",.402,1239,"%D",1,0)
Used to edit a new form.
"KRN",.402,1239,"DIAB",6,0,357,0)
.12;REQ
"KRN",.402,1239,"DIAB",9,0,357,0)
.06;T
"KRN",.402,1239,"DIAB",9,0,357,1)
.03;T
"KRN",.402,1239,"DR",1,357)
S IBDELETE=1;S IBDVR=+$G(^DD(357,0,"VR"));.01;.02//DUPLEX,SHORT-EDGE BINDING;.04////1;.12R~;S IBSCAN=X;I 'IBSCAN S Y="@1";.06T~;.16///1;.09///133;.1///80;.11//1;W !!,"ENTER THE PAGES THAT SHOULD BE SCANNED.";2;S Y="@2";@1;
"KRN",.402,1239,"DR",1,357,1)
.16//133 COLUMNS x 80 LINES;S IBTXTSZ=X;.09///^S X=$S(IBTXTSZ=1:133,IBTXTSZ=2:96,1:80);.1///^S X=$S(IBTXTSZ=1:80,IBTXTSZ=2:72,1:80);.11//1;@2;.14///1;.15///p;.03T~;.07////^S X=$S(+$G(IBTKFORM):1,1:0);S IBDELETE=0;S:IBDVR<1 Y="@10";
"KRN",.402,1239,"DR",1,357,2)
I $P(^IBE(357,DA,0),U,17)'="" S Y="@10";S:IBDVR<1 Y="@10";.17////^S X=+$G(IBDVR);@10;
"KRN",.402,1239,"DR",2,357.02)
.01;.02////1;
"KRN",.402,1244,-1)
0^2
"KRN",.402,1244,0)
IBDF EDIT AVAILABLE REPORT^2930924.1337^^357.6^^^2961024^
"KRN",.402,1244,"%D",0)
^^2^2^2940308^
"KRN",.402,1244,"%D",1,0)
Used to define a package interface that prints a report other than a
"KRN",.402,1244,"%D",2,0)
Health Summary.
"KRN",.402,1244,"DIAB",1,1,357.66,0)
ALL
"KRN",.402,1244,"DIAB",1,1,357.67,0)
ALL
"KRN",.402,1244,"DIAB",3,0,357.6,0)
1;REQ
"KRN",.402,1244,"DIAB",5,0,357.6,0)
.04;REQ
"KRN",.402,1244,"DIAB",6,0,357.6,0)
.02;REQ
"KRN",.402,1244,"DIAB",7,0,357.6,0)
.03;REQ
"KRN",.402,1244,"DIAB",13,0,357.6,0)
.09;REQ
"KRN",.402,1244,"DR",1,357.6)
.01;.06////4;1R~;3;.04R~;.02R~;.03R~;.1///NO;4.01;5.01;6;7;.09R~;S IBDELETE=0;
"KRN",.402,1244,"DR",2,357.66)
.01
"KRN",.402,1244,"DR",2,357.67)
.01
"KRN",.402,1247,-1)
0^22
"KRN",.402,1247,0)
IBDF POSITION/SIZE COLUMNS^2950505.1108^^357.2^^^2961024
"KRN",.402,1247,"%D",0)
^^1^1^2940308^
"KRN",.402,1247,"%D",1,0)
Used to edit the size and position of a selection list's columns.
"KRN",.402,1247,"DIAB",2,0,357.2,0)
.13;T
"KRN",.402,1247,"DIAB",3,1,357.21,0)
.02;T
"KRN",.402,1247,"DIAB",4,1,357.21,0)
.03//^S X=1+$S($G(IBBLK("BOX"))=1:1,1:0);T
"KRN",.402,1247,"DIAB",5,1,357.21,0)
.04;T
"KRN",.402,1247,"DR",1,357.2)
D MSG1^IBDF9A;.13T~;D FULL^VALM1;D MSG2^IBDF9A;1;
"KRN",.402,1247,"DR",2,357.21)
.01;D RESET^VALM4:VALMCC,REFRESH^VALM;.02T~;.03T~//^S X=1+$S($G(IBBLK("BOX"))=1:1,1:0);.04T~;D FULL^VALM1;
"KRN",.402,1249,-1)
0^13
"KRN",.402,1249,0)
IBDF EDIT OUTPUT/SELECTION RTN^2950807.0837^^357.6^^^2970411
"KRN",.402,1249,"%D",0)
^^2^2^2940308^
"KRN",.402,1249,"%D",1,0)
Used to define a package interface of the type output routine or selection
"KRN",.402,1249,"%D",2,0)
routine.
"KRN",.402,1249,"DIAB",1,1,357.615,0)
ALL
"KRN",.402,1249,"DIAB",1,1,357.66,0)
ALL
"KRN",.402,1249,"DIAB",1,1,357.67,0)
ALL
"KRN",.402,1249,"DIAB",2,0,357.6,1)
3;T
"KRN",.402,1249,"DIAB",4,0,357.6,1)
.04;REQ
"KRN",.402,1249,"DIAB",5,0,357.6,1)
.03;REQ
"KRN",.402,1249,"DIAB",6,0,357.6,0)
1;REQ
"KRN",.402,1249,"DIAB",6,0,357.6,1)
.02;REQ
"KRN",.402,1249,"DIAB",8,0,357.6,0)
.07;T;REQ
"KRN",.402,1249,"DIAB",9,0,357.6,1)
.09;REQ
"KRN",.402,1249,"DIAB",11,0,357.6,1)
2.01;T
"KRN",.402,1249,"DIAB",12,0,357.6,1)
2.02;T
"KRN",.402,1249,"DIAB",14,0,357.6,1)
2.17;T;REQ
"KRN",.402,1249,"DIAB",15,0,357.6,0)
.13;T
"KRN",.402,1249,"DIAB",15,0,357.6,1)
2.18;REQ
"KRN",.402,1249,"DR",1,357.6)
W !!,"You must prefix the name with the name space of the package that is providing",!,"the data.",!;.01;Q;.1///NO;.06///^S X=IBTYPE;1R~;S:IBTYPE=3 Y="@2";.07R~T~;S IBACTION=X;.05////1;S Y="@3";@2;.07////4;S IBACTION=4;.13T~;@3;
"KRN",.402,1249,"DR",1,357.6,1)
D LOOKUP^IBDF16;3T~;.1///NO;.04R~;.03R~;.02R~;6;7;.09R~;S:IBACTION=5 Y="@1";2.01T~;2.02T~;S:IBTYPE=2 Y="@4";2.17R~T~;2.18R~;@4;S:(IBACTION=1)!(IBACTION=3) Y="@1";15;@1;S IBDELETE=0;
"KRN",.402,1249,"DR",2,357.615)
.01:.05
"KRN",.402,1249,"DR",2,357.66)
.01
"KRN",.402,1249,"DR",2,357.67)
.01
"KRN",.402,1250,-1)
0^9
"KRN",.402,1250,0)
IBDF EDIT MARKING AREA^2930727.0815^^357.91^^^2961024^
"KRN",.402,1250,"%D",0)
^^1^1^2940308^
"KRN",.402,1250,"%D",1,0)
Used to edit a marking area.
"KRN",.402,1250,"DIAB",4,0,357.91,0)
.02;T;REQ
"KRN",.402,1250,"DR",1,357.91)
.01;.03///NO;W !!,"Enter the characters that should be printed on the form, including spaces.",!!;.02R~T~;S IBDELETE=0;
"KRN",.402,1252,-1)
0^23
"KRN",.402,1252,0)
IBDF PRINT MANAGER^2970318.1058^^409.95^^^2970415
"KRN",.402,1252,"%D",0)
^^1^1^2940308^
"KRN",.402,1252,"%D",1,0)
Used to edit a clinic setup for the print manager.
"KRN",.402,1252,"DIAB",1,1,409.9502,0)
ALL
"KRN",.402,1252,"DR",1,409.95)
.01;.02;.06;.08;.09;.03;.04;.05;.07;.1;W !!,"You can now select reports that should be printed for the clinic",!,"IN ADDITION to the encounter forms that have been selected.",!;1;
"KRN",.402,1252,"DR",1,409.95,1)
W !!," You may enter reports that you DO NOT want to print for this clinic. Entering",!,"an EXCLUDED REPORT will prevent it from printing even if it is defined",!,"to print for the entire division.",!;2;
"KRN",.402,1252,"DR",2,409.9501)
.01;.02///FOR EVERY APPOINTMENT;.03//DUPLEX,SHORT-EDGE BINDING;
"KRN",.402,1252,"DR",2,409.9502)
.01
"KRN",.402,1253,-1)
0^24
"KRN",.402,1253,0)
IBDF PRINT MANAGER^2940630.1352^^409.96^^^2970303^
"KRN",.402,1253,"%D",0)
^^1^1^2940308^
"KRN",.402,1253,"%D",1,0)
Used to edit a division setup for the print manager.
"KRN",.402,1253,"DR",1,409.96)
.01;1;
"KRN",.402,1253,"DR",2,409.961)
.01;.02;.03//DUPLEX,SHORT-EDGE BINDING;
"KRN",.402,1302,-1)
0^1
"KRN",.402,1302,0)
IBDF EDIT AVAILABLE HLTH SMRY^2970326.0924^^357.6^^^2970326
"KRN",.402,1302,"%D",0)
^^1^1^2940308^
"KRN",.402,1302,"%D",1,0)
Used to define a package interface that prints a Health Summary.
"KRN",.402,1302,"DIAB",3,0,357.6,0)
1;REQ
"KRN",.402,1302,"DIAB",9,0,357.6,0)
.11;REQ
"KRN",.402,1302,"DIAB",10,0,357.6,0)
.09;REQ
"KRN",.402,1302,"DR",1,357.6)
.01;.06////4;1R~;3;.02///PRNTSMRY;.03///IBDFN5;.04////^S X="HEALTH SUMMARY";.1///YES;.11R~;.09R~;S IBDELETE=0;
"KRN",.402,1420,-1)
0^10
"KRN",.402,1420,0)
IBDF EDIT MULT CHOICE FIELD^2950911.1413^^357.93^^^2970226
"KRN",.402,1420,"DIAB",3,0,357.93,1)
.04;REQ
"KRN",.402,1420,"DIAB",4,0,357.93,0)
.06;T
"KRN",.402,1420,"DIAB",8,0,357.93,0)
.02;T
"KRN",.402,1420,"DIAB",10,0,357.93,0)
.07;T
"KRN",.402,1420,"DIAB",11,0,357.93,0)
.03;REQ
"KRN",.402,1420,"DIAB",12,1,357.931,0)
.04;T
"KRN",.402,1420,"DR",1,357.93)
.01;I IBOLD S Y="@1";.08///^S X=$G(IBBLK);.06T~;S IBTYPE=X;D RESET^VALM4:VALMCC,REFRESH^VALM;@1;.02T~;S:$L(X) IBX=$L(X)+1 S:'$L(X) Y="@2";.07T~;.03R~;
"KRN",.402,1420,"DR",1,357.93,1)
S IBX=IBX+X+1 I (X<$$MINX^IBDFU1B)!(X>$$MAXX^IBDFU1B) D WARNING^IBDFU1B("input field");I ((IBX-3)>$$MAXX^IBDFU1B) D WARNING^IBDFU1B("input field");.04R~;
"KRN",.402,1420,"DR",1,357.93,2)
S IBY=X I (X<$$MINY^IBDFU1B)!(X>$$MAXY^IBDFU1B) D WARNING^IBDFU1B("input field");@2;D FULL^VALM1;.09;1;S Y="@99";@3;D FULL^VALM1;@99;
"KRN",.402,1420,"DR",2,357.931)
.08////^S X=$G(IBID);S DIE("NO^")="BACK";I '$D(IBQUAL) S Y="@4";.09///^S X=IBQUAL;S Y="@5";@4;.09;@5;.05//^S X=$G(IBLABEL);S IBLEN=$L(X);D RESET^VALM4:VALMCC,REFRESH^VALM;.04T~;.02//^S X=IBX+1;
"KRN",.402,1420,"DR",2,357.931,1)
S IBX=X+IBLEN+2 I (X<$$MINX^IBDFU1B)!((IBX-3)>$$MAXX^IBDFU1B) D WARNING^IBDFU1B("input field");.03//^S X=IBY+1;S IBY=X+1 I (X<$$MINY^IBDFU1B)!(X>$$MAXY^IBDFU1B) D WARNING^IBDFU1B("input field");.06//^S X=IBX;
"KRN",.402,1420,"DR",2,357.931,2)
S IBX=X+5 I (X<$$MINX^IBDFU1B)!((X+2)>$$MAXX^IBDFU1B) D WARNING^IBDFU1B("bubble");.07//^S X=IBY;S IBY=X I (X<$$MINY^IBDFU1B)!(X>$$MAXY^IBDFU1B) D WARNING^IBDFU1B("bubble");D FULL^VALM1;S DIE("NO^")="BACKOUTOK";
"KRN",.402,1420,"ROU")
^IBDXI93
"KRN",.402,1420,"ROUOLD")
IBDXI93
"KRN",.402,1452,-1)
0^8
"KRN",.402,1452,0)
IBDF EDIT LABEL FIELD^2950417.1134^@^357.5^^@^2960627
"KRN",.402,1452,"DIAB",3,1,357.52,0)
.03;T
"KRN",.402,1452,"DR",1,357.5)
.01;I IBOLD S Y="@1";.02////^S X=$G(IBBLK);.03////^S X="";@1;S (IBY,IBX)=1;2;@99;S IBDELETE=0;
"KRN",.402,1452,"DR",2,357.52)
.01;S:X="" Y="@99" S IBW=$L(X);.03T~;I X["I" S Y="@7",IBW=0;.05//^S X=+IBY;S IBY=X+1;.04//^S X=+IBX;S IBX=X+2+IBW;
"KRN",.402,1492,-1)
0^5
"KRN",.402,1492,0)
IBDF EDIT HAND PRINT FIELD^2950906.1306^^359.94^^^2960627
"KRN",.402,1492,"DIAB",2,0,359.94,1)
.04;REQ
"KRN",.402,1492,"DIAB",4,0,359.94,0)
.06;T
"KRN",.402,1492,"DIAB",14,0,359.94,0)
.03;REQ
"KRN",.402,1492,"DR",1,359.94)
.01;I IBOLD S Y="@1";.08///^S X=$G(IBBLK);.06T~;S IBOLD=IBOLD;.1;S IBOLD=X;.02///^S X=$P(^IBE(359.1,IBOLD,0),"^",10);D RESET^VALM4:VALMCC,REFRESH^VALM;@1;.02;S IBX=$L(X)+1;.05;.03R~;
"KRN",.402,1492,"DR",1,359.94,1)
S IBX=IBX+X-1+$$LENGTHDT^IBDF9B4($P(^IBE(359.94,D0,0),"^",10)) I (X<$$MINX^IBDFU1B)!(IBX>$$MAXX^IBDFU1B) D WARNING^IBDFU1B("hand print field");.04R~;S IBY=X I (X<$$MINY^IBDFU1B)!(X>$$MAXY^IBDFU1B) D WARNING^IBDFU1B("input field");
"KRN",.402,1492,"DR",1,359.94,2)
S IBDELETE=0;
"KRN",.402,1500,-1)
0^14
"KRN",.402,1500,0)
IBDF EDIT PLACE HOLDER^2961008.0933^@^357.3^^@^2961025
"KRN",.402,1500,"DIAB",3,0,357.3,0)
.08;T
"KRN",.402,1500,"DR",1,357.3)
.05;S $P(^IBE(357.3,DA,0),"^",1)=X;.08T~;.06//^S X=" ";I X']" " S Y="@1";.07;@1;
"KRN",.402,1572,-1)
0^15
"KRN",.402,1572,0)
IBDF EDIT PRINTER^2970314.1401^^357.94^^^2970314
"KRN",.402,1572,"DIAB",10,0,357.94,0)
.03//$C(27)_"&l0S"
"KRN",.402,1572,"DIAB",12,0,357.94,0)
.04//$C(27)_"&l1S"
"KRN",.402,1572,"DIAB",14,0,357.94,0)
.05//$C(27)_"&l2S"
"KRN",.402,1572,"DR",1,357.94)
.01;.02;I $P($G(^IBE(357.94,+DA,0)),"^",2)=1 S Y="@1";.03;.04;.05;S Y="@99";@1;Q;.03//^S X=27,X=$C(X)_"&l0S";Q;.04//^S X=27,X=$C(X)_"&l1S";Q;.05//^S X=27,X=$C(X)_"&l2S";@99;.06;
"KRN",.402,1925,-1)
0^25
"KRN",.402,1925,0)
IBD CREATE FORM TRACKING^2970321.155^@^357.96^^@^2970423
"KRN",.402,1925,"DR",1,357.96)
.02////^S X=DFN;.03////^S X=APPT;.04////^S X=$S(INTERNAL:FORMTYPE,1:"");.05////^S X=$$NOW^XLFDT;.07////^S X=SOURCE;.08////^S X=$S('INTERNAL:FORMTYPE,1:"");.09////^S X=EXID;.1////^S X=$G(CLIN);.11////1;
"KRN",.402,1925,"DR",1,357.96,1)
I $G(^DPT(DFN,"S",APPT,0)) S Y="@99";.14////1;@99;
"KRN",.402,1925,"ROU")
^IBDX96
"KRN",.402,1925,"ROUOLD")
IBDX96
"KRN",.402,1926,-1)
0^26
"KRN",.402,1926,0)
IBD EDIT FORM TRACKING STATUS^2970321.1628^@^357.96^^@^2970423
"KRN",.402,1926,"DR",1,357.96)
I $P(^IBD(357.96,DA,0),"^",6)'="" S Y="@7";.06////^S X=$$NOW^XLFDT;@7;.11////^S X=$S($G(STAT):STAT,1:2);.12////^S X=$G(ERR);
"KRN",.402,1926,"ROU")
^IBDX97
"KRN",.402,1926,"ROUOLD")
IBDX97
"KRN",.84,3570001,-1)
0^5
"KRN",.84,3570001,0)
3570001^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3570001,1,0)
^^2^2^2970129^^^^
"KRN",.84,3570001,1,1,0)
During Scanning, PCE returned errors or warnings.  These are logged in the
"KRN",.84,3570001,1,2,0)
AICS Error Log so that the need for corrective action can be tracked.
"KRN",.84,3570001,2,0)
^^2^2^2970327^^^^
"KRN",.84,3570001,2,1,0)
SCANNING ERROR:  PCE Returned the following Errors and Warnings for Form ID: |5|.
"KRN",.84,3570001,2,2,0)
Error Code 3570001.
"KRN",.84,3570001,3,0)
^.845^1^1
"KRN",.84,3570001,3,1,0)
5^Form ID or Form Tracking Entry
"KRN",.84,3570001,5,0)
^.841^1^1
"KRN",.84,3570001,5,1,0)
IBDF18E
"KRN",.84,3570001,5,"B","IBDF18E",1)

"KRN",.84,3570002,-1)
0^15
"KRN",.84,3570002,0)
3570002^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3570002,1,0)
^^2^2^2970326^^^
"KRN",.84,3570002,1,1,0)
In Manual Data entry, a data node with no associated data was found and 
"KRN",.84,3570002,1,2,0)
rejected.
"KRN",.84,3570002,2,0)
^^2^2^2970327^^^^
"KRN",.84,3570002,2,1,0)
AICS Error: AICS Manual Data Entry attemped to pass data node |6| with no Data to PCE.
"KRN",.84,3570002,2,2,0)
Error Code 3570002.
"KRN",.84,3570002,3,0)
^.845^3^3
"KRN",.84,3570002,3,1,0)
2^Patient DFN
"KRN",.84,3570002,3,2,0)
3^Appointment Date/Time
"KRN",.84,3570002,3,3,0)
6^Data node
"KRN",.84,3570002,5,0)
^.841^1^1
"KRN",.84,3570002,5,1,0)
IBDFRPC4
"KRN",.84,3570002,5,"B","IBDFRPC4",1)

"KRN",.84,3570003,-1)
0^23
"KRN",.84,3570003,0)
3570003^1^^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3570003,2,0)
^^2^2^2970327^^^^
"KRN",.84,3570003,2,1,0)
During Printing AICS Failed to create a form definition entry in file 357.95.
"KRN",.84,3570003,2,2,0)
Error Code 3570003
"KRN",.84,3570003,3,0)
^.845^^0
"KRN",.84,3570003,5,0)
^.841^1^1
"KRN",.84,3570003,5,1,0)
IBDF18D
"KRN",.84,3570003,5,"B","IBDF18D",1)

"KRN",.84,3570004,-1)
0^26
"KRN",.84,3570004,0)
3570004^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3570004,1,0)
^^2^2^2970318^^^
"KRN",.84,3570004,1,1,0)
This error is used to report that a form was scanned with a no-show, canceled,
"KRN",.84,3570004,1,2,0)
or rescheduled bubble checked.
"KRN",.84,3570004,2,0)
^^6^6^2970327^^^^
"KRN",.84,3570004,2,1,0)
Warning: a '|7|' bubble was checked.  This information was not passed to PCE or Scheduling.  
"KRN",.84,3570004,2,2,0)
Manual update is required.  Error Code 3570004.
"KRN",.84,3570004,2,3,0)

"KRN",.84,3570004,2,4,0)
During scanning of Form ID |5| for patient |2| encounter 
"KRN",.84,3570004,2,5,0)
date |3| AICS has rejected the data because a |7| bubble
"KRN",.84,3570004,2,6,0)
was checked.
"KRN",.84,3570004,3,0)
^.845^4^4
"KRN",.84,3570004,3,1,0)
7^Abort Reason
"KRN",.84,3570004,3,2,0)
2^Patient ien
"KRN",.84,3570004,3,3,0)
3^encounter date/time
"KRN",.84,3570004,3,4,0)
5^Form ID or Form Tracking entry
"KRN",.84,3570004,5,0)
^.841^1^1
"KRN",.84,3570004,5,1,0)
IBDF18E
"KRN",.84,3570004,5,"B","IBDF18E",1)

"KRN",.84,3576001,-1)
0^12
"KRN",.84,3576001,0)
3576001^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3576001,1,0)
^^2^2^2970131^^
"KRN",.84,3576001,1,1,0)
While processing Vital Sign data, the type of vital sign was not found
"KRN",.84,3576001,1,2,0)
as an allowable qualifer for the vital sign package interface.
"KRN",.84,3576001,2,0)
^^7^7^2970327^^^^
"KRN",.84,3576001,2,1,0)
SCANNING ERROR: The type of vital sign |6| is not known to the Package Interface, Error Code 3576001.
"KRN",.84,3576001,2,2,0)

"KRN",.84,3576001,2,3,0)
During scanning of Form ID |5| for patient |2| encounter 
"KRN",.84,3576001,2,4,0)
date |3| AICS tried to process the vital sign type |6| 
"KRN",.84,3576001,2,5,0)
with a value of |7|.  This type of data is not listed as
"KRN",.84,3576001,2,6,0)
an Allowable Qualifier in the Package Interface file.  You
"KRN",.84,3576001,2,7,0)
need to review the package interface entry |10|.
"KRN",.84,3576001,3,0)
^.845^6^6
"KRN",.84,3576001,3,1,0)
2^Patient DFN
"KRN",.84,3576001,3,2,0)
3^Appointment Date/Time
"KRN",.84,3576001,3,3,0)
5^Form ID or Form Tracking entry
"KRN",.84,3576001,3,4,0)
6^Pointer to 359.1
"KRN",.84,3576001,3,5,0)
7^Vital Data Value
"KRN",.84,3576001,3,6,0)
10^Package Interface Entry
"KRN",.84,3576001,5,0)
^.841^1^1
"KRN",.84,3576001,5,1,0)
IBDF18E1
"KRN",.84,3576001,5,"B","IBDF18E1",1)

"KRN",.84,3576002,-1)
0^13
"KRN",.84,3576002,0)
3576002^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3576002,1,0)
^^3^3^2970131^^^^
"KRN",.84,3576002,1,1,0)
While processing data, AICS attempted to process a Data qualifier that
"KRN",.84,3576002,1,2,0)
is not associated with the package interface.  The entry in the Allowable
"KRN",.84,3576002,1,3,0)
Qualifier field may have been deleted.
"KRN",.84,3576002,2,0)
^^7^7^2970327^^^^
"KRN",.84,3576002,2,1,0)
SCANNING ERROR: The Qualifier |11| is not known to the Package Interface, Error Code 3576002.
"KRN",.84,3576002,2,2,0)

"KRN",.84,3576002,2,3,0)
During scanning of Form ID |5| for patient |2| encounter 
"KRN",.84,3576002,2,4,0)
date |3| AICS tried to process a Data Qualifier |11|
"KRN",.84,3576002,2,5,0)
with a value of |7|.  This type of data is not listed as
"KRN",.84,3576002,2,6,0)
an Allowable Qualifier in the Package Interface file.  You
"KRN",.84,3576002,2,7,0)
need to review the package interface entry |10|.
"KRN",.84,3576002,3,0)
^.845^5^5
"KRN",.84,3576002,3,1,0)
2^Patient DFN
"KRN",.84,3576002,3,2,0)
3^Appoinment Date/Time
"KRN",.84,3576002,3,3,0)
5^Form ID or Form Tracking Entry
"KRN",.84,3576002,3,4,0)
10^Package Interface Entry
"KRN",.84,3576002,3,5,0)
11^Data Qualifier Entry
"KRN",.84,3576002,5,0)
^.841^1^1
"KRN",.84,3576002,5,1,0)
IBDF18E1
"KRN",.84,3576002,5,"B","IBDF18E1",1)

"KRN",.84,3576003,-1)
0^14
"KRN",.84,3576003,0)
3576003^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3576003,1,0)
^^2^2^2970131^
"KRN",.84,3576003,1,1,0)
While processing data, AICS found the package interface to be incomplete or
"KRN",.84,3576003,1,2,0)
missing and the data was not completely processed.
"KRN",.84,3576003,2,0)
^^6^6^2970327^^^^
"KRN",.84,3576003,2,1,0)
SCANNING ERROR: The Package Interface |10| is missing or incomplete, Error Code 3576003.
"KRN",.84,3576003,2,2,0)

"KRN",.84,3576003,2,3,0)
During scanning of Form ID |5| for patient |2| 
"KRN",.84,3576003,2,4,0)
encounter date |3| AICS failed to completely process
"KRN",.84,3576003,2,5,0)
data for Package Interface Entry |10|.  This data was
"KRN",.84,3576003,2,6,0)
was not sent to PCE.
"KRN",.84,3576003,3,0)
^.845^4^4
"KRN",.84,3576003,3,1,0)
2^Patient DFN
"KRN",.84,3576003,3,2,0)
3^Appointment Date/Time
"KRN",.84,3576003,3,3,0)
5^Form ID or Form Tracking entry
"KRN",.84,3576003,3,4,0)
10^Package Interface entry.
"KRN",.84,3576003,5,0)
^.841^1^1
"KRN",.84,3576003,5,1,0)
IBDF18E1
"KRN",.84,3576003,5,"B","IBDF18E1",1)

"KRN",.84,3579501,-1)
0^1
"KRN",.84,3579501,0)
3579501^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579501,1,0)
^^3^3^2970318^^^^
"KRN",.84,3579501,1,1,0)
AICS was passed the required variable FORMID (a pointer to file 357.96)
"KRN",.84,3579501,1,2,0)
but the entry in the Form Definition file (357.95) that it points to is
"KRN",.84,3579501,1,3,0)
missing or invalid.
"KRN",.84,3579501,2,0)
^^6^6^2970327^^^^
"KRN",.84,3579501,2,1,0)
SCANNING ERROR: AICS was passed the FORMID |5| but the Form Definition |4| is missing, Error Code 3579501.
"KRN",.84,3579501,2,2,0)

"KRN",.84,3579501,2,3,0)
While Scanning Encounter Form ID |5| for Patient |2| for
"KRN",.84,3579501,2,4,0)
encounter date/time |3| the Form Definition file Entry |4|
"KRN",.84,3579501,2,5,0)
could not be found.  All data from this form was rejected and
"KRN",.84,3579501,2,6,0)
must be manually entered.
"KRN",.84,3579501,3,0)
^.845^4^4
"KRN",.84,3579501,3,1,0)
5^FORM ID or FORM TRACKING NO.
"KRN",.84,3579501,3,2,0)
2^Patient DFN
"KRN",.84,3579501,3,3,0)
3^Appointment Date/Time
"KRN",.84,3579501,3,4,0)
4^Form Definition file entry
"KRN",.84,3579501,5,0)
^.841^1^1
"KRN",.84,3579501,5,1,0)
IBDF18E
"KRN",.84,3579501,5,"B","IBDF18E",1)

"KRN",.84,3579502,-1)
0^2
"KRN",.84,3579502,0)
3579502^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579502,1,0)
^^2^2^2970129^^^^
"KRN",.84,3579502,1,1,0)
During Scanning, AICS was passed a pointer to a bubble in the form definition
"KRN",.84,3579502,1,2,0)
file that was not found.
"KRN",.84,3579502,2,0)
^^7^7^2970327^^^^
"KRN",.84,3579502,2,1,0)
SCANNING ERROR:  Bubble |6| was not found in the Form Definition File |4|, Error Code 3579502
"KRN",.84,3579502,2,2,0)

"KRN",.84,3579502,2,3,0)
During scanning of Form ID |5| for patient |2| encounter 
"KRN",.84,3579502,2,4,0)
date |3| AICS has rejected bubble |6| with the value of "|7|"
"KRN",.84,3579502,2,5,0)
because the entry for the bubble could not be found
"KRN",.84,3579502,2,6,0)
in the entry in the Form Definition File |4|.  The
"KRN",.84,3579502,2,7,0)
data associated with this bubble was not transmitted to PCE.
"KRN",.84,3579502,3,0)
^.845^6^6
"KRN",.84,3579502,3,1,0)
2^Patient (dfn)
"KRN",.84,3579502,3,2,0)
3^Encounter Date/Time
"KRN",.84,3579502,3,3,0)
4^Form Definition Entry
"KRN",.84,3579502,3,4,0)
5^Form Tracking Entry
"KRN",.84,3579502,3,5,0)
6^Bubble number
"KRN",.84,3579502,3,6,0)
7^Bubble Value
"KRN",.84,3579502,5,0)
^.841^1^1
"KRN",.84,3579502,5,1,0)
IBDF18E
"KRN",.84,3579502,5,"B","IBDF18E",1)

"KRN",.84,3579503,-1)
0^6
"KRN",.84,3579503,0)
3579503^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579503,1,0)
^^2^2^2970129^
"KRN",.84,3579503,1,1,0)
The AICS Scanning software passed an entry to the server software that
"KRN",.84,3579503,1,2,0)
could not be found in the Forms Definition File.
"KRN",.84,3579503,2,0)
^^6^6^2970327^^^
"KRN",.84,3579503,2,1,0)
SCANNING ERROR:  Handprint field |6| was not found in Form Tracking Entry |4|, Error Code 3579503.
"KRN",.84,3579503,2,2,0)

"KRN",.84,3579503,2,3,0)
While scanning data for patient |2| on Form ID: |5| for 
"KRN",.84,3579503,2,4,0)
encounter date/time of |3|, the hand print field |6|
"KRN",.84,3579503,2,5,0)
with a value of |7| was not found in the Form Tracking file
"KRN",.84,3579503,2,6,0)
entry |4|.  The data for this field was not sent to PCE.
"KRN",.84,3579503,3,0)
^.845^6^6
"KRN",.84,3579503,3,1,0)
2^Patient DFN
"KRN",.84,3579503,3,2,0)
3^Appointment Date/time
"KRN",.84,3579503,3,3,0)
4^Form Definition file Entry
"KRN",.84,3579503,3,4,0)
5^Form Tracking file Entry
"KRN",.84,3579503,3,5,0)
6^Hand Print field Number
"KRN",.84,3579503,3,6,0)
7^Hand Print field Value
"KRN",.84,3579503,5,0)
^.841^1^1
"KRN",.84,3579503,5,1,0)
IBDF18E
"KRN",.84,3579503,5,"B","IBDF18E",1)

"KRN",.84,3579504,-1)
0^7
"KRN",.84,3579504,0)
3579504^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579504,1,0)
^^3^3^2970129^^
"KRN",.84,3579504,1,1,0)
During the processing of a hand print field by the AICS server software 
"KRN",.84,3579504,1,2,0)
a hand print field failed its input transform check and was not passed to
"KRN",.84,3579504,1,3,0)
PCE.
"KRN",.84,3579504,2,0)
^^6^6^2970327^^^^
"KRN",.84,3579504,2,1,0)
SCANNING ERROR:  |14| Hand Print data with a value of |7| is invalid, Error Code 3579504.
"KRN",.84,3579504,2,2,0)

"KRN",.84,3579504,2,3,0)
While processing Form ID: |5| for patient |2| for the
"KRN",.84,3579504,2,4,0)
encounter date/time of |3| a |14| hand print field
"KRN",.84,3579504,2,5,0)
with a value of |7| was determined to be invalid.  
"KRN",.84,3579504,2,6,0)
The value was not passed to PCE.
"KRN",.84,3579504,3,0)
^.845^6^6
"KRN",.84,3579504,3,1,0)
2^Patient DFN
"KRN",.84,3579504,3,2,0)
3^Appointment Date/Time
"KRN",.84,3579504,3,3,0)
5^Form ID or Form Tracking Entry
"KRN",.84,3579504,3,4,0)
6^Hand Print field no.
"KRN",.84,3579504,3,5,0)
7^Hand Print field value
"KRN",.84,3579504,3,6,0)
14^Data type from 359.1
"KRN",.84,3579504,5,0)
^.841^1^1
"KRN",.84,3579504,5,1,0)
IBDF18E
"KRN",.84,3579504,5,"B","IBDF18E",1)

"KRN",.84,3579505,-1)
0^9
"KRN",.84,3579505,0)
3579505^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579505,1,0)
^^3^3^2970130^^
"KRN",.84,3579505,1,1,0)
AICS determined that a diagnosis to be passed to PCE was not set to either
"KRN",.84,3579505,1,2,0)
primary or secondary and was automatically set to secondary to prevent an
"KRN",.84,3579505,1,3,0)
error.
"KRN",.84,3579505,2,0)
^^8^8^2970327^^^^
"KRN",.84,3579505,2,1,0)
SCANNING ERROR: Diagnosis Entry "|12|" was sent to PCE as Secondary, Error Code 3579505.
"KRN",.84,3579505,2,2,0)

"KRN",.84,3579505,2,3,0)
During scanning of Form ID |5| for patient |2| encounter 
"KRN",.84,3579505,2,4,0)
date |3| AICS determined that the diagnosis |12| was not
"KRN",.84,3579505,2,5,0)
specified as Primary or Seconday.  To prevent an error the Diagnosis
"KRN",.84,3579505,2,6,0)
was sent to PCE as Secondary.  Use the PCE options to edit if necessary.
"KRN",.84,3579505,2,7,0)
You may also need to review the diagnosis data qualifiers on 
"KRN",.84,3579505,2,8,0)
form |9|.
"KRN",.84,3579505,3,0)
^.845^5^5
"KRN",.84,3579505,3,1,0)
2^Patient DFN
"KRN",.84,3579505,3,2,0)
3^Appointment date/Time
"KRN",.84,3579505,3,3,0)
5^Form ID or Form Tracking entry.
"KRN",.84,3579505,3,4,0)
9^Encounter Form Name
"KRN",.84,3579505,3,5,0)
12^Text of Diagnosis on Form
"KRN",.84,3579505,5,0)
^.841^1^1
"KRN",.84,3579505,5,1,0)
IBDF18E
"KRN",.84,3579505,5,"B","IBDF18E",1)

"KRN",.84,3579506,-1)
0^10
"KRN",.84,3579506,0)
3579506^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579506,1,0)
^^2^2^2970130^^^^
"KRN",.84,3579506,1,1,0)
During scanning, AICS Failed to convert the ICD9 code associated with a
"KRN",.84,3579506,1,2,0)
clinical lexicon term to a pointer to the ICD9 code.
"KRN",.84,3579506,2,0)
^^6^6^2970327^^^^
"KRN",.84,3579506,2,1,0)
SCANNING ERROR: AICS failed to convert Clinical Lexicon Term "|12|" to an ICD9 code, Error Code 3579506.
"KRN",.84,3579506,2,2,0)

"KRN",.84,3579506,2,3,0)
During scanning of Form ID |5| for patient |2| encounter 
"KRN",.84,3579506,2,4,0)
date |3| AICS has failed to convert Clinical Lexicon Term 
"KRN",.84,3579506,2,5,0)
number |7| to a valid ICD9 code.  The diagnosis associated
"KRN",.84,3579506,2,6,0)
with this term probably caused an error in PCE.
"KRN",.84,3579506,3,0)
^.845^6^6
"KRN",.84,3579506,3,1,0)
2^Patient DFN
"KRN",.84,3579506,3,2,0)
3^Appointment Date/Time
"KRN",.84,3579506,3,3,0)
4^Form Definition Entry No.
"KRN",.84,3579506,3,4,0)
5^Form ID or Form Tracking No.
"KRN",.84,3579506,3,5,0)
7^Clinical Lexicon Pointer
"KRN",.84,3579506,3,6,0)
12^Text appearing on Form
"KRN",.84,3579506,5,0)
^.841^1^1
"KRN",.84,3579506,5,1,0)
IBDF18E
"KRN",.84,3579506,5,"B","IBDF18E",1)

"KRN",.84,3579600,-1)
0^24
"KRN",.84,3579600,0)
3579600^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579600,1,0)
^^2^2^2970304^^^
"KRN",.84,3579600,1,1,0)
AICS failed to create an entry in the Forms Tracking file, probably
"KRN",.84,3579600,1,2,0)
during the printing of a form.  The form ID may be zero.
"KRN",.84,3579600,2,0)
^^3^3^2970327^^^^
"KRN",.84,3579600,2,1,0)
Printing Error:  During the printing of an encounter form AICS failed to
"KRN",.84,3579600,2,2,0)
create an entry in the Forms Tracking file for patient |2| on |3|.
"KRN",.84,3579600,2,3,0)
Error Code 3579600
"KRN",.84,3579600,3,0)
^.845^2^2
"KRN",.84,3579600,3,1,0)
2^Patient internal entry
"KRN",.84,3579600,3,2,0)
3^Appointment date time
"KRN",.84,3579600,5,0)
^.841^1^1
"KRN",.84,3579600,5,1,0)
IBDF18C
"KRN",.84,3579600,5,"B","IBDF18C",1)

"KRN",.84,3579601,-1)
0^3
"KRN",.84,3579601,0)
3579601^1^^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579601,1,0)
^^2^2^2970318^^^^
"KRN",.84,3579601,1,1,0)
A call was made to send data to PCE but the required variable, FORMID,
"KRN",.84,3579601,1,2,0)
was not passed.
"KRN",.84,3579601,2,0)
^^2^2^2970327^^^^
"KRN",.84,3579601,2,1,0)
SCANNING ERROR: The required variable FORMID was not passed.  No Data processed.
"KRN",.84,3579601,2,2,0)
Error Code 3579601.
"KRN",.84,3579601,5,0)
^.841^1^1
"KRN",.84,3579601,5,1,0)
IBDF18E
"KRN",.84,3579601,5,"B","IBDF18E",1)

"KRN",.84,3579602,-1)
0^4
"KRN",.84,3579602,0)
3579602^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579602,1,0)
^^3^3^2970411^^^^
"KRN",.84,3579602,1,1,0)
During scanning AICS was passed data to find a Dynamic bubble in the Form
"KRN",.84,3579602,1,2,0)
Tracking file that couldn't be found.  This may have resulted from marking
"KRN",.84,3579602,1,3,0)
a bubble in a dynamic list that does not have data associated with it.
"KRN",.84,3579602,2,0)
^^9^9^2970411^^^^
"KRN",.84,3579602,2,1,0)
SCANNING ERROR:  Dynamic Bubble |6| was not found in the Form Tracking File |5|, probably as a result of marking a bubble with no associated data. Error Code 3579602.
"KRN",.84,3579602,2,2,0)

"KRN",.84,3579602,2,3,0)
During scanning of Form ID |5| for patient |2| encounter 
"KRN",.84,3579602,2,4,0)
date |3| AICS has rejected dynmic bubble |6| with the value of "|7|"
"KRN",.84,3579602,2,5,0)
because the entry for the Dynamic bubble could not be found
"KRN",.84,3579602,2,6,0)
in the entry in the Form Tracking File.  This is likely to be the result
"KRN",.84,3579602,2,7,0)
of marking a bubble with no associated data.  Review the form and check 
"KRN",.84,3579602,2,8,0)
for written data that may be missed.  The
"KRN",.84,3579602,2,9,0)
data associated with this bubble was not transmitted to PCE. 
"KRN",.84,3579602,3,0)
^.845^5^5
"KRN",.84,3579602,3,1,0)
2^Patient DFN
"KRN",.84,3579602,3,2,0)
3^Encounter Date/Time
"KRN",.84,3579602,3,3,0)
5^Form Tracking ID
"KRN",.84,3579602,3,4,0)
6^Dynamic Bubble ID
"KRN",.84,3579602,3,5,0)
7^Dynamic Bubble Value
"KRN",.84,3579602,5,0)
^.841^1^1
"KRN",.84,3579602,5,1,0)
IBDF18E
"KRN",.84,3579602,5,"B","IBDF18E",1)

"KRN",.84,3579603,-1)
0^8
"KRN",.84,3579603,0)
3579603^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579603,1,0)
^^2^2^2970130^
"KRN",.84,3579603,1,1,0)
The encounter provider was not specified as primary or secondary.  To prevent
"KRN",.84,3579603,1,2,0)
and error in PCE it was changed by AICS to Secondary.
"KRN",.84,3579603,2,0)
^^8^8^2970327^^^^
"KRN",.84,3579603,2,1,0)
SCANNING ERROR: The Encounter Provider |7| was set to Secondary, Error Code 3570603.
"KRN",.84,3579603,2,2,0)

"KRN",.84,3579603,2,3,0)
During scanning of Form ID |5| for patient |2| encounter 
"KRN",.84,3579603,2,4,0)
date |3| the encounter provider |7| was not specified as primary or
"KRN",.84,3579603,2,5,0)
secondary.  In order to prevent an error in PCE AICS has set the
"KRN",.84,3579603,2,6,0)
encounter provider as secondary.  Use the PCE data entry options to
"KRN",.84,3579603,2,7,0)
correct this as necessary.  You may also need to update the Data Qualifiers
"KRN",.84,3579603,2,8,0)
in the Provider block on Form |9|.
"KRN",.84,3579603,3,0)
^.845^4^4
"KRN",.84,3579603,3,1,0)
2^Patient DFN
"KRN",.84,3579603,3,2,0)
3^Encounter Date/Time
"KRN",.84,3579603,3,3,0)
5^Form ID or Form Tracking Entry
"KRN",.84,3579603,3,4,0)
9^Encounter Form Name
"KRN",.84,3579603,5,0)
^.841^1^1
"KRN",.84,3579603,5,1,0)
IBDF18E
"KRN",.84,3579603,5,"B","IBDF18E",1)

"KRN",.84,3579604,-1)
0^16
"KRN",.84,3579604,0)
3579604^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579604,1,0)
^^1^1^2970210^^^^
"KRN",.84,3579604,1,1,0)
During scanning a form id of zero or null was passed to aics.
"KRN",.84,3579604,2,0)
^^3^3^2970327^^^^
"KRN",.84,3579604,2,1,0)
SCANNING ERROR: A form ID of "|5|" was passed to AICS and is invalid.  No other information can be determined.  Error code 3579604.
"KRN",.84,3579604,2,2,0)

"KRN",.84,3579604,2,3,0)
No data was passed to PCE.
"KRN",.84,3579604,3,0)
^.845^1^1
"KRN",.84,3579604,3,1,0)
5^Form ID or Form Tracking number
"KRN",.84,3579604,5,0)
^.841^3^3
"KRN",.84,3579604,5,1,0)
IBDFRPC3
"KRN",.84,3579604,5,2,0)
IBDFBK2
"KRN",.84,3579604,5,3,0)
IBDFBKR
"KRN",.84,3579604,5,"B","IBDFBK2",2)

"KRN",.84,3579604,5,"B","IBDFBKR",3)

"KRN",.84,3579604,5,"B","IBDFRPC3",1)

"KRN",.84,3579605,-1)
0^17
"KRN",.84,3579605,0)
3579605^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579605,1,0)
^^3^3^2970210^^^^
"KRN",.84,3579605,1,1,0)
A form ID was passed to AICS that couldn't be found in the Form Tracking file.
"KRN",.84,3579605,1,2,0)
This may be an Encounter form from another UCI or another VAMC, or the
"KRN",.84,3579605,1,3,0)
entry in form tracking may be missing, or the scanner read the Form ID wrong.
"KRN",.84,3579605,2,0)
^^4^4^2970327^^^^
"KRN",.84,3579605,2,1,0)
SCANNING ERROR: AICS was passed a Form ID of "|5|" and this entry does not exist in the Form Tracking file.  
"KRN",.84,3579605,2,2,0)

"KRN",.84,3579605,2,3,0)
No other information about the form was available.  No data was passed to
"KRN",.84,3579605,2,4,0)
PCE.  Error Code 3579605.
"KRN",.84,3579605,3,0)
^.845^1^1
"KRN",.84,3579605,3,1,0)
5^Form ID or Form Tracking number
"KRN",.84,3579605,5,0)
^.841^3^3
"KRN",.84,3579605,5,1,0)
IBDFRPC3
"KRN",.84,3579605,5,2,0)
IBDFBK2
"KRN",.84,3579605,5,3,0)
IBDFBKR
"KRN",.84,3579605,5,"B","IBDFBK2",2)

"KRN",.84,3579605,5,"B","IBDFBKR",3)

"KRN",.84,3579605,5,"B","IBDFRPC3",1)

"KRN",.84,3579606,-1)
0^18
"KRN",.84,3579606,0)
3579606^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579606,1,0)
^^2^2^2970210^^^
"KRN",.84,3579606,1,1,0)
During scanning a page value of zero or null was passed during the second
"KRN",.84,3579606,1,2,0)
recognition.  Data is found only on positive numbered pages greater than zero.
"KRN",.84,3579606,2,0)
^^5^5^2970327^^^^
"KRN",.84,3579606,2,1,0)
SCANNING ERROR: A page number of "|17|" (zero or null) is not valid as containing data.  Error Code 3579606.
"KRN",.84,3579606,2,2,0)

"KRN",.84,3579606,2,3,0)
During scanning of Form ID |5| for patient |2| encounter 
"KRN",.84,3579606,2,4,0)
date |3| AICS a page value of zero or null was passed
"KRN",.84,3579606,2,5,0)
with data associated with it.  No data was sent to PCE.
"KRN",.84,3579606,3,0)
^.845^4^4
"KRN",.84,3579606,3,1,0)
2^Patient ien
"KRN",.84,3579606,3,2,0)
3^Appointment Date/time
"KRN",.84,3579606,3,3,0)
5^Form ID or Form tracking entry
"KRN",.84,3579606,3,4,0)
17^Page number
"KRN",.84,3579606,5,0)
^.841^2^2
"KRN",.84,3579606,5,1,0)
IBDFBK2
"KRN",.84,3579606,5,2,0)
IBDFBKR
"KRN",.84,3579606,5,"B","IBDFBK2",1)

"KRN",.84,3579606,5,"B","IBDFBKR",2)

"KRN",.84,3579607,-1)
0^19
"KRN",.84,3579607,0)
3579607^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579607,1,0)
^^2^2^2970210^^
"KRN",.84,3579607,1,1,0)
During the second recognition AICS was passed a FORM Definition entry
"KRN",.84,3579607,1,2,0)
of null or zero.
"KRN",.84,3579607,2,0)
^^5^5^2970327^^^^
"KRN",.84,3579607,2,1,0)
SCANNING ERROR: AICS was passed a Form Definition value of "|4|" and is invalid.  Error Code 3579607.
"KRN",.84,3579607,2,2,0)

"KRN",.84,3579607,2,3,0)
During scanning of Form ID |5| for patient |2| encounter 
"KRN",.84,3579607,2,4,0)
date |3| AICS was passed a form definition value of null or
"KRN",.84,3579607,2,5,0)
zero and this is invalid.  No data was passed to PCE.
"KRN",.84,3579607,3,0)
^.845^4^4
"KRN",.84,3579607,3,1,0)
2^Patient IEN
"KRN",.84,3579607,3,2,0)
3^Appointment Date/Time
"KRN",.84,3579607,3,3,0)
4^Form Definition
"KRN",.84,3579607,3,4,0)
5^Form ID or Form Tracking entry
"KRN",.84,3579607,5,0)
^.841^2^2
"KRN",.84,3579607,5,1,0)
IBDFBK2
"KRN",.84,3579607,5,2,0)
IBDFBKR
"KRN",.84,3579607,5,"B","IBDFBK2",1)

"KRN",.84,3579607,5,"B","IBDFBKR",2)

"KRN",.84,3579608,-1)
0^20
"KRN",.84,3579608,0)
3579608^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579608,1,0)
^^2^2^2970210^^
"KRN",.84,3579608,1,1,0)
AICS was passed a form id and form definition number that does not
"KRN",.84,3579608,1,2,0)
agree with the entry in Forms Tracking.
"KRN",.84,3579608,2,0)
^^5^5^2970327^^^^
"KRN",.84,3579608,2,1,0)
SCANNING ERROR: The Form Definition of |4| doesn't match the Form Definition found in Forms Tracking for entry |5|.  Error Code 3579608
"KRN",.84,3579608,2,2,0)

"KRN",.84,3579608,2,3,0)
During scanning of Form ID |5| for patient |2| encounter 
"KRN",.84,3579608,2,4,0)
date |3| AICS was passed a Form Definition and Form ID that
"KRN",.84,3579608,2,5,0)
do not agree with the data found in Forms Tracking.
"KRN",.84,3579608,3,0)
^.845^4^4
"KRN",.84,3579608,3,1,0)
2^Patient IEN
"KRN",.84,3579608,3,2,0)
3^Appointment Date/time
"KRN",.84,3579608,3,3,0)
4^Form Definition
"KRN",.84,3579608,3,4,0)
5^Form ID or Forms Tracking entry
"KRN",.84,3579608,5,0)
^.841^2^2
"KRN",.84,3579608,5,1,0)
IBDFBK2
"KRN",.84,3579608,5,2,0)
IBDFBKR
"KRN",.84,3579608,5,"B","IBDFBK2",1)

"KRN",.84,3579608,5,"B","IBDFBKR",2)

"KRN",.84,3579609,-1)
0^21
"KRN",.84,3579609,0)
3579609^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579609,1,0)
^^3^3^2970210^^
"KRN",.84,3579609,1,1,0)
During the second recognition, data was passed to AICS that was from a page
"KRN",.84,3579609,1,2,0)
number that is not listed as scannable in the form tracking file.
"KRN",.84,3579609,1,3,0)

"KRN",.84,3579609,2,0)
^^5^5^2970327^^^^
"KRN",.84,3579609,2,1,0)
SCANNING ERROR: Data from Non-Scannable Page |17| was passed to AICS.  Error Code 3579609.
"KRN",.84,3579609,2,2,0)

"KRN",.84,3579609,2,3,0)
During scanning of Form ID |5| for patient |2| encounter 
"KRN",.84,3579609,2,4,0)
date |3| AICS received data from a page not listed as scannable
"KRN",.84,3579609,2,5,0)
in the Form Tracking file.
"KRN",.84,3579609,3,0)
^.845^4^4
"KRN",.84,3579609,3,1,0)
2^Patient ien
"KRN",.84,3579609,3,2,0)
3^Appointment Date
"KRN",.84,3579609,3,3,0)
5^Form ID or Form Tracking Number
"KRN",.84,3579609,3,4,0)
17^Page Number
"KRN",.84,3579609,5,0)
^.841^2^2
"KRN",.84,3579609,5,1,0)
IBDFBKR
"KRN",.84,3579609,5,2,0)
IBDFBK2
"KRN",.84,3579609,5,"B","IBDFBK2",2)

"KRN",.84,3579609,5,"B","IBDFBKR",1)

"KRN",.84,3579610,-1)
0^22
"KRN",.84,3579610,0)
3579610^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579610,1,0)
^^3^3^2970210^^^
"KRN",.84,3579610,1,1,0)
During scanning, while storing data in Form Tracking from a scanned page
"KRN",.84,3579610,1,2,0)
AICS was unable to store the data in the Forms Tracking file because another
"KRN",.84,3579610,1,3,0)
user was editing the entry at the same time.
"KRN",.84,3579610,2,0)
^^6^6^2970327^^^^
"KRN",.84,3579610,2,1,0)
SCANNING ERROR: AICS was unable to Store partial form data in Forms Tracking for Form ID: |5|.  Error Code 3579610.
"KRN",.84,3579610,2,2,0)

"KRN",.84,3579610,2,3,0)
During scanning of Form ID |5| for patient |2| encounter 
"KRN",.84,3579610,2,4,0)
date |3| AICS received data for Page |17| that needed to be stored
"KRN",.84,3579610,2,5,0)
in Forms Tracking but was unable to store the data because another
"KRN",.84,3579610,2,6,0)
user was editing the entry.
"KRN",.84,3579610,3,0)
^.845^4^4
"KRN",.84,3579610,3,1,0)
2^Patient ien
"KRN",.84,3579610,3,2,0)
3^Appointment Date/time
"KRN",.84,3579610,3,3,0)
5^Form ID or Forms Tracking entry
"KRN",.84,3579610,3,4,0)
17^Page number
"KRN",.84,3579610,5,0)
^.841^2^2
"KRN",.84,3579610,5,1,0)
IBDFBK2^
"KRN",.84,3579610,5,2,0)
IBDFBKR
"KRN",.84,3579610,5,"B","IBDFBK2",1)

"KRN",.84,3579610,5,"B","IBDFBKR",2)

"KRN",.84,3579611,-1)
0^25
"KRN",.84,3579611,0)
3579611^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3579611,1,0)
^^4^4^2970320^^^
"KRN",.84,3579611,1,1,0)
During the printing of an encounter form, AICS determined that the form
"KRN",.84,3579611,1,2,0)
was also being edited.  This can cause the printing of the form to not be
"KRN",.84,3579611,1,3,0)
accurate and for the compilation of the form to be inaccurate.  The
"KRN",.84,3579611,1,4,0)
form should be recompiled to correct any possible problems.
"KRN",.84,3579611,2,0)
^^4^4^2970327^^^^
"KRN",.84,3579611,2,1,0)
Printing Error:  During the printing of Encounter Form ID |5| for 
"KRN",.84,3579611,2,2,0)
patient |2| for appointment date |3| the encounter form was locked.
"KRN",.84,3579611,2,3,0)

"KRN",.84,3579611,2,4,0)
This encounter form should be recompiled and reprinted.  Error Code 3579611.
"KRN",.84,3579611,3,0)
^.845^4^4
"KRN",.84,3579611,3,1,0)
2^patient dfn
"KRN",.84,3579611,3,2,0)
3^appointment date time
"KRN",.84,3579611,3,3,0)
4^form definition entry
"KRN",.84,3579611,3,4,0)
5^Form ID or Form Tracking entry.
"KRN",.84,3590000.1,-1)
0^27
"KRN",.84,3590000.1,0)
3590000.1^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3590000.1,1,0)
^^3^3^2970418^^^
"KRN",.84,3590000.1,1,1,0)
During scanning, when a user cancels recognition of a form, this error is
"KRN",.84,3590000.1,1,2,0)
sent to the server for recording so that the record of incomplete forms is
"KRN",.84,3590000.1,1,3,0)
kept in one place.
"KRN",.84,3590000.1,2,0)
^^3^3^2970418^^^^
"KRN",.84,3590000.1,2,1,0)
Warning: During scanning of Form ID: |5| the recognition was canceled
"KRN",.84,3590000.1,2,2,0)
in Paper Keyboard.  This form should be re-scanned or the data manually
"KRN",.84,3590000.1,2,3,0)
entered.  No data was sent to PCE.  Error Code 3590000.1
"KRN",.84,3590000.1,3,0)
^.845^1^1
"KRN",.84,3590000.1,3,1,0)
5^FORM ID OR FORM TRACKING NUMBER
"KRN",.84,3591001,-1)
0^11
"KRN",.84,3591001,0)
3591001^1^y^AUTOMATED INFO COLLECTION SYS
"KRN",.84,3591001,1,0)
^^2^2^2970131^^^
"KRN",.84,3591001,1,1,0)
AICS tried to process a Vitals piece of data and a required data element
"KRN",.84,3591001,1,2,0)
was missing, specifially the type of vital sign data was missing.
"KRN",.84,3591001,2,0)
^^6^6^2970327^^^^
"KRN",.84,3591001,2,1,0)
SCANNING ERROR: The type of Vitals Data is required and Missing, Error Code 
"KRN",.84,3591001,2,2,0)
3591001.
"KRN",.84,3591001,2,3,0)

"KRN",.84,3591001,2,4,0)
During scanning of Form ID |5| for patient |2| encounter 
"KRN",.84,3591001,2,5,0)
date |3| AICS attempted to process a Vital Sign and the type of
"KRN",.84,3591001,2,6,0)
Vitals Sign was missing.
"KRN",.84,3591001,3,0)
^.845^3^3
"KRN",.84,3591001,3,1,0)
2^Patient DFN
"KRN",.84,3591001,3,2,0)
3^Appointment Date/Time
"KRN",.84,3591001,3,3,0)
5^Form ID or Form Tracking No.
"KRN",.84,3591001,5,0)
^.841^1^1
"KRN",.84,3591001,5,1,0)
IBDF18E1
"KRN",.84,3591001,5,"B","IBDF18E1",1)

"KRN",19,3383,-1)
0^48
"KRN",19,3383,0)
IB OUTPUT MOST COMMON OPT CPT^Most Commonly used Outpatient CPT Codes^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,3383,1,0)
^^3^3^2960523^^^^
"KRN",19,3383,1,1,0)
This option will list the most common Ambulatory Procedures and 
"KRN",19,3383,1,2,0)
Ambulatory Surgeries performed in a date range for a given set of clinics.
"KRN",19,3383,1,3,0)
This can be used to help build the CPT Check-off Sheets.
"KRN",19,3383,25)
IBOCNC
"KRN",19,3383,"U")
MOST COMMONLY USED OUTPATIENT 
"KRN",19,4093,-1)
0^23
"KRN",19,4093,0)
IBDF ENCOUNTER FORM^Encounter Forms^^M^^^^^^^y^AUTOMATED INFO COLLECTION SYS
"KRN",19,4093,1,0)
^^1^1^2930930^
"KRN",19,4093,1,1,0)
Contains all of the encounter form options.
"KRN",19,4093,10,0)
^19.01PI^13^7
"KRN",19,4093,10,5,0)
4106^PM^3
"KRN",19,4093,10,5,"^")
IBDF PRINT MANAGER
"KRN",19,4093,10,8,0)
4178^TK^4
"KRN",19,4093,10,8,"^")
IBDF EDIT TOOL KIT
"KRN",19,4093,10,9,0)
4179^PR^2
"KRN",19,4093,10,9,"^")
IBDF PRINT OPTIONS
"KRN",19,4093,10,10,0)
4181^EE^1
"KRN",19,4093,10,10,"^")
IBDF EDIT ENCOUNTER FORMS
"KRN",19,4093,10,11,0)
4107^IR^5
"KRN",19,4093,10,11,"^")
IBDF IRM OPTIONS
"KRN",19,4093,10,12,0)
5278^RU
"KRN",19,4093,10,12,"^")
IBDF REPORTS MENU
"KRN",19,4093,10,13,0)
6068^DE
"KRN",19,4093,10,13,"^")
IBD MANUAL DATA ENTRY MENU
"KRN",19,4093,99)
56767,38709
"KRN",19,4093,99.1)
57012,80851
"KRN",19,4093,"U")
ENCOUNTER FORMS
"KRN",19,4094,-1)
0^9
"KRN",19,4094,0)
IBDF CLINIC SETUP/EDIT FORMS^Clinic Setup/Edit Forms^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4094,1,0)
^^1^1^2960109^^^^
"KRN",19,4094,1,1,0)
The form generator for creating encounter forms.
"KRN",19,4094,20)
D ^IBDF6
"KRN",19,4094,"U")
CLINIC SETUP/EDIT FORMS
"KRN",19,4095,-1)
0^32
"KRN",19,4095,0)
IBDF PRINT ENCOUNTER FORMS^Print Encounter Forms for Appointments^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4095,1,0)
^^2^2^2960405^^^^
"KRN",19,4095,1,1,0)
For printing an encounter form for appointments, either by division,
"KRN",19,4095,1,2,0)
clinic, or patient.
"KRN",19,4095,20)
D ^IBDF1B
"KRN",19,4095,"U")
PRINT ENCOUNTER FORMS FOR APPO
"KRN",19,4096,-1)
0^31
"KRN",19,4096,0)
IBDF PRINT BLNK ENCOUNTER FORM^Print Blank Encounter Form^^A^^^^^^^y^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4096,1,0)
^^2^2^2960405^^^^
"KRN",19,4096,1,1,0)
This option allows the user to select a clinic, and if an encounter form
"KRN",19,4096,1,2,0)
is defined for use with an embossed patient card the form will be printed.
"KRN",19,4096,20)
D MAIN^IBDF1A(0)
"KRN",19,4096,"U")
PRINT BLANK ENCOUNTER FORM
"KRN",19,4098,-1)
0^36
"KRN",19,4098,0)
IBDF PRNT FORM W/DATA NO APPT.^Print Form w/Patient Data, No Appt^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4098,1,0)
^^3^3^2960405^^^^
"KRN",19,4098,1,1,0)
 
"KRN",19,4098,1,2,0)
Allows an encounter form to be printed with patient data, but does not ask
"KRN",19,4098,1,3,0)
that an appt. be selected. Uses current time as the appointment time.
"KRN",19,4098,20)
D MAIN^IBDF1A(1)
"KRN",19,4098,"U")
PRINT FORM W/PATIENT DATA, NO 
"KRN",19,4102,-1)
0^11
"KRN",19,4102,0)
IBDF DEFINE AVAILABLE REPORT^Define Available Report (not Health Summaries)^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4102,1,0)
^^2^2^2930623^
"KRN",19,4102,1,1,0)
Allows reports, other than Health Summaries, to be made available for
"KRN",19,4102,1,2,0)
use by the print manager.
"KRN",19,4102,20)
D EDITRPRT^IBDF11(0)
"KRN",19,4102,"U")
DEFINE AVAILABLE REPORT (NOT H
"KRN",19,4103,-1)
0^12
"KRN",19,4103,0)
IBDF DEFINE AVLABLE HLTH SMRY^Define Available Health Summary^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4103,1,0)
^^1^1^2970325^^^^
"KRN",19,4103,1,1,0)
Allows a Health Summary to be made available for use by the print manager.
"KRN",19,4103,20)
D EDITRPRT^IBDF11(1)
"KRN",19,4103,"U")
DEFINE AVAILABLE HEALTH SUMMAR
"KRN",19,4104,-1)
0^14
"KRN",19,4104,0)
IBDF EDIT DIVISION REPORTS^Edit Division Reports^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4104,1,0)
^^1^1^2960111^^
"KRN",19,4104,1,1,0)
Used to select reports that should print for the entire division.
"KRN",19,4104,20)
D DIVSUP^IBDF11
"KRN",19,4104,99)
55762,42279
"KRN",19,4104,"U")
EDIT DIVISION REPORTS
"KRN",19,4105,-1)
0^13
"KRN",19,4105,0)
IBDF EDIT CLINIC REPORTS^Edit Clinic Reports^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4105,1,0)
^^1^1^2970324^^^^
"KRN",19,4105,1,1,0)
Used to select reports that should print for the clinic.
"KRN",19,4105,20)
D CLNCSUP^IBDF11
"KRN",19,4105,"U")
EDIT CLINIC REPORTS
"KRN",19,4106,-1)
0^33
"KRN",19,4106,0)
IBDF PRINT MANAGER^Print Manager^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,4106,1,0)
^^3^3^2951205^^^^
"KRN",19,4106,1,1,0)
Contains all the options pertaining to the print manager, except for the
"KRN",19,4106,1,2,0)
IBDF DEFINE AVLABLE HLTH SMRY option - that option allows the user to
"KRN",19,4106,1,3,0)
enter mumps code, so it must be limited to IRM use.
"KRN",19,4106,10,0)
^19.01PI^9^5
"KRN",19,4106,10,1,0)
4104^ED^1
"KRN",19,4106,10,1,"^")
IBDF EDIT DIVISION REPORTS
"KRN",19,4106,10,2,0)
4105^EC^2
"KRN",19,4106,10,2,"^")
IBDF EDIT CLINIC REPORTS
"KRN",19,4106,10,4,0)
4103^DH^4
"KRN",19,4106,10,4,"^")
IBDF DEFINE AVLABLE HLTH SMRY
"KRN",19,4106,10,8,0)
4916^SQ
"KRN",19,4106,10,8,"^")
IBDF SETUP AUTO CLINIC PRINT
"KRN",19,4106,10,9,0)
4115^RC
"KRN",19,4106,10,9,"^")
IBDF REPORT CLINIC SETUPS
"KRN",19,4106,99)
56671,50883
"KRN",19,4106,"U")
PRINT MANAGER
"KRN",19,4107,-1)
0^26
"KRN",19,4107,0)
IBDF IRM OPTIONS^Encounter Form IRM Options^^M^^IBDF IRM^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,4107,1,0)
^^3^3^2960229^^^^
"KRN",19,4107,1,1,0)
The basic intent of this menu is to contain the options that should only
"KRN",19,4107,1,2,0)
be available to those technical users that can program in MUMPS, which is
"KRN",19,4107,1,3,0)
a requirement, for example, when, adding a new PACKAGE INTERFACE.
"KRN",19,4107,10,0)
^19.01PI^11^8
"KRN",19,4107,10,3,0)
4119^EP^3
"KRN",19,4107,10,3,"^")
IBDF EDIT PACKAGE INTERFACE
"KRN",19,4107,10,4,0)
4120^EM^4
"KRN",19,4107,10,4,"^")
IBDF EDIT MARKING AREA
"KRN",19,4107,10,5,0)
4102^DR^5
"KRN",19,4107,10,5,"^")
IBDF DEFINE AVAILABLE REPORT
"KRN",19,4107,10,7,0)
4124^IX^7
"KRN",19,4107,10,7,"^")
IBDF IMPORT/EXPORT UTILITY
"KRN",19,4107,10,8,0)
4245^MC^8
"KRN",19,4107,10,8,"^")
IBDF MISCELLANEOUS CLEANUP
"KRN",19,4107,10,9,0)
5173^PF
"KRN",19,4107,10,9,"^")
IBDF MANUAL PURGE FORM TRACK
"KRN",19,4107,10,10,0)
5176^RF^7
"KRN",19,4107,10,10,"^")
IBDF RECOMPILE ALL FORMS
"KRN",19,4107,10,11,0)
5873^DE
"KRN",19,4107,10,11,"^")
IBDF EDIT PRINTERS
"KRN",19,4107,99)
56672,30824
"KRN",19,4107,"U")
ENCOUNTER FORM IRM OPTIONS
"KRN",19,4108,-1)
0^22
"KRN",19,4108,0)
IBDF EDIT TOOL KIT FORMS^Edit Tool Kit Forms^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4108,1,0)
^^1^1^2930625^
"KRN",19,4108,1,1,0)
Allows tool kit forms to be edited, created, deleted.
"KRN",19,4108,20)
D FORMLIST^IBDF12
"KRN",19,4108,"U")
EDIT TOOL KIT FORMS
"KRN",19,4109,-1)
0^21
"KRN",19,4109,0)
IBDF EDIT TOOL KIT BLOCKS^Edit Tool Kit Blocks^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4109,1,0)
^^1^1^2930625^
"KRN",19,4109,1,1,0)
Allows tool kit blocks to be edited, created, deleted.
"KRN",19,4109,20)
D LIST^IBDF13
"KRN",19,4109,"U")
EDIT TOOL KIT BLOCKS
"KRN",19,4115,-1)
0^38
"KRN",19,4115,0)
IBDF REPORT CLINIC SETUPS^Report Clinic Setups^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4115,1,0)
^^2^2^2960111^^^
"KRN",19,4115,1,1,0)
Reports on each clinic setup, listing the encounter forms and other reports
"KRN",19,4115,1,2,0)
defined for use by the clinic.
"KRN",19,4115,20)
D ^IBDF14
"KRN",19,4115,"U")
REPORT CLINIC SETUPS
"KRN",19,4116,-1)
0^27
"KRN",19,4116,0)
IBDF LIST CLINICS USING FORMS^List Clinics Using Forms^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4116,1,0)
^^1^1^2951211^^^^
"KRN",19,4116,1,1,0)
For each encounter form this option lists the clinics using it.
"KRN",19,4116,20)
D ^IBDF15
"KRN",19,4116,"U")
LIST CLINICS USING FORMS
"KRN",19,4119,-1)
0^17
"KRN",19,4119,0)
IBDF EDIT PACKAGE INTERFACE^Edit Package Interface^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4119,1,0)
^^5^5^2930726^
"KRN",19,4119,1,1,0)
This option only allows selection routines and output routines. It allows
"KRN",19,4119,1,2,0)
Package Interfaces to be created, edited, and deleted. However, Package Interfaces
"KRN",19,4119,1,3,0)
that are in use in any form should not be deleted. By creating their
"KRN",19,4119,1,4,0)
own Package Interfaces the local sites can display data to their forms that
"KRN",19,4119,1,5,0)
is not provided for in the tool kit.
"KRN",19,4119,20)
D EDIT^IBDF16
"KRN",19,4119,"U")
EDIT PACKAGE INTERFACE
"KRN",19,4120,-1)
0^16
"KRN",19,4120,0)
IBDF EDIT MARKING AREA^Edit Marking Area (for selection lists)^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4120,1,0)
^^3^3^2930727^
"KRN",19,4120,1,1,0)
Allows the local sites to create their own Marking Area to supplement those
"KRN",19,4120,1,2,0)
that come with the tool kit. Marking Areas are the areas on a selection list
"KRN",19,4120,1,3,0)
that are used for writting in to indicate choices.
"KRN",19,4120,20)
D MARKING^IBDF16
"KRN",19,4120,"U")
EDIT MARKING AREA (FOR SELECTI
"KRN",19,4124,-1)
0^25
"KRN",19,4124,0)
IBDF IMPORT/EXPORT UTILITY^Import/Export Utility^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4124,1,0)
^^1^1^2961118^^
"KRN",19,4124,1,1,0)
Allows forms and blocks to be transferred between sites.
"KRN",19,4124,20)
D ^IBDE
"KRN",19,4124,"U")
IMPORT/EXPORT UTILITY
"KRN",19,4178,-1)
0^20
"KRN",19,4178,0)
IBDF EDIT TOOL KIT^Edit Tool Kit^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,4178,1,0)
^^3^3^2930924^^
"KRN",19,4178,1,1,0)
 
"KRN",19,4178,1,2,0)
Menu containing the options that allow the user to edit forms and blocks
"KRN",19,4178,1,3,0)
contained in the tool kit.
"KRN",19,4178,10,0)
^19.01PI^2^2
"KRN",19,4178,10,1,0)
4108^EF
"KRN",19,4178,10,1,"^")
IBDF EDIT TOOL KIT FORMS
"KRN",19,4178,10,2,0)
4109^EB
"KRN",19,4178,10,2,"^")
IBDF EDIT TOOL KIT BLOCKS
"KRN",19,4178,99)
56204,45564
"KRN",19,4178,"U")
EDIT TOOL KIT
"KRN",19,4179,-1)
0^34
"KRN",19,4179,0)
IBDF PRINT OPTIONS^Print Options^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,4179,1,0)
^^2^2^2960405^^^^
"KRN",19,4179,1,1,0)
 
"KRN",19,4179,1,2,0)
Contains the options for printing encounter forms.
"KRN",19,4179,10,0)
^19.01PI^3^3
"KRN",19,4179,10,1,0)
4095^PF^1
"KRN",19,4179,10,1,"^")
IBDF PRINT ENCOUNTER FORMS
"KRN",19,4179,10,2,0)
4098^PD^2
"KRN",19,4179,10,2,"^")
IBDF PRNT FORM W/DATA NO APPT.
"KRN",19,4179,10,3,0)
4096^PB^3
"KRN",19,4179,10,3,"^")
IBDF PRINT BLNK ENCOUNTER FORM
"KRN",19,4179,99)
56204,45565
"KRN",19,4179,"U")
PRINT OPTIONS
"KRN",19,4180,-1)
0^10
"KRN",19,4180,0)
IBDF COPY CPTS TO FORM^Copy CPT Check-off Sheet to Encounter Form^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,4180,1,0)
^^3^3^2960523^^
"KRN",19,4180,1,1,0)
 
"KRN",19,4180,1,2,0)
Allows the user to select a CPT Check-off Sheet and Encounter Form. The
"KRN",19,4180,1,3,0)
Check-off Sheet's CPT codes are then copied to the Encounter Form.
"KRN",19,4180,25)
IBDF17
"KRN",19,4180,"U")
COPY CPT CHECK-OFF SHEET TO EN
"KRN",19,4181,-1)
0^15
"KRN",19,4181,0)
IBDF EDIT ENCOUNTER FORMS^Edit Encounter Forms^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,4181,1,0)
^^2^2^2950310^^^^
"KRN",19,4181,1,1,0)
 
"KRN",19,4181,1,2,0)
Contains the options that involve editing encounter forms.
"KRN",19,4181,10,0)
^19.01PI^4^4
"KRN",19,4181,10,1,0)
4094^ED^1
"KRN",19,4181,10,1,"^")
IBDF CLINIC SETUP/EDIT FORMS
"KRN",19,4181,10,2,0)
4180^CC^2
"KRN",19,4181,10,2,"^")
IBDF COPY CPTS TO FORM
"KRN",19,4181,10,3,0)
3383^CPT^3
"KRN",19,4181,10,3,"^")
IB OUTPUT MOST COMMON OPT CPT
"KRN",19,4181,10,4,0)
4919^CU
"KRN",19,4181,10,4,"^")
IBDFC CONVERSION UTILITY
"KRN",19,4181,99)
56316,30024
"KRN",19,4181,"U")
EDIT ENCOUNTER FORMS
"KRN",19,4245,-1)
0^30
"KRN",19,4245,0)
IBDF MISCELLANEOUS CLEANUP^Miscellaneous Cleanup^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4245,1,0)
^^6^6^2960311^^^
"KRN",19,4245,1,1,0)
This option is intended to delete various data structures that are no longer
"KRN",19,4245,1,2,0)
in use.  The Encounter Form Utilties were designed to automatically delete all
"KRN",19,4245,1,3,0)
data structures when no longer needed, so this option is a backup that should
"KRN",19,4245,1,4,0)
rarely be needed.  Currently, the option deletes the compiled version of forms
"KRN",19,4245,1,5,0)
where the form itself no longer exists.  It also deletes blocks that do not
"KRN",19,4245,1,6,0)
belong to any form.
"KRN",19,4245,20)
D GARBAGE^IBDF19
"KRN",19,4245,"U")
MISCELLANEOUS CLEANUP
"KRN",19,4894,-1)
0^8
"KRN",19,4894,0)
IBDF BACKGRD EF PRINT QUEUE^Background EF Print^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS^^
"KRN",19,4894,1,0)
^^3^3^2960528^^^^
"KRN",19,4894,1,1,0)
This option prints encounter forms in the background. Jobs are run based
"KRN",19,4894,1,2,0)
on the queuing parameters set up using the option IBDF SETUP AUTO CLINIC
"KRN",19,4894,1,3,0)
PRINT.
"KRN",19,4894,20)

"KRN",19,4894,25)
IBDFQB
"KRN",19,4894,"U")
BACKGROUND EF PRINT
"KRN",19,4916,-1)
0^41
"KRN",19,4916,0)
IBDF SETUP AUTO CLINIC PRINT^Setup Automatic Print Queues^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,4916,1,0)
^^2^2^2951205^^
"KRN",19,4916,1,1,0)
This option allows users to enter Print Manager Queuing Parameters and to
"KRN",19,4916,1,2,0)
specify automatic queuing parameters.
"KRN",19,4916,25)
IBDFPE
"KRN",19,4916,"U")
SETUP AUTOMATIC PRINT QUEUES
"KRN",19,4919,-1)
0^44
"KRN",19,4919,0)
IBDFC CONVERSION UTILITY^Conversion Utility For Scanning^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,4919,1,0)
^^2^2^2950310^
"KRN",19,4919,1,1,0)
Used to convert a form that was designed for just printing to a form that
"KRN",19,4919,1,2,0)
can be scanned.
"KRN",19,4919,20)
D ^IBDFC
"KRN",19,4919,"U")
CONVERSION UTILITY FOR SCANNIN
"KRN",19,5107,-1)
0^42
"KRN",19,5107,0)
IBDF UTIL MAINTENANCE UTILITY^Maintenance Utility for Active/Inactive Codes^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS^^
"KRN",19,5107,1,0)
^^5^5^2950518^^^
"KRN",19,5107,1,1,0)
This is a maintenance utility for the AICS package.  It allows the user
"KRN",19,5107,1,2,0)
to display and print a listing of the invalid ICD9, CPT and VISIT codes
"KRN",19,5107,1,3,0)
that are on encounter forms.  It also allows the user to delete the
"KRN",19,5107,1,4,0)
invalid codes from the forms.  Another action of this option is displaying
"KRN",19,5107,1,5,0)
a complete listing of all invalid ICD9, CPT, and VISIT codes.
"KRN",19,5107,20)

"KRN",19,5107,25)
IBDFUTL
"KRN",19,5107,"U")
MAINTENANCE UTILITY FOR ACTIVE
"KRN",19,5113,-1)
0^28
"KRN",19,5113,0)
IBDF LIST CLINICS WITH NO FORM^Clinics With No Encounter Forms^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,5113,1,0)
^^2^2^2951211^^^^
"KRN",19,5113,1,1,0)
This option gives a report that lists the clinics that do not
"KRN",19,5113,1,2,0)
have encounter forms.
"KRN",19,5113,20)
D ^IBDFCNOF
"KRN",19,5113,"U")
CLINICS WITH NO ENCOUNTER FORM
"KRN",19,5143,-1)
0^24
"KRN",19,5143,0)
IBDF FORMS TRACKING^Forms Tracking^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS^^
"KRN",19,5143,1,0)
^^5^5^2950721^
"KRN",19,5143,1,1,0)
This option connects the user to the forms tracking
"KRN",19,5143,1,2,0)
display.  This allows the user to see what encounter
"KRN",19,5143,1,3,0)
forms have been printed, scanned and those that have not
"KRN",19,5143,1,4,0)
not.  It also allows the user to get statistics on this
"KRN",19,5143,1,5,0)
data as well as display forms with a specific status.
"KRN",19,5143,20)

"KRN",19,5143,25)
IBDFFT
"KRN",19,5143,"U")
FORMS TRACKING
"KRN",19,5162,-1)
0^40
"KRN",19,5162,0)
IBDF SCANNED W/BILL GEN^Scanned Forms w/ Bill Gen^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,5162,1,0)
^^7^7^2960523^^^
"KRN",19,5162,1,1,0)
This option prints a report for those encounter forms that have
"KRN",19,5162,1,2,0)
been scanned that also have bills generated.  The report displays
"KRN",19,5162,1,3,0)
this data for all clinics using encounter forms for one/many/all
"KRN",19,5162,1,4,0)
divisions for a specific date range.  The data that is displayed 
"KRN",19,5162,1,5,0)
is the number scanned, number insured, number of bills entered,
"KRN",19,5162,1,6,0)
number of bills printed, and average days from date of encounter
"KRN",19,5162,1,7,0)
to date of bill generation (printed).
"KRN",19,5162,25)
IBDFOSG
"KRN",19,5162,"U")
SCANNED FORMS W/ BILL GEN
"KRN",19,5172,-1)
0^7
"KRN",19,5172,0)
IBDF AUTO PURGE FORM TRACKING^Tasked purge of Form Tracking files^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,5172,1,0)
^^9^9^2960528^^^
"KRN",19,5172,1,1,0)
This option should be queued to run at the sites convienence.  It will
"KRN",19,5172,1,2,0)
purge old data from the ENCOUNTER FORM TRACKING file (357.96), the
"KRN",19,5172,1,3,0)
ENCOUNTER FORM DEFINITION file (357.95) and the FORM SPECIFICATION file 
"KRN",19,5172,1,4,0)
(359.2).  Two parameters in the ENCOUNTER FORM PARAMETERS file (357.09)
"KRN",19,5172,1,5,0)
control how this option works.
"KRN",19,5172,1,6,0)
 
"KRN",19,5172,1,7,0)
The option needs no device and has no output.  It is recommended that
"KRN",19,5172,1,8,0)
this be tasked to run at least once weekly during a weekend or other
"KRN",19,5172,1,9,0)
slow time.
"KRN",19,5172,25)
AUTO^IBDFPRG
"KRN",19,5172,200.9)
y
"KRN",19,5172,"U")
TASKED PURGE OF FORM TRACKING 
"KRN",19,5173,-1)
0^29
"KRN",19,5173,0)
IBDF MANUAL PURGE FORM TRACK^Purge Form Tracking files^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,5173,1,0)
^^11^11^2960524^^^
"KRN",19,5173,1,1,0)
This option should be queued to run at the sites convienence.  It will
"KRN",19,5173,1,2,0)
purge old data from the ENCOUNTER FORM TRACKING file (357.96), the
"KRN",19,5173,1,3,0)
ENCOUNTER FORM DEFINITION file (357.95) and the FORM SPECIFICATION file 
"KRN",19,5173,1,4,0)
(359.2).
"KRN",19,5173,1,5,0)
 
"KRN",19,5173,1,6,0)
The option needs no device and has no output.  It is recommended that
"KRN",19,5173,1,7,0)
this be tasked to run at least once weekly during a weekend or other
"KRN",19,5173,1,8,0)
slow time.
"KRN",19,5173,1,9,0)
 
"KRN",19,5173,1,10,0)
Use the option IBDF AUTO PURGE FORM TRACKING to automatically queue this
"KRN",19,5173,1,11,0)
option to run on a recurring basis.
"KRN",19,5173,25)
MANUAL^IBDFPRG
"KRN",19,5173,"U")
PURGE FORM TRACKING FILES
"KRN",19,5176,-1)
0^37
"KRN",19,5176,0)
IBDF RECOMPILE ALL FORMS^Recompile All Forms^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS^^1
"KRN",19,5176,1,0)
^^2^2^2951017^
"KRN",19,5176,1,1,0)
Used to recompile all forms. The compiled version of every form and block
"KRN",19,5176,1,2,0)
is deleted. Each form is compiled the first time it is printed.
"KRN",19,5176,20)
D RECMPALL^IBDF19
"KRN",19,5176,"U")
RECOMPILE ALL FORMS
"KRN",19,5278,-1)
0^39
"KRN",19,5278,0)
IBDF REPORTS MENU^Reports and Utilities^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,5278,1,0)
^^2^2^2961031^^^
"KRN",19,5278,1,1,0)
This menu option will contain the reports and utilities for AICS.
"KRN",19,5278,1,2,0)

"KRN",19,5278,10,0)
^19.01IP^11^11
"KRN",19,5278,10,1,0)
5143^FT
"KRN",19,5278,10,1,"^")
IBDF FORMS TRACKING
"KRN",19,5278,10,2,0)
4116^LC
"KRN",19,5278,10,2,"^")
IBDF LIST CLINICS USING FORMS
"KRN",19,5278,10,3,0)
5107^MU
"KRN",19,5278,10,3,"^")
IBDF UTIL MAINTENANCE UTILITY
"KRN",19,5278,10,4,0)
5113^NF
"KRN",19,5278,10,4,"^")
IBDF LIST CLINICS WITH NO FORM
"KRN",19,5278,10,5,0)
4115^RC
"KRN",19,5278,10,5,"^")
IBDF REPORT CLINIC SETUPS
"KRN",19,5278,10,6,0)
5162^SG
"KRN",19,5278,10,6,"^")
IBDF SCANNED W/BILL GEN
"KRN",19,5278,10,7,0)
5279^VF
"KRN",19,5278,10,7,"^")
IBDF VALIDATE FORMS
"KRN",19,5278,10,8,0)
5280^PS
"KRN",19,5278,10,8,"^")
IBDF PRINT SAMPLE ALL CLINICS
"KRN",19,5278,10,9,0)
5315^EP
"KRN",19,5278,10,9,"^")
IBDF EDIT SITE PARAM
"KRN",19,5278,10,10,0)
6428^CP
"KRN",19,5278,10,10,"^")
IBDF EF FORM COMPONENTS
"KRN",19,5278,10,11,0)
6672^ER
"KRN",19,5278,10,11,"^")
IBDF PRINT ERROR LIST
"KRN",19,5278,99)
57064,35180
"KRN",19,5278,"U")
REPORTS AND UTILITIES
"KRN",19,5279,-1)
0^43
"KRN",19,5279,0)
IBDF VALIDATE FORMS^Validate Forms^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,5279,1,0)
^^3^3^2960523^^
"KRN",19,5279,1,1,0)
Report used to validate the data that will be passed to PCE
"KRN",19,5279,1,2,0)
when an Encounter Form is scanned.  The report may be sorted
"KRN",19,5279,1,3,0)
by Division, Clinic Group, Clinic or Form.
"KRN",19,5279,25)
IBDFFV
"KRN",19,5279,"U")
VALIDATE FORMS
"KRN",19,5280,-1)
0^35
"KRN",19,5280,0)
IBDF PRINT SAMPLE ALL CLINICS^Print Sample of all Forms^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,5280,1,0)
^^4^4^2960108^^^^
"KRN",19,5280,1,1,0)
This option will print out one copy of each form currently assigned to a
"KRN",19,5280,1,2,0)
clinic and that is in use.  Use this to prepare a package of materials
"KRN",19,5280,1,3,0)
for review or sharing with other facilities.
"KRN",19,5280,1,4,0)

"KRN",19,5280,25)
IBDFFSMP
"KRN",19,5280,"U")
PRINT SAMPLE OF ALL FORMS
"KRN",19,5315,-1)
0^19
"KRN",19,5315,0)
IBDF EDIT SITE PARAM^Edit Site Parameters^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,5315,1,0)
^^3^3^2970414^^^^
"KRN",19,5315,1,1,0)
This option will allow editing of AICS site parameters that affect
"KRN",19,5315,1,2,0)
the printing of forms, manual data entry, the purge utility and
"KRN",19,5315,1,3,0)
scanning.
"KRN",19,5315,25)
IBDFESP
"KRN",19,5315,"U")
EDIT SITE PARAMETERS
"KRN",19,5873,-1)
0^18
"KRN",19,5873,0)
IBDF EDIT PRINTERS^Device Edit^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,5873,1,0)
^^5^5^2960524^^^^
"KRN",19,5873,1,1,0)
This option allows editing of the Encounter Form Printers file.  You
"KRN",19,5873,1,2,0)
can specify whether or not a terminal type is PCL5 compatible and the
"KRN",19,5873,1,3,0)
proper escape sequences for simplex and duplex.  Only PCL5 compatible
"KRN",19,5873,1,4,0)
printers can print scannable encounter forms, and must be so indicated.
"KRN",19,5873,1,5,0)
Generally HP laser printers are PCL5 compatible.
"KRN",19,5873,25)
IBDFDVE
"KRN",19,5873,"U")
DEVICE EDIT
"KRN",19,6065,-1)
0^2
"KRN",19,6065,0)
IBD MANUAL DATA ENTRY BY CLIN^Clinic based Data Entry^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,6065,1,0)
^^5^5^2970129^^
"KRN",19,6065,1,1,0)
This option allows manual data entry of encounter data for the Ambulatory
"KRN",19,6065,1,2,0)
Data Capture project.  The user selects a clinic, an appointment date, a
"KRN",19,6065,1,3,0)
patient and can then do data entry for the encounter.  All forms for the
"KRN",19,6065,1,4,0)
encounter will be asked.  If no forms were printed for the encounter the
"KRN",19,6065,1,5,0)
user can select the form to for data entry without having to print the form.
"KRN",19,6065,25)
IBDFDE6
"KRN",19,6065,"U")
CLINIC BASED DATA ENTRY
"KRN",19,6066,-1)
0^3
"KRN",19,6066,0)
IBD MANUAL DATA ENTRY BY FORM^Data Entry by Form^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,6066,1,0)
^^3^3^2960507^
"KRN",19,6066,1,1,0)
This option allows manual data entry of encounter data for the Ambulatory
"KRN",19,6066,1,2,0)
Data Capture project.  This option allows a user to do data entry on a single
"KRN",19,6066,1,3,0)
form at a time.  Input is based on the form design.
"KRN",19,6066,25)
IBDFDE
"KRN",19,6066,"U")
DATA ENTRY BY FORM
"KRN",19,6067,-1)
0^4
"KRN",19,6067,0)
IBD MANUAL DATA ENTRY GROUP^Group Clinic Data entry^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,6067,1,0)
^^7^7^2960507^
"KRN",19,6067,1,1,0)
This option allows manual data entry of encounter data for the Ambulatory
"KRN",19,6067,1,2,0)
Data Capture project.  The user selects a clinic and appointment date/time,
"KRN",19,6067,1,3,0)
and may de-select specific patient, otherwise after completing data entry
"KRN",19,6067,1,4,0)
for a single patient, the data will then be entered for all patients with
"KRN",19,6067,1,5,0)
the same appointment date/time.  All forms for the
"KRN",19,6067,1,6,0)
encounter will be asked.  If no forms were printed for the encounter the
"KRN",19,6067,1,7,0)
user can select the form to for data entry without having to print the form.
"KRN",19,6067,25)
IBDFDE7
"KRN",19,6067,"U")
GROUP CLINIC DATA ENTRY
"KRN",19,6068,-1)
0^5
"KRN",19,6068,0)
IBD MANUAL DATA ENTRY MENU^AICS Data Entry Menu^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,6068,1,0)
^^2^2^2960610^^
"KRN",19,6068,1,1,0)
This menu contains the AICS Manual Data Entry options to enter encounter
"KRN",19,6068,1,2,0)
data based on encounter form design.
"KRN",19,6068,10,0)
^19.01IP^5^5
"KRN",19,6068,10,1,0)
6066^FDE
"KRN",19,6068,10,1,"^")
IBD MANUAL DATA ENTRY BY FORM
"KRN",19,6068,10,2,0)
6067^GDE
"KRN",19,6068,10,2,"^")
IBD MANUAL DATA ENTRY GROUP
"KRN",19,6068,10,3,0)
6065^CDE
"KRN",19,6068,10,3,"^")
IBD MANUAL DATA ENTRY BY CLIN
"KRN",19,6068,10,4,0)
6279^PDE
"KRN",19,6068,10,4,"^")
IBD MANUAL DATA ENTRY PRE
"KRN",19,6068,10,5,0)
6280^INQ
"KRN",19,6068,10,5,"^")
IBD MANUAL DATA DISPLAY
"KRN",19,6068,99)
56824,53906
"KRN",19,6068,"U")
AICS DATA ENTRY MENU
"KRN",19,6279,-1)
0^6
"KRN",19,6279,0)
IBD MANUAL DATA ENTRY PRE^Pre-printed Form Data Entry^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,6279,1,0)
^^3^3^2970411^^^^
"KRN",19,6279,1,1,0)
This option will allow data entry of forms that are pre-printed without
"KRN",19,6279,1,2,0)
patient data for unscheduled visits such as occur in emergency rooms.
"KRN",19,6279,1,3,0)

"KRN",19,6279,25)
IBDFDE8
"KRN",19,6279,"U")
PRE-PRINTED FORM DATA ENTRY
"KRN",19,6280,-1)
0^1
"KRN",19,6280,0)
IBD MANUAL DATA DISPLAY^Form Component Inquiry^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,6280,1,0)
^^3^3^2960610^
"KRN",19,6280,1,1,0)
This option will display the components of a form that are available for
"KRN",19,6280,1,2,0)
data entry, the selection rules, and any associated data qualifers.  Use
"KRN",19,6280,1,3,0)
this to determine if the form has been set up correctly.
"KRN",19,6280,25)
IBDFDE9
"KRN",19,6280,"U")
FORM COMPONENT INQUIRY
"KRN",19,6427,-1)
0^45
"KRN",19,6427,0)
IBD SCANNING WORKSTATION^AICS Scanning Workstation^^B^^^^^^^^
"KRN",19,6427,99.1)
57012,80851
"KRN",19,6427,"RPC",0)
^19.05P^12^12
"KRN",19,6427,"RPC",1,0)
IBD ELAPSED TIME
"KRN",19,6427,"RPC",2,0)
IBD EXPAND FORMID
"KRN",19,6427,"RPC",3,0)
IBD GET FORMSPEC
"KRN",19,6427,"RPC",4,0)
IBD RECEIVE DATA
"KRN",19,6427,"RPC",5,0)
IBD RECEIVE FORM DATA
"KRN",19,6427,"RPC",6,0)
IBD RETURN IMAGE ID
"KRN",19,6427,"RPC",7,0)
IBD VALIDATE USER
"KRN",19,6427,"RPC",8,0)
SC LISTER
"KRN",19,6427,"RPC",9,0)
SC GETS ENTRY DATA
"KRN",19,6427,"RPC",10,0)
IBD STORE IMAGE NAME
"KRN",19,6427,"RPC",11,0)
IBD STORE WORKSTATION ERROR
"KRN",19,6427,"RPC",12,0)
SC FILER
"KRN",19,6427,"U")
AICS SCANNING WORKSTATION
"KRN",19,6428,-1)
0^46
"KRN",19,6428,0)
IBDF EF FORM COMPONENTS^Form Components^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,6428,1,0)
^^12^12^2961202^^
"KRN",19,6428,1,1,0)
This new display lists the contents of a form ( without displaying them).
"KRN",19,6428,1,2,0)
It list the contents of each block,  the name of the block,  starting row
"KRN",19,6428,1,3,0)
and column,  width and height of the block.  Two actions are included on
"KRN",19,6428,1,4,0)
this screen ,  EX Expand Item and BC Block Components.  Expand Item
"KRN",19,6428,1,5,0)
allows the user to do an inquiry of the block and its components  listed in
"KRN",19,6428,1,6,0)
the Block file #357.1.   The Block Components action gives the user a
"KRN",19,6428,1,7,0)
more exact makeup of the block and the data it displays.  It lists the
"KRN",19,6428,1,8,0)
component, type it is (selection list, hand print field or data field)  row,
"KRN",19,6428,1,9,0)
column and block separators.   For selection lists it also lists the
"KRN",19,6428,1,10,0)
subcolumn information.  The Type  ( text or marking), Data
"KRN",19,6428,1,11,0)
(code, short description) ,  Width of the subcolumn, Qualifier,
"KRN",19,6428,1,12,0)
Selection Rule and if it is editable.
"KRN",19,6428,25)
IBDFCMP
"KRN",19,6428,"U")
FORM COMPONENTS
"KRN",19,6672,-1)
0^47
"KRN",19,6672,0)
IBDF PRINT ERROR LIST^Scanning Error and Warning Listing^^R^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",19,6672,1,0)
^^3^3^2970314^^
"KRN",19,6672,1,1,0)
During scanning errors reported by AICS or PCE are stored in the AICS Error
"KRN",19,6672,1,2,0)
Log file.  This report will allow printing a list of the errors so that the
"KRN",19,6672,1,3,0)
encounter forms can be retrieved and the data validated.
"KRN",19,6672,25)
PRT^IBDF18E2
"KRN",19,6672,"U")
SCANNING ERROR AND WARNING LIS
"KRN",19.1,154,-1)
0^1
"KRN",19.1,154,0)
IBDF IRM
"KRN",19.1,154,1,0)
^^3^3^2970318^^^
"KRN",19.1,154,1,1,0)
 
"KRN",19.1,154,1,2,0)
Used to prevent access to Encounter Form Utility options that are for IRM
"KRN",19.1,154,1,3,0)
staffs only.
"KRN",19.1,245,-1)
0^4
"KRN",19.1,245,0)
IBD SCAN MANAGER^Authorizes user to scan
"KRN",19.1,245,1,0)
^^2^2^2970422^^^^
"KRN",19.1,245,1,1,0)
This key must be assigned to users who use the AICS Workstation software
"KRN",19.1,245,1,2,0)
and scan encounter form data to DHCP.
"KRN",19.1,257,-1)
0^3
"KRN",19.1,257,0)
IBD MANAGER
"KRN",19.1,257,1,0)
^^4^4^2970403^^^^
"KRN",19.1,257,1,1,0)
This key should be allocated to users who need to perform functions in
"KRN",19.1,257,1,2,0)
AICS that should not be allocated to all users of the package.  Currently
"KRN",19.1,257,1,3,0)
holders of this key will be allowed to delete any forms tracking entry while
"KRN",19.1,257,1,4,0)
other users will only be allowed to delete entries meeting specific criteria.
"KRN",101,634,-1)
0^143
"KRN",101,634,0)
VALM NEXT SCREEN^Next Screen^^A^^^^^^^^LIST MANAGER
"KRN",101,634,1,0)
^^2^2^2920519^^^
"KRN",101,634,1,1,0)
This action will allow the user to view the next screen
"KRN",101,634,1,2,0)
of entries, if any exist.
"KRN",101,634,2,0)
^101.02A^1^1
"KRN",101,634,2,1,0)
NX
"KRN",101,634,2,"B","NX",1)

"KRN",101,634,15)

"KRN",101,634,20)
D NEXT^VALM4
"KRN",101,634,99)
56433,56737
"KRN",101,635,-1)
0^144
"KRN",101,635,0)
VALM PREVIOUS SCREEN^Previous Screen^^A^^^^^^^^LIST MANAGER
"KRN",101,635,1,0)
^^2^2^2920113^^
"KRN",101,635,1,1,0)
This action will allow the user to view the previous screen
"KRN",101,635,1,2,0)
of entries, if any exist.
"KRN",101,635,2,0)
^101.02A^3^2
"KRN",101,635,2,1,0)
PR
"KRN",101,635,2,2,0)
BK
"KRN",101,635,2,3,0)
PR
"KRN",101,635,2,"B","BK",2)

"KRN",101,635,2,"B","PR",1)

"KRN",101,635,2,"B","PR",3)

"KRN",101,635,20)
D PREV^VALM4
"KRN",101,635,99)
56433,56737
"KRN",101,636,-1)
0^147
"KRN",101,636,0)
VALM REFRESH^Re-Display Screen^^A^^^^^^^^LIST MANAGER
"KRN",101,636,1,0)
^^1^1^2911024^
"KRN",101,636,1,1,0)
This actions allows the user to re-display the current screen.
"KRN",101,636,2,0)
^101.02A^1^1
"KRN",101,636,2,1,0)
RE
"KRN",101,636,2,"B","RE",1)

"KRN",101,636,10,0)
^101.01PA^0^0
"KRN",101,636,20)
D RE^VALM4
"KRN",101,636,99)
56433,56741
"KRN",101,637,-1)
0^151
"KRN",101,637,0)
VALM LAST SCREEN^Last Screen^^A^^^^^^^^LIST MANAGER
"KRN",101,637,1,0)
^^1^1^2911026^
"KRN",101,637,1,1,0)
The action will display the last items.
"KRN",101,637,20)
D LAST^VALM4
"KRN",101,637,99)
56433,56736
"KRN",101,638,-1)
0^152
"KRN",101,638,0)
VALM FIRST SCREEN^First Screen^^A^^^^^^^^LIST MANAGER
"KRN",101,638,1,0)
^^1^1^2911026^
"KRN",101,638,1,1,0)
This action will display the first screen.
"KRN",101,638,10,0)
^101.01PA^0^0
"KRN",101,638,15)

"KRN",101,638,20)
D FIRST^VALM4
"KRN",101,638,99)
56433,56736
"KRN",101,639,-1)
0^145
"KRN",101,639,0)
VALM UP ONE LINE^Up a Line^^A^^^^^^^^LIST MANAGER
"KRN",101,639,1,0)
^^1^1^2911027^
"KRN",101,639,1,1,0)
Move up a line
"KRN",101,639,20)
D UP^VALM40
"KRN",101,639,99)
56433,56742
"KRN",101,640,-1)
0^146
"KRN",101,640,0)
VALM DOWN A LINE^Down a Line^^A^^^^^^^^LIST MANAGER
"KRN",101,640,1,0)
^^2^2^2911027^
"KRN",101,640,1,1,0)
Move down a line.
"KRN",101,640,1,2,0)

"KRN",101,640,20)
D DOWN^VALM40
"KRN",101,640,99)
56433,56735
"KRN",101,642,-1)
0^154
"KRN",101,642,0)
VALM QUIT^Quit^^A^^^^^^^^LIST MANAGER
"KRN",101,642,.1)
 
"KRN",101,642,1,0)
^^1^1^2911105^
"KRN",101,642,1,1,0)
This protocol can be used as a generic 'quit' action.
"KRN",101,642,2,0)
^101.02A^2^2
"KRN",101,642,2,1,0)
EXIT
"KRN",101,642,2,2,0)
QUIT
"KRN",101,642,2,"B","EXIT",1)

"KRN",101,642,2,"B","QUIT",2)

"KRN",101,642,20)
Q
"KRN",101,642,99)
56433,56738
"KRN",101,644,-1)
0^148
"KRN",101,644,0)
VALM PRINT LIST^Print List^^A^^^^^^^^LIST MANAGER
"KRN",101,644,1,0)
^^2^2^2920113^
"KRN",101,644,1,1,0)
This action allws the user to print the entire list of
"KRN",101,644,1,2,0)
entries currently being displayed.
"KRN",101,644,20)
D PRTL^VALM1
"KRN",101,644,99)
56433,56737
"KRN",101,645,-1)
0^155
"KRN",101,645,0)
VALM EXPAND^Expand Entry^^A^^^^^^^^LIST MANAGER
"KRN",101,645,15)
S:'VALMCC VALMBCK="R"
"KRN",101,645,20)
I $D(^TMP("VALM DATA",$J,VALMEVL,"EXP")),^("EXP")]"" X ^("EXP")
"KRN",101,645,99)
56222,29860
"KRN",101,659,-1)
0^149
"KRN",101,659,0)
VALM RIGHT^Shift View to Right^^A^^^^^^^^LIST MANAGER
"KRN",101,659,20)
D RIGHT^VALM40(XQORNOD(0))
"KRN",101,659,99)
56222,29860
"KRN",101,660,-1)
0^150
"KRN",101,660,0)
VALM LEFT^Shift View to Left^^A^^^^^^^^LIST MANAGER
"KRN",101,660,20)
D LEFT^VALM40(XQORNOD(0))
"KRN",101,660,99)
56222,29860
"KRN",101,663,-1)
0^153
"KRN",101,663,0)
VALM GOTO PAGE^Go to Page^^A^^^^^^^^LIST MANAGER
"KRN",101,663,1,0)
^^1^1^2930113^
"KRN",101,663,1,1,0)

"KRN",101,663,20)
D GOTO^VALM40
"KRN",101,663,99)
56433,56736
"KRN",101,794,-1)
0^53
"KRN",101,794,0)
IBDF EDIT SELECTION LIST MENU^EDIT LIST^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,794,1,0)
^^2^2^2950414^^^
"KRN",101,794,1,1,0)
Displays all the selection groups defined for the list and provides
"KRN",101,794,1,2,0)
a menu of actions for editing the contents of the list.
"KRN",101,794,4)
26^4
"KRN",101,794,10,0)
^101.01PA^8^7
"KRN",101,794,10,1,0)
795^AG^1^^^Add Group
"KRN",101,794,10,1,"^")
IBDF ADD GROUP
"KRN",101,794,10,2,0)
796^DG^2^^^Delete Group
"KRN",101,794,10,2,"^")
IBDF DELETE GROUP
"KRN",101,794,10,3,0)
797^GH^4^^^Group Header/Order
"KRN",101,794,10,3,"^")
IBDF EDIT GROUP HDR/ORDER
"KRN",101,794,10,4,0)
800^GC^3^^^Group's Contents
"KRN",101,794,10,4,"^")
IBDF DISPLAY GRP'S SLCTNS FOR EDIT
"KRN",101,794,10,6,0)
1070^AB^5^^^Add Blank
"KRN",101,794,10,6,"^")
IBDF ADD BLANK GROUP
"KRN",101,794,10,7,0)
1071^FA^6^^^Format All
"KRN",101,794,10,7,"^")
IBDF FORMAT ALL SELECTIONS
"KRN",101,794,10,8,0)
1310^RS^7^^^Resequence List
"KRN",101,794,10,8,"^")
IBDF RESEQUENCE LIST
"KRN",101,794,26)
D SHOW^VALM
"KRN",101,794,28)
Select Action: 
"KRN",101,794,99)
56351,49141
"KRN",101,795,-1)
0^20
"KRN",101,795,0)
IBDF ADD GROUP^Add Group^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,795,1,0)
^^1^1^2950203^^^^
"KRN",101,795,1,1,0)
Adds a new group to the selection list.
"KRN",101,795,2,0)
^101.02A^1^1
"KRN",101,795,2,1,0)
AG
"KRN",101,795,2,"B","AG",1)

"KRN",101,795,20)
D ADDGRP^IBDF3
"KRN",101,795,99)
56301,49959
"KRN",101,796,-1)
0^38
"KRN",101,796,0)
IBDF DELETE GROUP^Delete Group^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,796,1,0)
^^3^3^2930510^
"KRN",101,796,1,1,0)
 
"KRN",101,796,1,2,0)
Allows the user to select a group. The selected group, along with all of
"KRN",101,796,1,3,0)
its selections, is deleted.
"KRN",101,796,2,0)
^101.02A^1^1
"KRN",101,796,2,1,0)
DG
"KRN",101,796,2,"B","DG",1)

"KRN",101,796,20)
D DELGRP^IBDF3
"KRN",101,796,99)
56301,49960
"KRN",101,797,-1)
0^48
"KRN",101,797,0)
IBDF EDIT GROUP HDR/ORDER^Group Header/Order^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,797,1,0)
^^3^3^2930510^
"KRN",101,797,1,1,0)
 
"KRN",101,797,1,2,0)
Allows a group to be selected. Then the header and print order can be
"KRN",101,797,1,3,0)
edited.
"KRN",101,797,2,0)
^101.02A^2^2
"KRN",101,797,2,1,0)
EG
"KRN",101,797,2,2,0)
EH
"KRN",101,797,2,"B","EG",1)

"KRN",101,797,2,"B","EH",2)

"KRN",101,797,20)
D EDITGRP^IBDF3
"KRN",101,797,99)
56301,49963
"KRN",101,798,-1)
0^49
"KRN",101,798,0)
IBDF EDIT GROUP'S SELECTIONS MENU^Edit Contents^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,798,1,0)
^^1^1^2930212^^^^
"KRN",101,798,1,1,0)
Used to edit a group's selections.
"KRN",101,798,2,0)
^101.02A^1^1
"KRN",101,798,2,1,0)
EC
"KRN",101,798,2,"B","EC",1)

"KRN",101,798,4)
26^4
"KRN",101,798,10,0)
^101.01PA^6^5
"KRN",101,798,10,1,0)
799^AD^1^^^Add Selection
"KRN",101,798,10,1,"^")
IBDF ADD SELECTION
"KRN",101,798,10,2,0)
808^ED^2^^^Edit
"KRN",101,798,10,2,"^")
IBDF EDIT SELECTION
"KRN",101,798,10,3,0)
809^DS^3^^^Delete
"KRN",101,798,10,3,1)
Delete
"KRN",101,798,10,3,"^")
IBDF DELETE SELECTION
"KRN",101,798,10,5,0)
1069^PH^4^^^New Place Holder
"KRN",101,798,10,5,"^")
IBDF ADD BLANK SELECTION
"KRN",101,798,10,6,0)
1072^FA^5^^^Format All
"KRN",101,798,10,6,"^")
IBDF FORMAT GROUP'S SELECTIONS
"KRN",101,798,15)

"KRN",101,798,20)

"KRN",101,798,26)
D SHOW^VALM
"KRN",101,798,99)
56523,50755
"KRN",101,799,-1)
0^21
"KRN",101,799,0)
IBDF ADD SELECTION^Add To List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,799,1,0)
^^1^1^2930607^^
"KRN",101,799,1,1,0)
Adds a new selection to the selection list.
"KRN",101,799,2,0)
^101.02A^1^1
"KRN",101,799,2,1,0)
AL
"KRN",101,799,2,"B","AL",1)

"KRN",101,799,15)

"KRN",101,799,20)
D ADDSLCTN^IBDF4
"KRN",101,799,99)
56351,48728
"KRN",101,800,-1)
0^43
"KRN",101,800,0)
IBDF DISPLAY GRP'S SLCTNS FOR EDIT^Group's Contents^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,800,1,0)
^^1^1^2930510^
"KRN",101,800,1,1,0)
Displays the group's selections and a menu of edit actions.
"KRN",101,800,2,0)
^101.02A^1^1
"KRN",101,800,2,1,0)
ES
"KRN",101,800,2,"B","ES",1)

"KRN",101,800,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,800,20)
D EDTSLCTN^IBDF3
"KRN",101,800,99)
56301,49961
"KRN",101,801,-1)
0^25
"KRN",101,801,0)
IBDF CLINIC'S FORMS MENU^Clinic's Setup^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,801,1,0)
^^3^3^2970303^^^^
"KRN",101,801,1,1,0)
Displays all of the forms used by a particular clinic. Allows the user
"KRN",101,801,1,2,0)
to change the clinic setup, create new blank forms, copy forms, delete
"KRN",101,801,1,3,0)
to change the clinic setup, create new blank forms, copy forms, delete
"KRN",101,801,2,0)
^101.02A^^0
"KRN",101,801,4)
26^4
"KRN",101,801,10,0)
^101.01PA^12^10
"KRN",101,801,10,1,0)
802^EF^8^^^Edit Form
"KRN",101,801,10,1,"^")
IBDF EDIT FORM
"KRN",101,801,10,2,0)
815^CR^6^^^Create Blank Form
"KRN",101,801,10,2,"^")
IBDF CREATE BLANK FORM
"KRN",101,801,10,3,0)
816^CF^5^^^Copy Form
"KRN",101,801,10,3,1)
Copy Form:
"KRN",101,801,10,3,"^")
IBDF COPY FORM
"KRN",101,801,10,4,0)
817^AS^3^^^Add Form to Setup
"KRN",101,801,10,4,"^")
IBDF ADD TO CLINIC SETUP
"KRN",101,801,10,5,0)
818^DS^4^^^Delete from Setup
"KRN",101,801,10,5,"^")
IBDF DELETE FROM CLINIC SETUP
"KRN",101,801,10,7,0)
827^DF^7^^^Delete Unused Form
"KRN",101,801,10,7,"^")
IBDF DELETE FORM
"KRN",101,801,10,8,0)
830^CC^1^^^Change Clinic
"KRN",101,801,10,8,"^")
IBDF CHANGE CLINIC
"KRN",101,801,10,9,0)
831^NM^2^^^Form Name/Descr/Size
"KRN",101,801,10,9,"^")
IBDF EDIT FORM NAME/DESCR/SIZE
"KRN",101,801,10,11,0)
1082^RC^10^^^Recompile Form
"KRN",101,801,10,11,"^")
IBDF COMPILE FORM
"KRN",101,801,10,12,0)
1466^FE^9^^^Fast Selection Edit
"KRN",101,801,10,12,"^")
IBDF QUICK SELECTION EDIT
"KRN",101,801,26)
D SHOW^VALM
"KRN",101,801,28)
Select Action: 
"KRN",101,801,99)
56937,58676
"KRN",101,802,-1)
0^45
"KRN",101,802,0)
IBDF EDIT FORM^Edit Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,802,1,0)
^^2^2^2941117^^^
"KRN",101,802,1,1,0)
This protocol calls the list manager to display an encounter form. There
"KRN",101,802,1,2,0)
is a menu of actions that allows the form description to be edited.
"KRN",101,802,2,0)
^101.02A^1^1
"KRN",101,802,2,1,0)
EF
"KRN",101,802,2,"B","EF",1)

"KRN",101,802,10,0)
^101.01PA^0^0
"KRN",101,802,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,802,20)
D EDITFORM^IBDF6
"KRN",101,802,28)
Edit Form: 
"KRN",101,802,99)
56301,49961
"KRN",101,803,-1)
0^44
"KRN",101,803,0)
IBDF DISPLAY TOOL KIT BLOCKS FOR ADDING^Add Toolkit Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,803,1,0)
^^1^1^2931015^^^^
"KRN",101,803,1,1,0)
Allows the user to select a block from the tool kit and add it to the form.
"KRN",101,803,2,0)
^101.02A^1^1
"KRN",101,803,2,1,0)
AT
"KRN",101,803,2,"B","AT",1)

"KRN",101,803,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,803,20)
D ADD^IBDF7
"KRN",101,803,28)
Add Tool Kit Block: 
"KRN",101,803,99)
56301,49961
"KRN",101,804,-1)
0^87
"KRN",101,804,0)
IBDF MENU FOR EDITING DISPLAYED FORM^Add Tool Kit Block^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,804,1,0)
^^1^1^2941206^^^^
"KRN",101,804,1,1,0)
Allows the user to edit the form.
"KRN",101,804,4)
26^4
"KRN",101,804,10,0)
^101.01PA^16^12
"KRN",101,804,10,1,0)
803^AT^1^
"KRN",101,804,10,1,"^")
IBDF DISPLAY TOOL KIT BLOCKS FOR ADDING
"KRN",101,804,10,2,0)
810^MV^4^^^Move Block
"KRN",101,804,10,2,"^")
IBDF MOVE BLOCK
"KRN",101,804,10,3,0)
811^BS^6^
"KRN",101,804,10,3,"^")
IBDF RESIZE BLOCK (WHILE EDITING FORM)
"KRN",101,804,10,4,0)
812^EB^8^^^Edit Block
"KRN",101,804,10,4,"^")
IBDF DISPLAY FORM BLOCK FOR EDIT
"KRN",101,804,10,5,0)
819^DB^7^^^Delete Block
"KRN",101,804,10,5,"^")
IBDF DELETE A BLOCK
"KRN",101,804,10,7,0)
825^FH^10^^^Form Header
"KRN",101,804,10,7,"^")
IBDF EDIT HEADER BLOCK
"KRN",101,804,10,8,0)
828^NB^2^^^New Block
"KRN",101,804,10,8,1)
New Block
"KRN",101,804,10,8,"^")
IBDF CREATE EMPTY BLOCK
"KRN",101,804,10,9,0)
833^RD^11^^^Re Display Screen
"KRN",101,804,10,9,"^")
IBDF REDRAW FORM
"KRN",101,804,10,13,0)
852^SH^5^^^Shift Blocks
"KRN",101,804,10,13,"^")
IBDF SHIFT BLOCKS
"KRN",101,804,10,14,0)
1073^VD^12^^^View w/wo Data (Toggle)
"KRN",101,804,10,14,"^")
IBDF VIEW FORM W/WO DATA
"KRN",101,804,10,15,0)
846^CF^3^^^Copy From Other Form
"KRN",101,804,10,15,"^")
IBDF COPY FORM BLOCK
"KRN",101,804,10,16,0)
1543^FE^9^^^Fast Selection Edit
"KRN",101,804,10,16,"^")
IBDF QUICK SELECTION EDIT 2ND SCREEN
"KRN",101,804,26)
D SHOW^VALM
"KRN",101,804,28)
Select Action: 
"KRN",101,804,99)
56938,27230
"KRN",101,805,-1)
0^115
"KRN",101,805,0)
IBDF SELECT TOOL KIT BLOCK^Add Tool Kit Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,805,1,0)
^^4^4^2930510^
"KRN",101,805,1,1,0)
 
"KRN",101,805,1,2,0)
Allows the user to select a block from the list of toolkit blocks. The
"KRN",101,805,1,3,0)
block is then pasted to the form at a position given by the user. He can
"KRN",101,805,1,4,0)
also change the header, size, and description of the block.
"KRN",101,805,2,0)
^101.02A^2^2
"KRN",101,805,2,1,0)
ST
"KRN",101,805,2,2,0)
SB
"KRN",101,805,2,"B","SB",2)

"KRN",101,805,2,"B","ST",1)

"KRN",101,805,20)
D SELECT^IBDF7
"KRN",101,805,99)
56301,49966
"KRN",101,806,-1)
0^86
"KRN",101,806,0)
IBDF MENU FOR ADDING TOOL KIT BLOCK^Add Toolkit Block^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,806,1,0)
^^2^2^2931015^^^
"KRN",101,806,1,1,0)
A menu of actions available in connection with adding a block from the 
"KRN",101,806,1,2,0)
tool kit to a form.
"KRN",101,806,2,0)
^101.02A^1^1
"KRN",101,806,2,1,0)
AT
"KRN",101,806,2,"B","AT",1)

"KRN",101,806,4)
40^4
"KRN",101,806,10,0)
^101.01PA^3^3
"KRN",101,806,10,1,0)
805^AT^2^
"KRN",101,806,10,1,"^")
IBDF SELECT TOOL KIT BLOCK
"KRN",101,806,10,2,0)
807^VB^1^
"KRN",101,806,10,2,"^")
IBDF VIEW TOOL KIT BLOCK
"KRN",101,806,10,3,0)
824^EX^3^^^Exit
"KRN",101,806,10,3,"^")
IBDF EF QUIT
"KRN",101,806,26)
D SHOW^VALM
"KRN",101,806,28)
Select Action: 
"KRN",101,806,99)
56473,40767
"KRN",101,807,-1)
0^131
"KRN",101,807,0)
IBDF VIEW TOOL KIT BLOCK^View Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,807,2,0)
^101.02A^1^1
"KRN",101,807,2,1,0)
VB
"KRN",101,807,2,"B","VB",1)

"KRN",101,807,10,0)
^101.01PA^0^0
"KRN",101,807,20)
D VIEWBLK^IBDF8
"KRN",101,807,28)
View Block: 
"KRN",101,807,99)
56301,49967
"KRN",101,808,-1)
0^52
"KRN",101,808,0)
IBDF EDIT SELECTION^Edit List Item^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,808,1,0)
^^1^1^2960604^^^^
"KRN",101,808,1,1,0)
Allows editing of an existing selection
"KRN",101,808,2,0)
^101.02A^1^1
"KRN",101,808,2,1,0)
EI
"KRN",101,808,2,"B","EI",1)

"KRN",101,808,20)
D EDIT^IBDF4A
"KRN",101,808,28)
Edit List Item: 
"KRN",101,808,99)
56351,48951
"KRN",101,809,-1)
0^39
"KRN",101,809,0)
IBDF DELETE SELECTION^Delete From List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,809,1,0)
^^1^1^2950414^^
"KRN",101,809,1,1,0)
Allows the user to choose existing selections for deletion.
"KRN",101,809,2,0)
^101.02A^1^1
"KRN",101,809,2,1,0)
DL
"KRN",101,809,2,"B","DL",1)

"KRN",101,809,20)
D DELETE^IBDF4A
"KRN",101,809,99)
56351,48774
"KRN",101,810,-1)
0^88
"KRN",101,810,0)
IBDF MOVE BLOCK^Move Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,810,1,0)
^^1^1^2930119^^^^
"KRN",101,810,1,1,0)
Moves a block to any position on the form.
"KRN",101,810,2,0)
^101.02A^2^2
"KRN",101,810,2,1,0)
MB
"KRN",101,810,2,2,0)
MV
"KRN",101,810,2,"B","MB",1)

"KRN",101,810,2,"B","MV",2)

"KRN",101,810,15)

"KRN",101,810,20)
D MOVE^IBDF5
"KRN",101,810,28)
Move Block: 
"KRN",101,810,99)
56301,49966
"KRN",101,811,-1)
0^113
"KRN",101,811,0)
IBDF RESIZE BLOCK (WHILE EDITING FORM)^Block Size^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,811,1,0)
^^1^1^2930510^
"KRN",101,811,1,1,0)
Allows the user to change the height and width of the block.
"KRN",101,811,2,0)
^101.02A^2^2
"KRN",101,811,2,1,0)
RS
"KRN",101,811,2,2,0)
BS
"KRN",101,811,2,"B","BS",2)

"KRN",101,811,2,"B","RS",1)

"KRN",101,811,10,0)
^101.01PA^0^0
"KRN",101,811,20)
D RESIZE^IBDF5
"KRN",101,811,28)
Resize Block: 
"KRN",101,811,99)
56301,49966
"KRN",101,812,-1)
0^42
"KRN",101,812,0)
IBDF DISPLAY FORM BLOCK FOR EDIT^Edit Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,812,1,0)
^^1^1^2930727^^^
"KRN",101,812,1,1,0)
Allows the user to select a block from the form for editing.
"KRN",101,812,2,0)
^101.02A^1^1
"KRN",101,812,2,1,0)
ED
"KRN",101,812,2,"B","ED",1)

"KRN",101,812,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,812,20)
D EDITBLK^IBDF5B
"KRN",101,812,28)
Edit Block: 
"KRN",101,812,99)
56301,49961
"KRN",101,813,-1)
0^46
"KRN",101,813,0)
IBDF EDIT FORM BLOCK MENU^Edit Form Block Menu^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,813,1,0)
^^1^1^2930120^^^^
"KRN",101,813,1,1,0)
A menu of actions the user can use to define what is inside a form block.
"KRN",101,813,4)
26^4
"KRN",101,813,10,0)
^101.01PA^11^10
"KRN",101,813,10,1,0)
814^LT^3^^^List
"KRN",101,813,10,1,"^")
IBDF SELECTION LIST
"KRN",101,813,10,2,0)
820^BS^2^
"KRN",101,813,10,2,"^")
IBDF RESIZE BLOCK (WHILE EDITING BLOCK)
"KRN",101,813,10,3,0)
821^EH^1^^^Header/Descr/Outline
"KRN",101,813,10,3,"^")
IBDF EDIT NAME,HEADER,OUTLINE
"KRN",101,813,10,4,0)
822^DF^4^^^Data Field
"KRN",101,813,10,4,"^")
IBDF DATA FIELD
"KRN",101,813,10,5,0)
823^LN^5^^^Straight Line
"KRN",101,813,10,5,"^")
IBDF STRAIGHT LINE
"KRN",101,813,10,7,0)
829^TA^6^^^Text Area
"KRN",101,813,10,7,"^")
IBDF TEXT AREA
"KRN",101,813,10,8,0)
832^SH^7^^^Shift Contents
"KRN",101,813,10,8,"^")
IBDF SHIFT BLOCK CONTENTS
"KRN",101,813,10,9,0)
853^SD^9^^^Save/Discard Changes
"KRN",101,813,10,9,"^")
IBDF SAVE/DISCARD BLOCK CHANGES
"KRN",101,813,10,10,0)
1073^VD^8^^^View w/wo Data (Toggle)
"KRN",101,813,10,10,"^")
IBDF VIEW FORM W/WO DATA
"KRN",101,813,10,11,0)
802^^^
"KRN",101,813,10,11,"^")
IBDF EDIT FORM
"KRN",101,813,26)
D SHOW^VALM
"KRN",101,813,28)
Select Action: 
"KRN",101,813,99)
56944,37941
"KRN",101,814,-1)
0^116
"KRN",101,814,0)
IBDF SELECTION LIST^Selection List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,814,1,0)
^^2^2^2930322^
"KRN",101,814,1,1,0)
Allows the user to create a new selection list, delete or edit an already
"KRN",101,814,1,2,0)
existing one, or change the contents of a list.
"KRN",101,814,2,0)
^101.02A^1^1
"KRN",101,814,2,1,0)
SE
"KRN",101,814,2,"B","SE",1)

"KRN",101,814,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,814,20)
D LIST^IBDF9A
"KRN",101,814,28)

"KRN",101,814,99)
56301,49966
"KRN",101,815,-1)
0^32
"KRN",101,815,0)
IBDF CREATE BLANK FORM^Create Blank Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,815,1,0)
^^1^1^2951024^^^^
"KRN",101,815,1,1,0)
Creates a new blank form and allows the user to add it to the clinic setup.
"KRN",101,815,2,0)
^101.02A^1^1
"KRN",101,815,2,1,0)
CR
"KRN",101,815,2,"B","CR",1)

"KRN",101,815,20)
D NEWFORM^IBDF6A
"KRN",101,815,28)
Create Blank Form: 
"KRN",101,815,99)
56301,49960
"KRN",101,816,-1)
0^30
"KRN",101,816,0)
IBDF COPY FORM^Copy Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,816,1,0)
^^2^2^2930127^
"KRN",101,816,1,1,0)
Allows the user to choose any form and and copy it, giving it a new name. 
"KRN",101,816,1,2,0)
He can then add it to the clinic setup.
"KRN",101,816,2,0)
^101.02A^1^1
"KRN",101,816,2,1,0)
CP
"KRN",101,816,2,"B","CP",1)

"KRN",101,816,20)
D COPYFORM^IBDF6A
"KRN",101,816,28)
Copy Form: 
"KRN",101,816,99)
56301,49960
"KRN",101,817,-1)
0^22
"KRN",101,817,0)
IBDF ADD TO CLINIC SETUP^Add Form to Setup^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,817,1,0)
^^1^1^2930127^
"KRN",101,817,1,1,0)
Allows the user to add a form to the clinic setup.
"KRN",101,817,2,0)
^101.02A^2^2
"KRN",101,817,2,1,0)
CS
"KRN",101,817,2,2,0)
AC
"KRN",101,817,2,"B","AC",2)

"KRN",101,817,2,"B","CS",1)

"KRN",101,817,20)
D SETUP^IBDF6A
"KRN",101,817,28)
Add to Setup: 
"KRN",101,817,99)
56301,49959
"KRN",101,818,-1)
0^37
"KRN",101,818,0)
IBDF DELETE FROM CLINIC SETUP^Delete from Setup^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,818,1,0)
^^1^1^2930127^
"KRN",101,818,1,1,0)
Allows the user to select a form and deletes it from the clinic setup.
"KRN",101,818,2,0)
^101.02A^1^1
"KRN",101,818,2,1,0)
DC
"KRN",101,818,2,"B","DC",1)

"KRN",101,818,20)
D DSETUP^IBDF6C
"KRN",101,818,28)
Delete From Clinic Setup: 
"KRN",101,818,99)
56301,49960
"KRN",101,819,-1)
0^35
"KRN",101,819,0)
IBDF DELETE A BLOCK^Delete Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,819,1,0)
^^1^1^2930127^^
"KRN",101,819,1,1,0)
Allows the user to select a block from the form and delete it.
"KRN",101,819,2,0)
^101.02A^1^1
"KRN",101,819,2,1,0)
DB
"KRN",101,819,2,"B","DB",1)

"KRN",101,819,20)
D DELETE^IBDF5
"KRN",101,819,28)
Delete a Block: 
"KRN",101,819,99)
56301,49960
"KRN",101,820,-1)
0^112
"KRN",101,820,0)
IBDF RESIZE BLOCK (WHILE EDITING BLOCK)^Block Size^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,820,1,0)
^^2^2^2930510^
"KRN",101,820,1,1,0)
This allows the user to change the height and width of the block while he
"KRN",101,820,1,2,0)
is editing the block.
"KRN",101,820,2,0)
^101.02A^2^2
"KRN",101,820,2,1,0)
RS
"KRN",101,820,2,2,0)
BS
"KRN",101,820,2,"B","BS",2)

"KRN",101,820,2,"B","RS",1)

"KRN",101,820,20)
D RESIZE^IBDF9
"KRN",101,820,99)
56301,49966
"KRN",101,821,-1)
0^51
"KRN",101,821,0)
IBDF EDIT NAME,HEADER,OUTLINE^Header/Descr/Outline^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,821,1,0)
^^1^1^2930201^
"KRN",101,821,1,1,0)
Allows editing of the block header and outline type.
"KRN",101,821,2,0)
^101.02A^1^1
"KRN",101,821,2,1,0)
EH
"KRN",101,821,2,"B","EH",1)

"KRN",101,821,20)
D EDITBLK^IBDF9
"KRN",101,821,99)
56301,49963
"KRN",101,822,-1)
0^34
"KRN",101,822,0)
IBDF DATA FIELD^Data Field^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,822,1,0)
^^2^2^2970226^^
"KRN",101,822,1,1,0)
Allows the user to create a new data field or edit or delete an already
"KRN",101,822,1,2,0)
existing one.
"KRN",101,822,2,0)
^101.02A^2^1
"KRN",101,822,2,2,0)
DF
"KRN",101,822,2,"B","DF",2)

"KRN",101,822,20)
D FIELD^IBDF9B
"KRN",101,822,99)
56301,49960
"KRN",101,823,-1)
0^119
"KRN",101,823,0)
IBDF STRAIGHT LINE^Straight Line^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,823,1,0)
^^2^2^2930324^^
"KRN",101,823,1,1,0)
Allows a straight line, either horizontal or vertical, to be created,
"KRN",101,823,1,2,0)
deleted or edited.
"KRN",101,823,2,0)
^101.02A^2^1
"KRN",101,823,2,2,0)
LN
"KRN",101,823,2,"B","LN",2)

"KRN",101,823,20)
D LINE^IBDF9D
"KRN",101,823,99)
56301,49966
"KRN",101,824,-1)
0^72
"KRN",101,824,0)
IBDF EF QUIT^EXIT^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,824,.1)
EXIT
"KRN",101,824,1,0)
^^2^2^2950809^^^^
"KRN",101,824,1,1,0)
Allows the user to exit the system without quitting through the hierarchy of
"KRN",101,824,1,2,0)
screens, or the user can exit to the previous screen.
"KRN",101,824,2,0)
^101.02A^2^1
"KRN",101,824,2,2,0)
EXIT
"KRN",101,824,2,"B","EXIT",2)

"KRN",101,824,10,0)
^101.01PA^0^0
"KRN",101,824,20)
D FASTEXIT^IBDFU3
"KRN",101,824,99)
56468,47910
"KRN",101,824,101.0431,0)
^^3^3^2950809^^
"KRN",101,824,101.0431,1,0)
 
"KRN",101,824,101.0431,2,0)
 
"KRN",101,824,101.0431,3,0)
 
"KRN",101,825,-1)
0^50
"KRN",101,825,0)
IBDF EDIT HEADER BLOCK^Form Header^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,825,1,0)
^^1^1^2930211^
"KRN",101,825,1,1,0)
Allows the form header to be edited
"KRN",101,825,2,0)
^101.02A^1^1
"KRN",101,825,2,1,0)
FH
"KRN",101,825,2,"B","FH",1)

"KRN",101,825,20)
D EDITHDR^IBDF9C
"KRN",101,825,99)
56301,49963
"KRN",101,826,-1)
0^94
"KRN",101,826,0)
IBDF PRINT SAMPLE FORM^Print Sample Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,826,1,0)
^^1^1^2950130^^^^
"KRN",101,826,1,1,0)
Allows a sample form, without patient information, to be printed.
"KRN",101,826,2,0)
^101.02A^1^1
"KRN",101,826,2,1,0)
PF
"KRN",101,826,2,"B","PF",1)

"KRN",101,826,15)

"KRN",101,826,20)
D PRINT^IBDF5B
"KRN",101,826,99)
56301,49966
"KRN",101,827,-1)
0^36
"KRN",101,827,0)
IBDF DELETE FORM^Delete Unused Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,827,1,0)
^^6^6^2930224^
"KRN",101,827,1,1,0)
 
"KRN",101,827,1,2,0)
Allows the user to delete a form. Deletion is not allowed if the form is
"KRN",101,827,1,3,0)
in use by any clinic. In that case the form must first be deleted from the
"KRN",101,827,1,4,0)
clinic setup, and then actually deleted using this action. This two step
"KRN",101,827,1,5,0)
process is used to be on the safe side, since a form may be in use by more
"KRN",101,827,1,6,0)
than one clinic.
"KRN",101,827,2,0)
^101.02A^1^1
"KRN",101,827,2,1,0)
DF
"KRN",101,827,2,"B","DF",1)

"KRN",101,827,20)
D DELFORM^IBDF6A
"KRN",101,827,99)
56301,49960
"KRN",101,828,-1)
0^33
"KRN",101,828,0)
IBDF CREATE EMPTY BLOCK^New Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,828,1,0)
^^2^2^2930322^
"KRN",101,828,1,1,0)
 
"KRN",101,828,1,2,0)
Allows the user to add a new empty block to the form.
"KRN",101,828,2,0)
^101.02A^1^1
"KRN",101,828,2,1,0)
NB
"KRN",101,828,2,"B","NB",1)

"KRN",101,828,20)
D NEWBLOCK^IBDF5C
"KRN",101,828,99)
56301,49960
"KRN",101,829,-1)
0^120
"KRN",101,829,0)
IBDF TEXT AREA^Text Area^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,829,1,0)
^^3^3^2930326^
"KRN",101,829,1,1,0)
 
"KRN",101,829,1,2,0)
Allows the user to specify text and a rectangular area on the block that
"KRN",101,829,1,3,0)
the text should appear in.
"KRN",101,829,2,0)
^101.02A^1^1
"KRN",101,829,2,1,0)
TA
"KRN",101,829,2,"B","TA",1)

"KRN",101,829,20)
D TEXT^IBDF9E
"KRN",101,829,99)
56301,49967
"KRN",101,830,-1)
0^24
"KRN",101,830,0)
IBDF CHANGE CLINIC^Change Clinic^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,830,1,0)
^^3^3^2930413^
"KRN",101,830,1,1,0)
 
"KRN",101,830,1,2,0)
Allows the user to specify a different clinic. The  setup for the new
"KRN",101,830,1,3,0)
clinic will then be displayed.
"KRN",101,830,2,0)
^101.02A^1^1
"KRN",101,830,2,1,0)
CC
"KRN",101,830,2,"B","CC",1)

"KRN",101,830,20)
D CHNGCLNC^IBDF6
"KRN",101,830,99)
56301,49959
"KRN",101,831,-1)
0^47
"KRN",101,831,0)
IBDF EDIT FORM NAME/DESCR/SIZE^Form Name/Descr/Size^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,831,1,0)
^^1^1^2930420^
"KRN",101,831,1,1,0)
Allows the user to select a form, then edit its name, description, and size.
"KRN",101,831,2,0)
^101.02A^1^1
"KRN",101,831,2,1,0)
NM
"KRN",101,831,2,"B","NM",1)

"KRN",101,831,20)
D EDITFORM^IBDF6C
"KRN",101,831,99)
56301,49963
"KRN",101,832,-1)
0^117
"KRN",101,832,0)
IBDF SHIFT BLOCK CONTENTS^Shift Contents^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,832,1,0)
^^4^4^2930510^
"KRN",101,832,1,1,0)
 
"KRN",101,832,1,2,0)
The user can use this action to move the contents of a block. He can
"KRN",101,832,1,3,0)
specify the type of object to shift, the area to be affected and the
"KRN",101,832,1,4,0)
direction and distance of the shift.
"KRN",101,832,2,0)
^101.02A^1^1
"KRN",101,832,2,1,0)
SH
"KRN",101,832,2,"B","SH",1)

"KRN",101,832,15)
D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"KRN",101,832,20)
D SHIFT^IBDF10()
"KRN",101,832,99)
56301,49966
"KRN",101,833,-1)
0^110
"KRN",101,833,0)
IBDF REDRAW FORM^Re Display Screen^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,833,1,0)
^^5^5^2930510^
"KRN",101,833,1,1,0)
 
"KRN",101,833,1,2,0)
Causes the form to be re-displayed. Should be used if it is suspected that
"KRN",101,833,1,3,0)
the display is incorrect. This differs from the refresh action that comes
"KRN",101,833,1,4,0)
with the List Processor in that the array which contains the list of form
"KRN",101,833,1,5,0)
lines is re-built.
"KRN",101,833,2,0)
^101.02A^1^1
"KRN",101,833,2,1,0)
RD
"KRN",101,833,2,"B","RD",1)

"KRN",101,833,20)
D REDRAW^IBDF5C
"KRN",101,833,99)
56301,49966
"KRN",101,839,-1)
0^121
"KRN",101,839,0)
IBDF TOOL KIT FORMS MENU^IBDF TOOL KIT FORMS MENU^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,839,1,0)
^^2^2^2930624^^^
"KRN",101,839,1,1,0)
Displays the tool kit forms. Allows the user to edit them, create new ones,
"KRN",101,839,1,2,0)
etc.
"KRN",101,839,4)
26^4
"KRN",101,839,10,0)
^101.01PA^10^6
"KRN",101,839,10,1,0)
802^EF^^^^Edit Form
"KRN",101,839,10,1,"^")
IBDF EDIT FORM
"KRN",101,839,10,2,0)
815^CR^^^^Create Blank Form
"KRN",101,839,10,2,"^")
IBDF CREATE BLANK FORM
"KRN",101,839,10,3,0)
816^CF^^^^Copy Form
"KRN",101,839,10,3,1)
Copy Form:
"KRN",101,839,10,3,"^")
IBDF COPY FORM
"KRN",101,839,10,6,0)
826^PR^^^^Print Sample Form
"KRN",101,839,10,6,"^")
IBDF PRINT SAMPLE FORM
"KRN",101,839,10,9,0)
831^NM^2^^^Form Name/Descr/Size
"KRN",101,839,10,9,"^")
IBDF EDIT FORM NAME/DESCR/SIZE
"KRN",101,839,10,10,0)
840^DF^3^^^Delete Form
"KRN",101,839,10,10,"^")
IBDF DELETE TOOL KIT FORM
"KRN",101,839,26)
D SHOW^VALM
"KRN",101,839,28)
Select Action: 
"KRN",101,839,99)
56301,49967
"KRN",101,840,-1)
0^41
"KRN",101,840,0)
IBDF DELETE TOOL KIT FORM^Delete Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,840,1,0)
^^1^1^2930624^
"KRN",101,840,1,1,0)
Allows the user to delete a form from the tool kit.
"KRN",101,840,2,0)
^101.02A^1^1
"KRN",101,840,2,1,0)
DT
"KRN",101,840,2,"B","DT",1)

"KRN",101,840,20)
D DELFORM^IBDF12
"KRN",101,840,99)
56301,49960
"KRN",101,841,-1)
0^55
"KRN",101,841,0)
IBDF EDIT TOOL KIT BLOCKS MENU^EDIT TOOL KIT BLOCKS MENU^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,841,1,0)
^^1^1^2941117^^^^
"KRN",101,841,1,1,0)
Allows the user to edit tool kit blocks.
"KRN",101,841,2,0)
^101.02A^1^1
"KRN",101,841,2,1,0)
EB
"KRN",101,841,2,"B","EB",1)

"KRN",101,841,4)
26^4
"KRN",101,841,10,0)
^101.01PA^14^5
"KRN",101,841,10,10,0)
842^EB^1^^^Edit Block
"KRN",101,841,10,10,"^")
IBDF EDIT TOOL KIT BLOCK
"KRN",101,841,10,11,0)
843^NB^2^^^New Block
"KRN",101,841,10,11,"^")
IBDF NEW TOOL KIT BLOCK
"KRN",101,841,10,12,0)
844^DB^3^^^Delete Block
"KRN",101,841,10,12,"^")
IBDF DELETE TOOL KIT BLOCK
"KRN",101,841,10,13,0)
845^CB^^^^Copy Block
"KRN",101,841,10,13,"^")
IBDF COPY BLOCK INTO TOOL KIT
"KRN",101,841,10,14,0)
875^CH^5^^^Change TK Order
"KRN",101,841,10,14,"^")
IBDF CHANGE BLOCK TK ORDER
"KRN",101,841,26)
D SHOW^VALM
"KRN",101,841,28)
Select Action: 
"KRN",101,841,99)
56505,40444
"KRN",101,842,-1)
0^54
"KRN",101,842,0)
IBDF EDIT TOOL KIT BLOCK^Edit Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,842,1,0)
^^1^1^2930727^^^
"KRN",101,842,1,1,0)
Allows the user to edit a tool kit block.
"KRN",101,842,2,0)
^101.02A^1^1
"KRN",101,842,2,1,0)
EB
"KRN",101,842,2,"B","EB",1)

"KRN",101,842,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,842,20)
D EDITBLK^IBDF13
"KRN",101,842,99)
56301,49963
"KRN",101,843,-1)
0^89
"KRN",101,843,0)
IBDF NEW TOOL KIT BLOCK^New Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,843,1,0)
^^1^1^2930624^
"KRN",101,843,1,1,0)
Allows the user to create a new tool kit block.
"KRN",101,843,2,0)
^101.02A^1^1
"KRN",101,843,2,1,0)
NB
"KRN",101,843,2,"B","NB",1)

"KRN",101,843,20)
D NEWBLK^IBDF13
"KRN",101,843,99)
56301,49966
"KRN",101,844,-1)
0^40
"KRN",101,844,0)
IBDF DELETE TOOL KIT BLOCK^Delete Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,844,1,0)
^^1^1^2930625^
"KRN",101,844,1,1,0)
Allows the user to delete a block from the tool kit.
"KRN",101,844,2,0)
^101.02A^1^1
"KRN",101,844,2,1,0)
DB
"KRN",101,844,2,"B","DB",1)

"KRN",101,844,20)
D DLTBLOCK^IBDF13
"KRN",101,844,99)
56301,49960
"KRN",101,845,-1)
0^29
"KRN",101,845,0)
IBDF COPY BLOCK INTO TOOL KIT^Copy Block^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,845,1,0)
^^1^1^2930625^
"KRN",101,845,1,1,0)
Allows the user to select any block and copy it into the tool kit.
"KRN",101,845,2,0)
^101.02A^1^1
"KRN",101,845,2,1,0)
CB
"KRN",101,845,2,"B","CB",1)

"KRN",101,845,20)
D COPYBLK^IBDF13
"KRN",101,845,99)
56301,49960
"KRN",101,846,-1)
0^31
"KRN",101,846,0)
IBDF COPY FORM BLOCK^Copy From Other Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,846,.1)

"KRN",101,846,1,0)
^^2^2^2941206^^^
"KRN",101,846,1,1,0)
Allows a block or page from any form to be selected and pasted to the
"KRN",101,846,1,2,0)
current form.
"KRN",101,846,2,0)
^101.02A^1^1
"KRN",101,846,2,1,0)
CF
"KRN",101,846,2,"B","CF",1)

"KRN",101,846,20)
D COPY^IBDF5D
"KRN",101,846,99)
56301,49960
"KRN",101,852,-1)
0^118
"KRN",101,852,0)
IBDF SHIFT BLOCKS^Shift Blocks^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,852,1,0)
^^3^3^2930716^
"KRN",101,852,1,1,0)
Allows the user to shift a group of blocks. The user is asked to specify
"KRN",101,852,1,2,0)
a rectangular region where the shift should occur, the direction of movement
"KRN",101,852,1,3,0)
and distance.
"KRN",101,852,2,0)
^101.02A^1^1
"KRN",101,852,2,1,0)
SB
"KRN",101,852,2,"B","SB",1)

"KRN",101,852,20)
D SHIFT^IBDF5
"KRN",101,852,99)
56301,49966
"KRN",101,853,-1)
0^114
"KRN",101,853,0)
IBDF SAVE/DISCARD BLOCK CHANGES^Save/Discard Changes^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,853,1,0)
^^1^1^2930728^^
"KRN",101,853,1,1,0)
Allows the user to save the changes to the block he is currently editing.
"KRN",101,853,2,0)
^101.02A^1^1
"KRN",101,853,2,1,0)
SD
"KRN",101,853,2,"B","SD",1)

"KRN",101,853,20)
D DECIDE^IBDF5B
"KRN",101,853,99)
56301,49966
"KRN",101,854,-1)
0^109
"KRN",101,854,0)
IBDF QUIT^Exit^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,854,1,0)
^^1^1^2930729^^
"KRN",101,854,1,1,0)
Quits to the prior level.
"KRN",101,854,2,0)
^101.02A^1^1
"KRN",101,854,2,1,0)
Ex
"KRN",101,854,2,"B","Ex",1)

"KRN",101,854,15)
S VALMBCK="Q"
"KRN",101,854,99)
56301,49966
"KRN",101,858,-1)
0^13
"KRN",101,858,0)
IBDE IMP/EXP MENU FOR FORMS^List Forms^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,858,1,0)
^^2^2^2970303^^^^
"KRN",101,858,1,1,0)
The main menu of the import/export utility, which allows forms and
"KRN",101,858,1,2,0)
tool kit blocks to be transferred between sites.
"KRN",101,858,4)
26^4
"KRN",101,858,10,0)
^101.01PA^11^10
"KRN",101,858,10,2,0)
859^AE^6^^^Add Entry
"KRN",101,858,10,2,"^")
IBDE ADD FORM TO IMP/EXP WS
"KRN",101,858,10,3,0)
860^DE^5^^^Delete Entry
"KRN",101,858,10,3,"^")
IBDE DELETE FORM FROM IMP/EXP FILES
"KRN",101,858,10,4,0)
861^CW^4^^^Clear Work Space
"KRN",101,858,10,4,"^")
IBDE DELETE IMP/EXP FILES
"KRN",101,858,10,5,0)
862^EI^8^^^Edit Imp/Exp Notes
"KRN",101,858,10,5,"^")
IBDE EDIT FORM'S IMP/EXP NOTES
"KRN",101,858,10,6,0)
863^VI^7^^^View Imp/Exp Notes
"KRN",101,858,10,6,"^")
IBDE VIEW FORM'S IMP/EXP NOTES
"KRN",101,858,10,7,0)
864^IE^3^^^Import Entry
"KRN",101,858,10,7,"^")
IBDE IMPORT FORM
"KRN",101,858,10,8,0)
865^HE^1^^^Help
"KRN",101,858,10,8,"^")
IBDE IMP/EXP HELP
"KRN",101,858,10,9,0)
866^DI^9^^^DIFROM
"KRN",101,858,10,9,"^")
IBDE EXECUTE DIFROM
"KRN",101,858,10,10,0)
867^RI^10^^^Run Inits
"KRN",101,858,10,10,"^")
IBDE EXECUTE INITS
"KRN",101,858,10,11,0)
869^LB^2^^^List TK Blocks
"KRN",101,858,10,11,"^")
IBDE DISPLAY TK BLOCKS
"KRN",101,858,20)

"KRN",101,858,26)
D SHOW^VALM
"KRN",101,858,28)
Select Action: 
"KRN",101,858,99)
56309,52661
"KRN",101,859,-1)
0^2
"KRN",101,859,0)
IBDE ADD FORM TO IMP/EXP WS^Add Entry^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,859,.1)

"KRN",101,859,1,0)
^^1^1^2960205^^^
"KRN",101,859,1,1,0)
Allows the user to add a form to the IMP/EXP files.
"KRN",101,859,2,0)
^101.02A^3^3
"KRN",101,859,2,1,0)
TEST
"KRN",101,859,2,2,0)
ADD
"KRN",101,859,2,3,0)
AW
"KRN",101,859,2,"B","ADD",2)

"KRN",101,859,2,"B","AW",3)

"KRN",101,859,2,"B","TEST",1)

"KRN",101,859,20)
D ADD^IBDE1
"KRN",101,859,99)
56222,29861
"KRN",101,860,-1)
0^3
"KRN",101,860,0)
IBDE DELETE FORM FROM IMP/EXP FILES^Delete Entry^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,860,1,0)
^^1^1^2970303^^
"KRN",101,860,1,1,0)
Allows the user to select a form in the imp/exp files and deletes it.
"KRN",101,860,2,0)
^101.02A^2^2
"KRN",101,860,2,1,0)
DEL
"KRN",101,860,2,2,0)
DW
"KRN",101,860,2,"B","DEL",1)

"KRN",101,860,2,"B","DW",2)

"KRN",101,860,20)
D DELETE^IBDE1
"KRN",101,860,99)
56222,29861
"KRN",101,861,-1)
0^4
"KRN",101,861,0)
IBDE DELETE IMP/EXP FILES^Clear Work Space^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,861,1,0)
^^1^1^2930813^^
"KRN",101,861,1,1,0)
Deletes all of the imp/exp files (358 range).
"KRN",101,861,2,0)
^101.02A^1^1
"KRN",101,861,2,1,0)
CW
"KRN",101,861,2,"B","CW",1)

"KRN",101,861,20)
D DLTALL^IBDE2
"KRN",101,861,99)
56222,29861
"KRN",101,862,-1)
0^8
"KRN",101,862,0)
IBDE EDIT FORM'S IMP/EXP NOTES^Edit Imp/Exp Notes^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,862,1,0)
^^2^2^2930813^^
"KRN",101,862,1,1,0)
Allows the user to select a form form from the imp/exp files, then allows
"KRN",101,862,1,2,0)
the user to edit the imp/exp notes.
"KRN",101,862,2,0)
^101.02A^1^1
"KRN",101,862,2,1,0)
EE
"KRN",101,862,2,"B","EE",1)

"KRN",101,862,20)
D EDIT^IBDE1
"KRN",101,862,99)
56222,29861
"KRN",101,863,-1)
0^17
"KRN",101,863,0)
IBDE VIEW FORM'S IMP/EXP NOTES^View Imp/Exp Notes^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,863,1,0)
^^2^2^2930813^
"KRN",101,863,1,1,0)
Allows the user to select a form from the IMP/EXP files, then displays
"KRN",101,863,1,2,0)
the imp/exp notes.
"KRN",101,863,2,0)
^101.02A^1^1
"KRN",101,863,2,1,0)
VI
"KRN",101,863,2,"B","VI",1)

"KRN",101,863,20)
D VIEW^IBDE1
"KRN",101,863,99)
56222,29861
"KRN",101,864,-1)
0^14
"KRN",101,864,0)
IBDE IMPORT FORM^Import Entry^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,864,1,0)
^^1^1^2960105^^^^
"KRN",101,864,1,1,0)
Allows the user to select a form from the work space, then imports it.
"KRN",101,864,2,0)
^101.02A^1^1
"KRN",101,864,2,1,0)
IE
"KRN",101,864,2,"B","IE",1)

"KRN",101,864,20)
D IMPORT^IBDE1
"KRN",101,864,99)
56222,29861
"KRN",101,865,-1)
0^11
"KRN",101,865,0)
IBDE IMP/EXP HELP^Help^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,865,1,0)
^^2^2^2930813^
"KRN",101,865,1,1,0)
Displays help information about the import/export procedures that the user
"KRN",101,865,1,2,0)
must follow.
"KRN",101,865,2,0)
^101.02A^1^1
"KRN",101,865,2,1,0)
HE
"KRN",101,865,2,"B","HE",1)

"KRN",101,865,20)
D HELP^IBDEHELP
"KRN",101,865,99)
56222,29861
"KRN",101,866,-1)
0^9
"KRN",101,866,0)
IBDE EXECUTE DIFROM^DIFROM^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,866,1,0)
^^1^1^2930813^
"KRN",101,866,1,1,0)
Allows the user to execute ^DIFROM without leaving the imp/exp utility.
"KRN",101,866,2,0)
^101.02A^1^1
"KRN",101,866,2,1,0)
DI
"KRN",101,866,2,"B","DI",1)

"KRN",101,866,20)
D DIFROM^IBDE1
"KRN",101,866,99)
56222,29861
"KRN",101,867,-1)
0^10
"KRN",101,867,0)
IBDE EXECUTE INITS^Run Inits^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,867,1,0)
^^1^1^2930813^
"KRN",101,867,1,1,0)
Allows the user to execute the inits without leaving the imp/exp utilities.
"KRN",101,867,2,0)
^101.02A^1^1
"KRN",101,867,2,1,0)
RI
"KRN",101,867,2,"B","RI",1)

"KRN",101,867,20)
D INITS^IBDE1
"KRN",101,867,99)
56222,29861
"KRN",101,868,-1)
0^12
"KRN",101,868,0)
IBDE IMP/EXP MENU FOR BLOCKS^List TK Blocks^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,868,1,0)
^^1^1^2930813^^^^
"KRN",101,868,1,1,0)
The menu of actions that apply to tool kit blocks in the imp/exp files.
"KRN",101,868,2,0)
^101.02A^1^1
"KRN",101,868,2,1,0)
SB
"KRN",101,868,2,"B","SB",1)

"KRN",101,868,4)
26^4
"KRN",101,868,10,0)
^101.01PA^16^10
"KRN",101,868,10,4,0)
861^CW^4^^^Clear Work Space
"KRN",101,868,10,4,"^")
IBDE DELETE IMP/EXP FILES
"KRN",101,868,10,8,0)
865^HE^1^^^Help
"KRN",101,868,10,8,"^")
IBDE IMP/EXP HELP
"KRN",101,868,10,9,0)
866^DI^9^^^DIFROM
"KRN",101,868,10,9,"^")
IBDE EXECUTE DIFROM
"KRN",101,868,10,10,0)
867^RI^10^^^Run Inits
"KRN",101,868,10,10,"^")
IBDE EXECUTE INITS
"KRN",101,868,10,11,0)
870^DE^5^^^Delete Entry
"KRN",101,868,10,11,"^")
IBDE DELTE TK BLOCK FROM IMP/EXP FILES
"KRN",101,868,10,12,0)
871^AE^6^^^Add Entry
"KRN",101,868,10,12,"^")
IBDE ADD BLOCK TO IMP/EXP WS
"KRN",101,868,10,13,0)
872^EI^8^^^Edit Imp/Exp Notes
"KRN",101,868,10,13,"^")
IBDE EDIT BLOCK'S IMP/EXP NOTES
"KRN",101,868,10,14,0)
873^VI^7^^^View Imp/Exp Notes
"KRN",101,868,10,14,"^")
IBDE VIEW BLOCK'S IMP/EXP NOTES
"KRN",101,868,10,15,0)
874^IE^3^^^Import Entry
"KRN",101,868,10,15,"^")
IBDE IMPORT TK BLOCK
"KRN",101,868,10,16,0)
854^LF^2^^^List Forms
"KRN",101,868,10,16,"^")
IBDF QUIT
"KRN",101,868,26)
D SHOW^VALM
"KRN",101,868,28)
Select Action: 
"KRN",101,868,99)
56328,46572
"KRN",101,869,-1)
0^6
"KRN",101,869,0)
IBDE DISPLAY TK BLOCKS^List TK Blocks^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,869,1,0)
^^1^1^2930813^
"KRN",101,869,1,1,0)
Displays the list of tool kit blocks that are in the imp/exp files.
"KRN",101,869,2,0)
^101.02A^1^1
"KRN",101,869,2,1,0)
DB
"KRN",101,869,2,"B","DB",1)

"KRN",101,869,20)
D BLOCKS^IBDE1
"KRN",101,869,99)
56222,29861
"KRN",101,870,-1)
0^5
"KRN",101,870,0)
IBDE DELTE TK BLOCK FROM IMP/EXP FILES^Delete Entry^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,870,1,0)
^^1^1^2930813^
"KRN",101,870,1,1,0)
Allows the user to select a TK block, then deletes it.
"KRN",101,870,2,0)
^101.02A^1^1
"KRN",101,870,2,1,0)
DE
"KRN",101,870,2,"B","DE",1)

"KRN",101,870,20)
D DELETE^IBDE3
"KRN",101,870,99)
56222,29861
"KRN",101,871,-1)
0^1
"KRN",101,871,0)
IBDE ADD BLOCK TO IMP/EXP WS^Add Entry^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,871,1,0)
^^1^1^2960205^^^
"KRN",101,871,1,1,0)
Allows the user to choose any block and adds it to the import/export files.
"KRN",101,871,2,0)
^101.02A^1^1
"KRN",101,871,2,1,0)
AE
"KRN",101,871,2,"B","AE",1)

"KRN",101,871,20)
D ADD^IBDE3
"KRN",101,871,99)
56222,29861
"KRN",101,872,-1)
0^7
"KRN",101,872,0)
IBDE EDIT BLOCK'S IMP/EXP NOTES^Edit Imp/Exp Notes^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,872,1,0)
^^2^2^2930816^
"KRN",101,872,1,1,0)
Allows the user to select a tool kit block from the imp/exp files, then
"KRN",101,872,1,2,0)
allows him to edit the imp/exp notes.
"KRN",101,872,2,0)
^101.02A^1^1
"KRN",101,872,2,1,0)
EI
"KRN",101,872,2,"B","EI",1)

"KRN",101,872,20)
D EDIT^IBDE3
"KRN",101,872,99)
56222,29861
"KRN",101,873,-1)
0^16
"KRN",101,873,0)
IBDE VIEW BLOCK'S IMP/EXP NOTES^View Imp/Exp Notes^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,873,1,0)
^^2^2^2930816^
"KRN",101,873,1,1,0)
Allows the user to select a tool kit block from the imp/exp files, then
"KRN",101,873,1,2,0)
allows him to view the imp/exp notes.
"KRN",101,873,2,0)
^101.02A^1^1
"KRN",101,873,2,1,0)
VI
"KRN",101,873,2,"B","VI",1)

"KRN",101,873,20)
D VIEW^IBDE3
"KRN",101,873,99)
56222,29861
"KRN",101,874,-1)
0^15
"KRN",101,874,0)
IBDE IMPORT TK BLOCK^Import Entry^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,874,1,0)
^^1^1^2930817^
"KRN",101,874,1,1,0)
Allows the user to select a tool kit block from the list, then imports it.
"KRN",101,874,2,0)
^101.02A^1^1
"KRN",101,874,2,1,0)
IE
"KRN",101,874,2,"B","IE",1)

"KRN",101,874,20)
D IMPORT^IBDE3
"KRN",101,874,99)
56222,29861
"KRN",101,875,-1)
0^23
"KRN",101,875,0)
IBDF CHANGE BLOCK TK ORDER^Change TK Order^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,875,1,0)
^^1^1^2930820^
"KRN",101,875,1,1,0)
Allows the user to select a block from the tool kit, then change it's order.
"KRN",101,875,2,0)
^101.02A^1^1
"KRN",101,875,2,1,0)
CH
"KRN",101,875,2,"B","CH",1)

"KRN",101,875,20)
D CHGORDER^IBDF13
"KRN",101,875,99)
56301,49959
"KRN",101,876,-1)
0^92
"KRN",101,876,0)
IBDF PRINT MANAGER CLINIC SETUP^Clinic Print Manager^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,876,1,0)
^^2^2^2930831^^
"KRN",101,876,1,1,0)
Allows the user to edit the setup used by the Print Manager in determining 
"KRN",101,876,1,2,0)
what forms to print for an appointment at the clinic level.
"KRN",101,876,2,0)
^101.02A^1^1
"KRN",101,876,2,1,0)
CL
"KRN",101,876,2,"B","CL",1)

"KRN",101,876,20)
D CLNCSUP2^IBDF11
"KRN",101,876,99)
56301,49966
"KRN",101,877,-1)
0^93
"KRN",101,877,0)
IBDF PRINT MANAGER DIVISION SETUP^Div Print Manager^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,877,1,0)
^^2^2^2930831^
"KRN",101,877,1,1,0)
Allows the user to edit the setup used by the Print Manager in determining
"KRN",101,877,1,2,0)
what forms to print for an appointment at the division level.
"KRN",101,877,2,0)
^101.02A^1^1
"KRN",101,877,2,1,0)
DV
"KRN",101,877,2,"B","DV",1)

"KRN",101,877,20)
D DIVSUP2^IBDF11
"KRN",101,877,99)
56301,49966
"KRN",101,1069,-1)
0^19
"KRN",101,1069,0)
IBDF ADD BLANK SELECTION^Add Blank^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1069,1,0)
^^2^2^2931020^
"KRN",101,1069,1,1,0)
Allows the user to add a blank selection, i.e., a place holder that takes
"KRN",101,1069,1,2,0)
up space on the selection list but has no data that is displayed.
"KRN",101,1069,2,0)
^101.02A^1^1
"KRN",101,1069,2,1,0)
AB
"KRN",101,1069,2,"B","AB",1)

"KRN",101,1069,20)
D ADDBLANK^IBDF4A
"KRN",101,1069,99)
56301,49959
"KRN",101,1070,-1)
0^18
"KRN",101,1070,0)
IBDF ADD BLANK GROUP^Add Blank^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1070,1,0)
^^2^2^2931020^
"KRN",101,1070,1,1,0)
Allows the user to add a group that has no displayable text - i.e., it is 
"KRN",101,1070,1,2,0)
blank - serves to add space to the list.
"KRN",101,1070,2,0)
^101.02A^1^1
"KRN",101,1070,2,1,0)
AB
"KRN",101,1070,2,"B","AB",1)

"KRN",101,1070,20)
D ADDEMPTY^IBDF3
"KRN",101,1070,99)
56301,49959
"KRN",101,1071,-1)
0^76
"KRN",101,1071,0)
IBDF FORMAT ALL SELECTIONS^Format All^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1071,1,0)
^^1^1^2931020^
"KRN",101,1071,1,1,0)
Allows the user to format all the selections on the selection list all at once.
"KRN",101,1071,2,0)
^101.02A^1^1
"KRN",101,1071,2,1,0)
FA
"KRN",101,1071,2,"B","FA",1)

"KRN",101,1071,20)
D FORMAT^IBDF9A1
"KRN",101,1071,99)
56301,49965
"KRN",101,1072,-1)
0^77
"KRN",101,1072,0)
IBDF FORMAT GROUP'S SELECTIONS^Format All^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1072,1,0)
^^1^1^2931021^
"KRN",101,1072,1,1,0)
Allows the user to format in mass all the selections in the group.
"KRN",101,1072,2,0)
^101.02A^1^1
"KRN",101,1072,2,1,0)
FA
"KRN",101,1072,2,"B","FA",1)

"KRN",101,1072,20)
D FORMAT2^IBDF9A1
"KRN",101,1072,99)
56301,49965
"KRN",101,1073,-1)
0^130
"KRN",101,1073,0)
IBDF VIEW FORM W/WO DATA^View w/wo Data (Toggle)^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1073,1,0)
^^2^2^2931022^
"KRN",101,1073,1,1,0)
Allows the user to either view the form with or without data. When viewing
"KRN",101,1073,1,2,0)
with data the user must select a test patient.
"KRN",101,1073,2,0)
^101.02A^1^1
"KRN",101,1073,2,1,0)
VD
"KRN",101,1073,2,"B","VD",1)

"KRN",101,1073,10,0)
^101.01PA
"KRN",101,1073,20)
D VIEW^IBDF5C
"KRN",101,1073,99)
56301,49967
"KRN",101,1082,-1)
0^27
"KRN",101,1082,0)
IBDF COMPILE FORM^Recompile Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1082,1,0)
^^1^1^2931124^
"KRN",101,1082,1,1,0)
Allows forms to be compiled into a format that is very fast to print.
"KRN",101,1082,2,0)
^101.02A^1^1
"KRN",101,1082,2,1,0)
RC
"KRN",101,1082,2,"B","RC",1)

"KRN",101,1082,20)
D CMPLACTN^IBDF19
"KRN",101,1082,99)
56301,49960
"KRN",101,1228,-1)
0^85
"KRN",101,1228,0)
IBDF HIDDEN ACTIONS^HIDDEN ACTIONS^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1228,4)
26
"KRN",101,1228,10,0)
^101.01PA^22^14
"KRN",101,1228,10,1,0)
634^+^11^
"KRN",101,1228,10,1,"^")
VALM NEXT SCREEN
"KRN",101,1228,10,2,0)
635^-^12^
"KRN",101,1228,10,2,"^")
VALM PREVIOUS SCREEN
"KRN",101,1228,10,3,0)
639^UP^13^
"KRN",101,1228,10,3,"^")
VALM UP ONE LINE
"KRN",101,1228,10,4,0)
640^DN^14^
"KRN",101,1228,10,4,"^")
VALM DOWN A LINE
"KRN",101,1228,10,5,0)
636^RD^24^
"KRN",101,1228,10,5,"^")
VALM REFRESH
"KRN",101,1228,10,7,0)
644^PL^26^
"KRN",101,1228,10,7,"^")
VALM PRINT LIST
"KRN",101,1228,10,8,0)
659^>^15^
"KRN",101,1228,10,8,"^")
VALM RIGHT
"KRN",101,1228,10,9,0)
660^<^16^
"KRN",101,1228,10,9,"^")
VALM LEFT
"KRN",101,1228,10,12,0)
826^PR^33^
"KRN",101,1228,10,12,"^")
IBDF PRINT SAMPLE FORM
"KRN",101,1228,10,13,0)
637^LS^22^
"KRN",101,1228,10,13,"^")
VALM LAST SCREEN
"KRN",101,1228,10,14,0)
638^FS^21^
"KRN",101,1228,10,14,"^")
VALM FIRST SCREEN
"KRN",101,1228,10,15,0)
663^GO^23^
"KRN",101,1228,10,15,"^")
VALM GOTO PAGE
"KRN",101,1228,10,21,0)
824^EX^35^^^Exit Option
"KRN",101,1228,10,21,"^")
IBDF EF QUIT
"KRN",101,1228,10,22,0)
642^QU^34^^^Quit Screen
"KRN",101,1228,10,22,"^")
VALM QUIT
"KRN",101,1228,99)
56852,51178
"KRN",101,1229,-1)
0^69
"KRN",101,1229,0)
IBDF EF QUEUE PARMS MENU^EF Queue Parameters^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1229,4)
26^4
"KRN",101,1229,10,0)
^101.01PA^12^10
"KRN",101,1229,10,1,0)
1230^EP^11^
"KRN",101,1229,10,1,"^")
IBDF EF EDIT QUEUE PARMS
"KRN",101,1229,10,2,0)
1231^AP^12^
"KRN",101,1229,10,2,"^")
IBDF EF ADD QUEUE PARMS
"KRN",101,1229,10,5,0)
1234^JP^13^
"KRN",101,1229,10,5,"^")
IBDF EF PARAMETER GROUP JUMP
"KRN",101,1229,10,6,0)
1237^PF^34^
"KRN",101,1229,10,6,"^")
IBDF EF QUEUE PRINT FORMS
"KRN",101,1229,10,7,0)
1241^CG^31^
"KRN",101,1229,10,7,"^")
IBDF EF CLINIC GROUP MENU ACTION
"KRN",101,1229,10,8,0)
1244^QS^35^
"KRN",101,1229,10,8,"^")
IBDF EF QUEUE STATS
"KRN",101,1229,10,9,0)
1274^EX^99^
"KRN",101,1229,10,9,"^")
IBDF EF EXIT
"KRN",101,1229,10,10,0)
1324^HL^34^
"KRN",101,1229,10,10,"^")
IBDF EF HELP SPEC INST
"KRN",101,1229,10,11,0)
1340^TI^36^
"KRN",101,1229,10,11,"^")
IBDF EF TASK INTERRUPT
"KRN",101,1229,10,12,0)
1758^DG^50^
"KRN",101,1229,10,12,"^")
IBDF EF DELETE QUEUE PARMS
"KRN",101,1229,26)
D SHOW^VALM
"KRN",101,1229,28)
Select Action: 
"KRN",101,1229,99)
57091,52324
"KRN",101,1230,-1)
0^64
"KRN",101,1230,0)
IBDF EF EDIT QUEUE PARMS^Edit Parameter Grp.^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1230,20)
D EDT^IBDFPE1
"KRN",101,1230,99)
56305,55126
"KRN",101,1231,-1)
0^56
"KRN",101,1231,0)
IBDF EF ADD QUEUE PARMS^Add Parameter Grp.^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1231,20)
D ADD^IBDFPE1
"KRN",101,1231,99)
56305,54982
"KRN",101,1232,-1)
0^57
"KRN",101,1232,0)
IBDF EF CLINIC GROUP ADD^Add Clinic Group^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1232,20)
D ADD1^IBDFCG
"KRN",101,1232,99)
56305,55010
"KRN",101,1233,-1)
0^61
"KRN",101,1233,0)
IBDF EF CLINIC GROUP MENU^Clinic Group Menu w/actions^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1233,1,0)
^^2^2^2960220^^^^
"KRN",101,1233,1,1,0)
 
"KRN",101,1233,1,2,0)
 
"KRN",101,1233,4)
26^4
"KRN",101,1233,10,0)
^101.01PA^6^5
"KRN",101,1233,10,1,0)
1232^AC^11^
"KRN",101,1233,10,1,"^")
IBDF EF CLINIC GROUP ADD
"KRN",101,1233,10,2,0)
1242^JP^21^
"KRN",101,1233,10,2,"^")
IBDF EF CLINIC GROUP JUMP
"KRN",101,1233,10,4,0)
1275^EC^13^
"KRN",101,1233,10,4,"^")
IBDF EF CLINIC GROUP EDIT
"KRN",101,1233,10,5,0)
824^EX^90^
"KRN",101,1233,10,5,"^")
IBDF EF QUIT
"KRN",101,1233,10,6,0)
1730^DG^80^
"KRN",101,1233,10,6,"^")
IBDF EF CLINIC GROUP DELETE
"KRN",101,1233,20)

"KRN",101,1233,26)
D SHOW^VALM
"KRN",101,1233,28)
Select Action: 
"KRN",101,1233,99)
56663,40772
"KRN",101,1234,-1)
0^68
"KRN",101,1234,0)
IBDF EF PARAMETER GROUP JUMP^Jump to Param. Grp.^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1234,20)
D JUMP^IBDFPE
"KRN",101,1234,99)
56305,55211
"KRN",101,1237,-1)
0^70
"KRN",101,1237,0)
IBDF EF QUEUE PRINT FORMS^Print Forms One Group^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1237,20)
D ^IBDFQS
"KRN",101,1237,99)
56301,49965
"KRN",101,1241,-1)
0^62
"KRN",101,1241,0)
IBDF EF CLINIC GROUP MENU ACTION^Clinic Group Menu^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1241,10,0)
^101.01PA
"KRN",101,1241,15)
K IBDFCG I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,1241,20)
D EN^IBDFCG
"KRN",101,1241,28)

"KRN",101,1241,99)
56301,49964
"KRN",101,1242,-1)
0^60
"KRN",101,1242,0)
IBDF EF CLINIC GROUP JUMP^Jump to Clinic Grp.^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1242,20)
D JUMP^IBDFCG
"KRN",101,1242,99)
56305,55076
"KRN",101,1244,-1)
0^71
"KRN",101,1244,0)
IBDF EF QUEUE STATS^Queue Status^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1244,20)
D STAT^IBDFPE1
"KRN",101,1244,99)
56301,49965
"KRN",101,1274,-1)
0^65
"KRN",101,1274,0)
IBDF EF EXIT^Exit^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1274,20)
S VALMBCK="Q"
"KRN",101,1274,99)
56308,45775
"KRN",101,1275,-1)
0^59
"KRN",101,1275,0)
IBDF EF CLINIC GROUP EDIT^Edit Clinic Group^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1275,20)
D EDIT^IBDFCG
"KRN",101,1275,99)
56305,55050
"KRN",101,1310,-1)
0^111
"KRN",101,1310,0)
IBDF RESEQUENCE LIST^RESEQUENCE LIST^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1310,1,0)
^^1^1^2950224^
"KRN",101,1310,1,1,0)
Allows the list to be resequenced by any subcolumn.
"KRN",101,1310,2,0)
^101.02A^1^1
"KRN",101,1310,2,1,0)
RS
"KRN",101,1310,2,"B","RS",1)

"KRN",101,1310,20)
D SEQUENCE^IBDF4
"KRN",101,1310,99)
56302,51941
"KRN",101,1313,-1)
0^132
"KRN",101,1313,0)
IBDFC ADD FORM TO LIST^ADD FORM TO LIST^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1313,1,0)
^^1^1^2950228^
"KRN",101,1313,1,1,0)
Allows a single form to be added to the list for conversion.
"KRN",101,1313,2,0)
^101.02A^1^1
"KRN",101,1313,2,1,0)
AF
"KRN",101,1313,2,"B","AF",1)

"KRN",101,1313,20)
D ADDONE^IBDFC
"KRN",101,1313,99)
56308,34262
"KRN",101,1315,-1)
0^133
"KRN",101,1315,0)
IBDFC CONVERSION UTILITY MENU^CONVERSION UTILITY^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1315,1,0)
^^1^1^2950228^^^
"KRN",101,1315,1,1,0)
Menu for the conversion utility screen.
"KRN",101,1315,2,0)
^101.02A^1^1
"KRN",101,1315,2,1,0)
CNV
"KRN",101,1315,2,"B","CNV",1)

"KRN",101,1315,4)
26^4
"KRN",101,1315,10,0)
^101.01PA^4^4
"KRN",101,1315,10,1,0)
1313^AF^1^^^Add Form To List
"KRN",101,1315,10,1,"^")
IBDFC ADD FORM TO LIST
"KRN",101,1315,10,2,0)
1319^RF^3^^^Remove From List
"KRN",101,1315,10,2,"^")
IBDFC REMOVE FORM FROM LIST
"KRN",101,1315,10,3,0)
1323^VL^6^^^View Conversion Log
"KRN",101,1315,10,3,"^")
IBDFC LIST CONVERTED FORMS
"KRN",101,1315,10,4,0)
1327^CL^5^
"KRN",101,1315,10,4,"^")
IBDFC CONVERT LISTED FORMS
"KRN",101,1315,26)
D SHOW^VALM
"KRN",101,1315,99)
56315,34435
"KRN",101,1319,-1)
0^139
"KRN",101,1319,0)
IBDFC REMOVE FORM FROM LIST^REMOVE FROM LIST^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1319,1,0)
^^2^2^2950302^
"KRN",101,1319,1,1,0)
Used to remove a form from the current list of forms to be converted for
"KRN",101,1319,1,2,0)
scanning.
"KRN",101,1319,2,0)
^101.02A^1^1
"KRN",101,1319,2,1,0)
RF
"KRN",101,1319,2,"B","RF",1)

"KRN",101,1319,20)
D REMOVE^IBDFC
"KRN",101,1319,99)
56308,34056
"KRN",101,1322,-1)
0^137
"KRN",101,1322,0)
IBDFC MENU FOR CONVERTED FORMS^MENU FOR CONVERTED FORMS^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1322,1,0)
^^1^1^2950302^
"KRN",101,1322,1,1,0)
Menu for working with the list of converted forms.
"KRN",101,1322,2,0)
^101.02A^2^1
"KRN",101,1322,2,2,0)
LIST
"KRN",101,1322,2,"B","LIST",2)

"KRN",101,1322,4)
26^4
"KRN",101,1322,10,0)
^101.01PA^7^7
"KRN",101,1322,10,1,0)
802^EF^2^
"KRN",101,1322,10,1,"^")
IBDF EDIT FORM
"KRN",101,1322,10,2,0)
831^NM^1^
"KRN",101,1322,10,2,"^")
IBDF EDIT FORM NAME/DESCR/SIZE
"KRN",101,1322,10,3,0)
1331^VW^3^
"KRN",101,1322,10,3,"^")
IBDFC VIEW SCANNING WARNINGS
"KRN",101,1322,10,4,0)
1333^SI^4^
"KRN",101,1322,10,4,"^")
IBDF PRINT FORM DEFINITION
"KRN",101,1322,10,5,0)
1332^RC^5^
"KRN",101,1322,10,5,"^")
IBDFC REPLACE IN CLINICS
"KRN",101,1322,10,6,0)
1336^DF^6^
"KRN",101,1322,10,6,"^")
IBDFC DELETE CONVERTED FORM
"KRN",101,1322,10,7,0)
1337^PG^8^
"KRN",101,1322,10,7,"^")
IBDFC PURGE CONVERSION LOG
"KRN",101,1322,26)
D SHOW^VALM
"KRN",101,1322,99)
56774,47566
"KRN",101,1323,-1)
0^136
"KRN",101,1323,0)
IBDFC LIST CONVERTED FORMS^View Conversion Log^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1323,1,0)
^^1^1^2950306^^
"KRN",101,1323,1,1,0)
Used to go to the screen that lists all of the converted forms.
"KRN",101,1323,2,0)
^101.02A^1^1
"KRN",101,1323,2,1,0)
VL
"KRN",101,1323,2,"B","VL",1)

"KRN",101,1323,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,1323,20)
D LIST^IBDFC1
"KRN",101,1323,99)
56315,34334
"KRN",101,1324,-1)
0^67
"KRN",101,1324,0)
IBDF EF HELP SPEC INST^Special Instruc Help^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1324,20)
D EN^IBDFHLP
"KRN",101,1324,99)
56308,50064
"KRN",101,1325,-1)
0^66
"KRN",101,1325,0)
IBDF EF HELP MENU^Help Menu^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1325,4)
26^4
"KRN",101,1325,10,0)
^101.01PA
"KRN",101,1325,26)
D SHOW^VALM
"KRN",101,1325,28)
Select Action: 
"KRN",101,1325,99)
56308,51083
"KRN",101,1327,-1)
0^134
"KRN",101,1327,0)
IBDFC CONVERT LISTED FORMS^Convert List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1327,1,0)
^^3^3^2951208^^
"KRN",101,1327,1,1,0)
Converts all the forms on the list. The original forms are left unchanged.
"KRN",101,1327,1,2,0)
The forms are copied, the copied form is renamed with a CNV. prefix, and
"KRN",101,1327,1,3,0)
it is the copy that is converted.
"KRN",101,1327,2,0)
^101.02A^1^1
"KRN",101,1327,2,1,0)
CL
"KRN",101,1327,2,"B","CL",1)

"KRN",101,1327,20)
D CNVTLIST^IBDFC
"KRN",101,1327,99)
56309,30915
"KRN",101,1331,-1)
0^141
"KRN",101,1331,0)
IBDFC VIEW SCANNING WARNINGS^View Warnings^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1331,1,0)
^^2^2^2950306^^^
"KRN",101,1331,1,1,0)
Allows the potential problems discovered durring the conversion process to
"KRN",101,1331,1,2,0)
be viewed.
"KRN",101,1331,2,0)
^101.02A^1^1
"KRN",101,1331,2,1,0)
VW
"KRN",101,1331,2,"B","VW",1)

"KRN",101,1331,20)
D WARNINGS^IBDFC1
"KRN",101,1331,99)
56309,40232
"KRN",101,1332,-1)
0^140
"KRN",101,1332,0)
IBDFC REPLACE IN CLINICS^Replace In Clinics^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1332,1,0)
^^2^2^2950306^^^
"KRN",101,1332,1,1,0)
Used to substitute the converted forms for the original forms in the
"KRN",101,1332,1,2,0)
clinics.
"KRN",101,1332,2,0)
^101.02A^1^1
"KRN",101,1332,2,1,0)
RC
"KRN",101,1332,2,"B","RC",1)

"KRN",101,1332,20)
D REPLACE^IBDFC3
"KRN",101,1332,99)
56309,40377
"KRN",101,1333,-1)
0^91
"KRN",101,1333,0)
IBDF PRINT FORM DEFINITION^Scanning Info^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1333,1,0)
^^2^2^2950309^^
"KRN",101,1333,1,1,0)
Allows the information in the Form Definition table to be printed. This is
"KRN",101,1333,1,2,0)
the information used form scanning.
"KRN",101,1333,2,0)
^101.02A^1^1
"KRN",101,1333,2,1,0)
SI
"KRN",101,1333,2,"B","SI",1)

"KRN",101,1333,20)
D FORMDEF^IBDFC4
"KRN",101,1333,99)
56309,43590
"KRN",101,1336,-1)
0^135
"KRN",101,1336,0)
IBDFC DELETE CONVERTED FORM^Delete Converted Form^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1336,1,0)
^^2^2^2950309^
"KRN",101,1336,1,1,0)
Allows a form listed in the conversion log to be deleted if it is not in
"KRN",101,1336,1,2,0)
use.
"KRN",101,1336,2,0)
^101.02A^1^1
"KRN",101,1336,2,1,0)
DF
"KRN",101,1336,2,"B","DF",1)

"KRN",101,1336,20)
D DELFORM^IBDFC1
"KRN",101,1336,99)
56315,35803
"KRN",101,1337,-1)
0^138
"KRN",101,1337,0)
IBDFC PURGE CONVERSION LOG^Purge Conversion Log^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1337,1,0)
^^1^1^2950309^
"KRN",101,1337,1,1,0)
Allows the log to be purged.
"KRN",101,1337,2,0)
^101.02A^2^1
"KRN",101,1337,2,2,0)
PG
"KRN",101,1337,2,"B","PG",2)

"KRN",101,1337,10,0)
^101.01PA
"KRN",101,1337,20)
D PURGE^IBDFC1
"KRN",101,1337,99)
56315,37875
"KRN",101,1340,-1)
0^158
"KRN",101,1340,0)
IBDF EF TASK INTERRUPT^Task Interrupt^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1340,15)
K IBDFSTOP
"KRN",101,1340,20)
S IBDFSTOP=1 D STAT^IBDFPE1
"KRN",101,1340,99)
57091,52312
"KRN",101,1355,-1)
0^128
"KRN",101,1355,0)
IBDF UTIL PRIMARY PROTOCOL^Utility Protocol^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1355,4)
26^4
"KRN",101,1355,10,0)
^101.01PA^7^6
"KRN",101,1355,10,2,0)
1378^JP^33^
"KRN",101,1355,10,2,"^")
IBDF UTIL JUMP
"KRN",101,1355,10,3,0)
1379^CL^23^
"KRN",101,1355,10,3,"^")
IBDF UTIL CHANGE LIST
"KRN",101,1355,10,4,0)
1393^DL^24^
"KRN",101,1355,10,4,"^")
IBDF UTIL DELETE FROM SELECTION LIST
"KRN",101,1355,10,5,0)
1394^IC^26^
"KRN",101,1355,10,5,"^")
IBDF UTIL COMPLETE INVALID LIST
"KRN",101,1355,10,6,0)
1465^RC^23^
"KRN",101,1355,10,6,"^")
IBDF UTIL REPLACE CODE
"KRN",101,1355,10,7,0)
644^PL^35^
"KRN",101,1355,10,7,"^")
VALM PRINT LIST
"KRN",101,1355,26)
D SHOW^VALM
"KRN",101,1355,28)
Select Action: 
"KRN",101,1355,99)
56438,52613
"KRN",101,1378,-1)
0^127
"KRN",101,1378,0)
IBDF UTIL JUMP^Jump^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1378,20)
D JUMP^IBDFUTL2
"KRN",101,1378,99)
56371,36884
"KRN",101,1379,-1)
0^122
"KRN",101,1379,0)
IBDF UTIL CHANGE LIST^Change List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1379,15)
K IBDF1
"KRN",101,1379,20)
S IBDF1=1 D CHGLST^IBDFUTL2
"KRN",101,1379,99)
56371,43807
"KRN",101,1393,-1)
0^125
"KRN",101,1393,0)
IBDF UTIL DELETE FROM SELECTION LIST^Delete From List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1393,20)
D DELETE^IBDFUTL2
"KRN",101,1393,99)
56378,37723
"KRN",101,1394,-1)
0^123
"KRN",101,1394,0)
IBDF UTIL COMPLETE INVALID LIST^Invalid Code List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1394,20)
D START^IBDFLST
"KRN",101,1394,99)
56384,49181
"KRN",101,1395,-1)
0^124
"KRN",101,1395,0)
IBDF UTIL COMPLETE LIST MENU^Complete List Menu^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1395,4)
26^4
"KRN",101,1395,10,0)
^101.01PA^1^1
"KRN",101,1395,10,1,0)
1461^JP^11^
"KRN",101,1395,10,1,"^")
IBDF UTIL INVALID CODES JUMP
"KRN",101,1395,26)
D SHOW^VALM
"KRN",101,1395,28)
Select Action: 
"KRN",101,1395,99)
56439,27573
"KRN",101,1461,-1)
0^126
"KRN",101,1461,0)
IBDF UTIL INVALID CODES JUMP^Jump^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1461,20)
D JUMP^IBDFLST
"KRN",101,1461,99)
56439,27188
"KRN",101,1465,-1)
0^129
"KRN",101,1465,0)
IBDF UTIL REPLACE CODE^Replace Code^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1465,20)
D REPLACE^IBDFUTL3
"KRN",101,1465,99)
56391,43512
"KRN",101,1466,-1)
0^107
"KRN",101,1466,0)
IBDF QUICK SELECTION EDIT^Quick Selection Edit^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1466,20)
D ^IBDFQSL
"KRN",101,1466,99)
56399,38106
"KRN",101,1467,-1)
0^100
"KRN",101,1467,0)
IBDF QUICK EDIT ACTIONS MENU^Quick Edit Menu^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1467,4)
26^4
"KRN",101,1467,10,0)
^101.01PA^10^10
"KRN",101,1467,10,1,0)
1468^ES^2^
"KRN",101,1467,10,1,"^")
IBDF QUICK ACTION EDIT
"KRN",101,1467,10,2,0)
1469^DS^3^^^Delete Selection
"KRN",101,1467,10,2,"^")
IBDF QUICK ACTION DELETE
"KRN",101,1467,10,3,0)
1470^AS^1^^^Add Selection
"KRN",101,1467,10,3,"^")
IBDF QUICK ACTION ADD
"KRN",101,1467,10,4,0)
1476^PH^4^^^New Place Holder
"KRN",101,1467,10,4,"^")
IBDF QUICK ACTION ADD BLANK
"KRN",101,1467,10,5,0)
1477^FA^5^
"KRN",101,1467,10,5,"^")
IBDF QUICK ACTION FORMAT GROUP
"KRN",101,1467,10,6,0)
1479^GA^6^
"KRN",101,1467,10,6,"^")
IBDF QUICK GROUP ADD
"KRN",101,1467,10,7,0)
1643^GC^7^
"KRN",101,1467,10,7,"^")
IBDF QUICK GRP COPY
"KRN",101,1467,10,8,0)
1646^GD^8^
"KRN",101,1467,10,8,"^")
IBDF QUICK GRP DELETE
"KRN",101,1467,10,9,0)
1656^GE^9^
"KRN",101,1467,10,9,"^")
IBDF QUICK EDIT GRP
"KRN",101,1467,10,10,0)
1836^RS^10^
"KRN",101,1467,10,10,"^")
IBDF QUICK GROUP RESEQUENCE
"KRN",101,1467,26)
D SHOW^VALM
"KRN",101,1467,28)
Select Action: 
"KRN",101,1467,99)
56914,42563
"KRN",101,1468,-1)
0^98
"KRN",101,1468,0)
IBDF QUICK ACTION EDIT^Edit Selection^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1468,20)
D EDIT^IBDFQEA
"KRN",101,1468,99)
56406,32395
"KRN",101,1469,-1)
0^97
"KRN",101,1469,0)
IBDF QUICK ACTION DELETE^Delete Selection^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1469,20)
D DELETE^IBDFQEA
"KRN",101,1469,99)
56406,32449
"KRN",101,1470,-1)
0^95
"KRN",101,1470,0)
IBDF QUICK ACTION ADD^Add Selection^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1470,20)
D ADDSLCTN^IBDFQEA
"KRN",101,1470,99)
56406,35052
"KRN",101,1476,-1)
0^96
"KRN",101,1476,0)
IBDF QUICK ACTION ADD BLANK^Add Blank^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1476,20)
D ADDBLANK^IBDFQEA
"KRN",101,1476,99)
56410,36802
"KRN",101,1477,-1)
0^99
"KRN",101,1477,0)
IBDF QUICK ACTION FORMAT GROUP^Format All^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1477,20)
D FORMAT^IBDFQEA
"KRN",101,1477,99)
56410,44471
"KRN",101,1479,-1)
0^102
"KRN",101,1479,0)
IBDF QUICK GROUP ADD^Group Add^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1479,20)
D GROUPADD^IBDFQEA
"KRN",101,1479,99)
56411,35854
"KRN",101,1543,-1)
0^108
"KRN",101,1543,0)
IBDF QUICK SELECTION EDIT 2ND SCREEN^Quick Selection Edit^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1543,20)
D EDITBLK^IBDFQSL,IDXFORM^IBDF5A()
"KRN",101,1543,99)
56424,47070
"KRN",101,1630,-1)
0^80
"KRN",101,1630,0)
IBDF FT MENU^Form Tracking Menu^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1630,4)
26^4
"KRN",101,1630,10,0)
^101.01PA^6^6
"KRN",101,1630,10,1,0)
1631^SA^1^
"KRN",101,1630,10,1,"^")
IBDF FT STATISTICS
"KRN",101,1630,10,2,0)
1633^SS^2^
"KRN",101,1630,10,2,"^")
IBDF FT STATUS SELECT
"KRN",101,1630,10,3,0)
644^PL^3^
"KRN",101,1630,10,3,"^")
VALM PRINT LIST
"KRN",101,1630,10,4,0)
1647^CL^4^
"KRN",101,1630,10,4,"^")
IBDF FT CHANGE LIST
"KRN",101,1630,10,5,0)
1820^DL^5^
"KRN",101,1630,10,5,"^")
IBDF FT DELETE
"KRN",101,1630,10,6,0)
1897^RF^6^
"KRN",101,1630,10,6,"^")
IBDF FT RELEASE
"KRN",101,1630,26)
D SHOW^VALM
"KRN",101,1630,28)
Select Action: 
"KRN",101,1630,99)
57064,41530
"KRN",101,1631,-1)
0^81
"KRN",101,1631,0)
IBDF FT STATISTICS^Statistics^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1631,20)
D EN^IBDFST
"KRN",101,1631,99)
56439,37424
"KRN",101,1632,-1)
0^82
"KRN",101,1632,0)
IBDF FT STATS MENU^Statistics^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1632,4)
26^4
"KRN",101,1632,10,0)
^101.01PA^1^1
"KRN",101,1632,10,1,0)
644^PL^1^
"KRN",101,1632,10,1,"^")
VALM PRINT LIST
"KRN",101,1632,26)
D SHOW^VALM
"KRN",101,1632,28)
Select Action: 
"KRN",101,1632,99)
56448,49727
"KRN",101,1633,-1)
0^83
"KRN",101,1633,0)
IBDF FT STATUS SELECT^Status Select^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1633,20)
D START^IBDFSS,EN^IBDFSS
"KRN",101,1633,99)
56440,31040
"KRN",101,1634,-1)
0^84
"KRN",101,1634,0)
IBDF FT STATUS SELECT MENU^Status Select Menu^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1634,4)
26^4
"KRN",101,1634,10,0)
^101.01PA^1^1
"KRN",101,1634,10,1,0)
644^PL^3^
"KRN",101,1634,10,1,"^")
VALM PRINT LIST
"KRN",101,1634,26)
D SHOW^VALM
"KRN",101,1634,28)
Select Action: 
"KRN",101,1634,99)
56448,48414
"KRN",101,1643,-1)
0^104
"KRN",101,1643,0)
IBDF QUICK GRP COPY^Group Copy^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1643,15)
D INIT^IBDFQSL1 S VALMBCK="R"
"KRN",101,1643,20)
D ^IBDFGRP
"KRN",101,1643,99)
56454,36624
"KRN",101,1644,-1)
0^106
"KRN",101,1644,0)
IBDF QUICK GRP MENU^Group Copy Menu^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1644,4)
26^4
"KRN",101,1644,10,0)
^101.01PA^1^1
"KRN",101,1644,10,1,0)
1645^GC^1^
"KRN",101,1644,10,1,"^")
IBDF QUICK GROUP COPY SELECTION
"KRN",101,1644,26)
D SHOW^VALM
"KRN",101,1644,28)
Select Action: 
"KRN",101,1644,99)
56455,30838
"KRN",101,1645,-1)
0^103
"KRN",101,1645,0)
IBDF QUICK GROUP COPY SELECTION^Group Copy Selection^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1645,20)
D GRPCOPY^IBDFGRP
"KRN",101,1645,99)
56455,30711
"KRN",101,1646,-1)
0^105
"KRN",101,1646,0)
IBDF QUICK GRP DELETE^Group Delete^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1646,20)
D GRPDEL^IBDFQEA
"KRN",101,1646,99)
56460,50794
"KRN",101,1647,-1)
0^78
"KRN",101,1647,0)
IBDF FT CHANGE LIST^Change List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1647,15)
K IBDF1
"KRN",101,1647,20)
S IBDF1=1 D CHGLST^IBDFFT
"KRN",101,1647,99)
56467,48515
"KRN",101,1656,-1)
0^101
"KRN",101,1656,0)
IBDF QUICK EDIT GRP^Group Edit^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1656,20)
D GRPEDIT^IBDFQEA
"KRN",101,1656,99)
56545,39596
"KRN",101,1665,-1)
0^90
"KRN",101,1665,0)
IBDF PCE EVENT^Process events from PCE^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1665,1,0)
^^14^14^2951214^
"KRN",101,1665,1,1,0)
This protocol is the event handler attached
"KRN",101,1665,1,2,0)
to the PXK VISIT DATA EVENT protocol.
"KRN",101,1665,1,3,0)

"KRN",101,1665,1,4,0)
In order to determine if all data from encounter
"KRN",101,1665,1,5,0)
forms has been collected it is necessary to flag
"KRN",101,1665,1,6,0)
all printed forms as having data input.  If the
"KRN",101,1665,1,7,0)
input is from AICS then the Form Tracking file is
"KRN",101,1665,1,8,0)
automatically updated.  If data entry is done through
"KRN",101,1665,1,9,0)
Scheduling or PCE then the form tracking file is not
"KRN",101,1665,1,10,0)
updated.
"KRN",101,1665,1,11,0)
 
"KRN",101,1665,1,12,0)
This protocol ensures that data during data entry
"KRN",101,1665,1,13,0)
through PCE or scheduling flags a manual data entry
"KRN",101,1665,1,14,0)
field in the Form Tracking file.
"KRN",101,1665,20)
D MAN^IBDFPCE
"KRN",101,1665,99)
56595,34005
"KRN",101,1730,-1)
0^58
"KRN",101,1730,0)
IBDF EF CLINIC GROUP DELETE^Delete Clinic Grp^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1730,20)
D DEL^IBDFCG
"KRN",101,1730,99)
56663,40648
"KRN",101,1758,-1)
0^63
"KRN",101,1758,0)
IBDF EF DELETE QUEUE PARMS^Delete Param Grp^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1758,20)
D DEL^IBDFPE1
"KRN",101,1758,99)
56666,34654
"KRN",101,1820,-1)
0^79
"KRN",101,1820,0)
IBDF FT DELETE^Delete Entry^^A^^^^^^^^
"KRN",101,1820,1,0)
^^2^2^2960626^
"KRN",101,1820,1,1,0)
Allows for deleting of Forms Tracking Entries that are not associated with
"KRN",101,1820,1,2,0)
an appointment.
"KRN",101,1820,20)
D DELFT^IBDFDEA
"KRN",101,1820,99)
56790,41774
"KRN",101,1825,-1)
0^75
"KRN",101,1825,0)
IBDF FORM COMPONENT MENU^Form Component Display Menu^^M^^^^^^^^AICS PACKAGE INTERFACES
"KRN",101,1825,4)
26^4
"KRN",101,1825,10,0)
^101.01PA^2^2
"KRN",101,1825,10,1,0)
645^EX^11^^^Expand Item
"KRN",101,1825,10,1,"^")
VALM EXPAND
"KRN",101,1825,10,2,0)
1828^BC^13^
"KRN",101,1825,10,2,"^")
IBDF COMP EXP
"KRN",101,1825,26)
D SHOW^VALM
"KRN",101,1825,28)
Select Action: 
"KRN",101,1825,99)
56845,34990
"KRN",101,1826,-1)
0^74
"KRN",101,1826,0)
IBDF FORM COMPONENT ACTION^Form Component Action^^A^^^^^^^^AICS PACKAGE INTERFACES
"KRN",101,1826,4)
^^^CA
"KRN",101,1826,20)
D INIT^IBDFCMP
"KRN",101,1826,99)
56824,48925
"KRN",101,1827,-1)
0^28
"KRN",101,1827,0)
IBDF COMPONENT EXP PROTO^Expand Entry^^M^^^^^^^^AICS PACKAGE INTERFACES
"KRN",101,1827,4)
26^4^^EX
"KRN",101,1827,10,0)
^101.01PA^2^1
"KRN",101,1827,26)
D SHOW^VALM
"KRN",101,1827,28)
Select Action: 
"KRN",101,1827,99)
56852,51274
"KRN",101,1828,-1)
0^26
"KRN",101,1828,0)
IBDF COMP EXP^Block Components^^A^^^^^^^^AICS PACKAGE INTERFACES
"KRN",101,1828,1,0)
^^1^1^2960827^^
"KRN",101,1828,1,1,0)
 
"KRN",101,1828,4)
^^^BC
"KRN",101,1828,20)
D ^IBDFCMP1
"KRN",101,1828,99)
56840,35622
"KRN",101,1836,-1)
0^142
"KRN",101,1836,0)
IBDF QUICK GROUP RESEQUENCE^Resequence Group^^A^^^^^^^^AICS PACKAGE INTERFACES
"KRN",101,1836,4)
^^^RS
"KRN",101,1836,20)
D GRPRESEQ^IBDFQEA
"KRN",101,1836,99)
56914,42362
"KRN",101,1897,-1)
0^157
"KRN",101,1897,0)
IBDF FT RELEASE^Rel Forms w/Lost Pages^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,1897,1,0)
^^5^5^2970327^
"KRN",101,1897,1,1,0)
This option should be used to free a Forms Tracking entry when not all
"KRN",101,1897,1,2,0)
pages of the form have been received, but the remaining pages have been
"KRN",101,1897,1,3,0)
lost.  This option will take the data that has been stored temporarily
"KRN",101,1897,1,4,0)
in Forms Tracking (from the pages that were scanned), and will pass it
"KRN",101,1897,1,5,0)
across to PCE.
"KRN",101,1897,20)
D FREEFT^IBDFFRFT
"KRN",101,1897,99)
57064,41416
"KRN",409.61,70,-1)
0^4
"KRN",409.61,70,0)
IBDF CLINIC FORM LIST^1^^123^5^18^1^1^FORM^IBDF CLINIC'S FORMS MENU^LIST OF FORMS FOR CLINIC^1
"KRN",409.61,70,1)
^IBDF HIDDEN ACTIONS
"KRN",409.61,70,"ARRAY")
 ^TMP("IB",$J,"FORM LIST")
"KRN",409.61,70,"COL",0)
^409.621^3^3
"KRN",409.61,70,"COL",1,0)
ID^1^3^^R^1
"KRN",409.61,70,"COL",2,0)
FORM NAME^6^30^FORM NAME^
"KRN",409.61,70,"COL",3,0)
BRIEF DESCRIPTION^38^80^USE & BRIEF DESCRIPTION^H
"KRN",409.61,70,"COL","AIDENT",1,1)

"KRN",409.61,70,"COL","B","BRIEF DESCRIPTION",3)

"KRN",409.61,70,"COL","B","FORM NAME",2)

"KRN",409.61,70,"COL","B","ID",1)

"KRN",409.61,70,"EXP")

"KRN",409.61,70,"FNL")
D ONEXIT^IBDF6
"KRN",409.61,70,"HDR")
D HDR^IBDF6
"KRN",409.61,70,"HLP")
W ""
"KRN",409.61,70,"INIT")
D ONENTRY^IBDF6
"KRN",409.61,71,-1)
0^6
"KRN",409.61,71,0)
IBDF DISPLAY FORM FOR EDIT^1^^200^4^18^1^1^FORM^IBDF MENU FOR EDITING DISPLAYED FORM^EDIT ENCOUNTER FORM^1
"KRN",409.61,71,1)
^IBDF HIDDEN ACTIONS
"KRN",409.61,71,"ARRAY")
 ^TMP("IB",$J,"FORM")
"KRN",409.61,71,"COL",0)
^409.621^3^3
"KRN",409.61,71,"COL",1,0)
ROW^1^3^^^1
"KRN",409.61,71,"COL",2,0)
FORM LEFT SIDE^5^79^123456789 123456789 123456789 123456789 123456789 123456789 123456789 12345678
"KRN",409.61,71,"COL",3,0)
FORM RIGHT SIDE^85^80^123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789
"KRN",409.61,71,"COL","AIDENT",1,1)

"KRN",409.61,71,"COL","B","FORM LEFT SIDE",2)

"KRN",409.61,71,"COL","B","FORM RIGHT SIDE",3)

"KRN",409.61,71,"COL","B","ROW",1)

"KRN",409.61,71,"FNL")
D EXIT^IBDF5
"KRN",409.61,71,"HDR")
D HDR^IBDF5
"KRN",409.61,71,"HLP")
W ""
"KRN",409.61,71,"INIT")
D INIT^IBDF5
"KRN",409.61,72,-1)
0^7
"KRN",409.61,72,0)
IBDF DISPLAY GROUPS FOR EDIT^1^^80^4^18^1^1^SELECTION LIST PRINT GROUP^IBDF EDIT SELECTION LIST MENU^Edit Selection List^1
"KRN",409.61,72,1)
^IBDF HIDDEN ACTIONS
"KRN",409.61,72,"ARRAY")
 ^TMP("IB",$J,"GROUPS")
"KRN",409.61,72,"COL",0)
^409.621^4^4
"KRN",409.61,72,"COL",1,0)
PRINT ORDER^8^6^ORDER^R^0
"KRN",409.61,72,"COL",2,0)
HEADER^20^40^HEADER^
"KRN",409.61,72,"COL",3,0)
CONTAINS^65^8^CONTAINS
"KRN",409.61,72,"COL",4,0)
ID^1^2^^R^1
"KRN",409.61,72,"COL","AIDENT",0,1)

"KRN",409.61,72,"COL","AIDENT",1,4)

"KRN",409.61,72,"COL","B","CONTAINS",3)

"KRN",409.61,72,"COL","B","HEADER",2)

"KRN",409.61,72,"COL","B","ID",4)

"KRN",409.61,72,"COL","B","PRINT ORDER",1)

"KRN",409.61,72,"FNL")
D ONEXIT^IBDF3
"KRN",409.61,72,"HDR")
D LMGRPHDR^IBDF3
"KRN",409.61,72,"HLP")
W ""
"KRN",409.61,72,"INIT")
D ONENTRY^IBDF3
"KRN",409.61,73,-1)
0^8
"KRN",409.61,73,0)
IBDF EDIT GROUP'S SELECTIONS^1^1^150^4^20^1^1^SELECTION^IBDF EDIT GROUP'S SELECTIONS MENU^Edit Group's Selections^1^^1
"KRN",409.61,73,1)
^IBDF HIDDEN ACTIONS
"KRN",409.61,73,"ARRAY")
 ^TMP("IB",$J,"SELECTIONS")
"KRN",409.61,73,"COL",0)
^409.621^3^3
"KRN",409.61,73,"COL",1,0)
ID^1^3^^R^1
"KRN",409.61,73,"COL",2,0)
SELECTION^16^80^****************   SELECTIONS   ****************
"KRN",409.61,73,"COL",3,0)
ORDER^8^6^ORDER
"KRN",409.61,73,"COL","AIDENT",1,1)

"KRN",409.61,73,"COL","B","ID",1)

"KRN",409.61,73,"COL","B","ORDER",3)

"KRN",409.61,73,"COL","B","SELECTION",2)

"KRN",409.61,73,"FNL")
D ONEXIT^IBDF4
"KRN",409.61,73,"HDR")
D LMGRPHDR^IBDF4
"KRN",409.61,73,"HLP")
W ""
"KRN",409.61,73,"INIT")
D ONENTRY^IBDF4
"KRN",409.61,74,-1)
0^13
"KRN",409.61,74,0)
IBDF FORM BLOCK EDIT^1^^200^4^18^1^1^FORM BLOCK^IBDF EDIT FORM BLOCK MENU^EDITING A FORM BLOCK^1
"KRN",409.61,74,1)
^IBDF HIDDEN ACTIONS
"KRN",409.61,74,"ARRAY")
 ^TMP("IB",$J,"FORM BLOCK")
"KRN",409.61,74,"COL",0)
^409.621^3^3
"KRN",409.61,74,"COL",1,0)
ROW^1^3^^^1
"KRN",409.61,74,"COL",2,0)
BLOCK LEFT SIDE^5^80^123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789
"KRN",409.61,74,"COL",3,0)
BLOCK RIGHT SIDE^85^80^123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789
"KRN",409.61,74,"COL","AIDENT",1,1)

"KRN",409.61,74,"COL","B","BLOCK LEFT SIDE",2)

"KRN",409.61,74,"COL","B","BLOCK RIGHT SIDE",3)

"KRN",409.61,74,"COL","B","ROW",1)

"KRN",409.61,74,"FNL")
D EXIT^IBDF9
"KRN",409.61,74,"HDR")
D HDR^IBDF9
"KRN",409.61,74,"HLP")
W ""
"KRN",409.61,74,"INIT")
D INIT^IBDF9
"KRN",409.61,75,-1)
0^20
"KRN",409.61,75,0)
IBDF TOOL KIT BLOCK LIST^1^^160^4^20^1^1^TOOL KIT BLOCK^IBDF MENU FOR ADDING TOOL KIT BLOCK^LIST OF TOOL KIT BLOCKS^1
"KRN",409.61,75,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,75,"ARRAY")
 ^TMP("IBDF",$J,"TOOL KIT BLOCK LIST")
"KRN",409.61,75,"COL",0)
^409.621^3^3
"KRN",409.61,75,"COL",1,0)
ID^1^3^^R^1
"KRN",409.61,75,"COL",2,0)
BLOCK NAME^6^30^BLOCK NAME
"KRN",409.61,75,"COL",3,0)
BRIEF DESCRIPTION^37^80^BRIEF DESCRIPTION
"KRN",409.61,75,"COL","AIDENT",1,1)

"KRN",409.61,75,"COL","B","BLOCK NAME",2)

"KRN",409.61,75,"COL","B","BRIEF DESCRIPTION",3)

"KRN",409.61,75,"COL","B","ID",1)

"KRN",409.61,75,"FNL")
D EXIT^IBDF7
"KRN",409.61,75,"HDR")

"KRN",409.61,75,"HLP")
D HELP^IBDF7
"KRN",409.61,75,"INIT")
D INIT^IBDF7
"KRN",409.61,76,-1)
0^24
"KRN",409.61,76,0)
IBDF VIEW TOOL KIT BLOCK^2^^200^5^20^1^1^TOOL KIT BLOCK^^VIEW TOOL KIT BLOCK^1
"KRN",409.61,76,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,76,"ARRAY")
 ^TMP("IB",$J,"TOOL KIT BLOCK")
"KRN",409.61,76,"COL",0)
^409.621^3^3
"KRN",409.61,76,"COL",1,0)
ROW^1^3^^^1
"KRN",409.61,76,"COL",2,0)
BLOCK LEFT SIDE^5^80^123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789
"KRN",409.61,76,"COL",3,0)
BLOCK RIGHT SIDE^85^80^123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789
"KRN",409.61,76,"COL","AIDENT",1,1)

"KRN",409.61,76,"COL","B","BLOCK LEFT SIDE",2)

"KRN",409.61,76,"COL","B","BLOCK RIGHT SIDE",3)

"KRN",409.61,76,"COL","B","ROW",1)

"KRN",409.61,76,"FNL")
D EXIT^IBDF8
"KRN",409.61,76,"HDR")
D HDR^IBDF8
"KRN",409.61,76,"HLP")
W ""
"KRN",409.61,76,"INIT")
D INIT^IBDF8
"KRN",409.61,77,-1)
0^21
"KRN",409.61,77,0)
IBDF TOOL KIT FORMS^1^^123^5^20^1^1^FORM^IBDF TOOL KIT FORMS MENU^LIST OF TOOL KIT FORMS^1
"KRN",409.61,77,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,77,"ARRAY")
 ^TMP("IB",$J,"FORM LIST")
"KRN",409.61,77,"COL",0)
^409.621^3^3
"KRN",409.61,77,"COL",1,0)
ID^1^3^^R^1
"KRN",409.61,77,"COL",2,0)
FORM NAME^6^30^FORM NAME
"KRN",409.61,77,"COL",3,0)
BRIEF DESCRIPTION^38^80^BRIEF DESCRIPTION^H
"KRN",409.61,77,"COL","AIDENT",1,1)

"KRN",409.61,77,"COL","B","BRIEF DESCRIPTION",3)

"KRN",409.61,77,"COL","B","FORM NAME",2)

"KRN",409.61,77,"COL","B","ID",1)

"KRN",409.61,77,"FNL")
D ONEXIT^IBDF12
"KRN",409.61,77,"HDR")

"KRN",409.61,77,"HLP")
W ""
"KRN",409.61,77,"INIT")
D ONENTRY^IBDF12
"KRN",409.61,78,-1)
0^9
"KRN",409.61,78,0)
IBDF EDIT TOOL KIT BLOCKS^1^^160^4^20^1^1^TOOL KIT BLOCK^IBDF EDIT TOOL KIT BLOCKS MENU^EDIT TOOL KIT BLOCKS^1
"KRN",409.61,78,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,78,"ARRAY")
 ^TMP("IBDF",$J,"TOOL KIT BLOCK LIST")
"KRN",409.61,78,"COL",0)
^409.621^4^4
"KRN",409.61,78,"COL",1,0)
ID^1^3^^R^1
"KRN",409.61,78,"COL",2,0)
BLOCK NAME^6^30^BLOCK NAME
"KRN",409.61,78,"COL",3,0)
BRIEF DESCRIPTION^43^80^BRIEF DESCRIPTION
"KRN",409.61,78,"COL",4,0)
TK ORDER^38^4^TK#
"KRN",409.61,78,"COL","AIDENT",1,1)

"KRN",409.61,78,"COL","B","BLOCK NAME",2)

"KRN",409.61,78,"COL","B","BRIEF DESCRIPTION",3)

"KRN",409.61,78,"COL","B","ID",1)

"KRN",409.61,78,"COL","B","TK ORDER",4)

"KRN",409.61,78,"FNL")
D EXIT^IBDF7
"KRN",409.61,78,"HLP")
D HELP^IBDF7
"KRN",409.61,78,"INIT")
D INIT^IBDF7
"KRN",409.61,79,-1)
0^1
"KRN",409.61,79,0)
IBDE IMP/EXP FORMS^1^1^123^7^18^1^1^FORM FOR IMP/EXP^IBDE IMP/EXP MENU FOR FORMS^Import/Export Work Space^1
"KRN",409.61,79,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,79,"ARRAY")
 ^TMP("IBDF",$J,"IMP/EXP WS","FORMS")
"KRN",409.61,79,"COL",0)
^409.621^3^3
"KRN",409.61,79,"COL",1,0)
ID^1^3^^R^1
"KRN",409.61,79,"COL",2,0)
FORM NAME^6^30^FORM NAME^
"KRN",409.61,79,"COL",3,0)
BRIEF DESCRIPTION^38^80^USE & BRIEF DESCRIPTION^
"KRN",409.61,79,"COL","AIDENT",1,1)

"KRN",409.61,79,"COL","B","BRIEF DESCRIPTION",3)

"KRN",409.61,79,"COL","B","FORM NAME",2)

"KRN",409.61,79,"COL","B","ID",1)

"KRN",409.61,79,"FNL")
D ONEXIT^IBDE
"KRN",409.61,79,"HDR")
D HDR^IBDE
"KRN",409.61,79,"HLP")
W ""
"KRN",409.61,79,"INIT")
D ONENTRY^IBDE
"KRN",409.61,80,-1)
0^3
"KRN",409.61,80,0)
IBDE TEXT DISPLAY^2^1^132^4^20^1^1^TEXT^^TEXT DISPLAY^1
"KRN",409.61,80,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,80,"HLP")
W ""
"KRN",409.61,80,"INIT")
D TEXT^IBDE1
"KRN",409.61,81,-1)
0^2
"KRN",409.61,81,0)
IBDE IMP/EXP TK BLOCKS^1^1^123^7^18^1^1^BLOCK FOR IMP/EXP^IBDE IMP/EXP MENU FOR BLOCKS^Import/Export Work Space^1
"KRN",409.61,81,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,81,"ARRAY")
 ^TMP("IBDF",$J,"IMP/EXP WS","BLOCKS")
"KRN",409.61,81,"COL",0)
^409.621^3^3
"KRN",409.61,81,"COL",1,0)
ID^1^3^^R^1
"KRN",409.61,81,"COL",2,0)
BLOCK NAME^6^30^BLOCK NAME^
"KRN",409.61,81,"COL",3,0)
BRIEF DESCRIPTION^38^80^USE & BRIEF DESCRIPTION^
"KRN",409.61,81,"COL","AIDENT",1,1)

"KRN",409.61,81,"COL","B","BLOCK NAME",2)

"KRN",409.61,81,"COL","B","BRIEF DESCRIPTION",3)

"KRN",409.61,81,"COL","B","ID",1)

"KRN",409.61,81,"FNL")
D ONEXIT^IBDE3
"KRN",409.61,81,"HDR")
D HDR^IBDE3
"KRN",409.61,81,"HLP")
W ""
"KRN",409.61,81,"INIT")
D ONENTRY^IBDE3
"KRN",409.61,211,-1)
0^12
"KRN",409.61,211,0)
IBDF EF QUEUE PARMS^1^^80^5^18^1^1^Parameter Group^IBDF EF QUEUE PARMS MENU^Print Mgrs. Queuing Params.^1^^1
"KRN",409.61,211,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,211,"ARRAY")
 ^TMP("IBDRPT",$J)
"KRN",409.61,211,"FNL")
D EXIT^IBDFPE
"KRN",409.61,211,"HDR")
D HDR^IBDFPE
"KRN",409.61,211,"HLP")
D HELP^IBDFPE
"KRN",409.61,211,"INIT")
D INIT^IBDFPE
"KRN",409.61,212,-1)
0^10
"KRN",409.61,212,0)
IBDF EF CLINIC GROUP LT^1^^80^5^19^1^1^Clinic Group^IBDF EF CLINIC GROUP MENU^Clinic Groups/Clinics List^1^^1
"KRN",409.61,212,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,212,"ARRAY")
 ^TMP("IBDFCG",$J)
"KRN",409.61,212,"COL",0)
^409.621^3^3
"KRN",409.61,212,"COL",1,0)
CLINIC GROUP^2^26^CLINIC GROUP
"KRN",409.61,212,"COL",2,0)
DIVISION^28^26^DIVISION
"KRN",409.61,212,"COL",3,0)
CLINIC NAME^56^24^CLINIC NAME
"KRN",409.61,212,"COL","B","CLINIC GROUP",1)

"KRN",409.61,212,"COL","B","CLINIC NAME",3)

"KRN",409.61,212,"COL","B","DIVISION",2)

"KRN",409.61,212,"FNL")
D EXIT^IBDFCG
"KRN",409.61,212,"HDR")
D HDR^IBDFCG
"KRN",409.61,212,"HLP")
D HELP^IBDFCG
"KRN",409.61,212,"INIT")
D INIT^IBDFCG
"KRN",409.61,223,-1)
0^26
"KRN",409.61,223,0)
IBDFC CONVERSION UTILITY^1^^123^5^20^1^1^FORM^IBDFC CONVERSION UTILITY MENU^CONVERSION UTILITY^1
"KRN",409.61,223,1)
^IBDF HIDDEN ACTIONS
"KRN",409.61,223,"ARRAY")
 ^TMP("IBDF",$J,"FORM LIST")
"KRN",409.61,223,"COL",0)
^409.621^3^3
"KRN",409.61,223,"COL",1,0)
ID^1^3^^R^1
"KRN",409.61,223,"COL",2,0)
FORM NAME^6^30^FORM NAME
"KRN",409.61,223,"COL",3,0)
BRIEF DESCRIPTION^38^80^BRIEF DESCRIPTION^H
"KRN",409.61,223,"COL","AIDENT",1,1)

"KRN",409.61,223,"COL","B","BRIEF DESCRIPTION",3)

"KRN",409.61,223,"COL","B","FORM NAME",2)

"KRN",409.61,223,"COL","B","ID",1)

"KRN",409.61,223,"FNL")
D ONEXIT^IBDFC
"KRN",409.61,223,"HDR")
D HDR^IBDFC
"KRN",409.61,223,"HLP")
D HELP^IBDFC
"KRN",409.61,223,"INIT")
D ONENTRY^IBDFC
"KRN",409.61,227,-1)
0^25
"KRN",409.61,227,0)
IBDFC CONVERSION LOG^1^^80^5^19^1^1^CONVERTED FORM^IBDFC MENU FOR CONVERTED FORMS^SCANNING CONVERSION LOG^1
"KRN",409.61,227,1)
^IBDF HIDDEN ACTIONS
"KRN",409.61,227,"ARRAY")
 ^TMP("IBDF",$J,"CONVERTED FORMS")
"KRN",409.61,227,"COL",0)
^409.621^5^5
"KRN",409.61,227,"COL",1,0)
ID^1^3^^R^1
"KRN",409.61,227,"COL",2,0)
FORM^6^30^FORM
"KRN",409.61,227,"COL",3,0)
DATE^38^10^ DATE^
"KRN",409.61,227,"COL",4,0)
WARNINGS^50^8^WARNINGS^
"KRN",409.61,227,"COL",5,0)
REPLACED^62^19^REPLACED IN CLINICS^
"KRN",409.61,227,"COL","AIDENT",1,1)

"KRN",409.61,227,"COL","B","DATE",3)

"KRN",409.61,227,"COL","B","FORM",2)

"KRN",409.61,227,"COL","B","ID",1)

"KRN",409.61,227,"COL","B","REPLACED",5)

"KRN",409.61,227,"COL","B","WARNINGS",4)

"KRN",409.61,227,"FNL")
D ONEXIT^IBDFC1
"KRN",409.61,227,"HDR")
D HDR^IBDFC1
"KRN",409.61,227,"HLP")
W ""
"KRN",409.61,227,"INIT")
D ONENTRY^IBDFC1
"KRN",409.61,228,-1)
0^11
"KRN",409.61,228,0)
IBDF EF HELP SPEC INSTR.^1^^80^2^21^1^1^Special Instructions Help^IBDF EF HELP MENU^Special Instructions Help^1^^1
"KRN",409.61,228,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,228,"ARRAY")
 ^TMP("IBDFHP",$J)
"KRN",409.61,228,"EXP")
D EXP^IBDFHLP
"KRN",409.61,228,"FNL")
D EXIT^IBDFHLP
"KRN",409.61,228,"HDR")
D HDR^IBDFHLP
"KRN",409.61,228,"HLP")
D HELP^IBDFHLP
"KRN",409.61,228,"INIT")
D INIT^IBDFHLP
"KRN",409.61,253,-1)
0^23
"KRN",409.61,253,0)
IBDF UTIL PRIMARY SCREEN^1^^80^5^18^1^1^Entry^IBDF UTIL PRIMARY PROTOCOL^Maintenance Utility^1^^1
"KRN",409.61,253,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,253,"ARRAY")
 ^TMP("CPT",$J)
"KRN",409.61,253,"COL",0)
^409.621^5^5
"KRN",409.61,253,"COL",1,0)
CODE^7^8^CODE
"KRN",409.61,253,"COL",2,0)
CODE TEXT^17^15^DESCRIPTION
"KRN",409.61,253,"COL",3,0)
BLOCK NAME^34^14^BLOCK
"KRN",409.61,253,"COL",4,0)
FORM NAME^50^14^FORM
"KRN",409.61,253,"COL",5,0)
CLINIC^66^14^CLINIC
"KRN",409.61,253,"COL","B","BLOCK NAME",3)

"KRN",409.61,253,"COL","B","CLINIC",5)

"KRN",409.61,253,"COL","B","CODE",1)

"KRN",409.61,253,"COL","B","CODE TEXT",2)

"KRN",409.61,253,"COL","B","FORM NAME",4)

"KRN",409.61,253,"EXP")
D EXP^IBDFUTL
"KRN",409.61,253,"FNL")
D EXIT^IBDFUTL
"KRN",409.61,253,"HDR")
D HDR^IBDFUTL
"KRN",409.61,253,"HLP")
D HLP^IBDFUTL
"KRN",409.61,253,"INIT")
D INIT^IBDFUTL
"KRN",409.61,265,-1)
0^22
"KRN",409.61,265,0)
IBDF UTIL COMPLETE LIST TEMP^1^^80^5^18^1^1^Entry^IBDF UTIL COMPLETE LIST MENU^Complete Invalid List^3^^1
"KRN",409.61,265,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,265,"ARRAY")
 ^TMP("CODE",$J)
"KRN",409.61,265,"COL",0)
^409.621^3^3
"KRN",409.61,265,"COL",1,0)
CODE^7^8^CODE
"KRN",409.61,265,"COL",2,0)
CODE TEXT^17^25^DESCRIPTION
"KRN",409.61,265,"COL",3,0)
CATEGORY^44^25^CATEGORY
"KRN",409.61,265,"COL","B","CATEGORY",3)

"KRN",409.61,265,"COL","B","CODE",1)

"KRN",409.61,265,"COL","B","CODE TEXT",2)

"KRN",409.61,265,"FNL")
D EXIT^IBDFLST
"KRN",409.61,265,"HDR")
D HDR^IBDFLST
"KRN",409.61,265,"HLP")
D HLP^IBDFLST
"KRN",409.61,265,"INIT")
D INIT^IBDFLST
"KRN",409.61,277,-1)
0^19
"KRN",409.61,277,0)
IBDF QUICK SELECTION EDIT^1^^132^5^18^1^1^Selection List^IBDF QUICK EDIT ACTIONS MENU^Selection List Display^1^^
"KRN",409.61,277,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,277,"ARRAY")
 ^TMP("SEL",$J)
"KRN",409.61,277,"COL",0)
^409.621^8^7
"KRN",409.61,277,"COL",1,0)
CODE^7^7^CODE
"KRN",409.61,277,"COL",2,0)
CODE TEXT^23^37^NARRATIVE
"KRN",409.61,277,"COL",4,0)
GROUP^64^15^GROUP
"KRN",409.61,277,"COL",5,0)
ID^1^2^^R^1
"KRN",409.61,277,"COL",6,0)
ORDER^16^5^ORDER
"KRN",409.61,277,"COL",7,0)
ALT TEXT^81^26^ALTERNATE NARRATIVE
"KRN",409.61,277,"COL",8,0)
LEXICON^109^23^CLINICAL TERM
"KRN",409.61,277,"COL","AIDENT",1,5)

"KRN",409.61,277,"COL","B","ALT TEXT",7)

"KRN",409.61,277,"COL","B","CODE",1)

"KRN",409.61,277,"COL","B","CODE TEXT",2)

"KRN",409.61,277,"COL","B","GROUP",4)

"KRN",409.61,277,"COL","B","ID",5)

"KRN",409.61,277,"COL","B","LEXICON",8)

"KRN",409.61,277,"COL","B","ORDER",6)

"KRN",409.61,277,"FNL")
D EXIT^IBDFQSL1
"KRN",409.61,277,"HDR")
D HDR^IBDFQSL1
"KRN",409.61,277,"HLP")
D HELP^IBDFQSL1
"KRN",409.61,277,"INIT")
D INIT^IBDFQSL1
"KRN",409.61,292,-1)
0^15
"KRN",409.61,292,0)
IBDF FT REPORT^1^^102^5^19^1^1^Entry^IBDF FT MENU^Form Tracking Status Report^1^^1
"KRN",409.61,292,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,292,"ARRAY")
 ^TMP("FRM",$J)
"KRN",409.61,292,"COL",0)
^409.621^8^8
"KRN",409.61,292,"COL",1,0)
FORM ID^7^8^FORM ID
"KRN",409.61,292,"COL",2,0)
PATIENT^34^15^PATIENT/CLINIC^^1
"KRN",409.61,292,"COL",3,0)
APPOINTMENT^17^14^APPT. D/T^^0
"KRN",409.61,292,"COL",4,0)
FORM PRINTED^50^8^PRINTED
"KRN",409.61,292,"COL",5,0)
DATA IN DHCP^61^8^SCANNED
"KRN",409.61,292,"COL",6,0)
STATUS^72^8^STATUS
"KRN",409.61,292,"COL",7,0)
CHECK OUT STATUS^82^12^Check Out
"KRN",409.61,292,"COL",8,0)
OTHER EDT^96^6^EDITED
"KRN",409.61,292,"COL","AIDENT",0,3)

"KRN",409.61,292,"COL","AIDENT",1,2)

"KRN",409.61,292,"COL","B","APPOINTMENT",3)

"KRN",409.61,292,"COL","B","CHECK OUT STATUS",7)

"KRN",409.61,292,"COL","B","DATA IN DHCP",5)

"KRN",409.61,292,"COL","B","FORM ID",1)

"KRN",409.61,292,"COL","B","FORM PRINTED",4)

"KRN",409.61,292,"COL","B","OTHER EDT",8)

"KRN",409.61,292,"COL","B","PATIENT",2)

"KRN",409.61,292,"COL","B","STATUS",6)

"KRN",409.61,292,"FNL")
D EXIT^IBDFFT
"KRN",409.61,292,"HDR")
D HDR^IBDFFT
"KRN",409.61,292,"HLP")
D HELP^IBDFFT
"KRN",409.61,292,"INIT")
D START^IBDFFT1
"KRN",409.61,293,-1)
0^16
"KRN",409.61,293,0)
IBDF FT STATS^1^^132^5^19^1^1^Entry^IBDF FT STATS MENU^Statistics Report^1^^1
"KRN",409.61,293,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,293,"ARRAY")
 ^TMP("STATS",$J)
"KRN",409.61,293,"COL",0)
^409.621^12^11
"KRN",409.61,293,"COL",1,0)
CLINIC^5^20^CLINIC/PATIENT^^0
"KRN",409.61,293,"COL",2,0)
TOTAL^22^6^ TOTAL
"KRN",409.61,293,"COL",3,0)
PRINTED^30^5^#PRNTD
"KRN",409.61,293,"COL",4,0)
PRINTED %^37^6^%PRNTD^^1
"KRN",409.61,293,"COL",5,0)
SCANNED^60^5^#SCND
"KRN",409.61,293,"COL",6,0)
%SCANNED^67^6^ %SCND
"KRN",409.61,293,"COL",8,0)
AVG DAYS SCANNED^90^13^AVG DAYS SCND
"KRN",409.61,293,"COL",9,0)
#DATA ENTRY^45^5^  #DE
"KRN",409.61,293,"COL",10,0)
%DATA ENTRY^52^6^   %DE
"KRN",409.61,293,"COL",11,0)
#PCE^75^5^ #PCE
"KRN",409.61,293,"COL",12,0)
%PCE^82^6^  %PCE
"KRN",409.61,293,"COL","AIDENT",0,1)

"KRN",409.61,293,"COL","AIDENT",1,4)

"KRN",409.61,293,"COL","B","#DATA ENTRY",9)

"KRN",409.61,293,"COL","B","#PCE",11)

"KRN",409.61,293,"COL","B","%DATA ENTRY",10)

"KRN",409.61,293,"COL","B","%PCE",12)

"KRN",409.61,293,"COL","B","%SCANNED",6)

"KRN",409.61,293,"COL","B","AVG DAYS SCANNED",8)

"KRN",409.61,293,"COL","B","CLINIC",1)

"KRN",409.61,293,"COL","B","PRINTED",3)

"KRN",409.61,293,"COL","B","PRINTED %",4)

"KRN",409.61,293,"COL","B","SCANNED",5)

"KRN",409.61,293,"COL","B","TOTAL",2)

"KRN",409.61,293,"FNL")
D EXIT^IBDFST
"KRN",409.61,293,"HDR")
D HDR^IBDFST
"KRN",409.61,293,"HLP")
D HELP^IBDFST
"KRN",409.61,293,"INIT")
D INIT^IBDFST
"KRN",409.61,294,-1)
0^17
"KRN",409.61,294,0)
IBDF FT STATUS SELECT^1^^80^5^19^1^1^Entry^IBDF FT STATUS SELECT MENU^Status Select Report^1^^1
"KRN",409.61,294,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,294,"ARRAY")
 ^TMP("SSEL",$J)
"KRN",409.61,294,"COL",0)
^409.621^6^6
"KRN",409.61,294,"COL",1,0)
FORM ID^7^8^FORM ID
"KRN",409.61,294,"COL",2,0)
PATIENT^34^15^PATIENT/CLINIC^^0
"KRN",409.61,294,"COL",3,0)
APPOINTMENT^17^14^APPT. D/T
"KRN",409.61,294,"COL",4,0)
FORM PRINT^50^10^PRINTED
"KRN",409.61,294,"COL",5,0)
SCANNED^62^10^SCANNED
"KRN",409.61,294,"COL",6,0)
STATUS^74^6^STATUS
"KRN",409.61,294,"COL","AIDENT",0,2)

"KRN",409.61,294,"COL","B","APPOINTMENT",3)

"KRN",409.61,294,"COL","B","FORM ID",1)

"KRN",409.61,294,"COL","B","FORM PRINT",4)

"KRN",409.61,294,"COL","B","PATIENT",2)

"KRN",409.61,294,"COL","B","SCANNED",5)

"KRN",409.61,294,"COL","B","STATUS",6)

"KRN",409.61,294,"FNL")
D EXIT^IBDFSS
"KRN",409.61,294,"HDR")
D HDR^IBDFSS
"KRN",409.61,294,"HLP")
D HELP^IBDFSS
"KRN",409.61,294,"INIT")
D INIT^IBDFSS
"KRN",409.61,297,-1)
0^18
"KRN",409.61,297,0)
IBDF QUICK GRP COPY^1^^80^5^20^1^1^Group^IBDF QUICK GRP MENU^IBDF QUICK GRP COPY^1^^1
"KRN",409.61,297,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,297,"ARRAY")
 ^TMP("GRP",$J)
"KRN",409.61,297,"COL",0)
^409.621^5^5
"KRN",409.61,297,"COL",1,0)
ID^1^2^^R^1
"KRN",409.61,297,"COL",2,0)
CODE^7^7^CODE
"KRN",409.61,297,"COL",3,0)
CODE TEXT^23^37^NARRATIVE
"KRN",409.61,297,"COL",4,0)
GROUP^64^15^GROUP
"KRN",409.61,297,"COL",5,0)
ORDER^16^5^ORDER
"KRN",409.61,297,"COL","AIDENT",1,1)

"KRN",409.61,297,"COL","B","CODE",2)

"KRN",409.61,297,"COL","B","CODE TEXT",3)

"KRN",409.61,297,"COL","B","GROUP",4)

"KRN",409.61,297,"COL","B","ID",1)

"KRN",409.61,297,"COL","B","ORDER",5)

"KRN",409.61,297,"FNL")
D EXIT^IBDFGRP
"KRN",409.61,297,"HDR")
D HDR^IBDFQSL1
"KRN",409.61,297,"HLP")
D HELP^IBDFGRP
"KRN",409.61,297,"INIT")
D INIT^IBDFGRP
"KRN",409.61,329,-1)
0^14
"KRN",409.61,329,0)
IBDF FORM COMPONENTS^1^^80^7^20^0^1^Component^IBDF FORM COMPONENT MENU^Form Components^1^^1
"KRN",409.61,329,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,329,"ARRAY")
 ^TMP("FORMOBJ",$J)
"KRN",409.61,329,"EXP")
D EXP^IBDFCMP
"KRN",409.61,329,"FNL")
D EXIT^IBDFCMP
"KRN",409.61,329,"HDR")
D HDR^IBDFCMP
"KRN",409.61,329,"HLP")
D HELP^IBDFCMP
"KRN",409.61,329,"INIT")
D INIT^IBDFCMP
"KRN",409.61,330,-1)
0^5
"KRN",409.61,330,0)
IBDF COMPONENT EXPAND^2^^80^5^18^0^1^Component^IBDF COMPONENT EXP PROTO^Block Components^1^^1
"KRN",409.61,330,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,330,"ARRAY")
 ^TMP("FORMEXP",$J)
"KRN",409.61,330,"COL",0)
^409.621^5^5
"KRN",409.61,330,"COL",1,0)
COMPONENT^2^25^COMPONENT
"KRN",409.61,330,"COL",2,0)
TYPE^30^10^TYPE
"KRN",409.61,330,"COL",3,0)
STARTING ROW^48^6^ROW
"KRN",409.61,330,"COL",4,0)
STARTING COLUMN^58^6^COLUMN
"KRN",409.61,330,"COL",5,0)
SEPARATED BY^71^9^SEPARATOR
"KRN",409.61,330,"COL","B","COMPONENT",1)

"KRN",409.61,330,"COL","B","SEPARATED BY",5)

"KRN",409.61,330,"COL","B","STARTING COLUMN",4)

"KRN",409.61,330,"COL","B","STARTING ROW",3)

"KRN",409.61,330,"COL","B","TYPE",2)

"KRN",409.61,330,"FNL")
D EXIT^IBDFCMP1
"KRN",409.61,330,"HDR")
D HDR^IBDFCMP1
"KRN",409.61,330,"HLP")
D HELP^IBDFCMP1
"KRN",409.61,330,"INIT")
D INIT^IBDFCMP1
"KRN",8994,76,-1)
0^1
"KRN",8994,76,0)
IBD EXPAND FORMID^IDPAT^IBDFRPC3^1^P
"KRN",8994,76,1,0)
^^3^3^2970321^^
"KRN",8994,76,1,1,0)
This call will convert a form id (printed at the top of an encounter form)
"KRN",8994,76,1,2,0)
and return information about the patient, the appointment, and the form.
"KRN",8994,76,1,3,0)
See routine IBDRPC3 for output descritpion.
"KRN",8994,76,2,0)
^8994.02A^1^1
"KRN",8994,76,2,1,0)
FORMID^1^20^1
"KRN",8994,76,2,1,1,0)
^^2^2^2970321^^
"KRN",8994,76,2,1,1,1,0)
This is the form id printed at the top of the encounter form, and should
"KRN",8994,76,2,1,1,2,0)
match and internal entry number from the FORM TRACKING file (357.96).
"KRN",8994,76,2,"B","FORMID",1)

"KRN",8994,76,3,0)
^^1^1^2960604^
"KRN",8994,76,3,1,0)
Returns a 17 piece record, see IBDRPC3 for details.
"KRN",8994,77,-1)
0^2
"KRN",8994,77,0)
IBD GET FORMSPEC^GETFS^IBDFBK1^2^R
"KRN",8994,77,1,0)
^^4^4^2960604^
"KRN",8994,77,1,1,0)
This call will return the Form Specification file (as an array) that is
"KRN",8994,77,1,2,0)
used by the scanning software to recognize a form.  Lines longer than
"KRN",8994,77,1,3,0)
255 characters are truncated on the server and flagged with "~~~"
"KRN",8994,77,1,4,0)
indicating the need to concatenate on the client.
"KRN",8994,77,2,0)
^8994.02A^1^1
"KRN",8994,77,2,1,0)
FORMTYPE^1^20^1
"KRN",8994,77,2,1,1,0)
^^2^2^2960604^
"KRN",8994,77,2,1,1,1,0)
Input the form type number from the top of the form, (the left most
"KRN",8994,77,2,1,1,2,0)
number)
"KRN",8994,77,2,"B","FORMTYPE",1)

"KRN",8994,77,3,0)
^^1^1^2960604^
"KRN",8994,77,3,1,0)
Returns an array that is to be saved on the client as a formspec file.
"KRN",8994,78,-1)
0^3
"KRN",8994,78,0)
IBD GET INPUT OBJECT BY CLINIC^CLNLSTI^IBDFRPC^2^P
"KRN",8994,78,1,0)
^^4^4^2960604^
"KRN",8994,78,1,1,0)
Returns a list of input objects on all encounter forms defined for a
"KRN",8994,78,1,2,0)
clinic in the clinic setup.  There are 3 types of input objects,
"KRN",8994,78,1,3,0)
lists, hand print fields, and multiple choice fields.  Each has its
"KRN",8994,78,1,4,0)
own set of unique characterists for input.
"KRN",8994,78,2,0)
^8994.02A^1^1
"KRN",8994,78,2,1,0)
CLINIC^1^30^1
"KRN",8994,78,2,1,1,0)
^^1^1^2960604^
"KRN",8994,78,2,1,1,1,0)
This is the pointer to file 44 or a unique clinic name.
"KRN",8994,78,2,"B","CLINIC",1)

"KRN",8994,78,3,0)
^^2^2^2960604^^
"KRN",8994,78,3,1,0)
Output is an array of input objects from the forms, each node
"KRN",8994,78,3,2,0)
is an 8 piece record.  See IBDFRPC for details.
"KRN",8994,79,-1)
0^4
"KRN",8994,79,0)
IBD GET INPUT OBJECT BY FORM^FRMLSTI^IBDFRPC^2^P
"KRN",8994,79,1,0)
^^4^4^2960604^
"KRN",8994,79,1,1,0)
Returns a list of input objects on one encounter forms .
"KRN",8994,79,1,2,0)
There are 3 types of input objects,
"KRN",8994,79,1,3,0)
lists, hand print fields, and multiple choice fields.  Each has its
"KRN",8994,79,1,4,0)
own set of unique characterists for input.  
"KRN",8994,79,2,0)
^8994.02A^1^1
"KRN",8994,79,2,1,0)
FRM^1^40^1
"KRN",8994,79,2,1,1,0)
^^2^2^2960604^^
"KRN",8994,79,2,1,1,1,0)
Input the pointer to the encounter form file or the unique name of the
"KRN",8994,79,2,1,1,2,0)
encounter form
"KRN",8994,79,2,"B","FRM",1)

"KRN",8994,79,3,0)
^^2^2^2960604^
"KRN",8994,79,3,1,0)
Output is an array of input objects from the form, each node
"KRN",8994,79,3,2,0)
is an 8 piece record.  See IBDFRPC for details.
"KRN",8994,80,-1)
0^5
"KRN",8994,80,0)
IBD GET ONE INPUT OBJECT^OBJLST^IBDFRPC1^2^P
"KRN",8994,80,1,0)
^^15^15^2960604^
"KRN",8994,80,1,1,0)
This call will return specific information about any one input object
"KRN",8994,80,1,2,0)
regardless of type.  Developers should first use the RPC to return the
"KRN",8994,80,1,3,0)
available input objects (either by form or by clinic).  
"KRN",8994,80,1,4,0)
 
"KRN",8994,80,1,5,0)
There are 3 types of input objects, lists (both static and dynamic),
"KRN",8994,80,1,6,0)
hand print fields, and multiple choice fields.  Each input object
"KRN",8994,80,1,7,0)
may be associated with selection rules and data qualifiers.  There
"KRN",8994,80,1,8,0)
are 4 selection rules: 
"KRN",8994,80,1,9,0)
   0 := any number (including zero)
"KRN",8994,80,1,10,0)
   1 := exactly one
"KRN",8994,80,1,11,0)
   2 := at most one (0 or 1)
"KRN",8994,80,1,12,0)
   3 := at least one (1 or more)
"KRN",8994,80,1,13,0)
 
"KRN",8994,80,1,14,0)
There are also a number of data qualifiers that are used to describe the
"KRN",8994,80,1,15,0)
data, for example, primary, secondary, add to problem list, etc.
"KRN",8994,80,2,0)
^8994.02A^1^1
"KRN",8994,80,2,1,0)
IBDF^2^^1
"KRN",8994,80,2,1,1,0)
^^8^8^2960604^
"KRN",8994,80,2,1,1,1,0)
The following variables are required:
"KRN",8994,80,2,1,1,2,0)
   IBDF("PI")     := pointer to the package interface file
"KRN",8994,80,2,1,1,3,0)
   IBDF("IEN")    := pointer to the input object (file depends on type)
"KRN",8994,80,2,1,1,4,0)
   IBDF("CLINIC") := pointer to the hospital location file (required only
"KRN",8994,80,2,1,1,5,0)
                     to return provider lists)
"KRN",8994,80,2,1,1,6,0)
   IBDF("DFN")    := pointer to patient file (required only for patient
"KRN",8994,80,2,1,1,7,0)
                     specific dynamic lists such as patient active problems)
"KRN",8994,80,2,1,1,8,0)
All are returned by one of the available rpc's in aics.
"KRN",8994,80,2,"B","IBDF",1)

"KRN",8994,80,3,0)
^^5^5^2960604^
"KRN",8994,80,3,1,0)
Returns array describing input object.  See routine IBDFRPC1 for details.
"KRN",8994,80,3,2,0)
See routine IBDFDE* for examples of use.  (ibdfde2* for lists, ibdfde3 for
"KRN",8994,80,3,3,0)
hand print fields, ibdfde4 for multiple choice fields)
"KRN",8994,80,3,4,0)
 
"KRN",8994,80,3,5,0)
The return array is different for the different types of objects.
"KRN",8994,81,-1)
0^7
"KRN",8994,81,0)
IBD RECEIVE FORM DATA^RECV^IBDFBK2^2^R
"KRN",8994,81,1,0)
^^3^3^2970325^^
"KRN",8994,81,1,1,0)
This RPC is to be used by the AICS workstation software only.  It accepts
"KRN",8994,81,1,2,0)
data in the format returned by the scanning software and converts the
"KRN",8994,81,1,3,0)
data in the format expected by PCE and passes the data to PCE.
"KRN",8994,81,2,0)
^8994.02A^1^1
"KRN",8994,81,2,1,0)
FORMDATA^2^245^1
"KRN",8994,81,2,1,1,0)
^^1^1^2970325^^
"KRN",8994,81,2,1,1,1,0)
This is the input data.
"KRN",8994,81,2,"B","FORMDATA",1)

"KRN",8994,81,3,0)
^^2^2^2970325^^
"KRN",8994,81,3,1,0)
Returns an array of data describing the input data in human readable
"KRN",8994,81,3,2,0)
terms and any errors and warnings sent by PCE.
"KRN",8994,82,-1)
0^9
"KRN",8994,82,0)
IBD VALIDATE USER^VALIDAV^IBDFBK1^1^R
"KRN",8994,82,1,0)
^^2^2^2960604^
"KRN",8994,82,1,1,0)
This call is used to validate user information and for display on the
"KRN",8994,82,1,2,0)
Show User screen.
"KRN",8994,82,2,0)
^8994.02A^1^1
"KRN",8994,82,2,1,0)
IBDAV^2^40^1
"KRN",8994,82,2,1,1,0)
^^1^1^2960604^
"KRN",8994,82,2,1,1,1,0)
validates that user is holder of specified security key.
"KRN",8994,82,2,"B","IBDAV",1)

"KRN",8994,82,3,0)
^^1^1^2960604^
"KRN",8994,82,3,1,0)
returns an 11 piece record of user/system information
"KRN",8994,83,-1)
0^6
"KRN",8994,83,0)
IBD RECEIVE DATA^SEND^IBDFRPC4^2^P
"KRN",8994,83,1,0)
^^3^3^2970325^^
"KRN",8994,83,1,1,0)
This call is the public RPC for developers to input data from an
"KRN",8994,83,1,2,0)
encounter form to AICS for processing to PCE.  See routine IBDFRPC4
"KRN",8994,83,1,3,0)
for detailed description of variables.
"KRN",8994,83,2,0)
^8994.02A^1^1
"KRN",8994,83,2,1,0)
IBDF^2^245^1
"KRN",8994,83,2,1,1,0)
^^2^2^2960604^
"KRN",8994,83,2,1,1,1,0)
See routine IBDFRPC4 for details of required variables.  See routines
"KRN",8994,83,2,1,1,2,0)
IBDFDE* for examples of use.
"KRN",8994,83,2,"B","IBDF",1)

"KRN",8994,83,3,0)
^^1^1^2960604^
"KRN",8994,83,3,1,0)
Returns status of passing of data to PCE.
"KRN",8994,84,-1)
0^8
"KRN",8994,84,0)
IBD RETURN IMAGE ID^IMAGEID^IBDFBK1^1^P
"KRN",8994,84,1,0)
^^2^2^2960815^
"KRN",8994,84,1,1,0)
Returns a numeric between 1 and 9999999 that is used as part of the file
"KRN",8994,84,1,2,0)
name to store the next unknown image as.
"KRN",8994,84,3,0)
^^1^1^2960815^
"KRN",8994,84,3,1,0)
numeric
"KRN",8994,85,-1)
0^10
"KRN",8994,85,0)
IBD ELAPSED TIME^ETIME^IBDFBK1^1^P
"KRN",8994,85,1,0)
^^1^1^2970321^^
"KRN",8994,85,1,1,0)
Store elapsed time for data entry
"KRN",8994,85,2,0)
^8994.02A^1^1
"KRN",8994,85,2,1,0)
IBDF^2^30^1
"KRN",8994,85,2,"B","IBDF",1)

"KRN",8994,86,-1)
0^11
"KRN",8994,86,0)
IBD STORE WORKSTATION ERROR^WSERR^IBDFBK1^1^P
"KRN",8994,86,1,0)
^^2^2^2970321^
"KRN",8994,86,1,1,0)
This call back is used by AICS to log entries in the AICS ERROR AND WARNING
"KRN",8994,86,1,2,0)
FILE when the recognition of a form is canceled or otherwise interrupted.
"KRN",8994,86,2,0)
^8994.02A^1^1
"KRN",8994,86,2,1,0)
FORMID^2^40^1
"KRN",8994,86,2,"B","FORMID",1)

"KRN",8994,87,-1)
0^12
"KRN",8994,87,0)
IBD STORE IMAGE NAME^IMAGENM^IBDFBK1^1^P
"KRN",8994,87,1,0)
^^2^2^2970321^
"KRN",8994,87,1,1,0)
This RPC will cause the information on images saved to be stored in the
"KRN",8994,87,1,2,0)
AICS IMAGE LOG file.
"KRN",8994,87,2,0)
^8994.02A^1^1
"KRN",8994,87,2,1,0)
FORMID^2^80^1
"KRN",8994,87,2,"B","FORMID",1)

"OER",311,0)
311^IBD
"OER",311,1,0)
^100.9951PA^13^13
"OER",311,1,1,0)
635
"OER",311,1,1,1,0)
^100.99511PA^1^1
"OER",311,1,1,1,1,0)
1228
"OER",311,1,2,0)
634
"OER",311,1,2,1,0)
^100.99511PA^1^1
"OER",311,1,2,1,1,0)
1228
"OER",311,1,3,0)
639
"OER",311,1,3,1,0)
^100.99511PA^1^1
"OER",311,1,3,1,1,0)
1228
"OER",311,1,4,0)
640
"OER",311,1,4,1,0)
^100.99511PA^1^1
"OER",311,1,4,1,1,0)
1228
"OER",311,1,5,0)
636
"OER",311,1,5,1,0)
^100.99511PA^1^1
"OER",311,1,5,1,1,0)
1228
"OER",311,1,6,0)
644
"OER",311,1,6,1,0)
^100.99511PA^1^1
"OER",311,1,6,1,1,0)
1228
"OER",311,1,7,0)
659
"OER",311,1,7,1,0)
^100.99511PA^1^1
"OER",311,1,7,1,1,0)
1228
"OER",311,1,8,0)
660
"OER",311,1,8,1,0)
^100.99511PA^1^1
"OER",311,1,8,1,1,0)
1228
"OER",311,1,9,0)
637
"OER",311,1,9,1,0)
^100.99511PA^1^1
"OER",311,1,9,1,1,0)
1228
"OER",311,1,10,0)
638
"OER",311,1,10,1,0)
^100.99511PA^1^1
"OER",311,1,10,1,1,0)
1228
"OER",311,1,11,0)
642
"OER",311,1,11,1,0)
^100.99511PA^1^1
"OER",311,1,11,1,1,0)
1228
"OER",311,1,12,0)
663
"OER",311,1,12,1,0)
^100.99511PA^1^1
"OER",311,1,12,1,1,0)
1228
"OER",311,1,13,0)
1665
"OER",311,1,13,1,0)
^100.99511PA^2^2
"OER",311,1,13,1,1,0)
1707
"OER",311,1,13,1,2,0)
1110
"OER",311,5,0)
^100.9955^^0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",9,.84)
.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"ORD",9,.84,0)
DIALOG
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",357.6,0,11,.11)
TYPE OF HEALTH SUMMARY^*P142'^GMT(142,^0;11^S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",357.6,0,13,.13)
PACKAGE INTERFACE FOR INPUT^*P357.6'^IBE(357.6,^0;13^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""S""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",357.6,16,2,16.2)
NARRATIVE DATA TYPE^P359.1'^IBE(359.1,^16;2^Q
"PGL",357.6,16,6,16.6)
PRIMARY VALUE DATA TYPE^P359.1'^IBE(359.1,^16;6^Q
"PKG",311,-1)
1^1
"PKG",311,0)
AUTOMATED INFO COLLECTION SYS^IBD^The utilities for generating a paper encounter form.
"PKG",311,1,0)
^^2^2^2961118^^^^
"PKG",311,1,1,0)
The Automated Info Collection Sys consists of a set of utilities for
"PKG",311,1,2,0)
designing, printing, tracking, maintaining, and scanning encounter forms.
"PKG",311,5)
ALBANY
"PKG",311,20,0)
^9.402P^^
"PKG",311,22,0)
^9.49I^1^1
"PKG",311,22,1,0)
3.0^2970212
"PKG",311,22,1,1,0)
^^1^1^2970424
"PKG",311,22,1,1,1,0)
AICS v3.0, including scannable encounter form support.
"PKG",311,"DEV")

"PKG",311,"VERSION")
3.0
"PRE")
IBD3KENV
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
226
"RTN","IBD21IN")
1^265
"RTN","IBD21KPR")
1^2
"RTN","IBD21P5")
1^266
"RTN","IBD21PRE")
1^267
"RTN","IBD21PT")
1^268
"RTN","IBD21PT1")
1^269
"RTN","IBD21PT2")
1^270
"RTN","IBD3KENV")
0^379^B4957724
"RTN","IBD3KENV",1,0)
IBD3KENV ;ALB/MLI - AICS 3.0 Environment Checker ; 4 OCT 1996
"RTN","IBD3KENV",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBD3KENV",3,0)
EN ;entry point
"RTN","IBD3KENV",4,0)
 W !,"AICS 3.0 Installation Requirements:",!
"RTN","IBD3KENV",5,0)
 D ENV ; check environment
"RTN","IBD3KENV",6,0)
 D PATCH ; check patches
"RTN","IBD3KENV",7,0)
 D BLDCHK ; check build entries
"RTN","IBD3KENV",8,0)
 W:$D(XPDABORT) !!,">>> Environment check failed.  Installation will not be allowed."
"RTN","IBD3KENV",9,0)
 W:'$D(XPDABORT) !!,">>> Environment is Ok"
"RTN","IBD3KENV",10,0)
 Q
"RTN","IBD3KENV",11,0)
 ;
"RTN","IBD3KENV",12,0)
 ;
"RTN","IBD3KENV",13,0)
ENV ; check enviroment for KIDS/programmer variables
"RTN","IBD3KENV",14,0)
 W !,">>> Checking Environment:"
"RTN","IBD3KENV",15,0)
 I $G(XPDABORT) W !,"    Can not proceed.  XPDABORT is inappropriately defined."
"RTN","IBD3KENV",16,0)
 I +$G(DUZ)'>0!($G(DUZ(0))'="@")!($G(U)'="^")!('$D(DT)) D
"RTN","IBD3KENV",17,0)
 . S XPDABORT=2
"RTN","IBD3KENV",18,0)
 . W !,"You must first initialize Programmer Environment by running ^XUP",!
"RTN","IBD3KENV",19,0)
 I '$G(XPDABORT) W !,"    Environment checks OK"
"RTN","IBD3KENV",20,0)
 Q
"RTN","IBD3KENV",21,0)
 ;
"RTN","IBD3KENV",22,0)
 ;
"RTN","IBD3KENV",23,0)
PATCH ;check for required patches
"RTN","IBD3KENV",24,0)
 N LINE,OK,PATCH
"RTN","IBD3KENV",25,0)
 W !!,">>> Checking PACKAGE File Entries:"
"RTN","IBD3KENV",26,0)
 F LINE=1:1 S PATCH=$P($T(LIST+LINE),";;",2) Q:(PATCH="QUIT")  D
"RTN","IBD3KENV",27,0)
 . W !,"    Checking for required patch ",PATCH,"..."
"RTN","IBD3KENV",28,0)
 . S OK=$$PATCH^XPDUTL(PATCH)
"RTN","IBD3KENV",29,0)
 . I 'OK S XPDABORT=2 W "not found!!"
"RTN","IBD3KENV",30,0)
 . I OK W "OK"
"RTN","IBD3KENV",31,0)
 Q
"RTN","IBD3KENV",32,0)
 ;
"RTN","IBD3KENV",33,0)
BLDCHK ;check build file entries
"RTN","IBD3KENV",34,0)
 W !,">>> Checking BUILD File Entries:"
"RTN","IBD3KENV",35,0)
 F IBX=1:1 S IBPATCH=$P($P($T(BUILD+IBX),";;",2),U,1) Q:'$L(IBPATCH)  D
"RTN","IBD3KENV",36,0)
 .W !,?5,IBPATCH
"RTN","IBD3KENV",37,0)
 .IF '$D(^XPD(9.6,"B",IBPATCH)) D
"RTN","IBD3KENV",38,0)
 ..N IBPKG,IBVER
"RTN","IBD3KENV",39,0)
 ..S IBPKG=$P($P($T(BUILD+IBX),";;",2),U,2)
"RTN","IBD3KENV",40,0)
 ..S IBVER=$P($P($T(BUILD+IBX),";;",2),U,3)
"RTN","IBD3KENV",41,0)
 ..IF $$VERSION^XPDUTL(IBPKG)'=IBVER D
"RTN","IBD3KENV",42,0)
 ...S XPDABORT=2
"RTN","IBD3KENV",43,0)
 ...W !,"Missing Required Package File Entry (Package/Patch): ",IBPATCH
"RTN","IBD3KENV",44,0)
 ..ELSE  D
"RTN","IBD3KENV",45,0)
 ...W " ...Ok - in Package File"
"RTN","IBD3KENV",46,0)
 .ELSE  D
"RTN","IBD3KENV",47,0)
 ..W " ...Ok"
"RTN","IBD3KENV",48,0)
LIST ;
"RTN","IBD3KENV",49,0)
 ;;XU*8.0*2
"RTN","IBD3KENV",50,0)
 ;;XU*8.0*15
"RTN","IBD3KENV",51,0)
 ;;XU*8.0*16
"RTN","IBD3KENV",52,0)
 ;;XU*8.0*28
"RTN","IBD3KENV",53,0)
 ;;XU*8.0*32
"RTN","IBD3KENV",54,0)
 ;;XU*8.0*44
"RTN","IBD3KENV",55,0)
 ;;QUIT
"RTN","IBD3KENV",56,0)
BUILD ;
"RTN","IBD3KENV",57,0)
 ;;PCE V1.0^PX^1.0
"RTN","IBD3KPT")
0^380^B38065984
"RTN","IBD3KPT",1,0)
IBD3KPT ;ALB/MAF - Post Init routine for AICS v 3.0 - 11 NOV 96
"RTN","IBD3KPT",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBD3KPT",3,0)
 ;
"RTN","IBD3KPT",4,0)
 D ADDNAR,GARBAGE,SCDATA,AUTOINS,LEX,FORMSPEC,RECOMP,ICD9,SELEX,DELFLD,RESOURC,ACTIVAT,OPTRF
"RTN","IBD3KPT",5,0)
 Q
"RTN","IBD3KPT",6,0)
 ;
"RTN","IBD3KPT",7,0)
ADDNAR ;  -- Sets fields .17 ASK FOR  ADDITIONAL NARRATIVE and
"RTN","IBD3KPT",8,0)
 ;     .18 ASK FOR CLINICAL LEXICON to 1 'YES'.
"RTN","IBD3KPT",9,0)
 N IBDIFN,IBI
"RTN","IBD3KPT",10,0)
 S IBDIFN=$O(^IBE(357.6,"B","DG SELECT ICD-9 DIAGNOSIS CODE",0)) I $G(^IBE(357.6,IBDIFN,0))]"" D
"RTN","IBD3KPT",11,0)
 .S DIE="^IBE(357.6,",DA=IBDIFN F IBI=.17,.18 S DR=IBI_"////^S X=1" D ^DIE
"RTN","IBD3KPT",12,0)
 .K DIE,DA,DR
"RTN","IBD3KPT",13,0)
 Q
"RTN","IBD3KPT",14,0)
 ;
"RTN","IBD3KPT",15,0)
GARBAGE ;  -- Changing the name of the GARBAGE form to WORKCOPY
"RTN","IBD3KPT",16,0)
 N IBDIFN
"RTN","IBD3KPT",17,0)
 I $D(^IBE(357,"B","GARBAGE")) D
"RTN","IBD3KPT",18,0)
 .S IBDIFN=$O(^IBE(357,"B","GARBAGE",0)) I $G(^IBE(357,IBDIFN,0))]"" D
"RTN","IBD3KPT",19,0)
 ..S DIE="^IBE(357,",DA=IBDIFN S DR=".01///WORKCOPY" D ^DIE
"RTN","IBD3KPT",20,0)
 ..K DIE,DA,DR
"RTN","IBD3KPT",21,0)
 ..Q
"RTN","IBD3KPT",22,0)
 Q
"RTN","IBD3KPT",23,0)
SELEX ; -- Correct selector for PX INPUT EXAMS
"RTN","IBD3KPT",24,0)
 N IBDIFN
"RTN","IBD3KPT",25,0)
 S IBDIFN=$O(^IBE(357.6,"B","PX INPUT EXAMS",0))
"RTN","IBD3KPT",26,0)
 Q:$G(^IBE(357.6,IBDIFN,0))=""
"RTN","IBD3KPT",27,0)
 I $G(^IBE(357.6,IBDIFN,17))'="D SLCTEX^IBDFN12(.X)" S ^IBE(357.6,IBDIFN,17)="D SLCTEX^IBDFN12(.X)"
"RTN","IBD3KPT",28,0)
 Q
"RTN","IBD3KPT",29,0)
 ;
"RTN","IBD3KPT",30,0)
SCDATA ; -- changes PI for SC data fields (did not work as originally defined)
"RTN","IBD3KPT",31,0)
 N IBDIFN,VAR,IBDIFN1
"RTN","IBD3KPT",32,0)
 S IBDIFN=$O(^IBE(357.6,"B","PX INPUT VISIT CLASSIFICATION",0)) I $G(^IBE(357.6,IBDIFN,0))]"" D
"RTN","IBD3KPT",33,0)
 .S VAR="S X=$$VARVAL^IBDFN9(Y)"
"RTN","IBD3KPT",34,0)
 .S DIE="^IBE(357.6,",DA=IBDIFN,DR="20////1;21////^S X=VAR"
"RTN","IBD3KPT",35,0)
 .D ^DIE K DIE,DA,DR
"RTN","IBD3KPT",36,0)
 .S IBDIFN1=0 F  S IBDIFN1=$O(^IBE(357.6,IBDIFN,13,IBDIFN1)) Q:'IBDIFN1  D
"RTN","IBD3KPT",37,0)
 ..S DIE="^IBE(357.6,IBDIFN,13,",DA(1)=IBDIFN,DA=IBDIFN1,DR=".03////0;.08////@"
"RTN","IBD3KPT",38,0)
 ..D ^DIE K DIE,DA,DR
"RTN","IBD3KPT",39,0)
 ; -- loop through 357.93 and add ID for each classification
"RTN","IBD3KPT",40,0)
 N IBDIFN1,IBDIFN2,VAL,NODE
"RTN","IBD3KPT",41,0)
 S IBDIFN1=0 F  S IBDIFN1=$O(^IBE(357.93,IBDIFN1)) Q:'IBDIFN1  I $P($G(^IBE(357.93,IBDIFN1,0)),"^",6)=IBDIFN D
"RTN","IBD3KPT",42,0)
 .S IBDIFN2=0 F  S IBDIFN2=$O(^IBE(357.93,IBDIFN1,1,IBDIFN2)) Q:'IBDIFN2  D
"RTN","IBD3KPT",43,0)
 ..S NODE=$G(^IBE(357.93,IBDIFN1,1,IBDIFN2,0)) Q:NODE']""
"RTN","IBD3KPT",44,0)
 ..Q:$P(NODE,"^",8)'=""
"RTN","IBD3KPT",45,0)
 ..S VAL=$P(NODE,"^",5)
"RTN","IBD3KPT",46,0)
 ..S DIE="^IBE(357.93,IBDIFN1,1,",DA(1)=IBDIFN1,DA=IBDIFN2,DR=".08////^S X=VAL"
"RTN","IBD3KPT",47,0)
 ..D ^DIE K DIE,DA,DR
"RTN","IBD3KPT",48,0)
 ..Q
"RTN","IBD3KPT",49,0)
 Q
"RTN","IBD3KPT",50,0)
 ;
"RTN","IBD3KPT",51,0)
AUTOINS ; -- auto install tool kit into production
"RTN","IBD3KPT",52,0)
 N FORM,NEWFORM,FORMNM,CNT,CNT1,ARY,NAME,X,Y,NEWBLOCK,A,EXCLUDE,BLK,CNTF,CNTB
"RTN","IBD3KPT",53,0)
 D MES^XPDUTL(">>> Now Attempting to automatically update Tool Kit forms and Tool Kit Blocks.")
"RTN","IBD3KPT",54,0)
 S (CNTB,CNTF)=0
"RTN","IBD3KPT",55,0)
 ;
"RTN","IBD3KPT",56,0)
 ; -- add all tool kit blocks
"RTN","IBD3KPT",57,0)
 S FORMNM="TOOL KIT"
"RTN","IBD3KPT",58,0)
 I '$O(^IBE(357,"B",FORMNM,0)) G FRM
"RTN","IBD3KPT",59,0)
 S ORD="" F  S ORD=$O(^IBE(358.1,"D",ORD)) Q:ORD=""  S BLK=0 F  S BLK=$O(^IBE(358.1,"D",ORD,BLK)) Q:'BLK  D
"RTN","IBD3KPT",60,0)
 .S NAME=$P($G(^IBE(358.1,+BLK,0)),"^")
"RTN","IBD3KPT",61,0)
 .Q:$P($G(^IBE(358.1,BLK,0)),"^",14)'=1  ;not toolkit
"RTN","IBD3KPT",62,0)
 .Q:$O(^IBE(357.1,"B",NAME,0))  ;already installed
"RTN","IBD3KPT",63,0)
 .D MES^XPDUTL("    Moving Block '"_$P($G(^IBE(358.1,+BLK,0)),"^")_"' from import/export to Tool Kit")
"RTN","IBD3KPT",64,0)
 .N IBTKBLK S IBTKBLK=1
"RTN","IBD3KPT",65,0)
 .S NEWBLOCK=$$COPYBLK^IBDFU2(BLK,$$TKFORM^IBDFU2C,358.1,357.1,"","",$$TKORDER^IBDF13),CNTB=CNTB+1
"RTN","IBD3KPT",66,0)
 .D:$G(NEWBLOCK) DLTBLK^IBDFU3(BLK,"",358.1)
"RTN","IBD3KPT",67,0)
 ;
"RTN","IBD3KPT",68,0)
FRM ; -- Add tool kit forms
"RTN","IBD3KPT",69,0)
 F CNT=1:1 S FORMNM=$P($T(FORMS+CNT),";;",2,99) Q:FORMNM=""  D
"RTN","IBD3KPT",70,0)
 .S FORM=$O(^IBE(358,"B",$E(FORMNM,1,30),0))
"RTN","IBD3KPT",71,0)
 .Q:$O(^IBE(357,"B",$E(FORMNM,1,30),0))
"RTN","IBD3KPT",72,0)
 .D MES^XPDUTL("    Moving Form '"_FORMNM_"' from import export utility to AICS")
"RTN","IBD3KPT",73,0)
 .S NEWFORM=$$COPYFORM^IBDFU2C(FORM,358,357,"",1),CNTF=CNTF+1
"RTN","IBD3KPT",74,0)
 ;
"RTN","IBD3KPT",75,0)
 I CNTF=0,CNTB=0 D MES^XPDUTL(">>> Tool Kit Forms and Blocks are already installed.") Q
"RTN","IBD3KPT",76,0)
 ;D MES^XPDUTL(">>>   Tool Kit Forms sent (4): ") D MES^XPDUTL($J(CNTF,3)) D MES^XPDUTL(" installed")
"RTN","IBD3KPT",77,0)
 D MES^XPDUTL(">>>   Tool Kit Forms sent (4): "_$J(CNTF,3)_" installed")
"RTN","IBD3KPT",78,0)
 D MES^XPDUTL(">>> Tool Kit Blocks sent (28): "_$J(CNTB,3)_" installed")
"RTN","IBD3KPT",79,0)
 ;D MES^XPDUTL(">>> Tool Kit Blocks sent (28): ") D MES^XPDUTL($J(CNTB,3)) D MES^XPDUTL(" installed")
"RTN","IBD3KPT",80,0)
 Q
"RTN","IBD3KPT",81,0)
 ;
"RTN","IBD3KPT",82,0)
 ;
"RTN","IBD3KPT",83,0)
LEX ; -- if clinic lex version two installed, update dd nodes
"RTN","IBD3KPT",84,0)
 I $D(^LEX) D  ; -- maybe add $$ver^xpdutl(lex2_0??)
"RTN","IBD3KPT",85,0)
 .S ^DD(357.3,2.02,0)="CLINICAL LEXICON ENTRY^P757.01'^LEX(757.01,^2;2^Q"
"RTN","IBD3KPT",86,0)
 .S ^DD(358.3,2.02,0)="CLINICAL LEXICON ENTRY^P757.01'^LEX(757.01,^2;2^Q"
"RTN","IBD3KPT",87,0)
 .S ^DD(357.951,2.02,0)="CLINICAL LEXICON^P757.01'^LEX(757.01,^2;2^Q"
"RTN","IBD3KPT",88,0)
 .D MES^XPDUTL(">>> AICS Data Dictionaries updated to use Lexicon Utility version 2.0")
"RTN","IBD3KPT",89,0)
 E  D MES^XPDUTL(">>> AICS Data Dictionaries updated to use Clinical Lexicon Utility version 1.0")
"RTN","IBD3KPT",90,0)
 Q
"RTN","IBD3KPT",91,0)
 ;
"RTN","IBD3KPT",92,0)
FORMSPEC ;Form Specs deleted from the file 359.2  FORM SPEC file.
"RTN","IBD3KPT",93,0)
 D MES^XPDUTL(">>> Form Specs being deleted and recreated for scanning.")
"RTN","IBD3KPT",94,0)
 N IBDIFN
"RTN","IBD3KPT",95,0)
 S IBDIFN=0
"RTN","IBD3KPT",96,0)
 F  S IBDIFN=$O(^IBD(359.2,IBDIFN)) Q:IBDIFN']""  I $D(^IBD(357.95,IBDIFN,0)) D SCAN^IBDFBKS(IBDIFN)
"RTN","IBD3KPT",97,0)
 Q
"RTN","IBD3KPT",98,0)
 ;
"RTN","IBD3KPT",99,0)
RECOMP ; -- recompile all forms
"RTN","IBD3KPT",100,0)
 S IBFORM=0
"RTN","IBD3KPT",101,0)
 F  S IBFORM=$O(^IBE(357,IBFORM)) Q:'IBFORM  D UNCMPALL^IBDF19(IBFORM)
"RTN","IBD3KPT",102,0)
 Q
"RTN","IBD3KPT",103,0)
 ;
"RTN","IBD3KPT",104,0)
ICD9 ; -- make sure ICD9 input interface uses diagnosis/problem node
"RTN","IBD3KPT",105,0)
 N IBDA,IBDX
"RTN","IBD3KPT",106,0)
 S IBDA=0 F  S IBDA=$O(^IBE(357.6,"B","INPUT DIAGNOSIS CODE (ICD9)",IBDA)) Q:'IBDA  D
"RTN","IBD3KPT",107,0)
 .S IBDX=$G(^IBE(357.6,IBDA,0))
"RTN","IBD3KPT",108,0)
 .Q:IBDX=""!($P(IBDX,"^")'="INPUT DIAGNOSIS CODE (ICD9)")
"RTN","IBD3KPT",109,0)
 .Q:$P($G(^IBE(357.6,IBDA,12)),"^")="DIAGNOSIS/PROBLEM"
"RTN","IBD3KPT",110,0)
 .S ^IBE(357.6,IBDA,12)="DIAGNOSIS/PROBLEM^1^13^14^2^^^"
"RTN","IBD3KPT",111,0)
 .D MES^XPDUTL(">>> Updating Package Interface Entry for INPUT DIAGNOSIS CODE (ICD9)")
"RTN","IBD3KPT",112,0)
 ;
"RTN","IBD3KPT",113,0)
SCRN S IBDA=$O(^IBE(357.6,"B","INPUT PROVIDER",0)) Q:'IBDA  D
"RTN","IBD3KPT",114,0)
 .S IBDX=$G(^IBE(357.6,IBDA,0))
"RTN","IBD3KPT",115,0)
 .Q:IBDX=""!($P(IBDX,"^")'="INPUT PROVIDER")
"RTN","IBD3KPT",116,0)
 S ^IBE(357.6,IBDA,18)="S IBDF(""OTHER"")=""200^I $$SCREEN^IBDFDE10(+Y)"" D LIST^IBDFDE2(.IBDSEL,.IBDF,""Provider"")"
"RTN","IBD3KPT",117,0)
 Q
"RTN","IBD3KPT",118,0)
 ;
"RTN","IBD3KPT",119,0)
ACTIVAT ; -- activate two entries in 357.69 that were erroniously inactivated
"RTN","IBD3KPT",120,0)
 I $P($G(^IBE(357.69,99220,0)),"^",4) S $P(^IBE(357.69,99220,0),"^",4)=""
"RTN","IBD3KPT",121,0)
 I $P($G(^IBE(357.69,99232,0)),"^",4) S $P(^IBE(357.69,99232,0),"^",4)=""
"RTN","IBD3KPT",122,0)
 Q
"RTN","IBD3KPT",123,0)
 ;
"RTN","IBD3KPT",124,0)
OPTRF ; -- remove erroneous output transform for PX INPUT PATIENT PROBLEMS
"RTN","IBD3KPT",125,0)
 N IBDFA
"RTN","IBD3KPT",126,0)
 S IBDFA=$O(^IBE(357.6,"B","PX INPUT PATIENT ACTIVE PROBLE",0)) Q:'IBDFA
"RTN","IBD3KPT",127,0)
 I $G(^IBE(357.6,IBDFA,14))="S Y=$$DSPLYICD^IBDFN9(Y)" K ^IBE(357.6,IBDFA,14)
"RTN","IBD3KPT",128,0)
 Q
"RTN","IBD3KPT",129,0)
DELFLD ; -- delete fields *'d for deletion
"RTN","IBD3KPT",130,0)
 Q:'$D(^DD(357.6,2.14))  ;already removed
"RTN","IBD3KPT",131,0)
 S DIK="^DD(357.6,",DA(1)=357.6
"RTN","IBD3KPT",132,0)
 F DA=8.01,8.02,8.03,8.04,8.05,8.06,8.07,2.03,2.04,2.05,2.06,2.07,2.08,2.09,2.1,2.11,2.12,2.13,2.14 D ^DIK
"RTN","IBD3KPT",133,0)
 K DIK,DA
"RTN","IBD3KPT",134,0)
 D MES^XPDUTL(">>> Deleting Fields *'d for Deletion in Package Interface file (357.6)")
"RTN","IBD3KPT",135,0)
 Q
"RTN","IBD3KPT",136,0)
 ;
"RTN","IBD3KPT",137,0)
RESOURC ; -- add scanning resource device
"RTN","IBD3KPT",138,0)
 I $D(^%ZIS(1,"B","IBD RESOURCE")) Q
"RTN","IBD3KPT",139,0)
 D MES^XPDUTL(">>> Adding Resouce Device 'IBD RESOURCE' for scanning.")
"RTN","IBD3KPT",140,0)
 S DIC="^%ZIS(1,",DIC(0)="L",DLAYGO=3.5,X="IBD RESOURCE" D FILE^DICN
"RTN","IBD3KPT",141,0)
 S DA=+Y Q:DA<1
"RTN","IBD3KPT",142,0)
 S DR="1////IBD RESOURCE;.02////NA;2///RESOURCE"
"RTN","IBD3KPT",143,0)
 S DIE=DIC D ^DIE K DIC,DIE,DR,DA
"RTN","IBD3KPT",144,0)
 Q
"RTN","IBD3KPT",145,0)
 ;
"RTN","IBD3KPT",146,0)
FORMS ;;
"RTN","IBD3KPT",147,0)
 ;;DEFAULTS
"RTN","IBD3KPT",148,0)
 ;;
"RTN","IBD3KPT",149,0)
 ;;
"RTN","IBD3KPT",150,0)
 ;;AMBULATORY SURGERY SAMPLE V2.1
"RTN","IBD3KPT",151,0)
 ;;EMERGENCY SERVICES SAMPLE V2.1
"RTN","IBD3KPT",152,0)
 ;;PRIMARY CARE SAMPLE V2.1
"RTN","IBD3KPT",153,0)
 ;;
"RTN","IBD3KPT",154,0)
BLOCKS ;;
"RTN","IBD3KPT",155,0)
 ;;TOOL KIT
"RTN","IBD3KPT",156,0)
 ;;
"RTN","IBD3KPT",157,0)
 Q
"RTN","IBDE")
0^8^B4416892
"RTN","IBDE",1,0)
IBDE ;ALB/CJM - ENCOUNTER FORM - IMP/EXP UTILITY ;AUG 12,1993
"RTN","IBDE",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDE",3,0)
 ;
"RTN","IBDE",4,0)
MAIN ;
"RTN","IBDE",5,0)
 N FORMLIST,BLKLIST,FORMCNT,BLKCNT,IBTKBLK,SCREEN
"RTN","IBDE",6,0)
 S SCREEN="F" ;a flag that indicates wheter user is looking at the block screen(=B) or the form screen(=F)
"RTN","IBDE",7,0)
 S IBTKBLK=0 ;if 1 overrides check preventing deletion of tk blocks
"RTN","IBDE",8,0)
 K XQORS,VALMEVL
"RTN","IBDE",9,0)
 D EN^VALM("IBDE IMP/EXP FORMS")
"RTN","IBDE",10,0)
 Q
"RTN","IBDE",11,0)
HDR ;
"RTN","IBDE",12,0)
 S VALMHDR(1)="LIST OF FORMS READY FOR IMPORT OR EXPORT"
"RTN","IBDE",13,0)
 S VALMHDR(3)="(** there are "_$S($O(^IBE(358.1,"D",0)):"also",1:"no")_" toolkit blocks in the work space **)"
"RTN","IBDE",14,0)
 Q
"RTN","IBDE",15,0)
ONENTRY ;
"RTN","IBDE",16,0)
 S FORMLIST="^TMP(""IBDF"",$J,""IMP/EXP WS"",""FORMS"")"
"RTN","IBDE",17,0)
 S BLKLIST="^TMP(""IBDF"",$J,""IMP/EXP WS"",""BLOCKS"")"
"RTN","IBDE",18,0)
 D IDXBLKS^IBDE3,IDXFORMS
"RTN","IBDE",19,0)
 Q
"RTN","IBDE",20,0)
ONEXIT ;
"RTN","IBDE",21,0)
 K ^TMP("IBDF",$J,"IMP/EXP WS"),VALMY,VALMBCK,X,Y,I,DA,D0
"RTN","IBDE",22,0)
 Q
"RTN","IBDE",23,0)
 ;
"RTN","IBDE",24,0)
IDXFORMS ;build an array of forms used by IBCLINIC for the list processor
"RTN","IBDE",25,0)
 N FORM,NODE
"RTN","IBDE",26,0)
 K @FORMLIST
"RTN","IBDE",27,0)
 S (FORM,VALMCNT)=0 F  S FORM=$O(^IBE(358,FORM)) Q:'FORM  D
"RTN","IBDE",28,0)
 .I $D(^IBE(358,FORM,0)) D
"RTN","IBDE",29,0)
 ..S VALMCNT=VALMCNT+1,@FORMLIST@(VALMCNT,0)=$$DISPLAY(FORM,VALMCNT),@FORMLIST@("IDX",VALMCNT,VALMCNT)=FORM D FLDCTRL^VALM10(VALMCNT) ;set video for ID column
"RTN","IBDE",30,0)
 S FORMCNT=VALMCNT
"RTN","IBDE",31,0)
 Q
"RTN","IBDE",32,0)
 ;
"RTN","IBDE",33,0)
DISPLAY(FORM,ID) ;
"RTN","IBDE",34,0)
 N NODE,RET
"RTN","IBDE",35,0)
 S RET=$J(ID,3)_"  "
"RTN","IBDE",36,0)
 S NODE=$G(^IBE(358,FORM,0))
"RTN","IBDE",37,0)
 S RET=RET_$$PADRIGHT^IBDFU($P(NODE,"^",1),30)_"  "_$P(NODE,"^",3)
"RTN","IBDE",38,0)
 Q RET
"RTN","IBDE1")
0^9^B20530359
"RTN","IBDE1",1,0)
IBDE1 ;ALB/CJM - ENCOUNTER FORM - (IMP/EXP UTILITY ACTIONS) ;AUG 12,1993
"RTN","IBDE1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDE1",3,0)
 ;
"RTN","IBDE1",4,0)
ADD ;adds a form to the work space
"RTN","IBDE1",5,0)
 N OLDFORM,NEWFORM
"RTN","IBDE1",6,0)
 D FULL^VALM1
"RTN","IBDE1",7,0)
 S VALMBCK="R"
"RTN","IBDE1",8,0)
 S OLDFORM=$$SLCTFORM^IBDFU4("") Q:'OLDFORM
"RTN","IBDE1",9,0)
 S NEWFORM=$$COPYFORM^IBDFU2C(OLDFORM,357,358,"",1)
"RTN","IBDE1",10,0)
 I NEWFORM K DIE,DR,DA S DIE="^IBE(358,",DA=NEWFORM,DR="1;" D ^DIE K DIE,DR,DA
"RTN","IBDE1",11,0)
 D IDXFORMS^IBDE
"RTN","IBDE1",12,0)
 Q
"RTN","IBDE1",13,0)
 ;
"RTN","IBDE1",14,0)
DELETE ;deletes a form from the work space
"RTN","IBDE1",15,0)
 N PICK,FORM
"RTN","IBDE1",16,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBDE1",17,0)
 S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S FORM=+$G(@VALMAR@("IDX",PICK,PICK)) D:FORM DELETE^IBDFU2C(FORM,358,1)
"RTN","IBDE1",18,0)
 S VALMBCK="R"
"RTN","IBDE1",19,0)
 D IDXFORMS^IBDE
"RTN","IBDE1",20,0)
 Q
"RTN","IBDE1",21,0)
EDIT ;allows the export notes of a form to be edited
"RTN","IBDE1",22,0)
 N PICK,FORM
"RTN","IBDE1",23,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBDE1",24,0)
 D FULL^VALM1
"RTN","IBDE1",25,0)
 S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S FORM=+$G(@VALMAR@("IDX",PICK,PICK)) D:FORM
"RTN","IBDE1",26,0)
 .K DIE,DR,DA S DIE="^IBE(358,",DR="1;",DA=FORM D ^DIE K DIE,DA,DR
"RTN","IBDE1",27,0)
 S VALMBCK="R"
"RTN","IBDE1",28,0)
 D IDXFORMS^IBDE
"RTN","IBDE1",29,0)
 Q
"RTN","IBDE1",30,0)
IMPORT ;allows the user to pick a form, then import it
"RTN","IBDE1",31,0)
 N PICK,FORM,NAME,NEWFORM,IBDVR,FORMVR
"RTN","IBDE1",32,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBDE1",33,0)
 D FULL^VALM1
"RTN","IBDE1",34,0)
 S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S FORM=+$G(@VALMAR@("IDX",PICK,PICK)) D:FORM
"RTN","IBDE1",35,0)
 .S IBDVR=+$G(^DD(357,0,"VR")) S:IBDVR<2.1 IBDVR=3.0
"RTN","IBDE1",36,0)
 .S FORMVR=+$P($G(^IBE(358,FORM,0)),"^",17) S:FORMVR<2.1 FORMVR=2.0
"RTN","IBDE1",37,0)
 .I FORMVR<IBDVR W !!,"This form was created with version "_FORMVR_"." D
"RTN","IBDE1",38,0)
 ..; -- ask if want to continue, if not quit
"RTN","IBDE1",39,0)
 ..;
"RTN","IBDE1",40,0)
 .S NAME=$$NEWNAME^IBDFU2C($P($G(^IBE(358,FORM,0)),"^"))
"RTN","IBDE1",41,0)
 .Q:NAME=""
"RTN","IBDE1",42,0)
 .S NEWFORM=$$COPYFORM^IBDFU2C(FORM,358,357,NAME)
"RTN","IBDE1",43,0)
 .K DIE,DR,DA S DIE="^IBE(357,",DR=".07T;.04////1;",DA=NEWFORM D ^DIE K DIE,DA,DR
"RTN","IBDE1",44,0)
 .D:$G(NEWFORM) DELETE^IBDFU2C(FORM,358,0)
"RTN","IBDE1",45,0)
 S VALMBCK="R"
"RTN","IBDE1",46,0)
 D IDXFORMS^IBDE
"RTN","IBDE1",47,0)
 Q
"RTN","IBDE1",48,0)
VIEW ;allows the export notes of a form to be edited
"RTN","IBDE1",49,0)
 N PICK,FORM,IBARY,IBHDRRTN
"RTN","IBDE1",50,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDE1",51,0)
 S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S FORM=+$G(@VALMAR@("IDX",PICK,PICK)) D
"RTN","IBDE1",52,0)
 .S IBHDRRTN="D VIEWHDR^IBDE1"
"RTN","IBDE1",53,0)
 .S IBARY="^IBE(358,"_FORM_",1)"
"RTN","IBDE1",54,0)
 .D EN^VALM("IBDE TEXT DISPLAY")
"RTN","IBDE1",55,0)
 S VALMBCK="R"
"RTN","IBDE1",56,0)
 Q
"RTN","IBDE1",57,0)
VIEWHDR ;
"RTN","IBDE1",58,0)
 S VALMHDR(1)="Export Notes For "_$P($G(^IBE(358,FORM,0)),"^")_" Form"
"RTN","IBDE1",59,0)
 Q
"RTN","IBDE1",60,0)
TEXT ;entry code for the IBDF TEXT DISPLAY list template
"RTN","IBDE1",61,0)
 N NODE S NODE=""
"RTN","IBDE1",62,0)
 S:$D(IBARY) VALMAR=IBARY
"RTN","IBDE1",63,0)
 X:$D(IBHDRRTN) IBHDRRTN
"RTN","IBDE1",64,0)
 I $G(IBARY)'="" S NODE=$G(@IBARY@(0))
"RTN","IBDE1",65,0)
 S VALMCNT=$S($P(NODE,"^",4)>$P(NODE,"^",3):$P(NODE,"^",4),1:$P(NODE,"^",3))
"RTN","IBDE1",66,0)
 I '$G(VALMCNT) S VALMCNT=10
"RTN","IBDE1",67,0)
 Q
"RTN","IBDE1",68,0)
 ;
"RTN","IBDE1",69,0)
INITS ;executes inits to bring stuff into the imp/exp files
"RTN","IBDE1",70,0)
 N QUIT,RTN
"RTN","IBDE1",71,0)
 S QUIT=0
"RTN","IBDE1",72,0)
 S VALMBCK="R"
"RTN","IBDE1",73,0)
 I $G(DUZ(0))'["@" W !,"This action requires PROGRAMMER ACCESS!" D PAUSE^IBDFU5 Q
"RTN","IBDE1",74,0)
 D FULL^VALM1
"RTN","IBDE1",75,0)
 I BLKCNT!FORMCNT D
"RTN","IBDE1",76,0)
 .K DIR S DIR(0)="Y"
"RTN","IBDE1",77,0)
 .W !,"The work space must be cleared before the INITS are run. Is that okay?"
"RTN","IBDE1",78,0)
 .D ^DIR K DIR
"RTN","IBDE1",79,0)
 .I $D(DIRUT)!(Y=0) S QUIT=1
"RTN","IBDE1",80,0)
 D:'QUIT DLTALL^IBDE2
"RTN","IBDE1",81,0)
 ;
"RTN","IBDE1",82,0)
 ;ask for the init rtn
"RTN","IBDE1",83,0)
 F  Q:QUIT  D
"RTN","IBDE1",84,0)
 .S DIR(0)="FA^5:8",DIR("B")=$S($L($T(^IBDEINIT)):"IBDEINIT",1:"")
"RTN","IBDE1",85,0)
 .S DIR("?",1)="In order for you to import forms from another site the other site must have",DIR("?")="prepared and sent you inits created using the import/export facility."
"RTN","IBDE1",86,0)
 .S DIR("A",1)="What is the name of the init routine that contains the forms that you want to",DIR("A")="import? "
"RTN","IBDE1",87,0)
 .D ^DIR K DIR
"RTN","IBDE1",88,0)
 .I $D(DIRUT) S QUIT=1 Q
"RTN","IBDE1",89,0)
 .I '$L($T(^@Y)) W !!,"That routine does not exist!",! Q
"RTN","IBDE1",90,0)
 .S RTN=Y
"RTN","IBDE1",91,0)
 .S QUIT=$$MSG^IBDE1B
"RTN","IBDE1",92,0)
 .I 'QUIT D @("^"_RTN),IDXFORMS^IBDE,IDXBLKS^IBDE3 S VALMCNT=$S(SCREEN="F":FORMCNT,1:BLKCNT)
"RTN","IBDE1",93,0)
 .S QUIT=1
"RTN","IBDE1",94,0)
 I SCREEN="F" D HDR^IBDE
"RTN","IBDE1",95,0)
 I SCREEN="B" D HDR^IBDE3
"RTN","IBDE1",96,0)
 Q
"RTN","IBDE1",97,0)
DIFROM ;
"RTN","IBDE1",98,0)
 N QUIT S QUIT=0
"RTN","IBDE1",99,0)
 S VALMBCK=""
"RTN","IBDE1",100,0)
 I $G(DUZ(0))'["@" W !!,"Using the DIFROM action requires PROGRAMMER ACCESS!",! D PAUSE^IBDFU5 Q
"RTN","IBDE1",101,0)
 I 'BLKCNT,'FORMCNT D  Q
"RTN","IBDE1",102,0)
 .W !!,"There is nothing in the work space to export!"
"RTN","IBDE1",103,0)
 .D PAUSE^IBDFU5
"RTN","IBDE1",104,0)
 D FULL^VALM1
"RTN","IBDE1",105,0)
 S QUIT=$$MSG^IBDE1A
"RTN","IBDE1",106,0)
 I 'QUIT D ^DIFROM W !,"DONE",!,"************************"
"RTN","IBDE1",107,0)
 S VALMBCK="R"
"RTN","IBDE1",108,0)
 Q
"RTN","IBDE1",109,0)
BLOCKS ;
"RTN","IBDE1",110,0)
 S SCREEN="B"
"RTN","IBDE1",111,0)
 D EN^VALM("IBDE IMP/EXP TK BLOCKS")
"RTN","IBDE1",112,0)
 S VALMBCK="R",VALMCNT=FORMCNT,SCREEN="F"
"RTN","IBDE1",113,0)
 Q
"RTN","IBDE1A")
0^10^B7333929
"RTN","IBDE1A",1,0)
IBDE1A ; ALB/ISC - ENCOUNTER FORM UTILITIES - INSTRUCTIONS FOR EXECUTING DIFROM ;AUG 16, 1993
"RTN","IBDE1A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDE1A",3,0)
MSG() ;QUIT is an output
"RTN","IBDE1A",4,0)
 N COUNT,LINE,QUIT
"RTN","IBDE1A",5,0)
 S (QUIT,COUNT)=0
"RTN","IBDE1A",6,0)
 W @IOF
"RTN","IBDE1A",7,0)
 F  S LINE=$P($T(LINES+COUNT),";;",2) Q:QUIT!(LINE="")  D
"RTN","IBDE1A",8,0)
 .S COUNT=COUNT+1
"RTN","IBDE1A",9,0)
 .W !,LINE
"RTN","IBDE1A",10,0)
 .I $Y>(IOSL-5) W !! D PAUSE
"RTN","IBDE1A",11,0)
 I 'QUIT W !! D PAUSE
"RTN","IBDE1A",12,0)
 Q QUIT
"RTN","IBDE1A",13,0)
PAUSE ;
"RTN","IBDE1A",14,0)
 K DIR S DIR(0)="E" D ^DIR K DIR S QUIT=$S(+Y:0,1:1)
"RTN","IBDE1A",15,0)
 W:'QUIT @IOF
"RTN","IBDE1A",16,0)
 Q
"RTN","IBDE1A",17,0)
 ;
"RTN","IBDE1A",18,0)
LINES ;;===================================================================
"RTN","IBDE1A",19,0)
 ;;You must enter these parameters to the prompts generated by DIFROM:
"RTN","IBDE1A",20,0)
 ;;===================================================================
"RTN","IBDE1A",21,0)
 ;;     
"RTN","IBDE1A",22,0)
 ;;  
"RTN","IBDE1A",23,0)
 ;;Enter the Name of the Package (2-4 characters): IBDE
"RTN","IBDE1A",24,0)
 ;;I am going to create a routine called 'IBDEINIT'.
"RTN","IBDE1A",25,0)
 ;;but 'IBDEINIT' is ALREADY ON FILE!
"RTN","IBDE1A",26,0)
 ;;Is that OK? YES
"RTN","IBDE1A",27,0)
 ;;Would you like to include Data Dictionaries? YES// YES
"RTN","IBDE1A",28,0)
 ;;Would you like to see the package definition? NO// NO
"RTN","IBDE1A",29,0)
 ;;Do you want to accept the current definition? NO// YES
"RTN","IBDE1A",30,0)
 ;;    
"RTN","IBDE1A",31,0)
 ;;===================================================================
"RTN","IBDE1A",32,0)
 ;;{now DIFROM lists the files.....}
"RTN","IBDE1A",33,0)
 ;;===================================================================
"RTN","IBDE1A",34,0)
 ;;  
"RTN","IBDE1A",35,0)
 ;;Now you must enter the information that goes on the second line
"RTN","IBDE1A",36,0)
 ;;of the INIT routines.
"RTN","IBDE1A",37,0)
 ;;  
"RTN","IBDE1A",38,0)
 ;;Select VERSION: 3.0// 
"RTN","IBDE1A",39,0)
 ;;DATE DISTRIBUTED: AUG 3,1993// TODAY
"RTN","IBDE1A",40,0)
 ;;Would you like to include OPTIONS?       YES// NO
"RTN","IBDE1A",41,0)
 ;;Would you like to include BULLETINS?     YES// NO
"RTN","IBDE1A",42,0)
 ;;Would you like to include SECURITY KEYS? YES// NO
"RTN","IBDE1A",43,0)
 ;;Would you like to include FUNCTIONS?     YES// NO
"RTN","IBDE1A",44,0)
 ;;Would you like to include HELP FRAMES?   YES// NO
"RTN","IBDE1A",45,0)
 ;;Would you like security codes sent along: NO// NO
"RTN","IBDE1A",46,0)
 ;;Would you like this sent via the network: NO// NO
"RTN","IBDE1A",47,0)
 ;;Maximum Routine Size    (2000 - 9999) : 4000// 4000
"RTN","IBDE1A",48,0)
 ;;  
"RTN","IBDE1A",49,0)
 ;;===================================================================
"RTN","IBDE1A",50,0)
 ;;            OKAY, READY TO RUN DIFROM!
"RTN","IBDE1A",51,0)
 ;;===================================================================
"RTN","IBDE1B")
0^11^B2390505
"RTN","IBDE1B",1,0)
IBDE1B ; ALB/ISC - ENCOUNTER FORM UTILITIES - INSTRUCTIONS FOR EXECUTING INITS ;AUG 16, 1993
"RTN","IBDE1B",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDE1B",3,0)
MSG() ;QUIT is returned
"RTN","IBDE1B",4,0)
 N COUNT,LINE,QUIT
"RTN","IBDE1B",5,0)
 S (QUIT,COUNT)=0
"RTN","IBDE1B",6,0)
 W @IOF
"RTN","IBDE1B",7,0)
 F  S LINE=$P($T(LINES+COUNT),";;",2) Q:QUIT!(LINE="")  D
"RTN","IBDE1B",8,0)
 .S COUNT=COUNT+1
"RTN","IBDE1B",9,0)
 .W !,LINE
"RTN","IBDE1B",10,0)
 .I $Y>(IOSL-5) W !! D PAUSE
"RTN","IBDE1B",11,0)
 I 'QUIT W !! D PAUSE
"RTN","IBDE1B",12,0)
 Q QUIT
"RTN","IBDE1B",13,0)
PAUSE ;
"RTN","IBDE1B",14,0)
 K DIR S DIR(0)="E" D ^DIR K DIR S QUIT=$S(+Y:0,1:1)
"RTN","IBDE1B",15,0)
 W:'QUIT @IOF
"RTN","IBDE1B",16,0)
 Q
"RTN","IBDE1B",17,0)
 ;
"RTN","IBDE1B",18,0)
LINES ;;***********************************************************************
"RTN","IBDE1B",19,0)
 ;; 
"RTN","IBDE1B",20,0)
 ;;  First the files contained in the inits will be listed.
"RTN","IBDE1B",21,0)
 ;;  THEN ....
"RTN","IBDE1B",22,0)
 ;;  You must enter these parameters to the prompts generated by INITS:
"RTN","IBDE1B",23,0)
 ;;  
"RTN","IBDE1B",24,0)
 ;;***********************************************************************
"RTN","IBDE1B",25,0)
 ;;   
"RTN","IBDE1B",26,0)
 ;;  
"RTN","IBDE1B",27,0)
 ;;SHALL I WRITE OVER FILE SECURITY CODES? NO// NO
"RTN","IBDE1B",28,0)
 ;;ARE YOU SURE EVERYTHING'S OK? NO// YES
"RTN","IBDE1B",29,0)
 ;;  
"RTN","IBDE1B",30,0)
 ;; 
"RTN","IBDE1B",31,0)
 ;;***********************************************************************
"RTN","IBDE1B",32,0)
 ;;  
"RTN","IBDE1B",33,0)
 ;;  Now to execute the inits!
"RTN","IBDE1B",34,0)
 ;;  
"RTN","IBDE1B",35,0)
 ;;***********************************************************************
"RTN","IBDE2")
0^12^B885906
"RTN","IBDE2",1,0)
IBDE2 ; ALB/ISC - DELETES IMP/EXP FILE CONTENTS ; AUG 13, 1993
"RTN","IBDE2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDE2",3,0)
 ;
"RTN","IBDE2",4,0)
DLTALL N FILE,NODE,COUNT
"RTN","IBDE2",5,0)
 S COUNT=0
"RTN","IBDE2",6,0)
 F  S FILE=$P($T(FILES+COUNT),";;",2) Q:FILE=""  D
"RTN","IBDE2",7,0)
 .S COUNT=COUNT+1
"RTN","IBDE2",8,0)
 .S NODE=$G(@FILE@(0))
"RTN","IBDE2",9,0)
 .S $P(NODE,"^",3)=0,$P(NODE,"^",4)=0
"RTN","IBDE2",10,0)
 .K @FILE
"RTN","IBDE2",11,0)
 .S @FILE@(0)=NODE
"RTN","IBDE2",12,0)
 S VALMBCK="R",VALMCNT=0,BLKCNT=0,FORMCNT=0
"RTN","IBDE2",13,0)
 K ^TMP("IBDF",$J,"IMP/EXP WS")
"RTN","IBDE2",14,0)
 I $G(SCREEN)="F" D HDR^IBDE
"RTN","IBDE2",15,0)
 I $G(SCREEN)="B" D HDR^IBDE3
"RTN","IBDE2",16,0)
 Q
"RTN","IBDE2",17,0)
 ;
"RTN","IBDE2",18,0)
FILES ;;^IBE(358)
"RTN","IBDE2",19,0)
 ;;^IBE(358.1)
"RTN","IBDE2",20,0)
 ;;^IBE(358.2)
"RTN","IBDE2",21,0)
 ;;^IBE(358.3)
"RTN","IBDE2",22,0)
 ;;^IBE(358.4)
"RTN","IBDE2",23,0)
 ;;^IBE(358.5)
"RTN","IBDE2",24,0)
 ;;^IBE(358.6)
"RTN","IBDE2",25,0)
 ;;^IBE(358.7)
"RTN","IBDE2",26,0)
 ;;^IBE(358.8)
"RTN","IBDE2",27,0)
 ;;^IBE(358.91)
"RTN","IBDE2",28,0)
 ;;^IBE(358.93)
"RTN","IBDE2",29,0)
 ;;^IBE(358.94)
"RTN","IBDE2",30,0)
 ;;^IBD(358.98)
"RTN","IBDE2",31,0)
 ;;^IBE(358.99)
"RTN","IBDE3")
0^13^B22491681
"RTN","IBDE3",1,0)
IBDE3 ;ALB/CJM - ENCOUNTER FORM - IMP/EXP UTILITY -DISPLAYS TOOLKIT BLOCKS ;AUG 12,1993
"RTN","IBDE3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDE3",3,0)
 ;
"RTN","IBDE3",4,0)
HDR ;
"RTN","IBDE3",5,0)
 S VALMHDR(1)="LIST OF TOOLKIT BLOCKS READY FOR IMPORT OR EXPORT"
"RTN","IBDE3",6,0)
 S VALMHDR(3)="(** there are "_$S($O(^IBE(358,0)):"also",1:"no")_" forms in the work space **)"
"RTN","IBDE3",7,0)
 Q
"RTN","IBDE3",8,0)
ONENTRY ;
"RTN","IBDE3",9,0)
 N LINE
"RTN","IBDE3",10,0)
 S VALMCNT=$G(BLKCNT)
"RTN","IBDE3",11,0)
 I $D(BLKLIST) S LINE=0 F  S LINE=$O(@BLKLIST@(LINE)) Q:'LINE  D FLDCTRL^VALM10(LINE)
"RTN","IBDE3",12,0)
 Q
"RTN","IBDE3",13,0)
ONEXIT ;
"RTN","IBDE3",14,0)
 Q
"RTN","IBDE3",15,0)
 ;
"RTN","IBDE3",16,0)
IDXBLKS ;build an array of forms used by IBCLINIC for the list processor
"RTN","IBDE3",17,0)
 N BLOCK,NODE,ORDER
"RTN","IBDE3",18,0)
 K @BLKLIST
"RTN","IBDE3",19,0)
 S (VALMCNT,ORDER)=0 F  S ORDER=$O(^IBE(358.1,"D",ORDER)) Q:'ORDER  S BLOCK=0 F  S BLOCK=$O(^IBE(358.1,"D",ORDER,BLOCK)) Q:'BLOCK  D
"RTN","IBDE3",20,0)
 .I $D(^IBE(358.1,BLOCK,0)) D
"RTN","IBDE3",21,0)
 ..S VALMCNT=VALMCNT+1,@BLKLIST@(VALMCNT,0)=$$DISPLAY(BLOCK,VALMCNT),@BLKLIST@("IDX",VALMCNT,VALMCNT)=BLOCK D FLDCTRL^VALM10(VALMCNT) ;set video for ID column
"RTN","IBDE3",22,0)
 S BLKCNT=VALMCNT
"RTN","IBDE3",23,0)
 Q
"RTN","IBDE3",24,0)
 ;
"RTN","IBDE3",25,0)
DISPLAY(BLOCK,ID) ;
"RTN","IBDE3",26,0)
 N NODE,RET
"RTN","IBDE3",27,0)
 S RET=$J(ID,3)_"  "
"RTN","IBDE3",28,0)
 S NODE=$G(^IBE(358.1,BLOCK,0))
"RTN","IBDE3",29,0)
 S RET=RET_$$PADRIGHT^IBDFU($P(NODE,"^",1),30)_"  "_$P(NODE,"^",13)
"RTN","IBDE3",30,0)
 Q RET
"RTN","IBDE3",31,0)
 ;
"RTN","IBDE3",32,0)
ADD ;adds a block to the work space
"RTN","IBDE3",33,0)
 N OLDBLOCK,NEWBLOCK
"RTN","IBDE3",34,0)
 D FULL^VALM1
"RTN","IBDE3",35,0)
 S VALMBCK="R"
"RTN","IBDE3",36,0)
 S OLDBLOCK=$$SELECT Q:'OLDBLOCK
"RTN","IBDE3",37,0)
 S NEWBLOCK=$$COPYBLK^IBDFU2(OLDBLOCK,"",357.1,358.1,"","",1)
"RTN","IBDE3",38,0)
 I NEWBLOCK K DIE,DR,DA S DIE="^IBE(358.1,",DA=NEWBLOCK,DR="1;" D ^DIE K DIE,DR,DA
"RTN","IBDE3",39,0)
 D IDXBLKS
"RTN","IBDE3",40,0)
 Q
"RTN","IBDE3",41,0)
 ;
"RTN","IBDE3",42,0)
DELETE ;deletes a block from the work space
"RTN","IBDE3",43,0)
 N PICK,FORM,IBTKBLK
"RTN","IBDE3",44,0)
 S IBTKBLK=1 ;can't delete tk blocks unless IBTKBLK
"RTN","IBDE3",45,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBDE3",46,0)
 S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S BLOCK=+$G(@VALMAR@("IDX",PICK,PICK)) I BLOCK,$$RUSURE^IBDFU5($P($G(^IBE(358.1,BLOCK,0)),"^")) D DLTBLK^IBDFU3(BLOCK,"",358.1)
"RTN","IBDE3",47,0)
 S VALMBCK="R"
"RTN","IBDE3",48,0)
 D IDXBLKS
"RTN","IBDE3",49,0)
 Q
"RTN","IBDE3",50,0)
EDIT ;allows the export notes of a block to be edited
"RTN","IBDE3",51,0)
 N PICK,BLOCK
"RTN","IBDE3",52,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBDE3",53,0)
 D FULL^VALM1
"RTN","IBDE3",54,0)
 S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S BLOCK=+$G(@VALMAR@("IDX",PICK,PICK)) D:BLOCK
"RTN","IBDE3",55,0)
 .K DIE,DR,DA S DIE="^IBE(358.1,",DR="1;",DA=BLOCK D ^DIE K DIE,DA,DR
"RTN","IBDE3",56,0)
 S VALMBCK="R"
"RTN","IBDE3",57,0)
 D IDXBLKS
"RTN","IBDE3",58,0)
 Q
"RTN","IBDE3",59,0)
IMPORT ;allows the user to pick a block from the imp/exp files, then import it
"RTN","IBDE3",60,0)
 N PICK,BLOCK,NEWBLOCK,IBTKBLK,NAME
"RTN","IBDE3",61,0)
 S IBTKBLK=1
"RTN","IBDE3",62,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBDE3",63,0)
 D FULL^VALM1
"RTN","IBDE3",64,0)
 S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S BLOCK=+$G(@VALMAR@("IDX",PICK,PICK)) D:BLOCK
"RTN","IBDE3",65,0)
 .S NAME=$$NEWNAME($P($G(^IBE(358.1,BLOCK,0)),"^"))
"RTN","IBDE3",66,0)
 .Q:NAME=""
"RTN","IBDE3",67,0)
 .S NEWBLOCK=$$COPYBLK^IBDFU2(BLOCK,$$TKFORM^IBDFU2C,358.1,357.1,"","",$$TKORDER^IBDF13,NAME)
"RTN","IBDE3",68,0)
 .D:$G(NEWBLOCK) DLTBLK^IBDFU3(BLOCK,"",358.1)
"RTN","IBDE3",69,0)
 S VALMBCK="R"
"RTN","IBDE3",70,0)
 D IDXBLKS
"RTN","IBDE3",71,0)
 Q
"RTN","IBDE3",72,0)
VIEW ;allows the export notes of a form to be edited
"RTN","IBDE3",73,0)
 N PICK,BLOCK,IBARY,IBHDRRTN
"RTN","IBDE3",74,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDE3",75,0)
 S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S BLOCK=+$G(@VALMAR@("IDX",PICK,PICK)) D
"RTN","IBDE3",76,0)
 .S IBHDRRTN="D VIEWHDR^IBDE3"
"RTN","IBDE3",77,0)
 .S IBARY="^IBE(358.1,"_BLOCK_",1)"
"RTN","IBDE3",78,0)
 .D EN^VALM("IBDE TEXT DISPLAY")
"RTN","IBDE3",79,0)
 S VALMBCK="R"
"RTN","IBDE3",80,0)
 Q
"RTN","IBDE3",81,0)
VIEWHDR ;
"RTN","IBDE3",82,0)
 S VALMHDR(1)="Export Notes For "_$P($G(^IBE(358.1,BLOCK,0)),"^")_" Block"
"RTN","IBDE3",83,0)
 Q
"RTN","IBDE3",84,0)
SELECT() ;allows the user to select a form, then a block from it
"RTN","IBDE3",85,0)
 N IBFORM,IBBLK
"RTN","IBDE3",86,0)
 S (IBFORM,IBBLK)=""
"RTN","IBDE3",87,0)
 K DIR S DIR(0)="S^1:TOOLKIT BLOCK;2:BLOCK FROM A TOOLKIT FORM;3:BLOCK FROM A FORM NOT IN THE TOOLKIT"
"RTN","IBDE3",88,0)
 S DIR("A")="What type of block do you want to export?"
"RTN","IBDE3",89,0)
 D ^DIR K DIR
"RTN","IBDE3",90,0)
 Q:(Y=-1)!($D(DIRUT)) ""
"RTN","IBDE3",91,0)
 I Y=1 D
"RTN","IBDE3",92,0)
 .S IBFORM=$$TKFORM^IBDFU2C
"RTN","IBDE3",93,0)
 E  S IBFORM=$$SLCTFORM^IBDFU4($S(Y=2:1,1:0))
"RTN","IBDE3",94,0)
 I IBFORM D
"RTN","IBDE3",95,0)
 .W !!,"NOW CHOOSE THE BLOCK TO COPY!",!
"RTN","IBDE3",96,0)
 .S IBBLK=$$SLCTBLK^IBDFU8(IBFORM)
"RTN","IBDE3",97,0)
 Q IBBLK
"RTN","IBDE3",98,0)
 ;
"RTN","IBDE3",99,0)
NEWNAME(OLDNAME) ;asks the user to select uniqued toolkit block name
"RTN","IBDE3",100,0)
 ;returns "" if unsuccessfull, else the blk name
"RTN","IBDE3",101,0)
 ;shows OLDNAME as the default if defined
"RTN","IBDE3",102,0)
 ;
"RTN","IBDE3",103,0)
 N NAME,FOUND,TKBLK,ORDER S NAME=""
"RTN","IBDE3",104,0)
 K DIR S DIR(0)="357.1,.01A",DIR("A")="New Toolkit Block Name: ",DIR("?")="Enter a unique name for the toolkit block up to 30 characters"
"RTN","IBDE3",105,0)
 S DIR("B")="" I $G(OLDNAME)'="" S DIR("B")=OLDNAME
"RTN","IBDE3",106,0)
 F  D  Q:'FOUND
"RTN","IBDE3",107,0)
 .S FOUND=0
"RTN","IBDE3",108,0)
 .D ^DIR I $D(DIRUT) S Y="" Q
"RTN","IBDE3",109,0)
 .S ORDER=0 F  S ORDER=$O(^IBE(357.1,"D",ORDER)) Q:ORDER=""  S TKBLK=$O(^IBE(357.1,"D",ORDER,0)) Q:'TKBLK   I $P($G(^IBE(357.1,TKBLK,0)),"^")=Y W !,"There is already a toolkit block with that name! The name should be unique." S FOUND=1 Q
"RTN","IBDE3",110,0)
 S:'FOUND NAME=Y
"RTN","IBDE3",111,0)
 K DIR
"RTN","IBDE3",112,0)
 Q NAME
"RTN","IBDE4")
0^14^B9080516
"RTN","IBDE4",1,0)
IBDE4 ;ALB/AAS - PUT FORMS AND BLOCKS INTO IMPORT/EXPORT UTILTIY ;AUG 12,1993
"RTN","IBDE4",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDE4",3,0)
 ;
"RTN","IBDE4",4,0)
ADD ; -- add forms to the import exort utility
"RTN","IBDE4",5,0)
 N FORM,NEWFORM,FORMNM,CNT,CNT1,ARY,NAME,X,Y,NEWBLOCK,A,EXCLUDE,BLK
"RTN","IBDE4",6,0)
 F CNT=1:1 S FORMNM=$P($T(FORMS+CNT),";;",2,99) Q:FORMNM=""  D
"RTN","IBDE4",7,0)
 .S FORM=$O(^IBE(357,"B",$E(FORMNM,1,30),0))
"RTN","IBDE4",8,0)
 .Q:$O(^IBE(358,"B",$E(FORMNM,1,30),0))
"RTN","IBDE4",9,0)
 .W !,"Moving Form '"_FORMNM_"' to import export utility"
"RTN","IBDE4",10,0)
 .S NEWFORM=$$COPYFORM^IBDFU2C(FORM,357,358,"",1)
"RTN","IBDE4",11,0)
 ;
"RTN","IBDE4",12,0)
 ; -- add all blocks for a form
"RTN","IBDE4",13,0)
 F CNT=1:1 S FORMNM=$P($T(BLOCKS+CNT),";;",2,99) Q:FORMNM=""  D
"RTN","IBDE4",14,0)
 .S FORM=$O(^IBE(357,"B",$E(FORMNM,1,30),0))
"RTN","IBDE4",15,0)
 .Q:$O(^IBE(358,"B",$E(FORMNM,1,30),0))
"RTN","IBDE4",16,0)
 .S ARY="A",EXCLUDE="" K A
"RTN","IBDE4",17,0)
 .S CNT1=$$FINDALL^IBDFU8
"RTN","IBDE4",18,0)
 .S NAME="" F  S NAME=$O(A("NAME",NAME)) Q:NAME=""  S BLK=0 F  S BLK=$O(A("NAME",NAME,BLK)) Q:'BLK  D
"RTN","IBDE4",19,0)
 ..W !,"Moving Block '"_NAME_"' from form '"_FORMNM_"' to utility"
"RTN","IBDE4",20,0)
 ..;Q:$O(^IBE(357.1,"B",NAME,0))  ;quit if same block from same form
"RTN","IBDE4",21,0)
 ..S NEWBLOCK=$$COPYBLK^IBDFU2(BLK,"",357.1,358.1,"","",1)
"RTN","IBDE4",22,0)
 Q
"RTN","IBDE4",23,0)
 ;
"RTN","IBDE4",24,0)
AUTOINS ; -- auto install tool kit into production
"RTN","IBDE4",25,0)
 N FORM,NEWFORM,FORMNM,CNT,CNT1,ARY,NAME,X,Y,NEWBLOCK,A,EXCLUDE,BLK,CNTF,CNTB
"RTN","IBDE4",26,0)
 W !!,">>> Now Attempting to automatically update Tool Kit forms and Tool Kit Blocks."
"RTN","IBDE4",27,0)
 S (CNTB,CNTF)=0
"RTN","IBDE4",28,0)
 ;
"RTN","IBDE4",29,0)
 ; -- add all tool kit blocks
"RTN","IBDE4",30,0)
 S FORMNM="TOOL KIT"
"RTN","IBDE4",31,0)
 I '$O(^IBE(357,"B",FORMNM,0)) G FRM
"RTN","IBDE4",32,0)
 S ORD="" F  S ORD=$O(^IBE(358.1,"D",ORD)) Q:ORD=""  S BLK=0 F  S BLK=$O(^IBE(358.1,"D",ORD,BLK)) Q:'BLK  D
"RTN","IBDE4",33,0)
 .S NAME=$P($G(^IBE(358.1,+BLK,0)),"^")
"RTN","IBDE4",34,0)
 .Q:$P($G(^IBE(358.1,BLK,0)),"^",14)'=1  ;not toolkit
"RTN","IBDE4",35,0)
 .Q:$O(^IBE(357.1,"B",NAME,0))  ;already installed
"RTN","IBDE4",36,0)
 .W !,"    Moving Block '"_$P($G(^IBE(358.1,+BLK,0)),"^")_"' from import/export to Tool Kit"
"RTN","IBDE4",37,0)
 .N IBTKBLK S IBTKBLK=1
"RTN","IBDE4",38,0)
 .S NEWBLOCK=$$COPYBLK^IBDFU2(BLK,$$TKFORM^IBDFU2C,358.1,357.1,"","",$$TKORDER^IBDF13),CNTB=CNTB+1
"RTN","IBDE4",39,0)
 .D:$G(NEWBLOCK) DLTBLK^IBDFU3(BLK,"",358.1)
"RTN","IBDE4",40,0)
 ;
"RTN","IBDE4",41,0)
FRM ; -- Add tool kit forms
"RTN","IBDE4",42,0)
 F CNT=1:1 S FORMNM=$P($T(FORMS+CNT),";;",2,99) Q:FORMNM=""  D
"RTN","IBDE4",43,0)
 .S FORM=$O(^IBE(358,"B",$E(FORMNM,1,30),0))
"RTN","IBDE4",44,0)
 .Q:$O(^IBE(357,"B",$E(FORMNM,1,30),0))
"RTN","IBDE4",45,0)
 .W !,"    Moving Form '"_FORMNM_"' from import export utility to AICS"
"RTN","IBDE4",46,0)
 .S NEWFORM=$$COPYFORM^IBDFU2C(FORM,358,357,"",1),CNTF=CNTF+1
"RTN","IBDE4",47,0)
 ;
"RTN","IBDE4",48,0)
 I CNTF=0,CNTB=0 W !!,">>> Tool Kit Forms and Blocks are already installed." Q
"RTN","IBDE4",49,0)
 W !!,">>>   Tool Kit Forms sent (4): ",$J(CNTF,3)_" installed"
"RTN","IBDE4",50,0)
 W !,">>> Tool Kit Blocks sent (28): ",$J(CNTB,3)_" installed"
"RTN","IBDE4",51,0)
 Q
"RTN","IBDE4",52,0)
 ;
"RTN","IBDE4",53,0)
FORMS ;;
"RTN","IBDE4",54,0)
 ;;DEFAULTS
"RTN","IBDE4",55,0)
 ;;
"RTN","IBDE4",56,0)
 ;;
"RTN","IBDE4",57,0)
 ;;AMBULATORY SURGERY SAMPLE V2.1
"RTN","IBDE4",58,0)
 ;;EMERGENCY SERVICES SAMPLE V2.1
"RTN","IBDE4",59,0)
 ;;PRIMARY CARE SAMPLE V2.1
"RTN","IBDE4",60,0)
 ;;
"RTN","IBDE4",61,0)
BLOCKS ;;
"RTN","IBDE4",62,0)
 ;;TOOL KIT
"RTN","IBDE4",63,0)
 ;;
"RTN","IBDEHELP")
0^15^B17863225
"RTN","IBDEHELP",1,0)
IBDEHELP ; ALB/ISC - ENCOUNTER FORM UTILITIES - INSTRUCTIONS FOR EXECUTING DIFROM ;AUG 16, 1993
"RTN","IBDEHELP",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDEHELP",3,0)
HELP ;
"RTN","IBDEHELP",4,0)
 N LINE,IBARY,IBHDRRTN,CNT
"RTN","IBDEHELP",5,0)
 S IBHDRRTN="D HDR^IBDEHELP"
"RTN","IBDEHELP",6,0)
 S CNT=0
"RTN","IBDEHELP",7,0)
 S IBARY="^TMP(""IBDF"",$J,""IMP/EXP HELP"")"
"RTN","IBDEHELP",8,0)
 K @IBARY
"RTN","IBDEHELP",9,0)
 F  S LINE=$P($T(LINES+CNT),";;",2) Q:LINE=""  D
"RTN","IBDEHELP",10,0)
 .S CNT=CNT+1
"RTN","IBDEHELP",11,0)
 .S @IBARY@(CNT,0)=LINE
"RTN","IBDEHELP",12,0)
 S $P(@IBARY@(0),"^",4)=CNT
"RTN","IBDEHELP",13,0)
 D EN^VALM("IBDE TEXT DISPLAY")
"RTN","IBDEHELP",14,0)
 K @IBARY
"RTN","IBDEHELP",15,0)
 S VALMBCK="R"
"RTN","IBDEHELP",16,0)
 Q
"RTN","IBDEHELP",17,0)
HDR ;
"RTN","IBDEHELP",18,0)
 S VALMHDR(1)="HELP for the IMPORT/EXPORT UTILITY"
"RTN","IBDEHELP",19,0)
 Q
"RTN","IBDEHELP",20,0)
 ;
"RTN","IBDEHELP",21,0)
LINES ;;The initial install of the Encounter Form Utilities at your site
"RTN","IBDEHELP",22,0)
 ;;included a toolkit of forms and blocks. The ONLY SAFE METHOD for
"RTN","IBDEHELP",23,0)
 ;;transferring additional forms and blocks between sites is through this
"RTN","IBDEHELP",24,0)
 ;;IMPORT/EXPORT UTILITY.
"RTN","IBDEHELP",25,0)
 ;;  
"RTN","IBDEHELP",26,0)
 ;;The IMPORT/EXPORT UTILITY includes a set of files that are nearly
"RTN","IBDEHELP",27,0)
 ;;identical to the files used by the ENCOUNTER FORM UTILTIES to contain
"RTN","IBDEHELP",28,0)
 ;;the form descriptions. These import/export files constitute a WORK
"RTN","IBDEHELP",29,0)
 ;;SPACE in which forms and blocks can be safely exported (to other sites)
"RTN","IBDEHELP",30,0)
 ;;and imported (from other sites to your own).
"RTN","IBDEHELP",31,0)
 ;;  
"RTN","IBDEHELP",32,0)
 ;;You should have a PACKAGE entry for the IMPORT/EXPORT UTILITY already
"RTN","IBDEHELP",33,0)
 ;;set up. The files listed should be in the range 358 to 358.91.
"RTN","IBDEHELP",34,0)
 ;;The package entry is named IB ENCOUNTER FORM IMP/EXP, and the prefix
"RTN","IBDEHELP",35,0)
 ;;is IBDE. The package entry is necessary to accomplish EXPORT.
"RTN","IBDEHELP",36,0)
 ;;  
"RTN","IBDEHELP",37,0)
 ;;  
"RTN","IBDEHELP",38,0)
 ;;TO IMPORT:
"RTN","IBDEHELP",39,0)
 ;;  
"RTN","IBDEHELP",40,0)
 ;;  1) The other site must have prepared a set of inits, using this
"RTN","IBDEHELP",41,0)
 ;;     utility, that contain the forms and toolkit blocks they want to
"RTN","IBDEHELP",42,0)
 ;;     transfer.
"RTN","IBDEHELP",43,0)
 ;;  
"RTN","IBDEHELP",44,0)
 ;;  2) The work space MUST NOT ALREADY CONTAIN any forms or blocks that
"RTN","IBDEHELP",45,0)
 ;;     you want to keep. First decide what you want to do with anything
"RTN","IBDEHELP",46,0)
 ;;     that is already in the workspace. The work space will be cleared
"RTN","IBDEHELP",47,0)
 ;;     before the inits are executed, so anything there will be lost.
"RTN","IBDEHELP",48,0)
 ;;  
"RTN","IBDEHELP",49,0)
 ;;  3) You must execute the inits, using this this utility, by choosing
"RTN","IBDEHELP",50,0)
 ;;     the action RUN INITS. The init should normally be named IBDEINIT.
"RTN","IBDEHELP",51,0)
 ;;  
"RTN","IBDEHELP",52,0)
 ;;  4) The work space should now contain forms and toolkit blocks. You
"RTN","IBDEHELP",53,0)
 ;;     can choose which ones you want, then choose the action IMPORT
"RTN","IBDEHELP",54,0)
 ;;     ENTRY to actually make the form or block available for use. The
"RTN","IBDEHELP",55,0)
 ;;     forms can not be viewed while in the work space, but you can view
"RTN","IBDEHELP",56,0)
 ;;     the IMPORT/EXP NOTES.
"RTN","IBDEHELP",57,0)
 ;;  
"RTN","IBDEHELP",58,0)
 ;;TO EXPORT:
"RTN","IBDEHELP",59,0)
 ;;  
"RTN","IBDEHELP",60,0)
 ;;   0) Only users with PROGRAMMER ACCESS can export.
"RTN","IBDEHELP",61,0)
 ;;  
"RTN","IBDEHELP",62,0)
 ;;   1) First clear the work space of anything you do not want to export.
"RTN","IBDEHELP",63,0)
 ;;  
"RTN","IBDEHELP",64,0)
 ;;   2) Then add any forms or blocks to the work space that you do want
"RTN","IBDEHELP",65,0)
 ;;      to export.
"RTN","IBDEHELP",66,0)
 ;;  
"RTN","IBDEHELP",67,0)
 ;;   3) Add EXPORT/IMPORT NOTES to each entry you add to the work space.
"RTN","IBDEHELP",68,0)
 ;;      You must accuratly describe the form for the site that you are
"RTN","IBDEHELP",69,0)
 ;;      exporting it to. They will be able to view the notes, but they
"RTN","IBDEHELP",70,0)
 ;;      will not be able to view the form itself until they import it.
"RTN","IBDEHELP",71,0)
 ;;  
"RTN","IBDEHELP",72,0)
 ;;   4) Then, through the DIFROM action that is part of this utility,
"RTN","IBDEHELP",73,0)
 ;;      create the inits that will be sent to the other site.
"RTN","IBDEHELP",74,0)
 ;;  
"RTN","IBDEHELP",75,0)
 ;;   5) Send the inits to the other site.
"RTN","IBDEPRE")
0^68^B5404741
"RTN","IBDEPRE",1,0)
IBDEPRE ; ALB/ISC - PREINIT FOR USE BY IMP/EXP UTILITY ;AUG 13, 1993
"RTN","IBDEPRE",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDEPRE",3,0)
 ;
"RTN","IBDEPRE",4,0)
P D NOW^%DTC S IBDBDT("IBDE")=$H,DT=$$DT^XLFDT,Y=% W !!,"Initialization Started: " D DT^DIQ
"RTN","IBDEPRE",5,0)
 ;
"RTN","IBDEPRE",6,0)
 ;
"RTN","IBDEPRE",7,0)
PRE W !!
"RTN","IBDEPRE",8,0)
 ;
"RTN","IBDEPRE",9,0)
USER I $S('($D(DUZ)#2):1,'$D(^VA(200,+DUZ,0)):1,'$D(DUZ(0)):1,DUZ(0)'="@":1,1:0) W !!?3,"The variable DUZ must be set to an active user code and the variable",!?3,"DUZ(0) must equal '@' to initialize.",! K DIFQ G NO
"RTN","IBDEPRE",10,0)
 ;
"RTN","IBDEPRE",11,0)
 Q:'$D(DIFQ)
"RTN","IBDEPRE",12,0)
 ;
"RTN","IBDEPRE",13,0)
CHECK ;checks if there is anything in the workspace
"RTN","IBDEPRE",14,0)
 N COUNT,FILE,QUIT
"RTN","IBDEPRE",15,0)
 S (QUIT,COUNT)=0
"RTN","IBDEPRE",16,0)
 F  S FILE=$P($T(FILES+COUNT),";;",2) Q:QUIT!(FILE="")  D  Q:QUIT
"RTN","IBDEPRE",17,0)
 .S COUNT=COUNT+1
"RTN","IBDEPRE",18,0)
 .I $O(@FILE@(0)) D
"RTN","IBDEPRE",19,0)
 ..K DIR S DIR(0)="Y",DIR("B")="YES"
"RTN","IBDEPRE",20,0)
 ..W !,"Please check your work space from the import/export utility option.",!!,"These INITS require that your work space be clear, currently it is not.",!,"Would you like to clear the work space now?"
"RTN","IBDEPRE",21,0)
 ..D ^DIR
"RTN","IBDEPRE",22,0)
 ..I $D(DIRUT)!(Y=0) K DIFQ
"RTN","IBDEPRE",23,0)
 ..S QUIT=1
"RTN","IBDEPRE",24,0)
 ;
"RTN","IBDEPRE",25,0)
 I '$D(DIFQ) W !,"INITIALIZATION ABORTED" K IBDBDT
"RTN","IBDEPRE",26,0)
 K DIR,DIRUT,DUOUT
"RTN","IBDEPRE",27,0)
 Q
"RTN","IBDEPRE",28,0)
 ;
"RTN","IBDEPRE",29,0)
NO I '$D(DIFQ) W !,"INITIALIZATION ABORTED" K IBDBDT
"RTN","IBDEPRE",30,0)
 K DIR,DIRUT,DUOUT
"RTN","IBDEPRE",31,0)
 Q
"RTN","IBDEPRE",32,0)
 ;
"RTN","IBDEPRE",33,0)
FILES ;;^IBE(358)
"RTN","IBDEPRE",34,0)
 ;;^IBE(358.1)
"RTN","IBDEPT")
0^69^B285907
"RTN","IBDEPT",1,0)
IBDEPT ;ALB/CJM - ENCOUNTER FORM - installation routine for AICS 2.1 ;OCT 5, 1995
"RTN","IBDEPT",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDEPT",3,0)
 ;
"RTN","IBDEPT",4,0)
 D AUTOINS^IBDE4 ; auto install tool kit forms and tool kit blocks
"RTN","IBDEPT",5,0)
 D DONE
"RTN","IBDEPT",6,0)
 Q
"RTN","IBDEPT",7,0)
DONE ; Installation has completed - display final messages
"RTN","IBDEPT",8,0)
 ;
"RTN","IBDEPT",9,0)
 D NOW^%DTC S IBDEDT("IBEP")=$H
"RTN","IBDEPT",10,0)
 ;S IBDINIT="IBDE" D ALLDONE^IBD21PT
"RTN","IBDEPT",11,0)
 ;D MSGE^IBD21PT
"RTN","IBDEPT",12,0)
 Q
"RTN","IBDF10")
0^70^B22746022
"RTN","IBDF10",1,0)
IBDF10 ;ALB/CJM - ENCOUNTER FORM - (shift block contents) ;APRIL 22,1993
"RTN","IBDF10",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF10",3,0)
 ;
"RTN","IBDF10",4,0)
SHIFT(TYPE) ;shifts contents of blocks - prompts user for what to shift (unless TYPE is defined), and how much to shift
"RTN","IBDF10",5,0)
 ;assumes IBBLK is defined unless TYPE="B"
"RTN","IBDF10",6,0)
 N AMOUNT,WAY,QUIT,TOP,BOTTOM,LEFT,RIGHT,HT,WIDTH,MAX
"RTN","IBDF10",7,0)
 S QUIT=0,VALMBCK="R"
"RTN","IBDF10",8,0)
 I '$D(TYPE) N TYPE D TYPE
"RTN","IBDF10",9,0)
 I $D(TYPE),"EDSLTMH"[TYPE S HT=IBBLK("H"),WIDTH=IBBLK("W")
"RTN","IBDF10",10,0)
 I $G(TYPE)="B" S HT=IBFORM("HT"),WIDTH=IBFORM("WIDTH")
"RTN","IBDF10",11,0)
 D:'QUIT DIRECTN
"RTN","IBDF10",12,0)
 D RE^VALM4
"RTN","IBDF10",13,0)
 D:'QUIT RANGE(HT,WIDTH)
"RTN","IBDF10",14,0)
 S:'QUIT MAX=$S(WAY="U":$S(BOTTOM:BOTTOM,1:HT),WAY="D":HT-TOP-1,WAY="L":$S(RIGHT:RIGHT,1:WIDTH),1:WIDTH-LEFT-1)
"RTN","IBDF10",15,0)
 S:'QUIT MAX=$$MAX^IBDF10C(TYPE,WAY,MAX,TOP,BOTTOM,LEFT,RIGHT)
"RTN","IBDF10",16,0)
 D:'QUIT AMOUNT(MAX)
"RTN","IBDF10",17,0)
 D:('QUIT)&($G(AMOUNT)>0) @TYPE
"RTN","IBDF10",18,0)
 S VALMBCK="R"
"RTN","IBDF10",19,0)
 Q
"RTN","IBDF10",20,0)
TYPE ;asks user for what should be shifted
"RTN","IBDF10",21,0)
 D TYPEHELP
"RTN","IBDF10",22,0)
 K DIR S DIR(0)="SB^E:Everything;D:Display Fields;S:Selection Lists;L:Lines;T:Text Areas;M:Multiple Choice Fields;H:Hand Print Fields",DIR("A")="What should be shifted?",DIR("B")="Everything"
"RTN","IBDF10",23,0)
 S DIR("?")="^D TYPEHELP^IBDF10"
"RTN","IBDF10",24,0)
 D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
"RTN","IBDF10",25,0)
 S TYPE=Y
"RTN","IBDF10",26,0)
 Q
"RTN","IBDF10",27,0)
TYPEHELP ;help for TYPE
"RTN","IBDF10",28,0)
 W !!,"You can choose what should be shifted. Select one of the following:",!," [E]verything, [D]isplay fields, [S]election lists, [L]ines, [T]ext areas,",!," [M]ultiple choice fields, [H]and print fields"
"RTN","IBDF10",29,0)
 Q
"RTN","IBDF10",30,0)
DIRECTN ;asks user for direction of shift - returns WAY
"RTN","IBDF10",31,0)
 S DIR(0)="SB^U:UP;D:DOWN;L:LEFT;R:RIGHT",DIR("A")="Shift UP, DOWN, LEFT, or RIGHT?",DIR("B")="DOWN",DIR("?")="Which direction should the shift be in?"
"RTN","IBDF10",32,0)
 D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
"RTN","IBDF10",33,0)
 S WAY=Y
"RTN","IBDF10",34,0)
 Q
"RTN","IBDF10",35,0)
AMOUNT(MAX) ;now ask user how far to shift - returns AMOUNT
"RTN","IBDF10",36,0)
 ;MAX is the maxium shift allowed
"RTN","IBDF10",37,0)
 S DIR(0)="N^0:"_MAX_":0"
"RTN","IBDF10",38,0)
 S DIR("A")="Shift how far "_$S(WAY="U":"up in rows",WAY="D":"down in rows",WAY="R":"to the right in columns",1:"to the left in columns")_"?"
"RTN","IBDF10",39,0)
 D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
"RTN","IBDF10",40,0)
 S AMOUNT=Y
"RTN","IBDF10",41,0)
 Q
"RTN","IBDF10",42,0)
RANGE(HT,WIDTH) ;asks the user for the range - returns TOP,BOTTOM,LEFT,RIGHT
"RTN","IBDF10",43,0)
 N I
"RTN","IBDF10",44,0)
 K DIR
"RTN","IBDF10",45,0)
 ;get TOP
"RTN","IBDF10",46,0)
 S DIR("A")="What is the top-most row to shift?"
"RTN","IBDF10",47,0)
 S DIR(0)="N^1:"_HT_":0",DIR("B")=1
"RTN","IBDF10",48,0)
 D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
"RTN","IBDF10",49,0)
 S TOP=Y
"RTN","IBDF10",50,0)
 ;now get BOTTOM
"RTN","IBDF10",51,0)
 S DIR("A")="What is the bottom-most row to shift? (optional)",DIR("?",1)="Enter the lowest row that the shift should effect.",DIR("?")="Enter nothing to shift everything below the top-most row that you specified."
"RTN","IBDF10",52,0)
 K DIR("B")
"RTN","IBDF10",53,0)
 S DIR(0)="NO^"_TOP_":"_HT_":0"
"RTN","IBDF10",54,0)
 D ^DIR K DIR I (Y=-1)!$D(DTOUT)!$D(DUOUT) S QUIT=1 Q
"RTN","IBDF10",55,0)
 S BOTTOM=Y
"RTN","IBDF10",56,0)
 ;get LEFT
"RTN","IBDF10",57,0)
 S DIR("A")="What is the left-most column to shift?"
"RTN","IBDF10",58,0)
 S DIR(0)="N^1:"_WIDTH_":0",DIR("B")=1
"RTN","IBDF10",59,0)
 D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
"RTN","IBDF10",60,0)
 S LEFT=Y
"RTN","IBDF10",61,0)
 ;now get RIGHT
"RTN","IBDF10",62,0)
 S DIR("A")="What is the right-most column to shift? (optional)"
"RTN","IBDF10",63,0)
 S DIR("?",1)="Enter the right-most column that the shift should effect.",DIR("?")="Enter nothing to shift everything to the right of the left-most column that you specified."
"RTN","IBDF10",64,0)
 K DIR("B")
"RTN","IBDF10",65,0)
 S DIR(0)="NO^"_LEFT_":"_WIDTH_":0"
"RTN","IBDF10",66,0)
 D ^DIR K DIR I (Y=-1)!$D(DTOUT)!$D(DUOUT) S QUIT=1 Q
"RTN","IBDF10",67,0)
 S RIGHT=Y
"RTN","IBDF10",68,0)
 ;now change TOP,BOTTOM,LEFT,RIGHT to their internal values
"RTN","IBDF10",69,0)
 ;(BOTTOM or RIGHT)="" has special meaning - means shift without limit 
"RTN","IBDF10",70,0)
 S TOP=TOP-1,LEFT=LEFT-1
"RTN","IBDF10",71,0)
 S:BOTTOM>0 BOTTOM=BOTTOM-1
"RTN","IBDF10",72,0)
 S:RIGHT>0 RIGHT=RIGHT-1
"RTN","IBDF10",73,0)
 Q
"RTN","IBDF10",74,0)
E ;shift everything
"RTN","IBDF10",75,0)
 D FLDS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
"RTN","IBDF10",76,0)
 D LSTS^IBDF10B(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
"RTN","IBDF10",77,0)
 D TXT^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
"RTN","IBDF10",78,0)
 D LINES^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
"RTN","IBDF10",79,0)
 D MFLDS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
"RTN","IBDF10",80,0)
 D HFLDS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
"RTN","IBDF10",81,0)
 Q
"RTN","IBDF10",82,0)
D ;shift data fields
"RTN","IBDF10",83,0)
 D FLDS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
"RTN","IBDF10",84,0)
 Q
"RTN","IBDF10",85,0)
M ;shift multiple choice fields
"RTN","IBDF10",86,0)
 D MFLDS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
"RTN","IBDF10",87,0)
 Q
"RTN","IBDF10",88,0)
H ;shift hand print fields
"RTN","IBDF10",89,0)
 D HFLDS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
"RTN","IBDF10",90,0)
 Q
"RTN","IBDF10",91,0)
S ;shift selection lists
"RTN","IBDF10",92,0)
 D LSTS^IBDF10B(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
"RTN","IBDF10",93,0)
 Q
"RTN","IBDF10",94,0)
T ;shift text areas
"RTN","IBDF10",95,0)
 D TXT^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
"RTN","IBDF10",96,0)
 Q
"RTN","IBDF10",97,0)
L ;shift lines
"RTN","IBDF10",98,0)
 D LINES^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
"RTN","IBDF10",99,0)
 Q
"RTN","IBDF10",100,0)
B ;shift blocks
"RTN","IBDF10",101,0)
 D BLOCKS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
"RTN","IBDF10",102,0)
 Q
"RTN","IBDF10A")
0^71^B32981510
"RTN","IBDF10A",1,0)
IBDF10A ;ALB/CJM - ENCOUNTER FORM - (shifting data fields,lines,text areas,blocks);3/29/93
"RTN","IBDF10A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF10A",3,0)
FLDS(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT) ;shifts all of the data fields in IBBLK falling within the rectangle defined by TOP,BOTTOM,LEFT,RIGHT by AMOUNT
"RTN","IBDF10A",4,0)
 ;WAY="D" for down, "U" for up, "L" for left, "R" for right
"RTN","IBDF10A",5,0)
 N SUB,NODE,IBX,IBY,FLD,PIECE,POS,VERT,SIZE,BLKSIZE
"RTN","IBDF10A",6,0)
 S VERT=$S("UD"[WAY:1,1:0)
"RTN","IBDF10A",7,0)
 S BLKSIZE=$S(VERT:IBBLK("H"),1:IBBLK("W"))
"RTN","IBDF10A",8,0)
 ;shifts to the left or up are negative
"RTN","IBDF10A",9,0)
 S:"UL"[WAY AMOUNT=AMOUNT*(-1)
"RTN","IBDF10A",10,0)
 S FLD="" F  S FLD=$O(^IBE(357.5,"C",IBBLK,FLD)) Q:'FLD  D
"RTN","IBDF10A",11,0)
 .S PIECE=$S(VERT:11,1:10)
"RTN","IBDF10A",12,0)
 .S NODE=$G(^IBE(357.5,FLD,0)) Q:NODE=""
"RTN","IBDF10A",13,0)
 .S IBX=$P(NODE,"^",10),IBY=$P(NODE,"^",11),POS=$P(NODE,"^",PIECE) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10A",14,0)
 ..S SIZE=$S(VERT:$P(NODE,"^",12),1:$S($L($P(NODE,"^",6))>$P(NODE,"^",14):$L($P(NODE,"^",6)),1:$P(NODE,"^",14)))
"RTN","IBDF10A",15,0)
 ..S $P(^IBE(357.5,FLD,0),"^",PIECE)=$S(("LU"[WAY)&(POS+AMOUNT<0):0,("RD"[WAY)&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
"RTN","IBDF10A",16,0)
 .S SUB=0 F  S SUB=$O(^IBE(357.5,FLD,2,SUB)) Q:'SUB  D
"RTN","IBDF10A",17,0)
 ..S NODE=$G(^IBE(357.5,FLD,2,SUB,0)) Q:NODE=""
"RTN","IBDF10A",18,0)
 ..S PIECE=$S(VERT:5,1:4) S POS=$P(NODE,"^",PIECE),IBX=$P(NODE,"^",4),IBY=$P(NODE,"^",5) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10A",19,0)
 ...S SIZE=$S(VERT:1,1:$L($P(NODE,"^",1)))
"RTN","IBDF10A",20,0)
 ...S $P(^IBE(357.5,FLD,2,SUB,0),"^",PIECE)=$S(("LU"[WAY)&(POS+AMOUNT<0):0,("RD"[WAY)&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
"RTN","IBDF10A",21,0)
 ..S PIECE=$S(VERT:6,1:7) S POS=$P(NODE,"^",PIECE),IBX=$P(NODE,"^",7),IBY=$P(NODE,"^",6) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10A",22,0)
 ...S SIZE=$S(VERT:1,1:$P(NODE,"^",8))
"RTN","IBDF10A",23,0)
 ...S $P(^IBE(357.5,FLD,2,SUB,0),"^",PIECE)=$S("LU"[WAY&(POS+AMOUNT<0):0,"RD"[WAY&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
"RTN","IBDF10A",24,0)
 Q
"RTN","IBDF10A",25,0)
MFLDS(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT) ;shifts the multiple choice fields in IBBLK falling within the rectangle defined by TOP,BOTTOM,LEFT,RIGHT by AMOUNT
"RTN","IBDF10A",26,0)
 ;WAY="D" for down, "U" for up, "L" for left, "R" for right
"RTN","IBDF10A",27,0)
 N SUB,NODE,IBX,IBY,FLD,PIECE,POS,VERT,SIZE,BLKSIZE
"RTN","IBDF10A",28,0)
 S VERT=$S("UD"[WAY:1,1:0)
"RTN","IBDF10A",29,0)
 S BLKSIZE=$S(VERT:IBBLK("H"),1:IBBLK("W"))
"RTN","IBDF10A",30,0)
 ;shifts to the left or up are negative
"RTN","IBDF10A",31,0)
 S:"UL"[WAY AMOUNT=AMOUNT*(-1)
"RTN","IBDF10A",32,0)
 S FLD="" F  S FLD=$O(^IBE(357.93,"C",IBBLK,FLD)) Q:'FLD  D
"RTN","IBDF10A",33,0)
 .S PIECE=$S(VERT:4,1:3)
"RTN","IBDF10A",34,0)
 .S NODE=$G(^IBE(357.93,FLD,0)) Q:NODE=""
"RTN","IBDF10A",35,0)
 .I $P(NODE,"^",2)]"" D
"RTN","IBDF10A",36,0)
 ..S IBX=$P(NODE,"^",3),IBY=$P(NODE,"^",4),POS=$P(NODE,"^",PIECE) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10A",37,0)
 ...S SIZE=$S(VERT:1,1:$L($P(NODE,"^",2)))
"RTN","IBDF10A",38,0)
 ...S $P(^IBE(357.93,FLD,0),"^",PIECE)=$S(("LU"[WAY)&(POS+AMOUNT<0):0,("RD"[WAY)&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
"RTN","IBDF10A",39,0)
 .S SUB=0 F  S SUB=$O(^IBE(357.93,FLD,1,SUB)) Q:'SUB  D
"RTN","IBDF10A",40,0)
 ..S NODE=$G(^IBE(357.93,FLD,1,SUB,0)) Q:NODE=""
"RTN","IBDF10A",41,0)
 ..S PIECE=$S(VERT:3,1:2) S POS=$P(NODE,"^",PIECE),IBX=$P(NODE,"^",2),IBY=$P(NODE,"^",3) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10A",42,0)
 ...S SIZE=$S(VERT:1,1:$L($P(NODE,"^",1)))
"RTN","IBDF10A",43,0)
 ...S $P(^IBE(357.93,FLD,1,SUB,0),"^",PIECE)=$S(("LU"[WAY)&(POS+AMOUNT<0):0,("RD"[WAY)&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
"RTN","IBDF10A",44,0)
 ..S PIECE=$S(VERT:7,1:6) S POS=$P(NODE,"^",PIECE),IBX=$P(NODE,"^",6),IBY=$P(NODE,"^",7) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10A",45,0)
 ...S SIZE=$S(VERT:1,1:3)
"RTN","IBDF10A",46,0)
 ...S $P(^IBE(357.93,FLD,1,SUB,0),"^",PIECE)=$S("LU"[WAY&(POS+AMOUNT<0):0,"RD"[WAY&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
"RTN","IBDF10A",47,0)
 Q
"RTN","IBDF10A",48,0)
 ;
"RTN","IBDF10A",49,0)
HFLDS(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT) ;shifts the hand print fields in IBBLK falling within the rectangle defined by TOP,BOTTOM,LEFT,RIGHT by AMOUNT
"RTN","IBDF10A",50,0)
 ;WAY="D" for down, "U" for up, "L" for left, "R" for right
"RTN","IBDF10A",51,0)
 N SUB,NODE,IBX,IBY,FLD,PIECE,POS,VERT,SIZE,BLKSIZE
"RTN","IBDF10A",52,0)
 S VERT=$S("UD"[WAY:1,1:0)
"RTN","IBDF10A",53,0)
 S BLKSIZE=$S(VERT:IBBLK("H"),1:IBBLK("W"))
"RTN","IBDF10A",54,0)
 ;shifts to the left or up are negative
"RTN","IBDF10A",55,0)
 S:"UL"[WAY AMOUNT=AMOUNT*(-1)
"RTN","IBDF10A",56,0)
 S FLD="" F  S FLD=$O(^IBE(359.94,"C",IBBLK,FLD)) Q:'FLD  D
"RTN","IBDF10A",57,0)
 .S PIECE=$S(VERT:4,1:3)
"RTN","IBDF10A",58,0)
 .S NODE=$G(^IBE(359.94,FLD,0)) Q:NODE=""
"RTN","IBDF10A",59,0)
 .I $P(NODE,"^",2)]"" D
"RTN","IBDF10A",60,0)
 ..S IBX=$P(NODE,"^",3),IBY=$P(NODE,"^",4),POS=$P(NODE,"^",PIECE) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10A",61,0)
 ...S SIZE=$S(VERT:1,1:$L($P(NODE,"^",2)))
"RTN","IBDF10A",62,0)
 ...S $P(^IBE(359.94,FLD,0),"^",PIECE)=$S(("LU"[WAY)&(POS+AMOUNT<0):0,("RD"[WAY)&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
"RTN","IBDF10A",63,0)
 Q
"RTN","IBDF10A",64,0)
 ;
"RTN","IBDF10A",65,0)
LINES(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT) ;shifts all of the lines in IBBLK falling within the range START->END by AMOUNT - if END="" range extends all the way out
"RTN","IBDF10A",66,0)
 ;WAY="D" for down, "U" for up, "L" for left, "R" for right
"RTN","IBDF10A",67,0)
 N SUB,NODE,POS,LINE,PIECE,VERT,IBX,IBY,SIZE,BLKSIZE
"RTN","IBDF10A",68,0)
 S VERT=$S("UD"[WAY:1,1:0)
"RTN","IBDF10A",69,0)
 S BLKSIZE=$S(VERT:IBBLK("H"),1:IBBLK("W"))
"RTN","IBDF10A",70,0)
 ;shifts to the left or up are negative
"RTN","IBDF10A",71,0)
 S:"UL"[WAY AMOUNT=AMOUNT*(-1)
"RTN","IBDF10A",72,0)
 S LINE="" F  S LINE=$O(^IBE(357.7,"C",IBBLK,LINE)) Q:'LINE  D
"RTN","IBDF10A",73,0)
 .S NODE=$G(^IBE(357.7,LINE,0)) Q:NODE=""
"RTN","IBDF10A",74,0)
 .S PIECE=$S(VERT:3,1:2)
"RTN","IBDF10A",75,0)
 .S POS=$P(NODE,"^",PIECE),IBY=$P(NODE,"^",3),IBX=$P(NODE,"^",2) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10A",76,0)
 .S SIZE=$S(((($P(NODE,"^",4)="V")&VERT)!(($P(NODE,"^",4)="H")&'VERT)):$P(NODE,"^",5),1:1)
"RTN","IBDF10A",77,0)
 .S $P(^IBE(357.7,LINE,0),"^",PIECE)=$S("LU"[WAY&(POS+AMOUNT<0):0,"RD"[WAY&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
"RTN","IBDF10A",78,0)
 Q
"RTN","IBDF10A",79,0)
TXT(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT) ;shifts all of the text areas in IBBLK falling within the range START->END by AMOUNT - if END="" range extends all the way out
"RTN","IBDF10A",80,0)
 ;WAY="D" for down, "U" for up, "L" for left, "R" for right
"RTN","IBDF10A",81,0)
 N SUB,NODE,POS,TXT,PIECE,VERT,IBX,IBY,BLKSIZE,SIZE
"RTN","IBDF10A",82,0)
 S VERT=$S("UD"[WAY:1,1:0)
"RTN","IBDF10A",83,0)
 S BLKSIZE=$S(VERT:IBBLK("H"),1:IBBLK("W"))
"RTN","IBDF10A",84,0)
 ;shifts to the left or up are negative
"RTN","IBDF10A",85,0)
 S:"UL"[WAY AMOUNT=AMOUNT*(-1)
"RTN","IBDF10A",86,0)
 S TXT="" F  S TXT=$O(^IBE(357.8,"C",IBBLK,TXT)) Q:'TXT  D
"RTN","IBDF10A",87,0)
 .S NODE=$G(^IBE(357.8,TXT,0)) Q:NODE=""
"RTN","IBDF10A",88,0)
 .S PIECE=$S(VERT:4,1:3)
"RTN","IBDF10A",89,0)
 .S POS=$P(NODE,"^",PIECE),IBY=$P(NODE,"^",4),IBX=$P(NODE,"^",3) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10A",90,0)
 .S SIZE=$S(VERT:$P(NODE,"^",6),1:$P(NODE,"^",5))
"RTN","IBDF10A",91,0)
 .S $P(^IBE(357.8,TXT,0),"^",PIECE)=$S("LU"[WAY&(POS+AMOUNT<0):0,"RD"[WAY&((POS+AMOUNT+SIZE)>BLKSIZE):BLKSIZE-SIZE,1:POS+AMOUNT)
"RTN","IBDF10A",92,0)
 Q
"RTN","IBDF10A",93,0)
 ;
"RTN","IBDF10A",94,0)
INRANGE(X,Y,TOP,BOTTOM,LEFT,RIGHT) ;
"RTN","IBDF10A",95,0)
 ;determines if (X,Y) is in the rectangle defined by TOP,BOTTOM,LEFT,RIGHT - returns 1 if yes,0 if no
"RTN","IBDF10A",96,0)
 I (X'<LEFT),((RIGHT="")!(X'>RIGHT)),(Y'<TOP),((BOTTOM="")!(Y'>BOTTOM)) Q 1
"RTN","IBDF10A",97,0)
 Q 0
"RTN","IBDF10A",98,0)
BLOCKS(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT) ;shifts blocks whose top left-hand corner is within the rectangular region defined by TOP,BOTTOM,LEFT,RIGHT
"RTN","IBDF10A",99,0)
 N SUB,NODE,POS,BLOCK,PIECE,VERT,IBX,IBY,BLKSIZE,FORMSIZE,NAME
"RTN","IBDF10A",100,0)
 S VERT=$S("UD"[WAY:1,1:0)
"RTN","IBDF10A",101,0)
 ;shifts to the left or up are negative
"RTN","IBDF10A",102,0)
 S:"UL"[WAY AMOUNT=AMOUNT*(-1)
"RTN","IBDF10A",103,0)
 S BLOCK="" F  S BLOCK=$O(^IBE(357.1,"C",IBFORM,BLOCK)) Q:'BLOCK  D
"RTN","IBDF10A",104,0)
 .S NODE=$G(^IBE(357.1,BLOCK,0)) Q:NODE=""
"RTN","IBDF10A",105,0)
 .S NAME=$P(NODE,"^")
"RTN","IBDF10A",106,0)
 .S PIECE=$S(VERT:4,1:5)
"RTN","IBDF10A",107,0)
 .S BLKSIZE=$S(VERT:$P(NODE,"^",7),1:$P(NODE,"^",6))
"RTN","IBDF10A",108,0)
 .S FORMSIZE=$S(VERT:IBFORM("HT"),1:IBFORM("WIDTH"))
"RTN","IBDF10A",109,0)
 .S POS=$P(NODE,"^",PIECE),IBY=$P(NODE,"^",4),IBX=$P(NODE,"^",5)
"RTN","IBDF10A",110,0)
 .I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10A",111,0)
 ..S $P(^IBE(357.1,BLOCK,0),"^",PIECE)=$S(("LU"[WAY)&(POS+AMOUNT<0):0,("DR"[WAY)&((POS+AMOUNT+BLKSIZE)>FORMSIZE):FORMSIZE-BLKSIZE,1:POS+AMOUNT)
"RTN","IBDF10A",112,0)
 Q
"RTN","IBDF10B")
0^72^B5552462
"RTN","IBDF10B",1,0)
IBDF10B ;ALB/CJM - ENCOUNTER FORM - (shifting selection lists);3/29/93
"RTN","IBDF10B",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF10B",3,0)
LSTS(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT) ;shifts all of the selection lists in IBBLK falling within the range START->END by AMOUNT - if END="" range extends all the way out
"RTN","IBDF10B",4,0)
 ;WAY="D" for down, "U" for up, "L" for left, "R" for right
"RTN","IBDF10B",5,0)
 N SUB,NODE,POS,LIST,PIECE,VERT,IBX,IBY,COL
"RTN","IBDF10B",6,0)
 S VERT=$S("UD"[WAY:1,1:0)
"RTN","IBDF10B",7,0)
 ;shifts to the left or up are negative
"RTN","IBDF10B",8,0)
 S:"UL"[WAY AMOUNT=AMOUNT*(-1)
"RTN","IBDF10B",9,0)
 ;must make sure there is at least one column defined with the row and column specified
"RTN","IBDF10B",10,0)
 S LIST="" F  S LIST=$O(^IBE(357.2,"C",IBBLK,LIST)) Q:'LIST  D
"RTN","IBDF10B",11,0)
 .S COL=$O(^IBE(357.2,LIST,1,"B","")) I COL S SUB=$O(^IBE(357.2,LIST,1,"B",COL,0))
"RTN","IBDF10B",12,0)
 .S:'$G(SUB) SUB=$$ADDCOL(LIST) ;if there is no column then one must be added, otherwise positioning works through defaults
"RTN","IBDF10B",13,0)
 .Q:'SUB
"RTN","IBDF10B",14,0)
 .S NODE=$G(^IBE(357.2,LIST,1,SUB,0))
"RTN","IBDF10B",15,0)
 .I "DU"[WAY S POS=$P(NODE,"^",2) I POS="" S POS=$S(IBBLK("BOX")=1:1,1:0),POS=POS+$S(IBBLK("HDR")="":0,1:2) S $P(^IBE(357.2,LIST,1,SUB,0),"^",2)=POS
"RTN","IBDF10B",16,0)
 .I "RL"[WAY S POS=$P(NODE,"^",3) I POS="" S POS=0,$P(^IBE(357.2,LIST,1,SUB,0),"^",3)=POS
"RTN","IBDF10B",17,0)
 .;now loop through all of the columns, shifting the position of each
"RTN","IBDF10B",18,0)
 .S SUB=0 F  S SUB=$O(^IBE(357.2,LIST,1,SUB)) Q:'SUB  D
"RTN","IBDF10B",19,0)
 ..S NODE=$G(^IBE(357.2,LIST,1,SUB,0)) Q:NODE=""
"RTN","IBDF10B",20,0)
 ..S PIECE=$S(VERT:2,1:3),POS=$P(NODE,"^",PIECE),IBY=+$P(NODE,"^",2),IBX=+$P(NODE,"^",3) I POS=+POS,$$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) S $P(^IBE(357.2,LIST,1,SUB,0),"^",PIECE)=$S(POS+AMOUNT<0:0,1:POS+AMOUNT)
"RTN","IBDF10B",21,0)
 Q
"RTN","IBDF10B",22,0)
ADDCOL(LIST) ;adds a column to the selection list, which has none
"RTN","IBDF10B",23,0)
 S ^IBE(357.2,LIST,1,0)="^357.21I^1^1",^(1,0)="1^^^"
"RTN","IBDF10B",24,0)
 K DIK,DA S DIK="^IBE(357.2,"_LIST_",1,",DA(1)=LIST,DA=1 D IX1^DIK K DIK,DA
"RTN","IBDF10B",25,0)
 Q 1
"RTN","IBDF10C")
0^73^B17141242
"RTN","IBDF10C",1,0)
IBDF10C ;ALB/CJM - ENCOUNTER FORM - (shift block contents - continued) ;APRIL 22,1993
"RTN","IBDF10C",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF10C",3,0)
 ;
"RTN","IBDF10C",4,0)
MAX(TYPE,WAY,MAX,TOP,BOTTOM,LEFT,RIGHT) ;returns the maximum allowable shift
"RTN","IBDF10C",5,0)
 ;
"RTN","IBDF10C",6,0)
 N VERT,AREASIZE,IBY,IBX,SIZE,NODE
"RTN","IBDF10C",7,0)
 S VERT=$S("UD"[WAY:1,1:0)
"RTN","IBDF10C",8,0)
 S AREASIZE=$S(VERT:$S(TYPE="B":IBFORM("HT"),1:IBBLK("H")),1:$S(TYPE="B":IBFORM("WIDTH"),1:IBBLK("W")))
"RTN","IBDF10C",9,0)
 D @TYPE
"RTN","IBDF10C",10,0)
 I TYPE'="B",IBBLK("BOX")=1 S MAX=MAX-1
"RTN","IBDF10C",11,0)
 S:MAX<0 MAX=0
"RTN","IBDF10C",12,0)
 Q MAX
"RTN","IBDF10C",13,0)
E ;
"RTN","IBDF10C",14,0)
 D D
"RTN","IBDF10C",15,0)
 D S
"RTN","IBDF10C",16,0)
 D T
"RTN","IBDF10C",17,0)
 D L
"RTN","IBDF10C",18,0)
 D M
"RTN","IBDF10C",19,0)
 D H
"RTN","IBDF10C",20,0)
 Q
"RTN","IBDF10C",21,0)
D ;
"RTN","IBDF10C",22,0)
 N SUB,FLD
"RTN","IBDF10C",23,0)
 S FLD="" F  S FLD=$O(^IBE(357.5,"C",IBBLK,FLD)) Q:'FLD  D
"RTN","IBDF10C",24,0)
 .S NODE=$G(^IBE(357.5,FLD,0)) Q:NODE=""
"RTN","IBDF10C",25,0)
 .S IBY=$P(NODE,"^",11),IBX=$P(NODE,"^",10) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10C",26,0)
 ..S SIZE=$S(VERT:$P(NODE,"^",12),1:$S($L($P(NODE,"^",6))>$P(NODE,"^",14):$L($P(NODE,"^",6)),1:$P(NODE,"^",14)))
"RTN","IBDF10C",27,0)
 ..D COMPARE
"RTN","IBDF10C",28,0)
 .S SUB=0 F  S SUB=$O(^IBE(357.5,FLD,2,SUB)) Q:'SUB  D
"RTN","IBDF10C",29,0)
 ..S NODE=$G(^IBE(357.5,FLD,2,SUB,0)) Q:NODE=""
"RTN","IBDF10C",30,0)
 ..S IBX=$P(NODE,"^",4),IBY=$P(NODE,"^",5) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10C",31,0)
 ...S SIZE=$S(VERT:1,1:$L($P(NODE,"^",1)))
"RTN","IBDF10C",32,0)
 ...D COMPARE
"RTN","IBDF10C",33,0)
 ..S IBX=$P(NODE,"^",7),IBY=$P(NODE,"^",6) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10C",34,0)
 ...S SIZE=$S(VERT:1,1:$P(NODE,"^",8))
"RTN","IBDF10C",35,0)
 ...D COMPARE
"RTN","IBDF10C",36,0)
 Q
"RTN","IBDF10C",37,0)
 ;
"RTN","IBDF10C",38,0)
M ;shift multiple choice field
"RTN","IBDF10C",39,0)
 N SUB,FLD
"RTN","IBDF10C",40,0)
 S FLD="" F  S FLD=$O(^IBE(357.93,"C",IBBLK,FLD)) Q:'FLD  D
"RTN","IBDF10C",41,0)
 .S NODE=$G(^IBE(357.93,FLD,0)) Q:NODE=""
"RTN","IBDF10C",42,0)
 .S IBY=$P(NODE,"^",4),IBX=$P(NODE,"^",3) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10C",43,0)
 ..S SIZE=$S(VERT:1,1:$L($P(NODE,"^",2)))
"RTN","IBDF10C",44,0)
 ..D COMPARE
"RTN","IBDF10C",45,0)
 .S SUB=0 F  S SUB=$O(^IBE(357.93,FLD,1,SUB)) Q:'SUB  D
"RTN","IBDF10C",46,0)
 ..S NODE=$G(^IBE(357.93,FLD,1,SUB,0)) Q:NODE=""
"RTN","IBDF10C",47,0)
 ..S IBX=$P(NODE,"^",2),IBY=$P(NODE,"^",3) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10C",48,0)
 ...S SIZE=$S(VERT:1,1:$L($P(NODE,"^",1)))
"RTN","IBDF10C",49,0)
 ...D COMPARE
"RTN","IBDF10C",50,0)
 ..S IBX=$P(NODE,"^",6),IBY=$P(NODE,"^",7) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10C",51,0)
 ...S SIZE=$S(VERT:1,1:3)
"RTN","IBDF10C",52,0)
 ...D COMPARE
"RTN","IBDF10C",53,0)
 Q
"RTN","IBDF10C",54,0)
 ;
"RTN","IBDF10C",55,0)
H ;shift hand print fields
"RTN","IBDF10C",56,0)
 N SUB,FLD
"RTN","IBDF10C",57,0)
 S FLD="" F  S FLD=$O(^IBE(359.94,"C",IBBLK,FLD)) Q:'FLD  D
"RTN","IBDF10C",58,0)
 .S NODE=$G(^IBE(359.94,FLD,0)) Q:NODE=""
"RTN","IBDF10C",59,0)
 .S IBY=$P(NODE,"^",4),IBX=$P(NODE,"^",3) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10C",60,0)
 ..I VERT S SIZE=2
"RTN","IBDF10C",61,0)
 ..I 'VERT S SIZE=$L($P(NODE,"^",2))+1 S NODE=$G(^IBE(359.1,$P(NODE,"^",10),0)) S SIZE=SIZE+($P(NODE,"^",6)*$S(IBFORM("WIDTH")>96:4,1:3)) I $L($P(NODE,"^",11)) S SIZE=SIZE+(2*$L($P(NODE,"^",11)))
"RTN","IBDF10C",62,0)
 ..D COMPARE
"RTN","IBDF10C",63,0)
 Q
"RTN","IBDF10C",64,0)
 ;
"RTN","IBDF10C",65,0)
S ;
"RTN","IBDF10C",66,0)
 ;just let the user do what he wants - lists automatically resize themselves to fit the block
"RTN","IBDF10C",67,0)
 Q
"RTN","IBDF10C",68,0)
T ;
"RTN","IBDF10C",69,0)
 N TXT
"RTN","IBDF10C",70,0)
 S TXT="" F  S TXT=$O(^IBE(357.8,"C",IBBLK,TXT)) Q:'TXT  D
"RTN","IBDF10C",71,0)
 .S NODE=$G(^IBE(357.8,TXT,0)) Q:NODE=""
"RTN","IBDF10C",72,0)
 .S IBY=$P(NODE,"^",4),IBX=$P(NODE,"^",3) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10C",73,0)
 ..S SIZE=$S(VERT:$P(NODE,"^",6),1:$P(NODE,"^",5))
"RTN","IBDF10C",74,0)
 ..D COMPARE
"RTN","IBDF10C",75,0)
 Q
"RTN","IBDF10C",76,0)
L ;
"RTN","IBDF10C",77,0)
 N LINE
"RTN","IBDF10C",78,0)
 S LINE="" F  S LINE=$O(^IBE(357.7,"C",IBBLK,LINE)) Q:'LINE  D
"RTN","IBDF10C",79,0)
 .S NODE=$G(^IBE(357.7,LINE,0)) Q:NODE=""
"RTN","IBDF10C",80,0)
 .S IBY=$P(NODE,"^",3),IBX=$P(NODE,"^",2) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D
"RTN","IBDF10C",81,0)
 ..S SIZE=$S(((($P(NODE,"^",4)="V")&VERT)!(($P(NODE,"^",4)="H")&'VERT)):$P(NODE,"^",5),1:1)
"RTN","IBDF10C",82,0)
 ..D COMPARE
"RTN","IBDF10C",83,0)
 Q
"RTN","IBDF10C",84,0)
B ;
"RTN","IBDF10C",85,0)
 N BLOCK
"RTN","IBDF10C",86,0)
 S BLOCK="" F  S BLOCK=$O(^IBE(357.1,"C",IBFORM,BLOCK)) Q:'BLOCK  D
"RTN","IBDF10C",87,0)
 .S NODE=$G(^IBE(357.1,BLOCK,0)) Q:NODE=""
"RTN","IBDF10C",88,0)
 .S SIZE=$S(VERT:$P(NODE,"^",7),1:$P(NODE,"^",6)),IBX=$P(NODE,"^",5),IBY=$P(NODE,"^",4)
"RTN","IBDF10C",89,0)
 .I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D COMPARE
"RTN","IBDF10C",90,0)
 ;..I WAY="R" S:(IBFORM("WIDTH")-(IBX+WIDTH))<MAX MAX=(IBFORM("WIDTH")-(IBX+WIDTH)) Q
"RTN","IBDF10C",91,0)
 ;..I WAY="L" S:IBX<MAX MAX=IBX Q
"RTN","IBDF10C",92,0)
 ;..I WAY="D" S:(IBFORM("HT")-(IBY+HT))<MAX MAX=(IBFORM("HT")-(IBY+HT)) Q
"RTN","IBDF10C",93,0)
 ;..I WAY="U" S:IBY<MAX MAX=IBY Q
"RTN","IBDF10C",94,0)
 Q
"RTN","IBDF10C",95,0)
COMPARE ;
"RTN","IBDF10C",96,0)
 I WAY="R" S:(AREASIZE-(IBX+SIZE))<MAX MAX=(AREASIZE-(IBX+SIZE)) Q
"RTN","IBDF10C",97,0)
 I WAY="L" S:IBX<MAX MAX=IBX Q
"RTN","IBDF10C",98,0)
 I WAY="D" S:(AREASIZE-(IBY+SIZE))<MAX MAX=(AREASIZE-(IBY+SIZE)) Q
"RTN","IBDF10C",99,0)
 I WAY="U" S:IBY<MAX MAX=IBY Q
"RTN","IBDF10C",100,0)
 Q
"RTN","IBDF11")
0^74^B7174368
"RTN","IBDF11",1,0)
IBDF11 ;ALB/CJM - ENCOUNTER FORM - (print manager setup) ;April 20,1993
"RTN","IBDF11",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF11",3,0)
 ;
"RTN","IBDF11",4,0)
CLNCSUP ;edit clinic setup for print manager
"RTN","IBDF11",5,0)
 N CLINIC
"RTN","IBDF11",6,0)
 K DIR S DIR(0)="409.95,.01",DIR("A")="EDIT REPORTS TO PRINT FOR WHICH CLINIC?"
"RTN","IBDF11",7,0)
 D ^DIR K DIR
"RTN","IBDF11",8,0)
 Q:$D(DIRUT)!(+Y<0)
"RTN","IBDF11",9,0)
 S CLINIC=+Y
"RTN","IBDF11",10,0)
 K DA S DA=$O(^SD(409.95,"B",CLINIC,"")) I 'DA D
"RTN","IBDF11",11,0)
 .K DIC,DO,DD,DINUM S DIC="^SD(409.95,",DIC(0)="",X=CLINIC
"RTN","IBDF11",12,0)
 .D FILE^DICN K DIC
"RTN","IBDF11",13,0)
 .S DA=$S(+Y<1:0,1:+Y)
"RTN","IBDF11",14,0)
 Q:'DA
"RTN","IBDF11",15,0)
 K DIE,DR S DIE=409.95
"RTN","IBDF11",16,0)
 S DR="[IBDF PRINT MANAGER]" D ^DIE K DIE,DR,DA
"RTN","IBDF11",17,0)
 Q
"RTN","IBDF11",18,0)
DIVSUP ;edit division setup for print manager
"RTN","IBDF11",19,0)
 N DIVISION
"RTN","IBDF11",20,0)
 W !!,"You can now select reports that should be printed for the entire division",!
"RTN","IBDF11",21,0)
 K DIR S DIR(0)="409.96,.01",DIR("A")="EDIT REPORTS TO PRINT FOR WHICH DIVISION?"
"RTN","IBDF11",22,0)
 D ^DIR K DIR
"RTN","IBDF11",23,0)
 Q:$D(DIRUT)!(+Y<0)
"RTN","IBDF11",24,0)
 S DIVISION=+Y
"RTN","IBDF11",25,0)
 K DA S DA=$O(^SD(409.96,"B",DIVISION,"")) I 'DA D
"RTN","IBDF11",26,0)
 .K DIC,DO,DD,DINUM S DIC="^SD(409.96,",DIC(0)="",X=DIVISION
"RTN","IBDF11",27,0)
 .D FILE^DICN K DIC
"RTN","IBDF11",28,0)
 .S DA=$S(+Y<1:0,1:+Y)
"RTN","IBDF11",29,0)
 Q:'DA
"RTN","IBDF11",30,0)
 K DIE,DR S DIE=409.96
"RTN","IBDF11",31,0)
 S DR="[IBDF PRINT MANAGER]" D ^DIE K DIE,DR,DA
"RTN","IBDF11",32,0)
 Q
"RTN","IBDF11",33,0)
EDITRPRT(HLTHSMRY) ;edit package interface,type=report
"RTN","IBDF11",34,0)
 ;HLTHSMRY=1 if report type is health summary, 0 otherwise
"RTN","IBDF11",35,0)
 N REPORT,IBDELETE,IBNEW,DLAYGO
"RTN","IBDF11",36,0)
 S HLTHSMRY=+$G(HLTHSMRY)
"RTN","IBDF11",37,0)
 W !!,"You can now edit the "_$S(HLTHSMRY:"Health Summaries",1:"reports")_" available through the print manager.",!
"RTN","IBDF11",38,0)
 D:'HLTHSMRY INFO^IBDF11A
"RTN","IBDF11",39,0)
 K DIC S DIC=357.6,DIC(0)="AELMQ",DIC("S")="I $P($G(^(0)),U,6)=4,"_$S(HLTHSMRY:"$P($G(^(0)),U,10)",1:"'$P($G(^(0)),U,10)"),DLAYGO=357.6
"RTN","IBDF11",40,0)
 S DIC("A")="Select a "_$S(HLTHSMRY:"Health Summary",1:"report")_" defined to the print manager: "
"RTN","IBDF11",41,0)
 S:HLTHSMRY DLAYGO=357.6
"RTN","IBDF11",42,0)
 D ^DIC K DIC
"RTN","IBDF11",43,0)
 Q:+Y<0
"RTN","IBDF11",44,0)
 S REPORT=+Y,IBNEW=$P(Y,"^",3)
"RTN","IBDF11",45,0)
 S IBDELETE=$S(IBNEW:1,1:0)
"RTN","IBDF11",46,0)
 S DA=REPORT
"RTN","IBDF11",47,0)
 K DIE,DR S DIE=357.6,DR=$S(HLTHSMRY:"[IBDF EDIT AVAILABLE HLTH SMRY]",1:"[IBDF EDIT AVAILABLE REPORT]"),DIE("NO^")="BACKOUTOK"
"RTN","IBDF11",48,0)
 D ^DIE K DIE,DR,DA
"RTN","IBDF11",49,0)
 I IBDELETE K DA S DIK="^IBE(357.6,",DA=REPORT D ^DIK K DIK,DA
"RTN","IBDF11",50,0)
 Q
"RTN","IBDF11",51,0)
CLNCSUP2 ;entry point to be called by an action protocol
"RTN","IBDF11",52,0)
 D FULL^VALM1
"RTN","IBDF11",53,0)
 D CLNCSUP
"RTN","IBDF11",54,0)
 S VALMBCK="R"
"RTN","IBDF11",55,0)
 Q
"RTN","IBDF11",56,0)
DIVSUP2 ;entry point to be called by an action protocol
"RTN","IBDF11",57,0)
 D FULL^VALM1
"RTN","IBDF11",58,0)
 D DIVSUP
"RTN","IBDF11",59,0)
 S VALMBCK="R"
"RTN","IBDF11",60,0)
 Q
"RTN","IBDF11A")
0^75^B5846124
"RTN","IBDF11A",1,0)
IBDF11A ;ALB/CJM - ENCOUNTER FORM - (print manager setup - INFORMATION) ;April 20,1993
"RTN","IBDF11A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF11A",3,0)
 ;
"RTN","IBDF11A",4,0)
INFO ;N I,LINE,DIR
"RTN","IBDF11A",5,0)
 F I=0:1 S LINE=$P($T(TEXT+I),";;",2) Q:LINE=""  W !,LINE I $Y>(IOSL-4) S DIR(0)="E" D ^DIR W @IOF Q:'Y
"RTN","IBDF11A",6,0)
 Q
"RTN","IBDF11A",7,0)
TEXT ;;Care must be taken when defining reports to the Print Manager. Please
"RTN","IBDF11A",8,0)
 ;;follow these rules:
"RTN","IBDF11A",9,0)
 ;; 
"RTN","IBDF11A",10,0)
 ;;  1) Entry points must involve no user interaction.
"RTN","IBDF11A",11,0)
 ;;  2) The device must not be changed or closed.
"RTN","IBDF11A",12,0)
 ;;  3) Local variables should be the same on exit as on entry.
"RTN","IBDF11A",13,0)
 ;; 
"RTN","IBDF11A",14,0)
 ;;THESE VARIABLES ARE AVAILABLE:
"RTN","IBDF11A",15,0)
 ;;  
"RTN","IBDF11A",16,0)
 ;;  DFN = ien of patient in the PATIENT file
"RTN","IBDF11A",17,0)
 ;;  IBCLINIC = ien of clinic in the HOSPTIAL LOCATION file
"RTN","IBDF11A",18,0)
 ;;  IBAPPT   = appointment date/time in FM format
"RTN","IBDF11A",19,0)
 ;;  
"RTN","IBDF11A",20,0)
 ;;FEATURES OF INTEREST, IN THE ORDER PERFORMED BY THE PRINT MANAGER:
"RTN","IBDF11A",21,0)
 ;;  
"RTN","IBDF11A",22,0)
 ;;  AVAILABLE?: The Print Manager will not print the report unless
"RTN","IBDF11A",23,0)
 ;;  this is set to YES.
"RTN","IBDF11A",24,0)
 ;; 
"RTN","IBDF11A",25,0)
 ;;  REQUIRED VARIABLES: You can define a list of variables that should
"RTN","IBDF11A",26,0)
 ;;  be defined. The Print Manager won't call the entry point unless
"RTN","IBDF11A",27,0)
 ;;  they are defined.
"RTN","IBDF11A",28,0)
 ;; 
"RTN","IBDF11A",29,0)
 ;;  PROTECTED VARIABLES: You can define a list of variables (without 
"RTN","IBDF11A",30,0)
 ;;  subscripts) that should be NEWed.
"RTN","IBDF11A",31,0)
 ;; 
"RTN","IBDF11A",32,0)
 ;;  ENTRY ACTION: Mumps code that should be Xecuted before calling
"RTN","IBDF11A",33,0)
 ;;  the entry point.
"RTN","IBDF11A",34,0)
 ;; 
"RTN","IBDF11A",35,0)
 ;;  EXIT ACTION: Mumps code that should be Xecuted after calling
"RTN","IBDF11A",36,0)
 ;;  the  entry point.
"RTN","IBDF11A",37,0)
 ;; 
"RTN","IBDF11A",38,0)
 ;;EXAMPLE: Supposing the entry point kills DFN. You could do this:
"RTN","IBDF11A",39,0)
 ;;  
"RTN","IBDF11A",40,0)
 ;;   REQUIRED VARIABLE: DFN
"RTN","IBDF11A",41,0)
 ;;   PROTECTED VARIABLE: IBDFN
"RTN","IBDF11A",42,0)
 ;;   ENTRY ACTION: S IBDFN=DFN
"RTN","IBDF11A",43,0)
 ;;   EXIT ACTION: S DFN=IBDFN
"RTN","IBDF11A",44,0)
 ;;  
"RTN","IBDF11A",45,0)
 ;;
"RTN","IBDF12")
0^76^B4851825
"RTN","IBDF12",1,0)
IBDF12 ;ALB/CJM - ENCOUNTER FORM - ENTRY FOR EDITING TOOLKIT FORMS ;JUN 16,1992
"RTN","IBDF12",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF12",3,0)
 ;
"RTN","IBDF12",4,0)
 ;*** NOTE:
"RTN","IBDF12",5,0)
 ;IBTKFORM=1 while editing a tk form
"RTN","IBDF12",6,0)
 ;IBTKBLK=0 while editing blocks on a tk form - because they are not tk blocks 
"RTN","IBDF12",7,0)
FORMLIST ;
"RTN","IBDF12",8,0)
 N IBTKFORM,IBTKBLK,IBDEVICE,IBAPI
"RTN","IBDF12",9,0)
 S IBTKFORM=1,IBTKBLK=0
"RTN","IBDF12",10,0)
 N IBFASTXT ;set to 1 for fast exit from system
"RTN","IBDF12",11,0)
 S IBFASTXT=0
"RTN","IBDF12",12,0)
 S IBAPI("INDEX")="D IDXFORMS^IBDF12"
"RTN","IBDF12",13,0)
 S IBAPI("SELECT")="D SELECT^IBDF12"
"RTN","IBDF12",14,0)
 D DEVICE^IBDFUA(1,.IBDEVICE)
"RTN","IBDF12",15,0)
 K XQORS,VALMEVL
"RTN","IBDF12",16,0)
 S IBCLINIC=""
"RTN","IBDF12",17,0)
 D EN^VALM("IBDF TOOL KIT FORMS")
"RTN","IBDF12",18,0)
 Q
"RTN","IBDF12",19,0)
ONENTRY ;
"RTN","IBDF12",20,0)
 D IDXFORMS
"RTN","IBDF12",21,0)
 Q
"RTN","IBDF12",22,0)
ONEXIT ;
"RTN","IBDF12",23,0)
 D KILL^%ZISS
"RTN","IBDF12",24,0)
 K ^TMP("IB",$J),^TMP("IBDF",$J),IBCLINIC,VALMY,IBQUIT,VALMBCK,X,Y,I,DA,D0
"RTN","IBDF12",25,0)
 Q
"RTN","IBDF12",26,0)
 ;
"RTN","IBDF12",27,0)
IDXFORMS ;build an array of toolkit forms
"RTN","IBDF12",28,0)
 N FORM,NODE
"RTN","IBDF12",29,0)
 K @VALMAR
"RTN","IBDF12",30,0)
 S VALMCNT=0
"RTN","IBDF12",31,0)
 S FORM=0 F  S FORM=$O(^IBE(357,"C",1,FORM)) Q:'FORM  S NODE=$G(^IBE(357,FORM,0)) I +$P(NODE,"^",7),$P(NODE,"^")'="TOOL KIT",$P(NODE,"^")'="WORKCOPY" D ENTRY
"RTN","IBDF12",32,0)
 Q
"RTN","IBDF12",33,0)
ENTRY ;adds an entry to the array
"RTN","IBDF12",34,0)
 S VALMCNT=VALMCNT+1,@VALMAR@(VALMCNT,0)=$J(VALMCNT,3)_"  "_$$PADRIGHT^IBDFU($P(NODE,"^",1),30)_"  "_$E($P(NODE,"^",3),1,80)
"RTN","IBDF12",35,0)
 S @VALMAR@("IDX",VALMCNT,VALMCNT)=FORM D FLDCTRL^VALM10(VALMCNT) ;set video for ID column
"RTN","IBDF12",36,0)
 S @VALMAR@("IDX",VALMCNT,VALMCNT)=FORM_"^"
"RTN","IBDF12",37,0)
 Q
"RTN","IBDF12",38,0)
HDR ;
"RTN","IBDF12",39,0)
 S VALMHDR(1)="TOOLKIT FORMS"
"RTN","IBDF12",40,0)
 Q
"RTN","IBDF12",41,0)
DELFORM ;allows user to select a form, then deletes it
"RTN","IBDF12",42,0)
 N SEL,FORM
"RTN","IBDF12",43,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDF12",44,0)
 S SEL=$O(VALMY("")),FORM=""
"RTN","IBDF12",45,0)
 I SEL S FORM=+$G(@VALMAR@("IDX",SEL,SEL))
"RTN","IBDF12",46,0)
 I FORM D DELETE^IBDFU2C(FORM,357,1)
"RTN","IBDF12",47,0)
 S VALMBCK="R"
"RTN","IBDF12",48,0)
 D IDXFORMS
"RTN","IBDF12",49,0)
 Q
"RTN","IBDF12",50,0)
 ;
"RTN","IBDF12",51,0)
SELECT ;
"RTN","IBDF12",52,0)
 N SEL
"RTN","IBDF12",53,0)
 S IBFORM=""
"RTN","IBDF12",54,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDF12",55,0)
 S SEL=$O(VALMY(""))
"RTN","IBDF12",56,0)
 I SEL S IBFORM=+$G(@VALMAR@("IDX",SEL,SEL))
"RTN","IBDF12",57,0)
 Q
"RTN","IBDF13")
0^77^B13225816
"RTN","IBDF13",1,0)
IBDF13 ;ALB/CJM - ENCOUNTER FORM - EDITING TOOLKIT BLKS ; 24-JUN-1993
"RTN","IBDF13",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF13",3,0)
 ;
"RTN","IBDF13",4,0)
LIST ;displays list of toolkit blocks, then allows editng
"RTN","IBDF13",5,0)
 N IBFORM,IBTKFORM,IBTKBLK,IBFASTXT,IOVL,IOHL,IOBRC,IOBLC,IOTRC,IOTLC,IBBLK,BLKLIST,D0,DA,IBDEVICE
"RTN","IBDF13",6,0)
 S (IBTKFORM,IBFASTXT,IBBLK)=0,IBTKBLK=1
"RTN","IBDF13",7,0)
 S IBFORM("NAME")="LIST OF TOOLKIT BLOCKS",IBFORM("TOOLKIT")=1,IBFORM("COMPILED")=0,IBFORM("HT")=80,IBFORM("WIDTH")=133,IBFORM("PAGE_HT")=80,IBFORM("PAGES")=1,IBFORM("SCAN")=1,IBFORM("SCAN","ICR")=1,IBFORM("SCAN",1)=1
"RTN","IBDF13",8,0)
 ;
"RTN","IBDF13",9,0)
 D DEVICE^IBDFUA(1,.IBDEVICE)
"RTN","IBDF13",10,0)
 K XQORS,VALMEVL
"RTN","IBDF13",11,0)
 D PRNTPRMS^IBDFU1C(.IBPRINT,0,1,0,0)
"RTN","IBDF13",12,0)
 S IBFORM=$$TKFORM^IBDFU2C
"RTN","IBDF13",13,0)
 D EN^VALM("IBDF EDIT TOOL KIT BLOCKS") ;list processor displays list of toolkit blocks
"RTN","IBDF13",14,0)
 Q
"RTN","IBDF13",15,0)
 ;
"RTN","IBDF13",16,0)
SELECT() ;allows the user to select from the displayed list of TK blocks
"RTN","IBDF13",17,0)
 N CHOICE,IBBLK
"RTN","IBDF13",18,0)
 S IBBLK=""
"RTN","IBDF13",19,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDF13",20,0)
 S CHOICE=$O(VALMY("")) S:CHOICE IBBLK=$G(@VALMAR@("IDX",CHOICE,CHOICE))
"RTN","IBDF13",21,0)
 Q IBBLK
"RTN","IBDF13",22,0)
EDITBLK ;allows user to select a blk, then displays it for edit
"RTN","IBDF13",23,0)
 ;allows user to discard or save changes to the block
"RTN","IBDF13",24,0)
 ;
"RTN","IBDF13",25,0)
 ;If IBBLK and IBBLK2 are used to point to two copies of the block, one in the workspace and the other on the form
"RTN","IBDF13",26,0)
 ;the copy on the form is not edited, the copy in the workspace is
"RTN","IBDF13",27,0)
 N IBBLK,IBBLK2,IBTKODR,IBJUNK,IFSAVE
"RTN","IBDF13",28,0)
 ;N IBMEMARY
"RTN","IBDF13",29,0)
 S VALMBCK="R"
"RTN","IBDF13",30,0)
 S IBBLK2=""
"RTN","IBDF13",31,0)
 S IBBLK=$$SELECT
"RTN","IBDF13",32,0)
 I IBBLK D
"RTN","IBDF13",33,0)
 .S (IBBLK2,IBTKODR,IBJUNK)=""
"RTN","IBDF13",34,0)
 .D COPYBLK^IBDF5B(IBBLK,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" Q  ;sets IBBLK to the work copy, IBBLK2 to the copy actually on the form
"RTN","IBDF13",35,0)
 D:IBBLK2 EN^VALM("IBDF FORM BLOCK EDIT")
"RTN","IBDF13",36,0)
 I IBBLK,IBBLK2 D
"RTN","IBDF13",37,0)
 .S IFSAVE=$$ASKSAVE^IBDF5B
"RTN","IBDF13",38,0)
 .I IFSAVE D SAVECOPY^IBDF5B(.IBBLK,.IBBLK2,IBTKODR) S IBBLK=IBBLK2,IBBLK2=""
"RTN","IBDF13",39,0)
 .I 'IFSAVE D DLTCOPY^IBDF5B(IBBLK) S IBBLK=IBBLK2,IBBLK2=""
"RTN","IBDF13",40,0)
 S IBPRINT("WITH_DATA")=0
"RTN","IBDF13",41,0)
 D:'$G(IBFASTXT) IDXBLKS^IBDF7
"RTN","IBDF13",42,0)
 Q
"RTN","IBDF13",43,0)
DLTBLOCK ;allows user to select a blk, then deletes it
"RTN","IBDF13",44,0)
 N IBBLK
"RTN","IBDF13",45,0)
 S VALMBCK="R"
"RTN","IBDF13",46,0)
 S IBBLK=$$SELECT
"RTN","IBDF13",47,0)
 I IBBLK Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.1,IBBLK,0)),"^"))  D DLTBLK^IBDFU3(IBBLK,IBFORM,357.1),IDXBLKS^IBDF7
"RTN","IBDF13",48,0)
 Q
"RTN","IBDF13",49,0)
CHGORDER ;allows user to select a blk, then change it's order in the toolkit
"RTN","IBDF13",50,0)
 N IBBLK
"RTN","IBDF13",51,0)
 S VALMBCK="R"
"RTN","IBDF13",52,0)
 S IBBLK=$$SELECT
"RTN","IBDF13",53,0)
 I IBBLK K DIE,DA S DIE=357.1,DA=IBBLK,DR=".14R" D ^DIE K DIE,DA,DR,DIC
"RTN","IBDF13",54,0)
 D IDXBLKS^IBDF7
"RTN","IBDF13",55,0)
 Q
"RTN","IBDF13",56,0)
NEWBLK ;creates a new toolkit block
"RTN","IBDF13",57,0)
 N IBBLK
"RTN","IBDF13",58,0)
 S VALMBCK="R"
"RTN","IBDF13",59,0)
 S IBBLK=$$CREATE^IBDF5C()
"RTN","IBDF13",60,0)
 D:IBBLK IDXBLKS^IBDF7
"RTN","IBDF13",61,0)
 Q
"RTN","IBDF13",62,0)
COPYBLK ;allows the user to select a block to copy
"RTN","IBDF13",63,0)
 N IBBLK,CHOICE,NEWBLK
"RTN","IBDF13",64,0)
 S VALMBCK="R"
"RTN","IBDF13",65,0)
 D FULL^VALM1
"RTN","IBDF13",66,0)
 K DIR S DIR(0)="SO^1:ON THE LIST OF TOOLKIT BLOCKS;2:ON A TOOLKIT FORM;3:ON A FORM NOT IN THE TOOLKIT"
"RTN","IBDF13",67,0)
 S DIR("A")="WHERE IS THE BLOCK THAT YOU WANT COPIED?"
"RTN","IBDF13",68,0)
 D ^DIR K DIR
"RTN","IBDF13",69,0)
 Q:(Y=-1)!$D(DIRUT)
"RTN","IBDF13",70,0)
 S CHOICE=Y,IBBLK=""
"RTN","IBDF13",71,0)
 D:CHOICE=1 RE^VALM4
"RTN","IBDF13",72,0)
 S:CHOICE=1 IBBLK=$$SELECT
"RTN","IBDF13",73,0)
 S:CHOICE=2 IBBLK=$$SELECT2(1)
"RTN","IBDF13",74,0)
 S:CHOICE=3 IBBLK=$$SELECT2(0)
"RTN","IBDF13",75,0)
 I IBBLK S NEWBLK=$$COPYBLK^IBDFU2(IBBLK,IBFORM,357.1,357.1,0,0,$$TKORDER()) I NEWBLK D
"RTN","IBDF13",76,0)
 .K DIE,DA S DIE=357.1,DA=NEWBLK,DR=".01;.13R;.14R" D ^DIE
"RTN","IBDF13",77,0)
 .I '$G(DA) D DLTCNTNT^IBDFU3(NEWBLK,357.1)
"RTN","IBDF13",78,0)
 .K DIE,DA,DR,DIC
"RTN","IBDF13",79,0)
 .D IDXBLKS^IBDF7
"RTN","IBDF13",80,0)
 S VALMBCK="R"
"RTN","IBDF13",81,0)
 Q
"RTN","IBDF13",82,0)
TKORDER() ;returns an unused number for the list of toolkit blocks
"RTN","IBDF13",83,0)
 N NUMBER
"RTN","IBDF13",84,0)
 F NUMBER=1:1:10000 Q:'$D(^IBE(357.1,"D",NUMBER))
"RTN","IBDF13",85,0)
 Q NUMBER
"RTN","IBDF13",86,0)
SELECT2(TK) ;allows the user to select a form, then a block from it
"RTN","IBDF13",87,0)
 ;TK=0 if form is not to be chosen from the TK
"RTN","IBDF13",88,0)
 ;TK=1 if the form is to be chosen from the TK
"RTN","IBDF13",89,0)
 ;TK="" means ask the user whether or not the form is in the TK
"RTN","IBDF13",90,0)
 N IBFORM,IBBLK
"RTN","IBDF13",91,0)
 S IBBLK=""
"RTN","IBDF13",92,0)
 S IBFORM=$$SLCTFORM^IBDFU4($G(TK))
"RTN","IBDF13",93,0)
 I IBFORM D
"RTN","IBDF13",94,0)
 .W !!,"NOW CHOOSE THE BLOCK TO COPY!",!
"RTN","IBDF13",95,0)
 .S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,IOSL)
"RTN","IBDF13",96,0)
 Q IBBLK
"RTN","IBDF14")
0^78^B4148285
"RTN","IBDF14",1,0)
IBDF14 ;ALB/CJM - AICS LIST CLINIC SETUP ; JUL 20,1993
"RTN","IBDF14",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF14",3,0)
 ;
"RTN","IBDF14",4,0)
SETUPS ; -- Lists forms/reports defined in print manager clinic setup
"RTN","IBDF14",5,0)
 ;
"RTN","IBDF14",6,0)
% N CLINIC,SETUP,NODE,COND,INTRFACE,PAGE,IBQUIT,IBHDT,X,Y,FORM,REPORT,NAME,VAUTD,DIVIS,NEWDIV,CNT,MULTI
"RTN","IBDF14",7,0)
 W !!,"AICS Print Manager Clinic Setup Report",!!
"RTN","IBDF14",8,0)
 S IBQUIT=0
"RTN","IBDF14",9,0)
 D DIVIS G:IBQUIT EXIT
"RTN","IBDF14",10,0)
 D DEVICE G:IBQUIT EXIT
"RTN","IBDF14",11,0)
 D DQ
"RTN","IBDF14",12,0)
 G EXIT
"RTN","IBDF14",13,0)
 Q
"RTN","IBDF14",14,0)
 ;
"RTN","IBDF14",15,0)
EXIT ; -- exit module
"RTN","IBDF14",16,0)
 K ^TMP($J,"IBCS")
"RTN","IBDF14",17,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBDF14",18,0)
 D ^%ZISC
"RTN","IBDF14",19,0)
 K ZTSK,ZTDESC,ZTSAVE,ZTRTN
"RTN","IBDF14",20,0)
 Q
"RTN","IBDF14",21,0)
 ;
"RTN","IBDF14",22,0)
DQ ; -- entry point from task man
"RTN","IBDF14",23,0)
 K ^TMP($J,"IBCS")
"RTN","IBDF14",24,0)
 S IBQUIT=0,PAGE=1
"RTN","IBDF14",25,0)
 S IBHDT=$$HTE^XLFDT($H,1)
"RTN","IBDF14",26,0)
 D ^IBDF14A
"RTN","IBDF14",27,0)
 Q
"RTN","IBDF14",28,0)
 ;
"RTN","IBDF14",29,0)
DEVICE ; -- ask device
"RTN","IBDF14",30,0)
 S %ZIS="MQ" D ^%ZIS I POP S IBQUIT=1 Q
"RTN","IBDF14",31,0)
 I $D(IO("Q")) S ZTRTN="DQ^IBDF14",ZTDESC="IBD - Print Manager Clinic Setup",ZTSAVE("VA*")="",ZTSAVE("MULTI")="" D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS S IBQUIT=1 Q
"RTN","IBDF14",32,0)
 U IO
"RTN","IBDF14",33,0)
 Q
"RTN","IBDF14",34,0)
 ;
"RTN","IBDF14",35,0)
DIVIS ; -- Select Division
"RTN","IBDF14",36,0)
 N X,Y S VAUTD=1,MULTI=0
"RTN","IBDF14",37,0)
 I $P($G(^DG(43,1,"GL")),"^",2) S MULTI=1 D DIVISION^VAUTOMA S:Y=-1 IBQUIT=1
"RTN","IBDF14",38,0)
 I 'VAUTD S X="" F  S X=$O(VAUTD(X)) Q:'X  S ^TMP($J,"IBCS",$P($G(^DG(40.8,+X,0)),"^"))=""
"RTN","IBDF14",39,0)
 Q
"RTN","IBDF14A")
0^79^B18221276
"RTN","IBDF14A",1,0)
IBDF14A ;ALB/CJM - AICS LIST CLINIC SETUP ; JUL 20,1993
"RTN","IBDF14A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF14A",3,0)
 ;
"RTN","IBDF14A",4,0)
% ; -- entry point from ibdf14
"RTN","IBDF14A",5,0)
 I '$D(VAUTD) G ^IBDF14
"RTN","IBDF14A",6,0)
 D CLINICS,PRINT
"RTN","IBDF14A",7,0)
 Q
"RTN","IBDF14A",8,0)
 ;
"RTN","IBDF14A",9,0)
CLINICS ; -- get a list of clinics with setups defined
"RTN","IBDF14A",10,0)
 S CNT=0
"RTN","IBDF14A",11,0)
 S CLINIC="" F  S CLINIC=$O(^SD(409.95,"B",CLINIC)) Q:'CLINIC  D
"RTN","IBDF14A",12,0)
 .S SETUP=$O(^SD(409.95,"B",CLINIC,""))
"RTN","IBDF14A",13,0)
 .S NAME=$P($G(^SC(CLINIC,0)),"^")
"RTN","IBDF14A",14,0)
 .S DIVIS=$P($G(^SC(CLINIC,0)),"^",15)
"RTN","IBDF14A",15,0)
 .I DIVIS="" S DIVIS=$S(MULTI=0:$$PRIM^VASITE,MULTI=1:"Unknown",1:1)
"RTN","IBDF14A",16,0)
 .I 'VAUTD,'$D(VAUTD(DIVIS)) Q  ;if not all divisions or select div.
"RTN","IBDF14A",17,0)
 .S:+DIVIS DIVIS=$P($G(^DG(40.8,+DIVIS,0)),"^")
"RTN","IBDF14A",18,0)
 .S:NAME]"" ^TMP($J,"IBCS",DIVIS,NAME)=CLINIC_"^"_SETUP,CNT(DIVIS)=$G(CNT(DIVIS))+1
"RTN","IBDF14A",19,0)
 Q
"RTN","IBDF14A",20,0)
 ;
"RTN","IBDF14A",21,0)
PRINT ; -- Main print driver for output
"RTN","IBDF14A",22,0)
 W:$E(IOST,1,2)="C-" @IOF
"RTN","IBDF14A",23,0)
 S NEWDIV=0
"RTN","IBDF14A",24,0)
 S DIVIS="" F  S DIVIS=$O(^TMP($J,"IBCS",DIVIS)) Q:DIVIS=""!IBQUIT  S NEWDIV=1 D
"RTN","IBDF14A",25,0)
 .S NAME="" F  S NAME=$O(^TMP($J,"IBCS",DIVIS,NAME)) Q:NAME=""!IBQUIT  S CLINIC=+^(NAME),SETUP=$P(^(NAME),"^",2) D  Q:IBQUIT
"RTN","IBDF14A",26,0)
 ..Q:'SETUP
"RTN","IBDF14A",27,0)
 ..I $G(NEWDIV) D HEADER Q:IBQUIT  W !?9,"Division: ",DIVIS,! S NEWDIV=0
"RTN","IBDF14A",28,0)
 ..I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
"RTN","IBDF14A",29,0)
 ..W !,"Clinic: ",NAME I '$$ACLN^IBDFCNOF(CLINIC) W "    (Clinic Currently Inactive)"
"RTN","IBDF14A",30,0)
 ..D FORMS Q:IBQUIT
"RTN","IBDF14A",31,0)
 ..D REPORTS Q:IBQUIT
"RTN","IBDF14A",32,0)
 ..D EXCLUDE Q:IBQUIT
"RTN","IBDF14A",33,0)
 ..W !
"RTN","IBDF14A",34,0)
 .I 'VAUTD,$G(CNT(DIVIS))<1 D HEADER W !,"No clinics found for division '",DIVIS,"'",!
"RTN","IBDF14A",35,0)
 I $E(IOST,1,2)="C-",'IBQUIT D PAUSE
"RTN","IBDF14A",36,0)
 Q
"RTN","IBDF14A",37,0)
 ;
"RTN","IBDF14A",38,0)
FORMS ; -- prints the clinic's encounter forms to the report
"RTN","IBDF14A",39,0)
 S NODE=$G(^SD(409.95,SETUP,0))
"RTN","IBDF14A",40,0)
 I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
"RTN","IBDF14A",41,0)
 S FORM=$P(NODE,"^",2) I FORM W !,?5,"BASIC DEFAULT FORM:  ..........................",$P($G(^IBE(357,FORM,0)),"^")
"RTN","IBDF14A",42,0)
 S FORM=$P(NODE,"^",5) I FORM W !,?5,"FORM WITH NO PRE-PRINTED PATIENT DATA:  .......",$P($G(^IBE(357,FORM,0)),"^")
"RTN","IBDF14A",43,0)
 I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
"RTN","IBDF14A",44,0)
 S FORM=$P(NODE,"^",3) I FORM W !,?5,"SUPPLEMENTAL FORM - PATIENT WITH PRIOR VISITS: ",$P($G(^IBE(357,FORM,0)),"^")
"RTN","IBDF14A",45,0)
 I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
"RTN","IBDF14A",46,0)
 S FORM=$P(NODE,"^",4) I FORM W !,?5,"SUPPLEMENTAL FORM - FIRST TIME PATIENT:  ......",$P($G(^IBE(357,FORM,0)),"^")
"RTN","IBDF14A",47,0)
 I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
"RTN","IBDF14A",48,0)
 S FORM=$P(NODE,"^",6) I FORM W !,?5,"SUPPLEMENTAL FORM - ALL PATIENTS:  ............",$P($G(^IBE(357,FORM,0)),"^")
"RTN","IBDF14A",49,0)
 I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
"RTN","IBDF14A",50,0)
 S FORM=$P(NODE,"^",8) I FORM W !,?5,"SUPPLEMENTAL FORM - ALL PATIENTS:  ............",$P($G(^IBE(357,FORM,0)),"^")
"RTN","IBDF14A",51,0)
 I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
"RTN","IBDF14A",52,0)
 S FORM=$P(NODE,"^",9) I FORM W !,?5,"SUPPLEMENTAL FORM - ALL PATIENTS:  ............",$P($G(^IBE(357,FORM,0)),"^")
"RTN","IBDF14A",53,0)
 I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
"RTN","IBDF14A",54,0)
 S FORM=$P(NODE,"^",7) I FORM W !,?5,"RESERVED FOR FUTURE USE:  .....................",$P($G(^IBE(357,FORM,0)),"^")
"RTN","IBDF14A",55,0)
 Q
"RTN","IBDF14A",56,0)
 ;
"RTN","IBDF14A",57,0)
REPORTS ; -- prints the clinic's reports
"RTN","IBDF14A",58,0)
 Q:'$O(^SD(409.95,SETUP,1,0))
"RTN","IBDF14A",59,0)
 I ($Y>(IOSL-5)) D HEADER Q:IBQUIT
"RTN","IBDF14A",60,0)
 W !!,?5,"REPORTS",?50,"PRINT CONDITION",!,?5,"=======",?50,"==============="
"RTN","IBDF14A",61,0)
 S REPORT=0 F  S REPORT=$O(^SD(409.95,SETUP,1,REPORT)) Q:'REPORT  D  Q:IBQUIT
"RTN","IBDF14A",62,0)
 .I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
"RTN","IBDF14A",63,0)
 .S NODE=$G(^SD(409.95,SETUP,1,REPORT,0))
"RTN","IBDF14A",64,0)
 .S INTRFACE=$P(NODE,"^"),COND=$P(NODE,"^",2)
"RTN","IBDF14A",65,0)
 .I INTRFACE,COND S INTRFACE=$P($G(^IBE(357.6,INTRFACE,0)),"^"),COND=$P($G(^IBE(357.92,COND,0)),"^") W:INTRFACE]"" !,?5,INTRFACE,?50,COND
"RTN","IBDF14A",66,0)
 Q
"RTN","IBDF14A",67,0)
 ;
"RTN","IBDF14A",68,0)
EXCLUDE ; -- prints the division reports excluded from clinic
"RTN","IBDF14A",69,0)
 Q:'$O(^SD(409.95,SETUP,2,0))
"RTN","IBDF14A",70,0)
 I ($Y>(IOSL-5)) D HEADER Q:IBQUIT
"RTN","IBDF14A",71,0)
 W !!,?5,"EXCLUDED REPORTS",!,?5,"================"
"RTN","IBDF14A",72,0)
 S REPORT=0 F  S REPORT=$O(^SD(409.95,SETUP,2,REPORT)) Q:'REPORT  D  Q:IBQUIT
"RTN","IBDF14A",73,0)
 .I ($Y>(IOSL-3)) D HEADER Q:IBQUIT
"RTN","IBDF14A",74,0)
 .S NODE=$G(^SD(409.95,SETUP,2,REPORT,0))
"RTN","IBDF14A",75,0)
 .S INTRFACE=$P(NODE,"^")
"RTN","IBDF14A",76,0)
 .I INTRFACE S INTRFACE=$P($G(^IBE(357.6,INTRFACE,0)),"^") W:INTRFACE]"" !,?5,INTRFACE
"RTN","IBDF14A",77,0)
 Q
"RTN","IBDF14A",78,0)
 ;
"RTN","IBDF14A",79,0)
HEADER ; -- writes the report header
"RTN","IBDF14A",80,0)
 I $E(IOST,1,2)="C-",$Y>1,PAGE>1 D PAUSE Q:IBQUIT
"RTN","IBDF14A",81,0)
 I PAGE>1 W @IOF
"RTN","IBDF14A",82,0)
 W !,"AICS Print Manager Clinic Setup Report",?IOM-32,IBHDT,"   PAGE ",PAGE
"RTN","IBDF14A",83,0)
 W !,"For Division: ",DIVIS
"RTN","IBDF14A",84,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBDF14A",85,0)
 S PAGE=PAGE+1
"RTN","IBDF14A",86,0)
 Q
"RTN","IBDF14A",87,0)
 ;
"RTN","IBDF14A",88,0)
PAUSE ; -- hold screen
"RTN","IBDF14A",89,0)
 N DIR,X,Y
"RTN","IBDF14A",90,0)
 F  Q:$Y>(IOSL-2)  W !
"RTN","IBDF14A",91,0)
 S DIR(0)="E" D ^DIR S IBQUIT=$S(+Y:0,1:1)
"RTN","IBDF14A",92,0)
 Q
"RTN","IBDF15")
0^80^B4135551
"RTN","IBDF15",1,0)
IBDF15 ;ALB/CJM - AICS FORM USE BY DIVISION/CLINIC ; JUL 20,1993
"RTN","IBDF15",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF15",3,0)
 ;
"RTN","IBDF15",4,0)
FORMUSE ; -- prints for each encounter form the clinics using it
"RTN","IBDF15",5,0)
 ;
"RTN","IBDF15",6,0)
% N FORM,FORMNAM,CLINIC,NODE,PAGE,IBQUIT,IBHDT,X,Y,CLNAME,DIVIS,DIVNAM,NEWDIV,VAUTD,MULTI
"RTN","IBDF15",7,0)
 S IBQUIT=0
"RTN","IBDF15",8,0)
 W !!,"AICS List of Clinics Using Encounter Forms",!!
"RTN","IBDF15",9,0)
 D DIVIS G:IBQUIT EXIT
"RTN","IBDF15",10,0)
 D DEVICE G:IBQUIT EXIT
"RTN","IBDF15",11,0)
 D DQ G EXIT
"RTN","IBDF15",12,0)
 Q
"RTN","IBDF15",13,0)
 ;
"RTN","IBDF15",14,0)
EXIT ; -- exit routine
"RTN","IBDF15",15,0)
 K ^TMP($J,"IBDCS"),^TMP($J,"IBDCN"),^TMP($J,"IBDCL")
"RTN","IBDF15",16,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBDF15",17,0)
 D ^%ZISC
"RTN","IBDF15",18,0)
 Q
"RTN","IBDF15",19,0)
 ;
"RTN","IBDF15",20,0)
DQ ; -- entry point from task man
"RTN","IBDF15",21,0)
 K ^TMP($J,"IBDCS"),^TMP($J,"IBDCN"),^TMP($J,"IBDCL")
"RTN","IBDF15",22,0)
 S IBQUIT=0,PAGE=1
"RTN","IBDF15",23,0)
 S IBHDT=$$HTE^XLFDT($H,1)
"RTN","IBDF15",24,0)
 D PRINT^IBDF15A
"RTN","IBDF15",25,0)
 Q
"RTN","IBDF15",26,0)
 ;
"RTN","IBDF15",27,0)
DEVICE ; -- select device
"RTN","IBDF15",28,0)
 S %ZIS="MQ" D ^%ZIS I POP S IBQUIT=1 Q
"RTN","IBDF15",29,0)
 I $D(IO("Q")) S ZTRTN="DQ^IBDF15",ZTDESC="REPORT OF ENCOUNTER FORMS USED BY CLINICS",ZTSAVE("VA*")="",ZTSAVE("MULTI")="" D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED") D HOME^%ZIS S IBQUIT=1 Q
"RTN","IBDF15",30,0)
 U IO
"RTN","IBDF15",31,0)
 Q
"RTN","IBDF15",32,0)
 ;
"RTN","IBDF15",33,0)
DIVIS ; -- SETUP DIVISION
"RTN","IBDF15",34,0)
 N X,Y S VAUTD=1,MULTI=0
"RTN","IBDF15",35,0)
 I $P($G(^DG(43,1,"GL")),"^",2) S MULTI=1 D DIVISION^VAUTOMA S:Y=-1 IBQUIT=1
"RTN","IBDF15",36,0)
 I 'VAUTD S X="" F  S X=$O(VAUTD(X)) Q:'X  S ^TMP($J,"IBDCS",$P($G(^DG(40.8,+X,0)),"^"))=""
"RTN","IBDF15",37,0)
 Q
"RTN","IBDF15A")
0^81^B22820339
"RTN","IBDF15A",1,0)
IBDF15A ;ALB/CJM - AICS FORM USE BY DIVISION/CLINIC ; JUL 20,1993
"RTN","IBDF15A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF15A",3,0)
 ;
"RTN","IBDF15A",4,0)
 ; -- prints for each encounter form the clinics using it
"RTN","IBDF15A",5,0)
 ;
"RTN","IBDF15A",6,0)
PRINT ; -- Main print driver
"RTN","IBDF15A",7,0)
 W:$E(IOST,1,2)="C-" @IOF
"RTN","IBDF15A",8,0)
 S FORMNAM="" F  S FORMNAM=$O(^IBE(357,"B",FORMNAM)) Q:FORMNAM=""  S FORM=$O(^IBE(357,"B",FORMNAM,0)) Q:'FORM  D  Q:IBQUIT
"RTN","IBDF15A",9,0)
 .Q:$P($G(^IBE(357,FORM,0)),"^",7)  ;exclude toolkit forms
"RTN","IBDF15A",10,0)
 .D CLINIC(FORM,FORMNAM)
"RTN","IBDF15A",11,0)
 D LIST
"RTN","IBDF15A",12,0)
 I $E(IOST,1,2)="C-",'IBQUIT D PAUSE
"RTN","IBDF15A",13,0)
 Q
"RTN","IBDF15A",14,0)
 ;
"RTN","IBDF15A",15,0)
CLINIC(FORM,FORMNAM) ;
"RTN","IBDF15A",16,0)
 ; -- finds the list of clinics using FORM
"RTN","IBDF15A",17,0)
 ;    ^TMP($J,"IBDCS",0) is number of clinics found
"RTN","IBDF15A",18,0)
 ;    ^TMP($J,"IBDCS",divname, div pointer, form name, form pointer,
"RTN","IBDF15A",19,0)
 ;                 clinic name)=clinic pointer := is list of clinics
"RTN","IBDF15A",20,0)
 ;
"RTN","IBDF15A",21,0)
 N CLINIC,SETUP,IDX,CLNAME,DIVIS,DIVNAM,CNT
"RTN","IBDF15A",22,0)
 F IDX="C","D","E","F","G","H","I","J" D
"RTN","IBDF15A",23,0)
 .S SETUP="" F  S SETUP=$O(^SD(409.95,IDX,FORM,SETUP)) Q:'SETUP  D
"RTN","IBDF15A",24,0)
 ..S CLINIC=$P($G(^SD(409.95,SETUP,0)),"^",1)
"RTN","IBDF15A",25,0)
 ..Q:'CLINIC
"RTN","IBDF15A",26,0)
 ..S CLNAME=$P($G(^SC(CLINIC,0)),"^",1)
"RTN","IBDF15A",27,0)
 ..Q:CLNAME=""
"RTN","IBDF15A",28,0)
 ..S DIVIS=$P($G(^SC(CLINIC,0)),"^",15)
"RTN","IBDF15A",29,0)
 ..I DIVIS="" S DIVIS=$S(MULTI=0:$$PRIM^VASITE,1:"Unknown")
"RTN","IBDF15A",30,0)
 ..S DIVNAM=$P($G(^DG(40.8,+DIVIS,0)),"^")
"RTN","IBDF15A",31,0)
 ..S:DIVNAM="" DIVNAM="Unknown"
"RTN","IBDF15A",32,0)
 ..S CNT=$G(CNT)+1
"RTN","IBDF15A",33,0)
 ..S ^TMP($J,"IBDCS",DIVNAM,+$G(DIVIS),FORMNAM,FORM,CLNAME)=CLINIC_"^"_IDX
"RTN","IBDF15A",34,0)
 ..S ^TMP($J,"IBDCS",DIVNAM,+$G(DIVIS))=$G(^TMP($J,"IBDCS",DIVNAM,+$G(DIVIS)))+1
"RTN","IBDF15A",35,0)
 S:$G(CNT)<1 ^TMP($J,"IBDCN",FORMNAM,FORM)="" ;forms not in use
"RTN","IBDF15A",36,0)
 Q
"RTN","IBDF15A",37,0)
 ;
"RTN","IBDF15A",38,0)
LIST ; -- lists the clinics using FORM
"RTN","IBDF15A",39,0)
 N DIVNAM,DIVIS,FORMNAM,FORM,CLNAME,CLINIC,NEWDIV,IBDONE,IDX
"RTN","IBDF15A",40,0)
 ;
"RTN","IBDF15A",41,0)
 ; -- list forms not in use
"RTN","IBDF15A",42,0)
 S DIVNAM="",NEWDIV=0
"RTN","IBDF15A",43,0)
 F  S DIVNAM=$O(^TMP($J,"IBDCS",DIVNAM)) Q:DIVNAM=""!(IBQUIT)  S DIVIS=+$O(^TMP($J,"IBDCS",DIVNAM,"")) I VAUTD=1!($D(VAUTD(DIVIS))) D
"RTN","IBDF15A",44,0)
 .;
"RTN","IBDF15A",45,0)
 .S NEWDIV=1
"RTN","IBDF15A",46,0)
 .K IBDONE
"RTN","IBDF15A",47,0)
 .S FORMNAM=""
"RTN","IBDF15A",48,0)
 .F  S FORMNAM=$O(^TMP($J,"IBDCS",DIVNAM,DIVIS,FORMNAM)) Q:FORMNAM=""!(IBQUIT)  S FORM=$O(^TMP($J,"IBDCS",DIVNAM,DIVIS,FORMNAM,0)) D
"RTN","IBDF15A",49,0)
 ..;
"RTN","IBDF15A",50,0)
 ..S CLNAME=""
"RTN","IBDF15A",51,0)
 ..F  S CLNAME=$O(^TMP($J,"IBDCS",DIVNAM,DIVIS,FORMNAM,FORM,CLNAME)) Q:CLNAME=""!(IBQUIT)  S CLINIC=+^(CLNAME),IDX=$P(^(CLNAME),"^",2) I '$D(IBDONE(FORM)) W ! D LINEONE,ALL(FORMNAM,CLNAME,DIVNAM)
"RTN","IBDF15A",52,0)
 ;
"RTN","IBDF15A",53,0)
 ; -- list forms not in use
"RTN","IBDF15A",54,0)
 S FORMNAM="",NEWDIV=1,DIVNAM="FORMS NOT IN USE"
"RTN","IBDF15A",55,0)
 F  S FORMNAM=$O(^TMP($J,"IBDCN",FORMNAM)) Q:FORMNAM=""!(IBQUIT)  S FORM=$O(^TMP($J,"IBDCN",FORMNAM,0)) D LINETWO
"RTN","IBDF15A",56,0)
 Q
"RTN","IBDF15A",57,0)
 ;
"RTN","IBDF15A",58,0)
LINEONE ; -- print on report header, lines, etc.
"RTN","IBDF15A",59,0)
 ;
"RTN","IBDF15A",60,0)
 I NEWDIV D HEADER Q:IBQUIT  W !,?10,"Division: ",DIVNAM S NEWDIV=0
"RTN","IBDF15A",61,0)
 I $Y>(IOSL-3) D HEADER Q:IBQUIT
"RTN","IBDF15A",62,0)
 W !,FORMNAM,?32,$E(CLNAME,1,25),?59,$E(DIVNAM,1,20),?81,$$TYPE(IDX)
"RTN","IBDF15A",63,0)
 I '$$ACLN^IBDFCNOF(CLINIC) W ?100,"  (Clinic Currently Inactive)"
"RTN","IBDF15A",64,0)
 S IBDONE(FORM)=""
"RTN","IBDF15A",65,0)
 Q
"RTN","IBDF15A",66,0)
 ;
"RTN","IBDF15A",67,0)
LINETWO ; -- print lines for forms not in use
"RTN","IBDF15A",68,0)
 I NEWDIV D HEADER Q:IBQUIT  S NEWDIV=0
"RTN","IBDF15A",69,0)
 I $Y>(IOSL-3) D HEADER Q:IBQUIT
"RTN","IBDF15A",70,0)
 W !,FORMNAM,?32,"** NOT IN USE **"
"RTN","IBDF15A",71,0)
 Q
"RTN","IBDF15A",72,0)
 ;
"RTN","IBDF15A",73,0)
LINETHR ; -- print lines for clinics in other divisions
"RTN","IBDF15A",74,0)
 I $Y>(IOSL-3) D HEADER Q:IBQUIT
"RTN","IBDF15A",75,0)
 W !,?32,CLNAME,?59,$E(DIVNAM,1,20),?81,$$TYPE(IDX)
"RTN","IBDF15A",76,0)
 I '$$ACLN^IBDFCNOF(CLINIC) W ?100,"  (Clinic Currently Inactive)"
"RTN","IBDF15A",77,0)
 Q
"RTN","IBDF15A",78,0)
 ;
"RTN","IBDF15A",79,0)
ALL(FORMNAM,CL1,DV1) ;
"RTN","IBDF15A",80,0)
 ; -- find all clinics using for irregardless of division
"RTN","IBDF15A",81,0)
 ;    stored in ^TMP($J,"IBDCS",DIVNAM,DIVIS,FORMNAM,FORM,CLNAME)
"RTN","IBDF15A",82,0)
 ;
"RTN","IBDF15A",83,0)
 N FORM,CLNAME,DIVNAM,DIVIS
"RTN","IBDF15A",84,0)
 S DIVNAM=""
"RTN","IBDF15A",85,0)
 F  S DIVNAM=$O(^TMP($J,"IBDCS",DIVNAM)) Q:DIVNAM=""!(IBQUIT)  S DIVIS=+$O(^TMP($J,"IBDCS",DIVNAM,"")) I VAUTD=1!($D(VAUTD(DIVIS))) D
"RTN","IBDF15A",86,0)
 .S FORM=+$O(^TMP($J,"IBDCS",DIVNAM,DIVIS,FORMNAM,0))
"RTN","IBDF15A",87,0)
 .S CLNAME="" F  S CLNAME=$O(^TMP($J,"IBDCS",DIVNAM,DIVIS,FORMNAM,FORM,CLNAME)) Q:CLNAME=""!(IBQUIT)  S CLINIC=+^(CLNAME) D
"RTN","IBDF15A",88,0)
 ..Q:CL1=CLNAME&(DV1=DIVNAM)
"RTN","IBDF15A",89,0)
 ..D LINETHR
"RTN","IBDF15A",90,0)
 Q
"RTN","IBDF15A",91,0)
 ;
"RTN","IBDF15A",92,0)
 ;S FORM=$O(^TMP($J,"IBDCL",FORMNAM,0))
"RTN","IBDF15A",93,0)
 ;S CLNAME="" F  S CLNAME=$O(^TMP($J,"IBDCL",FORMNAM,FORM,CLNAME)) Q:CLNAME=""!(IBQUIT)  D
"RTN","IBDF15A",94,0)
 ;.S DIVNAM="" F  S DIVNAM=$O(^TMP($J,"IBDCL",FORMNAM,FORM,CLNAME,DIVNAM)) Q:DIVNAM=""!(IBQUIT)  D
"RTN","IBDF15A",95,0)
 ;..Q:CL1=CLNAME&(DV1=DIVNAM)
"RTN","IBDF15A",96,0)
 ;..D LINETHR
"RTN","IBDF15A",97,0)
 Q
"RTN","IBDF15A",98,0)
 ;
"RTN","IBDF15A",99,0)
HEADER ; -- writes the report header
"RTN","IBDF15A",100,0)
 I $E(IOST,1,2)="C-",$Y>1,PAGE>1 D PAUSE Q:IBQUIT
"RTN","IBDF15A",101,0)
 I PAGE>1 W @IOF
"RTN","IBDF15A",102,0)
 W !,"List of Encounter Forms and their Use by Clinics",?IOM-30,IBHDT,"  PAGE ",PAGE
"RTN","IBDF15A",103,0)
 W !,"For Division: ",$G(DIVNAM)
"RTN","IBDF15A",104,0)
 W !,"FORM NAME",?32,"CLINIC",?59,"DIVISION",?81,"FORM USAGE"
"RTN","IBDF15A",105,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBDF15A",106,0)
 S PAGE=PAGE+1
"RTN","IBDF15A",107,0)
 Q
"RTN","IBDF15A",108,0)
 ;
"RTN","IBDF15A",109,0)
PAUSE ; -- hold screen
"RTN","IBDF15A",110,0)
 N DIR,X,Y
"RTN","IBDF15A",111,0)
 F  Q:$Y>(IOSL-2)  W !
"RTN","IBDF15A",112,0)
 S DIR(0)="E" D ^DIR S IBQUIT=$S(+Y:0,1:1)
"RTN","IBDF15A",113,0)
 Q
"RTN","IBDF15A",114,0)
 ;
"RTN","IBDF15A",115,0)
TYPE(IDX) ;
"RTN","IBDF15A",116,0)
 ; -- type of form
"RTN","IBDF15A",117,0)
 ;    input cross reference from print Manager Clinic Setups (409.95)
"RTN","IBDF15A",118,0)
 ;    output name of type of form
"RTN","IBDF15A",119,0)
 ;    IDX="C","D","E","F","G","H","I","J"
"RTN","IBDF15A",120,0)
 ;
"RTN","IBDF15A",121,0)
 N X
"RTN","IBDF15A",122,0)
 S IDX=$E(IDX,1)
"RTN","IBDF15A",123,0)
 S X="" I IDX="" G TYPEQ
"RTN","IBDF15A",124,0)
 S X=$S(IDX="C":"Basic Form",IDX="D":"Supplmntl form - Establshed Pt.",IDX="E":"Supplmntl Form - First Visit",IDX="F":"Form w/o Patient Data",IDX="G":"Supplmntl Form #1",1:"")
"RTN","IBDF15A",125,0)
 I X="" S X=$S(IDX="H":"Reserved",IDX="I":"Supplmntl Form #2",IDX="J":"Supplmntl Form #3",1:"")
"RTN","IBDF15A",126,0)
TYPEQ   Q X
"RTN","IBDF16")
0^82^B15361550
"RTN","IBDF16",1,0)
IBDF16 ;ALB/CJM - ENCOUNTER FORM - (edit Package Interfaces, Marking Areas) ;Jul 23,1993
"RTN","IBDF16",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF16",3,0)
 ;
"RTN","IBDF16",4,0)
EDIT ;allows the user to create/edit/delete Package Interaces of type 
"RTN","IBDF16",5,0)
 ;OUTPUT or SELECTION
"RTN","IBDF16",6,0)
 ;does not allow Package Interfaces that are part of the toolkit
"RTN","IBDF16",7,0)
 N IBTYPE S IBTYPE=""
"RTN","IBDF16",8,0)
 W @IOF
"RTN","IBDF16",9,0)
 D WARNING,PAUSE^IBDFU5
"RTN","IBDF16",10,0)
 W @IOF
"RTN","IBDF16",11,0)
 D TYPE
"RTN","IBDF16",12,0)
 D:IBTYPE INTRFACE
"RTN","IBDF16",13,0)
 Q
"RTN","IBDF16",14,0)
TYPE ;asks the user what type of interface he wants to edit
"RTN","IBDF16",15,0)
 W !!,"OUTPUT interfaces are used to obtain data from other packages that will be",!,"displayed to DATA FIELDS."
"RTN","IBDF16",16,0)
 W !!,"SELECTION interfaces are used to obtain data from other packages that will be",!,"displayed to SELECTION LISTS."
"RTN","IBDF16",17,0)
 K DIR S DIR(0)="S^1:OUTPUT;2:SELECTION;"
"RTN","IBDF16",18,0)
 S DIR("A")="SELECT THE TYPE OF PACKAGE INTERFACE TO EDIT"
"RTN","IBDF16",19,0)
 S DIR("B")=1
"RTN","IBDF16",20,0)
 D ^DIR K DIR
"RTN","IBDF16",21,0)
 Q:$D(DIRUT)
"RTN","IBDF16",22,0)
 Q:'Y
"RTN","IBDF16",23,0)
 S IBTYPE=Y+1
"RTN","IBDF16",24,0)
 Q
"RTN","IBDF16",25,0)
INTRFACE ;edit package interface
"RTN","IBDF16",26,0)
 ;IBTYPE=3 if type=selection interface
"RTN","IBDF16",27,0)
 ;IBTYPE=2 if type=output interface
"RTN","IBDF16",28,0)
 N REPORT,IBDELETE,IBNEW,INTRFACE,IBACTION,DLAYGO
"RTN","IBDF16",29,0)
 I $G(IBTYPE)'=2,$G(IBTYPE)'=3 Q
"RTN","IBDF16",30,0)
 S IBDELETE=1
"RTN","IBDF16",31,0)
 K DIC S DIC=357.6,DIC(0)="AELMQ",DIC("S")="I $P($G(^(0)),U,6)="_IBTYPE_",'$P($G(^(0)),U,12)"
"RTN","IBDF16",32,0)
 S D="E^D^B"
"RTN","IBDF16",33,0)
 S DIC("DR")="06////"_IBTYPE
"RTN","IBDF16",34,0)
 S DIC("A")="Select a PACKAGE INTERFACE: "
"RTN","IBDF16",35,0)
 S DLAYGO=357.6
"RTN","IBDF16",36,0)
 D MIX^DIC1 K DIC,D,DA
"RTN","IBDF16",37,0)
 Q:+Y<0
"RTN","IBDF16",38,0)
 S INTRFACE=+Y,IBNEW=$P(Y,"^",3)
"RTN","IBDF16",39,0)
 S IBDELETE=$S(IBNEW:1,1:0)
"RTN","IBDF16",40,0)
 S DA=INTRFACE
"RTN","IBDF16",41,0)
 K DIE,DR S DIE=357.6,DR="[IBDF EDIT OUTPUT/SELECTION RTN]",DIE("NO^")="BACKOUTOK"
"RTN","IBDF16",42,0)
 D ^DIE K DIE,DR,DA
"RTN","IBDF16",43,0)
 I IBDELETE K DA S DIK="^IBE(357.6,",DA=INTRFACE D ^DIK K DIK,DA
"RTN","IBDF16",44,0)
 Q
"RTN","IBDF16",45,0)
LOOKUP ;additional help for the USER LOOKUP field
"RTN","IBDF16",46,0)
 W !!,"You can enter a list of words with which to index this interface. You will",!,"then be able to look up this interface by entering any word on the list."
"RTN","IBDF16",47,0)
 W !,"Each word should be at least 3 characters long, and words must be separated",!,"by a space.",!
"RTN","IBDF16",48,0)
 Q
"RTN","IBDF16",49,0)
WARNING ;warns the user to lookup in the technical doc how to write Package Interfaces
"RTN","IBDF16",50,0)
 W !!,"You can write your own Package Interfaces to obtain data not available"
"RTN","IBDF16",51,0)
 W !,"through the Toolkit.  Before you do so, however, please consult the technical",!,"documentation for the guidelines that must be followed.  In particular, you"
"RTN","IBDF16",52,0)
 W !,"must know where the data should be placed and what format must be used.",!
"RTN","IBDF16",53,0)
 Q
"RTN","IBDF16",54,0)
MARKING ;allows the user to create/edit/delete marking areas not in the toolkit
"RTN","IBDF16",55,0)
 N MARK,DLAYGO
"RTN","IBDF16",56,0)
 W @IOF,!!!!!
"RTN","IBDF16",57,0)
 W "You can create your own MARKING AREAS to supplement those that come with the",!,"toolkit. Marking areas are the areas on a selection list that the user",!,"marks to indicate selections from the list.",!!!!!
"RTN","IBDF16",58,0)
 D PAUSE^IBDFU5
"RTN","IBDF16",59,0)
 W @IOF
"RTN","IBDF16",60,0)
 K DIC S DIC=357.91,DIC(0)="AELMQ",DIC("S")="I '$P($G(^(0)),U,3)"
"RTN","IBDF16",61,0)
 ;S DIC("A")="Select "_$S(IBTYPE=2:"an output interface",3:"a selection interface")_": "
"RTN","IBDF16",62,0)
 S DLAYGO=357.91
"RTN","IBDF16",63,0)
 D ^DIC K DIC,D,DA
"RTN","IBDF16",64,0)
 Q:+Y<0
"RTN","IBDF16",65,0)
 S MARK=+Y,IBNEW=$P(Y,"^",3)
"RTN","IBDF16",66,0)
 S IBDELETE=$S(IBNEW:1,1:0)
"RTN","IBDF16",67,0)
 S DA=MARK
"RTN","IBDF16",68,0)
 K DIE,DR S DIE=357.91,DR="[IBDF EDIT MARKING AREA]",DIE("NO^")="BACKOUTOK"
"RTN","IBDF16",69,0)
 D ^DIE K DIE,DR,DA
"RTN","IBDF16",70,0)
 I IBDELETE K DA S DIK="^IBE(357.91,",DA=MARK D ^DIK K DIK,DA
"RTN","IBDF16",71,0)
 I IBNEW,'IBDELETE W !!,"New marking area created!"
"RTN","IBDF16",72,0)
 Q
"RTN","IBDF17")
0^83^B19311881
"RTN","IBDF17",1,0)
IBDF17 ;ALB/CJM - ENCOUNTER FORM - COPY A CPT CHECK-OFF SHEET INTO A FORM ;24SEP93
"RTN","IBDF17",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF17",3,0)
 ;
"RTN","IBDF17",4,0)
 ;Allows the user to choose a form to copy to, and a CPT check-off sheet
"RTN","IBDF17",5,0)
 ;to copy from, then creates a new block and copies the CPT codes to it
"RTN","IBDF17",6,0)
 ;
"RTN","IBDF17",7,0)
 N FORM,LIST,BLOCK,SHEET
"RTN","IBDF17",8,0)
 W !!,"Select the encounter form you want to copy CPT codes to!",!
"RTN","IBDF17",9,0)
 S FORM=$$SLCTFORM^IBDFU4(0)
"RTN","IBDF17",10,0)
 Q:'FORM
"RTN","IBDF17",11,0)
 D FIND(FORM,.BLOCK,.LIST)
"RTN","IBDF17",12,0)
 I 'BLOCK W !,"There is no selection list for CPT codes to copy to!" D PAUSE^IBDFU5 Q
"RTN","IBDF17",13,0)
 ;
"RTN","IBDF17",14,0)
 S SHEET=$$SLCTSHT
"RTN","IBDF17",15,0)
 Q:'SHEET
"RTN","IBDF17",16,0)
 ;
"RTN","IBDF17",17,0)
 ;must delete the compiled version of the block, since it will be changed
"RTN","IBDF17",18,0)
 K ^IBE(357.1,BLOCK,"S"),^("V"),^("B"),^("H")
"RTN","IBDF17",19,0)
 ;
"RTN","IBDF17",20,0)
 D COPY(SHEET,LIST)
"RTN","IBDF17",21,0)
 Q
"RTN","IBDF17",22,0)
 ;
"RTN","IBDF17",23,0)
COPY(SHEET,LIST) ;copies the CPT codes/headers from the sheet to the list
"RTN","IBDF17",24,0)
 ;
"RTN","IBDF17",25,0)
 N HDR,TYPE,NODE
"RTN","IBDF17",26,0)
 ;
"RTN","IBDF17",27,0)
 ;find the subcolumns in LIST to write to
"RTN","IBDF17",28,0)
 D SUBCOLS(.LIST) I 'LIST("CODESC")!'LIST("TEXTSC") W !,"The CPT selection list does not contain a subcolumn for the CPT code or text!" D PAUSE^IBDFU5 Q
"RTN","IBDF17",29,0)
 ;
"RTN","IBDF17",30,0)
 S HDR="" F  S HDR=$O(^IBE(350.71,"G",SHEET,HDR)) Q:'HDR  S NODE=$G(^IBE(350.71,HDR,0)),TYPE=$P(NODE,"^",3)  D:TYPE="S" COPYGRP(HDR,.NODE,.LIST)
"RTN","IBDF17",31,0)
 Q
"RTN","IBDF17",32,0)
 ;
"RTN","IBDF17",33,0)
COPYGRP(HDR,NODE,LIST) ;copies the header contained in NODE to the selection list (LIST)
"RTN","IBDF17",34,0)
 ;
"RTN","IBDF17",35,0)
 N HEADER,ORDER,GROUP,PROC
"RTN","IBDF17",36,0)
 S HEADER=$P(NODE,"^") Q:HEADER=""  S ORDER=$P(NODE,"^",2) Q:'ORDER
"RTN","IBDF17",37,0)
 ;
"RTN","IBDF17",38,0)
 ;copy the group
"RTN","IBDF17",39,0)
 K DIC,DD,D0,DINUM S DIC="^IBE(357.4,",X=HEADER,DIC(0)=""
"RTN","IBDF17",40,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDF17",41,0)
 S GROUP=$S(+Y<0:"",1:+Y)
"RTN","IBDF17",42,0)
 Q:'GROUP
"RTN","IBDF17",43,0)
 S ^IBE(357.4,GROUP,0)=HEADER_"^"_ORDER_"^"_LIST
"RTN","IBDF17",44,0)
 K DIK,DA S DIK="^IBE(357.4,",DA=GROUP
"RTN","IBDF17",45,0)
 D IX1^DIK K DIK,DA
"RTN","IBDF17",46,0)
 ;
"RTN","IBDF17",47,0)
 ;now find all the group's procedures and copy them
"RTN","IBDF17",48,0)
 S PROC=0 F  S PROC=$O(^IBE(350.71,"S",HDR,PROC)) Q:'PROC  D:PROC'=HDR COPYPROC(PROC,.LIST,GROUP)
"RTN","IBDF17",49,0)
 ;
"RTN","IBDF17",50,0)
 W "." ;just to let the use know it's doing something
"RTN","IBDF17",51,0)
 Q
"RTN","IBDF17",52,0)
 ;
"RTN","IBDF17",53,0)
COPYPROC(PROC,LIST,GROUP) ;copies the procedure contained to the selection list and group
"RTN","IBDF17",54,0)
 ;
"RTN","IBDF17",55,0)
 N NODE,TEXT,ORDER,CODE,SLCTN
"RTN","IBDF17",56,0)
 S NODE=$G(^IBE(350.71,PROC,0))
"RTN","IBDF17",57,0)
 ;
"RTN","IBDF17",58,0)
 ;find the CPT code
"RTN","IBDF17",59,0)
 S CODE=$P(NODE,"^",6)
"RTN","IBDF17",60,0)
 Q:'CODE
"RTN","IBDF17",61,0)
 S CODE=$P($G(^SD(409.71,CODE,0)),"^")
"RTN","IBDF17",62,0)
 Q:'CODE
"RTN","IBDF17",63,0)
 S CODE=$P($G(^ICPT(CODE,0)),"^")
"RTN","IBDF17",64,0)
 Q:'CODE
"RTN","IBDF17",65,0)
 ;
"RTN","IBDF17",66,0)
 ;find the text and order for the proc on the sheet
"RTN","IBDF17",67,0)
 S TEXT=$P(NODE,"^") Q:TEXT=""  S ORDER=$P(NODE,"^",2) Q:'ORDER
"RTN","IBDF17",68,0)
 ;
"RTN","IBDF17",69,0)
 ;create the selection
"RTN","IBDF17",70,0)
 K DIC,DD,D0,DINUM S DIC="^IBE(357.3,",X=CODE,DIC(0)=""
"RTN","IBDF17",71,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDF17",72,0)
 S SLCTN=$S(+Y<0:"",1:+Y)
"RTN","IBDF17",73,0)
 Q:'SLCTN
"RTN","IBDF17",74,0)
 ;
"RTN","IBDF17",75,0)
 ;fill in the 0 node
"RTN","IBDF17",76,0)
 S ^IBE(357.3,SLCTN,0)=CODE_"^^"_LIST_"^"_GROUP_"^"_ORDER_"^"
"RTN","IBDF17",77,0)
 ;
"RTN","IBDF17",78,0)
 ;fill in the SUBCOLUM VALUE multiple with the subcolumn values
"RTN","IBDF17",79,0)
 S ^IBE(357.3,SLCTN,1,0)="^357.31IA^2^2"
"RTN","IBDF17",80,0)
 S ^IBE(357.3,SLCTN,1,2,0)=LIST("TEXTSC")_"^"_TEXT
"RTN","IBDF17",81,0)
 S ^IBE(357.3,SLCTN,1,1,0)=LIST("CODESC")_"^"_CODE
"RTN","IBDF17",82,0)
 K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN
"RTN","IBDF17",83,0)
 D IX1^DIK K DIK,DA
"RTN","IBDF17",84,0)
 Q
"RTN","IBDF17",85,0)
 ;
"RTN","IBDF17",86,0)
SUBCOLS(LIST) ;finds the column containing the CPT code and the text description
"RTN","IBDF17",87,0)
 ;LIST is passed by reference
"RTN","IBDF17",88,0)
 S (LIST("CODESC"),LIST("TEXTSC"))=""
"RTN","IBDF17",89,0)
 ;
"RTN","IBDF17",90,0)
 N SC,PIECE,NODE S SC=0
"RTN","IBDF17",91,0)
 ;
"RTN","IBDF17",92,0)
 ;piece 1 of the data returned by the package interface is the code,piece 2 is the description
"RTN","IBDF17",93,0)
 F  S SC=$O(^IBE(357.2,LIST,2,SC)) Q:'SC  S NODE=$G(^IBE(357.2,LIST,2,SC,0)),PIECE=$P(NODE,"^",5) S:PIECE=1 LIST("CODESC")=$P(NODE,"^") S:PIECE=2 LIST("TEXTSC")=$P(NODE,"^") Q:LIST("CODESC")&LIST("TEXTSC")
"RTN","IBDF17",94,0)
 Q
"RTN","IBDF17",95,0)
 ;
"RTN","IBDF17",96,0)
SLCTSHT() ;allows the user to select a CPT check-off sheet
"RTN","IBDF17",97,0)
 K DIC S DIC=350.7,DIC(0)="AEMQ" D ^DIC K DIC
"RTN","IBDF17",98,0)
 I $D(DINUM)!$D(DUOUT)!(Y<0) Q ""
"RTN","IBDF17",99,0)
 Q +Y
"RTN","IBDF17",100,0)
FIND(FORM,BLK,LIST) ;finds the block & list for CPT codes
"RTN","IBDF17",101,0)
 N INTRFACE,BLOCKS,I
"RTN","IBDF17",102,0)
 S (BLK,LIST,BLOCKS,I)=0
"RTN","IBDF17",103,0)
 ;
"RTN","IBDF17",104,0)
 ;find the package interface for selecting CPT codes
"RTN","IBDF17",105,0)
 S INTRFACE=$O(^IBE(357.6,"B","DG SELECT CPT PROCEDURE CODES",0))
"RTN","IBDF17",106,0)
 Q:'INTRFACE
"RTN","IBDF17",107,0)
 ;
"RTN","IBDF17",108,0)
 ;find all of the blocks with CPT lists
"RTN","IBDF17",109,0)
 S BLK="" F  S BLK=$O(^IBE(357.1,"C",FORM,BLK)) Q:'BLK  D
"RTN","IBDF17",110,0)
 .S LIST="" F  S LIST=$O(^IBE(357.2,"C",BLK,LIST)) Q:'LIST  I $P($G(^IBE(357.2,LIST,0)),"^",11)=INTRFACE S BLOCKS=BLOCKS+1,I=I+1,BLOCKS(I)=BLK_"^"_LIST
"RTN","IBDF17",111,0)
 ;
"RTN","IBDF17",112,0)
 ;if count of blocks <2 there is no need to ask the user to choose
"RTN","IBDF17",113,0)
 I BLOCKS<2 S BLK=+$P($G(BLOCKS(1)),"^"),LIST=$P($G(BLOCKS(1)),"^",2) Q
"RTN","IBDF17",114,0)
 ;
"RTN","IBDF17",115,0)
 ;if count>1 the user must choose the block from the array BLOCKS
"RTN","IBDF17",116,0)
 S (BLK,LIST)=0
"RTN","IBDF17",117,0)
 S I=$$CHOOSE(.BLOCKS)
"RTN","IBDF17",118,0)
 S BLK=+$G(BLOCKS(+I)),LIST=+$P($G(BLOCKS(+I)),"^",2)
"RTN","IBDF17",119,0)
 Q
"RTN","IBDF17",120,0)
 ;
"RTN","IBDF17",121,0)
CHOOSE(BLOCKS) ;ask the user to choose
"RTN","IBDF17",122,0)
 ;BLOCKS is an array passed by reference
"RTN","IBDF17",123,0)
 ;
"RTN","IBDF17",124,0)
 N I
"RTN","IBDF17",125,0)
ASK W ! S I=0 F  S I=$O(BLOCKS(I)) Q:'I  W !,I,"  ",$P($G(^IBE(357.1,+BLOCKS(I),0)),"^")
"RTN","IBDF17",126,0)
 W !!,"Select a block to put the CPT codes: (1-",BLOCKS,"): "
"RTN","IBDF17",127,0)
 R I:DTIME
"RTN","IBDF17",128,0)
 Q:'$T 0
"RTN","IBDF17",129,0)
 Q:'$G(I) 0
"RTN","IBDF17",130,0)
 I '$D(BLOCKS(I)) G ASK
"RTN","IBDF17",131,0)
 Q I
"RTN","IBDF18")
0^84^B12592769
"RTN","IBDF18",1,0)
IBDF18 ;A;B/CJM - ENCOUNTER FORM - utilities for Problem List ;15OCT93
"RTN","IBDF18",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF18",3,0)
 ;
"RTN","IBDF18",4,0)
GETFORM() ;allows the user to select an encounter form with a Clinic Common Problem List
"RTN","IBDF18",5,0)
 ;returns <the form ien, or 0 if none selected>^<form name>
"RTN","IBDF18",6,0)
 N FORM,LIST,QUIT,ANS
"RTN","IBDF18",7,0)
 S (LIST,QUIT)=0 F  D  Q:QUIT
"RTN","IBDF18",8,0)
 .S FORM=$$SLCTFORM^IBDFU4(0)
"RTN","IBDF18",9,0)
 .I 'FORM S QUIT=1 Q
"RTN","IBDF18",10,0)
 .D FIND(FORM,0,.LIST,0)
"RTN","IBDF18",11,0)
 .I LIST S QUIT=1 Q
"RTN","IBDF18",12,0)
 .W !,"The form you selected doesn't contain a Clinic Common Problem List!",!,"Do you want to select another form? "
"RTN","IBDF18",13,0)
 .R ANS:DTIME
"RTN","IBDF18",14,0)
 .S:'$T!(ANS="")!(ANS["^")!(ANS["N")!(ANS["n") QUIT=1,FORM=0
"RTN","IBDF18",15,0)
 Q FORM_"^"_$P($G(^IBE(357,FORM,0)),"^")
"RTN","IBDF18",16,0)
 ;
"RTN","IBDF18",17,0)
 ;
"RTN","IBDF18",18,0)
COPYFORM(FORM,ARY) ;creates a list of problem groups and problems found in FORM on the list of clinic common problems
"RTN","IBDF18",19,0)
 ;returns the length of the returned list
"RTN","IBDF18",20,0)
 ;FORM is the ien of an encounter form
"RTN","IBDF18",21,0)
 ;@ARY is the array where the list should be placed
"RTN","IBDF18",22,0)
 ;each problem will have the format 'problem ien^problem text'
"RTN","IBDF18",23,0)
 ;each group will have the format '^header text to display (could be null)'
"RTN","IBDF18",24,0)
 ;following each group will be the problems on it
"RTN","IBDF18",25,0)
 ;
"RTN","IBDF18",26,0)
 ;the ruturned list will look like this:
"RTN","IBDF18",27,0)
 ;@ARY@(1)=^group header
"RTN","IBDF18",28,0)
 ;@ARY@(2)=problem ien^problem text
"RTN","IBDF18",29,0)
 ;@ARY@(3)=problem ien^problem text
"RTN","IBDF18",30,0)
 ;
"RTN","IBDF18",31,0)
 ;
"RTN","IBDF18",32,0)
 ;@ARY@(k)=^next group header
"RTN","IBDF18",33,0)
 ;@ARY@(k+1)=problem ien^problem text
"RTN","IBDF18",34,0)
 ;....
"RTN","IBDF18",35,0)
 ;
"RTN","IBDF18",36,0)
 Q:'$G(FORM) 0
"RTN","IBDF18",37,0)
 Q:'$L($G(ARY)) 0
"RTN","IBDF18",38,0)
 N BLOCK,LIST,INTRFACE,COUNT
"RTN","IBDF18",39,0)
 S (BLOCK,LIST,INTRFACE,COUNT)=0
"RTN","IBDF18",40,0)
 F  D FIND(FORM,.BLOCK,.LIST,.INTRFACE) Q:'LIST  D COPYLIST(LIST,ARY,.COUNT)
"RTN","IBDF18",41,0)
 Q COUNT
"RTN","IBDF18",42,0)
 ;
"RTN","IBDF18",43,0)
COPYLIST(LIST,ARY,COUNT) ;copies the entries from LIST to @ARY, starting subscript at COUNT+1
"RTN","IBDF18",44,0)
 ;
"RTN","IBDF18",45,0)
 N SLCTN,SUBCOL,TEXT,IEN,NODE,TSUBCOL,NOTREAL,NODE,GROUP,ORDER,HDR
"RTN","IBDF18",46,0)
 ;
"RTN","IBDF18",47,0)
 D SUBCOL(LIST,.TSUBCOL) ;find the subcolumn containing the text
"RTN","IBDF18",48,0)
 ;don't bother returning list of problems if there is no subcolumn containing the problem text
"RTN","IBDF18",49,0)
 Q:'$G(TSUBCOL)
"RTN","IBDF18",50,0)
 ;
"RTN","IBDF18",51,0)
 S GROUP=0 F  S GROUP=$O(^IBE(357.3,"APO",LIST,GROUP)) Q:'GROUP  D
"RTN","IBDF18",52,0)
 .S HDR=$P($G(^IBE(357.4,GROUP,0)),"^") I HDR="BLANK" S HDR=""
"RTN","IBDF18",53,0)
 .S COUNT=COUNT+1,@ARY@(COUNT)="^"_HDR
"RTN","IBDF18",54,0)
 .S ORDER="" F  S ORDER=$O(^IBE(357.3,"APO",LIST,GROUP,ORDER)) Q:ORDER=""  S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"APO",LIST,GROUP,ORDER,SLCTN)) Q:'SLCTN  D
"RTN","IBDF18",55,0)
 ..S NODE=$G(^IBE(357.3,SLCTN,0)),IEN=$P(NODE,"^"),NOTREAL=$P(NODE,"^",2)
"RTN","IBDF18",56,0)
 ..Q:'IEN!(NOTREAL)
"RTN","IBDF18",57,0)
 ..S SUBCOL=$O(^IBE(357.3,SLCTN,1,"B",TSUBCOL,0)) Q:'SUBCOL  S NODE=$G(^IBE(357.3,SLCTN,1,SUBCOL,0)) S:$P(NODE,"^")=TSUBCOL TEXT=$P(NODE,"^",2) I $L(TEXT) S COUNT=COUNT+1,@ARY@(COUNT)=IEN_"^"_TEXT Q
"RTN","IBDF18",58,0)
 Q
"RTN","IBDF18",59,0)
 ;
"RTN","IBDF18",60,0)
 ;
"RTN","IBDF18",61,0)
SUBCOL(LIST,TSUBCOL) ;finds the subcolumn containing the text
"RTN","IBDF18",62,0)
 ;TSUBCOL should be passed by reference - used to return the subcolumn
"RTN","IBDF18",63,0)
 ;LIST is the selection list to search
"RTN","IBDF18",64,0)
 S TSUBCOL=""
"RTN","IBDF18",65,0)
 ;
"RTN","IBDF18",66,0)
 N SC,PIECE,NODE S SC=0
"RTN","IBDF18",67,0)
 ;
"RTN","IBDF18",68,0)
 ;refering to the data returned by the package interface, piece 2 is the description
"RTN","IBDF18",69,0)
 F  S SC=$O(^IBE(357.2,LIST,2,SC)) Q:'SC  S NODE=$G(^IBE(357.2,LIST,2,SC,0)),PIECE=$P(NODE,"^",5) I PIECE=2 S TSUBCOL=$P(NODE,"^") Q
"RTN","IBDF18",70,0)
 Q
"RTN","IBDF18",71,0)
 ;
"RTN","IBDF18",72,0)
FIND(FORM,BLK,LIST,INTRFACE) ;finds the block & list containing the Clinic Common Problem List
"RTN","IBDF18",73,0)
 N INTRFACE,QUIT
"RTN","IBDF18",74,0)
 S BLK=+$G(BLK),LIST=+$G(LIST),INTRFACE=+$G(INTRFACE)
"RTN","IBDF18",75,0)
 ;
"RTN","IBDF18",76,0)
 ;if not already found,find the package interface for selecting PROBLEMS
"RTN","IBDF18",77,0)
 I 'INTRFACE S INTRFACE=$O(^IBE(357.6,"B","GMP SELECT CLINIC COMMON PROBL",0))
"RTN","IBDF18",78,0)
 I 'INTRFACE S (BLK,LIST)=0 QUIT
"RTN","IBDF18",79,0)
 ;
"RTN","IBDF18",80,0)
 I BLK D
"RTN","IBDF18",81,0)
 .F  S LIST=$O(^IBE(357.2,"C",BLK,LIST)) Q:'LIST  I $P($G(^IBE(357.2,LIST,0)),"^",11)=INTRFACE Q
"RTN","IBDF18",82,0)
 I BLK,LIST QUIT
"RTN","IBDF18",83,0)
 S QUIT=0
"RTN","IBDF18",84,0)
 F  S BLK=$O(^IBE(357.1,"C",FORM,BLK)) Q:'BLK  D  Q:QUIT
"RTN","IBDF18",85,0)
 .S LIST=0 F  S LIST=$O(^IBE(357.2,"C",BLK,LIST)) Q:'LIST  I $P($G(^IBE(357.2,LIST,0)),"^",11)=INTRFACE S QUIT=1 Q
"RTN","IBDF18",86,0)
 I 'BLK!('LIST) S (BLK,LIST)=0
"RTN","IBDF18",87,0)
 Q
"RTN","IBDF18A")
0^85^B8128379
"RTN","IBDF18A",1,0)
IBDF18A ;ALB/CJM/AAS - ENCOUNTER FORM - utilities for PCE ;12-AUG-94
"RTN","IBDF18A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF18A",3,0)
 ;
"RTN","IBDF18A",4,0)
GLL(CLINIC,INTRFACE,ARY,FILTER) ; -- get lots of lists in one call
"RTN","IBDF18A",5,0)
 ; -- input see GETLST but pass interface by reference expects
"RTN","IBDF18A",6,0)
 ;    intrface(n) = name of select list in package interface file
"RTN","IBDF18A",7,0)
 ;
"RTN","IBDF18A",8,0)
 ; -- output see GETLST
"RTN","IBDF18A",9,0)
 N X,COUNT
"RTN","IBDF18A",10,0)
 S COUNT=0
"RTN","IBDF18A",11,0)
 S X="" F  S X=$O(INTRFACE(X)) Q:X=""  D GETLST(CLINIC,INTRFACE(X),ARY,$G(FILTER),.COUNT) ;S COUNT=@ARY@(0)
"RTN","IBDF18A",12,0)
 ;S @ARY@(0)=COUNT
"RTN","IBDF18A",13,0)
 Q
"RTN","IBDF18A",14,0)
 ;
"RTN","IBDF18A",15,0)
GETLST(CLINIC,INTRFACE,ARY,FILTER,COUNT) ; -- returns any specified selection list for a clinic
"RTN","IBDF18A",16,0)
 ; -- input  CLINIC = pointer to hospital location file for clinic
"RTN","IBDF18A",17,0)
 ;         INTRFACE = name of selection list in package interface file
"RTN","IBDF18A",18,0)
 ;              ARY = name of array to return list in
"RTN","IBDF18A",19,0)
 ;           FILTER = predefined filters (optional, default = 1)
"RTN","IBDF18A",20,0)
 ;                                       1 = must be selection list
"RTN","IBDF18A",21,0)
 ;                                       2 = only visit cpts on list
"RTN","IBDF18A",22,0)
 ;
"RTN","IBDF18A",23,0)
 ; -- output  The format of the returned array is as follows
"RTN","IBDF18A",24,0)
 ;         @ARY@(0) = count of array element (0 of nothing found)
"RTN","IBDF18A",25,0)
 ;         @ARY@(1) = ^group header
"RTN","IBDF18A",26,0)
 ;         @ARY@(2) = problem ien or cpt or icd code^user defined text
"RTN","IBDF18A",27,0)
 ;         @ARY@(3) = problem ien or cpt or icd code^used defined text
"RTN","IBDF18A",28,0)
 ;         @ARY@(k) = ^next group header
"RTN","IBDF18A",29,0)
 ;       @ARY@(k+1) = problem ien or cpt or icd code^user define text
"RTN","IBDF18A",30,0)
 ;
"RTN","IBDF18A",31,0)
 N I,J,X,Y,INUM,IBQUIT,FORM,SETUP,LIST,BLOCK,OLDARY,IBDTMP,IBDUP
"RTN","IBDF18A",32,0)
 S (IBQUIT,LIST)=0
"RTN","IBDF18A",33,0)
 S COUNT=$G(COUNT,0)
"RTN","IBDF18A",34,0)
 I $G(FILTER)<1 S FILTER=1 ;default value=1
"RTN","IBDF18A",35,0)
 I FILTER>1 S OLDARY=ARY,ARY="IBDTMP"
"RTN","IBDF18A",36,0)
 S @ARY@(0)=+$G(@ARY@(0))
"RTN","IBDF18A",37,0)
 I $G(CLINIC)="" G GETLSTQ
"RTN","IBDF18A",38,0)
 I $G(^SC(CLINIC,0))="" G GETLSTQ
"RTN","IBDF18A",39,0)
 I $G(INTRFACE)="" G GETLSTQ
"RTN","IBDF18A",40,0)
 S INUM=$O(^IBE(357.6,"B",$E(INTRFACE,1,30),0))
"RTN","IBDF18A",41,0)
 ; 
"RTN","IBDF18A",42,0)
 ; -- find forms defined for clinic
"RTN","IBDF18A",43,0)
 ;    piece 2 = basic form
"RTN","IBDF18A",44,0)
 ;    piece 3,4,6 = supplemental forms
"RTN","IBDF18A",45,0)
 S SETUP=$G(^SD(409.95,+$O(^SD(409.95,"B",CLINIC,0)),0))
"RTN","IBDF18A",46,0)
 G:SETUP="" GETLSTQ
"RTN","IBDF18A",47,0)
 F I=2,3,4,6,8,9 S FORM=$P(SETUP,"^",I) D  Q:IBQUIT
"RTN","IBDF18A",48,0)
 .;
"RTN","IBDF18A",49,0)
 .; -- find blocks on forms
"RTN","IBDF18A",50,0)
 .Q:'FORM
"RTN","IBDF18A",51,0)
 .S BLOCK=0 F  S BLOCK=$O(^IBE(357.1,"C",FORM,BLOCK)) Q:'BLOCK!(IBQUIT)  D
"RTN","IBDF18A",52,0)
 ..;
"RTN","IBDF18A",53,0)
 ..; -- see if package interface defined for blocks
"RTN","IBDF18A",54,0)
 ..S LIST=0 F  S LIST=$O(^IBE(357.2,"C",BLOCK,LIST)) Q:'LIST  I $P($G(^IBE(357.2,LIST,0)),"^",11)=INUM D  ;S IBQUIT=1 Q  ;remove first semicolon if only want first list
"RTN","IBDF18A",55,0)
 ...;
"RTN","IBDF18A",56,0)
 ...; -- copy list
"RTN","IBDF18A",57,0)
 ...D:LIST COPYLIST^IBDF18A1(LIST,ARY,.COUNT)
"RTN","IBDF18A",58,0)
 I COUNT D URH^IBDF18A1
"RTN","IBDF18A",59,0)
 S @ARY@(0)=COUNT
"RTN","IBDF18A",60,0)
 I FILTER=2 D F2^IBDF18A1(OLDARY)
"RTN","IBDF18A",61,0)
 ;
"RTN","IBDF18A",62,0)
GETLSTQ Q
"RTN","IBDF18A",63,0)
 ;
"RTN","IBDF18A",64,0)
 ; -- here are some sample tests for different lists
"RTN","IBDF18A",65,0)
TEST K VAR D GETLST(300,"DG SELECT CPT PROCEDURE CODES","VAR",1)
"RTN","IBDF18A",66,0)
 X "ZW VAR"
"RTN","IBDF18A",67,0)
 Q
"RTN","IBDF18A",68,0)
TEST1 K VAR D GETLST(300,"DG SELECT ICD-9 DIAGNOSIS CODES","VAR",1)
"RTN","IBDF18A",69,0)
 X "ZW VAR"
"RTN","IBDF18A",70,0)
 Q
"RTN","IBDF18A",71,0)
 ;
"RTN","IBDF18A",72,0)
TEST3 K VAR S TEST(1)="DG SELECT CPT PROCEDURE CODES",TEST(2)="DG SELECT VISIT TYPE CPT PROCE"
"RTN","IBDF18A",73,0)
 D GLL(1,.TEST,"VAR",1)
"RTN","IBDF18A",74,0)
 X "ZW VAR"
"RTN","IBDF18A",75,0)
 Q
"RTN","IBDF18A",76,0)
 ;
"RTN","IBDF18A",77,0)
TEST4 K VAR D GETLST(300,"DG SELECT VISIT TYPE CPT PROCE","VAR",2)
"RTN","IBDF18A",78,0)
 X "ZW VAR"
"RTN","IBDF18A",79,0)
 Q
"RTN","IBDF18A1")
0^86^B16248968
"RTN","IBDF18A1",1,0)
IBDF18A1 ;ALB/CJM/AAS - ENCOUNTER FORM - utilities for PCE ;12-AUG-94
"RTN","IBDF18A1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF18A1",3,0)
 ;
"RTN","IBDF18A1",4,0)
COPYLIST(LIST,ARY,COUNT) ;copies the entries from LIST to @ARY, starting subscript at COUNT+1
"RTN","IBDF18A1",5,0)
 ;
"RTN","IBDF18A1",6,0)
 N SLCTN,SUBCOL,TEXT,IEN,NODE,TSUBCOL,NOTREAL,NODE,GROUP,ORDER,HDR
"RTN","IBDF18A1",7,0)
 ;
"RTN","IBDF18A1",8,0)
 D SUBCOL(LIST,.TSUBCOL) ;find the subcolumn containing the text
"RTN","IBDF18A1",9,0)
 ;don't bother returning list of problems if there is no subcolumn containing the text
"RTN","IBDF18A1",10,0)
 ;Q:'$G(TSUBCOL)
"RTN","IBDF18A1",11,0)
 ;
"RTN","IBDF18A1",12,0)
 S GROUP=0 F  S GROUP=$O(^IBE(357.3,"APO",LIST,GROUP)) Q:'GROUP  D
"RTN","IBDF18A1",13,0)
 .S HDR=$P($G(^IBE(357.4,GROUP,0)),"^") I HDR="BLANK" S HDR=""
"RTN","IBDF18A1",14,0)
 .S COUNT=COUNT+1,@ARY@(COUNT)="^"_HDR
"RTN","IBDF18A1",15,0)
 .S ORDER="" F  S ORDER=$O(^IBE(357.3,"APO",LIST,GROUP,ORDER)) Q:ORDER=""  S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"APO",LIST,GROUP,ORDER,SLCTN)) Q:'SLCTN  D
"RTN","IBDF18A1",16,0)
 ..S NODE=$G(^IBE(357.3,SLCTN,0)),IEN=$P(NODE,"^"),NOTREAL=$P(NODE,"^",2)
"RTN","IBDF18A1",17,0)
 ..Q:NOTREAL
"RTN","IBDF18A1",18,0)
 ..S SUBCOL=$O(^IBE(357.3,SLCTN,1,"B",+TSUBCOL,0)) Q:'SUBCOL
"RTN","IBDF18A1",19,0)
 ..S NODE=$G(^IBE(357.3,SLCTN,1,SUBCOL,0)) S:$P(NODE,"^")=TSUBCOL TEXT=$P(NODE,"^",2)
"RTN","IBDF18A1",20,0)
 ..;
"RTN","IBDF18A1",21,0)
 ..; -- only add to array if not duplicate.  Is dup ien or ien+text???
"RTN","IBDF18A1",22,0)
 ..;I $L(TEXT),'$D(IBDUP(IEN)) S COUNT=COUNT+1,IBDUP(IEN)="",@ARY@(COUNT)=IEN_"^"_TEXT Q  ;this line checks only ien for duplicates
"RTN","IBDF18A1",23,0)
 ..I $L(TEXT),'$D(IBDUP(IEN_"^"_TEXT)) S COUNT=COUNT+1,IBDUP(IEN_"^"_TEXT)="",@ARY@(COUNT)=IEN_"^"_TEXT Q  ;this line checks ien+text for duplicates
"RTN","IBDF18A1",24,0)
 Q
"RTN","IBDF18A1",25,0)
 ;
"RTN","IBDF18A1",26,0)
 ;
"RTN","IBDF18A1",27,0)
SUBCOL(LIST,TSUBCOL) ; -- finds the subcolumn containing the text
"RTN","IBDF18A1",28,0)
 ; -- TSUBCOL passed by reference - used to return the subcolumn
"RTN","IBDF18A1",29,0)
 ;    LIST is the selection list to search
"RTN","IBDF18A1",30,0)
 ;
"RTN","IBDF18A1",31,0)
 ; -- refering to the data returned by the package interface,
"RTN","IBDF18A1",32,0)
 ;    piece 2 is usually the description
"RTN","IBDF18A1",33,0)
 ;
"RTN","IBDF18A1",34,0)
 N PI,SC
"RTN","IBDF18A1",35,0)
 S TSUBCOL="",SC=0
"RTN","IBDF18A1",36,0)
 S PI=$P($G(^IBE(357.6,+$P($G(^IBE(357.2,+LIST,0)),"^",11),0)),"^")
"RTN","IBDF18A1",37,0)
 ;
"RTN","IBDF18A1",38,0)
 F  S SC=$O(^IBE(357.2,LIST,2,SC)) Q:'SC  D
"RTN","IBDF18A1",39,0)
 .Q:$P($G(^IBE(357.2,LIST,2,SC,0)),"^",4)=2  ;is a marking area
"RTN","IBDF18A1",40,0)
 .I $P($G(^IBE(357.2,LIST,2,SC,0)),"^",5)=2 S TSUBCOL=$P(^(0),"^") Q
"RTN","IBDF18A1",41,0)
 .I TSUBCOL="",$P($G(^IBE(357.2,LIST,2,SC,0)),"^",5)>2 S TSUBCOL=$P(^(0),"^") Q  ; -- see if other than data piece two is text subcolumn
"RTN","IBDF18A1",42,0)
 .;
"RTN","IBDF18A1",43,0)
 .; -- utility for selecting blanks is exception
"RTN","IBDF18A1",44,0)
 .I TSUBCOL="",PI="IBDF UTILITY FOR SELECTING BLANKS",$P($G(^IBE(357.2,LIST,2,SC,0)),"^",5)=1 S TSUBCOL=$P(^(0),"^") Q
"RTN","IBDF18A1",45,0)
 Q
"RTN","IBDF18A1",46,0)
 ;
"RTN","IBDF18A1",47,0)
F2(ARY) ; -- filter cpt code array to find only codes beginning with 992 and asssicated headers
"RTN","IBDF18A1",48,0)
 ; -- Copy filtered array to from ibdtmp( to @ary@(
"RTN","IBDF18A1",49,0)
 ;
"RTN","IBDF18A1",50,0)
 N NODE,IBQUIT,COUNT
"RTN","IBDF18A1",51,0)
 S (COUNT,IBQUIT)=0
"RTN","IBDF18A1",52,0)
 ;
"RTN","IBDF18A1",53,0)
 I INTRFACE'="DG SELECT CPT PROCEDURE CODES" S @ARY=IBDTMP K IBDTMP
"RTN","IBDF18A1",54,0)
 ;
"RTN","IBDF18A1",55,0)
 S NODE="" F  S NODE=$O(IBDTMP(NODE),-1) Q:NODE=""  I $E(IBDTMP(NODE),1,3)=992 D  ;Q:IBQUIT  ;comment out the q:ibquit if want from more than 1 list
"RTN","IBDF18A1",56,0)
 .;
"RTN","IBDF18A1",57,0)
 .S @ARY@(NODE)=IBDTMP(NODE),COUNT=COUNT+1 ;this is bottom of list
"RTN","IBDF18A1",58,0)
 .;
"RTN","IBDF18A1",59,0)
 .; -- process from bottom of list to header
"RTN","IBDF18A1",60,0)
 .F  S NODE=$O(IBDTMP(NODE),-1) Q:NODE=""  D  Q:IBQUIT
"RTN","IBDF18A1",61,0)
 ..S IBQUIT=0
"RTN","IBDF18A1",62,0)
 ..I $E(IBDTMP(NODE),1,3)=992 S @ARY@(NODE)=IBDTMP(NODE),COUNT=COUNT+1
"RTN","IBDF18A1",63,0)
 ..I $P(IBDTMP(NODE),"^",1)="" S @ARY@(NODE)=IBDTMP(NODE),IBQUIT=1,COUNT=COUNT+1
"RTN","IBDF18A1",64,0)
 I COUNT S @ARY@(0)=COUNT
"RTN","IBDF18A1",65,0)
 Q
"RTN","IBDF18A1",66,0)
 ;
"RTN","IBDF18A1",67,0)
URH ; -- UnReferenced Headers removal
"RTN","IBDF18A1",68,0)
 ;    if a header doesn't have any data under it, then remove the header
"RTN","IBDF18A1",69,0)
 N X,HDR
"RTN","IBDF18A1",70,0)
 S X=0 F  S X=$O(@ARY@(X)) Q:'X  D
"RTN","IBDF18A1",71,0)
 .I '$D(HDR),$P(@ARY@(X),"^",1)="" S HDR=X Q  ;find a header
"RTN","IBDF18A1",72,0)
 .I $P(@ARY@(X),"^",1) K HDR Q  ; is item under header
"RTN","IBDF18A1",73,0)
 .I $D(HDR),$P(@ARY@(X),"^",1)="" K @ARY@(HDR) S COUNT=COUNT-1,HDR=X ;hdr doesn't have any items, kill hdr node and reset header to next header
"RTN","IBDF18A1",74,0)
 I $D(HDR) S X=$O(@ARY@(""),-1) I $P(@ARY@(X),"^",1)="" K @ARY@(X) S COUNT=COUNT-1,HDR=X ;last item in list is a header
"RTN","IBDF18A1",75,0)
 Q
"RTN","IBDF18B")
0^87^B2901601
"RTN","IBDF18B",1,0)
IBDF18B ;ALB/AAS - ENCOUNTER FORM - utilities for PCE ;04-OCT-94
"RTN","IBDF18B",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF18B",3,0)
 ;
"RTN","IBDF18B",4,0)
GETPRO(CLINIC,ARY) ; -- returns list of providers specified for a clinic
"RTN","IBDF18B",5,0)
 ; -- input  CLINIC = pointer to hospital location file for clinic
"RTN","IBDF18B",6,0)
 ;              ARY = name of array to return list in
"RTN","IBDF18B",7,0)
 ;
"RTN","IBDF18B",8,0)
 ; -- output  The format of the returned array is as follows
"RTN","IBDF18B",9,0)
 ;         @ARY@(0) = count of array element (0 of nothing found)
"RTN","IBDF18B",10,0)
 ;         @ARY@(1) = pointer to 200^provider name from 200 (default provider if indicated)
"RTN","IBDF18B",11,0)
 ;         @ARY@(2) = pointer to 200^provider name from 200
"RTN","IBDF18B",12,0)
 ;
"RTN","IBDF18B",13,0)
 N I,J,X,Y,IBX,IBQUIT,COUNT,IBC,ERR,CT
"RTN","IBDF18B",14,0)
 S (CT,COUNT,IBQUIT)=0
"RTN","IBDF18B",15,0)
 ;
"RTN","IBDF18B",16,0)
 S @ARY@(0)=""
"RTN","IBDF18B",17,0)
 I $G(CLINIC)="" G GETPROQ
"RTN","IBDF18B",18,0)
 I $G(^SC(CLINIC,0))="" G GETPROQ
"RTN","IBDF18B",19,0)
 S ERR="IBDERR"
"RTN","IBDF18B",20,0)
 ;
"RTN","IBDF18B",21,0)
 ; -- don't use PCMM providers checked
"RTN","IBDF18B",22,0)
 I $P($G(^SD(409.95,+$O(^SD(409.95,"B",CLINIC,0)),0)),"^",10) G CLIN
"RTN","IBDF18B",23,0)
 ;
"RTN","IBDF18B",24,0)
 ; -- get providers from PCMM teams, if available
"RTN","IBDF18B",25,0)
 I $L($T(PRCL^SCAPMC)) S X=$$PRCL^SCAPMC(.CLINIC,"","","","",ARY,ERR) I @ARY@(0)>0 D
"RTN","IBDF18B",26,0)
 .K @ARY@("SCPR")
"RTN","IBDF18B",27,0)
 .F I=1:1:@ARY@(0) I '$$SCREEN^IBDFDE10(+@ARY@(I)) K @ARY@(I) S CT=CT+1
"RTN","IBDF18B",28,0)
 .S @ARY@(0)=@ARY@(0)-CT
"RTN","IBDF18B",29,0)
 I @ARY@(0)>0 G GETPROQ
"RTN","IBDF18B",30,0)
 ;
"RTN","IBDF18B",31,0)
CLIN I $O(^SC(CLINIC,"PR",0))="" G GETPROQ
"RTN","IBDF18B",32,0)
 ;
"RTN","IBDF18B",33,0)
 ; -- default provider should always be listed first
"RTN","IBDF18B",34,0)
 S IBX=$O(^SC("ADPR",CLINIC,0)) I IBX D
"RTN","IBDF18B",35,0)
 .S X=$G(^SC(CLINIC,"PR",IBX,0))
"RTN","IBDF18B",36,0)
 .D INCPR(+X)
"RTN","IBDF18B",37,0)
 ;
"RTN","IBDF18B",38,0)
 ; -- get rest of list of providers
"RTN","IBDF18B",39,0)
 S IBX=0 F  S IBX=$O(^SC(CLINIC,"PR",IBX)) Q:'IBX  I IBX D
"RTN","IBDF18B",40,0)
 .S X=$G(^SC(CLINIC,"PR",IBX,0))
"RTN","IBDF18B",41,0)
 .D INCPR(+X)
"RTN","IBDF18B",42,0)
 S @ARY@(0)=COUNT
"RTN","IBDF18B",43,0)
 ;
"RTN","IBDF18B",44,0)
GETPROQ Q
"RTN","IBDF18B",45,0)
 ;
"RTN","IBDF18B",46,0)
INCPR(X) ; -- increment counter and set provider array
"RTN","IBDF18B",47,0)
 Q:'X!($G(^VA(200,+X,0))="")
"RTN","IBDF18B",48,0)
 Q:$D(IBX(+X))  ; -- already set
"RTN","IBDF18B",49,0)
 S COUNT=COUNT+1,@ARY@(COUNT)=+X_"^"_$P(^VA(200,+X,0),"^")
"RTN","IBDF18B",50,0)
 S IBX(+X)=""
"RTN","IBDF18B",51,0)
 Q
"RTN","IBDF18B",52,0)
 ;
"RTN","IBDF18B",53,0)
TEST K ALAN D GETPRO(25,"ALAN")
"RTN","IBDF18B",54,0)
 X "ZW ALAN"
"RTN","IBDF18B",55,0)
 Q
"RTN","IBDF18C")
0^88^B33242900
"RTN","IBDF18C",1,0)
IBDF18C ;ALB/CJM/AAS - ENCOUNTER FORM - form ID utilities ;04-OCT-94
"RTN","IBDF18C",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF18C",3,0)
 ;
"RTN","IBDF18C",4,0)
FID(DFN,APPT,SOURCE,FORMTYPE,CLIN) ; -- Form ID Tracking
"RTN","IBDF18C",5,0)
 ; -- create record in the ENCOUNTER FORM TRACKING file
"RTN","IBDF18C",6,0)
 ;    and returned a unique FORM ID
"RTN","IBDF18C",7,0)
 ; -- Input    DFN    = patient internal entry number
"RTN","IBDF18C",8,0)
 ;             APPT   = appointment date time (fm format)
"RTN","IBDF18C",9,0)
 ;             SOURCE = the source of the form, ie
"RTN","IBDF18C",10,0)
 ;                          IB = 1
"RTN","IBDF18C",11,0)
 ;                      Pandas = 2
"RTN","IBDF18C",12,0)
 ;                      Telefr = 3
"RTN","IBDF18C",13,0)
 ;             FORMTYPE   = the package form definition ID - may have been exterally assigned
"RTN","IBDF18C",14,0)
 ;             CLIN   = pointer to 44 (optional)
"RTN","IBDF18C",15,0)
 ;
"RTN","IBDF18C",16,0)
 ; -- Output Returns  = internal form id^external form id
"RTN","IBDF18C",17,0)
 ;
"RTN","IBDF18C",18,0)
 N I,J,X,Y,ID,EXID,CLN,INTERNAL,NODE,FORMID,DIC,DIE,DA,DR,DINUM,DLAYGO
"RTN","IBDF18C",19,0)
 S ID=-1,EXID=""
"RTN","IBDF18C",20,0)
 ;
"RTN","IBDF18C",21,0)
 I '$G(DFN)!('$G(APPT))!('$G(SOURCE)) G FIDQ
"RTN","IBDF18C",22,0)
 ;
"RTN","IBDF18C",23,0)
 ; -- FORMTYPE may="", but should always be >0 for scannable forms 
"RTN","IBDF18C",24,0)
 S FORMTYPE=+$G(FORMTYPE)
"RTN","IBDF18C",25,0)
 S FORMID("APPT")=APPT,FORMID("SOURCE")=1
"RTN","IBDF18C",26,0)
 ;
"RTN","IBDF18C",27,0)
 ; -- determine if the FORMTYPE was exterally assigned
"RTN","IBDF18C",28,0)
 S INTERNAL=$D(^IBD(357.95,"C",SOURCE,FORMTYPE))
"RTN","IBDF18C",29,0)
 ;
"RTN","IBDF18C",30,0)
 ;
"RTN","IBDF18C",31,0)
 S ID=$$FINDID(DFN,APPT,FORMTYPE) I ID S EXID=ID_"^"_$P($G(^IBD(357.96,ID,0)),"^",9) G FIDQ
"RTN","IBDF18C",32,0)
 K DIC,DO,D0,DD,DA,DINUM
"RTN","IBDF18C",33,0)
 S DIC="^IBD(357.96,",X=ID,DIC(0)="L",DLAYGO=357.96,DINUM=ID
"RTN","IBDF18C",34,0)
 ;
"RTN","IBDF18C",35,0)
 L +^IBD(357.97,1,.02):3
"RTN","IBDF18C",36,0)
 S ID=+$P($G(^IBD(357.97,1,0)),"^",2)
"RTN","IBDF18C",37,0)
 F ID=ID+1:1 L:$D(^IBD(357.96,(ID-1))) -^IBD(357.96,(ID-1)) I ID>0,'$D(^IBD(357.96,ID)) L +^IBD(357.96,ID):1 I $T,'$D(^IBD(357.96,ID)) S (X,DINUM)=ID D FILE^DICN Q:+Y>0
"RTN","IBDF18C",38,0)
 S $P(^IBD(357.97,1,0),"^",2)=ID
"RTN","IBDF18C",39,0)
 L -^IBD(357.97,1,.02)
"RTN","IBDF18C",40,0)
 ;
"RTN","IBDF18C",41,0)
 S ID=$S(+Y<1:"",1:+Y) I ID="" D LOGERR^IBDF18E2(3579600,.FORMID) G FIDQ
"RTN","IBDF18C",42,0)
 D:ID
"RTN","IBDF18C",43,0)
 .S EXID=$$EXID(ID)
"RTN","IBDF18C",44,0)
 .S DIE="^IBD(357.96,",DA=ID
"RTN","IBDF18C",45,0)
 .S DR="[IBD CREATE FORM TRACKING]"
"RTN","IBDF18C",46,0)
 .L +^IBD(357.96,ID):5 D ^DIE L -^IBD(357.96,ID)
"RTN","IBDF18C",47,0)
 .K DIC,DIE,DA,DR,DINUM,DLAYGO,%,%H,%I
"RTN","IBDF18C",48,0)
 .;
"RTN","IBDF18C",49,0)
 .;D NOW^%DTC N IBPRDT S IBPRDT=% ;Not needed with template, delete
"RTN","IBDF18C",50,0)
 .;S DR=".02////^S X=DFN;.03////^S X=APPT;.04////^S X=$S(INTERNAL:FORMTYPE,1:"""");.05////^S X=IBPRDT;.07////^S X=SOURCE;.08////^S X=$S('INTERNAL:FORMTYPE,1:"""");.09////^S X=EXID;.1////^S X=$G(CLIN);.11////1"
"RTN","IBDF18C",51,0)
 .;I $G(^DPT(DFN,"S",APPT,0))="" S DR=DR_";.14////1"
"RTN","IBDF18C",52,0)
FIDQ Q ID_"^"_EXID
"RTN","IBDF18C",53,0)
 ;
"RTN","IBDF18C",54,0)
EXID(ID) ; -- converts external id format to internal id format
"RTN","IBDF18C",55,0)
 ; -- we need to decide on external id format
"RTN","IBDF18C",56,0)
 Q $G(ID)
"RTN","IBDF18C",57,0)
 ;
"RTN","IBDF18C",58,0)
INID(ID) ; -- find internal id number from external format
"RTN","IBDF18C",59,0)
 ; -- Input ID  = form id in external format
"RTN","IBDF18C",60,0)
 ;    Output    = form id in internal format or NULL if nonexistant
"RTN","IBDF18C",61,0)
 ;
"RTN","IBDF18C",62,0)
 N EXID
"RTN","IBDF18C",63,0)
 S EXID=$O(^IBD(357.96,"AEXT",ID,0))
"RTN","IBDF18C",64,0)
INIDQ Q $G(EXID)
"RTN","IBDF18C",65,0)
 ;
"RTN","IBDF18C",66,0)
FSCND(ID,STAT,ERR) ; -- update form tracking file that 
"RTN","IBDF18C",67,0)
 ; -- Input  ID = entry to flag as scanned (internal format)
"RTN","IBDF18C",68,0)
 ;         STAT = NEW status, 1=printed, 2=scanned,3=sent to pce okay, 
"RTN","IBDF18C",69,0)
 ;                4=pce returned err
"RTN","IBDF18C",70,0)
 ;                11=pending pages, 12=input data error
"RTN","IBDF18C",71,0)
 ;          ERR = pce error message (required only if stat=4)
"RTN","IBDF18C",72,0)
 ;
"RTN","IBDF18C",73,0)
 ; -- Output    = 1 if successful, 0 if not
"RTN","IBDF18C",74,0)
 ;
"RTN","IBDF18C",75,0)
 N IBI,SUCCESS,I,J,X,Y,DA,DR,DIC,DIE
"RTN","IBDF18C",76,0)
 S SUCCESS=0
"RTN","IBDF18C",77,0)
 I '$G(ID) G FSCNDQ
"RTN","IBDF18C",78,0)
 I $G(STAT)=4,$G(ERR)="" G FSCNDQ
"RTN","IBDF18C",79,0)
 ;
"RTN","IBDF18C",80,0)
 ; -- three lines below use template, new for t6, uncommend and delete
"RTN","IBDF18C",81,0)
 ;    remaining lines
"RTN","IBDF18C",82,0)
 S DIE="^IBD(357.96,",DA=ID,DR="[IBD EDIT FORM TRACKING STATUS]"
"RTN","IBDF18C",83,0)
 D ^DIE
"RTN","IBDF18C",84,0)
 S SUCCESS=1
"RTN","IBDF18C",85,0)
 ;
"RTN","IBDF18C",86,0)
 ;S IBI=$G(^IBD(357.96,+ID,0)) I IBI="" G FSCND
"RTN","IBDF18C",87,0)
 ;I $P(IBI,"^",6)="" S DIE="^IBD(357.96,",DA=ID,DR=".06///NOW;.11////^S X=$S($G(STAT):STAT,1:2);.12////^S X=$G(ERR)" D ^DIE S SUCCESS=1 G FSCNDQ
"RTN","IBDF18C",88,0)
 ;S DIE="^IBD(357.96,",DA=+ID,DR=".11////^S X=$G(STAT);.12////^S X=$G(ERR)" D ^DIE S SUCCESS=1
"RTN","IBDF18C",89,0)
 ;
"RTN","IBDF18C",90,0)
FSCNDQ Q SUCCESS
"RTN","IBDF18C",91,0)
 ;
"RTN","IBDF18C",92,0)
FIDST(ID) ; -- form id status
"RTN","IBDF18C",93,0)
 ; -- Input   ID = form id (internal entry number)
"RTN","IBDF18C",94,0)
 ;
"RTN","IBDF18C",95,0)
 ; -- Output  STATUS = -1 if id does not exist
"RTN","IBDF18C",96,0)
 ;                   =  1 if id exists but not scanned (printed)
"RTN","IBDF18C",97,0)
 ;                   =  2 if already scanned in
"RTN","IBDF18C",98,0)
 ;                   =  3 if sent to pce okay
"RTN","IBDF18C",99,0)
 ;                   =  4 if sent to pce with error....
"RTN","IBDF18C",100,0)
 ;
"RTN","IBDF18C",101,0)
 N STATUS,I,J,X,Y
"RTN","IBDF18C",102,0)
 S STATUS=-1
"RTN","IBDF18C",103,0)
 I '$G(ID) G FIDSTQ
"RTN","IBDF18C",104,0)
 S X=$G(^IBD(357.96,ID,0)) I X="" G FIDSTQ
"RTN","IBDF18C",105,0)
 S STATUS=$S($P(X,"^",6)="":1,1:2)
"RTN","IBDF18C",106,0)
 S:$P(X,"^",11)>2 STATUS=$P(X,"^",11)
"RTN","IBDF18C",107,0)
FIDSTQ Q STATUS
"RTN","IBDF18C",108,0)
 ;
"RTN","IBDF18C",109,0)
FINDID(DFN,APPT,FORM,DUP) ; -- Find a form id for a patient and appointment
"RTN","IBDF18C",110,0)
 ; -- input  DFN =  patient
"RTN","IBDF18C",111,0)
 ;          APPT =  appointment date time
"RTN","IBDF18C",112,0)
 ;          FORM =  (Optional) type of form, pointer to 357.95 or field 10 
"RTN","IBDF18C",113,0)
 ;           DUP =  (Optional) if true, No duplicates of same form (357)
"RTN","IBDF18C",114,0)
 ;                  returns last printing of same form with different
"RTN","IBDF18C",115,0)
 ;                  form definitions, will also exclude nonscannable form
"RTN","IBDF18C",116,0)
 ;
"RTN","IBDF18C",117,0)
 ; -- output     = form id1^form id2^form id3^form idn...
"RTN","IBDF18C",118,0)
 ;               = where form ids are successive form ids (in internal
"RTN","IBDF18C",119,0)
 ;                 format) for same appointment
"RTN","IBDF18C",120,0)
 ;
"RTN","IBDF18C",121,0)
 N ID,I,J,X,ORIGIN,OLDDATE,NEWDATE
"RTN","IBDF18C",122,0)
 S ID=""
"RTN","IBDF18C",123,0)
 I '$G(DFN)!('$G(APPT)) G FINDIDQ
"RTN","IBDF18C",124,0)
 K ^TMP($J,"IBD-FINDID")
"RTN","IBDF18C",125,0)
 S CLN=+$G(^DPT(DFN,"S",APPT,0)) ;get clinic if appointment
"RTN","IBDF18C",126,0)
 ;
"RTN","IBDF18C",127,0)
 I '$G(DUP) S X=0 F  S X=$O(^IBD(357.96,"APTAP",DFN,APPT,X)) Q:'X  D
"RTN","IBDF18C",128,0)
 .I CLN,CLN'=$P($G(^IBD(357.96,X,0)),"^",10) Q  ;form for canceled appt.
"RTN","IBDF18C",129,0)
 .I '$G(FORM) S ID=ID_X_"^" Q
"RTN","IBDF18C",130,0)
 .I $G(FORM) S I=$G(^IBD(357.96,X,0)) I $P(I,"^",4)=FORM!($P(I,"^",8)=FORM) S ID=X Q
"RTN","IBDF18C",131,0)
 ;
"RTN","IBDF18C",132,0)
 I $G(DUP) S X=0 F  S X=$O(^IBD(357.96,"APTAP",DFN,APPT,X)) Q:'X  D
"RTN","IBDF18C",133,0)
 .I +$P($G(^IBE(357,+$P($G(^IBD(357.95,+$P($G(^IBD(357.96,X,0)),"^",4)),0),"^",21),0)),"^",12)<1 Q
"RTN","IBDF18C",134,0)
 .I CLN,CLN'=$P($G(^IBD(357.96,X,0)),"^",10) Q  ;form for canceled appt.
"RTN","IBDF18C",135,0)
 .S ORIGIN=$P($G(^IBD(357.95,+$P($G(^IBD(357.96,X,0)),"^",4),0)),"^",21) Q:'ORIGIN
"RTN","IBDF18C",136,0)
 .I '$G(FORM) D
"RTN","IBDF18C",137,0)
 ..I '$D(^TMP($J,"IBD-FINDID",ORIGIN)) S ^TMP($J,"IBD-FINDID",ORIGIN)=X Q
"RTN","IBDF18C",138,0)
 ..S OLDDATE=$P($G(^IBD(357.96,+$G(^TMP("IBD-FINDID",ORIGIN)),0)),"^",5)
"RTN","IBDF18C",139,0)
 ..S NEWDATE=$P($G(^IBD(357.96,X,0)),"^",5)
"RTN","IBDF18C",140,0)
 ..I NEWDATE'<OLDDATE S ^TMP($J,"IBD-FINDID",ORIGIN)=X
"RTN","IBDF18C",141,0)
 .I $G(FORM) S I=$G(^IBD(357.96,X,0)) I $P(I,"^",4)=FORM!($P(I,"^",8)=FORM) S ID=X Q
"RTN","IBDF18C",142,0)
 I $G(DUP),'$G(FORM) S ORIGIN=0 F  S ORIGIN=$O(^TMP($J,"IBD-FINDID",ORIGIN)) Q:'ORIGIN  S ID=ID_^TMP($J,"IBD-FINDID",ORIGIN)_"^"
"RTN","IBDF18C",143,0)
 ;
"RTN","IBDF18C",144,0)
FINDIDQ K ^TMP($J,"IBD-FINDID")
"RTN","IBDF18C",145,0)
 Q ID
"RTN","IBDF18C",146,0)
 ;
"RTN","IBDF18C",147,0)
FINDPT(FORMID) ;
"RTN","IBDF18C",148,0)
 ; -- find patient from form id
"RTN","IBDF18C",149,0)
 ; -- Output  :Patient Name ^ PID ^ clinic Name ^ appt date/time (external)
"RTN","IBDF18C",150,0)
 ;             ^form ID ^ form status ^ DFN ^ clinic ien ^ appt date/time (fm format)
"RTN","IBDF18C",151,0)
 ;
"RTN","IBDF18C",152,0)
 N I,J,X,Y,DFN,IBNODE,IBXX,VA,VADM,VAERR,STATNM,FORM,FORMNM
"RTN","IBDF18C",153,0)
 S IBXX="Unable to identify Form^^^"
"RTN","IBDF18C",154,0)
 I +$G(FORMID)<1 G FINDPTQ
"RTN","IBDF18C",155,0)
 S IBNODE=$G(^IBD(357.96,+FORMID,0))
"RTN","IBDF18C",156,0)
 I IBNODE="" G FINDPTQ
"RTN","IBDF18C",157,0)
 S DFN=+$P(IBNODE,"^",2)
"RTN","IBDF18C",158,0)
 D DEM^VADPT
"RTN","IBDF18C",159,0)
 S Y=$P(IBNODE,"^",11),C=$P(^DD(357.96,.11,0),"^",2) D Y^DIQ S STATNM=Y
"RTN","IBDF18C",160,0)
 S FORM=$P($G(^IBD(357.95,+$P(IBNODE,"^",4),0)),"^",21)
"RTN","IBDF18C",161,0)
 S FORMNM=$P($G(^IBE(357,+FORM,0)),"^")
"RTN","IBDF18C",162,0)
 ;
"RTN","IBDF18C",163,0)
 S IBXX=$G(VADM(1))_"^"_$G(VA("PID"))_"^"_$P($G(^SC(+$P(IBNODE,"^",10),0),"Clinic Not Specified"),"^")_"^"_$$FMTE^XLFDT($P(IBNODE,"^",3))_"^"_$P(IBNODE,"^",4)_"^"_$P(IBNODE,"^",11)_"^"_DFN
"RTN","IBDF18C",164,0)
 S IBXX=IBXX_"^"_$P(IBNODE,"^",10)_"^"_$P(IBNODE,"^",3)_"^"_STATNM_"^"_FORMNM_"^"_FORM
"RTN","IBDF18C",165,0)
 ;
"RTN","IBDF18C",166,0)
 I +$P(FORMID,"^",2)>0,$P(IBNODE,"^",4)'=+$P(FORMID,"^",2) S IBXX="Form Type and Form ID Don't match^^^"
"RTN","IBDF18C",167,0)
 ;
"RTN","IBDF18C",168,0)
FINDPTQ Q IBXX
"RTN","IBDF18D")
0^89^B3223739
"RTN","IBDF18D",1,0)
IBDF18D ;ALB/CJM/AAS - ENCOUNTER FORM - form type utilities ;04-OCT-94
"RTN","IBDF18D",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF18D",3,0)
 ;
"RTN","IBDF18D",4,0)
FORMTYPE(SOURCE) ;creates an entry in the FORM DEFINITION TABLE
"RTN","IBDF18D",5,0)
 ; -- input  SOURCE = the source of the form, ie
"RTN","IBDF18D",6,0)
 ;                     IB=1
"RTN","IBDF18D",7,0)
 ;                     PANDAS=2
"RTN","IBDF18D",8,0)
 ;                     TELEFORM=3
"RTN","IBDF18D",9,0)
 ;                     OTHER=99
"RTN","IBDF18D",10,0)
 ; -- Output Returns the ien of the table created, "" if not created
"RTN","IBDF18D",11,0)
 ;
"RTN","IBDF18D",12,0)
 Q:'SOURCE ""
"RTN","IBDF18D",13,0)
 N IBFORMID,ID,NODE,DIC,DIE,DA,DINUM,D0,DD,DIK,DINUM,DLAYGO
"RTN","IBDF18D",14,0)
 S ID=""
"RTN","IBDF18D",15,0)
 ;
"RTN","IBDF18D",16,0)
 L +^IBD(357.97,1,.01):3
"RTN","IBDF18D",17,0)
 S ID=$P($G(^IBD(357.97,1,0)),"^")
"RTN","IBDF18D",18,0)
 K DIC,D0,DD,DA,DO
"RTN","IBDF18D",19,0)
 S DIC="^IBD(357.95,",DIC(0)="L",DLAYGO=357.95
"RTN","IBDF18D",20,0)
 F ID=ID+1:1 L:$D(^IBD(357.95,(ID-1))) -^IBD(357.95,(ID-1)) I ID>0,'$D(^IBD(357.95,ID)) L +^IBD(357.95,ID):1 I $T,'$D(^IBD(357.95,ID)) S (X,DINUM)=ID D FILE^DICN Q:+Y>0
"RTN","IBDF18D",21,0)
 S $P(^IBD(357.97,1,0),"^")=ID
"RTN","IBDF18D",22,0)
 L -^IBD(357.97,1,.01)
"RTN","IBDF18D",23,0)
 K DIC,DIE,DA,DINUM,DLAYGO,DO,D0,DD
"RTN","IBDF18D",24,0)
 S IBFORMID=$S(+Y<0:"",1:+Y) I 'IBFORMID D LOGERR^IBDF18E2(3570003)
"RTN","IBDF18D",25,0)
 ;
"RTN","IBDF18D",26,0)
 I IBFORMID D
"RTN","IBDF18D",27,0)
 .S $P(^IBD(357.95,IBFORMID,0),"^",3)=SOURCE,^IBD(357.95,IBFORMID,1,0)="^357.951I^0^0",^IBD(357.95,IBFORMID,2,0)="^357.952I^0^0",^IBD(357.95,IBFORMID,3,0)="^357.953^0^0"
"RTN","IBDF18D",28,0)
 .S DIK="^IBD(357.95,",DA=IBFORMID D IX1^DIK
"RTN","IBDF18D",29,0)
 K DIK,X,DA
"RTN","IBDF18D",30,0)
 Q IBFORMID
"RTN","IBDF18E")
0^90^B33688796
"RTN","IBDF18E",1,0)
IBDF18E ;ALB/CJM - ENCOUNTER FORM - PCE DEVICE INTERFACE utilities ;04-OCT-94
"RTN","IBDF18E",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF18E",3,0)
 ;
"RTN","IBDF18E",4,0)
SEND(FORMID,PROVIDER,PROVTYPE,BUBBLES,HANDPRNT,CHECKOUT,PXCA,DYNAMIC) ;builds the PCXA array and passes it to PCE, updates form tracking status
"RTN","IBDF18E",5,0)
 ;input:
"RTN","IBDF18E",6,0)
 ;   FORMID = the unique id assigned to the printed form, points to the FORM TRACKING file
"RTN","IBDF18E",7,0)
 ;   PROVIDER=pointer to NEW PERSON file (#200) (optional)
"RTN","IBDF18E",8,0)
 ;   PROVTYPE= P:=primary,S:=secondary (optional)
"RTN","IBDF18E",9,0)
 ;   BUBBLES = an array which should be passed by reference, BUBBLES is the list of bubbles marked on the form, subscripted by pointers to the BUBBLES multiple in the FORM DEFINITION TABLE
"RTN","IBDF18E",10,0)
 ;   HANDPRNT is the list of hand print fields marked on the form - subscripted by pointers to the HAND PRINT FIELDS multiple in the FORM DEFINITION TABLE, the value being what was input (HANDPRINT(<ien>)=<value>) - should be passed by reference
"RTN","IBDF18E",11,0)
 ;   CHECKOUT = checkout data@time
"RTN","IBDF18E",12,0)
 ;   DYNAMIC = an array which should be passed by reference, contains the list of bubbles selected from dynamic selection lists
"RTN","IBDF18E",13,0)
 ;
"RTN","IBDF18E",14,0)
 ;output:
"RTN","IBDF18E",15,0)
 ;    = 0 if the data is not passed to PCE
"RTN","IBDF18E",16,0)
 ;    = 1 if PXCA is passed by reference, and the data is passed to PCE
"RTN","IBDF18E",17,0)
 ;    the PXCA array is returned, principally to aid in debugging
"RTN","IBDF18E",18,0)
 ;
"RTN","IBDF18E",19,0)
 ;example: S RETURN=$$SEND^IBDF18E(3,DOCTOR,"P",.BUBBLES,.HANDPRNT)
"RTN","IBDF18E",20,0)
 ;
"RTN","IBDF18E",21,0)
 N D,D0,NODE,FORMTYPE,PXCASTAT,IBAPPT,IBCLINIC,IBDFN,VALUE,PI,TEXT,HEADER,QLFR,BUB,STATUS,IBSOURCE,HAND,COUNT,FID,TEMP,ITEM,TYPE,IBDF,LEX,PLEX,QUANTITY
"RTN","IBDF18E",22,0)
 ;
"RTN","IBDF18E",23,0)
 K PXCA
"RTN","IBDF18E",24,0)
 S (PXCA,PXCASTAT)=""
"RTN","IBDF18E",25,0)
 ;
"RTN","IBDF18E",26,0)
 ;check that the required parameters were passed
"RTN","IBDF18E",27,0)
 I '$G(FORMID) D LOGERR^IBDF18E2(3579601,.FORMID) Q 0
"RTN","IBDF18E",28,0)
 ;
"RTN","IBDF18E",29,0)
 ;there must be an entry in form tracking - retrieve it into FORMID array
"RTN","IBDF18E",30,0)
 I '$$TRACKING^IBDF18E0(.FORMID) D LOGERR^IBDF18E2(3579501,.FORMID) Q 0
"RTN","IBDF18E",31,0)
 ;
"RTN","IBDF18E",32,0)
 ;there must be a form definition table
"RTN","IBDF18E",33,0)
 S FORMTYPE=$P(NODE,"^",4)
"RTN","IBDF18E",34,0)
 I 'FORMTYPE S STATUS=$$FSCND^IBDF18C(FORMID,12) Q 0
"RTN","IBDF18E",35,0)
 I '$G(^IBD(357.95,FORMTYPE,0)) S STATUS=$$FSCND^IBDF18C(FORMID,12) Q 0
"RTN","IBDF18E",36,0)
 ;
"RTN","IBDF18E",37,0)
 S PROVIDER=$G(PROVIDER)
"RTN","IBDF18E",38,0)
 S PROVTYPE=$G(PROVTYPE)
"RTN","IBDF18E",39,0)
 ;
"RTN","IBDF18E",40,0)
 ;build the encounter node and source node from form tracking
"RTN","IBDF18E",41,0)
 S PXCA("ENCOUNTER")=FORMID("APPT")_"^"_FORMID("DFN")_"^"_FORMID("CLINIC")_"^"_PROVIDER_"^^^^^^^^^^"_CHECKOUT_"^"_PROVTYPE
"RTN","IBDF18E",42,0)
 S PXCA("SOURCE")=+FORMID("SOURCE")_"^"_DUZ_"^"_FORMTYPE_"^^"_FORMID
"RTN","IBDF18E",43,0)
 ;
"RTN","IBDF18E",44,0)
 ;now for each bubble in BUBBLES() add to TEMP()
"RTN","IBDF18E",45,0)
 S BUB=0 F  S BUB=$O(BUBBLES(BUB)) Q:BUB=""  S:BUB NODE=$G(^IBD(357.95,FORMTYPE,1,BUB,0)) D
"RTN","IBDF18E",46,0)
 .N SUBHDR
"RTN","IBDF18E",47,0)
 .I 'BUB!(NODE="") D LOGERR^IBDF18E2(3579502,.FORMID,BUB,BUBBLES(BUB)) Q
"RTN","IBDF18E",48,0)
 .S $P(NODE,"^",8)=$S($D(^IBD(357.95,FORMTYPE,1,BUB,2))&($P($G(^IBD(357.95,FORMTYPE,1,BUB,2)),"^",1)]""):$P($G(^IBD(357.95,FORMTYPE,1,BUB,2)),"^",1),1:$P(NODE,"^",8))
"RTN","IBDF18E",49,0)
 .S VALUE=$P(NODE,"^",4)
"RTN","IBDF18E",50,0)
 .S PI=$P(NODE,"^",3)
"RTN","IBDF18E",51,0)
 .S TEXT=$P(NODE,"^",8)
"RTN","IBDF18E",52,0)
 .; -- strip :: code from TEXT if it exists
"RTN","IBDF18E",53,0)
 .I TEXT[" :: ",PI,VALUE D
"RTN","IBDF18E",54,0)
 ..S (Y,X)=VALUE X $G(^IBE(357.6,PI,14)) I Y]"" S TEXT=$P(TEXT," :: "_Y)
"RTN","IBDF18E",55,0)
 .S SUBHDR=$G(^IBD(357.95,FORMTYPE,1,BUB,1))
"RTN","IBDF18E",56,0)
 .;
"RTN","IBDF18E",57,0)
 .; -- the following line causes the subheader and display text to
"RTN","IBDF18E",58,0)
 .;    to be concatenated except for IB, which can pass an alternate
"RTN","IBDF18E",59,0)
 .;    text.  (some don't like this when passed to Problem List)
"RTN","IBDF18E",60,0)
 .;    This may need to be re-visited in the future
"RTN","IBDF18E",61,0)
 .I +FORMID("SOURCE")'=1,$L(SUBHDR),($L(SUBHDR)+$L(TEXT)<80) S TEXT=SUBHDR_" "_TEXT
"RTN","IBDF18E",62,0)
 .S HEADER=$P(NODE,"^",9)
"RTN","IBDF18E",63,0)
 .S FID=$P(NODE,"^",6) I FID="" S FID=$P(NODE,"^") ;PANDAS uses piece 1 to number each bubble - does not use piece 6
"RTN","IBDF18E",64,0)
 .S ITEM=$P(NODE,"^",12)
"RTN","IBDF18E",65,0)
 .S QLFR=$P(NODE,"^",10)
"RTN","IBDF18E",66,0)
 .S QUANTITY=$P(NODE,"^",13)
"RTN","IBDF18E",67,0)
 .; -- if text contains 'x #' for quantity, strip it
"RTN","IBDF18E",68,0)
 .I +QUANTITY I TEXT[" x "_QUANTITY S TEXT=$TR(TEXT," x "_QUANTITY)
"RTN","IBDF18E",69,0)
 .S TYPE=""
"RTN","IBDF18E",70,0)
 .S LEX=0
"RTN","IBDF18E",71,0)
 .I $D(^IBD(357.95,FORMTYPE,1,BUB,2)) S LEX=$P($G(^IBD(357.95,FORMTYPE,1,BUB,2)),"^",2)
"RTN","IBDF18E",72,0)
 .D SETTEMP^IBDF18E1
"RTN","IBDF18E",73,0)
 .D CODES^IBDF18E0
"RTN","IBDF18E",74,0)
 K BUBBLES
"RTN","IBDF18E",75,0)
 ;
"RTN","IBDF18E",76,0)
 ;now for each bubble in DYNAMIC() add to TEMP()
"RTN","IBDF18E",77,0)
 S FID="" F  S FID=$O(DYNAMIC(FID)) Q:FID=""  S COUNT="" F  S COUNT=$O(DYNAMIC(FID,COUNT)) Q:COUNT=""  S BUB=$O(^IBD(357.96,FORMID,"AC",FID,+COUNT,0)) S:BUB NODE=$G(^IBD(357.96,FORMID,1,BUB,0)) D
"RTN","IBDF18E",78,0)
 .I 'BUB!(NODE="") D LOGERR^IBDF18E2(3579602,.FORMID,FID,DYNAMIC(FID,COUNT)) Q
"RTN","IBDF18E",79,0)
 .S VALUE=$P(NODE,"^",4)
"RTN","IBDF18E",80,0)
 .S PI=$P(NODE,"^",3)
"RTN","IBDF18E",81,0)
 .S TEXT=$P(NODE,"^",8)
"RTN","IBDF18E",82,0)
 .; -- strip :: code from TEXT if it exists
"RTN","IBDF18E",83,0)
 .I TEXT[" :: " S TEXT=$P(TEXT," :: ")
"RTN","IBDF18E",84,0)
 .S HEADER=""
"RTN","IBDF18E",85,0)
 .S FID=$P(NODE,"^",6)
"RTN","IBDF18E",86,0)
 .S ITEM=$P(NODE,"^")
"RTN","IBDF18E",87,0)
 .S QLFR=$P(NODE,"^",10)
"RTN","IBDF18E",88,0)
 .S TYPE=""
"RTN","IBDF18E",89,0)
 .S LEX=0
"RTN","IBDF18E",90,0)
 .D SETTEMP^IBDF18E1
"RTN","IBDF18E",91,0)
 K DYNAMIC
"RTN","IBDF18E",92,0)
 ;
"RTN","IBDF18E",93,0)
 ;now for each hand print field in HANDPRNT() add to TEMP()
"RTN","IBDF18E",94,0)
 ;
"RTN","IBDF18E",95,0)
 S HAND=0 F  S HAND=$O(HANDPRNT(HAND)) Q:HAND=""  S:HAND NODE=$G(^IBD(357.95,FORMTYPE,2,HAND,0)) D
"RTN","IBDF18E",96,0)
 .I 'HAND!(NODE="") D LOGERR^IBDF18E2(3579503,.FORMID,HAND,HANDPRNT(HAND))
"RTN","IBDF18E",97,0)
 .S TYPE=$P(NODE,"^",17)
"RTN","IBDF18E",98,0)
 .S VALUE=$P(HANDPRNT(HAND),",")
"RTN","IBDF18E",99,0)
 .;
"RTN","IBDF18E",100,0)
 .;what was printed may need transformation/formating
"RTN","IBDF18E",101,0)
 .S VALUE=$$HPTRNS^IBDFU91(TYPE,VALUE,.FORMID)
"RTN","IBDF18E",102,0)
 .;
"RTN","IBDF18E",103,0)
 .; -- failed the input transform
"RTN","IBDF18E",104,0)
 .I VALUE="" D LOGERR^IBDF18E2(3579504,.FORMID,HAND,$P(HANDPRNT(HAND),","),"","",TYPE)
"RTN","IBDF18E",105,0)
 .;
"RTN","IBDF18E",106,0)
 .S PI=$P(NODE,"^",4)
"RTN","IBDF18E",107,0)
 .S TEXT=$P(NODE,"^",7)
"RTN","IBDF18E",108,0)
 .S HEADER=$P(NODE,"^",9)
"RTN","IBDF18E",109,0)
 .S FID=$P(NODE,"^",8)
"RTN","IBDF18E",110,0)
 .S ITEM=$P(NODE,"^",12)
"RTN","IBDF18E",111,0)
 .S QLFR=$P(NODE,"^",10)
"RTN","IBDF18E",112,0)
 .S LEX=0
"RTN","IBDF18E",113,0)
 .D SETTEMP^IBDF18E1
"RTN","IBDF18E",114,0)
 K HANDPRNT
"RTN","IBDF18E",115,0)
 ;
"RTN","IBDF18E",116,0)
 D SETPXCA^IBDF18E0,PRO^IBDF18E0,SC^IBDF18E0
"RTN","IBDF18E",117,0)
 ;
"RTN","IBDF18E",118,0)
 I $D(PXCA("IBD-ABORT")) D  S PXCASTAT=0 G SENDQ
"RTN","IBDF18E",119,0)
 .S I="" F  S I=$O(PXCA("IBD-ABORT",I)) Q:I=""  S J="" F  S J=$O(PXCA("IBD-ABORT",I,J)) Q:J=""  D
"RTN","IBDF18E",120,0)
 ..I +PXCA("IBD-ABORT",I,J)=3 K PXCA("IBD-ABORT",I,J) Q
"RTN","IBDF18E",121,0)
 ..D LOGERR^IBDF18E2(3570004,.FORMID,"",$P(PXCA("IBD-ABORT",I,J),"^",2))
"RTN","IBDF18E",122,0)
 ;
"RTN","IBDF18E",123,0)
 I +FORMID("SOURCE")=1 D QUE^IBDF18E3 G STAT
"RTN","IBDF18E",124,0)
 ;
"RTN","IBDF18E",125,0)
 S IBD("AICS")=1 ;flag for IBDF PCE EVENT protocol
"RTN","IBDF18E",126,0)
 S IBD("PASSFLAG")=+$P($G(^IBD(357.09,1,0)),"^",7)
"RTN","IBDF18E",127,0)
 I $G(IBD("PASSFLAG"))<2 D VALIDATE^PXCA(.PXCA) I '$D(PXCA("ERROR")) D BACKGND^PXCA(.PXCA,.PXCASTAT)
"RTN","IBDF18E",128,0)
 I $G(IBD("PASSFLAG"))>1 D FOREGND^PXCA(.PXCA,.PXCASTAT)
"RTN","IBDF18E",129,0)
 K IBD("AICS"),IBD("PASSFLAG")
"RTN","IBDF18E",130,0)
 ;
"RTN","IBDF18E",131,0)
STAT S STATUS=$$FSCND^IBDF18C(FORMID,$S(PXCASTAT=0:4,PXCASTAT=1:3,1:12),$S(PXCASTAT=0:"PCE RETURNED AN ERROR",1:""))
"RTN","IBDF18E",132,0)
 ;
"RTN","IBDF18E",133,0)
 ; -- kill erroneous inpatient warnings
"RTN","IBDF18E",134,0)
 I $D(PXCA("WARNING","ENCOUNTER"))>0 D INPT^IBDF18E0($G(FORMID("DFN")),$G(FORMID("APPT")))
"RTN","IBDF18E",135,0)
 ;
"RTN","IBDF18E",136,0)
 ; -- log pce errors and warnings in AICS Error file
"RTN","IBDF18E",137,0)
 I $O(PXCA("ERROR",""))'=""!($O(PXCA("WARNING",""))'="") S FORMID("SOURCE")=99 D LOGERR^IBDF18E2(3570001,.FORMID)
"RTN","IBDF18E",138,0)
 ;
"RTN","IBDF18E",139,0)
 ; -- if pce returns an error unflag all pages as received and delete
"RTN","IBDF18E",140,0)
 ;    all scanned data so data can be re-scanned
"RTN","IBDF18E",141,0)
SENDQ I $O(PXCA("ERROR",""))'=""!($O(PXCA("IBD-ABORT",""))'="") D UNRECV^IBDFBK2(FORMID)
"RTN","IBDF18E",142,0)
 Q +$G(PXCASTAT)
"RTN","IBDF18E0")
0^385^B20705712
"RTN","IBDF18E0",1,0)
IBDF18E0 ;ALB/CJM - ENCOUNTER FORM - PCE DEVICE INTERFACE utilities ;04-OCT-94
"RTN","IBDF18E0",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF18E0",3,0)
 ;
"RTN","IBDF18E0",4,0)
SETPXCA ;set values from TEMP() into the PXCA()
"RTN","IBDF18E0",5,0)
 ;
"RTN","IBDF18E0",6,0)
 N NODE,NUMBER,IBQUIT,Y,Y1,X
"RTN","IBDF18E0",7,0)
 S PROVIDER=+$P(PXCA("ENCOUNTER"),"^",4)
"RTN","IBDF18E0",8,0)
 I PROVIDER,"^P^S^"'[("^"_$P(PXCA("ENCOUNTER"),"^",15)_"^") S $P(PXCA("ENCOUNTER"),"^",15)="S" D LOGERR^IBDF18E2(3579603,.FORMID,"",PROVIDER)
"RTN","IBDF18E0",9,0)
 S NODE="" F  S NODE=$O(TEMP(NODE)) Q:NODE=""  S NUMBER=0,FID="" F  S FID=$O(TEMP(NODE,FID)) Q:FID=""  S ITEM="" F  S ITEM=$O(TEMP(NODE,FID,ITEM)) Q:ITEM=""  D
"RTN","IBDF18E0",10,0)
 .S IBQUIT=0
"RTN","IBDF18E0",11,0)
 .I NODE="PROCEDURE" S X=TEMP(NODE,FID,ITEM) D
"RTN","IBDF18E0",12,0)
 ..I $P(X,"^",2)="" S $P(X,"^",2)=1
"RTN","IBDF18E0",13,0)
 ..S Y=0 F  S Y=$O(PXCA(NODE,PROVIDER,Y)) Q:'Y!(IBQUIT)  D
"RTN","IBDF18E0",14,0)
 ...S Y1=$G(PXCA(NODE,PROVIDER,Y))
"RTN","IBDF18E0",15,0)
 ...I $P(X,"^")=$P(Y1,"^"),$P(X,"^",3,7)=$P(Y1,"^",3,7) S $P(PXCA(NODE,PROVIDER,Y),"^",2)=$P(PXCA(NODE,PROVIDER,Y),"^",2)+$P(X,"^",2),IBQUIT=1
"RTN","IBDF18E0",16,0)
 ..Q:IBQUIT
"RTN","IBDF18E0",17,0)
 ..S TEMP(NODE,FID,ITEM)=X
"RTN","IBDF18E0",18,0)
 .I IBQUIT K TEMP(NODE,FID,ITEM) Q
"RTN","IBDF18E0",19,0)
 .S NUMBER=NUMBER+1
"RTN","IBDF18E0",20,0)
 .S PXCA(NODE,PROVIDER,NUMBER)=TEMP(NODE,FID,ITEM)
"RTN","IBDF18E0",21,0)
 .K TEMP(NODE,FID,ITEM)
"RTN","IBDF18E0",22,0)
 ;
"RTN","IBDF18E0",23,0)
 ; -- default c/o date time to now if not passed
"RTN","IBDF18E0",24,0)
 I '$P($G(^IBD(357.09,1,1)),"^",2) D  ;cont only if s/p not answerred
"RTN","IBDF18E0",25,0)
 .I $D(PXCA("ENCOUNTER")) I $P(PXCA("ENCOUNTER"),"^",14)="" D  ;quit if we are already passing c/o date/time
"RTN","IBDF18E0",26,0)
 ..N SDOE S SDOE=$$FNDSDOE^IBDFDE($S(+$G(FORMID("DFN")):+$G(FORMID("DFN")),+$G(IBDF("DFN")):+$G(IBDF("DFN")),1:$G(DFN)),$S(+$G(FORMID("APPT")):+$G(FORMID("APPT")),+$G(IBDF("APPT")):+$G(IBDF("APPT")),1:$G(APPT)))
"RTN","IBDF18E0",27,0)
 ..Q:$$COMDT^SDCOU(+SDOE)  ;c/o already performed, don't overwrite
"RTN","IBDF18E0",28,0)
 ..S $P(PXCA("ENCOUNTER"),"^",14)=$E($$HTFM^XLFDT($H),1,12)
"RTN","IBDF18E0",29,0)
 Q
"RTN","IBDF18E0",30,0)
 ;
"RTN","IBDF18E0",31,0)
 ; -- make sure diagnosis code is added to DIAGNOSIS/PROBLEM node
"RTN","IBDF18E0",32,0)
PRO S I=0 F  S I=$O(PXCA("DIAGNOSIS/PROBLEM",I)) Q:I=""  S J=0 F  S J=$O(PXCA("DIAGNOSIS/PROBLEM",I,J)) Q:J=""  D
"RTN","IBDF18E0",33,0)
 .I $TR($P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^",5,8),"^","")']"",($P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^",2)="") S $P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^",2)="S" D
"RTN","IBDF18E0",34,0)
 ..D LOGERR^IBDF18E2(3579505,.FORMID,"",+PXCA("DIAGNOSIS/PROBLEM",I,J),"","","",$P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^",13))
"RTN","IBDF18E0",35,0)
 .Q:+$P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^")
"RTN","IBDF18E0",36,0)
 .I +$P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^",3) D
"RTN","IBDF18E0",37,0)
 ..S IBX=$P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^",3) D
"RTN","IBDF18E0",38,0)
 ...I $D(^LEX)>1 S X="LEXU" X ^%ZOSF("TEST") I $T S IBX=$$ICDONE^LEXU(IBX) S:$L(IBX)<1 IBX=799.9 Q  ; clinical lexicon next version to be in ^LEX
"RTN","IBDF18E0",39,0)
 ...S X="GMPTU" X ^%ZOSF("TEST") I $T S IBX=$$ICDONE^GMPTU(IBX) S:$L(IBX)<1 IBX=799.9 Q
"RTN","IBDF18E0",40,0)
 ...S IBX=799.9
"RTN","IBDF18E0",41,0)
 ...Q
"RTN","IBDF18E0",42,0)
 ..S IBXI=+$O(^ICD9("BA",IBX_" ",0)) I +IBXI<1 S IBXI=+$O(^ICD9("BA",799.9_" ",0))
"RTN","IBDF18E0",43,0)
 ..I +IBXI<1 D LOGERR^IBDF18E2(3579506,.FORMID,"",$P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^",3),"","","",$P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^",13)) Q
"RTN","IBDF18E0",44,0)
 ..S $P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^")=IBXI
"RTN","IBDF18E0",45,0)
 ..Q
"RTN","IBDF18E0",46,0)
 .;
"RTN","IBDF18E0",47,0)
 .; -- set diagnosis code from problem list into piece 1 of array
"RTN","IBDF18E0",48,0)
 .I +$P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^",4) S $P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^")=$$PROBDIA^IBDFBK3(+$P(PXCA("DIAGNOSIS/PROBLEM",I,J),"^",4))
"RTN","IBDF18E0",49,0)
 Q
"RTN","IBDF18E0",50,0)
 ;
"RTN","IBDF18E0",51,0)
CODES ; -- if addt'l codes to pass and qual is prim or sec, send 2nd code
"RTN","IBDF18E0",52,0)
 N VALUE,IBI
"RTN","IBDF18E0",53,0)
 Q:$G(QLFR)']""
"RTN","IBDF18E0",54,0)
 Q:"PRIMARYSECONDARY"'[$P($G(^IBD(357.98,QLFR,0)),"^")
"RTN","IBDF18E0",55,0)
 F IBI=3,4 S VALUE=$P($G(^IBD(357.95,FORMTYPE,1,BUB,2)),"^",IBI) Q:'$G(VALUE)  D
"RTN","IBDF18E0",56,0)
 .N QLFR S QLFR=$O(^IBD(357.98,"B","SECONDARY",0)),ITEM=ITEM_"."_IBI
"RTN","IBDF18E0",57,0)
 .D SETTEMP^IBDF18E1
"RTN","IBDF18E0",58,0)
 .S ITEM=$P(ITEM,".")
"RTN","IBDF18E0",59,0)
 Q
"RTN","IBDF18E0",60,0)
 ;
"RTN","IBDF18E0",61,0)
TRACKING(FORMID) ;get form tracking info,sets FORMID array, which should be passed by reference, return 0 if not found
"RTN","IBDF18E0",62,0)
 ;
"RTN","IBDF18E0",63,0)
 S NODE=$G(^IBD(357.96,FORMID,0))
"RTN","IBDF18E0",64,0)
 Q:NODE="" 0
"RTN","IBDF18E0",65,0)
 S FORMID("APPT")=$P(NODE,"^",3),FORMID("CLINIC")=$P(NODE,"^",10),FORMID("DFN")=$P(NODE,"^",2),FORMID("SOURCE")=$P(NODE,"^",7)
"RTN","IBDF18E0",66,0)
 Q 1
"RTN","IBDF18E0",67,0)
 ;
"RTN","IBDF18E0",68,0)
SC ; -- if SC answered yes then all other classifications = null
"RTN","IBDF18E0",69,0)
 I $P(PXCA("ENCOUNTER"),"^",6) S $P(PXCA("ENCOUNTER"),"^",7,9)="^^"
"RTN","IBDF18E0",70,0)
 Q
"RTN","IBDF18E0",71,0)
 ;
"RTN","IBDF18E0",72,0)
INPT(DFN,APPT) ; -- determine inpatient status
"RTN","IBDF18E0",73,0)
 N INPT
"RTN","IBDF18E0",74,0)
 S INPT=$P($G(^DPT(+$G(DFN),"S",+$G(APPT),0)),"^",2)="I"
"RTN","IBDF18E0",75,0)
 Q:'INPT
"RTN","IBDF18E0",76,0)
 ;
"RTN","IBDF18E0",77,0)
 ; -- kill erroneous warnings for inpatients
"RTN","IBDF18E0",78,0)
 I $G(PXCA("WARNING","ENCOUNTER",0,0,6))["SC flag is missing" K PXCA("WARNING","ENCOUNTER",0,0,6)
"RTN","IBDF18E0",79,0)
 I $G(PXCA("WARNING","ENCOUNTER",0,0,7))["AO flag is missing" K PXCA("WARNING","ENCOUNTER",0,0,7)
"RTN","IBDF18E0",80,0)
 I $G(PXCA("WARNING","ENCOUNTER",0,0,8))["IR flag is missing" K PXCA("WARNING","ENCOUNTER",0,0,8)
"RTN","IBDF18E0",81,0)
 I $G(PXCA("WARNING","ENCOUNTER",0,0,9))["EC flag is missing" K PXCA("WARNING","ENCOUNTER",0,0,9)
"RTN","IBDF18E0",82,0)
 Q
"RTN","IBDF18E1")
0^91^B37960932
"RTN","IBDF18E1",1,0)
IBDF18E1 ;ALB/CJM - ENCOUNTER FORM - PCE DEVICE INTERFACE utilities ;04-OCT-94
"RTN","IBDF18E1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF18E1",3,0)
 ;
"RTN","IBDF18E1",4,0)
GETPI(PI,QLFR,TYPE) ; -- returns information about the package interface 
"RTN","IBDF18E1",5,0)
 ;                    needed to map data to PCE DEVICE INTERFACE
"RTN","IBDF18E1",6,0)
 ;
"RTN","IBDF18E1",7,0)
 ; -- input - PI := pointer to the package interface file
"RTN","IBDF18E1",8,0)
 ;                  MUST be passed by reference
"RTN","IBDF18E1",9,0)
 ;          QLFR := pointer to the data qualifier
"RTN","IBDF18E1",10,0)
 ;          TYPE := pointer to file 359.1, applies to hand print fields
"RTN","IBDF18E1",11,0)
 ;
"RTN","IBDF18E1",12,0)
 ; -- output  PI :="" if the mapping can not be determined
"RTN","IBDF18E1",13,0)
 ;            PI(PI,"NODE")
"RTN","IBDF18E1",14,0)
 ;            PI(PI,"VAL")
"RTN","IBDF18E1",15,0)
 ;            PI(PI,"TXT")
"RTN","IBDF18E1",16,0)
 ;            PI(PI,"HDR")
"RTN","IBDF18E1",17,0)
 ;            PI(PI,"QLFR")
"RTN","IBDF18E1",18,0)
 ;            PI(PI,"QTY")
"RTN","IBDF18E1",19,0)
 ;      - if QLFR is passed, also returns PI(PI,QLFR,"IND")
"RTN","IBDF18E1",20,0)
 ;      - if PI(PI,QLFR,"IND")=1,meaning there is independent mapping
"RTN","IBDF18E1",21,0)
 ;        info for this qualifier - then also returns PI(PI,QLFR,"NODE")=
"RTN","IBDF18E1",22,0)
 ;        <the node>,PI(PI,QLFR,"VAL")=<piece for the value>,
"RTN","IBDF18E1",23,0)
 ;        PI(PI,QLFR,"TXT")=<the piece for txt>,PI(PI,QLFR,"HDR")=
"RTN","IBDF18E1",24,0)
 ;        <piece for the hdr>,
"RTN","IBDF18E1",25,0)
 ;        PI(PI,QLFR,"QLFR")=<piece for the qualifier code>
"RTN","IBDF18E1",26,0)
 ;      - if TYPE is passed , also returns PI(PI,"TYPE",TYPE,"UNIT")=
"RTN","IBDF18E1",27,0)
 ;        <unit code> and PI(PI,"TYPE",TYPE,"VTYPE")=
"RTN","IBDF18E1",28,0)
 ;        <vitals type code>
"RTN","IBDF18E1",29,0)
 ;
"RTN","IBDF18E1",30,0)
 ;NOTE - it is assumed that entries in the PI() may be left hanging around,and if so they are valid
"RTN","IBDF18E1",31,0)
 ;
"RTN","IBDF18E1",32,0)
 N NODE,QNODE,PIECE,IEN
"RTN","IBDF18E1",33,0)
 I '$G(PI) S PI="" G GETPIQ
"RTN","IBDF18E1",34,0)
 ;
"RTN","IBDF18E1",35,0)
 ; -- type of package interface must be for input
"RTN","IBDF18E1",36,0)
 I $P($G(^IBE(357.6,PI,0)),"^",6)'=1 S PI="" G GETPIQ
"RTN","IBDF18E1",37,0)
 ;
"RTN","IBDF18E1",38,0)
 I '$D(PI(PI)) D  Q:'PI ""
"RTN","IBDF18E1",39,0)
 .S NODE=$G(^IBE(357.6,PI,12))
"RTN","IBDF18E1",40,0)
 .S PI(PI,"NODE")=$P(NODE,"^")
"RTN","IBDF18E1",41,0)
 .S PI(PI,"VAL")=$P(NODE,"^",2)
"RTN","IBDF18E1",42,0)
 .S PI(PI,"TXT")=$P(NODE,"^",3)
"RTN","IBDF18E1",43,0)
 .S PI(PI,"HDR")=$P(NODE,"^",4)
"RTN","IBDF18E1",44,0)
 .S PI(PI,"QLFR")=$P(NODE,"^",5)
"RTN","IBDF18E1",45,0)
 .S PI(PI,"QTY")=$P(NODE,"^",6)
"RTN","IBDF18E1",46,0)
 ;
"RTN","IBDF18E1",47,0)
 ; - if there is a 'PCE DIM PIECE, VARIABLE VALUE' node, execute code to
"RTN","IBDF18E1",48,0)
 ; - determine value for PCE DIM PIECE, VALUE (since it is variable, it
"RTN","IBDF18E1",49,0)
 ; - must be asked outside of the above dotted do
"RTN","IBDF18E1",50,0)
 S X="",Y=VALUE X $G(^IBE(357.6,PI,21)) I X S PI(PI,"VAL")=X
"RTN","IBDF18E1",51,0)
 ;
"RTN","IBDF18E1",52,0)
 ;special rules apply for the VITALS node
"RTN","IBDF18E1",53,0)
 I PI(PI,"NODE")="VITALS" D  Q:'PI ""
"RTN","IBDF18E1",54,0)
 .S PI(PI,"VAL")=2 ;the value for the VITALS node goes to piece 2
"RTN","IBDF18E1",55,0)
 .;
"RTN","IBDF18E1",56,0)
 .I 'TYPE D LOGERR^IBDF18E2(35791001,.FORMID,TYPE,$G(VALUE),PI) S PI(PI,"TYPE",+$G(TYPE),"VTYPE")="",PI(PI,"TYPE",+$G(TYPE),"UNIT")="" Q
"RTN","IBDF18E1",57,0)
 .;
"RTN","IBDF18E1",58,0)
 .;may have already gotten
"RTN","IBDF18E1",59,0)
 .I $D(PI(PI,"TYPE",TYPE)) Q
"RTN","IBDF18E1",60,0)
 .;
"RTN","IBDF18E1",61,0)
 .S IEN=$O(^IBE(357.6,PI,13,"B",TYPE_";IBE(359.1,",""))
"RTN","IBDF18E1",62,0)
 .I 'IEN D LOGERR^IBDF18E2(3576001,.FORMID,TYPE,$G(VALUE),PI) S PI(PI,"TYPE",TYPE,"VTYPE")="",PI(PI,"TYPE",TYPE,"UNIT")="" Q
"RTN","IBDF18E1",63,0)
 .S NODE=$G(^IBE(359.1,TYPE,0))
"RTN","IBDF18E1",64,0)
 .S PI(PI,"TYPE",TYPE,"UNIT")=$P(NODE,"^",13)
"RTN","IBDF18E1",65,0)
 .S PI(PI,"TYPE",TYPE,"VTYPE")=$P(NODE,"^",12)
"RTN","IBDF18E1",66,0)
 ;
"RTN","IBDF18E1",67,0)
 ;if not VITALS, and there is a QLFR, get independent mapping info if not gotten previously
"RTN","IBDF18E1",68,0)
 I PI(PI,"NODE")'="VITALS",QLFR I '$D(PI(PI,QLFR,"IND")) D  Q:'PI ""
"RTN","IBDF18E1",69,0)
 .S PI(PI,QLFR,"CODE")=$P($G(^IBD(357.98,QLFR,0)),"^",2)
"RTN","IBDF18E1",70,0)
 .S IEN=$O(^IBE(357.6,PI,13,"B",QLFR_";IBD(357.98,",""))
"RTN","IBDF18E1",71,0)
 .I 'IEN D LOGERR^IBDF18E2(3576002,.FORMID,$G(TYPE),$G(VALUE),PI,$G(QLFR)) S PI(PI,QLFR,"IND")=0 Q
"RTN","IBDF18E1",72,0)
 .S NODE=$G(^IBE(357.6,PI,13,IEN,0))
"RTN","IBDF18E1",73,0)
 .S PI(PI,QLFR,"IND")=$P(NODE,"^",3)
"RTN","IBDF18E1",74,0)
 .Q:'PI(PI,QLFR,"IND")
"RTN","IBDF18E1",75,0)
 .S QNODE=$P(NODE,"^",4) S:QNODE="" QNODE=PI(PI,"NODE") S PI(PI,QLFR,"NODE")=QNODE
"RTN","IBDF18E1",76,0)
 .S PIECE=$P(NODE,"^",8) S:('PIECE)&(PI(PI,"NODE")=PI(PI,QLFR,"NODE")) PIECE=PI(PI,"QLFR") S PI(PI,QLFR,"QLFR")=PIECE
"RTN","IBDF18E1",77,0)
 .;
"RTN","IBDF18E1",78,0)
 .;if the node isn't different for the qualifier then the value,text,and header can not be mapped independently
"RTN","IBDF18E1",79,0)
 .I PI(PI,"NODE")=PI(PI,QLFR,"NODE") D
"RTN","IBDF18E1",80,0)
 ..S PI(PI,QLFR,"VAL")=PI(PI,"VAL"),PI(PI,QLFR,"TXT")=PI(PI,"TXT"),PI(PI,QLFR,"HDR")=PI(PI,"HDR")
"RTN","IBDF18E1",81,0)
 .E  S PI(PI,QLFR,"VAL")=$P(NODE,"^",5),PI(PI,QLFR,"TXT")=$P(NODE,"^",6),PI(PI,QLFR,"HDR")=$P(NODE,"^",7)
"RTN","IBDF18E1",82,0)
 .;must at least know the piece to place the returned value
"RTN","IBDF18E1",83,0)
 .I (PI(PI,QLFR,"NODE")="")!('PI(PI,QLFR,"VAL")) S PI=""
"RTN","IBDF18E1",84,0)
 ;
"RTN","IBDF18E1",85,0)
 ;must at least know the node and the piece to place the returned value
"RTN","IBDF18E1",86,0)
 I 'QLFR I (PI(PI,"NODE")="")!('PI(PI,"VAL")) S PI=""
"RTN","IBDF18E1",87,0)
GETPIQ Q PI
"RTN","IBDF18E1",88,0)
 ;
"RTN","IBDF18E1",89,0)
SETTEMP ;sets values for the field into TEMP() - values are merged for fields that consist of a collection
"RTN","IBDF18E1",90,0)
 ;
"RTN","IBDF18E1",91,0)
 ; -- Output   QCODE := <qualifier code>
"RTN","IBDF18E1",92,0)
 ;              PHDR := <header piece>
"RTN","IBDF18E1",93,0)
 ;              PVAL := <value piece>
"RTN","IBDF18E1",94,0)
 ;              PTXT := <text piece>
"RTN","IBDF18E1",95,0)
 ;             PQLFR := <qualifier piece>
"RTN","IBDF18E1",96,0)
 ;               SUB := <PCE GDI node>
"RTN","IBDF18E1",97,0)
 ;              NODE := <the value of the node>
"RTN","IBDF18E1",98,0)
 ;              PLEX := <clinical lexicon piece, for use with diag.>
"RTN","IBDF18E1",99,0)
 ;
"RTN","IBDF18E1",100,0)
 N QCODE,PHDR,PVAL,PTXT,PQLFR,SUB,NODE,PLEX,PQTY,SAVEPI
"RTN","IBDF18E1",101,0)
 S SAVEPI=PI
"RTN","IBDF18E1",102,0)
 Q:'PI
"RTN","IBDF18E1",103,0)
 S PI=$$GETPI(.PI,QLFR,TYPE) I 'PI D LOGERR^IBDF18E2(3576003,.FORMID,$G(TYPE),$G(VALUE),SAVEPI,$G(QLFR)) Q
"RTN","IBDF18E1",104,0)
 ;
"RTN","IBDF18E1",105,0)
 S QCODE=$S(QLFR:PI(PI,QLFR,"CODE"),1:"")
"RTN","IBDF18E1",106,0)
 ;
"RTN","IBDF18E1",107,0)
 ;determine if QCODE should be passed as VALUE
"RTN","IBDF18E1",108,0)
 I $P($G(^IBE(357.6,PI,20)),"^") N VALUE S VALUE=QCODE
"RTN","IBDF18E1",109,0)
 ;
"RTN","IBDF18E1",110,0)
 S PQTY=PI(PI,"QTY")
"RTN","IBDF18E1",111,0)
 ;mapping info could come from several different sources depending on whether or not a data qualifier is involved or the node=VITALS or ENCOUNTER
"RTN","IBDF18E1",112,0)
 I QLFR,PI(PI,"NODE")'="VITALS",PI(PI,"NODE")'="ENCOUNTER" I PI(PI,QLFR,"IND") D
"RTN","IBDF18E1",113,0)
 .S PHDR=PI(PI,QLFR,"HDR"),PVAL=PI(PI,QLFR,"VAL"),PTXT=PI(PI,QLFR,"TXT"),PQLFR=PI(PI,QLFR,"QLFR"),SUB=PI(PI,QLFR,"NODE")
"RTN","IBDF18E1",114,0)
 E  D
"RTN","IBDF18E1",115,0)
 .S PHDR=PI(PI,"HDR"),PVAL=PI(PI,"VAL"),PTXT=PI(PI,"TXT"),PQLFR=PI(PI,"QLFR"),SUB=PI(PI,"NODE")
"RTN","IBDF18E1",116,0)
 ;
"RTN","IBDF18E1",117,0)
 ;the ENCOUNTER node is treated differently, because there is always just one of them
"RTN","IBDF18E1",118,0)
 S:SUB'="ENCOUNTER" NODE=$G(TEMP(SUB,$P(FID,"("),+ITEM))
"RTN","IBDF18E1",119,0)
 S:SUB="ENCOUNTER" NODE=$G(PXCA("ENCOUNTER"))
"RTN","IBDF18E1",120,0)
 ;
"RTN","IBDF18E1",121,0)
 ; -- define clin lex pointer if from data enty  ($d(ibdf(item)))
"RTN","IBDF18E1",122,0)
 ;    if from scanning clin lex pointer defined in ibdf18e
"RTN","IBDF18E1",123,0)
 S PLEX=0 I SUB="DIAGNOSIS/PROBLEM" D
"RTN","IBDF18E1",124,0)
 .S PLEX=3
"RTN","IBDF18E1",125,0)
 .I $D(IBDF(ITEM)) S LEX=$P(IBDF(ITEM),"^",5)
"RTN","IBDF18E1",126,0)
 ;
"RTN","IBDF18E1",127,0)
 ;the VITALS node is also treated differently
"RTN","IBDF18E1",128,0)
 I SUB="VITALS" D
"RTN","IBDF18E1",129,0)
 .S $P(NODE,"^")=PI(PI,"TYPE",TYPE,"VTYPE"),$P(NODE,"^",3)=PI(PI,"TYPE",TYPE,"UNIT"),$P(NODE,"^",2)=VALUE,$P(NODE,"^",4)=+$G(PXCA("ENCOUNTER"))
"RTN","IBDF18E1",130,0)
 ;these are nodes other than VITALS and ENCOUNTER
"RTN","IBDF18E1",131,0)
 E  D
"RTN","IBDF18E1",132,0)
 .;merge the data into the node
"RTN","IBDF18E1",133,0)
 .;
"RTN","IBDF18E1",134,0)
 .; -- for second provider entry put in provider node, always put
"RTN","IBDF18E1",135,0)
 .;    primary in encounter node
"RTN","IBDF18E1",136,0)
 .I SUB="ENCOUNTER",PVAL=4,$P(NODE,"^",4) D  Q
"RTN","IBDF18E1",137,0)
 ..I QCODE="P",$P(NODE,"^",15)'="P" S PXCA("PROVIDER",$P(NODE,"^",4))=$P(NODE,"^",15),$P(NODE,"^",4)=VALUE,$P(NODE,"^",15)=QCODE Q
"RTN","IBDF18E1",138,0)
 ..S PXCA("PROVIDER",VALUE)=QCODE Q
"RTN","IBDF18E1",139,0)
 .;
"RTN","IBDF18E1",140,0)
 .I $P(NODE,"^",PVAL)="" S $P(NODE,"^",PVAL)=VALUE
"RTN","IBDF18E1",141,0)
 .I PTXT I $L($P(NODE,"^",PTXT))<$L(TEXT) S $P(NODE,"^",PTXT)=TEXT
"RTN","IBDF18E1",142,0)
 .I PHDR I $L($P(NODE,"^",PHDR))<$L(HEADER) S $P(NODE,"^",PHDR)=HEADER
"RTN","IBDF18E1",143,0)
 .I PQTY S $P(NODE,"^",PQTY)=QUANTITY
"RTN","IBDF18E1",144,0)
 .;
"RTN","IBDF18E1",145,0)
 .; -- insert clin lex pointer into temp arry and re-initialize
"RTN","IBDF18E1",146,0)
 .I $G(PLEX),$G(LEX) S $P(NODE,"^",PLEX)=LEX
"RTN","IBDF18E1",147,0)
 .S LEX=0
"RTN","IBDF18E1",148,0)
 .;
"RTN","IBDF18E1",149,0)
 .I QCODE'="" S $P(NODE,"^",PQLFR)=$S($P(NODE,"^",PQLFR)'="":$P(NODE,"^",PQLFR)_","_QCODE,1:QCODE)
"RTN","IBDF18E1",150,0)
 S:SUB'="ENCOUNTER" TEMP(SUB,$P(FID,"("),+ITEM)=NODE
"RTN","IBDF18E1",151,0)
 S:SUB="ENCOUNTER" PXCA(SUB)=NODE
"RTN","IBDF18E1",152,0)
 Q
"RTN","IBDF18E1",153,0)
 ;
"RTN","IBDF18E1",154,0)
LOG(ERROR) ;report or log the error
"RTN","IBDF18E1",155,0)
 Q
"RTN","IBDF18E1",156,0)
 ; -- replaced by logerr^ibdf18e2, left for historical debugging
"RTN","IBDF18E1",157,0)
 ; -- log errors in ^xtmp("ibd-err"_date, form id,cnt) :=
"RTN","IBDF18E1",158,0)
 ;    patient ^ appt. date ^ user duz ^ form(in 357) ^ error message
"RTN","IBDF18E1",159,0)
 ;
"RTN","IBDF18E1",160,0)
 N GLB,ECNT,X
"RTN","IBDF18E1",161,0)
 S GLB="IBD-ERR "_DT
"RTN","IBDF18E1",162,0)
 I '$D(^XTMP(GLB,0)) S ^XTMP(GLB,0)=$$FMADD^XLFDT(DT,30)_"^"_DT_"^"_0
"RTN","IBDF18E1",163,0)
 L +^XTMP(GLB,0):1 S ECNT=$P(^XTMP(GLB,0),"^",3)+1,$P(^XTMP(GLB,0),"^",3)=ECNT
"RTN","IBDF18E1",164,0)
 L -^XTMP(GLB,0)
"RTN","IBDF18E1",165,0)
 S X=$G(^IBD(357.96,+$G(FORMID),0))
"RTN","IBDF18E1",166,0)
 S ^XTMP(GLB,+$G(FORMID),ECNT)=+$P(X,"^",2)_"^"_+$P(X,"^",3)_"^"_+$G(DUZ)_"^"_$P($G(^IBD(357.95,+$P(X,"^",4),0)),"^",21)_"^"_ERROR
"RTN","IBDF18E1",167,0)
 Q
"RTN","IBDF18E2")
0^381^B11690111
"RTN","IBDF18E2",1,0)
IBDF18E2 ;ALB/AAS - AICS Error Logging Routine ;27-JAN-97
"RTN","IBDF18E2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF18E2",3,0)
 ;
"RTN","IBDF18E2",4,0)
LOGERR(ERRNO,FORMID,DATANO,VALUE,PI,QLFR,TYPEDTA,TXT) ;
"RTN","IBDF18E2",5,0)
 ; -- log aics scanning processing error
"RTN","IBDF18E2",6,0)
 N TEXT,IBDERR
"RTN","IBDF18E2",7,0)
 S TEXT(1)=$$NOW^XLFDT
"RTN","IBDF18E2",8,0)
 S TEXT(2)=$P($G(^IBD(357.96,+$G(FORMID),0)),"^",2) I 'TEXT(2) S TEXT(2)=$G(DFN) ; -- dfn
"RTN","IBDF18E2",9,0)
 S TEXT(3)=$G(FORMID("APPT")) ; -- encounter date/time
"RTN","IBDF18E2",10,0)
 S TEXT(4)=$P($G(^IBD(357.96,+$G(FORMID),0)),"^",4) ; -- pointer to 357.95
"RTN","IBDF18E2",11,0)
 S TEXT(5)=$G(FORMID) S:+TEXT(5) TEXT(5)=+TEXT(5) ; -- pointer to 357.96
"RTN","IBDF18E2",12,0)
 S:$G(DATANO)'="" TEXT(6)=$G(DATANO) ; -- number of bubble or hand print field (ie BUBBLE(1)
"RTN","IBDF18E2",13,0)
 S:$G(VALUE)'="" TEXT(7)=$G(VALUE) ; -- value of bubble or hand print field
"RTN","IBDF18E2",14,0)
 S TEXT(8)=$G(FORMID("SOURCE"))
"RTN","IBDF18E2",15,0)
 S TEXT(9)=$P($G(^IBD(357.95,+$P($G(^IBD(357.96,+$G(FORMID),0)),"^",4),0)),"^",21) ; -- form name
"RTN","IBDF18E2",16,0)
 S:$G(PI)'="" TEXT(10)=$G(PI) ; -- package interface
"RTN","IBDF18E2",17,0)
 S:$G(QLFR)'="" TEXT(11)=$G(QLFR) ; -- name of qualifier
"RTN","IBDF18E2",18,0)
 S:$G(TXT)'="" TEXT(12)=$G(TXT) ; -- Text appearing on the form
"RTN","IBDF18E2",19,0)
 S TEXT(13)=$G(DUZ) ; -- user
"RTN","IBDF18E2",20,0)
 S:$G(TYPEDTA)'="" TEXT(14)=$P($G(^IBE(359.1,+TYPEDTA,0)),"^")
"RTN","IBDF18E2",21,0)
 S:$G(XQY0)'="" TEXT(15)=$P(XQY0,"^") ; -- option name
"RTN","IBDF18E2",22,0)
 S TEXT(16)=$G(ERRNO) ; -- entry in dialog file
"RTN","IBDF18E2",23,0)
 S:$G(FORMID("PAGE")) TEXT(17)=$G(FORMID("PAGE"))
"RTN","IBDF18E2",24,0)
 ;
"RTN","IBDF18E2",25,0)
 ; -- Build Error Message from Dialog file
"RTN","IBDF18E2",26,0)
 D BLD^DIALOG(ERRNO,.TEXT,.IBDOUT,"IBDERR","S")
"RTN","IBDF18E2",27,0)
 ;D ERRMSG(ERRNO,.TEXT)
"RTN","IBDF18E2",28,0)
 ;
"RTN","IBDF18E2",29,0)
 ; -- file error in aics error log file
"RTN","IBDF18E2",30,0)
 D ERRFIL(ERRNO,.TEXT,.IBDERR)
"RTN","IBDF18E2",31,0)
 Q:ERRNO=3570001!(ERRNO=3570004)
"RTN","IBDF18E2",32,0)
 ;
"RTN","IBDF18E2",33,0)
 ; -- set error in pxca(aics error) array to pass back to workstation
"RTN","IBDF18E2",34,0)
 S CNT=$G(PXCA("AICS ERROR"))+1
"RTN","IBDF18E2",35,0)
 S PXCA("AICS ERROR")=CNT
"RTN","IBDF18E2",36,0)
 S PXCA("AICS ERROR",1,1,1,CNT)=$P($G(IBDERR(1)),": ",2,99)
"RTN","IBDF18E2",37,0)
 Q
"RTN","IBDF18E2",38,0)
 ;
"RTN","IBDF18E2",39,0)
ERRMSG(ERRNO,TEXT) ;
"RTN","IBDF18E2",40,0)
 ; -- Build Error Message from Dialog file
"RTN","IBDF18E2",41,0)
 D BLD^DIALOG(ERRNO,.TEXT,.IBDOUT,"IBDERR","S")
"RTN","IBDF18E2",42,0)
 Q
"RTN","IBDF18E2",43,0)
 ;
"RTN","IBDF18E2",44,0)
ERRFIL(ERRNO,TEXT,IBDERR) ;
"RTN","IBDF18E2",45,0)
 ; -- file error in aics error log file
"RTN","IBDF18E2",46,0)
 N FDAROOT,FDAIEN
"RTN","IBDF18E2",47,0)
 ;
"RTN","IBDF18E2",48,0)
 Q:$G(TEXT(1))=""
"RTN","IBDF18E2",49,0)
 S FDAROOT(359.3,"+1,",.01)=$G(TEXT(1))
"RTN","IBDF18E2",50,0)
 S:$G(TEXT(2))'="" FDAROOT(359.3,"+1,",.02)=$G(TEXT(2))
"RTN","IBDF18E2",51,0)
 S:$G(TEXT(3))'="" FDAROOT(359.3,"+1,",.03)=$G(TEXT(3))
"RTN","IBDF18E2",52,0)
 S:$G(TEXT(4))'="" FDAROOT(359.3,"+1,",.04)=$G(TEXT(4))
"RTN","IBDF18E2",53,0)
 S:$G(TEXT(5))'="" FDAROOT(359.3,"+1,",.05)=$G(TEXT(5))
"RTN","IBDF18E2",54,0)
 S:$G(TEXT(6))'="" FDAROOT(359.3,"+1,",.06)=$G(TEXT(6))
"RTN","IBDF18E2",55,0)
 S:$G(TEXT(7))'="" FDAROOT(359.3,"+1,",.07)=$G(TEXT(7))
"RTN","IBDF18E2",56,0)
 S:$G(TEXT(8))'="" FDAROOT(359.3,"+1,",.08)=$G(TEXT(8))
"RTN","IBDF18E2",57,0)
 S:$G(TEXT(9))'="" FDAROOT(359.3,"+1,",.09)=$G(TEXT(9))
"RTN","IBDF18E2",58,0)
 S:$G(TEXT(10))'="" FDAROOT(359.3,"+1,",.1)=$G(TEXT(10))
"RTN","IBDF18E2",59,0)
 S:$G(TEXT(11))'="" FDAROOT(359.3,"+1,",.11)=$G(TEXT(11))
"RTN","IBDF18E2",60,0)
 S:$G(TEXT(12))'="" FDAROOT(359.3,"+1,",.12)=$G(TEXT(12))
"RTN","IBDF18E2",61,0)
 S:$G(TEXT(13))'="" FDAROOT(359.3,"+1,",.13)=$G(TEXT(13))
"RTN","IBDF18E2",62,0)
 S:$G(TEXT(16))'="" FDAROOT(359.3,"+1,",.16)=$G(TEXT(16))
"RTN","IBDF18E2",63,0)
 S:$G(TEXT(15))'="" FDAROOT(359.3,"+1,",1.01)=$G(TEXT(15))
"RTN","IBDF18E2",64,0)
 ;
"RTN","IBDF18E2",65,0)
 S CNT=2
"RTN","IBDF18E2",66,0)
 I ERRNO=3570001 D EW^IBDFBK2(.IBDERR,.PXCA,.CNT,1)
"RTN","IBDF18E2",67,0)
 ;
"RTN","IBDF18E2",68,0)
 D UPDATE^DIE("","FDAROOT","FDAIEN")
"RTN","IBDF18E2",69,0)
 D WP^DIE(359.3,FDAIEN(1)_",",10,"KA","IBDERR")
"RTN","IBDF18E2",70,0)
 Q
"RTN","IBDF18E2",71,0)
 ;
"RTN","IBDF18E2",72,0)
PRT ; -- print error listing
"RTN","IBDF18E2",73,0)
 I '$D(IOF) D HOME^%ZIS
"RTN","IBDF18E2",74,0)
 W @IOF,?10,"Print List of Scanning Errors and Warnings",!!!
"RTN","IBDF18E2",75,0)
 ;
"RTN","IBDF18E2",76,0)
 S DIC="^IBD(359.3,",L=0,FR="?,?,?,?",TO="?,?,?,?"
"RTN","IBDF18E2",77,0)
 S BY="[IBD LIST ERRORS]"
"RTN","IBDF18E2",78,0)
 S FLDS="[IBD LIST ERRORS]"
"RTN","IBDF18E2",79,0)
 ;
"RTN","IBDF18E2",80,0)
 ;S DISUPNO=1 ; -- print No records found if not set, don't uncomment this line
"RTN","IBDF18E2",81,0)
 S DIPCRIT=1 ; -- print sort criteria on first page.
"RTN","IBDF18E2",82,0)
 S DIS(0)="I '$P($G(^IBD(359.3,D0,1)),U,2)"
"RTN","IBDF18E2",83,0)
 D EN1^DIP
"RTN","IBDF18E2",84,0)
PRTQ K DIC,L,FLDS,DIOEND,FR,TO,BY,DHD,X,Y,DUOUT,DIRUT
"RTN","IBDF18E2",85,0)
 Q
"RTN","IBDF18E3")
0^386^B875886
"RTN","IBDF18E3",1,0)
IBDF18E3 ;ALB/AAS - ENCOUNTER FORM - PCE DEVICE INTERFACE utilities ;04-OCT-94
"RTN","IBDF18E3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF18E3",3,0)
 ;
"RTN","IBDF18E3",4,0)
QUE ; -- always task off from scanner
"RTN","IBDF18E3",5,0)
 S IBD("AICS")=1 ;flag for IBDF PCE EVENT protocol
"RTN","IBDF18E3",6,0)
 D VALIDATE^PXCA(.PXCA,.PXCAVSIT)
"RTN","IBDF18E3",7,0)
 I $D(PXCA("ERROR")) S PXCASTAT=0 Q
"RTN","IBDF18E3",8,0)
 I '$D(PXCA("ERROR")) S PXCASTAT=1
"RTN","IBDF18E3",9,0)
 ;
"RTN","IBDF18E3",10,0)
 S ZTDTH=$H,ZTRTN="DQ^IBDF18E3"
"RTN","IBDF18E3",11,0)
 S ZTSAVE("PXCA(")="",ZTSAVE("PX*")="",ZTSAVE("IBD(""AICS"")")=""
"RTN","IBDF18E3",12,0)
 S ZTDESC="IBD - Pass scanning data to PCE"
"RTN","IBDF18E3",13,0)
 S ZTIO="IBD RESOURCE"
"RTN","IBDF18E3",14,0)
 D ^%ZTLOAD
"RTN","IBDF18E3",15,0)
 ;
"RTN","IBDF18E3",16,0)
 K IBD("AICS")
"RTN","IBDF18E3",17,0)
 Q
"RTN","IBDF18E3",18,0)
 ;
"RTN","IBDF18E3",19,0)
DQ ; -- entry point from taskman
"RTN","IBDF18E3",20,0)
 D FOREGND^PXCA(.PXCA,.PXCASTAT)
"RTN","IBDF18E3",21,0)
 S ZTREQ="@"
"RTN","IBDF18E3",22,0)
 K PXCA,PXCASTAT,IBD,IBDSEL,IBDF
"RTN","IBDF18E3",23,0)
 Q
"RTN","IBDF19")
0^92^B22187387
"RTN","IBDF19",1,0)
IBDF19 ;ALB/CJM - ENCOUNTER FORM (compile forms,delete workcopy);NOV 22,1993
"RTN","IBDF19",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF19",3,0)
GARBAGE ;delete unused blocks (belonging to WORKCOPY form)
"RTN","IBDF19",4,0)
 N IBJUNK,BLK,CR,FORM
"RTN","IBDF19",5,0)
 ;
"RTN","IBDF19",6,0)
 ;first delete unused workcopy blocks
"RTN","IBDF19",7,0)
 ;find the form=WORKCOPY, used as a work area
"RTN","IBDF19",8,0)
 S IBJUNK=+$O(^IBE(357,"B","WORKCOPY",""))
"RTN","IBDF19",9,0)
 ;clean up blocks not being used
"RTN","IBDF19",10,0)
 S BLK=0 F  S BLK=$O(^IBE(357.1,"C",IBJUNK,BLK)) Q:'BLK  L +^IBE(357.1,BLK):1 I $T D DLTBLK^IBDFU3(BLK,IBJUNK,357.1) L -^IBE(357.1,BLK)
"RTN","IBDF19",11,0)
 W !,"Blocks not belonging to any form have been deleted"
"RTN","IBDF19",12,0)
 ;
"RTN","IBDF19",13,0)
 ;delete cross-references for compilied forms if the forms have been deleted
"RTN","IBDF19",14,0)
 F CR="AT","AC","AG","AU","AB" S FORM=0 F  S FORM=$O(^IBE(357,CR,FORM)) Q:'FORM  I '$D(^IBE(357,FORM)) K ^IBE(357,CR,FORM)
"RTN","IBDF19",15,0)
 W !,"Extraneous cross-references on non-existant forms have been deleted"
"RTN","IBDF19",16,0)
 Q
"RTN","IBDF19",17,0)
 ;
"RTN","IBDF19",18,0)
 ;
"RTN","IBDF19",19,0)
COMPILE ;compiles IBFORM at the form level - leaves blocks already compiled alone
"RTN","IBDF19",20,0)
 ;
"RTN","IBDF19",21,0)
 ;lock the form while compiling
"RTN","IBDF19",22,0)
 Q:'$$LOCKFORM^IBDFU7(IBFORM)
"RTN","IBDF19",23,0)
 ;compile it only if not already compiled - it could have been compiled by another process while the form was being locked
"RTN","IBDF19",24,0)
 I $$FORMDSCR^IBDFU1C(.IBFORM) I 'IBFORM("COMPILED") D
"RTN","IBDF19",25,0)
 .N IBARRAY,IBDEVICE,IBPRINT,DFN,IBCLINIC,IBAPPT,SUB
"RTN","IBDF19",26,0)
 .S (IBDEVICE("RASTER"),IBDEVICE("GRAPHICS"))=1
"RTN","IBDF19",27,0)
 .S (IBDEVICE("CRT"),IBDEVICE("LISTMAN"),IBAPPT,IBCLINIC,DFN,IBDEVICE("PCL"))=0
"RTN","IBDF19",28,0)
 .D UNCMPL(.IBFORM,0)
"RTN","IBDF19",29,0)
 .D PRNTPRMS^IBDFU1C(.IBPRINT,0,1,0,1)
"RTN","IBDF19",30,0)
 .D ARRAYS^IBDFU1C(.IBFORM,.IBARRAY)
"RTN","IBDF19",31,0)
 .K ^TMP("IB",$J,"INTERFACES")
"RTN","IBDF19",32,0)
 .S SUB="" F  S SUB=$O(IBARRAY(SUB)) Q:SUB=""  K @IBARRAY(SUB)
"RTN","IBDF19",33,0)
 .D DRWBLKS^IBDF2A
"RTN","IBDF19",34,0)
 .S:IBFORM("COMPILED")'="F" IBFORM("COMPILED")=1
"RTN","IBDF19",35,0)
 .S $P(^IBE(357,IBFORM,0),"^",5)=IBFORM("COMPILED")
"RTN","IBDF19",36,0)
 .; -- if form not scannable and it compiled w/o formtype id...get one
"RTN","IBDF19",37,0)
 .I 'IBFORM("SCAN"),IBFORM("COMPILED"),'$P(^IBE(357,IBFORM,0),"^",13) S IBFORM("TYPE")=$$FORMTYPE^IBDF18D(1) I IBFORM("TYPE") S $P(^IBE(357,IBFORM,0),"^",13)=IBFORM("TYPE")
"RTN","IBDF19",38,0)
 .S:$P(^IBE(357,IBFORM,0),"^",13) ^IBE(357,"ADEF",$P(^IBE(357,IBFORM,0),"^",13),IBFORM)=""
"RTN","IBDF19",39,0)
 .K ^TMP("IB",$J,"INTERFACES"),X,Y,I
"RTN","IBDF19",40,0)
 D FREEFORM^IBDFU7(IBFORM)
"RTN","IBDF19",41,0)
 ; -- build form spec if form compiled successfully
"RTN","IBDF19",42,0)
 I IBFORM("SCAN"),IBFORM("COMPILED"),IBFORM("TYPE") D SCAN^IBDFBKS(IBFORM("TYPE"))
"RTN","IBDF19",43,0)
 Q
"RTN","IBDF19",44,0)
 ;
"RTN","IBDF19",45,0)
ASKCMPL(IBFORM) ;ask if the form should be compiled or uncompiled
"RTN","IBDF19",46,0)
 Q:'$G(IBFORM)
"RTN","IBDF19",47,0)
 N BLK,QUIT S QUIT=0
"RTN","IBDF19",48,0)
 I $P($G(^IBE(357,IBFORM,0)),"^",5) D
"RTN","IBDF19",49,0)
 .W !,"The form is currently compiled. Should it be recompiled?"
"RTN","IBDF19",50,0)
 .K DIR S DIR(0)="Y",DIR("B")="YES"
"RTN","IBDF19",51,0)
 .D ^DIR K DIR
"RTN","IBDF19",52,0)
 .S:$D(DUOUT)!(Y'=1) QUIT=1
"RTN","IBDF19",53,0)
 Q:QUIT
"RTN","IBDF19",54,0)
 ;uncompile the form
"RTN","IBDF19",55,0)
 D UNCMPALL(IBFORM)
"RTN","IBDF19",56,0)
 Q
"RTN","IBDF19",57,0)
 ;
"RTN","IBDF19",58,0)
CMPLACTN ;action for compiling a form listed on the screen
"RTN","IBDF19",59,0)
 N IBFORM
"RTN","IBDF19",60,0)
 I $G(IBAPI("SELECT"))'="" X IBAPI("SELECT")
"RTN","IBDF19",61,0)
 I IBFORM D ASKCMPL(IBFORM)
"RTN","IBDF19",62,0)
 S VALMBCK="R"
"RTN","IBDF19",63,0)
 Q
"RTN","IBDF19",64,0)
 ;
"RTN","IBDF19",65,0)
KILLTBL(IBFORM) ;
"RTN","IBDF19",66,0)
 ; -- marks the FORM DEFINITION TABLE for deletion
"RTN","IBDF19",67,0)
 ;    IBFORM("TYPE") is reset to "", pass IBFORM by reference
"RTN","IBDF19",68,0)
 ;
"RTN","IBDF19",69,0)
 Q:'IBFORM("TYPE")
"RTN","IBDF19",70,0)
 ;
"RTN","IBDF19",71,0)
 ; -- Mark forms for deletion
"RTN","IBDF19",72,0)
 S $P(^IBD(357.95,IBFORM("TYPE"),0),"^",2)=DT,^IBD(357.95,"ADEL",DT,IBFORM("TYPE"))=""
"RTN","IBDF19",73,0)
 K ^IBE(357,"ADEF",IBFORM("TYPE"),IBFORM) ; kill cross reference
"RTN","IBDF19",74,0)
 S IBFORM("TYPE")="",$P(^IBE(357,IBFORM,0),"^",13)=""
"RTN","IBDF19",75,0)
 Q
"RTN","IBDF19",76,0)
 ;
"RTN","IBDF19",77,0)
UNCMPL(IBFORM,FAILED) ;marks the form as not compiled and deletes or marks for deletion the FORM DEFINITION TABLE
"RTN","IBDF19",78,0)
 ;leaves the blocks compiled
"RTN","IBDF19",79,0)
 ;if FAILED means compilation of form was attempted, but failed - mark form accordingly
"RTN","IBDF19",80,0)
 ;IBFORM is the form - if passed by reference IBFORM("TYPE") and IBFORM("COMPILED") are set
"RTN","IBDF19",81,0)
 ;
"RTN","IBDF19",82,0)
 Q:'IBFORM
"RTN","IBDF19",83,0)
 N NODE
"RTN","IBDF19",84,0)
 S NODE=$G(^IBE(357,IBFORM,0))
"RTN","IBDF19",85,0)
 S IBFORM("SCAN")=$P(NODE,"^",12),IBFORM("TYPE")=$P(NODE,"^",13)
"RTN","IBDF19",86,0)
 D:IBFORM("TYPE") KILLTBL(.IBFORM)
"RTN","IBDF19",87,0)
 S IBFORM("COMPILED")=$S($G(FAILED):"F",1:0),$P(^IBE(357,IBFORM,0),"^",5)=IBFORM("COMPILED")
"RTN","IBDF19",88,0)
 Q
"RTN","IBDF19",89,0)
 ;
"RTN","IBDF19",90,0)
UNCMPALL(IBFORM) ;uncompile the form and it's blocks
"RTN","IBDF19",91,0)
 N BLK
"RTN","IBDF19",92,0)
 D UNCMPL(IBFORM,0)
"RTN","IBDF19",93,0)
 ;also uncompile all of its blocks
"RTN","IBDF19",94,0)
 S BLK=0 F  S BLK=$O(^IBE(357.1,"C",IBFORM,BLK)) Q:'BLK  D UNCMPBLK^IBDF19(BLK)
"RTN","IBDF19",95,0)
 Q
"RTN","IBDF19",96,0)
BLKCHNG(FORM,BLOCK) ;call this if the block is edited - uncompiles the block and form
"RTN","IBDF19",97,0)
 D UNCMPBLK(BLOCK)
"RTN","IBDF19",98,0)
 D UNCMPL(FORM)
"RTN","IBDF19",99,0)
 Q
"RTN","IBDF19",100,0)
 ;
"RTN","IBDF19",101,0)
UNCMPBLK(BLOCK) ;delete the compiled version of the block
"RTN","IBDF19",102,0)
 K ^IBE(357.1,BLOCK,"V"),^IBE(357.1,BLOCK,"S"),^IBE(357.1,BLOCK,"B"),^IBE(357.1,BLOCK,"H")
"RTN","IBDF19",103,0)
 Q
"RTN","IBDF19",104,0)
 ;
"RTN","IBDF19",105,0)
KILL(TYPE) ;deletes the form definition=TYPE
"RTN","IBDF19",106,0)
 K ^IBD(357.95,"AC",TYPE),^IBD(357.95,TYPE,1)
"RTN","IBDF19",107,0)
 K ^IBD(357.95,"AD",TYPE),^IBD(357.95,TYPE,2)
"RTN","IBDF19",108,0)
 K DA S DIK="^IBD(357.95,",DA=TYPE D ^DIK K DIK,DA
"RTN","IBDF19",109,0)
 Q
"RTN","IBDF19",110,0)
 ;
"RTN","IBDF19",111,0)
RECMPALL ;causes all forms to be recompiled
"RTN","IBDF19",112,0)
 N IBFORM,IBQUIT,DIR,DIRUT,DUOUT,DTOUT
"RTN","IBDF19",113,0)
 S IBQUIT=0
"RTN","IBDF19",114,0)
 I '$D(ZTQUEUED) D
"RTN","IBDF19",115,0)
 .S DIR("?")="Enter 'Yes' to cause all forms to uncompile or 'No' to do nothing.  Forms will actually recompile as they are printed."
"RTN","IBDF19",116,0)
 .S DIR(0)="Y",DIR("A")="Do you really want to Recompile all Forms"
"RTN","IBDF19",117,0)
 .D ^DIR S IBQUIT='Y
"RTN","IBDF19",118,0)
 I $G(IBQUIT) W !!,"Okay, nothing recompiled" Q
"RTN","IBDF19",119,0)
 ;
"RTN","IBDF19",120,0)
 W:'$D(ZTQUEUED) !!,"Uncompiling all forms..."
"RTN","IBDF19",121,0)
 S IBFORM=0
"RTN","IBDF19",122,0)
 F  S IBFORM=$O(^IBE(357,IBFORM)) Q:'IBFORM  D
"RTN","IBDF19",123,0)
 .Q:'$$LOCKFORM^IBDFU7(IBFORM)
"RTN","IBDF19",124,0)
 .D UNCMPALL(IBFORM)
"RTN","IBDF19",125,0)
 .D FREEFORM^IBDFU7(IBFORM)
"RTN","IBDF19",126,0)
 .W:'$D(ZTQUEUED) "."
"RTN","IBDF19",127,0)
 W:'$D(ZTQUEUED) !!,"Okay, forms will be recompiled as they are printed."
"RTN","IBDF19",128,0)
 Q
"RTN","IBDF1A")
0^93^B15995674
"RTN","IBDF1A",1,0)
IBDF1A ;ALB/CJM - ENCOUNTER FORM (prints for a single patient);NOV 16,1992
"RTN","IBDF1A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF1A",3,0)
MAIN(WITHDATA) ;
"RTN","IBDF1A",4,0)
 ; -- prints encounter forms, either with patient data for a patient 
"RTN","IBDF1A",5,0)
 ;    with no appointment (in which case it uses time of printing as
"RTN","IBDF1A",6,0)
 ;    the appointment time) or without patient data (only if a form
"RTN","IBDF1A",7,0)
 ;    is defined for the clinic for such use)
"RTN","IBDF1A",8,0)
 ;    $G(WITDATA) if the form should be printed with data
"RTN","IBDF1A",9,0)
 ;    0 if a blank form for use without patient data should be printed
"RTN","IBDF1A",10,0)
 ;
"RTN","IBDF1A",11,0)
 N IBF,FORMS,NODE,IBPM
"RTN","IBDF1A",12,0)
 ;FORMS = list of forms in form^form^... format
"RTN","IBDF1A",13,0)
 ;IBI is a counter used to parse FORMS
"RTN","IBDF1A",14,0)
 ;IBPM=1 if forms defined in print manager should be printed
"RTN","IBDF1A",15,0)
 N IBFLAG
"RTN","IBDF1A",16,0)
 S IBFLAG=1
"RTN","IBDF1A",17,0)
 S WITHDATA=+$G(WITHDATA)
"RTN","IBDF1A",18,0)
 K ^TMP("IB",$J),^TMP("IBDF",$J)
"RTN","IBDF1A",19,0)
 S (IBPM,IBQUIT)=0,DFN=""
"RTN","IBDF1A",20,0)
 D CLINIC G:IBQUIT EXIT
"RTN","IBDF1A",21,0)
 I WITHDATA D  G:IBQUIT EXIT
"RTN","IBDF1A",22,0)
 .D PATIENT Q:IBQUIT
"RTN","IBDF1A",23,0)
 .D NOW
"RTN","IBDF1A",24,0)
 .D WHCHFORM
"RTN","IBDF1A",25,0)
 I 'WITHDATA D FORM G:IBQUIT EXIT
"RTN","IBDF1A",26,0)
 D DEVICE G:IBQUIT EXIT
"RTN","IBDF1A",27,0)
QUEUED ;
"RTN","IBDF1A",28,0)
 ;input - DFN,IBAPPT,IBCLINIC
"RTN","IBDF1A",29,0)
 N IBDEVICE
"RTN","IBDF1A",30,0)
 ;
"RTN","IBDF1A",31,0)
 D DEVICE^IBDFUA(0,.IBDEVICE)
"RTN","IBDF1A",32,0)
 F IBF=1:1 S IBFORM=$P(FORMS,"^",IBF) Q:'IBFORM  D DRWFORM^IBDF2A(IBFORM,WITHDATA,.IBDEVICE)
"RTN","IBDF1A",33,0)
 I WITHDATA,IBPM D PRNTOTHR^IBDF1B5(IBCLINIC,IBAPPT,DFN)
"RTN","IBDF1A",34,0)
EXIT ;
"RTN","IBDF1A",35,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBDF1A",36,0)
 E  D ^%ZISC
"RTN","IBDF1A",37,0)
 D KPRNTVAR^IBDFUA ;kills the screen and graphics parameters
"RTN","IBDF1A",38,0)
 K IBQUIT,IBFORM,IBCLINIC,DFN,IBAPPT,IBTYPE,X,Y,I,^TMP("IB",$J),^TMP("IBDF",$J),^TMP("DFN",$J),^TMP("RPT",$J)
"RTN","IBDF1A",39,0)
 Q
"RTN","IBDF1A",40,0)
FORM ;gets the type of form to print from the clinic setup - sets FORMS
"RTN","IBDF1A",41,0)
 N SETUP
"RTN","IBDF1A",42,0)
 S SETUP=$O(^SD(409.95,"B",IBCLINIC,"")) I 'SETUP D ERROR S IBQUIT=1 Q
"RTN","IBDF1A",43,0)
 S SETUP=$G(^SD(409.95,SETUP,0)) I SETUP="" D ERROR S IBQUIT=1 Q
"RTN","IBDF1A",44,0)
 S FORMS=$P(SETUP,"^",5) I 'FORMS D ERROR S IBQUIT=1 Q
"RTN","IBDF1A",45,0)
 Q
"RTN","IBDF1A",46,0)
ERROR ;prints a message
"RTN","IBDF1A",47,0)
 W !!,"There is no encounter form defined for this clinic that should print",!,"without patient data!",!
"RTN","IBDF1A",48,0)
 Q
"RTN","IBDF1A",49,0)
ERROR2 ;prints a message
"RTN","IBDF1A",50,0)
 W !!,"There are no forms defined to print for this clinic!",!
"RTN","IBDF1A",51,0)
 Q
"RTN","IBDF1A",52,0)
PATIENT ;gets the patient to print the form for
"RTN","IBDF1A",53,0)
 S DIR(0)="P^2:EM",DIR("A")="PATIENT NAME" D ^DIR K DIR I $D(DIRUT)!(+Y<1)!('(+Y)) S IBQUIT=1 Q
"RTN","IBDF1A",54,0)
 S DFN=+Y
"RTN","IBDF1A",55,0)
 Q
"RTN","IBDF1A",56,0)
DEVICE ;
"RTN","IBDF1A",57,0)
 I $D(ZTQUEUED) Q
"RTN","IBDF1A",58,0)
 W !,$C(7),"** Encounter Forms require a page size of 80 lines and 132 columns. **"
"RTN","IBDF1A",59,0)
 K %IS,%ZIS,IOP S %ZIS="MQ0" D ^%ZIS I POP S IBQUIT=1 Q
"RTN","IBDF1A",60,0)
 I $D(IO("Q")) D
"RTN","IBDF1A",61,0)
 .S ZTRTN="QUEUED^IBDF1A",(ZTSAVE("WITHDATA"),ZTSAVE("IB*"),ZTSAVE("DFN"),ZTSAVE("FORMS"))=""
"RTN","IBDF1A",62,0)
 .S ZTDESC="IBD - PRINT ENCOUNTER FORM" D ^%ZTLOAD
"RTN","IBDF1A",63,0)
 .W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","IBDF1A",64,0)
 .D HOME^%ZIS S IBQUIT=1 Q
"RTN","IBDF1A",65,0)
 U IO
"RTN","IBDF1A",66,0)
 Q
"RTN","IBDF1A",67,0)
CLINIC ;asks the user for the clinic
"RTN","IBDF1A",68,0)
 K DA,DIR S DIR(0)="409.95,.01O",DIR("A")="PRINT AN ENCOUNTER FORM FOR WHICH CLINIC? " D ^DIR K DIR,DA I $D(DTOUT)!$D(DUOUT)!(+Y<0)!('(+Y)) S IBQUIT=1 Q
"RTN","IBDF1A",69,0)
 S IBCLINIC=+Y
"RTN","IBDF1A",70,0)
 Q
"RTN","IBDF1A",71,0)
NOW ;sets IBAPPT to NOW
"RTN","IBDF1A",72,0)
 N %,%H,%I,X
"RTN","IBDF1A",73,0)
 D NOW^%DTC
"RTN","IBDF1A",74,0)
 S IBAPPT=%
"RTN","IBDF1A",75,0)
 Q
"RTN","IBDF1A",76,0)
WHCHFORM ;
"RTN","IBDF1A",77,0)
 I 'IBCLINIC D ASKFORM Q
"RTN","IBDF1A",78,0)
 K DIR S DIR(0)="S^1:SELECT ANY FORM;2:USE CLINIC SETUP;",DIR("A")="Do you want to Select a form or Use the form(s) defined by the clinic setup?" D ^DIR K DIR I $D(DIRUT)!(+Y<0) S IBQUIT=1 Q
"RTN","IBDF1A",79,0)
 S IBPM=0,FORMS=""
"RTN","IBDF1A",80,0)
 I Y=1 D  Q:IBQUIT
"RTN","IBDF1A",81,0)
 .D ASKFORM
"RTN","IBDF1A",82,0)
 E  I Y=2 S FORMS=$$FORMS^IBDF1B2(IBCLINIC,DFN,IBAPPT),IBPM=1
"RTN","IBDF1A",83,0)
 I '$P(FORMS,"^"),IBPM,'$$IFOTHR^IBDF1B5(IBCLINIC,"FOR EVERY APPOINTMENT"),'$$IFOTHR^IBDF1B5(IBCLINIC,"ONLY FOR EARLIEST APPOINTMENT") D ERROR2 S IBQUIT=1 Q
"RTN","IBDF1A",84,0)
 Q
"RTN","IBDF1A",85,0)
ASKFORM ;asks to select single form
"RTN","IBDF1A",86,0)
 K DIC S DIC("S")="I '$P(^(0),U,7)",DIC=357,DIC(0)="AEQ",DIC("A")="Enter form to print: "
"RTN","IBDF1A",87,0)
 D ^DIC K DIC I ($D(DTOUT)!$D(DUOUT)!(+Y<0)) S IBQUIT=1 Q
"RTN","IBDF1A",88,0)
 S FORMS=+Y
"RTN","IBDF1A",89,0)
 Q
"RTN","IBDF1B")
0^94^B36764571
"RTN","IBDF1B",1,0)
IBDF1B ;ALB/CJM - ENCOUNTER FORM (printing forms for appointments); 3/1/93
"RTN","IBDF1B",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF1B",3,0)
 ;
"RTN","IBDF1B",4,0)
 ;IBSRT=1 for sort by clinic/patient name
"RTN","IBDF1B",5,0)
 ;IBSRT=2 for sort by terminal digits
"RTN","IBDF1B",6,0)
 ;IBSRT=3 for sort by clinic/terminal digits
"RTN","IBDF1B",7,0)
 ;
"RTN","IBDF1B",8,0)
 ;SELECTBY="P" if user wants to select appts by patient
"RTN","IBDF1B",9,0)
 ;SELECTBY="C" if user wants to select appts by division/clinic
"RTN","IBDF1B",10,0)
 ;
"RTN","IBDF1B",11,0)
 ;IBDT=date for appointments
"RTN","IBDF1B",12,0)
 ;IBREPRNT'="" if this is a reprint of a previous job - then it's either equal to clinic name or 1st 4 terminal digits
"RTN","IBDF1B",13,0)
 ;IBSTRTDV is the division to start from in the case of a reprint
"RTN","IBDF1B",14,0)
 ;IBADDONS=1 if user wants to do add-ons only, 0 otherwise
"RTN","IBDF1B",15,0)
 ;
"RTN","IBDF1B",16,0)
EN ;
"RTN","IBDF1B",17,0)
 N IBREPRNT,SELECTBY,IBDT,IBSRT,IBADDONS,IBSTRTDV,QUIT,X
"RTN","IBDF1B",18,0)
 S (IBSTRTDV,IBREPRNT)="",(QUIT,IBADDONS)=0
"RTN","IBDF1B",19,0)
 ;
"RTN","IBDF1B",20,0)
 ;set the error trap so workspace in ^TMP is erased in case of abnormal termination of the print job
"RTN","IBDF1B",21,0)
 S X="ERRORTRP^IBDF1B",@^%ZOSF("TRAP")
"RTN","IBDF1B",22,0)
 ;
"RTN","IBDF1B",23,0)
 K ^TMP("IBDF",$J),^TMP("IB",$J)
"RTN","IBDF1B",24,0)
 D HOME^%ZIS
"RTN","IBDF1B",25,0)
 D
"RTN","IBDF1B",26,0)
 .D SELECTBY Q:QUIT  S:SELECTBY="P" IBSRT=1 ;if selecting by patient then sort by clinic/patient rather than by terminal digits
"RTN","IBDF1B",27,0)
 .D:SELECTBY="C" SORTBY^IBDF1BA Q:QUIT
"RTN","IBDF1B",28,0)
 .D APPTDATE Q:QUIT
"RTN","IBDF1B",29,0)
 .;now allow user to makes selections, whether by patient or clinic
"RTN","IBDF1B",30,0)
 .D @SELECTBY
"RTN","IBDF1B",31,0)
 .;
"RTN","IBDF1B",32,0)
 .;if nothing selected exit
"RTN","IBDF1B",33,0)
 .Q:'$D(^TMP("IBDF",$J))
"RTN","IBDF1B",34,0)
 .;
"RTN","IBDF1B",35,0)
 .;since selecting by entire clinics, may want to do add-ons only or restart the job
"RTN","IBDF1B",36,0)
 .I SELECTBY="C" D  Q:QUIT
"RTN","IBDF1B",37,0)
 ..D ADDONS Q:QUIT
"RTN","IBDF1B",38,0)
 ..D REPRINT Q:QUIT
"RTN","IBDF1B",39,0)
 ;
"RTN","IBDF1B",40,0)
 ;
"RTN","IBDF1B",41,0)
 ;if nothing selected exit
"RTN","IBDF1B",42,0)
END G:('$D(^TMP("IBDF",$J)))!QUIT EXIT
"RTN","IBDF1B",43,0)
 W !,$C(7),"** Encounter Forms require a page size of 80 lines and 132 columns. **"
"RTN","IBDF1B",44,0)
 K %IS,%ZIS,IOP S %ZIS="QM0",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
"RTN","IBDF1B",45,0)
 I $D(IO("Q")) S ZTRTN="^IBDF1B1",ZTDESC="IBDF Encounter Forms",ZTSAVE("^TMP(""IBDF"",$J,")="",ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS G EXIT
"RTN","IBDF1B",46,0)
 U IO
"RTN","IBDF1B",47,0)
 D ^IBDF1B1
"RTN","IBDF1B",48,0)
EXIT ;
"RTN","IBDF1B",49,0)
 K ^TMP("IBDF",$J),^TMP("IB",$J),^TMP("RPT",$J),^TMP("DFN",$J)
"RTN","IBDF1B",50,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBDF1B",51,0)
 K DTOUT,DUOUT,DIRUT,DIROUT,X,Y,D0,DA,IBTYPE
"RTN","IBDF1B",52,0)
 D ^%ZISC
"RTN","IBDF1B",53,0)
 Q
"RTN","IBDF1B",54,0)
 ;
"RTN","IBDF1B",55,0)
REPRINT ;for prior job that partially completed?
"RTN","IBDF1B",56,0)
 ;IBSTRTDV is the division to restart from
"RTN","IBDF1B",57,0)
 ;IBREPRNT is the clinic or first 4 of terminal digits to restart from
"RTN","IBDF1B",58,0)
 S DIR(0)="Y",DIR("A")="IS THIS A REPRINT OF A PREVIOUS RUN"
"RTN","IBDF1B",59,0)
 S DIR("B")="NO",DIR("?")="ANSWER YES IF SOME OF THE FORMS WERE ALREADY PRINTED BY A PREVIOUS JOB THAT DID NOT SUCCESSFULLY COMPLETE"
"RTN","IBDF1B",60,0)
 D ^DIR K DIR I $D(DIRUT)!(Y=-1) S QUIT=1 Q
"RTN","IBDF1B",61,0)
 I Y D  I IBREPRNT="" S QUIT=1 Q
"RTN","IBDF1B",62,0)
 .I IBSRT=2 D  ;sorting by division/terminal digit
"RTN","IBDF1B",63,0)
 ..;ask which division to restart from
"RTN","IBDF1B",64,0)
 ..S IBSTRTDV=$$STARTDIV^IBDF1BA I IBSTRTDV="" S IBREPRNT="" Q
"RTN","IBDF1B",65,0)
 ..;ask which terminal digit to restart from
"RTN","IBDF1B",66,0)
 ..D TERMSTRT^IBDF1BA Q:IBREPRNT=""
"RTN","IBDF1B",67,0)
 .I (IBSRT=1)!(IBSRT=3) D CLNCSTRT^IBDF1BA ;sorting by division/clinic, ask which clinic to restart from
"RTN","IBDF1B",68,0)
 Q
"RTN","IBDF1B",69,0)
ADDONS ;add-ons only?
"RTN","IBDF1B",70,0)
 S DIR(0)="Y",DIR("A")="WANT TO PRINT ADD-ONS ONLY"
"RTN","IBDF1B",71,0)
 S DIR("B")="NO",DIR("?")="ANSWER YES TO ONLY PRINT ADD-ONS"
"RTN","IBDF1B",72,0)
 D ^DIR K DIR I $D(DIRUT)!(Y=-1) S QUIT=1 Q
"RTN","IBDF1B",73,0)
 S IBADDONS=Y
"RTN","IBDF1B",74,0)
 Q
"RTN","IBDF1B",75,0)
SELECTBY ;select by patient or clinic?
"RTN","IBDF1B",76,0)
 W !,"Do you want to print forms for a particular patient or for entire clinics?",!
"RTN","IBDF1B",77,0)
 K DIR S DIR("B")="Clinic",DIR(0)="SO^P:Patient;C:Clinic",DIR("A")="Select Appointment by"
"RTN","IBDF1B",78,0)
 D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBDF1B",79,0)
 S SELECTBY=Y
"RTN","IBDF1B",80,0)
 Q
"RTN","IBDF1B",81,0)
 ;
"RTN","IBDF1B",82,0)
P ;print by patient - get patient then appointment(s) for date
"RTN","IBDF1B",83,0)
 N IBTMP,IBNM,DFN
"RTN","IBDF1B",84,0)
 ;IBNM=patient name, IBTMP=array to store patient's appts
"RTN","IBDF1B",85,0)
 F  K DIC S DIC="^DPT(",DIC(0)="AEQM" D ^DIC K DIC Q:Y<0  S DFN=+Y,IBNM=$P(Y,"^",2) D SEARCH^IBDF1BA,DISP^IBDF1BA
"RTN","IBDF1B",86,0)
 Q
"RTN","IBDF1B",87,0)
 ;
"RTN","IBDF1B",88,0)
C ;print all appointments for a clinic - find division then clinic, print all/some clinics for all/some divisions
"RTN","IBDF1B",89,0)
 ;
"RTN","IBDF1B",90,0)
 N GROUPS,IEN
"RTN","IBDF1B",91,0)
 ;
"RTN","IBDF1B",92,0)
 ;get the PRINT MANAGER CLINIC GROUPS
"RTN","IBDF1B",93,0)
 S GROUPS=""
"RTN","IBDF1B",94,0)
 K DIR
"RTN","IBDF1B",95,0)
 S DIR(0)="PAO^357.99:AEMQ",DIR("A")="Select Print Manager Clinic Group:",DIR("?")="You can choose from previously defined clinic groups."
"RTN","IBDF1B",96,0)
 F  D ^DIR Q:((+Y<0)!$D(DIRUT))  S GROUPS(+Y)="",DIR("A")="Select another Print Manager Clinic Group:"
"RTN","IBDF1B",97,0)
 S GROUPS=0 F  S GROUPS=$O(GROUPS(GROUPS)) Q:'GROUPS  D
"RTN","IBDF1B",98,0)
 .S IEN=0 F  S IEN=$O(^IBD(357.99,GROUPS,10,IEN)) Q:'IEN  S IBCLN=+$G(^IBD(357.99,GROUPS,10,IEN,0)) S:IBCLN ^TMP("IBDF",$J,"C",IBCLN)=""
"RTN","IBDF1B",99,0)
 .S IEN=0 F  S IEN=$O(^IBD(357.99,GROUPS,11,IEN)) Q:'IEN  S IBDIV=+$G(^IBD(357.99,GROUPS,11,IEN,0)) S:IBDIV ^TMP("IBDF",$J,"D",IBDIV)=""
"RTN","IBDF1B",100,0)
 K DIR
"RTN","IBDF1B",101,0)
 G:$O(GROUPS(0)) ENDC
"RTN","IBDF1B",102,0)
 ;
"RTN","IBDF1B",103,0)
 ;now ask divisions and clinics
"RTN","IBDF1B",104,0)
 W !!,"Now you can select individual divisions and clinics."
"RTN","IBDF1B",105,0)
 ;D ASK2^IBODIV G:$D(VAUTD)<11&(VAUTD=0) ENDC
"RTN","IBDF1B",106,0)
 S VAUTD=1 I $P($G(^DG(43,1,"GL")),"^",2) D DIVISION^VAUTOMA I Y=-1 G ENDC
"RTN","IBDF1B",107,0)
 S DIC("S")="I $P(^SC(+Y,0),U,3)=""C"",$S(VAUTD:1,$D(VAUTD(+$P(^(0),U,15))):1,'+$P(^(0),U,15)&$D(VAUTD($O(^DG(40.8,0)))):1,1:0)"
"RTN","IBDF1B",108,0)
 W !!,"If you want to print forms for all clinics in the divisions you have",!,"chosen (for those clinics with forms defined) then select ALL."
"RTN","IBDF1B",109,0)
 W !!,"Otherwise, select the particular clinics you want.",!
"RTN","IBDF1B",110,0)
 S DIC="^SC(",VAUTVB="VAUTC",VAUTNI=2,VAUTSTR="clinic" D FIRST^VAUTOMA K DIC G:$D(VAUTC)<11&(VAUTC=0) ENDC
"RTN","IBDF1B",111,0)
 I VAUTC,VAUTD S ^TMP("IBDF",$J,"D","ALL")=""
"RTN","IBDF1B",112,0)
 I VAUTC,'VAUTD S IBDIV="" F  S IBDIV=$O(VAUTD(IBDIV)) Q:IBDIV=""  S ^TMP("IBDF",$J,"D",IBDIV)=""
"RTN","IBDF1B",113,0)
 I 'VAUTC S IBCLN="" F  S IBCLN=$O(VAUTC(IBCLN)) Q:IBCLN=""  S ^TMP("IBDF",$J,"C",IBCLN)=""
"RTN","IBDF1B",114,0)
ENDC K VAUTNI,VAUTD,VAUTC,VAUTVB,VAUTSTR,IBDIV,IBCLN,DIC
"RTN","IBDF1B",115,0)
 Q
"RTN","IBDF1B",116,0)
 ;
"RTN","IBDF1B",117,0)
APPTDATE ;print forms for appointments on what date?
"RTN","IBDF1B",118,0)
 K DIR S DIR(0)="D^::AEX",DIR("B")="TODAY",DIR("A")="Appointment Date to Print Forms For"
"RTN","IBDF1B",119,0)
 S DIR("?",1)="Only Clinics and Patients with Appointments on this Date will be allowed."
"RTN","IBDF1B",120,0)
 S DIR("?")="Nothing will print for Appointments in Clinics/Divisions with no forms defined."
"RTN","IBDF1B",121,0)
 D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBDF1B",122,0)
 S IBDT=Y
"RTN","IBDF1B",123,0)
 Q
"RTN","IBDF1B",124,0)
 ;
"RTN","IBDF1B",125,0)
ERRORTRP ;the error trap
"RTN","IBDF1B",126,0)
 K ^TMP("IBDF",$J),^TMP("IB",$J)
"RTN","IBDF1B",127,0)
 D @^%ZOSF("ERRTN")
"RTN","IBDF1B",128,0)
 Q
"RTN","IBDF1B1")
0^95^B22436738
"RTN","IBDF1B1",1,0)
IBDF1B1 ;ALB/CJM - ENCOUNTER FORM PRINT (IBDF1B continued - print encounter forms for selected appts); 3/1/93
"RTN","IBDF1B1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF1B1",3,0)
 ;
"RTN","IBDF1B1",4,0)
 N IBDEVICE,IBQUIT
"RTN","IBDF1B1",5,0)
 ;
"RTN","IBDF1B1",6,0)
 K DA,D0,X,Y,I
"RTN","IBDF1B1",7,0)
 ;
"RTN","IBDF1B1",8,0)
 ;set the error trap so workspace in ^TMP is erased in case of abnormal termination of the print job
"RTN","IBDF1B1",9,0)
 S X="ERRORTRP^IBDF1B",@^%ZOSF("TRAP")
"RTN","IBDF1B1",10,0)
 ;
"RTN","IBDF1B1",11,0)
 S IBQUIT=0
"RTN","IBDF1B1",12,0)
 D DEVICE^IBDFUA(0,.IBDEVICE)
"RTN","IBDF1B1",13,0)
 D:$D(^TMP("IBDF",$J,"D")) ENDV^IBDF1B1B D:$D(^TMP("IBDF",$J,"C")) ENCL^IBDF1B1A
"RTN","IBDF1B1",14,0)
 K ^TMP("EARL",$J),^TMP("MULT",$J)
"RTN","IBDF1B1",15,0)
 D ENPT
"RTN","IBDF1B1",16,0)
 D KPRNTVAR^IBDFUA
"RTN","IBDF1B1",17,0)
 K ^TMP("IBDF",$J),^TMP("IB",$J),^TMP("EARL",$J),^TMP("MULT",$J),DA,D0,X,Y,I,IBI
"RTN","IBDF1B1",18,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBDF1B1",19,0)
 Q
"RTN","IBDF1B1",20,0)
ENPT ;print encounter forms for each appt
"RTN","IBDF1B1",21,0)
 ;input ^TMP(  - contains appointment data:
"RTN","IBDF1B1",22,0)
 ;if IBSRT=1 format is ^TMP("IBDF",$J,"P",division name,clinic name,clinic ien,patient name,dfn,appt)=""
"RTN","IBDF1B1",23,0)
 ;if IBSRT=2 format is^TMP("IBDF",$J,"P",division name,terminal digits,dfn,appt)=clinic ien
"RTN","IBDF1B1",24,0)
 ;if IBSRT=3 format is ^TMP("IBDF",$J,"P",division name,clinic name,clinic ien,terminal digits,dfn,appt)=""
"RTN","IBDF1B1",25,0)
 N DFN,CLNCNAME,IBCLINIC,PNAME,TDIGIT,IBAPPT,IBDIV
"RTN","IBDF1B1",26,0)
 ;IBCLINIC=ien of clinic
"RTN","IBDF1B1",27,0)
 ;IBSTRTDV is the division to start from in the case of a reprint
"RTN","IBDF1B1",28,0)
 ;IBREPRNT is the clinic or terminal digits (1st 4) to start from in case of a reprint
"RTN","IBDF1B1",29,0)
 ;
"RTN","IBDF1B1",30,0)
 S IBDIV="" F  S IBDIV=$O(^TMP("IBDF",$J,"P",IBDIV)) Q:IBQUIT!(IBDIV="")  D:(IBDIV=" ")!(IBSTRTDV']IBDIV)
"RTN","IBDF1B1",31,0)
 .I IBSRT=2,IBDIV]" " W !,"DIVISION: ",IBDIV,@IOF
"RTN","IBDF1B1",32,0)
 .D:IBSRT=1 SORT1
"RTN","IBDF1B1",33,0)
 .D:IBSRT=2 SORT2
"RTN","IBDF1B1",34,0)
 .D:IBSRT=3 SORT3
"RTN","IBDF1B1",35,0)
 D:'IBQUIT TRLR
"RTN","IBDF1B1",36,0)
 Q
"RTN","IBDF1B1",37,0)
 ;
"RTN","IBDF1B1",38,0)
SORT1 ;case of sort by div/clinic/patient
"RTN","IBDF1B1",39,0)
 S CLNCNAME=""
"RTN","IBDF1B1",40,0)
 ;check if report was restarted, start is after this clinic
"RTN","IBDF1B1",41,0)
 I IBREPRNT]"" I ((IBDIV=" ")!(IBDIV=IBSTRTDV)) S CLNCNAME=$E(IBREPRNT,1,$L(IBREPRNT)-1)
"RTN","IBDF1B1",42,0)
 F  S CLNCNAME=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME)) Q:CLNCNAME=""!IBQUIT  S IBCLINIC="" F  S IBCLINIC=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC)) Q:'IBCLINIC!IBQUIT  D
"RTN","IBDF1B1",43,0)
 .D HDRPG($P($G(^SC(IBCLINIC,0)),"^"),IBDIV)
"RTN","IBDF1B1",44,0)
 .S PNAME="" F  S PNAME=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,PNAME)) Q:PNAME=""!IBQUIT  S DFN="" F  S DFN=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,PNAME,DFN)) Q:'DFN!IBQUIT  D
"RTN","IBDF1B1",45,0)
 ..S IBAPPT="" F  S IBAPPT=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,PNAME,DFN,IBAPPT)) Q:'(+IBAPPT)!IBQUIT  D APPT($G(IBDIV),$G(CLNCNAME),$G(IBCLINIC),$G(PNAME),$G(DFN),$G(IBAPPT))
"RTN","IBDF1B1",46,0)
 Q
"RTN","IBDF1B1",47,0)
SORT2 ;case of sort by div/terminal digit
"RTN","IBDF1B1",48,0)
 S TDIGIT=""
"RTN","IBDF1B1",49,0)
 ;check if report was restarted, start is after this terminal digit
"RTN","IBDF1B1",50,0)
 I IBREPRNT]"" I ((IBDIV=" ")!(IBDIV=IBSTRTDV)) S TDIGIT=IBREPRNT
"RTN","IBDF1B1",51,0)
 F  S TDIGIT=$O(^TMP("IBDF",$J,"P",IBDIV,TDIGIT)) Q:TDIGIT=""!IBQUIT  D
"RTN","IBDF1B1",52,0)
 .S DFN="" F  S DFN=$O(^TMP("IBDF",$J,"P",IBDIV,TDIGIT,DFN)) Q:'DFN!IBQUIT  D
"RTN","IBDF1B1",53,0)
 ..S IBAPPT="" F  S IBAPPT=$O(^TMP("IBDF",$J,"P",IBDIV,TDIGIT,DFN,IBAPPT)) Q:'+IBAPPT!IBQUIT  D
"RTN","IBDF1B1",54,0)
 ...S IBCLINIC=$G(^TMP("IBDF",$J,"P",IBDIV,TDIGIT,DFN,IBAPPT)) Q:'IBCLINIC!IBQUIT  D APPT($G(IBDIV),$G(CLNCNAME),$G(IBCLINIC),$G(PNAME),$G(DFN),$G(IBAPPT),$G(TDIGIT))
"RTN","IBDF1B1",55,0)
 Q
"RTN","IBDF1B1",56,0)
SORT3 ;case of sort by div/clinic/terminal digits
"RTN","IBDF1B1",57,0)
 S CLNCNAME=""
"RTN","IBDF1B1",58,0)
 ;check if report was restarted, start is after this CLINIC
"RTN","IBDF1B1",59,0)
 I IBREPRNT]"" I ((IBDIV=" ")!(IBDIV=IBSTRTDV)) S CLNCNAME=$E(IBREPRNT,1,$L(IBREPRNT)-1)
"RTN","IBDF1B1",60,0)
 F  S CLNCNAME=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME)) Q:CLNCNAME=""!IBQUIT  S IBCLINIC="" F  S IBCLINIC=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC)) Q:'IBCLINIC!IBQUIT  D
"RTN","IBDF1B1",61,0)
 .D HDRPG($P($G(^SC(IBCLINIC,0)),"^"),IBDIV)
"RTN","IBDF1B1",62,0)
 .S TDIGIT="" F  S TDIGIT=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,TDIGIT)) Q:TDIGIT=""!IBQUIT  S DFN="" F  S DFN=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,TDIGIT,DFN)) Q:'DFN!IBQUIT  D
"RTN","IBDF1B1",63,0)
 ..S IBAPPT="" F  S IBAPPT=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,TDIGIT,DFN,IBAPPT)) Q:'(+IBAPPT)!IBQUIT  D APPT($G(IBDIV),$G(CLNCNAME),$G(IBCLINIC),$G(PNAME),$G(DFN),$G(IBAPPT),$G(TDIGIT))
"RTN","IBDF1B1",64,0)
 Q
"RTN","IBDF1B1",65,0)
 ;
"RTN","IBDF1B1",66,0)
APPT(IBDIV,CLNCNAME,IBCLINIC,PNAME,DFN,IBAPPT,TDIGIT) ;print everything for single appt
"RTN","IBDF1B1",67,0)
 ;input - DFN,IBAPPT,IBCLINIC
"RTN","IBDF1B1",68,0)
 I $$S^%ZTLOAD S (ZTSTOP,IBQUIT)=1 W !,"TASK STOPPED AT USER'S REQUEST" Q
"RTN","IBDF1B1",69,0)
 D PRNTFRMS^IBDF1B2
"RTN","IBDF1B1",70,0)
 D PRNTOTHR^IBDF1B5(IBCLINIC,IBAPPT,DFN)
"RTN","IBDF1B1",71,0)
 I $D(^DPT(DFN,"S",IBAPPT,0)) S $P(^DPT(DFN,"S",IBAPPT,0),"^",21)=1 S:IBADDONS $P(^DPT(DFN,"S",IBAPPT,0),"^",22)=1
"RTN","IBDF1B1",72,0)
 Q
"RTN","IBDF1B1",73,0)
 ;
"RTN","IBDF1B1",74,0)
HDRPG(CLINIC,IBDIV) ;print a header page for clinic
"RTN","IBDF1B1",75,0)
 N LN
"RTN","IBDF1B1",76,0)
 S LN="BEGINNING TO PRINT ENCOUNTER FORMS FOR "_CLINIC_$S(IBDIV'=" ":" IN "_IBDIV,1:"")_" on "_$E(IBDT,4,5)_"/"_$E(IBDT,6,7)_"/"_$E(IBDT,2,3)
"RTN","IBDF1B1",77,0)
 I $Y W @IOF
"RTN","IBDF1B1",78,0)
 W !!!!!,?((IOM-$L(LN))\2),LN
"RTN","IBDF1B1",79,0)
 W @IOF
"RTN","IBDF1B1",80,0)
 Q
"RTN","IBDF1B1",81,0)
TRLR ;prints a trailer page
"RTN","IBDF1B1",82,0)
 N LN
"RTN","IBDF1B1",83,0)
 S LN="PRINTING OF ENCOUNTER FORMS IS COMPLETE"_" for "_$E(IBDT,4,5)_"/"_$E(IBDT,6,7)_"/"_$E(IBDT,2,3)
"RTN","IBDF1B1",84,0)
 W !!!!!,?((IOM-$L(LN))\2),LN
"RTN","IBDF1B1",85,0)
 W @IOF
"RTN","IBDF1B1",86,0)
 Q
"RTN","IBDF1B1",87,0)
EARLIEST(DFN,APPT) ;determines if APPT is the earliest appt on the list for DFN
"RTN","IBDF1B1",88,0)
 D GETLIST^IBDF1B1A(DFN,IBDT,DIVISION)
"RTN","IBDF1B1",89,0)
 I APPT=$O(^TMP("IBDF",$J,"APPT LIST",DFN,""))
"RTN","IBDF1B1",90,0)
 Q $T
"RTN","IBDF1B1A")
0^96^B25135963
"RTN","IBDF1B1A",1,0)
IBDF1B1A ;ALB/CJM - ENCOUNTER FORM PRINT (IBDF1B continued - user options for printing- continuation of IBDF1B1); 3/1/93
"RTN","IBDF1B1A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF1B1A",3,0)
 ;
"RTN","IBDF1B1A",4,0)
ENCL ;for every clinic choosen find patient appointments on DATE
"RTN","IBDF1B1A",5,0)
 N DFN,CLNCNAME,IBCLINIC,PNAME,TDIGIT,IBAPPT,IBAPTYP,IBX,Y,IBDIV,FIRST4
"RTN","IBDF1B1A",6,0)
 S IBCLINIC="" F  S IBCLINIC=$O(^TMP("IBDF",$J,"C",IBCLINIC)) Q:'IBCLINIC  D
"RTN","IBDF1B1A",7,0)
 .;
"RTN","IBDF1B1A",8,0)
 .;
"RTN","IBDF1B1A",9,0)
 .;get the clinic's division
"RTN","IBDF1B1A",10,0)
 .S IBDIV=$$DIVISION^IBDF1B5(IBCLINIC) S:IBDIV="" IBDIV="^ "
"RTN","IBDF1B1A",11,0)
 .
"RTN","IBDF1B1A",12,0)
 .;setup defined for clinic or division? - otherwise there is nothing to print
"RTN","IBDF1B1A",13,0)
 .Q:'($D(^SD(409.95,"B",IBCLINIC))!$D(^SD(409.96,"B",+IBDIV)))
"RTN","IBDF1B1A",14,0)
 .S IBDIV=$P(IBDIV,"^",2)
"RTN","IBDF1B1A",15,0)
 .;
"RTN","IBDF1B1A",16,0)
 .;if restart, sorting is by division/clinic, and clinic is in the starting division, make sure the clinic does not precede the starting clinic
"RTN","IBDF1B1A",17,0)
 .I IBDIV=IBSTRTDV,((IBSRT=1)!(IBSRT=3)) S CLNCNAME=$P($G(^SC(IBCLINIC,0)),"^") I CLNCNAME'=IBREPRNT,CLNCNAME']IBREPRNT Q
"RTN","IBDF1B1A",18,0)
 .;
"RTN","IBDF1B1A",19,0)
 .;find the appts
"RTN","IBDF1B1A",20,0)
 .S IBAPPT=IBDT F  S IBAPPT=$O(^SC(IBCLINIC,"S",IBAPPT)) Q:$E(IBAPPT,1,7)'=IBDT  D
"RTN","IBDF1B1A",21,0)
 ..S IBX=0 F  S IBX=$O(^SC(IBCLINIC,"S",IBAPPT,1,IBX)) Q:IBX=""  D
"RTN","IBDF1B1A",22,0)
 ...Q:$P($G(^SC(IBCLINIC,"S",IBAPPT,1,IBX,0)),"^",9)="C"
"RTN","IBDF1B1A",23,0)
 ...S DFN=+$G(^SC(IBCLINIC,"S",IBAPPT,1,IBX,0)) Q:$E($P($G(^DPT(DFN,0)),"^",9),1,5)="00000"&($D(IBDFTSTP))  S PNAME=$P($G(^DPT(DFN,0)),"^") Q:PNAME=""
"RTN","IBDF1B1A",24,0)
 ...;check the appt status - may be cancelled
"RTN","IBDF1B1A",25,0)
 ...S IBAPTYP=$G(^DPT(DFN,"S",IBAPPT,0)) Q:"NT,I,"'[($P(IBAPTYP,"^",2)_",")
"RTN","IBDF1B1A",26,0)
 ...; -- check parameter if inpatient and don't print inpatients then quit
"RTN","IBDF1B1A",27,0)
 ...I $P(IBAPTYP,"^",2)="I",$P($G(^IBD(357.09,1,0)),"^",5)=0 Q
"RTN","IBDF1B1A",28,0)
 ...;
"RTN","IBDF1B1A",29,0)
 ...;if only printing add-ons don't print if already printed
"RTN","IBDF1B1A",30,0)
 ...I IBADDONS,IBREPRNT="" Q:$$PRINTED(DFN,IBAPPT)
"RTN","IBDF1B1A",31,0)
 ...I IBADDONS,IBREPRNT'="" Q:'$$ADDON(DFN,IBAPPT)
"RTN","IBDF1B1A",32,0)
 ...;
"RTN","IBDF1B1A",33,0)
 ...;case of sort by clinic,patient
"RTN","IBDF1B1A",34,0)
 ...;
"RTN","IBDF1B1A",35,0)
 ...;**** when the new SAC standards go into effect, increasing the allowable global subscript length, this line should be substituted for the line following it ****
"RTN","IBDF1B1A",36,0)
 ...;I IBSRT=1 S CLNCNAME=$P($G(^SC(IBCLINIC,0)),"^") Q:CLNCNAME=""  S ^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,$E(PNAME,1,10),DFN,+IBAPPT)=""
"RTN","IBDF1B1A",37,0)
 ...I IBSRT=1 S CLNCNAME=$P($G(^SC(IBCLINIC,0)),"^") Q:CLNCNAME=""  S ^TMP("IBDF",$J,"P",$E(IBDIV,1,20),$E(CLNCNAME,1,10),IBCLINIC,$E(PNAME,1,10),DFN,+IBAPPT)=""
"RTN","IBDF1B1A",38,0)
 ...;
"RTN","IBDF1B1A",39,0)
 ...;case of sort by terminal digit
"RTN","IBDF1B1A",40,0)
 ...I IBSRT=2 D
"RTN","IBDF1B1A",41,0)
 ....S TDIGIT=$$TDG(DFN),FIRST4=$E(TDIGIT,1,$L(TDIGIT)-5)
"RTN","IBDF1B1A",42,0)
 ....;
"RTN","IBDF1B1A",43,0)
 ....;if this is a restart and clinic is in the starting division, make sure the terminal digits (1st 4) do not precede the restart position
"RTN","IBDF1B1A",44,0)
 ....I IBDIV=IBSTRTDV,FIRST4'=IBREPRNT,FIRST4<IBREPRNT Q
"RTN","IBDF1B1A",45,0)
 ....;
"RTN","IBDF1B1A",46,0)
 ....S ^TMP("IBDF",$J,"P",IBDIV,TDIGIT,DFN,+IBAPPT)=IBCLINIC
"RTN","IBDF1B1A",47,0)
 ...;
"RTN","IBDF1B1A",48,0)
 ...;case of sort by clinic/terminal digits
"RTN","IBDF1B1A",49,0)
 ...;
"RTN","IBDF1B1A",50,0)
 ...;**** when the new SAC standards go into effect, increasing the allowable global subscript length, this line should be substituted for the line following it ****
"RTN","IBDF1B1A",51,0)
 ...;I IBSRT=3 S TDIGIT=$$TDG(DFN),CLNCNAME=$P($G(^SC(IBCLINIC,0)),"^") Q:CLNCNAME=""  S ^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,TDIGIT,DFN,+IBAPPT)=""
"RTN","IBDF1B1A",52,0)
 ...I IBSRT=3 S TDIGIT=$$TDG(DFN),CLNCNAME=$P($G(^SC(IBCLINIC,0)),"^") Q:CLNCNAME=""  S ^TMP("IBDF",$J,"P",$E(IBDIV,1,20),$E(CLNCNAME,1,10),IBCLINIC,TDIGIT,DFN,+IBAPPT)=""
"RTN","IBDF1B1A",53,0)
 ;
"RTN","IBDF1B1A",54,0)
 ;don't need the list of clinics anymore
"RTN","IBDF1B1A",55,0)
 K ^TMP("IBDF",$J,"C")
"RTN","IBDF1B1A",56,0)
 Q
"RTN","IBDF1B1A",57,0)
 ;
"RTN","IBDF1B1A",58,0)
TDG(DFN) ;reformat patient's SSN into terminal digit order, then turns it into a cannonic number
"RTN","IBDF1B1A",59,0)
 ; returns either 0 or ssn in terminal digit order
"RTN","IBDF1B1A",60,0)
 N X,Y,I,SSN
"RTN","IBDF1B1A",61,0)
 S SSN=$P($G(^DPT(DFN,0)),"^",9)
"RTN","IBDF1B1A",62,0)
 S Y="" F I=1:1 S X=$E(SSN,I) Q:X=""  I X?1N S Y=Y_X
"RTN","IBDF1B1A",63,0)
 S Y=$S(Y'?9N:0,1:$E(Y,8,9)_$E(Y,6,7)_$E(Y,4,5)_$E(Y,1,3))
"RTN","IBDF1B1A",64,0)
 Q +Y
"RTN","IBDF1B1A",65,0)
 ;
"RTN","IBDF1B1A",66,0)
PRINTED(DFN,IBAPPT) ;returns 1 if the print manager already printed forms for this appt, 0 otherwise
"RTN","IBDF1B1A",67,0)
 Q +$P($G(^DPT(DFN,"S",IBAPPT,0)),"^",21)
"RTN","IBDF1B1A",68,0)
ADDON(DFN,IBAPPT) ;returns 1 if the print manager already printed forms for this appt as an add-on, 0 otherwise
"RTN","IBDF1B1A",69,0)
 Q +$P($G(^DPT(DFN,"S",IBAPPT,0)),"^",22)
"RTN","IBDF1B1A",70,0)
 ;
"RTN","IBDF1B1A",71,0)
GETLIST(DFN,IBDT,DIVISION) ;creates a list of the patient's appts on IBDT
"RTN","IBDF1B1A",72,0)
 Q:'DFN!'IBDT
"RTN","IBDF1B1A",73,0)
 N APPT,NODE,TO
"RTN","IBDF1B1A",74,0)
 S TO=IBDT+.999999
"RTN","IBDF1B1A",75,0)
 S ^TMP("IBDF",$J,"APPT LIST",DIVISION,DFN)=""
"RTN","IBDF1B1A",76,0)
 S APPT=IBDT-.0001 F  S APPT=$O(^DPT(DFN,"S",APPT)) Q:'APPT!(APPT>TO)  D
"RTN","IBDF1B1A",77,0)
 .S NODE=$G(^DPT(DFN,"S",APPT,0))
"RTN","IBDF1B1A",78,0)
 .Q:"NT,I,"'[($P(NODE,"^",2)_",")
"RTN","IBDF1B1A",79,0)
 .Q:$P($G(^SC(+NODE,0)),"^",15)'=DIVISION
"RTN","IBDF1B1A",80,0)
 .; -- check parameter
"RTN","IBDF1B1A",81,0)
 .;I $P(NODE,"^",2)="I",$P($G(^IBD(357.09,1,0)),"^",5)=0 Q
"RTN","IBDF1B1A",82,0)
 .S ^TMP("IBDF",$J,"APPT LIST",DIVISION,DFN,APPT)=+NODE
"RTN","IBDF1B1A",83,0)
 Q
"RTN","IBDF1B1A",84,0)
MULTIPLE(DFN,APPT) ;determines if patient=DFN has multiple appts on the list and APPT is the earliest
"RTN","IBDF1B1A",85,0)
 N APT
"RTN","IBDF1B1A",86,0)
 D GETLIST(DFN,APPT,DIVISION)
"RTN","IBDF1B1A",87,0)
 S APT=$O(^TMP("IBDF",$J,"APPT LIST",DIVISION,DFN,""))
"RTN","IBDF1B1A",88,0)
 ;Q:APT'=APPT 0
"RTN","IBDF1B1A",89,0)
 I $O(^TMP("IBDF",$J,"APPT LIST",DIVISION,DFN,APT))
"RTN","IBDF1B1A",90,0)
 Q $T
"RTN","IBDF1B1A",91,0)
 ;
"RTN","IBDF1B1A",92,0)
DIVHAS(IBDIV) ;returns >0 if the division has anything to print, 0 otherwise
"RTN","IBDF1B1A",93,0)
 Q:'$G(IBDIV) 0
"RTN","IBDF1B1A",94,0)
 Q $L($O(^SD(409.96,"A",IBDIV,"")))
"RTN","IBDF1B1A",95,0)
 ;
"RTN","IBDF1B1A",96,0)
CLNCHAS(CLINIC) ;returns>0 if the clinic has something to print
"RTN","IBDF1B1A",97,0)
 N NODE,SETUP,I,FOUND
"RTN","IBDF1B1A",98,0)
 S SETUP=$O(^SD(409.95,"B",CLINIC,0)) Q:'SETUP 0
"RTN","IBDF1B1A",99,0)
 S NODE=$G(^SD(409.95,SETUP,0))
"RTN","IBDF1B1A",100,0)
 S FOUND=0 F I=2,3,4,6,8,9 I $P(NODE,"^",I) S FOUND=1 Q
"RTN","IBDF1B1A",101,0)
 Q:FOUND 1
"RTN","IBDF1B1A",102,0)
 Q $L($O(^SD(409.95,"A",CLINIC,"")))
"RTN","IBDF1B1B")
0^97^B2981186
"RTN","IBDF1B1B",1,0)
IBDF1B1B ;ALB/CJM - ENCOUNTER FORM PRINT (IBDF1B continued - user options for printing- continuation of IBDF1B1); 3/1/93
"RTN","IBDF1B1B",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF1B1B",3,0)
 ;
"RTN","IBDF1B1B",4,0)
ENDV ;entire divisions were choosen, find all clinics (with encounter forms defined)
"RTN","IBDF1B1B",5,0)
 N IBCLN,IBDIV,NODE,DIVISION,ALL
"RTN","IBDF1B1B",6,0)
 ;
"RTN","IBDF1B1B",7,0)
 ;if ^TMP("IBDF",$J,"D","ALL") exists then all divisions were chosen
"RTN","IBDF1B1B",8,0)
 S ALL=$S($D(^TMP("IBDF",$J,"D","ALL")):1,1:0)
"RTN","IBDF1B1B",9,0)
 ;
"RTN","IBDF1B1B",10,0)
 ;user did not select ALL, so make a list of the divisions he did choose
"RTN","IBDF1B1B",11,0)
 I 'ALL S IBDIV=0 F  S IBDIV=$O(^TMP("IBDF",$J,"D",IBDIV)) Q:'IBDIV  S DIVISION(IBDIV)=""
"RTN","IBDF1B1B",12,0)
 ;
"RTN","IBDF1B1B",13,0)
 ;loop through all the clinics finding ones in selected divisions
"RTN","IBDF1B1B",14,0)
 S IBCLN="" F  S IBCLN=$O(^SC(IBCLN)) Q:IBCLN=""  D
"RTN","IBDF1B1B",15,0)
 .S NODE=$G(^SC(IBCLN,0))
"RTN","IBDF1B1B",16,0)
 .;
"RTN","IBDF1B1B",17,0)
 .;make sure it's in one of the selected divisions
"RTN","IBDF1B1B",18,0)
 .S IBDIV=$P(NODE,"^",15)
"RTN","IBDF1B1B",19,0)
 .I IBDIV,'ALL Q:'$D(DIVISION(IBDIV))
"RTN","IBDF1B1B",20,0)
 .;
"RTN","IBDF1B1B",21,0)
 .;check that location is a clinic
"RTN","IBDF1B1B",22,0)
 .Q:$P(NODE,"^",3)'="C"
"RTN","IBDF1B1B",23,0)
 .;
"RTN","IBDF1B1B",24,0)
 .;if it's a restart make sure the IBDIV does not precede the starting division
"RTN","IBDF1B1B",25,0)
 .I IBSTRTDV]" ",IBDIV S DIVISION=$P($G(^DG(40.8,IBDIV,0)),"^") I DIVISION'=IBSTRTDV,DIVISION']IBSTRTDV Q
"RTN","IBDF1B1B",26,0)
 .;
"RTN","IBDF1B1B",27,0)
 .;don't put it on the list if there is nothing to print
"RTN","IBDF1B1B",28,0)
 .I '$$DIVHAS^IBDF1B1A(IBDIV),'$$CLNCHAS^IBDF1B1A(IBCLN) Q
"RTN","IBDF1B1B",29,0)
 .;
"RTN","IBDF1B1B",30,0)
 .;it passed all the tests, put it on the list
"RTN","IBDF1B1B",31,0)
 .S ^TMP("IBDF",$J,"C",IBCLN)=""
"RTN","IBDF1B1B",32,0)
 ;
"RTN","IBDF1B1B",33,0)
 ;don't need list of divisions anymore
"RTN","IBDF1B1B",34,0)
 K ^TMP("IBDF",$J,"D")
"RTN","IBDF1B1B",35,0)
 Q
"RTN","IBDF1B2")
0^98^B3327541
"RTN","IBDF1B2",1,0)
IBDF1B2 ;ALB/CJM - ENCOUNTER FORM PRINT (IBDF1B1 continued - user options for printing); 3/1/93
"RTN","IBDF1B2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF1B2",3,0)
 ;
"RTN","IBDF1B2",4,0)
PRNTFRMS ;print encounter form(s) for an appointment
"RTN","IBDF1B2",5,0)
 N FORMS,IBFORM,IBF
"RTN","IBDF1B2",6,0)
 ;FORMS - list of forms to print for patient
"RTN","IBDF1B2",7,0)
 ;IBF - a counter used to parse FORMS
"RTN","IBDF1B2",8,0)
 S FORMS=$$FORMS(IBCLINIC,DFN,IBAPPT)
"RTN","IBDF1B2",9,0)
 F IBF=1:1 S IBFORM=$P(FORMS,"^",IBF) Q:'IBFORM  D DRWFORM^IBDF2A(IBFORM,1,.IBDEVICE)
"RTN","IBDF1B2",10,0)
 Q
"RTN","IBDF1B2",11,0)
 ;
"RTN","IBDF1B2",12,0)
FORMS(CLINIC,DFN,IBAPPT) ;returns a list of forms that should be printed for this patient in this clinic and this appt.
"RTN","IBDF1B2",13,0)
 N FORMS,SETUP,TYPE
"RTN","IBDF1B2",14,0)
 S FORMS=""
"RTN","IBDF1B2",15,0)
 S SETUP=$O(^SD(409.95,"B",+CLINIC,0)),SETUP=$G(^SD(409.95,+SETUP,0))
"RTN","IBDF1B2",16,0)
 S:$P(SETUP,"^",2) FORMS=$P(SETUP,"^",2)_"^"
"RTN","IBDF1B2",17,0)
 S:$P(SETUP,"^",6) FORMS=FORMS_$P(SETUP,"^",6)_"^"
"RTN","IBDF1B2",18,0)
 S:$P(SETUP,"^",8) FORMS=FORMS_$P(SETUP,"^",8)_"^"
"RTN","IBDF1B2",19,0)
 S:$P(SETUP,"^",9) FORMS=FORMS_$P(SETUP,"^",9)_"^"
"RTN","IBDF1B2",20,0)
 I $P(SETUP,"^",3)!$P(SETUP,"^",4) D
"RTN","IBDF1B2",21,0)
 .D TYPE
"RTN","IBDF1B2",22,0)
 .I TYPE="NEW",$P(SETUP,"^",4) S FORMS=FORMS_$P(SETUP,"^",4)_"^"
"RTN","IBDF1B2",23,0)
 .I TYPE="OLD",$P(SETUP,"^",3) S FORMS=FORMS_$P(SETUP,"^",3)_"^"
"RTN","IBDF1B2",24,0)
 Q FORMS
"RTN","IBDF1B2",25,0)
TYPE ;determine if patient is NEW or OLD at clinic - quick and dirty
"RTN","IBDF1B2",26,0)
 N APPT,NODE
"RTN","IBDF1B2",27,0)
 S TYPE="NEW"
"RTN","IBDF1B2",28,0)
 S APPT=DT-10000 F  S APPT=$O(^DPT(DFN,"S",APPT)) Q:('APPT)!(APPT'<IBAPPT)  S NODE=$G(^DPT(DFN,"S",APPT,0)) I +NODE=CLINIC,(($P(NODE,"^",2)="I")!($P(NODE,"^",2)="NT")!($P(NODE,"^",2)="")) S TYPE="OLD" Q
"RTN","IBDF1B2",29,0)
 Q
"RTN","IBDF1B3")
0^99^B23656217
"RTN","IBDF1B3",1,0)
IBDF1B3 ;ALB/CJM - ENCOUNTER FORM - (lists data that did not fit on the encounter form);4/28/93
"RTN","IBDF1B3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF1B3",3,0)
OVERFLOW ;
"RTN","IBDF1B3",4,0)
 ;loops through @IBARRAY("OVERFLOW"), printing in list form all the data that did not fit
"RTN","IBDF1B3",5,0)
 ;
"RTN","IBDF1B3",6,0)
 N IBBLK,FIELD,TYPE,ITEM,RTN,PAGE
"RTN","IBDF1B3",7,0)
 Q:'$D(@IBARRAY("OVERFLOW"))
"RTN","IBDF1B3",8,0)
 S PAGE=1
"RTN","IBDF1B3",9,0)
 D HDR
"RTN","IBDF1B3",10,0)
 S IBBLK="" F  S IBBLK=$O(@IBARRAY("OVERFLOW")@(IBBLK)) Q:'IBBLK  D
"RTN","IBDF1B3",11,0)
 .Q:$$BLKDESCR^IBDFU1B(.IBBLK)
"RTN","IBDF1B3",12,0)
 .D BLOCKBRK
"RTN","IBDF1B3",13,0)
 .S FIELD="" F  S FIELD=$O(@IBARRAY("OVERFLOW")@(IBBLK,FIELD)) Q:'FIELD  D
"RTN","IBDF1B3",14,0)
 ..S TYPE="" F  S TYPE=$O(@IBARRAY("OVERFLOW")@(IBBLK,FIELD,TYPE)) Q:TYPE=""  D
"RTN","IBDF1B3",15,0)
 ...I TYPE="DYNAMIC LIST" D LIST Q
"RTN","IBDF1B3",16,0)
 ...D FIELD
"RTN","IBDF1B3",17,0)
 D FOOTER
"RTN","IBDF1B3",18,0)
 K @IBARRAY("OVERFLOW")
"RTN","IBDF1B3",19,0)
 Q
"RTN","IBDF1B3",20,0)
HDR ;writes header to top of page
"RTN","IBDF1B3",21,0)
 N HDR
"RTN","IBDF1B3",22,0)
 S HDR="ADDITIONAL ENCOUNTER FORM DATA"
"RTN","IBDF1B3",23,0)
 W !,?((IOM-$L(HDR))/2),HDR,?(IOM-10),"PAGE: ",PAGE,!
"RTN","IBDF1B3",24,0)
 W !,"CLINIC:   ",$P($G(^SC(IBCLINIC,0)),"^")
"RTN","IBDF1B3",25,0)
 W !,"PATIENT:  " I $G(DFN) W $P($G(^DPT(DFN,0)),"^")
"RTN","IBDF1B3",26,0)
 W !,"FORM:     ",$P($G(^IBE(357,IBFORM,0)),"^"),!
"RTN","IBDF1B3",27,0)
 S PAGE=PAGE+1
"RTN","IBDF1B3",28,0)
 Q
"RTN","IBDF1B3",29,0)
BLOCKBRK ;writes a line to the report with the block name
"RTN","IBDF1B3",30,0)
 I $Y>(IOSL-3) W @IOF D HDR
"RTN","IBDF1B3",31,0)
 W !!,"BLOCK:  ",$P($G(^IBE(357.1,IBBLK,0)),"^")
"RTN","IBDF1B3",32,0)
 Q
"RTN","IBDF1B3",33,0)
FOOTER ;
"RTN","IBDF1B3",34,0)
 N FTR S FTR="END OF REPORT"
"RTN","IBDF1B3",35,0)
 W !!!,?((IOM-$L(FTR))\2),FTR,@IOF
"RTN","IBDF1B3",36,0)
 Q
"RTN","IBDF1B3",37,0)
FIELD ;displays the field (if list, displays all, if record, displays subfields)
"RTN","IBDF1B3",38,0)
  N LASTITEM,RTN,LABEL,XLAB,YLAB,XIO,YIO,WIO,HIO,BLK,ITEM,PIECE,SPACING,DISPLAY,VALUE,FLDNAME,RTN,LIST,IFARY
"RTN","IBDF1B3",39,0)
 ;
"RTN","IBDF1B3",40,0)
 Q:'$$FLDDESCR^IBDFU1A(FIELD)  ;gets the field description
"RTN","IBDF1B3",41,0)
 D RTNDSCR^IBDFU1B(.RTN) ;get the rtn used by the field
"RTN","IBDF1B3",42,0)
 S IFARY=RTN("DATA_LOCATION")
"RTN","IBDF1B3",43,0)
 W !
"RTN","IBDF1B3",44,0)
 I RTN("DATATYPE")=5 D TXTPRINT Q  ;wordprocessing fields treated differently
"RTN","IBDF1B3",45,0)
 ;now do other than wordprocessing
"RTN","IBDF1B3",46,0)
 S LIST=$S((RTN("DATATYPE")=3)!(RTN("DATATYPE")=4):1,1:0)
"RTN","IBDF1B3",47,0)
 I LIST,TYPE="CURRENT" S ITEM=$G(@IBARRAY("OVERFLOW")@(IBBLK,FIELD,TYPE))
"RTN","IBDF1B3",48,0)
 I TYPE="NEXT",LIST D
"RTN","IBDF1B3",49,0)
 .I $Y>(IOSL-5) W @IOF D HDR
"RTN","IBDF1B3",50,0)
 .S ITEM=1 W !,?5,"**** LIST OF ",$E(RTN("NAME"),$F(RTN("NAME")," "),40)," ****" F  D LISTVAL D  Q:'ITEM
"RTN","IBDF1B3",51,0)
 ..I VALUE'="" D SUBFLDS W !
"RTN","IBDF1B3",52,0)
 I TYPE="CURRENT" D
"RTN","IBDF1B3",53,0)
 .W !,?5,"**** ",$E(RTN("NAME"),$F(RTN("NAME")," "),40)_$S(LIST:" (#"_ITEM_")",1:"")_" ****"
"RTN","IBDF1B3",54,0)
 .I 'LIST D SNGLVAL
"RTN","IBDF1B3",55,0)
 .I LIST D LISTVAL
"RTN","IBDF1B3",56,0)
 .D SUBFLDS
"RTN","IBDF1B3",57,0)
 Q
"RTN","IBDF1B3",58,0)
SUBFLDS ;process each subfield
"RTN","IBDF1B3",59,0)
 N LAST,PVALUE
"RTN","IBDF1B3",60,0)
 S LAST=$$SFLDDSCR^IBDFU1A(FIELD,0) Q:'LAST
"RTN","IBDF1B3",61,0)
 F  D  S LAST=$$SFLDDSCR^IBDFU1A(FIELD,LAST) Q:'LAST
"RTN","IBDF1B3",62,0)
 .I RTN("DATATYPE")=1!(RTN("DATATYPE")=3) S PIECE=1
"RTN","IBDF1B3",63,0)
 .S PVALUE=$P($G(VALUE),"^",PIECE)
"RTN","IBDF1B3",64,0)
 .;don't use the label appearing on the encounter form - it might be 'context sensitive' - use description form package interface file
"RTN","IBDF1B3",65,0)
 .S LABEL=$$DATANAME^IBDFU1B(RTN,PIECE)
"RTN","IBDF1B3",66,0)
 .I $Y>(IOSL-3) W @IOF D HDR
"RTN","IBDF1B3",67,0)
 .W !,?5,LABEL_": ",PVALUE
"RTN","IBDF1B3",68,0)
 Q
"RTN","IBDF1B3",69,0)
 ;
"RTN","IBDF1B3",70,0)
LIST ;displays the list
"RTN","IBDF1B3",71,0)
 N RTN,LABEL,ITEM,PIECE,VALUE,LIST,IFARY,CNT
"RTN","IBDF1B3",72,0)
 ;
"RTN","IBDF1B3",73,0)
 S LIST=FIELD
"RTN","IBDF1B3",74,0)
 Q:$$LSTDESCR^IBDFU1(.LIST)  ;gets the list description
"RTN","IBDF1B3",75,0)
 S RTN=LIST("RTN")
"RTN","IBDF1B3",76,0)
 D RTNDSCR^IBDFU1B(.RTN) ;get the PACKAGE INTERFACE used
"RTN","IBDF1B3",77,0)
 S IFARY=RTN("DATA_LOCATION")
"RTN","IBDF1B3",78,0)
 W !
"RTN","IBDF1B3",79,0)
 ;
"RTN","IBDF1B3",80,0)
 D
"RTN","IBDF1B3",81,0)
 .S CNT=0
"RTN","IBDF1B3",82,0)
 .I $Y>(IOSL-5) W @IOF D HDR
"RTN","IBDF1B3",83,0)
 .S ITEM=1 W !,?5,"**** LIST OF ",$E(RTN("NAME"),$F(RTN("NAME")," "),40)," ****" F  D LISTVAL D  Q:'ITEM
"RTN","IBDF1B3",84,0)
 ..; -- file overflow data if not re-printing
"RTN","IBDF1B3",85,0)
 ..I '$G(REPRINT),($G(LIST("INPUT_RTN"))]"") D
"RTN","IBDF1B3",86,0)
 ...S CNT=CNT+1
"RTN","IBDF1B3",87,0)
 ...S DIC="^IBD(357.96,IBPFID,2,",DIC(0)="L",DIC("P")=$P(^DD(357.96,2,0),"^",2),DA(1)=IBPFID,X=CNT,DLAYGO=357.96
"RTN","IBDF1B3",88,0)
 ...S DIC("DR")=".03////^S X=LIST(""INPUT_RTN"");.04////^S X=$P(VALUE,""^"");.06////^S X=""S""_LIST_""("";.08////^S X=$P(VALUE,""^"",2)"
"RTN","IBDF1B3",89,0)
 ...K DD,DO D FILE^DICN K DIC,DA,DLAYGO,DD,DO
"RTN","IBDF1B3",90,0)
 ..I VALUE'="" D SUBCOLS W !
"RTN","IBDF1B3",91,0)
 Q
"RTN","IBDF1B3",92,0)
SUBCOLS ;process each subcolumn
"RTN","IBDF1B3",93,0)
 N PVALUE,SUB,PIECE
"RTN","IBDF1B3",94,0)
 F SUB=1:1:6 D
"RTN","IBDF1B3",95,0)
 .Q:(LIST("SCTYPE",SUB)'=1)
"RTN","IBDF1B3",96,0)
 .Q:'LIST("SCPIECE",SUB)
"RTN","IBDF1B3",97,0)
 .S PIECE=LIST("SCPIECE",SUB)
"RTN","IBDF1B3",98,0)
 .S PVALUE=$P($G(VALUE),"^",PIECE)
"RTN","IBDF1B3",99,0)
 .;don't use the label appearing on the encounter form - it might be 'context sensitive' - use description form package interface file
"RTN","IBDF1B3",100,0)
 .S LABEL=$$DATANAME^IBDFU1B(RTN,PIECE)
"RTN","IBDF1B3",101,0)
 .I $Y>(IOSL-3) W @IOF D HDR
"RTN","IBDF1B3",102,0)
 .W !,?5,LABEL_": ",PVALUE
"RTN","IBDF1B3",103,0)
 Q
"RTN","IBDF1B3",104,0)
 ;
"RTN","IBDF1B3",105,0)
SNGLVAL ;output - VALUE
"RTN","IBDF1B3",106,0)
 S VALUE=$G(@IFARY)
"RTN","IBDF1B3",107,0)
 Q
"RTN","IBDF1B3",108,0)
LISTVAL ;input - ITEM=prior item processes, output - VALUE,ITEM=current item processed
"RTN","IBDF1B3",109,0)
 ;
"RTN","IBDF1B3",110,0)
 S VALUE=$S(ITEM:$G(@IFARY@(ITEM)),1:"")
"RTN","IBDF1B3",111,0)
 ;increment ITEM to next item
"RTN","IBDF1B3",112,0)
 S ITEM=$O(@IFARY@(ITEM))
"RTN","IBDF1B3",113,0)
 Q
"RTN","IBDF1B3",114,0)
TXTPRINT ;for printing a word-processing field
"RTN","IBDF1B3",115,0)
 N LINE,X,DIWL,DIWR,DIWF,LABEL
"RTN","IBDF1B3",116,0)
 S LINE=0,DIWR=IOM-10,DIWL=0,DIWF=""
"RTN","IBDF1B3",117,0)
 K ^UTILITY($J,"W",1)
"RTN","IBDF1B3",118,0)
 F  S LINE=$O(@IFARY@(LINE)) Q:'LINE  S X=$G(@IFARY@(LINE,0)) I X'="" D ^DIWP
"RTN","IBDF1B3",119,0)
 S LABEL=$E(RTN("NAME"),$F(RTN("NAME")," "),40)
"RTN","IBDF1B3",120,0)
 I $Y>(IOSL-5) W @IOF D HDR
"RTN","IBDF1B3",121,0)
 W !,?5,LABEL_": "
"RTN","IBDF1B3",122,0)
 S X=0 F  S X=$O(^UTILITY($J,"W",0,X)) Q:'X  D
"RTN","IBDF1B3",123,0)
 .I $Y>(IOSL-3) W @IOF D HDR
"RTN","IBDF1B3",124,0)
 .W !,?10,$G(^UTILITY($J,"W",0,X,0))
"RTN","IBDF1B3",125,0)
 K ^UTILITY($J,"W",1)
"RTN","IBDF1B3",126,0)
 Q
"RTN","IBDF1B5")
0^100^B23192084
"RTN","IBDF1B5",1,0)
IBDF1B5 ;ALB/CJM - ENCOUNTER FORM - (prints reports defined by print manager); 5/15/93
"RTN","IBDF1B5",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF1B5",3,0)
 ;
"RTN","IBDF1B5",4,0)
PRNTOTHR(CLINIC,APPT,DFN) ;prints reports defined for CLINIC/DIVISION
"RTN","IBDF1B5",5,0)
 ; -- input CLINIC = ien file 44
"RTN","IBDF1B5",6,0)
 ; --       APPT = pts appointment date in fm format
"RTN","IBDF1B5",7,0)
 ; --       DFN = ptr to pt file
"RTN","IBDF1B5",8,0)
 Q:'CLINIC!('APPT)!('DFN)
"RTN","IBDF1B5",9,0)
 N DIVISION,RPT,IBDIV,IBCLIN
"RTN","IBDF1B5",10,0)
 S DIVISION=+$$DIVISION(CLINIC)
"RTN","IBDF1B5",11,0)
 ; -- build arrays of reports to print
"RTN","IBDF1B5",12,0)
 D DIV(DIVISION,.IBDIV),CLIN(CLINIC,.IBCLIN)
"RTN","IBDF1B5",13,0)
 ; -- go through clinic reports and print
"RTN","IBDF1B5",14,0)
 S RPT=0 F  S RPT=$O(IBCLIN(RPT)) Q:'RPT  I '$$EXCLUDE(CLINIC,RPT) D PRINT(RPT,$P(IBCLIN(RPT),"^",2))
"RTN","IBDF1B5",15,0)
 ; -- go through division reports
"RTN","IBDF1B5",16,0)
 S RPT=0 F  S RPT=$O(IBDIV(RPT)) Q:'RPT  I '$$EXCLUDE(CLINIC,RPT) D
"RTN","IBDF1B5",17,0)
 .N RULE,RNAR
"RTN","IBDF1B5",18,0)
 .Q:$D(IBCLIN(RPT))  ; already defined for clinic (clinic overrides div)
"RTN","IBDF1B5",19,0)
 .S RULE=+IBDIV(RPT),RNAR=$G(^IBE(357.92,+RULE,0)) ; set rule and narrative
"RTN","IBDF1B5",20,0)
 .I RNAR["MULTIPLE",'$$MULTIPLE^IBDF1B1A(DFN,$E(IBAPPT,1,7)) Q  ; if rule=print for multiple appts and pt does not have multiple appts that day, quit
"RTN","IBDF1B5",21,0)
 .I RNAR["EARLIEST",'$$EARLIEST(DFN,DIVISION,IBAPPT,RPT) Q  ;if rule=print for earliest appt that does not exclude, and this is not the earliest appt that includes the rpt, quit
"RTN","IBDF1B5",22,0)
 .D PRINT(RPT,$P(IBDIV(RPT),"^",2))
"RTN","IBDF1B5",23,0)
 Q
"RTN","IBDF1B5",24,0)
 ;
"RTN","IBDF1B5",25,0)
DIV(DIVISION,DIV) ; -- builds array of reports to print for division
"RTN","IBDF1B5",26,0)
 ; -- input DIVISION = ien from 40.8
"RTN","IBDF1B5",27,0)
 ; --       DIV = name of array to pass back
"RTN","IBDF1B5",28,0)
 ; -- output array in format DIV(ien of report)=""
"RTN","IBDF1B5",29,0)
 N TYPE,RTN,SETUP,RPT
"RTN","IBDF1B5",30,0)
 Q:'DIVISION
"RTN","IBDF1B5",31,0)
 F TYPE=0:0 S TYPE=$O(^SD(409.96,"A",DIVISION,TYPE)) Q:'TYPE  F RTN=0:0 S RTN=$O(^SD(409.96,"A",DIVISION,TYPE,RTN)) Q:'RTN  F SETUP=0:0 S SETUP=$O(^SD(409.96,"A",DIVISION,TYPE,RTN,SETUP)) Q:'SETUP  D
"RTN","IBDF1B5",32,0)
 .S RPT=0 F  S RPT=$O(^SD(409.96,"A",DIVISION,TYPE,RTN,SETUP,RPT)) Q:'RPT  S DIV(+$G(^SD(409.96,SETUP,1,RPT,0)))=$P($G(^SD(409.96,SETUP,1,RPT,0)),"^",2,3)
"RTN","IBDF1B5",33,0)
 Q
"RTN","IBDF1B5",34,0)
 ;
"RTN","IBDF1B5",35,0)
CLIN(CLINIC,CLIN) ; -- builds array of reports to print for clinic
"RTN","IBDF1B5",36,0)
 ; -- input CLINIC = ien from 44
"RTN","IBDF1B5",37,0)
 ; --       CLIN = name of array to pass back
"RTN","IBDF1B5",38,0)
 ; -- output array in format CLIN(ien of report)=""
"RTN","IBDF1B5",39,0)
 N TYPE,RTN,SETUP,RPT
"RTN","IBDF1B5",40,0)
 Q:'CLINIC
"RTN","IBDF1B5",41,0)
 F TYPE=0:0 S TYPE=$O(^SD(409.95,"A",CLINIC,TYPE)) Q:'TYPE  S RTN="" F  S RTN=$O(^SD(409.95,"A",CLINIC,TYPE,RTN)) Q:'RTN  F SETUP=0:0 S SETUP=$O(^SD(409.95,"A",CLINIC,TYPE,RTN,SETUP)) Q:'SETUP  D
"RTN","IBDF1B5",42,0)
 .S RPT=0 F  S RPT=$O(^SD(409.95,"A",CLINIC,TYPE,RTN,SETUP,RPT)) Q:'RPT  S CLIN(+$G(^SD(409.95,SETUP,1,RPT,0)))=$P($G(^SD(409.95,SETUP,1,RPT,0)),"^",2,3)
"RTN","IBDF1B5",43,0)
 Q
"RTN","IBDF1B5",44,0)
 ;
"RTN","IBDF1B5",45,0)
EXCLUDE(CLINIC,RPT) ;deterine if report is excluded for specified clinic
"RTN","IBDF1B5",46,0)
 ; -- input CLINIC = ien from file 44
"RTN","IBDF1B5",47,0)
 ; --       RPT = ien of report
"RTN","IBDF1B5",48,0)
 ; -- output 1 if report is excluded, 0 if not excluded
"RTN","IBDF1B5",49,0)
 I 'CLINIC!('RPT) Q 0
"RTN","IBDF1B5",50,0)
 ;print all the reports defined for the entire division,unless excluded for the clinic
"RTN","IBDF1B5",51,0)
 Q $S($D(^SD(409.95,"AE",CLINIC,RPT)):1,1:0)
"RTN","IBDF1B5",52,0)
 ;
"RTN","IBDF1B5",53,0)
EARLIEST(DFN,DIV,APPT,RPT) ;determine if appt is earliest appt that does
"RTN","IBDF1B5",54,0)
 ; -- not exclude the report
"RTN","IBDF1B5",55,0)
 ; -- input DFN = ien file 2
"RTN","IBDF1B5",56,0)
 ; --       DIV = ien 40.8
"RTN","IBDF1B5",57,0)
 ; --       APPT = appt we have printed EF for
"RTN","IBDF1B5",58,0)
 ; --       RPT = ien of report
"RTN","IBDF1B5",59,0)
 N PRN,APT
"RTN","IBDF1B5",60,0)
 Q:'DFN!('DIV)!('APPT)!('RPT)
"RTN","IBDF1B5",61,0)
 K ^TMP("IBDF",$J,"APPT LIST")
"RTN","IBDF1B5",62,0)
 D GETLIST^IBDF1B1A(DFN,$E(APPT,1,7),DIV)
"RTN","IBDF1B5",63,0)
 S APT=0 F  S APT=$O(^TMP("IBDF",$J,"APPT LIST",DIV,DFN,APT)) Q:'APT  S CLINIC=^(APT) D  Q:$D(PRN)
"RTN","IBDF1B5",64,0)
 .Q:$D(^SD(409.95,"AE",CLINIC,RPT))
"RTN","IBDF1B5",65,0)
 .I APT=APPT S PRN=1 Q
"RTN","IBDF1B5",66,0)
 .S PRN=0
"RTN","IBDF1B5",67,0)
 Q $S($D(PRN):PRN,1:1)
"RTN","IBDF1B5",68,0)
 ;
"RTN","IBDF1B5",69,0)
PRINT(PI,SIDES) ;fetches the package interface record,prints the report
"RTN","IBDF1B5",70,0)
 ; -- input PI = ien of report
"RTN","IBDF1B5",71,0)
 ; --       SIDES=0-simplex, 1-duplex long-edge, 2-duplex short-edge
"RTN","IBDF1B5",72,0)
 N IBRTN S IBRTN=PI N RTN,RPT
"RTN","IBDF1B5",73,0)
 D RTNDSCR^IBDFU1B(.IBRTN) ;get the interface description
"RTN","IBDF1B5",74,0)
 Q:IBRTN("ACTION")'=4  ;quit if the interface isn't the type that prints a report
"RTN","IBDF1B5",75,0)
 ;health summaries always use the same rtn to print
"RTN","IBDF1B5",76,0)
 I IBRTN("HSMRY?")=1 Q:'IBRTN("HSMRY")  S IBRTN("RTN")="PRNTSMRY^IBDFN5("_IBRTN("HSMRY")_")"
"RTN","IBDF1B5",77,0)
 N TYPE,DIVISION,CLINIC,QUIT,CLNCNAME,PNAME,PTYPE,TDIGIT
"RTN","IBDF1B5",78,0)
 ;go to duplex?
"RTN","IBDF1B5",79,0)
 D
"RTN","IBDF1B5",80,0)
 .I SIDES=1,IBDEVICE("DUPLEX_LONG")]"" W IBDEVICE("DUPLEX_LONG") Q
"RTN","IBDF1B5",81,0)
 .I SIDES=2,IBDEVICE("DUPLEX_SHORT")]"" W IBDEVICE("DUPLEX_SHORT") Q
"RTN","IBDF1B5",82,0)
 .I IBDEVICE("SIMPLEX")]"" W IBDEVICE("SIMPLEX") Q
"RTN","IBDF1B5",83,0)
 .I $Y W @IOF
"RTN","IBDF1B5",84,0)
 .I SIDES=0,IBDEVICE("SIMPLEX")]"" W IBDEVICE("SIMPLEX")
"RTN","IBDF1B5",85,0)
 N A S A=$$DORTN^IBDFU1B(.IBRTN)
"RTN","IBDF1B5",86,0)
 ;go back to simplex
"RTN","IBDF1B5",87,0)
 D
"RTN","IBDF1B5",88,0)
 .I SIDES=1,IBDEVICE("DUPLEX_LONG")]"",IBDEVICE("SIMPLEX")]"" W IBDEVICE("SIMPLEX") Q
"RTN","IBDF1B5",89,0)
 .I SIDES=2,IBDEVICE("DUPLEX_SHORT")]"",IBDEVICE("SIMPLEX")]"" W IBDEVICE("SIMPLEX") Q
"RTN","IBDF1B5",90,0)
 Q
"RTN","IBDF1B5",91,0)
DIVISION(CLINIC) ;returns the clinic's division - format is IEN^division's name
"RTN","IBDF1B5",92,0)
 N DIV,NAME
"RTN","IBDF1B5",93,0)
 Q:'$G(CLINIC) ""
"RTN","IBDF1B5",94,0)
 S DIV=+$P($G(^SC(CLINIC,0)),"^",15)
"RTN","IBDF1B5",95,0)
 I DIV S NAME=$P($G(^DG(40.8,DIV,0)),"^")
"RTN","IBDF1B5",96,0)
 I $L($G(NAME)) S DIV=DIV_"^"_NAME
"RTN","IBDF1B5",97,0)
 E  S DIV=""
"RTN","IBDF1B5",98,0)
 Q DIV
"RTN","IBDF1B5",99,0)
IFOTHR(CLINIC,TYPE) ; -- returns a 1 if there are reports defined for CLINIC for print condition=TYPE,0 if otherwise
"RTN","IBDF1B5",100,0)
 N RTN,DIVISION,COUNT
"RTN","IBDF1B5",101,0)
 S COUNT=0
"RTN","IBDF1B5",102,0)
 S TYPE=$O(^IBE(357.92,"B",TYPE,"")) Q:'TYPE 0 ;get ien of TYPE
"RTN","IBDF1B5",103,0)
 S DIVISION=+$$DIVISION(CLINIC)
"RTN","IBDF1B5",104,0)
 ;counts all the reports defined for the entire division
"RTN","IBDF1B5",105,0)
 I DIVISION S RTN="" F  S RTN=$O(^SD(409.96,"A",DIVISION,TYPE,RTN)) Q:'RTN  S:'$D(^SD(409.95,"AE",CLINIC,RTN)) COUNT=COUNT+1 Q:COUNT
"RTN","IBDF1B5",106,0)
 ;counts all the reports defined for the clinic
"RTN","IBDF1B5",107,0)
 S RTN="" F  S RTN=$O(^SD(409.95,"A",CLINIC,TYPE,RTN)) Q:'RTN  S COUNT=COUNT+1 Q:COUNT
"RTN","IBDF1B5",108,0)
 Q COUNT
"RTN","IBDF1BA")
0^101^B19149892
"RTN","IBDF1BA",1,0)
IBDF1BA ;ALB/CJM - ENCOUNTER FORM (user options for printing - continuation of IBDF1B); 3/1/93
"RTN","IBDF1BA",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF1BA",3,0)
 ;
"RTN","IBDF1BA",4,0)
TERMSTRT ;get terminal digit to restart from - OUTPUT=IBREPRNT
"RTN","IBDF1BA",5,0)
 S IBREPRNT="",DIR(0)="F^4:5",DIR("A")="ENTER THE LAST 4 DIGITS OF THE SSN TO BEGIN REPRINT FROM",DIR("?")="ENTER THE LAST FOUR DIGITS OF THE SSN OF THE LAST PATIENT FOR WHOM FORMS WERE PRINTED"
"RTN","IBDF1BA",6,0)
 F  D ^DIR Q:$D(DIRUT)!(Y=-1)  D  Q:IBREPRNT'=""
"RTN","IBDF1BA",7,0)
 .I Y'?4N W !,$C(7),"MUST BE 4 NUMBERS!" Q
"RTN","IBDF1BA",8,0)
 .S IBREPRNT=Y,IBREPRNT=+($E(IBREPRNT,3,4)_$E(IBREPRNT,1,2))
"RTN","IBDF1BA",9,0)
 K DIR
"RTN","IBDF1BA",10,0)
 Q
"RTN","IBDF1BA",11,0)
CLNCSTRT ;get clinic and division to restart from,OUTPUT=IBREPRNT (name of clinic) and IBSTRTDV (division to restart from)
"RTN","IBDF1BA",12,0)
 ;
"RTN","IBDF1BA",13,0)
 N NODE
"RTN","IBDF1BA",14,0)
 S IBREPRNT=""
"RTN","IBDF1BA",15,0)
 S DIR(0)="409.95,.01",DIR("A")="ENTER CLINIC TO BEGIN REPRINT FROM",DIR("?")="ENTER THE LAST CLINIC FOR WHICH ANY FORMS WERE PRINTED"
"RTN","IBDF1BA",16,0)
 D ^DIR K DIR I $D(DIRUT)!(+Y<0) Q
"RTN","IBDF1BA",17,0)
 S NODE=$G(^SC(+Y,0))
"RTN","IBDF1BA",18,0)
 S IBREPRNT=$P(NODE,"^")
"RTN","IBDF1BA",19,0)
 S IBSTRTDV=+$P(NODE,"^",15) I IBSTRTDV S IBSTRTDV=$P($G(^DG(40.8,IBSTRTDV,0)),"^")
"RTN","IBDF1BA",20,0)
 Q
"RTN","IBDF1BA",21,0)
 ;
"RTN","IBDF1BA",22,0)
SEARCH ;get the appointment data on a patient, put in IBTMP array, indexed by appointment
"RTN","IBDF1BA",23,0)
 ;screens out any appts in clinics with nothing defined to print
"RTN","IBDF1BA",24,0)
 N IBX,IBLN,CLINIC,APPT
"RTN","IBDF1BA",25,0)
 S (VASD("F"),VASD("T"))=IBDT,VASD("W")=129 D SDA^VADPT Q:(VAERR!'$D(^UTILITY("VASD",$J)))
"RTN","IBDF1BA",26,0)
 S IBX="" F  S IBX=$O(^UTILITY("VASD",$J,IBX)) Q:IBX=""  D
"RTN","IBDF1BA",27,0)
 . S IBLN=^UTILITY("VASD",$J,IBX,"I"),APPT=+$P(IBLN,"^"),CLINIC=$P(IBLN,"^",2)
"RTN","IBDF1BA",28,0)
 .Q:'APPT!'CLINIC
"RTN","IBDF1BA",29,0)
 .Q:'($D(^SD(409.95,"B",CLINIC))!$D(^SD(409.96,"B",+$$DIVISION^IBDF1B5(CLINIC))))
"RTN","IBDF1BA",30,0)
 .;^UTILITY("VASD",$J,IBX,"E")=(EXTERNAL FORMAT) appt date time^clinic name^status^appt type
"RTN","IBDF1BA",31,0)
 .S IBTMP(APPT)=DFN_"^"_CLINIC_"^"_IBNM_"^"_^UTILITY("VASD",$J,IBX,"E")
"RTN","IBDF1BA",32,0)
 K VASD,VAERR,^UTILITY("VASD",$J)
"RTN","IBDF1BA",33,0)
 Q
"RTN","IBDF1BA",34,0)
 ;
"RTN","IBDF1BA",35,0)
DISP ;display patients/clinics appointments found and get users choice
"RTN","IBDF1BA",36,0)
 ;sort type is by clinic,patient
"RTN","IBDF1BA",37,0)
 N CLNCIEN,CLNCNAME
"RTN","IBDF1BA",38,0)
 I '$D(IBTMP) W !!,?5,"No Active Appointments for ",IBNM," on",!,"this date in any clinic or division that has forms or reports defined to print",! G ENDDISP
"RTN","IBDF1BA",39,0)
 I '$D(IBTMP) W !!,?10,"No Active Appointments in a Clinic with an Encounter Form",!,?10,"for ",IBNM," on this date.",! G ENDDISP
"RTN","IBDF1BA",40,0)
 W !!,"Appointments for ",IBNM,!
"RTN","IBDF1BA",41,0)
 S IBX="" F IBI=1:1 S IBX=$O(IBTMP(IBX)) Q:IBX=""  S IBLN=IBTMP(IBX) W !,$J(IBI,3),"  ",$E($P(IBLN,"^",5),1,20),?25,"   " F IBJ=4,6,7 W "  ",$P(IBLN,"^",IBJ)
"RTN","IBDF1BA",42,0)
 S DIR(0)="LO^1:"_(IBI-1),DIR("A")="    Select Appointments" D ^DIR K DIR G:$D(DIRUT) ENDDISP
"RTN","IBDF1BA",43,0)
 S IBX="" F IBI=1:1 S IBX=$O(IBTMP(IBX)) Q:IBX=""  I Y[(IBI_",") D
"RTN","IBDF1BA",44,0)
 .S CLNCIEN=$P(IBTMP(IBX),"^",2),CLNCNAME=$P(IBTMP(IBX),"^",5)
"RTN","IBDF1BA",45,0)
 .;
"RTN","IBDF1BA",46,0)
 .;list format - ^TMP("IBDF",$J,"P"," ",division name(but set it to " " because for selecting single appts sort by division not needed),clinic name,clinic ien,patient name,dfn,appt)=""
"RTN","IBDF1BA",47,0)
 .S ^TMP("IBDF",$J,"P"," ",$E(CLNCNAME,1,25),CLNCIEN,$E(IBNM,1,25),DFN,IBX)=""
"RTN","IBDF1BA",48,0)
 .;also keep an index by ...,"APPT LIST",DFN,APPT)
"RTN","IBDF1BA",49,0)
 .S ^TMP("IBDF",$J,"APPT LIST",DFN,IBX)=""
"RTN","IBDF1BA",50,0)
ENDDISP K IBTMP,IBX,IBI,IBJ,IBLN,DTOUT,DUOUT,DIRUT,DIROUT,X,Y,^UTILITY("VASD",$J)
"RTN","IBDF1BA",51,0)
 Q
"RTN","IBDF1BA",52,0)
 ;
"RTN","IBDF1BA",53,0)
STARTDIV() ;asks what division to restart the job from and returns division name, or "" if user declines
"RTN","IBDF1BA",54,0)
 N IBDIV
"RTN","IBDF1BA",55,0)
 K DIC S DIC="^DG(40.8,",DIC(0)="AEQMN",DIC("A")="SELECT THE DIVISION TO START THE REPRINT FROM: "
"RTN","IBDF1BA",56,0)
 S IBDIV=$O(^DG(40.8,0)) S:IBDIV DIC("B")=$P($G(^DG(40.8,IBDIV,0)),"^")
"RTN","IBDF1BA",57,0)
 D ^DIC K DIC
"RTN","IBDF1BA",58,0)
 I (+Y<0)!$D(DTOUT)!$D(DUOUT) Q ""
"RTN","IBDF1BA",59,0)
 Q $P(Y,"^",2)
"RTN","IBDF1BA",60,0)
SORTBY ;sort by clinic/patient, clinic/terminal digit, or terminal digit?
"RTN","IBDF1BA",61,0)
 K DIR S DIR(0)="S^1:Division/Clinic/Patient Name;2:Division/Terminal Digits;3:Division/Clinic/Terminal Digits"
"RTN","IBDF1BA",62,0)
 S DIR("?")="Enter '1' for sorting by Division/Clinic/Patient Name or '2' to sort by Division/Terminal Digits or '3' to sort by Division/Clinic/Terminal Digits."
"RTN","IBDF1BA",63,0)
 S DIR("A")="How should the output be SORTED?",DIR("B")="1" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBDF1BA",64,0)
 I Y'=1,Y'=2,Y'=3 S QUIT=1 Q
"RTN","IBDF1BA",65,0)
 S IBSRT=Y
"RTN","IBDF1BA",66,0)
 Q
"RTN","IBDF1C")
0^102^B7016442
"RTN","IBDF1C",1,0)
IBDF1C ;ALB/CJM - ENCOUNTER FORM (print sample form);FEB 11,1992
"RTN","IBDF1C",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF1C",3,0)
 ;
"RTN","IBDF1C",4,0)
 ;This print routine forces queueing - so that allocation problems do not occur.
"RTN","IBDF1C",5,0)
 ;
"RTN","IBDF1C",6,0)
PRINT(IBFORM) ;
"RTN","IBDF1C",7,0)
 N IBQUIT,NODE,HT,WD S IBQUIT=0
"RTN","IBDF1C",8,0)
 D FULL^VALM1
"RTN","IBDF1C",9,0)
 S VALMBCK="R"
"RTN","IBDF1C",10,0)
 ;
"RTN","IBDF1C",11,0)
 I ('$G(IBFORM))!$G(IBTKBLK) N IBFORM D FORM G:IBQUIT EXIT
"RTN","IBDF1C",12,0)
 I $G(IBFORM) S NODE=$G(^IBE(357,IBFORM,0)),WD=$P(NODE,"^",9),HT=$P(NODE,"^",10) K NODE
"RTN","IBDF1C",13,0)
 D DEVICE,HOME^%ZIS G EXIT
"RTN","IBDF1C",14,0)
 ;
"RTN","IBDF1C",15,0)
QUEUED ; entry
"RTN","IBDF1C",16,0)
 D FORM^IBDF2A(IBFORM,0)
"RTN","IBDF1C",17,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBDF1C",18,0)
 ;
"RTN","IBDF1C",19,0)
EXIT ;
"RTN","IBDF1C",20,0)
 K ZTSK,Y,X,J,D0,%,%I,D,DIC,DY,DX,I
"RTN","IBDF1C",21,0)
 Q
"RTN","IBDF1C",22,0)
 ;
"RTN","IBDF1C",23,0)
DEVICE ;
"RTN","IBDF1C",24,0)
 W !,"** You must queue the form to print. **"
"RTN","IBDF1C",25,0)
 W !,$C(7),"** This Encounter Form requires "_WD_" columns and a page length of "_HT_" lines. **",!
"RTN","IBDF1C",26,0)
 ;
"RTN","IBDF1C",27,0)
 ;queuing is automatic - the device is not opened
"RTN","IBDF1C",28,0)
 K %IS,%ZIS,IOP S %ZIS="N0Q",%ZIS("A")="Printer to queue to: ",%ZIS("B")="",%ZIS("S")="I $E($P($G(^%ZIS(2,+$G(^%ZIS(1,Y,""SUBTYPE"")),0)),U),1,2)=""P-""" D ^%ZIS
"RTN","IBDF1C",29,0)
 Q:POP
"RTN","IBDF1C",30,0)
 S ZTRTN="QUEUED^IBDF1C",ZTSAVE("IBFORM")="",ZTDESC="ENCOUNTER FORM",ZTDTH=$H D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","IBDF1C",31,0)
 Q
"RTN","IBDF1C",32,0)
 ;
"RTN","IBDF1C",33,0)
FORM ;returns IBFORM
"RTN","IBDF1C",34,0)
 N P4
"RTN","IBDF1C",35,0)
 S IBFORM=0
"RTN","IBDF1C",36,0)
 ;if the user used the '=' syntax then assume he wants to choose from the list
"RTN","IBDF1C",37,0)
 S P4=$P(XQORNOD(0),"^",4)
"RTN","IBDF1C",38,0)
 I P4["==" S P4=$P(P4,"==")_"="_$P(P4,"==",2),$P(XQORNOD(0),"^",4)=P4
"RTN","IBDF1C",39,0)
 I $G(VALM("TITLE"))["FORMS",$P(P4,"=",2) D
"RTN","IBDF1C",40,0)
 .I $G(IBAPI("SELECT"))'="" X IBAPI("SELECT")
"RTN","IBDF1C",41,0)
 .S:IBFORM Y(0)=$G(^IBE(357,IBFORM,0))
"RTN","IBDF1C",42,0)
 E  D
"RTN","IBDF1C",43,0)
 .K DIR S DIR(0)="YA",DIR("A")="Do you want to print a form from the toolkit? "
"RTN","IBDF1C",44,0)
 .D ^DIR K DIR Q:(Y=-1)!($D(DIRUT))
"RTN","IBDF1C",45,0)
 .K DIC S DIC("S")=$S(Y:"I $P(^(0),U,7),$P(^(0),U)'=""WORKCOPY"",$P(^(0),U)'=""TOOL KIT""",1:"I '$P(^(0),U,7)"),DIC=357,DIC(0)="AEQZ",DIC("A")="Select any FORM by name: "
"RTN","IBDF1C",46,0)
 .D ^DIC K DIC Q:$D(DIRUT)!(Y<0)
"RTN","IBDF1C",47,0)
 .S IBFORM=+Y
"RTN","IBDF1C",48,0)
 I 'IBFORM S IBQUIT=1 Q
"RTN","IBDF1C",49,0)
 S WD=$P($G(Y(0)),"^",9),HT=$P($G(Y(0)),"^",10)
"RTN","IBDF1C",50,0)
 Q
"RTN","IBDF2A")
0^103^B28922797
"RTN","IBDF2A",1,0)
IBDF2A ;ALB/CJM - ENCOUNTER FORM (builds form and prints it);NOV 16,1992
"RTN","IBDF2A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF2A",3,0)
FORM(IBFORM,WITHDATA) ;prints FORM - defines IBDEVICE array
"RTN","IBDF2A",4,0)
 ;input variables - IBFORM=ien of the form, WITHDATA=1 if the form should be completed with data 
"RTN","IBDF2A",5,0)
 ;
"RTN","IBDF2A",6,0)
 N IBDEVICE
"RTN","IBDF2A",7,0)
 ;
"RTN","IBDF2A",8,0)
 D DEVICE^IBDFUA(0,.IBDEVICE)
"RTN","IBDF2A",9,0)
 D DRWFORM(IBFORM,WITHDATA,.IBDEVICE)
"RTN","IBDF2A",10,0)
EXIT ;
"RTN","IBDF2A",11,0)
 ;
"RTN","IBDF2A",12,0)
 D KPRNTVAR^IBDFUA ;kills the screen and graphics parameters
"RTN","IBDF2A",13,0)
 K X,Y,I
"RTN","IBDF2A",14,0)
 Q
"RTN","IBDF2A",15,0)
DRWFORM(IBFORM,WITHDATA,IBDEVICE) ;prints IBFORM - IBDEVICE array already defined, must be passed by reference
"RTN","IBDF2A",16,0)
 N RTNLIST,NODE,IBPFID,IBARRAY,LINES,HAND,IBPRINT,TYPE,UNIT,PRINT,REPRINT
"RTN","IBDF2A",17,0)
 ;
"RTN","IBDF2A",18,0)
 Q:'$$FORMDSCR^IBDFU1C(.IBFORM)
"RTN","IBDF2A",19,0)
 D PRNTPRMS^IBDFU1C(.IBPRINT,WITHDATA,1,0,1)
"RTN","IBDF2A",20,0)
 ;
"RTN","IBDF2A",21,0)
 D DEVSETUP^IBDF2A1(.IBFORM,.IBDEVICE)
"RTN","IBDF2A",22,0)
 K ^TMP("IB",$J,"INTERFACES"),^TMP("IBDF",$J,"FORM"),^("OVERFLOW")
"RTN","IBDF2A",23,0)
 S IBPFID=""
"RTN","IBDF2A",24,0)
 ;
"RTN","IBDF2A",25,0)
 ;for forms other than toolkit, always use compiled version
"RTN","IBDF2A",26,0)
 I 'IBFORM("TOOLKIT"),'IBFORM("COMPILED") D COMPILE^IBDF19 Q:'IBFORM("COMPILED")
"RTN","IBDF2A",27,0)
 ;
"RTN","IBDF2A",28,0)
 S REPRINT=0
"RTN","IBDF2A",29,0)
 ;if printing a form with patient data to paper get id for form tracking
"RTN","IBDF2A",30,0)
 I '$G(IBDSAMP),IBFORM("COMPILED"),IBPRINT("WITH_DATA"),'IBDEVICE("CRT") S IBPFID=+$$FID^IBDF18C(DFN,IBAPPT,1,IBFORM("TYPE"),IBCLINIC) I $P($G(^IBD(357.96,+IBPFID,1,0)),"^",4) S REPRINT=1
"RTN","IBDF2A",31,0)
 ;
"RTN","IBDF2A",32,0)
 D ARRAYS^IBDFU1C(.IBFORM,.IBARRAY)
"RTN","IBDF2A",33,0)
 I 'IBFORM("TOOLKIT"),WITHDATA D JUSTDATA(WITHDATA)
"RTN","IBDF2A",34,0)
 I IBFORM("TOOLKIT") D DRWBLKS
"RTN","IBDF2A",35,0)
 ;
"RTN","IBDF2A",36,0)
 ;if no graphics and not PCL replace graphics with something printable
"RTN","IBDF2A",37,0)
 I 'IBDEVICE("PCL") D REPLACE
"RTN","IBDF2A",38,0)
 ;
"RTN","IBDF2A",39,0)
 ;can not do underlining on a CRT
"RTN","IBDF2A",40,0)
 I IBDEVICE("CRT") S IBARRAY("UNDERLINES")="IBARRAY(""UNDERLINES"")"
"RTN","IBDF2A",41,0)
 ;
"RTN","IBDF2A",42,0)
 ;print the form
"RTN","IBDF2A",43,0)
 D LNPRINT^IBDF2F($G(IBPFID))
"RTN","IBDF2A",44,0)
 ;
"RTN","IBDF2A",45,0)
 ;print the overflow report
"RTN","IBDF2A",46,0)
 I IBPRINT("WITH_DATA") D OVERFLOW^IBDF1B3
"RTN","IBDF2A",47,0)
 ;
"RTN","IBDF2A",48,0)
 K ^TMP("IB",$J,"INTERFACES"),^TMP("IBDF",$J,"FORM")
"RTN","IBDF2A",49,0)
 ;
"RTN","IBDF2A",50,0)
 ;reset printer defaults if PCL5
"RTN","IBDF2A",51,0)
 I $G(IBDEVICE("PCL")) S %ZIS="0Q",IOP=ION_";"_IOST_";"_IOM_";"_IOSL D ^%ZIS
"RTN","IBDF2A",52,0)
 Q
"RTN","IBDF2A",53,0)
 ;
"RTN","IBDF2A",54,0)
DRWBLKS ;draws all the form's blocks
"RTN","IBDF2A",55,0)
 N IBBLK,RTNLIST
"RTN","IBDF2A",56,0)
 S IBBLK="" F  S IBBLK=$O(^IBE(357.1,"C",IBFORM,IBBLK)) Q:'IBBLK  D DRWBLOCK^IBDF2A1(IBBLK,0)
"RTN","IBDF2A",57,0)
 Q
"RTN","IBDF2A",58,0)
 ;
"RTN","IBDF2A",59,0)
JUSTDATA(WITHDATA) ;draws the form's data fields and dynamic selection lists, just the portion that may change with data
"RTN","IBDF2A",60,0)
 ;WITHDATA means to fill in with data
"RTN","IBDF2A",61,0)
 ;
"RTN","IBDF2A",62,0)
 N IBBLK,RTNLIST,IBFLD,IBLIST,SUB,NODE,IBPRINT
"RTN","IBDF2A",63,0)
 ;
"RTN","IBDF2A",64,0)
 D PRNTPRMS^IBDFU1C(.IBPRINT,WITHDATA,0,0,1)
"RTN","IBDF2A",65,0)
 ;
"RTN","IBDF2A",66,0)
 I IBDEVICE("LISTMAN") N IBWARN S IBWARN=0
"RTN","IBDF2A",67,0)
 S IBBLK="" F  S IBBLK=$O(^IBE(357.1,"C",IBFORM,IBBLK)) Q:'IBBLK  D
"RTN","IBDF2A",68,0)
 .Q:$$BLKDESCR^IBDFU1B(.IBBLK)
"RTN","IBDF2A",69,0)
 .S IBFLD="" F  S IBFLD=$O(^IBE(357.5,"C",IBBLK,IBFLD)) Q:'IBFLD  D DATAFLD^IBDF2B(IBFLD)
"RTN","IBDF2A",70,0)
 .S:'IBPRINT("WITH_DATA") IBPRINT("ENTIRE")=1 S IBLIST="" F  S IBLIST=$O(^IBE(357.2,"AD",IBBLK,IBLIST)) Q:'IBLIST  D PRINTLST^IBDF2D(IBLIST)
"RTN","IBDF2A",71,0)
 .I IBDEVICE("LISTMAN") S SUB=0 F  S SUB=$O(^IBE(357.1,IBBLK,"B",SUB)) Q:'SUB  S NODE=$G(^IBE(357.1,IBBLK,"B",SUB,0)) D DRWSTR^IBDFU(+$P(NODE,"^")\1,+$P(NODE,"^",2),"[ ]")
"RTN","IBDF2A",72,0)
 Q
"RTN","IBDF2A",73,0)
 ;
"RTN","IBDF2A",74,0)
REPLACE ;replace objects requiring PCL with plain text
"RTN","IBDF2A",75,0)
 N IBROW,IBCOL,IBBLK
"RTN","IBDF2A",76,0)
 D PRNTPRMS^IBDFU1C(.IBPRINT,0,1,0,1)
"RTN","IBDF2A",77,0)
 S IBBLK("X")=0,IBBLK("Y")=0
"RTN","IBDF2A",78,0)
 I 'IBDEVICE("GRAPHICS") D
"RTN","IBDF2A",79,0)
 .S IBROW="" F  S IBROW=$O(@IBARRAY("GRAPHICS")@(IBROW)) Q:IBROW=""  S IBCOL="" F  S IBCOL=$O(@IBARRAY("GRAPHICS")@(IBROW,IBCOL)) Q:IBCOL=""  D DRWSTR^IBDFU(IBROW,IBCOL,$G(@IBARRAY("GRAPHICS")@(IBROW,IBCOL)),"G")
"RTN","IBDF2A",80,0)
 .S IBARRAY("GRAPHICS")="IBARRAY(""GRAPHICS"")"
"RTN","IBDF2A",81,0)
 ;
"RTN","IBDF2A",82,0)
 ;replace bubbles with "[ ]"
"RTN","IBDF2A",83,0)
 S IBROW="" F  S IBROW=$O(@IBARRAY("BUBBLES")@(IBROW)) Q:IBROW=""  S IBCOL="" F  S IBCOL=$O(@IBARRAY("BUBBLES")@(IBROW,IBCOL)) Q:IBCOL=""  D DRWSTR^IBDFU(IBROW\1,IBCOL,"[ ]")
"RTN","IBDF2A",84,0)
 S IBARRAY("BUBBLES")="IBARRAY(""BUBBLES"")"
"RTN","IBDF2A",85,0)
 ;
"RTN","IBDF2A",86,0)
 ;now replace hand print fields
"RTN","IBDF2A",87,0)
 S IBROW="" F  S IBROW=$O(@IBARRAY("HAND_PRINT")@(IBROW)) Q:IBROW=""  S IBCOL="" F  S IBCOL=$O(@IBARRAY("HAND_PRINT")@(IBROW,IBCOL)) Q:IBCOL=""  S HAND=0 F  S HAND=$O(@IBARRAY("HAND_PRINT")@(IBROW,IBCOL,HAND)) Q:'HAND  D
"RTN","IBDF2A",88,0)
 .N ROW
"RTN","IBDF2A",89,0)
 .S NODE=$G(@IBARRAY("HAND_PRINT")@(IBROW,IBCOL,HAND)),WIDTH=$P(NODE,"^",3),LINES=$P(NODE,"^",6),TYPE=$P(NODE,"^",14),(UNIT,PRINT)="" I $P(NODE,"^",17) S NODE=$G(^IBE(359.1,$P(NODE,"^",17),0)),UNIT=$P(NODE,"^",11),PRINT=$P(NODE,"^",5)
"RTN","IBDF2A",90,0)
 .Q:('WIDTH)!('TYPE)
"RTN","IBDF2A",91,0)
 .S STRING=""
"RTN","IBDF2A",92,0)
 .S:LINES'>0 LINES=1
"RTN","IBDF2A",93,0)
 .S ROW=IBROW
"RTN","IBDF2A",94,0)
 .I TYPE=1 D CNVRTLEN^IBDF2D1(WIDTH,.WIDTH),CNVRTHT^IBDF2D1(LINES,.LINES)
"RTN","IBDF2A",95,0)
 .I TYPE=2 F  Q:LINES'>0  D  S LINES=LINES-1,ROW=IBROW+2
"RTN","IBDF2A",96,0)
 ..N REPLACE,A,I
"RTN","IBDF2A",97,0)
 ..I IBFORM("WIDTH")>96 S $P(STRING,"___|",WIDTH+1)="",REPLACE("_")="    " F I=1:1:$L(PRINT) S A=$E(PRINT,I) S:A'="_" REPLACE(A)=" "_A_"  "
"RTN","IBDF2A",98,0)
 ..I IBFORM("WIDTH")'>96 S $P(STRING,"__|",WIDTH+1)="",REPLACE("_")="   " F I=1:1:$L(PRINT) S A=$E(PRINT,I) S:A'="_" REPLACE(A)=" "_A_" "
"RTN","IBDF2A",99,0)
 ..S:$L(UNIT) STRING=STRING_" "_UNIT
"RTN","IBDF2A",100,0)
 ..I $L(PRINT) S PRINT=$$REPLACE^XLFSTR(PRINT,.REPLACE)
"RTN","IBDF2A",101,0)
 ..D:$L(PRINT) DRWSTR^IBDFU(ROW,IBCOL,PRINT,"",$L(STRING))
"RTN","IBDF2A",102,0)
 ..D DRWSTR^IBDFU(ROW+1,IBCOL,STRING,"",$L(STRING))
"RTN","IBDF2A",103,0)
 .I TYPE=1 S $P(STRING,"_",WIDTH+1)="_" D DRWSTR^IBDFU(ROW+LINES-1,IBCOL,STRING,"")
"RTN","IBDF2A",104,0)
 S IBARRAY("HAND_PRINT")="IBARRAY(""HAND_PRINT"")"
"RTN","IBDF2A",105,0)
 Q
"RTN","IBDF2A1")
0^104^B37345380
"RTN","IBDF2A1",1,0)
IBDF2A1 ;ALB/CJM - ENCOUNTER FORM (IBDF2A continued);NOV 16,1992
"RTN","IBDF2A1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF2A1",3,0)
 ;
"RTN","IBDF2A1",4,0)
DEVSETUP(IBFORM,IBDEVICE) ;set up the device for the form
"RTN","IBDF2A1",5,0)
 ;pass IBFORM, IBDEVICE by reference
"RTN","IBDF2A1",6,0)
 ;sets device to no wrap
"RTN","IBDF2A1",7,0)
 ;sets "ROW_HT" and "COL_WIDTH" in IBDEVICE
"RTN","IBDF2A1",8,0)
 ;
"RTN","IBDF2A1",9,0)
 S X=0 X $G(^%ZOSF("RM")) K X ;sets device to no wrapping
"RTN","IBDF2A1",10,0)
 ;
"RTN","IBDF2A1",11,0)
 I $G(IBDEVICE("PCL")) D
"RTN","IBDF2A1",12,0)
 .S IOSL=IBFORM("PAGE_HT")
"RTN","IBDF2A1",13,0)
 .W $C(27),"E"
"RTN","IBDF2A1",14,0)
 .I $G(IBDEVICE("RESET"))'="" W @IBDEVICE("RESET")
"RTN","IBDF2A1",15,0)
 .S IOINHI=$C(27)_"(s3B",IOINORM=$C(27)_"(s0B"
"RTN","IBDF2A1",16,0)
 .S IBDEVICE("DUPLEX_SHORT")=$C(27)_"&l2S",IBDEVICE("SIMPLEX")=$C(27)_"&l0S",IBDEVICE("DUPLEX_LONG")=$C(27)_"&l1S"
"RTN","IBDF2A1",17,0)
 .S IORVON=$C(27)_"*v0n1o1T",IORVOFF=$C(27)_"*v0T"
"RTN","IBDF2A1",18,0)
 .S IOXY="W $C(27)_""&a""_DX_""c""_DY_""R"""
"RTN","IBDF2A1",19,0)
 .;set to paper to letter size, portrait mode
"RTN","IBDF2A1",20,0)
 .W $C(27),"&l2a0O"
"RTN","IBDF2A1",21,0)
 .D
"RTN","IBDF2A1",22,0)
 ..I IBFORM("WIDTH")>96 W $C(27)_"(s0p16.67h8.5v0s0b0T" S IBDEVICE("COL_WIDTH")=720/16.67,(IOINHI,IOINORM)="" Q
"RTN","IBDF2A1",23,0)
 ..I IBFORM("WIDTH")>80 W $C(27)_"(s0p12h10v0s0b0T" S IBDEVICE("COL_WIDTH")=720/12 Q
"RTN","IBDF2A1",24,0)
 ..W $C(27)_"(s0p10h12v0s0b0T" S IBDEVICE("COL_WIDTH")=720/10
"RTN","IBDF2A1",25,0)
 .D
"RTN","IBDF2A1",26,0)
 ..;!!!!!!!!!!Make the VMI a bit bigger? Seems to look good at VMI=6, and getting too cramped
"RTN","IBDF2A1",27,0)
 ..;!!!!!!I IBFORM("PAGE_HT")>72 W $C(27),"&l5.6667C" S IBDEVICE("ROW_HT")=85.0005 Q  ;sets the VMI=5.6667, to get 8 lines per inch Q
"RTN","IBDF2A1",28,0)
 ..I IBFORM("PAGE_HT")>72 W $C(27),"&l6C" S IBDEVICE("ROW_HT")=90 Q  ;sets the VMI=5.6667, to get 8 lines per inch Q
"RTN","IBDF2A1",29,0)
 ..I IBFORM("PAGE_HT")>60 W $C(27),"&l6.6667C" S IBDEVICE("ROW_HT")=100.0005 Q  ;sets the VMI=6.6667, to get 7.2 lines per inch
"RTN","IBDF2A1",30,0)
 ..W $C(27),"&l8C" S IBDEVICE("ROW_HT")=120 ;sets the VMI=8, to get 6 lines per inch
"RTN","IBDF2A1",31,0)
 ;
"RTN","IBDF2A1",32,0)
 I '$G(IBDEVICE("PCL")) D
"RTN","IBDF2A1",33,0)
 .S (DX,DY)=0 X $G(^%ZOSF("XY")) K DX,DY ;make sure $X,$Y=0
"RTN","IBDF2A1",34,0)
 Q
"RTN","IBDF2A1",35,0)
 ;
"RTN","IBDF2A1",36,0)
DRWBLOCK(IBBLK,NOOFFSET) ;IBBLK should be passed by reference, is an array containing the block description
"RTN","IBDF2A1",37,0)
 ;NOOFFSET=1  means don't offset the block on the form
"RTN","IBDF2A1",38,0)
 ;
"RTN","IBDF2A1",39,0)
 N IBFIELD,IBLIST,IBLINE,IBTEXT,IBWRTCNT,HDROS,BOX,OPTIONS,WIDTH,SUB,NODE,STRING,IBLINES,TYPE
"RTN","IBDF2A1",40,0)
 ;
"RTN","IBDF2A1",41,0)
 ;IBPRINT parameters may be altered durring this routine - make sure the original is restored after execution
"RTN","IBDF2A1",42,0)
 D SAVE^IBDF2A2(.IBPRINT,.IBPRINT)
"RTN","IBDF2A1",43,0)
 ;
"RTN","IBDF2A1",44,0)
 Q:$$BLKDESCR^IBDFU1B(.IBBLK)
"RTN","IBDF2A1",45,0)
 I $G(NOOFFSET) S (IBBLK("X"),IBBLK("Y"))=0
"RTN","IBDF2A1",46,0)
 I (IBBLK("X")'=+IBBLK("X"))!(IBBLK("Y")'=+IBBLK("Y")) G EXIT  ;location not known
"RTN","IBDF2A1",47,0)
 ;
"RTN","IBDF2A1",48,0)
 I 'IBPRINT("COMPILING_BLOCKS"),('$D(^IBE(357.1,IBBLK,"S"))!'$D(^IBE(357.1,IBBLK,"V"))!'$D(^IBE(357.1,IBBLK,"B"))!'$D(^IBE(357.1,IBBLK,"H"))) S IBPRINT("COMPILING_BLOCKS")=1,IBPRINT("WRITE_IF_COMPILING")=1
"RTN","IBDF2A1",49,0)
 I IBPRINT("COMPILING_BLOCKS") S (IBWRTCNT("S"),IBWRTCNT("V"),IBWRTCNT("B"),IBWRTCNT("H"))=0 D UNCMPBLK^IBDF19(IBBLK)
"RTN","IBDF2A1",50,0)
 I 'IBPRINT("COMPILING_BLOCKS") D WCMP^IBDF2A2
"RTN","IBDF2A1",51,0)
 I IBPRINT("COMPILING_BLOCKS") D  G:'IBPRINT("WRITE_IF_COMPILING") EXIT
"RTN","IBDF2A1",52,0)
 .N TEMP S TEMP=IBPRINT("WITH_DATA"),IBPRINT("WITH_DATA")=0
"RTN","IBDF2A1",53,0)
 .S IBLIST="" F  S IBLIST=$O(^IBE(357.2,"C",IBBLK,IBLIST)) Q:'IBLIST  D PRINTLST^IBDF2D(IBLIST)
"RTN","IBDF2A1",54,0)
 .S IBFIELD="" F  S IBFIELD=$O(^IBE(357.93,"C",IBBLK,IBFIELD)) Q:'IBFIELD  D MFLD^IBDF2G(IBFIELD)
"RTN","IBDF2A1",55,0)
 .S IBFIELD="" F  S IBFIELD=$O(^IBE(359.94,"C",IBBLK,IBFIELD)) Q:'IBFIELD  D HFLD^IBDF2H(IBFIELD)
"RTN","IBDF2A1",56,0)
 .S ^IBE(357.1,IBBLK,"S",0)="^357.11A^"_IBWRTCNT("S")_"^"_IBWRTCNT("S")
"RTN","IBDF2A1",57,0)
 .S ^IBE(357.1,IBBLK,"V",0)="^357.12A^"_IBWRTCNT("V")_"^"_IBWRTCNT("V")
"RTN","IBDF2A1",58,0)
 .S ^IBE(357.1,IBBLK,"B",0)="^357.13A^"_IBWRTCNT("B")_"^"_IBWRTCNT("B")
"RTN","IBDF2A1",59,0)
 .S ^IBE(357.1,IBBLK,"H",0)="^357.14A^"_IBWRTCNT("H")_"^"_IBWRTCNT("H")
"RTN","IBDF2A1",60,0)
 .S IBPRINT("WITH_DATA")=TEMP
"RTN","IBDF2A1",61,0)
 ;
"RTN","IBDF2A1",62,0)
 ;now write the uncompiled part of the block
"RTN","IBDF2A1",63,0)
 S IBPRINT("COMPILING_BLOCKS")=0
"RTN","IBDF2A1",64,0)
 K IBWRTCNT
"RTN","IBDF2A1",65,0)
 I IBDEVICE("LISTMAN") N IBWARN S IBWARN=0 ;flag set to 1 if a warning is already displayed - don't want to display multiple warnings, users find it aggravating
"RTN","IBDF2A1",66,0)
 S BOX=$S(IBBLK("BOX")=1:1,1:0)
"RTN","IBDF2A1",67,0)
 D:BOX DRWBOX^IBDFU(0,0,IBBLK("W"),IBBLK("H"))
"RTN","IBDF2A1",68,0)
 I IBBLK("HDR")'="" D
"RTN","IBDF2A1",69,0)
 .S HDROS=0
"RTN","IBDF2A1",70,0)
 .S WIDTH=IBBLK("W")-(2*BOX)
"RTN","IBDF2A1",71,0)
 .S OPTIONS=$TR(IBBLK("HDISP"),"C","")
"RTN","IBDF2A1",72,0)
 .S OPTIONS=$TR(OPTIONS,"R","r")
"RTN","IBDF2A1",73,0)
 .I IBBLK("HDISP")["C",$L(IBBLK("HDR"))<WIDTH S HDROS=(WIDTH-$L(IBBLK("HDR")))\2
"RTN","IBDF2A1",74,0)
 .I BOX D DRWSTR^IBDFU(1,1,$J("",HDROS)_$E(IBBLK("HDR"),1,WIDTH),OPTIONS,WIDTH)
"RTN","IBDF2A1",75,0)
 .I 'BOX D DRWSTR^IBDFU(0,0+HDROS,$E(IBBLK("HDR"),1,WIDTH),OPTIONS)
"RTN","IBDF2A1",76,0)
 S IBLINE="" F  S IBLINE=$O(^IBE(357.7,"C",IBBLK,IBLINE)) Q:'IBLINE  D PRNTLINE^IBDF2E(IBLINE)
"RTN","IBDF2A1",77,0)
 S IBTEXT="" F  S IBTEXT=$O(^IBE(357.8,"C",IBBLK,IBTEXT)) Q:'IBTEXT  D PRNTTEXT^IBDF2E(IBTEXT)
"RTN","IBDF2A1",78,0)
 S IBFIELD="" F  S IBFIELD=$O(^IBE(357.5,"C",IBBLK,IBFIELD)) Q:'IBFIELD  D DATAFLD^IBDF2B(IBFIELD)
"RTN","IBDF2A1",79,0)
 I IBPRINT("WITH_DATA") S IBPRINT("ENTIRE")=0,IBLIST="" F  S IBLIST=$O(^IBE(357.2,"AD",IBBLK,IBLIST)) Q:'IBLIST  D PRINTLST^IBDF2D(IBLIST)
"RTN","IBDF2A1",80,0)
 ;
"RTN","IBDF2A1",81,0)
 ;NOTE: bubbles & hand print fields have been written to file, but not to the array for list processor
"RTN","IBDF2A1",82,0)
 ;
"RTN","IBDF2A1",83,0)
 G:'IBDEVICE("LISTMAN") EXIT
"RTN","IBDF2A1",84,0)
 S SUB=0 F  S SUB=$O(^IBE(357.1,IBBLK,"B",SUB)) Q:'SUB  S NODE=$G(^IBE(357.1,IBBLK,"B",SUB,0)) D DRWSTR^IBDFU(+$P(NODE,"^")\1,+$P(NODE,"^",2),"[ ]")
"RTN","IBDF2A1",85,0)
 S SUB=0 F  S SUB=$O(^IBE(357.1,IBBLK,"H",SUB)) Q:'SUB  S NODE=$G(^IBE(357.1,IBBLK,"H",SUB,0)) S TYPE=$P(NODE,"^",14),WIDTH=+$P(NODE,"^",3) I TYPE,WIDTH D
"RTN","IBDF2A1",86,0)
 .N UNIT,PRINT,REPLACE,A,I,TYPENODE
"RTN","IBDF2A1",87,0)
 .S IBLINES=$P(NODE,"^",6) S:IBLINES'>0 IBLINES=1
"RTN","IBDF2A1",88,0)
 .S STRING="",ROW=+NODE
"RTN","IBDF2A1",89,0)
 .;
"RTN","IBDF2A1",90,0)
 .;replace the hand print fields - overlay with print format and label for units
"RTN","IBDF2A1",91,0)
 .;TYPE=2 means use ICR, may have a print format and datatype
"RTN","IBDF2A1",92,0)
 .I TYPE=2 D
"RTN","IBDF2A1",93,0)
 ..S TYPENODE=$P(NODE,"^",17) I TYPENODE S TYPENODE=$G(^IBE(359.1,TYPENODE,0))
"RTN","IBDF2A1",94,0)
 ..S UNIT=$P(TYPENODE,"^",11),PRINT=$P(TYPENODE,"^",5)
"RTN","IBDF2A1",95,0)
 ..F  Q:IBLINES'>0  D  S IBLINES=IBLINES-1,ROW=ROW+2
"RTN","IBDF2A1",96,0)
 ...I IBFORM("WIDTH")>96 S $P(STRING,"___|",WIDTH+1)="",REPLACE("_")="    " F I=1:1:$L(PRINT) S A=$E(PRINT,I) S:A'="_" REPLACE(A)=" "_A_"  "
"RTN","IBDF2A1",97,0)
 ...I IBFORM("WIDTH")'>96 S $P(STRING,"__|",WIDTH+1)="",REPLACE("_")="   " F I=1:1:$L(PRINT) S A=$E(PRINT,I) S:A'="_" REPLACE(A)=" "_A_" "
"RTN","IBDF2A1",98,0)
 ...S:$L(UNIT) STRING=STRING_" "_UNIT
"RTN","IBDF2A1",99,0)
 ...I $L(PRINT) S PRINT=$$REPLACE^XLFSTR(PRINT,.REPLACE)
"RTN","IBDF2A1",100,0)
 ...D DRWSTR^IBDFU(ROW,+$P(NODE,"^",2),PRINT,"R",$L(STRING))
"RTN","IBDF2A1",101,0)
 ...D DRWSTR^IBDFU(ROW+1,+$P(NODE,"^",2),STRING,"R",$L(STRING))
"RTN","IBDF2A1",102,0)
 .;
"RTN","IBDF2A1",103,0)
 .I TYPE=1 D CNVRTLEN^IBDF2D1(WIDTH,.WIDTH),CNVRTHT^IBDF2D1(IBLINES,.IBLINES) F  Q:IBLINES'>0  D  S IBLINES=IBLINES-1,ROW=ROW+1
"RTN","IBDF2A1",104,0)
 ..D DRWSTR^IBDFU(ROW,+$P(NODE,"^",2),"","R",WIDTH)
"RTN","IBDF2A1",105,0)
 ;
"RTN","IBDF2A1",106,0)
EXIT ;
"RTN","IBDF2A1",107,0)
 D RESTORE^IBDF2A2(.IBPRINT,.IBPRINT)
"RTN","IBDF2A1",108,0)
 Q
"RTN","IBDF2A2")
0^105^B6279235
"RTN","IBDF2A2",1,0)
IBDF2A2 ;ALB/CJM - ENCOUNTER FORM (IBDF2A continued);NOV 16,1992
"RTN","IBDF2A2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF2A2",3,0)
 ;
"RTN","IBDF2A2",4,0)
WCMP ;write the compiled version
"RTN","IBDF2A2",5,0)
 N SUB,ND,WIDTH,STRING,LINES,ROW,FNAME,TYPE,UNIT,TYPENODE,ND2
"RTN","IBDF2A2",6,0)
 S SUB=0 F  S SUB=$O(^IBE(357.1,IBBLK,"S",SUB)) Q:'SUB  S ND=$G(^IBE(357.1,IBBLK,"S",SUB,0)) D DRWSTR^IBDFU(+$P(ND,"^"),+$P(ND,"^",2),$P(ND,"^",5,200),$P(ND,"^",3),$P(ND,"^",4))
"RTN","IBDF2A2",7,0)
 S SUB=0 F  S SUB=$O(^IBE(357.1,IBBLK,"V",SUB)) Q:'SUB  S ND=$G(^IBE(357.1,IBBLK,"V",SUB,0)) D DRWVLINE^IBDFU(+$P(ND,"^"),+$P(ND,"^",2),+$P(ND,"^",3),$P(ND,"^",4))
"RTN","IBDF2A2",8,0)
 ;
"RTN","IBDF2A2",9,0)
 ;bubbles
"RTN","IBDF2A2",10,0)
 S SUB=0 F  S SUB=$O(^IBE(357.1,IBBLK,"B",SUB)) Q:'SUB  S ND=$G(^IBE(357.1,IBBLK,"B",SUB,0)),ND2=$G(^IBE(357.1,IBBLK,"B",SUB,2)) D
"RTN","IBDF2A2",11,0)
 .D DRWBBL^IBDFM1(+$P(ND,"^"),+$P(ND,"^",2),+$P(ND,"^",3),$P(ND,"^",4),$P(ND,"^",5),$P(ND,"^",6),$P(ND,"^",7),$P(ND,"^",8),$P(ND,"^",9),$P(ND,"^",10),$P(ND,"^",11),$P(ND,"^",12),$P($G(^IBE(357.1,IBBLK,"B",SUB,1)),"^"),$P(ND,"^",13),$G(ND2))
"RTN","IBDF2A2",12,0)
 ;
"RTN","IBDF2A2",13,0)
 ;handprint
"RTN","IBDF2A2",14,0)
 S SUB=0 F  S SUB=$O(^IBE(357.1,IBBLK,"H",SUB)) Q:'SUB  S ND=$G(^IBE(357.1,IBBLK,"H",SUB,0)) D
"RTN","IBDF2A2",15,0)
 .D DRWHAND^IBDFM1(+ND,+$P(ND,"^",2),+$P(ND,"^",3),$P(ND,"^",4),$P(ND,"^",6),$P(ND,"^",7),$P(ND,"^",8),$P(ND,"^",9),$P(ND,"^",10),$P(ND,"^",12),$P(ND,"^",14),$P(ND,"^",15),$P(ND,"^",17))
"RTN","IBDF2A2",16,0)
 Q
"RTN","IBDF2A2",17,0)
 ;
"RTN","IBDF2A2",18,0)
SAVE(ARRAY,VAR) ;saves one array to the string=VAR, pass by reference
"RTN","IBDF2A2",19,0)
 N SUB,I
"RTN","IBDF2A2",20,0)
 S I=1,SUB="" F  S SUB=$O(ARRAY(SUB)) Q:SUB=""  S $P(VAR,"^",I)=ARRAY(SUB),I=I+1
"RTN","IBDF2A2",21,0)
 Q
"RTN","IBDF2A2",22,0)
RESTORE(ARRAY,VAR) ;restores the array from the string=VAR, pass by reference
"RTN","IBDF2A2",23,0)
 N SUB,I
"RTN","IBDF2A2",24,0)
 S I=1,SUB="" F  S SUB=$O(ARRAY(SUB)) Q:SUB=""  S ARRAY(SUB)=$P(VAR,"^",I),I=I+1
"RTN","IBDF2A2",25,0)
 Q
"RTN","IBDF2B")
0^106^B16192726
"RTN","IBDF2B",1,0)
IBDF2B ;ALB/CJM - ENCOUNTER FORM - (prints data field);12/15/92
"RTN","IBDF2B",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF2B",3,0)
DATAFLD(FIELD) ;for printing data fields to the encounter form
"RTN","IBDF2B",4,0)
 ;IBPRINT("WITH_DATA") means to complete the form with data
"RTN","IBDF2B",5,0)
 ;RTNLIST is used to keep a list of package interface routines called - it should not be newed
"RTN","IBDF2B",6,0)
 ;IBPRINT("ENTIRE")=0 means just fill in the data
"RTN","IBDF2B",7,0)
 ;
"RTN","IBDF2B",8,0)
 N LASTITEM,RTN,MAXX,MAXY,LABEL,XLAB,YLAB,XIO,YIO,WIO,HIO,BLK,ITEM,PIECE,SPACING,DISPLAY,LAST,VALUE,FLDNAME
"RTN","IBDF2B",9,0)
 ;LAST - the last subfield read
"RTN","IBDF2B",10,0)
 Q:'$$FLDDESCR^IBDFU1A(FIELD)  ;get the 0 node of the field description
"RTN","IBDF2B",11,0)
 Q:BLK='IBBLK  ;check that the field really belongs to correct block
"RTN","IBDF2B",12,0)
 D RTNDSCR^IBDFU1B(.RTN) ;get the rtn used by the field
"RTN","IBDF2B",13,0)
 ;if this is not the first time this form is being printed, and the data does not change, quit
"RTN","IBDF2B",14,0)
 I 'IBPRINT("ENTIRE"),'RTN("CHANGES") Q
"RTN","IBDF2B",15,0)
 I $G(IBDEVICE("LISTMAN")) D RANGE
"RTN","IBDF2B",16,0)
 I IBPRINT("WITH_DATA")!('RTN("CHANGES")) D RTN
"RTN","IBDF2B",17,0)
 I RTN("DATATYPE")=5 D TXTPRINT^IBDF2B1 Q  ;wordprocessing fields treated differently
"RTN","IBDF2B",18,0)
 ;now do other than wordprocessing
"RTN","IBDF2B",19,0)
 ;process each subfield
"RTN","IBDF2B",20,0)
 S LAST=$$SFLDDSCR^IBDFU1A(FIELD,0) Q:'LAST
"RTN","IBDF2B",21,0)
 F  D  S LAST=$$SFLDDSCR^IBDFU1A(FIELD,LAST) Q:'LAST
"RTN","IBDF2B",22,0)
 .;print labels unless it's a batch job and the form has already been computed
"RTN","IBDF2B",23,0)
 .I IBPRINT("ENTIRE"),(LABEL'=""),DISPLAY'["I" D
"RTN","IBDF2B",24,0)
 ..D DRWSTR^IBDFU(YLAB,XLAB,LABEL,DISPLAY)
"RTN","IBDF2B",25,0)
 ..I IBDEVICE("LISTMAN"),((XLAB+($L(LABEL)-1))>MAXX)!(YLAB>MAXY) D WARNING
"RTN","IBDF2B",26,0)
 .D PRNTDATA
"RTN","IBDF2B",27,0)
 Q
"RTN","IBDF2B",28,0)
RANGE ;sets MAXX and MAXY to the maximum values allowed for the X,Y coordinates
"RTN","IBDF2B",29,0)
 N BOX
"RTN","IBDF2B",30,0)
 S BOX=$S(IBBLK("BOX")'=2:1,1:0)
"RTN","IBDF2B",31,0)
 S MAXY=IBBLK("H")-(1+BOX)
"RTN","IBDF2B",32,0)
 S MAXX=IBBLK("W")-(1+BOX)
"RTN","IBDF2B",33,0)
 Q
"RTN","IBDF2B",34,0)
PRNTDATA ;displays the correct data to the subfield
"RTN","IBDF2B",35,0)
 N PVALUE,NODE
"RTN","IBDF2B",36,0)
 I RTN("DATATYPE")=1!(RTN("DATATYPE")=3) S PIECE=1
"RTN","IBDF2B",37,0)
 Q:'PIECE
"RTN","IBDF2B",38,0)
 S NODE=$$DATANODE^IBDFU1B(RTN,PIECE)
"RTN","IBDF2B",39,0)
 S PVALUE=$P($S(NODE'="":$G(VALUE(NODE)),1:$G(VALUE)),"^",PIECE)
"RTN","IBDF2B",40,0)
 I WIO,PVALUE="" D
"RTN","IBDF2B",41,0)
 .;print the underscore only if the data is not variable
"RTN","IBDF2B",42,0)
 .I IBDEVICE("LISTMAN") S PVALUE=$S(IBPRINT("WITH_DATA")&RTN("CHANGES"):$J("",WIO),1:$$HLINE^IBDFU(WIO)) Q
"RTN","IBDF2B",43,0)
 .I 'RTN("CHANGES") S PVALUE=$$HLINE^IBDFU(WIO)
"RTN","IBDF2B",44,0)
 I PVALUE'="" D
"RTN","IBDF2B",45,0)
 .I ('IBDEVICE("LISTMAN")),($L(PVALUE)>WIO),RTN("FULL") D OVERFLOW("CURRENT")
"RTN","IBDF2B",46,0)
 .I 'IBDEVICE("LISTMAN"),((RTN("DATATYPE")=3)!(RTN("DATATYPE")=4)),LASTITEM,$O(@RTN("DATA_LOCATION")@(ITEM)),RTN("FULL") D OVERFLOW("NEXT")
"RTN","IBDF2B",47,0)
 .D DRWSTR^IBDFU(YIO,XIO,$$PADRIGHT^IBDFU(PVALUE,WIO))
"RTN","IBDF2B",48,0)
 .I IBDEVICE("LISTMAN"),((XIO+WIO-1)>MAXX)!(YIO>MAXY) D WARNING
"RTN","IBDF2B",49,0)
 Q
"RTN","IBDF2B",50,0)
RTN ;calls the rtn specified by the pkg interface if ok
"RTN","IBDF2B",51,0)
 Q:RTN("ACTION")'=2
"RTN","IBDF2B",52,0)
 Q:RTN("NAME")=""
"RTN","IBDF2B",53,0)
 ;quit if its not the first time this form has been printed and the data is not changeable
"RTN","IBDF2B",54,0)
 Q:(('IBPRINT("ENTIRE"))&('RTN("CHANGES")))
"RTN","IBDF2B",55,0)
 ;
"RTN","IBDF2B",56,0)
 N NODE S NODE=""
"RTN","IBDF2B",57,0)
 ;call the interface routine if it has not already been called
"RTN","IBDF2B",58,0)
 I '$D(RTNLIST(RTN("RTN"))) Q:'$$DORTN^IBDFU1B(.RTN)
"RTN","IBDF2B",59,0)
 ;
"RTN","IBDF2B",60,0)
 ;keep a list of rtns called because some routines return multiple data elements
"RTN","IBDF2B",61,0)
 S:'IBDEVICE("LISTMAN") RTNLIST(RTN("RTN"))=""
"RTN","IBDF2B",62,0)
 ;
"RTN","IBDF2B",63,0)
 ;now fetch the value, unless it's wordprocessing field
"RTN","IBDF2B",64,0)
 I (RTN("DATATYPE")=1)!(RTN("DATATYPE")=2) S VALUE=$G(@RTN("DATA_LOCATION")) F  S NODE=$O(@RTN("DATA_LOCATION")@(NODE)) Q:NODE=""  S VALUE(NODE)=$G(@RTN("DATA_LOCATION")@(NODE)) Q
"RTN","IBDF2B",65,0)
 I (RTN("DATATYPE")=3)!(RTN("DATATYPE")=4),ITEM S VALUE=$G(@RTN("DATA_LOCATION")@(ITEM)) F  S NODE=$O(@RTN("DATA_LOCATION")@(ITEM,NODE)) Q:NODE=""  S VALUE(NODE)=$G(@RTN("DATA_LOCATION")@(ITEM,NODE))
"RTN","IBDF2B",66,0)
 Q
"RTN","IBDF2B",67,0)
 ;
"RTN","IBDF2B",68,0)
ADDLINES ;if there are unused lines writes blank lines to the form
"RTN","IBDF2B",69,0)
 ;LNSUSED is the number of lines used already,HIO is the total number of lines allowed
"RTN","IBDF2B",70,0)
 N I,LSPACING,NUMLEFT
"RTN","IBDF2B",71,0)
 Q:HIO'>0
"RTN","IBDF2B",72,0)
 I LNSUSED'<HIO Q
"RTN","IBDF2B",73,0)
 S LSPACING=1
"RTN","IBDF2B",74,0)
 I (SPACING=2)!(SPACING=3) S LSPACING=2
"RTN","IBDF2B",75,0)
 S NUMLEFT=HIO-LNSUSED
"RTN","IBDF2B",76,0)
 S NUMLEFT=NUMLEFT\LSPACING
"RTN","IBDF2B",77,0)
 I IBDEVICE("LISTMAN") D
"RTN","IBDF2B",78,0)
 .I ((XIO+WIO-1)>MAXX)!((YIO+(NUMLEFT*LSPACING)-1)>MAXY) D WARNING
"RTN","IBDF2B",79,0)
 F I=1:1:NUMLEFT D DRWSTR^IBDFU(YIO+LNSUSED+(I*LSPACING)-1,XIO,$$HLINE^IBDFU(WIO))
"RTN","IBDF2B",80,0)
 Q
"RTN","IBDF2B",81,0)
WARNING ; prints a warning that data field prints outside of block - meant only for display while editing a form description
"RTN","IBDF2B",82,0)
 Q:IBWARN
"RTN","IBDF2B",83,0)
 W !,"Data Field="_FLDNAME_" in Block="_IBBLK("NAME")_" is printing",!,"outside of the block!"
"RTN","IBDF2B",84,0)
 D PAUSE^IBDFU5
"RTN","IBDF2B",85,0)
 S IBWARN=1
"RTN","IBDF2B",86,0)
 Q
"RTN","IBDF2B",87,0)
OVERFLOW(TYPE) ;keeps track of data that does not fit on the form
"RTN","IBDF2B",88,0)
 ;TYPE=="CURRENT" if other than a WP field will not fit
"RTN","IBDF2B",89,0)
 ;    ="NEXT" if the data is from a list and the last item indicator is set
"RTN","IBDF2B",90,0)
 S @IBARRAY("OVERFLOW")@(IBBLK,FIELD,TYPE)=$G(ITEM)
"RTN","IBDF2B",91,0)
 Q
"RTN","IBDF2B1")
0^107^B3345156
"RTN","IBDF2B1",1,0)
IBDF2B1 ;ALB/CJM - ENCOUNTER FORM - (continuation of IBDF2B);12/15/92
"RTN","IBDF2B1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF2B1",3,0)
 ;
"RTN","IBDF2B1",4,0)
TXTPRINT ;for printing a word-processing field
"RTN","IBDF2B1",5,0)
 ;
"RTN","IBDF2B1",6,0)
 ;if the this is not the first time this form is being printed and the data doesn't change then don't print it!
"RTN","IBDF2B1",7,0)
 Q:(('IBPRINT("ENTIRE"))&('RTN("CHANGES")))
"RTN","IBDF2B1",8,0)
 ;
"RTN","IBDF2B1",9,0)
 N LINE,LNSUSED,SPACE,QUIT S LNSUSED=0 ;LNSUSED keeps track of number of available lines for text are used already
"RTN","IBDF2B1",10,0)
 S SPACE=$S(SPACING=2:2,1:1)
"RTN","IBDF2B1",11,0)
 I 'HIO!('WIO)!(XIO'=+XIO)!(YIO'=+YIO) Q
"RTN","IBDF2B1",12,0)
 I LABEL'="",(('IBPRINT("WITH_DATA"))!($G(@RTN("DATA_LOCATION")@(1,0))="")) D
"RTN","IBDF2B1",13,0)
 .D DRWSTR^IBDFU(YIO+SPACE-1,XIO,LABEL,DISPLAY)
"RTN","IBDF2B1",14,0)
 .D DRWSTR^IBDFU(YIO+SPACE-1,XIO+$L(LABEL)," "_$$HLINE^IBDFU(WIO-($L(LABEL)+1)))
"RTN","IBDF2B1",15,0)
 .S LNSUSED=SPACE
"RTN","IBDF2B1",16,0)
 I IBPRINT("WITH_DATA"),($G(@RTN("DATA_LOCATION")@(1,0))'="") D
"RTN","IBDF2B1",17,0)
 .D FORMAT^IBDFU6("^TMP(""IB"",$J,""INTERFACES"",+$G(DFN),RTN(""NAME""))",WIO,LABEL)
"RTN","IBDF2B1",18,0)
 .S (LNSUSED,LINE,QUIT)=0 F  S LINE=$O(^UTILITY($J,"W",1,LINE)) D  Q:QUIT
"RTN","IBDF2B1",19,0)
 ..I 'LINE!(LNSUSED+SPACE>HIO) S QUIT=1 D:(LINE&('IBDEVICE("LISTMAN"))&RTN("FULL")) OVERFLOW^IBDF2B("CURRENT") Q
"RTN","IBDF2B1",20,0)
 ..D DRWSTR^IBDFU(YIO+LNSUSED+(SPACE-1),XIO,$$PADRIGHT^IBDFU($G(^UTILITY($J,"W",1,LINE,0)),WIO))
"RTN","IBDF2B1",21,0)
 ..S LNSUSED=LNSUSED+SPACE
"RTN","IBDF2B1",22,0)
 D ADDLINES^IBDF2B
"RTN","IBDF2B1",23,0)
 K ^UTILITY($J,"W",1)
"RTN","IBDF2B1",24,0)
 Q
"RTN","IBDF2D")
0^108^B29691873
"RTN","IBDF2D",1,0)
IBDF2D ;ALB/CJM - ENCOUNTER FORM - WRITE SELECTION LIST ;NOV 16,1992
"RTN","IBDF2D",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF2D",3,0)
 ;prints a selection list
"RTN","IBDF2D",4,0)
PRINTLST(IBLIST) ;writes the selection list to the print array
"RTN","IBDF2D",5,0)
 ;IBLIST - pointer to a selection list
"RTN","IBDF2D",6,0)
 ;
"RTN","IBDF2D",7,0)
 N GROUPODR,SLCTNODR,GROUP,SLCTN,PRRGROUP,QUIT,COL,CWIDTH,CUTLEFT,CUTRIGHT,BOX,LINE,NEEDUPR,ALL,CNT,DRWBBL,TRACKBBL,LOCATION,HDR,SUBHDR
"RTN","IBDF2D",8,0)
 ;CWIDTH=the width of the entries, including end "|"
"RTN","IBDF2D",9,0)
 ;BOX=1 if the block is outlined
"RTN","IBDF2D",10,0)
 ;LINE=1 if the separator between subcolumns has "|"
"RTN","IBDF2D",11,0)
 ;NEEDUPR=1 if, when printing a group header, the row above should be underlined also - cures a defect caused when some subcolumns NOT underlined
"RTN","IBDF2D",12,0)
 ;ALL=0 if list is dynamic and only data should be printed
"RTN","IBDF2D",13,0)
 ;DRWBBL=1 while printing bubbles - can turn off printing of bubbles by setting DRWBBL=0
"RTN","IBDF2D",14,0)
 ;TRACKBBL=1 if bubbles are going into form tracking - for dynamic lists
"RTN","IBDF2D",15,0)
 ;HDR=text of group header
"RTN","IBDF2D",16,0)
 ;SUBHDR=text of subheader within group (defined as a place holder)
"RTN","IBDF2D",17,0)
 ;
"RTN","IBDF2D",18,0)
 S (TRACKBBL,GROUPODR,SLCTNODR,GROUP,SLCTN,PRRGROUP,COL,QUIT,NEEDUPR,CNT,SUBHDR,HDR)=""
"RTN","IBDF2D",19,0)
 S (DRWBBL,ALL)=1
"RTN","IBDF2D",20,0)
 ;
"RTN","IBDF2D",21,0)
 Q:$$LSTDESCR^IBDFU1(.IBLIST)
"RTN","IBDF2D",22,0)
 Q:IBLIST("BLK")'=IBBLK
"RTN","IBDF2D",23,0)
 S BOX=$S(IBBLK("BOX")=2:0,1:1)
"RTN","IBDF2D",24,0)
 S LINE=(IBLIST("SEP")["|")
"RTN","IBDF2D",25,0)
 I 'IBLIST("NUMCOL") S IBLIST("NUMCOL")=8
"RTN","IBDF2D",26,0)
 D SCDESCR^IBDFU1(.IBLIST,.CWIDTH)
"RTN","IBDF2D",27,0)
 I IBLIST("DYNAMIC"),'IBPRINT("ENTIRE") S ALL=0
"RTN","IBDF2D",28,0)
 I IBLIST("DYNAMIC"),IBPRINT("WITH_DATA") D GETDATA(.LOCATION)
"RTN","IBDF2D",29,0)
 ;
"RTN","IBDF2D",30,0)
 ;should the bubbles be written to form tracking?
"RTN","IBDF2D",31,0)
 I IBLIST("DYNAMIC") I $G(IBPFID),$G(IBFORM("SCAN",IBBLK("PAGE"))),IBLIST("INPUT_RTN"),IBDEVICE("PCL") S TRACKBBL=1
"RTN","IBDF2D",32,0)
 ;
"RTN","IBDF2D",33,0)
 ;get the first column
"RTN","IBDF2D",34,0)
 D GETCOL^IBDF2D1(.COL) I 'COL D:IBDEVICE("LISTMAN")  Q
"RTN","IBDF2D",35,0)
 .W !!,"The LIST="_IBLIST("NAME")_" in BLOCK="_IBBLK("NAME")_" requires at least",!,CWIDTH_" columns in order to display!",!
"RTN","IBDF2D",36,0)
 .D PAUSE^IBDFU5
"RTN","IBDF2D",37,0)
 ;
"RTN","IBDF2D",38,0)
 D:ALL OTHER^IBDF2D2
"RTN","IBDF2D",39,0)
 D DRWCOL^IBDF2D1(.COL)
"RTN","IBDF2D",40,0)
 F  D  Q:QUIT
"RTN","IBDF2D",41,0)
 .S PRRGROUP=GROUP
"RTN","IBDF2D",42,0)
 .D NEXT(.GROUP,.GROUPODR,.SLCTNODR,.SLCTN) I 'SLCTN S QUIT=1 Q
"RTN","IBDF2D",43,0)
 .I COL("ROWSLEFT")<(1+IBLIST("BTWN")) D GETCOL^IBDF2D1(.COL) S:'COL QUIT=1 Q:QUIT  D DRWCOL^IBDF2D1(.COL)
"RTN","IBDF2D",44,0)
 .D DISPLAY^IBDF2D3(SLCTN,.COL,HDR,.SUBHDR)
"RTN","IBDF2D",45,0)
 ;
"RTN","IBDF2D",46,0)
 ;for dynamic lists, if full data is needed, add to overflow report if there is more data
"RTN","IBDF2D",47,0)
 ;
"RTN","IBDF2D",48,0)
 I 'IBDEVICE("LISTMAN"),IBLIST("DYNAMIC"),IBLIST("OVERFLOW"),SLCTN S @IBARRAY("OVERFLOW")@(IBBLK,IBLIST,"DYNAMIC LIST")=""
"RTN","IBDF2D",49,0)
 ;
"RTN","IBDF2D",50,0)
 ;no selections left - fill in with blank selections, unless dynamic and just filling in with data
"RTN","IBDF2D",51,0)
 I ALL S SLCTN="",QUIT=0 S:('IBLIST("DYNAMIC"))!('IBLIST("INPUT_RTN")) DRWBBL=0 F  Q:'COL  D
"RTN","IBDF2D",52,0)
 .F  Q:(COL("ROWSLEFT")<(IBLIST("BTWN")+1))  D DISPLAY^IBDF2D3(SLCTN,.COL,HDR,.SUBHDR)
"RTN","IBDF2D",53,0)
 .D GETCOL^IBDF2D1(.COL) S:'COL QUIT=1 Q:QUIT  D DRWCOL^IBDF2D1(.COL)
"RTN","IBDF2D",54,0)
 ;
"RTN","IBDF2D",55,0)
 I IBDEVICE("LISTMAN"),GROUP D NEXT(.GROUP,.GROUPODR,.SLCTNODR,.SLCTN) I SLCTN W !,"There are entries that do not fit on the ",IBLIST("NAME")," list!",!,"Column width="_CWIDTH,!,"Make more room to display all of the entries!",! D PAUSE^IBDFU5
"RTN","IBDF2D",56,0)
 ;
"RTN","IBDF2D",57,0)
 ;
"RTN","IBDF2D",58,0)
EXIT ;
"RTN","IBDF2D",59,0)
 Q
"RTN","IBDF2D",60,0)
 ;
"RTN","IBDF2D",61,0)
NEXT(GROUP,GROUPODR,SLCTNODR,SLCTN) ;finds the next selction to be printed
"RTN","IBDF2D",62,0)
 ;** PARAMETERS - must be passed by reference **
"RTN","IBDF2D",63,0)
 N QUIT S QUIT=0
"RTN","IBDF2D",64,0)
 I IBLIST("DYNAMIC") D  Q
"RTN","IBDF2D",65,0)
 .I IBPRINT("WITH_DATA") S:SLCTN="" SLCTN=0 S SLCTN=$O(@LOCATION@(SLCTN))
"RTN","IBDF2D",66,0)
 S GROUP=$G(GROUP),SLCTN=$G(SLCTN),GROUPODR=$G(GROUPODR),SLCTNODR=$G(SLCTNODR)
"RTN","IBDF2D",67,0)
 F  Q:QUIT  D
"RTN","IBDF2D",68,0)
 .I 'GROUP!(SLCTNODR="") D NXTGROUP(.GROUP,.GROUPODR) S (SLCTNODR,SLCTN)="" S:'GROUP QUIT=1 Q:QUIT  I COL D  Q:QUIT
"RTN","IBDF2D",69,0)
 ..I COL("ROWSLEFT")<1 D GETCOL^IBDF2D1(.COL) S:'COL QUIT=1 Q:QUIT  D DRWCOL^IBDF2D1(.COL)
"RTN","IBDF2D",70,0)
 ..D GROUPHDR(GROUP,.COL,.HDR,.SUBHDR)
"RTN","IBDF2D",71,0)
 .I SLCTNODR="" S SLCTNODR=$O(^IBE(357.3,"APO",IBLIST,GROUP,"")) I SLCTNODR="" Q
"RTN","IBDF2D",72,0)
 .S SLCTN=$O(^IBE(357.3,"APO",IBLIST,GROUP,SLCTNODR,SLCTN)) S:SLCTN QUIT=1 S:'SLCTN SLCTNODR=$O(^IBE(357.3,"APO",IBLIST,GROUP,SLCTNODR))
"RTN","IBDF2D",73,0)
 Q
"RTN","IBDF2D",74,0)
NXTGROUP(GROUP,GROUPODR) ;
"RTN","IBDF2D",75,0)
 ;** PARAMETERS - must be passed by reference **
"RTN","IBDF2D",76,0)
 ;
"RTN","IBDF2D",77,0)
 N QUIT S QUIT=0
"RTN","IBDF2D",78,0)
 F  Q:QUIT  D
"RTN","IBDF2D",79,0)
 .I (GROUPODR="")!('GROUP) S GROUPODR=$O(^IBE(357.4,"APO",IBLIST,GROUPODR)),GROUP="" I GROUPODR="" S QUIT=1 Q
"RTN","IBDF2D",80,0)
 .S GROUP=$O(^IBE(357.4,"APO",IBLIST,GROUPODR,GROUP)) S:GROUP QUIT=1
"RTN","IBDF2D",81,0)
 Q
"RTN","IBDF2D",82,0)
 ;
"RTN","IBDF2D",83,0)
GROUPHDR(GROUP,COL,HDR,SUBHDR) ;writes the group header to the list
"RTN","IBDF2D",84,0)
 ;COL is the column to write at
"RTN","IBDF2D",85,0)
 ;returns HDR=displayed text if passed by reference
"RTN","IBDF2D",86,0)
 ;
"RTN","IBDF2D",87,0)
 N WIDTH,OPTIONS,OFFSET,NODE
"RTN","IBDF2D",88,0)
 S HDR=""
"RTN","IBDF2D",89,0)
 S SUBHDR=""
"RTN","IBDF2D",90,0)
 S NODE=^IBE(357.4,GROUP,0)
"RTN","IBDF2D",91,0)
 ;don't print invisible headers
"RTN","IBDF2D",92,0)
 Q:$P(NODE,"^",4)="I"
"RTN","IBDF2D",93,0)
 S HDR=$P(NODE,"^")
"RTN","IBDF2D",94,0)
 ;some other special cases
"RTN","IBDF2D",95,0)
 I (HDR="BLANK")!(HDR="") S HDR="" Q
"RTN","IBDF2D",96,0)
 ;
"RTN","IBDF2D",97,0)
 S OPTIONS="",OFFSET=$L(IBLIST("SEP1")),WIDTH=CWIDTH-(2*OFFSET)
"RTN","IBDF2D",98,0)
 S HDR=$E(HDR,1,WIDTH)
"RTN","IBDF2D",99,0)
 S OPTIONS=$TR(IBLIST("DGHDR"),"C","")
"RTN","IBDF2D",100,0)
 S OPTIONS=$TR(OPTIONS,"SR","ss")
"RTN","IBDF2D",101,0)
 ;
"RTN","IBDF2D",102,0)
 ;only affects forms with big print - bold otherwise not available
"RTN","IBDF2D",103,0)
 ;??? do we really want to assume bold not available for small fonts?
"RTN","IBDF2D",104,0)
 ;I OPTIONS["s",OPTIONS'["B",IBFORM("WIDTH")<100 S OPTIONS=OPTIONS_"B"
"RTN","IBDF2D",105,0)
 ;I IBFORM("WIDTH")>100 S OPTIONS=$TR(OPTIONS,"B")
"RTN","IBDF2D",106,0)
 ;
"RTN","IBDF2D",107,0)
 I HDR=" " S OPTIONS=$TR(OPTIONS,"s","") S:'IBLIST("ULSLCTNS") OPTIONS=$TR(OPTIONS,"U","")
"RTN","IBDF2D",108,0)
 I IBLIST("DGHDR")["C" S OFFSET=OFFSET+((WIDTH-$L(HDR))\2)
"RTN","IBDF2D",109,0)
 I OPTIONS["U",$L(HDR)<WIDTH,'IBLIST("ULSLCTNS") D
"RTN","IBDF2D",110,0)
 .D DRWSTR^IBDFU($$Y,($$X)+OFFSET,"","U",$L(HDR))
"RTN","IBDF2D",111,0)
 .S OPTIONS=$TR(OPTIONS,"U","")
"RTN","IBDF2D",112,0)
 ;want to apply options over entire column width?
"RTN","IBDF2D",113,0)
 ;I IBLIST("ULSLCTNS")!(LINE&(OPTIONS["s")) D
"RTN","IBDF2D",114,0)
 I IBLIST("ULSLCTNS")!(OPTIONS["s") D
"RTN","IBDF2D",115,0)
 .D DRWSTR^IBDFU($$Y,($$X)+LINE,$J("",OFFSET-LINE)_HDR,OPTIONS,CWIDTH-(2*LINE))
"RTN","IBDF2D",116,0)
 .I OPTIONS["U",NEEDUPR D DRWSTR^IBDFU($$Y-1,($$X)+LINE,"","U",CWIDTH-(2*LINE)) S NEEDUPR=0
"RTN","IBDF2D",117,0)
 E  D DRWSTR^IBDFU($$Y,($$X)+OFFSET,HDR,OPTIONS)
"RTN","IBDF2D",118,0)
 D DECREASE(.COL)
"RTN","IBDF2D",119,0)
 Q
"RTN","IBDF2D",120,0)
 ;
"RTN","IBDF2D",121,0)
DECREASE(COL) ;
"RTN","IBDF2D",122,0)
 S COL("ROWSLEFT")=COL("ROWSLEFT")-1
"RTN","IBDF2D",123,0)
 S COL("NEXTROW")=COL("NEXTROW")+1
"RTN","IBDF2D",124,0)
 Q
"RTN","IBDF2D",125,0)
X() ;
"RTN","IBDF2D",126,0)
 Q COL("X")
"RTN","IBDF2D",127,0)
Y() ;
"RTN","IBDF2D",128,0)
 Q COL("NEXTROW")+COL("Y")
"RTN","IBDF2D",129,0)
 ;
"RTN","IBDF2D",130,0)
GETDATA(LOCATION) ;gets the dynamic data at print time,@LOCATION=where the list was put
"RTN","IBDF2D",131,0)
 ;
"RTN","IBDF2D",132,0)
 N RTN
"RTN","IBDF2D",133,0)
 S RTN=IBLIST("RTN")
"RTN","IBDF2D",134,0)
 D RTNDSCR^IBDFU1B(.RTN)
"RTN","IBDF2D",135,0)
 S LOCATION=RTN("DATA_LOCATION")
"RTN","IBDF2D",136,0)
 I RTN("ACTION")=3,RTN("DYNAMIC") D
"RTN","IBDF2D",137,0)
 .I $G(REPRINT),($G(RTN("INPUT_RTN"))]"") D REPRINT^IBDFN11(IBPFID,IBLIST,.LOCATION) Q
"RTN","IBDF2D",138,0)
 .I '$D(RTNLIST(RTN("RTN"))) Q:'$$DORTN^IBDFU1B(.RTN)
"RTN","IBDF2D",139,0)
 .S:'IBDEVICE("LISTMAN") RTNLIST(RTN("RTN"))=""
"RTN","IBDF2D",140,0)
 Q
"RTN","IBDF2D1")
0^109^B15404785
"RTN","IBDF2D1",1,0)
IBDF2D1 ;ALB/CJM - ENCOUNTER FORM - PRINT SELECTION LIST (cont'd) ;NOV 16,1992
"RTN","IBDF2D1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF2D1",3,0)
GETCOL(COL) ;finds next column
"RTN","IBDF2D1",4,0)
 ;COL - array where output data stored,SHOULD BE PASSED BY REFERENCE
"RTN","IBDF2D1",5,0)
 ;COL=last column number processed
"RTN","IBDF2D1",6,0)
 ;COL("Y")=columns starting row relative to block
"RTN","IBDF2D1",7,0)
 ;COL("X")=column's starting column relative to block
"RTN","IBDF2D1",8,0)
 ;COL("H")=column's height, i.e., maximum # of selections
"RTN","IBDF2D1",9,0)
 ;
"RTN","IBDF2D1",10,0)
 S COL=$G(COL)+1
"RTN","IBDF2D1",11,0)
 S NEEDUPR=0
"RTN","IBDF2D1",12,0)
 I COL=1 S COL("H")=+IBLIST("H",1),COL("X")=+IBLIST("X",1),COL("Y")=+IBLIST("Y",1)
"RTN","IBDF2D1",13,0)
 I COL>IBLIST("NUMCOL") S COL=0 Q
"RTN","IBDF2D1",14,0)
 I $G(IBLIST("Y",COL))'=+$G(IBLIST("Y",COL)) D
"RTN","IBDF2D1",15,0)
 .I COL=1 S COL("Y")=$S(IBBLK("HDR")="":BOX,1:2+BOX)
"RTN","IBDF2D1",16,0)
 .I COL'=1 Q  ;leave value from prior col
"RTN","IBDF2D1",17,0)
 E  S COL("Y")=$G(IBLIST("Y",COL))
"RTN","IBDF2D1",18,0)
 I $G(IBLIST("X",COL))'=+$G(IBLIST("X",COL)) D
"RTN","IBDF2D1",19,0)
 .Q:COL=1
"RTN","IBDF2D1",20,0)
 .S COL("X")=COL("X")+CWIDTH+$S(IBLIST("SEP")=" ":2,IBLIST("SEP")="  ":4,1:0)
"RTN","IBDF2D1",21,0)
 E  S COL("X")=$G(IBLIST("X",COL))
"RTN","IBDF2D1",22,0)
 I $G(IBLIST("H",COL))'=+$G(IBLIST("H",COL)) D
"RTN","IBDF2D1",23,0)
 .I COL=1 S COL("H")=IBBLK("H")
"RTN","IBDF2D1",24,0)
 .I COL'=1 Q  ;leave value from prior col
"RTN","IBDF2D1",25,0)
 E  S COL("H")=$G(IBLIST("H",COL))
"RTN","IBDF2D1",26,0)
 I BOX,'LINE,COL("X")=0 S COL("X")=1
"RTN","IBDF2D1",27,0)
 I (COL("X")+CWIDTH+(('LINE)&BOX))>IBBLK("W") S COL=0 Q
"RTN","IBDF2D1",28,0)
 I (COL("Y")+COL("H"))>(IBBLK("H")-(2*BOX)) S COL("H")=(IBBLK("H")-(COL("Y")+BOX))
"RTN","IBDF2D1",29,0)
 S COL("ROWSLEFT")=COL("H"),COL("NEXTROW")=0
"RTN","IBDF2D1",30,0)
 Q
"RTN","IBDF2D1",31,0)
 ;
"RTN","IBDF2D1",32,0)
DRWCOL(COL) ;draws one column of the selection list except for its contents and rows
"RTN","IBDF2D1",33,0)
 N I,OFFSET,WIDTH
"RTN","IBDF2D1",34,0)
 I LINE,(COL("X")'=0)!('BOX),ALL D DRWVLINE^IBDFU($$Y^IBDF2D,$$X^IBDF2D,COL("H"),"|")
"RTN","IBDF2D1",35,0)
 I LINE,('BOX)!(COL("X")+CWIDTH'=IBBLK("W")),ALL D DRWVLINE^IBDFU($$Y^IBDF2D,$$X^IBDF2D+(CWIDTH-1),COL("H"),"|")
"RTN","IBDF2D1",36,0)
 ;
"RTN","IBDF2D1",37,0)
 ;draw the column header
"RTN","IBDF2D1",38,0)
 I IBLIST("HDR")'="",(COL("ROWSLEFT")>0) D:ALL  D DECREASE^IBDF2D(.COL)
"RTN","IBDF2D1",39,0)
 .S IBLIST("DHDR")=$TR(IBLIST("DHDR"),"RS","rs")
"RTN","IBDF2D1",40,0)
 .;only affects forms with big print - bold otherwise not available
"RTN","IBDF2D1",41,0)
 .I (IBLIST("DHDR")["s")!(IBLIST("DHDR")["r"),IBLIST("DHDR")'["B",IBFORM("WIDTH")<100 S IBLIST("DHDR")=IBLIST("DHDR")_"B"
"RTN","IBDF2D1",42,0)
 .I IBFORM("WIDTH")>100 S IBLIST("DHDR")=$TR(IBLIST("DHDR"),"B")
"RTN","IBDF2D1",43,0)
 .;
"RTN","IBDF2D1",44,0)
 .S WIDTH=CWIDTH-(2*LINE)
"RTN","IBDF2D1",45,0)
 .S OFFSET=LINE
"RTN","IBDF2D1",46,0)
 .I IBLIST("DHDR")["C",$L(IBLIST("HDR"))<WIDTH S OFFSET=OFFSET+((WIDTH-$L(IBLIST("HDR")))\2)
"RTN","IBDF2D1",47,0)
 .D DRWSTR^IBDFU($$Y^IBDF2D,($$X^IBDF2D)+LINE,$J("",OFFSET)_IBLIST("HDR"),$TR(IBLIST("DHDR"),"C",""),WIDTH)
"RTN","IBDF2D1",48,0)
 ;
"RTN","IBDF2D1",49,0)
 ;draw the header line for the subcolumns
"RTN","IBDF2D1",50,0)
 I COL("ROWSLEFT")>0,IBLIST("CHDR")]"" D:ALL  D DECREASE^IBDF2D(.COL)
"RTN","IBDF2D1",51,0)
 .S IBLIST("DSCHDR")=$TR(IBLIST("DSCHDR"),"R","r")
"RTN","IBDF2D1",52,0)
 .;only affects forms with big print - bold otherwise not available
"RTN","IBDF2D1",53,0)
 .I IBLIST("DSCHDR")["r",IBLIST("DSCHDR")'["B",IBFORM("WIDTH")<100 S IBLIST("DSCHDR")=IBLIST("DSCHDR")_"B"
"RTN","IBDF2D1",54,0)
 .I IBFORM("WIDTH")>100 S IBLIST("DSCHDR")=$TR(IBLIST("DSCHDR"),"B")
"RTN","IBDF2D1",55,0)
 .;
"RTN","IBDF2D1",56,0)
 .;apply options across entire line?
"RTN","IBDF2D1",57,0)
 .;if nothing else applies uderline SCs (maybe)
"RTN","IBDF2D1",58,0)
 .I IBLIST("ULSLCTNS")!LINE!(BOX&(CWIDTH>(IBBLK("W")-3-(2*(IBLIST("SEP1")))))) D  Q
"RTN","IBDF2D1",59,0)
 ..I IBLIST("DSCHDR")="",IBLIST("ULSLCTNS") S IBLIST("DSCHDR")=IBLIST("DSCHDR")_"U"
"RTN","IBDF2D1",60,0)
 ..D DRWSTR^IBDFU($$Y^IBDF2D,($$X^IBDF2D)+LINE,IBLIST("CHDR"),IBLIST("DSCHDR"),CWIDTH-(2*LINE))
"RTN","IBDF2D1",61,0)
 .;
"RTN","IBDF2D1",62,0)
 .;apply display options just to the text, not accross the column
"RTN","IBDF2D1",63,0)
 .I IBLIST("DSCHDR")="" S IBLIST("DSCHDR")="U"
"RTN","IBDF2D1",64,0)
 .F I=1-IBLIST("SC0"):1:8 I IBLIST("SCTYPE",I)'="",IBLIST("SCHDR",I)'="" D DRWSTR^IBDFU($$Y^IBDF2D,(($$X^IBDF2D)+IBLIST("SCOS",I)),IBLIST("SCHDR",I),IBLIST("DSCHDR"),$L(IBLIST("SCHDR",I)))
"RTN","IBDF2D1",65,0)
 Q
"RTN","IBDF2D1",66,0)
 ;
"RTN","IBDF2D1",67,0)
CNVRTHT(HPLINES,LINES) ;changes HPLINES=number of handprint lines into LINES=print lines on the page
"RTN","IBDF2D1",68,0)
 ;pass LINES by reference
"RTN","IBDF2D1",69,0)
 S LINES=$FN(1.5*HPLINES,"",0)
"RTN","IBDF2D1",70,0)
 Q
"RTN","IBDF2D1",71,0)
 ;
"RTN","IBDF2D1",72,0)
CNVRTLEN(HPWIDTH,WIDTH) ;changes HPWIDTH=width in terms of handprint characters into width in terms of columns(machine print characters)
"RTN","IBDF2D1",73,0)
 ;pass WIDTH by reference
"RTN","IBDF2D1",74,0)
 ;
"RTN","IBDF2D1",75,0)
 N COLWIDTH
"RTN","IBDF2D1",76,0)
 D
"RTN","IBDF2D1",77,0)
 .I IBFORM("WIDTH")>96 S COLWIDTH=720/16.67 Q
"RTN","IBDF2D1",78,0)
 .I IBFORM("WIDTH")>80 S COLWIDTH=60 Q
"RTN","IBDF2D1",79,0)
 .S COLWIDTH=72
"RTN","IBDF2D1",80,0)
 S WIDTH=$FN(.49+((HPWIDTH*103.65924)/COLWIDTH),"",0)
"RTN","IBDF2D1",81,0)
 Q
"RTN","IBDF2D2")
0^110^B44523884
"RTN","IBDF2D2",1,0)
IBDF2D2 ;ALB/CJM - ENCOUNTER FORM - PRINT SELECTION LIST (cont'd) ;NOV 16,1992
"RTN","IBDF2D2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF2D2",3,0)
 ;
"RTN","IBDF2D2",4,0)
OTHER ;prints area at bottom of list for 'other'
"RTN","IBDF2D2",5,0)
 N MAX,NODE,NAR,CODE,REQLEN,WIDTH,AREA,SC,IBY,IBX,COLWIDTH,ICR,NOTICR,COLUMNS,HT,I,J,HDR
"RTN","IBDF2D2",6,0)
 ;
"RTN","IBDF2D2",7,0)
 ;for ICR, each char will take up 172.7654
"RTN","IBDF2D2",8,0)
 ;for non-ICR, allocate 103.6593 for each hand printed char
"RTN","IBDF2D2",9,0)
 S ICR=172.7654
"RTN","IBDF2D2",10,0)
 S NOTICR=103.65924
"RTN","IBDF2D2",11,0)
 ;
"RTN","IBDF2D2",12,0)
 ;how much space for each machine printed char?
"RTN","IBDF2D2",13,0)
 D
"RTN","IBDF2D2",14,0)
 .I IBFORM("WIDTH")>96 S COLWIDTH=720/16.67 Q
"RTN","IBDF2D2",15,0)
 .I IBFORM("WIDTH")>80 S COLWIDTH=60 Q
"RTN","IBDF2D2",16,0)
 .S COLWIDTH=72
"RTN","IBDF2D2",17,0)
 ;
"RTN","IBDF2D2",18,0)
 Q:'IBLIST("INPUT_RTN")
"RTN","IBDF2D2",19,0)
 Q:'IBLIST("OTHER")
"RTN","IBDF2D2",20,0)
 I IBLIST("NAR_PRINT")!IBLIST("NAR_READ") D
"RTN","IBDF2D2",21,0)
 .S NAR=IBLIST("NAR_DATATYPE")
"RTN","IBDF2D2",22,0)
 .I 'NAR S (IBLIST("NAR_READ"),IBLIST("NAR_PRINT"))=0 Q
"RTN","IBDF2D2",23,0)
 .D DATATYPE^IBDFU1B(.NAR)
"RTN","IBDF2D2",24,0)
 .S:NAR("MAX_INPUT")<NAR("SPACE") NAR("MAX_INPUT")=NAR("SPACE")
"RTN","IBDF2D2",25,0)
 I IBLIST("CODE_PRINT")!IBLIST("CODE_READ") D
"RTN","IBDF2D2",26,0)
 .S CODE=IBLIST("CODE_DATATYPE")
"RTN","IBDF2D2",27,0)
 .I 'CODE S (IBLIST("CODE_READ"),IBLIST("CODE_PRINT"))=0 Q
"RTN","IBDF2D2",28,0)
 .D DATATYPE^IBDFU1B(.CODE)
"RTN","IBDF2D2",29,0)
 Q:'IBLIST("CODE_PRINT")&'IBLIST("NAR_PRINT")
"RTN","IBDF2D2",30,0)
 ;
"RTN","IBDF2D2",31,0)
 ;print field for code in ICR format? read with ICR?
"RTN","IBDF2D2",32,0)
 I IBLIST("CODE_PRINT") S IBLIST("CODE_PRINT")=2
"RTN","IBDF2D2",33,0)
 I '$G(IBFORM("SCAN",IBBLK("PAGE"))) D
"RTN","IBDF2D2",34,0)
 .S (IBLIST("CODE_READ"),IBLIST("NAR_READ"))=0
"RTN","IBDF2D2",35,0)
 .I IBLIST("CODE_PRINT"),IBLIST("CODE_READ") S IBLIST("CODE_READ")=3 ;read without ICR, but in ICR format
"RTN","IBDF2D2",36,0)
 .I 'IBLIST("CODE_PRINT"),IBLIST("NAR_PRINT") S IBLIST("CODE_READ")=1 ;read the code without ICR from the narrative - not printed in ICR format
"RTN","IBDF2D2",37,0)
 E  I IBFORM("SCAN","ICR") D
"RTN","IBDF2D2",38,0)
 .I IBLIST("NAR_READ"),IBLIST("NAR_PRINT") S (IBLIST("NAR_PRINT"),IBLIST("NAR_READ"))=2
"RTN","IBDF2D2",39,0)
 .I IBLIST("CODE_PRINT") S IBLIST("CODE_READ")=2
"RTN","IBDF2D2",40,0)
 .I 'IBLIST("CODE_PRINT"),IBLIST("CODE_READ"),IBLIST("NAR_PRINT")=2 S IBLIST("CODE_PRINT")=3 ;read the code without ICR, but it is printed in ICR format
"RTN","IBDF2D2",41,0)
 ;
"RTN","IBDF2D2",42,0)
 ;calculate required width=REQLEN
"RTN","IBDF2D2",43,0)
 S MAX=IBBLK("W")-BOX
"RTN","IBDF2D2",44,0)
 S REQLEN=1+BOX
"RTN","IBDF2D2",45,0)
 F SC=1:1:8 I IBLIST("SCTYPE",SC)=2 D
"RTN","IBDF2D2",46,0)
 .I IBLIST("ROUTINE",SC)]"" S AREA(REQLEN)=SC,REQLEN=REQLEN+4 Q
"RTN","IBDF2D2",47,0)
 .I $L(IBLIST("SCSYMBOL",SC)) S AREA(REQLEN)=SC,REQLEN=REQLEN+$L(IBLIST("SCSYMBOL",SC))+1
"RTN","IBDF2D2",48,0)
 I REQLEN<(BOX+2) S REQLEN=BOX
"RTN","IBDF2D2",49,0)
 S (CODE("COL"),NAR("COL"))=REQLEN
"RTN","IBDF2D2",50,0)
 S:IBLIST("CODE_PRINT") REQLEN=REQLEN+$FN(((CODE("SPACE")*ICR)/COLWIDTH)+.49,"",0)
"RTN","IBDF2D2",51,0)
 Q:REQLEN>MAX
"RTN","IBDF2D2",52,0)
 ;
"RTN","IBDF2D2",53,0)
 ;use ICR format? Set WIDTH=width of a handprinted character accordingly
"RTN","IBDF2D2",54,0)
 S WIDTH=$S(IBFORM("SCAN","ICR")&IBLIST("NAR_READ")&$G(IBFORM("SCAN",IBBLK("PAGE"))):ICR,1:NOTICR)
"RTN","IBDF2D2",55,0)
 I IBLIST("NAR_PRINT") D
"RTN","IBDF2D2",56,0)
 .S NAR("LINES")=0
"RTN","IBDF2D2",57,0)
 .F  D  Q:I<MAX
"RTN","IBDF2D2",58,0)
 ..S NAR("LINES")=NAR("LINES")+1
"RTN","IBDF2D2",59,0)
 ..S NAR("WIDTH")=$FN((NAR("SPACE")/NAR("LINES"))+.49,"",0)
"RTN","IBDF2D2",60,0)
 ..S I=REQLEN+$FN(.49+((NAR("WIDTH")*WIDTH)/COLWIDTH),"",0)
"RTN","IBDF2D2",61,0)
 .S REQLEN=I+1
"RTN","IBDF2D2",62,0)
 .I (MAX-REQLEN)<(CWIDTH-2),(IBLIST("OTHER")<2)!(REQLEN<((MAX\2))-2) S NAR("WIDTH")=NAR("WIDTH")+(((MAX-REQLEN)*COLWIDTH)\WIDTH) I WIDTH=ICR,NAR("WIDTH")>NAR("MAX_INPUT") S NAR("WIDTH")=NAR("MAX_INPUT")
"RTN","IBDF2D2",63,0)
 .;
"RTN","IBDF2D2",64,0)
 .S CODE("COL")=NAR("COL")+1+$FN(.49+((NAR("WIDTH")*WIDTH)/COLWIDTH),"",0)
"RTN","IBDF2D2",65,0)
 ;
"RTN","IBDF2D2",66,0)
 S HT=2 S:IBLIST("NAR_PRINT") HT=NAR("LINES") D:IBLIST("NAR_PRINT")=1 CNVRTHT^IBDF2D1(HT,.HT) S:IBLIST("NAR_PRINT")=2 HT=HT*2 S:IBLIST("OTHER")>1 HT=HT+1
"RTN","IBDF2D2",67,0)
 S COLUMNS=1 I IBLIST("OTHER")>1 S COLUMNS=(MAX-BOX)\(REQLEN-BOX+1) S:'COLUMNS COLUMNS=1
"RTN","IBDF2D2",68,0)
 ;
"RTN","IBDF2D2",69,0)
 S J=($FN((IBLIST("OTHER")/COLUMNS)+.49,"",0)*HT)+1 ;J=the hight needed
"RTN","IBDF2D2",70,0)
 I (J+COL("Y"))>(IBBLK("H")-BOX) S IBLIST("OTHER")=(IBBLK("H")-BOX)\(HT*COLUMNS),J=$FN((IBLIST("OTHER")/COLUMNS)+.49,"",0)*HT
"RTN","IBDF2D2",71,0)
 S J=J+1 ;want one line space between the 'other' and the list above it
"RTN","IBDF2D2",72,0)
 S I=IBBLK("H")-(COL("Y")+J+BOX) I I<COL("H") S:I<0 I=0 S (COL("ROWSLEFT"),COL("H"))=I S:IBLIST("H",2)>I IBLIST("H",2)=I S:IBLIST("H",3)>I IBLIST("H",3)=I
"RTN","IBDF2D2",73,0)
 S J=$FN(.49+(CWIDTH\(COLUMNS*REQLEN)),"",0)+1 ;now J=width needed
"RTN","IBDF2D2",74,0)
 S:($G(IBLIST("X",J))<(COLUMNS*REQLEN)) J=J+1
"RTN","IBDF2D2",75,0)
 I ('$D(IBLIST("X",J)))!($G(IBLIST("X",J))'<(COLUMNS*REQLEN)) I '$G(IBLIST("H",J)) S IBLIST("H",J)=99
"RTN","IBDF2D2",76,0)
 S IBY=COL("Y")+COL("H")+1,IBX=0
"RTN","IBDF2D2",77,0)
 ;
"RTN","IBDF2D2",78,0)
 ;draw the headers
"RTN","IBDF2D2",79,0)
 I IBLIST("NAR_PRINT") S HDR=IBLIST("NAR_HDR") D CNVRTLEN^IBDF2D1(NAR("WIDTH"),.WIDTH) I $L(HDR)>WIDTH S HDR=$E("NARRATIVE",1,WIDTH)
"RTN","IBDF2D2",80,0)
 F J=0:1:(COLUMNS-1) D
"RTN","IBDF2D2",81,0)
 .D:IBLIST("NAR_PRINT") DRWSTR^IBDFU(IBY,NAR("COL")+(J*REQLEN),HDR,"s") D:IBLIST("CODE_PRINT") DRWSTR^IBDFU(IBY,CODE("COL")+(J*REQLEN),IBLIST("CODE_HDR"),"s")
"RTN","IBDF2D2",82,0)
 ;
"RTN","IBDF2D2",83,0)
 S IBY=IBY+1
"RTN","IBDF2D2",84,0)
 F J=0:1:(IBLIST("OTHER")-1) S I=J#COLUMNS,CNT=CNT+1 S:(I=0)&J IBY=IBY+HT D AREAS(IBY,I,CNT)
"RTN","IBDF2D2",85,0)
 Q
"RTN","IBDF2D2",86,0)
 ;
"RTN","IBDF2D2",87,0)
AREAS(IBY,COLUMN,CNT) ;draw the bubbles, etc.
"RTN","IBDF2D2",88,0)
 S IBX="" F  S IBX=$O(AREA(IBX)) Q:'IBX  D
"RTN","IBDF2D2",89,0)
 .S SC=AREA(IBX)
"RTN","IBDF2D2",90,0)
 .I IBLIST("ROUTINE",SC)]"" D
"RTN","IBDF2D2",91,0)
 ..D DRWBBL^IBDFM1((IBLIST("OTHER")>1)+IBY,IBX+(COLUMN*REQLEN),IBLIST("INPUT_RTN"),"",IBLIST("NAME"),"S"_IBLIST_"("_SC,IBLIST("RULE",SC),"OTHER#"_CNT_")","OTHER",IBLIST("QLFR",SC),0,CNT)
"RTN","IBDF2D2",92,0)
 .E  D
"RTN","IBDF2D2",93,0)
 ..S I=IBLIST("SCSYMBOL",SC) I "        "[I S I=$TR(I," ","_")
"RTN","IBDF2D2",94,0)
 ..D DRWSTR^IBDFU(1+IBY,IBX+(COLUMN*REQLEN),I)
"RTN","IBDF2D2",95,0)
 .;
"RTN","IBDF2D2",96,0)
 .D:IBLIST("SCHDR",SC)'="" DRWSTR^IBDFU(IBY+1+(IBLIST("OTHER")>1),IBX+(COLUMN*REQLEN)+((IBLIST("SCW",SC)-$L(IBLIST("SCHDR",SC)))\2),IBLIST("SCHDR",SC))
"RTN","IBDF2D2",97,0)
 ;
"RTN","IBDF2D2",98,0)
 ;add fields for the narrative
"RTN","IBDF2D2",99,0)
 I IBLIST("NAR_PRINT")!IBLIST("NAR_READ") D
"RTN","IBDF2D2",100,0)
 .D DRWHAND^IBDFM1(IBY+(IBLIST("OTHER")>1),NAR("COL")+(COLUMN*REQLEN),NAR("WIDTH"),IBLIST("INPUT_RTN"),NAR("LINES"),"S"_IBLIST_"(N",IBLIST("NAME")_"(OTHER)","OTHER","",CNT,IBLIST("NAR_PRINT"),IBLIST("NAR_READ"),NAR)
"RTN","IBDF2D2",101,0)
 .D:IBLIST("OTHER")>1 DRWSTR^IBDFU(IBY,NAR("COL")+(COLUMN*REQLEN),"(OTHER#"_CNT_")")
"RTN","IBDF2D2",102,0)
 ;
"RTN","IBDF2D2",103,0)
 ;add fields for the code
"RTN","IBDF2D2",104,0)
 I IBLIST("CODE_PRINT")!IBLIST("CODE_READ") D
"RTN","IBDF2D2",105,0)
 .I IBLIST("CODE_PRINT") D
"RTN","IBDF2D2",106,0)
 ..D DRWHAND^IBDFM1(IBY+(IBLIST("OTHER")>1),CODE("COL")+(COLUMN*REQLEN),CODE("SPACE"),IBLIST("INPUT_RTN"),1,"S"_IBLIST_"(C",IBLIST("NAME")_"(OTHER)","OTHER","",CNT,IBLIST("CODE_PRINT"),IBLIST("CODE_READ"),CODE)
"RTN","IBDF2D2",107,0)
 .D:('IBLIST("NAR_PRINT"))&(IBLIST("OTHER")>1) DRWSTR^IBDFU(IBY,CODE("COL")+(COLUMN*REQLEN),"(OTHER#"_CNT_")")
"RTN","IBDF2D2",108,0)
 .;
"RTN","IBDF2D2",109,0)
 .;if there wasn't a field printed on the form for the code, but there was for the narrative, read the code from the narrative - ICR should not be used, rather, require the operator to key in the code
"RTN","IBDF2D2",110,0)
 .I ('IBLIST("CODE_PRINT"))&IBLIST("NAR_PRINT") D
"RTN","IBDF2D2",111,0)
 ..D DRWHAND^IBDFM1(IBY+(IBLIST("OTHER")>1),NAR("COL")+(COLUMN*REQLEN),NAR("WIDTH"),IBLIST("INPUT_RTN"),NAR("LINES"),"S"_IBLIST_"(C",IBLIST("NAME")_"(OTHER)","OTHER","",CNT,0,IBLIST("CODE_READ"),CODE)
"RTN","IBDF2D2",112,0)
 Q
"RTN","IBDF2D3")
0^111^B24692992
"RTN","IBDF2D3",1,0)
IBDF2D3 ;ALB/CJM - ENCOUNTER FORM - WRITE SELECTION LIST (cont'd) ;NOV 16,1992
"RTN","IBDF2D3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF2D3",3,0)
 ;
"RTN","IBDF2D3",4,0)
DISPLAY(SLCTN,COL,HEADER,SUBHDR) ;writes the selection to the list
"RTN","IBDF2D3",5,0)
 N J,K,DA,ENTRY,VALUE,TYPE,UNDRLINE,OFFSET,LEN,FIRST,IBROW,IBCOL,BBBLS,ID,DISPLAY,NODE,SUB,WRAP,QTY,ND2
"RTN","IBDF2D3",6,0)
 S UNDRLINE=$S(IBLIST("ULSLCTNS"):"U",1:"")
"RTN","IBDF2D3",7,0)
 S FIRST=1,(ID,HEADER,DISPLAY,NODE)=""
"RTN","IBDF2D3",8,0)
 ;
"RTN","IBDF2D3",9,0)
 ;get the 0 node of the selection & the selection identifier
"RTN","IBDF2D3",10,0)
 I SLCTN S:IBLIST("DYNAMIC") NODE=$G(@LOCATION@(SLCTN)) S:'IBLIST("DYNAMIC") NODE=$G(^IBE(357.3,SLCTN,0)),ND2=$G(^IBE(357.3,SLCTN,2)) S ID=$P(NODE,"^")
"RTN","IBDF2D3",11,0)
 ;
"RTN","IBDF2D3",12,0)
 ;if a place holder, determine its use as a subheader - dynamic lists don't have place holders
"RTN","IBDF2D3",13,0)
 I 'IBLIST("DYNAMIC") D
"RTN","IBDF2D3",14,0)
 .S QTY=$P(NODE,"^",9)
"RTN","IBDF2D3",15,0)
 .I $P(NODE,"^",2) D
"RTN","IBDF2D3",16,0)
 ..;turn of the use of any prior subhdr if it was used
"RTN","IBDF2D3",17,0)
 ..I $P(NODE,"^",8) S SUBHDR=""
"RTN","IBDF2D3",18,0)
 ..;determine if this is to be used as a subheader
"RTN","IBDF2D3",19,0)
 ..S $P(NODE,"^",6)=$P(NODE,"^",6)
"RTN","IBDF2D3",20,0)
 ..I $P(NODE,"^",7),$P(NODE,"^",6)]"" S SUBHDR=SUBHDR_" "_$$STRIP^IBDFU($P(NODE,"^",6))
"RTN","IBDF2D3",21,0)
 ;
"RTN","IBDF2D3",22,0)
 ;if place holder with text,just print the text and quit
"RTN","IBDF2D3",23,0)
 I 'IBLIST("DYNAMIC"),$P(NODE,"^",2),$P(NODE,"^",6)]"" D  Q
"RTN","IBDF2D3",24,0)
 .I IBLIST("ULSLCTNS") D
"RTN","IBDF2D3",25,0)
 ..D DRWSTR^IBDFU($$Y^IBDF2D,($$X^IBDF2D)+LINE,$P(IBLIST("SEP"),"|",2)_$P(NODE,"^",6),"U",CWIDTH-(2*LINE))
"RTN","IBDF2D3",26,0)
 ..I NEEDUPR D DRWSTR^IBDFU(($$Y^IBDF2D)-1,($$X^IBDF2D)+LINE,"","U",CWIDTH-(2*LINE)) S NEEDUPR=0
"RTN","IBDF2D3",27,0)
 .E  D DRWSTR^IBDFU($$Y^IBDF2D,($$X^IBDF2D)+$L(IBLIST("SEP2"))+LINE,$P(NODE,"^",6))
"RTN","IBDF2D3",28,0)
 .D DECREASE^IBDF2D(.COL)
"RTN","IBDF2D3",29,0)
 ;
"RTN","IBDF2D3",30,0)
 ;don't draw bubbles for place holders
"RTN","IBDF2D3",31,0)
 I 'IBLIST("DYNAMIC"),$P(NODE,"^",2) N DRWBBL S DRWBBL=0
"RTN","IBDF2D3",32,0)
 ;
"RTN","IBDF2D3",33,0)
 I SLCTN,(IBLIST("DYNAMIC")!('$P(NODE,"^",2))) S CNT=CNT+1
"RTN","IBDF2D3",34,0)
 ;
"RTN","IBDF2D3",35,0)
 I 'IBFORM("COMPILED") I 'SLCTN,IBLIST("DYNAMIC") D
"RTN","IBDF2D3",36,0)
 .S CNT=CNT+1
"RTN","IBDF2D3",37,0)
 .S DISPLAY="#"_CNT
"RTN","IBDF2D3",38,0)
 .S ID=""
"RTN","IBDF2D3",39,0)
 ;
"RTN","IBDF2D3",40,0)
 F K=1:1:(+IBLIST("BTWN")+1) D  Q:COL("ROWSLEFT")<1
"RTN","IBDF2D3",41,0)
 .S ENTRY=""
"RTN","IBDF2D3",42,0)
 .S OFFSET=LINE
"RTN","IBDF2D3",43,0)
 .F J=1-IBLIST("SC0"):1:8 S TYPE=IBLIST("SCTYPE",J) D:TYPE'=""
"RTN","IBDF2D3",44,0)
 ..;S VALUE=""
"RTN","IBDF2D3",45,0)
 ..S VALUE=$S(K=2:$G(WRAP(J)),1:"")
"RTN","IBDF2D3",46,0)
 ..I TYPE=1,K'>1,SLCTN D  S:(ID]"")&IBLIST("SCPIECE",J) DISPLAY=DISPLAY_$S(DISPLAY="":"",1:" :: ")_$E(VALUE,1,IBLIST("SCW",J)*(1+$S(IBLIST("BTWN"):1,1:0))) I IBLIST("BTWN"),$L(VALUE)>IBLIST("SCW",J) D WRAP
"RTN","IBDF2D3",47,0)
 ...I IBLIST("SCPIECE",J)=0 S:SLCTN&(IBLIST("DYNAMIC")!('$P(NODE,"^",2))) VALUE="#"_CNT Q
"RTN","IBDF2D3",48,0)
 ...I 'IBLIST("DYNAMIC") S DA=$O(^IBE(357.3,SLCTN,1,"B",J,"")) S:DA VALUE=$P($G(^IBE(357.3,SLCTN,1,DA,0)),"^",2) Q
"RTN","IBDF2D3",49,0)
 ...;dynamic lists
"RTN","IBDF2D3",50,0)
 ...S SUB=$$DATANODE^IBDFU1B(IBLIST("RTN"),IBLIST("SCPIECE",J))
"RTN","IBDF2D3",51,0)
 ...I SUB]"" S VALUE=$P($G(@IBLIST("DATA_LOCATION")@(SUB,SLCTN)),"^",IBLIST("SCPIECE",J))
"RTN","IBDF2D3",52,0)
 ...E  S VALUE=$P(NODE,"^",IBLIST("SCPIECE",J))
"RTN","IBDF2D3",53,0)
 ...;
"RTN","IBDF2D3",54,0)
 ..S:TYPE=2 VALUE=$S(K'>1:IBLIST("SCSYMBOL",J),1:$J("",IBLIST("SCW",J)))
"RTN","IBDF2D3",55,0)
 ..;I TYPE=1 I SLCTN,ID]"",K'>1,IBLIST("SCPIECE",J) S DISPLAY=DISPLAY_$S(DISPLAY="":"",1:" :: ")_$E(VALUE,1,(IBLIST("SCW",J))
"RTN","IBDF2D3",56,0)
 ..S:TYPE=1 VALUE=$$PADRIGHT^IBDFU(VALUE,IBLIST("SCW",J))
"RTN","IBDF2D3",57,0)
 ..I TYPE=2 I IBLIST("ROUTINE",J)]"",K'>1,DRWBBL S IBCOL=($$X^IBDF2D)+OFFSET+$L(IBLIST("SEP2"))+$L(ENTRY)+((IBLIST("SCW",J)-3)\2),IBROW=$$Y^IBDF2D+$S(IBLIST("BTWN"):.5,1:0),BBBLS(IBCOL)=J
"RTN","IBDF2D3",58,0)
 ..I (TYPE=1)!('IBLIST("NOUL",J))!(K'=(+IBLIST("BTWN")+1))!(UNDRLINE'="U") D 
"RTN","IBDF2D3",59,0)
 ...S ENTRY=ENTRY_IBLIST("SEP2")_VALUE_IBLIST("SEP1")
"RTN","IBDF2D3",60,0)
 ...S FIRST=0
"RTN","IBDF2D3",61,0)
 ..E  D
"RTN","IBDF2D3",62,0)
 ...S NEEDUPR=1
"RTN","IBDF2D3",63,0)
 ...S LEN=$S(FIRST:0,1:$L(ENTRY)-LINE)
"RTN","IBDF2D3",64,0)
 ...S ENTRY=ENTRY_IBLIST("SEP2")_VALUE_IBLIST("SEP1")
"RTN","IBDF2D3",65,0)
 ...I OFFSET+$L(ENTRY)=CWIDTH S ENTRY=$E(ENTRY,1,$L(ENTRY)-LINE)
"RTN","IBDF2D3",66,0)
 ...D DRWSTR^IBDFU($$Y^IBDF2D,($$X^IBDF2D)+OFFSET,ENTRY,"U",LEN)
"RTN","IBDF2D3",67,0)
 ...S OFFSET=OFFSET+$L(ENTRY),ENTRY="",FIRST=1
"RTN","IBDF2D3",68,0)
 .I ENTRY'="" S ENTRY=$E(ENTRY,1,$L(ENTRY)-$L(IBLIST("SEP1"))) D DRWSTR^IBDFU($$Y^IBDF2D,($$X^IBDF2D)+OFFSET,ENTRY,$S(K'=(+IBLIST("BTWN")+1):"",1:UNDRLINE),$L(ENTRY)+$L(IBLIST("SEP2")))
"RTN","IBDF2D3",69,0)
 .D DECREASE^IBDF2D(.COL)
"RTN","IBDF2D3",70,0)
 ;
"RTN","IBDF2D3",71,0)
 ;Writting bubbles to form tracking? Is the form NOT yet compiled? Otherwise, don't need to do anything with the bubbles
"RTN","IBDF2D3",72,0)
 I (TRACKBBL)!('IBFORM("COMPILED")) S IBCOL="" F  S IBCOL=$O(BBBLS(IBCOL)) Q:IBCOL=""  S J=BBBLS(IBCOL) I IBLIST("ROUTINE",J)="BUBBLE" D
"RTN","IBDF2D3",73,0)
 .;
"RTN","IBDF2D3",74,0)
 .D:'TRACKBBL DRWBBL^IBDFM1(IBROW,IBCOL,IBLIST("INPUT_RTN"),ID,IBLIST("NAME"),"S"_IBLIST_"("_J,IBLIST("RULE",J),DISPLAY,HEADER,IBLIST("QLFR",J),IBLIST("DYNAMIC"),CNT,SUBHDR,$G(QTY),$G(ND2))
"RTN","IBDF2D3",75,0)
 .D:TRACKBBL TRACKBBL^IBDFM1("S"_IBLIST_"("_J,CNT,IBLIST("QLFR",J),IBLIST("INPUT_RTN"),DISPLAY,ID)
"RTN","IBDF2D3",76,0)
 Q
"RTN","IBDF2D3",77,0)
 ;
"RTN","IBDF2D3",78,0)
WRAP    ;
"RTN","IBDF2D3",79,0)
 Q:IBLIST("SCW",J)<8
"RTN","IBDF2D3",80,0)
 N FOUND,AT,I,CHAR S FOUND=0
"RTN","IBDF2D3",81,0)
 S AT=IBLIST("SCW",J)+2
"RTN","IBDF2D3",82,0)
 F I=0:1:IBLIST("SCW",J)\4 S AT=AT-1,CHAR=$E(VALUE,AT) I " /\-:;"[CHAR S FOUND=1 Q
"RTN","IBDF2D3",83,0)
 I FOUND D
"RTN","IBDF2D3",84,0)
 .S WRAP(J)=$E(VALUE,AT+$S(" -"[CHAR:1,1:0),AT+IBLIST("SCW",J))
"RTN","IBDF2D3",85,0)
 .F I=1:1:IBLIST("SCW",J) I $E(WRAP(J),I)'=" " D  Q
"RTN","IBDF2D3",86,0)
 ..I I>1 S WRAP(J)=$E(WRAP(J),I,$L(WRAP(J)))
"RTN","IBDF2D3",87,0)
 .S VALUE=$E(VALUE,1,AT-1)
"RTN","IBDF2D3",88,0)
 E  S WRAP(J)=$E(VALUE,IBLIST("SCW",J),2*IBLIST("SCW",J)-1),VALUE=$E(VALUE,1,IBLIST("SCW",J)-1)_"-"
"RTN","IBDF2D3",89,0)
 Q
"RTN","IBDF2E")
0^112^B2204126
"RTN","IBDF2E",1,0)
IBDF2E ;ALB/CJM - ENCOUNTER FORM (prints a lines and text areas to the form);MAR 18,1993
"RTN","IBDF2E",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF2E",3,0)
PRNTLINE(LINE) ;prints a line ptd to by LINE
"RTN","IBDF2E",4,0)
 N NODE,XPOS,YPOS,LEN,TYPE,NUM,SPACING,CNT
"RTN","IBDF2E",5,0)
 S NODE=$G(^IBE(357.7,LINE,0)) Q:NODE=""
"RTN","IBDF2E",6,0)
 Q:$P(NODE,"^",6)'=IBBLK
"RTN","IBDF2E",7,0)
 S XPOS=+$P(NODE,"^",2),YPOS=+$P(NODE,"^",3),TYPE=$P(NODE,"^",4),LEN=+$P(NODE,"^",5)
"RTN","IBDF2E",8,0)
 I TYPE="H" D
"RTN","IBDF2E",9,0)
 .S NUM=$P(NODE,"^",7),SPACING=$P(NODE,"^",8)
"RTN","IBDF2E",10,0)
 .S:'NUM NUM=1 S SPACING=$S(SPACING="d":2,SPACING="t":3,1:1)
"RTN","IBDF2E",11,0)
 .F CNT=1:1:NUM D DRWSTR^IBDFU((YPOS+((CNT-1)*SPACING)),XPOS,"","U",LEN)
"RTN","IBDF2E",12,0)
 I TYPE="V" D DRWVLINE^IBDFU(YPOS,XPOS,LEN,"|")
"RTN","IBDF2E",13,0)
 Q
"RTN","IBDF2E",14,0)
PRNTTEXT(TEXT) ;prints a line ptd to by LINE
"RTN","IBDF2E",15,0)
 N NODE,XPOS,YPOS,W,HT,LINE
"RTN","IBDF2E",16,0)
 S NODE=$G(^IBE(357.8,TEXT,0)) Q:NODE=""
"RTN","IBDF2E",17,0)
 Q:$P(NODE,"^",2)'=IBBLK
"RTN","IBDF2E",18,0)
 S XPOS=+$P(NODE,"^",3),YPOS=+$P(NODE,"^",4),W=+$P(NODE,"^",5),HT=+$P(NODE,"^",6)
"RTN","IBDF2E",19,0)
 S LINE=0 F  S LINE=$O(^IBE(357.8,TEXT,1,LINE)) Q:'LINE!(LINE>HT)  S NODE=$G(^(LINE,0)) D DRWSTR^IBDFU(YPOS+LINE-1,XPOS,$E(NODE,1,W))
"RTN","IBDF2E",20,0)
 Q
"RTN","IBDF2F")
0^113^B51568352
"RTN","IBDF2F",1,0)
IBDF2F ;ALB/CJM - ENCOUNTER FORM - PRINT FORM(sends to printer) ;NOV 16,1992
"RTN","IBDF2F",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF2F",3,0)
 ;
"RTN","IBDF2F",4,0)
LNPRINT(IBPFID) ;prints the form
"RTN","IBDF2F",5,0)
 ;IBPFID is the id for form tracking
"RTN","IBDF2F",6,0)
 ;
"RTN","IBDF2F",7,0)
 N CURY,CURX,NXTTXT,NXTX,LINE,NXTUL,PERPAGE,STRING,STARTY,PAGE
"RTN","IBDF2F",8,0)
 S PAGE=1
"RTN","IBDF2F",9,0)
 ;
"RTN","IBDF2F",10,0)
 ;determine if simplex or duplex
"RTN","IBDF2F",11,0)
 ;
"RTN","IBDF2F",12,0)
 D
"RTN","IBDF2F",13,0)
 .I IBFORM("PRINT_MODE")="DUPLEX_LONG",IBDEVICE("DUPLEX_LONG")]"" W IBDEVICE("DUPLEX_LONG") Q
"RTN","IBDF2F",14,0)
 .I IBFORM("PRINT_MODE")="DUPLEX_SHORT",IBDEVICE("DUPLEX_SHORT")]"" W IBDEVICE("DUPLEX_SHORT") Q
"RTN","IBDF2F",15,0)
 .I IBDEVICE("SIMPLEX")]"" W IBDEVICE("SIMPLEX") Q
"RTN","IBDF2F",16,0)
 .I $Y W @IOF
"RTN","IBDF2F",17,0)
 ;
"RTN","IBDF2F",18,0)
 S PERPAGE=IBFORM("PAGE_HT")
"RTN","IBDF2F",19,0)
 I 'PERPAGE!(PERPAGE>IOSL) S PERPAGE=IOSL
"RTN","IBDF2F",20,0)
 S NXTUL=$O(@IBARRAY("UNDERLINES")@("")),NXTTXT=$O(@IBARRAY("TEXT")@(""))
"RTN","IBDF2F",21,0)
 S STARTY=""
"RTN","IBDF2F",22,0)
 S:NXTTXT'="" LINE=$G(@IBARRAY("TEXT")@(NXTTXT))
"RTN","IBDF2F",23,0)
 ;
"RTN","IBDF2F",24,0)
 ;want this rectangular fill area to apply to underlining
"RTN","IBDF2F",25,0)
 W:IBDEVICE("PCL") $C(27)_"*c35G"
"RTN","IBDF2F",26,0)
 ;
"RTN","IBDF2F",27,0)
 D REGISTER^IBDF2F1(PAGE)
"RTN","IBDF2F",28,0)
 F CURY=0:1 D  I NXTUL'>0,NXTTXT'>0 Q
"RTN","IBDF2F",29,0)
 .I (CURY>0)&('(CURY#PERPAGE)) D
"RTN","IBDF2F",30,0)
 ..I ((NXTTXT'="")!(NXTUL'="")) D
"RTN","IBDF2F",31,0)
 ...D:IBDEVICE("GRAPHICS")&('IBDEVICE("PCL")) PGRPHCS(.STARTY,CURY)
"RTN","IBDF2F",32,0)
 ...D:IBDEVICE("PCL") DRAW(.STARTY,CURY),WHITEOUT
"RTN","IBDF2F",33,0)
 ...W:'$G(IBDEVICE("TCP")) @IOF
"RTN","IBDF2F",34,0)
 ...S PAGE=PAGE+1
"RTN","IBDF2F",35,0)
 ...D REGISTER^IBDF2F1(PAGE)
"RTN","IBDF2F",36,0)
 .E  I (CURY#PERPAGE) W !
"RTN","IBDF2F",37,0)
 .I CURY=NXTTXT D
"RTN","IBDF2F",38,0)
 ..S CURX=0,NXTX="" F  S NXTX=$O(@IBARRAY("CONTROLS")@(NXTTXT,NXTX)) Q:NXTX=""  D
"RTN","IBDF2F",39,0)
 ...W $E(LINE,+CURX,NXTX),$$CTRLS^IBDFU($G(@IBARRAY("CONTROLS")@(NXTTXT,NXTX)),NXTX,NXTTXT#PERPAGE)
"RTN","IBDF2F",40,0)
 ...S CURX=NXTX+1
"RTN","IBDF2F",41,0)
 ..S STRING=$E(LINE,CURX,240) W:STRING'="" STRING
"RTN","IBDF2F",42,0)
 ..S NXTTXT=$O(@IBARRAY("TEXT")@(NXTTXT)) S:NXTTXT LINE=$G(@IBARRAY("TEXT")@(NXTTXT))
"RTN","IBDF2F",43,0)
 .I CURY=NXTUL D UNDRLINE
"RTN","IBDF2F",44,0)
 ;
"RTN","IBDF2F",45,0)
 ;draw stuff requiring graphics mode - obsoleted by PCL, if available
"RTN","IBDF2F",46,0)
 D:IBDEVICE("GRAPHICS")&('IBDEVICE("PCL")) PGRPHCS(STARTY,0)
"RTN","IBDF2F",47,0)
 ;
"RTN","IBDF2F",48,0)
 ;draw boxes,bubbles, etc. that require PCL
"RTN","IBDF2F",49,0)
 D:IBDEVICE("PCL") DRAW(STARTY,0),WHITEOUT
"RTN","IBDF2F",50,0)
 ;
"RTN","IBDF2F",51,0)
 W:'$G(IBDEVICE("TCP")) @IOF
"RTN","IBDF2F",52,0)
 ;go back to simplex
"RTN","IBDF2F",53,0)
 D
"RTN","IBDF2F",54,0)
 .I IBFORM("PRINT_MODE")="DUPLEX_LONG",IBDEVICE("DUPLEX_LONG")]"",IBDEVICE("SIMPLEX")]"" W IBDEVICE("SIMPLEX") Q
"RTN","IBDF2F",55,0)
 .I IBFORM("PRINT_MODE")="DUPLEX_SHORT",IBDEVICE("DUPLEX_SHORT")]"",IBDEVICE("SIMPLEX")]"" W IBDEVICE("SIMPLEX")
"RTN","IBDF2F",56,0)
 ;
"RTN","IBDF2F",57,0)
 ;set the printer for other stuff to print
"RTN","IBDF2F",58,0)
 S X=IOM X $G(^%ZOSF("RM")) K X ;sets device to wrap
"RTN","IBDF2F",59,0)
 ;set the printer to 132 col for everything else to print
"RTN","IBDF2F",60,0)
 I IBDEVICE("PCL") D
"RTN","IBDF2F",61,0)
 .W $C(27),"E"
"RTN","IBDF2F",62,0)
 .I $G(IBDEVICE("RESET"))'="" W @IBDEVICE("RESET")
"RTN","IBDF2F",63,0)
 .W $C(27),"(s0p16.67h8.5v0s0b0T",!,$C(27),"&l6C" S IOSL=80
"RTN","IBDF2F",64,0)
 Q
"RTN","IBDF2F",65,0)
 ;
"RTN","IBDF2F",66,0)
UNDRLINE ;
"RTN","IBDF2F",67,0)
 Q:IBDEVICE("CRT")
"RTN","IBDF2F",68,0)
 N UL
"RTN","IBDF2F",69,0)
 S UL=$G(@IBARRAY("UNDERLINES")@(NXTUL))
"RTN","IBDF2F",70,0)
 I 'IBDEVICE("PCL") D
"RTN","IBDF2F",71,0)
 .W:UL'="" $C(13),UL
"RTN","IBDF2F",72,0)
 ;do it a bit differently if IBDEVICE("PCL")
"RTN","IBDF2F",73,0)
 I IBDEVICE("PCL") D
"RTN","IBDF2F",74,0)
 .W:UL'="" $C(13),$C(27)_"*v2t1n0O",UL,$C(27)_"*v0T"
"RTN","IBDF2F",75,0)
 .;!!!!!!!!! with the area fill command - needed? see above
"RTN","IBDF2F",76,0)
 .;W:UL'="" $C(13),$C(27)_"*c35G",$C(27)_"*v2t1n0O",UL,$C(27)_"*v0T"
"RTN","IBDF2F",77,0)
 S NXTUL=$O(@IBARRAY("UNDERLINES")@(NXTUL))
"RTN","IBDF2F",78,0)
 Q
"RTN","IBDF2F",79,0)
PGRPHCS(STARTY,LASTY) ;print graphics - only for raster devices
"RTN","IBDF2F",80,0)
 N DX,DY,GRPHCS,LINE
"RTN","IBDF2F",81,0)
 W IOG1
"RTN","IBDF2F",82,0)
 S (DX,DY)=0 X IOXY
"RTN","IBDF2F",83,0)
 S LINE=STARTY F  S LINE=$O(@IBARRAY("GRAPHICS")@(LINE)) Q:(LINE="")!($G(LASTY)&(LINE'<LASTY))  D
"RTN","IBDF2F",84,0)
 .S DX="" F  S DX=$O(@IBARRAY("GRAPHICS")@(LINE,DX)) Q:DX=""  S GRPHCS=$G(@IBARRAY("GRAPHICS")@(LINE,DX)),GRPHCS=$$GRPHCS^IBDFU(GRPHCS) I GRPHCS'="" S DY=LINE#PERPAGE W ! X IOXY W GRPHCS
"RTN","IBDF2F",85,0)
 S STARTY=LASTY-1
"RTN","IBDF2F",86,0)
 W IOG0
"RTN","IBDF2F",87,0)
 Q
"RTN","IBDF2F",88,0)
 ;
"RTN","IBDF2F",89,0)
DRAW(STARTY,LASTY) ; draws the objects needing HP-GL/2 
"RTN","IBDF2F",90,0)
 N ROW,COL,BLK,NODE,WIDTH,HT,IEN,PRNTTYPE
"RTN","IBDF2F",91,0)
 W $C(27),"*p0x0Y"
"RTN","IBDF2F",92,0)
 W $C(27),"*c5760x7200Y"
"RTN","IBDF2F",93,0)
 W $C(27),"*c0T"
"RTN","IBDF2F",94,0)
 W $C(27),"%1B"
"RTN","IBDF2F",95,0)
 W "IN;SP1;"
"RTN","IBDF2F",96,0)
 W "SC0,5760,7200,0;" ;sets up the coordinate system same as PCL
"RTN","IBDF2F",97,0)
 W "AD3,16.6;" ;sets the alternate font for the labels
"RTN","IBDF2F",98,0)
 ;
"RTN","IBDF2F",99,0)
 ;draw bubbles
"RTN","IBDF2F",100,0)
 W "SV1,30;" ;set fill to 30%
"RTN","IBDF2F",101,0)
 W "PW.15;" ;set pen width to .15 mm
"RTN","IBDF2F",102,0)
 S ROW=STARTY
"RTN","IBDF2F",103,0)
 F  S ROW=$O(@IBARRAY("BUBBLES")@(ROW)) Q:(ROW="")!($G(LASTY)&(ROW'<LASTY))  S COL="" F  S COL=$O(@IBARRAY("BUBBLES")@(ROW,COL)) Q:COL=""  D DRWBBL(ROW#PERPAGE,COL)
"RTN","IBDF2F",104,0)
 ;
"RTN","IBDF2F",105,0)
 ;draw boxes
"RTN","IBDF2F",106,0)
 W "PW.4;" ;set pen width to .4 mm
"RTN","IBDF2F",107,0)
 ;set the fill to 100%
"RTN","IBDF2F",108,0)
 W "SV1,100;"
"RTN","IBDF2F",109,0)
 S ROW=STARTY
"RTN","IBDF2F",110,0)
 F  S ROW=$O(@IBARRAY("BOXES")@(ROW)) Q:(ROW="")!($G(LASTY)&(ROW'<(LASTY)))  S COL="" F  S COL=$O(@IBARRAY("BOXES")@(ROW,COL)) Q:COL=""  S BLK=0 F  S BLK=$O(@IBARRAY("BOXES")@(ROW,COL,BLK)) Q:'BLK  D
"RTN","IBDF2F",111,0)
 .S NODE=$G(@IBARRAY("BOXES")@(ROW,COL,BLK)) S WIDTH=$P(NODE,"^"),HT=$P(NODE,"^",2) D DRWBOX(ROW#PERPAGE,COL,WIDTH,HT)
"RTN","IBDF2F",112,0)
 ;
"RTN","IBDF2F",113,0)
 ;draw hand print fields
"RTN","IBDF2F",114,0)
 W "PW.15;" ;set pen width to .1 mm
"RTN","IBDF2F",115,0)
 ;set the fill to 40%
"RTN","IBDF2F",116,0)
 W "SV1,30;"
"RTN","IBDF2F",117,0)
 S ROW=STARTY
"RTN","IBDF2F",118,0)
 F  S ROW=$O(@IBARRAY("HAND_PRINT")@(ROW)) Q:(ROW="")!($G(LASTY)&(ROW'<LASTY))  S COL="" F  S COL=$O(@IBARRAY("HAND_PRINT")@(ROW,COL)) Q:COL=""  S IEN=0 F  S IEN=$O(@IBARRAY("HAND_PRINT")@(ROW,COL,IEN)) Q:'IEN  D
"RTN","IBDF2F",119,0)
 .S NODE=$G(@IBARRAY("HAND_PRINT")@(ROW,COL,IEN)),WIDTH=+$P(NODE,"^",3),PRNTTYPE=$P(NODE,"^",14) Q:('WIDTH)!('PRNTTYPE)
"RTN","IBDF2F",120,0)
 .D HANDPRNT(ROW#PERPAGE,COL,WIDTH,$P(NODE,"^",6),PRNTTYPE,$P(NODE,"^",17))
"RTN","IBDF2F",121,0)
 ;
"RTN","IBDF2F",122,0)
 S STARTY=LASTY-1
"RTN","IBDF2F",123,0)
 W $C(27),"%0A"
"RTN","IBDF2F",124,0)
 Q
"RTN","IBDF2F",125,0)
 ;
"RTN","IBDF2F",126,0)
DRWBBL(Y,X) ;
"RTN","IBDF2F",127,0)
 ;position is in terms of col,row - change to decipoints
"RTN","IBDF2F",128,0)
 S Y=(Y*IBDEVICE("ROW_HT"))+$S(IBFORM("WIDTH")>96:20,IBFORM("WIDTH")>80:30,1:40),X=(X+$S(IBFORM("WIDTH")>96:.5,IBFORM("WIDTH")>80:.75,1:1))*IBDEVICE("COL_WIDTH")
"RTN","IBDF2F",129,0)
 ;
"RTN","IBDF2F",130,0)
 ;position the pen
"RTN","IBDF2F",131,0)
 W "PA"_(X)_","_(Y)_";"
"RTN","IBDF2F",132,0)
 ;draw the bubble (a little box)
"RTN","IBDF2F",133,0)
 W "EA"_(X+87)_","_(Y+45)_";"
"RTN","IBDF2F",134,0)
 Q
"RTN","IBDF2F",135,0)
DRWBOX(Y,X,WIDTH,HT) ;
"RTN","IBDF2F",136,0)
 ;position is in terms of col,row - change to decipoints
"RTN","IBDF2F",137,0)
 S Y=((Y+.75)*IBDEVICE("ROW_HT"))+15,X=(X+.5)*IBDEVICE("COL_WIDTH")
"RTN","IBDF2F",138,0)
 ;position the pen
"RTN","IBDF2F",139,0)
 W "PA"_(X)_","_(Y)_";"
"RTN","IBDF2F",140,0)
 ;draw the box
"RTN","IBDF2F",141,0)
 W "EA"_(X+((WIDTH-1)*IBDEVICE("COL_WIDTH")))_","_(Y+((HT-1.7)*IBDEVICE("ROW_HT")))_";"
"RTN","IBDF2F",142,0)
 Q
"RTN","IBDF2F",143,0)
HANDPRNT(Y,X,WIDTH,LINES,PRNTTYPE,TYPEDATA) ; draw hand print area
"RTN","IBDF2F",144,0)
 ;FORMAT - contains overlay for the field
"RTN","IBDF2F",145,0)
 ;UNIT - label to print on the right of print area
"RTN","IBDF2F",146,0)
 ;PRNTTYPE = could be for ICR (print comb) or not ICR (no comb, different size)
"RTN","IBDF2F",147,0)
 N CHAR,FORMAT,UNIT,NODE
"RTN","IBDF2F",148,0)
 S NODE=""
"RTN","IBDF2F",149,0)
 I $G(TYPEDATA) S NODE=$G(^IBE(359.1,TYPEDATA,0))
"RTN","IBDF2F",150,0)
 S FORMAT=$P(NODE,"^",5),UNIT=$P(NODE,"^",11)
"RTN","IBDF2F",151,0)
 S:LINES'>0 LINES=1
"RTN","IBDF2F",152,0)
 I PRNTTYPE=2 D
"RTN","IBDF2F",153,0)
 .;change scale from col,row to decipoints
"RTN","IBDF2F",154,0)
 .S Y=(Y*IBDEVICE("ROW_HT"))+$S(IBFORM("WIDTH")>96:0,IBFORM("WIDTH")>80:15,1:30),X=X*IBDEVICE("COL_WIDTH")
"RTN","IBDF2F",155,0)
 .F  Q:LINES'>0  D  S LINES=LINES-1,Y=Y+(2*IBDEVICE("ROW_HT"))
"RTN","IBDF2F",156,0)
 ..;position the pen
"RTN","IBDF2F",157,0)
 ..W !,"PA"_(X)_","_(Y)_";"
"RTN","IBDF2F",158,0)
 ..;draw the box
"RTN","IBDF2F",159,0)
 ..W "EA"_(X+(172.7654*WIDTH))_","_(Y+(180))_";"
"RTN","IBDF2F",160,0)
 ..;print the unit of measurement
"RTN","IBDF2F",161,0)
 ..I $L(UNIT) W "SA;","PA"_(X+50+(172.7654*WIDTH))_",",(Y+(120))_";","LB",UNIT,$CHAR(3),"SS;"
"RTN","IBDF2F",162,0)
 ..;draw the comb
"RTN","IBDF2F",163,0)
 ..N I F I=1:1:WIDTH-1 W "PA"_(X+(172.7654*I))_",",(Y+(180))_";PD;PR0,-180;PU" S CHAR=$E(FORMAT,I+1) I CHAR'="",CHAR'="_" D
"RTN","IBDF2F",164,0)
 ...;character pre-slug
"RTN","IBDF2F",165,0)
 ...W !,"PA"_(X+50+(172.7654*I))_",",(Y+(120))_";"
"RTN","IBDF2F",166,0)
 ...W "LB",CHAR,$CHAR(3)
"RTN","IBDF2F",167,0)
 ;
"RTN","IBDF2F",168,0)
 I PRNTTYPE=1 D
"RTN","IBDF2F",169,0)
 .;change scale from col,row to decipoints
"RTN","IBDF2F",170,0)
 .S Y=(Y*IBDEVICE("ROW_HT")),X=X*IBDEVICE("COL_WIDTH")
"RTN","IBDF2F",171,0)
 .D CNVRTHT^IBDF2D1(LINES,.LINES)
"RTN","IBDF2F",172,0)
 .;position the pen
"RTN","IBDF2F",173,0)
 .W "PA"_(X)_","_(Y)_";"
"RTN","IBDF2F",174,0)
 .;draw the box
"RTN","IBDF2F",175,0)
 .W "EA"_(X+(103.6593*WIDTH))_","_(Y+(IBDEVICE("ROW_HT")*LINES))_";"
"RTN","IBDF2F",176,0)
 Q
"RTN","IBDF2F",177,0)
 ;
"RTN","IBDF2F",178,0)
WHITEOUT ;puts white space around the anchors - helps insure that the anchors can be located
"RTN","IBDF2F",179,0)
 ;
"RTN","IBDF2F",180,0)
 ;if the form isn't scannable there are no anchor marks
"RTN","IBDF2F",181,0)
 Q:'IBFORM("SCAN")
"RTN","IBDF2F",182,0)
 ;
"RTN","IBDF2F",183,0)
 W $C(27),"&a0v0H",!
"RTN","IBDF2F",184,0)
 ;set top margin to top of page
"RTN","IBDF2F",185,0)
 W $C(27),"&l0E"
"RTN","IBDF2F",186,0)
 ;top left corner (ANCHOR 1)
"RTN","IBDF2F",187,0)
 W $C(27),"&a354v4H",$C(27),"*c200h60v1P"
"RTN","IBDF2F",188,0)
 ;top middle (ANCHOR 2)
"RTN","IBDF2F",189,0)
 W $C(27),"&a354v2676H",$C(27),"*c400h60v1P"
"RTN","IBDF2F",190,0)
 ;bottom left (ANCHOR 4)
"RTN","IBDF2F",191,0)
 W $C(27),"&a7505v4H",$C(27),"*c200h60v1P"
"RTN","IBDF2F",192,0)
 ;top right (ANCHOR 3)
"RTN","IBDF2F",193,0)
 W $C(27),"&a354v5450H",$C(27),"*c400h60v1P"
"RTN","IBDF2F",194,0)
 ;bottom middle (ANCHOR 5)
"RTN","IBDF2F",195,0)
 W $C(27),"&a7505v2676H",$C(27),"*c400h60v1P"
"RTN","IBDF2F",196,0)
 ;bottom right (ANCHOR 6)
"RTN","IBDF2F",197,0)
 W $C(27),"&a7505v5450H",$C(27),"*c400h60v1P"
"RTN","IBDF2F",198,0)
 Q
"RTN","IBDF2F1")
0^114^B15653116
"RTN","IBDF2F1",1,0)
IBDF2F1 ;ALB/CJM - ENCOUNTER FORM - PRINT FORM(sends to printer) ;NOV 16,1992
"RTN","IBDF2F1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF2F1",3,0)
 ;
"RTN","IBDF2F1",4,0)
REGISTER(PAGE) ;registration for scanning, form # and patient at bottom
"RTN","IBDF2F1",5,0)
 N PAGECHK,TYPECHK,IDCHK,VA
"RTN","IBDF2F1",6,0)
 I IBDEVICE("PCL") D
"RTN","IBDF2F1",7,0)
 .I IBFORM("SCAN") D
"RTN","IBDF2F1",8,0)
 ..;calculate the checksums
"RTN","IBDF2F1",9,0)
 ..S PAGECHK=(3*PAGE)#29,TYPECHK=(3*IBFORM("TYPE"))#997,IDCHK=(3*(+$G(IBPFID)))#997
"RTN","IBDF2F1",10,0)
 .;set top margin to top of page
"RTN","IBDF2F1",11,0)
 .W $C(27),"&l0E"
"RTN","IBDF2F1",12,0)
 .;
"RTN","IBDF2F1",13,0)
 .I IBFORM("SCAN") D ANCHORS
"RTN","IBDF2F1",14,0)
 .;
"RTN","IBDF2F1",15,0)
 .I $G(IBFORM("SCAN",PAGE)) D
"RTN","IBDF2F1",16,0)
 ..; -- black box used to determine if page has data for scanning
"RTN","IBDF2F1",17,0)
 ..;    but not for sample forms
"RTN","IBDF2F1",18,0)
 ..I '$G(IBDSAMP) W $C(27),"&a7576v3400H",$C(27),"*c140h140v0P",$C(27)
"RTN","IBDF2F1",19,0)
 .;
"RTN","IBDF2F1",20,0)
 .;define font for OCR'd text
"RTN","IBDF2F1",21,0)
 .W $C(27),")s1p10h14v0s0b3T"
"RTN","IBDF2F1",22,0)
 .;define font for non-OCR' text
"RTN","IBDF2F1",23,0)
 .W $C(27)_"(s0p16.67h8.5v0s0b0T"
"RTN","IBDF2F1",24,0)
 .;print the form identifiers
"RTN","IBDF2F1",25,0)
 .W $C(27),"&a330h300V",$C(15),"FORM:",$C(27),"&a650H",$C(14),IBFORM("TYPE")
"RTN","IBDF2F1",26,0)
 .W $C(27),"&a1470H",$C(15),"ID:",$C(27),"&a1700H",$C(14),$G(IBPFID)
"RTN","IBDF2F1",27,0)
 .W $C(27),"&a4830H",$C(15),"PAGE:",$C(27),"&a5150H",$C(14),PAGE
"RTN","IBDF2F1",28,0)
 .;
"RTN","IBDF2F1",29,0)
 .;is the page going to be scanned?
"RTN","IBDF2F1",30,0)
 .I $G(IBFORM("SCAN",PAGE)),$G(IBPFID) D
"RTN","IBDF2F1",31,0)
 ..;Populating the scannable pages field in the forms tracking file
"RTN","IBDF2F1",32,0)
 ..;#357.96.   This is used when scanning the EF to make sure all
"RTN","IBDF2F1",33,0)
 ..;scannable pages have been scanned before data is filed in PCE.
"RTN","IBDF2F1",34,0)
 ..I '$D(^IBD(357.96,IBPFID,9,PAGE,0)) D
"RTN","IBDF2F1",35,0)
 ...S DIC="^IBD(357.96,IBPFID,9,",DIC(0)="L",DIC("P")=$P(^DD(357.96,9,0),"^",2),DA(1)=IBPFID,X=PAGE,DLAYGO=357.96 K DD,DO D FILE^DICN K DIC,DA,DLAYGO,DD,DO
"RTN","IBDF2F1",36,0)
 ..;print the checksums
"RTN","IBDF2F1",37,0)
 ..W $C(14),$C(27),"&a3400H",TYPECHK,$C(27),"&a3900H",IDCHK,$C(27),"&a4400H",PAGECHK
"RTN","IBDF2F1",38,0)
 .;
"RTN","IBDF2F1",39,0)
NAM .;print form id, etc. on bottom of form
"RTN","IBDF2F1",40,0)
 .D
"RTN","IBDF2F1",41,0)
 ..W !,$C(15),$C(27),"&a300h7710V"
"RTN","IBDF2F1",42,0)
 ..I $G(IBDSAMP) W "Sample Form: ",$P($G(^IBE(357,+$G(IBFORM),0)),"^") Q
"RTN","IBDF2F1",43,0)
 ..S X=$G(^TMP("IB",$J,"INTERFACES",+$G(DFN),"DPT PATIENT'S NAME"))
"RTN","IBDF2F1",44,0)
 ..W:X'="" X W:X="" $P($G(^DPT(+$G(DFN),0)),"^")
"RTN","IBDF2F1",45,0)
 .;
"RTN","IBDF2F1",46,0)
 .D
"RTN","IBDF2F1",47,0)
 ..W $C(27),"&a1900H"
"RTN","IBDF2F1",48,0)
 ..I $G(IBDSAMP) W "Clinic: ",$P($G(^SC(+$G(IBCLINIC),0)),"^") Q
"RTN","IBDF2F1",49,0)
 ..S X=$G(^TMP("IB",$J,"INTERFACES",+$G(DFN),"DPT PATIENT'S PID"))
"RTN","IBDF2F1",50,0)
 ..W:X'="" X I X="",+$G(DFN) D PID^VADPT W VA("PID")
"RTN","IBDF2F1",51,0)
 .;
"RTN","IBDF2F1",52,0)
 .W $C(27),"&a4200H","VA FORM 10-0360  APR 1994"
"RTN","IBDF2F1",53,0)
 .W $C(27),"&a4200h7620V","Station: ",$P($$SITE^VASITE,"^",3)
"RTN","IBDF2F1",54,0)
 .I $G(REPRINT) W $C(27),"&a1900H","**REPRINT**"
"RTN","IBDF2F1",55,0)
 .;
"RTN","IBDF2F1",56,0)
 .;reset the primary font & top margin, position cursor at the top
"RTN","IBDF2F1",57,0)
 .;reset the font for body of form
"RTN","IBDF2F1",58,0)
 .D
"RTN","IBDF2F1",59,0)
 ..I IBFORM("WIDTH")>96 W $C(27)_"(s0p16.67h8.5v0s0b0T" Q
"RTN","IBDF2F1",60,0)
 ..I IBFORM("WIDTH")>80 W $C(27)_"(s0p12h10v0s0b0T" Q
"RTN","IBDF2F1",61,0)
 ..W $C(27)_"(s0p10h12v0s0b0T"
"RTN","IBDF2F1",62,0)
 .;set top margin to leave 4 lines at top
"RTN","IBDF2F1",63,0)
 .W $C(27),"&l4E"
"RTN","IBDF2F1",64,0)
 .;set cursor to top left
"RTN","IBDF2F1",65,0)
 .W $C(27),"&a0c0R"
"RTN","IBDF2F1",66,0)
 ;
"RTN","IBDF2F1",67,0)
 ;move cursor to top left
"RTN","IBDF2F1",68,0)
 I '(IBFORM("SCAN")&IBDEVICE("PCL")),IBDEVICE("RASTER") S (DX,DY)=0 X IOXY K DX,DY
"RTN","IBDF2F1",69,0)
 Q
"RTN","IBDF2F1",70,0)
 ;
"RTN","IBDF2F1",71,0)
ANCHORS ;draws the anchors
"RTN","IBDF2F1",72,0)
 ;; - leave middle anchors in for time being.  removing causes
"RTN","IBDF2F1",73,0)
 ;; - printing problems in the first line on the page.  We will need
"RTN","IBDF2F1",74,0)
 ;; - to visit this at a later time.
"RTN","IBDF2F1",75,0)
 W !
"RTN","IBDF2F1",76,0)
 ;top left corner (ANCHOR 1)
"RTN","IBDF2F1",77,0)
 W $C(27),"&a184v4H",$C(27),"*c4h120v0P",$C(27),"*c124h4v0P"
"RTN","IBDF2F1",78,0)
 ;top middle (ANCHOR 2)
"RTN","IBDF2F1",79,0)
 W $C(27),"&a184v2876H",$C(27),"*c4h120v0P",$C(27),"*c124h4v0P"
"RTN","IBDF2F1",80,0)
 ;bottom left (ANCHOR 4)
"RTN","IBDF2F1",81,0)
 W $C(27),"&a7732v4H",$C(27),"*c124h4v0P",$C(27),"&a7615v4H",$C(27),"*c4h121v0P"
"RTN","IBDF2F1",82,0)
 ;top right (ANCHOR 3)
"RTN","IBDF2F1",83,0)
 W $C(27),"&a184v5534H",$C(27),"*c116h4v0P",$C(27),"&a184v5650H",$C(27),"*c4h120v0P"
"RTN","IBDF2F1",84,0)
 ;bottom middle (ANCHOR 5)
"RTN","IBDF2F1",85,0)
 W !,$C(27),"&a7732v2876H",$C(27),"*c123h4v0P",$C(27),"&a7615v2876H",$C(27),"*c4h121v0P"
"RTN","IBDF2F1",86,0)
 ;bottom right (ANCHOR 6)
"RTN","IBDF2F1",87,0)
 W $C(27),"&a7732v5534H",$C(27),"*c116h4v0P",$C(27),"&a7616v5650H",$C(27),"*c4h120v0P"
"RTN","IBDF2F1",88,0)
 Q
"RTN","IBDF2G")
0^115^B2657801
"RTN","IBDF2G",1,0)
IBDF2G ;ALB/CJM - ENCOUNTER FORM - (prints input field);07/20/94
"RTN","IBDF2G",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF2G",3,0)
MFLD(FIELD) ;for printing the multiple choice field=FIELD
"RTN","IBDF2G",4,0)
 N BLOCK,LABEL,ROW,COL,NODE,CHOICE,ID,DISP,FNAME,FID,ALLOWED,HDR,QLFR,PI
"RTN","IBDF2G",5,0)
 Q:'$G(FIELD)
"RTN","IBDF2G",6,0)
 S NODE=$G(^IBE(357.93,FIELD,0))
"RTN","IBDF2G",7,0)
 S BLOCK=$P(NODE,"^",8)
"RTN","IBDF2G",8,0)
 ;if the input field does not belong to the right block, reindex it and quit
"RTN","IBDF2G",9,0)
 I BLOCK'=IBBLK K DA S DA=FIELD,DIK="^IBE(357.93," D IX^DIK K DIK Q
"RTN","IBDF2G",10,0)
 ;
"RTN","IBDF2G",11,0)
 ;get the package interface
"RTN","IBDF2G",12,0)
 S PI=$P(NODE,"^",6)
"RTN","IBDF2G",13,0)
 ;
"RTN","IBDF2G",14,0)
 S COL=$P(NODE,"^",3)
"RTN","IBDF2G",15,0)
 S ROW=$P(NODE,"^",4)
"RTN","IBDF2G",16,0)
 S HDR=$P(NODE,"^",2)
"RTN","IBDF2G",17,0)
 I HDR]" ",ROW=+ROW,COL=+COL
"RTN","IBDF2G",18,0)
 E  S HDR=""
"RTN","IBDF2G",19,0)
 S DISP=$P(NODE,"^",7)
"RTN","IBDF2G",20,0)
 S FNAME=$P(NODE,"^")
"RTN","IBDF2G",21,0)
 S ALLOWED=$P(NODE,"^",9)
"RTN","IBDF2G",22,0)
 D:HDR]"" DRWSTR^IBDFU(+ROW,+COL,HDR,DISP)
"RTN","IBDF2G",23,0)
 ;
"RTN","IBDF2G",24,0)
 ;print the choices
"RTN","IBDF2G",25,0)
 S FID="M"_FIELD
"RTN","IBDF2G",26,0)
 S CHOICE=0 F  S CHOICE=$O(^IBE(357.93,FIELD,1,CHOICE)) Q:'CHOICE  D
"RTN","IBDF2G",27,0)
 .S NODE=$G(^IBE(357.93,FIELD,1,CHOICE,0))
"RTN","IBDF2G",28,0)
 .S ID=$P(NODE,"^",8) ;the ID of the choice
"RTN","IBDF2G",29,0)
 .S LABEL=$P(NODE,"^",5)
"RTN","IBDF2G",30,0)
 .S COL=$P(NODE,"^",2)
"RTN","IBDF2G",31,0)
 .S ROW=$P(NODE,"^",3)
"RTN","IBDF2G",32,0)
 .S DISP=$P(NODE,"^",4)
"RTN","IBDF2G",33,0)
 .I LABEL]" ",ROW=+ROW,COL=+COL
"RTN","IBDF2G",34,0)
 .E  S LABEL=""
"RTN","IBDF2G",35,0)
 .D:LABEL]"" DRWSTR^IBDFU(ROW,COL,LABEL,DISP)
"RTN","IBDF2G",36,0)
 .S COL=$P(NODE,"^",6)
"RTN","IBDF2G",37,0)
 .S ROW=$P(NODE,"^",7)
"RTN","IBDF2G",38,0)
 .S QLFR=$P(NODE,"^",9)
"RTN","IBDF2G",39,0)
 .I ROW=+ROW,COL=+COL D DRWBBL^IBDFM1(ROW,COL,PI,ID,FNAME,FID,ALLOWED,LABEL,HDR,QLFR)
"RTN","IBDF2G",40,0)
 Q
"RTN","IBDF2H")
0^116^B1685748
"RTN","IBDF2H",1,0)
IBDF2H ;ALB/CJM - ENCOUNTER FORM - (prints hand print field);07/20/94
"RTN","IBDF2H",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF2H",3,0)
 ;
"RTN","IBDF2H",4,0)
HFLD(FIELD) ;for printing the input field=FIELD
"RTN","IBDF2H",5,0)
 N BLOCK,LABEL,ROW,COL,NODE,DISP,FNAME,FID,TYPEDATA,PI,FORMAT,WIDTH,UNIT
"RTN","IBDF2H",6,0)
 Q:'$G(FIELD)
"RTN","IBDF2H",7,0)
 S NODE=$G(^IBE(359.94,FIELD,0))
"RTN","IBDF2H",8,0)
 S BLOCK=$P(NODE,"^",8)
"RTN","IBDF2H",9,0)
 ;if the input field does not belong to the right block, reindex it and quit
"RTN","IBDF2H",10,0)
 I BLOCK'=IBBLK K DA S DA=FIELD,DIK="^IBE(359.94," D IX^DIK K DIK Q
"RTN","IBDF2H",11,0)
 S PI=$P(NODE,"^",6)
"RTN","IBDF2H",12,0)
 S COL=$P(NODE,"^",3)
"RTN","IBDF2H",13,0)
 S ROW=$P(NODE,"^",4)
"RTN","IBDF2H",14,0)
 S LABEL=$P(NODE,"^",2)
"RTN","IBDF2H",15,0)
 S DISP=$P(NODE,"^",5)
"RTN","IBDF2H",16,0)
 S TYPEDATA=$P(NODE,"^",10)
"RTN","IBDF2H",17,0)
 S FNAME=$P(NODE,"^")
"RTN","IBDF2H",18,0)
 S FID="H"_FIELD
"RTN","IBDF2H",19,0)
 D DRWSTR^IBDFU(+ROW,+COL,LABEL,DISP)
"RTN","IBDF2H",20,0)
 ;
"RTN","IBDF2H",21,0)
 I TYPEDATA S NODE=$G(^IBE(359.1,TYPEDATA,0)) S FORMAT=$P(NODE,"^",5),WIDTH=$P(NODE,"^",6),UNIT=$P(NODE,"^",11)
"RTN","IBDF2H",22,0)
 D DRWHAND^IBDFM1(ROW,COL+$L(LABEL)+1,WIDTH,PI,1,FID,FNAME,LABEL,"",1,2,2,TYPEDATA)
"RTN","IBDF2H",23,0)
 Q
"RTN","IBDF3")
0^117^B24796002
"RTN","IBDF3",1,0)
IBDF3 ;ALB/CJM - ENCOUNTER FORM - EDIT SELECTION LIST ;NOV 16,1992
"RTN","IBDF3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF3",3,0)
 ;
"RTN","IBDF3",4,0)
EDITLIST ;expects IBBLK to be defined
"RTN","IBDF3",5,0)
 N IBLIST,IBVALMBG
"RTN","IBDF3",6,0)
 S IBVALMBG=VALMBG,VALMBCK="R"
"RTN","IBDF3",7,0)
 D SELECT
"RTN","IBDF3",8,0)
 I IBLIST D
"RTN","IBDF3",9,0)
 .Q:$$LSTDSCR2^IBDFU1(.IBLIST)
"RTN","IBDF3",10,0)
 .I IBLIST("DYNAMIC") W !,"You can not edit the contents of this list - it is determined at print time!" D PAUSE^IBDFU5 Q
"RTN","IBDF3",11,0)
 .D EN^VALM("IBDF DISPLAY GROUPS FOR EDIT")
"RTN","IBDF3",12,0)
 .K IBLIST
"RTN","IBDF3",13,0)
 .D UNCMPBLK^IBDF19(IBBLK)
"RTN","IBDF3",14,0)
 .I '$G(IBFASTXT) D
"RTN","IBDF3",15,0)
 ..D IDXBLOCK^IBDFU4
"RTN","IBDF3",16,0)
 ..S VALMBCK="R",VALMBG=IBVALMBG
"RTN","IBDF3",17,0)
 Q
"RTN","IBDF3",18,0)
ONENTRY ;
"RTN","IBDF3",19,0)
 D IDXGRP
"RTN","IBDF3",20,0)
 Q
"RTN","IBDF3",21,0)
ONEXIT ;
"RTN","IBDF3",22,0)
 K @VALMAR
"RTN","IBDF3",23,0)
 Q
"RTN","IBDF3",24,0)
SELECT ; 
"RTN","IBDF3",25,0)
 ; -- dic("s") passed in from ibdfgrp
"RTN","IBDF3",26,0)
 S IBLIST=""
"RTN","IBDF3",27,0)
 Q:'$G(IBBLK)
"RTN","IBDF3",28,0)
 S DIC="^IBE(357.2,",DIC(0)="EQ",D="C",X=IBBLK
"RTN","IBDF3",29,0)
 D IX^DIC K DIC
"RTN","IBDF3",30,0)
 S:+Y>0 IBLIST=+Y
"RTN","IBDF3",31,0)
 Q
"RTN","IBDF3",32,0)
ADDBLANK() ;
"RTN","IBDF3",33,0)
 N IGRP
"RTN","IBDF3",34,0)
 S GRP="" F  S GRP=$O(^IBE(357.4,"D",IBLIST,GRP)) Q:'GRP  Q:$P(^IBE(357.4,GRP,0),"^")="BLANK"
"RTN","IBDF3",35,0)
 I 'GRP D
"RTN","IBDF3",36,0)
 .K DIC,DD,DO,DINUM S DIC="^IBE(357.4,",DIC(0)="",X="BLANK",DIC(0)=""
"RTN","IBDF3",37,0)
 .D FILE^DICN K DIC
"RTN","IBDF3",38,0)
 .S GRP=$S(+Y<0:"",1:+Y)
"RTN","IBDF3",39,0)
 I GRP K DA,DIE S DA=GRP,DIE="^IBE(357.4,",DR=".02////0;.03////"_IBLIST D ^DIE K DIE,DA,DR
"RTN","IBDF3",40,0)
 Q GRP
"RTN","IBDF3",41,0)
IDXGRP ;build an index of groups in print order for list processor
"RTN","IBDF3",42,0)
 N GRP,GRPODR
"RTN","IBDF3",43,0)
 K @VALMAR
"RTN","IBDF3",44,0)
 S VALMCNT=0
"RTN","IBDF3",45,0)
 S GRPODR="" F  S GRPODR=$O(^IBE(357.4,"APO",IBLIST,GRPODR)) Q:GRPODR=""  D
"RTN","IBDF3",46,0)
 .S GRP="" F  S GRP=$O(^IBE(357.4,"APO",IBLIST,GRPODR,GRP)) Q:'GRP  D
"RTN","IBDF3",47,0)
 ..;
"RTN","IBDF3",48,0)
 ..;make sure the index is correct
"RTN","IBDF3",49,0)
 ..I $P($G(^IBE(357.4,GRP,0)),"^",3)'=IBLIST K DIK,DA S DIK="^IBE(357.4,",DA=GRP D IX^DIK K DIK,DA,^IBE(357.4,"APO",IBLIST,GRPODR,GRP) Q
"RTN","IBDF3",50,0)
 ..;
"RTN","IBDF3",51,0)
 ..S VALMCNT=VALMCNT+1
"RTN","IBDF3",52,0)
 ..S @VALMAR@(VALMCNT,0)=$$DISPLAY(GRP,VALMCNT),@VALMAR@("IDX",VALMCNT,VALMCNT)=GRP
"RTN","IBDF3",53,0)
 ..D FLDCTRL^VALM10(VALMCNT,"ID") ;set video for ID column
"RTN","IBDF3",54,0)
 Q
"RTN","IBDF3",55,0)
LMGRPHDR ;sets the screen hdr
"RTN","IBDF3",56,0)
 S VALMHDR(1)="PRINT GROUPS CURRENTLY DEFINED FOR '"_$$LISTNAME_"' SELECTION LIST"
"RTN","IBDF3",57,0)
 Q
"RTN","IBDF3",58,0)
DISPLAY(GRP,ROW) ;
"RTN","IBDF3",59,0)
 N NODE0,NAME,INV
"RTN","IBDF3",60,0)
 S NODE0=$G(^IBE(357.4,GRP,0)),NAME=$P(NODE0,"^"),INV=$P(NODE0,"^",4)
"RTN","IBDF3",61,0)
 I NAME="BLANK" S NAME="*i  BLANK (Not Displayed)"
"RTN","IBDF3",62,0)
 I NAME'="BLANK",INV="I" S NAME="*i  "_NAME
"RTN","IBDF3",63,0)
 I NAME'="BLANK",INV'="I" S NAME="    "_NAME
"RTN","IBDF3",64,0)
 Q $$PADRIGHT^IBDFU(ROW,6)_$J($P(NODE0,"^",2),6)_$J("",3)_$$PADRIGHT^IBDFU(NAME,40)_$J($$SLCTNCNT(GRP),6)_" selection(s)"
"RTN","IBDF3",65,0)
SLCTNCNT(GRP) ;
"RTN","IBDF3",66,0)
 N CNT,SLCTN
"RTN","IBDF3",67,0)
 S CNT=0,SLCTN=""
"RTN","IBDF3",68,0)
 F  S SLCTN=$O(^IBE(357.3,"D",GRP,SLCTN)) Q:'SLCTN  S CNT=CNT+1
"RTN","IBDF3",69,0)
 Q CNT
"RTN","IBDF3",70,0)
LISTNAME() ;
"RTN","IBDF3",71,0)
 Q $P($G(^IBE(357.2,IBLIST,0)),"^",1)
"RTN","IBDF3",72,0)
ADDGRP ;
"RTN","IBDF3",73,0)
 N NAME,QUIT,GRP
"RTN","IBDF3",74,0)
 S QUIT=0
"RTN","IBDF3",75,0)
 F  D  Q:QUIT
"RTN","IBDF3",76,0)
 .K DIR S DIR(0)="357.4,.01O",DIR("B")="" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBDF3",77,0)
 .S NAME=Y
"RTN","IBDF3",78,0)
 .K DIC,DD,DO,DINUM S DIC="^IBE(357.4,",X=NAME,DIC(0)=""
"RTN","IBDF3",79,0)
 .D FILE^DICN K DIC,DIE,DA
"RTN","IBDF3",80,0)
 .I +Y<0 W !,"Unable to create a new record!" D PAUSE^VALM1 S QUIT=1 Q
"RTN","IBDF3",81,0)
 .I +Y>0 K DA S DA=+Y,DIE="^IBE(357.4,",DIE("NO^")="Any value",DR=".02;.04;.03////"_IBLIST D ^DIE K DIC,DIE,DR,DA
"RTN","IBDF3",82,0)
 .W !,"Now Another!",!
"RTN","IBDF3",83,0)
 D IDXGRP
"RTN","IBDF3",84,0)
 S VALMBCK="R"
"RTN","IBDF3",85,0)
 Q
"RTN","IBDF3",86,0)
 ;
"RTN","IBDF3",87,0)
ADDEMPTY ;adds a blank group - a place holder that takes up space on the form
"RTN","IBDF3",88,0)
 ;
"RTN","IBDF3",89,0)
 N ORDER,QUIT,GRP
"RTN","IBDF3",90,0)
 S QUIT=0
"RTN","IBDF3",91,0)
 F  D  Q:QUIT
"RTN","IBDF3",92,0)
 .K DIR S DIR(0)="357.4,.02O",DIR("B")="" D ^DIR K DIR I (Y="")!$D(DIRUT) S QUIT=1 Q
"RTN","IBDF3",93,0)
 .S ORDER=Y
"RTN","IBDF3",94,0)
 .K DIC,DD,DO,DINUM S DIC="^IBE(357.4,",X=" ",DIC(0)=""
"RTN","IBDF3",95,0)
 .D FILE^DICN K DIC,DIE,DA
"RTN","IBDF3",96,0)
 .I +Y<0 W !,"Unable to create a new group record!" D PAUSE^VALM1 S QUIT=1 Q
"RTN","IBDF3",97,0)
 .I +Y>0 K DA S DA=+Y,DIE="^IBE(357.4,",DIE("NO^")="Any value",DR=".02////"_ORDER_";.03////"_IBLIST D ^DIE K DIC,DIE,DR,DA
"RTN","IBDF3",98,0)
 .W !,"Now Another!",!
"RTN","IBDF3",99,0)
 D IDXGRP
"RTN","IBDF3",100,0)
 S VALMBCK="R"
"RTN","IBDF3",101,0)
 Q
"RTN","IBDF3",102,0)
EDTSLCTN ;
"RTN","IBDF3",103,0)
 N SEL,IBGRP S SEL=""
"RTN","IBDF3",104,0)
 I $G(VALMCNT) D
"RTN","IBDF3",105,0)
 .D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDF3",106,0)
 .S SEL=$O(VALMY(""))
"RTN","IBDF3",107,0)
 I SEL="" D
"RTN","IBDF3",108,0)
 .S IBGRP=$$ADDBLANK Q:'IBGRP
"RTN","IBDF3",109,0)
 E  S IBGRP=$G(@VALMAR@("IDX",SEL,SEL))
"RTN","IBDF3",110,0)
 D:IBGRP SLCTNS^IBDF4,IDXGRP
"RTN","IBDF3",111,0)
 S VALMBCK="R"
"RTN","IBDF3",112,0)
 Q
"RTN","IBDF3",113,0)
EDITGRP ;
"RTN","IBDF3",114,0)
 N SEL,GRP
"RTN","IBDF3",115,0)
 S VALMBCK="R"
"RTN","IBDF3",116,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDF3",117,0)
 S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
"RTN","IBDF3",118,0)
 .S GRP=$G(@VALMAR@("IDX",SEL,SEL))
"RTN","IBDF3",119,0)
 .D:GRP
"RTN","IBDF3",120,0)
 ..K DIE,DA S DIE=357.4,DA=GRP,DR=".01;.02;.04" D ^DIE
"RTN","IBDF3",121,0)
 ..I '$D(DA) D DELSLCTN
"RTN","IBDF3",122,0)
 ..K DIE,DA,DR,DIC
"RTN","IBDF3",123,0)
 D IDXGRP
"RTN","IBDF3",124,0)
 S VALMBCK="R"
"RTN","IBDF3",125,0)
 Q
"RTN","IBDF3",126,0)
DELSLCTN ;deletes a group's selections
"RTN","IBDF3",127,0)
 N SLCTN
"RTN","IBDF3",128,0)
 S SLCTN="",DIK="^IBE(357.3,"
"RTN","IBDF3",129,0)
 F  S SLCTN=$O(^IBE(357.3,"D",GRP,SLCTN)) Q:'SLCTN  I $P($G(^IBE(357.3,SLCTN,0)),"^",4)=GRP K DA S DA=SLCTN D ^DIK
"RTN","IBDF3",130,0)
 K DIK,DA
"RTN","IBDF3",131,0)
 Q
"RTN","IBDF3",132,0)
DELGRP ;delete a group and all of its selections
"RTN","IBDF3",133,0)
 N SEL,GRP
"RTN","IBDF3",134,0)
 S VALMBCK="R"
"RTN","IBDF3",135,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBDF3",136,0)
 S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
"RTN","IBDF3",137,0)
 .S GRP=$G(@VALMAR@("IDX",SEL,SEL))
"RTN","IBDF3",138,0)
 .Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.4,GRP,0)),"^"))
"RTN","IBDF3",139,0)
 .I GRP D DELSLCTN K DA S DIK="^IBE(357.4,",DA=GRP D ^DIK K DIK
"RTN","IBDF3",140,0)
 D IDXGRP
"RTN","IBDF3",141,0)
 S VALMBCK="R"
"RTN","IBDF3",142,0)
 Q
"RTN","IBDF4")
0^118^B70022639
"RTN","IBDF4",1,0)
IBDF4 ;ALB/CJM - ENCOUNTER FORM - BUILD FORM(editing group's selections) ;NOV 16,1992
"RTN","IBDF4",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF4",3,0)
 ;
"RTN","IBDF4",4,0)
SLCTNS ;
"RTN","IBDF4",5,0)
 N IBRTN
"RTN","IBDF4",6,0)
 Q:IBLIST'=$P($G(^IBE(357.4,IBGRP,0)),"^",3)
"RTN","IBDF4",7,0)
 S IBRTN=IBLIST("RTN")
"RTN","IBDF4",8,0)
 D RTNDSCR^IBDFU1B(.IBRTN)
"RTN","IBDF4",9,0)
 D KILL^IBDFUA
"RTN","IBDF4",10,0)
 D EN^VALM("IBDF EDIT GROUP'S SELECTIONS") ;call the list manager
"RTN","IBDF4",11,0)
 Q
"RTN","IBDF4",12,0)
ONENTRY ;entry code for list manager
"RTN","IBDF4",13,0)
 D IDXSLCTN
"RTN","IBDF4",14,0)
 Q
"RTN","IBDF4",15,0)
ONEXIT ;exit code for the list manager
"RTN","IBDF4",16,0)
 K @VALMAR
"RTN","IBDF4",17,0)
 Q
"RTN","IBDF4",18,0)
 ;
"RTN","IBDF4",19,0)
IDXSLCTN ;build an array of selections in print order for the list processor
"RTN","IBDF4",20,0)
 N SLCTN,ODR,NODE
"RTN","IBDF4",21,0)
 K @VALMAR
"RTN","IBDF4",22,0)
 S ODR="",VALMCNT=0
"RTN","IBDF4",23,0)
 F  S ODR=$O(^IBE(357.3,"APO",IBLIST,IBGRP,ODR)) Q:ODR=""  D
"RTN","IBDF4",24,0)
 .S SLCTN="" F  S SLCTN=$O(^IBE(357.3,"APO",IBLIST,IBGRP,ODR,SLCTN)) Q:'SLCTN  D
"RTN","IBDF4",25,0)
 ..;check for messed up index and take appropriate action
"RTN","IBDF4",26,0)
 ..S NODE=$G(^IBE(357.3,SLCTN,0))
"RTN","IBDF4",27,0)
 ..I ($P(NODE,"^",3)'=IBLIST)!($P(NODE,"^",4)'=IBGRP) D  Q
"RTN","IBDF4",28,0)
 ...K ^IBE(357.3,"APO",IBLIST,IBGRP,ODR,SLCTN)
"RTN","IBDF4",29,0)
 ...I $P(NODE,"^",3)'=IBLIST,$P(NODE,"^",4)=IBGRP D  Q
"RTN","IBDF4",30,0)
 ....K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D ^DIK K DIK,DA
"RTN","IBDF4",31,0)
 ...I $P(NODE,"^",3)=IBLIST,$P($G(IBE(357.4,+IBGRP,0)),"^",3)'=IBLIST D  Q
"RTN","IBDF4",32,0)
 ....K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D ^DIK K DIK,DA
"RTN","IBDF4",33,0)
 ...K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D IX^DIK K DIK,DA
"RTN","IBDF4",34,0)
 ..;
"RTN","IBDF4",35,0)
 ..S VALMCNT=VALMCNT+1
"RTN","IBDF4",36,0)
 ..S @VALMAR@(VALMCNT,0)=$$DISPLAY(SLCTN,VALMCNT),@VALMAR@("IDX",VALMCNT,VALMCNT)=SLCTN
"RTN","IBDF4",37,0)
 ..D FLDCTRL^VALM10(VALMCNT,"ID") ;set video for ID column
"RTN","IBDF4",38,0)
 Q
"RTN","IBDF4",39,0)
LMGRPHDR ;header for the screen
"RTN","IBDF4",40,0)
 S VALMHDR(1)="SELECTIONS CURRENTLY DEFINED FOR '"_$$GRPNAME_"' PRINT GROUP"
"RTN","IBDF4",41,0)
 Q
"RTN","IBDF4",42,0)
 ;
"RTN","IBDF4",43,0)
GRPNAME() ;the name of the selection group
"RTN","IBDF4",44,0)
 Q $P($G(^IBE(357.4,IBGRP,0)),"^",1)
"RTN","IBDF4",45,0)
 ;
"RTN","IBDF4",46,0)
DISPLAY(SLCTN,COUNT) ;returns a line to display to the list containing a selection - SLCTN is a ptr to the selectin, COUNT is the number of the selection on the list
"RTN","IBDF4",47,0)
 N SC,SCDA,VAL,RET,W,NODE,ORDER
"RTN","IBDF4",48,0)
 ;W - an array cotaining the widths of the subcolumns that contain text
"RTN","IBDF4",49,0)
 S VAL=""
"RTN","IBDF4",50,0)
 S RET=$$PADRIGHT^IBDFU(COUNT,4)
"RTN","IBDF4",51,0)
 S NODE=$G(^IBE(357.3,SLCTN,0))
"RTN","IBDF4",52,0)
 S ORDER=$P(NODE,"^",5),RET=RET_$J(ORDER,6,2)
"RTN","IBDF4",53,0)
 I $P(NODE,"^",2) S RET=RET_$S($P(NODE,"^",7):" SH",1:" PH")_"| "_$P(NODE,"^",6)
"RTN","IBDF4",54,0)
 I '$P(NODE,"^",2) S RET=RET_"  ",SC="" F SC=1:1:8 S SCDA=$O(^IBE(357.3,SLCTN,1,"B",SC,"")) D
"RTN","IBDF4",55,0)
 .I $G(IBLIST("SCTYPE",SC))=1 S W(SC)=IBLIST("SCW",SC)*(1+IBLIST("BTWN"))
"RTN","IBDF4",56,0)
 .S:$G(W(SC)) VAL=$$PADRIGHT^IBDFU($S(SCDA:$P($G(^IBE(357.3,SLCTN,1,SCDA,0)),"^",2),1:""),W(SC))
"RTN","IBDF4",57,0)
 .S:VAL'="" RET=RET_" | "_VAL
"RTN","IBDF4",58,0)
 .S VAL=""
"RTN","IBDF4",59,0)
 I $D(^IBE(357.3,SLCTN,2)) S RET=RET_"  ",SC="" F SC=1:1:2 S SCDA=$P(^IBE(357.3,SLCTN,2),"^",SC) S:SC=2 SCDA=$P($G(^GMP(757.01,+SCDA,0)),"^") D
"RTN","IBDF4",60,0)
 .S W(SC)=25
"RTN","IBDF4",61,0)
 .S VAL=$$PADRIGHT^IBDFU($S(SCDA]"":SCDA,1:""),W(SC))
"RTN","IBDF4",62,0)
 .S:VAL'="" RET=RET_" | "_VAL
"RTN","IBDF4",63,0)
 .S VAL=""
"RTN","IBDF4",64,0)
 Q RET
"RTN","IBDF4",65,0)
ADDSLCTN ;allows the user to add a selection to the selection group
"RTN","IBDF4",66,0)
 N QUIT,SUB
"RTN","IBDF4",67,0)
 ;
"RTN","IBDF4",68,0)
 S VALMBCK="R"
"RTN","IBDF4",69,0)
 D FULL^VALM1
"RTN","IBDF4",70,0)
 I IBRTN("ACTION")'=3 D NOGOOD G ADDEXIT
"RTN","IBDF4",71,0)
 K @IBRTN("DATA_LOCATION")
"RTN","IBDF4",72,0)
 S QUIT=0 F  D  Q:QUIT  W !!!,"Now for another SELECTION LIST entry!"
"RTN","IBDF4",73,0)
 .I '$$DORTN^IBDFU1B(.IBRTN) S QUIT=1 D NOGOOD Q
"RTN","IBDF4",74,0)
 .I '$D(@IBRTN("DATA_LOCATION")) S QUIT=1 Q
"RTN","IBDF4",75,0)
 .D ADDREC(.QUIT) ;edits and adds the selection
"RTN","IBDF4",76,0)
 .K @IBRTN("DATA_LOCATION")
"RTN","IBDF4",77,0)
ADDEXIT ;
"RTN","IBDF4",78,0)
 D IDXSLCTN
"RTN","IBDF4",79,0)
 Q
"RTN","IBDF4",80,0)
ADDREC(QUIT,ORDER,SLCTN) ;allows the user to number the selection, edit the editable subcolumns, then adds the record - sets QUIT=1 if user quits
"RTN","IBDF4",81,0)
 N SUB,COUNT,NODE,VAL,DLAYGO,QTY
"RTN","IBDF4",82,0)
 I $P($G(^IBE(357.6,$P($G(^IBE(357.2,+IBLIST,0)),"^",11),16)),"^",8) S DIR(0)="NO",DIR("A")="Quantity",DIR("B")=1,DIR("?")="Enter the number of occurrences" D ^DIR K DIR S:$D(DTOUT)!$D(DUOUT) QUIT=1 Q:QUIT  S QTY=$G(Y)
"RTN","IBDF4",83,0)
 I '$G(ORDER) D  Q:QUIT
"RTN","IBDF4",84,0)
 .K DIR S DIR(0)="357.3,.05",DIR("B")=$$NEXT^IBDF4A(IBLIST,IBGRP) D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBDF4",85,0)
 .S ORDER=+Y
"RTN","IBDF4",86,0)
 S VAL=$G(@IBRTN("DATA_LOCATION"))
"RTN","IBDF4",87,0)
 F SUB=1:1:8 D  Q:QUIT
"RTN","IBDF4",88,0)
 .I $G(IBLIST("SCTYPE",SUB))=1 I IBLIST("SCPIECE",SUB),IBLIST("SCW",SUB) D
"RTN","IBDF4",89,0)
 ..S NODE=$$DATANODE^IBDFU1B(IBRTN,IBLIST("SCPIECE",SUB))
"RTN","IBDF4",90,0)
 ..I NODE]"" S VAL(SUB)=$P($G(@IBRTN("DATA_LOCATION")@(NODE)),"^",IBLIST("SCPIECE",SUB))
"RTN","IBDF4",91,0)
 ..E  S VAL(SUB)=$P(VAL,"^",IBLIST("SCPIECE",SUB))
"RTN","IBDF4",92,0)
 ..Q:('IBLIST("SCEDITABLE",SUB))!((IBRTN("WIDTH",1))&(IBLIST("SCPIECE",SUB)=1))
"RTN","IBDF4",93,0)
 ..W !!,"Subcolumn Header: "_IBLIST("SCHDR",SUB) K DIR S DIR(0)="FO^0:"_(IBLIST("SCW",SUB)*(1+IBLIST("BTWN"))),DIR("A")="Edit Subcolumn "_SUB,DIR("B")=VAL(SUB)_$S($G(QTY)>1:" x "_QTY,1:"")
"RTN","IBDF4",94,0)
 ..D ^DIR K DIR S:$D(DTOUT)!$D(DUOUT) QUIT=1 Q:QUIT  S VAL(SUB)=Y I IBLIST("SCPIECE",SUB)=1,X="" S QUIT=1
"RTN","IBDF4",95,0)
 Q:QUIT
"RTN","IBDF4",96,0)
 ;we have all the data needed to add the selection - so add it
"RTN","IBDF4",97,0)
 S NODE=$S($P(VAL,"^")'="":$P(VAL,"^"),1:ORDER)_"^^"_IBLIST_"^"_IBGRP_"^"_ORDER_$S($G(QTY):"^^^^"_QTY,1:"")
"RTN","IBDF4",98,0)
 K DIC,DD,DO,DINUM S DIC="^IBE(357.3,",X=$P(NODE,"^",1),DIC(0)="FL",DLAYGO=357.3
"RTN","IBDF4",99,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDF4",100,0)
 S SLCTN=$S(+Y<0:"",1:+Y)
"RTN","IBDF4",101,0)
 I 'SLCTN W !,"Unable to create a new selection record!" D PAUSE^VALM1 S QUIT=1 Q
"RTN","IBDF4",102,0)
 S ^IBE(357.3,SLCTN,0)=NODE
"RTN","IBDF4",103,0)
 ;add the subcolumn value multiple
"RTN","IBDF4",104,0)
 S COUNT=0 F SUB=1:1:8 I $G(VAL(SUB))'="" S COUNT=COUNT+1,^IBE(357.3,SLCTN,1,COUNT,0)=SUB_"^"_VAL(SUB)
"RTN","IBDF4",105,0)
 S ^IBE(357.3,SLCTN,1,0)="^357.31IA^"_COUNT_"^"_COUNT
"RTN","IBDF4",106,0)
 K DA S DA=SLCTN,DIK="^IBE(357.3," D IX^DIK K DIK,DA
"RTN","IBDF4",107,0)
 D NARR,TERM,CODES^IBDF4A
"RTN","IBDF4",108,0)
 Q
"RTN","IBDF4",109,0)
 ;
"RTN","IBDF4",110,0)
NARR ; -- edit provider narrative, but only for selections where the
"RTN","IBDF4",111,0)
 ;    interface allows editing
"RTN","IBDF4",112,0)
 N DIE,DA,DR
"RTN","IBDF4",113,0)
 I $P($G(^IBE(357.6,+$P($G(^IBE(357.2,+IBLIST,0)),U,11),0)),U,17) D
"RTN","IBDF4",114,0)
 .S DIE="^IBE(357.3,",DA=SLCTN,DR=2.01 D ^DIE
"RTN","IBDF4",115,0)
 Q
"RTN","IBDF4",116,0)
 ;
"RTN","IBDF4",117,0)
TERM ; -- map selection to clinical lexicon, but only for selections where
"RTN","IBDF4",118,0)
 ;    the package interface allows editing
"RTN","IBDF4",119,0)
 N DIE,DA,DR,GMPTUN,GMPTSUB,GMPTSHOW,XTLKGLB,XTLKHLP,XTLKKSCH,XTLKSAY,IBDLEX
"RTN","IBDF4",120,0)
 I $P($G(^IBE(357.6,+$P($G(^IBE(357.2,+IBLIST,0)),U,11),0)),U,18) D
"RTN","IBDF4",121,0)
 .I $D(^LEX)>1 S X="LEXSET" X ^%ZOSF("TEST") I $T D CONFIG^LEXSET("GMPL","PL1") S IBDLEX=1
"RTN","IBDF4",122,0)
 .I '$D(IBDLEX) S X="GMPTSET" X ^%ZOSF("TEST") I $T D CONFIG^GMPTSET("GMPL","PL1") S IBDLEX=1
"RTN","IBDF4",123,0)
 .;D CONFIG^GMPTSET("ICD","ICD") (this is an alternate filter)
"RTN","IBDF4",124,0)
 .Q:'$D(IBDLEX)
"RTN","IBDF4",125,0)
 .S DIE="^IBE(357.3,",DA=SLCTN,DR="2.02//"_$P($G(^IBE(357.3,DA,0)),"^") D ^DIE
"RTN","IBDF4",126,0)
 Q
"RTN","IBDF4",127,0)
 ;
"RTN","IBDF4",128,0)
CODES ; -- allow selection of a second code to pass through for this entry
"RTN","IBDF4",129,0)
 ; -- only as if pi allows input of more than one code
"RTN","IBDF4",130,0)
 ;N PI S PI=+$P($G(^IBE(357.2,+IBLIST,0)),U,11)
"RTN","IBDF4",131,0)
 ;Q:'$P($G(^IBE(357.6,PI,16)),U,9)
"RTN","IBDF4",132,0)
 ;N IBI,QUIT,IBVAL S QUIT=0
"RTN","IBDF4",133,0)
 ;F IBI=1,2 D  Q:QUIT
"RTN","IBDF4",134,0)
 ;.W !,"****Select a ",$S(IBI=1:"second",1:"third")," code to pass along with original."
"RTN","IBDF4",135,0)
 ;.I '$$DORTN^IBDFU1B(.IBRTN) S QUIT=1 Q
"RTN","IBDF4",136,0)
 ;.I +Y'>0 S QUIT=1 Q
"RTN","IBDF4",137,0)
 ;.X $G(^IBE(357.6,PI,9)) S IBVAL=X
"RTN","IBDF4",138,0)
 ;.S DIE="^IBE(357.3,",DA=SLCTN,DR=$S(IBI=1:"2.03",1:"2.04")_"////^S X=IBVAL" D ^DIE K DIE,DA,DR
"RTN","IBDF4",139,0)
 ;Q
"RTN","IBDF4",140,0)
 ;
"RTN","IBDF4",141,0)
NOGOOD ;
"RTN","IBDF4",142,0)
 W !,"The package interface routine for selection is not properly defined" D PAUSE^VALM1
"RTN","IBDF4",143,0)
 Q
"RTN","IBDF4",144,0)
 ;
"RTN","IBDF4",145,0)
SEQUENCE ;allows the user to resequence all of the selections on the list
"RTN","IBDF4",146,0)
 ;
"RTN","IBDF4",147,0)
 N SUBCOL,CNT,P,SORT,GROUP,NODE,VALUE,ITEM,IEN,HDR
"RTN","IBDF4",148,0)
 S VALMBCK="R"
"RTN","IBDF4",149,0)
 D FULL^VALM1
"RTN","IBDF4",150,0)
 ;
"RTN","IBDF4",151,0)
 ;sort by which subcolumn?
"RTN","IBDF4",152,0)
 K DIR S DIR("A")="Which subcolumn do you want to sort by?",DIR("?")=" "
"RTN","IBDF4",153,0)
 S SUBCOL=0 F  S SUBCOL=$O(IBLIST("SCTYPE",SUBCOL)) Q:'SUBCOL  I IBLIST("SCTYPE",SUBCOL)=1 S SUBCOL(SUBCOL)=""
"RTN","IBDF4",154,0)
 S (CNT,SUBCOL)=0,DIR(0)="SOX^"
"RTN","IBDF4",155,0)
 F CNT=1:1 S SUBCOL=$O(SUBCOL(SUBCOL)) Q:'SUBCOL  D
"RTN","IBDF4",156,0)
 .S P=IBLIST("SCPIECE",SUBCOL),P=$S(P=1:1,P=2:3,P=3:5,P=4:7,P=5:9,P=6:11,P=7:13,1:0),HDR=$P($G(^IBE(357.6,+IBLIST("RTN"),2)),"^",P),DIR("?",CNT)=SUBCOL_" = "_HDR
"RTN","IBDF4",157,0)
 .S HDR=$S($G(IBLIST("SCHDR",SUBCOL))="":HDR,1:IBLIST("SCHDR",SUBCOL))
"RTN","IBDF4",158,0)
 .S DIR(0)=DIR(0)_SUBCOL_":"_HDR_";"
"RTN","IBDF4",159,0)
 D ^DIR
"RTN","IBDF4",160,0)
 Q:$D(DIRUT)!(Y=-1)
"RTN","IBDF4",161,0)
 K SUBCOL S SUBCOL=+Y
"RTN","IBDF4",162,0)
 ;
"RTN","IBDF4",163,0)
 ;sort aphabetically or numerically?
"RTN","IBDF4",164,0)
 K DIR
"RTN","IBDF4",165,0)
 S DIR("A")="How should the list be sorted?",DIR(0)="SO^1:ALPHABETICALLY;2:NUMERICALLY;",DIR("B")="ALPHABETICALLY"
"RTN","IBDF4",166,0)
 D ^DIR
"RTN","IBDF4",167,0)
 Q:$D(DIRUT)!(Y=-1)
"RTN","IBDF4",168,0)
 S SORT=Y
"RTN","IBDF4",169,0)
 ;  -- Resequence by group or group and placeholders
"RTN","IBDF4",170,0)
 K DIR
"RTN","IBDF4",171,0)
 S DIR("A")="Resequence by Group or Group and Place Holders?",DIR(0)="SO^1:GROUP/PLACE HOLDERS;2:GROUP;",DIR("B")="GROUP/PLACE HOLDERS"
"RTN","IBDF4",172,0)
 D ^DIR
"RTN","IBDF4",173,0)
 Q:$D(DIRUT)!(Y=-1)
"RTN","IBDF4",174,0)
 S SORT1=Y
"RTN","IBDF4",175,0)
 ;
"RTN","IBDF4",176,0)
 ;sort
"RTN","IBDF4",177,0)
 I SORT1=2 D EN^IBDF4A Q
"RTN","IBDF4",178,0)
 N CNTR,GROUP1,IBGROUP,IBORDER
"RTN","IBDF4",179,0)
 K ^TMP("IBDF",$J)
"RTN","IBDF4",180,0)
 S (GROUP,GROUP1,CNTR,IBGROUP)=0
"RTN","IBDF4",181,0)
 ;  -- Resequence only specific groups in block.
"RTN","IBDF4",182,0)
 I $D(IBGRUP) F  S IBGROUP=$O(IBGRUP(IBGROUP)) Q:'IBGROUP  D RESEQ
"RTN","IBDF4",183,0)
 I $D(IBGRUP) D ORDER Q
"RTN","IBDF4",184,0)
 ;  -- Resequence all groups of the block.
"RTN","IBDF4",185,0)
 I '$D(IBGRUP) F  S IBGROUP=$O(^IBE(357.3,"APO",IBLIST,IBGROUP)) Q:'IBGROUP  D RESEQ
"RTN","IBDF4",186,0)
 I '$D(IBGRUP) D ORDER Q
"RTN","IBDF4",187,0)
 Q
"RTN","IBDF4",188,0)
RESEQ S IBORDER=0 F  S IBORDER=$O(^IBE(357.3,"APO",IBLIST,IBGROUP,IBORDER)) Q:'IBORDER  S ITEM=0 F  S ITEM=$O(^IBE(357.3,"APO",IBLIST,IBGROUP,IBORDER,ITEM)) Q:'ITEM  D
"RTN","IBDF4",189,0)
 .S NODE=$G(^IBE(357.3,ITEM,0))
"RTN","IBDF4",190,0)
 .I ($P(NODE,"^",3)'=IBLIST) Q
"RTN","IBDF4",191,0)
 .S GROUP1=GROUP,GROUP=+$P(NODE,"^",4)
"RTN","IBDF4",192,0)
 .Q:$P($G(^IBE(357.4,GROUP,0)),"^",3)'=IBLIST
"RTN","IBDF4",193,0)
 .I $P(NODE,"^",2)=1 D  Q
"RTN","IBDF4",194,0)
 ..S CNTR=CNTR+1
"RTN","IBDF4",195,0)
 ..S VALUE=$S(SORT=1:" ",1:+$P(NODE,"^",1))
"RTN","IBDF4",196,0)
 ..S ^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,CNTR,VALUE,ITEM)=""
"RTN","IBDF4",197,0)
 .S IEN=$O(^IBE(357.3,ITEM,1,"B",SUBCOL,0)) Q:'IEN
"RTN","IBDF4",198,0)
 .S VALUE=$P($G(^IBE(357.3,ITEM,1,IEN,0)),"^",2)
"RTN","IBDF4",199,0)
 .S VALUE=$S(SORT=1:VALUE=" "_VALUE,1:+$P(NODE,"^",1))
"RTN","IBDF4",200,0)
 .I GROUP'=GROUP1 S CNTR=CNTR+1
"RTN","IBDF4",201,0)
 .S ^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,CNTR,$E(VALUE,1,40),ITEM)=""
"RTN","IBDF4",202,0)
 ;set the order
"RTN","IBDF4",203,0)
ORDER S GROUP=0,CNTR=0
"RTN","IBDF4",204,0)
 F  S GROUP=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP)) Q:'GROUP  D
"RTN","IBDF4",205,0)
 .S VALUE="",CNT=0
"RTN","IBDF4",206,0)
 .F  S CNTR=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,CNTR)) Q:'CNTR  F  S VALUE=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,CNTR,VALUE)) Q:VALUE=""  D
"RTN","IBDF4",207,0)
 ..S ITEM=0 F  S ITEM=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,CNTR,VALUE,ITEM)) Q:'ITEM  D
"RTN","IBDF4",208,0)
 ...S CNT=CNT+1
"RTN","IBDF4",209,0)
 ...K DIE,DA,DR S DIE="^IBE(357.3,",DR=".05///"_CNT,DA=ITEM D ^DIE K DIE,DA,DR
"RTN","IBDF4",210,0)
 ;
"RTN","IBDF4",211,0)
 K Y,X,DIR,^TMP("IBDF",$J,"RESEQUENCE LIST")
"RTN","IBDF4",212,0)
 D IDXGRP^IBDF3
"RTN","IBDF4",213,0)
 Q
"RTN","IBDF4A")
0^119^B39177722
"RTN","IBDF4A",1,0)
IBDF4A ;ALB/CJM - ENCOUNTER FORM - BUILD FORM(editing group's selections - continued from IBDF4) ;NOV 16,1992
"RTN","IBDF4A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF4A",3,0)
 ;
"RTN","IBDF4A",4,0)
EDIT ;allows editing of an existing selection
"RTN","IBDF4A",5,0)
 N SEL,SUB,SLCTN,SC,NODE,OQTY,NQTY
"RTN","IBDF4A",6,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDF4A",7,0)
 S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
"RTN","IBDF4A",8,0)
 .W !,"Editing Entry #",SEL
"RTN","IBDF4A",9,0)
 .S SLCTN=$G(@VALMAR@("IDX",SEL,SEL)) Q:'SLCTN
"RTN","IBDF4A",10,0)
 .S NODE=$G(^IBE(357.3,SLCTN,0))
"RTN","IBDF4A",11,0)
 .;re-index the record, to insure it is good                             
"RTN","IBDF4A",12,0)
 .K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D IX^DIK K DIK
"RTN","IBDF4A",13,0)
 .;edit the order of the selection - also, for placeholders, the text, then quit
"RTN","IBDF4A",14,0)
 .D FULL^VALM1
"RTN","IBDF4A",15,0)
 .I $P(NODE,"^",2) D  Q
"RTN","IBDF4A",16,0)
 ..S DA=SLCTN,DIE=357.3,DR="[IBDF EDIT PLACE HOLDER]" D ^DIE K DIE,DA,DR
"RTN","IBDF4A",17,0)
 .S DA=SLCTN,DIE=357.3,DR=".05;I '$P($G(^IBE(357.6,$P($G(^IBE(357.2,+IBLIST,0)),""^"",11),16)),""^"",8) S Y=""@99"";S OQTY=$P(^IBE(357.3,DA,0),""^"",9);.09;S NQTY=X;@99;S CONT=1" S CONT=0 D ^DIE K DIE,DA,DR
"RTN","IBDF4A",18,0)
 .;add any missing subcolumns
"RTN","IBDF4A",19,0)
 .S SC=0 F SC=1:1:8 I $G(IBLIST("SCTYPE",SC))=1 I '$D(^IBE(357.3,SLCTN,1,"B",SC)) D
"RTN","IBDF4A",20,0)
 ..K DA,DO,DINUM,DIC
"RTN","IBDF4A",21,0)
 ..N DLAYGO
"RTN","IBDF4A",22,0)
 ..S DIC="^IBE(357.3,"_SLCTN_",1,",DA(1)=SLCTN,X=SC,DIC(0)="L",DLAYGO=357.3 D FILE^DICN
"RTN","IBDF4A",23,0)
 .;now allow the user to edit editable subcolumns - CONT=0 means the user up-arrowed out, so stop
"RTN","IBDF4A",24,0)
 .I CONT S SUB=0 F  S SUB=$O(^IBE(357.3,SLCTN,1,SUB)) Q:'SUB  D
"RTN","IBDF4A",25,0)
 ..S SC=+$G(^IBE(357.3,SLCTN,1,SUB,0)) I $G(IBLIST("SCTYPE",SC))=1,$G(IBLIST("SCPIECE",SC)),$G(IBLIST("SCEDITABLE",SC)) D
"RTN","IBDF4A",26,0)
 ...I $G(^IBE(357.3,SLCTN,1,0))="" S ^IBE(357.3,SLCTN,1,0)="^357.31AI^"
"RTN","IBDF4A",27,0)
 ...S DIE="^IBE(357.3,"_SLCTN_",1,",DA(1)=SLCTN,DA=SUB,DR=".02;S CONT=1",CONT=0 W !!,"Editing Subcolumn "_SC_": Header="_IBLIST("SCHDR",SC)
"RTN","IBDF4A",28,0)
 ...I $G(OQTY)'=$G(NQTY) S IBVAL=$P($G(^IBE(357.3,SLCTN,1,SUB,0)),"^",2),IBVAL=$P(IBVAL," x "_OQTY)_$S(NQTY>1:" x "_NQTY,1:""),DR=".02////^S X=IBVAL;I;"_DR
"RTN","IBDF4A",29,0)
 ...D ^DIE K DIE,DA,DR,IBVAL I 'CONT Q
"RTN","IBDF4A",30,0)
 .D NARR^IBDF4 W !
"RTN","IBDF4A",31,0)
 .D TERM^IBDF4 W !
"RTN","IBDF4A",32,0)
 .D CODES
"RTN","IBDF4A",33,0)
 D IDXSLCTN^IBDF4
"RTN","IBDF4A",34,0)
 S VALMBCK="R"
"RTN","IBDF4A",35,0)
EDITEXIT ;
"RTN","IBDF4A",36,0)
 Q
"RTN","IBDF4A",37,0)
CODES ; -- allow editing of 2nd & 3rd codes that are associated w/ original
"RTN","IBDF4A",38,0)
 N IBPI S IBPI=+$P($G(^IBE(357.2,+IBLIST,0)),U,11) Q:'IBPI
"RTN","IBDF4A",39,0)
 Q:'$P($G(^IBE(357.6,IBPI,16)),U,9)!('$D(^IBE(357.6,IBPI,17)))
"RTN","IBDF4A",40,0)
 N IBI,IBEXT,FLD
"RTN","IBDF4A",41,0)
 F IBI=3,4 S FLD="2.0"_IBI D
"RTN","IBDF4A",42,0)
 .S IBEXT=$P($G(^IBE(357.3,SLCTN,2)),"^",IBI)
"RTN","IBDF4A",43,0)
 .I $G(IBEXT)]"" D
"RTN","IBDF4A",44,0)
 ..W !,$S(IBI=3:"SECOND",1:"THIRD")," CODE: ",IBEXT
"RTN","IBDF4A",45,0)
 ..S DIR(0)="Y",DIR("A")="Delete?",DIR("B")="NO" D ^DIR K DIR
"RTN","IBDF4A",46,0)
 ..I Y=1 S IBEXT="",DIE="^IBE(357.3,",DA=SLCTN,DR=FLD_"////@" D ^DIE K DIE,DA,DR
"RTN","IBDF4A",47,0)
 .S DIC("A")="Select a "_$S(IBI=3:"SECOND",1:"THIRD")_" code to associate with the original:",DIC("B")=$S($G(IBEXT)]"":IBEXT,1:"")
"RTN","IBDF4A",48,0)
 .I '$$DORTN^IBDFU1B(.IBRTN) Q
"RTN","IBDF4A",49,0)
 .S IBEXT=$S(+Y>0:$P(Y(0),"^"),1:"")
"RTN","IBDF4A",50,0)
 .I $G(IBEXT)]"" D
"RTN","IBDF4A",51,0)
 ..S DIE="^IBE(357.3,",DA=SLCTN,DR=FLD_"////^S X=IBEXT"
"RTN","IBDF4A",52,0)
 ..D ^DIE K DIE,DA,DR
"RTN","IBDF4A",53,0)
 Q
"RTN","IBDF4A",54,0)
DELETE ;allows the user to select selections to delete
"RTN","IBDF4A",55,0)
 N SEL
"RTN","IBDF4A",56,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBDF4A",57,0)
 K DA
"RTN","IBDF4A",58,0)
 S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
"RTN","IBDF4A",59,0)
 .S DIK="^IBE(357.3,",DA=$G(@VALMAR@("IDX",SEL,SEL))
"RTN","IBDF4A",60,0)
 .Q:'$$RUSURE^IBDFU5("Selection #"_SEL)
"RTN","IBDF4A",61,0)
 .D ^DIK
"RTN","IBDF4A",62,0)
 .D KILL^VALM10(SEL)
"RTN","IBDF4A",63,0)
 K DIK,DA
"RTN","IBDF4A",64,0)
 D IDXSLCTN^IBDF4
"RTN","IBDF4A",65,0)
 S VALMBCK="R"
"RTN","IBDF4A",66,0)
 Q
"RTN","IBDF4A",67,0)
 ;
"RTN","IBDF4A",68,0)
ADDBLANK ;allows the user to add a dummy selection to the selection group
"RTN","IBDF4A",69,0)
 ;i.e., a place holder that will not actually print a selection
"RTN","IBDF4A",70,0)
 ;
"RTN","IBDF4A",71,0)
 D FULL^VALM1
"RTN","IBDF4A",72,0)
 D ADD
"RTN","IBDF4A",73,0)
 D IDXSLCTN^IBDF4
"RTN","IBDF4A",74,0)
 S VALMBCK="R"
"RTN","IBDF4A",75,0)
 Q
"RTN","IBDF4A",76,0)
 ;
"RTN","IBDF4A",77,0)
NEXT(IBLIST,IBGRP) ;returns the next print order to assign=last + 1
"RTN","IBDF4A",78,0)
 Q (1+$O(^IBE(357.3,"APO",IBLIST,IBGRP,""),-1))
"RTN","IBDF4A",79,0)
 ;
"RTN","IBDF4A",80,0)
ASKMORE() ;ask if the user wants to add another, returns 1 or 0
"RTN","IBDF4A",81,0)
 K DIR
"RTN","IBDF4A",82,0)
 S DIR(0)="Y",DIR("A")="Do you want to add another",DIR("B")="NO"
"RTN","IBDF4A",83,0)
 D ^DIR
"RTN","IBDF4A",84,0)
 K DIR
"RTN","IBDF4A",85,0)
 I $D(DIRUT)!'Y Q 0
"RTN","IBDF4A",86,0)
 Q 1
"RTN","IBDF4A",87,0)
 ;
"RTN","IBDF4A",88,0)
ADD ;allows the user to add a dummy selection to the selection group
"RTN","IBDF4A",89,0)
 ;i.e., a place holder that will not actually print a selection
"RTN","IBDF4A",90,0)
 ;
"RTN","IBDF4A",91,0)
 N QUIT,ORDER,SLCTN,NODE
"RTN","IBDF4A",92,0)
 S QUIT=0 F  D  Q:QUIT  Q:'$$ASKMORE()
"RTN","IBDF4A",93,0)
 .S ORDER=$$NEXT(IBLIST,IBGRP)
"RTN","IBDF4A",94,0)
 .;we have all the data needed to add the selection - so add it
"RTN","IBDF4A",95,0)
 .S NODE=ORDER_"^"_1_"^"_IBLIST_"^"_IBGRP_"^"_ORDER
"RTN","IBDF4A",96,0)
 .K DIC,DD,DO,DINUM
"RTN","IBDF4A",97,0)
 .N DLAYGO
"RTN","IBDF4A",98,0)
 .S DIC="^IBE(357.3,",X=ORDER,DIC(0)="FL",DLAYGO=357.3
"RTN","IBDF4A",99,0)
 .D FILE^DICN K DIC,DIE,DA
"RTN","IBDF4A",100,0)
 .S SLCTN=$S(+Y<0:"",1:+Y)
"RTN","IBDF4A",101,0)
 .I 'SLCTN W !,"Unable to create the place holder!" D PAUSE^VALM1 S QUIT=1 Q
"RTN","IBDF4A",102,0)
 .S ^IBE(357.3,SLCTN,0)=NODE
"RTN","IBDF4A",103,0)
 .K DA S DA=SLCTN,DIK="^IBE(357.3," D IX^DIK K DIK,DA
"RTN","IBDF4A",104,0)
 .K DIE S DA=SLCTN,DIE=357.3,DR="[IBDF EDIT PLACE HOLDER]" D ^DIE K DIE,DA,DR
"RTN","IBDF4A",105,0)
 .K DA S DA=SLCTN,DIK="^IBE(357.3," D IX^DIK K DIK,DA
"RTN","IBDF4A",106,0)
 Q
"RTN","IBDF4A",107,0)
EN ;  -- Resequence selection lists not taking into account the
"RTN","IBDF4A",108,0)
 ;     the place holders.  Will put the selection list into alphabetic
"RTN","IBDF4A",109,0)
 ;     or numeric order..... the place holders will be used as exta
"RTN","IBDF4A",110,0)
 ;     lines of description and not as separators or headers within
"RTN","IBDF4A",111,0)
 ;     the group.
"RTN","IBDF4A",112,0)
 N CNTR,COUNT,IBGROUP,IBORDER
"RTN","IBDF4A",113,0)
 S (CNTR,COUNT,IBGROUP)=0
"RTN","IBDF4A",114,0)
 K ^TMP("BLANK",$J),^TMP("IBDF",$J)
"RTN","IBDF4A",115,0)
 ;  -- Resequence only specific groups in block.
"RTN","IBDF4A",116,0)
 I $D(IBGRUP) F  S IBGROUP=$O(IBGRUP(IBGROUP)) Q:'IBGROUP  D RESEQ
"RTN","IBDF4A",117,0)
 I $D(IBGRUP) D ORDER Q
"RTN","IBDF4A",118,0)
 ;  -- Resequence all groups of the block.
"RTN","IBDF4A",119,0)
 I '$D(IBGRUP) F  S IBGROUP=$O(^IBE(357.3,"APO",IBLIST,IBGROUP)) Q:'IBGROUP  D RESEQ
"RTN","IBDF4A",120,0)
 I '$D(IBGRUP) D ORDER Q
"RTN","IBDF4A",121,0)
 Q
"RTN","IBDF4A",122,0)
 ;
"RTN","IBDF4A",123,0)
RESEQ S IBORDER=0 F  S IBORDER=$O(^IBE(357.3,"APO",IBLIST,IBGROUP,IBORDER)) Q:'IBORDER  S ITEM=0 F  S ITEM=$O(^IBE(357.3,"APO",IBLIST,IBGROUP,IBORDER,ITEM)) Q:'ITEM  D
"RTN","IBDF4A",124,0)
 .S NODE=$G(^IBE(357.3,ITEM,0))
"RTN","IBDF4A",125,0)
 .I ($P(NODE,"^",3)'=IBLIST) Q
"RTN","IBDF4A",126,0)
 .S GROUP=+$P(NODE,"^",4)
"RTN","IBDF4A",127,0)
 .Q:$P($G(^IBE(357.4,GROUP,0)),"^",3)'=IBLIST
"RTN","IBDF4A",128,0)
 .S COUNT=COUNT+1
"RTN","IBDF4A",129,0)
 .I $P(NODE,"^",2) S ^TMP("BLANK",$J,GROUP,CNTR,COUNT,ITEM)=""
"RTN","IBDF4A",130,0)
 .S IEN=$O(^IBE(357.3,ITEM,1,"B",SUBCOL,0)) Q:'IEN
"RTN","IBDF4A",131,0)
 .S VALUE=$P($G(^IBE(357.3,ITEM,1,IEN,0)),"^",2)
"RTN","IBDF4A",132,0)
 .S VALUE=$S(SORT=1:VALUE=" "_VALUE,1:+$P(NODE,"^",1))
"RTN","IBDF4A",133,0)
 .S CNTR=CNTR+1
"RTN","IBDF4A",134,0)
 .S ^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,$E(VALUE,1,40),ITEM)=CNTR
"RTN","IBDF4A",135,0)
 .S ^TMP("BLANK",$J,GROUP,CNTR,COUNT,ITEM)=""
"RTN","IBDF4A",136,0)
 ;
"RTN","IBDF4A",137,0)
 ;set the order
"RTN","IBDF4A",138,0)
ORDER S (GROUP,CNTR)=0
"RTN","IBDF4A",139,0)
 F  S GROUP=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP)) Q:'GROUP  D
"RTN","IBDF4A",140,0)
 .S VALUE="",CNT=0
"RTN","IBDF4A",141,0)
 .F  S VALUE=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,VALUE)) Q:VALUE=""  D
"RTN","IBDF4A",142,0)
 ..S ITEM=0 F  S ITEM=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,VALUE,ITEM)) Q:'ITEM  S CNTR=^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,VALUE,ITEM) D:'$D(^TMP("BLANK",$J,GROUP,CNTR))  I $D(^TMP("BLANK",$J,GROUP,CNTR)) D BLANK
"RTN","IBDF4A",143,0)
 ...S CNT=CNT+1
"RTN","IBDF4A",144,0)
 ...K DIE,DA,DR S DIE="^IBE(357.3,",DR=".05///"_CNT,DA=ITEM D ^DIE K DIE,DA,DR
"RTN","IBDF4A",145,0)
 ;
"RTN","IBDF4A",146,0)
 K Y,X,DIR,^TMP("IBDF",$J,"RESEQUENCE LIST")
"RTN","IBDF4A",147,0)
 D IDXGRP^IBDF3
"RTN","IBDF4A",148,0)
 Q
"RTN","IBDF4A",149,0)
BLANK ;  -- Check to see if there is any place holders.
"RTN","IBDF4A",150,0)
 N IBDITEM,COUNT
"RTN","IBDF4A",151,0)
 F COUNT=0:0 S COUNT=$O(^TMP("BLANK",$J,GROUP,CNTR,COUNT)) Q:'COUNT  F IBDITEM=0:0 S IBDITEM=$O(^TMP("BLANK",$J,GROUP,CNTR,COUNT,IBDITEM)) Q:'IBDITEM  D
"RTN","IBDF4A",152,0)
 .S CNT=CNT+1
"RTN","IBDF4A",153,0)
 .K DIE,DA,DR S DIE="^IBE(357.3,",DR=".05///"_CNT,DA=IBDITEM D ^DIE K DIE,DA,DR
"RTN","IBDF4A",154,0)
 .Q
"RTN","IBDF4A",155,0)
 Q
"RTN","IBDF5")
0^120^B17073479
"RTN","IBDF5",1,0)
IBDF5 ;ALB/CJM - ENCOUNTER FORM (edit a form);NOV 16,1992
"RTN","IBDF5",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF5",3,0)
 ;displays the form for editing using the list processor
"RTN","IBDF5",4,0)
 ;
"RTN","IBDF5",5,0)
 ;these variables should always be defined while editing a form
"RTN","IBDF5",6,0)
 ;IBFORM - contains the form description
"RTN","IBDF5",7,0)
INIT ;
"RTN","IBDF5",8,0)
 ;
"RTN","IBDF5",9,0)
 Q:'$$FORMDSCR^IBDFU1C(.IBFORM)
"RTN","IBDF5",10,0)
 D IDXFORM^IBDF5A()
"RTN","IBDF5",11,0)
 Q
"RTN","IBDF5",12,0)
EXIT ;
"RTN","IBDF5",13,0)
 K @VALMAR
"RTN","IBDF5",14,0)
 Q
"RTN","IBDF5",15,0)
HDR ;the screen header, a ruler
"RTN","IBDF5",16,0)
 S VALMHDR(1)=$$PADRIGHT^IBDFU("",4) ;VALMHDR(2)=VALMHDR(2)_0
"RTN","IBDF5",17,0)
 F I=1:1:16 S VALMHDR(1)=VALMHDR(1)_$J(I,10)
"RTN","IBDF5",18,0)
 Q
"RTN","IBDF5",19,0)
DELETE  ;allows user to select a block for deletion
"RTN","IBDF5",20,0)
 N IBBLK,IBVALMBG,TOP,BOT
"RTN","IBDF5",21,0)
 S VALMBCK="R",IBVALMBG=$G(VALMBG)
"RTN","IBDF5",22,0)
 S VALMBG=IBVALMBG
"RTN","IBDF5",23,0)
 D FULL^VALM1
"RTN","IBDF5",24,0)
 S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,IOSL)
"RTN","IBDF5",25,0)
 Q:'IBBLK
"RTN","IBDF5",26,0)
 Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.1,IBBLK,0)),"^"))
"RTN","IBDF5",27,0)
 D TOPNBOT^IBDFU5(IBBLK,.TOP,.BOT)
"RTN","IBDF5",28,0)
 D DLTBLK^IBDFU3(IBBLK,IBFORM,357.1)
"RTN","IBDF5",29,0)
 S VALMBCK="R"
"RTN","IBDF5",30,0)
 D IDXFORM^IBDF5A(TOP,BOT)
"RTN","IBDF5",31,0)
 Q
"RTN","IBDF5",32,0)
 ;
"RTN","IBDF5",33,0)
MOVE ;allows the user to select a block and move it
"RTN","IBDF5",34,0)
 N IBBLK,NODE0,BLKWIDTH,BLKHT,STARTCOL,STARTROW,TOP1,BOT1,TOP2,BOT2
"RTN","IBDF5",35,0)
 S VALMBCK="R"
"RTN","IBDF5",36,0)
 ;D FULL^VALM1
"RTN","IBDF5",37,0)
 S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,5)
"RTN","IBDF5",38,0)
 I IBBLK D
"RTN","IBDF5",39,0)
 .S NODE0=$G(^IBE(357.1,IBBLK,0))
"RTN","IBDF5",40,0)
 .S BLKWIDTH=+$P(NODE0,"^",6),BLKHT=+$P(NODE0,"^",7),STARTCOL=+$P(NODE0,"^",5),STARTROW=+$P(NODE0,"^",4)
"RTN","IBDF5",41,0)
 .S TOP1=STARTROW,BOT1=(TOP1+BLKHT)-1
"RTN","IBDF5",42,0)
 .I STARTROW!(IBFORM("HT")>BLKHT) K DIR S DIR(0)="NA^1:"_(IBFORM("HT")-BLKHT+1)_":0",DIR("A")="Move the TOP MARGIN of the block to which row?: ",DIR("B")=STARTROW+1 D ^DIR K DIR Q:$D(DIRUT)  S STARTROW=X-1
"RTN","IBDF5",43,0)
 .I STARTCOL!(IBFORM("WIDTH")>BLKWIDTH) K DIR S DIR(0)="NA^1:"_(IBFORM("WIDTH")-BLKWIDTH+1)_":0",DIR("A")="Move the LEFT MARGIN of the block to which column?: ",DIR("B")=STARTCOL+1 D ^DIR K DIR Q:$D(DIRUT)  S STARTCOL=X-1
"RTN","IBDF5",44,0)
 .K DIE,DA S DIE=357.1,DA=IBBLK,DR=".04////^S X=STARTROW;.05////^S X=STARTCOL" D ^DIE K DIE,DA,DR
"RTN","IBDF5",45,0)
 .S VALMBCK="R"
"RTN","IBDF5",46,0)
 .D TOPNBOT^IBDFU5(IBBLK,.TOP2,.BOT2) S TOP1=$S(TOP1<TOP2:TOP1,1:TOP2) S BOT1=$S(BOT1>BOT2:BOT1,1:BOT2)
"RTN","IBDF5",47,0)
 .D IDXFORM^IBDF5A(TOP1,BOT1)
"RTN","IBDF5",48,0)
 .S VALMBG=STARTROW-7 S:VALMBG<1 VALMBG=1
"RTN","IBDF5",49,0)
 Q
"RTN","IBDF5",50,0)
RESIZE ;allows user to select a block & re-size it
"RTN","IBDF5",51,0)
 N IBBLK,BLKWIDTH,BLKHT,STARTCOL,STARTROW,TOP1,TOP2,BOT1,BOT2
"RTN","IBDF5",52,0)
 S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,5)
"RTN","IBDF5",53,0)
 I IBBLK D
"RTN","IBDF5",54,0)
 .D NOWSIZE S TOP1=STARTROW,BOT1=(TOP1+BLKHT)-1
"RTN","IBDF5",55,0)
 .D NEWSIZE
"RTN","IBDF5",56,0)
 .D TOPNBOT^IBDFU5(IBBLK,.TOP2,.BOT2) S TOP1=$S(TOP1<TOP2:TOP1,1:TOP2) S BOT1=$S(BOT1>BOT2:BOT1,1:BOT2)
"RTN","IBDF5",57,0)
 .D IDXFORM^IBDF5A(TOP1,BOT1)
"RTN","IBDF5",58,0)
 S VALMBCK="R"
"RTN","IBDF5",59,0)
 Q
"RTN","IBDF5",60,0)
NOWSIZE ;what size is the block, and where does it start? returns BLKWIDTH,BLKHT,STARTROW,STARTCOL
"RTN","IBDF5",61,0)
 N NODE0
"RTN","IBDF5",62,0)
 S NODE0=$G(^IBE(357.1,IBBLK,0))
"RTN","IBDF5",63,0)
 S BLKWIDTH=+$P(NODE0,"^",6),BLKHT=+$P(NODE0,"^",7),STARTCOL=+$P(NODE0,"^",5),STARTROW=+$P(NODE0,"^",4)
"RTN","IBDF5",64,0)
 Q
"RTN","IBDF5",65,0)
NEWSIZE ;allows user to change the size of a block
"RTN","IBDF5",66,0)
 K DIR S DIR(0)="NA^"_(STARTROW+1)_":"_(IBFORM("HT"))_":0",DIR("A")="Move the BOTTOM MARGIN of the block to which row?: ",DIR("B")=(STARTROW+BLKHT) D ^DIR K DIR Q:$D(DIRUT)  S BLKHT=(X-STARTROW)
"RTN","IBDF5",67,0)
 K DIR S DIR(0)="NA^"_(STARTCOL+1)_":"_IBFORM("WIDTH")_":0",DIR("A")="Move the RIGHT MARGIN of the block to which column?: ",DIR("B")=(STARTCOL+BLKWIDTH) D ^DIR K DIR Q:$D(DIRUT)  S BLKWIDTH=(X-STARTCOL)
"RTN","IBDF5",68,0)
 K DIE,DA S DIE=357.1,DA=IBBLK,DR=".06////^S X=BLKWIDTH;.07////^S X=BLKHT" D ^DIE K DIE,DA,DR
"RTN","IBDF5",69,0)
 D UNCMPBLK^IBDF19(IBBLK)
"RTN","IBDF5",70,0)
 Q
"RTN","IBDF5",71,0)
SHIFT ;allows the user to shift a group of blocks within a rectangular region on the form
"RTN","IBDF5",72,0)
 D SHIFT^IBDF10("B")
"RTN","IBDF5",73,0)
 D IDXFORM^IBDF5A()
"RTN","IBDF5",74,0)
 S VALMBCK="R"
"RTN","IBDF5",75,0)
 Q
"RTN","IBDF5A")
0^121^B8497887
"RTN","IBDF5A",1,0)
IBDF5A ;ALB/CJM - ENCOUNTER FORM ;NOV 16,1992
"RTN","IBDF5A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF5A",3,0)
IDXFORM(IBTOPLN,IBBOTLN) ;creates an array for the list processor
"RTN","IBDF5A",4,0)
 ;containing the image of the form - or just rebuilds a portion of the
"RTN","IBDF5A",5,0)
 ;array - if IBTOPLN,IBBOTLN defined they specify a range within which to
"RTN","IBDF5A",6,0)
 ;update the array - otherwise, create it from scratch
"RTN","IBDF5A",7,0)
 ;IBFORM should be passed by reference
"RTN","IBDF5A",8,0)
 ;
"RTN","IBDF5A",9,0)
 N IBBLK,BLKTOP
"RTN","IBDF5A",10,0)
 W !,"... BUILDING THE FORM ..."
"RTN","IBDF5A",11,0)
 S VALMSG="[Editing "_IBFORM("NAME")_"]  ?? for more actions"
"RTN","IBDF5A",12,0)
 I ('$D(IBTOPLN))!('$D(IBBOTLN)) D
"RTN","IBDF5A",13,0)
 .K @VALMAR D KILL^VALM10()
"RTN","IBDF5A",14,0)
 .S VALMCNT=IBFORM("HT")+1
"RTN","IBDF5A",15,0)
 .W "."
"RTN","IBDF5A",16,0)
 .D BLNKFORM(0,IBFORM("HT")-1,IBFORM("WIDTH"))
"RTN","IBDF5A",17,0)
 .S I="",$P(I,"~",IBFORM("WIDTH")+1)="~"
"RTN","IBDF5A",18,0)
 .S @VALMAR@(IBFORM("HT")+1,0)="    "_I
"RTN","IBDF5A",19,0)
 .W "."
"RTN","IBDF5A",20,0)
 E  D
"RTN","IBDF5A",21,0)
 .F LN=IBTOPLN+1:1:IBBOTLN+1 D KILL^VALM10(LN)
"RTN","IBDF5A",22,0)
 .D BLNKFORM(IBTOPLN,IBBOTLN,IBFORM("WIDTH")) W "."
"RTN","IBDF5A",23,0)
 .I IBTOPLN'>IBFORM("HT"),IBBOTLN>(IBFORM("HT")-1) S I="",$P(I,"~",IBFORM("WIDTH")+1)="~",@VALMAR@(IBFORM("HT")+1,0)="    "_I
"RTN","IBDF5A",24,0)
 S IBBLK="" F  S IBBLK=$O(^IBE(357.1,"C",IBFORM,IBBLK)) Q:'IBBLK  D
"RTN","IBDF5A",25,0)
 .I $D(IBTOPLN),$D(IBBOTLN) Q:'$$BETWEEN(IBBLK,IBTOPLN,IBBOTLN,.BLKTOP)
"RTN","IBDF5A",26,0)
 .I '($D(IBTOPLN)&$D(IBBOTLN)) S BLKTOP=$P($G(^IBE(357.1,IBBLK,0)),"^",4) Q:BLKTOP=""
"RTN","IBDF5A",27,0)
 .D DRWBLOCK^IBDF2A1(.IBBLK) W "."
"RTN","IBDF5A",28,0)
 .D PGBNDRY($G(IBBLK("Y")),$G(IBBLK("H")),IBFORM("PAGE_HT"),$G(IBBLK("NAME")))
"RTN","IBDF5A",29,0)
 ;
"RTN","IBDF5A",30,0)
 ;************************************************************
"RTN","IBDF5A",31,0)
 ;this is needed for Paper Keyboards anchors, but may change
"RTN","IBDF5A",32,0)
 D ANCHORS
"RTN","IBDF5A",33,0)
 ;************************************************************
"RTN","IBDF5A",34,0)
 Q
"RTN","IBDF5A",35,0)
BETWEEN(BLOCK,TOP1,BOT1,BLKTOP) ;determines if the block=BLOCK falls between TOP1 and BOT!, also returns BLKTOP
"RTN","IBDF5A",36,0)
 N TOP2,BOT2 S (TOP2,BOT2)=""
"RTN","IBDF5A",37,0)
 D TOPNBOT^IBDFU5(BLOCK,.TOP2,.BOT2) S BLKTOP=TOP2
"RTN","IBDF5A",38,0)
 I ((TOP2>BOT1)&(BOT2>BOT1))!((TOP2<TOP1)&(BOT2<TOP1)) Q 0
"RTN","IBDF5A",39,0)
 Q 1
"RTN","IBDF5A",40,0)
BLNKFORM(TOP,BOT,W) ;
"RTN","IBDF5A",41,0)
 ;creates an array of lines the length of the form with nothing but
"RTN","IBDF5A",42,0)
 ;line numbers on the left
"RTN","IBDF5A",43,0)
 N I
"RTN","IBDF5A",44,0)
 F I=TOP+1:1:BOT+1 S @VALMAR@(I,0)=$S(((I>1)&(I#$S($G(IBFORM("PAGE_HT")):IBFORM("PAGE_HT"),1:1000)=1)):"NP >",1:$J((I)#1000,3,0)_" ")_$J("",W)_":" D CNTRL^VALM10(I,4,1,IORVON,IORVOFF)
"RTN","IBDF5A",45,0)
 Q
"RTN","IBDF5A",46,0)
 ;
"RTN","IBDF5A",47,0)
ANCHORS ;blanks out the areas near the anchors
"RTN","IBDF5A",48,0)
 N PAGE
"RTN","IBDF5A",49,0)
 I IBFORM("SCAN") F PAGE=1:1:IBFORM("PAGES") D
"RTN","IBDF5A",50,0)
 .D WHITEOUT(((PAGE-1)*IBFORM("PAGE_HT")+1),5,5)
"RTN","IBDF5A",51,0)
 .D WHITEOUT(((PAGE-1)*IBFORM("PAGE_HT")+1),67,9)
"RTN","IBDF5A",52,0)
 .D WHITEOUT(((PAGE-1)*IBFORM("PAGE_HT")+1),131,6)
"RTN","IBDF5A",53,0)
 .D WHITEOUT((((PAGE)*IBFORM("PAGE_HT"))),5,5)
"RTN","IBDF5A",54,0)
 .D WHITEOUT((((PAGE)*IBFORM("PAGE_HT"))),67,9)
"RTN","IBDF5A",55,0)
 .D WHITEOUT((((PAGE)*IBFORM("PAGE_HT"))),131,6)
"RTN","IBDF5A",56,0)
 Q
"RTN","IBDF5A",57,0)
 ;
"RTN","IBDF5A",58,0)
WHITEOUT(IBY,IBX,LEN) ;erases at (IBY,IBX) for LEN characters
"RTN","IBDF5A",59,0)
 N CURLINE
"RTN","IBDF5A",60,0)
 S CURLINE=$G(@VALMAR@(IBY,0))
"RTN","IBDF5A",61,0)
 S CURLINE=$$SETSTR^VALM1(" ",CURLINE,IBX,LEN)
"RTN","IBDF5A",62,0)
 D SET^VALM10(IBY,CURLINE)
"RTN","IBDF5A",63,0)
 Q
"RTN","IBDF5A",64,0)
 ;
"RTN","IBDF5A",65,0)
PGBNDRY(ROW,HT,PGHT,NAME) ;checks the if the block=NAME starting at ROW and of hight HT overlaps a page boundry - if so a warning is displayed
"RTN","IBDF5A",66,0)
 I (ROW\PGHT)<((ROW+HT-1)\PGHT) W !,"WARNING: The block = ",NAME," overlaps page boundries!" D PAUSE^IBDFU5
"RTN","IBDF5A",67,0)
 Q
"RTN","IBDF5B")
0^122^B17974851
"RTN","IBDF5B",1,0)
IBDF5B ;ALB/CJM - ENCOUNTER FORM (edit a form - CONTINUED);JUL 27,1993
"RTN","IBDF5B",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF5B",3,0)
EDITBLK ;allows the user to edit everything about the block
"RTN","IBDF5B",4,0)
 ;allows user to discard or save changes to the block
"RTN","IBDF5B",5,0)
 ;
"RTN","IBDF5B",6,0)
 ;If IBBLK and IBBLK2 are used to point to two copies, one copy for editing and the other in case 'undo' is needed
"RTN","IBDF5B",7,0)
 ; 
"RTN","IBDF5B",8,0)
 N IBBLK,IBVALMBG,TOP1,TOP2,BOT1,BOT2,IBBLK2,IBTKODR,IBJUNK,IFSAVE,WDATA
"RTN","IBDF5B",9,0)
 ;N IBMEMARY
"RTN","IBDF5B",10,0)
 ;
"RTN","IBDF5B",11,0)
 S IBVALMBG=VALMBG
"RTN","IBDF5B",12,0)
 D FULL^VALM1
"RTN","IBDF5B",13,0)
 S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,IOSL,"HEADER") ;select the block
"RTN","IBDF5B",14,0)
 I IBBLK D
"RTN","IBDF5B",15,0)
 .D KILL^IBDFUA
"RTN","IBDF5B",16,0)
 .S (IBBLK2,IBTKODR,IBJUNK)=""
"RTN","IBDF5B",17,0)
 .S WDATA=IBPRINT("WITH_DATA")
"RTN","IBDF5B",18,0)
 .D COPYBLK(IBBLK,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" Q  ;sets IBBLK to the work copy, IBBLK2 to the copy actually on the form
"RTN","IBDF5B",19,0)
 .D TOPNBOT^IBDFU5(IBBLK,.TOP1,.BOT1)
"RTN","IBDF5B",20,0)
 .D EN^VALM("IBDF FORM BLOCK EDIT") ;call list processor
"RTN","IBDF5B",21,0)
 .I IBBLK,IBBLK2 D
"RTN","IBDF5B",22,0)
 ..S IFSAVE=$$ASKSAVE
"RTN","IBDF5B",23,0)
 ..I IFSAVE D SAVECOPY(.IBBLK,.IBBLK2,IBTKODR) S IBBLK=IBBLK2,IBBLK2=""
"RTN","IBDF5B",24,0)
 ..I 'IFSAVE D DLTCOPY(IBBLK) S IBBLK=IBBLK2,IBBLK2=""
"RTN","IBDF5B",25,0)
 ..L -^IBE(357.1,IBBLK):1
"RTN","IBDF5B",26,0)
 .I '$G(IBFASTXT) D
"RTN","IBDF5B",27,0)
 ..S VALMBG=IBVALMBG
"RTN","IBDF5B",28,0)
 ..S IBPRINT("WITH_DATA")=WDATA
"RTN","IBDF5B",29,0)
 ..D TOPNBOT^IBDFU5(IBBLK,.TOP2,.BOT2)
"RTN","IBDF5B",30,0)
 ..S TOP1=$S(TOP1<TOP2:TOP1,1:TOP2),BOT1=$S(BOT1>BOT2:BOT1,1:BOT2)
"RTN","IBDF5B",31,0)
 ..D IDXFORM^IBDF5A(TOP1,BOT1)
"RTN","IBDF5B",32,0)
 S VALMBCK="R"
"RTN","IBDF5B",33,0)
 Q
"RTN","IBDF5B",34,0)
DLTCOPY(WORKCOPY) ;deletes the block=WORKCOPY and unlocks it
"RTN","IBDF5B",35,0)
 D DLTBLK^IBDFU3(WORKCOPY,IBJUNK,357.1)
"RTN","IBDF5B",36,0)
 L -^IBE(357.1,WORKCOPY)
"RTN","IBDF5B",37,0)
 S WORKCOPY=""
"RTN","IBDF5B",38,0)
 Q
"RTN","IBDF5B",39,0)
SAVECOPY(WORKCOPY,FORMCOPY,IBTKODR) ;deletes the block=FORMCOPY,adds WORKCOPY to IBFORM
"RTN","IBDF5B",40,0)
 ;NOTE: upon completion WORKCOPY="",FORMCOPY points to what WORKCOPY initially did
"RTN","IBDF5B",41,0)
 Q:('FORMCOPY)!('WORKCOPY)  ;something wrong!
"RTN","IBDF5B",42,0)
 ;
"RTN","IBDF5B",43,0)
 K DIE,DA,DR S DIE="^IBE(357.1,",DA=WORKCOPY,DR=".02////"_IBFORM
"RTN","IBDF5B",44,0)
 I IBTKODR S DR=DR_";.14////"_IBTKODR
"RTN","IBDF5B",45,0)
 D ^DIE K DIE,DR,DA
"RTN","IBDF5B",46,0)
 ;
"RTN","IBDF5B",47,0)
 D DLTBLK^IBDFU3(FORMCOPY,IBFORM,357.1)
"RTN","IBDF5B",48,0)
 D UNCMPL^IBDF19(IBFORM,0)
"RTN","IBDF5B",49,0)
 L -^IBE(357.1,FORMCOPY)
"RTN","IBDF5B",50,0)
 S FORMCOPY=WORKCOPY,WORKCOPY=""
"RTN","IBDF5B",51,0)
 Q
"RTN","IBDF5B",52,0)
 ;
"RTN","IBDF5B",53,0)
COPYBLK(IBBLK,FORMCOPY,WORKCOPY,IBTKODR,IBJUNK) ;copys the IBBLK to the WORKCOPY, then puts sets FORMCOPY=IBBLK
"RTN","IBDF5B",54,0)
 ;IBJUNK set to the form="WORKCOPY", IBTKODR set to the original value of the field TOOL KIT ORDER
"RTN","IBDF5B",55,0)
 ;
"RTN","IBDF5B",56,0)
 N NODE
"RTN","IBDF5B",57,0)
 S WORKCOPY=IBBLK,FORMCOPY=""
"RTN","IBDF5B",58,0)
 Q:'IBBLK  ;no block to copy!
"RTN","IBDF5B",59,0)
 S NODE=$G(^IBE(357.1,IBBLK,0))
"RTN","IBDF5B",60,0)
 S IBTKODR=$P(NODE,"^",14)
"RTN","IBDF5B",61,0)
 ;find the form=WORKCOPY, used as a work area
"RTN","IBDF5B",62,0)
 S IBJUNK=+$O(^IBE(357,"B","WORKCOPY",""))
"RTN","IBDF5B",63,0)
 ;copy the block
"RTN","IBDF5B",64,0)
 S FORMCOPY=$$COPYBLK^IBDFU2(IBBLK,IBFORM,357.1,357.1)
"RTN","IBDF5B",65,0)
 I 'FORMCOPY W !,"Unable to edit the block!" D PAUSE^IBDFU5 S FORMCOPY=IBBLK Q
"RTN","IBDF5B",66,0)
 ;
"RTN","IBDF5B",67,0)
 ;make sure both copies are locked
"RTN","IBDF5B",68,0)
 ;the working copy on IBJUNK is locked so that the option does cleanup knows which blocks are in current use - others on IBJUNK can be deleted
"RTN","IBDF5B",69,0)
 L +^IBE(357.1,FORMCOPY):1
"RTN","IBDF5B",70,0)
 L +^IBE(357.1,WORKCOPY):1
"RTN","IBDF5B",71,0)
 ;
"RTN","IBDF5B",72,0)
 ;mark the working copy as not being in the tk and not on IBFORM
"RTN","IBDF5B",73,0)
 K DIE,DA,DR S DIE="^IBE(357.1,",DA=WORKCOPY,DR=".02////"_IBJUNK_";.14////0"
"RTN","IBDF5B",74,0)
 D ^DIE K DIE,DR,DA
"RTN","IBDF5B",75,0)
 Q
"RTN","IBDF5B",76,0)
 ;
"RTN","IBDF5B",77,0)
ASKSAVE() ;asks the user if changes to the block should be saved
"RTN","IBDF5B",78,0)
 ;returns 1 for yes, 0 for no
"RTN","IBDF5B",79,0)
 K DIR S DIR(0)="Y",DIR("A")="Save changes to the block",DIR("B")="YES"
"RTN","IBDF5B",80,0)
 D ^DIR K DIR
"RTN","IBDF5B",81,0)
 Q:$D(DIRUT) 0
"RTN","IBDF5B",82,0)
 Q Y
"RTN","IBDF5B",83,0)
DECIDE ;allows user to either save or discard changes to the block being edited
"RTN","IBDF5B",84,0)
 N WHAT
"RTN","IBDF5B",85,0)
 ;
"RTN","IBDF5B",86,0)
 S WHAT=$$DOWHAT
"RTN","IBDF5B",87,0)
 I WHAT="S" D
"RTN","IBDF5B",88,0)
 .D SAVECOPY(.IBBLK,.IBBLK2,IBTKODR),COPYBLK(IBBLK2,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) S VALMBCK="" I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" S VALMBCK="Q"
"RTN","IBDF5B",89,0)
 I WHAT="D" D
"RTN","IBDF5B",90,0)
 .D DLTCOPY(IBBLK) S IBBLK=IBBLK2,IBBLK2="" D COPYBLK(IBBLK,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK)
"RTN","IBDF5B",91,0)
 .I IBBLK S VALMBCK="R" D IDXBLOCK^IBDFU4
"RTN","IBDF5B",92,0)
 .I 'IBBLK S IBBLK=IBBLK2,IBBLK2="",VALMBCK="Q"
"RTN","IBDF5B",93,0)
 Q
"RTN","IBDF5B",94,0)
 ;
"RTN","IBDF5B",95,0)
DOWHAT() ;returns "D" for discard, "S" for save, "" for do nothing
"RTN","IBDF5B",96,0)
 K DIR S DIR(0)="SB^S:Save Changes;D:Discard Changes;",DIR("A")="Save or Discard the recent changes to the block?"
"RTN","IBDF5B",97,0)
 D ^DIR K DIR
"RTN","IBDF5B",98,0)
 Q:$D(DIRUT) ""
"RTN","IBDF5B",99,0)
 Q Y
"RTN","IBDF5B",100,0)
 ;
"RTN","IBDF5B",101,0)
PRINT ;prints the form
"RTN","IBDF5B",102,0)
 ;
"RTN","IBDF5B",103,0)
 N QUIT S QUIT=0
"RTN","IBDF5B",104,0)
 S VALMBCK=""
"RTN","IBDF5B",105,0)
 I $G(IBBLK),'$G(IBTKBLK) D  Q:QUIT
"RTN","IBDF5B",106,0)
 .W !,"Before printing the form any changes you have made must be saved.",!,"Is that okay?"
"RTN","IBDF5B",107,0)
 .K DIR S DIR(0)="Y" D ^DIR  K DIR I 'Y!$D(DIRUT) S QUIT=1 QUIT
"RTN","IBDF5B",108,0)
 .D SAVECOPY(.IBBLK,.IBBLK2,IBTKODR),COPYBLK(IBBLK2,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) S VALMBCK="" I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" S VALMBCK="Q",QUIT=1
"RTN","IBDF5B",109,0)
 D:'QUIT PRINT^IBDF1C(.IBFORM)
"RTN","IBDF5B",110,0)
 Q
"RTN","IBDF5C")
0^123^B8857181
"RTN","IBDF5C",1,0)
IBDF5C ;ALB/CJM - ENCOUNTER FORM (creating a new block) ;MARCH 22,1993
"RTN","IBDF5C",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF5C",3,0)
NEWBLOCK ;adds a new block, expects IBFORM to be defined
"RTN","IBDF5C",4,0)
 N IBBLK,TOP,BOT
"RTN","IBDF5C",5,0)
 S VALMBCK="R"
"RTN","IBDF5C",6,0)
 S IBBLK=$$CREATE()
"RTN","IBDF5C",7,0)
 I IBBLK D
"RTN","IBDF5C",8,0)
 .D TOPNBOT^IBDFU5(IBBLK,.TOP,.BOT)
"RTN","IBDF5C",9,0)
 .D IDXFORM^IBDF5A(TOP,BOT)
"RTN","IBDF5C",10,0)
 Q
"RTN","IBDF5C",11,0)
CREATE() ;creates the new block and allows the user to edit it
"RTN","IBDF5C",12,0)
 ;INPUTS: expects IBFORM to be defined
"RTN","IBDF5C",13,0)
 ;        expects IBTKBLK to be defined - IBTKBLK=1 means add to tk
"RTN","IBDF5C",14,0)
 ;returns IBBLK
"RTN","IBDF5C",15,0)
 N NAME,IBBLK,NODE,IBDFDONE,IBBG,IBLFT,DLAYGO
"RTN","IBDF5C",16,0)
 S IBBG=1,IBLFT=5
"RTN","IBDF5C",17,0)
 S VALMBCK="R"
"RTN","IBDF5C",18,0)
 I '$G(IBTKBLK) S IBBG=+$G(VALMBG),IBLFT=+$G(VALMLFT)
"RTN","IBDF5C",19,0)
 S NAME=$$NEWNAME Q:NAME=-1 ""
"RTN","IBDF5C",20,0)
 K DIC,DIE,DD,DO,DINUM S DIC="^IBE(357.1,",DIC(0)="FL",X=NAME,DLAYGO=357.1
"RTN","IBDF5C",21,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDF5C",22,0)
 S IBBLK=+Y
"RTN","IBDF5C",23,0)
 I 'IBBLK D
"RTN","IBDF5C",24,0)
 .W !,"Unable to create a new block!" K DIC,DIE D PAUSE^IBDFU5
"RTN","IBDF5C",25,0)
 I IBBLK D
"RTN","IBDF5C",26,0)
 .;delete everything in the block - it should be empty
"RTN","IBDF5C",27,0)
 .D DLTCNTNT^IBDFU3(IBBLK,357.1)
"RTN","IBDF5C",28,0)
 .;set the current position of the block to the upper left-hand corner of the screen as the default
"RTN","IBDF5C",29,0)
 .S $P(^IBE(357.1,IBBLK,0),"^",4,5)=(IBBG-1)_"^"_(IBLFT-5)
"RTN","IBDF5C",30,0)
 .;now let the user edit the new block - header,name,outline,etc.
"RTN","IBDF5C",31,0)
 .K DIE,DA S DIE=357.1,DA=IBBLK,DR="[IBDF NEW EMPTY BLOCK]",DIE("NO^")="BACKOUTOK" D ^DIE K DIC,DIE,DR,DA
"RTN","IBDF5C",32,0)
 .I 'IBDFDONE S DIK="^IBE(357.1,",DA=IBBLK K DA(1) D ^DIK K DIK,DA Q
"RTN","IBDF5C",33,0)
 Q IBBLK
"RTN","IBDF5C",34,0)
NEWNAME() ;
"RTN","IBDF5C",35,0)
 K DIR S DIR(0)="357.1,.01A",DIR("A")="New Block Name: ",DIR("B")=""
"RTN","IBDF5C",36,0)
 D ^DIR K DIR I $D(DIRUT) Q -1
"RTN","IBDF5C",37,0)
 Q Y
"RTN","IBDF5C",38,0)
REDRAW ;redraws the ;entire form
"RTN","IBDF5C",39,0)
 S VALMBCK="R"
"RTN","IBDF5C",40,0)
 D UNCMPALL^IBDF19(IBFORM)
"RTN","IBDF5C",41,0)
 D IDXFORM^IBDF5A()
"RTN","IBDF5C",42,0)
 Q
"RTN","IBDF5C",43,0)
COPYBLK ;copies a block from another form,whether in the toolkit or not, expects IBFORM=current work form  to be defined
"RTN","IBDF5C",44,0)
 N IBBLK,TOP,BOT,NEWBLOCK
"RTN","IBDF5C",45,0)
 S IBBLK=$$SELECT2^IBDF13("")
"RTN","IBDF5C",46,0)
 I IBBLK S NEWBLOCK=$$COPYBLK^IBDFU2(IBBLK,IBFORM,357.1,357.1,$$CURY^IBDFU4,$$CURX^IBDFU4,0,"",1) I NEWBLOCK D
"RTN","IBDF5C",47,0)
 .D RE^VALM4
"RTN","IBDF5C",48,0)
 .D POS^IBDFU4(NEWBLOCK)
"RTN","IBDF5C",49,0)
 .D TOPNBOT^IBDFU5(NEWBLOCK,.TOP,.BOT)
"RTN","IBDF5C",50,0)
 .D IDXFORM^IBDF5A(TOP,BOT)
"RTN","IBDF5C",51,0)
 S VALMBCK="R"
"RTN","IBDF5C",52,0)
 Q
"RTN","IBDF5C",53,0)
 ;
"RTN","IBDF5C",54,0)
VIEW ;toggles between viewing form with data and without data
"RTN","IBDF5C",55,0)
 N STARTVAL
"RTN","IBDF5C",56,0)
 S STARTVAL=IBPRINT("WITH_DATA")
"RTN","IBDF5C",57,0)
 I 'IBPRINT("WITH_DATA") D
"RTN","IBDF5C",58,0)
 .D FULL^VALM1
"RTN","IBDF5C",59,0)
 .S DFN=$$PATIENT
"RTN","IBDF5C",60,0)
 .I DFN S IBPRINT("WITH_DATA")=1 I '$G(IBAPPT) D NOW^%DTC S IBAPPT=% K %,%H,%I,X
"RTN","IBDF5C",61,0)
 E  I IBPRINT("WITH_DATA") S IBPRINT("WITH_DATA")=0
"RTN","IBDF5C",62,0)
 ;
"RTN","IBDF5C",63,0)
 ;this action could be called at the form level or the block level - action depends on which
"RTN","IBDF5C",64,0)
 I '$G(IBBLK) D
"RTN","IBDF5C",65,0)
 .I STARTVAL'=IBPRINT("WITH_DATA") D JUSTDATA^IBDF2A(IBPRINT("WITH_DATA")) K ^TMP("IB",$J,"INTERFACES")
"RTN","IBDF5C",66,0)
 I $G(IBBLK) D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF5C",67,0)
 S VALMBCK="R"
"RTN","IBDF5C",68,0)
 Q
"RTN","IBDF5C",69,0)
 ;
"RTN","IBDF5C",70,0)
PATIENT() ;asks for a patient, returns the DFN
"RTN","IBDF5C",71,0)
 K DIR S DIR(0)="P^2:EM",DIR("A")="Test with what Patient"
"RTN","IBDF5C",72,0)
 D ^DIR K DIR I $D(DIRUT)!(+Y<1) Q 0
"RTN","IBDF5C",73,0)
 Q +Y
"RTN","IBDF5D")
0^124^B6700922
"RTN","IBDF5D",1,0)
IBDF5D ;ALB/CJM - ENCOUNTER FORM - (copy page) ;DEC 12, 1994
"RTN","IBDF5D",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF5D",3,0)
 ;
"RTN","IBDF5D",4,0)
COPYPAGE ;
"RTN","IBDF5D",5,0)
 N FROMFORM,PAGE,TOLINE,NODE,ROW,COL,BEGIN,END,QUIT,BLOCK
"RTN","IBDF5D",6,0)
 D FULL^VALM1
"RTN","IBDF5D",7,0)
 S VALMBCK="R"
"RTN","IBDF5D",8,0)
 S FROMFORM=$$SLCTFORM^IBDFU4("") Q:'FROMFORM
"RTN","IBDF5D",9,0)
 Q:'$$FORMSIZE^IBDFU1C(.FROMFORM)
"RTN","IBDF5D",10,0)
 I FROMFORM("PAGES")=1 D
"RTN","IBDF5D",11,0)
 .S BEGIN=0,END=FROMFORM("PAGE_HT")-1
"RTN","IBDF5D",12,0)
 E  D  Q:QUIT
"RTN","IBDF5D",13,0)
 .S QUIT=0
"RTN","IBDF5D",14,0)
 .K DIR S DIR(0)="N^1:"_FROMFORM("PAGES")_":0",DIR("A")="Copy Page Number",DIR("B")=1,DIR("?")="Which page do you want to copy?" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBDF5D",15,0)
 .S PAGE=Y I 'PAGE S QUIT=1 Q
"RTN","IBDF5D",16,0)
 .S BEGIN=((PAGE-1)*FROMFORM("PAGE_HT"))-1,END=(BEGIN+FROMFORM("PAGE_HT"))-1
"RTN","IBDF5D",17,0)
 K DIR S DIR(0)="N^1:"_IBFORM("HT")_":0",DIR("A")="Copy To Line Number",DIR("B")=($$CURY^IBDFU4)+1,DIR("?")="Begining at what line should the page be pasted?" D ^DIR K DIR I 'X!$D(DIRUT) S QUIT=1 Q
"RTN","IBDF5D",18,0)
 I 'Y S QUIT=1 Q
"RTN","IBDF5D",19,0)
 S TOLINE=Y-1
"RTN","IBDF5D",20,0)
 S BLOCK=0
"RTN","IBDF5D",21,0)
 F  S BLOCK=$O(^IBE(357.1,"C",FROMFORM,BLOCK)) Q:'BLOCK  S NODE=$G(^IBE(357.1,BLOCK,0)) Q:NODE=""  S ROW=$P(NODE,"^",4),COL=$P(NODE,"^",5) D
"RTN","IBDF5D",22,0)
 .N NEWBLOCK
"RTN","IBDF5D",23,0)
 .I '(ROW>END),'(ROW<BEGIN)  S NEWBLOCK=$$COPYBLK^IBDFU2(BLOCK,IBFORM,357.1,357.1,(ROW#FROMFORM("PAGE_HT"))+TOLINE,COL)
"RTN","IBDF5D",24,0)
 D IDXFORM^IBDF5A()
"RTN","IBDF5D",25,0)
 Q
"RTN","IBDF5D",26,0)
 ;
"RTN","IBDF5D",27,0)
COPY ;ask user whether to copy a block or a page
"RTN","IBDF5D",28,0)
 S VALMBCK="R"
"RTN","IBDF5D",29,0)
 K DIR S DIR(0)="SB^P:PAGE COPY;B:BLOCK COPY;",DIR("A")="Copy an entire page or a single block?",DIR("?")="You can copy either a single block or an entire page."
"RTN","IBDF5D",30,0)
 D ^DIR K DIR I $D(DIRUT) Q
"RTN","IBDF5D",31,0)
 D:Y="P" COPYPAGE
"RTN","IBDF5D",32,0)
 D:Y="B" COPYBLK^IBDF5C
"RTN","IBDF5D",33,0)
 K DIR
"RTN","IBDF5D",34,0)
 Q
"RTN","IBDF6")
0^125^B17874713
"RTN","IBDF6",1,0)
IBDF6 ;ALB/CJM - ENCOUNTER FORM - ENTRY FOR BUILDING A FORM ;NOV 16,1992
"RTN","IBDF6",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF6",3,0)
 ;
"RTN","IBDF6",4,0)
FORMLIST ;
"RTN","IBDF6",5,0)
 N IBTKFORM,IBDEVICE,IBAPI,IOVL,IOHL,IOBRC,IOBLC,IOTRC,IOTLC,IBFORM
"RTN","IBDF6",6,0)
 ;IBDEVICE stores parameters related to device for printing forms
"RTN","IBDF6",7,0)
 D DEVICE^IBDFUA(1,.IBDEVICE)
"RTN","IBDF6",8,0)
 S IBTKFORM=0 ;IBTKFORM=1 only for toolkit forms
"RTN","IBDF6",9,0)
 S IBAPI("INDEX")="D IDXFORMS^IBDF6"
"RTN","IBDF6",10,0)
 S IBAPI("SELECT")="D SELECT^IBDF6"
"RTN","IBDF6",11,0)
 N IBFASTXT ;set to 1 for fast exit from system
"RTN","IBDF6",12,0)
 S IBFASTXT=0
"RTN","IBDF6",13,0)
 K XQORS,VALMEVL,DIR
"RTN","IBDF6",14,0)
 S IBCLINIC=""
"RTN","IBDF6",15,0)
 D CLINIC
"RTN","IBDF6",16,0)
 I IBCLINIC D EN^VALM("IBDF CLINIC FORM LIST")
"RTN","IBDF6",17,0)
 Q
"RTN","IBDF6",18,0)
ONENTRY ;
"RTN","IBDF6",19,0)
 D IDXFORMS
"RTN","IBDF6",20,0)
 Q
"RTN","IBDF6",21,0)
ONEXIT ;
"RTN","IBDF6",22,0)
 D KILL^%ZISS
"RTN","IBDF6",23,0)
 K ^TMP("IB",$J),^TMP("IBDF",$J),IBCLINIC,VALMY,IBQUIT,VALMBCK,X,Y,I,DA,D0
"RTN","IBDF6",24,0)
 Q
"RTN","IBDF6",25,0)
EDITFORM ;allows user to select a form, then displays it for edit
"RTN","IBDF6",26,0)
 N IBFORM,ARY,DFN,IBAPPT,RTNLIST,IBPRINT
"RTN","IBDF6",27,0)
 S ARY="^TMP(""IBDF"",$J,""TEMPORARY CLINIC LIST"")"
"RTN","IBDF6",28,0)
 ;
"RTN","IBDF6",29,0)
 K @ARY
"RTN","IBDF6",30,0)
 S VALMBCK=""
"RTN","IBDF6",31,0)
 I $G(IBAPI("SELECT"))'="" X IBAPI("SELECT")
"RTN","IBDF6",32,0)
 I IBFORM D CLINICS^IBDFU4(IBFORM,ARY) I $G(@ARY@(0))>1 W !,"The form is in use by other clinics!" D LIST^IBDFU4(ARY,5) S DIR(0)="Y",DIR("A")="Still want to edit",DIR("B")="N" D ^DIR K DIR I $D(DIRUT)!(Y=0) S IBFORM=""
"RTN","IBDF6",33,0)
 K ARY
"RTN","IBDF6",34,0)
 I IBFORM,'$$LOCKFRM2^IBDFU7(IBFORM) D LOCKMSG2^IBDFU7(IBFORM) S IBFORM=""
"RTN","IBDF6",35,0)
 I IBFORM D PRNTPRMS^IBDFU1C(.IBPRINT,0,1,0,1),UNCMPL^IBDF19(IBFORM,0),EN^VALM("IBDF DISPLAY FORM FOR EDIT"),UNCMPL^IBDF19(IBFORM,0),FREEFRM2^IBDFU7(IBFORM)
"RTN","IBDF6",36,0)
 S VALMBCK="R"
"RTN","IBDF6",37,0)
 Q
"RTN","IBDF6",38,0)
 ;
"RTN","IBDF6",39,0)
CLINIC K DIR,DIC,DIE,DR S DIR(0)="409.95,.01",DIR("A")="EDIT FORMS FOR WHICH CLINIC? " D ^DIR K DIR I $D(DIRUT)!(+Y<0) Q
"RTN","IBDF6",40,0)
 S IBCLINIC=+Y
"RTN","IBDF6",41,0)
 Q
"RTN","IBDF6",42,0)
 ;
"RTN","IBDF6",43,0)
IDXFORMS ;build an array of forms used by IBCLINIC for the list processor
"RTN","IBDF6",44,0)
 N FORM,SETUP,NODE,SUB,SUBREC,USE,ID
"RTN","IBDF6",45,0)
 K @VALMAR
"RTN","IBDF6",46,0)
 S SETUP="",VALMCNT=0,ID=0
"RTN","IBDF6",47,0)
 S SETUP=$O(^SD(409.95,"B",IBCLINIC,"")) Q:'SETUP
"RTN","IBDF6",48,0)
 S NODE=$G(^SD(409.95,SETUP,0)) Q:NODE=""
"RTN","IBDF6",49,0)
 F SUB=2,6,8,9,3,4,5,7 S FORM=$P(NODE,"^",SUB) I FORM D
"RTN","IBDF6",50,0)
 .I $D(^IBE(357,FORM,0)) D
"RTN","IBDF6",51,0)
 ..S USE=""
"RTN","IBDF6",52,0)
 ..D ENTRY
"RTN","IBDF6",53,0)
 Q
"RTN","IBDF6",54,0)
ENTRY ;adds an entry to the array
"RTN","IBDF6",55,0)
 S USE=USE_$S(SUB=2:"Basic Encounter Form",SUB=3:"Supplemental Form - Established Patients",SUB=4:"Supplemental Form - New Patients",SUB=5:"Form To Print With No Patient Data",1:"")
"RTN","IBDF6",56,0)
 S:USE="" USE=USE_$S(SUB=7:"For Future Use",1:"Supplemental Form - All Patients")
"RTN","IBDF6",57,0)
 S ID=ID+1,VALMCNT=VALMCNT+1,@VALMAR@(VALMCNT,0)=$$DISPLAY1(FORM,USE,ID),@VALMAR@("IDX",VALMCNT,ID)=FORM D FLDCTRL^VALM10(VALMCNT) ;set video for ID column
"RTN","IBDF6",58,0)
 S VALMCNT=VALMCNT+1,@VALMAR@(VALMCNT,0)=$$DISPLAY2(FORM),@VALMAR@("IDX",VALMCNT,ID)=FORM_"^"_$S(SUB=2:.02,SUB=3:.03,SUB=4:.04,SUB=5:.05,SUB=6:.06,SUB=7:.07,SUB=8:.08,SUB=9:.09,1:0)
"RTN","IBDF6",59,0)
 Q
"RTN","IBDF6",60,0)
HDR ;
"RTN","IBDF6",61,0)
 S VALMHDR(1)="FORMS CURRENTLY USED BY '"_$$CLNCNAME_"' CLINIC"
"RTN","IBDF6",62,0)
 Q
"RTN","IBDF6",63,0)
CLNCNAME() ;
"RTN","IBDF6",64,0)
 Q $P($G(^SC(IBCLINIC,0)),"^",1)
"RTN","IBDF6",65,0)
DISPLAY1(FORM,USE,ID) ;
"RTN","IBDF6",66,0)
 N NODE,NAME,RET
"RTN","IBDF6",67,0)
 S RET=$J(ID,3)_$$SP(2)
"RTN","IBDF6",68,0)
 S NODE=$G(^IBE(357,FORM,0))
"RTN","IBDF6",69,0)
 S NAME=$P(NODE,"^",1)
"RTN","IBDF6",70,0)
 S RET=RET_$$PR(NAME,30)_$$SP(2)_USE
"RTN","IBDF6",71,0)
 Q RET
"RTN","IBDF6",72,0)
DISPLAY2(FORM) ;
"RTN","IBDF6",73,0)
 N NODE,DESCR,RET
"RTN","IBDF6",74,0)
 S RET=$$SP(37)
"RTN","IBDF6",75,0)
 S NODE=$G(^IBE(357,FORM,0))
"RTN","IBDF6",76,0)
 S DESCR=$P(NODE,"^",3)
"RTN","IBDF6",77,0)
 S RET=RET_$E(DESCR,1,80)
"RTN","IBDF6",78,0)
 Q RET
"RTN","IBDF6",79,0)
PR(STR,LEN) ; pad right
"RTN","IBDF6",80,0)
 Q:'$G(LEN) ""
"RTN","IBDF6",81,0)
 N B S STR=$E($G(STR),1,LEN)
"RTN","IBDF6",82,0)
 S:LEN'=$L(STR) $P(B," ",LEN-$L($G(STR)))=" "
"RTN","IBDF6",83,0)
 Q STR_$G(B)
"RTN","IBDF6",84,0)
SP(LEN) ;
"RTN","IBDF6",85,0)
 Q:'$G(LEN)
"RTN","IBDF6",86,0)
 N S S $P(S," ",LEN)=" "
"RTN","IBDF6",87,0)
 Q S
"RTN","IBDF6",88,0)
CHNGCLNC ;allows the user to change the clinic
"RTN","IBDF6",89,0)
 N SAVECLNC S SAVECLNC=IBCLINIC
"RTN","IBDF6",90,0)
 D FULL^VALM1
"RTN","IBDF6",91,0)
 S VALMBCK="R"
"RTN","IBDF6",92,0)
 D CLINIC I 'IBCLINIC S IBCLINIC=SAVECLNC Q
"RTN","IBDF6",93,0)
 D HDR
"RTN","IBDF6",94,0)
 X IBAPI("INDEX")
"RTN","IBDF6",95,0)
 Q
"RTN","IBDF6",96,0)
 ;
"RTN","IBDF6",97,0)
SELECT  ;
"RTN","IBDF6",98,0)
 N SEL
"RTN","IBDF6",99,0)
 D EN^VALM2(XQORNOD(0),"S")
"RTN","IBDF6",100,0)
 S SEL=$O(VALMY(""))
"RTN","IBDF6",101,0)
 S IBFORM=$S('SEL:"",1:+$G(@VALMAR@("IDX",2*SEL,SEL)))
"RTN","IBDF6",102,0)
 Q
"RTN","IBDF6A")
0^126^B15897163
"RTN","IBDF6A",1,0)
IBDF6A ;ALB/CJM - ENCOUNTER FORM - (new forms, deleting forms, adding to setup) ;JAN 16,1993
"RTN","IBDF6A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF6A",3,0)
 ;
"RTN","IBDF6A",4,0)
DELFORM ;
"RTN","IBDF6A",5,0)
 N CLINIC,FORM,BLOCK,NOCANDO,SETUP,ARY
"RTN","IBDF6A",6,0)
 S NOCANDO=0,ARY="^TMP(""IBDF"",$J,""TEMPORARY CLINIC LIST"")"
"RTN","IBDF6A",7,0)
 K @ARY
"RTN","IBDF6A",8,0)
 D FULL^VALM1
"RTN","IBDF6A",9,0)
 S VALMBCK="R"
"RTN","IBDF6A",10,0)
 K DIC S DIC("S")="I '$P(^(0),U,7)",DIC=357,DIC(0)="AEQ",DIC("A")="Select FORM to delete: "
"RTN","IBDF6A",11,0)
 D ^DIC K DIC S FORM=+Y Q:(FORM<0)
"RTN","IBDF6A",12,0)
 D CLINICS^IBDFU4(FORM,ARY)
"RTN","IBDF6A",13,0)
 I $G(@ARY@(0)) D
"RTN","IBDF6A",14,0)
 .W !,"Cannot be deleted, the form is in use!"
"RTN","IBDF6A",15,0)
 .D LIST^IBDFU4(ARY,IOSL)
"RTN","IBDF6A",16,0)
 I '$G(@ARY@(0)) D DELETE^IBDFU2C(FORM,357,1)
"RTN","IBDF6A",17,0)
 K @ARY
"RTN","IBDF6A",18,0)
 Q
"RTN","IBDF6A",19,0)
 ;
"RTN","IBDF6A",20,0)
NEWFORM ;
"RTN","IBDF6A",21,0)
 N NAME,FORM,FLD,BLOCK,IBDELETE,IBTXTSZ,IBSCAN,IBDVR
"RTN","IBDF6A",22,0)
 S (IBTXTSZ,IBSCAN)=0
"RTN","IBDF6A",23,0)
 S VALMBCK="R"
"RTN","IBDF6A",24,0)
 S NAME=$$NEWNAME^IBDFU2C Q:NAME=""
"RTN","IBDF6A",25,0)
 D FULL^VALM1
"RTN","IBDF6A",26,0)
 K DIC,DD,DO,DINUM S DIC="^IBE(357,",DIC(0)="",X=NAME
"RTN","IBDF6A",27,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDF6A",28,0)
 S FORM=+Y
"RTN","IBDF6A",29,0)
 I FORM<0 D
"RTN","IBDF6A",30,0)
 .W !,"Unable to create a new form!" D PAUSE^IBDFU5
"RTN","IBDF6A",31,0)
 E  D
"RTN","IBDF6A",32,0)
 .K DIE,DR,DA S DIE="^IBE(357,",DR="[IBDF EDIT NEW FORM]",DA=FORM,DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF6A",33,0)
 .I IBDELETE S DIK="^IBE(357,",DA=FORM D ^DIK K DIK,DA Q
"RTN","IBDF6A",34,0)
 .D:'IBTKFORM ADDSETUP(FORM,IBCLINIC,1)
"RTN","IBDF6A",35,0)
 .;the new form should be empty - make sure
"RTN","IBDF6A",36,0)
 .S BLOCK="" F  S BLOCK=$O(^IBE(357.1,"C",FORM,BLOCK)) Q:'BLOCK  D
"RTN","IBDF6A",37,0)
 ..I $P($G(^IBE(357.1,BLOCK,0)),"^",2)'=FORM D
"RTN","IBDF6A",38,0)
 ...K DA S DIK="^IBE(357.1,",DA=BLOCK D IX^DIK K DIK,DA
"RTN","IBDF6A",39,0)
 ..E  D DLTBLK^IBDFU3(BLOCK,FORM,357.1)
"RTN","IBDF6A",40,0)
 .X IBAPI("INDEX")
"RTN","IBDF6A",41,0)
 Q
"RTN","IBDF6A",42,0)
COPYFORM ;
"RTN","IBDF6A",43,0)
 N NAME,OLDFORM,NEWFORM,IBDELETE,IBOLD,IBSCAN
"RTN","IBDF6A",44,0)
 D FULL^VALM1
"RTN","IBDF6A",45,0)
 S VALMBCK="R"
"RTN","IBDF6A",46,0)
 S OLDFORM=$$SLCTFORM^IBDFU4("") Q:'OLDFORM
"RTN","IBDF6A",47,0)
 S NAME=$$NEWNAME^IBDFU2C Q:NAME=""
"RTN","IBDF6A",48,0)
 S NEWFORM=$$COPYFORM^IBDFU2C(OLDFORM,357,357,NAME,0)
"RTN","IBDF6A",49,0)
 Q:'NEWFORM
"RTN","IBDF6A",50,0)
 ;
"RTN","IBDF6A",51,0)
 ;edit the form
"RTN","IBDF6A",52,0)
 S IBOLD=$S($P($G(^IBE(357,NEWFORM,0)),"^",16):0,1:1)
"RTN","IBDF6A",53,0)
 K DIE,DR,DA S DIE="^IBE(357,",DR="[IBDF EDIT OLD OR COPIED FORM]",DA=NEWFORM,DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF6A",54,0)
 ;delete the new form if the user didn't complete the edit
"RTN","IBDF6A",55,0)
 I IBDELETE D DELETE^IBDFU2C(NEWFORM,357) Q
"RTN","IBDF6A",56,0)
 ;
"RTN","IBDF6A",57,0)
 D:'IBTKFORM ADDSETUP(NEWFORM,IBCLINIC,1)
"RTN","IBDF6A",58,0)
 X IBAPI("INDEX")
"RTN","IBDF6A",59,0)
 Q
"RTN","IBDF6A",60,0)
SETUP ;
"RTN","IBDF6A",61,0)
 N FORM
"RTN","IBDF6A",62,0)
 D FULL^VALM1
"RTN","IBDF6A",63,0)
 S VALMBCK="R"
"RTN","IBDF6A",64,0)
 K DIC S DIC("S")="I '$P(^(0),U,7)",DIC=357,DIC(0)="AEQ",DIC("A")="Select FORM for Clinic Setup: "
"RTN","IBDF6A",65,0)
 D ^DIC K DIC Q:($D(DTOUT)!$D(DUOUT))  S FORM=+Y Q:FORM<0
"RTN","IBDF6A",66,0)
 D ADDSETUP(FORM,IBCLINIC,0)
"RTN","IBDF6A",67,0)
 X IBAPI("INDEX")
"RTN","IBDF6A",68,0)
 Q
"RTN","IBDF6A",69,0)
ADDSETUP(FORM,IBCLINIC,NEW) ;
"RTN","IBDF6A",70,0)
 ;NEW=1 if the form was just created, 0 otherwise
"RTN","IBDF6A",71,0)
 N FLD,NODE,SETUP
"RTN","IBDF6A",72,0)
 S NEW=+$G(NEW)
"RTN","IBDF6A",73,0)
 K DA S DA=$O(^SD(409.95,"B",+$G(IBCLINIC),"")) I 'DA D
"RTN","IBDF6A",74,0)
 .K DIC,DO,DD,DINUM S DIC="^SD(409.95,",DIC(0)="",X=IBCLINIC
"RTN","IBDF6A",75,0)
 .D FILE^DICN K DIC
"RTN","IBDF6A",76,0)
 .S DA=$S(+Y<1:0,1:+Y)
"RTN","IBDF6A",77,0)
 Q:'DA
"RTN","IBDF6A",78,0)
 S SETUP=DA,NODE=$G(^SD(409.95,SETUP,0))
"RTN","IBDF6A",79,0)
 W !,"How should the clinic use the form?"
"RTN","IBDF6A",80,0)
 K DIR
"RTN","IBDF6A",81,0)
 S DIR(0)="SO^1:BASIC FORM;2:SUPPLEMENTAL FORM FOR ALL PATIENTS;3:SUPPLEMENTAL FORM FOR NEW PATIENTS;4:SUPPLEMENTAL FORM FOR ESTABLISHED PATIENTS;5:FORM TO PRINT WITHOUT PATIENT DATA;6:RESERVED FOR FUTURE USE;"
"RTN","IBDF6A",82,0)
 S:NEW DIR(0)=DIR(0)_"7:WILL NOT BE USED BY CLINIC;"
"RTN","IBDF6A",83,0)
 D ^DIR K DIR
"RTN","IBDF6A",84,0)
 I (Y=-1)!(Y=7)!$D(DIRUT) Q
"RTN","IBDF6A",85,0)
 S:Y'=2 FLD=$S(Y=1:.02,Y=3:.04,Y=4:.03,Y=5:.05,Y=6:.07,1:0)
"RTN","IBDF6A",86,0)
 S:Y=2 FLD=$S('$P(NODE,"^",6):.06,'$P(NODE,"^",8):.08,1:.09)
"RTN","IBDF6A",87,0)
 Q:'FLD
"RTN","IBDF6A",88,0)
 I $P($G(^SD(409.95,DA,0)),"^",(100*FLD)) Q:'$$OVERLAY
"RTN","IBDF6A",89,0)
 K DIE,DR S DIE=409.95
"RTN","IBDF6A",90,0)
 S DR=FLD_"////"_FORM D ^DIE K DIE,DR,DA
"RTN","IBDF6A",91,0)
 Q
"RTN","IBDF6A",92,0)
OVERLAY() ;asks the user if the he wants to overlay the form already used for the clinic setup
"RTN","IBDF6A",93,0)
 W !,"But you already have a form for that use!"
"RTN","IBDF6A",94,0)
 K DIR S DIR(0)="Y",DIR("A")="Do you want to replace it"
"RTN","IBDF6A",95,0)
 D ^DIR K DIR
"RTN","IBDF6A",96,0)
 Q:$D(DIRUT) 0
"RTN","IBDF6A",97,0)
 Q Y
"RTN","IBDF6C")
0^127^B1778463
"RTN","IBDF6C",1,0)
IBDF6C ;ALB/CJM - ENCOUNTER FORM - (deleting setup, editing form name) ;JAN 16,1993
"RTN","IBDF6C",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF6C",3,0)
 ;
"RTN","IBDF6C",4,0)
DSETUP ;allows user to select a form, then removes it from the clinic setup
"RTN","IBDF6C",5,0)
 N SEL,IBFORM,SETUP
"RTN","IBDF6C",6,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDF6C",7,0)
 S SEL=$O(VALMY("")),(IBFORM,VALMBCK)=""
"RTN","IBDF6C",8,0)
 I SEL S SEL=$G(@VALMAR@("IDX",2*SEL,SEL)),IBFORM=+SEL
"RTN","IBDF6C",9,0)
 I IBFORM D
"RTN","IBDF6C",10,0)
 .S VALMBCK="R"
"RTN","IBDF6C",11,0)
 .K DA S DA=$O(^SD(409.95,"B",+$G(IBCLINIC),"")) Q:'DA
"RTN","IBDF6C",12,0)
 .S SETUP=$G(^SD(409.95,DA,0)) Q:SETUP=""
"RTN","IBDF6C",13,0)
 .S DR=$P(SEL,"^",2)_"////@"
"RTN","IBDF6C",14,0)
 .K DIE S DIE=409.95 D ^DIE K DIE,DR,DA
"RTN","IBDF6C",15,0)
 .X IBAPI("INDEX")
"RTN","IBDF6C",16,0)
 Q
"RTN","IBDF6C",17,0)
EDITFORM ;allows user to select a form, then edit its name, description,  and size
"RTN","IBDF6C",18,0)
 N IBFORM,IBDELETE,IBSCAN,IBOLD ;IBDELETE,IBSCAN,IBOLD appear in the input template
"RTN","IBDF6C",19,0)
 I $G(IBAPI("SELECT"))'="" X IBAPI("SELECT")
"RTN","IBDF6C",20,0)
 S VALMBCK="R"
"RTN","IBDF6C",21,0)
 I IBFORM D
"RTN","IBDF6C",22,0)
 .D UNCMPALL^IBDF19(IBFORM)
"RTN","IBDF6C",23,0)
 .D FULL^VALM1
"RTN","IBDF6C",24,0)
 .S VALMBCK="R"
"RTN","IBDF6C",25,0)
 .K DA,DR,DIE S DA=IBFORM
"RTN","IBDF6C",26,0)
 .S DR="[IBDF EDIT OLD OR COPIED FORM]"
"RTN","IBDF6C",27,0)
 .S IBOLD=$S($P($G(^IBE(357,IBFORM,0)),"^",16):0,1:1)
"RTN","IBDF6C",28,0)
 .S DIE=357 D ^DIE K DIE,DR,DA
"RTN","IBDF6C",29,0)
 .X IBAPI("INDEX")
"RTN","IBDF6C",30,0)
 Q
"RTN","IBDF7")
0^128^B5091202
"RTN","IBDF7",1,0)
IBDF7 ;ALB/CJM - ENCOUNTER FORM - BUILD FORM(ADDING TOOLKIT BLKS) ; 08-JAN-1993
"RTN","IBDF7",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF7",3,0)
 ;
"RTN","IBDF7",4,0)
ADD ;create a new block by copying a toolkit block
"RTN","IBDF7",5,0)
 N BLKLIST,OLDBLOCK,NEWBLOCK,TOP,BOT,IBBG,IBLFT
"RTN","IBDF7",6,0)
 S VALMBCK="R",IBBG=+$G(VALMBG),OLDBLOCK="",IBLFT=+$G(VALMLFT)
"RTN","IBDF7",7,0)
 D EN^VALM("IBDF TOOL KIT BLOCK LIST") ;list processor displays list of tool kit blocks
"RTN","IBDF7",8,0)
 I '$G(IBFASTXT) D
"RTN","IBDF7",9,0)
 .S VALMBG=IBBG S:VALMBG<1 VALMBG=1
"RTN","IBDF7",10,0)
 .Q:OLDBLOCK=""  ;selected tool kit block stored in OLDBLOCK
"RTN","IBDF7",11,0)
 .S NEWBLOCK=$$COPYBLK^IBDFU2(OLDBLOCK,IBFORM,357.1,357.1,IBBG-1,IBLFT-5,0,"",1)
"RTN","IBDF7",12,0)
 .D RE^VALM4,POS^IBDFU4(NEWBLOCK)
"RTN","IBDF7",13,0)
 .S VALMBCK="R"
"RTN","IBDF7",14,0)
 .D TOPNBOT^IBDFU5(NEWBLOCK,.TOP,.BOT)
"RTN","IBDF7",15,0)
 .D IDXFORM^IBDF5A(TOP,BOT)
"RTN","IBDF7",16,0)
 Q
"RTN","IBDF7",17,0)
 ;
"RTN","IBDF7",18,0)
INIT ;entry code to list
"RTN","IBDF7",19,0)
 S BLKLIST="^TMP(""IBDF"",$J,""TOOL KIT BLOCK LIST"")"
"RTN","IBDF7",20,0)
 D IDXBLKS
"RTN","IBDF7",21,0)
 Q
"RTN","IBDF7",22,0)
HELP ; -- help code
"RTN","IBDF7",23,0)
 S X="?" D DISP^XQORM1 W !
"RTN","IBDF7",24,0)
 Q
"RTN","IBDF7",25,0)
 ;
"RTN","IBDF7",26,0)
EXIT ; -- exit code
"RTN","IBDF7",27,0)
 K @BLKLIST
"RTN","IBDF7",28,0)
 Q
"RTN","IBDF7",29,0)
 ;
"RTN","IBDF7",30,0)
IDXBLKS ; sets up list of toolkit blocks for list processor
"RTN","IBDF7",31,0)
 N BLOCK,TK
"RTN","IBDF7",32,0)
 K @BLKLIST
"RTN","IBDF7",33,0)
 S VALMCNT=0
"RTN","IBDF7",34,0)
 S TK=0,BLOCK="" F  S TK=$O(^IBE(357.1,"D",TK)) Q:'TK  F  S BLOCK=$O(^IBE(357.1,"D",TK,BLOCK)) Q:'BLOCK  D
"RTN","IBDF7",35,0)
 .Q:'$P($G(^IBE(357.1,BLOCK,0)),"^",14)
"RTN","IBDF7",36,0)
 .S VALMCNT=VALMCNT+1
"RTN","IBDF7",37,0)
 .S @BLKLIST@(VALMCNT,0)=$$DISPLAY(BLOCK,VALMCNT,TK),@BLKLIST@("IDX",VALMCNT,VALMCNT)=BLOCK
"RTN","IBDF7",38,0)
 .D FLDCTRL^VALM10(VALMCNT,"ID") ;set video for ID column
"RTN","IBDF7",39,0)
 Q
"RTN","IBDF7",40,0)
 ;
"RTN","IBDF7",41,0)
DISPLAY(BLOCK,ID,TKORDER) ;adds one toolkit block to the list array
"RTN","IBDF7",42,0)
 N NODE,NAME,DESCR,RET
"RTN","IBDF7",43,0)
 ;** note: IBTKBLK=1 only if editing the tool kit blocks - display the tool kit order in that case
"RTN","IBDF7",44,0)
 S RET=$J(ID,3)_$$PADRIGHT^IBDFU("",2)
"RTN","IBDF7",45,0)
 S NODE=$G(^IBE(357.1,BLOCK,0))
"RTN","IBDF7",46,0)
 S NAME=$P(NODE,"^",1),DESCR=$P(NODE,"^",13)
"RTN","IBDF7",47,0)
 S RET=RET_$$PADRIGHT^IBDFU(NAME,30)_" "
"RTN","IBDF7",48,0)
 I $G(IBTKBLK) S RET=RET_$E($J(TKORDER,4),1,4)_"  "
"RTN","IBDF7",49,0)
 S RET=RET_$E(DESCR,1,80)
"RTN","IBDF7",50,0)
 Q RET
"RTN","IBDF7",51,0)
SELECT ;
"RTN","IBDF7",52,0)
 N CHOICE
"RTN","IBDF7",53,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDF7",54,0)
 S CHOICE=$O(VALMY("")) Q:'CHOICE  S OLDBLOCK=$G(@VALMAR@("IDX",CHOICE,CHOICE))
"RTN","IBDF7",55,0)
 Q
"RTN","IBDF8")
0^129^B2071881
"RTN","IBDF8",1,0)
IBDF8 ;ALB/CJM - ENCOUNTER FORM - BUILD FORM(display single toolkit block) ; 08-JAN-1993
"RTN","IBDF8",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF8",3,0)
 ;
"RTN","IBDF8",4,0)
VIEWBLK ;
"RTN","IBDF8",5,0)
 N QUIT,IBBLK,IBVALMBG
"RTN","IBDF8",6,0)
 ;N IBMEMARY
"RTN","IBDF8",7,0)
 S QUIT=0,IBVALMBG=VALMBG
"RTN","IBDF8",8,0)
 D EN^VALM2($G(XQORNOD(0)),"S") ;select the block
"RTN","IBDF8",9,0)
 S IBBLK=$O(VALMY("")) Q:'IBBLK  S IBBLK=$G(@VALMAR@("IDX",IBBLK,IBBLK)) I IBBLK D EN^VALM("IBDF VIEW TOOL KIT BLOCK") ;call list processor to display selected block
"RTN","IBDF8",10,0)
 S VALMBCK="R",VALMBG=IBVALMBG
"RTN","IBDF8",11,0)
 Q
"RTN","IBDF8",12,0)
INIT ;
"RTN","IBDF8",13,0)
 D IDXBLOCK^IBDFU4
"RTN","IBDF8",14,0)
 Q
"RTN","IBDF8",15,0)
EXIT ;
"RTN","IBDF8",16,0)
 K @VALMAR
"RTN","IBDF8",17,0)
 Q
"RTN","IBDF8",18,0)
HDR ;
"RTN","IBDF8",19,0)
 S VALMHDR(1)="Viewing the "_$P($G(^IBE(357.1,IBBLK,0)),"^",1)_" Toolkit block"
"RTN","IBDF8",20,0)
 S (VALMHDR(2),VALMHDR(3))=$$PADRIGHT^IBDFU("",4)
"RTN","IBDF8",21,0)
 F I=1:1:16 S VALMHDR(2)=VALMHDR(2)_$J(I,10)
"RTN","IBDF8",22,0)
 Q
"RTN","IBDF9")
0^130^B6295987
"RTN","IBDF9",1,0)
IBDF9 ;ALB/CJM - ENCOUNTER FORM - BUILD FORM(display single form block for edit) ; 08-JAN-1993
"RTN","IBDF9",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF9",3,0)
 ;
"RTN","IBDF9",4,0)
INIT ;
"RTN","IBDF9",5,0)
 D IDXBLOCK^IBDFU4
"RTN","IBDF9",6,0)
 Q
"RTN","IBDF9",7,0)
EXIT ;
"RTN","IBDF9",8,0)
 K @VALMAR
"RTN","IBDF9",9,0)
 Q
"RTN","IBDF9",10,0)
HDR ;
"RTN","IBDF9",11,0)
 S VALMHDR(1)=$$PADRIGHT^IBDFU("",4)
"RTN","IBDF9",12,0)
 F I=1:1:16 S VALMHDR(1)=VALMHDR(1)_$J(I,10)
"RTN","IBDF9",13,0)
 Q
"RTN","IBDF9",14,0)
RESIZE ;resize the block
"RTN","IBDF9",15,0)
 N IBW,IBH
"RTN","IBDF9",16,0)
 S VALMBCK="R"
"RTN","IBDF9",17,0)
 K DIR S DIR(0)="NA^1:"_IBFORM("WIDTH")_":0",DIR("A")="Move the RIGHT MARGIN of the block to which column?: ",DIR("B")=IBBLK("W") D ^DIR K DIR Q:$D(DIRUT)  S IBW=X
"RTN","IBDF9",18,0)
 S DIR(0)="NA^1:"_IBFORM("HT")_":0",DIR("A")="Move the BOTTOM MARGIN of the block to which row?: ",DIR("B")=IBBLK("H") D ^DIR K DIR Q:$D(DIRUT)  S IBH=X
"RTN","IBDF9",19,0)
 K DR,DIE,DA S DIE=357.1,DA=IBBLK,DR=".06////^S X=IBW;.07////^S X=IBH" D ^DIE K DIE,DR,DA
"RTN","IBDF9",20,0)
 S VALMBCK="R"
"RTN","IBDF9",21,0)
 D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9",22,0)
 Q
"RTN","IBDF9",23,0)
EDITBLK ;edit the name,brief description, header and outline
"RTN","IBDF9",24,0)
 ;automatically shifts contents and changes size of block if changes in header or outline call for that
"RTN","IBDF9",25,0)
 N HDR1,HDR2 ;flags set to indicate existance of hdr before and after editing 
"RTN","IBDF9",26,0)
 N NODE,IBNAME,QUIT
"RTN","IBDF9",27,0)
 S QUIT=0,VALMBCK="R"
"RTN","IBDF9",28,0)
 D FULL^VALM1
"RTN","IBDF9",29,0)
 S NODE=$G(^IBE(357.1,IBBLK,0))
"RTN","IBDF9",30,0)
 S HDR1=$P(NODE,"^",11) S:HDR1'="" HDR1=1
"RTN","IBDF9",31,0)
 K DIR S DIR(0)="357.1,.01",DIR("B")=$P($G(^IBE(357.1,IBBLK,0)),"^") D ^DIR K DIR D  Q:QUIT
"RTN","IBDF9",32,0)
 .I (Y=-1)!$D(DIRUT) S QUIT=1 Q
"RTN","IBDF9",33,0)
 .S IBNAME=Y
"RTN","IBDF9",34,0)
 .K DA,DR,DIE S DIE=357.1,DA=IBBLK,DR="[IBDF EDIT HEADER&OUTLINE]" D ^DIE K DIE,DR,DA
"RTN","IBDF9",35,0)
 S NODE=$G(^IBE(357.1,IBBLK,0))
"RTN","IBDF9",36,0)
 S HDR2=$P(NODE,"^",11) S HDR2=$S(HDR2="":0,1:1)
"RTN","IBDF9",37,0)
 ;shift contents and resize if there has been a change to existance of the header
"RTN","IBDF9",38,0)
 I HDR1'=HDR2 D
"RTN","IBDF9",39,0)
 .N TOP,BOTTOM,LEFT,RIGHT,WAY,AMOUNT
"RTN","IBDF9",40,0)
 .S TOP=0,BOTTOM=IBBLK("H"),LEFT=0,RIGHT=IBBLK("W"),AMOUNT=1
"RTN","IBDF9",41,0)
 .I HDR2 S WAY="D" D E^IBDF10 S $P(NODE,"^",7)=$P(NODE,"^",7)+1,^IBE(357.1,IBBLK,0)=NODE
"RTN","IBDF9",42,0)
 .I HDR1 S WAY="U" D E^IBDF10 S $P(NODE,"^",7)=$P(NODE,"^",7)-1,^IBE(357.1,IBBLK,0)=NODE
"RTN","IBDF9",43,0)
 D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9",44,0)
 Q
"RTN","IBDF9A")
0^131^B37361594
"RTN","IBDF9A",1,0)
IBDF9A ;ALB/CJM - ENCOUNTER FORM - (create,edit,delete selection list) ;FEB 1,1993
"RTN","IBDF9A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF9A",3,0)
 ;
"RTN","IBDF9A",4,0)
LIST ;Create, Edit, or Delete a selection list from the form
"RTN","IBDF9A",5,0)
 N IBVALMBG
"RTN","IBDF9A",6,0)
 S VALMBCK="R",IBVALMBG=VALMBG
"RTN","IBDF9A",7,0)
 K DIR S DIR("?",1)="You can create a [N]ew list, edit its [A]ppearance, [D]elete it,",DIR("?")="edit its [Co]ntents, [P]osition or size its columns.  Choose from:"
"RTN","IBDF9A",8,0)
 S DIR("B")="C" I $G(IBBLK) D
"RTN","IBDF9A",9,0)
 .I $P($G(^IBE(357.2,+$O(^IBE(357.2,"C",IBBLK,0)),0)),"^",14) S DIR("B")="A" ;dynamic list, can't edit contents, default changed to appearance
"RTN","IBDF9A",10,0)
 ;
"RTN","IBDF9A",11,0)
 S DIR(0)="SAB^A:APPEARANCE;C:CONTENTS;D:DELETE;N:NEW;P:POSITION",DIR("A")="[N]ew   [A]ppearance   [D]elete   [C]ontents   [P]osition: "
"RTN","IBDF9A",12,0)
 W !!,DIR("?",1),!,DIR("?"),!
"RTN","IBDF9A",13,0)
 D ^DIR K DIR I $D(DIRUT)!(Y<0) Q
"RTN","IBDF9A",14,0)
 D @$S(Y="C":"EDITLIST^IBDF3",Y="A":"EDITLIST",Y="N":"NEWLIST^IBDF9A1",Y="D":"DLTLIST",Y="P":"COLUMNS",1:"NOSUCH")
"RTN","IBDF9A",15,0)
 S VALMBG=IBVALMBG
"RTN","IBDF9A",16,0)
 Q
"RTN","IBDF9A",17,0)
NOSUCH ;
"RTN","IBDF9A",18,0)
 Q
"RTN","IBDF9A",19,0)
EDITLIST ;allows editing of the structure of a list
"RTN","IBDF9A",20,0)
 ;expects IBBLK to be defined
"RTN","IBDF9A",21,0)
 ;IBSC1,IBSC2,IBSWITCH,IBD,IBOLD,IBLEN  are used in the input template
"RTN","IBDF9A",22,0)
 N IBLIST,IBRTN,IBSC1,IBSC2,IBSWITCH,IBSWT,IBD,IBOLD,IBLEN,IBDELETE,IBSCOLD,IBSCNEW,FROM,TO,IBDYN,IBINPUT,IBSC,IBSCRAY
"RTN","IBDF9A",23,0)
 S VALMBCK="R",(IBOLD,IBSWITCH)=1
"RTN","IBDF9A",24,0)
 D FULL^VALM1
"RTN","IBDF9A",25,0)
 D SELECT
"RTN","IBDF9A",26,0)
 I IBLIST D
"RTN","IBDF9A",27,0)
 .S (IBSCOLD,IBSCNEW)=""
"RTN","IBDF9A",28,0)
 .S IBRTN=$P($G(^IBE(357.2,IBLIST,0)),"^",11)
"RTN","IBDF9A",29,0)
 .D LISTTYPE(IBRTN)
"RTN","IBDF9A",30,0)
 .D GETSC^IBDF9A3(.IBSCOLD,IBLIST)
"RTN","IBDF9A",31,0)
 .D:IBRTN DATASIZE(IBRTN)
"RTN","IBDF9A",32,0)
 .K DIE,DA,DR S DIE=357.2,DA=IBLIST,DR="[IBDF EDIT SELECTION LIST]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA,%,I
"RTN","IBDF9A",33,0)
 .;
"RTN","IBDF9A",34,0)
 .;if the list already had selections the subcolumns may need to be reordered/created/deleted
"RTN","IBDF9A",35,0)
 .S IBSWITCH="" F  S IBSWITCH=$O(IBSWITCH(IBSWITCH)) Q:'IBSWITCH  S FROM=$P(IBSWITCH(IBSWITCH),"^"),TO=$P(IBSWITCH(IBSWITCH),"^",2) D  S IBSWT(FROM)=TO
"RTN","IBDF9A",36,0)
 ..I $D(IBSCOLD(TO)) D DELSC^IBDF9A3(IBLIST,TO)
"RTN","IBDF9A",37,0)
 ..;D SWITCH(IBLIST,FROM,TO)
"RTN","IBDF9A",38,0)
 ..I $D(IBSCOLD(FROM)) S IBSCOLD(TO)=IBSCOLD(FROM) K IBSCOLD(FROM)
"RTN","IBDF9A",39,0)
 .D SWITCH(IBLIST,.IBSWT)
"RTN","IBDF9A",40,0)
 .D GETSC^IBDF9A3(.IBSCNEW,IBLIST)
"RTN","IBDF9A",41,0)
 .N SC S SC=0 F  S SC=$O(IBSCOLD(SC)) Q:'SC  I IBSCOLD(SC)'=$G(IBSCNEW(SC)) D DELSC^IBDF9A3(IBLIST,SC)
"RTN","IBDF9A",42,0)
 .S SC=0 F  S SC=$O(IBSCNEW(SC)) Q:'SC  I IBSCNEW(SC)'=$G(IBSCOLD(SC)) D ADDSC^IBDF9A3(IBLIST,SC)
"RTN","IBDF9A",43,0)
 .D BLKCHNG^IBDF19(IBFORM,IBBLK) ;8/20/96 changed from d UNCMPLBLK^IBDF19
"RTN","IBDF9A",44,0)
 .D IDXBLOCK^IBDFU4
"RTN","IBDF9A",45,0)
 S VALMBCK="R"
"RTN","IBDF9A",46,0)
 Q
"RTN","IBDF9A",47,0)
COLUMNS ;allows the user to place and size the columns of the list
"RTN","IBDF9A",48,0)
 ;expects IBBLK to be defined
"RTN","IBDF9A",49,0)
 N IBLIST
"RTN","IBDF9A",50,0)
 S VALMBCK="R"
"RTN","IBDF9A",51,0)
 D FULL^VALM1
"RTN","IBDF9A",52,0)
 D SELECT
"RTN","IBDF9A",53,0)
 I IBLIST D
"RTN","IBDF9A",54,0)
 .K DIE,DA,DR S DIE=357.2,DA=IBLIST,DR="[IBDF POSITION/SIZE COLUMNS]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF9A",55,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9A",56,0)
 S VALMBCK="R"
"RTN","IBDF9A",57,0)
 Q
"RTN","IBDF9A",58,0)
SELECT ;
"RTN","IBDF9A",59,0)
 S IBLIST=""
"RTN","IBDF9A",60,0)
 Q:'$G(IBBLK)
"RTN","IBDF9A",61,0)
 I '$O(^IBE(357.2,"C",IBBLK,0)) W !,"There is no selection list!" D PAUSE^IBDFU5 Q
"RTN","IBDF9A",62,0)
AGAIN K DIC S DIC="^IBE(357.2,",DIC(0)="EQ",D="C",X=IBBLK
"RTN","IBDF9A",63,0)
 S DIC("S")="I $P($G(^(0)),U,2)=IBBLK"
"RTN","IBDF9A",64,0)
 D IX^DIC K DIC
"RTN","IBDF9A",65,0)
 S:+Y>0 IBLIST=+Y
"RTN","IBDF9A",66,0)
 I 'IBLIST,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No selection list selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
"RTN","IBDF9A",67,0)
 Q
"RTN","IBDF9A",68,0)
MSG1 ;called by the input template
"RTN","IBDF9A",69,0)
 W !!,"Entering the number of list columns is optional. By default the list will be",!,"given as many columns as the block has space for.",!
"RTN","IBDF9A",70,0)
 Q
"RTN","IBDF9A",71,0)
MSG2 ;called by the input template
"RTN","IBDF9A",72,0)
 W !!,"Entering the information on the position of the columns and their",!,"height is optional. Appropriate default values will be used. However,",!,"you may specify your own values for up to 4 coulmns.",!
"RTN","IBDF9A",73,0)
 Q
"RTN","IBDF9A",74,0)
MSG3 ;called by the input template
"RTN","IBDF9A",75,0)
 W !!,"You can now specify the subcolumns the list should contain.",!,"There can be at most 6 subcolumns, numbered 1-6.",!
"RTN","IBDF9A",76,0)
 Q
"RTN","IBDF9A",77,0)
 ;
"RTN","IBDF9A",78,0)
DATASIZE(RTN) ;IBLEN() stores the lengths of the pieces of the record returned by the package interface
"RTN","IBDF9A",79,0)
 N NODE,IEN,PIECE
"RTN","IBDF9A",80,0)
 Q:'$G(RTN)
"RTN","IBDF9A",81,0)
 S PIECE=0 F  S PIECE=$O(^IBE(357.6,RTN,15,"C",PIECE)) Q:'PIECE  S IEN=0 F  S IEN=$O(^IBE(357.6,RTN,15,"C",PIECE,IEN)) Q:'IEN  S NODE=$G(^IBE(357.6,RTN,15,IEN,0)) I $P(NODE,"^",3) S IBLEN($P(NODE,"^",3))=+$P(NODE,"^",2)_"^"_$P(NODE,"^",5)
"RTN","IBDF9A",82,0)
 S IBLEN(0)=4
"RTN","IBDF9A",83,0)
 S IBLEN(1)=$P($G(^IBE(357.6,RTN,2)),"^",2)_"^"_$P($G(^IBE(357.6,RTN,2)),"^",16)
"RTN","IBDF9A",84,0)
 Q
"RTN","IBDF9A",85,0)
 ;
"RTN","IBDF9A",86,0)
NEWNAME() ;
"RTN","IBDF9A",87,0)
 K DIR S DIR(0)="357.2,.01A",DIR("A")="New Selection List Name: ",DIR("B")=""
"RTN","IBDF9A",88,0)
 D ^DIR K DIR I $D(DIRUT) Q -1
"RTN","IBDF9A",89,0)
 Q Y
"RTN","IBDF9A",90,0)
SWITCH(IBLIST,IBARRY) ;FOR loops thru selection list and changes all subcolumn numbers from old to new (called only once)
"RTN","IBDF9A",91,0)
 N SLCTN,SC
"RTN","IBDF9A",92,0)
 S SLCTN="" F  S SLCTN=$O(^IBE(357.3,"C",IBLIST,SLCTN)) Q:'SLCTN  D
"RTN","IBDF9A",93,0)
 .S (IBSC1,SC)=0 F  S IBSC1=$O(^IBE(357.3,SLCTN,1,"B",IBSC1)) Q:'IBSC1  F  S SC=$O(^IBE(357.3,SLCTN,1,"B",IBSC1,SC)) Q:'SC  S IBSC(SC)=IBSC1
"RTN","IBDF9A",94,0)
 . S (IBSC1,SC)=0 F  S SC=$O(IBSC(SC)) Q:'SC  S IBSC1=IBSC(SC) D
"RTN","IBDF9A",95,0)
 ..;I $P($G(^IBE(357.3,SLCTN,1,SC,0)),"^")=IBSC1 D
"RTN","IBDF9A",96,0)
 ..I $D(IBARRY(IBSC1)) S IBSC2=IBARRY(IBSC1) D
"RTN","IBDF9A",97,0)
 ...I $G(^IBE(357.3,SLCTN,1,0))="" S ^IBE(357.3,SLCTN,1,0)="^357.31IA^"
"RTN","IBDF9A",98,0)
 ...K DIE,DA,DR S DIE="^IBE(357.3,SLCTN,1,",DA(1)=SLCTN,DA=SC,DR=".01////"_IBSC2
"RTN","IBDF9A",99,0)
 ...D ^DIE
"RTN","IBDF9A",100,0)
 ...;K DIE,DA,DR S DA(1)=SLCTN,DIE="^IBE(357.3,"_DA(1)_",1,",DA=SC,DR=".01////"_IBSC2
"RTN","IBDF9A",101,0)
 ..E  D
"RTN","IBDF9A",102,0)
 ...K ^IBE(357.3,SLCTN,1,"B",IBSC1,SC)
"RTN","IBDF9A",103,0)
 ...K DIK,DA S DIK="^IBE(357.3,SLCTN,1,",DA(1)=SLCTN,DA=SC D IX^DIK
"RTN","IBDF9A",104,0)
 K DIK,DA,DIE,DR
"RTN","IBDF9A",105,0)
 Q
"RTN","IBDF9A",106,0)
RTN() ;does a lookup on the package interface file using the E cross-reference, which uses the name with the prefix=namespace removed
"RTN","IBDF9A",107,0)
 K DIC S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1"
"RTN","IBDF9A",108,0)
 S DIC="^IBE(357.6,",DIC(0)="MQEA",D="E^D^B",DIC("A")="Select the TYPE OF DATA that the list will contain: " D MIX^DIC1 K DIC,DA
"RTN","IBDF9A",109,0)
 Q $S((Y<0)!$D(DTOUT)!$D(DUOUT):0,1:+Y)
"RTN","IBDF9A",110,0)
DLTLIST ;expects IBBLK to be defined
"RTN","IBDF9A",111,0)
 N IBLIST
"RTN","IBDF9A",112,0)
 D FULL^VALM1
"RTN","IBDF9A",113,0)
 D SELECT
"RTN","IBDF9A",114,0)
 I IBLIST D
"RTN","IBDF9A",115,0)
 .Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.2,IBLIST,0)),"^"))
"RTN","IBDF9A",116,0)
 .D DLTLIST^IBDFU3(357.2,IBBLK,IBLIST)
"RTN","IBDF9A",117,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9A",118,0)
 Q
"RTN","IBDF9A",119,0)
 ;
"RTN","IBDF9A",120,0)
LISTTYPE(RTN) ;sets IBDYN=1 if the rtn is dynamic selection,IBINPUT to the input interface
"RTN","IBDF9A",121,0)
 N NODE
"RTN","IBDF9A",122,0)
 I '$G(RTN) S (IBDYN,IBINPUT)=0 Q
"RTN","IBDF9A",123,0)
 S NODE=$G(^IBE(357.6,RTN,0)) S IBDYN=$P(NODE,"^",14),IBINPUT=$P(NODE,"^",13)
"RTN","IBDF9A",124,0)
 Q
"RTN","IBDF9A",125,0)
 ;
"RTN","IBDF9A",126,0)
OTHEROK(PI) ;returns 1 if the selection interface=PI allows 'other', 0 otherwise
"RTN","IBDF9A",127,0)
 N NODE
"RTN","IBDF9A",128,0)
 Q:'$G(PI) 0
"RTN","IBDF9A",129,0)
 ;
"RTN","IBDF9A",130,0)
 ;there must be an interface for input
"RTN","IBDF9A",131,0)
 Q:'$P((^IBE(357.6,PI,0)),"^",13) 0
"RTN","IBDF9A",132,0)
 ;
"RTN","IBDF9A",133,0)
 ;the selection interface must allow input of narrative or code
"RTN","IBDF9A",134,0)
 S NODE=$G(^IBE(357.6,PI,16))
"RTN","IBDF9A",135,0)
 I '$P(NODE,"^",2),'$P(NODE,"^",6) Q 0
"RTN","IBDF9A",136,0)
 Q 1
"RTN","IBDF9A1")
0^132^B20396325
"RTN","IBDF9A1",1,0)
IBDF9A1 ;ALB/CJM - ENCOUNTER FORM - (create,edit,delete selection list - continued) ;FEB 1,1993
"RTN","IBDF9A1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF9A1",3,0)
 ;
"RTN","IBDF9A1",4,0)
NEWLIST ;creates a new list
"RTN","IBDF9A1",5,0)
 ;expects IBBLK to be defined
"RTN","IBDF9A1",6,0)
 N IBLIST,IBLEN,IBP,IBRTN,NAME,IBDELETE,IBDYN,IBINPUT,IBDFLTF,IBDFLTB,IBDFLTL
"RTN","IBDF9A1",7,0)
 S (IBDFLTF,IBDFLTB,IBDFLTL,IBOLD,IBLIST)=0,VALMBCK="R"
"RTN","IBDF9A1",8,0)
 D FULL^VALM1
"RTN","IBDF9A1",9,0)
 S IBRTN=$$RTN^IBDF9A Q:'IBRTN
"RTN","IBDF9A1",10,0)
 S IBDFLTF=$$DFLTS^IBDFU5 D:IBDFLTF
"RTN","IBDF9A1",11,0)
 .S IBDFLTB=0 F  S IBDFLTB=$O(^IBE(357.1,"C",IBDFLTF,IBDFLTB)) Q:'IBDFLTB  D  Q:IBDFLTL
"RTN","IBDF9A1",12,0)
 ..S IBDFLTL=0 F  S IBDFLTL=$O(^IBE(357.2,"C",IBDFLTB,IBDFLTL)) Q:'IBDFLTL  Q:$P($G(^IBE(357.2,IBDFLTL,0)),"^",11)=IBRTN
"RTN","IBDF9A1",13,0)
 I IBDFLTL D  Q:IBLIST
"RTN","IBDF9A1",14,0)
 .S IBLIST=$$COPYLIST^IBDFU2(IBDFLTL,IBDFLTB,IBBLK,357.2,357.2)
"RTN","IBDF9A1",15,0)
 .Q:'IBLIST
"RTN","IBDF9A1",16,0)
 .K DIE,DA,DR S DIE=357.2,DA=IBLIST,DR="[IBDF POSITION/SIZE COLUMNS]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF9A1",17,0)
 .S VALMBCK="R" D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9A1",18,0)
 S NAME=$$NEWNAME^IBDF9A Q:NAME=-1
"RTN","IBDF9A1",19,0)
 K DIC,DIE,DD,DO,DINUM,DA
"RTN","IBDF9A1",20,0)
 N DLAYGO
"RTN","IBDF9A1",21,0)
 S DIC="^IBE(357.2,",DIC(0)="FL",X=NAME,DLAYGO=357.2
"RTN","IBDF9A1",22,0)
 D FILE^DICN K DIC,DA
"RTN","IBDF9A1",23,0)
 S IBLIST=$S(+Y<0:"",1:+Y)
"RTN","IBDF9A1",24,0)
 I 'IBLIST D
"RTN","IBDF9A1",25,0)
 .W !,"Unable to create a new selection list!" D PAUSE^IBDFU5
"RTN","IBDF9A1",26,0)
 I IBLIST D
"RTN","IBDF9A1",27,0)
 .D DLISTCNT^IBDFU3(IBLIST,357.2) ;deletes anything that may have been left lying around that now points to IBLIST
"RTN","IBDF9A1",28,0)
 .K DIE,DA,DR S DIE=357.2,DA=IBLIST,DR="[IBDF EDIT SELECTION LIST]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF9A1",29,0)
 .I IBDELETE K DA S DIK="^IBE(357.2,",DA=IBLIST D ^DIK K DIK,DA
"RTN","IBDF9A1",30,0)
 .I IBLIST,'IBDELETE D ADDGROUP("BLANK",0)
"RTN","IBDF9A1",31,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9A1",32,0)
 S VALMBCK="R"
"RTN","IBDF9A1",33,0)
 Q
"RTN","IBDF9A1",34,0)
ADDGROUP(NAME,ORDER) ;adds a group to the selection list=IBLIST
"RTN","IBDF9A1",35,0)
 N GROUP
"RTN","IBDF9A1",36,0)
 K DIC,DIE,DD,DO,DINUM,DA
"RTN","IBDF9A1",37,0)
 N DLAYGO
"RTN","IBDF9A1",38,0)
 S DIC="^IBE(357.4,",DIC(0)="FL",X=NAME,DLAYGO=357.4
"RTN","IBDF9A1",39,0)
 D FILE^DICN K DIC,DA
"RTN","IBDF9A1",40,0)
 S GROUP=$S(+Y<0:"",1:+Y)
"RTN","IBDF9A1",41,0)
 I GROUP D
"RTN","IBDF9A1",42,0)
 .S NODE=$G(^IBE(357.4,GROUP,0)) S $P(NODE,"^",2)=ORDER,$P(NODE,"^",3)=IBLIST S ^IBE(357.4,GROUP,0)=NODE
"RTN","IBDF9A1",43,0)
 .S DIK="^IBE(357.4,",DA=GROUP D IX1^DIK K DIK,DA
"RTN","IBDF9A1",44,0)
 Q
"RTN","IBDF9A1",45,0)
 ;
"RTN","IBDF9A1",46,0)
FORMAT ;allows the user to format all of the selections on the list in mass
"RTN","IBDF9A1",47,0)
 ;
"RTN","IBDF9A1",48,0)
 ;
"RTN","IBDF9A1",49,0)
 ;TYPE = type of formating - U=upper case,L=lower case,C=capitalize
"RTN","IBDF9A1",50,0)
 ;SUBCOL is the subcolumn to format
"RTN","IBDF9A1",51,0)
 ;
"RTN","IBDF9A1",52,0)
 N TYPE,SUBCOL,SLCTN
"RTN","IBDF9A1",53,0)
 ;
"RTN","IBDF9A1",54,0)
 ;ask for the subcolumn to format
"RTN","IBDF9A1",55,0)
 S SUBCOL=$$SUBCOL
"RTN","IBDF9A1",56,0)
 ;
"RTN","IBDF9A1",57,0)
 ;ask for the type of fomatting
"RTN","IBDF9A1",58,0)
 S TYPE=$S(SUBCOL:$$TYPE,1:"")
"RTN","IBDF9A1",59,0)
 ;
"RTN","IBDF9A1",60,0)
 ;find all the sections to be formatted and do so
"RTN","IBDF9A1",61,0)
 I TYPE'="",SUBCOL S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"C",IBLIST,SLCTN)) Q:'SLCTN  D:$P($G(^IBE(357.3,SLCTN,0)),"^",3)=IBLIST CHANGE(SLCTN,SUBCOL,TYPE)
"RTN","IBDF9A1",62,0)
 ;
"RTN","IBDF9A1",63,0)
 S VALMBCK="R"
"RTN","IBDF9A1",64,0)
 Q
"RTN","IBDF9A1",65,0)
 ;
"RTN","IBDF9A1",66,0)
FORMAT2 ;allows the user to format all of the selections in the group in mass
"RTN","IBDF9A1",67,0)
 ;
"RTN","IBDF9A1",68,0)
 ;
"RTN","IBDF9A1",69,0)
 ;TYPE = type of formating - U=upper case,L=lower case,C=capitalize
"RTN","IBDF9A1",70,0)
 ;SUBCOL is the subcolumn to format
"RTN","IBDF9A1",71,0)
 ;
"RTN","IBDF9A1",72,0)
 N TYPE,SUBCOL,SLCTN
"RTN","IBDF9A1",73,0)
 ;
"RTN","IBDF9A1",74,0)
 ;ask for the subcolumn to format
"RTN","IBDF9A1",75,0)
 S SUBCOL=$$SUBCOL
"RTN","IBDF9A1",76,0)
 ;
"RTN","IBDF9A1",77,0)
 ;ask forthe type of fomatting
"RTN","IBDF9A1",78,0)
 S TYPE=$S(SUBCOL:$$TYPE,1:"")
"RTN","IBDF9A1",79,0)
 ;
"RTN","IBDF9A1",80,0)
 ;find all the sections to be formatted and do so
"RTN","IBDF9A1",81,0)
 I TYPE'="",SUBCOL S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"D",IBGRP,SLCTN)) Q:'SLCTN  D:$P($G(^IBE(357.3,SLCTN,0)),"^",4)=IBGRP CHANGE(SLCTN,SUBCOL,TYPE)
"RTN","IBDF9A1",82,0)
 ;
"RTN","IBDF9A1",83,0)
 D IDXSLCTN^IBDF4
"RTN","IBDF9A1",84,0)
 S VALMBCK="R"
"RTN","IBDF9A1",85,0)
 Q
"RTN","IBDF9A1",86,0)
 ;
"RTN","IBDF9A1",87,0)
TYPE() ;ask the user what type of formatting
"RTN","IBDF9A1",88,0)
 N TYPE S TYPE=""
"RTN","IBDF9A1",89,0)
 K DIR S DIR(0)="SOB^UPPERCASE:U;LOWERCASE:L;CAPITALIZE:C"
"RTN","IBDF9A1",90,0)
 S DIR("A")="Select the type of formatting",DIR("B")="C"
"RTN","IBDF9A1",91,0)
 D ^DIR K DIR
"RTN","IBDF9A1",92,0)
 I '$D(DIRUT),Y'=-1 S TYPE=Y
"RTN","IBDF9A1",93,0)
 Q $E(TYPE,1)
"RTN","IBDF9A1",94,0)
 ;
"RTN","IBDF9A1",95,0)
CHANGE(SLCTN,SUBCOL,TYPE) ;
"RTN","IBDF9A1",96,0)
 ;
"RTN","IBDF9A1",97,0)
 N DA,NODE,STR
"RTN","IBDF9A1",98,0)
 S DA=$O(^IBE(357.3,SLCTN,1,"B",SUBCOL,0))
"RTN","IBDF9A1",99,0)
 Q:'DA
"RTN","IBDF9A1",100,0)
 S NODE=$G(^IBE(357.3,SLCTN,1,DA,0))
"RTN","IBDF9A1",101,0)
 S STR=$P(NODE,"^",2)
"RTN","IBDF9A1",102,0)
 D:$L(STR)
"RTN","IBDF9A1",103,0)
 .I TYPE="U" S STR=$$UP^XLFSTR(STR)
"RTN","IBDF9A1",104,0)
 .I TYPE="L" S STR=$$LOW^XLFSTR(STR)
"RTN","IBDF9A1",105,0)
 .I TYPE="C" S STR=$$CAPS(STR)
"RTN","IBDF9A1",106,0)
 .S $P(^IBE(357.3,SLCTN,1,DA,0),"^",2)=STR
"RTN","IBDF9A1",107,0)
 Q
"RTN","IBDF9A1",108,0)
 ;
"RTN","IBDF9A1",109,0)
CAPS(STR) ;returns STR with each word in it capitalized
"RTN","IBDF9A1",110,0)
 N FIRST,I,CHAR,LEN
"RTN","IBDF9A1",111,0)
 S FIRST=1,LEN=$L(STR)
"RTN","IBDF9A1",112,0)
 F I=1:1 S CHAR=$E(STR,I) Q:CHAR=""  D
"RTN","IBDF9A1",113,0)
 .I CHAR?1A,FIRST D
"RTN","IBDF9A1",114,0)
 ..S FIRST=0,CHAR=$$UP^XLFSTR(CHAR)
"RTN","IBDF9A1",115,0)
 .E  I CHAR?1A D
"RTN","IBDF9A1",116,0)
 ..S CHAR=$$LOW^XLFSTR(CHAR)
"RTN","IBDF9A1",117,0)
 .E  S FIRST=1
"RTN","IBDF9A1",118,0)
 .S STR=$E(STR,1,I-1)_CHAR_$E(STR,I+1,LEN)
"RTN","IBDF9A1",119,0)
 Q STR
"RTN","IBDF9A1",120,0)
 ;
"RTN","IBDF9A1",121,0)
SUBCOL() ;ask what subcolumn to format
"RTN","IBDF9A1",122,0)
 ;SCLIST - used to record the subcolumns that can be formated - each digit will signify a subcolum
"RTN","IBDF9A1",123,0)
 ;
"RTN","IBDF9A1",124,0)
 N SCLIST,NODE,SUBCOL,ANS
"RTN","IBDF9A1",125,0)
 ;first get the list of subcolumns that can be formatted
"RTN","IBDF9A1",126,0)
 S SCLIST="",SUBCOL=0
"RTN","IBDF9A1",127,0)
 F  S SUBCOL=$O(IBLIST("SCTYPE",SUBCOL)) Q:'SUBCOL  I $G(IBLIST("SCW",SUBCOL)),IBLIST("SCTYPE",SUBCOL)=1,IBLIST("SCEDITABLE",SUBCOL) S SCLIST=SCLIST_","_SUBCOL
"RTN","IBDF9A1",128,0)
 ;if there is at most one subcolumn that can be edited return that
"RTN","IBDF9A1",129,0)
 I $L(SCLIST)<3 Q $E(SCLIST,2)
"RTN","IBDF9A1",130,0)
 ;
"RTN","IBDF9A1",131,0)
 ;now ask what subcolumn to format
"RTN","IBDF9A1",132,0)
AGAIN W !,"What subcolumn do you want formated? Choose from (",$E(SCLIST,2,10),"): "
"RTN","IBDF9A1",133,0)
 R ANS:DTIME
"RTN","IBDF9A1",134,0)
 I '$T!(ANS["^") Q ""
"RTN","IBDF9A1",135,0)
 I ANS?1N,SCLIST[ANS Q ANS
"RTN","IBDF9A1",136,0)
 G AGAIN
"RTN","IBDF9A1",137,0)
 Q ANS
"RTN","IBDF9A3")
0^133^B12685155
"RTN","IBDF9A3",1,0)
IBDF9A3 ;ALB/CJM - ENCOUNTER FORM - (create,edit,delete selection list - continued) ;NOV 5,1994
"RTN","IBDF9A3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF9A3",3,0)
 ;
"RTN","IBDF9A3",4,0)
GETSC(ARY,LIST) ;makes a list of subcolumns having text
"RTN","IBDF9A3",5,0)
 N SC,NODE
"RTN","IBDF9A3",6,0)
 S SC=0 F  S SC=$O(^IBE(357.2,LIST,2,SC)) Q:'SC  S NODE=$G(^IBE(357.2,LIST,2,SC,0)) I $P(NODE,"^",4)=1 S ARY(+NODE)=$P(NODE,"^",5)
"RTN","IBDF9A3",7,0)
 Q
"RTN","IBDF9A3",8,0)
DELSC(LIST,SC) ;delete subcolumn=SC for selections on LIST
"RTN","IBDF9A3",9,0)
 N SLCTN,SCIEN
"RTN","IBDF9A3",10,0)
 K DA,DIK
"RTN","IBDF9A3",11,0)
 S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"C",LIST,SLCTN)) Q:'SLCTN  S SCIEN=0 F  S SCIEN=$O(^IBE(357.3,SLCTN,1,"B",SC,SCIEN)) Q:'SCIEN  D
"RTN","IBDF9A3",12,0)
 .I $P($G(^IBE(357.3,SLCTN,1,SCIEN,0)),"^")=SC D
"RTN","IBDF9A3",13,0)
 ..S DIK="^IBE(357.3,"_SLCTN_",1,",DA(1)=SLCTN,DA=SCIEN D ^DIK
"RTN","IBDF9A3",14,0)
 .E  D
"RTN","IBDF9A3",15,0)
 ..K ^IBE(357.3,SLCTN,1,"B",SC,SCIEN)
"RTN","IBDF9A3",16,0)
 ..S DIK="^IBE(357.3,SLCTN,1,",DA(1)=SLCTN,DA=SCIEN D IX^DIK
"RTN","IBDF9A3",17,0)
 K DIK,DA
"RTN","IBDF9A3",18,0)
 Q
"RTN","IBDF9A3",19,0)
ADDSC(LIST,SC) ;ADD subcolumn=SC for selections on LIST if not already there, else set to blank
"RTN","IBDF9A3",20,0)
 N SLCTN,SCIEN ;,IBNEWSC,IBFLG
"RTN","IBDF9A3",21,0)
 ;S IBNEWSC=IBSCNEW(SC)
"RTN","IBDF9A3",22,0)
 ;S IBTHERE=0
"RTN","IBDF9A3",23,0)
 ;F  S IBTHERE=$O(IBSCOLD(IBTHERE)) Q:'IBTHERE D  Q:$D(IBFLG)
"RTN","IBDF9A3",24,0)
 ;.;I IBNEWSC=IBTHERE S IBFLG=1 Q
"RTN","IBDF9A3",25,0)
 ;.;I IBNEWSC=3,IBTHERE=2 S IBFLG=1 Q
"RTN","IBDF9A3",26,0)
 ;I $D(IBFLG) D
"RTN","IBDF9A3",27,0)
 ;.;I IBTHERE=IBNEWSC W !!,"The new subcolum "_IBNEWSC_" contains the same
"RTN","IBDF9A3",28,0)
 ;.;I IBTHERE=IBNEWSC W !!,"The new subcolum "_IBNEWSC_" contains the samedata as the the new subcolumn.",!,"**New subcolumn deleted**"
"RTN","IBDF9A3",29,0)
 ;W "The new subcolum "_IBNEWSC_" contains the samedata as the the new subcolumn, but different subcolumn width. ** Change subcolumn width**",!,"**New subcolumn deleted**"
"RTN","IBDF9A3",30,0)
 S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"C",LIST,SLCTN)) Q:'SLCTN  D
"RTN","IBDF9A3",31,0)
 .;re-index the record, to insure it is good 
"RTN","IBDF9A3",32,0)
 .K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D IX^DIK
"RTN","IBDF9A3",33,0)
 .S SCIEN=$O(^IBE(357.3,SLCTN,1,"B",SC,0))
"RTN","IBDF9A3",34,0)
 .;
"RTN","IBDF9A3",35,0)
 .;should be empty if it already exists
"RTN","IBDF9A3",36,0)
 .I SCIEN S $P(^IBE(357.3,SLCTN,1,SCIEN,0),"^",2)="" Q
"RTN","IBDF9A3",37,0)
 .;
"RTN","IBDF9A3",38,0)
 .;it doesnt already exist, so create it
"RTN","IBDF9A3",39,0)
 .K DA,DIC,DO,DINUM
"RTN","IBDF9A3",40,0)
 .S DIC="^IBE(357.3,"_SLCTN_",1,",DA(1)=SLCTN,X=SC,DIC(0)="" D FILE^DICN
"RTN","IBDF9A3",41,0)
 K DIC,DO,DA,DIK
"RTN","IBDF9A3",42,0)
 Q
"RTN","IBDF9A3",43,0)
 ;
"RTN","IBDF9A3",44,0)
OTHER ;
"RTN","IBDF9A3",45,0)
 N INPUT,NODE
"RTN","IBDF9A3",46,0)
 S NODE=$G(^IBE(357.6,16,0))
"RTN","IBDF9A3",47,0)
 S INPUT("NARRATIVE")=$P(NODE,"^"),INPUT("NARRATIVE","NAME")=$P(NODE,"^",2),INPUT("NARRATIVE","DATATYPE")=$P(NODE,"^",3),INPUT("CODE")=$P(NODE,"^",4),INPUT("CODE","NAME")=$P(NODE,"^",6),INPUT("CODE","DATATYPE")=$P(NODE,"^",7)
"RTN","IBDF9A3",48,0)
 Q
"RTN","IBDF9A3",49,0)
SCLOOP ;  -- Looping thru the subc setting up array(type of data)=subcolumn
"RTN","IBDF9A3",50,0)
 S (IBSC3,IBSC4)=0
"RTN","IBDF9A3",51,0)
 F  S IBSC3=$O(^IBE(357.2,IBLIST,2,"B",IBSC3)) Q:'IBSC3  F  S IBSC4=$O(^IBE(357.2,IBLIST,2,"B",IBSC3,IBSC4)) Q:'IBSC4  I $P($G(^IBE(357.2,IBLIST,2,IBSC4,0)),"^",5)]"" D
"RTN","IBDF9A3",52,0)
 .S IBSCRAY($P($G(^IBE(357.2,IBLIST,2,IBSC4,0)),"^",5))=$P($G(^IBE(357.2,IBLIST,2,IBSC4,0)),"^",1)
"RTN","IBDF9A3",53,0)
 Q
"RTN","IBDF9A3",54,0)
SCDEL ;  -- Deletes the new subcolumn if there is already a column for that
"RTN","IBDF9A3",55,0)
 ;     type of data.
"RTN","IBDF9A3",56,0)
 N DA,DIK
"RTN","IBDF9A3",57,0)
 I "^1^2^3^"'[X Q
"RTN","IBDF9A3",58,0)
 I IBSC1(IBSC1)'="^",X'=$P(IBSC1(IBSC1),"^",2) S X=$P(IBSC1(IBSC1),"^",2) S $P(^IBE(357.2,D0,2,D1,0),"^",5)=X D MSG1 Q
"RTN","IBDF9A3",59,0)
 Q:IBSC1(IBSC1)'="^"
"RTN","IBDF9A3",60,0)
 ;S DIK="^IBE(357.2,",DA=IBSC1
"RTN","IBDF9A3",61,0)
 I "^1^2^3^"[X I $D(IBSCRAY(X)) D DIK Q
"RTN","IBDF9A3",62,0)
 ;I X=2 I $D(IBSCRAY(3)) D DIK Q
"RTN","IBDF9A3",63,0)
 ;I X=3 I $D(IBSCRAY(2)) D DIK Q
"RTN","IBDF9A3",64,0)
 ;K DA,DIK Q
"RTN","IBDF9A3",65,0)
 Q
"RTN","IBDF9A3",66,0)
DIK ;  -- KILL SUBCOLUMN GLOBAL
"RTN","IBDF9A3",67,0)
 W !!,"*** SUBCOUMN "_IBSC1_" DELETED ***",!,"This data already exists in subcolumn "_IBSCRAY(X)_". Go in and edit its subcolumn number.",!!
"RTN","IBDF9A3",68,0)
 S DIK="^IBE(357.2,"_D0_",2,",DA(1)=D0,DA=D1 D ^DIK
"RTN","IBDF9A3",69,0)
 S IBDFFLG=1
"RTN","IBDF9A3",70,0)
 ;K DA,DIK Q
"RTN","IBDF9A3",71,0)
 Q
"RTN","IBDF9A3",72,0)
MSG1 ;
"RTN","IBDF9A3",73,0)
 W !!,"*** PREVENTING LOSS OF DATA - THIS FIELD CAN NOT BE EDITED ***",!,"You will need to add a new subcolumn to update this information",!!
"RTN","IBDF9A3",74,0)
 Q
"RTN","IBDF9B")
0^134^B23526128
"RTN","IBDF9B",1,0)
IBDF9B ;ALB/CJM - ENCOUNTER FORM - (edit,delete,add data fields) ;FEB 1,1993
"RTN","IBDF9B",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF9B",3,0)
 ;
"RTN","IBDF9B",4,0)
FIELD ;Create, Edit, or Delete a data field from the form
"RTN","IBDF9B",5,0)
 S VALMBCK="R"
"RTN","IBDF9B",6,0)
 D FULL^VALM1
"RTN","IBDF9B",7,0)
 K DIR S DIR("?",1)="A DISPLAY FIELD outputs data from VISTA, MULTIPLE CHOICE FIELDS",DIR("?")="and HAND PRINT FIELDS allow input of data, LABELS are for fixed text fields"
"RTN","IBDF9B",8,0)
 W !,DIR("?",1),!,DIR("?"),!!
"RTN","IBDF9B",9,0)
 S DIR("B")="D",DIR(0)="SB^D:Display Field;M:Multiple Choice Field;H:Hand Print;L:Label Only",DIR("A")="Edit fields for: [D]isplay,  [M]ultiple Choice, [H]and Print, [L]abel only"
"RTN","IBDF9B",10,0)
 D ^DIR K DIR I $D(DIRUT)!(Y<0) Q
"RTN","IBDF9B",11,0)
 I Y="M" D MFIELD^IBDF9B2 Q
"RTN","IBDF9B",12,0)
 I Y="H" D HFIELD^IBDF9B4 Q
"RTN","IBDF9B",13,0)
 I Y="L" D LABELS^IBDF9B3 Q
"RTN","IBDF9B",14,0)
 ;
"RTN","IBDF9B",15,0)
 N IBVALMBG,QUIT
"RTN","IBDF9B",16,0)
 S QUIT=0
"RTN","IBDF9B",17,0)
 S IBVALMBG=VALMBG
"RTN","IBDF9B",18,0)
 S VALMBCK="R"
"RTN","IBDF9B",19,0)
 ;
"RTN","IBDF9B",20,0)
 F  D  Q:QUIT
"RTN","IBDF9B",21,0)
 .D FULL^VALM1
"RTN","IBDF9B",22,0)
 .K DIR S DIR("?",1)="You can Create, Edit, or Delete a data field, Shift all of the data fields",DIR("?")="within a range up or down, or List their locations ."
"RTN","IBDF9B",23,0)
 .W !!,DIR("?",1),!,DIR("?"),!
"RTN","IBDF9B",24,0)
 .S DIR("B")="C",DIR(0)="SB^C:Create;E:Edit;D:Delete;S:Shift;L:List;Q:Quit",DIR("A")="[C]reate,  [D]elete,  [E]dit,   [S]hift,  [L]ocations,  [Q]uit"
"RTN","IBDF9B",25,0)
 .D ^DIR K DIR I $D(DIRUT)!(Y<0) S QUIT=1 Q
"RTN","IBDF9B",26,0)
 .I Y="Q" S QUIT=1 Q
"RTN","IBDF9B",27,0)
 .D @$S(Y="C":"NEWFLD",Y="E":"EDITFLD",Y="D":"DLTFLD",Y="S":"SHIFT",Y="L":"^IBDF9B1",1:"")
"RTN","IBDF9B",28,0)
 .D RE^VALM4
"RTN","IBDF9B",29,0)
 S VALMBCK="R",VALMBG=IBVALMBG
"RTN","IBDF9B",30,0)
 Q
"RTN","IBDF9B",31,0)
SHIFT ;expects IBBLK to be defined - shifts all fields within range supplied by user
"RTN","IBDF9B",32,0)
 D SHIFT^IBDF10("D")
"RTN","IBDF9B",33,0)
 D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9B",34,0)
 Q
"RTN","IBDF9B",35,0)
EDITFLD ;expects IBBLK to be defined
"RTN","IBDF9B",36,0)
 N IBFIELD,RTN,NODE
"RTN","IBDF9B",37,0)
 N IBMF,IBWP,IBLIST,IBI,IBOLD,IBX,IBY,IBW,IBP,IBLEN,IBDELETE ;these are used in the input template
"RTN","IBDF9B",38,0)
 ;IBMF=1 if display interface returns records,IBWP=1 display interface returns a word processing field
"RTN","IBDF9B",39,0)
 D SELECT
"RTN","IBDF9B",40,0)
 I IBFIELD D
"RTN","IBDF9B",41,0)
 .D RE^VALM4
"RTN","IBDF9B",42,0)
 .S (IBMF,IBLIST,IBWP)=0,IBOLD=1,(IBX,IBY)=""
"RTN","IBDF9B",43,0)
 .S RTN=$P($G(^IBE(357.5,IBFIELD,0)),"^",3)
"RTN","IBDF9B",44,0)
 .I RTN D DATATYPE(RTN)
"RTN","IBDF9B",45,0)
 .K DR,DIE,DA S DIE=357.5,DA=IBFIELD,DR="[IBDF EDIT DATA FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF9B",46,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9B",47,0)
 Q
"RTN","IBDF9B",48,0)
SELECT ;
"RTN","IBDF9B",49,0)
 S IBFIELD=0
"RTN","IBDF9B",50,0)
 Q:'$G(IBBLK)
"RTN","IBDF9B",51,0)
 I '$O(^IBE(357.5,"C",IBBLK,0)) W !,"There is no data field!" D PAUSE^IBDFU5 Q
"RTN","IBDF9B",52,0)
AGAIN K DIC S DIC="^IBE(357.5,",DIC(0)="EFQ",DIC("B")="",D="C",X=IBBLK
"RTN","IBDF9B",53,0)
 S DIC("S")="I $P(^(0),U,2)=IBBLK,+$P(^(0),U,3)>0"
"RTN","IBDF9B",54,0)
 D IX^DIC K DIC
"RTN","IBDF9B",55,0)
 S:+Y>0 IBFIELD=+Y
"RTN","IBDF9B",56,0)
 I 'IBFIELD,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No data field selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
"RTN","IBDF9B",57,0)
 Q
"RTN","IBDF9B",58,0)
DLTFLD ;expects IBBLK to be defined
"RTN","IBDF9B",59,0)
 N IBFIELD
"RTN","IBDF9B",60,0)
 D SELECT
"RTN","IBDF9B",61,0)
 I IBFIELD D
"RTN","IBDF9B",62,0)
 .Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.5,IBFIELD,0)),"^"))
"RTN","IBDF9B",63,0)
 .D DLTFLD^IBDFU3(357.5,IBBLK,IBFIELD)
"RTN","IBDF9B",64,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9B",65,0)
 Q
"RTN","IBDF9B",66,0)
NEWFLD ;adds a new field, expects IBBLK to be defined
"RTN","IBDF9B",67,0)
 N NAME,FIELD,NODE,IBRTN,DLAYGO
"RTN","IBDF9B",68,0)
 N IBX,IBY,IBLIST,IBLEN,IBWP,IBMF,IBW,IBP,IBDELETE,IBOLD ;these are used in the input template
"RTN","IBDF9B",69,0)
 S NAME=$$NEWNAME Q:NAME=-1
"RTN","IBDF9B",70,0)
 S IBRTN=$$LOOKUP Q:'IBRTN
"RTN","IBDF9B",71,0)
 S IBOLD=0,(IBX,IBY)=""
"RTN","IBDF9B",72,0)
 K DIC,DIE,DD,DO,DINUM S DIC="^IBE(357.5,",DIC(0)="FL",X=NAME,DLAYGO=357.5
"RTN","IBDF9B",73,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDF9B",74,0)
 S FIELD=$S(+Y<0:"",1:+Y)
"RTN","IBDF9B",75,0)
 I 'FIELD D
"RTN","IBDF9B",76,0)
 .W !,"Unable to create a new data field!" D PAUSE^IBDFU5
"RTN","IBDF9B",77,0)
 I FIELD D
"RTN","IBDF9B",78,0)
 .S IBDELETE=1
"RTN","IBDF9B",79,0)
 .K DIE,DA,DR S DIE=357.5,DA=FIELD,DR="[IBDF EDIT DATA FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA,DIC
"RTN","IBDF9B",80,0)
 .I IBDELETE K DA S DIK="^IBE(357.5,",DA=FIELD D ^DIK K DIK,DA Q
"RTN","IBDF9B",81,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9B",82,0)
 Q
"RTN","IBDF9B",83,0)
NEWNAME() ;
"RTN","IBDF9B",84,0)
 K DIR S DIR(0)="357.5,.01A",DIR("A")="New Field Name: ",DIR("B")=""
"RTN","IBDF9B",85,0)
 D ^DIR K DIR I $D(DIRUT) Q -1
"RTN","IBDF9B",86,0)
 Q Y
"RTN","IBDF9B",87,0)
 ;
"RTN","IBDF9B",88,0)
DATATYPE(RTN) ;
"RTN","IBDF9B",89,0)
 ;INPUT - RTN is a ptr to the package interface file
"RTN","IBDF9B",90,0)
 ;
"RTN","IBDF9B",91,0)
 ;OUTPUT - IBLEN() stores the lengths of the pieces of the record returned by the package interface
"RTN","IBDF9B",92,0)
 ;IBLIST=1 if list,IBMF=1 if record, IBWP=1 if word processing
"RTN","IBDF9B",93,0)
 ;
"RTN","IBDF9B",94,0)
 N IBSUB,NODE,DATATYPE
"RTN","IBDF9B",95,0)
 S (IBMF,IBWP,IBLIST)=0
"RTN","IBDF9B",96,0)
 Q:'$G(RTN)
"RTN","IBDF9B",97,0)
 S DATATYPE=$P($G(^IBE(357.6,RTN,0)),"^",7) S:DATATYPE=5 IBWP=1 S:(DATATYPE=2)!(DATATYPE=4) IBMF=1 S:(DATATYPE=3)!(DATATYPE=4) IBLIST=1
"RTN","IBDF9B",98,0)
 I 'IBWP D
"RTN","IBDF9B",99,0)
 .N IEN
"RTN","IBDF9B",100,0)
 .S IEN=0 F  S IEN=$O(^IBE(357.6,RTN,15,"C",IEN)) Q:'IEN  S NODE=$G(^IBE(357.6,RTN,15,IEN,0)) I $P(NODE,"^",3) S IBLEN($P(NODE,"^",3))=+$P(NODE,"^",2)
"RTN","IBDF9B",101,0)
 .S IBLEN(1)=$P($G(^IBE(357.6,RTN,2)),"^",2)
"RTN","IBDF9B",102,0)
 Q
"RTN","IBDF9B",103,0)
 ;
"RTN","IBDF9B",104,0)
LOOKUP() ;does a lookup on the package interface file using the E cross-reference, which uses the name with the prefix=namespace removed
"RTN","IBDF9B",105,0)
 K DIC S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1"
"RTN","IBDF9B",106,0)
 S DIC="^IBE(357.6,",DIC(0)="MQEA",D="E^D^B",DIC("A")="Select the TYPE OF DATA that should be displayed:" D MIX^DIC1 K DIC,DA,D
"RTN","IBDF9B",107,0)
 Q $S((Y<0)!$D(DTOUT)!$D(DUOUT):0,1:+Y)
"RTN","IBDF9B",108,0)
 ;
"RTN","IBDF9B1")
0^135^B28851228
"RTN","IBDF9B1",1,0)
IBDF9B1 ;ALB/CJM - ENCOUNTER FORM - (report data fields) ;APRIL 22,1993
"RTN","IBDF9B1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF9B1",3,0)
 ;
"RTN","IBDF9B1",4,0)
REPORT ;
"RTN","IBDF9B1",5,0)
 N TOP,BOTTOM,LEFT,RIGHT,QUIT,SCRNSIZE
"RTN","IBDF9B1",6,0)
 S QUIT=0,SCRNSIZE=4
"RTN","IBDF9B1",7,0)
 D RANGE
"RTN","IBDF9B1",8,0)
 D:'QUIT SEARCH(TOP,BOTTOM,LEFT,RIGHT)
"RTN","IBDF9B1",9,0)
 Q
"RTN","IBDF9B1",10,0)
RANGE ;asks the user for the range - returns TOP,BOTTOM,LEFT,RIGHT
"RTN","IBDF9B1",11,0)
 N I,HT,WIDTH
"RTN","IBDF9B1",12,0)
 S HT=IBBLK("H"),WIDTH=IBBLK("W")
"RTN","IBDF9B1",13,0)
 K DIR
"RTN","IBDF9B1",14,0)
 ;get TOP
"RTN","IBDF9B1",15,0)
 S DIR("A")="What is the top-most row to report on?"
"RTN","IBDF9B1",16,0)
 S DIR(0)="N^1:"_HT_":0",DIR("B")=1
"RTN","IBDF9B1",17,0)
 D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
"RTN","IBDF9B1",18,0)
 S TOP=Y
"RTN","IBDF9B1",19,0)
 ;now get BOTTOM
"RTN","IBDF9B1",20,0)
 S DIR("A")="What is the bottom-most row to report on? (optional)",DIR("?",1)="Enter the lowest row that you want to report on.",DIR("?")="Enter nothing to report all data fields below the highest row that you specified."
"RTN","IBDF9B1",21,0)
 K DIR("B") ;S DIR("B")=HT
"RTN","IBDF9B1",22,0)
 S DIR(0)="NO^"_TOP_":"_HT_":0"
"RTN","IBDF9B1",23,0)
 D ^DIR K DIR I (Y=-1)!$D(DTOUT)!$D(DUOUT) S QUIT=1 Q
"RTN","IBDF9B1",24,0)
 S BOTTOM=Y
"RTN","IBDF9B1",25,0)
 ;get LEFT
"RTN","IBDF9B1",26,0)
 S DIR("A")="What is the left-most column to report on?"
"RTN","IBDF9B1",27,0)
 S DIR(0)="N^1:"_WIDTH_":0",DIR("B")=1
"RTN","IBDF9B1",28,0)
 D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
"RTN","IBDF9B1",29,0)
 S LEFT=Y
"RTN","IBDF9B1",30,0)
 ;now get RIGHT
"RTN","IBDF9B1",31,0)
 S DIR("A")="What is the right-most column to report on? (optional)"
"RTN","IBDF9B1",32,0)
 S DIR("?",1)="Enter the right-most column that you want to report on.",DIR("?")="Enter nothing to report all data fields to the right of the left-most column that you specified."
"RTN","IBDF9B1",33,0)
 K DIR("B") ;S DIR("B")=WIDTH
"RTN","IBDF9B1",34,0)
 S DIR(0)="NO^"_LEFT_":"_WIDTH_":0"
"RTN","IBDF9B1",35,0)
 D ^DIR K DIR I (Y=-1)!$D(DTOUT)!$D(DUOUT) S QUIT=1 Q
"RTN","IBDF9B1",36,0)
 S RIGHT=Y
"RTN","IBDF9B1",37,0)
 ;now change TOP,BOTTOM,LEFT,RIGHT to their internal values
"RTN","IBDF9B1",38,0)
 ;(BOTTOM or RIGHT)="" has special meaning - means shift without limit 
"RTN","IBDF9B1",39,0)
 S TOP=TOP-1,LEFT=LEFT-1
"RTN","IBDF9B1",40,0)
 S:BOTTOM>0 BOTTOM=BOTTOM-1
"RTN","IBDF9B1",41,0)
 S:RIGHT>0 RIGHT=RIGHT-1
"RTN","IBDF9B1",42,0)
 Q
"RTN","IBDF9B1",43,0)
SEARCH(TOP,BOTTOM,LEFT,RIGHT) ;searches for data fields in IBBLK falling within the rectangle defined by TOP,BOTTOM,LEFT,RIGHT and reports on them
"RTN","IBDF9B1",44,0)
 N SUBFLD,IBX,IBY,FLD,QUIT,ARY,RTN,WP,LIST,CNT,NODE,COUNT
"RTN","IBDF9B1",45,0)
 S ARY="^TMP(""IBDF"",$J,""LIST OF DATA FIELDS"")"
"RTN","IBDF9B1",46,0)
 K @ARY
"RTN","IBDF9B1",47,0)
 S (COUNT,QUIT)=0
"RTN","IBDF9B1",48,0)
 S FLD="" F  S FLD=$O(^IBE(357.5,"C",IBBLK,FLD)) Q:QUIT!('FLD)  D
"RTN","IBDF9B1",49,0)
 .S FLD("NODE0")=$G(^IBE(357.5,FLD,0))
"RTN","IBDF9B1",50,0)
 .Q:FLD("NODE0")=""
"RTN","IBDF9B1",51,0)
 .S FLD("NAME")=$P(FLD("NODE0"),"^")
"RTN","IBDF9B1",52,0)
 .S FLD("MULTIPLE SF")="NO"
"RTN","IBDF9B1",53,0)
 .S (SUBFLD,CNT)=0 F  S SUBFLD=$O(^IBE(357.5,FLD,2,SUBFLD)) Q:'SUBFLD  S NODE=$G(^IBE(357.5,FLD,2,SUBFLD,0)) I $P(NODE,"^",9),$P(NODE,"^",8) S CNT=CNT+1 I CNT>1 S FLD("MULTIPLE SF")="YES" Q
"RTN","IBDF9B1",54,0)
 .Q:$P(FLD("NODE0"),"^",2)'=IBBLK
"RTN","IBDF9B1",55,0)
 .D RTNDESCR
"RTN","IBDF9B1",56,0)
 .I WP S IBX=+$P(FLD("NODE0"),"^",10),IBY=+$P(FLD("NODE0"),"^",11) D:$$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT)  Q
"RTN","IBDF9B1",57,0)
 ..S FLD("MULTIPLE SF")="NO"
"RTN","IBDF9B1",58,0)
 ..D SETARY
"RTN","IBDF9B1",59,0)
 .S SUBFLD=0 F  S SUBFLD=$O(^IBE(357.5,FLD,2,SUBFLD)) Q:QUIT!('SUBFLD)  D
"RTN","IBDF9B1",60,0)
 ..S SUBFLD("NODE0")=$G(^IBE(357.5,FLD,2,SUBFLD,0)) Q:SUBFLD("NODE0")=""
"RTN","IBDF9B1",61,0)
 ..S IBX=$P(SUBFLD("NODE0"),"^",7),IBY=$P(SUBFLD("NODE0"),"^",6) I IBX]"",IBY]"" I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D SETARY
"RTN","IBDF9B1",62,0)
 D PRINT
"RTN","IBDF9B1",63,0)
 K @ARY
"RTN","IBDF9B1",64,0)
 Q
"RTN","IBDF9B1",65,0)
RTNDESCR ;sets RTN=package interface and gets fields needed from the 0 node, sets the flags LIST, &  WP
"RTN","IBDF9B1",66,0)
 S RTN=$P(FLD("NODE0"),"^",3)
"RTN","IBDF9B1",67,0)
 I 'RTN S (WP,RTN("INTERFACE"),RTN("PRINT COMPLETE"),LIST,RTN("NODE0"))=0 Q
"RTN","IBDF9B1",68,0)
 S RTN("NODE0")=$G(^IBE(357.6,RTN,0))
"RTN","IBDF9B1",69,0)
 S LIST=$S("34"[$P(RTN("NODE0"),"^",7):1,1:0)
"RTN","IBDF9B1",70,0)
 S WP=$S($P(RTN("NODE0"),"^",7)=5:1,1:0)
"RTN","IBDF9B1",71,0)
 S RTN("INTERFACE")=$P(RTN("NODE0"),"^"),RTN("INTERFACE")=$E(RTN("INTERFACE"),$F(RTN("INTERFACE")," "),40)
"RTN","IBDF9B1",72,0)
 S RTN("PRINT COMPLETE")=$S($P(RTN("NODE0"),"^",8):"Y",1:"N")
"RTN","IBDF9B1",73,0)
 Q
"RTN","IBDF9B1",74,0)
PRINT ;prints @ARY
"RTN","IBDF9B1",75,0)
 N CNT,LINE S (QUIT,CNT)=0
"RTN","IBDF9B1",76,0)
 S COUNT=0 F  S COUNT=$O(@ARY@(COUNT)) Q:QUIT!('COUNT)  S IBY="" F  S IBY=$O(@ARY@(COUNT,IBY)) Q:QUIT!(IBY="")  D
"RTN","IBDF9B1",77,0)
 .S IBX="" F  S IBX=$O(@ARY@(COUNT,IBY,IBX)) Q:QUIT!(IBX="")  D
"RTN","IBDF9B1",78,0)
 ..S LINE=0 F  S LINE=$O(@ARY@(COUNT,IBY,IBX,LINE)) Q:'LINE  W !,$E($G(@ARY@(COUNT,IBY,IBX,LINE)),1,IOM) S CNT=LINE
"RTN","IBDF9B1",79,0)
 ..F  Q:(CNT>SCRNSIZE)  W ! S CNT=CNT+1
"RTN","IBDF9B1",80,0)
 ..S QUIT=$$PAUSE
"RTN","IBDF9B1",81,0)
 Q
"RTN","IBDF9B1",82,0)
PAUSE() ;pauses after each field discription is displayed
"RTN","IBDF9B1",83,0)
 N ANS
"RTN","IBDF9B1",84,0)
 R ANS:DTIME
"RTN","IBDF9B1",85,0)
 Q $S('$T:1,ANS["^":1,1:0)
"RTN","IBDF9B1",86,0)
SETARY ;writes data field description to @ARY
"RTN","IBDF9B1",87,0)
 N PIECE,DATA,LINE
"RTN","IBDF9B1",88,0)
 S COUNT=COUNT+1
"RTN","IBDF9B1",89,0)
 S @ARY@(COUNT,IBY,IBX,1)="Name of Data Field: "_FLD("NAME")_"     Multiple Subfields With Data: "_FLD("MULTIPLE SF")
"RTN","IBDF9B1",90,0)
 S LINE="Row: "_(IBY+1)_"  Column: "_(IBX+1)_"  Length: "_$S(WP:$P(FLD("NODE0"),"^",14)_"    Lines Allocated On Form: "_$P(FLD("NODE0"),"^",12),1:$P(SUBFLD("NODE0"),"^",8))
"RTN","IBDF9B1",91,0)
 S @ARY@(COUNT,IBY,IBX,2)=LINE_$S(LIST:"  Number On List: "_$P(FLD("NODE0"),"^",5)_"  Last On List To Print?: "_$S($P(FLD("NODE0"),"^",4):"Y",1:"N"),1:"")
"RTN","IBDF9B1",92,0)
 S @ARY@(COUNT,IBY,IBX,3)="Package Interface: "_RTN("INTERFACE")_"     Print Overflowed Data?: "_RTN("PRINT COMPLETE")
"RTN","IBDF9B1",93,0)
 I 'WP S DATA="",PIECE=$P(SUBFLD("NODE0"),"^",9) S:'PIECE PIECE=1 S:RTN DATA=$$DATANAME^IBDFU1B(RTN,PIECE) D
"RTN","IBDF9B1",94,0)
 .S @ARY@(COUNT,IBY,IBX,4)="Label"_$S($P(SUBFLD("NODE0"),"^",3)["I":" (not displayed): ",1:": ")_$P(SUBFLD("NODE0"),"^")_"   Data: "_DATA
"RTN","IBDF9B1",95,0)
 I WP,RTN S @ARY@(COUNT,IBY,IBX,4)=$G(^IBE(357.6,RTN,1,1,0)),@ARY@(COUNT,IBY,IBX,5)=$G(^IBE(357.6,RTN,1,2,0))
"RTN","IBDF9B1",96,0)
 Q
"RTN","IBDF9B2")
0^136^B11998465
"RTN","IBDF9B2",1,0)
IBDF9B2 ;ALB/CJM - ENCOUNTER FORM - (edit,delete,add multiple choice fields) ;JUL 20,1994
"RTN","IBDF9B2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF9B2",3,0)
 ;
"RTN","IBDF9B2",4,0)
MFIELD ;Create, Edit, or Delete a multiple choice field from the form
"RTN","IBDF9B2",5,0)
 ;
"RTN","IBDF9B2",6,0)
 N IBVALMBG,QUIT
"RTN","IBDF9B2",7,0)
 S IBVALMBG=VALMBG
"RTN","IBDF9B2",8,0)
 S QUIT=0
"RTN","IBDF9B2",9,0)
 S VALMBCK="R"
"RTN","IBDF9B2",10,0)
 ;
"RTN","IBDF9B2",11,0)
 F  D  Q:QUIT
"RTN","IBDF9B2",12,0)
 .D FULL^VALM1
"RTN","IBDF9B2",13,0)
 .K DIR S DIR("?",1)="You can Create, Edit, or Delete a multiple choice field, or Shift all of the",DIR("?")="multiple choice fields within a definable range either up or down."
"RTN","IBDF9B2",14,0)
 .W !!,DIR("?",1),!,DIR("?"),!
"RTN","IBDF9B2",15,0)
 .S DIR("B")="C",DIR(0)="SB^C:Create;E:Edit;D:Delete;S:Shift;Q:Quit",DIR("A")="[C]reate,   [D]elete,   [E]dit,   [S]hift,   [Q]uit"
"RTN","IBDF9B2",16,0)
 .D ^DIR K DIR I $D(DIRUT)!(Y<0) S QUIT=1 Q
"RTN","IBDF9B2",17,0)
 .I Y="Q" S QUIT=1 Q
"RTN","IBDF9B2",18,0)
 .D @$S(Y="C":"NEWFLD",Y="E":"EDITFLD",Y="D":"DLTFLD",Y="S":"SHIFT",1:"")
"RTN","IBDF9B2",19,0)
 .D RE^VALM4
"RTN","IBDF9B2",20,0)
 .D FULL^VALM1
"RTN","IBDF9B2",21,0)
 S VALMBCK="R",VALMBG=IBVALMBG
"RTN","IBDF9B2",22,0)
 Q
"RTN","IBDF9B2",23,0)
SHIFT ;expects IBBLK to be defined - shifts all input fields within range supplied by user
"RTN","IBDF9B2",24,0)
 D SHIFT^IBDF10("M")
"RTN","IBDF9B2",25,0)
 D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9B2",26,0)
 Q
"RTN","IBDF9B2",27,0)
EDITFLD ;expects IBBLK to be defined
"RTN","IBDF9B2",28,0)
 N IBFIELD,RTN,NODE
"RTN","IBDF9B2",29,0)
 N IBOLD,IBX,IBY,IBLEN,IBTYPE,IBLABEL,IBQUAL,IBID ;these are used in the input template
"RTN","IBDF9B2",30,0)
 D SELECT
"RTN","IBDF9B2",31,0)
 I IBFIELD D
"RTN","IBDF9B2",32,0)
 .D RE^VALM4
"RTN","IBDF9B2",33,0)
 .S (IBX,IBY,IBLEN)=0
"RTN","IBDF9B2",34,0)
 .S IBOLD=1,IBTYPE=$P($G(^IBE(357.93,IBFIELD,0)),"^",6)
"RTN","IBDF9B2",35,0)
 .K DR,DIE,DA S DIE=357.93,DA=IBFIELD,DR="[IBDF EDIT MULT CHOICE FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA,DIC
"RTN","IBDF9B2",36,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9B2",37,0)
 Q
"RTN","IBDF9B2",38,0)
SELECT ;
"RTN","IBDF9B2",39,0)
 S IBFIELD=0
"RTN","IBDF9B2",40,0)
 Q:'$G(IBBLK)
"RTN","IBDF9B2",41,0)
 I '$O(^IBE(357.93,"C",IBBLK,0)) W !,"There is no multiple choice field!" D PAUSE^IBDFU5 Q
"RTN","IBDF9B2",42,0)
AGAIN K DIC S DIC="^IBE(357.93,",DIC(0)="EFQ",DIC("B")="",D="C",X=IBBLK
"RTN","IBDF9B2",43,0)
 S DIC("S")="I $P($G(^(0)),U,8)=IBBLK"
"RTN","IBDF9B2",44,0)
 D IX^DIC K DIC
"RTN","IBDF9B2",45,0)
 S:+Y>0 IBFIELD=+Y
"RTN","IBDF9B2",46,0)
 I 'IBFIELD,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No multiple choice field selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
"RTN","IBDF9B2",47,0)
 Q
"RTN","IBDF9B2",48,0)
DLTFLD ;expects IBBLK to be defined
"RTN","IBDF9B2",49,0)
 N IBFIELD
"RTN","IBDF9B2",50,0)
 D SELECT
"RTN","IBDF9B2",51,0)
 I IBFIELD D
"RTN","IBDF9B2",52,0)
 .Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.93,IBFIELD,0)),"^"))
"RTN","IBDF9B2",53,0)
 .D DLTIFLD^IBDFU3(357.93,IBBLK,IBFIELD)
"RTN","IBDF9B2",54,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9B2",55,0)
 Q
"RTN","IBDF9B2",56,0)
NEWFLD ;adds a new field, expects IBBLK to be defined
"RTN","IBDF9B2",57,0)
 N NAME,FIELD,NODE,IBRTN,DLAYGO
"RTN","IBDF9B2",58,0)
 N IBX,IBY,IBLEN,IBOLD,IBTYPE,IBLABEL,IBQUAL,IBID ;these are used in the input template
"RTN","IBDF9B2",59,0)
 S NAME=$$NEWNAME^IBDF9B
"RTN","IBDF9B2",60,0)
 Q:NAME=-1
"RTN","IBDF9B2",61,0)
 S IBOLD=0,(IBX,IBY,IBLEN)=""
"RTN","IBDF9B2",62,0)
 K DIC,DIE,DD,DO,DINUM S DIC="^IBE(357.93,",DIC(0)="FL",X=NAME,DLAYGO=357.93
"RTN","IBDF9B2",63,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDF9B2",64,0)
 S FIELD=$S(+Y<0:"",1:+Y)
"RTN","IBDF9B2",65,0)
 I 'FIELD D
"RTN","IBDF9B2",66,0)
 .W !,"Unable to create a new input field!" D PAUSE^IBDFU5
"RTN","IBDF9B2",67,0)
 I FIELD D
"RTN","IBDF9B2",68,0)
 .K DIE,DA,DR S DIE=357.93,DA=FIELD,DR="[IBDF EDIT MULT CHOICE FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA,DIC
"RTN","IBDF9B2",69,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9B2",70,0)
 Q
"RTN","IBDF9B3")
0^137^B10685448
"RTN","IBDF9B3",1,0)
IBDF9B3 ;ALB/CJM - ENCOUNTER FORM - (edit,delete,add data fields) ;FEB 1,1993
"RTN","IBDF9B3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF9B3",3,0)
 ;
"RTN","IBDF9B3",4,0)
LABELS ;Create, Edit, or Delete LABELS from the form
"RTN","IBDF9B3",5,0)
 I Y="I" D LABELS^IBDF9B3 Q
"RTN","IBDF9B3",6,0)
 ;
"RTN","IBDF9B3",7,0)
 N IBVALMBG,QUIT
"RTN","IBDF9B3",8,0)
 S QUIT=0
"RTN","IBDF9B3",9,0)
 S IBVALMBG=VALMBG
"RTN","IBDF9B3",10,0)
 S VALMBCK="R"
"RTN","IBDF9B3",11,0)
 ;
"RTN","IBDF9B3",12,0)
 F  D  Q:QUIT
"RTN","IBDF9B3",13,0)
 .D FULL^VALM1
"RTN","IBDF9B3",14,0)
 .K DIR S DIR("?",1)="You can Create, Edit, or Delete labels, Shift all of the labels AND data",DIR("?")="fields within a range up or down."
"RTN","IBDF9B3",15,0)
 .W !!,DIR("?",1),!,DIR("?"),!
"RTN","IBDF9B3",16,0)
 .S DIR("B")="C",DIR(0)="SB^C:Create;E:Edit;D:Delete;S:Shift;Q:Quit",DIR("A")="[C]reate,  [D]elete,  [E]dit,   [S]hift,  [Q]uit"
"RTN","IBDF9B3",17,0)
 .D ^DIR K DIR I $D(DIRUT)!(Y<0) S QUIT=1 Q
"RTN","IBDF9B3",18,0)
 .I Y="Q" S QUIT=1 Q
"RTN","IBDF9B3",19,0)
 .D @$S(Y="C":"NEWFLD",Y="E":"EDITFLD",Y="D":"DLTFLD",Y="S":"SHIFT",1:"")
"RTN","IBDF9B3",20,0)
 .D RE^VALM4
"RTN","IBDF9B3",21,0)
 S VALMBCK="R",VALMBG=IBVALMBG
"RTN","IBDF9B3",22,0)
 Q
"RTN","IBDF9B3",23,0)
SHIFT ;expects IBBLK to be defined - shifts all fields within range supplied by user
"RTN","IBDF9B3",24,0)
 D SHIFT^IBDF10("D")
"RTN","IBDF9B3",25,0)
 D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9B3",26,0)
 Q
"RTN","IBDF9B3",27,0)
EDITFLD ;expects IBBLK to be defined
"RTN","IBDF9B3",28,0)
 N IBFIELD,NOD
"RTN","IBDF9B3",29,0)
 N IBI,IBOLD,IBX,IBY,IBW,IBDELETE ;these are used in the input template
"RTN","IBDF9B3",30,0)
 D SELECT
"RTN","IBDF9B3",31,0)
 I IBFIELD D
"RTN","IBDF9B3",32,0)
 .D RE^VALM4
"RTN","IBDF9B3",33,0)
 .S IBOLD=1,(IBX,IBY)=""
"RTN","IBDF9B3",34,0)
 .K DR,DIE,DA S DIE=357.5,DA=IBFIELD,DR="[IBDF EDIT LABEL FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF9B3",35,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9B3",36,0)
 Q
"RTN","IBDF9B3",37,0)
SELECT ;
"RTN","IBDF9B3",38,0)
 S IBFIELD=0
"RTN","IBDF9B3",39,0)
 Q:'$G(IBBLK)
"RTN","IBDF9B3",40,0)
 I '$O(^IBE(357.5,"C",IBBLK,0)) W !,"There is no label only field!" D PAUSE^IBDFU5 Q
"RTN","IBDF9B3",41,0)
AGAIN K DIC S DIC="^IBE(357.5,",DIC(0)="EFQ",DIC("B")="",D="C",X=IBBLK
"RTN","IBDF9B3",42,0)
 S DIC("S")="I $P(^(0),U,2)=IBBLK,+$P(^(0),U,3)=0"
"RTN","IBDF9B3",43,0)
 D IX^DIC K DIC
"RTN","IBDF9B3",44,0)
 S:+Y>0 IBFIELD=+Y
"RTN","IBDF9B3",45,0)
 I 'IBFIELD,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No label selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
"RTN","IBDF9B3",46,0)
 Q
"RTN","IBDF9B3",47,0)
DLTFLD ;expects IBBLK to be defined
"RTN","IBDF9B3",48,0)
 N IBFIELD
"RTN","IBDF9B3",49,0)
 D SELECT
"RTN","IBDF9B3",50,0)
 I IBFIELD D
"RTN","IBDF9B3",51,0)
 .Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.5,IBFIELD,0)),"^"))
"RTN","IBDF9B3",52,0)
 .D DLTFLD^IBDFU3(357.5,IBBLK,IBFIELD)
"RTN","IBDF9B3",53,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9B3",54,0)
 Q
"RTN","IBDF9B3",55,0)
NEWFLD ;adds a new field, expects IBBLK to be defined
"RTN","IBDF9B3",56,0)
 N NAME,FIELD,NODE,IBRTN,DLAYGO
"RTN","IBDF9B3",57,0)
 N IBX,IBY,IBW,IBDELETE,IBOLD ;these are used in the input template
"RTN","IBDF9B3",58,0)
 S NAME=$$NEWNAME^IBDF9B Q:NAME=-1
"RTN","IBDF9B3",59,0)
 S IBOLD=0,(IBX,IBY)=""
"RTN","IBDF9B3",60,0)
 K DIC,DIE,DD,DO,DINUM S DIC="^IBE(357.5,",DIC(0)="FL",X=NAME,DLAYGO=357.5
"RTN","IBDF9B3",61,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDF9B3",62,0)
 S FIELD=$S(+Y<0:"",1:+Y)
"RTN","IBDF9B3",63,0)
 I 'FIELD D
"RTN","IBDF9B3",64,0)
 .W !,"Unable to create a new label!" D PAUSE^IBDFU5
"RTN","IBDF9B3",65,0)
 I FIELD D
"RTN","IBDF9B3",66,0)
 .S IBDELETE=1
"RTN","IBDF9B3",67,0)
 .D RE^VALM4
"RTN","IBDF9B3",68,0)
 .K DIE,DA,DR S DIE=357.5,DA=FIELD,DR="[IBDF EDIT LABEL FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA,DIC
"RTN","IBDF9B3",69,0)
 .I IBDELETE K DA S DIK="^IBE(357.5,",DA=FIELD D ^DIK K DIK,DA Q
"RTN","IBDF9B3",70,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9B3",71,0)
 Q
"RTN","IBDF9B4")
0^138^B12555749
"RTN","IBDF9B4",1,0)
IBDF9B4 ;ALB/CJM - ENCOUNTER FORM - (edit,delete,add Hand Print fields) ;JUL 20,1994
"RTN","IBDF9B4",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF9B4",3,0)
 ;
"RTN","IBDF9B4",4,0)
HFIELD ;Create, Edit, or Delete a Hand Print field from the form
"RTN","IBDF9B4",5,0)
 ;
"RTN","IBDF9B4",6,0)
 N IBVALMBG,QUIT
"RTN","IBDF9B4",7,0)
 S IBVALMBG=VALMBG
"RTN","IBDF9B4",8,0)
 S QUIT=0
"RTN","IBDF9B4",9,0)
 S VALMBCK="R"
"RTN","IBDF9B4",10,0)
 ;
"RTN","IBDF9B4",11,0)
 F  D  Q:QUIT
"RTN","IBDF9B4",12,0)
 .D FULL^VALM1
"RTN","IBDF9B4",13,0)
 .K DIR S DIR("?",1)="You can Create, Edit, or Delete an hand print field, or Shift all of the hand print fields",DIR("?")="within a definable range either up or down."
"RTN","IBDF9B4",14,0)
 .W !!,DIR("?",1),!,DIR("?"),!
"RTN","IBDF9B4",15,0)
 .S DIR("B")="C",DIR(0)="SB^C:Create;E:Edit;D:Delete;S:Shift;Q:Quit",DIR("A")="[C]reate,   [D]elete,   [E]dit,   [S]hift,   [Q]uit"
"RTN","IBDF9B4",16,0)
 .D ^DIR K DIR I $D(DIRUT)!(Y<0) S QUIT=1 Q
"RTN","IBDF9B4",17,0)
 .I Y="Q" S QUIT=1 Q
"RTN","IBDF9B4",18,0)
 .D @$S(Y="C":"NEWFLD",Y="E":"EDITFLD",Y="D":"DLTFLD",Y="S":"SHIFT",1:"")
"RTN","IBDF9B4",19,0)
 .D RE^VALM4
"RTN","IBDF9B4",20,0)
 S VALMBCK="R",VALMBG=IBVALMBG
"RTN","IBDF9B4",21,0)
 Q
"RTN","IBDF9B4",22,0)
SHIFT ;expects IBBLK to be defined - shifts all hand print fields within range supplied by user
"RTN","IBDF9B4",23,0)
 D SHIFT^IBDF10("H")
"RTN","IBDF9B4",24,0)
 D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9B4",25,0)
 Q
"RTN","IBDF9B4",26,0)
EDITFLD ;expects IBBLK to be defined
"RTN","IBDF9B4",27,0)
 N IBFIELD,RTN,NODE
"RTN","IBDF9B4",28,0)
 N IBOLD,IBDELETE,IBX,IBY,IBLEN,IBTYPE ;these are used in the input template
"RTN","IBDF9B4",29,0)
 D SELECT
"RTN","IBDF9B4",30,0)
 I IBFIELD D
"RTN","IBDF9B4",31,0)
 .D RE^VALM4
"RTN","IBDF9B4",32,0)
 .S (IBX,IBY,IBLEN)=0
"RTN","IBDF9B4",33,0)
 .S IBOLD=1,IBTYPE=$P($G(^IBE(359.94,IBFIELD,0)),"^",5)
"RTN","IBDF9B4",34,0)
 .K DR,DIE,DA S DIE=359.94,DA=IBFIELD,DR="[IBDF EDIT HAND PRINT FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF9B4",35,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9B4",36,0)
 Q
"RTN","IBDF9B4",37,0)
SELECT ;
"RTN","IBDF9B4",38,0)
 S IBFIELD=0
"RTN","IBDF9B4",39,0)
 Q:'$G(IBBLK)
"RTN","IBDF9B4",40,0)
 I '$O(^IBE(359.94,"C",IBBLK,0)) W !,"There is no hand print field!" D PAUSE^IBDFU5 Q
"RTN","IBDF9B4",41,0)
AGAIN K DIC S DIC="^IBE(359.94,",DIC(0)="EFQ",DIC("B")="",D="C",X=IBBLK
"RTN","IBDF9B4",42,0)
 S DIC("S")="I $P($G(^(0)),U,8)=IBBLK"
"RTN","IBDF9B4",43,0)
 D IX^DIC K DIC
"RTN","IBDF9B4",44,0)
 S:+Y>0 IBFIELD=+Y
"RTN","IBDF9B4",45,0)
 I 'IBFIELD,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No hand print field selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
"RTN","IBDF9B4",46,0)
 Q
"RTN","IBDF9B4",47,0)
DLTFLD ;expects IBBLK to be defined
"RTN","IBDF9B4",48,0)
 N IBFIELD
"RTN","IBDF9B4",49,0)
 D SELECT
"RTN","IBDF9B4",50,0)
 I IBFIELD D
"RTN","IBDF9B4",51,0)
 .Q:'$$RUSURE^IBDFU5($P($G(^IBE(359.94,IBFIELD,0)),"^"))
"RTN","IBDF9B4",52,0)
 .D DLTHFLD^IBDFU3(359.94,IBBLK,IBFIELD)
"RTN","IBDF9B4",53,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9B4",54,0)
 Q
"RTN","IBDF9B4",55,0)
NEWFLD ;adds a new field, expects IBBLK to be defined
"RTN","IBDF9B4",56,0)
 N NAME,FIELD,NODE,IBRTN,DLAYGO
"RTN","IBDF9B4",57,0)
 N IBX,IBY,IBLEN,IBDELETE,IBOLD,IBTYPE ;these are used in the input template
"RTN","IBDF9B4",58,0)
 S NAME=$$NEWNAME^IBDF9B Q:NAME=-1
"RTN","IBDF9B4",59,0)
 S IBOLD=0,(IBX,IBY,IBLEN)=""
"RTN","IBDF9B4",60,0)
 K DIC,DIE,DD,DO,DINUM S DIC="^IBE(359.94,",DIC(0)="FL",X=NAME,DLAYGO=359.94
"RTN","IBDF9B4",61,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDF9B4",62,0)
 S FIELD=$S(+Y<0:"",1:+Y)
"RTN","IBDF9B4",63,0)
 I 'FIELD D
"RTN","IBDF9B4",64,0)
 .W !,"Unable to create a new hand print field!" D PAUSE^IBDFU5
"RTN","IBDF9B4",65,0)
 I FIELD D
"RTN","IBDF9B4",66,0)
 .S IBDELETE=1
"RTN","IBDF9B4",67,0)
 .K DIE,DA,DR S DIE=359.94,DA=FIELD,DR="[IBDF EDIT HAND PRINT FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA,DIC
"RTN","IBDF9B4",68,0)
 .I IBDELETE K DA S DIK="^IBE(359.94,",DA=FIELD D ^DIK K DIK,DA Q
"RTN","IBDF9B4",69,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9B4",70,0)
 Q
"RTN","IBDF9B4",71,0)
 ;
"RTN","IBDF9B4",72,0)
LENGTHDT(TYPE) ;
"RTN","IBDF9B4",73,0)
 Q:'$G(TYPE) 0
"RTN","IBDF9B4",74,0)
 N NODE,LEN
"RTN","IBDF9B4",75,0)
 S NODE=$G(^IBE(359.1,TYPE,0))
"RTN","IBDF9B4",76,0)
 S LEN=$L($P(NODE,"^",11))
"RTN","IBDF9B4",77,0)
 S:LEN LEN=LEN+1
"RTN","IBDF9B4",78,0)
 S LEN=LEN+(4*$P(NODE,"^",6))
"RTN","IBDF9B4",79,0)
 Q LEN
"RTN","IBDF9C")
0^139^B9373619
"RTN","IBDF9C",1,0)
IBDF9C ;ALB/CJM - ENCOUNTER FORM - (edit header block) ;FEB 1,1993
"RTN","IBDF9C",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF9C",3,0)
 ;
"RTN","IBDF9C",4,0)
EDITHDR ;edit the header block
"RTN","IBDF9C",5,0)
 N HDRBLK,HDRFLD,TOP1,BOT1,TOP2,BOT2,HDRLINES,MAXLEN,QUIT,NEWBLOCK
"RTN","IBDF9C",6,0)
 S VALMBCK="R",(TOP1,TOP2,BOT1,BOT2,QUIT,NEWBLOCK)=0
"RTN","IBDF9C",7,0)
 D FULL^VALM1
"RTN","IBDF9C",8,0)
 S HDRBLK=$$FINDBLK I 'HDRBLK S HDRBLK=$$MAKEBLK I 'HDRBLK Q
"RTN","IBDF9C",9,0)
 D TOPNBOT^IBDFU5(HDRBLK,.TOP1,.BOT1)
"RTN","IBDF9C",10,0)
 S HDRFLD=$$FINDFLD I 'HDRFLD S HDRFLD=$$MAKEFLD I 'HDRFLD Q
"RTN","IBDF9C",11,0)
 D EDITFLD
"RTN","IBDF9C",12,0)
 D:'QUIT EDITBLK,MOVEFLD
"RTN","IBDF9C",13,0)
 I HDRBLK D TOPNBOT^IBDFU5(HDRBLK,.TOP2,.BOT2),UNCMPBLK^IBDF19(HDRBLK)
"RTN","IBDF9C",14,0)
 D IDXFORM^IBDF5A($S(TOP1<TOP2:TOP1,1:TOP2),$S(BOT1>BOT2:BOT1,1:BOT2))
"RTN","IBDF9C",15,0)
 S VALMBCK="R"
"RTN","IBDF9C",16,0)
 Q
"RTN","IBDF9C",17,0)
FINDBLK() ;
"RTN","IBDF9C",18,0)
 S HDRBLK="" F  S HDRBLK=$O(^IBE(357.1,"C",IBFORM,HDRBLK)) Q:'HDRBLK  Q:$P($G(^IBE(357.1,HDRBLK,0)),"^")="HEADER"
"RTN","IBDF9C",19,0)
 Q HDRBLK
"RTN","IBDF9C",20,0)
MAKEBLK() ;
"RTN","IBDF9C",21,0)
 S NEWBLOCK=1
"RTN","IBDF9C",22,0)
 K DIC,DD,DO,DINUM S DIC="^IBE(357.1,",X="HEADER",DIC(0)="",DIC("DR")=".02////"_IBFORM
"RTN","IBDF9C",23,0)
 D FILE^DICN K DIC,DIE
"RTN","IBDF9C",24,0)
 Q $S(+Y<0:"",1:+Y)
"RTN","IBDF9C",25,0)
FINDFLD() ;
"RTN","IBDF9C",26,0)
 S HDRFLD="" F  S HDRFLD=$O(^IBE(357.5,"C",HDRBLK,HDRFLD)) Q:'HDRFLD  Q:$P($G(^IBE(357.5,HDRFLD,0)),"^")="HEADER"
"RTN","IBDF9C",27,0)
 Q HDRFLD
"RTN","IBDF9C",28,0)
MAKEFLD() ;
"RTN","IBDF9C",29,0)
 K DIC,DD,DO,DINUM S DIC="^IBE(357.5,",X="HEADER",DIC(0)="",DIC("DR")=".02////"_HDRBLK
"RTN","IBDF9C",30,0)
 D FILE^DICN K DIC,DIE
"RTN","IBDF9C",31,0)
 Q $S(+Y<0:"",1:+Y)
"RTN","IBDF9C",32,0)
EDITFLD ;allows the user to edit the header lines
"RTN","IBDF9C",33,0)
 N NODE,SUBFLD
"RTN","IBDF9C",34,0)
 K DIE,DA S DIE=357.5,DA=HDRFLD,DR="[IBDF EDIT FORM HEADER]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF9C",35,0)
 ;find the number of lines and the maximum length
"RTN","IBDF9C",36,0)
 S (HDRLINES,MAXLEN)=0
"RTN","IBDF9C",37,0)
 S SUBFLD=0 F  S SUBFLD=$O(^IBE(357.5,HDRFLD,2,SUBFLD)) Q:'SUBFLD  S NODE=$G(^(SUBFLD,0)) I NODE'="" S HDRLINES=HDRLINES+1 S MAXLEN=$S(MAXLEN>$L($P(NODE,"^",1)):MAXLEN,1:$L($P(NODE,"^",1)))
"RTN","IBDF9C",38,0)
 I 'MAXLEN D DLTBLK^IBDFU3(HDRBLK,IBFORM,357.1) S QUIT=1,HDRBLK=""
"RTN","IBDF9C",39,0)
 Q
"RTN","IBDF9C",40,0)
EDITBLK ;allows the user to position the header block & draw a box around it
"RTN","IBDF9C",41,0)
 N IBBOX,IBDELETE
"RTN","IBDF9C",42,0)
 S IBBOX=0,IBDELETE=1
"RTN","IBDF9C",43,0)
 D RE^VALM4
"RTN","IBDF9C",44,0)
 K DIE,DA S DIE=357.1,DA=HDRBLK,DR="[IBDF EDIT HEADER BLOCK]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF9C",45,0)
 I IBDELETE,NEWBLOCK D DLTBLK^IBDFU3(HDRBLK,IBFORM,357.1)
"RTN","IBDF9C",46,0)
 Q
"RTN","IBDF9C",47,0)
DFLTCOL() ;finds the column that would center the header block
"RTN","IBDF9C",48,0)
 Q ((IBFORM("WIDTH")-(+$G(MAXLEN)+(+$G(IBBOX))))\2)+1
"RTN","IBDF9C",49,0)
MOVEFLD ;centers each header line in the block
"RTN","IBDF9C",50,0)
 N START,SUBFLD,HDR,LINES
"RTN","IBDF9C",51,0)
 S LINES=0
"RTN","IBDF9C",52,0)
 S START=$S($P($G(^IBE(357.1,HDRBLK,0)),"^",10)=1:1,1:0)
"RTN","IBDF9C",53,0)
 S SUBFLD=0
"RTN","IBDF9C",54,0)
 F  S SUBFLD=$O(^IBE(357.5,HDRFLD,2,SUBFLD)) Q:'SUBFLD  S NODE=$G(^IBE(357.5,HDRFLD,2,SUBFLD,0)),HDR=$P(NODE,"^",1) D
"RTN","IBDF9C",55,0)
 .I HDR'="" S $P(NODE,"^",4)=((MAXLEN-$L(HDR))\2)+START,$P(NODE,"^",5)=LINES+START,LINES=LINES+1 S ^IBE(357.5,HDRFLD,2,SUBFLD,0)=NODE
"RTN","IBDF9C",56,0)
 Q
"RTN","IBDF9D")
0^140^B10416171
"RTN","IBDF9D",1,0)
IBDF9D ;ALB/CJM - ENCOUNTER FORM (create/edit/delete lines);MARCH 20, 1993
"RTN","IBDF9D",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF9D",3,0)
LINE ;Create, Edit, or Delete a line on the block
"RTN","IBDF9D",4,0)
 S VALMBCK="R"
"RTN","IBDF9D",5,0)
 K DIR S DIR("?",1)="You can add vertical or horizontal lines to the block, or edit or delete",DIR("?")="a line already there IF it was created through this action."
"RTN","IBDF9D",6,0)
 S DIR("B")="C",DIR(0)="SB^C:Create;E:Edit;D:Delete",DIR("A")="[C]reate , [D]elete, or [E]dit a line"
"RTN","IBDF9D",7,0)
 D ^DIR K DIR I $D(DIRUT)!(Y<0) Q
"RTN","IBDF9D",8,0)
 D @$S(Y="C":"NEWLINE",Y="E":"EDITLINE",Y="D":"DLTLINE",1:"")
"RTN","IBDF9D",9,0)
 S VALMBCK="R"
"RTN","IBDF9D",10,0)
 Q
"RTN","IBDF9D",11,0)
EDITLINE ;expects IBBLK to be defined - edits an already existing line
"RTN","IBDF9D",12,0)
 N IBLINE,IBDFDONE
"RTN","IBDF9D",13,0)
 ;IBDFDONE is used in the imput template
"RTN","IBDF9D",14,0)
 D FULL^VALM1
"RTN","IBDF9D",15,0)
 D SELECT
"RTN","IBDF9D",16,0)
 I IBLINE D
"RTN","IBDF9D",17,0)
 .D RE^VALM4
"RTN","IBDF9D",18,0)
 .K DIE,DA S DIE=357.7,DA=IBLINE,DR="[IBDF FORM LINE]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF9D",19,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9D",20,0)
 Q
"RTN","IBDF9D",21,0)
SELECT ;select a line on the block
"RTN","IBDF9D",22,0)
 S IBLINE=0
"RTN","IBDF9D",23,0)
 Q:'$G(IBBLK)
"RTN","IBDF9D",24,0)
 I '$O(^IBE(357.7,"C",IBBLK,0)) W !,"There is no line!" D PAUSE^IBDFU5 Q
"RTN","IBDF9D",25,0)
AGAIN K DIC S DIC="^IBE(357.7,",DIC(0)="EFQ",DIC("B")="",D="C",X=IBBLK
"RTN","IBDF9D",26,0)
 S DIC("S")="I $P($G(^(0)),U,6)=IBBLK"
"RTN","IBDF9D",27,0)
 D IX^DIC K DIC
"RTN","IBDF9D",28,0)
 S:+Y>0 IBLINE=+Y
"RTN","IBDF9D",29,0)
 I 'IBLINE,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No data line selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
"RTN","IBDF9D",30,0)
 Q
"RTN","IBDF9D",31,0)
DLTLINE ;expects IBBLK to be defined - deletes one of the blocks lines
"RTN","IBDF9D",32,0)
 N IBLINE
"RTN","IBDF9D",33,0)
 D FULL^VALM1
"RTN","IBDF9D",34,0)
 D SELECT
"RTN","IBDF9D",35,0)
 I IBLINE D
"RTN","IBDF9D",36,0)
 .Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.7,IBLINE,0)),"^"))
"RTN","IBDF9D",37,0)
 .D DLTLINE^IBDFU3(357.7,IBBLK,IBLINE)
"RTN","IBDF9D",38,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9D",39,0)
 Q
"RTN","IBDF9D",40,0)
NEWLINE ;adds a new line, expects IBBLK to be defined
"RTN","IBDF9D",41,0)
 N IBLINE,NODE,IBDFDONE,DLAYGO
"RTN","IBDF9D",42,0)
 ;IBDONE - a flag used in the input template to indicate if the input template was completed - delete the line if not completed
"RTN","IBDF9D",43,0)
 ;S NAME=$$NEWNAME Q:NAME=-1
"RTN","IBDF9D",44,0)
 K DIC,DIE,DD,DO,DINUM S DIC="^IBE(357.7,",DIC(0)="FL",X="NAME",DLAYGO=357.7
"RTN","IBDF9D",45,0)
 D FILE^DICN K DIC,DIE,DA,DO
"RTN","IBDF9D",46,0)
 S IBLINE=+Y
"RTN","IBDF9D",47,0)
 I 'IBLINE D
"RTN","IBDF9D",48,0)
 .W !,"Unable to create a new line!" D PAUSE^IBDFU5
"RTN","IBDF9D",49,0)
 I IBLINE D
"RTN","IBDF9D",50,0)
 .K DIE,DA S DIE=357.7,DA=IBLINE,DR="[IBDF FORM LINE]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF9D",51,0)
 .I 'IBDFDONE K DA S DIK="^IBE(357.7,",DA=IBLINE D ^DIK K DIK Q
"RTN","IBDF9D",52,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9D",53,0)
 Q
"RTN","IBDF9D",54,0)
NEWNAME(IBLINE) ;
"RTN","IBDF9D",55,0)
 N NODE,NAME S NODE=$G(^IBE(357.7,IBLINE,0))
"RTN","IBDF9D",56,0)
 Q:NODE="" "LINE"
"RTN","IBDF9D",57,0)
 S NAME=$P(NODE,"^",4)_"("_(+$P(NODE,"^",3)+1)_","_(+$P(NODE,"^",2)+1)_")"
"RTN","IBDF9D",58,0)
 Q NAME
"RTN","IBDF9D",59,0)
MAXLEN() ;returns the maximum length of the line=IBLINE that will fit in the block=IBBLK
"RTN","IBDF9D",60,0)
 N LEN,TYPE,NODE,POS
"RTN","IBDF9D",61,0)
 S NODE=$G(^IBE(357.7,IBLINE,0))
"RTN","IBDF9D",62,0)
 S TYPE=$P(NODE,"^",4)
"RTN","IBDF9D",63,0)
 S POS=$S(TYPE="H":$P(NODE,"^",2),1:$P(NODE,"^",3))
"RTN","IBDF9D",64,0)
 Q ((1+$S(TYPE="H":$$MAXX^IBDFU1B,1:$$MAXY^IBDFU1B))-POS)
"RTN","IBDF9D",65,0)
 ;
"RTN","IBDF9D",66,0)
TOOMANY() ;are there too many lines in the box? returns 0 or 1
"RTN","IBDF9D",67,0)
 ;IBBLK is assumed to be defined=the block
"RTN","IBDF9D",68,0)
 N SPACING,NODE,START,NUMBER
"RTN","IBDF9D",69,0)
 Q:'$G(IBLINE) 0
"RTN","IBDF9D",70,0)
 Q:'$G(IBBLK) 0
"RTN","IBDF9D",71,0)
 S NODE=$G(^IBE(357.7,IBLINE,0))
"RTN","IBDF9D",72,0)
 S START=$P(NODE,"^",3),SPACING=$P(NODE,"^",8),NUMBER=$P(NODE,"^",7)
"RTN","IBDF9D",73,0)
 S SPACING=$S(SPACING="d":2,SPACING="t":3,1:1)
"RTN","IBDF9D",74,0)
 I (START+(SPACING*NUMBER)-(SPACING-1))>$$MAXY^IBDFU1B
"RTN","IBDF9D",75,0)
 Q $T
"RTN","IBDF9E")
0^141^B12821108
"RTN","IBDF9E",1,0)
IBDF9E ;ALB/CJM - ENCOUNTER FORM (create/edit/delete text areas);MARCH 20, 1993
"RTN","IBDF9E",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDF9E",3,0)
TEXT ;Create, Edit, or Delete a text area on a block
"RTN","IBDF9E",4,0)
 S VALMBCK="R"
"RTN","IBDF9E",5,0)
 K DIR S DIR("?")="You can add text areas to the block, or edit or delete a text area already there."
"RTN","IBDF9E",6,0)
 S DIR("B")="C",DIR(0)="SB^C:Create;E:Edit;D:Delete",DIR("A")="[C]reate , [D]elete, or [E]dit a text area"
"RTN","IBDF9E",7,0)
 D ^DIR K DIR I $D(DIRUT)!(Y<0) Q
"RTN","IBDF9E",8,0)
 D @$S(Y="C":"NEWTEXT",Y="E":"EDITTEXT",Y="D":"DLTTEXT",1:"")
"RTN","IBDF9E",9,0)
 S VALMBCK="R"
"RTN","IBDF9E",10,0)
 Q
"RTN","IBDF9E",11,0)
EDITTEXT ;expects IBBLK to be defined
"RTN","IBDF9E",12,0)
 N IBTEXT,IBDELETE
"RTN","IBDF9E",13,0)
 ;IBDELETE is used in the imput template
"RTN","IBDF9E",14,0)
 D FULL^VALM1
"RTN","IBDF9E",15,0)
 D SELECT
"RTN","IBDF9E",16,0)
 I IBTEXT D
"RTN","IBDF9E",17,0)
 .D RE^VALM4
"RTN","IBDF9E",18,0)
 .K DIE,DA S DIE=357.8,DA=IBTEXT,DR="[IBDF EDIT TEXT AREA]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF9E",19,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9E",20,0)
 Q
"RTN","IBDF9E",21,0)
SELECT ;select a text area on the block
"RTN","IBDF9E",22,0)
 S IBTEXT=0
"RTN","IBDF9E",23,0)
 Q:'$G(IBBLK)
"RTN","IBDF9E",24,0)
 I '$O(^IBE(357.8,"C",IBBLK,0)) W !,"There is no text area!" D PAUSE^IBDFU5 Q
"RTN","IBDF9E",25,0)
AGAIN S DIC="^IBE(357.8,",DIC(0)="EFQ",DIC("B")="",D="C",X=IBBLK
"RTN","IBDF9E",26,0)
 D IX^DIC K DIC
"RTN","IBDF9E",27,0)
 S:+Y>0 IBTEXT=+Y
"RTN","IBDF9E",28,0)
 I 'IBTEXT,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No text area selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
"RTN","IBDF9E",29,0)
 Q
"RTN","IBDF9E",30,0)
DLTTEXT ;delete a text area - expects IBBLK to be defined
"RTN","IBDF9E",31,0)
 N IBTEXT
"RTN","IBDF9E",32,0)
 D FULL^VALM1
"RTN","IBDF9E",33,0)
 D SELECT
"RTN","IBDF9E",34,0)
 I IBTEXT D
"RTN","IBDF9E",35,0)
 .Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.8,IBTEXT,0)),"^"))
"RTN","IBDF9E",36,0)
 .D DLTTEXT^IBDFU3(357.8,IBBLK,IBTEXT)
"RTN","IBDF9E",37,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9E",38,0)
 Q
"RTN","IBDF9E",39,0)
NEWTEXT ;adds a new text area, expects IBBLK to be defined
"RTN","IBDF9E",40,0)
 N NAME,IBTEXT,NODE,IBDELETE,DLAYGO
"RTN","IBDF9E",41,0)
 ;IBDELETE - a flag used in the input template to indicate if the input template was completed - if returns 1 delete the record 
"RTN","IBDF9E",42,0)
 S NAME=$$NEWNAME Q:NAME=-1
"RTN","IBDF9E",43,0)
 K DIC,DIE,DD,D0,DINUM S DIC="^IBE(357.8,",DIC(0)="FL",X=NAME,DLAYGO=357.8
"RTN","IBDF9E",44,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDF9E",45,0)
 S IBTEXT=$S(+Y<0:"",1:+Y)
"RTN","IBDF9E",46,0)
 I 'IBTEXT D
"RTN","IBDF9E",47,0)
 .W !,"Unable to create a text area!" D PAUSE^IBDFU5
"RTN","IBDF9E",48,0)
 I IBTEXT D
"RTN","IBDF9E",49,0)
 .K DIE,DA S DIE=357.8,DA=IBTEXT,DR="[IBDF EDIT TEXT AREA]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF9E",50,0)
 .I IBDELETE K DA S DIK="^IBE(357.8,",DA=IBTEXT D ^DIK K DIK Q
"RTN","IBDF9E",51,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9E",52,0)
 Q
"RTN","IBDF9E",53,0)
NEWNAME() ;
"RTN","IBDF9E",54,0)
 K DIR S DIR(0)="357.8,.01A",DIR("A")="New Text Area Name: ",DIR("B")=""
"RTN","IBDF9E",55,0)
 D ^DIR K DIR I $D(DIRUT) Q -1
"RTN","IBDF9E",56,0)
 Q Y
"RTN","IBDF9E",57,0)
FORMAT ;formats the word-processing field of IBTEXT
"RTN","IBDF9E",58,0)
 N W,HT,NODE,COUNT,LINE
"RTN","IBDF9E",59,0)
 S NODE=$G(^IBE(357.8,IBTEXT,0))
"RTN","IBDF9E",60,0)
 S W=$P(NODE,"^",5),HT=$P(NODE,"^",6)
"RTN","IBDF9E",61,0)
 D FORMAT^IBDFU6("^IBE(357.8,IBTEXT,1)",W) ;creates formated version at ^UTILITY($J,"W",1)
"RTN","IBDF9E",62,0)
 K ^IBE(357.8,IBTEXT,1)
"RTN","IBDF9E",63,0)
 I $G(^UTILITY($J,"W",1))>HT W !,"WARNING! The text area is too small to display all of the text." D PAUSE^IBDFU5
"RTN","IBDF9E",64,0)
 S (COUNT,NUM)=0 F  S NUM=$O(^UTILITY($J,"W",1,NUM)) Q:'NUM  S LINE=$G(^(NUM,0)) D
"RTN","IBDF9E",65,0)
 .;I $L(LINE)>W W !,"WARNING!  The word "_LINE_" is being truncated",!,"because it is too long." D PAUSE^IBDFU5
"RTN","IBDF9E",66,0)
 .S ^IBE(357.8,IBTEXT,1,NUM,0)=$E(LINE,1,W)
"RTN","IBDF9E",67,0)
 .S COUNT=COUNT+1
"RTN","IBDF9E",68,0)
 S ^IBE(357.8,IBTEXT,1,0)="^^"_COUNT_"^"_COUNT_"^"_DT_"^^^^"
"RTN","IBDF9E",69,0)
 K ^UTILITY($J,"W")
"RTN","IBDF9E",70,0)
 Q
"RTN","IBDF9E",71,0)
MAXHT() ;returns the maximum ht. of IBTEXT text area fits in the block IBBLK
"RTN","IBDF9E",72,0)
 N NODE,Y
"RTN","IBDF9E",73,0)
 S NODE=$G(^IBE(357.8,IBTEXT,0)) S Y=$P(NODE,"^",4)
"RTN","IBDF9E",74,0)
 Q ((1+$$MAXY^IBDFU1B)-Y)
"RTN","IBDF9E",75,0)
 Q
"RTN","IBDF9E",76,0)
MAXW() ;returns the maximum width of IBTEXT text area fits in the block IBBLK
"RTN","IBDF9E",77,0)
 N NODE,X
"RTN","IBDF9E",78,0)
 S NODE=$G(^IBE(357.8,IBTEXT,0)) S X=$P(NODE,"^",3)
"RTN","IBDF9E",79,0)
 Q ((1+$$MAXX^IBDFU1B)-X)
"RTN","IBDFBK1")
0^142^B17092946
"RTN","IBDFBK1",1,0)
IBDFBK1 ;ALB/AAS - AICS broker Utilities ;23-May-95
"RTN","IBDFBK1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFBK1",3,0)
 ;
"RTN","IBDFBK1",4,0)
GETFS(RESULT,IBDF) ;
"RTN","IBDFBK1",5,0)
 ; -- broker call back to return the formspec in IBDFS for form FORMID
"RTN","IBDFBK1",6,0)
 ;
"RTN","IBDFBK1",7,0)
 N FORMID,START,STOP,GLB,IBD
"RTN","IBDFBK1",8,0)
 ;
"RTN","IBDFBK1",9,0)
 S FORMID=$G(IBDF("FORMID"))
"RTN","IBDFBK1",10,0)
 S START=$G(IBDF("START"),0) ; Default is zero
"RTN","IBDFBK1",11,0)
 S STOP=$G(IBDF("STOP"),50) ; Default is 50
"RTN","IBDFBK1",12,0)
 ;S GLB=$G(IBDF("GLB")) ; Pass in global later.
"RTN","IBDFBK1",13,0)
 ;
"RTN","IBDFBK1",14,0)
 I $G(FORMID)="" S RESULT(1)="$$FORMID INVALID$$" G GETFSQ
"RTN","IBDFBK1",15,0)
 I +FORMID'=FORMID S FORMID=$E($P(FORMID,"."),3,8)
"RTN","IBDFBK1",16,0)
 I +FORMID<1 S RESULT(1)="$$FORMID INVALID$$" G GETFSQ
"RTN","IBDFBK1",17,0)
 ;
"RTN","IBDFBK1",18,0)
 K RESULT
"RTN","IBDFBK1",19,0)
 I '$D(^IBD(359.2,FORMID,10)) D SCAN^IBDFBKS(FORMID)
"RTN","IBDFBK1",20,0)
 I '$D(^IBD(359.2,FORMID,10)) S RESULT(1)="$$FORMID INVALID$$" G GETFSQ
"RTN","IBDFBK1",21,0)
 ;
"RTN","IBDFBK1",22,0)
 F IBD=START:1:STOP S RESULT(IBD)=$G(^IBD(359.2,FORMID,10,IBD,0)) I RESULT(IBD)="",$O(^IBD(359.2,FORMID,10,IBD))="" S RESULT(IBD)="$$END$$" Q
"RTN","IBDFBK1",23,0)
 ;
"RTN","IBDFBK1",24,0)
GETFSQ Q
"RTN","IBDFBK1",25,0)
 ;
"RTN","IBDFBK1",26,0)
IMAGEID(RESULT,TEST) ;
"RTN","IBDFBK1",27,0)
 ; -- broker call back to return the next image id to save unknonw forms
"RTN","IBDFBK1",28,0)
 S RESULT=0
"RTN","IBDFBK1",29,0)
 L +^IBD(357.97,.03):2
"RTN","IBDFBK1",30,0)
 S RESULT=$P(^IBD(357.97,1,0),"^",3)+1
"RTN","IBDFBK1",31,0)
 S:RESULT<1 RESULT=1 S:RESULT>999999 RESULT=1
"RTN","IBDFBK1",32,0)
 S $P(^IBD(357.97,1,0),"^",3)=RESULT
"RTN","IBDFBK1",33,0)
 L -^IBD(357.97,.03)
"RTN","IBDFBK1",34,0)
 Q
"RTN","IBDFBK1",35,0)
 ;
"RTN","IBDFBK1",36,0)
ETIME(RESULT,IBDF) ; -- broker call back
"RTN","IBDFBK1",37,0)
 ; -- store elapsed time and user inputting data
"RTN","IBDFBK1",38,0)
 ; -- called by manual data entry (ibdfde1)
"RTN","IBDFBK1",39,0)
 ;
"RTN","IBDFBK1",40,0)
 N NODE
"RTN","IBDFBK1",41,0)
 S RESULT=0
"RTN","IBDFBK1",42,0)
 I '$G(IBDF("FORM")) G ETQ
"RTN","IBDFBK1",43,0)
 S NODE=$G(^IBD(357.96,+IBDF("FORM"),0)) I NODE="" G ETQ
"RTN","IBDFBK1",44,0)
 S FDAROOT(357.96,+IBDF("FORM")_",",.15)=$G(IBDF("SECONDS"))+$P(NODE,"^",15)
"RTN","IBDFBK1",45,0)
 I $P(NODE,"^",16)="" S FDAROOT(357.96,+IBDF("FORM")_",",.16)=$G(IBDF("USER"))
"RTN","IBDFBK1",46,0)
 D FILE^DIE("","FDAROOT","IBDFERR")
"RTN","IBDFBK1",47,0)
 S RESULT=1
"RTN","IBDFBK1",48,0)
 K PXCA
"RTN","IBDFBK1",49,0)
ETQ Q
"RTN","IBDFBK1",50,0)
 ;
"RTN","IBDFBK1",51,0)
WSERR(RESULT,FORMID) ; -- broker call back
"RTN","IBDFBK1",52,0)
 ; -- store error occuring on workstation
"RTN","IBDFBK1",53,0)
 ;    occures when user cancels recognition.
"RTN","IBDFBK1",54,0)
 ;
"RTN","IBDFBK1",55,0)
 S FORMID=+$G(FORMID("FORMID")),FORMID("SOURCE")=1
"RTN","IBDFBK1",56,0)
 D LOGERR^IBDF18E2(FORMID("ERRNO"),.FORMID)
"RTN","IBDFBK1",57,0)
 S RESULT=1
"RTN","IBDFBK1",58,0)
WSERRQ Q
"RTN","IBDFBK1",59,0)
 ;
"RTN","IBDFBK1",60,0)
IMAGENM(RESULT,IBDF) ; -- broker call back
"RTN","IBDFBK1",61,0)
 ; -- store names of images stored and their location
"RTN","IBDFBK1",62,0)
 ;    along with the form id information
"RTN","IBDFBK1",63,0)
 ;
"RTN","IBDFBK1",64,0)
 N X,Y,NAME,PATH,FDA,IENS,FDAIEN,IBDERR
"RTN","IBDFBK1",65,0)
 S RESULT=0
"RTN","IBDFBK1",66,0)
 I $G(^IBD(357.96,+$G(IBDF("FORMID")),0))=""!($G(IBDF("IMAGE"))="") G IMGNMQ
"RTN","IBDFBK1",67,0)
 ;
"RTN","IBDFBK1",68,0)
 F I=1:1 S X=$P(IBDF("IMAGE"),"\",I) Q:X=""  S NAME=$P(IBDF("IMAGE"),"\",I),PATH=$P(IBDF("IMAGE"),"\",1,I-1)
"RTN","IBDFBK1",69,0)
 S IENS="+1,"_IBDF("FORMID")_","
"RTN","IBDFBK1",70,0)
 S FDA(357.963,IENS,.01)=NAME
"RTN","IBDFBK1",71,0)
 S FDA(357.963,IENS,.02)=PATH
"RTN","IBDFBK1",72,0)
 S FDA(357.963,IENS,.03)=$G(IBDF("PAGE"))
"RTN","IBDFBK1",73,0)
 S FDA(357.963,IENS,.04)=$G(IBDF("WSID"))
"RTN","IBDFBK1",74,0)
 S FDA(357.963,IENS,.05)=$G(DUZ)
"RTN","IBDFBK1",75,0)
 S FDA(357.963,IENS,.06)=$$NOW^XLFDT
"RTN","IBDFBK1",76,0)
 ;
"RTN","IBDFBK1",77,0)
 ; -- flag is as received if page already received
"RTN","IBDFBK1",78,0)
 S SCANPG=+$O(^IBD(357.96,IBDF("FORMID"),9,"B",IBDF("PAGE"),0))
"RTN","IBDFBK1",79,0)
 I $P($G(^IBD(357.96,+$G(IBDF("FORMID")),9,SCANPG,0)),"^",2) S FDA(357.963,IENS,.07)=1
"RTN","IBDFBK1",80,0)
 ;
"RTN","IBDFBK1",81,0)
 D UPDATE^DIE("","FDA","FDAIEN","IBDERR")
"RTN","IBDFBK1",82,0)
 I '$D(IBDERR) S RESULT=1
"RTN","IBDFBK1",83,0)
IMGNMQ Q
"RTN","IBDFBK1",84,0)
 ;
"RTN","IBDFBK1",85,0)
FORMID(RESULT,FORMNO) ;
"RTN","IBDFBK1",86,0)
 ; -- broker call back to turn a formId into patient name/ssn/clinic/appt/formtype/status
"RTN","IBDFBK1",87,0)
 ;
"RTN","IBDFBK1",88,0)
 N IBID
"RTN","IBDFBK1",89,0)
 S RESULT="^^^^"
"RTN","IBDFBK1",90,0)
 S IBID=+$P($G(FORMNO)," ",3)
"RTN","IBDFBK1",91,0)
 Q:'$G(IBID)
"RTN","IBDFBK1",92,0)
 S RESULT=$$FINDPT^IBDF18C(IBID)
"RTN","IBDFBK1",93,0)
 Q
"RTN","IBDFBK1",94,0)
 ;
"RTN","IBDFBK1",95,0)
VALIDAV(IBDUSER,IBDFKEY) ;
"RTN","IBDFBK1",96,0)
 ; -- broker call back to validate security key, make sure duz array set
"RTN","IBDFBK1",97,0)
 ;    for xwb1t17
"RTN","IBDFBK1",98,0)
 ; -- Output User Info 
"RTN","IBDFBK1",99,0)
 ;    Piece 1 = DUZ           Piece 4 = Site
"RTN","IBDFBK1",100,0)
 ;    Piece 2 = DUZ(0)        Piece 5 = UCI/VOL
"RTN","IBDFBK1",101,0)
 ;    Piece 3 = UserName      Piece 6 = Security key if held
"RTN","IBDFBK1",102,0)
 ;
"RTN","IBDFBK1",103,0)
 ; -- Invalid User codes
"RTN","IBDFBK1",104,0)
 ;    piece 1 = 0  =: Null or "^" in codes
"RTN","IBDFBK1",105,0)
 ;    piece 1 = -1 =: Invalid access code pair
"RTN","IBDFBK1",106,0)
 ;    piece 1 = -2 =: Invalid user (terminated, etc.)
"RTN","IBDFBK1",107,0)
 ;
"RTN","IBDFBK1",108,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFBK1",109,0)
 N X,Y,KEY,XUM,XUSER,XQUR,XUF,XUENV,NODE
"RTN","IBDFBK1",110,0)
 S NODE=$G(^VA(200,+$G(DUZ),0))
"RTN","IBDFBK1",111,0)
 D UCI^%ZOSV S UCI=Y
"RTN","IBDFBK1",112,0)
 S KEY=""
"RTN","IBDFBK1",113,0)
 I $G(IBDFKEY)'="" I $D(^XUSEC(IBDFKEY,+DUZ)) S KEY=IBDFKEY
"RTN","IBDFBK1",114,0)
 S IBDUSER=DUZ_"^"_$P(NODE,"^",4)_"^"_$P(NODE,"^")_"^"_$P($$SITE^VASITE,"^",2)_"^"_UCI_"^"_KEY
"RTN","IBDFBK1",115,0)
 Q
"RTN","IBDFBK1",116,0)
 ;
"RTN","IBDFBK1",117,0)
SECM(RESULT,IBDUZ) ;
"RTN","IBDFBK1",118,0)
 ; -- broker call back to return array of secondary menus in array RESULT
"RTN","IBDFBK1",119,0)
 ;
"RTN","IBDFBK1",120,0)
 I +$G(IBDUZ)<1 S RESULT(1)="No user Identified" G SECMQ
"RTN","IBDFBK1",121,0)
 ;
"RTN","IBDFBK1",122,0)
 N COUNT,MENU,IEN
"RTN","IBDFBK1",123,0)
 S COUNT=0,MENU=0
"RTN","IBDFBK1",124,0)
 F  S MENU=$O(^VA(200,+IBDUZ,203,MENU)) Q:'MENU  D
"RTN","IBDFBK1",125,0)
 . S IEN=+$G(^VA(200,+IBDUZ,203,MENU,0))
"RTN","IBDFBK1",126,0)
 . S COUNT=COUNT+1,RESULT(COUNT)=$$GET1^DIQ(19,+IEN,.01) I RESULT(COUNT)']"" S RESULT(COUNT)="Unknown"
"RTN","IBDFBK1",127,0)
 ;
"RTN","IBDFBK1",128,0)
 I COUNT<1 S RESULT(1)="No Secondary Menus"
"RTN","IBDFBK1",129,0)
 ;
"RTN","IBDFBK1",130,0)
SECMQ Q
"RTN","IBDFBK1",131,0)
 ;
"RTN","IBDFBK1",132,0)
TESTI ; -- test storing image name
"RTN","IBDFBK1",133,0)
 S IBDF("IMAGE")="c:\vista\aics\a8001.tif"
"RTN","IBDFBK1",134,0)
 S IBDF("WSID")="A"
"RTN","IBDFBK1",135,0)
 S IBDF("PAGE")=1
"RTN","IBDFBK1",136,0)
 S IBDF("FORMID")=800
"RTN","IBDFBK1",137,0)
 D IMAGENM(.RESULT,.IBDF)
"RTN","IBDFBK1",138,0)
 Q
"RTN","IBDFBK2")
0^143^B16683162
"RTN","IBDFBK2",1,0)
IBDFBK2 ;ALB/AAS - AICS broker Utilities ;23-May-95
"RTN","IBDFBK2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFBK2",3,0)
 ;
"RTN","IBDFBK2",4,0)
RECV(RESULT,IBD) ; -- called by broker
"RTN","IBDFBK2",5,0)
 ; -- receives raw data array from scanning workstation and returns
"RTN","IBDFBK2",6,0)
 ;    data may come in spurs, IBD("MOREDATA") = 1 if more data pending
"RTN","IBDFBK2",7,0)
 ;
"RTN","IBDFBK2",8,0)
 ;    errors, warnings, and expanded data.
"RTN","IBDFBK2",9,0)
 ;    Input : Result - (called by reference, see output)
"RTN","IBDFBK2",10,0)
 ;            IBD    - (called by reference) contains the raw
"RTN","IBDFBK2",11,0)
 ;                     data from the workstation (IBD(FD1) - IBD(FD9))
"RTN","IBDFBK2",12,0)
 ;                     IB("MOREDATA") - if more data pending.
"RTN","IBDFBK2",13,0)
 ;
"RTN","IBDFBK2",14,0)
 ;    Output: RESULT - a new array element (result(lcnt) will be
"RTN","IBDFBK2",15,0)
 ;                     created for each error, warning and
"RTN","IBDFBK2",16,0)
 ;                      data element received
"RTN","IBDFBK2",17,0)
 ;
"RTN","IBDFBK2",18,0)
 N I,J,X,Y,IBDATA,CNT,LCNT,IBDJ,INODE,ZTQUEUED,IOM,IBDF,PXCA,PXCAVSIT,ORVP,IBQUIT,SDFN,FORMID,DIE,DIC,DR,DA,DFN,D,D0,DA,DI,DK,DL,AUPNPAT,AUPNDOB,AUPNDOD,AUPNDAYS,AUPNSEX
"RTN","IBDFBK2",19,0)
 I $D(IBD)=0 S RESULT(1)="NO DATA RECEIVED" G RECVQ
"RTN","IBDFBK2",20,0)
 S ZTQUEUED="",IOM=80
"RTN","IBDFBK2",21,0)
 ;
"RTN","IBDFBK2",22,0)
 S I=""
"RTN","IBDFBK2",23,0)
 S IBDJ=$J
"RTN","IBDFBK2",24,0)
 I $D(IBTEST) S IBDJ=$G(IBD("IBDJ"))
"RTN","IBDFBK2",25,0)
 F  S I=$O(IBD(I)) Q:I=""  S ^TMP("IBD-SCAN-RAWDATA",IBDJ,I)=IBD(I)
"RTN","IBDFBK2",26,0)
 I $G(IBD("MOREDATA")) S RESULT(1)="PARTIAL DATA RECEIVED" G RECVQ
"RTN","IBDFBK2",27,0)
 ;
"RTN","IBDFBK2",28,0)
 S RESULT(1)="0^END OF DATA RECEIVED"
"RTN","IBDFBK2",29,0)
 ;
"RTN","IBDFBK2",30,0)
 ; -- parse strings
"RTN","IBDFBK2",31,0)
 ;    data on workstation is built into strings upto 120 characters
"RTN","IBDFBK2",32,0)
 ;    each data element delimited by a "~" and need to be parsed
"RTN","IBDFBK2",33,0)
 ;    into an array IBDATA() which is then parsed into the bubbles,
"RTN","IBDFBK2",34,0)
 ;    dynamic, and handprint arrays.  IBDATA() represents data as it
"RTN","IBDFBK2",35,0)
 ;    is received from the scanner.
"RTN","IBDFBK2",36,0)
 ;
"RTN","IBDFBK2",37,0)
 S CNT=0
"RTN","IBDFBK2",38,0)
 F I=1:1 S INODE="FD"_I S IBDATA=$G(^TMP("IBD-SCAN-RAWDATA",IBDJ,INODE)) Q:IBDATA=""  D
"RTN","IBDFBK2",39,0)
 . F J=1:1 S X=$P(IBDATA,"~",J) Q:X=""  S CNT=CNT+1,IBDF(CNT)=X
"RTN","IBDFBK2",40,0)
 ;
"RTN","IBDFBK2",41,0)
 S RESULT(1)="DATA PARSED INTO FIRST ARRAY"
"RTN","IBDFBK2",42,0)
 K IBD
"RTN","IBDFBK2",43,0)
 ;
"RTN","IBDFBK2",44,0)
 S RESULT(1)=$$PCE^IBDFBKR(.IBDF,.PXCA)
"RTN","IBDFBK2",45,0)
 I $D(PXCA("ERROR")) S RESULT(1)="9^DATA REJECTED BY PCE: Critical data missing or incorrect"
"RTN","IBDFBK2",46,0)
 I $D(PXCA("IBD-ABORT")) S RESULT(1)="9^DATA NOT SENT TO PCE"
"RTN","IBDFBK2",47,0)
 S LCNT=1
"RTN","IBDFBK2",48,0)
 ;
"RTN","IBDFBK2",49,0)
 ; -- Don't try to parse array if data isn't valid
"RTN","IBDFBK2",50,0)
 S IBQUIT=+RESULT(1),RESULT(1)=$P(RESULT(1),"^",2,99)
"RTN","IBDFBK2",51,0)
 G:(IBQUIT<8!(IBQUIT>10)) RECVQ
"RTN","IBDFBK2",52,0)
 D EW(.RESULT,.PXCA,.LCNT)
"RTN","IBDFBK2",53,0)
 ;
"RTN","IBDFBK2",54,0)
 ; -- create result array to pass back to workstation
"RTN","IBDFBK2",55,0)
 D LSTDATA^IBDFBK3(.RESULT,.PXCA,.LCNT)
"RTN","IBDFBK2",56,0)
 ;
"RTN","IBDFBK2",57,0)
 I '$D(IBTEST),'$G(IBD("MOREDATA")) K ^TMP("IBD-SCAN-RAWDATA",$J)
"RTN","IBDFBK2",58,0)
 ;remember to uncomment the line above - done 10/29/96 cmr
"RTN","IBDFBK2",59,0)
RECVQ I '$D(IBTEST) K PXCA,IBDF
"RTN","IBDFBK2",60,0)
 ;I IBQUIT<8
"RTN","IBDFBK2",61,0)
 Q
"RTN","IBDFBK2",62,0)
 ;
"RTN","IBDFBK2",63,0)
EW(RESULT,PXCA,LCNT,AICS) ;
"RTN","IBDFBK2",64,0)
 ; -- List Errors and Warning generated in PCE
"RTN","IBDFBK2",65,0)
 ;    Input : Result - (called by reference, see output)
"RTN","IBDFBK2",66,0)
 ;            PXCA   - (by referencethe array of data formated to
"RTN","IBDFBK2",67,0)
 ;                      the PCE device interface specification
"RTN","IBDFBK2",68,0)
 ;            lcnt   - (by reference) a counter for the result array
"RTN","IBDFBK2",69,0)
 ;    Output: RESULT - a new array element result(lcnt) will be
"RTN","IBDFBK2",70,0)
 ;                     created for each error and warning received
"RTN","IBDFBK2",71,0)
 ;
"RTN","IBDFBK2",72,0)
 N I,J,K,L,M,X,IBX
"RTN","IBDFBK2",73,0)
 F M="ERROR","WARNING","AICS ERROR" I $D(PXCA(M)) D
"RTN","IBDFBK2",74,0)
 .I $G(AICS),M="AICS ERROR" Q
"RTN","IBDFBK2",75,0)
 .S I=""  F  S I=$O(PXCA(M,I)) Q:I=""  S J="" F  S J=$O(PXCA(M,I,J)) Q:J=""  D
"RTN","IBDFBK2",76,0)
 ..S K="" F  S K=$O(PXCA(M,I,J,K)) Q:K=""  S L="" F  S L=$O(PXCA(M,I,J,K,L)) Q:L=""  S IBX=$G(PXCA(M,I,J,K,L)) D
"RTN","IBDFBK2",77,0)
 ...S X=M_": "_$P(IBX,"^")
"RTN","IBDFBK2",78,0)
 ...I $E(X,1,4)'="AICS" S X="PCE "_X
"RTN","IBDFBK2",79,0)
 ...I $P(IBX,"^",2)'="" S X=X_" - "_$P(IBX,"^",2)
"RTN","IBDFBK2",80,0)
 ...I $P(IBX,"^",3)'="" S X=X_" - "_$P(IBX,"^",3)
"RTN","IBDFBK2",81,0)
 ...I I="DIAGNOSIS/PROBLEM" S X=X_", ICD9: "_$P($G(^ICD9(+$G(PXCA(I,J,K)),0)),"^")_", "_$P($G(PXCA(I,J,K)),"^",13) I L=2,$P(PXCA(I,J,K),"^",2)="P" S $P(PXCA(I,J,K),"^",2)="S"
"RTN","IBDFBK2",82,0)
 ...I I="ENCOUNTER",L=15 S X=X_", "_$P($G(^VA(200,+$P($G(PXCA(I)),"^",4),0)),"^") I $P(PXCA(I),"^",15)="P" S $P(PXCA(I),"^",15)="S"
"RTN","IBDFBK2",83,0)
 ...D NEWLINE^IBDFBK3(.RESULT,X,.LCNT)
"RTN","IBDFBK2",84,0)
EWQ Q
"RTN","IBDFBK2",85,0)
 ;
"RTN","IBDFBK2",86,0)
UNRECV(FID) ; -- used by test to un received data when testing.
"RTN","IBDFBK2",87,0)
 ;
"RTN","IBDFBK2",88,0)
 N IBI
"RTN","IBDFBK2",89,0)
 I +$G(FID)<1 Q
"RTN","IBDFBK2",90,0)
 S IBI=0  F  S IBI=$O(^IBD(357.96,+FID,9,IBI)) Q:'IBI  I $G(^IBD(357.96,+FID,9,IBI,0))'="" S $P(^(0),"^",2)=""
"RTN","IBDFBK2",91,0)
 K ^IBD(357.96,+FID,10)
"RTN","IBDFBK2",92,0)
 Q
"RTN","IBDFBK2",93,0)
 ;
"RTN","IBDFBK2",94,0)
RECVERR(FORMID,ER) ; -- error occurred in ibdfbkr, store in 359.3
"RTN","IBDFBK2",95,0)
 Q:ER<11
"RTN","IBDFBK2",96,0)
 S DIALOG=$S(ER=11:3579610,ER=12:3579607,ER=13:3579607,ER=14:3579604,ER=15:3579606,ER=16:3579605,ER=17:3579608,ER=18:3579609,1:3570001)
"RTN","IBDFBK2",97,0)
 S FORMID=$G(FORMID("FORMID")),FORMID("SOURCE")=1
"RTN","IBDFBK2",98,0)
 S FORMID("APPT")=$P($G(^IBD(357.96,+$G(FORMID),0)),"^",3)
"RTN","IBDFBK2",99,0)
 D LOGERR^IBDF18E2(DIALOG,.FORMID)
"RTN","IBDFBK2",100,0)
 Q
"RTN","IBDFBK2",101,0)
 ;
"RTN","IBDFBK2",102,0)
TESTR ;
"RTN","IBDFBK2",103,0)
 S IBTEST="" K ALAN
"RTN","IBDFBK2",104,0)
 S IBD("MOREDATA")=0
"RTN","IBDFBK2",105,0)
 S IBD("IBDJ")=576718735
"RTN","IBDFBK2",106,0)
 S FORMID=+$P($G(^TMP("IBD-SCAN-RAWDATA",IBD("IBDJ"),"FD1")),"FORMID=",2)
"RTN","IBDFBK2",107,0)
 I +FORMID>0 D UNRECV(FORMID)
"RTN","IBDFBK2",108,0)
 D RECV(.ALAN,.IBD)
"RTN","IBDFBK2",109,0)
 W !! X "ZW ALAN W !! ZW PXCA"
"RTN","IBDFBK2",110,0)
 K IBTEST
"RTN","IBDFBK2",111,0)
 Q
"RTN","IBDFBK3")
0^144^B32281921
"RTN","IBDFBK3",1,0)
IBDFBK3 ;ALB/AAS - AICS broker Utilities ;23-May-95
"RTN","IBDFBK3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFBK3",3,0)
 ;
"RTN","IBDFBK3",4,0)
LSTDATA(RESULT,PXCA,LCNT) ;
"RTN","IBDFBK3",5,0)
 ; -- expand the PXCA array data into human readable terms for
"RTN","IBDFBK3",6,0)
 ;    display on the workstation
"RTN","IBDFBK3",7,0)
 ;
"RTN","IBDFBK3",8,0)
 ;    Input : Result - (called by reference, see output)
"RTN","IBDFBK3",9,0)
 ;            PXCA   - (by referencethe array of data formated to
"RTN","IBDFBK3",10,0)
 ;                      the PCE device interface specification
"RTN","IBDFBK3",11,0)
 ;            lcnt   - (by reference) a counter for the result array
"RTN","IBDFBK3",12,0)
 ;    Output: RESULT - a new array element result(lcnt) will be
"RTN","IBDFBK3",13,0)
 ;                     created for each piece of data received
"RTN","IBDFBK3",14,0)
 ;
"RTN","IBDFBK3",15,0)
 N I,J,M,X,IBX
"RTN","IBDFBK3",16,0)
 ;
"RTN","IBDFBK3",17,0)
 ; -- noshow, cancel or reschedule checked
"RTN","IBDFBK3",18,0)
 I $D(PXCA("IBD-ABORT")) D
"RTN","IBDFBK3",19,0)
 .S I="" F  S I=$O(PXCA("IBD-ABORT",I)) Q:I=""  S J="" F  S J=$O(PXCA("IBD-ABORT",I,J)) Q:J=""  D
"RTN","IBDFBK3",20,0)
 ..S IBX=PXCA("IBD-ABORT",I,J)
"RTN","IBDFBK3",21,0)
 ..S X="The following Data was NOT Sent to PCE because "_$P(IBX,"^",2)_" was marked!"
"RTN","IBDFBK3",22,0)
 ..D NEWLINE(.RESULT,X,.LCNT)
"RTN","IBDFBK3",23,0)
 .Q
"RTN","IBDFBK3",24,0)
 ;
"RTN","IBDFBK3",25,0)
 ; -- expand the encounter node
"RTN","IBDFBK3",26,0)
 I $D(PXCA("ENCOUNTER")) S IBX=PXCA("ENCOUNTER") D
"RTN","IBDFBK3",27,0)
 .I $P(IBX,"^",14) S X="Checkout Date/Time: "_$$FMTE^XLFDT($P(IBX,"^",14)) D NEWLINE(.RESULT,X,.LCNT)
"RTN","IBDFBK3",28,0)
 .I $P(IBX,"^",4) S X=$S($P(IBX,"^",15)="P":"Primary ",$P(IBX,"^",15)="S":"Secondary ",1:"")_"Provider: "_$P($G(^VA(200,+$P(IBX,"^",4),0)),"^") D NEWLINE(.RESULT,X,.LCNT)
"RTN","IBDFBK3",29,0)
 .I $P(IBX,"^",5) S X=$P(IBX,"^",5) I X'="" S X="Visit Type CPT: "_$P($G(^ICPT(+$G(X),0)),"^") D NEWLINE(.RESULT,X,.LCNT)
"RTN","IBDFBK3",30,0)
 .; add sc,ao,ir,ec,elegibility,credit stop (pieces 6-9,13,17)
"RTN","IBDFBK3",31,0)
 .I $P(IBX,"^",6) D NEWLINE(.RESULT,"Visit for SC Condition",.LCNT)
"RTN","IBDFBK3",32,0)
 .I $P(IBX,"^",7) D NEWLINE(.RESULT,"Visit for Agent Orange Condition",.LCNT)
"RTN","IBDFBK3",33,0)
 .I $P(IBX,"^",8) D NEWLINE(.RESULT,"Visit for Ionizing Radiation Condition",.LCNT)
"RTN","IBDFBK3",34,0)
 .I $P(IBX,"^",9) D NEWLINE(.RESULT,"Visit for Environmental Contaminates Condition",.LCNT)
"RTN","IBDFBK3",35,0)
 .I $P(IBX,"^",13) D NEWLINE(.RESULT,"Eligibility for Visit: "_$P($G(^DIC(8,+$P(IBX,"^",13),0)),"^"),.LCNT)
"RTN","IBDFBK3",36,0)
 .I $P(IBX,"^",17) D NEWLINE(.RESULT,"Additional Credit Stop: "_$P($G(^DIC(40.7,+$P(IBX,"^",17),0)),"^"),.LCNT)
"RTN","IBDFBK3",37,0)
 ;
"RTN","IBDFBK3",38,0)
 ; -- expand the other nodes
"RTN","IBDFBK3",39,0)
 F M="DIAGNOSIS/PROBLEM","PROVIDER","DIAGNOSIS","PROCEDURE","VITALS","PROBLEM","EXAM","IMMUNIZATION","HEALTH FACTORS","SKIN TEST","PATIENT ED","LOCAL" I $D(PXCA(M)) D
"RTN","IBDFBK3",40,0)
 .S I="" F  S I=$O(PXCA(M,I)) Q:I=""  D:M="PROVIDER" PROV S J="" F  S J=$O(PXCA(M,I,J)) Q:J=""  D
"RTN","IBDFBK3",41,0)
 ..K X S IBX=PXCA(M,I,J) D  D:$D(X) NEWLINE(.RESULT,X,.LCNT)
"RTN","IBDFBK3",42,0)
 ...;
"RTN","IBDFBK3",43,0)
 ...I M="DIAGNOSIS" S X=$S($P(IBX,"^",2)="P":"Primary",$P(IBX,"^",2)="S":"Secondary",1:"")_" Diagnosis: "_$P($G(^ICD9(+$P($G(IBX),"^"),0)),"^")_" - "_$P(IBX,"^",9)_" - "_$P(IBX,"^",8) Q
"RTN","IBDFBK3",44,0)
 ...;
"RTN","IBDFBK3",45,0)
 ...I M="PROCEDURE" S X="Procedure: "_$P($G(^ICPT(+$P($G(IBX),"^"),0)),"^")_" - "_$P(IBX,"^",7)_" - "_$P(IBX,"^",6)_" - "_$S($P(IBX,"^",2)="P":"Primary ",$P(IBX,"^",2)="S":"Secondary ",1:"Quantity: "_+$P(IBX,"^",2)) Q
"RTN","IBDFBK3",46,0)
 ...;
"RTN","IBDFBK3",47,0)
 ...I M="VITALS" S X="Vital Sign: "_$$VTYPE($P(IBX,"^"))_": "_$P(IBX,"^",2) Q
"RTN","IBDFBK3",48,0)
 ...;
"RTN","IBDFBK3",49,0)
 ...I M="IMMUNIZATION" S X="Immunization: "_$$DSPLYIM^PXAPIIB(+IBX) I $P(IBX,"^",5) S X=X_" - Contraindicated" Q
"RTN","IBDFBK3",50,0)
 ...;
"RTN","IBDFBK3",51,0)
 ...I M="EXAM" S X="Exam: "_$$DSPLYEX^PXAPIIB(+IBX)_$S($P(IBX,"^",2)="A":" Abnormal",$P(IBX,"^",2)="N":" Normal",1:"") Q
"RTN","IBDFBK3",52,0)
 ...;
"RTN","IBDFBK3",53,0)
 ...I M="PROBLEM" S X="Problem List: "_$P(IBX,"^") Q
"RTN","IBDFBK3",54,0)
 ...;
"RTN","IBDFBK3",55,0)
 ...I M="HEALTH FACTORS" S X="Health Factor: "_$$DSPLYHF^PXAPIIB(+IBX) N Y S Y=$P(IBX,"^",2) I Y'="" S X=X_" Level/Severity: "_$S(Y="M":"Minimal",Y="MO":"Moderate",Y="H":"Heavy/Severe",1:"") Q
"RTN","IBDFBK3",56,0)
 ...;
"RTN","IBDFBK3",57,0)
 ...I M="SKIN TEST" S X="Skin Tests: "_$$DSPLYSK^PXAPIIB(+IBX) Q
"RTN","IBDFBK3",58,0)
 ...;
"RTN","IBDFBK3",59,0)
 ...I M="PATIENT ED" S X="Patient Eduction: "_$$DSPLYED^PXAPIIB(+IBX) I $P(IBX,"^",2) S X=X_" , Level of Understanding: "_$S(IBX=1:"Poor",IBX=2:"Fair",IBX=3:"Good",IBX=4:"N/A",IBX=5:"Refused",1:"") Q
"RTN","IBDFBK3",60,0)
 ...;
"RTN","IBDFBK3",61,0)
 ...I M="DIAGNOSIS/PROBLEM" D  S:X="" X="Diagnosis/Problem: unspecified"
"RTN","IBDFBK3",62,0)
 ....N Y S X=""
"RTN","IBDFBK3",63,0)
 ....S Y=$P(IBX,"^",2) S X=$S(Y="P":"Primary ",Y="S":"Secondary ",1:"")_"Diagnosis/Problem"
"RTN","IBDFBK3",64,0)
 ....;I $P(IBX,"^",4) S X=X_$S($P(IBX,"^",6)="I":", Inactive",1:", Active")
"RTN","IBDFBK3",65,0)
 ....I $P(IBX,"^",13)'="" S X=X_" '"_$P(IBX,"^",14)_$S($P(IBX,"^",14)'="":" ",1:"")_$P(IBX,"^",13)_"'"
"RTN","IBDFBK3",66,0)
 ....;I +$P(IBX,"^",3) S X=X_", Clinical Lexicon term: "_$P($G(^GMP(757.01,+$P(IBX,"^",3),0)),"^") ;clinical lexicon term passed
"RTN","IBDFBK3",67,0)
 ....I +$P(IBX,"^",3) S X=X_", Clinical Lexicon term: " D
"RTN","IBDFBK3",68,0)
 .....I $D(^LEX) S X=X_$P($G(^LEX(757.01,+$P(IBX,"^",3),0)),"^") Q
"RTN","IBDFBK3",69,0)
 .....S X=X_$P($G(^GMP(757.01,+$P(IBX,"^",3),0)),"^")
"RTN","IBDFBK3",70,0)
 ....I $P(IBX,"^",5) S X=X_", Added to Problem List "
"RTN","IBDFBK3",71,0)
 ....I +$P(IBX,"^",4) S X=X_", Patient Active Problem: "_$$PROBNAR($P(IBX,"^",4)) ;problem entry passed
"RTN","IBDFBK3",72,0)
 ....I +IBX S IBY=$P($G(^ICD9(+IBX,0)),"^") I IBX'[IBY S X=X_", ICD9: "_IBY
"RTN","IBDFBK3",73,0)
 ....I $P(IBX,"^",9) S X=X_" SC Condition "
"RTN","IBDFBK3",74,0)
 ....I $P(IBX,"^",10) S X=X_" AO Condition "
"RTN","IBDFBK3",75,0)
 ....I $P(IBX,"^",11) S X=X_" IR Condition "
"RTN","IBDFBK3",76,0)
 ....I $P(IBX,"^",12) S X=X_" EC Condition "
"RTN","IBDFBK3",77,0)
 ...I M="LOCAL" S X="Local Data Received: "_IBX Q
"RTN","IBDFBK3",78,0)
LSTQ Q
"RTN","IBDFBK3",79,0)
 ;
"RTN","IBDFBK3",80,0)
PROV ; -- expand the additional provider node
"RTN","IBDFBK3",81,0)
 S IBX=$G(PXCA(M,I))
"RTN","IBDFBK3",82,0)
 S X=$S($E(IBX,1)="P":"Primary ",$E(IBX,1)="S":"Secondary ",1:"")_"Provider: "_$P($G(^VA(200,I,0)),"^")_$S($P(IBX,"^",2)=1:" Attending",1:"")
"RTN","IBDFBK3",83,0)
 D NEWLINE(.RESULT,X,.LCNT)
"RTN","IBDFBK3",84,0)
 Q
"RTN","IBDFBK3",85,0)
 ;
"RTN","IBDFBK3",86,0)
NEWLINE(RESULT,X,LCNT) ;
"RTN","IBDFBK3",87,0)
 ; -- increment count and add new line to results array.
"RTN","IBDFBK3",88,0)
 S LCNT=LCNT+1
"RTN","IBDFBK3",89,0)
 S RESULT(LCNT)=X
"RTN","IBDFBK3",90,0)
 Q
"RTN","IBDFBK3",91,0)
 ;
"RTN","IBDFBK3",92,0)
VTYPE(X) ;
"RTN","IBDFBK3",93,0)
 ; -- Vital sign type from codes
"RTN","IBDFBK3",94,0)
 S X=$G(X)
"RTN","IBDFBK3",95,0)
 Q $S(X="BP":"Blood Pressure",X="HT":"Height",X="WT":"Weight",X="TMP":"Temperature",X="PU":"Pulse",1:"Other Vital")
"RTN","IBDFBK3",96,0)
 ;
"RTN","IBDFBK3",97,0)
PROBNAR(IEN) ; -- display problem narrative
"RTN","IBDFBK3",98,0)
 ;
"RTN","IBDFBK3",99,0)
 Q $P($G(^AUTNPOV(+$P($G(^AUPNPROB(+$G(IEN),0)),"^",5),0)),"^")
"RTN","IBDFBK3",100,0)
 ;
"RTN","IBDFBK3",101,0)
PROBDIA(IEN) ; -- return problem diagnosis code pointer
"RTN","IBDFBK3",102,0)
 Q +$P($G(^AUPNPROB(+$G(IEN),0)),"^")
"RTN","IBDFBKR")
0^145^B29774790
"RTN","IBDFBKR",1,0)
IBDFBKR ;ALB/AAS - EF utilite, receive and format data for PCE ; OCT 1,1994
"RTN","IBDFBKR",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFBKR",3,0)
 ;
"RTN","IBDFBKR",4,0)
PCE(IB,PXCA) ;
"RTN","IBDFBKR",5,0)
 ; -- Entry point from Broker receiver to parse data and
"RTN","IBDFBKR",6,0)
 ;    either send to PCE or store until all pages received
"RTN","IBDFBKR",7,0)
 ;
"RTN","IBDFBKR",8,0)
 N %,%H,%I,I,J,X,Y,IBDATA,BUBBLES,HANDPRNT,DYNAMIC,RESULT,NEEDMORE,IBDA
"RTN","IBDFBKR",9,0)
 S RESULT=1
"RTN","IBDFBKR",10,0)
 ;
"RTN","IBDFBKR",11,0)
 ; -- Move data from input format to data format
"RTN","IBDFBKR",12,0)
 S RESULT=$$BRKARY(.IB,.IBDATA)
"RTN","IBDFBKR",13,0)
 ;
"RTN","IBDFBKR",14,0)
 ; -- check for valid data
"RTN","IBDFBKR",15,0)
 S RESULT=$$VALIDD(.IBDATA) I RESULT>3 G PCEQ
"RTN","IBDFBKR",16,0)
 ;
"RTN","IBDFBKR",17,0)
 ; -- mark the page as having been received
"RTN","IBDFBKR",18,0)
 S IBDA=$O(^IBD(357.96,IBDATA("FORMID"),9,"B",+IBDATA("PAGE"),0))_","_IBDATA("FORMID")_","
"RTN","IBDFBKR",19,0)
 S FDA(357.969,IBDA,.02)=$$NOW^XLFDT
"RTN","IBDFBKR",20,0)
 ; -- marked stored image as received
"RTN","IBDFBKR",21,0)
 S X=$O(^IBD(357.96,"AD",IBDATA("PAGE"),IBDATA("FORMID"),0)) I X D
"RTN","IBDFBKR",22,0)
 .S FDA(357.963,X_","_IBDATA("FORMID")_",",.07)=1
"RTN","IBDFBKR",23,0)
 D FILE^DIE("","FDA","IBDERR")
"RTN","IBDFBKR",24,0)
 K DIC,DIE,DR,DA
"RTN","IBDFBKR",25,0)
 ;
"RTN","IBDFBKR",26,0)
 ; -- check if all pages have been rec'd (if not freeing ft entry)
"RTN","IBDFBKR",27,0)
 S NEEDMORE=$$NEEDMOR(.IBDATA)
"RTN","IBDFBKR",28,0)
 ;
"RTN","IBDFBKR",29,0)
 I NEEDMORE D
"RTN","IBDFBKR",30,0)
 .S RESULT=6
"RTN","IBDFBKR",31,0)
 .S I=0 F  S I=$O(IBDF(I)) Q:'I  D FILAD(IBDF(I)) Q:RESULT=11
"RTN","IBDFBKR",32,0)
 .N SUCCESS S SUCCESS=$$FSCND^IBDF18C(IBDATA("FORMID"),11)
"RTN","IBDFBKR",33,0)
 ;
"RTN","IBDFBKR",34,0)
 I 'NEEDMORE D
"RTN","IBDFBKR",35,0)
 .N SUCCESS S SUCCESS=$$FSCND^IBDF18C(IBDATA("FORMID"),2)
"RTN","IBDFBKR",36,0)
 .S RESULT=7
"RTN","IBDFBKR",37,0)
 .S I=0 F  S I=$O(IBDF(I)) Q:'I  D ARYAD(IBDF(I))
"RTN","IBDFBKR",38,0)
 .;
"RTN","IBDFBKR",39,0)
 .; -- add to the arrays data from other pages stored in form tracking
"RTN","IBDFBKR",40,0)
 .S I=0
"RTN","IBDFBKR",41,0)
 .F  S I=$O(^IBD(357.96,IBDATA("FORMID"),10,I)) Q:'I  D ARYAD($G(^IBD(357.96,IBDATA("FORMID"),10,I,0)))
"RTN","IBDFBKR",42,0)
 .;
"RTN","IBDFBKR",43,0)
 .; -- don't need the raw data kept in form tracking anymore
"RTN","IBDFBKR",44,0)
 .; -- maybe we do for formtracking???
"RTN","IBDFBKR",45,0)
 .;K ^IBD(357.96,IBDATA("FORMID"),10)
"RTN","IBDFBKR",46,0)
 .;
"RTN","IBDFBKR",47,0)
 .I $$SEND^IBDF18E(IBDATA("FORMID"),"","",.BUBBLES,.HANDPRNT,"",.PXCA,.DYNAMIC)
"RTN","IBDFBKR",48,0)
 .S RESULT=8
"RTN","IBDFBKR",49,0)
 .;S RESULT=$S($G(PXCASTAT)=1:8,$G(PXCASTAT)=0:9,1:10)
"RTN","IBDFBKR",50,0)
 .Q
"RTN","IBDFBKR",51,0)
 ;
"RTN","IBDFBKR",52,0)
PCEQ I +RESULT>10 D RECVERR^IBDFBK2(.IBDATA,+RESULT)
"RTN","IBDFBKR",53,0)
 Q +RESULT_"^"_$P($T(RESULT+RESULT),";;",2)
"RTN","IBDFBKR",54,0)
 ;
"RTN","IBDFBKR",55,0)
FILAD(REC) ;
"RTN","IBDFBKR",56,0)
 ; -- adds the data to the FORM TRACKING file
"RTN","IBDFBKR",57,0)
 ; -- awaiting all of the pages to be sent
"RTN","IBDFBKR",58,0)
 ;    REC is the line of raw data, as received
"RTN","IBDFBKR",59,0)
 ; -- may change to FM call???
"RTN","IBDFBKR",60,0)
 ;N CNT
"RTN","IBDFBKR",61,0)
 Q:REC=""
"RTN","IBDFBKR",62,0)
 ; -- remove hard sets and replace with FM call
"RTN","IBDFBKR",63,0)
 ;S CNT=+$P($G(^IBD(357.96,IBDATA("FORMID"),10,0)),"^",3)
"RTN","IBDFBKR",64,0)
 ;F  S CNT=CNT+1 Q:'$D(^IBD(357.96,IBDATA("FORMID"),10,CNT))
"RTN","IBDFBKR",65,0)
 ;S ^IBD(357.96,IBDATA("FORMID"),10,CNT,0)=REC
"RTN","IBDFBKR",66,0)
 ;S ^IBD(357.96,IBDATA("FORMID"),10,0)=$P($G(^IBD(357.96,IBDATA("FORMID"),10,0)),1,2)_"^"_CNT_"^"_CNT
"RTN","IBDFBKR",67,0)
 ;S ^IBD(357.96,IBDATA("FORMID"),10,"B",$E(REC,1,30),CNT)=""
"RTN","IBDFBKR",68,0)
 ;
"RTN","IBDFBKR",69,0)
 L +^IBD(357.96,IBDATA("FORMID")):3 I '$T S RESULT=11 Q
"RTN","IBDFBKR",70,0)
 S DIC="^IBD(357.96,"_IBDATA("FORMID")_",10,",DIC(0)="L",DIC("P")=$P(^DD(357.96,10,0),"^",2),DA(1)=IBDATA("FORMID"),X=REC,DLAYGO=357.96
"RTN","IBDFBKR",71,0)
 K DD,DO D FILE^DICN K DIC,DA,DLAYGO,DD,DO
"RTN","IBDFBKR",72,0)
 L -^IBD(357.96,IBDATA("FORMID"))
"RTN","IBDFBKR",73,0)
 Q
"RTN","IBDFBKR",74,0)
 ;
"RTN","IBDFBKR",75,0)
ARYAD(DATA) ;
"RTN","IBDFBKR",76,0)
 ; -- Input DATA
"RTN","IBDFBKR",77,0)
 ; -- DATA format B=bubble or
"RTN","IBDFBKR",78,0)
 ;                H=handprint>:<ien of form element in the form
"RTN","IBDFBKR",79,0)
 ;                  definition table>:<value entered
"RTN","IBDFBKR",80,0)
 ;                D=dynamic bubble>:<field identifier>:<number of choice>
"RTN","IBDFBKR",81,0)
 ; -- Output Bubbles,Dynamic, or Handprint Array.
"RTN","IBDFBKR",82,0)
 ;
"RTN","IBDFBKR",83,0)
 I $E(DATA,1)="""",$E(DATA,$L(DATA))="""" S DATA=$P(DATA,"""",2)
"RTN","IBDFBKR",84,0)
 I $P(DATA,":")="B" S BUBBLES($P(DATA,":",2))=$P(DATA,":",3)
"RTN","IBDFBKR",85,0)
 I $P(DATA,":")="D" S DYNAMIC($P(DATA,":",2),$P(DATA,":",3))=DATA
"RTN","IBDFBKR",86,0)
 I $P(DATA,":")="H" S HANDPRNT($P(DATA,":",2))=$P(DATA,":",3,10)
"RTN","IBDFBKR",87,0)
 Q
"RTN","IBDFBKR",88,0)
 ;
"RTN","IBDFBKR",89,0)
BRKARY(IB,IBDATA) ;
"RTN","IBDFBKR",90,0)
 ; -- break array of data into known parts
"RTN","IBDFBKR",91,0)
 ; -- Input  IB(array) contains raw data from receiver
"RTN","IBDFBKR",92,0)
 ;           IBDATA(array) called by reference
"RTN","IBDFBKR",93,0)
 ; -- Output IBDATA(array) of new formated data
"RTN","IBDFBKR",94,0)
 ;           result message indicator
"RTN","IBDFBKR",95,0)
 ;
"RTN","IBDFBKR",96,0)
 N I,X,CNT
"RTN","IBDFBKR",97,0)
 S (I,CNT)=0
"RTN","IBDFBKR",98,0)
 F  S I=$O(IBDF(I)) Q:'I!(CNT>3)  D
"RTN","IBDFBKR",99,0)
 .I $P(IB(I),"=")="FORMTYPE" S IBDATA("FORMTYPE")=+$P(IBDF(I),"=",2),CNT=CNT+1 K IBDF(I) Q
"RTN","IBDFBKR",100,0)
 .I $P(IB(I),"=")="FORMID" S IBDATA("FORMID")=+$P(IBDF(I),"=",2),CNT=CNT+1 K IBDF(I) Q
"RTN","IBDFBKR",101,0)
 .I $P(IB(I),"=")="PAGE" S IBDATA("PAGE")=+$P(IBDF(I),"=",2),CNT=CNT+1 K IBDF(I) Q
"RTN","IBDFBKR",102,0)
 .I $P(IB(I),"=")="DATA" S CNT=CNT+1 K IBDF(I) Q  ; shouldn't contain data
"RTN","IBDFBKR",103,0)
BRKQ Q 2
"RTN","IBDFBKR",104,0)
 ;
"RTN","IBDFBKR",105,0)
VALIDD(IBDATA) ;
"RTN","IBDFBKR",106,0)
 ; -- Determine if data contains Formtype, FormID, and Page
"RTN","IBDFBKR",107,0)
 ; -- Does form ID and form type match entry in Form Tracking
"RTN","IBDFBKR",108,0)
 ; -- is the form supposed to have this page?
"RTN","IBDFBKR",109,0)
 ; -- Input  IBDATA(array)
"RTN","IBDFBKR",110,0)
 ; -- Output result message indicator (3=valid, 4=invalid, 5=already recvd)
"RTN","IBDFBKR",111,0)
 ;
"RTN","IBDFBKR",112,0)
 N X S X=12 D
"RTN","IBDFBKR",113,0)
 .I '$G(IBDATA("FORMTYPE")) S X=13 Q
"RTN","IBDFBKR",114,0)
 .I '$G(IBDATA("FORMID")) S X=14 Q
"RTN","IBDFBKR",115,0)
 .I '$G(IBDATA("PAGE")) S X=15 Q
"RTN","IBDFBKR",116,0)
 .;
"RTN","IBDFBKR",117,0)
 .I $G(^IBD(357.96,+IBDATA("FORMID"),0))="" S X=16 Q
"RTN","IBDFBKR",118,0)
 .I $P($G(^IBD(357.96,+IBDATA("FORMID"),0)),"^",4)'=IBDATA("FORMTYPE") S X=17 Q
"RTN","IBDFBKR",119,0)
 .;
"RTN","IBDFBKR",120,0)
 .I '$O(^IBD(357.96,IBDATA("FORMID"),9,"B",IBDATA("PAGE"),0)) S X=18 Q
"RTN","IBDFBKR",121,0)
 .;
"RTN","IBDFBKR",122,0)
 .; -- if pce returned an error then all pages flagged as not received
"RTN","IBDFBKR",123,0)
 .I $P(^IBD(357.96,IBDATA("FORMID"),9,+$O(^IBD(357.96,IBDATA("FORMID"),9,"B",IBDATA("PAGE"),0)),0),"^",2) S X=5 Q
"RTN","IBDFBKR",124,0)
 .S X=3
"RTN","IBDFBKR",125,0)
VQ Q X
"RTN","IBDFBKR",126,0)
 ;
"RTN","IBDFBKR",127,0)
NEEDMOR(IBDATA) ;
"RTN","IBDFBKR",128,0)
 ; -- check to see if all the pages have been received
"RTN","IBDFBKR",129,0)
 N I,X
"RTN","IBDFBKR",130,0)
 S (I,X)=0
"RTN","IBDFBKR",131,0)
 F  S I=$O(^IBD(357.96,IBDATA("FORMID"),9,I)) Q:'I  D
"RTN","IBDFBKR",132,0)
 .I $G(^IBD(357.96,IBDATA("FORMID"),9,I,0)),'$P(^(0),"^",2) S X=1 Q
"RTN","IBDFBKR",133,0)
 .Q
"RTN","IBDFBKR",134,0)
NMQ Q X
"RTN","IBDFBKR",135,0)
 ;
"RTN","IBDFBKR",136,0)
RESULT ;;
"RTN","IBDFBKR",137,0)
 ;;Beginning to Format Data for PCE
"RTN","IBDFBKR",138,0)
 ;;Data Accepted, Beginning Validity Check
"RTN","IBDFBKR",139,0)
 ;;Valid Form Identity Received
"RTN","IBDFBKR",140,0)
 ;;Form ID Validity Rejected
"RTN","IBDFBKR",141,0)
 ;;Data from Page already Received
"RTN","IBDFBKR",142,0)
 ;;Waiting for more pages to be recognized
"RTN","IBDFBKR",143,0)
 ;;Formatting data for PCE
"RTN","IBDFBKR",144,0)
 ;;Data Sent to PCE
"RTN","IBDFBKR",145,0)
 ;;Data Rejected by PCE
"RTN","IBDFBKR",146,0)
 ;;Unknown result in sending data to PCE
"RTN","IBDFBKR",147,0)
 ;;Form Tracking Entry locked by another user, Editing not allowed
"RTN","IBDFBKR",148,0)
 ;;Form ID Validity Rejected
"RTN","IBDFBKR",149,0)
 ;;Form Definition of zero or null is invalid
"RTN","IBDFBKR",150,0)
 ;;Form ID of zero or null is invalid
"RTN","IBDFBKR",151,0)
 ;;Form Page number of zero or null is invalid
"RTN","IBDFBKR",152,0)
 ;;Form Tracking entry does not exist
"RTN","IBDFBKR",153,0)
 ;;Form Definition from scanning doesn't match data in Form Tracking
"RTN","IBDFBKR",154,0)
 ;;Data from non-scannable page was passed
"RTN","IBDFBKR",155,0)
 ;;Form Rejected, Patient not in clinic
"RTN","IBDFBKS")
0^146^B47115892
"RTN","IBDFBKS",1,0)
IBDFBKS ;ALB/CJM/AAS - ENCOUNTER FORM - create form spec for scanning (Broker Version) ; 6-JUN-95 [ 11/13/96  3:34 PM ]
"RTN","IBDFBKS",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFBKS",3,0)
 ;
"RTN","IBDFBKS",4,0)
SCAN(IBFORMID) ;
"RTN","IBDFBKS",5,0)
 ;
"RTN","IBDFBKS",6,0)
 Q:'$G(IBFORMID)
"RTN","IBDFBKS",7,0)
 N IBLC,PERPAGE,PAGE,ROW,COL,PAGESIZE,SCAN,ARY,X,Y,ROWHT,ROWWIDTH,CONVERT,COUNT,LINE,TAG,NAME,XOFFSET,YOFFSET,NODE,FID,TYPE,XBUBOS,YBUBOS,COUNT,YHANDOS,FIELD,IEN,QLFR,PRIORPAG,END,LN,FIELDS,IBDFILL,IBDBKGND
"RTN","IBDFBKS",8,0)
 ;XOFFSET,YOFFSET are the page margins (in decipoints)
"RTN","IBDFBKS",9,0)
 ;XBUBOS,YBUBOS are the offsets within the col,row of the bubbles
"RTN","IBDFBKS",10,0)
 ;YHANDOS is the offset for a handprint field within the row
"RTN","IBDFBKS",11,0)
 ;
"RTN","IBDFBKS",12,0)
 I $D(^IBD(359.2,IBFORMID,0)),$D(^IBD(357.95,IBFORMID,0)) S DIK="^IBD(359.2,",DA=IBFORMID D ^DIK
"RTN","IBDFBKS",13,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFBKS",14,0)
 S IBLC=0
"RTN","IBDFBKS",15,0)
 D PARAM
"RTN","IBDFBKS",16,0)
 S CONVERT=.352778 ;for converting PCL decipoints to .1mm
"RTN","IBDFBKS",17,0)
 ; This number is actually 254/720 ... 254 PK points (.1 mm) = 1 inch
"RTN","IBDFBKS",18,0)
 ;                                     720 PCL5 decipoints = 1 inch
"RTN","IBDFBKS",19,0)
 ;     A PCL5 decipoint = .352778 PK points
"RTN","IBDFBKS",20,0)
 S SCAN="^TMP(""IBDF"",$J,""SCAN"",IBFORMID)"
"RTN","IBDFBKS",21,0)
 K @SCAN
"RTN","IBDFBKS",22,0)
 ;
"RTN","IBDFBKS",23,0)
 S FIELDS="^TMP(""IBDF"",$J,""FIELDS"")"
"RTN","IBDFBKS",24,0)
 K @FIELDS
"RTN","IBDFBKS",25,0)
 ;
"RTN","IBDFBKS",26,0)
 ;get form description
"RTN","IBDFBKS",27,0)
 S NODE=$G(^IBD(357.95,IBFORMID,0))
"RTN","IBDFBKS",28,0)
 Q:NODE=""
"RTN","IBDFBKS",29,0)
 S PERPAGE=$P(NODE,"^",10)
"RTN","IBDFBKS",30,0)
 ;determine sizes and offsets - in terms of PCL decipoints
"RTN","IBDFBKS",31,0)
 S XOFFSET=180 ; This is 1/4 inch ... .25*720 PCL decipoints
"RTN","IBDFBKS",32,0)
 S YOFFSET=360 ; This is 1/2 inch ... .5*720 PCL decipoints
"RTN","IBDFBKS",33,0)
 ; rowht = # of PCL decipoints/line in height
"RTN","IBDFBKS",34,0)
 ;   80 lines (133 Col) = 720/8 lines per inch)
"RTN","IBDFBKS",35,0)
 ;   72 lines (96 Col) = 720/7.2 lines per inch)
"RTN","IBDFBKS",36,0)
 ;   60 lines (80 Col) = 720/6 lines per inch)
"RTN","IBDFBKS",37,0)
 S ROWHT=$P(NODE,"^",10),ROWHT=$S(ROWHT>72:90,ROWHT>60:100.0005,1:120)
"RTN","IBDFBKS",38,0)
 S COLWIDTH=$P(NODE,"^",9)
"RTN","IBDFBKS",39,0)
 S XBUBOS=$S(COLWIDTH>96:.5,COLWIDTH>80:.75,1:1) ;leaves offset in terms of fraction of column width - must still convert to decipoints
"RTN","IBDFBKS",40,0)
 S YBUBOS=$S(COLWIDTH>96:65,COLWIDTH>80:75,1:85)
"RTN","IBDFBKS",41,0)
 ; colwidth = # of PCL decipoints/character in width
"RTN","IBDFBKS",42,0)
 ;   133 Col = 720/16.67 char per inch
"RTN","IBDFBKS",43,0)
 ;   96 Col = 720/12 char per inch
"RTN","IBDFBKS",44,0)
 ;   80 Col = 720/10 char per inch
"RTN","IBDFBKS",45,0)
 S COLWIDTH=$S(COLWIDTH>96:(720/16.67),COLWIDTH>80:60,1:72) ;converted to decipoints
"RTN","IBDFBKS",46,0)
 S XBUBOS=XBUBOS*COLWIDTH ;converted to decipoints
"RTN","IBDFBKS",47,0)
 S YHANDOS=$S(ROWHT=90:0,ROWHT=100.0005:15,1:30)
"RTN","IBDFBKS",48,0)
 ;
"RTN","IBDFBKS",49,0)
 ;get the list of scannable pages
"RTN","IBDFBKS",50,0)
 S IEN=0 F  S IEN=$O(^IBD(357.95,IBFORMID,3,IEN)) Q:'IEN  S NODE=$G(^IBD(357.95,IBFORMID,3,IEN,0)) S:$P(NODE,"^",2) PAGE(+NODE)=""
"RTN","IBDFBKS",51,0)
 ;
"RTN","IBDFBKS",52,0)
 ;
"RTN","IBDFBKS",53,0)
 S PAGE=0 F  S PAGE=$O(PAGE(PAGE)) Q:'PAGE  D
"RTN","IBDFBKS",54,0)
 .;
"RTN","IBDFBKS",55,0)
 .;list all the bubbles
"RTN","IBDFBKS",56,0)
 .S ROW=((PAGE-1)*PERPAGE)-1
"RTN","IBDFBKS",57,0)
 .S ARY="^IBD(357.95,""AC"","_IBFORMID_")"
"RTN","IBDFBKS",58,0)
 .F  S ROW=$O(@ARY@(ROW)) Q:ROW=""  D
"RTN","IBDFBKS",59,0)
 ..Q:(ROW\PERPAGE)+1'=PAGE
"RTN","IBDFBKS",60,0)
 ..S COL="" F  S COL=$O(@ARY@(ROW,COL)) Q:COL=""  S IEN=0 F  S IEN=$O(@ARY@(ROW,COL,IEN)) Q:'IEN  D
"RTN","IBDFBKS",61,0)
 ...S NODE=$G(^IBD(357.95,IBFORMID,1,IEN,0))
"RTN","IBDFBKS",62,0)
 ...Q:($P(NODE,"^",6)="")!(($P(NODE,"^",4)="")&($P(NODE,"^",8)=""))!('$P(NODE,"^",3))
"RTN","IBDFBKS",63,0)
 ...S NAME=$E($P(NODE,"^",5),1,17),QLFR=$P(NODE,"^",10)
"RTN","IBDFBKS",64,0)
 ...S TYPE=$P(NODE,"^",7)
"RTN","IBDFBKS",65,0)
 ...I (TYPE=0)!(TYPE=3) S:QLFR QLFR=$P($G(^IBD(357.98,QLFR,0)),"^",3)
"RTN","IBDFBKS",66,0)
 ...I (TYPE=1)!(TYPE=2) S:QLFR QLFR=$E($P($G(^IBD(357.98,QLFR,0)),"^"),1,12)
"RTN","IBDFBKS",67,0)
 ...I QLFR'="" S NAME=NAME_"("_QLFR_")"
"RTN","IBDFBKS",68,0)
 ...I QLFR="" S NAME=NAME_"-"
"RTN","IBDFBKS",69,0)
 ...S @SCAN@(PAGE,$P(NODE,"^",6),+$P(NODE,"^",7),COL,(ROW-((PAGE-1)*PERPAGE)),IEN)=$P(NODE,"^",3,12)
"RTN","IBDFBKS",70,0)
 ...S @SCAN@(PAGE,$P(NODE,"^",6))=NAME
"RTN","IBDFBKS",71,0)
 ...;
"RTN","IBDFBKS",72,0)
 .;
"RTN","IBDFBKS",73,0)
 .;list all the handprint fields
"RTN","IBDFBKS",74,0)
 .S ARY="^IBD(357.95,""AD"","_IBFORMID_")"
"RTN","IBDFBKS",75,0)
 .S ROW=((PAGE-1)*PERPAGE)-1
"RTN","IBDFBKS",76,0)
 .F  S ROW=$O(@ARY@(ROW)) Q:ROW=""  D
"RTN","IBDFBKS",77,0)
 ..Q:(ROW\PERPAGE)+1'=PAGE
"RTN","IBDFBKS",78,0)
 ..S COL="" F  S COL=$O(@ARY@(ROW,COL)) Q:COL=""  S IEN=0 F  S IEN=$O(@ARY@(ROW,COL,IEN)) Q:'IEN  D
"RTN","IBDFBKS",79,0)
 ...S NODE=$G(^IBD(357.95,IBFORMID,2,IEN,0))
"RTN","IBDFBKS",80,0)
 ...Q:($P(NODE,"^",8)="")!('$P(NODE,"^",4))!('$P(NODE,"^",15))
"RTN","IBDFBKS",81,0)
 ...S @SCAN@(PAGE,$P(NODE,"^",8),6,COL,(ROW-((PAGE-1)*PERPAGE)),IEN)=$P(NODE,"^",3,17),NAME=$E($P(NODE,"^",5),1,15)
"RTN","IBDFBKS",82,0)
 ...I $P(NODE,"^",17) S NAME=NAME_"("_$P($G(^IBE(359.1,$P(NODE,"^",17),0)),"^")_")"
"RTN","IBDFBKS",83,0)
 ...S @SCAN@(PAGE,$P(NODE,"^",8))=NAME
"RTN","IBDFBKS",84,0)
 ;
"RTN","IBDFBKS",85,0)
 ;make form description
"RTN","IBDFBKS",86,0)
 F COUNT=1:1 S LINE=$T(FORM+COUNT^IBDFBKS1),TAG=$P(LINE,";;"),LINE=$P(LINE,";;",2) Q:TAG["QUIT"  D
"RTN","IBDFBKS",87,0)
 .N PG
"RTN","IBDFBKS",88,0)
 .D BLDARY("")
"RTN","IBDFBKS",89,0)
 .I TAG["NAME" S IBDFSA(IBLC)=IBDFSA(IBLC)_"  NAME = ""ENCOUNTER FORM "_IBFORMID_""";" Q
"RTN","IBDFBKS",90,0)
 .I TAG["PGCK" S IBDFSA(IBLC)=IBDFSA(IBLC)_"  else if ("  D  Q
"RTN","IBDFBKS",91,0)
 ..S PG=$O(PAGE(0))
"RTN","IBDFBKS",92,0)
 ..S IBDFSA(IBLC)=IBDFSA(IBLC)_"(page!="_PG_")"
"RTN","IBDFBKS",93,0)
 ..F  S PG=$O(PAGE(PG)) Q:'PG  S IBDFSA(IBLC)=IBDFSA(IBLC)_"&&(page!="_PG_")"
"RTN","IBDFBKS",94,0)
 ..S IBDFSA(IBLC)=IBDFSA(IBLC)_"){"
"RTN","IBDFBKS",95,0)
 .S IBDFSA(IBLC)=IBDFSA(IBLC)_LINE
"RTN","IBDFBKS",96,0)
 .;D BLDARY(LINE)
"RTN","IBDFBKS",97,0)
 ;
"RTN","IBDFBKS",98,0)
 ;make fields
"RTN","IBDFBKS",99,0)
 S PAGE=0,FIELD=9,PRIORPG=$O(@SCAN@(0)),LN=0,BLN=0
"RTN","IBDFBKS",100,0)
 F  S PAGE=$O(@SCAN@(PAGE)) D:PRIORPG'=PAGE PRINTEND^IBDFBKS3 Q:'PAGE  S FID="" F  S FID=$O(@SCAN@(PAGE,FID)) Q:FID=""  S TYPE=$O(@SCAN@(PAGE,FID,"")) Q:TYPE=""  D
"RTN","IBDFBKS",101,0)
 .S NAME=$G(@SCAN@(PAGE,FID))
"RTN","IBDFBKS",102,0)
 .;
"RTN","IBDFBKS",103,0)
 .; -- 1 = EXACTLY ONE, 2 = AT MOST ONE (0 or 1)
"RTN","IBDFBKS",104,0)
 .I (TYPE=1)!(TYPE=2) S FIELD=FIELD+1,@FIELDS@(PAGE,FIELD)="" D
"RTN","IBDFBKS",105,0)
 ..I TYPE=1 S NAME=NAME_" (1 Required)"
"RTN","IBDFBKS",106,0)
 ..I TYPE=2 S NAME=NAME_" (1 Optional)"
"RTN","IBDFBKS",107,0)
 ..S NAME=$$NAME(NAME)
"RTN","IBDFBKS",108,0)
 ..D BUBBLE^IBDFBKS3 Q
"RTN","IBDFBKS",109,0)
 .;
"RTN","IBDFBKS",110,0)
 .I TYPE=6 D  Q
"RTN","IBDFBKS",111,0)
 ..N OLDNAME S OLDNAME=NAME
"RTN","IBDFBKS",112,0)
 ..S COL="" F  S COL=$O(@SCAN@(PAGE,FID,TYPE,COL)) Q:COL=""  S ROW="" F  S ROW=$O(@SCAN@(PAGE,FID,TYPE,COL,ROW)) Q:ROW=""  S IEN=0 F  S IEN=$O(@SCAN@(PAGE,FID,TYPE,COL,ROW,IEN)) Q:'IEN  D
"RTN","IBDFBKS",113,0)
 ...S NAME=$$NAME(OLDNAME)
"RTN","IBDFBKS",114,0)
 ...;S IBDLAST=0 I $O(@SCAN@(PAGE,FID,TYPE,COL,ROW))="",$O(@SCAN@(PAGE,FID,TYPE,COL))="",$O(@SCAN@(PAGE,FID,TYPE))="" S IBDLAST=1
"RTN","IBDFBKS",115,0)
 ...S NODE=$G(@SCAN@(PAGE,FID,6,COL,ROW,IEN)) D HANDPRNT^IBDFBKS2(IEN,NAME,PAGE,ROW,COL,$P(NODE,"^",1),$P(NODE,"^",4),$P(NODE,"^",13),$P(NODE,"^",15),$P(NODE,"^",2))
"RTN","IBDFBKS",116,0)
 .;
"RTN","IBDFBKS",117,0)
 .;0 = ANY NUMBER
"RTN","IBDFBKS",118,0)
 .;3 = AT LEAST ONE (1 or more)
"RTN","IBDFBKS",119,0)
 .I (TYPE=0)!(TYPE=3) D
"RTN","IBDFBKS",120,0)
 ..N OLDNAME
"RTN","IBDFBKS",121,0)
 ..;I TYPE=3 N FIRST,LAST S LAST=FIELD+1,LAST=""
"RTN","IBDFBKS",122,0)
 ..I TYPE=3 N FIRST,LAST S FIRST=FIELD+1,LAST=""
"RTN","IBDFBKS",123,0)
 ..S COL="" F  S COL=$O(@SCAN@(PAGE,FID,TYPE,COL)) Q:COL=""  S ROW="" F  S ROW=$O(@SCAN@(PAGE,FID,TYPE,COL,ROW)) Q:ROW=""  S IEN=$O(@SCAN@(PAGE,FID,TYPE,COL,ROW,0)) D:IEN
"RTN","IBDFBKS",124,0)
 ...S FIELD=FIELD+1,@FIELDS@(PAGE,FIELD)="",NODE=$G(@SCAN@(PAGE,FID,TYPE,COL,ROW,IEN))
"RTN","IBDFBKS",125,0)
 ...S (NAME,OLDNAME)=$G(@SCAN@(PAGE,FID))
"RTN","IBDFBKS",126,0)
 ...S NAME=$$NAME(NAME)
"RTN","IBDFBKS",127,0)
 ...I TYPE=3,$O(@SCAN@(PAGE,FID,TYPE,COL,ROW))="",($O(@SCAN@(PAGE,FID,TYPE,COL))="") S LAST=FIELD
"RTN","IBDFBKS",128,0)
 ...D BUBBLE^IBDFBKS3
"RTN","IBDFBKS",129,0)
 ;
"RTN","IBDFBKS",130,0)
END ; -- end of routine
"RTN","IBDFBKS",131,0)
 K @SCAN
"RTN","IBDFBKS",132,0)
 K @FIELDS
"RTN","IBDFBKS",133,0)
 K ^TMP("IBDF-NAME",$J)
"RTN","IBDFBKS",134,0)
 S ^IBD(359.2,IBFORMID,10,IBLC,0)=IBDFSA(IBLC)
"RTN","IBDFBKS",135,0)
 S ^IBD(359.2,IBFORMID,10,0)="^^"_IBLC_"^"_IBLC_"^"_DT_"^"
"RTN","IBDFBKS",136,0)
 Q
"RTN","IBDFBKS",137,0)
 ;
"RTN","IBDFBKS",138,0)
NAME(NAME) ;
"RTN","IBDFBKS",139,0)
 ; -- make sure name is unique
"RTN","IBDFBKS",140,0)
 N X
"RTN","IBDFBKS",141,0)
 I (TYPE=0)!(TYPE=3) S NAME=NAME_" "_$P(NODE,"^",6) I TYPE=3
"RTN","IBDFBKS",142,0)
 I TYPE=1,NAME'["Required" S NAME=NAME_" Required"
"RTN","IBDFBKS",143,0)
 S X=$G(^TMP("IBDF-NAME",$J,NAME))+1
"RTN","IBDFBKS",144,0)
 S ^TMP("IBDF-NAME",$J,NAME)=+X
"RTN","IBDFBKS",145,0)
 I X>1 S NAME=NAME_"  #"_X
"RTN","IBDFBKS",146,0)
 Q NAME
"RTN","IBDFBKS",147,0)
 ;
"RTN","IBDFBKS",148,0)
BLDARY(TEXT) ;
"RTN","IBDFBKS",149,0)
 ; -- builds the export array IBDFS(linecount) = text
"RTN","IBDFBKS",150,0)
 N DIC,DA,DINUM,X,Y,I,J,DLAYGO
"RTN","IBDFBKS",151,0)
 I IBLC=1 D
"RTN","IBDFBKS",152,0)
 .S DIC="^IBD(359.2,",DIC(0)="L",DLAYGO=359.2,(DINUM,X)=IBFORMID D FILE^DICN
"RTN","IBDFBKS",153,0)
 .Q
"RTN","IBDFBKS",154,0)
 ;
"RTN","IBDFBKS",155,0)
 I IBLC>0 D
"RTN","IBDFBKS",156,0)
 .S ^IBD(359.2,IBFORMID,10,IBLC,0)=IBDFSA(IBLC)
"RTN","IBDFBKS",157,0)
 .K IBDFSA(IBLC)
"RTN","IBDFBKS",158,0)
 .Q
"RTN","IBDFBKS",159,0)
 ;
"RTN","IBDFBKS",160,0)
 S IBLC=IBLC+1
"RTN","IBDFBKS",161,0)
 S IBDFSA(IBLC)=$G(TEXT)
"RTN","IBDFBKS",162,0)
 Q
"RTN","IBDFBKS",163,0)
 ;
"RTN","IBDFBKS",164,0)
WRITE(IBFORMID) ;
"RTN","IBDFBKS",165,0)
 N LINE S LINE=0
"RTN","IBDFBKS",166,0)
 S X=0 X ^%ZOSF("RM")
"RTN","IBDFBKS",167,0)
 F  S LINE=$O(^IBD(359.2,IBFORMID,10,LINE))  Q:'LINE  W !,$G(^IBD(359.2,IBFORMID,10,LINE,0))
"RTN","IBDFBKS",168,0)
 S X=80 X ^%ZOSF("RM")
"RTN","IBDFBKS",169,0)
 Q
"RTN","IBDFBKS",170,0)
 ;
"RTN","IBDFBKS",171,0)
PARAM ; -- get values from parameter file
"RTN","IBDFBKS",172,0)
 ;    ibdfill  := % fill required
"RTN","IBDFBKS",173,0)
 ;    ibdbkgnd := % background expected
"RTN","IBDFBKS",174,0)
 S IBDFILL=$P($G(^IBD(357.09,1,0)),"^",8) I IBDFILL="" S IBDFILL=20
"RTN","IBDFBKS",175,0)
 S IBDBKGND=$P($G(^IBD(357.09,1,0)),"^",9) I IBDBKGND="" S IBDBKGND=5
"RTN","IBDFBKS",176,0)
 Q
"RTN","IBDFBKS1")
0^147^B51048469
"RTN","IBDFBKS1",1,0)
IBDFBKS1 ;ALB/CJM/AAS - ENCOUNTER FORM - create form spec for scanning (Broker Version CONTINUATION) ; 6-JUN-95
"RTN","IBDFBKS1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFBKS1",3,0)
 ;
"RTN","IBDFBKS1",4,0)
 ;
"RTN","IBDFBKS1",5,0)
FORM ;;
"RTN","IBDFBKS1",6,0)
 ;;'Paper Keyboard FormSpec
"RTN","IBDFBKS1",7,0)
 ;;'VERSION = 2.53
"RTN","IBDFBKS1",8,0)
 ;;'AICS Version 3.0
"RTN","IBDFBKS1",9,0)
 ;;INT hasprint;
"RTN","IBDFBKS1",10,0)
 ;;INT check;
"RTN","IBDFBKS1",11,0)
 ;;INT pfid;
"RTN","IBDFBKS1",12,0)
 ;;INT page;
"RTN","IBDFBKS1",13,0)
 ;;INT saveunrf;
"RTN","IBDFBKS1",14,0)
 ;;ALPHA narrative;
"RTN","IBDFBKS1",15,0)
 ;;
"RTN","IBDFBKS1",16,0)
 ;;FORM
"RTN","IBDFBKS1",17,0)
NAME ;;  NAME = "ENCOUNTER FORM 71";
"RTN","IBDFBKS1",18,0)
 ;;  AREA =  0 0 2810 2150;
"RTN","IBDFBKS1",19,0)
 ;;  PAGESIZE = " 2810 2150";
"RTN","IBDFBKS1",20,0)
 ;;  ANCHOR1 = NONE;
"RTN","IBDFBKS1",21,0)
 ;;  ANCHOR2 = NONE;
"RTN","IBDFBKS1",22,0)
 ;;  POINTS = 0 0 0 0;
"RTN","IBDFBKS1",23,0)
 ;;  CONFIDENCE = " 9";
"RTN","IBDFBKS1",24,0)
 ;;  DATEFORMAT = "6";
"RTN","IBDFBKS1",25,0)
 ;;  TIMEFORMAT = "5";
"RTN","IBDFBKS1",26,0)
 ;;  EXFORMAT = "STRIP";
"RTN","IBDFBKS1",27,0)
 ;;  FS = ",";
"RTN","IBDFBKS1",28,0)
 ;;  Recognition = "hasprint=0;";
"RTN","IBDFBKS1",29,0)
 ;;  QUOTABLE = "\\n";
"RTN","IBDFBKS1",30,0)
 ;;  ImageProcessing = {
"RTN","IBDFBKS1",31,0)
 ;;     IMAGEPROC=1
"RTN","IBDFBKS1",32,0)
 ;;     AUTO_ALIGN=0
"RTN","IBDFBKS1",33,0)
 ;;     ALIGN_TEXT=0
"RTN","IBDFBKS1",34,0)
 ;;     ALIGN_ORIENT=0
"RTN","IBDFBKS1",35,0)
 ;;     DESKEW=0
"RTN","IBDFBKS1",36,0)
 ;;     DESHADE=0
"RTN","IBDFBKS1",37,0)
 ;;     SMOOTH=0
"RTN","IBDFBKS1",38,0)
 ;;     REMOVE_BORDER=1
"RTN","IBDFBKS1",39,0)
 ;;     REMOVE_NOISE=0
"RTN","IBDFBKS1",40,0)
 ;;     PROC_MIN_VERT_LINE_LEN=0
"RTN","IBDFBKS1",41,0)
 ;;     PROC_MIN_HORZ_LINE_LEN=0
"RTN","IBDFBKS1",42,0)
 ;;     FATTYPE=0
"RTN","IBDFBKS1",43,0)
 ;;     FATTEN=0};
"RTN","IBDFBKS1",44,0)
 ;;FIELD ' 1
"RTN","IBDFBKS1",45,0)
 ;;  NAME = "ANCHOR 3";
"RTN","IBDFBKS1",46,0)
 ;;  ELEMTYPE = CROSSHAIR;
"RTN","IBDFBKS1",47,0)
 ;;  METRIC = 3 2 20 50 0 0 90 100;
"RTN","IBDFBKS1",48,0)
 ;;  DATATYPE =INT;
"RTN","IBDFBKS1",49,0)
 ;;  LENGTH = 1;
"RTN","IBDFBKS1",50,0)
 ;;  POINTS = 65 2056;
"RTN","IBDFBKS1",51,0)
 ;;  PAGE = 0;
"RTN","IBDFBKS1",52,0)
 ;;  ANCHOR = "1";
"RTN","IBDFBKS1",53,0)
 ;;  HIDDEN = "1";
"RTN","IBDFBKS1",54,0)
 ;;  REQUIRED = "1";
"RTN","IBDFBKS1",55,0)
 ;;FIELD ' 2
"RTN","IBDFBKS1",56,0)
 ;;  NAME = "ANCHOR 6";
"RTN","IBDFBKS1",57,0)
 ;;  ELEMTYPE = CROSSHAIR;
"RTN","IBDFBKS1",58,0)
 ;;  METRIC = 3 4 20 50 0 0 90 100;
"RTN","IBDFBKS1",59,0)
 ;;  DATATYPE =INT;
"RTN","IBDFBKS1",60,0)
 ;;  LENGTH = 1;
"RTN","IBDFBKS1",61,0)
 ;;  POINTS = 2729 2056;
"RTN","IBDFBKS1",62,0)
 ;;  PAGE = 0;
"RTN","IBDFBKS1",63,0)
 ;;  ANCHOR = "1";
"RTN","IBDFBKS1",64,0)
 ;;  HIDDEN = "1";
"RTN","IBDFBKS1",65,0)
 ;;  REQUIRED = "1";
"RTN","IBDFBKS1",66,0)
 ;;FIELD ' 3
"RTN","IBDFBKS1",67,0)
 ;;  NAME = "ANCHOR 1";
"RTN","IBDFBKS1",68,0)
 ;;  ELEMTYPE = CROSSHAIR;
"RTN","IBDFBKS1",69,0)
 ;;  METRIC = 3 1 20 50 0 0 90 100;
"RTN","IBDFBKS1",70,0)
 ;;  DATATYPE =INT;
"RTN","IBDFBKS1",71,0)
 ;;  LENGTH = 1;
"RTN","IBDFBKS1",72,0)
 ;;  POINTS = 65 65;
"RTN","IBDFBKS1",73,0)
 ;;  PAGE = 0;
"RTN","IBDFBKS1",74,0)
 ;;  ANCHOR = "1";
"RTN","IBDFBKS1",75,0)
 ;;  HIDDEN = "1";
"RTN","IBDFBKS1",76,0)
 ;;  REQUIRED = "1";
"RTN","IBDFBKS1",77,0)
 ;;FIELD ' 4
"RTN","IBDFBKS1",78,0)
 ;;  NAME = "ANCHOR 4";
"RTN","IBDFBKS1",79,0)
 ;;  ELEMTYPE = CROSSHAIR;
"RTN","IBDFBKS1",80,0)
 ;;  METRIC = 3 3 20 50 0 0 90 80;
"RTN","IBDFBKS1",81,0)
 ;;  DATATYPE =INT;
"RTN","IBDFBKS1",82,0)
 ;;  LENGTH = 1;
"RTN","IBDFBKS1",83,0)
 ;;  POINTS = 2729 65;
"RTN","IBDFBKS1",84,0)
 ;;  PAGE = 0;
"RTN","IBDFBKS1",85,0)
 ;;  ANCHOR = "1";
"RTN","IBDFBKS1",86,0)
 ;;  HIDDEN = "1";
"RTN","IBDFBKS1",87,0)
 ;;  REQUIRED = "1";
"RTN","IBDFBKS1",88,0)
 ;;FIELD ' 5
"RTN","IBDFBKS1",89,0)
 ;;NAME = "SCANPAGE?";
"RTN","IBDFBKS1",90,0)
 ;;ELEMTYPE = RECT;
"RTN","IBDFBKS1",91,0)
 ;;METRIC = 30 30 0 0 0 0 90 0 1;
"RTN","IBDFBKS1",92,0)
 ;;DATATYPE =INT;
"RTN","IBDFBKS1",93,0)
 ;;LENGTH = 1;
"RTN","IBDFBKS1",94,0)
 ;;POINTS = 2710 1273;
"RTN","IBDFBKS1",95,0)
 ;;PAGE = 0;
"RTN","IBDFBKS1",96,0)
 ;; HIDDEN = "1";
"RTN","IBDFBKS1",97,0)
 ;;EXFORMAT="NOEXPORT";
"RTN","IBDFBKS1",98,0)
 ;;MAP = "PAGE HAS NO DATA,PAGE HAS DATA";
"RTN","IBDFBKS1",99,0)
 ;;XMAP = "0,1";
"RTN","IBDFBKS1",100,0)
 ;;FIELD ' 6
"RTN","IBDFBKS1",101,0)
 ;;  NAME = "FORM ID CHECK";
"RTN","IBDFBKS1",102,0)
 ;;  ELEMTYPE = ELEM_OCR;
"RTN","IBDFBKS1",103,0)
 ;;  DATATYPE =INT;
"RTN","IBDFBKS1",104,0)
 ;;  LENGTH = 3;
"RTN","IBDFBKS1",105,0)
 ;;  POINTS = 60 1422 120 1530;
"RTN","IBDFBKS1",106,0)
 ;;  PAGE = 0;
"RTN","IBDFBKS1",107,0)
 ;;  CONFIDENCE = " 10";
"RTN","IBDFBKS1",108,0)
 ;;  CHARFORMAT = "NOSPACES";
"RTN","IBDFBKS1",109,0)
 ;;  END = {
"RTN","IBDFBKS1",110,0)
 ;;  check=GETIVALUE(FIELDNAME);};
"RTN","IBDFBKS1",111,0)
 ;;  HIDDEN = "1";
"RTN","IBDFBKS1",112,0)
 ;;  REQUIRED = "1";
"RTN","IBDFBKS1",113,0)
 ;;FIELD ' 7
"RTN","IBDFBKS1",114,0)
 ;;  NAME = "FORM ID";
"RTN","IBDFBKS1",115,0)
 ;;  ELEMTYPE = ELEM_OCR;
"RTN","IBDFBKS1",116,0)
 ;;  DATATYPE =INT;
"RTN","IBDFBKS1",117,0)
 ;;  LENGTH = 9;
"RTN","IBDFBKS1",118,0)
 ;;  POINTS = 60 652 120 910;
"RTN","IBDFBKS1",119,0)
 ;;  PAGE = 0;
"RTN","IBDFBKS1",120,0)
 ;;  CONFIDENCE = " 10";
"RTN","IBDFBKS1",121,0)
 ;;  CHARFORMAT = "NOSPACES";
"RTN","IBDFBKS1",122,0)
 ;;  END = {
"RTN","IBDFBKS1",123,0)
 ;;  INT checksum;
"RTN","IBDFBKS1",124,0)
 ;;  INT div;
"RTN","IBDFBKS1",125,0)
 ;;
"RTN","IBDFBKS1",126,0)
 ;;  pfid=GETIVALUE(FIELDNAME);
"RTN","IBDFBKS1",127,0)
 ;;  checksum=3*pfid;
"RTN","IBDFBKS1",128,0)
 ;;  div=checksum/997;
"RTN","IBDFBKS1",129,0)
 ;;  checksum=checksum-(div*997);
"RTN","IBDFBKS1",130,0)
 ;;  if ((checksum!=check)&&(FIELDACCEPTED!=1)) {
"RTN","IBDFBKS1",131,0)
 ;;  FIELDSTATUS=FIELD_BAD;
"RTN","IBDFBKS1",132,0)
 ;;  }
"RTN","IBDFBKS1",133,0)
 ;;};
"RTN","IBDFBKS1",134,0)
 ;;FIELD ' 8
"RTN","IBDFBKS1",135,0)
 ;;  NAME = "PAGE CHECK";
"RTN","IBDFBKS1",136,0)
 ;;  ELEMTYPE = ELEM_OCR;
"RTN","IBDFBKS1",137,0)
 ;;  DATATYPE =INT;
"RTN","IBDFBKS1",138,0)
 ;;  LENGTH = 3;
"RTN","IBDFBKS1",139,0)
 ;;  POINTS = 60 1600 120 1700;
"RTN","IBDFBKS1",140,0)
 ;;  PAGE = 0;
"RTN","IBDFBKS1",141,0)
 ;;  CHARFORMAT = "NOSPACES";
"RTN","IBDFBKS1",142,0)
 ;;  END = {
"RTN","IBDFBKS1",143,0)
 ;;  check=GETIVALUE(FIELDNAME);};
"RTN","IBDFBKS1",144,0)
 ;;  HIDDEN = "1";
"RTN","IBDFBKS1",145,0)
 ;;  REQUIRED = "1";
"RTN","IBDFBKS1",146,0)
 ;;FIELD ' 9
"RTN","IBDFBKS1",147,0)
 ;;  NAME = "PAGE";
"RTN","IBDFBKS1",148,0)
 ;;  ELEMTYPE = ELEM_OCR;
"RTN","IBDFBKS1",149,0)
 ;;  DATATYPE =INT;
"RTN","IBDFBKS1",150,0)
 ;;  LENGTH = 1;
"RTN","IBDFBKS1",151,0)
 ;;  POINTS = 60 1858 120 1934;
"RTN","IBDFBKS1",152,0)
 ;;  PAGE = 0;
"RTN","IBDFBKS1",153,0)
 ;;  CHARFORMAT = "NOSPACES";
"RTN","IBDFBKS1",154,0)
 ;;  END = {INT  checksum;
"RTN","IBDFBKS1",155,0)
 ;;  INT div;
"RTN","IBDFBKS1",156,0)
 ;;  ALPHA next;
"RTN","IBDFBKS1",157,0)
 ;;
"RTN","IBDFBKS1",158,0)
 ;;  page=GETIVALUE(FIELDNAME);
"RTN","IBDFBKS1",159,0)
 ;;  next=STRCAT("TOP OF PAGE ",ITOA(page));
"RTN","IBDFBKS1",160,0)
 ;;  checksum=3*page;
"RTN","IBDFBKS1",161,0)
 ;;  div=checksum/997;
"RTN","IBDFBKS1",162,0)
 ;;  checksum=checksum-(div*997);
"RTN","IBDFBKS1",163,0)
 ;;
"RTN","IBDFBKS1",164,0)
 ;;  if ((checksum!=check)&&(FIELDACCEPTED!=1)) {
"RTN","IBDFBKS1",165,0)
 ;;  FIELDSTATUS=FIELD_BAD;
"RTN","IBDFBKS1",166,0)
 ;;  }
"RTN","IBDFBKS1",167,0)
PGCK ;;  else if ((page!=1)&&(page!=2)){
"RTN","IBDFBKS1",168,0)
 ;;  FIELDSTATUS=FIELD_BAD;
"RTN","IBDFBKS1",169,0)
 ;;  }
"RTN","IBDFBKS1",170,0)
 ;;  else if (page>1) {NEXTFIELD=GETNUM(next); }
"RTN","IBDFBKS1",171,0)
 ;;};
"RTN","IBDFBKS1",172,0)
QUIT ;;
"RTN","IBDFBKS1",173,0)
 ;;
"RTN","IBDFBKS1",174,0)
 ;;
"RTN","IBDFBKS1",175,0)
TOPOFPG ;;
"RTN","IBDFBKS1",176,0)
NUMBER1 ;;FIELD ' 49
"RTN","IBDFBKS1",177,0)
FLDNAME ;;  NAME = "TOP OF PAGE 2";
"RTN","IBDFBKS1",178,0)
 ;;  ELEMTYPE = RECT;
"RTN","IBDFBKS1",179,0)
 ;;  METRIC = 2 2 0 0 0 0 0 0 0;
"RTN","IBDFBKS1",180,0)
 ;;  DATATYPE =INT;
"RTN","IBDFBKS1",181,0)
 ;;  LENGTH = 1;
"RTN","IBDFBKS1",182,0)
 ;;  POINTS = 100 2040;
"RTN","IBDFBKS1",183,0)
PAGE1 ;;  PAGE = 1;
"RTN","IBDFBKS1",184,0)
 ;;  HIDDEN="1";
"RTN","IBDFBKS1",185,0)
 ;;  EXFORMAT="NOEXPORT";
"RTN","IBDFBKS1",186,0)
QUIT1 ;;
"RTN","IBDFBKS1",187,0)
 ;;
"RTN","IBDFBKS1",188,0)
BOTTOM ;;
"RTN","IBDFBKS1",189,0)
NUMBER2 ;;FIELD ' 49
"RTN","IBDFBKS1",190,0)
NAME2 ;;  NAME = "BOTTOM OF PAGE";
"RTN","IBDFBKS1",191,0)
 ;;  ELEMTYPE = RECT;
"RTN","IBDFBKS1",192,0)
 ;;  METRIC = 2 2 0 0 0 0 0 0 0;
"RTN","IBDFBKS1",193,0)
 ;;  DATATYPE =INT;
"RTN","IBDFBKS1",194,0)
 ;;  LENGTH = 1;
"RTN","IBDFBKS1",195,0)
 ;;  POINTS = 100 2040;
"RTN","IBDFBKS1",196,0)
PAGE2 ;;  PAGE = 1;
"RTN","IBDFBKS1",197,0)
 ;;  HIDDEN="1";
"RTN","IBDFBKS1",198,0)
 ;;END = {INT result;
"RTN","IBDFBKS1",199,0)
 ;;INT ddechan;
"RTN","IBDFBKS1",200,0)
 ;;INT loop;
"RTN","IBDFBKS1",201,0)
 ;;ALPHA Data;
"RTN","IBDFBKS1",202,0)
 ;;ALPHA str;
"RTN","IBDFBKS1",203,0)
 ;;ALPHA  RS;
"RTN","IBDFBKS1",204,0)
 ;;ALPHA Save;
"RTN","IBDFBKS1",205,0)
 ;;ALPHA New;
"RTN","IBDFBKS1",206,0)
 ;;ALPHA Add;
"RTN","IBDFBKS1",207,0)
 ;;ALPHA End;
"RTN","IBDFBKS1",208,0)
 ;;
"RTN","IBDFBKS1",209,0)
 ;;New=\"$$NEW$$("\;
"RTN","IBDFBKS1",210,0)
 ;;Add=\"$$ADD$$("\;
"RTN","IBDFBKS1",211,0)
 ;;End=\"$$END$$("\;
"RTN","IBDFBKS1",212,0)
 ;;RS=STRCAT(",",ITOC(13));
"RTN","IBDFBKS1",213,0)
 ;;
"RTN","IBDFBKS1",214,0)
 ;;if (BATCH&&(saveunrf>0)){
"RTN","IBDFBKS1",215,0)
SAVE ;;  Save = \"SAVEFORM("\;
"RTN","IBDFBKS1",216,0)
 ;;  ddechan = DDEINIT(\"IBDSCAN\",\"DdeServerConv\");
"RTN","IBDFBKS1",217,0)
 ;;    if (ddechan==0) {
"RTN","IBDFBKS1",218,0)
 ;;       DIALOG(\"\", \"OK\", \"\",\"Unable to Open Channel to AICS to Export Data!\");
"RTN","IBDFBKS1",219,0)
 ;;       CHAIN(\"AICSMSTR.FS\",1);
"RTN","IBDFBKS1",220,0)
 ;;       }
"RTN","IBDFBKS1",221,0)
 ;;  else {
"RTN","IBDFBKS1",222,0)
 ;;    result = DDEEXEC(ddechan,Save);
"RTN","IBDFBKS1",223,0)
 ;;    if (result==0) {
"RTN","IBDFBKS1",224,0)
 ;;       DIALOG(\"\", \"OK\", \"\", \"Warning: Saving of Unrecognized form in AICS has Failed!\");}
"RTN","IBDFBKS1",225,0)
 ;;     else {
"RTN","IBDFBKS1",226,0)
 ;;          DDEPOKE(ddechan,\"DdeServerItem\",\"Operator Verification Needed\");}
"RTN","IBDFBKS1",227,0)
 ;;    DDETERM(ddechan);
"RTN","IBDFBKS1",228,0)
 ;;    }
"RTN","IBDFBKS1",229,0)
 ;;  CHAIN(\"AICSMSTR.FS\",1);}
"RTN","IBDFBKS1",230,0)
 ;;
"RTN","IBDFBKS1",231,0)
 ;;    ddechan=DDEINIT(\"IBDSCAN\",\"DdeServerConv\");
"RTN","IBDFBKS1",232,0)
 ;;    if (ddechan==0) {
"RTN","IBDFBKS1",233,0)
 ;;       DIALOG(\"\", \"OK\", \"\",\"Unable to Open Channel to AICS to Export Data!\");
"RTN","IBDFBKS1",234,0)
 ;;       CHAIN(\"AICSMSTR.FS\",1);
"RTN","IBDFBKS1",235,0)
 ;;       }
"RTN","IBDFBKS1",236,0)
 ;;  else {
"RTN","IBDFBKS1",237,0)
EXPORT ;;      \'if (STRFIND(Data,RS,STRLEN(Data) - 1) > 0) {;;      \'    Data = SUBSTR(Data,1,STRLEN(Data) - 1); }
"RTN","IBDFBKS1",238,0)
 ;;       result=DDEPOKE(ddechan,\"DdeServerItem\",End);
"RTN","IBDFBKS1",239,0)
 ;;
"RTN","IBDFBKS1",240,0)
 ;;  DDETERM(ddechan);
"RTN","IBDFBKS1",241,0)
 ;;  }
"RTN","IBDFBKS1",242,0)
 ;;CHAIN(\"AICSMSTR.FS\",1);
"RTN","IBDFBKS1",243,0)
 ;;};
"RTN","IBDFBKS1",244,0)
 ;;EXFORMAT="NOEXPORT";
"RTN","IBDFBKS1",245,0)
QUIT2 ;;
"RTN","IBDFBKS2")
0^148^B69267536
"RTN","IBDFBKS2",1,0)
IBDFBKS2 ;ALB/CJM/AAS - ENCOUNTER FORM - create form spec for scanning (Broker Version) ; 6-JUN-95 [ 11/13/96  5:25 PM ]
"RTN","IBDFBKS2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFBKS2",3,0)
 ;
"RTN","IBDFBKS2",4,0)
HANDPRNT(IEN,NAME,PAGE,ROW,COL,WIDTH,LINES,READTYPE,PAPKEY,PI) ;
"RTN","IBDFBKS2",5,0)
 ;there must be a package interface to handle the data
"RTN","IBDFBKS2",6,0)
 Q:('PI)
"RTN","IBDFBKS2",7,0)
 Q:($P($G(^IBE(357.6,PI,0)),"^",6)'=1)
"RTN","IBDFBKS2",8,0)
 ;
"RTN","IBDFBKS2",9,0)
 N X1,X2,Y1,Y2,W,PICTURE,TYPEDATA,NODE0,LENGTH,LINENUM,PKDICT,CONF,L,SUBPICS,FORMAT
"RTN","IBDFBKS2",10,0)
 S TYPEDATA="ALPHA",PICTURE=""
"RTN","IBDFBKS2",11,0)
 ; -- get info associated with DHCP Data Element
"RTN","IBDFBKS2",12,0)
 ;    (and not stored with form definition)
"RTN","IBDFBKS2",13,0)
 ; -- 9/28/95 moved file 359.1, pieces 0;3, 0;4, 0;8, 0;9 to
"RTN","IBDFBKS2",14,0)
 ;    to 10;1, 10;2, 10;3, 10;4 respectively
"RTN","IBDFBKS2",15,0)
 ;
"RTN","IBDFBKS2",16,0)
 I PAPKEY D
"RTN","IBDFBKS2",17,0)
 .S NODE0=$G(^IBE(359.1,PAPKEY,0)),NODE10=$G(^(10))
"RTN","IBDFBKS2",18,0)
 .S TYPEDATA=$P(NODE10,"^",1)
"RTN","IBDFBKS2",19,0)
 .S TYPEDATA=$S(TYPEDATA="a":"ALPHA",TYPEDATA="i":"INT",TYPEDATA="f":"FLOAT",TYPEDATA="t":"TIME",TYPEDATA="d":"DATE",1:"ALPHA")
"RTN","IBDFBKS2",20,0)
 .S PICTURE=$P(NODE10,"^",2)
"RTN","IBDFBKS2",21,0)
 .S FORMAT=$P(NODE0,"^",5)
"RTN","IBDFBKS2",22,0)
 .S LENGTH=$P(NODE0,"^",2)
"RTN","IBDFBKS2",23,0)
 .S CONF=$P(NODE0,"^",7)
"RTN","IBDFBKS2",24,0)
 .S PKDICT=$P(NODE10,"^",3)
"RTN","IBDFBKS2",25,0)
 .S SUBPICS=$P(NODE10,"^",4)
"RTN","IBDFBKS2",26,0)
 ;
"RTN","IBDFBKS2",27,0)
 ;find top left-hand corner
"RTN","IBDFBKS2",28,0)
 S X1=((COL*COLWIDTH)+XOFFSET)*CONVERT,X1=$FN(X1,"",0)
"RTN","IBDFBKS2",29,0)
 S Y1=((ROW*ROWHT)+YOFFSET+YHANDOS)*CONVERT,Y1=$FN(Y1,"",0)
"RTN","IBDFBKS2",30,0)
 ;
"RTN","IBDFBKS2",31,0)
 ;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1
"RTN","IBDFBKS2",32,0)
 ;ALSO MUST DO THIS IF TYPE = 1!!!!!!!!!!!!!!!!! BUT SCALE IT
"RTN","IBDFBKS2",33,0)
 I READTYPE=3 D
"RTN","IBDFBKS2",34,0)
 .;define some marksense fields - if any marked it means there is print!
"RTN","IBDFBKS2",35,0)
 .S FIELD=FIELD+1
"RTN","IBDFBKS2",36,0)
 .D BLDARY^IBDFBKS("FIELD ' "_FIELD)
"RTN","IBDFBKS2",37,0)
 .D BLDARY^IBDFBKS("  NAME = """_NAME_"?"";")
"RTN","IBDFBKS2",38,0)
 .D BLDARY^IBDFBKS("  ELEMTYPE = RECT;")
"RTN","IBDFBKS2",39,0)
 .D BLDARY^IBDFBKS("  METRIC = 40 40 0 0 0 0 1 0 1;")
"RTN","IBDFBKS2",40,0)
 .D BLDARY^IBDFBKS("  TYPEDATA = INT;")
"RTN","IBDFBKS2",41,0)
 .D BLDARY^IBDFBKS("  LENGTH = ",LENGTH,";")
"RTN","IBDFBKS2",42,0)
 .D BLDARY^IBDFBKS("  POINTS =")
"RTN","IBDFBKS2",43,0)
 .F L=1:1:LINES F W=1:1:WIDTH D
"RTN","IBDFBKS2",44,0)
 ..S X2=X1+((((W-1)*172.7645)+30)*CONVERT),X2=$FN(X2,"",0)
"RTN","IBDFBKS2",45,0)
 ..S Y2=Y1+(((L*180)-39)*CONVERT),Y2=$FN(Y2,"",0)
"RTN","IBDFBKS2",46,0)
 ..S IBDFSA(IBLC)=IBDFSA(IBLC)_" "_Y2+1_" "_X2+1
"RTN","IBDFBKS2",47,0)
 .S IBDFSA(IBLC)=IBDFSA(IBLC)_";"
"RTN","IBDFBKS2",48,0)
 .D BLDARY^IBDFBKS("  PAGE = ",PAGE,";")
"RTN","IBDFBKS2",49,0)
 .D BLDARY^IBDFBKS("  CONFIDENCE = "" 0"";")
"RTN","IBDFBKS2",50,0)
 .D BLDARY^IBDFBKS("  END = {if (FIELDSTATUS != FIELD_BLANK){")
"RTN","IBDFBKS2",51,0)
 .D BLDARY^IBDFBKS("    hasprint=1;")
"RTN","IBDFBKS2",52,0)
 .D BLDARY^IBDFBKS("    FIELDSTATUS=FIELD_BAD;")
"RTN","IBDFBKS2",53,0)
 .D BLDARY^IBDFBKS("  }")
"RTN","IBDFBKS2",54,0)
 .D BLDARY^IBDFBKS("  else {")
"RTN","IBDFBKS2",55,0)
 .D BLDARY^IBDFBKS("    hasprint=0;")
"RTN","IBDFBKS2",56,0)
 .D BLDARY^IBDFBKS("    NEXTFIELD=NEXTFIELD+1;")
"RTN","IBDFBKS2",57,0)
 .D BLDARY^IBDFBKS("  }};")
"RTN","IBDFBKS2",58,0)
 .D BLDARY^IBDFBKS("  EXFORMAT = ""NOEXPORT"";")
"RTN","IBDFBKS2",59,0)
 .D BLDARY^IBDFBKS("  HIDDEN = ""1"";")
"RTN","IBDFBKS2",60,0)
 ;
"RTN","IBDFBKS2",61,0)
 ;field is narrative that needs to be broken into single lines
"RTN","IBDFBKS2",62,0)
 I (LINES>1)&(READTYPE=2) D  Q
"RTN","IBDFBKS2",63,0)
 .F LINENUM=1:1:LINES S:LINENUM>1 Y1=$FN(Y1+(2*ROWHT*CONVERT),"",0) D
"RTN","IBDFBKS2",64,0)
 ..S X2=X1+(172.7654*WIDTH*CONVERT),X2=$FN(X2,"",0)
"RTN","IBDFBKS2",65,0)
 ..S Y2=Y1+(180*CONVERT),Y2=$FN(Y2,"",0)
"RTN","IBDFBKS2",66,0)
 ..D PRINTEND^IBDFBKS3
"RTN","IBDFBKS2",67,0)
 ..D PKFIELD(X1+2,Y1+2,X2-2,Y2-2,2,PICTURE,0,CONF,PKDICT,WIDTH,TYPEDATA,NAME,2)
"RTN","IBDFBKS2",68,0)
 ..;for handprint fields,must prefix data exported with field info - for bubbles the XMAP has the field info
"RTN","IBDFBKS2",69,0)
 ..S @FIELDS@(PAGE,FIELD)="H:"_IEN_":",@FIELDS@(PAGE,FIELD,"DATATYPE")=TYPEDATA S:LINENUM=1 @FIELDS@(PAGE,FIELD,"START")=1 S:LINENUM=LINES @FIELDS@(PAGE,FIELD,"END")=1 S @FIELDS@(PAGE,FIELD,"MULT")=1
"RTN","IBDFBKS2",70,0)
 ;
"RTN","IBDFBKS2",71,0)
 ;field needs to be broken into subfields due to the print format
"RTN","IBDFBKS2",72,0)
 I (READTYPE=2)&(FORMAT'="") D  Q
"RTN","IBDFBKS2",73,0)
 .N SUBFIELD,I1,I2,PREFIX,SX1,SX2,SPICTURE,LEN,FOUNDEND
"RTN","IBDFBKS2",74,0)
 .S PREFIX=$P(FORMAT,"_"),I1=$L(PREFIX)+1
"RTN","IBDFBKS2",75,0)
 .S Y2=Y1+(180*CONVERT),Y2=$FN(Y2,"",0)
"RTN","IBDFBKS2",76,0)
 .F  Q:(I1>WIDTH)  D
"RTN","IBDFBKS2",77,0)
 ..S I2=I1
"RTN","IBDFBKS2",78,0)
 ..S FOUNDEND=0 F  D  Q:FOUNDEND
"RTN","IBDFBKS2",79,0)
 ...I $E(FORMAT,I2+1)="_" S I2=I2+1
"RTN","IBDFBKS2",80,0)
 ...E  S FOUNDEND=1 Q
"RTN","IBDFBKS2",81,0)
 ..;so at this point I1=beginning of the subfield, I2=the end
"RTN","IBDFBKS2",82,0)
 ..S SX1=$FN(X1+(172.7654*(I1-1)*CONVERT),"",0)
"RTN","IBDFBKS2",83,0)
 ..S SX2=$FN(X1+(172.7654*(I2)*CONVERT),"",0)
"RTN","IBDFBKS2",84,0)
 ..S SPICTURE=$E(SUBPICS,I1,I2)
"RTN","IBDFBKS2",85,0)
 ..S LEN=(I2-I1)+1
"RTN","IBDFBKS2",86,0)
 ..D PRINTEND^IBDFBKS3
"RTN","IBDFBKS2",87,0)
 ..D PKFIELD(SX1+2,Y1+2,SX2-2,Y2-2,2,SPICTURE,1,0,"",LEN,"ALPHA",NAME_" Char:"_I1_" to "_I2)
"RTN","IBDFBKS2",88,0)
 ..S SUBFIELD(FIELD)=""
"RTN","IBDFBKS2",89,0)
 ..S (I1,I2)=I2+1
"RTN","IBDFBKS2",90,0)
 ..S FOUNDEND=0 F  D  Q:FOUNDEND
"RTN","IBDFBKS2",91,0)
 ...I $E(FORMAT,I2+1)="_" S FOUNDEND=1 Q
"RTN","IBDFBKS2",92,0)
 ...I I2>WIDTH S FOUNDEND=1 Q
"RTN","IBDFBKS2",93,0)
 ...S I2=I2+1 Q
"RTN","IBDFBKS2",94,0)
 ..I $E(FORMAT,I1,I2)'="" S SUBFIELD(FIELD)=$E(FORMAT,I1,I2)
"RTN","IBDFBKS2",95,0)
 ..S I1=I2+1
"RTN","IBDFBKS2",96,0)
 .
"RTN","IBDFBKS2",97,0)
 .;now create a field to concatenate the subfields together
"RTN","IBDFBKS2",98,0)
 .S X2=X1+(172.7654*WIDTH*CONVERT),X2=$FN(X2,"",0)
"RTN","IBDFBKS2",99,0)
 .S Y2=Y1+(180*CONVERT),Y2=$FN(Y2,"",0)
"RTN","IBDFBKS2",100,0)
 .D PKFIELD(X1,Y1,X2,Y2,1,PICTURE,0,CONF,PKDICT,WIDTH,TYPEDATA,NAME,1)
"RTN","IBDFBKS2",101,0)
 .D
"RTN","IBDFBKS2",102,0)
 ..D BLDARY^IBDFBKS("BEGIN = {ALPHA sfstr;")
"RTN","IBDFBKS2",103,0)
 ..D BLDARY^IBDFBKS("ALPHA str;")
"RTN","IBDFBKS2",104,0)
 ..D BLDARY^IBDFBKS("INT sfconf;")
"RTN","IBDFBKS2",105,0)
 ..D BLDARY^IBDFBKS("INT conf;")
"RTN","IBDFBKS2",106,0)
 ..D BLDARY^IBDFBKS("INT found;")
"RTN","IBDFBKS2",107,0)
 ..D BLDARY^IBDFBKS("INT ret;")
"RTN","IBDFBKS2",108,0)
 ..D BLDARY^IBDFBKS("found=0;")
"RTN","IBDFBKS2",109,0)
 ..D BLDARY^IBDFBKS("conf=10;")
"RTN","IBDFBKS2",110,0)
 ..I PREFIX'="" D BLDARY^IBDFBKS("    str=\"""_PREFIX_"\"";")
"RTN","IBDFBKS2",111,0)
 ..N SUB S SUB=0 F  S SUB=$O(SUBFIELD(SUB)) Q:'SUB  D
"RTN","IBDFBKS2",112,0)
 ...D BLDARY^IBDFBKS("  sfstr=STRIP(GETAVALUE("_SUB_"));")
"RTN","IBDFBKS2",113,0)
 ...D BLDARY^IBDFBKS("str=STRCAT(str,sfstr);")
"RTN","IBDFBKS2",114,0)
 ...D BLDARY^IBDFBKS("if (sfstr!=\""\"") found=1;")
"RTN","IBDFBKS2",115,0)
 ...I SUBFIELD(SUB)'="" D BLDARY^IBDFBKS("str=STRCAT(sfstr,\"""_SUBFIELD(SUB)_"\"");")
"RTN","IBDFBKS2",116,0)
 ...D BLDARY^IBDFBKS("sfconf=GETCONF("_SUB_");")
"RTN","IBDFBKS2",117,0)
 ...D BLDARY^IBDFBKS("if (sfconf<conf) conf=sfconf;")
"RTN","IBDFBKS2",118,0)
 ..D BLDARY^IBDFBKS("if (found) ret=SETTEXT("_FIELD_",str,ITOA(conf-1),FIELD_OK);")
"RTN","IBDFBKS2",119,0)
 ..D BLDARY^IBDFBKS("if (found == 0) ret=SETTEXT("_FIELD_",\""\"",ITOA(conf-1),FIELD_BLANK);")
"RTN","IBDFBKS2",120,0)
 ..D BLDARY^IBDFBKS("if (ret) SETTEXT("_FIELD_",str,\""1\"",FIELD_BAD);")
"RTN","IBDFBKS2",121,0)
 ..D BLDARY^IBDFBKS("};")
"RTN","IBDFBKS2",122,0)
 .;
"RTN","IBDFBKS2",123,0)
 .;for handprint fields,must prefix data exported with field info - for bubbles the XMAP has the field info
"RTN","IBDFBKS2",124,0)
 .S @FIELDS@(PAGE,FIELD)="H:"_IEN_":",@FIELDS@(PAGE,FIELD,"DATATYPE")=TYPEDATA
"RTN","IBDFBKS2",125,0)
 ;
"RTN","IBDFBKS2",126,0)
 ;following are handprint fields that don't need to be broken into subfields
"RTN","IBDFBKS2",127,0)
 ;
"RTN","IBDFBKS2",128,0)
 I READTYPE=1 D  ;not printed in ICR format
"RTN","IBDFBKS2",129,0)
 .D CNVRTHT^IBDF2D1(LINES,.LINES)
"RTN","IBDFBKS2",130,0)
 .S X2=X1+(103.65924*WIDTH*CONVERT),X2=$FN(X2,"",0)
"RTN","IBDFBKS2",131,0)
 .S Y2=Y1+(ROWHT*LINES*CONVERT),Y2=$FN(Y2,"",0)
"RTN","IBDFBKS2",132,0)
 ;
"RTN","IBDFBKS2",133,0)
 I READTYPE'=1 D  ;printed in ICR format
"RTN","IBDFBKS2",134,0)
 .S X2=X1+(172.7654*WIDTH*CONVERT),X2=$FN(X2,"",0)
"RTN","IBDFBKS2",135,0)
 .S Y2=Y1+(180*LINES*CONVERT),Y2=$FN(Y2,"",0)
"RTN","IBDFBKS2",136,0)
 ;
"RTN","IBDFBKS2",137,0)
 D PRINTEND^IBDFBKS3
"RTN","IBDFBKS2",138,0)
 D:READTYPE=2 PKFIELD(X1+2,Y1+2,X2-2,Y2-2,READTYPE,PICTURE,0,CONF,PKDICT,WIDTH,TYPEDATA,NAME,2)
"RTN","IBDFBKS2",139,0)
 ;
"RTN","IBDFBKS2",140,0)
 D:READTYPE'=2 PKFIELD(X1,Y1,X2,Y2,READTYPE,PICTURE,0,"","",LENGTH,TYPEDATA,NAME)
"RTN","IBDFBKS2",141,0)
 S @FIELDS@(PAGE,FIELD)="H:"_IEN_":",@FIELDS@(PAGE,FIELD,"DATATYPE")=TYPEDATA
"RTN","IBDFBKS2",142,0)
 D ENDSTUFF
"RTN","IBDFBKS2",143,0)
 Q
"RTN","IBDFBKS2",144,0)
 ;
"RTN","IBDFBKS2",145,0)
ENDSTUFF ;** END STUFF **
"RTN","IBDFBKS2",146,0)
 ;S L=$S(TYPEDATA="ALPHA":$L(PICTURE),1:0)
"RTN","IBDFBKS2",147,0)
 ;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! PUT BACK?
"RTN","IBDFBKS2",148,0)
 ;I L D
"RTN","IBDFBKS2",149,0)
 ;.D ADDTOEND^IBDFBKS3("  "_TYPEDATA_" val;")
"RTN","IBDFBKS2",150,0)
 ;.D ADDTOEND^IBDFBKS3("  INT len;")
"RTN","IBDFBKS2",151,0)
 I READTYPE'=2 D  ;test the results of the marksense fields that were laid on top of the operator fill field
"RTN","IBDFBKS2",152,0)
 .D ADDTOEND^IBDFBKS3("  if ((hasprint)&&(FIELDACCEPTED==0)){")
"RTN","IBDFBKS2",153,0)
 .D ADDTOEND^IBDFBKS3("    FIELDSTATUS=FIELD_BAD;")
"RTN","IBDFBKS2",154,0)
 .D ADDTOEND^IBDFBKS3("  }")
"RTN","IBDFBKS2",155,0)
 ;
"RTN","IBDFBKS2",156,0)
 ;!!!!!!!!!! PUT BACK?
"RTN","IBDFBKS2",157,0)
 ;I L D
"RTN","IBDFBKS2",158,0)
 ;.D ADDTOEND^IBDFBKS3("  val=GETVALUE(FIELDNAME);")
"RTN","IBDFBKS2",159,0)
 ;.D ADDTOEND^IBDFBKS3("  val=STRIP(val);")
"RTN","IBDFBKS2",160,0)
 ;.D ADDTOEND^IBDFBKS3("  len=STRLEN(val);")
"RTN","IBDFBKS2",161,0)
 ;.D ADDTOEND^IBDFBKS3("  if ((FIELDSTATUS==FIELD_OK)&&(len<"_L_")){")
"RTN","IBDFBKS2",162,0)
 ;.D ADDTOEND^IBDFBKS3("    FIELDSTATUS=FIELD_BAD;")
"RTN","IBDFBKS2",163,0)
 ;.D ADDTOEND^IBDFBKS3("    SHOW(""Value too short!"");")
"RTN","IBDFBKS2",164,0)
 ;.D ADDTOEND^IBDFBKS3("}")
"RTN","IBDFBKS2",165,0)
 Q
"RTN","IBDFBKS2",166,0)
 ;
"RTN","IBDFBKS2",167,0)
PKFIELD(X1,Y1,X2,Y2,READTYPE,PICTURE,HIDDEN,CONF,PKDICT,LENGTH,TYPEDATA,NAME,ENDPGM) ;
"RTN","IBDFBKS2",168,0)
 ; -- now for the handprint field
"RTN","IBDFBKS2",169,0)
 S FIELD=FIELD+1
"RTN","IBDFBKS2",170,0)
 D BLDARY^IBDFBKS("FIELD ' "_FIELD)
"RTN","IBDFBKS2",171,0)
 D BLDARY^IBDFBKS("  NAME = """_NAME_""";")
"RTN","IBDFBKS2",172,0)
 ;
"RTN","IBDFBKS2",173,0)
 I READTYPE=2 D
"RTN","IBDFBKS2",174,0)
 .D BLDARY^IBDFBKS("  ELEMTYPE = ELEM_OT;")
"RTN","IBDFBKS2",175,0)
 .D BLDARY^IBDFBKS("  METRIC = 2;")
"RTN","IBDFBKS2",176,0)
 ;
"RTN","IBDFBKS2",177,0)
 E  D
"RTN","IBDFBKS2",178,0)
 .D BLDARY^IBDFBKS("  ELEMTYPE = ELEM_OT;")
"RTN","IBDFBKS2",179,0)
 .D BLDARY^IBDFBKS("  METRIC = 1;")
"RTN","IBDFBKS2",180,0)
 ;
"RTN","IBDFBKS2",181,0)
 D BLDARY^IBDFBKS("  DATATYPE ="_TYPEDATA_";")
"RTN","IBDFBKS2",182,0)
 D BLDARY^IBDFBKS("  LENGTH = "_LENGTH_";")
"RTN","IBDFBKS2",183,0)
 D BLDARY^IBDFBKS("  POINTS = "_Y1_" "_X1_" "_Y2_" "_X2_";")
"RTN","IBDFBKS2",184,0)
 D BLDARY^IBDFBKS("  PAGE = "_PAGE_";")
"RTN","IBDFBKS2",185,0)
 I CONF'="" D BLDARY^IBDFBKS("  CONFIDENCE = """_CONF_""";")
"RTN","IBDFBKS2",186,0)
 I HIDDEN D BLDARY^IBDFBKS(" HIDDEN = ""1"";")
"RTN","IBDFBKS2",187,0)
 I $G(ENDPGM) D HPSKIP
"RTN","IBDFBKS2",188,0)
 ;
"RTN","IBDFBKS2",189,0)
 ;** IMAGE PROCESSING **
"RTN","IBDFBKS2",190,0)
 I READTYPE=2 D
"RTN","IBDFBKS2",191,0)
 .D BLDARY^IBDFBKS(" ImageProcessing = {")
"RTN","IBDFBKS2",192,0)
 .D BLDARY^IBDFBKS("   IMAGEPROCE = 1")
"RTN","IBDFBKS2",193,0)
 .D BLDARY^IBDFBKS("   DESKEW = 0")
"RTN","IBDFBKS2",194,0)
 .D BLDARY^IBDFBKS("   DESHADE = 0")
"RTN","IBDFBKS2",195,0)
 .D BLDARY^IBDFBKS("   REMOVE _NOISE = 0")
"RTN","IBDFBKS2",196,0)
 .D BLDARY^IBDFBKS("   SMOOTH = 1")
"RTN","IBDFBKS2",197,0)
 .D BLDARY^IBDFBKS("   PROC_MIN_VERT_LINE_LEN=70")
"RTN","IBDFBKS2",198,0)
 .D BLDARY^IBDFBKS("   PROC_MIN_HORZ_LINE_LEN=70")
"RTN","IBDFBKS2",199,0)
 .D BLDARY^IBDFBKS("   FATTYPE = 0")
"RTN","IBDFBKS2",200,0)
 .D BLDARY^IBDFBKS("   FATTEN = 0};")
"RTN","IBDFBKS2",201,0)
 .D BLDARY^IBDFBKS("   Recognition = {FIXED_WIDTH=1")
"RTN","IBDFBKS2",202,0)
 .D BLDARY^IBDFBKS("   OT_RECOGTYPE=HP")
"RTN","IBDFBKS2",203,0)
 .D BLDARY^IBDFBKS("   };")
"RTN","IBDFBKS2",204,0)
 ;
"RTN","IBDFBKS2",205,0)
 ;** begin program **
"RTN","IBDFBKS2",206,0)
 I $G(ENDPGM)=2 D
"RTN","IBDFBKS2",207,0)
 .D BLDARY^IBDFBKS("BEGIN = {ALPHA str;")
"RTN","IBDFBKS2",208,0)
 .D BLDARY^IBDFBKS("INT conf;")
"RTN","IBDFBKS2",209,0)
 .D BLDARY^IBDFBKS("INT ret;")
"RTN","IBDFBKS2",210,0)
 .D BLDARY^IBDFBKS("  conf = GETCONF("_FIELD_");")
"RTN","IBDFBKS2",211,0)
 .D BLDARY^IBDFBKS("  if (GETSTATUS("_FIELD_") == FIELD_BLANK) {")
"RTN","IBDFBKS2",212,0)
 .D BLDARY^IBDFBKS("     ret=SETTEXT("_FIELD_",\""\"",ITOA(conf-1),FIELD_BLANK); }")
"RTN","IBDFBKS2",213,0)
 .D BLDARY^IBDFBKS("if (ret) FIELDSTATUS = FIELD_ERROR;")
"RTN","IBDFBKS2",214,0)
 .D BLDARY^IBDFBKS("};")
"RTN","IBDFBKS2",215,0)
 .;
"RTN","IBDFBKS2",216,0)
 I PKDICT'="" D BLDARY^IBDFBKS("  DICTIONARY = """_PKDICT_""";")
"RTN","IBDFBKS2",217,0)
 I PICTURE'="",TYPEDATA="ALPHA" D BLDARY^IBDFBKS("  PICTURE = """_PICTURE_""";")
"RTN","IBDFBKS2",218,0)
 Q
"RTN","IBDFBKS2",219,0)
HPSKIP ; If hand print field blank, skip it
"RTN","IBDFBKS2",220,0)
 D ADDTOEND^IBDFBKS3("   if ((GETSTATUS(FIELDNAME) != FIELD_BLANK) && (FIELDACCEPTED == 0)) {")
"RTN","IBDFBKS2",221,0)
 D ADDTOEND^IBDFBKS3("     FIELDSTATUS = FIELD_BAD;}")
"RTN","IBDFBKS2",222,0)
 Q
"RTN","IBDFBKS2",223,0)
 ;
"RTN","IBDFBKS3")
0^149^B55383129
"RTN","IBDFBKS3",1,0)
IBDFBKS3 ;ALB/CJM/AAS - ENCOUNTER FORM - create form spec for scanning (Broker Version) ; 6-JUN-95 [ 11/13/96  3:32 PM ]
"RTN","IBDFBKS3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFBKS3",3,0)
 ;
"RTN","IBDFBKS3",4,0)
BUBBLE ;
"RTN","IBDFBKS3",5,0)
 N COUNT
"RTN","IBDFBKS3",6,0)
 ;
"RTN","IBDFBKS3",7,0)
 D PRINTEND ;the end program for the prior field
"RTN","IBDFBKS3",8,0)
 ;
"RTN","IBDFBKS3",9,0)
 D BLDARY^IBDFBKS("FIELD ' "_FIELD)
"RTN","IBDFBKS3",10,0)
 ;
"RTN","IBDFBKS3",11,0)
 ;** NAME **
"RTN","IBDFBKS3",12,0)
 D BLDARY^IBDFBKS("  NAME = """_NAME_""";")
"RTN","IBDFBKS3",13,0)
 ;
"RTN","IBDFBKS3",14,0)
 ;** ELEMTYPE **
"RTN","IBDFBKS3",15,0)
 D BLDARY^IBDFBKS("  ELEMTYPE = RECT;")
"RTN","IBDFBKS3",16,0)
 ;
"RTN","IBDFBKS3",17,0)
 ;** METRIC **
"RTN","IBDFBKS3",18,0)
 D BLDARY^IBDFBKS("  METRIC = 30 16 0 0 -16 -12 "_$G(IBDFILL,20)_" "_$G(IBDBKGND,5)_" 1;")
"RTN","IBDFBKS3",19,0)
 ;D BLDARY^IBDFBKS("  METRIC = 30 16 0 0 -16 -12 20 5 1;")
"RTN","IBDFBKS3",20,0)
 ;
"RTN","IBDFBKS3",21,0)
 ;** DATATYPE **
"RTN","IBDFBKS3",22,0)
 D BLDARY^IBDFBKS("  DATATYPE =INT;")
"RTN","IBDFBKS3",23,0)
 ;
"RTN","IBDFBKS3",24,0)
 ;** LENGTH **
"RTN","IBDFBKS3",25,0)
 I (TYPE=1)!(TYPE=2) D
"RTN","IBDFBKS3",26,0)
 .D BLDARY^IBDFBKS("  LENGTH = ")
"RTN","IBDFBKS3",27,0)
 .S COUNT=0
"RTN","IBDFBKS3",28,0)
 .S COL="" F  S COL=$O(@SCAN@(PAGE,FID,TYPE,COL)) Q:COL=""  S ROW="" F  S ROW=$O(@SCAN@(PAGE,FID,TYPE,COL,ROW)) Q:ROW=""  S COUNT=COUNT+1
"RTN","IBDFBKS3",29,0)
 .S IBDFSA(IBLC)=IBDFSA(IBLC)_COUNT_";"
"RTN","IBDFBKS3",30,0)
 I (TYPE=0)!(TYPE=3) D BLDARY^IBDFBKS("  LENGTH = 1;")
"RTN","IBDFBKS3",31,0)
 ;
"RTN","IBDFBKS3",32,0)
 ;** POINTS **
"RTN","IBDFBKS3",33,0)
 I (TYPE=0)!(TYPE=3) S Y=ROW,X=COL D FINDBUB(.Y,.X) D BLDARY^IBDFBKS("  POINTS = "_Y_" "_X_";")
"RTN","IBDFBKS3",34,0)
 I (TYPE=1)!(TYPE=2) D
"RTN","IBDFBKS3",35,0)
 .D BLDARY^IBDFBKS("  POINTS =")
"RTN","IBDFBKS3",36,0)
 .S COL="" F  S COL=$O(@SCAN@(PAGE,FID,TYPE,COL)) Q:COL=""  D
"RTN","IBDFBKS3",37,0)
 ..S ROW="" F  S ROW=$O(@SCAN@(PAGE,FID,TYPE,COL,ROW)) Q:ROW=""  D
"RTN","IBDFBKS3",38,0)
 ...S X=COL,Y=ROW
"RTN","IBDFBKS3",39,0)
 ...D FINDBUB(.Y,.X)
"RTN","IBDFBKS3",40,0)
 ...I $L(IBDFSA(IBLC))+$L(" "_Y_" "_X)<252 S IBDFSA(IBLC)=IBDFSA(IBLC)_" "_Y_" "_X Q
"RTN","IBDFBKS3",41,0)
 ...D BLDARY^IBDFBKS("~~~"_" "_Y_" "_X)
"RTN","IBDFBKS3",42,0)
 .S IBDFSA(IBLC)=IBDFSA(IBLC)_";"
"RTN","IBDFBKS3",43,0)
 ;
"RTN","IBDFBKS3",44,0)
 ;** PAGE **
"RTN","IBDFBKS3",45,0)
 D BLDARY^IBDFBKS("  PAGE = "_PAGE_";")
"RTN","IBDFBKS3",46,0)
 ;
"RTN","IBDFBKS3",47,0)
 ;** END ** program to enforce selection rule and to go to end of page
"RTN","IBDFBKS3",48,0)
 I TYPE=1 D  ;exactly one required
"RTN","IBDFBKS3",49,0)
 .D ADDTOEND(" if (GETSTATUS("_FIELD_") == FIELD_BLANK){")
"RTN","IBDFBKS3",50,0)
 .;D ADDTOEND("     \' SHOW(\"""_$$CKNAM(NAME)_" is required!\"");")
"RTN","IBDFBKS3",51,0)
 .D ADDTOEND("    if (BATCH==0) {FIELDSTATUS = FIELD_BAD;}")
"RTN","IBDFBKS3",52,0)
 .D ADDTOEND("    if (BATCH==1) {saveunrf = "_FIELD_";}")
"RTN","IBDFBKS3",53,0)
 .D ADDTOEND("  }")
"RTN","IBDFBKS3",54,0)
 .D ADDTOEND(" if ((GETSTATUS("_FIELD_") == FIELD_TOOMANY)&&(BATCH == 1)) {")
"RTN","IBDFBKS3",55,0)
 .D ADDTOEND("    saveunrf = "_FIELD_";}")
"RTN","IBDFBKS3",56,0)
 ;
"RTN","IBDFBKS3",57,0)
 I TYPE=2 D  ;at most one required
"RTN","IBDFBKS3",58,0)
 .D ADDTOEND(" if ((GETSTATUS("_FIELD_") == FIELD_TOOMANY)&&(BATCH == 1)) {")
"RTN","IBDFBKS3",59,0)
 .D ADDTOEND("    saveunrf = "_FIELD_";}")
"RTN","IBDFBKS3",60,0)
 ;
"RTN","IBDFBKS3",61,0)
 I TYPE=3,LAST'="" D  ;at least one required
"RTN","IBDFBKS3",62,0)
 .D ADDTOEND("    INT field;")
"RTN","IBDFBKS3",63,0)
 .D ADDTOEND("    field="_FIRST_";") ;AAS Changed 11/14
"RTN","IBDFBKS3",64,0)
 .N X S X=LAST+1 D ADDTOEND("    while (field<"_X_"){") ;AAS changed 11/14
"RTN","IBDFBKS3",65,0)
 .D ADDTOEND("      if (GETSTATUS(field) != FIELD_BLANK) break;")
"RTN","IBDFBKS3",66,0)
 .D ADDTOEND("      field=field+1;")
"RTN","IBDFBKS3",67,0)
 .D ADDTOEND("    }")
"RTN","IBDFBKS3",68,0)
 .S X=LAST+1 D ADDTOEND("    if (field == "_X_"){")
"RTN","IBDFBKS3",69,0)
 .D ADDTOEND("      SHOW(\"""_$$CKNAM(OLDNAME)_" at least 1 required!\"");")
"RTN","IBDFBKS3",70,0)
 .D ADDTOEND("      FIELDSTATUS = FIELD_BAD;")
"RTN","IBDFBKS3",71,0)
 .D ADDTOEND("  }")
"RTN","IBDFBKS3",72,0)
 ;D ADDTOEND("  };")
"RTN","IBDFBKS3",73,0)
 ;
"RTN","IBDFBKS3",74,0)
 ;** XMAP **
"RTN","IBDFBKS3",75,0)
 ; -- only TYPE=0 (selection rule=anynumber) might be dynmaic
"RTN","IBDFBKS3",76,0)
 I (TYPE=0)!(TYPE=3) D BLDARY^IBDFBKS("  XMAP = "","_$S($P(NODE,"^",9):"D:"_FID_":"_$P(NODE,"^",10),1:"B:"_IEN_":"_$$GETCODE($P(NODE,"^",2),$P(NODE,"^")))_""";")
"RTN","IBDFBKS3",77,0)
 ;
"RTN","IBDFBKS3",78,0)
 I (TYPE=1)!(TYPE=2) D
"RTN","IBDFBKS3",79,0)
 .D BLDARY^IBDFBKS("  XMAP = """)
"RTN","IBDFBKS3",80,0)
 .S COL=""
"RTN","IBDFBKS3",81,0)
 .F  S COL=$O(@SCAN@(PAGE,FID,TYPE,COL)) Q:COL=""  D
"RTN","IBDFBKS3",82,0)
 ..S ROW="" F  S ROW=$O(@SCAN@(PAGE,FID,TYPE,COL,ROW)) Q:ROW=""  D
"RTN","IBDFBKS3",83,0)
 ...S IEN=$O(@SCAN@(PAGE,FID,TYPE,COL,ROW,0))  I IEN D
"RTN","IBDFBKS3",84,0)
 ....S NODE=$G(^(IEN))
"RTN","IBDFBKS3",85,0)
 ....N IBX
"RTN","IBDFBKS3",86,0)
 ....S IBX=","_$S($P(NODE,"^",9):"D:"_FID_":"_$P(NODE,"^",10),1:"B:"_IEN_":"_$$GETCODE($P(NODE,"^",2),$P(NODE,"^")))
"RTN","IBDFBKS3",87,0)
 ....I $L(IBDFSA(IBLC))+$L(IBX)<252 S IBDFSA(IBLC)=IBDFSA(IBLC)_IBX Q
"RTN","IBDFBKS3",88,0)
 ....D BLDARY^IBDFBKS("~~~"_IBX)
"RTN","IBDFBKS3",89,0)
 .S IBDFSA(IBLC)=IBDFSA(IBLC)_""";"
"RTN","IBDFBKS3",90,0)
 ;
"RTN","IBDFBKS3",91,0)
 ;** MAP **
"RTN","IBDFBKS3",92,0)
 I (TYPE=0)!(TYPE=3) D BLDARY^IBDFBKS("  MAP = "" ,"_$TR($P(NODE,"^",6),",;"," ")_""";")
"RTN","IBDFBKS3",93,0)
 ;
"RTN","IBDFBKS3",94,0)
 I (TYPE=1)!(TYPE=2) D
"RTN","IBDFBKS3",95,0)
 .D BLDARY^IBDFBKS("  MAP = "" ")
"RTN","IBDFBKS3",96,0)
 .;
"RTN","IBDFBKS3",97,0)
 .S COL="" F  S COL=$O(@SCAN@(PAGE,FID,TYPE,COL)) Q:COL=""  S ROW="" F  S ROW=$O(@SCAN@(PAGE,FID,TYPE,COL,ROW)) Q:ROW=""  S IEN=$O(@SCAN@(PAGE,FID,TYPE,COL,ROW,0)) D
"RTN","IBDFBKS3",98,0)
 ..I IEN S NODE=$G(@SCAN@(PAGE,FID,TYPE,COL,ROW,IEN))
"RTN","IBDFBKS3",99,0)
 ..I $L(IBDFSA(IBLC))+$L($TR($P(NODE,"^",6),",;"," "))<252 S IBDFSA(IBLC)=IBDFSA(IBLC)_","_$TR($P(NODE,"^",6),",;"," ") Q
"RTN","IBDFBKS3",100,0)
 ..D BLDARY^IBDFBKS("~~~"_","_$TR($P(NODE,"^",6),",;"," "))
"RTN","IBDFBKS3",101,0)
 .S IBDFSA(IBLC)=IBDFSA(IBLC)_""";"
"RTN","IBDFBKS3",102,0)
 I $D(OTHER($P(FID,"("),IEN)) S OTHER($P(FID,"("),IEN)=FIELD
"RTN","IBDFBKS3",103,0)
 Q
"RTN","IBDFBKS3",104,0)
 ;
"RTN","IBDFBKS3",105,0)
FINDBUB(Y,X) ;
"RTN","IBDFBKS3",106,0)
 ;converts row,col of bubble to paperkeyboard points, with proper offsets added - call by reference
"RTN","IBDFBKS3",107,0)
 S X=((COL*COLWIDTH)+(XBUBOS+XOFFSET))*CONVERT
"RTN","IBDFBKS3",108,0)
 ;S X=1+$FN(X,"",0)
"RTN","IBDFBKS3",109,0)
 S X=$FN(X,"",0)
"RTN","IBDFBKS3",110,0)
 S Y=((ROW*ROWHT)+(YOFFSET+YBUBOS))*CONVERT
"RTN","IBDFBKS3",111,0)
 ;S Y=1+$FN(Y,"",0)
"RTN","IBDFBKS3",112,0)
 S Y=$FN(Y,"",0)
"RTN","IBDFBKS3",113,0)
 Q
"RTN","IBDFBKS3",114,0)
 ;
"RTN","IBDFBKS3",115,0)
ADDTOBEG(TEXT) ;
"RTN","IBDFBKS3",116,0)
 I '$D(BEGIN) S BEGIN(1)="   BEGIN = {",BLN=1
"RTN","IBDFBKS3",117,0)
 S BLN=BLN+1
"RTN","IBDFBKS3",118,0)
 S BEGIN(BLN)=TEXT
"RTN","IBDFBKS3",119,0)
 Q
"RTN","IBDFBKS3",120,0)
 ;
"RTN","IBDFBKS3",121,0)
PRINTBEG ;
"RTN","IBDFBKS3",122,0)
 I $D(BEGIN) D
"RTN","IBDFBKS3",123,0)
 .S BLN=0 F  S BLN=$O(BEGIN(BLN)) Q:'BLN  D BLDARY^IBDFBKS(BEGIN(BLN))
"RTN","IBDFBKS3",124,0)
 .D BLDARY^IBDFBKS("   };")
"RTN","IBDFBKS3",125,0)
 .K BEGIN
"RTN","IBDFBKS3",126,0)
 Q
"RTN","IBDFBKS3",127,0)
 ;
"RTN","IBDFBKS3",128,0)
ADDTOEND(TEXT) ;
"RTN","IBDFBKS3",129,0)
 I '$D(END) S END(1)="  END = {",LN=1
"RTN","IBDFBKS3",130,0)
 S LN=LN+1
"RTN","IBDFBKS3",131,0)
 S END(LN)=TEXT
"RTN","IBDFBKS3",132,0)
 Q
"RTN","IBDFBKS3",133,0)
 ;
"RTN","IBDFBKS3",134,0)
PRINTEND ;
"RTN","IBDFBKS3",135,0)
 I $D(END) D
"RTN","IBDFBKS3",136,0)
 .S LN=0 F  S LN=$O(END(LN)) Q:'LN  D BLDARY^IBDFBKS(END(LN))
"RTN","IBDFBKS3",137,0)
 .D BLDARY^IBDFBKS("  };")
"RTN","IBDFBKS3",138,0)
 .K END
"RTN","IBDFBKS3",139,0)
 I PRIORPG'=PAGE D PAGEEND(PRIORPG)
"RTN","IBDFBKS3",140,0)
 I PAGE>1,PRIORPG'=PAGE D PAGETOP(PAGE)
"RTN","IBDFBKS3",141,0)
 S PRIORPG=PAGE
"RTN","IBDFBKS3",142,0)
 Q
"RTN","IBDFBKS3",143,0)
 ;
"RTN","IBDFBKS3",144,0)
GETCODE(VALUE,PI) ;returns the value after passing it through the output transform contained in the package interface file
"RTN","IBDFBKS3",145,0)
 ;
"RTN","IBDFBKS3",146,0)
 N X,Y S (Y,X)=VALUE
"RTN","IBDFBKS3",147,0)
 ;
"RTN","IBDFBKS3",148,0)
 I PI X $G(^IBE(357.6,PI,14))
"RTN","IBDFBKS3",149,0)
 Q Y
"RTN","IBDFBKS3",150,0)
 ;
"RTN","IBDFBKS3",151,0)
PAGEEND(PAGE) ;end of page processing
"RTN","IBDFBKS3",152,0)
 N FLD
"RTN","IBDFBKS3",153,0)
 S FIELD=FIELD+1
"RTN","IBDFBKS3",154,0)
 F COUNT=1:1 S LINE=$T(BOTTOM+COUNT^IBDFBKS1),TAG=$P(LINE,";;"),LINE=$P(LINE,";;",2) Q:TAG["QUIT"  D
"RTN","IBDFBKS3",155,0)
 .I TAG["NUMBER" D BLDARY^IBDFBKS("FIELD ' "_FIELD) Q
"RTN","IBDFBKS3",156,0)
 .I TAG["NAME" D BLDARY^IBDFBKS("  NAME = ""BOTTOM OF PAGE"_PAGE_""";") Q
"RTN","IBDFBKS3",157,0)
 .I TAG["PAGE" D BLDARY^IBDFBKS("  PAGE = "_PAGE_";") Q
"RTN","IBDFBKS3",158,0)
 .I TAG["SAVE" D  Q
"RTN","IBDFBKS3",159,0)
 ..D BLDARY^IBDFBKS("  Save = STRCAT(\""SAVEFORM(\"",ITOA(GETIVALUE(7)));")
"RTN","IBDFBKS3",160,0)
 ..D BLDARY^IBDFBKS("  Save = STRCAT(Save,"","_PAGE_",,V)"");")
"RTN","IBDFBKS3",161,0)
 ..;
"RTN","IBDFBKS3",162,0)
 .I TAG["EXPORT" D  Q
"RTN","IBDFBKS3",163,0)
 ..D BLDARY^IBDFBKS("   DDEEXEC(ddechan,\""$$NEW$$("");")
"RTN","IBDFBKS3",164,0)
 ..D BLDARY^IBDFBKS("   Data=\""$$ADD$$(FORMTYPE="_IBFORMID_",\"";")
"RTN","IBDFBKS3",165,0)
 ..D BLDARY^IBDFBKS("   DDEEXEC(ddechan,Data);")
"RTN","IBDFBKS3",166,0)
 ..D BLDARY^IBDFBKS("   Data=STRCAT(\""$$ADD$$(FORMID=\"",ITOA(GETIVALUE(7)));")
"RTN","IBDFBKS3",167,0)
 ..D BLDARY^IBDFBKS("   Data=STRCAT(Data,\"",\"");")
"RTN","IBDFBKS3",168,0)
 ..D BLDARY^IBDFBKS("   DDEEXEC(ddechan,Data);")
"RTN","IBDFBKS3",169,0)
 ..D BLDARY^IBDFBKS("   Data=\""$$ADD$$(PAGE="_PAGE_",\"";")
"RTN","IBDFBKS3",170,0)
 ..D BLDARY^IBDFBKS("   DDEEXEC(ddechan,Data);")
"RTN","IBDFBKS3",171,0)
 ..D BLDARY^IBDFBKS("   Data=\""$$ADD$$(DATA=,\"";")
"RTN","IBDFBKS3",172,0)
 ..D BLDARY^IBDFBKS("   DDEEXEC(ddechan,Data);")
"RTN","IBDFBKS3",173,0)
 ..;
"RTN","IBDFBKS3",174,0)
 ..D FIELDS^IBDFBKS4
"RTN","IBDFBKS3",175,0)
 .D BLDARY^IBDFBKS(LINE)
"RTN","IBDFBKS3",176,0)
 Q
"RTN","IBDFBKS3",177,0)
 ;
"RTN","IBDFBKS3",178,0)
 ;;;.I TAG["EXPORT" D  Q
"RTN","IBDFBKS3",179,0)
 ;;;D BLDARY^IBDFBKS("   Data=STRCAT(\""FORMTYPE="_IBFORMID_"\"",RS);")
"RTN","IBDFBKS3",180,0)
 ;;;D BLDARY^IBDFBKS("   Data=STRCAT(Data,\""FORMID=\"");")
"RTN","IBDFBKS3",181,0)
 ;;;D BLDARY^IBDFBKS("   Data=STRCAT(Data,ITOA(GETIVALUE(7)));")
"RTN","IBDFBKS3",182,0)
 ;;;D BLDARY^IBDFBKS("   Data=STRCAT(Data,RS);")
"RTN","IBDFBKS3",183,0)
 ;;;D BLDARY^IBDFBKS("   Data=STRCAT(Data,\""PAGE="_PAGE_"\"");")
"RTN","IBDFBKS3",184,0)
 ;;;D BLDARY^IBDFBKS("   Data=STRCAT(Data,RS);")
"RTN","IBDFBKS3",185,0)
 ;;;D BLDARY^IBDFBKS("   Data=STRCAT(Data,\""DATA=\"");")
"RTN","IBDFBKS3",186,0)
 ;;;D BLDARY^IBDFBKS("   Data=STRCAT(Data,RS);")
"RTN","IBDFBKS3",187,0)
 ;;;..D BLDARY^IBDFBKS("   DDEEXEC(ddechan,Data);")
"RTN","IBDFBKS3",188,0)
 ;
"RTN","IBDFBKS3",189,0)
PAGETOP(PAGE) ;add field for top of page
"RTN","IBDFBKS3",190,0)
 S FIELD=FIELD+1
"RTN","IBDFBKS3",191,0)
 F COUNT=1:1 S LINE=$T(TOPOFPG+COUNT^IBDFBKS1),TAG=$P(LINE,";;"),LINE=$P(LINE,";;",2) Q:TAG["QUIT"  D
"RTN","IBDFBKS3",192,0)
 .I TAG["NUMBER" D BLDARY^IBDFBKS("FIELD ' "_FIELD) Q
"RTN","IBDFBKS3",193,0)
 .I TAG["FLDNAME" D BLDARY^IBDFBKS("  NAME = ""TOP OF PAGE "_PAGE_""";") Q
"RTN","IBDFBKS3",194,0)
 .I TAG["PAGE" D BLDARY^IBDFBKS("  PAGE = "_PAGE_";") Q
"RTN","IBDFBKS3",195,0)
 .D BLDARY^IBDFBKS(LINE)
"RTN","IBDFBKS3",196,0)
 Q
"RTN","IBDFBKS3",197,0)
CKNAM(NAME) ;  - format name with \ for paperkey when displaying name
"RTN","IBDFBKS3",198,0)
 F CHAR="\","'" I NAME[CHAR D
"RTN","IBDFBKS3",199,0)
 .F A=1:1:$L(NAME,CHAR)-1 S NAME=$P(NAME,CHAR,1,A)_"\"_CHAR_$P(NAME,CHAR,A+1,$L(NAME,CHAR))
"RTN","IBDFBKS3",200,0)
 Q NAME
"RTN","IBDFBKS4")
0^150^B20375936
"RTN","IBDFBKS4",1,0)
IBDFBKS4 ;ALB/AAS - ENCOUNTER FORM - create form spec for scanning (Broker Version) ; 6-JUN-95
"RTN","IBDFBKS4",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFBKS4",3,0)
 ;
"RTN","IBDFBKS4",4,0)
 ;
"RTN","IBDFBKS4",5,0)
FIELDS ;
"RTN","IBDFBKS4",6,0)
 S FLD=1 F  S FLD=$O(@FIELDS@(PAGE,FLD)) Q:'FLD  D
"RTN","IBDFBKS4",7,0)
 .N DATATP S DATATP=$G(@FIELDS@(PAGE,FLD,"DATATYPE"))
"RTN","IBDFBKS4",8,0)
 .I DATATP="" D  Q
"RTN","IBDFBKS4",9,0)
 ..S (LBEGIN,LEND,QUIT)=0
"RTN","IBDFBKS4",10,0)
 ..S LBEGIN=FLD F  S FLD=$O(@FIELDS@(PAGE,FLD)) Q:QUIT  D  Q:QUIT
"RTN","IBDFBKS4",11,0)
 ...I LEND=0,$S(FLD="":1,1:$G(@FIELDS@(PAGE,FLD,"DATATYPE"))'="") S FLD=LBEGIN D ONEBUB S QUIT=1 Q
"RTN","IBDFBKS4",12,0)
 ...I FLD="",LEND>LBEGIN D LOOP(LBEGIN,LEND) S FLD=LEND,QUIT=1 Q
"RTN","IBDFBKS4",13,0)
 ...I $G(@FIELDS@(PAGE,FLD,"DATATYPE"))'="" D LOOP(LBEGIN,LEND) S FLD=LEND,QUIT=1 Q
"RTN","IBDFBKS4",14,0)
 ...S LEND=FLD
"RTN","IBDFBKS4",15,0)
 ...Q
"RTN","IBDFBKS4",16,0)
 .;
"RTN","IBDFBKS4",17,0)
 .I DATATP'="" D
"RTN","IBDFBKS4",18,0)
 ..N TOSTRING
"RTN","IBDFBKS4",19,0)
 ..S TOSTRING=$S($G(@FIELDS@(PAGE,FLD,"START")):"narrative",1:"str")
"RTN","IBDFBKS4",20,0)
 ..;
"RTN","IBDFBKS4",21,0)
 ..D BLDARY^IBDFBKS(" "_TOSTRING_"=\""\"";")
"RTN","IBDFBKS4",22,0)
 ..;
"RTN","IBDFBKS4",23,0)
 ..I DATATP="ALPHA" D BLDARY^IBDFBKS(" if (GETSTATUS("_FLD_")==FIELD_OK) "_TOSTRING_"=STRIP(GETAVALUE("_FLD_"));") Q
"RTN","IBDFBKS4",24,0)
 ..;
"RTN","IBDFBKS4",25,0)
 ..I DATATP="FLOAT" D BLDARY^IBDFBKS(" if (GETSTATUS("_FLD_")==FIELD_OK) "_TOSTRING_"=STRIP(FTOA(GETFVALUE("_FLD_")));") Q
"RTN","IBDFBKS4",26,0)
 ..;
"RTN","IBDFBKS4",27,0)
 ..I DATATP="INT" D BLDARY^IBDFBKS(" if (GETSTATUS("_FLD_")==FIELD_OK) "_TOSTRING_"=STRIP(ITOA(GETIVALUE("_FLD_")));")  Q
"RTN","IBDFBKS4",28,0)
 ..;
"RTN","IBDFBKS4",29,0)
 ..I DATATP="DATE" D BLDARY^IBDFBKS(" if (GETSTATUS("_FLD_")==FIELD_OK) "_TOSTRING_"=STRIP(DTOA(GETIVALUE("_FLD_")));") Q
"RTN","IBDFBKS4",30,0)
 ..;
"RTN","IBDFBKS4",31,0)
 ..I DATATP="TIME" D BLDARY^IBDFBKS(" if (GETSTATUS("_FLD_")==FIELD_OK) "_TOSTRING_"=STRIP(TTOA(GETIVALUE("_FLD_")));") Q
"RTN","IBDFBKS4",32,0)
 ..;
"RTN","IBDFBKS4",33,0)
 ..;D BLDARY^IBDFBKS(" "_TOSTRING_"=STRFIELDS("_FLD_","_FLD_");") Q
"RTN","IBDFBKS4",34,0)
 .;
"RTN","IBDFBKS4",35,0)
 .I $G(@FIELDS@(PAGE,FLD,"MULT")),'$G(@FIELDS@(PAGE,FLD,"START")) D BLDARY^IBDFBKS(" if (str!=\""\"") narrative=STRIP(STRCAT(STRCAT(narrative,\"" \""),str));")
"RTN","IBDFBKS4",36,0)
 .;
"RTN","IBDFBKS4",37,0)
 .I '$G(@FIELDS@(PAGE,FLD,"MULT")) D
"RTN","IBDFBKS4",38,0)
 ..D BLDARY^IBDFBKS(" if (str!=\""\"") {")
"RTN","IBDFBKS4",39,0)
 ..D BLDARY^IBDFBKS("   Data=Add;")
"RTN","IBDFBKS4",40,0)
 ..I @FIELDS@(PAGE,FLD)'="" D BLDARY^IBDFBKS("   Data=STRCAT(Data,\"""_@FIELDS@(PAGE,FLD)_"\"");")
"RTN","IBDFBKS4",41,0)
 ..D BLDARY^IBDFBKS("   Data=STRCAT(Data,str);")
"RTN","IBDFBKS4",42,0)
 ..D BLDARY^IBDFBKS("   Data=STRCAT(Data,\"",\"");")
"RTN","IBDFBKS4",43,0)
 ..D BLDARY^IBDFBKS("   result=DDEEXEC(ddechan,Data);}")
"RTN","IBDFBKS4",44,0)
 .;
"RTN","IBDFBKS4",45,0)
 .I $G(@FIELDS@(PAGE,FLD,"END")) D
"RTN","IBDFBKS4",46,0)
 ..D BLDARY^IBDFBKS("    if (narrative!=\""\"") {")
"RTN","IBDFBKS4",47,0)
 ..D BLDARY^IBDFBKS("   Data=Add;")
"RTN","IBDFBKS4",48,0)
 ..I @FIELDS@(PAGE,FLD)'="" D BLDARY^IBDFBKS("   Data=STRCAT(Data,\"""_@FIELDS@(PAGE,FLD)_"\"");")
"RTN","IBDFBKS4",49,0)
 ..D BLDARY^IBDFBKS("   Data=STRCAT(Data,narrative);")
"RTN","IBDFBKS4",50,0)
 ..D BLDARY^IBDFBKS("   Data=STRCAT(Add,str);")
"RTN","IBDFBKS4",51,0)
 ..D BLDARY^IBDFBKS("   Data=STRCAT(Data,\"",\"");")
"RTN","IBDFBKS4",52,0)
 ..D BLDARY^IBDFBKS("   result=DDEEXEC(ddechan,Data);}")
"RTN","IBDFBKS4",53,0)
 ..;D BLDARY^IBDFBKS("   Data=STRCAT(Data,RS);}")
"RTN","IBDFBKS4",54,0)
FIELDSQ Q
"RTN","IBDFBKS4",55,0)
 ;
"RTN","IBDFBKS4",56,0)
ONEBUB ; -- for a single bubble field
"RTN","IBDFBKS4",57,0)
 D BLDARY^IBDFBKS(" str=STRFIELDS("_FLD_","_FLD_");")
"RTN","IBDFBKS4",58,0)
 D BLDARY^IBDFBKS(" if (str!=\""\"") {")
"RTN","IBDFBKS4",59,0)
 I @FIELDS@(PAGE,FLD)'="" D BLDARY^IBDFBKS("   Data=STRCAT(Data,\"""_@FIELDS@(PAGE,FLD)_"\"");")
"RTN","IBDFBKS4",60,0)
 D BLDARY^IBDFBKS("      Data=STRCAT(Add,str);")
"RTN","IBDFBKS4",61,0)
 D BLDARY^IBDFBKS("      Data=STRCAT(Data,\"",\"");")
"RTN","IBDFBKS4",62,0)
 D BLDARY^IBDFBKS("      result=DDEEXEC(ddechan,Data)};")
"RTN","IBDFBKS4",63,0)
 ;D BLDARY^IBDFBKS("   Data=STRCAT(Data,str);")
"RTN","IBDFBKS4",64,0)
 ;D BLDARY^IBDFBKS("   Data=STRCAT(Data,RS);}")
"RTN","IBDFBKS4",65,0)
 Q
"RTN","IBDFBKS4",66,0)
 ;
"RTN","IBDFBKS4",67,0)
LOOP(LBEGIN,LEND) ; -- Loop through fields instead of one by one
"RTN","IBDFBKS4",68,0)
 D BLDARY^IBDFBKS("  ")
"RTN","IBDFBKS4",69,0)
 D BLDARY^IBDFBKS(" loop="_LBEGIN_";")
"RTN","IBDFBKS4",70,0)
 D BLDARY^IBDFBKS(" while (loop < "_(LEND+1)_"){")
"RTN","IBDFBKS4",71,0)
 D BLDARY^IBDFBKS("   str=STRFIELDS(loop,loop);")
"RTN","IBDFBKS4",72,0)
 D BLDARY^IBDFBKS("   if (str!=\""\"") {")
"RTN","IBDFBKS4",73,0)
 D BLDARY^IBDFBKS("      Data=STRCAT(Add,str);")
"RTN","IBDFBKS4",74,0)
 D BLDARY^IBDFBKS("   Data=STRCAT(Data,\"",\"");")
"RTN","IBDFBKS4",75,0)
 D BLDARY^IBDFBKS("      result=DDEEXEC(ddechan,Data);}")
"RTN","IBDFBKS4",76,0)
 ;D BLDARY^IBDFBKS("     Data=STRCAT(Data,str);")
"RTN","IBDFBKS4",77,0)
 ;D BLDARY^IBDFBKS("     Data=STRCAT(Data,RS);}")
"RTN","IBDFBKS4",78,0)
 D BLDARY^IBDFBKS("   loop=loop+1;")
"RTN","IBDFBKS4",79,0)
 D BLDARY^IBDFBKS(" if (loop > "_LEND_") break;}")
"RTN","IBDFBKS4",80,0)
 D BLDARY^IBDFBKS("  ")
"RTN","IBDFBKS4",81,0)
 Q
"RTN","IBDFBKS4",82,0)
 ;
"RTN","IBDFBKS4",83,0)
 ;;loop=9;
"RTN","IBDFBKS4",84,0)
 ;;while (loop < 51){
"RTN","IBDFBKS4",85,0)
 ;;    str=STRFIELDS(loop,loop);
"RTN","IBDFBKS4",86,0)
 ;;    if (str!=\"\") {
"RTN","IBDFBKS4",87,0)
 ;;      Data=STRCAT(Data,str);
"RTN","IBDFBKS4",88,0)
 ;;      Data=STRCAT(Data,RS);
"RTN","IBDFBKS4",89,0)
 ;;      }
"RTN","IBDFBKS4",90,0)
 ;;   loop=loop+1;
"RTN","IBDFBKS4",91,0)
 ;;   if (loop > 51) break;
"RTN","IBDFBKS4",92,0)
 ;;   }
"RTN","IBDFBKS4",93,0)
 ;;
"RTN","IBDFBKS4",94,0)
 ;;\'SHOW(Data);
"RTN","IBDFBKS4",95,0)
DATA1 ;;    Data = STRCAT(\"FORMTYPE=153\", RS);
"RTN","IBDFBKS4",96,0)
 ;;    Data = STRCAT(Data, \"FORMID=\");
"RTN","IBDFBKS4",97,0)
 ;;    Data = STRCAT(Data, ITOA(GETIVALUE(7)));
"RTN","IBDFBKS4",98,0)
 ;;    Data = STRCAT(Data,RS);
"RTN","IBDFBKS4",99,0)
 ;;    Data = STRCAT(Data,\"PAGE=1\");
"RTN","IBDFBKS4",100,0)
 ;;    Data = STRCAT(Data,RS);
"RTN","IBDFBKS4",101,0)
 ;;    Data =STRCAT(Data, \"DATA=\");
"RTN","IBDFBKS4",102,0)
 ;;    Data=STRCAT(Data,RS);
"RTN","IBDFBKS4",103,0)
 ;;
"RTN","IBDFC")
0^151^B30799045
"RTN","IBDFC",1,0)
IBDFC ;ALB/CJM - ENCOUNTER FORM - CONVERSION UTILTY ;FEB 30,1995
"RTN","IBDFC",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFC",3,0)
 ;
"RTN","IBDFC",4,0)
FORMLIST ;
"RTN","IBDFC",5,0)
 N IBDEVICE
"RTN","IBDFC",6,0)
 N IBFASTXT ;set to 1 for fast exit from system
"RTN","IBDFC",7,0)
 S IBFASTXT=0
"RTN","IBDFC",8,0)
 D DEVICE^IBDFUA(1,.IBDEVICE)
"RTN","IBDFC",9,0)
 K XQORS,VALMEVL
"RTN","IBDFC",10,0)
 D VALMSG
"RTN","IBDFC",11,0)
 D EN^VALM("IBDFC CONVERSION UTILITY")
"RTN","IBDFC",12,0)
 Q
"RTN","IBDFC",13,0)
ONENTRY ;
"RTN","IBDFC",14,0)
 S VALMCNT=0 K @VALMAR
"RTN","IBDFC",15,0)
 Q
"RTN","IBDFC",16,0)
ONEXIT ;
"RTN","IBDFC",17,0)
 D KILL^%ZISS
"RTN","IBDFC",18,0)
 K ^TMP("IB",$J),^TMP("IBDF",$J),VALMY,IBQUIT,VALMBCK,X,Y,I,DA,D0
"RTN","IBDFC",19,0)
 Q
"RTN","IBDFC",20,0)
 ;
"RTN","IBDFC",21,0)
HDR ;
"RTN","IBDFC",22,0)
 S VALMHDR(1)="             ***  LIST OF FORMS TO CONVERT FOR SCANNING  ***"
"RTN","IBDFC",23,0)
 I $O(^IBD(359,0)) S VALMHDR(2)=" Converted Forms Exist, Use'View Conversion Log' to view converted forms"
"RTN","IBDFC",24,0)
 Q
"RTN","IBDFC",25,0)
REMOVE ;allows user to select a form, then deletes it
"RTN","IBDFC",26,0)
 N SEL,FORM,LAST
"RTN","IBDFC",27,0)
 K DIR
"RTN","IBDFC",28,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDFC",29,0)
 S SEL=$O(VALMY(""))
"RTN","IBDFC",30,0)
 I SEL K @VALMAR@(SEL),@VALMAR@("IDX",SEL)
"RTN","IBDFC",31,0)
 ;fill in the hole with the last form on the list
"RTN","IBDFC",32,0)
 S LAST=$S(VALMCNT<2:0,SEL=VALMCNT:0,1:VALMCNT)
"RTN","IBDFC",33,0)
 I LAST D
"RTN","IBDFC",34,0)
 .S FORM=@VALMAR@("IDX",LAST,LAST)
"RTN","IBDFC",35,0)
 .K @VALMAR@(LAST),@VALMAR@("IDX",LAST)
"RTN","IBDFC",36,0)
 .S VALMCNT=VALMCNT-1
"RTN","IBDFC",37,0)
 .D DISPLAY(SEL,FORM)
"RTN","IBDFC",38,0)
 S VALMCNT=VALMCNT-1
"RTN","IBDFC",39,0)
 D VALMSG
"RTN","IBDFC",40,0)
 S VALMBCK="R"
"RTN","IBDFC",41,0)
 Q
"RTN","IBDFC",42,0)
 ;
"RTN","IBDFC",43,0)
ADDONE ;adds a single form to the list for conversion
"RTN","IBDFC",44,0)
 N FORM,NODE,CNV,CNVNM,PREV,IBQUIT
"RTN","IBDFC",45,0)
 S NODE="",IBQUIT=0
"RTN","IBDFC",46,0)
 S VALMBCK="R"
"RTN","IBDFC",47,0)
 S FORM=$$SLCTFORM^IBDFU4("",.NODE) Q:'FORM
"RTN","IBDFC",48,0)
 I +$P(NODE,"^",17)>2 W !,"This form is already a version "_$P(NODE,"^",17)_" form!" D PAUSE^IBDFU5,VALMSG Q
"RTN","IBDFC",49,0)
 ;
"RTN","IBDFC",50,0)
 ; -- see if form already converted
"RTN","IBDFC",51,0)
 S CNV=0 F  S CNV=$O(^IBD(359,"AORIG",FORM,CNV)) Q:'CNV  D
"RTN","IBDFC",52,0)
 .S PREV=+$G(^IBD(359,CNV,0))
"RTN","IBDFC",53,0)
 .I PREV W !,"This form previously converted, new form name = "_$P($G(^IBE(357,PREV,0)),"^") S IBQUIT=1
"RTN","IBDFC",54,0)
 I $O(^IBE(357,"B","CNV."_$E($P(NODE,"^"),1,41),0)) W !!,"Form Name "_"CNV."_$E($P(NODE,"^"),1,41)_" already exists.  Form must be renamed first!" D PAUSE^IBDFU5 Q
"RTN","IBDFC",55,0)
 D VALMSG
"RTN","IBDFC",56,0)
 I IBQUIT D PAUSE^IBDFU5
"RTN","IBDFC",57,0)
 ;
"RTN","IBDFC",58,0)
 D DISPLAY(VALMCNT+1,FORM)
"RTN","IBDFC",59,0)
 D VALMSG
"RTN","IBDFC",60,0)
 Q
"RTN","IBDFC",61,0)
 ;
"RTN","IBDFC",62,0)
DISPLAY(IDX,FORM) ;
"RTN","IBDFC",63,0)
 N NODE
"RTN","IBDFC",64,0)
 S NODE=$G(^IBE(357,FORM,0)) Q:NODE=""
"RTN","IBDFC",65,0)
 S VALMCNT=VALMCNT+1
"RTN","IBDFC",66,0)
 S @VALMAR@(IDX,0)=$J(IDX,3)_"  "_$$PADRIGHT^IBDFU($P(NODE,"^"),30)_"  "_$E($P(NODE,"^",3),1,80),@VALMAR@("IDX",IDX,IDX)=FORM D FLDCTRL^VALM10(IDX)
"RTN","IBDFC",67,0)
 Q
"RTN","IBDFC",68,0)
 ;
"RTN","IBDFC",69,0)
CNVTLIST ;
"RTN","IBDFC",70,0)
 N IBFORM,IDX,QUIT,PRINT,DIR,DIRUT,DUOUT,DTOUT
"RTN","IBDFC",71,0)
 S (QUIT,PRINT)=0
"RTN","IBDFC",72,0)
 S VALMBCK="R"
"RTN","IBDFC",73,0)
 D FULL^VALM1
"RTN","IBDFC",74,0)
 ;
"RTN","IBDFC",75,0)
 I $O(@VALMAR@("IDX",0))="" W !!,"No forms on List to convert!"  D PAUSE^IBDFU5,VALMSG Q
"RTN","IBDFC",76,0)
 ;
"RTN","IBDFC",77,0)
 W !!,"Each form on the list will be made scannable.  However, the results should be",!,"carefully reviewed before putting the form into use.",!
"RTN","IBDFC",78,0)
 K DIR S DIR(0)="Y",DIR("A")="Do you want to print the form(s) after they have been converted",DIR("B")="YES"
"RTN","IBDFC",79,0)
 D ^DIR Q:(Y<0)!($D(DIRUT))  K DIR I Y=1 D  Q:QUIT
"RTN","IBDFC",80,0)
 .S PRINT=1
"RTN","IBDFC",81,0)
 .D DEVICE
"RTN","IBDFC",82,0)
 ;
"RTN","IBDFC",83,0)
 S IBDASK("ADDOTHER")=$$ASKOTH^IBDFC2B Q:IBDASK("ADDOTHER")<0
"RTN","IBDFC",84,0)
 S IBDASK("AUTOCHG")=$$ASKAUTO^IBDFC2B Q:IBDASK("AUTOCHG")<0
"RTN","IBDFC",85,0)
 ;
"RTN","IBDFC",86,0)
 S IDX=0 F  S IDX=$O(@VALMAR@("IDX",IDX)) Q:'IDX  S IBFORM=$G(@VALMAR@("IDX",IDX,IDX)) Q:'IDX  S IBFORM=$$CONVERT^IBDFC2(IBFORM) D:PRINT QUEUE
"RTN","IBDFC",87,0)
 I PRINT D ^%ZISC
"RTN","IBDFC",88,0)
 K @VALMAR
"RTN","IBDFC",89,0)
 D VALMSG
"RTN","IBDFC",90,0)
 Q
"RTN","IBDFC",91,0)
 ;
"RTN","IBDFC",92,0)
DEVICE ;
"RTN","IBDFC",93,0)
 W !,"** You must queue the form to print. **"
"RTN","IBDFC",94,0)
 W !,$C(7),"** Forms require 132 columns and a page length of 80 lines. **",!
"RTN","IBDFC",95,0)
 ;
"RTN","IBDFC",96,0)
 ;queuing is automatic - the device is not opened
"RTN","IBDFC",97,0)
 K %IS,%ZIS,IOP S %ZIS="N0Q",%ZIS("A")="Printer to queue to: ",%ZIS("B")="",%ZIS("S")="I $E($P($G(^%ZIS(2,+$G(^%ZIS(1,Y,""SUBTYPE"")),0)),U),1,2)=""P-""" D ^%ZIS
"RTN","IBDFC",98,0)
 I POP S QUIT=1
"RTN","IBDFC",99,0)
 Q
"RTN","IBDFC",100,0)
 ;
"RTN","IBDFC",101,0)
QUEUE S ZTRTN="PRINT^IBDFC",ZTSAVE("IBFORM")="",ZTDESC="ENCOUNTER FORM - FROM CONVERSION",ZTDTH=$H D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled")
"RTN","IBDFC",102,0)
 Q
"RTN","IBDFC",103,0)
 ;
"RTN","IBDFC",104,0)
PRINT ;
"RTN","IBDFC",105,0)
 D FORM^IBDF2A(IBFORM,0)
"RTN","IBDFC",106,0)
 Q
"RTN","IBDFC",107,0)
 ;
"RTN","IBDFC",108,0)
VALMSG ;
"RTN","IBDFC",109,0)
 I $O(^IBD(359,0)) S VALMSG="Use 'View Conversion Log' to view converted forms."
"RTN","IBDFC",110,0)
 I '$O(^IBD(359,0)) S VALMSG="Use 'Add Form to List' to convert a form"
"RTN","IBDFC",111,0)
 Q
"RTN","IBDFC",112,0)
 ;
"RTN","IBDFC",113,0)
HELP ;
"RTN","IBDFC",114,0)
 D FULL^VALM1
"RTN","IBDFC",115,0)
 W !!,"To convert a form follow the following steps:"
"RTN","IBDFC",116,0)
 W !,"   1.  Use 'Add Form to List' to select the form.   Add all the forms to"
"RTN","IBDFC",117,0)
 W !,"       the list you wish to at this time."
"RTN","IBDFC",118,0)
 W !,"   2.  Use 'Convert List' to convert the forms."
"RTN","IBDFC",119,0)
 W !,"   3.  Use 'View Conversion Log' to review the conversion process and "
"RTN","IBDFC",120,0)
 W !,"       assign the converted form to a clinic.",!
"RTN","IBDFC",121,0)
 W !,"Hint:  The conversion creates a new copy of your form with the same name"
"RTN","IBDFC",122,0)
 W !,"       as the original but prefixed with 'CNV.'.  (i.e. form PRIM CARE"
"RTN","IBDFC",123,0)
 W !,"        would be renamed CNV.PRIM CARE)"
"RTN","IBDFC",124,0)
 S X="?" D DISP^XQORM1 W !
"RTN","IBDFC1")
0^152^B13457318
"RTN","IBDFC1",1,0)
IBDFC1 ;ALB/CJM - ENCOUNTER FORM - CONVERTED FORMS LIST ;MAR 3, 1995
"RTN","IBDFC1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFC1",3,0)
 ;
"RTN","IBDFC1",4,0)
LIST ;
"RTN","IBDFC1",5,0)
 N IBCLINIC,IBTKFORM,IBTKBLK,IBAPI
"RTN","IBDFC1",6,0)
 S (IBTKFORM,IBTKBLK,IBCLINIC)=""
"RTN","IBDFC1",7,0)
 S IBAPI("INDEX")="D IDXFORMS^IBDFC1"
"RTN","IBDFC1",8,0)
 S IBAPI("SELECT")="D SELECT^IBDFC1"
"RTN","IBDFC1",9,0)
 D EN^VALM("IBDFC CONVERSION LOG")
"RTN","IBDFC1",10,0)
 D VALMSG^IBDFC
"RTN","IBDFC1",11,0)
 S VALMBCK="R"
"RTN","IBDFC1",12,0)
 Q
"RTN","IBDFC1",13,0)
 ;
"RTN","IBDFC1",14,0)
ONENTRY ;
"RTN","IBDFC1",15,0)
 D IDXFORMS
"RTN","IBDFC1",16,0)
 Q
"RTN","IBDFC1",17,0)
ONEXIT ;
"RTN","IBDFC1",18,0)
 K ^TMP("IBDF",$J,"CONVERTED FORMS")
"RTN","IBDFC1",19,0)
 Q
"RTN","IBDFC1",20,0)
 ;
"RTN","IBDFC1",21,0)
HDR ;
"RTN","IBDFC1",22,0)
 S VALMHDR(1)="           *** LOG OF FORMS THAT HAVE BEEN CONVERTED FOR SCANNING ***"
"RTN","IBDFC1",23,0)
 Q
"RTN","IBDFC1",24,0)
 ;
"RTN","IBDFC1",25,0)
IDXFORMS ;build a list of converted forms
"RTN","IBDFC1",26,0)
 N IEN
"RTN","IBDFC1",27,0)
 K @VALMAR
"RTN","IBDFC1",28,0)
 S VALMCNT=0
"RTN","IBDFC1",29,0)
 S IEN=0 F  S IEN=$O(^IBD(359,IEN)) Q:'IEN  D ENTRY
"RTN","IBDFC1",30,0)
 Q
"RTN","IBDFC1",31,0)
 ;
"RTN","IBDFC1",32,0)
ENTRY ;adds an entry to the array
"RTN","IBDFC1",33,0)
 N NODE,FORM,WARNING,REPLACED
"RTN","IBDFC1",34,0)
 S NODE=$G(^IBD(359,IEN,0))
"RTN","IBDFC1",35,0)
 Q:NODE=""
"RTN","IBDFC1",36,0)
 S FORM=+NODE
"RTN","IBDFC1",37,0)
 S VALMCNT=VALMCNT+1
"RTN","IBDFC1",38,0)
 S WARNING=$S($O(^IBD(359,IEN,1,0)):"YES",1:"NO ")
"RTN","IBDFC1",39,0)
 S REPLACED=$S($P(NODE,"^",5):"YES",1:"NO ")
"RTN","IBDFC1",40,0)
 S @VALMAR@(VALMCNT,0)=$J(VALMCNT,3)_"  "_$$LJ^XLFSTR($P(NODE,"^",3),30)_"  "_$$LJ^XLFSTR($$FMTE^XLFDT($P(NODE,"^",4),"2D"),10)_"  "_$$CJ^XLFSTR(WARNING,8)_"    "_$$CJ^XLFSTR(REPLACED,18)
"RTN","IBDFC1",41,0)
 D FLDCTRL^VALM10(VALMCNT) ;set video for ID column
"RTN","IBDFC1",42,0)
 I WARNING="YES" D CNTRL^VALM10(VALMCNT,52,3,IOINHI,IOINORM,0)
"RTN","IBDFC1",43,0)
 I REPLACED="NO " D CNTRL^VALM10(VALMCNT,69,2,IOINHI,IOINORM,0)
"RTN","IBDFC1",44,0)
 S @VALMAR@("IDX",VALMCNT,VALMCNT)=FORM_"^"_IEN
"RTN","IBDFC1",45,0)
 Q
"RTN","IBDFC1",46,0)
 ;
"RTN","IBDFC1",47,0)
SELECT ;returns IBFORM,IBCNVRT
"RTN","IBDFC1",48,0)
 N SEL
"RTN","IBDFC1",49,0)
 K DIR
"RTN","IBDFC1",50,0)
 D EN^VALM2(XQORNOD(0),"S")
"RTN","IBDFC1",51,0)
 S SEL=$O(VALMY(""))
"RTN","IBDFC1",52,0)
 S IBFORM=$S('SEL:"",1:+$G(@VALMAR@("IDX",SEL,SEL)))
"RTN","IBDFC1",53,0)
 S IBCNVRT=$S('SEL:"",1:$P($G(@VALMAR@("IDX",SEL,SEL)),"^",2))
"RTN","IBDFC1",54,0)
 Q
"RTN","IBDFC1",55,0)
 ;
"RTN","IBDFC1",56,0)
WARNINGS ;displays conversion warnings
"RTN","IBDFC1",57,0)
 N IBFORM,IBARY,IBHDRRTN,IBCNVRT
"RTN","IBDFC1",58,0)
 D SELECT
"RTN","IBDFC1",59,0)
 Q:'IBCNVRT
"RTN","IBDFC1",60,0)
 S IBARY="^IBD(359,"_IBCNVRT_",1)"
"RTN","IBDFC1",61,0)
 S IBHDRRTN="D WARNHDR^IBDFC1"
"RTN","IBDFC1",62,0)
 D EN^VALM("IBDE TEXT DISPLAY")
"RTN","IBDFC1",63,0)
 S VALMBCK="R"
"RTN","IBDFC1",64,0)
 Q
"RTN","IBDFC1",65,0)
WARNHDR ;
"RTN","IBDFC1",66,0)
 S VALMHDR(1)="          *** Conversion Warnings For "_$P($G(^IBD(359,IBCNVRT,0)),"^",3)_" ***"
"RTN","IBDFC1",67,0)
 Q
"RTN","IBDFC1",68,0)
 ;
"RTN","IBDFC1",69,0)
DELFORM ;used to delete forms from other places than the clinic setup screen
"RTN","IBDFC1",70,0)
 N CLINIC,IBFORM,IBCNVRT,BLOCK,NOCANDO,SETUP,ARY
"RTN","IBDFC1",71,0)
 S NOCANDO=0,ARY="^TMP(""IBDF"",$J,""TEMPORARY CLINIC LIST"")"
"RTN","IBDFC1",72,0)
 K @ARY
"RTN","IBDFC1",73,0)
 S VALMBCK="R"
"RTN","IBDFC1",74,0)
 I $G(IBAPI("SELECT"))'="" X IBAPI("SELECT")
"RTN","IBDFC1",75,0)
 Q:'IBFORM
"RTN","IBDFC1",76,0)
 D CLINICS^IBDFU4(IBFORM,ARY)
"RTN","IBDFC1",77,0)
 I $G(@ARY@(0)) D
"RTN","IBDFC1",78,0)
 .W !,"Cannot be deleted, the form is in use!"
"RTN","IBDFC1",79,0)
 .D LIST^IBDFU4(ARY,IOSL)
"RTN","IBDFC1",80,0)
 I '$G(@ARY@(0)) D
"RTN","IBDFC1",81,0)
 .D DELETE^IBDFU2C(.IBFORM,357,1)
"RTN","IBDFC1",82,0)
 .I '$G(IBFORM) D
"RTN","IBDFC1",83,0)
 ..K DIK,DA S DIK="^IBD(359,",DA=IBCNVRT D ^DIK K DIK,DA
"RTN","IBDFC1",84,0)
 ..D IDXFORMS
"RTN","IBDFC1",85,0)
 K @ARY
"RTN","IBDFC1",86,0)
 Q
"RTN","IBDFC1",87,0)
 ;
"RTN","IBDFC1",88,0)
PURGE ;purge the conversion log
"RTN","IBDFC1",89,0)
 N SDATE,IBCNVRT,NODE
"RTN","IBDFC1",90,0)
 S VALMBCK="R"
"RTN","IBDFC1",91,0)
 W !,"What is the last dated entry in the conversion log that should be deleted?"
"RTN","IBDFC1",92,0)
 K DIR S DIR(0)="D"
"RTN","IBDFC1",93,0)
 S DIR("B")=$$FMTE^XLFDT($$FMADD^XLFDT(DT,-25))
"RTN","IBDFC1",94,0)
 D ^DIR
"RTN","IBDFC1",95,0)
 I '$D(DIRUT),Y>0,Y'>DT S SDATE=Y D
"RTN","IBDFC1",96,0)
 .K DIK S DIK="^IBD(359,"
"RTN","IBDFC1",97,0)
 .S IBCNVRT=0 F  S IBCNVRT=$O(^IBD(359,IBCNVRT)) Q:'IBCNVRT  S NODE=$G(^IBD(359,IBCNVRT,0)) I $P(NODE,"^",4),$P(NODE,"^",4)'>SDATE S DA=IBCNVRT D ^DIK
"RTN","IBDFC1",98,0)
 .D IDXFORMS
"RTN","IBDFC1",99,0)
 K DIK,Y,DIR,DA,X
"RTN","IBDFC1",100,0)
 Q
"RTN","IBDFC2")
0^153^B29667302
"RTN","IBDFC2",1,0)
IBDFC2 ;ALB/CJM - ENCOUNTER FORM - converts a form for scanning ;MAR 3, 1995
"RTN","IBDFC2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFC2",3,0)
 ;
"RTN","IBDFC2",4,0)
CONVERT(OLDFORM) ;
"RTN","IBDFC2",5,0)
 N IBCNVRT,IBFORM,IBDASK
"RTN","IBDFC2",6,0)
 S (IBCNVRT,IBFORM)=""
"RTN","IBDFC2",7,0)
 S IBCNVRT("BLOCK OFFSET")=0
"RTN","IBDFC2",8,0)
 ;S IBDASK("ADDOTHER")=$$ASKOTH^IBDFC2B G:IBDASK("ADDOTHER")<0 CONVQ
"RTN","IBDFC2",9,0)
 ;S IBDASK("AUTOCHG")=$$ASKAUTO^IBDFC2B G:IBDASK("AUTOCHG")<0 CONVQ
"RTN","IBDFC2",10,0)
 D COPYFORM(OLDFORM,.IBFORM,.IBCNVRT)
"RTN","IBDFC2",11,0)
 G:('IBFORM)!('IBCNVRT) CONVQ
"RTN","IBDFC2",12,0)
 D FILE357
"RTN","IBDFC2",13,0)
 G:'$$FORMDSCR^IBDFU1C(.IBFORM) CONVQ
"RTN","IBDFC2",14,0)
 D BLOCKS
"RTN","IBDFC2",15,0)
 D COMPILE^IBDF19
"RTN","IBDFC2",16,0)
 D PAGEINFO
"RTN","IBDFC2",17,0)
 ;
"RTN","IBDFC2",18,0)
CONVQ Q IBFORM
"RTN","IBDFC2",19,0)
 ;
"RTN","IBDFC2",20,0)
PAGEINFO ;determines what pages must be scanned
"RTN","IBDFC2",21,0)
 N PG,FORMTYPE,LN,TOP,BOT,IEN,NODE
"RTN","IBDFC2",22,0)
 S FORMTYPE=$P($G(^IBE(357,IBFORM,0)),"^",13) Q:'FORMTYPE
"RTN","IBDFC2",23,0)
 F PG=1:1:IBFORM("PAGES") D
"RTN","IBDFC2",24,0)
 .S TOP=(PG-1)*IBFORM("PAGE_HT"),BOT=TOP+IBFORM("PAGE_HT")
"RTN","IBDFC2",25,0)
 .S LN=$O(^IBD(357.95,FORMTYPE,1,"B",TOP-1))
"RTN","IBDFC2",26,0)
 .I 'LN!(LN>BOT) S LN=$O(^IBD(357.95,FORMTYPE,2,"B",TOP-1)) Q:'LN!(LN>BOT)
"RTN","IBDFC2",27,0)
 .;the page should be in file 357
"RTN","IBDFC2",28,0)
 .S IEN=$O(^IBE(357,IBFORM,2,"B",PG,0)) I 'IEN D
"RTN","IBDFC2",29,0)
 ..S NODE=$G(^IBE(357,IBFORM,2,0))
"RTN","IBDFC2",30,0)
 ..F IEN=+$P(NODE,"^",3)+1:1:1 Q:'$D(^IBE(357,IBFORM,2,IEN))
"RTN","IBDFC2",31,0)
 ..S $P(^IBE(357,IBFORM,2,IEN,0),"^")=PG
"RTN","IBDFC2",32,0)
 ..S ^IBE(357,IBFORM,2,"B",PG,IEN)=""
"RTN","IBDFC2",33,0)
 ..S $P(NODE,"^",2)="357.02I",$P(NODE,"^",4)=$P(NODE,"^",4)+1,$P(NODE,"^",3)=IEN,^IBE(357,IBFORM,2,0)=NODE
"RTN","IBDFC2",34,0)
 .S $P(^IBE(357,IBFORM,2,IEN,0),"^",2)=1
"RTN","IBDFC2",35,0)
 .;
"RTN","IBDFC2",36,0)
 .;the page should also be in file 357.95 (form definition)
"RTN","IBDFC2",37,0)
 .S IEN=$O(^IBD(357.95,FORMTYPE,3,"B",PG,0)) I 'IEN D
"RTN","IBDFC2",38,0)
 ..S NODE=$G(^IBD(357.95,FORMTYPE,3,0))
"RTN","IBDFC2",39,0)
 ..F IEN=+$P(NODE,"^",3)+1:1:1 Q:'$D(^IBD(357.95,FORMTYPE,3,IEN))
"RTN","IBDFC2",40,0)
 ..S $P(^IBD(357.95,FORMTYPE,3,IEN,0),"^")=PG
"RTN","IBDFC2",41,0)
 ..S ^IBD(357.95,FORMTYPE,3,"B",PG,IEN)=""
"RTN","IBDFC2",42,0)
 ..S $P(NODE,"^",2)=357.953,$P(NODE,"^",4)=$P(NODE,"^",4)+1,$P(NODE,"^",3)=IEN,^IBD(357.95,FORMTYPE,3,0)=NODE
"RTN","IBDFC2",43,0)
 .S $P(^IBD(357.95,FORMTYPE,3,IEN,0),"^",2)=1
"RTN","IBDFC2",44,0)
 Q
"RTN","IBDFC2",45,0)
 ;
"RTN","IBDFC2",46,0)
FILE357 ;
"RTN","IBDFC2",47,0)
 N NODE,FIELD,LENGTH
"RTN","IBDFC2",48,0)
 S NODE=$G(^IBE(357,IBFORM,0))
"RTN","IBDFC2",49,0)
 ;check right margin
"RTN","IBDFC2",50,0)
 S FIELD=$P(NODE,"^",9) I FIELD'=133 S $P(NODE,"^",9)=133 D:FIELD'=132 WARNING("RIGHT MARGIN CHANGED TO 133 FROM "_FIELD)
"RTN","IBDFC2",51,0)
 S (LENGTH,FIELD)=$P(NODE,"^",10) I FIELD'=80 D WARNING("PAGE LENGTH CHANGED TO 80 FROM "_LENGTH) D
"RTN","IBDFC2",52,0)
 .S $P(NODE,"^",10)=80
"RTN","IBDFC2",53,0)
 .I LENGTH<80 S IBCNVRT("BLOCK OFFSET")=80-LENGTH
"RTN","IBDFC2",54,0)
 .I LENGTH>80 S FIELD=$P(NODE,"^",11),LENGTH=(LENGTH*FIELD)+79,LENGTH=LENGTH\80 I LENGTH'=FIELD D WARNING("THE NUMBER OF PAGES CHANGED TO "_LENGTH_" FROM "_FIELD) S $P(NODE,"^",11)=LENGTH
"RTN","IBDFC2",55,0)
 S $P(NODE,"^",6)=1
"RTN","IBDFC2",56,0)
 S $P(NODE,"^",12)=1
"RTN","IBDFC2",57,0)
 S $P(NODE,"^",14)=1
"RTN","IBDFC2",58,0)
 S $P(NODE,"^",15)="p"
"RTN","IBDFC2",59,0)
 S $P(NODE,"^",16)=1
"RTN","IBDFC2",60,0)
 S $P(NODE,"^",17)=+$G(^DD(357,0,"VR")) S:$P(NODE,"^",17)<2.1 $P(NODE,"^",17)="3.0"
"RTN","IBDFC2",61,0)
 S ^IBE(357,IBFORM,0)=NODE
"RTN","IBDFC2",62,0)
 Q
"RTN","IBDFC2",63,0)
COPYFORM(OLDFORM,NEWFORM,IBCNVRT) ;
"RTN","IBDFC2",64,0)
 ;copies OLDFORM->NEWFORM and creates an entry in file 359=IBCNVRT
"RTN","IBDFC2",65,0)
 N NEWNAME,OLDNAME
"RTN","IBDFC2",66,0)
 S OLDNAME=$P($G(^IBE(357,OLDFORM,0)),"^")
"RTN","IBDFC2",67,0)
 S NEWNAME="CNV."_$E(OLDNAME,1,41)
"RTN","IBDFC2",68,0)
 S NEWFORM=$$COPYFORM^IBDFU2C(OLDFORM,357,357,NEWNAME,0)
"RTN","IBDFC2",69,0)
 S IBCNVRT=$$ADDTO359(NEWFORM,OLDFORM,OLDNAME)
"RTN","IBDFC2",70,0)
 Q
"RTN","IBDFC2",71,0)
 ;
"RTN","IBDFC2",72,0)
ADDTO359(NEWFORM,OLDFORM,OLDNAME) ;
"RTN","IBDFC2",73,0)
 ;create an entry in file 359, Converted Forms
"RTN","IBDFC2",74,0)
 N IBCNVRT,DIC
"RTN","IBDFC2",75,0)
 K DIC,DO,DA,DINUM
"RTN","IBDFC2",76,0)
 S DIC="^IBD(359,",X=NEWFORM,DIC(0)=""
"RTN","IBDFC2",77,0)
 D FILE^DICN K DIC,DIE,DA,DINUM
"RTN","IBDFC2",78,0)
 S IBCNVRT=+Y
"RTN","IBDFC2",79,0)
 Q:IBCNVRT<0 0
"RTN","IBDFC2",80,0)
 S NODE=NEWFORM_"^"_OLDFORM_"^"_OLDNAME_"^"_DT
"RTN","IBDFC2",81,0)
 S ^IBD(359,IBCNVRT,0)=NODE
"RTN","IBDFC2",82,0)
 S ^IBD(359,IBCNVRT,1,0)="^^0^0^^"
"RTN","IBDFC2",83,0)
 S DIK="^IBD(359,",DA=IBCNVRT D IX1^DIK
"RTN","IBDFC2",84,0)
 Q IBCNVRT
"RTN","IBDFC2",85,0)
 ;
"RTN","IBDFC2",86,0)
WARNING(WARNING) ;
"RTN","IBDFC2",87,0)
 ;adds the warning to file 359, entry=IBCNVRT
"RTN","IBDFC2",88,0)
 N CNT,NUM,NODE
"RTN","IBDFC2",89,0)
 S NODE=$G(^IBD(359,IBCNVRT,1,0))
"RTN","IBDFC2",90,0)
 S CNT=$P(NODE,"^",4),NUM=$P(NODE,"^",3)
"RTN","IBDFC2",91,0)
 S CNT=CNT+1,NUM=NUM+1
"RTN","IBDFC2",92,0)
 S WARNING(1)=NUM_") "_$E(WARNING,1,77-$L(CNT))
"RTN","IBDFC2",93,0)
 S WARNING(2)=$E(WARNING,77-$L(CNT),245)
"RTN","IBDFC2",94,0)
 I WARNING(2)]"" S WARNING(1)=WARNING(1)_"-",WARNING(2)="    "_WARNING(2)
"RTN","IBDFC2",95,0)
 S ^IBD(359,IBCNVRT,1,CNT,0)=WARNING(1)
"RTN","IBDFC2",96,0)
 I WARNING(2)]"" S CNT=CNT+1,^IBD(359,IBCNVRT,1,CNT,0)=WARNING(2)
"RTN","IBDFC2",97,0)
 S $P(NODE,"^",4)=CNT,$P(NODE,"^",3)=NUM,^IBD(359,IBCNVRT,1,0)=NODE
"RTN","IBDFC2",98,0)
 Q
"RTN","IBDFC2",99,0)
 ;
"RTN","IBDFC2",100,0)
BLOCKS ;loops through the blocks
"RTN","IBDFC2",101,0)
 N IBBLK,NODE,PAGE,IBLIST
"RTN","IBDFC2",102,0)
 S IBBLK=0 F  S IBBLK=$O(^IBE(357.1,"C",IBFORM,IBBLK)) Q:'IBBLK  D
"RTN","IBDFC2",103,0)
 .Q:$$BLKDESCR^IBDFU1B(.IBBLK)
"RTN","IBDFC2",104,0)
 .I IBBLK("NAME")="FORM NUMBER" D DLTBLK^IBDFU3(IBBLK,IBFORM,357.1) Q
"RTN","IBDFC2",105,0)
 .D UNCMPBLK^IBDF19(IBBLK)
"RTN","IBDFC2",106,0)
 .S NODE=$G(^IBE(357.1,IBBLK,0))
"RTN","IBDFC2",107,0)
 .;
"RTN","IBDFC2",108,0)
 .;if the page is bigger, shift the blocks down
"RTN","IBDFC2",109,0)
 .I IBCNVRT("BLOCK OFFSET") D
"RTN","IBDFC2",110,0)
 ..N Y
"RTN","IBDFC2",111,0)
 ..S Y=IBBLK("Y")+(IBCNVRT("BLOCK OFFSET")*IBBLK("PAGE"))
"RTN","IBDFC2",112,0)
 ..S PAGE=1+(Y\IBFORM("PAGE_HT"))
"RTN","IBDFC2",113,0)
 ..Q:PAGE'>1
"RTN","IBDFC2",114,0)
 ..S Y=IBBLK("Y")+(IBCNVRT("BLOCK OFFSET")*(PAGE-1))
"RTN","IBDFC2",115,0)
 ..S PAGE=1+(Y\IBFORM("PAGE_HT"))
"RTN","IBDFC2",116,0)
 ..S $P(NODE,"^",4)=Y,IBBLK("Y")=Y,IBBLK("PAGE")=PAGE
"RTN","IBDFC2",117,0)
 .;
"RTN","IBDFC2",118,0)
 .;does the block overlap page boundry?
"RTN","IBDFC2",119,0)
 .S PAGE=1+((IBBLK("Y")+IBBLK("H")-1)\IBFORM("PAGE_HT"))
"RTN","IBDFC2",120,0)
 .I PAGE'=IBBLK("PAGE") D WARNING("THE BLOCK '"_IBBLK("NAME")_"' OVERLAPS PAGE BOUNDRIES")
"RTN","IBDFC2",121,0)
 .;
"RTN","IBDFC2",122,0)
 .I IBBLK("X")+IBBLK("W")>133 D WARNING("THE BLOCK '"_IBBLK("NAME")_"' EXTENDS PAST THE RIGHT MARGIN")
"RTN","IBDFC2",123,0)
 .;
"RTN","IBDFC2",124,0)
 .;use reverse printing for block headers - it's new and looks good
"RTN","IBDFC2",125,0)
 .I IBBLK("BOX")=1,IBBLK("HDR")'="",IBBLK("HDISP")["U",IBBLK("HDISP")["C",IBBLK("HDISP")'["R" S $P(NODE,"^",12)="RC"
"RTN","IBDFC2",126,0)
 .
"RTN","IBDFC2",127,0)
 .S ^IBE(357.1,IBBLK,0)=NODE
"RTN","IBDFC2",128,0)
 .K NODE,PAGE,Y
"RTN","IBDFC2",129,0)
 .;
"RTN","IBDFC2",130,0)
 .;handle the selection lists
"RTN","IBDFC2",131,0)
 .S IBLIST=0 F  S IBLIST=$O(^IBE(357.2,"C",IBBLK,IBLIST)) Q:'IBLIST  D
"RTN","IBDFC2",132,0)
 ..Q:$$LSTDESCR^IBDFU1(.IBLIST)
"RTN","IBDFC2",133,0)
 ..I $G(IBDASK("ADDOHTER")) D ADDOTHER^IBDFC2B
"RTN","IBDFC2",134,0)
 ..D CHKVISIT^IBDFC2B
"RTN","IBDFC2",135,0)
 ..D BUBBLES^IBDFC2A(.IBLIST)
"RTN","IBDFC2",136,0)
 ..Q:$$LSTDESCR^IBDFU1(.IBLIST)
"RTN","IBDFC2",137,0)
 ..D CKVALUES^IBDFC2B
"RTN","IBDFC2",138,0)
 Q
"RTN","IBDFC2A")
0^154^B15200420
"RTN","IBDFC2A",1,0)
IBDFC2A ;ALB/CJM - ENCOUNTER FORM - converts a form for scanning (cont'd);MAR 3, 1995
"RTN","IBDFC2A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFC2A",3,0)
 ;
"RTN","IBDFC2A",4,0)
BUBBLES(LIST) ;changes the marking areas to bubbles
"RTN","IBDFC2A",5,0)
 ;no conversion if there is no input interface for the data
"RTN","IBDFC2A",6,0)
 ;pass LIST array by reference
"RTN","IBDFC2A",7,0)
 Q:'LIST("INPUT_RTN")
"RTN","IBDFC2A",8,0)
 ;
"RTN","IBDFC2A",9,0)
 N SC,SCORDER,LARGEST,SZCHANGE,NODE,CNT,BUBBLE
"RTN","IBDFC2A",10,0)
 S (SZCHANGE,LARGEST)=0
"RTN","IBDFC2A",11,0)
 ;
"RTN","IBDFC2A",12,0)
 ;find the marking area used for bubbles
"RTN","IBDFC2A",13,0)
 S BUBBLE=$O(^IBE(357.91,"B","BUBBLE (use for scanning)",0)) Q:'BUBBLE
"RTN","IBDFC2A",14,0)
 ;
"RTN","IBDFC2A",15,0)
 ;make two lists of the subcolumns, one indexed by ien and the other by the order - also, keep track of the largest subcolumn - adjustments may have to be made to it
"RTN","IBDFC2A",16,0)
 S SC=0 F  S SC=$O(^IBE(357.2,LIST,2,SC)) Q:'SC  S SC(SC)=$G(^IBE(357.2,LIST,2,SC,0)),SCORDER(+SC(SC))=SC I $P(SC(SC),"^",4)=1,$P(SC(SC),"^",3)>+LARGEST S LARGEST=$P(SC(SC),"^",3)_"^"_SC
"RTN","IBDFC2A",17,0)
 ;
"RTN","IBDFC2A",18,0)
 ;look for the marking area subcolumns
"RTN","IBDFC2A",19,0)
 S SC=0 F  S SC=$O(SC(SC)) Q:'SC  I $P(SC(SC),"^",4)=2,$P(SC(SC),"^",6)'=BUBBLE,$P(SC(SC),"^",6) D
"RTN","IBDFC2A",20,0)
 .;
"RTN","IBDFC2A",21,0)
 .;don't underline the marking area
"RTN","IBDFC2A",22,0)
 .S $P(SC(SC),"^",8)=1
"RTN","IBDFC2A",23,0)
 .;
"RTN","IBDFC2A",24,0)
 .N MARK
"RTN","IBDFC2A",25,0)
 .S MARK=$P($G(^IBE(357.91,$P(SC(SC),"^",6),0)),"^",2)
"RTN","IBDFC2A",26,0)
 .Q:MARK=""
"RTN","IBDFC2A",27,0)
 .I (MARK="(A) (I)")!(MARK="(A) (I) (H)")!(MARK="(P) (S)") D
"RTN","IBDFC2A",28,0)
 ..;break this subcolumn in two
"RTN","IBDFC2A",29,0)
 ..N QUAL1,QUAL2,HDR1,HDR2
"RTN","IBDFC2A",30,0)
 ..I MARK["A" D
"RTN","IBDFC2A",31,0)
 ...S QUAL1=$O(^IBD(357.98,"B","ACTIVE",0)),QUAL2=$O(^IBD(357.98,"B","INACTIVE",0)),HDR1="A",HDR2="I"
"RTN","IBDFC2A",32,0)
 ..E  D
"RTN","IBDFC2A",33,0)
 ...S QUAL1=$O(^IBD(357.98,"B","PRIMARY",0)),QUAL2=$O(^IBD(357.98,"B","SECONDARY",0)),HDR1="P",HDR2="S"
"RTN","IBDFC2A",34,0)
 ..F CNT=1:1 I '$D(^IBE(357.2,LIST,2,CNT)) Q
"RTN","IBDFC2A",35,0)
 ..;create a new subcolumn
"RTN","IBDFC2A",36,0)
 ..S NODE=SC(SC),$P(NODE,"^")=+SC(SC)+.5,$P(NODE,"^",2)=HDR2,$P(NODE,"^",9)=QUAL2,$P(NODE,"^",6)=BUBBLE,^IBE(357.2,LIST,2,CNT,0)=NODE,$P(^IBE(357.2,LIST,2,0),"^",4)=$P(^IBE(357.2,LIST,2,0),"^",4)+1,SC(CNT)=NODE,SCORDER(+NODE)=CNT
"RTN","IBDFC2A",37,0)
 ..;change the original subcolumn
"RTN","IBDFC2A",38,0)
 ..S NODE=SC(SC),$P(NODE,"^",2)=HDR1,$P(NODE,"^",9)=QUAL1,$P(NODE,"^",6)=BUBBLE,^IBE(357.2,LIST,2,SC,0)=NODE
"RTN","IBDFC2A",39,0)
 ..;
"RTN","IBDFC2A",40,0)
 ..;may have to make an adjustment
"RTN","IBDFC2A",41,0)
 ..S SZCHANGE=SZCHANGE+($L(LIST("SEP"))-1)
"RTN","IBDFC2A",42,0)
 .;
"RTN","IBDFC2A",43,0)
 .;just change the marking area to bubble
"RTN","IBDFC2A",44,0)
 .E  D
"RTN","IBDFC2A",45,0)
 ..S $P(^IBE(357.2,LIST,2,SC,0),"^",6)=BUBBLE
"RTN","IBDFC2A",46,0)
 ..S SZCHANGE=SZCHANGE+(3-$L(MARK))
"RTN","IBDFC2A",47,0)
 ..;
"RTN","IBDFC2A",48,0)
 ;
"RTN","IBDFC2A",49,0)
 ;adjust subcolumn size to make up for extra space required by bubbles - may truncate text
"RTN","IBDFC2A",50,0)
 I SZCHANGE D
"RTN","IBDFC2A",51,0)
 .N SLCTN,SUBCOL,ORDER,IEN,NEWSIZE,TEXT
"RTN","IBDFC2A",52,0)
 .S SUBCOL=$P(LARGEST,"^",2)
"RTN","IBDFC2A",53,0)
 .S NEWSIZE=$P(SC(SUBCOL),"^",3)-SZCHANGE
"RTN","IBDFC2A",54,0)
 .S $P(SC(SUBCOL),"^",3)=NEWSIZE,^IBE(357.2,LIST,2,SUBCOL,0)=SC(SUBCOL)
"RTN","IBDFC2A",55,0)
 .S ORDER=+SC(SUBCOL)
"RTN","IBDFC2A",56,0)
 .S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"C",LIST,SLCTN)) Q:'SLCTN  S IEN=$O(^IBE(357.3,SLCTN,1,"B",ORDER,0)) Q:'IEN  D
"RTN","IBDFC2A",57,0)
 ..S TEXT=$P($G(^IBE(357.3,SLCTN,1,IEN,0)),"^",2)
"RTN","IBDFC2A",58,0)
 ..I $L(TEXT)>NEWSIZE D WARNING^IBDFC2("IN THE LIST '"_LIST("NAME")_"' THE TEXT '"_TEXT_"' WILL BE TRUNCATED BY "_($L(TEXT)-NEWSIZE)_" CHARACTERS - MANUAL EDITING MAY BE REQUIRED")
"RTN","IBDFC2A",59,0)
 ;
"RTN","IBDFC2A",60,0)
 ;reorder the subcolumns
"RTN","IBDFC2A",61,0)
 N IBSWT
"RTN","IBDFC2A",62,0)
 S (CNT,SCORDER)=0
"RTN","IBDFC2A",63,0)
 F  S SCORDER=$O(SCORDER(SCORDER)) Q:'SCORDER  S CNT=CNT+1 I SCORDER'=CNT D  I $P(SC(SCORDER(SCORDER)),"^",4)=1 S IBSWT(SCORDER)=CNT
"RTN","IBDFC2A",64,0)
 .K ^IBE(357.2,LIST,2,"B",SCORDER,SCORDER(SCORDER))
"RTN","IBDFC2A",65,0)
 .S $P(^IBE(357.2,LIST,2,SCORDER(SCORDER),0),"^")=CNT,^IBE(357.2,LIST,2,"B",CNT,SCORDER(SCORDER))=""
"RTN","IBDFC2A",66,0)
 .;make the change in the selection due to the reordering of the subcolumns
"RTN","IBDFC2A",67,0)
 .;I $P(SC(SCORDER(SCORDER)),"^",4)=1 D SWITCH^IBDF9A(LIST,SCORDER,CNT)
"RTN","IBDFC2A",68,0)
 D SWITCH^IBDF9A(LIST,.IBSWT)
"RTN","IBDFC2A",69,0)
 Q
"RTN","IBDFC2B")
0^155^B30216039
"RTN","IBDFC2B",1,0)
IBDFC2B ;ALB/CJM - ENCOUNTER FORM - converts a form for scanning ;MAR 3, 1995
"RTN","IBDFC2B",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFC2B",3,0)
 ;
"RTN","IBDFC2B",4,0)
ADDOTHER ;add space to the list to write in other
"RTN","IBDFC2B",5,0)
 N NODE
"RTN","IBDFC2B",6,0)
 S NODE=$G(^IBE(357.2,IBLIST,0))
"RTN","IBDFC2B",7,0)
 I NODE]"",$P(NODE,"^",16)="" S $P(NODE,"^",16)=1,$P(NODE,"^",17)=3,$P(NODE,"^",18)=2 S ^IBE(357.2,IBLIST,0)=NODE
"RTN","IBDFC2B",8,0)
 Q
"RTN","IBDFC2B",9,0)
 ;
"RTN","IBDFC2B",10,0)
CKVALUES ;make sure the internal value to be passed matches the value displayed and is an active code
"RTN","IBDFC2B",11,0)
 ;
"RTN","IBDFC2B",12,0)
 Q:'IBLIST("INPUT_RTN")
"RTN","IBDFC2B",13,0)
 N SUBCOL,I,SLCTN,IEN,TEXT,CODE,NODE
"RTN","IBDFC2B",14,0)
 ;
"RTN","IBDFC2B",15,0)
 ;find the subcolumn with the code
"RTN","IBDFC2B",16,0)
 S SUBCOL=0 F I=1:1:8 I $G(IBLIST("SCPIECE",I))=1,$G(IBLIST("SCTYPE",I))=1 S SUBCOL=I
"RTN","IBDFC2B",17,0)
 ;
"RTN","IBDFC2B",18,0)
 ;check that the display of the code matches its id and that it's active
"RTN","IBDFC2B",19,0)
 S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"C",IBLIST,SLCTN)) Q:'SLCTN  D
"RTN","IBDFC2B",20,0)
 .S NODE=$G(^IBE(357.3,SLCTN,0))
"RTN","IBDFC2B",21,0)
 .;
"RTN","IBDFC2B",22,0)
 .;check if place holder
"RTN","IBDFC2B",23,0)
 .Q:$P(NODE,"^",2)
"RTN","IBDFC2B",24,0)
 .;
"RTN","IBDFC2B",25,0)
 .S CODE=$P(NODE,"^")
"RTN","IBDFC2B",26,0)
 .Q:CODE=""
"RTN","IBDFC2B",27,0)
 .;
"RTN","IBDFC2B",28,0)
 .;check for inactive codes
"RTN","IBDFC2B",29,0)
 .I '$$CKACTIVE(CODE,IBLIST("RTN")) D
"RTN","IBDFC2B",30,0)
 ..S TEXT=$$DISPLAY(SLCTN)
"RTN","IBDFC2B",31,0)
 ..D WARNING^IBDFC2("IN THE SELECTION LIST '"_IBLIST("NAME")_"' THE ENTRY="_TEXT_" IS AN INACTIVE CODE")
"RTN","IBDFC2B",32,0)
 .;
"RTN","IBDFC2B",33,0)
 .;check for displayed codes that don't match their id stored on piece 1
"RTN","IBDFC2B",34,0)
 .Q:'SUBCOL
"RTN","IBDFC2B",35,0)
 .S IEN=$O(^IBE(357.3,SLCTN,1,"B",SUBCOL,0))
"RTN","IBDFC2B",36,0)
 .Q:'IEN
"RTN","IBDFC2B",37,0)
 .S TEXT=$P($G(^IBE(357.3,SLCTN,1,IEN,0)),"^",2)
"RTN","IBDFC2B",38,0)
 .Q:'$L(TEXT)
"RTN","IBDFC2B",39,0)
 .I CODE'=TEXT D
"RTN","IBDFC2B",40,0)
 ..; -- codes doesn't match text and autochange= yes
"RTN","IBDFC2B",41,0)
 ..I $G(IBDASK("AUTOCHG")),$$CKACTIVE(TEXT,IBLIST("RTN")) D  Q
"RTN","IBDFC2B",42,0)
 ...; use fm to update data and x-refs S $P(^IBE(357.3,SLCTN,0),"^")=TEXT
"RTN","IBDFC2B",43,0)
 ...S DIE=357.3,DR=".01////^S X=TEXT",DA=SLCTN D ^DIE K DIE,DA,DR
"RTN","IBDFC2B",44,0)
 ...D WARNING^IBDFC2("In the Selection List '"_IBLIST("NAME")_"' the Code="_CODE_" was automatically update to match the text="_TEXT)
"RTN","IBDFC2B",45,0)
 ...Q
"RTN","IBDFC2B",46,0)
 ..D WARNING^IBDFC2("IN THE SELECTION LIST '"_IBLIST("NAME")_"' THE CODE="_TEXT_" IS DISPLAYED BUT THE CODE="_CODE_" WILL BE TRANSMITTED") Q
"RTN","IBDFC2B",47,0)
 Q
"RTN","IBDFC2B",48,0)
 ;
"RTN","IBDFC2B",49,0)
CHKVISIT ;should the selection list use the new Package Interface for Type of Visit?
"RTN","IBDFC2B",50,0)
 ;
"RTN","IBDFC2B",51,0)
 I ($$UP^XLFSTR(IBLIST("NAME"))["VISIT")!($$UP^XLFSTR(IBBLK("NAME"))["VISIT"),IBLIST("RTN") I $P($G(^IBE(357.6,IBLIST("RTN"),0)),"^")["SELECT CPT PROCEDURE" D
"RTN","IBDFC2B",52,0)
 .N SLCTN,CODE,PI,CHANGE
"RTN","IBDFC2B",53,0)
 .S PI=$O(^IBE(357.6,"B","DG SELECT VISIT TYPE CPT PROCE",0))
"RTN","IBDFC2B",54,0)
 .Q:'PI
"RTN","IBDFC2B",55,0)
 .S CHANGE=1,SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"C",IBLIST,SLCTN)) Q:'SLCTN  S CODE=$P($G(^IBE(357.3,SLCTN,0)),"^") I CODE I '$D(^IBE(357.69,CODE,0)) S CHANGE=0 Q
"RTN","IBDFC2B",56,0)
 .;change the list to visit type
"RTN","IBDFC2B",57,0)
 .I CHANGE D
"RTN","IBDFC2B",58,0)
 ..N CNT,SC,NODE,SUB S (CNT,SC)=""
"RTN","IBDFC2B",59,0)
 ..;change the package interface to type of visit
"RTN","IBDFC2B",60,0)
 ..S $P(^IBE(357.2,IBLIST,0),"^",11)=PI
"RTN","IBDFC2B",61,0)
 ..;set the selection rule to exactly one as long as there is only one marking subcolumn
"RTN","IBDFC2B",62,0)
 ..F  S SC=$O(^IBE(357.2,IBLIST,2,SC)) Q:'SC  S NODE=$G(^IBE(357.2,IBLIST,2,SC,0)) I $P(NODE,"^",4)=2 S CNT=CNT+1,SUB=SC
"RTN","IBDFC2B",63,0)
 ..I CNT=1,$P(NODE,"^",10)="" S $P(^IBE(357.2,IBLIST,2,SUB,0),"^",10)=1
"RTN","IBDFC2B",64,0)
 .;
"RTN","IBDFC2B",65,0)
 .I 'CHANGE,IBLIST("NAME")["VISIT",IBLIST("NAME")["TYPE" D WARNING^IBDFC2("THE BLOCK '"_IBBLK("NAME")_"' HAS A LIST FOR CPT PROCEDURES THAT PERHAPS SHOULD BE REPLACED WITH VISIT TYPE")
"RTN","IBDFC2B",66,0)
 Q
"RTN","IBDFC2B",67,0)
 ;
"RTN","IBDFC2B",68,0)
CKACTIVE(X,PI) ;returns 1 if the X=an active code, 0 otherwise
"RTN","IBDFC2B",69,0)
 Q:'PI 1
"RTN","IBDFC2B",70,0)
 X $G(^IBE(357.6,PI,11))
"RTN","IBDFC2B",71,0)
 Q $D(X)
"RTN","IBDFC2B",72,0)
 ;
"RTN","IBDFC2B",73,0)
DISPLAY(SLCTN) ;returns selection display
"RTN","IBDFC2B",74,0)
 N SC,SCDA,VAL,RET,W,NODE
"RTN","IBDFC2B",75,0)
 ;W - an array cotaining the widths of the subcolumns that contain text
"RTN","IBDFC2B",76,0)
 S NODE=$G(^IBE(357.3,SLCTN,0))
"RTN","IBDFC2B",77,0)
 S RET="  ",(VAL,SC)=""
"RTN","IBDFC2B",78,0)
 F SC=1:1:8 S SCDA=$O(^IBE(357.3,SLCTN,1,"B",SC,"")) D
"RTN","IBDFC2B",79,0)
 .I $G(IBLIST("SCTYPE",SC))=1 S W(SC)=IBLIST("SCW",SC)*(1+IBLIST("BTWN"))
"RTN","IBDFC2B",80,0)
 .S:$G(W(SC)) VAL=$$PADRIGHT^IBDFU($S(SCDA:$P($G(^IBE(357.3,SLCTN,1,SCDA,0)),"^",2),1:""),W(SC))
"RTN","IBDFC2B",81,0)
 .S:VAL'="" RET=RET_"  "_VAL
"RTN","IBDFC2B",82,0)
 .S VAL=""
"RTN","IBDFC2B",83,0)
 Q RET
"RTN","IBDFC2B",84,0)
 ;
"RTN","IBDFC2B",85,0)
ASKOTH() ; Function
"RTN","IBDFC2B",86,0)
 ; -- ask if want to add other hand print field automatically
"RTN","IBDFC2B",87,0)
 ;    Returns 1 if yes, 0 if no, or -1 if uparrow
"RTN","IBDFC2B",88,0)
 ;
"RTN","IBDFC2B",89,0)
 N X,Y,ANS,DIR
"RTN","IBDFC2B",90,0)
 W !
"RTN","IBDFC2B",91,0)
 S ANS=-1
"RTN","IBDFC2B",92,0)
 S DIR("?")="Answer YES if you want to automatically add 1 hand print field to each selection list.  If you answer NO nothing will be added."
"RTN","IBDFC2B",93,0)
 S DIR("?",1)="   Hand print fields can be automatically added to your form"
"RTN","IBDFC2B",94,0)
 S DIR("?",2)="   if you wish. If there isn't suffient room in the block"
"RTN","IBDFC2B",95,0)
 S DIR("?",3)="   or on the form them adding the hand print field will cause"
"RTN","IBDFC2B",96,0)
 S DIR("?",4)="   part of the list to disappear."
"RTN","IBDFC2B",97,0)
 S DIR("?",5)=" "
"RTN","IBDFC2B",98,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IBDFC2B",99,0)
 S DIR("A")="Automatically Add 'Other' Hand Print Fields"
"RTN","IBDFC2B",100,0)
 D ^DIR
"RTN","IBDFC2B",101,0)
 I $D(DIRUT) G ASKOTHQ
"RTN","IBDFC2B",102,0)
 S ANS=Y
"RTN","IBDFC2B",103,0)
ASKOTHQ Q ANS
"RTN","IBDFC2B",104,0)
 ;
"RTN","IBDFC2B",105,0)
ASKAUTO() ; Function
"RTN","IBDFC2B",106,0)
 ; -- ask if want to automatically update codes
"RTN","IBDFC2B",107,0)
 ;    Returns 1 if yes, 0 if no, or -1 if uparrow
"RTN","IBDFC2B",108,0)
 ;
"RTN","IBDFC2B",109,0)
 N X,Y,ANS,DIR
"RTN","IBDFC2B",110,0)
 W !
"RTN","IBDFC2B",111,0)
 S ANS=-1
"RTN","IBDFC2B",112,0)
 S DIR("?")="Answer YES if you want codes in the selection lists that will be transmitted to PCE to automatically be updated to match the displayed codes.  If you answer No, warnings will be generated but the codes will not be updated."
"RTN","IBDFC2B",113,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IBDFC2B",114,0)
 S DIR("A")="Automatically update codes to be transmitted"
"RTN","IBDFC2B",115,0)
 D ^DIR
"RTN","IBDFC2B",116,0)
 I $D(DIRUT) G ASKAUTQ
"RTN","IBDFC2B",117,0)
 S ANS=Y
"RTN","IBDFC2B",118,0)
ASKAUTQ Q ANS
"RTN","IBDFC3")
0^156^B5127082
"RTN","IBDFC3",1,0)
IBDFC3 ;ALB/CJM - ENCOUNTER FORM - replace original form with converted form ;MAR 3, 1995
"RTN","IBDFC3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFC3",3,0)
 ;
"RTN","IBDFC3",4,0)
REPLACE ;replaces the original form with the converted form
"RTN","IBDFC3",5,0)
 N IBFORM,OLDFORM,IBCNVRT,NODE,OLDNAME,NEWNAME
"RTN","IBDFC3",6,0)
 S VALMBCK="R"
"RTN","IBDFC3",7,0)
 ;D FULL^VALM1
"RTN","IBDFC3",8,0)
 W !,"The original form will be replaced with the converted form in all of the",!,"clinics and divisions where it is used."
"RTN","IBDFC3",9,0)
 K DIR S DIR(0)="Y",DIR("B")="YES",DIR("A")="Is that okay"
"RTN","IBDFC3",10,0)
 D ^DIR K DIR
"RTN","IBDFC3",11,0)
 I (Y=1)&'$D(DIRUT) D
"RTN","IBDFC3",12,0)
 .X IBAPI("SELECT")
"RTN","IBDFC3",13,0)
 .Q:'IBFORM
"RTN","IBDFC3",14,0)
 .Q:'IBCNVRT
"RTN","IBDFC3",15,0)
 .S NODE=$G(^IBD(359,IBCNVRT,0))
"RTN","IBDFC3",16,0)
 .S OLDFORM=$P(NODE,"^",2),OLDNAME=$P(NODE,"^",3)
"RTN","IBDFC3",17,0)
 .Q:'OLDFORM
"RTN","IBDFC3",18,0)
 .D LOOP
"RTN","IBDFC3",19,0)
 .S $P(^IBD(359,IBCNVRT,0),"^",5)=1
"RTN","IBDFC3",20,0)
 .;
"RTN","IBDFC3",21,0)
 .;delete the original?
"RTN","IBDFC3",22,0)
 .W !,"The converted form has been substituted everywhere for the original"
"RTN","IBDFC3",23,0)
 .S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you want the original form deleted"
"RTN","IBDFC3",24,0)
 .D ^DIR K DIR
"RTN","IBDFC3",25,0)
 .I (Y=1)&'$D(DIRUT) D
"RTN","IBDFC3",26,0)
 ..D DELETE^IBDFU2C(OLDFORM,357)
"RTN","IBDFC3",27,0)
 ..;rename the converted form to take out the CNV. prefix
"RTN","IBDFC3",28,0)
 ..S NAME=$P($G(^IBE(357,IBFORM,0)),"^") I $E(NAME,1,4)="CNV." S NAME=$E(NAME,5,45) S:(NAME=$E(OLDNAME,1,$L(NAME))) NAME=OLDNAME D
"RTN","IBDFC3",29,0)
 ...K DIE,DA,DR S DIE="^IBE(357,",DA=IBFORM,DR=".01////"_NAME D ^DIE K DIE,DA,DR
"RTN","IBDFC3",30,0)
 .;
"RTN","IBDFC3",31,0)
 .D IDXFORMS^IBDFC1
"RTN","IBDFC3",32,0)
 K Y
"RTN","IBDFC3",33,0)
 Q
"RTN","IBDFC3",34,0)
 ;
"RTN","IBDFC3",35,0)
LOOP ;loops through the clinic setups and divisions setups, making the substitutions
"RTN","IBDFC3",36,0)
 N SETUP,NODE,PIECE,FOUND
"RTN","IBDFC3",37,0)
 S SETUP=0 F  S SETUP=$O(^SD(409.95,SETUP)) Q:'SETUP  D
"RTN","IBDFC3",38,0)
 .S NODE=$G(^SD(409.95,SETUP,0))
"RTN","IBDFC3",39,0)
 .K DR S DR=""
"RTN","IBDFC3",40,0)
 .S FOUND=0
"RTN","IBDFC3",41,0)
 .F PIECE=2:1:12 I $P(NODE,"^",PIECE)=OLDFORM S DR=DR_(.01*PIECE)_"////"_IBFORM_";",FOUND=1
"RTN","IBDFC3",42,0)
 .I FOUND K DIE,DA S DIE="^SD(409.95,",DA=SETUP D ^DIE
"RTN","IBDFC3",43,0)
 .K DIE,DR,DA
"RTN","IBDFC3",44,0)
 Q
"RTN","IBDFC4")
0^157^B86781
"RTN","IBDFC4",1,0)
IBDFC4 ;ALB/CJM - ENCOUNTER FORM - print scanning form definition ;MAR 3, 1995
"RTN","IBDFC4",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFC4",3,0)
 ;
"RTN","IBDFC4",4,0)
FORMDEF ;
"RTN","IBDFC4",5,0)
 W !,"THIS IS NOT YET IMPLEMENTED!"
"RTN","IBDFC4",6,0)
 D PAUSE^IBDFU5
"RTN","IBDFC4",7,0)
 S VALMBCK="R"
"RTN","IBDFC4",8,0)
 Q
"RTN","IBDFCG")
0^158^B40040584
"RTN","IBDFCG",1,0)
IBDFCG ;MAF/ALB - CLINIC GROUP FORMS SCREEN ; 09-FEB-1995
"RTN","IBDFCG",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFCG",3,0)
 ;
"RTN","IBDFCG",4,0)
 ;
"RTN","IBDFCG",5,0)
EN ; -- main entry point for IBDF EF CLINIC GROUP LT
"RTN","IBDFCG",6,0)
 D EN^VALM("IBDF EF CLINIC GROUP LT")
"RTN","IBDFCG",7,0)
 Q
"RTN","IBDFCG",8,0)
 ;
"RTN","IBDFCG",9,0)
 ;
"RTN","IBDFCG",10,0)
HDR ; -- header code
"RTN","IBDFCG",11,0)
 S VALMHDR(1)="This is a list of the Clinic Groups and the Clinics"
"RTN","IBDFCG",12,0)
 S VALMHDR(2)="and Divisions under them."
"RTN","IBDFCG",13,0)
 Q
"RTN","IBDFCG",14,0)
 ;
"RTN","IBDFCG",15,0)
 ;
"RTN","IBDFCG",16,0)
INIT ; -- init variables and list array
"RTN","IBDFCG",17,0)
 N IBDFNODE,IBDFCL,IBDIFN,IBDFCGNM,IBDFCNUM,IBDCNT,IBDCNT1,IBDVAL,IBDVAL1,IBDFVAL,IBFASTXT,IBDCG,IBDCL,IBDDV,IBDFCFLG,IBDFCIEN,IBDFCN,IBDFDFLG,IBDFDIEN,IBDFGN,IBDFX,IBDVALM
"RTN","IBDFCG",18,0)
 K IBDCLN1,IBDFCG
"RTN","IBDFCG",19,0)
 S (IBDCNT,IBFASTXT,IBDCNT1,VALMCNT)=0
"RTN","IBDFCG",20,0)
 K ^TMP("IBMF",$J),^TMP("IBDFCG",$J),^TMP("CGIDX",$J),IBDCLN D KILL^VALM10()
"RTN","IBDFCG",21,0)
 S (IBDFGN,IBDFCGNM)=0
"RTN","IBDFCG",22,0)
 F IBDFGN=0:0 S IBDFCGNM=$O(^IBD(357.99,"B",IBDFCGNM)) Q:IBDFCGNM']""  F IBDIFN=0:0 S IBDIFN=$O(^IBD(357.99,"B",IBDFCGNM,IBDIFN)) Q:IBDIFN'>0  I IBDIFN]"" D ARRAY
"RTN","IBDFCG",23,0)
 S (IBDFCG,IBDFCGNM)=0
"RTN","IBDFCG",24,0)
 F IBDFCN=0:0 S IBDFCGNM=$O(IBDCLN1(IBDFCGNM)) Q:IBDFCGNM']""  F IBDCG=0:0 S IBDCG=$O(IBDCLN1(IBDFCGNM,IBDCG)) Q:'IBDCG  I $D(IBDCLN1(IBDFCGNM,IBDCG)) S IBDCNT1=IBDCNT1+1 D GROUPS D
"RTN","IBDFCG",25,0)
 .F IBDFX=IBDFX:0 S IBDFX=$O(^TMP("IBMF",$J,IBDCG,IBDFX)) Q:'IBDFX  D SETG1
"RTN","IBDFCG",26,0)
 .I $O(IBDCLN1(IBDFCGNM))]"" S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1 S X="",X=$$SETSTR^VALM1(X,X,1,80) D TMP
"RTN","IBDFCG",27,0)
 ;
"RTN","IBDFCG",28,0)
 I '$D(^TMP("IBDFCG",$J)) D NUL
"RTN","IBDFCG",29,0)
 Q
"RTN","IBDFCG",30,0)
 ;
"RTN","IBDFCG",31,0)
 ;
"RTN","IBDFCG",32,0)
ARRAY ; -- Setting up array for clinic groups and the divisions and clinics
"RTN","IBDFCG",33,0)
 S IBDCLN1(IBDFCGNM,IBDIFN)=IBDIFN
"RTN","IBDFCG",34,0)
 S (IBDDV,IBDCL)=0 D CLIN^IBDFCG1 D DIV^IBDFCG1
"RTN","IBDFCG",35,0)
 S (IBDFX,IBDDV,IBDCL,IBDFCFLG,IBDFDFLG,IBDFCIEN,IBDFDIEN)=0
"RTN","IBDFCG",36,0)
 F IBDFX=0:0 S IBDFX=IBDFX+1 D:'IBDFCFLG CLIN1^IBDFCG1 D:'IBDFDFLG DIV1^IBDFCG1 Q:IBDFCFLG=1&(IBDFDFLG=1)
"RTN","IBDFCG",37,0)
 Q
"RTN","IBDFCG",38,0)
 ;
"RTN","IBDFCG",39,0)
 ;
"RTN","IBDFCG",40,0)
SETG1 ; -- Creating the list entries
"RTN","IBDFCG",41,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFCG",42,0)
 S X=""
"RTN","IBDFCG",43,0)
 S IBDFVAL=$O(^TMP("IBMF",$J,IBDCG,IBDFX,"D",0))
"RTN","IBDFCG",44,0)
 S IBDFVAL=$G(^TMP("IBMF",$J,IBDCG,IBDFX,"D",+IBDFVAL)) S X=$$SETSTR^VALM1(IBDFVAL,X,28,26)
"RTN","IBDFCG",45,0)
 S IBDFVAL=$O(^TMP("IBMF",$J,IBDCG,IBDFX,"C",0))
"RTN","IBDFCG",46,0)
 S IBDFVAL=$G(^TMP("IBMF",$J,IBDCG,IBDFX,"C",+IBDFVAL)) S X=$$SETSTR^VALM1(IBDFVAL,X,56,23)
"RTN","IBDFCG",47,0)
 D TMP
"RTN","IBDFCG",48,0)
 Q
"RTN","IBDFCG",49,0)
 ;
"RTN","IBDFCG",50,0)
 ;
"RTN","IBDFCG",51,0)
GROUPS ; -- Creating the Listman Clinic Name titles for the list
"RTN","IBDFCG",52,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFCG",53,0)
 S IBDFCG(IBDFCGNM)=IBDCNT_"^"_IBDCG
"RTN","IBDFCG",54,0)
 S X="",X=$$SETSTR^VALM1(IBDCNT1_"  "_IBDFCGNM,X,1,26)
"RTN","IBDFCG",55,0)
 S IBDFX=1
"RTN","IBDFCG",56,0)
 I '$O(^TMP("IBMF",$J,IBDCG,IBDFX,"D",0)),'$O(^TMP("IBMF",$J,IBDCG,IBDFX,"C",0)) D TMP,CNTRL^VALM10(VALMCNT,1,26,IOINHI,IOINORM,0) Q
"RTN","IBDFCG",57,0)
 S IBDVAL=$O(^TMP("IBMF",$J,IBDCG,IBDFX,"D",0)) I IBDVAL S IBDVAL=^TMP("IBMF",$J,IBDCG,IBDFX,"D",IBDVAL) S X=$$SETSTR^VALM1(IBDVAL,X,28,26) I '$O(^TMP("IBMF",$J,IBDCG,IBDFX,"C",0)) D TMP,CNTRL^VALM10(VALMCNT,1,26,IOINHI,IOINORM,0)
"RTN","IBDFCG",58,0)
 S IBDVAL=$O(^TMP("IBMF",$J,IBDCG,IBDFX,"C",0)) I IBDVAL S IBDVAL=^TMP("IBMF",$J,IBDCG,IBDFX,"C",IBDVAL) S X=$$SETSTR^VALM1(IBDVAL,X,56,24) D TMP,CNTRL^VALM10(VALMCNT,1,26,IOINHI,IOINORM,0)
"RTN","IBDFCG",59,0)
 Q
"RTN","IBDFCG",60,0)
 ;
"RTN","IBDFCG",61,0)
 ;
"RTN","IBDFCG",62,0)
TMP S ^TMP("IBDFCG",$J,IBDCNT,0)=X,^TMP("IBDFCG",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFCG",63,0)
 S ^TMP("CGIDX",$J,IBDCNT1)=VALMCNT_"^"_IBDCG
"RTN","IBDFCG",64,0)
 Q
"RTN","IBDFCG",65,0)
 ;
"RTN","IBDFCG",66,0)
 ;
"RTN","IBDFCG",67,0)
EDIT ; -- Edit a selected Clinic Group
"RTN","IBDFCG",68,0)
 N IBDVALM,VALMY
"RTN","IBDFCG",69,0)
 S VALMBCK=""
"RTN","IBDFCG",70,0)
 D EN^VALM2($G(XQORNOD(0))) G REP:'$O(VALMY(0)) S IBDVALM=0
"RTN","IBDFCG",71,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBDFCG",72,0)
 F IBDVALM=0:0 S IBDVALM=$O(VALMY(IBDVALM)) Q:'IBDVALM  S DA=^TMP("CGIDX",$J,IBDVALM),DA=$P(DA,"^",2) D
"RTN","IBDFCG",73,0)
 .D MESS
"RTN","IBDFCG",74,0)
 .W !!,"Clinic Group: "_$P($G(^IBD(357.99,DA,0)),"^",1)
"RTN","IBDFCG",75,0)
 .S DIE="^IBD(357.99,",DA=DA,DR=".01;I $O(^IBD(357.99,DA,11,0)) S Y=""@99"";10;@99;I $O(^IBD(357.99,DA,10,0)) S Y=""@999"";11;@999" D ^DIE K DA,DIE,DR
"RTN","IBDFCG",76,0)
 D REP1 Q
"RTN","IBDFCG",77,0)
 ;
"RTN","IBDFCG",78,0)
DEL ; -- Delete Clinic Group
"RTN","IBDFCG",79,0)
 N IBDVALM,VALMY,DIR,DIRUT,DUOUT
"RTN","IBDFCG",80,0)
 S VALMBCK=""
"RTN","IBDFCG",81,0)
 D EN^VALM2($G(XQORNOD(0))) G REP:'$O(VALMY(0)) S IBDVALM=0
"RTN","IBDFCG",82,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBDFCG",83,0)
 F IBDVALM=0:0 S IBDVALM=$O(VALMY(IBDVALM)) Q:'IBDVALM  S DA=^TMP("CGIDX",$J,IBDVALM),DA=$P(DA,"^",2) D
"RTN","IBDFCG",84,0)
 .I $O(^IBD(357.09,"ACG",DA,0)) W !!,"In use by parameter group, Not deleted",! D PAUSE^VALM1 Q
"RTN","IBDFCG",85,0)
 .W !!,"Clinic Group: "_$P($G(^IBD(357.99,DA,0)),"^",1)
"RTN","IBDFCG",86,0)
 .W ! S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are You Sure you want to delete "_$P($G(^IBD(357.99,DA,0)),"^",1)
"RTN","IBDFCG",87,0)
 .D ^DIR K DIR I Y'=1 W !,"Entry ",$P($G(^IBD(357.99,DA,0)),"^",1)," not Deleted!" Q
"RTN","IBDFCG",88,0)
 .D DP1
"RTN","IBDFCG",89,0)
 ;
"RTN","IBDFCG",90,0)
DELQ D INIT
"RTN","IBDFCG",91,0)
 S VALMBCK="R" Q
"RTN","IBDFCG",92,0)
 ;
"RTN","IBDFCG",93,0)
DP1 ; -- actual deletion
"RTN","IBDFCG",94,0)
 S DIK="^IBD(357.99," D ^DIK
"RTN","IBDFCG",95,0)
 W !,"Entry ",IBDVALM," Deleted"
"RTN","IBDFCG",96,0)
 Q
"RTN","IBDFCG",97,0)
 ;
"RTN","IBDFCG",98,0)
QE ; -- Quick edit Review entry
"RTN","IBDFCG",99,0)
 Q
"RTN","IBDFCG",100,0)
 ;
"RTN","IBDFCG",101,0)
MESS ; -- Message prior to editing a group
"RTN","IBDFCG",102,0)
 W !!,"Enter the clinics for this clinic group.  Enter as many Clinics as you want."
"RTN","IBDFCG",103,0)
 W !,"If you want all clinics for a division, do not enter any clinics but enter"
"RTN","IBDFCG",104,0)
 W !,"the division name at the Select Division: prompt."
"RTN","IBDFCG",105,0)
 Q
"RTN","IBDFCG",106,0)
 ;
"RTN","IBDFCG",107,0)
ADD1 ; -- Add/Edit Clinic Group
"RTN","IBDFCG",108,0)
 N DLAYGO
"RTN","IBDFCG",109,0)
 D FULL^VALM1
"RTN","IBDFCG",110,0)
 D MESS
"RTN","IBDFCG",111,0)
 W ! S DIC("A")="Select GROUP NAME: ",DIC="^IBD(357.99,",DIC(0)="AELQMN",DIC("DR")=".01",DLAYGO=357.99 D ^DIC K DIC G:Y<1 REP1 S DA=+Y
"RTN","IBDFCG",112,0)
 S DIE="^IBD(357.99,",DA=DA,DR="I $O(^IBD(357.99,DA,11,0)) S Y=""@99"";10;I $O(^IBD(357.99,DA,10,0)) S Y=""@999"";11;@999" D ^DIE K DA,DIE,DR G ADD1
"RTN","IBDFCG",113,0)
 ;
"RTN","IBDFCG",114,0)
 ;
"RTN","IBDFCG",115,0)
REP D INIT^IBDFPE S VALMBCK="R" Q
"RTN","IBDFCG",116,0)
 ;
"RTN","IBDFCG",117,0)
 ;
"RTN","IBDFCG",118,0)
REP1 D INIT^IBDFCG S VALMBCK="R" Q
"RTN","IBDFCG",119,0)
 ;
"RTN","IBDFCG",120,0)
 ;
"RTN","IBDFCG",121,0)
JUMP ; -- Jump action to display a specific clinic group on the screen.
"RTN","IBDFCG",122,0)
 D FULL^VALM1
"RTN","IBDFCG",123,0)
 I $D(XQORNOD(0)),$P(XQORNOD(0),"^",4)]"" S X=$P(XQORNOD(0),"^",4) S X=$P(X,"=",2) I X]"" D:X?1.6N JSEL S DIC="^IBD(357.99,",DIC(0)="QEZ" D ^DIC K DIC G:Y<0 JMP S Y=+Y D JUMP1 Q
"RTN","IBDFCG",124,0)
JMP S DIC="^IBD(357.99,",DIC(0)="AEMN",DIC("A")="Select Clinic Group you wish to move to: " D ^DIC K DIC
"RTN","IBDFCG",125,0)
 I X["^" S VALMBG=1,VALMBCK="R" Q
"RTN","IBDFCG",126,0)
JUMP1 I Y<0 G JUMP
"RTN","IBDFCG",127,0)
 N IBDFCAT
"RTN","IBDFCG",128,0)
 S IBDFCAT=$P(^IBD(357.99,+Y,0),"^",1)
"RTN","IBDFCG",129,0)
 I '$D(IBDFCG(IBDFCAT)) W !!,"There is no data listed for this Clinic Group" G JMP
"RTN","IBDFCG",130,0)
 S VALMBG=+IBDFCG(IBDFCAT) S VALMBCK="R" Q
"RTN","IBDFCG",131,0)
 Q
"RTN","IBDFCG",132,0)
 ;
"RTN","IBDFCG",133,0)
 ;
"RTN","IBDFCG",134,0)
JSEL ; -- Convert number selected to name
"RTN","IBDFCG",135,0)
 S IBDVALM=X I $D(^TMP("CGIDX",$J,IBDVALM)) S X=$P(^TMP("CGIDX",$J,IBDVALM),"^",2),X=$P(^IBD(357.99,X,0),"^",1)
"RTN","IBDFCG",136,0)
 Q
"RTN","IBDFCG",137,0)
 ;
"RTN","IBDFCG",138,0)
 ;
"RTN","IBDFCG",139,0)
HELP ; -- help code
"RTN","IBDFCG",140,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFCG",141,0)
 Q
"RTN","IBDFCG",142,0)
 ;
"RTN","IBDFCG",143,0)
 ;
"RTN","IBDFCG",144,0)
EXIT ; -- exit code
"RTN","IBDFCG",145,0)
 K IBDCLN,IBDCLN1,IBDFCG
"RTN","IBDFCG",146,0)
 K ^TMP("IBMF",$J)
"RTN","IBDFCG",147,0)
 Q
"RTN","IBDFCG",148,0)
 ;
"RTN","IBDFCG",149,0)
EXPND ; -- expand code
"RTN","IBDFCG",150,0)
 Q
"RTN","IBDFCG",151,0)
 ;
"RTN","IBDFCG",152,0)
NUL ; -- NULL MESSAGE
"RTN","IBDFCG",153,0)
 S ^TMP("IBDFCG",$J,1,0)=" ",^TMP("IBDFCG",$J,2,0)="There are no CLINIC GROUPS listed.",^TMP("CGIDX",$J,1)=1,^TMP("CGIDX",$J,2)=2
"RTN","IBDFCG",154,0)
 Q
"RTN","IBDFCG1")
0^159^B8806341
"RTN","IBDFCG1",1,0)
IBDFCG1 ;ALB/MAF - CONT. of Clinic Group Enter Edit Screen - 1 1 95
"RTN","IBDFCG1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFCG1",3,0)
 ;
"RTN","IBDFCG1",4,0)
 ;
"RTN","IBDFCG1",5,0)
CLIN ; -- Loop thru all clinics in the clinic group to list alphabetically
"RTN","IBDFCG1",6,0)
 F IBDCL=0:0 S IBDCL=$O(^IBD(357.99,IBDIFN,10,IBDCL)) Q:'IBDCL  I $D(^IBD(357.99,IBDIFN,10,+IBDCL,0)) S X=+^(0),^TMP("IBMF",$J,IBDIFN,"C",$P(^SC(X,0),"^",1),X)=$P(^SC(X,0),"^",1)
"RTN","IBDFCG1",7,0)
 Q
"RTN","IBDFCG1",8,0)
 ;
"RTN","IBDFCG1",9,0)
 ;
"RTN","IBDFCG1",10,0)
CLIN1 ;  -- Reset the clinic array
"RTN","IBDFCG1",11,0)
 S IBDCL=$O(^TMP("IBMF",$J,IBDIFN,"C",IBDCL)) S:IBDCL']"" IBDFCFLG=1 Q:IBDCL']""  S IBDFCIEN=$O(^TMP("IBMF",$J,IBDIFN,"C",IBDCL,0)) I IBDFCIEN S ^TMP("IBMF",$J,IBDIFN,IBDFX,"C",IBDFCIEN)=IBDCL
"RTN","IBDFCG1",12,0)
 Q
"RTN","IBDFCG1",13,0)
 ;
"RTN","IBDFCG1",14,0)
 ;
"RTN","IBDFCG1",15,0)
DIV ; -- Loop thru all the division that are in a clinic group to list alphabetically
"RTN","IBDFCG1",16,0)
 F IBDDV=0:0 S IBDDV=$O(^IBD(357.99,IBDIFN,11,IBDDV)) Q:'IBDDV  I $D(^IBD(357.99,IBDIFN,11,+IBDDV,0)) S X=+^(0),^TMP("IBMF",$J,IBDIFN,"D",$P(^DG(40.8,X,0),"^",1),X)=$P(^DG(40.8,X,0),"^",1)
"RTN","IBDFCG1",17,0)
 Q
"RTN","IBDFCG1",18,0)
 ;
"RTN","IBDFCG1",19,0)
 ;
"RTN","IBDFCG1",20,0)
DIV1 ;  -- Reset the division array
"RTN","IBDFCG1",21,0)
 S IBDDV=$O(^TMP("IBMF",$J,IBDIFN,"D",IBDDV)) S:IBDDV']"" IBDFDFLG=1 Q:IBDDV']""  S IBDFDIEN=$O(^TMP("IBMF",$J,IBDIFN,"D",IBDDV,0)) I IBDFDIEN S ^TMP("IBMF",$J,IBDIFN,IBDFX,"D",IBDFDIEN)=IBDDV
"RTN","IBDFCG1",22,0)
 Q
"RTN","IBDFCG1",23,0)
 ;
"RTN","IBDFCG1",24,0)
WILDCARD ; -- parse out a wild card
"RTN","IBDFCG1",25,0)
 W !,"ADDING CLINIC: ",X,!
"RTN","IBDFCG1",26,0)
 S X=$E(X,1,($L(X)-1))
"RTN","IBDFCG1",27,0)
 I X]"" D
"RTN","IBDFCG1",28,0)
 .N IBCLIN,IBDA,IBCLINIC
"RTN","IBDFCG1",29,0)
 .S IBCLIN=0
"RTN","IBDFCG1",30,0)
 .F IBCLINIC=0:0 S IBCLIN=$O(^SC("B",IBCLIN)) Q:IBCLIN']""  I X=$E(IBCLIN,1,$L(X)) D
"RTN","IBDFCG1",31,0)
 ..S IBDA=$O(^SC("B",IBCLIN,0)) I $D(^SC(IBDA,0)),'$D(^IBD(357.99,DA,10,"B",IBDA)) D
"RTN","IBDFCG1",32,0)
 ...S IB3=$S($P($G(^IBD(357.99,DA,10,0)),"^",3)]"":$P(^IBD(357.99,DA,10,0),"^",3)+1,1:1),IB4=$S($P($G(^IBD(357.99,DA,10,0)),"^",4)]"":$P(^IBD(357.99,DA,10,0),"^",4)+1,1:1)
"RTN","IBDFCG1",33,0)
 ...S ^IBD(357.99,DA,10,IB3,0)=IBDA,^IBD(357.99,DA,10,"B",IBDA,IB3)=""
"RTN","IBDFCG1",34,0)
 ...I $D(^IBD(357.99,DA,10,0)) S $P(^IBD(357.99,DA,10,0),"^",3)=IB3,$P(^IBD(357.99,DA,10,0),"^",4)=IB4
"RTN","IBDFCG1",35,0)
 ...I '$D(^IBD(357.99,DA,10,0)) S ^IBD(357.99,DA,10,0)="^357.9901PA^"_IB3_"^"_IB4
"RTN","IBDFCG1",36,0)
 ..;F IBDA=0:0 S IBDA=$O(^SC("B",IBCLIN,IBDA)) Q:'IBDA  I $G(^SC("B",IBCLIN,IBDA)) S ^IBD(357.99,D0,10,D1,0)=IBDA,^IBD(357.99,D0,10,"B",D1,0)=""
"RTN","IBDFCG1",37,0)
 ..Q
"RTN","IBDFCMP")
0^160^B28346911
"RTN","IBDFCMP",1,0)
IBDFCMP ;ALB/MAF - AICS list of components on a form ; 29-JUL-96
"RTN","IBDFCMP",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFCMP",3,0)
START K XQORS,VALMEVL D EN^VALM("IBDF FORM COMPONENTS")
"RTN","IBDFCMP",4,0)
 Q
"RTN","IBDFCMP",5,0)
INIT ;
"RTN","IBDFCMP",6,0)
% N I,J,X,Y,DIR,DIRUT,DTOUT,DUOUT,IBDF,IBDPAG,IBDPDT,IBDOJB,IBQUIT,QLFR,RULE,IBDFALL
"RTN","IBDFCMP",7,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFCMP",8,0)
 D HOME^%ZIS
"RTN","IBDFCMP",9,0)
 W !!,"Display Form Components",!!
"RTN","IBDFCMP",10,0)
 ;
"RTN","IBDFCMP",11,0)
 ; -- ask for form id
"RTN","IBDFCMP",12,0)
 D END
"RTN","IBDFCMP",13,0)
 S DIR("?")="Enter the Encounter Form Name you want to review."
"RTN","IBDFCMP",14,0)
 S DIR(0)="PO^357:AEQM",DIR("A")="Select Encounter Form" D ^DIR K DIR,DA,DR,DIC
"RTN","IBDFCMP",15,0)
 I $D(DIRUT) S VALMBCK="Q",VALMQUIT=1 Q
"RTN","IBDFCMP",16,0)
 S IBDFIFN=+Y
"RTN","IBDFCMP",17,0)
INIT1 S IBDCNT1=0,IBDCNT=0,VALMCNT=0
"RTN","IBDFCMP",18,0)
 D DQ
"RTN","IBDFCMP",19,0)
 ;
"RTN","IBDFCMP",20,0)
STRTQ G:$G(IBQUIT) END ;D PAUSE^IBDFDE
"RTN","IBDFCMP",21,0)
 Q
"RTN","IBDFCMP",22,0)
 ;
"RTN","IBDFCMP",23,0)
DQ ; -- entry point to list contents of one form,  
"RTN","IBDFCMP",24,0)
 ;    Input IBDFIFN := pointer to Encounter Form (357)
"RTN","IBDFCMP",25,0)
 ;
"RTN","IBDFCMP",26,0)
 S IBQUIT=0
"RTN","IBDFCMP",27,0)
 I '$D(^TMP("FORM-OBJ",$J,IBDFIFN,0)) S IBDFALL=1 D FRMLSTI^IBDFRPC(.IBDOBJ,IBDFIFN,"",1,IBDFALL) M ^TMP("FORM-OBJ",$J,IBDFIFN)=IBDOBJ K IBDOBJ
"RTN","IBDFCMP",28,0)
 I $D(^TMP("FORM-OBJ",$J,IBDFIFN,0)),^TMP("FORM-OBJ",$J,IBDFIFN,0)'>0 D NUL Q
"RTN","IBDFCMP",29,0)
 D LISTOB
"RTN","IBDFCMP",30,0)
 Q
"RTN","IBDFCMP",31,0)
 ;
"RTN","IBDFCMP",32,0)
LISTOB ; -- list items available for input on a form
"RTN","IBDFCMP",33,0)
 N IBDFOLDB
"RTN","IBDFCMP",34,0)
 S IBDFOLDB=0
"RTN","IBDFCMP",35,0)
 S I=0 F  S I=$O(^TMP("FORM-OBJ",$J,IBDFIFN,I)) Q:I=""!(IBQUIT)  D
"RTN","IBDFCMP",36,0)
 .S IBDOBJ=$G(^TMP("FORM-OBJ",$J,IBDFIFN,I))
"RTN","IBDFCMP",37,0)
 .S IBDF("PI")=+$P(IBDOBJ,"^",2),IBDF("TYPE")=$P(IBDOBJ,"^",5)
"RTN","IBDFCMP",38,0)
 .S IBDF("IEN")=+$P(IBDOBJ,"^",6),IBDF("VITAL")=$P(IBDOBJ,"^",7)
"RTN","IBDFCMP",39,0)
 .S IBDF("BROW")=+$P(IBDOBJ,"^",10)+1,IBDF("BCOL")=+$P(IBDOBJ,"^",11)+1
"RTN","IBDFCMP",40,0)
 .S IBDF("BLK")=+$P(IBDOBJ,"^",9),IBDF("BNAME")=$P($G(^IBE(357.1,IBDF("BLK"),0)),"^"),IBDF("BNODE")=$G(^IBE(357.1,IBDF("BLK"),0))
"RTN","IBDFCMP",41,0)
 .S IBDF("HT")=$P(IBDF("BNODE"),"^",7)
"RTN","IBDFCMP",42,0)
 .S IBDF("WDTH")=$P(IBDF("BNODE"),"^",6)
"RTN","IBDFCMP",43,0)
 .S IBDF("TKO")=$P(IBDF("BNODE"),"^",14)
"RTN","IBDFCMP",44,0)
 .I IBDFOLDB'=$P(IBDOBJ,"^",9) S IBDFFLAG=0
"RTN","IBDFCMP",45,0)
 .I 'IBDFFLAG D
"RTN","IBDFCMP",46,0)
 ..S X=""
"RTN","IBDFCMP",47,0)
 ..S IBDFFLAG=1,IBDFOLDB=$P(IBDOBJ,"^",9)
"RTN","IBDFCMP",48,0)
 ..S IBDCNT1=IBDCNT1+1
"RTN","IBDFCMP",49,0)
 ..S X=$$SETSTR^VALM1(X,X,1,80) D TMP
"RTN","IBDFCMP",50,0)
 ..S X=""
"RTN","IBDFCMP",51,0)
 ..S IBDVAL=IBDCNT1_") "
"RTN","IBDFCMP",52,0)
 ..S X=$$SETSTR^VALM1(IBDVAL,X,1,4)
"RTN","IBDFCMP",53,0)
 ..S X=$$SETSTR^VALM1($P(IBDF("BNAME"),"^",1),X,5,40) D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFCMP",54,0)
 ..S IBBLOCK(IBDCNT1)=IBDFIFN_"^"_IBDCNT_"^"_IBDOBJ
"RTN","IBDFCMP",55,0)
 ..S X="",X=$$SETSTR^VALM1($$LOWER^VALM1("  STARTING ROW: "),X,1,16)
"RTN","IBDFCMP",56,0)
 ..S IBDVAL=$S(IBDF("BROW"):IBDF("BROW"),1:"")
"RTN","IBDFCMP",57,0)
 ..S X=$$SETSTR^VALM1($J(IBDVAL,3),X,17,3)
"RTN","IBDFCMP",58,0)
 ..S X=$$SETSTR^VALM1($$LOWER^VALM1("STARTING COLUMN: "),X,49,17)
"RTN","IBDFCMP",59,0)
 ..S IBDVAL=$S(IBDF("BCOL"):IBDF("BCOL"),1:"")
"RTN","IBDFCMP",60,0)
 ..S X=$$SETSTR^VALM1($J(IBDVAL,3),X,66,3) D TMP
"RTN","IBDFCMP",61,0)
 ..S X="",X=$$SETSTR^VALM1($$LOWER^VALM1("   BLOCK WIDTH: "),X,1,16)
"RTN","IBDFCMP",62,0)
 ..S IBDVAL=$S(IBDF("WDTH"):IBDF("WDTH"),1:"")
"RTN","IBDFCMP",63,0)
 ..S X=$$SETSTR^VALM1($J(IBDVAL,3),X,17,3)
"RTN","IBDFCMP",64,0)
 ..S X=$$SETSTR^VALM1($$LOWER^VALM1("   BLOCK HEIGHT: "),X,49,17)
"RTN","IBDFCMP",65,0)
 ..S IBDVAL=$S(IBDF("HT"):IBDF("HT"),1:"")
"RTN","IBDFCMP",66,0)
 ..S X=$$SETSTR^VALM1($J(IBDVAL,3),X,66,3) D TMP
"RTN","IBDFCMP",67,0)
 Q
"RTN","IBDFCMP",68,0)
TMP ; -- Set up Array
"RTN","IBDFCMP",69,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFCMP",70,0)
 S ^TMP("FORMOBJ",$J,IBDCNT,0)=X,^TMP("FORMOBJ",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFCMP",71,0)
 S ^TMP("FORMIDX",$J,IBDCNT)=VALMCNT_"^"_IBDFIFN_"^"_IBDF("BLK")
"RTN","IBDFCMP",72,0)
 Q
"RTN","IBDFCMP",73,0)
 ;
"RTN","IBDFCMP",74,0)
 ;
"RTN","IBDFCMP",75,0)
HELP ; -- help code
"RTN","IBDFCMP",76,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFCMP",77,0)
 Q
"RTN","IBDFCMP",78,0)
 ;
"RTN","IBDFCMP",79,0)
 ;
"RTN","IBDFCMP",80,0)
EXIT ; -- exit code
"RTN","IBDFCMP",81,0)
 K IBDCAT,IBDNME,IBDTYPE,VALMCNT,IBDCNT,IBDCNT1,IBDNAME,IBDNUM,IBDNME,IBDFIFN,IBDVAL,IBDNODE,IBFASTXT,IBDF,IBBLOCK,IBDFNODE,IBDFSNOD,IBDFOBJ,IBDOBJ1,IBQUIT,IBDFFLAG,IBDOBJ
"RTN","IBDFCMP",82,0)
 K ^TMP("FORM-OBJ",$J),^TMP("FORMIDX",$J),^TMP("FORMOBJ",$J)
"RTN","IBDFCMP",83,0)
 Q
"RTN","IBDFCMP",84,0)
 ;
"RTN","IBDFCMP",85,0)
NUL ; -- NULL MESSAGE
"RTN","IBDFCMP",86,0)
 S ^TMP("FORMOBJ",$J,1,0)=" ",^TMP("FORMOBJ",$J,2,0)="There are no Components listed for this form.",^TMP("FORMIDX",$J,1)=1,^TMP("FORMIDX",$J,2)=2
"RTN","IBDFCMP",87,0)
 Q
"RTN","IBDFCMP",88,0)
 ;
"RTN","IBDFCMP",89,0)
HDR ; -- print patient header
"RTN","IBDFCMP",90,0)
 ;Q:'$D(IBDFIFN)
"RTN","IBDFCMP",91,0)
 S X="     Form Name: "_$E($P($G(^IBE(357,+IBDFIFN,0)),"^"),1,25)
"RTN","IBDFCMP",92,0)
 S IBDVAL="FORM ID #: "_$S(+$P($G(^IBE(357,+IBDFIFN,0)),"^",13):$P(^IBE(357,+IBDFIFN,0),"^",13),1:"")
"RTN","IBDFCMP",93,0)
 S VALMHDR(1)=$$SETSTR^VALM1(IBDVAL,X,55,25)
"RTN","IBDFCMP",94,0)
 S X="        Status: "_$S(+$P($G(^IBE(357,+IBDFIFN,0)),"^",5):"Compiled",1:"Uncompiled")
"RTN","IBDFCMP",95,0)
 S IBDVAL="  Toolkit: "_$S(+$P($G(^IBE(357,+IBDFIFN,0)),"^",7):"Yes",1:"No")
"RTN","IBDFCMP",96,0)
 S VALMHDR(2)=$$SETSTR^VALM1(IBDVAL,X,55,25)
"RTN","IBDFCMP",97,0)
 S X="     Scannable: "_$S(+$P($G(^IBE(357,+IBDFIFN,0)),"^",12):"Yes",1:"No")
"RTN","IBDFCMP",98,0)
 S IBDVAL="  Use ICR: "_$S(+$P($G(^IBE(357,+IBDFIFN,0)),"^",6):"Yes",1:"No")
"RTN","IBDFCMP",99,0)
 S VALMHDR(3)=$$SETSTR^VALM1(IBDVAL,X,55,25)
"RTN","IBDFCMP",100,0)
 S X=+$P($G(^IBE(357,+IBDFIFN,0)),"^",2)
"RTN","IBDFCMP",101,0)
 S X="Simplex/Duplex: "_$S(X]""&(X=0):"Simplex",X]""&(X=1):"Duplex Long-Edge",X]""&(X=2):"Duplex Short-Edge",1:"")
"RTN","IBDFCMP",102,0)
 S IBDVAL="  # Pages: "_$S(+$P($G(^IBE(357,+IBDFIFN,0)),"^",11):+$P($G(^IBE(357,+IBDFIFN,0)),"^",11),1:"0")
"RTN","IBDFCMP",103,0)
 S VALMHDR(4)=$$SETSTR^VALM1(IBDVAL,X,55,25)
"RTN","IBDFCMP",104,0)
 Q
"RTN","IBDFCMP",105,0)
 ;
"RTN","IBDFCMP",106,0)
END I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBDFCMP",107,0)
 K I,J,X,Y,DA,DR,DIC,DIE,DIR,DTOUT,DUOUT,DIRUT,IBDSEL,CHOICE,TEXT,TEXTU,RESULT,IBDPI,IBDCO,IBDF,IBDPAG,ZTSK,IBDFIFN
"RTN","IBDFCMP",108,0)
 K ^TMP("FORMIDX",$J),^TMP("FORM-OBJ",$J),^TMP("FORMOBJ",$J)
"RTN","IBDFCMP",109,0)
 D ^%ZISC
"RTN","IBDFCMP",110,0)
 Q
"RTN","IBDFCMP",111,0)
 ;
"RTN","IBDFCMP",112,0)
EXP ;  -- Expand Action
"RTN","IBDFCMP",113,0)
 D FULL^VALM1
"RTN","IBDFCMP",114,0)
 N VALMI,VALMAT,VALMY
"RTN","IBDFCMP",115,0)
 D EN^VALM2(XQORNOD(0),"O") S VALMI=0
"RTN","IBDFCMP",116,0)
 F  S VALMI=$O(VALMY(VALMI)) Q:'VALMI  D
"RTN","IBDFCMP",117,0)
 .S VALMAT=$G(IBBLOCK(VALMI))
"RTN","IBDFCMP",118,0)
 .W !
"RTN","IBDFCMP",119,0)
 .I DUZ(0)="@" W !,"Entry No. ",+$P(VALMAT,"^",11)
"RTN","IBDFCMP",120,0)
 .S DA=+$P(VALMAT,U,11),DIC="^IBE(357.1,",DR="0" D EN^DIQ,PAUSE^VALM1
"RTN","IBDFCMP",121,0)
 .K DA,DIC,DR
"RTN","IBDFCMP",122,0)
 S VALMBCK="R"
"RTN","IBDFCMP",123,0)
 Q
"RTN","IBDFCMP1")
0^161^B28951214
"RTN","IBDFCMP1",1,0)
IBDFCMP1 ;ALB/MAF - AICS list of components on a form (cont.); 29-JUL-96
"RTN","IBDFCMP1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFCMP1",3,0)
 ;
"RTN","IBDFCMP1",4,0)
 ;
"RTN","IBDFCMP1",5,0)
EXP ;EXPAND
"RTN","IBDFCMP1",6,0)
 ; -- expand action
"RTN","IBDFCMP1",7,0)
 N IBI,IBAT,VALMY,IBDVALM
"RTN","IBDFCMP1",8,0)
 S (IBDCNT,IBDCNT1,VALMCNT)=0
"RTN","IBDFCMP1",9,0)
 N IBDVALM,IBDAT,VALMY
"RTN","IBDFCMP1",10,0)
 S VALMBCK=""
"RTN","IBDFCMP1",11,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBDFCMP1",12,0)
 D EN^VALM2($G(XQORNOD(0))) G REP:'$O(VALMY(0))  S IBDVALM=0
"RTN","IBDFCMP1",13,0)
 F IBDVALM=0:0 S IBDVALM=$O(VALMY(IBDVALM)) Q:'IBDVALM  S IBDOBJ=$G(IBBLOCK(IBDVALM)) S (IBDCNT,IBDCNT1,VALMCNT)=0 D EN^VALM("IBDF COMPONENT EXPAND")
"RTN","IBDFCMP1",14,0)
 G REP
"RTN","IBDFCMP1",15,0)
 ;
"RTN","IBDFCMP1",16,0)
 ;
"RTN","IBDFCMP1",17,0)
INIT  K ^TMP("FORMEXP",$J),^TMP("EXPIDX") D
"RTN","IBDFCMP1",18,0)
 .S IBDFIFN=$P(IBDOBJ,"^")
"RTN","IBDFCMP1",19,0)
 .F IBDNUM=0:0 S IBDNUM=$O(^TMP("FORM-OBJ",$J,IBDFIFN,IBDNUM)) Q:'IBDNUM   I $P(IBDOBJ,"^",11)=$P($G(^TMP("FORM-OBJ",$J,IBDFIFN,IBDNUM)),"^",9) D
"RTN","IBDFCMP1",20,0)
 ..N IBDFSC,IBDFNUM,IBDFSEL,IBDFHP,IBDFMC,IBDFROW,IBDFCOL
"RTN","IBDFCMP1",21,0)
 ..S (IBDFSC,IBDFNUM)=0
"RTN","IBDFCMP1",22,0)
 ..S IBDOBJ1=$G(^TMP("FORM-OBJ",$J,IBDFIFN,IBDNUM))
"RTN","IBDFCMP1",23,0)
 ..S IBDF("PI")=+$P(IBDOBJ1,"^",2),IBDF("TYPE")=$P(IBDOBJ1,"^",5)
"RTN","IBDFCMP1",24,0)
 ..S IBDF("IEN")=+$P(IBDOBJ1,"^",6),IBDF("VITAL")=$P(IBDOBJ1,"^",7)
"RTN","IBDFCMP1",25,0)
 ..I $P(IBDOBJ1,"^",5)="LIST" D  ;SELECTION LIST
"RTN","IBDFCMP1",26,0)
 ...S IBDFSEL=$P(^IBE(357.2,$P(IBDOBJ1,"^",6),0),"^")
"RTN","IBDFCMP1",27,0)
 ...S IBDFSNOD=$O(^IBE(357.2,$P(IBDOBJ1,"^",6),1,0)) S IBDFNODE=$G(^IBE(357.2,$P(IBDOBJ1,"^",6),1,+IBDFSNOD,0)) S IBDFSEL=IBDFSEL_"^"_$P(IBDFNODE,"^",4)_"^"_$P(IBDFNODE,"^",3) S IBDFROW=4,IBDFCOL=5 D SETUP(IBDFSEL,IBDFROW,IBDFCOL)
"RTN","IBDFCMP1",28,0)
 ...F  S IBDFSC=$O(^IBE(357.2,IBDF("IEN"),2,"B",IBDFSC)) Q:'IBDFSC  F  S IBDFNUM=$O(^IBE(357.2,IBDF("IEN"),2,"B",IBDFSC,IBDFNUM)) Q:'IBDFNUM  S IBDFSEL=$G(^IBE(357.2,IBDF("IEN"),2,IBDFNUM,0)) D SETUP1(IBDFSEL)
"RTN","IBDFCMP1",29,0)
 ..I $P(IBDOBJ1,"^",5)="MC" D  ;MULTIPLE CHOICE
"RTN","IBDFCMP1",30,0)
 ...S IBDFMC=$G(^IBE(357.93,IBDF("IEN"),0)) S IBDFROW=4,IBDFCOL=3 D SETUP(IBDFMC,IBDFROW,IBDFCOL)
"RTN","IBDFCMP1",31,0)
 ..I $P(IBDOBJ1,"^",5)="HP" D  ;HAND PRINT FIELD
"RTN","IBDFCMP1",32,0)
 ...S IBDFHP=$G(^IBE(359.94,IBDF("IEN"),0)) S IBDFROW=4,IBDFCOL=3 D SETUP(IBDFHP,IBDFROW,IBDFCOL)
"RTN","IBDFCMP1",33,0)
 ..I $P(IBDOBJ1,"^",5)="DF" D  ;DATA FIELDS
"RTN","IBDFCMP1",34,0)
 ...S IBDFDF=$G(^IBE(357.5,IBDF("IEN"),0)) S IBDFROW=11,IBDFCOL=10 D SETUP(IBDFDF,IBDFROW,IBDFCOL)
"RTN","IBDFCMP1",35,0)
 ..I $P(IBDOBJ1,"^",5)="FL" D  ;FORM LINE
"RTN","IBDFCMP1",36,0)
 ...S IBDFFL=$G(^IBE(357.7,IBDF("IEN"),0)) S IBDFROW=3,IBDFCOL=2 D SETUP(IBDFFL,IBDFROW,IBDFCOL)
"RTN","IBDFCMP1",37,0)
 ..I $P(IBDOBJ1,"^",5)="TA" D  ;TEXT AREA
"RTN","IBDFCMP1",38,0)
 ...S IBDFTA=$G(^IBE(357.8,IBDF("IEN"),0)) S IBDFROW=4,IBDFCOL=3 D SETUP(IBDFTA,IBDFROW,IBDFCOL)
"RTN","IBDFCMP1",39,0)
 Q
"RTN","IBDFCMP1",40,0)
 ;
"RTN","IBDFCMP1",41,0)
 ;
"RTN","IBDFCMP1",42,0)
REP ;  -- Redisplay initial screen
"RTN","IBDFCMP1",43,0)
 S IBDFIFN=$S('$D(IBDFIFN):+$P(IBDOBJ,"^"),1:IBDFIFN) D INIT1^IBDFCMP S VALMBCK="R" Q
"RTN","IBDFCMP1",44,0)
 Q
"RTN","IBDFCMP1",45,0)
 ;
"RTN","IBDFCMP1",46,0)
 ;
"RTN","IBDFCMP1",47,0)
SETUP(IBOBJECT,IBROW,IBCOL) ;  -- Setting up the data for list manager
"RTN","IBDFCMP1",48,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFCMP1",49,0)
 S X=""
"RTN","IBDFCMP1",50,0)
 S X=$$SETSTR^VALM1(X,X,1,80) D TMP
"RTN","IBDFCMP1",51,0)
 S X="",X=$P(IBOBJECT,"^")
"RTN","IBDFCMP1",52,0)
 S X=$$SETSTR^VALM1(X,X,1,25)
"RTN","IBDFCMP1",53,0)
 S IBDVAL=$S($P(IBDOBJ1,"^",5)]"":$P(IBDOBJ1,"^",5),1:"")
"RTN","IBDFCMP1",54,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,30,10)
"RTN","IBDFCMP1",55,0)
 S IBDVAL=$S($P(IBOBJECT,"^",IBROW):$P(IBOBJECT,"^",IBROW)+1,$P(IBOBJECT,"^",IBROW)=0:1,1:"N/A")
"RTN","IBDFCMP1",56,0)
 S X=$$SETSTR^VALM1($J(IBDVAL,3),X,48,6)
"RTN","IBDFCMP1",57,0)
 S IBDVAL=$S($P(IBOBJECT,"^",IBCOL):$P(IBOBJECT,"^",IBCOL)+1,$P(IBOBJECT,"^",IBCOL)=0:1,1:"N/A")
"RTN","IBDFCMP1",58,0)
 S X=$$SETSTR^VALM1($J(IBDVAL,4),X,58,5)
"RTN","IBDFCMP1",59,0)
 ;D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFCMP1",60,0)
 I X]"",$P(IBDOBJ1,"^",5)="LIST" D
"RTN","IBDFCMP1",61,0)
 .S IBDVAL=$S($P(^IBE(357.2,IBDF("IEN"),0),"^",7):$P(^IBE(357.2,IBDF("IEN"),0),"^",7),1:"N/A")
"RTN","IBDFCMP1",62,0)
 .S IBDVAL=$J($S(IBDVAL=1:"1 Space",IBDVAL=2:"2 Spaces",IBDVAL=3:"LINE",IBDVAL=4:"Sp/Ln/Sp",1:"N/A"),9)
"RTN","IBDFCMP1",63,0)
 .S X=$$SETSTR^VALM1(IBDVAL,X,71,9)
"RTN","IBDFCMP1",64,0)
 .D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFCMP1",65,0)
 .S X="",X=$$SETSTR^VALM1(X,X,1,80) D TMP
"RTN","IBDFCMP1",66,0)
 .S IBDVAL="   "_"Subcolumn"_"    "_"Type"_"          "_"Data"_"    "_"Width"_"     "_"Qualifier"_"       "_"Rule"_"       "_"Edit"
"RTN","IBDFCMP1",67,0)
 .S X="",X=$$SETSTR^VALM1(IBDVAL,X,1,80) D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFCMP1",68,0)
 I $P(IBDOBJ1,"^",5)'="LIST" D
"RTN","IBDFCMP1",69,0)
 .D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFCMP1",70,0)
 Q
"RTN","IBDFCMP1",71,0)
SETUP1(IBOBJECT) ;  -- Setup of the subcolumn info for the Selection list
"RTN","IBDFCMP1",72,0)
 S X=""
"RTN","IBDFCMP1",73,0)
 S X=$$SETSTR^VALM1($P(IBOBJECT,"^"),X,8,2)
"RTN","IBDFCMP1",74,0)
 S IBDVAL=$S($P(IBOBJECT,"^",4)]"":$P(IBOBJECT,"^",4),1:"")
"RTN","IBDFCMP1",75,0)
 S IBDVAL=$J($$LOWER^VALM1($S(IBDVAL=1:"TEXT",IBDVAL=2:"MARKING",1:"")),10)
"RTN","IBDFCMP1",76,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,11,10)
"RTN","IBDFCMP1",77,0)
 S IBDVAL=$S($P(IBOBJECT,"^",5):$P(IBOBJECT,"^",5),1:"")
"RTN","IBDFCMP1",78,0)
 S IBDVAL=$J($$LOWER^VALM1($S(IBDVAL=1:"CODE",IBDVAL=2:"SHORT NAME",IBDVAL=3:"DESCRIP.",1:"N/A")),10)
"RTN","IBDFCMP1",79,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,25,10)
"RTN","IBDFCMP1",80,0)
 S IBDVAL=$S($P(IBOBJECT,"^",3)]"":$P(IBOBJECT,"^",3),1:"")
"RTN","IBDFCMP1",81,0)
 S X=$$SETSTR^VALM1($J(IBDVAL,3),X,40,3)
"RTN","IBDFCMP1",82,0)
 S IBDVAL=$S($P(IBOBJECT,"^",3)]"":$P(IBOBJECT,"^",3),1:"")
"RTN","IBDFCMP1",83,0)
 S IBDVAL=$S($P(IBOBJECT,"^",9):$P(IBOBJECT,"^",9),1:"")
"RTN","IBDFCMP1",84,0)
 S IBDVAL=$P($G(^IBD(357.98,+IBDVAL,0)),"^",3)
"RTN","IBDFCMP1",85,0)
 S IBDVAL=$J($$LOWER^VALM1($S(IBDVAL]"":IBDVAL,1:"N/A")),10)
"RTN","IBDFCMP1",86,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,47,10)
"RTN","IBDFCMP1",87,0)
 S IBDVAL=$S($P(IBOBJECT,"^",10):$P(IBOBJECT,"^",10),1:"")
"RTN","IBDFCMP1",88,0)
 S IBDVAL=$J($$LOWER^VALM1($S(IBDVAL=0:"ANY NUMBER",IBDVAL=1:"ONLY 1",IBDVAL=2:"AT MOST 1",IBDVAL=3:"AT LEAST 1",1:"N/A")),10)
"RTN","IBDFCMP1",89,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,59,10)
"RTN","IBDFCMP1",90,0)
 ;I $P(IBDOBJ1,"^",5)="LIST" D
"RTN","IBDFCMP1",91,0)
 ;S IBDVAL=$S($P(^IBE(357.2,IBDF("IEN"),0),"^",7):$P(^IBE(357.2,IBDF("IEN"),0),"^",7),1:"N/A")
"RTN","IBDFCMP1",92,0)
 ;S IBDVAL=$S(IBDVAL=1:"1 S",IBDVAL=2:"2 S",IBDVAL=3:"LIN",IBDVAL=4:"SLS",1:"N/A")
"RTN","IBDFCMP1",93,0)
 S IBDVAL=$S($P(IBOBJECT,"^",7)=1:"Yes",1:"No")
"RTN","IBDFCMP1",94,0)
 S X=$$SETSTR^VALM1($J(IBDVAL,3),X,77,3)
"RTN","IBDFCMP1",95,0)
 D TMP
"RTN","IBDFCMP1",96,0)
 Q
"RTN","IBDFCMP1",97,0)
 ;
"RTN","IBDFCMP1",98,0)
 ;
"RTN","IBDFCMP1",99,0)
TMP ; -- Set up Array
"RTN","IBDFCMP1",100,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFCMP1",101,0)
 S ^TMP("FORMEXP",$J,IBDCNT,0)=X,^TMP("FORMEXP",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFCMP1",102,0)
 S ^TMP("EXPIDX",$J,IBDCNT)=VALMCNT ;_"^"_IBDFIFN_"^"_IBDF("BLK")
"RTN","IBDFCMP1",103,0)
 Q
"RTN","IBDFCMP1",104,0)
 ;
"RTN","IBDFCMP1",105,0)
 ;
"RTN","IBDFCMP1",106,0)
HDR ; -- print patient header
"RTN","IBDFCMP1",107,0)
 S X=""
"RTN","IBDFCMP1",108,0)
 S X="      Form Name: "_$E($P($G(^IBE(357,IBDFIFN,0)),"^"),1,25)
"RTN","IBDFCMP1",109,0)
 S VALMHDR(1)=X
"RTN","IBDFCMP1",110,0)
 S X="     Block Name: "_$E($P($G(^IBE(357.1,+$P(IBDOBJ,"^",11),0)),"^"),1,25)
"RTN","IBDFCMP1",111,0)
 S VALMHDR(2)=X
"RTN","IBDFCMP1",112,0)
 Q
"RTN","IBDFCMP1",113,0)
 ;
"RTN","IBDFCMP1",114,0)
 ;
"RTN","IBDFCMP1",115,0)
EXIT ;  -- Exit code
"RTN","IBDFCMP1",116,0)
 K ^TMP("FORMEXP",$J),^TMP("EXPIDX")
"RTN","IBDFCMP1",117,0)
 Q
"RTN","IBDFCMP1",118,0)
HELP ; -- help code
"RTN","IBDFCMP1",119,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFCMP1",120,0)
 Q
"RTN","IBDFCNOF")
0^162^B22813864
"RTN","IBDFCNOF",1,0)
IBDFCNOF ;ALB/CJM - AICS clinics with no forms ; JUL 20,1993
"RTN","IBDFCNOF",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFCNOF",3,0)
 ;
"RTN","IBDFCNOF",4,0)
% ; -- list of clinics that have no encounter forms in use.
"RTN","IBDFCNOF",5,0)
 ;
"RTN","IBDFCNOF",6,0)
 N C,X,Y,SERV,SERVICE,CLINIC,IBHDT,IBDFIFN,IBDCNO,IBDFCNO,IBDFNODE,PAGE,IBQUIT,DIVIS,DIVNAM,VAUTD,MULTI
"RTN","IBDFCNOF",7,0)
 W !!,"AICS List of Clinics with No Encounter Form in Use",!!
"RTN","IBDFCNOF",8,0)
 S IBQUIT=0
"RTN","IBDFCNOF",9,0)
 D DIVIS G:IBQUIT EXIT
"RTN","IBDFCNOF",10,0)
 D DEVICE G:IBQUIT EXIT
"RTN","IBDFCNOF",11,0)
 D DQ
"RTN","IBDFCNOF",12,0)
 Q
"RTN","IBDFCNOF",13,0)
 ;
"RTN","IBDFCNOF",14,0)
EXIT ; -- end of report
"RTN","IBDFCNOF",15,0)
 K ^TMP($J,"IBDCN")
"RTN","IBDFCNOF",16,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBDFCNOF",17,0)
 D ^%ZISC
"RTN","IBDFCNOF",18,0)
 K ZTSK,ZTDESC,ZTSAVE,ZTRTN
"RTN","IBDFCNOF",19,0)
 Q
"RTN","IBDFCNOF",20,0)
 ;
"RTN","IBDFCNOF",21,0)
DQ ; -- entry point from taskmanager
"RTN","IBDFCNOF",22,0)
 K ^TMP($J,"IBDCN")
"RTN","IBDFCNOF",23,0)
 S IBQUIT=0,PAGE=1
"RTN","IBDFCNOF",24,0)
 S IBHDT=$$HTE^XLFDT($H,1)
"RTN","IBDFCNOF",25,0)
 D SET,LIST G EXIT
"RTN","IBDFCNOF",26,0)
 Q
"RTN","IBDFCNOF",27,0)
 ;
"RTN","IBDFCNOF",28,0)
SET ; -- build list into temporary array
"RTN","IBDFCNOF",29,0)
 N IBDFCL,DIVIS,DIVNAM,SERVICE,CLINNAM,IBDFNODE,IBQUIT
"RTN","IBDFCNOF",30,0)
 F IBDFIFN=0:0 S IBDFIFN=$O(^SC(IBDFIFN)) Q:'IBDFIFN  S IBDCNO=$G(^SC(IBDFIFN,0)) I $P(IBDCNO,"^",3)="C" D
"RTN","IBDFCNOF",31,0)
 .S DIVIS=+$P(IBDCNO,"^",15) I DIVIS=0 S DIVIS=$S(MULTI=0:$P($G(^DG(43,1,"GL")),"^",3),1:"Unknown")
"RTN","IBDFCNOF",32,0)
 .S DIVNAM=$P($G(^DG(40.8,+DIVIS,0)),"^") S:DIVNAM="" DIVNAM="Unknown"
"RTN","IBDFCNOF",33,0)
 .S CLINNAM=$P(IBDCNO,"^")
"RTN","IBDFCNOF",34,0)
 .S Y=$P(IBDCNO,"^",8),C=$P(^DD(44,9,0),"^",2) D Y^DIQ S SERVICE=Y S:SERVICE="" SERVICE="Unknown"
"RTN","IBDFCNOF",35,0)
 .I $O(^SD(409.95,"B",IBDFIFN,0)) D  ; else follows
"RTN","IBDFCNOF",36,0)
 ..S IBDFCL=$O(^SD(409.95,"B",IBDFIFN,0))
"RTN","IBDFCNOF",37,0)
 ..S IBDFNODE=^SD(409.95,IBDFCL,0)
"RTN","IBDFCNOF",38,0)
 ..S IBQUIT=0 F X=2:1:9 S:$P(IBDFNODE,"^",X)&("^1^2^3^4^5^6^8^9^"[X) IBQUIT=1 Q:IBQUIT
"RTN","IBDFCNOF",39,0)
 ..I 'IBQUIT S ^TMP($J,"IBDCN",DIVIS,DIVNAM,SERVICE,CLINNAM)=IBDFIFN_"^"_$S($P(IBDFNODE,"^",7)]"":"FORM IN PROGRESS",1:"") S ^TMP($J,"IBDCN",DIVIS,0)=$G(^TMP($J,"IBDCN",DIVIS,0))+1
"RTN","IBDFCNOF",40,0)
 .I '$O(^SD(409.95,"B",IBDFIFN,0)) S ^TMP($J,"IBDCN",DIVIS,DIVNAM,SERVICE,CLINNAM)=IBDFIFN,^TMP($J,"IBDCN",DIVIS,0)=$G(^TMP($J,"IBDCN",DIVIS,0))+1
"RTN","IBDFCNOF",41,0)
 Q
"RTN","IBDFCNOF",42,0)
 ;
"RTN","IBDFCNOF",43,0)
HEADER ; -- writes the report header
"RTN","IBDFCNOF",44,0)
 I $E(IOST,1,2)="C-",$Y>1,PAGE>1 D PAUSE Q:IBQUIT
"RTN","IBDFCNOF",45,0)
 I PAGE>1 W @IOF
"RTN","IBDFCNOF",46,0)
 W !,"List of Clinics Without Encounter Forms",?IOM-32,IBHDT,"   PAGE ",PAGE
"RTN","IBDFCNOF",47,0)
 W !,"For Division: ",DIVNAM
"RTN","IBDFCNOF",48,0)
 ;W !,"CLINICS",?27,"SERVICE",?47,"DIVISION"
"RTN","IBDFCNOF",49,0)
 W !,"CLINICS",?27,"SERVICE",?47,"COMMENT"
"RTN","IBDFCNOF",50,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBDFCNOF",51,0)
 S PAGE=PAGE+1
"RTN","IBDFCNOF",52,0)
 Q
"RTN","IBDFCNOF",53,0)
 ;
"RTN","IBDFCNOF",54,0)
PAUSE ; -- hold crt screen
"RTN","IBDFCNOF",55,0)
 N DIR,X,Y
"RTN","IBDFCNOF",56,0)
 F  Q:$Y>(IOSL-2)  W !
"RTN","IBDFCNOF",57,0)
 S DIR(0)="E" D ^DIR S IBQUIT=$S(+Y:0,1:1)
"RTN","IBDFCNOF",58,0)
 Q
"RTN","IBDFCNOF",59,0)
 ;
"RTN","IBDFCNOF",60,0)
LIST ; -- lists the clinics using FORM
"RTN","IBDFCNOF",61,0)
 N CLINIC,COUNT,DIR,NEWDIV,NAME,OLDDIV
"RTN","IBDFCNOF",62,0)
 W:$E(IOST,1,2)="C-" @IOF
"RTN","IBDFCNOF",63,0)
 I $D(^TMP($J,"IBDCN"))=0 W ?15,"No active clinics found without an assigned encounter form"
"RTN","IBDFCNOF",64,0)
 S (NEWDIV,COUNT)=0,OLDDIV=""
"RTN","IBDFCNOF",65,0)
 S DIVIS="" F  S DIVIS=$O(^TMP($J,"IBDCN",DIVIS)) Q:DIVIS=""!(IBQUIT)  D
"RTN","IBDFCNOF",66,0)
 .I 'VAUTD,'$D(VAUTD(DIVIS)) Q
"RTN","IBDFCNOF",67,0)
 .I 'VAUTD,'$D(^TMP($J,"IBDCN",DIVIS)) S DIVNAM=$P($G(^DG(40.8,+DIVIS,0)),"^") D HEADER W !,"No clinics found for division '",DIVNAM,"'",! Q
"RTN","IBDFCNOF",68,0)
 .S DIVNAM=$O(^TMP($J,"IBDCN",DIVIS,0)) Q:DIVNAM=""
"RTN","IBDFCNOF",69,0)
 .S NEWDIV=1
"RTN","IBDFCNOF",70,0)
 .S SERV="" F  S SERV=$O(^TMP($J,"IBDCN",DIVIS,DIVNAM,SERV)) Q:SERV=""!(IBQUIT)  D
"RTN","IBDFCNOF",71,0)
 ..S NAME="" F  S NAME=$O(^TMP($J,"IBDCN",DIVIS,DIVNAM,SERV,NAME)) Q:NAME=""!(IBQUIT)  S CLINIC=+^(NAME) D ONELINE
"RTN","IBDFCNOF",72,0)
 I 'IBQUIT W:OLDDIV'="" !,"----------------",!,"Division Count = ",COUNT
"RTN","IBDFCNOF",73,0)
 Q
"RTN","IBDFCNOF",74,0)
 ;
"RTN","IBDFCNOF",75,0)
ONELINE ; -- print line of report
"RTN","IBDFCNOF",76,0)
 I $G(NEWDIV) D NEWDIV Q:IBQUIT
"RTN","IBDFCNOF",77,0)
 I $Y>(IOSL-3) D HEADER Q:IBQUIT
"RTN","IBDFCNOF",78,0)
 ;W !,$E(NAME,1,25),?27,$E(SERV,1,18),?47,$E(DIVNAM,1,15)
"RTN","IBDFCNOF",79,0)
 W !,$E(NAME,1,25),?27,$E(SERV,1,18)
"RTN","IBDFCNOF",80,0)
 W ?47,$P(^TMP($J,"IBDCN",DIVIS,DIVNAM,SERV,NAME),"^",2),"  "
"RTN","IBDFCNOF",81,0)
 I '$$ACLN(CLINIC) W ?4,"(Clinic Currently Inactive)"
"RTN","IBDFCNOF",82,0)
 S COUNT=COUNT+1
"RTN","IBDFCNOF",83,0)
 Q
"RTN","IBDFCNOF",84,0)
 ;
"RTN","IBDFCNOF",85,0)
NEWDIV ; -- print division totals and start new division
"RTN","IBDFCNOF",86,0)
 I 'IBQUIT W:OLDDIV'="" !,"----------------",!,"Division Count = ",COUNT
"RTN","IBDFCNOF",87,0)
 S OLDDIV=DIVIS
"RTN","IBDFCNOF",88,0)
 D HEADER Q:IBQUIT
"RTN","IBDFCNOF",89,0)
 W !?10,"Division: ",DIVNAM,! S NEWDIV=0,COUNT=0
"RTN","IBDFCNOF",90,0)
 Q
"RTN","IBDFCNOF",91,0)
 ;
"RTN","IBDFCNOF",92,0)
DEVICE ; -- select device
"RTN","IBDFCNOF",93,0)
 I $D(ZTQUEUED) Q
"RTN","IBDFCNOF",94,0)
 S %ZIS="MQ" D ^%ZIS I POP S IBQUIT=1 Q
"RTN","IBDFCNOF",95,0)
 I $D(IO("Q")) S ZTRTN="DQ^IBDFCNOF",ZTDESC="IBD - Clinics with No Forms",ZTSAVE("VA*")="",ZTSAVE("MULTI")="" D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS S IBQUIT=1 Q
"RTN","IBDFCNOF",96,0)
 U IO
"RTN","IBDFCNOF",97,0)
 Q
"RTN","IBDFCNOF",98,0)
 ;
"RTN","IBDFCNOF",99,0)
DIVIS ; -- Select division
"RTN","IBDFCNOF",100,0)
 N X,Y S VAUTD=1,MULTI=0
"RTN","IBDFCNOF",101,0)
 I $P($G(^DG(43,1,"GL")),"^",2) S MULTI=1 D DIVISION^VAUTOMA S:Y=-1 IBQUIT=1
"RTN","IBDFCNOF",102,0)
 I 'VAUTD S X="" F  S X=$O(VAUTD(X)) Q:'X  S ^TMP($J,"IBDCN",X)=""
"RTN","IBDFCNOF",103,0)
 Q
"RTN","IBDFCNOF",104,0)
 ;
"RTN","IBDFCNOF",105,0)
ACLN(SC) ; function
"RTN","IBDFCNOF",106,0)
 ; -- is clinic currently active
"RTN","IBDFCNOF",107,0)
 ;    Input   SC := pointer to 44
"RTN","IBDFCNOF",108,0)
 ;    Output     := 1 if currently active
"RTN","IBDFCNOF",109,0)
 ;                  0 if currently inactive
"RTN","IBDFCNOF",110,0)
 ;
"RTN","IBDFCNOF",111,0)
 N FLAG,SDIN,SDRE S FLAG=1
"RTN","IBDFCNOF",112,0)
 I $D(^SC(SC,"I")) S Y=^("I"),SDIN=+Y,SDRE=+$P(Y,U,2)
"RTN","IBDFCNOF",113,0)
 I $G(SDIN),SDIN'>DT,SDRE,SDRE>DT S FLAG=0
"RTN","IBDFCNOF",114,0)
 I $G(SDIN),SDIN'>DT,'SDRE S FLAG=0
"RTN","IBDFCNOF",115,0)
ACLNQ Q FLAG
"RTN","IBDFDE")
0^163^B73610506
"RTN","IBDFDE",1,0)
IBDFDE ;ALB/AAS - AICS Data Entry, Entry point by form ; 24-FEB-96
"RTN","IBDFDE",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE",3,0)
 ;
"RTN","IBDFDE",4,0)
% N %,%H,C,I,J,X,Y,ADD,DEL,ASKOTHER,DIR,DIC,DA,CNT,DFN,DIRUT,DUOUT,DTOUT,POP,RTN,FRMDATA,IBY,IBQUIT,IBDF,IBDOBJ,IBDPTSTI,IBDPTSTE,IBDPTNM,IBDPTDTI,SEL
"RTN","IBDFDE",5,0)
 N IBDPTDTE,IBDFMNME,IBDFMIEN,IBDFMSTI,IBDFMSTE,IBDFMIDI,IBDCLNME,IBFORM,IBDCLNPH,IBDPID,IBDPTPRI,IBDSEL,IBDPI,IBDCO,PXCA,SDCLST,PXCASTAT,PXKNODA,PXKNODB,IBDREDIT,IBDASK,IBDPRE,IBDOK,IBD,IBDCKOUT
"RTN","IBDFDE",6,0)
 N ANS1,AUPNDAYS,AUPNDOB,AUPNDOD,AUPNPAT,AUPNSEX
"RTN","IBDFDE",7,0)
 ;
"RTN","IBDFDE",8,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFDE",9,0)
 D HOME^%ZIS
"RTN","IBDFDE",10,0)
 W !!,"Data Entry of Encounter Forms (by Form)",!!
"RTN","IBDFDE",11,0)
 ;
"RTN","IBDFDE",12,0)
STRT ; -- ask for form id
"RTN","IBDFDE",13,0)
 D END
"RTN","IBDFDE",14,0)
 S DIR("?")="Enter the encounter form id, printed on the form.  This is the second number from the left, just right of the label 'ID:'."
"RTN","IBDFDE",15,0)
 S DIR(0)="PO^357.96:AEQM",DIR("A")="Encounter Form ID" D ^DIR K DIR,DA,DR,DIC
"RTN","IBDFDE",16,0)
 I $D(DIRUT) G END
"RTN","IBDFDE",17,0)
 S IBDF("FORM")=+Y
"RTN","IBDFDE",18,0)
 D EN
"RTN","IBDFDE",19,0)
 ;
"RTN","IBDFDE",20,0)
STRTQ I '$P($G(^IBD(357.09,1,0)),"^",6) D PAUSE
"RTN","IBDFDE",21,0)
 G:IBQUIT END
"RTN","IBDFDE",22,0)
 W @IOF
"RTN","IBDFDE",23,0)
 Q:$G(IBDF("OPTION"))
"RTN","IBDFDE",24,0)
 G STRT
"RTN","IBDFDE",25,0)
 ;
"RTN","IBDFDE",26,0)
EN ; -- entry point to edit one form,  
"RTN","IBDFDE",27,0)
 ;    Input IBDF("FORM") := form number
"RTN","IBDFDE",28,0)
 ;
"RTN","IBDFDE",29,0)
 D:$D(XRTL) T0^%ZOSV
"RTN","IBDFDE",30,0)
 N IBDSTRT,IBDFIN,IBDTIME S IBDSTRT=$H
"RTN","IBDFDE",31,0)
 S IBQUIT=0
"RTN","IBDFDE",32,0)
 L +^IBD(357.96,IBDF("FORM")):5 I '$T W !!,"Form is currently being entered by another user, try again later!" S IBFLAG=1 G ENQ
"RTN","IBDFDE",33,0)
 I $G(^IBD(357.96,IBDF("FORM"),0))="" W !!,"Form Tracking Entry has been deleted, Data entry not available" S IBFLAG=1 G ENQ
"RTN","IBDFDE",34,0)
 ;
"RTN","IBDFDE",35,0)
OVER ; -- start here to re-edit an entry
"RTN","IBDFDE",36,0)
 N IOINHI,IOINORM
"RTN","IBDFDE",37,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBDFDE",38,0)
 S (IBQUIT,IBDF("KILL"))=0
"RTN","IBDFDE",39,0)
 D IDPAT^IBDFRPC3(.FRMDATA,IBDF("FORM"))
"RTN","IBDFDE",40,0)
 D EXPAND(FRMDATA)
"RTN","IBDFDE",41,0)
 I $P($G(^IBE(357,IBDFMIEN,0)),"^",12)'=1 W !!,"Form is not scannable.  Data entry not available" S IBFLAG=1 G ENQ
"RTN","IBDFDE",42,0)
 ;
"RTN","IBDFDE",43,0)
 I '$G(IBDF("FRMDEF")) W !!,"Form Definition entry not defined for form tracking entry.",!,"Data entry not available." D ERR S IBFLAG=1 G ENQ
"RTN","IBDFDE",44,0)
 I $G(^IBD(357.95,+$G(IBDF("FRMDEF")),0))="" W !!,"Form Definition Entry has been deleted.",!,"Data entry not available." D ERR S IBFLAG=1 G ENQ
"RTN","IBDFDE",45,0)
 I $P($G(^IBD(357.95,+$G(IBDF("FRMDEF")),0)),"^",21)="" W !!,"Can not determine Encounter Form from Form Tracking entry.",!,"Data entry not available." D ERR S IBFLAG=1 G ENQ
"RTN","IBDFDE",46,0)
 I $G(^IBE(357,IBDFMIEN,0))="" W !!,"Encounter Form has been deleted.  Data entry not available." D ERR S IBFLAG=1 G ENQ
"RTN","IBDFDE",47,0)
 I $G(^DPT(DFN,"S",IBDF("APPT"),0))'="",$P(^DPT(DFN,"S",IBDF("APPT"),0),"^",1)'=IBDF("CLINIC") W !!,"Form "_IBDF("FORM")_" is for an Appointment that has been canceled.",!,"Data entry not available." S IBFLAG=1 G ENQ
"RTN","IBDFDE",48,0)
 S X=$P($G(^DPT(DFN,"S",IBDF("APPT"),0)),"^",2) I X'="","^C^N^NA^CA^PC^PCA^"[("^"_X_"^") W !!,"Form "_IBDF("FORM")_" is for an Appointment that has been canceled or no-showed.",!,"Data entry not available." S IBFLAG=1 G ENQ
"RTN","IBDFDE",49,0)
 I '$P($G(^IBE(357,IBDFMIEN,0)),"^",5),'$G(IBDREDIT) D KILLTMP
"RTN","IBDFDE",50,0)
 I '$G(IBDREDIT) D HDR
"RTN","IBDFDE",51,0)
 ;
"RTN","IBDFDE",52,0)
 I IBDFMSTI=3!(IBDFMSTI=6) D  I IBQUIT G ENQ ; -- already sent to pce
"RTN","IBDFDE",53,0)
 .Q:$G(IBDREDIT)
"RTN","IBDFDE",54,0)
 .S IBQUIT=1
"RTN","IBDFDE",55,0)
 .W !!,"Current form Status is ",IBDFMSTE
"RTN","IBDFDE",56,0)
 .W:'IBDCKOUT "."
"RTN","IBDFDE",57,0)
 .W:IBDCKOUT " and was checked out",!,"on "_$$FMTE^XLFDT(IBDCKOUT)_", Status is "_$G(IOINHI)_IBDPTSTE_$G(IOINORM)_".",!
"RTN","IBDFDE",58,0)
 .S DIR("?")="Data Entry on this form appears to have been completed by either scanning or data entry.  Deleting or editing of data is not allowed with this option.  Answer 'Yes' if you wish to continue, or 'No' if to select another form."
"RTN","IBDFDE",59,0)
 .S DIR(0)="Y",DIR("B")="No",DIR("A")="Are you sure you want to continue"
"RTN","IBDFDE",60,0)
 .D ^DIR K DIR I Y=1 S IBQUIT=0
"RTN","IBDFDE",61,0)
 ;
"RTN","IBDFDE",62,0)
 I +IBDCKOUT>0 D  I IBQUIT G ENQ ; -- already sent to pce
"RTN","IBDFDE",63,0)
 .I IBDFMSTI=3!(IBDFMSTI=6) Q
"RTN","IBDFDE",64,0)
 .Q:$G(IBDREDIT)
"RTN","IBDFDE",65,0)
 .S IBQUIT=1
"RTN","IBDFDE",66,0)
 .W !!,"Appointment has already been Checked Out on "_$$FMTE^XLFDT(IBDCKOUT)_",",!,"Status is: "_$G(IOINHI)_IBDPTSTE_$G(IOINORM)_".",!
"RTN","IBDFDE",67,0)
 .S DIR("?")="This appointment appears to have been checked out on "_$$FMTE^XLFDT(IBDCKOUT)_".  Deleting or editing of data is not allowed with this option.  Answer 'Yes' if you wish to continue, or 'No' if to select another form."
"RTN","IBDFDE",68,0)
 .S DIR(0)="Y",DIR("B")="No",DIR("A")="Are you sure you want to continue"
"RTN","IBDFDE",69,0)
 .D ^DIR K DIR I Y=1 S IBQUIT=0
"RTN","IBDFDE",70,0)
 ;
"RTN","IBDFDE",71,0)
 I '$G(IBDREDIT),$G(^DPT(DFN,"S",IBDF("APPT"),0))="" S IBDOK=1 D FNDAPPT^IBDFDE1 I 'IBDOK W !!,"No action Taken",! G ENQ
"RTN","IBDFDE",72,0)
 ;
"RTN","IBDFDE",73,0)
 I '$D(^TMP("IBD-OBJ",$J,IBDFMIEN,0)) D FRMLSTI^IBDFRPC("^TMP(""IBD-OBJ"",$J,IBDFMIEN)",IBDFMIEN,"",1)
"RTN","IBDFDE",74,0)
 I $O(^TMP("IBD-OBJ",$J,IBDFMIEN,0))="" W !,$G(^TMP("IBD-OBJ",$J,IBDFMIEN,0)),! G ENQ
"RTN","IBDFDE",75,0)
 ;
"RTN","IBDFDE",76,0)
NEWOVER ; -- start here to re-edit an entry
"RTN","IBDFDE",77,0)
 I $G(IBDREDIT) D HDR
"RTN","IBDFDE",78,0)
 D LISTOB
"RTN","IBDFDE",79,0)
 D CHKOUT^IBDFDE0(IBDF("SDOE"))
"RTN","IBDFDE",80,0)
 I '$G(IBDF("PROVIDER PI"))!($G(IBDF("PROVIDER"))) D DEFPROV^IBDFDE21
"RTN","IBDFDE",81,0)
 ;
"RTN","IBDFDE",82,0)
 K ^TMP("IBD-PI-CNT",$J)
"RTN","IBDFDE",83,0)
 S I=0 F  S I=$O(^TMP("IBD-OBJ",$J,IBDFMIEN,I)) Q:I=""  D
"RTN","IBDFDE",84,0)
 .S X=$P($G(^TMP("IBD-OBJ",$J,IBDFMIEN,I)),"^",2)
"RTN","IBDFDE",85,0)
 .S ^TMP("IBD-PI-CNT",$J,X)=$G(^TMP("IBD-PI-CNT",$J,X))+1
"RTN","IBDFDE",86,0)
 ;
"RTN","IBDFDE",87,0)
 S I=0 F  S I=$O(^TMP("IBD-OBJ",$J,IBDFMIEN,I)) Q:I=""!(IBQUIT)  D
"RTN","IBDFDE",88,0)
 .S IBDOBJ=$G(^TMP("IBD-OBJ",$J,IBDFMIEN,I))
"RTN","IBDFDE",89,0)
 .S IBDF("PI")=+$P(IBDOBJ,"^",2),IBDF("TYPE")=$P(IBDOBJ,"^",5)
"RTN","IBDFDE",90,0)
 .S IBDF("IEN")=+$P(IBDOBJ,"^",6),IBDF("VITAL")=$P(IBDOBJ,"^",7)
"RTN","IBDFDE",91,0)
 .S IBDF("PAGE")=$P(IBDOBJ,"^",10)\80+1 ;scannable forms only
"RTN","IBDFDE",92,0)
 .Q:IBDF("IEN")<1!(IBDF("PI")<1)
"RTN","IBDFDE",93,0)
 .S IBDF("IBDF")=I
"RTN","IBDFDE",94,0)
 .S RTN=$G(^IBE(357.6,IBDF("PI"),18)) Q:RTN=""
"RTN","IBDFDE",95,0)
 .X RTN
"RTN","IBDFDE",96,0)
 .I $G(IBDF("GOTO"))'="" S I=IBDF("GOTO") K IBDF("GOTO")
"RTN","IBDFDE",97,0)
 K ^TMP("IBD-PI-CNT",$J)
"RTN","IBDFDE",98,0)
 D FINAL^IBDFDE1 I $G(IBDREDIT) S IBQUIT=0 G OVER
"RTN","IBDFDE",99,0)
 S:$D(XRT0) XRTN=$T(+0) D:$D(XRT0) T1^%ZOSV
"RTN","IBDFDE",100,0)
 ;
"RTN","IBDFDE",101,0)
ENQ K SDFN
"RTN","IBDFDE",102,0)
 L -^IBD(357.96,IBDF("FORM"))
"RTN","IBDFDE",103,0)
 I $D(IBFLAG) D
"RTN","IBDFDE",104,0)
 .I $P($G(^IBD(357.09,1,0)),"^",6) W !! D PAUSE
"RTN","IBDFDE",105,0)
 .K IBFLAG
"RTN","IBDFDE",106,0)
 Q
"RTN","IBDFDE",107,0)
 ;
"RTN","IBDFDE",108,0)
HDR ; -- print patient header
"RTN","IBDFDE",109,0)
 W @IOF
"RTN","IBDFDE",110,0)
 W IBDPTNM,?32,IBDPID,?47,$$FMTE^XLFDT($P($G(^DPT(DFN,0)),"^",3))
"RTN","IBDFDE",111,0)
 W "    Form ID: ",$P(^IBD(357.96,IBDF("FORM"),0),"^")
"RTN","IBDFDE",112,0)
 W !,$TR($J(" ",IOM)," ","=")
"RTN","IBDFDE",113,0)
 W !,"      Clinic: ",$E(IBDCLNME,1,25) W ?40,"  Date/Time: ",IBDPTDTE
"RTN","IBDFDE",114,0)
 W !,"   Form Name: ",$E(IBDFMNME,1,25) W ?40,"Form Status: ",$E(IBDFMSTE,1,25)
"RTN","IBDFDE",115,0)
 Q
"RTN","IBDFDE",116,0)
 ;
"RTN","IBDFDE",117,0)
LISTOB ; -- header for input object list
"RTN","IBDFDE",118,0)
 W !!,"Items available for Input:"
"RTN","IBDFDE",119,0)
 D WRITE^IBDFDE0(IBDF("SDOE"))
"RTN","IBDFDE",120,0)
 S I=0 F  S I=$O(^TMP("IBD-OBJ",$J,IBDFMIEN,I)) Q:I=""  D
"RTN","IBDFDE",121,0)
 .S X=$G(^TMP("IBD-OBJ",$J,IBDFMIEN,I))
"RTN","IBDFDE",122,0)
 .Q:'$P(X,"^",8)
"RTN","IBDFDE",123,0)
 .S Y=$S($P(X,"^",7)="":$P(X,"^"),1:$P(X,"^",7))
"RTN","IBDFDE",124,0)
 .I Y="INPUT PROVIDER" S IBDF("PROVIDER PI")=+$P(X,"^",2)
"RTN","IBDFDE",125,0)
 .I Y["INPUT " S Y=$P(Y,"INPUT ",2)
"RTN","IBDFDE",126,0)
 .W !?3,$E(Y,1,35)
"RTN","IBDFDE",127,0)
 .;
"RTN","IBDFDE",128,0)
 .F  S I=I+1 S X=$G(^TMP("IBD-OBJ",$J,IBDFMIEN,I)) Q:X=""!($P(X,"^",8))
"RTN","IBDFDE",129,0)
 .Q:X=""
"RTN","IBDFDE",130,0)
 .S Y=$S($P(X,"^",7)="":$P(X,"^"),1:$P(X,"^",7))
"RTN","IBDFDE",131,0)
 .I Y="INPUT PROVIDER" S IBDF("PROVIDER PI")=+$P(X,"^",2)
"RTN","IBDFDE",132,0)
 .I Y["INPUT " S Y=$P(Y,"INPUT ",2)
"RTN","IBDFDE",133,0)
 .W ?40,$E(Y,1,35)
"RTN","IBDFDE",134,0)
 ;
"RTN","IBDFDE",135,0)
 W !,$TR($J(" ",IOM)," ","=")
"RTN","IBDFDE",136,0)
 Q
"RTN","IBDFDE",137,0)
 ;
"RTN","IBDFDE",138,0)
EXPAND(X) ; -- sets standard varibles for form data
"RTN","IBDFDE",139,0)
 S (DFN,IBDF("DFN"))=$P(X,"^",2) ;DFN
"RTN","IBDFDE",140,0)
 S IBDF("CLINIC")=$P(X,"^",7) ;   clinic ien
"RTN","IBDFDE",141,0)
 S IBDPTNM=$P(X,"^") ;    patient name
"RTN","IBDFDE",142,0)
 S IBDPID=$P(X,"^",3) ;   Patient identifier (ssn)
"RTN","IBDFDE",143,0)
 S IBDFMNME=$P(X,"^",4) ; form name
"RTN","IBDFDE",144,0)
 S IBDFMIEN=$P(X,"^",5) ; form ien (pointer to 357)
"RTN","IBDFDE",145,0)
 S IBDCLNME=$P(X,"^",6) ; clinic name
"RTN","IBDFDE",146,0)
 S IBDCLNPH=$P(X,"^",8) ; clinic physical location
"RTN","IBDFDE",147,0)
 S IBDF("APPT")=$P(X,"^",9) ; appt date/time (fm format)
"RTN","IBDFDE",148,0)
 S IBDPTDTE=$P(X,"^",10) ;appt date (external format)
"RTN","IBDFDE",149,0)
 S IBDPTSTI=$P(X,"^",11) ;appt status (piece two of "S" node)
"RTN","IBDFDE",150,0)
 S IBDPTSTE=$P(X,"^",12) ;appt status expanded
"RTN","IBDFDE",151,0)
 S IBDFMSTI=$P(X,"^",13) ;form status (internal)
"RTN","IBDFDE",152,0)
 S IBDFMSTE=$P(X,"^",14) ;form status (expanded)
"RTN","IBDFDE",153,0)
 S IBDF("FRMDEF")=$P(X,"^",15) ;form id (pointer to 357.95)
"RTN","IBDFDE",154,0)
 S IBDPTPRI=$P(X,"^",16) ;default provider internal
"RTN","IBDFDE",155,0)
 S IBDPTPRI=$P(X,"^",17) ;default provider external
"RTN","IBDFDE",156,0)
 S IBDCKOUT=$P(X,"^",20) ;checkout dt
"RTN","IBDFDE",157,0)
 S IBDF("SDOE")=$$FNDSDOE(DFN,IBDF("APPT")) ;outpatient encounter
"RTN","IBDFDE",158,0)
 Q
"RTN","IBDFDE",159,0)
 ;Q $$GETAPT^SDVSIT2(DFN,APPT,IBDF("CLINIC"))
"RTN","IBDFDE",160,0)
 ; -- will create encounters for appts/unsch vsts (but not disps or ae?)
"RTN","IBDFDE",161,0)
 ;
"RTN","IBDFDE",162,0)
FNDSDOE(DFN,APPT) ; -- returns pointer to opt encounter for appt.
"RTN","IBDFDE",163,0)
 N SDOE
"RTN","IBDFDE",164,0)
 S SDOE=$P($G(^DPT(+$G(DFN),"S",+$G(APPT),0)),"^",20)
"RTN","IBDFDE",165,0)
 I SDOE="",$G(^DPT(+$G(DFN),"S",+$G(APPT),0))="" S SDOE=$P($$SDV^IBDFRPC3(DFN,APPT),"^",2)
"RTN","IBDFDE",166,0)
 Q SDOE
"RTN","IBDFDE",167,0)
 ;
"RTN","IBDFDE",168,0)
PAUSE ; -- go to bottom of screen and pause for return
"RTN","IBDFDE",169,0)
 Q:$G(IBQUIT)
"RTN","IBDFDE",170,0)
 N I,DIR,DIRUT,DUOUT,DTOUT I $Y'>(IOSL-3)  W !!
"RTN","IBDFDE",171,0)
 I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR S IBQUIT='Y
"RTN","IBDFDE",172,0)
 Q
"RTN","IBDFDE",173,0)
 ;
"RTN","IBDFDE",174,0)
END K I,J,X,Y,DA,DR,DIC,DIE,DIR,DTOUT,DUOUT,DIRUT,IBDSEL,CHOICE,TEXT,TEXTU,RESULT,IBDPI,IBDCO,IBDF
"RTN","IBDFDE",175,0)
 K ^TMP("IBD-ASK",$J),^TMP("IBD-LCODE",$J),^TMP("IBD-LST",$J),^TMP("IBD-LTEXT",$J),^TMP("IBD-OBJ",$J)
"RTN","IBDFDE",176,0)
 Q
"RTN","IBDFDE",177,0)
 ;
"RTN","IBDFDE",178,0)
KILLTMP K ^TMP("IBD-OBJ",$J,IBDFMIEN),^TMP("IBD-LST",$J,IBDFMIEN),^TMP("IBD-ASK",$J,IBDFMIEN),^TMP("IB",$J,"INTERFACES"),^TMP("IBD-LTEXT",$J,IBDFMIEN),^TMP("IBD-LCODE",$J,IBDFMIEN)
"RTN","IBDFDE",179,0)
 Q
"RTN","IBDFDE",180,0)
 ;
"RTN","IBDFDE",181,0)
ERR ;
"RTN","IBDFDE",182,0)
 W !!,"Entry in Form Tracking file (357.96) = ",$S($G(IBDF("FORM"))'="":IBDF("FORM"),1:"NULL")
"RTN","IBDFDE",183,0)
 W !,"   Entry in Form Definition (357.95) = ",$S($G(IBDF("FRMDEF"))'="":IBDF("FRMDEF"),1:"NULL")
"RTN","IBDFDE",184,0)
 W !,"  Entry if Encounter Form file (357) = ",$S($G(IBDFMIEN)'="":IBDFMIEN,1:"NULL"),!
"RTN","IBDFDE",185,0)
 Q
"RTN","IBDFDE0")
0^164^B31406680
"RTN","IBDFDE0",1,0)
IBDFDE0 ;ALB/AAS - AICS Data Entry, Check out interview; 24-FEB-96
"RTN","IBDFDE0",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE0",3,0)
 ;
"RTN","IBDFDE0",4,0)
% G ^IBDFDE
"RTN","IBDFDE0",5,0)
 ;
"RTN","IBDFDE0",6,0)
CHKOUT(SDOE) ; -- ask check out questions
"RTN","IBDFDE0",7,0)
 ; -- assumes forms are always for an appointment
"RTN","IBDFDE0",8,0)
 ;    does not require provider, cpt, or diag. to input data
"RTN","IBDFDE0",9,0)
 ;    acts same as input from scanned form.
"RTN","IBDFDE0",10,0)
 ;
"RTN","IBDFDE0",11,0)
 S IBQUIT=0
"RTN","IBDFDE0",12,0)
 W !!,">>> Check out interview..."
"RTN","IBDFDE0",13,0)
 ;
"RTN","IBDFDE0",14,0)
 ; -- can't check out future appointments
"RTN","IBDFDE0",15,0)
 I $E(IBDF("APPT"),1,7)>DT W "not available at this time." G CHKOUTQ
"RTN","IBDFDE0",16,0)
 ;
"RTN","IBDFDE0",17,0)
 ; -- get encounter if not already there (won't work unless appt exists)
"RTN","IBDFDE0",18,0)
 ;I 'SDOE S SDOE=$$GETAPT(DFN,IBDF("APPT"),IBDF("CLINIC"))
"RTN","IBDFDE0",19,0)
 ;
"RTN","IBDFDE0",20,0)
 ; -- see if already done, or needs to be done first
"RTN","IBDFDE0",21,0)
 S X=$$REQ(DFN,IBDF("APPT"),IBDF("CLINIC"),SDOE,$G(IBDCKOUT))
"RTN","IBDFDE0",22,0)
 I X<1 W $S(X=0:"no questions.",X=-2:"not required",X=-3:"already completed today",1:"already complete.") G CHKOUTQ
"RTN","IBDFDE0",23,0)
 W "required."
"RTN","IBDFDE0",24,0)
 ;
"RTN","IBDFDE0",25,0)
 ; -- ask eligibility/appt type ;not unless asked for
"RTN","IBDFDE0",26,0)
 ;S ELIG=$$ELAP^SDPCE(DFN,IBDF("APPT"))
"RTN","IBDFDE0",27,0)
 ;
"RTN","IBDFDE0",28,0)
 ; -- ask checkout Date
"RTN","IBDFDE0",29,0)
 S IBDPRE=$G(IBDCO("CO"))
"RTN","IBDFDE0",30,0)
 S X=$S($G(IBDCO("CO"))="":"NOW",1:$$FMTE^XLFDT(IBDCO("CO")))
"RTN","IBDFDE0",31,0)
 S IBDCO("CO")=$E($$ASKDT("Checkout Date: ",X,"",IBDF("APPT"),$$FMADD^XLFDT(DT,1)),1,12)
"RTN","IBDFDE0",32,0)
 I $G(IBDCO("CO"))="" K IBDCO W "   Checkout Deleted!" G CHKOUTQ
"RTN","IBDFDE0",33,0)
 I $G(IBDCO("CO"))<0 K:IBDPRE="" IBDCO("CO") W:IBDPRE="" "   Checkout Deleted!" S:IBDPRE IBDCO("CO")=IBDPRE S IBQUIT=1 G CHKOUTQ
"RTN","IBDFDE0",34,0)
 ;
"RTN","IBDFDE0",35,0)
 ; -- ask classifications
"RTN","IBDFDE0",36,0)
 I $$SC^SDCO22(DFN,+SDOE)!($D(IBDF("SC"))) S IBDCO("SC")=$$ASKYN("Was treatment for SC Condition",$G(IBDCO("SC")),"D SCCOND^IBDFN4") D
"RTN","IBDFDE0",37,0)
 .I $G(IBDCO("SC"))="" K IBDCO("SC") W "   Deleted!"
"RTN","IBDFDE0",38,0)
 I $G(IBDCO("SC"))<0 K IBDCO("SC") S IBQUIT=1 G CHKOUTQ
"RTN","IBDFDE0",39,0)
 ;
"RTN","IBDFDE0",40,0)
 I $G(IBDCO("SC")) G CHKOUTQ ; if service connected others don't apply
"RTN","IBDFDE0",41,0)
 ;
"RTN","IBDFDE0",42,0)
 I $$AO^SDCO22(DFN,+SDOE)!($D(IBDF("AO"))) S IBDCO("AO")=$$ASKYN("Was treatment related to Agent Orange Exposure",$G(IBDCO("AO"))) D
"RTN","IBDFDE0",43,0)
 .I $G(IBDCO("AO"))="" K IBDCO("AO") W "   Deleted!"
"RTN","IBDFDE0",44,0)
 I $G(IBDCO("AO"))<0 K IBDCO("AO") S IBQUIT=1 G CHKOUTQ
"RTN","IBDFDE0",45,0)
 ;
"RTN","IBDFDE0",46,0)
 I $$IR^SDCO22(DFN,+SDOE)!($D(IBDF("IR"))) S IBDCO("IR")=$$ASKYN("Was treatment related to  Ionizing Radiation Exposure",$G(IBDCO("IR"))) D
"RTN","IBDFDE0",47,0)
 .I $G(IBDCO("IR"))="" K IBDCO("IR") W "   Deleted!"
"RTN","IBDFDE0",48,0)
 I $G(IBDCO("IR"))<0 K IBDCO("IR") S IBQUIT=1 G CHKOUTQ
"RTN","IBDFDE0",49,0)
 ;
"RTN","IBDFDE0",50,0)
 I $$EC^SDCO22(DFN,+SDOE)!($D(IBDF("EC"))) S IBDCO("EC")=$$ASKYN("Was treatment related to Environmental Contaminant Exposure",$G(IBDCO("EC"))) D
"RTN","IBDFDE0",51,0)
 .I $G(IBDCO("EC"))="" K IBDCO("EC") W "   Deleted!"
"RTN","IBDFDE0",52,0)
 I $G(IBDCO("EC"))<0 K IBDCO("EC") S IBQUIT=1 G CHKOUTQ
"RTN","IBDFDE0",53,0)
 ;
"RTN","IBDFDE0",54,0)
 I '$D(IBDCO) W "no questions."
"RTN","IBDFDE0",55,0)
CHKOUTQ I IBQUIT W !!,"Required information missing."
"RTN","IBDFDE0",56,0)
 K IBDPRE,SDFN
"RTN","IBDFDE0",57,0)
 Q
"RTN","IBDFDE0",58,0)
 ;
"RTN","IBDFDE0",59,0)
ASKYN(QUES,DEFLT,EXHELP) ; -- ask yes/no question
"RTN","IBDFDE0",60,0)
 N DIR,DIRUT,DUOUT,DTOUT
"RTN","IBDFDE0",61,0)
 I $G(EXHELP)'="" S DIR("??")="^"_EXHELP
"RTN","IBDFDE0",62,0)
 S DIR("A")=QUES,DIR(0)="YO",DIR("B")=$S($G(DEFLT):"Yes",1:"No") D ^DIR
"RTN","IBDFDE0",63,0)
 I $D(DIRUT),Y'="" S Y=-1 ;i y="" user typed "@"
"RTN","IBDFDE0",64,0)
 I $D(DTOUT)!($D(DUOUT)) S IBQUIT=1,Y=-1
"RTN","IBDFDE0",65,0)
 Q Y
"RTN","IBDFDE0",66,0)
 ;
"RTN","IBDFDE0",67,0)
ASKDT(QUES,DEFLT,PARAM,EARLY,LATEST,EXHELP) ; -- ask date questions
"RTN","IBDFDE0",68,0)
 N X,Y,DIR,DIRUT,DTOUT,DUOUT
"RTN","IBDFDE0",69,0)
 S DIR(0)="DOA^"_$E($G(EARLY),1,7)_":"_$G(LATEST)_":"_$S($G(PARAM)'="":PARAM,1:"AEQRX")
"RTN","IBDFDE0",70,0)
 I $G(QUES)'="" S DIR("A")=QUES
"RTN","IBDFDE0",71,0)
 I $G(DEFLT)'="" S DIR("B")=DEFLT
"RTN","IBDFDE0",72,0)
 I $L($G(EXHELP)) S DIR("??")="^"_EXHELP
"RTN","IBDFDE0",73,0)
 S DIR("?")="This response requires an appointment Date and Time"
"RTN","IBDFDE0",74,0)
 D ^DIR
"RTN","IBDFDE0",75,0)
 I $D(DIRUT),Y'="" S Y=-1 ;i y="" user typed "@"
"RTN","IBDFDE0",76,0)
 I $D(DTOUT)!($D(DUOUT)) S IBQUIT=1,Y=-1
"RTN","IBDFDE0",77,0)
 Q Y
"RTN","IBDFDE0",78,0)
 ;
"RTN","IBDFDE0",79,0)
REQ(DFN,APPT,CLINIC,SDOE,IBDC) ; is checkout interview required for this appt.
"RTN","IBDFDE0",80,0)
 N IBDY S IBDY=0
"RTN","IBDFDE0",81,0)
 I $$INP^SDAM2(DFN,APPT)="I" G REQQ ; inpatient appointment
"RTN","IBDFDE0",82,0)
 I '$$CLINIC^SDAMU(CLINIC) G REQQ ; not a clinic or non-count
"RTN","IBDFDE0",83,0)
 I $$REQ^SDM1A(APPT)'="CO" G REQQ ; checkout not required
"RTN","IBDFDE0",84,0)
 I $$EXCL(CLINIC,APPT) S IBDY=-2 G REQQ ; clinic stop codes are exempt
"RTN","IBDFDE0",85,0)
 I $$COMDT^SDCOU(+SDOE) S IBDY=-1 G REQQ ;process completed
"RTN","IBDFDE0",86,0)
 I $P($G(IBDC),".")=DT S IBDY=-3 G REQQ ;already checked out today
"RTN","IBDFDE0",87,0)
 S IBDY=1
"RTN","IBDFDE0",88,0)
REQQ K SDFN
"RTN","IBDFDE0",89,0)
 Q IBDY
"RTN","IBDFDE0",90,0)
 ;
"RTN","IBDFDE0",91,0)
EXCL(CL,DAT) ; -- are clinic stop codes exempt from classifications
"RTN","IBDFDE0",92,0)
 ; -- 1=yes, 0=no
"RTN","IBDFDE0",93,0)
 ;    original logic from exoe^sdcou2 except uses clinic stops rather
"RTN","IBDFDE0",94,0)
 ;    than outpatient encounter stops
"RTN","IBDFDE0",95,0)
 ;
"RTN","IBDFDE0",96,0)
 N SC1,SC2,EXMPT
"RTN","IBDFDE0",97,0)
 S SC1=$P($G(^SC(CL,0)),"^",7),SC2=$P($G(^SC(CL,0)),"^",18)
"RTN","IBDFDE0",98,0)
 I $$EX^SDCOU2(SC1,$G(DAT)) D
"RTN","IBDFDE0",99,0)
 .S EXMPT=1
"RTN","IBDFDE0",100,0)
 .I SC2,'$$EX^SDCOU2(SC2,$G(DAT)) S EXMPT=0
"RTN","IBDFDE0",101,0)
EXCLQ Q +$G(EXMPT)
"RTN","IBDFDE0",102,0)
 ;
"RTN","IBDFDE0",103,0)
WRITE(SDOE,CNT) ; -- print checkout interview
"RTN","IBDFDE0",104,0)
 W !?3,"Check out interview..."
"RTN","IBDFDE0",105,0)
 S X=$$REQ(DFN,IBDF("APPT"),IBDF("CLINIC"),SDOE)
"RTN","IBDFDE0",106,0)
 I X<1 W $S(X=0:"no questions.",1:"already complete.") G WRITEQ
"RTN","IBDFDE0",107,0)
 W "required."
"RTN","IBDFDE0",108,0)
 G:$D(IBDCO)'>1 WRITEQ
"RTN","IBDFDE0",109,0)
 ;D:$G(CNT)="" DISP
"RTN","IBDFDE0",110,0)
 D:$G(CNT)'="" LIST
"RTN","IBDFDE0",111,0)
 ;
"RTN","IBDFDE0",112,0)
WRITEQ Q
"RTN","IBDFDE0",113,0)
 ;
"RTN","IBDFDE0",114,0)
DISP ; -- display the old way
"RTN","IBDFDE0",115,0)
 I $D(IBDCO("CO")) W !,"                 Checkout Date: ",$$FMTE^XLFDT(IBDCO("CO"))
"RTN","IBDFDE0",116,0)
 I $D(IBDCO("SC")) W !,"    Treatment for SC Condition: ",$S(IBDCO("SC")=1:"YES",1:"NO")
"RTN","IBDFDE0",117,0)
 I $D(IBDCO("AO")) W !,"         Agent Orange Exposure: ",$S(IBDCO("AO")=1:"YES",1:"NO")
"RTN","IBDFDE0",118,0)
 I $D(IBDCO("IR")) W !,"   Ionizing Radiation Exposure: ",$S(IBDCO("IR")=1:"YES",1:"NO")
"RTN","IBDFDE0",119,0)
 I $D(IBDCO("EC")) W !,"    Environmental Contaminants: ",$S(IBDCO("EC")=1:"YES",1:"NO")
"RTN","IBDFDE0",120,0)
 Q
"RTN","IBDFDE0",121,0)
 ;
"RTN","IBDFDE0",122,0)
LIST ; -- display with a list
"RTN","IBDFDE0",123,0)
 I $D(IBDCO("CO")) S CNT=CNT+1 W !?3,CNT,?7,"Checkout Date ",?31,$$FMTE^XLFDT(IBDCO("CO"))
"RTN","IBDFDE0",124,0)
 I $D(IBDCO("SC")) S CNT=CNT+1 W !?3,CNT,?7,"SC Condition ",?31,$S(IBDCO("SC")=1:"YES",1:"NO")
"RTN","IBDFDE0",125,0)
 I $D(IBDCO("AO")) S CNT=CNT+1 W !?3,CNT,?7,"Agent Orange ",?31,$S(IBDCO("AO")=1:"YES",1:"NO")
"RTN","IBDFDE0",126,0)
 I $D(IBDCO("IR")) S CNT=CNT+1 W !?3,CNT,?7,"Ionizing Radiation ",?31,$S(IBDCO("IR")=1:"YES",1:"NO")
"RTN","IBDFDE0",127,0)
 I $D(IBDCO("EC")) S CNT=CNT+1 W !?3,CNT,?7,"Env. Contaminants ",?31,$S(IBDCO("EC")=1:"YES",1:"NO")
"RTN","IBDFDE0",128,0)
 Q
"RTN","IBDFDE1")
0^165^B42667964
"RTN","IBDFDE1",1,0)
IBDFDE1 ;ALB/AAS - AICS Data Entry, Final check; 24-FEB-96 [ 11/12/96  2:12 PM ]
"RTN","IBDFDE1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE1",3,0)
 ; -- calls IBDFRPC4 to pass data to pce
"RTN","IBDFDE1",4,0)
 ;
"RTN","IBDFDE1",5,0)
% G ^IBDFDE
"RTN","IBDFDE1",6,0)
 ;
"RTN","IBDFDE1",7,0)
FINAL ; -- display everything selected and check okay
"RTN","IBDFDE1",8,0)
 ; -- input IBDSEL :
"RTN","IBDFDE1",9,0)
 ;             $p1 := package interface ien (for input)
"RTN","IBDFDE1",10,0)
 ;             $p2 := code to send (may be internal or external)
"RTN","IBDFDE1",11,0)
 ;             $p3 := text to send
"RTN","IBDFDE1",12,0)
 ;             $p4 := hdr to send (optional)
"RTN","IBDFDE1",13,0)
 ;             $p5 := clinic lexicon pointer (optional) 
"RTN","IBDFDE1",14,0)
 ;             $p6 := qualifier (i.e. primary or secondary)
"RTN","IBDFDE1",15,0)
 ;             $P7 :=
"RTN","IBDFDE1",16,0)
 ;             $p8 :=
"RTN","IBDFDE1",17,0)
 ;             $p9 :=
"RTN","IBDFDE1",18,0)
 ;             $p10 := external value of code (optional)
"RTN","IBDFDE1",19,0)
 ;
"RTN","IBDFDE1",20,0)
 N I,X,DIR,DIRUT,DUOUT,DTOUT,PARAM,IBDCNT
"RTN","IBDFDE1",21,0)
 K IBDREDIT
"RTN","IBDFDE1",22,0)
 I $G(IBDSEL(0))<1,$G(IBDCO("CO"))="",$G(IBDCO("SC"))="",$G(IBDCO("AO"))="",$G(IBDCO("IR"))="" W !!,"Nothing Selected!!" S IBDF("NOTHING")=1 Q
"RTN","IBDFDE1",23,0)
 ;
"RTN","IBDFDE1",24,0)
 S (IBDCNT,IBQUIT)=0
"RTN","IBDFDE1",25,0)
 W !!,"You have entered the following:"
"RTN","IBDFDE1",26,0)
 D WRITE^IBDFDE0(IBDF("SDOE"),.IBDCNT)
"RTN","IBDFDE1",27,0)
 S I=0 F  S I=$O(IBDSEL(I)) Q:I=""  S IBDCNT=IBDCNT+1 D LINE(IBDCNT,IBDSEL(I))
"RTN","IBDFDE1",28,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Is this Okay" D ^DIR
"RTN","IBDFDE1",29,0)
 I $D(DIRUT) S IBQUIT=1 W !!,"No action Taken",! G FINALQ
"RTN","IBDFDE1",30,0)
 I Y<1 D DEL S:'IBQUIT IBDREDIT=1 G FINALQ
"RTN","IBDFDE1",31,0)
 I Y'=1 G FINALQ
"RTN","IBDFDE1",32,0)
 M IBDF=IBDSEL
"RTN","IBDFDE1",33,0)
 ;I $G(^DPT(DFN,"S",IBDF("APPT"),0))="" D FNDAPPT I 'IBDOK W !!,"No action Taken",! Q
"RTN","IBDFDE1",34,0)
 I $G(IBDF("SAVE")) M ^TMP("IBD-SAVED",$J)=IBDF ;don't save checkout data
"RTN","IBDFDE1",35,0)
 M IBDF=IBDCO
"RTN","IBDFDE1",36,0)
 W !!,"Sending Data to PCE..."
"RTN","IBDFDE1",37,0)
 D SEND^IBDFRPC4(.RESULT,.IBDF)
"RTN","IBDFDE1",38,0)
 W $S($G(RESULT(0)):" Successful",1:" Unsuccessful"),!!
"RTN","IBDFDE1",39,0)
 I $D(IBDSTRT) S IBDFIN=$H S IBDTIME=$$HDIFF^XLFDT(IBDFIN,IBDSTRT,2)
"RTN","IBDFDE1",40,0)
 S PARAM=$P($G(^IBD(357.09,1,0)),"^",7)
"RTN","IBDFDE1",41,0)
 I PARAM=3 D DISP
"RTN","IBDFDE1",42,0)
 I PARAM,$D(PXCA("ERROR"))!($D(PXCA("WARNING"))) D ERR
"RTN","IBDFDE1",43,0)
 I $G(IBDTIME) D
"RTN","IBDFDE1",44,0)
 .W !!,"Elapsed time for data entry: ",IBDTIME," seconds.",!!
"RTN","IBDFDE1",45,0)
 .S IBDF("SECONDS")=IBDTIME,IBDF("USER")=DUZ
"RTN","IBDFDE1",46,0)
 .D ETIME^IBDFBK1(.RESULT,.IBDF)
"RTN","IBDFDE1",47,0)
 I '$G(IBDREDIT),$P($G(^IBD(357.09,1,0)),"^",6) D MAKAPPT
"RTN","IBDFDE1",48,0)
FINALQ K SDFN,ZTSK,SECONDS,LEX,ORVP,SEL1,PXCAVSIT,PXCA,PXCASTAT
"RTN","IBDFDE1",49,0)
 Q
"RTN","IBDFDE1",50,0)
 ;
"RTN","IBDFDE1",51,0)
DEL ; -- delete selected entry
"RTN","IBDFDE1",52,0)
 N I,J,DIR,DIRUT,DUOUT,DTOUT,CNT,CNTD,IBD,IBD1,IBDEL
"RTN","IBDFDE1",53,0)
 S CNT=0
"RTN","IBDFDE1",54,0)
 W !
"RTN","IBDFDE1",55,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Do you want to delete an item"
"RTN","IBDFDE1",56,0)
 S DIR("?")="Enter 'Yes' if you want to delete an item or 'No' to just add more items."
"RTN","IBDFDE1",57,0)
 D ^DIR K DIR
"RTN","IBDFDE1",58,0)
 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBDFDE1",59,0)
 Q:Y<1
"RTN","IBDFDE1",60,0)
 S IBD=0 F  S IBD=$O(IBDSEL(IBD)) Q:IBD=""  S CNT=CNT+1,IBDEL(CNT)=IBD D LINE(CNT,IBDSEL(IBD))
"RTN","IBDFDE1",61,0)
 Q:CNT<1
"RTN","IBDFDE1",62,0)
 S DIR(0)="L^1:"_CNT D ^DIR K DIR
"RTN","IBDFDE1",63,0)
 I $D(DIRUT) W !,"Nothing Deleted" Q
"RTN","IBDFDE1",64,0)
 F IBD1=1:1 S IBDEL=$P(Y,",",IBD1) Q:IBDEL=""  D
"RTN","IBDFDE1",65,0)
 .W !,"Deleting "_IBDEL
"RTN","IBDFDE1",66,0)
 .S QLFR=$P(IBDSEL(IBDEL(IBDEL)),"^",6)
"RTN","IBDFDE1",67,0)
 .I QLFR'="" K IBDPI(+IBDSEL(IBDEL(IBDEL)),QLFR)
"RTN","IBDFDE1",68,0)
 .K IBDPI(+IBDSEL(IBDEL(IBDEL)),IBDEL(IBDEL))
"RTN","IBDFDE1",69,0)
 .K IBDSEL(IBDEL(IBDEL))
"RTN","IBDFDE1",70,0)
 .K IBDEL(IBDEL)
"RTN","IBDFDE1",71,0)
 .S CNTD=$G(CNTD)+1
"RTN","IBDFDE1",72,0)
 I $G(CNTD)=CNT S IBDSEL(0)=0
"RTN","IBDFDE1",73,0)
 W !
"RTN","IBDFDE1",74,0)
DELQ Q
"RTN","IBDFDE1",75,0)
 ;
"RTN","IBDFDE1",76,0)
LINE(CNT,IBD) ; -- write one line of text
"RTN","IBDFDE1",77,0)
 W !,?3,CNT,?7,$S($P(IBD,"^",8)'="":$P(IBD,"^",8),1:$E($P($P($G(^IBE(357.6,+IBD,0)),"^"),"INPUT ",2),1,22)),?31,$E($P(IBD,"^",3),1,30)
"RTN","IBDFDE1",78,0)
 W ?62,$S($P(IBD,"^",10)'="":$P(IBD,"^",10),$P($G(^IBE(357.6,+IBD,0)),"^")="GMP INPUT CLINIC COMMON PROBLEMS":$$LEX($P(IBD,"^",2)),1:$P(IBD,"^",2))
"RTN","IBDFDE1",79,0)
 W ?70,$E($S($P(IBD,"^",9)'="":$P(IBD,"^",9),1:$P(IBD,"^",6)),1,10)
"RTN","IBDFDE1",80,0)
 Q
"RTN","IBDFDE1",81,0)
LEX(VAL) ; -- get output of lexicon entry
"RTN","IBDFDE1",82,0)
 I $D(^LEX)>1 S X="LEXU" X ^%ZOSF("TEST") I $T S VAL=$$ICDONE^LEXU(VAL) S:$L(VAL)<1 VAL=799.9 Q VAL  ;clinical lexicon next version to be in ^LEX
"RTN","IBDFDE1",83,0)
 S X="GMPTU" X ^%ZOSF("TEST") I $T S VAL=$$ICDONE^GMPTU(VAL) S:$L(VAL)<1 VAL=799.9 Q VAL
"RTN","IBDFDE1",84,0)
 Q 799.9
"RTN","IBDFDE1",85,0)
 ;
"RTN","IBDFDE1",86,0)
MAKAPPT ; -- ask make appointment stuff
"RTN","IBDFDE1",87,0)
 N %I,%T,I,J,X,Y,DIC,DA,DIR,DIRUT,DUOUT,IBDFN,RTCLEX,SDALLE,SDATD,SDAV,SDCLN,SDDECOD,SDEC,SDEMP,SDFN,SDHX,SDLOCK,SDMADE,SDNOT,SDOEL,SDPL,SDRE,SDRT,SDSOH,SDT,SDTTM,SDY,VSITON,VSIT,XQXFLG
"RTN","IBDFDE1",88,0)
 ;
"RTN","IBDFDE1",89,0)
 I $G(IBDF("NOAPPT")) G MAKAPQ
"RTN","IBDFDE1",90,0)
 S DIR("?")="Enter 'Yes' to make another appointment for this patient or 'No' if no appointment is to be made."
"RTN","IBDFDE1",91,0)
 S DIR(0)="Y",DIR("A")="Do you wish to make a follow-up appointment for "_$P(^DPT(IBDF("DFN"),0),"^")
"RTN","IBDFDE1",92,0)
 D ^DIR K DIR
"RTN","IBDFDE1",93,0)
 I $D(DUOUT)!($D(DTOUT)) S IBQUIT=1 G MAKAPQ
"RTN","IBDFDE1",94,0)
 I Y<1 G MAKAPQ
"RTN","IBDFDE1",95,0)
 ;
"RTN","IBDFDE1",96,0)
 S (SDFN,IBDFN,DFN)=$G(IBDF("DFN")) ;use same patient, don't ask patient, ask clinic
"RTN","IBDFDE1",97,0)
 ;S SDCLN=IBDF("CLINIC") ;use same clinic, don't ask clinic
"RTN","IBDFDE1",98,0)
 D ^SDM
"RTN","IBDFDE1",99,0)
 S DFN=IBDFN K SDFN
"RTN","IBDFDE1",100,0)
MAKAPQ Q
"RTN","IBDFDE1",101,0)
 ;
"RTN","IBDFDE1",102,0)
ERR ; -- if processing of errors is on do display
"RTN","IBDFDE1",103,0)
 ;    ask if want to re-edit
"RTN","IBDFDE1",104,0)
 N I,J,ERR,LCNT,DIR,DIRUT,DUOUT
"RTN","IBDFDE1",105,0)
 S LCNT=0
"RTN","IBDFDE1",106,0)
 D EW^IBDFBK2(.ERR,.PXCA,.LCNT)
"RTN","IBDFDE1",107,0)
 ;
"RTN","IBDFDE1",108,0)
 W !!!,"The following Error(s) occured while validating data in PCE for: ",$P($G(^DPT(IBDF("DFN"),0)),"^")
"RTN","IBDFDE1",109,0)
 S I=0 F  S I=$O(ERR(I)) Q:'I  W !?4,$E(ERR(I),1,75)  I $L(ERR(I))>75 W !?10,$E(ERR(I),76,140)
"RTN","IBDFDE1",110,0)
 W !
"RTN","IBDFDE1",111,0)
 Q:$G(IBDF("SAVE"))
"RTN","IBDFDE1",112,0)
 S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you want to Re-Edit"
"RTN","IBDFDE1",113,0)
 D ^DIR K DIR
"RTN","IBDFDE1",114,0)
 I Y=1 D
"RTN","IBDFDE1",115,0)
 .S IBDREDIT=1
"RTN","IBDFDE1",116,0)
 .K IBDF("CO"),IBDF("IR"),IBDF("SC"),IBDF("EC"),IBDF("AO")
"RTN","IBDFDE1",117,0)
 .S I=0 F  S I=$O(IBDF(I)) Q:'I  K IBDF(I)
"RTN","IBDFDE1",118,0)
 I $D(DIRUT) S IBQUIT=1
"RTN","IBDFDE1",119,0)
 Q
"RTN","IBDFDE1",120,0)
 ;
"RTN","IBDFDE1",121,0)
DISP ; -- display data based on pxca array
"RTN","IBDFDE1",122,0)
 N I,LST,LCNT
"RTN","IBDFDE1",123,0)
 S LCNT=0
"RTN","IBDFDE1",124,0)
 D LSTDATA^IBDFBK3(.LST,.PXCA,.LCNT)
"RTN","IBDFDE1",125,0)
 W !!!,"The following data was sent to PCE for: ",$P($G(^DPT(IBDF("DFN"),0)),"^")
"RTN","IBDFDE1",126,0)
 W !,?4,"Clinic: ",$P($G(^SC(+$P($G(PXCA("ENCOUNTER")),"^",3),0)),"^")," at ",$$FMTE^XLFDT(+$G(PXCA("ENCOUNTER")))
"RTN","IBDFDE1",127,0)
 S I=0 F  S I=$O(LST(I)) Q:'I  W !?4,$E(LST(I),1,75) I $L(LST(I))>75 W !?10,$E(LST(I),76,140)
"RTN","IBDFDE1",128,0)
 W !
"RTN","IBDFDE1",129,0)
 Q
"RTN","IBDFDE1",130,0)
 ;
"RTN","IBDFDE1",131,0)
FNDAPPT ; -- if form is not associated with an appointment see any in clinic
"RTN","IBDFDE1",132,0)
 I $G(IBDSAEOK) S IBDOK=1 G FNDQ
"RTN","IBDFDE1",133,0)
 N IBDI,IBDJ,X,NODE,CNT,IOINHI,IOINORM,NEWAPPT,CLNAM,FORMLST,DIR,DIRUT,DUOUT,DTOUT
"RTN","IBDFDE1",134,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBDFDE1",135,0)
 S IBDI=$E(IBDF("APPT"),1,7),IBDJ=IBDI+.24,CNT=0
"RTN","IBDFDE1",136,0)
 F  S IBDI=$O(^DPT(DFN,"S",IBDI)) Q:'IBDI!(IBDI>IBDJ)  D  G:CNT<1 FNDQ
"RTN","IBDFDE1",137,0)
 .S NODE=$G(^DPT(DFN,"S",IBDI,0))
"RTN","IBDFDE1",138,0)
 .Q:+NODE'=IBDF("CLINIC")
"RTN","IBDFDE1",139,0)
 .S CNT=CNT+1,CLNAM=$E($P(^SC(IBDF("CLINIC"),0),"^"),1,20),NEWAPPT(CNT)=IBDI
"RTN","IBDFDE1",140,0)
 .I CNT=1 W $C(7),!!,IOINHI,"Warning:","  You are about to create a stand alone visit for: ",IOINORM,!,$E($P(^DPT(DFN,0),"^"),1,25),?27,CLNAM,?49,$$FMTE^XLFDT(IBDF("APPT"))
"RTN","IBDFDE1",141,0)
 .S FORMLST=$$FINDID^IBDF18C(DFN,IBDI,"",1)
"RTN","IBDFDE1",142,0)
 .W !,IOINHI,"Patient has appointment in ",CLNAM,?49,$$FMTE^XLFDT(IBDI)," ID: ",$TR($E(FORMLST,1,($L(FORMLST)-1)),"^",","),IOINORM
"RTN","IBDFDE1",143,0)
 ;
"RTN","IBDFDE1",144,0)
 W ! S IBDOK=$$ASKYN^IBDFDE0("Okay to Create Stand Alone Encounter",0) W !
"RTN","IBDFDE1",145,0)
 I $G(IBDOK)<0 S IBDOK=0
"RTN","IBDFDE1",146,0)
 G:IBDOK FNDQ
"RTN","IBDFDE1",147,0)
 ;
"RTN","IBDFDE1",148,0)
 ; -- ask if want to use appt. date time
"RTN","IBDFDE1",149,0)
 I CNT=1 D
"RTN","IBDFDE1",150,0)
 .S IBDOK=$$ASKYN^IBDFDE0("Okay to use "_$$FMTE^XLFDT(NEWAPPT(1))_" appointment date/time",1) W !
"RTN","IBDFDE1",151,0)
 .I $G(IBDOK)<0 S IBDOK=0
"RTN","IBDFDE1",152,0)
 .I IBDOK S IBDF("APPT")=NEWAPPT(1)
"RTN","IBDFDE1",153,0)
 ;
"RTN","IBDFDE1",154,0)
 I CNT>1 D
"RTN","IBDFDE1",155,0)
 .S DIR("A")=""
"RTN","IBDFDE1",156,0)
 .S DIR(0)=""
"RTN","IBDFDE1",157,0)
FNDQ Q
"RTN","IBDFDE10")
0^384^B716836
"RTN","IBDFDE10",1,0)
IBDFDE10 ;ALB/AAS - AICS Data entry utility ; 5-MAR-97
"RTN","IBDFDE10",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE10",3,0)
 ;
"RTN","IBDFDE10",4,0)
SCREEN(Y,IBDDT) ; -- Copy of provider screen from sdutl2
"RTN","IBDFDE10",5,0)
 ;
"RTN","IBDFDE10",6,0)
 ; INPUT:      Y = ien of file 200
"RTN","IBDFDE10",7,0)
 ;         IBDDT = today's date
"RTN","IBDFDE10",8,0)
 ;
"RTN","IBDFDE10",9,0)
 ; OUTPUT: 1 to select; 0 to not select
"RTN","IBDFDE10",10,0)
 ;
"RTN","IBDFDE10",11,0)
 N IBDINACT,IBDT,IBDY S IBDY=0
"RTN","IBDFDE10",12,0)
 S:'+$G(IBDDT) IBDDT=DT
"RTN","IBDFDE10",13,0)
 I '+$G(Y) G SCRNQ
"RTN","IBDFDE10",14,0)
 ;
"RTN","IBDFDE10",15,0)
 S IBDINACT=$G(^VA(200,+Y,"PS"))
"RTN","IBDFDE10",16,0)
 I '$S(IBDINACT']"":1,'+$P(IBDINACT,"^",4):1,DT<+$P(IBDINACT,"^",4):1,1:0) G SCRNQ
"RTN","IBDFDE10",17,0)
 S IBDT=+$P($G(^VA(200,+Y,0)),U,11)
"RTN","IBDFDE10",18,0)
 I $S('IBDT:0,(IBDT<DT):1,1:0) G SCRNQ
"RTN","IBDFDE10",19,0)
 I $$GET^XUA4A72(Y,IBDDT)>0 S IBDY=1
"RTN","IBDFDE10",20,0)
SCRNQ Q IBDY
"RTN","IBDFDE2")
0^166^B49571691
"RTN","IBDFDE2",1,0)
IBDFDE2 ;ALB/AAS - AICS Data Entry, process selection lists ; 24-FEB-96
"RTN","IBDFDE2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE2",3,0)
 ;
"RTN","IBDFDE2",4,0)
% G ^IBDFDE
"RTN","IBDFDE2",5,0)
 ;
"RTN","IBDFDE2",6,0)
CHOICE(I) ; -- return ^tmp(ibd-lst,ibdfmien,ibdf(pi),ibdf(ien),i)
"RTN","IBDFDE2",7,0)
 Q $G(^TMP("IBD-LST",$J,+$G(IBDFMIEN),+$G(IBDF("PI")),+$G(IBDF("IEN")),+$G(I)))
"RTN","IBDFDE2",8,0)
 ;
"RTN","IBDFDE2",9,0)
LIST(RESULT,IBDF,IBDASK) ; -- Procedure
"RTN","IBDFDE2",10,0)
 ; -- Manual Data entry routine for Visit Type input
"RTN","IBDFDE2",11,0)
 ;    Input :  Result := call by reference, used to output results
"RTN","IBDFDE2",12,0)
 ;             IBDF("IEN")    := pointer to selection list (357.2)
"RTN","IBDFDE2",13,0)
 ;             IBDF("PI")     := pointer to input package interface
"RTN","IBDFDE2",14,0)
 ;             IBDF("DFN")    := pointer to patient (required for dynamic lists only)
"RTN","IBDFDE2",15,0)
 ;             IBDF("CLINIC") := pointer to hospital location (required for dyamic lists only)
"RTN","IBDFDE2",16,0)
 ;
"RTN","IBDFDE2",17,0)
 ;    Output:  Selections for input in IBDFDE1 (and eventually IBDFRPC4)
"RTN","IBDFDE2",18,0)
 ;             RESULT(0)      := count of selections (including previous)
"RTN","IBDFDE2",19,0)
 ;             RESULT(n)  $p1 := package interface
"RTN","IBDFDE2",20,0)
 ;                        $p2 := Code to send (usually ien) 
"RTN","IBDFDE2",21,0)
 ;                        $p3 := Text to send (from form or additional text) 
"RTN","IBDFDE2",22,0)
 ;                        $p4 := Header to send (from form) (optional)
"RTN","IBDFDE2",23,0)
 ;                        $p5 := Clinical lexicon pointer (from 357.2) (optional)
"RTN","IBDFDE2",24,0)
 ;                        $p6 := qualifier (optional)
"RTN","IBDFDE2",25,0)
 ;                        $p7 := ien of list (in 357.2)
"RTN","IBDFDE2",26,0)
 ;                       $p10 := external value (optional)
"RTN","IBDFDE2",27,0)
 ;
"RTN","IBDFDE2",28,0)
 N I,J,X,Y,CHOICE,RULE,ROW,QLFR,TEXT,TEXTU,CODE,NUMBER,OVER,SELECT,ANS,DISPTXT,HDR,NEXT,NEXT1,PICK,DA,DR,DIE,DIC,DIR,DIRUT,DUOUT,DTOUT,IBDEFLT,CNTH,OVER,IBDP,SELAST,IOINHI,IOINORM,ARRAY,VAR
"RTN","IBDFDE2",29,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBDFDE2",30,0)
 S IBQUIT=0,ANS=""
"RTN","IBDFDE2",31,0)
 I IBDF("TYPE")="MC" D MULT^IBDFDE4(.RESULT,.IBDF) G VSTQ
"RTN","IBDFDE2",32,0)
 ;
"RTN","IBDFDE2",33,0)
 ; -- check required variables
"RTN","IBDFDE2",34,0)
 I '$D(IBDFMIEN)!('$D(IBDF("PI")))!('$D(IBDF("IEN"))) W !!,"Required variables not defined for this list:",!,"Form =",$G(IBDFMIEN),!,"Interface = ",$G(IBDF("PI")),!,"List = ",$G(IBDF("IEN")) G VSTQ
"RTN","IBDFDE2",35,0)
 ;
"RTN","IBDFDE2",36,0)
 S VAR="^TMP(""IBD-LST"",$J,"_+$G(IBDFMIEN)_","_+$G(IBDF("PI"))_","_+$G(IBDF("IEN"))_")"
"RTN","IBDFDE2",37,0)
 I $$CHOICE(0)="" D OBJLST^IBDFRPC1(VAR,.IBDF) D COMPLST^IBDFDE5
"RTN","IBDFDE2",38,0)
 ;
"RTN","IBDFDE2",39,0)
 I '$D(^TMP("IBD-ASK",$J,IBDFMIEN,IBDASK)),$G(IBDF("IBDF")) S ^TMP("IBD-ASK",$J,IBDFMIEN,$$UP^XLFSTR(IBDASK),IBDF("IBDF"))=""
"RTN","IBDFDE2",40,0)
 ;
"RTN","IBDFDE2",41,0)
 I +$$CHOICE(0)<1,+$G(IBDF("PROVIDER PI"))'=IBDF("PI") G VSTQ ;list is empty, don't ask, unless its provider
"RTN","IBDFDE2",42,0)
 ;
"RTN","IBDFDE2",43,0)
 ; -- look at zero node, find qualifiers and selection rule
"RTN","IBDFDE2",44,0)
 D RULES^IBDFDE22
"RTN","IBDFDE2",45,0)
 ;
"RTN","IBDFDE2",46,0)
 I $G(IBDREDIT) S ANS=" " D CHK^IBDFDE22 S ANS="" G:'OVER VSTQ N IBDREDIT
"RTN","IBDFDE2",47,0)
 ;
"RTN","IBDFDE2",48,0)
 ; -- set dir("b")
"RTN","IBDFDE2",49,0)
 I $D(IBDPI(IBDF("PI")))>1 D DEFAULT^IBDFDE21
"RTN","IBDFDE2",50,0)
 ;
"RTN","IBDFDE2",51,0)
OVER ; -- ask or re-ask for selection(s) from list
"RTN","IBDFDE2",52,0)
 S OVER=0
"RTN","IBDFDE2",53,0)
 S CNTH=1,I=0 F  S I=$O(RULE(I)) Q:'I  D
"RTN","IBDFDE2",54,0)
 . IF RULE(I)=0 S DIR("?",CNTH)="Any Number of "_$G(IOINHI)_QLFR(I)_$S(QLFR(I)'="":" ",1:"")_IBDASK_$G(IOINORM)_" allowed (including zero)." S CNTH=CNTH+1 Q
"RTN","IBDFDE2",55,0)
 . IF RULE(I)=1 S DIR("?",CNTH)="Exactly one "_IOINHI_QLFR(I)_$S(QLFR(I)'="":" ",1:"")_IBDASK_$G(IOINORM)_" Required." S CNTH=CNTH+1 Q
"RTN","IBDFDE2",56,0)
 . IF RULE(I)=2 S DIR("?",CNTH)="At most one "_$G(IOINHI)_QLFR(I)_$S(QLFR(I)'="":" ",1:"")_IBDASK_$G(IOINORM)_" allowed." S CNTH=CNTH+1 Q
"RTN","IBDFDE2",57,0)
 . IF RULE(I)=3 S DIR("?",CNTH)="At least 1 (1 or more) "_$G(IOINHI)_QLFR(I)_$S(QLFR(I)'="":" ",1:"")_IBDASK_$G(IOINORM)_" Required." S CNTH=CNTH+1 Q
"RTN","IBDFDE2",58,0)
 ;
"RTN","IBDFDE2",59,0)
 S DIR("?",CNTH)="",CNTH=CNTH+1
"RTN","IBDFDE2",60,0)
 S DIR("?")="Select an item from the form, enter by name or number.  Enter '??' to see the list of items on the form.  When editing, press enter to accept, '@' to delete, or enter a new selection."
"RTN","IBDFDE2",61,0)
 I $G(IBDF("OTHER")) S DIR("?")=DIR("?")_"  Or enter an item written on the form."
"RTN","IBDFDE2",62,0)
 ;
"RTN","IBDFDE2",63,0)
 S DIR("??")="^D LST^IBDFDE21"
"RTN","IBDFDE2",64,0)
 ;
"RTN","IBDFDE2",65,0)
 ; -- default provider is 1st provider
"RTN","IBDFDE2",66,0)
 I +$G(IBDF("PROVIDER PI"))=IBDF("PI") D  I $G(SELECT) D SEL^IBDFDE21(SELECT),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",67,0)
 .S SELECT=0
"RTN","IBDFDE2",68,0)
 .I $G(IBDF("PROVIDER")) Q
"RTN","IBDFDE2",69,0)
 .I '$G(IBDREDIT),'$D(IBDPI(IBDF("PI"))),+$$CHOICE(0)=1,+$$PRDEF^IBDFRPC3(IBDF("CLINIC")) S ANS=" ",SELECT=1 W !!,IOINHI,"Using Default Provider: ",IOINORM Q
"RTN","IBDFDE2",70,0)
 .Q:$P(IBDF("PROVIDER PI"),"^",2)  ;not on form don't ask if not default
"RTN","IBDFDE2",71,0)
 .Q:$D(IBDPI(IBDF("PI")))  ;one already select
"RTN","IBDFDE2",72,0)
 .I $$PRDEF^IBDFRPC3(IBDF("CLINIC")) S DIR("B")=$P($$CHOICE(1),"^")
"RTN","IBDFDE2",73,0)
 ;
"RTN","IBDFDE2",74,0)
 S DIR(0)="FO^1:40^I $D(X),X="" "" K X W !!,$G(IOINHI),""Spacebar Return Not allowed!"",$G(IOINORM)"
"RTN","IBDFDE2",75,0)
 S DIR("A")="Select "_$G(IBDASK)
"RTN","IBDFDE2",76,0)
 I $G(^TMP("IBD-PI-CNT",$J,IBDF("PI")))>1 S DIR("A")=DIR("A")_" (Page "_IBDF("PAGE")_")"
"RTN","IBDFDE2",77,0)
 D ^DIR K DIR
"RTN","IBDFDE2",78,0)
 I $G(IBDEFLT(IBDF("PI")))'="",Y=IBDEFLT(IBDF("PI")) S Y="" ; on re-edit, accepting last entry same as entering nothing.
"RTN","IBDFDE2",79,0)
 S ANS=$$UP^XLFSTR(Y)
"RTN","IBDFDE2",80,0)
 I ANS="",$D(DIRUT),$G(IBDEFLT(IBDF("PI")))'="",$G(SELAST) K IBDPI(IBDF("PI"),SELAST),IBDSEL(SELAST) W "  Deleted!" ;user type "@" at prompt
"RTN","IBDFDE2",81,0)
 I ANS="" D CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",82,0)
 I ANS["^",ANS'="^" D  G VSTOVER
"RTN","IBDFDE2",83,0)
 .S GOTO=$$UP^XLFSTR($P(ANS,"^",2))
"RTN","IBDFDE2",84,0)
 .I GOTO="?"!(GOTO="??") X "W !!,""Valid Blocks to Jump to: "" S IBDX=0 F  S IBDX=$O(^TMP(""IBD-ASK"",$J,IBDFMIEN,IBDX)) Q:IBDX=""""  W !,?6,IBDX" S OVER=1 Q
"RTN","IBDFDE2",85,0)
 .S X=$O(^TMP("IBD-ASK",$J,IBDFMIEN,GOTO))
"RTN","IBDFDE2",86,0)
 .I X'="",X[GOTO W $E(X,$L(GOTO)+1,$L(X)) S IBDF("GOTO")=+$O(^TMP("IBD-ASK",$J,IBDFMIEN,X,""))-1,IBDREDIT=1 Q
"RTN","IBDFDE2",87,0)
 .S IBQUIT=1
"RTN","IBDFDE2",88,0)
 I $D(DIRUT) S IBQUIT=1 G VSTQ
"RTN","IBDFDE2",89,0)
 S SELECT=0
"RTN","IBDFDE2",90,0)
 ;
"RTN","IBDFDE2",91,0)
 ; -- first check for exact code matches
"RTN","IBDFDE2",92,0)
 I $G(NUMBER(ANS)) S SELECT=$G(NUMBER(ANS)) D SEL^IBDFDE21(SELECT),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",93,0)
 ;
"RTN","IBDFDE2",94,0)
 S ARRAY="^TMP(""IBD-LCODE"",$J,IBDFMIEN,IBDF(""PI""),IBDF(""IEN""))"
"RTN","IBDFDE2",95,0)
 I $G(@ARRAY@(" "_ANS,1)),'$O(@ARRAY@(" "_ANS,1)) S SELECT=@ARRAY@(" "_ANS,1) D SEL^IBDFDE21(SELECT),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",96,0)
 I $G(@ARRAY@(" "_ANS,1)) D  I $G(SELECT) D SEL^IBDFDE21(SELECT),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",97,0)
 .; -- more than one code the same number
"RTN","IBDFDE2",98,0)
 .S SELECT=$$PARTLST^IBDFDE21(ARRAY," "_ANS," "_ANS)
"RTN","IBDFDE2",99,0)
 ;
"RTN","IBDFDE2",100,0)
 ; -- next check for paritial code answers
"RTN","IBDFDE2",101,0)
 S ANS1=" "_ANS
"RTN","IBDFDE2",102,0)
 S NEXT=$O(@ARRAY@(ANS1)) D  I SELECT D SEL^IBDFDE21(SELECT),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",103,0)
 .Q:NEXT=""!($E(NEXT,1,$L(ANS1))'=ANS1)
"RTN","IBDFDE2",104,0)
 .I $O(@ARRAY@(NEXT,1)) S SELECT=$$PARTLST^IBDFDE21(ARRAY,NEXT,ANS1) Q
"RTN","IBDFDE2",105,0)
 .S NEXT1=$O(@ARRAY@(NEXT)) I $E(NEXT1,1,$L(ANS1))=ANS1 S SELECT=$$PARTLST^IBDFDE21(ARRAY,NEXT,ANS1) Q  ;Not Unique answer
"RTN","IBDFDE2",106,0)
 .W $E(NEXT,($L(ANS1)+1),$L(NEXT))
"RTN","IBDFDE2",107,0)
 .S SELECT=$G(@ARRAY@(NEXT,1))
"RTN","IBDFDE2",108,0)
 ;
"RTN","IBDFDE2",109,0)
 ; -- check for exact text matches
"RTN","IBDFDE2",110,0)
 S ARRAY="^TMP(""IBD-LTEXT"",$J,IBDFMIEN,IBDF(""PI""),IBDF(""IEN""))"
"RTN","IBDFDE2",111,0)
 I $G(@ARRAY@(ANS,1)),'$O(@ARRAY@(ANS,1)) S SELECT=@ARRAY@(ANS,1)  D SEL^IBDFDE21(SELECT),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",112,0)
 I $G(@ARRAY@(ANS,1)) D  I $G(SELECT) D SEL^IBDFDE21(SELECT),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",113,0)
 .; -- more than one description the same
"RTN","IBDFDE2",114,0)
 .S SELECT=$$PARTLST^IBDFDE21(ARRAY,ANS,ANS)
"RTN","IBDFDE2",115,0)
 ;
"RTN","IBDFDE2",116,0)
 ; -- next check for paritial text answers
"RTN","IBDFDE2",117,0)
 S NEXT=$O(@ARRAY@(ANS)) D  I SELECT D SEL^IBDFDE21(SELECT),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",118,0)
 .Q:NEXT=""!($E(NEXT,1,$L(ANS))'=ANS)
"RTN","IBDFDE2",119,0)
 .I $O(@ARRAY@(NEXT,1)) S SELECT=$$PARTLST^IBDFDE21(ARRAY,NEXT,ANS) Q
"RTN","IBDFDE2",120,0)
 .S NEXT1=$O(@ARRAY@(NEXT)) I $E(NEXT1,1,$L(ANS))=ANS S SELECT=$$PARTLST^IBDFDE21(ARRAY,NEXT,ANS) Q  ;Not Unique answer
"RTN","IBDFDE2",121,0)
 .W $E(NEXT,($L(ANS)+1),$L(NEXT))
"RTN","IBDFDE2",122,0)
 .S SELECT=$G(@ARRAY@(NEXT,1))
"RTN","IBDFDE2",123,0)
 ;
"RTN","IBDFDE2",124,0)
 I ANS'="" S SEL=$$OTHER^IBDFDE21(ANS) I SEL'="" D SEL^IBDFDE21(SEL),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",125,0)
 I ANS'="" W " ??  ",$C(7),"Not Found" G OVER
"RTN","IBDFDE2",126,0)
 ;
"RTN","IBDFDE2",127,0)
VSTOVER K SELAST G:OVER OVER
"RTN","IBDFDE2",128,0)
 I $G(ASKOTHER) F  S SEL=$$OTHER^IBDFDE21("") Q:SEL=""  D SEL^IBDFDE21(SEL),CHK^IBDFDE22 Q:'$G(ASKOTHER)
"RTN","IBDFDE2",129,0)
 ;
"RTN","IBDFDE2",130,0)
VSTQ ; -- kill array for dynamic lists
"RTN","IBDFDE2",131,0)
 I $P($G(^IBE(357.6,IBDF("PI"),0)),"^",14) S:IBDF("PI")'=$G(IBDF("PROVIDER PI")) IBDF("DYNAMIC")=1 K ^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI")),^TMP("IBD-LTEXT",$J,IBDFMIEN,IBDF("PI")),^TMP("IBD-LCODE",$J,IBDFMIEN,IBDF("PI"))
"RTN","IBDFDE2",132,0)
 K ^TMP("IB",$J,"INTERFACES")
"RTN","IBDFDE2",133,0)
 K IBDF("OTHER"),ASKOTHER
"RTN","IBDFDE2",134,0)
 Q
"RTN","IBDFDE21")
0^167^B73461259
"RTN","IBDFDE21",1,0)
IBDFDE21 ;ALB/AAS - AICS Data Entry, process selection lists ; 24-FEB-96 [ 11/13/96  3:58 PM ]
"RTN","IBDFDE21",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE21",3,0)
 ;
"RTN","IBDFDE21",4,0)
% G ^IBDFDE
"RTN","IBDFDE21",5,0)
 ;
"RTN","IBDFDE21",6,0)
SEL(SEL) ; -- Build results array
"RTN","IBDFDE21",7,0)
 N IBDX,DSPTXT,IBQUIT,IBDQL,QCNT,IBDQLFR
"RTN","IBDFDE21",8,0)
 S IBQUIT=0
"RTN","IBDFDE21",9,0)
 ;
"RTN","IBDFDE21",10,0)
 S IBDQL=$$QLFR(.RULE,.QLFR)
"RTN","IBDFDE21",11,0)
 Q:IBQUIT!(IBDQL="^")
"RTN","IBDFDE21",12,0)
 S IBDQLFR=$P(IBDQL,"^",1) D SEL1
"RTN","IBDFDE21",13,0)
 ;
"RTN","IBDFDE21",14,0)
 F QCNT=2:1 S IBDQLFR=$P(IBDQL,"^",QCNT) Q:IBDQLFR=""  D SEL1
"RTN","IBDFDE21",15,0)
 Q
"RTN","IBDFDE21",16,0)
 ;
"RTN","IBDFDE21",17,0)
SEL1 ; -- build selections
"RTN","IBDFDE21",18,0)
 S IBDX=$G(RESULT(0))+1,RESULT(0)=IBDX
"RTN","IBDFDE21",19,0)
 I +SEL=SEL S CHOICE=$$CHOICE^IBDFDE2(SEL)
"RTN","IBDFDE21",20,0)
 I +SEL'=SEL S CHOICE=SEL
"RTN","IBDFDE21",21,0)
 S DISPTXT=$S($P(CHOICE,"^",5)="":$P(CHOICE,"^"),1:$P(CHOICE,"^",5))
"RTN","IBDFDE21",22,0)
 W:+$G(QCNT)<2 "  ",DISPTXT,"   ",$S($P(CHOICE,"^",2)'="":$P(CHOICE,"^",2),$P($G(^IBE(357.6,IBDF("PI"),0)),"^")="GMP INPUT CLINIC COMMON PROBLEMS":$$LEX^IBDFDE1($P(CHOICE,"^",3)),1:$P(CHOICE,"^",3)),"   ",$P(CHOICE,"^",8)_"   ",$P(CHOICE,"^",4)
"RTN","IBDFDE21",23,0)
 ;
"RTN","IBDFDE21",24,0)
 S RESULT(IBDX)=IBDF("PI")_"^"_$P(CHOICE,"^",3)_"^"_DISPTXT_"^"_$P(CHOICE,"^",8)_"^"_$P(CHOICE,"^",6)_"^"_IBDQLFR_"^"_$G(IBDF("IEN"))_"^^"_$P(CHOICE,"^",9)_"^"_$P(CHOICE,"^",2)
"RTN","IBDFDE21",25,0)
 S IBDPI(IBDF("PI"),IBDX)=RESULT(IBDX)
"RTN","IBDFDE21",26,0)
 ;
"RTN","IBDFDE21",27,0)
 ; --validate code for active problem list
"RTN","IBDFDE21",28,0)
 I $P($G(^IBE(357.6,IBDF("PI"),0)),"^")="PX INPUT PATIENT ACTIVE PROBLEM" D
"RTN","IBDFDE21",29,0)
 .N X S X=$P(CHOICE,"^",2) Q:X=""
"RTN","IBDFDE21",30,0)
 .I X=799.9 W !,$C(7),IOINHI,"Warning: The ICD9 Diagnosis associated with this problem needs to be updated!",IOINORM Q
"RTN","IBDFDE21",31,0)
 .D TESTICD^IBDFN7
"RTN","IBDFDE21",32,0)
 .I '$D(X) W !,$C(7),IOINHI,"Warning: The ICD9 code associated with this problem is inactive.",IOINORM
"RTN","IBDFDE21",33,0)
 .;I $D(X) W !,"This is a valid icd9 code"
"RTN","IBDFDE21",34,0)
 ;
"RTN","IBDFDE21",35,0)
 ; -- send second and third codes if applicable
"RTN","IBDFDE21",36,0)
 Q:"PRIMARYSECONDARY"'[IBDQLFR
"RTN","IBDFDE21",37,0)
 N I F I=10,11 I $P(CHOICE,"^",I)]"" D
"RTN","IBDFDE21",38,0)
 .S IBDX=$G(RESULT(0))+1,RESULT(0)=IBDX
"RTN","IBDFDE21",39,0)
 .S RESULT(IBDX)=IBDF("PI")_"^"_$P(CHOICE,"^",I)_"^"_DISPTXT_"^"_$P(CHOICE,"^",8)_"^"_$P(CHOICE,"^",6)_"^"_"SECONDARY"_"^"_$G(IBDF("IEN"))_"^^"_$P(CHOICE,"^",9)
"RTN","IBDFDE21",40,0)
 .S IBDPI(IBDF("PI"),IBDX)=RESULT(IBDX)
"RTN","IBDFDE21",41,0)
 Q
"RTN","IBDFDE21",42,0)
 ;
"RTN","IBDFDE21",43,0)
QLFR(RULE,QLFR) ; -- ask Qualifier from array, impose rules
"RTN","IBDFDE21",44,0)
 N I,X,IBDQ,IBDQ1,QCNT,CNT,ANS,IBDI,OVER,X1,X2,NUM
"RTN","IBDFDE21",45,0)
 S IBDQ="",CNT=0
"RTN","IBDFDE21",46,0)
 ;
"RTN","IBDFDE21",47,0)
 ; -- if only 1 qualifier use it
"RTN","IBDFDE21",48,0)
 I RULE=1 S IBDQ=$G(QLFR(+$O(QLFR(0)))) W "  ",IBDQ G QLFRQ
"RTN","IBDFDE21",49,0)
 ;
"RTN","IBDFDE21",50,0)
 S IBDI=0
"RTN","IBDFDE21",51,0)
 F  S IBDI=$O(QLFR(IBDI)) Q:'IBDI  S X=$G(QLFR(IBDI)) I X'="" D
"RTN","IBDFDE21",52,0)
 .S CNT=CNT+1,X(CNT)=X,X2(X)=X
"RTN","IBDFDE21",53,0)
 .I '$D(X1($E(X),1)) S X1($E(X),1)=X Q
"RTN","IBDFDE21",54,0)
 .S NUM=$O(X1($E(X),""),-1) S X1($E(X),NUM+1)=X
"RTN","IBDFDE21",55,0)
 I CNT=1 S IBDQ=$G(X(CNT)) W "  ",IBDQ G QLFRQ
"RTN","IBDFDE21",56,0)
 ;
"RTN","IBDFDE21",57,0)
OVER1 ;
"RTN","IBDFDE21",58,0)
 I CNT<1 G QLFRQ
"RTN","IBDFDE21",59,0)
 W !,IOINHI,"   Select a Qualifier",IOINORM
"RTN","IBDFDE21",60,0)
 I CNT>1 F I=1:1:CNT I X(I)'="" W !?6,I,?10,X(I)
"RTN","IBDFDE21",61,0)
 W !,"   Choose 1-",CNT,": " R ANS:DTIME
"RTN","IBDFDE21",62,0)
 I '$T!($E(ANS,1)="^") S IBDQ="",IBQUIT=1 G QLFRQ
"RTN","IBDFDE21",63,0)
 I ANS="" G OVER1
"RTN","IBDFDE21",64,0)
 S OVER=0
"RTN","IBDFDE21",65,0)
 I $E(ANS,1)="?" D HELP G OVER1
"RTN","IBDFDE21",66,0)
 I ANS=+ANS D  G:OVER OVER1
"RTN","IBDFDE21",67,0)
 .I ANS<1!(ANS>CNT) S OVER=1 Q
"RTN","IBDFDE21",68,0)
 .I $G(X(ANS))="" S OVER=1 Q
"RTN","IBDFDE21",69,0)
 .S IBDQ=X(ANS) W "  ",X(ANS)
"RTN","IBDFDE21",70,0)
 .W !
"RTN","IBDFDE21",71,0)
 I ANS'=+ANS D  G:OVER OVER1
"RTN","IBDFDE21",72,0)
 .S ANS1=ANS,QCNT=0,IBDQ1=""
"RTN","IBDFDE21",73,0)
 .F IBD=1:1 S ANS=$P(ANS1,",",IBD) Q:ANS=""!OVER  D ONEQLFR I 'OVER,IBDQ'="" S QCNT=QCNT+1,$P(IBDQ1,"^",QCNT)=IBDQ
"RTN","IBDFDE21",74,0)
 .S IBDQ=IBDQ1
"RTN","IBDFDE21",75,0)
 .K QCNT,IBDQ1
"RTN","IBDFDE21",76,0)
 ;
"RTN","IBDFDE21",77,0)
QLFRQ Q IBDQ
"RTN","IBDFDE21",78,0)
 ;
"RTN","IBDFDE21",79,0)
ONEQLFR ; -- parse qualifiers
"RTN","IBDFDE21",80,0)
 S ANS=$$UP^XLFSTR(ANS)
"RTN","IBDFDE21",81,0)
 I +ANS=ANS D  Q
"RTN","IBDFDE21",82,0)
 .I $G(X(ANS))="" W !,"'"_ANS_"' IS NOT A VALID SELECTION, RE-ENTER" S OVER=1 Q
"RTN","IBDFDE21",83,0)
 .S IBDQ=X(ANS) W "  ",X(ANS)
"RTN","IBDFDE21",84,0)
 ;
"RTN","IBDFDE21",85,0)
 I $L(ANS)=1,$G(X1(ANS,1))'="",$O(X1(ANS,1))="" S IBDQ=X1(ANS,1) W:ANS=ANS1 $E(X1(ANS,1),2,99) W:ANS'=ANS1 "  ",X1(ANS,1) Q
"RTN","IBDFDE21",86,0)
 I $G(X2(ANS))'="" S IBDQ=X2(ANS) W "  ",X2(ANS) Q
"RTN","IBDFDE21",87,0)
 I $L(ANS)=1,$G(X1(ANS,1))'="",$O(X1(ANS,1)) S OVER=1 W "  Ambiguous answer, enter the number." Q  ;S IBDQ=$$PARTLST("X1",ANS,ANS) W $E(X1(ANS,1),2,99) Q
"RTN","IBDFDE21",88,0)
 S OVER=1
"RTN","IBDFDE21",89,0)
 Q
"RTN","IBDFDE21",90,0)
 ;
"RTN","IBDFDE21",91,0)
LST ; -- List previous selections and selections to choose from.
"RTN","IBDFDE21",92,0)
 N I,CNT,IBQUIT,NUM
"RTN","IBDFDE21",93,0)
 ;
"RTN","IBDFDE21",94,0)
 ; -- list previous selections
"RTN","IBDFDE21",95,0)
 D PREVSEL
"RTN","IBDFDE21",96,0)
 ;
"RTN","IBDFDE21",97,0)
 ; -- list available choices
"RTN","IBDFDE21",98,0)
 S (IBQUIT,CNT)=0
"RTN","IBDFDE21",99,0)
 S NUM=+$$CHOICE^IBDFDE2(0)
"RTN","IBDFDE21",100,0)
 W !!,"Choose from: "
"RTN","IBDFDE21",101,0)
 S I=0 F  S I=$O(^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"),I)) Q:'I!(IBQUIT)  D
"RTN","IBDFDE21",102,0)
 .S CHOICE=$$CHOICE^IBDFDE2(I)
"RTN","IBDFDE21",103,0)
 .I '$P(CHOICE,"^",7) W !?16,IOINHI,$P(CHOICE,"^"),IOINORM Q
"RTN","IBDFDE21",104,0)
 .S CNT=CNT+1,NUMBER(CNT)=I
"RTN","IBDFDE21",105,0)
 .W !?3,CNT,?7,$S($P(CHOICE,"^",2)'="":$P(CHOICE,"^",2),1:$P(CHOICE,"^",3)),?16,$P(CHOICE,"^",1)
"RTN","IBDFDE21",106,0)
 .I NUM>15,NUM>I,'(CNT#15) D PAUSE^IBDFDE I 'IBQUIT W $C(13),$J("",55),$C(13)
"RTN","IBDFDE21",107,0)
 .;I NUM>15,CNT'=NUM,'(CNT#15) D READ I $G(LISTSEL)<1!($G(LISTSEL)>CNT) K LISTSEL
"RTN","IBDFDE21",108,0)
 .;I $G(LISTSEL) S SEL=NUMBER(LISTSEL)
"RTN","IBDFDE21",109,0)
 Q
"RTN","IBDFDE21",110,0)
 ;
"RTN","IBDFDE21",111,0)
PREVSEL ; -- List previous selections
"RTN","IBDFDE21",112,0)
 N I,CNT
"RTN","IBDFDE21",113,0)
 S CNT=0
"RTN","IBDFDE21",114,0)
 ;
"RTN","IBDFDE21",115,0)
 ; -- list previous selections
"RTN","IBDFDE21",116,0)
 I $D(IBDPI(IBDF("PI")))>1 S I=0 F  S I=$O(IBDPI(IBDF("PI"),I)) Q:'I  D
"RTN","IBDFDE21",117,0)
 .Q:$P(IBDPI(IBDF("PI"),I),"^",7)'=IBDF("IEN")  ; not the same list
"RTN","IBDFDE21",118,0)
 .S CNT=CNT+1
"RTN","IBDFDE21",119,0)
 .W:CNT=1 !!,IOINHI,"   You have previously selected: ",IOINORM
"RTN","IBDFDE21",120,0)
 .W !,?7,$S($P($G(^IBE(357.6,+IBDPI(IBDF("PI"),I),0)),"^")="GMP INPUT CLINIC COMMON PROBLEMS":$$LEX^IBDFDE1($P(IBDPI(IBDF("PI"),I),"^",2)),1:$P(IBDPI(IBDF("PI"),I),"^",2))
"RTN","IBDFDE21",121,0)
 .W ?16,$P(IBDPI(IBDF("PI"),I),"^",3),?50,$P(IBDPI(IBDF("PI"),I),"^",6)
"RTN","IBDFDE21",122,0)
 W !
"RTN","IBDFDE21",123,0)
 Q
"RTN","IBDFDE21",124,0)
 ;
"RTN","IBDFDE21",125,0)
DEFAULT ; -- compute default answer
"RTN","IBDFDE21",126,0)
 N CNT,SEL,NAME,PIECE,SELAST
"RTN","IBDFDE21",127,0)
 S (CNT,SEL,SELAST)=0
"RTN","IBDFDE21",128,0)
 S NAME=$P($G(^IBE(357.6,+IBDF("PI"),0)),"^")
"RTN","IBDFDE21",129,0)
 S PIECE=$S(NAME["INPUT PROCEDURE CODE":2,NAME["INPUT DIAGNOSIS CODE":2,NAME["INPUT VISIT TYPE":2,1:3)
"RTN","IBDFDE21",130,0)
 F  S SEL=$O(IBDPI(IBDF("PI"),SEL)) Q:'SEL  D
"RTN","IBDFDE21",131,0)
 .Q:$P(IBDPI(IBDF("PI"),SEL),"^",7)'=IBDF("IEN")  ; not the same list
"RTN","IBDFDE21",132,0)
 .S CNT=CNT+1,SELAST=SEL
"RTN","IBDFDE21",133,0)
 I $G(SELAST) S DIR("B")=$P(IBDPI(IBDF("PI"),SELAST),"^",PIECE),IBDEFLT(IBDF("PI"))=DIR("B")
"RTN","IBDFDE21",134,0)
 D PREVSEL
"RTN","IBDFDE21",135,0)
 Q
"RTN","IBDFDE21",136,0)
 ;
"RTN","IBDFDE21",137,0)
DEFPROV ; -- find default provider, not on form
"RTN","IBDFDE21",138,0)
 N SEL,IBDX
"RTN","IBDFDE21",139,0)
 S IBDF("PI")=$O(^IBE(357.6,"B","INPUT PROVIDER",0))
"RTN","IBDFDE21",140,0)
 Q:$D(IBDPI(IBDF("PI")))
"RTN","IBDFDE21",141,0)
 S SEL=$G(IBDF("PROVIDER")) I 'SEL S SEL=$$PRDEF^IBDFRPC3(IBDF("CLINIC"))
"RTN","IBDFDE21",142,0)
 Q:'SEL
"RTN","IBDFDE21",143,0)
 S $P(IBDF("PROVIDER PI"),"^",2)=1 ;flag not on form
"RTN","IBDFDE21",144,0)
 S IBDX=$G(IBDSEL(0))+1,IBDSEL(0)=IBDX
"RTN","IBDFDE21",145,0)
 S IBDSEL(IBDX)=IBDF("PI")_"^"_SEL_"^"_$P($G(^VA(200,+SEL,0)),"^")_"^^^PRIMARY^"
"RTN","IBDFDE21",146,0)
 S IBDPI(IBDF("PI"),IBDX)=IBDSEL(IBDX)
"RTN","IBDFDE21",147,0)
 W:'$G(IBDF("PROVIDER")) !!,"No Provider Block on form.  Using Default Provider from Clinic as Primary.",!
"RTN","IBDFDE21",148,0)
 W:$G(IBDF("PROVIDER")) !!,"Using Provider: "
"RTN","IBDFDE21",149,0)
 W "   ",$P(^VA(200,+SEL,0),"^"),"    PRIMARY",!
"RTN","IBDFDE21",150,0)
 Q
"RTN","IBDFDE21",151,0)
 ;
"RTN","IBDFDE21",152,0)
HELP ; -- 
"RTN","IBDFDE21",153,0)
 W !,"You must choose a data qualifier for this item.  Enter a number from 1-",CNT,!,"Or enter the first letter, or enter the full name.  Enter more than one",!,"qualifier separated by commas (ie 1,2 or P,A).",!
"RTN","IBDFDE21",154,0)
 Q
"RTN","IBDFDE21",155,0)
 ;
"RTN","IBDFDE21",156,0)
OTHER(IBDX) ; -- allow input of an additional item
"RTN","IBDFDE21",157,0)
 N I,J,X,Y,DIR,DIRUT,DUOUT,SEL,SELX,NARR,DIC,DIE,DA,DR,GMPTUN,GMPTSUB,GMPTSHOW,XTLKGLB,XTLKHLP,XTLKKSCH,XTLKSAY,IBDLEX,IBDFILE
"RTN","IBDFDE21",158,0)
 I $G(IBDF("LEXICON")) D  Q:'$D(IBDLEX)
"RTN","IBDFDE21",159,0)
 .I $D(^LEX)>1 S X="LEXSET" X ^%ZOSF("TEST") I $T D CONFIG^LEXSET("ICD","ICD") S IBDLEX=1
"RTN","IBDFDE21",160,0)
 .I '$D(IBDLEX) S X="GMPTSET" X ^%ZOSF("TEST") I $T D CONFIG^GMPTSET("GMPL","PL1") S IBDLEX=1
"RTN","IBDFDE21",161,0)
 .;D CONFIG^GMPTSET("ICD","ICD") (this is an alternate filter)
"RTN","IBDFDE21",162,0)
 S SELX=-1
"RTN","IBDFDE21",163,0)
 I '$G(IBDF("OTHER")) G OTHQ
"RTN","IBDFDE21",164,0)
 I $L($G(IBDX)) S X=IBDX S DIC(0)="EQMZ"
"RTN","IBDFDE21",165,0)
 S DIC("A")="Select Other "_$G(IBDASK)
"RTN","IBDFDE21",166,0)
 S DIC=$P(IBDF("OTHER"),"^") I $P(IBDF("OTHER"),"^",2)'="" S DIC("S")=$P(IBDF("OTHER"),"^",2,99)
"RTN","IBDFDE21",167,0)
 D ^DIC G OTHQ:+Y<1
"RTN","IBDFDE21",168,0)
 K DIC
"RTN","IBDFDE21",169,0)
 S SEL=Y
"RTN","IBDFDE21",170,0)
 W !!,$C(7),"WARNING: Item selected not from Encounter Form."
"RTN","IBDFDE21",171,0)
 ;
"RTN","IBDFDE21",172,0)
 I IBDF("PI")=$G(IBDF("PROVIDER PI")) W ! S SELX=$P($G(^VA(200,+Y,0)),"^",1)_"^^"_+Y_"^^^^1" G OTHQ
"RTN","IBDFDE21",173,0)
 ;
"RTN","IBDFDE21",174,0)
 W "...Entry of Narrative Required!",!
"RTN","IBDFDE21",175,0)
 S IBDFILE=+IBDF("OTHER")
"RTN","IBDFDE21",176,0)
 S:IBDFILE=81 DIR("B")=$P(Y(0),"^",2)
"RTN","IBDFDE21",177,0)
 S:IBDFILE=80 DIR("B")=$P(Y(0),"^",3)
"RTN","IBDFDE21",178,0)
 S:IBDFILE=357.69 DIR("B")=$P(Y(0),"^",3)
"RTN","IBDFDE21",179,0)
 I IBDFILE>9999999,IBDFILE<10000000 S DIR("B")=$P(Y(0),"^",1)
"RTN","IBDFDE21",180,0)
 S DIR(0)="FO^3:30",DIR("A")="Narrative" D ^DIR K DIR G:$G(DIRUT) OTHQ
"RTN","IBDFDE21",181,0)
 S NARR=Y
"RTN","IBDFDE21",182,0)
 ;
"RTN","IBDFDE21",183,0)
 S SELX=$S((IBDFILE<9999999)&(IBDFILE'=757.01):NARR_"^^"_$P(SEL,"^",2)_"^^^^1",1:NARR_"^^"_$P(SEL,"^",1)_"^^^^1")
"RTN","IBDFDE21",184,0)
OTHQ Q $S(SELX=-1:"",1:SELX)
"RTN","IBDFDE21",185,0)
 ;
"RTN","IBDFDE21",186,0)
PARTLST(ARY,NEXT,ANS) ; -- input has more than one match, prompt for which one
"RTN","IBDFDE21",187,0)
 N I,J,K,N,IBD,ANS2,SEL,CHOICE
"RTN","IBDFDE21",188,0)
 S SEL=0
"RTN","IBDFDE21",189,0)
 S NEXT=$E(NEXT,1,$L(NEXT)-1)_$C($A($E(NEXT,$L(NEXT)))-1)_"~"
"RTN","IBDFDE21",190,0)
 ;
"RTN","IBDFDE21",191,0)
 S J=0,K=NEXT F  S K=$O(@ARY@(K)) Q:$E(K,1,$L(ANS))'=ANS  D
"RTN","IBDFDE21",192,0)
 .S N=0 F  S N=$O(@ARY@(K,N)) Q:'N  D
"RTN","IBDFDE21",193,0)
 ..S J=J+1,IBD(J)=@ARY@(K,N),CHOICE=$$CHOICE^IBDFDE2(IBD(J))
"RTN","IBDFDE21",194,0)
 ..W !?6,J,?10,$S($P(CHOICE,"^",2)'="":$P(CHOICE,"^",2),1:$P(CHOICE,"^",3)),?20,$P(CHOICE,"^",1),?50,"   ",$P(CHOICE,"^",8),"   ",$P(CHOICE,"^",4)
"RTN","IBDFDE21",195,0)
 ;
"RTN","IBDFDE21",196,0)
ASKNUM I J<1 G PARTLQ
"RTN","IBDFDE21",197,0)
 W !,"   Choose 1-",J,": " R ANS2:DTIME
"RTN","IBDFDE21",198,0)
 I '$T!($E(ANS2,1)="^")!(ANS2="") S SEL="" G PARTLQ
"RTN","IBDFDE21",199,0)
 I $E(ANS2,1)="?" W !,"Enter a number from 1 - ",J G ASKNUM
"RTN","IBDFDE21",200,0)
 S ANS2=+ANS2
"RTN","IBDFDE21",201,0)
 I ANS2<1!(ANS2>J) G ASKNUM
"RTN","IBDFDE21",202,0)
 I $G(IBD(ANS2))="" G ASKNUM
"RTN","IBDFDE21",203,0)
 W !
"RTN","IBDFDE21",204,0)
 S SEL=$G(IBD(ANS2))
"RTN","IBDFDE21",205,0)
PARTLQ Q SEL
"RTN","IBDFDE21",206,0)
 ;
"RTN","IBDFDE21",207,0)
READ ; -- get input from list
"RTN","IBDFDE21",208,0)
 N ANS2
"RTN","IBDFDE21",209,0)
 G:CNT<1 READQ
"RTN","IBDFDE21",210,0)
 W !,"   Choose 1-",CNT,": " R ANS2:DTIME
"RTN","IBDFDE21",211,0)
 I '$T!($E(ANS2,1)="^") S IBQUIT=1 G READQ
"RTN","IBDFDE21",212,0)
 I $E(ANS2,1)="?" W !,"Enter a number from 1 - ",CNT," or return to see more." G READ
"RTN","IBDFDE21",213,0)
 S ANS2=+ANS2
"RTN","IBDFDE21",214,0)
 I ANS2<1!(ANS2>CNT) W $C(7),! G READ
"RTN","IBDFDE21",215,0)
 I $G(NUMBER(CNT))="" G READ
"RTN","IBDFDE21",216,0)
 W !
"RTN","IBDFDE21",217,0)
READQ Q
"RTN","IBDFDE22")
0^168^B10626718
"RTN","IBDFDE22",1,0)
IBDFDE22 ;ALB/AAS - AICS Data Entry, check selection rules ; 24-FEB-96
"RTN","IBDFDE22",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE22",3,0)
 ;
"RTN","IBDFDE22",4,0)
% G ^IBDFDE
"RTN","IBDFDE22",5,0)
 ;
"RTN","IBDFDE22",6,0)
CHK ; -- see if rules allow for more or less than one
"RTN","IBDFDE22",7,0)
 ;    rules 0 := select any number
"RTN","IBDFDE22",8,0)
 ;          1 := exactly 1
"RTN","IBDFDE22",9,0)
 ;          2 := at most 1
"RTN","IBDFDE22",10,0)
 ;          3 := at least 1 (1 or more)
"RTN","IBDFDE22",11,0)
 N I,IBDY,MATCH,OVERSAV
"RTN","IBDFDE22",12,0)
 S (MATCH,OVER,OVERSAV,ASKOTHER)=0
"RTN","IBDFDE22",13,0)
 ;
"RTN","IBDFDE22",14,0)
 ; -- check all rules for list and enforce
"RTN","IBDFDE22",15,0)
 S I=0 F  S I=$O(RULE(I)) Q:I=""  D  I OVER S:OVER>OVERSAV OVERSAV=OVER
"RTN","IBDFDE22",16,0)
 .;
"RTN","IBDFDE22",17,0)
 .; -- find all matches for list, and qualifier
"RTN","IBDFDE22",18,0)
 .S MATCH=0
"RTN","IBDFDE22",19,0)
 .S IBDY=0 F  S IBDY=$O(IBDPI(IBDF("PI"),IBDY)) Q:'IBDY  I $P(IBDPI(IBDF("PI"),IBDY),"^",6)=QLFR(I) S MATCH=MATCH+1
"RTN","IBDFDE22",20,0)
 .;
"RTN","IBDFDE22",21,0)
 .; -- any number allowed
"RTN","IBDFDE22",22,0)
 .I $G(RULE(+I))=0 D  Q
"RTN","IBDFDE22",23,0)
 ..I ANS="" S OVER=0 Q  ;nothing selected, don't reask
"RTN","IBDFDE22",24,0)
 ..I ANS'="" S OVER=1 Q  ;something selected, reask
"RTN","IBDFDE22",25,0)
 .;
"RTN","IBDFDE22",26,0)
 .; -- exactly one required
"RTN","IBDFDE22",27,0)
 .I $G(RULE(+I))=1 D  Q
"RTN","IBDFDE22",28,0)
 ..I MATCH>1 S OVER=2 W:'$G(IBDREDIT) !,"More than one selected, you must delete one" Q
"RTN","IBDFDE22",29,0)
 ..I MATCH=1 S OVER=0 D DELQLF Q  ;exactly one selected
"RTN","IBDFDE22",30,0)
 ..I MATCH<1 S OVER=1 W:'$G(IBDREDIT) !!,"A ",IOINHI,IBDASK,IOINORM," selection is required"_$S(QLFR(I)="":"",1:" for "_IOINHI_QLFR(I)_IOINORM),".",! Q
"RTN","IBDFDE22",31,0)
 .;
"RTN","IBDFDE22",32,0)
 .; -- at most one required
"RTN","IBDFDE22",33,0)
 .I $G(RULE(+I))=2 D  Q
"RTN","IBDFDE22",34,0)
 ..I MATCH>1 S OVER=2 W:'$G(IBDREDIT) !,"More than one selected, you must delete one" Q
"RTN","IBDFDE22",35,0)
 ..I MATCH=1 S OVER=0 D DELQLF Q  ;exactly one selected
"RTN","IBDFDE22",36,0)
 ..I ANS'="",MATCH<1 S OVER=1 ;if match = 0 thats okay but ask
"RTN","IBDFDE22",37,0)
 .;
"RTN","IBDFDE22",38,0)
 .; -- at least one required
"RTN","IBDFDE22",39,0)
 .I $G(RULE(+I))=3 D  Q
"RTN","IBDFDE22",40,0)
 ..S OVER=1
"RTN","IBDFDE22",41,0)
 ..I MATCH<1 S OVER=1 W:'$G(IBDREDIT) !!,"A ",IOINHI,IBDASK,IOINORM," selection is required"_$S(QLFR(I)="":"",1:" for "_IOINHI_QLFR(I)_IOINORM),".",! Q
"RTN","IBDFDE22",42,0)
 ..I MATCH>1,ANS="" S OVER=0 Q  ;more than one selected
"RTN","IBDFDE22",43,0)
 ..I MATCH=1,ANS="" S OVER=0 Q  ;exactly one selected
"RTN","IBDFDE22",44,0)
 ;
"RTN","IBDFDE22",45,0)
 S OVER=OVERSAV
"RTN","IBDFDE22",46,0)
 I OVER=2 D DEL^IBDFDE1
"RTN","IBDFDE22",47,0)
CHKQ Q
"RTN","IBDFDE22",48,0)
 ;
"RTN","IBDFDE22",49,0)
DELQLF ; -- delete rule, qualifier
"RTN","IBDFDE22",50,0)
 Q:RULE<2  ;must leave the last or only rule
"RTN","IBDFDE22",51,0)
 I MATCH=1 S OVER=0 K RULE(I),QLFR(I) S RULE=RULE-1
"RTN","IBDFDE22",52,0)
 Q
"RTN","IBDFDE22",53,0)
 ;
"RTN","IBDFDE22",54,0)
RULES ; -- look at zero node, find qualifiers and selection rule
"RTN","IBDFDE22",55,0)
 N Q,R,CNT
"RTN","IBDFDE22",56,0)
 S RULE=$P($$CHOICE^IBDFDE2(0),"^",3),QLFR="",CNT=0
"RTN","IBDFDE22",57,0)
 ;
"RTN","IBDFDE22",58,0)
 ; -- go thru rules, if primary then make #1
"RTN","IBDFDE22",59,0)
 F IBD=1:1 S ROW=$P(RULE,"::",IBD) Q:ROW=""  D
"RTN","IBDFDE22",60,0)
 .S Q(IBD)=$P(ROW,";;",1),R(IBD)=$P(ROW,";;",2)
"RTN","IBDFDE22",61,0)
 .I Q(IBD)="PRIMARY" D
"RTN","IBDFDE22",62,0)
 ..S R(IBD)=$S(R(IBD)=3:1,R(IBD)=0:2,1:R(IBD))
"RTN","IBDFDE22",63,0)
 ..S RULE(1)=R(IBD),QLFR(1)=Q(IBD),CNT=CNT+1 K R(IBD),Q(IBD)
"RTN","IBDFDE22",64,0)
 S RULE=IBD-1
"RTN","IBDFDE22",65,0)
 ;
"RTN","IBDFDE22",66,0)
 ; -- make secondary #2 if primary exists, else #1
"RTN","IBDFDE22",67,0)
 S IBD="" F  S IBD=$O(R(IBD)) Q:'IBD  I Q(IBD)="SECONDARY" S CNT=CNT+1,RULE(CNT)=R(IBD),QLFR(CNT)=Q(IBD) K R(IBD),Q(IBD) Q
"RTN","IBDFDE22",68,0)
 ;
"RTN","IBDFDE22",69,0)
 ; -- take the rest as they come
"RTN","IBDFDE22",70,0)
 S IBD="" F  S IBD=$O(R(IBD)) Q:'IBD  S CNT=CNT+1,RULE(CNT)=R(IBD),QLFR(CNT)=Q(IBD)
"RTN","IBDFDE22",71,0)
 ;
"RTN","IBDFDE22",72,0)
 ;F IBD=1:1 S ROW=$P(RULE,"::",IBD) Q:ROW=""  S QLFR(IBD)=$P(ROW,";;",1),RULE(IBD)=$P(ROW,";;",2) I QLFR(IBD)="PRIMARY" D
"RTN","IBDFDE22",73,0)
 ;.S RULE(IBD)=$S(RULE(IBD)=3:1,RULE(IBD)=0:2,1:RULE(IBD))
"RTN","IBDFDE22",74,0)
 ;S RULE=IBD-1
"RTN","IBDFDE22",75,0)
 Q
"RTN","IBDFDE3")
0^169^B54675126
"RTN","IBDFDE3",1,0)
IBDFDE3 ;ALB/AAS - AICS Manual Data Entry, process handprint fields ; 24-FEB-96
"RTN","IBDFDE3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE3",3,0)
 ;
"RTN","IBDFDE3",4,0)
% G ^IBDFDE
"RTN","IBDFDE3",5,0)
 ;
"RTN","IBDFDE3",6,0)
HNDPR(RESULT,IBDF) ; -- Procedure
"RTN","IBDFDE3",7,0)
 ; -- Manual Data entry routine for Hand Print Fields
"RTN","IBDFDE3",8,0)
 ;    Input :  Result := call by reference, used to output results
"RTN","IBDFDE3",9,0)
 ;             IBDF("IEN")    := pointer to hand print file (359.94)
"RTN","IBDFDE3",10,0)
 ;             IBDF("PI")     := pointer to input package interface
"RTN","IBDFDE3",11,0)
 ;             IBDF("DFN")    := pointer to patient
"RTN","IBDFDE3",12,0)
 ;             IBDF("CLINIC") := pointer to hospital location
"RTN","IBDFDE3",13,0)
 ;
"RTN","IBDFDE3",14,0)
 ;    output:  Result(n)  $p1 := pointer to package interface
"RTN","IBDFDE3",15,0)
 ;                        $p2 := input value (validated user input)
"RTN","IBDFDE3",16,0)
 ;                        $p3 := null
"RTN","IBDFDE3",17,0)
 ;                        $p4 := null
"RTN","IBDFDE3",18,0)
 ;                        $p5 := null
"RTN","IBDFDE3",19,0)
 ;                        $p6 := measurement type for vitals
"RTN","IBDFDE3",20,0)
 ;                        $p7 := ien in handprint file
"RTN","IBDFDE3",21,0)
 ;                        $p8 := vital type (name from 359.1)
"RTN","IBDFDE3",22,0)
 ;                        $P9 := Units (for Vitals)
"RTN","IBDFDE3",23,0)
 ;            ibdpi(package interface, qlfr or n) := result(n)
"RTN","IBDFDE3",24,0)
 ;                       $P13 := number of the selection
"RTN","IBDFDE3",25,0)
 ;
"RTN","IBDFDE3",26,0)
 N I,J,X,Y,ANS,DISPTXT,HDR,DIR,DIRUT,DUOUT,DTOUT,IBDX,QLFR,CHOICE,OVER,IBDPRE
"RTN","IBDFDE3",27,0)
 S (IBQUIT,OVER)=0,(ANS,QLFR)=""
"RTN","IBDFDE3",28,0)
 D OBJLST^IBDFRPC1(.CHOICE,.IBDF)
"RTN","IBDFDE3",29,0)
 I +CHOICE(0)<1 G HPQ
"RTN","IBDFDE3",30,0)
 S IBDASK=$P(CHOICE(1),"^")_" "
"RTN","IBDFDE3",31,0)
 I '$D(^TMP("IBD-ASK",$J,IBDFMIEN,IBDASK)) S ^TMP("IBD-ASK",$J,IBDFMIEN,$$UP^XLFSTR(IBDASK),IBDF("IBDF"))=""
"RTN","IBDFDE3",32,0)
 I $P($G(^IBE(357.6,+IBDF("PI"),0)),"^")["INPUT VITALS" S QLFR=$P(CHOICE(1),"^",5)
"RTN","IBDFDE3",33,0)
 ;
"RTN","IBDFDE3",34,0)
OVER ;
"RTN","IBDFDE3",35,0)
 K X,Y,DIR,DIRUT,DUOUT,DTOUT
"RTN","IBDFDE3",36,0)
 S OVER=0
"RTN","IBDFDE3",37,0)
 S DIR("?")="Enter the value on the form, or enter Return if there is no value"
"RTN","IBDFDE3",38,0)
 S DIR(0)="FOA^2:"_$P(CHOICE(1),"^",3)
"RTN","IBDFDE3",39,0)
 I $G(QLFR)'="",$P($G(IBDPI(IBDF("PI"),QLFR)),"^",2)'="" S DIR("B")=$P($G(IBDPI(IBDF("PI"),QLFR)),"^",2)
"RTN","IBDFDE3",40,0)
 S DIR("A")=$P(CHOICE(1),"^")_" "
"RTN","IBDFDE3",41,0)
 I $D(IBDF("ASKDATE")) S Y=$$ASKDT^IBDFDE0(DIR("A"),$S($D(DIR("B")):DIR("B"),1:$G(IBDF("DEFLT"))),"",IBDF("APPT")) G REV
"RTN","IBDFDE3",42,0)
 D ^DIR
"RTN","IBDFDE3",43,0)
REV I $G(IBDREDIT),$G(DIR("B"))'="" S IBDPRE=DIR("B") G:Y=$G(DIR("B")) HPQ
"RTN","IBDFDE3",44,0)
 S ANS=$$UP^XLFSTR(Y)
"RTN","IBDFDE3",45,0)
 K DIR
"RTN","IBDFDE3",46,0)
 I $G(IBDREDIT),$G(IBDPRE)'="",ANS="" D DELETE W "   Deleted!" G HPQ
"RTN","IBDFDE3",47,0)
 I ANS="" G HPQ
"RTN","IBDFDE3",48,0)
 I ANS["^",ANS'="^" D  G HPOVER
"RTN","IBDFDE3",49,0)
 .S GOTO=$$UP^XLFSTR($P(ANS,"^",2))
"RTN","IBDFDE3",50,0)
 .I "????"[GOTO X "W !!,""Valid Blocks to Jump to: "" S IBDX=0 F  S IBDX=$O(^TMP(""IBD-ASK"",$J,IBDFMIEN,IBDX)) Q:IBDX=""""  W !,?6,IBDX" S OVER=1 Q
"RTN","IBDFDE3",51,0)
 .S X=$O(^TMP("IBD-ASK",$J,IBDFMIEN,GOTO))
"RTN","IBDFDE3",52,0)
 .I X'="",X[GOTO W $E(X,$L(GOTO)+1,$L(X)) S IBDF("GOTO")=+$O(^TMP("IBD-ASK",$J,IBDFMIEN,X,""))-1,IBDREDIT=1 Q
"RTN","IBDFDE3",53,0)
 .S IBQUIT=1
"RTN","IBDFDE3",54,0)
 I $D(DIRUT) S IBQUIT=1 G HPQ
"RTN","IBDFDE3",55,0)
 ;
"RTN","IBDFDE3",56,0)
VITALS ; -- if vitals, validate input
"RTN","IBDFDE3",57,0)
 S OVER=0
"RTN","IBDFDE3",58,0)
 I $G(QLFR)'="" D  I OVER G HPOVER
"RTN","IBDFDE3",59,0)
 .I $L($T(RATECHK^GMRVPCE0)) D  Q
"RTN","IBDFDE3",60,0)
 ..S OVER='$$RATECHK^GMRVPCE0(QLFR,ANS,$P(CHOICE(1),"^",6))
"RTN","IBDFDE3",61,0)
 ..Q:'OVER
"RTN","IBDFDE3",62,0)
 ..D HELP^GMRVPCE0(QLFR,"HELP")
"RTN","IBDFDE3",63,0)
 ..W ! S IBDX="" F  S IBDX=$O(HELP(IBDX)) Q:IBDX=""  W !,HELP(IBDX)
"RTN","IBDFDE3",64,0)
 ..W ! K ANS,HELP
"RTN","IBDFDE3",65,0)
 .I $L($T(@(QLFR))) D @QLFR Q
"RTN","IBDFDE3",66,0)
 ;
"RTN","IBDFDE3",67,0)
 ; -- delete old answer
"RTN","IBDFDE3",68,0)
 I $G(IBDREDIT),$G(IBDPRE)'="",$G(IBDPRE)'=ANS D DELETE
"RTN","IBDFDE3",69,0)
 ;
"RTN","IBDFDE3",70,0)
 I ANS'="" D
"RTN","IBDFDE3",71,0)
 .S RESULT(0)=$G(RESULT(0))+1
"RTN","IBDFDE3",72,0)
 .S RESULT(RESULT(0))=+IBDF("PI")_"^"_ANS_"^^^^"_QLFR_"^"_$G(IBDF("IEN"))_"^"_$G(IBDF("VITAL"))_"^"_$P(CHOICE(1),"^",4)
"RTN","IBDFDE3",73,0)
 .S IBDPI(IBDF("PI"),$S($G(QLFR)'="":QLFR,1:RESULT(0)))=IBDSEL(RESULT(0))
"RTN","IBDFDE3",74,0)
 .S $P(IBDPI(IBDF("PI"),$S($G(QLFR)'="":QLFR,1:RESULT(0))),"^",13)=RESULT(0)
"RTN","IBDFDE3",75,0)
 ;
"RTN","IBDFDE3",76,0)
HPOVER G:OVER OVER
"RTN","IBDFDE3",77,0)
HPQ Q
"RTN","IBDFDE3",78,0)
 ;
"RTN","IBDFDE3",79,0)
DELETE ; -- delete old answer if changed
"RTN","IBDFDE3",80,0)
 Q:'$G(IBDREDIT)!(ANS=$G(IBDPRE))
"RTN","IBDFDE3",81,0)
 S SEL=+$P($G(IBDPI(IBDF("PI"),QLFR)),"^",13) Q:'SEL
"RTN","IBDFDE3",82,0)
 K IBDPI(IBDF("PI"),QLFR),RESULT(SEL)
"RTN","IBDFDE3",83,0)
 I $G(RESULT(0))=1 S RESULT(0)=0
"RTN","IBDFDE3",84,0)
 Q
"RTN","IBDFDE3",85,0)
 ;
"RTN","IBDFDE3",86,0)
BP ; -- validate blood pressure
"RTN","IBDFDE3",87,0)
 N D,S
"RTN","IBDFDE3",88,0)
 I ANS'?2.3N1"/"2.3N S OVER=1 K ANS G BPQ
"RTN","IBDFDE3",89,0)
 S S=$P(ANS,"/"),D=$P(ANS,"/",2)
"RTN","IBDFDE3",90,0)
 I D<20!(D>200)!(S<20)!(S>275) K ANS S OVER=1
"RTN","IBDFDE3",91,0)
 I S'>D K ANS S OVER=1
"RTN","IBDFDE3",92,0)
BPQ I OVER W !,"Invalid format.  Enter as SYSTOLIC/DIASTOLIC (120/80).  SYSTOLIC must be",!,"between 20 and 275.  DIASTOLIC must be between 20 and 200.  SYSTOLIC must be",!,"greater than DIASTOLIC.",!
"RTN","IBDFDE3",93,0)
 Q
"RTN","IBDFDE3",94,0)
 ;
"RTN","IBDFDE3",95,0)
WT ; -- validate body weight
"RTN","IBDFDE3",96,0)
 I ANS'?1.3N.1".".1N!(ANS<2)!(ANS>750)!(+ANS'=ANS) K ANS S OVER=1
"RTN","IBDFDE3",97,0)
WTQ I OVER W !,"Enter a body weight, 1 decimal place allowed, between 2 and 750 lbs.",!
"RTN","IBDFDE3",98,0)
 Q
"RTN","IBDFDE3",99,0)
 ;
"RTN","IBDFDE3",100,0)
HT ; --validate body height
"RTN","IBDFDE3",101,0)
 I ANS'?2N.1".".1N!(ANS<10)!(ANS>80) K ANS S OVER=1
"RTN","IBDFDE3",102,0)
 I OVER W !,"Enter the body height in inches, 1 decimal place allowed, between 10 and 80.",!
"RTN","IBDFDE3",103,0)
 Q
"RTN","IBDFDE3",104,0)
 ;
"RTN","IBDFDE3",105,0)
AG ; -- validate adominal girth
"RTN","IBDFDE3",106,0)
 I +ANS'=ANS!(ANS?.E1"."1N.N)!(ANS<10)!(ANS>750) K ANS S OVER=1
"RTN","IBDFDE3",107,0)
 I OVER W !,"Enter the abdominal girth in inches, no decimal places, between 10 and 750.",!
"RTN","IBDFDE3",108,0)
 Q
"RTN","IBDFDE3",109,0)
 ;
"RTN","IBDFDE3",110,0)
AUD ; -- validate audiometry
"RTN","IBDFDE3",111,0)
 N %AUI,%AUX
"RTN","IBDFDE3",112,0)
 I $L(ANS,"/")'=17 K ANS S OVER=1
"RTN","IBDFDE3",113,0)
 F %AUI=1:1:16 S %AUX=$P(X,"/",%AUI) I %AUX'="" I %AUX'?1.3N!(+%AUX>110) K ANS S OVER=1
"RTN","IBDFDE3",114,0)
 I OVER W !,"Enter 8 readings for right ear followed by 8 readings for left ear,",!,"all followed by slashes (/).  Values must be between 0 and 110.",!,"EXAMPLE:  100/100/100/95/90/90/85/80/105/105/105/105/100/100/95/90/",!
"RTN","IBDFDE3",115,0)
 Q
"RTN","IBDFDE3",116,0)
 ;
"RTN","IBDFDE3",117,0)
TMP ; -- validate temperature
"RTN","IBDFDE3",118,0)
 I ANS'?2.3N.1".".1N!(ANS<94)!(ANS>109.9)!(+ANS'=ANS) K ANS S OVER=1
"RTN","IBDFDE3",119,0)
 I OVER W !,"Enter the body temperature in degrees fahrenheit, must be between 94 and 109.9.",!
"RTN","IBDFDE3",120,0)
 Q
"RTN","IBDFDE3",121,0)
 ;
"RTN","IBDFDE3",122,0)
FT ; -- validate fetal heart tones
"RTN","IBDFDE3",123,0)
 I ANS'=+ANS!(ANS<50)!(ANS>250)!(ANS?.E1"."1N.N) K ANS S OVER=1
"RTN","IBDFDE3",124,0)
 I OVER W !,"Enter Fetal Heart Tone.  Must be in the range 50 -250.",!
"RTN","IBDFDE3",125,0)
 Q
"RTN","IBDFDE3",126,0)
 ;
"RTN","IBDFDE3",127,0)
FH ; -- validate fundal height
"RTN","IBDFDE3",128,0)
 I ANS'=+ANS!(ANS<10)!(ANS>250)!(ANS?.E1"."1N.N) K ANS S OVER=1
"RTN","IBDFDE3",129,0)
 I OVER W !,"Enter a fundal Height.  Must be in the range 10 - 50",!
"RTN","IBDFDE3",130,0)
 Q
"RTN","IBDFDE3",131,0)
 ;
"RTN","IBDFDE3",132,0)
HC ; -- validate head circumference
"RTN","IBDFDE3",133,0)
 I ANS'=+ANS!(ANS<10)!(ANS>30)!(ANS?.E1"."3N.N) K ANS S OVER=1
"RTN","IBDFDE3",134,0)
 I OVER W !,"To enter head circumference in inches, enter the inches",!,"and decimal.  Must be 10 - 30 inches and the fractional decimal part must",!,"be a multiple of 1/8 (.125)",!
"RTN","IBDFDE3",135,0)
 Q
"RTN","IBDFDE3",136,0)
 ;
"RTN","IBDFDE3",137,0)
HE ; -- validate hearing
"RTN","IBDFDE3",138,0)
 S ANS=$$UP^XLFSTR($E(ANS))
"RTN","IBDFDE3",139,0)
 I "AN"'[ANS K ANS S OVER=1
"RTN","IBDFDE3",140,0)
 I OVER W !,"Enter 'A' for abnormal, or 'N' for Normal.",!
"RTN","IBDFDE3",141,0)
 Q
"RTN","IBDFDE3",142,0)
 ;
"RTN","IBDFDE3",143,0)
PU ; -- validate pulse
"RTN","IBDFDE3",144,0)
 I ANS'?1.3N!(ANS<30)!(ANS>250) K ANS S OVER=1
"RTN","IBDFDE3",145,0)
 I OVER W !,"Enter the patients 1 minute pulse, enter a number between 30 and 250.",!
"RTN","IBDFDE3",146,0)
 Q
"RTN","IBDFDE3",147,0)
 ;
"RTN","IBDFDE3",148,0)
RS ; -- validate respirations
"RTN","IBDFDE3",149,0)
 I ANS'?1.2N!(ANS<8)!(ANS>90) K ANS S OVER=1
"RTN","IBDFDE3",150,0)
 I OVER W !,"Enter the patients 1 minute number of resperations, enter a number between 8 and 90.",!
"RTN","IBDFDE3",151,0)
 Q
"RTN","IBDFDE3",152,0)
 ;
"RTN","IBDFDE3",153,0)
TON ; -- validate tonometry
"RTN","IBDFDE3",154,0)
 N AUTONR,AUTONL
"RTN","IBDFDE3",155,0)
 I $L(ANS)>7!($L(ANS)<2)!'((ANS?.1"R"1.2N1"/")!(ANS?1"/".1"L"1.2N)!(ANS?.1"R"1.2N1"/".1"L"1.2N)) K ANS S OVER=1
"RTN","IBDFDE3",156,0)
 S AUTONR=$P(ANS,"/",1) S:AUTONR?1"R".N AUTONR=$E(AUTONR,2,10)
"RTN","IBDFDE3",157,0)
 S AUTONL=$P(ANS,"/",2) S:AUTONL?1"L".N AUTONL=$E(AUTONL,2,10)
"RTN","IBDFDE3",158,0)
 I AUTONR'="" I AUTONR<0!(AUTONR>80) K ANS S OVER=1
"RTN","IBDFDE3",159,0)
 I AUTONL'="" I AUTONL<0!(AUTONL>80) K ANS S OVER=1
"RTN","IBDFDE3",160,0)
TONX I OVER W !,"Enter a reading for the RIGHT eye, followed by a SLASH, followed",!,"by the reading for the LEFT eye.  The SLASH is required.  Readings can be",!,"between 0 and 80.  Examples:  18/18, /20, 18/, 10/13"
"RTN","IBDFDE3",161,0)
 Q
"RTN","IBDFDE3",162,0)
 ;
"RTN","IBDFDE3",163,0)
VC ; -- validate vision corrected
"RTN","IBDFDE3",164,0)
 ;    same input as uncorrected
"RTN","IBDFDE3",165,0)
VU ; -- validate vision uncorrected
"RTN","IBDFDE3",166,0)
 I $L(ANS)>7!($L(ANS)<2)!'((ANS?2.3N)!(ANS?1"/"2.3N)!(ANS?2.3N1"/"2.3N)) K ANS S OVER=1
"RTN","IBDFDE3",167,0)
 I $P(ANS,"/",1)'="" I $P(ANS,"/",1)<10!($P(ANS,"/",1)>999) K ANS S OVER=1
"RTN","IBDFDE3",168,0)
 I $P(ANS,"/",2)'="" I $P(ANS,"/",2)<10!($P(ANS,"/",2)>999) K ANS S OVER=1
"RTN","IBDFDE3",169,0)
 I OVER W !,"Enter denominators only.  The 20/ is assumed.  Enter right eye",!,"/ left eye in form n/n (20/20).  If right eye only enter n (20).",!,"If left eye only enter /n (/20).  Must be between 10 and 999."
"RTN","IBDFDE3",170,0)
 Q
"RTN","IBDFDE4")
0^170^B26071805
"RTN","IBDFDE4",1,0)
IBDFDE4 ;ALB/AAS - AICS Manual Data Entry, process multiple choice fields ; 29-APR-96IOIN
"RTN","IBDFDE4",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE4",3,0)
 ;
"RTN","IBDFDE4",4,0)
% G ^IBDFDE
"RTN","IBDFDE4",5,0)
 ;
"RTN","IBDFDE4",6,0)
MULT(RESULT,IBDF) ; -- Procedure
"RTN","IBDFDE4",7,0)
 ; -- Manual Data entry routine for Multiple Choice Fields
"RTN","IBDFDE4",8,0)
 ;    Input :  Result := call by reference, used to output results
"RTN","IBDFDE4",9,0)
 ;             IBDF("IEN")    := pointer to hand print file (359.94)
"RTN","IBDFDE4",10,0)
 ;             IBDF("PI")     := pointer to input package interface
"RTN","IBDFDE4",11,0)
 ;             IBDF("DFN")    := pointer to patient
"RTN","IBDFDE4",12,0)
 ;             IBDF("CLINIC") := pointer to hospital location
"RTN","IBDFDE4",13,0)
 ;
"RTN","IBDFDE4",14,0)
 ;    output:  Result(n)  $p1 := pointer to package interface
"RTN","IBDFDE4",15,0)
 ;
"RTN","IBDFDE4",16,0)
 N I,J,X,Y,ANS,DISPTXT,HDR,DIR,DIRUT,DUOUT,DTOUT,IBDX,QLFR,CHOICE,OVER
"RTN","IBDFDE4",17,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBDFDE4",18,0)
 S (IBQUIT,OVER)=0,(ANS,QLFR)=""
"RTN","IBDFDE4",19,0)
 I $G(^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"),0))="" D
"RTN","IBDFDE4",20,0)
 .D OBJLST^IBDFRPC1(.CHOICE,.IBDF)
"RTN","IBDFDE4",21,0)
 .M ^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"))=CHOICE
"RTN","IBDFDE4",22,0)
 .K CHOICE
"RTN","IBDFDE4",23,0)
 .D COMPLST^IBDFDE5
"RTN","IBDFDE4",24,0)
 I +$G(^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"),0))<1 G MULTQ
"RTN","IBDFDE4",25,0)
 S IBDASK=$P($P($G(^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"),0)),"^",3),":")
"RTN","IBDFDE4",26,0)
 I '$D(^TMP("IBD-ASK",$J,IBDFMIEN,IBDASK)) S ^TMP("IBD-ASK",$J,IBDFMIEN,$$UP^XLFSTR(IBDASK),IBDF("IBDF"))=""
"RTN","IBDFDE4",27,0)
 S RULE=+$P($G(^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"),0)),"^",4)
"RTN","IBDFDE4",28,0)
 ;
"RTN","IBDFDE4",29,0)
OVER ; -- ask or re-ask for selection(s) from list
"RTN","IBDFDE4",30,0)
 IF RULE=0 S DIR("?",1)="Any Number of "_$G(IOINHI)_IBDASK_$G(IOINORM)_" allowed (including zero)."
"RTN","IBDFDE4",31,0)
 IF RULE=1 S DIR("?",1)="Exactly one "_$G(IOINHI)_IBDASK_$G(IOINORM)_" Required."
"RTN","IBDFDE4",32,0)
 IF RULE=2 S DIR("?",1)="At most one "_$G(IOINHI)_IBDASK_$G(IOINORM)_" allowed."
"RTN","IBDFDE4",33,0)
 IF RULE=3 S DIR("?")="At least 1 (1 or more) "_$G(IOINHI)_IBDASK_$G(IOINORM)_" Required."
"RTN","IBDFDE4",34,0)
 ;
"RTN","IBDFDE4",35,0)
 S DIR("?",2)=""
"RTN","IBDFDE4",36,0)
 S DIR("?")="Select an item from the form, enter by name or number.  Enter '??' to see the choices.  When editing, press enter to accept, '@' to delete, or enter a new selection."
"RTN","IBDFDE4",37,0)
 ;
"RTN","IBDFDE4",38,0)
 S DIR("??")="^D LST^IBDFDE41"
"RTN","IBDFDE4",39,0)
 ;
"RTN","IBDFDE4",40,0)
 S DIR(0)="FO^1:40^I $D(X),X="" "" K X W !!,$G(IOINHI),""Spacebar Return Not allowed!"",$G(IOINORM)"
"RTN","IBDFDE4",41,0)
 I IBDASK[":" S $P(DIR(0),"^")="FOA"
"RTN","IBDFDE4",42,0)
 S DIR("A")="Select "_$G(IBDASK)
"RTN","IBDFDE4",43,0)
 D ^DIR K DIR
"RTN","IBDFDE4",44,0)
 I $G(IBDEFLT(IBDF("PI")))'="",Y=IBDEFLT(IBDF("PI")) S Y="" ; on re-edit, accepting last entry same as entering nothing.
"RTN","IBDFDE4",45,0)
 S ANS=$$UP^XLFSTR(Y)
"RTN","IBDFDE4",46,0)
 I ANS="",$D(DIRUT),$G(IBDEFLT(IBDF("PI")))'="",$G(SELAST) K IBDPI(IBDF("PI"),SELAST),IBDSEL(SELAST) W "  Deleted!" ;user type "@" at prompt
"RTN","IBDFDE4",47,0)
 I ANS="" D CHK^IBDFDE42 G MCOVER
"RTN","IBDFDE4",48,0)
 I ANS["^",ANS'="^" D  G MCOVER
"RTN","IBDFDE4",49,0)
 .S GOTO=$$UP^XLFSTR($P(ANS,"^",2))
"RTN","IBDFDE4",50,0)
 .I GOTO="?"!(GOTO="??") X "W !!,""Valid Blocks to Jump to: "" S IBDX=0 F  S IBDX=$O(^TMP(""IBD-ASK"",$J,IBDFMIEN,IBDX)) Q:IBDX=""""  W !,?6,IBDX" S OVER=1 Q
"RTN","IBDFDE4",51,0)
 .S X=$O(^TMP("IBD-ASK",$J,IBDFMIEN,GOTO))
"RTN","IBDFDE4",52,0)
 .I X'="",X[GOTO W $E(X,$L(GOTO)+1,$L(X)) S IBDF("GOTO")=+$O(^TMP("IBD-ASK",$J,IBDFMIEN,X,""))-1,IBDREDIT=1 Q
"RTN","IBDFDE4",53,0)
 .S IBQUIT=1
"RTN","IBDFDE4",54,0)
 I $D(DIRUT) S IBQUIT=1 G MULTQ
"RTN","IBDFDE4",55,0)
 S SELECT=0
"RTN","IBDFDE4",56,0)
 ;
"RTN","IBDFDE4",57,0)
 ;
"RTN","IBDFDE4",58,0)
 ; -- first check for exact code matches
"RTN","IBDFDE4",59,0)
 I $G(NUMBER(ANS)) S SELECT=$G(NUMBER(ANS)) D SEL^IBDFDE41(SELECT),CHK^IBDFDE42 G MCOVER
"RTN","IBDFDE4",60,0)
 ;
"RTN","IBDFDE4",61,0)
 ; -- check for exact text matches
"RTN","IBDFDE4",62,0)
 S ARRAY="^TMP(""IBD-LTEXT"",$J,IBDFMIEN,IBDF(""PI""),IBDF(""IEN""))"
"RTN","IBDFDE4",63,0)
 I $G(@ARRAY@(ANS,1)),'$O(@ARRAY@(ANS,1)) S SELECT=@ARRAY@(ANS,1)  D SEL^IBDFDE41(SELECT),CHK^IBDFDE42 G MCOVER
"RTN","IBDFDE4",64,0)
 I $G(@ARRAY@(ANS,1)) D  I $G(SELECT) D SEL^IBDFDE41(SELECT),CHK^IBDFDE42 G MCOVER
"RTN","IBDFDE4",65,0)
 .; -- more than one description the same
"RTN","IBDFDE4",66,0)
 .S SELECT=$$PARTLST^IBDFDE41(ARRAY,ANS,ANS)
"RTN","IBDFDE4",67,0)
 ;
"RTN","IBDFDE4",68,0)
 ; -- next check for paritial text answers
"RTN","IBDFDE4",69,0)
 S NEXT=$O(@ARRAY@(ANS)) D  I SELECT D SEL^IBDFDE41(SELECT),CHK^IBDFDE42 G MCOVER
"RTN","IBDFDE4",70,0)
 .Q:NEXT=""!($E(NEXT,1,$L(ANS))'=ANS)
"RTN","IBDFDE4",71,0)
 .I $O(@ARRAY@(NEXT,1)) S SELECT=$$PARTLST^IBDFDE41(ARRAY,NEXT,ANS) Q
"RTN","IBDFDE4",72,0)
 .S NEXT1=$O(@ARRAY@(NEXT)) I $E(NEXT1,1,$L(ANS))=ANS S SELECT=$$PARTLST^IBDFDE41(ARRAY,NEXT,ANS) Q  ;Not Unique answer
"RTN","IBDFDE4",73,0)
 .W $E(NEXT,($L(ANS)+1),$L(NEXT))
"RTN","IBDFDE4",74,0)
 .S SELECT=$G(@ARRAY@(NEXT,1))
"RTN","IBDFDE4",75,0)
 ;
"RTN","IBDFDE4",76,0)
 I ANS'="" W " ??  ",$C(7),"Not Found" G OVER
"RTN","IBDFDE4",77,0)
 ;
"RTN","IBDFDE4",78,0)
MCOVER ;
"RTN","IBDFDE4",79,0)
 G:OVER OVER
"RTN","IBDFDE4",80,0)
 ;
"RTN","IBDFDE4",81,0)
MULTQ ;
"RTN","IBDFDE4",82,0)
 K ^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"))
"RTN","IBDFDE4",83,0)
 K ^TMP("IBD-LTEXT",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"))
"RTN","IBDFDE4",84,0)
 K ^TMP("IBD-LCODE",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"))
"RTN","IBDFDE4",85,0)
 K ^TMP("IB",$J,"INTERFACES")
"RTN","IBDFDE4",86,0)
 K IBDF("OTHER"),ASKOTHER
"RTN","IBDFDE4",87,0)
 Q
"RTN","IBDFDE4",88,0)
 ;
"RTN","IBDFDE4",89,0)
ASKYN(DIR) ; -- input dir
"RTN","IBDFDE4",90,0)
 N ANS,X
"RTN","IBDFDE4",91,0)
 D ^DIR
"RTN","IBDFDE4",92,0)
 I $G(IBDREDIT),Y=$G(DIR("B")) S ANS=DIR("B") G ASKYNQ
"RTN","IBDFDE4",93,0)
 K DIR
"RTN","IBDFDE4",94,0)
 S ANS=$$UP^XLFSTR(Y)
"RTN","IBDFDE4",95,0)
 I ANS="" G ASKYNQ
"RTN","IBDFDE4",96,0)
 I ANS["^",ANS'="^" D  G ASKYNQ
"RTN","IBDFDE4",97,0)
 .S GOTO=$$UP^XLFSTR($P(ANS,"^",2))
"RTN","IBDFDE4",98,0)
 .S X=$O(^TMP("IBD-ASK",$J,IBDFMIEN,GOTO))
"RTN","IBDFDE4",99,0)
 .;I GOTO="?"!(GOTO="??") X "W !!,""Valid Blocks to Jump to: "" S IBDX=0 F  S IBDX=$O(^TMP(""IBD-ASK"",$J,IBDFMIEN,IBDX)) Q:IBDX=""""  W !,?6,IBDX" S OVER=1 Q
"RTN","IBDFDE4",100,0)
 .I X'="",X[GOTO W $E(X,$L(GOTO)+1,$L(X)) S IBDF("GOTO")=+$O(^TMP("IBD-ASK",$J,IBDFMIEN,X,""))-1,IBDREDIT=1 Q
"RTN","IBDFDE4",101,0)
 .S IBQUIT=1
"RTN","IBDFDE4",102,0)
 I $D(DIRUT) S IBQUIT=1
"RTN","IBDFDE4",103,0)
ASKYNQ Q $G(ANS)
"RTN","IBDFDE4",104,0)
 ;
"RTN","IBDFDE4",105,0)
 Q
"RTN","IBDFDE4",106,0)
TEST ;
"RTN","IBDFDE4",107,0)
 S IBDFMIEN=9999
"RTN","IBDFDE4",108,0)
 S IBDF("APPT")=2970331.1014
"RTN","IBDFDE4",109,0)
 S IBDF("CLINIC")=300
"RTN","IBDFDE4",110,0)
 S IBDF("DFN")=7169761
"RTN","IBDFDE4",111,0)
 S IBDF("FORM")=33154
"RTN","IBDFDE4",112,0)
 S IBDF("FRMDEF")=747
"RTN","IBDFDE4",113,0)
 S IBDF("IBDF")=9
"RTN","IBDFDE4",114,0)
 S IBDF("IEN")=213
"RTN","IBDFDE4",115,0)
 S IBDF("TYPE")="MC"
"RTN","IBDFDE4",116,0)
 S IBDF("PI")=92
"RTN","IBDFDE4",117,0)
 D MULT(.RESULT,.IBDF)
"RTN","IBDFDE4",118,0)
 Q
"RTN","IBDFDE41")
0^388^B15981896
"RTN","IBDFDE41",1,0)
IBDFDE41 ;ALB/AAS - AICS Data Entry, process selection lists ; 24-FEB-96 [ 11/13/96  3:58 PM ]
"RTN","IBDFDE41",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE41",3,0)
 ;
"RTN","IBDFDE41",4,0)
% G ^IBDFDE
"RTN","IBDFDE41",5,0)
 ;
"RTN","IBDFDE41",6,0)
SEL(SEL) ; -- Build results array
"RTN","IBDFDE41",7,0)
 N IBDX,DSPTXT,IBQUIT,IBDQL,QCNT,IBDQLFR
"RTN","IBDFDE41",8,0)
 S IBQUIT=0
"RTN","IBDFDE41",9,0)
 ;
"RTN","IBDFDE41",10,0)
 I +SEL=SEL S CHOICE=$G(^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"),SEL))
"RTN","IBDFDE41",11,0)
 I +SEL'=SEL S CHOICE=SEL
"RTN","IBDFDE41",12,0)
 Q:IBQUIT
"RTN","IBDFDE41",13,0)
 ;
"RTN","IBDFDE41",14,0)
 ; -- build selections
"RTN","IBDFDE41",15,0)
 S RESULT(0)=$G(RESULT(0))+1
"RTN","IBDFDE41",16,0)
 W "  ",$P(CHOICE,"^"),"   ",$P(CHOICE,"^",3)
"RTN","IBDFDE41",17,0)
 ;
"RTN","IBDFDE41",18,0)
 S RESULT(RESULT(0))=IBDF("PI")_"^"_$P(CHOICE,"^",4)_"^"_$P(CHOICE,"^")_"^^^"_$P(CHOICE,"^",3)_"^"_$G(IBDF("IEN"))
"RTN","IBDFDE41",19,0)
 S IBDPI(IBDF("PI"),RESULT(0))=RESULT(RESULT(0))
"RTN","IBDFDE41",20,0)
 ;
"RTN","IBDFDE41",21,0)
 ; --validate code for active problem list
"RTN","IBDFDE41",22,0)
 I $P($G(^IBE(357.6,IBDF("PI"),0)),"^")="PX INPUT PATIENT ACTIVE PROBLEM" D
"RTN","IBDFDE41",23,0)
 .N X S X=$P(CHOICE,"^",2) Q:X=""
"RTN","IBDFDE41",24,0)
 .I X=799.9 W !,$C(7),$G(IOINHI),"Warning: The ICD9 Diagnosis associated with this problem needs to be updated!",$G(IOINORM) Q
"RTN","IBDFDE41",25,0)
 .D TESTICD^IBDFN7
"RTN","IBDFDE41",26,0)
 .I '$D(X) W !,$C(7),$G(IOINHI),"Warning: The ICD9 code associated with this problem is inactive.",$G(IOINORM)
"RTN","IBDFDE41",27,0)
 ;
"RTN","IBDFDE41",28,0)
 Q
"RTN","IBDFDE41",29,0)
 ;
"RTN","IBDFDE41",30,0)
LST ; -- List previous selections and selections to choose from.
"RTN","IBDFDE41",31,0)
 N I,CNT,IBQUIT,NUM
"RTN","IBDFDE41",32,0)
 ;
"RTN","IBDFDE41",33,0)
 ; -- list previous selections
"RTN","IBDFDE41",34,0)
 D PREVSEL
"RTN","IBDFDE41",35,0)
 ;
"RTN","IBDFDE41",36,0)
 ; -- list available choices
"RTN","IBDFDE41",37,0)
 S (IBQUIT,CNT)=0
"RTN","IBDFDE41",38,0)
 S NUM=+$G(^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"),0))
"RTN","IBDFDE41",39,0)
 W !!,"Choose from: "
"RTN","IBDFDE41",40,0)
 S I=0 F  S I=$O(^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"),I)) Q:'I!(IBQUIT)  D
"RTN","IBDFDE41",41,0)
 .S CHOICE=$G(^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"),I))
"RTN","IBDFDE41",42,0)
 .S CNT=CNT+1,NUMBER(CNT)=I
"RTN","IBDFDE41",43,0)
 .W !?3,CNT,?7,$S($P(CHOICE,"^",2)'="":$P(CHOICE,"^",2),1:$P(CHOICE,"^")),?20,"  ",$P(CHOICE,"^",3)
"RTN","IBDFDE41",44,0)
 .I NUM>15,NUM>I,'(CNT#15) D PAUSE^IBDFDE I 'IBQUIT W $C(13),$J("",55),$C(13)
"RTN","IBDFDE41",45,0)
 Q
"RTN","IBDFDE41",46,0)
 ;
"RTN","IBDFDE41",47,0)
PREVSEL ; -- List previous selections
"RTN","IBDFDE41",48,0)
 N I,CNT
"RTN","IBDFDE41",49,0)
 S CNT=0
"RTN","IBDFDE41",50,0)
 ;
"RTN","IBDFDE41",51,0)
 ; -- list previous selections
"RTN","IBDFDE41",52,0)
 I $D(IBDPI(IBDF("PI")))>1 S I=0 F  S I=$O(IBDPI(IBDF("PI"),I)) Q:'I  D
"RTN","IBDFDE41",53,0)
 .Q:$P(IBDPI(IBDF("PI"),I),"^",7)'=IBDF("IEN")  ; not the same list
"RTN","IBDFDE41",54,0)
 .S CNT=CNT+1
"RTN","IBDFDE41",55,0)
 .W:CNT=1 !!,IOINHI,"   You have previously selected: ",IOINORM
"RTN","IBDFDE41",56,0)
 .W !,?7,$S($P($G(^IBE(357.6,+IBDPI(IBDF("PI"),I),0)),"^")="GMP INPUT CLINIC COMMON PROBLEMS":$$LEX^IBDFDE1($P(IBDPI(IBDF("PI"),I),"^",2)),1:$P(IBDPI(IBDF("PI"),I),"^",2))
"RTN","IBDFDE41",57,0)
 .W ?16,$P(IBDPI(IBDF("PI"),I),"^",3),?50,$P(IBDPI(IBDF("PI"),I),"^",6)
"RTN","IBDFDE41",58,0)
 W !
"RTN","IBDFDE41",59,0)
 Q
"RTN","IBDFDE41",60,0)
 ;
"RTN","IBDFDE41",61,0)
DEFAULT ; -- compute default answer
"RTN","IBDFDE41",62,0)
 N CNT,SEL,NAME,PIECE,SELAST
"RTN","IBDFDE41",63,0)
 S (CNT,SEL,SELAST)=0
"RTN","IBDFDE41",64,0)
 S NAME=$P($G(^IBE(357.6,+IBDF("PI"),0)),"^")
"RTN","IBDFDE41",65,0)
 S PIECE=$S(NAME["INPUT PROCEDURE CODE":2,NAME["INPUT DIAGNOSIS CODE":2,NAME["INPUT VISIT TYPE":2,1:3)
"RTN","IBDFDE41",66,0)
 F  S SEL=$O(IBDPI(IBDF("PI"),SEL)) Q:'SEL  D
"RTN","IBDFDE41",67,0)
 .Q:$P(IBDPI(IBDF("PI"),SEL),"^",7)'=IBDF("IEN")  ; not the same list
"RTN","IBDFDE41",68,0)
 .S CNT=CNT+1,SELAST=SEL
"RTN","IBDFDE41",69,0)
 I $G(SELAST) S DIR("B")=$P(IBDPI(IBDF("PI"),SELAST),"^",PIECE),IBDEFLT(IBDF("PI"))=DIR("B")
"RTN","IBDFDE41",70,0)
 D PREVSEL
"RTN","IBDFDE41",71,0)
 Q
"RTN","IBDFDE41",72,0)
 ;
"RTN","IBDFDE41",73,0)
PARTLST(ARY,NEXT,ANS) ; -- input has more than one match, prompt for which one
"RTN","IBDFDE41",74,0)
 N I,J,K,N,IBD,ANS2,SEL,CHOICE
"RTN","IBDFDE41",75,0)
 S SEL=0
"RTN","IBDFDE41",76,0)
 S NEXT=$E(NEXT,1,$L(NEXT)-1)_$C($A($E(NEXT,$L(NEXT)))-1)_"~"
"RTN","IBDFDE41",77,0)
 ;
"RTN","IBDFDE41",78,0)
 S J=0,K=NEXT F  S K=$O(@ARY@(K)) Q:$E(K,1,$L(ANS))'=ANS  D
"RTN","IBDFDE41",79,0)
 .S N=0 F  S N=$O(@ARY@(K,N)) Q:'N  D
"RTN","IBDFDE41",80,0)
 ..S J=J+1,IBD(J)=@ARY@(K,N),CHOICE=$$CHOICE^IBDFDE2(IBD(J))
"RTN","IBDFDE41",81,0)
 ..W !?6,J,?10,$S($P(CHOICE,"^",2)'="":$P(CHOICE,"^",2),1:$P(CHOICE,"^",3)),?20,$P(CHOICE,"^",1),?50,"   ",$P(CHOICE,"^",8),"   ",$P(CHOICE,"^",4)
"RTN","IBDFDE41",82,0)
 ;
"RTN","IBDFDE41",83,0)
ASKNUM I J<1 G PARTLQ
"RTN","IBDFDE41",84,0)
 W !,"   Choose 1-",J,": " R ANS2:DTIME
"RTN","IBDFDE41",85,0)
 I '$T!($E(ANS2,1)="^")!(ANS2="") S SEL="" G PARTLQ
"RTN","IBDFDE41",86,0)
 I $E(ANS2,1)="?" W !,"Enter a number from 1 - ",J G ASKNUM
"RTN","IBDFDE41",87,0)
 S ANS2=+ANS2
"RTN","IBDFDE41",88,0)
 I ANS2<1!(ANS2>J) G ASKNUM
"RTN","IBDFDE41",89,0)
 I $G(IBD(ANS2))="" G ASKNUM
"RTN","IBDFDE41",90,0)
 W !
"RTN","IBDFDE41",91,0)
 S SEL=$G(IBD(ANS2))
"RTN","IBDFDE41",92,0)
PARTLQ Q SEL
"RTN","IBDFDE42")
0^389^B4640064
"RTN","IBDFDE42",1,0)
IBDFDE42 ;ALB/AAS - AICS Data Entry, check selection rules ; 24-FEB-96
"RTN","IBDFDE42",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE42",3,0)
 ;
"RTN","IBDFDE42",4,0)
% G ^IBDFDE
"RTN","IBDFDE42",5,0)
 ;
"RTN","IBDFDE42",6,0)
CHK ; -- see if rules allow for more or less than one
"RTN","IBDFDE42",7,0)
 ;    rules 0 := select any number
"RTN","IBDFDE42",8,0)
 ;          1 := exactly 1
"RTN","IBDFDE42",9,0)
 ;          2 := at most 1
"RTN","IBDFDE42",10,0)
 ;          3 := at least 1 (1 or more)
"RTN","IBDFDE42",11,0)
 N I,IBDY,MATCH
"RTN","IBDFDE42",12,0)
 S (MATCH,OVER,ASKOTHER)=0
"RTN","IBDFDE42",13,0)
 ;
"RTN","IBDFDE42",14,0)
 ; -- find all matches
"RTN","IBDFDE42",15,0)
 S MATCH=0
"RTN","IBDFDE42",16,0)
 S IBDY=0 F  S IBDY=$O(IBDPI(IBDF("PI"),IBDY)) Q:'IBDY  S MATCH=MATCH+1
"RTN","IBDFDE42",17,0)
 ;
"RTN","IBDFDE42",18,0)
 ; -- any number allowed
"RTN","IBDFDE42",19,0)
 I RULE=0 D
"RTN","IBDFDE42",20,0)
 .I ANS="" S OVER=0 Q  ;nothing selected, don't reask
"RTN","IBDFDE42",21,0)
 .I ANS'="" S OVER=1 Q  ;something selected, reask
"RTN","IBDFDE42",22,0)
 ;
"RTN","IBDFDE42",23,0)
 ; -- exactly one required
"RTN","IBDFDE42",24,0)
 I RULE=1 D
"RTN","IBDFDE42",25,0)
 .I MATCH>1 S OVER=2 W:'$G(IBDREDIT) !,"More than one selected, you must delete one" Q
"RTN","IBDFDE42",26,0)
 .I MATCH=1 S OVER=0 Q  ;exactly one selected
"RTN","IBDFDE42",27,0)
 .I MATCH<1 S OVER=1 W:'$G(IBDREDIT) !!,"A ",IOINHI,IBDASK,IOINORM," selection is required.",! Q
"RTN","IBDFDE42",28,0)
 ;
"RTN","IBDFDE42",29,0)
 ; -- at most one required
"RTN","IBDFDE42",30,0)
 I RULE=2 D
"RTN","IBDFDE42",31,0)
 .I MATCH>1 S OVER=2 W:'$G(IBDREDIT) !,"More than one selected, you must delete one" Q
"RTN","IBDFDE42",32,0)
 .I MATCH=1 S OVER=0 Q  ;exactly one selected
"RTN","IBDFDE42",33,0)
 .I ANS'="",MATCH<1 S OVER=1 ;if match = 0 thats okay but ask
"RTN","IBDFDE42",34,0)
 ;
"RTN","IBDFDE42",35,0)
 ; -- at least one required
"RTN","IBDFDE42",36,0)
 I RULE=3 D
"RTN","IBDFDE42",37,0)
 .S OVER=1
"RTN","IBDFDE42",38,0)
 .I MATCH<1 S OVER=1 W:'$G(IBDREDIT) !!,"A ",IOINHI,IBDASK,IOINORM," selection is required.",! Q
"RTN","IBDFDE42",39,0)
 .I MATCH>1,ANS="" S OVER=0 Q  ;more than one selected
"RTN","IBDFDE42",40,0)
 .I MATCH=1,ANS="" S OVER=0 Q  ;exactly one selected
"RTN","IBDFDE42",41,0)
 ;
"RTN","IBDFDE42",42,0)
 I OVER=2 D DEL^IBDFDE1
"RTN","IBDFDE42",43,0)
 D DELQLF
"RTN","IBDFDE42",44,0)
CHKQ Q
"RTN","IBDFDE42",45,0)
 ;
"RTN","IBDFDE42",46,0)
DELQLF ; -- delete choices if selected
"RTN","IBDFDE42",47,0)
 Q:(+$G(SEL)=0)
"RTN","IBDFDE42",48,0)
 K ^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"),+$G(SEL))
"RTN","IBDFDE42",49,0)
 Q
"RTN","IBDFDE5")
0^171^B71541193
"RTN","IBDFDE5",1,0)
IBDFDE5 ;ALB/AAS - AICS Manual Data Entry, Loader routine for 357.6 ; 19-APR-96
"RTN","IBDFDE5",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE5",3,0)
 ;
"RTN","IBDFDE5",4,0)
% G ^IBDFDE
"RTN","IBDFDE5",5,0)
 ;
"RTN","IBDFDE5",6,0)
 ;
"RTN","IBDFDE5",7,0)
COMPLST ; -- procedure, compile form list arrays in ^tmp
"RTN","IBDFDE5",8,0)
 ;    ^tmp("ibd-lText",$j,form,package interface,list,text,cnt,n)=entry number
"RTN","IBDFDE5",9,0)
 ;    ^tmp("ibd-lCode",$j,form,package interface,list," "_code,cnt,n)= entry number
"RTN","IBDFDE5",10,0)
 ;    ^tmp("ibd-lst",$j,form,package inteface,list)=display text^display code^input value^ optional caption^ optional term^selectable?
"RTN","IBDFDE5",11,0)
 ;
"RTN","IBDFDE5",12,0)
 N IBDI,FORM,PI,IEN,CNT,CH,CODE
"RTN","IBDFDE5",13,0)
 I '$G(IBDF("PI"))!('$G(IBDF("IEN")))!('$G(IBDFMIEN)) G COMPQ
"RTN","IBDFDE5",14,0)
 S PI=IBDF("PI"),IEN=IBDF("IEN"),FORM=IBDFMIEN
"RTN","IBDFDE5",15,0)
 ;
"RTN","IBDFDE5",16,0)
 ;K ^TMP("IBD-LST",$J,FORM,PI,IEN),^TMP("IBD-LTEXT",$J,FORM,PI,IEN),^TMP("IBD-LCODE",$J,FORM,PI,IEN)
"RTN","IBDFDE5",17,0)
 K ^TMP("IBD-LTEXT",$J,FORM,PI,IEN),^TMP("IBD-LCODE",$J,FORM,PI,IEN)
"RTN","IBDFDE5",18,0)
 ;
"RTN","IBDFDE5",19,0)
 ;M ^TMP("IBD-LST",$J,FORM,PI,IEN)=CHOICE
"RTN","IBDFDE5",20,0)
 K CHOICE
"RTN","IBDFDE5",21,0)
 ;
"RTN","IBDFDE5",22,0)
 ; -- Expand choices
"RTN","IBDFDE5",23,0)
 S HDR=""
"RTN","IBDFDE5",24,0)
 S IBDI=0 F  S IBDI=$O(^TMP("IBD-LST",$J,FORM,PI,IEN,IBDI)) Q:'IBDI  S CH=$G(^(IBDI)) D
"RTN","IBDFDE5",25,0)
 .I $P(CH,"^",7)=0 S HDR=$P(CH,"^") Q
"RTN","IBDFDE5",26,0)
 .I $P(CH,"^",8)="" S $P(^TMP("IBD-LST",$J,FORM,PI,IEN,IBDI),"^",8)=HDR
"RTN","IBDFDE5",27,0)
 .;
"RTN","IBDFDE5",28,0)
 .; -- build array of text
"RTN","IBDFDE5",29,0)
 .I $P(CH,"^",1)'="" D
"RTN","IBDFDE5",30,0)
 ..I '$D(^TMP("IBD-LTEXT",$J,FORM,PI,IEN,$E($$UP^XLFSTR($P(CH,"^",1)),1,80))) S ^TMP("IBD-LTEXT",$J,FORM,PI,IEN,$E($$UP^XLFSTR($P(CH,"^",1)),1,80),1)=IBDI Q
"RTN","IBDFDE5",31,0)
 ..S CNT=$O(^TMP("IBD-LTEXT",$J,FORM,PI,IEN,$E($$UP^XLFSTR($P(CH,"^",1)),1,80),""),-1)
"RTN","IBDFDE5",32,0)
 ..S ^TMP("IBD-LTEXT",$J,FORM,PI,IEN,$E($$UP^XLFSTR($P(CH,"^",1)),1,80),CNT+1)=IBDI
"RTN","IBDFDE5",33,0)
 .;
"RTN","IBDFDE5",34,0)
 .; -- build array of codes
"RTN","IBDFDE5",35,0)
 .S CODE=$S($P(CH,"^",2)'="":$P(CH,"^",2),1:$P(CH,"^",3)) Q:CODE=""
"RTN","IBDFDE5",36,0)
 .I '$D(^TMP("IBD-LCODE",$J,FORM,PI,IEN," "_CODE,1)) S ^TMP("IBD-LCODE",$J,FORM,PI,IEN," "_CODE,1)=IBDI Q
"RTN","IBDFDE5",37,0)
 .S CNT=$O(^TMP("IBD-LCODE",$J,FORM,PI,IEN," "_CODE,""),-1) S ^TMP("IBD-LCODE",$J,FORM,PI,IEN," "_CODE,CNT+1)=IBDI
"RTN","IBDFDE5",38,0)
 ;
"RTN","IBDFDE5",39,0)
COMPQ Q
"RTN","IBDFDE5",40,0)
 ;
"RTN","IBDFDE5",41,0)
MDCOMP(FORM) ; -- compile form for manual data entry into ^xtmp
"RTN","IBDFDE5",42,0)
 ; -- ^xtmp("ibd"_form,0) := date ^ date
"RTN","IBDFDE5",43,0)
 ;    ^xtmp("ibd"_form, "ibd-obj", n) := object listing for form
"RTN","IBDFDE5",44,0)
 ;    ^xtmp("ibd"_form, "ibd-lst", pkg interface, list, n) := listing of each list
"RTN","IBDFDE5",45,0)
 ;    ^xtmp("ibd"_form, "ibd-lst", pkg interface, list ,"code", " "_code, n) := code index
"RTN","IBDFDE5",46,0)
 ;    ^xtmp("ibd"_form, "ibd-lst", pkg interface, list "text", text, n) := text index
"RTN","IBDFDE5",47,0)
 ;
"RTN","IBDFDE5",48,0)
 ; -- before converting to xtmp must resolve compile issues,
"RTN","IBDFDE5",49,0)
 ;    such as when form is in use for data entry etc.
"RTN","IBDFDE5",50,0)
 ;    need schema for locks...think about this
"RTN","IBDFDE5",51,0)
 ;    remember to check old logic for changes
"RTN","IBDFDE5",52,0)
 ;
"RTN","IBDFDE5",53,0)
 N I,J,X,Y,NAM,IBDOBJ
"RTN","IBDFDE5",54,0)
 G:$G(^IBE(357,+$G(FORM),0))="" MDCQ
"RTN","IBDFDE5",55,0)
 S NAM="IBD"_FORM
"RTN","IBDFDE5",56,0)
 L +^XTMP(NAM):10 I '$T W !!,"form is in use, data entry compile failed",! S IBQUIT=1 G MDCQ
"RTN","IBDFDE5",57,0)
 K ^XTMP(NAM) ; make sure ibdfde locks so doesn't kill when in use
"RTN","IBDFDE5",58,0)
 S ^XTMP(NAM,0)=$$FMADD^XLFDT(DT,90)_"^"_DT
"RTN","IBDFDE5",59,0)
 D FRMLSTI^IBDFRPC(.IBDOBJ,FORM,"",1)
"RTN","IBDFDE5",60,0)
 M ^XTMP(NAM,"IBD-OBJ")=IBDOBJ
"RTN","IBDFDE5",61,0)
 K IBDOBJ
"RTN","IBDFDE5",62,0)
 ;
"RTN","IBDFDE5",63,0)
 ; -- build entry for lists
"RTN","IBDFDE5",64,0)
 S X=0 F  S X=$O(^XTMP(NAM,"IBD-OBJ",X)) Q:'X  S Y=^(X) D
"RTN","IBDFDE5",65,0)
 .Q:$P($G(^IBE(357.6,+$P(Y,"^",2),0)),"^",14)  ;dyanamic lists get compiled by ibdfde2 and then killed
"RTN","IBDFDE5",66,0)
 .I $P(Y,"^",5)="LIST" D MDCLIST(FORM,$P(Y,"^",2),$P(Y,"^",6))
"RTN","IBDFDE5",67,0)
 ;
"RTN","IBDFDE5",68,0)
MDCQ L -^XTMP(NAM)
"RTN","IBDFDE5",69,0)
 Q
"RTN","IBDFDE5",70,0)
 ;
"RTN","IBDFDE5",71,0)
MDCLIST(FORM,PI,LIST) ; -- Compile one list
"RTN","IBDFDE5",72,0)
 N I,J,X,Y,IBDF,CH,CODE
"RTN","IBDFDE5",73,0)
 G:$G(^IBE(357.6,+$G(PI),0))=""!($G(^IBE(357.2,+$G(LIST),0))="")!($G(^IBE(357,+$G(FORM),0))="") MDCLQ
"RTN","IBDFDE5",74,0)
 S IBDF("PI")=PI,IBDF("IEN")=LIST,IBDF("TYPE")="LIST"
"RTN","IBDFDE5",75,0)
 K ^XTMP("IBD"_FORM,"IBD-LST",PI,LIST)
"RTN","IBDFDE5",76,0)
 D OBJLST^IBDFRPC1(.CH,.IBDF)
"RTN","IBDFDE5",77,0)
 M ^XTMP("IBD"_FORM,"IBD-LST",PI,LIST)=CH
"RTN","IBDFDE5",78,0)
 ;
"RTN","IBDFDE5",79,0)
 ; -- Expand choices
"RTN","IBDFDE5",80,0)
 S HDR=""
"RTN","IBDFDE5",81,0)
 S IBDI=0 F  S IBDI=$O(^XTMP("IBD"_FORM,"IBD-LST",PI,LIST,IBDI)) Q:'IBDI  S CH=^(IBDI) D
"RTN","IBDFDE5",82,0)
 .I $P(CH,"^",7)=0 S HDR=$P(CH,"^") Q
"RTN","IBDFDE5",83,0)
 .I $P(CH,"^",8)="" S $P(^XTMP("IBD"_FORM,"IBD-LST",PI,LIST,I),"^",8)=HDR
"RTN","IBDFDE5",84,0)
 .;
"RTN","IBDFDE5",85,0)
 .; -- build array of text
"RTN","IBDFDE5",86,0)
 .I $P(CH,"^",1)'="" D
"RTN","IBDFDE5",87,0)
 ..I '$D(^XTMP("IBD"_FORM,"IBD-LST",PI,LIST,"TEXT",$$UP^XLFSTR($P(CH,"^",1)))) S ^XTMP("IBD"_FORM,PI,LIST,"TEXT",$$UP^XLFSTR($P(CH,"^",1)),1)=IBDI Q
"RTN","IBDFDE5",88,0)
 ..S CNT=$O(^XTMP("IBD"_FORM,"IBD-LST",PI,LIST,"TEXT",$$UP^XLFSTR($P(CH,"^",1)),""),-1)
"RTN","IBDFDE5",89,0)
 ..S ^XTMP("IBD"_FORM,"IBD-LST",PI,LIST,"TEXT",$$UP^XLFSTR($P(CH,"^",1)),CNT+1)=IBDI
"RTN","IBDFDE5",90,0)
 .;
"RTN","IBDFDE5",91,0)
 .; -- build array of codes
"RTN","IBDFDE5",92,0)
 .S CODE=$S($P(CH,"^",2)'="":$P(CH,"^",2),1:$P(CH,"^",3)) Q:CODE=""
"RTN","IBDFDE5",93,0)
 .I '$D(^XTMP("IBD"_FORM,"IBD-LST",PI,LIST,"CODE"," "_CODE,1)) S ^XTMP("IBD"_FORM,"IBD-LST",PI,LIST,"CODE"," "_CODE,1)=IBDI Q
"RTN","IBDFDE5",94,0)
 .S CNT=$O(^XTMP("IBD"_FORM,"IBD-LST",PI,LIST,"CODE"," "_CODE,""),-1) S ^XTMP("IBD"_FORM,"IBD-LST",PI,LIST,"CODE"," "_CODE,CNT+1)=IBDI
"RTN","IBDFDE5",95,0)
 .Q
"RTN","IBDFDE5",96,0)
 ;
"RTN","IBDFDE5",97,0)
MDCLQ Q
"RTN","IBDFDE5",98,0)
 ;
"RTN","IBDFDE5",99,0)
18 ; -- Post init for data entry patch
"RTN","IBDFDE5",100,0)
 D 14,CLNTMP,XREF,PIDIM,PIUP
"RTN","IBDFDE5",101,0)
 Q
"RTN","IBDFDE5",102,0)
 ;
"RTN","IBDFDE5",103,0)
14 ;Populate the .14 FIELD IN FILE 357.96
"RTN","IBDFDE5",104,0)
 S ZTIO="",ZTDTH=$H,ZTRTN="DQ^IBDFDE5",ZTDESC="IBD-Patch 2 populate 357.96;.14" D ^%ZTLOAD
"RTN","IBDFDE5",105,0)
 D BMES^XPDUTL("Queing the Conversion to populate the .14 field (NO APPOINTMENT ENTRY) of file 357.96 ENCOUNTER FORM TRACKING......")
"RTN","IBDFDE5",106,0)
 Q
"RTN","IBDFDE5",107,0)
 ;
"RTN","IBDFDE5",108,0)
DQ ;
"RTN","IBDFDE5",109,0)
 N IBDFIFN,IBDFCLIN,IBDFAPPT,IBDFDFN
"RTN","IBDFDE5",110,0)
 S IBDFIFN=0
"RTN","IBDFDE5",111,0)
 F  S IBDFIFN=$O(^IBD(357.96,IBDFIFN)) Q:'IBDFIFN  S IBDFNODE=$G(^IBD(357.96,IBDFIFN,0)) S IBDFDFN=$P(IBDFNODE,"^",2),IBDFAPPT=$P(IBDFNODE,"^",3) I IBDFDFN,IBDFAPPT D
"RTN","IBDFDE5",112,0)
 .S DIE="^IBD(357.96,",DA=IBDFIFN
"RTN","IBDFDE5",113,0)
 .I $D(^DPT(+IBDFIFN,"S",IBDFAPPT)) S DR=".14////0"
"RTN","IBDFDE5",114,0)
 .E  S DR=".14////1"
"RTN","IBDFDE5",115,0)
 .D ^DIE K DA,DR,DIE
"RTN","IBDFDE5",116,0)
 ;W !!,"DONE"
"RTN","IBDFDE5",117,0)
 Q
"RTN","IBDFDE5",118,0)
CLNTMP ; -- kill tmp globals, on load, forces rebuild with updates
"RTN","IBDFDE5",119,0)
 K ^TMP("IBD-LST"),^TMP("IBD-OBJ")
"RTN","IBDFDE5",120,0)
 Q
"RTN","IBDFDE5",121,0)
 ;
"RTN","IBDFDE5",122,0)
XREF ;
"RTN","IBDFDE5",123,0)
 D BMES^XPDUTL("Removing 'RECD' cross-reference on PRINTED FORM ID field")
"RTN","IBDFDE5",124,0)
 S DA=0
"RTN","IBDFDE5",125,0)
 F  S DA=$O(^DD(357.96,.01,1,DA)) Q:DA<1  I $G(^(DA,0))="357.96^RECD^MUMPS" S DIK="^DD(357.96,.01,1,",DA(2)=357.96,DA(1)=.01 D ^DIK K DIK
"RTN","IBDFDE5",126,0)
 ;
"RTN","IBDFDE5",127,0)
 D BMES^XPDUTL("Removing 'RECD2' cross-reference on DATE/TIME RECEIVED IN VISTA field")
"RTN","IBDFDE5",128,0)
 S DA=0
"RTN","IBDFDE5",129,0)
 F  S DA=$O(^DD(357.96,.06,1,DA)) Q:DA<1  I $G(^(DA,0))="357.96^RECD2^MUMPS" S DIK="^DD(357.96,.06,1,",DA(2)=357.96,DA(1)=.06 D ^DIK K DIK
"RTN","IBDFDE5",130,0)
 ;
"RTN","IBDFDE5",131,0)
 D BMES^XPDUTL("Removing 'RECD3' cross-reference on DATE/TIME PRINTED field")
"RTN","IBDFDE5",132,0)
 S DA=0
"RTN","IBDFDE5",133,0)
 F  S DA=$O(^DD(357.96,.05,1,DA)) Q:DA<1  I $G(^(DA,0))="357.96^RECD3^MUMPS" S DIK="^DD(357.96,.05,1,",DA(2)=357.96,DA(1)=.05 D ^DIK K DIK
"RTN","IBDFDE5",134,0)
 K DA
"RTN","IBDFDE5",135,0)
 K ^IBD(357.96,"RECD")
"RTN","IBDFDE5",136,0)
 Q
"RTN","IBDFDE5",137,0)
 ;
"RTN","IBDFDE5",138,0)
PIDIM ;
"RTN","IBDFDE5",139,0)
 D BMES^XPDUTL("Updating PCE DIM OUTPUT TRANSFORM in file 357.6")
"RTN","IBDFDE5",140,0)
 N IBD,LINE,PKG,NOD14,IEN
"RTN","IBDFDE5",141,0)
 F IBD=1:1 S LINE=$P($T(OUTTRANS+IBD),";;",2) Q:LINE=""  D
"RTN","IBDFDE5",142,0)
 .S PKG=$P(LINE,"^",2)
"RTN","IBDFDE5",143,0)
 .S NOD14=$P(LINE,"^",3,99)
"RTN","IBDFDE5",144,0)
 .S IEN=+$O(^IBE(357.6,"B",$E(PKG,1,30),0))
"RTN","IBDFDE5",145,0)
 .Q:IEN<1
"RTN","IBDFDE5",146,0)
 .I $P($G(^IBE(357.6,IEN,0)),"^")=PKG S ^IBE(357.6,IEN,14)=NOD14
"RTN","IBDFDE5",147,0)
 Q
"RTN","IBDFDE5",148,0)
OUTTRANS ;;
"RTN","IBDFDE5",149,0)
 ;;61^INPUT PROVIDER^S Y=$$DSPLYPRV^IBDFN9(Y)
"RTN","IBDFDE5",150,0)
 ;;62^INPUT VISIT TYPE^S Y=$$DSPLYCPT^IBDFN9(Y)
"RTN","IBDFDE5",151,0)
 ;;102^PX INPUT VISIT TYPE^S Y=$$DSPLYCPT^IBDFN9(Y)
"RTN","IBDFDE5",152,0)
 ;;
"RTN","IBDFDE5",153,0)
PIUP ;
"RTN","IBDFDE5",154,0)
 D BMES^XPDUTL("Updating Package Interface File for Data Entry")
"RTN","IBDFDE5",155,0)
 N PKG,ENT,RTN,DYN,NODE18,IEN
"RTN","IBDFDE5",156,0)
 F IBD=1:1 S LINE=$P($T(UPDATE+IBD),";;",2) Q:LINE=""  D
"RTN","IBDFDE5",157,0)
 .S PKG=$P(LINE,"^",2)
"RTN","IBDFDE5",158,0)
 .S ENT=$P(LINE,"^",3)
"RTN","IBDFDE5",159,0)
 .S RTN=$P(LINE,"^",4)
"RTN","IBDFDE5",160,0)
 .S DYN=$P(LINE,"^",5)
"RTN","IBDFDE5",161,0)
 .S NOD18=$P(LINE,"^",6,99)
"RTN","IBDFDE5",162,0)
 .S IEN=+$O(^IBE(357.6,"B",$E(PKG,1,30),0))
"RTN","IBDFDE5",163,0)
 .Q:IEN<1
"RTN","IBDFDE5",164,0)
 .I $P($G(^IBE(357.6,IEN,0)),"^")=PKG D
"RTN","IBDFDE5",165,0)
 ..S ^IBE(357.6,IEN,18)=NOD18
"RTN","IBDFDE5",166,0)
 ..I $G(ENT)'="" S $P(^IBE(357.6,IEN,0),"^",2)=ENT
"RTN","IBDFDE5",167,0)
 ..I $G(RTN)'="" S $P(^IBE(357.6,IEN,0),"^",3)=RTN
"RTN","IBDFDE5",168,0)
 ..I $G(DYN)'="" S $P(^IBE(357.6,IEN,0),"^",14)=DYN
"RTN","IBDFDE5",169,0)
 Q
"RTN","IBDFDE5",170,0)
 ;
"RTN","IBDFDE5",171,0)
UPDATE ;;
"RTN","IBDFDE5",172,0)
 ;;59^INPUT PROCEDURE CODE (CPT4)^^^^S IBDF("OTHER")="81^I '$P(^(0),U,4)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"CPT Procedure Code")
"RTN","IBDFDE5",173,0)
 ;;61^INPUT PROVIDER^PRVDR^IBDFN4^1^S IBDF("OTHER")="200^$$SCREEN^IBDFDE10(+Y)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Provider")
"RTN","IBDFDE5",174,0)
 ;;62^INPUT VISIT TYPE^^^^S IBDF("OTHER")="357.69^I '$P(^(0),U,4)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Visit Type (EM) Code")
"RTN","IBDFDE5",175,0)
 ;;69^INPUT DIAGNOSIS CODE (ICD9)^^^^S IBDF("OTHER")="80^I '$P(^(0),U,9)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Diagnosis Code")
"RTN","IBDFDE5",176,0)
 ;;74^PX INPUT PATIENT ACTIVE PROBLEM^DSELECT^GMPLENFM^1^D LIST^IBDFDE2(.IBDSEL,.IBDF,"Active Problem")
"RTN","IBDFDE5",177,0)
 ;;91^PX INPUT EDUCATION TOPICS^^^^S IBDF("OTHER")="9999999.09^I '$P(^(0),U,3)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Patient Education")
"RTN","IBDFDE5",178,0)
 ;;92^PX INPUT EXAMS^^^^S IBDF("OTHER")="9999999.15^I '$P(^(0),U,4)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Exam")
"RTN","IBDFDE5",179,0)
 ;;93^PX INPUT HEALTH FACTORS^^^^S IBDF("OTHER")="9999999.64^I '$P(^(0),U,10),$P(^(0),U,10)=""F""" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Health Factors")
"RTN","IBDFDE5",180,0)
 ;;94^PX INPUT IMMUNIZATION^^^^S IBDF("OTHER")="9999999.14^I '$P(^(0),U,7)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Immunizations")
"RTN","IBDFDE5",181,0)
 ;;97^PX INPUT SKIN TESTS^^^^S IBDF("OTHER")="9999999.28^I '$P(^(0),U,3)" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Skin Tests")
"RTN","IBDFDE5",182,0)
 ;;99^PX INPUT VITALS^^^^D HNDPR^IBDFDE3(.IBDSEL,.IBDF)
"RTN","IBDFDE5",183,0)
 ;;103^GMP INPUT CLINIC COMMON PROBLEMS^^^^S IBDF("LEXICON")=1,IBDF("OTHER")="757.01^" D LIST^IBDFDE2(.IBDSEL,.IBDF,"Diagnosis, Problem, or Term")
"RTN","IBDFDE5",184,0)
 ;;
"RTN","IBDFDE5",185,0)
 ;; -- Example of setting up a date/time prompt
"RTN","IBDFDE5",186,0)
 ;;95^PX INPUT CHECKOUT TIME^^^^S IBDF("ASKDATE")=1 D HNDPR^IBDFDE3(.IBDSEL,.IBDF) K IBDF("ASKDATE")
"RTN","IBDFDE5",187,0)
 ;;
"RTN","IBDFDE5",188,0)
 ;; -- Example of setting up a multiple choice field
"RTN","IBDFDE5",189,0)
 ;;100^PX INPUT VISIT CLASSIFICATION^^^^D MULT^IBDFDE4(.IBDSEL,.IBDF)
"RTN","IBDFDE5",190,0)
 ;;
"RTN","IBDFDE6")
0^172^B76903684
"RTN","IBDFDE6",1,0)
IBDFDE6 ;ALB/AAS - AICS Manual Data Entry, Entry point by clinic ; 29-APR-96
"RTN","IBDFDE6",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE6",3,0)
 ;
"RTN","IBDFDE6",4,0)
% N %,%H,C,I,J,X,Y,ADD,DEL,ASKOTHER,DIR,DIC,DA,CNT,DFN,DIRUT,DUOUT,DTOUT,POP,RTN,FRMDATA,IBY,IBQUIT,IBDF,IBDOBJ,IBDPTSTI,IBDPTSTE,IBDPTNM,IBDPTDTI,SEL,IBD,IBDCKOUT
"RTN","IBDFDE6",5,0)
 N IBDPTDTE,IBDFMNME,IBDFMIEN,IBDFMSTI,IBDFMSTE,IBDFMIDI,IBDCLNME,IBFORM,IBDCLNPH,IBDPID,IBDPTPRI,IBDSEL,IBDPI,IBDCO,PXCA,SDCLST,PXCASTAT,PXKNODA,PXKNODB,IBDREDIT,IBDASK,IBDPRE,IBDX,ANS,CLNAME,CLSETUP,IBDSC,FORM,FORMLST,IBDFDT,IBD
"RTN","IBDFDE6",6,0)
 ;
"RTN","IBDFDE6",7,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFDE6",8,0)
 D HOME^%ZIS
"RTN","IBDFDE6",9,0)
 W !!,"Data Entry of Encounter Forms (by Clinic)",!!
"RTN","IBDFDE6",10,0)
 ;
"RTN","IBDFDE6",11,0)
STRT ; -- ask for Clinic, date then patient.  
"RTN","IBDFDE6",12,0)
 ;    Only list patients w/no data entry
"RTN","IBDFDE6",13,0)
 ;    find all forms for appt., then go through 1 at a time
"RTN","IBDFDE6",14,0)
 ;
"RTN","IBDFDE6",15,0)
 D END
"RTN","IBDFDE6",16,0)
 S IBQUIT=0
"RTN","IBDFDE6",17,0)
 S (IBDSC,IBDF("CLINIC"))=$$SELCL G:IBQUIT STRTQ
"RTN","IBDFDE6",18,0)
 I IBDSC<1 S IBQUIT=1 G STRTQ
"RTN","IBDFDE6",19,0)
 S CLNAME=$P($G(^SC(+IBDSC,0)),"^")
"RTN","IBDFDE6",20,0)
 S CLSETUP=$G(^SD(409.95,+$O(^SD(409.95,"B",+IBDSC,0)),0))
"RTN","IBDFDE6",21,0)
 ;
"RTN","IBDFDE6",22,0)
APPT W ! S IBDFDT=$$SELAP(.IBDF) G:IBQUIT STRTQ
"RTN","IBDFDE6",23,0)
 I IBDFDT<0 W !! G STRT
"RTN","IBDFDE6",24,0)
 ;
"RTN","IBDFDE6",25,0)
 D BLD
"RTN","IBDFDE6",26,0)
 I '$D(^TMP("IBD-PL",$J,IBDF("CLINIC"))) W !!,"No appointments on that Date!",!! G APPT
"RTN","IBDFDE6",27,0)
 ;
"RTN","IBDFDE6",28,0)
OVER D HDR ;,LIST
"RTN","IBDFDE6",29,0)
 W !! D SELPT G:IBQUIT STRTQ
"RTN","IBDFDE6",30,0)
 S IBDF("OPTION")=1
"RTN","IBDFDE6",31,0)
 I $G(RESULT)="" G APPT
"RTN","IBDFDE6",32,0)
 I $G(RESULT)=-1 G OVERQ
"RTN","IBDFDE6",33,0)
 S (DFN,IBDF("DFN"))=+RESULT,IBDF("APPT")=$P(RESULT,"^",2)
"RTN","IBDFDE6",34,0)
 S FORMLST=$$FINDID^IBDF18C(DFN,IBDF("APPT"),"",1)
"RTN","IBDFDE6",35,0)
 I FORMLST]"" I IBDF("CLINIC")'=$P(^IBD(357.96,+FORMLST,0),"^",10) S FORMLST=""
"RTN","IBDFDE6",36,0)
 I FORMLST="" W !,"No forms Printed for Patient" D ANYWAY I IBQUIT G STRTQ
"RTN","IBDFDE6",37,0)
 I FORMLST="" G OVERQ ;D PAUSE^IBDFDE G OVERQ
"RTN","IBDFDE6",38,0)
 F IBDX=1:1 S IBDF("FORM")=$P(FORMLST,"^",IBDX) Q:IBDF("FORM")=""  I IBDF("FORM")'="" D EN^IBDFDE K IBDSEL,IBDPI Q:IBQUIT
"RTN","IBDFDE6",39,0)
 W !!
"RTN","IBDFDE6",40,0)
 ;S IBDF("CLINIC")=IBDSC
"RTN","IBDFDE6",41,0)
OVERQ G OVER
"RTN","IBDFDE6",42,0)
 ;
"RTN","IBDFDE6",43,0)
STRTQ ;D PAUSE^IBDFDE
"RTN","IBDFDE6",44,0)
 G:IBQUIT END
"RTN","IBDFDE6",45,0)
 G APPT
"RTN","IBDFDE6",46,0)
 ;
"RTN","IBDFDE6",47,0)
ANYWAY ; -- if no forms available ask if want to enter form anyway
"RTN","IBDFDE6",48,0)
 ;    all to use default form, clinic setup,or any form
"RTN","IBDFDE6",49,0)
 ;
"RTN","IBDFDE6",50,0)
 N X,Y,DIR,DIRUT
"RTN","IBDFDE6",51,0)
 S DIR("?")="If you wish to enter data for this patient anyway, chose whether to use the default form, select any form, or use the clinic setup.  Answer None if you don't wish to enter any data."
"RTN","IBDFDE6",52,0)
 S DIR("A")="Enter Data from [A]ny form, [C]linic Setup, [D]efault, [N]one: "
"RTN","IBDFDE6",53,0)
 S DIR(0)="SA^A:ANYFORM;C:CLINIC SETUP;D:DEFAULT;N:NONE",DIR("B")="CLINIC SETUP"
"RTN","IBDFDE6",54,0)
 I '$D(CLSETUP),+$G(IBDF("CLINIC")) S CLNAME=$P($G(^SC(+IBDF("CLINIC"),0)),"^"),CLSETUP=$G(^SD(409.95,+$O(^SD(409.95,"B",+IBDF("CLINIC"),0)),0))
"RTN","IBDFDE6",55,0)
 I CLSETUP="" S DIR("B")="DEFAULT" W !,"No Forms Defined for Clinic"
"RTN","IBDFDE6",56,0)
 D ^DIR K DIR
"RTN","IBDFDE6",57,0)
 I $D(DUOUT)!($D(DTOUT)) S IBQUIT=1 G ANYWAYQ
"RTN","IBDFDE6",58,0)
 I $D(DIRUT) G ANYWAYQ
"RTN","IBDFDE6",59,0)
 S ANS=Y
"RTN","IBDFDE6",60,0)
 I ANS="N" G ANYWAYQ
"RTN","IBDFDE6",61,0)
 ;
"RTN","IBDFDE6",62,0)
 I ANS="D" D  G ANYWAYQ
"RTN","IBDFDE6",63,0)
 .S IBFORM=$P($G(^IBD(357.09,1,0)),"^",4)
"RTN","IBDFDE6",64,0)
 .I IBFORM="" S IBFORM=$O(^IBE(357,"B","PRIMARY CARE SAMPLE V2.1",0))
"RTN","IBDFDE6",65,0)
 .S FORMLST=$$OTHFRM(IBFORM)
"RTN","IBDFDE6",66,0)
 .Q
"RTN","IBDFDE6",67,0)
 ;
"RTN","IBDFDE6",68,0)
 I ANS="A" D  G ANYWAYQ
"RTN","IBDFDE6",69,0)
 .S DIC("S")="I $P(^(0),U)'=""GARBAGE"",$P(^(0),U)'=""TOOL KIT"""
"RTN","IBDFDE6",70,0)
 .S DIC="^IBE(357,",DIC(0)="AEQM" D ^DIC K DIC Q:+Y<1
"RTN","IBDFDE6",71,0)
 .S IBFORM=+Y
"RTN","IBDFDE6",72,0)
 .S FORMLST=$$OTHFRM(IBFORM)
"RTN","IBDFDE6",73,0)
 .Q
"RTN","IBDFDE6",74,0)
 ;
"RTN","IBDFDE6",75,0)
 I ANS="C" D  G ANYWAYQ
"RTN","IBDFDE6",76,0)
 .F IBD=2,6,8,9,3,4 S IBFORM=$P(CLSETUP,"^",IBD) I IBFORM W ! S FORMLST=FORMLST_$$OTHFRM(IBFORM)_"^"
"RTN","IBDFDE6",77,0)
 .I FORMLST="" W !!,"No forms defined for clinic"
"RTN","IBDFDE6",78,0)
 .Q
"RTN","IBDFDE6",79,0)
ANYWAYQ Q
"RTN","IBDFDE6",80,0)
 ;
"RTN","IBDFDE6",81,0)
OTHFRM(IBFORM) ; -- if no form printed, add form tracking entry,
"RTN","IBDFDE6",82,0)
 ; -- compile form if necessary return form list
"RTN","IBDFDE6",83,0)
 N FORMID,FORMLST
"RTN","IBDFDE6",84,0)
 S FORMID=$P($G(^IBE(357,IBFORM,0)),"^",13)
"RTN","IBDFDE6",85,0)
 I FORMID="" D
"RTN","IBDFDE6",86,0)
 .W !,"Please wait, Creating the necessary entry..."
"RTN","IBDFDE6",87,0)
 .L +^IBE(357,IBFORM):1
"RTN","IBDFDE6",88,0)
 .S FORMID=$$FORMTYPE^IBDF18D(1) W "."
"RTN","IBDFDE6",89,0)
 .S $P(^IBD(357.95,FORMID,0),"^",21)=IBFORM W "."
"RTN","IBDFDE6",90,0)
 .S $P(^IBE(357,IBFORM,0),"^",13)=FORMID
"RTN","IBDFDE6",91,0)
 .S:$P(^IBE(357,IBFORM,0),"^",13) ^IBE(357,"ADEF",$P(^IBE(357,IBFORM,0),"^",13),IBFORM)=""
"RTN","IBDFDE6",92,0)
 .L -^IBE(357,IBFORM)
"RTN","IBDFDE6",93,0)
 S FORMLST=+$$FID^IBDF18C(DFN,IBDF("APPT"),1,FORMID,IBDF("CLINIC"))
"RTN","IBDFDE6",94,0)
 S DIE="^IBD(357.96,",DR=".11////20",DA=FORMLST D ^DIE K DA,DR,DIC,DIE
"RTN","IBDFDE6",95,0)
 ;
"RTN","IBDFDE6",96,0)
 Q FORMLST
"RTN","IBDFDE6",97,0)
 ;
"RTN","IBDFDE6",98,0)
SELCL() ; -- select clinic
"RTN","IBDFDE6",99,0)
 S IBQUIT=0
"RTN","IBDFDE6",100,0)
 N DIR,DA,DR,DIC,DIE,X,Y,ANS,DIRUT
"RTN","IBDFDE6",101,0)
 S ANS=-1
"RTN","IBDFDE6",102,0)
 S DIR("?")="Enter the name of the clinic that you are entering encounter forms for."
"RTN","IBDFDE6",103,0)
 S DIR("S")="I $P(^(0),U,3)=""C"""
"RTN","IBDFDE6",104,0)
 S DIR(0)="PO^44:AEQM",DIR("A")="Select Clinic" D ^DIR K DIR,DA,DR,DIC
"RTN","IBDFDE6",105,0)
 I $D(DUOUT)!($D(DTOUT)) S IBQUIT=1 G SELCLQ
"RTN","IBDFDE6",106,0)
 I $D(DIRUT) G SELCLQ
"RTN","IBDFDE6",107,0)
 S ANS=+Y
"RTN","IBDFDE6",108,0)
SELCLQ Q ANS
"RTN","IBDFDE6",109,0)
 ;
"RTN","IBDFDE6",110,0)
 ;
"RTN","IBDFDE6",111,0)
SELAP(IBDF) ; -- select appointment date for a clinic
"RTN","IBDFDE6",112,0)
 S IBQUIT=0
"RTN","IBDFDE6",113,0)
 N DIR,DA,DR,DIC,DIE,X,Y,ANS,DIRUT
"RTN","IBDFDE6",114,0)
 S ANS=-1
"RTN","IBDFDE6",115,0)
 ;I $G(LASTDATE)?7N S DIR("B")=$$FMTE^XLFDT(LASTDATE)
"RTN","IBDFDE6",116,0)
 ;R !,"Appointment Date: ",X:$G(DTIME)
"RTN","IBDFDE6",117,0)
 S DIR(0)="DO^:DT:EX",DIR("A")="Appointment Date"
"RTN","IBDFDE6",118,0)
 S DIR("?")="Enter the date for the clinic that you wish to enter encounter forms for"
"RTN","IBDFDE6",119,0)
 S DIR("??")="^D APDT^IBDFDE6"
"RTN","IBDFDE6",120,0)
 D ^DIR K DIR
"RTN","IBDFDE6",121,0)
 I $D(DUOUT)!($D(DTOUT)) S IBQUIT=1 G SELAPQ
"RTN","IBDFDE6",122,0)
 I $D(DIRUT) G SELAPQ
"RTN","IBDFDE6",123,0)
 S ANS=+Y
"RTN","IBDFDE6",124,0)
SELAPQ Q ANS
"RTN","IBDFDE6",125,0)
 ;
"RTN","IBDFDE6",126,0)
SELPT ; -- select patient(s) to process
"RTN","IBDFDE6",127,0)
 S IBDCLIN=IBDF("CLINIC") N ARRAY,CNT,IBD K IBDF,PXCA,SEL S IBDF("CLINIC")=IBDCLIN K IBDCLIN
"RTN","IBDFDE6",128,0)
 S (ARRAY,RESULT,ANS)="",(IBQUIT,CNT)=0
"RTN","IBDFDE6",129,0)
 S DIR("?")="Enter the listed number or the name of the patient or the last 4 number of the SSN or the first letter of the last name with the last 4 numbers of the SSN."
"RTN","IBDFDE6",130,0)
 S DIR("??")="^D LIST^IBDFDE6"
"RTN","IBDFDE6",131,0)
 S DIR(0)="FO^1:30",DIR("A")="Select Patient"
"RTN","IBDFDE6",132,0)
 D ^DIR K DIR
"RTN","IBDFDE6",133,0)
 I $D(DUOUT)!($D(DTOUT)) S IBQUIT=1 G SELQ
"RTN","IBDFDE6",134,0)
 S ANS=$$UP^XLFSTR(Y)
"RTN","IBDFDE6",135,0)
 I ANS="" G SELQ
"RTN","IBDFDE6",136,0)
 I $D(DIRUT) S IBQUIT=1 G SELQ
"RTN","IBDFDE6",137,0)
 I ANS=+ANS S ARRAY="IBD-PL" I $D(^TMP(ARRAY,$J,IBDF("CLINIC"),ANS)) S RESULT=^(ANS) W "   ",$P($G(^DPT(+RESULT,0)),"^") G SELQ
"RTN","IBDFDE6",138,0)
 ;
"RTN","IBDFDE6",139,0)
 I ANS?4N S ARRAY="IBD-PL4" D ARRAY(ARRAY,ANS) G FIND
"RTN","IBDFDE6",140,0)
 I ANS?1A4N S ARRAY="IBD-PLB" D ARRAY(ARRAY,ANS) G FIND
"RTN","IBDFDE6",141,0)
 S ARRAY="IBD-PLN" D ARRAY(ARRAY,ANS) D  G FIND
"RTN","IBDFDE6",142,0)
 .S NAME=ANS F  S NAME=$O(^TMP(ARRAY,$J,IBDF("CLINIC"),NAME)) Q:$E(NAME,1,$L(ANS))'=ANS  D ARRAY(ARRAY,NAME)
"RTN","IBDFDE6",143,0)
 G SELQ
"RTN","IBDFDE6",144,0)
FIND ;find appropriate pt appt from array
"RTN","IBDFDE6",145,0)
 I CNT=1 S RESULT=$G(^TMP(ARRAY,$J,IBDF("CLINIC"),$P(IBD(CNT),"^",2),+IBD(CNT))) D:$D(RESULT)  G SELQ
"RTN","IBDFDE6",146,0)
 .I ARRAY="IBD-PLN" W "   ",$E($P($G(^DPT(+RESULT,0)),"^"),($L(ANS)+1),999) Q
"RTN","IBDFDE6",147,0)
 .W "   ",$P($G(^DPT(+RESULT,0)),"^")
"RTN","IBDFDE6",148,0)
 S RESULT=$$MULT^IBDFDE61(CNT,.IBD) D:$D(RESULT)
"RTN","IBDFDE6",149,0)
 .W "   ",$P($G(^DPT(+RESULT,0)),"^")
"RTN","IBDFDE6",150,0)
 I RESULT="" W $C(7),"  ??  Not Found" S RESULT=-1
"RTN","IBDFDE6",151,0)
 ;
"RTN","IBDFDE6",152,0)
SELQ Q
"RTN","IBDFDE6",153,0)
 ;
"RTN","IBDFDE6",154,0)
ARRAY(ARRAY,ANS) ; -- bld array of multiple patients
"RTN","IBDFDE6",155,0)
 ; -- required variables:  array = name x-ref; ans = name of selection
"RTN","IBDFDE6",156,0)
 S A=0 F  S A=$O(^TMP(ARRAY,$J,IBDF("CLINIC"),ANS,A)) Q:'A  S CNT=CNT+1,IBD(CNT)=A_"^"_ANS
"RTN","IBDFDE6",157,0)
 Q
"RTN","IBDFDE6",158,0)
BLD ; -- Find all appointments for a date
"RTN","IBDFDE6",159,0)
 K ^TMP("IBD-PL",$J),^TMP("IBD-PLN",$J)
"RTN","IBDFDE6",160,0)
 N SC,IBD,IBD1,NODE,SNODE
"RTN","IBDFDE6",161,0)
 S IBD=IBDFDT,SC=IBDF("CLINIC"),CNT=0
"RTN","IBDFDE6",162,0)
 F  S IBD=$O(^SC(SC,"S",IBD)) Q:'IBD!(IBD>(IBDFDT+.24))  D
"RTN","IBDFDE6",163,0)
 .S IBD1=0 F  S IBD1=$O(^SC(SC,"S",IBD,1,IBD1)) Q:'IBD1  D
"RTN","IBDFDE6",164,0)
 ..S NODE=$G(^SC(SC,"S",IBD,1,IBD1,0))
"RTN","IBDFDE6",165,0)
 ..S SNODE=$G(^DPT(+NODE,"S",IBD,0))
"RTN","IBDFDE6",166,0)
 ..S X=$P(SNODE,"^",2)
"RTN","IBDFDE6",167,0)
 ..I X'="","CNAPCA"[X Q  ;inpatient appointments are okay
"RTN","IBDFDE6",168,0)
 ..S (DFN,IBDF("DFN"))=+NODE
"RTN","IBDFDE6",169,0)
 ..S CNT=CNT+1
"RTN","IBDFDE6",170,0)
 ..S ^TMP("IBD-PL",$J,SC,CNT)=DFN_"^"_IBD_"^"_SNODE
"RTN","IBDFDE6",171,0)
 ..S ^TMP("IBD-PLN",$J,SC,$P(^DPT(DFN,0),"^"),CNT)=DFN_"^"_IBD_"^"_SNODE
"RTN","IBDFDE6",172,0)
 ..S ^TMP("IBD-PLB",$J,SC,$E($P(^DPT(DFN,0),"^",1),1)_$E($P(^DPT(DFN,0),"^",9),6,9),CNT)=DFN_"^"_IBD_"^"_SNODE
"RTN","IBDFDE6",173,0)
 ..S ^TMP("IBD-PL4",$J,SC,$E($P(^DPT(DFN,0),"^",9),6,9),CNT)=DFN_"^"_IBD_"^"_SNODE
"RTN","IBDFDE6",174,0)
 Q
"RTN","IBDFDE6",175,0)
 ;
"RTN","IBDFDE6",176,0)
LIST ; -- print list of patients
"RTN","IBDFDE6",177,0)
 N IBD,IBJ,FORM,STATUS,CNT,X,IBQUIT
"RTN","IBDFDE6",178,0)
 S IBQUIT=0
"RTN","IBDFDE6",179,0)
 S IBD=0 F  S IBD=$O(^TMP("IBD-PL",$J,IBDF("CLINIC"),IBD)) Q:'IBD!(IBQUIT)  S NODE=$G(^TMP("IBD-PL",$J,IBDF("CLINIC"),IBD)) D ONE(NODE,IBD) I '(IBD#15) D ASKPT^IBDFDE61(IBD)
"RTN","IBDFDE6",180,0)
 Q
"RTN","IBDFDE6",181,0)
 ;
"RTN","IBDFDE6",182,0)
ONE(NODE,IBD1) ; -- write one line
"RTN","IBDFDE6",183,0)
 N CNT,C
"RTN","IBDFDE6",184,0)
 Q:$G(NODE)=""
"RTN","IBDFDE6",185,0)
 S DFN=+NODE,APPT=$P(NODE,"^",2)
"RTN","IBDFDE6",186,0)
 S FORM=$$FINDID^IBDF18C(DFN,APPT,"",1),STATUS="NO FORM PRINTED"
"RTN","IBDFDE6",187,0)
 S CNT=0 F IBJ=1:1 S X=$P(FORM,"^",IBJ) Q:X=""  S CNT=CNT+1
"RTN","IBDFDE6",188,0)
 I +FORM S Y=$P($G(^IBD(357.96,+FORM,0)),"^",11),C=$P(^DD(357.96,.11,0),"^",2) D Y^DIQ S STATUS=Y
"RTN","IBDFDE6",189,0)
 W !?2,IBD1,?5,$E($P(^DPT(DFN,0),"^"),1,18),?26,$P($G(^DPT(DFN,.36)),"^",4),?32,$$FMTE^XLFDT(+APPT),?52,$E($G(STATUS),1,24),?77,"("_CNT_")"
"RTN","IBDFDE6",190,0)
 Q
"RTN","IBDFDE6",191,0)
 ;
"RTN","IBDFDE6",192,0)
APDT ; -- list last 30 days appointment dates in clinic
"RTN","IBDFDE6",193,0)
 S (X,Y)=$$FMADD^XLFDT(DT,-62),CNT=0
"RTN","IBDFDE6",194,0)
 F  S X=$O(^SC(IBDF("CLINIC"),"S",X)) Q:'X!(X>DT)  D
"RTN","IBDFDE6",195,0)
 .I $E(X,1,7)=Y Q
"RTN","IBDFDE6",196,0)
 .S Y=$E(X,1,7),CNT=CNT+1
"RTN","IBDFDE6",197,0)
 .I CNT=1 W !!,"The following are valid Appointment dates in the past 60 days:"
"RTN","IBDFDE6",198,0)
 .W:(CNT#4=1) !,?3,$$FMTE^XLFDT(Y)
"RTN","IBDFDE6",199,0)
 .W:(CNT#4=2) ?20,$$FMTE^XLFDT(Y)
"RTN","IBDFDE6",200,0)
 .W:(CNT#4=3) ?40,$$FMTE^XLFDT(Y)
"RTN","IBDFDE6",201,0)
 .W:(CNT#4=0) ?60,$$FMTE^XLFDT(Y)
"RTN","IBDFDE6",202,0)
 Q
"RTN","IBDFDE6",203,0)
 ;
"RTN","IBDFDE6",204,0)
HDR ; -- print Clinic header
"RTN","IBDFDE6",205,0)
 N CNT,IBD,IBD1 W @IOF
"RTN","IBDFDE6",206,0)
 S CNT=0
"RTN","IBDFDE6",207,0)
 F IBD=2,6,8,9,3,4 S IBD1=$P(CLSETUP,"^",IBD) I IBD1 S CNT=CNT+1
"RTN","IBDFDE6",208,0)
 W !,"      Clinic: ",$E(CLNAME,1,25) W ?40,"         Date: ",$$FMTE^XLFDT(IBDFDT)
"RTN","IBDFDE6",209,0)
 S FORM=$P(CLSETUP,"^",2),IBDFMNME=$P($G(^IBE(357,+FORM,0)),"^")
"RTN","IBDFDE6",210,0)
 W !,"  Basic Form: ",$E(IBDFMNME,1,25) W ?40," Active Forms: ",CNT
"RTN","IBDFDE6",211,0)
 W !,"Appointments: ",$O(^TMP("IBD-PL",$J,IBDF("CLINIC"),""),-1)
"RTN","IBDFDE6",212,0)
 W !,$TR($J(" ",IOM)," ","=")
"RTN","IBDFDE6",213,0)
 Q
"RTN","IBDFDE6",214,0)
 ;
"RTN","IBDFDE6",215,0)
END K I,J,X,Y,DA,DR,DIC,DIE,DIR,DTOUT,DUOUT,DIRUT,IBDSEL,CHOICE,TEXT,TEXTU,RESULT,IBDPI,IBDCO,IBDF
"RTN","IBDFDE6",216,0)
 K ^TMP("IBD-PL",$J),^TMP("IBD-PLN",$J),^TMP("IBD-PLB",$J),^TMP("IBD-PL4",$J),^TMP("IBD-MORE",$J),^TMP("IBD-PLCHK",$J)
"RTN","IBDFDE6",217,0)
 K ^TMP("IBD-ASK",$J),^TMP("IBD-LCODE",$J),^TMP("IBD-LST",$J),^TMP("IBD-LTEXT",$J),^TMP("IBD-OBJ",$J)
"RTN","IBDFDE6",218,0)
 Q
"RTN","IBDFDE61")
0^173^B5289484
"RTN","IBDFDE61",1,0)
IBDFDE61 ;ALB/AAS - AICS Manual Data Entry, process selection lists ; 24-FEB-96
"RTN","IBDFDE61",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE61",3,0)
 ;
"RTN","IBDFDE61",4,0)
% G ^IBDFDE6
"RTN","IBDFDE61",5,0)
 ;
"RTN","IBDFDE61",6,0)
PARTLST(NEXT,ANS) ; -- user gave inexact match, find which one
"RTN","IBDFDE61",7,0)
 ;
"RTN","IBDFDE61",8,0)
 N I,J,K,IBD,ANS2,SEL
"RTN","IBDFDE61",9,0)
 S J=1,I=^TMP("IBD-PLN",$J,IBDF("CLINIC"),NEXT),IBD(J)=I,SEL=""
"RTN","IBDFDE61",10,0)
 D ONE^IBDFDE6(I,J)
"RTN","IBDFDE61",11,0)
 ;
"RTN","IBDFDE61",12,0)
 S K=NEXT F  S K=$O(^TMP("IBD-PLN",$J,IBDF("CLINIC"),K)) Q:$E(K,1,$L(ANS))'=ANS  D
"RTN","IBDFDE61",13,0)
 .S J=J+1,IBD(J)=^TMP("IBD-PLN",$J,IBDF("CLINIC"),K)
"RTN","IBDFDE61",14,0)
 .D ONE^IBDFDE6(IBD(J),J)
"RTN","IBDFDE61",15,0)
 ;
"RTN","IBDFDE61",16,0)
ASKNUM G:J<1 PARTLQ
"RTN","IBDFDE61",17,0)
 W !,"   Choose 1-",J,": " R ANS2:DTIME
"RTN","IBDFDE61",18,0)
 I '$T!($E(ANS2,1)="^")!(ANS2="") S SEL="" G PARTLQ
"RTN","IBDFDE61",19,0)
 I $E(ANS2,1)="?" W !,"Enter a number from 1 - ",J G ASKNUM
"RTN","IBDFDE61",20,0)
 S ANS2=+ANS2
"RTN","IBDFDE61",21,0)
 I ANS2<1!(ANS2>J) G ASKNUM
"RTN","IBDFDE61",22,0)
 I $G(IBD(ANS2))="" G ASKNUM
"RTN","IBDFDE61",23,0)
 W !
"RTN","IBDFDE61",24,0)
 S SEL=$G(IBD(ANS2))
"RTN","IBDFDE61",25,0)
PARTLQ I ANS2="^" S IBQUIT=1
"RTN","IBDFDE61",26,0)
 Q SEL
"RTN","IBDFDE61",27,0)
 ;
"RTN","IBDFDE61",28,0)
MULT(CNT,IBD) ; -- multiple appointment
"RTN","IBDFDE61",29,0)
 N IBDI,ANS2,RESULT
"RTN","IBDFDE61",30,0)
 I 'CNT!'$D(IBD) Q ""
"RTN","IBDFDE61",31,0)
 S RESULT=""
"RTN","IBDFDE61",32,0)
 ; -- Loop through appointments, same date, same clinic
"RTN","IBDFDE61",33,0)
 F IBDI=1:1:CNT S NODE=$G(^TMP(ARRAY,$J,IBDF("CLINIC"),$P(IBD(IBDI),"^",2),+IBD(IBDI))) Q:NODE']""  D ONE^IBDFDE6(NODE,IBDI)
"RTN","IBDFDE61",34,0)
 ;
"RTN","IBDFDE61",35,0)
ASKN G:CNT<1 MULTQ
"RTN","IBDFDE61",36,0)
 W !,"   Choose 1-",CNT,": " R ANS2:DTIME
"RTN","IBDFDE61",37,0)
 I '$T!($E(ANS2,1)="^")!(ANS2="") G MULTQ
"RTN","IBDFDE61",38,0)
 I $E(ANS2,1)="?" W !,"Enter a number from 1 - ",CNT G ASKN
"RTN","IBDFDE61",39,0)
 S ANS2=+ANS2
"RTN","IBDFDE61",40,0)
 I ANS2<1!(ANS2>CNT) G ASKN
"RTN","IBDFDE61",41,0)
 I $G(IBD(ANS2))="" G ASKN
"RTN","IBDFDE61",42,0)
 W !
"RTN","IBDFDE61",43,0)
 S RESULT=$G(^TMP(ARRAY,$J,IBDF("CLINIC"),$P(IBD(ANS2),"^",2),+IBD(ANS2)))
"RTN","IBDFDE61",44,0)
MULTQ I ANS2="^" S IBQUIT=1
"RTN","IBDFDE61",45,0)
 Q RESULT
"RTN","IBDFDE61",46,0)
 ;
"RTN","IBDFDE61",47,0)
ASKPT(CNT) ; -- select patient from list
"RTN","IBDFDE61",48,0)
 Q:$G(IBQUIT)
"RTN","IBDFDE61",49,0)
 N I,DIR,DIRUT,DUOUT,DTOUT ;F I=1:1 Q:($Y>(IOSL-3))  W !
"RTN","IBDFDE61",50,0)
 I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR S IBQUIT='Y
"RTN","IBDFDE61",51,0)
 Q
"RTN","IBDFDE61",52,0)
 ;
"RTN","IBDFDE61",53,0)
 W !,"   Choose 1-",CNT,": " R ANS2:DTIME
"RTN","IBDFDE61",54,0)
 I '$T!($E(ANS2,1)="^")!(ANS2="") S SEL="" G MULTQ
"RTN","IBDFDE61",55,0)
 I $E(ANS2,1)="?" W !,"Enter a number from 1 - ",CNT G ASKN
"RTN","IBDFDE61",56,0)
 S ANS2=+ANS2
"RTN","IBDFDE61",57,0)
 I ANS2<1!(ANS2>CNT) G ASKN
"RTN","IBDFDE61",58,0)
 I $G(IBD(ANS2))="" G ASKN
"RTN","IBDFDE61",59,0)
 W !
"RTN","IBDFDE61",60,0)
 S RESULT=$G(IBD(ANS2))
"RTN","IBDFDE61",61,0)
 Q RESULT
"RTN","IBDFDE7")
0^174^B45086212
"RTN","IBDFDE7",1,0)
IBDFDE7 ;ALB/AAS - AICS Manual Data Entry, Entry point for Group Clinics ; 29-APR-96
"RTN","IBDFDE7",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE7",3,0)
 ;
"RTN","IBDFDE7",4,0)
% N %,%H,C,I,J,X,Y,ADD,DEL,ASKOTHER,DIR,DIC,DA,CNT,DFN,DIRUT,DUOUT,DTOUT,POP,RTN,FRMDATA,IBDA,IBY,IBQUIT,IBDF,IBDOBJ,IBDPTSTI,IBDPTSTE,IBDPTNM,IBDPTDTI,SEL,IBD,IBDCKOUT
"RTN","IBDFDE7",5,0)
 N IBDPTDTE,IBDFMNME,IBDFMIEN,IBDFMSTI,IBDFMSTE,IBDFMIDI,IBDCLNME,IBFORM,IBDCLNPH,IBDPID,IBDPTPRI,IBDSEL,IBDPI,IBDCO,PXCA,SDCLST,PXCASTAT,PXKNODA,PXKNODB,IBDREDIT,IBDASK,IBDPRE,IBDX,ANS,CLNAME,CLSETUP,IBDSC,FORM,FORMLST,IBDFDT
"RTN","IBDFDE7",6,0)
 ;
"RTN","IBDFDE7",7,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFDE7",8,0)
 D HOME^%ZIS
"RTN","IBDFDE7",9,0)
 W !!,"Data Entry of Encounter Forms for Group Clinics",!
"RTN","IBDFDE7",10,0)
 ;
"RTN","IBDFDE7",11,0)
STRT ; -- ask for Clinic, appt. date/time
"RTN","IBDFDE7",12,0)
 ;    list patients, allow to deselect
"RTN","IBDFDE7",13,0)
 ;    find all forms for appt., then go through 1 at a time
"RTN","IBDFDE7",14,0)
 ;    then send data for each patient
"RTN","IBDFDE7",15,0)
 ;
"RTN","IBDFDE7",16,0)
 D END W !
"RTN","IBDFDE7",17,0)
 S IBQUIT=0
"RTN","IBDFDE7",18,0)
 S (IBDSC,IBDF("CLINIC"))=$$SELCL^IBDFDE6 G:IBQUIT STRTQ
"RTN","IBDFDE7",19,0)
 I IBDSC<1 S IBQUIT=1 G STRTQ
"RTN","IBDFDE7",20,0)
 S CLNAME=$P($G(^SC(+IBDSC,0)),"^")
"RTN","IBDFDE7",21,0)
 S CLSETUP=$G(^SD(409.95,+$O(^SD(409.95,"B",+IBDSC,0)),0))
"RTN","IBDFDE7",22,0)
 ;
"RTN","IBDFDE7",23,0)
OVER ;
"RTN","IBDFDE7",24,0)
 W !
"RTN","IBDFDE7",25,0)
 S IBQUIT=0
"RTN","IBDFDE7",26,0)
 S IBDFDT=$$SELAPT(.IBDF) G:IBQUIT STRTQ
"RTN","IBDFDE7",27,0)
 I IBDFDT<0 G STRT
"RTN","IBDFDE7",28,0)
 S IBDF("APPT")=IBDFDT
"RTN","IBDFDE7",29,0)
 ;
"RTN","IBDFDE7",30,0)
 D BLD
"RTN","IBDFDE7",31,0)
 I '$D(^TMP("IBD-PL",$J,IBDF("CLINIC"))) W !!,"No valid appointments at that Date/Time!",!! G STRTQ
"RTN","IBDFDE7",32,0)
 ;
"RTN","IBDFDE7",33,0)
 D HDR^IBDFDE6,LIST^IBDFDE6
"RTN","IBDFDE7",34,0)
 W !!
"RTN","IBDFDE7",35,0)
 D EXCLUD
"RTN","IBDFDE7",36,0)
 I IBQUIT=2 S IBQUIT=0 G STRTQ
"RTN","IBDFDE7",37,0)
 G:IBQUIT STRTQ
"RTN","IBDFDE7",38,0)
 ;
"RTN","IBDFDE7",39,0)
 ; -- get first patient, check form(s)
"RTN","IBDFDE7",40,0)
 ;   do data entry on form and if okay pass data for all patients
"RTN","IBDFDE7",41,0)
 S IBDSTRT=+$O(^TMP("IBD-PL",$J,IBDF("CLINIC"),0))
"RTN","IBDFDE7",42,0)
 S NODE=$G(^TMP("IBD-PL",$J,IBDF("CLINIC"),IBDSTRT))
"RTN","IBDFDE7",43,0)
 S (DFN,IBDFN)=+NODE
"RTN","IBDFDE7",44,0)
 S FORMLST=$$FINDID^IBDF18C(DFN,IBDF("APPT"),"",1)
"RTN","IBDFDE7",45,0)
 I FORMLST="" W !,"No forms Printed for first Patient" D ANYWAY^IBDFDE6
"RTN","IBDFDE7",46,0)
 I FORMLST="" G OVERQ
"RTN","IBDFDE7",47,0)
 S IBDF("SAVE")=1 ;save ibdsel(array)
"RTN","IBDFDE7",48,0)
 F IBDX=1:1 S IBDF("FORM")=$P(FORMLST,"^",IBDX) Q:IBDF("FORM")=""  I IBDF("FORM")'="" D EN^IBDFDE D
"RTN","IBDFDE7",49,0)
 .I $G(IBDF("NOTHING"))!(IBQUIT) W !! Q
"RTN","IBDFDE7",50,0)
 .D ALLPTS K IBDSEL,IBDPI Q:IBQUIT
"RTN","IBDFDE7",51,0)
 K IBDF("SAVE")
"RTN","IBDFDE7",52,0)
 ;
"RTN","IBDFDE7",53,0)
OVERQ G OVER
"RTN","IBDFDE7",54,0)
 ;
"RTN","IBDFDE7",55,0)
STRTQ D PAUSE^IBDFDE G:IBQUIT END
"RTN","IBDFDE7",56,0)
 G STRT
"RTN","IBDFDE7",57,0)
 ;
"RTN","IBDFDE7",58,0)
ALLPTS ; -- loop through all patients, merge ibdf=^tmp("ibd-save),
"RTN","IBDFDE7",59,0)
 ;    reset dfn, pass data to ibdfrpc4
"RTN","IBDFDE7",60,0)
 N PARAM,FORMID,IBX,NODE
"RTN","IBDFDE7",61,0)
 S FORMID=$P(^IBD(357.96,+IBDF("FORM"),0),"^",4)
"RTN","IBDFDE7",62,0)
 S PARAM=$P($G(^IBD(357.09,1,0)),"^",7)
"RTN","IBDFDE7",63,0)
 I $G(^TMP("IBD-SAVED",$J,"DYNAMIC")) W !!,"Form contains patient specific information, Not available for this option!",!! G ALLPTQ
"RTN","IBDFDE7",64,0)
 S IBDA=IBDSTRT
"RTN","IBDFDE7",65,0)
 F  S IBDA=$O(^TMP("IBD-PL",$J,IBDF("CLINIC"),IBDA)) Q:IBDA=""!(IBQUIT)  D
"RTN","IBDFDE7",66,0)
 .S IBX=IBDA
"RTN","IBDFDE7",67,0)
 .S NODE=$G(^TMP("IBD-PL",$J,IBDF("CLINIC"),IBX))
"RTN","IBDFDE7",68,0)
 .M IBDF=^TMP("IBD-SAVED",$J)
"RTN","IBDFDE7",69,0)
 .S (DFN,IBDF("DFN"))=+NODE
"RTN","IBDFDE7",70,0)
 .S IBDF("SDOE")=$P(NODE,"^",22)
"RTN","IBDFDE7",71,0)
 .S IBDF("FORM")=+$$FID^IBDF18C(DFN,IBDF("APPT"),1,FORMID,IBDF("CLINIC"))
"RTN","IBDFDE7",72,0)
 .W !!,"Check out interview for: ",$P($G(^DPT(DFN,0)),"^")
"RTN","IBDFDE7",73,0)
 .K IBDCO,IBDF("AO"),IBDF("SC"),IBDF("IR"),IBDF("EC")
"RTN","IBDFDE7",74,0)
 .D CHKOUT^IBDFDE0(IBDF("SDOE"))
"RTN","IBDFDE7",75,0)
 .M IBDF=IBDCO
"RTN","IBDFDE7",76,0)
 .D SEND^IBDFRPC4(.RESULT,.IBDF)
"RTN","IBDFDE7",77,0)
 .I PARAM=3 D DISP^IBDFDE1
"RTN","IBDFDE7",78,0)
 .I PARAM,$D(PXCA("ERROR"))!($D(PXCA("WARNING"))) D ERR^IBDFDE1
"RTN","IBDFDE7",79,0)
 .I $P($G(^IBD(357.09,1,0)),"^",6) D MAKAPPT^IBDFDE1
"RTN","IBDFDE7",80,0)
 ;
"RTN","IBDFDE7",81,0)
 K ^TMP("IBD-SAVED",$J)
"RTN","IBDFDE7",82,0)
ALLPTQ Q
"RTN","IBDFDE7",83,0)
 ;
"RTN","IBDFDE7",84,0)
SELAPT(IBDF) ; -- select appointment date/time for a clinic
"RTN","IBDFDE7",85,0)
 N DIR,DA,DR,DIC,DIE,X,Y,ANS,DIRUT
"RTN","IBDFDE7",86,0)
 S ANS=-1
"RTN","IBDFDE7",87,0)
 S DIR(0)="DO^:NOW:AEXRT^D SCRN^IBDFDE7",DIR("A")="Appointment Date/Time"
"RTN","IBDFDE7",88,0)
 S DIR("?")="Enter the date/time for the clinic that you wish to enter encounter forms for.  Appointments must be present to enter the date time."
"RTN","IBDFDE7",89,0)
 S DIR("??")="^D APDT^IBDFDE7"
"RTN","IBDFDE7",90,0)
 D ^DIR K DIR
"RTN","IBDFDE7",91,0)
 I $D(DIRUT) G SELAPQ
"RTN","IBDFDE7",92,0)
 S ANS=+Y
"RTN","IBDFDE7",93,0)
SELAPQ Q ANS
"RTN","IBDFDE7",94,0)
 ;
"RTN","IBDFDE7",95,0)
SCRN ; -- input transform logic for selecting an appointment date/time
"RTN","IBDFDE7",96,0)
 I $G(IBDF("CLINIC"))="" K X
"RTN","IBDFDE7",97,0)
 I '$D(^SC(IBDF("CLINIC"),"S",Y,1)) W $C(7),"??  No appointments that time." K X
"RTN","IBDFDE7",98,0)
 Q
"RTN","IBDFDE7",99,0)
 ;
"RTN","IBDFDE7",100,0)
EXCLUD ; -- select patient(s) to process
"RTN","IBDFDE7",101,0)
 S RESULT=""
"RTN","IBDFDE7",102,0)
 S DIR("?")="Enter the number of the patient to exclude."
"RTN","IBDFDE7",103,0)
 S DIR("??")="^D LIST^IBDFDE6"
"RTN","IBDFDE7",104,0)
 S DIR(0)="FO^1:30",DIR("A")="Exclude Patient"
"RTN","IBDFDE7",105,0)
 I RESULT'="" S DIR("A")="Exclude Another Patient"
"RTN","IBDFDE7",106,0)
 D ^DIR K DIR
"RTN","IBDFDE7",107,0)
 I $D(DTOUT)!($D(DUOUT)) S IBQUIT=1 G EXCLUDQ
"RTN","IBDFDE7",108,0)
 S ANS=Y
"RTN","IBDFDE7",109,0)
 I ANS="" G EXCLUDQ
"RTN","IBDFDE7",110,0)
 I ANS'=+ANS W !,"You must select a number from the list."
"RTN","IBDFDE7",111,0)
 I ANS=+ANS,$D(^TMP("IBD-PL",$J,IBDF("CLINIC"),ANS)) D
"RTN","IBDFDE7",112,0)
 .S RESULT=^(ANS)
"RTN","IBDFDE7",113,0)
 .K ^TMP("IBD-PL",$J,IBDF("CLINIC"),ANS),^TMP("IBD-PLN",$J,IBDF("CLINIC"),$P($G(^DPT(+RESULT,0)),"^"))
"RTN","IBDFDE7",114,0)
 .W "  ",$P($G(^DPT(+RESULT,0)),"^"),"   ","Excluded!"
"RTN","IBDFDE7",115,0)
 ;
"RTN","IBDFDE7",116,0)
 I '$D(^TMP("IBD-PL",$J,IBDF("CLINIC"))) W !!,"No patients left" S IBQUIT=2 G EXCLUDQ
"RTN","IBDFDE7",117,0)
 ;
"RTN","IBDFDE7",118,0)
 G EXCLUD
"RTN","IBDFDE7",119,0)
EXCLUDQ Q
"RTN","IBDFDE7",120,0)
 ;
"RTN","IBDFDE7",121,0)
BLD ; -- Find all appointments for a date
"RTN","IBDFDE7",122,0)
 K ^TMP("IBD-PL",$J),^TMP("IBD-PLN",$J)
"RTN","IBDFDE7",123,0)
 N SC,IBD,IBD1
"RTN","IBDFDE7",124,0)
 S IBD=IBDFDT,SC=IBDF("CLINIC"),CNT=0
"RTN","IBDFDE7",125,0)
 S IBD1=0 F  S IBD1=$O(^SC(SC,"S",IBD,1,IBD1)) Q:'IBD1  D
"RTN","IBDFDE7",126,0)
 .S NODE=$G(^SC(SC,"S",IBD,1,IBD1,0))
"RTN","IBDFDE7",127,0)
 .S SNODE=$G(^DPT(+NODE,"S",IBD,0))
"RTN","IBDFDE7",128,0)
 .S X=$P(SNODE,"^",2)
"RTN","IBDFDE7",129,0)
 .I X'="","CNAPCA"[X Q  ;inpatient appointments are okay
"RTN","IBDFDE7",130,0)
 .S (DFN,IBDF("DFN"))=+NODE
"RTN","IBDFDE7",131,0)
 .S CNT=CNT+1
"RTN","IBDFDE7",132,0)
 .S ^TMP("IBD-PL",$J,SC,CNT)=DFN_"^"_IBD_"^"_SNODE
"RTN","IBDFDE7",133,0)
 .S ^TMP("IBD-PLN",$J,SC,$P(^DPT(DFN,0),"^"))=DFN_"^"_IBD_"^"_SNODE
"RTN","IBDFDE7",134,0)
 Q
"RTN","IBDFDE7",135,0)
 ;
"RTN","IBDFDE7",136,0)
LIST ; -- print list of patients
"RTN","IBDFDE7",137,0)
 N IBD,IBJ,FORM,STATUS
"RTN","IBDFDE7",138,0)
 S IBD=0 F  S IBD=$O(^TMP("IBD-PL",$J,IBDF("CLINIC"),IBD)) Q:'IBD  D
"RTN","IBDFDE7",139,0)
 .S DFN=+$G(^(IBD)),APPT=$P($G(^(IBD)),"^",2),SNODE=$P($G(^(IBD)),"^",3,99)
"RTN","IBDFDE7",140,0)
 .S FORM=+$$FINDID^IBDF18C(DFN,APPT,"",1),STATUS="NO FORM PRINTED"
"RTN","IBDFDE7",141,0)
 .I FORM S Y=$P($G(^IBD(357.96,+FORM,0)),"^",11),C=$P(^DD(357.96,.11,0),"^",2) D Y^DIQ S STATUS=Y
"RTN","IBDFDE7",142,0)
 .W !?2,IBD,?5,$E($P(^DPT(DFN,0),"^"),1,20),?29,$P($G(^DPT(DFN,.36)),"^",3),?43,$$FMTE^XLFDT(+APPT),?64,$E($G(STATUS),1,16)
"RTN","IBDFDE7",143,0)
 Q
"RTN","IBDFDE7",144,0)
 ;
"RTN","IBDFDE7",145,0)
APDT ; -- list last 30 days appointment dates in clinic
"RTN","IBDFDE7",146,0)
 S (X,Y)=$$FMADD^XLFDT(DT,-60),CNT=0
"RTN","IBDFDE7",147,0)
 F  S X=$O(^SC(IBDF("CLINIC"),"S",X)) Q:'X!(X>DT)  D
"RTN","IBDFDE7",148,0)
 .S Y=X,CNT=CNT+1
"RTN","IBDFDE7",149,0)
 .I CNT=1 W !!,"The following are valid Appointment date/times in the past 60 days:"
"RTN","IBDFDE7",150,0)
 .W:(CNT#3=1) !,?3,$$FMTE^XLFDT(Y)
"RTN","IBDFDE7",151,0)
 .W:(CNT#3=2) ?30,$$FMTE^XLFDT(Y)
"RTN","IBDFDE7",152,0)
 .W:(CNT#3=0) ?60,$$FMTE^XLFDT(Y)
"RTN","IBDFDE7",153,0)
 Q
"RTN","IBDFDE7",154,0)
 ;
"RTN","IBDFDE7",155,0)
HDR ; -- print Clinic header
"RTN","IBDFDE7",156,0)
 W @IOF
"RTN","IBDFDE7",157,0)
 W !,"      Clinic: ",$E(CLNAME,1,25) W ?40,"       Date: ",$$FMTE^XLFDT(IBDFDT)
"RTN","IBDFDE7",158,0)
 S FORM=$P(CLSETUP,"^",2),IBDFMNME=$P($G(^IBE(357,+FORM,0)),"^")
"RTN","IBDFDE7",159,0)
 W !,"  Basic Form: ",$E(IBDFMNME,1,25) ;W ?40,"Form Status: ",$E(IBDFMSTE,1,25)
"RTN","IBDFDE7",160,0)
 W !,$TR($J(" ",IOM)," ","=")
"RTN","IBDFDE7",161,0)
 Q
"RTN","IBDFDE7",162,0)
 ;
"RTN","IBDFDE7",163,0)
END K I,J,X,Y,DA,DR,DIC,DIE,DIR,DTOUT,DUOUT,DIRUT,IBDSEL,CHOICE,TEXT,TEXTU,RESULT,IBDPI,IBDCO,IBDF,IBDA,SDFN
"RTN","IBDFDE7",164,0)
 K ^TMP("IBD-PL",$J),^TMP("IBD-PLN",$J),^TMP("IBD-SAVED",$J),^TMP("IBD-MORE",$J),^TMP("IBD-PLCHK",$J),^TMP("IBD-PL4",$J),^TMP("IBD-PLB",$J)
"RTN","IBDFDE7",165,0)
 K ^TMP("IBD-ASK",$J),^TMP("IBD-LCODE",$J),^TMP("IBD-LST",$J),^TMP("IBD-LTEXT",$J),^TMP("IBD-OBJ",$J)
"RTN","IBDFDE7",166,0)
 Q
"RTN","IBDFDE8")
0^175^B15810835
"RTN","IBDFDE8",1,0)
IBDFDE8 ;ALB/AAS - AICS Manual Data Entry, Entry for no form no appt ; 31-MAY-96
"RTN","IBDFDE8",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE8",3,0)
 ;
"RTN","IBDFDE8",4,0)
% N %,%H,C,I,J,X,Y,ADD,DEL,ASKOTHER,DIR,DIC,DA,CNT,DFN,DIRUT,DUOUT,DTOUT,POP,RTN,FRMDATA,IBY,IBQUIT,IBDF,IBDOBJ,IBDPTSTI,IBDPTSTE,IBDPTNM,IBDPTDTI,SEL,IBD,IBDCKOUT
"RTN","IBDFDE8",5,0)
 N IBDPTDTE,IBDFMNME,IBDFMIEN,IBDFMSTI,IBDFMSTE,IBDFMIDI,IBDCLNME,IBFORM,IBDCLNPH,IBDPID,IBDPTPRI,IBDSEL,IBDPI,IBDCO,PXCA,SDCLST,PXCASTAT,PXKNODA,PXKNODB,IBDREDIT,IBDASK,IBDPRE,IBDAPPT,IBDSAEOK,IBDAPPT
"RTN","IBDFDE8",6,0)
 ;
"RTN","IBDFDE8",7,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFDE8",8,0)
 D HOME^%ZIS
"RTN","IBDFDE8",9,0)
 W !!,"Data Entry Pre-Printed form, No appointment",!
"RTN","IBDFDE8",10,0)
 ;
"RTN","IBDFDE8",11,0)
STRT ; -- ask for form id
"RTN","IBDFDE8",12,0)
 D END
"RTN","IBDFDE8",13,0)
 S IBQUIT=0
"RTN","IBDFDE8",14,0)
 W !
"RTN","IBDFDE8",15,0)
 S DIR("?")="Select the patient you wish to enter data on for an encounter."
"RTN","IBDFDE8",16,0)
 S DIR(0)="PO^2:AEQM",DIR("A")="Select Patient" D ^DIR K DIR,DA,DR,DIC
"RTN","IBDFDE8",17,0)
 I $D(DIRUT) G END
"RTN","IBDFDE8",18,0)
 S (IBDF("DFN"),DFN)=+Y
"RTN","IBDFDE8",19,0)
 ;
"RTN","IBDFDE8",20,0)
CLINIC ; -- select clinic
"RTN","IBDFDE8",21,0)
 W !
"RTN","IBDFDE8",22,0)
 S IBDSAEOK=0
"RTN","IBDFDE8",23,0)
 S IBDF("CLINIC")=$$SELCL^IBDFDE6 G:IBQUIT STRTQ
"RTN","IBDFDE8",24,0)
 I IBDF("CLINIC")=-1 G STRTQ
"RTN","IBDFDE8",25,0)
 I IBDF("CLINIC")<1 G STRT
"RTN","IBDFDE8",26,0)
 S CLNAME=$P($G(^SC(+IBDF("CLINIC"),0)),"^")
"RTN","IBDFDE8",27,0)
 S CLSETUP=$G(^SD(409.95,+$O(^SD(409.95,"B",+IBDF("CLINIC"),0)),0))
"RTN","IBDFDE8",28,0)
 ;
"RTN","IBDFDE8",29,0)
 ; -- select appointment date time
"RTN","IBDFDE8",30,0)
 W !
"RTN","IBDFDE8",31,0)
 S IBDF("APPT")=$$ASKDT^IBDFDE0("Appointment Date/Time: ","","AEQRXT","",DT+.24,"D LSTAP^IBDFDE8") G:IBQUIT STRTQ
"RTN","IBDFDE8",32,0)
 I IBDF("APPT")<1 G CLINIC
"RTN","IBDFDE8",33,0)
 ;
"RTN","IBDFDE8",34,0)
 W ! D LISTONE W !
"RTN","IBDFDE8",35,0)
 ;
"RTN","IBDFDE8",36,0)
 ;
"RTN","IBDFDE8",37,0)
 I IBDAPPT S IBDSAEOK=$$ASKYN^IBDFDE0("Okay to use "_$$FMTE^XLFDT(IBDF("APPT"))_" for Data Entry","No")
"RTN","IBDFDE8",38,0)
 I 'IBDAPPT S IBDSAEOK=$$ASKYN^IBDFDE0("Okay to Create Stand Alone Encounter","No")
"RTN","IBDFDE8",39,0)
 W !
"RTN","IBDFDE8",40,0)
 G:'IBDSAEOK CLINIC G:IBQUIT STRTQ
"RTN","IBDFDE8",41,0)
 ;
"RTN","IBDFDE8",42,0)
 ; -- if no form create entry
"RTN","IBDFDE8",43,0)
 S FORMLST=$$FINDID^IBDF18C(DFN,IBDF("APPT"),"",1)
"RTN","IBDFDE8",44,0)
 I FORMLST="" D ANYWAY^IBDFDE6
"RTN","IBDFDE8",45,0)
 ;
"RTN","IBDFDE8",46,0)
 G:IBQUIT STRTQ
"RTN","IBDFDE8",47,0)
 ;
"RTN","IBDFDE8",48,0)
 I FORMLST,IBDSAEOK F IBDX=1:1 S IBDF("FORM")=$P(FORMLST,"^",IBDX) Q:IBDF("FORM")=""  I IBDF("FORM")'="" D EN^IBDFDE K IBDSEL,IBDPI Q:IBQUIT
"RTN","IBDFDE8",49,0)
 ;
"RTN","IBDFDE8",50,0)
STRTQ K IBDSAEOK
"RTN","IBDFDE8",51,0)
 G STRT:'IBQUIT
"RTN","IBDFDE8",52,0)
 ;
"RTN","IBDFDE8",53,0)
END K I,J,X,Y,DA,DR,DIC,DIE,DIR,DTOUT,DUOUT,DIRUT,IBDSEL,CHOICE,TEXT,TEXTU,RESULT,IBDPI,IBDCO,IBDF
"RTN","IBDFDE8",54,0)
 K ^TMP("IBD-ASK",$J),^TMP("IBD-LCODE",$J),^TMP("IBD-LST",$J),^TMP("IBD-LTEXT",$J),^TMP("IBD-OBJ",$J)
"RTN","IBDFDE8",55,0)
 Q
"RTN","IBDFDE8",56,0)
 ;
"RTN","IBDFDE8",57,0)
LSTAP ; -- list appointments for date range
"RTN","IBDFDE8",58,0)
 N IBDI,BEGIN,HELP,CNT,DOW,NODAYS
"RTN","IBDFDE8",59,0)
 S HELP=1,CNT=0
"RTN","IBDFDE8",60,0)
 W !
"RTN","IBDFDE8",61,0)
 S DOW=$$DOW^XLFDT(DT,1)
"RTN","IBDFDE8",62,0)
 S NODAYS=$S(DOW=1:5,DOW=2:5,DOW=3:5,DOW>3:3,DOW=0:4)
"RTN","IBDFDE8",63,0)
 S BEGIN=$$FMADD^XLFDT(DT,-NODAYS)
"RTN","IBDFDE8",64,0)
 F IBDI=1:1:NODAYS S IBDF("APPT")=$$FMADD^XLFDT(BEGIN,IBDI) D LISTONE
"RTN","IBDFDE8",65,0)
 W:CNT !
"RTN","IBDFDE8",66,0)
 Q
"RTN","IBDFDE8",67,0)
 ;
"RTN","IBDFDE8",68,0)
LISTONE ; -- List appointments for one date
"RTN","IBDFDE8",69,0)
 N NEXT,NODE
"RTN","IBDFDE8",70,0)
 S NEXT=$E(IBDF("APPT"),1,7),IBDAPPT=0
"RTN","IBDFDE8",71,0)
 S:'$G(HELP) CNT=0
"RTN","IBDFDE8",72,0)
 F  S NEXT=$O(^DPT(DFN,"S",NEXT)) Q:'NEXT!(NEXT>(IBDF("APPT")+.24))  D
"RTN","IBDFDE8",73,0)
 .S CNT=CNT+1
"RTN","IBDFDE8",74,0)
 .S NODE=$G(^DPT(DFN,"S",NEXT,0))
"RTN","IBDFDE8",75,0)
 .I NEXT=IBDF("APPT"),+NODE=IBDF("CLINIC") S IBDAPPT=1
"RTN","IBDFDE8",76,0)
 .I CNT=1 W !,"Patient has the following appointments: "
"RTN","IBDFDE8",77,0)
 .W !?3,$$FMTE^XLFDT(NEXT),?25,$E($P($G(^SC(+NODE,0)),"^"),1,23)
"RTN","IBDFDE8",78,0)
 .D FRMSTAT
"RTN","IBDFDE8",79,0)
 I CNT=0,'$G(HELP) W !,"No appointments for Patient found on ",$$FMTE^XLFDT($E(IBDF("APPT"),1,7))
"RTN","IBDFDE8",80,0)
 Q
"RTN","IBDFDE8",81,0)
 ;
"RTN","IBDFDE8",82,0)
FRMSTAT ; -- count forms and form status for appointments
"RTN","IBDFDE8",83,0)
 N FORM,CNT,STATUS,IBJ,X,Y,C
"RTN","IBDFDE8",84,0)
 S FORM=$$FINDID^IBDF18C(DFN,NEXT,"",1),STATUS="NO FORM PRINTED"
"RTN","IBDFDE8",85,0)
 S CNT=0 F IBJ=1:1 S X=$P(FORM,"^",IBJ) Q:X=""  S CNT=CNT+1
"RTN","IBDFDE8",86,0)
 I +FORM S Y=$P($G(^IBD(357.96,+FORM,0)),"^",11),C=$P(^DD(357.96,.11,0),"^",2) D Y^DIQ S STATUS=Y
"RTN","IBDFDE8",87,0)
 W ?50,$E($G(STATUS),1,25),?76,"("_CNT_")"
"RTN","IBDFDE8",88,0)
 Q
"RTN","IBDFDE9")
0^176^B17338562
"RTN","IBDFDE9",1,0)
IBDFDE9 ;ALB/AAS - AICS Manual Data Entry, Report of inputs by form ; 31-MAY-96
"RTN","IBDFDE9",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDE9",3,0)
 ;
"RTN","IBDFDE9",4,0)
% N I,J,X,Y,DIR,DIRUT,DTOUT,DUOUT,IBDF,IBDFMIEN,IBDPAG,IBDPDT,IBDOJB,IBQUIT,QLFR,RULE
"RTN","IBDFDE9",5,0)
 ;
"RTN","IBDFDE9",6,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFDE9",7,0)
 D HOME^%ZIS
"RTN","IBDFDE9",8,0)
 W !!,"Display Form Components for Data Entry",!!
"RTN","IBDFDE9",9,0)
 ;
"RTN","IBDFDE9",10,0)
STRT ; -- ask for form id
"RTN","IBDFDE9",11,0)
 D END
"RTN","IBDFDE9",12,0)
 S DIR("?")="Enter the Encounter Form Name you want to review."
"RTN","IBDFDE9",13,0)
 S DIR(0)="PO^357:AEQM",DIR("A")="Select Encounter Form" D ^DIR K DIR,DA,DR,DIC
"RTN","IBDFDE9",14,0)
 I $D(DIRUT) G END
"RTN","IBDFDE9",15,0)
 S IBDFMIEN=+Y
"RTN","IBDFDE9",16,0)
 ;
"RTN","IBDFDE9",17,0)
 ; -- Ask Device
"RTN","IBDFDE9",18,0)
 S %ZIS="MQ" D ^%ZIS I POP G STRTQ
"RTN","IBDFDE9",19,0)
 ; -- queue if selected
"RTN","IBDFDE9",20,0)
 I $D(IO("Q")) S ZTSAVE("IBD*")="",ZTRTN="DQ^IBDFDE9",ZTDESC="IBD - Print form components" D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS W !! G STRT
"RTN","IBDFDE9",21,0)
 U IO
"RTN","IBDFDE9",22,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBDFDE9",23,0)
 D DQ
"RTN","IBDFDE9",24,0)
 ;
"RTN","IBDFDE9",25,0)
STRTQ G:$G(IBQUIT) END D PAUSE^IBDFDE
"RTN","IBDFDE9",26,0)
 G STRT
"RTN","IBDFDE9",27,0)
 ;
"RTN","IBDFDE9",28,0)
DQ ; -- entry point to list contents of one form,  
"RTN","IBDFDE9",29,0)
 ;    Input IBDFMIEN := pointer to Encounter Form (357)
"RTN","IBDFDE9",30,0)
 ;
"RTN","IBDFDE9",31,0)
 S IBQUIT=0
"RTN","IBDFDE9",32,0)
 S IBDPAG=0
"RTN","IBDFDE9",33,0)
 S IBDPDT=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","IBDFDE9",34,0)
 D HDR
"RTN","IBDFDE9",35,0)
 ;
"RTN","IBDFDE9",36,0)
 I '$D(^TMP("IBD-OBJ",$J,IBDFMIEN,0)) D FRMLSTI^IBDFRPC("^TMP(""IBD-OBJ"",$J,IBDFMIEN)",IBDFMIEN,"",1)
"RTN","IBDFDE9",37,0)
 D LISTOB
"RTN","IBDFDE9",38,0)
 Q
"RTN","IBDFDE9",39,0)
 ;
"RTN","IBDFDE9",40,0)
LISTOB ; -- list items available for input on a form
"RTN","IBDFDE9",41,0)
 W !,"CHECKOUT INTERVIEW",?27,"",?45,"As Required",!
"RTN","IBDFDE9",42,0)
 S I=0 F  S I=$O(^TMP("IBD-OBJ",$J,IBDFMIEN,I)) Q:I=""!(IBQUIT)  D
"RTN","IBDFDE9",43,0)
 .I $E(IOST,1,2)="C-",$Y>(IOSL-5) D HDR Q:IBQUIT
"RTN","IBDFDE9",44,0)
 .S IBDOBJ=$G(^TMP("IBD-OBJ",$J,IBDFMIEN,I))
"RTN","IBDFDE9",45,0)
 .Q:'$P(IBDOBJ,"^",8)
"RTN","IBDFDE9",46,0)
 .S IBDF("PI")=+$P(IBDOBJ,"^",2),IBDF("TYPE")=$P(IBDOBJ,"^",5)
"RTN","IBDFDE9",47,0)
 .S IBDF("IEN")=+$P(IBDOBJ,"^",6),IBDF("VITAL")=$P(IBDOBJ,"^",7)
"RTN","IBDFDE9",48,0)
 .Q:IBDF("IEN")<1!(IBDF("PI")<1)
"RTN","IBDFDE9",49,0)
 .S RTN=$G(^IBE(357.6,IBDF("PI"),18)) Q:RTN=""
"RTN","IBDFDE9",50,0)
 .S Y=$S($P(IBDOBJ,"^",7)="":$P(IBDOBJ,"^"),1:$P(IBDOBJ,"^",7))
"RTN","IBDFDE9",51,0)
 .I Y["INPUT " S Y=$P(Y,"INPUT ",2)
"RTN","IBDFDE9",52,0)
 .W !,$E(Y,1,25),?27,$S(IBDF("TYPE")="HP":"Hand Print",IBDF("TYPE")="LIST":"Selection List",1:"Multiple Choice")
"RTN","IBDFDE9",53,0)
 .;
"RTN","IBDFDE9",54,0)
 .S IBDF("DFN")=$O(^DPT(0)),IBDF("CLINIC")=$O(^SC(0)),IBDF("RULE-ONLY")=1
"RTN","IBDFDE9",55,0)
 .S RULE(0)=$G(^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN")))
"RTN","IBDFDE9",56,0)
 .I RULE(0)="" D OBJLST^IBDFRPC1(.RULE,.IBDF)
"RTN","IBDFDE9",57,0)
 .D RULES(.RULE)
"RTN","IBDFDE9",58,0)
 .W !
"RTN","IBDFDE9",59,0)
 W !
"RTN","IBDFDE9",60,0)
 Q
"RTN","IBDFDE9",61,0)
 ;
"RTN","IBDFDE9",62,0)
HDR ; -- print patient header
"RTN","IBDFDE9",63,0)
 S IBDPAG=IBDPAG+1
"RTN","IBDFDE9",64,0)
 I $E(IOST,1,2)="C-",$Y>1,IBDPAG>1 D PAUSE^IBDFDE Q:IBQUIT
"RTN","IBDFDE9",65,0)
 I $E(IOST,1,2)="C-"!(IBDPAG>1) W @IOF
"RTN","IBDFDE9",66,0)
 W !,"Form Components Available for Data Entry",?IOM-32,IBDPDT,"  PAGE: ",IBDPAG
"RTN","IBDFDE9",67,0)
 W !,"COMPONENT",?27,"TYPE",?45,"RULE",?60,"QUALIFIER"
"RTN","IBDFDE9",68,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBDFDE9",69,0)
 W !,"       Form Name: ",$E($P($G(^IBE(357,+IBDFMIEN,0)),"^"),1,25)
"RTN","IBDFDE9",70,0)
 W !,"     Form Status: ",$S(+$P($G(^IBE(357,+IBDFMIEN,0)),"^",5):"Compiled",1:"Uncompiled"),!
"RTN","IBDFDE9",71,0)
 Q
"RTN","IBDFDE9",72,0)
 ;
"RTN","IBDFDE9",73,0)
END I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBDFDE9",74,0)
 K I,J,X,Y,DA,DR,DIC,DIE,DIR,DTOUT,DUOUT,DIRUT,IBDSEL,CHOICE,TEXT,TEXTU,RESULT,IBDPI,IBDCO,IBDF,IBDPAG,ZTSK
"RTN","IBDFDE9",75,0)
 K ^TMP("IBD-OBJ",$J)
"RTN","IBDFDE9",76,0)
 D ^%ZISC
"RTN","IBDFDE9",77,0)
 Q
"RTN","IBDFDE9",78,0)
 ;
"RTN","IBDFDE9",79,0)
RULES(RULE) ; -- look at zero node, find qualifiers and selection rule
"RTN","IBDFDE9",80,0)
 N I,QLFR,DQR
"RTN","IBDFDE9",81,0)
 S RULE=$P(RULE(0),"^",3),QLFR=""
"RTN","IBDFDE9",82,0)
 I $P(RULE(0),"^",4) W ?45,"Data Entry Not allowed",!,?45,"Marking areas not Bubbles" Q
"RTN","IBDFDE9",83,0)
 F I=1:1 S ROW=$P(RULE,"::",I) Q:ROW=""  S QLFR(I)=$P(ROW,";;",1),RULE(I)=$P(ROW,";;",2) D
"RTN","IBDFDE9",84,0)
 .W:I>1 !
"RTN","IBDFDE9",85,0)
 .;
"RTN","IBDFDE9",86,0)
 .I IBDF("VITAL")="" W ?45,$P("Any Number^Exactly One^At Most One^At Least One","^",(RULE(I)+1))
"RTN","IBDFDE9",87,0)
 .E  W ?45,"Optional"
"RTN","IBDFDE9",88,0)
 .;
"RTN","IBDFDE9",89,0)
 .I IBDF("VITAL")'="",QLFR(I)[":" S QLFR(I)=$P(QLFR(I),":") ;strip ":"
"RTN","IBDFDE9",90,0)
 .W ?60,$E(QLFR(I),1,20)
"RTN","IBDFDE9",91,0)
 .I QLFR(I)="",$P($G(^IBE(357.6,+$G(IBDF("PI")),0)),"^",19) W ?60,$G(IOINHI),"Required/Missing",$G(IOINORM)
"RTN","IBDFDE9",92,0)
 .I QLFR(I)="PRIMARY" D
"RTN","IBDFDE9",93,0)
 ..;S RULE(I)=$S(RULE(I)=3:1,RULE(I)=0:2,1:RULE(I))
"RTN","IBDFDE9",94,0)
 S RULE=I-1
"RTN","IBDFDE9",95,0)
 Q
"RTN","IBDFDEA")
0^177^B21831002
"RTN","IBDFDEA",1,0)
IBDFDEA ;ALB/AAS - AICS Data Entry API ; 19-JUN-96
"RTN","IBDFDEA",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDEA",3,0)
 ;
"RTN","IBDFDEA",4,0)
 ;
"RTN","IBDFDEA",5,0)
EN1(PXCA,IBDF) ; -- Procedure
"RTN","IBDFDEA",6,0)
 ; -- supported reference to process encounter form data.
"RTN","IBDFDEA",7,0)
 ;    Packages that know patient, visit date/time, and clinic
"RTN","IBDFDEA",8,0)
 ;    can call this api to use the AICS data entry system to prompt
"RTN","IBDFDEA",9,0)
 ;    users for encounter data and subsequently store this data
"RTN","IBDFDEA",10,0)
 ;    using the PCE device interface (this is done automatically using
"RTN","IBDFDEA",11,0)
 ;    the aics parameters).
"RTN","IBDFDEA",12,0)
 ;    D EN1^IBDFDEA(.RESULTS,.IBDF)
"RTN","IBDFDEA",13,0)
 ;
"RTN","IBDFDEA",14,0)
 ; -- Input:  PXCA, called by reference, the results of processing
"RTN","IBDFDEA",15,0)
 ;            are returned in this array.  See PCE device inteface
"RTN","IBDFDEA",16,0)
 ;            manual for description of data nodes
"RTN","IBDFDEA",17,0)
 ;            IBDF, called by reference
"RTN","IBDFDEA",18,0)
 ;            IBDF("APPT")   :=  Appointment Date Time (required)
"RTN","IBDFDEA",19,0)
 ;            IBDF("DFN")    :=  pointer to patient file (required)
"RTN","IBDFDEA",20,0)
 ;            IBDF("CLINIC") :=  pointer to hospital location file (44)
"RTN","IBDFDEA",21,0)
 ;                               (optional) if clinic not defined and no
"RTN","IBDFDEA",22,0)
 ;                               form printed, no data entry allowed
"RTN","IBDFDEA",23,0)
 ;            IBDF("NOAPPT") :=  (optional) if AICS parameters allow 
"RTN","IBDFDEA",24,0)
 ;                               making follow up appointments, setting
"RTN","IBDFDEA",25,0)
 ;                               this to any non-zero value will suppress
"RTN","IBDFDEA",26,0)
 ;                               the ability to add followup appointments
"RTN","IBDFDEA",27,0)
 ;          IBDF("PROVIDER") :=  (optional) if defined, will be used as
"RTN","IBDFDEA",28,0)
 ;                               primary provider for data entry, use
"RTN","IBDFDEA",29,0)
 ;                               for provider data entry options
"RTN","IBDFDEA",30,0)
 ;
"RTN","IBDFDEA",31,0)
 N %,%H,C,I,J,X,Y,ADD,DEL,ASKOTHER,DIR,DIC,DA,CNT,DFN,DIRUT,DUOUT,DTOUT,POP,RTN,FRMDATA,IBY,IBQUIT,IBDOBJ,IBDPTSTI,IBDPTSTE,IBDPTNM,IBDPTDTI,SEL
"RTN","IBDFDEA",32,0)
 N IBDPTDTE,IBDFMNME,IBDFMIEN,IBDFMSTI,IBDFMSTE,IBDFMIDI,IBDCLNME,IBFORM,IBDCLNPH,IBDPID,IBDPTPRI,IBDSEL,IBDPI,IBDCO,SDCLST,PXCASTAT,PXKNODA,PXKNODB,IBDREDIT,IBDASK,IBDPRE,IBDOK
"RTN","IBDFDEA",33,0)
 N ANS1,AUPNDAYS,AUPNDOB,AUPNDOD,AUPNPAT,AUPNSEX,FORMLST
"RTN","IBDFDEA",34,0)
 ;
"RTN","IBDFDEA",35,0)
 I '$D(IOF) D HOME^%ZIS
"RTN","IBDFDEA",36,0)
 G:'$G(IBDF("DFN")) EN1Q S DFN=IBDF("DFN")
"RTN","IBDFDEA",37,0)
 G:'$G(IBDF("APPT")) EN1Q
"RTN","IBDFDEA",38,0)
 S IBQUIT=0
"RTN","IBDFDEA",39,0)
 ;
"RTN","IBDFDEA",40,0)
 ; -- if no form create entry
"RTN","IBDFDEA",41,0)
 S FORMLST=$$FINDID^IBDF18C(DFN,IBDF("APPT"),"",1)
"RTN","IBDFDEA",42,0)
 I FORMLST="",$G(IBDF("CLINIC")) D ANYWAY^IBDFDE6
"RTN","IBDFDEA",43,0)
 ;
"RTN","IBDFDEA",44,0)
 G:IBQUIT EN1Q
"RTN","IBDFDEA",45,0)
 ;
"RTN","IBDFDEA",46,0)
 I FORMLST F IBDX=1:1 S IBDF("FORM")=$P(FORMLST,"^",IBDX) Q:IBDF("FORM")=""  I IBDF("FORM")'="" D EN^IBDFDE K IBDSEL,IBDPI Q:IBQUIT
"RTN","IBDFDEA",47,0)
 ;
"RTN","IBDFDEA",48,0)
EN1Q Q
"RTN","IBDFDEA",49,0)
 ;
"RTN","IBDFDEA",50,0)
SCANFRM(X) ; is entry scannable
"RTN","IBDFDEA",51,0)
 Q +$P($G(^IBE(357,+$P($G(^IBD(357.95,+$P($G(^IBD(357.96,X,0)),"^",4),0)),"^",21),0)),"^",12)
"RTN","IBDFDEA",52,0)
 ;
"RTN","IBDFDEA",53,0)
DELFT ; -- Delete forms Tracking Entry
"RTN","IBDFDEA",54,0)
 N I,J,IBD,DIR,DIRUT,VALMY,IBDF,IBDNODE,DFN,APPT,IBX,CLN,IBQUIT,FORMID
"RTN","IBDFDEA",55,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBDFDEA",56,0)
 I $D(VALMY) D FULL^VALM1 S IBD=0 F  S IBD=$O(VALMY(IBD)) Q:'IBD!$D(DIRUT)  D
"RTN","IBDFDEA",57,0)
 .S IBDF=$P($G(^TMP("FRMIDX",$J,+IBD)),"^",2)
"RTN","IBDFDEA",58,0)
 .S IBDNODE=$G(^IBD(357.96,+IBDF,0)) I IBDNODE="" W !,"No Form Tracking record associated with entry #",IBD H 2 Q
"RTN","IBDFDEA",59,0)
 .I $D(^XUSEC("IBD MANAGER",DUZ)) D
"RTN","IBDFDEA",60,0)
 ..S IBX=$P(IBDNODE,"^",11) I IBX>1,IBX<20 W !!,"***** Status indicates action has been taken on this entry #"_IBD_" *****"
"RTN","IBDFDEA",61,0)
 ..W !!?25,"*** Entry #"_IBD_" STATUS: "_$S(IBX=1:"PRINTED",IBX=2:"SCANNED",IBX=3:"SCD/PCE",IBX=4:"SCD w/ER",IBX=5:"DENTRY",IBX=6:"DE to PCE",IBX=7:"DE w/ER",IBX=11:"PEND Pgs",IBX=12:"NO TRANS",20:"AVAIL DE",1:"NOT PRNT")_" ***"
"RTN","IBDFDEA",62,0)
 .I '$D(^XUSEC("IBD MANAGER",DUZ)) D
"RTN","IBDFDEA",63,0)
 ..S DFN=$P(IBDNODE,"^",2),APPT=$P(IBDNODE,"^",3),CLN=$P(IBDNODE,"^",10),FORMID=$P(IBDNODE,"^",4)
"RTN","IBDFDEA",64,0)
 ..I $D(^DPT(DFN,"S",APPT,0)),$P(^DPT(DFN,"S",APPT,0),"^",1)=CLN D  ; !,"Entry #"_IBD_" - Nothing Deleted...Deleting entries only allowed for entries not associated with an appointment." H 2 S IBQUIT=1 Q
"RTN","IBDFDEA",65,0)
 ...I $D(^IBD(357.95,FORMID,0)),'$P(^IBD(357.95,FORMID,0),"^",2) W !,"Entry #"_IBD_" - Nothing Deleted...This entry is associated with an appointment,  and is the most current version of the form." H 2 S IBQUIT=1 Q
"RTN","IBDFDEA",66,0)
 ..;I $P(IBDNODE,"^",11)>1,$P(IBDNODE,"^",11)<20 W !,"Status indicates action taken on this entry, deletion not allowed." H 2 Q
"RTN","IBDFDEA",67,0)
 .I '$D(IBQUIT) W ! S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are You Sure you want to delete entry #"_IBD
"RTN","IBDFDEA",68,0)
 .I '$D(IBQUIT) D ^DIR I Y'=1 W !,"Entry #",IBD," not Deleted!" H 2 Q
"RTN","IBDFDEA",69,0)
 .I '$D(IBQUIT) D DP1
"RTN","IBDFDEA",70,0)
 .K IBQUIT
"RTN","IBDFDEA",71,0)
 I '$D(VALMY) G DTQ1
"RTN","IBDFDEA",72,0)
 ;
"RTN","IBDFDEA",73,0)
DTQ K ^TMP("CNT",$J),^TMP("FRM",$J),^TMP("FTRK",$J),^TMP("STATS",$J),^TMP("FRMIDX",$J),^TMP("STAIDX",$J)
"RTN","IBDFDEA",74,0)
 D EXIT1^IBDFFT,START^IBDFFT1
"RTN","IBDFDEA",75,0)
DTQ1 S VALMBCK="R" Q
"RTN","IBDFDEA",76,0)
 ;
"RTN","IBDFDEA",77,0)
DP1 ; -- actual deletion of forms tracking entry
"RTN","IBDFDEA",78,0)
 N DA,DIC,DIK
"RTN","IBDFDEA",79,0)
 S DA=IBDF,DIK="^IBD(357.96," D ^DIK
"RTN","IBDFDEA",80,0)
 W !,"Entry ",IBD," Deleted!"
"RTN","IBDFDEA",81,0)
 Q
"RTN","IBDFDVE")
0^178^B576354
"RTN","IBDFDVE",1,0)
IBDFDVE ;ALB/AAS - AICS edit printers file ; 24-FEB-96
"RTN","IBDFDVE",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFDVE",3,0)
 ;
"RTN","IBDFDVE",4,0)
% ; -- Edit Encounter Form Printers file (357.94)
"RTN","IBDFDVE",5,0)
 ;
"RTN","IBDFDVE",6,0)
 N I,J,X,Y,DA,DIC,DR,DIE,DLAYGO
"RTN","IBDFDVE",7,0)
 W !!,"Add/Edit Encounter Form Printers Terminal Type"
"RTN","IBDFDVE",8,0)
 ;
"RTN","IBDFDVE",9,0)
ASK W !!
"RTN","IBDFDVE",10,0)
 S DLAYGO=357.94,DIC="^IBE(357.94,",DIC(0)="AEQML" D ^DIC G:Y<1 END
"RTN","IBDFDVE",11,0)
 S DA=+Y D EDIT
"RTN","IBDFDVE",12,0)
 G ASK
"RTN","IBDFDVE",13,0)
 Q
"RTN","IBDFDVE",14,0)
 ;
"RTN","IBDFDVE",15,0)
EDIT ; -- edit entry
"RTN","IBDFDVE",16,0)
 S DR="[IBDF EDIT PRINTER]",DIE="^IBE(357.94,"
"RTN","IBDFDVE",17,0)
 D ^DIE
"RTN","IBDFDVE",18,0)
 K DIE,DA,DR
"RTN","IBDFDVE",19,0)
 Q
"RTN","IBDFDVE",20,0)
 ;
"RTN","IBDFDVE",21,0)
END Q
"RTN","IBDFESP")
0^179^B7283127
"RTN","IBDFESP",1,0)
IBDFESP ;ALB/AAS - AICS EDIT SITE PARAMS ; 19-DEC-95
"RTN","IBDFESP",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFESP",3,0)
 ;
"RTN","IBDFESP",4,0)
EDIT ; -- edit site parameters
"RTN","IBDFESP",5,0)
 N DIC,DIE,DA,DR,X,Y,HOLD
"RTN","IBDFESP",6,0)
 I $G(^IBD(357.09,1,0))="" D CREATE
"RTN","IBDFESP",7,0)
 S DIE="^IBD(357.09,",DA=1
"RTN","IBDFESP",8,0)
 S HOLD=$P($G(^IBD(357.09,DA,0)),"^",8,9)
"RTN","IBDFESP",9,0)
 W !!,"Edit AICS Site Parameters"
"RTN","IBDFESP",10,0)
 W !!,"Form Tracking Purge Parameters"
"RTN","IBDFESP",11,0)
 S DR=".02;.03;1.01;W !!,""Data Entry Parameters"";.04;.06;.07;W !!,""Print Parameters"";.05//YES;.1//30;W !!,""Scanning Parameters"";I '$D(^XUSEC(""IBD MANAGER"",DUZ)) S Y=1.02;.08//20;.09//5;1.02"
"RTN","IBDFESP",12,0)
 D ^DIE
"RTN","IBDFESP",13,0)
 ;
"RTN","IBDFESP",14,0)
 ; -- if scanning parameters have changed, force a regen. of all fs
"RTN","IBDFESP",15,0)
 I HOLD'=$P($G(^IBD(357.09,DA,0)),"^",8,9) D
"RTN","IBDFESP",16,0)
 .W !!,$C(7),"***SCANNING PERCENTAGES HAVE CHANGED***"
"RTN","IBDFESP",17,0)
 .W !!,"In order for scanning % changes to take affect, you MUST DELETE ALL",!,"Form Specification files from EVERY workstation.  Delete EF*.FS files using",!,"the FILE, DELETE FORMSPEC options on the AICS Workstation screen!"
"RTN","IBDFESP",18,0)
 .S ZTRTN="FSPEC^IBDFESP",ZTDESC="IBD - REGENERATE FORM SPECS",ZTDTH=$H,ZTIO="" D ^%ZTLOAD
"RTN","IBDFESP",19,0)
 .W !!,$S($D(ZTSK):"Form Spec Regeneration task # "_ZTSK,1:"Form Spec Regeneration failed, edit scanning parameters again!") D HOME^%ZIS
"RTN","IBDFESP",20,0)
 Q
"RTN","IBDFESP",21,0)
 ;
"RTN","IBDFESP",22,0)
CREATE ; -- create entry in new parameters file 357.09
"RTN","IBDFESP",23,0)
 I $G(^IBD(357.09,1,0))'="" Q
"RTN","IBDFESP",24,0)
 N DLAYGO
"RTN","IBDFESP",25,0)
 S DIC="^IBD(357.09,",DINUM=1,X=$P($$SITE^VASITE,"^",2),DIC(0)="L",DLAYGO=357.09 D FILE^DICN Q:+Y<1
"RTN","IBDFESP",26,0)
 S $P(^IBD(357.09,1,0),"^",5)=1 ; set print inpatients to yes
"RTN","IBDFESP",27,0)
 S ^IBD(357.09,1,"Q",0)="^357.091A^"
"RTN","IBDFESP",28,0)
 Q
"RTN","IBDFESP",29,0)
FSPEC ;Form Specs deleted from file 359.2  FORM SPEC file.
"RTN","IBDFESP",30,0)
 N IBDIFN
"RTN","IBDFESP",31,0)
 S IBDIFN=0
"RTN","IBDFESP",32,0)
 F  S IBDIFN=$O(^IBD(359.2,IBDIFN)) Q:IBDIFN']""  I $D(^IBD(357.95,IBDIFN,0)) D SCAN^IBDFBKS(IBDIFN)
"RTN","IBDFESP",33,0)
 Q
"RTN","IBDFFRFT")
0^387^B8173671
"RTN","IBDFFRFT",1,0)
IBDFFRFT ;ALB/CMR - AICS Free Forms Tracking Entry ; 27-MAR-97
"RTN","IBDFFRFT",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFFRFT",3,0)
 ;
"RTN","IBDFFRFT",4,0)
FREEFT ; -- called to pass data from FT to PCE regardless of whether all
"RTN","IBDFFRFT",5,0)
 ;    pages have been received.
"RTN","IBDFFRFT",6,0)
 ;
"RTN","IBDFFRFT",7,0)
 N FORMTYPE,IBFID,IBD,IBNODE,DFN,CLINIC,APPT,Y,PXCA,AUPNDAYS,AUPNDOB,AUPNDOD,AUPNPAT,AUPNSEX,CNT,ORVP,PXCAVSIT,RESULT,SDFN
"RTN","IBDFFRFT",8,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBDFFRFT",9,0)
 I $D(VALMY) D FULL^VALM1 S IBD=0 F  S IBD=$O(VALMY(IBD)) Q:'IBD!$D(DIRUT)  D
"RTN","IBDFFRFT",10,0)
 .S IBFID=$P($G(^TMP("FRMIDX",$J,+IBD)),"^",2)
"RTN","IBDFFRFT",11,0)
 .S IBNODE=$G(^IBD(357.96,+IBFID,0)) I IBNODE="" W !,"No Form Tracking record associated with entry #",IBD H 2 Q
"RTN","IBDFFRFT",12,0)
 .I '$D(^XUSEC("IBD MANAGER",DUZ)) W !,"You must hold the IBD MANAGER key to free Forms Tracking entries" H 2 Q
"RTN","IBDFFRFT",13,0)
 .I $P(IBNODE,"^",11)'=11 W !,"You may only pass data to PCE if the current status is PENDING PAGES" H 2 Q
"RTN","IBDFFRFT",14,0)
 .S DFN=$P(IBNODE,"^",2),APPT=$P(IBNODE,"^",3),CLINIC=$P(IBNODE,"^",10)
"RTN","IBDFFRFT",15,0)
 .;
"RTN","IBDFFRFT",16,0)
 .; -- display ft data
"RTN","IBDFFRFT",17,0)
 .W !!,"PATIENT: ",$P($G(^DPT(DFN,0)),"^"),"    APPT DATE/TIME: ",$$FMTE^XLFDT(APPT,2),!,"CLINIC:  ",$P($G(^SC(CLINIC,0)),"^"),!
"RTN","IBDFFRFT",18,0)
 .;
"RTN","IBDFFRFT",19,0)
 .; -- display page data
"RTN","IBDFFRFT",20,0)
 .S I=0 F  S I=$O(^IBD(357.96,IBFID,9,I)) Q:'I  S IBNODE=$G(^IBD(357.96,IBFID,9,I,0)) W !?5,"Page ",$P(IBNODE,"^")," ",$S(+$P(IBNODE,"^",2):"Received",1:"Not Received")
"RTN","IBDFFRFT",21,0)
 .W ! S DIR(0)="Y",DIR("A")="Okay to continue",DIR("B")="Y" D ^DIR K DIR Q:'Y
"RTN","IBDFFRFT",22,0)
 .;
"RTN","IBDFFRFT",23,0)
 .; -- gather data from previously stored pages
"RTN","IBDFFRFT",24,0)
 .S I=0 F  S I=$O(^IBD(357.96,IBFID,10,I)) Q:'I  D ARYAD^IBDFBKR($G(^IBD(357.96,IBFID,10,I,0)))
"RTN","IBDFFRFT",25,0)
 .;
"RTN","IBDFFRFT",26,0)
 .; -- send data to pce
"RTN","IBDFFRFT",27,0)
 .W !,"Sending Data to PCE..."
"RTN","IBDFFRFT",28,0)
 .S RESULT=$$SEND^IBDF18E(IBFID,"","",.BUBBLES,.HANDPRNT,"",.PXCA,.DYNAMIC)
"RTN","IBDFFRFT",29,0)
 .W $S(RESULT:"Successfull",1:"Unsuccessful")
"RTN","IBDFFRFT",30,0)
 .;
"RTN","IBDFFRFT",31,0)
 .; -- process any returned errors/warnings
"RTN","IBDFFRFT",32,0)
 .I $D(PXCA("ERROR"))!($D(PXCA("WARNING"))) D
"RTN","IBDFFRFT",33,0)
 ..N I,J,ERR,LCNT,DIR,DIRUT,DUOUT
"RTN","IBDFFRFT",34,0)
 ..S LCNT=0
"RTN","IBDFFRFT",35,0)
 ..D EW^IBDFBK2(.ERR,.PXCA,.LCNT)
"RTN","IBDFFRFT",36,0)
 ..;
"RTN","IBDFFRFT",37,0)
 ..W !!!,"The following Error(s) occured while validating data in PCE for: ",$P($G(^DPT(DFN,0)),"^")
"RTN","IBDFFRFT",38,0)
 ..S I=0 F  S I=$O(ERR(I)) Q:'I  W !?4,$E(ERR(I),1,75)  I $L(ERR(I))>75 W !?10,$E(ERR(I),76,140)
"RTN","IBDFFRFT",39,0)
 ..W !!
"RTN","IBDFFRFT",40,0)
 D EXIT1^IBDFFT,START^IBDFFT1
"RTN","IBDFFRFT",41,0)
 S VALMBCK="R"
"RTN","IBDFFRFT",42,0)
 Q
"RTN","IBDFFSMP")
0^180^B9929055
"RTN","IBDFFSMP",1,0)
IBDFFSMP ;ALB/MAF   -- Print a sample of all encounter forms.  - Dec 12 1995@800
"RTN","IBDFFSMP",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFFSMP",3,0)
 ;
"RTN","IBDFFSMP",4,0)
 S (IBDFFLG,IBQUIT)=0
"RTN","IBDFFSMP",5,0)
 S (IBPM,WITHDATA)=1
"RTN","IBDFFSMP",6,0)
 K ^TMP("IBFRMS",$J)
"RTN","IBDFFSMP",7,0)
 ;
"RTN","IBDFFSMP",8,0)
 ;  -- Ask patient name 
"RTN","IBDFFSMP",9,0)
 D PATIENT G:IBQUIT EXIT
"RTN","IBDFFSMP",10,0)
 ;
"RTN","IBDFFSMP",11,0)
 ;  -- Loop thru Print Manager Clinic Setup to find active forms used by
"RTN","IBDFFSMP",12,0)
 ;    clinics.
"RTN","IBDFFSMP",13,0)
 S IBCLINIC="" F  S IBCLINIC=$O(^SD(409.95,"B",IBCLINIC)) Q:IBCLINIC']""  D
"RTN","IBDFFSMP",14,0)
 .S SETUP=$O(^SD(409.95,"B",IBCLINIC,""))
"RTN","IBDFFSMP",15,0)
 .S NAME=$P($G(^SC(IBCLINIC,0)),"^")
"RTN","IBDFFSMP",16,0)
 .D SET
"RTN","IBDFFSMP",17,0)
 I '$D(^TMP("IBFRMS",$J)) W !!,"There are no forms set up for clinics...",!! G EXIT
"RTN","IBDFFSMP",18,0)
 D NOW^IBDF1A,DEVICE  ;sets IBAPPT to NOW
"RTN","IBDFFSMP",19,0)
 G:IBQUIT EXIT
"RTN","IBDFFSMP",20,0)
 I 'IBDFFLG U IO D QUEUED
"RTN","IBDFFSMP",21,0)
 G EXIT
"RTN","IBDFFSMP",22,0)
 ;
"RTN","IBDFFSMP",23,0)
SET ;  -- Build list into array IBFORMS.  Make sure EF is one that is active
"RTN","IBDFFSMP",24,0)
 ;     Will print form only once.
"RTN","IBDFFSMP",25,0)
 I $O(^SD(409.95,"B",IBCLINIC,0)) D
"RTN","IBDFFSMP",26,0)
 .S IBDFNODE=^SD(409.95,SETUP,0)
"RTN","IBDFFSMP",27,0)
 .S IBQUIT=0
"RTN","IBDFFSMP",28,0)
 .F X=2,3,4,5,6,8,9 S:$P(IBDFNODE,"^",X)&('$D(^TMP("IBFRMS",$J,+$P(IBDFNODE,"^",X)))) ^TMP("IBFRMS",$J,$P(IBDFNODE,"^",X))=IBCLINIC  ;Loop thru the clinic setup node to find the active EF.
"RTN","IBDFFSMP",29,0)
 .Q
"RTN","IBDFFSMP",30,0)
 Q
"RTN","IBDFFSMP",31,0)
 ;
"RTN","IBDFFSMP",32,0)
PATIENT ;  -- gets the patient to print the form for
"RTN","IBDFFSMP",33,0)
 W !!
"RTN","IBDFFSMP",34,0)
 S DIR(0)="P^2:EM",DIR("A")="Select PATIENT NAME for Samples" D ^DIR K DIR I $D(DIRUT)!(+Y<1)!('(+Y)) S IBQUIT=1 Q
"RTN","IBDFFSMP",35,0)
 S DFN=+Y
"RTN","IBDFFSMP",36,0)
 Q
"RTN","IBDFFSMP",37,0)
 ;
"RTN","IBDFFSMP",38,0)
QUEUED ;
"RTN","IBDFFSMP",39,0)
 ;input - DFN,IBAPPT,IBCLINIC
"RTN","IBDFFSMP",40,0)
 N IBDEVICE
"RTN","IBDFFSMP",41,0)
 ;
"RTN","IBDFFSMP",42,0)
 D DEVICE^IBDFUA(0,.IBDEVICE)
"RTN","IBDFFSMP",43,0)
 S IBDSAMP=1 ;printing sample forms don't update forms tracking, print form in name/ssn block
"RTN","IBDFFSMP",44,0)
 F IBFORM=0:0 S IBFORM=$O(^TMP("IBFRMS",$J,IBFORM)) Q:'IBFORM  D
"RTN","IBDFFSMP",45,0)
 .S IBCLINIC=+$G(^TMP("IBFRMS",$J,IBFORM))
"RTN","IBDFFSMP",46,0)
 .D DRWFORM^IBDF2A(IBFORM,WITHDATA,.IBDEVICE)
"RTN","IBDFFSMP",47,0)
 ;
"RTN","IBDFFSMP",48,0)
EXIT ;
"RTN","IBDFFSMP",49,0)
 K IBDSAMP
"RTN","IBDFFSMP",50,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBDFFSMP",51,0)
 D ^%ZISC
"RTN","IBDFFSMP",52,0)
 K ^TMP("IBFRMS",$J)
"RTN","IBDFFSMP",53,0)
 D KPRNTVAR^IBDFUA ;kills the screen and graphics parameters
"RTN","IBDFFSMP",54,0)
 K CLINIC,DFN,FORMS,IBAPPT,IBCLINIC,IBFORM,IBDFNODE,IBDFFLG,IBPM,IBQUIT,NAME,POP,SETUP,WITHDATA,X,Y,I
"RTN","IBDFFSMP",55,0)
 Q
"RTN","IBDFFSMP",56,0)
 ;
"RTN","IBDFFSMP",57,0)
DEVICE ;
"RTN","IBDFFSMP",58,0)
 I $D(ZTQUEUED) Q
"RTN","IBDFFSMP",59,0)
 W !,$C(7),"** Encounter Forms require a page size of 80 lines and 132 columns. **"
"RTN","IBDFFSMP",60,0)
 K %IS,%ZIS,IOP S %ZIS="MQ" D ^%ZIS I POP S IBQUIT=1 Q
"RTN","IBDFFSMP",61,0)
 I $D(IO("Q")) D
"RTN","IBDFFSMP",62,0)
 .S ZTRTN="QUEUED^IBDFFSMP",(ZTSAVE("WITHDATA"),ZTSAVE("IB*"),ZTSAVE("DFN"),ZTSAVE("FORMS"))="",ZTSAVE("^TMP(""IBFRMS"",$J,")=""
"RTN","IBDFFSMP",63,0)
 .S ZTDESC="IBD - PRINT SAMPLE ENCOUNTER FORM" D ^%ZTLOAD
"RTN","IBDFFSMP",64,0)
 .W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","IBDFFSMP",65,0)
 .I $D(ZTSK) S IBDFFLG=1
"RTN","IBDFFSMP",66,0)
 .D HOME^%ZIS S IBQUIT=1 Q
"RTN","IBDFFSMP",67,0)
 Q
"RTN","IBDFFT")
0^181^B43248827
"RTN","IBDFFT",1,0)
IBDFFT ;ALB/MAF - FORMS TRACKING ; JUL 6 1995@800
"RTN","IBDFFT",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFFT",3,0)
 ;
"RTN","IBDFFT",4,0)
 ;
"RTN","IBDFFT",5,0)
OUT S IBDF2=0
"RTN","IBDFFT",6,0)
 S DIR("B")="CLINIC",DIR(0)="SBM^C:CLINIC;P:PATIENT;G:GROUP (CLINIC)",DIR("A")="Sort by [C]linic, [P]atient, [G]roup (Clinic)" D ^DIR
"RTN","IBDFFT",7,0)
 K DIR I $D(DIRUT)&('$D(IBDF1))!(Y<0) G EXIT
"RTN","IBDFFT",8,0)
 I $D(DIRUT)&$D(IBDF1) G QUIT
"RTN","IBDFFT",9,0)
 S X=$S("Pp"[X:2,"Gg"[X:3,1:1)
"RTN","IBDFFT",10,0)
 S IBDFSR=$E(X)
"RTN","IBDFFT",11,0)
 I $D(^DG(43,1,"GL")) S IBDFMUL=$P(^DG(43,1,"GL"),"^",2)
"RTN","IBDFFT",12,0)
 S IBDFL=$S(IBDFSR=1:"CLN",IBDFSR=2:"PAT",IBDFSR=3:"GRP",1:"QUIT")
"RTN","IBDFFT",13,0)
 I $D(IBDFMUL),IBDFMUL D DIVISION^VAUTOMA G:Y=-1 QUIT
"RTN","IBDFFT",14,0)
 I 'IBDFMUL S IBDFDV=$O(^DG(40.8,0)) S VAUTD=0,VAUTD(+$O(^DG(40.8,0)))=$P($G(^DG(40.8,+$O(^DG(40.8,0)),0)),"^")
"RTN","IBDFFT",15,0)
 D @(IBDFL) G:Y=-1 QUIT ;I IBDFL="GRP" D GRP1
"RTN","IBDFFT",16,0)
 D DAT G:Y=-1 QUIT
"RTN","IBDFFT",17,0)
OKQ N IBQUEUE S %=1 W !!,"Do you want to queue this to a printer?" D YN^DICN I '% D YN G OKQ
"RTN","IBDFFT",18,0)
 I %=1 S IBQUEUE=1
"RTN","IBDFFT",19,0)
 I $D(IBQUEUE) G QUEUE
"RTN","IBDFFT",20,0)
 D WAIT^DICD
"RTN","IBDFFT",21,0)
 S IBDFDAT=$$HTE^XLFDT($H)
"RTN","IBDFFT",22,0)
 I '$D(IBDF1) D EN^VALM("IBDF FT REPORT")
"RTN","IBDFFT",23,0)
 I $D(IBDF1) D KILL,START^IBDFFT1 S VALMBCK="R",VALMBG=1
"RTN","IBDFFT",24,0)
 Q
"RTN","IBDFFT",25,0)
 ;
"RTN","IBDFFT",26,0)
 ;
"RTN","IBDFFT",27,0)
SAVE ;  -- save variables for queue
"RTN","IBDFFT",28,0)
 S ZTSAVE("^TMP(""FTRK"",$J,")="",ZTSAVE("^TMP(""COUNT"",$J,")="",ZTSAVE("^TMP(""FRM"",$J,")="",ZTSAVE("^TMP(""CNT"",$J,")="",ZTSAVE("^TMP(""STATS"",$J,")="",ZTSAVE("VA*")="",ZTSAVE("VAUTG(")="",ZTSAVE("VAUTN(")="",ZTSAVE("VAUTC(")=""
"RTN","IBDFFT",29,0)
 Q
"RTN","IBDFFT",30,0)
QUEUE W !!,$C(7),"** Report requires 132 columns and a page length of 80 lines. **",!
"RTN","IBDFFT",31,0)
 N ZTSK,ZTDTH,ZTRTN,ZTDESC,ZTSAVE,ZTION,X,Y
"RTN","IBDFFT",32,0)
 K %IS,%ZIS,IOP S IOP="Q",%ZIS="QM0",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
"RTN","IBDFFT",33,0)
 I $D(IO("Q")) S ZTRTN="^IBDFFT3",ZTDESC="Forms Tracking Report",ZTSAVE("^TMP(""FTRK"",$J,")="",ZTSAVE("IB*")="" D SAVE D ^%ZTLOAD K IO("Q") W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS G EXIT
"RTN","IBDFFT",34,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","IBDFFT",35,0)
CLEAR ; -- Clean up variables if task is not queued
"RTN","IBDFFT",36,0)
 D ^IBDFFT3
"RTN","IBDFFT",37,0)
 G EXIT ;K ^TMP("IBDF",$J),^TMP("IB",$J)
"RTN","IBDFFT",38,0)
 Q
"RTN","IBDFFT",39,0)
HDR ; -- header code
"RTN","IBDFFT",40,0)
 S VALMHDR(1)="Encounter forms - printed; scanned (to PCE, w/ERrors); pending pages;"
"RTN","IBDFFT",41,0)
 S VALMHDR(2)="data entry (to PCE,w/ERrors); error detected,not transmitted; not printed."
"RTN","IBDFFT",42,0)
 Q
"RTN","IBDFFT",43,0)
 ;
"RTN","IBDFFT",44,0)
CLN S VAUTNI=2,DIC="^SC(",DIC("S")="I $P(^(0),U,3)=""C""&$S(VAUTD:1,$D(VAUTD(+$P(^(0),U,15))):1,'+$P(^(0),U,15)&$D(VAUTD(+$O(^DG(40.8,0)))):1,1:0)",VAUTSTR="clinic",VAUTVB="VAUTC" D FIRST^VAUTOMA S:Y=-1 IBDF2=1 Q:IBDF2
"RTN","IBDFFT",45,0)
 Q
"RTN","IBDFFT",46,0)
 ;
"RTN","IBDFFT",47,0)
 ;
"RTN","IBDFFT",48,0)
PAT S VAUTNI=2 D PATIENT^VAUTOMA S:Y=-1 IBDF2=1 Q:IBDF2
"RTN","IBDFFT",49,0)
 Q
"RTN","IBDFFT",50,0)
 ;
"RTN","IBDFFT",51,0)
 ;
"RTN","IBDFFT",52,0)
GRP S VAUTNI=2,DIC="^IBD(357.99,",VAUTSTR="clinic group",VAUTVB="VAUTG" D FIRST^VAUTOMA S:Y=-1 IBDF2=1 Q:IBDF2
"RTN","IBDFFT",53,0)
 Q
"RTN","IBDFFT",54,0)
GRP1 N IBGROUP
"RTN","IBDFFT",55,0)
 I VAUTG=1 D
"RTN","IBDFFT",56,0)
 .S IBGROUP=0 F  S IBGROUP=$O(^IBD(357.99,IBGROUP)) Q:'IBGROUP  I $D(^IBD(357.99,IBGROUP,0)) S VAUTG(IBGROUP)=$P(^IBD(357.99,IBGROUP,0),"^",1)
"RTN","IBDFFT",57,0)
 .Q
"RTN","IBDFFT",58,0)
 S IBGROUP=0 F  S IBGROUP=$O(VAUTG(IBGROUP)) Q:'IBGROUP  D
"RTN","IBDFFT",59,0)
 .N IBCLI,IBDIV,IBCLNUM,IBDIVNUM
"RTN","IBDFFT",60,0)
 .S IBCLI=0 F  S IBCLI=$O(^IBD(357.99,IBGROUP,10,IBCLI)) Q:'IBCLI  I $D(^IBD(357.99,IBGROUP,10,IBCLI,0)) S IBCLNUM=+^IBD(357.99,IBGROUP,10,IBCLI,0) I $D(^SC(+IBCLNUM,0)) D
"RTN","IBDFFT",61,0)
 ..S VAUTG(IBGROUP,IBCLNUM)=$P(^SC(+IBCLNUM,0),"^",1)
"RTN","IBDFFT",62,0)
 ..Q
"RTN","IBDFFT",63,0)
 .S IBDIV=0 F  S IBDIV=$O(^IBD(357.99,IBGROUP,11,IBDIV)) Q:'IBDIV  I $D(^IBD(357.99,IBGROUP,11,IBDIV,0)) S IBDIVNUM=+^IBD(357.99,IBGROUP,11,IBDIV,0) I $D(^DG(40.8,IBDIVNUM,0)) D
"RTN","IBDFFT",64,0)
 ..S IBCLNUM=0 F  S IBCLNUM=$O(^SC(IBCLNUM)) Q:'IBCLNUM  I $D(^SC(IBCLNUM,0)) I +$P(^SC(IBCLNUM,0),"^",15)=IBDIVNUM S VAUTG(IBGROUP,IBCLNUM)=$P(^SC(IBCLNUM,0),"^",1)
"RTN","IBDFFT",65,0)
 ..Q
"RTN","IBDFFT",66,0)
 Q
"RTN","IBDFFT",67,0)
 ;
"RTN","IBDFFT",68,0)
 ;
"RTN","IBDFFT",69,0)
CHECK(CLIN) ;  -- Check to see if clinic has a form and its one that is not for
"RTN","IBDFFT",70,0)
 ;     future use only.
"RTN","IBDFFT",71,0)
 N IBDFNODE,IBDFCL,X
"RTN","IBDFFT",72,0)
 S QUIT=0
"RTN","IBDFFT",73,0)
 I $O(^SD(409.95,"B",+CLIN,0)) D
"RTN","IBDFFT",74,0)
 .S IBDFCL=$O(^SD(409.95,"B",+CLIN,0))
"RTN","IBDFFT",75,0)
 .S IBDFNODE=^SD(409.95,IBDFCL,0)
"RTN","IBDFFT",76,0)
 .S QUIT=0 F X=2:1:9 S:$P(IBDFNODE,"^",X)&("^1^2^3^4^5^6^8^9^"[X) QUIT=1 Q:QUIT
"RTN","IBDFFT",77,0)
 Q
"RTN","IBDFFT",78,0)
 ;
"RTN","IBDFFT",79,0)
 ;
"RTN","IBDFFT",80,0)
EXIT ;  -- Code executed at action exit
"RTN","IBDFFT",81,0)
 K IBDFL,IBDFL1,IBDFBG,IBDFBG1,IBDFBEG,IBDFBEG1,IBDFEND,IBDFEND1,VAUTD,VAUTN,VAUTC,IBDFC1,IBDFN1,IBDFDV1,VAUTD1,VAUTC1,VAUTN1,IBDFN,DNKA,VAUTG,IBDFGRO
"RTN","IBDFFT",82,0)
EXIT1 ;
"RTN","IBDFFT",83,0)
 K DFN,IBDFCLI,IBDFDA,IBDFDAT,IBDFIFN,IBDFMUL,IBDFSA,IBDFSR,IBDFT,IBDVAL,IBDFVAL,IBDVAL1,QUIT,IBDF2,IBDNKA,IBDX
"RTN","IBDFFT",84,0)
 K ^TMP("CNT",$J),^TMP("FRM",$J),^TMP("FTRK",$J),^TMP("STATS",$J),^TMP("FRMIDX",$J),^TMP("STAIDX",$J),^TMP("COUNT",$J),IBDFDIV,IBDFCLIN,IBDFNODE,IBDFGROP
"RTN","IBDFFT",85,0)
 D ^%ZISC
"RTN","IBDFFT",86,0)
 Q
"RTN","IBDFFT",87,0)
 ;
"RTN","IBDFFT",88,0)
 ;
"RTN","IBDFFT",89,0)
DAT ;  -- DATE RANGE
"RTN","IBDFFT",90,0)
BEG W ! S %DT="AEX",%DT("A")="BEGINNING DATE: " D ^%DT S IBDFBG=Y,IBDFBEG=Y-.0001 S:X="^"!(X="") Y=-1 Q:Y=-1
"RTN","IBDFFT",91,0)
END W ! S %DT("A")="ENDING DATE: " D ^%DT S:X="^"!(X="") Y=-1 Q:Y=-1  I Y<1 D HELP^%DTC G END
"RTN","IBDFFT",92,0)
 S IBDFEND=Y_.9999
"RTN","IBDFFT",93,0)
 I IBDFEND\1<IBDFBG W !!?5,"The ending date cannot be before the beginning date" G END
"RTN","IBDFFT",94,0)
 Q
"RTN","IBDFFT",95,0)
 ;
"RTN","IBDFFT",96,0)
 ;
"RTN","IBDFFT",97,0)
HELP ; -- help code
"RTN","IBDFFT",98,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFFT",99,0)
 Q
"RTN","IBDFFT",100,0)
CHGLST ;  -- Code to change list display
"RTN","IBDFFT",101,0)
 D FULL^VALM1
"RTN","IBDFFT",102,0)
 S IBDFL1=IBDFL,IBDFBG1=IBDFBG,IBDFBEG1=IBDFBEG,IBDFEND1=IBDFEND
"RTN","IBDFFT",103,0)
 S IBDFDV1=VAUTD S:$D(VAUTC) IBDFC1=VAUTC S:$D(VAUTN) IBDFN1=VAUTN
"RTN","IBDFFT",104,0)
 I $D(VAUTG) S IBDFG1=VAUTG
"RTN","IBDFFT",105,0)
 I VAUTD=0 F X=0:0 S X=$O(VAUTD(X)) Q:X']""  S VAUTD1(X)=VAUTD(X)
"RTN","IBDFFT",106,0)
 I $D(VAUTC),VAUTC=0 F X=0:0 S X=$O(VAUTC(X)) Q:X']""  S VAUTC1(X)=VAUTC(X)
"RTN","IBDFFT",107,0)
 I $D(VAUTN),VAUTN=0 F X=0:0 S X=$O(VAUTN(X)) Q:X']""  S VAUTN1(X)=VAUTN(X)
"RTN","IBDFFT",108,0)
 I $D(VAUTG) D
"RTN","IBDFFT",109,0)
 .N IBX
"RTN","IBDFFT",110,0)
 .S IBX=0
"RTN","IBDFFT",111,0)
 .F X=0:0 S X=$O(VAUTG(X)) Q:X']""  F Y=0:0 S Y=$O(VAUTG(X,Y)) Q:Y']""  S VAUTG1(X,Y)=VAUTG(X,Y)
"RTN","IBDFFT",112,0)
 D EXIT1,OUT
"RTN","IBDFFT",113,0)
 Q
"RTN","IBDFFT",114,0)
KILL ;  -- Kill extra array variables
"RTN","IBDFFT",115,0)
 N IBDFXX
"RTN","IBDFFT",116,0)
 S IBDFXX=$S(IBDFL="CLN":"VAUTC",IBDFL="GRP":"VAUTG",1:"VAUTN")
"RTN","IBDFFT",117,0)
 I IBDFXX="VAUTN" K VAUTC,VAUTG
"RTN","IBDFFT",118,0)
 I IBDFXX="VAUTC" K VAUTN,VAUTG
"RTN","IBDFFT",119,0)
 I IBDFXX="VAUTG" K VAUTN,VAUTC
"RTN","IBDFFT",120,0)
 Q
"RTN","IBDFFT",121,0)
QUIT ;  -- Kill variables and reset to last display if no change has taken place
"RTN","IBDFFT",122,0)
 I $D(IBDF1) S IBDFL=IBDFL1,IBDFBG=IBDFBG1,IBDFBEG=IBDFBEG1,IBDFEND=IBDFEND1,VAUTD=IBDFDV1 S:IBDFL="CLN" VAUTC=IBDFC1 S:IBDFL="PAT" VAUTN=IBDFN1 S:IBDFL="GRP" VAUTG=IBDFG1 D
"RTN","IBDFFT",123,0)
 .I VAUTD=0 F X=0:0 S X=$O(VAUTD1(X)) Q:X']""  S VAUTD(X)=VAUTD1(X)
"RTN","IBDFFT",124,0)
 .I $D(VAUTC),VAUTC=0 F X=0:0 S X=$O(VAUTC1(X)) Q:X']""  S VAUTC(X)=VAUTC1(X)
"RTN","IBDFFT",125,0)
 .I $D(VAUTN),VAUTN=0 F X=0:0 S X=$O(VAUTN1(X)) Q:X']""  S VAUTN(X)=VAUTN1(X)
"RTN","IBDFFT",126,0)
 .I $D(VAUTG) D
"RTN","IBDFFT",127,0)
 ..F X=0:0 S X=$O(VAUTG1(X)) Q:X']""  F Y=0:0 S Y=$O(VAUTG1(X,Y)) Q:Y']""  S VAUTG(X,Y)=VAUTG1(X,Y)
"RTN","IBDFFT",128,0)
 I '$D(IBDF1) G EXIT
"RTN","IBDFFT",129,0)
 D KILL,START^IBDFFT1 S VALMBCK="R",VALMBG=1
"RTN","IBDFFT",130,0)
 Q
"RTN","IBDFFT",131,0)
 ;
"RTN","IBDFFT",132,0)
SCHSTAT(DFN,APPT) ; -- return text of scheduling status
"RTN","IBDFFT",133,0)
 ;
"RTN","IBDFFT",134,0)
 N X
"RTN","IBDFFT",135,0)
 S X=$$REQ^IBDFDE0(DFN,APPT,+$G(^DPT(DFN,"S",APPT,0)),$$FNDSDOE^IBDFDE(DFN,APPT))
"RTN","IBDFFT",136,0)
 S X=$S(X=1:"CO Required",X=-1:"CO Complete",1:"CO Not Req.")
"RTN","IBDFFT",137,0)
 Q X
"RTN","IBDFFT",138,0)
YN W !?10,"Choose:",!?25,"Y for YES",!?25,"N for NO",! Q
"RTN","IBDFFT1")
0^182^B80632527
"RTN","IBDFFT1",1,0)
IBDFFT1 ;ALB/MAF - FORMS TRACKING CONTINUED - JUL 6 1995
"RTN","IBDFFT1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFFT1",3,0)
 ;
"RTN","IBDFFT1",4,0)
START ;
"RTN","IBDFFT1",5,0)
 N IBDCNT,IBDCNT1,IBDFTIME
"RTN","IBDFFT1",6,0)
 S (IBDCNT,IBDNKA,IBDCNT1,VALMCNT)=0
"RTN","IBDFFT1",7,0)
 D KILL^VALM10()
"RTN","IBDFFT1",8,0)
 D @(IBDFL)
"RTN","IBDFFT1",9,0)
 N IBDFDV,IBDFCL,IBDNODE,IBDFTMP,IBDFPAT,IBDFPT,IBDFT
"RTN","IBDFFT1",10,0)
 S (IBDFDV,IBDFCL,IBDFPT)=0
"RTN","IBDFFT1",11,0)
 ;
"RTN","IBDFFT1",12,0)
 I $D(VAUTG) D
"RTN","IBDFFT1",13,0)
 .N IBDFGR
"RTN","IBDFFT1",14,0)
 .S IBDFGR=0
"RTN","IBDFFT1",15,0)
 .F IBDFDIV=0:0 S IBDFDV=$O(^TMP("FTRK",$J,IBDFDV)) Q:IBDFDV']""  D:'$D(IBDFDIV(IBDFDV)) HEADER^IBDFFT2 F IBDFGRO=0:0 S IBDFGR=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR)) Q:IBDFGR']""  D
"RTN","IBDFFT1",16,0)
 ..F IBDFCLI=0:0 S IBDFCL=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR,IBDFCL)) Q:IBDFCL']""  D:'$D(IBDFGROP(IBDFDV,IBDFGR)) HEADER2^IBDFFT2 D:'$D(IBDFCLIN(IBDFGR,IBDFCL)) HEADER1^IBDFFT2 D
"RTN","IBDFFT1",17,0)
 ...F IBDFT=0:0 S IBDFT=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR,IBDFCL,IBDFT)) Q:'IBDFT  F IBDFPAT=0:0 S IBDFPT=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR,IBDFCL,IBDFT,IBDFPT)) Q:IBDFPT']""  D
"RTN","IBDFFT1",18,0)
 ....F IBDFIFN=0:0 S IBDFIFN=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR,IBDFCL,IBDFT,IBDFPT,IBDFIFN)) Q:'IBDFIFN  S IBDX="" F  S IBDX=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR,IBDFCL,IBDFT,IBDFPT,IBDFIFN,IBDX)) Q:IBDX=""  S IBDFTMP=^(IBDX) D SETARR
"RTN","IBDFFT1",19,0)
 I '$D(VAUTG) D
"RTN","IBDFFT1",20,0)
 .F IBDFDIV=0:0 S IBDFDV=$O(^TMP("FTRK",$J,IBDFDV)) Q:IBDFDV']""  D:'$D(IBDFDIV(IBDFDV)) HEADER^IBDFFT2 F IBDFCLI=0:0 S IBDFCL=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL)) Q:IBDFCL']""  D:'$D(IBDFCLIN(IBDFDV,IBDFCL)) HEADER1^IBDFFT2 D
"RTN","IBDFFT1",21,0)
 ..F IBDFT=0:0 S IBDFT=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFT)) Q:'IBDFT  F IBDFPAT=0:0 S IBDFPT=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFT,IBDFPT)) Q:IBDFPT']""  D
"RTN","IBDFFT1",22,0)
 ...F IBDFIFN=0:0 S IBDFIFN=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFT,IBDFPT,IBDFIFN)) Q:'IBDFIFN  S IBDX="" F  S IBDX=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFT,IBDFPT,IBDFIFN,IBDX)) Q:IBDX=""  S IBDFTMP=^(IBDX) D SETARR
"RTN","IBDFFT1",23,0)
 I '$D(^TMP("FRM",$J)) D NUL^IBDFFT2
"RTN","IBDFFT1",24,0)
 Q
"RTN","IBDFFT1",25,0)
CLN ;  -- Loop clinics
"RTN","IBDFFT1",26,0)
 N IBDFCLIN
"RTN","IBDFFT1",27,0)
 I VAUTC=1 F IBDFCLIN=0:0 S IBDFCLIN=$O(^SC(IBDFCLIN)) Q:'IBDFCLIN  D CK(IBDFCLIN) I QUIT=1 D BLD
"RTN","IBDFFT1",28,0)
 I VAUTC=0 F IBDFCLIN=0:0 S IBDFCLIN=$O(VAUTC(IBDFCLIN)) Q:'IBDFCLIN  D CK(IBDFCLIN) I QUIT=1 D BLD
"RTN","IBDFFT1",29,0)
 D TRACKING Q
"RTN","IBDFFT1",30,0)
PAT ;  -- Loop patients
"RTN","IBDFFT1",31,0)
 N IBDFCLIN,IBDFPAT
"RTN","IBDFFT1",32,0)
 I VAUTN=1 F IBDFPAT=0:0 S IBDFPAT=$O(^DPT(IBDFPAT)) Q:'IBDFPAT  F IBDFT=IBDFBEG:0 S IBDFT=$O(^DPT(IBDFPAT,"S",IBDFT)) Q:'IBDFT!($P(IBDFT,".",1)>IBDFEND)  I $D(^DPT(IBDFPAT,"S",IBDFT,0)) D SET
"RTN","IBDFFT1",33,0)
 I VAUTN=0 F IBDFPAT=0:0 S IBDFPAT=$O(VAUTN(IBDFPAT)) Q:'IBDFPAT  F IBDFT=IBDFBEG:0 S IBDFT=$O(^DPT(IBDFPAT,"S",IBDFT)) Q:'IBDFT!($P(IBDFT,".",1)>IBDFEND)  I $D(^DPT(IBDFPAT,"S",IBDFT,0)) D SET
"RTN","IBDFFT1",34,0)
 D TRACKING Q
"RTN","IBDFFT1",35,0)
GRP D GRP1^IBDFFT
"RTN","IBDFFT1",36,0)
 N IBDFGRP,IBDFCLIN
"RTN","IBDFFT1",37,0)
 F IBDFGRP=0:0 S IBDFGRP=$O(VAUTG(IBDFGRP)) Q:'IBDFGRP  F IBDFCLIN=0:0 S IBDFCLIN=$O(VAUTG(IBDFGRP,IBDFCLIN)) Q:'IBDFCLIN  D CK(IBDFCLIN) I QUIT=1 D BLD
"RTN","IBDFFT1",38,0)
 D TRACKING Q
"RTN","IBDFFT1",39,0)
 ;
"RTN","IBDFFT1",40,0)
 ;
"RTN","IBDFFT1",41,0)
SET S IBDFCLIN=$P(^DPT(IBDFPAT,"S",IBDFT,0),"^",1) D CK(IBDFCLIN) I QUIT=1 S DFN=IBDFPAT D CK1 Q
"RTN","IBDFFT1",42,0)
 Q
"RTN","IBDFFT1",43,0)
 ;
"RTN","IBDFFT1",44,0)
 ;
"RTN","IBDFFT1",45,0)
CK(XCL) ;  -- Check clinic, division, form
"RTN","IBDFFT1",46,0)
 Q:'$D(^SC(+XCL,0))
"RTN","IBDFFT1",47,0)
 S QUIT=0
"RTN","IBDFFT1",48,0)
 S IBDFNODE=$G(^SC(XCL,0))
"RTN","IBDFFT1",49,0)
 Q:$P(IBDFNODE,"^",3)'="C"
"RTN","IBDFFT1",50,0)
 I $G(VAUTD)=0 Q:'$P(IBDFNODE,"^",15)  Q:'$D(VAUTD($P(IBDFNODE,"^",15)))
"RTN","IBDFFT1",51,0)
 D CHECK^IBDFFT(XCL)
"RTN","IBDFFT1",52,0)
 Q:QUIT=0
"RTN","IBDFFT1",53,0)
 Q
"RTN","IBDFFT1",54,0)
 ;
"RTN","IBDFFT1",55,0)
 ;
"RTN","IBDFFT1",56,0)
BLD ; -- scan appts
"RTN","IBDFFT1",57,0)
 F IBDFT=IBDFBEG:0 S IBDFT=$O(^SC(IBDFCLIN,"S",IBDFT)) Q:'IBDFT!($P(IBDFT,".",1)>IBDFEND)  D
"RTN","IBDFFT1",58,0)
 .F IBDFDA=0:0 S IBDFDA=$O(^SC(IBDFCLIN,"S",IBDFT,1,IBDFDA)) Q:'IBDFDA  I $D(^SC(IBDFCLIN,"S",IBDFT,1,IBDFDA,0)) S IBDFSA=^(0) S DFN=+IBDFSA D CK1
"RTN","IBDFFT1",59,0)
 Q
"RTN","IBDFFT1",60,0)
CK1 ; -- 
"RTN","IBDFFT1",61,0)
 N IBDFXPC,IBDFYPC
"RTN","IBDFFT1",62,0)
 S IBDFXPC=$S($D(VAUTC)!($D(VAUTG)):$P(IBDFNODE,"^",1),1:$P(^DPT(IBDFPAT,0),"^",1))
"RTN","IBDFFT1",63,0)
 S IBDFYPC=$S($D(VAUTC)!($D(VAUTG)):$P(^DPT(DFN,0),"^",1),1:$P(IBDFNODE,"^",1))
"RTN","IBDFFT1",64,0)
 I $D(^IBD(357.96,"APTAP",DFN,IBDFT)) S IBDFIFN=0 F  S IBDFIFN=$O(^IBD(357.96,"APTAP",DFN,IBDFT,IBDFIFN)) Q:'IBDFIFN  I $D(^IBD(357.96,IBDFIFN,0)) D
"RTN","IBDFFT1",65,0)
 .I $D(VAUTG) S ^TMP("FTRK",$J,$S($D(^DG(40.8,+$P(IBDFNODE,"^",15),0)):$P(^DG(40.8,$P(IBDFNODE,"^",15),0),"^",1),1:"NOT SPECIFIED"),$P(^IBD(357.99,IBDFGRP,0),"^",1),IBDFXPC,IBDFT,IBDFYPC,DFN,+IBDFIFN)=IBDFCLIN_"^"_^IBD(357.96,IBDFIFN,0)
"RTN","IBDFFT1",66,0)
 .I '$D(VAUTG) S ^TMP("FTRK",$J,$S($D(^DG(40.8,+$P(IBDFNODE,"^",15),0)):$P(^DG(40.8,$P(IBDFNODE,"^",15),0),"^",1),1:"NOT SPECIFIED"),IBDFXPC,IBDFT,IBDFYPC,DFN,+IBDFIFN)=IBDFCLIN_"^"_^IBD(357.96,IBDFIFN,0)
"RTN","IBDFFT1",67,0)
 .Q
"RTN","IBDFFT1",68,0)
 E  D
"RTN","IBDFFT1",69,0)
 .I $D(VAUTG) S ^TMP("FTRK",$J,$S($D(^DG(40.8,+$P(IBDFNODE,"^",15),0)):$P(^DG(40.8,$P(IBDFNODE,"^",15),0),"^",1),1:"NOT SPECIFIED"),$P(^IBD(357.99,IBDFGRP,0),"^",1),IBDFXPC,IBDFT,IBDFYPC,DFN,0)=IBDFCLIN_"^^"_DFN_"^"_IBDFT
"RTN","IBDFFT1",70,0)
 .I '$D(VAUTG) S ^TMP("FTRK",$J,$S($D(^DG(40.8,+$P(IBDFNODE,"^",15),0)):$P(^DG(40.8,$P(IBDFNODE,"^",15),0),"^",1),1:"NOT SPECIFIED"),IBDFXPC,IBDFT,IBDFYPC,DFN,0)=IBDFCLIN_"^^"_DFN_"^"_IBDFT
"RTN","IBDFFT1",71,0)
 Q
"RTN","IBDFFT1",72,0)
 ;
"RTN","IBDFFT1",73,0)
SETARR ;  -- Set up Listman array
"RTN","IBDFFT1",74,0)
 S DFN=$P(IBDFTMP,"^",3)
"RTN","IBDFFT1",75,0)
 I '$D(^TMP("CNT",$J,$S(IBDFDV]"":IBDFDV,1:"NOT SPECIFIED"),IBDFCL)) D
"RTN","IBDFFT1",76,0)
 .S ^TMP("CNT",$J,$S(IBDFDV]"":IBDFDV,1:"NOT SPECIFIED"),IBDFCL)="0^0^0^0^0^0^0"
"RTN","IBDFFT1",77,0)
 .I $D(VAUTG) I '$D(^TMP("COUNT",$J,$S(IBDFDV]"":IBDFDV,1:"NOT SPECIFIED"),IBDFGR,IBDFCL)) D
"RTN","IBDFFT1",78,0)
 ..S ^TMP("COUNT",$J,$S(IBDFDV]"":IBDFDV,1:"NOT SPECIFIED"),IBDFGR,IBDFCL)=1
"RTN","IBDFFT1",79,0)
 I $D(VAUTG) K IBDFLAG I $D(^TMP("COUNT",$J,IBDFCL,IBDFT,IBDFIFN)) I IBDFGR=^TMP("COUNT",$J,IBDFCL,IBDFT,IBDFIFN) D COUNT
"RTN","IBDFFT1",80,0)
 I $D(VAUTG) I '$D(^TMP("COUNT",$J,IBDFCL,IBDFT,IBDFIFN)) D COUNT
"RTN","IBDFFT1",81,0)
 I '$D(VAUTG) S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",1)=$P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",1)+1
"RTN","IBDFFT1",82,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFFT1",83,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT1",84,0)
 S X=""
"RTN","IBDFFT1",85,0)
 S IBDFVAL=$J(IBDCNT1_")",5)
"RTN","IBDFFT1",86,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,1,5)
"RTN","IBDFFT1",87,0)
 S IBDFVAL=$P($G(IBDFTMP),"^",2)
"RTN","IBDFFT1",88,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,7,8)
"RTN","IBDFFT1",89,0)
 S IBDFVAL=$P($G(IBDFTMP),"^",4) I IBDFVAL S DNKA=$$DNKA(DFN,IBDFVAL),IBDFVAL=$P($$FMTE^XLFDT(IBDFVAL,2),":",1,2)
"RTN","IBDFFT1",90,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,17,14)
"RTN","IBDFFT1",91,0)
 I $D(VAUTC)!($D(VAUTG)) S (IBDFVAL,IBDFN)=$P($G(IBDFTMP),"^",3) I IBDFVAL]"" S IBDFVAL=$P(^DPT(IBDFVAL,0),"^",1)
"RTN","IBDFFT1",92,0)
 I $D(VAUTN) S (IBDFVAL,IBDFN)=$P($G(IBDFTMP),"^",1) I IBDFVAL]"" S IBDFVAL=$P(^SC(IBDFVAL,0),"^",1)
"RTN","IBDFFT1",93,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,34,15)
"RTN","IBDFFT1",94,0)
 S IBDFVAL=$P($G(IBDFTMP),"^",6)
"RTN","IBDFFT1",95,0)
 I IBDFVAL]"" S IBDFVAL=$E(IBDFVAL,4,5)_"/"_$E(IBDFVAL,6,7)_"/"_$E(IBDFVAL,2,3) I '$D(VAUTG)!($D(VAUTG)&($D(IBDFLAG))) S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",2)=+($P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",2))+1
"RTN","IBDFFT1",96,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,50,8)
"RTN","IBDFFT1",97,0)
 S VAL=$P($G(IBDFTMP),"^",12)
"RTN","IBDFFT1",98,0)
 S IBDFVAL=$P($G(IBDFTMP),"^",7)
"RTN","IBDFFT1",99,0)
 I IBDFVAL]"" S IBDFVAL=$E(IBDFVAL,4,5)_"/"_$E(IBDFVAL,6,7)_"/"_$E(IBDFVAL,2,3) I '$D(VAUTG)!($D(VAUTG)&($D(IBDFLAG))) I VAL=2 S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",3)=+($P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",3))+1
"RTN","IBDFFT1",100,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,61,8)
"RTN","IBDFFT1",101,0)
 N IBDFXX
"RTN","IBDFFT1",102,0)
 S IBDFXX=$S(VAL=3:3,VAL=6:5,1:"")
"RTN","IBDFFT1",103,0)
 I IBDFXX]"" I '$D(VAUTG)!($D(VAUTG)&($D(IBDFLAG))) S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",IBDFXX)=$P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",IBDFXX)+1 S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",6)=$P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",6)+1
"RTN","IBDFFT1",104,0)
 S VAL=$S(DNKA:$P(DNKA,"^",2),VAL=1:"PRINTED",VAL=2:"SCANNED",VAL=3:"SCD/PCE",VAL=4:"SCD w/ER",VAL=5:"DENTRY",VAL=6:"DE to PCE",VAL=7:"DE w/ER",VAL=11:"PEND Pgs",VAL=12:"NO TRANS",20:"AVAIL DE",1:"NOT PRNT")
"RTN","IBDFFT1",105,0)
 I DNKA S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",7)=+($P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",7))+1
"RTN","IBDFFT1",106,0)
 S X=$$SETSTR^VALM1(VAL,X,72,8)
"RTN","IBDFFT1",107,0)
 S IBDFVAL=$S(DNKA:"",1:$$SCHSTAT^IBDFFT($P(IBDFTMP,"^",3),$P(IBDFTMP,"^",4)))
"RTN","IBDFFT1",108,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,82,12)
"RTN","IBDFFT1",109,0)
 S IBDFVAL=$S($P(IBDFTMP,"^",14):" Yes",1:" No")
"RTN","IBDFFT1",110,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,96,6)
"RTN","IBDFFT1",111,0)
 ;
"RTN","IBDFFT1",112,0)
 ;
"RTN","IBDFFT1",113,0)
TMP ; -- Set up TMP Array
"RTN","IBDFFT1",114,0)
 S ^TMP("FRM",$J,IBDCNT,0)=$$LOWER^VALM1(X),^TMP("FRM",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFFT1",115,0)
 S ^TMP("FRMIDX",$J,IBDCNT1)=VALMCNT_"^"_$P(IBDFTMP,"^",2)_"^"_$P(IBDFTMP,"^",3)_"^"_$P(IBDFTMP,"^",4)_"^"_$P(IBDFTMP,"^",6)_"^"_$P(IBDFTMP,"^",7)_"^"_$P(IBDFTMP,"^",12)
"RTN","IBDFFT1",116,0)
 D NOW^%DTC S IBDFTIME=% S X1=$S($P(IBDFTMP,"^",7):$P(IBDFTMP,"^",7),1:IBDFTIME),X2=$P(IBDFTMP,"^",4) D ^%DTC S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",4)=+($P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",4))+X
"RTN","IBDFFT1",117,0)
 Q
"RTN","IBDFFT1",118,0)
COUNT ;
"RTN","IBDFFT1",119,0)
 S ^TMP("COUNT",$J,IBDFCL,IBDFT,IBDFIFN)=IBDFGR,IBDFLAG=1
"RTN","IBDFFT1",120,0)
 S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",1)=$P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",1)+1
"RTN","IBDFFT1",121,0)
 Q
"RTN","IBDFFT1",122,0)
TRACKING ;  -- loops thru forms tracking file 357.96
"RTN","IBDFFT1",123,0)
 ;     X-reference ^IBD(357.96,"ADATNA", Appt date/time, 1 or 0, IFN).
"RTN","IBDFFT1",124,0)
 ;     1 = forms tracking file entry but no scheduled appt associated
"RTN","IBDFFT1",125,0)
 ;     0 = forms tracking file entry with associated scheduled appt.
"RTN","IBDFFT1",126,0)
 N IBDFCLIN,IBAPPTDT,IBDFPAT,IBDFTRK,IBDFX,IBDFT
"RTN","IBDFFT1",127,0)
 S IBDFX=""
"RTN","IBDFFT1",128,0)
 F IBDFT=IBDFBEG:0 S IBDFT=$O(^IBD(357.96,"ADATNA",IBDFT)) Q:'IBDFT!(IBDFT>IBDFEND)  S IBDFTRK=0 F  S IBDFTRK=$O(^IBD(357.96,"ADATNA",IBDFT,1,IBDFTRK)) Q:'IBDFTRK  D
"RTN","IBDFFT1",129,0)
 .Q:'$G(^IBD(357.96,IBDFTRK,0))
"RTN","IBDFFT1",130,0)
 .S IBDFCLIN=$P(^IBD(357.96,IBDFTRK,0),"^",10)
"RTN","IBDFFT1",131,0)
 .I IBDFCLIN']"" Q
"RTN","IBDFFT1",132,0)
 .S IBDFPAT=$P(^IBD(357.96,IBDFTRK,0),"^",2)
"RTN","IBDFFT1",133,0)
 .D CK(IBDFCLIN) I QUIT=1 D
"RTN","IBDFFT1",134,0)
 ..I $D(VAUTC),VAUTC=0,'$D(VAUTC(IBDFCLIN)) Q
"RTN","IBDFFT1",135,0)
 ..I $D(VAUTN),VAUTN=0,'$D(VAUTN(IBDFPAT)) Q
"RTN","IBDFFT1",136,0)
 ..N IBDFXPC,IBDFYPC
"RTN","IBDFFT1",137,0)
 ..S IBDFXPC=$S($D(VAUTC):$P(IBDFNODE,"^",1),$D(VAUTG):$P(IBDFNODE,"^",1),1:$P(^DPT(IBDFPAT,0),"^",1))
"RTN","IBDFFT1",138,0)
 ..S IBDFYPC=$S($D(VAUTC)!($D(VAUTG)):$P(^DPT(IBDFPAT,0),"^",1),1:$P(IBDFNODE,"^",1))
"RTN","IBDFFT1",139,0)
 ..I '$D(VAUTG) S ^TMP("FTRK",$J,$S($D(^DG(40.8,+$P(IBDFNODE,"^",15),0)):$P(^DG(40.8,$P(IBDFNODE,"^",15),0),"^",1),1:"NOT SPECIFIED"),IBDFXPC,IBDFT,IBDFYPC,IBDFPAT,IBDFTRK)=IBDFCLIN_"^"_^IBD(357.96,IBDFTRK,0)
"RTN","IBDFFT1",140,0)
 ..I $D(VAUTG) D
"RTN","IBDFFT1",141,0)
 ...N IBDFGRP,IBDFCLNN,IBDFCLN,IBDFGR
"RTN","IBDFFT1",142,0)
 ...S (IBDFCLN,IBDFGR)=0
"RTN","IBDFFT1",143,0)
 ...F IBDFGR=0:0 S IBDFGR=$O(VAUTG(IBDFGR)) Q:IBDFGR']""  F IBDFCLN=0:0 S IBDFCLN=$O(VAUTG(IBDFGR,IBDFCLN)) Q:IBDFCLN']""  I IBDFCLN=IBDFCLIN D
"RTN","IBDFFT1",144,0)
 ....N IBX,IBY
"RTN","IBDFFT1",145,0)
 ....S IBX=$P($G(^IBD(357.99,IBDFGR,0)),"^"),IBY=$P($G(^SC(IBDFCLN,0)),"^")
"RTN","IBDFFT1",146,0)
 ....S ^TMP("FTRK",$J,$S($D(^DG(40.8,+$P(IBDFNODE,"^",15),0)):$P(^DG(40.8,$P(IBDFNODE,"^",15),0),"^",1),1:"NOT SPECIFIED"),IBX,IBY,IBDFT,IBDFYPC,IBDFPAT,IBDFTRK)=IBDFCLIN_"^"_^IBD(357.96,IBDFTRK,0)
"RTN","IBDFFT1",147,0)
 Q
"RTN","IBDFFT1",148,0)
 ;
"RTN","IBDFFT1",149,0)
DNKA(DFN,APPT) ;
"RTN","IBDFFT1",150,0)
 ; -- return did not keep appointment
"RTN","IBDFFT1",151,0)
 N STATUS,DNKA
"RTN","IBDFFT1",152,0)
 S DNKA=0
"RTN","IBDFFT1",153,0)
 S STATUS=$P($G(^DPT(+$G(DFN),"S",+$G(APPT),0)),"^",2)
"RTN","IBDFFT1",154,0)
 I STATUS]"" I "^N^C^NA^CA^PC^PCA^"[STATUS S DNKA=1_"^"_$S(STATUS["N":"NO SHOW",1:"CANCELED")
"RTN","IBDFFT1",155,0)
 Q DNKA
"RTN","IBDFFT2")
0^183^B6562468
"RTN","IBDFFT2",1,0)
IBDFFT2 ;ALB/MAF - FORMS TRACKING ; JUL 6 1995@800
"RTN","IBDFFT2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFFT2",3,0)
 ;
"RTN","IBDFFT2",4,0)
 ;
"RTN","IBDFFT2",5,0)
HEADER ;  -- Set up header line for the division display
"RTN","IBDFFT2",6,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFFT2",7,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT2",8,0)
 S X=""
"RTN","IBDFFT2",9,0)
 S IBDFDIV(IBDFDV)=IBDCNT
"RTN","IBDFFT2",10,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP1
"RTN","IBDFFT2",11,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT2",12,0)
 S IBDVAL=IBDFDV
"RTN","IBDFFT2",13,0)
 S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR^VALM1(" ",X,1,IBDVAL1)
"RTN","IBDFFT2",14,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,IBDVAL1,25) D TMP1,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFFT2",15,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT2",16,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP1
"RTN","IBDFFT2",17,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFFT2",18,0)
 Q
"RTN","IBDFFT2",19,0)
TMP1 ; -- Set up TMP Array
"RTN","IBDFFT2",20,0)
 S ^TMP("FRM",$J,IBDCNT,0)=X,^TMP("FRM",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFFT2",21,0)
 S ^TMP("FRMIDX",$J,IBDCNT1)=VALMCNT
"RTN","IBDFFT2",22,0)
 Q
"RTN","IBDFFT2",23,0)
 ;
"RTN","IBDFFT2",24,0)
 ;
"RTN","IBDFFT2",25,0)
HEADER1 ;  -- Set up header line for the display
"RTN","IBDFFT2",26,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFFT2",27,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT2",28,0)
 S X=""
"RTN","IBDFFT2",29,0)
 I $D(VAUTG) S IBDFCLIN(IBDFGR,IBDFCL)=IBDCNT
"RTN","IBDFFT2",30,0)
 I '$D(VAUTG) S IBDFCLIN(IBDFDV,IBDFCL)=IBDCNT
"RTN","IBDFFT2",31,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP1
"RTN","IBDFFT2",32,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT2",33,0)
 S IBDVAL=IBDFCL
"RTN","IBDFFT2",34,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,1,25) D TMP1,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFFT2",35,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFFT2",36,0)
 Q
"RTN","IBDFFT2",37,0)
HEADER2 ;  -- Set up header line for the division display
"RTN","IBDFFT2",38,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFFT2",39,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT2",40,0)
 S X=""
"RTN","IBDFFT2",41,0)
 S IBDFGROP(IBDFDV,IBDFGR)=IBDCNT
"RTN","IBDFFT2",42,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP1
"RTN","IBDFFT2",43,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT2",44,0)
 ;S IBDVAL=$P(^IBD(357.99,IBDFGR,0),"^",1)
"RTN","IBDFFT2",45,0)
 S IBDVAL=IBDFGR
"RTN","IBDFFT2",46,0)
 S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR^VALM1(" ",X,1,IBDVAL1)
"RTN","IBDFFT2",47,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,IBDVAL1,25) D TMP1,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFFT2",48,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT2",49,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP1
"RTN","IBDFFT2",50,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFFT2",51,0)
 Q
"RTN","IBDFFT2",52,0)
NUL ; -- NULL MESSAGE
"RTN","IBDFFT2",53,0)
 S ^TMP("FRM",$J,1,0)=" ",^TMP("FRM",$J,2,0)="There are no encounter forms that meet this criteria.",^TMP("FRMIDX",$J,1)=1,^TMP("FRMIDX",$J,2)=2
"RTN","IBDFFT2",54,0)
 Q
"RTN","IBDFFT3")
0^378^B29953323
"RTN","IBDFFT3",1,0)
IBDFFT3 ;ALB/MAF - ROUTINE TO QUEUE FORMS TRACKING REPORT - 13 NOV 96
"RTN","IBDFFT3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFFT3",3,0)
 S IBDFDAT=$P($$HTE^XLFDT($H),":",1,2)
"RTN","IBDFFT3",4,0)
 N IBDCNT,IBDCNT1,IBDFTIME,IBFLAG,IBDFPAGE
"RTN","IBDFFT3",5,0)
 S (IBDCNT,IBDNKA,IBDFPAGE,IBDCNT1,VALMCNT)=0
"RTN","IBDFFT3",6,0)
 D @(IBDFL)^IBDFFT1
"RTN","IBDFFT3",7,0)
 N IBDFDV,IBDFCL,IBDNODE,IBDFTMP,IBDFPAT,IBDFPT,IBDFT
"RTN","IBDFFT3",8,0)
 S (IBDFDV,IBDFCL,IBDFPT)=0
"RTN","IBDFFT3",9,0)
 I $D(VAUTG) D
"RTN","IBDFFT3",10,0)
 .N IBDFGR
"RTN","IBDFFT3",11,0)
 .S IBDFGR=0
"RTN","IBDFFT3",12,0)
 .F IBDFDIV=0:0 S IBDFDV=$O(^TMP("FTRK",$J,IBDFDV)) Q:IBDFDV']""  D:'$D(IBDFDIV(IBDFDV)) HEADER^IBDFFT4 F IBDFGRO=0:0 S IBDFGR=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR)) Q:IBDFGR']""  D
"RTN","IBDFFT3",13,0)
 ..F IBDFCLI=0:0 S IBDFCL=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR,IBDFCL)) Q:IBDFCL']""  D:'$D(IBDFCLIN(IBDFGR,IBDFCL)) HEADER1^IBDFFT4 D
"RTN","IBDFFT3",14,0)
 ...F IBDFT=0:0 S IBDFT=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR,IBDFCL,IBDFT)) Q:'IBDFT  F IBDFPAT=0:0 S IBDFPT=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR,IBDFCL,IBDFT,IBDFPT)) Q:IBDFPT']""  D
"RTN","IBDFFT3",15,0)
 ....F IBDFIFN=0:0 S IBDFIFN=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR,IBDFCL,IBDFT,IBDFPT,IBDFIFN)) Q:'IBDFIFN  S IBDX="" F  S IBDX=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR,IBDFCL,IBDFT,IBDFPT,IBDFIFN,IBDX)) Q:IBDX=""  S IBDFTMP=^(IBDX) D PRINT
"RTN","IBDFFT3",16,0)
 I '$D(VAUTG) D
"RTN","IBDFFT3",17,0)
 .F IBDFDIV=0:0 S IBDFDV=$O(^TMP("FTRK",$J,IBDFDV)) Q:IBDFDV']""  D:'$D(IBDFDIV(IBDFDV)) HEADER^IBDFFT4 F IBDFCLI=0:0 S IBDFCL=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL)) Q:IBDFCL']""  D:'$D(IBDFCLIN(IBDFDV,IBDFCL)) HEADER1^IBDFFT4 D
"RTN","IBDFFT3",18,0)
 ..F IBDFT=0:0 S IBDFT=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFT)) Q:'IBDFT  F IBDFPAT=0:0 S IBDFPT=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFT,IBDFPT)) Q:IBDFPT']""  D
"RTN","IBDFFT3",19,0)
 ...F IBDFIFN=0:0 S IBDFIFN=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFT,IBDFPT,IBDFIFN)) Q:'IBDFIFN  S IBDX="" F  S IBDX=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFT,IBDFPT,IBDFIFN,IBDX)) Q:IBDX=""  S IBDFTMP=^(IBDX) D PRINT
"RTN","IBDFFT3",20,0)
 I '$D(^TMP("FRM",$J)) D NUL^IBDFFT4 Q
"RTN","IBDFFT3",21,0)
 ;Do statistics page right after printing list  D EN^IBDFST1
"RTN","IBDFFT3",22,0)
 D EN^IBDFST1
"RTN","IBDFFT3",23,0)
 Q
"RTN","IBDFFT3",24,0)
PRINT ;  -- Set up Listman array
"RTN","IBDFFT3",25,0)
 S DFN=$P(IBDFTMP,"^",3)
"RTN","IBDFFT3",26,0)
 I '$D(^TMP("CNT",$J,$S(IBDFDV]"":IBDFDV,1:"NOT SPECIFIED"),IBDFCL)) D
"RTN","IBDFFT3",27,0)
 .S ^TMP("CNT",$J,$S(IBDFDV]"":IBDFDV,1:"NOT SPECIFIED"),IBDFCL)="0^0^0^0^0^0"
"RTN","IBDFFT3",28,0)
 .I $D(VAUTG) I '$D(^TMP("COUNT",$J,$S(IBDFDV]"":IBDFDV,1:"NOT SPECIFIED"),IBDFGR,IBDFCL)) D
"RTN","IBDFFT3",29,0)
 ..S ^TMP("COUNT",$J,$S(IBDFDV]"":IBDFDV,1:"NOT SPECIFIED"),IBDFGR,IBDFCL)=1
"RTN","IBDFFT3",30,0)
 I $D(VAUTG) K IBDFLAG I $D(^TMP("COUNT",$J,IBDFCL,IBDFT,IBDFIFN)) I IBDFGR=^TMP("COUNT",$J,IBDFCL,IBDFT,IBDFIFN) D COUNT
"RTN","IBDFFT3",31,0)
 I $D(VAUTG) I '$D(^TMP("COUNT",$J,IBDFCL,IBDFT,IBDFIFN)) D COUNT
"RTN","IBDFFT3",32,0)
 I '$D(VAUTG) S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",1)=$P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",1)+1
"RTN","IBDFFT3",33,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFFT3",34,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT3",35,0)
 W !
"RTN","IBDFFT3",36,0)
 W $J(IBDCNT1_")",5)
"RTN","IBDFFT3",37,0)
 W ?7,$E($P($G(IBDFTMP),"^",2),1,8)
"RTN","IBDFFT3",38,0)
 S IBDFVAL=$P($G(IBDFTMP),"^",4) I IBDFVAL S DNKA=$$DNKA^IBDFFT1(DFN,IBDFVAL),IBDFVAL=$$FMTE^XLFDT(IBDFVAL,2)
"RTN","IBDFFT3",39,0)
 W ?17,$E(IBDFVAL,1,14)
"RTN","IBDFFT3",40,0)
 I $D(VAUTC)!($D(VAUTG)) S (IBDFVAL,IBDFN)=$P($G(IBDFTMP),"^",3) I IBDFVAL]"" S IBDFVAL=$P(^DPT(IBDFVAL,0),"^",1)
"RTN","IBDFFT3",41,0)
 I $D(VAUTN) S (IBDFVAL,IBDFN)=$P($G(IBDFTMP),"^",1) I IBDFVAL]"" S IBDFVAL=$P(^SC(IBDFVAL,0),"^",1)
"RTN","IBDFFT3",42,0)
 W ?34,$E(IBDFVAL,1,15)
"RTN","IBDFFT3",43,0)
 S IBDFVAL=$P($G(IBDFTMP),"^",6)
"RTN","IBDFFT3",44,0)
 I IBDFVAL]"" S IBDFVAL=$E(IBDFVAL,4,5)_"/"_$E(IBDFVAL,6,7)_"/"_$E(IBDFVAL,2,3) I '$D(VAUTG)!($D(VAUTG)&($D(IBDFLAG))) S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",2)=+($P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",2))+1
"RTN","IBDFFT3",45,0)
 W ?50,$E(IBDFVAL,1,8)
"RTN","IBDFFT3",46,0)
 S VAL=$P($G(IBDFTMP),"^",12)
"RTN","IBDFFT3",47,0)
 S IBDFVAL=$P($G(IBDFTMP),"^",7)
"RTN","IBDFFT3",48,0)
 I IBDFVAL]"" S IBDFVAL=$E(IBDFVAL,4,5)_"/"_$E(IBDFVAL,6,7)_"/"_$E(IBDFVAL,2,3) I '$D(VAUTG)!($D(VAUTG)&($D(IBDFLAG))) I VAL=2 S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",3)=+($P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",3))+1
"RTN","IBDFFT3",49,0)
 W ?61,$E(IBDFVAL,1,8)
"RTN","IBDFFT3",50,0)
 N IBDFXX
"RTN","IBDFFT3",51,0)
 S IBDFXX=$S(VAL=3:3,VAL=6:5,1:"")
"RTN","IBDFFT3",52,0)
 I IBDFXX]"" I '$D(VAUTG)!($D(VAUTG)&($D(IBDFLAG))) S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",IBDFXX)=$P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",IBDFXX)+1 S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",6)=$P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",6)+1
"RTN","IBDFFT3",53,0)
 S VAL=$S(DNKA:$P(DNKA,"^",2),VAL=1:"PRINTED",VAL=2:"SCANNED",VAL=3:"SCD/PCE",VAL=4:"SCD w/ER",VAL=5:"DENTRY",VAL=6:"DE to PCE",VAL=7:"DE w/ER",VAL=11:"PEND Pgs",VAL=12:"NO TRANS",20:"AVAIL DE",1:"NOT PRNT")
"RTN","IBDFFT3",54,0)
 I DNKA S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",7)=+($P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",7))+1
"RTN","IBDFFT3",55,0)
 W ?72,$E(VAL,1,8)
"RTN","IBDFFT3",56,0)
 S IBDFVAL=$S(DNKA:"",1:$$SCHSTAT^IBDFFT($P(IBDFTMP,"^",3),$P(IBDFTMP,"^",4)))
"RTN","IBDFFT3",57,0)
 W ?82,$E(IBDFVAL,1,12)
"RTN","IBDFFT3",58,0)
 S IBDFVAL=$S($P(IBDFTMP,"^",14):" Yes",1:" No")
"RTN","IBDFFT3",59,0)
 W ?96,$E(IBDFVAL,1,6)
"RTN","IBDFFT3",60,0)
 ;
"RTN","IBDFFT3",61,0)
 ;
"RTN","IBDFFT3",62,0)
TMP ; -- Set up TMP Array
"RTN","IBDFFT3",63,0)
 S ^TMP("FRM",$J,IBDCNT,0)=$$LOWER^VALM1(X),^TMP("FRM",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFFT3",64,0)
 S ^TMP("FRMIDX",$J,IBDCNT1)=VALMCNT_"^"_$P(IBDFTMP,"^",2)_"^"_$P(IBDFTMP,"^",3)_"^"_$P(IBDFTMP,"^",4)_"^"_$P(IBDFTMP,"^",6)_"^"_$P(IBDFTMP,"^",7)_"^"_$P(IBDFTMP,"^",12)
"RTN","IBDFFT3",65,0)
 D NOW^%DTC S IBDFTIME=% S X1=$S($P(IBDFTMP,"^",7):$P(IBDFTMP,"^",7),1:IBDFTIME),X2=$P(IBDFTMP,"^",4) D ^%DTC S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",4)=+($P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",4))+X
"RTN","IBDFFT3",66,0)
 Q
"RTN","IBDFFT3",67,0)
COUNT ;
"RTN","IBDFFT3",68,0)
 S ^TMP("COUNT",$J,IBDFCL,IBDFT,IBDFIFN)=IBDFGR,IBDFLAG=1
"RTN","IBDFFT3",69,0)
 S $P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",1)=$P(^TMP("CNT",$J,IBDFDV,IBDFCL),"^",1)+1
"RTN","IBDFFT3",70,0)
 Q
"RTN","IBDFFT4")
0^377^B9210507
"RTN","IBDFFT4",1,0)
IBDFFT4 ;ALB/MAF - FORMS TRACKING ; NOV 19 1996@800
"RTN","IBDFFT4",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFFT4",3,0)
 ;
"RTN","IBDFFT4",4,0)
 ;
"RTN","IBDFFT4",5,0)
HEADER ;  -- Set up header line for the division display
"RTN","IBDFFT4",6,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFFT4",7,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT4",8,0)
 ;S X=""
"RTN","IBDFFT4",9,0)
 D HDR S IBFLAG=1
"RTN","IBDFFT4",10,0)
  W !
"RTN","IBDFFT4",11,0)
 S IBDFDIV(IBDFDV)=IBDCNT
"RTN","IBDFFT4",12,0)
 W "   "
"RTN","IBDFFT4",13,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT4",14,0)
 S IBDVAL=IBDFDV
"RTN","IBDFFT4",15,0)
 S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR^VALM1(" ",X,1,IBDVAL1)
"RTN","IBDFFT4",16,0)
 W ?IBDVAL1,$E(IBDVAL,1,25)
"RTN","IBDFFT4",17,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT4",18,0)
 W "   "
"RTN","IBDFFT4",19,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFFT4",20,0)
 Q
"RTN","IBDFFT4",21,0)
TMP1 ; -- Set up TMP Array
"RTN","IBDFFT4",22,0)
 S ^TMP("FRM",$J,IBDCNT,0)=X,^TMP("FRM",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFFT4",23,0)
 S ^TMP("FRMIDX",$J,IBDCNT1)=VALMCNT
"RTN","IBDFFT4",24,0)
 Q
"RTN","IBDFFT4",25,0)
 ;
"RTN","IBDFFT4",26,0)
 ;
"RTN","IBDFFT4",27,0)
HEADER1 ;  -- Set up header line for the display
"RTN","IBDFFT4",28,0)
 D:'$D(IBFLAG) HDR I $D(IBFLAG) K IBFLAG
"RTN","IBDFFT4",29,0)
 I $D(VAUTG) D HEADER2^IBDFFT4
"RTN","IBDFFT4",30,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFFT4",31,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT4",32,0)
 ;S X=""
"RTN","IBDFFT4",33,0)
 W !
"RTN","IBDFFT4",34,0)
 I $D(VAUTG) S IBDFCLIN(IBDFGR,IBDFCL)=IBDCNT
"RTN","IBDFFT4",35,0)
 I '$D(VAUTG) S IBDFCLIN(IBDFDV,IBDFCL)=IBDCNT
"RTN","IBDFFT4",36,0)
 W "   "
"RTN","IBDFFT4",37,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT4",38,0)
 S IBDVAL=IBDFCL
"RTN","IBDFFT4",39,0)
 W $E(IBDVAL,1,25)
"RTN","IBDFFT4",40,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFFT4",41,0)
 Q
"RTN","IBDFFT4",42,0)
HEADER2 ;  -- Set up header line for the division display
"RTN","IBDFFT4",43,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFFT4",44,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT4",45,0)
 ;S X=""
"RTN","IBDFFT4",46,0)
 W !
"RTN","IBDFFT4",47,0)
 S IBDFGROP(IBDFDV,IBDFGR)=IBDCNT
"RTN","IBDFFT4",48,0)
 W "   "
"RTN","IBDFFT4",49,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT4",50,0)
 ;S IBDVAL=$P(^IBD(357.99,IBDFGR,0),"^",1)
"RTN","IBDFFT4",51,0)
 S IBDVAL=IBDFGR
"RTN","IBDFFT4",52,0)
 S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR^VALM1(" ",X,1,IBDVAL1)
"RTN","IBDFFT4",53,0)
 W ?IBDVAL1,$E(IBDVAL,1,25)
"RTN","IBDFFT4",54,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFFT4",55,0)
 W "   "
"RTN","IBDFFT4",56,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFFT4",57,0)
 Q
"RTN","IBDFFT4",58,0)
NUL ; -- NULL MESSAGE
"RTN","IBDFFT4",59,0)
 S ^TMP("FRM",$J,1,0)=" ",^TMP("FRM",$J,2,0)="There are no encounter forms that meet this criteria.",^TMP("FRMIDX",$J,1)=1,^TMP("FRMIDX",$J,2)=2
"RTN","IBDFFT4",60,0)
 Q
"RTN","IBDFFT4",61,0)
HDR ;  -- Report main heading
"RTN","IBDFFT4",62,0)
 S IBDFPAGE=IBDFPAGE+1
"RTN","IBDFFT4",63,0)
 W @IOF,"Encounter forms - printed; scanned (to PCE, w/ERrors); pending pages;",?90,IBDFDAT,?120,"PAGE ",IBDFPAGE
"RTN","IBDFFT4",64,0)
 W !,"data entry (to PCE,w/ERrors); error detected,not transmitted; not printed."
"RTN","IBDFFT4",65,0)
 W !
"RTN","IBDFFT4",66,0)
 W ?7,"FORM ID",?17,"APPT. D/T",?34,"PATIENT/CLINIC",?50,"PRINTED",?61,"SCANNED",?72,"STATUS",?82,"CHECK OUT",?96,"EDITED"
"RTN","IBDFFT4",67,0)
 Q
"RTN","IBDFFT4",68,0)
PH Q:$O(^UTILITY("VAS",$J,DGJTDV,DGJTPHY,DGJTPT))]""  Q:$O(^UTILITY("VAS",$J,DGJTDV,DGJTPHY,DGJTPT,DFN,IFN))]""
"RTN","IBDFFV")
0^184^B12061481
"RTN","IBDFFV",1,0)
IBDFFV ;ALB/CMR - AICS FORM VALIDATION ; NOV 22,1995
"RTN","IBDFFV",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFFV",3,0)
 ;
"RTN","IBDFFV",4,0)
 ; -- displays Form Definition values for validation
"RTN","IBDFFV",5,0)
 ;
"RTN","IBDFFV",6,0)
 N IBDFL,X,Y,I,POP,CALL
"RTN","IBDFFV",7,0)
 W !!,"AICS Form Validation Report",!!
"RTN","IBDFFV",8,0)
 S IBDFL=0 ;flag
"RTN","IBDFFV",9,0)
 D SORT G:IBDFL EXIT
"RTN","IBDFFV",10,0)
 D DEVICE G:IBDFL EXIT
"RTN","IBDFFV",11,0)
DQ ; -- entry point from task man
"RTN","IBDFFV",12,0)
 N IBDFL
"RTN","IBDFFV",13,0)
 K ^TMP($J,"IBFV"),^TMP($J,"IBDF","UC")
"RTN","IBDFFV",14,0)
 S IBDFL=0
"RTN","IBDFFV",15,0)
 D ^IBDFFV1
"RTN","IBDFFV",16,0)
 I '$D(^TMP($J,"IBFV")) U IO W $C(7),!,"No forms found!" G EXIT
"RTN","IBDFFV",17,0)
 D ^IBDFFV2 G EXIT:$G(IBDFOUT)
"RTN","IBDFFV",18,0)
 I $D(^TMP($J,"IBDF","UC")) D
"RTN","IBDFFV",19,0)
 .N SORT,FORM,CLIN,HEADER
"RTN","IBDFFV",20,0)
 .S SORT=$O(^TMP($J,"IBDF","UC","")) Q:SORT']""
"RTN","IBDFFV",21,0)
 .D HDR
"RTN","IBDFFV",22,0)
 .I SORT="F" S FORM="" F  S FORM=$O(^TMP($J,"IBDF","UC",SORT,FORM)) Q:FORM']""!($G(IBDFOUT))  D PG(2) Q:$G(IBDFOUT)  W !?5,FORM
"RTN","IBDFFV",23,0)
 .I SORT="C" S CLIN="" F  S CLIN=$O(^TMP($J,"IBDF","UC",SORT,CLIN)) Q:CLIN']""!($G(IBDFOUT))  D PG(5) Q:$G(IBDFOUT)  W !!,"CLINIC:  ",CLIN D
"RTN","IBDFFV",24,0)
 ..S FORM="" F  S FORM=$O(^TMP($J,"IBDF","UC",SORT,CLIN,FORM)) Q:FORM']""!($G(IBDFOUT))  D PG(2) Q:$G(IBDFOUT)  W !?5,FORM
"RTN","IBDFFV",25,0)
 .I SORT="D"!(SORT="G") S HEADER="" F  S HEADER=$O(^TMP($J,"IBDF","UC",SORT,HEADER)) Q:HEADER']""!($G(IBDFOUT))  D PG(7) Q:$G(IBDFOUT)  W !!,$S(SORT="G":"GROUP",1:"DIVISION"),":  ",HEADER D
"RTN","IBDFFV",26,0)
 ..S CLIN="" F  S CLIN=$O(^TMP($J,"IBDF","UC",SORT,HEADER,CLIN)) Q:CLIN']""!($G(IBDFOUT))  D PG(5) Q:$G(IBDFOUT)  W !!?5,"CLINIC:  ",CLIN D
"RTN","IBDFFV",27,0)
 ...S FORM="" F  S FORM=$O(^TMP($J,"IBDF","UC",SORT,HEADER,CLIN,FORM)) Q:FORM']""!($G(IBDFOUT))  D PG(2) Q:$G(IBDFOUT)  W !?10,FORM
"RTN","IBDFFV",28,0)
EXIT ; -- Clean up and quit
"RTN","IBDFFV",29,0)
 K ^TMP($J,"IBDF","UC"),^TMP($J,"IBFV")
"RTN","IBDFFV",30,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBDFFV",31,0)
 D ^%ZISC
"RTN","IBDFFV",32,0)
 K ZTSK,ZTDESC,ZTSAVE,ZTRTN,VAUTF,VAUTG,VAUTC,VAUTD,SORT,IBDFOUT
"RTN","IBDFFV",33,0)
 Q
"RTN","IBDFFV",34,0)
SORT ; -- determine sort criteria
"RTN","IBDFFV",35,0)
 S DIR(0)="S^1:FORM;2:CLINIC;3:GROUP;4:DIVISION",DIR("A")="Validate forms by" D ^DIR K DIR
"RTN","IBDFFV",36,0)
 I $D(DIRUT) S IBDFL=1 Q
"RTN","IBDFFV",37,0)
 S SORT=Y_U_Y(0),CALL=$S(Y=2:"CLIN",Y=4:"DIV",1:Y(0))
"RTN","IBDFFV",38,0)
 ; -- gather selections for sort chosen
"RTN","IBDFFV",39,0)
 D @CALL^IBDFUTL
"RTN","IBDFFV",40,0)
 Q
"RTN","IBDFFV",41,0)
DEVICE ; -- ask device
"RTN","IBDFFV",42,0)
 S %ZIS="MQ" D ^%ZIS I POP S IBDLF=1 Q
"RTN","IBDFFV",43,0)
 I $D(IO("Q")) S ZTRTN="DQ^IBDFFV",ZTDESC="AICS - Form Validation Report",ZTSAVE("VA*")="",ZTSAVE("SORT")="" D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS S IBDFL=1 Q
"RTN","IBDFFV",44,0)
 U IO
"RTN","IBDFFV",45,0)
 Q
"RTN","IBDFFV",46,0)
PG(LEN) ; -- check page length
"RTN","IBDFFV",47,0)
 ; -- LEN equal to length to check for (optional)...will default
"RTN","IBDFFV",48,0)
 I '$D(LEN) S LEN=2
"RTN","IBDFFV",49,0)
 Q:$Y+LEN<IOSL
"RTN","IBDFFV",50,0)
 I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR,DIRUT,DUOUT,DTOUT I 'Y S IBDFOUT=1 Q
"RTN","IBDFFV",51,0)
 W @IOF
"RTN","IBDFFV",52,0)
HDR ; -- write out uncompiled forms header
"RTN","IBDFFV",53,0)
 W !,$$CJ^XLFSTR("ENCOUNTER FORM VALIDATION",IOM)
"RTN","IBDFFV",54,0)
 W !,$$CJ^XLFSTR("REPORT OF UNCOMPILED FORMS",IOM)
"RTN","IBDFFV",55,0)
 W !!!,"Validation can only be performed on compiled forms.  To compile a form,",!,"you simply print it."
"RTN","IBDFFV",56,0)
 W !!!,"The following forms were found to be uncompiled:"
"RTN","IBDFFV",57,0)
 Q
"RTN","IBDFFV1")
0^185^B4555363
"RTN","IBDFFV1",1,0)
IBDFFV1 ;ALB/CMR - AICS FORM VALIDATION ; NOV 24,1995
"RTN","IBDFFV1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFFV1",3,0)
 ;
"RTN","IBDFFV1",4,0)
 ; -- entry point from IBDFFV
"RTN","IBDFFV1",5,0)
 ; -- called to set up ^TMP with forms to be printed
"RTN","IBDFFV1",6,0)
 ;
"RTN","IBDFFV1",7,0)
 Q:('$D(VAUTD)&('$D(VAUTG))&('$D(VAUTC))&('$D(VAUTF)))!('$D(SORT))
"RTN","IBDFFV1",8,0)
 D FORM:+SORT=1,CLINIC:+SORT=2,GROUP:+SORT=3,DIV:+SORT=4
"RTN","IBDFFV1",9,0)
 Q
"RTN","IBDFFV1",10,0)
FORM ; -- $O through forms
"RTN","IBDFFV1",11,0)
 ;
"RTN","IBDFFV1",12,0)
 N FRM,FORM
"RTN","IBDFFV1",13,0)
 Q:'$D(VAUTF)
"RTN","IBDFFV1",14,0)
 S FRM=0 F  S FRM=$S(VAUTF:$O(^IBE(357,FRM)),1:$O(VAUTF(FRM))) Q:'FRM  S FORM=$P($G(^IBE(357,FRM,0)),U) I FORM]"" S ^TMP($J,"IBFV","F",FORM,FRM)=""
"RTN","IBDFFV1",15,0)
 Q
"RTN","IBDFFV1",16,0)
CLINIC ; -- $O through clinics
"RTN","IBDFFV1",17,0)
 ;
"RTN","IBDFFV1",18,0)
 N CLIN
"RTN","IBDFFV1",19,0)
 Q:'$D(VAUTC)
"RTN","IBDFFV1",20,0)
 S CLIN=0 F  S CLIN=$S(VAUTC:$O(^SD(409.95,"B",CLIN)),1:$O(VAUTC(CLIN))) Q:'CLIN  D CLIN
"RTN","IBDFFV1",21,0)
 Q
"RTN","IBDFFV1",22,0)
GROUP ; -- $O through groups
"RTN","IBDFFV1",23,0)
 ;
"RTN","IBDFFV1",24,0)
 N GRP,GROUP,CLIN
"RTN","IBDFFV1",25,0)
 Q:'$D(VAUTG)
"RTN","IBDFFV1",26,0)
 S GRP=0 F  S GRP=$S(VAUTG:$O(^IBD(357.99,GRP)),1:$O(VAUTG(GRP))) Q:'GRP  D
"RTN","IBDFFV1",27,0)
 .S GROUP=$P($G(^IBD(357.99,GRP,0)),U)
"RTN","IBDFFV1",28,0)
 .; -- find all clinics associated with group
"RTN","IBDFFV1",29,0)
 .S CLIN=0 F  S CLIN=$O(^IBD(357.99,GRP,10,"B",CLIN)) Q:'CLIN  D CLIN
"RTN","IBDFFV1",30,0)
 Q
"RTN","IBDFFV1",31,0)
DIV ; -- $O through divisions
"RTN","IBDFFV1",32,0)
 ;
"RTN","IBDFFV1",33,0)
 N CLIN,DIV
"RTN","IBDFFV1",34,0)
 Q:'$D(VAUTD)
"RTN","IBDFFV1",35,0)
 S CLIN="" F  S CLIN=$O(^SD(409.95,"B",CLIN)) Q:'CLIN  D
"RTN","IBDFFV1",36,0)
 .S DIV=$P($G(^SC(CLIN,0)),U,15) Q:'DIV
"RTN","IBDFFV1",37,0)
 .; -- quit if division for clinic is not a chosen division
"RTN","IBDFFV1",38,0)
 .I 'VAUTD,'$D(VAUTD(DIV)) Q
"RTN","IBDFFV1",39,0)
 .S:+DIV DIV=$P($G(^DG(40.8,+DIV,0)),U) Q:DIV']""
"RTN","IBDFFV1",40,0)
 .D CLIN
"RTN","IBDFFV1",41,0)
 Q
"RTN","IBDFFV1",42,0)
CLIN ; -- set up TMP nodes
"RTN","IBDFFV1",43,0)
 N SETUP,NAME
"RTN","IBDFFV1",44,0)
 S SETUP=$O(^SD(409.95,"B",CLIN,"")) Q:'SETUP
"RTN","IBDFFV1",45,0)
 S NAME=$P($G(^SC(CLIN,0)),U) Q:NAME=""
"RTN","IBDFFV1",46,0)
 I +SORT=2 S ^TMP($J,"IBFV","C",NAME,SETUP)="" Q
"RTN","IBDFFV1",47,0)
 I +SORT=3 S ^TMP($J,"IBFV","G",GROUP,NAME,SETUP)="" Q
"RTN","IBDFFV1",48,0)
 I +SORT=4 S ^TMP($J,"IBFV","D",DIV,NAME,SETUP)="" Q
"RTN","IBDFFV1",49,0)
 Q
"RTN","IBDFFV2")
0^186^B6093684
"RTN","IBDFFV2",1,0)
IBDFFV2 ;ALB/CMR - AICS FORM VALIDATION ; NOV 27,1995
"RTN","IBDFFV2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFFV2",3,0)
 ;
"RTN","IBDFFV2",4,0)
 ; -- entry point from IBDFFV
"RTN","IBDFFV2",5,0)
 ; -- called to print out data validation
"RTN","IBDFFV2",6,0)
 ;
"RTN","IBDFFV2",7,0)
 Q:'$D(^TMP($J,"IBFV"))
"RTN","IBDFFV2",8,0)
 W:IOST["C-" @IOF
"RTN","IBDFFV2",9,0)
 N SORT,DOT
"RTN","IBDFFV2",10,0)
 S DOT=".",$P(DOT,".",35)=".",SORT=$O(^TMP($J,"IBFV","")) Q:SORT']""
"RTN","IBDFFV2",11,0)
 ; -- if sorted by form, gather forms to print
"RTN","IBDFFV2",12,0)
 I SORT="F" N FORM,TYPE,FRM,WRITE D  Q
"RTN","IBDFFV2",13,0)
 .S TYPE=$P($T(TYPE+1),";;",2)
"RTN","IBDFFV2",14,0)
 .S FORM="" F  S FORM=$O(^TMP($J,"IBFV",SORT,FORM)) Q:FORM']""!($G(IBDFOUT))  S FRM=0 F  S FRM=$O(^TMP($J,"IBFV",SORT,FORM,FRM)) Q:'FRM!($G(IBDFOUT))  D PRINT^IBDFFV3(FRM,FORM) I '$G(WRITE) D
"RTN","IBDFFV2",15,0)
 ..S ^TMP($J,"IBDF","UC",SORT,FORM)=""
"RTN","IBDFFV2",16,0)
 ; -- if sorted by clinic, gather clinics
"RTN","IBDFFV2",17,0)
 I SORT="C" N CLIN,SETUP,CL,DG D  Q
"RTN","IBDFFV2",18,0)
 .S CLIN="" F  S CLIN=$O(^TMP($J,"IBFV",SORT,CLIN)) Q:CLIN']""!($G(IBDFOUT))  S CL="CLINIC:  .."_DOT_"  "_CLIN,DG="",SETUP=0 F  S SETUP=$O(^TMP($J,"IBFV",SORT,CLIN,SETUP)) Q:'SETUP!($G(IBDFOUT))  D CLIN
"RTN","IBDFFV2",19,0)
 ; -- if sorted by group, gather groups or divisions and clinics
"RTN","IBDFFV2",20,0)
 I SORT="G"!(SORT="D") N HEADER,CLIN,SETUP,CL,DG D  Q
"RTN","IBDFFV2",21,0)
 .S HEADER="" F  S HEADER=$O(^TMP($J,"IBFV",SORT,HEADER)) Q:HEADER']""!($G(IBDFOUT))  D
"RTN","IBDFFV2",22,0)
 ..S CLIN="" F  S CLIN=$O(^TMP($J,"IBFV",SORT,HEADER,CLIN)) Q:CLIN']""!($G(IBDFOUT))  D
"RTN","IBDFFV2",23,0)
 ...S DG=$S(SORT="G":"GROUP:  ...",SORT="D":"DIVISION:  ",1:"")
"RTN","IBDFFV2",24,0)
 ...I DG]"" S DG=DG_DOT_"  "_HEADER
"RTN","IBDFFV2",25,0)
 ...S CL="CLINIC:  .."_DOT_"  "_CLIN
"RTN","IBDFFV2",26,0)
 ...S SETUP=0 F  S SETUP=$O(^TMP($J,"IBFV",SORT,HEADER,CLIN,SETUP)) Q:'SETUP!($G(IBDFOUT))  D CLIN
"RTN","IBDFFV2",27,0)
 Q
"RTN","IBDFFV2",28,0)
CLIN ; -- gather forms for clinics
"RTN","IBDFFV2",29,0)
 N NODE,TYPE,FRM,CHECK,WRITE,NAME
"RTN","IBDFFV2",30,0)
 S NODE=$G(^SD(409.95,SETUP,0))
"RTN","IBDFFV2",31,0)
 F I=2:1:9 S FRM=$P(NODE,U,I) I FRM D PRINT^IBDFFV3(FRM,.NAME,I,CL,DG) Q:$G(IBDFOUT)  I '$D(WRITE) D
"RTN","IBDFFV2",32,0)
 .I SORT="C" S ^TMP($J,"IBDF","UC",SORT,CLIN,NAME)="" Q
"RTN","IBDFFV2",33,0)
 .S ^TMP($J,"IBDF","UC",SORT,HEADER,CLIN,NAME)=""
"RTN","IBDFFV2",34,0)
 Q
"RTN","IBDFFV3")
0^187^B14617775
"RTN","IBDFFV3",1,0)
IBDFFV3 ;;ALB/CMR - AICS FORM VALIDATION ; FEB 23, 1996
"RTN","IBDFFV3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFFV3",3,0)
PRINT(FRM,NAME,TYPE,CL,DG) ; -- print validation for each form
"RTN","IBDFFV3",4,0)
 ; -- FRM = ien file 357
"RTN","IBDFFV3",5,0)
 ; -- NAME (optional) name of form
"RTN","IBDFFV3",6,0)
 ; -- TYPE (optional) type of form where:
"RTN","IBDFFV3",7,0)
 ; --    1 = FORM
"RTN","IBDFFV3",8,0)
 ; --    2 = BASIC DEFAULT FORM
"RTN","IBDFFV3",9,0)
 ; --    3 = SUPPLEMENTAL FORM - PATIENT WITH PRIOR VISITS
"RTN","IBDFFV3",10,0)
 ; --    4 = SUPPLEMENTAL FORM - FIRST TIME PATIENT
"RTN","IBDFFV3",11,0)
 ; --    5 = FORM WITH NO PRE-PRINTED PATIENT DATA
"RTN","IBDFFV3",12,0)
 ; --    6 = SUPPLEMENTAL FORM - ALL PATIENTS
"RTN","IBDFFV3",13,0)
 ; --    7 = RESERVED FOR FUTURE USE
"RTN","IBDFFV3",14,0)
 ; --    8 = SUPPLEMENTAL FORM - ALL PATIENTS
"RTN","IBDFFV3",15,0)
 ; --    9 = SUPPLEMENTAL FORM - ALL PATIENTS
"RTN","IBDFFV3",16,0)
 ; -- CL (optional) clinic header
"RTN","IBDFFV3",17,0)
 ; -- DG (optional) group or division header
"RTN","IBDFFV3",18,0)
 N IEN,BUB,NODE,PG,IBDFFVAL,IBID,IBLABEL,PI,CK,CODE,GROUP
"RTN","IBDFFV3",19,0)
 K WRITE
"RTN","IBDFFV3",20,0)
 Q:'FRM!($G(^IBE(357,FRM,0))']"")
"RTN","IBDFFV3",21,0)
 S PG=0
"RTN","IBDFFV3",22,0)
 I $G(NAME)']"" S NAME=$P(^IBE(357,FRM,0),U)
"RTN","IBDFFV3",23,0)
 I '$G(TYPE) S TYPE=1
"RTN","IBDFFV3",24,0)
 S IEN=$P(^IBE(357,FRM,0),U,13) Q:'IEN!('$D(^IBD(357.95,+IEN)))
"RTN","IBDFFV3",25,0)
 W $$CJ^XLFSTR("ENCOUNTER FORM VALIDATION",IOM),!
"RTN","IBDFFV3",26,0)
 I $G(DG)]"" W !,DG
"RTN","IBDFFV3",27,0)
 I $G(CL)]"" W !,CL
"RTN","IBDFFV3",28,0)
 W !,$P($T(TYPE+TYPE),";;",2),"  ",NAME
"RTN","IBDFFV3",29,0)
 K BUB,HP
"RTN","IBDFFV3",30,0)
 ; -- $o through all bubbles
"RTN","IBDFFV3",31,0)
 S BUB=0,GROUP="" F  S BUB=$O(^IBD(357.95,IEN,1,BUB)) Q:'BUB!($G(IBDFOUT))  S NODE=$G(^IBD(357.95,IEN,1,BUB,0)) I NODE]"" D DISP
"RTN","IBDFFV3",32,0)
 K BUB
"RTN","IBDFFV3",33,0)
 S HP=0 F  S HP=$O(^IBD(357.95,IEN,2,HP)) Q:'HP!($G(IBDFOUT))  S NODE=$G(^IBD(357.95,IEN,2,HP,0)) I NODE]"" D DISP
"RTN","IBDFFV3",34,0)
 Q:$G(IBDFOUT)
"RTN","IBDFFV3",35,0)
 D PAGE(100) ;force final page footers
"RTN","IBDFFV3",36,0)
 Q
"RTN","IBDFFV3",37,0)
DISP ; -- display data for each element
"RTN","IBDFFV3",38,0)
 N IBINACT
"RTN","IBDFFV3",39,0)
 N ERR
"RTN","IBDFFV3",40,0)
 ; -- write out group subheader if different from previous
"RTN","IBDFFV3",41,0)
 I GROUP'=$P(NODE,U,5) S GROUP=$P(NODE,U,5) D PAGE(8) Q:$G(IBDFOUT)  I '$G(CK) W !!,GROUP,!
"RTN","IBDFFV3",42,0)
 ; -- determine errors up front
"RTN","IBDFFV3",43,0)
 S PI=$S($D(BUB):$P(NODE,U,3),$D(HP):$P(NODE,U,4),1:"") I 'PI S ERR("PI")=""
"RTN","IBDFFV3",44,0)
 S DQ=$P(NODE,U,10) I 'DQ,$P($G(^IBE(357.6,+PI,0)),U,19) S ERR("DQ")=""
"RTN","IBDFFV3",45,0)
 K IBID,IBLABEL,IBINACT
"RTN","IBDFFV3",46,0)
 I $D(BUB) S X=$P(NODE,U,4) I X,PI X $G(^IBE(357.6,PI,19)) I $G(IBLABEL)']"" S ERR("CODE")=""
"RTN","IBDFFV3",47,0)
 I $G(IBINACT) S ERR("INACT")=""
"RTN","IBDFFV3",48,0)
 D PAGE(5) Q:$G(IBDFOUT)
"RTN","IBDFFV3",49,0)
 ; -- write error flag followed by displayed text
"RTN","IBDFFV3",50,0)
 W ! W:$D(ERR) "*" W ?2,"[ ] ",$S($D(BUB):$P(NODE,U,8),$D(HP):$P(NODE,U,9),1:"") S WRITE=1
"RTN","IBDFFV3",51,0)
 ; -- if bubble is dynamic s code accordingly
"RTN","IBDFFV3",52,0)
 I $D(BUB),($G(IBID)']""),($P(NODE,U,11)) S IBID="DYNAMIC",IBLABEL="Value determined at print time"
"RTN","IBDFFV3",53,0)
 I $D(HP) S IBID="HAND PRINT",IBLABEL="Value determined at scan time"
"RTN","IBDFFV3",54,0)
 ; -- write return values
"RTN","IBDFFV3",55,0)
 I $G(IBID)]"" W !,?6,IBID,?22,$G(IBLABEL)
"RTN","IBDFFV3",56,0)
 ; -- write data qualifiers
"RTN","IBDFFV3",57,0)
 I DQ]"" W !?6,"DATA QUALIFIER",?22,$P($G(^IBD(357.98,DQ,0)),"^")
"RTN","IBDFFV3",58,0)
 I $D(HP),($P(NODE,U,17)) W !?6,"DATA ELEMENT",?22,$P($G(^IBE(359.1,$P(NODE,U,17),0)),U)
"RTN","IBDFFV3",59,0)
 ; -- process errors
"RTN","IBDFFV3",60,0)
 I $D(ERR) D ERROR
"RTN","IBDFFV3",61,0)
 Q
"RTN","IBDFFV3",62,0)
ERROR ;gathers errors to write
"RTN","IBDFFV3",63,0)
 I '$D(ERR) Q
"RTN","IBDFFV3",64,0)
 N CNT
"RTN","IBDFFV3",65,0)
 I $D(ERR("PI")) D ERRORS("*** Package Interface is missing ***")
"RTN","IBDFFV3",66,0)
 I $D(ERR("DQ")) D ERRORS("*** Data Qualifier is missing ***")
"RTN","IBDFFV3",67,0)
 I $D(ERR("CODE")) D ERRORS("*** Invalid "_GROUP_" ***")
"RTN","IBDFFV3",68,0)
 I $D(ERR("INACT")) D ERRORS("*** Inactive "_GROUP_" ***")
"RTN","IBDFFV3",69,0)
 Q
"RTN","IBDFFV3",70,0)
ERRORS(ERR) ; -- writes out errors
"RTN","IBDFFV3",71,0)
 I $G(CNT) W !
"RTN","IBDFFV3",72,0)
 I '$G(CNT) W !?6,"ERRORS" S CNT=1
"RTN","IBDFFV3",73,0)
 W ?22,ERR
"RTN","IBDFFV3",74,0)
 Q
"RTN","IBDFFV3",75,0)
PAGE(PL) ; -- check page length
"RTN","IBDFFV3",76,0)
 ; -- adds two lines to account for footer
"RTN","IBDFFV3",77,0)
 K CK
"RTN","IBDFFV3",78,0)
 I +PL S PL=PL+2
"RTN","IBDFFV3",79,0)
 I '+PL S PL=5
"RTN","IBDFFV3",80,0)
 Q:$Y+PL<IOSL
"RTN","IBDFFV3",81,0)
 S PG=PG+1,CK=1
"RTN","IBDFFV3",82,0)
 W !!,$$CJ^XLFSTR(PG,IOM)
"RTN","IBDFFV3",83,0)
 I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR,DIRUT,DUOUT,DTOUT I 'Y S IBDFOUT=1 Q
"RTN","IBDFFV3",84,0)
 W @IOF
"RTN","IBDFFV3",85,0)
 I +PL<100 D
"RTN","IBDFFV3",86,0)
 .W !,$$CJ^XLFSTR("ENCOUNTER FORM VALIDATION",IOM)
"RTN","IBDFFV3",87,0)
 .W !!,$P($T(TYPE+TYPE),";;",2),"  ",NAME
"RTN","IBDFFV3",88,0)
 .W !!,GROUP,!
"RTN","IBDFFV3",89,0)
 Q
"RTN","IBDFFV3",90,0)
TYPE ; -- list of form types
"RTN","IBDFFV3",91,0)
 ;;FORM:.........................................
"RTN","IBDFFV3",92,0)
 ;;BASIC DEFAULT FORM:  .........................
"RTN","IBDFFV3",93,0)
 ;;SUPPLEMENTAL FORM - PATIENT WITH PRIOR VISITS:
"RTN","IBDFFV3",94,0)
 ;;SUPPLEMENTAL FORM - FIRST TIME PATIENT:  .....
"RTN","IBDFFV3",95,0)
 ;;FORM WITH NO PRE-PRINTED PATIENT DATA:  ......
"RTN","IBDFFV3",96,0)
 ;;SUPPLEMENTAL FORM - ALL PATIENTS:  ...........
"RTN","IBDFFV3",97,0)
 ;;RESERVED FOR FUTURE USE:  ....................
"RTN","IBDFFV3",98,0)
 ;;SUPPLEMENTAL FORM - ALL PATIENTS:.............
"RTN","IBDFFV3",99,0)
 ;;SUPPLEMENTAL FORM - ALL PATIENTS:............. 
"RTN","IBDFGRP")
0^188^B21848520
"RTN","IBDFGRP",1,0)
IBDFGRP ;ALB/MAF - GROUP COPY - 7/25/95
"RTN","IBDFGRP",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFGRP",3,0)
 N NEWLIST,NEWBLOCK
"RTN","IBDFGRP",4,0)
 S NEWLIST=IBLIST,NEWBLOCK=IBBLK
"RTN","IBDFGRP",5,0)
 N IBBLK,TOP,BOT,IBLIST,IBFORM
"RTN","IBDFGRP",6,0)
 S VALMBCK="R"
"RTN","IBDFGRP",7,0)
 S IBBLK=$$SELECT2()
"RTN","IBDFGRP",8,0)
 Q:'IBBLK
"RTN","IBDFGRP",9,0)
 ;
"RTN","IBDFGRP",10,0)
 S DIC("S")="I $P(^(0),U,11)=$P($G(^IBE(357.2,+NEWLIST,0)),U,11)" D SELECT^IBDF3 K DIC
"RTN","IBDFGRP",11,0)
 ;
"RTN","IBDFGRP",12,0)
 I '$G(IBLIST) W !!,"Block does not contain same type of selection list '"_$P($G(^IBE(357.6,+$P($G(^IBE(357.2,+NEWLIST,0)),U,11),0)),U)_"'.",! D PAUSE^IBDFU5
"RTN","IBDFGRP",13,0)
 ;
"RTN","IBDFGRP",14,0)
 I IBLIST D EN^VALM("IBDF QUICK GRP COPY")
"RTN","IBDFGRP",15,0)
 Q
"RTN","IBDFGRP",16,0)
 ;
"RTN","IBDFGRP",17,0)
INIT ; -- init variables and list array
"RTN","IBDFGRP",18,0)
 N IBDCNT,IBDCNT1
"RTN","IBDFGRP",19,0)
 K ^TMP("GRP",$J),^TMP("GRPIDX",$J),IBDFHDR D KILL^VALM10()
"RTN","IBDFGRP",20,0)
 ;
"RTN","IBDFGRP",21,0)
 ;  -- Set up arrays for new and old selection list definitions in
"RTN","IBDFGRP",22,0)
 ;     in file 357.2.  Used to match data with the right subcolum #
"RTN","IBDFGRP",23,0)
 ;     when copying selection lists to a form.
"RTN","IBDFGRP",24,0)
 ;
"RTN","IBDFGRP",25,0)
 ;        - IBDFNEW(SUBCOLUM #) = TYPE OF DATA ..5th piece  (text or code)
"RTN","IBDFGRP",26,0)
 ;        - IBDFOLD(SUBCOLUM #) = TYPE OF DATA..5th piece  (text or code)
"RTN","IBDFGRP",27,0)
 D
"RTN","IBDFGRP",28,0)
 .N K,NODE
"RTN","IBDFGRP",29,0)
 .S (IBDFNEW,IBDFOLD)=0
"RTN","IBDFGRP",30,0)
 .I $D(IBLIST) S K=0 D
"RTN","IBDFGRP",31,0)
 ..F  S K=$O(^IBE(357.2,IBLIST,2,K)) Q:'K  S NODE=$G(^IBE(357.2,IBLIST,2,K,0)),IBDFOLD(+NODE)=+$P(NODE,"^",5)
"RTN","IBDFGRP",32,0)
 ..Q
"RTN","IBDFGRP",33,0)
 .I $D(NEWLIST) S NODE="",K=0 D
"RTN","IBDFGRP",34,0)
 ..F  S K=$O(^IBE(357.2,NEWLIST,2,K)) Q:'K  S NODE=$G(^IBE(357.2,NEWLIST,2,K,0)),IBDFNEW(+NODE)=+$P(NODE,"^",5)
"RTN","IBDFGRP",35,0)
 ..Q
"RTN","IBDFGRP",36,0)
 S (IBDCNT,IBDCNT1,VALMCNT)=0
"RTN","IBDFGRP",37,0)
 S IBDLSTNM=$P(^IBE(357.2,IBLIST,0),"^",1) D INTER D
"RTN","IBDFGRP",38,0)
 .S IBLSNODE=$G(^IBE(357.2,IBLIST,0))
"RTN","IBDFGRP",39,0)
 .I $D(IBDFAR) F IBDFX=0:0 S IBDFX=$O(@(IBDFAR_"("_IBDFX_")")) Q:'IBDFX  S IBDFARR=$G(@(IBDFAR_"("_IBDFX_")")) D:$P(IBDFARR,"^",1)="" HEADER D:$P(IBDFARR,"^",1)]"" SETARR
"RTN","IBDFGRP",40,0)
 Q:$$LSTDESCR^IBDFU1(.IBLIST) 1
"RTN","IBDFGRP",41,0)
 S IBRTN=IBLIST("RTN")
"RTN","IBDFGRP",42,0)
 D RTNDSCR^IBDFU1B(.IBRTN)
"RTN","IBDFGRP",43,0)
 Q
"RTN","IBDFGRP",44,0)
 ;
"RTN","IBDFGRP",45,0)
SETARR ;  -- Set up Listman array
"RTN","IBDFGRP",46,0)
 N IBDFNODE
"RTN","IBDFGRP",47,0)
 S IBDFNODE=IBDFARR
"RTN","IBDFGRP",48,0)
 S IBDFSEL=$P(IBDFNODE,"^",4)
"RTN","IBDFGRP",49,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFGRP",50,0)
 S X=""
"RTN","IBDFGRP",51,0)
 S IBDFVAL=$P(IBDFNODE,"^",1)
"RTN","IBDFGRP",52,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,7,7)
"RTN","IBDFGRP",53,0)
 S IBDFVAL=$P(IBDFNODE,"^",6)
"RTN","IBDFGRP",54,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,16,5)
"RTN","IBDFGRP",55,0)
 S IBDFVAL=$P(IBDFNODE,"^",2)
"RTN","IBDFGRP",56,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,23,40)
"RTN","IBDFGRP",57,0)
 S IBDFVAL=$P(^IBE(357.4,$P(IBDFNODE,"^",5),0),"^",1)
"RTN","IBDFGRP",58,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,64,15)
"RTN","IBDFGRP",59,0)
TMP ; -- Set up TMP Array
"RTN","IBDFGRP",60,0)
 S ^TMP("GRP",$J,IBDCNT,0)=X,^TMP("GRP",$J,"IDX",VALMCNT,IBDCNT1)=IBDFSEL
"RTN","IBDFGRP",61,0)
 S ^TMP("GRPIDX",$J,IBDCNT1)=VALMCNT_"^"_$P(IBDFARR,"^",3)_"^"_$P(IBDFARR,"^",4)_"^"_$P(IBDFARR,"^",5) ;_"^"_IBDFX_"^"_$P(IBDFTMP,"^",4)_"^"_$P(IBDFTMP,"^",5)_"^"_$P(IBDFTMP,"^",1)_"^"_$P(IBDFTMP,"^",2)
"RTN","IBDFGRP",62,0)
 Q
"RTN","IBDFGRP",63,0)
HEADER ;  -- Set up header line for the display
"RTN","IBDFGRP",64,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFGRP",65,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFGRP",66,0)
 S X=""
"RTN","IBDFGRP",67,0)
 S IBDVAL=$S($P(IBDFARR,"^",2)]"":$P(IBDFARR,"^",2),1:"BLANK")
"RTN","IBDFGRP",68,0)
 S IBDFHDR(IBDVAL)=IBDCNT1_"^"_$P(IBDFARR,"^",5)
"RTN","IBDFGRP",69,0)
 S IBDFSEL=$P(IBDFARR,"^",5)
"RTN","IBDFGRP",70,0)
 S X=$$SETSTR^VALM1(IBDCNT1_")",X,1,5) D TMP
"RTN","IBDFGRP",71,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFGRP",72,0)
 S IBDVAL=$P(IBDFARR,"^",6)
"RTN","IBDFGRP",73,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,16,5)
"RTN","IBDFGRP",74,0)
 S IBDVAL=$P(IBDFARR,"^",2)
"RTN","IBDFGRP",75,0)
 S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR^VALM1(" ",X,22,IBDVAL1)
"RTN","IBDFGRP",76,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,IBDVAL1,25) D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFGRP",77,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFGRP",78,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP
"RTN","IBDFGRP",79,0)
 Q
"RTN","IBDFGRP",80,0)
INTER ;  -- Find Package interface for selection list
"RTN","IBDFGRP",81,0)
 K IBARRY S IBDFAR="IBARRY",IBDFINT=$P($G(^IBE(357.2,IBLIST,0)),"^",11),IBDFINT(1)=$P(^IBE(357.6,IBDFINT,0),"^",1) D GETLST^IBDFQSL2(IBFORM,IBBLK,IBLIST,.IBDFINT,"IBARRY",1)
"RTN","IBDFGRP",82,0)
 Q
"RTN","IBDFGRP",83,0)
HELP ; -- help code
"RTN","IBDFGRP",84,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFGRP",85,0)
 Q
"RTN","IBDFGRP",86,0)
 ;
"RTN","IBDFGRP",87,0)
EXIT ; -- exit code
"RTN","IBDFGRP",88,0)
 K IBARRY,IBDFAR,IBDFARR,IBDFHDR,IBDFINT,IBDFSEL,IBDFVAL,IBDFX,IBDLSTNM,IBDVAL,IBDVAL1,IBLIST,IBRTN,IEN,IBLSNODE,DIC,IBGRP,NODE,IBDFNEW,IBDFOLD
"RTN","IBDFGRP",89,0)
 K ^TMP("SEL",$J),^TMP("SELIDX",$J)
"RTN","IBDFGRP",90,0)
 Q
"RTN","IBDFGRP",91,0)
 ;
"RTN","IBDFGRP",92,0)
EXPND ; -- expand code
"RTN","IBDFGRP",93,0)
 Q
"RTN","IBDFGRP",94,0)
 ;
"RTN","IBDFGRP",95,0)
GRPCOPY ;  -- COPY GROUP
"RTN","IBDFGRP",96,0)
 N IBDVALM,GRP,VALMY,FROM,TO,IBDFCPYE
"RTN","IBDFGRP",97,0)
 S IBDFCPYF=1
"RTN","IBDFGRP",98,0)
 S (FROM,TO)="357.4"
"RTN","IBDFGRP",99,0)
 S VALMBCK=""
"RTN","IBDFGRP",100,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBDFGRP",101,0)
 I $O(VALMY(0)) D
"RTN","IBDFGRP",102,0)
 .S IBDVALM=0
"RTN","IBDFGRP",103,0)
 .D FULL^VALM1 S VALMBCK="R"
"RTN","IBDFGRP",104,0)
 .F IBDVALM=0:0 S IBDVALM=$O(VALMY(IBDVALM)) Q:'IBDVALM  S (DA,GRP)=$P($G(^TMP("GRPIDX",$J,IBDVALM)),"^",4) D COPYGRP^IBDFU2A(GRP,IBLIST,NEWLIST,NEWBLOCK,FROM,TO)
"RTN","IBDFGRP",105,0)
 K IBDFCPYF
"RTN","IBDFGRP",106,0)
 Q
"RTN","IBDFGRP",107,0)
SELECT2() ;allows the user to select a form, then a block from it
"RTN","IBDFGRP",108,0)
 S IBBLK=""
"RTN","IBDFGRP",109,0)
 S IBFORM=$$SLCTFORM^IBDFU4(0)
"RTN","IBDFGRP",110,0)
 I IBFORM D
"RTN","IBDFGRP",111,0)
 .W !!,"NOW CHOOSE THE BLOCK TO COPY!",!
"RTN","IBDFGRP",112,0)
 .S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,IOSL)
"RTN","IBDFGRP",113,0)
 Q IBBLK
"RTN","IBDFHLP")
0^189^B7021849
"RTN","IBDFHLP",1,0)
IBDFHLP ;MAF/ALB - HELP CODE FOR SPECIAL INSTRUCTIONS  ; 06-OCT-1994
"RTN","IBDFHLP",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFHLP",3,0)
EN ; -- main entry point for IBDF EF HELP SPEC INSTR.
"RTN","IBDFHLP",4,0)
 D EN^VALM("IBDF EF HELP SPEC INSTR.")
"RTN","IBDFHLP",5,0)
 Q
"RTN","IBDFHLP",6,0)
 ;
"RTN","IBDFHLP",7,0)
HDR ; -- header code
"RTN","IBDFHLP",8,0)
 Q
"RTN","IBDFHLP",9,0)
 ;
"RTN","IBDFHLP",10,0)
INIT ; -- init variables and list array
"RTN","IBDFHLP",11,0)
 S (VALMCNT,IBJCNT,IBJCNT1,IBJCOUNT)=0
"RTN","IBDFHLP",12,0)
 K ^TMP("IBDFHP",$J)
"RTN","IBDFHLP",13,0)
 F IBJX=1:1 S IBJVAL=$P($T(DISP+IBJX),";;",2) Q:IBJVAL="END"  S X="",X=$$SETSTR^VALM1(IBJVAL,X,5,75) D TMP
"RTN","IBDFHLP",14,0)
 Q
"RTN","IBDFHLP",15,0)
 ;
"RTN","IBDFHLP",16,0)
HELP ; -- help code
"RTN","IBDFHLP",17,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFHLP",18,0)
 Q
"RTN","IBDFHLP",19,0)
 ;
"RTN","IBDFHLP",20,0)
EXIT ; -- exit code
"RTN","IBDFHLP",21,0)
 K ^TMP("IBDFHP",$J),^TMP("HPIDX",$J) Q
"RTN","IBDFHLP",22,0)
 ;
"RTN","IBDFHLP",23,0)
EXPND ; -- expand code
"RTN","IBDFHLP",24,0)
 Q
"RTN","IBDFHLP",25,0)
 ;
"RTN","IBDFHLP",26,0)
DISP ;Help frame for Special Instructions
"RTN","IBDFHLP",27,0)
 ;;  The choices for Special Instructions are:
"RTN","IBDFHLP",28,0)
 ;;
"RTN","IBDFHLP",29,0)
 ;;                R - Run Regardless
"RTN","IBDFHLP",30,0)
 ;;                I - Ignore both Weekends and Holidays
"RTN","IBDFHLP",31,0)
 ;;                W - Ignore Weekends
"RTN","IBDFHLP",32,0)
 ;;                H - Ignore Holidays
"RTN","IBDFHLP",33,0)
 ;;                T - Today
"RTN","IBDFHLP",34,0)
 ;;                N - Not Active
"RTN","IBDFHLP",35,0)
 ;;
"RTN","IBDFHLP",36,0)
 ;;
"RTN","IBDFHLP",37,0)
 ;; R - Run Regardless ... The print job will run daily at the scheduled time.
"RTN","IBDFHLP",38,0)
 ;;
"RTN","IBDFHLP",39,0)
 ;; I - Ignore Weekends and Holidays... The print job will not run at it's
"RTN","IBDFHLP",40,0)
 ;;     daily scheduled time if the day is a holiday or a weekend day.
"RTN","IBDFHLP",41,0)
 ;;
"RTN","IBDFHLP",42,0)
 ;; W - Ignore Weekends... The print job will not run at it's daily scheduled
"RTN","IBDFHLP",43,0)
 ;;     time if the day is a weekend day.
"RTN","IBDFHLP",44,0)
 ;;
"RTN","IBDFHLP",45,0)
 ;; H - Ignore Holidays... The print job will not run at it's daily scheduled 
"RTN","IBDFHLP",46,0)
 ;;     time if the day is a holiday.
"RTN","IBDFHLP",47,0)
 ;;
"RTN","IBDFHLP",48,0)
 ;; T - Today... The job will run today.
"RTN","IBDFHLP",49,0)
 ;;
"RTN","IBDFHLP",50,0)
 ;; N - Not Active... The job is considered inactive and the encounter forms
"RTN","IBDFHLP",51,0)
 ;;     will not be printed.
"RTN","IBDFHLP",52,0)
 ;;END
"RTN","IBDFHLP",53,0)
TMP S IBJCNT=IBJCNT+1,IBJCNT1=IBJCNT1+1,VALMCNT=VALMCNT+1 S ^TMP("IBDFHP",$J,IBJCNT,0)=X,^TMP("IBDFHP",$J,"IDX",VALMCNT,IBJCNT)=""
"RTN","IBDFHLP",54,0)
 S ^TMP("HPIDX",$J,IBJCNT)=VALMCNT
"RTN","IBDFHLP",55,0)
 Q
"RTN","IBDFLST")
0^190^B26165000
"RTN","IBDFLST",1,0)
IBDFLST ;ALM/MAF - Maintenance Utility Invalid Codes List - MAY 17 1995
"RTN","IBDFLST",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFLST",3,0)
 ;
"RTN","IBDFLST",4,0)
 ;
"RTN","IBDFLST",5,0)
START ;  -- Ask what invalid code you want to display CPT/ ICD9/ Visit
"RTN","IBDFLST",6,0)
 N IBDFDIS
"RTN","IBDFLST",7,0)
 D FULL^VALM1
"RTN","IBDFLST",8,0)
 S DIR("B")="CPT",DIR(0)="SBM^C:CPT;I:ICD9;V:VISIT",DIR("A")="Display invalid codes for [C]PT, [I]CD9, [V]ISIT" D ^DIR
"RTN","IBDFLST",9,0)
 K DIR I $D(DIRUT)!(Y<0) G QUIT
"RTN","IBDFLST",10,0)
 ;W !!,"Display invalid codes for CPT// " D ZSET1^IBDFLST1 S X="" R X:DTIME G QUIT:X="^"!('$T) I X=""!("Cc"[X) S X="1"
"RTN","IBDFLST",11,0)
 S X=$S("Ii"[X:2,"Vv"[X:3,1:1)
"RTN","IBDFLST",12,0)
 ;I X="?" D ZSET1^IBDFLST1,HELP1^IBDFLST1 G START
"RTN","IBDFLST",13,0)
 S IBDFTYP=$E(X)  ; D IN^DGHELP W ! I %=-1 D ZSET1^IBDFLST1,HELP1^IBDFLST1 G START
"RTN","IBDFLST",14,0)
 S IBDFDIS=$S(IBDFTYP=1:"CPT",IBDFTYP=2:"ICD9",IBDFTYP=3:"VISIT",1:"QUIT")
"RTN","IBDFLST",15,0)
 D WAIT^DICD
"RTN","IBDFLST",16,0)
 D EN^VALM("IBDF UTIL COMPLETE LIST TEMP")
"RTN","IBDFLST",17,0)
 Q
"RTN","IBDFLST",18,0)
 ;
"RTN","IBDFLST",19,0)
 ;
"RTN","IBDFLST",20,0)
HDR ; -- header code
"RTN","IBDFLST",21,0)
 S VALMHDR(1)="This screen displays the most current invalid codes for the "_IBDFDIS_" file."
"RTN","IBDFLST",22,0)
 Q
"RTN","IBDFLST",23,0)
 ;
"RTN","IBDFLST",24,0)
 ;
"RTN","IBDFLST",25,0)
SETSTR(S,V,X,L) ; -- insert text(S) into variable(V)
"RTN","IBDFLST",26,0)
 ;    S := string
"RTN","IBDFLST",27,0)
 ;    V := destination
"RTN","IBDFLST",28,0)
 ;    X := @ col X
"RTN","IBDFLST",29,0)
 ;    L := # of chars
"RTN","IBDFLST",30,0)
 ;
"RTN","IBDFLST",31,0)
 Q $E(V_$J("",X-1),1,X-1)_$E(S_$J("",L),1,L)_$E(V,X+L,999)
"RTN","IBDFLST",32,0)
 ;
"RTN","IBDFLST",33,0)
 ;
"RTN","IBDFLST",34,0)
INIT ;  -- Set up list for display
"RTN","IBDFLST",35,0)
 N IBDFCODE,IBDFDESC,IBDFIFN,IBDFCAT
"RTN","IBDFLST",36,0)
 S (IBDCNT,VALMCNT,IBDCNT1)=0
"RTN","IBDFLST",37,0)
 D @(IBDFDIS)
"RTN","IBDFLST",38,0)
 Q
"RTN","IBDFLST",39,0)
 ;
"RTN","IBDFLST",40,0)
 ;  -- Gets CPT listing of invalid codes
"RTN","IBDFLST",41,0)
CPT D FULL^VALM1 F IBDFIFN=0:0 S IBDFIFN=$O(^ICPT(IBDFIFN)) Q:'IBDFIFN  S IBDFNODE=$G(^ICPT(IBDFIFN,0)) I $P(IBDFNODE,"^",4)]"" D
"RTN","IBDFLST",42,0)
 .S IBDFCODE=$P(IBDFNODE,"^",1),IBDFDESC=$P(IBDFNODE,"^",2),IBDFCAT=$S($P(IBDFNODE,"^",3)]"":$P(^DIC(81.1,$P(IBDFNODE,"^",3),0),"^",1),1:"UNKNOWN") D ALPHA
"RTN","IBDFLST",43,0)
 D LOOP
"RTN","IBDFLST",44,0)
 Q
"RTN","IBDFLST",45,0)
 ;
"RTN","IBDFLST",46,0)
 ;  -- Gets ICD9 listing onf invalid codes
"RTN","IBDFLST",47,0)
ICD9 F IBDFIFN=0:0 S IBDFIFN=$O(^ICD9(IBDFIFN)) Q:'IBDFIFN  S IBDFNODE=$G(^ICD9(IBDFIFN,0)) I $P(IBDFNODE,"^",9)]"" D
"RTN","IBDFLST",48,0)
 .S IBDFCODE=$P(IBDFNODE,"^",1),IBDFDESC=$P(IBDFNODE,"^",3),IBDFCAT=$S($P(IBDFNODE,"^",5)]""&($G(^ICM(+$P(IBDFNODE,"^",5),0))]""):$P(^ICM($P(IBDFNODE,"^",5),0),"^",1),1:"UNKNOWN") D ALPHA
"RTN","IBDFLST",49,0)
 D LOOP
"RTN","IBDFLST",50,0)
 Q
"RTN","IBDFLST",51,0)
 ;
"RTN","IBDFLST",52,0)
 ;
"RTN","IBDFLST",53,0)
VISIT ;  -- Gets visit code listing of invalid codes
"RTN","IBDFLST",54,0)
 N IEN
"RTN","IBDFLST",55,0)
 F IBDFVST=0:0 S IBDFVST=$O(^IBE(357.69,"B",IBDFVST)) Q:'IBDFVST  S IEN=$O(^IBE(357.69,"B",IBDFVST,0)) I IEN I $D(^ICPT("B",IBDFVST)) S IEN=$O(^ICPT("B",IBDFVST,0)) I IEN I $P($G(^ICPT(IEN,0)),"^",4) D
"RTN","IBDFLST",56,0)
 .S IBDFIFN=IEN
"RTN","IBDFLST",57,0)
 .S IBDFNODE=$G(^ICPT(IBDFIFN,0))
"RTN","IBDFLST",58,0)
 .S IBDFCODE=$P(IBDFNODE,"^",1),IBDFDESC=$P(IBDFNODE,"^",2),IBDFCAT=$S($P(IBDFNODE,"^",3)]"":$P(^DIC(81.1,$P(IBDFNODE,"^",3),0),"^",1),1:"UNKNOWN") D ALPHA
"RTN","IBDFLST",59,0)
 D LOOP
"RTN","IBDFLST",60,0)
 Q
"RTN","IBDFLST",61,0)
 ;
"RTN","IBDFLST",62,0)
 ;
"RTN","IBDFLST",63,0)
LOOP ;  -- Loop thru global ^TMP("ALPHA",$J) alphabetic by category
"RTN","IBDFLST",64,0)
 S IBDFCAT=0
"RTN","IBDFLST",65,0)
 F IBDCAT=0:0 S IBDFCAT=$O(^TMP("ALPHA",$J,IBDFCAT)) Q:IBDFCAT']""  F IBDFIFN=0:0 S IBDFIFN=$O(^TMP("ALPHA",$J,IBDFCAT,IBDFIFN)) Q:'IBDFIFN  S IBDFNODE=$G(^TMP("ALPHA",$J,IBDFCAT,IBDFIFN)) D
"RTN","IBDFLST",66,0)
 .S IBDFIFN=$P(IBDFNODE,"^",1)
"RTN","IBDFLST",67,0)
 .S IBDFCODE=$P(IBDFNODE,"^",2)
"RTN","IBDFLST",68,0)
 .S IBDFCAT=$P(IBDFNODE,"^",3)
"RTN","IBDFLST",69,0)
 .S IBDFDESC=$P(IBDFNODE,"^",4)
"RTN","IBDFLST",70,0)
 .D:'$D(IBDFC(IBDFCAT)) HEADER^IBDFLST1 D SET
"RTN","IBDFLST",71,0)
 Q
"RTN","IBDFLST",72,0)
 ;
"RTN","IBDFLST",73,0)
 ;
"RTN","IBDFLST",74,0)
SET ;  -- Set up list array
"RTN","IBDFLST",75,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFLST",76,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFLST",77,0)
 S X=""
"RTN","IBDFLST",78,0)
 S IBDFVAL=$J(IBDCNT1_")",5)
"RTN","IBDFLST",79,0)
 S X=$$SETSTR(IBDFVAL,X,1,5)
"RTN","IBDFLST",80,0)
 S IBDFVAL=IBDFCODE
"RTN","IBDFLST",81,0)
 S X=$$SETSTR(IBDFVAL,X,7,8)
"RTN","IBDFLST",82,0)
 S IBDFVAL=IBDFDESC
"RTN","IBDFLST",83,0)
 S X=$$SETSTR(IBDFVAL,X,17,20)
"RTN","IBDFLST",84,0)
 S IBDFVAL=IBDFCAT
"RTN","IBDFLST",85,0)
 S X=$$SETSTR(IBDFVAL,X,39,20)
"RTN","IBDFLST",86,0)
 ;
"RTN","IBDFLST",87,0)
 ;
"RTN","IBDFLST",88,0)
TMP ; -- Set up Array
"RTN","IBDFLST",89,0)
 S ^TMP("CODE",$J,IBDCNT,0)=$$LOWER^VALM1(X),^TMP("CODE",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFLST",90,0)
 S ^TMP("CODEIDX",$J,IBDCNT1)=VALMCNT_"^"_IBDFIFN_"^"_IBDFCODE_"^"_IBDFCAT_"^"_IBDFDESC
"RTN","IBDFLST",91,0)
 Q
"RTN","IBDFLST",92,0)
 ;
"RTN","IBDFLST",93,0)
 ;
"RTN","IBDFLST",94,0)
ALPHA ;  - Alphabetize by category
"RTN","IBDFLST",95,0)
 S ^TMP("ALPHA",$J,IBDFCAT,IBDFIFN)=IBDFIFN_"^"_IBDFCODE_"^"_IBDFCAT_"^"_IBDFDESC
"RTN","IBDFLST",96,0)
 Q
"RTN","IBDFLST",97,0)
 ;
"RTN","IBDFLST",98,0)
 ;
"RTN","IBDFLST",99,0)
QUIT ;  -- Kill variables and reset to last display if no change has been taken place.
"RTN","IBDFLST",100,0)
 ;
"RTN","IBDFLST",101,0)
 ;
"RTN","IBDFLST",102,0)
EXIT K ^TMP("CODE",$J),^TMP("CODEIDX",$J),^TMP("ALPHA",$J)
"RTN","IBDFLST",103,0)
 K IBDFC,IBDFTYP,IBDFCNT1,IBDCAT
"RTN","IBDFLST",104,0)
 Q
"RTN","IBDFLST",105,0)
 ;
"RTN","IBDFLST",106,0)
 ;
"RTN","IBDFLST",107,0)
JUMP ; -- Jump action to display a specific category on the screen.
"RTN","IBDFLST",108,0)
 D FULL^VALM1
"RTN","IBDFLST",109,0)
 I $D(XQORNOD(0)),$P(XQORNOD(0),"^",4)]"" S X=$P(XQORNOD(0),"^",4) S X=$P(X,"=",2) I X]"" D:X?1.6N JSEL S DIC=$S(IBDFDIS="ICD9":"^ICM(",1:"^DIC(81.1,"),DIC(0)="QEZ" D ^DIC K DIC G:Y<0 JMP S Y=+Y D JUMP1 Q
"RTN","IBDFLST",110,0)
JMP S DIC=$S(IBDFDIS="ICD9":"^ICM(",1:"^DIC(81.1,"),DIC(0)="AEMN",DIC("A")="Select "_$S(IBDFDIS="ICD9":"ICD9",1:"CPT")_" category you wish to move to: "
"RTN","IBDFLST",111,0)
 D ^DIC K DIC
"RTN","IBDFLST",112,0)
 I X["^" S VALMBG=1,VALMBCK="R" Q
"RTN","IBDFLST",113,0)
 ;
"RTN","IBDFLST",114,0)
 ;
"RTN","IBDFLST",115,0)
JUMP1 I Y<0 G JUMP
"RTN","IBDFLST",116,0)
 N IBDFCAT
"RTN","IBDFLST",117,0)
 S IBDFCAT=$S(IBDFDIS="ICD9":$P(^ICM(+Y,0),"^",1),1:$P(^DIC(81.1,+Y,0),"^",1))
"RTN","IBDFLST",118,0)
 I '$D(IBDFC(IBDFCAT)) W !!,"There is no data listed for this Clinic Group" G JMP
"RTN","IBDFLST",119,0)
 S VALMBG=+IBDFC(IBDFCAT) S VALMBCK="R" Q
"RTN","IBDFLST",120,0)
 Q
"RTN","IBDFLST",121,0)
 ;
"RTN","IBDFLST",122,0)
 ;
"RTN","IBDFLST",123,0)
JSEL ; -- Convert number selected to name
"RTN","IBDFLST",124,0)
 S IBDVALM=X I $D(^TMP("CGIDX",$J,IBDVALM)) S X=$P(^TMP("CGIDX",$J,IBDVALM),"^",2),X=$P(^IBD(357.99,X,0),"^",1)
"RTN","IBDFLST",125,0)
 Q
"RTN","IBDFLST1")
0^191^B2836396
"RTN","IBDFLST1",1,0)
IBDFLST1 ;ALM/MAF - Maintenance Utility Invalid Codes List - MAY 17 1995
"RTN","IBDFLST1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFLST1",3,0)
 ;
"RTN","IBDFLST1",4,0)
 ;
"RTN","IBDFLST1",5,0)
HEADER ;  -- Set up header line for the display
"RTN","IBDFLST1",6,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFLST1",7,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFLST1",8,0)
 S X=""
"RTN","IBDFLST1",9,0)
 S IBDFC(IBDFCAT)=IBDCNT_"^"_IBDFIFN
"RTN","IBDFLST1",10,0)
 S X=$$SETSTR(" ",X,1,3) D TMP
"RTN","IBDFLST1",11,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFLST1",12,0)
 S IBDVAL=IBDFCAT
"RTN","IBDFLST1",13,0)
 S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR(" ",X,1,IBDVAL1)
"RTN","IBDFLST1",14,0)
 S X=$$SETSTR(IBDVAL,X,IBDVAL1,25) D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFLST1",15,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFLST1",16,0)
 S X=$$SETSTR(" ",X,1,3) D TMP
"RTN","IBDFLST1",17,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFLST1",18,0)
 Q
"RTN","IBDFLST1",19,0)
 ;
"RTN","IBDFLST1",20,0)
 ;
"RTN","IBDFLST1",21,0)
SETSTR(S,V,X,L) ; -- insert text(S) into variable(V)
"RTN","IBDFLST1",22,0)
 ;    S := string
"RTN","IBDFLST1",23,0)
 ;    V := destination
"RTN","IBDFLST1",24,0)
 ;    X := @ col X
"RTN","IBDFLST1",25,0)
 ;    L := # of chars
"RTN","IBDFLST1",26,0)
 ;
"RTN","IBDFLST1",27,0)
 Q $E(V_$J("",X-1),1,X-1)_$E(S_$J("",L),1,L)_$E(V,X+L,999)
"RTN","IBDFLST1",28,0)
 ;
"RTN","IBDFLST1",29,0)
 ;
"RTN","IBDFLST1",30,0)
TMP ; -- Set up Array
"RTN","IBDFLST1",31,0)
 S ^TMP("CODE",$J,IBDCNT,0)=$$LOWER^VALM1(X),^TMP("CODE",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFLST1",32,0)
 S ^TMP("CODEIDX",$J,IBDCNT1)=VALMCNT_"^"_IBDFIFN_"^"_IBDFCODE_"^"_IBDFCAT_"^"_IBDFDESC
"RTN","IBDFLST1",33,0)
 Q
"RTN","IBDFLST1",34,0)
 ;
"RTN","IBDFLST1",35,0)
 ;  -- Help code for display choices
"RTN","IBDFLST1",36,0)
HELP1 W !!,"Choose a number or first initial :" F K=2:1:4 W !?15,$P(Z,"^",K)
"RTN","IBDFLST1",37,0)
 W ! Q
"RTN","IBDFLST1",38,0)
 ;
"RTN","IBDFLST1",39,0)
 ;  -- Selections listed
"RTN","IBDFLST1",40,0)
ZSET1 S Z="^1 [C]PT^2 [I]CD9^3 [V]ISIT^" Q
"RTN","IBDFLST1",41,0)
 ;
"RTN","IBDFLST1",42,0)
 ;
"RTN","IBDFM1")
0^192^B31417580
"RTN","IBDFM1",1,0)
IBDFM1 ;ALB/CJM - ENCOUNTER FORM (compiling bubbles and hand print fields);3/1/93
"RTN","IBDFM1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFM1",3,0)
 ;
"RTN","IBDFM1",4,0)
DRWBBL(ROW,COL,PI,VALUE,FNAME,FID,ALLOWED,DISPLAY,HDR,QLFR,DYN,CNT,SUBHDR,QTY,ND2) ;
"RTN","IBDFM1",5,0)
 ;returns "" if no bubble created, else the ien
"RTN","IBDFM1",6,0)
 ;
"RTN","IBDFM1",7,0)
 N BUBBLE
"RTN","IBDFM1",8,0)
 S DISPLAY=$E(DISPLAY,1,80),HDR=$E(HDR,1,40)
"RTN","IBDFM1",9,0)
 S DYN=+$G(DYN),CNT=+$G(CNT)
"RTN","IBDFM1",10,0)
 ;
"RTN","IBDFM1",11,0)
 ;don't want to associate a value with the bubble if there is no input interface for the type of data
"RTN","IBDFM1",12,0)
 I 'PI S VALUE=""
"RTN","IBDFM1",13,0)
 ;
"RTN","IBDFM1",14,0)
 ;compiling blocks?
"RTN","IBDFM1",15,0)
 I IBPRINT("COMPILING_BLOCKS") D CMPBBL Q:'IBPRINT("WRITE_IF_COMPILING")
"RTN","IBDFM1",16,0)
 ;
"RTN","IBDFM1",17,0)
 ;don't draw a bubble if in the list processor
"RTN","IBDFM1",18,0)
 Q:IBDEVICE("LISTMAN")
"RTN","IBDFM1",19,0)
 ;
"RTN","IBDFM1",20,0)
 ;add the offsets for the block to position
"RTN","IBDFM1",21,0)
 S ROW=ROW+IBBLK("Y"),COL=COL+IBBLK("X")
"RTN","IBDFM1",22,0)
 ;
"RTN","IBDFM1",23,0)
 ;might not be creating a FORM DEFINITION TABLE - case of toolkit form
"RTN","IBDFM1",24,0)
 I IBFORM("TOOLKIT") S @IBARRAY("BUBBLES")@(ROW,COL)="" Q
"RTN","IBDFM1",25,0)
 ;
"RTN","IBDFM1",26,0)
 ;case of FORM DEFINITION TABLE being created - all forms but toolkit
"RTN","IBDFM1",27,0)
 Q:IBFORM("COMPILED")="F"  ;something already went wrong
"RTN","IBDFM1",28,0)
 I IBFORM("TYPE") I $D(^IBD(357.95,IBFORM("TYPE"),0))
"RTN","IBDFM1",29,0)
 E  S IBFORM("TYPE")=$$NEWTABLE(.IBFORM)
"RTN","IBDFM1",30,0)
 I 'IBFORM("TYPE") D UNCMPL^IBDF19(.IBFORM,1) Q
"RTN","IBDFM1",31,0)
 ;
"RTN","IBDFM1",32,0)
 ;add the bubble to the table
"RTN","IBDFM1",33,0)
 K DIC,D0,DINUM,DD S DIC="^IBD(357.95,"_IBFORM("TYPE")_",1,",X=ROW,DA(1)=IBFORM("TYPE"),DIC(0)=""
"RTN","IBDFM1",34,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFM1",35,0)
 S BUBBLE=$S(+Y<0:"",1:+Y)
"RTN","IBDFM1",36,0)
 I 'BUBBLE D UNCMPL^IBDF19(.IBFORM,1) Q
"RTN","IBDFM1",37,0)
 I BUBBLE D
"RTN","IBDFM1",38,0)
 .D INPUT^IBDFU91(PI,.VALUE) I '$D(VALUE) S VALUE=""
"RTN","IBDFM1",39,0)
 .S ^IBD(357.95,IBFORM("TYPE"),1,BUBBLE,0)=ROW_"^"_COL_"^"_PI_"^"_VALUE_"^"_$G(FNAME)_"^"_FID_"^"_ALLOWED_"^"_DISPLAY_"^"_HDR_"^"_QLFR_"^"_DYN_"^"_CNT_"^"_$G(QTY)
"RTN","IBDFM1",40,0)
 .I $L($G(SUBHDR)) S ^IBD(357.95,IBFORM("TYPE"),1,BUBBLE,1)=$E(SUBHDR,1,250)
"RTN","IBDFM1",41,0)
 .I $L($G(ND2)) D
"RTN","IBDFM1",42,0)
 ..; -- change external format of 2nd & 3rd codes to internal format
"RTN","IBDFM1",43,0)
 ..N IBJ,IBVAL F IBJ=3,4 S IBVAL=$P(ND2,"^",IBJ) I IBVAL]"" D INPUT^IBDFU91(PI,.IBVAL) S $P(ND2,"^",IBJ)=$S($D(IBVAL):IBVAL,1:"")
"RTN","IBDFM1",44,0)
 ..S ^IBD(357.95,IBFORM("TYPE"),1,BUBBLE,2)=ND2
"RTN","IBDFM1",45,0)
 .K DIK,DA S DIK="^IBD(357.95,"_IBFORM("TYPE")_",1,",DA=BUBBLE,DA(1)=IBFORM("TYPE") D IX1^DIK K DIK,DA
"RTN","IBDFM1",46,0)
 Q
"RTN","IBDFM1",47,0)
 ;
"RTN","IBDFM1",48,0)
NEWTABLE(IBFORM) ;creates a new FORM DEFINITION table
"RTN","IBDFM1",49,0)
 ;returns the ien of the table created, "" if not created
"RTN","IBDFM1",50,0)
 N NODE,SUB,CNT
"RTN","IBDFM1",51,0)
 S IBFORM("TYPE")=$$FORMTYPE^IBDF18D(1)
"RTN","IBDFM1",52,0)
 Q:'IBFORM("TYPE")
"RTN","IBDFM1",53,0)
 S NODE=$G(^IBE(357,IBFORM,0))
"RTN","IBDFM1",54,0)
 S $P(^IBD(357.95,IBFORM("TYPE"),0),"^",9,19)=$P(NODE,"^",9,19) ;not all  19 pieces may exist
"RTN","IBDFM1",55,0)
 S $P(^IBD(357.95,IBFORM("TYPE"),0),"^",20,21)=DT_"^"_IBFORM
"RTN","IBDFM1",56,0)
 S $P(^IBE(357,IBFORM,0),"^",13)=IBFORM("TYPE")
"RTN","IBDFM1",57,0)
 S (CNT,SUB)=0 F  S SUB=$O(^IBE(357,IBFORM,2,SUB)) Q:'SUB  S NODE=$G(^IBE(357,IBFORM,2,SUB,0)) Q:('+NODE)!('$P(NODE,"^",2))  S CNT=CNT+1,^IBD(357.95,IBFORM("TYPE"),3,CNT,0)=+NODE_"^1",^IBD(357.95,IBFORM("TYPE"),3,"B",+NODE,CNT)=""
"RTN","IBDFM1",58,0)
 S $P(^IBD(357.95,IBFORM("TYPE"),3,0),"^",3,4)=CNT_"^"_CNT
"RTN","IBDFM1",59,0)
 Q IBFORM("TYPE")
"RTN","IBDFM1",60,0)
 ;
"RTN","IBDFM1",61,0)
CMPBBL ;save compiled bubbles for the block
"RTN","IBDFM1",62,0)
 S IBWRTCNT("B")=IBWRTCNT("B")+1
"RTN","IBDFM1",63,0)
 S ^IBE(357.1,IBBLK,"B",IBWRTCNT("B"),0)=ROW_"^"_COL_"^"_PI_"^"_VALUE_"^"_FNAME_"^"_FID_"^"_ALLOWED_"^"_DISPLAY_"^"_HDR_"^"_QLFR_"^"_DYN_"^"_CNT_"^"_$G(QTY)
"RTN","IBDFM1",64,0)
 I $L($G(SUBHDR)) S ^IBE(357.1,IBBLK,"B",IBWRTCNT("B"),1)=$E(SUBHDR,1,250)
"RTN","IBDFM1",65,0)
 I $L($G(ND2)) S ^IBE(357.1,IBBLK,"B",IBWRTCNT("B"),2)=ND2
"RTN","IBDFM1",66,0)
 Q
"RTN","IBDFM1",67,0)
 ;
"RTN","IBDFM1",68,0)
CMPHAND ;save compiled hand print fields for the block
"RTN","IBDFM1",69,0)
 S IBWRTCNT("H")=IBWRTCNT("H")+1
"RTN","IBDFM1",70,0)
 S ^IBE(357.1,IBBLK,"H",IBWRTCNT("H"),0)=ROW_"^"_COL_"^"_WIDTH_"^"_PI_"^^"_LINES_"^"_FID_"^"_FNAME_"^"_HDR_"^"_QLFR_"^^"_ITEM_"^^"_PRINT_"^"_READ_"^^"_TYPEDATA
"RTN","IBDFM1",71,0)
 Q
"RTN","IBDFM1",72,0)
 ;
"RTN","IBDFM1",73,0)
DRWHAND(ROW,COL,WIDTH,PI,LINES,FID,FNAME,HDR,QLFR,ITEM,PRINT,READ,TYPEDATA) ;creates hand print field
"RTN","IBDFM1",74,0)
 N NODE
"RTN","IBDFM1",75,0)
 S NODE=""
"RTN","IBDFM1",76,0)
 ;
"RTN","IBDFM1",77,0)
 S ITEM=$G(ITEM),PRINT=$G(PRINT),READ=$G(READ),TYPEDATA=$G(TYPEDATA)
"RTN","IBDFM1",78,0)
 ;returns "" if no hand print field created, else the ien
"RTN","IBDFM1",79,0)
 Q:('$D(ROW))!('$D(COL))
"RTN","IBDFM1",80,0)
 N HANDPRNT
"RTN","IBDFM1",81,0)
 S HDR=$E(HDR,1,40)
"RTN","IBDFM1",82,0)
 ;
"RTN","IBDFM1",83,0)
 ;compiling blocks?
"RTN","IBDFM1",84,0)
 I IBPRINT("COMPILING_BLOCKS") D CMPHAND Q:'IBPRINT("WRITE_IF_COMPILING")
"RTN","IBDFM1",85,0)
 ;
"RTN","IBDFM1",86,0)
 ;don't draw hand print field if in the list processor
"RTN","IBDFM1",87,0)
 Q:IBDEVICE("LISTMAN")
"RTN","IBDFM1",88,0)
 ;
"RTN","IBDFM1",89,0)
 ;add the offsets for the block to position
"RTN","IBDFM1",90,0)
 S ROW=ROW+IBBLK("Y"),COL=COL+IBBLK("X")
"RTN","IBDFM1",91,0)
 ;
"RTN","IBDFM1",92,0)
 ;might not be creating a FORM DEFINITION TABLE - case of toolkit form
"RTN","IBDFM1",93,0)
 I IBFORM("TOOLKIT") D  Q
"RTN","IBDFM1",94,0)
 .N CNT S CNT=+$G(@IBARRAY("HAND_PRINT"))+1
"RTN","IBDFM1",95,0)
 .S @IBARRAY("HAND_PRINT")@(ROW,COL,CNT)=ROW_"^"_COL_"^"_WIDTH_"^"_PI_"^"_FNAME_"^"_LINES_"^^"_FID_"^"_HDR_"^"_QLFR_"^^"_ITEM_"^^"_PRINT_"^"_READ_"^^"_TYPEDATA
"RTN","IBDFM1",96,0)
 ;
"RTN","IBDFM1",97,0)
 ;case of FORM DEFINITION TABLE being created - all forms but toolkit
"RTN","IBDFM1",98,0)
 Q:IBFORM("COMPILED")="F"  ;something already went wrong
"RTN","IBDFM1",99,0)
 I IBFORM("TYPE") I $D(^IBD(357.95,IBFORM("TYPE"),0))
"RTN","IBDFM1",100,0)
 E  S IBFORM("TYPE")=$$NEWTABLE(.IBFORM)
"RTN","IBDFM1",101,0)
 ;if 'IBFORM("TYPE") want to recompile this next time around
"RTN","IBDFM1",102,0)
 I 'IBFORM("TYPE") D UNCMPL^IBDF19(.IBFORM,1) Q
"RTN","IBDFM1",103,0)
 ;
"RTN","IBDFM1",104,0)
 ;add the handprint field to the table
"RTN","IBDFM1",105,0)
 K DIC,D0,DINUM,DD S DIC="^IBD(357.95,"_IBFORM("TYPE")_",2,",X=ROW,DA(1)=IBFORM("TYPE"),DIC(0)=""
"RTN","IBDFM1",106,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFM1",107,0)
 S HANDPRNT=$S(+Y<0:"",1:+Y)
"RTN","IBDFM1",108,0)
 I 'HANDPRNT D UNCMPL^IBDF19(.IBFORM,1) Q
"RTN","IBDFM1",109,0)
 I HANDPRNT D
"RTN","IBDFM1",110,0)
 .S ^IBD(357.95,IBFORM("TYPE"),2,HANDPRNT,0)=ROW_"^"_COL_"^"_WIDTH_"^"_PI_"^"_FNAME_"^"_LINES_"^^"_FID_"^"_HDR_"^"_QLFR_"^^"_ITEM_"^^"_PRINT_"^"_READ_"^^"_TYPEDATA
"RTN","IBDFM1",111,0)
 .K DIK,DA S DIK="^IBD(357.95,"_IBFORM("TYPE")_",2,",DA=HANDPRNT,DA(1)=IBFORM("TYPE") D IX1^DIK K DIK,DA
"RTN","IBDFM1",112,0)
 Q
"RTN","IBDFM1",113,0)
 ;
"RTN","IBDFM1",114,0)
TRACKBBL(FID,COUNT,QLFR,PI,DISPLAY,VALUE) ;
"RTN","IBDFM1",115,0)
 ;IBPFID, the id in form tracking, should be defined
"RTN","IBDFM1",116,0)
 ;
"RTN","IBDFM1",117,0)
 ; -- do not re-file dynamic data if reprint
"RTN","IBDFM1",118,0)
 Q:$G(REPRINT)
"RTN","IBDFM1",119,0)
 ;N SUB,NODE
"RTN","IBDFM1",120,0)
 ;S NODE=$G(^IBD(357.96,IBPFID,1,0))
"RTN","IBDFM1",121,0)
 ;S SUB=$P(NODE,"^",3)
"RTN","IBDFM1",122,0)
 ;S SUB=SUB+1,$P(NODE,"^",3,4)=SUB_"^"_SUB
"RTN","IBDFM1",123,0)
 ;D INPUT^IBDFU91(PI,.VALUE) I '$D(VALUE) S VALUE=""
"RTN","IBDFM1",124,0)
 ;S ^IBD(357.96,IBPFID,1,SUB,0)=COUNT_"^^"_PI_"^"_VALUE_"^^"_FID_"^^"_DISPLAY_"^^"_QLFR
"RTN","IBDFM1",125,0)
 ;S ^IBD(357.96,IBPFID,1,0)=NODE
"RTN","IBDFM1",126,0)
 ;K DIK,DA S DIK="^IBD(357.96,IBPFID,1,",DA=SUB,DA(1)=IBPFID D IX^DIK K DIK,DA
"RTN","IBDFM1",127,0)
 D INPUT^IBDFU91(PI,.VALUE) I '$D(VALUE) S VALUE=""
"RTN","IBDFM1",128,0)
 S DIC="^IBD(357.96,IBPFID,1,",DIC(0)="L",DIC("P")=$P(^DD(357.96,1,0),"^",2),DA(1)=IBPFID,X=COUNT,DLAYGO=357.96,DIC("DR")=".03////^S X=PI;.04////^S X=VALUE;.06////^S X=FID;.08////^S X=$E(DISPLAY,1,80);.1////^S X=QLFR"
"RTN","IBDFM1",129,0)
 K DD,DO D FILE^DICN K DIC,DA,DLAYGO,DD,DO
"RTN","IBDFM1",130,0)
 Q
"RTN","IBDFN")
0^193^B30939470
"RTN","IBDFN",1,0)
IBDFN ;ALB/CJM - ENCOUNTER FORM - INTERFACE ROUTINES ;NOV 16,1992
"RTN","IBDFN",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFN",3,0)
VADPT ;returns patient demographic data
"RTN","IBDFN",4,0)
 ;input variables - DFN
"RTN","IBDFN",5,0)
 N ARY
"RTN","IBDFN",6,0)
 S ARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN))"
"RTN","IBDFN",7,0)
 D DEM^VADPT
"RTN","IBDFN",8,0)
 I VAERR S (@ARY@("DPT PATIENT'S NAME"),@ARY@("DPT PATIENT'S DOB/AGE"),@ARY@("DPT PATIENT'S SEX"),@ARY@("DPT PATIENT'S PID"),@ARY@("DPT PATIENT'S MARITAL STATUS"))=""  Q
"RTN","IBDFN",9,0)
 S @ARY@("DPT PATIENT'S NAME")=VADM(1),@ARY@("DPT PATIENT'S SEX")=$P(VADM(5),"^",2)_"^"_$E($P(VADM(5),"^",2)),@ARY@("DPT PATIENT'S DOB/AGE")=$P(VADM(3),"^",2)_"^"_VADM(4),@ARY@("DPT PATIENT'S PID")=VA("PID")
"RTN","IBDFN",10,0)
 S @ARY@("DPT PATIENT'S MARITAL STATUS")=$P(VADM(10),"^",2)
"RTN","IBDFN",11,0)
 S @ARY@("DPT PATIENT'S RACE")=$P(VADM(8),"^",2)
"RTN","IBDFN",12,0)
 K VADM,VA,VAERR,VAEL
"RTN","IBDFN",13,0)
 Q
"RTN","IBDFN",14,0)
EMPLMNT ;returns patient's employment status
"RTN","IBDFN",15,0)
 ;input variables - DFN
"RTN","IBDFN",16,0)
 D OPD^VADPT
"RTN","IBDFN",17,0)
 I VAERR S @IBARY=""  Q
"RTN","IBDFN",18,0)
 S @IBARY=$P(VAPD(7),"^",2)
"RTN","IBDFN",19,0)
 K VAPD,VA,VAERR,VAEL
"RTN","IBDFN",20,0)
 Q
"RTN","IBDFN",21,0)
 ;
"RTN","IBDFN",22,0)
DATE(Y) ; Y=date in FM form, this function translates the date to its 
"RTN","IBDFN",23,0)
 ;external form
"RTN","IBDFN",24,0)
 D DD^%DT
"RTN","IBDFN",25,0)
 Q Y
"RTN","IBDFN",26,0)
 Q
"RTN","IBDFN",27,0)
 ;
"RTN","IBDFN",28,0)
ELIG ;for output of eligibility information & service connected conditions
"RTN","IBDFN",29,0)
 N COUNT,ARY,VAEL,VAERR,NODE0,COND,DESCR,PERC,EC,VASV,DATA,I,SARY
"RTN","IBDFN",30,0)
 S ARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN))"
"RTN","IBDFN",31,0)
 S SARY="^TMP(""IB"",$J,""INTERFACES"")"
"RTN","IBDFN",32,0)
 D ELIG^VADPT
"RTN","IBDFN",33,0)
 I VAERR F I=1:1:6 S VAEL(I)=""
"RTN","IBDFN",34,0)
 S PERC=$P(VAEL(3),"^",2),PERC=$S(PERC="":"",1:$J(PERC,3,0))
"RTN","IBDFN",35,0)
 S @ARY@("DPT PATIENT ELIGIBILITY DATA")=$P(VAEL(1),"^",2)_"^"_$P(VAEL(2),"^",2)_"^"_$S(VAEL(3):"YES",VAEL(3)=0:"NO",1:"")_"^"_$S(VAEL(4):"YES",VAEL(4)=0:"NO",1:"")_"^"_$S(VAEL(5):"YES",VAEL(5)=0:"NO",1:"")_"^"_$P(VAEL(6),"^",2)_"^"_PERC
"RTN","IBDFN",36,0)
 S @ARY@("DPT SC HIDDEN LABELS")=$S(((+VAEL(3))!($O(^DPT(DFN,.372,0)))):"%^% - SERVICE CONNECTED^SERVICE CONNECTED:^SC CONDITIONS:^S/C",1:"  ^  ^  ^  ^  ")
"RTN","IBDFN",37,0)
 I $O(^DPT(DFN,.372,0)),VAEL(4)!$$GET1^DIQ(391,+VAEL(6),.02) S (COUNT,COND)=0 F  S COND=$O(^DPT(DFN,.372,COND)) Q:COND=""  D
"RTN","IBDFN",38,0)
 .S NODE0=$G(^DPT(DFN,.372,COND,0)) Q:'$P(NODE0,"^",3)  S DESCR=$G(^DIC(31,+NODE0,0)),COUNT=COUNT+1
"RTN","IBDFN",39,0)
 .S PERC=$P(NODE0,"^",2),PERC=$S(PERC="":"",1:$J(PERC,3,0))
"RTN","IBDFN",40,0)
 .S @SARY@("DPT PATIENT'S SC CONDITIONS",COUNT)=$S($P(DESCR,"^",4)'="":$P(DESCR,"^",4),1:$P(DESCR,"^",1))_"^"_PERC_"^"_PERC_"%"_"^"_PERC_"%SC"_"^"_PERC_"% - SERVICE CONNECTED"
"RTN","IBDFN",41,0)
 ;
"RTN","IBDFN",42,0)
 ;get service data
"RTN","IBDFN",43,0)
 D SVC^VADPT
"RTN","IBDFN",44,0)
 I VAERR S DATA="^^^^"
"RTN","IBDFN",45,0)
 E  S DATA=$S(VASV(1):"YES",1:"NO")_"^"_$S(VASV(2):"YES",1:"NO")_"^"_$S(VASV(3):"YES",1:"NO")_"^"_$S(VASV(4):"YES",1:"NO")_"^"_$S(VASV(5):"YES",1:"NO")
"RTN","IBDFN",46,0)
 ;
"RTN","IBDFN",47,0)
 ;get the persian gulf indicator - not returned by VADPT
"RTN","IBDFN",48,0)
 S EC=$$EC^SDCO22(DFN,0)
"RTN","IBDFN",49,0)
 ;S EC=$P($G(^DPT(DFN,.322)),"^",13)
"RTN","IBDFN",50,0)
 S @ARY@("DPT SERVICE HISTORY RELATED DATA")=DATA_"^"_$S(EC=1:"YES",1:"NO")
"RTN","IBDFN",51,0)
 ;
"RTN","IBDFN",52,0)
 ;displays questions concerning treatment related to service only
"RTN","IBDFN",53,0)
 ;if they apply
"RTN","IBDFN",54,0)
 ;
"RTN","IBDFN",55,0)
 S DATA=$S(VAEL(3):"Was treatment for a SC condition? __ YES __ NO",1:"")_"^"
"RTN","IBDFN",56,0)
 S DATA=DATA_$S(VASV(2):"Was treatment related to exposure to Agent Orange? __ YES __ NO",1:"")_"^"
"RTN","IBDFN",57,0)
 S DATA=DATA_$S(VASV(3):"Was treatment related to exposure to Ionization Radiation? __ YES __ NO",1:"")
"RTN","IBDFN",58,0)
 S @ARY@("DPT SC TREATMENT QUESTIONS")=DATA
"RTN","IBDFN",59,0)
 ;
"RTN","IBDFN",60,0)
 ;note: must store the 4th question in an annex node
"RTN","IBDFN",61,0)
 S DATA="^^^"_$S(EC="Y":"Was treatment related to exposure to Environmental Contaminants? __ YES __ NO",1:"")_"^"
"RTN","IBDFN",62,0)
 I VASV(2)!VASV(3)!(EC="Y") D
"RTN","IBDFN",63,0)
 .S DATA=DATA_"Was treatment related to: "_$S(VASV(2):"AO __ ",1:"")_$S(VASV(3):"IR __ ",1:"")_$S(EC="Y":"EC __",1:"")
"RTN","IBDFN",64,0)
 E  S DATA=DATA_" "
"RTN","IBDFN",65,0)
 S @ARY@("DPT SC TREATMENT QUESTIONS",1)=DATA
"RTN","IBDFN",66,0)
 Q
"RTN","IBDFN",67,0)
 ;
"RTN","IBDFN",68,0)
BLANKS ;returns NOTHING for printing blank lines
"RTN","IBDFN",69,0)
 S @IBARY=""
"RTN","IBDFN",70,0)
 Q
"RTN","IBDFN",71,0)
LABELS ;returns NOTHING for printing labels only, ie, no data
"RTN","IBDFN",72,0)
 S @IBARY=""
"RTN","IBDFN",73,0)
 Q
"RTN","IBDFN",74,0)
ELIG1 ;for output of hidden service connected conditions
"RTN","IBDFN",75,0)
 N COUNT,ARY,VAEL,VAERR,VASV,EC
"RTN","IBDFN",76,0)
 S ARY="^TMP(""IB"",$J,""INTERFACES"")",COUNT=0
"RTN","IBDFN",77,0)
 D ELIG^VADPT
"RTN","IBDFN",78,0)
 I 'VAERR,(VAEL(3)) S COUNT=COUNT+1,@ARY@("DPT SC HIDDEN TREATMENT QUESTIONS",COUNT)="SC^Was treatment for an SC condition?"
"RTN","IBDFN",79,0)
 ;
"RTN","IBDFN",80,0)
 ;get service data
"RTN","IBDFN",81,0)
 D SVC^VADPT
"RTN","IBDFN",82,0)
 I 'VAERR D
"RTN","IBDFN",83,0)
 .I VASV(2) S COUNT=COUNT+1,@ARY@("DPT SC HIDDEN TREATMENT QUESTIONS",COUNT)="AO^Was treatment related to exposure to Agent Orange?"
"RTN","IBDFN",84,0)
 .I VASV(3) S COUNT=COUNT+1,@ARY@("DPT SC HIDDEN TREATMENT QUESTIONS",COUNT)="IR^Was treatment related to exposure to Ionization Radiation?"
"RTN","IBDFN",85,0)
 ;
"RTN","IBDFN",86,0)
 ;get the persian gulf indicator - not returned by VADPT
"RTN","IBDFN",87,0)
 ;S EC=$P($G(^DPT(DFN,.322)),"^",13)
"RTN","IBDFN",88,0)
 I $$EC^SDCO22(DFN,0) S COUNT=COUNT+1,@ARY@("DPT SC HIDDEN TREATMENT QUESTIONS",COUNT)="EC^Was treatment related to exposure to Environmental Contaminants?"
"RTN","IBDFN",89,0)
 Q
"RTN","IBDFN",90,0)
 ;
"RTN","IBDFN",91,0)
ELIG2 ; -- for output of hidden classification questions
"RTN","IBDFN",92,0)
 N COUNT,ARY
"RTN","IBDFN",93,0)
 I '$$REQ^IBDFDE0(DFN,IBAPPT,IBCLINIC,0) Q
"RTN","IBDFN",94,0)
 ;
"RTN","IBDFN",95,0)
 S ARY="^TMP(""IB"",$J,""INTERFACES"")",COUNT=0
"RTN","IBDFN",96,0)
 ;
"RTN","IBDFN",97,0)
 I $$SC^SDCO22(DFN,0) D SETARY(ARY,.COUNT,"SC^Was treatment for an SC condition?")
"RTN","IBDFN",98,0)
 I $$AO^SDCO22(DFN,0) D SETARY(ARY,.COUNT,"AO^Was treatment related to exposure to Agent Orange?")
"RTN","IBDFN",99,0)
 I $$IR^SDCO22(DFN,0) D SETARY(ARY,.COUNT,"IR^Was treatment related to exposure to Ionization Radiation?")
"RTN","IBDFN",100,0)
 I $$EC^SDCO22(DFN,0) D SETARY(ARY,.COUNT,"EC^Was treatment related to exposure to Environmental Contaminants?")
"RTN","IBDFN",101,0)
 ;
"RTN","IBDFN",102,0)
ELIG2Q Q
"RTN","IBDFN",103,0)
 ;
"RTN","IBDFN",104,0)
SETARY(ARY,CNT,TEXT) ; -- build array
"RTN","IBDFN",105,0)
 S CNT=CNT+1
"RTN","IBDFN",106,0)
 S @ARY@("DPT SC HIDDEN TREATMENT QUESTIONS",CNT)=TEXT
"RTN","IBDFN",107,0)
 Q
"RTN","IBDFN1")
0^194^B2746299
"RTN","IBDFN1",1,0)
IBDFN1 ;ALB/CJM - ENCOUNTER FORM - INTERFACE ROUTINES ;NOV 16,1992
"RTN","IBDFN1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFN1",3,0)
CLINIC ;returns clinic name
"RTN","IBDFN1",4,0)
 S @IBARY=$S($G(IBCLINIC):$P($G(^SC(IBCLINIC,0)),"^",1),1:"UNSPECIFIED")
"RTN","IBDFN1",5,0)
 Q
"RTN","IBDFN1",6,0)
DIVISION ;returns the name of the division of IBCLINIC in ien^name format
"RTN","IBDFN1",7,0)
 Q:'$G(IBCLINIC)
"RTN","IBDFN1",8,0)
 S @IBARY=$P($$DIVISION^IBDF1B5(+IBCLINIC),"^",2)
"RTN","IBDFN1",9,0)
 Q
"RTN","IBDFN1",10,0)
INST ;returns the name of the institution of IBCLINIC
"RTN","IBDFN1",11,0)
 Q:'$G(IBCLINIC)
"RTN","IBDFN1",12,0)
 N INST
"RTN","IBDFN1",13,0)
 S INST=$P($G(^SC(IBCLINIC,0)),"^",4)
"RTN","IBDFN1",14,0)
 I 'INST S INST=+$$DIVISION^IBDF1B5(+IBCLINIC) S:INST INST=$P($$SITE^VASITE(,INST),"^")
"RTN","IBDFN1",15,0)
 S:INST INST=$$GET1^DIQ(4,INST,.01)
"RTN","IBDFN1",16,0)
 S @IBARY=INST
"RTN","IBDFN1",17,0)
 Q
"RTN","IBDFN1",18,0)
 ;
"RTN","IBDFN1",19,0)
SAMEDAY ;get all future, same day appts
"RTN","IBDFN1",20,0)
 N TO
"RTN","IBDFN1",21,0)
 S TO=(IBAPPT\1)+.999999
"RTN","IBDFN1",22,0)
 D GETAPPTS(TO)
"RTN","IBDFN1",23,0)
 Q
"RTN","IBDFN1",24,0)
 ;
"RTN","IBDFN1",25,0)
ALLFUTR ;get all future appts
"RTN","IBDFN1",26,0)
 D GETAPPTS()
"RTN","IBDFN1",27,0)
 Q
"RTN","IBDFN1",28,0)
 ;
"RTN","IBDFN1",29,0)
CLNCFUTR ;get all future appts for the same clinic
"RTN","IBDFN1",30,0)
 Q:'$G(IBCLINIC)
"RTN","IBDFN1",31,0)
 D GETAPPTS("",IBCLINIC)
"RTN","IBDFN1",32,0)
 Q
"RTN","IBDFN1",33,0)
 ;
"RTN","IBDFN1",34,0)
GETAPPTS(TO,CLINIC) ;
"RTN","IBDFN1",35,0)
 Q:'$G(DFN)!('$G(IBAPPT))
"RTN","IBDFN1",36,0)
 N CNT,SUB,NODE,TIME
"RTN","IBDFN1",37,0)
 K VASD,VADPT
"RTN","IBDFN1",38,0)
 S VASD("F")=IBAPPT
"RTN","IBDFN1",39,0)
 S:$G(TO) VASD("T")=TO
"RTN","IBDFN1",40,0)
 S:$G(CLINIC) VASD("C",CLINIC)=""
"RTN","IBDFN1",41,0)
 D SDA^VADPT
"RTN","IBDFN1",42,0)
 I '$G(VAERR) S (SUB,CNT)=0 F  S SUB=$O(^UTILITY("VASD",$J,SUB)) Q:'SUB  D
"RTN","IBDFN1",43,0)
 .S NODE=$G(^UTILITY("VASD",$J,SUB,"E")) Q:NODE=""
"RTN","IBDFN1",44,0)
 .S CNT=CNT+1
"RTN","IBDFN1",45,0)
 .S TIME=$P(NODE,"^",1)
"RTN","IBDFN1",46,0)
 .S @IBARY@(CNT)=$P(TIME,"@",1)_"^"_$P(TIME,"@",2)_"^"_NODE
"RTN","IBDFN1",47,0)
 K ^UTILITY("VASD",$J),VADPT,VASD,VAERR
"RTN","IBDFN1",48,0)
 Q
"RTN","IBDFN10")
0^195^B7926856
"RTN","IBDFN10",1,0)
IBDFN10 ;ALB/AAS - ENCOUNTER FORM - (selection routines - mostly for PCE files) ; 5-Jun-95
"RTN","IBDFN10",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFN10",3,0)
 ;
"RTN","IBDFN10",4,0)
LOOK(DIC,SCREEN) ; -- Look up entry
"RTN","IBDFN10",5,0)
 I +$G(DIC)<1 Q
"RTN","IBDFN10",6,0)
 S DIC(0)="AEMQZ",DIC("S")=$G(SCREEN) D ^DIC K DIC
"RTN","IBDFN10",7,0)
 Q
"RTN","IBDFN10",8,0)
 ;
"RTN","IBDFN10",9,0)
EDTOP ; -- select Education Topics (from file 9999999.09)
"RTN","IBDFN10",10,0)
 N X,Y,SCREEN
"RTN","IBDFN10",11,0)
 I '$D(@IBARY@("SCREEN")) D EDSCRN
"RTN","IBDFN10",12,0)
 S SCREEN=$G(@IBARY@("SCREEN"))
"RTN","IBDFN10",13,0)
 D LOOK(9999999.09,SCREEN) I +Y<1 K @IBARY Q  ;kill if nothing selected
"RTN","IBDFN10",14,0)
 S @IBARY=+Y_"^"_$P(Y(0),"^",1,2)
"RTN","IBDFN10",15,0)
 Q
"RTN","IBDFN10",16,0)
EDSCRN ;
"RTN","IBDFN10",17,0)
 S @IBARY@("SCREEN")="I '$P(^(0),U,3)"
"RTN","IBDFN10",18,0)
 Q
"RTN","IBDFN10",19,0)
 ;
"RTN","IBDFN10",20,0)
IMM ; -- select Immunizations (from file 9999999.14)
"RTN","IBDFN10",21,0)
 N X,Y,SCREEN
"RTN","IBDFN10",22,0)
 I '$D(@IBARY@("SCREEN")) D IMSCRN
"RTN","IBDFN10",23,0)
 S SCREEN=$G(@IBARY@("SCREEN"))
"RTN","IBDFN10",24,0)
 D LOOK(9999999.14,SCREEN) I +Y<1 K @IBARY Q  ;kill if nothing selected
"RTN","IBDFN10",25,0)
 S @IBARY=+Y_"^"_$P(Y(0),"^",1,3)
"RTN","IBDFN10",26,0)
 Q
"RTN","IBDFN10",27,0)
IMSCRN ;
"RTN","IBDFN10",28,0)
 S @IBARY@("SCREEN")="I '$P(^(0),U,7)"
"RTN","IBDFN10",29,0)
 Q
"RTN","IBDFN10",30,0)
 ;
"RTN","IBDFN10",31,0)
EXAM ; -- select Exams (from file 9999999.15)
"RTN","IBDFN10",32,0)
 N X,Y,SCREEN
"RTN","IBDFN10",33,0)
 I '$D(@IBARY@("SCREEN")) D EXSCRN
"RTN","IBDFN10",34,0)
 S SCREEN=$G(@IBARY@("SCREEN"))
"RTN","IBDFN10",35,0)
 D LOOK(9999999.15,SCREEN) I +Y<1 K @IBARY Q  ;kill if nothing selected
"RTN","IBDFN10",36,0)
 S @IBARY=+Y_"^"_$P(Y(0),"^",1,3)
"RTN","IBDFN10",37,0)
 Q
"RTN","IBDFN10",38,0)
EXSCRN ;
"RTN","IBDFN10",39,0)
 S @IBARY@("SCREEN")="I '$P(^(0),U,4)"
"RTN","IBDFN10",40,0)
 Q
"RTN","IBDFN10",41,0)
 ;
"RTN","IBDFN10",42,0)
TRTMNT ; -- select treatments (from file 9999999.17)
"RTN","IBDFN10",43,0)
 N X,Y,SCREEN
"RTN","IBDFN10",44,0)
 I '$D(@IBARY@("SCREEN")) D TRSCRN
"RTN","IBDFN10",45,0)
 S SCREEN=$G(@IBARY@("SCREEN"))
"RTN","IBDFN10",46,0)
 D LOOK(9999999.17,SCREEN) I +Y<1 K @IBARY Q  ;kill if nothing selected
"RTN","IBDFN10",47,0)
 S @IBARY=+Y_"^"_$P(Y(0),"^",1,2)
"RTN","IBDFN10",48,0)
 Q
"RTN","IBDFN10",49,0)
TRSCRN ;
"RTN","IBDFN10",50,0)
 S @IBARY@("SCREEN")="I '$P(^(0),U,4)"
"RTN","IBDFN10",51,0)
 Q
"RTN","IBDFN10",52,0)
 ;
"RTN","IBDFN10",53,0)
SKINTST ; -- select Skin Tests (from file 9999999.28)
"RTN","IBDFN10",54,0)
 N X,Y,SCREEN
"RTN","IBDFN10",55,0)
 I '$D(@IBARY@("SCREEN")) D SKSCRN
"RTN","IBDFN10",56,0)
 S SCREEN=$G(@IBARY@("SCREEN"))
"RTN","IBDFN10",57,0)
 D LOOK(9999999.28,SCREEN) I +Y<1 K @IBARY Q  ;kill if nothing selected
"RTN","IBDFN10",58,0)
 S @IBARY=+Y_"^"_$P(Y(0),"^",1,2)
"RTN","IBDFN10",59,0)
 Q
"RTN","IBDFN10",60,0)
SKSCRN ;
"RTN","IBDFN10",61,0)
 S @IBARY@("SCREEN")="I '$P(^(0),U,3)"
"RTN","IBDFN10",62,0)
 Q
"RTN","IBDFN10",63,0)
 ;
"RTN","IBDFN10",64,0)
HF ; -- select Health Factors (from file 9999999.64)
"RTN","IBDFN10",65,0)
 N X,Y,SCREEN
"RTN","IBDFN10",66,0)
 I '$D(@IBARY@("SCREEN")) D HFSCRN
"RTN","IBDFN10",67,0)
 S SCREEN=$G(@IBARY@("SCREEN"))
"RTN","IBDFN10",68,0)
 D LOOK(9999999.64,SCREEN) I +Y<1 K @IBARY Q  ;kill if nothing selected
"RTN","IBDFN10",69,0)
 S @IBARY=+Y_"^"_$P(Y(0),"^",1,5)
"RTN","IBDFN10",70,0)
 Q
"RTN","IBDFN10",71,0)
HFSCRN ;
"RTN","IBDFN10",72,0)
 S @IBARY@("SCREEN")="I '$P(^(0),U,10),$P(^(0),U,10)=""F"""
"RTN","IBDFN10",73,0)
 Q
"RTN","IBDFN10",74,0)
 ;
"RTN","IBDFN10",75,0)
CHECKOUT ;other visit dispositions than checkout
"RTN","IBDFN10",76,0)
 ;the PCE GDI does not accept this now,but it may in the future
"RTN","IBDFN10",77,0)
 K DIR S DIR(0)="SO^1:No-show;2:Cancel;3:Rescheduled"
"RTN","IBDFN10",78,0)
 S DIR("A")="APPOINTMENT DISPOSITION TYPE"
"RTN","IBDFN10",79,0)
 D ^DIR
"RTN","IBDFN10",80,0)
 I $D(DIRUT) K @IBARY Q  ;kill if nothing selected
"RTN","IBDFN10",81,0)
 S @IBARY=+Y_"^"_$S(+Y=1:"No-show",+Y=2:"Cancel",+Y=3:"Rescheduled",1:"")
"RTN","IBDFN10",82,0)
 K DIR
"RTN","IBDFN10",83,0)
 Q
"RTN","IBDFN11")
0^383^B4317722
"RTN","IBDFN11",1,0)
IBDFN11 ;ALB/CMR - ENCOUNTER FORM - (entry points for reprint of dynamic data) ;5/21/93
"RTN","IBDFN11",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFN11",3,0)
 ;
"RTN","IBDFN11",4,0)
REPRINT(IBPFID,LIST,ARY) ; -- returns dynamic lists previously printed on a form
"RTN","IBDFN11",5,0)
 ; -- input    IBPFID = ien of forms tracking file
"RTN","IBDFN11",6,0)
 ;             LIST = ien of selection list file
"RTN","IBDFN11",7,0)
 ;             ARY = name of array to return list in
"RTN","IBDFN11",8,0)
 ;
"RTN","IBDFN11",9,0)
 ; -- output   The format of the returned array is as follows:
"RTN","IBDFN11",10,0)
 ;            @ARY(0) = count of array element (0 if nothing found)
"RTN","IBDFN11",11,0)
 ;            @ARY(1) = provider ien^provider
"RTN","IBDFN11",12,0)
 ;         or @ARY(1) = problem ien^problem text^ICD code
"RTN","IBDFN11",13,0)
 ;         or @ARY(1) = classification question
"RTN","IBDFN11",14,0)
 ;
"RTN","IBDFN11",15,0)
 Q:'IBPFID!('LIST)
"RTN","IBDFN11",16,0)
 N FID,ITEM,IBDIEN,NODE,COUNT
"RTN","IBDFN11",17,0)
 ; -- initialize counter
"RTN","IBDFN11",18,0)
 S COUNT=0
"RTN","IBDFN11",19,0)
 ; -- clean out storage area
"RTN","IBDFN11",20,0)
 K @ARY
"RTN","IBDFN11",21,0)
 ; -- get field ids associated with this list
"RTN","IBDFN11",22,0)
 S FID="S"_LIST
"RTN","IBDFN11",23,0)
 S XREF=$S($O(^IBD(357.96,IBPFID,"AD",FID))[LIST:"AD",$O(^IBD(357.96,IBPFID,"AC",FID))[LIST:"AC",1:"") Q:XREF']""
"RTN","IBDFN11",24,0)
 S FID=$O(^IBD(357.96,IBPFID,XREF,FID)) Q:FID'[LIST  D
"RTN","IBDFN11",25,0)
 .; -- get all items for the field id
"RTN","IBDFN11",26,0)
 .S ITEM=0 F  S ITEM=$O(^IBD(357.96,IBPFID,XREF,FID,ITEM)) Q:'ITEM  D
"RTN","IBDFN11",27,0)
 ..; -- get ien for dynamic data entry
"RTN","IBDFN11",28,0)
 ..S IBDIEN=0 F  S IBDIEN=$O(^IBD(357.96,IBPFID,XREF,FID,ITEM,IBDIEN)) Q:'IBDIEN  S NODE=$S(XREF="AD":$G(^IBD(357.96,IBPFID,2,IBDIEN,0)),1:$G(^IBD(357.96,IBPFID,1,IBDIEN,0))) I NODE]"" D
"RTN","IBDFN11",29,0)
 ...; -- set output array with dynamic data previously printed
"RTN","IBDFN11",30,0)
 ...S COUNT=COUNT+1
"RTN","IBDFN11",31,0)
 ...S @ARY@(COUNT)=$P(NODE,"^",4)_"^"_$P(NODE,"^",8)_"^"_$S(ARY["GMP SELECT PATIENT ACTIVE PROBLEMS":$P($G(^ICD9(+$G(^AUPNPROB(+$P(NODE,"^",4),0)),0)),"^"),1:"")
"RTN","IBDFN11",32,0)
 S @ARY@(0)=COUNT
"RTN","IBDFN11",33,0)
 Q
"RTN","IBDFN12")
0^196^B6233980
"RTN","IBDFN12",1,0)
IBDFN12 ;ALB/CJM - ENCOUNTER FORM - SELECTORS;MAY 10, 1995
"RTN","IBDFN12",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFN12",3,0)
 ;
"RTN","IBDFN12",4,0)
LOOKUP(FILE,SCREEN,X,NODE) ;
"RTN","IBDFN12",5,0)
 ; -- lookup X in file using SCREEN
"RTN","IBDFN12",6,0)
 ; -- kills X if lookup not successful, else sets X to the ien and returns NODE as the 0 node
"RTN","IBDFN12",7,0)
 ; -- pass X and NODE by reference
"RTN","IBDFN12",8,0)
 ;
"RTN","IBDFN12",9,0)
 I +$G(FILE)<1 K X Q
"RTN","IBDFN12",10,0)
 N Y
"RTN","IBDFN12",11,0)
 S (NODE,Y)=""
"RTN","IBDFN12",12,0)
 K DIC S DIC=FILE,DIC("S")=SCREEN
"RTN","IBDFN12",13,0)
 S DIC(0)="EMQZ"
"RTN","IBDFN12",14,0)
 I $D(^DIC(FILE)) D ^DIC K DIC
"RTN","IBDFN12",15,0)
 I +Y>0 D
"RTN","IBDFN12",16,0)
 .S X=Y,NODE=Y(0)
"RTN","IBDFN12",17,0)
 E  K X
"RTN","IBDFN12",18,0)
 Q
"RTN","IBDFN12",19,0)
 ;
"RTN","IBDFN12",20,0)
SLCTCPT(X) ;for CPT codes
"RTN","IBDFN12",21,0)
 ;pass X by reference
"RTN","IBDFN12",22,0)
 ;example of use: D SLCTCPT^IBDFN12(.X)
"RTN","IBDFN12",23,0)
 ;
"RTN","IBDFN12",24,0)
 N NODE
"RTN","IBDFN12",25,0)
 D LOOKUP(81,"I '$P(^(0),U,4)",.X,.NODE)
"RTN","IBDFN12",26,0)
 I $D(X) S IBLABEL=$P(NODE,"^",2),(IBID,X)=$P(NODE,"^",1)
"RTN","IBDFN12",27,0)
 Q
"RTN","IBDFN12",28,0)
 ;
"RTN","IBDFN12",29,0)
SLCTDX(X) ;for ICD9 diagnosis codes
"RTN","IBDFN12",30,0)
 ;pass X by reference
"RTN","IBDFN12",31,0)
 ;example of use: D SLCTICD^IBDFN12(.X)
"RTN","IBDFN12",32,0)
 ;
"RTN","IBDFN12",33,0)
 N NODE
"RTN","IBDFN12",34,0)
 D LOOKUP(80,"I '$P(^(0),U,9)",.X,.NODE)
"RTN","IBDFN12",35,0)
 I $D(X) S IBLABEL=$P(NODE,"^",3),(IBID,X)=$P(NODE,"^",1)
"RTN","IBDFN12",36,0)
 Q
"RTN","IBDFN12",37,0)
 ;
"RTN","IBDFN12",38,0)
SLCTVST(X) ;for VISIT TYPE codes
"RTN","IBDFN12",39,0)
 ;pass X by reference
"RTN","IBDFN12",40,0)
 ;example of use: D SLCTVST^IBDFN12(.X)
"RTN","IBDFN12",41,0)
 ;
"RTN","IBDFN12",42,0)
 N NODE
"RTN","IBDFN12",43,0)
 D LOOKUP(357.69,"I '$P(^(0),U,4)",.X,.NODE)
"RTN","IBDFN12",44,0)
 I $G(X) S NODE=$G(^ICPT(+NODE,0)),(IBID,X)=$P(NODE,"^"),IBLABEL=$P(NODE,"^",2)
"RTN","IBDFN12",45,0)
 Q
"RTN","IBDFN12",46,0)
 ;
"RTN","IBDFN12",47,0)
SLCTED(X) ;for Education Topics
"RTN","IBDFN12",48,0)
 ;pass X by reference
"RTN","IBDFN12",49,0)
 ;example of use: D SLCTED^IBDFN12(.X)
"RTN","IBDFN12",50,0)
 ;
"RTN","IBDFN12",51,0)
 N NODE
"RTN","IBDFN12",52,0)
 D LOOKUP(9999999.09,"",.X,.NODE)
"RTN","IBDFN12",53,0)
 I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
"RTN","IBDFN12",54,0)
 Q
"RTN","IBDFN12",55,0)
 ;
"RTN","IBDFN12",56,0)
SLCTIMM(X) ;for Immunizations
"RTN","IBDFN12",57,0)
 ;pass X by reference
"RTN","IBDFN12",58,0)
 ;example of use: D SLCTIMM^IBDFN12(.X)
"RTN","IBDFN12",59,0)
 ;
"RTN","IBDFN12",60,0)
 N NODE
"RTN","IBDFN12",61,0)
 D LOOKUP(9999999.14,"",.X,.NODE)
"RTN","IBDFN12",62,0)
 I $D(X) S IBLABEL=$P(NODE,"^",2),IBID=+X,X=IBLABEL
"RTN","IBDFN12",63,0)
 Q
"RTN","IBDFN12",64,0)
 ;
"RTN","IBDFN12",65,0)
SLCTEX(X) ;for Exams
"RTN","IBDFN12",66,0)
 ;pass X by reference
"RTN","IBDFN12",67,0)
 ;example of use: D SLCTEX^IBDFN12(.X)
"RTN","IBDFN12",68,0)
 ;
"RTN","IBDFN12",69,0)
 N NODE
"RTN","IBDFN12",70,0)
 D LOOKUP(9999999.15,"",.X,.NODE)
"RTN","IBDFN12",71,0)
 I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
"RTN","IBDFN12",72,0)
 Q
"RTN","IBDFN12",73,0)
 ;
"RTN","IBDFN12",74,0)
SLCTSKN(X) ;for Skin Tests
"RTN","IBDFN12",75,0)
 ;pass X by reference
"RTN","IBDFN12",76,0)
 ;example of use: D SLCTSKN^IBDFN12(.X)
"RTN","IBDFN12",77,0)
 ;
"RTN","IBDFN12",78,0)
 N NODE
"RTN","IBDFN12",79,0)
 D LOOKUP(9999999.28,"",.X,.NODE)
"RTN","IBDFN12",80,0)
 I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
"RTN","IBDFN12",81,0)
 Q
"RTN","IBDFN12",82,0)
 ;
"RTN","IBDFN12",83,0)
SLCTHF(X) ;for Health Factores
"RTN","IBDFN12",84,0)
 ;pass X by reference
"RTN","IBDFN12",85,0)
 ;example of use: D SLCTHF^IBDFN12(.X)
"RTN","IBDFN12",86,0)
 ;
"RTN","IBDFN12",87,0)
 N NODE
"RTN","IBDFN12",88,0)
 D LOOKUP(9999999.64,"I $P(^(0),U,10)=""F""",.X,.NODE)
"RTN","IBDFN12",89,0)
 I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
"RTN","IBDFN12",90,0)
 Q
"RTN","IBDFN12",91,0)
 ;
"RTN","IBDFN12",92,0)
SLCTYN(X) ;for selecting YES or NO
"RTN","IBDFN12",93,0)
 ;
"RTN","IBDFN12",94,0)
 I "Yy"[$E(X) S X="YES",IBID=1 Q
"RTN","IBDFN12",95,0)
 I "Nn"[$E(X) S X="NO",IBID=0 Q
"RTN","IBDFN12",96,0)
 W "Enter YES or NO."
"RTN","IBDFN12",97,0)
 K X
"RTN","IBDFN12",98,0)
 Q
"RTN","IBDFN12",99,0)
 ;
"RTN","IBDFN12",100,0)
SLCTCLS(PI,X) ;for visit classification
"RTN","IBDFN12",101,0)
 ;pass X by reference
"RTN","IBDFN12",102,0)
 ;*NOTE: if interactive sets IBQUAL to the qualifier, IBLABEL to the recommended label, for use in the input template
"RTN","IBDFN12",103,0)
 ;example of use: D INPUTCLS^IBDFN12(PI,.X)
"RTN","IBDFN12",104,0)
 ;
"RTN","IBDFN12",105,0)
 N NODE
"RTN","IBDFN12",106,0)
 D LOOKUP(357.98,"I $$DQGOOD^IBDFU9(PI,Y)",.X,.NODE)
"RTN","IBDFN12",107,0)
 I $D(X) S IBID="",IBLABEL=$P(NODE,"^",3),IBQUAL=+X,X=$P(NODE,"^")
"RTN","IBDFN12",108,0)
 Q
"RTN","IBDFN13")
0^197^B118134
"RTN","IBDFN13",1,0)
IBDFN13 ;ALB/CJM - ENCOUNTER FORM - (input tranforms for AICS Data Types);MAY 10, 1995
"RTN","IBDFN13",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFN13",3,0)
 ;
"RTN","IBDFN13",4,0)
CKOUTTM(X,IBFORMID) ;adds the date to the time and puts in FM format- gets the date from IBFORMID("APPT")
"RTN","IBDFN13",5,0)
 ;pass X and IBFORMID by reference!!!
"RTN","IBDFN13",6,0)
 ;
"RTN","IBDFN13",7,0)
 S X=($G(IBFORMID("APPT"))\1)_"."_X
"RTN","IBDFN13",8,0)
 Q
"RTN","IBDFN13",9,0)
CKOUT(X) ;converts X to FM date and time
"RTN","IBDFN13",10,0)
 ;pass X by reference!
"RTN","IBDFN13",11,0)
 N %DT,Y
"RTN","IBDFN13",12,0)
 S %DT="NR"
"RTN","IBDFN13",13,0)
 D ^%DT
"RTN","IBDFN13",14,0)
 S X=Y
"RTN","IBDFN13",15,0)
 Q
"RTN","IBDFN14")
0^198^B5003154
"RTN","IBDFN14",1,0)
IBDFN14 ;ALB/CMR - ENCOUNTER FORM - OUTPUTS;JAN 4, 1996
"RTN","IBDFN14",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFN14",3,0)
 ;
"RTN","IBDFN14",4,0)
CPT(X) ; -- return external value, descr and active flag for CPT code
"RTN","IBDFN14",5,0)
 ; -- X passed equal to ien for cpt code
"RTN","IBDFN14",6,0)
 ;
"RTN","IBDFN14",7,0)
 Q:'X
"RTN","IBDFN14",8,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",9,0)
 I $G(^ICPT(X,0))]"" S IBID=$P(^(0),"^"),IBLABEL=$P(^(0),"^",2),IBINACT=$P(^(0),"^",4)
"RTN","IBDFN14",10,0)
 Q
"RTN","IBDFN14",11,0)
DX(X) ; -- return external value, descr and active flag for ICD9 diagnosis
"RTN","IBDFN14",12,0)
 ; -- pass X equal to ien for icd9 code
"RTN","IBDFN14",13,0)
 ;
"RTN","IBDFN14",14,0)
 Q:'X
"RTN","IBDFN14",15,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",16,0)
 I $G(^ICD9(X,0))]"" S IBID=$P(^(0),"^"),IBLABEL=$P(^(0),"^",3),IBINACT=$P(^(0),"^",9)
"RTN","IBDFN14",17,0)
 Q
"RTN","IBDFN14",18,0)
VST(X) ; -- return external value, descr and active flag for VISIT TYPE 
"RTN","IBDFN14",19,0)
 ; -- pass X equal to ien for visit type
"RTN","IBDFN14",20,0)
 ;
"RTN","IBDFN14",21,0)
 Q:'X
"RTN","IBDFN14",22,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",23,0)
 I $G(^IBE(357.69,X,0))]"",($G(^ICPT(X,0))]"") D
"RTN","IBDFN14",24,0)
 .S IBID=$P(^IBE(357.69,X,0),"^"),IBLABEL=$P(^(0),"^",3)
"RTN","IBDFN14",25,0)
 .S HDR=$P(^IBE(357.69,X,0),"^",2) I $L(HDR_IBLABEL)<75 S IBLABEL=HDR_" "_IBLABEL
"RTN","IBDFN14",26,0)
 .K HDR
"RTN","IBDFN14",27,0)
 .S IBINACT=$S($P(^IBE(357.69,X,0),"^",4):1,$P(^ICPT(X,0),"^",4):1,1:"")
"RTN","IBDFN14",28,0)
 Q
"RTN","IBDFN14",29,0)
ED(X) ; -- return descr and active flag for education topics
"RTN","IBDFN14",30,0)
 ; -- pass X equal to ien for education topic
"RTN","IBDFN14",31,0)
 ;
"RTN","IBDFN14",32,0)
 Q:'X
"RTN","IBDFN14",33,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",34,0)
 I $G(^AUTTEDT(X,0))]"" S IBID="ED TOPIC",IBLABEL=$P(^(0),"^"),IBINACT=$P(^(0),"^",3)
"RTN","IBDFN14",35,0)
 Q
"RTN","IBDFN14",36,0)
EXAM(X) ; -- return descr and active flag for exam
"RTN","IBDFN14",37,0)
 ; -- pass X equal to ien for exam
"RTN","IBDFN14",38,0)
 ;
"RTN","IBDFN14",39,0)
 Q:'X
"RTN","IBDFN14",40,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",41,0)
 I $G(^AUTTEXAM(X,0))]"" S IBID="EXAM",IBLABEL=$P(^(0),"^"),IBINACT=$P(^(0),"^",4)
"RTN","IBDFN14",42,0)
 Q
"RTN","IBDFN14",43,0)
HF(X) ; -- return descr and active flag for health factor
"RTN","IBDFN14",44,0)
 ; -- pass X equal to ien for health factor
"RTN","IBDFN14",45,0)
 ;
"RTN","IBDFN14",46,0)
 Q:'X
"RTN","IBDFN14",47,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",48,0)
 I $G(^AUTTHF(X,0))]"" S IBID="FACTOR",IBLABEL=$P(^(0),"^"),IBINACT=$P(^(0),"^",11)
"RTN","IBDFN14",49,0)
 Q
"RTN","IBDFN14",50,0)
IMMUN(X) ; -- return descr and active flag for immunization
"RTN","IBDFN14",51,0)
 ; -- pass X equal to ien for immunization
"RTN","IBDFN14",52,0)
 ;
"RTN","IBDFN14",53,0)
 Q:'X
"RTN","IBDFN14",54,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",55,0)
 I $G(^AUTTIMM(X,0))]"" S IBID="IMMUN",IBLABEL=$P(^(0),"^"),IBINACT=$P(^(0),"^",7)
"RTN","IBDFN14",56,0)
 Q
"RTN","IBDFN14",57,0)
ST(X) ; -- return descr and active flag for immunization
"RTN","IBDFN14",58,0)
 ; -- pass X equal to ien for immunization
"RTN","IBDFN14",59,0)
 ;
"RTN","IBDFN14",60,0)
 Q:'X
"RTN","IBDFN14",61,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",62,0)
 I $G(^AUTTSK(X,0))]"" S IBID="SKIN TEST",IBLABEL=$P(^(0),"^"),IBINACT=$P(^(0),"^",3)
"RTN","IBDFN14",63,0)
 Q
"RTN","IBDFN14",64,0)
YN(X) ; -- return descr
"RTN","IBDFN14",65,0)
 ; -- pass X equal to 1 or 0
"RTN","IBDFN14",66,0)
 ;
"RTN","IBDFN14",67,0)
 Q:X']""
"RTN","IBDFN14",68,0)
 S IBID="VALUE"
"RTN","IBDFN14",69,0)
 S (IBLABEL,IBINACT)=""
"RTN","IBDFN14",70,0)
 I X S IBLABEL="YES" Q
"RTN","IBDFN14",71,0)
 S IBLABEL="NO" Q
"RTN","IBDFN14",72,0)
 Q
"RTN","IBDFN2")
0^199^B16697465
"RTN","IBDFN2",1,0)
IBDFN2 ;ALB/CJM - ENCOUNTER FORM - INTERFACE ROUTINES ;NOV 16,1992
"RTN","IBDFN2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFN2",3,0)
APPT ;returns appt date@time^date^time
"RTN","IBDFN2",4,0)
 N Y
"RTN","IBDFN2",5,0)
 S Y="" I IBAPPT S Y=IBAPPT K %DT D DD^%DT
"RTN","IBDFN2",6,0)
 S @IBARY=Y_"^"_$P(Y,"@")_"^"_$P(Y,"@",2)
"RTN","IBDFN2",7,0)
 Q
"RTN","IBDFN2",8,0)
NOW ;returns date and time
"RTN","IBDFN2",9,0)
 ;FORMATS:
"RTN","IBDFN2",10,0)
 ; MMM DD, YYYY@HH:MM:SS at the "IB DATE@TIME" subscript
"RTN","IBDFN2",11,0)
 ; MMM DD,YYYY at the "IB DATE" subscript
"RTN","IBDFN2",12,0)
 ; HH:MM:SS at the "IB TIME" subscript      
"RTN","IBDFN2",13,0)
 N Y,%,%H,%I,X
"RTN","IBDFN2",14,0)
 D NOW^%DTC S Y=% K %DT D DD^%DT
"RTN","IBDFN2",15,0)
 S ^TMP("IB",$J,"INTERFACES",+$G(DFN),"IB CURRENT DATE@TIME")=Y
"RTN","IBDFN2",16,0)
 S ^TMP("IB",$J,"INTERFACES",+$G(DFN),"IB CURRENT TIME")=$P(Y,"@",2)
"RTN","IBDFN2",17,0)
 S ^TMP("IB",$J,"INTERFACES",+$G(DFN),"IB CURRENT DATE")=$P(Y,"@")
"RTN","IBDFN2",18,0)
 Q
"RTN","IBDFN2",19,0)
 ;
"RTN","IBDFN2",20,0)
SPSEMPLR ;returns spouse's employer,address, telephone
"RTN","IBDFN2",21,0)
 ;input variables - DFN
"RTN","IBDFN2",22,0)
 N ARY,CNT S CNT=1
"RTN","IBDFN2",23,0)
 S ARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN))"
"RTN","IBDFN2",24,0)
 S VAOA("A")=6 D OAD^VADPT
"RTN","IBDFN2",25,0)
 I VAERR S (@ARY@("DPT SPOUSE'S EMPLOYER NAME"),@ARY@("DPT SPOUSE'S EMPLOYER TELEPHONE"),@ARY@("DPT SPOUSE'S EMPLOYER ADDRESS LINES"))=""  Q
"RTN","IBDFN2",26,0)
 I VAOA(1)'="" S @ARY@("DPT SPOUSE'S EMPLOYER ADDRESS LINES",CNT)=VAOA(1),CNT=CNT+1
"RTN","IBDFN2",27,0)
 I VAOA(2)'="" S @ARY@("DPT SPOUSE'S EMPLOYER ADDRESS LINES",CNT)=VAOA(2),CNT=CNT+1
"RTN","IBDFN2",28,0)
 I VAOA(3)'="" S @ARY@("DPT SPOUSE'S EMPLOYER ADDRESS LINES",CNT)=VAOA(3),CNT=CNT+1
"RTN","IBDFN2",29,0)
 S @ARY@("DPT SPOUSE'S EMPLOYER ADDRESS LINES",CNT)=VAOA(4)_", "_$P(VAOA(5),"^",2)_" "_VAOA(6)
"RTN","IBDFN2",30,0)
 S @ARY@("DPT SPOUSE'S EMPLOYER TELEPHONE")=VAOA(8)
"RTN","IBDFN2",31,0)
 S @ARY@("DPT SPOUSE'S EMPLOYER NAME")=VAOA(9)
"RTN","IBDFN2",32,0)
 K VAOA,VAERR
"RTN","IBDFN2",33,0)
 Q
"RTN","IBDFN2",34,0)
EMPLOYER ;returns employer,address, telephone
"RTN","IBDFN2",35,0)
 ;input variables - DFN
"RTN","IBDFN2",36,0)
 N ARY,CNT S CNT=1
"RTN","IBDFN2",37,0)
 S ARY="^TMP(""IB"",$J,""INTERFACES"",DFN)"
"RTN","IBDFN2",38,0)
 S VAOA("A")=5 D OAD^VADPT
"RTN","IBDFN2",39,0)
 I VAERR S (@ARY@("DPT PATIENT'S EMPLOYER NAME"),@ARY@("DPT PATIENT'S EMPLOYER TELEPHONE"),@ARY@("DPT PATIENT'S EMPLOYER ADDRESS LINES"))=""  Q
"RTN","IBDFN2",40,0)
 I VAOA(1)'="" S @ARY@("DPT PATIENT'S EMPLOYER ADDRESS LINES",CNT)=VAOA(1),CNT=CNT+1
"RTN","IBDFN2",41,0)
 I VAOA(2)'="" S @ARY@("DPT PATIENT'S EMPLOYER ADDRESS LINES",CNT)=VAOA(2),CNT=CNT+1
"RTN","IBDFN2",42,0)
 I VAOA(3)'="" S @ARY@("DPT PATIENT'S EMPLOYER ADDRESS LINES",CNT)=VAOA(3),CNT=CNT+1
"RTN","IBDFN2",43,0)
 S @ARY@("DPT PATIENT'S EMPLOYER ADDRESS LINES",CNT)=VAOA(4)_", "_$P(VAOA(5),"^",2)_" "_VAOA(6)
"RTN","IBDFN2",44,0)
 S @ARY@("DPT PATIENT'S EMPLOYER TELEPHONE")=VAOA(8)
"RTN","IBDFN2",45,0)
 S @ARY@("DPT PATIENT'S EMPLOYER NAME")=VAOA(9)
"RTN","IBDFN2",46,0)
 K VAOA,VAERR
"RTN","IBDFN2",47,0)
 Q
"RTN","IBDFN2",48,0)
MT ;returns means test data
"RTN","IBDFN2",49,0)
 N Y,RET,GET
"RTN","IBDFN2",50,0)
 S GET=$$LST^DGMTU(DFN)
"RTN","IBDFN2",51,0)
 S RET=$P(GET,"^",3)_"^"
"RTN","IBDFN2",52,0)
 S Y=$P(GET,"^",2) D DD^%DT
"RTN","IBDFN2",53,0)
 S RET=RET_Y_"^"_$P(GET,"^",4)
"RTN","IBDFN2",54,0)
 S @IBARY=RET
"RTN","IBDFN2",55,0)
 Q
"RTN","IBDFN2",56,0)
ALLERGY ;outputs a list of the patient's allergies
"RTN","IBDFN2",57,0)
 ;piece #1=allergy name,#2=type of allergy(FOOD/DRUG/OTHER),#3=type of allergy(F/D/O),#4=VERFIED?(YES/NO),#5=TRUE ALLERGEN(YES/NO)
"RTN","IBDFN2",58,0)
 N GMRA,GMRAL,NODE,I,COUNT,TYPE
"RTN","IBDFN2",59,0)
 D:$L($T(GMRADPT^GMRADPT)) ^GMRADPT
"RTN","IBDFN2",60,0)
 S (COUNT,I)=0 F  S I=$O(GMRAL(I)) Q:'I  D
"RTN","IBDFN2",61,0)
 .S COUNT=COUNT+1
"RTN","IBDFN2",62,0)
 .S NODE=$G(GMRAL(I))
"RTN","IBDFN2",63,0)
 .S TYPE=$P(NODE,"^",3)
"RTN","IBDFN2",64,0)
 .S @IBARY@(COUNT)=$P(NODE,"^",2)_"^"_$S(TYPE="D":"DRUG",TYPE="F":"FOOD",TYPE="O":"OTHER",1:"")_"^"_TYPE_"^"_$S($P(NODE,"^",4)=1:"YES",1:"NO")_"^"_$S($P(NODE,"^",5)=0:"YES",$P(NODE,"^",5)=1:"NO",1:"")
"RTN","IBDFN2",65,0)
 Q
"RTN","IBDFN2",66,0)
 ;
"RTN","IBDFN2",67,0)
PRMT ; -- print a 1010f if required or will expire in 357.09;.1 days
"RTN","IBDFN2",68,0)
 ;    called from print manger
"RTN","IBDFN2",69,0)
 ;    requires dfn, ibappt=appointment date
"RTN","IBDFN2",70,0)
 ;
"RTN","IBDFN2",71,0)
 N IBDMT,IBDMT1,IBDMT2,DGMTI,DGMTDT,DGMTYPT,DGOPT
"RTN","IBDFN2",72,0)
 S IBDMT1=$$LST^DGMTU(DFN,DT,1) ; means test
"RTN","IBDFN2",73,0)
 S IBDMT2=$$LST^DGMTU(DFN,DT,2) ; copay test
"RTN","IBDFN2",74,0)
 I IBDMT2="",IBDMT1="" G PRMTQ
"RTN","IBDFN2",75,0)
 S IBDMT=$S(IBDMT2="":IBDMT1,IBDMT1="":IBDMT2,$P(IBDMT1,"^",2)'<$P(IBDMT2,"^",2):IBDMT1,1:IBDMT2)
"RTN","IBDFN2",76,0)
 S DGMTYPT=$S(IBDMT=IBDMT2:2,1:1) ; set type of test
"RTN","IBDFN2",77,0)
 S DGMTI=+IBDMT,DGMTDT=$P(IBDMT,"^",2)
"RTN","IBDFN2",78,0)
 S DGOPT=1 ;pretend were from registration, don't close device when done
"RTN","IBDFN2",79,0)
 S STATUS=$P(IBDMT,"^",4)
"RTN","IBDFN2",80,0)
 I $S(STATUS="R":0,STATUS="N":1,STATUS="L":1,STATUS="I":0,$$FMDIFF^XLFDT(IBAPPT,DGMTDT,1)>(365-$S($P($G(^IBD(357.09,1,0)),"^",10):$P(^(0),"^",10),1:30)):0,1:1) G PRMTQ ;not required within params
"RTN","IBDFN2",81,0)
 ;
"RTN","IBDFN2",82,0)
 D START^DGMTP
"RTN","IBDFN2",83,0)
PRMTQ Q
"RTN","IBDFN3")
0^200^B4841459
"RTN","IBDFN3",1,0)
IBDFN3 ;ALB/CJM - ENCOUNTER FORM - (entry points for reports);5/21/93
"RTN","IBDFN3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFN3",3,0)
RXPROF ;Outpatient Pharmacy Action Profile and Information Profile
"RTN","IBDFN3",4,0)
 ;INPUTS:
"RTN","IBDFN3",5,0)
 ;PSDAYS = number of days to print the medication profile for
"RTN","IBDFN3",6,0)
 ;PSTYPE=1 for the Action Profile, =0 for the Information Profile
"RTN","IBDFN3",7,0)
 ;DFN
"RTN","IBDFN3",8,0)
 ;
"RTN","IBDFN3",9,0)
 N IBDFN,ADDR,ADDRFL,CLASS,CNDT,DRUG,HDFL,I,II,J,L,LINE,P,PAGE,PSDOB,PSIIX,PSNAME,PSOI,PSSN,PSIX,PGM,PRF,PSDATE,VAL,VAR,RX,RX0,RX2,ST,ST0,PSDAY,RF,RFS
"RTN","IBDFN3",10,0)
 N PSOPRINT,X1,X2,ZTSK,X,Y,PSII,PSDT,LMI,PSCNT,PSDIS,RXCNTLN,ELN,FN,CNT,VAERR,LN,PCLASS,PSOIFSUP,PSOINST,PSOSITE
"RTN","IBDFN3",11,0)
 Q:(+$G(DFN)=0)
"RTN","IBDFN3",12,0)
 S IBDFN=DFN
"RTN","IBDFN3",13,0)
 S X1=DT,X2=-PSDAYS D C^%DTC S (PSDATE,PSDAY)=X
"RTN","IBDFN3",14,0)
 S LINE=$TR($J(" ",IOM)," ","-")
"RTN","IBDFN3",15,0)
 ;
"RTN","IBDFN3",16,0)
 ; -- turn on barcoding for action profiles create parameter and check
"RTN","IBDFN3",17,0)
 S PSOINST=$S($D(^DD("SITE",1)):$P(^(1),"^"),1:"000"),PSOPAR=1
"RTN","IBDFN3",18,0)
 S PAGE=1 D HD^PSOSD2,PAT^PSOSD
"RTN","IBDFN3",19,0)
 ;
"RTN","IBDFN3",20,0)
 ; -- print OTHER MED INSTRUCTIONS and DUE's create parameter and check
"RTN","IBDFN3",21,0)
 I PSTYPE,$L($T(RXPAD^PSOSD1)) D RXPAD^PSOSD1,ENSTUFF^PSODACT
"RTN","IBDFN3",22,0)
 W:$Y @IOF
"RTN","IBDFN3",23,0)
 ;
"RTN","IBDFN3",24,0)
 S DFN=IBDFN
"RTN","IBDFN3",25,0)
 K VA,VAEL,VAPA
"RTN","IBDFN3",26,0)
 Q
"RTN","IBDFN3",27,0)
 ;
"RTN","IBDFN3",28,0)
DRUGS ;prints the medication profile of Outpatient Pharmacy
"RTN","IBDFN3",29,0)
 ;doesn't seem to be needed, integration agreement not obtained to use this
"RTN","IBDFN3",30,0)
 ;INPUTS:
"RTN","IBDFN3",31,0)
 ;PLS=0 for long, 1 for short
"RTN","IBDFN3",32,0)
 ;PSRT="D" to sort by date, "M" to sort by medication, "C" to sort by class
"RTN","IBDFN3",33,0)
 ;DFN
"RTN","IBDFN3",34,0)
 ;
"RTN","IBDFN3",35,0)
 ;N IBDFN,DRUG,ZII,PHYS,CT,AL,I1,REF,LMI,PI,FN,Y,I,J,RX,DRX,ST,RX0,RX2,DA,D0,DIC,DIPGM,II,K,ST0,TEMP,Z,LMI,RXD,RXF,PI,AL,D0,DIPGM,II,PSCNT,PSDIV,PSLC,PSDIS
"RTN","IBDFN3",36,0)
 ;
"RTN","IBDFN3",37,0)
 ;S (FN,IBDFN,D0,DA)=DFN
"RTN","IBDFN3",38,0)
 ;I '$D(^PS(55,IBDFN,"P")),'$D(^("ARC")) D ^PSODEM W !?20,"NO PHARMACY INFORMATION" G RXQ
"RTN","IBDFN3",39,0)
 ;I '$O(^PS(55,IBDFN,"P",0)),$D(^PS(55,IBDFN,"ARC")) D ^PSODEM W !!,"PATIENT HAS ARCHIVED PRESCRIPTIONS",! G RXQ
"RTN","IBDFN3",40,0)
 ;D P^PSOP
"RTN","IBDFN3",41,0)
RXQ ;W @IOF
"RTN","IBDFN3",42,0)
 ;S DFN=IBDFN
"RTN","IBDFN3",43,0)
 ;K ^UTILITY($J)
"RTN","IBDFN3",44,0)
 Q
"RTN","IBDFN3",45,0)
ROUTING ;entry point for printing a routing sheet for a single patient
"RTN","IBDFN3",46,0)
 ;Sets IBPRINT=1 so that it will be known that this entry point was used
"RTN","IBDFN3",47,0)
 ;inputs - 
"RTN","IBDFN3",48,0)
 ;    DFN
"RTN","IBDFN3",49,0)
 ;    IBAPPT - the appointment
"RTN","IBDFN3",50,0)
 ;    IBCLINIC - pointer to the clinic
"RTN","IBDFN3",51,0)
 ;protect variables that may be changed
"RTN","IBDFN3",52,0)
 N %,%DT,%I,ADDR,ALL,APDATE,IBDFN,DGMT,DIC,DIV,G,GDATE,H,I,J,K,L,LL,M,NAME,NDATE,ORD,ORDER,P,POP,PRDATE
"RTN","IBDFN3",53,0)
 N SC,SDA,SDATE,SDCNT,SDI,SDI1,SDIQ,SDM,SDREP,SDSP,SDSTART,SDVA,SDX,SDX1,SSN,SZ,TDO,X,X1,Y,ZIP,ZX,VAR,C,V,SDEF,A,SD,SCN,SDTD,SDSCCOND,SDPARMS
"RTN","IBDFN3",54,0)
 ;
"RTN","IBDFN3",55,0)
 ;protect DFN
"RTN","IBDFN3",56,0)
 Q:(+$G(DFN)=0)
"RTN","IBDFN3",57,0)
 S IBDFN=DFN N DFN S DFN=IBDFN
"RTN","IBDFN3",58,0)
 ;
"RTN","IBDFN3",59,0)
 ;set the start date to the date of the appt
"RTN","IBDFN3",60,0)
 S SDPARMS("START")=IBAPPT\1
"RTN","IBDFN3",61,0)
 ;keep the device open
"RTN","IBDFN3",62,0)
 S SDPARMS("DO NOT CLOSE")=1
"RTN","IBDFN3",63,0)
 ;set DIV to the division of IBCLINIC
"RTN","IBDFN3",64,0)
 S DIV=$P($G(^SC(IBCLINIC,0)),"^",15)
"RTN","IBDFN3",65,0)
 D EN1^SDROUT1
"RTN","IBDFN3",66,0)
 Q
"RTN","IBDFN4")
0^201^B6656679
"RTN","IBDFN4",1,0)
IBDFN4 ;ALB/CJM - ENCOUNTER FORM - (entry points for selection routines);5/21/93
"RTN","IBDFN4",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFN4",3,0)
 ;
"RTN","IBDFN4",4,0)
CPT ;select ambulatory procedures
"RTN","IBDFN4",5,0)
 N NAME,CODE,SCREEN,IBDESCR,QUIT
"RTN","IBDFN4",6,0)
 S QUIT=0
"RTN","IBDFN4",7,0)
 I '$D(@IBARY@("SCREEN")) D CPTSCRN Q:QUIT
"RTN","IBDFN4",8,0)
 E  S SCREEN=$G(@IBARY@("SCREEN"))
"RTN","IBDFN4",9,0)
 K DIC S DIC=81,DIC(0)="AEMQZ",DIC("S")=SCREEN
"RTN","IBDFN4",10,0)
 I $D(^ICPT) D ^DIC K DIC I +Y>0 D
"RTN","IBDFN4",11,0)
 .S CODE=$P(Y(0),U),NAME=$P(Y(0),U,2),IBDESCR=$G(^ICPT(+Y,"D",1,0))_" "_$G(^ICPT(+Y,"D",2,0))
"RTN","IBDFN4",12,0)
 .S @IBARY=CODE_"^"_NAME_"^"_IBDESCR
"RTN","IBDFN4",13,0)
 E  K @IBARY ;kill either if file doesn't exist or nothing chosen
"RTN","IBDFN4",14,0)
 Q
"RTN","IBDFN4",15,0)
CPTSCRN ;
"RTN","IBDFN4",16,0)
 S SCREEN="I '$P(^(0),U,4)"
"RTN","IBDFN4",17,0)
 ;
"RTN","IBDFN4",18,0)
 ;don't ask the user about categories - it doesn't work well 
"RTN","IBDFN4",19,0)
 ;K DIR S DIR(0)="YA",DIR("A")="Do you want to select a CPT from a particular CPT category? ",DIR("?")="Answer YES if you want to screen out all CPT codes that do not belong to a particular category",DIR("B")="NO"
"RTN","IBDFN4",20,0)
 ;I $D(^DIC(81.1)) D ^DIR K DIR S:$D(DIRUT) QUIT=1 Q:$D(DIRUT)  I +Y D
"RTN","IBDFN4",21,0)
 ;.K DIC S DIC="81.1",DIC(0)="AEQ",DIC("S")="I $P(^(0),U,2)=""m"""
"RTN","IBDFN4",22,0)
 ;.D ^DIC K DIC I +Y>0 S SCREEN=SCREEN_",$P($G(^DIC(81.1,+$P(^(0),U,3),0)),U,3)="_+Y
"RTN","IBDFN4",23,0)
 S @IBARY@("SCREEN")=SCREEN
"RTN","IBDFN4",24,0)
 Q
"RTN","IBDFN4",25,0)
 ;
"RTN","IBDFN4",26,0)
ICD9 ;select ICD-9 codes
"RTN","IBDFN4",27,0)
 N IBDX,CODE,SCREEN,IBDESCR,QUIT
"RTN","IBDFN4",28,0)
 S QUIT=0
"RTN","IBDFN4",29,0)
 I $D(@IBARY@("SCREEN")) S SCREEN=$G(@IBARY@("SCREEN"))
"RTN","IBDFN4",30,0)
 E  D ICD9SCRN Q:QUIT
"RTN","IBDFN4",31,0)
 S DIC=80,DIC(0)="AEMQZI",DIC("S")=SCREEN
"RTN","IBDFN4",32,0)
 I $D(^ICD9) D ^DIC K DIC I +Y>0 D
"RTN","IBDFN4",33,0)
 .S CODE=$P(Y(0),U),IBDX=$P(Y(0),U,3),IBDESCR=$P($G(^ICD9(+Y,1)),"^")
"RTN","IBDFN4",34,0)
 .S @IBARY=CODE_"^"_IBDX_"^"_IBDESCR
"RTN","IBDFN4",35,0)
 E  K @IBARY ;kill if either file doesn't exist or nothing chosen - this is how to let the encounter form utilities know nothing was selected
"RTN","IBDFN4",36,0)
 Q
"RTN","IBDFN4",37,0)
ICD9SCRN ;
"RTN","IBDFN4",38,0)
 S SCREEN="I '$P(^(0),U,9)"
"RTN","IBDFN4",39,0)
 ;
"RTN","IBDFN4",40,0)
 ;don't ask the user about categories - it doesn't work well 
"RTN","IBDFN4",41,0)
 ;K DIR S DIR(0)="YA",DIR("A")="Do you want to select an ICD diagnosis from a particular diagnostic category? ",DIR("B")="NO"
"RTN","IBDFN4",42,0)
 ;S DIR("?")="Answer YES if you want to screen out all diagnosis codes that do not belong to a particular category"
"RTN","IBDFN4",43,0)
 ;I $D(^DIC(80.3)) D ^DIR K DIR S:$D(DIRUT) QUIT=1 Q:$D(DIRUT)  I +Y D
"RTN","IBDFN4",44,0)
 ;.K DIC S DIC="80.3",DIC(0)="AEQ"
"RTN","IBDFN4",45,0)
 ;.D ^DIC K DIC I +Y>0 S SCREEN=SCREEN_",+$P(^(0),U,5)="_+Y
"RTN","IBDFN4",46,0)
 S @IBARY@("SCREEN")=SCREEN
"RTN","IBDFN4",47,0)
 Q
"RTN","IBDFN4",48,0)
NULL ;returns NOTHING for selection
"RTN","IBDFN4",49,0)
 S @IBARY=""
"RTN","IBDFN4",50,0)
 Q
"RTN","IBDFN4",51,0)
 ;
"RTN","IBDFN4",52,0)
VSIT ; -- Select only visit cpt codes
"RTN","IBDFN4",53,0)
 N NAME,CODE,IBDESCR,QUIT,DIC,X,Y,IBHDR,IBTXT
"RTN","IBDFN4",54,0)
 S QUIT=0
"RTN","IBDFN4",55,0)
 ;
"RTN","IBDFN4",56,0)
 S DIC="^IBE(357.69,",DIC(0)="AEMQZ",DIC("S")="I '$P(^(0),U,4)"
"RTN","IBDFN4",57,0)
 D ^DIC K DIC I +Y>0 D
"RTN","IBDFN4",58,0)
 .S CODE=$P(Y(0),U),IBHDR=$P(Y(0),U,2),IBTXT=$P(Y(0),U,3),IBSNM=$P($G(^ICPT(+Y,0)),"^",2)
"RTN","IBDFN4",59,0)
 .S @IBARY=CODE_"^"_IBTXT_"^"_IBHDR_"^"_IBSNM
"RTN","IBDFN4",60,0)
 E  K @IBARY ;kill if nothing chosen
"RTN","IBDFN4",61,0)
 Q
"RTN","IBDFN4",62,0)
 ;
"RTN","IBDFN4",63,0)
PRVDR ;for selecting provider
"RTN","IBDFN4",64,0)
 D GETPRO^IBDF18B(IBCLINIC,IBARY)
"RTN","IBDFN4",65,0)
 Q
"RTN","IBDFN4",66,0)
 ;
"RTN","IBDFN4",67,0)
IBPFID ;for printing the form # assigned by form tracking
"RTN","IBDFN4",68,0)
 S @IBARY=$G(IBPFID)
"RTN","IBDFN4",69,0)
 Q
"RTN","IBDFN4",70,0)
 ;
"RTN","IBDFN4",71,0)
PCPR ; -- get primary care provider for a patient
"RTN","IBDFN4",72,0)
 S @IBARY=$P($$OUTPTPR^SDUTL3(DFN,DT),"^",2)
"RTN","IBDFN4",73,0)
 Q
"RTN","IBDFN4",74,0)
 ;
"RTN","IBDFN4",75,0)
PCTM ; -- get primary care team for a patient
"RTN","IBDFN4",76,0)
 S @IBARY=$P($$OUTPTTM^SDUTL3(DFN,DT),"^",2)
"RTN","IBDFN4",77,0)
 Q
"RTN","IBDFN4",78,0)
 ;
"RTN","IBDFN4",79,0)
SCCOND ; -- display sc conditions
"RTN","IBDFN4",80,0)
 Q:'$G(DFN)
"RTN","IBDFN4",81,0)
 D DIS^DGRPDB
"RTN","IBDFN4",82,0)
 W !
"RTN","IBDFN4",83,0)
 Q
"RTN","IBDFN5")
0^202^B3933959
"RTN","IBDFN5",1,0)
IBDFN5 ;ALB/CJM - ENCOUNTER FORM - (entry points for used to print Health Summaries);6/16/93
"RTN","IBDFN5",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFN5",3,0)
 ;
"RTN","IBDFN5",4,0)
PRNTSMRY(GMTSTYP) ;prints the health summary
"RTN","IBDFN5",5,0)
 ;INPUTS:
"RTN","IBDFN5",6,0)
 ;DFN 
"RTN","IBDFN5",7,0)
 ;GMTSTYP is a ptr to the HEALTH SUMMARY TYPE file
"RTN","IBDFN5",8,0)
 ;
"RTN","IBDFN5",9,0)
 ;
"RTN","IBDFN5",10,0)
 ;check that required variables are defined
"RTN","IBDFN5",11,0)
 Q:'$G(GMTSTYP)!'$G(DFN)
"RTN","IBDFN5",12,0)
 I '$L($T(ENX^GMTSDVR)),$L($T(SELTYP1^GMTS)),$L($T(EN^GMTS1)) D
"RTN","IBDFN5",13,0)
 .;protect stuff that might be killed
"RTN","IBDFN5",14,0)
 .N S1,S2,S2,GMI,GMTSEG,GMTSEGI,GMI,GMTSTITL,GMTSCVD,GMTSICF,GMTSCKP,GMW,GMTSEGC
"RTN","IBDFN5",15,0)
 .N GMTSNPG,GMTSPG,GMTSQIT,GMTSHDR,GMTSHD2,GMTSBRK,GMTSLCMP,GMTSDTC,GMTSEGN,GMTSE,GMTSEGR,GMTSEQ,GMTSEGH,GMTSEGL,GMTSDLM,GMTSDLS,GMTSNDM,GMTSN,GMTSQ,GMTSQIT,ZTSK,GMTSDLS,GMTSN,GMTSDLM
"RTN","IBDFN5",16,0)
 .N %T,DIC,GMTS,GMTSLO,GMTSPNM,GMTSRB,GMTSWARD,GMTSDOB,X,Y,VA,VAIN,VAINDT,VADM,VAEL,VAPA,VAERR,GMTSSN,GMTS0,GMTS1,GMTS2
"RTN","IBDFN5",17,0)
 .N GMTSAGE,GMTSTIM,GMTSEGH,GMTSEGL,GMTSHDR,GMTSNPG,GMTSPG,GMTSX,ENTRY,Z1,GMTSDTM,GMTSLOCK,GMTSLPG,SEX,POP,C,GMTSTOF
"RTN","IBDFN5",18,0)
 .S GMTSTITL=$G(^GMT(142,GMTSTYP,"T")) S:GMTSTITL="" GMTSTITL=$P($G(^GMT(142,GMTSTYP,0)),"^")
"RTN","IBDFN5",19,0)
 .D SELTYP1^GMTS
"RTN","IBDFN5",20,0)
 .D EN^GMTS1
"RTN","IBDFN5",21,0)
 I $L($T(ENX^GMTSDVR)) D ENX^GMTSDVR(DFN,GMTSTYP)
"RTN","IBDFN5",22,0)
 Q
"RTN","IBDFN6")
0^203^B5241261
"RTN","IBDFN6",1,0)
IBDFN6 ;ALB/CJM - ENCOUNTER FORM - INTERFACE ROUTINES ;NOV 16,1992
"RTN","IBDFN6",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFN6",3,0)
ADDRESS ;returns address, telephone
"RTN","IBDFN6",4,0)
 ;input variables - DFN
"RTN","IBDFN6",5,0)
 N ARY,CNT,LINE S CNT=1
"RTN","IBDFN6",6,0)
 S ARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN))"
"RTN","IBDFN6",7,0)
 D ADD^VADPT
"RTN","IBDFN6",8,0)
 I VAERR S (@ARY@("DPT PATIENT ADDRESS LINES"),@ARY@("DPT PATIENT'S TELEPHONE NUMBER"),@ARY@("DPT PATIENT SHORT ADDRESS"))=""  Q
"RTN","IBDFN6",9,0)
 I VAPA(1)'="" S @ARY@("DPT PATIENT ADDRESS LINES",CNT)=VAPA(1),CNT=CNT+1
"RTN","IBDFN6",10,0)
 I VAPA(2)'="" S @ARY@("DPT PATIENT ADDRESS LINES",CNT)=VAPA(2),CNT=CNT+1
"RTN","IBDFN6",11,0)
 I VAPA(3)'="" S @ARY@("DPT PATIENT ADDRESS LINES",CNT)=VAPA(3),CNT=CNT+1
"RTN","IBDFN6",12,0)
 S @ARY@("DPT PATIENT ADDRESS LINES",CNT)=VAPA(4)_", "_$P(VAPA(5),"^",2)_" "_$P(VAPA(11),"^",2)
"RTN","IBDFN6",13,0)
 ;
"RTN","IBDFN6",14,0)
 ;short address
"RTN","IBDFN6",15,0)
 F CNT=1:1:3 S LINE=VAPA(CNT) Q:LINE'=""
"RTN","IBDFN6",16,0)
 S @ARY@("DPT PATIENT SHORT ADDRESS")=LINE_","_VAPA(4)_", "_$P(VAPA(5),"^",2)_" "_$P(VAPA(11),"^",2)
"RTN","IBDFN6",17,0)
 ;
"RTN","IBDFN6",18,0)
 S @ARY@("DPT PATIENT'S TELEPHONE NUMBER")=VAPA(8)
"RTN","IBDFN6",19,0)
 K VAPA,VA,VAERR,VAEL
"RTN","IBDFN6",20,0)
 Q
"RTN","IBDFN6",21,0)
 ;
"RTN","IBDFN6",22,0)
INSURANC ;returns all sorts of insurance information
"RTN","IBDFN6",23,0)
 ;input - DFN,ACT
"RTN","IBDFN6",24,0)
 ;ACT="" to return all insurance, ACT=1 to return only active insurance, ACT=2 to return active insurance and insurance that will not reimburse (Medicare)
"RTN","IBDFN6",25,0)
 ;
"RTN","IBDFN6",26,0)
 Q:'$G(DFN)
"RTN","IBDFN6",27,0)
 N NODE,SUB,ITEM,ENTRY,DATE,ARY,WHO
"RTN","IBDFN6",28,0)
 I $L($T(ALL^IBCNS1)) D
"RTN","IBDFN6",29,0)
 .S ARY="^TMP(""IBDF"",$J,""INSURANCE"")"
"RTN","IBDFN6",30,0)
 .K @ARY
"RTN","IBDFN6",31,0)
 .D ALL^IBCNS1(DFN,ARY,$G(ACT))
"RTN","IBDFN6",32,0)
 ;
"RTN","IBDFN6",33,0)
 S SUB=0,ITEM=1,ENTRY="" F  S SUB=$O(@ARY@(SUB)) Q:'SUB  D
"RTN","IBDFN6",34,0)
 .S NODE=$G(@ARY@(SUB,0)) Q:NODE=""
"RTN","IBDFN6",35,0)
 .S:$P(NODE,"^") ENTRY=$P($G(^DIC(36,$P(NODE,"^"),0)),"^")
"RTN","IBDFN6",36,0)
 .S Y=$P(NODE,"^",4) I Y>0 D DD^%DT S $P(ENTRY,"^",2)=Y
"RTN","IBDFN6",37,0)
 .S $P(ENTRY,"^",3)=$P(NODE,"^",2)
"RTN","IBDFN6",38,0)
 .S $P(ENTRY,"^",4)=$P(NODE,"^",3)
"RTN","IBDFN6",39,0)
 .S $P(ENTRY,"^",5)=$P(NODE,"^",15)
"RTN","IBDFN6",40,0)
 .S $P(ENTRY,"^",6)=$P(NODE,"^",17)
"RTN","IBDFN6",41,0)
 .S WHO=$P(NODE,"^",6)
"RTN","IBDFN6",42,0)
 .S $P(ENTRY,"^",7)=$S(WHO="v":"APPLICANT",WHO="s":"SPOUSE",WHO="o":"OTHER",1:"")
"RTN","IBDFN6",43,0)
 .S @IBARY@(ITEM)=ENTRY
"RTN","IBDFN6",44,0)
 .S ITEM=ITEM+1
"RTN","IBDFN6",45,0)
 K @ARY
"RTN","IBDFN6",46,0)
 Q
"RTN","IBDFN6",47,0)
 ;
"RTN","IBDFN6",48,0)
INSURED ;is the patient insured?
"RTN","IBDFN6",49,0)
 ;input - DFN
"RTN","IBDFN6",50,0)
 Q:'$G(DFN)
"RTN","IBDFN6",51,0)
 N INS S INS=""
"RTN","IBDFN6",52,0)
 ;do it the new way?
"RTN","IBDFN6",53,0)
 I $L($T(INSURED^IBCNS1)) D
"RTN","IBDFN6",54,0)
 .S INS=$$INSURED^IBCNS1(DFN)
"RTN","IBDFN6",55,0)
 S @IBARY=$S(INS=1:"YES",INS=0:"NO",1:"UNKNOWN")
"RTN","IBDFN6",56,0)
 Q
"RTN","IBDFN7")
0^204^B3325804
"RTN","IBDFN7",1,0)
IBDFN7 ;ALB/CJM - ENCOUNTER FORM - validate logic for data ;MAY 10,1995
"RTN","IBDFN7",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFN7",3,0)
 ;
"RTN","IBDFN7",4,0)
TESTCPT ;does X point to a valid CPT4 code? Kills X if not.
"RTN","IBDFN7",5,0)
 ;
"RTN","IBDFN7",6,0)
 I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",7,0)
 S X=$O(^ICPT("B",X,0)) I 'X K X S Y="" Q
"RTN","IBDFN7",8,0)
 I '$D(^ICPT(X,0)) K X S Y="" Q
"RTN","IBDFN7",9,0)
 I $P($G(^ICPT(X,0)),"^",4) S Y=$P(^ICPT(X,0),"^",2) K X
"RTN","IBDFN7",10,0)
 Q
"RTN","IBDFN7",11,0)
 ;
"RTN","IBDFN7",12,0)
TESTICD ; -- does X point to a valid ICD9 code? Kills X if not.
"RTN","IBDFN7",13,0)
 ; -- input the icd code in X
"RTN","IBDFN7",14,0)
 ;
"RTN","IBDFN7",15,0)
 I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",16,0)
 S:$E(X,$L(X))'=" " X=X_" " ; use ba xref, add space to end for lookup.
"RTN","IBDFN7",17,0)
 S X=$O(^ICD9("BA",X,0)) I 'X K X S Y="" Q
"RTN","IBDFN7",18,0)
 I '$D(^ICD9(X,0)) K X S Y="" Q
"RTN","IBDFN7",19,0)
 I $P($G(^ICD9(X,0)),"^",9) S Y=$P(^ICD9(X,0),"^",3) K X
"RTN","IBDFN7",20,0)
 Q
"RTN","IBDFN7",21,0)
 ;
"RTN","IBDFN7",22,0)
TESTVST ;does X point to a valid visit code? If not, kills X.
"RTN","IBDFN7",23,0)
 ;checks that X is a valid CPT4 code and that there is a corresponding entry in the TYPE OF VISIT file that is active
"RTN","IBDFN7",24,0)
 N IEN
"RTN","IBDFN7",25,0)
 I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",26,0)
 S X=$O(^ICPT("B",X,0)) I 'X K X S Y="" Q
"RTN","IBDFN7",27,0)
 I '$D(^ICPT(X,0)) K X S Y="" Q
"RTN","IBDFN7",28,0)
 I $P($G(^ICPT(X,0)),"^",4) S Y=$P(^ICPT(X,0),"^",2) K X
"RTN","IBDFN7",29,0)
 Q:'$D(X)
"RTN","IBDFN7",30,0)
 S IEN=$O(^IBE(357.69,"B",X,0)) K:'IEN X I IEN K:$P($G(^IBE(357.69,IEN,0)),"^",4) X
"RTN","IBDFN7",31,0)
 Q
"RTN","IBDFN7",32,0)
 ;
"RTN","IBDFN7",33,0)
TESTLEX ; -- Is clinical lexicon pointer valid and does icdone, not return 799.9
"RTN","IBDFN7",34,0)
 S IBDLEXV=1
"RTN","IBDFN7",35,0)
 I $D(^LEX)>1 S X="LEXSET" X ^%ZOSF("TEST") I $T S IBDLEXV=2
"RTN","IBDFN7",36,0)
 I IBDLEXV=1 D
"RTN","IBDFN7",37,0)
 .I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",38,0)
 .I '$D(^GMP(757.01,+X,0)) K X S Y="" Q
"RTN","IBDFN7",39,0)
 .S VAL=$$ICDONE^GMPTU(X)
"RTN","IBDFN7",40,0)
 .I VAL="" K X S Y="No ICD9 code" Q
"RTN","IBDFN7",41,0)
 .I VAL=799.9 K X S Y="ICD9 code 799.9" Q
"RTN","IBDFN7",42,0)
 .I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",43,0)
 .Q
"RTN","IBDFN7",44,0)
 I IBDLEXV>1 D
"RTN","IBDFN7",45,0)
 .I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",46,0)
 .I '$D(^LEX(757.01,+X,0)) K X S Y="" Q
"RTN","IBDFN7",47,0)
 .S VAL=$$ICDONE^LEXU(X)
"RTN","IBDFN7",48,0)
 .I VAL="" K X S Y="No ICD9 code" Q
"RTN","IBDFN7",49,0)
 .I VAL=799.9 K X S Y="ICD9 code 799.9" Q
"RTN","IBDFN7",50,0)
 .Q
"RTN","IBDFN7",51,0)
 Q
"RTN","IBDFN8")
0^205^B192707
"RTN","IBDFN8",1,0)
IBDFN8 ;ALB/CJM - ENCOUNTER FORM - PCE GDI INPUT TRANSFORMS;AUG 10, 1995
"RTN","IBDFN8",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFN8",3,0)
 ;
"RTN","IBDFN8",4,0)
INPUTCPT(X) ;changes X,a CPT code, into its ien
"RTN","IBDFN8",5,0)
 ;
"RTN","IBDFN8",6,0)
 S X=$S($G(X)'="":$O(^ICPT("B",X,0)),1:"")
"RTN","IBDFN8",7,0)
 K:'X X
"RTN","IBDFN8",8,0)
 Q
"RTN","IBDFN8",9,0)
 ;
"RTN","IBDFN8",10,0)
INPUTICD(ICD) ;changes X, an ICD9 code, into its ien
"RTN","IBDFN8",11,0)
 ;
"RTN","IBDFN8",12,0)
 S X=$S($G(X)'="":$O(^ICD9("BA",ICD_" ",0)),1:"")
"RTN","IBDFN8",13,0)
 K:'X X
"RTN","IBDFN8",14,0)
 Q
"RTN","IBDFN8",15,0)
 ;
"RTN","IBDFN9")
0^206^B399325
"RTN","IBDFN9",1,0)
IBDFN9 ;ALB/CJM - ENCOUNTER FORM - output transforms for data ;MAY 10, 1995
"RTN","IBDFN9",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFN9",3,0)
 ;
"RTN","IBDFN9",4,0)
DSPLYCPT(IEN) ;output transform for CPT codes (file #81)
"RTN","IBDFN9",5,0)
 ;example of use: S Y=$$DSPLYCPT^IBDFN9(Y)
"RTN","IBDFN9",6,0)
 Q $P($G(^ICPT(+$G(IEN),0)),"^")
"RTN","IBDFN9",7,0)
 ;
"RTN","IBDFN9",8,0)
DSPLYICD(IEN) ;output transform for ICD9 codes (file #80)
"RTN","IBDFN9",9,0)
 ;example of use: S Y=$$DSPLYICD^IBDFN9(Y)
"RTN","IBDFN9",10,0)
 Q $P($G(^ICD9(+$G(IEN),0)),"^")
"RTN","IBDFN9",11,0)
 ;
"RTN","IBDFN9",12,0)
DSPLYPRV(IEN) ;output transform for provider (file #200)
"RTN","IBDFN9",13,0)
 ;example of use: S Y=$$DSPLYPRV^IBDFN9(Y)
"RTN","IBDFN9",14,0)
 Q $P($G(^VA(200,+$G(IEN),0)),"^")
"RTN","IBDFN9",15,0)
 ;
"RTN","IBDFN9",16,0)
DSPLYYN(Y) ;changes 1 to YES and 0 or "" to NO
"RTN","IBDFN9",17,0)
 Q:Y=1 "YES"
"RTN","IBDFN9",18,0)
 Q:(Y=0)!(Y="") "NO"
"RTN","IBDFN9",19,0)
 Q " "
"RTN","IBDFN9",20,0)
VARVAL(Y) ;determines PCE DIM NODE VALUE
"RTN","IBDFN9",21,0)
 Q:'$D(Y) ""
"RTN","IBDFN9",22,0)
 Q $S(Y="SC":6,Y="AO":7,Y="IR":8,Y="EC":9,1:"")
"RTN","IBDFOSG")
0^207^B25176467
"RTN","IBDFOSG",1,0)
IBDFOSG ;ALB/MAF/AAS - SCANNED EF FOR OUTPATIENTS WITH BILLS GENERATED REPORT ;8/21/95
"RTN","IBDFOSG",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFOSG",3,0)
 ;
"RTN","IBDFOSG",4,0)
% I '$D(DT) D DT^DICRW
"RTN","IBDFOSG",5,0)
 D END
"RTN","IBDFOSG",6,0)
 W !!,"Scanned Encounter Forms with Outpatient Bills Generated."
"RTN","IBDFOSG",7,0)
 S IBDFMUL=0 I $D(^DG(43,1,"GL")) S:$P(^DG(43,1,"GL"),"^",2)=1 IBDFMUL=1 D DIVISION^VAUTOMA G:Y=-1 END
"RTN","IBDFOSG",8,0)
 S VAUTC=1
"RTN","IBDFOSG",9,0)
 S IBDFDAT=$$HTE^XLFDT($H)
"RTN","IBDFOSG",10,0)
 ;
"RTN","IBDFOSG",11,0)
DATE ; -- select date
"RTN","IBDFOSG",12,0)
 ;W !! D DATE^IBOUTL
"RTN","IBDFOSG",13,0)
 ;I IBBDT=""!(IBEDT="") G END
"RTN","IBDFOSG",14,0)
 ;S IBDFBEG=IBBDT,IBDFEND=IBEDT
"RTN","IBDFOSG",15,0)
 S (IBBDT,IBDFBEG)=2940401,(IBEDT,IBDFEND)=2960331
"RTN","IBDFOSG",16,0)
 ;
"RTN","IBDFOSG",17,0)
DEV ; -- select device, run option
"RTN","IBDFOSG",18,0)
 W !!,"You will need a 132 column printer for this report!",!
"RTN","IBDFOSG",19,0)
 S %ZIS="QM" D ^%ZIS G:POP END
"RTN","IBDFOSG",20,0)
 I $D(IO("Q")) K ZTSK S ZTRTN="DQ^IBDFOSG",ZTSAVE("IB*")="",ZTSAVE("VA*")="",ZTDESC="IBD - Scanned Encounter Forms with Bill Generation" D ^%ZTLOAD K IO("Q") W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS G END
"RTN","IBDFOSG",21,0)
 ;
"RTN","IBDFOSG",22,0)
 U IO
"RTN","IBDFOSG",23,0)
 S X=132 X ^%ZOSF("RM")
"RTN","IBDFOSG",24,0)
DQ D PRINT G END
"RTN","IBDFOSG",25,0)
 Q
"RTN","IBDFOSG",26,0)
 ;
"RTN","IBDFOSG",27,0)
END ; -- Clean up
"RTN","IBDFOSG",28,0)
 K ^TMP("CTOT",$J),^TMP("DTOT",$J),^TMP("GTOT",$J),^TMP("MCCR",$J),^TMP("IBD-BILL",$J),^TMP("IBD-PRINTED",$J),^TMP("IBD-ENTERED",$J) W !
"RTN","IBDFOSG",29,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBDFOSG",30,0)
 D ^%ZISC
"RTN","IBDFOSG",31,0)
 K X,Y,DFN,IBPAG,IBHDT,IBDT,IBBDT,IBEDT,IBQUIT,IBDFDVE
"RTN","IBDFOSG",32,0)
 K IBCNT,IBDFBEG,IBDFCLI,IBDFDA,IBDFDAT,IBDFDIV,IBDFEND,IBDFIFN,IBDFMUL,IBDFNODE,IBDFNUM,IBDFSA,IBDFT,IBDFTMP,IBDFTMP1,IBDFTMP2,IBDFTPRT
"RTN","IBDFOSG",33,0)
 K IBFLG1,IBFLG2,IBFLG3,IBFLG4,IBFLG5,IBFLG6,IBFLG7,IBFLG8,IBFLG9,IBMCNODE,IBMCSND,IBNAM,IBTSBDT,IBTSEDT
"RTN","IBDFOSG",34,0)
 K VAUTC,VAUTD
"RTN","IBDFOSG",35,0)
 Q
"RTN","IBDFOSG",36,0)
 ;
"RTN","IBDFOSG",37,0)
PRINT ; -- print one billing report
"RTN","IBDFOSG",38,0)
 ;    Data sorted into ^tmp arrays
"RTN","IBDFOSG",39,0)
 ;                    := ^tmp("mccr",$j) =
"RTN","IBDFOSG",40,0)
 ;    Clinic Totals   := ^tmp("ctot",$j,division,clinic)=
"RTN","IBDFOSG",41,0)
 ;    Division Totals := ^tmp("dtot",$j,division)       =
"RTN","IBDFOSG",42,0)
 ;    Grand Totals    := ^tmp("gtot",$j)                =
"RTN","IBDFOSG",43,0)
 ;
"RTN","IBDFOSG",44,0)
 S (IBPAG,IBDFDVE)=0,IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0
"RTN","IBDFOSG",45,0)
 S IBTSBDT=IBBDT-.1,IBTSEDT=IBEDT+.9
"RTN","IBDFOSG",46,0)
 D QUIT
"RTN","IBDFOSG",47,0)
 D START^IBDFOSG1
"RTN","IBDFOSG",48,0)
 ;
"RTN","IBDFOSG",49,0)
PR D HDR
"RTN","IBDFOSG",50,0)
 I '$D(^TMP("MCCR",$J)) W !!,"No Data Meeting This Criteria for the Date Range Chosen",! Q
"RTN","IBDFOSG",51,0)
 N IBDFDV,IBDFCL,IBDNODE,IBDFTMP,IBDFPAT,IBDFPT,IBDFT
"RTN","IBDFOSG",52,0)
 S (IBDFDV,IBDFCL,IBDFPT)=0
"RTN","IBDFOSG",53,0)
 F IBDFDIV=0:0 S IBDFDV=$O(^TMP("CTOT",$J,IBDFDV)) Q:IBDFDV=""!(IBQUIT)  D
"RTN","IBDFOSG",54,0)
 .D DIVH
"RTN","IBDFOSG",55,0)
 .S IBDFCL=0
"RTN","IBDFOSG",56,0)
 .F IBDFCLI=0:0 S IBDFCL=$O(^TMP("CTOT",$J,IBDFDV,IBDFCL)) Q:IBDFCL=""  D ONECL I $O(^TMP("CTOT",$J,IBDFDV,IBDFCL))="" S IBDFDVE=1 D ONEDV
"RTN","IBDFOSG",57,0)
 ;
"RTN","IBDFOSG",58,0)
 ;  -- Print Totals Page
"RTN","IBDFOSG",59,0)
 S IBDFDVE=0
"RTN","IBDFOSG",60,0)
 Q:IBQUIT
"RTN","IBDFOSG",61,0)
 D HDR
"RTN","IBDFOSG",62,0)
 S (IBDFDV,IBDFCL,IBDFPT)=0
"RTN","IBDFOSG",63,0)
 S IBFLG4=1 ;1 := on division totals page
"RTN","IBDFOSG",64,0)
 F IBDFDIV=0:0 S IBDFDV=$O(^TMP("DTOT",$J,IBDFDV)) Q:IBDFDV']""!(IBQUIT)  D ONEDV
"RTN","IBDFOSG",65,0)
 Q:IBQUIT
"RTN","IBDFOSG",66,0)
 D DASH
"RTN","IBDFOSG",67,0)
 D LINE("GRAND TOTAL",^TMP("GTOT",$J))
"RTN","IBDFOSG",68,0)
 Q
"RTN","IBDFOSG",69,0)
 ;
"RTN","IBDFOSG",70,0)
ONECL ; -- Print one clinics data
"RTN","IBDFOSG",71,0)
 Q:IBQUIT
"RTN","IBDFOSG",72,0)
 Q:^TMP("CTOT",$J,IBDFDV,IBDFCL)="0^0^0^0^0^0^0^0^0"
"RTN","IBDFOSG",73,0)
 D LINE(IBDFCL,^TMP("CTOT",$J,IBDFDV,IBDFCL))
"RTN","IBDFOSG",74,0)
 Q
"RTN","IBDFOSG",75,0)
 ;
"RTN","IBDFOSG",76,0)
ONEDV ;  -- Print Division totals
"RTN","IBDFOSG",77,0)
 Q:IBQUIT
"RTN","IBDFOSG",78,0)
 I IOSL<($Y+5) D HDR Q:IBQUIT
"RTN","IBDFOSG",79,0)
 Q:^TMP("DTOT",$J,IBDFDV)="0^0^0^0^0^0^0^0^0"&('$D(IBFLG4))
"RTN","IBDFOSG",80,0)
 I IBDFDVE=1 D DASH S IBDFDVE=0
"RTN","IBDFOSG",81,0)
 D LINE(IBDFDV,^TMP("DTOT",$J,IBDFDV))
"RTN","IBDFOSG",82,0)
 Q
"RTN","IBDFOSG",83,0)
 ;
"RTN","IBDFOSG",84,0)
LINE(NAME,IBX) ;
"RTN","IBDFOSG",85,0)
 ; -- print detail line
"RTN","IBDFOSG",86,0)
 ;    input Name := text to be printed
"RTN","IBDFOSG",87,0)
 ;          ibx  ;= 9 piece global node containing data
"RTN","IBDFOSG",88,0)
 ;
"RTN","IBDFOSG",89,0)
 I IOSL<($Y+5) D HDR Q:IBQUIT
"RTN","IBDFOSG",90,0)
 W !,$E(NAME,1,25)
"RTN","IBDFOSG",91,0)
 W ?27,$J($P(IBX,"^",4),8)
"RTN","IBDFOSG",92,0)
 W ?39,$J($P(IBX,"^",3),8)
"RTN","IBDFOSG",93,0)
 W ?51,$J($P(IBX,"^",1),8)
"RTN","IBDFOSG",94,0)
 W ?63,$J($P(IBX,"^",2),8)
"RTN","IBDFOSG",95,0)
 S X=$S($P(IBX,"^",4)>0:$P(IBX,"^",5)/$P(IBX,"^",4),1:0)
"RTN","IBDFOSG",96,0)
 W ?75,$J(X,8,2) ;$J($E(X,1,8),8)
"RTN","IBDFOSG",97,0)
 W ?87,$J($P(IBX,"^",6),8)
"RTN","IBDFOSG",98,0)
 W ?99,$J($P(IBX,"^",7),8)
"RTN","IBDFOSG",99,0)
 W ?111,$J($P(IBX,"^",8),8)
"RTN","IBDFOSG",100,0)
 W ?123,$J($P(IBX,"^",9),8)
"RTN","IBDFOSG",101,0)
 Q
"RTN","IBDFOSG",102,0)
 ;
"RTN","IBDFOSG",103,0)
HDR ; -- Print header for billing report
"RTN","IBDFOSG",104,0)
 Q:IBQUIT
"RTN","IBDFOSG",105,0)
 I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBDFOSG",106,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
"RTN","IBDFOSG",107,0)
 S IBPAG=IBPAG+1
"RTN","IBDFOSG",108,0)
 W !,"Scanned Encounters with Bill Generation Data",?(IOM-33),"Page ",IBPAG,"  ",IBHDT
"RTN","IBDFOSG",109,0)
 W !,"For Period beginning on ",$$FMTE^XLFDT(IBBDT,2)," to ",$$FMTE^XLFDT(IBEDT,2)
"RTN","IBDFOSG",110,0)
 W !,?53,"Visits",?65,"#Bills",?75,"Avg. Days",?114,"Total",?126,"Total"
"RTN","IBDFOSG",111,0)
 W !,"Clinic",?27,"#Scanned",?39,"#Insured",?53,"Billed",?64,"Printed",?75,"to Print",?87,"$ Billed",?100,"$ Recvd",?114,"Bills",?125,"Visits"
"RTN","IBDFOSG",112,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBDFOSG",113,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 W !!,"....task stopped at user request" Q
"RTN","IBDFOSG",114,0)
 Q
"RTN","IBDFOSG",115,0)
 ;
"RTN","IBDFOSG",116,0)
 ;
"RTN","IBDFOSG",117,0)
QUIT K ^TMP("CTOT",$J),^TMP("DTOT",$J),^TMP("GTOT",$J),^TMP("MCCR",$J),^TMP("IBD-BILL",$J) W !
"RTN","IBDFOSG",118,0)
 Q
"RTN","IBDFOSG",119,0)
 ;
"RTN","IBDFOSG",120,0)
 ;
"RTN","IBDFOSG",121,0)
DASH W !,"------------------",?27,"--------",?39,"--------",?51,"--------",?63,"--------",?75,"--------",?87,"--------",?99,"--------",?111,"--------",?123,"--------"
"RTN","IBDFOSG",122,0)
 Q
"RTN","IBDFOSG",123,0)
 ;
"RTN","IBDFOSG",124,0)
DIVH ;  -- Write division header
"RTN","IBDFOSG",125,0)
 I IOSL<($Y+5) D HDR Q:IBQUIT
"RTN","IBDFOSG",126,0)
 Q:^TMP("DTOT",$J,IBDFDV)="0^0^0^0^0^0^0^0^0"
"RTN","IBDFOSG",127,0)
 W !!,?(IOM-$L(IBDFDV)+10/2),"DIVISION: ",IBDFDV,!
"RTN","IBDFOSG",128,0)
 Q
"RTN","IBDFOSG1")
0^208^B18935062
"RTN","IBDFOSG1",1,0)
IBDFOSG1 ;ALB/MAF/AAS - SCANNED ENCOUNTERS WITH BILLING DATA CONT. ; JUL 6 1995
"RTN","IBDFOSG1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFOSG1",3,0)
 ;
"RTN","IBDFOSG1",4,0)
START ;  -- Loop thru clinics
"RTN","IBDFOSG1",5,0)
 N IBDFCLIN,IBQUIT
"RTN","IBDFOSG1",6,0)
 S IBQUIT=0
"RTN","IBDFOSG1",7,0)
 S ^TMP("GTOT",$J)="0^0^0^0^0^0^0^0^0"
"RTN","IBDFOSG1",8,0)
 F IBDFCLIN=0:0 S IBDFCLIN=$O(^SC(IBDFCLIN)) Q:'IBDFCLIN  D CK(IBDFCLIN),BLD:'IBQUIT
"RTN","IBDFOSG1",9,0)
 Q
"RTN","IBDFOSG1",10,0)
 ;
"RTN","IBDFOSG1",11,0)
CHECK(CLIN) ;
"RTN","IBDFOSG1",12,0)
 ;  -- Check to see if clinic has a form and its one that
"RTN","IBDFOSG1",13,0)
 ;     is not for future use only.
"RTN","IBDFOSG1",14,0)
 N IBDFNODE,IBDFCL,HASFORM
"RTN","IBDFOSG1",15,0)
 S HASFORM=1
"RTN","IBDFOSG1",16,0)
 I $O(^SD(409.95,"B",+CLIN,0)) D
"RTN","IBDFOSG1",17,0)
 .S IBDFCL=$O(^SD(409.95,"B",+CLIN,0))
"RTN","IBDFOSG1",18,0)
 .S IBDFNODE=^SD(409.95,IBDFCL,0)
"RTN","IBDFOSG1",19,0)
 Q HASFORM
"RTN","IBDFOSG1",20,0)
 ;
"RTN","IBDFOSG1",21,0)
CK(XCL) ;  -- Check clinic, division, form
"RTN","IBDFOSG1",22,0)
 Q:'$D(^SC(XCL,0))
"RTN","IBDFOSG1",23,0)
 S IBQUIT=0
"RTN","IBDFOSG1",24,0)
 S IBDFNODE=$G(^SC(XCL,0))
"RTN","IBDFOSG1",25,0)
 Q:$P(IBDFNODE,"^",3)'="C"
"RTN","IBDFOSG1",26,0)
 S IBDIVNM=$P($G(^DG(40.8,+$P(IBDFNODE,"^",15),0)),"^",1) I IBDIVNM="" S IBDIVNM=$S(IBDFMUL=0:$$PRIM^VASITE,1:"NOT SPECIFIED")
"RTN","IBDFOSG1",27,0)
 I VAUTD=0 Q:'$D(VAUTD(+$P(IBDFNODE,"^",15)))
"RTN","IBDFOSG1",28,0)
 I '$$CHECK(XCL) S IBQUIT=1 Q
"RTN","IBDFOSG1",29,0)
 S ^TMP("CTOT",$J,IBDIVNM,$P(IBDFNODE,"^",1))="0^0^0^0^0^0^0^0^0"
"RTN","IBDFOSG1",30,0)
 I '$D(^TMP("DTOT",$J,IBDIVNM)) S ^TMP("DTOT",$J,IBDIVNM)="0^0^0^0^0^0^0^0^0"
"RTN","IBDFOSG1",31,0)
 Q
"RTN","IBDFOSG1",32,0)
 ;
"RTN","IBDFOSG1",33,0)
BLD ; -- scan appts
"RTN","IBDFOSG1",34,0)
 F IBDFT=IBDFBEG:0 S IBDFT=$O(^SC(IBDFCLIN,"S",IBDFT)) Q:'IBDFT!($P(IBDFT,".",1)>IBDFEND)  D
"RTN","IBDFOSG1",35,0)
 .F IBDFDA=0:0 S IBDFDA=$O(^SC(IBDFCLIN,"S",IBDFT,1,IBDFDA)) Q:'IBDFDA  I $D(^SC(IBDFCLIN,"S",IBDFT,1,IBDFDA,0)) S IBDFSA=^(0) S DFN=+IBDFSA D CK1
"RTN","IBDFOSG1",36,0)
 Q
"RTN","IBDFOSG1",37,0)
 ;
"RTN","IBDFOSG1",38,0)
CK1 ;  -- Check scheduling nodes, forms tracking, if scanned, 
"RTN","IBDFOSG1",39,0)
 ;           patient insured, bill entered, bill printed, 
"RTN","IBDFOSG1",40,0)
 ;           avg time from encounter to printed bill.
"RTN","IBDFOSG1",41,0)
 ;
"RTN","IBDFOSG1",42,0)
 I $P($G(^DPT(DFN,"S",IBDFT,0)),"^",2)]"" Q
"RTN","IBDFOSG1",43,0)
 N IBDFXPC,IBDFYPC
"RTN","IBDFOSG1",44,0)
 S IBDFXPC=$P(IBDFNODE,"^",1) ;Clinic name
"RTN","IBDFOSG1",45,0)
 S IBDFYPC=$P($G(^DPT(+$G(DFN),0)),"^",1) ;patient name
"RTN","IBDFOSG1",46,0)
 ;
"RTN","IBDFOSG1",47,0)
 I $D(^IBD(357.96,"APTAP",DFN,IBDFT)) S IBDFIFN=$O(^IBD(357.96,"APTAP",DFN,IBDFT,0)) I $P($G(^IBD(357.96,+IBDFIFN,0)),"^",11)>1,$P(^(0),"^",11)<5 D
"RTN","IBDFOSG1",48,0)
 .S (IBFLG1,IBFLG2,IBFLG3,IBFLG5,IBFLG6,IBFLG7,IBFLG8,IBFLG9)=0
"RTN","IBDFOSG1",49,0)
 .I $$INSURED^IBCNS1(DFN,IBDFT) S IBFLG3=1
"RTN","IBDFOSG1",50,0)
 .I '$D(^DGCR(399,"AOPV",DFN,$P(IBDFT,".",1))) D SET Q
"RTN","IBDFOSG1",51,0)
 .F IBDFNUM=0:0 S IBDFNUM=$O(^DGCR(399,"AOPV",DFN,$P(IBDFT,".",1),IBDFNUM)) Q:IBDFNUM']""!(IBFLG2)  D
"RTN","IBDFOSG1",52,0)
 ..S IBMCNODE=$G(^DGCR(399,IBDFNUM,0))
"RTN","IBDFOSG1",53,0)
 ..S IBMCSND=$G(^DGCR(399,IBDFNUM,"S"))
"RTN","IBDFOSG1",54,0)
 ..Q:$P(IBMCSND,"^",17)  ;canceled date
"RTN","IBDFOSG1",55,0)
 ..I 'IBFLG1,$P(IBMCSND,"^",1) D  ;bill entered
"RTN","IBDFOSG1",56,0)
 ...S IBFLG1=1,^TMP("IBD-ENTERED",$J,IBDFNUM)="",^TMP("IBD-ENTERED",$J,IBDIVNM,IBDFNUM,DFN)=""
"RTN","IBDFOSG1",57,0)
 ..I $P(IBMCSND,"^",12),'$D(^TMP("IBD-PRINTED",$J,IBDFNUM)) S IBFLG2=1,^TMP("IBD-PRINTED",$J,IBDFNUM)="" ;bill printed
"RTN","IBDFOSG1",58,0)
 ..;
"RTN","IBDFOSG1",59,0)
 ..; -- find amount billed/received if unique bill
"RTN","IBDFOSG1",60,0)
 ..I IBFLG2,'$D(^TMP("IBD-BILL",$J,IBDFNUM)) D
"RTN","IBDFOSG1",61,0)
 ...S ^TMP("IBD-BILL",$J,IBDFNUM)=1
"RTN","IBDFOSG1",62,0)
 ...S IBFLG6=+$P(^DGCR(399,IBDFNUM,"U1"),"^")
"RTN","IBDFOSG1",63,0)
 ...S X=$$TPR^PRCAFN(IBDFNUM) S:X>0 IBFLG7=X
"RTN","IBDFOSG1",64,0)
 ...S IBFLG8=1 ;is new unique bill
"RTN","IBDFOSG1",65,0)
 ...S IBFLG9=+$P($G(^DGCR(399,IBDFNUM,"OP",0)),"^",4)
"RTN","IBDFOSG1",66,0)
 ...Q
"RTN","IBDFOSG1",67,0)
 ..Q
"RTN","IBDFOSG1",68,0)
 .;
"RTN","IBDFOSG1",69,0)
 .S X1=$S($P(IBMCSND,"^",12):$P(IBMCSND,"^",12),1:VADAT("W")),X2=IBDFT D ^%DTC S IBFLG5=X
"RTN","IBDFOSG1",70,0)
 .D SET
"RTN","IBDFOSG1",71,0)
 Q
"RTN","IBDFOSG1",72,0)
SET ;  -- Set counters in temp arrays
"RTN","IBDFOSG1",73,0)
 ;     Piece 1 := Number bills entered
"RTN","IBDFOSG1",74,0)
 ;     Piece 2 := Number bills generated
"RTN","IBDFOSG1",75,0)
 ;     Piece 3 := Number of forms scanned for patients with INS
"RTN","IBDFOSG1",76,0)
 ;     Piece 4 := Number of forms scanned
"RTN","IBDFOSG1",77,0)
 ;     Piece 5 := Number of days from encounter date to bill printed
"RTN","IBDFOSG1",78,0)
 ;     Piece 6 := amount billed (for unique bill)
"RTN","IBDFOSG1",79,0)
 ;     Piece 7 := amount received (for unique bills)
"RTN","IBDFOSG1",80,0)
 ;     Piece 8 := number of unique bills
"RTN","IBDFOSG1",81,0)
 ;     Piece 9 := Number of visit dates on bills in 8
"RTN","IBDFOSG1",82,0)
 ;
"RTN","IBDFOSG1",83,0)
 S ^TMP("MCCR",$J,IBDIVNM,IBDFXPC,IBDFYPC,DFN,IBDFT)=IBDFCLIN_"^"_^IBD(357.96,IBDFIFN,0)
"RTN","IBDFOSG1",84,0)
 ;
"RTN","IBDFOSG1",85,0)
 S IBDFTMP=^TMP("CTOT",$J,IBDIVNM,$P(IBDFNODE,"^",1))
"RTN","IBDFOSG1",86,0)
 S IBDFTMP1=^TMP("DTOT",$J,IBDIVNM)
"RTN","IBDFOSG1",87,0)
 S IBDFTMP2=^TMP("GTOT",$J)
"RTN","IBDFOSG1",88,0)
 ;
"RTN","IBDFOSG1",89,0)
 I IBFLG1 D INC(1,1) ;     Bills Entered
"RTN","IBDFOSG1",90,0)
 I IBFLG2 D INC(2,1) ;     Bills Generated
"RTN","IBDFOSG1",91,0)
 I IBFLG3 D INC(3,1) ;     With insurance
"RTN","IBDFOSG1",92,0)
 D INC(4,1) ;              number scanned
"RTN","IBDFOSG1",93,0)
 I IBFLG5 D INC(5,IBFLG5) ;Days from encounter to Printed Bill
"RTN","IBDFOSG1",94,0)
 I IBFLG6 D INC(6,IBFLG6) ;Amount billed
"RTN","IBDFOSG1",95,0)
 I IBFLG7 D INC(7,IBFLG7) ;Amount Received
"RTN","IBDFOSG1",96,0)
 I IBFLG8 D INC(8,1) ;     Number of Bills
"RTN","IBDFOSG1",97,0)
 I IBFLG9 D INC(9,IBFLG9) ;number of visits on bills
"RTN","IBDFOSG1",98,0)
 ;
"RTN","IBDFOSG1",99,0)
 S ^TMP("CTOT",$J,IBDIVNM,$P(IBDFNODE,"^",1))=IBDFTMP
"RTN","IBDFOSG1",100,0)
 S ^TMP("DTOT",$J,IBDIVNM)=IBDFTMP1
"RTN","IBDFOSG1",101,0)
 S ^TMP("GTOT",$J)=IBDFTMP2
"RTN","IBDFOSG1",102,0)
 Q
"RTN","IBDFOSG1",103,0)
 ;
"RTN","IBDFOSG1",104,0)
INC(PIECE,VALUE) ;
"RTN","IBDFOSG1",105,0)
 ; -- increment counters, 
"RTN","IBDFOSG1",106,0)
 S $P(IBDFTMP,"^",PIECE)=$P(IBDFTMP,"^",PIECE)+VALUE
"RTN","IBDFOSG1",107,0)
 S $P(IBDFTMP1,"^",PIECE)=$P(IBDFTMP1,"^",PIECE)+VALUE
"RTN","IBDFOSG1",108,0)
 S $P(IBDFTMP2,"^",PIECE)=$P(IBDFTMP2,"^",PIECE)+VALUE
"RTN","IBDFOSG1",109,0)
 Q
"RTN","IBDFOSG2")
0^209^B42849185
"RTN","IBDFOSG2",1,0)
IBDFOSG2 ;ALB/TMP - ENCOUNTERS WITH BILLING DATA CONT. - SEP 11, 1995
"RTN","IBDFOSG2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFOSG2",3,0)
TOT2 ; #2a,b
"RTN","IBDFOSG2",4,0)
 N IBDHD,IBBY,IBFLDS
"RTN","IBDFOSG2",5,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFOSG2",6,0)
 S (IBFLDS,IBBY)="OPT AMT BILLED & # GEN"
"RTN","IBDFOSG2",7,0)
 S IBDHD="(#2a,2b) OUTPT DOLLARS BILLED, # OF OUTPT BILLS GENERATED"
"RTN","IBDFOSG2",8,0)
 D PRT("2a,b",IBFLDS,IBBY,IBDHD)
"RTN","IBDFOSG2",9,0)
 K IOP,DQTIME
"RTN","IBDFOSG2",10,0)
 Q
"RTN","IBDFOSG2",11,0)
 ;
"RTN","IBDFOSG2",12,0)
TOT3 ; #3a,b
"RTN","IBDFOSG2",13,0)
 N IBDHD,IBBY,IBFLDS
"RTN","IBDFOSG2",14,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFOSG2",15,0)
 S (IBFLDS,IBBY)="OPT NUM BILLS GEN < 65"
"RTN","IBDFOSG2",16,0)
 S IBDHD="(#3a) # OF OUTPT BILLS FOR PATIENTS < 65 YEARS OF AGE DATE: "
"RTN","IBDFOSG2",17,0)
 D PRT("3a",IBFLDS,IBBY,IBDHD)
"RTN","IBDFOSG2",18,0)
 ;
"RTN","IBDFOSG2",19,0)
 I '$D(IOP) W !,"#3b" D SELDEV Q:'$D(IOP)!('$D(DQTIME))
"RTN","IBDFOSG2",20,0)
 S (IBFLDS,IBBY)="OPT NUM BILLS GEN 65 & UP"
"RTN","IBDFOSG2",21,0)
 S IBDHD="(#3b) # OF OUTPT BILLS FOR PATIENTS AGE 65 AND OVER"
"RTN","IBDFOSG2",22,0)
 D PRT("3b",IBFLDS,IBBY,IBDHD)
"RTN","IBDFOSG2",23,0)
 K IOP,DQTIME
"RTN","IBDFOSG2",24,0)
 Q
"RTN","IBDFOSG2",25,0)
 ;
"RTN","IBDFOSG2",26,0)
TOT4 ; #4
"RTN","IBDFOSG2",27,0)
 N IBDHD,IBBY,IBFLDS
"RTN","IBDFOSG2",28,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFOSG2",29,0)
 S (IBFLDS,IBBY)="OPT # BILLS GEN < 30 DYS"
"RTN","IBDFOSG2",30,0)
 S IBDHD="(#4) # BILLS GENERATED < 30 DAYS FROM DT OF SERVICE"
"RTN","IBDFOSG2",31,0)
 D PRT(4,IBFLDS,IBBY,IBDHD)
"RTN","IBDFOSG2",32,0)
 K IOP,DQTIME
"RTN","IBDFOSG2",33,0)
 Q
"RTN","IBDFOSG2",34,0)
 ;
"RTN","IBDFOSG2",35,0)
TOT7 ; #7
"RTN","IBDFOSG2",36,0)
 N IBDHD,IBBY,IBFLDS
"RTN","IBDFOSG2",37,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFOSG2",38,0)
 S (IBFLDS,IBBY)="CPT CODE - MNTH OPT BILLS"
"RTN","IBDFOSG2",39,0)
 S IBDHD="(#7) TOTAL # CPT CODES ON OUTPATIENT BILLS FOR A MONTH"
"RTN","IBDFOSG2",40,0)
 D PRT(7,IBFLDS,IBBY,IBDHD)
"RTN","IBDFOSG2",41,0)
 K IOP,DQTIME
"RTN","IBDFOSG2",42,0)
 Q
"RTN","IBDFOSG2",43,0)
 ;
"RTN","IBDFOSG2",44,0)
TOT10 ;  #10a,b
"RTN","IBDFOSG2",45,0)
 N IBDHD,IBBY,IBFLDS
"RTN","IBDFOSG2",46,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFOSG2",47,0)
 S (IBFLDS,IBBY)="LAG ENC DT TO CREAT & PRT"
"RTN","IBDFOSG2",48,0)
 S IBDHD="(#10a,10b) AVG LAG FROM ENC DATE TO CREATE AND PRINT DATES"
"RTN","IBDFOSG2",49,0)
 D PRT(10,IBFLDS,IBBY,IBDHD)
"RTN","IBDFOSG2",50,0)
 K IOP,DQTIME
"RTN","IBDFOSG2",51,0)
 Q
"RTN","IBDFOSG2",52,0)
 ;
"RTN","IBDFOSG2",53,0)
TOT11 ;  #11
"RTN","IBDFOSG2",54,0)
 N DTRNG,DTRNG1
"RTN","IBDFOSG2",55,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFOSG2",56,0)
 D END
"RTN","IBDFOSG2",57,0)
 W !,"#11"
"RTN","IBDFOSG2",58,0)
 W !!,"Scanned Encounter Forms with Outpatient Bills Generated."
"RTN","IBDFOSG2",59,0)
 ;I $D(^DG(43,1,"GL")) S IBDFMUL=$P(^DG(43,1,"GL"),"^",2)
"RTN","IBDFOSG2",60,0)
 ;I $D(IBDFMUL),IBDFMUL D DIVISION^VAUTOMA I Y=-1 G END
"RTN","IBDFOSG2",61,0)
 ;I 'IBDFMUL S IBDFDV=$O(^DG(40.8,0))
"RTN","IBDFOSG2",62,0)
 S (VAUTD,IBDFMUL)=1
"RTN","IBDFOSG2",63,0)
 ;
"RTN","IBDFOSG2",64,0)
 W !!,"You will need a 132 column printer for this report!",!
"RTN","IBDFOSG2",65,0)
 D SELDEV I '$D(IOP)!('$D(DQTIME)) G END
"RTN","IBDFOSG2",66,0)
 ;
"RTN","IBDFOSG2",67,0)
 D DTRNG ;,SELMONTH
"RTN","IBDFOSG2",68,0)
 S IBZ=$G(DTRNG1($E(Y,1,5)_"01"))
"RTN","IBDFOSG2",69,0)
 I IBZ,$D(DTRNG(IBZ)) S IBBDT=$P(DTRNG(IBZ),U),IBEDT=$P(DTRNG(IBZ),U,2) D PRT11
"RTN","IBDFOSG2",70,0)
 S DIR(0)="SB^A:ALL 24 MONTHS;S:SELECTED MONTH ONLY",DIR("A")="INCLUDE ALL MONTHS OR A SELECTED MONTH",DIR("B")="A" D ^DIR K DIR
"RTN","IBDFOSG2",71,0)
 G:$D(DIRUT) TOT11Q
"RTN","IBDFOSG2",72,0)
 I Y="A" D  G TOT11Q
"RTN","IBDFOSG2",73,0)
 .F IBZ=1:1:24 D PRT11
"RTN","IBDFOSG2",74,0)
 D SELMONTH
"RTN","IBDFOSG2",75,0)
 S IBZ=$G(DTRNG1($E(Y,1,5)_"01")) I IBZ D PRT11
"RTN","IBDFOSG2",76,0)
 ;
"RTN","IBDFOSG2",77,0)
TOT11Q G END
"RTN","IBDFOSG2",78,0)
 ;
"RTN","IBDFOSG2",79,0)
PRT11 ;
"RTN","IBDFOSG2",80,0)
 I IBZ,$D(DTRNG(IBZ)) S IBBDT=$P(DTRNG(IBZ),U),IBEDT=$P(DTRNG(IBZ),U,2)
"RTN","IBDFOSG2",81,0)
 S DIPA("DTFR")=IBBDT
"RTN","IBDFOSG2",82,0)
 W !,"#11  MONTH: "_$$DT()
"RTN","IBDFOSG2",83,0)
 S IBDFL="CLN",VAUTC=1
"RTN","IBDFOSG2",84,0)
 S IBDFDAT=$$HTE^XLFDT($H)
"RTN","IBDFOSG2",85,0)
 S IBDFBEG=IBBDT,IBDFEND=IBEDT
"RTN","IBDFOSG2",86,0)
 S ZTDTH=$TR(DQTIME,"@",".")
"RTN","IBDFOSG2",87,0)
 S ZTRTN="DQ^IBDFOSG",ZTSAVE("IB*")="",ZTSAVE("VAU*")="",ZTSAVE("VAD*")="",ZTDESC="Scanned Encntr Forms Totals" D ^%ZTLOAD
"RTN","IBDFOSG2",88,0)
 W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled")
"RTN","IBDFOSG2",89,0)
 Q
"RTN","IBDFOSG2",90,0)
 ;
"RTN","IBDFOSG2",91,0)
END D END^IBDFOSG
"RTN","IBDFOSG2",92,0)
 K DQTIME,IOP
"RTN","IBDFOSG2",93,0)
 Q
"RTN","IBDFOSG2",94,0)
 ;
"RTN","IBDFOSG2",95,0)
PRT(IBTOT,IBFLDS,IBBY,IBDHD,DIOBEG,DIOEND) ; Prt rpt
"RTN","IBDFOSG2",96,0)
 N IBZ,DTRNG,DTRNG1,DIPA,Y,X
"RTN","IBDFOSG2",97,0)
 W !,"#",IBTOT
"RTN","IBDFOSG2",98,0)
 D:'$D(IOP) SELDEV G:'$D(IOP)!('$D(DQTIME)) PRTQ
"RTN","IBDFOSG2",99,0)
 D DTRNG
"RTN","IBDFOSG2",100,0)
 S DIR(0)="SB^A:ALL 24 MONTHS;S:SELECTED MONTH ONLY",DIR("A")="INCLUDE ALL MONTHS OR A SELECTED MONTH",DIR("B")="A" D ^DIR K DIR
"RTN","IBDFOSG2",101,0)
 G:$D(DIRUT) PRTQ
"RTN","IBDFOSG2",102,0)
 I Y="A" D  G PRTQ
"RTN","IBDFOSG2",103,0)
 .F IBZ=1:1:24 D PRT1
"RTN","IBDFOSG2",104,0)
 D SELMONTH
"RTN","IBDFOSG2",105,0)
 S IBZ=$G(DTRNG1($E(Y,1,5)_"01")) I IBZ D PRT1
"RTN","IBDFOSG2",106,0)
PRTQ Q
"RTN","IBDFOSG2",107,0)
 ;
"RTN","IBDFOSG2",108,0)
PRT1 I $G(IBTOT)=10 S DIOBEG="D BEG10^IBDFOSG2",DIOEND="D END10^IBDFOSG2"
"RTN","IBDFOSG2",109,0)
 S DIPA("DTTO")=$P(DTRNG(IBZ),U,2),DIPA("DTFR")=$P(DTRNG(IBZ),U),FLDS="[EFDP "_IBFLDS_"]",BY="[EFDP "_IBBY_"]"
"RTN","IBDFOSG2",110,0)
 S FR="3,"_DIPA("DTFR"),TO="4,"_DIPA("DTTO"),L=0,DHD=IBDHD_"   MONTH: "_$$DT(),DIC="^DGCR(399,",DIS(0)="I $O(^DGCR(399,D0,""OP"",0))'="""""
"RTN","IBDFOSG2",111,0)
 W !,"TOTALS FOR #"_IBTOT_" ("_$$DT()_")"
"RTN","IBDFOSG2",112,0)
 D EN1^DIP
"RTN","IBDFOSG2",113,0)
 Q
"RTN","IBDFOSG2",114,0)
 ;
"RTN","IBDFOSG2",115,0)
BEG10 ; DIOBEG
"RTN","IBDFOSG2",116,0)
 S ^TMP($J,"EFDPTOT",1)=0,^(2)=0,^TMP($J,"EFDPTOT",3)=0,^(4)=0
"RTN","IBDFOSG2",117,0)
 Q
"RTN","IBDFOSG2",118,0)
 ;
"RTN","IBDFOSG2",119,0)
END10 ; DIOEND
"RTN","IBDFOSG2",120,0)
 W !!,"(10a) AVERAGE # DAYS LAG FROM ENCOUNTER TO BILL CREATE: ",$J($S(^TMP($J,"EFDPTOT",2):^TMP($J,"EFDPTOT",1)/^TMP($J,"EFDPTOT",2),1:0),10,2)
"RTN","IBDFOSG2",121,0)
 W !,"(10b) AVERAGE # DAYS LAG FROM ENCOUNTER TO BILL PRINT : ",$J($S(^TMP($J,"EFDPTOT",4):^TMP($J,"EFDPTOT",3)/^TMP($J,"EFDPTOT",4),1:0),10,2)
"RTN","IBDFOSG2",122,0)
 K ^TMP($J,"EFDPTOT")
"RTN","IBDFOSG2",123,0)
 Q
"RTN","IBDFOSG2",124,0)
 ;
"RTN","IBDFOSG2",125,0)
LAG ; Set up lag time accumulators-from computed fld
"RTN","IBDFOSG2",126,0)
 N X1,X2,Z,Z0,Z1
"RTN","IBDFOSG2",127,0)
 S (Z,X)=0,Z0=+$G(^DGCR(399,D0,"S")),Z1=+$P($G(^("S")),U,12)
"RTN","IBDFOSG2",128,0)
 F  S Z=$O(^DGCR(399,D0,"OP",Z)) S:'Z X=0 Q:'Z  D  ;loop thru opt visits
"RTN","IBDFOSG2",129,0)
 .S X1=Z0,X2=+$G(^DGCR(399,D0,"OP",Z,0)) I X2,X1 D ^%DTC S ^TMP($J,"EFDPTOT",1)=$G(^TMP($J,"EFDPTOT",1))+X,^TMP($J,"EFDPTOT",2)=$G(^TMP($J,"EFDPTOT",2))+1 ;elapsed time and count - encounter to bill create
"RTN","IBDFOSG2",130,0)
 .S X1=Z1,X2=+$G(^DGCR(399,D0,"OP",Z,0)) I X2,X1 D ^%DTC S ^TMP($J,"EFDPTOT",3)=$G(^TMP($J,"EFDPTOT",3))+X,^TMP($J,"EFDPTOT",4)=$G(^TMP($J,"EFDPTOT",4))+1 ;elapsed tm,ct (encntr-bill 1st prt)
"RTN","IBDFOSG2",131,0)
 Q
"RTN","IBDFOSG2",132,0)
 ;
"RTN","IBDFOSG2",133,0)
GEN30 ; Was printed within 30 days of any visit on bill
"RTN","IBDFOSG2",134,0)
 N X1,X2,Z,Z0
"RTN","IBDFOSG2",135,0)
 S (Z,X)=0,Z0=+$P($G(^DGCR(399,D0,"S")),U,12) Q:'Z0
"RTN","IBDFOSG2",136,0)
 F  S Z=$O(^DGCR(399,D0,"OP",Z)) S:'Z X=0 Q:'Z  D  Q:X  ;loop thru opt visits
"RTN","IBDFOSG2",137,0)
 .S X1=Z0,X2=+$G(^DGCR(399,D0,"OP",Z,0)) I X2,X1 D ^%DTC S X=$S(X<30:1,1:0)
"RTN","IBDFOSG2",138,0)
 Q
"RTN","IBDFOSG2",139,0)
 ;
"RTN","IBDFOSG2",140,0)
DTRNG ;
"RTN","IBDFOSG2",141,0)
 N Z,Z0,X1,X2,X
"RTN","IBDFOSG2",142,0)
 ;S Z=2931001 F Z0=1:1:23 D
"RTN","IBDFOSG2",143,0)
 S Z=2940401 F Z0=1:1:24 D
"RTN","IBDFOSG2",144,0)
 .S X2=-1,Z1=$E(Z,1,5)+1_"01" S:$E(Z1,4,5)=13 Z1=Z1+8800
"RTN","IBDFOSG2",145,0)
 .S X1=Z1 D C^%DTC S DTRNG(Z0)=Z_U_X,DTRNG1(Z)=Z0,Z=Z1
"RTN","IBDFOSG2",146,0)
 Q
"RTN","IBDFOSG2",147,0)
 ; 
"RTN","IBDFOSG2",148,0)
SELDEV ; Device/queue tm (IOP,DQTIME returned)
"RTN","IBDFOSG2",149,0)
 K IOP,DQTIME
"RTN","IBDFOSG2",150,0)
 S %ZIS("A")="Select device the output will be queued to: ",%ZIS="NQ",%ZIS("B")=""
"RTN","IBDFOSG2",151,0)
 D ^%ZIS K %ZIS
"RTN","IBDFOSG2",152,0)
 I IO=IO(0) W !,$C(7),"CANNOT BE YOUR HOME DEVICE" G SELDEV
"RTN","IBDFOSG2",153,0)
 I POP D HOME^%ZIS G SELDEVQ
"RTN","IBDFOSG2",154,0)
 S IOP="Q;"_IO
"RTN","IBDFOSG2",155,0)
 S %DT("A")="Select date/time to queue these reports to run: ",%DT="AEXRF",%DT("B")="NOW",%DT(0)="NOW" D ^%DT K %DT
"RTN","IBDFOSG2",156,0)
 I Y>0 S DQTIME=$TR(Y,".","@") I $L($P(Y,"@",2))<4 S DQTIME=DQTIME_$E("0000",1,4-$L($P(DQTIME,"@",2)))
"RTN","IBDFOSG2",157,0)
SELDEVQ Q
"RTN","IBDFOSG2",158,0)
 ;
"RTN","IBDFOSG2",159,0)
DT() ; Display date format
"RTN","IBDFOSG2",160,0)
 S Y=$E(DIPA("DTFR"),1,5)_"00"
"RTN","IBDFOSG2",161,0)
 D DD^%DT
"RTN","IBDFOSG2",162,0)
 Q Y
"RTN","IBDFOSG2",163,0)
 ;
"RTN","IBDFOSG2",164,0)
SELMONTH ;
"RTN","IBDFOSG2",165,0)
 F  S %DT="AEPN",%DT(0)=-2960300,%DT("A")="SELECT MONTH: " D ^%DT K %DT Q:X="^"!($D(DTOUT))!($D(DTRNG1($E(Y,1,5)_"01")))  W !,$C(7),"Must choose a month from 4/94 thru 3/96"
"RTN","IBDFOSG2",166,0)
 Q
"RTN","IBDFOSG2",167,0)
 ;
"RTN","IBDFOSG3")
0^210^B18159684
"RTN","IBDFOSG3",1,0)
IBDFOSG3 ;ALB/MAF/AAS - NUMBER OF ENCOUNTERS WITH CPT'S AND DX'S REPORT ;3/18/96
"RTN","IBDFOSG3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFOSG3",3,0)
 ;
"RTN","IBDFOSG3",4,0)
% I '$D(DT) D DT^DICRW
"RTN","IBDFOSG3",5,0)
 D END
"RTN","IBDFOSG3",6,0)
 W !!,"Number of Encounters with CPT, Diagnosis"
"RTN","IBDFOSG3",7,0)
 S VAUTD=1 I $D(^DG(43,1,"GL")) D DIVISION^VAUTOMA G:Y=-1 END
"RTN","IBDFOSG3",8,0)
 S IBDFDAT=$$HTE^XLFDT($H)
"RTN","IBDFOSG3",9,0)
 ;
"RTN","IBDFOSG3",10,0)
DATE ; -- select date
"RTN","IBDFOSG3",11,0)
 S (IBBDT,IBDFBEG)=2940401,(IBEDT,IBDFEND)=2960331
"RTN","IBDFOSG3",12,0)
 ;
"RTN","IBDFOSG3",13,0)
DEV ; -- select device, run option
"RTN","IBDFOSG3",14,0)
 S %ZIS="QM" D ^%ZIS G:POP END
"RTN","IBDFOSG3",15,0)
 I $D(IO("Q")) S ZTRTN="DQ^IBDFOSG3",ZTSAVE("IB*")="",ZTSAVE("VA*")="",ZTDESC="IBD - Number of Encounters with Stop Codes, CPT, Diagnosis" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G END
"RTN","IBDFOSG3",16,0)
 ;
"RTN","IBDFOSG3",17,0)
 U IO
"RTN","IBDFOSG3",18,0)
 S X=132 X ^%ZOSF("RM")
"RTN","IBDFOSG3",19,0)
DQ D PRINT G END
"RTN","IBDFOSG3",20,0)
 Q
"RTN","IBDFOSG3",21,0)
 ;
"RTN","IBDFOSG3",22,0)
END ; -- Clean up
"RTN","IBDFOSG3",23,0)
 K ^TMP("MNTH",$J),^TMP("DTOT",$J),^TMP("GTOT",$J) W !
"RTN","IBDFOSG3",24,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBDFOSG3",25,0)
 D ^%ZISC
"RTN","IBDFOSG3",26,0)
 K IBBDT,IBCS,IBDDT,IBDDT1,IBDFMN,IBDFMN1,IBDFMNI,IBDFN,IBDIV,IBDIVNM,IBI,IBIFN,IBJ,IBMNTH,IBNODE,IBPARNT,IBPIECE,IBPR,IBPROC,IBSTOP,POP,SDCNT,U
"RTN","IBDFOSG3",27,0)
 K IBDFBEG,IBDFDAT,IBDFDIV,IBDFDVE,IBDFEND,IBEDT,IBFLG4,IBHDT,IBQUIT,IBTSBDT,IBTSEDT,SDDXY,X,Y,IBCLIN,IBPAG,VAUTD
"RTN","IBDFOSG3",28,0)
 Q
"RTN","IBDFOSG3",29,0)
 ;K X,Y,DFN,IBPAG,IBHDT,IBDT,IBBDT,IBEDT,IBQUIT,IBDFDVE
"RTN","IBDFOSG3",30,0)
 ;K IBCNT,IBDFBEG,IBDFCLI,IBDFDA,IBDFDAT,IBDFDIV,IBDFEND,IBDFIFN,IBDFNODE,IBDFNUM,IBDFSA,IBDFT,IBDFTMP,IBDFTMP1,IBDFTMP2,IBDFTPRT
"RTN","IBDFOSG3",31,0)
 ;K IBFLG1,IBFLG2,IBFLG3,IBFLG4,IBFLG5,IBFLG6,IBFLG7,IBFLG8,IBFLG9,IBMCNODE,IBMCSND,IBNAM,IBTSBDT,IBTSEDT
"RTN","IBDFOSG3",32,0)
 ;K VAUTC,VAUTD
"RTN","IBDFOSG3",33,0)
 Q
"RTN","IBDFOSG3",34,0)
 ;
"RTN","IBDFOSG3",35,0)
PRINT ; -- print report
"RTN","IBDFOSG3",36,0)
 ;    Data sorted into ^tmp arrays
"RTN","IBDFOSG3",37,0)
 ;                    
"RTN","IBDFOSG3",38,0)
 ;    Monthly Totals  := ^tmp("mnth",$j,division,year/month)=
"RTN","IBDFOSG3",39,0)
 ;    Division Totals := ^tmp("dtot",$j,division)       =
"RTN","IBDFOSG3",40,0)
 ;    Grand Totals    := ^tmp("gtot",$j)                =
"RTN","IBDFOSG3",41,0)
 ;
"RTN","IBDFOSG3",42,0)
 S (IBPAG,IBDFDVE)=0,IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0
"RTN","IBDFOSG3",43,0)
 S IBTSBDT=IBBDT-.1,IBTSEDT=IBEDT+.9
"RTN","IBDFOSG3",44,0)
 D QUIT
"RTN","IBDFOSG3",45,0)
 D START^IBDFOSG4
"RTN","IBDFOSG3",46,0)
 ;
"RTN","IBDFOSG3",47,0)
PR ;
"RTN","IBDFOSG3",48,0)
 I '$D(^TMP("MNTH",$J)) D HDR W !!,"No Data Meeting This Criteria for the Date Range Chosen",! Q
"RTN","IBDFOSG3",49,0)
 N IBDFDV,IBDFCL,IBDNODE,IBDFTMP,IBDFPAT,IBDFPT,IBDFT
"RTN","IBDFOSG3",50,0)
 S (IBDFDV,IBDFCL,IBDFPT)=0
"RTN","IBDFOSG3",51,0)
 F IBDFDIV=0:0 S IBDFDV=$O(^TMP("MNTH",$J,IBDFDV)) Q:IBDFDV']""!(IBQUIT)  D HDR Q:IBQUIT  D
"RTN","IBDFOSG3",52,0)
 .D DIVH
"RTN","IBDFOSG3",53,0)
 .S IBDFMN=0
"RTN","IBDFOSG3",54,0)
 .F IBDFMNI=0:0 S IBDFMN=$O(^TMP("MNTH",$J,IBDFDV,IBDFMN)) Q:IBDFMN=""  D ONEMN I $O(^TMP("MNTH",$J,IBDFDV,IBDFMN))="" S IBDFDVE=1 D ONEDV
"RTN","IBDFOSG3",55,0)
 ;
"RTN","IBDFOSG3",56,0)
 ;  -- Print Totals Page
"RTN","IBDFOSG3",57,0)
 S IBDFDVE=0
"RTN","IBDFOSG3",58,0)
 Q:IBQUIT
"RTN","IBDFOSG3",59,0)
 D HDR
"RTN","IBDFOSG3",60,0)
 S (IBDFDV,IBDFCL,IBDFPT)=0
"RTN","IBDFOSG3",61,0)
 S IBFLG4=1 ;1 := on division totals page
"RTN","IBDFOSG3",62,0)
 F IBDFDIV=0:0 S IBDFDV=$O(^TMP("DTOT",$J,IBDFDV)) Q:IBDFDV']""!(IBQUIT)  D ONEDV
"RTN","IBDFOSG3",63,0)
 Q:IBQUIT
"RTN","IBDFOSG3",64,0)
 D DASH
"RTN","IBDFOSG3",65,0)
 D LINE("GRAND TOTAL",^TMP("GTOT",$J))
"RTN","IBDFOSG3",66,0)
 Q
"RTN","IBDFOSG3",67,0)
 ;
"RTN","IBDFOSG3",68,0)
ONEMN ; -- Print one months data
"RTN","IBDFOSG3",69,0)
 Q:IBQUIT
"RTN","IBDFOSG3",70,0)
 N IBDFNM1
"RTN","IBDFOSG3",71,0)
 Q:'$D(^TMP("MNTH",$J,IBDFDV,IBDFMN))!(^TMP("MNTH",$J,IBDFDV,IBDFMN)="0^0^0")
"RTN","IBDFOSG3",72,0)
 S Y=IBDFMN D DD^%DT S IBDFMN1=Y
"RTN","IBDFOSG3",73,0)
 D LINE(IBDFMN1,^TMP("MNTH",$J,IBDFDV,IBDFMN))
"RTN","IBDFOSG3",74,0)
 Q
"RTN","IBDFOSG3",75,0)
 ;
"RTN","IBDFOSG3",76,0)
ONEDV ;  -- Print Division totals
"RTN","IBDFOSG3",77,0)
 Q:IBQUIT
"RTN","IBDFOSG3",78,0)
 I IOSL<($Y+5) D HDR Q:IBQUIT
"RTN","IBDFOSG3",79,0)
 Q:^TMP("DTOT",$J,IBDFDV)="0^0^0"&('$D(IBFLG4))
"RTN","IBDFOSG3",80,0)
 I IBDFDVE=1 D DASH S IBDFDVE=0
"RTN","IBDFOSG3",81,0)
 D LINE($E(IBDFDV,1,25)_"  ("_$P($$SITE^VASITE(,$O(^DG(40.8,"B",IBDFDV,0))),"^",3)_")",^TMP("DTOT",$J,IBDFDV))
"RTN","IBDFOSG3",82,0)
 Q
"RTN","IBDFOSG3",83,0)
 ;
"RTN","IBDFOSG3",84,0)
LINE(NAME,IBX) ;
"RTN","IBDFOSG3",85,0)
 ; -- print detail line
"RTN","IBDFOSG3",86,0)
 ;    input Name := text to be printed
"RTN","IBDFOSG3",87,0)
 ;          ibx  ;= 3 piece global node containing data
"RTN","IBDFOSG3",88,0)
 ;
"RTN","IBDFOSG3",89,0)
 I IOSL<($Y+5) D HDR Q:IBQUIT
"RTN","IBDFOSG3",90,0)
 W !,$E(NAME,1,35)
"RTN","IBDFOSG3",91,0)
 W ?39,$J($P(IBX,"^",2),8)
"RTN","IBDFOSG3",92,0)
 W ?57,$J($P(IBX,"^",3),8)
"RTN","IBDFOSG3",93,0)
 Q
"RTN","IBDFOSG3",94,0)
 ;
"RTN","IBDFOSG3",95,0)
HDR ; -- Print header for report
"RTN","IBDFOSG3",96,0)
 Q:IBQUIT
"RTN","IBDFOSG3",97,0)
 I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBDFOSG3",98,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
"RTN","IBDFOSG3",99,0)
 S IBPAG=IBPAG+1
"RTN","IBDFOSG3",100,0)
 W !,"# Encounters / CPT's, Dx",?(IOM-33),"Page ",IBPAG,"  ",IBHDT
"RTN","IBDFOSG3",101,0)
 W !,"For Period beginning on ",$$FMTE^XLFDT(IBBDT,2)," to ",$$FMTE^XLFDT(IBEDT,2)
"RTN","IBDFOSG3",102,0)
 W !,?44,"CPT",?56,"Diagnosis"
"RTN","IBDFOSG3",103,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBDFOSG3",104,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 W !!,"....task stopped at user request" Q
"RTN","IBDFOSG3",105,0)
 Q
"RTN","IBDFOSG3",106,0)
 ;
"RTN","IBDFOSG3",107,0)
 ;
"RTN","IBDFOSG3",108,0)
QUIT K ^TMP("MNTH",$J),^TMP("DTOT",$J),^TMP("GTOT",$J) W !
"RTN","IBDFOSG3",109,0)
 Q
"RTN","IBDFOSG3",110,0)
 ;
"RTN","IBDFOSG3",111,0)
 ;
"RTN","IBDFOSG3",112,0)
DASH W !,"------------------",?39,"--------",?57,"--------"
"RTN","IBDFOSG3",113,0)
 Q
"RTN","IBDFOSG3",114,0)
 ;
"RTN","IBDFOSG3",115,0)
DIVH ;  -- Write division header
"RTN","IBDFOSG3",116,0)
 I IOSL<($Y+5) D HDR Q:IBQUIT
"RTN","IBDFOSG3",117,0)
 Q:^TMP("DTOT",$J,IBDFDV)="0^0^0"
"RTN","IBDFOSG3",118,0)
 W !!,?(IOM-$L(IBDFDV)+10/2),"DIVISION: ",IBDFDV_"  ("_$P($$SITE^VASITE(,$O(^DG(40.8,"B",IBDFDV,0))),"^",3)_")",!
"RTN","IBDFOSG3",119,0)
 Q
"RTN","IBDFOSG4")
0^211^B6067002
"RTN","IBDFOSG4",1,0)
IBDFOSG4 ;ALB/MAF/AAS - NUMBER OF ENCOUNTERS WITH CPT'S AND DX'S CONT. ; 3/18/96
"RTN","IBDFOSG4",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFOSG4",3,0)
 ;
"RTN","IBDFOSG4",4,0)
START ;  -- Loop thru MONTHS
"RTN","IBDFOSG4",5,0)
 N IBQUIT
"RTN","IBDFOSG4",6,0)
 S IBQUIT=0
"RTN","IBDFOSG4",7,0)
 S ^TMP("GTOT",$J)="0^0^0"
"RTN","IBDFOSG4",8,0)
BLD ; -- scan ENCOUNTERS
"RTN","IBDFOSG4",9,0)
 F IBDDT=IBDFBEG:0 S IBDDT=$O(^SCE("B",IBDDT)) Q:'IBDDT!($P(IBDDT,".",1)>IBDFEND)  D
"RTN","IBDFOSG4",10,0)
 .F IBIFN=0:0 S IBIFN=$O(^SCE("B",IBDDT,IBIFN)) Q:'IBIFN  S IBNODE=$G(^SCE(IBIFN,0)) D
"RTN","IBDFOSG4",11,0)
 ..S IBDIV=$P(IBNODE,"^",11)  ;division
"RTN","IBDFOSG4",12,0)
 ..S IBDIVNM=$P($$SITE^VASITE(,+IBDIV),"^",3)
"RTN","IBDFOSG4",13,0)
 ..I VAUTD=0 Q:'$D(VAUTD(+IBDIV))
"RTN","IBDFOSG4",14,0)
 ..S IBDFN=$P(IBNODE,"^",2)  ;patient
"RTN","IBDFOSG4",15,0)
 ..S IBSTOP=$P(IBNODE,"^",3)  ;stop code
"RTN","IBDFOSG4",16,0)
 ..S IBCLIN=$P(IBNODE,"^",4)  ;clinic
"RTN","IBDFOSG4",17,0)
 ..S IBPARNT=$P(IBNODE,"^",6)  ;parent
"RTN","IBDFOSG4",18,0)
 ..S IBPROC=$P(IBNODE,"^",8)  ;process
"RTN","IBDFOSG4",19,0)
 ..S IBMNTH=$E($P(IBNODE,"^"),1,3)_$E($P(IBNODE,"^"),4,5)  ;number of month
"RTN","IBDFOSG4",20,0)
 ..Q:'IBDFN
"RTN","IBDFOSG4",21,0)
 ..D PROC I $D(IBXY) S IBPIECE=2 D SET
"RTN","IBDFOSG4",22,0)
 ..D SET^SDCO4(IBIFN) I $D(SDDXY) S IBPIECE=3 D SET
"RTN","IBDFOSG4",23,0)
 ..Q
"RTN","IBDFOSG4",24,0)
 Q
"RTN","IBDFOSG4",25,0)
 ;
"RTN","IBDFOSG4",26,0)
 ;
"RTN","IBDFOSG4",27,0)
SET ;  -- Set totals
"RTN","IBDFOSG4",28,0)
 I '$D(^TMP("DTOT",$J,IBDIVNM)) S ^TMP("DTOT",$J,IBDIVNM)="0^0^0"
"RTN","IBDFOSG4",29,0)
 I '$D(^TMP("MNTH",$J,IBDIVNM,IBMNTH)) S ^TMP("MNTH",$J,IBDIVNM,IBMNTH)="0^0^0"
"RTN","IBDFOSG4",30,0)
 S $P(^TMP("MNTH",$J,IBDIVNM,IBMNTH),"^",IBPIECE)=$P(^TMP("MNTH",$J,IBDIVNM,IBMNTH),"^",IBPIECE)+1
"RTN","IBDFOSG4",31,0)
 S $P(^TMP("DTOT",$J,IBDIVNM),"^",IBPIECE)=$P(^TMP("DTOT",$J,IBDIVNM),"^",IBPIECE)+1
"RTN","IBDFOSG4",32,0)
 S $P(^TMP("GTOT",$J),"^",IBPIECE)=$P(^TMP("GTOT",$J),"^",IBPIECE)+1
"RTN","IBDFOSG4",33,0)
 Q
"RTN","IBDFOSG4",34,0)
PROC ;  -- Check to see if there is at least one procedure for the encounter.
"RTN","IBDFOSG4",35,0)
 N IBCNT S IBCNT=0
"RTN","IBDFOSG4",36,0)
 K IBXY
"RTN","IBDFOSG4",37,0)
 S IBDDT1=$P(IBDDT,"."),IBI=IBDDT1-.000001
"RTN","IBDFOSG4",38,0)
 F  S IBI=$O(^SDV("C",IBDFN,IBI)) Q:'IBI!(IBI>(IBDDT1+.25))  D
"RTN","IBDFOSG4",39,0)
 .S IBCS=0 F  S IBCS=$O(^SDV(IBI,"CS",IBCS)) Q:'IBCS  I $D(^SDV(IBI,"CS",IBCS,0)) I $P(^SDV(IBI,"CS",IBCS,0),"^",8)=IBIFN,$D(^SDV(IBI,"CS",IBCS,"PR")) S IBPR=^("PR") D  Q:$D(IBXY)
"RTN","IBDFOSG4",40,0)
 ..F IBJ=1:1:5 I $P(IBPR,"^",IBJ) S IBCNT=IBCNT+1,IBXY(IBCNT)=$P(IBPR,"^",IBJ)_"^"_IBI Q:$D(IBXY(IBCNT))
"RTN","IBDFOSG4",41,0)
 Q
"RTN","IBDFOSG4",42,0)
 ;
"RTN","IBDFOSG9")
1^212
"RTN","IBDFPCE")
0^213^B4438660
"RTN","IBDFPCE",1,0)
IBDFPCE ;ALB/AAS - AICS UPDATE FROM PCE ; 12-DEC-95
"RTN","IBDFPCE",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFPCE",3,0)
 ;
"RTN","IBDFPCE",4,0)
MAN ; -- called from IBDF PCE EVENT (invoked by the PXK VISIT DATA EVENT)
"RTN","IBDFPCE",5,0)
 ;    if aics starts event, quit
"RTN","IBDFPCE",6,0)
 ;    else
"RTN","IBDFPCE",7,0)
 ;    find appointment date from visit node
"RTN","IBDFPCE",8,0)
 ;    find entry in forms tracking for visit
"RTN","IBDFPCE",9,0)
 ;    update manual data entry field to yes if new or old visit edited
"RTN","IBDFPCE",10,0)
 ;    update manual data entry field to no if entry deleted
"RTN","IBDFPCE",11,0)
 ;
"RTN","IBDFPCE",12,0)
 Q:$D(IBD("AICS"))
"RTN","IBDFPCE",13,0)
 N IBDVST,IBD,IBDFN
"RTN","IBDFPCE",14,0)
 S (IBDVST,IBDFN)=""
"RTN","IBDFPCE",15,0)
 ;
"RTN","IBDFPCE",16,0)
 F  S IBDVST=$O(^TMP("PXKCO",$J,IBDVST)) Q:'IBDVST  D
"RTN","IBDFPCE",17,0)
 .S IBDVST("AFTER")=$G(^TMP("PXKCO",$J,IBDVST,"VST",IBDVST,0,"AFTER")),IBDVST("BEFORE")=$G(^("BEFORE"))
"RTN","IBDFPCE",18,0)
 .;
"RTN","IBDFPCE",19,0)
 .; -- new or old visit
"RTN","IBDFPCE",20,0)
 .I IBDVST("AFTER")]"",IBDVST("BEFORE")]""!(IBDVST("BEFORE")="") S IBD("APPT")=+IBDVST("AFTER"),IBD("VALUE")=1,IBDFN=$P(IBDVST("AFTER"),"^",5) D UPDATE(.IBD) Q
"RTN","IBDFPCE",21,0)
 .;
"RTN","IBDFPCE",22,0)
 .; -- deleted visit
"RTN","IBDFPCE",23,0)
 .I IBDVST("AFTER")="",IBDVST("BEFORE")]"" S IBD("APPT")=+IBDVST("BEFORE"),IBD("VALUE")=0,IBDFN=$P(IBDVST("BEFORE"),"^",5) D UPDATE(.IBD) Q
"RTN","IBDFPCE",24,0)
 ;
"RTN","IBDFPCE",25,0)
 Q
"RTN","IBDFPCE",26,0)
 ;
"RTN","IBDFPCE",27,0)
UPDATE(IBD) ; -- procedure to update manual data entry detected
"RTN","IBDFPCE",28,0)
 ;
"RTN","IBDFPCE",29,0)
 N X,Y,DA,DIC,DIE,DR,IBDX,IBDC
"RTN","IBDFPCE",30,0)
 Q:'$G(IBDFN)!('$G(IBD("APPT")))!('$G(IBD("VALUE")))
"RTN","IBDFPCE",31,0)
 I '$D(IBD("FORM ID")) S IBD("FORM ID")=$$FINDID^IBDF18C(IBDFN,IBD("APPT"))
"RTN","IBDFPCE",32,0)
 ;
"RTN","IBDFPCE",33,0)
 ; -- ibd(form id) can be returned with multiple pieces if more than
"RTN","IBDFPCE",34,0)
 ;    one form for appt.
"RTN","IBDFPCE",35,0)
 F IBDX=1:1 S DA=+$P(IBD("FORM ID"),"^",IBDX) Q:'DA  D
"RTN","IBDFPCE",36,0)
 . Q:$P($G(^IBD(357.96,+DA,0)),"^",13)
"RTN","IBDFPCE",37,0)
 . Q:$P($G(^IBD(357.96,+DA,0)),"^",2)'=IBDFN
"RTN","IBDFPCE",38,0)
 . Q:$P($G(^IBD(357.96,+DA,0)),"^",3)'=IBD("APPT")
"RTN","IBDFPCE",39,0)
 . S DIE="^IBD(357.96,",DR=".13////"_+$G(IBD("VALUE"))
"RTN","IBDFPCE",40,0)
 . D ^DIE S IBDC=$G(IBDC)+1
"RTN","IBDFPCE",41,0)
 . I IBDC=1,'$D(ZTQUEUED) W !,"Updating Encounter Form Tracking (AICS)"
"RTN","IBDFPCE",42,0)
 Q
"RTN","IBDFPE")
0^214^B25429405
"RTN","IBDFPE",1,0)
IBDFPE ;MAF/ALB - ENCOUNTER FORMS QUEUEING PARAMETERS DISPLAY 1 31 94
"RTN","IBDFPE",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFPE",3,0)
EN ; -- main entry point for IBDF EF QUEUE PARMS
"RTN","IBDFPE",4,0)
 D EN^VALM("IBDF EF QUEUE PARMS")
"RTN","IBDFPE",5,0)
 Q
"RTN","IBDFPE",6,0)
 ;
"RTN","IBDFPE",7,0)
HDR ; -- header code
"RTN","IBDFPE",8,0)
 S VALMHDR(1)="This is the list of Print Manager's Queuing Parameters (PMQP) for your facility"
"RTN","IBDFPE",9,0)
 S VALMHDR(2)="You may enter new ones or edit those already set up."
"RTN","IBDFPE",10,0)
 Q
"RTN","IBDFPE",11,0)
 ;
"RTN","IBDFPE",12,0)
 ;
"RTN","IBDFPE",13,0)
INIT ; -- init variables and list array
"RTN","IBDFPE",14,0)
 N IBFASTXT
"RTN","IBDFPE",15,0)
 S (IBDCAT,IBDNME,IBDTYPE,VALMCNT,IBDCNT,IBDCNT1,IBFASTXT)=0
"RTN","IBDFPE",16,0)
 K ^TMP("IBDRPT",$J),^TMP("IBDIDX",$J)
"RTN","IBDFPE",17,0)
 F IBDNUM=0:0 S IBDNUM=$O(^IBD(357.09,IBDNUM)) Q:'IBDNUM  F IBDNAME=0:0 S IBDNME=$O(^IBD(357.09,IBDNUM,"Q","B",IBDNME)) Q:IBDNME=""  F IBDIFN=0:0 S IBDIFN=$O(^IBD(357.09,IBDNUM,"Q","B",IBDNME,IBDIFN)) Q:IBDIFN']""  D SET1
"RTN","IBDFPE",18,0)
 I '$D(^TMP("IBDRPT",$J)) D NUL
"RTN","IBDFPE",19,0)
 Q
"RTN","IBDFPE",20,0)
 ;
"RTN","IBDFPE",21,0)
 ;
"RTN","IBDFPE",22,0)
SET1 ; -- Set up List
"RTN","IBDFPE",23,0)
 S IBDNODE=$G(^IBD(357.09,1,"Q",IBDIFN,0))
"RTN","IBDFPE",24,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFPE",25,0)
 S X="",X=$$SETSTR^VALM1(IBDCNT1_")",X,1,3)
"RTN","IBDFPE",26,0)
 S X=$$SETSTR^VALM1($P(IBDNODE,"^",1),X,30,40) D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFPE",27,0)
 S IBDCAT($P(IBDNODE,"^",1))=IBDCNT,IBDTYPE(IBDCNT1)=IBDIFN_"^"_IBDNUM
"RTN","IBDFPE",28,0)
 S X="",X=$$SETSTR^VALM1($$LOWER^VALM1("  STARTING DATE/TIME: "),X,1,22)
"RTN","IBDFPE",29,0)
 S IBDVAL=$S($P(IBDNODE,"^",2)]"":$$FDTTM^VALM1($P(IBDNODE,"^",2)),1:"")
"RTN","IBDFPE",30,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,23,17)
"RTN","IBDFPE",31,0)
 S IBDVAL=$S($P(IBDNODE,"^",7)]"":$P(IBDNODE,"^",7),1:"")
"RTN","IBDFPE",32,0)
 S X=$$SETSTR^VALM1($$LOWER^VALM1("DAYS TO PRINT AHEAD: "),X,40,21)
"RTN","IBDFPE",33,0)
 S X=$$SETSTR^VALM1($J(IBDVAL,5),X,65,5) D TMP
"RTN","IBDFPE",34,0)
 S X="",X=$$SETSTR^VALM1($$LOWER^VALM1("    ENDING DATE/TIME: "),X,1,22)
"RTN","IBDFPE",35,0)
 S IBDVAL=$S($P(IBDNODE,"^",3)]"":$$FDTTM^VALM1($P(IBDNODE,"^",3)),1:"")
"RTN","IBDFPE",36,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,23,17)
"RTN","IBDFPE",37,0)
 S IBDVAL=$P(IBDNODE,"^",5)
"RTN","IBDFPE",38,0)
 S X=$$SETSTR^VALM1($$LOWER^VALM1("       ADD ONS ONLY: "),X,40,21)
"RTN","IBDFPE",39,0)
 S X=$$SETSTR^VALM1($J($S(IBDVAL=1:"YES",1:"NO"),5),X,65,5) D TMP
"RTN","IBDFPE",40,0)
 S X="",X=$$SETSTR^VALM1($$LOWER^VALM1("       CLINIC GROUPS: "),X,1,22)
"RTN","IBDFPE",41,0)
 S IBDVAL=$P($G(^IBD(357.99,+$P(IBDNODE,"^",6),0)),"^",1)
"RTN","IBDFPE",42,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,23,17)
"RTN","IBDFPE",43,0)
 S X=$$SETSTR^VALM1($$LOWER^VALM1("  LAST DATE PRINTED: "),X,40,21)
"RTN","IBDFPE",44,0)
 S IBDVAL=$S($P(IBDNODE,"^",12)]"":$$FDTTM^VALM1($P(IBDNODE,"^",12)),1:"")
"RTN","IBDFPE",45,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,62,17) D TMP
"RTN","IBDFPE",46,0)
 S IBDVAL=$P(IBDNODE,"^",4)
"RTN","IBDFPE",47,0)
 S IBDVAL=$$LOWER^VALM1($S(IBDVAL=2:"DIV/TERM DIG",IBDVAL=3:"DIV/CLIN/TERM DIG",1:"DIV/CLIN/PATIENT"))
"RTN","IBDFPE",48,0)
 S X="",X=$$SETSTR^VALM1($$LOWER^VALM1("             SORT BY: "),X,1,22)
"RTN","IBDFPE",49,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,23,18)
"RTN","IBDFPE",50,0)
 S IBDVAL=$S($P(IBDNODE,"^",10)]"":$P(IBDNODE,"^",10),1:"")
"RTN","IBDFPE",51,0)
 S X=$$SETSTR^VALM1($$LOWER^VALM1("     PRINT PRIORITY: "),X,40,21)
"RTN","IBDFPE",52,0)
 S X=$$SETSTR^VALM1($J(IBDVAL,5),X,65,5) D TMP
"RTN","IBDFPE",53,0)
 S IBDVAL=$P(IBDNODE,"^",8)
"RTN","IBDFPE",54,0)
 S IBDVAL=$$LOWER^VALM1($S(IBDVAL="R":"RUN REGARDLESS",IBDVAL="I":"IGNORE HOLIDAYS/WEEKENDS",IBDVAL="H":"IGNORE HOLIDAYS",IBDVAL="W":"IGNORE WEEKENDS",IBDVAL="N":"NOT ACTIVE",1:"RUN TODAY"))
"RTN","IBDFPE",55,0)
 S X="",X=$$SETSTR^VALM1($$LOWER^VALM1("SPECIAL INSTRUCTIONS: "),X,1,22)
"RTN","IBDFPE",56,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,23,30)
"RTN","IBDFPE",57,0)
 S X=$$SETSTR^VALM1($$LOWER^VALM1("DEVICE/TIME QUEUED: "),X,41,21)
"RTN","IBDFPE",58,0)
 S IBDVAL=$$LOWER^VALM1($E($P(IBDNODE,"^",9),1,12))_$S($P(IBDNODE,"^",13)="0000":" @",$P(IBDNODE,"^",13):" @",1:"")_$S($P(IBDNODE,"^",13)="0000":"0000",$P(IBDNODE,"^",13):$P(IBDNODE,"^",13),1:"")
"RTN","IBDFPE",59,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,62,18) D TMP
"RTN","IBDFPE",60,0)
 S X="",X=$$SETSTR^VALM1(X,X,1,80) D TMP
"RTN","IBDFPE",61,0)
 Q
"RTN","IBDFPE",62,0)
 ;
"RTN","IBDFPE",63,0)
 ;
"RTN","IBDFPE",64,0)
TMP ; -- Set up Array
"RTN","IBDFPE",65,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFPE",66,0)
 S ^TMP("IBDRPT",$J,IBDCNT,0)=X,^TMP("IBDRPT",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFPE",67,0)
 S ^TMP("IBDIDX",$J,IBDCNT)=VALMCNT_"^"_IBDIFN
"RTN","IBDFPE",68,0)
 Q
"RTN","IBDFPE",69,0)
 ;
"RTN","IBDFPE",70,0)
 ;
"RTN","IBDFPE",71,0)
JUMP ; -- Jump to a Specific Parameter Set
"RTN","IBDFPE",72,0)
 D FULL^VALM1
"RTN","IBDFPE",73,0)
 I $D(XQORNOD(0)),$P(XQORNOD(0),"^",4)]"" S X=$P(XQORNOD(0),"^",4) S X=$P(X,"=",2) I X]"" D:X?1.6N JSEL S DA(1)=1,DIC="^IBD(357.09,"_DA(1)_","_"""Q"""_",",DIC(0)="QEZ" D ^DIC G:Y<0 JMP S Y=+Y D JUMP1 Q
"RTN","IBDFPE",74,0)
JMP S DA(1)=1,DIC="^IBD(357.09,"_DA(1)_","_"""Q"""_",",DIC(0)="AEMN",DIC("A")="Select Parameter Group you wish to move to: " D ^DIC K DIC
"RTN","IBDFPE",75,0)
 I X["^" S VALMBG=1,VALMBCK="R" Q
"RTN","IBDFPE",76,0)
JUMP1 I Y<0 G JUMP
"RTN","IBDFPE",77,0)
 N IBDXCAT
"RTN","IBDFPE",78,0)
 S IBDXCAT=$P(^IBD(357.09,DA(1),"Q",+Y,0),"^",1)
"RTN","IBDFPE",79,0)
 I '$D(IBDCAT(IBDXCAT)) W !!,"There is no data listed for this Parameter Group" G JMP
"RTN","IBDFPE",80,0)
 S VALMBG=IBDCAT(IBDXCAT) S VALMBCK="R" K DA(1) Q
"RTN","IBDFPE",81,0)
 Q
"RTN","IBDFPE",82,0)
 ;
"RTN","IBDFPE",83,0)
 ;
"RTN","IBDFPE",84,0)
JSEL ; -- Convert number selected to name
"RTN","IBDFPE",85,0)
 S IBDVALM=X,X=$S($D(IBDTYPE(IBDVALM)):$P(IBDTYPE(IBDVALM),"^",1),1:"") I X]"" S DA(1)=1,X=$P(^IBD(357.09,DA(1),"Q",X,0),"^",1)
"RTN","IBDFPE",86,0)
 Q
"RTN","IBDFPE",87,0)
HELP ; -- help code
"RTN","IBDFPE",88,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFPE",89,0)
 Q
"RTN","IBDFPE",90,0)
 ;
"RTN","IBDFPE",91,0)
 ;
"RTN","IBDFPE",92,0)
EXIT ; -- exit code
"RTN","IBDFPE",93,0)
 K IBDCAT,IBDNME,IBDTYPE,VALMCNT,IBDCNT,IBDCNT1,IBDNAME,IBDNUM,IBDNME,IBDIFN,IBDVAL,IBDNODE,IBFASTXT
"RTN","IBDFPE",94,0)
 K ^TMP("IBDRPT",$J),^TMP("IBDIDX",$J)
"RTN","IBDFPE",95,0)
 Q
"RTN","IBDFPE",96,0)
 ;
"RTN","IBDFPE",97,0)
NUL ; -- NULL MESSAGE
"RTN","IBDFPE",98,0)
 S ^TMP("IBDRPT",$J,1,0)=" ",^TMP("IBDRPT",$J,2,0)="There are no PARAMETER GROUPS listed.",^TMP("IBDIDX",$J,1)=1,^TMP("IBDIDX",$J,2)=2
"RTN","IBDFPE",99,0)
 Q
"RTN","IBDFPE1")
0^215^B13475173
"RTN","IBDFPE1",1,0)
IBDFPE1 ;MAF/ALB - ENCOUNTER FORMS QUEUEING PARAMETERS DISPLAY CONT.; 1 31 94
"RTN","IBDFPE1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFPE1",3,0)
EDT ; -- Edit Parameter Groups
"RTN","IBDFPE1",4,0)
 N IBDVALM,IBDAT,VALMY
"RTN","IBDFPE1",5,0)
 S VALMBCK=""
"RTN","IBDFPE1",6,0)
 D EN^VALM2($G(XQORNOD(0))) G REP:'$O(VALMY(0)) S IBDVALM=0
"RTN","IBDFPE1",7,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBDFPE1",8,0)
 F IBDVALM=0:0 S IBDVALM=$O(VALMY(IBDVALM)) Q:'IBDVALM  S DA=$S($D(IBDTYPE(IBDVALM)):$P(IBDTYPE(IBDVALM),"^",1),1:"") I DA]"" D
"RTN","IBDFPE1",9,0)
 .S DA(1)=1,DIE="^IBD(357.09,"_DA(1)_","_"""Q"""_",",DA=DA,DR=".01;.04:.1;.13" D ^DIE K DA,DIE,DIC,DR
"RTN","IBDFPE1",10,0)
 D REP Q
"RTN","IBDFPE1",11,0)
 ;
"RTN","IBDFPE1",12,0)
 ;
"RTN","IBDFPE1",13,0)
ADD ; -- Add New Print Parameters
"RTN","IBDFPE1",14,0)
 D FULL^VALM1
"RTN","IBDFPE1",15,0)
 N DLAYGO
"RTN","IBDFPE1",16,0)
 I '$O(^IBD(357.09,0))!($O(^IBD(357.09,0))&'$D(^IBD(357.09,+$O(^IBD(357.09,0)),"Q",0))) W ! S DIC="^IBD(357.09,",DIC(0)="AELQMN",DIC("DR")=".01",DLAYGO=357.09 D ^DIC K DIC G:Y<1 REP S DA=+Y D
"RTN","IBDFPE1",17,0)
 .;S DIE="^IBD(357.09,",DA=DA,DR="11",DR(2,357.091)=".04:.1" D ^DIE K DA,DIE,DR
"RTN","IBDFPE1",18,0)
 W ! S DA(1)=1,DIC("A")="Select Print Mgrs. Queuing Params. Name: ",DIC="^IBD(357.09,"_DA(1)_","_"""Q"""_",",DIC(0)="AELQMN",DIC("DR")=".01",DLAYGO=357.09 D ^DIC K DIC G:Y<1 REP S DA=+Y D
"RTN","IBDFPE1",19,0)
 .S DA(1)=1,DIE="^IBD(357.09,"_DA(1)_","_"""Q"""_",",DA=DA
"RTN","IBDFPE1",20,0)
 .S DR=".04//"_1_";.05//"_"NO"_";.06"_";.07//"_5_";.08//"_"R"_";.09"_";.1//"_10_";.13//"_0000
"RTN","IBDFPE1",21,0)
 .D ^DIE K DA,DIE,DIC,DR
"RTN","IBDFPE1",22,0)
 .Q
"RTN","IBDFPE1",23,0)
REP D INIT^IBDFPE S VALMBCK="R" Q
"RTN","IBDFPE1",24,0)
 ;
"RTN","IBDFPE1",25,0)
STAT ; -- Find out the status of the queued job and kill a tasked job
"RTN","IBDFPE1",26,0)
 N IBDVALM,IBDAT,VALMY,IBDFNODE,IBDFSTAT
"RTN","IBDFPE1",27,0)
 S VALMBCK=""
"RTN","IBDFPE1",28,0)
 D EN^VALM2($G(XQORNOD(0))) G REP:'$O(VALMY(0)) S IBDVALM=0
"RTN","IBDFPE1",29,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBDFPE1",30,0)
 F IBDVALM=0:0 S IBDVALM=$O(VALMY(IBDVALM)) Q:'IBDVALM  S DA=$S($D(IBDTYPE(IBDVALM)):$P(IBDTYPE(IBDVALM),"^",1),1:"") I DA]"" D
"RTN","IBDFPE1",31,0)
 .S DA(1)=1,IBDFNODE=^IBD(357.09,DA(1),"Q",DA,0) S (IBDFSTAT,ZTSK)=$P(IBDFNODE,"^",11) I IBDFSTAT]"" D:$D(IBDFSTOP) KILL^%ZTLOAD D:'$D(IBDFSTOP) STAT^%ZTLOAD D
"RTN","IBDFPE1",32,0)
 ..D FULL^VALM1
"RTN","IBDFPE1",33,0)
 ..W !!,"Status of Queued Job <<< "_$P(IBDFNODE,"^",1)_" >>>",!!
"RTN","IBDFPE1",34,0)
 ..I $D(ZTSK(0)) W !,"       TASK: ",$S($D(ZTSK):ZTSK,1:"")_"  -  ",$S(ZTSK(0)=1:"Defined",1:"Undefined")
"RTN","IBDFPE1",35,0)
 ..I $D(ZTSK(1)) W !,"STATUS CODE: ",ZTSK(1)
"RTN","IBDFPE1",36,0)
 ..I $D(ZTSK(2)) W !,"     STATUS: ",ZTSK(2)
"RTN","IBDFPE1",37,0)
 ..I $D(IBDFSTOP) W:ZTSK(0)=1 !,"SUCCESSFUL DELETION OF TASK" W !!,"***JOB STOPPED UPON REQUEST***"
"RTN","IBDFPE1",38,0)
 ..Q
"RTN","IBDFPE1",39,0)
 I IBDFSTAT']"" W !!,"Status of Queued Job <<< "_$P(IBDFNODE,"^",1)_" >>>",!!,"JOB NOT TASKED!" I $D(IBDFSTOP) W "  NO NEED TO INTERUPT JOB!"
"RTN","IBDFPE1",40,0)
 K DA,DA(1)
"RTN","IBDFPE1",41,0)
 D PAUSE^VALM1,REP Q
"RTN","IBDFPE1",42,0)
 Q
"RTN","IBDFPE1",43,0)
 ;
"RTN","IBDFPE1",44,0)
DEL ; -- Delete Clinic Group
"RTN","IBDFPE1",45,0)
 N IBDVALM,VALMY,DIR,DIRUT,DUOUT
"RTN","IBDFPE1",46,0)
 S VALMBCK=""
"RTN","IBDFPE1",47,0)
 D EN^VALM2($G(XQORNOD(0))) G REP:'$O(VALMY(0)) S IBDVALM=0
"RTN","IBDFPE1",48,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBDFPE1",49,0)
 ;
"RTN","IBDFPE1",50,0)
 F IBDVALM=0:0 S IBDVALM=$O(VALMY(IBDVALM)) Q:'IBDVALM  S DA=$S($D(IBDTYPE(IBDVALM)):$P(IBDTYPE(IBDVALM),"^",1),1:"") I DA]"" D
"RTN","IBDFPE1",51,0)
 .S DA(1)=1,DIK="^IBD(357.09,"_DA(1)_","_"""Q"""_","
"RTN","IBDFPE1",52,0)
 .W !!,"Paramater Group: "_$P($G(^IBD(357.09,1,"Q",DA,0)),"^",1)
"RTN","IBDFPE1",53,0)
 .W ! S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are You Sure you want to delete "_$P($G(^IBD(357.09,1,"Q",DA,0)),"^",1)
"RTN","IBDFPE1",54,0)
 .D ^DIR K DIR I Y'=1 W !,"Entry ",$P($G(^IBD(357.09,1,"Q",DA,0)),"^",1)," not Deleted!" Q
"RTN","IBDFPE1",55,0)
 .D DP1
"RTN","IBDFPE1",56,0)
 ;
"RTN","IBDFPE1",57,0)
DELQ D REP
"RTN","IBDFPE1",58,0)
 S VALMBCK="R" Q
"RTN","IBDFPE1",59,0)
 ;
"RTN","IBDFPE1",60,0)
DP1 ; -- actual deletion
"RTN","IBDFPE1",61,0)
 S DIK="^IBD(357.09,"_DA(1)_","_"""Q"""_"," D ^DIK
"RTN","IBDFPE1",62,0)
 W !,"Entry ",IBDVALM," Deleted"
"RTN","IBDFPE1",63,0)
 Q
"RTN","IBDFPRG")
0^216^B26143827
"RTN","IBDFPRG",1,0)
IBDFPRG ;ALB/AAS - AICS PURGE UTILITY ; 4-OCT-95
"RTN","IBDFPRG",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFPRG",3,0)
 ;
"RTN","IBDFPRG",4,0)
% ; -- purge utility for purging entries from the
"RTN","IBDFPRG",5,0)
 ;    Form Definition file (357.95)
"RTN","IBDFPRG",6,0)
 ;    Form Tracking file (357.96)
"RTN","IBDFPRG",7,0)
 ;    Form Specification file (359.2)
"RTN","IBDFPRG",8,0)
 ;    AICS Error Log file (359.3)
"RTN","IBDFPRG",9,0)
 ;
"RTN","IBDFPRG",10,0)
MANUAL ; -- Option to purge records, ask input
"RTN","IBDFPRG",11,0)
 N IBCNT2,IBCNT5,IBCNT6,IBCNT7,IBD,IBHOW,IBLDT,IBDAYS,IBPURGE,IBQUIT,DIR,DIRUT,DUOUT,X,Y,IBLOG,D0,DA,D,ZTSK
"RTN","IBDFPRG",12,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFPRG",13,0)
 ;
"RTN","IBDFPRG",14,0)
 S IBQUIT=0
"RTN","IBDFPRG",15,0)
 D ASK
"RTN","IBDFPRG",16,0)
 Q:IBQUIT
"RTN","IBDFPRG",17,0)
 S IBLDT=$$FMADD^XLFDT(DT,-IBDAYS)
"RTN","IBDFPRG",18,0)
 S ZTSAVE("IB*")="",ZTRTN="DQ^IBDFPRG",ZTDESC="IBD - Manual Purge of form tracking",ZTIO="" D ^%ZTLOAD
"RTN","IBDFPRG",19,0)
 W !,$S($D(ZTSK):"Request Queued Task="_ZTSK,1:"Request Canceled") D HOME^%ZIS S IBQUIT=1 Q
"RTN","IBDFPRG",20,0)
 Q
"RTN","IBDFPRG",21,0)
 ;
"RTN","IBDFPRG",22,0)
DQ ; -- entry point from manual task
"RTN","IBDFPRG",23,0)
 S IBLOG=$$ADD
"RTN","IBDFPRG",24,0)
 I IBPURGE("FT") D PURGFT^IBDFPRG1(IBLDT,IBHOW),PURGEL^IBDFPRG1(IBLDT)
"RTN","IBDFPRG",25,0)
 I IBPURGE("FD") D PURGFD^IBDFPRG1(IBLDT)
"RTN","IBDFPRG",26,0)
 D OUTPUT
"RTN","IBDFPRG",27,0)
 G EXIT
"RTN","IBDFPRG",28,0)
 Q
"RTN","IBDFPRG",29,0)
 ;
"RTN","IBDFPRG",30,0)
EXIT ; -- exit for all modes
"RTN","IBDFPRG",31,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBDFPRG",32,0)
 Q
"RTN","IBDFPRG",33,0)
 ;
"RTN","IBDFPRG",34,0)
AUTO ; -- Background option to automatically purge records
"RTN","IBDFPRG",35,0)
 N X,Y,IBCNT2,IBCNT5,IBCNT6,IBCNT7,IBLDT,IBHOW,IBD,IBLOG,D0,DA,D
"RTN","IBDFPRG",36,0)
 I '$D(DT) D DT^DICRW
"RTN","IBDFPRG",37,0)
 ; 
"RTN","IBDFPRG",38,0)
 ; -- if parameters not defined don't run
"RTN","IBDFPRG",39,0)
 I $P($G(^IBD(357.09,1,0)),"^",3)=""!($P($G(^IBD(357.09,1,0)),"^",2)="")  G AUTOQ
"RTN","IBDFPRG",40,0)
 S IBHOW=$P($G(^IBD(357.09,1,0)),"^",2)
"RTN","IBDFPRG",41,0)
 ;
"RTN","IBDFPRG",42,0)
 ; -- Compute last date to purge records
"RTN","IBDFPRG",43,0)
 S IBLDT=$$FMADD^XLFDT(DT,-$P($G(^IBD(357.09,1,0)),"^",3))
"RTN","IBDFPRG",44,0)
 S IBLOG=$$ADD
"RTN","IBDFPRG",45,0)
 ;
"RTN","IBDFPRG",46,0)
 ; -- purge all entries in form tracking according to parameters
"RTN","IBDFPRG",47,0)
 D PURGFT^IBDFPRG1(IBLDT,+$P($G(^IBD(357.09,1,0)),"^",2))
"RTN","IBDFPRG",48,0)
 ;
"RTN","IBDFPRG",49,0)
 ; -- purge form definition entries only if marked for deletion 
"RTN","IBDFPRG",50,0)
 ;    and all entries are complete
"RTN","IBDFPRG",51,0)
 D PURGFD^IBDFPRG1(IBLDT)
"RTN","IBDFPRG",52,0)
 ;
"RTN","IBDFPRG",53,0)
 ; -- purge entries from AICS ERROR LOG (359.3)
"RTN","IBDFPRG",54,0)
 D PURGEL^IBDFPRG1(IBLDT)
"RTN","IBDFPRG",55,0)
 ;
"RTN","IBDFPRG",56,0)
 D OUTPUT
"RTN","IBDFPRG",57,0)
 G EXIT
"RTN","IBDFPRG",58,0)
 ;
"RTN","IBDFPRG",59,0)
AUTOQ Q
"RTN","IBDFPRG",60,0)
 ;
"RTN","IBDFPRG",61,0)
ADD() ; -- add new entry to purge log
"RTN","IBDFPRG",62,0)
 N DIC,DLAYGO
"RTN","IBDFPRG",63,0)
 S Y=-1
"RTN","IBDFPRG",64,0)
 I $G(^IBD(357.08,0))'="" S X=$$NOW^XLFDT,DIC="^IBD(357.08,",DIC(0)="L",DLAYGO=357.08 D FILE^DICN
"RTN","IBDFPRG",65,0)
ADDQ Q +Y
"RTN","IBDFPRG",66,0)
 ;
"RTN","IBDFPRG",67,0)
EDIT ; -- update entry after running
"RTN","IBDFPRG",68,0)
 N DIC,DIE,DA,DR,X,Y
"RTN","IBDFPRG",69,0)
 I IBLOG<1!($G(^IBD(357.08,+IBLOG,0))="") Q
"RTN","IBDFPRG",70,0)
 S DIE="^IBD(357.08,",DA=IBLOG
"RTN","IBDFPRG",71,0)
 S DR=".02////"_$G(IBHOW)_";.03////"_$G(IBLDT)_";.04////"_$G(IBCNT6)_";.05////"_$G(IBCNT5)_";.06////"_$G(IBCNT2)_";.07////"_$G(IBCNT7)
"RTN","IBDFPRG",72,0)
 D ^DIE
"RTN","IBDFPRG",73,0)
 Q
"RTN","IBDFPRG",74,0)
 ;
"RTN","IBDFPRG",75,0)
OUTPUT ; -- output results of purge
"RTN","IBDFPRG",76,0)
 ;
"RTN","IBDFPRG",77,0)
 S IBD(1)="Purge of Form Tracking Statistics"
"RTN","IBDFPRG",78,0)
 S IBD(2)="Status of Form Tracking Entries Purged .......... "_$S(+$G(IBHOW)=0:"None",$G(IBHOW)=1:"Completed",$G(IBHOW)=2:"All",1:"None")
"RTN","IBDFPRG",79,0)
 S IBD(3)="Form Tracking entries purged upto ............... "_$$FMTE^XLFDT($G(IBLDT))
"RTN","IBDFPRG",80,0)
 S IBD(4)="Number of Form tracking Entries Deleted ......... "_$G(IBCNT6)
"RTN","IBDFPRG",81,0)
 S IBD(5)="Number of Form Definition Entries Deleted ....... "_$G(IBCNT5)
"RTN","IBDFPRG",82,0)
 S IBD(6)="Number of Form Specification Entries Deleted .... "_$G(IBCNT2)
"RTN","IBDFPRG",83,0)
 S IBD(7)="Number of AICS Error Log Entries Deleted ........ "_$G(IBCNT7)
"RTN","IBDFPRG",84,0)
 D EDIT,SEND
"RTN","IBDFPRG",85,0)
 ;
"RTN","IBDFPRG",86,0)
 I '$D(ZTQUEUED) S X="" F  S X=$O(IBD(X)) Q:'X  W !,IBD(X)
"RTN","IBDFPRG",87,0)
 Q
"RTN","IBDFPRG",88,0)
 ;
"RTN","IBDFPRG",89,0)
ASK ; -- ask what to purge
"RTN","IBDFPRG",90,0)
 ;    Output : ibpurge("ft") := 1=yes purge form tracking, 0=no
"RTN","IBDFPRG",91,0)
 ;             ibpurge("fd") := 1=yes purge form definition, 0=no
"RTN","IBDFPRG",92,0)
 ;
"RTN","IBDFPRG",93,0)
 N DIR
"RTN","IBDFPRG",94,0)
 S IBPURGE("FD")=0,IBPURGE("FT")=0
"RTN","IBDFPRG",95,0)
 ;
"RTN","IBDFPRG",96,0)
 S DIR(0)="Y"
"RTN","IBDFPRG",97,0)
 S DIR("?")="Answer YES if you want to purge Form Tracking of unneeded records"
"RTN","IBDFPRG",98,0)
 W !!!,"Do you want to purge Form Tracking?"
"RTN","IBDFPRG",99,0)
 D ^DIR
"RTN","IBDFPRG",100,0)
 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBDFPRG",101,0)
 S IBPURGE("FT")=+Y
"RTN","IBDFPRG",102,0)
 ;
"RTN","IBDFPRG",103,0)
 K DIR
"RTN","IBDFPRG",104,0)
 S DIR(0)="Y"
"RTN","IBDFPRG",105,0)
 S DIR("?")="Answer YES if you want to purge Form Defintions of unneeded records"
"RTN","IBDFPRG",106,0)
 W !!,"Do you want to purge Form Definitions and Form Specifications?"
"RTN","IBDFPRG",107,0)
 D ^DIR
"RTN","IBDFPRG",108,0)
 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBDFPRG",109,0)
 S IBPURGE("FD")=+Y
"RTN","IBDFPRG",110,0)
 ;
"RTN","IBDFPRG",111,0)
 ; -- if the user wants to purge form tracking get needed parms
"RTN","IBDFPRG",112,0)
 I IBPURGE("FT")!(IBPURGE("FD")) D ASKN,ASKH
"RTN","IBDFPRG",113,0)
 I 'IBPURGE("FT"),'IBPURGE("FD") S IBQUIT=1
"RTN","IBDFPRG",114,0)
 Q
"RTN","IBDFPRG",115,0)
 ;
"RTN","IBDFPRG",116,0)
ASKN ; -- ask number of days to retain
"RTN","IBDFPRG",117,0)
 ;    Output : IBDAYS := number of days to retain
"RTN","IBDFPRG",118,0)
 ;
"RTN","IBDFPRG",119,0)
 N DIR
"RTN","IBDFPRG",120,0)
 S IBDAYS=-1
"RTN","IBDFPRG",121,0)
 S DIR(0)="N^60:999:0"
"RTN","IBDFPRG",122,0)
 S DIR("A")="Number of Days to Retain"
"RTN","IBDFPRG",123,0)
 S DIR("B")=+$P($G(^IBD(357.09,1,0)),"^",3)
"RTN","IBDFPRG",124,0)
 S DIR("?")="Enter the number of days of form tracking data to retain"
"RTN","IBDFPRG",125,0)
 D ^DIR
"RTN","IBDFPRG",126,0)
 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBDFPRG",127,0)
 S IBDAYS=+Y
"RTN","IBDFPRG",128,0)
 Q
"RTN","IBDFPRG",129,0)
 ;
"RTN","IBDFPRG",130,0)
ASKH ; -- ask how to purge
"RTN","IBDFPRG",131,0)
 ;    Output : IBHOW  := 0=none, 1=complete, 2=all
"RTN","IBDFPRG",132,0)
 ;
"RTN","IBDFPRG",133,0)
 N DIR
"RTN","IBDFPRG",134,0)
 S IBHOW=-1
"RTN","IBDFPRG",135,0)
 S DIR(0)="S^0:None;1:Purge Completed Entries;2:Purge All Entries"
"RTN","IBDFPRG",136,0)
 S DIR("A")="Purge what Entries"
"RTN","IBDFPRG",137,0)
 S DIR("B")=+$P($G(^IBD(357.09,1,0)),"^",2)
"RTN","IBDFPRG",138,0)
 S DIR("?")="Choose whether you want to purge only completed entries or whether to purge all entries"
"RTN","IBDFPRG",139,0)
 D ^DIR
"RTN","IBDFPRG",140,0)
 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBDFPRG",141,0)
 S IBHOW=+Y
"RTN","IBDFPRG",142,0)
 Q
"RTN","IBDFPRG",143,0)
 ;
"RTN","IBDFPRG",144,0)
SEND ; -- send mail message to group if defined
"RTN","IBDFPRG",145,0)
 N IBDGRP,XMDUZ,XMTEXT,XMY,XMSUB,XMZ
"RTN","IBDFPRG",146,0)
 S XMDUZ="AICS PACKAGE",XMTEXT="IBD(",XMSUB="AICS PURGE RESULTS"
"RTN","IBDFPRG",147,0)
 K XMY S XMN=0
"RTN","IBDFPRG",148,0)
 S IBDGRP=$$GET1^DIQ(3.8,+$P($G(^IBD(357.09,1,1)),"^"),.01)
"RTN","IBDFPRG",149,0)
 ;S IBDGRP=$P($G(^XMB(3.8,+$P($G(^IBD(357.09,1,1)),"^"),0)),"^")
"RTN","IBDFPRG",150,0)
 Q:IBDGRP=""
"RTN","IBDFPRG",151,0)
 S XMY("G."_IBDGRP_"@"_^XMB("NETNAME"))=""
"RTN","IBDFPRG",152,0)
 D ^XMD
"RTN","IBDFPRG",153,0)
 Q
"RTN","IBDFPRG1")
0^217^B9016199
"RTN","IBDFPRG1",1,0)
IBDFPRG1 ;ALB/AAS - AICS PURGE UTILITY ; 4-OCT-95
"RTN","IBDFPRG1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFPRG1",3,0)
 ;
"RTN","IBDFPRG1",4,0)
% ; -- purge utility for purging entries from the
"RTN","IBDFPRG1",5,0)
 ;    Form Definition file (357.95)
"RTN","IBDFPRG1",6,0)
 ;    Form Tracking file (357.96)
"RTN","IBDFPRG1",7,0)
 ;    Form Specification file (359.2)
"RTN","IBDFPRG1",8,0)
 G MANUAL^IBDFPRG
"RTN","IBDFPRG1",9,0)
 ;
"RTN","IBDFPRG1",10,0)
 ;
"RTN","IBDFPRG1",11,0)
PURGFD(IBLDT) ; -- Procedure
"RTN","IBDFPRG1",12,0)
 ; -- purge entires in Form Definition file marked for deletion
"RTN","IBDFPRG1",13,0)
 ;    that were marked before ibldt and no incomplete entries in
"RTN","IBDFPRG1",14,0)
 ;    form tracking exist
"RTN","IBDFPRG1",15,0)
 ;
"RTN","IBDFPRG1",16,0)
 ;    Input :  ibldt  := only purge records with a date marked for
"RTN","IBDFPRG1",17,0)
 ;                       deletion older than this date
"RTN","IBDFPRG1",18,0)
 ;    Output:  ibcnt5 := number of entries in 357.95 deleted
"RTN","IBDFPRG1",19,0)
 ;             ibcnt2 := number of entries in 359.2 deleted
"RTN","IBDFPRG1",20,0)
 ;
"RTN","IBDFPRG1",21,0)
 N IBI,IBJ,IBSTAT,X,Y
"RTN","IBDFPRG1",22,0)
 S (IBCNT5,IBCNT2)=0
"RTN","IBDFPRG1",23,0)
 I IBLDT=""!(IBLDT'?7N) G PURGFDQ
"RTN","IBDFPRG1",24,0)
 S IBI=0
"RTN","IBDFPRG1",25,0)
 F  S IBI=$O(^IBD(357.95,"ADEL",IBI)) Q:'IBI!(IBI'<IBLDT)  D
"RTN","IBDFPRG1",26,0)
 .S IBJ=0
"RTN","IBDFPRG1",27,0)
 .F  S IBJ=$O(^IBD(357.95,"ADEL",IBI,IBJ)) Q:'IBJ  D
"RTN","IBDFPRG1",28,0)
 ..
"RTN","IBDFPRG1",29,0)
 ..; -- "a" x-ref is special x-ref of all forms not received
"RTN","IBDFPRG1",30,0)
 ..;  for 357.95 check KILLTYPE^IBDF19
"RTN","IBDFPRG1",31,0)
 ..;
"RTN","IBDFPRG1",32,0)
 ..I $D(^IBD(357.96,"A",IBJ)) Q
"RTN","IBDFPRG1",33,0)
 ..I $D(^IBD(357.95,IBJ,0)) S X=$$DEL("^IBD(357.95,",IBJ),IBCNT5=IBCNT5+1
"RTN","IBDFPRG1",34,0)
 ..I $D(^IBD(359.2,IBJ,0)) S X=$$DEL("^IBD(359.2,",IBJ),IBCNT2=IBCNT2+1
"RTN","IBDFPRG1",35,0)
 ..Q
"RTN","IBDFPRG1",36,0)
 .Q
"RTN","IBDFPRG1",37,0)
 ;
"RTN","IBDFPRG1",38,0)
PURGFDQ Q
"RTN","IBDFPRG1",39,0)
 ;
"RTN","IBDFPRG1",40,0)
PURGFT(IBLDT,IBHOW) ; -- Procedure
"RTN","IBDFPRG1",41,0)
 ; -- purge entries from form tracking file (357.96)
"RTN","IBDFPRG1",42,0)
 ;    Input :  ibldt  := only purge records with an appointment
"RTN","IBDFPRG1",43,0)
 ;                       date older than this date
"RTN","IBDFPRG1",44,0)
 ;             ibhow  := 0=no records, 1=complete, 2=all
"RTN","IBDFPRG1",45,0)
 ;    Output:  ibcnt6 := number of entries in 357.96 deleted
"RTN","IBDFPRG1",46,0)
 ;
"RTN","IBDFPRG1",47,0)
 N X,Y,IBI,IBJ,IBSTAT
"RTN","IBDFPRG1",48,0)
 S IBCNT6=0
"RTN","IBDFPRG1",49,0)
 I IBLDT=""!(IBLDT'?7N) G PURGFTQ
"RTN","IBDFPRG1",50,0)
 S IBHOW=+$G(IBHOW)
"RTN","IBDFPRG1",51,0)
 I IBHOW<0!(IBHOW>2) G PURGFTQ
"RTN","IBDFPRG1",52,0)
 ;
"RTN","IBDFPRG1",53,0)
 S IBI=0
"RTN","IBDFPRG1",54,0)
 F  S IBI=$O(^IBD(357.96,"D",IBI)) Q:'IBI!(IBI'<IBLDT)  D
"RTN","IBDFPRG1",55,0)
 .S IBJ=0
"RTN","IBDFPRG1",56,0)
 .F  S IBJ=$O(^IBD(357.96,"D",IBI,IBJ)) Q:'IBJ  D
"RTN","IBDFPRG1",57,0)
 ..I $$STATCHK(IBJ,IBHOW) S X=$$DEL("^IBD(357.96,",IBJ),IBCNT6=IBCNT6+1
"RTN","IBDFPRG1",58,0)
 ..Q
"RTN","IBDFPRG1",59,0)
 .Q
"RTN","IBDFPRG1",60,0)
PURGFTQ Q
"RTN","IBDFPRG1",61,0)
 ;
"RTN","IBDFPRG1",62,0)
PURGEL(IBLDT) ; -- 
"RTN","IBDFPRG1",63,0)
 ; -- Purge AICS Error Log older created prior to ibdldt
"RTN","IBDFPRG1",64,0)
 ;    Input :  ibldt  := only purge error created prior to this date
"RTN","IBDFPRG1",65,0)
 ;
"RTN","IBDFPRG1",66,0)
 ;    Output:  ibcnt7 := number of entries in 359.3 deleted
"RTN","IBDFPRG1",67,0)
 ;
"RTN","IBDFPRG1",68,0)
 N IBI,IBJ
"RTN","IBDFPRG1",69,0)
 S (IBCNT7,IBI)=0
"RTN","IBDFPRG1",70,0)
 F  S IBI=$O(^IBD(359.3,"B",IBI)) Q:'IBI!(IBI'<IBLDT)  D
"RTN","IBDFPRG1",71,0)
 .S IBJ=0
"RTN","IBDFPRG1",72,0)
 .F  S IBJ=$O(^IBD(359.3,"B",IBI,IBJ)) Q:'IBJ  D
"RTN","IBDFPRG1",73,0)
 ..I $D(^IBD(359.3,IBJ,0)) S X=$$DEL("^IBD(359.3,",IBJ),IBCNT7=IBCNT7+1
"RTN","IBDFPRG1",74,0)
PURGELQ Q
"RTN","IBDFPRG1",75,0)
 ;
"RTN","IBDFPRG1",76,0)
STATCHK(ENTRY,IBHOW) ; -- Function
"RTN","IBDFPRG1",77,0)
 ; -- determine if entry in 357.96 can be deleted
"RTN","IBDFPRG1",78,0)
 ;    Input :  Entry := internal number of entry in 357.96
"RTN","IBDFPRG1",79,0)
 ;             ibhow := 0,1,2, to delete none, complete, or all
"RTN","IBDFPRG1",80,0)
 ;    Output:  Okay  := 1=okay to delete, 0=not okay
"RTN","IBDFPRG1",81,0)
 ;
"RTN","IBDFPRG1",82,0)
 N OKAY,STATUS
"RTN","IBDFPRG1",83,0)
 S OKAY=0
"RTN","IBDFPRG1",84,0)
 S IBHOW=+$G(IBHOW)
"RTN","IBDFPRG1",85,0)
 I IBHOW<1!(IBHOW>2) G STATQ ;How is none or not valid, don't delete
"RTN","IBDFPRG1",86,0)
 I '$D(^IBD(357.96,ENTRY,0)) G STATQ ;Entry doesn't exist
"RTN","IBDFPRG1",87,0)
 ;
"RTN","IBDFPRG1",88,0)
 ; -- if delete all, okay=1
"RTN","IBDFPRG1",89,0)
 I IBHOW=2,$P($G(^IBD(357.96,ENTRY,0)),"^",3) S OKAY=1 G STATQ
"RTN","IBDFPRG1",90,0)
 ;
"RTN","IBDFPRG1",91,0)
 ; -- if status = complete, piece 11 must equal 3, 4, or 12 to delete
"RTN","IBDFPRG1",92,0)
 S STATUS=$P($G(^IBD(357.96,ENTRY,0)),"^",11)
"RTN","IBDFPRG1",93,0)
 S OKAY=$S(STATUS=3:1,STATUS=4:1,STATUS=6:1,STATUS=7:1,STATUS=12:1,1:0)
"RTN","IBDFPRG1",94,0)
 ;
"RTN","IBDFPRG1",95,0)
STATQ Q OKAY
"RTN","IBDFPRG1",96,0)
 ;
"RTN","IBDFPRG1",97,0)
DEL(FILE,DA) ; -- Function
"RTN","IBDFPRG1",98,0)
 ; -- delete one entry
"RTN","IBDFPRG1",99,0)
 ;    Input :  File  := internal file number of file or global root
"RTN","IBDFPRG1",100,0)
 ;             da    := internal number of entry, If more than DA
"RTN","IBDFPRG1",101,0)
 ;                      needs to be defined then pass da array by
"RTN","IBDFPRG1",102,0)
 ;                      reference
"RTN","IBDFPRG1",103,0)
 ;    Output:  1 := succeded, 0 := failed
"RTN","IBDFPRG1",104,0)
 ;
"RTN","IBDFPRG1",105,0)
 N SUCCESS
"RTN","IBDFPRG1",106,0)
 S SUCCESS=0
"RTN","IBDFPRG1",107,0)
 I $G(FILE)=""!(+$G(DA)<1) G DELQ
"RTN","IBDFPRG1",108,0)
 S DIK=FILE D ^DIK
"RTN","IBDFPRG1",109,0)
 S SUCCESS=1
"RTN","IBDFPRG1",110,0)
 W:'$D(ZTQUEUED) !,"Entry number "_DA_" in file "_DIK_" Deleted!"
"RTN","IBDFPRG1",111,0)
DELQ Q SUCCESS
"RTN","IBDFQB")
0^218^B36825604
"RTN","IBDFQB",1,0)
IBDFQB ;ALB/MAF - MAIN QUEUE JOB FOR ENCOUNTER FORM PRINTING - FEB 2 1995
"RTN","IBDFQB",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFQB",3,0)
 ;
"RTN","IBDFQB",4,0)
EN ;
"RTN","IBDFQB",5,0)
 ; -- Goes through the "SEQ" cross reference to print the 
"RTN","IBDFQB",6,0)
 ;    highest priority jobs first (lowest sequence number).
"RTN","IBDFQB",7,0)
 N IBDFQUE,IBDFQDT,IBDFQD,IBDFQT,IBDFTSTP
"RTN","IBDFQB",8,0)
 S IBDFQUE=1,IBDFTSTP=1
"RTN","IBDFQB",9,0)
 S (IBDFNUM,IBDFNAME,IBDFIFN,IBDFSEQ,QUIT)=0
"RTN","IBDFQB",10,0)
 D NOW^%DTC S IBDFQDT=%,IBDFQD=$P(%,"."),IBDFQT=$E($P(%,".",2),1,4)
"RTN","IBDFQB",11,0)
 ;
"RTN","IBDFQB",12,0)
 F  S IBDFSEQ=$O(^IBD(357.09,"SEQ",IBDFSEQ)) Q:IBDFSEQ']""  F  S IBDFNUM=$O(^IBD(357.09,"SEQ",IBDFSEQ,IBDFNUM)) Q:IBDFNUM']""  F  S IBDFIFN=$O(^IBD(357.09,"SEQ",IBDFSEQ,IBDFNUM,IBDFIFN)) Q:IBDFIFN']""  N IBDFARY D UP($$QUEUE(IBDFIFN))
"RTN","IBDFQB",13,0)
 G EXIT
"RTN","IBDFQB",14,0)
 ;
"RTN","IBDFQB",15,0)
 ;
"RTN","IBDFQB",16,0)
UP(IBTASK) ; -- store results of tasking
"RTN","IBDFQB",17,0)
 Q:'$G(IBTASK)
"RTN","IBDFQB",18,0)
 D TASK
"RTN","IBDFQB",19,0)
 Q
"RTN","IBDFQB",20,0)
 ;
"RTN","IBDFQB",21,0)
 ;
"RTN","IBDFQB",22,0)
QUEUE(IBDFIFN) ; -- Set up Queue variables
"RTN","IBDFQB",23,0)
 N ZTSK,ZTDTH,ZTRTN,ZTDESC,ZTSAVE,ZTION,X,Y
"RTN","IBDFQB",24,0)
 K ^TMP("IBDF",$J,"C"),^TMP("IBDF",$J,"D")
"RTN","IBDFQB",25,0)
 D SET
"RTN","IBDFQB",26,0)
 G:('$D(^TMP("IBDF",$J)))!QUIT CLEAR
"RTN","IBDFQB",27,0)
 ;
"RTN","IBDFQB",28,0)
 ; -- check if already tasked and running?
"RTN","IBDFQB",29,0)
 I $P(IBDFNODE,"^",11)]"" S ZTSK=$P(IBDFNODE,"^",11) D STAT^%ZTLOAD I "^1^2^"[ZTSK(1) S QUIT=1 G CLEAR
"RTN","IBDFQB",30,0)
 ;
"RTN","IBDFQB",31,0)
 F IBDT=0:0 S IBDT=$O(IBDFARY(IBDT)) Q:'IBDT  D
"RTN","IBDFQB",32,0)
 .S ZTDTH=$S('$D(ZTDTH):$H,$D(ZTDTH)&(ZTDTH]""):ZTDTH,1:$H)
"RTN","IBDFQB",33,0)
 .S ZTRTN="DQ^IBDFQB",ZTDESC="IBD - Encounter Forms for"_IBDFNAME,ZTSAVE("^TMP(""IBDF"",$J,")="",ZTSAVE("IB*")="",ZTIO=$S($P(IBDFNODE,"^",9)]"":$P(IBDFNODE,"^",9),1:"") D ^%ZTLOAD D HOME^%ZIS
"RTN","IBDFQB",34,0)
 ;
"RTN","IBDFQB",35,0)
 ; -- after queing, delete start and stop times and add task
"RTN","IBDFQB",36,0)
 ; -- once started add start time
"RTN","IBDFQB",37,0)
 ; -- once finished add stop time, delete task no.
"RTN","IBDFQB",38,0)
 ;
"RTN","IBDFQB",39,0)
 S IBZTSK=ZTSK
"RTN","IBDFQB",40,0)
 I '$D(ZTQUEUED) D ^%ZISC S QUIT=1
"RTN","IBDFQB",41,0)
 ;
"RTN","IBDFQB",42,0)
 ;
"RTN","IBDFQB",43,0)
CLEAR ; -- Clean up variables if task is not queued
"RTN","IBDFQB",44,0)
 K ^TMP("IBDF",$J),^TMP("IB",$J)
"RTN","IBDFQB",45,0)
 ;
"RTN","IBDFQB",46,0)
 I QUIT D
"RTN","IBDFQB",47,0)
 .I $D(ZTSK),$D(ZTSK(1)) I "^1^2^"[ZTSK(1) K ZTSK
"RTN","IBDFQB",48,0)
 .S IBZTSK=$S($D(ZTSK):ZTSK,1:"")
"RTN","IBDFQB",49,0)
 ;
"RTN","IBDFQB",50,0)
 S QUIT=0
"RTN","IBDFQB",51,0)
 Q IBZTSK
"RTN","IBDFQB",52,0)
 ;
"RTN","IBDFQB",53,0)
DQ ; -- Generic entry points to edit
"RTN","IBDFQB",54,0)
 ; -- only called by jobs tasked by this routine
"RTN","IBDFQB",55,0)
 S IBDFFLD=".02" D UPDT
"RTN","IBDFQB",56,0)
 D ^IBDF1B1
"RTN","IBDFQB",57,0)
 S IBDFFLD=".03" D UPDT
"RTN","IBDFQB",58,0)
 S IBTASK="@" D TASK
"RTN","IBDFQB",59,0)
 Q
"RTN","IBDFQB",60,0)
 ;
"RTN","IBDFQB",61,0)
UPDT ; -- Update start and finish times
"RTN","IBDFQB",62,0)
 N DIE,DA,DR
"RTN","IBDFQB",63,0)
 D NOW^%DTC S IBDFX=$E(%,1,12),DA=IBDFIFN,DA(1)=IBDFNUM,DIE="^IBD(357.09,"_DA(1)_","_"""Q"""_",",DR=IBDFFLD_"///"_"^S X=IBDFX" D ^DIE Q
"RTN","IBDFQB",64,0)
 ;
"RTN","IBDFQB",65,0)
 ;
"RTN","IBDFQB",66,0)
TASK ; -- Update Task number and last date printed
"RTN","IBDFQB",67,0)
 N DA,DR,DIE
"RTN","IBDFQB",68,0)
 S DA=IBDFIFN,DA(1)=IBDFNUM,DIE="^IBD(357.09,"_DA(1)_","_"""Q"""_",",DR=".11///"_IBTASK_";.12///"_IBDT D ^DIE
"RTN","IBDFQB",69,0)
 I $D(IB1FLAG) S IB1TASK=IBTASK
"RTN","IBDFQB",70,0)
 Q
"RTN","IBDFQB",71,0)
 ;
"RTN","IBDFQB",72,0)
 ;
"RTN","IBDFQB",73,0)
EXIT K IBADDONS,IBCLN,IBDFDAY,IBDFIFN,IBDFINST,IBDFNAME,IBDFNODE,IBDFNOW,IBDFNUM,IBDFSEQ,IBDIV,IBDT,IBREPRNT,IBSRT,IBSTRTDV,IBDFDAY1,IBDFLAST,IBDFONE,IBDFQ,IBDFXX,IBZTSK,QUIT
"RTN","IBDFQB",74,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBDFQB",75,0)
 D ^%ZISC
"RTN","IBDFQB",76,0)
 Q
"RTN","IBDFQB",77,0)
 ;
"RTN","IBDFQB",78,0)
 ;
"RTN","IBDFQB",79,0)
SET ; -- Set up variables needed for priniting of forms
"RTN","IBDFQB",80,0)
 S IBDFNODE=$G(^IBD(357.09,IBDFNUM,"Q",IBDFIFN,0))
"RTN","IBDFQB",81,0)
 I $P(IBDFNODE,"^",4)=""!($P(IBDFNODE,"^",5)="")!($P(IBDFNODE,"^",6)="")!($P(IBDFNODE,"^",7)="")!($P(IBDFNODE,"^",8)="")!($P(IBDFNODE,"^",9)="")!($P(IBDFNODE,"^",10)="") D  I QUIT Q
"RTN","IBDFQB",82,0)
 .I '$D(IBDFQUE) W !!,"PRINT QUEUE ABORTED.... missing required parameters!!!!" D PAUSE^VALM1
"RTN","IBDFQB",83,0)
 .S QUIT=1
"RTN","IBDFQB",84,0)
 .Q
"RTN","IBDFQB",85,0)
 I $P(IBDFNODE,"^",8)="N" D  I QUIT Q
"RTN","IBDFQB",86,0)
 .I '$D(IBDFQUE)  W !!,"PRINT QUEUE ABORTED.....not an active print job... check Special Instructions" D PAUSE^VALM1
"RTN","IBDFQB",87,0)
 .S QUIT=1
"RTN","IBDFQB",88,0)
 .Q
"RTN","IBDFQB",89,0)
 S IBSRT=$P(IBDFNODE,"^",4),SELECTBY="C",IBADDONS=$P(IBDFNODE,"^",5),IBREPRNT="",IBSTRTDV=""
"RTN","IBDFQB",90,0)
 D ENTRY Q:QUIT  D
"RTN","IBDFQB",91,0)
 .N GROUPS,IEN
"RTN","IBDFQB",92,0)
 .; -- GET PRINT MANAGER GROUPS
"RTN","IBDFQB",93,0)
 .S GROUPS=""
"RTN","IBDFQB",94,0)
 .S GROUPS($P(IBDFNODE,"^",6))="" D
"RTN","IBDFQB",95,0)
 ..S GROUPS=0 F  S GROUPS=$O(GROUPS(GROUPS)) Q:'GROUPS  D
"RTN","IBDFQB",96,0)
 ...S IEN=0 F  S IEN=$O(^IBD(357.99,GROUPS,10,IEN)) Q:'IEN  S IBCLN=+$G(^IBD(357.99,GROUPS,10,IEN,0)) S:IBCLN ^TMP("IBDF",$J,"C",IBCLN)=""
"RTN","IBDFQB",97,0)
 ...S IEN=0 F  S IEN=$O(^IBD(357.99,GROUPS,11,IEN)) Q:'IEN  S IBDIV=+$G(^IBD(357.99,GROUPS,11,IEN,0)) S:IBDIV ^TMP("IBDF",$J,"D",IBDIV)=""
"RTN","IBDFQB",98,0)
 Q
"RTN","IBDFQB",99,0)
 ;
"RTN","IBDFQB",100,0)
 ;
"RTN","IBDFQB",101,0)
ENTRY ; -- Calc date and do checks on special instructions
"RTN","IBDFQB",102,0)
 K IBDFARY
"RTN","IBDFQB",103,0)
 N IBDFNOW,IBDFINST,IBDFDATE,IBDFDAYS,IBDFCTR,IBDFQTIM
"RTN","IBDFQB",104,0)
 ;S IBDFNOW=$P($$NOW^XLFDT(),"."),IBDFINST=$P(IBDFNODE,"^",8),IBDFQTIM=$S($P(IBDFNODE,"^",13)]"":$P(IBDFNODE,"^",13),1:$E($P($$NOW^XLFDT(),".",2),1,4))
"RTN","IBDFQB",105,0)
 S IBDFNOW=$P($$NOW^XLFDT(),"."),IBDFINST=$P(IBDFNODE,"^",8),IBDFQTIM=$S($P(IBDFNODE,"^",13)]"":$P(IBDFNODE,"^",13),1:IBDFQT)
"RTN","IBDFQB",106,0)
 D:'$D(IBDFSING) ZTDTH
"RTN","IBDFQB",107,0)
 ;
"RTN","IBDFQB",108,0)
 ; -- if ignoring weekends and/or holidays, check current date
"RTN","IBDFQB",109,0)
 I IBDFINST["W" I $$WEEKEND(IBDFNOW) S QUIT=1 Q
"RTN","IBDFQB",110,0)
 I IBDFINST["H" I $$HOLIDAY(IBDFNOW) S QUIT=1 Q
"RTN","IBDFQB",111,0)
 I IBDFINST["I" I $$WEEKEND(IBDFNOW)!($$HOLIDAY(IBDFNOW)) S QUIT=1 Q
"RTN","IBDFQB",112,0)
 ;
"RTN","IBDFQB",113,0)
 ; -- find date to return - returned in IBDFARY(date) array
"RTN","IBDFQB",114,0)
 ; -- loop adds 1 day and checks if day is restricted
"RTN","IBDFQB",115,0)
 ; --     if not, it adds it as a printable day and compares it
"RTN","IBDFQB",116,0)
 ; --     with the number of printable days ahead the user wants to prn
"RTN","IBDFQB",117,0)
 S IBDFDATE=IBDFNOW,IBDFCTR=0,IBDFDAYS=+$P(IBDFNODE,"^",7)
"RTN","IBDFQB",118,0)
 F  Q:IBDFCTR=IBDFDAYS  D
"RTN","IBDFQB",119,0)
 .S IBDFDATE=$$FMADD^XLFDT(IBDFDATE,1)
"RTN","IBDFQB",120,0)
 .I IBDFINST["W" Q:$$WEEKEND(IBDFDATE) 
"RTN","IBDFQB",121,0)
 .I IBDFINST["H" Q:$$HOLIDAY(IBDFDATE)
"RTN","IBDFQB",122,0)
 .I IBDFINST["I" Q:$$WEEKEND(IBDFDATE)!($$HOLIDAY(IBDFDATE))
"RTN","IBDFQB",123,0)
 .S IBDFCTR=IBDFCTR+1
"RTN","IBDFQB",124,0)
 S IBDFARY(IBDFDATE)=""
"RTN","IBDFQB",125,0)
 Q
"RTN","IBDFQB",126,0)
 ;
"RTN","IBDFQB",127,0)
WEEKEND(DATE) ;
"RTN","IBDFQB",128,0)
 ; -- DATE (defaulted to current date if not passed)
"RTN","IBDFQB",129,0)
 ; -- output = 1 if date is a weekend
"RTN","IBDFQB",130,0)
 I '$G(DATE) S DATE=$P($$NOW^XLFDT(),".")
"RTN","IBDFQB",131,0)
 I 60[$$DOW^XLFDT(DATE,1) Q 1
"RTN","IBDFQB",132,0)
 Q 0
"RTN","IBDFQB",133,0)
 ;
"RTN","IBDFQB",134,0)
HOLIDAY(DATE) ;
"RTN","IBDFQB",135,0)
 ; -- DATE (defaulted to current date if not passed)
"RTN","IBDFQB",136,0)
 ; -- output = 1 if date is a holiday
"RTN","IBDFQB",137,0)
 I '$G(DATE) S DATE=$P($$NOW^XLFDT(),".")
"RTN","IBDFQB",138,0)
 N X,Y,DIC
"RTN","IBDFQB",139,0)
 S DIC="^HOLIDAY(",DIC(0)="",X=+$P(DATE,".")
"RTN","IBDFQB",140,0)
 D ^DIC I +Y>0 Q 1
"RTN","IBDFQB",141,0)
 Q 0
"RTN","IBDFQB",142,0)
ZTDTH ;  -- Set up the variable ZTDTH to pass the queue date time of the
"RTN","IBDFQB",143,0)
 ;     queued job.
"RTN","IBDFQB",144,0)
 N IBDFJQ
"RTN","IBDFQB",145,0)
 I IBDFQT>1200,IBDFQT'>2359 D
"RTN","IBDFQB",146,0)
 .I IBDFQTIM>IBDFQT S IBDFJQ=IBDFQD_"."_IBDFQTIM
"RTN","IBDFQB",147,0)
 .I IBDFQTIM<IBDFQT,IBDFQTIM>1200 S IBDFJQ=IBDFQDT
"RTN","IBDFQB",148,0)
 .I IBDFQTIM<IBDFQT,IBDFQTIM'>1200 S X1=IBDFQDT,X2=1 D C^%DTC S IBDFJQ=$P(X,".")_"."_IBDFQTIM
"RTN","IBDFQB",149,0)
 .I IBDFQTIM=IBDFQT S IBDFJQ=IBDFQDT
"RTN","IBDFQB",150,0)
 .Q
"RTN","IBDFQB",151,0)
 I IBDFQT'<0000&(IBDFQT'>1200)!(IBDFQT=2400) D
"RTN","IBDFQB",152,0)
 .I IBDFQT=2400 S IBDFQT="0000"
"RTN","IBDFQB",153,0)
 .I IBDFQTIM>IBDFQT,IBDFQTIM<1200 S IBDFJQ=IBDFQD_"."_IBDFQTIM Q
"RTN","IBDFQB",154,0)
 .I IBDFQTIM<IBDFQT,IBDFQTIM'<0000 S IBDFJQ=IBDFQDT Q
"RTN","IBDFQB",155,0)
 .;I IBDFQTIM>IBDFQT,IBDFQTIM'<1200 S IBDFJQ=IBDFQDT Q
"RTN","IBDFQB",156,0)
 .I IBDFQTIM>IBDFQT,IBDFQTIM'<1200&(IBDFQTIM<1700) S IBDFJQ=IBDFQD_"."_IBDFQTIM Q
"RTN","IBDFQB",157,0)
 .I IBDFQTIM>IBDFQT,IBDFQTIM'<1200&(IBDFQTIM'<1700) S IBDFJQ=IBDFQDT Q
"RTN","IBDFQB",158,0)
 .I IBDFQTIM=IBDFQT S IBDFJQ=IBDFQDT Q
"RTN","IBDFQB",159,0)
 I IBDFJQ]"" S ZTDTH=$$FMTH^XLFDT(IBDFJQ)
"RTN","IBDFQEA")
0^219^B29261676
"RTN","IBDFQEA",1,0)
IBDFQEA ;ALB/CJM/MAF - ENCOUNTER FORM - BUILD FORM(editing action for group's selections list) ;JUN 16,1995
"RTN","IBDFQEA",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFQEA",3,0)
 ;
"RTN","IBDFQEA",4,0)
EDIT ;allows editing of an existing selection
"RTN","IBDFQEA",5,0)
 D FULL^VALM1
"RTN","IBDFQEA",6,0)
 N SEL,SUB,SLCTN,SC,NODE,OQTY,NQTY
"RTN","IBDFQEA",7,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDFQEA",8,0)
 S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
"RTN","IBDFQEA",9,0)
 .W !,"Editing Entry #",SEL
"RTN","IBDFQEA",10,0)
 .S SLCTN=$P($G(^TMP("SELIDX",$J,SEL)),"^",3) Q:'SLCTN
"RTN","IBDFQEA",11,0)
 .S NODE=$G(^IBE(357.3,SLCTN,0))
"RTN","IBDFQEA",12,0)
 .S IBGRP=$P(NODE,"^",4),ORD=$P(NODE,"^",5)
"RTN","IBDFQEA",13,0)
 .;re-index the record, to insure it is good                             
"RTN","IBDFQEA",14,0)
 .K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D IX^DIK K DIK
"RTN","IBDFQEA",15,0)
 .;edit the order of the selection - also, for placeholders, the text, then quit
"RTN","IBDFQEA",16,0)
 .I $P(NODE,"^",2) S DA=SLCTN,DIE=357.3,DR="[IBDF EDIT PLACE HOLDER]" D ^DIE K DIE,DA,DR Q
"RTN","IBDFQEA",17,0)
 .S DA=SLCTN,DIE=357.3,DR=".05;I '$P($G(^IBE(357.6,$P($G(^IBE(357.2,+IBLIST,0)),""^"",11),16)),""^"",8) S Y=""@99"";S OQTY=$P(^IBE(357.3,DA,0),""^"",9);.09;S NQTY=X;@99;S CONT=1" S CONT=0 D ^DIE K DIE,DA,DR
"RTN","IBDFQEA",18,0)
 .;add any missing subcolumns
"RTN","IBDFQEA",19,0)
 .S SC=0 F SC=1:1:8 I $G(IBLIST("SCTYPE",SC))=1 I '$D(^IBE(357.3,SLCTN,1,"B",SC)) D
"RTN","IBDFQEA",20,0)
 ..K DA,DO,DINUM,DIC
"RTN","IBDFQEA",21,0)
 ..N DLAYGO
"RTN","IBDFQEA",22,0)
 ..S DIC="^IBE(357.3,"_SLCTN_",1,",DA(1)=SLCTN,X=SC,DIC(0)="L",DLAYGO=357.3 D FILE^DICN
"RTN","IBDFQEA",23,0)
 .;now allow the user to edit editable subcolumns - CONT=0 means the user up-arrowed out, so stop
"RTN","IBDFQEA",24,0)
 .I CONT S SUB=0 F  S SUB=$O(^IBE(357.3,SLCTN,1,SUB)) Q:'SUB  D
"RTN","IBDFQEA",25,0)
 ..S SC=+$G(^IBE(357.3,SLCTN,1,SUB,0)) I $G(IBLIST("SCTYPE",SC))=1,$G(IBLIST("SCPIECE",SC)),$G(IBLIST("SCEDITABLE",SC)) D
"RTN","IBDFQEA",26,0)
 ...I $G(^IBE(357.3,SLCTN,1,0))="" S ^IBE(357.3,SLCTN,1,0)="^357.31IA^"
"RTN","IBDFQEA",27,0)
 ...S DIE="^IBE(357.3,"_SLCTN_",1,",DA(1)=SLCTN,DA=SUB,DR=".02;S CONT=1",CONT=0 W !!,"Editing Subcolumn "_SC_": Header="_IBLIST("SCHDR",SC)
"RTN","IBDFQEA",28,0)
 ...I $G(OQTY)'=$G(NQTY) S IBVAL=$P($G(^IBE(357.3,SLCTN,1,SUB,0)),"^",2),IBVAL=$P(IBVAL," x "_OQTY)_$S(NQTY>1:" x "_NQTY,1:""),DR=".02////^S X=IBVAL;I;"_DR
"RTN","IBDFQEA",29,0)
 ...D ^DIE K DIE,DA,DR,IBVAL I 'CONT Q
"RTN","IBDFQEA",30,0)
 .D NARR^IBDF4 W !
"RTN","IBDFQEA",31,0)
 .D TERM^IBDF4 W !
"RTN","IBDFQEA",32,0)
 .D CODES^IBDF4A W !
"RTN","IBDFQEA",33,0)
 ;
"RTN","IBDFQEA",34,0)
EDITEXIT ;
"RTN","IBDFQEA",35,0)
 G EXIT
"RTN","IBDFQEA",36,0)
DELETE ;allows the user to select selections to delete
"RTN","IBDFQEA",37,0)
 D FULL^VALM1
"RTN","IBDFQEA",38,0)
 N SEL
"RTN","IBDFQEA",39,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBDFQEA",40,0)
 K DA
"RTN","IBDFQEA",41,0)
 S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
"RTN","IBDFQEA",42,0)
 .S DIK="^IBE(357.3,",DA=$P($G(^TMP("SELIDX",$J,SEL)),"^",3) Q:'DA
"RTN","IBDFQEA",43,0)
 .S NODE=$G(^IBE(357.3,DA,0))
"RTN","IBDFQEA",44,0)
 .S IBGRP=$P(NODE,"^",4),ORD=$P(NODE,"^",5)
"RTN","IBDFQEA",45,0)
 .Q:'$$RUSURE^IBDFU5("Selection #"_SEL)
"RTN","IBDFQEA",46,0)
 .D ^DIK
"RTN","IBDFQEA",47,0)
 .D KILL^VALM10(SEL)
"RTN","IBDFQEA",48,0)
 K DIK,DA
"RTN","IBDFQEA",49,0)
 G EXIT
"RTN","IBDFQEA",50,0)
ADDSLCTN ;allows the user to add a selection to the selection group
"RTN","IBDFQEA",51,0)
 N QUIT,SUB
"RTN","IBDFQEA",52,0)
 ;
"RTN","IBDFQEA",53,0)
 D FULL^VALM1
"RTN","IBDFQEA",54,0)
 S IBRTN=IBLIST("RTN")
"RTN","IBDFQEA",55,0)
 D RTNDSCR^IBDFU1B(.IBRTN)
"RTN","IBDFQEA",56,0)
 I IBRTN("ACTION")'=3 D NOGOOD^IBDF4 G ADDEXIT
"RTN","IBDFQEA",57,0)
 K @IBRTN("DATA_LOCATION")
"RTN","IBDFQEA",58,0)
 S QUIT=0 F  D  G:QUIT EXIT  W !,"Now for another!",!
"RTN","IBDFQEA",59,0)
 .I '$$DORTN^IBDFU1B(.IBRTN) S QUIT=1 D NOGOOD^IBDF4 Q
"RTN","IBDFQEA",60,0)
 .I '$D(@IBRTN("DATA_LOCATION")) S QUIT=1 Q
"RTN","IBDFQEA",61,0)
 .S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $P(^IBE(357.4,+Y,0),""^"",3)=IBLIST" D ^DIC K DIC S:X="^" QUIT=1 Q:QUIT  S IBGRP=+Y I Y<0 D  Q:QUIT=1
"RTN","IBDFQEA",62,0)
 ..W !!,"A SELECTION GROUP HEADER IS REQUIRED.... The selection will not be added if none is provided....Enter '??' for a list of choices.",!!
"RTN","IBDFQEA",63,0)
 ..S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $P(^IBE(357.4,+Y,0),""^"",3)=IBLIST" D ^DIC K DIC S IBGRP=+Y I Y<0 S QUIT=1 Q
"RTN","IBDFQEA",64,0)
 .D ADDREC^IBDF4(.QUIT) ;edits and adds the selection
"RTN","IBDFQEA",65,0)
 .K @IBRTN("DATA_LOCATION")
"RTN","IBDFQEA",66,0)
ADDEXIT ;
"RTN","IBDFQEA",67,0)
 G EXIT
"RTN","IBDFQEA",68,0)
ADDBLANK ;allows the user to add a dummy selection to the selection group
"RTN","IBDFQEA",69,0)
 ;i.e., a place holder that will not actually print a selection
"RTN","IBDFQEA",70,0)
 ;
"RTN","IBDFQEA",71,0)
 ;
"RTN","IBDFQEA",72,0)
 N IBGRP
"RTN","IBDFQEA",73,0)
 D FULL^VALM1
"RTN","IBDFQEA",74,0)
 K DIC S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $D(^IBE(357.3,""APO"",IBLIST,+Y))" D ^DIC S IBGRP=+Y K DIC
"RTN","IBDFQEA",75,0)
 I ('$D(DIRUT))&(Y>0) D ADD^IBDF4A
"RTN","IBDFQEA",76,0)
 D INIT^IBDFQSL1
"RTN","IBDFQEA",77,0)
 S VALMBCK="R"
"RTN","IBDFQEA",78,0)
 Q
"RTN","IBDFQEA",79,0)
FORMAT ;allows the user to format all of the selections in the group in mass
"RTN","IBDFQEA",80,0)
 ;
"RTN","IBDFQEA",81,0)
 D FORMAT^IBDF9A1
"RTN","IBDFQEA",82,0)
 G EXIT
"RTN","IBDFQEA",83,0)
 ;
"RTN","IBDFQEA",84,0)
GRPDEL ;  -- Group Delete
"RTN","IBDFQEA",85,0)
 D FULL^VALM1
"RTN","IBDFQEA",86,0)
 N GRP
"RTN","IBDFQEA",87,0)
 S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $P(^IBE(357.4,+Y,0),""^"",3)=IBLIST" D ^DIC K DIC S IBGRP=+Y I Y<0 G EXIT
"RTN","IBDFQEA",88,0)
 S GRP=+Y
"RTN","IBDFQEA",89,0)
 Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.4,GRP,0)),"^"))
"RTN","IBDFQEA",90,0)
 I GRP D DELSLCTN^IBDF3 K DA S DIK="^IBE(357.4,",DA=GRP D ^DIK K DIK
"RTN","IBDFQEA",91,0)
 D IDXGRP^IBDF3
"RTN","IBDFQEA",92,0)
 S VALMBCK="R"
"RTN","IBDFQEA",93,0)
 D EXIT Q
"RTN","IBDFQEA",94,0)
 ;
"RTN","IBDFQEA",95,0)
GROUPADD ;  -- Add a new group to the selection list and to file 357.4.
"RTN","IBDFQEA",96,0)
 D FULL^VALM1
"RTN","IBDFQEA",97,0)
 N NAME,QUIT,GRP
"RTN","IBDFQEA",98,0)
 S QUIT=0
"RTN","IBDFQEA",99,0)
 F  D  D IDXGRP^IBDF3 G:QUIT EXIT
"RTN","IBDFQEA",100,0)
 .K DIR S DIR(0)="357.4,.01O",DIR("B")="" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBDFQEA",101,0)
 .S NAME=Y
"RTN","IBDFQEA",102,0)
 .K DIC,DD,DO,DINUM S DIC="^IBE(357.4,",X=NAME,DIC(0)=""
"RTN","IBDFQEA",103,0)
 .D FILE^DICN K DIC,DIE,DA
"RTN","IBDFQEA",104,0)
 .I +Y<0 W !,"Unable to create a new record!" D PAUSE^VALM1 S QUIT=1 Q
"RTN","IBDFQEA",105,0)
 .I +Y>0 K DA S DA=+Y,DIE="^IBE(357.4,",DIE("NO^")="Any value",DR=".02;.04;.03////"_IBLIST D ^DIE K DIC,DIE,DR,DA
"RTN","IBDFQEA",106,0)
 .W !,"Now Another!",!
"RTN","IBDFQEA",107,0)
 G EXIT
"RTN","IBDFQEA",108,0)
 ;
"RTN","IBDFQEA",109,0)
GRPEDIT ;
"RTN","IBDFQEA",110,0)
 D FULL^VALM1
"RTN","IBDFQEA",111,0)
 N DIC,DIE,DA,DR,GRP
"RTN","IBDFQEA",112,0)
 S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $P(^IBE(357.4,+Y,0),""^"",3)=IBLIST" D ^DIC K DIC S IBGRP=+Y I Y<0 G EXIT
"RTN","IBDFQEA",113,0)
 S GRP=+Y
"RTN","IBDFQEA",114,0)
 S (DIC,DIE)="^IBE(357.4,",DA=GRP,DR=".01;.02;.04" D ^DIE
"RTN","IBDFQEA",115,0)
 I '$D(DA) D DELSLCTN^IBDF3
"RTN","IBDFQEA",116,0)
 D IDXGRP^IBDF3
"RTN","IBDFQEA",117,0)
 S VALMBCK="R"
"RTN","IBDFQEA",118,0)
 D EXIT Q
"RTN","IBDFQEA",119,0)
 Q
"RTN","IBDFQEA",120,0)
 ;
"RTN","IBDFQEA",121,0)
EXIT D INIT^IBDFQSL1 S VALMBCK="R"
"RTN","IBDFQEA",122,0)
 Q
"RTN","IBDFQEA",123,0)
GRPRESEQ ;  -- Resequence numerically or alphabetically a group
"RTN","IBDFQEA",124,0)
 ;     within a block.
"RTN","IBDFQEA",125,0)
 D FULL^VALM1
"RTN","IBDFQEA",126,0)
 N DIC,GRP,IBGRP,IBGRUP
"RTN","IBDFQEA",127,0)
 Q:$$LSTDSCR2^IBDFU1(.IBLIST) 1
"RTN","IBDFQEA",128,0)
GRP1 S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $P(^IBE(357.4,+Y,0),""^"",3)=IBLIST" D ^DIC K DIC S IBGRUP(+Y)=+Y
"RTN","IBDFQEA",129,0)
 I Y<0&($D(IBGRUP)) D SEQUENCE^IBDF4,EXIT Q
"RTN","IBDFQEA",130,0)
 I Y<0&('$D(IBGRUP)) G EXIT
"RTN","IBDFQEA",131,0)
 G GRP1
"RTN","IBDFQEA",132,0)
GRPRSEQ1 ;  -- Resequence all groups chosen
"RTN","IBDFQEA",133,0)
 N IBGROUP,IBFLAG
"RTN","IBDFQEA",134,0)
 S IBGROUP=0,IBFLAG=1
"RTN","IBDFQEA",135,0)
 F  S IBGROUP=$O(IBGRP(IBGROUP)) Q:'IBGROUP  D SEQUENCE^IBDF4
"RTN","IBDFQEA",136,0)
 Q
"RTN","IBDFQEA1")
0^220^B68530
"RTN","IBDFQEA1",1,0)
IBDFQEA1 ;ALB/MAF - ENCOUNTER FORM - BUILD FORM(editing action for group's selections list) cont. ;JUN 16,1995
"RTN","IBDFQEA1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFQEA1",3,0)
 ;
"RTN","IBDFQEA1",4,0)
FORMAT ;allows the user to format all of the selections in the group in mass
"RTN","IBDFQEA1",5,0)
 ;
"RTN","IBDFQEA1",6,0)
 D FORMAT^IBDF9A1
"RTN","IBDFQEA1",7,0)
 D INIT^IBDFQSL1 S VALMBCK="R"
"RTN","IBDFQEA1",8,0)
 Q
"RTN","IBDFQS")
0^221^B1969260
"RTN","IBDFQS",1,0)
IBDFQS ;ALB/MAF -REQUEUE OF PRINT JOB FOR A SINGLE PARAMETER GROUP - FEB 9 1995
"RTN","IBDFQS",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFQS",3,0)
 ; -- Queue of a single print job (parameter group)
"RTN","IBDFQS",4,0)
 ; -- Selection of what print group/s to be prited
"RTN","IBDFQS",5,0)
 N IBDVALM,IBDAT,VALMY,IBDFSING,IBDFTSTP,IB1FLAG,IB1TASK
"RTN","IBDFQS",6,0)
 S IBDFSING=1,IBDFTSTP=1
"RTN","IBDFQS",7,0)
 S VALMBCK=""
"RTN","IBDFQS",8,0)
 D EN^VALM2($G(XQORNOD(0))) G REP:'$O(VALMY(0)) S IBDVALM=0
"RTN","IBDFQS",9,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBDFQS",10,0)
 F IBDVALM=0:0 S IBDVALM=$O(VALMY(IBDVALM)) Q:'IBDVALM  S IBDFDA=$S($D(IBDTYPE(IBDVALM)):IBDTYPE(IBDVALM),1:"") I IBDFDA]"" D
"RTN","IBDFQS",11,0)
 .N IBDFNUM,IBDFNAME,IBDFIFN,IBDFSEQ
"RTN","IBDFQS",12,0)
 .S QUIT=0
"RTN","IBDFQS",13,0)
 .S (DA,IBDFIFN)=$P(IBDFDA,"^",1),IBDFNUM=$P(IBDFDA,"^",2)
"RTN","IBDFQS",14,0)
 .S IBDFNODE=$G(^IBD(357.09,IBDFNUM,"Q",DA,0)),IBDFNAME=$P(IBDFNODE,"^",1)
"RTN","IBDFQS",15,0)
 .S IBDFSEQ=$P(IBDFNODE,"^",10)
"RTN","IBDFQS",16,0)
 .S IB1FLAG=1
"RTN","IBDFQS",17,0)
 .D UP^IBDFQB($$QUEUE^IBDFQB(IBDFIFN))
"RTN","IBDFQS",18,0)
 .D STAT
"RTN","IBDFQS",19,0)
 .Q
"RTN","IBDFQS",20,0)
REP  S VALMBCK="R" Q
"RTN","IBDFQS",21,0)
 ;
"RTN","IBDFQS",22,0)
STAT ; -- Find out the status of the queued job and kill a tasked job
"RTN","IBDFQS",23,0)
 N IBDFSTAT
"RTN","IBDFQS",24,0)
 D FULL^VALM1
"RTN","IBDFQS",25,0)
 W !!!,"Job Queued <<< "_$P(IBDFNODE,"^",1)_" >>>",!
"RTN","IBDFQS",26,0)
 I $D(IB1TASK) W !,"       TASK #: ",IB1TASK,!
"RTN","IBDFQS",27,0)
 D PAUSE^VALM1
"RTN","IBDFQS",28,0)
 Q
"RTN","IBDFQSL")
0^222^B5375184
"RTN","IBDFQSL",1,0)
IBDFQSL ;ALB/CJM/AAS/MAF - ENCOUNTER FORM - Quick selection edit ;12-Jun-95
"RTN","IBDFQSL",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFQSL",3,0)
 ;allows user to select a form, then displays it for edit
"RTN","IBDFQSL",4,0)
 N IBFORM,ARY,DFN,IBAPPT,RTNLIST,IBPRINT
"RTN","IBDFQSL",5,0)
 S ARY="^TMP(""IBDF"",$J,""TEMPORARY CLINIC LIST"")"
"RTN","IBDFQSL",6,0)
 ;
"RTN","IBDFQSL",7,0)
 K @ARY
"RTN","IBDFQSL",8,0)
 S VALMBCK=""
"RTN","IBDFQSL",9,0)
 I $G(IBAPI("SELECT"))'="" X IBAPI("SELECT")
"RTN","IBDFQSL",10,0)
 K ARY
"RTN","IBDFQSL",11,0)
 I IBFORM,'$$LOCKFRM2^IBDFU7(IBFORM) D LOCKMSG2^IBDFU7(IBFORM) S IBFORM=""
"RTN","IBDFQSL",12,0)
 I IBFORM D PRNTPRMS^IBDFU1C(.IBPRINT,0,1,0,1),UNCMPL^IBDF19(IBFORM,0)
"RTN","IBDFQSL",13,0)
 Q:'$$FORMDSCR^IBDFU1C(.IBFORM)
"RTN","IBDFQSL",14,0)
EDITBLK ;allows the user to edit everything about the block
"RTN","IBDFQSL",15,0)
 ;allows user to discard or save changes to the block
"RTN","IBDFQSL",16,0)
 ;
"RTN","IBDFQSL",17,0)
 ;If IBBLK and IBBLK2 are used to point to two copies, one copy for editing and the other incase 'undo' is needed
"RTN","IBDFQSL",18,0)
 ; 
"RTN","IBDFQSL",19,0)
 N IBBLK,IBVALMBG,TOP1,TOP2,BOT1,BOT2,IBBLK2,IBTKODR,IBJUNK,IFSAVE
"RTN","IBDFQSL",20,0)
 ;
"RTN","IBDFQSL",21,0)
 S IBVALMBG=VALMBG
"RTN","IBDFQSL",22,0)
 D FULL^VALM1
"RTN","IBDFQSL",23,0)
 S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,IOSL,"HEADER") ;select the block
"RTN","IBDFQSL",24,0)
 I IBBLK S IBLIST=$O(^IBE(357.2,"C",IBBLK,0)) D
"RTN","IBDFQSL",25,0)
 .I 'IBLIST W !!,"Block does not contain a list!  Try Again.",! D PAUSE^IBDFU5 Q
"RTN","IBDFQSL",26,0)
 .D KILL^IBDFUA
"RTN","IBDFQSL",27,0)
 .Q:$$BLKDESCR^IBDFU1B(.IBBLK) 1
"RTN","IBDFQSL",28,0)
 .S (IBBLK2,IBTKODR,IBJUNK)=""
"RTN","IBDFQSL",29,0)
 .D COPYBLK^IBDF5B(IBBLK,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" Q  ;sets IBBLK to the work copy, IBBLK2 to the copy actually on the form
"RTN","IBDFQSL",30,0)
 .D TOPNBOT^IBDFU5(IBBLK,.TOP1,.BOT1)
"RTN","IBDFQSL",31,0)
 .D EN^IBDFQSL1
"RTN","IBDFQSL",32,0)
 .I IBBLK,IBBLK2 D
"RTN","IBDFQSL",33,0)
 ..S IFSAVE=$$ASKSAVE^IBDF5B
"RTN","IBDFQSL",34,0)
 ..I IFSAVE D SAVECOPY^IBDF5B(.IBBLK,.IBBLK2,IBTKODR) S IBBLK=IBBLK2,IBBLK2="" D BLKCHNG^IBDF19(IBFORM,IBBLK)
"RTN","IBDFQSL",35,0)
 ..I 'IFSAVE D DLTCOPY^IBDF5B(IBBLK) S IBBLK=IBBLK2,IBBLK2=""
"RTN","IBDFQSL",36,0)
 ..L -^IBE(357.1,IBBLK):1
"RTN","IBDFQSL",37,0)
 .I '$G(IBFASTXT) D
"RTN","IBDFQSL",38,0)
 ..S VALMBG=IBVALMBG
"RTN","IBDFQSL",39,0)
 ..D TOPNBOT^IBDFU5(IBBLK,.TOP2,.BOT2)
"RTN","IBDFQSL",40,0)
 ..S TOP1=$S(TOP1<TOP2:TOP1,1:TOP2),BOT1=$S(BOT1>BOT2:BOT1,1:BOT2)
"RTN","IBDFQSL",41,0)
 S VALMBCK="R"
"RTN","IBDFQSL",42,0)
 Q
"RTN","IBDFQSL",43,0)
 ;
"RTN","IBDFQSL1")
0^223^B16849153
"RTN","IBDFQSL1",1,0)
IBDFQSL1 ;ALB/CJM/AAS/MAF - ENCOUNTER FORM - Quick selection edit (cont.);12-Jun-95
"RTN","IBDFQSL1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFQSL1",3,0)
EN ; -- main entry point for IBDF QUICK SELECTION EDIT
"RTN","IBDFQSL1",4,0)
 D EN^VALM("IBDF QUICK SELECTION EDIT")
"RTN","IBDFQSL1",5,0)
 Q
"RTN","IBDFQSL1",6,0)
 ;
"RTN","IBDFQSL1",7,0)
HDR ; -- header code
"RTN","IBDFQSL1",8,0)
 S VALMHDR(1)="This screen displays the selection list for ' "_$P(^IBE(357.1,IBBLK,0),"^",1)_" '"
"RTN","IBDFQSL1",9,0)
 S VALMHDR(2)="on Encounter Form ' "_$P(^IBE(357,IBFORM,0),"^",1)_" '"
"RTN","IBDFQSL1",10,0)
 Q
"RTN","IBDFQSL1",11,0)
 ;
"RTN","IBDFQSL1",12,0)
INIT ; -- init variables and list array
"RTN","IBDFQSL1",13,0)
 N IBDCNT,IBDCNT1
"RTN","IBDFQSL1",14,0)
 W !,"Please wait while I build the list..."
"RTN","IBDFQSL1",15,0)
 K ^TMP("SEL",$J),^TMP("SELIDX",$J),IBDFHDR D KILL^VALM10()
"RTN","IBDFQSL1",16,0)
 S (IBDCNT,IBDCNT1,VALMCNT)=0
"RTN","IBDFQSL1",17,0)
 S IBDLSTNM=$P(^IBE(357.2,IBLIST,0),"^",1) D INTER D
"RTN","IBDFQSL1",18,0)
 .S IBLSNODE=$G(^IBE(357.2,IBLIST,0))
"RTN","IBDFQSL1",19,0)
 .I $D(IBDFAR) F IBDFX=0:0 S IBDFX=$O(@(IBDFAR_"("_IBDFX_")")) Q:'IBDFX  S IBDFARR=$G(@(IBDFAR_"("_IBDFX_")")) D:$P(IBDFARR,"^",1)="" HEADER D:$P(IBDFARR,"^",1)]"" SETARR
"RTN","IBDFQSL1",20,0)
 Q:$$LSTDESCR^IBDFU1(.IBLIST) 1
"RTN","IBDFQSL1",21,0)
 S IBRTN=IBLIST("RTN")
"RTN","IBDFQSL1",22,0)
 D RTNDSCR^IBDFU1B(.IBRTN)
"RTN","IBDFQSL1",23,0)
 I '$D(^TMP("SEL",$J)) D NUL
"RTN","IBDFQSL1",24,0)
 Q
"RTN","IBDFQSL1",25,0)
 ;
"RTN","IBDFQSL1",26,0)
SETARR ;  -- Set up Listman array
"RTN","IBDFQSL1",27,0)
 N IBDFNODE
"RTN","IBDFQSL1",28,0)
 W "."
"RTN","IBDFQSL1",29,0)
 S IBDFNODE=IBDFARR
"RTN","IBDFQSL1",30,0)
 S IBDFSEL=$P(IBDFNODE,"^",4)
"RTN","IBDFQSL1",31,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFQSL1",32,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFQSL1",33,0)
 S X=""
"RTN","IBDFQSL1",34,0)
 S IBDFVAL=$J(IBDCNT1_")",5)
"RTN","IBDFQSL1",35,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,1,5)
"RTN","IBDFQSL1",36,0)
 S IBDFVAL=$P(IBDFNODE,"^",1)
"RTN","IBDFQSL1",37,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,7,7)
"RTN","IBDFQSL1",38,0)
 S IBDFVAL=$P(IBDFNODE,"^",6)
"RTN","IBDFQSL1",39,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,16,5)
"RTN","IBDFQSL1",40,0)
 S IBDFVAL=$P(IBDFNODE,"^",2)
"RTN","IBDFQSL1",41,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,23,40)
"RTN","IBDFQSL1",42,0)
 S IBDFVAL=$P(^IBE(357.4,$P(IBDFNODE,"^",5),0),"^",1)
"RTN","IBDFQSL1",43,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,64,15)
"RTN","IBDFQSL1",44,0)
 I $D(^IBE(357.3,$P(IBDFNODE,"^",4),2)) D
"RTN","IBDFQSL1",45,0)
 .S IBDFVAL=$P(^IBE(357.3,$P(IBDFNODE,"^",4),2),"^")
"RTN","IBDFQSL1",46,0)
 .S X=$$SETSTR^VALM1(IBDFVAL,X,81,26)
"RTN","IBDFQSL1",47,0)
 .S IBDFVAL=$P(^IBE(357.3,$P(IBDFNODE,"^",4),2),"^",2)
"RTN","IBDFQSL1",48,0)
 .I $D(^LEX(757.01)) S IBDFVAL=$P($G(^LEX(757.01,+IBDFVAL,0)),"^")
"RTN","IBDFQSL1",49,0)
 .E  S IBDFVAL=$P($G(^GMP(757.01,+IBDFVAL,0)),"^")
"RTN","IBDFQSL1",50,0)
 .S X=$$SETSTR^VALM1(IBDFVAL,X,109,23)
"RTN","IBDFQSL1",51,0)
TMP ; -- Set up TMP Array
"RTN","IBDFQSL1",52,0)
 S ^TMP("SEL",$J,IBDCNT,0)=X,^TMP("SEL",$J,"IDX",VALMCNT,IBDCNT1)=IBDFSEL
"RTN","IBDFQSL1",53,0)
 S ^TMP("SELIDX",$J,IBDCNT1)=VALMCNT_"^"_$P(IBDFARR,"^",3)_"^"_$P(IBDFARR,"^",4)_"^"_$P(IBDFARR,"^",5) ;_"^"_IBDFX_"^"_$P(IBDFTMP,"^",4)_"^"_$P(IBDFTMP,"^",5)_"^"_$P(IBDFTMP,"^",1)_"^"_$P(IBDFTMP,"^",2)
"RTN","IBDFQSL1",54,0)
 Q
"RTN","IBDFQSL1",55,0)
HEADER ;  -- Set up header line for the display
"RTN","IBDFQSL1",56,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFQSL1",57,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFQSL1",58,0)
 S X=""
"RTN","IBDFQSL1",59,0)
 S IBDVAL=$S($P(IBDFARR,"^",2)]"":$P(IBDFARR,"^",2),1:"BLANK")
"RTN","IBDFQSL1",60,0)
 S IBDFHDR(IBDVAL)=IBDCNT_"^"_$P(IBDFARR,"^",5)
"RTN","IBDFQSL1",61,0)
 S IBDFSEL=$P(IBDFARR,"^",5)
"RTN","IBDFQSL1",62,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP
"RTN","IBDFQSL1",63,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFQSL1",64,0)
 S IBDVAL=$P(IBDFARR,"^",6)
"RTN","IBDFQSL1",65,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,16,5)
"RTN","IBDFQSL1",66,0)
 S IBDVAL=$P(IBDFARR,"^",2)
"RTN","IBDFQSL1",67,0)
 S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR^VALM1(" ",X,22,IBDVAL1)
"RTN","IBDFQSL1",68,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,IBDVAL1,25) D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFQSL1",69,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFQSL1",70,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP
"RTN","IBDFQSL1",71,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFQSL1",72,0)
 Q
"RTN","IBDFQSL1",73,0)
INTER ;  -- Find Package interface for selection list
"RTN","IBDFQSL1",74,0)
 K IBARRY S IBDFAR="IBARRY",IBDFINT=$P($G(^IBE(357.2,IBLIST,0)),"^",11),IBDFINT(1)=$P(^IBE(357.6,IBDFINT,0),"^",1) D GETLST^IBDFQSL2(IBFORM,IBBLK,IBLIST,.IBDFINT,"IBARRY",1)
"RTN","IBDFQSL1",75,0)
 Q
"RTN","IBDFQSL1",76,0)
HELP ; -- help code
"RTN","IBDFQSL1",77,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFQSL1",78,0)
 Q
"RTN","IBDFQSL1",79,0)
 ;
"RTN","IBDFQSL1",80,0)
EXIT ; -- exit code
"RTN","IBDFQSL1",81,0)
 K IBARRY,IBDFAR,IBDFARR,IBDFHDR,IBDFINT,IBDFSEL,IBDFVAL,IBDFX,IBDLSTNM,IBDVAL,IBDVAL1,IBLIST,IBRTN,IEN,IBLSNODE,DIC,IBGRP,NODE
"RTN","IBDFQSL1",82,0)
 K ^TMP("SEL",$J),^TMP("SELIDX",$J)
"RTN","IBDFQSL1",83,0)
 Q
"RTN","IBDFQSL1",84,0)
 ;
"RTN","IBDFQSL1",85,0)
EXPND ; -- expand code
"RTN","IBDFQSL1",86,0)
 Q
"RTN","IBDFQSL1",87,0)
 ;
"RTN","IBDFQSL1",88,0)
NUL ;  -- Null message
"RTN","IBDFQSL1",89,0)
 S ^TMP("SEL",$J,1,0)=" ",^TMP("SEL",$J,2,0)="There are no selection lists for this block.",^TMP("SELIDX",$J,1)=1,^TMP("SELIDX",$J,2)=2
"RTN","IBDFQSL1",90,0)
 Q
"RTN","IBDFQSL2")
0^224^B9293770
"RTN","IBDFQSL2",1,0)
IBDFQSL2 ;ALB/CJM/AAS/MAF - ENCOUNTER FORM - Quick selection edit (cont.);12-Jun-95
"RTN","IBDFQSL2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFQSL2",3,0)
 ;
"RTN","IBDFQSL2",4,0)
GETLST(FORM,BLOCK,LIST,INTRFACE,ARY,FILTER,COUNT) ; -- returns any specified selection list for a clinic
"RTN","IBDFQSL2",5,0)
 ; -- input    FORM = ien of entry in 357
"RTN","IBDFQSL2",6,0)
 ;            BLOCK = ien of entry in 357.1
"RTN","IBDFQSL2",7,0)
 ;             LIST = ien of entry in 357.2
"RTN","IBDFQSL2",8,0)
 ;         INTRFACE = name of selection list in package interface file
"RTN","IBDFQSL2",9,0)
 ;              ARY = name of array to return list in
"RTN","IBDFQSL2",10,0)
 ;           FILTER = predefined filters (optional, default = 1)
"RTN","IBDFQSL2",11,0)
 ;                                       1 = must be selection list
"RTN","IBDFQSL2",12,0)
 ;                                       2 = only visit cpts on list
"RTN","IBDFQSL2",13,0)
 ;
"RTN","IBDFQSL2",14,0)
 ; -- output  The format of the returned array is as follows
"RTN","IBDFQSL2",15,0)
 ;         @ARY@(0) = count of array element (0 of nothing found)
"RTN","IBDFQSL2",16,0)
 ;         @ARY@(1) = ^group header
"RTN","IBDFQSL2",17,0)
 ;         @ARY@(2) = problem ien or cpt or icd code^user defined text
"RTN","IBDFQSL2",18,0)
 ;         @ARY@(3) = problem ien or cpt or icd code^used defined text
"RTN","IBDFQSL2",19,0)
 ;         @ARY@(k) = ^next group header
"RTN","IBDFQSL2",20,0)
 ;       @ARY@(k+1) = problem ien or cpt or icd code^user define text
"RTN","IBDFQSL2",21,0)
 ;
"RTN","IBDFQSL2",22,0)
 Q:'FORM!('BLOCK)!('LIST)!('INTRFACE)
"RTN","IBDFQSL2",23,0)
 N OLDARY,IBDTMP,IBDUP
"RTN","IBDFQSL2",24,0)
 S COUNT=$G(COUNT,0)
"RTN","IBDFQSL2",25,0)
 I $G(FILTER)<1 S FILTER=1 ;default value=1
"RTN","IBDFQSL2",26,0)
 I FILTER>1 S OLDARY=ARY,ARY="IBDTMP"
"RTN","IBDFQSL2",27,0)
 S @ARY@(0)=+$G(@ARY@(0))
"RTN","IBDFQSL2",28,0)
 D COPYLIST(LIST,ARY,.COUNT)
"RTN","IBDFQSL2",29,0)
 S @ARY@(0)=COUNT
"RTN","IBDFQSL2",30,0)
 I FILTER=2 D F2^IBDF18A1(OLDARY)
"RTN","IBDFQSL2",31,0)
 Q
"RTN","IBDFQSL2",32,0)
 ;
"RTN","IBDFQSL2",33,0)
COPYLIST(LIST,ARY,COUNT) ;copies the entries from LIST to @ARY, starting subscript at COUNT+1
"RTN","IBDFQSL2",34,0)
 ;
"RTN","IBDFQSL2",35,0)
 N SLCTN,SUBCOL,TEXT,IEN,NODE,TSUBCOL,NOTREAL,NODE,GROUP,ORDER,HDR,GRPORDR
"RTN","IBDFQSL2",36,0)
 ;
"RTN","IBDFQSL2",37,0)
 D SUBCOL^IBDF18A1(LIST,.TSUBCOL) ;find the subcolumn containing the text
"RTN","IBDFQSL2",38,0)
 ;
"RTN","IBDFQSL2",39,0)
 S GRPORDR="" F  S GRPORDR=$O(^IBE(357.4,"APO",LIST,GRPORDR)) Q:GRPORDR=""  S GROUP=0 F  S GROUP=$O(^IBE(357.4,"APO",LIST,GRPORDR,GROUP)) Q:'GROUP  D
"RTN","IBDFQSL2",40,0)
 .S HDR=$P($G(^IBE(357.4,GROUP,0)),"^") ;I HDR="BLANK" S HDR=""  If don't want to print BLANK group
"RTN","IBDFQSL2",41,0)
 .S COUNT=COUNT+1,@ARY@(COUNT)="^"_HDR_"^^^"_GROUP_"^"_GRPORDR
"RTN","IBDFQSL2",42,0)
 .S ORDER="" F  S ORDER=$O(^IBE(357.3,"APO",LIST,GROUP,ORDER)) Q:ORDER=""  S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"APO",LIST,GROUP,ORDER,SLCTN)) Q:'SLCTN  D
"RTN","IBDFQSL2",43,0)
 ..S NODE=$G(^IBE(357.3,SLCTN,0)),IEN=$P(NODE,"^"),NOTREAL=$P(NODE,"^",2)
"RTN","IBDFQSL2",44,0)
 ..S SUBCOL=$O(^IBE(357.3,SLCTN,1,"B",+TSUBCOL,0)) I 'SUBCOL S TEXT=$S($P(NODE,"^",6)?1E.E:$P(NODE,"^",6),1:"BLANK") S COUNT=COUNT+1,IBDUP(IEN)="",@ARY@(COUNT)=" "_"^"_TEXT_"^"_LIST_"^"_SLCTN_"^"_GROUP_"^"_ORDER Q  ;Q:'SUBCOL
"RTN","IBDFQSL2",45,0)
 ..S NODE=$G(^IBE(357.3,SLCTN,1,SUBCOL,0)) S:$P(NODE,"^")=TSUBCOL TEXT=$P(NODE,"^",2)
"RTN","IBDFQSL2",46,0)
 ..;
"RTN","IBDFQSL2",47,0)
 ..I $L(TEXT) S COUNT=COUNT+1,IBDUP(IEN)="",@ARY@(COUNT)=IEN_"^"_TEXT_"^"_LIST_"^"_SLCTN_"^"_GROUP_"^"_ORDER Q  ;set up the array with data
"RTN","IBDFQSL2",48,0)
 Q
"RTN","IBDFREG")
0^225^B14290257
"RTN","IBDFREG",1,0)
IBDFREG ;ALB/CJM - ENCOUNTER FORM (prints for a single patient);NOV 16,1992
"RTN","IBDFREG",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFREG",3,0)
MAIN(WITHDATA) ;
"RTN","IBDFREG",4,0)
 ; -- prints encounter forms, either with patient data for a patient 
"RTN","IBDFREG",5,0)
 ;    with no appointment (in which case it uses time of printing as
"RTN","IBDFREG",6,0)
 ;    the appointment time) or without patient data (only if a form
"RTN","IBDFREG",7,0)
 ;    is defined for the clinic for such use)
"RTN","IBDFREG",8,0)
 ;    $G(WITDATA) if the form should be printed with data
"RTN","IBDFREG",9,0)
 ;    0 if a blank form for use without patient data should be printed
"RTN","IBDFREG",10,0)
 ;
"RTN","IBDFREG",11,0)
 N IBF,FORMS,NODE,IBPM
"RTN","IBDFREG",12,0)
 ;FORMS = list of forms in form^form^... format
"RTN","IBDFREG",13,0)
 ;IBI is a counter used to parse FORMS
"RTN","IBDFREG",14,0)
 ;IBPM=1 if forms defined in print manager should be printed
"RTN","IBDFREG",15,0)
 N IBFLAG
"RTN","IBDFREG",16,0)
 S IBFLAG=1
"RTN","IBDFREG",17,0)
 S WITHDATA=+$G(WITHDATA)
"RTN","IBDFREG",18,0)
 K ^TMP("IB",$J),^TMP("IBDF",$J)
"RTN","IBDFREG",19,0)
 S (IBPM,IBQUIT)=0
"RTN","IBDFREG",20,0)
 D CLINIC G:IBQUIT EXIT
"RTN","IBDFREG",21,0)
 I WITHDATA D  G:IBQUIT EXIT
"RTN","IBDFREG",22,0)
 .D NOW
"RTN","IBDFREG",23,0)
 .D WHCHFORM
"RTN","IBDFREG",24,0)
 D DEVICE G:IBQUIT EXIT
"RTN","IBDFREG",25,0)
QUEUED ;
"RTN","IBDFREG",26,0)
 ;input - DFN,IBAPPT,IBCLINIC
"RTN","IBDFREG",27,0)
 N IBDEVICE
"RTN","IBDFREG",28,0)
 ;
"RTN","IBDFREG",29,0)
 D DEVICE^IBDFUA(0,.IBDEVICE)
"RTN","IBDFREG",30,0)
 F IBF=1:1 S IBFORM=$P(FORMS,"^",IBF) Q:'IBFORM  D DRWFORM^IBDF2A(IBFORM,WITHDATA,.IBDEVICE)
"RTN","IBDFREG",31,0)
 I WITHDATA,IBPM D PRNTOTHR^IBDF1B5(IBCLINIC,IBAPPT,DFN)
"RTN","IBDFREG",32,0)
EXIT ;
"RTN","IBDFREG",33,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBDFREG",34,0)
 E  D ^%ZISC
"RTN","IBDFREG",35,0)
 D KPRNTVAR^IBDFUA ;kills the screen and graphics parameters
"RTN","IBDFREG",36,0)
 K IBQUIT,IBFORM,IBCLINIC,IBAPPT,IBTYPE,X,Y,I,^TMP("IB",$J),^TMP("IBDF",$J),^TMP("RPT",$J),^TMP("DFN",$J)
"RTN","IBDFREG",37,0)
 Q
"RTN","IBDFREG",38,0)
FORM ;gets the type of form to print from the clinic setup - sets FORMS
"RTN","IBDFREG",39,0)
 N SETUP
"RTN","IBDFREG",40,0)
 S SETUP=$O(^SD(409.95,"B",IBCLINIC,"")) I 'SETUP D ERROR S IBQUIT=1 Q
"RTN","IBDFREG",41,0)
 S SETUP=$G(^SD(409.95,SETUP,0)) I SETUP="" D ERROR S IBQUIT=1 Q
"RTN","IBDFREG",42,0)
 S FORMS=$P(SETUP,"^",5) I 'FORMS D ERROR S IBQUIT=1 Q
"RTN","IBDFREG",43,0)
 Q
"RTN","IBDFREG",44,0)
ERROR ;prints a message
"RTN","IBDFREG",45,0)
 W !!,"There is no encounter form defined for this clinic that should print",!,"without patient data!",!
"RTN","IBDFREG",46,0)
 Q
"RTN","IBDFREG",47,0)
ERROR2 ;prints a message
"RTN","IBDFREG",48,0)
 W !!,"There are no forms defined to print for this clinic!",!
"RTN","IBDFREG",49,0)
 Q
"RTN","IBDFREG",50,0)
DEVICE ;
"RTN","IBDFREG",51,0)
 ; -- always ask with param as default
"RTN","IBDFREG",52,0)
 S %ZIS("A")="Select Encounter Form PRINTER: "
"RTN","IBDFREG",53,0)
 S %ZIS("B")=$P($G(^DG(43,1,0)),"^",48) S %ZIS="MQN",%ZIS("S")="I $E($P($G(^%ZIS(2,+$G(^%ZIS(1,Y,""SUBTYPE"")),0)),U),1,2)=""P-""" D ^%ZIS
"RTN","IBDFREG",54,0)
 I POP S IBQUIT=1 Q
"RTN","IBDFREG",55,0)
 S IBDFRION=ION
"RTN","IBDFREG",56,0)
 ;
"RTN","IBDFREG",57,0)
 ; -- ask only if parameter not defined
"RTN","IBDFREG",58,0)
 ;I $P($G(^DG(43,1,0)),"^",48)="" S %ZIS="MQN" D ^%ZIS Q:POP S IBDFRION=ION
"RTN","IBDFREG",59,0)
 ;
"RTN","IBDFREG",60,0)
 I IO=IO(0)!($E(IOST,1,2)["C-") W !,"Queuing to a CRT not allowed!" S IBQUIT=1 Q
"RTN","IBDFREG",61,0)
 S ZTRTN="QUEUED^IBDF1A",(ZTSAVE("WITHDATA"),ZTSAVE("IB*"),ZTSAVE("DFN"),ZTSAVE("FORMS"))="",ZTDTH=$H
"RTN","IBDFREG",62,0)
 S ZTDESC="IBD - PRINT ENCOUNTER FORM" D ^%ZTLOAD
"RTN","IBDFREG",63,0)
 ;W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","IBDFREG",64,0)
 D HOME^%ZIS S IBQUIT=1 Q
"RTN","IBDFREG",65,0)
 Q
"RTN","IBDFREG",66,0)
CLINIC ;asks the user for the clinic
"RTN","IBDFREG",67,0)
 K DIR S DIR(0)="409.95,.01O",DIR("A")="PRINT AN ENCOUNTER FORM FOR WHICH CLINIC? " D ^DIR K DIR I $D(DTOUT)!$D(DUOUT)!(+Y<0)!('(+Y)) S IBQUIT=1 Q
"RTN","IBDFREG",68,0)
 S IBCLINIC=+Y
"RTN","IBDFREG",69,0)
 Q
"RTN","IBDFREG",70,0)
NOW ;sets IBAPPT to NOW
"RTN","IBDFREG",71,0)
 N %,%H,%I,X
"RTN","IBDFREG",72,0)
 D NOW^%DTC
"RTN","IBDFREG",73,0)
 S IBAPPT=%
"RTN","IBDFREG",74,0)
 Q
"RTN","IBDFREG",75,0)
WHCHFORM ;
"RTN","IBDFREG",76,0)
 S IBPM=0,FORMS=""
"RTN","IBDFREG",77,0)
 S Y=2 S FORMS=$$FORMS^IBDF1B2(IBCLINIC,DFN,IBAPPT),IBPM=1
"RTN","IBDFREG",78,0)
 I '$P(FORMS,"^"),IBPM,'$$IFOTHR^IBDF1B5(IBCLINIC,"FOR EVERY APPOINTMENT"),'$$IFOTHR^IBDF1B5(IBCLINIC,"ONLY FOR EARLIEST APPOINTMENT") D ERROR2 S IBQUIT=1 Q
"RTN","IBDFREG",79,0)
 Q
"RTN","IBDFREG",80,0)
 ;
"RTN","IBDFREG",81,0)
WI(DFN,IBCLINIC,IBAPPT) ; -- procedure
"RTN","IBDFREG",82,0)
 ; -- print encounter form for walk-ins (not tested)
"RTN","IBDFREG",83,0)
 N DIR,IBQUIT,IBF,FORMS,NODE,IBPM,IBDFWI,WITHDATA
"RTN","IBDFREG",84,0)
 S IBQUIT=0
"RTN","IBDFREG",85,0)
 G:'$G(DFN) WIQ
"RTN","IBDFREG",86,0)
 G:'$G(IBAPPT) WIQ
"RTN","IBDFREG",87,0)
 ;
"RTN","IBDFREG",88,0)
 S DIR(0)="Y",DIR("A")="DO YOU WANT TO PRINT AN ENCOUNTER FORM NOW"
"RTN","IBDFREG",89,0)
 W ! D ^DIR K DIR G WIQ:$D(DIRUT)!(Y=0)
"RTN","IBDFREG",90,0)
 ;
"RTN","IBDFREG",91,0)
 I '$G(IBCLINIC) D CLINIC G:IBQUIT WIQ
"RTN","IBDFREG",92,0)
 ;
"RTN","IBDFREG",93,0)
 S (IBDFWI,WITHDATA)=1
"RTN","IBDFREG",94,0)
 K ^TMP("IB",$J),^TMP("IBDF",$J)
"RTN","IBDFREG",95,0)
 S (IBPM,IBQUIT)=0
"RTN","IBDFREG",96,0)
 D WHCHFORM
"RTN","IBDFREG",97,0)
 D DEVICE G:IBQUIT WIQ ;automatically queues form
"RTN","IBDFREG",98,0)
 D QUEUED
"RTN","IBDFREG",99,0)
WIQ Q
"RTN","IBDFRPC")
0^226^B35705919
"RTN","IBDFRPC",1,0)
IBDFRPC ;ALB/AAS - AICS Return list of interfaces ; 2-JAN-96
"RTN","IBDFRPC",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFRPC",3,0)
 ;
"RTN","IBDFRPC",4,0)
CLNLSTI(RESULT,CLINIC) ; -- Procedure
"RTN","IBDFRPC",5,0)
 ; -- Broker call to return list of data entry elements for a clinic/patient/form
"RTN","IBDFRPC",6,0)
 ;    rpc := IBD GET INPUT OBJECT BY CLINIC
"RTN","IBDFRPC",7,0)
 ;
"RTN","IBDFRPC",8,0)
 ; -- input  CLINIC = pointer to hospital location file or clinic name
"RTN","IBDFRPC",9,0)
 ;           Result = called by reference or use a closed global root
"RTN","IBDFRPC",10,0)
 ;
"RTN","IBDFRPC",11,0)
 ; -- output  The format of the returned array is as follows
"RTN","IBDFRPC",12,0)
 ;        result(0) := count of array elements
"RTN","IBDFRPC",13,0)
 ;        result(n) := $p1 :=  pkg interface name
"RTN","IBDFRPC",14,0)
 ;                     $p2 :=  pkg interface ien
"RTN","IBDFRPC",15,0)
 ;                     $p3 :=  form name
"RTN","IBDFRPC",16,0)
 ;                     $p4 :=  form type
"RTN","IBDFRPC",17,0)
 ;                     $p5 :=  type of input object
"RTN","IBDFRPC",18,0)
 ;                     $p6 :=  input object ien.
"RTN","IBDFRPC",19,0)
 ;                     $P7 :=  Vital Name (vitals only)
"RTN","IBDFRPC",20,0)
 ;                     $p8 :=  manual data entry supported
"RTN","IBDFRPC",21,0)
 ;                     $p9 :=  Block ien
"RTN","IBDFRPC",22,0)
 ;                     $p10 := block row
"RTN","IBDFRPC",23,0)
 ;                     $p11 := block column
"RTN","IBDFRPC",24,0)
 ;
"RTN","IBDFRPC",25,0)
 N I,J,X,Y,CL1,FTYP,IBDX,FRM,CNT
"RTN","IBDFRPC",26,0)
 ;
"RTN","IBDFRPC",27,0)
 I $E($G(RESULT),1)="^" S ARRY=RESULT
"RTN","IBDFRPC",28,0)
 E  S ARRY="RESULT"
"RTN","IBDFRPC",29,0)
 ;
"RTN","IBDFRPC",30,0)
 K @ARRY S @ARRY@(0)="Clinic Not Found"
"RTN","IBDFRPC",31,0)
 I +CLINIC'=CLINIC,CLINIC'="" S CLINIC=+$O(^SC("B",CLINIC,0))
"RTN","IBDFRPC",32,0)
 G:'CLINIC CLNLSTQ
"RTN","IBDFRPC",33,0)
 ;
"RTN","IBDFRPC",34,0)
 ; -- find forms for clinic in clinic set up
"RTN","IBDFRPC",35,0)
 ;    if no form, use default form from parameters
"RTN","IBDFRPC",36,0)
 S CL1=$O(^SD(409.95,"B",CLINIC,0))
"RTN","IBDFRPC",37,0)
 I 'CL1 D  G CLNLSTQ
"RTN","IBDFRPC",38,0)
 .S @ARRY@(0)="No forms for Clinic"
"RTN","IBDFRPC",39,0)
 .S FRM=$$DEFAULT Q:'FRM
"RTN","IBDFRPC",40,0)
 .S @ARRY@(0)="Using Default Form"
"RTN","IBDFRPC",41,0)
 .D FRMLSTI(.RESULT,FRM,11,0)
"RTN","IBDFRPC",42,0)
 ;
"RTN","IBDFRPC",43,0)
 S IBDX=$G(^SD(409.95,CL1,0)) F FTYP=2,3,4,5,6,8,9 I $P(IBDX,"^",FTYP)'="" S FRM=$P(IBDX,"^",FTYP) D FRMLSTI(.RESULT,FRM,FTYP,0)
"RTN","IBDFRPC",44,0)
 ;
"RTN","IBDFRPC",45,0)
CLNLSTQ Q
"RTN","IBDFRPC",46,0)
 ;
"RTN","IBDFRPC",47,0)
FRMLSTI(RESULT,FRM,FTYP,KILL,ALLOBJ) ; -- procedure
"RTN","IBDFRPC",48,0)
 ; -- Broker call to return list of data entry elemets for one form
"RTN","IBDFRPC",49,0)
 ;    rpc := IBD GET INPUT OBJECT BY FORM
"RTN","IBDFRPC",50,0)
 ;
"RTN","IBDFRPC",51,0)
 ; -- input     FRM := pointer to encounter form file (357) or form name
"RTN","IBDFRPC",52,0)
 ;           Result := Call by reference or use a closed global root
"RTN","IBDFRPC",53,0)
 ;             FTYP := type of form for clinic (optional)
"RTN","IBDFRPC",54,0)
 ;             KILL := 1 to kill results array prior to setting (default) (optional)
"RTN","IBDFRPC",55,0)
 ;           ALLOBJ := 1 to return all form objects, not just input objs
"RTN","IBDFRPC",56,0)
 ;                     0 to not kill array 
"RTN","IBDFRPC",57,0)
 ;
"RTN","IBDFRPC",58,0)
 ; -- output  The format of the returned array is as follows
"RTN","IBDFRPC",59,0)
 ;        Result(0) := count of array elements
"RTN","IBDFRPC",60,0)
 ;        Result(n)    $p1 :=  pkg interface name
"RTN","IBDFRPC",61,0)
 ;                     $p2 :=  pkg interface ien
"RTN","IBDFRPC",62,0)
 ;                     $p3 :=  form name
"RTN","IBDFRPC",63,0)
 ;                     $p4 :=  form type
"RTN","IBDFRPC",64,0)
 ;                     $p5 :=  type of input object
"RTN","IBDFRPC",65,0)
 ;                     $p6 :=  input object ien. 
"RTN","IBDFRPC",66,0)
 ;                     $p7 :=  Vital Name (vitals only)
"RTN","IBDFRPC",67,0)
 ;                     $p8 :=  manual data entry supported
"RTN","IBDFRPC",68,0)
 ;                     $p9 :=  Block ien
"RTN","IBDFRPC",69,0)
 ;                     $p10 := block row
"RTN","IBDFRPC",70,0)
 ;                     $p11 := block column
"RTN","IBDFRPC",71,0)
 ;
"RTN","IBDFRPC",72,0)
 N C,BLK,SEL,X,Y,ROW,COL,RESULT1,VITAL,CNT,ARRY
"RTN","IBDFRPC",73,0)
 I $E($G(RESULT),1)="^" S ARRY=RESULT
"RTN","IBDFRPC",74,0)
 E  S ARRY="RESULT"
"RTN","IBDFRPC",75,0)
 ;
"RTN","IBDFRPC",76,0)
 I +FRM'=FRM,FRM'="" S FRM=+$O(^IBE(357,"B",FRM,0))
"RTN","IBDFRPC",77,0)
 I 'FRM S FRM=$$DEFAULT S:FRM @ARRY@(0)="Using default form" G:'FRM FRMLSTQ
"RTN","IBDFRPC",78,0)
 I $G(FTYP)="" S FTYP=1
"RTN","IBDFRPC",79,0)
 I $G(KILL)="" S KILL=1 K:KILL @ARRY
"RTN","IBDFRPC",80,0)
 I $G(@ARRY@(0))="" S @ARRY@(0)="Form Not Found"
"RTN","IBDFRPC",81,0)
 I $P($G(^IBE(357,FRM,0)),"^",12)'=1 S @ARRY@(0)="Form not scannable" G FRMLSTQ
"RTN","IBDFRPC",82,0)
 ;
"RTN","IBDFRPC",83,0)
 ; -- first find all the blocks
"RTN","IBDFRPC",84,0)
 S X=0 F  S X=$O(^IBE(357.1,"C",FRM,X)) Q:'X  S BLK=X D
"RTN","IBDFRPC",85,0)
 .; -- get row and column of block
"RTN","IBDFRPC",86,0)
 .S ROW=$P($G(^IBE(357.1,+BLK,0)),"^",4),COL=$P(^(0),"^",5)
"RTN","IBDFRPC",87,0)
 .Q:ROW=""!(COL="")
"RTN","IBDFRPC",88,0)
 .;
"RTN","IBDFRPC",89,0)
 .; -- now find all the selection lists with input interfaces
"RTN","IBDFRPC",90,0)
 .S Y=0 F  S Y=$O(^IBE(357.2,"C",BLK,Y)) Q:'Y  D
"RTN","IBDFRPC",91,0)
 ..S SEL=+$P($G(^IBE(357.2,+Y,0)),"^",11)
"RTN","IBDFRPC",92,0)
 ..;I $P($G(^IBE(357.6,+SEL,0)),"^",13)'=""!($G(ALLOBJ)) D  ; has input interface
"RTN","IBDFRPC",93,0)
 ..S SEL1=$P($G(^IBE(357.6,+SEL,0)),"^",13)
"RTN","IBDFRPC",94,0)
 ..I '$G(ALLOBJ) S SEL=SEL1
"RTN","IBDFRPC",95,0)
 ..I $G(ALLOBJ),SEL1'="" S SEL=SEL1
"RTN","IBDFRPC",96,0)
 ..Q:$G(^IBE(357.6,+SEL,0))=""
"RTN","IBDFRPC",97,0)
 ..D ADDIN(.RESULT1,FRM,FTYP,SEL,3,+Y,BLK,ROW,COL)
"RTN","IBDFRPC",98,0)
 ..Q
"RTN","IBDFRPC",99,0)
 .;
"RTN","IBDFRPC",100,0)
 .; -- find multiple choice fields
"RTN","IBDFRPC",101,0)
 .S Y=0 F  S Y=$O(^IBE(357.93,"C",BLK,Y)) Q:'Y  D
"RTN","IBDFRPC",102,0)
 ..S SEL=+$P($G(^IBE(357.93,+Y,0)),"^",6)
"RTN","IBDFRPC",103,0)
 ..I $P($G(^IBE(357.6,+SEL,0)),"^",13)'="" D
"RTN","IBDFRPC",104,0)
 ...S SEL=$P($G(^IBE(357.6,+SEL,0)),"^",13)
"RTN","IBDFRPC",105,0)
 ...Q:$G(^IBE(357.6,+SEL,0))=""
"RTN","IBDFRPC",106,0)
 ...D ADDIN(.RESULT1,FRM,FTYP,SEL,4,Y,BLK,ROW,COL)
"RTN","IBDFRPC",107,0)
 ..I $P($G(^IBE(357.6,+SEL,0)),"^",6)=1 D ADDIN(.RESULT1,FRM,FTYP,SEL,4,Y,BLK,ROW,COL)
"RTN","IBDFRPC",108,0)
 ..Q
"RTN","IBDFRPC",109,0)
 .;
"RTN","IBDFRPC",110,0)
 .; -- find Hand Print fields
"RTN","IBDFRPC",111,0)
 .S Y=0 F  S Y=$O(^IBE(359.94,"C",BLK,Y)) Q:'Y  D
"RTN","IBDFRPC",112,0)
 ..S SEL=+$P($G(^IBE(359.94,+Y,0)),"^",6)
"RTN","IBDFRPC",113,0)
 ..S VITAL=""
"RTN","IBDFRPC",114,0)
 ..I $P($G(^IBE(357.6,+SEL,0)),"^")["VITAL" S VITAL=$P($G(^IBE(359.1,+$P($G(^IBE(359.94,+Y,0)),"^",10),0)),"^")
"RTN","IBDFRPC",115,0)
 ..I $P($G(^IBE(357.6,+SEL,0)),"^",13)'="" D
"RTN","IBDFRPC",116,0)
 ...S SEL=$P($G(^IBE(357.6,+SEL,0)),"^",13)
"RTN","IBDFRPC",117,0)
 ...Q:$G(^IBE(357.6,+SEL,0))=""
"RTN","IBDFRPC",118,0)
 ...D ADDIN(.RESULT1,FRM,FTYP,SEL,5,Y,BLK,ROW,COL)
"RTN","IBDFRPC",119,0)
 ..I $P($G(^IBE(357.6,+SEL,0)),"^",6)=1 D ADDIN(.RESULT1,FRM,FTYP,SEL,5,Y,BLK,ROW,COL,VITAL)
"RTN","IBDFRPC",120,0)
 ..Q
"RTN","IBDFRPC",121,0)
 .;
"RTN","IBDFRPC",122,0)
 .I $G(ALLOBJ) D
"RTN","IBDFRPC",123,0)
 ..; find Data fields
"RTN","IBDFRPC",124,0)
 ..S Y=0 F  S Y=$O(^IBE(357.5,"C",BLK,Y)) Q:'Y  D ADDIN(.RESULT1,FRM,FTYP,+$P($G(^IBE(357.5,+Y,0)),"^",3),6,Y,BLK,ROW,COL)
"RTN","IBDFRPC",125,0)
 ..
"RTN","IBDFRPC",126,0)
 ..; find form lines
"RTN","IBDFRPC",127,0)
 ..S Y=0 F  S Y=$O(^IBE(357.7,"C",BLK,Y)) Q:'Y  D ADDIN(.RESULT1,FRM,FTYP,"FORM LINE",7,Y,BLK,ROW,COL)
"RTN","IBDFRPC",128,0)
 ..;
"RTN","IBDFRPC",129,0)
 ..; find text areas
"RTN","IBDFRPC",130,0)
 ..S Y=0 F  S Y=$O(^IBE(357.8,"C",BLK,Y)) Q:'Y  D ADDIN(.RESULT1,FRM,FTYP,"TEXT AREA",8,Y,BLK,ROW,COL)
"RTN","IBDFRPC",131,0)
 .Q
"RTN","IBDFRPC",132,0)
 ;
"RTN","IBDFRPC",133,0)
 ; -- now set results into single array
"RTN","IBDFRPC",134,0)
 S ROW="",CNT=+$G(@ARRY@(0))
"RTN","IBDFRPC",135,0)
 F  S ROW=$O(RESULT1(ROW)) Q:ROW=""  S COL="" F  S COL=$O(RESULT1(ROW,COL)) Q:COL=""  D
"RTN","IBDFRPC",136,0)
 .S C=0 F  S C=$O(RESULT1(ROW,COL,C)) Q:C=""  D
"RTN","IBDFRPC",137,0)
 ..S CNT=CNT+1
"RTN","IBDFRPC",138,0)
 ..S @ARRY@(CNT)=RESULT1(ROW,COL,C)
"RTN","IBDFRPC",139,0)
 S @ARRY@(0)=CNT
"RTN","IBDFRPC",140,0)
 K RESULT1
"RTN","IBDFRPC",141,0)
 ;
"RTN","IBDFRPC",142,0)
FRMLSTQ Q
"RTN","IBDFRPC",143,0)
 ;
"RTN","IBDFRPC",144,0)
ADDIN(RESULT1,FRM,FTYP,SEL,ITYP,ENTRY,BLK,ROW,COL,VITAL) ; --add to array
"RTN","IBDFRPC",145,0)
 N ITYPE1
"RTN","IBDFRPC",146,0)
 S ITYPE1=$S(ITYP=3:"LIST",ITYP=4:"MC",ITYP=5:"HP",ITYP=6:"DF",ITYP=7:"FL",ITYP=8:"TA",1:"OTHER")
"RTN","IBDFRPC",147,0)
 S RESULT1(0)=$G(RESULT1(0))+1
"RTN","IBDFRPC",148,0)
 S RESULT1(+ROW,+COL,RESULT1(0))=$S(+SEL:$P($G(^IBE(357.6,+SEL,0)),"^"),1:SEL)_"^"_SEL_"^"_$P($G(^IBE(357,+FRM,0)),"^")_"^"_$P($T(TYP+FTYP),";;",2)_"^"_ITYPE1_"^"_$G(ENTRY)_"^"_$G(VITAL)_"^"_$$MNL
"RTN","IBDFRPC",149,0)
 S RESULT1(+ROW,+COL,RESULT1(0))=RESULT1(+ROW,+COL,RESULT1(0))_"^"_$G(BLK)_"^"_$G(ROW)_"^"_$G(COL)
"RTN","IBDFRPC",150,0)
 Q
"RTN","IBDFRPC",151,0)
 ;
"RTN","IBDFRPC",152,0)
MNL() ; -- is manual data entry supported
"RTN","IBDFRPC",153,0)
 Q $S($G(^IBE(357.6,+SEL,18))'="":1,1:0)
"RTN","IBDFRPC",154,0)
 ;
"RTN","IBDFRPC",155,0)
DEFAULT() ; -- find default form from parameters
"RTN","IBDFRPC",156,0)
 N FRM
"RTN","IBDFRPC",157,0)
 S FRM=$P($G(^IBD(357.09,1,0)),"^",4)
"RTN","IBDFRPC",158,0)
 I FRM="" S FRM=$O(^IBE(357,"B","PRIMARY CARE SAMPLE V2.1",0))
"RTN","IBDFRPC",159,0)
 Q FRM
"RTN","IBDFRPC",160,0)
 ;
"RTN","IBDFRPC",161,0)
TESTC ; -- test list by clinic
"RTN","IBDFRPC",162,0)
 K TEST
"RTN","IBDFRPC",163,0)
 D CLNLSTI(.TEST,25)
"RTN","IBDFRPC",164,0)
 X "ZW TEST"
"RTN","IBDFRPC",165,0)
 Q
"RTN","IBDFRPC",166,0)
 ;
"RTN","IBDFRPC",167,0)
TESTF ; -- test list by form
"RTN","IBDFRPC",168,0)
 K TEST
"RTN","IBDFRPC",169,0)
 D FRMLSTI(.TEST,91)
"RTN","IBDFRPC",170,0)
 X "ZW TEST"
"RTN","IBDFRPC",171,0)
 Q
"RTN","IBDFRPC",172,0)
 ;
"RTN","IBDFRPC",173,0)
TYP ; types of forms/from piece in 409.95
"RTN","IBDFRPC",174,0)
 ;;
"RTN","IBDFRPC",175,0)
 ;;BASIC FORM
"RTN","IBDFRPC",176,0)
 ;;SUPPLIMENTAL FORM, EST. PATIENTS
"RTN","IBDFRPC",177,0)
 ;;SUPPLEMENTAL FORM, FIRST VISIT
"RTN","IBDFRPC",178,0)
 ;;FORM W/O PATIENT DATA
"RTN","IBDFRPC",179,0)
 ;;SUPPLEMENTAL FORM
"RTN","IBDFRPC",180,0)
 ;;
"RTN","IBDFRPC",181,0)
 ;;SUPPLEMENTAL FORM
"RTN","IBDFRPC",182,0)
 ;;SUPPLEMENTAL FORM
"RTN","IBDFRPC",183,0)
 ;;
"RTN","IBDFRPC",184,0)
 ;;DEFAULT FORM
"RTN","IBDFRPC",185,0)
 ;;
"RTN","IBDFRPC1")
0^227^B17999832
"RTN","IBDFRPC1",1,0)
IBDFRPC1 ;ALB/AAS - Return list of selections ; 2-JAN-96
"RTN","IBDFRPC1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFRPC1",3,0)
 ;
"RTN","IBDFRPC1",4,0)
 ; -- used by AICS Data Entry Systems, IBDFDE2, IBDFDE3, IBDFDE4
"RTN","IBDFRPC1",5,0)
 ;
"RTN","IBDFRPC1",6,0)
OBJLST(RESULT,IBDF) ; -- Procedure
"RTN","IBDFRPC1",7,0)
 ; -- Broker call to return any specified selection list, handprint field or multiple choice field
"RTN","IBDFRPC1",8,0)
 ;    rpc  := IBD GET ONE INPUT OBJECT
"RTN","IBDFRPC1",9,0)
 ;
"RTN","IBDFRPC1",10,0)
 ; -- input   RESULT         := see output
"RTN","IBDFRPC1",11,0)
 ;            IBDF("PI")     := package interface name or pointer
"RTN","IBDFRPC1",12,0)
 ;            IBDF("TYPE")   := type of input object
"RTN","IBDFRPC1",13,0)
 ;            IBDF("IEN")    := internal entry number of object
"RTN","IBDFRPC1",14,0)
 ;            IBDF("DFN")    := pointer to patient (2) (required for patient active problems only)
"RTN","IBDFRPC1",15,0)
 ;            IBDF("CLINIC") := pointer to hospital location (44) (required for provider list only)
"RTN","IBDFRPC1",16,0)
 ;            IBDF("KILL")   := 1 to kill results array prior to setting (Default)  (optional)
"RTN","IBDFRPC1",17,0)
 ;
"RTN","IBDFRPC1",18,0)
 ; -- Output  RESULT (called by reference)
"RTN","IBDFRPC1",19,0)
 ;    new for version 3.0 RESULT may be a closed global, i.e. ^tmp($j)
"RTN","IBDFRPC1",20,0)
 ;      and the data will be returned in ^tmp($j,n)
"RTN","IBDFRPC1",21,0)
 ;    For Lists:
"RTN","IBDFRPC1",22,0)
 ;            RESULT(0)      := number of entries^type of input object (LIST)^qualifier;;selection rule[::qualifier;;selection rule)^no scannable bubbles(1 if not scannable)
"RTN","IBDFRPC1",23,0)
 ;            RESULTS(N) $P1 := Display text
"RTN","IBDFRPC1",24,0)
 ;                       $P2 := Display code
"RTN","IBDFRPC1",25,0)
 ;                       $P3 := input value (value to return)
"RTN","IBDFRPC1",26,0)
 ;                       $P4 := input transform 
"RTN","IBDFRPC1",27,0)
 ;                       $P5 := optional caption
"RTN","IBDFRPC1",28,0)
 ;                       $P6 := optional Term pointer
"RTN","IBDFRPC1",29,0)
 ;                       $P7 := Selectable
"RTN","IBDFRPC1",30,0)
 ;
"RTN","IBDFRPC1",31,0)
 ;    For Hand Print Fields
"RTN","IBDFRPC1",32,0)
 ;            RESULT(0) := 1^type of object (HP)^label^vitals type
"RTN","IBDFRPC1",33,0)
 ;            RESULT(1) := Text from form^print format in 359.1^MAX lenght^units^vitals Type^PCE DIM Units
"RTN","IBDFRPC1",34,0)
 ;
"RTN","IBDFRPC1",35,0)
 ;   For Multiple Choice fields
"RTN","IBDFRPC1",36,0)
 ;            RESULT(0) := count of choices^type (MC)^display text^selection rule
"RTN","IBDFRPC1",37,0)
 ;            RESULT(n) := display text^label^value to return^qualifier^^^selectable (1)
"RTN","IBDFRPC1",38,0)
 ;
"RTN","IBDFRPC1",39,0)
 N IBQUIT,LIST,CLINIC,CL1,PI,PKG,PKG1,DYN,ARRY,VALUE
"RTN","IBDFRPC1",40,0)
 S (IBQUIT,LIST)=0
"RTN","IBDFRPC1",41,0)
 ;
"RTN","IBDFRPC1",42,0)
 I $E($G(RESULT),1)="^" S ARRY=RESULT
"RTN","IBDFRPC1",43,0)
 E  S ARRY="RESULT"
"RTN","IBDFRPC1",44,0)
 I $G(IBDF("KILL"))="" S IBDF("KILL")=1
"RTN","IBDFRPC1",45,0)
 K:IBDF("KILL") @ARRY
"RTN","IBDFRPC1",46,0)
 ;
"RTN","IBDFRPC1",47,0)
 S @ARRY@(0)="No package Interface found, 1"
"RTN","IBDFRPC1",48,0)
 ; -- set pkg = ien of pkg interface from either b or e x-ref
"RTN","IBDFRPC1",49,0)
 S PKG=$G(IBDF("PI"))
"RTN","IBDFRPC1",50,0)
 I +PKG'=PKG,PKG'="" S PKG1=+$O(^IBE(357.6,"B",$E(PKG,1,30),0)) I 'PKG1 S PKG1=+$O(^IBE(357.6,"E",$E(PKG,1,40),0))
"RTN","IBDFRPC1",51,0)
 I $G(PKG1),'PKG S IBDF("PI")=PKG1
"RTN","IBDFRPC1",52,0)
 G:'$G(IBDF("PI")) OBJLSTQ
"RTN","IBDFRPC1",53,0)
 G:$G(^IBE(357.6,+IBDF("PI"),0))="" OBJLSTQ
"RTN","IBDFRPC1",54,0)
 ;
"RTN","IBDFRPC1",55,0)
 I $G(IBDF("TYPE"))="" D
"RTN","IBDFRPC1",56,0)
 .S ITYP=$P($G(^IBE(357.6,+IBDF("PI"),0)),"^")
"RTN","IBDFRPC1",57,0)
 .S IBDF("TYPE")=$S(ITYP=3:"LIST",ITYP=4:"MC",ITYP=5:"HP",1:"")
"RTN","IBDFRPC1",58,0)
 I $G(IBDF("TYPE"))="" S @ARRY@(0)="Object Type not determined" G OBJLSTQ
"RTN","IBDFRPC1",59,0)
 I "^LIST^MC^HP^"'[("^"_IBDF("TYPE")_"^") S @ARRY@(0)="Object type Unknown" G OBJLSTQ
"RTN","IBDFRPC1",60,0)
 ;
"RTN","IBDFRPC1",61,0)
 ;S FRM=$G(IBDF("FRM"))
"RTN","IBDFRPC1",62,0)
 ;I +FRM'=FRM,FRM'="" S FRM=+$O(^IBE(357,"B",FRM,0))
"RTN","IBDFRPC1",63,0)
 ;I 'FRM S FRM=$$DEFAULT^IBDFRPC S:FRM @ARRY@(0)="Using default form",IBDF("FRM")=FRM G:'FRM OBJLSTQ
"RTN","IBDFRPC1",64,0)
 ;
"RTN","IBDFRPC1",65,0)
 ; -- if type is selection list
"RTN","IBDFRPC1",66,0)
 I IBDF("TYPE")="LIST" D  G OBJLSTQ
"RTN","IBDFRPC1",67,0)
 .S DYN=$P(^IBE(357.6,IBDF("PI"),0),"^",14)
"RTN","IBDFRPC1",68,0)
 .I 'DYN D SEL^IBDFRPC2(.RESULT,.IBDF)
"RTN","IBDFRPC1",69,0)
 .I DYN D DYN^IBDFRPC2(.RESULT,.IBDF)
"RTN","IBDFRPC1",70,0)
 ;
"RTN","IBDFRPC1",71,0)
 ; -- if type is multiple choice
"RTN","IBDFRPC1",72,0)
 I IBDF("TYPE")="MC" D MC G OBJLSTQ
"RTN","IBDFRPC1",73,0)
 ;
"RTN","IBDFRPC1",74,0)
 ; -- If type is Hand Print
"RTN","IBDFRPC1",75,0)
 I IBDF("TYPE")="HP" D HP G OBJLSTQ
"RTN","IBDFRPC1",76,0)
 ;
"RTN","IBDFRPC1",77,0)
 S @ARRY@(0)="Processing did not occur"
"RTN","IBDFRPC1",78,0)
 ;
"RTN","IBDFRPC1",79,0)
OBJLSTQ Q
"RTN","IBDFRPC1",80,0)
 ;
"RTN","IBDFRPC1",81,0)
MC ; -- returns list from multiple choice fields
"RTN","IBDFRPC1",82,0)
 N X,DTEXT,SRULE,CHOICE,CH,CTEXT,CHLBL,CHID,CHQLF,CNT
"RTN","IBDFRPC1",83,0)
 S @ARRY@(0)="Multiple Choice Field not found"
"RTN","IBDFRPC1",84,0)
 G:'$G(IBDF("IEN")) MCQ
"RTN","IBDFRPC1",85,0)
 S X=$G(^IBE(357.93,IBDF("IEN"),0)) G:X="" MCQ
"RTN","IBDFRPC1",86,0)
 ;
"RTN","IBDFRPC1",87,0)
 S DTEXT=$P(X,"^",2),SRULE=$P(X,"^",9)
"RTN","IBDFRPC1",88,0)
 ;
"RTN","IBDFRPC1",89,0)
 S (CHOICE,CNT)=0
"RTN","IBDFRPC1",90,0)
 F  S CHOICE=$O(^IBE(357.93,IBDF("IEN"),1,CHOICE)) Q:'CHOICE  D
"RTN","IBDFRPC1",91,0)
 .S CH=$G(^IBE(357.93,IBDF("IEN"),1,CHOICE,0)) Q:CH=""
"RTN","IBDFRPC1",92,0)
 .S CTEXT=$P(CH,"^"),CHLBL=$P(CH,"^",5),CHID=$P(CH,"^",8)
"RTN","IBDFRPC1",93,0)
 .S CHQLF=$P(CH,"^",9),VALUE=$P($G(^IBD(357.98,+$G(CHQLF),0)),"^")
"RTN","IBDFRPC1",94,0)
 .S CNT=CNT+1
"RTN","IBDFRPC1",95,0)
 .S @ARRY@(CNT)=CTEXT_"^"_CHLBL_"^"_VALUE_"^"_CHQLF_"^^^1"
"RTN","IBDFRPC1",96,0)
 .Q
"RTN","IBDFRPC1",97,0)
 S @ARRY@(0)=CNT_"^MC^"_DTEXT_"^"_SRULE
"RTN","IBDFRPC1",98,0)
MCQ Q
"RTN","IBDFRPC1",99,0)
 ;
"RTN","IBDFRPC1",100,0)
HP ; -- returns information on hand print field
"RTN","IBDFRPC1",101,0)
 N X,HNODE,HTEXT,HTYPE,HLEN,HPIC,HMEAS,VTYPE,VUNIT
"RTN","IBDFRPC1",102,0)
 S @ARRY@(0)="Hand Print field not found"
"RTN","IBDFRPC1",103,0)
 G:'$G(IBDF("IEN")) HPQ
"RTN","IBDFRPC1",104,0)
 S HNODE=$G(^IBE(359.94,IBDF("IEN"),0))
"RTN","IBDFRPC1",105,0)
 G:$G(HNODE)="" HPQ
"RTN","IBDFRPC1",106,0)
 S HTEXT=$P(HNODE,"^",2)
"RTN","IBDFRPC1",107,0)
 S HTYPE=$G(^IBE(359.1,+$P(HNODE,"^",10),0))
"RTN","IBDFRPC1",108,0)
 S HLEN=$P(HTYPE,"^",2),HPIC=$P(HTYPE,"^",5),HMEAS=$P(HTYPE,"^",11),VTYPE=$P(HTYPE,"^",12),VUNIT=$P(HTYPE,"^",13)
"RTN","IBDFRPC1",109,0)
 S @ARRY@(1)=HTEXT_"^"_HPIC_"^"_HLEN_"^"_HMEAS_"^"_VTYPE_"^"_VUNIT
"RTN","IBDFRPC1",110,0)
 S @ARRY@(0)="1^HP^"_HTEXT_"^0"
"RTN","IBDFRPC1",111,0)
 ;
"RTN","IBDFRPC1",112,0)
HPQ Q
"RTN","IBDFRPC1",113,0)
 ;
"RTN","IBDFRPC1",114,0)
3 ; -- return lists of providers/cpts/diagnosis from form
"RTN","IBDFRPC1",115,0)
 ;    format as in 2
"RTN","IBDFRPC1",116,0)
 Q
"RTN","IBDFRPC1",117,0)
 ;
"RTN","IBDFRPC1",118,0)
4 ; -- provide list of other input items/and parameters
"RTN","IBDFRPC1",119,0)
 Q
"RTN","IBDFRPC1",120,0)
 ;
"RTN","IBDFRPC1",121,0)
TESTD ; -- test dynamic list
"RTN","IBDFRPC1",122,0)
 S IBDF("PI")=61
"RTN","IBDFRPC1",123,0)
 S IBDF("IEN")=1729
"RTN","IBDFRPC1",124,0)
 S IBDF("TYPE")="LIST"
"RTN","IBDFRPC1",125,0)
 S IBDF("CLINIC")=300
"RTN","IBDFRPC1",126,0)
 S IBDF("DFN")=1
"RTN","IBDFRPC1",127,0)
 D OBJLST(.TEST,.IBDF)
"RTN","IBDFRPC1",128,0)
 X "ZW TEST"
"RTN","IBDFRPC1",129,0)
 Q
"RTN","IBDFRPC1",130,0)
 ;
"RTN","IBDFRPC1",131,0)
TESTL ; -- test list
"RTN","IBDFRPC1",132,0)
 K TEST
"RTN","IBDFRPC1",133,0)
 S IBDF("PI")=69
"RTN","IBDFRPC1",134,0)
 S IBDF("IEN")=1491
"RTN","IBDFRPC1",135,0)
 S IBDF("TYPE")="LIST"
"RTN","IBDFRPC1",136,0)
 D OBJLST("^TMP($J,""TESTL"")",.IBDF)
"RTN","IBDFRPC1",137,0)
 X "ZW TEST"
"RTN","IBDFRPC1",138,0)
 Q
"RTN","IBDFRPC1",139,0)
 ;
"RTN","IBDFRPC1",140,0)
TESTM ; -- test Multiple choice
"RTN","IBDFRPC1",141,0)
 K TEST
"RTN","IBDFRPC1",142,0)
 S IBDF("PI")=7
"RTN","IBDFRPC1",143,0)
 S IBDF("TYPE")="MC"
"RTN","IBDFRPC1",144,0)
 S IBDF("IEN")=161
"RTN","IBDFRPC1",145,0)
 D OBJLST("^TMP($J,""TESTM"")",.IBDF)
"RTN","IBDFRPC1",146,0)
 X "ZW TEST"
"RTN","IBDFRPC1",147,0)
 Q
"RTN","IBDFRPC1",148,0)
TESTH ; -- test Hand Print
"RTN","IBDFRPC1",149,0)
 K TEST
"RTN","IBDFRPC1",150,0)
 S IBDF("PI")=95
"RTN","IBDFRPC1",151,0)
 S IBDF("TYPE")="HP"
"RTN","IBDFRPC1",152,0)
 S IBDF("IEN")=352
"RTN","IBDFRPC1",153,0)
 D OBJLST(.TEST,.IBDF)
"RTN","IBDFRPC1",154,0)
 X "ZW TEST"
"RTN","IBDFRPC1",155,0)
 Q
"RTN","IBDFRPC2")
0^228^B49049772
"RTN","IBDFRPC2",1,0)
IBDFRPC2 ;ALB/AAS - Return list of selections, broker call ;29-JAN-96
"RTN","IBDFRPC2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFRPC2",3,0)
 ;
"RTN","IBDFRPC2",4,0)
SEL(RESULT,IBDF) ; -- Procedure
"RTN","IBDFRPC2",5,0)
 ; -- called by ibdfrpc1, returns list for one selection list
"RTN","IBDFRPC2",6,0)
 ;    see ibdfrpc1 for complete input/output lists
"RTN","IBDFRPC2",7,0)
 ; -- Input  IBDF("IEN")    := pointer to selection list (357.2)
"RTN","IBDFRPC2",8,0)
 ;           IBDF("PI")     := pointer to package interface (357.6) (optional)
"RTN","IBDFRPC2",9,0)
 ;           IBDF("DFN")    := pointer to patient (2) (optional)
"RTN","IBDFRPC2",10,0)
 ;           IBDF("CLINIC") := pointer to clinic (44) (optional)
"RTN","IBDFRPC2",11,0)
 ;
"RTN","IBDFRPC2",12,0)
 N OTEXT,TEXT,SC,TERM,COUNT,DCODE,SECOND,THIRD
"RTN","IBDFRPC2",13,0)
 I $E($G(RESULT),1)="^" S ARRY=RESULT
"RTN","IBDFRPC2",14,0)
 E  S ARRY="RESULT"
"RTN","IBDFRPC2",15,0)
 S COUNT=+$G(@ARRY@(0))
"RTN","IBDFRPC2",16,0)
 ;
"RTN","IBDFRPC2",17,0)
 S @ARRY@(0)="List not found"
"RTN","IBDFRPC2",18,0)
 G:'$G(IBDF("IEN")) SELQ
"RTN","IBDFRPC2",19,0)
 G:$G(^IBE(357.2,IBDF("IEN"),0))="" SELQ
"RTN","IBDFRPC2",20,0)
 K ^TMP("IBD-DUP",$J)
"RTN","IBDFRPC2",21,0)
 ;
"RTN","IBDFRPC2",22,0)
 ; -- copy list
"RTN","IBDFRPC2",23,0)
 I '$G(IBDF("RULE-ONLY")) D COPYLIST(.RESULT,IBDF("IEN"),.COUNT)
"RTN","IBDFRPC2",24,0)
 I COUNT D URH
"RTN","IBDFRPC2",25,0)
 ;
"RTN","IBDFRPC2",26,0)
 S @ARRY@(0)=COUNT_"^LIST^"
"RTN","IBDFRPC2",27,0)
 D GETQLF
"RTN","IBDFRPC2",28,0)
SELQ Q
"RTN","IBDFRPC2",29,0)
 ;
"RTN","IBDFRPC2",30,0)
GETQLF ; -- add selection rule and qualifiers from marking area
"RTN","IBDFRPC2",31,0)
 ;    subcolumns to results(0) node, but only for bubbles
"RTN","IBDFRPC2",32,0)
 N SC,NODE,BUBB,BUBBCNT
"RTN","IBDFRPC2",33,0)
 S SC=0,BUBBCNT=0,BUBB=$O(^IBE(357.91,"B","BUBBLE (use for scanning)",0)) Q:'BUBB
"RTN","IBDFRPC2",34,0)
 F  S SC=$O(^IBE(357.2,IBDF("IEN"),2,SC)) Q:'SC  D
"RTN","IBDFRPC2",35,0)
 .S NODE=$G(^IBE(357.2,IBDF("IEN"),2,SC,0))
"RTN","IBDFRPC2",36,0)
 .I $P(NODE,"^",4)=2,$P(NODE,"^",6)=BUBB S BUBBCNT=BUBBCNT+1,@ARRY@(0)=@ARRY@(0)_$P($G(^IBD(357.98,+$P(NODE,"^",9),0)),"^")_";;"_+$P(NODE,"^",10)_"::"
"RTN","IBDFRPC2",37,0)
 ;
"RTN","IBDFRPC2",38,0)
 ; -- if no bubbles then kill off array, leave zero node for reports
"RTN","IBDFRPC2",39,0)
 I BUBBCNT<1 S SC=@ARRY@(0) K @ARRY S @ARRY@(0)="0^"_$P(SC,"^",2,3) S $P(@ARRY@(0),"^",4)=1
"RTN","IBDFRPC2",40,0)
 Q
"RTN","IBDFRPC2",41,0)
 ;
"RTN","IBDFRPC2",42,0)
COPYLIST(RESULT,LIST,COUNT) ;copies the entries from LIST to @ARY, starting subscript at COUNT+1
"RTN","IBDFRPC2",43,0)
 ;
"RTN","IBDFRPC2",44,0)
 N SLCTN,SUBCOL,TEXT,IEN,NODE,TSUBCOL,NOTREAL,GROUP,ORDER,HDR,CSUBCOL,DCODE,QUANTITY,SECOND,THIRD
"RTN","IBDFRPC2",45,0)
 ;
"RTN","IBDFRPC2",46,0)
 I $E($G(RESULT),1)="^" S ARRY=RESULT
"RTN","IBDFRPC2",47,0)
 E  S ARRY="RESULT"
"RTN","IBDFRPC2",48,0)
 ;
"RTN","IBDFRPC2",49,0)
 S SUBCOL=$$SUBCOL(LIST),TSUBCOL=+SUBCOL,CSUBCOL=+$P(SUBCOL,"^",2)
"RTN","IBDFRPC2",50,0)
 ;
"RTN","IBDFRPC2",51,0)
 S GROUP=0 F  S GROUP=$O(^IBE(357.3,"APO",LIST,GROUP)) Q:'GROUP  D
"RTN","IBDFRPC2",52,0)
 .S HDR=$P($G(^IBE(357.4,GROUP,0)),"^") I $P($G(^(0)),"^",4)="I" S HDR="   "
"RTN","IBDFRPC2",53,0)
 .I HDR="BLANK" S HDR="   "
"RTN","IBDFRPC2",54,0)
 .S COUNT=COUNT+1,@ARRY@(COUNT)=HDR_"^^^^^^0"
"RTN","IBDFRPC2",55,0)
 .S ORDER="" F  S ORDER=$O(^IBE(357.3,"APO",LIST,GROUP,ORDER)) Q:ORDER=""  S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"APO",LIST,GROUP,ORDER,SLCTN)) Q:'SLCTN  D
"RTN","IBDFRPC2",56,0)
 ..S (TEXT,DCODE,OTEXT,TERM,NOTREAL,IEN,SECOND,THIRD)=""
"RTN","IBDFRPC2",57,0)
 ..S NODE=$G(^IBE(357.3,SLCTN,0)),IEN=$P(NODE,"^"),NOTREAL=$P(NODE,"^",2),QUANTITY=$P(NODE,"^",9)
"RTN","IBDFRPC2",58,0)
 ..I NOTREAL S TEXT=$P(NODE,"^",6),COUNT=COUNT+1 D BLDA Q
"RTN","IBDFRPC2",59,0)
 ..;
"RTN","IBDFRPC2",60,0)
 ..; -- find text for entry
"RTN","IBDFRPC2",61,0)
 ..S SUBCOL=$O(^IBE(357.3,SLCTN,1,"B",+TSUBCOL,0))
"RTN","IBDFRPC2",62,0)
 ..S NODE=$G(^IBE(357.3,+SLCTN,1,+SUBCOL,0))
"RTN","IBDFRPC2",63,0)
 ..S:$P(NODE,"^")=TSUBCOL TEXT=$P(NODE,"^",2)
"RTN","IBDFRPC2",64,0)
 ..;
"RTN","IBDFRPC2",65,0)
 ..; -- find display code for entry
"RTN","IBDFRPC2",66,0)
 ..S SUBCOL=$O(^IBE(357.3,+SLCTN,1,"B",+CSUBCOL,0))
"RTN","IBDFRPC2",67,0)
 ..S NODE=$G(^IBE(357.3,+SLCTN,1,+SUBCOL,0))
"RTN","IBDFRPC2",68,0)
 ..S:$P(NODE,"^")=CSUBCOL DCODE=$P(NODE,"^",2)
"RTN","IBDFRPC2",69,0)
 ..
"RTN","IBDFRPC2",70,0)
 ..; -- find optional caption and lexicon pointer
"RTN","IBDFRPC2",71,0)
 ..S NODE=$G(^IBE(357.3,SLCTN,2))
"RTN","IBDFRPC2",72,0)
 ..S OTEXT=$P(NODE,"^"),TERM=$P(NODE,"^",2)
"RTN","IBDFRPC2",73,0)
 ..;
"RTN","IBDFRPC2",74,0)
 ..; -- find optional second and third codes
"RTN","IBDFRPC2",75,0)
 ..S SECOND=$P(NODE,"^",3),THIRD=$P(NODE,"^",4)
"RTN","IBDFRPC2",76,0)
 ..;
"RTN","IBDFRPC2",77,0)
 ..; -- only add to array if not duplicate.  Is dup ien or ien+text???
"RTN","IBDFRPC2",78,0)
 ..I $L(TEXT),'$D(^TMP("IBD-DUP",$J,LIST,IEN_"^"_TEXT)) S COUNT=COUNT+1,^TMP("IBD-DUP",$J,LIST,IEN_"^"_TEXT)="" D BLDA Q  ;check ien+text for duplicates
"RTN","IBDFRPC2",79,0)
 ..;I $L(TEXT),'$D(IBDUP(IEN_"^"_TEXT)) S COUNT=COUNT+1,IBDUP(IEN_"^"_TEXT)="" D BLDA Q  ;this line checks ien+text for duplicates
"RTN","IBDFRPC2",80,0)
 ;
"RTN","IBDFRPC2",81,0)
 K ^TMP("IBD-DUP",$J)
"RTN","IBDFRPC2",82,0)
 Q
"RTN","IBDFRPC2",83,0)
 ;
"RTN","IBDFRPC2",84,0)
SUBCOL(LIST) ; -- function
"RTN","IBDFRPC2",85,0)
 ; -- returns the subcolumn containing the text
"RTN","IBDFRPC2",86,0)
 ;    input  LIST := selection list internal entry
"RTN","IBDFRPC2",87,0)
 ; -- Assumes data returned by the package interface, piece 2 is the description
"RTN","IBDFRPC2",88,0)
 ;
"RTN","IBDFRPC2",89,0)
 N SC,TSUBCOL,CSUBCOL
"RTN","IBDFRPC2",90,0)
 S (TSUBCOL,CSUBCOL)=""
"RTN","IBDFRPC2",91,0)
 S SC=0
"RTN","IBDFRPC2",92,0)
 F  S SC=$O(^IBE(357.2,LIST,2,SC)) Q:'SC  D
"RTN","IBDFRPC2",93,0)
 .Q:$P($G(^IBE(357.2,LIST,2,SC,0)),"^",4)=2  ;is a marking area
"RTN","IBDFRPC2",94,0)
 .I $P($G(^IBE(357.2,LIST,2,SC,0)),"^",5)=2 S TSUBCOL=$P(^(0),"^") Q  ;data piece 2 is usually text subcol
"RTN","IBDFRPC2",95,0)
 .I $P($G(^IBE(357.2,LIST,2,SC,0)),"^",5)=1 S CSUBCOL=$P(^(0),"^") Q  ; data piece 1 is always code
"RTN","IBDFRPC2",96,0)
 .I TSUBCOL="",$P($G(^IBE(357.2,LIST,2,SC,0)),"^",5)>2 S TSUBCOL=$P(^(0),"^") Q  ; -- see if other than data piece two is text subcolumn
"RTN","IBDFRPC2",97,0)
 .I CSUBCOL="",$P($G(^IBE(357.2,LIST,2,SC,0)),"^",5)>2 S CSUBCOL=$P(^(0),"^") Q
"RTN","IBDFRPC2",98,0)
 Q TSUBCOL_"^"_CSUBCOL
"RTN","IBDFRPC2",99,0)
 ;
"RTN","IBDFRPC2",100,0)
BLDA ; -- build results array
"RTN","IBDFRPC2",101,0)
 S @ARRY@(COUNT)=TEXT
"RTN","IBDFRPC2",102,0)
 S $P(@ARRY@(COUNT),"^",2)=$G(DCODE)
"RTN","IBDFRPC2",103,0)
 S $P(@ARRY@(COUNT),"^",3)=$S($G(NOTREAL):"",1:$G(IEN))
"RTN","IBDFRPC2",104,0)
 S $P(@ARRY@(COUNT),"^",4)=""
"RTN","IBDFRPC2",105,0)
 S $P(@ARRY@(COUNT),"^",5)=$G(OTEXT)
"RTN","IBDFRPC2",106,0)
 S $P(@ARRY@(COUNT),"^",6)=$G(TERM)
"RTN","IBDFRPC2",107,0)
 S $P(@ARRY@(COUNT),"^",7)=$S($G(NOTREAL):0,1:1)
"RTN","IBDFRPC2",108,0)
 S $P(@ARRY@(COUNT),"^",9)=$G(QUANTITY)
"RTN","IBDFRPC2",109,0)
 S $P(@ARRY@(COUNT),"^",10)=$G(SECOND)
"RTN","IBDFRPC2",110,0)
 S $P(@ARRY@(COUNT),"^",11)=$G(THIRD)
"RTN","IBDFRPC2",111,0)
 Q
"RTN","IBDFRPC2",112,0)
 ;
"RTN","IBDFRPC2",113,0)
URH ; -- UnReferenced Headers removal
"RTN","IBDFRPC2",114,0)
 ;    if a header doesn't have any data under it, then remove the header
"RTN","IBDFRPC2",115,0)
 N X,HDR
"RTN","IBDFRPC2",116,0)
 S X=0 F  S X=$O(@ARRY@(X)) Q:'X  D
"RTN","IBDFRPC2",117,0)
 .I '$D(HDR),$P(@ARRY@(X),"^",1)="" S HDR=X Q  ;find a header
"RTN","IBDFRPC2",118,0)
 .I $P(@ARRY@(X),"^",1) K HDR Q  ; is item under header
"RTN","IBDFRPC2",119,0)
 .I $D(HDR),$P(@ARRY@(X),"^",1)="" K @ARRY@(HDR) S COUNT=COUNT-1,HDR=X ;hdr doesn't have any items, kill hdr node and reset header to next header
"RTN","IBDFRPC2",120,0)
 I $D(HDR) S X=$O(@ARRY@(""),-1) I $P(@ARRY@(X),"^",1)="" K @ARRY@(X) S COUNT=COUNT-1,HDR=X ;last item in list is a header
"RTN","IBDFRPC2",121,0)
 Q
"RTN","IBDFRPC2",122,0)
 ;
"RTN","IBDFRPC2",123,0)
DYN(RESULT,IBDF) ; -- Procedure
"RTN","IBDFRPC2",124,0)
 ; -- called by ibdfrpc1 to return selection list for dynamic selections
"RTN","IBDFRPC2",125,0)
 ;    see ibdfrpc1 for complete input/output lists
"RTN","IBDFRPC2",126,0)
 ; -- Input  IBDF("PI")     := pointer to package interface (357.6)
"RTN","IBDFRPC2",127,0)
 ;           IBDF("IEN")    := pointer to selection list (357.2)
"RTN","IBDFRPC2",128,0)
 ;           IBDF("DFN")    := pointer to patient (2) (optional for provider selections)
"RTN","IBDFRPC2",129,0)
 ;           IBDF("CLINIC") := pointer to clinic (44) (optional for active problem selections)
"RTN","IBDFRPC2",130,0)
 ;
"RTN","IBDFRPC2",131,0)
 N PI,DFN,CNT,COUNT,NAME,RTN,IBARY,IBCLINIC
"RTN","IBDFRPC2",132,0)
 I $E($G(RESULT),1)="^" S ARRY=RESULT
"RTN","IBDFRPC2",133,0)
 E  S ARRY="RESULT"
"RTN","IBDFRPC2",134,0)
 S COUNT=+$G(@ARRY@(0))
"RTN","IBDFRPC2",135,0)
 I '$G(IBDF("DFN")) S @ARRY@(0)="-1^Patient not defined" G DYNQ
"RTN","IBDFRPC2",136,0)
 I $G(^DPT(+IBDF("DFN"),0))="" S @ARRY@(0)="-1^Patient not Found" G DYNQ
"RTN","IBDFRPC2",137,0)
 S DFN=+$G(IBDF("DFN"))
"RTN","IBDFRPC2",138,0)
 I $G(IBDF("RULE-ONLY")) G RULE
"RTN","IBDFRPC2",139,0)
 ;
"RTN","IBDFRPC2",140,0)
 S @ARRY@(0)="List not found"
"RTN","IBDFRPC2",141,0)
 G:'$G(IBDF("IEN")) SELQ
"RTN","IBDFRPC2",142,0)
 G:$G(^IBE(357.2,IBDF("IEN"),0))="" DYNQ
"RTN","IBDFRPC2",143,0)
 ;
"RTN","IBDFRPC2",144,0)
 S @ARRY@(0)="-1^Package Interface Not found"
"RTN","IBDFRPC2",145,0)
 S PI=$G(^IBE(357.6,+$G(IBDF("PI")),0)) I PI="" G DYNQ
"RTN","IBDFRPC2",146,0)
 ;
"RTN","IBDFRPC2",147,0)
 S IBCLINIC=$G(IBDF("CLINIC"))
"RTN","IBDFRPC2",148,0)
 I +IBCLINIC'=IBCLINIC,IBCLINIC'="" S IBCLINIC=$O(^SC("B",IBCLINIC,0))
"RTN","IBDFRPC2",149,0)
 I +IBCLINIC=0 S @ARRY@(0)="Clinic Not Specified"
"RTN","IBDFRPC2",150,0)
 ; 
"RTN","IBDFRPC2",151,0)
 S NAME=$P(PI,"^"),RTN=$P(PI,"^",2,3) I RTN=""!(RTN="^") G DYNQ
"RTN","IBDFRPC2",152,0)
 I NAME["ACTIVE PROBLEM" S NAME="GMP SELECT PATIENT ACTIVE PROBLEMS"
"RTN","IBDFRPC2",153,0)
 S IBARY="^TMP(""IB"",$J,""INTERFACES"","""_NAME_""")"
"RTN","IBDFRPC2",154,0)
 D @RTN
"RTN","IBDFRPC2",155,0)
 ;
"RTN","IBDFRPC2",156,0)
 S @ARRY@(0)=+$G(@IBARY@(0))_"^LIST^"
"RTN","IBDFRPC2",157,0)
RULE I $G(IBDF("RULE-ONLY")) S @ARRY@(0)="1^DYNLIST^"
"RTN","IBDFRPC2",158,0)
 ;G DYNQ:@ARRY@(0)<1
"RTN","IBDFRPC2",159,0)
 D GETQLF
"RTN","IBDFRPC2",160,0)
 G:$G(IBDF("RULE-ONLY")) DYNQ
"RTN","IBDFRPC2",161,0)
 ;
"RTN","IBDFRPC2",162,0)
 S CNT=0 F  S CNT=$O(@IBARY@(CNT)) Q:'CNT  D
"RTN","IBDFRPC2",163,0)
 .Q:$G(@IBARY@(CNT))=""
"RTN","IBDFRPC2",164,0)
 .;
"RTN","IBDFRPC2",165,0)
 .; -- Process provider lists
"RTN","IBDFRPC2",166,0)
 .I NAME["PROVIDER" D  Q
"RTN","IBDFRPC2",167,0)
 ..I IBCLINIC<1 Q
"RTN","IBDFRPC2",168,0)
 ..S @ARRY@(CNT)=$P(@IBARY@(CNT),"^",2)_"^^"_$P(@IBARY@(CNT),"^",1)_"^^^^1" Q
"RTN","IBDFRPC2",169,0)
 .;
"RTN","IBDFRPC2",170,0)
 .; -- process patient active problem lists
"RTN","IBDFRPC2",171,0)
 .I NAME["ACTIVE PROBLEMS" D  Q
"RTN","IBDFRPC2",172,0)
 ..S @ARRY@(CNT)=$P(@IBARY@(CNT),"^",2)_"^"_$P(@IBARY@(CNT),"^",3)_"^"_+@IBARY@(CNT)_"^^^^1"
"RTN","IBDFRPC2",173,0)
 .I '$D(@ARRY@(CNT)) S @ARRY@(CNT)=@IBARY@(CNT)
"RTN","IBDFRPC2",174,0)
 ;
"RTN","IBDFRPC2",175,0)
DYNQ Q
"RTN","IBDFRPC2",176,0)
 ;
"RTN","IBDFRPC2",177,0)
 ; -- here are some sample tests for different lists
"RTN","IBDFRPC2",178,0)
TEST K VAR,IBDF
"RTN","IBDFRPC2",179,0)
 S IBDF("IEN")=14
"RTN","IBDFRPC2",180,0)
 D SEL(.VAR,.IBDF)
"RTN","IBDFRPC2",181,0)
 X "ZW VAR"
"RTN","IBDFRPC2",182,0)
 Q
"RTN","IBDFRPC2",183,0)
 ;
"RTN","IBDFRPC2",184,0)
TEST1 K VAR,IBDF
"RTN","IBDFRPC2",185,0)
 S IBDF("IEN")=1729
"RTN","IBDFRPC2",186,0)
 D SEL(.VAR,.IBDF)
"RTN","IBDFRPC2",187,0)
 X "ZW VAR"
"RTN","IBDFRPC2",188,0)
 Q
"RTN","IBDFRPC2",189,0)
 ;
"RTN","IBDFRPC2",190,0)
TESTD ; -- Test dynamic
"RTN","IBDFRPC2",191,0)
 K VAR,IBDF
"RTN","IBDFRPC2",192,0)
 ;S IBDF("PI")=71,IBDF("IEN")=103 ;provider, 1577 FEX
"RTN","IBDFRPC2",193,0)
 ;S IBDF("PI")=73 ;patient active problems
"RTN","IBDFRPC2",194,0)
 ;S IBDF("CLINIC")=300
"RTN","IBDFRPC2",195,0)
 S IBDF("PI")=7,IBDF("IEN")=14 ;provider, 1577 FEX
"RTN","IBDFRPC2",196,0)
 ;S IBDF("PI")=73 ;patient active problems
"RTN","IBDFRPC2",197,0)
 S IBDF("DFN")=7169761
"RTN","IBDFRPC2",198,0)
 S IBDF("CLINIC")=88
"RTN","IBDFRPC2",199,0)
 D DYN(.VAR,.IBDF)
"RTN","IBDFRPC2",200,0)
 X "ZW VAR"
"RTN","IBDFRPC3")
0^229^B13629639
"RTN","IBDFRPC3",1,0)
IBDFRPC3 ;ALB/AAS - AICS Identify patient form form id ; 12-FEB-96
"RTN","IBDFRPC3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFRPC3",3,0)
 ;
"RTN","IBDFRPC3",4,0)
 ; -- used by AICS Data Entry System (routine IBDFDE)
"RTN","IBDFRPC3",5,0)
 ;    used by AICS Workstation software
"RTN","IBDFRPC3",6,0)
 ;
"RTN","IBDFRPC3",7,0)
IDPAT(RESULT,FORMID) ; -- Procedure
"RTN","IBDFRPC3",8,0)
 ; -- Broker call to identify patient, clinic, form, and appt. from
"RTN","IBDFRPC3",9,0)
 ;    Encounter form ID
"RTN","IBDFRPC3",10,0)
 ;    rpc := IBD EXPAND FORMID
"RTN","IBDFRPC3",11,0)
 ;
"RTN","IBDFRPC3",12,0)
 ; -- input  FORMID = pointer to form tracking (357.96)
"RTN","IBDFRPC3",13,0)
 ;           Result = called by reference
"RTN","IBDFRPC3",14,0)
 ;
"RTN","IBDFRPC3",15,0)
 ; -- output  The format of the returned array is as follows
"RTN","IBDFRPC3",16,0)
 ;        result = $p1 :=  Patient Name^
"RTN","IBDFRPC3",17,0)
 ;                 $p2 :=  Patient IEN
"RTN","IBDFRPC3",18,0)
 ;                 $p3:=  patient primary identifier (pid)
"RTN","IBDFRPC3",19,0)
 ;                 $p4 :=  form name
"RTN","IBDFRPC3",20,0)
 ;                 $p5 :=  form IEN (pointer to 357)
"RTN","IBDFRPC3",21,0)
 ;                 $p6 :=  Clinic Name 
"RTN","IBDFRPC3",22,0)
 ;                 $p7 :=  Clinic ien
"RTN","IBDFRPC3",23,0)
 ;                 $p8 :=  Clinic Physical Location
"RTN","IBDFRPC3",24,0)
 ;                 $p9 :=  Appt. date/time (fm format)
"RTN","IBDFRPC3",25,0)
 ;                 $P10:=  Appt. date/time (external format)
"RTN","IBDFRPC3",26,0)
 ;                 $P11:=  Appt Status internal
"RTN","IBDFRPC3",27,0)
 ;                 $P12:=  Appt Status external
"RTN","IBDFRPC3",28,0)
 ;                 $P13:=  form input status internal
"RTN","IBDFRPC3",29,0)
 ;                 $p14:=  form input status external
"RTN","IBDFRPC3",30,0)
 ;                 $p15:=  form definition ien (357.95)
"RTN","IBDFRPC3",31,0)
 ;                 $p16:=  default provider (for clinic) internal
"RTN","IBDFRPC3",32,0)
 ;                 $p17:=  default provider (for clinic) external
"RTN","IBDFRPC3",33,0)
 ;                 $P18:=  # Scannable pages on form
"RTN","IBDFRPC3",34,0)
 ;                 $p19:=  shortedge/long edge binding
"RTN","IBDFRPC3",35,0)
 ;                 $p20:=  check out date time
"RTN","IBDFRPC3",36,0)
 ;
"RTN","IBDFRPC3",37,0)
 N C,I,J,X,Y,NODE,PATNM,DFN,PID,CLIN,CLINNM,FORMNM,FORM,APPT,APPTNM,STATUS,STATNM,FRMDEF,PROVDEF,APPTSTI,APPTSTE,CLINPH,DUPLX,SCANPG,CO
"RTN","IBDFRPC3",38,0)
 K RESULT
"RTN","IBDFRPC3",39,0)
 S FORMID("SOURCE")=1
"RTN","IBDFRPC3",40,0)
 ;
"RTN","IBDFRPC3",41,0)
 ; -- scanner may send in leading spaces, strip it off
"RTN","IBDFRPC3",42,0)
 I +FORMID'=FORMID,$L(FORMID) S FORMID=+$P(FORMID," ",3)
"RTN","IBDFRPC3",43,0)
 S RESULT="Form ID not a valid value, null or zero^^^"
"RTN","IBDFRPC3",44,0)
 I '$G(FORMID) D LOGERR^IBDF18E2(3579604,.FORMID) G IDPATQ
"RTN","IBDFRPC3",45,0)
 ;
"RTN","IBDFRPC3",46,0)
 S RESULT="Form ID not found^^^"
"RTN","IBDFRPC3",47,0)
 S NODE=$G(^IBD(357.96,+FORMID,0))
"RTN","IBDFRPC3",48,0)
 I NODE="" D LOGERR^IBDF18E2(3579605,.FORMID) G IDPATQ
"RTN","IBDFRPC3",49,0)
 ;
"RTN","IBDFRPC3",50,0)
 S DFN=$P(NODE,"^",2)
"RTN","IBDFRPC3",51,0)
 S PATNM=$P($G(^DPT(DFN,0)),"^"),PID=$P($G(^DPT(DFN,.36)),"^",3)
"RTN","IBDFRPC3",52,0)
 S APPT=+$P(NODE,"^",3)
"RTN","IBDFRPC3",53,0)
 S APPTSTI=$P($G(^DPT(DFN,"S",APPT,0)),"^",2)
"RTN","IBDFRPC3",54,0)
 S APPTNM=$$FMTE^XLFDT(APPT)
"RTN","IBDFRPC3",55,0)
 ;
"RTN","IBDFRPC3",56,0)
 S X=$$STATUS^SDAM1(DFN,APPT,+$G(^DPT(DFN,"S",APPT,0)),$G(^(0)))
"RTN","IBDFRPC3",57,0)
 S APPTSTE=$P(X,";",3),CO=$P(X,";",5)
"RTN","IBDFRPC3",58,0)
 I $G(^DPT(DFN,"S",APPT,0))="",CO="" D
"RTN","IBDFRPC3",59,0)
 .S CO=+$$SDV(DFN,APPT)
"RTN","IBDFRPC3",60,0)
 .I CO S APPTSTE="COMPLETE"
"RTN","IBDFRPC3",61,0)
 .I +$G(CO)<1 S APPTSTE="ACTION REQUIRED"
"RTN","IBDFRPC3",62,0)
 ;
"RTN","IBDFRPC3",63,0)
 S CLIN=+$P(NODE,"^",10)
"RTN","IBDFRPC3",64,0)
 S CLINNM=$P($G(^SC(CLIN,0)),"^"),CLINPH=$P($G(^SC(CLIN,0)),"^",11)
"RTN","IBDFRPC3",65,0)
 S PROVDEF=$$PRDEF(CLIN)
"RTN","IBDFRPC3",66,0)
 S FRMDEF=$P(NODE,"^",4)
"RTN","IBDFRPC3",67,0)
 S FORM=+$P($G(^IBD(357.95,+FRMDEF,0)),"^",21)
"RTN","IBDFRPC3",68,0)
 S FORMNM=$P($G(^IBE(357,FORM,0)),"^")
"RTN","IBDFRPC3",69,0)
 S DUPLX=$P($G(^IBE(357,FORM,0)),"^",2) ; Duplex/simplex
"RTN","IBDFRPC3",70,0)
 S (SCANPG,I)=0 F  S I=$O(^IBD(357.96,+FORMID,9,I)) Q:'I  S SCANPG=SCANPG+1
"RTN","IBDFRPC3",71,0)
 S STATUS=$P(NODE,"^",11)
"RTN","IBDFRPC3",72,0)
 S Y=STATUS,C=$P(^DD(357.96,.11,0),"^",2) D Y^DIQ S STATNM=Y
"RTN","IBDFRPC3",73,0)
 S RESULT=PATNM_"^"_DFN_"^"_PID_"^"_FORMNM_"^"_FORM_"^"_CLINNM_"^"_CLIN_"^"_CLINPH_"^"_APPT_"^"_APPTNM_"^"_APPTSTI_"^"_APPTSTE_"^"_STATUS_"^"_STATNM_"^"_FRMDEF_"^"_PROVDEF_"^"_$P($G(^VA(200,+PROVDEF,0)),"^")_"^"_SCANPG_"^"_DUPLX_"^"_CO
"RTN","IBDFRPC3",74,0)
 ;
"RTN","IBDFRPC3",75,0)
IDPATQ Q
"RTN","IBDFRPC3",76,0)
 ;
"RTN","IBDFRPC3",77,0)
PRDEF(CLIN) ;Provider Default for Clinic
"RTN","IBDFRPC3",78,0)
 ; Input  -- SDCL     Hospital Location file IEN
"RTN","IBDFRPC3",79,0)
 ; IF DEFINED: DFN - ptr to PATIENT File
"RTN","IBDFRPC3",80,0)
 ; Output -- Default
"RTN","IBDFRPC3",81,0)
 N Y,X
"RTN","IBDFRPC3",82,0)
 S Y=$P($G(^SC(+$G(CLIN),"PR",+$O(^SC("ADPR",CLIN,0)),0)),"^")
"RTN","IBDFRPC3",83,0)
 I $G(Y)="",$G(^SC(+$G(CLIN),"PC")),$D(DFN),$L($T(NMPCPR^SCAPMCU2)) S Y=+$$NMPCPR^SCAPMCU2(DFN,DT,1)
"RTN","IBDFRPC3",84,0)
 Q $G(Y)
"RTN","IBDFRPC3",85,0)
 ;
"RTN","IBDFRPC3",86,0)
SDV(DFN,APPT) ; -- try to find checkout date of stand alone encounter
"RTN","IBDFRPC3",87,0)
 N CO,QUIT,SDV,SDV1,SDOE
"RTN","IBDFRPC3",88,0)
 S CO="",SDOE=""
"RTN","IBDFRPC3",89,0)
 S SDV=+$P(APPT,"."),QUIT=0
"RTN","IBDFRPC3",90,0)
 F  S SDV=+$O(^SDV("C",DFN,SDV)) Q:'SDV!(QUIT)  D
"RTN","IBDFRPC3",91,0)
 .S SDV1=0 F  S SDV1=+$O(^SDV(+SDV,"CS",SDV1)) Q:'SDV1!(QUIT)  D
"RTN","IBDFRPC3",92,0)
 ..S SDOE=+$P($G(^SDV(+SDV,"CS",+SDV1,0)),"^",8)
"RTN","IBDFRPC3",93,0)
 ..S X=$G(^SCE(+SDOE,0)) I +X=APPT S CO=$P(X,"^",7),QUIT=1
"RTN","IBDFRPC3",94,0)
 Q CO_"^"_SDOE
"RTN","IBDFRPC4")
0^230^B15307122
"RTN","IBDFRPC4",1,0)
IBDFRPC4 ;ALB/AAS - AICS Pass data to PCE, Broker Call ; 24-FEB-96
"RTN","IBDFRPC4",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFRPC4",3,0)
 ;
"RTN","IBDFRPC4",4,0)
 ; -- used by AICS Data Entry System, routine IBDFDE1
"RTN","IBDFRPC4",5,0)
 ;
"RTN","IBDFRPC4",6,0)
SEND(RESULT,IBDF) ; -- procedure
"RTN","IBDFRPC4",7,0)
 ; -- broker call to set data into pxca array and send to pce
"RTN","IBDFRPC4",8,0)
 ;    rpc  := IBD RECEIVE DATA
"RTN","IBDFRPC4",9,0)
 ;
"RTN","IBDFRPC4",10,0)
 ; -- input:      Result := passed by reference, see output
"RTN","IBDFRPC4",11,0)
 ;            ibdf(text) := contains data about visit, plus checkout defined as follows:
"RTN","IBDFRPC4",12,0)
 ;          ibdf("appt") := appointment data/time
"RTN","IBDFRPC4",13,0)
 ;        ibdf("clinic") := clinic, pointer to file 44
"RTN","IBDFRPC4",14,0)
 ;           ibdf("dfn") := patient, pointer to file 2
"RTN","IBDFRPC4",15,0)
 ;          ibdf("form") := encounter form ID, pointer to file 357.96
"RTN","IBDFRPC4",16,0)
 ;        ibdf("frmdef") := form definition, pointer to 357.95
"RTN","IBDFRPC4",17,0)
 ;       ibdf("foregnd") := pass data in foreground, show results
"RTN","IBDFRPC4",18,0)
 ;       ibdf("backgnd") := pass data in background, don't show results
"RTN","IBDFRPC4",19,0)
 ;
"RTN","IBDFRPC4",20,0)
 ;            ibdf("co") := check out date/time
"RTN","IBDFRPC4",21,0)
 ;            ibdf("sc") := is visit for service connected condition
"RTN","IBDFRPC4",22,0)
 ;            ibdf("ao") := is visit related to Agent orange
"RTN","IBDFRPC4",23,0)
 ;            ibdf("ir") := is visit related to ionizing radiation
"RTN","IBDFRPC4",24,0)
 ;            ibdf("ec") := is visit related to environmental contam.
"RTN","IBDFRPC4",25,0)
 ;
"RTN","IBDFRPC4",26,0)
 ;               ibdf(n) := where n>0 are user selections as follows:
"RTN","IBDFRPC4",27,0)
 ;                   $p1 := package interface, pointer to file 357.6
"RTN","IBDFRPC4",28,0)
 ;                   $p2 := value to send
"RTN","IBDFRPC4",29,0)
 ;                   $p3 := display text
"RTN","IBDFRPC4",30,0)
 ;                   $p4 := header to send
"RTN","IBDFRPC4",31,0)
 ;                   $p5 := clin lexicon pointer
"RTN","IBDFRPC4",32,0)
 ;                   $p6 := qualifier
"RTN","IBDFRPC4",33,0)
 ;                   $p7 := ien of inteface
"RTN","IBDFRPC4",34,0)
 ;                   $p8 := vitals type (.01 field in 359.1)
"RTN","IBDFRPC4",35,0)
 ;                   $p9 := quantity
"RTN","IBDFRPC4",36,0)
 ;                      
"RTN","IBDFRPC4",37,0)
 N I,J,X,Y,D,D0,D1,D2,DA,DIC,DIE,DR,TNODE,FID,FORMID,NODE,VALUE,PI,TEXT,SUBHDR,HEADER,TYPE,QLFR,ITEM,PROVIDER,PXKDONE,STATUS,VSIT,QUANTITY,SDFN
"RTN","IBDFRPC4",38,0)
 S RESULT="-1^No data passed"
"RTN","IBDFRPC4",39,0)
 ;
"RTN","IBDFRPC4",40,0)
 K PXCA
"RTN","IBDFRPC4",41,0)
 S (PXCA,PXCASTAT)=""
"RTN","IBDFRPC4",42,0)
 ;
"RTN","IBDFRPC4",43,0)
 ; -- check form,frmdef and appt/clinic.  Need one or the other
"RTN","IBDFRPC4",44,0)
 S TNODE=$G(^IBD(357.96,+$G(IBDF("FORM")),0))
"RTN","IBDFRPC4",45,0)
 S:'$G(IBDF("DFN")) IBDF("DFN")=$P(TNODE,"^",2)
"RTN","IBDFRPC4",46,0)
 S:'$G(IBDF("APPT")) IBDF("APPT")=$P(TNODE,"^",3)
"RTN","IBDFRPC4",47,0)
 S:'$G(IBDF("FRMDEF")) IBDF("FRMDEF")=$P(TNODE,"^",4)
"RTN","IBDFRPC4",48,0)
 S:'$G(IBDF("CLINIC")) IBDF("CLINIC")=$P(TNODE,"^",10)
"RTN","IBDFRPC4",49,0)
 ;
"RTN","IBDFRPC4",50,0)
 I '$G(IBDF("DFN"))!('$G(IBDF("APPT")))!('$G(IBDF("CLINIC"))) D  G END
"RTN","IBDFRPC4",51,0)
 . I $G(IBDF("FORM")) S STATUS=$$FSCND^IBDF18C(+IBDF("FORM"),12)
"RTN","IBDFRPC4",52,0)
 . S RESULT="-1^Critical information for processing missing"
"RTN","IBDFRPC4",53,0)
 ;
"RTN","IBDFRPC4",54,0)
 ; -- log manual data entry attempt in form tracking
"RTN","IBDFRPC4",55,0)
 S STATUS=$$FSCND^IBDF18C(IBDF("FORM"),5)
"RTN","IBDFRPC4",56,0)
 ;
"RTN","IBDFRPC4",57,0)
 ; -- build the encounter node and source node from form tracking
"RTN","IBDFRPC4",58,0)
 S PXCA("ENCOUNTER")=$G(IBDF("APPT"))_"^"_$G(IBDF("DFN"))_"^"_$G(IBDF("CLINIC"))_"^^^"_$G(IBDF("SC"))_"^"_$G(IBDF("AO"))_"^"_$G(IBDF("IR"))_"^"_$G(IBDF("EC"))_"^^^^^"_$G(IBDF("CO"))
"RTN","IBDFRPC4",59,0)
 S PXCA("SOURCE")="1^"_DUZ_"^"_$G(IBDF("FRMDEF"))_"^^"_$G(IBDF("FORM"))
"RTN","IBDFRPC4",60,0)
 ;
"RTN","IBDFRPC4",61,0)
 ; -- process data in ibdf(n) nodes
"RTN","IBDFRPC4",62,0)
 S FORMID=IBDF("FORM")
"RTN","IBDFRPC4",63,0)
 S FID=0 F  S FID=$O(IBDF(FID)) Q:'FID  S NODE=$G(IBDF(FID)) D
"RTN","IBDFRPC4",64,0)
 .N VALUE,PI,TEXT,SUBHDR,HEADER,TYPE,QLFR,ITEM,DELEX,QUANTITY
"RTN","IBDFRPC4",65,0)
 .I NODE="" D LOGERR^IBDF18E2(3570002,.FORMID,FID) Q
"RTN","IBDFRPC4",66,0)
 .S PI=$P(NODE,"^")
"RTN","IBDFRPC4",67,0)
 .S VALUE=$$INPUT(PI,$P(NODE,"^",2))
"RTN","IBDFRPC4",68,0)
 .S TEXT=$P(NODE,"^",3)
"RTN","IBDFRPC4",69,0)
 .S (SUBHDR,HEADER)=$E($P(NODE,"^",4),1,80)
"RTN","IBDFRPC4",70,0)
 .I $L(SUBHDR),$L(SUBHDR)<2 S (SUBHDR,HEADER)=""
"RTN","IBDFRPC4",71,0)
 .;I $L(SUBHDR),($L(SUBHDR)+$L(TEXT)<80) S TEXT=SUBHDR_" "_TEXT
"RTN","IBDFRPC4",72,0)
 .S QLFR=$P(NODE,"^",6) S:QLFR'="" QLFR=$O(^IBD(357.98,"B",QLFR,0))
"RTN","IBDFRPC4",73,0)
 .S TYPE=+$$TYPE($P(NODE,"^",8))
"RTN","IBDFRPC4",74,0)
 .S ITEM=FID
"RTN","IBDFRPC4",75,0)
 .S DELEX=$P(NODE,"^",5)
"RTN","IBDFRPC4",76,0)
 .S QUANTITY=$P(NODE,"^",9)
"RTN","IBDFRPC4",77,0)
 .D SETTEMP^IBDF18E1
"RTN","IBDFRPC4",78,0)
 .Q
"RTN","IBDFRPC4",79,0)
 ;
"RTN","IBDFRPC4",80,0)
 D SETPXCA^IBDF18E0,PRO^IBDF18E0
"RTN","IBDFRPC4",81,0)
 ;
"RTN","IBDFRPC4",82,0)
 S IBDF("PASSFLAG")=+$P($G(^IBD(357.09,1,0)),"^",7)
"RTN","IBDFRPC4",83,0)
 S IBD("AICS")=1 ;flag for IBDF PCE EVENT protocal
"RTN","IBDFRPC4",84,0)
 ;
"RTN","IBDFRPC4",85,0)
 ;I $G(IBDF("PASSFLAG"))<1 D BACKGND^PXCA(.PXCA,.PXCASTAT)
"RTN","IBDFRPC4",86,0)
 ;I $G(IBDF("PASSFLAG"))=1 D VALIDATE^PXCA(.PXCA) I '$D(PXCA("ERROR")) D BACKGND^PXCA(.PXCA,.PXCASTAT)
"RTN","IBDFRPC4",87,0)
 I $G(IBDF("PASSFLAG"))<2 D QUE^IBDF18E3
"RTN","IBDFRPC4",88,0)
 I $G(IBDF("PASSFLAG"))>1 D FOREGND^PXCA(.PXCA,.PXCASTAT)
"RTN","IBDFRPC4",89,0)
 K IBD("AICS")
"RTN","IBDFRPC4",90,0)
 ;
"RTN","IBDFRPC4",91,0)
 ; -- kill erroneous inpatient warnings
"RTN","IBDFRPC4",92,0)
 I $D(PXCA("WARNING","ENCOUNTER"))>0 D INPT^IBDF18E0($G(IBDF("DFN")),$G(IBDF("APPT")))
"RTN","IBDFRPC4",93,0)
 ;
"RTN","IBDFRPC4",94,0)
 ; -- set form tracking processing status, if okay=6, if error=7
"RTN","IBDFRPC4",95,0)
 I $G(IBDF("FORM")) S STATUS=$$FSCND^IBDF18C(IBDF("FORM"),$S(PXCASTAT=0:7,PXCASTAT=1:6,PXCASTAT=-1:7,PXCASTAT=-2:6,1:12),$S((PXCASTAT=0!(PXCASTAT=-1)):"PCE RETURNED AN ERROR",1:""))
"RTN","IBDFRPC4",96,0)
 ;
"RTN","IBDFRPC4",97,0)
 S RESULT(0)=PXCASTAT
"RTN","IBDFRPC4",98,0)
 I (PXCASTAT=1!(PXCASTAT=-2)),IBDF("PASSFLAG")<3 K PXCA,PXCASTAT
"RTN","IBDFRPC4",99,0)
END Q
"RTN","IBDFRPC4",100,0)
 ;
"RTN","IBDFRPC4",101,0)
INPUT(PI,X) ; -- convert external value to internal value
"RTN","IBDFRPC4",102,0)
 I $G(PI)=""!($G(X)="")
"RTN","IBDFRPC4",103,0)
 I $G(^IBE(357.6,+$G(PI),9))'="" X ^(9)
"RTN","IBDFRPC4",104,0)
VALQ Q $G(X)
"RTN","IBDFRPC4",105,0)
 ;
"RTN","IBDFRPC4",106,0)
TYPE(X) ; -- Change external to internal for hand print fields
"RTN","IBDFRPC4",107,0)
 N Y S Y=""
"RTN","IBDFRPC4",108,0)
 I X'="" S Y=$O(^IBE(359.1,"B",X,0))
"RTN","IBDFRPC4",109,0)
 Q Y
"RTN","IBDFSS")
0^231^B33364586
"RTN","IBDFSS",1,0)
IBDFSS ;ALB/MAF - STATUS SELECT ROUTINE (FORMS TRACKING) ; 11-JUL-1995
"RTN","IBDFSS",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFSS",3,0)
 ;
"RTN","IBDFSS",4,0)
 ;
"RTN","IBDFSS",5,0)
START ;  -- Ask status to be displayed
"RTN","IBDFSS",6,0)
 D FULL^VALM1
"RTN","IBDFSS",7,0)
 K IBSTAT
"RTN","IBDFSS",8,0)
 S DIR("A")="Select ENCOUNTER FORM STATUS: ",DIR("B")="ALL"
"RTN","IBDFSS",9,0)
 S DIR(0)="SA^A:ALL;1:PRINTED;2:SCANNED;3:SCANNED TO PCE;4:SCANNED W/PCE ERROR;5:DATA ENTRY;6:DATA ENTRY TO PCE;7:DATA ENTRY W/PCE ERROR;11:PENDING PAGES;12:ERROR DETECTED, NOT TRANSMITTED"
"RTN","IBDFSS",10,0)
 S DIR("?")="Enter desired status that you would like to have listed on the report"
"RTN","IBDFSS",11,0)
 D ^DIR
"RTN","IBDFSS",12,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","IBDFSS",13,0)
 I Y="A" D  K DIR Q
"RTN","IBDFSS",14,0)
 .F X=0,1,2,3,4,5,6,7,11,12 S IBSTAT(X)=""
"RTN","IBDFSS",15,0)
 D SET
"RTN","IBDFSS",16,0)
 S $P(DIR(0),"^",1)=$P(DIR(0),"^",1)_"O",$P(DIR(0),"^",2)=$E($P(DIR(0),"^",2),7,999) K DIR("B")
"RTN","IBDFSS",17,0)
 S DIR("A")="Select another STATUS: "
"RTN","IBDFSS",18,0)
ASK D ^DIR I $D(DUOUT)!$D(DTOUT) Q
"RTN","IBDFSS",19,0)
 I X]"" D SET G ASK
"RTN","IBDFSS",20,0)
 K DIR Q
"RTN","IBDFSS",21,0)
 ;
"RTN","IBDFSS",22,0)
 ;
"RTN","IBDFSS",23,0)
SET S X=$S(Y=1:1,Y=2:2,Y=3:3,Y=4:4,Y=5:5,Y=6:6,Y=7:7,Y=8:11,Y=9:12,1:0)
"RTN","IBDFSS",24,0)
 S IBSTAT(X)=""
"RTN","IBDFSS",25,0)
 Q
"RTN","IBDFSS",26,0)
 ;
"RTN","IBDFSS",27,0)
 ;
"RTN","IBDFSS",28,0)
EN ; -- main entry point for IBDF FT STATUS SELECT
"RTN","IBDFSS",29,0)
 D EN^VALM("IBDF FT STATUS SELECT")
"RTN","IBDFSS",30,0)
 Q
"RTN","IBDFSS",31,0)
 ;
"RTN","IBDFSS",32,0)
 ;
"RTN","IBDFSS",33,0)
SETARR ;  -- Set up Listman array
"RTN","IBDFSS",34,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFSS",35,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFSS",36,0)
 S X=""
"RTN","IBDFSS",37,0)
 S IBDFVAL=$J(IBDCNT1_")",5)
"RTN","IBDFSS",38,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,1,5)
"RTN","IBDFSS",39,0)
 S IBDFVAL=$P($G(IBDFTMP),"^",2)
"RTN","IBDFSS",40,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,7,8)
"RTN","IBDFSS",41,0)
 S IBDFVAL=$P($G(IBDFTMP),"^",4) I IBDFVAL S IBDFVAL=$$FMTE^XLFDT(IBDFVAL,2)
"RTN","IBDFSS",42,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,17,14)
"RTN","IBDFSS",43,0)
 I $D(VAUTC)!($D(VAUTG)) S IBDFVAL=$P($G(IBDFTMP),"^",3) I IBDFVAL]"" S IBDFVAL=$P(^DPT(IBDFVAL,0),"^",1)
"RTN","IBDFSS",44,0)
 I $D(VAUTN) S IBDFVAL=$P($G(IBDFTMP),"^",1) I IBDFVAL]"" S IBDFVAL=$P(^SC(IBDFVAL,0),"^",1)
"RTN","IBDFSS",45,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,34,15)
"RTN","IBDFSS",46,0)
 ;S X=$$SETSTR^VALM1(IBDFVAL,X,34,14)
"RTN","IBDFSS",47,0)
 S IBDFVAL=$P($G(IBDFTMP),"^",6) I IBDFVAL]"" S IBDFVAL=$E(IBDFVAL,4,5)_"/"_$E(IBDFVAL,6,7)_"/"_$E(IBDFVAL,2,3)
"RTN","IBDFSS",48,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,50,10)
"RTN","IBDFSS",49,0)
 S IBDFVAL=$P($G(IBDFTMP),"^",7) I IBDFVAL]"" S IBDFVAL=$E(IBDFVAL,4,5)_"/"_$E(IBDFVAL,6,7)_"/"_$E(IBDFVAL,2,3)
"RTN","IBDFSS",50,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,62,10)
"RTN","IBDFSS",51,0)
 S IBDFVAL=$P($G(IBDFTMP),"^",12)
"RTN","IBDFSS",52,0)
 S IBDFVAL=$S(IBDFVAL=1:"PRINTD",IBDFVAL=2:"SCANND",IBDFVAL=3:"SC/PCE",IBDFVAL=4:"SC/ER",IBDFVAL=5:"DENTRY",IBDFVAL=6:"DE/PCE",IBDFVAL=7:"DE/ER",IBDFVAL=11:"PENDNG",IBDFVAL=12:"NO TRN",1:"NO PRT")
"RTN","IBDFSS",53,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,74,6)
"RTN","IBDFSS",54,0)
 ;
"RTN","IBDFSS",55,0)
 ;
"RTN","IBDFSS",56,0)
TMP ; -- Set up TMP Array
"RTN","IBDFSS",57,0)
 S ^TMP("SSEL",$J,IBDCNT,0)=$$LOWER^VALM1(X),^TMP("SSEL",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFSS",58,0)
 S ^TMP("SELIDX",$J,IBDCNT1)=VALMCNT_"^"_$P(IBDFTMP,"^",2)_"^"_$P(IBDFTMP,"^",3)_"^"_$P(IBDFTMP,"^",4)_"^"_$P(IBDFTMP,"^",6)_"^"_$P(IBDFTMP,"^",7)_"^"_$P(IBDFTMP,"^",12)
"RTN","IBDFSS",59,0)
 Q
"RTN","IBDFSS",60,0)
 ;
"RTN","IBDFSS",61,0)
 ;
"RTN","IBDFSS",62,0)
HDR ; -- header code
"RTN","IBDFSS",63,0)
 S IBDFX=$P($$FMTE^XLFDT(IBDFBG),"@")
"RTN","IBDFSS",64,0)
 S IBDFY=$P($$FMTE^XLFDT(IBDFEND),"@")
"RTN","IBDFSS",65,0)
 S VALMHDR(1)="Encounter forms with selected status for the date range of "
"RTN","IBDFSS",66,0)
 S VALMHDR(2)=IBDFX_" to "_IBDFY
"RTN","IBDFSS",67,0)
 Q
"RTN","IBDFSS",68,0)
 ;
"RTN","IBDFSS",69,0)
 ;
"RTN","IBDFSS",70,0)
INIT ; -- init variables and list array
"RTN","IBDFSS",71,0)
 N IBDCNT,IBDCNT1,IBDFDV,IBDFCL,IBDFTMP,IBDFPT,IBDFPAT,IBDFT
"RTN","IBDFSS",72,0)
 S (IBDFDV,IBDFCL,IBDCNT,IBDCNT1,IBDFPT,VALMCNT)=0
"RTN","IBDFSS",73,0)
 K ^TMP("SSEL",$J),^TMP("SELIDX",$J)
"RTN","IBDFSS",74,0)
 ;F IBDFDIV=0:0 S IBDFDV=$O(^TMP("FTRK",$J,IBDFDV)) Q:IBDFDV']""  F IBDFCLI=0:0 S IBDFCL=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL)) Q:IBDFCL']""  F IBDFPAT=0:0 S IBDFPT=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFPT)) Q:IBDFPT']""  D 
"RTN","IBDFSS",75,0)
 ;.F IBDFIFN=0:0 S IBDFIFN=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFPT,IBDFIFN)) Q:'IBDFIFN  F IBDFT=0:0 S IBDFT=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFPT,IBDFIFN,IBDFT)) Q:'IBDFT  D
"RTN","IBDFSS",76,0)
 ;..S IBDX="" F  S IBDX=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFPT,IBDFIFN,IBDFT,IBDX)) Q:IBDX=""  S IBDFTMP=^(IBDX) D
"RTN","IBDFSS",77,0)
 ;...S IBDFSTAT=$P(IBDFTMP,"^",12) I $D(IBSTAT(+IBDFSTAT)) D:'$D(IBDFDIV1(IBDFDV)) HEADER^IBDFSS1 D:'$D(IBCLIN(IBDFDV,IBDFCL)) HEADER1^IBDFSS1 D SETARR
"RTN","IBDFSS",78,0)
 I $D(VAUTG) D
"RTN","IBDFSS",79,0)
 .N IBDFGR
"RTN","IBDFSS",80,0)
 .S IBDFGR=0
"RTN","IBDFSS",81,0)
 .F IBDFDIV=0:0 S IBDFDV=$O(^TMP("FTRK",$J,IBDFDV)) Q:IBDFDV']""  F IBDFGRO=0:0 S IBDFGR=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR)) Q:IBDFGR']""  F IBDFCLI=0:0 S IBDFCL=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR,IBDFCL)) Q:IBDFCL']""  D
"RTN","IBDFSS",82,0)
 ..F IBDFT=0:0 S IBDFT=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR,IBDFCL,IBDFT)) Q:'IBDFT  F IBDFPAT=0:0 S IBDFPT=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR,IBDFCL,IBDFT,IBDFPT)) Q:IBDFPT']""  D
"RTN","IBDFSS",83,0)
 ...F IBDFIFN=0:0 S IBDFIFN=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR,IBDFCL,IBDFT,IBDFPT,IBDFIFN)) Q:'IBDFIFN  S IBDX="" F  S IBDX=$O(^TMP("FTRK",$J,IBDFDV,IBDFGR,IBDFCL,IBDFT,IBDFPT,IBDFIFN,IBDX)) Q:IBDX=""  S IBDFTMP=^(IBDX) D
"RTN","IBDFSS",84,0)
 ....S IBDFSTAT=$P(IBDFTMP,"^",12) I $D(IBSTAT(+IBDFSTAT)) D:'$D(IBDFDIV1(IBDFDV)) HEADER^IBDFSS1 D:'$D(IBDFGRP1(IBDFDV,IBDFGR)) HEADER2^IBDFSS1 D:'$D(IBCLIN(IBDFGR,IBDFCL)) HEADER1^IBDFSS1 D SETARR
"RTN","IBDFSS",85,0)
 I '$D(VAUTG) D
"RTN","IBDFSS",86,0)
 .F IBDFDIV=0:0 S IBDFDV=$O(^TMP("FTRK",$J,IBDFDV)) Q:IBDFDV']""  F IBDFCLI=0:0 S IBDFCL=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL)) Q:IBDFCL']""  D
"RTN","IBDFSS",87,0)
 ..F IBDFT=0:0 S IBDFT=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFT)) Q:'IBDFT  F IBDFPAT=0:0 S IBDFPT=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFT,IBDFPT)) Q:IBDFPT']""  D
"RTN","IBDFSS",88,0)
 ...F IBDFIFN=0:0 S IBDFIFN=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFT,IBDFPT,IBDFIFN)) Q:'IBDFIFN  S IBDX="" F  S IBDX=$O(^TMP("FTRK",$J,IBDFDV,IBDFCL,IBDFT,IBDFPT,IBDFIFN,IBDX)) Q:IBDX=""  S IBDFTMP=^(IBDX) D
"RTN","IBDFSS",89,0)
 ....S IBDFSTAT=$P(IBDFTMP,"^",12) I $D(IBSTAT(+IBDFSTAT)) D:'$D(IBDFDIV1(IBDFDV)) HEADER^IBDFSS1 D:'$D(IBCLIN(IBDFDV,IBDFCL)) HEADER1^IBDFSS1 D SETARR
"RTN","IBDFSS",90,0)
 I '$D(^TMP("SSEL",$J)) D NUL
"RTN","IBDFSS",91,0)
 Q
"RTN","IBDFSS",92,0)
 ;
"RTN","IBDFSS",93,0)
 ;
"RTN","IBDFSS",94,0)
NUL ; -- NULL MESSAGE
"RTN","IBDFSS",95,0)
 S ^TMP("SSEL",$J,1,0)=" ",^TMP("SSEL",$J,2,0)="There are no encounter forms that meet this criteria.",^TMP("SELIDX",$J,1)=1,^TMP("SELIDX",$J,2)=2
"RTN","IBDFSS",96,0)
 Q
"RTN","IBDFSS",97,0)
 ;
"RTN","IBDFSS",98,0)
 ;
"RTN","IBDFSS",99,0)
HELP ; -- help code
"RTN","IBDFSS",100,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFSS",101,0)
 Q
"RTN","IBDFSS",102,0)
 ;
"RTN","IBDFSS",103,0)
 ;
"RTN","IBDFSS",104,0)
EXIT ; -- exit code
"RTN","IBDFSS",105,0)
 K ^TMP("SSEL",$J),^TMP("SELIDX",$J),IBSTAT,IBCLIN,IBDFDIV1,DIR,IBDFSTAT,IBDFX,IBDFY
"RTN","IBDFSS",106,0)
 Q
"RTN","IBDFSS",107,0)
 ;
"RTN","IBDFSS",108,0)
 ;
"RTN","IBDFSS",109,0)
EXPND ; -- expand code
"RTN","IBDFSS",110,0)
 Q
"RTN","IBDFSS",111,0)
 ;
"RTN","IBDFSS1")
0^232^B5301881
"RTN","IBDFSS1",1,0)
IBDFSS1 ;ALB/MAF - FORMS TRACKING SELECTED STATUS - JUL 6 1995
"RTN","IBDFSS1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFSS1",3,0)
 ;
"RTN","IBDFSS1",4,0)
 ;
"RTN","IBDFSS1",5,0)
HEADER ;  -- Set up header line for the display
"RTN","IBDFSS1",6,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFSS1",7,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFSS1",8,0)
 S X=""
"RTN","IBDFSS1",9,0)
 S IBDFDIV1(IBDFDV)=IBDCNT
"RTN","IBDFSS1",10,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP1
"RTN","IBDFSS1",11,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFSS1",12,0)
 S IBDVAL=IBDFDV
"RTN","IBDFSS1",13,0)
 S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR^VALM1(" ",X,1,IBDVAL1)
"RTN","IBDFSS1",14,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,IBDVAL1,25) D TMP1,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFSS1",15,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFSS1",16,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP1
"RTN","IBDFSS1",17,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFSS1",18,0)
 Q
"RTN","IBDFSS1",19,0)
 ;
"RTN","IBDFSS1",20,0)
 ;
"RTN","IBDFSS1",21,0)
HEADER1 ;  -- Set up header line for the display
"RTN","IBDFSS1",22,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFSS1",23,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFSS1",24,0)
 S X=""
"RTN","IBDFSS1",25,0)
 I $D(VAUTG) S IBCLIN(IBDFGR,IBDFCL)=IBDCNT
"RTN","IBDFSS1",26,0)
 I '$D(VAUTG) S IBCLIN(IBDFDV,IBDFCL)=IBDCNT
"RTN","IBDFSS1",27,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP1
"RTN","IBDFSS1",28,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFSS1",29,0)
 S IBDVAL=IBDFCL
"RTN","IBDFSS1",30,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,1,25) D TMP1,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFSS1",31,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFSS1",32,0)
 Q
"RTN","IBDFSS1",33,0)
 ;
"RTN","IBDFSS1",34,0)
 ;
"RTN","IBDFSS1",35,0)
HEADER2 ;  -- Set up header line for the clinic group
"RTN","IBDFSS1",36,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFSS1",37,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFSS1",38,0)
 S X=""
"RTN","IBDFSS1",39,0)
 S IBDFGRP1(IBDFDV,IBDFGR)=IBDCNT
"RTN","IBDFSS1",40,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP1
"RTN","IBDFSS1",41,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFSS1",42,0)
 ;S IBDVAL=$P(^IBD(357.99,IBDFGR,0),"^",1)
"RTN","IBDFSS1",43,0)
 S IBDVAL=IBDFGR
"RTN","IBDFSS1",44,0)
 S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR^VALM1(" ",X,1,IBDVAL1)
"RTN","IBDFSS1",45,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,IBDVAL1,25) D TMP1,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFSS1",46,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFSS1",47,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP1
"RTN","IBDFSS1",48,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFSS1",49,0)
 Q
"RTN","IBDFSS1",50,0)
TMP1 ; -- Set up TMP Array
"RTN","IBDFSS1",51,0)
 S ^TMP("SSEL",$J,IBDCNT,0)=X,^TMP("SSEL",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFSS1",52,0)
 S ^TMP("SELIDX",$J,IBDCNT1)=VALMCNT
"RTN","IBDFSS1",53,0)
 Q
"RTN","IBDFST")
0^233^B19477796
"RTN","IBDFST",1,0)
IBDFST ;ALB/MAF - FORMS TRACKING STATISTICS - JUL 6 1995
"RTN","IBDFST",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFST",3,0)
 ;
"RTN","IBDFST",4,0)
 ;
"RTN","IBDFST",5,0)
EN ; -- main entry point for IBDF FT STATS
"RTN","IBDFST",6,0)
 D EN^VALM("IBDF FT STATS")
"RTN","IBDFST",7,0)
 Q
"RTN","IBDFST",8,0)
 ;
"RTN","IBDFST",9,0)
HDR ; -- header code
"RTN","IBDFST",10,0)
 S IBDFX=$P($$FMTE^XLFDT(IBDFBG),"@")
"RTN","IBDFST",11,0)
 S IBDFY=$P($$FMTE^XLFDT(IBDFEND),"@")
"RTN","IBDFST",12,0)
 S VALMHDR(1)="Statistical data for the date range of "_IBDFX_" to "_IBDFY
"RTN","IBDFST",13,0)
 Q
"RTN","IBDFST",14,0)
 ;
"RTN","IBDFST",15,0)
 ;
"RTN","IBDFST",16,0)
INIT ; -- init variables and list array
"RTN","IBDFST",17,0)
 N IBDFDV,IBDFCL,IBDFNODE,IBDCNT,IBDCNT1
"RTN","IBDFST",18,0)
 S (IBDFDV,IBDFCL,IBDCNT,IBDCNT1,VALMCNT)=0
"RTN","IBDFST",19,0)
 K IBDF,^TMP("STATS",$J),^TMP("STAIDX",$J)
"RTN","IBDFST",20,0)
 F IBDFDIV=0:0 S IBDFDV=$O(^TMP("CNT",$J,IBDFDV)) Q:IBDFDV']""  F IBDFCLI=0:0 S IBDFCL=$O(^TMP("CNT",$J,IBDFDV,IBDFCL)) Q:IBDFCL']""  S IBDFNODE=^TMP("CNT",$J,IBDFDV,IBDFCL) D:'$D(IBDF(IBDFDV)) HEADER D SETARR
"RTN","IBDFST",21,0)
 Q
"RTN","IBDFST",22,0)
 ;
"RTN","IBDFST",23,0)
 ;
"RTN","IBDFST",24,0)
SETARR ;  -- Set up Listman array
"RTN","IBDFST",25,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFST",26,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFST",27,0)
 S X=""
"RTN","IBDFST",28,0)
 S IBDFVAL=$$LOWER^VALM1(IBDFCL)
"RTN","IBDFST",29,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,1,20)
"RTN","IBDFST",30,0)
 S IBDFVAL=$J($P(IBDFNODE,"^",1),6)
"RTN","IBDFST",31,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,22,6)
"RTN","IBDFST",32,0)
 S IBDFVAL=$J($P(IBDFNODE,"^",2),5)
"RTN","IBDFST",33,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,30,5)
"RTN","IBDFST",34,0)
 S IBDFVAL=$J($S($P(IBDFNODE,"^",1)>0:($P(IBDFNODE,"^",2)/$P(IBDFNODE,"^",1))*100,1:0),6) I IBDFVAL>0 S IBDFVAL=$J($P(IBDFVAL,".",1)_"."_$E($P(IBDFVAL,".",2),1,2),6)
"RTN","IBDFST",35,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,37,6)
"RTN","IBDFST",36,0)
 S IBDFVAL=$J($S($P(IBDFNODE,"^",5)]"":$P(IBDFNODE,"^",5),1:0),5)
"RTN","IBDFST",37,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,45,5)
"RTN","IBDFST",38,0)
 I $P(IBDFNODE,"^",7) S IBDFVAL=$P(IBDFNODE,"^",1)-$P(IBDFNODE,"^",7)
"RTN","IBDFST",39,0)
 S IBDFVAL=$J($S(+$P(IBDFNODE,"^",7)>0&(IBDFVAL>0):(+$P(IBDFNODE,"^",5)/IBDFVAL)*100,+$P(IBDFNODE,"^",7)'>0:(+$P(IBDFNODE,"^",5)/$P(IBDFNODE,"^",1))*100,1:0),6) I IBDFVAL>0 S IBDFVAL=$J($P(IBDFVAL,".",1)_"."_$E($P(IBDFVAL,".",2),1,2),6)
"RTN","IBDFST",40,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,52,6)
"RTN","IBDFST",41,0)
 S IBDFVAL=$J($P(IBDFNODE,"^",3),5)
"RTN","IBDFST",42,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,60,5)
"RTN","IBDFST",43,0)
 I $P(IBDFNODE,"^",7) S IBDFVAL=$P(IBDFNODE,"^",1)-$P(IBDFNODE,"^",7)
"RTN","IBDFST",44,0)
 S IBDFVAL=$J($S(+$P(IBDFNODE,"^",7)>0&(IBDFVAL>0):($P(IBDFNODE,"^",3)/IBDFVAL)*100,+$P(IBDFNODE,"^",7)'>0:(+$P(IBDFNODE,"^",3)/$P(IBDFNODE,"^",1))*100,1:0),6) I IBDFVAL>0 S IBDFVAL=$J($P(IBDFVAL,".",1)_"."_$E($P(IBDFVAL,".",2),1,2),6)
"RTN","IBDFST",45,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,67,6)
"RTN","IBDFST",46,0)
 S IBDFVAL=$J($S($P(IBDFNODE,"^",6)]"":$P(IBDFNODE,"^",6),1:0),5)
"RTN","IBDFST",47,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,75,5)
"RTN","IBDFST",48,0)
 I $P(IBDFNODE,"^",7) S IBDFVAL=$P(IBDFNODE,"^",1)-$P(IBDFNODE,"^",7)
"RTN","IBDFST",49,0)
 S IBDFVAL=$J($S(+$P(IBDFNODE,"^",7)>0&(IBDFVAL>0):($P(IBDFNODE,"^",6)/IBDFVAL)*100,+$P(IBDFNODE,"^",7)'>0:($P(IBDFNODE,"^",6)/$P(IBDFNODE,"^",1))*100,1:0),6) I IBDFVAL>0 S IBDFVAL=$J($P(IBDFVAL,".",1)_"."_$E($P(IBDFVAL,".",2),1,2),6)
"RTN","IBDFST",50,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,82,6)
"RTN","IBDFST",51,0)
 I $P(IBDFNODE,"^",7) S IBDFVAL=$P(IBDFNODE,"^",1)-$P(IBDFNODE,"^",7)
"RTN","IBDFST",52,0)
 S IBDFVAL=$J($S(+$P(IBDFNODE,"^",7)>0&(IBDFVAL>0):($P(IBDFNODE,"^",4)/IBDFVAL),+$P(IBDFNODE,"^",7)'>0:($P(IBDFNODE,"^",4)/$P(IBDFNODE,"^",1)),1:0),13) I IBDFVAL>0 S IBDFVAL=$J($P(IBDFVAL,".",1)_"."_$E($P(IBDFVAL,".",2),1,2),13)
"RTN","IBDFST",53,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,90,13)
"RTN","IBDFST",54,0)
 ;
"RTN","IBDFST",55,0)
 ;
"RTN","IBDFST",56,0)
TMP ; -- Set up TMP Array
"RTN","IBDFST",57,0)
 S ^TMP("STATS",$J,IBDCNT,0)=X,^TMP("STATS",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFST",58,0)
 S ^TMP("STAIDX",$J,IBDCNT1)=VALMCNT
"RTN","IBDFST",59,0)
 Q
"RTN","IBDFST",60,0)
 ;
"RTN","IBDFST",61,0)
 ;
"RTN","IBDFST",62,0)
HEADER ;  -- Set up header line for the display
"RTN","IBDFST",63,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFST",64,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFST",65,0)
 S X=""
"RTN","IBDFST",66,0)
 S IBDF(IBDFDV)=IBDCNT
"RTN","IBDFST",67,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP
"RTN","IBDFST",68,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFST",69,0)
 S IBDVAL=IBDFDV
"RTN","IBDFST",70,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,1,25) D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFST",71,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFST",72,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP
"RTN","IBDFST",73,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFST",74,0)
 Q
"RTN","IBDFST",75,0)
 ;
"RTN","IBDFST",76,0)
 ;
"RTN","IBDFST",77,0)
HELP ; -- help code
"RTN","IBDFST",78,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFST",79,0)
 Q
"RTN","IBDFST",80,0)
 ;
"RTN","IBDFST",81,0)
 ;
"RTN","IBDFST",82,0)
EXIT ; -- exit code
"RTN","IBDFST",83,0)
 K IBDF,IBDFX,IBDFY,^TMP("STATS",$J),^TMP("STAIDX",$J)
"RTN","IBDFST",84,0)
 Q
"RTN","IBDFST",85,0)
 ;
"RTN","IBDFST",86,0)
 ;
"RTN","IBDFST",87,0)
EXPND ; -- expand code
"RTN","IBDFST",88,0)
 Q
"RTN","IBDFST",89,0)
 ;
"RTN","IBDFST1")
0^382^B18358004
"RTN","IBDFST1",1,0)
IBDFST1 ;ALB/MAF - FORMS TRACKING STATISTICS - JUL 6 1995
"RTN","IBDFST1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFST1",3,0)
 ;
"RTN","IBDFST1",4,0)
 ;
"RTN","IBDFST1",5,0)
EN ; -- set up variables
"RTN","IBDFST1",6,0)
 N IBPAGE
"RTN","IBDFST1",7,0)
 S IBPAGE=0
"RTN","IBDFST1",8,0)
 S IBDFX=$P($$FMTE^XLFDT(IBDFBG),"@")
"RTN","IBDFST1",9,0)
 S IBDFY=$P($$FMTE^XLFDT(IBDFEND),"@")
"RTN","IBDFST1",10,0)
 ;
"RTN","IBDFST1",11,0)
INIT ; -- init variables and list array
"RTN","IBDFST1",12,0)
 N IBDFDV,IBDFCL,IBDFNODE,IBDCNT,IBDCNT1
"RTN","IBDFST1",13,0)
 S (IBDFDV,IBDFCL,IBDCNT,IBDCNT1,VALMCNT)=0
"RTN","IBDFST1",14,0)
 F IBDFDIV=0:0 S IBDFDV=$O(^TMP("CNT",$J,IBDFDV)) Q:IBDFDV']""  F IBDFCLI=0:0 S IBDFCL=$O(^TMP("CNT",$J,IBDFDV,IBDFCL)) Q:IBDFCL']""  S IBDFNODE=^TMP("CNT",$J,IBDFDV,IBDFCL) D:'$D(IBDF(IBDFDV))!($Y+6>IOSL) HDR,HEADER D SETARR
"RTN","IBDFST1",15,0)
 Q
"RTN","IBDFST1",16,0)
 ;
"RTN","IBDFST1",17,0)
 ;
"RTN","IBDFST1",18,0)
SETARR ;  -- Set up Listman array
"RTN","IBDFST1",19,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFST1",20,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFST1",21,0)
 S IBDFVAL=$$LOWER^VALM1(IBDFCL)
"RTN","IBDFST1",22,0)
 W !,$E(IBDFVAL,1,20)
"RTN","IBDFST1",23,0)
 S IBDFVAL=$J($P(IBDFNODE,"^",1),6)
"RTN","IBDFST1",24,0)
 W ?22,$E(IBDFVAL,1,6)
"RTN","IBDFST1",25,0)
 S IBDFVAL=$J($P(IBDFNODE,"^",2),5)
"RTN","IBDFST1",26,0)
 W ?30,$E(IBDFVAL,1,5)
"RTN","IBDFST1",27,0)
 S IBDFVAL=$J($S(+$P(IBDFNODE,"^",1)>0:($P(IBDFNODE,"^",2)/$P(IBDFNODE,"^",1))*100,1:0),6) I IBDFVAL>0 S IBDFVAL=$J($P(IBDFVAL,".",1)_"."_$E($P(IBDFVAL,".",2),1,2),6)
"RTN","IBDFST1",28,0)
 W ?37,$E(IBDFVAL,1,6)
"RTN","IBDFST1",29,0)
 S IBDFVAL=$J($S($P(IBDFNODE,"^",5)]"":$P(IBDFNODE,"^",5),1:0),5)
"RTN","IBDFST1",30,0)
 W ?45,$E(IBDFVAL,1,5)
"RTN","IBDFST1",31,0)
 I $P(IBDFNODE,"^",7) S IBDFVAL=$P(IBDFNODE,"^",1)-$P(IBDFNODE,"^",7)
"RTN","IBDFST1",32,0)
 S IBDFVAL=$J($S(+$P(IBDFNODE,"^",7)>0&(IBDFVAL>0):(+$P(IBDFNODE,"^",5)/IBDFVAL)*100,+$P(IBDFNODE,"^",7)'>0:(+$P(IBDFNODE,"^",5)/$P(IBDFNODE,"^",1))*100,1:0),6) I IBDFVAL>0 S IBDFVAL=$J($P(IBDFVAL,".",1)_"."_$E($P(IBDFVAL,".",2),1,2),6)
"RTN","IBDFST1",33,0)
 W ?52,$E(IBDFVAL,1,6)
"RTN","IBDFST1",34,0)
 S IBDFVAL=$J($P(IBDFNODE,"^",3),5)
"RTN","IBDFST1",35,0)
 W ?60,$E(IBDFVAL,1,5)
"RTN","IBDFST1",36,0)
 I $P(IBDFNODE,"^",7) S IBDFVAL=$P(IBDFNODE,"^",1)-$P(IBDFNODE,"^",7)
"RTN","IBDFST1",37,0)
 S IBDFVAL=$J($S(+$P(IBDFNODE,"^",7)>0&(IBDFVAL>0):($P(IBDFNODE,"^",3)/IBDFVAL)*100,+$P(IBDFNODE,"^",7)'>0:(+$P(IBDFNODE,"^",3)/$P(IBDFNODE,"^",1))*100,1:0),6) I IBDFVAL>0 S IBDFVAL=$J($P(IBDFVAL,".",1)_"."_$E($P(IBDFVAL,".",2),1,2),6)
"RTN","IBDFST1",38,0)
 W ?67,$E(IBDFVAL,1,6)
"RTN","IBDFST1",39,0)
 S IBDFVAL=$J($S($P(IBDFNODE,"^",6)]"":$P(IBDFNODE,"^",6),1:0),5)
"RTN","IBDFST1",40,0)
 W ?75,$E(IBDFVAL,1,5)
"RTN","IBDFST1",41,0)
 I $P(IBDFNODE,"^",7) S IBDFVAL=$P(IBDFNODE,"^",1)-$P(IBDFNODE,"^",7)
"RTN","IBDFST1",42,0)
 S IBDFVAL=$J($S(+$P(IBDFNODE,"^",7)>0&(IBDFVAL>0):($P(IBDFNODE,"^",6)/IBDFVAL)*100,+$P(IBDFNODE,"^",7)'>0:($P(IBDFNODE,"^",6)/$P(IBDFNODE,"^",1))*100,1:0),6) I IBDFVAL>0 S IBDFVAL=$J($P(IBDFVAL,".",1)_"."_$E($P(IBDFVAL,".",2),1,2),6)
"RTN","IBDFST1",43,0)
 W ?82,$E(IBDFVAL,1,6)
"RTN","IBDFST1",44,0)
 I $P(IBDFNODE,"^",7) S IBDFVAL=$P(IBDFNODE,"^",1)-$P(IBDFNODE,"^",7)
"RTN","IBDFST1",45,0)
 S IBDFVAL=$J($S(+$P(IBDFNODE,"^",7)>0&(IBDFVAL>0):($P(IBDFNODE,"^",4)/IBDFVAL),+$P(IBDFNODE,"^",7)'>0:($P(IBDFNODE,"^",4)/$P(IBDFNODE,"^",1)),1:0),13) I IBDFVAL>0 S IBDFVAL=$J($P(IBDFVAL,".",1)_"."_$E($P(IBDFVAL,".",2),1,2),13)
"RTN","IBDFST1",46,0)
 W ?90,$E(IBDFVAL,1,13)
"RTN","IBDFST1",47,0)
 Q
"RTN","IBDFST1",48,0)
 ;
"RTN","IBDFST1",49,0)
 ;
"RTN","IBDFST1",50,0)
HEADER ;  -- Set up header line for the display
"RTN","IBDFST1",51,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFST1",52,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFST1",53,0)
 S IBDF(IBDFDV)=IBDCNT
"RTN","IBDFST1",54,0)
 W !,"   "
"RTN","IBDFST1",55,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFST1",56,0)
 S IBDVAL=IBDFDV
"RTN","IBDFST1",57,0)
 W !,$E(IBDVAL,1,25)
"RTN","IBDFST1",58,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFST1",59,0)
 W !,"   "
"RTN","IBDFST1",60,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFST1",61,0)
 Q
"RTN","IBDFST1",62,0)
 ;
"RTN","IBDFST1",63,0)
 ;
"RTN","IBDFST1",64,0)
HDR S IBPAGE=IBPAGE+1 W @IOF,"Statistics Report",?55,IBDFY,?110,"PAGE: ",IBPAGE
"RTN","IBDFST1",65,0)
 S X="",$P(X,"=",133)="" W !,X
"RTN","IBDFST1",66,0)
 W !,"Statistical data for the date range of "_IBDFX_" to "_IBDFY,!
"RTN","IBDFST1",67,0)
 W !,?5,"CLINIC/PATIENT",?22,"TOTAL",?30,"#PRNT",?37,"%PRNTD",?47,"#DE",?55,"%DE",?60,"#SCND",?67,"%SCND",?75,"#PCE",?83,"%PCE",?90,"AVG DAYS SCND"
"RTN","IBDFST1",68,0)
 S X="",$P(X,"-",133)="" W !,X
"RTN","IBDFST1",69,0)
 Q
"RTN","IBDFST1",70,0)
HELP ; -- help code
"RTN","IBDFST1",71,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFST1",72,0)
 Q
"RTN","IBDFST1",73,0)
 ;
"RTN","IBDFST1",74,0)
 ;
"RTN","IBDFST1",75,0)
EXIT ; -- exit code
"RTN","IBDFST1",76,0)
 K IBDF,IBDFX,IBDFY,^TMP("STATS",$J),^TMP("STAIDX",$J)
"RTN","IBDFST1",77,0)
 Q
"RTN","IBDFST1",78,0)
 ;
"RTN","IBDFST1",79,0)
 ;
"RTN","IBDFST1",80,0)
EXPND ; -- expand code
"RTN","IBDFST1",81,0)
 Q
"RTN","IBDFST1",82,0)
 ;
"RTN","IBDFU")
0^234^B40607659
"RTN","IBDFU",1,0)
IBDFU ;ALB/CJM - ENCOUNTER FORM (utilities) ;NOV 16,1992
"RTN","IBDFU",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU",3,0)
 ;
"RTN","IBDFU",4,0)
DRWBOX(IBY,IBX,W,H) ;draws a box
"RTN","IBDFU",5,0)
 I W=1,H N I D  Q
"RTN","IBDFU",6,0)
 .D DRWVLINE(IBY+1,IBX,H-2)
"RTN","IBDFU",7,0)
 I H=1,W D DRWSTR(IBY,IBX,$$HLINE(W),"") Q
"RTN","IBDFU",8,0)
 I W<2,H<2 Q
"RTN","IBDFU",9,0)
 I 'IBDEVICE("LISTMAN") S @IBARRAY("BOXES")@((IBY+IBBLK("Y")),(IBX+IBBLK("X")),IBBLK)=W_"^"_H
"RTN","IBDFU",10,0)
 ;if IBDEVICE("PCL") means boxes will be drawn by PCL, via @IBARRAY("BOXES") array
"RTN","IBDFU",11,0)
 Q:IBDEVICE("PCL")
"RTN","IBDFU",12,0)
 D DRWSTR(IBY,IBX,"A"_$$HLINE(W-2,"B")_"C","G")
"RTN","IBDFU",13,0)
 D DRWSTR(IBY+H-1,IBX,"F"_$$HLINE(W-2,"B")_"E","G")
"RTN","IBDFU",14,0)
 D DRWVLINE(IBY+1,IBX,H-2,"|"),DRWVLINE(IBY+1,IBX+W-1,H-2,"|")
"RTN","IBDFU",15,0)
 Q
"RTN","IBDFU",16,0)
HLINE(L,CHAR) ;returns a horizontal line
"RTN","IBDFU",17,0)
 I $G(CHAR)="" S CHAR="_"
"RTN","IBDFU",18,0)
 N LINE S LINE=""
"RTN","IBDFU",19,0)
 S $P(LINE,CHAR,L)=CHAR
"RTN","IBDFU",20,0)
 Q LINE
"RTN","IBDFU",21,0)
DRWVLINE(IBY,IBX,IBH,CHAR) ;draw vertical line
"RTN","IBDFU",22,0)
 N SAVE
"RTN","IBDFU",23,0)
 S SAVE=IBPRINT("COMPILING_BLOCKS")
"RTN","IBDFU",24,0)
 I IBPRINT("COMPILING_BLOCKS") D CMPVLINE Q:'IBPRINT("WRITE_IF_COMPILING")  S IBPRINT("COMPILING_BLOCKS")=0
"RTN","IBDFU",25,0)
 N I
"RTN","IBDFU",26,0)
 I $D(CHAR) D
"RTN","IBDFU",27,0)
 .F I=0:1:IBH-1 D DRWSTR(IBY+I,IBX,CHAR)
"RTN","IBDFU",28,0)
 I '$D(CHAR) F I=0:1:IBH-1 D DRWSTR(IBY+I,IBX,"D","G")
"RTN","IBDFU",29,0)
 S IBPRINT("COMPILING_BLOCKS")=SAVE
"RTN","IBDFU",30,0)
 Q
"RTN","IBDFU",31,0)
 ;
"RTN","IBDFU",32,0)
DRWSTR(IBY,IBX,STRING,OPTIONS,IBW) ;
"RTN","IBDFU",33,0)
 ;IBW is the width over which to apply OPTIONS
"RTN","IBDFU",34,0)
 ;OPTIONS - B=bold,G=graphics,U=underline,R=reverse print,r=expanded reverse print,s=shaded(expanded)
"RTN","IBDFU",35,0)
 ;
"RTN","IBDFU",36,0)
 N UNDRLINE,END,ON,OFF,S,CURLINE
"RTN","IBDFU",37,0)
 S OPTIONS=$G(OPTIONS),STRING=$G(STRING)
"RTN","IBDFU",38,0)
 I '$D(IBW) S IBW=$L(STRING)
"RTN","IBDFU",39,0)
 I (IBW'>0)&(STRING="") Q
"RTN","IBDFU",40,0)
 I IBPRINT("COMPILING_BLOCKS") D CMPSTR Q:'IBPRINT("WRITE_IF_COMPILING")
"RTN","IBDFU",41,0)
 S IBY=IBY+IBBLK("Y"),IBX=IBX+IBBLK("X")
"RTN","IBDFU",42,0)
 I IBDEVICE("LISTMAN"),$G(IBTOPLN),$G(IBBOTLN),((IBY<IBTOPLN)!(IBY>IBBOTLN)) Q
"RTN","IBDFU",43,0)
 S (UNDRLINE,ON,OFF)=""
"RTN","IBDFU",44,0)
 ;
"RTN","IBDFU",45,0)
 I OPTIONS'="" D
"RTN","IBDFU",46,0)
 .I OPTIONS["B" S ON=ON_"B1;",OFF=OFF_"B0;"
"RTN","IBDFU",47,0)
 .I IBDEVICE("LISTMAN"),OPTIONS["U",OPTIONS'["R",OPTIONS'["r",OPTIONS'["s" S ON=ON_"U1;",OFF=OFF_"U0;"
"RTN","IBDFU",48,0)
 .I OPTIONS["R" S ON=ON_"R1,"_IBW_";",OFF=OFF_"R0;"
"RTN","IBDFU",49,0)
 .I OPTIONS["s" S ON=ON_"s1,"_IBW_";",OFF=OFF_"S0"
"RTN","IBDFU",50,0)
 .I OPTIONS["r" S ON=ON_"r1,"_IBW_";",OFF=OFF_"R0;"
"RTN","IBDFU",51,0)
 .I OPTIONS["C",IBDEVICE("LISTMAN") S OFF=OFF_$S((OPTIONS["R")!(OPTIONS["r")!(OPTIONS["s"):"R1;",OPTIONS["U":U1,1:"")
"RTN","IBDFU",52,0)
 .I 'IBDEVICE("LISTMAN"),OPTIONS["U",'IBDEVICE("CRT") S UNDRLINE=1
"RTN","IBDFU",53,0)
 I IBX+$L(STRING)>251 S STRING=$E(STRING,1,251-IBX)
"RTN","IBDFU",54,0)
 I IBX+IBW>251 S IBW=251-IBX
"RTN","IBDFU",55,0)
 ;
"RTN","IBDFU",56,0)
 ;for laser printing - NOT used presently
"RTN","IBDFU",57,0)
 ;I '$G(IBDEVICE("LISTMAN")),$G(IBDEVICE("RASTER")) D  Q
"RTN","IBDFU",58,0)
 ;.I ON'="" W ON
"RTN","IBDFU",59,0)
 ;.S DX=IBX,DY=IBY X IOXY
"RTN","IBDFU",60,0)
 ;.W $J($G(STRING),+IBW) I OFF'="" W OFF
"RTN","IBDFU",61,0)
 ;.I UNDRLINE N ARY S ARY="ARY",ARY(IBY,IBX)=$$HLINE(IBW) D RASPRINT^IBDF2F(.ARY)
"RTN","IBDFU",62,0)
 ;
"RTN","IBDFU",63,0)
 I '$G(IBDEVICE("LISTMAN")) D  Q
"RTN","IBDFU",64,0)
 .I OPTIONS["G",IBDEVICE("GRAPHICS") S @IBARRAY("GRAPHICS")@(IBY,IBX)=STRING Q
"RTN","IBDFU",65,0)
 .I OPTIONS["G" S STRING=$$GRPHCS(STRING)
"RTN","IBDFU",66,0)
 .S END=IBX+IBW-1
"RTN","IBDFU",67,0)
 .I UNDRLINE D UNDRLINE(IBY,IBX,IBW)
"RTN","IBDFU",68,0)
 .I STRING'="" D
"RTN","IBDFU",69,0)
 ..S CURLINE=$G(@IBARRAY("TEXT")@(IBY))
"RTN","IBDFU",70,0)
 ..S:CURLINE="" CURLINE=$J("",IBFORM("WIDTH"))
"RTN","IBDFU",71,0)
 ..S CURLINE=$$PADRIGHT($E(CURLINE,1,IBX),IBX)_STRING_$E(CURLINE,IBX+1+$L(STRING),IBFORM("WIDTH"))
"RTN","IBDFU",72,0)
 ..S @IBARRAY("TEXT")@(IBY)=CURLINE
"RTN","IBDFU",73,0)
 .I ON'="" S @IBARRAY("CONTROLS")@(IBY,IBX)=$G(@IBARRAY("CONTROLS")@(IBY,IBX))_ON,@IBARRAY("CONTROLS")@(IBY,END+1)=$G(@IBARRAY("CONTROLS")@(IBY,END+1))_OFF
"RTN","IBDFU",74,0)
 ;
"RTN","IBDFU",75,0)
 I $G(IBDEVICE("LISTMAN")) D
"RTN","IBDFU",76,0)
 .I OPTIONS["G" S STRING=$$GRPHCS(STRING)
"RTN","IBDFU",77,0)
 .S CURLINE=$G(@VALMAR@(IBY+1,0))
"RTN","IBDFU",78,0)
 .I CURLINE="" S CURLINE=$J((IBY#1000)+1,3,0)_$J("",IBFORM("WIDTH")) D CNTRL^VALM10(IBY+1,4,1,IORVON,IORVOFF) I (IBY+1)>VALMCNT S VALMCNT=(IBY+1)
"RTN","IBDFU",79,0)
 .S CURLINE=$$PADRIGHT($E(CURLINE,1,IBX+4),IBX+4)_STRING_$E(CURLINE,IBX+5+$L(STRING),IBFORM("WIDTH")+5)
"RTN","IBDFU",80,0)
 .S @VALMAR@(IBY+1,0)=CURLINE
"RTN","IBDFU",81,0)
 .I ON]"" D CNTRL^VALM10(IBY+1,IBX+5,IBW,$$CTRLS(ON),$$CTRLS(OFF))
"RTN","IBDFU",82,0)
 Q
"RTN","IBDFU",83,0)
UNDRLINE(IBY,IBX,W) ; underlining with when not using printers underlining ability
"RTN","IBDFU",84,0)
 N LINE
"RTN","IBDFU",85,0)
 S LINE=$G(@IBARRAY("UNDERLINES")@(IBY))
"RTN","IBDFU",86,0)
 S LINE=$$PADRIGHT($E(LINE,1,IBX),IBX)_$$HLINE(W,"_")_$E(LINE,IBX+W+1,IBFORM("WIDTH"))
"RTN","IBDFU",87,0)
 S @IBARRAY("UNDERLINES")@(IBY)=LINE
"RTN","IBDFU",88,0)
 Q
"RTN","IBDFU",89,0)
PADRIGHT(STR,LEN) ; pad right
"RTN","IBDFU",90,0)
 N B S STR=$E(STR,1,LEN)
"RTN","IBDFU",91,0)
 S:LEN>255 LEN=255
"RTN","IBDFU",92,0)
 S:LEN'=$L(STR) $P(B," ",LEN-$L(STR))=" "
"RTN","IBDFU",93,0)
 Q STR_$G(B)
"RTN","IBDFU",94,0)
 ;
"RTN","IBDFU",95,0)
STRIP(STR) ;strips off leading and trailing spaces
"RTN","IBDFU",96,0)
 N I
"RTN","IBDFU",97,0)
 F I=1:1:$L(STR) I $A(STR,I)>32 Q
"RTN","IBDFU",98,0)
 S STR=$E(STR,I,$L(STR))
"RTN","IBDFU",99,0)
 F I=$L(STR):-1:1 I $A(STR,I)>32 Q
"RTN","IBDFU",100,0)
 S STR=$E(STR,1,I)
"RTN","IBDFU",101,0)
 Q STR
"RTN","IBDFU",102,0)
 ;
"RTN","IBDFU",103,0)
CMPSTR ;saves compiled string write
"RTN","IBDFU",104,0)
 S IBWRTCNT("S")=IBWRTCNT("S")+1
"RTN","IBDFU",105,0)
 S ^IBE(357.1,IBBLK,"S",IBWRTCNT("S"),0)=IBY_"^"_IBX_"^"_OPTIONS_"^"_IBW_"^"_STRING
"RTN","IBDFU",106,0)
 Q
"RTN","IBDFU",107,0)
CMPVLINE ;save compiled vertical line write
"RTN","IBDFU",108,0)
 S IBWRTCNT("V")=IBWRTCNT("V")+1
"RTN","IBDFU",109,0)
 S ^IBE(357.1,IBBLK,"V",IBWRTCNT("V"),0)=IBY_"^"_IBX_"^"_IBH_"^"_$G(CHAR)
"RTN","IBDFU",110,0)
 Q
"RTN","IBDFU",111,0)
CTRLS(CTRLS,IBX,IBY) ;returns the needed escape sequences
"RTN","IBDFU",112,0)
 N I,X,RET,P1,P2 S RET=""
"RTN","IBDFU",113,0)
 F I=1:1 S X=$P(CTRLS,";",I) Q:X=""  D
"RTN","IBDFU",114,0)
 .S P1=$P(X,","),P2=$P(X,",",2)
"RTN","IBDFU",115,0)
 .;
"RTN","IBDFU",116,0)
 .I 'IBDEVICE("PCL"),'IBDEVICE("LISTMAN") S P1=$TR(P1,"RrSs","UUUU")
"RTN","IBDFU",117,0)
 .;
"RTN","IBDFU",118,0)
 .;reverse printing is tricky - must draw a rectangle with black fill
"RTN","IBDFU",119,0)
 .;
"RTN","IBDFU",120,0)
 .I IBDEVICE("PCL"),P1="R1",$D(IBX),$D(IBY) W $C(27)_"&f0S",!,$C(27)_"&a"_IBY_"r"_(IBX+.05)_"C",$C(27)_"&a-1R",$C(27)_"*p+10Y",$C(27)_"*c"_(IBDEVICE("COL_WIDTH")*(+P2)-3)_"h"_((IBDEVICE("ROW_HT")-10))_"v0P",$C(27)_"&f1S"
"RTN","IBDFU",121,0)
 .I IBDEVICE("PCL"),P1="r1",$D(IBX),$D(IBY) W $C(27)_"&f0S",!,$C(27)_"&a"_IBY_"r"_(IBX-.5)_"C",$C(27)_"&a-1.005R",$C(27)_"*p+10Y",$C(27)_"*c"_(IBDEVICE("COL_WIDTH")*(+P2+1))_"h"_((IBDEVICE("ROW_HT")-10))_"v0P",$C(27)_"&f1S"
"RTN","IBDFU",122,0)
 .;
"RTN","IBDFU",123,0)
 .;test of dark gray
"RTN","IBDFU",124,0)
 .;I IBDEVICE("PCL"),P1="r1",$D(IBX),$D(IBY) D
"RTN","IBDFU",125,0)
 .;.W $C(27)_"*c70G",$C(27)_"&f0S",!,$C(27)_"&a"_IBY_"r"_(IBX-.5)_"C",$C(27)_"&a-1.005R",$C(27)_"*p+10Y",$C(27)_"*c"_(IBDEVICE("COL_WIDTH")*(+P2+1))_"h"_((IBDEVICE("ROW_HT")-10))_"v2P",$C(27)_"&f1S",$C(27)_"*c35G"
"RTN","IBDFU",126,0)
 .;
"RTN","IBDFU",127,0)
 .I IBDEVICE("PCL"),P1="s1",$D(IBX),$D(IBY) D
"RTN","IBDFU",128,0)
 ..W $C(27)_"*c11G",$C(27)_"&f0S",!,$C(27)_"&a"_IBY_"r"_(IBX-.5)_"C",$C(27)_"&a-1.005R",$C(27)_"*p+10Y",$C(27)_"*c"_(IBDEVICE("COL_WIDTH")*(+P2+1))_"h"_((IBDEVICE("ROW_HT")-10))_"v2P",$C(27)_"&f1S",$C(27)_"*c35G"
"RTN","IBDFU",129,0)
 .;
"RTN","IBDFU",130,0)
 .S RET=RET_$S(P1="B0":IOINORM,P1="B1":IOINHI,P1="U0":IOUOFF_IOINORM,P1="U1":IOUON,P1="G1":IOG1,P1="G0":IOG0,(P1="R1")!(P1="r1"):IORVON,P1="R0":IORVOFF,IBDEVICE("LISTMAN")&(P1="s1"):IORVON,IBDEVICE("LISTMAN")&(P1="S0"):IORVOFF,1:"")
"RTN","IBDFU",131,0)
 Q RET
"RTN","IBDFU",132,0)
 ;
"RTN","IBDFU",133,0)
GRPHCS(GRPHCS) ;returns the needed graphics characters
"RTN","IBDFU",134,0)
 N I,X,RET S RET=""
"RTN","IBDFU",135,0)
 F I=1:1 S X=$E(GRPHCS,I) Q:X=""  S RET=RET_$S(X="A":IOTLC,X="B":IOHL,X="C":IOTRC,X="D":IOVL,X="E":IOBRC,X="F":IOBLC,1:"")
"RTN","IBDFU",136,0)
 Q RET
"RTN","IBDFU1")
0^235^B28658638
"RTN","IBDFU1",1,0)
IBDFU1 ;ALB/CJM - ENCOUNTER FORM ;NOV 16,1992
"RTN","IBDFU1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU1",3,0)
 ;utilities
"RTN","IBDFU1",4,0)
LSTDESCR(IBLIST) ;parses the IBLIST record pointed to by IBBLK and puts the
"RTN","IBDFU1",5,0)
 ;descripition in IBLIST - should be called by reference
"RTN","IBDFU1",6,0)
 ;returns 1 if list description not found
"RTN","IBDFU1",7,0)
 N NODE,J,C
"RTN","IBDFU1",8,0)
 S NODE=$G(^IBE(357.2,IBLIST,0))
"RTN","IBDFU1",9,0)
 Q:NODE="" 1
"RTN","IBDFU1",10,0)
 S IBLIST("NAME")=$P(NODE,"^",1)
"RTN","IBDFU1",11,0)
 S IBLIST("BLK")=$P(NODE,"^",2)
"RTN","IBDFU1",12,0)
 S IBLIST("DSCHDR")=$P(NODE,"^",4)
"RTN","IBDFU1",13,0)
 S IBLIST("HDR")=$P(NODE,"^",5)
"RTN","IBDFU1",14,0)
 S IBLIST("DHDR")=$P(NODE,"^",6)
"RTN","IBDFU1",15,0)
 S IBLIST("SEP")=$P(NODE,"^",7) D
"RTN","IBDFU1",16,0)
 .;how to separate subcolumns
"RTN","IBDFU1",17,0)
 .I IBLIST("SEP")=1 S IBLIST("SEP")=" ",IBLIST("SEP1")=" ",IBLIST("SEP2")="" Q
"RTN","IBDFU1",18,0)
 .I IBLIST("SEP")=2 S IBLIST("SEP")="  ",IBLIST("SEP1")="  ",IBLIST("SEP2")="" Q
"RTN","IBDFU1",19,0)
 .I IBLIST("SEP")=3 S IBLIST("SEP")="|",IBLIST("SEP1")="|",IBLIST("SEP2")="" Q
"RTN","IBDFU1",20,0)
 .I IBLIST("SEP")=4 S IBLIST("SEP")=" | ",IBLIST("SEP1")=" |",IBLIST("SEP2")=" " Q
"RTN","IBDFU1",21,0)
 ;
"RTN","IBDFU1",22,0)
 S IBLIST("BTWN")=$P(NODE,"^",8)
"RTN","IBDFU1",23,0)
 S IBLIST("DGHDR")=$P(NODE,"^",9)
"RTN","IBDFU1",24,0)
 S IBLIST("RTN")=$P(NODE,"^",11)
"RTN","IBDFU1",25,0)
 S IBLIST("INPUT_RTN")=$S(IBLIST("RTN"):$P($G(^IBE(357.6,IBLIST("RTN"),0)),"^",13),1:"")
"RTN","IBDFU1",26,0)
 S IBLIST("ULSLCTNS")=$P(NODE,"^",12)
"RTN","IBDFU1",27,0)
 S IBLIST("NUMCOL")=$P(NODE,"^",13)
"RTN","IBDFU1",28,0)
 S IBLIST("DYNAMIC")=+$P(NODE,"^",14)
"RTN","IBDFU1",29,0)
 S IBLIST("OVERFLOW")=+$P(NODE,"^",15)
"RTN","IBDFU1",30,0)
 S IBLIST("OTHER")=$P(NODE,"^",16)
"RTN","IBDFU1",31,0)
 S (IBLIST("NAR_READ"),IBLIST("NAR_PRINT"),IBLIST("CODE_READ"),IBLIST("CODE_PRINT"))=0
"RTN","IBDFU1",32,0)
 I $P(NODE,"^",17)=1 S IBLIST("NAR_PRINT")=1,IBLIST("CODE_PRINT")=0
"RTN","IBDFU1",33,0)
 I $P(NODE,"^",17)=2 S IBLIST("NAR_PRINT")=0,IBLIST("CODE_PRINT")=1
"RTN","IBDFU1",34,0)
 I $P(NODE,"^",17)=3 S IBLIST("NAR_PRINT")=1,IBLIST("CODE_PRINT")=1
"RTN","IBDFU1",35,0)
 I $P(NODE,"^",18)=1 S IBLIST("NAR_READ")=1,IBLIST("CODE_READ")=0
"RTN","IBDFU1",36,0)
 I $P(NODE,"^",18)=2 S IBLIST("NAR_READ")=0,IBLIST("CODE_READ")=1
"RTN","IBDFU1",37,0)
 I $P(NODE,"^",18)=3 S IBLIST("NAR_READ")=1,IBLIST("CODE_READ")=1
"RTN","IBDFU1",38,0)
 ;
"RTN","IBDFU1",39,0)
 ;go to the package interface
"RTN","IBDFU1",40,0)
 S NODE="" S:IBLIST("RTN") NODE=$G(^IBE(357.6,IBLIST("RTN"),16))
"RTN","IBDFU1",41,0)
 S IBLIST("NAR_DATATYPE")=$P(NODE,"^",2),IBLIST("NAR_HDR")=$P(NODE,"^",3),IBLIST("CODE_DATATYPE")=$P(NODE,"^",6),IBLIST("CODE_HDR")=$P(NODE,"^",7)
"RTN","IBDFU1",42,0)
 ;
"RTN","IBDFU1",43,0)
 S IBLIST("SC0")=IBLIST("DYNAMIC")&IBLIST("INPUT_RTN")
"RTN","IBDFU1",44,0)
 ;get column information
"RTN","IBDFU1",45,0)
 F J=1:1:4 S C=$O(^IBE(357.2,IBLIST,1,"B",J,"")) S NODE=$S('C:"",1:$G(^IBE(357.2,IBLIST,1,C,0))) S IBLIST("Y",J)=$P(NODE,"^",2),IBLIST("X",J)=$P(NODE,"^",3),IBLIST("H",J)=$P(NODE,"^",4)
"RTN","IBDFU1",46,0)
 ;get subcolumn information
"RTN","IBDFU1",47,0)
 I IBLIST("SC0") S IBLIST("SCHDR",0)="",IBLIST("SCW",0)=4,IBLIST("SCTYPE",0)=1,IBLIST("SCPIECE",0)=0,IBLIST("SCEDITABLE",0)=0,IBLIST("NOUL",0)=0
"RTN","IBDFU1",48,0)
 F J=1:1:8 S C=$O(^IBE(357.2,IBLIST,2,"B",J,"")) S NODE=$S('C:"",1:$G(^IBE(357.2,IBLIST,2,C,0))) D
"RTN","IBDFU1",49,0)
 .S IBLIST("SCTYPE",J)=$P(NODE,"^",4) Q:'IBLIST("SCTYPE",J)
"RTN","IBDFU1",50,0)
 .S IBLIST("SCHDR",J)=$P(NODE,"^",2) S:IBLIST("SCHDR",J)=" " IBLIST("SCHDR",J)="" S IBLIST("SCW",J)=$P(NODE,"^",3)
"RTN","IBDFU1",51,0)
 .I IBLIST("SCTYPE",J)=1 S IBLIST("SCPIECE",J)=$P(NODE,"^",5),IBLIST("SCEDITABLE",J)=$P(NODE,"^",7),IBLIST("NOUL",J)=$P(NODE,"^",8) D
"RTN","IBDFU1",52,0)
 ..I IBLIST("SCPIECE",J)=1,IBLIST("RTN") S IBLIST("SCEDITABLE",J)=$S($P($G(^IBE(357.6,IBLIST("RTN"),2)),"^",2)="":1,1:0)
"RTN","IBDFU1",53,0)
 .I IBLIST("SCTYPE",J)=2 D
"RTN","IBDFU1",54,0)
 ..S IBLIST("SCSYMBOL",J)=$P(NODE,"^",6)
"RTN","IBDFU1",55,0)
 ..S IBLIST("NOUL",J)=$P(NODE,"^",8),IBLIST("ROUTINE",J)=""
"RTN","IBDFU1",56,0)
 ..S IBLIST("QLFR",J)=$P(NODE,"^",9),IBLIST("RULE",J)=+$P(NODE,"^",10)
"RTN","IBDFU1",57,0)
 ..I 'IBLIST("SCSYMBOL",J) S IBLIST("SCSYMBOL",I)="",IBLIST("SCW",J)=0 Q
"RTN","IBDFU1",58,0)
 ..S NODE=$G(^IBE(357.91,IBLIST("SCSYMBOL",J),0))
"RTN","IBDFU1",59,0)
 ..I '$P(NODE,"^",4) S IBLIST("SCSYMBOL",J)=$P(NODE,"^",2),IBLIST("SCW",J)=$L(IBLIST("SCSYMBOL",J)) D  Q
"RTN","IBDFU1",60,0)
 ...I $L($G(IBLIST("SCHDR",J)))>IBLIST("SCW",J) S IBLIST("SCW",J)=$L(IBLIST("SCHDR",J)),IBLIST("SCSYMBOL",J)=$J($$CJ^XLFSTR(IBLIST("SCSYMBOL",J),IBLIST("SCW",J)),IBLIST("SCW",J))
"RTN","IBDFU1",61,0)
 ..;may need to call a special procedure if printing to a PCL printer
"RTN","IBDFU1",62,0)
 ..I $E($P(NODE,"^"),1,6)="BUBBLE" D
"RTN","IBDFU1",63,0)
 ...S IBLIST("ROUTINE",J)="BUBBLE",IBLIST("SCW",J)=3,IBLIST("SCSYMBOL",J)="   "
"RTN","IBDFU1",64,0)
 ...I $L(IBLIST("SCHDR",J))>IBLIST("SCW",J) S IBLIST("SCW",J)=$L(IBLIST("SCHDR",J)),IBLIST("SCSYMBOL",J)=$J(" ",IBLIST("SCW",J))
"RTN","IBDFU1",65,0)
 Q 0
"RTN","IBDFU1",66,0)
 ;
"RTN","IBDFU1",67,0)
LSTDSCR2(IBLIST) ;parses the IBLIST record pointed to by IBBLK and puts the
"RTN","IBDFU1",68,0)
 ;descripition in IBLIST(just what's needed while editing the selection
"RTN","IBDFU1",69,0)
 ;list, not for printing it) in- should be called by reference
"RTN","IBDFU1",70,0)
 ;returns 1 if list description not found
"RTN","IBDFU1",71,0)
 N NODE,J,C
"RTN","IBDFU1",72,0)
 S NODE=$G(^IBE(357.2,IBLIST,0))
"RTN","IBDFU1",73,0)
 Q:NODE="" 1
"RTN","IBDFU1",74,0)
 S IBLIST("RTN")=$P(NODE,"^",11)
"RTN","IBDFU1",75,0)
 S IBLIST("DYNAMIC")=+$P(NODE,"^",14)
"RTN","IBDFU1",76,0)
 S IBLIST("BTWN")=$P(NODE,"^",8)
"RTN","IBDFU1",77,0)
 ;get subcolumn information
"RTN","IBDFU1",78,0)
 F J=1:1:8 S C=$O(^IBE(357.2,IBLIST,2,"B",J,"")) S NODE=$S('C:"",1:$G(^IBE(357.2,IBLIST,2,C,0))) D
"RTN","IBDFU1",79,0)
 .Q:NODE=""  S IBLIST("SCTYPE",J)=$P(NODE,"^",4) Q:'IBLIST("SCTYPE",J)
"RTN","IBDFU1",80,0)
 .S IBLIST("SCHDR",J)=$P(NODE,"^",2),IBLIST("SCW",J)=$P(NODE,"^",3)
"RTN","IBDFU1",81,0)
 .I IBLIST("SCTYPE",J)=1 S IBLIST("SCPIECE",J)=$P(NODE,"^",5),IBLIST("SCEDITABLE",J)=$P(NODE,"^",7) I IBLIST("SCPIECE",J)=1,IBLIST("RTN") S IBLIST("SCEDITABLE",J)=$S($P($G(^IBE(357.6,IBLIST("RTN"),2)),"^",2)="":1,1:0)
"RTN","IBDFU1",82,0)
 Q 0
"RTN","IBDFU1",83,0)
 ;
"RTN","IBDFU1",84,0)
SCDESCR(LIST,CWIDTH) ;computes the offsets for each subcolumn and
"RTN","IBDFU1",85,0)
 ;computes the column width (CWIDTH)
"RTN","IBDFU1",86,0)
 N I,SCHDR,CHDR,W,FLAG
"RTN","IBDFU1",87,0)
 ;CHDR will be the line with all the subcolumn headers
"RTN","IBDFU1",88,0)
 S CWIDTH=LINE+$L($P(LIST("SEP"),"|",2))
"RTN","IBDFU1",89,0)
 S CHDR="",FLAG=0
"RTN","IBDFU1",90,0)
 F I=1-LIST("SC0"):1:8 D
"RTN","IBDFU1",91,0)
 .I (LIST("SCTYPE",I)'=1)&(LIST("SCTYPE",I)'=2) S LIST("SCTYPE",I)="" Q
"RTN","IBDFU1",92,0)
 .I 'LIST("SCW",I) S LIST("SCTYPE",I)="" Q
"RTN","IBDFU1",93,0)
 .I LIST("SCHDR",I)'="" S FLAG=1,LIST("SCHDR",I)=$E(LIST("SCHDR",I),1,LIST("SCW",I))
"RTN","IBDFU1",94,0)
 .S LIST("SCOS",I)=CWIDTH+((LIST("SCW",I)-$L(LIST("SCHDR",I)))\2)
"RTN","IBDFU1",95,0)
 .S CWIDTH=CWIDTH+LIST("SCW",I)+$L(LIST("SEP"))
"RTN","IBDFU1",96,0)
 .S SCHDR=LIST("SCHDR",I)
"RTN","IBDFU1",97,0)
 .S W=$L(SCHDR)
"RTN","IBDFU1",98,0)
 .S SCHDR=$$PADRIGHT^IBDFU($J(SCHDR,W+((LIST("SCW",I)-W)\2)),LIST("SCW",I))
"RTN","IBDFU1",99,0)
 .S:CHDR'="" CHDR=CHDR_$J("",$L(LIST("SEP")))
"RTN","IBDFU1",100,0)
 .S CHDR=CHDR_SCHDR
"RTN","IBDFU1",101,0)
 ;
"RTN","IBDFU1",102,0)
 ;calculate the column width
"RTN","IBDFU1",103,0)
 S CWIDTH=CWIDTH-$L($P(LIST("SEP"),"|"))
"RTN","IBDFU1",104,0)
 ;
"RTN","IBDFU1",105,0)
 ;if there were no subcolumn headers then that line is empty, don't print
"RTN","IBDFU1",106,0)
 I 'FLAG S LIST("CHDR")="" Q
"RTN","IBDFU1",107,0)
 S LIST("CHDR")=LIST("SEP2")_CHDR
"RTN","IBDFU1",108,0)
 Q
"RTN","IBDFU10")
0^236^B696220
"RTN","IBDFU10",1,0)
IBDFU10 ;ALB/CJM - ENCOUNTER FORM (uncompile forms,blocks);DEC 14,1993
"RTN","IBDFU10",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU10",3,0)
UNCMPILE ;
"RTN","IBDFU10",4,0)
 N BLK,FORM
"RTN","IBDFU10",5,0)
 ;
"RTN","IBDFU10",6,0)
 W !,"Beginning to Uncompile Forms and Blocks"
"RTN","IBDFU10",7,0)
 ;
"RTN","IBDFU10",8,0)
 ;set COMPILED? field for forms to 0
"RTN","IBDFU10",9,0)
 S FORM=0 F  S FORM=$O(^IBE(357,FORM)) Q:'FORM  S $P(^IBE(357,FORM,0),"^",5)=0
"RTN","IBDFU10",10,0)
 ;
"RTN","IBDFU10",11,0)
 ;delete cross-references for compiled blocks
"RTN","IBDFU10",12,0)
 S BLK=0 F  S BLK=$O(^IBE(357.1,BLK)) Q:'BLK  D UNCMPBLK^IBDF19(BLK)
"RTN","IBDFU10",13,0)
 ;
"RTN","IBDFU10",14,0)
 W !,"Forms and Blocks have been Uncompiled!"
"RTN","IBDFU10",15,0)
 Q
"RTN","IBDFU1A")
0^237^B2262164
"RTN","IBDFU1A",1,0)
IBDFU1A ;ALB/CJM - ENCOUNTER FORM (read data field description);NOV 16,1992
"RTN","IBDFU1A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU1A",3,0)
 ;utilities
"RTN","IBDFU1A",4,0)
FLDDESCR(IBFLD) ;IBFLD should be a pointer to the IB DATA FIELD file
"RTN","IBDFU1A",5,0)
 ;parses the 0 NODE and returns the fields
"RTN","IBDFU1A",6,0)
 ;returns 1 if the field description is not found
"RTN","IBDFU1A",7,0)
 N NODE
"RTN","IBDFU1A",8,0)
 Q:'$G(IBFLD) 0
"RTN","IBDFU1A",9,0)
 S:$G(IBFLD) NODE=$G(^IBE(357.5,IBFLD,0))
"RTN","IBDFU1A",10,0)
 Q:NODE="" 0
"RTN","IBDFU1A",11,0)
 S FLDNAME=$P(NODE,"^",1)
"RTN","IBDFU1A",12,0)
 S BLK=$P(NODE,"^",2)
"RTN","IBDFU1A",13,0)
 S RTN=$P(NODE,"^",3)
"RTN","IBDFU1A",14,0)
 S LASTITEM=$P(NODE,"^",4)
"RTN","IBDFU1A",15,0)
 S ITEM=+$P(NODE,"^",5)
"RTN","IBDFU1A",16,0)
 S LABEL=$P(NODE,"^",6)
"RTN","IBDFU1A",17,0)
 S DISPLAY=$P(NODE,"^",7)
"RTN","IBDFU1A",18,0)
 S XIO=+$P(NODE,"^",10)
"RTN","IBDFU1A",19,0)
 S YIO=+$P(NODE,"^",11)
"RTN","IBDFU1A",20,0)
 S HIO=+$P(NODE,"^",12)
"RTN","IBDFU1A",21,0)
 S SPACING=$P(NODE,"^",13)
"RTN","IBDFU1A",22,0)
 S WIO=+$P(NODE,"^",14)
"RTN","IBDFU1A",23,0)
 Q 1
"RTN","IBDFU1A",24,0)
SFLDDSCR(IBFLD,LAST) ;gets the next subfield - LAST is the last subfield processed, IBFLD  is the field
"RTN","IBDFU1A",25,0)
 ;outputs - LABEL,XIO,YIO,WIO,XLAB,YLAB,PIECE,LENGTH,LAST
"RTN","IBDFU1A",26,0)
 ;returns 0 if no more subfields, LAST otherwise
"RTN","IBDFU1A",27,0)
 ;
"RTN","IBDFU1A",28,0)
 N NODE
"RTN","IBDFU1A",29,0)
 F  S LAST=$O(^IBE(357.5,IBFLD,2,LAST)) Q:'LAST  S NODE=$G(^IBE(357.5,IBFLD,2,LAST,0)) I NODE'="" D  Q
"RTN","IBDFU1A",30,0)
 .S LABEL=$P(NODE,"^",1),DISPLAY=$P(NODE,"^",3),XLAB=$P(NODE,"^",4),YLAB=$P(NODE,"^",5),YIO=$P(NODE,"^",6),XIO=$P(NODE,"^",7),WIO=$P(NODE,"^",8),PIECE=$P(NODE,"^",9)
"RTN","IBDFU1A",31,0)
 Q LAST
"RTN","IBDFU1B")
0^238^B23536814
"RTN","IBDFU1B",1,0)
IBDFU1B ;ALB/CJM - ENCOUNTER FORM ;NOV 16,1992
"RTN","IBDFU1B",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU1B",3,0)
 ;utilities
"RTN","IBDFU1B",4,0)
BLKDESCR(IBBLK) ;parses the block record pointed to by IBBLK and puts the
"RTN","IBDFU1B",5,0)
 ;descripition in IBBLK array - should be called by reference
"RTN","IBDFU1B",6,0)
 ;returns 1 if block description is too incomplete to print block
"RTN","IBDFU1B",7,0)
 Q:'$G(IBBLK) 1
"RTN","IBDFU1B",8,0)
 N NODE0
"RTN","IBDFU1B",9,0)
 S NODE0=$G(^IBE(357.1,IBBLK,0))
"RTN","IBDFU1B",10,0)
 S IBBLK("NAME")=$P(NODE0,"^",1)
"RTN","IBDFU1B",11,0)
 S IBBLK("Y")=$P(NODE0,"^",4)
"RTN","IBDFU1B",12,0)
 S IBBLK("X")=$P(NODE0,"^",5)
"RTN","IBDFU1B",13,0)
 S IBBLK("W")=$P(NODE0,"^",6)
"RTN","IBDFU1B",14,0)
 S IBBLK("H")=$P(NODE0,"^",7)
"RTN","IBDFU1B",15,0)
 S IBBLK("BOX")=$P(NODE0,"^",10)
"RTN","IBDFU1B",16,0)
 S IBBLK("HDR")=$P(NODE0,"^",11)
"RTN","IBDFU1B",17,0)
 S IBBLK("HDISP")=$P(NODE0,"^",12)
"RTN","IBDFU1B",18,0)
 S IBBLK("S")=$P(NODE0,"^",3)
"RTN","IBDFU1B",19,0)
 S IBBLK("PAGE")=1+(IBBLK("Y")\IBFORM("PAGE_HT"))
"RTN","IBDFU1B",20,0)
 Q:NODE0="" 1
"RTN","IBDFU1B",21,0)
 Q 0
"RTN","IBDFU1B",22,0)
 ;
"RTN","IBDFU1B",23,0)
RTNDSCR(RTN) ;RTN should be a pointer to the Package Interface file
"RTN","IBDFU1B",24,0)
 ;RTN should be passed by reference
"RTN","IBDFU1B",25,0)
 ;
"RTN","IBDFU1B",26,0)
 N NODE
"RTN","IBDFU1B",27,0)
 S NODE="",RTN=+$G(RTN)
"RTN","IBDFU1B",28,0)
 S:RTN NODE=$G(^IBE(357.6,RTN,0))
"RTN","IBDFU1B",29,0)
 S RTN("ACTION")=$P(NODE,"^",6)
"RTN","IBDFU1B",30,0)
 ;
"RTN","IBDFU1B",31,0)
 ;for input interfaces (mapping)
"RTN","IBDFU1B",32,0)
 I RTN("ACTION")=1 D  Q
"RTN","IBDFU1B",33,0)
 .S RTN("AVAIL")=$P(NODE,"^",9)
"RTN","IBDFU1B",34,0)
 .Q
"RTN","IBDFU1B",35,0)
 ;
"RTN","IBDFU1B",36,0)
 ;for output interfaces
"RTN","IBDFU1B",37,0)
 I RTN("ACTION")=2 D  Q
"RTN","IBDFU1B",38,0)
 .N NODFN
"RTN","IBDFU1B",39,0)
 .S NODFN=$P(NODE,"^",15)
"RTN","IBDFU1B",40,0)
 .S RTN("NAME")=$P(NODE,"^",1)
"RTN","IBDFU1B",41,0)
 .S RTN("RTN")=$P(NODE,"^",2,3)
"RTN","IBDFU1B",42,0)
 .S RTN("CHANGES")=$P(NODE,"^",5)
"RTN","IBDFU1B",43,0)
 .S RTN("DATATYPE")=$P(NODE,"^",7)
"RTN","IBDFU1B",44,0)
 .S RTN("FULL")=$P(NODE,"^",8)
"RTN","IBDFU1B",45,0)
 .S RTN("AVAIL")=$P(NODE,"^",9)
"RTN","IBDFU1B",46,0)
 .S RTN("ENTRY")=$S(RTN:$G(^IBE(357.6,RTN,4)),1:"")
"RTN","IBDFU1B",47,0)
 .S RTN("EXIT")=$S(RTN:$G(^IBE(357.6,RTN,5)),1:"")
"RTN","IBDFU1B",48,0)
 .;determine where the interface should put the data
"RTN","IBDFU1B",49,0)
 .I NODFN S RTN("DATA_LOCATION")="^TMP(""IB"",$J,""INTERFACES"","""_RTN("NAME")_""")"
"RTN","IBDFU1B",50,0)
 .I 'NODFN S RTN("DATA_LOCATION")="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN),"""_RTN("NAME")_""")"
"RTN","IBDFU1B",51,0)
 ;
"RTN","IBDFU1B",52,0)
 ;for selection interfaces
"RTN","IBDFU1B",53,0)
 I RTN("ACTION")=3 D  Q
"RTN","IBDFU1B",54,0)
 .S RTN("NAME")=$P(NODE,"^",1)
"RTN","IBDFU1B",55,0)
 .S RTN("RTN")=$P(NODE,"^",2,3)
"RTN","IBDFU1B",56,0)
 .S RTN("FULL")=$P(NODE,"^",8)
"RTN","IBDFU1B",57,0)
 .S RTN("AVAIL")=$P(NODE,"^",9)
"RTN","IBDFU1B",58,0)
 .S RTN("DYNAMIC")=$P(NODE,"^",14)
"RTN","IBDFU1B",59,0)
 .S RTN("ENTRY")=$S(RTN:$G(^IBE(357.6,RTN,4)),1:"")
"RTN","IBDFU1B",60,0)
 .S RTN("EXIT")=$S(RTN:$G(^IBE(357.6,RTN,5)),1:"")
"RTN","IBDFU1B",61,0)
 .S RTN("DATA_LOCATION")="^TMP(""IB"",$J,""INTERFACES"","""_RTN("NAME")_""")"
"RTN","IBDFU1B",62,0)
 .S RTN("NAME",1)=$$DATANAME(RTN,1),RTN("WIDTH",1)=$$DATANODE(RTN,1)
"RTN","IBDFU1B",63,0)
 .S RTN("INPUT_RTN")=$P(NODE,"^",13)
"RTN","IBDFU1B",64,0)
 ;
"RTN","IBDFU1B",65,0)
 ;for reports
"RTN","IBDFU1B",66,0)
 I RTN("ACTION")=4 D  Q
"RTN","IBDFU1B",67,0)
 .S RTN("RTN")=$P(NODE,"^",2,3)
"RTN","IBDFU1B",68,0)
 .S RTN("AVAIL")=$P(NODE,"^",9)
"RTN","IBDFU1B",69,0)
 .S RTN("HSMRY?")=$P(NODE,"^",10)
"RTN","IBDFU1B",70,0)
 .S RTN("HSMRY")=$P(NODE,"^",11)
"RTN","IBDFU1B",71,0)
 .S RTN("ENTRY")=$S(RTN:$G(^IBE(357.6,RTN,4)),1:"")
"RTN","IBDFU1B",72,0)
 .S RTN("EXIT")=$S(RTN:$G(^IBE(357.6,RTN,5)),1:"")
"RTN","IBDFU1B",73,0)
 ;
"RTN","IBDFU1B",74,0)
 ;in case the action type is not defined
"RTN","IBDFU1B",75,0)
 S RTN("NAME")=$P(NODE,"^",1)
"RTN","IBDFU1B",76,0)
 S RTN("RTN")=$P(NODE,"^",2,3)
"RTN","IBDFU1B",77,0)
 S RTN("CHANGES")=$P(NODE,"^",5)
"RTN","IBDFU1B",78,0)
 S RTN("DATATYPE")=$P(NODE,"^",7)
"RTN","IBDFU1B",79,0)
 S RTN("FULL")=$P(NODE,"^",8)
"RTN","IBDFU1B",80,0)
 S RTN("AVAIL")=$P(NODE,"^",9)
"RTN","IBDFU1B",81,0)
 S RTN("DYNAMIC")=$P(NODE,"^",14)
"RTN","IBDFU1B",82,0)
 S RTN("ENTRY")=$S(RTN:$G(^IBE(357.6,RTN,4)),1:"")
"RTN","IBDFU1B",83,0)
 S RTN("EXIT")=$S(RTN:$G(^IBE(357.6,RTN,5)),1:"")
"RTN","IBDFU1B",84,0)
 ;
"RTN","IBDFU1B",85,0)
 ;I FULL,RTN S IEN=0 F  S IEN=$O(^IBE(357.6,RTN,15,IEN)) Q:'IEN  S NODE=$G(^IBE(357.6,RTN,15,IEN,0)) D
"RTN","IBDFU1B",86,0)
 ;.S I=$P(NODE,"^",3)
"RTN","IBDFU1B",87,0)
 ;.Q:'I
"RTN","IBDFU1B",88,0)
 ;.S RTN("NODE",I)=$P(NODE,"^",4),RTN("NAME",I)=$P(NODE,"^")
"RTN","IBDFU1B",89,0)
 Q
"RTN","IBDFU1B",90,0)
 ;
"RTN","IBDFU1B",91,0)
WARNING(OBJECT) ; displays a warning
"RTN","IBDFU1B",92,0)
 S:'$D(OBJECT) OBJECT="object"
"RTN","IBDFU1B",93,0)
 W !,"WARNING! The "_OBJECT_" is partially outside the block."
"RTN","IBDFU1B",94,0)
 D PAUSE^IBDFU5
"RTN","IBDFU1B",95,0)
 Q
"RTN","IBDFU1B",96,0)
 ; ** The following routines assume BLKDESCR has been called and the IBBLK array is defined
"RTN","IBDFU1B",97,0)
 ;
"RTN","IBDFU1B",98,0)
MINX() ;the smallest X a block element can begin at
"RTN","IBDFU1B",99,0)
 Q $S((IBBLK("BOX")=1):1,1:0)
"RTN","IBDFU1B",100,0)
 ;
"RTN","IBDFU1B",101,0)
MAXX() ;the largest X a block element can begin at
"RTN","IBDFU1B",102,0)
 Q (IBBLK("W")-(1+$S(IBBLK("BOX")=1:1,1:0)))
"RTN","IBDFU1B",103,0)
 ;
"RTN","IBDFU1B",104,0)
MINY() ;the smallest Y a block element can begin at
"RTN","IBDFU1B",105,0)
 Q $S(IBBLK("BOX")=1:1,1:0)
"RTN","IBDFU1B",106,0)
 ;
"RTN","IBDFU1B",107,0)
MAXY() ;the largest Y a block element can begin at
"RTN","IBDFU1B",108,0)
 Q (IBBLK("H")-(1+$S((IBBLK("BOX")=1):1,1:0)))
"RTN","IBDFU1B",109,0)
 ;
"RTN","IBDFU1B",110,0)
DORTN(IBRTN) ;calls the rtn specified by the pkg interface if ok
"RTN","IBDFU1B",111,0)
 ;IBRTN is an array containing data from the package interface in format returned by RTNDESCR and MUST be passed by reference
"RTN","IBDFU1B",112,0)
 ;returns 0 if not successful, 1 otherwise
"RTN","IBDFU1B",113,0)
 N QUIT,VARIABLE,VARIEN,IBARY
"RTN","IBDFU1B",114,0)
 S QUIT=0
"RTN","IBDFU1B",115,0)
 ;
"RTN","IBDFU1B",116,0)
 ;set IBARY to node where the interface should return the data
"RTN","IBDFU1B",117,0)
 I (IBRTN("ACTION")=2)!(IBRTN("ACTION")=3) D
"RTN","IBDFU1B",118,0)
 .S IBARY=IBRTN("DATA_LOCATION")
"RTN","IBDFU1B",119,0)
 .K @IBARY
"RTN","IBDFU1B",120,0)
 ;
"RTN","IBDFU1B",121,0)
 Q:IBRTN("AVAIL")'=1 0
"RTN","IBDFU1B",122,0)
 ;
"RTN","IBDFU1B",123,0)
 ;verify that required variables exist
"RTN","IBDFU1B",124,0)
 S VARIEN=0 F  S VARIEN=$O(^IBE(357.6,IBRTN,7,VARIEN)) Q:'VARIEN  S VARIABLE=$P($G(^IBE(357.6,IBRTN,7,VARIEN,0)),"^") I '$D(@VARIABLE) S QUIT=1 Q
"RTN","IBDFU1B",125,0)
 Q:QUIT 0
"RTN","IBDFU1B",126,0)
 ;
"RTN","IBDFU1B",127,0)
 ;new protected variables
"RTN","IBDFU1B",128,0)
 S VARIEN=0 F  S VARIEN=$O(^IBE(357.6,IBRTN,6,VARIEN)) Q:'VARIEN  S VARIABLE=$P($G(^IBE(357.6,IBRTN,6,VARIEN,0)),"^")  N @VARIABLE
"RTN","IBDFU1B",129,0)
 ;
"RTN","IBDFU1B",130,0)
 ;make sure the entry point is known
"RTN","IBDFU1B",131,0)
 Q:$G(IBRTN("RTN"))="" 0
"RTN","IBDFU1B",132,0)
 ;
"RTN","IBDFU1B",133,0)
 ;make sure the entry point exists
"RTN","IBDFU1B",134,0)
 Q:$P(IBRTN("RTN"),"^",2)="" 0
"RTN","IBDFU1B",135,0)
 I $P(IBRTN("RTN"),"^")'="" Q:'$L($T(@$P(IBRTN("RTN"),"^")^@$P($P(IBRTN("RTN"),"^",2),"("))) 0
"RTN","IBDFU1B",136,0)
 I $P(IBRTN("RTN"),"^")="" Q:'$L($T(^@$P($P(IBRTN("RTN"),"^",2),"("))) 0
"RTN","IBDFU1B",137,0)
 ;
"RTN","IBDFU1B",138,0)
 ;call the interface routine,xecute the entry and exit actions
"RTN","IBDFU1B",139,0)
 X IBRTN("ENTRY")
"RTN","IBDFU1B",140,0)
 D @IBRTN("RTN")
"RTN","IBDFU1B",141,0)
 X IBRTN("EXIT")
"RTN","IBDFU1B",142,0)
 Q 1
"RTN","IBDFU1B",143,0)
 ;
"RTN","IBDFU1B",144,0)
DATANAME(RTN,PIECE) ;returns the name of the data for field=piece
"RTN","IBDFU1B",145,0)
 Q:'RTN!'PIECE ""
"RTN","IBDFU1B",146,0)
 I PIECE=1 Q $P($G(^IBE(357.6,RTN,2)),"^")
"RTN","IBDFU1B",147,0)
 N NODE,IEN
"RTN","IBDFU1B",148,0)
 S IEN=$O(^IBE(357.6,RTN,15,"C",PIECE,0))
"RTN","IBDFU1B",149,0)
 Q:'IEN ""
"RTN","IBDFU1B",150,0)
 Q $P($G(^IBE(357.6,RTN,15,IEN,0)),"^")
"RTN","IBDFU1B",151,0)
 ;
"RTN","IBDFU1B",152,0)
DATANODE(RTN,PIECE) ;returns the node that the field=piece is on
"RTN","IBDFU1B",153,0)
 Q:'RTN!'PIECE ""
"RTN","IBDFU1B",154,0)
 I PIECE=1 Q ""
"RTN","IBDFU1B",155,0)
 S IEN=$O(^IBE(357.6,RTN,15,"C",PIECE,0))
"RTN","IBDFU1B",156,0)
 Q:'IEN ""
"RTN","IBDFU1B",157,0)
 Q $P($G(^IBE(357.6,RTN,15,IEN,0)),"^",4)
"RTN","IBDFU1B",158,0)
 ;
"RTN","IBDFU1B",159,0)
DATATYPE(TYPE) ;returns the description of the datatype=TYPE
"RTN","IBDFU1B",160,0)
 ;TYPE must be passed by reference
"RTN","IBDFU1B",161,0)
 ;
"RTN","IBDFU1B",162,0)
 N NODE
"RTN","IBDFU1B",163,0)
 S NODE=""
"RTN","IBDFU1B",164,0)
 I $G(TYPE) S NODE=$G(^IBE(359.1,TYPE,0))
"RTN","IBDFU1B",165,0)
 S TYPE("SPACE")=$P(NODE,"^",6)
"RTN","IBDFU1B",166,0)
 S TYPE("MAX_INPUT")=$P(NODE,"^",2)
"RTN","IBDFU1B",167,0)
 S TYPE("FORMAT")=$P(NODE,"^",5)
"RTN","IBDFU1B",168,0)
 Q
"RTN","IBDFU1C")
0^239^B15403409
"RTN","IBDFU1C",1,0)
IBDFU1C ;ALB/CJM - ENCOUNTER FORM (sets various parameters);Jan 5, 1995
"RTN","IBDFU1C",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU1C",3,0)
 ;utilities
"RTN","IBDFU1C",4,0)
 ;
"RTN","IBDFU1C",5,0)
FORMDSCR(IBFORM) ;
"RTN","IBDFU1C",6,0)
 ;IBFORM=ien of form - sets the IBFORM array with form parameterss - should be passed by reference
"RTN","IBDFU1C",7,0)
 ;returns 1=ok, 0=failure
"RTN","IBDFU1C",8,0)
 ;
"RTN","IBDFU1C",9,0)
 Q:'IBFORM 0
"RTN","IBDFU1C",10,0)
 N NODE,MODE,SUB
"RTN","IBDFU1C",11,0)
 S NODE=$G(^IBE(357,IBFORM,0))
"RTN","IBDFU1C",12,0)
 Q:NODE="" 0
"RTN","IBDFU1C",13,0)
 S IBFORM("NAME")=$P(NODE,"^")
"RTN","IBDFU1C",14,0)
 S IBFORM("WIDTH")=$P(NODE,"^",9) S:'IBFORM("WIDTH") IBFORM("WIDTH")=133
"RTN","IBDFU1C",15,0)
 S IBFORM("PAGE_HT")=$P(NODE,"^",10) S:'IBFORM("PAGE_HT") IBFORM("PAGE_HT")=80
"RTN","IBDFU1C",16,0)
 S IBFORM("PAGES")=$P(NODE,"^",11) S:'IBFORM("PAGES") IBFORM("PAGES")=1
"RTN","IBDFU1C",17,0)
 S IBFORM("HT")=IBFORM("PAGE_HT")*IBFORM("PAGES")
"RTN","IBDFU1C",18,0)
 S IBFORM("TOOLKIT")=$P(NODE,"^",7)
"RTN","IBDFU1C",19,0)
 S IBFORM("COMPILED")=0 I +$P(NODE,"^",5),+$P(NODE,"^",13) S IBFORM("COMPILED")=1
"RTN","IBDFU1C",20,0)
 ;S IBFORM("COMPILED")=+$P(NODE,"^",5)
"RTN","IBDFU1C",21,0)
 S IBFORM("SCAN")=$P(NODE,"^",12)
"RTN","IBDFU1C",22,0)
 S IBFORM("SCAN","ICR")=$S(IBFORM("SCAN"):$P(NODE,"^",6),1:0)
"RTN","IBDFU1C",23,0)
 S IBFORM("TYPE")=$P(NODE,"^",13)
"RTN","IBDFU1C",24,0)
 ;
"RTN","IBDFU1C",25,0)
 S MODE=$P(NODE,"^",2)
"RTN","IBDFU1C",26,0)
 S IBFORM("PRINT_MODE")=$S(MODE=1:"DUPLEX_LONG",MODE=2:"DUPLEX_SHORT",1:"SIMPLEX")
"RTN","IBDFU1C",27,0)
 ;
"RTN","IBDFU1C",28,0)
 ;pages to be scanned
"RTN","IBDFU1C",29,0)
 I IBFORM("SCAN") S SUB=0 F  S SUB=$O(^IBE(357,IBFORM,2,SUB)) Q:'SUB  S NODE=$G(^IBE(357,IBFORM,2,SUB,0)) I +NODE,$P(NODE,"^",2) S IBFORM("SCAN",+NODE)=1
"RTN","IBDFU1C",30,0)
 Q 1
"RTN","IBDFU1C",31,0)
 ;
"RTN","IBDFU1C",32,0)
FORMSIZE(IBFORM) ;pass IBFORM by reference
"RTN","IBDFU1C",33,0)
 ;returns 0=failure, 1=success
"RTN","IBDFU1C",34,0)
 N NODE
"RTN","IBDFU1C",35,0)
 S NODE=$G(^IBE(357,IBFORM,0))
"RTN","IBDFU1C",36,0)
 Q:NODE="" 0
"RTN","IBDFU1C",37,0)
 S IBFORM("WIDTH")=$P(NODE,"^",9) S:'IBFORM("WIDTH") IBFORM("WIDTH")=133
"RTN","IBDFU1C",38,0)
 S IBFORM("PAGE_HT")=$P(NODE,"^",10) S:'IBFORM("PAGE_HT") IBFORM("PAGE_HT")=80
"RTN","IBDFU1C",39,0)
 S IBFORM("PAGES")=$P(NODE,"^",11) S:'IBFORM("PAGES") IBFORM("PAGES")=1
"RTN","IBDFU1C",40,0)
 S IBFORM("HT")=IBFORM("PAGE_HT")*IBFORM("PAGES")
"RTN","IBDFU1C",41,0)
 Q 1
"RTN","IBDFU1C",42,0)
 ;
"RTN","IBDFU1C",43,0)
ARRAYS(IBFORM,IBARRAY) ;decide what arrays will be used to contain the form
"RTN","IBDFU1C",44,0)
 ;pass IBFORM,IBARRAY by reference
"RTN","IBDFU1C",45,0)
 ;
"RTN","IBDFU1C",46,0)
 ;non-toolkit forms are compiled
"RTN","IBDFU1C",47,0)
 I 'IBFORM("TOOLKIT") D
"RTN","IBDFU1C",48,0)
 .S IBARRAY("UNDERLINES")="^IBE(357,""AU"",IBFORM)"
"RTN","IBDFU1C",49,0)
 .S IBARRAY("CONTROLS")="^IBE(357,""AC"",IBFORM)"
"RTN","IBDFU1C",50,0)
 .S IBARRAY("GRAPHICS")="^IBE(357,""AG"",IBFORM)"
"RTN","IBDFU1C",51,0)
 .S IBARRAY("BOXES")="^IBE(357,""AB"",IBFORM)"
"RTN","IBDFU1C",52,0)
 .S IBARRAY("BUBBLES")=$S(IBFORM("TYPE"):"^IBD(357.95,""AC"",IBFORM(""TYPE""))",1:"^TMP(""IBDF"",$J,""FORM"",""BUBBLES"")")
"RTN","IBDFU1C",53,0)
 .S IBARRAY("HAND_PRINT")=$S(IBFORM("TYPE"):"^IBD(357.95,""AD"",IBFORM(""TYPE""))",1:"^TMP(""IBDF"",$J,""FORM"",""HAND PRINT"")")
"RTN","IBDFU1C",54,0)
 .;
"RTN","IBDFU1C",55,0)
 .;if using compiled version, use a copy of the text portion so as to not change it
"RTN","IBDFU1C",56,0)
 .I IBFORM("COMPILED") D
"RTN","IBDFU1C",57,0)
 ..N IBROW,TEXT
"RTN","IBDFU1C",58,0)
 ..S IBARRAY("TEXT")="^TMP(""IBDF"",$J,""FORM"")"
"RTN","IBDFU1C",59,0)
 ..S TEXT="^IBE(357,""AT"",IBFORM)"
"RTN","IBDFU1C",60,0)
 ..S IBROW="" F  S IBROW=$O(@TEXT@(IBROW)) Q:IBROW=""  S @IBARRAY("TEXT")@(IBROW)=$G(@TEXT@(IBROW))
"RTN","IBDFU1C",61,0)
 .;
"RTN","IBDFU1C",62,0)
 .I 'IBFORM("COMPILED") S IBARRAY("TEXT")="^IBE(357,""AT"",IBFORM)"
"RTN","IBDFU1C",63,0)
 ;
"RTN","IBDFU1C",64,0)
 ;toolkit forms don't have compiled versions
"RTN","IBDFU1C",65,0)
 I IBFORM("TOOLKIT") D
"RTN","IBDFU1C",66,0)
 .S IBARRAY("CONTROLS")="^TMP(""IBDF"",$J,""FORM"",""CTRL"")"
"RTN","IBDFU1C",67,0)
 .S IBARRAY("UNDERLINES")="^TMP(""IBDF"",$J,""FORM"",""UNDRLN"")"
"RTN","IBDFU1C",68,0)
 .S IBARRAY("GRAPHICS")="^TMP(""IBDF"",$J,""FORM"",""GRPHC"")"
"RTN","IBDFU1C",69,0)
 .S IBARRAY("BOXES")="^TMP(""IBDF"",$J,""FORM"",""BOXES"")"
"RTN","IBDFU1C",70,0)
 .S IBARRAY("BUBBLES")="^TMP(""IBDF"",$J,""FORM"",""BUBBLES"")"
"RTN","IBDFU1C",71,0)
 .S IBARRAY("HAND_PRINT")="^TMP(""IBDF"",$J,""FORM"",""HAND PRINT"")"
"RTN","IBDFU1C",72,0)
 .S IBARRAY("TEXT")="^TMP(""IBDF"",$J,""FORM"")"
"RTN","IBDFU1C",73,0)
 S IBARRAY("OVERFLOW")="^TMP(""IBDF"",$J,""OVERFLOW"")"
"RTN","IBDFU1C",74,0)
 Q
"RTN","IBDFU1C",75,0)
 ;
"RTN","IBDFU1C",76,0)
PRNTPRMS(IBPRINT,WITHDATA,ENTIRE,RECMPILE,WRITE) ;
"RTN","IBDFU1C",77,0)
 ;sets pararameters in the IBPRINT array that controll printing - pass IBPRINT by reference
"RTN","IBDFU1C",78,0)
 ;WITHDATA - whether to fill in the form with data
"RTN","IBDFU1C",79,0)
 ;ENTIRE - whether to print the non-data parts
"RTN","IBDFU1C",80,0)
 ;RECMPILE - whether blocks should be compiled, even if already compiled
"RTN","IBDFU1C",81,0)
 ;WRITE - only applies if RECMPILE - whether to print the block
"RTN","IBDFU1C",82,0)
 ;
"RTN","IBDFU1C",83,0)
 S IBPRINT("WITH_DATA")=WITHDATA
"RTN","IBDFU1C",84,0)
 S IBPRINT("ENTIRE")=ENTIRE
"RTN","IBDFU1C",85,0)
 S IBPRINT("COMPILING_BLOCKS")=RECMPILE
"RTN","IBDFU1C",86,0)
 S IBPRINT("WRITE_IF_COMPILING")=WRITE ;if IBPRINT("COMPILING_BLOCKS"),this =0 if the form isn't being printed, =1 if the form is being printed
"RTN","IBDFU1C",87,0)
 Q
"RTN","IBDFU2")
0^240^B27957994
"RTN","IBDFU2",1,0)
IBDFU2 ;ALB/CJM - ENCOUNTER FORM - BUILD FORM(copying blocks) ; 08-JAN-1993
"RTN","IBDFU2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU2",3,0)
 ;
"RTN","IBDFU2",4,0)
COPYBLK(OLDBLOCK,IBFORM,FROMFILE,TOFILE,ROW,COL,TKORDER,NAME,RECMPILE) ;copys OLDBLOCK in FROMFILE to IBFORM in TOFILE
"RTN","IBDFU2",5,0)
 ;makes the new block part of IBFORM if defined
"RTN","IBDFU2",6,0)
 ;places block at (ROW,COL) if defined
"RTN","IBDFU2",7,0)
 ;sets TOOL KIT ORDER TKORDER if defined and >0
"RTN","IBDFU2",8,0)
 ;sets the block name to NAME if defined
"RTN","IBDFU2",9,0)
 ;returns the ien of the new copy
"RTN","IBDFU2",10,0)
 ;RECMPILE means don't copy compiled block
"RTN","IBDFU2",11,0)
 ;
"RTN","IBDFU2",12,0)
 Q:(FROMFILE'=357.1)&(FROMFILE'=358.1) ""
"RTN","IBDFU2",13,0)
 Q:(TOFILE'=357.1)&(TOFILE'=358.1) ""
"RTN","IBDFU2",14,0)
 N NODE,LIST,FLD,LINE,TEXT,NEWBLOCK,FROM,TO,SUB,I
"RTN","IBDFU2",15,0)
 S NEWBLOCK=""
"RTN","IBDFU2",16,0)
 S NODE=$G(^IBE(FROMFILE,OLDBLOCK,0)) Q:NODE="" ""
"RTN","IBDFU2",17,0)
 S $P(NODE,"^",2)=$G(IBFORM)
"RTN","IBDFU2",18,0)
 S:$G(NAME)="" NAME=$P(NODE,"^")
"RTN","IBDFU2",19,0)
 S RECMPILE=+$G(RECMPILE)
"RTN","IBDFU2",20,0)
 ;there must be a name
"RTN","IBDFU2",21,0)
 Q:NAME="" ""
"RTN","IBDFU2",22,0)
 S $P(NODE,"^")=NAME
"RTN","IBDFU2",23,0)
 I $D(ROW),(ROW=+ROW) S $P(NODE,"^",4)=ROW
"RTN","IBDFU2",24,0)
 I $D(COL),(COL=+COL) S $P(NODE,"^",5)=COL
"RTN","IBDFU2",25,0)
 S:$D(TKORDER) $P(NODE,"^",14)=$S(TKORDER:TKORDER,1:"")
"RTN","IBDFU2",26,0)
 K DIC,DO,DD,DINUM S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
"RTN","IBDFU2",27,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFU2",28,0)
 S NEWBLOCK=$S(+Y<0:"",1:+Y)
"RTN","IBDFU2",29,0)
 Q:'NEWBLOCK ""
"RTN","IBDFU2",30,0)
 S ^IBE(TOFILE,NEWBLOCK,0)=NODE
"RTN","IBDFU2",31,0)
 S NODE=0 F  S NODE=$O(^IBE(FROMFILE,OLDBLOCK,NODE)) Q:'NODE  S ^IBE(TOFILE,NEWBLOCK,NODE)=$G(^IBE(FROMFILE,OLDBLOCK,NODE))
"RTN","IBDFU2",32,0)
 K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWBLOCK
"RTN","IBDFU2",33,0)
 D IX1^DIK K DIK,DA
"RTN","IBDFU2",34,0)
 ;I ('RECMPILE),TOFILE=357.1,FROMFILE=357.1,$D(^IBE(357.1,OLDBLOCK,"V")),$D(^IBE(357.1,OLDBLOCK,"S")),$D(^IBE(357.1,OLDBLOCK,"B")),$D(^IBE(357.1,OLDBLOCK,"H")) D
"RTN","IBDFU2",35,0)
 ;.F SUB="S","V","B","H" S I=0 S ^IBE(357.1,NEWBLOCK,SUB,0)=$G(^IBE(357.1,OLDBLOCK,SUB,0)) F  S I=$O(^IBE(357.1,OLDBLOCK,SUB,I)) Q:'I  S ^IBE(357.1,NEWBLOCK,SUB,I,0)=$G(^IBE(357.1,OLDBLOCK,SUB,I,0))
"RTN","IBDFU2",36,0)
 ;before any new block component is created, make sure there is no garbage around with dangling pointer pointing to new block
"RTN","IBDFU2",37,0)
 D DLTCNTNT^IBDFU3(NEWBLOCK,TOFILE)
"RTN","IBDFU2",38,0)
 ;
"RTN","IBDFU2",39,0)
 ;now copy the old block's contents into the newblock
"RTN","IBDFU2",40,0)
 S (LIST,LINE,TEXT)=""
"RTN","IBDFU2",41,0)
 ;
"RTN","IBDFU2",42,0)
 ;copy selection lists
"RTN","IBDFU2",43,0)
 S FROM=$S(FROMFILE[358:358.2,1:357.2),TO=$S(TOFILE[358:358.2,1:357.2)
"RTN","IBDFU2",44,0)
 F  S LIST=$O(^IBE(FROM,"C",OLDBLOCK,LIST)) Q:'LIST  I $$COPYLIST(LIST,OLDBLOCK,NEWBLOCK,FROM,TO)
"RTN","IBDFU2",45,0)
 ;
"RTN","IBDFU2",46,0)
 ;copy data fields
"RTN","IBDFU2",47,0)
 S FROM=$S(FROMFILE[358:358.5,1:357.5),TO=$S(TOFILE[358:358.5,1:357.5)
"RTN","IBDFU2",48,0)
 S FLD=0 F  S FLD=$O(^IBE(FROM,"C",OLDBLOCK,FLD)) Q:'FLD  D COPYFLD^IBDFU2A(FLD,OLDBLOCK,NEWBLOCK,FROM,TO)
"RTN","IBDFU2",49,0)
 ;
"RTN","IBDFU2",50,0)
 ;copy multiple choice fields
"RTN","IBDFU2",51,0)
 S FROM=$S(FROMFILE[358:358.93,1:357.93),TO=$S(TOFILE[358:358.93,1:357.93)
"RTN","IBDFU2",52,0)
 S FLD=0 F  S FLD=$O(^IBE(FROM,"C",OLDBLOCK,FLD)) Q:'FLD  D COPYMFLD^IBDFU2A(FLD,OLDBLOCK,NEWBLOCK,FROM,TO)
"RTN","IBDFU2",53,0)
 ;
"RTN","IBDFU2",54,0)
 ;copy hand print fields
"RTN","IBDFU2",55,0)
 S FROM=$S(FROMFILE[358:358.94,1:359.94),TO=$S(TOFILE[358:358.94,1:359.94)
"RTN","IBDFU2",56,0)
 S FLD=0 F  S FLD=$O(^IBE(FROM,"C",OLDBLOCK,FLD)) Q:'FLD  D COPYHFLD^IBDFU2A(FLD,OLDBLOCK,NEWBLOCK,FROM,TO)
"RTN","IBDFU2",57,0)
 ;
"RTN","IBDFU2",58,0)
 ;copy lines
"RTN","IBDFU2",59,0)
 S FROM=$S(FROMFILE[358:358.7,1:357.7),TO=$S(TOFILE[358:358.7,1:357.7)
"RTN","IBDFU2",60,0)
 F  S LINE=$O(^IBE(FROM,"C",OLDBLOCK,LINE)) Q:'LINE  D COPYLINE^IBDFU2A(LINE,OLDBLOCK,NEWBLOCK,FROM,TO)
"RTN","IBDFU2",61,0)
 ;
"RTN","IBDFU2",62,0)
 ;copy text areas
"RTN","IBDFU2",63,0)
 S FROM=$S(FROMFILE[358:358.8,1:357.8),TO=$S(TOFILE[358:358.8,1:357.8)
"RTN","IBDFU2",64,0)
 F  S TEXT=$O(^IBE(FROM,"C",OLDBLOCK,TEXT)) Q:'TEXT  D COPYTEXT^IBDFU2A(TEXT,OLDBLOCK,NEWBLOCK,FROM,TO)
"RTN","IBDFU2",65,0)
 Q NEWBLOCK
"RTN","IBDFU2",66,0)
 ;
"RTN","IBDFU2",67,0)
COPYLIST(LIST,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE) ;
"RTN","IBDFU2",68,0)
 ;returns the new list copied from LIST
"RTN","IBDFU2",69,0)
 Q:'$G(LIST)!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE)) 0
"RTN","IBDFU2",70,0)
 Q:(FROMFILE'=357.2)&(FROMFILE'=358.2) 0
"RTN","IBDFU2",71,0)
 Q:(TOFILE'=357.2)&(TOFILE'=358.2) 0
"RTN","IBDFU2",72,0)
 N NODE,NAME,NEWLIST,GRP,SLCTN,COL,TO,FROM,TOPI,FROMPI,DYNAMIC
"RTN","IBDFU2",73,0)
 S NEWLIST=""
"RTN","IBDFU2",74,0)
 S NODE=$G(^IBE(FROMFILE,LIST,0)) Q:NODE="" 0
"RTN","IBDFU2",75,0)
 S DYNAMIC=$P(NODE,"^",14)
"RTN","IBDFU2",76,0)
 ;make sure the list really belongs to the block being copied - if not re-index it
"RTN","IBDFU2",77,0)
 I $P(NODE,"^",2)='OLDBLOCK K DA S DA=LIST,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q 0
"RTN","IBDFU2",78,0)
 S NAME=$P(NODE,"^",1),$P(NODE,"^",2)=NEWBLOCK
"RTN","IBDFU2",79,0)
 S FROMPI=$P(NODE,"^",11)
"RTN","IBDFU2",80,0)
 S TOPI=$$GETPI^IBDFU2B(FROMPI,$S(FROMFILE[358:358.6,1:357.6),$S(TOFILE[358:358.6,1:357.6)),$P(NODE,"^",11)=TOPI
"RTN","IBDFU2",81,0)
 Q:NAME="" 0
"RTN","IBDFU2",82,0)
 K DIC,DD,DINUM,DO S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
"RTN","IBDFU2",83,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFU2",84,0)
 S NEWLIST=$S(+Y<0:"",1:+Y)
"RTN","IBDFU2",85,0)
 Q:'NEWLIST 0
"RTN","IBDFU2",86,0)
 D DLISTCNT^IBDFU3(NEWLIST,TOFILE) ;clean up any dangling pointers that may be now pointing to this new, supposedly empty list
"RTN","IBDFU2",87,0)
 ;
"RTN","IBDFU2",88,0)
 ;now copy
"RTN","IBDFU2",89,0)
 S ^IBE(TOFILE,NEWLIST,0)=NODE
"RTN","IBDFU2",90,0)
 ;
"RTN","IBDFU2",91,0)
 ;copy the column multiple
"RTN","IBDFU2",92,0)
 S NODE=$G(^IBE(FROMFILE,LIST,1,0))
"RTN","IBDFU2",93,0)
 I NODE'=""  S $P(NODE,"^",2)=TOFILE_"1I",^IBE(TOFILE,NEWLIST,1,0)=NODE S COL=0 F  S COL=$O(^IBE(FROMFILE,LIST,1,COL)) Q:'COL  S NODE=$G(^IBE(FROMFILE,LIST,1,COL,0)) S:NODE'="" ^IBE(TOFILE,NEWLIST,1,COL,0)=NODE
"RTN","IBDFU2",94,0)
 ;
"RTN","IBDFU2",95,0)
 ;now copy the subcolumn multiple
"RTN","IBDFU2",96,0)
 S NODE=$G(^IBE(FROMFILE,LIST,2,0)) I NODE'=""  S $P(NODE,"^",2)=TOFILE_"2I",^IBE(TOFILE,NEWLIST,2,0)=NODE S COL=0 F  S COL=$O(^IBE(FROMFILE,LIST,2,COL)) Q:'COL  S NODE=$G(^IBE(FROMFILE,LIST,2,COL,0)) I NODE'="" D
"RTN","IBDFU2",97,0)
 .S:$P(NODE,"^",6) $P(NODE,"^",6)=$$GETMA^IBDFU2B($P(NODE,"^",6),$S(FROMFILE[358:358.91,1:357.91),$S(TOFILE[358:358.91,1:357.91))
"RTN","IBDFU2",98,0)
 .S:$P(NODE,"^",9) $P(NODE,"^",9)=$$GETQLFR^IBDFU2B($P(NODE,"^",9),$S(FROMFILE[358:358.98,1:357.98),$S(TOFILE[358:358.98,1:357.98))
"RTN","IBDFU2",99,0)
 .S ^IBE(TOFILE,NEWLIST,2,COL,0)=NODE
"RTN","IBDFU2",100,0)
 ;
"RTN","IBDFU2",101,0)
 K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWLIST
"RTN","IBDFU2",102,0)
 D IX1^DIK K DIK,DA
"RTN","IBDFU2",103,0)
 S FROM=$S(FROMFILE[358:358.4,1:357.4),TO=$S(TOFILE[358:358.4,1:357.4)
"RTN","IBDFU2",104,0)
 ;
"RTN","IBDFU2",105,0)
 ;don't want to copy groups and selections if the selections are not exportable or the list is dynamic
"RTN","IBDFU2",106,0)
 I FROM'=TO,FROMPI,'$P($G(^IBE($S(FROM[358:358.6,1:357.6),FROMPI,2)),"^",18) Q NEWLIST
"RTN","IBDFU2",107,0)
 I 'DYNAMIC S GRP="" F  S GRP=$O(^IBE(FROM,"D",LIST,GRP)) Q:'GRP  D COPYGRP^IBDFU2A(GRP,LIST,NEWLIST,NEWBLOCK,FROM,TO)
"RTN","IBDFU2",108,0)
 Q NEWLIST
"RTN","IBDFU2A")
0^241^B39651125
"RTN","IBDFU2A",1,0)
IBDFU2A ;ALB/CJM - ENCOUNTER FORM - BUILD FORM(copying blocks - continued from IBDFU2) ; 08-JAN-1993
"RTN","IBDFU2A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU2A",3,0)
 ;
"RTN","IBDFU2A",4,0)
COPYLINE(LINE,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE) ;copys LINE from OLDBLOCK,FROMFILE to newly created NEWBLOCK,TOFILE
"RTN","IBDFU2A",5,0)
 Q:('$G(LINE))!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE))
"RTN","IBDFU2A",6,0)
 Q:(FROMFILE'=357.7)&(FROMFILE'=358.7)
"RTN","IBDFU2A",7,0)
 Q:(TOFILE'=357.7)&(TOFILE'=358.7)
"RTN","IBDFU2A",8,0)
 N NODE,NAME,NEWLINE
"RTN","IBDFU2A",9,0)
 S NEWLINE=""
"RTN","IBDFU2A",10,0)
 S NODE=$G(^IBE(FROMFILE,LINE,0)) Q:NODE=""
"RTN","IBDFU2A",11,0)
 ;make sure the line really belongs to the block being copied - if not re-index it
"RTN","IBDFU2A",12,0)
 I $P(NODE,"^",6)'=OLDBLOCK K DA S DA=LINE,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
"RTN","IBDFU2A",13,0)
 S NAME=$P(NODE,"^",1),$P(NODE,"^",6)=NEWBLOCK
"RTN","IBDFU2A",14,0)
 K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
"RTN","IBDFU2A",15,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFU2A",16,0)
 S NEWLINE=$S(+Y<0:"",1:+Y)
"RTN","IBDFU2A",17,0)
 Q:'NEWLINE
"RTN","IBDFU2A",18,0)
 S ^IBE(TOFILE,NEWLINE,0)=NODE
"RTN","IBDFU2A",19,0)
 K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWLINE
"RTN","IBDFU2A",20,0)
 D IX1^DIK K DIK,DA
"RTN","IBDFU2A",21,0)
 Q
"RTN","IBDFU2A",22,0)
 ;
"RTN","IBDFU2A",23,0)
COPYTEXT(TEXT,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE) ;copies TEXT in OLDBLOCK,FROMFILE to NEWBLOCK,TOFILE
"RTN","IBDFU2A",24,0)
 Q:('$G(TEXT))!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE))
"RTN","IBDFU2A",25,0)
 Q:(FROMFILE'=357.8)&(FROMFILE'=358.8)
"RTN","IBDFU2A",26,0)
 Q:(TOFILE'=357.8)&(TOFILE'=358.8)
"RTN","IBDFU2A",27,0)
 N NODE,NAME,NEWTEXT,TLINE
"RTN","IBDFU2A",28,0)
 S NEWTEXT=""
"RTN","IBDFU2A",29,0)
 S NODE=$G(^IBE(FROMFILE,TEXT,0)) Q:NODE=""
"RTN","IBDFU2A",30,0)
 ;make sure the text area really belongs to the block being copied - re-index if not
"RTN","IBDFU2A",31,0)
 I ($P(NODE,"^",2)'=OLDBLOCK) K DA S DA=TEXT,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
"RTN","IBDFU2A",32,0)
 S NAME=$P(NODE,"^",1),$P(NODE,"^",2)=NEWBLOCK
"RTN","IBDFU2A",33,0)
 K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
"RTN","IBDFU2A",34,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFU2A",35,0)
 S NEWTEXT=$S(+Y<0:"",1:+Y)
"RTN","IBDFU2A",36,0)
 Q:'NEWTEXT
"RTN","IBDFU2A",37,0)
 S ^IBE(TOFILE,NEWTEXT,0)=NODE
"RTN","IBDFU2A",38,0)
 ;now copy the word-processing field
"RTN","IBDFU2A",39,0)
 S NODE=$G(^IBE(FROMFILE,TEXT,1,0)) I NODE'=""  S ^IBE(TOFILE,NEWTEXT,1,0)=NODE S TLINE=0 F  S TLINE=$O(^IBE(FROMFILE,TEXT,1,TLINE)) Q:'TLINE  S NODE=$G(^IBE(FROMFILE,TEXT,1,TLINE,0)) S:NODE'="" ^IBE(TOFILE,NEWTEXT,1,TLINE,0)=NODE
"RTN","IBDFU2A",40,0)
 K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWTEXT
"RTN","IBDFU2A",41,0)
 D IX1^DIK K DIK,DA
"RTN","IBDFU2A",42,0)
 Q
"RTN","IBDFU2A",43,0)
 ;
"RTN","IBDFU2A",44,0)
COPYFLD(FLD,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE) ;copies a display field=FLD in FROMFILE to NEWBLOCK in TOFILE
"RTN","IBDFU2A",45,0)
 Q:('$G(FLD))!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE))
"RTN","IBDFU2A",46,0)
 Q:(FROMFILE'=357.5)&(FROMFILE'=358.5)
"RTN","IBDFU2A",47,0)
 Q:(TOFILE'=357.5)&(TOFILE'=358.5)
"RTN","IBDFU2A",48,0)
 N NODE,NAME,NEWFLD,SUBFLD
"RTN","IBDFU2A",49,0)
 S NEWFLD=""
"RTN","IBDFU2A",50,0)
 S NODE=$G(^IBE(FROMFILE,FLD,0)) Q:NODE=""
"RTN","IBDFU2A",51,0)
 ;make sure the field really belongs to the block being copied - if not re-index it
"RTN","IBDFU2A",52,0)
 I ($P(NODE,"^",2)'=OLDBLOCK) K DA S DA=FLD,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
"RTN","IBDFU2A",53,0)
 S NAME=$P(NODE,"^",1),$P(NODE,"^",2)=NEWBLOCK
"RTN","IBDFU2A",54,0)
 Q:NAME=""  ;corrupted data
"RTN","IBDFU2A",55,0)
 S:$P(NODE,"^",3) $P(NODE,"^",3)=$$GETPI^IBDFU2B($P(NODE,"^",3),$S(FROMFILE[358:358.6,1:357.6),$S(TOFILE[358:358.6,1:357.6))
"RTN","IBDFU2A",56,0)
 K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
"RTN","IBDFU2A",57,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFU2A",58,0)
 S NEWFLD=$S(+Y<0:"",1:+Y)
"RTN","IBDFU2A",59,0)
 Q:'NEWFLD
"RTN","IBDFU2A",60,0)
 S ^IBE(TOFILE,NEWFLD,0)=NODE
"RTN","IBDFU2A",61,0)
 ;now copy the subfields
"RTN","IBDFU2A",62,0)
 S NODE=$G(^IBE(FROMFILE,FLD,2,0))
"RTN","IBDFU2A",63,0)
 I NODE'=""  S $P(NODE,"^",2)=TOFILE_2,^IBE(TOFILE,NEWFLD,2,0)=NODE S SUBFLD=0 F  S SUBFLD=$O(^IBE(FROMFILE,FLD,2,SUBFLD)) Q:'SUBFLD  S NODE=$G(^IBE(FROMFILE,FLD,2,SUBFLD,0)) S:NODE'="" ^IBE(TOFILE,NEWFLD,2,SUBFLD,0)=NODE
"RTN","IBDFU2A",64,0)
 K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWFLD
"RTN","IBDFU2A",65,0)
 D IX1^DIK K DIK,DA
"RTN","IBDFU2A",66,0)
 Q
"RTN","IBDFU2A",67,0)
 ;
"RTN","IBDFU2A",68,0)
COPYMFLD(FLD,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE) ;copies MUTLIPLE CHOICE FIELD=FLD in FROMFILE to NEWBLOCK in TOFILE
"RTN","IBDFU2A",69,0)
 Q:('$G(FLD))!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE))
"RTN","IBDFU2A",70,0)
 Q:(FROMFILE'=357.93)&(FROMFILE'=358.93)
"RTN","IBDFU2A",71,0)
 Q:(TOFILE'=357.93)&(TOFILE'=358.93)
"RTN","IBDFU2A",72,0)
 N NODE,NAME,NEWFLD,SUBFLD,FROMPI
"RTN","IBDFU2A",73,0)
 S NEWFLD=""
"RTN","IBDFU2A",74,0)
 S NODE=$G(^IBE(FROMFILE,FLD,0)) Q:NODE=""
"RTN","IBDFU2A",75,0)
 ;make sure the field really belongs to the block being copied - if not re-index it
"RTN","IBDFU2A",76,0)
 I ($P(NODE,"^",8)'=OLDBLOCK) K DA S DA=FLD,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
"RTN","IBDFU2A",77,0)
 S NAME=$P(NODE,"^",1),$P(NODE,"^",8)=NEWBLOCK
"RTN","IBDFU2A",78,0)
 Q:NAME=""  ;corrupted data
"RTN","IBDFU2A",79,0)
 S FROMPI=$P(NODE,"^",6)
"RTN","IBDFU2A",80,0)
 S:FROMPI $P(NODE,"^",6)=$$GETPI^IBDFU2B(FROMPI,$S(FROMFILE[358:358.6,1:357.6),$S(TOFILE[358:358.6,1:357.6))
"RTN","IBDFU2A",81,0)
 K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
"RTN","IBDFU2A",82,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFU2A",83,0)
 S NEWFLD=$S(+Y<0:"",1:+Y)
"RTN","IBDFU2A",84,0)
 Q:'NEWFLD
"RTN","IBDFU2A",85,0)
 S ^IBE(TOFILE,NEWFLD,0)=NODE
"RTN","IBDFU2A",86,0)
 ;
"RTN","IBDFU2A",87,0)
 ;now copy the subfields=the choices
"RTN","IBDFU2A",88,0)
 ;don't copy choices for export if there is no package interface or choices are not exportable
"RTN","IBDFU2A",89,0)
 I FROMPI,(FROMFILE=TOFILE)!($P($G(^IBE($S(FROMFILE[358:358.6,1:357.6),FROMPI,2)),"^",18)) D
"RTN","IBDFU2A",90,0)
 .S NODE=$G(^IBE(FROMFILE,FLD,1,0)) I NODE'=""  S $P(NODE,"^",2)=TOFILE_1,^IBE(TOFILE,NEWFLD,1,0)=NODE S SUBFLD=0 F  S SUBFLD=$O(^IBE(FROMFILE,FLD,1,SUBFLD)) Q:'SUBFLD  S NODE=$G(^IBE(FROMFILE,FLD,1,SUBFLD,0)) D
"RTN","IBDFU2A",91,0)
 ..S:$P(NODE,"^",9) $P(NODE,"^",9)=$$GETQLFR^IBDFU2B($P(NODE,"^",9),$S(FROMFILE[358:358.98,1:357.98),$S(TOFILE[358:358.98,1:357.98))
"RTN","IBDFU2A",92,0)
 ..S:NODE'="" ^IBE(TOFILE,NEWFLD,1,SUBFLD,0)=NODE
"RTN","IBDFU2A",93,0)
 ;
"RTN","IBDFU2A",94,0)
 ;index the new field
"RTN","IBDFU2A",95,0)
 K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWFLD
"RTN","IBDFU2A",96,0)
 D IX1^DIK
"RTN","IBDFU2A",97,0)
 K DIK,DA
"RTN","IBDFU2A",98,0)
 Q
"RTN","IBDFU2A",99,0)
 ;
"RTN","IBDFU2A",100,0)
COPYHFLD(FLD,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE) ;copies HAND PRINT FIELD=FLD in FROMFILE to NEWBLOCK in TOFILE
"RTN","IBDFU2A",101,0)
 Q:('$G(FLD))!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE))
"RTN","IBDFU2A",102,0)
 Q:(FROMFILE'=359.94)&(FROMFILE'=358.94)
"RTN","IBDFU2A",103,0)
 Q:(TOFILE'=359.94)&(TOFILE'=358.94)
"RTN","IBDFU2A",104,0)
 N NODE,NAME,NEWFLD,SUBFLD
"RTN","IBDFU2A",105,0)
 S NEWFLD=""
"RTN","IBDFU2A",106,0)
 S NODE=$G(^IBE(FROMFILE,FLD,0)) Q:NODE=""
"RTN","IBDFU2A",107,0)
 ;make sure the field really belongs to the block being copied - if not re-index it
"RTN","IBDFU2A",108,0)
 I ($P(NODE,"^",8)'=OLDBLOCK) K DA S DA=FLD,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
"RTN","IBDFU2A",109,0)
 S NAME=$P(NODE,"^",1),$P(NODE,"^",8)=NEWBLOCK
"RTN","IBDFU2A",110,0)
 Q:NAME=""  ;corrupted data
"RTN","IBDFU2A",111,0)
 S:$P(NODE,"^",6) $P(NODE,"^",6)=$$GETPI^IBDFU2B($P(NODE,"^",6),$S(FROMFILE[358:358.6,1:357.6),$S(TOFILE[358:358.6,1:357.6))
"RTN","IBDFU2A",112,0)
 S:$P(NODE,"^",10) $P(NODE,"^",10)=$$GETADE^IBDFU2B($P(NODE,"^",10),$S(FROMFILE[358:358.99,1:359.1),$S(TOFILE[358:358.99,1:359.1))
"RTN","IBDFU2A",113,0)
 K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
"RTN","IBDFU2A",114,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFU2A",115,0)
 S NEWFLD=$S(+Y<0:"",1:+Y)
"RTN","IBDFU2A",116,0)
 Q:'NEWFLD
"RTN","IBDFU2A",117,0)
 S ^IBE(TOFILE,NEWFLD,0)=NODE
"RTN","IBDFU2A",118,0)
 K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWFLD
"RTN","IBDFU2A",119,0)
 D IX1^DIK K DIK,DA
"RTN","IBDFU2A",120,0)
 Q
"RTN","IBDFU2A",121,0)
 ;
"RTN","IBDFU2A",122,0)
COPYGRP(GRP,LIST,NEWLIST,BLOCK,FROMFILE,TOFILE) ;
"RTN","IBDFU2A",123,0)
 Q:(FROMFILE'=357.4)&(FROMFILE'=358.4)
"RTN","IBDFU2A",124,0)
 Q:(TOFILE'=357.4)&(TOFILE'=358.4)
"RTN","IBDFU2A",125,0)
 N NODE,HDR,NEWGRP,SLCTN,FROM,TO
"RTN","IBDFU2A",126,0)
 S NEWGRP=""
"RTN","IBDFU2A",127,0)
 S NODE=$G(^IBE(FROMFILE,GRP,0)) Q:NODE=""
"RTN","IBDFU2A",128,0)
 ;make sure group belongs to list - otherwise re-index
"RTN","IBDFU2A",129,0)
 I $P(NODE,"^",3)'=LIST K DA S DA=GRP,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
"RTN","IBDFU2A",130,0)
 S HDR=$P(NODE,"^",1),$P(NODE,"^",3)=NEWLIST
"RTN","IBDFU2A",131,0)
 Q:HDR=""
"RTN","IBDFU2A",132,0)
 K DIC,DD,DO,DINUM S DIC="^IBE("_TOFILE_",",X=HDR,DIC(0)=""
"RTN","IBDFU2A",133,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFU2A",134,0)
 S NEWGRP=$S(+Y<0:"",1:+Y)
"RTN","IBDFU2A",135,0)
 Q:'NEWGRP
"RTN","IBDFU2A",136,0)
 S ^IBE(TOFILE,NEWGRP,0)=NODE
"RTN","IBDFU2A",137,0)
 S NODE=0 F  S NODE=$O(^IBE(FROMFILE,GRP,NODE)) Q:'NODE  S ^IBE(TOFILE,NEWGRP,NODE)=$G(^IBE(FROMFILE,GRP,NODE))
"RTN","IBDFU2A",138,0)
 K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWGRP
"RTN","IBDFU2A",139,0)
 D IX1^DIK K DIK,DA
"RTN","IBDFU2A",140,0)
 S FROM=$S(FROMFILE[358:358.3,1:357.3),TO=$S(TOFILE[358:358.3,1:357.3)
"RTN","IBDFU2A",141,0)
 S SLCTN="" F  S SLCTN=$O(^IBE(FROM,"D",GRP,SLCTN)) Q:'SLCTN  D CPYSLCTN^IBDFU2B(SLCTN,GRP,NEWGRP,LIST,NEWLIST,FROM,TO)
"RTN","IBDFU2A",142,0)
 Q
"RTN","IBDFU2B")
0^242^B47875740
"RTN","IBDFU2B",1,0)
IBDFU2B ;ALB/CJM - ENCOUNTER FORM - BUILD FORM(copying blocks - continued from IBDFU2) ; 08-JAN-1993
"RTN","IBDFU2B",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU2B",3,0)
 ;
"RTN","IBDFU2B",4,0)
CPYSLCTN(SLCTN,GRP,NEWGRP,LIST,NEWLIST,FROMFILE,TOFILE) ;
"RTN","IBDFU2B",5,0)
 Q:('$G(SLCTN))!('$G(GRP))!('$G(NEWGRP))!('$G(LIST))!('$G(NEWLIST))!('$G(FROMFILE))!('$G(TOFILE))
"RTN","IBDFU2B",6,0)
 Q:(FROMFILE'=357.3)&(FROMFILE'=358.3)
"RTN","IBDFU2B",7,0)
 Q:(TOFILE'=357.3)&(TOFILE'=358.3)
"RTN","IBDFU2B",8,0)
 N NODE,NAME,NEWSLCTN,SC,CNT
"RTN","IBDFU2B",9,0)
 S NEWSLCTN=""
"RTN","IBDFU2B",10,0)
 S NODE=$G(^IBE(FROMFILE,SLCTN,0)) Q:NODE=""
"RTN","IBDFU2B",11,0)
 I ($P(NODE,"^",3)'=LIST)!($P(NODE,"^",4)'=GRP) K DA S DA=SLCTN,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
"RTN","IBDFU2B",12,0)
 S NAME=$P(NODE,"^",1),$P(NODE,"^",3)=NEWLIST,$P(NODE,"^",4)=NEWGRP
"RTN","IBDFU2B",13,0)
 Q:NAME=""
"RTN","IBDFU2B",14,0)
 K DIC,DD,DINUM,DO S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
"RTN","IBDFU2B",15,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFU2B",16,0)
 S NEWSLCTN=$S(+Y<0:"",1:+Y)
"RTN","IBDFU2B",17,0)
 Q:'NEWSLCTN
"RTN","IBDFU2B",18,0)
 S ^IBE(TOFILE,NEWSLCTN,0)=NODE
"RTN","IBDFU2B",19,0)
 ;
"RTN","IBDFU2B",20,0)
 ; -- now copy the subcolumn value multiple
"RTN","IBDFU2B",21,0)
 ; -- When copying selections but not same list definition (i.e.
"RTN","IBDFU2B",22,0)
 ;    when copying selections from one list to another)
"RTN","IBDFU2B",23,0)
 ;    find old sub columns, in 357.2 for list
"RTN","IBDFU2B",24,0)
 ;    find and match to new sub columns in 357.2 for new list
"RTN","IBDFU2B",25,0)
 ;
"RTN","IBDFU2B",26,0)
 S (SC,CNT,LAST)=0
"RTN","IBDFU2B",27,0)
 ;S NODE=$G(^IBE(FROMFILE,SLCTN,1,0)) I NODE'=""  S ^IBE(TOFILE,NEWSLCTN,1,0)=NODE 
"RTN","IBDFU2B",28,0)
 F  S SC=$O(^IBE(FROMFILE,SLCTN,1,SC)) Q:'SC  S NODE=$G(^IBE(FROMFILE,SLCTN,1,SC,0)) D:$D(IBDFCPYF)  S:NODE'="" ^IBE(TOFILE,NEWSLCTN,1,+NODE,0)=NODE,CNT=CNT+1,LAST=+NODE
"RTN","IBDFU2B",29,0)
 .N K,IBDFI
"RTN","IBDFU2B",30,0)
 .S K=0,IBDFI=+NODE
"RTN","IBDFU2B",31,0)
 .Q:$G(IBDFNEW(IBDFI))=$G(IBDFOLD(IBDFI))
"RTN","IBDFU2B",32,0)
 .F  S K=$O(IBDFNEW(K)) Q:K=""  I IBDFNEW(K)=$G(IBDFOLD(+IBDFI)) S $P(NODE,"^",1)=K,NODE=NODE Q
"RTN","IBDFU2B",33,0)
 .Q
"RTN","IBDFU2B",34,0)
 S ^IBE(TOFILE,NEWSLCTN,1,0)=$S(TOFILE=357.3:"^357.31IA^",1:"^358.31IA^")_$G(LAST)_"^"_CNT
"RTN","IBDFU2B",35,0)
 ; -- now copy 2 node if it exists
"RTN","IBDFU2B",36,0)
 S NODE=$G(^IBE(FROMFILE,SLCTN,2)) I NODE'="" S ^IBE(TOFILE,NEWSLCTN,2)=NODE
"RTN","IBDFU2B",37,0)
 ;
"RTN","IBDFU2B",38,0)
 K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWSLCTN
"RTN","IBDFU2B",39,0)
 D IX1^DIK
"RTN","IBDFU2B",40,0)
 K DIK,DA
"RTN","IBDFU2B",41,0)
 Q
"RTN","IBDFU2B",42,0)
 ;
"RTN","IBDFU2B",43,0)
GETMA(MA,FROMFILE,TOFILE) ;copys marking area=ma from file=FROMFILE to file=TOFILE if it does not already exist
"RTN","IBDFU2B",44,0)
 ;returns the ien of the marking area existing in TOFILE
"RTN","IBDFU2B",45,0)
 Q:($G(FROMFILE)'=357.91)&($G(FROMFILE)'=358.91) ""
"RTN","IBDFU2B",46,0)
 Q:($G(TOFILE)'=357.91)&($G(TOFILE)'=358.91) ""
"RTN","IBDFU2B",47,0)
 Q:'$G(MA) ""
"RTN","IBDFU2B",48,0)
 Q:FROMFILE=TOFILE MA ;files are the same!
"RTN","IBDFU2B",49,0)
 N NODE,NAME,NEWMA
"RTN","IBDFU2B",50,0)
 S NEWMA=""
"RTN","IBDFU2B",51,0)
 S NODE=$G(^IBE(FROMFILE,MA,0)) Q:NODE="" ""
"RTN","IBDFU2B",52,0)
 S NAME=$P(NODE,"^",1)
"RTN","IBDFU2B",53,0)
 Q:NAME="" ""
"RTN","IBDFU2B",54,0)
 S NEWMA=$O(^IBE(TOFILE,"B",NAME,0)) Q:NEWMA NEWMA ;quit if it already exists
"RTN","IBDFU2B",55,0)
 K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
"RTN","IBDFU2B",56,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFU2B",57,0)
 S NEWMA=$S(+Y<0:"",1:+Y)
"RTN","IBDFU2B",58,0)
 Q:'NEWMA ""
"RTN","IBDFU2B",59,0)
 S ^IBE(TOFILE,NEWMA,0)=NODE
"RTN","IBDFU2B",60,0)
 K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWMA
"RTN","IBDFU2B",61,0)
 D IX1^DIK K DIK,DA
"RTN","IBDFU2B",62,0)
 Q NEWMA
"RTN","IBDFU2B",63,0)
 ;
"RTN","IBDFU2B",64,0)
GETPI(PI,FROMFILE,TOFILE) ;copies the package interface=PI from file=FROMFILE to file=TOFILE if it doesn't already exist
"RTN","IBDFU2B",65,0)
 ;returns the ien of the package interface in the TOFILE
"RTN","IBDFU2B",66,0)
 Q:($G(FROMFILE)'=357.6)&($G(FROMFILE)'=358.6) ""
"RTN","IBDFU2B",67,0)
 Q:($G(TOFILE)'=357.6)&($G(TOFILE)'=358.6) ""
"RTN","IBDFU2B",68,0)
 Q:'$G(PI) ""
"RTN","IBDFU2B",69,0)
 Q:FROMFILE=TOFILE PI
"RTN","IBDFU2B",70,0)
 N NODE,NEWPI,SUB1,SUB2,RTN,ENTRYPT,TYPE
"RTN","IBDFU2B",71,0)
 S NEWPI=""
"RTN","IBDFU2B",72,0)
 S NODE=$G(^IBE(FROMFILE,PI,0)) Q:NODE="" ""
"RTN","IBDFU2B",73,0)
 S NAME=$P(NODE,"^"),ENTRYPT=$P(NODE,"^",2),RTN=$P(NODE,"^",3),TYPE=$P(NODE,"^",6)
"RTN","IBDFU2B",74,0)
 S NEWPI=$$LOOKUP(NAME,RTN,ENTRYPT,TOFILE,TYPE)
"RTN","IBDFU2B",75,0)
 Q:NEWPI NEWPI ;quit if copy is not needed
"RTN","IBDFU2B",76,0)
 K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=$P(NODE,"^"),DIC(0)=""
"RTN","IBDFU2B",77,0)
 Q:X="" "" ;corrupted data!
"RTN","IBDFU2B",78,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFU2B",79,0)
 S NEWPI=$S(+Y<0:"",1:+Y)
"RTN","IBDFU2B",80,0)
 Q:'NEWPI ""
"RTN","IBDFU2B",81,0)
 ;
"RTN","IBDFU2B",82,0)
 ;for display or selection interfaces, if the entry point does not exist the new package interface should be marked as unavailable
"RTN","IBDFU2B",83,0)
 I (TYPE=2)!(TYPE=3) D
"RTN","IBDFU2B",84,0)
 .I RTN="" S $P(NODE,"^",9)=0 Q
"RTN","IBDFU2B",85,0)
 .I RTN'="" D
"RTN","IBDFU2B",86,0)
 ..I ENTRYPT]"" I '$L($T(@ENTRYPT^@RTN)) S $P(NODE,"^",9)=0
"RTN","IBDFU2B",87,0)
 ..I ENTRYPT="" I '$L($T(^@RTN)) S $P(NODE,"^",9)=0
"RTN","IBDFU2B",88,0)
 ;
"RTN","IBDFU2B",89,0)
 S ^IBE(TOFILE,NEWPI,0)=NODE
"RTN","IBDFU2B",90,0)
 S:$P(NODE,"^",13) $P(NODE,"^",13)=$$GETPI($P(NODE,"^",13),$S(FROMFILE[358:358.6,1:357.6),$S(TOFILE[358:358.6,1:357.6))
"RTN","IBDFU2B",91,0)
 S ^IBE(TOFILE,NEWPI,0)=NODE
"RTN","IBDFU2B",92,0)
 F SUB1=2,3,4,5,8,9,10,11,12,14,17,18,19,20,21 S NODE=$G(^IBE(FROMFILE,PI,SUB1)) I NODE'="" S ^IBE(TOFILE,NEWPI,SUB1)=NODE
"RTN","IBDFU2B",93,0)
 S NODE=$G(^IBE(FROMFILE,PI,16)) I NODE'="" D
"RTN","IBDFU2B",94,0)
 .N TYPEDATA
"RTN","IBDFU2B",95,0)
 .S TYPEDATA=$P(NODE,"^",2)
"RTN","IBDFU2B",96,0)
 .I TYPEDATA S $P(NODE,"^",2)=$$GETADE(TYPEDATA,$S(FROMFILE[358:358.99,1:359.1),$S(TOFILE[358:358.99,1:359.1))
"RTN","IBDFU2B",97,0)
 .S TYPEDATA=$P(NODE,"^",6)
"RTN","IBDFU2B",98,0)
 .I TYPEDATA S $P(NODE,"^",6)=$$GETADE(TYPEDATA,$S(FROMFILE[358:358.99,1:359.1),$S(TOFILE[358:358.99,1:359.1))
"RTN","IBDFU2B",99,0)
 .S ^IBE(TOFILE,NEWPI,16)=NODE
"RTN","IBDFU2B",100,0)
 F SUB1=1,6,7,15 S NODE=$G(^IBE(FROMFILE,PI,SUB1,0)) D
"RTN","IBDFU2B",101,0)
 .I NODE'="" S ^IBE(TOFILE,NEWPI,SUB1,0)=NODE S SUB2=0 F  S SUB2=$O(^IBE(FROMFILE,PI,SUB1,SUB2)) Q:'SUB2  S NODE=$G(^IBE(FROMFILE,PI,SUB1,SUB2,0)) I NODE'="" S ^IBE(TOFILE,NEWPI,SUB1,SUB2,0)=NODE
"RTN","IBDFU2B",102,0)
 ;
"RTN","IBDFU2B",103,0)
 D CPYQLFRS(FROMFILE,PI,TOFILE,NEWPI)
"RTN","IBDFU2B",104,0)
 ;
"RTN","IBDFU2B",105,0)
 K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWPI
"RTN","IBDFU2B",106,0)
 D IX1^DIK K DIK,DA
"RTN","IBDFU2B",107,0)
 Q NEWPI
"RTN","IBDFU2B",108,0)
 ;
"RTN","IBDFU2B",109,0)
CPYQLFRS(FROMFILE,PI,TOFILE,NEWPI) ;copy allowable qualifiers from the package interface=PI in NEWPI to the package interface=NEWPI in TOFILE
"RTN","IBDFU2B",110,0)
 ;
"RTN","IBDFU2B",111,0)
 N NODE,SUB,VARPTR
"RTN","IBDFU2B",112,0)
 K ^IBE(TOFILE,NEWPI,13)
"RTN","IBDFU2B",113,0)
 S NODE=$G(^IBE(FROMFILE,PI,13,0)) I NODE'="" S ^IBE(TOFILE,NEWPI,13,0)=NODE S SUB=0 F  S SUB=$O(^IBE(FROMFILE,PI,13,SUB)) Q:'SUB  D
"RTN","IBDFU2B",114,0)
 .S NODE=$G(^IBE(FROMFILE,PI,13,SUB,0)),VARPTR=$P(NODE,"^") I +VARPTR D  I +VARPTR S $P(NODE,"^")=VARPTR,^IBE(TOFILE,NEWPI,13,SUB,0)=NODE
"RTN","IBDFU2B",115,0)
 ..I VARPTR["IBE" S $P(VARPTR,";")=$$GETADE(+VARPTR,$S(FROMFILE[358:358.99,1:359.1),$S(TOFILE[358:358.99,1:359.1)),$P(VARPTR,"(",2)=$S(TOFILE[358:358.99,1:359.1)_"," Q
"RTN","IBDFU2B",116,0)
 ..I VARPTR["IBD" S $P(VARPTR,";")=$$GETQLFR(+VARPTR,$S(FROMFILE[358:358.98,1:357.98),$S(TOFILE[358:358.98,1:357.98)),$P(VARPTR,"(",2)=$S(TOFILE[358:358.98,1:357.98)_","
"RTN","IBDFU2B",117,0)
 Q
"RTN","IBDFU2B",118,0)
 ;
"RTN","IBDFU2B",119,0)
LOOKUP(NAME,RTN,ENTRYPT,TOFILE,TYPE) ;return 1 if the package interface already exists in TOFILE, 0 otherwise
"RTN","IBDFU2B",120,0)
 N PI,LOOKNODE,QUIT
"RTN","IBDFU2B",121,0)
 Q:NAME="" ""
"RTN","IBDFU2B",122,0)
 S (QUIT,PI)=0 F  S PI=$O(^IBE(TOFILE,"B",$E(NAME,1,30),PI)) Q:'PI  S LOOKNODE=$G(^IBE(TOFILE,PI,0)) I LOOKNODE'="" D  Q:QUIT
"RTN","IBDFU2B",123,0)
 .I NAME=$P(LOOKNODE,"^"),RTN=$P(LOOKNODE,"^",3),ENTRYPT=$P(LOOKNODE,"^",2),TYPE=$P(LOOKNODE,"^",6) S QUIT=1 Q  ;matches!
"RTN","IBDFU2B",124,0)
 Q PI
"RTN","IBDFU2B",125,0)
 ;
"RTN","IBDFU2B",126,0)
GETQLFR(QLFR,FROMFILE,TOFILE) ;copys qualifier=QLFR from file=FROMFILE to file=TOFILE if it does not already exist
"RTN","IBDFU2B",127,0)
 ;returns the ien of the qualifier existing in TOFILE
"RTN","IBDFU2B",128,0)
 Q:($G(FROMFILE)'=357.98)&($G(FROMFILE)'=358.98) ""
"RTN","IBDFU2B",129,0)
 Q:($G(TOFILE)'=357.98)&($G(TOFILE)'=358.98) ""
"RTN","IBDFU2B",130,0)
 Q:'$G(QLFR) ""
"RTN","IBDFU2B",131,0)
 Q:FROMFILE=TOFILE QLFR ;files are the same!
"RTN","IBDFU2B",132,0)
 N NODE,NAME,NEWQLFR
"RTN","IBDFU2B",133,0)
 S NEWQLFR=""
"RTN","IBDFU2B",134,0)
 S NODE=$G(^IBD(FROMFILE,QLFR,0)) Q:NODE="" ""
"RTN","IBDFU2B",135,0)
 S NAME=$P(NODE,"^",1)
"RTN","IBDFU2B",136,0)
 Q:NAME="" ""
"RTN","IBDFU2B",137,0)
 ;does it already exist?
"RTN","IBDFU2B",138,0)
 S NEWQLFR=0 F  S NEWQLFR=$O(^IBD(TOFILE,"B",$E(NAME,1,30),NEWQLFR)) Q:'NEWQLFR  Q:$P($G(^IBD(TOFILE,NEWQLFR,0)),"^")=NAME
"RTN","IBDFU2B",139,0)
 Q:NEWQLFR NEWQLFR ;quit if it already exists
"RTN","IBDFU2B",140,0)
 K DIC,DO,DINUM,DD S DIC="^IBD("_TOFILE_",",X=NAME,DIC(0)=""
"RTN","IBDFU2B",141,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFU2B",142,0)
 S NEWQLFR=$S(+Y<0:"",1:+Y)
"RTN","IBDFU2B",143,0)
 Q:'NEWQLFR ""
"RTN","IBDFU2B",144,0)
 S ^IBD(TOFILE,NEWQLFR,0)=NODE
"RTN","IBDFU2B",145,0)
 K DIK,DA S DIK="^IBD("_TOFILE_",",DA=NEWQLFR
"RTN","IBDFU2B",146,0)
 D IX1^DIK K DIK,DA
"RTN","IBDFU2B",147,0)
 Q NEWQLFR
"RTN","IBDFU2B",148,0)
 ;
"RTN","IBDFU2B",149,0)
GETADE(ADE,FROMFILE,TOFILE) ;copys AICS Data Element=ADE from file=FROMFILE to file=TOFILE if it does not already exist
"RTN","IBDFU2B",150,0)
 ;returns the ien of the qualifier existing in TOFILE
"RTN","IBDFU2B",151,0)
 Q:($G(FROMFILE)'=359.1)&($G(FROMFILE)'=358.99) ""
"RTN","IBDFU2B",152,0)
 Q:($G(TOFILE)'=359.1)&($G(TOFILE)'=358.99) ""
"RTN","IBDFU2B",153,0)
 Q:'$G(ADE) ""
"RTN","IBDFU2B",154,0)
 Q:FROMFILE=TOFILE ADE ;files are the same!
"RTN","IBDFU2B",155,0)
 N NODE,NAME,NEWADE,SUB
"RTN","IBDFU2B",156,0)
 S NEWADE=""
"RTN","IBDFU2B",157,0)
 S NODE=$G(^IBE(FROMFILE,ADE,0)) Q:NODE="" ""
"RTN","IBDFU2B",158,0)
 S NAME=$P(NODE,"^",1)
"RTN","IBDFU2B",159,0)
 Q:NAME="" ""
"RTN","IBDFU2B",160,0)
 S NEWADE=$O(^IBE(TOFILE,"B",NAME,0)) Q:NEWADE NEWADE ;quit if it already exists
"RTN","IBDFU2B",161,0)
 K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
"RTN","IBDFU2B",162,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFU2B",163,0)
 S NEWADE=$S(+Y<0:"",1:+Y)
"RTN","IBDFU2B",164,0)
 Q:'NEWADE ""
"RTN","IBDFU2B",165,0)
 S ^IBE(TOFILE,NEWADE,0)=NODE
"RTN","IBDFU2B",166,0)
 ;
"RTN","IBDFU2B",167,0)
 ; -- 9/28/95 add 10 node to be moved for moved fields 
"RTN","IBDFU2B",168,0)
 F SUB=1,2,3,10 S NODE=$G(^IBE(FROMFILE,ADE,SUB)) I NODE'="" S ^IBE(TOFILE,NEWADE,SUB)=NODE
"RTN","IBDFU2B",169,0)
 K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWADE
"RTN","IBDFU2B",170,0)
 D IX1^DIK K DIK,DA
"RTN","IBDFU2B",171,0)
 Q NEWADE
"RTN","IBDFU2C")
0^243^B19147360
"RTN","IBDFU2C",1,0)
IBDFU2C ;ALB/CJM - ENCOUNTER FORM - (COPYING FORMS) ;AUG12,1993
"RTN","IBDFU2C",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU2C",3,0)
 ;
"RTN","IBDFU2C",4,0)
COPYFORM(OLDFORM,FROMFILE,TOFILE,NEWNAME,TK) ;
"RTN","IBDFU2C",5,0)
 ;copies OLDFORM from FROMFILE to TOFILE, changing the name to NEWNAME if defined (NEWNAME is optional), and the field TOOL KIT to TK if defined
"RTN","IBDFU2C",6,0)
 ;
"RTN","IBDFU2C",7,0)
 Q:'$D(OLDFORM)!'$D(FROMFILE)!'$D(TOFILE) ""
"RTN","IBDFU2C",8,0)
 Q:(FROMFILE'=357)&(FROMFILE'=358) ""
"RTN","IBDFU2C",9,0)
 Q:(TOFILE'=357)&(TOFILE'=358) ""
"RTN","IBDFU2C",10,0)
 Q:'OLDFORM ""
"RTN","IBDFU2C",11,0)
 N NEWFORM,NODE,OLDBLOCK,NEWBLOCK,BLOCK,IBDELETE,FROM,TO,PAGE
"RTN","IBDFU2C",12,0)
 S NODE=$G(^IBE(FROMFILE,OLDFORM,0)) Q:NODE="" ""
"RTN","IBDFU2C",13,0)
 S:($G(NEWNAME)'="") $P(NODE,"^")=NEWNAME
"RTN","IBDFU2C",14,0)
 S:$G(NEWNAME)="" NEWNAME=$P(NODE,"^")
"RTN","IBDFU2C",15,0)
 I $G(TK)=+$G(TK) S $P(NODE,"^",7)=TK
"RTN","IBDFU2C",16,0)
 S $P(NODE,"^",5)=0,$P(NODE,"^",13)=""
"RTN","IBDFU2C",17,0)
 K DIC,DD,DO,DINUM S DIC="^IBE("_TOFILE_",",X=NEWNAME,DIC(0)=""
"RTN","IBDFU2C",18,0)
 D FILE^DICN K DIC,DIE
"RTN","IBDFU2C",19,0)
 S NEWFORM=$S(+Y<0:"",1:+Y)
"RTN","IBDFU2C",20,0)
 I (NEWFORM<0) W !,"Unable to create a new form!" D PAUSE^IBDFU5 Q ""
"RTN","IBDFU2C",21,0)
 ;
"RTN","IBDFU2C",22,0)
 ;the new form should be empty - make sure
"RTN","IBDFU2C",23,0)
 S FROM=$S(FROMFILE[358:358.1,1:357.1)
"RTN","IBDFU2C",24,0)
 S TO=$S(TOFILE[358:358.1,1:357.1)
"RTN","IBDFU2C",25,0)
 S BLOCK="" F  S BLOCK=$O(^IBE(TOFILE,"C",NEWFORM,BLOCK)) Q:'BLOCK  D
"RTN","IBDFU2C",26,0)
 .I $P($G(^IBE(TO,BLOCK,0)),"^",2)'=NEWFORM D
"RTN","IBDFU2C",27,0)
 ..K ^IBE(TO,"C",NEWFORM,BLOCK),DA S DIK="^IBE("_TO_",",DA=BLOCK D IX1^DIK K DIK,DA
"RTN","IBDFU2C",28,0)
 .E  D DLTBLK^IBDFU3(BLOCK,NEWFORM,TO)
"RTN","IBDFU2C",29,0)
 ;
"RTN","IBDFU2C",30,0)
 ;copy old 0 node into the new form
"RTN","IBDFU2C",31,0)
 S ^IBE(TOFILE,NEWFORM,0)=NODE
"RTN","IBDFU2C",32,0)
 ;
"RTN","IBDFU2C",33,0)
 ;now the page multiple
"RTN","IBDFU2C",34,0)
 S NODE=$G(^IBE(FROMFILE,OLDFORM,2,0))
"RTN","IBDFU2C",35,0)
 I NODE'="" S $P(NODE,"^",2)=TOFILE_".02I",^IBE(TOFILE,NEWFORM,2,0)=NODE S PAGE=0 F  S PAGE=$O(^IBE(FROMFILE,OLDFORM,2,PAGE)) Q:'PAGE  S NODE=$G(^IBE(FROMFILE,OLDFORM,2,PAGE,0)) S:NODE'="" ^IBE(TOFILE,NEWFORM,2,PAGE,0)=NODE
"RTN","IBDFU2C",36,0)
 ;
"RTN","IBDFU2C",37,0)
 ;copy the rest of the form
"RTN","IBDFU2C",38,0)
 S NODE=0 F  S NODE=$O(^IBE(FROMFILE,OLDFORM,NODE)) Q:'NODE  Q:$G(^IBE(FROMFILE,OLDFORM,NODE))=""  S ^IBE(TOFILE,NEWFORM,NODE)=$G(^IBE(FROMFILE,OLDFORM,NODE))
"RTN","IBDFU2C",39,0)
 K DIK S DIK="^IBE("_TOFILE_",",DA=NEWFORM D IX^DIK K DIK
"RTN","IBDFU2C",40,0)
 ;
"RTN","IBDFU2C",41,0)
 ;now copy the blocks into the form
"RTN","IBDFU2C",42,0)
 S OLDBLOCK="" F  S OLDBLOCK=$O(^IBE(FROM,"C",OLDFORM,OLDBLOCK)) Q:'OLDBLOCK  I $P($G(^IBE(FROM,OLDBLOCK,0)),"^",2)=OLDFORM S NEWBLOCK=$$COPYBLK^IBDFU2(OLDBLOCK,NEWFORM,FROM,TO) W "."
"RTN","IBDFU2C",43,0)
 Q NEWFORM
"RTN","IBDFU2C",44,0)
 ;
"RTN","IBDFU2C",45,0)
 ;
"RTN","IBDFU2C",46,0)
DELETE(FORM,FILE,ASK) ;deletes the FORM in FILE- if ASK then asks permission first
"RTN","IBDFU2C",47,0)
 Q:'$G(FORM)
"RTN","IBDFU2C",48,0)
 Q:(FILE'=357)&(FILE'=358)
"RTN","IBDFU2C",49,0)
 I $G(ASK) Q:'$$RUSURE^IBDFU5($P($G(^IBE(FILE,FORM,0)),"^"))
"RTN","IBDFU2C",50,0)
 N BLOCK,BLKFILE,CR
"RTN","IBDFU2C",51,0)
 ;might have to delete the bubble translation table
"RTN","IBDFU2C",52,0)
 I FILE=357 D
"RTN","IBDFU2C",53,0)
 .Q:'$$FORMDSCR^IBDFU1C(.FORM)
"RTN","IBDFU2C",54,0)
 .I FORM("TYPE") D KILLTBL^IBDF19(.FORM)
"RTN","IBDFU2C",55,0)
 S BLKFILE=FILE+.1
"RTN","IBDFU2C",56,0)
 S BLOCK="" F  S BLOCK=$O(^IBE(BLKFILE,"C",FORM,BLOCK)) Q:'BLOCK  D DLTBLK^IBDFU3(BLOCK,FORM,BLKFILE) W "."
"RTN","IBDFU2C",57,0)
 I FILE=357 F CR="AT","AC","AU","AG" K ^IBE(357,CR,FORM)
"RTN","IBDFU2C",58,0)
 K DA S DIK="^IBE("_FILE_",",DA=FORM D ^DIK K DIK,DA
"RTN","IBDFU2C",59,0)
 K FORM
"RTN","IBDFU2C",60,0)
 Q
"RTN","IBDFU2C",61,0)
NEWNAME(OLDNAME) ;asks the user to select a unique form name
"RTN","IBDFU2C",62,0)
 ;returns "" if unsuccessfull, else the form name
"RTN","IBDFU2C",63,0)
 ;shows OLDNAME as the default if defined
"RTN","IBDFU2C",64,0)
 ;
"RTN","IBDFU2C",65,0)
 N NAME,QUIT S NAME="",QUIT=0
"RTN","IBDFU2C",66,0)
 K DIR S DIR(0)="357,.01A",DIR("A")="New Form Name: ",DIR("?")="Enter a unique name up to 30 characters"
"RTN","IBDFU2C",67,0)
 S DIR("B")="" I $G(OLDNAME)'="",'$O(IBE(357,"B",OLDNAME,0)) S DIR("B")=OLDNAME
"RTN","IBDFU2C",68,0)
 F  D  Q:QUIT
"RTN","IBDFU2C",69,0)
 .D ^DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBDFU2C",70,0)
 .I $O(^IBE(357,"B",Y,"")) D
"RTN","IBDFU2C",71,0)
 ..W !,"The form name must be unique, try using the clinic in the name!"
"RTN","IBDFU2C",72,0)
 .E  S NAME=Y,QUIT=1
"RTN","IBDFU2C",73,0)
 K DIR
"RTN","IBDFU2C",74,0)
 Q NAME
"RTN","IBDFU2C",75,0)
TKFORM() ;returns the form TOOL KIT that contains all of the tool kit blocs
"RTN","IBDFU2C",76,0)
 N TKFORM,BLOCK,TKORDER,TK
"RTN","IBDFU2C",77,0)
 S TKFORM=+$O(^IBE(357,"B","TOOL KIT",""))
"RTN","IBDFU2C",78,0)
 I 'TKFORM D
"RTN","IBDFU2C",79,0)
 .K DIC,DD,DO,DINUM S DIC="^IBE(357,",DIC(0)="",X="TOOL KIT"
"RTN","IBDFU2C",80,0)
 .D FILE^DICN K DIC,DIE,DA
"RTN","IBDFU2C",81,0)
 .S TKFORM=$S(+(Y>0):+Y,1:"")
"RTN","IBDFU2C",82,0)
 .Q:'TKFORM
"RTN","IBDFU2C",83,0)
 .S ^IBE(357,TKFORM,0)="TOOL KIT^^CONTAINS ALL OF THE TOOL KIT BLOCKS^^^^1"
"RTN","IBDFU2C",84,0)
 .K DIK S DIK="^IBE(357,",DA=TKFORM D IX1^DIK K DIK
"RTN","IBDFU2C",85,0)
 .S TKORDER=0 F  S TKORDER=$O(^IBE(357.1,"D",TKORDER)) Q:'TKORDER  S BLOCK=0 F  S BLOCK=$O(^IBE(357.1,"D",TKORDER,BLOCK)) Q:'BLOCK  D
"RTN","IBDFU2C",86,0)
 ..S TK=$P($G(^IBE(357.1,BLOCK,0)),"^",14) I 'TK K ^IBE(357.1,"D",TKORDER,BLOCK) Q
"RTN","IBDFU2C",87,0)
 ..S FORM=$P($G(^IBE(357.1,BLOCK,0)),"^",2) I FORM'=TKFORM K ^IBE(357.1,"C",FORM,BLOCK) S $P(^IBE(357.1,BLOCK,0),"^",2)=TKFORM K DIK S DIK="^IBE(357.1,",DA=BLOCK,DIK(1)=.02 D EN1^DIK K DIK
"RTN","IBDFU2C",88,0)
 Q TKFORM
"RTN","IBDFU3")
0^244^B20119293
"RTN","IBDFU3",1,0)
IBDFU3 ;ALB/CJM - ENCOUNTER FORM - BUILD FORM(deleting blocks) ; 08-JAN-1993
"RTN","IBDFU3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU3",3,0)
 ;
"RTN","IBDFU3",4,0)
DLTBLK(BLOCK,FORM,FILE) ;deletes BLOCK (in FILE) if not part of the toolkit (unless IBTKBLK=1) and, if FORM is passed in, the block actually is on FORM
"RTN","IBDFU3",5,0)
 Q:('$G(BLOCK))
"RTN","IBDFU3",6,0)
 Q:(FILE'=357.1)&(FILE'=358.1)
"RTN","IBDFU3",7,0)
 N NODE,DIK,DA
"RTN","IBDFU3",8,0)
 S NODE=$G(^IBE(FILE,BLOCK,0))
"RTN","IBDFU3",9,0)
 K DA S DA=BLOCK,DIK="^IBE("_FILE_","
"RTN","IBDFU3",10,0)
 ;don't delete it if part of the toolkit or doesn't belong to the form (messed up cross-references), unless IBTKBLK=1 (means deletion is durring special option for editing the tk)
"RTN","IBDFU3",11,0)
 G:$G(IBTKBLK) JUSTDOIT
"RTN","IBDFU3",12,0)
 I ($P(NODE,"^",14)) D  Q
"RTN","IBDFU3",13,0)
 .S $P(^IBE(FILE,BLOCK,0),"^",2)=$O(^IBE(FILE\1,"B","TOOL KIT",""))
"RTN","IBDFU3",14,0)
 .I $G(FORM)'="" K ^IBE(FILE,"C",FORM,BLOCK) D IX1^DIK
"RTN","IBDFU3",15,0)
 I $G(FORM)'="",($P(NODE,"^",2)'=FORM) D  Q
"RTN","IBDFU3",16,0)
 .;don't delete it - instead re-index it and quit
"RTN","IBDFU3",17,0)
 .K ^IBE(FILE,"C",FORM,BLOCK) D IX1^DIK
"RTN","IBDFU3",18,0)
JUSTDOIT ;
"RTN","IBDFU3",19,0)
 ;delete its components
"RTN","IBDFU3",20,0)
 D DLTCNTNT(BLOCK,FILE)
"RTN","IBDFU3",21,0)
 ;delete the block (DIC,DA are newed)
"RTN","IBDFU3",22,0)
 D ^DIK
"RTN","IBDFU3",23,0)
 Q
"RTN","IBDFU3",24,0)
 ;
"RTN","IBDFU3",25,0)
DLTCNTNT(BLOCK,FILE) ;delete everything in BLOCK, but not the block itself
"RTN","IBDFU3",26,0)
 Q:('$G(BLOCK))!('$G(FILE))
"RTN","IBDFU3",27,0)
 Q:(FILE'=357.1)&(FILE'=358.1)
"RTN","IBDFU3",28,0)
 N LIST,FLD,LINE,TEXT,TARGET,DIK,DA
"RTN","IBDFU3",29,0)
 ;delete selection lists from BLOCK
"RTN","IBDFU3",30,0)
 S TARGET=$S(FILE[358:358.2,1:357.2)
"RTN","IBDFU3",31,0)
 S LIST="" F  S LIST=$O(^IBE(TARGET,"C",BLOCK,LIST)) Q:'LIST  D DLTLIST(TARGET,BLOCK,LIST)
"RTN","IBDFU3",32,0)
 ;delete data fields
"RTN","IBDFU3",33,0)
 S TARGET=$S(FILE[358:358.5,1:357.5)
"RTN","IBDFU3",34,0)
 S FLD="" F  S FLD=$O(^IBE(TARGET,"C",BLOCK,FLD)) Q:'FLD  D DLTFLD(TARGET,BLOCK,FLD)
"RTN","IBDFU3",35,0)
 ;delete multiple choice fields
"RTN","IBDFU3",36,0)
 S TARGET=$S(FILE[358:358.93,1:357.93)
"RTN","IBDFU3",37,0)
 S FLD="" F  S FLD=$O(^IBE(TARGET,"C",BLOCK,FLD)) Q:'FLD  D DLTIFLD(TARGET,BLOCK,FLD)
"RTN","IBDFU3",38,0)
 ;delete hand print fields
"RTN","IBDFU3",39,0)
 S TARGET=$S(FILE[358:358.94,1:359.94)
"RTN","IBDFU3",40,0)
 S FLD="" F  S FLD=$O(^IBE(TARGET,"C",BLOCK,FLD)) Q:'FLD  D DLTHFLD(TARGET,BLOCK,FLD)
"RTN","IBDFU3",41,0)
 ;delete lines
"RTN","IBDFU3",42,0)
 S TARGET=$S(FILE[358:358.7,1:357.7)
"RTN","IBDFU3",43,0)
 S LINE="" F  S LINE=$O(^IBE(TARGET,"C",BLOCK,LINE)) Q:'LINE  D DLTLINE(TARGET,BLOCK,LINE)
"RTN","IBDFU3",44,0)
 ;delete text areas
"RTN","IBDFU3",45,0)
 S TARGET=$S(FILE[358:358.8,1:357.8)
"RTN","IBDFU3",46,0)
 S TEXT="" F  S TEXT=$O(^IBE(TARGET,"C",BLOCK,TEXT)) Q:'TEXT  D DLTTEXT(TARGET,BLOCK,TEXT)
"RTN","IBDFU3",47,0)
 Q
"RTN","IBDFU3",48,0)
 ;
"RTN","IBDFU3",49,0)
DLTLIST(FILE,BLOCK,LIST) ;delete the LIST, its selections and groups
"RTN","IBDFU3",50,0)
 Q:'$G(LIST)!'$G(BLOCK)!(($G(FILE)'=357.2)&($G(FILE)'=358.2))
"RTN","IBDFU3",51,0)
 N GRP,SLCTN,DIK,DA
"RTN","IBDFU3",52,0)
 S DIK="^IBE("_FILE_",",DA=LIST
"RTN","IBDFU3",53,0)
 ;don't delete it if it does not belong to BLOCK - instead, reindex it and quit
"RTN","IBDFU3",54,0)
 I $P($G(^IBE(FILE,LIST,0)),"^",2)'=BLOCK K ^IBE(FILE,"C",BLOCK,LIST) D IX1^DIK Q
"RTN","IBDFU3",55,0)
 ;delete its contents(DIK,DA are newed)
"RTN","IBDFU3",56,0)
 D DLISTCNT(LIST,FILE)
"RTN","IBDFU3",57,0)
 ;delete the list
"RTN","IBDFU3",58,0)
 D ^DIK
"RTN","IBDFU3",59,0)
 Q
"RTN","IBDFU3",60,0)
DLISTCNT(LIST,FILE) ;delete the list's selections and groups
"RTN","IBDFU3",61,0)
 N GRP,SLCTN,DIK,DA,GFILE,SFILE
"RTN","IBDFU3",62,0)
 Q:('$G(LIST))!('$G(FILE))
"RTN","IBDFU3",63,0)
 Q:(FILE'=357.2)&(FILE'=358.2)
"RTN","IBDFU3",64,0)
 S GFILE=$S(FILE[358:358.4,1:357.4)
"RTN","IBDFU3",65,0)
 S SFILE=$S(FILE[358:358.3,1:357.3)
"RTN","IBDFU3",66,0)
 ;now delete list's contents
"RTN","IBDFU3",67,0)
 S GRP="" F  S GRP=$O(^IBE(GFILE,"D",LIST,GRP)) Q:'GRP  S DA=GRP D
"RTN","IBDFU3",68,0)
 .I $P($G(^IBE(GFILE,GRP,0)),"^",3)=LIST D
"RTN","IBDFU3",69,0)
 ..S DIK="^IBE("_GFILE_"," D ^DIK
"RTN","IBDFU3",70,0)
 ..S SLCTN="",DIK="^IBE("_SFILE_"," F  S SLCTN=$O(^IBE(SFILE,"D",GRP,SLCTN)) Q:'SLCTN  S DA=SLCTN D
"RTN","IBDFU3",71,0)
 ...I $P($G(^IBE(SFILE,SLCTN,0)),"^",4)=GRP D
"RTN","IBDFU3",72,0)
 ....D ^DIK
"RTN","IBDFU3",73,0)
 ...E  K ^IBE(SFILE,"C",LIST,SLCTN) D IX1^DIK
"RTN","IBDFU3",74,0)
 .;
"RTN","IBDFU3",75,0)
 .E  K ^IBE(GFILE,"D",LIST,GRP) D IX1^DIK
"RTN","IBDFU3",76,0)
 S SLCTN="",DIK="^IBE("_SFILE_"," F  S SLCTN=$O(^IBE(SFILE,"C",LIST,SLCTN)) Q:'SLCTN  S DA=SLCTN D
"RTN","IBDFU3",77,0)
 .I $P($G(^IBE(SFILE,SLCTN,0)),"^",3)=LIST D
"RTN","IBDFU3",78,0)
 ..D ^DIK
"RTN","IBDFU3",79,0)
 .E  K ^IBE(SFILE,"C",LIST,SLCTN) D IX1^DIK
"RTN","IBDFU3",80,0)
 Q
"RTN","IBDFU3",81,0)
 ;
"RTN","IBDFU3",82,0)
DLTFLD(FILE,BLOCK,FLD) ;delete a display field
"RTN","IBDFU3",83,0)
 Q:('$G(BLOCK))!('$G(FLD))!('$G(FILE))
"RTN","IBDFU3",84,0)
 Q:(FILE'=357.5)&(FILE'=358.5)
"RTN","IBDFU3",85,0)
 N DA,DIK
"RTN","IBDFU3",86,0)
 S DIK="^IBE("_FILE_",",DA=FLD
"RTN","IBDFU3",87,0)
 I $P($G(^IBE(FILE,FLD,0)),"^",2)=BLOCK D
"RTN","IBDFU3",88,0)
 .D ^DIK
"RTN","IBDFU3",89,0)
 E  K ^IBE(FILE,"C",BLOCK,FLD) D IX1^DIK
"RTN","IBDFU3",90,0)
 Q
"RTN","IBDFU3",91,0)
 ;
"RTN","IBDFU3",92,0)
DLTIFLD(FILE,BLOCK,FLD) ;delete a multiple choice field
"RTN","IBDFU3",93,0)
 Q:('$G(BLOCK))!('$G(FLD))!('$G(FILE))
"RTN","IBDFU3",94,0)
 Q:(FILE'=357.93)&(FILE'=358.93)
"RTN","IBDFU3",95,0)
 N DA,DIK
"RTN","IBDFU3",96,0)
 S DIK="^IBE("_FILE_",",DA=FLD
"RTN","IBDFU3",97,0)
 I $P($G(^IBE(FILE,FLD,0)),"^",8)=BLOCK D
"RTN","IBDFU3",98,0)
 .D ^DIK
"RTN","IBDFU3",99,0)
 E  K ^IBE(FILE,"C",BLOCK,FLD) D IX1^DIK
"RTN","IBDFU3",100,0)
 Q
"RTN","IBDFU3",101,0)
DLTHFLD(FILE,BLOCK,FLD) ;delete a hand print field
"RTN","IBDFU3",102,0)
 Q:('$G(BLOCK))!('$G(FLD))!('$G(FILE))
"RTN","IBDFU3",103,0)
 Q:(FILE'=359.94)&(FILE'=358.94)
"RTN","IBDFU3",104,0)
 N DA,DIK
"RTN","IBDFU3",105,0)
 S DIK="^IBE("_FILE_",",DA=FLD
"RTN","IBDFU3",106,0)
 I $P($G(^IBE(FILE,FLD,0)),"^",8)=BLOCK D
"RTN","IBDFU3",107,0)
 .D ^DIK
"RTN","IBDFU3",108,0)
 E  K ^IBE(FILE,"C",BLOCK,FLD) D IX1^DIK
"RTN","IBDFU3",109,0)
 Q
"RTN","IBDFU3",110,0)
 ;
"RTN","IBDFU3",111,0)
DLTTEXT(FILE,BLOCK,TEXT) ;delete the TEXT AREA
"RTN","IBDFU3",112,0)
 Q:('$G(BLOCK))!('$G(TEXT))!('$G(FILE))
"RTN","IBDFU3",113,0)
 Q:(FILE'=357.8)&(FILE'=358.8)
"RTN","IBDFU3",114,0)
 N DA,DIK
"RTN","IBDFU3",115,0)
 S DIK="^IBE("_FILE_",",DA=TEXT
"RTN","IBDFU3",116,0)
 I $P($G(^IBE(FILE,TEXT,0)),"^",2)=BLOCK D
"RTN","IBDFU3",117,0)
 .D ^DIK
"RTN","IBDFU3",118,0)
 E  K ^IBE(FILE,"C",BLOCK,TEXT) D IX1^DIK
"RTN","IBDFU3",119,0)
 Q
"RTN","IBDFU3",120,0)
DLTLINE(FILE,BLOCK,LINE) ;delete the line
"RTN","IBDFU3",121,0)
 Q:('$G(BLOCK))!('$G(LINE))!('$G(FILE))
"RTN","IBDFU3",122,0)
 Q:(FILE'=357.7)&(FILE'=358.7)
"RTN","IBDFU3",123,0)
 N DA,DIK
"RTN","IBDFU3",124,0)
 S DIK="^IBE("_FILE_",",DA=LINE
"RTN","IBDFU3",125,0)
 I $P($G(^IBE(FILE,LINE,0)),"^",6)=BLOCK D
"RTN","IBDFU3",126,0)
 .D ^DIK
"RTN","IBDFU3",127,0)
 E  K ^IBE(FILE,"C",BLOCK,LINE) D IX1^DIK
"RTN","IBDFU3",128,0)
 Q
"RTN","IBDFU3",129,0)
FASTEXIT ;just sets a flag signaling system should be exited
"RTN","IBDFU3",130,0)
 S VALMBCK="Q"
"RTN","IBDFU3",131,0)
 K DIR S DIR(0)="Y",DIR("A")="Exit Encounter Form Option",DIR("B")="NO" D ^DIR
"RTN","IBDFU3",132,0)
 I $D(DIRUT)!(Y) S IBFASTXT=1
"RTN","IBDFU3",133,0)
 K DIR
"RTN","IBDFU3",134,0)
 Q
"RTN","IBDFU4")
0^245^B10236465
"RTN","IBDFU4",1,0)
IBDFU4 ;ALB/CJM - ENCOUNTER FORM - BUILD FORM(write single form block to array for display,position & size copied block) ; 08-JAN-1993
"RTN","IBDFU4",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU4",3,0)
 ;
"RTN","IBDFU4",4,0)
IDXBLOCK ; create list containing block rows for list processor
"RTN","IBDFU4",5,0)
 ;
"RTN","IBDFU4",6,0)
 N I
"RTN","IBDFU4",7,0)
 W !,"... BUILDING THE FORM BLOCK ..."
"RTN","IBDFU4",8,0)
 Q:$$BLKDESCR^IBDFU1B(.IBBLK)
"RTN","IBDFU4",9,0)
 ;
"RTN","IBDFU4",10,0)
 ;keep small blocks in memory
"RTN","IBDFU4",11,0)
 ;I ((IBBLK("H")+1)*(IBBLK("W")+1))<4000 S VALMAR="IBMEMARY"
"RTN","IBDFU4",12,0)
 ;
"RTN","IBDFU4",13,0)
 K @VALMAR D KILL^VALM10()
"RTN","IBDFU4",14,0)
 D BLNKFORM^IBDF5A(0,IBBLK("H")-1,IBBLK("W"))
"RTN","IBDFU4",15,0)
 S I="",$P(I,"~",IBBLK("W")+1)="~"
"RTN","IBDFU4",16,0)
 S @VALMAR@(IBBLK("H")+1,0)="    "_I
"RTN","IBDFU4",17,0)
 S VALMCNT=IBBLK("H")+1
"RTN","IBDFU4",18,0)
 D DRWBLOCK^IBDF2A1(.IBBLK,1)
"RTN","IBDFU4",19,0)
 Q
"RTN","IBDFU4",20,0)
POS(NEWBLOCK,DFLTX,DFLTY) ;allows the user to position and size the block
"RTN","IBDFU4",21,0)
 ;NEWBLOCK = block to be edited
"RTN","IBDFU4",22,0)
 ;DFLTY - default value for starting row
"RTN","IBDFU4",23,0)
 ;DFLTX - default value for starting column
"RTN","IBDFU4",24,0)
 N IBX,IBY ;used in the input template
"RTN","IBDFU4",25,0)
 S:$G(DFLTX)=+$G(DFLTX) $P(NODE,"^",5)=DFLTX
"RTN","IBDFU4",26,0)
 S:$G(DFLTY)=+$G(DFLTY) $P(NODE,"^",4)=DFLTY
"RTN","IBDFU4",27,0)
 N NODE,IBBLK,IBDONE
"RTN","IBDFU4",28,0)
 S IBBLK=NEWBLOCK
"RTN","IBDFU4",29,0)
 S NODE=$G(^IBE(357.1,NEWBLOCK,0))
"RTN","IBDFU4",30,0)
 ;set defaults for starting column, starting row
"RTN","IBDFU4",31,0)
 S ^IBE(357.1,NEWBLOCK,0)=NODE,IBDONE=0
"RTN","IBDFU4",32,0)
 K DIE S DIE=357.1,DA=NEWBLOCK,DR="[IBDF POSITION COPIED BLOCK]"
"RTN","IBDFU4",33,0)
 D ^DIE K DIE,DR,DA
"RTN","IBDFU4",34,0)
 I 'IBDONE D DLTBLK^IBDFU3(NEWBLOCK,IBFORM,357.1)
"RTN","IBDFU4",35,0)
 Q
"RTN","IBDFU4",36,0)
CURX() ;returns the current X position (top left corner of displayed poriton of the form - internal column value)
"RTN","IBDFU4",37,0)
 N IB
"RTN","IBDFU4",38,0)
 S IB=+$G(VALMLFT),IB=IB-5 S:IB<0 IB=0
"RTN","IBDFU4",39,0)
 Q IB
"RTN","IBDFU4",40,0)
CURY() ;returns the current Y position (top left corner of displayed poriton of the form - internal row value)
"RTN","IBDFU4",41,0)
 N IB
"RTN","IBDFU4",42,0)
 S IB=+$G(VALMBG),IB=IB-1 S:IB<0 IB=0
"RTN","IBDFU4",43,0)
 Q IB
"RTN","IBDFU4",44,0)
SLCTFORM(TK,NODE) ;allows the user to select a form and returns the IEN
"RTN","IBDFU4",45,0)
 ;returns 0 if no form selected
"RTN","IBDFU4",46,0)
 ;
"RTN","IBDFU4",47,0)
 ;INPUTS
"RTN","IBDFU4",48,0)
 ;if TK=0 assumes form should not be a toolkit form
"RTN","IBDFU4",49,0)
 ;if TK=1 assumes form should be a toolkit form
"RTN","IBDFU4",50,0)
 ;otherwise, ask the user if the he wants to select fromt he toolkit
"RTN","IBDFU4",51,0)
 ;
"RTN","IBDFU4",52,0)
 ;NODE is optional - if defined it returns the 0 node of the form selected - should be passed by reference
"RTN","IBDFU4",53,0)
 ;
"RTN","IBDFU4",54,0)
 N FORM,Y S FORM=0
"RTN","IBDFU4",55,0)
 S TK=$G(TK)
"RTN","IBDFU4",56,0)
 I TK'=0,TK'=1 D
"RTN","IBDFU4",57,0)
 .K DIR S DIR(0)="YA",DIR("A")="Do you want to select a form from the toolkit? "
"RTN","IBDFU4",58,0)
 .D ^DIR
"RTN","IBDFU4",59,0)
 .I Y'=-1,'$D(DIRUT) S TK=Y
"RTN","IBDFU4",60,0)
 ;don't continue with the selection if it is not known whether or not the form is comming from the toolkit
"RTN","IBDFU4",61,0)
 I (TK=1)!(TK=0) D
"RTN","IBDFU4",62,0)
 .D:$G(IBDEVICE("LISTMAN")) FULL^VALM1
"RTN","IBDFU4",63,0)
 .K DIC S DIC("S")=$S(TK:"I $P($G(^(0)),U,7),$P($G(^(0)),U)'=""TOOL KIT"",$P($G(^(0)),U)'=""WORKCOPY"",$P($G(^(0)),U)'=""DEFAULTS""",1:"I '$P($G(^(0)),U,7)"),DIC=357,DIC(0)="AEQ"_$S($D(NODE):"Z",1:"")
"RTN","IBDFU4",64,0)
 .S DIC("A")="Select a FORM: "
"RTN","IBDFU4",65,0)
 .D ^DIC S:+Y>0 FORM=+Y
"RTN","IBDFU4",66,0)
 I FORM,$D(NODE) S NODE=Y(0)
"RTN","IBDFU4",67,0)
 K DIC,Y,DIR
"RTN","IBDFU4",68,0)
 Q FORM
"RTN","IBDFU4",69,0)
CLINICS(FORM,ARY) ;finds the list of clinics using FORM
"RTN","IBDFU4",70,0)
 ;@ARY@(0) is set to the number of clinics found
"RTN","IBDFU4",71,0)
 ;ARY is where to put the list of clinics
"RTN","IBDFU4",72,0)
 ;
"RTN","IBDFU4",73,0)
 N CLINIC,SETUP,IDX,COUNT,NAME
"RTN","IBDFU4",74,0)
 K @ARY
"RTN","IBDFU4",75,0)
 S COUNT=0
"RTN","IBDFU4",76,0)
 F IDX="C","D","E","F","G","H","I","J" D
"RTN","IBDFU4",77,0)
 .S SETUP="" F  S SETUP=$O(^SD(409.95,IDX,FORM,SETUP)) Q:'SETUP  D
"RTN","IBDFU4",78,0)
 ..S CLINIC=$P($G(^SD(409.95,SETUP,0)),"^",1)
"RTN","IBDFU4",79,0)
 ..Q:'CLINIC
"RTN","IBDFU4",80,0)
 ..S NAME=$P($G(^SC(CLINIC,0)),"^",1)
"RTN","IBDFU4",81,0)
 ..Q:NAME=""
"RTN","IBDFU4",82,0)
 ..I '$D(@ARY@(NAME)) S @ARY@(NAME)=CLINIC,COUNT=COUNT+1
"RTN","IBDFU4",83,0)
 S @ARY@(0)=COUNT
"RTN","IBDFU4",84,0)
 Q
"RTN","IBDFU4",85,0)
LIST(ARY,SCRNSIZE) ;
"RTN","IBDFU4",86,0)
 ;ARY is the same as in CLINICS
"RTN","IBDFU4",87,0)
 N CLINIC,COUNT,DIR
"RTN","IBDFU4",88,0)
 S DIR(0)="YO",DIR("B")="Y",DIR("A")="List the clinics using the form"
"RTN","IBDFU4",89,0)
 D ^DIR K DIR I '$D(DIRUT),Y D
"RTN","IBDFU4",90,0)
 .S (COUNT,CLINIC)=0
"RTN","IBDFU4",91,0)
 .S DIR(0)="E"
"RTN","IBDFU4",92,0)
 .F  S CLINIC=$O(@ARY@(CLINIC)) Q:CLINIC=""  W !,CLINIC S COUNT=COUNT+1 I COUNT=SCRNSIZE D ^DIR Q:'Y  S COUNT=0
"RTN","IBDFU4",93,0)
 .D:COUNT>0 ^DIR
"RTN","IBDFU4",94,0)
 Q
"RTN","IBDFU5")
0^246^B22747341
"RTN","IBDFU5",1,0)
IBDFU5 ;ALB/CJM - ENCOUNTER FORM (utilities) ;JAN 16,1993
"RTN","IBDFU5",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU5",3,0)
TOPNBOT(BLOCK,TOP,BOT) ;finds the top and bottom of the block - pass TOP and BOT by reference
"RTN","IBDFU5",4,0)
 N NODE
"RTN","IBDFU5",5,0)
 S NODE=$G(^IBE(357.1,BLOCK,0))
"RTN","IBDFU5",6,0)
 S TOP=+$P(NODE,"^",4),BOT=(TOP+(+$P(NODE,"^",7)))-1
"RTN","IBDFU5",7,0)
 Q
"RTN","IBDFU5",8,0)
RUSURE(NAME) ;obtains verification from the user for deletion- returns 1 if answered YES, otherwise NO
"RTN","IBDFU5",9,0)
 ;if NAME is defined it will be used in the prompt
"RTN","IBDFU5",10,0)
 N RET
"RTN","IBDFU5",11,0)
 S RET=1
"RTN","IBDFU5",12,0)
 K DIR S DIR(0)="Y",DIR("A")=$S(NAME="":"Are you sure",1:"Are you sure "_NAME_" should be deleted"),DIR("B")="NO"
"RTN","IBDFU5",13,0)
 D ^DIR K DIR I (Y<1)!$D(DIRUT) S RET=0
"RTN","IBDFU5",14,0)
 Q RET
"RTN","IBDFU5",15,0)
PAUSE ;
"RTN","IBDFU5",16,0)
 N ANS
"RTN","IBDFU5",17,0)
 W !,$C(7),"Press RETURN to continue..." R ANS:DTIME
"RTN","IBDFU5",18,0)
 Q
"RTN","IBDFU5",19,0)
 ;
"RTN","IBDFU5",20,0)
NOGRPHCS ;sets graphics variables to "_" and "|"
"RTN","IBDFU5",21,0)
 S (IOVL,IOBLC,IOBRC)="|",(IOHL,IOTRC,IOTLC)="_"
"RTN","IBDFU5",22,0)
 Q
"RTN","IBDFU5",23,0)
 ;
"RTN","IBDFU5",24,0)
HELP1 ;displays a list of the record's fields from file 357.6, IB PACKAGE INTERFACE file - EXECUTABLE HELP FOR FIELDS IN THE DATA FIELD FILE
"RTN","IBDFU5",25,0)
 ;
"RTN","IBDFU5",26,0)
 ;INPUT - D0 is a pointer to a DATA FIELD (file 357.5)
"RTN","IBDFU5",27,0)
 ;
"RTN","IBDFU5",28,0)
 N RTN
"RTN","IBDFU5",29,0)
 Q:'$G(D0)
"RTN","IBDFU5",30,0)
 W !,"WHAT DATA SHOULD BE PRINTED IN THE SUBFIELD? CHOOSE FROM:"
"RTN","IBDFU5",31,0)
 S RTN=$P($G(^IBE(357.5,D0,0)),"^",3) Q:'RTN
"RTN","IBDFU5",32,0)
 D SHOWDATA
"RTN","IBDFU5",33,0)
 Q
"RTN","IBDFU5",34,0)
HELP2 ;displays a list of the record's fields from file 357.6, IB PACKAGE INTERFACE file - EXECUTABLE HELP FOR FIELDS IN THE SELECTION LIST FILE
"RTN","IBDFU5",35,0)
 ;
"RTN","IBDFU5",36,0)
 ;INPUT - D0 should be a pointer to a SELECTION LIST
"RTN","IBDFU5",37,0)
 ;
"RTN","IBDFU5",38,0)
 N RTN
"RTN","IBDFU5",39,0)
 W !,"WHAT DATA SHOULD BE PRINTED IN THIS SUBCOLUMN? CHOOSE FROM:"
"RTN","IBDFU5",40,0)
 Q:'$G(D0)
"RTN","IBDFU5",41,0)
 S RTN=$P($G(^IBE(357.2,D0,0)),"^",11) Q:'RTN
"RTN","IBDFU5",42,0)
 D SHOWDATA
"RTN","IBDFU5",43,0)
 W !,"You can also enter 0 if you want the item number entered in the subcolumn.",!
"RTN","IBDFU5",44,0)
 Q
"RTN","IBDFU5",45,0)
 ;
"RTN","IBDFU5",46,0)
HELP3 ;displays a list of the record's fields from file 357.6, IB PACKAGE INTERFACE file - used to display available data to the user before he enters a data field label
"RTN","IBDFU5",47,0)
 ;
"RTN","IBDFU5",48,0)
 ;INPUT - D0 is a pointer to a DATA FIELD (file 357.5)
"RTN","IBDFU5",49,0)
 N RTN
"RTN","IBDFU5",50,0)
 W !,"Available Data:"
"RTN","IBDFU5",51,0)
 Q:'$G(D0)
"RTN","IBDFU5",52,0)
 S RTN=$P($G(^IBE(357.5,D0,0)),"^",3) Q:'RTN
"RTN","IBDFU5",53,0)
 D SHOWDATA
"RTN","IBDFU5",54,0)
 Q
"RTN","IBDFU5",55,0)
 ;
"RTN","IBDFU5",56,0)
HELP4 ;displays a list of the record's fields from file 357.6, IB PACKAGE INTERFACE file - used to display to the user the available data before a subcolumn to a selection list
"RTN","IBDFU5",57,0)
 ;
"RTN","IBDFU5",58,0)
 ;INPUT - D0 should be a pointer to a SELECTION LIST
"RTN","IBDFU5",59,0)
 ;
"RTN","IBDFU5",60,0)
 N RTN
"RTN","IBDFU5",61,0)
 W !,"Available Data:"
"RTN","IBDFU5",62,0)
 Q:'$G(D0)
"RTN","IBDFU5",63,0)
 S RTN=$P($G(^IBE(357.2,D0,0)),"^",11) Q:'RTN
"RTN","IBDFU5",64,0)
 D SHOWDATA
"RTN","IBDFU5",65,0)
 Q
"RTN","IBDFU5",66,0)
HELP5 ;for number of columns in list
"RTN","IBDFU5",67,0)
 I $G(IBDEVICE("LISTMAN")) D FULL^VALM1
"RTN","IBDFU5",68,0)
 W !!,"A selection list COLUMN contains items on the list. It may consist of several",!,"subcolumns. For example, a typical column may have three subcolumns, one"
"RTN","IBDFU5",69,0)
 W !,"containing a code, the second a description, and the third a marking area for",!,"the user to indicate his selections from the list. Besides going down the",!,"form, the list can can go across the form by having multiple columns."
"RTN","IBDFU5",70,0)
 W !!,"Entering the number of columns is optional. By default the entire block will",!,"be filled with the list.",!
"RTN","IBDFU5",71,0)
 I $G(IBDEVICE("LISTMAN")) D PAUSE^IBDFU5,RE^VALM4
"RTN","IBDFU5",72,0)
 Q
"RTN","IBDFU5",73,0)
 ;
"RTN","IBDFU5",74,0)
SHOWDATA ;displays a discription of the the record returned by the package interface
"RTN","IBDFU5",75,0)
 ;
"RTN","IBDFU5",76,0)
 ;INPUT - RTN - ptr to the package interface file
"RTN","IBDFU5",77,0)
 N NODE,SUB,ROW,COL,LINE,DESCR,CANSHOW,IEN
"RTN","IBDFU5",78,0)
 S NODE=$G(^IBE(357.6,RTN,2))
"RTN","IBDFU5",79,0)
 ;
"RTN","IBDFU5",80,0)
 ;piece 1 may not be displayable (an ien)
"RTN","IBDFU5",81,0)
 S CANSHOW=$S($P(NODE,"^",17)=0:0,1:1)
"RTN","IBDFU5",82,0)
 I 'CANSHOW S NODE=""
"RTN","IBDFU5",83,0)
 ;
"RTN","IBDFU5",84,0)
 F ROW=0:1:3 S LINE="" D  W:(LINE'="") !,LINE
"RTN","IBDFU5",85,0)
 .F COL=1:1:2 S SUB=COL+(2*ROW) D  Q:LINE=""
"RTN","IBDFU5",86,0)
 ..S DESCR=""
"RTN","IBDFU5",87,0)
 ..I (SUB'=1) S NODE="",IEN=$O(^IBE(357.6,RTN,15,"C",SUB,0)) S:IEN NODE=$G(^IBE(357.6,RTN,15,IEN,0))
"RTN","IBDFU5",88,0)
 ..I NODE="" I (COL=1&'$D(^IBE(357.6,RTN,15,"C",SUB+1)))!((COL'=1)&(DESCR="(not applicable)")) Q
"RTN","IBDFU5",89,0)
 ..S DESCR=$P(NODE,"^") I DESCR'="" S DESCR=DESCR_" :"_$P(NODE,"^",2)_" char"
"RTN","IBDFU5",90,0)
 ..I DESCR="" S DESCR="(N/A)"
"RTN","IBDFU5",91,0)
 ..S LINE=LINE_$S(DESCR="":"",1:$$PADRIGHT^IBDFU("  "_SUB_"= "_DESCR,39))
"RTN","IBDFU5",92,0)
 Q
"RTN","IBDFU5",93,0)
 ;
"RTN","IBDFU5",94,0)
RESET ;resets the scrolling area of the screen to that defined by List Manager
"RTN","IBDFU5",95,0)
 ;I $G(IOSTBM)'="" S IOTM=IOSL-4,IOBM=IOSL W IOSC,@IOSTBM,IORC
"RTN","IBDFU5",96,0)
 Q
"RTN","IBDFU5",97,0)
VARIABLE(VAR) ;returns 0 if VAR is not syntactically a good local variable name, 1 otherwise
"RTN","IBDFU5",98,0)
 N I,LEN,CHAR,GOOD
"RTN","IBDFU5",99,0)
 S LEN=$L(VAR)
"RTN","IBDFU5",100,0)
 S CHAR=$E(VAR)
"RTN","IBDFU5",101,0)
 I '((CHAR?1A)!(CHAR="%")) Q 0
"RTN","IBDFU5",102,0)
 S GOOD=1
"RTN","IBDFU5",103,0)
 F I=2:1:LEN S CHAR=$E(VAR,I) I '((CHAR?1A)!(CHAR?1N)) S GOOD=0 Q
"RTN","IBDFU5",104,0)
 Q GOOD
"RTN","IBDFU5",105,0)
ID1 ;writes identifier for subcolumn of selection list (file 357.2)
"RTN","IBDFU5",106,0)
 N NODE,TYPE,PIECE,IEN
"RTN","IBDFU5",107,0)
 S NODE=$G(^(0)) Q:NODE=""
"RTN","IBDFU5",108,0)
 W "HEADER=",$$PADRIGHT^IBDFU($P(NODE,U,2),27)_"  CONTENT="
"RTN","IBDFU5",109,0)
 I $P(NODE,U,4)=1 D
"RTN","IBDFU5",110,0)
 .S TYPE=$P($G(^IBE(357.2,D0,0)),"^",11) Q:'TYPE
"RTN","IBDFU5",111,0)
 .S PIECE=+$P(NODE,U,5)
"RTN","IBDFU5",112,0)
 .W:'PIECE "#COUNT"
"RTN","IBDFU5",113,0)
 .W:PIECE $$DATANAME^IBDFU1B(TYPE,PIECE)
"RTN","IBDFU5",114,0)
 I $P(NODE,U,4)=2 D
"RTN","IBDFU5",115,0)
 .S TYPE=$P(NODE,U,6) Q:'TYPE
"RTN","IBDFU5",116,0)
 .W $P($G(^IBE(357.91,TYPE,0)),U)
"RTN","IBDFU5",117,0)
 Q
"RTN","IBDFU5",118,0)
 ;
"RTN","IBDFU5",119,0)
DFLTS() ;returns the default form if found, 0 otherwise
"RTN","IBDFU5",120,0)
 N FORM
"RTN","IBDFU5",121,0)
 S FORM=0 F  S FORM=$O(^IBE(357,"B","DEFAULTS",FORM)) Q:'FORM  Q:$P($G(^IBE(357,FORM,0)),"^",7)
"RTN","IBDFU5",122,0)
 Q FORM
"RTN","IBDFU5",123,0)
 ;
"RTN","IBDFU5",124,0)
OKPIECE(PI,PIECE) ;returns 1 if the piece=PIECE is selectable for the package interface=PI, 0 otherwise
"RTN","IBDFU5",125,0)
 ;
"RTN","IBDFU5",126,0)
 I ('$G(PIECE))!('$G(PI)) Q 0
"RTN","IBDFU5",127,0)
 N QUIT S QUIT=0
"RTN","IBDFU5",128,0)
 I PIECE=1 S QUIT=$S($P($G(^IBE(357.6,PI,2)),"^",17)'=0:1,1:0)
"RTN","IBDFU5",129,0)
 I PIECE'=1 S QUIT=$D(^IBE(357.6,PI,15,"C",PIECE))
"RTN","IBDFU5",130,0)
 Q QUIT
"RTN","IBDFU5A")
0^247^B3914879
"RTN","IBDFU5A",1,0)
IBDFU5A ;ALB/CJM - ENCOUNTER FORM - (contains Xecutable help);3/29/93
"RTN","IBDFU5A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU5A",3,0)
 ;
"RTN","IBDFU5A",4,0)
HELP6 ;help for choosing print condition
"RTN","IBDFU5A",5,0)
 W "Choose FOR EVERY APPOINTMENT if the form should print for every appointment.",!
"RTN","IBDFU5A",6,0)
 W !,"Choose ONLY FOR EARLIEST APPOINTMENT if the form should print once per",!,"patient, even if he has multiple appointments",!
"RTN","IBDFU5A",7,0)
 W !,"Choose ONLY IF MULTIPLE APPOINTMENTS if the form should print only if the",!,"patient has multiple appointments. If so, it will print only for the",!,"earliest appointment.",!
"RTN","IBDFU5A",8,0)
 Q
"RTN","IBDFU5A",9,0)
 ;
"RTN","IBDFU5A",10,0)
HELP7 ;help for entering field .16 in the package interface file, type of 
"RTN","IBDFU5A",11,0)
 ;object that may point to a package interace
"RTN","IBDFU5A",12,0)
 ;
"RTN","IBDFU5A",13,0)
 W !,"This field only applies to input interfaces."
"RTN","IBDFU5A",14,0)
 W !,"It is used to determine what type of form objects may reference the interface."
"RTN","IBDFU5A",15,0)
 W !,"Enter any combination of S=selection list, M=multiple choice, H=hand print P=PANDAS"
"RTN","IBDFU5A",16,0)
 W !,"Example: You may enter 'SM'."
"RTN","IBDFU5A",17,0)
 Q
"RTN","IBDFU6")
0^248^B427128
"RTN","IBDFU6",1,0)
IBDFU6 ;ALB/CJM - ENCOUNTER FORM - (utilities for data fields);3/29/93
"RTN","IBDFU6",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU6",3,0)
FORMAT(ARY,WIDTH,LABEL) ;formats the word-processing field pointed to by @ARY into a column of width=WIDTH
"RTN","IBDFU6",4,0)
 N LINE,W
"RTN","IBDFU6",5,0)
 K ^UTILITY($J,"W"),DIWF
"RTN","IBDFU6",6,0)
 S LINE=0,DIWL=1,DIWR=WIDTH
"RTN","IBDFU6",7,0)
 I $D(LABEL) S X=$E(LABEL_" ",1,WIDTH) I X'="" D ^DIWP
"RTN","IBDFU6",8,0)
 F  S LINE=$O(@ARY@(LINE)) Q:'LINE  S X=$G(@ARY@(LINE,0)) I X'="" D ^DIWP
"RTN","IBDFU6",9,0)
 K X,DIWL,DIWR,DIWF
"RTN","IBDFU6",10,0)
 Q
"RTN","IBDFU7")
0^249^B1128095
"RTN","IBDFU7",1,0)
IBDFU7 ;ALB/CJM - ENCOUNTER FORM - (utilities to handle form locks);3/29/93
"RTN","IBDFU7",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU7",3,0)
LOCKFORM(FORM) ;locks the form - returns 0 if unsuccessful, 1 otherwise
"RTN","IBDFU7",4,0)
 ;this lock is used to prevent multiple processes from simultaneously compiling a form
"RTN","IBDFU7",5,0)
 L +^IBE(357,FORM,"LOCK1"):10
"RTN","IBDFU7",6,0)
 Q $T
"RTN","IBDFU7",7,0)
 ;
"RTN","IBDFU7",8,0)
LOCKFRM2(FORM) ;locks the form - returns 0 if unsuccessful, 1 otherwise
"RTN","IBDFU7",9,0)
 ;this lock is used to prevent multiple users from editing a form simultaneously
"RTN","IBDFU7",10,0)
 L +^IBE(357,FORM,"LOCK2"):5
"RTN","IBDFU7",11,0)
 Q $T
"RTN","IBDFU7",12,0)
 ;
"RTN","IBDFU7",13,0)
FREEFORM(FORM) ;unlocks the form
"RTN","IBDFU7",14,0)
 L -^IBE(357,FORM,"LOCK1")
"RTN","IBDFU7",15,0)
 Q
"RTN","IBDFU7",16,0)
 ;
"RTN","IBDFU7",17,0)
FREEFRM2(FORM) ;unlocks the form locked by LOCKFRM2()
"RTN","IBDFU7",18,0)
 L -^IBE(357,FORM,"LOCK2")
"RTN","IBDFU7",19,0)
 Q
"RTN","IBDFU7",20,0)
 ;
"RTN","IBDFU7",21,0)
 ;
"RTN","IBDFU7",22,0)
LOCKMSG2(FORM) ;displays a message to the user for forms unavailable by LOCKFRM2()
"RTN","IBDFU7",23,0)
 N FORMNAME
"RTN","IBDFU7",24,0)
 S FORMNAME=$P($G(^IBE(357,FORM,0)),"^",1)
"RTN","IBDFU7",25,0)
 W !!,"The form = '"_FORMNAME_"' is currently not available.",!,"It is being edited by another person.",!
"RTN","IBDFU7",26,0)
 D PAUSE^IBDFU5
"RTN","IBDFU7",27,0)
 Q
"RTN","IBDFU8")
0^250^B13867822
"RTN","IBDFU8",1,0)
IBDFU8 ;ALB/CJM - ENCOUNTER FORM - selection routines for form components;OCT 8,1993
"RTN","IBDFU8",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU8",3,0)
 ;
"RTN","IBDFU8",4,0)
SLCTBLK(FORM,SCRNSIZE,EXCLUDE) ;SCRNSIZE is the number of lines available for scrolling
"RTN","IBDFU8",5,0)
 ;EXCLUDE is a block name that can be excluded (used to exclude the HEADER block from being edited)
"RTN","IBDFU8",6,0)
 ;returns the block selected, returns "" if none selected
"RTN","IBDFU8",7,0)
 ;only allows one to be selected
"RTN","IBDFU8",8,0)
 ;
"RTN","IBDFU8",9,0)
 Q:'FORM
"RTN","IBDFU8",10,0)
 S SCRNSIZE=+$G(SCRNSIZE)-1
"RTN","IBDFU8",11,0)
 S:SCRNSIZE<1 SCRNSIZE=4
"RTN","IBDFU8",12,0)
 S EXCLUDE=$G(EXCLUDE)
"RTN","IBDFU8",13,0)
 N COUNT,CNT,PICK,BLK,ARY,NAME
"RTN","IBDFU8",14,0)
 S ARY="^TMP($J,""FORM BLOCKS"")"
"RTN","IBDFU8",15,0)
 K @ARY
"RTN","IBDFU8",16,0)
 S CNT=$$FINDALL ;FORM,EXCLUDE,ARY are inputs to FINDALL
"RTN","IBDFU8",17,0)
 ;
"RTN","IBDFU8",18,0)
 ;if CNT=1 return the only block
"RTN","IBDFU8",19,0)
 I CNT=1 S NAME=$O(@ARY@("NAME","")) Q $S(NAME'="":$O(@ARY@("NAME",NAME,0)),1:"")
"RTN","IBDFU8",20,0)
 ; 
"RTN","IBDFU8",21,0)
 ;if CNT'=1 loop through the blocks, displaying them to the user and let him choose
"RTN","IBDFU8",22,0)
AGAIN ;
"RTN","IBDFU8",23,0)
 S (PICK,NAME)="",COUNT=0
"RTN","IBDFU8",24,0)
 F  S NAME=$O(@ARY@("NAME",NAME)) Q:(PICK'="")!(NAME="")  D
"RTN","IBDFU8",25,0)
 .S BLK=0 F  S BLK=$O(@ARY@("NAME",NAME,BLK)) Q:(PICK'="")!('BLK)  D  Q:NAME=""
"RTN","IBDFU8",26,0)
 ..S COUNT=COUNT+1,@ARY@("#",COUNT)=BLK W !,COUNT,"   ",NAME,?38,$E($P($G(^IBE(357.1,BLK,0)),"^",13),1,42)
"RTN","IBDFU8",27,0)
 ..I COUNT#SCRNSIZE=0 S PICK=$$CHOOSE
"RTN","IBDFU8",28,0)
 I (PICK=""),COUNT,COUNT#SCRNSIZE'=0 S PICK=$$CHOOSE
"RTN","IBDFU8",29,0)
 I PICK="" K DIR S DIR(0)="Y",DIR("A")="No block selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
"RTN","IBDFU8",30,0)
 I PICK="?" G AGAIN
"RTN","IBDFU8",31,0)
 K @ARY
"RTN","IBDFU8",32,0)
 Q $S((PICK'>0):"",1:PICK)
"RTN","IBDFU8",33,0)
 ;
"RTN","IBDFU8",34,0)
FINDALL() ;finds all of the blocks on FORM (except the one named EXCLUDE) and puts them on @ARY,returns the cound
"RTN","IBDFU8",35,0)
 N BLK,COUNT,NODE
"RTN","IBDFU8",36,0)
 S BLK="",COUNT=0 F  S BLK=$O(^IBE(357.1,"C",FORM,BLK)) Q:'BLK  S NODE=$G(^IBE(357.1,BLK,0)),NAME=$P(NODE,"^") S:(NAME'="")&(NAME'=EXCLUDE)&($P(NODE,"^",2)=FORM) @ARY@("NAME",$$UP^XLFSTR(NAME),BLK)="",COUNT=COUNT+1
"RTN","IBDFU8",37,0)
 Q COUNT
"RTN","IBDFU8",38,0)
 ;
"RTN","IBDFU8",39,0)
CHOOSE() ;asks the user to select a blk - @ARY@("#", is the aray of blocks displayed so far(subscripted by the number on the list), @ARY@("NAME", the entire array (subscripted by name,ien)
"RTN","IBDFU8",40,0)
 ;sets NAME to " " and COUNT to 0 if ? is entered - starts display of list over
"RTN","IBDFU8",41,0)
 N ANS,QUIT,PICK,NEXT1,NEXT2
"RTN","IBDFU8",42,0)
 S QUIT=0
"RTN","IBDFU8",43,0)
 F  Q:QUIT  D  D:'QUIT MSG
"RTN","IBDFU8",44,0)
 .S (PICK,ANS)=""
"RTN","IBDFU8",45,0)
 .W !,"Choose 1-",COUNT,$S(COUNT<CNT:" or hit RETURN to see more",1:""),": "
"RTN","IBDFU8",46,0)
 .R ANS:DTIME
"RTN","IBDFU8",47,0)
 .I '$T!($E(ANS,1)="^") S PICK=-1,QUIT=1 Q
"RTN","IBDFU8",48,0)
 .I ANS="" S QUIT=1 Q
"RTN","IBDFU8",49,0)
 .I $E(ANS,1)="?" D HELP Q
"RTN","IBDFU8",50,0)
 .;
"RTN","IBDFU8",51,0)
 .;convert to upper case
"RTN","IBDFU8",52,0)
 .S ANS=$$UP^XLFSTR(ANS)
"RTN","IBDFU8",53,0)
 .
"RTN","IBDFU8",54,0)
 .;if user entered a displayed number then he's made his choice
"RTN","IBDFU8",55,0)
 .I $D(@ARY@("#",ANS)) S PICK=$G(@ARY@("#",ANS)),QUIT=1 Q
"RTN","IBDFU8",56,0)
 .;
"RTN","IBDFU8",57,0)
 .;if the user entered an exact name, and the name is unique then he's made his choice
"RTN","IBDFU8",58,0)
 .S PICK=$O(@ARY@("NAME",ANS,PICK)) I PICK,'$O(@ARY@("NAME",ANS,PICK)) S QUIT=1 Q
"RTN","IBDFU8",59,0)
 .Q:PICK  ;don't set QUIT=1 because name is not unique
"RTN","IBDFU8",60,0)
 .;
"RTN","IBDFU8",61,0)
 .;if the user entered a partial name accept it if there is exactly one match
"RTN","IBDFU8",62,0)
 .S NEXT1=$O(@ARY@("NAME",ANS)) Q:(NEXT1="")!($E(NEXT1,1,$L(ANS))'=ANS)
"RTN","IBDFU8",63,0)
 .S NEXT2=$O(@ARY@("NAME",NEXT1)) Q:($E(NEXT2,1,$L(ANS))=ANS)  ;because user did not type in enough to uniquely identify the block
"RTN","IBDFU8",64,0)
 .;make sure there are not two blocks with the same name - if ok, accept it
"RTN","IBDFU8",65,0)
 .S PICK=$O(@ARY@("NAME",NEXT1,PICK)) Q:'PICK  I '$O(@ARY@("NAME",NEXT1,PICK)) S QUIT=1 Q
"RTN","IBDFU8",66,0)
 Q PICK
"RTN","IBDFU8",67,0)
 ;
"RTN","IBDFU8",68,0)
HELP ;choosing help restarts the display (by setting NAME="")
"RTN","IBDFU8",69,0)
 W !,"You can choose a block by the number or by it's name.",!
"RTN","IBDFU8",70,0)
 D PAUSE^IBDFU5
"RTN","IBDFU8",71,0)
 S QUIT=1,NAME="",PICK="?",COUNT=0
"RTN","IBDFU8",72,0)
 Q
"RTN","IBDFU8",73,0)
MSG ;
"RTN","IBDFU8",74,0)
 W !,"You must enter the number or name of the block!"
"RTN","IBDFU8",75,0)
 D PAUSE^IBDFU5
"RTN","IBDFU8",76,0)
 Q
"RTN","IBDFU9")
0^251^B4638447
"RTN","IBDFU9",1,0)
IBDFU9 ;ALB/CJM - ENCOUNTER FORM - post-selection action for package interface file, screen for data qualifiers;OCT 18,1993
"RTN","IBDFU9",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU9",3,0)
 ;
"RTN","IBDFU9",4,0)
ASK ;post-slection action for package interface
"RTN","IBDFU9",5,0)
 Q:'$D(VALMEVL)  ; only ask if in listman
"RTN","IBDFU9",6,0)
 Q:DIC["358.6"
"RTN","IBDFU9",7,0)
 N LINE,DA,ANS,TYPE
"RTN","IBDFU9",8,0)
 S DA=+Y
"RTN","IBDFU9",9,0)
 I $G(DA),$D(^IBE(357.6,DA,1)) D
"RTN","IBDFU9",10,0)
 .S TYPE=$P($G(^IBE(357.6,DA,0)),"^",6)
"RTN","IBDFU9",11,0)
 .;
"RTN","IBDFU9",12,0)
 .; -- see if we can find a marker and quit if in fileman  
"RTN","IBDFU9",13,0)
 .;
"RTN","IBDFU9",14,0)
 .; -- in the case of reports, the post-selection action is not executed 
"RTN","IBDFU9",15,0)
 .;    until after the report is created in the setup, so it's not useful
"RTN","IBDFU9",16,0)
 .Q:TYPE=4
"RTN","IBDFU9",17,0)
 .;
"RTN","IBDFU9",18,0)
 .S TYPE=$S(TYPE=1:"type of data",TYPE=2:"type of data",TYPE=3:"type of data",TYPE=4:"report",1:"package interface")
"RTN","IBDFU9",19,0)
 .S LINE=0 W ! F  S LINE=$O(^IBE(357.6,DA,1,LINE)) Q:'LINE  W !,$G(^IBE(357.6,DA,1,LINE,0))
"RTN","IBDFU9",20,0)
 .W !!,"Are you sure this is the right "_TYPE_"?: "
"RTN","IBDFU9",21,0)
 .R ANS:DTIME
"RTN","IBDFU9",22,0)
 .I '$T S Y=-1 Q
"RTN","IBDFU9",23,0)
 .I ANS["?" W !!,"Enter Y for YES if the data is correct.",!,"Enter N for NO if the data is not correct." D
"RTN","IBDFU9",24,0)
 ..W !!,"Are you sure this is the right "_TYPE_"?: "
"RTN","IBDFU9",25,0)
 ..R ANS:DTIME
"RTN","IBDFU9",26,0)
 .I (ANS["^")!(ANS["?")!(ANS="")!("Yy"'[$E(ANS,1)) S Y=-1
"RTN","IBDFU9",27,0)
 Q
"RTN","IBDFU9",28,0)
 ;
"RTN","IBDFU9",29,0)
DQGOOD(PI,QLFR) ;screen for data modifiers
"RTN","IBDFU9",30,0)
 ;
"RTN","IBDFU9",31,0)
 N NODE
"RTN","IBDFU9",32,0)
 Q:'$G(PI) 0
"RTN","IBDFU9",33,0)
 Q:'$G(QLFR) 0
"RTN","IBDFU9",34,0)
 S NODE=$G(^IBE(357.6,PI,0))
"RTN","IBDFU9",35,0)
 ;
"RTN","IBDFU9",36,0)
 ;for selection interfaces, the list of data qualifiers is kept with the input interface
"RTN","IBDFU9",37,0)
 I $P(NODE,"^",6)=3 S PI=$P(NODE,"^",13)
"RTN","IBDFU9",38,0)
 Q:'PI 0
"RTN","IBDFU9",39,0)
 Q $D(^IBE(357.6,PI,13,"B",QLFR_";IBD(357.98,"))
"RTN","IBDFU9",40,0)
 ;
"RTN","IBDFU9",41,0)
DTGOOD(PI,TYPE) ;screen for datatypes
"RTN","IBDFU9",42,0)
 ;
"RTN","IBDFU9",43,0)
 N NODE
"RTN","IBDFU9",44,0)
 Q:'$G(PI) 0
"RTN","IBDFU9",45,0)
 Q:'$G(TYPE) 0
"RTN","IBDFU9",46,0)
 S NODE=$G(^IBE(357.6,PI,0))
"RTN","IBDFU9",47,0)
 ;
"RTN","IBDFU9",48,0)
 ;for selection interfaces, the list of data qualifiers is kept with the input interface
"RTN","IBDFU9",49,0)
 I $P(NODE,"^",6)=3 S PI=$P(NODE,"^",13)
"RTN","IBDFU9",50,0)
 Q:'PI 0
"RTN","IBDFU9",51,0)
 Q $D(^IBE(357.6,PI,13,"B",TYPE_";IBE(359.1,"))
"RTN","IBDFU91")
0^252^B4644604
"RTN","IBDFU91",1,0)
IBDFU91 ;ALB/CJM - ENCOUNTER FORM - transforms needed to validate,display and pass data;AUG 18,1995
"RTN","IBDFU91",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFU91",3,0)
 ;
"RTN","IBDFU91",4,0)
OUTPUT(PI,Y) ;xecutes the output transform of the package interface on Y
"RTN","IBDFU91",5,0)
 ;Y should be passed by reference
"RTN","IBDFU91",6,0)
 ;the underlying output transform should set Y="" if the transform can not be made
"RTN","IBDFU91",7,0)
 ;in that case Y is set to "?"
"RTN","IBDFU91",8,0)
 ;
"RTN","IBDFU91",9,0)
 I $G(PI),$D(Y) X $G(^IBE(357.6,PI,14)) I Y="" S Y="?"
"RTN","IBDFU91",10,0)
 Q
"RTN","IBDFU91",11,0)
 ;
"RTN","IBDFU91",12,0)
INPUT(PI,X) ;xecutes the input transform of the package interface on X
"RTN","IBDFU91",13,0)
 ;X should be passed by reference
"RTN","IBDFU91",14,0)
 ;the underlying input transform:
"RTN","IBDFU91",15,0)
 ;       can be interactive if $G(IBDEVICE("LISTMAN"))
"RTN","IBDFU91",16,0)
 ;       should set X to the form needed for passing to the database
"RTN","IBDFU91",17,0)
 ;       X should be killed if it can not be put into the correct form
"RTN","IBDFU91",18,0)
 ;       does not guarantee validity - for example, X could be an inactive code
"RTN","IBDFU91",19,0)
 ;
"RTN","IBDFU91",20,0)
 I $G(PI),$D(X) X $G(^IBE(357.6,PI,9))
"RTN","IBDFU91",21,0)
 Q
"RTN","IBDFU91",22,0)
 ;
"RTN","IBDFU91",23,0)
CHOICE(PI,X) ;executes the selector of the package interface=PI, user input is X
"RTN","IBDFU91",24,0)
 ; -- X should be passed by reference.
"RTN","IBDFU91",25,0)
 ; -- sets IBLABEL,IBID,IBQUAL
"RTN","IBDFU91",26,0)
 ;
"RTN","IBDFU91",27,0)
 N DIC,DIE,%,%W,%Y,C,DIPGM,DISYS,I,Q,D,D0,DO,DI,DQ,D1,%X,%Y,Y,DIX,DICR
"RTN","IBDFU91",28,0)
 ;execute the selector
"RTN","IBDFU91",29,0)
 I $G(PI) X $G(^IBE(357.6,PI,17))
"RTN","IBDFU91",30,0)
 Q
"RTN","IBDFU91",31,0)
 ;
"RTN","IBDFU91",32,0)
FDCHOICE(PI,X) ;executes the selector of the package interface=PI,X=the user input, then runs it through the input transform for a value that can be passed to the PCE GDI
"RTN","IBDFU91",33,0)
 ; -- X should be passed by reference.
"RTN","IBDFU91",34,0)
 ;
"RTN","IBDFU91",35,0)
 N DIC,DIE,%,%W,%Y,C,DIPGM,DISYS,I,Q,D,D0,DO,DI,DQ,D1,%X,%Y,Y,DIX,DICR,IBLABEL,IBQUAL,IBID
"RTN","IBDFU91",36,0)
 I $G(PI) D
"RTN","IBDFU91",37,0)
 .;execute the selector
"RTN","IBDFU91",38,0)
 .X $G(^IBE(357.6,PI,17))
"RTN","IBDFU91",39,0)
 .;the selector actually returns the ID for the selection in the variabel IBID - X is the displayable value, which may be different
"RTN","IBDFU91",40,0)
 .;I $G(IBID)="" K X Q
"RTN","IBDFU91",41,0)
 .;pass the selection through the input transform
"RTN","IBDFU91",42,0)
 .I $D(X),$G(IBID)'="" S X=IBID D INPUT(PI,.X)
"RTN","IBDFU91",43,0)
 Q
"RTN","IBDFU91",44,0)
 ;
"RTN","IBDFU91",45,0)
HPTRNS(TYPEDATA,X,IBFORMID) ;used to transform a value read from a hand print field (X) into a value that can be passed to the database
"RTN","IBDFU91",46,0)
 ;TYPEDATA = data type (file 359.1)
"RTN","IBDFU91",47,0)
 ;IBFORMID = id in form tracking,should be passed by reference
"RTN","IBDFU91",48,0)
 ;  available form form tracking:
"RTN","IBDFU91",49,0)
 ;  IBFORMID("DFN")
"RTN","IBDFU91",50,0)
 ;  IBFORMID("APPT")
"RTN","IBDFU91",51,0)
 ;  IBFORMID("CLINIC")
"RTN","IBDFU91",52,0)
 ;  IBFORMID("SOURCE")
"RTN","IBDFU91",53,0)
 ;
"RTN","IBDFU91",54,0)
 ;X = the value that needs to be transformed
"RTN","IBDFU91",55,0)
 ;returns the transformed value
"RTN","IBDFU91",56,0)
 ;returns "" if it can not be put inot the correct form
"RTN","IBDFU91",57,0)
 ;
"RTN","IBDFU91",58,0)
 ;the underlying input transform:
"RTN","IBDFU91",59,0)
 ;       should not be interactive
"RTN","IBDFU91",60,0)
 ;       can use the IBFORMID array
"RTN","IBDFU91",61,0)
 ;       should set X to the form needed for passing to the database
"RTN","IBDFU91",62,0)
 ;       X should be killed if it can not be put into the correct form
"RTN","IBDFU91",63,0)
 ;       does not guarantee validity - for example, X could be an inactive code
"RTN","IBDFU91",64,0)
 ;
"RTN","IBDFU91",65,0)
 I '$G(TYPEDATA)!'$D(X) S X="" Q X
"RTN","IBDFU91",66,0)
 I '$D(^IBE(359.1,TYPEDATA,0)) S X="" Q
"RTN","IBDFU91",67,0)
 X $G(^IBE(359.1,TYPEDATA,1))
"RTN","IBDFU91",68,0)
 S:'$D(X) X=""
"RTN","IBDFU91",69,0)
 Q X
"RTN","IBDFU91",70,0)
 ;
"RTN","IBDFU91",71,0)
VALIDATE(PI,X) ;used to validate the value stored with a selection(file 357.3) 
"RTN","IBDFU91",72,0)
 ;PI is assumed to be a selection type package interface
"RTN","IBDFU91",73,0)
 ;kills X if not valid, but otherwise does not change it
"RTN","IBDFU91",74,0)
 ;pass X by reference
"RTN","IBDFU91",75,0)
 ;the underlying validation transform:
"RTN","IBDFU91",76,0)
 ;    should not be interactive
"RTN","IBDFU91",77,0)
 ;    should kill X if it is not valid
"RTN","IBDFU91",78,0)
 ;
"RTN","IBDFU91",79,0)
 I X="" K X Q
"RTN","IBDFU91",80,0)
 I 'PI K X Q
"RTN","IBDFU91",81,0)
 I '$D(^IBE(357.6,PI,0)) K X Q
"RTN","IBDFU91",82,0)
 X $G(^IBE(357.6,PI,11))
"RTN","IBDFU91",83,0)
 Q
"RTN","IBDFU91",84,0)
 ;
"RTN","IBDFU91",85,0)
HELP(PI) ;writes the help message for the package interface
"RTN","IBDFU91",86,0)
 ;
"RTN","IBDFU91",87,0)
 I PI W !,?6,$G(^IBE(357.6,PI,10)),!
"RTN","IBDFU91",88,0)
 I PI D CHOICE(PI,"?")
"RTN","IBDFU91",89,0)
 Q
"RTN","IBDFUA")
0^253^B8416962
"RTN","IBDFUA",1,0)
IBDFUA ;ALB/CJM - ENCOUNTER FORM (utilities - IBDFU continued) ;NOV 16,1992
"RTN","IBDFUA",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFUA",3,0)
 ;
"RTN","IBDFUA",4,0)
PRNTVAR ;defines the screen and graphics variables needed for printing
"RTN","IBDFUA",5,0)
 ;
"RTN","IBDFUA",6,0)
 D GSET^%ZISS,KILL^%ZISS
"RTN","IBDFUA",7,0)
 S X="IOINHI;IOINORM;IOUON;IOUOFF"
"RTN","IBDFUA",8,0)
 D ENDR^%ZISS
"RTN","IBDFUA",9,0)
 S (IORVON,IORVOFF)=""
"RTN","IBDFUA",10,0)
 K X
"RTN","IBDFUA",11,0)
 Q
"RTN","IBDFUA",12,0)
 ;
"RTN","IBDFUA",13,0)
KPRNTVAR ;kills the variables defined by PRINTVAR 
"RTN","IBDFUA",14,0)
 ; -- (actually, kills all screen paramters)
"RTN","IBDFUA",15,0)
 ;
"RTN","IBDFUA",16,0)
 Q:$D(VALMEVL)  ;don't kill if listman, (needed for 1010T)
"RTN","IBDFUA",17,0)
 D GKILL^%ZISS,KILL^%ZISS
"RTN","IBDFUA",18,0)
 Q 
"RTN","IBDFUA",19,0)
 ;
"RTN","IBDFUA",20,0)
GRAPHICS() ; returns1 if graphic mode available with characters needed
"RTN","IBDFUA",21,0)
 ;sets graphics characters to "|" and "_" if graphics mode not available
"RTN","IBDFUA",22,0)
 ;If not a raster device, then returns 0 no matter what
"RTN","IBDFUA",23,0)
 ;
"RTN","IBDFUA",24,0)
 N GRAPHICS S GRAPHICS=0
"RTN","IBDFUA",25,0)
 I IBDEVICE("RASTER"),($G(IOG0)'=""),($G(IOG1)'=""),($G(IOVL)'=""),($G(IOHL)'=""),($G(IOBLC)'=""),($G(IOBRC)'=""),($G(IOTLC)'=""),($G(IOTRC)'="") S GRAPHICS=1
"RTN","IBDFUA",26,0)
 S:IBDEVICE("PCL") GRAPHICS=1
"RTN","IBDFUA",27,0)
 S:'GRAPHICS (IOVL,IOBLC,IOBRC)="|",(IOHL,IOTRC,IOTLC)="_"
"RTN","IBDFUA",28,0)
 Q GRAPHICS
"RTN","IBDFUA",29,0)
 ;
"RTN","IBDFUA",30,0)
DEVICE(LISTMAN,IBDEVICE) ;sets various device parameters
"RTN","IBDFUA",31,0)
 ;LISTMAN=1 if display for the List Manager, 0 otherwise
"RTN","IBDFUA",32,0)
 ;returns IBDEVICE array - pass by reference
"RTN","IBDFUA",33,0)
 ;Also, the required Kernel screen and graphics parameters are defined.
"RTN","IBDFUA",34,0)
 ;
"RTN","IBDFUA",35,0)
 ;IBDEVICE array elements:
"RTN","IBDFUA",36,0)
 ;  RASTER = 1 if IOXY defined and not a crt
"RTN","IBDFUA",37,0)
 ;  CRT= 1 if crt
"RTN","IBDFUA",38,0)
 ;  GRAPHICS=1 if graphic mode available with characters needed.
"RTN","IBDFUA",39,0)
 ;  PCL=1 if the printer language is PCL, version 5 or higher.
"RTN","IBDFUA",40,0)
 ;  SIMPLEX,DUPLEX_LONG,DUPLEX_SHORT are printer control statements for simplex, duplex long-edge binding, duplex short-edge binding - in an encounter form file until added to the TERMINAL TYPE file in future version of KERNEL
"RTN","IBDFUA",41,0)
 ;
"RTN","IBDFUA",42,0)
 S IBDEVICE("TCP")=0
"RTN","IBDFUA",43,0)
 ;
"RTN","IBDFUA",44,0)
 I LISTMAN D  Q
"RTN","IBDFUA",45,0)
 .S IBDEVICE("LISTMAN")=1
"RTN","IBDFUA",46,0)
 .S IBDEVICE("CRT")=1
"RTN","IBDFUA",47,0)
 .S IBDEVICE("PCL")=0
"RTN","IBDFUA",48,0)
 .S IBDEVICE("GRAPHICS")=0
"RTN","IBDFUA",49,0)
 .S IBDEVICE("RASTER")=0
"RTN","IBDFUA",50,0)
 .D NOGRPHCS^IBDFU5
"RTN","IBDFUA",51,0)
 ;
"RTN","IBDFUA",52,0)
 ;not List Manager ->
"RTN","IBDFUA",53,0)
 ;
"RTN","IBDFUA",54,0)
 S (IBDEVICE("LISTMAN"),IBDEVICE("RASTER"),IBDEVICE("CRT"),IBDEVICE("PCL"))=0
"RTN","IBDFUA",55,0)
 I $E($G(IOST),1,2)="C-" S IBDEVICE("CRT")=1
"RTN","IBDFUA",56,0)
 I $G(IOXY)'="" S IBDEVICE("RASTER")=1
"RTN","IBDFUA",57,0)
 D PRNTVAR
"RTN","IBDFUA",58,0)
 S (IBDEVICE("SIMPLEX"),IBDEVICE("DUPLEX_LONG"),IBDEVICE("DUPLEX_SHORT"))=""
"RTN","IBDFUA",59,0)
 I 'IBDEVICE("CRT"),'LISTMAN,$G(IOST(0)) D
"RTN","IBDFUA",60,0)
 .N TERMINAL,TEMP
"RTN","IBDFUA",61,0)
 .S TERMINAL=$G(^IBE(357.94,+$O(^IBE(357.94,"B",IOST(0),0)),0))
"RTN","IBDFUA",62,0)
 .S IBDEVICE("TCP")=+$P(TERMINAL,"^",6)
"RTN","IBDFUA",63,0)
 .S IBDEVICE("RESET")=$P(TERMINAL,"^",7)
"RTN","IBDFUA",64,0)
 .S IBDEVICE("PCL")=$S($P(TERMINAL,"^",2)=1:1,1:0)
"RTN","IBDFUA",65,0)
 .I $P(TERMINAL,"^",3)]"" S TEMP="S IBDEVICE(""SIMPLEX"")="_$P(TERMINAL,"^",3) X TEMP
"RTN","IBDFUA",66,0)
 .;
"RTN","IBDFUA",67,0)
 .;do not define duplex mode if simplex not defined
"RTN","IBDFUA",68,0)
 .Q:IBDEVICE("SIMPLEX")=""
"RTN","IBDFUA",69,0)
 .I $P(TERMINAL,"^",4)]"" S TEMP="S IBDEVICE(""DUPLEX_LONG"")="_$P(TERMINAL,"^",4) X TEMP
"RTN","IBDFUA",70,0)
 .I $P(TERMINAL,"^",5)]"" S TEMP="S IBDEVICE(""DUPLEX_SHORT"")="_$P(TERMINAL,"^",5) X TEMP
"RTN","IBDFUA",71,0)
 ;
"RTN","IBDFUA",72,0)
 S IBDEVICE("GRAPHICS")=$$GRAPHICS
"RTN","IBDFUA",73,0)
 Q
"RTN","IBDFUA",74,0)
 ;
"RTN","IBDFUA",75,0)
KILL ;this can be used just before calling List Manager to save space in the symbol table
"RTN","IBDFUA",76,0)
 ;
"RTN","IBDFUA",77,0)
 ;K XQORKBD,VALMKEY,VALMDDF,VALMHDR,%,CTRLCOL,DIC,Y,X,POP,DX,DY,%I,D,ZTSK,DIC,D0,POP,SEL,DIR,DIE,DR,DA,DIK,DD,%DT,%H,IOP,COL,J
"RTN","IBDFUA",78,0)
 ;
"RTN","IBDFUA",79,0)
 K %,CTRLCOL,DIC,Y,X,POP,DX,DY,%I,D,ZTSK,DIC,D0,POP,SEL,DIR,DIE,DR,DA,DIK,DD,%DT,%H,IOP,COL,J
"RTN","IBDFUA",80,0)
 Q
"RTN","IBDFUTI")
0^254^B5791009
"RTN","IBDFUTI",1,0)
IBDFUTI ;ALB/AAS - Installation utilitie Re-Compile Templates/x-refs ; 1/31/92
"RTN","IBDFUTI",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFUTI",3,0)
 ;
"RTN","IBDFUTI",4,0)
 ; ******* DO NOT MAP THIS ROUTINE *******
"RTN","IBDFUTI",5,0)
 Q
"RTN","IBDFUTI",6,0)
 ;
"RTN","IBDFUTI",7,0)
EN ; Entry point to re-compile templates
"RTN","IBDFUTI",8,0)
 ; input: IBKIND = OUTPUT or INPUT
"RTN","IBDFUTI",9,0)
 ;
"RTN","IBDFUTI",10,0)
 K IBLINE S U="^",$P(IBLINE,"=",81)="",IBMAX=^DD("ROU")
"RTN","IBDFUTI",11,0)
 G ENQ:'$D(IBKIND),ENQ:"^OUTPUT^INPUT^"'[(U_IBKIND_U)
"RTN","IBDFUTI",12,0)
 I IBKIND="OUTPUT" S IBFILE="^DIPT",IBROU="EN^DIPZ"
"RTN","IBDFUTI",13,0)
 I IBKIND="INPUT" S IBFILE="^DIE",IBROU="EN^DIEZ"
"RTN","IBDFUTI",14,0)
 W !,IBLINE,!?20,"Recompilation of '",IBKIND,"' Templates",!,IBLINE
"RTN","IBDFUTI",15,0)
 ;
"RTN","IBDFUTI",16,0)
 S IBDX="IBCzzz"
"RTN","IBDFUTI",17,0)
 F IBI=1:1 S IBDX=$O(@IBFILE@("B",IBDX)) Q:IBDX=""!($E(IBDX,1,3)'="IBD")  S Y=+$O(^(IBDX,0)) D
"RTN","IBDFUTI",18,0)
 .I $D(@IBFILE@(Y,"ROUOLD")),^("ROUOLD")]"",$D(^(0)) S (IBEMP,Y)=Y,X=$P(^("ROUOLD"),"^"),IB0=^(0) D COMP
"RTN","IBDFUTI",19,0)
 ;
"RTN","IBDFUTI",20,0)
ENQ K IBROU,IB0,IBDX,IBI,IBMAX,IBEMP,IBFILE,IBI,IBLINE Q
"RTN","IBDFUTI",21,0)
 ;
"RTN","IBDFUTI",22,0)
COMP ; re-compile
"RTN","IBDFUTI",23,0)
 ;
"RTN","IBDFUTI",24,0)
 ;
"RTN","IBDFUTI",25,0)
 S DMAX=IBMAX D @IBROU W !!,IBLINE
"RTN","IBDFUTI",26,0)
COMPQ Q
"RTN","IBDFUTI",27,0)
 ;
"RTN","IBDFUTI",28,0)
ALL ; compile templates and x-refs
"RTN","IBDFUTI",29,0)
 S DIR(0)="Y",DIR("A")="Re-compile all AICS 'IBD' templates and cross references"
"RTN","IBDFUTI",30,0)
 S DIR("?",1)="Yes to re-compile",DIR("?",2)="No  to stop recompilation process",DIR("?")=" "
"RTN","IBDFUTI",31,0)
 D ^DIR K DIR G ALLQ:'Y
"RTN","IBDFUTI",32,0)
 D DIEZ W !!
"RTN","IBDFUTI",33,0)
 D DIPZ W !!
"RTN","IBDFUTI",34,0)
 D DIKZ
"RTN","IBDFUTI",35,0)
 W !!,"...Done.",!!,"NOTE: Recompilation should be performed on ALL systems."
"RTN","IBDFUTI",36,0)
ALLQ K A,C,L,O,X1,DQ,DIE,DMAX,DIEZ,DIEZDUP,DK,DR Q
"RTN","IBDFUTI",37,0)
 ;
"RTN","IBDFUTI",38,0)
DIEZ ; -- re-compile all IBD 'edit' templates
"RTN","IBDFUTI",39,0)
 S IBKIND="INPUT" D EN K IBKIND Q
"RTN","IBDFUTI",40,0)
 ;
"RTN","IBDFUTI",41,0)
DIPZ ; -- re-compile all IB 'print' templates
"RTN","IBDFUTI",42,0)
 S IBKIND="OUTPUT" D EN K IBKIND Q
"RTN","IBDFUTI",43,0)
 ;
"RTN","IBDFUTI",44,0)
DIKZ ; -- compile x-refs
"RTN","IBDFUTI",45,0)
 W !!,">>> Compiling cross references for  BILL/CLAIMS, INTEGRATED BILLING, and ENCOUNTER FORM files:"
"RTN","IBDFUTI",46,0)
 F IBN=357,357.1,357.2,357.3,357.4,357.5 S N=IBN W ! I $D(^DD(+N,0,"DIK"))#2 S X=^("DIK"),Y=+N,DMAX=^DD("ROU") W !,"** File "_IBN_" **",! D EN^DIKZ
"RTN","IBDFUTI",47,0)
 K IBN,N,DMAX
"RTN","IBDFUTI",48,0)
 Q
"RTN","IBDFUTL")
0^255^B24644726
"RTN","IBDFUTL",1,0)
IBDFUTL ;ALB/MAF - Maintenance Utility Routine - APR 20 1995
"RTN","IBDFUTL",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFUTL",3,0)
 ;
"RTN","IBDFUTL",4,0)
 ;  -- Set up variables for display by clinic/form/group
"RTN","IBDFUTL",5,0)
OUT S IBDFL=0  ;W !!,"Display output by: CLINICS// " D ZSET1 S X="" R X:DTIME G QUIT:X="^"!('$T) I X=""!("Cc"[X) S X="1"
"RTN","IBDFUTL",6,0)
 S DIR("B")="CLINICS",DIR(0)="SBM^C:CLINICS (Individual);G:GROUPS (Clinics);F:FORMS",DIR("A")="Sort by [C]linics, [G]roups, [F]orms" D ^DIR
"RTN","IBDFUTL",7,0)
 K DIR I $D(DIRUT)&('$D(IBDF1))!(Y<0) G EXIT
"RTN","IBDFUTL",8,0)
 I $D(DIRUT)&$D(IBDF1) G QUIT
"RTN","IBDFUTL",9,0)
 S X=$S("Gg"[X:2,"Ff"[X:3,"Ss"[X:4,1:1)
"RTN","IBDFUTL",10,0)
 ;I X="?" D ZSET1,HELP1 G OUT
"RTN","IBDFUTL",11,0)
 S IBDFSRT=$E(X)  ;D IN^DGHELP W ! I %=-1 D ZSET1,HELP1 G OUT
"RTN","IBDFUTL",12,0)
 S IBDFDIS=$S(IBDFSRT=1:"CLIN",IBDFSRT=2:"GROUP",IBDFSRT=3:"FORM",1:"QUIT")
"RTN","IBDFUTL",13,0)
 D @(IBDFDIS) S:Y=-1 IBDFNCNG=1 G:Y=-1 QUIT
"RTN","IBDFUTL",14,0)
 ;
"RTN","IBDFUTL",15,0)
 ;
"RTN","IBDFUTL",16,0)
OUT1 ;  -- Ask for what type of package interface
"RTN","IBDFUTL",17,0)
 S DIC="^IBE(357.6,",DIC(0)="AEMN",DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1",DIC("A")="Select Type of Code to Display: " D ^DIC K DIC G QUIT:Y<0
"RTN","IBDFUTL",18,0)
 S IBDFINT=+Y
"RTN","IBDFUTL",19,0)
 S DIR("B")="ACTIVE",DIR(0)="SBM^A:ACTIVE;I:INACTIVE",DIR("A")="Display codes [A]ctive, [I]nactive" D ^DIR
"RTN","IBDFUTL",20,0)
 K DIR I $D(DIRUT)&('$D(IBDF1))!(Y<0) G EXIT
"RTN","IBDFUTL",21,0)
 I $D(DIRUT)&$D(IBDF1) G QUIT
"RTN","IBDFUTL",22,0)
 S X=$S("Ii"[X:2,1:1)
"RTN","IBDFUTL",23,0)
 S IBDFACT=$E(X)
"RTN","IBDFUTL",24,0)
 I $D(IBDF1) D
"RTN","IBDFUTL",25,0)
 .K VAUTP F IBI=0:0 S IBI=$O(VAUTJ(IBI)) Q:IBI']""  S VAUTP(IBI)=$G(VAUTJ(IBI))
"RTN","IBDFUTL",26,0)
 I IBDFACT=1 D
"RTN","IBDFUTL",27,0)
 .I $E($G(^IBE(357.6,IBDFINT,11)),7,9)="CPT" S DIC="^ICPT(",IBDFCODE="CPT "
"RTN","IBDFUTL",28,0)
 .I $E($G(^IBE(357.6,IBDFINT,11)),7,9)="ICD" S DIC="^ICD9(",IBDFCODE="ICD-9 "
"RTN","IBDFUTL",29,0)
 .I $E($G(^IBE(357.6,IBDFINT,11)),7,9)="VST" S DIC="^IBE(357.69,",IBDFCODE="Type of Visit "
"RTN","IBDFUTL",30,0)
 .I DIC]"" S VAUTVB="VAUTJ",VAUTNI=2,VAUTSTR=IBDFCODE_"code" S VAUTNALL=1 D FIRST^VAUTOMA
"RTN","IBDFUTL",31,0)
 I (Y<0)&$D(IBDF1) D  K VAUTP G QUIT
"RTN","IBDFUTL",32,0)
 .F IBI=0:0 S IBI=$O(VAUTP(IBI)) Q:IBI']""  S VAUTJ(IBI)=$G(VAUTP(IBI))
"RTN","IBDFUTL",33,0)
 ;I $D(DIRUT)&('$D(IBDF1))!(Y<0) G EXIT
"RTN","IBDFUTL",34,0)
 I '$D(IBDF1) K XQORS,VALMEVL D EN^VALM("IBDF UTIL PRIMARY SCREEN")
"RTN","IBDFUTL",35,0)
 I $D(IBDF1) D HDR,KILL,INIT S VALMBCK="R",VALMBG=1
"RTN","IBDFUTL",36,0)
 Q
"RTN","IBDFUTL",37,0)
 ;
"RTN","IBDFUTL",38,0)
 ;
"RTN","IBDFUTL",39,0)
HDR ; -- header code
"RTN","IBDFUTL",40,0)
 I IBDFACT=1 D
"RTN","IBDFUTL",41,0)
 .S VALMHDR(1)="This screen lists Active codes on Encounter Forms."
"RTN","IBDFUTL",42,0)
 I IBDFACT'=1 D
"RTN","IBDFUTL",43,0)
 .S VALMHDR(1)="This screen lists Inactive codes on  Encounter Forms."
"RTN","IBDFUTL",44,0)
 Q
"RTN","IBDFUTL",45,0)
 ;
"RTN","IBDFUTL",46,0)
 ;  -- Set up list
"RTN","IBDFUTL",47,0)
INIT D FULL^VALM1 S (IBDCNT,IBDCNT1,VALMCNT)=0
"RTN","IBDFUTL",48,0)
 K ^TMP("CPT",$J),^TMP("CPTIDX",$J) D KILL^VALM10()
"RTN","IBDFUTL",49,0)
 S IBDFCNT1=0 D @(IBDFDIS_"1^IBDFUTL1")
"RTN","IBDFUTL",50,0)
 I '$D(^TMP("CPT",$J)) D NUL
"RTN","IBDFUTL",51,0)
 Q
"RTN","IBDFUTL",52,0)
 ;
"RTN","IBDFUTL",53,0)
 ;  -- Ask for clinics one/many/all
"RTN","IBDFUTL",54,0)
CLIN S VAUTVB="VAUTC",DIC="^SC(",DIC("S")="I $P(^(0),U,3)=""C""",VAUTSTR="Clinic",VAUTNI=2 D FIRST^VAUTOMA K DIC S:Y=-1 IBDFL=1 Q:IBDFL
"RTN","IBDFUTL",55,0)
 Q
"RTN","IBDFUTL",56,0)
 ;
"RTN","IBDFUTL",57,0)
 ;  -- Ask for forms one/many/all
"RTN","IBDFUTL",58,0)
FORM S VAUTVB="VAUTF",DIC="^IBE(357,",VAUTSTR="Form",VAUTNI=2 D FIRST^VAUTOMA S:Y=-1 IBDFL=1 Q:IBDFL
"RTN","IBDFUTL",59,0)
 Q
"RTN","IBDFUTL",60,0)
 ;
"RTN","IBDFUTL",61,0)
 ;  -- Ask for clinic groups one/many/all
"RTN","IBDFUTL",62,0)
GROUP S VAUTVB="VAUTG",DIC="^IBD(357.99,",VAUTSTR="Clinic Group",VAUTNI=2 D FIRST^VAUTOMA S:Y=-1 IBDFL=1 Q:IBDFL
"RTN","IBDFUTL",63,0)
 Q
"RTN","IBDFUTL",64,0)
 ;
"RTN","IBDFUTL",65,0)
 ; -- Ask for divisions one/many/all
"RTN","IBDFUTL",66,0)
DIV S IBDFL=0 D DIVISION^VAUTOMA
"RTN","IBDFUTL",67,0)
 S:Y=-1 IBDFL=1 Q:IBDFL
"RTN","IBDFUTL",68,0)
 Q
"RTN","IBDFUTL",69,0)
 ;  -- Help for display choices
"RTN","IBDFUTL",70,0)
HELP1 W !!,"Choose a number or first initial :" F K=2:1:4 W !?15,$P(Z,"^",K)
"RTN","IBDFUTL",71,0)
 W ! Q
"RTN","IBDFUTL",72,0)
 ;
"RTN","IBDFUTL",73,0)
 ;  -- Listing of selections
"RTN","IBDFUTL",74,0)
ZSET1 S Z="^1 [C]LINICS (Individual)^2 [G]ROUPS (CLINIC)^3 [F]ORMS^" Q
"RTN","IBDFUTL",75,0)
 ;
"RTN","IBDFUTL",76,0)
 ;
"RTN","IBDFUTL",77,0)
QUIT ;  -- Kill variables and reset to last display if no change has been taken place.
"RTN","IBDFUTL",78,0)
 I $D(IBDF1) S IBDFDIS=IBDFDIS1,IBDFINT=IBDFINT1,IBDFACT=IBDFACT1
"RTN","IBDFUTL",79,0)
 I '$D(IBDF1) G EXIT
"RTN","IBDFUTL",80,0)
 D KILL,INIT K IBDFNCNG S VALMBCK="R",VALMBG=1
"RTN","IBDFUTL",81,0)
 Q
"RTN","IBDFUTL",82,0)
 ;
"RTN","IBDFUTL",83,0)
 ;
"RTN","IBDFUTL",84,0)
KILL ;  -- Kill extra array variables
"RTN","IBDFUTL",85,0)
 N IBDFXX
"RTN","IBDFUTL",86,0)
 S IBDFXX=$S(IBDFDIS="FORM":"VAUTF",IBDFDIS="GROUP":"VAUTG",1:"VAUTC")
"RTN","IBDFUTL",87,0)
 I IBDFXX="VAUTF" K VAUTG,VAUTC,^TMP("CLN",$J),^TMP("CLN1",$J),^TMP("GRP",$J),^TMP("GRP1",$J)
"RTN","IBDFUTL",88,0)
 I IBDFXX="VAUTC" K VAUTG,VAUTF,^TMP("FRM",$J),^TMP("FRM1",$J),^TMP("GRP1",$J)
"RTN","IBDFUTL",89,0)
 I IBDFXX="VAUTG" K VAUTC,VAUTF,^TMP("FRM",$J),^TMP("FRM1",$J),^TMP("CLN",$J),^TMP("CLN1",$J)
"RTN","IBDFUTL",90,0)
 Q
"RTN","IBDFUTL",91,0)
 ;
"RTN","IBDFUTL",92,0)
 ;
"RTN","IBDFUTL",93,0)
EXIT ;  -- Code executed at action exit
"RTN","IBDFUTL",94,0)
 K IBDFDIS,IBDFINT,VAUTC,VAUTF,VAUTG,VAUTJ,VAUTP,IBDFINT1,IBDFDIS1,^TMP("CLN",$J),IBDFCODE,IBI,IBDFACT1
"RTN","IBDFUTL",95,0)
EXIT1 K DIC,IBDBLK,IBDCLN,IBDCLNM,IBDCNODE,IBDCNT,IBDCNT1,IBDF,IBDFBK,IBDFCIFN,IBDFCLIN,IBDFL,IBDFLG,IBDFN,IBDFNAME,IBDFNM,IBDFNODE,IBDFORM1,IBDFRM,IBDFSEL,IBDFSRT,IBDFTMP,IBDFVAL
"RTN","IBDFUTL",96,0)
 K IBDFX,IBDORM,IBDVAL,IBDVAL1,IBDFCNT1,Z,IBDFRNM,IBDFX1,IBDFX2,IBDFX3
"RTN","IBDFUTL",97,0)
 K IBCLN,IBDFCLN,IBDFCLNM,IBDFDIV,IBDFGIFN,IBDFGN,IBDFGNM,IBDIV,IBDNAM,IBDNAME,IEN,^TMP("IBDF",$J),^TMP("UTIL",$J),^TMP("CPT",$J),^TMP("CPTIDX",$J),DIVISION,IBDF,IBDFACT,VAUTNALL Q
"RTN","IBDFUTL",98,0)
 ;
"RTN","IBDFUTL",99,0)
 ;
"RTN","IBDFUTL",100,0)
HLP ; -- help code
"RTN","IBDFUTL",101,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFUTL",102,0)
 Q
"RTN","IBDFUTL",103,0)
 ;
"RTN","IBDFUTL",104,0)
 ;
"RTN","IBDFUTL",105,0)
EXP ; -- expand code
"RTN","IBDFUTL",106,0)
 Q
"RTN","IBDFUTL",107,0)
NUL ; -- NULL MESSAGE
"RTN","IBDFUTL",108,0)
 S ^TMP("CPT",$J,1,0)=" ",^TMP("CPT",$J,2,0)="There are no "_$S(IBDFACT=1:"active",1:"inactive")_" codes on any forms.",^TMP("CPTIDX",$J,1)=1,^TMP("CPTIDX",$J,2)=2
"RTN","IBDFUTL",109,0)
 Q
"RTN","IBDFUTL1")
0^256^B42449880
"RTN","IBDFUTL1",1,0)
IBDFUTL1 ;ALB/MAF - Maintenance Utility cont. - 4 20 95
"RTN","IBDFUTL1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFUTL1",3,0)
 ;
"RTN","IBDFUTL1",4,0)
 ;
"RTN","IBDFUTL1",5,0)
SETSTR(S,V,X,L) ; -- insert text(S) into variable(V)
"RTN","IBDFUTL1",6,0)
 ;    S := string
"RTN","IBDFUTL1",7,0)
 ;    V := destination
"RTN","IBDFUTL1",8,0)
 ;    X := @ col X
"RTN","IBDFUTL1",9,0)
 ;    L := # of chars
"RTN","IBDFUTL1",10,0)
 ;
"RTN","IBDFUTL1",11,0)
 Q $E(V_$J("",X-1),1,X-1)_$E(S_$J("",L),1,L)_$E(V,X+L,999)
"RTN","IBDFUTL1",12,0)
 ;
"RTN","IBDFUTL1",13,0)
 ;
"RTN","IBDFUTL1",14,0)
SETARR ;  -- Set up Listman array
"RTN","IBDFUTL1",15,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFUTL1",16,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL1",17,0)
 S X=""
"RTN","IBDFUTL1",18,0)
 S IBDFVAL=$J(IBDCNT1_")",5)
"RTN","IBDFUTL1",19,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,1,5)
"RTN","IBDFUTL1",20,0)
 S IBDFVAL=IBDFX
"RTN","IBDFUTL1",21,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,7,8)
"RTN","IBDFUTL1",22,0)
 S IBDFVAL=$P(IBDFTMP,"^",3)
"RTN","IBDFUTL1",23,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,17,15)
"RTN","IBDFUTL1",24,0)
 S IBDFVAL=$P(^IBE(357.1,IBDFBLK,0),"^",1)
"RTN","IBDFUTL1",25,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,34,14)
"RTN","IBDFUTL1",26,0)
 S IBDFVAL=$P(^IBE(357,IBDFORM1,0),"^",1)
"RTN","IBDFUTL1",27,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,50,14)
"RTN","IBDFUTL1",28,0)
 I $D(VAUTC)!($D(VAUTG)) S IBDFVAL=$P(IBDFTMP,"^",6) S X=$$SETSTR^VALM1(IBDFVAL,X,66,14)
"RTN","IBDFUTL1",29,0)
 ;
"RTN","IBDFUTL1",30,0)
 ;
"RTN","IBDFUTL1",31,0)
TMP ; -- Set up TMP Array
"RTN","IBDFUTL1",32,0)
 S ^TMP("CPT",$J,IBDCNT,0)=$$LOWER^VALM1(X),^TMP("CPT",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFUTL1",33,0)
 S ^TMP("CPTIDX",$J,IBDCNT1)=VALMCNT_"^"_IBDFX_"^"_$P(IBDFTMP,"^",4)_"^"_$P(IBDFTMP,"^",5)_"^"_$P(IBDFTMP,"^",1)_"^"_$P(IBDFTMP,"^",2)
"RTN","IBDFUTL1",34,0)
 Q
"RTN","IBDFUTL1",35,0)
 ;
"RTN","IBDFUTL1",36,0)
 ;
"RTN","IBDFUTL1",37,0)
SET ;  -- Loop thru to see if codes are valid
"RTN","IBDFUTL1",38,0)
 F IBDFBLK=0:0 S IBDFBLK=$O(^IBE(357.1,"C",IBDFORM,IBDFBLK)) Q:'IBDFBLK  D
"RTN","IBDFUTL1",39,0)
 .F IBDFLST=0:0 S IBDFLST=$O(^IBE(357.2,"C",IBDFBLK,IBDFLST)) Q:'IBDFLST  S IBDFNODE=$G(^IBE(357.2,IBDFLST,0)) I $P(IBDFNODE,"^",11)=IBDFINT D
"RTN","IBDFUTL1",40,0)
 ..F IBDFSEL=0:0 S IBDFSEL=$O(^IBE(357.3,"C",IBDFLST,IBDFSEL)) Q:'IBDFSEL  S IBDFX=$G(^IBE(357.3,IBDFSEL,0)) I $P(IBDFX,"^",2)']"" D
"RTN","IBDFUTL1",41,0)
 ...S IBDFX1=$P(IBDFX,"^",1),IBDFX2=$P($G(^IBE(357.3,IBDFSEL,2)),"^",3),IBDFX3=$P($G(^IBE(357.3,IBDFSEL,2)),"^",4)
"RTN","IBDFUTL1",42,0)
 ...F IBI=IBDFX1,IBDFX2,IBDFX3 I IBI]"" D
"RTN","IBDFUTL1",43,0)
 ....I IBDFACT=1 D
"RTN","IBDFUTL1",44,0)
 .....S (X,IBDFX)=IBI
"RTN","IBDFUTL1",45,0)
 .....X $G(^IBE(357.6,IBDFINT,11))
"RTN","IBDFUTL1",46,0)
 .....Q:'$D(X)
"RTN","IBDFUTL1",47,0)
 .....I IBDFCODE="CPT " N IBY S IBY=$P($G(^ICPT(X,0)),"^",2)
"RTN","IBDFUTL1",48,0)
 .....I IBDFCODE="ICD-9 " N IBY S IBY=$P($G(^ICD9(X,0)),"^",3)
"RTN","IBDFUTL1",49,0)
 .....I IBDFCODE="Type of Visit " N IBY S IBY=$P($G(^IBE(357.69,X,0)),"^",2)
"RTN","IBDFUTL1",50,0)
 .....Q:'$D(VAUTJ(X))
"RTN","IBDFUTL1",51,0)
 .....S ^TMP("UTIL",$J,IBDFNAME,IBDFX,$P(^IBE(357,IBDFORM,0),"^",1),$P(^IBE(357.1,IBDFBLK,0),"^",1))=IBDFORM_"^"_IBDFBLK_"^"_$S(IBY]"":IBY,1:"INVALID")_"^"_IBDFLST_"^"_IBDFSEL_"^"_$S($D(VAUTC):IBDFNAME,$D(VAUTG):IBDFCLNM,1:"")
"RTN","IBDFUTL1",52,0)
 ....I IBDFACT=2 D
"RTN","IBDFUTL1",53,0)
 .....S (X,IBDFX)=IBI
"RTN","IBDFUTL1",54,0)
 .....X $G(^IBE(357.6,IBDFINT,11))
"RTN","IBDFUTL1",55,0)
 .....I '$D(X) S ^TMP("UTIL",$J,IBDFNAME,IBDFX,$P(^IBE(357,IBDFORM,0),"^",1),$P(^IBE(357.1,IBDFBLK,0),"^",1))=IBDFORM_"^"_IBDFBLK_"^"_$S(Y]"":Y,1:"INVALID")_"^"_IBDFLST_"^"_IBDFSEL_"^"_$S($D(VAUTC):IBDFNAME,$D(VAUTG):IBDFCLNM,1:"")
"RTN","IBDFUTL1",56,0)
 Q
"RTN","IBDFUTL1",57,0)
 ;
"RTN","IBDFUTL1",58,0)
 ;
"RTN","IBDFUTL1",59,0)
 ;  -- Set up alphabetical listing
"RTN","IBDFUTL1",60,0)
SET1 S (IBDFORM1,IBDFBLK,IBDFLG,IBDFX,IBDFNAME,IBDORM,IBDBLK)=0
"RTN","IBDFUTL1",61,0)
 F IBDFNM=0:0 S IBDFNAME=$O(^TMP("UTIL",$J,IBDFNAME)) Q:IBDFNAME']""  S IBDFX="" F  S IBDFX=$O(^TMP("UTIL",$J,IBDFNAME,IBDFX)) D:(IBDFX="")&($D(VAUTF)) CLINICS^IBDFUTL2 Q:IBDFX=""  D
"RTN","IBDFUTL1",62,0)
 .F IBDFRM=0:0 S IBDORM=$O(^TMP("UTIL",$J,IBDFNAME,IBDFX,IBDORM)) Q:IBDORM']""  F IBDFBK=0:0 S IBDBLK=$O(^TMP("UTIL",$J,IBDFNAME,IBDFX,IBDORM,IBDBLK)) Q:IBDBLK']""  D
"RTN","IBDFUTL1",63,0)
 ..S IBDFTMP=^TMP("UTIL",$J,IBDFNAME,IBDFX,IBDORM,IBDBLK),IBDFORM1=$P(IBDFTMP,"^",1),IBDFBLK=$P(IBDFTMP,"^",2) D:'$D(IBDF(IBDFNAME)) HEADER^IBDFUTL2 D SETARR
"RTN","IBDFUTL1",64,0)
 Q
"RTN","IBDFUTL1",65,0)
 ;
"RTN","IBDFUTL1",66,0)
 ;
"RTN","IBDFUTL1",67,0)
CLIN1 ;  -- Sort Display by clinic
"RTN","IBDFUTL1",68,0)
 N IBDFBLK,IBDFLST,IBDFORM,VAUTF
"RTN","IBDFUTL1",69,0)
 I VAUTC=1 F X=0:0 S X=$O(^SC(X)) Q:'X  I $D(^SC(X,0)) S ^TMP("CLN",$J,X)=$P(^SC(X,0),"^",1)
"RTN","IBDFUTL1",70,0)
 I VAUTC=0 K ^TMP("CLN",$J) F IBDFCLIN=0:0 S IBDFCLIN=$O(VAUTC(IBDFCLIN)) Q:'IBDFCLIN  S X=$G(VAUTC(IBDFCLIN)) S ^TMP("CLN",$J,IBDFCLIN)=X
"RTN","IBDFUTL1",71,0)
 I '$D(IBDFNCNG) K ^TMP("CLN1",$J)
"RTN","IBDFUTL1",72,0)
 F IBDFCLIN=0:0 S IBDFCLIN=$O(^TMP("CLN",$J,IBDFCLIN)) Q:'IBDFCLIN  S X=$G(^TMP("CLN",$J,IBDFCLIN)) S ^TMP("CLN1",$J,X)=IBDFCLIN
"RTN","IBDFUTL1",73,0)
 S IBDCLNM=0 F IBDCLN=0:0 S IBDCLNM=$O(^TMP("CLN1",$J,IBDCLNM)) Q:IBDCLNM']""  S IBDFCLIN=^TMP("CLN1",$J,IBDCLNM) S IBDFCIFN=$O(^SD(409.95,"B",IBDFCLIN,0)) S IBDCNODE=$G(^SD(409.95,+IBDFCIFN,0)),IBDFNAME=IBDCLNM I $D(IBDCNODE) D
"RTN","IBDFUTL1",74,0)
 .F IBDFN=2:1:9 S IBDFORM=$P(IBDCNODE,"^",IBDFN) I IBDFORM D SET
"RTN","IBDFUTL1",75,0)
 D SET1 Q
"RTN","IBDFUTL1",76,0)
 ;
"RTN","IBDFUTL1",77,0)
 ;
"RTN","IBDFUTL1",78,0)
FORM1 ;  -- Sort Display by form
"RTN","IBDFUTL1",79,0)
 N IBDFBLK,IBDFLST,IBDFORM
"RTN","IBDFUTL1",80,0)
 I VAUTF=1 S IBDFRNM=0 F IBDFRM=0:0 S IBDFRNM=$O(^IBE(357,"B",IBDFRNM)) Q:IBDFRNM']""  F IBDFORM=0:0 S IBDFORM=$O(^IBE(357,"B",IBDFRNM,IBDFORM)) Q:'IBDFORM  S IBDFNAME=IBDFRNM D SET
"RTN","IBDFUTL1",81,0)
 I '$D(IBDFNCNG) K ^TMP("FRM1",$J)
"RTN","IBDFUTL1",82,0)
 I VAUTF=0 F IBDFORM=0:0 S IBDFORM=$O(VAUTF(IBDFORM)) Q:'IBDFORM  S X=$G(VAUTF(IBDFORM)) S ^TMP("FRM1",$J,X)=IBDFORM
"RTN","IBDFUTL1",83,0)
 I VAUTF=0 S IBDFRNM=0 F IBDFRM=0:0 S IBDFRNM=$O(^TMP("FRM1",$J,IBDFRNM)) Q:IBDFRNM']""  S IBDFORM=^TMP("FRM1",$J,IBDFRNM),IBDFNAME=IBDFRNM D SET
"RTN","IBDFUTL1",84,0)
 D SET1
"RTN","IBDFUTL1",85,0)
 Q
"RTN","IBDFUTL1",86,0)
 ;
"RTN","IBDFUTL1",87,0)
 ;
"RTN","IBDFUTL1",88,0)
GROUP1 ;  -- Sort Display by clinic group
"RTN","IBDFUTL1",89,0)
 N IBDFBLK,IBDFLST,IBDFORM,VAUTF
"RTN","IBDFUTL1",90,0)
 I VAUTG=1 S IBDFGNM=0 F IBDFGN=0:0 S IBDFGNM=$O(^IBD(357.99,"B",IBDFGNM)) Q:IBDFGNM']""  F IBDFGIFN=0:0 S IBDFGIFN=$O(^IBD(357.99,"B",IBDFGNM,IBDFGIFN)) Q:'IBDFGIFN  S ^TMP("GRP1",$J,IBDFGNM)=IBDFGIFN
"RTN","IBDFUTL1",91,0)
 I VAUTG=0,'$D(IBDFNCNG) K ^TMP("GRP1",$J)
"RTN","IBDFUTL1",92,0)
 I VAUTG=0 F IBDFGIFN=0:0 S IBDFGIFN=$O(VAUTG(IBDFGIFN)) Q:'IBDFGIFN  S ^TMP("GRP1",$J,VAUTG(IBDFGIFN))=IBDFGIFN
"RTN","IBDFUTL1",93,0)
 S IBDFGNM=0 F IBDFGN=0:0 S IBDFGNM=$O(^TMP("GRP1",$J,IBDFGNM)) Q:IBDFGNM']""  S IBDFGIFN=^TMP("GRP1",$J,IBDFGNM) D
"RTN","IBDFUTL1",94,0)
 .S IEN=0 F  S IEN=$O(^IBD(357.99,IBDFGIFN,10,IEN)) Q:'IEN  S IBCLN=+$G(^IBD(357.99,IBDFGIFN,10,IEN,0)) S:$D(^SC(IBCLN,0)) ^TMP("IBDF",$J,"C",IBDFGNM,$P(^SC(IBCLN,0),"^",1))=IBCLN
"RTN","IBDFUTL1",95,0)
 .S IEN=0 F  S IEN=$O(^IBD(357.99,IBDFGIFN,11,IEN)) Q:'IEN  S IBDIV=+$G(^IBD(357.99,IBDFGIFN,11,IEN,0)) S:IBDIV ^TMP("IBDF",$J,"D",IBDFGNM,IBDIV)=""
"RTN","IBDFUTL1",96,0)
 D:$D(^TMP("IBDF",$J,"D")) ENDV^IBDFUTL2
"RTN","IBDFUTL1",97,0)
 S IBDFGNM=0 F IBDFGN=0:0 S IBDFGNM=$O(^TMP("IBDF",$J,"C",IBDFGNM)) Q:IBDFGNM']""  S IBDFCLNM=0 F IBDFCLN=0:0 S IBDFCLNM=$O(^TMP("IBDF",$J,"C",IBDFGNM,IBDFCLNM)) Q:IBDFCLNM']""  D
"RTN","IBDFUTL1",98,0)
 .S IBDFCLIN=$G(^TMP("IBDF",$J,"C",IBDFGNM,IBDFCLNM)),IBDFCIFN=$O(^SD(409.95,"B",IBDFCLIN,0)) S IBDCNODE=$G(^SD(409.95,+IBDFCIFN,0)) I $D(IBDCNODE) S IBDFNAME=IBDFGNM F IBDFN=2:1:9 S IBDFORM=$P(IBDCNODE,"^",IBDFN) I IBDFORM D SET
"RTN","IBDFUTL1",99,0)
 D SET1 Q
"RTN","IBDFUTL2")
0^257^B21931458
"RTN","IBDFUTL2",1,0)
IBDFUTL2 ;ALB/MAF - MAINTENANCE UTILITY CONT. - 4/24/95
"RTN","IBDFUTL2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFUTL2",3,0)
 ;
"RTN","IBDFUTL2",4,0)
 ;
"RTN","IBDFUTL2",5,0)
ENDV ;  -- Entire divisions were choosen, find all clinics (with encounter forms defined)
"RTN","IBDFUTL2",6,0)
 N IBCLN,IBDIV,NODE,DIVISION,ALL
"RTN","IBDFUTL2",7,0)
 ;  -- Make a list of the divisions chosen
"RTN","IBDFUTL2",8,0)
 S IBDFGNM=0 F IBDFGN=0:0 S IBDFGNM=$O(^TMP("IBDF",$J,"D",IBDFGNM)) Q:IBDFGNM']""  S IBDIV=0 F  S IBDIV=$O(^TMP("IBDF",$J,"D",IBDFGNM,IBDIV)) Q:'IBDIV  S DIVISION(IBDIV,IBDFGNM)=""
"RTN","IBDFUTL2",9,0)
 ;
"RTN","IBDFUTL2",10,0)
 ;  -- Loop through all the clinics finding ones in selected divisions
"RTN","IBDFUTL2",11,0)
  S IBCLN="" F  S IBCLN=$O(^SC(IBCLN)) Q:IBCLN=""  D
"RTN","IBDFUTL2",12,0)
 .S NODE=$G(^SC(IBCLN,0))
"RTN","IBDFUTL2",13,0)
 .S IBDIV=$P(NODE,"^",15)
"RTN","IBDFUTL2",14,0)
 .I IBDIV Q:'$D(DIVISION(IBDIV))
"RTN","IBDFUTL2",15,0)
 .;  -- Check that location is a clinic
"RTN","IBDFUTL2",16,0)
 .Q:$P(NODE,"^",3)'="C"
"RTN","IBDFUTL2",17,0)
 .;  -- It passed all the tests, put it on the list
"RTN","IBDFUTL2",18,0)
 .S IBDNAM=0 F IBDFDIV=0:0 S IBDFDIV=$O(DIVISION(IBDFDIV)) Q:'IBDFDIV  I IBDFDIV=IBDIV F IBDNAME=0:0 S IBDNAM=$O(DIVISION(IBDFDIV,IBDNAM)) Q:IBDNAM']""  S ^TMP("IBDF",$J,"C",IBDNAM,$P(^SC(IBCLN,0),"^",1))=IBCLN
"RTN","IBDFUTL2",19,0)
 ;
"RTN","IBDFUTL2",20,0)
 ;  -- Don't need list of divisions anymore
"RTN","IBDFUTL2",21,0)
 K ^TMP("IBDF",$J,"D")
"RTN","IBDFUTL2",22,0)
 Q
"RTN","IBDFUTL2",23,0)
 ;
"RTN","IBDFUTL2",24,0)
 ;
"RTN","IBDFUTL2",25,0)
CLINICS ;  -- Clinics that use the form
"RTN","IBDFUTL2",26,0)
 N IBDFFLG
"RTN","IBDFUTL2",27,0)
 S IBDFFLG=0 F IDX="C","D","E","F","G","H","I","J" D
"RTN","IBDFUTL2",28,0)
 .S SETUP="" F  S SETUP=$O(^SD(409.95,IDX,IBDFORM1,SETUP)) Q:'SETUP  D
"RTN","IBDFUTL2",29,0)
 ..S CLINIC=$P($G(^SD(409.95,SETUP,0)),"^",1)
"RTN","IBDFUTL2",30,0)
 ..Q:'CLINIC
"RTN","IBDFUTL2",31,0)
 ..S NAME=$P($G(^SC(CLINIC,0)),"^",1)
"RTN","IBDFUTL2",32,0)
 ..Q:NAME=""
"RTN","IBDFUTL2",33,0)
 ..S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL2",34,0)
 ..D:'IBDFFLG TMP1 S:IBDFFLG X="" S X=$$SETSTR^VALM1($E(NAME,1,20),X,66,14) D TMP^IBDFUTL1,CNTRL^VALM10(VALMCNT,37,29,IOINHI,IOINORM,0) S IBDFFLG=1
"RTN","IBDFUTL2",35,0)
 Q
"RTN","IBDFUTL2",36,0)
 ;
"RTN","IBDFUTL2",37,0)
 ;
"RTN","IBDFUTL2",38,0)
TMP1 ;  -- Text display set up of TMP array
"RTN","IBDFUTL2",39,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL2",40,0)
 S X=$$SETSTR^VALM1(" ",X,1,80) D TMP^IBDFUTL1
"RTN","IBDFUTL2",41,0)
 S X="",X=$$SETSTR^VALM1("CLINICS USING THIS FORM ARE:           ",X,37,29)
"RTN","IBDFUTL2",42,0)
 Q
"RTN","IBDFUTL2",43,0)
 ;
"RTN","IBDFUTL2",44,0)
 ;
"RTN","IBDFUTL2",45,0)
HEADER ;  -- Set up header line for the display
"RTN","IBDFUTL2",46,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFUTL2",47,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL2",48,0)
 S X=""
"RTN","IBDFUTL2",49,0)
 S IBDF(IBDFNAME)=IBDCNT_"^"_IBDFORM1
"RTN","IBDFUTL2",50,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP^IBDFUTL1
"RTN","IBDFUTL2",51,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL2",52,0)
 S IBDVAL=IBDFNAME
"RTN","IBDFUTL2",53,0)
 S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR^VALM1(" ",X,1,IBDVAL1)
"RTN","IBDFUTL2",54,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,IBDVAL1,25) D TMP^IBDFUTL1,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFUTL2",55,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL2",56,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP^IBDFUTL1
"RTN","IBDFUTL2",57,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFUTL2",58,0)
 Q
"RTN","IBDFUTL2",59,0)
 ;
"RTN","IBDFUTL2",60,0)
 ;
"RTN","IBDFUTL2",61,0)
JUMP ; -- Jump action to display a specific clinic group on the screen.
"RTN","IBDFUTL2",62,0)
 D FULL^VALM1
"RTN","IBDFUTL2",63,0)
 I $D(XQORNOD(0)),$P(XQORNOD(0),"^",4)]"" S X=$P(XQORNOD(0),"^",4) S X=$P(X,"=",2) I X]"" D:X?1.6N JSEL S DIC=$S($D(VAUTF):"^IBE(357,",$D(VAUTG):"^IBD(357.99,",1:"^SC("),DIC(0)="QEZ" D ^DIC K DIC G:Y<0 JMP S Y=+Y D JUMP1 Q
"RTN","IBDFUTL2",64,0)
JMP S DIC=$S($D(VAUTF):"^IBE(357,",$D(VAUTG):"^IBD(357.99,",1:"^SC("),DIC(0)="AEMN",DIC("A")="Select "_$S($D(VAUTF):"Form",$D(VAUTG):"Clinic Group",1:"Clinic")_" you wish to move to: "
"RTN","IBDFUTL2",65,0)
 S:$D(VAUTC) DIC("S")="I $P(^SC(+Y,0),U,3)=""C""" D ^DIC K DIC
"RTN","IBDFUTL2",66,0)
 I X["^" S VALMBG=1,VALMBCK="R" Q
"RTN","IBDFUTL2",67,0)
 ;
"RTN","IBDFUTL2",68,0)
 ;
"RTN","IBDFUTL2",69,0)
JUMP1 I Y<0 G JUMP
"RTN","IBDFUTL2",70,0)
 N IBDFCAT
"RTN","IBDFUTL2",71,0)
 S IBDFCAT=$S($D(VAUTF):$P(^IBE(357,+Y,0),"^",1),$D(VAUTG):$P(^IBD(357.99,+Y,0),"^",1),1:$P(^SC(+Y,0),"^",1))
"RTN","IBDFUTL2",72,0)
 I '$D(IBDF(IBDFCAT)) W !!,"There is no data listed for this Clinic Group" G JMP
"RTN","IBDFUTL2",73,0)
 S VALMBG=+IBDF(IBDFCAT) S VALMBCK="R" Q
"RTN","IBDFUTL2",74,0)
 Q
"RTN","IBDFUTL2",75,0)
 ;
"RTN","IBDFUTL2",76,0)
 ;
"RTN","IBDFUTL2",77,0)
JSEL ; -- Convert number selected to name
"RTN","IBDFUTL2",78,0)
 S IBDVALM=X I $D(^TMP("CGIDX",$J,IBDVALM)) S X=$P(^TMP("CGIDX",$J,IBDVALM),"^",2),X=$P(^IBD(357.99,X,0),"^",1)
"RTN","IBDFUTL2",79,0)
 Q
"RTN","IBDFUTL2",80,0)
 ;
"RTN","IBDFUTL2",81,0)
 ;
"RTN","IBDFUTL2",82,0)
CHGLST ;  -- Code to change list display
"RTN","IBDFUTL2",83,0)
 D FULL^VALM1
"RTN","IBDFUTL2",84,0)
 S IBDFDIS1=IBDFDIS,IBDFINT1=IBDFINT,IBDFACT1=IBDFACT
"RTN","IBDFUTL2",85,0)
 D EXIT1^IBDFUTL,OUT^IBDFUTL
"RTN","IBDFUTL2",86,0)
 Q
"RTN","IBDFUTL2",87,0)
 ;
"RTN","IBDFUTL2",88,0)
 ;
"RTN","IBDFUTL2",89,0)
DELETE ;  -- Delete invalid code from the selection list/block
"RTN","IBDFUTL2",90,0)
 N IBDFVALM,VALMY,IBBLK,IBFORM,DA
"RTN","IBDFUTL2",91,0)
 S VALMBCK=""
"RTN","IBDFUTL2",92,0)
 D EN^VALM2($G(XQORNOD(0))) G REP:'$O(VALMY(0)) S IBDFVALM=0
"RTN","IBDFUTL2",93,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBDFUTL2",94,0)
 F IBDFVALM=0:0 S IBDFVALM=$O(VALMY(IBDFVALM)) Q:IBDFVALM']""  S DA=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",4) I DA]"" S IBFORM=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",5),IBBLK=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",6) D
"RTN","IBDFUTL2",95,0)
 .S DIK="^IBE(357.3,",DA=DA D ^DIK K DIK D BLKCHNG^IBDF19(IBFORM,IBBLK)
"RTN","IBDFUTL2",96,0)
 K IBDF,^TMP("UTIL",$J)
"RTN","IBDFUTL2",97,0)
 ;
"RTN","IBDFUTL2",98,0)
 ;  -- Redo list
"RTN","IBDFUTL2",99,0)
REP K IBDF D INIT^IBDFUTL S VALMBG=1,VALMBCK="R"
"RTN","IBDFUTL2",100,0)
 Q
"RTN","IBDFUTL3")
0^258^B4956030
"RTN","IBDFUTL3",1,0)
IBDFUTL3 ;ALB/MAF - MAINTENANCE UTILITY CONT. - 4/24/95
"RTN","IBDFUTL3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDFUTL3",3,0)
 ;
"RTN","IBDFUTL3",4,0)
 ;
"RTN","IBDFUTL3",5,0)
REPLACE ;  -- Replace invalid code with another valid code... it will be in
"RTN","IBDFUTL3",6,0)
 ;     the same place as the old invalid code.
"RTN","IBDFUTL3",7,0)
 N IBDFVALM,VALMY,IBBLK,IBDFSLC,IBDFSLC1,IBDFSLC2,IBFORM,IBGRP,IBLIST,DA,IBSEL,ORDER,IEN
"RTN","IBDFUTL3",8,0)
 S VALMBCK=""
"RTN","IBDFUTL3",9,0)
 D EN^VALM2($G(XQORNOD(0))) G REP:'$O(VALMY(0)) S IBDFVALM=0
"RTN","IBDFUTL3",10,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBDFUTL3",11,0)
 F IBDFVALM=0:0 S IBDFVALM=$O(VALMY(IBDFVALM)) Q:IBDFVALM']""  S (IBDFSEL,DA)=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",4) I DA]"" S IBDFSLC=$G(^IBE(357.3,DA,0)),IBDFSLC1=$G(^IBE(357.3,DA,1,1,0)),IBDFSLC2=$G(^IBE(357.3,DA,1,2,0)) D
"RTN","IBDFUTL3",12,0)
 .S IBFORM=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",5)
"RTN","IBDFUTL3",13,0)
 .S IBGRP=$P(IBDFSLC,"^",4)
"RTN","IBDFUTL3",14,0)
 .S IBLIST=$P(IBDFSLC,"^",3)
"RTN","IBDFUTL3",15,0)
 .S ORDER=$P(IBDFSLC,"^",5)
"RTN","IBDFUTL3",16,0)
 .S IBBLK=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",6)
"RTN","IBDFUTL3",17,0)
 D REPLC(IBLIST,IBGRP,ORDER,.IBSEL,IBBLK,IBFORM)
"RTN","IBDFUTL3",18,0)
 K IBDF,^TMP("UTIL",$J) D INIT^IBDFUTL S VALMBCK="R" Q
"RTN","IBDFUTL3",19,0)
 ;
"RTN","IBDFUTL3",20,0)
 ;
"RTN","IBDFUTL3",21,0)
REPLC(IBLIST,IBGRP,ORDER,IBSEL,IBBLK,IBFORM) ;allows the user to add a selection to the selection group for replacement - returns 0 if it was done, 1 otherwise
"RTN","IBDFUTL3",22,0)
 N SUB,IBRTN
"RTN","IBDFUTL3",23,0)
 ;
"RTN","IBDFUTL3",24,0)
 Q:'$$FORMDSCR^IBDFU1C(.IBFORM)
"RTN","IBDFUTL3",25,0)
 Q:$$BLKDESCR^IBDFU1B(.IBBLK) 1
"RTN","IBDFUTL3",26,0)
 Q:$$LSTDESCR^IBDFU1(.IBLIST) 1
"RTN","IBDFUTL3",27,0)
 S IBRTN=IBLIST("RTN")
"RTN","IBDFUTL3",28,0)
 D RTNDSCR^IBDFU1B(.IBRTN)
"RTN","IBDFUTL3",29,0)
 N QUIT S QUIT=0
"RTN","IBDFUTL3",30,0)
 I IBRTN("ACTION")'=3 D NOGOOD^IBDF4 Q 1
"RTN","IBDFUTL3",31,0)
 K @IBRTN("DATA_LOCATION")
"RTN","IBDFUTL3",32,0)
 I '$$DORTN^IBDFU1B(.IBRTN) D NOGOOD^IBDF4 Q 1
"RTN","IBDFUTL3",33,0)
 I '$D(@IBRTN("DATA_LOCATION")) Q
"RTN","IBDFUTL3",34,0)
 D ADDREC^IBDF4(.QUIT,ORDER,.IBSEL) ;edits and adds the selection
"RTN","IBDFUTL3",35,0)
 K @IBRTN("DATA_LOCATION")
"RTN","IBDFUTL3",36,0)
 ;  -- If a selection has been chosen,  the old node is killed off and
"RTN","IBDFUTL3",37,0)
 ;     the block/selection list is updated.
"RTN","IBDFUTL3",38,0)
 I QUIT=0 S DA=IBDFSEL,DIK="^IBE(357.3," D ^DIK K DIK D BLKCHNG^IBDF19(IBFORM,IBBLK)
"RTN","IBDFUTL3",39,0)
 Q
"RTN","IBDFUTL3",40,0)
REP K IBDF D INIT^IBDFUTL S VALMBG=1,VALMBCK="R"
"RTN","IBDFUTL3",41,0)
 Q
"RTN","IBDNTEG")
0^375^B18920575
"RTN","IBDNTEG",1,0)
IBDNTEG ;ISC/XTSUMBLD KERNEL - Package checksum checker ;2970424.083551
"RTN","IBDNTEG",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDNTEG",3,0)
 ;;7.3;2970424.083551
"RTN","IBDNTEG",4,0)
 S XT4="I 1",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
"RTN","IBDNTEG",5,0)
CONT F XT1=1:1 S XT2=$T(ROU+XT1) Q:XT2=""  S X=$P(XT2," ",1),XT3=$P(XT2,";",3) X XT4 I $T W !,X X ^%ZOSF("TEST") S:'$T XT3=0 X:XT3 ^%ZOSF("RSUM") W ?10,$S('XT3:"Routine not in UCI",XT3'=Y:"Calculated "_$C(7)_Y_", off by "_(Y-XT3),1:"ok")
"RTN","IBDNTEG",6,0)
 G CONT^IBDNTEG0
"RTN","IBDNTEG",7,0)
 K %1,%2,%3,X,Y,XT1,XT2,XT3,XT4 Q
"RTN","IBDNTEG",8,0)
ONE S XT4="I $D(^UTILITY($J,X))",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
"RTN","IBDNTEG",9,0)
 W !,"Check a subset of routines:" K ^UTILITY($J) X ^%ZOSF("RSEL")
"RTN","IBDNTEG",10,0)
 W ! G CONT
"RTN","IBDNTEG",11,0)
ROU ;;
"RTN","IBDNTEG",12,0)
IBD3KENV ;;2482893
"RTN","IBDNTEG",13,0)
IBD3KPT ;;11964813
"RTN","IBDNTEG",14,0)
IBDE ;;2997987
"RTN","IBDNTEG",15,0)
IBDE1 ;;7343104
"RTN","IBDNTEG",16,0)
IBDE1A ;;3361399
"RTN","IBDNTEG",17,0)
IBDE1B ;;1339223
"RTN","IBDNTEG",18,0)
IBDE2 ;;409473
"RTN","IBDNTEG",19,0)
IBDE3 ;;9480134
"RTN","IBDNTEG",20,0)
IBDE4 ;;4707082
"RTN","IBDNTEG",21,0)
IBDEHELP ;;7817644
"RTN","IBDNTEG",22,0)
IBDEPRE ;;4328499
"RTN","IBDNTEG",23,0)
IBDEPT ;;239186
"RTN","IBDNTEG",24,0)
IBDF10 ;;11871257
"RTN","IBDNTEG",25,0)
IBDF10A ;;14844945
"RTN","IBDNTEG",26,0)
IBDF10B ;;4334206
"RTN","IBDNTEG",27,0)
IBDF10C ;;7145394
"RTN","IBDNTEG",28,0)
IBDF11 ;;3746255
"RTN","IBDNTEG",29,0)
IBDF11A ;;3372216
"RTN","IBDNTEG",30,0)
IBDF12 ;;2449474
"RTN","IBDNTEG",31,0)
IBDF13 ;;6065810
"RTN","IBDNTEG",32,0)
IBDF14 ;;2806524
"RTN","IBDNTEG",33,0)
IBDF14A ;;8128142
"RTN","IBDNTEG",34,0)
IBDF15 ;;2835740
"RTN","IBDNTEG",35,0)
IBDF15A ;;9106437
"RTN","IBDNTEG",36,0)
IBDF16 ;;8212382
"RTN","IBDNTEG",37,0)
IBDF17 ;;7062222
"RTN","IBDNTEG",38,0)
IBDF18 ;;5760005
"RTN","IBDNTEG",39,0)
IBDF18A ;;3427205
"RTN","IBDNTEG",40,0)
IBDF18A1 ;;8968373
"RTN","IBDNTEG",41,0)
IBDF18B ;;1183119
"RTN","IBDNTEG",42,0)
IBDF18C ;;9383133
"RTN","IBDNTEG",43,0)
IBDF18D ;;2224052
"RTN","IBDNTEG",44,0)
IBDF18E ;;11340277
"RTN","IBDNTEG",45,0)
IBDF18E0 ;;11693827
"RTN","IBDNTEG",46,0)
IBDF18E1 ;;10375249
"RTN","IBDNTEG",47,0)
IBDF18E2 ;;4914156
"RTN","IBDNTEG",48,0)
IBDF18E3 ;;554180
"RTN","IBDNTEG",49,0)
IBDF19 ;;7787654
"RTN","IBDNTEG",50,0)
IBDF1A ;;6906704
"RTN","IBDNTEG",51,0)
IBDF1B ;;13886733
"RTN","IBDNTEG",52,0)
IBDF1B1 ;;11709608
"RTN","IBDNTEG",53,0)
IBDF1B1A ;;12963462
"RTN","IBDNTEG",54,0)
IBDF1B1B ;;1767481
"RTN","IBDNTEG",55,0)
IBDF1B2 ;;2289984
"RTN","IBDNTEG",56,0)
IBDF1B3 ;;7853311
"RTN","IBDNTEG",57,0)
IBDF1B5 ;;11098411
"RTN","IBDNTEG",58,0)
IBDF1BA ;;11321310
"RTN","IBDNTEG",59,0)
IBDF1C ;;4183587
"RTN","IBDNTEG",60,0)
IBDF2A ;;13089889
"RTN","IBDNTEG",61,0)
IBDF2A1 ;;16675892
"RTN","IBDNTEG",62,0)
IBDF2A2 ;;5398601
"RTN","IBDNTEG",63,0)
IBDF2B ;;7733441
"RTN","IBDNTEG",64,0)
IBDF2B1 ;;2426473
"RTN","IBDNTEG",65,0)
IBDF2D ;;11307498
"RTN","IBDNTEG",66,0)
IBDF2D1 ;;7091947
"RTN","IBDNTEG",67,0)
IBDF2D2 ;;20452649
"RTN","IBDNTEG",68,0)
IBDF2D3 ;;12284133
"RTN","IBDNTEG",69,0)
IBDF2E ;;1625292
"RTN","IBDNTEG",70,0)
IBDF2F ;;14953767
"RTN","IBDNTEG",71,0)
IBDF2F1 ;;6492541
"RTN","IBDNTEG",72,0)
IBDF2G ;;1305076
"RTN","IBDNTEG",73,0)
IBDF2H ;;1131607
"RTN","IBDNTEG",74,0)
IBDF3 ;;7478886
"RTN","IBDNTEG",75,0)
IBDF4 ;;18681956
"RTN","IBDNTEG",76,0)
IBDF4A ;;13810939
"RTN","IBDNTEG",77,0)
IBDF5 ;;9209729
"RTN","IBDNTEG",78,0)
IBDF5A ;;4140889
"RTN","IBDNTEG",79,0)
IBDF5B ;;6698423
"RTN","IBDNTEG",80,0)
IBDF5C ;;3822764
"RTN","IBDNTEG",81,0)
IBDF5D ;;5086357
"RTN","IBDNTEG",82,0)
IBDF6 ;;8604587
"RTN","IBDNTEG",83,0)
IBDF6A ;;6144443
"RTN","IBDNTEG",84,0)
IBDF6C ;;1009133
"RTN","IBDNTEG",85,0)
IBDF7 ;;2565275
"RTN","IBDNTEG",86,0)
IBDF8 ;;1630744
"RTN","IBDNTEG",87,0)
IBDF9 ;;3819084
"RTN","IBDNTEG",88,0)
IBDF9A ;;16913688
"RTN","IBDNTEG",89,0)
IBDF9A1 ;;7479813
"RTN","IBDNTEG",90,0)
IBDF9A3 ;;7052911
"RTN","IBDNTEG",91,0)
IBDF9B ;;11180213
"RTN","IBDNTEG",92,0)
IBDF9B1 ;;13740809
"RTN","IBDNTEG",93,0)
IBDF9B2 ;;6322343
"RTN","IBDNTEG",94,0)
IBDF9B3 ;;5177091
"RTN","IBDNTEG",95,0)
IBDF9B4 ;;6134853
"RTN","IBDNTEG",96,0)
IBDF9C ;;5406188
"RTN","IBDNTEG",97,0)
IBDF9D ;;5163363
"RTN","IBDNTEG",98,0)
IBDF9E ;;5934543
"RTN","IBDNTEG",99,0)
IBDFBK1 ;;4906853
"RTN","IBDNTEG",100,0)
IBDFBK2 ;;6362708
"RTN","IBDNTEG",101,0)
IBDFBK3 ;;16698204
"RTN","IBDNTEG",102,0)
IBDFBKR ;;7402561
"RTN","IBDNTEG",103,0)
IBDFBKS ;;15247370
"RTN","IBDNTEG",104,0)
IBDFBKS1 ;;5830972
"RTN","IBDNTEG",105,0)
IBDFBKS2 ;;14974345
"RTN","IBDNTEG",106,0)
IBDFBKS3 ;;12904114
"RTN","IBDNTEG",107,0)
IBDFBKS4 ;;8554663
"RTN","IBDNTEG",108,0)
IBDFC ;;11407114
"RTN","IBDNTEG",109,0)
IBDFC1 ;;4784941
"RTN","IBDNTEG",110,0)
IBDFC2 ;;8753867
"RTN","IBDNTEG",111,0)
IBDFC2A ;;8223304
"RTN","IBDNTEG",112,0)
IBDFC2B ;;13124658
"RTN","IBDNTEG",113,0)
IBDFC3 ;;3078465
"RTN","IBDNTEG",114,0)
IBDFC4 ;;60053
"RTN","IBDNTEG",115,0)
IBDFCG ;;16657494
"RTN","IBDNTEG",116,0)
IBDFCG1 ;;6651180
"RTN","IBDNTEG",117,0)
IBDFCMP ;;10284232
"RTN","IBDNTEG",118,0)
IBDFCMP1 ;;12808450
"RTN","IBDNTEG",119,0)
IBDFCNOF ;;9651795
"RTN","IBDNTEG",120,0)
IBDFDE ;;28292527
"RTN","IBDNTEG",121,0)
IBDFDE0 ;;11338817
"RTN","IBDNTEG",122,0)
IBDFDE1 ;;13698331
"RTN","IBDNTEG",123,0)
IBDFDE10 ;;424026
"RTN","IBDNTEG",124,0)
IBDFDE2 ;;20881171
"RTN","IBDNTEG",125,0)
IBDFDE21 ;;20139881
"RTN","IBDNTEG",126,0)
IBDFDE22 ;;5338516
"RTN","IBDNTEG",127,0)
IBDFDE3 ;;18089819
"RTN","IBDNTEG",128,0)
IBDFDE4 ;;11204271
"RTN","IBDNTEG",129,0)
IBDFDE41 ;;6974404
"RTN","IBDNTEG",130,0)
IBDFDE42 ;;2472593
"RTN","IBDNTEG",131,0)
IBDFDE5 ;;20092356
"RTN","IBDNTEG",132,0)
IBDFDE6 ;;20813168
"RTN","IBDNTEG",133,0)
IBDFDE61 ;;2306021
"RTN","IBDNTEG",134,0)
IBDFDE7 ;;13809118
"RTN","IBDNTEG",135,0)
IBDFDE8 ;;7762272
"RTN","IBDNTEG",136,0)
IBDFDE9 ;;7383712
"RTN","IBDNTEG",137,0)
IBDFDEA ;;11764220
"RTN","IBDNTEG",138,0)
IBDFDVE ;;392266
"RTN","IBDNTEG",139,0)
IBDFESP ;;5681865
"RTN","IBDNTEG",140,0)
IBDFFRFT ;;5605728
"RTN","IBDNTEG",141,0)
IBDFFSMP ;;4992963
"RTN","IBDNTEG",142,0)
IBDFFT ;;19343496
"RTN","IBDNTEG",143,0)
IBDFFT1 ;;38001031
"RTN","IBDNTEG",144,0)
IBDFFT2 ;;3352777
"RTN","IBDNTEG",145,0)
IBDFFT3 ;;19870534
"RTN","IBDNTEG",146,0)
IBDFFT4 ;;4158691
"RTN","IBDNTEG",147,0)
IBDFFV ;;7432713
"RTN","IBDNTEG",148,0)
IBDFFV1 ;;2385105
"RTN","IBDNTEG",149,0)
IBDFFV2 ;;4347225
"RTN","IBDNTEG",150,0)
IBDFFV3 ;;5257927
"RTN","IBDNTEG",151,0)
IBDFGRP ;;9136849
"RTN","IBDNTEG",152,0)
IBDFHLP ;;3402730
"RTN","IBDNTEG",153,0)
IBDFLST ;;11634433
"RTN","IBDNTEG",154,0)
IBDFLST1 ;;1683695
"RTN","IBDNTEG",155,0)
IBDFM1 ;;13441067
"RTN","IBDNTEG",156,0)
IBDFN ;;15680196
"RTN","IBDNTEG",157,0)
IBDFN1 ;;1213860
"RTN","IBDNTEG",158,0)
IBDFN10 ;;2765146
"RTN","IBDNTEG",159,0)
IBDFN11 ;;2856878
"RTN","IBDNTEG",160,0)
IBDFN12 ;;1612905
"RTN","IBDNTEG",161,0)
IBDFN13 ;;66244
"RTN","IBDNTEG",162,0)
IBDFN14 ;;2226507
"RTN","IBDNTEG",163,0)
IBDFN2 ;;8020032
"RTN","IBDNTEG",164,0)
IBDFN3 ;;2845147
"RTN","IBDNTEG",165,0)
IBDFN4 ;;2973307
"RTN","IBDNTEG",166,0)
IBDFN5 ;;3054776
"RTN","IBDNTEG",167,0)
IBDFN6 ;;2853724
"RTN","IBDNTEG",168,0)
IBDFN7 ;;1460739
"RTN","IBDNTEG",169,0)
IBDFN8 ;;124808
"RTN","IBDNTEG",170,0)
IBDFN9 ;;194363
"RTN","IBDNTEG",171,0)
IBDFOSG ;;10173582
"RTN","IBDNTEG",172,0)
IBDFOSG1 ;;7086168
"RTN","IBDNTEG0")
0^376^B5350985
"RTN","IBDNTEG0",1,0)
IBDNTEG0 ;ISC/XTSUMBLD KERNEL - Package checksum checker ;2970424.083551
"RTN","IBDNTEG0",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;;APR 24, 1997
"RTN","IBDNTEG0",3,0)
 ;;7.3;2970424.083551
"RTN","IBDNTEG0",4,0)
 S XT4="I 1",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
"RTN","IBDNTEG0",5,0)
CONT F XT1=1:1 S XT2=$T(ROU+XT1) Q:XT2=""  S X=$P(XT2," ",1),XT3=$P(XT2,";",3) X XT4 I $T W !,X X ^%ZOSF("TEST") S:'$T XT3=0 X:XT3 ^%ZOSF("RSUM") W ?10,$S('XT3:"Routine not in UCI",XT3'=Y:"Calculated "_$C(7)_Y_", off by "_(Y-XT3),1:"ok")
"RTN","IBDNTEG0",6,0)
 ;
"RTN","IBDNTEG0",7,0)
 K %1,%2,%3,X,Y,XT1,XT2,XT3,XT4 Q
"RTN","IBDNTEG0",8,0)
ONE S XT4="I $D(^UTILITY($J,X))",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
"RTN","IBDNTEG0",9,0)
 W !,"Check a subset of routines:" K ^UTILITY($J) X ^%ZOSF("RSEL")
"RTN","IBDNTEG0",10,0)
 W ! G CONT
"RTN","IBDNTEG0",11,0)
ROU ;;
"RTN","IBDNTEG0",12,0)
IBDFOSG2 ;;13313314
"RTN","IBDNTEG0",13,0)
IBDFOSG3 ;;7158757
"RTN","IBDNTEG0",14,0)
IBDFOSG4 ;;3710643
"RTN","IBDNTEG0",15,0)
IBDFPCE ;;2696567
"RTN","IBDNTEG0",16,0)
IBDFPE ;;12450329
"RTN","IBDNTEG0",17,0)
IBDFPE1 ;;8310152
"RTN","IBDNTEG0",18,0)
IBDFPRG ;;7553882
"RTN","IBDNTEG0",19,0)
IBDFPRG1 ;;2560350
"RTN","IBDNTEG0",20,0)
IBDFQB ;;12597674
"RTN","IBDNTEG0",21,0)
IBDFQEA ;;11843748
"RTN","IBDNTEG0",22,0)
IBDFQEA1 ;;44681
"RTN","IBDNTEG0",23,0)
IBDFQS ;;1334094
"RTN","IBDNTEG0",24,0)
IBDFQSL ;;3215307
"RTN","IBDNTEG0",25,0)
IBDFQSL1 ;;7683177
"RTN","IBDNTEG0",26,0)
IBDFQSL2 ;;5616996
"RTN","IBDNTEG0",27,0)
IBDFREG ;;5649578
"RTN","IBDNTEG0",28,0)
IBDFRPC ;;8402302
"RTN","IBDNTEG0",29,0)
IBDFRPC1 ;;3939573
"RTN","IBDNTEG0",30,0)
IBDFRPC2 ;;13348413
"RTN","IBDNTEG0",31,0)
IBDFRPC3 ;;5251659
"RTN","IBDNTEG0",32,0)
IBDFRPC4 ;;5575808
"RTN","IBDNTEG0",33,0)
IBDFSS ;;16958149
"RTN","IBDNTEG0",34,0)
IBDFSS1 ;;2595117
"RTN","IBDNTEG0",35,0)
IBDFST ;;11142778
"RTN","IBDNTEG0",36,0)
IBDFST1 ;;11299943
"RTN","IBDNTEG0",37,0)
IBDFU ;;15610352
"RTN","IBDNTEG0",38,0)
IBDFU1 ;;12896586
"RTN","IBDNTEG0",39,0)
IBDFU10 ;;522009
"RTN","IBDNTEG0",40,0)
IBDFU1A ;;1409234
"RTN","IBDNTEG0",41,0)
IBDFU1B ;;5339731
"RTN","IBDNTEG0",42,0)
IBDFU1C ;;6702058
"RTN","IBDNTEG0",43,0)
IBDFU2 ;;11675915
"RTN","IBDNTEG0",44,0)
IBDFU2A ;;14139503
"RTN","IBDNTEG0",45,0)
IBDFU2B ;;14408614
"RTN","IBDNTEG0",46,0)
IBDFU2C ;;9269483
"RTN","IBDNTEG0",47,0)
IBDFU3 ;;5569853
"RTN","IBDNTEG0",48,0)
IBDFU4 ;;3631011
"RTN","IBDNTEG0",49,0)
IBDFU5 ;;8489458
"RTN","IBDNTEG0",50,0)
IBDFU5A ;;3373891
"RTN","IBDNTEG0",51,0)
IBDFU6 ;;331661
"RTN","IBDNTEG0",52,0)
IBDFU7 ;;665770
"RTN","IBDNTEG0",53,0)
IBDFU8 ;;6550892
"RTN","IBDNTEG0",54,0)
IBDFU9 ;;2718995
"RTN","IBDNTEG0",55,0)
IBDFU91 ;;1874757
"RTN","IBDNTEG0",56,0)
IBDFUA ;;3285590
"RTN","IBDNTEG0",57,0)
IBDFUTI ;;3380251
"RTN","IBDNTEG0",58,0)
IBDFUTL ;;11719221
"RTN","IBDNTEG0",59,0)
IBDFUTL1 ;;21879277
"RTN","IBDNTEG0",60,0)
IBDFUTL2 ;;11033351
"RTN","IBDNTEG0",61,0)
IBDFUTL3 ;;3224598
"RTN","IBDNTEG1")
1^390
"RTN","IBDNTEG2")
1^391
"RTN","IBDPPRE")
1^263
"RTN","IBDPPT")
1^264
"RTN","IBDY217")
1^322
"SEC","^DIC",357,357,0,"AUDIT")
@
"SEC","^DIC",357,357,0,"DD")
@
"SEC","^DIC",357,357,0,"DEL")
@
"SEC","^DIC",357,357,0,"LAYGO")
@
"SEC","^DIC",357,357,0,"RD")
@
"SEC","^DIC",357,357,0,"WR")
@
"SEC","^DIC",357.08,357.08,0,"AUDIT")
@
"SEC","^DIC",357.08,357.08,0,"DD")
@
"SEC","^DIC",357.08,357.08,0,"DEL")
@
"SEC","^DIC",357.08,357.08,0,"LAYGO")
@
"SEC","^DIC",357.08,357.08,0,"WR")
@
"SEC","^DIC",357.09,357.09,0,"AUDIT")
@
"SEC","^DIC",357.09,357.09,0,"DD")
@
"SEC","^DIC",357.09,357.09,0,"DEL")
@
"SEC","^DIC",357.09,357.09,0,"LAYGO")
@
"SEC","^DIC",357.1,357.1,0,"AUDIT")
@
"SEC","^DIC",357.1,357.1,0,"DD")
@
"SEC","^DIC",357.1,357.1,0,"DEL")
@
"SEC","^DIC",357.1,357.1,0,"LAYGO")
@
"SEC","^DIC",357.1,357.1,0,"RD")
@
"SEC","^DIC",357.1,357.1,0,"WR")
@
"SEC","^DIC",357.2,357.2,0,"AUDIT")
@
"SEC","^DIC",357.2,357.2,0,"DD")
@
"SEC","^DIC",357.2,357.2,0,"DEL")
@
"SEC","^DIC",357.2,357.2,0,"LAYGO")
@
"SEC","^DIC",357.2,357.2,0,"RD")
@
"SEC","^DIC",357.2,357.2,0,"WR")
@
"SEC","^DIC",357.3,357.3,0,"AUDIT")
@
"SEC","^DIC",357.3,357.3,0,"DD")
@
"SEC","^DIC",357.3,357.3,0,"DEL")
@
"SEC","^DIC",357.3,357.3,0,"LAYGO")
@
"SEC","^DIC",357.3,357.3,0,"RD")
@
"SEC","^DIC",357.3,357.3,0,"WR")
@
"SEC","^DIC",357.4,357.4,0,"AUDIT")
@
"SEC","^DIC",357.4,357.4,0,"DD")
@
"SEC","^DIC",357.4,357.4,0,"DEL")
@
"SEC","^DIC",357.4,357.4,0,"LAYGO")
@
"SEC","^DIC",357.4,357.4,0,"RD")
@
"SEC","^DIC",357.4,357.4,0,"WR")
@
"SEC","^DIC",357.5,357.5,0,"AUDIT")
@
"SEC","^DIC",357.5,357.5,0,"DD")
@
"SEC","^DIC",357.5,357.5,0,"DEL")
@
"SEC","^DIC",357.5,357.5,0,"LAYGO")
@
"SEC","^DIC",357.5,357.5,0,"RD")
@
"SEC","^DIC",357.5,357.5,0,"WR")
@
"SEC","^DIC",357.6,357.6,0,"AUDIT")
@
"SEC","^DIC",357.6,357.6,0,"DD")
@
"SEC","^DIC",357.6,357.6,0,"DEL")
@
"SEC","^DIC",357.6,357.6,0,"LAYGO")
@
"SEC","^DIC",357.6,357.6,0,"RD")
@
"SEC","^DIC",357.6,357.6,0,"WR")
@
"SEC","^DIC",357.69,357.69,0,"AUDIT")
@
"SEC","^DIC",357.69,357.69,0,"DD")
@
"SEC","^DIC",357.69,357.69,0,"DEL")
@
"SEC","^DIC",357.69,357.69,0,"LAYGO")
@
"SEC","^DIC",357.69,357.69,0,"RD")
@
"SEC","^DIC",357.69,357.69,0,"WR")
@
"SEC","^DIC",357.7,357.7,0,"AUDIT")
@
"SEC","^DIC",357.7,357.7,0,"DD")
@
"SEC","^DIC",357.7,357.7,0,"DEL")
@
"SEC","^DIC",357.7,357.7,0,"LAYGO")
@
"SEC","^DIC",357.7,357.7,0,"RD")
@
"SEC","^DIC",357.7,357.7,0,"WR")
@
"SEC","^DIC",357.8,357.8,0,"AUDIT")
@
"SEC","^DIC",357.8,357.8,0,"DD")
@
"SEC","^DIC",357.8,357.8,0,"DEL")
@
"SEC","^DIC",357.8,357.8,0,"LAYGO")
@
"SEC","^DIC",357.8,357.8,0,"RD")
@
"SEC","^DIC",357.8,357.8,0,"WR")
@
"SEC","^DIC",357.91,357.91,0,"AUDIT")
@
"SEC","^DIC",357.91,357.91,0,"DD")
@
"SEC","^DIC",357.91,357.91,0,"DEL")
@
"SEC","^DIC",357.91,357.91,0,"LAYGO")
@
"SEC","^DIC",357.91,357.91,0,"RD")
@
"SEC","^DIC",357.91,357.91,0,"WR")
@
"SEC","^DIC",357.92,357.92,0,"AUDIT")
@
"SEC","^DIC",357.92,357.92,0,"DD")
@
"SEC","^DIC",357.92,357.92,0,"DEL")
@
"SEC","^DIC",357.92,357.92,0,"LAYGO")
@
"SEC","^DIC",357.92,357.92,0,"RD")
@
"SEC","^DIC",357.92,357.92,0,"WR")
@
"SEC","^DIC",357.93,357.93,0,"AUDIT")
@
"SEC","^DIC",357.93,357.93,0,"DD")
@
"SEC","^DIC",357.93,357.93,0,"DEL")
@
"SEC","^DIC",357.93,357.93,0,"LAYGO")
@
"SEC","^DIC",357.93,357.93,0,"RD")
@
"SEC","^DIC",357.93,357.93,0,"WR")
@
"SEC","^DIC",357.94,357.94,0,"AUDIT")
@
"SEC","^DIC",357.94,357.94,0,"DD")
@
"SEC","^DIC",357.95,357.95,0,"AUDIT")
@
"SEC","^DIC",357.95,357.95,0,"DD")
@
"SEC","^DIC",357.95,357.95,0,"DEL")
@
"SEC","^DIC",357.95,357.95,0,"LAYGO")
@
"SEC","^DIC",357.95,357.95,0,"RD")
@
"SEC","^DIC",357.95,357.95,0,"WR")
@
"SEC","^DIC",357.96,357.96,0,"AUDIT")
@
"SEC","^DIC",357.96,357.96,0,"DD")
@
"SEC","^DIC",357.96,357.96,0,"DEL")
@
"SEC","^DIC",357.96,357.96,0,"LAYGO")
@
"SEC","^DIC",357.96,357.96,0,"RD")
@
"SEC","^DIC",357.96,357.96,0,"WR")
@
"SEC","^DIC",357.97,357.97,0,"AUDIT")
@
"SEC","^DIC",357.97,357.97,0,"DD")
@
"SEC","^DIC",357.97,357.97,0,"DEL")
@
"SEC","^DIC",357.97,357.97,0,"LAYGO")
@
"SEC","^DIC",357.97,357.97,0,"RD")
@
"SEC","^DIC",357.97,357.97,0,"WR")
@
"SEC","^DIC",357.98,357.98,0,"AUDIT")
@
"SEC","^DIC",357.98,357.98,0,"DD")
@
"SEC","^DIC",357.98,357.98,0,"DEL")
@
"SEC","^DIC",357.98,357.98,0,"LAYGO")
@
"SEC","^DIC",357.98,357.98,0,"RD")
@
"SEC","^DIC",357.98,357.98,0,"WR")
@
"SEC","^DIC",357.99,357.99,0,"AUDIT")
@
"SEC","^DIC",357.99,357.99,0,"DD")
@
"SEC","^DIC",357.99,357.99,0,"DEL")
@
"SEC","^DIC",357.99,357.99,0,"LAYGO")
@
"SEC","^DIC",357.99,357.99,0,"RD")
@
"SEC","^DIC",357.99,357.99,0,"WR")
@
"SEC","^DIC",358,358,0,"AUDIT")
@
"SEC","^DIC",358,358,0,"DD")
@
"SEC","^DIC",358,358,0,"DEL")
@
"SEC","^DIC",358,358,0,"LAYGO")
@
"SEC","^DIC",358,358,0,"RD")
@
"SEC","^DIC",358,358,0,"WR")
@
"SEC","^DIC",358.1,358.1,0,"AUDIT")
@
"SEC","^DIC",358.1,358.1,0,"DD")
@
"SEC","^DIC",358.1,358.1,0,"DEL")
@
"SEC","^DIC",358.1,358.1,0,"LAYGO")
@
"SEC","^DIC",358.1,358.1,0,"RD")
@
"SEC","^DIC",358.1,358.1,0,"WR")
@
"SEC","^DIC",358.2,358.2,0,"AUDIT")
@
"SEC","^DIC",358.2,358.2,0,"DD")
@
"SEC","^DIC",358.2,358.2,0,"DEL")
@
"SEC","^DIC",358.2,358.2,0,"LAYGO")
@
"SEC","^DIC",358.2,358.2,0,"RD")
@
"SEC","^DIC",358.2,358.2,0,"WR")
@
"SEC","^DIC",358.3,358.3,0,"AUDIT")
@
"SEC","^DIC",358.3,358.3,0,"DD")
@
"SEC","^DIC",358.3,358.3,0,"DEL")
@
"SEC","^DIC",358.3,358.3,0,"LAYGO")
@
"SEC","^DIC",358.3,358.3,0,"RD")
@
"SEC","^DIC",358.3,358.3,0,"WR")
@
"SEC","^DIC",358.4,358.4,0,"AUDIT")
@
"SEC","^DIC",358.4,358.4,0,"DD")
@
"SEC","^DIC",358.4,358.4,0,"DEL")
@
"SEC","^DIC",358.4,358.4,0,"LAYGO")
@
"SEC","^DIC",358.4,358.4,0,"RD")
@
"SEC","^DIC",358.4,358.4,0,"WR")
@
"SEC","^DIC",358.5,358.5,0,"AUDIT")
@
"SEC","^DIC",358.5,358.5,0,"DD")
@
"SEC","^DIC",358.5,358.5,0,"DEL")
@
"SEC","^DIC",358.5,358.5,0,"LAYGO")
@
"SEC","^DIC",358.5,358.5,0,"RD")
@
"SEC","^DIC",358.5,358.5,0,"WR")
@
"SEC","^DIC",358.6,358.6,0,"AUDIT")
@
"SEC","^DIC",358.6,358.6,0,"DD")
@
"SEC","^DIC",358.6,358.6,0,"DEL")
@
"SEC","^DIC",358.6,358.6,0,"LAYGO")
@
"SEC","^DIC",358.6,358.6,0,"RD")
@
"SEC","^DIC",358.6,358.6,0,"WR")
@
"SEC","^DIC",358.7,358.7,0,"AUDIT")
@
"SEC","^DIC",358.7,358.7,0,"DD")
@
"SEC","^DIC",358.7,358.7,0,"DEL")
@
"SEC","^DIC",358.7,358.7,0,"LAYGO")
@
"SEC","^DIC",358.7,358.7,0,"RD")
@
"SEC","^DIC",358.7,358.7,0,"WR")
@
"SEC","^DIC",358.8,358.8,0,"AUDIT")
@
"SEC","^DIC",358.8,358.8,0,"DD")
@
"SEC","^DIC",358.8,358.8,0,"DEL")
@
"SEC","^DIC",358.8,358.8,0,"LAYGO")
@
"SEC","^DIC",358.8,358.8,0,"RD")
@
"SEC","^DIC",358.8,358.8,0,"WR")
@
"SEC","^DIC",358.91,358.91,0,"AUDIT")
@
"SEC","^DIC",358.91,358.91,0,"DD")
@
"SEC","^DIC",358.91,358.91,0,"DEL")
@
"SEC","^DIC",358.91,358.91,0,"LAYGO")
@
"SEC","^DIC",358.91,358.91,0,"RD")
@
"SEC","^DIC",358.91,358.91,0,"WR")
@
"SEC","^DIC",358.93,358.93,0,"AUDIT")
@
"SEC","^DIC",358.93,358.93,0,"DD")
@
"SEC","^DIC",358.93,358.93,0,"DEL")
@
"SEC","^DIC",358.93,358.93,0,"LAYGO")
@
"SEC","^DIC",358.93,358.93,0,"RD")
@
"SEC","^DIC",358.93,358.93,0,"WR")
@
"SEC","^DIC",358.94,358.94,0,"AUDIT")
@
"SEC","^DIC",358.94,358.94,0,"DD")
@
"SEC","^DIC",358.94,358.94,0,"DEL")
@
"SEC","^DIC",358.94,358.94,0,"LAYGO")
@
"SEC","^DIC",358.94,358.94,0,"RD")
@
"SEC","^DIC",358.94,358.94,0,"WR")
@
"SEC","^DIC",358.98,358.98,0,"AUDIT")
@
"SEC","^DIC",358.98,358.98,0,"DD")
@
"SEC","^DIC",358.98,358.98,0,"DEL")
@
"SEC","^DIC",358.98,358.98,0,"LAYGO")
@
"SEC","^DIC",358.98,358.98,0,"RD")
@
"SEC","^DIC",358.98,358.98,0,"WR")
@
"SEC","^DIC",359,359,0,"AUDIT")
@
"SEC","^DIC",359,359,0,"DD")
@
"SEC","^DIC",359,359,0,"DEL")
@
"SEC","^DIC",359,359,0,"LAYGO")
@
"SEC","^DIC",359,359,0,"RD")
@
"SEC","^DIC",359,359,0,"WR")
@
"SEC","^DIC",359.1,359.1,0,"AUDIT")
@
"SEC","^DIC",359.1,359.1,0,"DD")
@
"SEC","^DIC",359.1,359.1,0,"DEL")
@
"SEC","^DIC",359.1,359.1,0,"LAYGO")
@
"SEC","^DIC",359.1,359.1,0,"RD")
@
"SEC","^DIC",359.1,359.1,0,"WR")
@
"SEC","^DIC",359.2,359.2,0,"AUDIT")
@
"SEC","^DIC",359.2,359.2,0,"DD")
@
"SEC","^DIC",359.2,359.2,0,"DEL")
@
"SEC","^DIC",359.2,359.2,0,"LAYGO")
@
"SEC","^DIC",359.2,359.2,0,"RD")
@
"SEC","^DIC",359.2,359.2,0,"WR")
@
"SEC","^DIC",359.3,359.3,0,"AUDIT")
@
"SEC","^DIC",359.3,359.3,0,"DD")
@
"SEC","^DIC",359.3,359.3,0,"LAYGO")
@
"SEC","^DIC",359.94,359.94,0,"AUDIT")
@
"SEC","^DIC",359.94,359.94,0,"DD")
@
"SEC","^DIC",359.94,359.94,0,"DEL")
@
"SEC","^DIC",359.94,359.94,0,"LAYGO")
@
"SEC","^DIC",359.94,359.94,0,"RD")
@
"SEC","^DIC",359.94,359.94,0,"WR")
@
"SEC","^DIC",409.95,409.95,0,"AUDIT")
@
"SEC","^DIC",409.95,409.95,0,"DD")
@
"SEC","^DIC",409.95,409.95,0,"DEL")
@
"SEC","^DIC",409.95,409.95,0,"LAYGO")
@
"SEC","^DIC",409.95,409.95,0,"WR")
@
"SEC","^DIC",409.96,409.96,0,"AUDIT")
@
"SEC","^DIC",409.96,409.96,0,"DD")
@
"SEC","^DIC",409.96,409.96,0,"DEL")
@
"SEC","^DIC",409.96,409.96,0,"LAYGO")
@
"SEC","^DIC",409.96,409.96,0,"WR")
@
"VER")
8.0^21.0
"^DD",357,357,0)
FIELD^^2^17
"^DD",357,357,0,"DDA")
N
"^DD",357,357,0,"DIK")
IBDX0
"^DD",357,357,0,"DIKOLD")
IBDX0
"^DD",357,357,0,"DT")
2951024
"^DD",357,357,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",357,357,0,"IX","AB",357,.01)

"^DD",357,357,0,"IX","AC",357,.01)

"^DD",357,357,0,"IX","ADEF",357,.13)

"^DD",357,357,0,"IX","AG",357,.01)

"^DD",357,357,0,"IX","AT",357,.01)

"^DD",357,357,0,"IX","AU",357,.01)

"^DD",357,357,0,"IX","B",357,.01)

"^DD",357,357,0,"IX","C",357,.07)

"^DD",357,357,0,"IX","D",357,.04)

"^DD",357,357,0,"NM","ENCOUNTER FORM")

"^DD",357,357,0,"PT",357.09,.04)

"^DD",357,357,0,"PT",357.1,.02)

"^DD",357,357,0,"PT",357.95,.21)

"^DD",357,357,0,"PT",359,.01)

"^DD",357,357,0,"PT",359,.02)

"^DD",357,357,0,"PT",359.3,.09)

"^DD",357,357,0,"PT",409.95,.02)

"^DD",357,357,0,"PT",409.95,.03)

"^DD",357,357,0,"PT",409.95,.04)

"^DD",357,357,0,"PT",409.95,.05)

"^DD",357,357,0,"PT",409.95,.06)

"^DD",357,357,0,"PT",409.95,.07)

"^DD",357,357,0,"PT",409.95,.08)

"^DD",357,357,0,"PT",409.95,.09)

"^DD",357,357,.01,0)
NAME^RFX^^0;1^S X=$$UP^XLFSTR(X) K:$L(X)>30!($L(X)<3) X
"^DD",357,357,.01,1,0)
^.1
"^DD",357,357,.01,1,1,0)
357^B
"^DD",357,357,.01,1,1,1)
S ^IBE(357,"B",$E(X,1,30),DA)=""
"^DD",357,357,.01,1,1,2)
K ^IBE(357,"B",$E(X,1,30),DA)
"^DD",357,357,.01,1,2,0)
357^AT^MUMPS
"^DD",357,357,.01,1,2,1)
Q
"^DD",357,357,.01,1,2,2)
Q
"^DD",357,357,.01,1,2,"%D",0)
^^5^5^2951017^
"^DD",357,357,.01,1,2,"%D",1,0)
This cross-reference will be used to store the text of the compiled form.
"^DD",357,357,.01,1,2,"%D",2,0)
The format will be ..."AT",form ien,row #)=text line. The index will be
"^DD",357,357,.01,1,2,"%D",3,0)
created by the 'compile' action of the encounter form utilities - it is
"^DD",357,357,.01,1,2,"%D",4,0)
optional. The option IBDF RECOMPILE ALL FORMS can be used to recompiled
"^DD",357,357,.01,1,2,"%D",5,0)
all forms.
"^DD",357,357,.01,1,2,"DT")
2931124
"^DD",357,357,.01,1,3,0)
357^AC^MUMPS
"^DD",357,357,.01,1,3,1)
Q
"^DD",357,357,.01,1,3,2)
Q
"^DD",357,357,.01,1,3,"%D",0)
^^6^6^2951017^
"^DD",357,357,.01,1,3,"%D",1,0)
This cross-reference will be used to store the special controls needed
"^DD",357,357,.01,1,3,"%D",2,0)
(bold on, bold off, etc.) to print the compiled form. The format will be
"^DD",357,357,.01,1,3,"%D",3,0)
..."AC",form ien,row #,column # )=controls. The index will be created by
"^DD",357,357,.01,1,3,"%D",4,0)
the 'compile' action of the encounter form utilities - it is optional.
"^DD",357,357,.01,1,3,"%D",5,0)
The option IBDF RECOMPILE ALL FORMS can be used to recompiled
"^DD",357,357,.01,1,3,"%D",6,0)
all forms.
"^DD",357,357,.01,1,3,"DT")
2931124
"^DD",357,357,.01,1,4,0)
357^AU^MUMPS
"^DD",357,357,.01,1,4,1)
Q
"^DD",357,357,.01,1,4,2)
Q
"^DD",357,357,.01,1,4,"%D",0)
^^5^5^2951017^^
"^DD",357,357,.01,1,4,"%D",1,0)
This cross-reference will be used to store the underlining of the compiled
"^DD",357,357,.01,1,4,"%D",2,0)
form. The format will be ...,"AU",form ien,row #)=underlining . The index
"^DD",357,357,.01,1,4,"%D",3,0)
will be created by the 'compile' action of the encounter form utilities -
"^DD",357,357,.01,1,4,"%D",4,0)
it is optional. The option IBDF RECOMPILE ALL FORMS can be used to
"^DD",357,357,.01,1,4,"%D",5,0)
recompiled all forms.
"^DD",357,357,.01,1,4,"DT")
2931124
"^DD",357,357,.01,1,5,0)
357^AG^MUMPS
"^DD",357,357,.01,1,5,1)
Q
"^DD",357,357,.01,1,5,2)
Q
"^DD",357,357,.01,1,5,"%D",0)
^^6^6^2951017^
"^DD",357,357,.01,1,5,"%D",1,0)
This cross-reference will be used to store strings of graphics characters
"^DD",357,357,.01,1,5,"%D",2,0)
(TLC,TRC, etc.) needed for the compiled form. The format will be
"^DD",357,357,.01,1,5,"%D",3,0)
..."AG",form ien,row #,column # )=graphics string . The index will be
"^DD",357,357,.01,1,5,"%D",4,0)
created by the 'compile' action of the encounter form utilities - it is
"^DD",357,357,.01,1,5,"%D",5,0)
optional. The option IBDF RECOMPILE ALL FORMS can be used to recompiled
"^DD",357,357,.01,1,5,"%D",6,0)
all forms.
"^DD",357,357,.01,1,5,"DT")
2931124
"^DD",357,357,.01,1,6,0)
357^AB^MUMPS
"^DD",357,357,.01,1,6,1)
Q
"^DD",357,357,.01,1,6,2)
Q
"^DD",357,357,.01,1,6,"%D",0)
^^5^5^2951017^
"^DD",357,357,.01,1,6,"%D",1,0)
This cross-reference will be used to store the boxes needed for the compiled
"^DD",357,357,.01,1,6,"%D",2,0)
forms. The format will be ..."AB",form ien,row #,column #, Block ien)=
"^DD",357,357,.01,1,6,"%D",3,0)
box width^box height. The index will be created by the 'compile'
"^DD",357,357,.01,1,6,"%D",4,0)
action of the encounter form utilities. The option IBDF RECOMPILE ALL
"^DD",357,357,.01,1,6,"%D",5,0)
FORMS can be used to recompiled all forms.
"^DD",357,357,.01,1,6,"DT")
2940606
"^DD",357,357,.01,3)
The form name must be 3-30 uppercase characters in length.
"^DD",357,357,.01,21,0)
^^2^2^2950717^^^
"^DD",357,357,.01,21,1,0)
 
"^DD",357,357,.01,21,2,0)
The name of the encounter form.
"^DD",357,357,.01,"DEL",1,0)
I '$G(IBDEVICE("LISTMAN")) W "...Encounter Forms can only be deleted through the",!," DELETE UNUSED FORM action in the Encounter Form Utilities!"
"^DD",357,357,.01,"DT")
2950925
"^DD",357,357,.02,0)
SIMPLEX/DUPLEX^S^0:SIMPLEX;1:DUPLEX,LONG-EDGE BINDING;2:DUPLEX,SHORT-EDGE BINDING;^0;2^Q
"^DD",357,357,.02,3)
SIMPLEX means one-sided, DUPLEX means two-sided. SHORT-EDGE BINDING is for attaching forms by the top, LONG-EDGE BINDING is for attaching forms along the side.
"^DD",357,357,.02,21,0)
^^10^10^2960917^^^^
"^DD",357,357,.02,21,1,0)
  
"^DD",357,357,.02,21,2,0)
Allows forms to be printed either one-sided or two-sided.
"^DD",357,357,.02,21,3,0)
 
"^DD",357,357,.02,21,4,0)
SIMPLEX - refers to a form that will print on one side of the paper.
"^DD",357,357,.02,21,5,0)
DUPLEX  - refers to a form that will print on both sides of the paper.
"^DD",357,357,.02,21,6,0)
  .SHORT-EDGE BINDING - prints from top to bottom on the front page and
"^DD",357,357,.02,21,7,0)
   prints from bottom to top on the back page.
"^DD",357,357,.02,21,8,0)
  .LONG-EDGE BINDING  - prints from top to bottom on the front page and
"^DD",357,357,.02,21,9,0)
   prints from top to bottom on the back page.
"^DD",357,357,.02,21,10,0)
  
"^DD",357,357,.02,"DT")
2940628
"^DD",357,357,.03,0)
BRIEF DESCRIPTION^RF^^0;3^K:$L(X)>80!($L(X)<1) X
"^DD",357,357,.03,.1)
BRIEF DESCRIPTION OF FORM'S USE & CONTENT
"^DD",357,357,.03,3)
Enter a brief description of the intended use of the form or its contents.
"^DD",357,357,.03,21,0)
^^3^3^2930607^
"^DD",357,357,.03,21,1,0)
 
"^DD",357,357,.03,21,2,0)
A brief description of the contents of the form and its intended use. This
"^DD",357,357,.03,21,3,0)
description will be displayed to the user.
"^DD",357,357,.03,"DT")
2940309
"^DD",357,357,.04,0)
TYPE OF USE^R*S^0:RESERVED FOR UTILITY;1:OUTPATIENT ENCOUNTER FORM;^0;4^Q
"^DD",357,357,.04,1,0)
^.1
"^DD",357,357,.04,1,1,0)
357^D
"^DD",357,357,.04,1,1,1)
S ^IBE(357,"D",$E(X,1,30),DA)=""
"^DD",357,357,.04,1,1,2)
K ^IBE(357,"D",$E(X,1,30),DA)
"^DD",357,357,.04,1,1,"%D",0)
^^1^1^2930825^
"^DD",357,357,.04,1,1,"%D",1,0)
Used to find forms of a particular type.
"^DD",357,357,.04,1,1,"DT")
2930825
"^DD",357,357,.04,3)
How will the form be used?
"^DD",357,357,.04,12)
Does not allow users to choose RESERVED FOR UTILITY
"^DD",357,357,.04,12.1)
S DIC("S")="I Y'=0"
"^DD",357,357,.04,21,0)
^^5^5^2960930^^^^
"^DD",357,357,.04,21,1,0)
This field will be used to categorize forms by type of use. It is possible
"^DD",357,357,.04,21,2,0)
that the form generator that is part of the Encounter Form Utilities may
"^DD",357,357,.04,21,3,0)
be used to create forms other than encounter forms.
"^DD",357,357,.04,21,4,0)
The utilities use a couple of forms (WORKCOPY, TOOL KIT), TYPE OF USE is
"^DD",357,357,.04,21,5,0)
RESERVED FOR UTILITY, that are not real forms.
"^DD",357,357,.04,23,0)
^^1^1^2960930^
"^DD",357,357,.04,23,1,0)
 
"^DD",357,357,.04,"DT")
2930825
"^DD",357,357,.05,0)
COMPILED?^S^0:NO;1:YES;F:COMPILATION FAILED;^0;5^Q
"^DD",357,357,.05,1,0)
^.1^^0
"^DD",357,357,.05,3)
Enter YES if the form is compiled, NO otherwise.
"^DD",357,357,.05,21,0)
^^2^2^2950912^^^^
"^DD",357,357,.05,21,1,0)
This indicates whether a compiled version of the form exists. The compiled
"^DD",357,357,.05,21,2,0)
version is much faster to print.
"^DD",357,357,.05,"DT")
2951003
"^DD",357,357,.06,0)
USE ICR?^S^0:NO;1:YES;^0;6^Q
"^DD",357,357,.06,.1)
Should ICR be used to automatically read hand print on this form?
"^DD",357,357,.06,3)
ICR is 'intelligent character recognition', used to automatically read hand print. Answer YES only if your scanning software has ICR and you want to use it for this form.
"^DD",357,357,.06,21,0)
^^5^5^2960910^^
"^DD",357,357,.06,21,1,0)
  
"^DD",357,357,.06,21,2,0)
If this field is set to 'YES', the computer will attempt to read hand-
"^DD",357,357,.06,21,3,0)
written print; for example, ICD diagnostic codes hand-written in an 'Other
"^DD",357,357,.06,21,4,0)
Diagnosis' encounter form block.
"^DD",357,357,.06,21,5,0)
 
"^DD",357,357,.06,"DT")
2950421
"^DD",357,357,.07,0)
TOOLKIT^RS^0:NO;1:YES;^0;7^Q
"^DD",357,357,.07,.1)
SHOULD THIS FORM BE PART OF THE TOOLKIT?
"^DD",357,357,.07,1,0)
^.1
"^DD",357,357,.07,1,1,0)
357^C
"^DD",357,357,.07,1,1,1)
S ^IBE(357,"C",$E(X,1,30),DA)=""
"^DD",357,357,.07,1,1,2)
K ^IBE(357,"C",$E(X,1,30),DA)
"^DD",357,357,.07,1,1,"%D",0)
^^1^1^2930624^
"^DD",357,357,.07,1,1,"%D",1,0)
Used to find all of the tool kit forms.
"^DD",357,357,.07,1,1,"DT")
2930624
"^DD",357,357,.07,3)
Is this form part of the toolkit?
"^DD",357,357,.07,21,0)
^^3^3^2950306^
"^DD",357,357,.07,21,1,0)
 
"^DD",357,357,.07,21,2,0)
This field, if set to YES, means that the form can not be deleted and can
"^DD",357,357,.07,21,3,0)
not be added to a clinic setup.
"^DD",357,357,.07,"DT")
2950306
"^DD",357,357,.09,0)
RIGHT MARGIN^RNJ3,0X^^0;9^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",357,357,.09,.1)
FORM'S RIGHT MARGIN (WIDTH IN CHARACTERS)
"^DD",357,357,.09,3)

"^DD",357,357,.09,4)
W !,"How many columns (characters) wide should the form be?"
"^DD",357,357,.09,21,0)
^^2^2^2940711^^^^
"^DD",357,357,.09,21,1,0)
 
"^DD",357,357,.09,21,2,0)
The number of characters wide the form is.
"^DD",357,357,.09,"DT")
2940711
"^DD",357,357,.1,0)
PAGE LENGTH^RNJ3,0^^0;10^K:+X'=X!(X>300)!(X<1)!(X?.E1"."1N.N) X
"^DD",357,357,.1,.1)
FORM'S PAGE LENGTH (IN LINES)
"^DD",357,357,.1,3)
How many lines should each page have?
"^DD",357,357,.1,21,0)
^^2^2^2950109^^
"^DD",357,357,.1,21,1,0)
 
"^DD",357,357,.1,21,2,0)
This is the number of usable lines on the page.
"^DD",357,357,.1,"DT")
2930420
"^DD",357,357,.11,0)
NUMBER OF PAGES^RNJ2,0^^0;11^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",357,357,.11,3)
How many pages should the encounter form have?
"^DD",357,357,.11,21,0)
^^5^5^2960917^^^
"^DD",357,357,.11,21,1,0)
  
"^DD",357,357,.11,21,2,0)
The encounter form may have multiple pages.
"^DD",357,357,.11,21,3,0)
 
"^DD",357,357,.11,21,4,0)
This field is to indicate the total number of pages for the entire form.
"^DD",357,357,.11,21,5,0)
  
"^DD",357,357,.11,"DT")
2930602
"^DD",357,357,.12,0)
SCANNABLE?^S^0:NO;1:YES;^0;12^Q
"^DD",357,357,.12,3)
Answer YES if it is planned that this form may at some time in the future be used with scanning.
"^DD",357,357,.12,21,0)
^^52^52^2960917^^^^
"^DD",357,357,.12,21,1,0)
CREATING SCANNABLE FORMS
"^DD",357,357,.12,21,2,0)
  
"^DD",357,357,.12,21,3,0)
Each form created for scanning should contain at a minimum the following
"^DD",357,357,.12,21,4,0)
data elements:
"^DD",357,357,.12,21,5,0)
  
"^DD",357,357,.12,21,6,0)
1) Primary provider.
"^DD",357,357,.12,21,7,0)
2) At least 1 procedure, usually the Evaluation and Management (EM) code.
"^DD",357,357,.12,21,8,0)
3) Reason for visit (diagnosis).
"^DD",357,357,.12,21,9,0)
  
"^DD",357,357,.12,21,10,0)
These steps must be taken during form design for each form type that is to
"^DD",357,357,.12,21,11,0)
be scanned:
"^DD",357,357,.12,21,12,0)
  
"^DD",357,357,.12,21,13,0)
1) The form field SCANNABLE? should be set to YES.
"^DD",357,357,.12,21,14,0)
2) The form field USE ICR? (prompted as 'Should ICR be used to auto-
"^DD",357,357,.12,21,15,0)
   matically read hand print on this form?') should be set to YES. It is
"^DD",357,357,.12,21,16,0)
   anticipated that the scanning software will include intelligent recog-
"^DD",357,357,.12,21,17,0)
   nition software (ICR) for reading hand print in future package releases.
"^DD",357,357,.12,21,18,0)
3) A form can be designed with scannable and non-scannable pages. Each page
"^DD",357,357,.12,21,19,0)
   to be scanned should have the SCANNABLE? field set to YES. For each page
"^DD",357,357,.12,21,20,0)
   selected in the PAGE INFORMATION multiple, the SCANNABLE? field is auto-
"^DD",357,357,.12,21,21,0)
   matically set to YES.
"^DD",357,357,.12,21,22,0)
4) Selection lists should use bubbles as marking areas. The selection rule
"^DD",357,357,.12,21,23,0)
   should be appropriate to the type of data. The selection rule will be
"^DD",357,357,.12,21,24,0)
   enforced by the scanning software. For example, if a diagnosis list has
"^DD",357,357,.12,21,25,0)
   the selection rule AT LEAST ONE, the form will be flagged as invalid if
"^DD",357,357,.12,21,26,0)
   no diagnosis is selected. Also, the proper data qualifier, if one 
"^DD",357,357,.12,21,27,0)
   applies, should be entered. An example illustrating the use of data
"^DD",357,357,.12,21,28,0)
   qualifiers is a selection list for diagnosis codes where there is a sub
"^DD",357,357,.12,21,29,0)
   column for selecting the primary diagnosis and another sub column for
"^DD",357,357,.12,21,30,0)
   selecting secondary diagnoses. At the bottom of the selection list an
"^DD",357,357,.12,21,31,0)
   area can be created to contain 'other' codes not found on the list.
"^DD",357,357,.12,21,32,0)
5) All hand print to be scanned must use hand print fields, except for the
"^DD",357,357,.12,21,33,0)
   'other' feature of selection lists.
"^DD",357,357,.12,21,34,0)
6) The PACKAGE INTERFACE file (357.6) contains the complete list of data
"^DD",357,357,.12,21,35,0)
   that is currently scannable.
"^DD",357,357,.12,21,36,0)
  
"^DD",357,357,.12,21,37,0)
There are several forms that are included with AICS v2.1 that are scan-
"^DD",357,357,.12,21,38,0)
nable. There are also a number of tool kit blocks included that were
"^DD",357,357,.12,21,39,0)
designed to be scannable. The best approach to creating the forms needed
"^DD",357,357,.12,21,40,0)
by your facility is to first develop a few basic forms, without clinic
"^DD",357,357,.12,21,41,0)
specific coding, suited to your site's needs. Those forms can then be
"^DD",357,357,.12,21,42,0)
placed in your tool kit and used as the basis for developing the rest of
"^DD",357,357,.12,21,43,0)
your forms.
"^DD",357,357,.12,21,44,0)
  
"^DD",357,357,.12,21,45,0)
---------------------------------------------------------------------------
"^DD",357,357,.12,21,46,0)
  
"^DD",357,357,.12,21,47,0)
If ANY page of the form is to be scanned into DHCP, enter YES.
"^DD",357,357,.12,21,48,0)
    .Individual pages of the form to be scanned are selected later
"^DD",357,357,.12,21,49,0)
     at the PAGE INFORMATION prompt.
"^DD",357,357,.12,21,50,0)
 
"^DD",357,357,.12,21,51,0)
If NONE of the form pages are to be scanned into DHCP, enter NO.
"^DD",357,357,.12,21,52,0)
 
"^DD",357,357,.12,"DT")
2950421
"^DD",357,357,.13,0)
FORM TYPE ID^NJ9,0^^0;13^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",357,357,.13,1,0)
^.1
"^DD",357,357,.13,1,1,0)
357^ADEF
"^DD",357,357,.13,1,1,1)
S ^IBE(357,"ADEF",$E(X,1,30),DA)=""
"^DD",357,357,.13,1,1,2)
K ^IBE(357,"ADEF",$E(X,1,30),DA)
"^DD",357,357,.13,1,1,"%D",0)
^^2^2^2951003^
"^DD",357,357,.13,1,1,"%D",1,0)
This cross reference can be used to find the current form definition
"^DD",357,357,.13,1,1,"%D",2,0)
in file 357.95 for this form.
"^DD",357,357,.13,1,1,"DT")
2951003
"^DD",357,357,.13,3)
Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",357,357,.13,21,0)
^^4^4^2960212^^^
"^DD",357,357,.13,21,1,0)
This is the current form definition entry associated with this form.  Each
"^DD",357,357,.13,21,2,0)
time the form is edited and printed or recompiled and printed a new 
"^DD",357,357,.13,21,3,0)
form definition is created leaving the old definition
"^DD",357,357,.13,21,4,0)
for use with existing forms (its used in scanning).
"^DD",357,357,.13,"DT")
2951003
"^DD",357,357,.14,0)
PAPER SIZE^S^1:LETTER (8 1/2 x 11);^0;14^Q
"^DD",357,357,.14,3)
What size paper should be used?
"^DD",357,357,.14,"DT")
2940614
"^DD",357,357,.15,0)
ORIENTATION^S^p:PORTRAIT;^0;15^Q
"^DD",357,357,.15,3)
How should the form be oriented?
"^DD",357,357,.15,"DT")
2940614
"^DD",357,357,.16,0)
TEXT SIZE^RS^1:133 COLUMNS x 80 LINES;2:96 COLUMNS x 72 LINES;3:80 COLUMNS x 60 LINES;^0;16^Q
"^DD",357,357,.16,3)
This choice will determine the size of the print and how much text will fit on the form.
"^DD",357,357,.16,"DT")
2950814
"^DD",357,357,.17,0)
VERSION^NJ4,1^^0;17^K:+X'=X!(X>99)!(X<0)!(X?.E1"."2N.N) X
"^DD",357,357,.17,3)
Type a Number between 0 and 99, 1 Decimal Digit
"^DD",357,357,.17,21,0)
^^3^3^2951116^^
"^DD",357,357,.17,21,1,0)
This is the version of AICS that created the form.  This was implemented
"^DD",357,357,.17,21,2,0)
in version 2.1.  All forms with a null entry can be treated as version
"^DD",357,357,.17,21,3,0)
2.0 forms.
"^DD",357,357,.17,"DT")
2951024
"^DD",357,357,2,0)
PAGE INFORMATION^357.02I^^2;0
"^DD",357,357,2,21,0)
^^3^3^2960916^^^^
"^DD",357,357,2,21,1,0)
  
"^DD",357,357,2,21,2,0)
Enter all pages that will have scannable data on them.
"^DD",357,357,2,21,3,0)
 
"^DD",357,357.02,0)
PAGE INFORMATION SUB-FIELD^^.02^2
"^DD",357,357.02,0,"DIK")
IBDX0
"^DD",357,357.02,0,"DT")
2950717
"^DD",357,357.02,0,"ID","WRITE")
N DIERR,IBDMSG D EN^DDIOL($$EXTERNAL^DILFD(357.02,.02,"",$P(^(0),U,2),"IBDMSG"),"","?0")
"^DD",357,357.02,0,"IX","B",357.02,.01)

"^DD",357,357.02,0,"NM","PAGE INFORMATION")

"^DD",357,357.02,0,"UP")
357
"^DD",357,357.02,.01,0)
PAGE INFORMATION^MNJ1,0X^^0;1^K:+X'=X!(X>8)!(X<1)!(X?.E1"."1N.N)!'$P(^IBE(357,D0,0),U,12)!(X>$P(^IBE(357,D0,0),U,11)) X
"^DD",357,357.02,.01,1,0)
^.1
"^DD",357,357.02,.01,1,1,0)
357.02^B
"^DD",357,357.02,.01,1,1,1)
S ^IBE(357,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",357,357.02,.01,1,1,2)
K ^IBE(357,DA(1),2,"B",$E(X,1,30),DA)
"^DD",357,357.02,.01,3)
Enter the pages that should be scanned.
"^DD",357,357.02,.01,21,0)
^^15^15^2960917^^^^
"^DD",357,357.02,.01,21,1,0)
Enter all pages that will have scannable data on them.
"^DD",357,357.02,.01,21,2,0)
 
"^DD",357,357.02,.01,21,3,0)
For example, if a form has a total of 2 pages, and page #1 is to
"^DD",357,357.02,.01,21,4,0)
be scanned and page #2 is not scannable; at the PAGE INFORMATION
"^DD",357,357.02,.01,21,5,0)
prompt enter 1.  When this form is printed, a small black box
"^DD",357,357.02,.01,21,6,0)
will print at the bottom of page #1 to indicate that it is a scan-
"^DD",357,357.02,.01,21,7,0)
nable page.
"^DD",357,357.02,.01,21,8,0)
  
"^DD",357,357.02,.01,21,9,0)
At the time a form is scanned, the data from each scanned page is 
"^DD",357,357.02,.01,21,10,0)
stored in the Encounter Form Tracking file (357.96). If the form has
"^DD",357,357.02,.01,21,11,0)
multiple scannable pages, and the software has not received all pages
"^DD",357,357.02,.01,21,12,0)
for the form, it will display a message to the user indicating that it
"^DD",357,357.02,.01,21,13,0)
is awaiting additional pages.  Once all pages have been scanned in, the 
"^DD",357,357.02,.01,21,14,0)
data is sent to update the PCE files.
"^DD",357,357.02,.01,21,15,0)
  
"^DD",357,357.02,.01,"DT")
2950717
"^DD",357,357.02,.02,0)
SCANNABLE?^S^0:NO, NOT SCANNABLE;1:YES, PAGE SCANNABLE;^0;2^Q
"^DD",357,357.02,.02,3)
Is this page meant to be scanned?
"^DD",357,357.02,.02,21,0)
^^2^2^2960916^
"^DD",357,357.02,.02,21,1,0)
Enter Yes if this page should be scanned or no if this page does not
"^DD",357,357.02,.02,21,2,0)
have any scannable parts.
"^DD",357,357.02,.02,"DT")
2960916
"^DD",357.08,357.08,0)
FIELD^^.07^7
"^DD",357.08,357.08,0,"DDA")
N
"^DD",357.08,357.08,0,"DT")
2970219
"^DD",357.08,357.08,0,"IX","B",357.08,.01)

"^DD",357.08,357.08,0,"NM","AICS PURGE LOG")

"^DD",357.08,357.08,.01,0)
RUN DATE/TIME^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",357.08,357.08,.01,1,0)
^.1
"^DD",357.08,357.08,.01,1,1,0)
357.08^B
"^DD",357.08,357.08,.01,1,1,1)
S ^IBD(357.08,"B",$E(X,1,30),DA)=""
"^DD",357.08,357.08,.01,1,1,2)
K ^IBD(357.08,"B",$E(X,1,30),DA)
"^DD",357.08,357.08,.01,3)
Enter the date time that the purge option ran.
"^DD",357.08,357.08,.01,21,0)
^^4^4^2951208^^
"^DD",357.08,357.08,.01,21,1,0)
This is the date and time that the purge option ran.  After running
"^DD",357.08,357.08,.01,21,2,0)
a set of brief results is stored.  A new entry is created each time the
"^DD",357.08,357.08,.01,21,3,0)
option runs regardless of whether or not it is a manual or automatic
"^DD",357.08,357.08,.01,21,4,0)
purge.
"^DD",357.08,357.08,.01,"DT")
2951208
"^DD",357.08,357.08,.02,0)
RECORDS TO PURGE THIS RUN^S^0:NONE;1:COMPLETE;2:ALL;^0;2^Q
"^DD",357.08,357.08,.02,21,0)
^^1^1^2951208^
"^DD",357.08,357.08,.02,21,1,0)
This is the status of records that were purged this run.
"^DD",357.08,357.08,.02,"DT")
2951208
"^DD",357.08,357.08,.03,0)
ENTRIES PURGE UP TO^D^^0;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",357.08,357.08,.03,21,0)
^^2^2^2951208^
"^DD",357.08,357.08,.03,21,1,0)
This is the last date that entries were purged for based on the status
"^DD",357.08,357.08,.03,21,2,0)
of the records to purge this run.
"^DD",357.08,357.08,.03,"DT")
2951208
"^DD",357.08,357.08,.04,0)
FORM TRACKING ENTRIES DELETED^NJ8,0^^0;4^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.08,357.08,.04,3)
Type a Number between 0 and 99999999, 0 Decimal Digits
"^DD",357.08,357.08,.04,21,0)
^^2^2^2951208^
"^DD",357.08,357.08,.04,21,1,0)
This is the number of entries in the FORM TRACKING file that were deleted
"^DD",357.08,357.08,.04,21,2,0)
this run.
"^DD",357.08,357.08,.04,"DT")
2951208
"^DD",357.08,357.08,.05,0)
FORM DEFINIT. ENTRIES DELETED^NJ8,0^^0;5^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.08,357.08,.05,3)
Type a Number between 0 and 99999999, 0 Decimal Digits
"^DD",357.08,357.08,.05,21,0)
^^2^2^2951208^
"^DD",357.08,357.08,.05,21,1,0)
This is the number of entries in the form definition file that 
"^DD",357.08,357.08,.05,21,2,0)
were deleted this run.
"^DD",357.08,357.08,.05,"DT")
2951208
"^DD",357.08,357.08,.06,0)
FORM SPEC ENTRIES DELETED^NJ8,0^^0;6^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.08,357.08,.06,3)
Type a Number between 0 and 99999999, 0 Decimal Digits
"^DD",357.08,357.08,.06,21,0)
^^2^2^2951208^
"^DD",357.08,357.08,.06,21,1,0)
This is the number of entries in the form specification file that
"^DD",357.08,357.08,.06,21,2,0)
were deleted this run.
"^DD",357.08,357.08,.06,"DT")
2951208
"^DD",357.08,357.08,.07,0)
ERROR LOG ENTRIES DELETED^NJ8,0^^0;7^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.08,357.08,.07,3)
Type a Number between 0 and 99999999, 0 Decimal Digits
"^DD",357.08,357.08,.07,"DT")
2970219
"^DD",357.09,357.09,0)
FIELD^^.1^14
"^DD",357.09,357.09,0,"DDA")
N
"^DD",357.09,357.09,0,"DT")
2970317
"^DD",357.09,357.09,0,"IX","ACG",357.091,.06)

"^DD",357.09,357.09,0,"IX","B",357.09,.01)

"^DD",357.09,357.09,0,"IX","SEQ",357.091,.1)

"^DD",357.09,357.09,0,"NM","ENCOUNTER FORM PARAMETERS")

"^DD",357.09,357.09,0,"VRPK")
AUTOMATED INFO COLLECTION SYS
"^DD",357.09,357.09,.001,0)
NUMBER^NJ1,0^^ ^K:+X'=X!(X>1)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.09,357.09,.001,3)
Type a Number between 1 and 1, 0 Decimal Digits
"^DD",357.09,357.09,.001,21,0)
^^3^3^2950303^
"^DD",357.09,357.09,.001,21,1,0)
There is only one number in this ENCOUNTER FORM PARAMETERS file,
"^DD",357.09,357.09,.001,21,2,0)
and that is the number 'one' denoting there is only one Encounter Form
"^DD",357.09,357.09,.001,21,3,0)
Parameter.  The labels are subfields of this one parameter.
"^DD",357.09,357.09,.001,"DT")
2950303
"^DD",357.09,357.09,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",357.09,357.09,.01,1,0)
^.1
"^DD",357.09,357.09,.01,1,1,0)
357.09^B
"^DD",357.09,357.09,.01,1,1,1)
S ^IBD(357.09,"B",$E(X,1,30),DA)=""
"^DD",357.09,357.09,.01,1,1,2)
K ^IBD(357.09,"B",$E(X,1,30),DA)
"^DD",357.09,357.09,.01,3)
Answer must be 3-30 characters in length.
"^DD",357.09,357.09,.01,21,0)
^^2^2^2950303^^
"^DD",357.09,357.09,.01,21,1,0)
This field is the name field.  There should only be one
"^DD",357.09,357.09,.01,21,2,0)
entry in this field.
"^DD",357.09,357.09,.01,23,0)
^^1^1^2950303^^
"^DD",357.09,357.09,.01,23,1,0)
 
"^DD",357.09,357.09,.01,"DT")
2950303
"^DD",357.09,357.09,.02,0)
RECORDS TO PURGE^S^0:NONE;1:COMPLETED;2:ALL;^0;2^Q
"^DD",357.09,357.09,.02,21,0)
^^14^14^2951208^^
"^DD",357.09,357.09,.02,21,1,0)
Enter whether you want the background purge option to purge all records
"^DD",357.09,357.09,.02,21,2,0)
from form tracking older that the number of days specified in the field
"^DD",357.09,357.09,.02,21,3,0)
FORM TRACKING RETENTION DAYS, or completed records, or no records.  
"^DD",357.09,357.09,.02,21,4,0)
 
"^DD",357.09,357.09,.02,21,5,0)
After purging records from form tracking, the purge utility will check
"^DD",357.09,357.09,.02,21,6,0)
to see if all forms for inactive form definitions have been received.
"^DD",357.09,357.09,.02,21,7,0)
If so, then the form definition and Form Specification for that form
"^DD",357.09,357.09,.02,21,8,0)
may be deleted.  Purging ALL Form Tracking entries will cause the
"^DD",357.09,357.09,.02,21,9,0)
form definition and form specification to be deleted for forms that
"^DD",357.09,357.09,.02,21,10,0)
have not yet been completed.  Once the form definition is deleted
"^DD",357.09,357.09,.02,21,11,0)
the form specification can not be recreated in DHCP, if it does not
"^DD",357.09,357.09,.02,21,12,0)
exist on the AICS workstation the form can not be recognized.
"^DD",357.09,357.09,.02,21,13,0)
This is generally not a problem as entries must be at least 60 days
"^DD",357.09,357.09,.02,21,14,0)
old to purge.
"^DD",357.09,357.09,.02,"DT")
2951208
"^DD",357.09,357.09,.03,0)
FORM TRACKING RETENTION DAYS^NJ4,0^^0;3^K:+X'=X!(X>9999)!(X<60)!(X?.E1"."1N.N) X
"^DD",357.09,357.09,.03,3)
Type a Number between 60 and 9999, 0 Decimal Digits
"^DD",357.09,357.09,.03,21,0)
^^5^5^2951003^
"^DD",357.09,357.09,.03,21,1,0)
Enter the number of days to retain form tracking information after it
"^DD",357.09,357.09,.03,21,2,0)
is no longer used.  The AICS purge utility will delete entries in
"^DD",357.09,357.09,.03,21,3,0)
the Encounter Form Definition file (357.95), the Encounter Form Tracking
"^DD",357.09,357.09,.03,21,4,0)
file (357.96), and the Form Specification file the number of days 
"^DD",357.09,357.09,.03,"DT")
2951003
"^DD",357.09,357.09,.04,0)
DEFAULT DATA ENTRY FORM^P357'^IBE(357,^0;4^Q
"^DD",357.09,357.09,.04,3)
Enter the form to be used as the default form for doing data entry when no form exists for a clinic.
"^DD",357.09,357.09,.04,21,0)
^^5^5^2951208^
"^DD",357.09,357.09,.04,21,1,0)
This is the form definition that will be used during manual data entry
"^DD",357.09,357.09,.04,21,2,0)
if no form for a clinic is defined.  If this is not filled in then
"^DD",357.09,357.09,.04,21,3,0)
the PRIMARY CARE SAMPLE (2.1) form in the tool kit will be used as the
"^DD",357.09,357.09,.04,21,4,0)
default form.  If that form has been deleted then provider, procedure     
"^DD",357.09,357.09,.04,21,5,0)
and diagnosis will be asked but no quick entry features will be available.
"^DD",357.09,357.09,.04,"DT")
2951208
"^DD",357.09,357.09,.05,0)
PRINT FORMS FOR INPATIENTS^S^0:NO;1:YES;^0;5^Q
"^DD",357.09,357.09,.05,3)
If you would like to suppress printing of encounter forms for inpatients enter 'No'.  Answering 'Yes' or leaving blank will cause Encounter Forms for inpatients to print.
"^DD",357.09,357.09,.05,21,0)
2^^7^7^2951219^^^
"^DD",357.09,357.09,.05,21,1,0)
Enter 'Yes' if you want encounter forms printed for Inpatients or 'No'
"^DD",357.09,357.09,.05,21,2,0)
if no enounter forms for inpatients should be printed.  If this field
"^DD",357.09,357.09,.05,21,3,0)
is null, it will be treated as a 'Yes' and encounter forms for inpatients
"^DD",357.09,357.09,.05,21,4,0)
will be printed.
"^DD",357.09,357.09,.05,21,5,0)
 
"^DD",357.09,357.09,.05,21,6,0)
This parameter affects all options that print forms for appointments
"^DD",357.09,357.09,.05,21,7,0)
for a clinic, it does not affect printing individual forms.
"^DD",357.09,357.09,.05,23,0)
^^2^2^2951219^
"^DD",357.09,357.09,.05,23,1,0)
This parameter is checked twice in routine IBDF1B1A when check 
"^DD",357.09,357.09,.05,23,2,0)
the status of a patients appointment.
"^DD",357.09,357.09,.05,"DT")
2951218
"^DD",357.09,357.09,.06,0)
MAKE APPOINTMENT IN DATA ENTRY^S^0:NO;1:YES;^0;6^Q
"^DD",357.09,357.09,.06,3)
Enter 'Yes' if you want to be able to make a follow up appointment using the AICS manual Data entry option.
"^DD",357.09,357.09,.06,21,0)
^^3^3^2960403^
"^DD",357.09,357.09,.06,21,1,0)
Enter 'Yes' if you wish for users at your site to be able to make a follow
"^DD",357.09,357.09,.06,21,2,0)
up appointment during data entry of an encounter form or enter 'No' if you
"^DD",357.09,357.09,.06,21,3,0)
do not wish to see that prompt.
"^DD",357.09,357.09,.06,"DT")
2960403
"^DD",357.09,357.09,.07,0)
PASS DATA TO PCE^S^0:BACKGROUND;1:BACKGROUND/W VALIDATION;2:FOREGROUND/NO DISPLAY;3:FOREGROUND/WITH DISPLAY;^0;7^Q
"^DD",357.09,357.09,.07,3)
How should data captured in the AICS EF Data entry option be passed to PCE?
"^DD",357.09,357.09,.07,21,0)
^^25^25^2961230^^^^
"^DD",357.09,357.09,.07,21,1,0)
Choose how data captured in the AICS EF Data Entry Options should be
"^DD",357.09,357.09,.07,21,2,0)
passed to PCE.  The data entry options use the same mechanism to update
"^DD",357.09,357.09,.07,21,3,0)
PCE (and scheduling) as the scanning software.  Background refers to
"^DD",357.09,357.09,.07,21,4,0)
sending data to PCE by using TaskMan to create a separate process so the
"^DD",357.09,357.09,.07,21,5,0)
user may continue working.  Foreground refers to sending the data to PCE in
"^DD",357.09,357.09,.07,21,6,0)
real time.  The choices for data entry are:
"^DD",357.09,357.09,.07,21,7,0)
   
"^DD",357.09,357.09,.07,21,8,0)
   Background - This is the fastest method for the user.  No validation 
"^DD",357.09,357.09,.07,21,9,0)
       of the data is done by PCE and no display there is no display of
"^DD",357.09,357.09,.07,21,10,0)
       results.
"^DD",357.09,357.09,.07,21,11,0)
 
"^DD",357.09,357.09,.07,21,12,0)
   Background with Validation -  This is the next fastest way.  The data
"^DD",357.09,357.09,.07,21,13,0)
       is validated with PCE prior to passing in the background.  If the
"^DD",357.09,357.09,.07,21,14,0)
       data does not validate, the user will be shown the error messages
"^DD",357.09,357.09,.07,21,15,0)
       and allowed to re-edit the data.
"^DD",357.09,357.09,.07,21,16,0)
 
"^DD",357.09,357.09,.07,21,17,0)
   Foreground with no display of data - Data is always validated when 
"^DD",357.09,357.09,.07,21,18,0)
       passed to PCE in the foreground. If the data does not validate,
"^DD",357.09,357.09,.07,21,19,0)
       the user will be shown the error messages and allowed to re-edit
"^DD",357.09,357.09,.07,21,20,0)
       the data.
"^DD",357.09,357.09,.07,21,21,0)
 
"^DD",357.09,357.09,.07,21,22,0)
  Foreground with display - This is the slowest method but will be most 
"^DD",357.09,357.09,.07,21,23,0)
      useful as a validation tool.  The data sent to PCE is redisplayed
"^DD",357.09,357.09,.07,21,24,0)
      after it has been been accepted by PCE.  Any differences in what
"^DD",357.09,357.09,.07,21,25,0)
      was supposed to be sent and what was actually sent should be noticable.
"^DD",357.09,357.09,.07,"DT")
2960411
"^DD",357.09,357.09,.08,0)
FILL % FOR BUBBLES^NJ2,0^^0;8^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.09,357.09,.08,3)
Type a Number between 0 and 99, 0 Decimal Digits.  This is the amount of fill required for Paper Keyboard to recognize the Bubble as checked.
"^DD",357.09,357.09,.08,9)
^
"^DD",357.09,357.09,.08,21,0)
^^10^10^2970324^^^
"^DD",357.09,357.09,.08,21,1,0)
Enter a number between 0 and 99 that represents the percentage of
"^DD",357.09,357.09,.08,21,2,0)
fill required for a bubble to be considered as checked.  Entering a zero
"^DD",357.09,357.09,.08,21,3,0)
will leave the determination up to Paper Keyboard.  If this field is left
"^DD",357.09,357.09,.08,21,4,0)
blank AICS will use 20% as the amount of fill required.
"^DD",357.09,357.09,.08,21,5,0)
 
"^DD",357.09,357.09,.08,21,6,0)
This field corresponds to the Threshold % field in the Metric dialog box
"^DD",357.09,357.09,.08,21,7,0)
in Paper Keyboard.  Modifying this field will only affect new forms.
"^DD",357.09,357.09,.08,21,8,0)
Existing form specification files will not be affected.  To modify an 
"^DD",357.09,357.09,.08,21,9,0)
existing form specification file it must be deleted from the workstation 
"^DD",357.09,357.09,.08,21,10,0)
and the corresponding entry in file 359.2 must be deleted.
"^DD",357.09,357.09,.08,"DT")
2970121
"^DD",357.09,357.09,.09,0)
BACKGROUND % FOR BUBBLES^NJ2,0^^0;9^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.09,357.09,.09,3)
Type a Number between 0 and 99, 0 Decimal Digits.  This is the amount of background allowable that Paper Keyboard will ignore.
"^DD",357.09,357.09,.09,9)
^
"^DD",357.09,357.09,.09,21,0)
^^15^15^2970121^^
"^DD",357.09,357.09,.09,21,1,0)
Enter a number between 0 and 99 that represents the percentage of 
"^DD",357.09,357.09,.09,21,2,0)
background fill in a bubble that can exist before Paper Keyboard
"^DD",357.09,357.09,.09,21,3,0)
will consider any markings in the bubble.  If this field is left blank
"^DD",357.09,357.09,.09,21,4,0)
then AICS will use 5%.  Entering a zero leaves the determination up
"^DD",357.09,357.09,.09,21,5,0)
to Paper Keyboard.
"^DD",357.09,357.09,.09,21,6,0)
 
"^DD",357.09,357.09,.09,21,7,0)
This field corresponds to the Background % field in the Metric dialog box.
"^DD",357.09,357.09,.09,21,8,0)
Entering a small value prevents small dots on the page from appearing as
"^DD",357.09,357.09,.09,21,9,0)
check marks.  The value of this field should always be less than the value
"^DD",357.09,357.09,.09,21,10,0)
for the FILL % FOR BUBBLES field.
"^DD",357.09,357.09,.09,21,11,0)
 
"^DD",357.09,357.09,.09,21,12,0)
Editing this field will not affect any current form specification files,
"^DD",357.09,357.09,.09,21,13,0)
only files created after changing this value.  To modify a current form
"^DD",357.09,357.09,.09,21,14,0)
specification you must delete the file from the workstation and remove the
"^DD",357.09,357.09,.09,21,15,0)
corresponding entry from file 359.2.
"^DD",357.09,357.09,.09,"DT")
2970121
"^DD",357.09,357.09,.1,0)
DAYS TO PRINT 1010F^NJ3,0^^0;10^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.09,357.09,.1,3)
Type a Number between 0 and 999, 0 Decimal Digits
"^DD",357.09,357.09,.1,21,0)
^^5^5^2970416^^^^
"^DD",357.09,357.09,.1,21,1,0)
If you have chosen to print a 1010F with your encounter forms, this is the
"^DD",357.09,357.09,.1,21,2,0)
number of days between the expiration of a means test and the aoppointment 
"^DD",357.09,357.09,.1,21,3,0)
date before that you want to print 1010F's for.  For example, if this field
"^DD",357.09,357.09,.1,21,4,0)
is set to 30, then 1010F's will print for means tests that are due to 
"^DD",357.09,357.09,.1,21,5,0)
expire within 30 days of the appointment.
"^DD",357.09,357.09,.1,23,0)
^^2^2^2970409^^
"^DD",357.09,357.09,.1,23,1,0)
This parameter is used in PRMT^IBDFN2 if a 1010F is printed from the print
"^DD",357.09,357.09,.1,23,2,0)
manager.
"^DD",357.09,357.09,.1,"DT")
2970317
"^DD",357.09,357.09,1.01,0)
PURGE NOTIFICATION MAIL GROUP^P3.8'^XMB(3.8,^1;1^Q
"^DD",357.09,357.09,1.01,3)
This mail group will automatically receive notification of purge results.  Results are also stored in the AICS PURGE LOG file and may be reviewed.  Mail notification is not required.
"^DD",357.09,357.09,1.01,21,0)
^^8^8^2951219^^
"^DD",357.09,357.09,1.01,21,1,0)
Enter the name of the mail group that should receive the automatic
"^DD",357.09,357.09,1.01,21,2,0)
notification of purge results.  Purge results are sent every time
"^DD",357.09,357.09,1.01,21,3,0)
the AICS purge runs, regardless of whether or not the auto purge or
"^DD",357.09,357.09,1.01,21,4,0)
manual purge is run.
"^DD",357.09,357.09,1.01,21,5,0)
 
"^DD",357.09,357.09,1.01,21,6,0)
If no group is entered then no message will be sent.  Results are
"^DD",357.09,357.09,1.01,21,7,0)
always stored in the AICS PURGE LOG file (357.08) and can be reviewed
"^DD",357.09,357.09,1.01,21,8,0)
at any time.
"^DD",357.09,357.09,1.01,"DT")
2951208
"^DD",357.09,357.09,1.02,0)
STOP DEFAULTING C/O DATE/TIME^S^1:YES;^1;2^Q
"^DD",357.09,357.09,1.02,3)
Enter 'YES' to stop defaulting the checkout date/time during scanning to the scan date/time if no checkout data exists on the form.
"^DD",357.09,357.09,1.02,21,0)
^^4^4^2970122^
"^DD",357.09,357.09,1.02,21,1,0)
If checkout date/time is not present on the Encounter Form, the software
"^DD",357.09,357.09,1.02,21,2,0)
will automatically default a checkout date/time to that of the scan date/
"^DD",357.09,357.09,1.02,21,3,0)
time.  If you do not wish to default the checkout date/time, you should
"^DD",357.09,357.09,1.02,21,4,0)
enter 'YES' in this field to stop the automatic default.
"^DD",357.09,357.09,1.02,"DT")
2970122
"^DD",357.09,357.09,11,0)
PRINT MGR'S QUEUING PARAM NAME^357.091A^^Q;0
"^DD",357.09,357.09,11,21,0)
6^^5^5^2960923^^^^
"^DD",357.09,357.09,11,21,1,0)
This field is a multiple.  This is the name of the parameter group 
"^DD",357.09,357.09,11,21,2,0)
for the printing of encounter forms.  The encounter form background
"^DD",357.09,357.09,11,21,3,0)
print job will loop through all of the parameter groups and
"^DD",357.09,357.09,11,21,4,0)
print the forms for the clinics that are under this parameter
"^DD",357.09,357.09,11,21,5,0)
the print job.
"^DD",357.09,357.09,11,23,0)
^^1^1^2960923^^^^
"^DD",357.09,357.09,11,23,1,0)
 
"^DD",357.09,357.09,11,"DT")
2960402
"^DD",357.09,357.091,0)
PRINT MGR'S QUEUING PARAM NAME SUB-FIELD^^.13^13
"^DD",357.09,357.091,0,"DT")
2960923
"^DD",357.09,357.091,0,"IX","B",357.091,.01)

"^DD",357.09,357.091,0,"NM","PRINT MGR'S QUEUING PARAM NAME")

"^DD",357.09,357.091,0,"UP")
357.09
"^DD",357.09,357.091,.01,0)
PRINT MGR'S QUEUING PARAM NAME^MF^^0;1^K:$L(X)>30!($L(X)<3) X
"^DD",357.09,357.091,.01,1,0)
^.1
"^DD",357.09,357.091,.01,1,1,0)
357.091^B
"^DD",357.09,357.091,.01,1,1,1)
S ^IBD(357.09,DA(1),"Q","B",$E(X,1,30),DA)=""
"^DD",357.09,357.091,.01,1,1,2)
K ^IBD(357.09,DA(1),"Q","B",$E(X,1,30),DA)
"^DD",357.09,357.091,.01,3)
Answer must be 3-30 characters in length.
"^DD",357.09,357.091,.01,21,0)
^^2^2^2951004^^^
"^DD",357.09,357.091,.01,21,1,0)
This field is the name of the parameter group for printing of
"^DD",357.09,357.091,.01,21,2,0)
encounter forms when using the background print job.
"^DD",357.09,357.091,.01,"DT")
2960402
"^DD",357.09,357.091,.02,0)
DATE/TIME STARTED^D^^0;2^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",357.09,357.091,.02,3)
This is the date/time that the print job began.
"^DD",357.09,357.091,.02,21,0)
^^2^2^2951004^
"^DD",357.09,357.091,.02,21,1,0)
This field is the date that the job started.  It is supplied by
"^DD",357.09,357.091,.02,21,2,0)
the system when the queued print job begins.
"^DD",357.09,357.091,.02,"DT")
2951004
"^DD",357.09,357.091,.03,0)
DATE/TIME ENDED^D^^0;3^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",357.09,357.091,.03,3)
This is the date/time the print job finished.
"^DD",357.09,357.091,.03,21,0)
^^2^2^2951004^
"^DD",357.09,357.091,.03,21,1,0)
This field contains the date that the print job finished.  This data
"^DD",357.09,357.091,.03,21,2,0)
is supplied by the system when the print job is finished.
"^DD",357.09,357.091,.03,"DT")
2951004
"^DD",357.09,357.091,.04,0)
CLINIC SORT BY^RS^1:DIVISION/CLINIC/PATIENT;2:DIVISION/TERMINAL DIGITS;3:DIVISION/CLINIC/TERMINAL DIGITS;^0;4^Q
"^DD",357.09,357.091,.04,3)
Select the way the encounter forms should be sorted when printing.
"^DD",357.09,357.091,.04,21,0)
^^5^5^2951004^
"^DD",357.09,357.091,.04,21,1,0)
This field contains the sort sequence for the printing of encounter
"^DD",357.09,357.091,.04,21,2,0)
forms.  Its value can be:
"^DD",357.09,357.091,.04,21,3,0)
 1) Division/Clinic/Patient
"^DD",357.09,357.091,.04,21,4,0)
 2) Division/Terminal Digits
"^DD",357.09,357.091,.04,21,5,0)
 3) Division/Clinic/Terminal Digits
"^DD",357.09,357.091,.04,"DT")
2951004
"^DD",357.09,357.091,.05,0)
ADD ONS^S^0:NO;1:YES;^0;5^Q
"^DD",357.09,357.091,.05,21,0)
^^3^3^2951004^
"^DD",357.09,357.091,.05,21,1,0)
This field is a Yes/No field as to whether the print job will be just
"^DD",357.09,357.091,.05,21,2,0)
for printing add ons only.  If this field contains 'Yes', the print
"^DD",357.09,357.091,.05,21,3,0)
job will only print the add ons for the clinics.
"^DD",357.09,357.091,.05,"DT")
2951004
"^DD",357.09,357.091,.06,0)
CLINIC GROUPS^P357.99'^IBD(357.99,^0;6^Q
"^DD",357.09,357.091,.06,1,0)
^.1
"^DD",357.09,357.091,.06,1,1,0)
357.09^ACG
"^DD",357.09,357.091,.06,1,1,1)
S ^IBD(357.09,"ACG",$E(X,1,30),DA(1),DA)=""
"^DD",357.09,357.091,.06,1,1,2)
K ^IBD(357.09,"ACG",$E(X,1,30),DA(1),DA)
"^DD",357.09,357.091,.06,1,1,"%D",0)
^^3^3^2960220^
"^DD",357.09,357.091,.06,1,1,"%D",1,0)
Cross reference of clinic groups
"^DD",357.09,357.091,.06,1,1,"%D",2,0)
used to prevent deleting of clinic groups used
"^DD",357.09,357.091,.06,1,1,"%D",3,0)
in parameter setup.
"^DD",357.09,357.091,.06,1,1,"DT")
2960220
"^DD",357.09,357.091,.06,21,0)
^^4^4^2951004^
"^DD",357.09,357.091,.06,21,1,0)
This field is a pointer to the PRINT MANAGERS CLINIC GROUPS file 
"^DD",357.09,357.091,.06,21,2,0)
(#357.99).  This stores the name of the clinic group that the
"^DD",357.09,357.091,.06,21,3,0)
encounter forms should be printed for.  Each Clinic Group has one
"^DD",357.09,357.091,.06,21,4,0)
or more clinics assigned to it.
"^DD",357.09,357.091,.06,"DT")
2960220
"^DD",357.09,357.091,.07,0)
DAYS TO PRINT AHEAD^RNJ2,0^^0;7^K:+X'=X!(X>10)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.09,357.091,.07,3)
Type a Number between 0 and 10, 0 Decimal Digits
"^DD",357.09,357.091,.07,21,0)
^^2^2^2960109^^^
"^DD",357.09,357.091,.07,21,1,0)
This field contains a number which will be the number of days ahead
"^DD",357.09,357.091,.07,21,2,0)
that the encounter forms will be printed for.
"^DD",357.09,357.091,.07,23,0)
^^2^2^2960109^^
"^DD",357.09,357.091,.07,23,1,0)
 
"^DD",357.09,357.091,.07,23,2,0)
 
"^DD",357.09,357.091,.07,"DT")
2960109
"^DD",357.09,357.091,.08,0)
SPECIAL INSTRUCTIONS^S^R:RUN REGARDLESS;I:IGNORE BOTH WEEKENDS AND HOLIDAYS;W:IGNORE WEEKENDS;H:IGNORE HOLIDAYS;T:TODAY;N:NOT ACTIVE;^0;8^Q
"^DD",357.09,357.091,.08,21,0)
^^8^8^2960209^^
"^DD",357.09,357.091,.08,21,1,0)
This field will store the special instructions for the printing of
"^DD",357.09,357.091,.08,21,2,0)
the encounter forms.  The values for this field can be:
"^DD",357.09,357.091,.08,21,3,0)
 (I) Ignore both holidays and weekends
"^DD",357.09,357.091,.08,21,4,0)
 (R) Run Regardless
"^DD",357.09,357.091,.08,21,5,0)
 (W) Ignore Weekends
"^DD",357.09,357.091,.08,21,6,0)
 (H) Ignore Holidays
"^DD",357.09,357.091,.08,21,7,0)
 (T) Today
"^DD",357.09,357.091,.08,21,8,0)
 (N) Not active
"^DD",357.09,357.091,.08,"DT")
2960209
"^DD",357.09,357.091,.09,0)
DEVICE^FX^^0;9^N IBL S IBL=X,X=$P(X,";"),DIC=3.5,DIC(0)="EQ" D ^DIC K:Y'>0!(X=" ") X S:$D(X) X=X_$S(IBL[";":";"_$P(IBL,";",2,99),1:"") S DIC=DIE
"^DD",357.09,357.091,.09,3)
Answer must be 3-40 characters in length.
"^DD",357.09,357.091,.09,21,0)
^^3^3^2951004^
"^DD",357.09,357.091,.09,21,1,0)
This field contains a free text pointer to the device.  This stores the
"^DD",357.09,357.091,.09,21,2,0)
name of the printer where the encounter forms should be printed for
"^DD",357.09,357.091,.09,21,3,0)
the print job.
"^DD",357.09,357.091,.09,"DT")
2960402
"^DD",357.09,357.091,.1,0)
PRINT PRIORITY^RNJ6,2^^0;10^K:+X'=X!(X>999)!(X<1)!(X?.E1"."3N.N) X
"^DD",357.09,357.091,.1,1,0)
^.1
"^DD",357.09,357.091,.1,1,1,0)
357.09^SEQ
"^DD",357.09,357.091,.1,1,1,1)
S ^IBD(357.09,"SEQ",$E(X,1,30),DA(1),DA)=""
"^DD",357.09,357.091,.1,1,1,2)
K ^IBD(357.09,"SEQ",$E(X,1,30),DA(1),DA)
"^DD",357.09,357.091,.1,1,1,"%D",0)
^^1^1^2951004^
"^DD",357.09,357.091,.1,1,1,"%D",1,0)
Cross reference used to find sequences to print encounter forms.
"^DD",357.09,357.091,.1,1,1,"DT")
2951004
"^DD",357.09,357.091,.1,3)
Type a Number between 1 and 999, 2 Decimal Digits
"^DD",357.09,357.091,.1,21,0)
^^3^3^2951004^
"^DD",357.09,357.091,.1,21,1,0)
This field contains a number which will be used to sequence the print
"^DD",357.09,357.091,.1,21,2,0)
job tasks.  The lower the number, the higher the priority of the job 
"^DD",357.09,357.091,.1,21,3,0)
and those will be queued to print first.
"^DD",357.09,357.091,.1,"DT")
2951004
"^DD",357.09,357.091,.11,0)
TASK NUMBER^NJ9,0^^0;11^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.09,357.091,.11,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",357.09,357.091,.11,21,0)
^^6^6^2951004^
"^DD",357.09,357.091,.11,21,1,0)
This field contains the task number from taskman, when a print job is
"^DD",357.09,357.091,.11,21,2,0)
queued to print.  It will delete the entry when the job finished.  This
"^DD",357.09,357.091,.11,21,3,0)
value is supplied by the system.  If the job has been interrupted,
"^DD",357.09,357.091,.11,21,4,0)
waiting to run or is running this value will be present.  This field
"^DD",357.09,357.091,.11,21,5,0)
is used by the action Queue Status on the Parameter Interface screen.
"^DD",357.09,357.091,.11,21,6,0)
That action will give the user the status of the queued job.
"^DD",357.09,357.091,.11,"DT")
2951004
"^DD",357.09,357.091,.12,0)
LAST DAY PRINTED^D^^0;12^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",357.09,357.091,.12,21,0)
^^2^2^2951004^
"^DD",357.09,357.091,.12,21,1,0)
This field contains the last day teh encounter forms were printed for.
"^DD",357.09,357.091,.12,21,2,0)
This will keep track so that the date does not get printed again.
"^DD",357.09,357.091,.12,"DT")
2951004
"^DD",357.09,357.091,.13,0)
TIME QUEUED^F^^0;13^K:$L(X)>4!($L(X)<4) X
"^DD",357.09,357.091,.13,3)
Answer must be 4 characters in length.
"^DD",357.09,357.091,.13,21,0)
^^4^4^2960923^^^^
"^DD",357.09,357.091,.13,21,1,0)
This field stores the time that the job will queue to print. The user
"^DD",357.09,357.091,.13,21,2,0)
will supply the time as a 4 digit number from 0000 - 2359 (military time).
"^DD",357.09,357.091,.13,21,3,0)
This will allow the user to stagger the times certain print jobs start
"^DD",357.09,357.091,.13,21,4,0)
to print to different printers.
"^DD",357.09,357.091,.13,23,0)
^^1^1^2960923^^
"^DD",357.09,357.091,.13,23,1,0)
 
"^DD",357.09,357.091,.13,"DT")
2960923
"^DD",357.1,357.1,0)
FIELD^^4^15
"^DD",357.1,357.1,0,"DDA")
N
"^DD",357.1,357.1,0,"DIK")
IBDX1
"^DD",357.1,357.1,0,"DIKOLD")
IBDX1
"^DD",357.1,357.1,0,"DT")
2961015
"^DD",357.1,357.1,0,"ID",.02)
W ""
"^DD",357.1,357.1,0,"IX","B",357.1,.01)

"^DD",357.1,357.1,0,"IX","C",357.1,.02)

"^DD",357.1,357.1,0,"IX","D",357.1,.14)

"^DD",357.1,357.1,0,"NM","ENCOUNTER FORM BLOCK")

"^DD",357.1,357.1,0,"PT",357.2,.02)

"^DD",357.1,357.1,0,"PT",357.5,.02)

"^DD",357.1,357.1,0,"PT",357.7,.06)

"^DD",357.1,357.1,0,"PT",357.8,.02)

"^DD",357.1,357.1,0,"PT",357.93,.08)

"^DD",357.1,357.1,0,"PT",358.94,.08)

"^DD",357.1,357.1,0,"PT",359.94,.08)

"^DD",357.1,357.1,.01,0)
NAME^RFX^^0;1^S X=$$UP^XLFSTR(X) K:$L(X)>30!($L(X)<3) X
"^DD",357.1,357.1,.01,1,0)
^.1
"^DD",357.1,357.1,.01,1,1,0)
357.1^B
"^DD",357.1,357.1,.01,1,1,1)
S ^IBE(357.1,"B",$E(X,1,30),DA)=""
"^DD",357.1,357.1,.01,1,1,2)
K ^IBE(357.1,"B",$E(X,1,30),DA)
"^DD",357.1,357.1,.01,3)
The block name must be 3-30 uppercase characters.
"^DD",357.1,357.1,.01,21,0)
^^3^3^2940610^^
"^DD",357.1,357.1,.01,21,1,0)
 
"^DD",357.1,357.1,.01,21,2,0)
 
"^DD",357.1,357.1,.01,21,3,0)
The name of the block.
"^DD",357.1,357.1,.01,"DEL",1,0)
I '$G(IBDEVICE("LISTMAN")) W "...Encounter Form Blocks can only be deleted through the Encounter Form Utilities!"
"^DD",357.1,357.1,.01,"DT")
2940725
"^DD",357.1,357.1,.02,0)
FORM^RP357'^IBE(357,^0;2^Q
"^DD",357.1,357.1,.02,1,0)
^.1
"^DD",357.1,357.1,.02,1,1,0)
357.1^C
"^DD",357.1,357.1,.02,1,1,1)
S ^IBE(357.1,"C",$E(X,1,30),DA)=""
"^DD",357.1,357.1,.02,1,1,2)
K ^IBE(357.1,"C",$E(X,1,30),DA)
"^DD",357.1,357.1,.02,1,1,"%D",0)
^^1^1^2921116^
"^DD",357.1,357.1,.02,1,1,"%D",1,0)
Used to find all the blocks belonging to a particular form.
"^DD",357.1,357.1,.02,1,1,"DT")
2921116
"^DD",357.1,357.1,.02,3)
What form should this block appear on?
"^DD",357.1,357.1,.02,21,0)
^^2^2^2930527^
"^DD",357.1,357.1,.02,21,1,0)
 
"^DD",357.1,357.1,.02,21,2,0)
The form the block appears on.
"^DD",357.1,357.1,.02,"DT")
2921116
"^DD",357.1,357.1,.04,0)
BLOCK'S STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.1,357.1,.04,.1)
WHAT ROW SHOULD THE BLOCK START IN?
"^DD",357.1,357.1,.04,2)
S Y(0)=Y S Y=(+Y)+1
"^DD",357.1,357.1,.04,2.1)
S Y=(+Y)+1
"^DD",357.1,357.1,.04,3)
What line should this block begin on?
"^DD",357.1,357.1,.04,21,0)
^^1^1^2940216^
"^DD",357.1,357.1,.04,21,1,0)
The row  on the encounter form that the block starts on.
"^DD",357.1,357.1,.04,23,0)
^^4^4^2940216^
"^DD",357.1,357.1,.04,23,1,0)
The internal representation starts at 0, the external representation
"^DD",357.1,357.1,.04,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",357.1,357.1,.04,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",357.1,357.1,.04,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",357.1,357.1,.04,"DT")
2930715
"^DD",357.1,357.1,.05,0)
BLOCK'S STARTING COLUMN^RNJ3,0XO^^0;5^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.1,357.1,.05,.1)
WHAT COLUMN SHOULD THE BLOCK START IN?
"^DD",357.1,357.1,.05,2)
S Y(0)=Y S Y=(+Y)+1
"^DD",357.1,357.1,.05,2.1)
S Y=(+Y)+1
"^DD",357.1,357.1,.05,3)
What column should this block begin on?
"^DD",357.1,357.1,.05,21,0)
^^1^1^2930715^^
"^DD",357.1,357.1,.05,21,1,0)
The column on the encounter form that the block starts on.
"^DD",357.1,357.1,.05,23,0)
^^4^4^2930715^
"^DD",357.1,357.1,.05,23,1,0)
The internal representation starts at 0, the external representation
"^DD",357.1,357.1,.05,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",357.1,357.1,.05,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",357.1,357.1,.05,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",357.1,357.1,.05,"DT")
2930715
"^DD",357.1,357.1,.06,0)
WIDTH IN CHARACTERS^RNJ3,0^^0;6^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.1,357.1,.06,.1)
HOW MANY CHARACTERS WIDE SHOULD THE BLOCK BE?
"^DD",357.1,357.1,.06,3)
How many characters wide should this block be?
"^DD",357.1,357.1,.06,21,0)
^^2^2^2930527^
"^DD",357.1,357.1,.06,21,1,0)
 
"^DD",357.1,357.1,.06,21,2,0)
The width of the block, measured in the number of characters across.
"^DD",357.1,357.1,.06,"DT")
2930415
"^DD",357.1,357.1,.07,0)
HEIGHT IN LINES^RNJ3,0^^0;7^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.1,357.1,.07,.1)
HOW MANY LINES HIGH SHOULD THE BLOCK BE?
"^DD",357.1,357.1,.07,3)
How many lines high should this block be?
"^DD",357.1,357.1,.07,21,0)
^^2^2^2930527^
"^DD",357.1,357.1,.07,21,1,0)
 
"^DD",357.1,357.1,.07,21,2,0)
The height of the block, measured by the number of lines it takes up.
"^DD",357.1,357.1,.07,"DT")
2930415
"^DD",357.1,357.1,.1,0)
OUTLINE TYPE^RS^1:SOLID LINE;2:INVISIBLE;^0;10^Q
"^DD",357.1,357.1,.1,.1)
OUTLINE TYPE (SOLID/INVISIBLE)
"^DD",357.1,357.1,.1,3)
Enter '1' if the block should have a box around it, '2' if not.
"^DD",357.1,357.1,.1,21,0)
^^2^2^2930527^
"^DD",357.1,357.1,.1,21,1,0)
 
"^DD",357.1,357.1,.1,21,2,0)
How the block is outlined on the form.
"^DD",357.1,357.1,.1,"DT")
2930415
"^DD",357.1,357.1,.11,0)
BLOCK HEADER^F^^0;11^K:$L(X)>60!($L(X)<1) X
"^DD",357.1,357.1,.11,.1)
WHAT HEADER SHOULD APPEAR AT THE TOP OF THE BLOCK? (OPTIONAL)
"^DD",357.1,357.1,.11,3)
What text should appear at the top of the block?
"^DD",357.1,357.1,.11,21,0)
^^2^2^2950927^^
"^DD",357.1,357.1,.11,21,1,0)
 
"^DD",357.1,357.1,.11,21,2,0)
The text appearing at the top of the block.
"^DD",357.1,357.1,.11,"DT")
2940216
"^DD",357.1,357.1,.12,0)
HEADER APPEARANCE^FX^^0;12^S X=$$UPPER^VALM1(X) K:$L(X)>4!("UBRC"'[$E(X,1))!("UBRC"'[$E(X,2))!("UBRC"'[$E(X,3))!("UBRC"'[$E(X,4)) X
"^DD",357.1,357.1,.12,.1)
HOW SHOULD THE BLOCK HEADER APPEAR? CHOOSE FROM {U,B,R,C}
"^DD",357.1,357.1,.12,3)
B=bold,U=underline,R=reverse,C=center. You can enter any combination of {B,U,R,C}.
"^DD",357.1,357.1,.12,21,0)
^^2^2^2940531^^^
"^DD",357.1,357.1,.12,21,1,0)
 
"^DD",357.1,357.1,.12,21,2,0)
This field determines the appearance of the block's header.
"^DD",357.1,357.1,.12,"DT")
2940531
"^DD",357.1,357.1,.13,0)
BRIEF DESCRIPTION^RF^^0;13^K:$L(X)>80!($L(X)<1) X
"^DD",357.1,357.1,.13,.1)
ENTER A BRIEF DESCRIPTION OF THE USE & CONTENTS OF THE BLOCK
"^DD",357.1,357.1,.13,3)
Answer must be 1-80 characters in length.
"^DD",357.1,357.1,.13,21,0)
^^2^2^2930607^
"^DD",357.1,357.1,.13,21,1,0)
 
"^DD",357.1,357.1,.13,21,2,0)
A brief description of the contents or use of the block.
"^DD",357.1,357.1,.13,"DT")
2930415
"^DD",357.1,357.1,.14,0)
TOOLKIT ORDER^NJ6,2^^0;14^K:+X'=X!(X>999.99)!(X<.01)!(X?.E1"."3N.N) X
"^DD",357.1,357.1,.14,1,0)
^.1
"^DD",357.1,357.1,.14,1,1,0)
357.1^D^MUMPS
"^DD",357.1,357.1,.14,1,1,1)
S:$P($G(^IBE(357,+$P(^IBE(357.1,DA,0),U,2),0)),U)="TOOL KIT" ^IBE(357.1,"D",$E(X,1,30),DA)=""
"^DD",357.1,357.1,.14,1,1,2)
K ^IBE(357.1,"D",$E(X,1,30),DA)
"^DD",357.1,357.1,.14,1,1,"%D",0)
^^2^2^2951023^
"^DD",357.1,357.1,.14,1,1,"%D",1,0)
This index is used to locate all the toolkit blocks that can be used
"^DD",357.1,357.1,.14,1,1,"%D",2,0)
as templates to create a new block to be added to a form.
"^DD",357.1,357.1,.14,1,1,"DT")
2951023
"^DD",357.1,357.1,.14,3)
Enter a number greater than 0 if this block is part of the toolkit. The number will determine its listed order.
"^DD",357.1,357.1,.14,21,0)
^^3^3^2950913^
"^DD",357.1,357.1,.14,21,1,0)
A number>0 in this field means that the block is part of the toolkit.
"^DD",357.1,357.1,.14,21,2,0)
The value determines the order that the block will be listed to the
"^DD",357.1,357.1,.14,21,3,0)
screen that displays the toolkit blocks.
"^DD",357.1,357.1,.14,"DT")
2951023
"^DD",357.1,357.1,1,0)
COMPILED STRINGS^357.11A^^S;0
"^DD",357.1,357.1,1,21,0)
^^3^3^2931117^^
"^DD",357.1,357.1,1,21,1,0)
Contains a compiled list of the calls, along with the arguments, that should
"^DD",357.1,357.1,1,21,2,0)
be made to the routine that prints strings to the form. Before printing, the
"^DD",357.1,357.1,1,21,3,0)
block offset is added to the string position.
"^DD",357.1,357.1,2,0)
COMPILED VERTICAL LINES^357.12A^^V;0
"^DD",357.1,357.1,2,21,0)
^^3^3^2940216^
"^DD",357.1,357.1,2,21,1,0)
A compiled list of the vertical lines that are needed to print the block.
"^DD",357.1,357.1,2,21,2,0)
The arguments to the routine that prints the line are included. The
"^DD",357.1,357.1,2,21,3,0)
block's offset is must be added to the line's position.
"^DD",357.1,357.1,3,0)
COMPILED BUBBLES^357.13^^B;0
"^DD",357.1,357.1,3,21,0)
^^3^3^2961015^^^^
"^DD",357.1,357.1,3,21,1,0)
A compiled list of the bubbles appearing in the block. The arguments to the 
"^DD",357.1,357.1,3,21,2,0)
routine that prints the bubble are included. The block's offset must be added
"^DD",357.1,357.1,3,21,3,0)
to the bubbles position.
"^DD",357.1,357.1,4,0)
COMPILED HAND PRINT FIELDS^357.14^^H;0
"^DD",357.1,357.1,4,21,0)
^^3^3^2951017^
"^DD",357.1,357.1,4,21,1,0)
A compiled list of the hand print fields appearing in the block. The
"^DD",357.1,357.1,4,21,2,0)
arguments to the routine that prints the hand print fields are included.
"^DD",357.1,357.1,4,21,3,0)
The block's offset must be added to the hand print field's position.
"^DD",357.1,357.11,0)
COMPILED STRINGS SUB-FIELD^^.05^5
"^DD",357.1,357.11,0,"DIK")
IBDX1
"^DD",357.1,357.11,0,"DT")
2931115
"^DD",357.1,357.11,0,"IX","B",357.11,.01)

"^DD",357.1,357.11,0,"NM","COMPILED STRINGS")

"^DD",357.1,357.11,0,"UP")
357.1
"^DD",357.1,357.11,.01,0)
STRING ROW^NJ3,0^^0;1^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.1,357.11,.01,1,0)
^.1
"^DD",357.1,357.11,.01,1,1,0)
357.11^B
"^DD",357.1,357.11,.01,1,1,1)
S ^IBE(357.1,DA(1),"S","B",$E(X,1,30),DA)=""
"^DD",357.1,357.11,.01,1,1,2)
K ^IBE(357.1,DA(1),"S","B",$E(X,1,30),DA)
"^DD",357.1,357.11,.01,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",357.1,357.11,.01,21,0)
^^1^1^2931117^
"^DD",357.1,357.11,.01,21,1,0)
The row that the string should be printed at.
"^DD",357.1,357.11,.01,"DT")
2931117
"^DD",357.1,357.11,.02,0)
COLUMN^RNJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.1,357.11,.02,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",357.1,357.11,.02,21,0)
^^1^1^2931117^
"^DD",357.1,357.11,.02,21,1,0)
The column that the string should be printed at.
"^DD",357.1,357.11,.02,"DT")
2931115
"^DD",357.1,357.11,.03,0)
OPTIONS^F^^0;3^K:$L(X)>4!($L(X)<1) X
"^DD",357.1,357.11,.03,3)
Answer must be 1-4 characters in length.
"^DD",357.1,357.11,.03,21,0)
^^1^1^2931117^
"^DD",357.1,357.11,.03,21,1,0)
The display characteristics that the string should have.
"^DD",357.1,357.11,.03,"DT")
2931115
"^DD",357.1,357.11,.04,0)
WIDTH^NJ3,0^^0;4^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.1,357.11,.04,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",357.1,357.11,.04,21,0)
^^1^1^2931117^
"^DD",357.1,357.11,.04,21,1,0)
The width that the printed string should occupy. (optional)
"^DD",357.1,357.11,.04,"DT")
2931115
"^DD",357.1,357.11,.05,0)
STRING^F^^0;5^K:$L(X)>200!($L(X)<1) X
"^DD",357.1,357.11,.05,3)
Answer must be 1-200 characters in length.
"^DD",357.1,357.11,.05,21,0)
^^1^1^2931117^
"^DD",357.1,357.11,.05,21,1,0)
The string that should be printed.
"^DD",357.1,357.11,.05,"DT")
2931115
"^DD",357.1,357.12,0)
COMPILED VERTICAL LINES SUB-FIELD^^.04^4
"^DD",357.1,357.12,0,"DIK")
IBDX1
"^DD",357.1,357.12,0,"DT")
2931117
"^DD",357.1,357.12,0,"IX","B",357.12,.01)

"^DD",357.1,357.12,0,"NM","COMPILED VERTICAL LINES")

"^DD",357.1,357.12,0,"UP")
357.1
"^DD",357.1,357.12,.01,0)
VERTICAL LINE ROW^NJ3,0^^0;1^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.1,357.12,.01,1,0)
^.1
"^DD",357.1,357.12,.01,1,1,0)
357.12^B
"^DD",357.1,357.12,.01,1,1,1)
S ^IBE(357.1,DA(1),"V","B",$E(X,1,30),DA)=""
"^DD",357.1,357.12,.01,1,1,2)
K ^IBE(357.1,DA(1),"V","B",$E(X,1,30),DA)
"^DD",357.1,357.12,.01,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",357.1,357.12,.01,21,0)
^^1^1^2931117^
"^DD",357.1,357.12,.01,21,1,0)
The row that the line should begin at.
"^DD",357.1,357.12,.01,"DT")
2931117
"^DD",357.1,357.12,.02,0)
COLUMN^RNJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.1,357.12,.02,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",357.1,357.12,.02,21,0)
^^1^1^2931117^
"^DD",357.1,357.12,.02,21,1,0)
The column that the line should begin at.
"^DD",357.1,357.12,.02,"DT")
2931117
"^DD",357.1,357.12,.03,0)
LENGTH^RNJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.1,357.12,.03,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",357.1,357.12,.03,21,0)
^^1^1^2931117^
"^DD",357.1,357.12,.03,21,1,0)
The length of the line.
"^DD",357.1,357.12,.03,"DT")
2931117
"^DD",357.1,357.12,.04,0)
CHARACTER^F^^0;4^K:$L(X)>30!($L(X)<1) X
"^DD",357.1,357.12,.04,3)
Answer must be 1-30 characters in length.
"^DD",357.1,357.12,.04,21,0)
^^1^1^2931117^
"^DD",357.1,357.12,.04,21,1,0)
The string (probably a single character) to use to create the string. (optional)
"^DD",357.1,357.12,.04,"DT")
2931117
"^DD",357.1,357.13,0)
COMPILED BUBBLES SUB-FIELD^^.13^14
"^DD",357.1,357.13,0,"DIK")
IBDX1
"^DD",357.1,357.13,0,"DT")
2961015
"^DD",357.1,357.13,0,"IX","B",357.13,.01)

"^DD",357.1,357.13,0,"NM","COMPILED BUBBLES")

"^DD",357.1,357.13,0,"UP")
357.1
"^DD",357.1,357.13,.01,0)
ROW^MNJ3,0^^0;1^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.1,357.13,.01,1,0)
^.1
"^DD",357.1,357.13,.01,1,1,0)
357.13^B
"^DD",357.1,357.13,.01,1,1,1)
S ^IBE(357.1,DA(1),"B",$E(X,1,30),DA)=""
"^DD",357.1,357.13,.01,1,1,2)
K ^IBE(357.1,DA(1),"B",$E(X,1,30),DA)
"^DD",357.1,357.13,.01,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",357.1,357.13,.01,"DT")
2940613
"^DD",357.1,357.13,.02,0)
COLUMN^RNJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.1,357.13,.02,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",357.1,357.13,.02,"DT")
2940613
"^DD",357.1,357.13,.03,0)
TYPE OF DATA^*P357.6'^IBE(357.6,^0;3^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",357.1,357.13,.03,3)
What type of data does the bubble represent?
"^DD",357.1,357.13,.03,12)
Must be an available package for accepting input.
"^DD",357.1,357.13,.03,12.1)
S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1"
"^DD",357.1,357.13,.03,21,0)
^^2^2^2940725^^^^
"^DD",357.1,357.13,.03,21,1,0)
The value associated with the bubble is passed to the package interface
"^DD",357.1,357.13,.03,21,2,0)
to pass the data to DHCP.
"^DD",357.1,357.13,.03,"DT")
2950912
"^DD",357.1,357.13,.04,0)
VALUE^F^^0;4^K:$L(X)>30!($L(X)<1) X
"^DD",357.1,357.13,.04,3)
Answer must be 1-30 characters in length.
"^DD",357.1,357.13,.04,"DT")
2940613
"^DD",357.1,357.13,.05,0)
FIELD NAME^RF^^0;5^K:$L(X)>30!($L(X)<3) X
"^DD",357.1,357.13,.05,3)
Answer must be 3-30 characters in length.
"^DD",357.1,357.13,.05,"DT")
2940823
"^DD",357.1,357.13,.06,0)
FIELD ID^RF^^0;6^K:$L(X)>10!($L(X)<2) X
"^DD",357.1,357.13,.06,3)
Answer must be 2-10 characters in length.
"^DD",357.1,357.13,.06,"DT")
2940823
"^DD",357.1,357.13,.07,0)
SELECTION RULE^RS^0:ANY NUMBER;1:EXACTLY ONE;2:AT MOST ONE;3:AT LEAST ONE;^0;7^Q
"^DD",357.1,357.13,.07,3)
How should the user be allowed to select from the available choices?
"^DD",357.1,357.13,.07,"DT")
2940823
"^DD",357.1,357.13,.08,0)
DISPLAYED TEXT^RF^^0;8^K:$L(X)>97!($L(X)<1) X
"^DD",357.1,357.13,.08,3)
Answer must be 1-97 characters in length.
"^DD",357.1,357.13,.08,"DT")
2961015
"^DD",357.1,357.13,.09,0)
DISPLAYED HEADER^F^^0;9^K:$L(X)>40!($L(X)<1) X
"^DD",357.1,357.13,.09,3)
Answer must be 1-40 characters in length.
"^DD",357.1,357.13,.09,"DT")
2941019
"^DD",357.1,357.13,.1,0)
DATA QUALIFIER^P357.98'^IBD(357.98,^0;10^Q
"^DD",357.1,357.13,.1,3)
What data qualifier, if any, applies to the data indicated by this bubble?
"^DD",357.1,357.13,.1,"DT")
2941019
"^DD",357.1,357.13,.11,0)
DYNAMIC?^S^0:NO;1:YES;^0;11^Q
"^DD",357.1,357.13,.11,3)
Enter YES if the data associated with the a bubble is stored in Form Tracking.
"^DD",357.1,357.13,.11,"DT")
2950126
"^DD",357.1,357.13,.12,0)
ITEM COUNT^NJ3,0^^0;12^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.1,357.13,.12,3)
In what sequence does this item occur on the list?
"^DD",357.1,357.13,.12,"DT")
2950313
"^DD",357.1,357.13,.13,0)
QUANTITY^NJ2,0^^0;13^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.1,357.13,.13,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",357.1,357.13,.13,21,0)
^^3^3^2961015^
"^DD",357.1,357.13,.13,21,1,0)
This field will be populated if more than one occurrence of the entry
"^DD",357.1,357.13,.13,21,2,0)
is required.  The quantity field will contain the number of occurrences
"^DD",357.1,357.13,.13,21,3,0)
to pass to PCE for the value referenced.
"^DD",357.1,357.13,.13,"DT")
2961015
"^DD",357.1,357.13,1,0)
SUBHEADER^F^^1;1^K:$L(X)>250!($L(X)<1) X
"^DD",357.1,357.13,1,3)
Answer must be 1-250 characters in length.
"^DD",357.1,357.13,1,21,0)
^^2^2^2951002^
"^DD",357.1,357.13,1,21,1,0)
The subheader will be concatenated with the narrative before passing it to
"^DD",357.1,357.13,1,21,2,0)
PCE.
"^DD",357.1,357.13,1,"DT")
2951002
"^DD",357.1,357.14,0)
COMPILED HAND PRINT FIELDS SUB-FIELD^^.01^13
"^DD",357.1,357.14,0,"DIK")
IBDX1
"^DD",357.1,357.14,0,"DT")
2950724
"^DD",357.1,357.14,0,"IX","B",357.14,.01)

"^DD",357.1,357.14,0,"NM","COMPILED HAND PRINT FIELDS")

"^DD",357.1,357.14,0,"UP")
357.1
"^DD",357.1,357.14,.01,0)
ROW FOR HAND PRINT^MNJ3,0^^0;1^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.1,357.14,.01,1,0)
^.1
"^DD",357.1,357.14,.01,1,1,0)
357.14^B
"^DD",357.1,357.14,.01,1,1,1)
S ^IBE(357.1,DA(1),"H","B",$E(X,1,30),DA)=""
"^DD",357.1,357.14,.01,1,1,2)
K ^IBE(357.1,DA(1),"H","B",$E(X,1,30),DA)
"^DD",357.1,357.14,.01,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",357.1,357.14,.01,"DT")
2940725
"^DD",357.1,357.14,.02,0)
COLUMN FOR HAND PRINT^RNJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.1,357.14,.02,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",357.1,357.14,.02,"DT")
2940725
"^DD",357.1,357.14,.03,0)
WIDTH^RNJ3,0^^0;3^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.1,357.14,.03,3)
Type a Number between 1 and 200, 0 Decimal Digits
"^DD",357.1,357.14,.03,"DT")
2940725
"^DD",357.1,357.14,.04,0)
TYPE OF DATA^R*P357.6'^IBE(357.6,^0;4^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",357.1,357.14,.04,3)
What data will be printed to this field?
"^DD",357.1,357.14,.04,12)
Allows only available interfaces for accepting input.
"^DD",357.1,357.14,.04,12.1)
S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1"
"^DD",357.1,357.14,.04,"DT")
2950912
"^DD",357.1,357.14,.06,0)
NUMBER OF HAND PRINT LINES^RNJ3,0^^0;6^K:+X'=X!(X>100)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.1,357.14,.06,3)
How many lines of hand print?
"^DD",357.1,357.14,.06,"DT")
2940816
"^DD",357.1,357.14,.07,0)
FIELD ID^RF^^0;7^K:$L(X)>10!($L(X)<2) X
"^DD",357.1,357.14,.07,3)
Answer must be 2-10 characters in length.
"^DD",357.1,357.14,.07,21,0)
^^1^1^2940912^
"^DD",357.1,357.14,.07,21,1,0)
Identifies the form block object that contains the print field.
"^DD",357.1,357.14,.07,"DT")
2940912
"^DD",357.1,357.14,.08,0)
FIELD NAME^RF^^0;8^K:$L(X)>30!($L(X)<3) X
"^DD",357.1,357.14,.08,3)
Answer must be 3-30 characters in length.
"^DD",357.1,357.14,.08,21,0)
^^1^1^2940912^
"^DD",357.1,357.14,.08,21,1,0)
The name of the form block object that contains the print field.
"^DD",357.1,357.14,.08,"DT")
2950427
"^DD",357.1,357.14,.09,0)
DISPLAYED HEADER^F^^0;9^K:$L(X)>40!($L(X)<1) X
"^DD",357.1,357.14,.09,3)
Answer must be 1-40 characters in length.
"^DD",357.1,357.14,.09,"DT")
2941019
"^DD",357.1,357.14,.1,0)
DATA QUALIFIER^P357.98'^IBD(357.98,^0;10^Q
"^DD",357.1,357.14,.1,3)
What data qualifier, if any, applies to data entered in this field?
"^DD",357.1,357.14,.1,"DT")
2941019
"^DD",357.1,357.14,.12,0)
ITEM NUMBER^NJ3,0^^0;12^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.1,357.14,.12,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",357.1,357.14,.12,"DT")
2950427
"^DD",357.1,357.14,.14,0)
PRINT?^S^0:NO, DO NOT PRINT;1:YES, NOT FOR ICR;2:YES, FOR ICR;^0;14^Q
"^DD",357.1,357.14,.14,"DT")
2950427
"^DD",357.1,357.14,.15,0)
READ?^S^0:NO, DO NOT READ;1:YES, READ WITHOUT ICR;2:YES, READ WITH ICR;3:YES, ICR PRINT FORMAT, READ WITHOUT ICR;^0;15^Q
"^DD",357.1,357.14,.15,"DT")
2950503
"^DD",357.1,357.14,.17,0)
DATA ELEMENT^P359.1'^IBE(359.1,^0;17^Q
"^DD",357.1,357.14,.17,"DT")
2950427
"^DD",357.2,357.2,0)
FIELD^^.18^18
"^DD",357.2,357.2,0,"DDA")
N
"^DD",357.2,357.2,0,"DIK")
IBDX2
"^DD",357.2,357.2,0,"DIKOLD")
IBDX2
"^DD",357.2,357.2,0,"DT")
2950424
"^DD",357.2,357.2,0,"ID",.02)
W ""
"^DD",357.2,357.2,0,"ID",.11)
W ""
"^DD",357.2,357.2,0,"ID","WRITE")
N IBDBLK S IBDBLK=+$P(^(0),U,2) D EN^DDIOL("   Block: "_$P($G(^IBE(357.1,IBDBLK,0)),U)_"   Form: "_$P($G(^IBE(357,+$P($G(^IBE(357.1,IBDBLK,0)),U,2),0)),U),"","?0")
"^DD",357.2,357.2,0,"IX","AC",357.2,.11)

"^DD",357.2,357.2,0,"IX","AD",357.2,.14)

"^DD",357.2,357.2,0,"IX","B",357.2,.01)

"^DD",357.2,357.2,0,"IX","C",357.2,.02)

"^DD",357.2,357.2,0,"NM","SELECTION LIST")

"^DD",357.2,357.2,0,"PT",357.3,.03)

"^DD",357.2,357.2,0,"PT",357.4,.03)

"^DD",357.2,357.2,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",357.2,357.2,.01,1,0)
^.1
"^DD",357.2,357.2,.01,1,1,0)
357.2^B
"^DD",357.2,357.2,.01,1,1,1)
S ^IBE(357.2,"B",$E(X,1,30),DA)=""
"^DD",357.2,357.2,.01,1,1,2)
K ^IBE(357.2,"B",$E(X,1,30),DA)
"^DD",357.2,357.2,.01,3)
Answer must be 3-30 characters in length.
"^DD",357.2,357.2,.01,21,0)
^^2^2^2930527^
"^DD",357.2,357.2,.01,21,1,0)
 
"^DD",357.2,357.2,.01,21,2,0)
The name of the list.
"^DD",357.2,357.2,.01,"DEL",1,0)
I '$G(IBDEVICE("LISTMAN"))!($G(IBDELETE)) W "...Selection Lists can only be deleted through the Encounter Form Utilities!"
"^DD",357.2,357.2,.01,"DT")
2921119
"^DD",357.2,357.2,.02,0)
BLOCK^RP357.1'^IBE(357.1,^0;2^Q
"^DD",357.2,357.2,.02,1,0)
^.1
"^DD",357.2,357.2,.02,1,1,0)
357.2^C
"^DD",357.2,357.2,.02,1,1,1)
S ^IBE(357.2,"C",$E(X,1,30),DA)=""
"^DD",357.2,357.2,.02,1,1,2)
K ^IBE(357.2,"C",$E(X,1,30),DA)
"^DD",357.2,357.2,.02,1,1,"DT")
2921207
"^DD",357.2,357.2,.02,3)
Enter the block that the selection list should appear in.
"^DD",357.2,357.2,.02,21,0)
^^2^2^2930527^
"^DD",357.2,357.2,.02,21,1,0)
The block that the list appears on. The position of the selection list is
"^DD",357.2,357.2,.02,21,2,0)
relative to the block.
"^DD",357.2,357.2,.02,"DT")
2921207
"^DD",357.2,357.2,.04,0)
SUBCOLUMN HEADER APPEARANCE^FX^^0;4^S X=$$UPPER^VALM1(X) K:$L(X)>1!("R"'[$E(X,1)) X
"^DD",357.2,357.2,.04,.1)
HOW SHOULD THE SUBCOLUMN HEADERS APPEAR? ENTER 'R' FOR REVERSE PRINTING.
"^DD",357.2,357.2,.04,3)
R=Reverse Printing
"^DD",357.2,357.2,.04,21,0)
^^2^2^2950808^
"^DD",357.2,357.2,.04,21,1,0)
Allows the form designer to select the appearance of the subcolumn
"^DD",357.2,357.2,.04,21,2,0)
headers.
"^DD",357.2,357.2,.04,"DT")
2940531
"^DD",357.2,357.2,.05,0)
COLUMN HEADER^F^^0;5^K:$L(X)>70!($L(X)<1) X
"^DD",357.2,357.2,.05,.1)
WHAT TEXT SHOULD APPEAR AT THE TOP OF EACH COLUMN? (OPTIONAL)
"^DD",357.2,357.2,.05,3)
This header will appear at the top of the column that contains the list. If there is more than one column it will appear at the top of each.
"^DD",357.2,357.2,.05,21,0)
^^2^2^2930527^
"^DD",357.2,357.2,.05,21,1,0)
 
"^DD",357.2,357.2,.05,21,2,0)
The text that appears at the top of each column (NOT subcolumn).
"^DD",357.2,357.2,.05,"DT")
2930415
"^DD",357.2,357.2,.06,0)
COLUMN HEADER APPEARANCE^FX^^0;6^S X=$$UPPER^VALM1(X) K:$L(X)>5!($TR(X,"UBRCS")'="") X
"^DD",357.2,357.2,.06,.1)
HOW SHOULD THE COLUMN HEADER APPEAR? CHOOSE FROM {U,B,R,C,S}
"^DD",357.2,357.2,.06,3)
B=bold,U=underline,R=reverse,C=center,S=shade. You can enter any combination of {B,U,R,C,S}.
"^DD",357.2,357.2,.06,21,0)
^^2^2^2950420^^^^
"^DD",357.2,357.2,.06,21,1,0)
 
"^DD",357.2,357.2,.06,21,2,0)
The column header can be give characteristics, such as centered and bold.
"^DD",357.2,357.2,.06,"DT")
2961024
"^DD",357.2,357.2,.07,0)
SUBCOLUMNS SEPARATED WITH?^RS^1:ONE SPACE;2:TWO SPACES;3:LINE;4:SPACE/LINE/SPACE;^0;7^Q
"^DD",357.2,357.2,.07,.1)
HOW SHOULD THE SUBCOLUMNS BE SEPARATED?
"^DD",357.2,357.2,.07,3)
How should the subcolumns be separated?
"^DD",357.2,357.2,.07,21,0)
^^2^2^2930527^
"^DD",357.2,357.2,.07,21,1,0)
 
"^DD",357.2,357.2,.07,21,2,0)
What characters are used to separate the subcolumns.
"^DD",357.2,357.2,.07,"DT")
2930415
"^DD",357.2,357.2,.08,0)
EXTRA LINES FOR SELECTIONS^NJ1,0^^0;8^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.2,357.2,.08,.1)
NUMBER OF ADDITIONAL LINES FOR EACH ENTRY ON LIST?
"^DD",357.2,357.2,.08,3)
How many extra lines should be allocated for each selection, in addition to the 1 the selection will print on?
"^DD",357.2,357.2,.08,21,0)
^^4^4^2930527^
"^DD",357.2,357.2,.08,21,1,0)
 
"^DD",357.2,357.2,.08,21,2,0)
Each entry on the list prints on only one line. However, if you want
"^DD",357.2,357.2,.08,21,3,0)
extra space to appear below each entry on the list then this field should
"^DD",357.2,357.2,.08,21,4,0)
be set to the number of blank lines desired.
"^DD",357.2,357.2,.08,"DT")
2930427
"^DD",357.2,357.2,.09,0)
GROUP HEADER APPEARANCE^FX^^0;9^S X=$$UPPER^VALM1(X) K:$L(X)>4!($TR(X,"UBSC")'="") X
"^DD",357.2,357.2,.09,.1)
HOW SHOULD THE HEADER FOR EACH GROUP OF ENTRIES APPEAR? CHOOSE FROM {U,B,S,C}
"^DD",357.2,357.2,.09,3)
B=bold,S=shade,C=center,U=underline. You can use any combination of {B,S,C,U}
"^DD",357.2,357.2,.09,21,0)
^^1^1^2950419^^^^
"^DD",357.2,357.2,.09,21,1,0)
This field determines the appearance of the group headers.
"^DD",357.2,357.2,.09,"DT")
2961024
"^DD",357.2,357.2,.11,0)
SELECTION INTERFACE^R*P357.6'^IBE(357.6,^0;11^S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",357.2,357.2,.11,1,0)
^.1
"^DD",357.2,357.2,.11,1,1,0)
357.2^AC^MUMPS
"^DD",357.2,357.2,.11,1,1,1)
S:X $P(^IBE(357.2,DA,0),U,14)=+$P($G(^IBE(357.6,X,0)),U,14) S:$P(^IBE(357.2,DA,0),U,14)&$P(^IBE(357.2,DA,0),U,2) ^IBE(357.2,"AD",$P(^IBE(357.2,DA,0),U,2),DA)=""
"^DD",357.2,357.2,.11,1,1,2)
Q
"^DD",357.2,357.2,.11,1,1,"%D",0)
^^2^2^2950623^^^
"^DD",357.2,357.2,.11,1,1,"%D",1,0)
Automatically sets the DYNAMIC SELECTIONS field and the "AD"
"^DD",357.2,357.2,.11,1,1,"%D",2,0)
cross-reference.
"^DD",357.2,357.2,.11,1,1,"DT")
2950619
"^DD",357.2,357.2,.11,3)
Enter the package interface used to obtain this list.
"^DD",357.2,357.2,.11,12)
Allows only available selection interfaces.
"^DD",357.2,357.2,.11,12.1)
S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1"
"^DD",357.2,357.2,.11,21,0)
^^2^2^2950825^^
"^DD",357.2,357.2,.11,21,1,0)
 
"^DD",357.2,357.2,.11,21,2,0)
This identifies the Package Interface that is used to fill the list.
"^DD",357.2,357.2,.11,"DT")
2950825
"^DD",357.2,357.2,.12,0)
UNDERLINE SELECTIONS?^RS^0:NO;1:YES;^0;12^Q
"^DD",357.2,357.2,.12,.1)
SHOULD EACH ENTRY ON THE LIST BE UNDERLINED? (YES/NO)
"^DD",357.2,357.2,.12,3)
Should the items on the list be underlined?
"^DD",357.2,357.2,.12,21,0)
^^2^2^2930527^
"^DD",357.2,357.2,.12,21,1,0)
 
"^DD",357.2,357.2,.12,21,2,0)
Answer yes if each entry on the list should be underlined.
"^DD",357.2,357.2,.12,"DT")
2930414
"^DD",357.2,357.2,.13,0)
NUMBER OF COLUMNS^NJ2,0^^0;13^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.2,357.2,.13,.1)
HOW MANY COLUMNS OF LIST ENTRIES SHOULD THE LIST HAVE? (OPTIONAL)
"^DD",357.2,357.2,.13,3)

"^DD",357.2,357.2,.13,4)
D HELP5^IBDFU5
"^DD",357.2,357.2,.13,21,0)
^^6^6^2930527^
"^DD",357.2,357.2,.13,21,1,0)
 
"^DD",357.2,357.2,.13,21,2,0)
A selection list may be displayed in an area several columns wide. The
"^DD",357.2,357.2,.13,21,3,0)
starting position and height of each column may be specified. However, it
"^DD",357.2,357.2,.13,21,4,0)
is not necessary because defaults values will be used. The defaults used
"^DD",357.2,357.2,.13,21,5,0)
assume that nothing else is going in the block except the selection list
"^DD",357.2,357.2,.13,21,6,0)
and that the entire block should be filled.
"^DD",357.2,357.2,.13,"DT")
2930802
"^DD",357.2,357.2,.14,0)
DYNAMIC SELECTIONS^SX^0:NO;1:YES;^0;14^K X
"^DD",357.2,357.2,.14,1,0)
^.1
"^DD",357.2,357.2,.14,1,1,0)
357.2^AD^MUMPS
"^DD",357.2,357.2,.14,1,1,1)
S:X&$P($G(^IBE(357.2,DA,0)),U,2) ^IBE(357.2,"AD",$P($G(^IBE(357.2,DA,0)),U,2),DA)=""
"^DD",357.2,357.2,.14,1,1,2)
K:X&$P($G(^IBE(357.2,DA,0)),U,2) ^IBE(357.2,"AD",$P($G(^IBE(357.2,DA,0)),U,2),DA)
"^DD",357.2,357.2,.14,1,1,"%D",0)
^^1^1^2950719^
"^DD",357.2,357.2,.14,1,1,"%D",1,0)
Allows all the dynamic selection lists to be found for the block.
"^DD",357.2,357.2,.14,1,1,"DT")
2941221
"^DD",357.2,357.2,.14,3)
Answer YES if the list of selections is created at print time.
"^DD",357.2,357.2,.14,21,0)
^^2^2^2950808^
"^DD",357.2,357.2,.14,21,1,0)
This is used to flag the list as being created at print time as opposed to
"^DD",357.2,357.2,.14,21,2,0)
design time.
"^DD",357.2,357.2,.14,"DT")
2941221
"^DD",357.2,357.2,.15,0)
PRINT COMPLETE^S^0:NO;1:YES;^0;15^Q
"^DD",357.2,357.2,.15,.1)
SHOULD THE LIST PRINT ON A SEPARATE PAGE IF IT DOES NOT FIT ON THE FORM?
"^DD",357.2,357.2,.15,3)
If the data on the list won't fit on the form, should it be printed on a separate page?
"^DD",357.2,357.2,.15,21,0)
^^3^3^2950414^
"^DD",357.2,357.2,.15,21,1,0)
Applies only to dynamic selection lists. This controls the overflow behavior
"^DD",357.2,357.2,.15,21,2,0)
of the list. YES means that if the data on the list does not fit, it should
"^DD",357.2,357.2,.15,21,3,0)
be printed on a separate page.
"^DD",357.2,357.2,.15,"DT")
2950414
"^DD",357.2,357.2,.16,0)
NUMBER OF OTHER^NJ1,0^^0;16^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.2,357.2,.16,.1)
HOW MANY 'OTHER' DO YOU WANT TO ALLOCATE SPACE FOR?
"^DD",357.2,357.2,.16,3)
Allocate space for how many 'other' not found on the list?
"^DD",357.2,357.2,.16,21,0)
^^2^2^2950503^^
"^DD",357.2,357.2,.16,21,1,0)
Space will be allocated at the bottom of the selection list for the user
"^DD",357.2,357.2,.16,21,2,0)
to enter this number of items not found on the list.
"^DD",357.2,357.2,.16,"DT")
2950424
"^DD",357.2,357.2,.17,0)
WHAT TO ALLOCATE SPACE FOR^S^1:NARRATIVE ONLY;2:CODE ONLY;3:NARRATIVE AND CODE;^0;17^Q
"^DD",357.2,357.2,.17,.1)
WHAT SHOULD SPACE BE ALLOCATED FOR IN 'OTHER'?
"^DD",357.2,357.2,.17,3)
What should space be allocated for when making room for 'other'?
"^DD",357.2,357.2,.17,21,0)
^^2^2^2950718^^
"^DD",357.2,357.2,.17,21,1,0)
This field determines what fields to place on the form for writting in
"^DD",357.2,357.2,.17,21,2,0)
other items not found on the list.
"^DD",357.2,357.2,.17,"DT")
2950426
"^DD",357.2,357.2,.18,0)
WHAT TO SEND TO PCE^S^1:NARRATIVE ONLY;2:CODE ONLY;3:NARRATIVE AND CODE;^0;18^Q
"^DD",357.2,357.2,.18,.1)
WHAT DO YOU WANT ENTERED TO THE DATABASE?
"^DD",357.2,357.2,.18,3)
WHAT DO YOU WANT ENTERED INTO THE DATABASE?
"^DD",357.2,357.2,.18,21,0)
^^2^2^2950927^^
"^DD",357.2,357.2,.18,21,1,0)
This determines what is sent to PCE. For example, some types of data may
"^DD",357.2,357.2,.18,21,2,0)
require that a code be sent, but the narrative may be optional.
"^DD",357.2,357.2,.18,"DT")
2950424
"^DD",357.2,357.2,1,0)
LIST COLUMN^357.21IA^^1;0
"^DD",357.2,357.2,1,21,0)
^^2^2^2950421^^^^
"^DD",357.2,357.2,1,21,1,0)
A column is a rectangular area that has the necessary width to display a
"^DD",357.2,357.2,1,21,2,0)
single item on the list.
"^DD",357.2,357.2,1,"DT")
2930802
"^DD",357.2,357.2,2,0)
SUBCOLUMN NUMBER^357.22I^^2;0
"^DD",357.2,357.2,2,21,0)
^^4^4^2950308^
"^DD",357.2,357.2,2,21,1,0)
 
"^DD",357.2,357.2,2,21,2,0)
A subcolumn contains one field of the entry on the list. The subcolumn
"^DD",357.2,357.2,2,21,3,0)
order is the order, from left to right, that the subcolumns will appear
"^DD",357.2,357.2,2,21,4,0)
in.
"^DD",357.2,357.2,2,"DT")
2930413
"^DD",357.2,357.21,0)
LIST COLUMN SUB-FIELD^^.04^4
"^DD",357.2,357.21,0,"DIK")
IBDX2
"^DD",357.2,357.21,0,"DT")
2930331
"^DD",357.2,357.21,0,"ID","WRITE")
D EN^DDIOL("   COLUMN #"_$P($G(^(0)),U),"","?0")
"^DD",357.2,357.21,0,"IX","B",357.21,.01)

"^DD",357.2,357.21,0,"NM","LIST COLUMN")

"^DD",357.2,357.21,0,"UP")
357.2
"^DD",357.2,357.21,.01,0)
LIST COLUMN NUMBER^MNJ1,0^^0;1^K:+X'=X!(X>4)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.2,357.21,.01,1,0)
^.1
"^DD",357.2,357.21,.01,1,1,0)
357.21^B
"^DD",357.2,357.21,.01,1,1,1)
S ^IBE(357.2,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",357.2,357.21,.01,1,1,2)
K ^IBE(357.2,DA(1),1,"B",$E(X,1,30),DA)
"^DD",357.2,357.21,.01,3)
You can specify the position and height of up to 4 columns. Defaults will be used where needed.
"^DD",357.2,357.21,.01,21,0)
^^2^2^2950421^^^^
"^DD",357.2,357.21,.01,21,1,0)
The order that the columns will be filled. Column 1 will first be filled
"^DD",357.2,357.21,.01,21,2,0)
with items, then column 2, etc.
"^DD",357.2,357.21,.01,"DT")
2930802
"^DD",357.2,357.21,.02,0)
LIST COLUMN'S STARTING ROW^NJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.2,357.21,.02,.1)
WHAT ROW SHOULD THE LIST COLUMN START IN? (OPTIONAL)
"^DD",357.2,357.21,.02,2)
S Y(0)=Y S:+Y=Y Y=+Y+1
"^DD",357.2,357.21,.02,2.1)
S:+Y=Y Y=+Y+1
"^DD",357.2,357.21,.02,3)
What row should the column begin in?
"^DD",357.2,357.21,.02,21,0)
^^2^2^2930715^^^
"^DD",357.2,357.21,.02,21,1,0)
The row, relative to the block, that the column should begin in. This is
"^DD",357.2,357.21,.02,21,2,0)
optional, since default values can be used.
"^DD",357.2,357.21,.02,23,0)
^^4^4^2930715^^
"^DD",357.2,357.21,.02,23,1,0)
The internal representation starts at 0, the external representation
"^DD",357.2,357.21,.02,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",357.2,357.21,.02,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",357.2,357.21,.02,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",357.2,357.21,.02,"DT")
2930802
"^DD",357.2,357.21,.03,0)
LIST COLUMN'S STARTING COLUMN^NJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.2,357.21,.03,.1)
WHAT BLOCK COLUMN SHOULD THE LIST COLUMN START IN? (OPTIONAL)
"^DD",357.2,357.21,.03,2)
S Y(0)=Y S:+Y=Y Y=+Y+1
"^DD",357.2,357.21,.03,2.1)
S:+Y=Y Y=+Y+1
"^DD",357.2,357.21,.03,3)
At what block column should the list column begin at? The first subcolumn of the list column will start one character to the right of this.
"^DD",357.2,357.21,.03,21,0)
^^4^4^2940216^
"^DD",357.2,357.21,.03,21,1,0)
 
"^DD",357.2,357.21,.03,21,2,0)
The column (# of characters to the right) that the list column should
"^DD",357.2,357.21,.03,21,3,0)
begin in, relative to the block. It is optional, since a default value can
"^DD",357.2,357.21,.03,21,4,0)
be used.
"^DD",357.2,357.21,.03,23,0)
^^4^4^2930715^
"^DD",357.2,357.21,.03,23,1,0)
The internal representation starts at 0, the external representation
"^DD",357.2,357.21,.03,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",357.2,357.21,.03,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",357.2,357.21,.03,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",357.2,357.21,.03,"DT")
2930930
"^DD",357.2,357.21,.04,0)
LIST COLUMN HEIGHT^NJ3,0^^0;4^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.2,357.21,.04,.1)
HOW MANY LINES HIGH SHOULD THE LIST COLUMN BE? (OPTIONAL)
"^DD",357.2,357.21,.04,3)
How many lines should the column cover?
"^DD",357.2,357.21,.04,21,0)
^^3^3^2930527^
"^DD",357.2,357.21,.04,21,1,0)
 
"^DD",357.2,357.21,.04,21,2,0)
The number of lines the column should occupy. This is optional - if not
"^DD",357.2,357.21,.04,21,3,0)
supplied the column will extend to the bottom of the block.
"^DD",357.2,357.21,.04,"DT")
2930802
"^DD",357.2,357.22,0)
SUBCOLUMN NUMBER SUB-FIELD^^.1^10
"^DD",357.2,357.22,0,"DIK")
IBDX2
"^DD",357.2,357.22,0,"DT")
2941209
"^DD",357.2,357.22,0,"ID","WRITE")
D ID1^IBDFU5
"^DD",357.2,357.22,0,"IX","B",357.22,.01)

"^DD",357.2,357.22,0,"NM","SUBCOLUMN NUMBER")

"^DD",357.2,357.22,0,"UP")
357.2
"^DD",357.2,357.22,.01,0)
SUBCOLUMN NUMBER^MRNJ1,0X^^0;1^K:+X'=X!(X>8)!(X<1)!(X?.E1"."1N.N)!($D(^IBE(357.2,DA(1),2,"B",X))) X
"^DD",357.2,357.22,.01,.1)
Number of the subcolumn, subcolumns being numbered 1-8, left-to-right
"^DD",357.2,357.22,.01,1,0)
^.1
"^DD",357.2,357.22,.01,1,1,0)
357.22^B
"^DD",357.2,357.22,.01,1,1,1)
S ^IBE(357.2,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",357.2,357.22,.01,1,1,2)
K ^IBE(357.2,DA(1),2,"B",$E(X,1,30),DA)
"^DD",357.2,357.22,.01,3)
The SUBCOLUMN NUMBER determines the order in which the subcolumns will display. There are at most 8 subcolumns, numbered 1-8.
"^DD",357.2,357.22,.01,21,0)
^^2^2^2950308^
"^DD",357.2,357.22,.01,21,1,0)
 
"^DD",357.2,357.22,.01,21,2,0)
The order that the subcolumn will appear on the form.
"^DD",357.2,357.22,.01,"DT")
2950308
"^DD",357.2,357.22,.02,0)
SUBCOLUMN HEADER^F^^0;2^K:$L(X)>150!($L(X)<1) X
"^DD",357.2,357.22,.02,.1)
WHAT TEXT SHOULD APPEAR AT THE TOP OF THE SUBCOLUMN?
"^DD",357.2,357.22,.02,3)
What text should appear at the top of the subcolumn?
"^DD",357.2,357.22,.02,21,0)
^^2^2^2930527^
"^DD",357.2,357.22,.02,21,1,0)
 
"^DD",357.2,357.22,.02,21,2,0)
The text that will appear at the top of the subcolumn.
"^DD",357.2,357.22,.02,"DT")
2930414
"^DD",357.2,357.22,.03,0)
SUBCOLUMN WIDTH^NJ3,0^^0;3^K:+X'=X!(X>150)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.2,357.22,.03,.1)
HOW WIDE SHOULD THE SUBCOLUMN BE?
"^DD",357.2,357.22,.03,3)
How wide should the subcolumn be?
"^DD",357.2,357.22,.03,21,0)
^^3^3^2930527^
"^DD",357.2,357.22,.03,21,1,0)
 
"^DD",357.2,357.22,.03,21,2,0)
The width of the subcolumn. If the subcolumn contains a MARKING AREA then
"^DD",357.2,357.22,.03,21,3,0)
the width of the MARKING AREA overrides what ever this is.
"^DD",357.2,357.22,.03,"DT")
2930414
"^DD",357.2,357.22,.04,0)
TYPE OF SUBCOLUMN^RS^1:TEXT;2:MARKING;^0;4^Q
"^DD",357.2,357.22,.04,.1)
SUBCOLUMN CONTAINS TEXT, OR FOR MARKING? (TEXT/MARKING)
"^DD",357.2,357.22,.04,3)
Enter '1' if the subcolumn will contain text, '2' if it will be for the user to mark his selections.
"^DD",357.2,357.22,.04,21,0)
^^4^4^2960424^^
"^DD",357.2,357.22,.04,21,1,0)
 
"^DD",357.2,357.22,.04,21,2,0)
The subcolumn can contain either text, derived from what is returned by
"^DD",357.2,357.22,.04,21,3,0)
the PACKAGE INTERFACE, or a MARKING AREA, which is meant to be written in
"^DD",357.2,357.22,.04,21,4,0)
to select an entry on the list.
"^DD",357.2,357.22,.04,"DT")
2960424
"^DD",357.2,357.22,.05,0)
SUBCOLUMN'S DATA^NJ1,0X^^0;5^K:'$$OKPIECE^IBDFU5($P($G(^IBE(357.2,D0,0)),U,11),X) X
"^DD",357.2,357.22,.05,.1)
WHAT DATA SHOULD BE CONTAINED IN THE SUBCOLUMN?
"^DD",357.2,357.22,.05,3)
WHAT DATA SHOULD BE CONTAINED IN THE SUBCOLUMN?
"^DD",357.2,357.22,.05,4)
D HELP2^IBDFU5
"^DD",357.2,357.22,.05,21,0)
^^3^3^2940719^^
"^DD",357.2,357.22,.05,21,1,0)
 
"^DD",357.2,357.22,.05,21,2,0)
The Package Interface returns a record, which is composed of fields. This
"^DD",357.2,357.22,.05,21,3,0)
identifies which field goes in the subcolumn.
"^DD",357.2,357.22,.05,"DT")
2950919
"^DD",357.2,357.22,.06,0)
MARKING AREA^P357.91'^IBE(357.91,^0;6^Q
"^DD",357.2,357.22,.06,.1)
TYPE OF MARKING AREA
"^DD",357.2,357.22,.06,3)
What type of marking area should appear in the subcolumn?
"^DD",357.2,357.22,.06,21,0)
^^2^2^2930527^
"^DD",357.2,357.22,.06,21,1,0)
 
"^DD",357.2,357.22,.06,21,2,0)
This identifies which MARKING AREA should go in the subcolumn.
"^DD",357.2,357.22,.06,"DT")
2930414
"^DD",357.2,357.22,.07,0)
ALLOW EDITING OF TEXT?^S^0:NO;1:YES;^0;7^Q
"^DD",357.2,357.22,.07,.1)
ALLOW EDITING OF THE TEXT APPEARING IN THIS SUBCOLUMN? (YES/NO)
"^DD",357.2,357.22,.07,3)
Is it okay to edit the text appearing in this subcolumn?
"^DD",357.2,357.22,.07,21,0)
^^4^4^2950927^^
"^DD",357.2,357.22,.07,21,1,0)
 
"^DD",357.2,357.22,.07,21,2,0)
This determines whether or not the user, when selecting items to appear on
"^DD",357.2,357.22,.07,21,3,0)
the list, will be able to edit the text appearing in the subcolum. This is
"^DD",357.2,357.22,.07,21,4,0)
ignored if the subcolumn contains a MARKING AREA.
"^DD",357.2,357.22,.07,"DT")
2930428
"^DD",357.2,357.22,.08,0)
DO NOT UNDERLINE MARKING AREA?^S^0:NO;1:YES;^0;8^Q
"^DD",357.2,357.22,.08,3)
Enter YES if you do NOT want this subcolumn underlined.
"^DD",357.2,357.22,.08,21,0)
^^2^2^2950808^
"^DD",357.2,357.22,.08,21,1,0)
Underlining can be turned off for the subcolumn even if it is turned on
"^DD",357.2,357.22,.08,21,2,0)
for the list as a whole.
"^DD",357.2,357.22,.08,"DT")
2940607
"^DD",357.2,357.22,.09,0)
DATA QUALIFIER^*P357.98'^IBD(357.98,^0;9^S DIC("S")="I $$DQGOOD^IBDFU9($P($G(^IBE(357.2,DA(1),0)),""^"",11),Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",357.2,357.22,.09,3)
Does one of the qualifiers apply to the choices made in this subcolumn?
"^DD",357.2,357.22,.09,12)
Allows only certain data qualifiers, defined in the Package Interface file.
"^DD",357.2,357.22,.09,12.1)
S DIC("S")="I $$DQGOOD^IBDFU9($P($G(^IBE(357.2,DA(1),0)),""^"",11),Y)"
"^DD",357.2,357.22,.09,21,0)
^^2^2^2950808^
"^DD",357.2,357.22,.09,21,1,0)
Used to associate a data qualifier to a subcolumn that is used for making
"^DD",357.2,357.22,.09,21,2,0)
selections.
"^DD",357.2,357.22,.09,"DT")
2941206
"^DD",357.2,357.22,.1,0)
SELECTION RULE^S^0:ANY NUMBER;1:EXACTLY ONE;2:AT MOST ONE (0 or 1);3:AT LEAST ONE (1 or more);^0;10^Q
"^DD",357.2,357.22,.1,3)
Which rule applies to the choices the user can make in this subcolumn?
"^DD",357.2,357.22,.1,21,0)
^^2^2^2950808^
"^DD",357.2,357.22,.1,21,1,0)
A selection rule can be applied to a subcolumn used to make selections,
"^DD",357.2,357.22,.1,21,2,0)
i.e., one that contains marking areas.
"^DD",357.2,357.22,.1,"DT")
2941209
"^DD",357.3,357.3,0)
FIELD^^2.04^14
"^DD",357.3,357.3,0,"DDA")
N
"^DD",357.3,357.3,0,"DIK")
IBDX3
"^DD",357.3,357.3,0,"DIKOLD")
IBDX3
"^DD",357.3,357.3,0,"DT")
2961021
"^DD",357.3,357.3,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(357.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(357.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",357.3,357.3,0,"ID",.04)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(357.4,+$P(^(0),U,4),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(357.4,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",357.3,357.3,0,"IX","APO",357.3,.03)

"^DD",357.3,357.3,0,"IX","APO1",357.3,.04)

"^DD",357.3,357.3,0,"IX","APO2",357.3,.05)

"^DD",357.3,357.3,0,"IX","B",357.3,.01)

"^DD",357.3,357.3,0,"IX","C",357.3,.03)

"^DD",357.3,357.3,0,"IX","D",357.3,.04)

"^DD",357.3,357.3,0,"NM","SELECTION")

"^DD",357.3,357.3,.01,0)
SELECTION ID^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",357.3,357.3,.01,1,0)
^.1
"^DD",357.3,357.3,.01,1,1,0)
357.3^B
"^DD",357.3,357.3,.01,1,1,1)
S ^IBE(357.3,"B",$E(X,1,30),DA)=""
"^DD",357.3,357.3,.01,1,1,2)
K ^IBE(357.3,"B",$E(X,1,30),DA)
"^DD",357.3,357.3,.01,3)
Answer must be 3-30 characters in length.
"^DD",357.3,357.3,.01,21,0)
^^2^2^2930309^
"^DD",357.3,357.3,.01,21,1,0)
 
"^DD",357.3,357.3,.01,21,2,0)
The ID passed by the package.
"^DD",357.3,357.3,.01,"DT")
2921119
"^DD",357.3,357.3,.02,0)
PLACE HOLDER ONLY^S^0:NO;1:YES;^0;2^Q
"^DD",357.3,357.3,.02,3)
Enter YES if this is a place holder, used to add some space to the list.
"^DD",357.3,357.3,.02,"DT")
2931020
"^DD",357.3,357.3,.03,0)
SELECTION LIST^RP357.2'^IBE(357.2,^0;3^Q
"^DD",357.3,357.3,.03,1,0)
^.1
"^DD",357.3,357.3,.03,1,1,0)
357.3^C
"^DD",357.3,357.3,.03,1,1,1)
S ^IBE(357.3,"C",$E(X,1,30),DA)=""
"^DD",357.3,357.3,.03,1,1,2)
K ^IBE(357.3,"C",$E(X,1,30),DA)
"^DD",357.3,357.3,.03,1,1,"DT")
2921127
"^DD",357.3,357.3,.03,1,2,0)
357.3^APO^MUMPS
"^DD",357.3,357.3,.03,1,2,1)
I $P($G(^IBE(357.3,DA,0)),U,5)]"",$P(^(0),U,4) S ^IBE(357.3,"APO",X,$P(^(0),U,4),$P(^(0),U,5),DA)=""
"^DD",357.3,357.3,.03,1,2,2)
I $P($G(^IBE(357.3,DA,0)),U,5)]"",$P(^(0),U,4) K ^IBE(357.3,"APO",X,$P(^(0),U,4),$P(^(0),U,5),DA)
"^DD",357.3,357.3,.03,1,2,"%D",0)
^^7^7^2960402^^
"^DD",357.3,357.3,.03,1,2,"%D",1,0)
 
"^DD",357.3,357.3,.03,1,2,"%D",2,0)
Allows all selections for a particular group in a selection list to be
"^DD",357.3,357.3,.03,1,2,"%D",3,0)
found in the order that they should appear. The subscripts are
"^DD",357.3,357.3,.03,1,2,"%D",4,0)
^IBE(357.3,"APO",<selection list ien>,<group ien>,<print order within
"^DD",357.3,357.3,.03,1,2,"%D",5,0)
group>,<selection ien>). If this field is re-indexed then the APO1 index
"^DD",357.3,357.3,.03,1,2,"%D",6,0)
on the .04 field and the APO2 index on the .05 field need not be
"^DD",357.3,357.3,.03,1,2,"%D",7,0)
re-indexed.
"^DD",357.3,357.3,.03,1,2,"DT")
2960402
"^DD",357.3,357.3,.03,21,0)
^^2^2^2921215^
"^DD",357.3,357.3,.03,21,1,0)
 
"^DD",357.3,357.3,.03,21,2,0)
Identifies the selection list that this selection belongs on.
"^DD",357.3,357.3,.03,"DT")
2960402
"^DD",357.3,357.3,.04,0)
SELECTION GROUP^RP357.4^IBE(357.4,^0;4^Q
"^DD",357.3,357.3,.04,1,0)
^.1
"^DD",357.3,357.3,.04,1,1,0)
357.3^D
"^DD",357.3,357.3,.04,1,1,1)
S ^IBE(357.3,"D",$E(X,1,30),DA)=""
"^DD",357.3,357.3,.04,1,1,2)
K ^IBE(357.3,"D",$E(X,1,30),DA)
"^DD",357.3,357.3,.04,1,1,"DT")
2921221
"^DD",357.3,357.3,.04,1,2,0)
357.3^APO1^MUMPS
"^DD",357.3,357.3,.04,1,2,1)
I $P($G(^IBE(357.3,DA,0)),U,5)]"",$P(^(0),U,3) S ^IBE(357.3,"APO",$P(^(0),U,3),X,$P(^(0),U,5),DA)=""
"^DD",357.3,357.3,.04,1,2,2)
I $P($G(^IBE(357.3,DA,0)),U,5)]"",$P(^(0),U,3) K ^IBE(357.3,"APO",$P(^(0),U,3),X,$P(^(0),U,5),DA)
"^DD",357.3,357.3,.04,1,2,"%D",0)
^^7^7^2960402^^
"^DD",357.3,357.3,.04,1,2,"%D",1,0)
 
"^DD",357.3,357.3,.04,1,2,"%D",2,0)
Allows all selections for a particular group in a selection list to be
"^DD",357.3,357.3,.04,1,2,"%D",3,0)
found in the order that they should appear. The subscripts are
"^DD",357.3,357.3,.04,1,2,"%D",4,0)
^IBE(357.3,"APO",<selection list ien>,<group ien>,<print order within
"^DD",357.3,357.3,.04,1,2,"%D",5,0)
group>,<selection ien>). If this field is re-indexed then the APO index
"^DD",357.3,357.3,.04,1,2,"%D",6,0)
on the .03 field and the APO2 index on the .05 field need not be
"^DD",357.3,357.3,.04,1,2,"%D",7,0)
re-indexed.
"^DD",357.3,357.3,.04,1,2,"DT")
2960402
"^DD",357.3,357.3,.04,3)
Entries on a list are grouped under group headers - under which header should this entry appear?
"^DD",357.3,357.3,.04,21,0)
^^3^3^2930607^
"^DD",357.3,357.3,.04,21,1,0)
 
"^DD",357.3,357.3,.04,21,2,0)
The SELECTION GROUP that the selection belongs to.The selection will
"^DD",357.3,357.3,.04,21,3,0)
appear under the group header on the form.
"^DD",357.3,357.3,.04,"DT")
2960402
"^DD",357.3,357.3,.05,0)
PRINT ORDER WITHIN GROUP^RNJ7,2^^0;5^K:+X'=X!(X>9999.99)!(X<0)!(X?.E1"."3N.N) X
"^DD",357.3,357.3,.05,1,0)
^.1
"^DD",357.3,357.3,.05,1,1,0)
357.3^APO2^MUMPS
"^DD",357.3,357.3,.05,1,1,1)
I $P($G(^IBE(357.3,DA,0)),U,3),$P(^(0),U,4) S ^IBE(357.3,"APO",$P(^(0),U,3),$P(^(0),U,4),X,DA)=""
"^DD",357.3,357.3,.05,1,1,2)
I $P($G(^IBE(357.3,DA,0)),U,3),$P(^(0),U,4) K ^IBE(357.3,"APO",$P(^(0),U,3),$P(^(0),U,4),X,DA)
"^DD",357.3,357.3,.05,1,1,"%D",0)
^^7^7^2960402^^
"^DD",357.3,357.3,.05,1,1,"%D",1,0)
 
"^DD",357.3,357.3,.05,1,1,"%D",2,0)
Allows all selections for a particular group in a selection list to be
"^DD",357.3,357.3,.05,1,1,"%D",3,0)
found in the order that they should appear. The subscripts are
"^DD",357.3,357.3,.05,1,1,"%D",4,0)
^IBE(357.3,"APO",<selection list ien>,<group ien>,<print order within
"^DD",357.3,357.3,.05,1,1,"%D",5,0)
group>,<selection ien>). If this field is re-indexed then the APO index
"^DD",357.3,357.3,.05,1,1,"%D",6,0)
on the .03 field and the APO1 index on the .04 field need not be
"^DD",357.3,357.3,.05,1,1,"%D",7,0)
re-indexed.
"^DD",357.3,357.3,.05,1,1,"DT")
2960402
"^DD",357.3,357.3,.05,3)
Type a Number between 0 and 9999.99, 2 Decimal Digits
"^DD",357.3,357.3,.05,21,0)
^^2^2^2950810^^^^
"^DD",357.3,357.3,.05,21,1,0)
Determines the order that this selection entry will appear in under the
"^DD",357.3,357.3,.05,21,2,0)
header for the selection group.
"^DD",357.3,357.3,.05,"DT")
2960402
"^DD",357.3,357.3,.06,0)
PLACE HOLDER TEXT^F^^0;6^K:$L(X)>75!($L(X)<1) X
"^DD",357.3,357.3,.06,3)
What text should be displayed for the place holder?
"^DD",357.3,357.3,.06,"DT")
2950113
"^DD",357.3,357.3,.07,0)
USE AS SUBHEADER?^S^0:NO;1:YES;^0;7^Q
"^DD",357.3,357.3,.07,.1)
IS THE TEXT USED AS A SUBHEADER FOR THE FOLLOWING SELECTIONS WITHIN THE GROUP?
"^DD",357.3,357.3,.07,3)
If you want to use the place holder as a subheader for selections within the group, answer YES.
"^DD",357.3,357.3,.07,21,0)
^^9^9^2951002^
"^DD",357.3,357.3,.07,21,1,0)
One use that is being made of selections that are defined as place holders
"^DD",357.3,357.3,.07,21,2,0)
is to use them as subheaders. When this is done the text should be
"^DD",357.3,357.3,.07,21,3,0)
included with the header for the following selections. This field is
"^DD",357.3,357.3,.07,21,4,0)
used to allow that.
"^DD",357.3,357.3,.07,21,5,0)
 
"^DD",357.3,357.3,.07,21,6,0)
If this field is set to YES for a place holder that contains text, the
"^DD",357.3,357.3,.07,21,7,0)
text will be used as a subheader (#1) and will be concatenated to the end
"^DD",357.3,357.3,.07,21,8,0)
of the header passed to PCE. The subheader is in use until a place
"^DD",357.3,357.3,.07,21,9,0)
holder is reached that ends it, or the group ends.
"^DD",357.3,357.3,.07,"DT")
2950928
"^DD",357.3,357.3,.08,0)
STOP USING SUBHEADER?^S^0:NO;1:YES;^0;8^Q
"^DD",357.3,357.3,.08,.1)
SHOULD THE SUBHEADER IN USE, IF ANY, BE ENDED?
"^DD",357.3,357.3,.08,3)
If you have been using a place holder as a subheader for selections within the group, do you want to stop doing so?
"^DD",357.3,357.3,.08,21,0)
^^2^2^2951002^^^
"^DD",357.3,357.3,.08,21,1,0)
This field is used to signal that the subheader in use, defined by prior
"^DD",357.3,357.3,.08,21,2,0)
place holders, should be ended.
"^DD",357.3,357.3,.08,"DT")
2951002
"^DD",357.3,357.3,.09,0)
QUANTITY^NJ3,0^^0;9^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.3,357.3,.09,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",357.3,357.3,.09,21,0)
^^3^3^2961031^^
"^DD",357.3,357.3,.09,21,1,0)
This field contains the number of occurrences for a particular selection.
"^DD",357.3,357.3,.09,21,2,0)
A value placed in this field will be passed to PCE as the quantity.
"^DD",357.3,357.3,.09,21,3,0)
Presently, the quantity field will only be asked for CPT codes.
"^DD",357.3,357.3,.09,"DT")
2961008
"^DD",357.3,357.3,1,0)
SUBCOLUMN VALUE^357.31IA^^1;0
"^DD",357.3,357.3,1,21,0)
^^3^3^2930527^
"^DD",357.3,357.3,1,21,1,0)
 
"^DD",357.3,357.3,1,21,2,0)
The selection can be composed of multiple fields. Each field occupies its
"^DD",357.3,357.3,1,21,3,0)
own subcolumn on the form.
"^DD",357.3,357.3,2.01,0)
NARRATIVE TO SEND TO PCE^F^^2;1^K:$L(X)>80!($L(X)<3) X
"^DD",357.3,357.3,2.01,3)
Enter the narrative to send to PCE if a provider narrative different from the description is desired.  Answer must be 3-80 characters in length.
"^DD",357.3,357.3,2.01,21,0)
^^7^7^2960906^^^
"^DD",357.3,357.3,2.01,21,1,0)
Enter the narrative that should be sent to PCE when this selection is
"^DD",357.3,357.3,2.01,21,2,0)
scanned.  This will be the provider narrative that is shown in PCE and
"^DD",357.3,357.3,2.01,21,3,0)
Problem List.  If there is no entry in this field the text as it appears
"^DD",357.3,357.3,2.01,21,4,0)
on the form will be sent as the narrative.
"^DD",357.3,357.3,2.01,21,5,0)

"^DD",357.3,357.3,2.01,21,6,0)
This field can only be entered for the type of interfaces that allow
"^DD",357.3,357.3,2.01,21,7,0)
adding this narrative, and then send the narrative to PCE.
"^DD",357.3,357.3,2.01,23,0)
^^1^1^2960906^
"^DD",357.3,357.3,2.01,23,1,0)
 
"^DD",357.3,357.3,2.01,"DT")
2951207
"^DD",357.3,357.3,2.02,0)
CLINICAL LEXICON ENTRY^P757.01'^GMP(757.01,^2;2^Q
"^DD",357.3,357.3,2.02,21,0)
^^5^5^2960906^^
"^DD",357.3,357.3,2.02,21,1,0)
This is the clinical lexicon entry this term should be associated with.
"^DD",357.3,357.3,2.02,21,2,0)
Generally this is only completed for selections based on diagnosis.
"^DD",357.3,357.3,2.02,21,3,0)
The clinical lexicon entry will be passed to pce when this selection is
"^DD",357.3,357.3,2.02,21,4,0)
scanned.  This allows maintaining the patient problem list associated 
"^DD",357.3,357.3,2.02,21,5,0)
with clinical terms.
"^DD",357.3,357.3,2.02,23,0)
^^1^1^2960906^
"^DD",357.3,357.3,2.02,23,1,0)
 
"^DD",357.3,357.3,2.02,"DT")
2960401
"^DD",357.3,357.3,2.03,0)
SECOND CODE^F^^2;3^K:$L(X)>10!($L(X)<1) X
"^DD",357.3,357.3,2.03,3)
Answer must be 1-10 characters in length.
"^DD",357.3,357.3,2.03,21,0)
^^1^1^2970107^^^
"^DD",357.3,357.3,2.03,21,1,0)
Used to send additional codes along when one entry is bubbled.
"^DD",357.3,357.3,2.03,23,0)
^^2^2^2970107^
"^DD",357.3,357.3,2.03,23,1,0)
 
"^DD",357.3,357.3,2.03,23,2,0)
 
"^DD",357.3,357.3,2.03,"DT")
2961021
"^DD",357.3,357.3,2.04,0)
THIRD CODE^F^^2;4^K:$L(X)>10!($L(X)<1) X
"^DD",357.3,357.3,2.04,3)
Answer must be 1-10 characters in length.
"^DD",357.3,357.3,2.04,21,0)
^^1^1^2970107^^^
"^DD",357.3,357.3,2.04,21,1,0)
Used to pass a third code to PCE for this one entry.
"^DD",357.3,357.3,2.04,23,0)
^^2^2^2970107^
"^DD",357.3,357.3,2.04,23,1,0)
 
"^DD",357.3,357.3,2.04,23,2,0)
 
"^DD",357.3,357.3,2.04,"DT")
2961021
"^DD",357.3,357.31,0)
SUBCOLUMN VALUE SUB-FIELD^^.02^2
"^DD",357.3,357.31,0,"DIK")
IBDX3
"^DD",357.3,357.31,0,"DT")
2930402
"^DD",357.3,357.31,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",357.3,357.31,0,"IX","B",357.31,.01)

"^DD",357.3,357.31,0,"NM","SUBCOLUMN VALUE")

"^DD",357.3,357.31,0,"UP")
357.3
"^DD",357.3,357.31,.01,0)
SUBCOLUMN NUMBER^MRNJ1,0X^^0;1^K:+X'=X!(X>6)!(X<1)!(X?.E1"."1N.N)!($D(^IBE(357.3,DA(1),1,"B",X))) X
"^DD",357.3,357.31,.01,1,0)
^.1
"^DD",357.3,357.31,.01,1,1,0)
357.31^B
"^DD",357.3,357.31,.01,1,1,1)
S ^IBE(357.3,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",357.3,357.31,.01,1,1,2)
K ^IBE(357.3,DA(1),1,"B",$E(X,1,30),DA)
"^DD",357.3,357.31,.01,3)
Which subcolumn is the value for?
"^DD",357.3,357.31,.01,21,0)
^^2^2^2930527^
"^DD",357.3,357.31,.01,21,1,0)
 
"^DD",357.3,357.31,.01,21,2,0)
The order that the subcolumn should appear on the form.
"^DD",357.3,357.31,.01,"DT")
2930402
"^DD",357.3,357.31,.02,0)
SUBCOLUMN VALUE^F^^0;2^K:$L(X)>150!($L(X)<1) X
"^DD",357.3,357.31,.02,3)
What value should go in the subcolumn?
"^DD",357.3,357.31,.02,21,0)
^^2^2^2930527^
"^DD",357.3,357.31,.02,21,1,0)
 
"^DD",357.3,357.31,.02,21,2,0)
The text that should appear in the subcolumn.
"^DD",357.3,357.31,.02,"DT")
2930401
"^DD",357.4,357.4,0)
FIELD^^.04^4
"^DD",357.4,357.4,0,"DDA")
N
"^DD",357.4,357.4,0,"DIK")
IBDX4
"^DD",357.4,357.4,0,"DIKOLD")
IBDX4
"^DD",357.4,357.4,0,"DT")
2941208
"^DD",357.4,357.4,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",357.4,357.4,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(357.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(357.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",357.4,357.4,0,"IX","APO",357.4,.02)

"^DD",357.4,357.4,0,"IX","APO1",357.4,.03)

"^DD",357.4,357.4,0,"IX","B",357.4,.01)

"^DD",357.4,357.4,0,"IX","D",357.4,.03)

"^DD",357.4,357.4,0,"NM","SELECTION GROUP")

"^DD",357.4,357.4,0,"PT",357.3,.04)

"^DD",357.4,357.4,.01,0)
HEADER^RF^^0;1^K:$L(X)>40!($L(X)<1) X
"^DD",357.4,357.4,.01,1,0)
^.1
"^DD",357.4,357.4,.01,1,1,0)
357.4^B
"^DD",357.4,357.4,.01,1,1,1)
S ^IBE(357.4,"B",$E(X,1,30),DA)=""
"^DD",357.4,357.4,.01,1,1,2)
K ^IBE(357.4,"B",$E(X,1,30),DA)
"^DD",357.4,357.4,.01,3)
What text do you want to appear at the top of this group?
"^DD",357.4,357.4,.01,21,0)
^^2^2^2960129^^^^
"^DD",357.4,357.4,.01,21,1,0)
 
"^DD",357.4,357.4,.01,21,2,0)
The name given to a group of selections appearing on a selection list.
"^DD",357.4,357.4,.01,"DEL",1,0)
I '$G(IBDEVICE("LISTMAN")) W "...Selection Groups can only be deleted through the Encounter Form Utilities!"
"^DD",357.4,357.4,.01,"DT")
2930604
"^DD",357.4,357.4,.02,0)
PRINT ORDER^RNJ7,2^^0;2^K:+X'=X!(X>9999.99)!(X<0)!(X?.E1"."3N.N) X
"^DD",357.4,357.4,.02,1,0)
^.1
"^DD",357.4,357.4,.02,1,1,0)
357.4^APO^MUMPS
"^DD",357.4,357.4,.02,1,1,1)
I $P($G(^IBE(357.4,DA,0)),U,3) S ^IBE(357.4,"APO",$P(^(0),U,3),X,DA)=""
"^DD",357.4,357.4,.02,1,1,2)
I $P($G(^IBE(357.4,DA,0)),U,3) K ^IBE(357.4,"APO",$P(^(0),U,3),X,DA)
"^DD",357.4,357.4,.02,1,1,"%D",0)
^^5^5^2960402^^
"^DD",357.4,357.4,.02,1,1,"%D",1,0)
 
"^DD",357.4,357.4,.02,1,1,"%D",2,0)
Allows all groups in a selection list to be found in the order that they
"^DD",357.4,357.4,.02,1,1,"%D",3,0)
should appear. The subscripts are ^IBE(357.4,"APO",<selection list
"^DD",357.4,357.4,.02,1,1,"%D",4,0)
ien>,<print order for group>,<group ien>). If this field is re-indexed
"^DD",357.4,357.4,.02,1,1,"%D",5,0)
then the APO1 index on the .03 field need not be re-indexed.
"^DD",357.4,357.4,.02,1,1,"DT")
2960402
"^DD",357.4,357.4,.02,3)
Type a Number between 0 and 9999.99, 2 Decimal Digits
"^DD",357.4,357.4,.02,21,0)
^^5^5^2940516^^^^
"^DD",357.4,357.4,.02,21,1,0)
 
"^DD",357.4,357.4,.02,21,2,0)
This will define the order that a group of selections will appear in as
"^DD",357.4,357.4,.02,21,3,0)
compared to the other groups of selections.
"^DD",357.4,357.4,.02,21,4,0)
A group header "BLANK" will be created by default with order number 0.
"^DD",357.4,357.4,.02,21,5,0)
This header will not print to the form.
"^DD",357.4,357.4,.02,"DT")
2960402
"^DD",357.4,357.4,.03,0)
SELECTION LIST^RP357.2'^IBE(357.2,^0;3^Q
"^DD",357.4,357.4,.03,1,0)
^.1
"^DD",357.4,357.4,.03,1,1,0)
357.4^D
"^DD",357.4,357.4,.03,1,1,1)
S ^IBE(357.4,"D",$E(X,1,30),DA)=""
"^DD",357.4,357.4,.03,1,1,2)
K ^IBE(357.4,"D",$E(X,1,30),DA)
"^DD",357.4,357.4,.03,1,1,"%D",0)
^^1^1^2921218^
"^DD",357.4,357.4,.03,1,1,"%D",1,0)
Used to find all the groups belonging to a selection list.
"^DD",357.4,357.4,.03,1,1,"DT")
2921218
"^DD",357.4,357.4,.03,1,2,0)
357.4^APO1^MUMPS
"^DD",357.4,357.4,.03,1,2,1)
I $P($G(^IBE(357.4,DA,0)),U,2)]"" S ^IBE(357.4,"APO",X,$P(^(0),U,2),DA)=""
"^DD",357.4,357.4,.03,1,2,2)
I $P($G(^IBE(357.4,DA,0)),U,2)]"" K ^IBE(357.4,"APO",X,$P(^(0),U,2),DA)
"^DD",357.4,357.4,.03,1,2,"%D",0)
^^5^5^2960402^^
"^DD",357.4,357.4,.03,1,2,"%D",1,0)
 
"^DD",357.4,357.4,.03,1,2,"%D",2,0)
Allows all groups in a selection list to be found in the order that they
"^DD",357.4,357.4,.03,1,2,"%D",3,0)
should appear. The subscripts are ^IBE(357.4,"APO",<selection list
"^DD",357.4,357.4,.03,1,2,"%D",4,0)
ien>,<print order for group>,<group ien>). If this field is re-indexed
"^DD",357.4,357.4,.03,1,2,"%D",5,0)
then the APO index on the .02 field need not be re-indexed.
"^DD",357.4,357.4,.03,1,2,"DT")
2960402
"^DD",357.4,357.4,.03,3)
This identifies the selection list that contains this group.
"^DD",357.4,357.4,.03,21,0)
^^2^2^2930527^
"^DD",357.4,357.4,.03,21,1,0)
 
"^DD",357.4,357.4,.03,21,2,0)
The Selection List this group belongs to.
"^DD",357.4,357.4,.03,"DT")
2960402
"^DD",357.4,357.4,.04,0)
INVISIBLE^S^I:INVISIBLE;^0;4^Q
"^DD",357.4,357.4,.04,3)
If you do not want the header to print, enter 'I'.
"^DD",357.4,357.4,.04,"DT")
2941208
"^DD",357.5,357.5,0)
FIELD^^2^13
"^DD",357.5,357.5,0,"DDA")
N
"^DD",357.5,357.5,0,"DIK")
IBDX5
"^DD",357.5,357.5,0,"DIKOLD")
IBDX5
"^DD",357.5,357.5,0,"DT")
2930730
"^DD",357.5,357.5,0,"ID",.02)
W ""
"^DD",357.5,357.5,0,"ID",.03)
W ""
"^DD",357.5,357.5,0,"IX","B",357.5,.01)

"^DD",357.5,357.5,0,"IX","C",357.5,.02)

"^DD",357.5,357.5,0,"NM","DATA FIELD")

"^DD",357.5,357.5,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",357.5,357.5,.01,1,0)
^.1
"^DD",357.5,357.5,.01,1,1,0)
357.5^B
"^DD",357.5,357.5,.01,1,1,1)
S ^IBE(357.5,"B",$E(X,1,30),DA)=""
"^DD",357.5,357.5,.01,1,1,2)
K ^IBE(357.5,"B",$E(X,1,30),DA)
"^DD",357.5,357.5,.01,3)
Answer must be 3-30 characters in length.
"^DD",357.5,357.5,.01,21,0)
^^3^3^2930419^^^
"^DD",357.5,357.5,.01,21,1,0)
 
"^DD",357.5,357.5,.01,21,2,0)
The name is used to identify the field within a block. It can be anything
"^DD",357.5,357.5,.01,21,3,0)
the designer of a form wants it to be.
"^DD",357.5,357.5,.01,"DT")
2930419
"^DD",357.5,357.5,.02,0)
BLOCK^RP357.1'^IBE(357.1,^0;2^Q
"^DD",357.5,357.5,.02,1,0)
^.1
"^DD",357.5,357.5,.02,1,1,0)
357.5^C
"^DD",357.5,357.5,.02,1,1,1)
S ^IBE(357.5,"C",$E(X,1,30),DA)=""
"^DD",357.5,357.5,.02,1,1,2)
K ^IBE(357.5,"C",$E(X,1,30),DA)
"^DD",357.5,357.5,.02,1,1,"DT")
2921118
"^DD",357.5,357.5,.02,3)
What block should this data field appear in?
"^DD",357.5,357.5,.02,21,0)
^^2^2^2930310^
"^DD",357.5,357.5,.02,21,1,0)
 
"^DD",357.5,357.5,.02,21,2,0)
The particular block the data field should appear in.
"^DD",357.5,357.5,.02,"DT")
2921118
"^DD",357.5,357.5,.03,0)
TYPE OF DATA^*P357.6'^IBE(357.6,^0;3^S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",357.5,357.5,.03,3)
What data should be displayed in this field?
"^DD",357.5,357.5,.03,4)

"^DD",357.5,357.5,.03,12)
Allows only available display interfaces.
"^DD",357.5,357.5,.03,12.1)
S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1"
"^DD",357.5,357.5,.03,21,0)
^^5^5^2950825^^^
"^DD",357.5,357.5,.03,21,1,0)
 
"^DD",357.5,357.5,.03,21,2,0)
The particular interface that should be invoked to obtain the data for
"^DD",357.5,357.5,.03,21,3,0)
display. Some of the interfaces don't actually return data, but are
"^DD",357.5,357.5,.03,21,4,0)
instead 'dummy' interfaces for the purpose of printing things like blank
"^DD",357.5,357.5,.03,21,5,0)
lines.
"^DD",357.5,357.5,.03,"DT")
2930309
"^DD",357.5,357.5,.04,0)
LAST ITEM INDICATOR^S^1:YES;0:NO;^0;4^Q
"^DD",357.5,357.5,.04,.1)
IS THIS THE LAST ONE THAT WILL FIT ON THE FORM?
"^DD",357.5,357.5,.04,3)

"^DD",357.5,357.5,.04,4)
W "Enter YES if this is the last item that should print, else enter NO."
"^DD",357.5,357.5,.04,21,0)
^^4^4^2930408^^^^
"^DD",357.5,357.5,.04,21,1,0)
 
"^DD",357.5,357.5,.04,21,2,0)
This field is used to indicate which item on a list is the last to be
"^DD",357.5,357.5,.04,21,3,0)
printed to the form. The remaining items can be printed to a separate
"^DD",357.5,357.5,.04,21,4,0)
piece of paper.
"^DD",357.5,357.5,.04,"DT")
2930413
"^DD",357.5,357.5,.05,0)
NUMBER ON LIST^NJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.5,357.5,.05,.1)
WHICH ITEM ON THE LIST SHOULD BE DISPLAYED IN THIS FIELD?
"^DD",357.5,357.5,.05,3)
The data is a list of items. Which item on the list should be displayed?
"^DD",357.5,357.5,.05,21,0)
^^1^1^2930607^
"^DD",357.5,357.5,.05,21,1,0)
For data returned by the package interface that is in the form of a list, this field indicates which one of the items on the list should be displayed to this field.
"^DD",357.5,357.5,.05,"DT")
2930413
"^DD",357.5,357.5,.06,0)
TEXT LABEL^F^^0;6^K:$L(X)>150!($L(X)<1) X
"^DD",357.5,357.5,.06,.1)
WHAT LABEL SHOULD BEGIN THE TEXT (OPTIONAL)
"^DD",357.5,357.5,.06,3)
You can optionally begin the text with a label of your choice.
"^DD",357.5,357.5,.06,21,0)
^^2^2^2930527^
"^DD",357.5,357.5,.06,21,1,0)
 
"^DD",357.5,357.5,.06,21,2,0)
The label that should precede the text.
"^DD",357.5,357.5,.06,"DT")
2930825
"^DD",357.5,357.5,.07,0)
TEXT LABEL APPEARANCE^FX^^0;7^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBR"'[$E(X,1))!("UBR"'[$E(X,2))!("UBR"'[$E(X,3)) X
"^DD",357.5,357.5,.07,.1)
HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {B,U,R}
"^DD",357.5,357.5,.07,3)
B=bold,U=underline,R=reverse. You can enter BU to make the label bold and underlined.
"^DD",357.5,357.5,.07,21,0)
^^3^3^2940527^^^
"^DD",357.5,357.5,.07,21,1,0)
 
"^DD",357.5,357.5,.07,21,2,0)
The label can have characteristics, such as being underlined or
"^DD",357.5,357.5,.07,21,3,0)
emboldened.
"^DD",357.5,357.5,.07,"DT")
2940527
"^DD",357.5,357.5,.1,0)
TEXT STARTING COLUMN^NJ3,0XO^^0;10^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.5,357.5,.1,.1)
WHAT BLOCK COLUMN SHOULD THE TEXT START AT?
"^DD",357.5,357.5,.1,2)
S:Y=+Y Y=Y+1
"^DD",357.5,357.5,.1,2.1)
S Y=+Y+1
"^DD",357.5,357.5,.1,3)
What block column should the text start at?
"^DD",357.5,357.5,.1,21,0)
^^2^2^2930715^^
"^DD",357.5,357.5,.1,21,1,0)
This field determines what column the text should begin in.
"^DD",357.5,357.5,.1,21,2,0)
Applies only if the Package Interface returns a word-processing field.
"^DD",357.5,357.5,.1,23,0)
^^4^4^2930715^
"^DD",357.5,357.5,.1,23,1,0)
The internal representation starts at 0, the external representation
"^DD",357.5,357.5,.1,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",357.5,357.5,.1,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",357.5,357.5,.1,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",357.5,357.5,.1,"DT")
2940527
"^DD",357.5,357.5,.11,0)
TEXT STARTING ROW^NJ3,0XO^^0;11^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.5,357.5,.11,.1)
WHAT BLOCK ROW SHOULD THE TEXT START AT?
"^DD",357.5,357.5,.11,2)
S Y(0)=Y S:Y=+Y Y=Y+1
"^DD",357.5,357.5,.11,2.1)
S:Y=+Y Y=Y+1
"^DD",357.5,357.5,.11,3)
What block row should the text begin in?
"^DD",357.5,357.5,.11,21,0)
^^4^4^2930715^^
"^DD",357.5,357.5,.11,21,1,0)
 
"^DD",357.5,357.5,.11,21,2,0)
Determines which line on the form, relative to the block, the text area
"^DD",357.5,357.5,.11,21,3,0)
should begin at. Only applies if the package interface returns a
"^DD",357.5,357.5,.11,21,4,0)
word-processing field.
"^DD",357.5,357.5,.11,23,0)
^^4^4^2930715^
"^DD",357.5,357.5,.11,23,1,0)
The internal representation starts at 0, the external representation
"^DD",357.5,357.5,.11,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",357.5,357.5,.11,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",357.5,357.5,.11,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",357.5,357.5,.11,"DT")
2940527
"^DD",357.5,357.5,.12,0)
NUMBER OF FORM LINES FOR TEXT^NJ3,0^^0;12^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.5,357.5,.12,.1)
HOW MANY LINES OF THE FORM SHOULD BE ALLOCATED FOR THE TEXT?
"^DD",357.5,357.5,.12,3)
How many lines of the form should be allocated for the text?
"^DD",357.5,357.5,.12,21,0)
^^2^2^2930527^
"^DD",357.5,357.5,.12,21,1,0)
 
"^DD",357.5,357.5,.12,21,2,0)
The number of lines on the form that should be allocated for the text.
"^DD",357.5,357.5,.12,"DT")
2930414
"^DD",357.5,357.5,.13,0)
SPACING OF TEXT LINES^S^1:SINGLE SPACED;2:DOUBLE SPACED;3:SINGLE, BUT DOUBLE IF BLANK;^0;13^Q
"^DD",357.5,357.5,.13,.1)
HOW SHOULD THE TEXT LINES BE SPACED?
"^DD",357.5,357.5,.13,3)
How do you want the text lines to be spaced?
"^DD",357.5,357.5,.13,21,0)
^^2^2^2930527^
"^DD",357.5,357.5,.13,21,1,0)
 
"^DD",357.5,357.5,.13,21,2,0)
Determines the spacing between lines of text.
"^DD",357.5,357.5,.13,"DT")
2930414
"^DD",357.5,357.5,.14,0)
WIDTH OF TEXT LINES^NJ3,0^^0;14^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.5,357.5,.14,.1)
HOW MANY CHARACTERS ACROSS SHOULD THE TEXT LINES BE?
"^DD",357.5,357.5,.14,3)
How many columns wide do you want the text?
"^DD",357.5,357.5,.14,21,0)
^^2^2^2930527^
"^DD",357.5,357.5,.14,21,1,0)
 
"^DD",357.5,357.5,.14,21,2,0)
Determines how many characters across should be allocated to the text.
"^DD",357.5,357.5,.14,"DT")
2930414
"^DD",357.5,357.5,2,0)
SUBFIELD^357.52I^^2;0
"^DD",357.5,357.5,2,21,0)
^^2^2^2940816^^^^
"^DD",357.5,357.5,2,21,1,0)
A data field can be composed of multiple subfields. Each subfield can have
"^DD",357.5,357.5,2,21,2,0)
a label and data.
"^DD",357.5,357.5,2,"DT")
2930323
"^DD",357.5,357.52,0)
SUBFIELD SUB-FIELD^^.09^8
"^DD",357.5,357.52,0,"DIK")
IBDX5
"^DD",357.5,357.52,0,"DT")
2930730
"^DD",357.5,357.52,0,"IX","B",357.52,.01)

"^DD",357.5,357.52,0,"NM","SUBFIELD")

"^DD",357.5,357.52,0,"UP")
357.5
"^DD",357.5,357.52,.01,0)
SUBFIELD LABEL^MF^^0;1^K:$L(X)>150!($L(X)<1) X
"^DD",357.5,357.52,.01,1,0)
^.1
"^DD",357.5,357.52,.01,1,1,0)
357.52^B
"^DD",357.5,357.52,.01,1,1,1)
S ^IBE(357.5,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",357.5,357.52,.01,1,1,2)
K ^IBE(357.5,DA(1),2,"B",$E(X,1,30),DA)
"^DD",357.5,357.52,.01,3)
What should the subfield be named? The label will print unless it is made invisible.
"^DD",357.5,357.52,.01,4)

"^DD",357.5,357.52,.01,21,0)
^^3^3^2931020^^^^
"^DD",357.5,357.52,.01,21,1,0)
 
"^DD",357.5,357.52,.01,21,2,0)
The name of the subfield. The label prints to the form unless it is made
"^DD",357.5,357.52,.01,21,3,0)
invisible.
"^DD",357.5,357.52,.01,"DT")
2930730
"^DD",357.5,357.52,.03,0)
SUBFIELD LABEL APPEARANCE^FX^^0;3^S X=$$UPPER^VALM1(X) K:$L(X)>4!("UBRI"'[$E(X,1))!("UBRI"'[$E(X,2))!("UBRI"'[$E(X,3))!("UBRI"'[$E(X,4)) X
"^DD",357.5,357.52,.03,.1)
HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {U,B,R,I}
"^DD",357.5,357.52,.03,3)
B=bold,U=underline,R=reverse,I=invisible You can enter any combination of {B,U,R,I}. The label will not print if it is made invisible.
"^DD",357.5,357.52,.03,4)

"^DD",357.5,357.52,.03,21,0)
^^4^4^2940526^^^
"^DD",357.5,357.52,.03,21,1,0)
 
"^DD",357.5,357.52,.03,21,2,0)
The label can be made bold, underlined, or invisible. It can also be printed
"^DD",357.5,357.52,.03,21,3,0)
 in reverse, i.e., white on black. This field determines which of those
"^DD",357.5,357.52,.03,21,4,0)
 characteristics apply.
"^DD",357.5,357.52,.03,"DT")
2940816
"^DD",357.5,357.52,.04,0)
STARTING COLUMN FOR LABEL^NJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.5,357.52,.04,2)
S Y(0)=Y S:Y=+Y Y=Y+1
"^DD",357.5,357.52,.04,2.1)
S:Y=+Y Y=Y+1
"^DD",357.5,357.52,.04,3)
What block column should the label start in?
"^DD",357.5,357.52,.04,21,0)
^^2^2^2930715^^
"^DD",357.5,357.52,.04,21,1,0)
 
"^DD",357.5,357.52,.04,21,2,0)
The column, relative to the block, that the label should start at.
"^DD",357.5,357.52,.04,23,0)
^^4^4^2930715^
"^DD",357.5,357.52,.04,23,1,0)
The internal representation starts at 0, the external representation
"^DD",357.5,357.52,.04,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",357.5,357.52,.04,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",357.5,357.52,.04,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",357.5,357.52,.04,"DT")
2930617
"^DD",357.5,357.52,.05,0)
STARTING ROW FOR LABEL^NJ3,0XO^^0;5^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.5,357.52,.05,2)
S Y(0)=Y S:Y=+Y Y=Y+1
"^DD",357.5,357.52,.05,2.1)
S:Y=+Y Y=Y+1
"^DD",357.5,357.52,.05,3)
What block row should the label start in?
"^DD",357.5,357.52,.05,21,0)
^^2^2^2930608^
"^DD",357.5,357.52,.05,21,1,0)
 
"^DD",357.5,357.52,.05,21,2,0)
The row the label should be printed on.
"^DD",357.5,357.52,.05,23,0)
^^4^4^2930715^
"^DD",357.5,357.52,.05,23,1,0)
The internal representation starts at 0, the external representation
"^DD",357.5,357.52,.05,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",357.5,357.52,.05,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",357.5,357.52,.05,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",357.5,357.52,.05,"DT")
2930617
"^DD",357.5,357.52,.06,0)
STARTING ROW FOR DATA^NJ3,0XO^^0;6^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.5,357.52,.06,2)
S Y(0)=Y S:Y=+Y Y=Y+1
"^DD",357.5,357.52,.06,2.1)
S:Y=+Y Y=Y+1
"^DD",357.5,357.52,.06,3)
What block row should the data begin in?
"^DD",357.5,357.52,.06,21,0)
^^2^2^2930715^^
"^DD",357.5,357.52,.06,21,1,0)
 
"^DD",357.5,357.52,.06,21,2,0)
The row, relative to the block, that the data should print on.
"^DD",357.5,357.52,.06,23,0)
^^4^4^2930715^^
"^DD",357.5,357.52,.06,23,1,0)
The internal representation starts at 0, the external representation
"^DD",357.5,357.52,.06,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",357.5,357.52,.06,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",357.5,357.52,.06,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",357.5,357.52,.06,"DT")
2930617
"^DD",357.5,357.52,.07,0)
STARTING COLUMN FOR DATA^NJ3,0XO^^0;7^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.5,357.52,.07,2)
S Y(0)=Y S:Y=+Y Y=Y+1
"^DD",357.5,357.52,.07,2.1)
S:Y=+Y Y=Y+1
"^DD",357.5,357.52,.07,3)
What block column should the data begin in?
"^DD",357.5,357.52,.07,21,0)
^^2^2^2930608^
"^DD",357.5,357.52,.07,21,1,0)
 
"^DD",357.5,357.52,.07,21,2,0)
The column, relative to the block, that the data should print on.
"^DD",357.5,357.52,.07,23,0)
^^4^4^2930715^
"^DD",357.5,357.52,.07,23,1,0)
The internal representation starts at 0, the external representation
"^DD",357.5,357.52,.07,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",357.5,357.52,.07,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",357.5,357.52,.07,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",357.5,357.52,.07,"DT")
2930617
"^DD",357.5,357.52,.08,0)
LENGTH OF DATA^NJ3,0^^0;8^K:+X'=X!(X>150)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.5,357.52,.08,3)
How much space on the line should be allocated for the information to be displayed?
"^DD",357.5,357.52,.08,21,0)
^^3^3^2930527^
"^DD",357.5,357.52,.08,21,1,0)
 
"^DD",357.5,357.52,.08,21,2,0)
The amount of space, in terms of characters, that should be allocated
"^DD",357.5,357.52,.08,21,3,0)
to the data.
"^DD",357.5,357.52,.08,"DT")
2930322
"^DD",357.5,357.52,.09,0)
DATA^NJ1,0X^^0;9^K:'$$OKPIECE^IBDFU5(+$P($G(^IBE(357.5,D0,0)),U,3),X) X
"^DD",357.5,357.52,.09,.1)
WHAT DATA SHOULD BE DISPLAYED IN THIS SUBFIELD?
"^DD",357.5,357.52,.09,3)
WHAT DATA SHOULD BE DISPLAYED IN THIS SUBFIELD?
"^DD",357.5,357.52,.09,4)
D HELP1^IBDFU5
"^DD",357.5,357.52,.09,21,0)
^^4^4^2930527^
"^DD",357.5,357.52,.09,21,1,0)
 
"^DD",357.5,357.52,.09,21,2,0)
The package interface returns a record that may be composed of multiple
"^DD",357.5,357.52,.09,21,3,0)
fields. This identifies which of those fields should appear in this
"^DD",357.5,357.52,.09,21,4,0)
subfield.
"^DD",357.5,357.52,.09,"DT")
2950919
"^DD",357.6,357.6,0)
FIELD^^16.9^55
"^DD",357.6,357.6,0,"ACT")
D ASK^IBDFU9
"^DD",357.6,357.6,0,"DDA")
N
"^DD",357.6,357.6,0,"DT")
2961021
"^DD",357.6,357.6,0,"ID",.06)
W ""
"^DD",357.6,357.6,0,"ID","WRITE")
N IBDWNAM S IBDWNAM=$E($P(^(0),U),1,40) D EN^DDIOL(IBDWNAM,"","!?0")
"^DD",357.6,357.6,0,"ID","WRITE1")
N IBDWTYPE S IBDWTYPE=$S($P(^(0),"^",6)=1:"INPUT",$P(^(0),"^",6)=2:"OUTPUT",$P(^(0),"^",6)=3:"SELECTION",1:"REPORT")_$S($P(^(0),"^",6)=3&'$P(^(0),"^",13):"  ** NOT SCANNABLE **",1:"") D EN^DDIOL("TYPE="_IBDWTYPE,"","?45")
"^DD",357.6,357.6,0,"IX","B",357.6,.01)

"^DD",357.6,357.6,0,"IX","C",357.6,.04)

"^DD",357.6,357.6,0,"IX","D",357.6,3)

"^DD",357.6,357.6,0,"IX","E",357.6,.01)

"^DD",357.6,357.6,0,"NM","PACKAGE INTERFACE")

"^DD",357.6,357.6,0,"PT",357.13,.03)

"^DD",357.6,357.6,0,"PT",357.14,.04)

"^DD",357.6,357.6,0,"PT",357.2,.11)

"^DD",357.6,357.6,0,"PT",357.5,.03)

"^DD",357.6,357.6,0,"PT",357.6,.13)

"^DD",357.6,357.6,0,"PT",357.93,.06)

"^DD",357.6,357.6,0,"PT",357.951,.03)

"^DD",357.6,357.6,0,"PT",357.952,.04)

"^DD",357.6,357.6,0,"PT",357.961,.03)

"^DD",357.6,357.6,0,"PT",357.962,.03)

"^DD",357.6,357.6,0,"PT",358.94,.06)

"^DD",357.6,357.6,0,"PT",359.3,.1)

"^DD",357.6,357.6,0,"PT",359.94,.06)

"^DD",357.6,357.6,0,"PT",409.9501,.01)

"^DD",357.6,357.6,0,"PT",409.9502,.01)

"^DD",357.6,357.6,0,"PT",409.961,.01)

"^DD",357.6,357.6,.01,0)
NAME^RFX^^0;1^K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
"^DD",357.6,357.6,.01,1,0)
^.1
"^DD",357.6,357.6,.01,1,1,0)
357.6^B
"^DD",357.6,357.6,.01,1,1,1)
S ^IBE(357.6,"B",$E(X,1,30),DA)=""
"^DD",357.6,357.6,.01,1,1,2)
K ^IBE(357.6,"B",$E(X,1,30),DA)
"^DD",357.6,357.6,.01,1,2,0)
357.6^E^MUMPS
"^DD",357.6,357.6,.01,1,2,1)
S ^IBE(357.6,"E",$E(X,$F(X," "),40),DA)=""
"^DD",357.6,357.6,.01,1,2,2)
K ^IBE(357.6,"E",$E(X,$F(X," "),40),DA)
"^DD",357.6,357.6,.01,1,2,"%D",0)
^^4^4^2940224^
"^DD",357.6,357.6,.01,1,2,"%D",1,0)
 
"^DD",357.6,357.6,.01,1,2,"%D",2,0)
For package interfaces that are output routines the name has the custodial
"^DD",357.6,357.6,.01,1,2,"%D",3,0)
package's name space as a prefix. This cross-reference removes that
"^DD",357.6,357.6,.01,1,2,"%D",4,0)
prefix. It is used to improve the display of output routines for the user.
"^DD",357.6,357.6,.01,1,2,"DT")
2930409
"^DD",357.6,357.6,.01,3)
The name should be prefixed with the namespace of the package that provides the data.
"^DD",357.6,357.6,.01,21,0)
^^3^3^2951017^
"^DD",357.6,357.6,.01,21,1,0)
 
"^DD",357.6,357.6,.01,21,2,0)
The name of the Package Interface. The name should be preceded with the
"^DD",357.6,357.6,.01,21,3,0)
namespace of the package.
"^DD",357.6,357.6,.01,23,0)
^^1^1^2951017^^^
"^DD",357.6,357.6,.01,23,1,0)
 
"^DD",357.6,357.6,.01,"DT")
2950919
"^DD",357.6,357.6,.02,0)
ENTRY POINT^F^^0;2^K:$L(X)>8!($L(X)<1) X
"^DD",357.6,357.6,.02,3)
What entry point into the routine does this package interface use?
"^DD",357.6,357.6,.02,21,0)
^^2^2^2941018^^
"^DD",357.6,357.6,.02,21,1,0)
 
"^DD",357.6,357.6,.02,21,2,0)
The entry point in the routine that should be called.
"^DD",357.6,357.6,.02,"DT")
2941018
"^DD",357.6,357.6,.03,0)
ROUTINE^F^^0;3^K:$L(X)>8!($L(X)<1) X
"^DD",357.6,357.6,.03,3)
What routine does this package interface use?
"^DD",357.6,357.6,.03,21,0)
^^2^2^2941018^^
"^DD",357.6,357.6,.03,21,1,0)
 
"^DD",357.6,357.6,.03,21,2,0)
The routine that should be called.
"^DD",357.6,357.6,.03,"DT")
2921125
"^DD",357.6,357.6,.04,0)
CUSTODIAL PACKAGE^F^^0;4^K:$L(X)>30!($L(X)<3) X
"^DD",357.6,357.6,.04,1,0)
^.1
"^DD",357.6,357.6,.04,1,1,0)
357.6^C
"^DD",357.6,357.6,.04,1,1,1)
S ^IBE(357.6,"C",$E(X,1,30),DA)=""
"^DD",357.6,357.6,.04,1,1,2)
K ^IBE(357.6,"C",$E(X,1,30),DA)
"^DD",357.6,357.6,.04,1,1,"DT")
2921229
"^DD",357.6,357.6,.04,3)
Answer must be 3-30 characters in length.
"^DD",357.6,357.6,.04,21,0)
^^2^2^2951017^^
"^DD",357.6,357.6,.04,21,1,0)
This is a free text pointer to the package file. It serves only to
"^DD",357.6,357.6,.04,21,2,0)
document the custodial package of the data.
"^DD",357.6,357.6,.04,"DT")
2951017
"^DD",357.6,357.6,.05,0)
VARIABLE DATA?^S^0:NO;1:YES;^0;5^Q
"^DD",357.6,357.6,.05,.1)
DOES THE DATA VARY FROM PATIENT TO PATIENT?
"^DD",357.6,357.6,.05,3)
Enter YES if the data returned is variable, NO if the data is always the same.
"^DD",357.6,357.6,.05,21,0)
^^3^3^2930726^^^
"^DD",357.6,357.6,.05,21,1,0)
This field is used in the batch printing of encounter forms. The purpose
"^DD",357.6,357.6,.05,21,2,0)
is to avoid recomputing fields whose data does not change from patient to
"^DD",357.6,357.6,.05,21,3,0)
patient.
"^DD",357.6,357.6,.05,"DT")
2931124
"^DD",357.6,357.6,.06,0)
ACTION TYPE^RS^1:INPUT;2:DISPLAY;3:SELECTION;4:PRINT REPORT;^0;6^Q
"^DD",357.6,357.6,.06,3)
Is this interface for inputting data, displaying data to a form, for creating lists that will appear on a form, or for printing reports?
"^DD",357.6,357.6,.06,21,0)
^^9^9^2970325^^^
"^DD",357.6,357.6,.06,21,1,0)
                                                                   
"^DD",357.6,357.6,.06,21,2,0)
 
"^DD",357.6,357.6,.06,21,3,0)
Enter 1 for INPUT if the interface accepts data input from the user
"^DD",357.6,357.6,.06,21,4,0)
and transmits the data to the appropriate package. Enter 2 for DISPLAY
"^DD",357.6,357.6,.06,21,5,0)
if the interface retrieves data for display to a form. Enter 3 for
"^DD",357.6,357.6,.06,21,6,0)
SELECTION if the interface is for building a list to display
"^DD",357.6,357.6,.06,21,7,0)
to a form. Enter 4 if the interface is for printing a report. If
"^DD",357.6,357.6,.06,21,8,0)
the ACTION TYPE is SELECTION then the data type must be a record and the
"^DD",357.6,357.6,.06,21,9,0)
first piece must be the ID use to uniquely identify the selection.
"^DD",357.6,357.6,.06,23,0)
^^1^1^2970325^
"^DD",357.6,357.6,.06,23,1,0)
 
"^DD",357.6,357.6,.06,"DT")
2950825
"^DD",357.6,357.6,.07,0)
DATA TYPE^S^1:SINGLE VALUE;2:RECORD;3:LIST OF SINGLE VALUES;4:LIST OF RECORDS;5:WORD PROCESSING;^0;7^Q
"^DD",357.6,357.6,.07,.1)
WHAT FORMAT WILL THE DATA BE IN?
"^DD",357.6,357.6,.07,3)
What format will the data be in?
"^DD",357.6,357.6,.07,21,0)
^^9^9^2950825^
"^DD",357.6,357.6,.07,21,1,0)
Only applies to selection or display interfaces, both of which retrieve
"^DD",357.6,357.6,.07,21,2,0)
data for display to a form. It is the type of format the data should be
"^DD",357.6,357.6,.07,21,3,0)
in.
"^DD",357.6,357.6,.07,21,4,0)
 
"^DD",357.6,357.6,.07,21,5,0)
A single value is a string without pieces. A record is a set of strings
"^DD",357.6,357.6,.07,21,6,0)
concatenated together with "^" separating the pieces. A list is an
"^DD",357.6,357.6,.07,21,7,0)
indefinite number of values, each numbered, each containing the same type
"^DD",357.6,357.6,.07,21,8,0)
of information. A word processing data type will be in FM format.
"^DD",357.6,357.6,.07,21,9,0)
If the ACTION TYPE is SELECTION then the data type must be record.
"^DD",357.6,357.6,.07,"DT")
2930726
"^DD",357.6,357.6,.08,0)
PRINT COMPLETE^S^0:NO;1:YES;^0;8^Q
"^DD",357.6,357.6,.08,3)
If there is insufficient room on the form to print the data, should it be re-printed in full on a separate page?
"^DD",357.6,357.6,.08,21,0)
^^4^4^2930527^
"^DD",357.6,357.6,.08,21,1,0)
 
"^DD",357.6,357.6,.08,21,2,0)
This field is used to determine what should happen if the data does not
"^DD",357.6,357.6,.08,21,3,0)
fit in the space allocated to it on the form. If answered YES the data
"^DD",357.6,357.6,.08,21,4,0)
will be printed on another page.
"^DD",357.6,357.6,.08,"DT")
2930507
"^DD",357.6,357.6,.09,0)
AVAILABLE? (Y/N)^RS^0:NO;1:YES;^0;9^Q
"^DD",357.6,357.6,.09,3)
Is this package interface now available for use?
"^DD",357.6,357.6,.09,21,0)
^^3^3^2930527^
"^DD",357.6,357.6,.09,21,1,0)
 
"^DD",357.6,357.6,.09,21,2,0)
This field should be set to YES if the interface is available, NO if it is
"^DD",357.6,357.6,.09,21,3,0)
not available. Interfaces that are not available are not called.
"^DD",357.6,357.6,.09,"DT")
2921213
"^DD",357.6,357.6,.1,0)
HEALTH SUMMARY?^S^0:NO;1:YES;^0;10^Q
"^DD",357.6,357.6,.1,.1)
ARE YOU REQUESTING A HEALTH SUMMARY?
"^DD",357.6,357.6,.1,2.1)
S:Y=+Y Y=Y+1
"^DD",357.6,357.6,.1,3)
 Are you requesting a HEALTH SUMMARY to print?
"^DD",357.6,357.6,.1,21,0)
^^7^7^2930616^
"^DD",357.6,357.6,.1,21,1,0)
 
"^DD",357.6,357.6,.1,21,2,0)
This field will determine how to go about printing the report or form. It
"^DD",357.6,357.6,.1,21,3,0)
applies only to Package Interfaces of ACTION TYPE = PRINT REPORT. Health
"^DD",357.6,357.6,.1,21,4,0)
Summaries use the field HEALTH SUMMARY to determine the type of Health
"^DD",357.6,357.6,.1,21,5,0)
Summary to print. The process of printing Health Summaries dos not use the
"^DD",357.6,357.6,.1,21,6,0)
fields ENTRY POINT or ROUTINE, since all Health Summaries are printed in
"^DD",357.6,357.6,.1,21,7,0)
the same way.
"^DD",357.6,357.6,.1,"DT")
2930616
"^DD",357.6,357.6,.11,0)
TYPE OF HEALTH SUMMARY^*P142'^GMT(142,^0;11^S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",357.6,357.6,.11,3)
Which Health Summary do you want printed?
"^DD",357.6,357.6,.11,12)
EXCLUDES AD HOC HEALTH SUMMARIES
"^DD",357.6,357.6,.11,12.1)
S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION"""
"^DD",357.6,357.6,.11,21,0)
^^4^4^2940224^
"^DD",357.6,357.6,.11,21,1,0)
 
"^DD",357.6,357.6,.11,21,2,0)
This identifies the Health Summary that should be printed when this
"^DD",357.6,357.6,.11,21,3,0)
Package Interface is invoked. It should be null unless the HEALTH SUMMARY?
"^DD",357.6,357.6,.11,21,4,0)
field #.1 is coded YES.
"^DD",357.6,357.6,.11,"DT")
2930617
"^DD",357.6,357.6,.12,0)
TOOLKIT MEMBER?^S^0:NO;1:YES;^0;12^Q
"^DD",357.6,357.6,.12,.1)
SHOULD THIS PACKAGE INTERFACE BE PART OF THE TOOLKIT?
"^DD",357.6,357.6,.12,3)
Enter YES if this PACKAGE INTERFACE was added by the package developers as part of the toolkit, enter NO otherwise.
"^DD",357.6,357.6,.12,21,0)
^^3^3^2950808^^
"^DD",357.6,357.6,.12,21,1,0)
 
"^DD",357.6,357.6,.12,21,2,0)
Package Interfaces that are developed for national use will be documented
"^DD",357.6,357.6,.12,21,3,0)
as being part of the toolkit.
"^DD",357.6,357.6,.12,"DT")
2950711
"^DD",357.6,357.6,.13,0)
PACKAGE INTERFACE FOR INPUT^*P357.6'^IBE(357.6,^0;13^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""S""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",357.6,357.6,.13,.1)
WHICH INTERFACE SHOULD THIS LIST USE FOR PASSING DATA TO THE DATA BASE?
"^DD",357.6,357.6,.13,3)
What interface should be used for inputting data entered on the selection list?
"^DD",357.6,357.6,.13,12)
Must be an available interfaces for accepting input from selection lists.
"^DD",357.6,357.6,.13,12.1)
S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""S"""
"^DD",357.6,357.6,.13,21,0)
^^1^1^2970317^^^^
"^DD",357.6,357.6,.13,21,1,0)
Used to map scanned data to DHCP.
"^DD",357.6,357.6,.13,"DT")
2950825
"^DD",357.6,357.6,.14,0)
DYNAMIC SELECTIONS^S^0:NO;1:YES;^0;14^Q
"^DD",357.6,357.6,.14,3)
Only for selection routines. Enter YES if the Package Interface builds the selection list each time the form is printed.
"^DD",357.6,357.6,.14,21,0)
^^2^2^2950719^
"^DD",357.6,357.6,.14,21,1,0)
This is used to indicate whether the interface is used to build selection
"^DD",357.6,357.6,.14,21,2,0)
lists at print time.
"^DD",357.6,357.6,.14,"DT")
2941221
"^DD",357.6,357.6,.15,0)
DO NOT USE DFN AS A SUBSCRIPT^*S^0:NO;1:YES;^0;15^Q
"^DD",357.6,357.6,.15,3)
If the patient DFN should not be used as a subscript when passing data enter YES.
"^DD",357.6,357.6,.15,12)
If the action type is not OUTPUT ROUTINE then this field should not be set to NO.
"^DD",357.6,357.6,.15,12.1)
S DIC("S")="I (Y=1)!($P(^IBE(357.6,DA,0),U,6)=2)"
"^DD",357.6,357.6,.15,21,0)
^^6^6^2950413^^^^
"^DD",357.6,357.6,.15,21,1,0)
Originally, the patient DFN was used as a subscript when returning data
"^DD",357.6,357.6,.15,21,2,0)
for Package Interfaces of type output, but not for other types of
"^DD",357.6,357.6,.15,21,3,0)
interfaces. It is no longer necessary for any new Package Interface to use
"^DD",357.6,357.6,.15,21,4,0)
DFN as a subscript, but, to maintain compatibilty, output routines
"^DD",357.6,357.6,.15,21,5,0)
must set this field to YES if DFN is not to be used as a subscript. This
"^DD",357.6,357.6,.15,21,6,0)
field has no effect on other types of interfaces.
"^DD",357.6,357.6,.15,"DT")
2950413
"^DD",357.6,357.6,.16,0)
ALLOWED OBJECT USE^FX^^0;16^S X=$$UPPER^VALM1(X) K:$L(X)>4!("SMHP"'[$E(X,1))!("SMHP"'[$E(X,2))!("SMHP"'[$E(X,3))!("SMHP"'[$E(X,4)) X
"^DD",357.6,357.6,.16,3)

"^DD",357.6,357.6,.16,4)
D HELP7^IBDFU5A
"^DD",357.6,357.6,.16,21,0)
^^5^5^2950913^^^^
"^DD",357.6,357.6,.16,21,1,0)
This field applies only to package interfaces for input and is used to
"^DD",357.6,357.6,.16,21,2,0)
determine which package interfaces a particular type of form object may
"^DD",357.6,357.6,.16,21,3,0)
point to. Some combinations don't make sense. For example, it would not
"^DD",357.6,357.6,.16,21,4,0)
make sense to allow a multiple choice question to point to vitals, which
"^DD",357.6,357.6,.16,21,5,0)
is used to input data such as temperature and blood pressure.
"^DD",357.6,357.6,.16,"DT")
2950913
"^DD",357.6,357.6,.17,0)
ASK FOR ADDITIONAL NARRATIVE^S^0:NO;1:YES;^0;17^Q
"^DD",357.6,357.6,.17,21,0)
^^7^7^2951207^
"^DD",357.6,357.6,.17,21,1,0)
Enter whether users should be prompt for specifying the provider narrative
"^DD",357.6,357.6,.17,21,2,0)
that will be sent to PCE (and problem list) when creating a selection list.
"^DD",357.6,357.6,.17,21,3,0)
If this is answered no and the narrative is sent to PCE then the text as it
"^DD",357.6,357.6,.17,21,4,0)
appears on the form will be used as the provider narrative.
"^DD",357.6,357.6,.17,21,5,0)
 
"^DD",357.6,357.6,.17,21,6,0)
Generally only dianosis and clinical lexicon entries will want this field 
"^DD",357.6,357.6,.17,21,7,0)
set to Yes.
"^DD",357.6,357.6,.17,"DT")
2951207
"^DD",357.6,357.6,.18,0)
ASK FOR CLINICAL LEXICON^S^0:NO;1:YES;^0;18^Q
"^DD",357.6,357.6,.18,3)
Enter 'Yes' if you want to map entries from this interface to the clinical lexicon
"^DD",357.6,357.6,.18,21,0)
^^10^10^2960205^
"^DD",357.6,357.6,.18,21,1,0)
If this field is answered 'Yes' then users who are editing or creating
"^DD",357.6,357.6,.18,21,2,0)
selection lists based on this interface will be asked to map each entry
"^DD",357.6,357.6,.18,21,3,0)
(thought it is optional) to a clinical lexicon entry.  This is highly
"^DD",357.6,357.6,.18,21,4,0)
recommended for user who are scanning diagnosis entries and trying to 
"^DD",357.6,357.6,.18,21,5,0)
add entries to the Patients Problem list.
"^DD",357.6,357.6,.18,21,6,0)
 
"^DD",357.6,357.6,.18,21,7,0)
The primary purpose of this field is to allow sites who have built selection
"^DD",357.6,357.6,.18,21,8,0)
lists using the ICD9 Diagnosis file to map each entry to the clinical lexicon.
"^DD",357.6,357.6,.18,21,9,0)
The Problem List EP has recommended that each problem added to the problem
"^DD",357.6,357.6,.18,21,10,0)
list be associated with a clinical lexicon entry.
"^DD",357.6,357.6,.18,"DT")
2960205
"^DD",357.6,357.6,.19,0)
DQ REQUIRED^S^1:YES;^0;19^Q
"^DD",357.6,357.6,.19,21,0)
^^2^2^2960228^^
"^DD",357.6,357.6,.19,21,1,0)
Field used to determine if a data qualifier is required for this
"^DD",357.6,357.6,.19,21,2,0)
input interface.
"^DD",357.6,357.6,.19,"DT")
2960212
"^DD",357.6,357.6,1,0)
DESCRIPTION^357.61^^1;0
"^DD",357.6,357.6,1,21,0)
^^1^1^2950719^^^^
"^DD",357.6,357.6,1,21,1,0)
Should describe the data being exchanged by the package interface.
"^DD",357.6,357.6,2.01,0)
PIECE 1 DESCRIPTIVE NAME^F^^2;1^K:$L(X)>30!($L(X)<3) X
"^DD",357.6,357.6,2.01,.1)
WHAT IS THE FIRST PIECE OF DATA RETURNED BY THE INTERFACE?
"^DD",357.6,357.6,2.01,3)
Answer must be 3-30 characters in length.
"^DD",357.6,357.6,2.01,21,0)
^^3^3^2930527^
"^DD",357.6,357.6,2.01,21,1,0)
 
"^DD",357.6,357.6,2.01,21,2,0)
Should be a descriptive name of the first field in the record returned by
"^DD",357.6,357.6,2.01,21,3,0)
the interface.
"^DD",357.6,357.6,2.01,"DT")
2930726
"^DD",357.6,357.6,2.02,0)
PIECE 1 MAXIMUM LENGTH^NJ3,0^^2;2^K:+X'=X!(X>210)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.6,357.6,2.02,.1)
WHAT IS ITS MAXIMUM LENGTH?
"^DD",357.6,357.6,2.02,3)
Type a Number between 0 and 210, 0 Decimal Digits
"^DD",357.6,357.6,2.02,21,0)
^^3^3^2930527^
"^DD",357.6,357.6,2.02,21,1,0)
 
"^DD",357.6,357.6,2.02,21,2,0)
The maximum length of the first field of the record returned by the
"^DD",357.6,357.6,2.02,21,3,0)
interface.
"^DD",357.6,357.6,2.02,"DT")
2930726
"^DD",357.6,357.6,2.16,0)
PIECE 1 RECOMMENDED HEADER^F^^2;16^K:$L(X)>20!($L(X)<1) X
"^DD",357.6,357.6,2.16,3)
Answer must be 1-20 characters in length.
"^DD",357.6,357.6,2.16,21,0)
^^1^1^2950719^
"^DD",357.6,357.6,2.16,21,1,0)
The recommended header will be used as the default when designing a form.
"^DD",357.6,357.6,2.16,"DT")
2950417
"^DD",357.6,357.6,2.17,0)
IS PIECE 1 DISPLAYABLE?^S^0:NO;1:YES;^2;17^Q
"^DD",357.6,357.6,2.17,.1)
CAN THIS FIELD BE DISPLAYED TO THE USER?
"^DD",357.6,357.6,2.17,3)
The first piece of the returned record is reserved for the unique id of the selection. Enter no if it should not be displayed, for example, if it is a pointer.
"^DD",357.6,357.6,2.17,21,0)
^^3^3^2950719^^
"^DD",357.6,357.6,2.17,21,1,0)
This is used only for selection type interfaces. If NO, then the value can
"^DD",357.6,357.6,2.17,21,2,0)
not be displayed to the encounter form.  The first piece must contain the
"^DD",357.6,357.6,2.17,21,3,0)
unique id of the selection.
"^DD",357.6,357.6,2.17,"DT")
2930810
"^DD",357.6,357.6,2.18,0)
EXPORT SELECTIONS/CHOICES?^S^0:NO;1:YES;^2;18^Q
"^DD",357.6,357.6,2.18,3)
Enter NO if the ID returned by the PACKAGE INTERFACE is not constant between sites, for example, if it is a pointer. Otherwise answer YES.
"^DD",357.6,357.6,2.18,21,0)
^^8^8^2950825^
"^DD",357.6,357.6,2.18,21,1,0)
 
"^DD",357.6,357.6,2.18,21,2,0)
 
"^DD",357.6,357.6,2.18,21,3,0)
Applies to selection and input routines. Determines whether
"^DD",357.6,357.6,2.18,21,4,0)
selections appearing on selection lists and choices in a multiple choice
"^DD",357.6,357.6,2.18,21,5,0)
field will be exported along with the form that they appear on. The
"^DD",357.6,357.6,2.18,21,6,0)
import/export utility will not resolve pointers, so if the id used by
"^DD",357.6,357.6,2.18,21,7,0)
the package interface is a pointer that differs between sites
"^DD",357.6,357.6,2.18,21,8,0)
this field should contain NO.
"^DD",357.6,357.6,2.18,"DT")
2950825
"^DD",357.6,357.6,3,0)
USER LOOKUP^F^^3;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>240!($L(X)<1) X
"^DD",357.6,357.6,3,.1)
LIST OF WORDS TO MAKE LOOK-UPS EASIER
"^DD",357.6,357.6,3,1,0)
^.1
"^DD",357.6,357.6,3,1,1,0)
357.6^D^KWIC
"^DD",357.6,357.6,3,1,1,1)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^IBE(357.6,"D",I,DA)=""
"^DD",357.6,357.6,3,1,1,2)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^IBE(357.6,"D",I,DA)
"^DD",357.6,357.6,3,1,1,"%D",0)
^^3^3^2930409^^
"^DD",357.6,357.6,3,1,1,"%D",1,0)
 
"^DD",357.6,357.6,3,1,1,"%D",2,0)
This index is meant to assist the user in locating the correct package
"^DD",357.6,357.6,3,1,1,"%D",3,0)
interface needed to display a particular item of data to a form.
"^DD",357.6,357.6,3,1,1,"DT")
2930309
"^DD",357.6,357.6,3,3)
Enter words separated with spaces. They will be indexed to assist in lookup.
"^DD",357.6,357.6,3,4)
D LOOKUP^IBDF16
"^DD",357.6,357.6,3,21,0)
^^4^4^2940217^
"^DD",357.6,357.6,3,21,1,0)
 
"^DD",357.6,357.6,3,21,2,0)
This field is used to create a KWIC index for this file. The purpose is to
"^DD",357.6,357.6,3,21,3,0)
assist the user in locating the package interface he needs to display a
"^DD",357.6,357.6,3,21,4,0)
particular item of data to a form.
"^DD",357.6,357.6,3,"DT")
2930726
"^DD",357.6,357.6,4.01,0)
ENTRY ACTION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",357.6,357.6,4.01,3)
This is Standard MUMPS code.
"^DD",357.6,357.6,4.01,9)
@
"^DD",357.6,357.6,4.01,21,0)
^^3^3^2930527^
"^DD",357.6,357.6,4.01,21,1,0)
 
"^DD",357.6,357.6,4.01,21,2,0)
This code will be executed after the PROTECTED VARIABLES are newed, but
"^DD",357.6,357.6,4.01,21,3,0)
before the interface routine is called.
"^DD",357.6,357.6,4.01,"DT")
2930521
"^DD",357.6,357.6,5.01,0)
EXIT ACTION^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",357.6,357.6,5.01,3)
This is Standard MUMPS code.
"^DD",357.6,357.6,5.01,9)
@
"^DD",357.6,357.6,5.01,21,0)
^^3^3^2930528^
"^DD",357.6,357.6,5.01,21,1,0)
 
"^DD",357.6,357.6,5.01,21,2,0)
This code will be executed after the interface routine is called.
"^DD",357.6,357.6,5.01,21,3,0)
The effect of the NEW done on the PROTECTED VARIABLES is still in effect.
"^DD",357.6,357.6,5.01,"DT")
2930518
"^DD",357.6,357.6,6,0)
PROTECTED LOCAL VARIABLES^357.66^^6;0
"^DD",357.6,357.6,6,21,0)
^^11^11^2950719^^^
"^DD",357.6,357.6,6,21,1,0)
 
"^DD",357.6,357.6,6,21,2,0)
This is a list of variables that should be newed before the entry action
"^DD",357.6,357.6,6,21,3,0)
or calling the interface routine. It is protection against interfaces that
"^DD",357.6,357.6,6,21,4,0)
alter or kill variables, or entry actions that do so. Note that REQUIRED
"^DD",357.6,357.6,6,21,5,0)
VARIABLES should not also be PROTECTED VARIABLES. If an interface routine
"^DD",357.6,357.6,6,21,6,0)
changes a required variable, however, there is a way to protect it.
"^DD",357.6,357.6,6,21,7,0)
Supposing, for example, DFN is killed by the interface. This will protect
"^DD",357.6,357.6,6,21,8,0)
it:
"^DD",357.6,357.6,6,21,9,0)
     PROTECTED VARIABLE:   IBDFN
"^DD",357.6,357.6,6,21,10,0)
     ENTRY ACTION:  S IBDFN=DFN
"^DD",357.6,357.6,6,21,11,0)
     EXIT ACTION:   S DFN=IBDFN
"^DD",357.6,357.6,7,0)
REQUIRED LOCAL VARIABLES^357.67^^7;0
"^DD",357.6,357.6,7,21,0)
^^4^4^2930528^
"^DD",357.6,357.6,7,21,1,0)
 
"^DD",357.6,357.6,7,21,2,0)
The interface may require inputs. This field is a list of the required
"^DD",357.6,357.6,7,21,3,0)
local variables. The interface will not be called unless the variables are
"^DD",357.6,357.6,7,21,4,0)
determined to exist.
"^DD",357.6,357.6,9,0)
PCE DIM INPUT TRANSFORM^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",357.6,357.6,9,3)
The input transform should transform X to the value that should be passed.
"^DD",357.6,357.6,9,9)
@
"^DD",357.6,357.6,9,21,0)
^^3^3^2960401^^
"^DD",357.6,357.6,9,21,1,0)
Used to transform X, the identifier stored with the form object, to the
"^DD",357.6,357.6,9,21,2,0)
form that should be passed to the PCE Device Interface Module. It may, for
"^DD",357.6,357.6,9,21,3,0)
example, transform a code to an ien.
"^DD",357.6,357.6,9,"DT")
2960401
"^DD",357.6,357.6,10,0)
HELP TEXT^F^^10;1^K:$L(X)>245!($L(X)<1) X
"^DD",357.6,357.6,10,3)
This should provide some help to the user who is trying to enter a value associated with a bubble.
"^DD",357.6,357.6,10,21,0)
^^2^2^2950817^^^
"^DD",357.6,357.6,10,21,1,0)
This should provide some help to the user who is trying to enter a value
"^DD",357.6,357.6,10,21,2,0)
associated with a bubble.
"^DD",357.6,357.6,10,"DT")
2950522
"^DD",357.6,357.6,11,0)
VALIDATOR^K^^11;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",357.6,357.6,11,3)
This is Standard MUMPS code will kill X if X no longer identifies a valid code.
"^DD",357.6,357.6,11,9)
@
"^DD",357.6,357.6,11,21,0)
^^7^7^2950825^
"^DD",357.6,357.6,11,21,1,0)
This field is used to validate codes currently on a form. The variable X
"^DD",357.6,357.6,11,21,2,0)
should be set to the identifier that was returned by the Package
"^DD",357.6,357.6,11,21,3,0)
Interface. For selection interfaces, the identifier is always piece 1 of
"^DD",357.6,357.6,11,21,4,0)
the 0 node of the entry in the selection list. Xecuting this field will
"^DD",357.6,357.6,11,21,5,0)
result in X being killed if the value is not valid. This is used by the
"^DD",357.6,357.6,11,21,6,0)
maintanance utility, for example, to find CPT codes that have been
"^DD",357.6,357.6,11,21,7,0)
inactivated.
"^DD",357.6,357.6,11,"DT")
2950908
"^DD",357.6,357.6,12.01,0)
PCE DIM NODE^F^^12;1^K:$L(X)>30!($L(X)<1) X
"^DD",357.6,357.6,12.01,3)
What node will be used to pass the data?
"^DD",357.6,357.6,12.01,21,0)
^^1^1^2951017^^
"^DD",357.6,357.6,12.01,21,1,0)
The node used to pass the data to PCE, using the PCE DEVICE INTERFACE MODULE.
"^DD",357.6,357.6,12.01,"DT")
2951017
"^DD",357.6,357.6,12.02,0)
PCE DIM PIECE, VALUE^NJ2,0^^12;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.6,357.6,12.02,3)
What piece should be used to pass the value?
"^DD",357.6,357.6,12.02,21,0)
^^1^1^2951017^^^
"^DD",357.6,357.6,12.02,21,1,0)
The piece in the PXCA node used to pass the input value.
"^DD",357.6,357.6,12.02,"DT")
2951017
"^DD",357.6,357.6,12.03,0)
PCE DIM PIECE, NARRATIVE^NJ2,0^^12;3^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.6,357.6,12.03,3)
What piece should be used to pass the text displayed on the form?
"^DD",357.6,357.6,12.03,21,0)
^^1^1^2950317^^^
"^DD",357.6,357.6,12.03,21,1,0)
The piece in the PCXA node used to pass the text displayed on the form.
"^DD",357.6,357.6,12.03,"DT")
2951017
"^DD",357.6,357.6,12.04,0)
PCE DIM PIECE, HEADER^NJ2,0^^12;4^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.6,357.6,12.04,3)
What piece should be used to pass the header displayed on the form?
"^DD",357.6,357.6,12.04,21,0)
^^2^2^2951017^
"^DD",357.6,357.6,12.04,21,1,0)
The piece on the node specified by the PCE DIM that the header is mapped
"^DD",357.6,357.6,12.04,21,2,0)
to.
"^DD",357.6,357.6,12.04,"DT")
2951017
"^DD",357.6,357.6,12.05,0)
PCE DIM PIECE, DATA QUALIFIER^NJ2,0^^12;5^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.6,357.6,12.05,3)
What piece should be used to pass the data qualifier?
"^DD",357.6,357.6,12.05,21,0)
^^1^1^2951017^
"^DD",357.6,357.6,12.05,21,1,0)
The piece of the PXCA node where the data modifier belongs.
"^DD",357.6,357.6,12.05,"DT")
2951017
"^DD",357.6,357.6,12.06,0)
PCE DIM PIECE, QUANTITY^NJ2,0^^12;6^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.6,357.6,12.06,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",357.6,357.6,12.06,21,0)
^^2^2^2961031^^
"^DD",357.6,357.6,12.06,21,1,0)
An entry in this field indicates which piece of the array the quantity
"^DD",357.6,357.6,12.06,21,2,0)
should be passed on when sending data to PCE.
"^DD",357.6,357.6,12.06,"DT")
2961015
"^DD",357.6,357.6,13,0)
ALLOWABLE QUALIFIERS^357.613V^^13;0
"^DD",357.6,357.6,13,21,0)
^^2^2^2950928^
"^DD",357.6,357.6,13,21,1,0)
This mulitiple contains the list of qualifiers that may apply to the
"^DD",357.6,357.6,13,21,2,0)
data.
"^DD",357.6,357.6,14,0)
PCE DIM OUTPUT TRANSFORM^K^^14;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",357.6,357.6,14,3)
This should change Y, the value to be passed, to a value suitable for display.
"^DD",357.6,357.6,14,9)
@
"^DD",357.6,357.6,14,21,0)
^^3^3^2960401^^
"^DD",357.6,357.6,14,21,1,0)
This transform should set Y, the value to be passed to the PCE 
"^DD",357.6,357.6,14,21,2,0)
Device Interface Module (DIM), to a value that is suitable for
"^DD",357.6,357.6,14,21,3,0)
display. It may, for example, change an ien to a code.
"^DD",357.6,357.6,14,"DT")
2960401
"^DD",357.6,357.6,15,0)
DATA DESCRIPTION^357.615I^^15;0
"^DD",357.6,357.6,15,21,0)
^^2^2^2950330^
"^DD",357.6,357.6,15,21,1,0)
For interfaces that return records, this multiple stores information on
"^DD",357.6,357.6,15,21,2,0)
the fields, other than the first field.
"^DD",357.6,357.6,16.1,0)
ALLOW INPUT OF NARRATIVE?^S^n:NO;o:OPTIONAL;r:REQUIRED;^16;1^Q
"^DD",357.6,357.6,16.1,3)
Should the user be allowed to enter a narrative? Answer n=NO, o=OPTIONAL, r=REQUIRED
"^DD",357.6,357.6,16.1,21,0)
^^2^2^2950915^
"^DD",357.6,357.6,16.1,21,1,0)
For selection interfaces, this field determines whether a narrative is
"^DD",357.6,357.6,16.1,21,2,0)
allowed by the PCE Generic Device Interface.
"^DD",357.6,357.6,16.1,"DT")
2950421
"^DD",357.6,357.6,16.2,0)
NARRATIVE DATA TYPE^P359.1'^IBE(359.1,^16;2^Q
"^DD",357.6,357.6,16.2,3)
What data type definition describes the narrative?
"^DD",357.6,357.6,16.2,21,0)
^^2^2^2950719^
"^DD",357.6,357.6,16.2,21,1,0)
This determines, among other things, how much space to allocate for the
"^DD",357.6,357.6,16.2,21,2,0)
narrative.
"^DD",357.6,357.6,16.2,"DT")
2950426
"^DD",357.6,357.6,16.3,0)
NARRATIVE HEADER^F^^16;3^K:$L(X)>40!($L(X)<1) X
"^DD",357.6,357.6,16.3,3)
Answer must be 1-40 characters in length.
"^DD",357.6,357.6,16.3,21,0)
^^1^1^2950825^
"^DD",357.6,357.6,16.3,21,1,0)
Used to label the narrative field.
"^DD",357.6,357.6,16.3,"DT")
2950815
"^DD",357.6,357.6,16.5,0)
ALLOW INPUT OF PRIMARY VALUE?^S^n:NO;o:OPTIONAL;r:REQUIRED;^16;5^Q
"^DD",357.6,357.6,16.5,3)
Should a code be entered? n=NO, o=OPTIONAL, r=REQUIRED
"^DD",357.6,357.6,16.5,21,0)
^^2^2^2950915^
"^DD",357.6,357.6,16.5,21,1,0)
For selectin interfaces this determines whether a value, other than a
"^DD",357.6,357.6,16.5,21,2,0)
narrative, can be entered.
"^DD",357.6,357.6,16.5,"DT")
2950426
"^DD",357.6,357.6,16.6,0)
PRIMARY VALUE DATA TYPE^P359.1'^IBE(359.1,^16;6^Q
"^DD",357.6,357.6,16.6,3)
What type of data is the primary value?
"^DD",357.6,357.6,16.6,21,0)
^^2^2^2950915^
"^DD",357.6,357.6,16.6,21,1,0)
For selection interfaces this determines, among other things, the data
"^DD",357.6,357.6,16.6,21,2,0)
type of the value to be entered.
"^DD",357.6,357.6,16.6,"DT")
2950426
"^DD",357.6,357.6,16.7,0)
PRIMARY VALUE HEADER^F^^16;7^K:$L(X)>40!($L(X)<1) X
"^DD",357.6,357.6,16.7,3)
Answer must be 1-40 characters in length.
"^DD",357.6,357.6,16.7,21,0)
^^1^1^2950815^
"^DD",357.6,357.6,16.7,21,1,0)
Used to label the primary value field.
"^DD",357.6,357.6,16.7,"DT")
2950815
"^DD",357.6,357.6,16.8,0)
ALLOW MULTIPLIERS^S^1:YES;^16;8^Q
"^DD",357.6,357.6,16.8,3)
Enter yes if this interface will allow entry of quantity at form development time.
"^DD",357.6,357.6,16.8,21,0)
^^3^3^2961031^^
"^DD",357.6,357.6,16.8,21,1,0)
For selection interfaces, this determines whether 'quantity' should be
"^DD",357.6,357.6,16.8,21,2,0)
asked at form development time to pass multiple occurrences of a selection
"^DD",357.6,357.6,16.8,21,3,0)
to PCE.
"^DD",357.6,357.6,16.8,"DT")
2961008
"^DD",357.6,357.6,16.9,0)
ALLOW INPUT OF MULTIPLE CODES?^S^1:YES;^16;9^Q
"^DD",357.6,357.6,16.9,3)
Enter a 1 for 'YES'.
"^DD",357.6,357.6,16.9,21,0)
^^4^4^2961216^^^^
"^DD",357.6,357.6,16.9,21,1,0)
Enter a one in this field if the users will be allowed to add more than
"^DD",357.6,357.6,16.9,21,2,0)
one code to pass along to PCE when one entry is bubbled.
"^DD",357.6,357.6,16.9,21,3,0)
Data in this field REQUIRES that field 17 be populated with mumps code
"^DD",357.6,357.6,16.9,21,4,0)
that will allow selection of the code if the entry is edited.
"^DD",357.6,357.6,16.9,"DT")
2961021
"^DD",357.6,357.6,17,0)
SELECTOR^K^^17;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",357.6,357.6,17,3)
Enter mumps code that will allow the form designer to add a choice to a multiple choice field.
"^DD",357.6,357.6,17,9)
@
"^DD",357.6,357.6,17,21,0)
^^9^9^2951208^^^
"^DD",357.6,357.6,17,21,1,0)
This field only applies to input interfaces. It is executed as by an input
"^DD",357.6,357.6,17,21,2,0)
transform when creating a multiple choice field. It should:
"^DD",357.6,357.6,17,21,3,0)
1) Kill X if an nothing is selected, otherwise set X to a value suitable
"^DD",357.6,357.6,17,21,4,0)
for display, perhaps the code.
"^DD",357.6,357.6,17,21,5,0)
2) Set IBLABEL to a suitable label for the choice.
"^DD",357.6,357.6,17,21,6,0)
3) Set IBID to an identifier. The identifier should ideally be exportable,
"^DD",357.6,357.6,17,21,7,0)
meaning the same from site to site. This usually means a coded value
"^DD",357.6,357.6,17,21,8,0)
rather than an ien. The identfier should match that of a corresponding
"^DD",357.6,357.6,17,21,9,0)
selection interface, if there is one.
"^DD",357.6,357.6,17,"DT")
2950908
"^DD",357.6,357.6,18,0)
MANUAL DATA ENTRY ROUTINE^K^^18;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",357.6,357.6,18,3)
Enter the code to be executed during manual data entry for this interface.  This is Standard MUMPS code.
"^DD",357.6,357.6,18,9)
@
"^DD",357.6,357.6,18,21,0)
^^10^10^2951208^
"^DD",357.6,357.6,18,21,1,0)
Enter the code to be executed to do manual data entry for this interface.
"^DD",357.6,357.6,18,21,2,0)
 
"^DD",357.6,357.6,18,21,3,0)
This field should only be completed for input package interfaces.  This
"^DD",357.6,357.6,18,21,4,0)
code will be executed to provide quick data entry for a user trying to
"^DD",357.6,357.6,18,21,5,0)
input data for a form.  It is expected that the output of this field will
"^DD",357.6,357.6,18,21,6,0)
be used to format the PXCA array prior to calling PCE to file the data
"^DD",357.6,357.6,18,21,7,0)
for the encounter.
"^DD",357.6,357.6,18,21,8,0)

"^DD",357.6,357.6,18,21,9,0)
Developers writing routines for this entry should provide a roll and scroll
"^DD",357.6,357.6,18,21,10,0)
interface for manaul entry of items only on the form.
"^DD",357.6,357.6,18,"DT")
2951208
"^DD",357.6,357.6,19,0)
EXTERNAL DISPLAY VALUES^K^^19;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",357.6,357.6,19,3)
This is Standard MUMPS code.
"^DD",357.6,357.6,19,9)
@
"^DD",357.6,357.6,19,21,0)
^^5^5^2960228^^^^
"^DD",357.6,357.6,19,21,1,0)
Executable code used to translate the internal value that is to
"^DD",357.6,357.6,19,21,2,0)
be passed to PCE into its external value for display purposes.  It
"^DD",357.6,357.6,19,21,3,0)
is used by the data validation routines to display the external
"^DD",357.6,357.6,19,21,4,0)
values and descriptions of what is to be passed, to the
"^DD",357.6,357.6,19,21,5,0)
user for verification.
"^DD",357.6,357.6,19,"DT")
2960214
"^DD",357.6,357.6,20,0)
PASS DQ AS VALUE^S^1:YES;^20;1^Q
"^DD",357.6,357.6,20,3)
Enter Yes if the Data Qualifier should be passed as the Value when sending data to PCE.
"^DD",357.6,357.6,20,21,0)
^^7^7^2961031^^
"^DD",357.6,357.6,20,21,1,0)
If the value of the Data Qualifier shall be passed to PCE as the VALUE,
"^DD",357.6,357.6,20,21,2,0)
this field should be set to one.  Doing so will prevent the data in the
"^DD",357.6,357.6,20,21,3,0)
VALUE from populating the PCE DIM NODE, but instead, will allow the Data
"^DD",357.6,357.6,20,21,4,0)
Qualifier to pass as the VALUE.
"^DD",357.6,357.6,20,21,5,0)
This is used mostly for YES/NO Data Qualifiers, where the value may
"^DD",357.6,357.6,20,21,6,0)
be a question, and the Data Qualifier Value, if bubbled, is the value
"^DD",357.6,357.6,20,21,7,0)
that must be placed on the PCE DIM NODE.
"^DD",357.6,357.6,20,"DT")
2961001
"^DD",357.6,357.6,21,0)
PCE DIM PIECE, VARIABLE VALUE^K^^21;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",357.6,357.6,21,3)
This is Standard MUMPS code.
"^DD",357.6,357.6,21,9)
@
"^DD",357.6,357.6,21,21,0)
^^7^7^2961031^^^
"^DD",357.6,357.6,21,21,1,0)
This field should be populated when the PCE DIM PIECE VALUE is not
"^DD",357.6,357.6,21,21,2,0)
constant.  If the value of that field is dependent upon specific conditions,
"^DD",357.6,357.6,21,21,3,0)
those conditions may be evaluated by placing the MUMPS code in this
"^DD",357.6,357.6,21,21,4,0)
field.  Ultimately, the code should return a value that will be used as
"^DD",357.6,357.6,21,21,5,0)
the PCE DIM PIECE VALUE.  If the return value is null, the original
"^DD",357.6,357.6,21,21,6,0)
PCE DIM PIECE VALUE field will be used to determine the piece location
"^DD",357.6,357.6,21,21,7,0)
to pass the VALUE on.
"^DD",357.6,357.6,21,"DT")
2961001
"^DD",357.6,357.61,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",357.6,357.61,0,"DT")
2921119
"^DD",357.6,357.61,0,"NM","DESCRIPTION")

"^DD",357.6,357.61,0,"UP")
357.6
"^DD",357.6,357.61,.01,0)
/6^W^^0;1^Q
"^DD",357.6,357.61,.01,3)
Enter a description of the data being exchanged.
"^DD",357.6,357.61,.01,21,0)
^^1^1^2950719^^
"^DD",357.6,357.61,.01,21,1,0)
This should describe the data being exchanged b the package interface.
"^DD",357.6,357.61,.01,"DT")
2930210
"^DD",357.6,357.613,0)
ALLOWABLE QUALIFIERS SUB-FIELD^^.01^6
"^DD",357.6,357.613,0,"DT")
2950810
"^DD",357.6,357.613,0,"IX","B",357.613,.01)

"^DD",357.6,357.613,0,"NM","ALLOWABLE QUALIFIERS")

"^DD",357.6,357.613,0,"UP")
357.6
"^DD",357.6,357.613,.01,0)
ALLOWABLE QUALIFIERS^MV^^0;1^Q
"^DD",357.6,357.613,.01,1,0)
^.1
"^DD",357.6,357.613,.01,1,1,0)
357.613^B
"^DD",357.6,357.613,.01,1,1,1)
S ^IBE(357.6,DA(1),13,"B",$E(X,1,30),DA)=""
"^DD",357.6,357.613,.01,1,1,2)
K ^IBE(357.6,DA(1),13,"B",$E(X,1,30),DA)
"^DD",357.6,357.613,.01,1,1,3)
Required Index for Variable Pointer
"^DD",357.6,357.613,.01,3)
Which qualifiers can apply to the data?
"^DD",357.6,357.613,.01,21,0)
^^1^1^2950814^^
"^DD",357.6,357.613,.01,21,1,0)
A qualifier that can be used by this package interface.
"^DD",357.6,357.613,.01,"DT")
2950426
"^DD",357.6,357.613,.01,"V",0)
^.12P^2^2
"^DD",357.6,357.613,.01,"V",1,0)
357.98^DATA QUALIFIER^1^Q^n^n
"^DD",357.6,357.613,.01,"V",2,0)
359.1^TYPE OF DATA^2^D^n^n
"^DD",357.6,357.613,.03,0)
INDEPENDENT MAPPING INFO?^RS^0:NO;1:YES;^0;3^Q
"^DD",357.6,357.613,.03,3)
YES means that fields on the form associated with this qualifier will have its own rules for entering the data to the database.
"^DD",357.6,357.613,.03,21,0)
^^1^1^2951017^
"^DD",357.6,357.613,.03,21,1,0)
YES means that data can be mapped into the PCE DIM based on the qualifier.
"^DD",357.6,357.613,.03,"DT")
2950426
"^DD",357.6,357.613,.04,0)
PCE DIM NODE^F^^0;4^K:$L(X)>30!($L(X)<1) X
"^DD",357.6,357.613,.04,3)
What node should the qualifier be placed on?
"^DD",357.6,357.613,.04,21,0)
^^1^1^2951017^^
"^DD",357.6,357.613,.04,21,1,0)
The node where the data should be placed.
"^DD",357.6,357.613,.04,"DT")
2951017
"^DD",357.6,357.613,.05,0)
PCE DIM PIECE, VALUE^NJ2,0^^0;5^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.6,357.613,.05,3)
What piece should the primary value be located?
"^DD",357.6,357.613,.05,21,0)
^^1^1^2950719^
"^DD",357.6,357.613,.05,21,1,0)
The piece on the node where the value should be placed.
"^DD",357.6,357.613,.05,"DT")
2951017
"^DD",357.6,357.613,.07,0)
PCE DIM PIECE, HEADER^NJ2,0^^0;7^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.6,357.613,.07,3)
What piece should the header be located on?
"^DD",357.6,357.613,.07,21,0)
^^1^1^2951017^^
"^DD",357.6,357.613,.07,21,1,0)
The piece on the node where the associated header should be placed.
"^DD",357.6,357.613,.07,"DT")
2951017
"^DD",357.6,357.613,.08,0)
PCE DIM PIECE, QUALIFIER^NJ2,0^^0;8^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.6,357.613,.08,3)
What piece should the qualifier be located on?
"^DD",357.6,357.613,.08,21,0)
^^1^1^2950719^
"^DD",357.6,357.613,.08,21,1,0)
The piece where the qualifier should go.
"^DD",357.6,357.613,.08,"DT")
2951017
"^DD",357.6,357.615,0)
DATA DESCRIPTION SUB-FIELD^^.05^5
"^DD",357.6,357.615,0,"DT")
2950417
"^DD",357.6,357.615,0,"ID","WRITE")
D EN^DDIOL("   PIECE="_$P(^(0),U,3),"","?0")
"^DD",357.6,357.615,0,"IX","B",357.615,.01)

"^DD",357.6,357.615,0,"IX","C",357.615,.03)

"^DD",357.6,357.615,0,"NM","DATA DESCRIPTION")

"^DD",357.6,357.615,0,"UP")
357.6
"^DD",357.6,357.615,.01,0)
DATA^MF^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",357.6,357.615,.01,1,0)
^.1
"^DD",357.6,357.615,.01,1,1,0)
357.615^B
"^DD",357.6,357.615,.01,1,1,1)
S ^IBE(357.6,DA(1),15,"B",$E(X,1,30),DA)=""
"^DD",357.6,357.615,.01,1,1,2)
K ^IBE(357.6,DA(1),15,"B",$E(X,1,30),DA)
"^DD",357.6,357.615,.01,3)
Enter a descriptive name for this data field, up to 30 characters.
"^DD",357.6,357.615,.01,21,0)
^^1^1^2960730^^
"^DD",357.6,357.615,.01,21,1,0)
A descriptive name for the data.
"^DD",357.6,357.615,.01,"DT")
2950320
"^DD",357.6,357.615,.02,0)
MAXIMUM LENGTH^RNJ3,0^^0;2^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.6,357.615,.02,3)
What is the maximum length of this field?
"^DD",357.6,357.615,.02,21,0)
^^1^1^2950719^
"^DD",357.6,357.615,.02,21,1,0)
The maximum length of the data.
"^DD",357.6,357.615,.02,"DT")
2950320
"^DD",357.6,357.615,.03,0)
PIECE^NJ1,0X^^0;3^K:+X'=X!(X>8)!(X<2)!(X?.E1"."1N.N)!($D(^IBE(357.6,D0,15,"C",X))) X
"^DD",357.6,357.615,.03,1,0)
^.1
"^DD",357.6,357.615,.03,1,1,0)
357.615^C
"^DD",357.6,357.615,.03,1,1,1)
S ^IBE(357.6,DA(1),15,"C",$E(X,1,30),DA)=""
"^DD",357.6,357.615,.03,1,1,2)
K ^IBE(357.6,DA(1),15,"C",$E(X,1,30),DA)
"^DD",357.6,357.615,.03,1,1,"%D",0)
^^1^1^2950320^
"^DD",357.6,357.615,.03,1,1,"%D",1,0)
Indexes the field by piece.
"^DD",357.6,357.615,.03,1,1,"DT")
2950320
"^DD",357.6,357.615,.03,3)
In the returned record, which piece will this field be?
"^DD",357.6,357.615,.03,21,0)
^^2^2^2950918^^
"^DD",357.6,357.615,.03,21,1,0)
The piece that the data will be returned as. Doesn't allow
"^DD",357.6,357.615,.03,21,2,0)
piece 1 because that is stored in field #2.01.
"^DD",357.6,357.615,.03,"DT")
2950407
"^DD",357.6,357.615,.04,0)
ANNEX NODE^F^^0;4^K:$L(X)>10!($L(X)<1) X
"^DD",357.6,357.615,.04,3)
You can optionally specify the subscript to store the data. Use this when the entire record won't fit on one node.
"^DD",357.6,357.615,.04,21,0)
^^2^2^2950719^
"^DD",357.6,357.615,.04,21,1,0)
In case all the returned data can not be returned on a single node an
"^DD",357.6,357.615,.04,21,2,0)
annex node can be specified.
"^DD",357.6,357.615,.04,"DT")
2950320
"^DD",357.6,357.615,.05,0)
RECOMMENDED HEADER^F^^0;5^K:$L(X)>40!($L(X)<1) X
"^DD",357.6,357.615,.05,3)
Answer must be 1-40 characters in length.
"^DD",357.6,357.615,.05,21,0)
^^1^1^2950719^^
"^DD",357.6,357.615,.05,21,1,0)
The recommended header will be used as the default when designing a form.
"^DD",357.6,357.615,.05,"DT")
2950417
"^DD",357.6,357.66,0)
PROTECTED LOCAL VARIABLES SUB-FIELD^^.01^1
"^DD",357.6,357.66,0,"DT")
2930608
"^DD",357.6,357.66,0,"IX","B",357.66,.01)

"^DD",357.6,357.66,0,"NM","PROTECTED LOCAL VARIABLES")

"^DD",357.6,357.66,0,"UP")
357.6
"^DD",357.6,357.66,.01,0)
PROTECTED LOCAL VARIABLES^MFX^^0;1^K:'$$VARIABLE^IBDFU5(X) X
"^DD",357.6,357.66,.01,1,0)
^.1
"^DD",357.6,357.66,.01,1,1,0)
357.66^B
"^DD",357.6,357.66,.01,1,1,1)
S ^IBE(357.6,DA(1),6,"B",$E(X,1,30),DA)=""
"^DD",357.6,357.66,.01,1,1,2)
K ^IBE(357.6,DA(1),6,"B",$E(X,1,30),DA)
"^DD",357.6,357.66,.01,3)
Enter variables that should be NEWED before the entry action or calling the interface.
"^DD",357.6,357.66,.01,21,0)
^^3^3^2950426^^
"^DD",357.6,357.66,.01,21,1,0)
 
"^DD",357.6,357.66,.01,21,2,0)
A list of variables that should be newed before the entry action or
"^DD",357.6,357.66,.01,21,3,0)
calling the interface.
"^DD",357.6,357.66,.01,"DT")
2930608
"^DD",357.6,357.67,0)
REQUIRED LOCAL VARIABLES SUB-FIELD^^.01^1
"^DD",357.6,357.67,0,"DT")
2930521
"^DD",357.6,357.67,0,"IX","B",357.67,.01)

"^DD",357.6,357.67,0,"NM","REQUIRED LOCAL VARIABLES")

"^DD",357.6,357.67,0,"UP")
357.6
"^DD",357.6,357.67,.01,0)
REQUIRED LOCAL VARIABLE^MFX^^0;1^K:'$$VARIABLE^IBDFU5(X) X
"^DD",357.6,357.67,.01,1,0)
^.1
"^DD",357.6,357.67,.01,1,1,0)
357.67^B
"^DD",357.6,357.67,.01,1,1,1)
S ^IBE(357.6,DA(1),7,"B",$E(X,1,30),DA)=""
"^DD",357.6,357.67,.01,1,1,2)
K ^IBE(357.6,DA(1),7,"B",$E(X,1,30),DA)
"^DD",357.6,357.67,.01,3)
Enter any variables that must exist before the Package Interface routine is called.
"^DD",357.6,357.67,.01,21,0)
^^4^4^2930528^
"^DD",357.6,357.67,.01,21,1,0)
 
"^DD",357.6,357.67,.01,21,2,0)
A variable that is required input to the interface routine. The interface
"^DD",357.6,357.67,.01,21,3,0)
routine will not be called if all of the required variables are not
"^DD",357.6,357.67,.01,21,4,0)
defined.
"^DD",357.6,357.67,.01,"DT")
2930521
"^DD",357.69,357.69,0)
FIELD^^.05^6
"^DD",357.69,357.69,0,"DDA")
N
"^DD",357.69,357.69,0,"DT")
2941026
"^DD",357.69,357.69,0,"ID",.02)

"^DD",357.69,357.69,0,"ID",.03)

"^DD",357.69,357.69,0,"ID","WRITE")
D EN^DDIOL("    "_$P(^(0),U,3),"","?0")
"^DD",357.69,357.69,0,"IX","B",357.69,.01)

"^DD",357.69,357.69,0,"NM","TYPE OF VISIT")

"^DD",357.69,357.69,0,"VRPK")
PCE PATIENT CARE ENCOUNTER
"^DD",357.69,357.69,.01,0)
CODE^R*P81'X^ICPT(^0;1^S DIC("S")="I '$P(^(0),U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X S:$D(X) DINUM=X
"^DD",357.69,357.69,.01,1,0)
^.1
"^DD",357.69,357.69,.01,1,1,0)
357.69^B
"^DD",357.69,357.69,.01,1,1,1)
S ^IBE(357.69,"B",$E(X,1,30),DA)=""
"^DD",357.69,357.69,.01,1,1,2)
K ^IBE(357.69,"B",$E(X,1,30),DA)
"^DD",357.69,357.69,.01,3)
Enter the name of the code
"^DD",357.69,357.69,.01,12)
Only Active Evaluation and Management CPT codes between 99200 and 99499 are selectable.
"^DD",357.69,357.69,.01,12.1)
S DIC("S")="I '$P(^(0),U,4)"
"^DD",357.69,357.69,.01,21,0)
^^2^2^2950328^^
"^DD",357.69,357.69,.01,21,1,0)
Enter the Type of Visit CPT code.  These currently all begin with 992.
"^DD",357.69,357.69,.01,21,2,0)
This is sometimes refered to as the Level of Care CPT.
"^DD",357.69,357.69,.01,"DT")
2950629
"^DD",357.69,357.69,.015,0)
SHORT NAME^CJ30^^ ; ^X ^DD(357.69,.015,9.2) S Y(357.69,.015,101)=$S($D(^ICPT(D0,0)):^(0),1:"") S X=$P(Y(357.69,.015,101),U,2) S D0=Y(357.69,.015,80)
"^DD",357.69,357.69,.015,9)
^
"^DD",357.69,357.69,.015,9.01)
81^2;357.69^.01
"^DD",357.69,357.69,.015,9.1)
CODE:SHORT NAME
"^DD",357.69,357.69,.015,9.2)
S Y(357.69,.015,80)=$S($D(D0):D0,1:""),Y(357.69,.015,1)=$S($D(^IBE(357.69,D0,0)):^(0),1:""),D0=$P(Y(357.69,.015,1),U,1) S:'$D(^ICPT(+D0,0)) D0=-1
"^DD",357.69,357.69,.015,21,0)
^^1^1^2941014^
"^DD",357.69,357.69,.015,21,1,0)
This field displays the SHORT NAME of the Visit CPT stored in the CPT file.
"^DD",357.69,357.69,.02,0)
RECOMMENDED HEADER^F^^0;2^K:$L(X)>30!($L(X)<3) X
"^DD",357.69,357.69,.02,3)
Answer must be 3-30 characters in length.
"^DD",357.69,357.69,.02,21,0)
^^1^1^2950721^
"^DD",357.69,357.69,.02,21,1,0)
The header recommended for use when designing a form.
"^DD",357.69,357.69,.02,"DT")
2941014
"^DD",357.69,357.69,.03,0)
RECOMMENDED TEXT^F^^0;3^K:$L(X)>40!($L(X)<3) X
"^DD",357.69,357.69,.03,3)
Answer must be 3-40 characters in length.
"^DD",357.69,357.69,.03,21,0)
^^1^1^2950721^
"^DD",357.69,357.69,.03,21,1,0)
The text that is recommended for use on a form when using this code.
"^DD",357.69,357.69,.03,"DT")
2941014
"^DD",357.69,357.69,.04,0)
INACTIVE FLAG^S^1:YES;^0;4^Q
"^DD",357.69,357.69,.04,3)
Set this flag when the code should no longer be used for type of visit.
"^DD",357.69,357.69,.04,21,0)
^^2^2^2950721^
"^DD",357.69,357.69,.04,21,1,0)
This field should be set to '1' when the code should no longer be used.
"^DD",357.69,357.69,.04,21,2,0)
Codes should not be deleted from this file.
"^DD",357.69,357.69,.04,"DT")
2941026
"^DD",357.69,357.69,.05,0)
NEW,ESTABLISHED,CONSULT^S^1:NEW;2:ESTABLISHED;3:CONSULT;9:OTHER;^0;5^Q
"^DD",357.69,357.69,.05,3)
Enter the grouping for type of patient encounter
"^DD",357.69,357.69,.05,21,0)
^^5^5^2960514^
"^DD",357.69,357.69,.05,21,1,0)
This field will be used to group encounter types for summary report
"^DD",357.69,357.69,.05,21,2,0)
purposes. All Type of visit records which relate to NEW, ESTABLISHED or
"^DD",357.69,357.69,.05,21,3,0)
CONSULT encounters, whether the encounter was In-Office, In-Home, Eye
"^DD",357.69,357.69,.05,21,4,0)
Care, Preventive, Domicilliary etc. in nature, will be grouped as NEW,
"^DD",357.69,357.69,.05,21,5,0)
ESTABLISHED or CONSULT.
"^DD",357.69,357.69,.05,"DT")
2960514
"^DD",357.7,357.7,0)
FIELD^^.08^8
"^DD",357.7,357.7,0,"DT")
2941207
"^DD",357.7,357.7,0,"ID",.02)
W " STARTING COL=",$P(^(0),U,2)+1
"^DD",357.7,357.7,0,"ID",.03)
W " STARTING ROW=",$P(^(0),U,3)+1
"^DD",357.7,357.7,0,"ID",.06)
W ""
"^DD",357.7,357.7,0,"IX","B",357.7,.01)

"^DD",357.7,357.7,0,"IX","C",357.7,.06)

"^DD",357.7,357.7,0,"NM","FORM LINE")

"^DD",357.7,357.7,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",357.7,357.7,.01,1,0)
^.1
"^DD",357.7,357.7,.01,1,1,0)
357.7^B
"^DD",357.7,357.7,.01,1,1,1)
S ^IBE(357.7,"B",$E(X,1,30),DA)=""
"^DD",357.7,357.7,.01,1,1,2)
K ^IBE(357.7,"B",$E(X,1,30),DA)
"^DD",357.7,357.7,.01,3)
Enter a name for the line that will allow it to be identified, such as V(1,1), meaning a vertical line starting at coordinates (1,1).
"^DD",357.7,357.7,.01,21,0)
^^4^4^2940217^
"^DD",357.7,357.7,.01,21,1,0)
 
"^DD",357.7,357.7,.01,21,2,0)
The name given to the line. Lines should be given names that will allow
"^DD",357.7,357.7,.01,21,3,0)
them to be identified, such as V(1,1), meaning a vertical line starting at
"^DD",357.7,357.7,.01,21,4,0)
coordinates (1,1).
"^DD",357.7,357.7,.01,"DT")
2940217
"^DD",357.7,357.7,.02,0)
LINE STARTING COLUMN^RNJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.7,357.7,.02,2)
S Y(0)=Y S:+Y=Y Y=+Y+1
"^DD",357.7,357.7,.02,2.1)
S:+Y=Y Y=+Y+1
"^DD",357.7,357.7,.02,3)
Enter the block column the line should begin at.
"^DD",357.7,357.7,.02,21,0)
^^2^2^2930527^
"^DD",357.7,357.7,.02,21,1,0)
 
"^DD",357.7,357.7,.02,21,2,0)
The column, relative to the block, that the line should begin at.
"^DD",357.7,357.7,.02,23,0)
^^4^4^2930715^
"^DD",357.7,357.7,.02,23,1,0)
The internal representation starts at 0, the external representation
"^DD",357.7,357.7,.02,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",357.7,357.7,.02,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",357.7,357.7,.02,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",357.7,357.7,.02,"DT")
2930715
"^DD",357.7,357.7,.03,0)
LINE STARTING ROW^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.7,357.7,.03,2)
S Y(0)=Y S:+Y=Y Y=+Y+1
"^DD",357.7,357.7,.03,2.1)
S:+Y=Y Y=+Y+1
"^DD",357.7,357.7,.03,3)
Enter the block row the line should begin at.
"^DD",357.7,357.7,.03,21,0)
^^2^2^2930527^
"^DD",357.7,357.7,.03,21,1,0)
 
"^DD",357.7,357.7,.03,21,2,0)
The row, relative to the block, that the line should begin at.
"^DD",357.7,357.7,.03,23,0)
^^4^4^2930715^
"^DD",357.7,357.7,.03,23,1,0)
The internal representation starts at 0, the external representation
"^DD",357.7,357.7,.03,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",357.7,357.7,.03,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",357.7,357.7,.03,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",357.7,357.7,.03,"DT")
2930715
"^DD",357.7,357.7,.04,0)
ORIENTATION^RS^H:HORIZONTAL;V:VERTICAL;^0;4^Q
"^DD",357.7,357.7,.04,.1)
ORIENTATION (HORIZONTAL/VERTICAL)
"^DD",357.7,357.7,.04,3)
Should the line be horizontal or vertical?
"^DD",357.7,357.7,.04,21,0)
^^2^2^2930607^
"^DD",357.7,357.7,.04,21,1,0)
 
"^DD",357.7,357.7,.04,21,2,0)
The direction the line goes in.
"^DD",357.7,357.7,.04,"DT")
2930415
"^DD",357.7,357.7,.05,0)
LENGTH^RNJ3,0^^0;5^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.7,357.7,.05,3)
How long should the line be?
"^DD",357.7,357.7,.05,21,0)
^^3^3^2930527^
"^DD",357.7,357.7,.05,21,1,0)
 
"^DD",357.7,357.7,.05,21,2,0)
The length of the line. For horizontal lines the length is in terms of
"^DD",357.7,357.7,.05,21,3,0)
characters. For vertical lines it is in terms of rows.
"^DD",357.7,357.7,.05,"DT")
2930319
"^DD",357.7,357.7,.06,0)
BLOCK^RP357.1'^IBE(357.1,^0;6^Q
"^DD",357.7,357.7,.06,1,0)
^.1
"^DD",357.7,357.7,.06,1,1,0)
357.7^C
"^DD",357.7,357.7,.06,1,1,1)
S ^IBE(357.7,"C",$E(X,1,30),DA)=""
"^DD",357.7,357.7,.06,1,1,2)
K ^IBE(357.7,"C",$E(X,1,30),DA)
"^DD",357.7,357.7,.06,1,1,"%D",0)
^^2^2^2930319^
"^DD",357.7,357.7,.06,1,1,"%D",1,0)
 
"^DD",357.7,357.7,.06,1,1,"%D",2,0)
This cross-reference is used to find all lines belonging to a block.
"^DD",357.7,357.7,.06,1,1,"DT")
2930319
"^DD",357.7,357.7,.06,3)
What block should the line appear in?
"^DD",357.7,357.7,.06,4)

"^DD",357.7,357.7,.06,21,0)
^^2^2^2950927^^^^
"^DD",357.7,357.7,.06,21,1,0)
 
"^DD",357.7,357.7,.06,21,2,0)
The block the line appears in.
"^DD",357.7,357.7,.06,"DT")
2930319
"^DD",357.7,357.7,.07,0)
NUMBER OF LINES^NJ3,0^^0;7^K:+X'=X!(X>100)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.7,357.7,.07,3)
Type a Number between 1 and 100, 0 Decimal Digits
"^DD",357.7,357.7,.07,"DT")
2941207
"^DD",357.7,357.7,.08,0)
LINE SPACING^S^s:SINGLE;d:DOUBLE;t:TRIPLE;^0;8^Q
"^DD",357.7,357.7,.08,3)
How should the lines be spaced?
"^DD",357.7,357.7,.08,"DT")
2941207
"^DD",357.8,357.8,0)
FIELD^^1^7
"^DD",357.8,357.8,0,"DDA")
N
"^DD",357.8,357.8,0,"DT")
2930326
"^DD",357.8,357.8,0,"IX","B",357.8,.01)

"^DD",357.8,357.8,0,"IX","C",357.8,.02)

"^DD",357.8,357.8,0,"NM","TEXT AREA")

"^DD",357.8,357.8,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",357.8,357.8,.01,1,0)
^.1
"^DD",357.8,357.8,.01,1,1,0)
357.8^B
"^DD",357.8,357.8,.01,1,1,1)
S ^IBE(357.8,"B",$E(X,1,30),DA)=""
"^DD",357.8,357.8,.01,1,1,2)
K ^IBE(357.8,"B",$E(X,1,30),DA)
"^DD",357.8,357.8,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",357.8,357.8,.01,21,0)
^^2^2^2930528^
"^DD",357.8,357.8,.01,21,1,0)
 
"^DD",357.8,357.8,.01,21,2,0)
The name of the text area.
"^DD",357.8,357.8,.02,0)
BLOCK^RP357.1'^IBE(357.1,^0;2^Q
"^DD",357.8,357.8,.02,1,0)
^.1
"^DD",357.8,357.8,.02,1,1,0)
357.8^C
"^DD",357.8,357.8,.02,1,1,1)
S ^IBE(357.8,"C",$E(X,1,30),DA)=""
"^DD",357.8,357.8,.02,1,1,2)
K ^IBE(357.8,"C",$E(X,1,30),DA)
"^DD",357.8,357.8,.02,1,1,"%D",0)
^^3^3^2930326^
"^DD",357.8,357.8,.02,1,1,"%D",1,0)
 
"^DD",357.8,357.8,.02,1,1,"%D",2,0)
Used to find all of the text areas that should appear on a particular
"^DD",357.8,357.8,.02,1,1,"%D",3,0)
block.
"^DD",357.8,357.8,.02,1,1,"DT")
2930326
"^DD",357.8,357.8,.02,3)
What block do you want the text to appear in?
"^DD",357.8,357.8,.02,21,0)
^^2^2^2930528^
"^DD",357.8,357.8,.02,21,1,0)
 
"^DD",357.8,357.8,.02,21,2,0)
The block the text area is displayed in.
"^DD",357.8,357.8,.02,"DT")
2930326
"^DD",357.8,357.8,.03,0)
TEXT AREA STARTING COLUMN^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.8,357.8,.03,2)
S Y(0)=Y S:+Y=Y Y=+Y+1
"^DD",357.8,357.8,.03,2.1)
S:+Y=Y Y=+Y+1
"^DD",357.8,357.8,.03,3)
What block column should the text begin in?
"^DD",357.8,357.8,.03,21,0)
^^2^2^2930528^
"^DD",357.8,357.8,.03,21,1,0)
 
"^DD",357.8,357.8,.03,21,2,0)
The starting position of the text area, relative to the block.
"^DD",357.8,357.8,.03,23,0)
^^4^4^2930715^
"^DD",357.8,357.8,.03,23,1,0)
The internal representation starts at 0, the external representation
"^DD",357.8,357.8,.03,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",357.8,357.8,.03,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",357.8,357.8,.03,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",357.8,357.8,.03,"DT")
2930715
"^DD",357.8,357.8,.04,0)
TEXT AREA STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.8,357.8,.04,2)
S Y(0)=Y S:+Y=Y Y=+Y+1
"^DD",357.8,357.8,.04,2.1)
S:+Y=Y Y=+Y+1
"^DD",357.8,357.8,.04,3)
What block row should the text begin in?
"^DD",357.8,357.8,.04,21,0)
^^2^2^2930528^
"^DD",357.8,357.8,.04,21,1,0)
 
"^DD",357.8,357.8,.04,21,2,0)
The starting row of the text area, relative to the block.
"^DD",357.8,357.8,.04,23,0)
^^4^4^2930715^
"^DD",357.8,357.8,.04,23,1,0)
The internal representation starts at 0, the external representation
"^DD",357.8,357.8,.04,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",357.8,357.8,.04,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",357.8,357.8,.04,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",357.8,357.8,.04,"DT")
2930715
"^DD",357.8,357.8,.05,0)
TEXT WIDTH^RNJ3,0^^0;5^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.8,357.8,.05,3)
How many columns should be allocated on the block for the text?
"^DD",357.8,357.8,.05,21,0)
^^2^2^2930528^
"^DD",357.8,357.8,.05,21,1,0)
 
"^DD",357.8,357.8,.05,21,2,0)
The width of the text area, measured in characters.
"^DD",357.8,357.8,.05,"DT")
2930326
"^DD",357.8,357.8,.06,0)
TEXT HEIGHT^RNJ3,0^^0;6^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.8,357.8,.06,3)
How many lines on the block should be allocated for the text?
"^DD",357.8,357.8,.06,21,0)
^^2^2^2930528^
"^DD",357.8,357.8,.06,21,1,0)
 
"^DD",357.8,357.8,.06,21,2,0)
The height of the text area, measured in lines.
"^DD",357.8,357.8,.06,"DT")
2930326
"^DD",357.8,357.8,1,0)
TEXT^357.81^^1;0
"^DD",357.8,357.8,1,21,0)
^^2^2^2930528^
"^DD",357.8,357.8,1,21,1,0)
 
"^DD",357.8,357.8,1,21,2,0)
The text that should appear within the text area.
"^DD",357.8,357.81,0)
TEXT SUB-FIELD^^.01^1
"^DD",357.8,357.81,0,"DT")
2930326
"^DD",357.8,357.81,0,"NM","TEXT")

"^DD",357.8,357.81,0,"UP")
357.8
"^DD",357.8,357.81,.01,0)
TEXT^WL^^0;1^Q
"^DD",357.8,357.81,.01,3)
Enter the text that you want to appear in the block.
"^DD",357.8,357.81,.01,"DT")
2930326
"^DD",357.91,357.91,0)
FIELD^^.04^4
"^DD",357.91,357.91,0,"DDA")
N
"^DD",357.91,357.91,0,"DT")
2940607
"^DD",357.91,357.91,0,"IX","B",357.91,.01)

"^DD",357.91,357.91,0,"NM","MARKING AREA TYPE")

"^DD",357.91,357.91,0,"PT",357.22,.06)

"^DD",357.91,357.91,.01,0)
NAME^RFX^^0;1^K:$L(X)>30 X
"^DD",357.91,357.91,.01,1,0)
^.1
"^DD",357.91,357.91,.01,1,1,0)
357.91^B
"^DD",357.91,357.91,.01,1,1,1)
S ^IBE(357.91,"B",$E(X,1,30),DA)=""
"^DD",357.91,357.91,.01,1,1,2)
K ^IBE(357.91,"B",$E(X,1,30),DA)
"^DD",357.91,357.91,.01,3)
NAME MUST BE UNDER 31 CHARACTERS
"^DD",357.91,357.91,.01,21,0)
^^1^1^2930608^
"^DD",357.91,357.91,.01,21,1,0)
The name should describe the appearance of the marking area on the form.
"^DD",357.91,357.91,.02,0)
DISPLAY STRING^F^^0;2^K:$L(X)>20!($L(X)<1) X
"^DD",357.91,357.91,.02,3)
Answer must be 1-20 characters in length.
"^DD",357.91,357.91,.02,21,0)
^^2^2^2930528^
"^DD",357.91,357.91,.02,21,1,0)
 
"^DD",357.91,357.91,.02,21,2,0)
The text that should be displayed in the MARKING AREA.
"^DD",357.91,357.91,.02,"DT")
2921207
"^DD",357.91,357.91,.03,0)
TOOL KIT MEMBER?^S^0:NO;1:YES;^0;3^Q
"^DD",357.91,357.91,.03,3)
Enter YES if the MARKING AREA is part of the tool kit, NO otherwise.
"^DD",357.91,357.91,.03,21,0)
^^2^2^2930811^
"^DD",357.91,357.91,.03,21,1,0)
Used to prevent local sites from editing MARKING AREAS that are part of the
"^DD",357.91,357.91,.03,21,2,0)
tool kit.
"^DD",357.91,357.91,.03,"DT")
2930811
"^DD",357.91,357.91,.04,0)
REQUIRES SPECIAL PROCEDURE?^S^0:NO;1:YES;^0;4^Q
"^DD",357.91,357.91,.04,3)
Answer NO if the Marking Area is just text, YES if it requires a special procedure to print.
"^DD",357.91,357.91,.04,21,0)
^^2^2^2940628^^
"^DD",357.91,357.91,.04,21,1,0)
NO means that the Marking Area is just text that can be printed. YES means
"^DD",357.91,357.91,.04,21,2,0)
that a special procedure must be called to print the Marking Area.
"^DD",357.91,357.91,.04,"DT")
2940628
"^DD",357.92,357.92,0)
FIELD^^.01^1
"^DD",357.92,357.92,0,"DT")
2930518
"^DD",357.92,357.92,0,"IX","B",357.92,.01)

"^DD",357.92,357.92,0,"NM","PRINT CONDITIONS")

"^DD",357.92,357.92,0,"PT",409.9501,.02)

"^DD",357.92,357.92,0,"PT",409.961,.02)

"^DD",357.92,357.92,.01,0)
PRINT CONDITION^RF^^0;1^K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
"^DD",357.92,357.92,.01,1,0)
^.1
"^DD",357.92,357.92,.01,1,1,0)
357.92^B
"^DD",357.92,357.92,.01,1,1,1)
S ^IBE(357.92,"B",$E(X,1,30),DA)=""
"^DD",357.92,357.92,.01,1,1,2)
K ^IBE(357.92,"B",$E(X,1,30),DA)
"^DD",357.92,357.92,.01,3)
Answer must be 3-40 characters in length.
"^DD",357.92,357.92,.01,21,0)
^^2^2^2930528^
"^DD",357.92,357.92,.01,21,1,0)
 
"^DD",357.92,357.92,.01,21,2,0)
A condition recognized by the Print Manager.
"^DD",357.92,357.92,.01,"DT")
2930518
"^DD",357.93,357.93,0)
FIELD^^1^9
"^DD",357.93,357.93,0,"DDA")
N
"^DD",357.93,357.93,0,"DT")
2950822
"^DD",357.93,357.93,0,"IX","B",357.93,.01)

"^DD",357.93,357.93,0,"IX","C",357.93,.08)

"^DD",357.93,357.93,0,"NM","MULTIPLE CHOICE FIELD")

"^DD",357.93,357.93,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",357.93,357.93,.01,1,0)
^.1
"^DD",357.93,357.93,.01,1,1,0)
357.93^B
"^DD",357.93,357.93,.01,1,1,1)
S ^IBE(357.93,"B",$E(X,1,30),DA)=""
"^DD",357.93,357.93,.01,1,1,2)
K ^IBE(357.93,"B",$E(X,1,30),DA)
"^DD",357.93,357.93,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",357.93,357.93,.01,21,0)
^^2^2^2951017^
"^DD",357.93,357.93,.01,21,1,0)
 
"^DD",357.93,357.93,.01,21,2,0)
The name given to the field.
"^DD",357.93,357.93,.01,"DT")
2930518
"^DD",357.93,357.93,.02,0)
QUESTION OR EXPLANATION ^F^^0;2^K:$L(X)>150!($L(X)<1) X
"^DD",357.93,357.93,.02,.1)
YOU CAN ENTER TEXT, SUCH AS A QUESTION, TO APPEAR ON THE FORM
"^DD",357.93,357.93,.02,3)
You may enter text, such as a question, to appear as part of the input field.
"^DD",357.93,357.93,.02,21,0)
^^1^1^2950808^
"^DD",357.93,357.93,.02,21,1,0)
Text that precedes the list of choices.
"^DD",357.93,357.93,.02,"DT")
2940721
"^DD",357.93,357.93,.03,0)
STARTING COLUMN FOR TEXT^NJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.93,357.93,.03,2)
S Y(0)=Y S Y=+Y+1
"^DD",357.93,357.93,.03,2.1)
S Y=+Y+1
"^DD",357.93,357.93,.03,3)
What block column should the label begin in?
"^DD",357.93,357.93,.03,21,0)
^^1^1^2950808^
"^DD",357.93,357.93,.03,21,1,0)
The starting column for the text located in the .03 field.
"^DD",357.93,357.93,.03,"DT")
2940721
"^DD",357.93,357.93,.04,0)
STARTING ROW FOR TEXT^NJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.93,357.93,.04,2)
S Y(0)=Y S Y=+Y+1
"^DD",357.93,357.93,.04,2.1)
S Y=+Y+1
"^DD",357.93,357.93,.04,3)
What block row should the label start in?
"^DD",357.93,357.93,.04,21,0)
^^1^1^2950808^
"^DD",357.93,357.93,.04,21,1,0)
The row for the text in the .03 field.
"^DD",357.93,357.93,.04,"DT")
2940721
"^DD",357.93,357.93,.06,0)
TYPE OF DATA^R*P357.6'X^IBE(357.6,^0;6^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""M""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",357.93,357.93,.06,.1)
WHAT TYPE OF DATA WILL BE ENTERED TO THIS FIELD?
"^DD",357.93,357.93,.06,3)
What type of data will be entered to the field?
"^DD",357.93,357.93,.06,12)
Allows only available input interfaces that are defined as allowable for multiple choices form objects.
"^DD",357.93,357.93,.06,12.1)
S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""M"""
"^DD",357.93,357.93,.06,21,0)
^^1^1^2950825^
"^DD",357.93,357.93,.06,21,1,0)
Points to the package interface used to input the data.
"^DD",357.93,357.93,.06,"DT")
2950829
"^DD",357.93,357.93,.07,0)
TEXT APPEARANCE^FX^^0;7^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBR"'[$E(X,1))!("UBR"'[$E(X,2))!("UBR"'[$E(X,3)) X
"^DD",357.93,357.93,.07,.1)
HOW SHOULD THE TEXT APPEAR? CHOOSE FROM {U,B,R}
"^DD",357.93,357.93,.07,3)
B=bold,U=underline,R=reverse You can enter any combination of {B,U,R}.
"^DD",357.93,357.93,.07,21,0)
^^2^2^2950808^
"^DD",357.93,357.93,.07,21,1,0)
The display appearance of the text in the .03 field can be selected via
"^DD",357.93,357.93,.07,21,2,0)
this field.
"^DD",357.93,357.93,.07,"DT")
2940816
"^DD",357.93,357.93,.08,0)
BLOCK^RP357.1'^IBE(357.1,^0;8^Q
"^DD",357.93,357.93,.08,1,0)
^.1
"^DD",357.93,357.93,.08,1,1,0)
357.93^C
"^DD",357.93,357.93,.08,1,1,1)
S ^IBE(357.93,"C",$E(X,1,30),DA)=""
"^DD",357.93,357.93,.08,1,1,2)
K ^IBE(357.93,"C",$E(X,1,30),DA)
"^DD",357.93,357.93,.08,1,1,"%D",0)
^^1^1^2950804^
"^DD",357.93,357.93,.08,1,1,"%D",1,0)
Used to find all the multiple choice fields appearing in a block.
"^DD",357.93,357.93,.08,1,1,"DT")
2940720
"^DD",357.93,357.93,.08,3)
What block should this input field appear in?
"^DD",357.93,357.93,.08,"DT")
2940720
"^DD",357.93,357.93,.09,0)
SELECTION RULE^S^0:ANY NUMBER;1:EXACTLY ONE;2:AT MOST ONE (0 or 1);3:AT LEAST ONE (1 or more);^0;9^Q
"^DD",357.93,357.93,.09,3)
Which rule applies to the choices the user can make?
"^DD",357.93,357.93,.09,21,0)
^^1^1^2950808^
"^DD",357.93,357.93,.09,21,1,0)
A selection rule for the multiple choice question can be specified.
"^DD",357.93,357.93,.09,"DT")
2941209
"^DD",357.93,357.93,1,0)
CHOICE^357.931I^^1;0
"^DD",357.93,357.93,1,12)
Allows only package interfaces that print reports and that are available.
"^DD",357.93,357.93,1,12.1)
S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
"^DD",357.93,357.93,1,21,0)
^^1^1^2950908^^
"^DD",357.93,357.93,1,21,1,0)
The list of choices that make up the multiple choice field. 
"^DD",357.93,357.93,1,"DT")
2940721
"^DD",357.93,357.931,0)
CHOICE SUB-FIELD^^.09^9
"^DD",357.93,357.931,0,"DT")
2950822
"^DD",357.93,357.931,0,"ID","WRITE")
N IBDWLAB,IBDWQLFR S IBDWLAB="LABEL="_$P(^(0),U,5),IBDWQLFR="" S:$P(^(0),U,9) IBDWQLFR=$P($G(^IBD(357.98,$P(^(0),U,9),0)),U) D EN^DDIOL(IBDWLAB_"     "_IBDWQLFR,"","?0")
"^DD",357.93,357.931,0,"IX","B",357.931,.01)

"^DD",357.93,357.931,0,"NM","CHOICE")

"^DD",357.93,357.931,0,"UP")
357.93
"^DD",357.93,357.931,.01,0)
CHOICE^MRFX^^0;1^D CHOICE^IBDFU91($P(^IBE(357.93,D0,0),U,6),.X)
"^DD",357.93,357.931,.01,.1)

"^DD",357.93,357.931,.01,1,0)
^.1^^-1
"^DD",357.93,357.931,.01,1,1,0)
357.931^B
"^DD",357.93,357.931,.01,1,1,1)
S ^IBE(357.93,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",357.93,357.931,.01,1,1,2)
K ^IBE(357.93,DA(1),1,"B",$E(X,1,30),DA)
"^DD",357.93,357.931,.01,3)
What value should be passed to the database when this choice is made?
"^DD",357.93,357.931,.01,4)
D HELP^IBDFU91($P(^IBE(357.93,DA,0),U,6))
"^DD",357.93,357.931,.01,21,0)
^^5^5^2950908^^
"^DD",357.93,357.931,.01,21,1,0)
 
"^DD",357.93,357.931,.01,21,2,0)
 
"^DD",357.93,357.931,.01,21,3,0)
Should be a value representing a choice that could be made. This field is
"^DD",357.93,357.931,.01,21,4,0)
for the external representation of the value, which could be different
"^DD",357.93,357.931,.01,21,5,0)
from the representation that is actually passed to the database.
"^DD",357.93,357.931,.01,"DT")
2950911
"^DD",357.93,357.931,.02,0)
STARTING COLUMN FOR LABEL^RNJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.93,357.931,.02,1,0)
^.1^^0
"^DD",357.93,357.931,.02,2)
S Y(0)=Y S Y=+Y+1
"^DD",357.93,357.931,.02,2.1)
S Y=+Y+1
"^DD",357.93,357.931,.02,3)
What block column should the label begin in?
"^DD",357.93,357.931,.02,4)
D HELP6^IBDFU5A
"^DD",357.93,357.931,.02,21,0)
^^2^2^2950821^^^^
"^DD",357.93,357.931,.02,21,1,0)
 
"^DD",357.93,357.931,.02,21,2,0)
The starting column for the label. 
"^DD",357.93,357.931,.02,"DT")
2950822
"^DD",357.93,357.931,.03,0)
STARTING ROW FOR LABEL^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.93,357.931,.03,2)
S Y(0)=Y S Y=+Y+1
"^DD",357.93,357.931,.03,2.1)
S Y=+Y+1
"^DD",357.93,357.931,.03,3)
What block row should the label be in?
"^DD",357.93,357.931,.03,21,0)
^^1^1^2950821^^
"^DD",357.93,357.931,.03,21,1,0)
The starting row the the label.
"^DD",357.93,357.931,.03,"DT")
2950821
"^DD",357.93,357.931,.04,0)
LABEL APPEARANCE^FX^^0;4^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBR"'[$E(X,1))!("UBR"'[$E(X,2))!("UBR"'[$E(X,3)) X
"^DD",357.93,357.931,.04,.1)
HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {U,B,R}
"^DD",357.93,357.931,.04,3)
B=bold,U=underline,R=reverse. You can enter any combination of {B,U,R}. (NOT REQUIRED)
"^DD",357.93,357.931,.04,21,0)
^^1^1^2950821^^^
"^DD",357.93,357.931,.04,21,1,0)
The appearance of the label can be specified.
"^DD",357.93,357.931,.04,"DT")
2950821
"^DD",357.93,357.931,.05,0)
CHOICE LABEL^RF^^0;5^K:$L(X)>120!($L(X)<1) X
"^DD",357.93,357.931,.05,3)
Answer must be 1-120 characters in length.
"^DD",357.93,357.931,.05,21,0)
^^1^1^2960118^^^^
"^DD",357.93,357.931,.05,21,1,0)
The label that is to appear with the choice.
"^DD",357.93,357.931,.05,"DT")
2950821
"^DD",357.93,357.931,.06,0)
BUBBLE COLUMN^RNJ3,0XO^^0;6^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.93,357.931,.06,2)
S Y(0)=Y S Y=+Y+1
"^DD",357.93,357.931,.06,2.1)
S Y=+Y+1
"^DD",357.93,357.931,.06,3)
What block column should the bubble begin in?
"^DD",357.93,357.931,.06,21,0)
^^2^2^2950808^
"^DD",357.93,357.931,.06,21,1,0)
The starting row for the bubble associated with the choice can be
"^DD",357.93,357.931,.06,21,2,0)
specified.
"^DD",357.93,357.931,.06,"DT")
2950808
"^DD",357.93,357.931,.07,0)
BUBBLE ROW^RNJ3,0XO^^0;7^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.93,357.931,.07,2)
S Y(0)=Y S Y=+Y+1
"^DD",357.93,357.931,.07,2.1)
S Y=+Y+1
"^DD",357.93,357.931,.07,3)
What block row should the bubble be in?
"^DD",357.93,357.931,.07,21,0)
^^1^1^2950808^
"^DD",357.93,357.931,.07,21,1,0)
The row for the bubble associated with the choice can be specified.
"^DD",357.93,357.931,.07,"DT")
2950808
"^DD",357.93,357.931,.08,0)
ID^RFXO^^0;8^S X=X
"^DD",357.93,357.931,.08,2)
S Y(0)=Y S Y=Y
"^DD",357.93,357.931,.08,2.1)
S Y=Y
"^DD",357.93,357.931,.08,3)
Enter the identifier for the choice.
"^DD",357.93,357.931,.08,4)

"^DD",357.93,357.931,.08,21,0)
^^1^1^2950908^^^^
"^DD",357.93,357.931,.08,21,1,0)
The identifier for the choice made.
"^DD",357.93,357.931,.08,"DT")
2950908
"^DD",357.93,357.931,.09,0)
DATA QUALIFIER^*P357.98'^IBD(357.98,^0;9^S DIC("S")="I $$DQGOOD^IBDFU9($P($G(^IBE(357.93,DA(1),0)),""^"",6),Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",357.93,357.931,.09,3)
Does one of the qualifers apply to this choice?
"^DD",357.93,357.931,.09,12)
Allows only certain data qualifiers, dependent on the type of data.
"^DD",357.93,357.931,.09,12.1)
S DIC("S")="I $$DQGOOD^IBDFU9($P($G(^IBE(357.93,DA(1),0)),""^"",6),Y)"
"^DD",357.93,357.931,.09,21,0)
^^1^1^2950809^^
"^DD",357.93,357.931,.09,21,1,0)
The data qualifier, if any, assoicated with the choice.
"^DD",357.93,357.931,.09,"DT")
2941207
"^DD",357.94,357.94,0)
FIELD^^.07^7
"^DD",357.94,357.94,0,"DDA")
N
"^DD",357.94,357.94,0,"DT")
2970410
"^DD",357.94,357.94,0,"IX","B",357.94,.01)

"^DD",357.94,357.94,0,"NM","ENCOUNTER FORM PRINTERS")

"^DD",357.94,357.94,.01,0)
TERMINAL TYPE^RP3.2'^%ZIS(2,^0;1^Q
"^DD",357.94,357.94,.01,1,0)
^.1
"^DD",357.94,357.94,.01,1,1,0)
357.94^B
"^DD",357.94,357.94,.01,1,1,1)
S ^IBE(357.94,"B",$E(X,1,30),DA)=""
"^DD",357.94,357.94,.01,1,1,2)
K ^IBE(357.94,"B",$E(X,1,30),DA)
"^DD",357.94,357.94,.01,3)
What type of terminal is the printer?
"^DD",357.94,357.94,.01,21,0)
^^6^6^2960229^^^^
"^DD",357.94,357.94,.01,21,1,0)
Enter the terminal type that you'd like to define for encounter forms.
"^DD",357.94,357.94,.01,21,2,0)
You can enter a printer control language, simplex and duplex printer
"^DD",357.94,357.94,.01,21,3,0)
escape sequences.  Currently only PCL5 is supported for scannable 
"^DD",357.94,357.94,.01,21,4,0)
encounter forms.  Simplex and Duplex printing is supported on all printers
"^DD",357.94,357.94,.01,21,5,0)
that have duplex printing ability.  Generally all HP printers (HP3 and 
"^DD",357.94,357.94,.01,21,6,0)
above) support PCL5.
"^DD",357.94,357.94,.01,"DT")
2940627
"^DD",357.94,357.94,.02,0)
PRINTER LANGUAGE TYPE^S^1:PCL5;^0;2^Q
"^DD",357.94,357.94,.02,1,0)
^.1
"^DD",357.94,357.94,.02,1,1,0)
^^TRIGGER^357.94^.03
"^DD",357.94,357.94,.02,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBE(357.94,D0,0)):^(0),1:"") S X=$P(Y(1),U,3)="" I X S X=DIV S Y(1)=$S($D(^IBE(357.94,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X="$C(27)_""&l0S""" X ^DD(357.94,.02,1,1,1.4)
"^DD",357.94,357.94,.02,1,1,1.4)
S DIH=$S($D(^IBE(357.94,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,3)=DIV,DIH=357.94,DIG=.03 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",357.94,357.94,.02,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(357.94,.02,1,1,79.2) S X=X="" I X S X=DIV S Y(1)=$S($D(^IBE(357.94,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(357.94,.02,1,1,2.4)
"^DD",357.94,357.94,.02,1,1,2.4)
S DIH=$S($D(^IBE(357.94,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,3)=DIV,DIH=357.94,DIG=.03 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",357.94,357.94,.02,1,1,79.2)
S Y(2)=$C(59)_$S($D(^DD(357.94,.02,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^IBE(357.94,D0,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,2)_":",2),$C(59),1)
"^DD",357.94,357.94,.02,1,1,"%D",0)
^^1^1^2970314^
"^DD",357.94,357.94,.02,1,1,"%D",1,0)
This trigger will set the correct Simplex code for PCL5 printers.
"^DD",357.94,357.94,.02,1,1,"CREATE CONDITION")
#.03=""
"^DD",357.94,357.94,.02,1,1,"CREATE VALUE")
S X="$C(27)_""&l0S"""
"^DD",357.94,357.94,.02,1,1,"DELETE CONDITION")
#.02=""
"^DD",357.94,357.94,.02,1,1,"DELETE VALUE")
@
"^DD",357.94,357.94,.02,1,1,"DT")
2970314
"^DD",357.94,357.94,.02,1,1,"FIELD")
#.03
"^DD",357.94,357.94,.02,1,2,0)
^^TRIGGER^357.94^.04
"^DD",357.94,357.94,.02,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBE(357.94,D0,0)):^(0),1:"") S X=$P(Y(1),U,4)="" I X S X=DIV S Y(1)=$S($D(^IBE(357.94,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X="$C(27)_""&l1S""" X ^DD(357.94,.02,1,2,1.4)
"^DD",357.94,357.94,.02,1,2,1.4)
S DIH=$S($D(^IBE(357.94,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=357.94,DIG=.04 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",357.94,357.94,.02,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(357.94,.02,1,2,79.2) S X=X="" I X S X=DIV S Y(1)=$S($D(^IBE(357.94,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(357.94,.02,1,2,2.4)
"^DD",357.94,357.94,.02,1,2,2.4)
S DIH=$S($D(^IBE(357.94,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=357.94,DIG=.04 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",357.94,357.94,.02,1,2,79.2)
S Y(2)=$C(59)_$S($D(^DD(357.94,.02,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^IBE(357.94,D0,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,2)_":",2),$C(59),1)
"^DD",357.94,357.94,.02,1,2,"%D",0)
^^2^2^2970314^
"^DD",357.94,357.94,.02,1,2,"%D",1,0)
This trigger will set the correct Duplex, Long Edge Binding code for 
"^DD",357.94,357.94,.02,1,2,"%D",2,0)
PCL5 printers.
"^DD",357.94,357.94,.02,1,2,"CREATE CONDITION")
#.04=""
"^DD",357.94,357.94,.02,1,2,"CREATE VALUE")
S X="$C(27)_""&l1S"""
"^DD",357.94,357.94,.02,1,2,"DELETE CONDITION")
#.02=""
"^DD",357.94,357.94,.02,1,2,"DELETE VALUE")
@
"^DD",357.94,357.94,.02,1,2,"DT")
2970314
"^DD",357.94,357.94,.02,1,2,"FIELD")
#.04
"^DD",357.94,357.94,.02,1,3,0)
^^TRIGGER^357.94^.05
"^DD",357.94,357.94,.02,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBE(357.94,D0,0)):^(0),1:"") S X=$P(Y(1),U,5)="" I X S X=DIV S Y(1)=$S($D(^IBE(357.94,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV S X="$C(27)_""&l2S""" X ^DD(357.94,.02,1,3,1.4)
"^DD",357.94,357.94,.02,1,3,1.4)
S DIH=$S($D(^IBE(357.94,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=357.94,DIG=.05 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",357.94,357.94,.02,1,3,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(357.94,.02,1,3,79.2) S X=X="" I X S X=DIV S Y(1)=$S($D(^IBE(357.94,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(357.94,.02,1,3,2.4)
"^DD",357.94,357.94,.02,1,3,2.4)
S DIH=$S($D(^IBE(357.94,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=357.94,DIG=.05 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",357.94,357.94,.02,1,3,79.2)
S Y(2)=$C(59)_$S($D(^DD(357.94,.02,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^IBE(357.94,D0,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,2)_":",2),$C(59),1)
"^DD",357.94,357.94,.02,1,3,"%D",0)
^^3^3^2970314^
"^DD",357.94,357.94,.02,1,3,"%D",1,0)
This trigger will set the correct Duplex, Short Edge Binding code for 
"^DD",357.94,357.94,.02,1,3,"%D",2,0)
PCL5 printers.
"^DD",357.94,357.94,.02,1,3,"%D",3,0)

"^DD",357.94,357.94,.02,1,3,"CREATE CONDITION")
#.05=""
"^DD",357.94,357.94,.02,1,3,"CREATE VALUE")
S X="$C(27)_""&l2S"""
"^DD",357.94,357.94,.02,1,3,"DELETE CONDITION")
#.02=""
"^DD",357.94,357.94,.02,1,3,"DELETE VALUE")
@
"^DD",357.94,357.94,.02,1,3,"DT")
2970314
"^DD",357.94,357.94,.02,1,3,"FIELD")
#.05
"^DD",357.94,357.94,.02,21,0)
^^5^5^2960229^^
"^DD",357.94,357.94,.02,21,1,0)
Enter the printer control language that this terminal type supports for
"^DD",357.94,357.94,.02,21,2,0)
printing scannable encounter forms.  Currently only PCL5 is supported.
"^DD",357.94,357.94,.02,21,3,0)
 
"^DD",357.94,357.94,.02,21,4,0)
If this terminal type supports PCL5 then enter PCL5, otherwise this should
"^DD",357.94,357.94,.02,21,5,0)
be left blank.  Generally all HP printers (HP3 and above) support PCL5.
"^DD",357.94,357.94,.02,"DT")
2970314
"^DD",357.94,357.94,.03,0)
SIMPLEX^FX^^0;3^D CHECK^%ZISS1 K:$L(X)>50!($L(X)<2) X
"^DD",357.94,357.94,.03,3)
Enter the printer language statement that will set the printer to simplex printing.
"^DD",357.94,357.94,.03,5,1,0)
357.94^.02^1
"^DD",357.94,357.94,.03,21,0)
^^4^4^2960229^^
"^DD",357.94,357.94,.03,21,1,0)
This is the code used to put this printer into Simplex mode (one sided
"^DD",357.94,357.94,.03,21,2,0)
print).  For PCL5 printers this generally is $C(27)_"&l0S".  Be careful
"^DD",357.94,357.94,.03,21,3,0)
when typing this in, the character sequence is: Escape, ampersand, lower
"^DD",357.94,357.94,.03,21,4,0)
case L, numeral zero, capital S.
"^DD",357.94,357.94,.03,"DT")
2950927
"^DD",357.94,357.94,.04,0)
DUPLEX, LONG-EDGE BINDING^FX^^0;4^D CHECK^%ZISS1 K:$L(X)>50!($L(X)<2) X
"^DD",357.94,357.94,.04,3)
Enter the printer language statement that will set the printer to duplex printing for long-edge binding.
"^DD",357.94,357.94,.04,5,1,0)
357.94^.02^2
"^DD",357.94,357.94,.04,21,0)
^^6^6^2960229^
"^DD",357.94,357.94,.04,21,1,0)
This is the code used to put this printer into Duplex mode, long
"^DD",357.94,357.94,.04,21,2,0)
Edge Binding (two sided printing, like you'd use in a binder).  For 
"^DD",357.94,357.94,.04,21,3,0)
PCL5 printers this generally is $C(27)_"&l1S".  Be careful
"^DD",357.94,357.94,.04,21,4,0)
when typing this in, the character sequence is: Escape, ampersand, lower
"^DD",357.94,357.94,.04,21,5,0)
case L, numeral 1, capital S.
"^DD",357.94,357.94,.04,21,6,0)

"^DD",357.94,357.94,.04,"DT")
2950927
"^DD",357.94,357.94,.05,0)
DUPLEX, SHORT-EDGE BINDING^FX^^0;5^D CHECK^%ZISS1 K:$L(X)>50!($L(X)<2) X
"^DD",357.94,357.94,.05,3)
Enter the printer language statement that will set the printer to duplex printing for short-edge binding.
"^DD",357.94,357.94,.05,5,1,0)
357.94^.02^3
"^DD",357.94,357.94,.05,21,0)
^^6^6^2970410^^^
"^DD",357.94,357.94,.05,21,1,0)
This is the code used to put this printer into Duplex mode, short
"^DD",357.94,357.94,.05,21,2,0)
Edge Binding (two sided printing, like you'd use in a patient chart).
"^DD",357.94,357.94,.05,21,3,0)
For PCL5 printers this generally is $C(27)_"&l2S".  Be careful
"^DD",357.94,357.94,.05,21,4,0)
when typing this in, the character sequence is: Escape, ampersand, lower
"^DD",357.94,357.94,.05,21,5,0)
case L, numeral 2, capital S.                                            
"^DD",357.94,357.94,.05,21,6,0)

"^DD",357.94,357.94,.05,"DT")
2950927
"^DD",357.94,357.94,.06,0)
TCP PRINTER^S^1:YES;^0;6^Q
"^DD",357.94,357.94,.06,21,0)
^^11^11^2970314^^
"^DD",357.94,357.94,.06,21,1,0)
Enter 'Yes' if this is a TCP printer terminal type such as P-REMOTE.  
"^DD",357.94,357.94,.06,21,2,0)

"^DD",357.94,357.94,.06,21,3,0)
Currently the duplex printing of Encounter Forms does not work correctly
"^DD",357.94,357.94,.06,21,4,0)
when sent to a TCP printer using a Jet Direct card.  The problem is that
"^DD",357.94,357.94,.06,21,5,0)
at the end of the first page the printer appears to overflow causing a form
"^DD",357.94,357.94,.06,21,6,0)
feed.  The subsequent form feed then causes the back of the page to be
"^DD",357.94,357.94,.06,21,7,0)
blank and the beginning of page 2 to start on a new page.  While this issue
"^DD",357.94,357.94,.06,21,8,0)
is actively being reseached at the time of release of AICS v3 it has not 
"^DD",357.94,357.94,.06,21,9,0)
been resolved.  As a work around, entering a 'Yes' at this prompt will
"^DD",357.94,357.94,.06,21,10,0)
suppress the form feeds at the end of the page.  Limited testing has shown 
"^DD",357.94,357.94,.06,21,11,0)
this to be effective in producing duplex encounter forms.
"^DD",357.94,357.94,.06,23,0)
^^4^4^2970314^^
"^DD",357.94,357.94,.06,23,1,0)
The variable IBDEVICE("TCP") is set in routine IBDFUA based on the value of
"^DD",357.94,357.94,.06,23,2,0)
this field.  Routine IBDF2F uses this variable to determine if form feeds 
"^DD",357.94,357.94,.06,23,3,0)
should be sent at the end of a page.  This field should not be added the
"^DD",357.94,357.94,.06,23,4,0)
edit option until it has been tested in a high volume test at a VAMC.
"^DD",357.94,357.94,.06,"DT")
2970303
"^DD",357.94,357.94,.07,0)
RESET EXECUTE CODE^FX^^0;7^D CHECK^%ZISS1 K:$L(X)>60!($L(X)<3) X
"^DD",357.94,357.94,.07,3)
Enter the printer control code you want sent to the printer immediately after reset. Answer must be 3-60 characters in length.
"^DD",357.94,357.94,.07,21,0)
^^4^4^2970410^^
"^DD",357.94,357.94,.07,21,1,0)
Enter the printer code that you would like sent to the printer immediately
"^DD",357.94,357.94,.07,21,2,0)
after a reset is sent when using PCL5 to print encounter forms.  This is
"^DD",357.94,357.94,.07,21,3,0)
primarily intended to support changes to which bin the paper should be
"^DD",357.94,357.94,.07,21,4,0)
sent to.
"^DD",357.94,357.94,.07,"DT")
2970410
"^DD",357.95,357.95,0)
FIELD^^.21^21
"^DD",357.95,357.95,0,"DDA")
N
"^DD",357.95,357.95,0,"DIK")
IBDX95
"^DD",357.95,357.95,0,"DIKOLD")
IBDX95
"^DD",357.95,357.95,0,"DT")
2961021
"^DD",357.95,357.95,0,"ID",.03)
W "   Source: ",@("$P($P($C(59)_$S($D(^DD(357.95,.03,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,3)_"":"",2),$C(59),1)")
"^DD",357.95,357.95,0,"ID",.2)
W "    Created: ",$E($P(^(0),U,20),4,5)_"-"_$E($P(^(0),U,20),6,7)_"-"_$E($P(^(0),U,20),2,3)
"^DD",357.95,357.95,0,"ID",.21)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(357,+$P(^(0),U,21),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(357,.01,0),U,2) D Y^DIQ:Y]"" W "   Form: ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",357.95,357.95,0,"IX","AC",357.951,.01)

"^DD",357.95,357.95,0,"IX","AC1",357.951,.02)

"^DD",357.95,357.95,0,"IX","AD",357.952,.01)

"^DD",357.95,357.95,0,"IX","AD1",357.952,.02)

"^DD",357.95,357.95,0,"IX","ADEL",357.95,.02)

"^DD",357.95,357.95,0,"IX","AE",357.951,.03)

"^DD",357.95,357.95,0,"IX","AE1",357.951,.1)

"^DD",357.95,357.95,0,"IX","AE2",357.951,.04)

"^DD",357.95,357.95,0,"IX","AFC",357.9501,.01)

"^DD",357.95,357.95,0,"IX","B",357.95,.01)

"^DD",357.95,357.95,0,"IX","C",357.95,.03)

"^DD",357.95,357.95,0,"IX","D",357.95,13)

"^DD",357.95,357.95,0,"NM","FORM DEFINITION")

"^DD",357.95,357.95,0,"PT",357.96,.04)

"^DD",357.95,357.95,.01,0)
FORM TYPE ID^RNJ9,0X^^0;1^K X
"^DD",357.95,357.95,.01,1,0)
^.1^^-1
"^DD",357.95,357.95,.01,1,1,0)
357.95^B
"^DD",357.95,357.95,.01,1,1,1)
S ^IBD(357.95,"B",$E(X,1,30),DA)=""
"^DD",357.95,357.95,.01,1,1,2)
K ^IBD(357.95,"B",$E(X,1,30),DA)
"^DD",357.95,357.95,.01,3)
Can not be entered through FileMan!
"^DD",357.95,357.95,.01,21,0)
^^2^2^2941019^^
"^DD",357.95,357.95,.01,21,1,0)
This number should be unique for the encounter form type. It equals the
"^DD",357.95,357.95,.01,21,2,0)
ien. Editing the form results in a new FORM TYPE ID being assigned.
"^DD",357.95,357.95,.01,"DT")
2951218
"^DD",357.95,357.95,.02,0)
DATE MARKED FOR DELETION^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",357.95,357.95,.02,1,0)
^.1
"^DD",357.95,357.95,.02,1,1,0)
357.95^ADEL
"^DD",357.95,357.95,.02,1,1,1)
S ^IBD(357.95,"ADEL",$E(X,1,30),DA)=""
"^DD",357.95,357.95,.02,1,1,2)
K ^IBD(357.95,"ADEL",$E(X,1,30),DA)
"^DD",357.95,357.95,.02,1,1,"%D",0)
^^2^2^2951004^
"^DD",357.95,357.95,.02,1,1,"%D",1,0)
Regular cross reference of file.  Used to find entries marked for deletion
"^DD",357.95,357.95,.02,1,1,"%D",2,0)
by purge utility
"^DD",357.95,357.95,.02,1,1,"DT")
2951004
"^DD",357.95,357.95,.02,3)
Enter the date the form was deleted or edited.
"^DD",357.95,357.95,.02,21,0)
^^2^2^2941215^^
"^DD",357.95,357.95,.02,21,1,0)
The date is when the form was deleted or edited. When the last printed
"^DD",357.95,357.95,.02,21,2,0)
form is accounted for the entry can be deleted.
"^DD",357.95,357.95,.02,"DT")
2951004
"^DD",357.95,357.95,.03,0)
SOURCE^RS^1:AICS;2:PANDAS;3:TELEFORM;4:PEN;99:OTHER;^0;3^Q
"^DD",357.95,357.95,.03,1,0)
^.1
"^DD",357.95,357.95,.03,1,1,0)
357.95^C
"^DD",357.95,357.95,.03,1,1,1)
S ^IBD(357.95,"C",$E(X,1,30),DA)=""
"^DD",357.95,357.95,.03,1,1,2)
K ^IBD(357.95,"C",$E(X,1,30),DA)
"^DD",357.95,357.95,.03,1,1,"%D",0)
^^2^2^2950928^
"^DD",357.95,357.95,.03,1,1,"%D",1,0)
Used to determine if the form type provided to Form Tracking was
"^DD",357.95,357.95,.03,1,1,"%D",2,0)
externally assigned.
"^DD",357.95,357.95,.03,1,1,"DT")
2941017
"^DD",357.95,357.95,.03,3)
What software will produce the form?
"^DD",357.95,357.95,.03,21,0)
^^1^1^2951218^^
"^DD",357.95,357.95,.03,21,1,0)
The software that produced the form.
"^DD",357.95,357.95,.03,"DT")
2951218
"^DD",357.95,357.95,.09,0)
RIGHT MARGIN^NJ3,0X^^0;9^K:+X'=X!(X>133)!(X<80)!(X?.E1"."1N.N) X
"^DD",357.95,357.95,.09,3)
Type a Number between 80 and 133, 0 Decimal Digits
"^DD",357.95,357.95,.09,21,0)
^^1^1^2950803^
"^DD",357.95,357.95,.09,21,1,0)
The width of the form in characters.
"^DD",357.95,357.95,.09,"DT")
2950919
"^DD",357.95,357.95,.1,0)
PAGE LENGTH^RNJ3,0^^0;10^K:+X'=X!(X>300)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.95,357.95,.1,3)
Type a Number between 1 and 300, 0 Decimal Digits
"^DD",357.95,357.95,.1,21,0)
^^1^1^2950803^
"^DD",357.95,357.95,.1,21,1,0)
The length of the page.
"^DD",357.95,357.95,.1,"DT")
2940823
"^DD",357.95,357.95,.11,0)
NUMBER OF PAGES^RNJ2,0^^0;11^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.95,357.95,.11,3)
How many pages should the encounter form have?
"^DD",357.95,357.95,.11,21,0)
^^1^1^2951122^
"^DD",357.95,357.95,.11,21,1,0)
The encounter form may have multiple pages.
"^DD",357.95,357.95,.11,"DT")
2951122
"^DD",357.95,357.95,.12,0)
SCANNABLE?^S^0:NO;1:YES;^0;12^Q
"^DD",357.95,357.95,.12,3)
Answer YES if the form will be scanned to accomplish data entry, NO otherwise.
"^DD",357.95,357.95,.12,"DT")
2951122
"^DD",357.95,357.95,.13,0)
FORM TYPE ID^NJ9,0^^0;13^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.95,357.95,.13,3)
Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",357.95,357.95,.13,"DT")
2951122
"^DD",357.95,357.95,.14,0)
PAPER SIZE^S^1:LETTER (8 1/2 x 11);^0;14^Q
"^DD",357.95,357.95,.14,3)
What size paper should be used?
"^DD",357.95,357.95,.14,"DT")
2951122
"^DD",357.95,357.95,.15,0)
ORIENTATION^S^p:PORTRAIT;^0;15^Q
"^DD",357.95,357.95,.15,3)
How should the form be oriented?
"^DD",357.95,357.95,.15,"DT")
2951122
"^DD",357.95,357.95,.16,0)
TEXT SIZE^RS^1:133 COLUMNS x 80 LINES;2:96 COLUMNS x 72 LINES;3:80 COLUMNS x 60 LINES;^0;16^Q
"^DD",357.95,357.95,.16,3)
This choice will determine the size of the print and how much text will fit on the form.
"^DD",357.95,357.95,.16,"DT")
2951122
"^DD",357.95,357.95,.17,0)
VERSION^NJ5,2^^0;17^K:+X'=X!(X>99)!(X<0)!(X?.E1"."3N.N) X
"^DD",357.95,357.95,.17,3)
Type a Number between 0 and 99, 2 Decimal Digits
"^DD",357.95,357.95,.17,"DT")
2951122
"^DD",357.95,357.95,.2,0)
DATE CREATED^D^^0;20^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",357.95,357.95,.2,9)
^
"^DD",357.95,357.95,.2,21,0)
^^2^2^2951218^
"^DD",357.95,357.95,.2,21,1,0)
This is the date that this entry was created.  It is triggered when the
"^DD",357.95,357.95,.2,21,2,0)
entry is added.
"^DD",357.95,357.95,.2,"DT")
2951218
"^DD",357.95,357.95,.21,0)
FORM NAME^P357^IBE(357,^0;21^Q
"^DD",357.95,357.95,.21,3)

"^DD",357.95,357.95,.21,9)
^
"^DD",357.95,357.95,.21,21,0)
^^3^3^2970225^^^^
"^DD",357.95,357.95,.21,21,1,0)
This is the name of the form when this entry was created.  It is triggered
"^DD",357.95,357.95,.21,21,2,0)
when the entry is created.
"^DD",357.95,357.95,.21,21,3,0)

"^DD",357.95,357.95,.21,23,0)
^^1^1^2970225^^^
"^DD",357.95,357.95,.21,23,1,0)
This field is hard set when the entry is created.  See routine IBDFM1.
"^DD",357.95,357.95,.21,"DT")
2951218
"^DD",357.95,357.95,1,0)
BUBBLES^357.951I^^1;0
"^DD",357.95,357.95,1,21,0)
^^1^1^2960906^^^^
"^DD",357.95,357.95,1,21,1,0)
The list of bubbles appearing on the form.
"^DD",357.95,357.95,1,23,0)
^^1^1^2960906^^^^
"^DD",357.95,357.95,1,23,1,0)
 
"^DD",357.95,357.95,1,"DT")
2941020
"^DD",357.95,357.95,2,0)
HAND PRINT FIELDS^357.952^^2;0
"^DD",357.95,357.95,3,0)
PAGE INFORMATION^357.953^^3;0
"^DD",357.95,357.95,3,21,0)
^^2^2^2950808^^
"^DD",357.95,357.95,3,21,1,0)
A list of the pages of a form that requires documentation
"^DD",357.95,357.95,3,21,2,0)
of specific features.
"^DD",357.95,357.95,3,"DT")
2950306
"^DD",357.95,357.95,10,0)
CLINICS USING THIS FORM^357.9501P^^10;0
"^DD",357.95,357.95,10,21,0)
^^2^2^2950808^^
"^DD",357.95,357.95,10,21,1,0)
These are the clinics that use this form
"^DD",357.95,357.95,10,21,2,0)
 
"^DD",357.95,357.95,10,23,0)
^^1^1^2950808^^
"^DD",357.95,357.95,10,23,1,0)
This field specifically added for PANDAS.
"^DD",357.95,357.95,11,0)
PANDAS HEADERS^357.9511^^11;0
"^DD",357.95,357.95,11,21,0)
^^1^1^2950803^
"^DD",357.95,357.95,11,21,1,0)
A list of headers used by PANDAS.
"^DD",357.95,357.95,11,23,0)
^^1^1^2950803^
"^DD",357.95,357.95,11,23,1,0)
This field was requested by the PANDAS project.
"^DD",357.95,357.95,12.01,0)
PANDAS TIMESTAMP^D^^12;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",357.95,357.95,12.01,3)
When was the Pandas form last modified?
"^DD",357.95,357.95,12.01,21,0)
^^1^1^2950803^
"^DD",357.95,357.95,12.01,21,1,0)
The date and time the PANDAS form was last modified.
"^DD",357.95,357.95,12.01,23,0)
^^1^1^2950803^
"^DD",357.95,357.95,12.01,23,1,0)
This field was requested by PANDAS.
"^DD",357.95,357.95,12.01,"DT")
2941020
"^DD",357.95,357.95,13,0)
PANDAS FORMID^NJ4,0^^12;2^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.95,357.95,13,1,0)
^.1
"^DD",357.95,357.95,13,1,1,0)
357.95^D
"^DD",357.95,357.95,13,1,1,1)
S ^IBD(357.95,"D",$E(X,1,30),DA)=""
"^DD",357.95,357.95,13,1,1,2)
K ^IBD(357.95,"D",$E(X,1,30),DA)
"^DD",357.95,357.95,13,1,1,"%D",0)
^^1^1^2950322^
"^DD",357.95,357.95,13,1,1,"%D",1,0)
Cross-reference to determine Pandas FORM ID.
"^DD",357.95,357.95,13,1,1,"DT")
2950322
"^DD",357.95,357.95,13,3)
Type a Number between 0 and 9999, 0 Decimal Digits
"^DD",357.95,357.95,13,21,0)
^^1^1^2950803^
"^DD",357.95,357.95,13,21,1,0)
The form identifier used by PANDAS.
"^DD",357.95,357.95,13,23,0)
^^1^1^2950803^
"^DD",357.95,357.95,13,23,1,0)
This field was requested by PANDAS.
"^DD",357.95,357.95,13,"DT")
2950322
"^DD",357.95,357.9501,0)
CLINICS USING THIS FORM SUB-FIELD^^.01^1
"^DD",357.95,357.9501,0,"DIK")
IBDX95
"^DD",357.95,357.9501,0,"IX","B",357.9501,.01)

"^DD",357.95,357.9501,0,"NM","CLINICS USING THIS FORM")

"^DD",357.95,357.9501,0,"UP")
357.95
"^DD",357.95,357.9501,.01,0)
CLINICS USING THIS FORM^MP44'^SC(^0;1^Q
"^DD",357.95,357.9501,.01,1,0)
^.1
"^DD",357.95,357.9501,.01,1,1,0)
357.9501^B
"^DD",357.95,357.9501,.01,1,1,1)
S ^IBD(357.95,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",357.95,357.9501,.01,1,1,2)
K ^IBD(357.95,DA(1),10,"B",$E(X,1,30),DA)
"^DD",357.95,357.9501,.01,1,2,0)
357.95^AFC
"^DD",357.95,357.9501,.01,1,2,1)
S ^IBD(357.95,"AFC",$E(X,1,30),DA(1),DA)=""
"^DD",357.95,357.9501,.01,1,2,2)
K ^IBD(357.95,"AFC",$E(X,1,30),DA(1),DA)
"^DD",357.95,357.9501,.01,1,2,"%D",0)
^^1^1^2941012^
"^DD",357.95,357.9501,.01,1,2,"%D",1,0)
Regular cross reference of forms by clinic using them
"^DD",357.95,357.9501,.01,1,2,"DT")
2941012
"^DD",357.95,357.9501,.01,3)
Enter the clinics using this form.
"^DD",357.95,357.9501,.01,21,0)
^^1^1^2950803^
"^DD",357.95,357.9501,.01,21,1,0)
A clinic that uses the form type to which this form definition applies.
"^DD",357.95,357.9501,.01,"DT")
2941011
"^DD",357.95,357.951,0)
BUBBLES SUB-FIELD^^2.04^18
"^DD",357.95,357.951,0,"DIK")
IBDX95
"^DD",357.95,357.951,0,"DT")
2961021
"^DD",357.95,357.951,0,"ID","WRITE")
D EN^DDIOL("  COL = "_$P($G(^(0)),U,2)_"  DISPLAY = "_$P($G(^(0)),U,8),"","?0")
"^DD",357.95,357.951,0,"IX","B",357.951,.01)

"^DD",357.95,357.951,0,"NM","BUBBLES")

"^DD",357.95,357.951,0,"UP")
357.95
"^DD",357.95,357.951,.01,0)
BUBBLE ROW^MNJ3,0^^0;1^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.95,357.951,.01,1,0)
^.1
"^DD",357.95,357.951,.01,1,1,0)
357.951^B
"^DD",357.95,357.951,.01,1,1,1)
S ^IBD(357.95,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",357.95,357.951,.01,1,1,2)
K ^IBD(357.95,DA(1),1,"B",$E(X,1,30),DA)
"^DD",357.95,357.951,.01,1,2,0)
357.95^AC^MUMPS
"^DD",357.95,357.951,.01,1,2,1)
S:$P($G(^IBD(357.95,DA(1),1,DA,0)),"^",2)]"" ^IBD(357.95,"AC",DA(1),X,$P(^IBD(357.95,DA(1),1,DA,0),"^",2),DA)=""
"^DD",357.95,357.951,.01,1,2,2)
K:$P($G(^IBD(357.95,DA(1),1,DA,0)),"^",2)]"" ^IBD(357.95,"AC",DA(1),X,$P(^IBD(357.95,DA(1),1,DA,0),"^",2),DA)
"^DD",357.95,357.951,.01,1,2,"%D",0)
^^2^2^2960403^^^
"^DD",357.95,357.951,.01,1,2,"%D",1,0)
This cross-reference indexes the bubbles by location. Set by the .01 and
"^DD",357.95,357.951,.01,1,2,"%D",2,0)
.02 fields.
"^DD",357.95,357.951,.01,1,2,"DT")
2960403
"^DD",357.95,357.951,.01,3)
Type a Number between 0 and 999, 0 Decimal Digits
"^DD",357.95,357.951,.01,21,0)
^^1^1^2950928^^^^
"^DD",357.95,357.951,.01,21,1,0)
The row the bubble occurs on. Row 0 is at the top.
"^DD",357.95,357.951,.01,"DT")
2960403
"^DD",357.95,357.951,.02,0)
BUBBLE COLUMN^RNJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.95,357.951,.02,1,0)
^.1
"^DD",357.95,357.951,.02,1,1,0)
357.95^AC1^MUMPS
"^DD",357.95,357.951,.02,1,1,1)
S:X]"" ^IBD(357.95,"AC",DA(1),$P($G(^IBD(357.95,DA(1),1,DA,0)),"^"),X,DA)=""
"^DD",357.95,357.951,.02,1,1,2)
K:X]"" ^IBD(357.95,"AC",DA(1),$P($G(^IBD(357.95,DA(1),1,DA,0)),"^"),X,DA)
"^DD",357.95,357.951,.02,1,1,"%D",0)
^^2^2^2960403^^
"^DD",357.95,357.951,.02,1,1,"%D",1,0)
This cross-reference indexes the bubbles by location. Set by the .01 and
"^DD",357.95,357.951,.02,1,1,"%D",2,0)
.02 fields.
"^DD",357.95,357.951,.02,1,1,"DT")
2960403
"^DD",357.95,357.951,.02,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",357.95,357.951,.02,21,0)
^^1^1^2950803^
"^DD",357.95,357.951,.02,21,1,0)
The column the bubble occurs on. Columns begin at 0 on the left.
"^DD",357.95,357.951,.02,"DT")
2960403
"^DD",357.95,357.951,.03,0)
TYPE OF DATA^*P357.6'^IBE(357.6,^0;3^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""P""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",357.95,357.951,.03,1,0)
^.1
"^DD",357.95,357.951,.03,1,1,0)
357.95^AE^MUMPS
"^DD",357.95,357.951,.03,1,1,1)
I X,$P($G(^IBD(357.95,DA(1),1,DA,0)),"^",4)]"" S ^IBD(357.95,"AE",DA(1),X,+$P(^IBD(357.95,DA(1),1,DA,0),"^",10),$P(^(0),"^",4),DA)=""
"^DD",357.95,357.951,.03,1,1,2)
I X,$P($G(^IBD(357.95,DA(1),1,DA,0)),"^",4)]"" K ^IBD(357.95,"AE",DA(1),X,+$P(^IBD(357.95,DA(1),1,DA,0),"^",10),$P(^(0),"^",4),DA)
"^DD",357.95,357.951,.03,1,1,"%D",0)
^^2^2^2960403^^^^
"^DD",357.95,357.951,.03,1,1,"%D",1,0)
Subscripts are <form type id>, <package interface ien>, <data qualifier
"^DD",357.95,357.951,.03,1,1,"%D",2,0)
ien>,<value to pass>,<bubble ien>). Set by the .03 ,.04, and .1 fields.
"^DD",357.95,357.951,.03,1,1,"DT")
2960403
"^DD",357.95,357.951,.03,3)
What type of data does the bubble represent?
"^DD",357.95,357.951,.03,12)
The screen is only for PANDAS. It allows only certain input interfaces.
"^DD",357.95,357.951,.03,12.1)
S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""P"""
"^DD",357.95,357.951,.03,21,0)
^^1^1^2950913^^^^
"^DD",357.95,357.951,.03,21,1,0)
The type of data a bubble represents. Used to map the data to DHCP.
"^DD",357.95,357.951,.03,"DT")
2960403
"^DD",357.95,357.951,.04,0)
PRIMARY VALUE^FXO^^0;4^D FDCHOICE^IBDFU91($P(^IBD(357.95,D0,1,D1,0),U,3),.X)
"^DD",357.95,357.951,.04,1,0)
^.1
"^DD",357.95,357.951,.04,1,1,0)
357.95^AE2^MUMPS
"^DD",357.95,357.951,.04,1,1,1)
I $P($G(^IBD(357.95,DA(1),1,DA,0)),"^",3),X]"" S ^IBD(357.95,"AE",DA(1),$P(^IBD(357.95,DA(1),1,DA,0),"^",3),+$P(^(0),"^",10),X,DA)=""
"^DD",357.95,357.951,.04,1,1,2)
I $P($G(^IBD(357.95,DA(1),1,DA,0)),"^",3),X]"" K ^IBD(357.95,"AE",DA(1),$P(^IBD(357.95,DA(1),1,DA,0),"^",3),+$P(^(0),"^",10),X,DA)
"^DD",357.95,357.951,.04,1,1,"%D",0)
^^2^2^2960403^^^^
"^DD",357.95,357.951,.04,1,1,"%D",1,0)
Subscripts are <form type id>, <package interface ien>, <data qualifier 
"^DD",357.95,357.951,.04,1,1,"%D",2,0)
ien>,<value to pass>,<bubble ien>). Set by the .03 ,.04, and .1 fields.
"^DD",357.95,357.951,.04,1,1,"DT")
2960403
"^DD",357.95,357.951,.04,2)
S Y(0)=Y D OUTPUT^IBDFU91($P(^IBD(357.95,D0,1,D1,0),U,3),.Y)
"^DD",357.95,357.951,.04,2.1)
D OUTPUT^IBDFU91($P(^IBD(357.95,D0,1,D1,0),U,3),.Y)
"^DD",357.95,357.951,.04,3)
What value should be entered to the database?
"^DD",357.95,357.951,.04,4)
D HELP^IBDFU91($P(^IBD(357.95,DA(1),1,DA,0),U,3))
"^DD",357.95,357.951,.04,21,0)
^^1^1^2950823^^^^
"^DD",357.95,357.951,.04,21,1,0)
The value to pass to the package interface.
"^DD",357.95,357.951,.04,"DT")
2960403
"^DD",357.95,357.951,.05,0)
FIELD NAME^RF^^0;5^K:$L(X)>30!($L(X)<3) X
"^DD",357.95,357.951,.05,3)
Answer must be 3-30 characters in length.
"^DD",357.95,357.951,.05,21,0)
^^1^1^2950803^
"^DD",357.95,357.951,.05,21,1,0)
The name of the field that the bubble appears in.
"^DD",357.95,357.951,.05,"DT")
2940823
"^DD",357.95,357.951,.06,0)
FIELD ID^RF^^0;6^K:$L(X)>10!($L(X)<2) X
"^DD",357.95,357.951,.06,3)
Answer must be 2-10 characters in length.
"^DD",357.95,357.951,.06,21,0)
^^2^2^2951121^^
"^DD",357.95,357.951,.06,21,1,0)
A unique identifier for a group of one or more bubbles that is used to
"^DD",357.95,357.951,.06,21,2,0)
tie that group of bubbles together.
"^DD",357.95,357.951,.06,"DT")
2940823
"^DD",357.95,357.951,.07,0)
SELECTION RULE^RS^0:ANY NUMBER;1:EXACTLY ONE;2:AT MOST ONE;3:AT LEAST ONE;^0;7^Q
"^DD",357.95,357.951,.07,21,0)
^^2^2^2950803^
"^DD",357.95,357.951,.07,21,1,0)
A rule that specifies how many of the bubbles can be filled
"^DD",357.95,357.951,.07,21,2,0)
in for a group of bubbles identified by the same FIELD ID.
"^DD",357.95,357.951,.07,"DT")
2940824
"^DD",357.95,357.951,.08,0)
DISPLAYED TEXT^F^^0;8^K:$L(X)>80!($L(X)<1) X
"^DD",357.95,357.951,.08,3)
Answer must be 1-80 characters in length.
"^DD",357.95,357.951,.08,21,0)
^^1^1^2950803^
"^DD",357.95,357.951,.08,21,1,0)
The text that appears on the form and is associated with the bubble.
"^DD",357.95,357.951,.08,"DT")
2950427
"^DD",357.95,357.951,.09,0)
DISPLAYED HEADER^F^^0;9^K:$L(X)>40!($L(X)<1) X
"^DD",357.95,357.951,.09,3)
What group header does the selection appear under?
"^DD",357.95,357.951,.09,21,0)
^^1^1^2950803^
"^DD",357.95,357.951,.09,21,1,0)
The header, if any, that is associated with the bubble.
"^DD",357.95,357.951,.09,"DT")
2941019
"^DD",357.95,357.951,.1,0)
DATA QUALIFIER^*P357.98'X^IBD(357.98,^0;10^S DIC("S")="I $$DQGOOD^IBDFU9($P(^IBD(357.95,D0,1,D1,0),U,3),Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",357.95,357.951,.1,1,0)
^.1
"^DD",357.95,357.951,.1,1,1,0)
357.95^AE1^MUMPS
"^DD",357.95,357.951,.1,1,1,1)
I $P(^IBD(357.95,DA(1),1,DA,0),"^",3),$P(^(0),"^",4)]"" S ^IBD(357.95,"AE",DA(1),$P(^IBD(357.95,DA(1),1,DA,0),"^",3),+X,$P(^(0),"^",4),DA)=""
"^DD",357.95,357.951,.1,1,1,2)
I $P(^IBD(357.95,DA(1),1,DA,0),"^",3),$P(^(0),"^",4)]"" K ^IBD(357.95,"AE",DA(1),$P(^IBD(357.95,DA(1),1,DA,0),"^",3),+X,$P(^(0),"^",4),DA)
"^DD",357.95,357.951,.1,1,1,"%D",0)
^^2^2^2950928^
"^DD",357.95,357.951,.1,1,1,"%D",1,0)
Subscripts are <form type id>, <package interface ien>,+<data qualifier
"^DD",357.95,357.951,.1,1,1,"%D",2,0)
ien>,<value to pass>,<bubble ien>). Set by the .03, .04, and .01 fields.
"^DD",357.95,357.951,.1,1,1,"DT")
2941020
"^DD",357.95,357.951,.1,3)
What data qualifier applies to this selection?
"^DD",357.95,357.951,.1,12)
Allows only certain data qualifiers, dependent on the type of data.
"^DD",357.95,357.951,.1,12.1)
S DIC("S")="I $$DQGOOD^IBDFU9($P(^IBD(357.95,D0,1,D1,0),U,3),Y)"
"^DD",357.95,357.951,.1,21,0)
^^1^1^2950912^^^^
"^DD",357.95,357.951,.1,21,1,0)
The data qualifier associated with the bubble.
"^DD",357.95,357.951,.1,"DT")
2950912
"^DD",357.95,357.951,.11,0)
DYNAMIC?^S^0:NO;1:YES;^0;11^Q
"^DD",357.95,357.951,.11,3)
Enter YES if the data associated with the bubble is stored in Form Tracking.
"^DD",357.95,357.951,.11,21,0)
^^2^2^2950803^
"^DD",357.95,357.951,.11,21,1,0)
A field is dynamic if the data associated with the bubble is determined
"^DD",357.95,357.951,.11,21,2,0)
at print time as opposed to design time.
"^DD",357.95,357.951,.11,"DT")
2950123
"^DD",357.95,357.951,.12,0)
ITEM NUMBER^NJ3,0^^0;12^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.95,357.951,.12,3)
What number on the list is the entry where this bubble occurs?
"^DD",357.95,357.951,.12,21,0)
^^1^1^2950803^
"^DD",357.95,357.951,.12,21,1,0)
The order on a list of bubbles that this bubble occurs in.
"^DD",357.95,357.951,.12,"DT")
2950324
"^DD",357.95,357.951,.13,0)
QUANTITY^NJ2,0^^0;13^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.95,357.951,.13,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",357.95,357.951,.13,21,0)
^^2^2^2961015^
"^DD",357.95,357.951,.13,21,1,0)
Data in the Quantity field indicates the number of occurrences that will
"^DD",357.95,357.951,.13,21,2,0)
be passed along to PCE for this entry if the bubbled is selected.
"^DD",357.95,357.951,.13,"DT")
2961015
"^DD",357.95,357.951,1,0)
SUBHEADER^F^^1;1^K:$L(X)>250!($L(X)<1) X
"^DD",357.95,357.951,1,3)
Answer must be 1-250 characters in length.
"^DD",357.95,357.951,1,21,0)
^^1^1^2951002^
"^DD",357.95,357.951,1,21,1,0)
The subheader will be appended to the narrative for passing to PCE.
"^DD",357.95,357.951,1,"DT")
2951002
"^DD",357.95,357.951,2.01,0)
ALTERNATIVE NARRATIVE^F^^2;1^K:$L(X)>80!($L(X)<3) X
"^DD",357.95,357.951,2.01,3)
Answer must be 3-80 characters in length.
"^DD",357.95,357.951,2.01,21,0)
^^1^1^2960906^
"^DD",357.95,357.951,2.01,21,1,0)
This stores the alternative narrative for the Diagnosis codes.
"^DD",357.95,357.951,2.01,"DT")
2960906
"^DD",357.95,357.951,2.02,0)
CLINICAL LEXICON^P757.01'^GMP(757.01,^2;2^Q
"^DD",357.95,357.951,2.02,21,0)
^^1^1^2960906^
"^DD",357.95,357.951,2.02,21,1,0)
This store the clinical lexicon for the diagnosis.
"^DD",357.95,357.951,2.02,"DT")
2960906
"^DD",357.95,357.951,2.03,0)
SECOND CODE^F^^2;3^K:$L(X)>10!($L(X)<1) X
"^DD",357.95,357.951,2.03,3)
Answer must be 1-10 characters in length.
"^DD",357.95,357.951,2.03,21,0)
^^2^2^2961021^
"^DD",357.95,357.951,2.03,21,1,0)
Used to pass along an additional code when the first is bubble.  Will
"^DD",357.95,357.951,2.03,21,2,0)
always be passed as secondary.
"^DD",357.95,357.951,2.03,"DT")
2961021
"^DD",357.95,357.951,2.04,0)
THIRD CODE^F^^2;4^K:$L(X)>10!($L(X)<1) X
"^DD",357.95,357.951,2.04,3)
Answer must be 1-10 characters in length.
"^DD",357.95,357.951,2.04,21,0)
^^2^2^2961021^
"^DD",357.95,357.951,2.04,21,1,0)
Used to pass a 3rd code along to PCE when this one entry is selected.
"^DD",357.95,357.951,2.04,21,2,0)
Always passes it along as secondary.
"^DD",357.95,357.951,2.04,"DT")
2961021
"^DD",357.95,357.9511,0)
PANDAS HEADERS SUB-FIELD^^2^2
"^DD",357.95,357.9511,0,"DIK")
IBDX95
"^DD",357.95,357.9511,0,"DT")
2950322
"^DD",357.95,357.9511,0,"IX","B",357.9511,.01)

"^DD",357.95,357.9511,0,"NM","PANDAS HEADERS")

"^DD",357.95,357.9511,0,"UP")
357.95
"^DD",357.95,357.9511,.01,0)
HEADERS^MF^^0;1^K:$L(X)>80!($L(X)<1) X
"^DD",357.95,357.9511,.01,1,0)
^.1
"^DD",357.95,357.9511,.01,1,1,0)
357.9511^B
"^DD",357.95,357.9511,.01,1,1,1)
S ^IBD(357.95,DA(1),11,"B",$E(X,1,30),DA)=""
"^DD",357.95,357.9511,.01,1,1,2)
K ^IBD(357.95,DA(1),11,"B",$E(X,1,30),DA)
"^DD",357.95,357.9511,.01,3)
Answer must be 1-80 characters in length.
"^DD",357.95,357.9511,.01,21,0)
^^1^1^2950803^
"^DD",357.95,357.9511,.01,21,1,0)
A header used by PANDAS for the form.
"^DD",357.95,357.9511,.01,"DT")
2941019
"^DD",357.95,357.9511,2,0)
USE AS HEADER^S^Y:YES;N:NO;^0;2^Q
"^DD",357.95,357.9511,2,3)
Answer YES if you want this text to be used as a narrative category or grouper on the form.
"^DD",357.95,357.9511,2,21,0)
^^2^2^2950803^
"^DD",357.95,357.9511,2,21,1,0)
YES means that the header should be used as a narrative category or grouper
"^DD",357.95,357.9511,2,21,2,0)
on the form.
"^DD",357.95,357.9511,2,"DT")
2950322
"^DD",357.95,357.952,0)
HAND PRINT FIELDS SUB-FIELD^^.01^13
"^DD",357.95,357.952,0,"DIK")
IBDX95
"^DD",357.95,357.952,0,"DT")
2950724
"^DD",357.95,357.952,0,"IX","B",357.952,.01)

"^DD",357.95,357.952,0,"NM","HAND PRINT FIELDS")

"^DD",357.95,357.952,0,"UP")
357.95
"^DD",357.95,357.952,.01,0)
HAND PRINT ROW^MNJ3,0^^0;1^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.95,357.952,.01,1,0)
^.1
"^DD",357.95,357.952,.01,1,1,0)
357.952^B
"^DD",357.95,357.952,.01,1,1,1)
S ^IBD(357.95,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",357.95,357.952,.01,1,1,2)
K ^IBD(357.95,DA(1),2,"B",$E(X,1,30),DA)
"^DD",357.95,357.952,.01,1,2,0)
357.95^AD^MUMPS
"^DD",357.95,357.952,.01,1,2,1)
S:$P($G(^IBD(357.95,DA(1),2,DA,0)),"^",2)]"" ^IBD(357.95,"AD",DA(1),X,$P(^IBD(357.95,DA(1),2,DA,0),"^",2),DA)=^IBD(357.95,DA(1),2,DA,0)
"^DD",357.95,357.952,.01,1,2,2)
K:$P($G(^IBD(357.95,DA(1),2,DA,0)),"^",2)]"" ^IBD(357.95,"AD",DA(1),X,$P(^IBD(357.95,DA(1),2,DA,0),"^",2),DA)
"^DD",357.95,357.952,.01,1,2,"%D",0)
^^1^1^2960402^^^^
"^DD",357.95,357.952,.01,1,2,"%D",1,0)
Indexes the hand print field by location. Set by the .01 and .02 fields.
"^DD",357.95,357.952,.01,1,2,"DT")
2960402
"^DD",357.95,357.952,.01,3)
Type a Number between 0 and 999, 0 Decimal Digits
"^DD",357.95,357.952,.01,21,0)
^^1^1^2950808^
"^DD",357.95,357.952,.01,21,1,0)
The row that the hand print area begins.
"^DD",357.95,357.952,.01,"DT")
2960402
"^DD",357.95,357.952,.02,0)
HAND PRINT COLUMN^RNJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.95,357.952,.02,1,0)
^.1
"^DD",357.95,357.952,.02,1,1,0)
357.95^AD1^MUMPS
"^DD",357.95,357.952,.02,1,1,1)
S:X]"" ^IBD(357.95,"AD",DA(1),$P($G(^IBD(357.95,DA(1),2,DA,0)),"^"),X,DA)=^IBD(357.95,DA(1),2,DA,0)
"^DD",357.95,357.952,.02,1,1,2)
K:X]"" ^IBD(357.95,"AD",DA(1),$P($G(^IBD(357.95,DA(1),2,DA,0)),"^"),X,DA)
"^DD",357.95,357.952,.02,1,1,"%D",0)
^^1^1^2960402^^^^
"^DD",357.95,357.952,.02,1,1,"%D",1,0)
Indexes the hand print field by location. Set by the .01 and .02 fields.
"^DD",357.95,357.952,.02,1,1,"DT")
2960402
"^DD",357.95,357.952,.02,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",357.95,357.952,.02,21,0)
^^1^1^2950808^
"^DD",357.95,357.952,.02,21,1,0)
The column that the hand print area begins at.
"^DD",357.95,357.952,.02,"DT")
2960402
"^DD",357.95,357.952,.03,0)
WIDTH^RNJ3,0^^0;3^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.95,357.952,.03,3)
Type a Number between 1 and 200, 0 Decimal Digits
"^DD",357.95,357.952,.03,21,0)
^^2^2^2950808^
"^DD",357.95,357.952,.03,21,1,0)
The width of the hand print area in terms of the number of characters that
"^DD",357.95,357.952,.03,21,2,0)
can be printed.
"^DD",357.95,357.952,.03,"DT")
2940725
"^DD",357.95,357.952,.04,0)
TYPE OF DATA^R*P357.6'^IBE(357.6,^0;4^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",357.95,357.952,.04,3)
What data will be printed in this field?
"^DD",357.95,357.952,.04,12)
Allows only available interfaces for input.
"^DD",357.95,357.952,.04,12.1)
S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1"
"^DD",357.95,357.952,.04,21,0)
^^1^1^2950808^
"^DD",357.95,357.952,.04,21,1,0)
Identifies the package interface used for input of this field.
"^DD",357.95,357.952,.04,"DT")
2950912
"^DD",357.95,357.952,.05,0)
FIELD NAME^RF^^0;5^K:$L(X)>30!($L(X)<3) X
"^DD",357.95,357.952,.05,3)
Answer must be 3-30 characters in length.
"^DD",357.95,357.952,.05,21,0)
^^1^1^2950808^
"^DD",357.95,357.952,.05,21,1,0)
The name of the hand print field.
"^DD",357.95,357.952,.05,"DT")
2940823
"^DD",357.95,357.952,.06,0)
NUMBER OF LINES OF HAND PRINT^RNJ3,0^^0;6^K:+X'=X!(X>100)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.95,357.952,.06,3)
How many lines of hand print?
"^DD",357.95,357.952,.06,21,0)
^^1^1^2950808^
"^DD",357.95,357.952,.06,21,1,0)
The number of lines of hand print allocated for the field.
"^DD",357.95,357.952,.06,"DT")
2940816
"^DD",357.95,357.952,.08,0)
FIELD ID^RF^^0;8^K:$L(X)>10!($L(X)<2) X
"^DD",357.95,357.952,.08,3)
Answer must be 2-10 characters in length.
"^DD",357.95,357.952,.08,21,0)
^^1^1^2950808^
"^DD",357.95,357.952,.08,21,1,0)
An unique identifier assigned to the field.
"^DD",357.95,357.952,.08,"DT")
2940907
"^DD",357.95,357.952,.09,0)
DISPLAYED HEADER^F^^0;9^K:$L(X)>40!($L(X)<1) X
"^DD",357.95,357.952,.09,3)
Answer must be 1-40 characters in length.
"^DD",357.95,357.952,.09,21,0)
^^1^1^2950808^
"^DD",357.95,357.952,.09,21,1,0)
The header, if any, associated with the field.
"^DD",357.95,357.952,.09,"DT")
2941019
"^DD",357.95,357.952,.1,0)
DATA QUALIFIER^P357.98'^IBD(357.98,^0;10^Q
"^DD",357.95,357.952,.1,3)
What qualifier, if any, applies to this field?
"^DD",357.95,357.952,.1,21,0)
^^1^1^2950808^
"^DD",357.95,357.952,.1,21,1,0)
The data qualifier, if any, associated with the field.
"^DD",357.95,357.952,.1,"DT")
2941019
"^DD",357.95,357.952,.12,0)
ITEM NUMBER^NJ3,0^^0;12^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.95,357.952,.12,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",357.95,357.952,.12,21,0)
^^2^2^2950808^
"^DD",357.95,357.952,.12,21,1,0)
If the hand print area is part of a list, the item number is the position
"^DD",357.95,357.952,.12,21,2,0)
on the list.
"^DD",357.95,357.952,.12,"DT")
2950313
"^DD",357.95,357.952,.14,0)
PRINT TYPE^RS^0:NO, DO NOT PRINT;1:YES, NOT FOR ICR;2:YES, FOR ICR;^0;14^Q
"^DD",357.95,357.952,.14,3)
How should the field be printed?
"^DD",357.95,357.952,.14,21,0)
^^1^1^2950808^
"^DD",357.95,357.952,.14,21,1,0)
The print type defines the format for printing the hand print area.
"^DD",357.95,357.952,.14,"DT")
2950428
"^DD",357.95,357.952,.15,0)
READ TYPE^RS^0:NO, DO NOT READ;1:YES, READ WITHOUT ICR;2:YES, READ WITH ICR;3:YES, ICR PRINT FORMAT, READ WITHOUT ICR;^0;15^Q
"^DD",357.95,357.952,.15,3)
How should the field be read by the scanning software?
"^DD",357.95,357.952,.15,21,0)
^^1^1^2950928^^
"^DD",357.95,357.952,.15,21,1,0)
This defines what type of recognition should be applied to the field.
"^DD",357.95,357.952,.15,"DT")
2950503
"^DD",357.95,357.952,.17,0)
DATA ELEMENT^P359.1'^IBE(359.1,^0;17^Q
"^DD",357.95,357.952,.17,3)
What item of data goes in the field?
"^DD",357.95,357.952,.17,21,0)
^^1^1^2950808^
"^DD",357.95,357.952,.17,21,1,0)
This identifies the data type of the hand print field.
"^DD",357.95,357.952,.17,"DT")
2950427
"^DD",357.95,357.953,0)
PAGE INFORMATION SUB-FIELD^^.02^2
"^DD",357.95,357.953,0,"DIK")
IBDX95
"^DD",357.95,357.953,0,"DT")
2950306
"^DD",357.95,357.953,0,"IX","B",357.953,.01)

"^DD",357.95,357.953,0,"NM","PAGE INFORMATION")

"^DD",357.95,357.953,0,"UP")
357.95
"^DD",357.95,357.953,.01,0)
PAGE NUMBER^MNJ1,0^^0;1^K:+X'=X!(X>8)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.95,357.953,.01,1,0)
^.1
"^DD",357.95,357.953,.01,1,1,0)
357.953^B
"^DD",357.95,357.953,.01,1,1,1)
S ^IBD(357.95,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",357.95,357.953,.01,1,1,2)
K ^IBD(357.95,DA(1),3,"B",$E(X,1,30),DA)
"^DD",357.95,357.953,.01,3)
Enter the pages that require documentation of specific features.
"^DD",357.95,357.953,.01,21,0)
^^1^1^2950803^
"^DD",357.95,357.953,.01,21,1,0)
The page number of the page.
"^DD",357.95,357.953,.01,"DT")
2950306
"^DD",357.95,357.953,.02,0)
SCANNABLE?^S^0:NO;1:YES;^0;2^Q
"^DD",357.95,357.953,.02,3)
Is this page meant to be scanned?
"^DD",357.95,357.953,.02,21,0)
^^1^1^2950808^^
"^DD",357.95,357.953,.02,21,1,0)
This documents whether or not a particular page needs to be scanned.
"^DD",357.95,357.953,.02,"DT")
2950306
"^DD",357.96,357.96,0)
FIELD^^3^21
"^DD",357.96,357.96,0,"DDA")
N
"^DD",357.96,357.96,0,"DT")
2970326
"^DD",357.96,357.96,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",357.96,357.96,0,"ID",.03)
W "   ",$E($P(^(0),U,3),4,5)_"-"_$E($P(^(0),U,3),6,7)_"-"_$E($P(^(0),U,3),2,3)
"^DD",357.96,357.96,0,"ID",.1)
S %I=Y,Y=$S('$D(^(0)):"",$D(^SC(+$P(^(0),U,10),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(44,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",357.96,357.96,0,"IX","A1",357.96,.04)

"^DD",357.96,357.96,0,"IX","A2",357.96,.06)

"^DD",357.96,357.96,0,"IX","AC",357.96,.04)

"^DD",357.96,357.96,0,"IX","AD",357.963,.03)

"^DD",357.96,357.96,0,"IX","ADATNA",357.96,.14)

"^DD",357.96,357.96,0,"IX","ADATNA1",357.96,.03)

"^DD",357.96,357.96,0,"IX","AEXT",357.96,.09)

"^DD",357.96,357.96,0,"IX","AN",357.96,.14)

"^DD",357.96,357.96,0,"IX","APTAP",357.96,.02)

"^DD",357.96,357.96,0,"IX","APTAP1",357.96,.03)

"^DD",357.96,357.96,0,"IX","B",357.96,.01)

"^DD",357.96,357.96,0,"IX","C",357.96,.02)

"^DD",357.96,357.96,0,"IX","D",357.96,.03)

"^DD",357.96,357.96,0,"NM","ENCOUNTER FORM TRACKING")

"^DD",357.96,357.96,.01,0)
PRINTED FORM ID^RNJ9,0X^^0;1^K X
"^DD",357.96,357.96,.01,1,0)
^.1^^-1
"^DD",357.96,357.96,.01,1,1,0)
357.96^B
"^DD",357.96,357.96,.01,1,1,1)
S ^IBD(357.96,"B",$E(X,1,30),DA)=""
"^DD",357.96,357.96,.01,1,1,2)
K ^IBD(357.96,"B",$E(X,1,30),DA)
"^DD",357.96,357.96,.01,3)
Can not be edited!
"^DD",357.96,357.96,.01,21,0)
^^2^2^2941014^
"^DD",357.96,357.96,.01,21,1,0)
Uniquely identifies an instance of a printed encounter form. This is the
"^DD",357.96,357.96,.01,21,2,0)
same as the ien.
"^DD",357.96,357.96,.01,"DT")
2940718
"^DD",357.96,357.96,.02,0)
PATIENT^RP2'^DPT(^0;2^Q
"^DD",357.96,357.96,.02,1,0)
^.1
"^DD",357.96,357.96,.02,1,1,0)
357.96^C
"^DD",357.96,357.96,.02,1,1,1)
S ^IBD(357.96,"C",$E(X,1,30),DA)=""
"^DD",357.96,357.96,.02,1,1,2)
K ^IBD(357.96,"C",$E(X,1,30),DA)
"^DD",357.96,357.96,.02,1,1,"DT")
2941004
"^DD",357.96,357.96,.02,1,2,0)
357.96^APTAP^MUMPS
"^DD",357.96,357.96,.02,1,2,1)
S:$P($G(^IBD(357.96,DA,0)),"^",3) ^IBD(357.96,"APTAP",X,+$P(^IBD(357.96,DA,0),"^",3),DA)=""
"^DD",357.96,357.96,.02,1,2,2)
K ^IBD(357.96,"APTAP",X,+$P($G(^IBD(357.96,DA,0)),"^",3),DA)
"^DD",357.96,357.96,.02,1,2,"%D",0)
^^2^2^2960403^^^^
"^DD",357.96,357.96,.02,1,2,"%D",1,0)
Cross-reference of all form ids by patient and appointment date/time.
"^DD",357.96,357.96,.02,1,2,"%D",2,0)
Set by both the .02 and .03 fields.
"^DD",357.96,357.96,.02,1,2,"DT")
2960402
"^DD",357.96,357.96,.02,3)
What patient was the form printed for?
"^DD",357.96,357.96,.02,21,0)
^^1^1^2950803^^
"^DD",357.96,357.96,.02,21,1,0)
The patient that had the appointment.
"^DD",357.96,357.96,.02,"DT")
2960402
"^DD",357.96,357.96,.03,0)
APPOINTMENT^D^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",357.96,357.96,.03,1,0)
^.1
"^DD",357.96,357.96,.03,1,1,0)
357.96^APTAP1^MUMPS
"^DD",357.96,357.96,.03,1,1,1)
S:$P($G(^IBD(357.96,DA,0)),"^",2) ^IBD(357.96,"APTAP",+$P(^IBD(357.96,DA,0),"^",2),X,DA)=""
"^DD",357.96,357.96,.03,1,1,2)
K ^IBD(357.96,"APTAP",+$P($G(^IBD(357.96,DA,0)),"^",2),DA)
"^DD",357.96,357.96,.03,1,1,"%D",0)
^^2^2^2960403^^^^
"^DD",357.96,357.96,.03,1,1,"%D",1,0)
Cross-reference of all form ids by patient and appointment date/time.  Set by
"^DD",357.96,357.96,.03,1,1,"%D",2,0)
both the .02 and .03 fields.
"^DD",357.96,357.96,.03,1,1,"DT")
2960402
"^DD",357.96,357.96,.03,1,2,0)
357.96^D
"^DD",357.96,357.96,.03,1,2,1)
S ^IBD(357.96,"D",$E(X,1,30),DA)=""
"^DD",357.96,357.96,.03,1,2,2)
K ^IBD(357.96,"D",$E(X,1,30),DA)
"^DD",357.96,357.96,.03,1,2,"%D",0)
^^2^2^2950817^
"^DD",357.96,357.96,.03,1,2,"%D",1,0)
Regular cross-reference for use in looking up an encounter form tracking 
"^DD",357.96,357.96,.03,1,2,"%D",2,0)
entry by date.
"^DD",357.96,357.96,.03,1,2,"DT")
2950817
"^DD",357.96,357.96,.03,1,3,0)
357.96^ADATNA1^MUMPS
"^DD",357.96,357.96,.03,1,3,1)
S:$P(^IBD(357.96,DA,0),"^",14)'="" ^IBD(357.96,"ADATNA",X,$P(^(0),"^",14),DA)=""
"^DD",357.96,357.96,.03,1,3,2)
K ^IBD(357.96,"ADATNA",X,+$P(^IBD(357.96,DA,0),"^",14),DA)
"^DD",357.96,357.96,.03,1,3,"%D",0)
^^2^2^2960627^
"^DD",357.96,357.96,.03,1,3,"%D",1,0)
This mumps cross reference is used to find forms tracking entries not 
"^DD",357.96,357.96,.03,1,3,"%D",2,0)
associated with a schedule appointment by date/time.
"^DD",357.96,357.96,.03,1,3,"DT")
2960627
"^DD",357.96,357.96,.03,3)
What was the date/time of the appointment for which the form was printed?
"^DD",357.96,357.96,.03,21,0)
^^1^1^2960814^^^
"^DD",357.96,357.96,.03,21,1,0)
The date/time of the appointment for which the encounter form was printed.
"^DD",357.96,357.96,.03,"DT")
2960627
"^DD",357.96,357.96,.04,0)
FORM TYPE^P357.95'^IBD(357.95,^0;4^Q
"^DD",357.96,357.96,.04,1,0)
^.1
"^DD",357.96,357.96,.04,1,1,0)
357.96^A1^MUMPS
"^DD",357.96,357.96,.04,1,1,1)
S:'(+$P($G(^IBD(357.96,DA,0)),"^",6)) ^IBD(357.96,"A",+X,DA)=""
"^DD",357.96,357.96,.04,1,1,2)
K ^IBD(357.96,"A",+X,DA)
"^DD",357.96,357.96,.04,1,1,"%D",0)
^^1^1^2940714^^^^
"^DD",357.96,357.96,.04,1,1,"%D",1,0)
Used to determine if the encounter form has been accounted for.
"^DD",357.96,357.96,.04,1,1,"DT")
2940712
"^DD",357.96,357.96,.04,1,2,0)
357.96^AC
"^DD",357.96,357.96,.04,1,2,1)
S ^IBD(357.96,"AC",$E(X,1,30),DA)=""
"^DD",357.96,357.96,.04,1,2,2)
K ^IBD(357.96,"AC",$E(X,1,30),DA)
"^DD",357.96,357.96,.04,1,2,"%D",0)
^^1^1^2951004^
"^DD",357.96,357.96,.04,1,2,"%D",1,0)
A regular cross-reference of all entries by form design number.
"^DD",357.96,357.96,.04,1,2,"DT")
2951004
"^DD",357.96,357.96,.04,3)
What FORM DEFINITION TABLE is associated with the printed encounter form?
"^DD",357.96,357.96,.04,21,0)
^^3^3^2951218^^^^
"^DD",357.96,357.96,.04,21,1,0)
If the encounter form has a FORM DEFINITION TABLE, this field points to it.
"^DD",357.96,357.96,.04,21,2,0)
The pointer equals the .01 field of the FORM DEFINITION TABLE entry and is
"^DD",357.96,357.96,.04,21,3,0)
used as the form type id.                                         
"^DD",357.96,357.96,.04,"DT")
2951004
"^DD",357.96,357.96,.05,0)
DATE/TIME PRINTED^D^^0;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",357.96,357.96,.05,1,0)
^.1^^0
"^DD",357.96,357.96,.05,3)
When was the form printed?
"^DD",357.96,357.96,.05,21,0)
^^1^1^2950721^
"^DD",357.96,357.96,.05,21,1,0)
When the form was printed.
"^DD",357.96,357.96,.05,"DT")
2940718
"^DD",357.96,357.96,.06,0)
DATE/TIME RECEIVED IN DHCP^D^^0;6^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",357.96,357.96,.06,1,0)
^.1^^-1
"^DD",357.96,357.96,.06,1,1,0)
357.96^A2^MUMPS
"^DD",357.96,357.96,.06,1,1,1)
K:X ^IBD(357.96,"A",+$P($G(^IBD(357.96,DA,0)),"^",4),DA) S:('X)&$P($G(^IBD(357.96,DA,0)),"^",4) ^IBD(357.96,"A",$P($G(^IBD(357.96,DA,0)),"^",4),DA)=""
"^DD",357.96,357.96,.06,1,1,2)
K:X ^IBD(357.96,"A",+$P($G(^IBD(357.96,DA,0)),"^",4),DA) S:('X)&$P($G(^IBD(357.96,DA,0)),"^",4) ^IBD(357.96,"A",$P($G(^IBD(357.96,DA,0)),"^",4),DA)=""
"^DD",357.96,357.96,.06,1,1,"%D",0)
^^1^1^2940718^^^^
"^DD",357.96,357.96,.06,1,1,"%D",1,0)
Used to determine if the encounter form has been accounted for.
"^DD",357.96,357.96,.06,1,1,"DT")
2940718
"^DD",357.96,357.96,.06,3)
When was the form received?
"^DD",357.96,357.96,.06,21,0)
^^1^1^2950803^^
"^DD",357.96,357.96,.06,21,1,0)
The date and time that the form is received in DHCP.
"^DD",357.96,357.96,.06,23,0)
^^1^1^2950928^
"^DD",357.96,357.96,.06,23,1,0)
Don't mark a form as received until all of its pages are received.
"^DD",357.96,357.96,.06,"DT")
2940718
"^DD",357.96,357.96,.07,0)
SOURCE OF FORM ID^RS^1:IB;2:PANDAS;3:TELEFORM;4:PEN;5:WORKSTATION;99:OTHER;^0;7^Q
"^DD",357.96,357.96,.07,21,0)
^^1^1^2950721^
"^DD",357.96,357.96,.07,21,1,0)
This field documents which means of data capture is being used.
"^DD",357.96,357.96,.07,"DT")
2941004
"^DD",357.96,357.96,.08,0)
FORM TYPE ID (EXTERNAL SOURCE)^F^^0;8^K:$L(X)>30!($L(X)<2) X
"^DD",357.96,357.96,.08,3)
Answer must be 2-30 characters in length.
"^DD",357.96,357.96,.08,21,0)
^^2^2^2950721^^
"^DD",357.96,357.96,.08,21,1,0)
If the form was created externally to DHCP and was assigned
"^DD",357.96,357.96,.08,21,2,0)
an id externally, then this field can be used to document that.
"^DD",357.96,357.96,.08,"DT")
2941017
"^DD",357.96,357.96,.09,0)
EXTERNAL PRINTED FORM ID^F^^0;9^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>10!($L(X)<4) X
"^DD",357.96,357.96,.09,1,0)
^.1
"^DD",357.96,357.96,.09,1,1,0)
357.96^AEXT
"^DD",357.96,357.96,.09,1,1,1)
S ^IBD(357.96,"AEXT",$E(X,1,30),DA)=""
"^DD",357.96,357.96,.09,1,1,2)
K ^IBD(357.96,"AEXT",$E(X,1,30),DA)
"^DD",357.96,357.96,.09,1,1,"%D",0)
^^1^1^2941004^
"^DD",357.96,357.96,.09,1,1,"%D",1,0)
This is a regular cross reference on the external format of the form id
"^DD",357.96,357.96,.09,1,1,"DT")
2941004
"^DD",357.96,357.96,.09,3)
Answer must be 4-10 characters in length.
"^DD",357.96,357.96,.09,21,0)
^^2^2^2950721^^^
"^DD",357.96,357.96,.09,21,1,0)
This is the external format of the form id (internal entry number)
"^DD",357.96,357.96,.09,21,2,0)
that can be printed on forms and used for look-up.  
"^DD",357.96,357.96,.09,"DT")
2941017
"^DD",357.96,357.96,.1,0)
CLINIC^P44'^SC(^0;10^Q
"^DD",357.96,357.96,.1,21,0)
^^1^1^2950721^
"^DD",357.96,357.96,.1,21,1,0)
This is the clinic of the appointment.
"^DD",357.96,357.96,.1,"DT")
2941011
"^DD",357.96,357.96,.11,0)
PROCESSING STATUS^S^1:PRINTED;2:SCANNED;3:SCANNED TO PCE;4:SCANNED W/PCE ERROR;5:DATA ENTRY;6:DATA ENTRY TO PCE;7:DATA ENTRY W/PCE ERROR;11:PENDING PAGES;12:ERROR DETECTED,NOT TRANSMITTED;20:AVAILABLE FOR DATA ENTRY;^0;11^Q
"^DD",357.96,357.96,.11,21,0)
15^^15^15^2960516^^
"^DD",357.96,357.96,.11,21,1,0)
This is the processing status of the form.  This field is automatically
"^DD",357.96,357.96,.11,21,2,0)
updated by the system.  When a form is printed for a patient an entry
"^DD",357.96,357.96,.11,21,3,0)
is created in this file and the processing status is set to printed.
"^DD",357.96,357.96,.11,21,4,0)
When data is received by DHCP from the scanner the status is updated
"^DD",357.96,357.96,.11,21,5,0)
to Scanned.  After the data is processed by PCE the status is updated
"^DD",357.96,357.96,.11,21,6,0)
to show the correct status. 
"^DD",357.96,357.96,.11,21,7,0)
 
"^DD",357.96,357.96,.11,21,8,0)
For multi-page forms, when not all pages have been scanned, the status
"^DD",357.96,357.96,.11,21,9,0)
is set to Pending Pages.  The data is stored in this file from the 
"^DD",357.96,357.96,.11,21,10,0)
scanned pages and merged with the rest of the data when all pages have
"^DD",357.96,357.96,.11,21,11,0)
been scanned.  Then the complete data is sent to PCE.
"^DD",357.96,357.96,.11,21,12,0)
 
"^DD",357.96,357.96,.11,21,13,0)
This is used to prevent sending data from a form to PCE more that once.
"^DD",357.96,357.96,.11,21,14,0)
The only exception is that if PCE returns an error, PCE did not store 
"^DD",357.96,357.96,.11,21,15,0)
any data and the form may be re-scanned.
"^DD",357.96,357.96,.11,23,0)
^^1^1^2960516^^
"^DD",357.96,357.96,.11,23,1,0)
 
"^DD",357.96,357.96,.11,"DT")
2960516
"^DD",357.96,357.96,.12,0)
ERROR^F^^0;12^K:$L(X)>30!($L(X)<3) X
"^DD",357.96,357.96,.12,3)
Answer must be 3-30 characters in length.
"^DD",357.96,357.96,.12,21,0)
^^1^1^2950721^
"^DD",357.96,357.96,.12,21,1,0)
This can be used to document any error that occurred.
"^DD",357.96,357.96,.12,"DT")
2941012
"^DD",357.96,357.96,.13,0)
EDITING DETECTED^S^0:NO;1:YES;^0;13^Q
"^DD",357.96,357.96,.13,1,0)
^.1^^0
"^DD",357.96,357.96,.13,3)
Enter 'Yes' if manual data entry for this form has been done.
"^DD",357.96,357.96,.13,21,0)
^^5^5^2960411^^^^
"^DD",357.96,357.96,.13,21,1,0)
This field is automatically set if data entry on a form has been
"^DD",357.96,357.96,.13,21,2,0)
detected by PCE or Scheduling options.  Data entry by AICS options
"^DD",357.96,357.96,.13,21,3,0)
will be indicated in the Processing Status field.  If the processing
"^DD",357.96,357.96,.13,21,4,0)
status field contains data and this field contains data then the visit
"^DD",357.96,357.96,.13,21,5,0)
was entered and then edited.
"^DD",357.96,357.96,.13,"DT")
2960411
"^DD",357.96,357.96,.14,0)
NO APPOINTMENT ENTRY^S^0:APPOINTMENT EXISTS;1:NO APPOINTMENT ENTRY;^0;14^Q
"^DD",357.96,357.96,.14,1,0)
^.1
"^DD",357.96,357.96,.14,1,1,0)
357.96^AN
"^DD",357.96,357.96,.14,1,1,1)
S ^IBD(357.96,"AN",$E(X,1,30),DA)=""
"^DD",357.96,357.96,.14,1,1,2)
K ^IBD(357.96,"AN",$E(X,1,30),DA)
"^DD",357.96,357.96,.14,1,1,"%D",0)
^^1^1^2960618^
"^DD",357.96,357.96,.14,1,1,"%D",1,0)
regular cross reference of visits with no appointments
"^DD",357.96,357.96,.14,1,1,"DT")
2960618
"^DD",357.96,357.96,.14,1,2,0)
357.96^ADATNA^MUMPS
"^DD",357.96,357.96,.14,1,2,1)
S:+$P(^IBD(357.96,DA,0),"^",3)'="" ^IBD(357.96,"ADATNA",$P(^IBD(357.96,DA,0),"^",3),X,DA)=""
"^DD",357.96,357.96,.14,1,2,2)
K ^IBD(357.96,"ADATNA",+$P(^IBD(357.96,DA,0),"^",3),X,DA)
"^DD",357.96,357.96,.14,1,2,"%D",0)
^^4^4^2960627^^^^
"^DD",357.96,357.96,.14,1,2,"%D",1,0)
This mumps cross reference is created to easily retrieve data by date
"^DD",357.96,357.96,.14,1,2,"%D",2,0)
range for those encounter forms printed with no scheduled appointment.
"^DD",357.96,357.96,.14,1,2,"%D",3,0)
The cross reference is set up in 
"^DD",357.96,357.96,.14,1,2,"%D",4,0)
^IBD(357.96,"ADATNA",$P(^IBD(357.96,DA,0),"^",3),X,DA).
"^DD",357.96,357.96,.14,1,2,"DT")
2960627
"^DD",357.96,357.96,.14,21,0)
^^7^7^2960618^
"^DD",357.96,357.96,.14,21,1,0)
This field gets set to 1, "No Appointment Entry" automatically when
"^DD",357.96,357.96,.14,21,2,0)
a forms tracking entry is created by routine IBDF18C if there is no
"^DD",357.96,357.96,.14,21,3,0)
corresponding appointment entry detected in ^DPT(dfn,"s",appt/datetime
"^DD",357.96,357.96,.14,21,4,0)
for the patient.
"^DD",357.96,357.96,.14,21,5,0)
 
"^DD",357.96,357.96,.14,21,6,0)
Forms tracking uses this Cross-reference to find forms not associated
"^DD",357.96,357.96,.14,21,7,0)
with appointments.
"^DD",357.96,357.96,.14,"DT")
2960627
"^DD",357.96,357.96,.15,0)
TOTAL SECONDS TO INPUT^NJ6,0^^0;15^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.96,357.96,.15,3)
Type a Number between 0 and 999999, 0 Decimal Digits
"^DD",357.96,357.96,.15,21,0)
^^7^7^2960906^^^
"^DD",357.96,357.96,.15,21,1,0)
Enter the total elapsed time in seconds that it took to process this 
"^DD",357.96,357.96,.15,21,2,0)
form, including the processing time in PCE if data was sent to PCE in
"^DD",357.96,357.96,.15,21,3,0)
the foreground.
"^DD",357.96,357.96,.15,21,4,0)

"^DD",357.96,357.96,.15,21,5,0)
This field is automatically updated by the AICS Data Entry option and
"^DD",357.96,357.96,.15,21,6,0)
by the AICS Workstation software.  See the processing status to determine
"^DD",357.96,357.96,.15,21,7,0)
which method of input was used.
"^DD",357.96,357.96,.15,"DT")
2960906
"^DD",357.96,357.96,.16,0)
USER INPUTTING DATA^P200'^VA(200,^0;16^Q
"^DD",357.96,357.96,.16,21,0)
^^6^6^2960906^
"^DD",357.96,357.96,.16,21,1,0)
Enter the user that processed the data on the form, either through the AICS
"^DD",357.96,357.96,.16,21,2,0)
Data Entry options or through Scanning.
"^DD",357.96,357.96,.16,21,3,0)

"^DD",357.96,357.96,.16,21,4,0)
This field is automatically updated by the AICS Data Entry option and
"^DD",357.96,357.96,.16,21,5,0)
by the AICS Workstation software.  See the processing status to determine
"^DD",357.96,357.96,.16,21,6,0)
which method of input was used.
"^DD",357.96,357.96,.16,"DT")
2960906
"^DD",357.96,357.96,1,0)
DYNAMIC LIST ITEMS^357.961I^^1;0
"^DD",357.96,357.96,1,21,0)
^^2^2^2950721^
"^DD",357.96,357.96,1,21,1,0)
This is used to store a lookup table for lists printed on forms
"^DD",357.96,357.96,1,21,2,0)
where the list was created at print time rather than design time.
"^DD",357.96,357.96,1,"DT")
2950721
"^DD",357.96,357.96,2,0)
OVERFLOW DATA^357.962^^2;0
"^DD",357.96,357.96,2,21,0)
^^2^2^2970226^^
"^DD",357.96,357.96,2,21,1,0)
This multiple is used to store the overflow data on forms whereby the list
"^DD",357.96,357.96,2,21,2,0)
was created at print time rather than design time.
"^DD",357.96,357.96,3,0)
STORED IMAGES^357.963A^^3;0
"^DD",357.96,357.96,3,21,0)
^^2^2^2970326^^
"^DD",357.96,357.96,3,21,1,0)
This subfile will contain the image name, paths, workstation ID, and users
"^DD",357.96,357.96,3,21,2,0)
for all pages of the form tracking entry that was saved as an image.
"^DD",357.96,357.96,9,0)
SCANNED PAGES^357.969^^9;0
"^DD",357.96,357.96,9,21,0)
^^1^1^2950721^
"^DD",357.96,357.96,9,21,1,0)
A list of pages that should be scanned.
"^DD",357.96,357.96,10,0)
RAW SCANNED DATA^357.9601A^^10;0
"^DD",357.96,357.96,10,21,0)
^^3^3^2950721^
"^DD",357.96,357.96,10,21,1,0)
This mulitiple holds the raw data from pages that have been scanned,
"^DD",357.96,357.96,10,21,2,0)
pending the receipt of more pages. The data will not be processed
"^DD",357.96,357.96,10,21,3,0)
until all pages that should be scanned are received.
"^DD",357.96,357.9601,0)
RAW SCANNED DATA SUB-FIELD^^.01^1
"^DD",357.96,357.9601,0,"DT")
2950223
"^DD",357.96,357.9601,0,"IX","B",357.9601,.01)

"^DD",357.96,357.9601,0,"NM","RAW SCANNED DATA")

"^DD",357.96,357.9601,0,"UP")
357.96
"^DD",357.96,357.9601,.01,0)
RAW SCANNED DATA^MF^^0;1^K:$L(X)>180!($L(X)<1) X
"^DD",357.96,357.9601,.01,1,0)
^.1
"^DD",357.96,357.9601,.01,1,1,0)
357.9601^B
"^DD",357.96,357.9601,.01,1,1,1)
S ^IBD(357.96,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",357.96,357.9601,.01,1,1,2)
K ^IBD(357.96,DA(1),10,"B",$E(X,1,30),DA)
"^DD",357.96,357.9601,.01,3)
Answer must be 1-180 characters in length.
"^DD",357.96,357.9601,.01,21,0)
^^1^1^2950721^
"^DD",357.96,357.9601,.01,21,1,0)
One line of the raw data.
"^DD",357.96,357.9601,.01,"DT")
2950223
"^DD",357.96,357.961,0)
DYNAMIC LIST ITEMS SUB-FIELD^^.1^6
"^DD",357.96,357.961,0,"DT")
2970123
"^DD",357.96,357.961,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(357.6,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(357.6,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",357.96,357.961,0,"ID",.04)
W "   ",$P(^(0),U,4)
"^DD",357.96,357.961,0,"ID",.06)
W "   ",$P(^(0),U,6)
"^DD",357.96,357.961,0,"IX","AC",357.961,.06)

"^DD",357.96,357.961,0,"IX","B",357.961,.01)

"^DD",357.96,357.961,0,"NM","DYNAMIC LIST ITEMS")

"^DD",357.96,357.961,0,"UP")
357.96
"^DD",357.96,357.961,.01,0)
ITEM NUMBER^MNJ4,0^^0;1^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.96,357.961,.01,1,0)
^.1
"^DD",357.96,357.961,.01,1,1,0)
357.961^B
"^DD",357.96,357.961,.01,1,1,1)
S ^IBD(357.96,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",357.96,357.961,.01,1,1,2)
K ^IBD(357.96,DA(1),1,"B",$E(X,1,30),DA)
"^DD",357.96,357.961,.01,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",357.96,357.961,.01,21,0)
^^1^1^2970226^^
"^DD",357.96,357.961,.01,21,1,0)
The  number of the item on the particular list where it appears.
"^DD",357.96,357.961,.01,"DT")
2950721
"^DD",357.96,357.961,.03,0)
DATA TYPE^R*P357.6'^IBE(357.6,^0;3^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",357.96,357.961,.03,1,0)
^.1^^0
"^DD",357.96,357.961,.03,3)
What type of data does the bubble relate to?
"^DD",357.96,357.961,.03,12)
Must be an available interface for accepting input.
"^DD",357.96,357.961,.03,12.1)
S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1"
"^DD",357.96,357.961,.03,21,0)
^^1^1^2950721^
"^DD",357.96,357.961,.03,21,1,0)
The Package Interface that describes the data.
"^DD",357.96,357.961,.03,"DT")
2970205
"^DD",357.96,357.961,.04,0)
VALUE TO PASS^FXO^^0;4^X:$P($G(^IBD(357.96,D0,1,D1,0)),U,3) $G(^IBE(357.6,$P($G(^(0)),U,3),9))
"^DD",357.96,357.961,.04,2)
S Y(0)=Y X:$P($G(^IBD(357.96,D0,1,D1,0)),U,3) $G(^IBE(357.6,$P($G(^(0)),U,3),14))
"^DD",357.96,357.961,.04,2.1)
X:$P($G(^IBD(357.96,D0,1,D1,0)),U,3) $G(^IBE(357.6,$P($G(^(0)),U,3),14))
"^DD",357.96,357.961,.04,3)
What value should be entered into the database?
"^DD",357.96,357.961,.04,21,0)
^^2^2^2970226^^^^
"^DD",357.96,357.961,.04,21,1,0)
The value associated with the item on the list. It will usually
"^DD",357.96,357.961,.04,21,2,0)
be a code or pointer.
"^DD",357.96,357.961,.04,"DT")
2941216
"^DD",357.96,357.961,.06,0)
FIELD ID^F^^0;6^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>10!($L(X)<1) X
"^DD",357.96,357.961,.06,1,0)
^.1
"^DD",357.96,357.961,.06,1,1,0)
357.961^AC^MUMPS
"^DD",357.96,357.961,.06,1,1,1)
S ^IBD(357.96,DA(1),"AC",X,$P(^IBD(357.96,DA(1),1,DA,0),"^"),DA)=""
"^DD",357.96,357.961,.06,1,1,2)
K ^IBD(357.96,DA(1),"AC",X,$P(^IBD(357.96,DA(1),1,DA,0),"^"),DA)
"^DD",357.96,357.961,.06,1,1,"DT")
2950124
"^DD",357.96,357.961,.06,3)
Answer must be 1-10 characters in length.
"^DD",357.96,357.961,.06,21,0)
^^2^2^2950721^
"^DD",357.96,357.961,.06,21,1,0)
This field is used to document the form object the list item
"^DD",357.96,357.961,.06,21,2,0)
belongs to.
"^DD",357.96,357.961,.06,"DT")
2950124
"^DD",357.96,357.961,.08,0)
DISPLAYED TEXT^F^^0;8^K:$L(X)>80!($L(X)<1) X
"^DD",357.96,357.961,.08,3)
Answer must be 1-80 characters in length.
"^DD",357.96,357.961,.08,21,0)
^^2^2^2950721^
"^DD",357.96,357.961,.08,21,1,0)
The text that the provider sees appearing on the form that is 
"^DD",357.96,357.961,.08,21,2,0)
associated witht he item.
"^DD",357.96,357.961,.08,"DT")
2970123
"^DD",357.96,357.961,.1,0)
DATA QUALIFIER^P357.98'^IBD(357.98,^0;10^Q
"^DD",357.96,357.961,.1,21,0)
^^2^2^2950721^
"^DD",357.96,357.961,.1,21,1,0)
This is the data qualifier that may be optionally associated
"^DD",357.96,357.961,.1,21,2,0)
with the item.
"^DD",357.96,357.961,.1,"DT")
2950124
"^DD",357.96,357.962,0)
OVERFLOW DATA SUB-FIELD^^.08^5
"^DD",357.96,357.962,0,"DT")
2970226
"^DD",357.96,357.962,0,"IX","AD",357.962,.06)

"^DD",357.96,357.962,0,"IX","B",357.962,.01)

"^DD",357.96,357.962,0,"NM","OVERFLOW DATA")

"^DD",357.96,357.962,0,"UP")
357.96
"^DD",357.96,357.962,.01,0)
ITEM NUMBER^NJ4,0^^0;1^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.96,357.962,.01,1,0)
^.1
"^DD",357.96,357.962,.01,1,1,0)
357.962^B
"^DD",357.96,357.962,.01,1,1,1)
S ^IBD(357.96,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",357.96,357.962,.01,1,1,2)
K ^IBD(357.96,DA(1),2,"B",$E(X,1,30),DA)
"^DD",357.96,357.962,.01,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",357.96,357.962,.01,21,0)
^^1^1^2970226^^
"^DD",357.96,357.962,.01,21,1,0)
The  number of the item on the particular list where it appears.
"^DD",357.96,357.962,.01,"DT")
2970226
"^DD",357.96,357.962,.03,0)
DATA TYPE^*P357.6'^IBE(357.6,^0;3^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",357.96,357.962,.03,3)
What type of data does the bubble relate to?
"^DD",357.96,357.962,.03,12)
Must be an available interface for accepting input.
"^DD",357.96,357.962,.03,12.1)
S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1"
"^DD",357.96,357.962,.03,21,0)
^^1^1^2970226^
"^DD",357.96,357.962,.03,21,1,0)
The Package Interface that describes the data.
"^DD",357.96,357.962,.03,"DT")
2970226
"^DD",357.96,357.962,.04,0)
VALUE TO PASS^FXO^^0;4^X:$P($G(^IBD(357.96,D0,2,D1,0)),U,3) $G(^IBE(357.6,$P($G(^(0)),U,3),9))
"^DD",357.96,357.962,.04,2)
S Y(0)=Y X:$P($G(^IBD(357.96,D0,2,D1,0)),U,3) $G(^IBE(357.6,$P($G(^(0)),U,3),14))
"^DD",357.96,357.962,.04,2.1)
X:$P($G(^IBD(357.96,D0,2,D1,0)),U,3) $G(^IBE(357.6,$P($G(^(0)),U,3),14))
"^DD",357.96,357.962,.04,3)
What value should be entered into the database?
"^DD",357.96,357.962,.04,21,0)
^^2^2^2970226^^
"^DD",357.96,357.962,.04,21,1,0)
The value associated with the item on the list.  It will usually be
"^DD",357.96,357.962,.04,21,2,0)
a code or pointer.
"^DD",357.96,357.962,.04,"DT")
2970226
"^DD",357.96,357.962,.06,0)
FIELD ID^F^^0;6^K:$L(X)>10!($L(X)<1) X
"^DD",357.96,357.962,.06,1,0)
^.1
"^DD",357.96,357.962,.06,1,1,0)
357.962^AD^MUMPS
"^DD",357.96,357.962,.06,1,1,1)
S ^IBD(357.96,DA(1),"AD",X,$P(^IBD(357.96,DA(1),2,DA,0),"^"),DA)=""
"^DD",357.96,357.962,.06,1,1,2)
K ^IBD(357.96,DA(1),"AD",X,$P(^IBD(357.96,DA(1),2,DA,0),"^"),DA)
"^DD",357.96,357.962,.06,1,1,"%D",0)
^^1^1^2970226^^
"^DD",357.96,357.962,.06,1,1,"%D",1,0)
Used for look-up on overflow data by field id.
"^DD",357.96,357.962,.06,1,1,"DT")
2970226
"^DD",357.96,357.962,.06,3)
Answer must be 1-10 characters in length.
"^DD",357.96,357.962,.06,21,0)
^^1^1^2970226^
"^DD",357.96,357.962,.06,21,1,0)
This field is used to document the form object the list item belongs to.
"^DD",357.96,357.962,.06,"DT")
2970226
"^DD",357.96,357.962,.08,0)
DISPLAYED TEXT^F^^0;8^K:$L(X)>80!($L(X)<1) X
"^DD",357.96,357.962,.08,3)
Answer must be 1-80 characters in length.
"^DD",357.96,357.962,.08,21,0)
^^2^2^2970226^
"^DD",357.96,357.962,.08,21,1,0)
The text that the provider sees appearing on the form that is associated
"^DD",357.96,357.962,.08,21,2,0)
with the item.
"^DD",357.96,357.962,.08,"DT")
2970226
"^DD",357.96,357.963,0)
STORED IMAGES SUB-FIELD^^.07^7
"^DD",357.96,357.963,0,"DT")
2970326
"^DD",357.96,357.963,0,"IX","B",357.963,.01)

"^DD",357.96,357.963,0,"NM","STORED IMAGES")

"^DD",357.96,357.963,0,"UP")
357.96
"^DD",357.96,357.963,.01,0)
IMAGE^F^^0;1^K:$L(X)>30!($L(X)<3) X
"^DD",357.96,357.963,.01,1,0)
^.1
"^DD",357.96,357.963,.01,1,1,0)
357.963^B
"^DD",357.96,357.963,.01,1,1,1)
S ^IBD(357.96,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",357.96,357.963,.01,1,1,2)
K ^IBD(357.96,DA(1),3,"B",$E(X,1,30),DA)
"^DD",357.96,357.963,.01,3)
Answer must be 3-30 characters in length.
"^DD",357.96,357.963,.01,21,0)
^^2^2^2970326^^
"^DD",357.96,357.963,.01,21,1,0)
When the AICS Workstation Software stores an image on the the workstation,
"^DD",357.96,357.963,.01,21,2,0)
data about the image is also stored in DHCP.
"^DD",357.96,357.963,.01,"DT")
2970326
"^DD",357.96,357.963,.02,0)
IMAGE PATH^F^^0;2^K:$L(X)>80!($L(X)<3) X
"^DD",357.96,357.963,.02,3)
Answer must be 3-80 characters in length.
"^DD",357.96,357.963,.02,21,0)
^^1^1^2970326^
"^DD",357.96,357.963,.02,21,1,0)
This is the path on the workstation where the image was stored.
"^DD",357.96,357.963,.02,"DT")
2970326
"^DD",357.96,357.963,.03,0)
PAGE STORED^NJ2,0^^0;3^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.96,357.963,.03,1,0)
^.1
"^DD",357.96,357.963,.03,1,1,0)
357.96^AD
"^DD",357.96,357.963,.03,1,1,1)
S ^IBD(357.96,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",357.96,357.963,.03,1,1,2)
K ^IBD(357.96,"AD",$E(X,1,30),DA(1),DA)
"^DD",357.96,357.963,.03,1,1,"%D",0)
^^3^3^2970326^
"^DD",357.96,357.963,.03,1,1,"%D",1,0)
This is a regular cross reference on the whole file of pages saved as images.
"^DD",357.96,357.963,.03,1,1,"%D",2,0)
This is used by the trigger on the scanned pages date/time field to find the
"^DD",357.96,357.963,.03,1,1,"%D",3,0)
entry to update that the image data was successfully received.
"^DD",357.96,357.963,.03,1,1,"DT")
2970326
"^DD",357.96,357.963,.03,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",357.96,357.963,.03,21,0)
^^1^1^2970326^^
"^DD",357.96,357.963,.03,21,1,0)
This is the page number of the form that was stored as an image.
"^DD",357.96,357.963,.03,"DT")
2970326
"^DD",357.96,357.963,.04,0)
WORKSTATION ID^F^^0;4^K:$L(X)>1!($L(X)<1) X
"^DD",357.96,357.963,.04,3)
Answer must be 1 character in length.
"^DD",357.96,357.963,.04,21,0)
^^1^1^2970326^
"^DD",357.96,357.963,.04,21,1,0)
This is the workstation ID of the scanning workstation that stored this image.
"^DD",357.96,357.963,.04,"DT")
2970326
"^DD",357.96,357.963,.05,0)
USER^P200'^VA(200,^0;5^Q
"^DD",357.96,357.963,.05,21,0)
^^1^1^2970326^
"^DD",357.96,357.963,.05,21,1,0)
This is the user on the AICS Scanning Workstation when the image was stored.
"^DD",357.96,357.963,.05,"DT")
2970326
"^DD",357.96,357.963,.06,0)
DATE/TIME IMAGE STORED^D^^0;6^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",357.96,357.963,.06,"DT")
2970326
"^DD",357.96,357.963,.07,0)
DATA FROM PAGE RECEIVED^S^0:NO;1:YES;^0;7^Q
"^DD",357.96,357.963,.07,"DT")
2970326
"^DD",357.96,357.969,0)
SCANNED PAGES SUB-FIELD^^.02^2
"^DD",357.96,357.969,0,"DT")
2950315
"^DD",357.96,357.969,0,"IX","B",357.969,.01)

"^DD",357.96,357.969,0,"NM","SCANNED PAGES")

"^DD",357.96,357.969,0,"UP")
357.96
"^DD",357.96,357.969,.01,0)
PAGE NUMBER^MNJ1,0^^0;1^K:+X'=X!(X>2)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.96,357.969,.01,1,0)
^.1
"^DD",357.96,357.969,.01,1,1,0)
357.969^B
"^DD",357.96,357.969,.01,1,1,1)
S ^IBD(357.96,DA(1),9,"B",$E(X,1,30),DA)=""
"^DD",357.96,357.969,.01,1,1,2)
K ^IBD(357.96,DA(1),9,"B",$E(X,1,30),DA)
"^DD",357.96,357.969,.01,3)
Enter the page numbers of the scannable pages.
"^DD",357.96,357.969,.01,21,0)
^^1^1^2950721^
"^DD",357.96,357.969,.01,21,1,0)
The page number of a page that should be scanned.
"^DD",357.96,357.969,.01,"DT")
2950222
"^DD",357.96,357.969,.02,0)
DATE/TIME RECEIVED^D^^0;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",357.96,357.969,.02,3)
What date and time was the page received?
"^DD",357.96,357.969,.02,21,0)
^^1^1^2950721^
"^DD",357.96,357.969,.02,21,1,0)
The date and time that the page was received, ie, input.
"^DD",357.96,357.969,.02,"DT")
2950315
"^DD",357.97,357.97,0)
FIELD^^.03^3
"^DD",357.97,357.97,0,"DDA")
N
"^DD",357.97,357.97,0,"DT")
2960815
"^DD",357.97,357.97,0,"IX","B",357.97,.01)

"^DD",357.97,357.97,0,"NM","ENCOUNTER FORM COUNTERS")

"^DD",357.97,357.97,.01,0)
LAST FIELD LOCATOR TABLE ID^RNJ9,0X^^0;1^K X
"^DD",357.97,357.97,.01,1,0)
^.1
"^DD",357.97,357.97,.01,1,1,0)
357.97^B
"^DD",357.97,357.97,.01,1,1,1)
S ^IBD(357.97,"B",$E(X,1,30),DA)=""
"^DD",357.97,357.97,.01,1,1,2)
K ^IBD(357.97,"B",$E(X,1,30),DA)
"^DD",357.97,357.97,.01,3)
Can not be edited!
"^DD",357.97,357.97,.01,21,0)
^^1^1^2940713^
"^DD",357.97,357.97,.01,21,1,0)
Used to assign a numeric ID to the FIELD LOCATOR TABLEs.
"^DD",357.97,357.97,.01,"DT")
2940713
"^DD",357.97,357.97,.02,0)
LAST PRINTED FORM ID^NJ9,0^^0;2^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",357.97,357.97,.02,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",357.97,357.97,.02,21,0)
^^1^1^2960815^^
"^DD",357.97,357.97,.02,21,1,0)
Used to assign a numeric ID to each printed encounter form.
"^DD",357.97,357.97,.02,"DT")
2940713
"^DD",357.97,357.97,.03,0)
LAST UNKNOWN IMAGE ID^NJ10,0^^0;3^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",357.97,357.97,.03,3)
Type a Number between 1 and 9999999999, 0 Decimal Digits
"^DD",357.97,357.97,.03,21,0)
^^17^17^2960819^^^^
"^DD",357.97,357.97,.03,21,1,0)
This number is used to store images where the form id or form type could
"^DD",357.97,357.97,.03,21,2,0)
not be determined.  The alogrythm for storing images is:
"^DD",357.97,357.97,.03,21,3,0)
   1.  If form type, form id, and page are known, and the form passed
"^DD",357.97,357.97,.03,21,4,0)
       validation, the image is stored as Xnnnnnn.tif, where X is the
"^DD",357.97,357.97,.03,21,5,0)
       workstation identifier, and the first 6 n's are the form ID and
"^DD",357.97,357.97,.03,21,6,0)
       the last n is the page number, for example, if workstation A
"^DD",357.97,357.97,.03,21,7,0)
       scanned page 1 of form id 87753 the image would be stored as
"^DD",357.97,357.97,.03,21,8,0)
       A877531.tif.  (Validated Form)
"^DD",357.97,357.97,.03,21,9,0)

"^DD",357.97,357.97,.03,21,10,0)
   2.  If a form requires further validation before sending data to
"^DD",357.97,357.97,.03,21,11,0)
       PCE but the form id, form type, and page are known then the
"^DD",357.97,357.97,.03,21,12,0)
       image is stored as Unnnnnnn.tif, where n is described above.
"^DD",357.97,357.97,.03,21,13,0)
       (Requires Further Validation)
"^DD",357.97,357.97,.03,21,14,0)

"^DD",357.97,357.97,.03,21,15,0)
   3.  If the form ID, form type, or page cannot be determined then
"^DD",357.97,357.97,.03,21,16,0)
       the image is saved as an Unknown form in the format of UNnnnnnn.tif
"^DD",357.97,357.97,.03,21,17,0)
       where the number nnnnnnn is determined from this counter.
"^DD",357.97,357.97,.03,"DT")
2960815
"^DD",357.98,357.98,0)
FIELD^^.03^3
"^DD",357.98,357.98,0,"DDA")
N
"^DD",357.98,357.98,0,"DT")
2960918
"^DD",357.98,357.98,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",357.98,357.98,0,"IX","B",357.98,.01)

"^DD",357.98,357.98,0,"IX","C",357.98,.03)

"^DD",357.98,357.98,0,"NM","AICS DATA QUALIFIERS")

"^DD",357.98,357.98,0,"PT",357.13,.1)

"^DD",357.98,357.98,0,"PT",357.14,.1)

"^DD",357.98,357.98,0,"PT",357.22,.09)

"^DD",357.98,357.98,0,"PT",357.6,13)

"^DD",357.98,357.98,0,"PT",357.613,.01)

"^DD",357.98,357.98,0,"PT",357.931,.09)

"^DD",357.98,357.98,0,"PT",357.951,.1)

"^DD",357.98,357.98,0,"PT",357.952,.1)

"^DD",357.98,357.98,0,"PT",357.961,.1)

"^DD",357.98,357.98,0,"PT",358.613,.01)

"^DD",357.98,357.98,.01,0)
NAME^RF^^0;1^K:$L(X)>40!($L(X)<2)!'(X'?1P.E) X
"^DD",357.98,357.98,.01,1,0)
^.1
"^DD",357.98,357.98,.01,1,1,0)
357.98^B
"^DD",357.98,357.98,.01,1,1,1)
S ^IBD(357.98,"B",$E(X,1,30),DA)=""
"^DD",357.98,357.98,.01,1,1,2)
K ^IBD(357.98,"B",$E(X,1,30),DA)
"^DD",357.98,357.98,.01,3)
Answer must be 2-40 characters in length.
"^DD",357.98,357.98,.01,21,0)
^^1^1^2961031^^
"^DD",357.98,357.98,.01,21,1,0)
The name given to the data qualifier.
"^DD",357.98,357.98,.01,"DT")
2960918
"^DD",357.98,357.98,.02,0)
CODE^RF^^0;2^K:$L(X)>3!($L(X)<1) X
"^DD",357.98,357.98,.02,3)
Answer must be 1-3 characters in length.
"^DD",357.98,357.98,.02,21,0)
^^2^2^2950721^
"^DD",357.98,357.98,.02,21,1,0)
The code for the data qualifier, as defined by the PCE Generic Device
"^DD",357.98,357.98,.02,21,2,0)
Interface.
"^DD",357.98,357.98,.02,"DT")
2941018
"^DD",357.98,357.98,.03,0)
RECOMMENDED HEADER^F^^0;3^K:$L(X)>12!($L(X)<1) X
"^DD",357.98,357.98,.03,1,0)
^.1
"^DD",357.98,357.98,.03,1,1,0)
357.98^C
"^DD",357.98,357.98,.03,1,1,1)
S ^IBD(357.98,"C",$E(X,1,30),DA)=""
"^DD",357.98,357.98,.03,1,1,2)
K ^IBD(357.98,"C",$E(X,1,30),DA)
"^DD",357.98,357.98,.03,1,1,"DT")
2950829
"^DD",357.98,357.98,.03,3)
Answer must be 1-12 characters in length.
"^DD",357.98,357.98,.03,21,0)
^^2^2^2950417^
"^DD",357.98,357.98,.03,21,1,0)
The recommended header will be used as the default header when designing a
"^DD",357.98,357.98,.03,21,2,0)
form.
"^DD",357.98,357.98,.03,"DT")
2950829
"^DD",357.99,357.99,0)
FIELD^^11^3
"^DD",357.99,357.99,0,"DT")
2950201
"^DD",357.99,357.99,0,"IX","B",357.99,.01)

"^DD",357.99,357.99,0,"NM","PRINT MANAGER CLINIC GROUPS")

"^DD",357.99,357.99,0,"PT",357.091,.06)

"^DD",357.99,357.99,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",357.99,357.99,.01,1,0)
^.1
"^DD",357.99,357.99,.01,1,1,0)
357.99^B
"^DD",357.99,357.99,.01,1,1,1)
S ^IBD(357.99,"B",$E(X,1,30),DA)=""
"^DD",357.99,357.99,.01,1,1,2)
K ^IBD(357.99,"B",$E(X,1,30),DA)
"^DD",357.99,357.99,.01,3)
Answer must be 3-30 characters in length.
"^DD",357.99,357.99,.01,21,0)
^^1^1^2950721^
"^DD",357.99,357.99,.01,21,1,0)
The name given to the group of clinics.
"^DD",357.99,357.99,.01,"DEL",1,0)
I $O(^IBD(357.09,"ACG",DA,0)) W !,"You must remove this group from any Print Parameters to Delete!"
"^DD",357.99,357.99,.01,"DT")
2941208
"^DD",357.99,357.99,10,0)
CLINICS^357.9901PA^^10;0
"^DD",357.99,357.99,10,12)
Only clinics can be selected.
"^DD",357.99,357.99,10,12.1)
S DIC("S")="I $P(^(0),U,2)=""C"""
"^DD",357.99,357.99,10,21,0)
^^1^1^2970327^^^^
"^DD",357.99,357.99,10,21,1,0)
A list of clinics contained in the group.
"^DD",357.99,357.99,10,23,0)
^^1^1^2970327^^^^
"^DD",357.99,357.99,10,23,1,0)
 
"^DD",357.99,357.99,11,0)
DIVISION^357.9911PA^^11;0
"^DD",357.99,357.9901,0)
CLINICS SUB-FIELD^^.01^1
"^DD",357.99,357.9901,0,"DT")
2950201
"^DD",357.99,357.9901,0,"IX","B",357.9901,.01)

"^DD",357.99,357.9901,0,"NM","CLINICS")

"^DD",357.99,357.9901,0,"UP")
357.99
"^DD",357.99,357.9901,.01,0)
CLINICS^M*P44'^SC(^0;1^S DIC("S")="I $P(^(0),U,3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",357.99,357.9901,.01,1,0)
^.1
"^DD",357.99,357.9901,.01,1,1,0)
357.9901^B
"^DD",357.99,357.9901,.01,1,1,1)
S ^IBD(357.99,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",357.99,357.9901,.01,1,1,2)
K ^IBD(357.99,DA(1),10,"B",$E(X,1,30),DA)
"^DD",357.99,357.9901,.01,7.5)
I $E(X,$L(X))="*" D WILDCARD^IBDFCG1
"^DD",357.99,357.9901,.01,12)
Only clinics can be selected.
"^DD",357.99,357.9901,.01,12.1)
S DIC("S")="I $P(^(0),U,3)=""C"""
"^DD",357.99,357.9901,.01,21,0)
^^2^2^2970327^^^
"^DD",357.99,357.9901,.01,21,1,0)
 
"^DD",357.99,357.9901,.01,21,2,0)
A clinic contained in the group.
"^DD",357.99,357.9901,.01,23,0)
^^2^2^2970327^
"^DD",357.99,357.9901,.01,23,1,0)
 
"^DD",357.99,357.9901,.01,23,2,0)
 
"^DD",357.99,357.9901,.01,"DT")
2950201
"^DD",357.99,357.9911,0)
DIVISION SUB-FIELD^^.01^1
"^DD",357.99,357.9911,0,"DT")
2941012
"^DD",357.99,357.9911,0,"IX","B",357.9911,.01)

"^DD",357.99,357.9911,0,"NM","DIVISION")

"^DD",357.99,357.9911,0,"UP")
357.99
"^DD",357.99,357.9911,.01,0)
DIVISION^P40.8'^DG(40.8,^0;1^Q
"^DD",357.99,357.9911,.01,1,0)
^.1
"^DD",357.99,357.9911,.01,1,1,0)
357.9911^B
"^DD",357.99,357.9911,.01,1,1,1)
S ^IBD(357.99,DA(1),11,"B",$E(X,1,30),DA)=""
"^DD",357.99,357.9911,.01,1,1,2)
K ^IBD(357.99,DA(1),11,"B",$E(X,1,30),DA)
"^DD",357.99,357.9911,.01,21,0)
^^1^1^2950721^^
"^DD",357.99,357.9911,.01,21,1,0)
A division whose clinics belong to the group.
"^DD",357.99,357.9911,.01,"DT")
2941012
"^DD",358,358,0)
FIELD^^2^18
"^DD",358,358,0,"DDA")
N
"^DD",358,358,0,"DT")
2951024
"^DD",358,358,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",358,358,0,"IX","AB",358,.01)

"^DD",358,358,0,"IX","AC",358,.01)

"^DD",358,358,0,"IX","AG",358,.01)

"^DD",358,358,0,"IX","AT",358,.01)

"^DD",358,358,0,"IX","AU",358,.01)

"^DD",358,358,0,"IX","B",358,.01)

"^DD",358,358,0,"IX","C",358,.07)

"^DD",358,358,0,"IX","D",358,.04)

"^DD",358,358,0,"NM","IMP/EXP ENCOUNTER FORM")

"^DD",358,358,0,"PT",358.1,.02)

"^DD",358,358,0,"VRPK")
AUTOMATED INFO COLLECTION SYS
"^DD",358,358,.01,0)
NAME^RFX^^0;1^K:X[""""!($A(X)=45) X I $D(X) S X=$$UP^XLFSTR(X) K:$L(X)>30!($L(X)<3) X
"^DD",358,358,.01,1,0)
^.1
"^DD",358,358,.01,1,1,0)
358^B
"^DD",358,358,.01,1,1,1)
S ^IBE(358,"B",$E(X,1,30),DA)=""
"^DD",358,358,.01,1,1,2)
K ^IBE(358,"B",$E(X,1,30),DA)
"^DD",358,358,.01,1,2,0)
358^AT^MUMPS
"^DD",358,358,.01,1,2,1)
Q
"^DD",358,358,.01,1,2,2)
Q
"^DD",358,358,.01,1,2,"%D",0)
^^4^4^2931124^
"^DD",358,358,.01,1,2,"%D",1,0)
This cross-reference will be used to store the text of the compiled form.
"^DD",358,358,.01,1,2,"%D",2,0)
The format will be ..."AT",form ien,row #)=text line. The index will be
"^DD",358,358,.01,1,2,"%D",3,0)
created by the 'compile' action of the encounter form utilities - it is
"^DD",358,358,.01,1,2,"%D",4,0)
optional.
"^DD",358,358,.01,1,2,"DT")
2931124
"^DD",358,358,.01,1,3,0)
358^AC^MUMPS
"^DD",358,358,.01,1,3,1)
Q
"^DD",358,358,.01,1,3,2)
Q
"^DD",358,358,.01,1,3,"%D",0)
^^4^4^2940216^
"^DD",358,358,.01,1,3,"%D",1,0)
This cross-reference will be used to store the special controls needed
"^DD",358,358,.01,1,3,"%D",2,0)
(bold on, bold off, etc.) to print the compiled form. The format will be
"^DD",358,358,.01,1,3,"%D",3,0)
..."AC",form ien,row #,column # )=controls. The index will be created by
"^DD",358,358,.01,1,3,"%D",4,0)
the 'compile' action of the encounter form utilities - it is optional.
"^DD",358,358,.01,1,3,"DT")
2931124
"^DD",358,358,.01,1,4,0)
358^AU^MUMPS
"^DD",358,358,.01,1,4,1)
Q
"^DD",358,358,.01,1,4,2)
Q
"^DD",358,358,.01,1,4,"%D",0)
^^4^4^2931124^
"^DD",358,358,.01,1,4,"%D",1,0)
This cross-reference will be used to store the underlining of the compiled
"^DD",358,358,.01,1,4,"%D",2,0)
form. The format will be ...,"AU",form ien,row #)=underlining . The index
"^DD",358,358,.01,1,4,"%D",3,0)
will be created by the 'compile' action of the encounter form utilities -
"^DD",358,358,.01,1,4,"%D",4,0)
it is optional.
"^DD",358,358,.01,1,4,"DT")
2931124
"^DD",358,358,.01,1,5,0)
358^AG^MUMPS
"^DD",358,358,.01,1,5,1)
Q
"^DD",358,358,.01,1,5,2)
Q
"^DD",358,358,.01,1,5,"%D",0)
^^5^5^2931124^
"^DD",358,358,.01,1,5,"%D",1,0)
This cross-reference will be used to store strings of graphics characters
"^DD",358,358,.01,1,5,"%D",2,0)
(TLC,TRC, etc.) needed for the compiled form. The format will be
"^DD",358,358,.01,1,5,"%D",3,0)
..."AG",form ien,row #,column # )=graphics string . The index will be
"^DD",358,358,.01,1,5,"%D",4,0)
created by the 'compile' action of the encounter form utilities - it is
"^DD",358,358,.01,1,5,"%D",5,0)
optional.
"^DD",358,358,.01,1,5,"DT")
2931124
"^DD",358,358,.01,1,6,0)
358^AB^MUMPS
"^DD",358,358,.01,1,6,1)
Q
"^DD",358,358,.01,1,6,2)
Q
"^DD",358,358,.01,1,6,"%D",0)
^^4^4^2940606^^
"^DD",358,358,.01,1,6,"%D",1,0)
This cross-reference will be used to store the boxes needed for the compiled
"^DD",358,358,.01,1,6,"%D",2,0)
forms. The format will be ..."AB",form ien,row #,column #, Block ien)=
"^DD",358,358,.01,1,6,"%D",3,0)
box width^box height. The index will be created by the 'compile'
"^DD",358,358,.01,1,6,"%D",4,0)
action of the encounter form utilities.
"^DD",358,358,.01,1,6,"DT")
2940606
"^DD",358,358,.01,3)
The form name must be 3-30 uppercase characters in length.
"^DD",358,358,.01,21,0)
^^2^2^2931110^^
"^DD",358,358,.01,21,1,0)
 
"^DD",358,358,.01,21,2,0)
The name of the encounter form.
"^DD",358,358,.01,"DEL",1,0)
I 1 W "...Encounter Forms can only be deleted through the",!," DELETE UNUSED FORM action in the Encounter Form Utilities!"
"^DD",358,358,.01,"DT")
2940606
"^DD",358,358,.02,0)
SIMPLEX/DUPLEX^S^0:SIMPLEX;1:DUPLEX,LONG-EDGE BINDING;2:DUPLEX,SHORT-EDGE BINDING;^0;2^Q
"^DD",358,358,.02,3)
SIMPLEX means one-sided, DUPLEX means two-sided. SHORT-EDGE BINDING is for attaching forms by the top, LONG-EDGE BINDING is for attaching forms along the side.
"^DD",358,358,.02,21,0)
^^1^1^2940628^
"^DD",358,358,.02,21,1,0)
Allows forms to be printed either one-sided or two-sided.
"^DD",358,358,.02,"DT")
2940628
"^DD",358,358,.03,0)
BRIEF DESCRIPTION^RF^^0;3^K:$L(X)>80!($L(X)<1) X
"^DD",358,358,.03,.1)
BRIEF DESCRIPTION OF FORM'S USE & CONTENT
"^DD",358,358,.03,3)
Enter a brief description of the intended use of the form or its contents.
"^DD",358,358,.03,21,0)
^^3^3^2930607^
"^DD",358,358,.03,21,1,0)
 
"^DD",358,358,.03,21,2,0)
A brief description of the contents of the form and its intended use. This
"^DD",358,358,.03,21,3,0)
description will be displayed to the user.
"^DD",358,358,.03,"DT")
2940309
"^DD",358,358,.04,0)
TYPE OF USE^R*S^0:RESERVED FOR UTILITY;1:OUTPATIENT ENCOUNTER FORM;^0;4^Q
"^DD",358,358,.04,1,0)
^.1
"^DD",358,358,.04,1,1,0)
358^D
"^DD",358,358,.04,1,1,1)
S ^IBE(358,"D",$E(X,1,30),DA)=""
"^DD",358,358,.04,1,1,2)
K ^IBE(358,"D",$E(X,1,30),DA)
"^DD",358,358,.04,1,1,"%D",0)
^^1^1^2930825^
"^DD",358,358,.04,1,1,"%D",1,0)
Used to find forms of a particular type.
"^DD",358,358,.04,1,1,"DT")
2930825
"^DD",358,358,.04,3)
How will the form be used?
"^DD",358,358,.04,12)
Does not allow users to choose RESERVED FOR UTILITY
"^DD",358,358,.04,12.1)
S DIC("S")="I Y'=0"
"^DD",358,358,.04,21,0)
^^5^5^2960930^^^^
"^DD",358,358,.04,21,1,0)
This field will be used to categorize forms by type of use. It is possible
"^DD",358,358,.04,21,2,0)
that the form generator that is part of the Encounter Form Utilities may
"^DD",358,358,.04,21,3,0)
be used to create forms other than encounter forms.
"^DD",358,358,.04,21,4,0)
The utilities use a couple of forms (WORKCOPY, TOOL KIT), TYPE OF USE is
"^DD",358,358,.04,21,5,0)
RESERVED FOR UTILITY, that are not real forms.
"^DD",358,358,.04,23,0)
^^1^1^2960930^
"^DD",358,358,.04,23,1,0)
 
"^DD",358,358,.04,"DT")
2930825
"^DD",358,358,.05,0)
COMPILED?^S^0:NO;1:YES;F:COMPILATION FAILED;^0;5^Q
"^DD",358,358,.05,3)
Enter yes if a compiled copy of the form should be created and stored.
"^DD",358,358,.05,21,0)
^^2^2^2940714^^^^
"^DD",358,358,.05,21,1,0)
This indicates whether a compiled version of the form exists. The compiled
"^DD",358,358,.05,21,2,0)
version is much faster to print.
"^DD",358,358,.05,"DT")
2940714
"^DD",358,358,.06,0)
USE ICR?^S^0:NO;1:YES;^0;6^Q
"^DD",358,358,.06,3)
Enter YES if you want to use ICR to read had print.
"^DD",358,358,.06,"DT")
2950717
"^DD",358,358,.07,0)
TOOL KIT^RS^0:NO;1:YES;^0;7^Q
"^DD",358,358,.07,.1)
SHOULD THIS FORM BE PART OF THE TOOL KIT?
"^DD",358,358,.07,1,0)
^.1
"^DD",358,358,.07,1,1,0)
358^C
"^DD",358,358,.07,1,1,1)
S ^IBE(358,"C",$E(X,1,30),DA)=""
"^DD",358,358,.07,1,1,2)
K ^IBE(358,"C",$E(X,1,30),DA)
"^DD",358,358,.07,1,1,"%D",0)
^^1^1^2930624^
"^DD",358,358,.07,1,1,"%D",1,0)
Used to find all of the tool kit forms.
"^DD",358,358,.07,1,1,"DT")
2930624
"^DD",358,358,.07,3)
Is this form part of the tool kit?
"^DD",358,358,.07,21,0)
^^3^3^2930607^
"^DD",358,358,.07,21,1,0)
 
"^DD",358,358,.07,21,2,0)
This field, if set to YES, means that the form can not be deleted and can
"^DD",358,358,.07,21,3,0)
not be added to a clinic setup.
"^DD",358,358,.07,"DT")
2931220
"^DD",358,358,.09,0)
RIGHT MARGIN^RNJ3,0X^^0;9^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",358,358,.09,.1)
FORM'S RIGHT MARGIN (WIDTH IN CHARACTERS)
"^DD",358,358,.09,3)

"^DD",358,358,.09,4)
W !,"How many columns (characters) wide should the form be?"
"^DD",358,358,.09,21,0)
^^2^2^2940711^^^^
"^DD",358,358,.09,21,1,0)
 
"^DD",358,358,.09,21,2,0)
The number of characters wide the form is.
"^DD",358,358,.09,"DT")
2940711
"^DD",358,358,.1,0)
PAGE LENGTH^RNJ3,0^^0;10^K:+X'=X!(X>300)!(X<1)!(X?.E1"."1N.N) X
"^DD",358,358,.1,.1)
FORM'S PAGE LENGTH (IN LINES)
"^DD",358,358,.1,3)
How many lines should the form have?
"^DD",358,358,.1,21,0)
^^2^2^2921213^
"^DD",358,358,.1,21,1,0)
 
"^DD",358,358,.1,21,2,0)
This is the number of usable lines on the page.
"^DD",358,358,.1,"DT")
2930420
"^DD",358,358,.11,0)
NUMBER OF PAGES^RNJ2,0^^0;11^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",358,358,.11,3)
How many pages should the encounter form have?
"^DD",358,358,.11,21,0)
^^1^1^2930602^
"^DD",358,358,.11,21,1,0)
The encounter form may have multiple pages.
"^DD",358,358,.11,"DT")
2930602
"^DD",358,358,.12,0)
SCANNABLE?^S^0:NO;1:YES;^0;12^Q
"^DD",358,358,.12,3)
Answer YES if the form will be scanned to accomplish data entry, NO otherwise.
"^DD",358,358,.12,"DT")
2940520
"^DD",358,358,.13,0)
FORM TYPE ID^NJ9,0^^0;13^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",358,358,.13,3)
Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",358,358,.13,"DT")
2940609
"^DD",358,358,.14,0)
PAPER SIZE^S^1:LETTER (8 1/2 x 11);^0;14^Q
"^DD",358,358,.14,3)
What size paper should be used?
"^DD",358,358,.14,"DT")
2940614
"^DD",358,358,.15,0)
ORIENTATION^S^p:PORTRAIT;^0;15^Q
"^DD",358,358,.15,3)
How should the form be oriented?
"^DD",358,358,.15,"DT")
2940614
"^DD",358,358,.16,0)
TEXT SIZE^RS^1:132 COLUMNS x 80 LINES;2:96 COLUMNS x 72 LINES;3:80 COLUMNS x 60 LINES;^0;16^Q
"^DD",358,358,.16,3)
This choice will determine the size of the print and how much text will fit on the form.
"^DD",358,358,.16,"DT")
2940711
"^DD",358,358,.17,0)
VERSION^NJ4,1^^0;17^K:+X'=X!(X>99)!(X<0)!(X?.E1"."2N.N) X
"^DD",358,358,.17,3)
Type a Number between 0 and 99, 1 Decimal Digit
"^DD",358,358,.17,21,0)
^^4^4^2951024^
"^DD",358,358,.17,21,1,0)
This is the version of AICS that created this form.  This is used
"^DD",358,358,.17,21,2,0)
to prevent trying to import incompatible form formats.  This is 
"^DD",358,358,.17,21,3,0)
implemented in version 2.1.  Null entries can be assumed to be 
"^DD",358,358,.17,21,4,0)
version 2.0.
"^DD",358,358,.17,"DT")
2951024
"^DD",358,358,1,0)
EXPORT NOTES^358.01^^1;0
"^DD",358,358,1,21,0)
^^3^3^2930806^
"^DD",358,358,1,21,1,0)
Used to describe the form to other sites. The form can not be displayed
"^DD",358,358,1,21,2,0)
until after it is imported. Maybe if they knew more about it they wouldn't
"^DD",358,358,1,21,3,0)
want to import it! They will be able to read the EXPORT NOTES before importing it.
"^DD",358,358,2,0)
PAGE INFORMATION^358.02^^2;0
"^DD",358,358.01,0)
EXPORT NOTES SUB-FIELD^^.01^1
"^DD",358,358.01,0,"DT")
2930806
"^DD",358,358.01,0,"NM","EXPORT NOTES")

"^DD",358,358.01,0,"UP")
358
"^DD",358,358.01,.01,0)
EXPORT NOTES^W^^0;1^Q
"^DD",358,358.01,.01,3)
What should other sites know about this form before importing it? The other site will not be able to display it until after they import it.
"^DD",358,358.01,.01,"DT")
2930806
"^DD",358,358.02,0)
PAGE INFORMATION SUB-FIELD^^.02^2
"^DD",358,358.02,0,"DT")
2950717
"^DD",358,358.02,0,"IX","B",358.02,.01)

"^DD",358,358.02,0,"NM","PAGE INFORMATION")

"^DD",358,358.02,0,"UP")
358
"^DD",358,358.02,.01,0)
PAGE NUMBER^MNJ1,0^^0;1^K:+X'=X!(X>8)!(X<1)!(X?.E1"."1N.N) X
"^DD",358,358.02,.01,1,0)
^.1
"^DD",358,358.02,.01,1,1,0)
358.02^B
"^DD",358,358.02,.01,1,1,1)
S ^IBE(358,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",358,358.02,.01,1,1,2)
K ^IBE(358,DA(1),2,"B",$E(X,1,30),DA)
"^DD",358,358.02,.01,3)
Enter the pages that should be scanned.
"^DD",358,358.02,.01,"DT")
2950717
"^DD",358,358.02,.02,0)
SCANNABLE?^S^0:NO;1:YES;^0;2^Q
"^DD",358,358.02,.02,3)
Is this page meant to be scanned?
"^DD",358,358.02,.02,"DT")
2950717
"^DD",358.1,358.1,0)
FIELD^^1^12
"^DD",358.1,358.1,0,"DT")
2930806
"^DD",358.1,358.1,0,"ID",.02)
W ""
"^DD",358.1,358.1,0,"IX","B",358.1,.01)

"^DD",358.1,358.1,0,"IX","C",358.1,.02)

"^DD",358.1,358.1,0,"IX","D",358.1,.14)

"^DD",358.1,358.1,0,"NM","IMP/EXP ENCOUNTER FORM BLOCK")

"^DD",358.1,358.1,0,"PT",358.2,.02)

"^DD",358.1,358.1,0,"PT",358.5,.02)

"^DD",358.1,358.1,0,"PT",358.7,.06)

"^DD",358.1,358.1,0,"PT",358.8,.02)

"^DD",358.1,358.1,0,"PT",358.93,.08)

"^DD",358.1,358.1,0,"VRPK")
AUTOMATED INFO COLLECTION SYS
"^DD",358.1,358.1,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",358.1,358.1,.01,1,0)
^.1
"^DD",358.1,358.1,.01,1,1,0)
358.1^B
"^DD",358.1,358.1,.01,1,1,1)
S ^IBE(358.1,"B",$E(X,1,30),DA)=""
"^DD",358.1,358.1,.01,1,1,2)
K ^IBE(358.1,"B",$E(X,1,30),DA)
"^DD",358.1,358.1,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",358.1,358.1,.01,21,0)
^^2^2^2930527^
"^DD",358.1,358.1,.01,21,1,0)
 
"^DD",358.1,358.1,.01,21,2,0)
The name of the block.
"^DD",358.1,358.1,.01,"DEL",1,0)
I '$G(IBLISTPR) W "...Encounter Form Blocks can only be deleted through the Encounter Form Utilities!"
"^DD",358.1,358.1,.02,0)
FORM^RP358'^IBE(358,^0;2^Q
"^DD",358.1,358.1,.02,1,0)
^.1
"^DD",358.1,358.1,.02,1,1,0)
358.1^C
"^DD",358.1,358.1,.02,1,1,1)
S ^IBE(358.1,"C",$E(X,1,30),DA)=""
"^DD",358.1,358.1,.02,1,1,2)
K ^IBE(358.1,"C",$E(X,1,30),DA)
"^DD",358.1,358.1,.02,1,1,"%D",0)
^^1^1^2921116^
"^DD",358.1,358.1,.02,1,1,"%D",1,0)
Used to find all the blocks belonging to a particular form.
"^DD",358.1,358.1,.02,1,1,"DT")
2921116
"^DD",358.1,358.1,.02,3)
What form should this block appear on?
"^DD",358.1,358.1,.02,21,0)
^^2^2^2930802^^
"^DD",358.1,358.1,.02,21,1,0)
 
"^DD",358.1,358.1,.02,21,2,0)
The form the block appears on.
"^DD",358.1,358.1,.02,"DT")
2930802
"^DD",358.1,358.1,.04,0)
BLOCK'S STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.1,358.1,.04,.1)
WHAT ROW SHOULD THE BLOCK START IN?
"^DD",358.1,358.1,.04,2)
S Y(0)=Y S Y=(+Y)+1
"^DD",358.1,358.1,.04,2.1)
S Y=(+Y)+1
"^DD",358.1,358.1,.04,3)
What line should this block begin on?
"^DD",358.1,358.1,.04,21,0)
^^1^1^2930715^^^
"^DD",358.1,358.1,.04,21,1,0)
The row  on the encounter form that the block starts on.
"^DD",358.1,358.1,.04,23,0)
^^4^4^2930715^
"^DD",358.1,358.1,.04,23,1,0)
The internal representation starts at 0, the external representation
"^DD",358.1,358.1,.04,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",358.1,358.1,.04,23,3,0)
it is convenient to work with displacements fromt the top left-hand
"^DD",358.1,358.1,.04,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",358.1,358.1,.04,"DT")
2930715
"^DD",358.1,358.1,.05,0)
BLOCK'S STARTING COLUMN^RNJ3,0XO^^0;5^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.1,358.1,.05,.1)
WHAT COLUMN SHOULD THE BLOCK START IN?
"^DD",358.1,358.1,.05,2)
S Y(0)=Y S Y=(+Y)+1
"^DD",358.1,358.1,.05,2.1)
S Y=(+Y)+1
"^DD",358.1,358.1,.05,3)
What column should this block begin on?
"^DD",358.1,358.1,.05,21,0)
^^1^1^2930715^^
"^DD",358.1,358.1,.05,21,1,0)
The column on the encounter form that the block starts on.
"^DD",358.1,358.1,.05,23,0)
^^4^4^2930715^
"^DD",358.1,358.1,.05,23,1,0)
The internal representation starts at 0, the external representation
"^DD",358.1,358.1,.05,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",358.1,358.1,.05,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",358.1,358.1,.05,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",358.1,358.1,.05,"DT")
2930715
"^DD",358.1,358.1,.06,0)
WIDTH IN CHARACTERS^RNJ3,0^^0;6^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.1,358.1,.06,.1)
HOW MANY CHARACTERS WIDE SHOULD THE BLOCK BE?
"^DD",358.1,358.1,.06,3)
How many characters wide should this block be?
"^DD",358.1,358.1,.06,21,0)
^^2^2^2930527^
"^DD",358.1,358.1,.06,21,1,0)
 
"^DD",358.1,358.1,.06,21,2,0)
The width of the block, measured in the number of characters across.
"^DD",358.1,358.1,.06,"DT")
2930415
"^DD",358.1,358.1,.07,0)
HEIGHT IN LINES^RNJ3,0^^0;7^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.1,358.1,.07,.1)
HOW MANY LINES HIGH SHOULD THE BLOCK BE?
"^DD",358.1,358.1,.07,3)
How many lines high should this block be?
"^DD",358.1,358.1,.07,21,0)
^^2^2^2930527^
"^DD",358.1,358.1,.07,21,1,0)
 
"^DD",358.1,358.1,.07,21,2,0)
The height of the block, measured by the number of lines it takes up.
"^DD",358.1,358.1,.07,"DT")
2930415
"^DD",358.1,358.1,.1,0)
OUTLINE TYPE^RS^1:SOLID LINE;2:INVISIBLE;^0;10^Q
"^DD",358.1,358.1,.1,.1)
OUTLINE TYPE (SOLID/INVISIBLE)
"^DD",358.1,358.1,.1,3)
Enter '1' if the block should have a box around it, '2' if not.
"^DD",358.1,358.1,.1,21,0)
^^2^2^2930527^
"^DD",358.1,358.1,.1,21,1,0)
 
"^DD",358.1,358.1,.1,21,2,0)
How the block is outlined on the form.
"^DD",358.1,358.1,.1,"DT")
2930415
"^DD",358.1,358.1,.11,0)
BLOCK HEADER^F^^0;11^K:$L(X)>60!($L(X)<1) X
"^DD",358.1,358.1,.11,.1)
WHAT HEADER WOULD SHOULD APPEAR AT THE TOP OF THE BLOCK? (OPTIONAL)
"^DD",358.1,358.1,.11,3)
What text should appear at the top of the block?
"^DD",358.1,358.1,.11,21,0)
^^2^2^2930527^
"^DD",358.1,358.1,.11,21,1,0)
 
"^DD",358.1,358.1,.11,21,2,0)
The text appearing at the top of the block.
"^DD",358.1,358.1,.11,"DT")
2930415
"^DD",358.1,358.1,.12,0)
HEADER APPEARANCE^FX^^0;12^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBC"'[$E(X,1))!("UBC"'[$E(X,2))!("UBC"'[$E(X,3)) X
"^DD",358.1,358.1,.12,.1)
HOW SHOULD THE BLOCK HEADER APPEAR? CHOOSE FROM {U,B,C}
"^DD",358.1,358.1,.12,3)
B=bold, U=underline, C=center. You can enter any combination of {B,U,C}.
"^DD",358.1,358.1,.12,21,0)
^^2^2^2930607^
"^DD",358.1,358.1,.12,21,1,0)
 
"^DD",358.1,358.1,.12,21,2,0)
A description of the block's contents and use.
"^DD",358.1,358.1,.12,"DT")
2930616
"^DD",358.1,358.1,.13,0)
BRIEF DESCRIPTION^RF^^0;13^K:$L(X)>80!($L(X)<1) X
"^DD",358.1,358.1,.13,.1)
ENTER A BRIEF DESCRIPTION OF THE USE & CONTENTS OF THE BLOCK
"^DD",358.1,358.1,.13,3)
Answer must be 1-80 characters in length.
"^DD",358.1,358.1,.13,21,0)
^^2^2^2930607^
"^DD",358.1,358.1,.13,21,1,0)
 
"^DD",358.1,358.1,.13,21,2,0)
A brief description of the contents or use of the block.
"^DD",358.1,358.1,.13,"DT")
2930415
"^DD",358.1,358.1,.14,0)
TOOL KIT ORDER^NJ6,2^^0;14^K:+X'=X!(X>999.99)!(X<0)!(X?.E1"."3N.N) X
"^DD",358.1,358.1,.14,1,0)
^.1
"^DD",358.1,358.1,.14,1,1,0)
358.1^D
"^DD",358.1,358.1,.14,1,1,1)
S ^IBE(358.1,"D",$E(X,1,30),DA)=""
"^DD",358.1,358.1,.14,1,1,2)
K ^IBE(358.1,"D",$E(X,1,30),DA)
"^DD",358.1,358.1,.14,1,1,"%D",0)
^^2^2^2930108^
"^DD",358.1,358.1,.14,1,1,"%D",1,0)
This index is used to locate all the 'tool box' blocs that can be used 
"^DD",358.1,358.1,.14,1,1,"%D",2,0)
as templates to create a new block to be added to a form.
"^DD",358.1,358.1,.14,1,1,"DT")
2930108
"^DD",358.1,358.1,.14,3)
Enter a numeric value >0 if this block is part of the tool kit. The number will determine its listed order.
"^DD",358.1,358.1,.14,21,0)
^^4^4^2930607^
"^DD",358.1,358.1,.14,21,1,0)
 
"^DD",358.1,358.1,.14,21,2,0)
A value greater than 0 means that the block belongs to the tool kit. The
"^DD",358.1,358.1,.14,21,3,0)
value also determines the order that the block will be listed to the
"^DD",358.1,358.1,.14,21,4,0)
screen that displays the tool kit blocks.
"^DD",358.1,358.1,.14,"DT")
2930309
"^DD",358.1,358.1,1,0)
EXPORT NOTES^358.11^^1;0
"^DD",358.1,358.1,1,21,0)
^^2^2^2930806^
"^DD",358.1,358.1,1,21,1,0)
Should be give other sites information that will enable them to decide
"^DD",358.1,358.1,1,21,2,0)
whether or not they want to import the block. Only applies to tool kit blocks.
"^DD",358.1,358.11,0)
EXPORT NOTES SUB-FIELD^^.01^1
"^DD",358.1,358.11,0,"DT")
2930806
"^DD",358.1,358.11,0,"NM","EXPORT NOTES")

"^DD",358.1,358.11,0,"UP")
358.1
"^DD",358.1,358.11,.01,0)
EXPORT NOTES^W^^0;1^Q
"^DD",358.1,358.11,.01,3)
What should other sites know about this tool kit block before importing it?
"^DD",358.1,358.11,.01,"DT")
2930806
"^DD",358.2,358.2,0)
FIELD^^2^18
"^DD",358.2,358.2,0,"DDA")
N
"^DD",358.2,358.2,0,"DT")
2960123
"^DD",358.2,358.2,0,"ID",.02)
W ""
"^DD",358.2,358.2,0,"ID",.11)
W ""
"^DD",358.2,358.2,0,"IX","B",358.2,.01)

"^DD",358.2,358.2,0,"IX","C",358.2,.02)

"^DD",358.2,358.2,0,"NM","IMP/EXP SELECTION LIST")

"^DD",358.2,358.2,0,"PT",358.3,.03)

"^DD",358.2,358.2,0,"PT",358.4,.03)

"^DD",358.2,358.2,0,"VRPK")
AUTOMATED INFO COLLECTION SYS
"^DD",358.2,358.2,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",358.2,358.2,.01,1,0)
^.1
"^DD",358.2,358.2,.01,1,1,0)
358.2^B
"^DD",358.2,358.2,.01,1,1,1)
S ^IBE(358.2,"B",$E(X,1,30),DA)=""
"^DD",358.2,358.2,.01,1,1,2)
K ^IBE(358.2,"B",$E(X,1,30),DA)
"^DD",358.2,358.2,.01,3)
Answer must be 3-30 characters in length.
"^DD",358.2,358.2,.01,21,0)
^^2^2^2930527^
"^DD",358.2,358.2,.01,21,1,0)
 
"^DD",358.2,358.2,.01,21,2,0)
The name of the list.
"^DD",358.2,358.2,.01,"DEL",1,0)
I '$G(IBLISTPR) W "...Selection Lists can only be deleted through the Encounter Form Utilities!"
"^DD",358.2,358.2,.01,"DT")
2921119
"^DD",358.2,358.2,.02,0)
BLOCK^RP358.1'^IBE(358.1,^0;2^Q
"^DD",358.2,358.2,.02,1,0)
^.1
"^DD",358.2,358.2,.02,1,1,0)
358.2^C
"^DD",358.2,358.2,.02,1,1,1)
S ^IBE(358.2,"C",$E(X,1,30),DA)=""
"^DD",358.2,358.2,.02,1,1,2)
K ^IBE(358.2,"C",$E(X,1,30),DA)
"^DD",358.2,358.2,.02,1,1,"DT")
2921207
"^DD",358.2,358.2,.02,3)
Enter the block that the selection list should appear in.
"^DD",358.2,358.2,.02,21,0)
^^2^2^2930527^
"^DD",358.2,358.2,.02,21,1,0)
The block that the list appears on. The position of the selection list is
"^DD",358.2,358.2,.02,21,2,0)
relative to the block.
"^DD",358.2,358.2,.02,"DT")
2921207
"^DD",358.2,358.2,.04,0)
SUBCOLUMN HEADER APPEARANCE^FX^^0;4^S X=$$UPPER^VALM1(X) K:$L(X)>1!("R"'[$E(X,1)) X
"^DD",358.2,358.2,.04,.1)
HOW SHOULD THE SUBCOLUMN HEADERS APPEAR? ENTER 'R' FOR REVERSE PRINTING.
"^DD",358.2,358.2,.04,3)
R=Reverse Printing
"^DD",358.2,358.2,.04,"DT")
2940531
"^DD",358.2,358.2,.05,0)
COLUMN HEADER^F^^0;5^K:$L(X)>70!($L(X)<1) X
"^DD",358.2,358.2,.05,.1)
WHAT TEXT SHOULD APPEAR AT THE TOP OF EACH COLUMN? (OPTIONAL)
"^DD",358.2,358.2,.05,3)
This header will appear at the top of the column that contains the list. If there is more than one column it will appear at the top of each.
"^DD",358.2,358.2,.05,21,0)
^^2^2^2930527^
"^DD",358.2,358.2,.05,21,1,0)
 
"^DD",358.2,358.2,.05,21,2,0)
The text that appears at the top of each column (NOT subcolumn).
"^DD",358.2,358.2,.05,"DT")
2930415
"^DD",358.2,358.2,.06,0)
COLUMN HEADER APPEARANCE^FX^^0;6^S X=$$UPPER^VALM1(X) K:$L(X)>4!("UBRC"'[$E(X,1))!("UBRC"'[$E(X,2))!("UBRC"'[$E(X,3))!("UBRC"'[$E(X,4)) X
"^DD",358.2,358.2,.06,.1)
HOW SHOULD THE COLUMN HEADER APPEAR? CHOOSE FROM {U,B,R,C}
"^DD",358.2,358.2,.06,3)
B=bold,U=underline,R=reverse,C=center. You can enter any combination of {B,U,R,C}.
"^DD",358.2,358.2,.06,21,0)
^^2^2^2940531^^^
"^DD",358.2,358.2,.06,21,1,0)
 
"^DD",358.2,358.2,.06,21,2,0)
The column header can be give characteristics, such as centered and bold.
"^DD",358.2,358.2,.06,"DT")
2940531
"^DD",358.2,358.2,.07,0)
SUBCOLUMNS SEPARATED WITH?^RS^1:ONE SPACE;2:TWO SPACES;3:LINE;4:SPACE/LINE/SPACE;^0;7^Q
"^DD",358.2,358.2,.07,.1)
HOW SHOULD THE SUBCOLUMNS BE SEPARATED?
"^DD",358.2,358.2,.07,3)
How should the subcolumns be separated?
"^DD",358.2,358.2,.07,21,0)
^^2^2^2930527^
"^DD",358.2,358.2,.07,21,1,0)
 
"^DD",358.2,358.2,.07,21,2,0)
What characters are used to separate the subcolumns.
"^DD",358.2,358.2,.07,"DT")
2930415
"^DD",358.2,358.2,.08,0)
EXTRA LINES FOR SELECTIONS^NJ1,0^^0;8^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.2,358.2,.08,.1)
NUMBER OF ADDITIONAL LINES FOR EACH ENTRY ON LIST?
"^DD",358.2,358.2,.08,3)
How many extra lines should be allocated for each selection, in addition to the 1 the selection will print on?
"^DD",358.2,358.2,.08,21,0)
^^4^4^2930527^
"^DD",358.2,358.2,.08,21,1,0)
 
"^DD",358.2,358.2,.08,21,2,0)
Each entry on the list prints on only one line. However, if you want
"^DD",358.2,358.2,.08,21,3,0)
extra space to appear below each entry on the list then this field should
"^DD",358.2,358.2,.08,21,4,0)
be set to the number of blank lines desired.
"^DD",358.2,358.2,.08,"DT")
2930427
"^DD",358.2,358.2,.09,0)
GROUP HEADER APPEARANCE^FX^^0;9^S X=$$UPPER^VALM1(X) K:$L(X)>4!("UBRC"'[$E(X,1))!("UBRC"'[$E(X,2))!("UBRC"'[$E(X,3))!("UBRC"'[$E(X,4)) X
"^DD",358.2,358.2,.09,.1)
HOW SHOULD THE HEADER FOR EACH GROUP OF ENTRIES APPEAR? CHOOSE FROM {U,B,R,C}
"^DD",358.2,358.2,.09,3)
B=bold,R=reverse,C=center,U=underline. You can use any combination of {B,R,C,U}
"^DD",358.2,358.2,.09,21,0)
^^1^1^2940527^^^^
"^DD",358.2,358.2,.09,21,1,0)
This field determines the appearance of the group headers.
"^DD",358.2,358.2,.09,"DT")
2940527
"^DD",358.2,358.2,.11,0)
SELECTION ROUTINE^R*P358.6'^IBE(358.6,^0;11^S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",358.2,358.2,.11,3)
Enter the package interface used to obtain this list.
"^DD",358.2,358.2,.11,12)
Allows only available selection routines.
"^DD",358.2,358.2,.11,12.1)
S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1"
"^DD",358.2,358.2,.11,21,0)
^^2^2^2930527^
"^DD",358.2,358.2,.11,21,1,0)
 
"^DD",358.2,358.2,.11,21,2,0)
This identifies the Package Interface that is used to fill the list.
"^DD",358.2,358.2,.11,"DT")
2930115
"^DD",358.2,358.2,.12,0)
UNDERLINE SELECTIONS?^RS^0:NO;1:YES;^0;12^Q
"^DD",358.2,358.2,.12,.1)
SHOULD EACH ENTRY ON THE LIST BE UNDERLINED? (YES/NO)
"^DD",358.2,358.2,.12,3)
Should the items on the list be underlined?
"^DD",358.2,358.2,.12,21,0)
^^2^2^2930527^
"^DD",358.2,358.2,.12,21,1,0)
 
"^DD",358.2,358.2,.12,21,2,0)
Answer yes if each entry on the list should be underlined.
"^DD",358.2,358.2,.12,"DT")
2930414
"^DD",358.2,358.2,.13,0)
NUMBER OF COLUMNS^NJ2,0^^0;13^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.2,358.2,.13,.1)
HOW MANY COLUMNS OF LIST ENTRIES SHOULD THE LIST HAVE? (OPTIONAL)
"^DD",358.2,358.2,.13,3)

"^DD",358.2,358.2,.13,4)
D HELP5^IBDFU5
"^DD",358.2,358.2,.13,21,0)
^^6^6^2930527^
"^DD",358.2,358.2,.13,21,1,0)
 
"^DD",358.2,358.2,.13,21,2,0)
A selection list may be displayed in an area several columns wide. The
"^DD",358.2,358.2,.13,21,3,0)
starting position and height of each column may be specified. However, it
"^DD",358.2,358.2,.13,21,4,0)
is not necessary because defaults values will be used. The defaults used
"^DD",358.2,358.2,.13,21,5,0)
assume that nothing else is going in the block except the selection list
"^DD",358.2,358.2,.13,21,6,0)
and that the entire block should be filled.
"^DD",358.2,358.2,.13,"DT")
2930802
"^DD",358.2,358.2,.14,0)
DYNAMIC SELECTIONS^S^0:NO;1:YES;^0;14^Q
"^DD",358.2,358.2,.14,3)
Answer YES if the list of selecitons are created at print time.
"^DD",358.2,358.2,.14,"DT")
2950717
"^DD",358.2,358.2,.15,0)
PRINT COMPLETE^S^0:NO;1:YES;^0;15^Q
"^DD",358.2,358.2,.15,3)
If the data on the list won't fit on the form, should it be printed on a separate page?
"^DD",358.2,358.2,.15,21,0)
^^1^1^2950717^
"^DD",358.2,358.2,.15,21,1,0)
Applies only to dynamic selection lists.
"^DD",358.2,358.2,.15,"DT")
2950717
"^DD",358.2,358.2,.16,0)
NUMBER OF OTHER^NJ1,0^^0;16^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.2,358.2,.16,3)
Allocate space for how many 'other' not found on the list?
"^DD",358.2,358.2,.16,21,0)
^^2^2^2950717^
"^DD",358.2,358.2,.16,21,1,0)
Space will be allocated at the bottom of the lsit for this number of items
"^DD",358.2,358.2,.16,21,2,0)
not found on the list.
"^DD",358.2,358.2,.16,"DT")
2950717
"^DD",358.2,358.2,.17,0)
WHAT TO ALLOCATE SPACE FOR^S^1:NARRATIVE ONLY;2:CODE ONLY;3:NARRATIVE AND CODE;^0;17^Q
"^DD",358.2,358.2,.17,3)
What should space be allocated for when making room for 'other'?
"^DD",358.2,358.2,.17,21,0)
^^2^2^2950803^^
"^DD",358.2,358.2,.17,21,1,0)
This field will determine what fields will be placed on the form for
"^DD",358.2,358.2,.17,21,2,0)
writting in other items not found on the list.
"^DD",358.2,358.2,.17,"DT")
2950717
"^DD",358.2,358.2,.18,0)
WHAT TO SEND TO PCE^S^1:NARRATIVE ONLY;2:CODE ONLY;3:NARRATIVE AND CODE;^0;18^Q
"^DD",358.2,358.2,.18,3)
WHAT DO YOU WANT ENTERED INTO THE DATABASE?
"^DD",358.2,358.2,.18,21,0)
^^2^2^2960123^
"^DD",358.2,358.2,.18,21,1,0)
This determines what is sent to PCE.  For example, some types of data
"^DD",358.2,358.2,.18,21,2,0)
may require that a code be sent, but the narrative may be optional.
"^DD",358.2,358.2,.18,"DT")
2960123
"^DD",358.2,358.2,1,0)
LIST COLUMN^358.21I^^1;0
"^DD",358.2,358.2,1,21,0)
^^2^2^2940216^^^^
"^DD",358.2,358.2,1,21,1,0)
A column is a rectangular area that has the necessary width to display a
"^DD",358.2,358.2,1,21,2,0)
single item on the list.
"^DD",358.2,358.2,1,"DT")
2930802
"^DD",358.2,358.2,2,0)
SUBCOLUMN NUMBER^358.22I^^2;0
"^DD",358.2,358.2,2,21,0)
^^4^4^2941020^^^^
"^DD",358.2,358.2,2,21,1,0)
 
"^DD",358.2,358.2,2,21,2,0)
A subcolumn contains one field of the entry on the list. The subcolumn
"^DD",358.2,358.2,2,21,3,0)
order is the order, from left to right, that the subcolumns will appear
"^DD",358.2,358.2,2,21,4,0)
in.
"^DD",358.2,358.2,2,"DT")
2930413
"^DD",358.2,358.21,0)
LIST COLUMN SUB-FIELD^^.04^4
"^DD",358.2,358.21,0,"DT")
2930331
"^DD",358.2,358.21,0,"ID","WRITE")
D EN^DDIOL("   COLUMN #"_$P($G(^(0)),U),"","?0")
"^DD",358.2,358.21,0,"IX","B",358.21,.01)

"^DD",358.2,358.21,0,"NM","LIST COLUMN")

"^DD",358.2,358.21,0,"UP")
358.2
"^DD",358.2,358.21,.01,0)
LIST COLUMN NUMBER^MNJ1,0^^0;1^K:+X'=X!(X>4)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.2,358.21,.01,1,0)
^.1
"^DD",358.2,358.21,.01,1,1,0)
358.21^B
"^DD",358.2,358.21,.01,1,1,1)
S ^IBE(358.2,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",358.2,358.21,.01,1,1,2)
K ^IBE(358.2,DA(1),1,"B",$E(X,1,30),DA)
"^DD",358.2,358.21,.01,3)
You can specify the position and height of up to 4 columns. Defaults will be used where needed.
"^DD",358.2,358.21,.01,21,0)
^^2^2^2930722^^
"^DD",358.2,358.21,.01,21,1,0)
The order that the columns will be filled. Column 1 will first be filled
"^DD",358.2,358.21,.01,21,2,0)
with items, then column 2, etc.
"^DD",358.2,358.21,.01,"DT")
2930802
"^DD",358.2,358.21,.02,0)
LIST COLUMN'S STARTING ROW^NJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.2,358.21,.02,.1)
WHAT ROW SHOULD THE LIST COLUMN START IN? (OPTIONAL)
"^DD",358.2,358.21,.02,2)
S Y(0)=Y S:+Y=Y Y=+Y+1
"^DD",358.2,358.21,.02,2.1)
S:+Y=Y Y=+Y+1
"^DD",358.2,358.21,.02,3)
What row should the column begin in?
"^DD",358.2,358.21,.02,21,0)
^^2^2^2930715^^^
"^DD",358.2,358.21,.02,21,1,0)
The row, relative to the block, that the column should begin in. This is
"^DD",358.2,358.21,.02,21,2,0)
optional, since default values can be used.
"^DD",358.2,358.21,.02,23,0)
^^4^4^2930715^^
"^DD",358.2,358.21,.02,23,1,0)
The internal representation starts at 0, the external representation
"^DD",358.2,358.21,.02,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",358.2,358.21,.02,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",358.2,358.21,.02,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",358.2,358.21,.02,"DT")
2930802
"^DD",358.2,358.21,.03,0)
LIST COLUMN'S STARTING COLUMN^NJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.2,358.21,.03,.1)
WHAT BLOCK COLUMN SHOULD THE LIST COLUMN START IN? (OPTIONAL)
"^DD",358.2,358.21,.03,2)
S Y(0)=Y S:+Y=Y Y=+Y+1
"^DD",358.2,358.21,.03,2.1)
S:+Y=Y Y=+Y+1
"^DD",358.2,358.21,.03,3)
At what block column should the list column begin at? The first subcolumn of the list column will start one character to the right of this.
"^DD",358.2,358.21,.03,21,0)
^^4^4^2940216^
"^DD",358.2,358.21,.03,21,1,0)
 
"^DD",358.2,358.21,.03,21,2,0)
The column (# of characters to the right) that the list column should
"^DD",358.2,358.21,.03,21,3,0)
begin in, relative to the block. It is optional, since a default value can
"^DD",358.2,358.21,.03,21,4,0)
be used.
"^DD",358.2,358.21,.03,23,0)
^^4^4^2930715^
"^DD",358.2,358.21,.03,23,1,0)
The internal representation starts at 0, the external representation
"^DD",358.2,358.21,.03,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",358.2,358.21,.03,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",358.2,358.21,.03,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",358.2,358.21,.03,"DT")
2930930
"^DD",358.2,358.21,.04,0)
LIST COLUMN HEIGHT^NJ3,0^^0;4^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.2,358.21,.04,.1)
HOW MANY LINES HIGH SHOULD THE LIST COLUMN BE? (OPTIONAL)
"^DD",358.2,358.21,.04,3)
How many lines should the column cover?
"^DD",358.2,358.21,.04,21,0)
^^3^3^2930527^
"^DD",358.2,358.21,.04,21,1,0)
 
"^DD",358.2,358.21,.04,21,2,0)
The number of lines the column should occupy. This is optional - if not
"^DD",358.2,358.21,.04,21,3,0)
supplied the column will extend to the bottom of the block.
"^DD",358.2,358.21,.04,"DT")
2930802
"^DD",358.2,358.22,0)
SUBCOLUMN NUMBER SUB-FIELD^^.1^10
"^DD",358.2,358.22,0,"DT")
2960123
"^DD",358.2,358.22,0,"ID","WRITE")
D ID1^IBDFU5
"^DD",358.2,358.22,0,"IX","B",358.22,.01)

"^DD",358.2,358.22,0,"NM","SUBCOLUMN NUMBER")

"^DD",358.2,358.22,0,"UP")
358.2
"^DD",358.2,358.22,.01,0)
SUBCOLUMN NUMBER^MRNJ1,0X^^0;1^K:+X'=X!(X>6)!(X<1)!(X?.E1"."1N.N)!($D(^IBE(358.2,DA(1),2,"B",X))) X
"^DD",358.2,358.22,.01,.1)
Number of the subcolumn, subcolumns being numbered 1-6, left-to-right
"^DD",358.2,358.22,.01,1,0)
^.1
"^DD",358.2,358.22,.01,1,1,0)
358.22^B
"^DD",358.2,358.22,.01,1,1,1)
S ^IBE(358.2,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",358.2,358.22,.01,1,1,2)
K ^IBE(358.2,DA(1),2,"B",$E(X,1,30),DA)
"^DD",358.2,358.22,.01,3)
The SUBCOLUMN NUMBER determines the order in which the subcolumns will display. There are at most 6 subcolumns, numbered 1-6.
"^DD",358.2,358.22,.01,21,0)
^^2^2^2930527^
"^DD",358.2,358.22,.01,21,1,0)
 
"^DD",358.2,358.22,.01,21,2,0)
The order that the subcolumn will appear on the form.
"^DD",358.2,358.22,.01,"DT")
2930413
"^DD",358.2,358.22,.02,0)
SUBCOLUMN HEADER^F^^0;2^K:$L(X)>150!($L(X)<1) X
"^DD",358.2,358.22,.02,.1)
WHAT TEXT SHOULD APPEAR AT THE TOP OF THE SUBCOLUMN?
"^DD",358.2,358.22,.02,3)
What text should appear at the top of the subcolumn?
"^DD",358.2,358.22,.02,21,0)
^^2^2^2930527^
"^DD",358.2,358.22,.02,21,1,0)
 
"^DD",358.2,358.22,.02,21,2,0)
The text that will appear at the top of the subcolumn.
"^DD",358.2,358.22,.02,"DT")
2930414
"^DD",358.2,358.22,.03,0)
SUBCOLUMN WIDTH^NJ3,0^^0;3^K:+X'=X!(X>150)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.2,358.22,.03,.1)
HOW WIDE SHOULD THE SUBCOLUMN BE?
"^DD",358.2,358.22,.03,3)
How wide should the subcolumn be?
"^DD",358.2,358.22,.03,21,0)
^^3^3^2930527^
"^DD",358.2,358.22,.03,21,1,0)
 
"^DD",358.2,358.22,.03,21,2,0)
The width of the subcolumn. If the subcolumn contains a MARKING AREA then
"^DD",358.2,358.22,.03,21,3,0)
the width of the MARKING AREA overrides what ever this is.
"^DD",358.2,358.22,.03,"DT")
2930414
"^DD",358.2,358.22,.04,0)
TYPE OF SUBCOLUMN^RS^1:TEXT;2:MARKING;^0;4^Q
"^DD",358.2,358.22,.04,.1)
SUBCOLUMN CONTAINS TEXT, OR FOR MARKING? (TEXT/MARKING)
"^DD",358.2,358.22,.04,3)
Enter '1' if the subcolumn will contain text, '2' if it will be for the user to mark his selections.
"^DD",358.2,358.22,.04,21,0)
^^4^4^2930527^
"^DD",358.2,358.22,.04,21,1,0)
 
"^DD",358.2,358.22,.04,21,2,0)
The subcolumn can contain either text, derived from what is returned by
"^DD",358.2,358.22,.04,21,3,0)
the PACKAGE INTERFACE, or a MARKING AREA, which is meant to be written in
"^DD",358.2,358.22,.04,21,4,0)
to select an entry on the list.
"^DD",358.2,358.22,.04,"DT")
2930428
"^DD",358.2,358.22,.05,0)
SUBCOLUMN'S DATA^NJ1,0X^^0;5^K:+X'=X!(X>7)!(X<1)!(X?.E1"."1N.N)!($P($G(^IBE(358.6,+$P($G(^IBE(358.2,DA(1),0)),U,11),2)),U,(2*X)-1)="")!((X=1)&'$P($G(^IBE(358.6,+$P($G(^IBE(358.2,DA(1),0)),U,11),2)),U,17)) X
"^DD",358.2,358.22,.05,.1)
WHAT DATA SHOULD BE CONTAINED IN THE SUBCOLUMN?
"^DD",358.2,358.22,.05,3)
WHAT DATA SHOULD BE CONTAINED IN THE SUBCOLUMN?
"^DD",358.2,358.22,.05,4)
D HELP2^IBDFU5
"^DD",358.2,358.22,.05,21,0)
^^3^3^2940719^^
"^DD",358.2,358.22,.05,21,1,0)
 
"^DD",358.2,358.22,.05,21,2,0)
The Package Interface returns a record, which is composed of fields. This
"^DD",358.2,358.22,.05,21,3,0)
identifies which field goes in the subcolumn.
"^DD",358.2,358.22,.05,"DT")
2940719
"^DD",358.2,358.22,.06,0)
MARKING AREA^P358.91'^IBE(358.91,^0;6^Q
"^DD",358.2,358.22,.06,.1)
TYPE OF MARKING AREA
"^DD",358.2,358.22,.06,3)
What type of marking area should appear in the subcolumn?
"^DD",358.2,358.22,.06,21,0)
^^2^2^2930527^
"^DD",358.2,358.22,.06,21,1,0)
 
"^DD",358.2,358.22,.06,21,2,0)
This identifies which MARKING AREA should go in the subcolumn.
"^DD",358.2,358.22,.06,"DT")
2930414
"^DD",358.2,358.22,.07,0)
ALLOW EDITING OF TEXT?^S^0:NO;1:YES;^0;7^Q
"^DD",358.2,358.22,.07,.1)
ALLOW EDITING OF THE TEXT APPEARING IN THIS SUBCOLUMN? (YES/NO)
"^DD",358.2,358.22,.07,3)
Is it okey to edit the text appearing in this subcolumn?
"^DD",358.2,358.22,.07,21,0)
^^4^4^2930527^
"^DD",358.2,358.22,.07,21,1,0)
 
"^DD",358.2,358.22,.07,21,2,0)
This determines whether or not the user, when selecting items to appear on
"^DD",358.2,358.22,.07,21,3,0)
the list, will be able to edit the text appearing in the subcolum. This is
"^DD",358.2,358.22,.07,21,4,0)
ignored if the subcolumn contains a MARKING AREA.
"^DD",358.2,358.22,.07,"DT")
2930428
"^DD",358.2,358.22,.08,0)
DO NOT UNDERLINE MARKING AREA?^S^0:NO;1:YES;^0;8^Q
"^DD",358.2,358.22,.08,3)
Enter YES if you do NOT want this subcolumn underlined.
"^DD",358.2,358.22,.08,"DT")
2940607
"^DD",358.2,358.22,.09,0)
DATA QUALIFIER^P358.98'^IBD(358.98,^0;9^Q
"^DD",358.2,358.22,.09,"DT")
2941020
"^DD",358.2,358.22,.1,0)
SELECTION RULE^S^0:ANY NUMBER;1:EXACTLY ONE;2:AT MOST ONE (0 or 1);3:AT LEAST ONE (1 or more);^0;10^Q
"^DD",358.2,358.22,.1,3)
Which rule applies to the choices the user can make in this subcolumn?
"^DD",358.2,358.22,.1,21,0)
^^2^2^2960123^
"^DD",358.2,358.22,.1,21,1,0)
A selection rule can be applied to a subcolumn used to make selections,
"^DD",358.2,358.22,.1,21,2,0)
i.e., one that contains marking areas.
"^DD",358.2,358.22,.1,"DT")
2960123
"^DD",358.3,358.3,0)
FIELD^^2.04^14
"^DD",358.3,358.3,0,"DT")
2961031
"^DD",358.3,358.3,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(358.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(358.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",358.3,358.3,0,"ID",.04)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(358.4,+$P(^(0),U,4),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(358.4,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",358.3,358.3,0,"IX","APO",358.3,.03)

"^DD",358.3,358.3,0,"IX","APO1",358.3,.04)

"^DD",358.3,358.3,0,"IX","APO2",358.3,.05)

"^DD",358.3,358.3,0,"IX","B",358.3,.01)

"^DD",358.3,358.3,0,"IX","C",358.3,.03)

"^DD",358.3,358.3,0,"IX","D",358.3,.04)

"^DD",358.3,358.3,0,"NM","IMP/EXP SELECTION")

"^DD",358.3,358.3,0,"VRPK")
AUTOMATED INFO COLLECTION SYS
"^DD",358.3,358.3,.01,0)
SELECTION ID^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",358.3,358.3,.01,1,0)
^.1
"^DD",358.3,358.3,.01,1,1,0)
358.3^B
"^DD",358.3,358.3,.01,1,1,1)
S ^IBE(358.3,"B",$E(X,1,30),DA)=""
"^DD",358.3,358.3,.01,1,1,2)
K ^IBE(358.3,"B",$E(X,1,30),DA)
"^DD",358.3,358.3,.01,3)
Answer must be 3-30 characters in length.
"^DD",358.3,358.3,.01,21,0)
^^2^2^2930309^
"^DD",358.3,358.3,.01,21,1,0)
 
"^DD",358.3,358.3,.01,21,2,0)
The ID passed by the package.
"^DD",358.3,358.3,.01,"DT")
2921119
"^DD",358.3,358.3,.02,0)
PLACE HOLDER ONLY^S^0:NO;1:YES;^0;2^Q
"^DD",358.3,358.3,.02,3)
Enter YES if this is a place holder, used to add some space to the list.
"^DD",358.3,358.3,.02,"DT")
2950717
"^DD",358.3,358.3,.03,0)
SELECTION LIST^RP358.2'^IBE(358.2,^0;3^Q
"^DD",358.3,358.3,.03,1,0)
^.1
"^DD",358.3,358.3,.03,1,1,0)
358.3^C
"^DD",358.3,358.3,.03,1,1,1)
S ^IBE(358.3,"C",$E(X,1,30),DA)=""
"^DD",358.3,358.3,.03,1,1,2)
K ^IBE(358.3,"C",$E(X,1,30),DA)
"^DD",358.3,358.3,.03,1,1,"DT")
2921127
"^DD",358.3,358.3,.03,1,2,0)
358.3^APO^MUMPS
"^DD",358.3,358.3,.03,1,2,1)
I $P($G(^IBE(358.3,DA,0)),U,5)]"",$P(^(0),U,4) S ^IBE(358.3,"APO",X,$P(^(0),U,4),$P(^(0),U,5),DA)=""
"^DD",358.3,358.3,.03,1,2,2)
I $P($G(^IBE(358.3,DA,0)),U,5)]"",$P(^(0),U,4) K ^IBE(358.3,"APO",X,$P(^(0),U,4),$P(^(0),U,5),DA)
"^DD",358.3,358.3,.03,1,2,"DT")
2960403
"^DD",358.3,358.3,.03,21,0)
^^2^2^2921215^
"^DD",358.3,358.3,.03,21,1,0)
 
"^DD",358.3,358.3,.03,21,2,0)
Identifies the selection list that this selection belongs on.
"^DD",358.3,358.3,.03,"DT")
2960403
"^DD",358.3,358.3,.04,0)
SELECTION GROUP^RP358.4^IBE(358.4,^0;4^Q
"^DD",358.3,358.3,.04,1,0)
^.1
"^DD",358.3,358.3,.04,1,1,0)
358.3^D
"^DD",358.3,358.3,.04,1,1,1)
S ^IBE(358.3,"D",$E(X,1,30),DA)=""
"^DD",358.3,358.3,.04,1,1,2)
K ^IBE(358.3,"D",$E(X,1,30),DA)
"^DD",358.3,358.3,.04,1,1,"DT")
2921221
"^DD",358.3,358.3,.04,1,2,0)
358.3^APO1^MUMPS
"^DD",358.3,358.3,.04,1,2,1)
I $P($G(^IBE(358.3,DA,0)),U,5)]"",$P(^(0),U,3) S ^IBE(358.3,"APO",$P(^(0),U,3),X,$P(^(0),U,5),DA)=""
"^DD",358.3,358.3,.04,1,2,2)
I $P($G(^IBE(358.3,DA,0)),U,5)]"",$P(^(0),U,3) K ^IBE(358.3,"APO",$P(^(0),U,3),X,$P(^(0),U,5),DA)
"^DD",358.3,358.3,.04,1,2,"DT")
2960403
"^DD",358.3,358.3,.04,3)
Entries on a list are grouped under group headers - under which header should this entry appear?
"^DD",358.3,358.3,.04,21,0)
^^3^3^2930607^
"^DD",358.3,358.3,.04,21,1,0)
 
"^DD",358.3,358.3,.04,21,2,0)
The SELECTION GROUP that the selection belongs to.The selection will
"^DD",358.3,358.3,.04,21,3,0)
appear under the group header on the form.
"^DD",358.3,358.3,.04,"DT")
2960403
"^DD",358.3,358.3,.05,0)
PRINT ORDER WITHIN GROUP^RNJ6,2^^0;5^K:+X'=X!(X>999.99)!(X<0)!(X?.E1"."3N.N) X
"^DD",358.3,358.3,.05,1,0)
^.1
"^DD",358.3,358.3,.05,1,1,0)
358.3^APO2^MUMPS
"^DD",358.3,358.3,.05,1,1,1)
I $P($G(^IBE(358.3,DA,0)),U,3),$P(^(0),U,4) S ^IBE(358.3,"APO",$P(^(0),U,3),$P(^(0),U,4),X,DA)=""
"^DD",358.3,358.3,.05,1,1,2)
I $P(^IBE(358.3,DA,0),U,3),$P(^(0),U,4) K ^IBE(358.3,"APO",$P(^(0),U,3),$P(^(0),U,4),X,DA)
"^DD",358.3,358.3,.05,1,1,"DT")
2960403
"^DD",358.3,358.3,.05,3)
Type a Number between 0 and 999.99, 2 Decimal Digits
"^DD",358.3,358.3,.05,21,0)
^^2^2^2921229^^^^
"^DD",358.3,358.3,.05,21,1,0)
Determines the order that this selection entry will appear in under the
"^DD",358.3,358.3,.05,21,2,0)
header for the selection group.
"^DD",358.3,358.3,.05,"DT")
2960403
"^DD",358.3,358.3,.06,0)
PLACE HOLDER TEXT^F^^0;6^K:$L(X)>75!($L(X)<1) X
"^DD",358.3,358.3,.06,3)
What text should be displayed for the place holder?
"^DD",358.3,358.3,.06,"DT")
2950717
"^DD",358.3,358.3,.07,0)
USE AS PLACE HOLDER^S^0:NO;1:YES;^0;7^Q
"^DD",358.3,358.3,.07,3)
Does the place holder serve as a subheader?
"^DD",358.3,358.3,.07,21,0)
^^2^2^2950928^
"^DD",358.3,358.3,.07,21,1,0)
If the place holder is being used as a subheader its text should be
"^DD",358.3,358.3,.07,21,2,0)
included with the narrative. This field implements that.
"^DD",358.3,358.3,.07,"DT")
2950928
"^DD",358.3,358.3,.08,0)
END USE AS SUBHEADER?^S^0:NO;1:YES;^0;8^Q
"^DD",358.3,358.3,.08,3)
Should the prior subheader be discarded?
"^DD",358.3,358.3,.08,21,0)
^^2^2^2951002^
"^DD",358.3,358.3,.08,21,1,0)
This field is used to end the use of any prior subheader that is in
"^DD",358.3,358.3,.08,21,2,0)
effect. Applies only to selections defined to be place holders.
"^DD",358.3,358.3,.08,"DT")
2951002
"^DD",358.3,358.3,.09,0)
QUANTITY^NJ3,0^^0;9^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.3,358.3,.09,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",358.3,358.3,.09,21,0)
^^3^3^2961031^
"^DD",358.3,358.3,.09,21,1,0)
This field contains the number of occurrences for a particular selection.
"^DD",358.3,358.3,.09,21,2,0)
A value placed in this field will be passed to PCE as the quantity.
"^DD",358.3,358.3,.09,21,3,0)
Presently, the quantity field will only be asked for CPT codes.
"^DD",358.3,358.3,.09,"DT")
2961031
"^DD",358.3,358.3,1,0)
SUBCOLUMN VALUE^358.31IA^^1;0
"^DD",358.3,358.3,1,21,0)
^^3^3^2930527^
"^DD",358.3,358.3,1,21,1,0)
 
"^DD",358.3,358.3,1,21,2,0)
The selection can be composed of multiple fields. Each field occupies its
"^DD",358.3,358.3,1,21,3,0)
own subcolumn on the form.
"^DD",358.3,358.3,2.01,0)
NARRATIVE TO SEND TO PCE^F^^2;1^K:$L(X)>150!($L(X)<1) X
"^DD",358.3,358.3,2.01,3)
Enter the narrative to send to PCE if a provider narrative different from the description is desired.  Answer must be 3-80 characters in length.
"^DD",358.3,358.3,2.01,21,0)
^^6^6^2960123^
"^DD",358.3,358.3,2.01,21,1,0)
Enter the narrative that should be sent to PCE when this selection is
"^DD",358.3,358.3,2.01,21,2,0)
scanned.  This will be the provider narrative that is shown in PCE and
"^DD",358.3,358.3,2.01,21,3,0)
Problem List.  If there is no entry in this field the text as it appears
"^DD",358.3,358.3,2.01,21,4,0)
on the form will be sent as the narrative.  This field can only be
"^DD",358.3,358.3,2.01,21,5,0)
entered for the type of interfaces that allow adding this narrative,
"^DD",358.3,358.3,2.01,21,6,0)
and then send the narrative to PCE.
"^DD",358.3,358.3,2.01,"DT")
2960123
"^DD",358.3,358.3,2.02,0)
CLINICAL LEXICON ENTRY^P757.01'^GMP(757.01,^2;2^Q
"^DD",358.3,358.3,2.02,21,0)
^^5^5^2960131^
"^DD",358.3,358.3,2.02,21,1,0)
This is the clinical lexicon entry this term should be associated with.
"^DD",358.3,358.3,2.02,21,2,0)
Generally this is only completed for selections based on diagnosis.
"^DD",358.3,358.3,2.02,21,3,0)
The clinical lexicon entry will be passed to pce when this selection is
"^DD",358.3,358.3,2.02,21,4,0)
scanned.  This allows maintaining the patient problem list associated 
"^DD",358.3,358.3,2.02,21,5,0)
with clinical terms.
"^DD",358.3,358.3,2.02,"DT")
2960131
"^DD",358.3,358.3,2.03,0)
SECOND CODE^F^^2;3^K:$L(X)>10!($L(X)<1) X
"^DD",358.3,358.3,2.03,3)
Answer must be 1-10 characters in length.
"^DD",358.3,358.3,2.03,21,0)
^^1^1^2961031^
"^DD",358.3,358.3,2.03,21,1,0)
Used to send additional codes along when one entry is bubbled.
"^DD",358.3,358.3,2.03,"DT")
2961031
"^DD",358.3,358.3,2.04,0)
THIRD CODE^F^^2;4^K:$L(X)>10!($L(X)<1) X
"^DD",358.3,358.3,2.04,3)
Answer must be 1-10 characters in length.
"^DD",358.3,358.3,2.04,21,0)
^^1^1^2961031^
"^DD",358.3,358.3,2.04,21,1,0)
Answer must be 1-10 characters in length.
"^DD",358.3,358.3,2.04,"DT")
2961031
"^DD",358.3,358.31,0)
SUBCOLUMN VALUE SUB-FIELD^^.02^2
"^DD",358.3,358.31,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",358.3,358.31,0,"IX","B",358.31,.01)

"^DD",358.3,358.31,0,"NM","SUBCOLUMN VALUE")

"^DD",358.3,358.31,0,"UP")
358.3
"^DD",358.3,358.31,.01,0)
SUBCOLUMN NUMBER^MRNJ1,0X^^0;1^K:+X'=X!(X>6)!(X<1)!(X?.E1"."1N.N)!($D(^IBE(358.3,DA(1),1,"B",X))) X
"^DD",358.3,358.31,.01,1,0)
^.1
"^DD",358.3,358.31,.01,1,1,0)
358.31^B
"^DD",358.3,358.31,.01,1,1,1)
S ^IBE(358.3,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",358.3,358.31,.01,1,1,2)
K ^IBE(358.3,DA(1),1,"B",$E(X,1,30),DA)
"^DD",358.3,358.31,.01,3)
Which subcolumn is the value for?
"^DD",358.3,358.31,.01,21,0)
^^2^2^2930527^
"^DD",358.3,358.31,.01,21,1,0)
 
"^DD",358.3,358.31,.01,21,2,0)
The order that the subcolumn should appear on the form.
"^DD",358.3,358.31,.01,"DT")
2930402
"^DD",358.3,358.31,.02,0)
SUBCOLUMN VALUE^F^^0;2^K:$L(X)>150!($L(X)<1) X
"^DD",358.3,358.31,.02,3)
What value should go in the subcolumn?
"^DD",358.3,358.31,.02,21,0)
^^2^2^2930527^
"^DD",358.3,358.31,.02,21,1,0)
 
"^DD",358.3,358.31,.02,21,2,0)
The text that should appear in the subcolumn.
"^DD",358.3,358.31,.02,"DT")
2930401
"^DD",358.4,358.4,0)
FIELD^^.04^4
"^DD",358.4,358.4,0,"DDA")
N
"^DD",358.4,358.4,0,"DT")
2950717
"^DD",358.4,358.4,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",358.4,358.4,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(358.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(358.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",358.4,358.4,0,"IX","APO",358.4,.02)

"^DD",358.4,358.4,0,"IX","APO1",358.4,.03)

"^DD",358.4,358.4,0,"IX","B",358.4,.01)

"^DD",358.4,358.4,0,"IX","D",358.4,.03)

"^DD",358.4,358.4,0,"NM","IMP/EXP SELECTION GROUP")

"^DD",358.4,358.4,0,"PT",358.3,.04)

"^DD",358.4,358.4,0,"VRPK")
AUTOMATED INFO COLLECTION SYS
"^DD",358.4,358.4,.01,0)
HEADER^RF^^0;1^K:$L(X)>40!($L(X)<1) X
"^DD",358.4,358.4,.01,1,0)
^.1
"^DD",358.4,358.4,.01,1,1,0)
358.4^B
"^DD",358.4,358.4,.01,1,1,1)
S ^IBE(358.4,"B",$E(X,1,30),DA)=""
"^DD",358.4,358.4,.01,1,1,2)
K ^IBE(358.4,"B",$E(X,1,30),DA)
"^DD",358.4,358.4,.01,3)
What text do you want to appear at the top of this group?
"^DD",358.4,358.4,.01,21,0)
^^2^2^2930604^^^^
"^DD",358.4,358.4,.01,21,1,0)
 
"^DD",358.4,358.4,.01,21,2,0)
The name given to a group of selections appearing on a selection list.
"^DD",358.4,358.4,.01,"DEL",1,0)
I '$G(IBLISTPR) W "...Selection Groups can only be deleted through the Encounter Form Utilities!"
"^DD",358.4,358.4,.01,"DT")
2930604
"^DD",358.4,358.4,.02,0)
PRINT ORDER^RNJ5,2^^0;2^K:+X'=X!(X>99.99)!(X<0)!(X?.E1"."3N.N) X
"^DD",358.4,358.4,.02,1,0)
^.1
"^DD",358.4,358.4,.02,1,1,0)
358.4^APO^MUMPS
"^DD",358.4,358.4,.02,1,1,1)
I $P($G(^IBE(358.4,DA,0)),U,3) S ^IBE(358.4,"APO",$P(^(0),U,3),X,DA)=""
"^DD",358.4,358.4,.02,1,1,2)
I $P($G(^IBE(358.4,DA,0)),U,3) K ^IBE(358.4,"APO",$P(^(0),U,3),X,DA)
"^DD",358.4,358.4,.02,1,1,"DT")
2960403
"^DD",358.4,358.4,.02,3)
Type a Number between 0 and 99.99, 2 Decimal Digits
"^DD",358.4,358.4,.02,21,0)
^^5^5^2921222^^^^
"^DD",358.4,358.4,.02,21,1,0)
 
"^DD",358.4,358.4,.02,21,2,0)
This will define the order that a group of selections will appear in as
"^DD",358.4,358.4,.02,21,3,0)
compared to the other groups of selections.
"^DD",358.4,358.4,.02,21,4,0)
A group header "BLANK" will be created by default with order number 0.
"^DD",358.4,358.4,.02,"DT")
2960403
"^DD",358.4,358.4,.03,0)
SELECTION LIST^RP358.2'^IBE(358.2,^0;3^Q
"^DD",358.4,358.4,.03,1,0)
^.1
"^DD",358.4,358.4,.03,1,1,0)
358.4^D
"^DD",358.4,358.4,.03,1,1,1)
S ^IBE(358.4,"D",$E(X,1,30),DA)=""
"^DD",358.4,358.4,.03,1,1,2)
K ^IBE(358.4,"D",$E(X,1,30),DA)
"^DD",358.4,358.4,.03,1,1,"%D",0)
^^1^1^2921218^
"^DD",358.4,358.4,.03,1,1,"%D",1,0)
Used to find all the groups belonging to a selection list.
"^DD",358.4,358.4,.03,1,1,"DT")
2921218
"^DD",358.4,358.4,.03,1,2,0)
358.4^APO1^MUMPS
"^DD",358.4,358.4,.03,1,2,1)
I $P($G(^IBE(358.4,DA,0)),U,2)]"" S ^IBE(358.4,"APO",X,$P(^(0),U,2),DA)=""
"^DD",358.4,358.4,.03,1,2,2)
I $P($G(^IBE(358.4,DA,0)),U,2)]"" K ^IBE(358.4,"APO",X,$P(^(0),U,2),DA)
"^DD",358.4,358.4,.03,1,2,"DT")
2960403
"^DD",358.4,358.4,.03,3)
This identifies the selection list that contains this group.
"^DD",358.4,358.4,.03,21,0)
^^2^2^2930527^
"^DD",358.4,358.4,.03,21,1,0)
 
"^DD",358.4,358.4,.03,21,2,0)
The Selection List this group belongs to.
"^DD",358.4,358.4,.03,"DT")
2960403
"^DD",358.4,358.4,.04,0)
INVISIBLE^S^I:INVISIBLE;^0;4^Q
"^DD",358.4,358.4,.04,3)
If you do not want the header to print, enter 'I'.
"^DD",358.4,358.4,.04,"DT")
2950717
"^DD",358.5,358.5,0)
FIELD^^2^13
"^DD",358.5,358.5,0,"DDA")
N
"^DD",358.5,358.5,0,"DT")
2930730
"^DD",358.5,358.5,0,"ID",.02)
W ""
"^DD",358.5,358.5,0,"ID",.03)
W ""
"^DD",358.5,358.5,0,"IX","B",358.5,.01)

"^DD",358.5,358.5,0,"IX","C",358.5,.02)

"^DD",358.5,358.5,0,"NM","IMP/EXP DATA FIELD")

"^DD",358.5,358.5,0,"VRPK")
AUTOMATED INFO COLLECTION SYS
"^DD",358.5,358.5,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",358.5,358.5,.01,1,0)
^.1
"^DD",358.5,358.5,.01,1,1,0)
358.5^B
"^DD",358.5,358.5,.01,1,1,1)
S ^IBE(358.5,"B",$E(X,1,30),DA)=""
"^DD",358.5,358.5,.01,1,1,2)
K ^IBE(358.5,"B",$E(X,1,30),DA)
"^DD",358.5,358.5,.01,3)
Answer must be 3-30 characters in length.
"^DD",358.5,358.5,.01,21,0)
^^3^3^2930419^^^
"^DD",358.5,358.5,.01,21,1,0)
 
"^DD",358.5,358.5,.01,21,2,0)
The name is used to identify the field within a block. It can be anything
"^DD",358.5,358.5,.01,21,3,0)
the designer of a form wants it to be.
"^DD",358.5,358.5,.01,"DT")
2930419
"^DD",358.5,358.5,.02,0)
BLOCK^RP358.1'^IBE(358.1,^0;2^Q
"^DD",358.5,358.5,.02,1,0)
^.1
"^DD",358.5,358.5,.02,1,1,0)
358.5^C
"^DD",358.5,358.5,.02,1,1,1)
S ^IBE(358.5,"C",$E(X,1,30),DA)=""
"^DD",358.5,358.5,.02,1,1,2)
K ^IBE(358.5,"C",$E(X,1,30),DA)
"^DD",358.5,358.5,.02,1,1,"DT")
2921118
"^DD",358.5,358.5,.02,3)
What block should this data field appear in?
"^DD",358.5,358.5,.02,21,0)
^^2^2^2930310^
"^DD",358.5,358.5,.02,21,1,0)
 
"^DD",358.5,358.5,.02,21,2,0)
The particular block the data field should appear in.
"^DD",358.5,358.5,.02,"DT")
2921118
"^DD",358.5,358.5,.03,0)
TYPE OF DATA^*P358.6'^IBE(358.6,^0;3^S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",358.5,358.5,.03,3)
What data should be displayed in this field?
"^DD",358.5,358.5,.03,4)

"^DD",358.5,358.5,.03,12)
Allows only available output routines
"^DD",358.5,358.5,.03,12.1)
S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1"
"^DD",358.5,358.5,.03,21,0)
^^5^5^2930409^^
"^DD",358.5,358.5,.03,21,1,0)
 
"^DD",358.5,358.5,.03,21,2,0)
The particular interface that should be invoked to obtain the data for
"^DD",358.5,358.5,.03,21,3,0)
display. Some of the interfaces don't actually return data, but are
"^DD",358.5,358.5,.03,21,4,0)
instead 'dummy' interfaces for the purpose of printing things like blank
"^DD",358.5,358.5,.03,21,5,0)
lines.
"^DD",358.5,358.5,.03,"DT")
2930309
"^DD",358.5,358.5,.04,0)
LAST ITEM INDICATOR^S^1:YES;0:NO;^0;4^Q
"^DD",358.5,358.5,.04,.1)
IS THIS THE LAST ONE THAT WILL FIT ON THE FORM?
"^DD",358.5,358.5,.04,3)

"^DD",358.5,358.5,.04,4)
W "Enter YES if this is the last item that should print, else enter NO."
"^DD",358.5,358.5,.04,21,0)
^^4^4^2930408^^^^
"^DD",358.5,358.5,.04,21,1,0)
 
"^DD",358.5,358.5,.04,21,2,0)
This field is used to indicate which item on a list is the last to be
"^DD",358.5,358.5,.04,21,3,0)
printed to the form. The remaining items can be printed to a separate
"^DD",358.5,358.5,.04,21,4,0)
piece of paper.
"^DD",358.5,358.5,.04,"DT")
2930413
"^DD",358.5,358.5,.05,0)
NUMBER ON LIST^NJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.5,358.5,.05,.1)
WHICH ITEM ON THE LIST SHOULD BE DISPLAYED IN THIS FIELD?
"^DD",358.5,358.5,.05,3)
The data is a list of items. Which item on the list should be displayed?
"^DD",358.5,358.5,.05,21,0)
^^1^1^2930607^
"^DD",358.5,358.5,.05,21,1,0)
For data returned by the package interface that is in the form of a list, this field indicates which one of the items on the list should be displayed to this field.
"^DD",358.5,358.5,.05,"DT")
2930413
"^DD",358.5,358.5,.06,0)
TEXT LABEL^F^^0;6^K:$L(X)>150!($L(X)<1) X
"^DD",358.5,358.5,.06,.1)
WHAT LABEL SHOULD BEGIN THE TEXT (OPTIONAL)
"^DD",358.5,358.5,.06,2)
S Y(0)=Y S Y=+Y+1
"^DD",358.5,358.5,.06,2.1)
S Y=+Y+1
"^DD",358.5,358.5,.06,3)
You can optionally begin the text with a label of your choice.
"^DD",358.5,358.5,.06,21,0)
^^2^2^2930527^
"^DD",358.5,358.5,.06,21,1,0)
 
"^DD",358.5,358.5,.06,21,2,0)
The label that should precede the text.
"^DD",358.5,358.5,.06,"DT")
2930825
"^DD",358.5,358.5,.07,0)
TEXT LABEL APPEARANCE^FX^^0;7^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBR"'[$E(X,1))!("UBR"'[$E(X,2))!("UBR"'[$E(X,3)) X
"^DD",358.5,358.5,.07,.1)
HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {B,U,R}
"^DD",358.5,358.5,.07,3)
B=bold,U=underline,R=reverse. You can enter BU to make the label bold and underlined.
"^DD",358.5,358.5,.07,21,0)
^^3^3^2940527^^^
"^DD",358.5,358.5,.07,21,1,0)
 
"^DD",358.5,358.5,.07,21,2,0)
The label can have characteristics, such as being underlined or
"^DD",358.5,358.5,.07,21,3,0)
emboldened.
"^DD",358.5,358.5,.07,"DT")
2940527
"^DD",358.5,358.5,.1,0)
TEXT STARTING COLUMN^NJ3,0XO^^0;10^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.5,358.5,.1,.1)
WHAT BLOCK COLUMN SHOULD THE TEXT START AT?
"^DD",358.5,358.5,.1,2)
S:Y=+Y Y=Y+1
"^DD",358.5,358.5,.1,2.1)
S Y=+Y+1
"^DD",358.5,358.5,.1,3)
What block column should the text start at?
"^DD",358.5,358.5,.1,21,0)
^^2^2^2930715^^
"^DD",358.5,358.5,.1,21,1,0)
This field determines what column the text should begin in.
"^DD",358.5,358.5,.1,21,2,0)
Applies only if the Package Interface returns a word-processing field.
"^DD",358.5,358.5,.1,23,0)
^^4^4^2930715^
"^DD",358.5,358.5,.1,23,1,0)
The internal representation starts at 0, the external representation
"^DD",358.5,358.5,.1,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",358.5,358.5,.1,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",358.5,358.5,.1,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",358.5,358.5,.1,"DT")
2940527
"^DD",358.5,358.5,.11,0)
TEXT STARTING ROW^NJ3,0XO^^0;11^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.5,358.5,.11,.1)
WHAT BLOCK ROW SHOULD THE TEXT START AT?
"^DD",358.5,358.5,.11,2)
S Y(0)=Y S:Y=+Y Y=Y+1
"^DD",358.5,358.5,.11,2.1)
S:Y=+Y Y=Y+1
"^DD",358.5,358.5,.11,3)
What block row should the text begin in?
"^DD",358.5,358.5,.11,21,0)
^^4^4^2930715^^
"^DD",358.5,358.5,.11,21,1,0)
 
"^DD",358.5,358.5,.11,21,2,0)
Determines which line on the form, relative to the block, the text area
"^DD",358.5,358.5,.11,21,3,0)
should begin at. Only applies if the package interface returns a
"^DD",358.5,358.5,.11,21,4,0)
word-processing field.
"^DD",358.5,358.5,.11,23,0)
^^4^4^2930715^
"^DD",358.5,358.5,.11,23,1,0)
The internal representation starts at 0, the external representation
"^DD",358.5,358.5,.11,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",358.5,358.5,.11,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",358.5,358.5,.11,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",358.5,358.5,.11,"DT")
2940527
"^DD",358.5,358.5,.12,0)
NUMBER OF FORM LINES FOR TEXT^NJ3,0^^0;12^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.5,358.5,.12,.1)
HOW MANY LINES OF THE FORM SHOULD BE ALLOCATED FOR THE TEXT?
"^DD",358.5,358.5,.12,3)
How many lines of the form should be allocated for the text?
"^DD",358.5,358.5,.12,21,0)
^^2^2^2930527^
"^DD",358.5,358.5,.12,21,1,0)
 
"^DD",358.5,358.5,.12,21,2,0)
The number of lines on the form that should be allocated for the text.
"^DD",358.5,358.5,.12,"DT")
2930414
"^DD",358.5,358.5,.13,0)
SPACING OF TEXT LINES^S^1:SINGLE SPACED;2:DOUBLE SPACED;3:SINGLE, BUT DOUBLE IF BLANK;^0;13^Q
"^DD",358.5,358.5,.13,.1)
HOW SHOULD THE TEXT LINES BE SPACED?
"^DD",358.5,358.5,.13,3)
How do you want the text lines to be spaced?
"^DD",358.5,358.5,.13,21,0)
^^2^2^2930527^
"^DD",358.5,358.5,.13,21,1,0)
 
"^DD",358.5,358.5,.13,21,2,0)
Determines the spacing between lines of text.
"^DD",358.5,358.5,.13,"DT")
2930414
"^DD",358.5,358.5,.14,0)
WIDTH OF TEXT LINES^NJ3,0^^0;14^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.5,358.5,.14,.1)
HOW MANY CHARACTERS ACROSS SHOULD THE TEXT LINES BE?
"^DD",358.5,358.5,.14,3)
How many columns wide do you want the text?
"^DD",358.5,358.5,.14,21,0)
^^2^2^2930527^
"^DD",358.5,358.5,.14,21,1,0)
 
"^DD",358.5,358.5,.14,21,2,0)
Determines how many characters across should be allocated to the text.
"^DD",358.5,358.5,.14,"DT")
2930414
"^DD",358.5,358.5,2,0)
SUBFIELD^358.52I^^2;0
"^DD",358.5,358.5,2,21,0)
^^2^2^2940816^^^^
"^DD",358.5,358.5,2,21,1,0)
A data field can be composed of multiple subfields. Each subfield can have
"^DD",358.5,358.5,2,21,2,0)
a label and data.
"^DD",358.5,358.5,2,"DT")
2930323
"^DD",358.5,358.52,0)
SUBFIELD SUB-FIELD^^.09^8
"^DD",358.5,358.52,0,"DIK")
IBXF5
"^DD",358.5,358.52,0,"DT")
2930730
"^DD",358.5,358.52,0,"IX","B",358.52,.01)

"^DD",358.5,358.52,0,"NM","SUBFIELD")

"^DD",358.5,358.52,0,"UP")
358.5
"^DD",358.5,358.52,.01,0)
SUBFIELD LABEL^MF^^0;1^K:$L(X)>150!($L(X)<1) X
"^DD",358.5,358.52,.01,1,0)
^.1
"^DD",358.5,358.52,.01,1,1,0)
358.52^B
"^DD",358.5,358.52,.01,1,1,1)
S ^IBE(358.5,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",358.5,358.52,.01,1,1,2)
K ^IBE(358.5,DA(1),2,"B",$E(X,1,30),DA)
"^DD",358.5,358.52,.01,3)
What should the subfield be named? The label will print unless it is made invisible.
"^DD",358.5,358.52,.01,4)

"^DD",358.5,358.52,.01,21,0)
^^3^3^2931020^^^^
"^DD",358.5,358.52,.01,21,1,0)
 
"^DD",358.5,358.52,.01,21,2,0)
The name of the subfield. The label prints to the form unless it is made
"^DD",358.5,358.52,.01,21,3,0)
invisible.
"^DD",358.5,358.52,.01,"DT")
2930730
"^DD",358.5,358.52,.03,0)
SUBFIELD LABEL APPEARANCE^FX^^0;3^S X=$$UPPER^VALM1(X) K:$L(X)>4!("UBRI"'[$E(X,1))!("UBRI"'[$E(X,2))!("UBRI"'[$E(X,3))!("UBRI"'[$E(X,4)) X
"^DD",358.5,358.52,.03,.1)
HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {U,B,R,I}
"^DD",358.5,358.52,.03,3)
B=bold,U=underline,R=reverse,I=invisible You can enter any combination of {B,U,R,I}. The label will not print if it is made invisible.
"^DD",358.5,358.52,.03,4)

"^DD",358.5,358.52,.03,21,0)
^^4^4^2940526^^^
"^DD",358.5,358.52,.03,21,1,0)
 
"^DD",358.5,358.52,.03,21,2,0)
The label can be made bold, underlined, or invisible. It can also be printed
"^DD",358.5,358.52,.03,21,3,0)
 in reverse, i.e., white on black. This field determines which of those
"^DD",358.5,358.52,.03,21,4,0)
 characteristics apply.
"^DD",358.5,358.52,.03,"DT")
2940816
"^DD",358.5,358.52,.04,0)
STARTING COLUMN FOR LABEL^NJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.5,358.52,.04,2)
S Y(0)=Y S:Y=+Y Y=Y+1
"^DD",358.5,358.52,.04,2.1)
S:Y=+Y Y=Y+1
"^DD",358.5,358.52,.04,3)
What block column should the label start in?
"^DD",358.5,358.52,.04,21,0)
^^2^2^2930715^^
"^DD",358.5,358.52,.04,21,1,0)
 
"^DD",358.5,358.52,.04,21,2,0)
The column, relative to the block, that the label should start at.
"^DD",358.5,358.52,.04,23,0)
^^4^4^2930715^
"^DD",358.5,358.52,.04,23,1,0)
The internal representation starts at 0, the external representation
"^DD",358.5,358.52,.04,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",358.5,358.52,.04,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",358.5,358.52,.04,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",358.5,358.52,.04,"DT")
2930617
"^DD",358.5,358.52,.05,0)
STARTING ROW FOR LABEL^NJ3,0XO^^0;5^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.5,358.52,.05,2)
S Y(0)=Y S:Y=+Y Y=Y+1
"^DD",358.5,358.52,.05,2.1)
S:Y=+Y Y=Y+1
"^DD",358.5,358.52,.05,3)
What block row should the label start in?
"^DD",358.5,358.52,.05,21,0)
^^2^2^2930608^
"^DD",358.5,358.52,.05,21,1,0)
 
"^DD",358.5,358.52,.05,21,2,0)
The row the label should be printed on.
"^DD",358.5,358.52,.05,23,0)
^^4^4^2930715^
"^DD",358.5,358.52,.05,23,1,0)
The internal representation starts at 0, the external representation
"^DD",358.5,358.52,.05,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",358.5,358.52,.05,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",358.5,358.52,.05,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",358.5,358.52,.05,"DT")
2930617
"^DD",358.5,358.52,.06,0)
STARTING ROW FOR DATA^NJ3,0XO^^0;6^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.5,358.52,.06,2)
S Y(0)=Y S:Y=+Y Y=Y+1
"^DD",358.5,358.52,.06,2.1)
S:Y=+Y Y=Y+1
"^DD",358.5,358.52,.06,3)
What block row should the data begin in?
"^DD",358.5,358.52,.06,21,0)
^^2^2^2930715^^
"^DD",358.5,358.52,.06,21,1,0)
 
"^DD",358.5,358.52,.06,21,2,0)
The row, relative to the block, that the data should print on.
"^DD",358.5,358.52,.06,23,0)
^^4^4^2930715^^
"^DD",358.5,358.52,.06,23,1,0)
The internal representation starts at 0, the external representation
"^DD",358.5,358.52,.06,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",358.5,358.52,.06,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",358.5,358.52,.06,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",358.5,358.52,.06,"DT")
2930617
"^DD",358.5,358.52,.07,0)
STARTING COLUMN FOR DATA^NJ3,0XO^^0;7^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.5,358.52,.07,2)
S Y(0)=Y S:Y=+Y Y=Y+1
"^DD",358.5,358.52,.07,2.1)
S:Y=+Y Y=Y+1
"^DD",358.5,358.52,.07,3)
What block column should the data begin in?
"^DD",358.5,358.52,.07,21,0)
^^2^2^2930608^
"^DD",358.5,358.52,.07,21,1,0)
 
"^DD",358.5,358.52,.07,21,2,0)
The column, relative to the block, that the data should print on.
"^DD",358.5,358.52,.07,23,0)
^^4^4^2930715^
"^DD",358.5,358.52,.07,23,1,0)
The internal representation starts at 0, the external representation
"^DD",358.5,358.52,.07,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",358.5,358.52,.07,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",358.5,358.52,.07,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",358.5,358.52,.07,"DT")
2930617
"^DD",358.5,358.52,.08,0)
LENGTH OF DATA^NJ3,0^^0;8^K:+X'=X!(X>150)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.5,358.52,.08,3)
How much space on the line should be allocated for the information to be displayed?
"^DD",358.5,358.52,.08,21,0)
^^3^3^2930527^
"^DD",358.5,358.52,.08,21,1,0)
 
"^DD",358.5,358.52,.08,21,2,0)
The amount of space, in terms of characters, that should be allocated
"^DD",358.5,358.52,.08,21,3,0)
to the data.
"^DD",358.5,358.52,.08,"DT")
2930322
"^DD",358.5,358.52,.09,0)
DATA^NJ1,0X^^0;9^K:+X'=X!(X>7)!(X<1)!(X?.E1"."1N.N)!($P($G(^IBE(358.6,+$P($G(^IBE(358.5,DA(1),0)),U,3),2)),U,(2*X)-1)="") X
"^DD",358.5,358.52,.09,.1)
WHAT DATA SHOULD BE DISPLAYED IN THIS SUBFIELD?
"^DD",358.5,358.52,.09,3)
WHAT DATA SHOULD BE DISPLAYED IN THIS SUBFIELD?
"^DD",358.5,358.52,.09,4)
D HELP1^IBDFU5
"^DD",358.5,358.52,.09,21,0)
^^4^4^2930527^
"^DD",358.5,358.52,.09,21,1,0)
 
"^DD",358.5,358.52,.09,21,2,0)
The package interface returns a record that may be composed of multiple
"^DD",358.5,358.52,.09,21,3,0)
fields. This identifies which of those fields should appear in this
"^DD",358.5,358.52,.09,21,4,0)
subfield.
"^DD",358.5,358.52,.09,"DT")
2930526
"^DD",358.6,358.6,0)
FIELD^^21^55
"^DD",358.6,358.6,0,"DDA")
N
"^DD",358.6,358.6,0,"DT")
2961031
"^DD",358.6,358.6,0,"ID",.06)
W ""
"^DD",358.6,358.6,0,"ID","WRITE")
N IBDWNAM S IBDWNAM=$E($P(^(0),U),1,40) D EN^DDIOL(IBDWNAM,"","!?0")
"^DD",358.6,358.6,0,"ID","WRITE1")
N IBDWTYPE S IBDWTYPE=$S($P(^(0),"^",6)=1:"INPUT",$P(^(0),"^",6)=2:"OUTPUT",$P(^(0),"^",6)=3:"SELECTION",1:"REPORT")_$S($P(^(0),U,6)=3&'$P(^(0),"^",13):"  ** NOT SCANNABLE **",1:"") D EN^DDIOL("TYPE="_IBDWTYPE,"","?45")
"^DD",358.6,358.6,0,"IX","B",358.6,.01)

"^DD",358.6,358.6,0,"IX","C",358.6,.04)

"^DD",358.6,358.6,0,"IX","D",358.6,3)

"^DD",358.6,358.6,0,"IX","E",358.6,.01)

"^DD",358.6,358.6,0,"NM","IMP/EXP PACKAGE INTERFACE")

"^DD",358.6,358.6,0,"PT",358.2,.11)

"^DD",358.6,358.6,0,"PT",358.5,.03)

"^DD",358.6,358.6,0,"PT",358.6,.13)

"^DD",358.6,358.6,0,"PT",358.93,.06)

"^DD",358.6,358.6,0,"VRPK")
AUTOMATED INFO COLLECTION SYS
"^DD",358.6,358.6,.01,0)
NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
"^DD",358.6,358.6,.01,1,0)
^.1
"^DD",358.6,358.6,.01,1,1,0)
358.6^B
"^DD",358.6,358.6,.01,1,1,1)
S ^IBE(358.6,"B",$E(X,1,30),DA)=""
"^DD",358.6,358.6,.01,1,1,2)
K ^IBE(358.6,"B",$E(X,1,30),DA)
"^DD",358.6,358.6,.01,1,2,0)
358.6^E^MUMPS
"^DD",358.6,358.6,.01,1,2,1)
S ^IBE(358.6,"E",$E(X,$F(X," "),40),DA)=""
"^DD",358.6,358.6,.01,1,2,2)
K ^IBE(358.6,"E",$E(X,$F(X," "),40),DA)
"^DD",358.6,358.6,.01,1,2,"%D",0)
^^4^4^2940224^
"^DD",358.6,358.6,.01,1,2,"%D",1,0)
 
"^DD",358.6,358.6,.01,1,2,"%D",2,0)
For package interfaces that are output routines the name has the custodial
"^DD",358.6,358.6,.01,1,2,"%D",3,0)
package's name space as a prefix. This cross-reference removes that
"^DD",358.6,358.6,.01,1,2,"%D",4,0)
prefix. It is used to improve the display of output routines for the user.
"^DD",358.6,358.6,.01,1,2,"DT")
2930409
"^DD",358.6,358.6,.01,3)
Answer must be 3-40 characters in length. All entries with Action Type other than PRINT REPORT must be be prefixed with the namespace of the package that is responsible for the data.
"^DD",358.6,358.6,.01,21,0)
^^3^3^2950412^^^^
"^DD",358.6,358.6,.01,21,1,0)
 
"^DD",358.6,358.6,.01,21,2,0)
The name of the Package Interface. For interfaces returning data the name
"^DD",358.6,358.6,.01,21,3,0)
should be preceded with the namespace of the package.
"^DD",358.6,358.6,.01,23,0)
^^1^1^2950412^
"^DD",358.6,358.6,.01,23,1,0)
 
"^DD",358.6,358.6,.01,"DT")
2930409
"^DD",358.6,358.6,.02,0)
ENTRY POINT^F^^0;2^K:$L(X)>8!($L(X)<1) X
"^DD",358.6,358.6,.02,3)
What entry point into the routine does this package interface use?
"^DD",358.6,358.6,.02,21,0)
^^2^2^2941018^^
"^DD",358.6,358.6,.02,21,1,0)
 
"^DD",358.6,358.6,.02,21,2,0)
The entry point in the routine that should be called.
"^DD",358.6,358.6,.02,"DT")
2941018
"^DD",358.6,358.6,.03,0)
ROUTINE^F^^0;3^K:$L(X)>8!($L(X)<1) X
"^DD",358.6,358.6,.03,3)
What routine does this package interface use?
"^DD",358.6,358.6,.03,21,0)
^^2^2^2941018^^
"^DD",358.6,358.6,.03,21,1,0)
 
"^DD",358.6,358.6,.03,21,2,0)
The routine that should be called.
"^DD",358.6,358.6,.03,"DT")
2921125
"^DD",358.6,358.6,.04,0)
CUSTODIAL PACKAGE^F^^0;4^K:$L(X)>20!($L(X)<3) X
"^DD",358.6,358.6,.04,1,0)
^.1
"^DD",358.6,358.6,.04,1,1,0)
358.6^C
"^DD",358.6,358.6,.04,1,1,1)
S ^IBE(358.6,"C",$E(X,1,30),DA)=""
"^DD",358.6,358.6,.04,1,1,2)
K ^IBE(358.6,"C",$E(X,1,30),DA)
"^DD",358.6,358.6,.04,1,1,"DT")
2921229
"^DD",358.6,358.6,.04,3)
For Package Interfaces that return data the Custodial Package is the package that is providing the data. For Package Interfaces that print reports it is the package that is providing the report.
"^DD",358.6,358.6,.04,21,0)
^^2^2^2940217^
"^DD",358.6,358.6,.04,21,1,0)
This is a free text pointer to the package file. It serves only to
"^DD",358.6,358.6,.04,21,2,0)
document the custodial package of the data.
"^DD",358.6,358.6,.04,"DT")
2930726
"^DD",358.6,358.6,.05,0)
VARIABLE DATA?^S^0:NO;1:YES;^0;5^Q
"^DD",358.6,358.6,.05,.1)
DOES THE DATA VARY FROM PATIENT TO PATIENT?
"^DD",358.6,358.6,.05,3)
Enter YES if the data returned is variable, NO if the data is always the same.
"^DD",358.6,358.6,.05,21,0)
^^3^3^2930726^^^
"^DD",358.6,358.6,.05,21,1,0)
This field is used in the batch printing of encounter forms. The purpose
"^DD",358.6,358.6,.05,21,2,0)
is to avoid recomputing fields whose data does not change from patient to
"^DD",358.6,358.6,.05,21,3,0)
patient.
"^DD",358.6,358.6,.05,"DT")
2931124
"^DD",358.6,358.6,.06,0)
ACTION TYPE^RS^1:INPUT;2:DISPLAY;3:SELECTION;4:PRINT REPORT;^0;6^Q
"^DD",358.6,358.6,.06,3)
Is this interface for inputting data, displaying data to a form, for creating lists that will appear on a form, or for printing reports?
"^DD",358.6,358.6,.06,21,0)
^^9^9^2950825^
"^DD",358.6,358.6,.06,21,1,0)
                                                                   
"^DD",358.6,358.6,.06,21,2,0)
 
"^DD",358.6,358.6,.06,21,3,0)
Enter 1 for INPUT if the interface accepts data input from the user
"^DD",358.6,358.6,.06,21,4,0)
and transmits the data to the appropriate package. Enter 2 for DISPLAY
"^DD",358.6,358.6,.06,21,5,0)
if the interface retrieve data for display to a form. Enter 3 for
"^DD",358.6,358.6,.06,21,6,0)
SELECTION if the interface is for building a list to display
"^DD",358.6,358.6,.06,21,7,0)
to a form. Enter 4 if the interface is for printing a report. If
"^DD",358.6,358.6,.06,21,8,0)
the ACTION TYPE is SELECTION then the data type must be a record and the
"^DD",358.6,358.6,.06,21,9,0)
first piece must be the ID use to uniquely identify the selection.
"^DD",358.6,358.6,.06,"DT")
2950825
"^DD",358.6,358.6,.07,0)
DATA TYPE^S^1:SINGLE VALUE;2:RECORD;3:LIST OF SINGLE VALUES;4:LIST OF RECORDS;5:WORD PROCESSING;^0;7^Q
"^DD",358.6,358.6,.07,.1)
WHAT FORMAT WILL THE DATA BE IN?
"^DD",358.6,358.6,.07,3)
What format will the data be in?
"^DD",358.6,358.6,.07,21,0)
^^9^9^2950825^
"^DD",358.6,358.6,.07,21,1,0)
Only applies to selection or display interfaces, both of which retrieve
"^DD",358.6,358.6,.07,21,2,0)
data for display to a form. It is the type of format the data should be
"^DD",358.6,358.6,.07,21,3,0)
in.
"^DD",358.6,358.6,.07,21,4,0)
 
"^DD",358.6,358.6,.07,21,5,0)
A single value is a string without pieces. A record is a set of strings
"^DD",358.6,358.6,.07,21,6,0)
concatenated together with "^" separating the pieces. A list is an
"^DD",358.6,358.6,.07,21,7,0)
indefinite number of values, each numbered, each containing the same type
"^DD",358.6,358.6,.07,21,8,0)
of information. A word processing data type will be in FM format.
"^DD",358.6,358.6,.07,21,9,0)
If the ACTION TYPE is SELECTION then the data type must be record.
"^DD",358.6,358.6,.07,"DT")
2930726
"^DD",358.6,358.6,.08,0)
PRINT COMPLETE^S^0:NO;1:YES;^0;8^Q
"^DD",358.6,358.6,.08,3)
If there is insufficient room on the form to print the data, should it be re-printed in full on a separate page?
"^DD",358.6,358.6,.08,21,0)
^^4^4^2930527^
"^DD",358.6,358.6,.08,21,1,0)
 
"^DD",358.6,358.6,.08,21,2,0)
This field is used to determine what should happen if the data does not
"^DD",358.6,358.6,.08,21,3,0)
fit in the space allocated to it on the form. If answered YES the data
"^DD",358.6,358.6,.08,21,4,0)
will be printed on another page.
"^DD",358.6,358.6,.08,"DT")
2930507
"^DD",358.6,358.6,.09,0)
AVAILABLE? (Y/N)^RS^0:NO;1:YES;^0;9^Q
"^DD",358.6,358.6,.09,3)
Is this package interface now available for use?
"^DD",358.6,358.6,.09,21,0)
^^3^3^2930527^
"^DD",358.6,358.6,.09,21,1,0)
 
"^DD",358.6,358.6,.09,21,2,0)
This field should be set to YES if the interface is available, NO if it is
"^DD",358.6,358.6,.09,21,3,0)
not available. Interfaces that are not available are not called.
"^DD",358.6,358.6,.09,"DT")
2921213
"^DD",358.6,358.6,.1,0)
HEALTH SUMMARY?^S^0:NO;1:YES;^0;10^Q
"^DD",358.6,358.6,.1,.1)
ARE YOU REQUESTING A HEALTH SUMMARY?
"^DD",358.6,358.6,.1,2.1)
S:Y=+Y Y=Y+1
"^DD",358.6,358.6,.1,3)
 Are you requesting a HEALTH SUMMARY to print?
"^DD",358.6,358.6,.1,21,0)
^^7^7^2930616^
"^DD",358.6,358.6,.1,21,1,0)
 
"^DD",358.6,358.6,.1,21,2,0)
This field will determine how to go about printing the report or form. It
"^DD",358.6,358.6,.1,21,3,0)
applies only to Package Interfaces of ACTION TYPE = PRINT REPORT. Health
"^DD",358.6,358.6,.1,21,4,0)
Summaries use the field HEALTH SUMMARY to determine the type of Health
"^DD",358.6,358.6,.1,21,5,0)
Summary to print. The process of printing Health Summaries dos not use the
"^DD",358.6,358.6,.1,21,6,0)
fields ENTRY POINT or ROUTINE, since all Health Summaries are printed in
"^DD",358.6,358.6,.1,21,7,0)
the same way.
"^DD",358.6,358.6,.1,"DT")
2930616
"^DD",358.6,358.6,.11,0)
TYPE OF HEALTH SUMMARY^*P142'^GMT(142,^0;11^S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",358.6,358.6,.11,3)
Which Health Summary do you want printed?
"^DD",358.6,358.6,.11,12)
EXCLUDES AD HOC HEALTH SUMMARIES
"^DD",358.6,358.6,.11,12.1)
S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION"""
"^DD",358.6,358.6,.11,21,0)
^^4^4^2940224^
"^DD",358.6,358.6,.11,21,1,0)
 
"^DD",358.6,358.6,.11,21,2,0)
This identifies the Health Summary that should be printed when this
"^DD",358.6,358.6,.11,21,3,0)
Package Interface is invoked. It should be null unless the HEALTH SUMMARY?
"^DD",358.6,358.6,.11,21,4,0)
field #.1 is coded YES.
"^DD",358.6,358.6,.11,"DT")
2930617
"^DD",358.6,358.6,.12,0)
TOOLKIT MEMBER?^S^0:NO;1:YES;^0;12^Q
"^DD",358.6,358.6,.12,.1)
SHOULD THIS PACKAGE INTERFACE BE PART OF THE TOOLKIT?
"^DD",358.6,358.6,.12,3)
Enter YES if this PACKAGE INTERFACE was added by the package developers as part of the toolkit, enter NO otherwise.
"^DD",358.6,358.6,.12,21,0)
^^3^3^2950808^^
"^DD",358.6,358.6,.12,21,1,0)
 
"^DD",358.6,358.6,.12,21,2,0)
Package Interfaces that are developed for national use will be documented
"^DD",358.6,358.6,.12,21,3,0)
as being part of the toolkit.
"^DD",358.6,358.6,.12,"DT")
2950711
"^DD",358.6,358.6,.13,0)
PACKAGE INTERFACE FOR INPUT^*P358.6'^IBE(358.6,^0;13^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""S""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",358.6,358.6,.13,.1)
WHICH INTERFACE SHOULD THIS LIST USE FOR PASSING DATA TO THE DATA BASE?
"^DD",358.6,358.6,.13,3)
What interface should be used for inputting data entered on the selection list?
"^DD",358.6,358.6,.13,12)
Must be an available interfaces for accepting input from selection lists.
"^DD",358.6,358.6,.13,12.1)
S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""S"""
"^DD",358.6,358.6,.13,21,0)
^^1^1^2950825^^^^
"^DD",358.6,358.6,.13,21,1,0)
Used to map scanned data to DHCP.
"^DD",358.6,358.6,.13,"DT")
2950825
"^DD",358.6,358.6,.14,0)
DYNAMIC SELECTIONS^S^0:NO;1:YES;^0;14^Q
"^DD",358.6,358.6,.14,3)
Only for selection routines. Enter YES if the Package Interface builds the selection list each time the form is printed.
"^DD",358.6,358.6,.14,21,0)
^^2^2^2950719^
"^DD",358.6,358.6,.14,21,1,0)
This is used to indicate whether the interface is used to build selection
"^DD",358.6,358.6,.14,21,2,0)
lists at print time.
"^DD",358.6,358.6,.14,"DT")
2941221
"^DD",358.6,358.6,.15,0)
DO NOT USE DFN AS A SUBSCRIPT^*S^0:NO;1:YES;^0;15^Q
"^DD",358.6,358.6,.15,3)
If the patient DFN should not be used as a subscript when passing data enter YES.
"^DD",358.6,358.6,.15,12)
If the action type is not OUTPUT ROUTINE then this field should not be set to NO.
"^DD",358.6,358.6,.15,12.1)
S DIC("S")="I (Y=1)!($P(^IBE(358.6,DA,0),U,6)=2)"
"^DD",358.6,358.6,.15,21,0)
^^6^6^2950413^^^^
"^DD",358.6,358.6,.15,21,1,0)
Originally, the patient DFN was used as a subscript when returning data
"^DD",358.6,358.6,.15,21,2,0)
for Package Interfaces of type output, but not for other types of
"^DD",358.6,358.6,.15,21,3,0)
interfaces. It is no longer necessary for any new Package Interface to use
"^DD",358.6,358.6,.15,21,4,0)
DFN as a subscript, but, to maintain compatibilty, output routines
"^DD",358.6,358.6,.15,21,5,0)
must set this field to YES if DFN is not to be used as a subscript. This
"^DD",358.6,358.6,.15,21,6,0)
field has no effect on other types of interfaces.
"^DD",358.6,358.6,.15,"DT")
2950413
"^DD",358.6,358.6,.16,0)
ALLOWED OBJECT USE^FX^^0;16^S X=$$UPPER^VALM1(X) K:$L(X)>4!("SMHP"'[$E(X,1))!("SMHP"'[$E(X,2))!("SMHP"'[$E(X,3))!("SMHP"'[$E(X,4)) X
"^DD",358.6,358.6,.16,3)

"^DD",358.6,358.6,.16,4)
D HELP7^IBDFU5A
"^DD",358.6,358.6,.16,21,0)
^^5^5^2950913^^^^
"^DD",358.6,358.6,.16,21,1,0)
This field applies only to package interfaces for input and is used to
"^DD",358.6,358.6,.16,21,2,0)
determine which package interfaces a particular type of form object may
"^DD",358.6,358.6,.16,21,3,0)
point to. Some combinations don't make sense. For example, it would not
"^DD",358.6,358.6,.16,21,4,0)
make sense to allow a multiple choice question to point to vitals, which
"^DD",358.6,358.6,.16,21,5,0)
is used to input data such as temperature and blood pressure.
"^DD",358.6,358.6,.16,"DT")
2950913
"^DD",358.6,358.6,.17,0)
ASK FOR ADDITIONAL NARRATIVE^S^0:NO;1:YES;^0;17^Q
"^DD",358.6,358.6,.17,3)
Answer yes or no.
"^DD",358.6,358.6,.17,21,0)
^^8^8^2960123^
"^DD",358.6,358.6,.17,21,1,0)
Enter whether users should be prompted for specifying the provider
"^DD",358.6,358.6,.17,21,2,0)
narrative that will be sent to PCE (and problem list) when creating a
"^DD",358.6,358.6,.17,21,3,0)
selection list.  If this is answered no and the narrative is sent to
"^DD",358.6,358.6,.17,21,4,0)
PCE then the text as it appears on the form will be used as the
"^DD",358.6,358.6,.17,21,5,0)
provider narrative.
"^DD",358.6,358.6,.17,21,6,0)
 
"^DD",358.6,358.6,.17,21,7,0)
Generally only diagnosis and clinical lexicon entries will want this
"^DD",358.6,358.6,.17,21,8,0)
field set to Yes.
"^DD",358.6,358.6,.17,"DT")
2960123
"^DD",358.6,358.6,.18,0)
ASK FOR CLINICAL LEXICON^S^0:NO;1:YES;^0;18^Q
"^DD",358.6,358.6,.18,3)
 Enter 'Yes' if you want to map entries from this interface to the clinical lexicon.
"^DD",358.6,358.6,.18,21,0)
^^10^10^2960205^
"^DD",358.6,358.6,.18,21,1,0)
If this field is answered 'Yes' then users who are editing or creating
"^DD",358.6,358.6,.18,21,2,0)
selection lists based on this interface will be asked to map each entry
"^DD",358.6,358.6,.18,21,3,0)
(thought it is optional) to a clinical lexicon entry.  This is highly
"^DD",358.6,358.6,.18,21,4,0)
recommended for user who are scanning diagnosis entries and trying to 
"^DD",358.6,358.6,.18,21,5,0)
add entries to the Patients Problem list.
"^DD",358.6,358.6,.18,21,6,0)
 
"^DD",358.6,358.6,.18,21,7,0)
The primary purpose of this field is to allow sites who have built selection
"^DD",358.6,358.6,.18,21,8,0)
lists using the ICD9 Diagnosis file to map each entry to the clinical lexicon.
"^DD",358.6,358.6,.18,21,9,0)
The Problem List EP has recommended that each problem added to the problem
"^DD",358.6,358.6,.18,21,10,0)
list be associated with a clinical lexicon entry.
"^DD",358.6,358.6,.18,"DT")
2960205
"^DD",358.6,358.6,.19,0)
DQ REQUIRED^S^1:YES;^0;19^Q
"^DD",358.6,358.6,.19,21,0)
^^2^2^2960212^
"^DD",358.6,358.6,.19,21,1,0)
Field used to determine if a data qualifier is required for this
"^DD",358.6,358.6,.19,21,2,0)
input interface.
"^DD",358.6,358.6,.19,"DT")
2960212
"^DD",358.6,358.6,1,0)
DESCRIPTION^358.61^^1;0
"^DD",358.6,358.6,1,21,0)
^^1^1^2950719^^^^
"^DD",358.6,358.6,1,21,1,0)
Should describe the data being exchanged by the package interface.
"^DD",358.6,358.6,2.01,0)
PIECE 1 DESCRIPTIVE NAME^F^^2;1^K:$L(X)>30!($L(X)<3) X
"^DD",358.6,358.6,2.01,.1)
WHAT IS THE FIRST PIECE OF DATA RETURNED BY THE INTERFACE?
"^DD",358.6,358.6,2.01,3)
Answer must be 3-30 characters in length.
"^DD",358.6,358.6,2.01,21,0)
^^3^3^2930527^
"^DD",358.6,358.6,2.01,21,1,0)
 
"^DD",358.6,358.6,2.01,21,2,0)
Should be a descriptive name of the first field in the record returned by
"^DD",358.6,358.6,2.01,21,3,0)
the interface.
"^DD",358.6,358.6,2.01,"DT")
2930726
"^DD",358.6,358.6,2.02,0)
PIECE 1 MAXIMUM LENGTH^NJ3,0^^2;2^K:+X'=X!(X>210)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.6,358.6,2.02,.1)
WHAT IS ITS MAXIMUM LENGTH?
"^DD",358.6,358.6,2.02,3)
Type a Number between 0 and 210, 0 Decimal Digits
"^DD",358.6,358.6,2.02,21,0)
^^3^3^2930527^
"^DD",358.6,358.6,2.02,21,1,0)
 
"^DD",358.6,358.6,2.02,21,2,0)
The maximum length of the first field of the record returned by the
"^DD",358.6,358.6,2.02,21,3,0)
interface.
"^DD",358.6,358.6,2.02,"DT")
2930726
"^DD",358.6,358.6,2.16,0)
PIECE 1 RECOMMENDED HEADER^F^^2;16^K:$L(X)>20!($L(X)<1) X
"^DD",358.6,358.6,2.16,3)
Answer must be 1-20 characters in length.
"^DD",358.6,358.6,2.16,21,0)
^^1^1^2950719^
"^DD",358.6,358.6,2.16,21,1,0)
The recommended header will be used as the default when designing a form.
"^DD",358.6,358.6,2.16,"DT")
2950417
"^DD",358.6,358.6,2.17,0)
IS PIECE 1 DISPLAYABLE?^S^0:NO;1:YES;^2;17^Q
"^DD",358.6,358.6,2.17,.1)
CAN THIS FIELD BE DISPLAYED TO THE USER?
"^DD",358.6,358.6,2.17,3)
The first piece of the returned record is reserved for the unique id of the selection. Enter no if it should not be displayed, for example, if it is a pointer.
"^DD",358.6,358.6,2.17,21,0)
^^3^3^2950719^^
"^DD",358.6,358.6,2.17,21,1,0)
This is used only for selection type interfaces. If NO, then the value can
"^DD",358.6,358.6,2.17,21,2,0)
not be displayed to the encounter form.  The first piece must contain the
"^DD",358.6,358.6,2.17,21,3,0)
unique id of the selection.
"^DD",358.6,358.6,2.17,"DT")
2930810
"^DD",358.6,358.6,2.18,0)
EXPORT SELECTIONS/CHOICES?^S^0:NO;1:YES;^2;18^Q
"^DD",358.6,358.6,2.18,3)
Enter NO if the ID returned by the PACKAGE INTERFACE is not constant between sites, for example, if it is a pointer. Otherwise answer YES.
"^DD",358.6,358.6,2.18,21,0)
^^8^8^2950825^
"^DD",358.6,358.6,2.18,21,1,0)
 
"^DD",358.6,358.6,2.18,21,2,0)
 
"^DD",358.6,358.6,2.18,21,3,0)
Applies to selection and input routines. Determines whether
"^DD",358.6,358.6,2.18,21,4,0)
selections appearing on selection lists and choices in a multiple choice
"^DD",358.6,358.6,2.18,21,5,0)
field will be exported along with the form that they appear on. The
"^DD",358.6,358.6,2.18,21,6,0)
import/export utility will not resolve pointers, so if the id used by
"^DD",358.6,358.6,2.18,21,7,0)
the package interface is a pointer that differs between sites
"^DD",358.6,358.6,2.18,21,8,0)
this field should contain NO.
"^DD",358.6,358.6,2.18,"DT")
2950825
"^DD",358.6,358.6,3,0)
USER LOOKUP^F^^3;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>240!($L(X)<1) X
"^DD",358.6,358.6,3,.1)
LIST OF WORDS TO MAKE LOOK-UPS EASIER
"^DD",358.6,358.6,3,1,0)
^.1
"^DD",358.6,358.6,3,1,1,0)
358.6^D^KWIC
"^DD",358.6,358.6,3,1,1,1)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^IBE(358.6,"D",I,DA)=""
"^DD",358.6,358.6,3,1,1,2)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^IBE(358.6,"D",I,DA)
"^DD",358.6,358.6,3,1,1,"%D",0)
^^3^3^2930409^^
"^DD",358.6,358.6,3,1,1,"%D",1,0)
 
"^DD",358.6,358.6,3,1,1,"%D",2,0)
This index is meant to assist the user in locating the correct package
"^DD",358.6,358.6,3,1,1,"%D",3,0)
interface needed to display a particular item of data to a form.
"^DD",358.6,358.6,3,1,1,"DT")
2930309
"^DD",358.6,358.6,3,3)
Enter words separated with spaces. They will be indexed to assist in lookup.
"^DD",358.6,358.6,3,4)
D LOOKUP^IBDF16
"^DD",358.6,358.6,3,21,0)
^^4^4^2940217^
"^DD",358.6,358.6,3,21,1,0)
 
"^DD",358.6,358.6,3,21,2,0)
This field is used to create a KWIC index for this file. The purpose is to
"^DD",358.6,358.6,3,21,3,0)
assist the user in locating the package interface he needs to display a
"^DD",358.6,358.6,3,21,4,0)
particular item of data to a form.
"^DD",358.6,358.6,3,"DT")
2930726
"^DD",358.6,358.6,4.01,0)
ENTRY ACTION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",358.6,358.6,4.01,3)
This is Standard MUMPS code.
"^DD",358.6,358.6,4.01,9)
@
"^DD",358.6,358.6,4.01,21,0)
^^3^3^2930527^
"^DD",358.6,358.6,4.01,21,1,0)
 
"^DD",358.6,358.6,4.01,21,2,0)
This code will be executed after the PROTECTED VARIABLES are newed, but
"^DD",358.6,358.6,4.01,21,3,0)
before the interface routine is called.
"^DD",358.6,358.6,4.01,"DT")
2930521
"^DD",358.6,358.6,5.01,0)
EXIT ACTION^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",358.6,358.6,5.01,3)
This is Standard MUMPS code.
"^DD",358.6,358.6,5.01,9)
@
"^DD",358.6,358.6,5.01,21,0)
^^3^3^2930528^
"^DD",358.6,358.6,5.01,21,1,0)
 
"^DD",358.6,358.6,5.01,21,2,0)
This code will be executed after the interface routine is called.
"^DD",358.6,358.6,5.01,21,3,0)
The effect of the NEW done on the PROTECTED VARIABLES is still in effect.
"^DD",358.6,358.6,5.01,"DT")
2930518
"^DD",358.6,358.6,6,0)
PROTECTED LOCAL VARIABLES^358.66^^6;0
"^DD",358.6,358.6,6,21,0)
^^11^11^2950719^^^
"^DD",358.6,358.6,6,21,1,0)
 
"^DD",358.6,358.6,6,21,2,0)
This is a list of variables that should be newed before the entry action
"^DD",358.6,358.6,6,21,3,0)
or calling the interface routine. It is protection against interfaces that
"^DD",358.6,358.6,6,21,4,0)
alter or kill variables, or entry actions that do so. Note that REQUIRED
"^DD",358.6,358.6,6,21,5,0)
VARIABLES should not also be PROTECTED VARIABLES. If an interface routine
"^DD",358.6,358.6,6,21,6,0)
changes a required variable, however, there is a way to protect it.
"^DD",358.6,358.6,6,21,7,0)
Supposing, for example, DFN is killed by the interface. This will protect
"^DD",358.6,358.6,6,21,8,0)
it:
"^DD",358.6,358.6,6,21,9,0)
     PROTECTED VARIABLE:   IBDFN
"^DD",358.6,358.6,6,21,10,0)
     ENTRY ACTION:  S IBDFN=DFN
"^DD",358.6,358.6,6,21,11,0)
     EXIT ACTION:   S DFN=IBDFN
"^DD",358.6,358.6,7,0)
REQUIRED LOCAL VARIABLES^358.67^^7;0
"^DD",358.6,358.6,7,21,0)
^^4^4^2930528^
"^DD",358.6,358.6,7,21,1,0)
 
"^DD",358.6,358.6,7,21,2,0)
The interface may require inputs. This field is a list of the required
"^DD",358.6,358.6,7,21,3,0)
local variables. The interface will not be called unless the variables are
"^DD",358.6,358.6,7,21,4,0)
determined to exist.
"^DD",358.6,358.6,9,0)
PCE DIM INPUT TRANSFORM^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",358.6,358.6,9,3)
The input transform should transform X to the value that should be passed.
"^DD",358.6,358.6,9,9)
@
"^DD",358.6,358.6,9,21,0)
^^3^3^2960401^^^^
"^DD",358.6,358.6,9,21,1,0)
Used to transform X, the identifier stored with the form object, to the
"^DD",358.6,358.6,9,21,2,0)
form that should be passed to the PCE Device Interface Module (DIM). It may,
"^DD",358.6,358.6,9,21,3,0)
for example, transform a code to an ien.
"^DD",358.6,358.6,9,"DT")
2960401
"^DD",358.6,358.6,10,0)
HELP TEXT^F^^10;1^K:$L(X)>245!($L(X)<1) X
"^DD",358.6,358.6,10,3)
This should provide some help to the user who is trying to enter a value associated with a bubble.
"^DD",358.6,358.6,10,21,0)
^^2^2^2950817^^^
"^DD",358.6,358.6,10,21,1,0)
This should provide some help to the user who is trying to enter a value
"^DD",358.6,358.6,10,21,2,0)
associated with a bubble.
"^DD",358.6,358.6,10,"DT")
2950522
"^DD",358.6,358.6,11,0)
VALIDATOR^K^^11;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",358.6,358.6,11,3)
This is Standard MUMPS code will kill X if X no longer identifies a valid code.
"^DD",358.6,358.6,11,9)
@
"^DD",358.6,358.6,11,21,0)
^^7^7^2950825^
"^DD",358.6,358.6,11,21,1,0)
This field is used to validate codes currently on a form. The variable X
"^DD",358.6,358.6,11,21,2,0)
should be set to the identifier that was returned by the Package
"^DD",358.6,358.6,11,21,3,0)
Interface. For selection interfaces, the identifier is always piece 1 of
"^DD",358.6,358.6,11,21,4,0)
the 0 node of the entry in the selection list. Xecuting this field will
"^DD",358.6,358.6,11,21,5,0)
result in X being killed if the value is not valid. This is used by the
"^DD",358.6,358.6,11,21,6,0)
maintanance utility, for example, to find CPT codes that have been
"^DD",358.6,358.6,11,21,7,0)
inactivated.
"^DD",358.6,358.6,11,"DT")
2950908
"^DD",358.6,358.6,12.01,0)
PCE DIM NODE^F^^12;1^K:$L(X)>30!($L(X)<1) X
"^DD",358.6,358.6,12.01,3)
What node will be used to pass the data?
"^DD",358.6,358.6,12.01,21,0)
^^1^1^2960401^^
"^DD",358.6,358.6,12.01,21,1,0)
The node used to pass the data to PCE, using the PCE DEVICE INTERFACE MODULE.
"^DD",358.6,358.6,12.01,"DT")
2960401
"^DD",358.6,358.6,12.02,0)
PCE DIM PIECE, VALUE^NJ2,0^^12;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.6,358.6,12.02,3)
What piece should be used to pass the value?
"^DD",358.6,358.6,12.02,21,0)
^^1^1^2960401^^^
"^DD",358.6,358.6,12.02,21,1,0)
The piece in the PXCA node used to pass the input value.
"^DD",358.6,358.6,12.02,"DT")
2960401
"^DD",358.6,358.6,12.03,0)
PCE DIM PIECE, NARRATIVE^NJ2,0^^12;3^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.6,358.6,12.03,3)
What piece should be used to pass the text displayed on the form?
"^DD",358.6,358.6,12.03,21,0)
^^1^1^2960401^^^^
"^DD",358.6,358.6,12.03,21,1,0)
The piece in the PCXA node used to pass the text displayed on the form.
"^DD",358.6,358.6,12.03,"DT")
2960401
"^DD",358.6,358.6,12.04,0)
PCE DIM PIECE, HEADER^NJ2,0^^12;4^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.6,358.6,12.04,3)
What piece should be used to pass the header displayed on the form?
"^DD",358.6,358.6,12.04,21,0)
^^2^2^2960401^^
"^DD",358.6,358.6,12.04,21,1,0)
The piece on the node specified by the PCE Device Interface Module
"^DD",358.6,358.6,12.04,21,2,0)
that the header is mapped to.
"^DD",358.6,358.6,12.04,"DT")
2960401
"^DD",358.6,358.6,12.05,0)
PCE DIM PIECE, DATA QUALIFIER^NJ2,0^^12;5^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.6,358.6,12.05,3)
What piece should be used to pass the data qualifier?
"^DD",358.6,358.6,12.05,21,0)
^^1^1^2960401^^^
"^DD",358.6,358.6,12.05,21,1,0)
The piece of the PXCA node where the data modifier belongs.
"^DD",358.6,358.6,12.05,"DT")
2960401
"^DD",358.6,358.6,12.06,0)
PCE DIM PIECE, QUANTITY^NJ2,0^^12;6^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.6,358.6,12.06,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",358.6,358.6,12.06,21,0)
^^2^2^2961031^
"^DD",358.6,358.6,12.06,21,1,0)
An entry in this field indicates which piece of the array the quantity
"^DD",358.6,358.6,12.06,21,2,0)
should be passed on when sending data to PCE.
"^DD",358.6,358.6,12.06,"DT")
2961031
"^DD",358.6,358.6,13,0)
ALLOWABLE QUALIFIERS^358.613V^^13;0
"^DD",358.6,358.6,13,21,0)
^^2^2^2951018^^^^
"^DD",358.6,358.6,13,21,1,0)
This mulitiple contains the list of quailifiers that may apply to the
"^DD",358.6,358.6,13,21,2,0)
data.
"^DD",358.6,358.6,14,0)
PCE DIM OUTPUT TRANSFORM^K^^14;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",358.6,358.6,14,3)
This should change Y, the value to be passed, to a value suitable for display.
"^DD",358.6,358.6,14,9)
@
"^DD",358.6,358.6,14,21,0)
^^3^3^2960401^^
"^DD",358.6,358.6,14,21,1,0)
This transform should set Y, the value to be passed to the PCE 
"^DD",358.6,358.6,14,21,2,0)
Device Interface Module, to a value that is suitable for display.
"^DD",358.6,358.6,14,21,3,0)
It may, for example, change an ien to a code.
"^DD",358.6,358.6,14,"DT")
2960401
"^DD",358.6,358.6,15,0)
DATA DESCRIPTION^358.615I^^15;0
"^DD",358.6,358.6,15,21,0)
^^2^2^2950330^
"^DD",358.6,358.6,15,21,1,0)
For interfaces that return records, this multiple stores information on
"^DD",358.6,358.6,15,21,2,0)
the fields, other than the first field.
"^DD",358.6,358.6,16.1,0)
ALLOW INPUT OF NARRATIVE?^S^n:NO;o:OPTIONAL;r:REQUIRED;^16;1^Q
"^DD",358.6,358.6,16.1,3)
Should the user be allowed to enter a narrative? Answer n=NO, o=OPTIONAL, r=REQUIRED
"^DD",358.6,358.6,16.1,21,0)
^^2^2^2950719^
"^DD",358.6,358.6,16.1,21,1,0)
For input interfaces, this field determines whether a narrative is
"^DD",358.6,358.6,16.1,21,2,0)
allowed by the PCE Generic Device Interface.
"^DD",358.6,358.6,16.1,"DT")
2950421
"^DD",358.6,358.6,16.2,0)
NARRATIVE DATA TYPE^P358.99'^IBE(358.99,^16;2^Q
"^DD",358.6,358.6,16.2,3)
What data type definition describes the narrative?
"^DD",358.6,358.6,16.2,21,0)
^^2^2^2951018^^
"^DD",358.6,358.6,16.2,21,1,0)
This determines, among other things, how much space to allocate for the
"^DD",358.6,358.6,16.2,21,2,0)
narrative.
"^DD",358.6,358.6,16.2,"DT")
2951018
"^DD",358.6,358.6,16.3,0)
NARRATIVE HEADER^F^^16;3^K:$L(X)>40!($L(X)<1) X
"^DD",358.6,358.6,16.3,3)
Answer must be 1-40 characters in length.
"^DD",358.6,358.6,16.3,21,0)
^^1^1^2950825^
"^DD",358.6,358.6,16.3,21,1,0)
Used to label the narrative field.
"^DD",358.6,358.6,16.3,"DT")
2950815
"^DD",358.6,358.6,16.5,0)
ALLOW INPUT OF PRIMARY VALUE?^S^n:NO;o:OPTIONAL;r:REQUIRED;^16;5^Q
"^DD",358.6,358.6,16.5,3)
Should a code be entered? n=NO, o=OPTIONAL, r=REQUIRED
"^DD",358.6,358.6,16.5,21,0)
^^2^2^2950719^
"^DD",358.6,358.6,16.5,21,1,0)
This applies only to interfaces for input and determines whether a
"^DD",358.6,358.6,16.5,21,2,0)
value, other than a narrative, can be entered.
"^DD",358.6,358.6,16.5,"DT")
2950426
"^DD",358.6,358.6,16.6,0)
PRIMARY VALUE DATA TYPE^P358.99'^IBE(358.99,^16;6^Q
"^DD",358.6,358.6,16.6,3)
What type of data is the primary value?
"^DD",358.6,358.6,16.6,21,0)
^^2^2^2951018^^^
"^DD",358.6,358.6,16.6,21,1,0)
This applies only to interfaces for input and determines, among other
"^DD",358.6,358.6,16.6,21,2,0)
things, the data type of the value to be entered.
"^DD",358.6,358.6,16.6,"DT")
2950914
"^DD",358.6,358.6,16.7,0)
PRIMARY VALUE HEADER^F^^16;7^K:$L(X)>40!($L(X)<1) X
"^DD",358.6,358.6,16.7,3)
Answer must be 1-40 characters in length.
"^DD",358.6,358.6,16.7,21,0)
^^1^1^2950815^
"^DD",358.6,358.6,16.7,21,1,0)
Used to label the primary value field.
"^DD",358.6,358.6,16.7,"DT")
2950815
"^DD",358.6,358.6,16.8,0)
ALLOW MULTIPLIERS^S^1:YES;^16;8^Q
"^DD",358.6,358.6,16.8,3)
Enter yes if this interface will allow entry of quantity at form development time.
"^DD",358.6,358.6,16.8,21,0)
^^3^3^2961031^
"^DD",358.6,358.6,16.8,21,1,0)
For selection interfaces, this determines whether 'quantity' should be
"^DD",358.6,358.6,16.8,21,2,0)
asked at form development time to pass multiple occurrences of a selection
"^DD",358.6,358.6,16.8,21,3,0)
to PCE.
"^DD",358.6,358.6,16.8,"DT")
2961031
"^DD",358.6,358.6,16.9,0)
ALLOW INPUT OF MULTIPLE CODES?^S^1:YES;^16;9^Q
"^DD",358.6,358.6,16.9,3)
Enter a 1 for 'YES'.
"^DD",358.6,358.6,16.9,21,0)
^^4^4^2961031^
"^DD",358.6,358.6,16.9,21,1,0)
Enter a one in this field if the users will be allowed to add more than
"^DD",358.6,358.6,16.9,21,2,0)
one code to pass along to PCE when one entry is bubbled.
"^DD",358.6,358.6,16.9,21,3,0)
Data in this field REQUIRES that field 17 be populated with mumps code
"^DD",358.6,358.6,16.9,21,4,0)
that will allow selection of the code if the entry is edited.
"^DD",358.6,358.6,16.9,"DT")
2961031
"^DD",358.6,358.6,17,0)
SELECTOR^K^^17;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",358.6,358.6,17,3)
Enter mumps code that will allow the form designer to add a choice to a multiple choice field.
"^DD",358.6,358.6,17,9)
@
"^DD",358.6,358.6,17,21,0)
^^9^9^2950908^^
"^DD",358.6,358.6,17,21,1,0)
This field only applies to input interfaces. It is executed as by an input
"^DD",358.6,358.6,17,21,2,0)
transform when creating a multiple choice field. It should:
"^DD",358.6,358.6,17,21,3,0)
1) Kill X if an nothing is selected, otherwise set X to a value suitable
"^DD",358.6,358.6,17,21,4,0)
for display, perhaps the code.
"^DD",358.6,358.6,17,21,5,0)
2) Set IBLABEL to a suitable label for the choice.
"^DD",358.6,358.6,17,21,6,0)
3) Set IBID to an identifier. The identifier should ideally be exportable,
"^DD",358.6,358.6,17,21,7,0)
meaning the same from site to site. This usually means a coded value
"^DD",358.6,358.6,17,21,8,0)
rather than an ien. The identfier should match that of a corresponding
"^DD",358.6,358.6,17,21,9,0)
selection interface, if there is one.
"^DD",358.6,358.6,17,"DT")
2950908
"^DD",358.6,358.6,18,0)
MANUAL DATA ENTRY ROUTINE^K^^18;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",358.6,358.6,18,3)
Enter the code to be executed during manual data entry for this interface.  This is Standard MUMPS code.
"^DD",358.6,358.6,18,9)
@
"^DD",358.6,358.6,18,21,0)
^^7^7^2960123^
"^DD",358.6,358.6,18,21,1,0)
This field should only be completed for input package interfaces.  This
"^DD",358.6,358.6,18,21,2,0)
code will be executed to provide quick data entry for a user trying to
"^DD",358.6,358.6,18,21,3,0)
input data for a form.  It is expected that the output of this field will
"^DD",358.6,358.6,18,21,4,0)
be used to format the PXCA array prior to calling PCE to file the data
"^DD",358.6,358.6,18,21,5,0)
for the encounter.
"^DD",358.6,358.6,18,21,6,0)
Developers writing routines for this entry should provide a roll and
"^DD",358.6,358.6,18,21,7,0)
scroll interface for manual entry of items only on the form.
"^DD",358.6,358.6,18,"DT")
2960123
"^DD",358.6,358.6,19,0)
EXTERNAL DISPLAY VALUES^K^^19;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",358.6,358.6,19,3)
This is Standard MUMPS code.
"^DD",358.6,358.6,19,9)
@
"^DD",358.6,358.6,19,21,0)
^^5^5^2960214^
"^DD",358.6,358.6,19,21,1,0)
Executable code used to translate the internal value that is to
"^DD",358.6,358.6,19,21,2,0)
be passed to PCE into its external value for display purposes.  It
"^DD",358.6,358.6,19,21,3,0)
is used by the data validation routines to display the external
"^DD",358.6,358.6,19,21,4,0)
values and descriptions of the data to be passed, to the user
"^DD",358.6,358.6,19,21,5,0)
for verification.
"^DD",358.6,358.6,19,"DT")
2960214
"^DD",358.6,358.6,20,0)
PASS DQ AS VALUE^S^1:YES;^20;1^Q
"^DD",358.6,358.6,20,3)
Enter Yes if the Data Qualifier should be passed as the Value when sending data to PCE.
"^DD",358.6,358.6,20,21,0)
^^7^7^2961031^
"^DD",358.6,358.6,20,21,1,0)
If the value of the Data Qualifier shall be passed to PCE as the VALUE,
"^DD",358.6,358.6,20,21,2,0)
this field should be set to one.  Doing so will prevent the data in the
"^DD",358.6,358.6,20,21,3,0)
VALUE from populating the PCE DIM NODE, but instead, will allow the Data
"^DD",358.6,358.6,20,21,4,0)
Qualifier to pass as the VALUE.
"^DD",358.6,358.6,20,21,5,0)
This is used mostly for YES/NO Data Qualifiers, where the value may
"^DD",358.6,358.6,20,21,6,0)
be a question, and the Data Qualifier Value, if bubbled, is the value
"^DD",358.6,358.6,20,21,7,0)
that must be placed on the PCE DIM NODE.
"^DD",358.6,358.6,20,"DT")
2961031
"^DD",358.6,358.6,21,0)
PCE DIM PIECE, VARIABLE VALUE^K^^21;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",358.6,358.6,21,3)
This is Standard MUMPS code.
"^DD",358.6,358.6,21,9)
@
"^DD",358.6,358.6,21,21,0)
^^7^7^2961031^
"^DD",358.6,358.6,21,21,1,0)
This field should be populated when the PCE DIM PIECE VALUE is not
"^DD",358.6,358.6,21,21,2,0)
constant.  If the value of that field is dependent upon specific conditions,
"^DD",358.6,358.6,21,21,3,0)
those conditions may be evaluated by placing the MUMPS code in this
"^DD",358.6,358.6,21,21,4,0)
field.  Ultimately, the code should return a value that will be used as
"^DD",358.6,358.6,21,21,5,0)
the PCE DIM PIECE VALUE.  If the return value is null, the original
"^DD",358.6,358.6,21,21,6,0)
PCE DIM PIECE VALUE field will be used to determine the piece location
"^DD",358.6,358.6,21,21,7,0)
to pass the VALUE on.
"^DD",358.6,358.6,21,"DT")
2961031
"^DD",358.6,358.61,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",358.6,358.61,0,"DT")
2921119
"^DD",358.6,358.61,0,"NM","DESCRIPTION")

"^DD",358.6,358.61,0,"UP")
358.6
"^DD",358.6,358.61,.01,0)
/6^W^^0;1^Q
"^DD",358.6,358.61,.01,3)
Enter a description of the data being exchanged.
"^DD",358.6,358.61,.01,21,0)
^^1^1^2950719^^
"^DD",358.6,358.61,.01,21,1,0)
This should describe the data being exchanged b the package interface.
"^DD",358.6,358.61,.01,"DT")
2930210
"^DD",358.6,358.613,0)
ALLOWABLE QUALIFIERS SUB-FIELD^^.08^6
"^DD",358.6,358.613,0,"DT")
2950810
"^DD",358.6,358.613,0,"IX","B",358.613,.01)

"^DD",358.6,358.613,0,"NM","ALLOWABLE QUALIFIERS")

"^DD",358.6,358.613,0,"UP")
358.6
"^DD",358.6,358.613,.01,0)
ALLOWABLE QUALIFIERS^MV^^0;1^Q
"^DD",358.6,358.613,.01,1,0)
^.1
"^DD",358.6,358.613,.01,1,1,0)
358.613^B
"^DD",358.6,358.613,.01,1,1,1)
S ^IBE(358.6,DA(1),13,"B",$E(X,1,30),DA)=""
"^DD",358.6,358.613,.01,1,1,2)
K ^IBE(358.6,DA(1),13,"B",$E(X,1,30),DA)
"^DD",358.6,358.613,.01,1,1,3)
Required Index for Variable Pointer
"^DD",358.6,358.613,.01,3)
Which qualifiers can apply to the data?
"^DD",358.6,358.613,.01,21,0)
^^1^1^2951018^^^^
"^DD",358.6,358.613,.01,21,1,0)
A qualifier that can be used by this package interface.
"^DD",358.6,358.613,.01,"DT")
2950426
"^DD",358.6,358.613,.01,"V",0)
^.12P^2^2
"^DD",358.6,358.613,.01,"V",1,0)
358.98^QUALIFIER^1^Q^n^n
"^DD",358.6,358.613,.01,"V",2,0)
358.99^DATA ELEMENT^2^D^n^n
"^DD",358.6,358.613,.03,0)
INDEPENDENT MAPPING INFO?^RS^0:NO;1:YES;^0;3^Q
"^DD",358.6,358.613,.03,3)
YES means that fields on the form associated with this qualifier will have its own rules for entering the data to the database.
"^DD",358.6,358.613,.03,21,0)
^^2^2^2950719^
"^DD",358.6,358.613,.03,21,1,0)
YES means that data can be mapped into the PCE Generic Device Interface
"^DD",358.6,358.613,.03,21,2,0)
based on the qualifier.
"^DD",358.6,358.613,.03,"DT")
2950426
"^DD",358.6,358.613,.04,0)
PCE GDI NODE^F^^0;4^K:$L(X)>30!($L(X)<1) X
"^DD",358.6,358.613,.04,3)
What node should the qualifier be placed on?
"^DD",358.6,358.613,.04,21,0)
^^1^1^2950719^
"^DD",358.6,358.613,.04,21,1,0)
The node where the data should be placed.
"^DD",358.6,358.613,.04,"DT")
2950710
"^DD",358.6,358.613,.05,0)
PCE GDI PIECE, VALUE^NJ2,0^^0;5^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.6,358.613,.05,3)
What piece should the primary value be located?
"^DD",358.6,358.613,.05,21,0)
^^1^1^2950719^
"^DD",358.6,358.613,.05,21,1,0)
The piece on the node where the value should be placed.
"^DD",358.6,358.613,.05,"DT")
2950426
"^DD",358.6,358.613,.07,0)
PCE GDI PIECE, HEADER^NJ2,0^^0;7^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.6,358.613,.07,3)
What piece should the header be located on?
"^DD",358.6,358.613,.07,21,0)
^^1^1^2950719^
"^DD",358.6,358.613,.07,21,1,0)
The piece on the node where the associated header should be placed.
"^DD",358.6,358.613,.07,"DT")
2950426
"^DD",358.6,358.613,.08,0)
PCE GDI PIECE, QUALIFIER^NJ2,0^^0;8^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.6,358.613,.08,3)
What piece should the qualifier be located on?
"^DD",358.6,358.613,.08,21,0)
^^1^1^2950719^
"^DD",358.6,358.613,.08,21,1,0)
The piece where the qualifier should go.
"^DD",358.6,358.613,.08,"DT")
2950426
"^DD",358.6,358.615,0)
DATA DESCRIPTION SUB-FIELD^^.05^5
"^DD",358.6,358.615,0,"DT")
2950417
"^DD",358.6,358.615,0,"ID","WRITE")
D EN^DDIOL("  PIECE="_$P(^(0),U,3),"","?0")
"^DD",358.6,358.615,0,"IX","B",358.615,.01)

"^DD",358.6,358.615,0,"IX","C",358.615,.03)

"^DD",358.6,358.615,0,"NM","DATA DESCRIPTION")

"^DD",358.6,358.615,0,"UP")
358.6
"^DD",358.6,358.615,.01,0)
DATA^MF^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",358.6,358.615,.01,1,0)
^.1
"^DD",358.6,358.615,.01,1,1,0)
358.615^B
"^DD",358.6,358.615,.01,1,1,1)
S ^IBE(358.6,DA(1),15,"B",$E(X,1,30),DA)=""
"^DD",358.6,358.615,.01,1,1,2)
K ^IBE(358.6,DA(1),15,"B",$E(X,1,30),DA)
"^DD",358.6,358.615,.01,3)
Enter a descriptive name for this data field, up to 30 characters.
"^DD",358.6,358.615,.01,21,0)
^^1^1^2950719^
"^DD",358.6,358.615,.01,21,1,0)
A descriptive name for the data.
"^DD",358.6,358.615,.01,"DT")
2950320
"^DD",358.6,358.615,.02,0)
MAXIMUM LENGTH^RNJ3,0^^0;2^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.6,358.615,.02,3)
What is the maximum length of this field?
"^DD",358.6,358.615,.02,21,0)
^^1^1^2950719^
"^DD",358.6,358.615,.02,21,1,0)
The maximum length of the data.
"^DD",358.6,358.615,.02,"DT")
2950320
"^DD",358.6,358.615,.03,0)
PIECE^NJ1,0X^^0;3^K:+X'=X!(X>8)!(X<2)!(X?.E1"."1N.N)!($D(^IBE(358.6,D0,15,"C",X))) X
"^DD",358.6,358.615,.03,1,0)
^.1
"^DD",358.6,358.615,.03,1,1,0)
358.615^C
"^DD",358.6,358.615,.03,1,1,1)
S ^IBE(358.6,DA(1),15,"C",$E(X,1,30),DA)=""
"^DD",358.6,358.615,.03,1,1,2)
K ^IBE(358.6,DA(1),15,"C",$E(X,1,30),DA)
"^DD",358.6,358.615,.03,1,1,"%D",0)
^^1^1^2950320^
"^DD",358.6,358.615,.03,1,1,"%D",1,0)
Indexes the field by piece.
"^DD",358.6,358.615,.03,1,1,"DT")
2950320
"^DD",358.6,358.615,.03,3)
In the returned record, which piece will this field be?
"^DD",358.6,358.615,.03,21,0)
^^1^1^2950719^
"^DD",358.6,358.615,.03,21,1,0)
The piece that the data will be returned as.
"^DD",358.6,358.615,.03,"DT")
2950407
"^DD",358.6,358.615,.04,0)
ANNEX NODE^F^^0;4^K:$L(X)>10!($L(X)<1) X
"^DD",358.6,358.615,.04,3)
You can optionally specify the subscript to store the data. Use this when the entire record won't fit on one node.
"^DD",358.6,358.615,.04,21,0)
^^2^2^2950719^
"^DD",358.6,358.615,.04,21,1,0)
In case all the returned data can not be returned on a single node an
"^DD",358.6,358.615,.04,21,2,0)
annex node can be specified.
"^DD",358.6,358.615,.04,"DT")
2950320
"^DD",358.6,358.615,.05,0)
RECOMMENDED HEADER^F^^0;5^K:$L(X)>40!($L(X)<1) X
"^DD",358.6,358.615,.05,3)
Answer must be 1-40 characters in length.
"^DD",358.6,358.615,.05,21,0)
^^1^1^2950719^^
"^DD",358.6,358.615,.05,21,1,0)
The recommended header will be used as the default when designing a form.
"^DD",358.6,358.615,.05,"DT")
2950417
"^DD",358.6,358.66,0)
PROTECTED LOCAL VARIABLES SUB-FIELD^^.01^1
"^DD",358.6,358.66,0,"DT")
2930608
"^DD",358.6,358.66,0,"IX","B",358.66,.01)

"^DD",358.6,358.66,0,"NM","PROTECTED LOCAL VARIABLES")

"^DD",358.6,358.66,0,"UP")
358.6
"^DD",358.6,358.66,.01,0)
PROTECTED LOCAL VARIABLES^MFX^^0;1^K:'$$VARIABLE^IBDFU5(X) X
"^DD",358.6,358.66,.01,1,0)
^.1
"^DD",358.6,358.66,.01,1,1,0)
358.66^B
"^DD",358.6,358.66,.01,1,1,1)
S ^IBE(358.6,DA(1),6,"B",$E(X,1,30),DA)=""
"^DD",358.6,358.66,.01,1,1,2)
K ^IBE(358.6,DA(1),6,"B",$E(X,1,30),DA)
"^DD",358.6,358.66,.01,3)
Enter variables that should be NEWED before the entry action or calling the interface.
"^DD",358.6,358.66,.01,21,0)
^^3^3^2950426^^
"^DD",358.6,358.66,.01,21,1,0)
 
"^DD",358.6,358.66,.01,21,2,0)
A list of variables that should be newed before the entry action or
"^DD",358.6,358.66,.01,21,3,0)
calling the interface.
"^DD",358.6,358.66,.01,"DT")
2930608
"^DD",358.6,358.67,0)
REQUIRED LOCAL VARIABLES SUB-FIELD^^.01^1
"^DD",358.6,358.67,0,"DT")
2930521
"^DD",358.6,358.67,0,"IX","B",358.67,.01)

"^DD",358.6,358.67,0,"NM","REQUIRED LOCAL VARIABLES")

"^DD",358.6,358.67,0,"UP")
358.6
"^DD",358.6,358.67,.01,0)
REQUIRED LOCAL VARIABLE^MFX^^0;1^K:'$$VARIABLE^IBDFU5(X) X
"^DD",358.6,358.67,.01,1,0)
^.1
"^DD",358.6,358.67,.01,1,1,0)
358.67^B
"^DD",358.6,358.67,.01,1,1,1)
S ^IBE(358.6,DA(1),7,"B",$E(X,1,30),DA)=""
"^DD",358.6,358.67,.01,1,1,2)
K ^IBE(358.6,DA(1),7,"B",$E(X,1,30),DA)
"^DD",358.6,358.67,.01,3)
Enter any variables that must exist before the Package Interface routine is called.
"^DD",358.6,358.67,.01,21,0)
^^4^4^2930528^
"^DD",358.6,358.67,.01,21,1,0)
 
"^DD",358.6,358.67,.01,21,2,0)
A variable that is required input to the interface routine. The interface
"^DD",358.6,358.67,.01,21,3,0)
routine will not be called if all of the required variables are not
"^DD",358.6,358.67,.01,21,4,0)
defined.
"^DD",358.6,358.67,.01,"DT")
2930521
"^DD",358.7,358.7,0)
FIELD^^.08^8
"^DD",358.7,358.7,0,"DDA")
N
"^DD",358.7,358.7,0,"DT")
2950717
"^DD",358.7,358.7,0,"ID",.02)
W " STARTING COL=",$P(^(0),U,2)+1
"^DD",358.7,358.7,0,"ID",.03)
W " STARTING ROW=",$P(^(0),U,3)+1
"^DD",358.7,358.7,0,"ID",.06)
W ""
"^DD",358.7,358.7,0,"IX","B",358.7,.01)

"^DD",358.7,358.7,0,"IX","C",358.7,.06)

"^DD",358.7,358.7,0,"NM","IMP/EXP FORM LINE")

"^DD",358.7,358.7,0,"VRPK")
AUTOMATED INFO COLLECTION SYS
"^DD",358.7,358.7,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",358.7,358.7,.01,1,0)
^.1
"^DD",358.7,358.7,.01,1,1,0)
358.7^B
"^DD",358.7,358.7,.01,1,1,1)
S ^IBE(358.7,"B",$E(X,1,30),DA)=""
"^DD",358.7,358.7,.01,1,1,2)
K ^IBE(358.7,"B",$E(X,1,30),DA)
"^DD",358.7,358.7,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",358.7,358.7,.01,21,0)
^^4^4^2930527^
"^DD",358.7,358.7,.01,21,1,0)
 
"^DD",358.7,358.7,.01,21,2,0)
The name given to the line. Lines should be given names that will allow
"^DD",358.7,358.7,.01,21,3,0)
them to be identifies, such as V(1,1), meaning a vertical line starting at
"^DD",358.7,358.7,.01,21,4,0)
coordinates (1,1).
"^DD",358.7,358.7,.02,0)
LINE STARTING COLUMN^RNJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.7,358.7,.02,2)
S Y(0)=Y S:+Y=Y Y=+Y+1
"^DD",358.7,358.7,.02,2.1)
S:+Y=Y Y=+Y+1
"^DD",358.7,358.7,.02,3)
Enter the block column the line should begin at.
"^DD",358.7,358.7,.02,21,0)
^^2^2^2930527^
"^DD",358.7,358.7,.02,21,1,0)
 
"^DD",358.7,358.7,.02,21,2,0)
The column, relative to the block, that the line should begin at.
"^DD",358.7,358.7,.02,23,0)
^^4^4^2930715^
"^DD",358.7,358.7,.02,23,1,0)
The internal representation starts at 0, the external representation
"^DD",358.7,358.7,.02,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",358.7,358.7,.02,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",358.7,358.7,.02,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",358.7,358.7,.02,"DT")
2930715
"^DD",358.7,358.7,.03,0)
LINE STARTING ROW^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.7,358.7,.03,2)
S Y(0)=Y S:+Y=Y Y=+Y+1
"^DD",358.7,358.7,.03,2.1)
S:+Y=Y Y=+Y+1
"^DD",358.7,358.7,.03,3)
Enter the block row the line should begin at.
"^DD",358.7,358.7,.03,21,0)
^^2^2^2930527^
"^DD",358.7,358.7,.03,21,1,0)
 
"^DD",358.7,358.7,.03,21,2,0)
The row, relative to the block, that the line should begin at.
"^DD",358.7,358.7,.03,23,0)
^^4^4^2930715^
"^DD",358.7,358.7,.03,23,1,0)
The internal representation starts at 0, the external representation
"^DD",358.7,358.7,.03,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",358.7,358.7,.03,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",358.7,358.7,.03,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",358.7,358.7,.03,"DT")
2930715
"^DD",358.7,358.7,.04,0)
ORIENTATION^RS^H:HORIZONTAL;V:VERTICAL;^0;4^Q
"^DD",358.7,358.7,.04,.1)
ORIENTATION (HORIZONTAL/VERTICAL)
"^DD",358.7,358.7,.04,3)
Should the line be horizontal or vertical?
"^DD",358.7,358.7,.04,21,0)
^^2^2^2930607^
"^DD",358.7,358.7,.04,21,1,0)
 
"^DD",358.7,358.7,.04,21,2,0)
The direction the line goes in.
"^DD",358.7,358.7,.04,"DT")
2930415
"^DD",358.7,358.7,.05,0)
LENGTH^RNJ3,0^^0;5^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.7,358.7,.05,3)
How long should the line be?
"^DD",358.7,358.7,.05,21,0)
^^3^3^2930527^
"^DD",358.7,358.7,.05,21,1,0)
 
"^DD",358.7,358.7,.05,21,2,0)
The length of the line. For horizontal lines the length is in terms of
"^DD",358.7,358.7,.05,21,3,0)
characters. For vertical lines it is in terms of rows.
"^DD",358.7,358.7,.05,"DT")
2930319
"^DD",358.7,358.7,.06,0)
BLOCK^RP358.1'^IBE(358.1,^0;6^Q
"^DD",358.7,358.7,.06,1,0)
^.1
"^DD",358.7,358.7,.06,1,1,0)
358.7^C
"^DD",358.7,358.7,.06,1,1,1)
S ^IBE(358.7,"C",$E(X,1,30),DA)=""
"^DD",358.7,358.7,.06,1,1,2)
K ^IBE(358.7,"C",$E(X,1,30),DA)
"^DD",358.7,358.7,.06,1,1,"%D",0)
^^2^2^2930319^
"^DD",358.7,358.7,.06,1,1,"%D",1,0)
 
"^DD",358.7,358.7,.06,1,1,"%D",2,0)
This cross-reference is used to find all lines belonging to a block.
"^DD",358.7,358.7,.06,1,1,"DT")
2930319
"^DD",358.7,358.7,.06,3)
What block should the line appear in?
"^DD",358.7,358.7,.06,4)
W "DOES THIS WORK",!
"^DD",358.7,358.7,.06,21,0)
^^2^2^2930802^^
"^DD",358.7,358.7,.06,21,1,0)
 
"^DD",358.7,358.7,.06,21,2,0)
The block the line appears in.
"^DD",358.7,358.7,.06,"DT")
2930802
"^DD",358.7,358.7,.07,0)
NUMBER OF LINES^NJ3,0^^0;7^K:+X'=X!(X>100)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.7,358.7,.07,3)
Type a Number between 1 and 100, 0 Decimal Digits
"^DD",358.7,358.7,.07,"DT")
2950717
"^DD",358.7,358.7,.08,0)
LINE SPACING^S^s:SINGLE;d:DOUBLE;t:TRIPLE;^0;8^Q
"^DD",358.7,358.7,.08,3)
How should the lines be spaced?
"^DD",358.7,358.7,.08,"DT")
2950717
"^DD",358.8,358.8,0)
FIELD^^1^7
"^DD",358.8,358.8,0,"DDA")
N
"^DD",358.8,358.8,0,"DT")
2930802
"^DD",358.8,358.8,0,"IX","B",358.8,.01)

"^DD",358.8,358.8,0,"IX","C",358.8,.02)

"^DD",358.8,358.8,0,"NM","IMP/EXP TEXT AREA")

"^DD",358.8,358.8,0,"VRPK")
AUTOMATED INFO COLLECTION SYS
"^DD",358.8,358.8,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",358.8,358.8,.01,1,0)
^.1
"^DD",358.8,358.8,.01,1,1,0)
358.8^B
"^DD",358.8,358.8,.01,1,1,1)
S ^IBE(358.8,"B",$E(X,1,30),DA)=""
"^DD",358.8,358.8,.01,1,1,2)
K ^IBE(358.8,"B",$E(X,1,30),DA)
"^DD",358.8,358.8,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",358.8,358.8,.01,21,0)
^^2^2^2930528^
"^DD",358.8,358.8,.01,21,1,0)
 
"^DD",358.8,358.8,.01,21,2,0)
The name of the text area.
"^DD",358.8,358.8,.02,0)
BLOCK^RP358.1'^IBE(358.1,^0;2^Q
"^DD",358.8,358.8,.02,1,0)
^.1
"^DD",358.8,358.8,.02,1,1,0)
358.8^C
"^DD",358.8,358.8,.02,1,1,1)
S ^IBE(358.8,"C",$E(X,1,30),DA)=""
"^DD",358.8,358.8,.02,1,1,2)
K ^IBE(358.8,"C",$E(X,1,30),DA)
"^DD",358.8,358.8,.02,1,1,"%D",0)
^^3^3^2930326^
"^DD",358.8,358.8,.02,1,1,"%D",1,0)
 
"^DD",358.8,358.8,.02,1,1,"%D",2,0)
Used to find all of the text areas that should appear on a particular
"^DD",358.8,358.8,.02,1,1,"%D",3,0)
block.
"^DD",358.8,358.8,.02,1,1,"DT")
2930326
"^DD",358.8,358.8,.02,3)
What block do you want the text to appear in?
"^DD",358.8,358.8,.02,21,0)
^^2^2^2930802^^
"^DD",358.8,358.8,.02,21,1,0)
 
"^DD",358.8,358.8,.02,21,2,0)
The block the text area is displayed in.
"^DD",358.8,358.8,.02,"DT")
2930802
"^DD",358.8,358.8,.03,0)
TEXT AREA STARTING COLUMN^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.8,358.8,.03,2)
S Y(0)=Y S:+Y=Y Y=+Y+1
"^DD",358.8,358.8,.03,2.1)
S:+Y=Y Y=+Y+1
"^DD",358.8,358.8,.03,3)
What block column should the text begin in?
"^DD",358.8,358.8,.03,21,0)
^^2^2^2930528^
"^DD",358.8,358.8,.03,21,1,0)
 
"^DD",358.8,358.8,.03,21,2,0)
The starting position of the text area, relative to the block.
"^DD",358.8,358.8,.03,23,0)
^^4^4^2930715^
"^DD",358.8,358.8,.03,23,1,0)
The internal representation starts at 0, the external representation
"^DD",358.8,358.8,.03,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",358.8,358.8,.03,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",358.8,358.8,.03,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",358.8,358.8,.03,"DT")
2930715
"^DD",358.8,358.8,.04,0)
TEXT AREA STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.8,358.8,.04,2)
S Y(0)=Y S:+Y=Y Y=+Y+1
"^DD",358.8,358.8,.04,2.1)
S:+Y=Y Y=+Y+1
"^DD",358.8,358.8,.04,3)
What block row should the text begin in?
"^DD",358.8,358.8,.04,21,0)
^^2^2^2930528^
"^DD",358.8,358.8,.04,21,1,0)
 
"^DD",358.8,358.8,.04,21,2,0)
The starting row of the text area, relative to the block.
"^DD",358.8,358.8,.04,23,0)
^^4^4^2930715^
"^DD",358.8,358.8,.04,23,1,0)
The internal representation starts at 0, the external representation
"^DD",358.8,358.8,.04,23,2,0)
starts at 1. The difference is because for computing the form image
"^DD",358.8,358.8,.04,23,3,0)
it is convenient to work with displacements from the top left-hand
"^DD",358.8,358.8,.04,23,4,0)
corner. However, users do not want to work with row=0 or column=0.
"^DD",358.8,358.8,.04,"DT")
2930715
"^DD",358.8,358.8,.05,0)
TEXT WIDTH^RNJ3,0^^0;5^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.8,358.8,.05,3)
How many columns should be allocated on the block for the text?
"^DD",358.8,358.8,.05,21,0)
^^2^2^2930528^
"^DD",358.8,358.8,.05,21,1,0)
 
"^DD",358.8,358.8,.05,21,2,0)
The width of the text area, measured in characters.
"^DD",358.8,358.8,.05,"DT")
2930326
"^DD",358.8,358.8,.06,0)
TEXT HEIGHT^RNJ3,0^^0;6^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.8,358.8,.06,3)
How many lines on the block should be allocated for the text?
"^DD",358.8,358.8,.06,21,0)
^^2^2^2930528^
"^DD",358.8,358.8,.06,21,1,0)
 
"^DD",358.8,358.8,.06,21,2,0)
The height of the text area, measured in lines.
"^DD",358.8,358.8,.06,"DT")
2930326
"^DD",358.8,358.8,1,0)
TEXT^358.81^^1;0
"^DD",358.8,358.8,1,21,0)
^^2^2^2930528^
"^DD",358.8,358.8,1,21,1,0)
 
"^DD",358.8,358.8,1,21,2,0)
The text that should appear within the text area.
"^DD",358.8,358.81,0)
TEXT SUB-FIELD^^.01^1
"^DD",358.8,358.81,0,"NM","TEXT")

"^DD",358.8,358.81,0,"UP")
358.8
"^DD",358.8,358.81,.01,0)
TEXT^WL^^0;1^Q
"^DD",358.8,358.81,.01,3)
Enter the text that you want to appear in the block.
"^DD",358.8,358.81,.01,"DT")
2930326
"^DD",358.91,358.91,0)
FIELD^^.04^4
"^DD",358.91,358.91,0,"DT")
2960123
"^DD",358.91,358.91,0,"IX","B",358.91,.01)

"^DD",358.91,358.91,0,"NM","IMP/EXP MARKING AREA")

"^DD",358.91,358.91,0,"PT",358.22,.06)

"^DD",358.91,358.91,0,"VRPK")
AUTOMATED INFO COLLECTION SYS
"^DD",358.91,358.91,.01,0)
NAME^RFX^^0;1^K:$L(X)>30 X
"^DD",358.91,358.91,.01,1,0)
^.1
"^DD",358.91,358.91,.01,1,1,0)
358.91^B
"^DD",358.91,358.91,.01,1,1,1)
S ^IBE(358.91,"B",$E(X,1,30),DA)=""
"^DD",358.91,358.91,.01,1,1,2)
K ^IBE(358.91,"B",$E(X,1,30),DA)
"^DD",358.91,358.91,.01,3)
NAME MUST BE UNDER 31 CHARACTERS
"^DD",358.91,358.91,.01,21,0)
^^1^1^2930608^
"^DD",358.91,358.91,.01,21,1,0)
The name should describe the appearance of the marking area on the form.
"^DD",358.91,358.91,.02,0)
DISPLAY STRING^F^^0;2^K:$L(X)>20!($L(X)<1) X
"^DD",358.91,358.91,.02,3)
Answer must be 1-20 characters in length.
"^DD",358.91,358.91,.02,21,0)
^^2^2^2930528^
"^DD",358.91,358.91,.02,21,1,0)
 
"^DD",358.91,358.91,.02,21,2,0)
The text that should be displayed in the MARKING AREA.
"^DD",358.91,358.91,.02,"DT")
2921207
"^DD",358.91,358.91,.03,0)
TOOL KIT MEMBER?^S^0:NO;1:YES;^0;3^Q
"^DD",358.91,358.91,.03,3)
Enter YES if the MARKING AREA is part of the tool kit, NO otherwise.
"^DD",358.91,358.91,.03,21,0)
^^2^2^2960123^
"^DD",358.91,358.91,.03,21,1,0)
Used to prevent local sites from editing MARKING AREAS that are part of the
"^DD",358.91,358.91,.03,21,2,0)
tool kit.
"^DD",358.91,358.91,.03,"DT")
2960123
"^DD",358.91,358.91,.04,0)
REQUIRES SPECIAL PROCEDURE?^S^0:NO;1:YES;^0;4^Q
"^DD",358.91,358.91,.04,3)
Answer NO if the Marking Area is just text, YES if it requires a special procedure to print.
"^DD",358.91,358.91,.04,21,0)
^^2^2^2960123^
"^DD",358.91,358.91,.04,21,1,0)
No means that the Marking Area is just text that can be printed.  YES 
"^DD",358.91,358.91,.04,21,2,0)
means that a special procedure must be called to print the Marking Area.
"^DD",358.91,358.91,.04,"DT")
2960123
"^DD",358.93,358.93,0)
FIELD^^1^9
"^DD",358.93,358.93,0,"DDA")
N
"^DD",358.93,358.93,0,"DT")
2960119
"^DD",358.93,358.93,0,"IX","A",358.931,.01)

"^DD",358.93,358.93,0,"IX","A1",358.931,.02)

"^DD",358.93,358.93,0,"IX","B",358.93,.01)

"^DD",358.93,358.93,0,"IX","C",358.93,.08)

"^DD",358.93,358.93,0,"NM","IMP/EXP MULTIPLE CHOICE FIELD")

"^DD",358.93,358.93,0,"VRPK")
AUTOMATED INFO COLLECTION SYS
"^DD",358.93,358.93,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",358.93,358.93,.01,1,0)
^.1
"^DD",358.93,358.93,.01,1,1,0)
358.93^B
"^DD",358.93,358.93,.01,1,1,1)
S ^IBE(358.93,"B",$E(X,1,30),DA)=""
"^DD",358.93,358.93,.01,1,1,2)
K ^IBE(358.93,"B",$E(X,1,30),DA)
"^DD",358.93,358.93,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",358.93,358.93,.01,21,0)
^^2^2^2930623^^^^
"^DD",358.93,358.93,.01,21,1,0)
 
"^DD",358.93,358.93,.01,21,2,0)
The division the setup is for.
"^DD",358.93,358.93,.01,"DT")
2930518
"^DD",358.93,358.93,.02,0)
QUESTION OR EXPLANATION ^F^^0;2^K:$L(X)>150!($L(X)<1) X
"^DD",358.93,358.93,.02,.1)
YOU CAN ENTER TEXT, SUCH AS A QUESTION, TO APPEAR ON THE FORM
"^DD",358.93,358.93,.02,3)
You may enter text, such as a question, to appear as part of the input field.
"^DD",358.93,358.93,.02,"DT")
2940721
"^DD",358.93,358.93,.03,0)
STARTING COLUMN FOR TEXT^NJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.93,358.93,.03,2)
S Y(0)=Y S Y=+Y+1
"^DD",358.93,358.93,.03,2.1)
S Y=+Y+1
"^DD",358.93,358.93,.03,3)
What block column shuld the label begin in?
"^DD",358.93,358.93,.03,"DT")
2940721
"^DD",358.93,358.93,.04,0)
STARTING ROW FOR TEXT^NJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.93,358.93,.04,2)
S Y(0)=Y S Y=+Y+1
"^DD",358.93,358.93,.04,2.1)
S Y=+Y+1
"^DD",358.93,358.93,.04,3)
What block row should the label start in?
"^DD",358.93,358.93,.04,"DT")
2940721
"^DD",358.93,358.93,.06,0)
TYPE OF DATA^R*P358.6'X^IBE(358.6,^0;6^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$D(^(9))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",358.93,358.93,.06,.1)
WHAT TYPE OF DATA WILL BE ENTERED TO THIS FIELD?
"^DD",358.93,358.93,.06,3)
What type of data will be entered to the field?
"^DD",358.93,358.93,.06,12)
Allows only available interfaces for passing data to DHCP.
"^DD",358.93,358.93,.06,12.1)
S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$D(^(9))"
"^DD",358.93,358.93,.06,21,0)
^^2^2^2950914^^^
"^DD",358.93,358.93,.06,21,1,0)
Points to the package interface file. That is where information about the
"^DD",358.93,358.93,.06,21,2,0)
data and how to map it to DHCP is stored.
"^DD",358.93,358.93,.06,"DT")
2950727
"^DD",358.93,358.93,.07,0)
TEXT APPEARANCE^FX^^0;7^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBR"'[$E(X,1))!("UBR"'[$E(X,2))!("UBR"'[$E(X,3)) X
"^DD",358.93,358.93,.07,.1)
HOW SHOULD THE TEXT APPEAR? CHOOSE FROM {U,B,R}
"^DD",358.93,358.93,.07,3)
B=bold,U=underline,R=reverse You can enter any combination of {B,U,R}.
"^DD",358.93,358.93,.07,"DT")
2940816
"^DD",358.93,358.93,.08,0)
BLOCK^RP358.1'^IBE(358.1,^0;8^Q
"^DD",358.93,358.93,.08,1,0)
^.1
"^DD",358.93,358.93,.08,1,1,0)
358.93^C
"^DD",358.93,358.93,.08,1,1,1)
S ^IBE(358.93,"C",$E(X,1,30),DA)=""
"^DD",358.93,358.93,.08,1,1,2)
K ^IBE(358.93,"C",$E(X,1,30),DA)
"^DD",358.93,358.93,.08,1,1,"%D",0)
^^1^1^2940720^
"^DD",358.93,358.93,.08,1,1,"%D",1,0)
Used to find all the input fields appearing in a block.
"^DD",358.93,358.93,.08,1,1,"DT")
2940720
"^DD",358.93,358.93,.08,3)
What block should this input field appear in?
"^DD",358.93,358.93,.08,"DT")
2940720
"^DD",358.93,358.93,.09,0)
SELECTION RULE^S^0:ANY NUMBER;1:EXACTLY ONE;2:AT MOST ONE (0 or 1);3:AT LEAST ONE (1 or more);^0;9^Q
"^DD",358.93,358.93,.09,3)
Which rule applies to the choices the user can makee?
"^DD",358.93,358.93,.09,"DT")
2941209
"^DD",358.93,358.93,1,0)
CHOICE^358.931^^1;0
"^DD",358.93,358.93,1,12)
Allows only package interfaces that print reports and that are available.
"^DD",358.93,358.93,1,12.1)
S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
"^DD",358.93,358.93,1,21,0)
^^2^2^2930528^
"^DD",358.93,358.93,1,21,1,0)
 
"^DD",358.93,358.93,1,21,2,0)
The reports that should print.
"^DD",358.93,358.93,1,"DT")
2940721
"^DD",358.93,358.931,0)
CHOICE SUB-FIELD^^.05^9
"^DD",358.93,358.931,0,"DT")
2960119
"^DD",358.93,358.931,0,"IX","B",358.931,.01)

"^DD",358.93,358.931,0,"NM","CHOICE")

"^DD",358.93,358.931,0,"UP")
358.93
"^DD",358.93,358.931,.01,0)
CHOICE^MF^^0;1^K:$L(X)>68!($L(X)<1) X
"^DD",358.93,358.931,.01,.1)
LABEL APPEARING WITH THE BUBBLE
"^DD",358.93,358.931,.01,1,0)
^.1
"^DD",358.93,358.931,.01,1,1,0)
358.931^B
"^DD",358.93,358.931,.01,1,1,1)
S ^IBE(358.93,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",358.93,358.931,.01,1,1,2)
K ^IBE(358.93,DA(1),1,"B",$E(X,1,30),DA)
"^DD",358.93,358.931,.01,1,2,0)
358.93^A^MUMPS
"^DD",358.93,358.931,.01,1,2,1)
I $P($G(^IBE(358.93,DA(1),1,DA,0)),U,2) S ^IBE(358.93,"A",$P(^IBE(358.93,DA(1),0),U),$P(^IBE(358.93,DA(1),1,DA,0),U,2),X,DA(1),DA)=""
"^DD",358.93,358.931,.01,1,2,2)
I $P($G(^IBE(358.93,DA(1),1,DA,0)),U,2) K ^IBE(358.93,"A",$P(^IBE(358.93,DA(1),0),U),$P(^IBE(358.93,DA(1),1,DA,0),U,2),X,DA(1),DA)
"^DD",358.93,358.931,.01,1,2,"%D",0)
^^3^3^2960402^^^^
"^DD",358.93,358.931,.01,1,2,"%D",1,0)
 
"^DD",358.93,358.931,.01,1,2,"%D",2,0)
Used to find all the reports/forms that should be printed for the division
"^DD",358.93,358.931,.01,1,2,"%D",3,0)
under a particular condition.
"^DD",358.93,358.931,.01,1,2,"DT")
2960402
"^DD",358.93,358.931,.01,3)
Answer must be 1-68 characters in length.
"^DD",358.93,358.931,.01,12)
Allows only reports installed in the Package Interface file.
"^DD",358.93,358.931,.01,12.1)
S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
"^DD",358.93,358.931,.01,21,0)
^^3^3^2960118^^
"^DD",358.93,358.931,.01,21,1,0)
 
"^DD",358.93,358.931,.01,21,2,0)
A report that should print. Only reports contained in the Package
"^DD",358.93,358.931,.01,21,3,0)
Interface file can be printed by the print manager.
"^DD",358.93,358.931,.01,"DT")
2960402
"^DD",358.93,358.931,.02,0)
STARTING COLUMN FOR LABEL^NJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.93,358.931,.02,1,0)
^.1
"^DD",358.93,358.931,.02,1,1,0)
358.93^A1^MUMPS
"^DD",358.93,358.931,.02,1,1,1)
S ^IBE(358.93,"A",$P($G(^IBE(358.93,DA(1),0)),U),X,$P($G(^IBE(358.93,DA(1),1,DA,0)),U),DA(1),DA)=""
"^DD",358.93,358.931,.02,1,1,2)
K ^IBE(358.93,"A",$P($G(^IBE(358.93,DA(1),0)),U),X,$P($G(^IBE(358.93,DA(1),1,DA,0)),U),DA(1),DA)
"^DD",358.93,358.931,.02,1,1,"%D",0)
^^3^3^2960402^^^^
"^DD",358.93,358.931,.02,1,1,"%D",1,0)
 
"^DD",358.93,358.931,.02,1,1,"%D",2,0)
Used to find all the reports/forms that should be printed for the entire
"^DD",358.93,358.931,.02,1,1,"%D",3,0)
division under a particular condition.
"^DD",358.93,358.931,.02,1,1,"DT")
2960402
"^DD",358.93,358.931,.02,2)
S Y(0)=Y S Y=+Y+1
"^DD",358.93,358.931,.02,2.1)
S Y=+Y+1
"^DD",358.93,358.931,.02,3)
What block column should the label begin in?
"^DD",358.93,358.931,.02,4)
D HELP6^IBDFU5A
"^DD",358.93,358.931,.02,21,0)
^^2^2^2930528^
"^DD",358.93,358.931,.02,21,1,0)
 
"^DD",358.93,358.931,.02,21,2,0)
The condition under which the report should print.
"^DD",358.93,358.931,.02,"DT")
2960402
"^DD",358.93,358.931,.03,0)
STARTING ROW FOR LABEL^NJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.93,358.931,.03,2)
S Y(0)=Y S Y=+Y+1
"^DD",358.93,358.931,.03,2.1)
S Y=+Y+1
"^DD",358.93,358.931,.03,3)
What block row should the label be in?
"^DD",358.93,358.931,.03,"DT")
2940720
"^DD",358.93,358.931,.04,0)
LABEL APPEARANCE^FX^^0;4^S X=$$UPPER^VALM1(X) K:$L(X)>4!("UBRI"'[$E(X,1))!("UBRI"'[$E(X,2))!("UBRI"'[$E(X,3))!("UBRI"'[$E(X,4)) X
"^DD",358.93,358.931,.04,.1)
HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {U,B,R,I}
"^DD",358.93,358.931,.04,3)
B=bold,U=underline,R=reverse,I=invisible You can enter any combination of {B,U,R,I}. The label will not print if it is made invisible.
"^DD",358.93,358.931,.04,"DT")
2940816
"^DD",358.93,358.931,.05,0)
CHOICE LABEL^RF^^0;5^K:$L(X)>120!($L(X)<1) X
"^DD",358.93,358.931,.05,3)
Answer must be 1-120 characters in length.
"^DD",358.93,358.931,.05,21,0)
^^1^1^2960118^
"^DD",358.93,358.931,.05,21,1,0)
The label that is to appear with the choice.
"^DD",358.93,358.931,.05,"DT")
2960118
"^DD",358.93,358.931,.06,0)
STARTING COLUMN FOR BUBBLE^RNJ3,0XO^^0;6^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.93,358.931,.06,2)
S Y(0)=Y S Y=+Y+1
"^DD",358.93,358.931,.06,2.1)
S Y=+Y+1
"^DD",358.93,358.931,.06,3)
What block column should the bubble begin in?
"^DD",358.93,358.931,.06,"DT")
2940720
"^DD",358.93,358.931,.07,0)
STARTING ROW FOR BUBBLE^RNJ3,0XO^^0;7^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.93,358.931,.07,2)
S Y(0)=Y S Y=+Y+1
"^DD",358.93,358.931,.07,2.1)
S Y=+Y+1
"^DD",358.93,358.931,.07,3)
What block row should the bubble be in?
"^DD",358.93,358.931,.07,"DT")
2940720
"^DD",358.93,358.931,.08,0)
VALUE TO PASS^RFX^^0;8^S X=X
"^DD",358.93,358.931,.08,3)
What data should be entered into the database when this bubble is checked?
"^DD",358.93,358.931,.08,4)

"^DD",358.93,358.931,.08,22)
t
"^DD",358.93,358.931,.08,"DT")
2950901
"^DD",358.93,358.931,.09,0)
DATA QUALIFIER^*P358.98'^IBD(358.98,^0;9^S DIC("S")="I $$DQGOOD^IBDFU9($P($G(^IBE(358.93,DA(1),0)),""^"",6),Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",358.93,358.931,.09,3)
Does one of the qualifers appy to this choice?
"^DD",358.93,358.931,.09,12)
Allows only certain data qualifiers, dependent on the type of data.
"^DD",358.93,358.931,.09,12.1)
S DIC("S")="I $$DQGOOD^IBDFU9($P($G(^IBE(358.93,DA(1),0)),""^"",6),Y)"
"^DD",358.93,358.931,.09,"DT")
2941207
"^DD",358.94,358.94,0)
FIELD^^.1^8
"^DD",358.94,358.94,0,"DT")
2950728
"^DD",358.94,358.94,0,"IX","B",358.94,.01)

"^DD",358.94,358.94,0,"IX","C",358.94,.08)

"^DD",358.94,358.94,0,"NM","IMP/EXP HAND PRINT FIELD")

"^DD",358.94,358.94,0,"VRPK")
AUTOMATED INFO COLLECTION SYS
"^DD",358.94,358.94,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",358.94,358.94,.01,1,0)
^.1
"^DD",358.94,358.94,.01,1,1,0)
358.94^B
"^DD",358.94,358.94,.01,1,1,1)
S ^IBE(358.94,"B",$E(X,1,30),DA)=""
"^DD",358.94,358.94,.01,1,1,2)
K ^IBE(358.94,"B",$E(X,1,30),DA)
"^DD",358.94,358.94,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",358.94,358.94,.01,21,0)
^^3^3^2950725^
"^DD",358.94,358.94,.01,21,1,0)
 
"^DD",358.94,358.94,.01,21,2,0)
 
"^DD",358.94,358.94,.01,21,3,0)
The name of the field. 
"^DD",358.94,358.94,.01,"DT")
2930518
"^DD",358.94,358.94,.02,0)
LABEL^RF^^0;2^K:$L(X)>150!($L(X)<1) X
"^DD",358.94,358.94,.02,.1)

"^DD",358.94,358.94,.02,3)
What label should appear before the hand print field?
"^DD",358.94,358.94,.02,21,0)
^^1^1^2950728^^^^
"^DD",358.94,358.94,.02,21,1,0)
The text that labels the field on the form.
"^DD",358.94,358.94,.02,"DT")
2950728
"^DD",358.94,358.94,.03,0)
STARTING COLUMN^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.94,358.94,.03,2)
S Y(0)=Y S Y=+Y+1
"^DD",358.94,358.94,.03,2.1)
S Y=+Y+1
"^DD",358.94,358.94,.03,3)
What block column should the field begin in?
"^DD",358.94,358.94,.03,"DT")
2950728
"^DD",358.94,358.94,.04,0)
STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.94,358.94,.04,2)
S Y(0)=Y S Y=+Y+1
"^DD",358.94,358.94,.04,2.1)
S Y=+Y+1
"^DD",358.94,358.94,.04,3)
What block row should the field start in?
"^DD",358.94,358.94,.04,"DT")
2950728
"^DD",358.94,358.94,.05,0)
LABEL APPEARANCE^F^^0;5^K:$L(X)>3!($L(X)<1) X
"^DD",358.94,358.94,.05,3)
B=bold,U=underline,R=reverse You can enter any combination of {B,U,R}.
"^DD",358.94,358.94,.05,21,0)
^^1^1^2950725^
"^DD",358.94,358.94,.05,21,1,0)
Allows the form designer to specify the appearance of the label.
"^DD",358.94,358.94,.05,"DT")
2950725
"^DD",358.94,358.94,.06,0)
TYPE OF DATA^R*P357.6'X^IBE(357.6,^0;6^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",358.94,358.94,.06,.1)
WHAT TYPE OF DATA WILL BE ENTERED TO THIS FIELD?
"^DD",358.94,358.94,.06,3)
What type of data will be entered to the field?
"^DD",358.94,358.94,.06,12)
Allows only interfaces for passing values from user filled in fields.
"^DD",358.94,358.94,.06,12.1)
S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1"
"^DD",358.94,358.94,.06,21,0)
^^2^2^2950914^^^
"^DD",358.94,358.94,.06,21,1,0)
Points to the package interface file. That is where information about the
"^DD",358.94,358.94,.06,21,2,0)
data and how to map it to DHCP is stored.
"^DD",358.94,358.94,.06,"DT")
2950914
"^DD",358.94,358.94,.08,0)
BLOCK^RP357.1'^IBE(357.1,^0;8^Q
"^DD",358.94,358.94,.08,1,0)
^.1
"^DD",358.94,358.94,.08,1,1,0)
358.94^C
"^DD",358.94,358.94,.08,1,1,1)
S ^IBE(358.94,"C",$E(X,1,30),DA)=""
"^DD",358.94,358.94,.08,1,1,2)
K ^IBE(358.94,"C",$E(X,1,30),DA)
"^DD",358.94,358.94,.08,1,1,"%D",0)
^^1^1^2940720^
"^DD",358.94,358.94,.08,1,1,"%D",1,0)
Used to find all the input fields appearing in a block.
"^DD",358.94,358.94,.08,1,1,"DT")
2940720
"^DD",358.94,358.94,.08,3)
What block should this input field appear in?
"^DD",358.94,358.94,.08,"DT")
2940720
"^DD",358.94,358.94,.1,0)
DHCP DATA ELEMENT^R*P359.1'X^IBE(359.1,^0;10^S DIC("S")="I $$DTGOOD^IBDFU9($P($G(^IBE(358.94,DA,0)),""^"",6),Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",358.94,358.94,.1,3)
What data will be printed in this field?
"^DD",358.94,358.94,.1,12)
Allows only data elements defined as allowable for the Package Interface.
"^DD",358.94,358.94,.1,12.1)
S DIC("S")="I $$DTGOOD^IBDFU9($P($G(^IBE(358.94,DA,0)),""^"",6),Y)"
"^DD",358.94,358.94,.1,21,0)
^^1^1^2950914^^
"^DD",358.94,358.94,.1,21,1,0)
Specifies what data the hand print field is for.
"^DD",358.94,358.94,.1,"DT")
2950727
"^DD",358.98,358.98,0)
FIELD^^.03^3
"^DD",358.98,358.98,0,"DDA")
N
"^DD",358.98,358.98,0,"DT")
2950717
"^DD",358.98,358.98,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",358.98,358.98,0,"IX","B",358.98,.01)

"^DD",358.98,358.98,0,"NM","IMP/EXP AICS DATA QUALIFIERS")

"^DD",358.98,358.98,0,"PT",358.22,.09)

"^DD",358.98,358.98,0,"PT",358.613,.01)

"^DD",358.98,358.98,0,"PT",358.931,.09)

"^DD",358.98,358.98,0,"VRPK")
AUTOMATED INFO COLLECTION SYS
"^DD",358.98,358.98,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",358.98,358.98,.01,1,0)
^.1
"^DD",358.98,358.98,.01,1,1,0)
358.98^B
"^DD",358.98,358.98,.01,1,1,1)
S ^IBD(358.98,"B",$E(X,1,30),DA)=""
"^DD",358.98,358.98,.01,1,1,2)
K ^IBD(358.98,"B",$E(X,1,30),DA)
"^DD",358.98,358.98,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",358.98,358.98,.02,0)
CODE^RF^^0;2^K:$L(X)>3!($L(X)<1) X
"^DD",358.98,358.98,.02,3)
Answer must be 1-3 characters in length.
"^DD",358.98,358.98,.02,"DT")
2941018
"^DD",358.98,358.98,.03,0)
RECOMMENDED HEADER^F^^0;3^K:$L(X)>12!($L(X)<1) X
"^DD",358.98,358.98,.03,3)
Answer must be 1-12 characters in length.
"^DD",358.98,358.98,.03,21,0)
^^2^2^2950717^
"^DD",358.98,358.98,.03,21,1,0)
The recommended header will be used as the default header when designing a
"^DD",358.98,358.98,.03,21,2,0)
form.
"^DD",358.98,358.98,.03,"DT")
2950717
"^DD",358.99,358.99,0)
FIELD^^10.04^15
"^DD",358.99,358.99,0,"DDA")
N
"^DD",358.99,358.99,0,"DT")
2950928
"^DD",358.99,358.99,0,"IX","B",358.99,.01)

"^DD",358.99,358.99,0,"NM","IMP/EXP AICS DATA ELEMENTS")

"^DD",358.99,358.99,0,"PT",357.6,13)

"^DD",358.99,358.99,0,"PT",357.613,.01)

"^DD",358.99,358.99,0,"PT",358.6,16.2)

"^DD",358.99,358.99,0,"PT",358.6,16.6)

"^DD",358.99,358.99,0,"PT",358.613,.01)

"^DD",358.99,358.99,0,"VRPK")
AUTOMATED INFO COLLECTION SYS
"^DD",358.99,358.99,.01,0)
DHCP DATA TYPE^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",358.99,358.99,.01,1,0)
^.1
"^DD",358.99,358.99,.01,1,1,0)
358.99^B
"^DD",358.99,358.99,.01,1,1,1)
S ^IBE(358.99,"B",$E(X,1,30),DA)=""
"^DD",358.99,358.99,.01,1,1,2)
K ^IBE(358.99,"B",$E(X,1,30),DA)
"^DD",358.99,358.99,.01,3)
Answer must be 3-30 characters in length.
"^DD",358.99,358.99,.01,21,0)
^^2^2^2950418^
"^DD",358.99,358.99,.01,21,1,0)
A type of data that is recognized as such within the framework of scanning
"^DD",358.99,358.99,.01,21,2,0)
DHCP forms and which requires its own Paper Keyboard description.
"^DD",358.99,358.99,.01,"DT")
2950418
"^DD",358.99,358.99,.02,0)
MAXIMUM LENGTH FOR INPUT^RNJ2,0^^0;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.99,358.99,.02,3)
What is the maximum number of characters that can be input for this data?
"^DD",358.99,358.99,.02,21,0)
^^1^1^2950808^
"^DD",358.99,358.99,.02,21,1,0)
The maximum number of characters that can be input for this data type.
"^DD",358.99,358.99,.02,"DT")
2950504
"^DD",358.99,358.99,.05,0)
PRINT FORMAT^F^^0;5^K:$L(X)>64!($L(X)<1) X
"^DD",358.99,358.99,.05,3)
Use an underscore,'_',to indicate positions that the user should fill in. Use other characters to pre-fillthat position.
"^DD",358.99,358.99,.05,21,0)
^^4^4^2950811^^^
"^DD",358.99,358.99,.05,21,1,0)
Used to print the field. Fields for certain types of data, such
"^DD",358.99,358.99,.05,21,2,0)
as telephone numbers and Social Security numbers usually require certain
"^DD",358.99,358.99,.05,21,3,0)
formats, such as *********** for an SSN. The PRINT FORMAT allows the
"^DD",358.99,358.99,.05,21,4,0)
required format to be specified.
"^DD",358.99,358.99,.05,"DT")
2950811
"^DD",358.99,358.99,.06,0)
SPACE ALLOCATION^RNJ2,0^^0;6^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",358.99,358.99,.06,3)
What is the maximum number of characters in this field?
"^DD",358.99,358.99,.06,21,0)
^^2^2^2950808^^
"^DD",358.99,358.99,.06,21,1,0)
This is used to determine how much space on the form to allocate for the 
"^DD",358.99,358.99,.06,21,2,0)
hand print.
"^DD",358.99,358.99,.06,"DT")
2950504
"^DD",358.99,358.99,.07,0)
REQUIRED CONFIDENCE^NJ2,0^^0;7^K:+X'=X!(X>11)!(X<0)!(X?.E1"."1N.N) X
"^DD",358.99,358.99,.07,3)
Enter a number between 0 and 11. 0 means that the data will not require validation, 11 means the field must always be validated.
"^DD",358.99,358.99,.07,21,0)
^^2^2^2950808^
"^DD",358.99,358.99,.07,21,1,0)
This is the confidence level (as defined by Paper Keyboard) that should be
"^DD",358.99,358.99,.07,21,2,0)
applied to this data type.
"^DD",358.99,358.99,.07,"DT")
2950601
"^DD",358.99,358.99,.1,0)
RECOMMENDED LABEL^F^^0;10^K:$L(X)>30!($L(X)<1) X
"^DD",358.99,358.99,.1,3)
Answer must be 1-30 characters in length.
"^DD",358.99,358.99,.1,21,0)
^^1^1^2950817^^^
"^DD",358.99,358.99,.1,21,1,0)
Will be used as a default label.
"^DD",358.99,358.99,.1,"DT")
2950817
"^DD",358.99,358.99,.11,0)
LABEL FOR UNIT OF MEASUREMENT^F^^0;11^K:$L(X)>20!($L(X)<1) X
"^DD",358.99,358.99,.11,3)
Answer must be 1-20 characters in length.
"^DD",358.99,358.99,.11,21,0)
^^1^1^2950815^^^
"^DD",358.99,358.99,.11,21,1,0)
The unit of measurement as defined by the PCE Generic Device Interface.
"^DD",358.99,358.99,.11,"DT")
2950815
"^DD",358.99,358.99,.12,0)
PCE GDI VITALS TYPE^F^^0;12^K:$L(X)>10!($L(X)<1) X
"^DD",358.99,358.99,.12,3)
Answer must be 1-10 characters in length.
"^DD",358.99,358.99,.12,21,0)
^^1^1^2950811^
"^DD",358.99,358.99,.12,21,1,0)
The type of vitals measurement - used only for the PCE GDI VITALS node.
"^DD",358.99,358.99,.12,"DT")
2950811
"^DD",358.99,358.99,.13,0)
PCE GDI VITALS UNITS^F^^0;13^K:$L(X)>10!($L(X)<1) X
"^DD",358.99,358.99,.13,3)
Answer must be 1-10 characters in length.
"^DD",358.99,358.99,.13,21,0)
^^1^1^2950811^
"^DD",358.99,358.99,.13,21,1,0)
The unit of measurement - used only for the PCE GDI VITALS node.
"^DD",358.99,358.99,.13,"DT")
2950811
"^DD",358.99,358.99,1,0)
PCE GDI INPUT TRANSFORM^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",358.99,358.99,1,3)
The M code should set X to the value to be passed, else kill X if it is not valid.
"^DD",358.99,358.99,1,9)
@
"^DD",358.99,358.99,1,21,0)
^^4^4^2950908^
"^DD",358.99,358.99,1,21,1,0)
The input transform should change X into a value that can be passed to the
"^DD",358.99,358.99,1,21,2,0)
PCE Generic Device Interface. X should be killed if it not be transformed.
"^DD",358.99,358.99,1,21,3,0)
Note that the return value of X need not meet all of PCE's validation
"^DD",358.99,358.99,1,21,4,0)
requirments - for example, X may be an inactive code.
"^DD",358.99,358.99,1,"DT")
2950908
"^DD",358.99,358.99,2,0)
HELP FOR INPUT TRANSFORM^F^^2;1^K:$L(X)>245!($L(X)<1) X
"^DD",358.99,358.99,2,3)
Enter a line of help that will assist the user in entering valid data.
"^DD",358.99,358.99,2,21,0)
^^1^1^2950808^
"^DD",358.99,358.99,2,21,1,0)
Help for the user.
"^DD",358.99,358.99,2,"DT")
2950426
"^DD",358.99,358.99,10.01,0)
PAPER KEYBOARD DATA TYPE^S^a:ALPHA (any ASCII);d:DATE (MM/DD/YY);f:FLOATING POINT NUMBER;i:INTEGER;t:TIME(HHMM, VA FileMan format);^10;1^Q
"^DD",358.99,358.99,10.01,3)
Choose the most appropriate data type from the list.
"^DD",358.99,358.99,10.01,21,0)
^^4^4^2950928^
"^DD",358.99,358.99,10.01,21,1,0)
These are the data types provided for by Paper Keyboard.  The ALPHA
"^DD",358.99,358.99,10.01,21,2,0)
data type can be further described by a Paper Keyboard picture clause.
"^DD",358.99,358.99,10.01,21,3,0)
The Integer data type does not apply if the field can contain spaces or
"^DD",358.99,358.99,10.01,21,4,0)
punctuation other than a '-'.
"^DD",358.99,358.99,10.01,"DT")
2950928
"^DD",358.99,358.99,10.02,0)
PAPER KEYBOARD PICTURE^F^^10;2^K:$L(X)>60!($L(X)<1) X
"^DD",358.99,358.99,10.02,3)
Answer must be 1-60 characters in length.
"^DD",358.99,358.99,10.02,21,0)
^^6^6^2950928^
"^DD",358.99,358.99,10.02,21,1,0)
Enter a picture clause specific to Paper Keyboard.  A picture clause
"^DD",358.99,358.99,10.02,21,2,0)
describes the intended format for the data type.  This is similar to
"^DD",358.99,358.99,10.02,21,3,0)
an M pattern match.  For example, a CPT code is 5 characters, the
"^DD",358.99,358.99,10.02,21,4,0)
first character may be an alpha or numeric followed by 4 numeric
"^DD",358.99,358.99,10.02,21,5,0)
characaters.  To represent this picture in Paper Keyboard, one would
"^DD",358.99,358.99,10.02,21,6,0)
enter the picture X####.
"^DD",358.99,358.99,10.02,"DT")
2950928
"^DD",358.99,358.99,10.03,0)
DICTIONARY^F^^10;3^K:$L(X)>12!($L(X)<1) X
"^DD",358.99,358.99,10.03,3)
Answer must be 1-12 characters in length.
"^DD",358.99,358.99,10.03,21,0)
^^3^3^2950928^
"^DD",358.99,358.99,10.03,21,1,0)
Enter the name of a Paper Keyboard Dictionary.  A dictionary
"^DD",358.99,358.99,10.03,21,2,0)
can be applied to ICR data types to improve the recognition of ICR
"^DD",358.99,358.99,10.03,21,3,0)
fields.  This is the name of the file that Paper Keyboard uses.
"^DD",358.99,358.99,10.03,"DT")
2950928
"^DD",358.99,358.99,10.04,0)
PK PICTURES FOR SUBFIELDS^F^^10;4^K:$L(X)>120!($L(X)<1) X
"^DD",358.99,358.99,10.04,3)
Answer must be 1-120 characters in length.
"^DD",358.99,358.99,10.04,21,0)
^^7^7^2950928^
"^DD",358.99,358.99,10.04,21,1,0)
When using print formats for paper keyboard you should enter the 
"^DD",358.99,358.99,10.04,21,2,0)
picture clause in this field.  For example, the print format for
"^DD",358.99,358.99,10.04,21,3,0)
a SSN might look like ___-__-____.  This would cause the dashes to
"^DD",358.99,358.99,10.04,21,4,0)
be printed and user input to be accepted in three subfields with
"^DD",358.99,358.99,10.04,21,5,0)
lenghts of 3, 2, and 4 numerics.  You would then enter the picture
"^DD",358.99,358.99,10.04,21,6,0)
in this field as ###-##-####.  (note the # sign is used as the
"^DD",358.99,358.99,10.04,21,7,0)
picture for numerics)
"^DD",358.99,358.99,10.04,"DT")
2950928
"^DD",359,359,0)
FIELD^^1^6
"^DD",359,359,0,"DDA")
N
"^DD",359,359,0,"DT")
2950306
"^DD",359,359,0,"IX","AORIG",359,.02)

"^DD",359,359,0,"IX","B",359,.01)

"^DD",359,359,0,"NM","CONVERTED FORMS")

"^DD",359,359,.01,0)
CONVERTED FORM^RP357'^IBE(357,^0;1^Q
"^DD",359,359,.01,1,0)
^.1
"^DD",359,359,.01,1,1,0)
359^B
"^DD",359,359,.01,1,1,1)
S ^IBD(359,"B",$E(X,1,30),DA)=""
"^DD",359,359,.01,1,1,2)
K ^IBD(359,"B",$E(X,1,30),DA)
"^DD",359,359,.01,3)
What is the new form?
"^DD",359,359,.01,21,0)
^^1^1^2950302^
"^DD",359,359,.01,21,1,0)
The new form that was created.
"^DD",359,359,.01,"DT")
2950302
"^DD",359,359,.02,0)
ORIGINAL FORM^P357'^IBE(357,^0;2^Q
"^DD",359,359,.02,1,0)
^.1
"^DD",359,359,.02,1,1,0)
359^AORIG
"^DD",359,359,.02,1,1,1)
S ^IBD(359,"AORIG",$E(X,1,30),DA)=""
"^DD",359,359,.02,1,1,2)
K ^IBD(359,"AORIG",$E(X,1,30),DA)
"^DD",359,359,.02,1,1,"%D",0)
^^1^1^2951121^
"^DD",359,359,.02,1,1,"%D",1,0)
This is a regular cross reference of forms already converted
"^DD",359,359,.02,1,1,"DT")
2951121
"^DD",359,359,.02,3)
What was the original form that the new one was created from?
"^DD",359,359,.02,"DT")
2951121
"^DD",359,359,.03,0)
NAME OF ORIGINAL FORM^RF^^0;3^K:$L(X)>45!($L(X)<1) X
"^DD",359,359,.03,3)
Answer must be 1-45 characters in length.
"^DD",359,359,.03,"DT")
2950303
"^DD",359,359,.04,0)
DATE OF CONVERSION^RD^^0;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",359,359,.04,3)
When was the new form created?
"^DD",359,359,.04,21,0)
^^1^1^2950302^
"^DD",359,359,.04,21,1,0)
The date the converted form was created.
"^DD",359,359,.04,"DT")
2950302
"^DD",359,359,.05,0)
SUBSTITUTION OCCURRED?^S^0:NO;1:YES;^0;5^Q
"^DD",359,359,.05,3)
Has the new form been substituted in the clinics for the original form?
"^DD",359,359,.05,"DT")
2950302
"^DD",359,359,1,0)
WARNINGS^359.01^^1;0
"^DD",359,359.01,0)
WARNINGS SUB-FIELD^^.01^1
"^DD",359,359.01,0,"DT")
2950306
"^DD",359,359.01,0,"NM","WARNINGS")

"^DD",359,359.01,0,"UP")
359
"^DD",359,359.01,.01,0)
WARNINGS^WL^^0;1^Q
"^DD",359,359.01,.01,3)
Enter warnings or problems encountered while converting the form to scanning.
"^DD",359,359.01,.01,"DT")
2950306
"^DD",359.1,359.1,0)
FIELD^^10.04^15
"^DD",359.1,359.1,0,"DDA")
N
"^DD",359.1,359.1,0,"DT")
2950928
"^DD",359.1,359.1,0,"IX","B",359.1,.01)

"^DD",359.1,359.1,0,"NM","AICS DATA ELEMENTS")

"^DD",359.1,359.1,0,"PT",357.14,.17)

"^DD",359.1,359.1,0,"PT",357.6,13)

"^DD",359.1,359.1,0,"PT",357.6,16.2)

"^DD",359.1,359.1,0,"PT",357.6,16.6)

"^DD",359.1,359.1,0,"PT",357.613,.01)

"^DD",359.1,359.1,0,"PT",357.952,.17)

"^DD",359.1,359.1,0,"PT",358.94,.1)

"^DD",359.1,359.1,0,"PT",359.94,.1)

"^DD",359.1,359.1,.01,0)
DATA TYPE^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",359.1,359.1,.01,1,0)
^.1
"^DD",359.1,359.1,.01,1,1,0)
359.1^B
"^DD",359.1,359.1,.01,1,1,1)
S ^IBE(359.1,"B",$E(X,1,30),DA)=""
"^DD",359.1,359.1,.01,1,1,2)
K ^IBE(359.1,"B",$E(X,1,30),DA)
"^DD",359.1,359.1,.01,3)
Answer must be 3-30 characters in length.
"^DD",359.1,359.1,.01,21,0)
^^8^8^2951003^
"^DD",359.1,359.1,.01,21,1,0)
A type of data that is recognized as such within the framework of scanning
"^DD",359.1,359.1,.01,21,2,0)
DHCP forms and which requires its own description for
"^DD",359.1,359.1,.01,21,3,0)
scanning/recognition.
"^DD",359.1,359.1,.01,21,4,0)
 
"^DD",359.1,359.1,.01,21,5,0)
Enter a type of data that can appear on a scannable encounter form.  The
"^DD",359.1,359.1,.01,21,6,0)
data should require a unique description for each commercial scanning
"^DD",359.1,359.1,.01,21,7,0)
application in use.  For example, check out date/time or CPT procedure
"^DD",359.1,359.1,.01,21,8,0)
require a definition for scanning.
"^DD",359.1,359.1,.01,"DT")
2950928
"^DD",359.1,359.1,.02,0)
MAXIMUM LENGTH FOR INPUT^RNJ2,0^^0;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",359.1,359.1,.02,3)
What is the maximum number of characters that can be input for this data?
"^DD",359.1,359.1,.02,21,0)
^^1^1^2950808^
"^DD",359.1,359.1,.02,21,1,0)
The maximum number of characters that can be input for this data type.
"^DD",359.1,359.1,.02,"DT")
2950504
"^DD",359.1,359.1,.05,0)
PRINT FORMAT^F^^0;5^K:$L(X)>64!($L(X)<1) X
"^DD",359.1,359.1,.05,3)
Use an underscore,'_',to indicate positions that the user should fill in. Use other characters to pre-fill that position.
"^DD",359.1,359.1,.05,21,0)
^^4^4^2951003^^^^
"^DD",359.1,359.1,.05,21,1,0)
Used to print the field. Fields for certain types of data, such
"^DD",359.1,359.1,.05,21,2,0)
as telephone numbers and Social Security numbers usually require certain
"^DD",359.1,359.1,.05,21,3,0)
formats, such as *********** for an SSN. The PRINT FORMAT allows the
"^DD",359.1,359.1,.05,21,4,0)
required format to be specified.
"^DD",359.1,359.1,.05,"DT")
2950811
"^DD",359.1,359.1,.06,0)
SPACE ALLOCATION^RNJ2,0^^0;6^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",359.1,359.1,.06,3)
What is the maximum number of characters in this field?
"^DD",359.1,359.1,.06,21,0)
^^2^2^2950808^^
"^DD",359.1,359.1,.06,21,1,0)
This is used to determine how much space on the form to allocate for the 
"^DD",359.1,359.1,.06,21,2,0)
hand print.
"^DD",359.1,359.1,.06,"DT")
2950504
"^DD",359.1,359.1,.07,0)
REQUIRED CONFIDENCE^NJ2,0^^0;7^K:+X'=X!(X>11)!(X<0)!(X?.E1"."1N.N) X
"^DD",359.1,359.1,.07,3)
Enter a number between 0 and 11. 0 means that the data will not require validation, 11 means the field must always be validated.
"^DD",359.1,359.1,.07,21,0)
^^2^2^2950808^
"^DD",359.1,359.1,.07,21,1,0)
This is the confidence level (as defined by Paper Keyboard) that should be
"^DD",359.1,359.1,.07,21,2,0)
applied to this data type.
"^DD",359.1,359.1,.07,"DT")
2950601
"^DD",359.1,359.1,.1,0)
RECOMMENDED LABEL^F^^0;10^K:$L(X)>30!($L(X)<1) X
"^DD",359.1,359.1,.1,3)
Answer must be 1-30 characters in length.
"^DD",359.1,359.1,.1,21,0)
^^1^1^2950817^^^
"^DD",359.1,359.1,.1,21,1,0)
Will be used as a default label.
"^DD",359.1,359.1,.1,"DT")
2950817
"^DD",359.1,359.1,.11,0)
LABEL FOR UNIT OF MEASUREMENT^F^^0;11^K:$L(X)>20!($L(X)<1) X
"^DD",359.1,359.1,.11,3)
Answer must be 1-20 characters in length.
"^DD",359.1,359.1,.11,21,0)
^^1^1^2950815^^^
"^DD",359.1,359.1,.11,21,1,0)
The unit of measurement as defined by the PCE Generic Device Interface.
"^DD",359.1,359.1,.11,"DT")
2950815
"^DD",359.1,359.1,.12,0)
PCE DIM VITALS TYPE^F^^0;12^K:$L(X)>10!($L(X)<1) X
"^DD",359.1,359.1,.12,3)
Answer must be 1-10 characters in length.
"^DD",359.1,359.1,.12,21,0)
^^1^1^2960401^^^
"^DD",359.1,359.1,.12,21,1,0)
The type of vitals measurement - used only for the PCE DIM VITALS node.
"^DD",359.1,359.1,.12,"DT")
2960401
"^DD",359.1,359.1,.13,0)
PCE DIM VITALS UNITS^F^^0;13^K:$L(X)>10!($L(X)<1) X
"^DD",359.1,359.1,.13,3)
Answer must be 1-10 characters in length.
"^DD",359.1,359.1,.13,21,0)
^^2^2^2960401^^
"^DD",359.1,359.1,.13,21,1,0)
The unit of measurement - used only for the PCE Device Interface Mondule
"^DD",359.1,359.1,.13,21,2,0)
(DIM) VITALS node.
"^DD",359.1,359.1,.13,"DT")
2960401
"^DD",359.1,359.1,1,0)
PCE DIM INPUT TRANSFORM^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",359.1,359.1,1,3)
The M code should set X to the value to be passed, else kill X if it is not valid.
"^DD",359.1,359.1,1,9)
@
"^DD",359.1,359.1,1,21,0)
^^4^4^2960401^^
"^DD",359.1,359.1,1,21,1,0)
The input transform should change X into a value that can be passed to the
"^DD",359.1,359.1,1,21,2,0)
PCE Device Interface Module. X should be killed if it not be transformed.
"^DD",359.1,359.1,1,21,3,0)
Note that the return value of X need not meet all of PCE's validation
"^DD",359.1,359.1,1,21,4,0)
requirments - for example, X may be an inactive code.
"^DD",359.1,359.1,1,"DT")
2960401
"^DD",359.1,359.1,2,0)
HELP FOR INPUT TRANSFORM^F^^2;1^K:$L(X)>245!($L(X)<1) X
"^DD",359.1,359.1,2,3)
Enter a line of help that will assist the user in entering valid data.
"^DD",359.1,359.1,2,21,0)
^^1^1^2950808^
"^DD",359.1,359.1,2,21,1,0)
Help for the user.
"^DD",359.1,359.1,2,"DT")
2950426
"^DD",359.1,359.1,10.01,0)
PAPER KEYBOARD DATA TYPE^S^a:ALPHA (any ASCII);d:DATE (MM/DD/YY);f:FLOATING POINT NUMBER;i:INTEGER;t:TIME (HHMM, VA FileMan format);^10;1^Q
"^DD",359.1,359.1,10.01,3)
Choose the most appropriate data type from the list.
"^DD",359.1,359.1,10.01,21,0)
^^4^4^2950928^^
"^DD",359.1,359.1,10.01,21,1,0)
These are the data types provided for by Paper Keyboard.  The ALPHA data
"^DD",359.1,359.1,10.01,21,2,0)
type can be further described by a Paper Keyboard picture clause.  The 
"^DD",359.1,359.1,10.01,21,3,0)
Integer data type does not apply if the field can contain spaces or
"^DD",359.1,359.1,10.01,21,4,0)
puntuation other than a '+'.
"^DD",359.1,359.1,10.01,"DT")
2950928
"^DD",359.1,359.1,10.02,0)
PAPER KEYBOARD PICTURE^F^^10;2^K:$L(X)>60!($L(X)<1) X
"^DD",359.1,359.1,10.02,3)
Answer must be 1-60 characters in length.
"^DD",359.1,359.1,10.02,21,0)
^^6^6^2950928^^
"^DD",359.1,359.1,10.02,21,1,0)
Enter a picture clause specific to Paper Keyboard.  A picture clause
"^DD",359.1,359.1,10.02,21,2,0)
describes the intended format for the data type.  This is similar
"^DD",359.1,359.1,10.02,21,3,0)
to an M pattern match.  For example, a CPT code is 5 characters, the
"^DD",359.1,359.1,10.02,21,4,0)
first character may be an alpha or numeric followed by 4 numeric 
"^DD",359.1,359.1,10.02,21,5,0)
characters.  To represent this picture in Paper Keyboard, one would
"^DD",359.1,359.1,10.02,21,6,0)
enter the picture X####.
"^DD",359.1,359.1,10.02,"DT")
2950928
"^DD",359.1,359.1,10.03,0)
DICTIONARY^F^^10;3^K:$L(X)>12!($L(X)<1)!'(X?1.8A.1".".3A) X
"^DD",359.1,359.1,10.03,3)
You may optionally enter the name of a dictionary to assist in the recognition of ICR fields.  Answer must be 1-12 characters in length.
"^DD",359.1,359.1,10.03,21,0)
^^3^3^2951017^
"^DD",359.1,359.1,10.03,21,1,0)
Enter the name of a dictionary.  A dictionary can be applied to ICR data
"^DD",359.1,359.1,10.03,21,2,0)
types to improve the recognition of ICR fields. This is the name of the
"^DD",359.1,359.1,10.03,21,3,0)
file that the scanning software uses.
"^DD",359.1,359.1,10.03,"DT")
2950928
"^DD",359.1,359.1,10.04,0)
PK PICTURES FOR SUBFIELDS^F^^10;4^K:$L(X)>120!($L(X)<1) X
"^DD",359.1,359.1,10.04,3)
Answer must be 1-120 characters in length.
"^DD",359.1,359.1,10.04,21,0)
^^7^7^2950928^^^
"^DD",359.1,359.1,10.04,21,1,0)
When using print formats for paper keyboard you should enter the
"^DD",359.1,359.1,10.04,21,2,0)
picture clause in this field.  For example the print format
"^DD",359.1,359.1,10.04,21,3,0)
for a SSN might look like ___-__-____ .  This would cause the
"^DD",359.1,359.1,10.04,21,4,0)
dashes to be printed and user input to be accepted in three
"^DD",359.1,359.1,10.04,21,5,0)
subfields with lengths of 3, 2, and 4 numerics.  You would then
"^DD",359.1,359.1,10.04,21,6,0)
enter the picture in this field as ###-##-####.  (note the # sign
"^DD",359.1,359.1,10.04,21,7,0)
is used as the picture for numerics)
"^DD",359.1,359.1,10.04,"DT")
2950928
"^DD",359.2,359.2,0)
FIELD^^.03^4
"^DD",359.2,359.2,0,"DT")
2951003
"^DD",359.2,359.2,0,"ID",.02)
W "   Created: ",$E($P(^(0),U,2),4,5)_"-"_$E($P(^(0),U,2),6,7)_"-"_$E($P(^(0),U,2),2,3)
"^DD",359.2,359.2,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",359.2,359.2,0,"IX","B",359.2,.01)

"^DD",359.2,359.2,0,"NM","FORM SPECS")

"^DD",359.2,359.2,.01,0)
NUMBER^RNJ9,0^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",359.2,359.2,.01,1,0)
^.1
"^DD",359.2,359.2,.01,1,1,0)
359.2^B
"^DD",359.2,359.2,.01,1,1,1)
S ^IBD(359.2,"B",$E(X,1,30),DA)=""
"^DD",359.2,359.2,.01,1,1,2)
K ^IBD(359.2,"B",$E(X,1,30),DA)
"^DD",359.2,359.2,.01,1,2,0)
^^TRIGGER^359.2^.02
"^DD",359.2,359.2,.01,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBD(359.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,2)="" I X S X=DIV S Y(1)=$S($D(^IBD(359.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(359.2,.01,1,2,1.4)
"^DD",359.2,359.2,.01,1,2,1.4)
S DIH=$S($D(^IBD(359.2,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=359.2,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",359.2,359.2,.01,1,2,2)
Q
"^DD",359.2,359.2,.01,1,2,"%D",0)
^^2^2^2951003^
"^DD",359.2,359.2,.01,1,2,"%D",1,0)
This triggers the date created into the DATE CREATED field.  The
"^DD",359.2,359.2,.01,1,2,"%D",2,0)
date created is used by the purge utilities.
"^DD",359.2,359.2,.01,1,2,"CREATE CONDITION")
#.02=""
"^DD",359.2,359.2,.01,1,2,"CREATE VALUE")
S X=DT
"^DD",359.2,359.2,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",359.2,359.2,.01,1,2,"DT")
2951003
"^DD",359.2,359.2,.01,1,2,"FIELD")
#.02
"^DD",359.2,359.2,.01,1,3,0)
^^TRIGGER^359.2^.03
"^DD",359.2,359.2,.01,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBD(359.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,3)="" I X S X=DIV S Y(1)=$S($D(^IBD(359.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y X ^DD(359.2,.01,1,3,1.1) X ^DD(359.2,.01,1,3,1.4)
"^DD",359.2,359.2,.01,1,3,1.1)
S X=DIV S X=$P($G(^IBE(357,+$O(^IBE(357,"ADEF",+DA,0)),0)),"^")
"^DD",359.2,359.2,.01,1,3,1.4)
S DIH=$S($D(^IBD(359.2,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,3)=DIV,DIH=359.2,DIG=.03 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",359.2,359.2,.01,1,3,2)
Q
"^DD",359.2,359.2,.01,1,3,"%D",0)
^^1^1^2951003^
"^DD",359.2,359.2,.01,1,3,"%D",1,0)
This triggers the name of the form into this file.
"^DD",359.2,359.2,.01,1,3,"CREATE CONDITION")
#.03=""
"^DD",359.2,359.2,.01,1,3,"CREATE VALUE")
S X=$P($G(^IBE(357,+$O(^IBE(357,"ADEF",+DA,0)),0)),"^")
"^DD",359.2,359.2,.01,1,3,"DELETE VALUE")
NO EFFECT
"^DD",359.2,359.2,.01,1,3,"DT")
2951003
"^DD",359.2,359.2,.01,1,3,"FIELD")
#.03
"^DD",359.2,359.2,.01,3)
This the form ID number.  Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",359.2,359.2,.01,"DT")
2951003
"^DD",359.2,359.2,.02,0)
DATE CREATED^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",359.2,359.2,.02,5,1,0)
359.2^.01^2
"^DD",359.2,359.2,.02,9)
^
"^DD",359.2,359.2,.02,21,0)
^^2^2^2951003^
"^DD",359.2,359.2,.02,21,1,0)
This is the date that this entry was created.  This is triggered by the
"^DD",359.2,359.2,.02,21,2,0)
creation of a new entry.
"^DD",359.2,359.2,.02,"DT")
2951003
"^DD",359.2,359.2,.03,0)
FORM NAME^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",359.2,359.2,.03,3)
Answer must be 1-30 characters in length.
"^DD",359.2,359.2,.03,5,1,0)
359.2^.01^3
"^DD",359.2,359.2,.03,9)
^
"^DD",359.2,359.2,.03,21,0)
^^2^2^2951003^
"^DD",359.2,359.2,.03,21,1,0)
This is the name of the form that this form specification is for.  This
"^DD",359.2,359.2,.03,21,2,0)
is triggered on creation of the entry
"^DD",359.2,359.2,.03,"DT")
2951003
"^DD",359.2,359.2,10,0)
FORM SPEC DESCRIPTION^359.21^^10;0
"^DD",359.2,359.21,0)
FORM SPEC DESCRIPTION SUB-FIELD^^.01^1
"^DD",359.2,359.21,0,"DT")
2950613
"^DD",359.2,359.21,0,"NM","FORM SPEC DESCRIPTION")

"^DD",359.2,359.21,0,"UP")
359.2
"^DD",359.2,359.21,.01,0)
FORM SPEC DESCRIPTION^WL^^0;1^Q
"^DD",359.2,359.21,.01,21,0)
^^3^3^2950613^^^^
"^DD",359.2,359.21,.01,21,1,0)
This is the form spec as created by the routines IBDFBKS* and stored
"^DD",359.2,359.21,.01,21,2,0)
in this file.  The form spec description is then retrieved to the
"^DD",359.2,359.21,.01,21,3,0)
AICS workstation thru standard broker calls.
"^DD",359.2,359.21,.01,"DT")
2950613
"^DD",359.3,359.3,0)
FIELD^^.16^19
"^DD",359.3,359.3,0,"DDA")
N
"^DD",359.3,359.3,0,"DT")
2970304
"^DD",359.3,359.3,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",359.3,359.3,0,"ID",.05)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBD(357.96,+$P(^(0),U,5),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(357.96,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",359.3,359.3,0,"ID",.08)
W "   ",@("$P($P($C(59)_$S($D(^DD(359.3,.08,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,8)_"":"",2),$C(59),1)")
"^DD",359.3,359.3,0,"IX","AB",359.3,.01)

"^DD",359.3,359.3,0,"IX","AC",359.3,.13)

"^DD",359.3,359.3,0,"IX","B",359.3,.01)

"^DD",359.3,359.3,0,"IX","C",359.3,.02)

"^DD",359.3,359.3,0,"IX","D",359.3,.05)

"^DD",359.3,359.3,0,"NM","AICS ERROR AND WARNING LOG")

"^DD",359.3,359.3,.01,0)
ERROR DATE/TIME^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",359.3,359.3,.01,1,0)
^.1
"^DD",359.3,359.3,.01,1,1,0)
359.3^B
"^DD",359.3,359.3,.01,1,1,1)
S ^IBD(359.3,"B",$E(X,1,30),DA)=""
"^DD",359.3,359.3,.01,1,1,2)
K ^IBD(359.3,"B",$E(X,1,30),DA)
"^DD",359.3,359.3,.01,1,2,0)
359.3^AB^MUMPS
"^DD",359.3,359.3,.01,1,2,1)
S ^IBD(359.3,"AB",-X,DA)=""
"^DD",359.3,359.3,.01,1,2,2)
K ^IBD(359.3,"AB",-X,DA)
"^DD",359.3,359.3,.01,1,2,"%D",0)
^^2^2^2970418^^
"^DD",359.3,359.3,.01,1,2,"%D",1,0)
This is an inverse data cross reference to allow listing of errors in reverse
"^DD",359.3,359.3,.01,1,2,"%D",2,0)
chronological order.
"^DD",359.3,359.3,.01,1,2,"DT")
2970206
"^DD",359.3,359.3,.01,3)
Enter the Date and Time that this error occured.
"^DD",359.3,359.3,.01,21,0)
^^2^2^2970418^^^^
"^DD",359.3,359.3,.01,21,1,0)
Enter the date and time that the error occured.  Normally errors are filed
"^DD",359.3,359.3,.01,21,2,0)
automatically by the computer when the error occurs.
"^DD",359.3,359.3,.01,"DT")
2970206
"^DD",359.3,359.3,.02,0)
PATIENT^P2'I^DPT(^0;2^Q
"^DD",359.3,359.3,.02,1,0)
^.1
"^DD",359.3,359.3,.02,1,1,0)
359.3^C
"^DD",359.3,359.3,.02,1,1,1)
S ^IBD(359.3,"C",$E(X,1,30),DA)=""
"^DD",359.3,359.3,.02,1,1,2)
K ^IBD(359.3,"C",$E(X,1,30),DA)
"^DD",359.3,359.3,.02,1,1,"%D",0)
^^1^1^2970128^
"^DD",359.3,359.3,.02,1,1,"%D",1,0)
Regular cross reference of the patient field.
"^DD",359.3,359.3,.02,1,1,"DT")
2970128
"^DD",359.3,359.3,.02,3)
Enter the name of the patient that was being processed when the error occured.
"^DD",359.3,359.3,.02,21,0)
^^2^2^2970128^
"^DD",359.3,359.3,.02,21,1,0)
This is the name of the patient that was being processed when the error 
"^DD",359.3,359.3,.02,21,2,0)
occured.
"^DD",359.3,359.3,.02,"DT")
2970206
"^DD",359.3,359.3,.03,0)
ENCOUNTER DATE/TIME^DI^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",359.3,359.3,.03,21,0)
^^2^2^2970127^
"^DD",359.3,359.3,.03,21,1,0)
This is the date/time of the encounter that was being processed when the
"^DD",359.3,359.3,.03,21,2,0)
error occured.
"^DD",359.3,359.3,.03,"DT")
2970206
"^DD",359.3,359.3,.04,0)
FORM DEFINITION^FI^^0;4^K:$L(X)>12!($L(X)<1) X
"^DD",359.3,359.3,.04,3)
Answer must be 1-12 characters in length.
"^DD",359.3,359.3,.04,21,0)
^^2^2^2970211^^
"^DD",359.3,359.3,.04,21,1,0)
Enter the Form Definition file entry that was being processed when
"^DD",359.3,359.3,.04,21,2,0)
the error occured.
"^DD",359.3,359.3,.04,"DT")
2970211
"^DD",359.3,359.3,.05,0)
FORM TRACKING NUMBER^FI^^0;5^K:$L(X)>12!($L(X)<1) X
"^DD",359.3,359.3,.05,1,0)
^.1
"^DD",359.3,359.3,.05,1,1,0)
359.3^D
"^DD",359.3,359.3,.05,1,1,1)
S ^IBD(359.3,"D",$E(X,1,30),DA)=""
"^DD",359.3,359.3,.05,1,1,2)
K ^IBD(359.3,"D",$E(X,1,30),DA)
"^DD",359.3,359.3,.05,1,1,"%D",0)
^^1^1^2970205^
"^DD",359.3,359.3,.05,1,1,"%D",1,0)
Regular cross reference of the form tracking ID field.
"^DD",359.3,359.3,.05,1,1,"DT")
2970205
"^DD",359.3,359.3,.05,3)
Answer must be 1-12 characters in length.
"^DD",359.3,359.3,.05,21,0)
^^2^2^2970211^^
"^DD",359.3,359.3,.05,21,1,0)
Enter the Form Tracking File number from the encounter form that was
"^DD",359.3,359.3,.05,21,2,0)
being processed when the error occured.
"^DD",359.3,359.3,.05,"DT")
2970211
"^DD",359.3,359.3,.06,0)
DATA INTERNAL NUMBER^NJ3,0^^0;6^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",359.3,359.3,.06,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",359.3,359.3,.06,21,0)
^^5^5^2970127^
"^DD",359.3,359.3,.06,21,1,0)
Enter the array number of the data element that was being processed when
"^DD",359.3,359.3,.06,21,2,0)
the error occured.
"^DD",359.3,359.3,.06,21,3,0)

"^DD",359.3,359.3,.06,21,4,0)
This number is normally added by the system when an error occured.  It can
"^DD",359.3,359.3,.06,21,5,0)
be used to debug the cause of the error when rescanning an encounter form.
"^DD",359.3,359.3,.06,"DT")
2970127
"^DD",359.3,359.3,.07,0)
DATA VALUE^F^^0;7^K:$L(X)>80!($L(X)<1) X
"^DD",359.3,359.3,.07,3)
Answer must be 1-80 characters in length.
"^DD",359.3,359.3,.07,21,0)
^^3^3^2970127^^
"^DD",359.3,359.3,.07,21,1,0)
Enter the value of the data that was being processed when the error
"^DD",359.3,359.3,.07,21,2,0)
occured.
"^DD",359.3,359.3,.07,21,3,0)

"^DD",359.3,359.3,.07,"DT")
2970127
"^DD",359.3,359.3,.08,0)
ERROR SOURCE^SI^1:AICS;2:PANDAS;99:PCE;^0;8^Q
"^DD",359.3,359.3,.08,21,0)
^^2^2^2970130^
"^DD",359.3,359.3,.08,21,1,0)
This is the source of the data that caused the error, or may also be a
"^DD",359.3,359.3,.08,21,2,0)
listing of errors returned from PCE.
"^DD",359.3,359.3,.08,"DT")
2970206
"^DD",359.3,359.3,.09,0)
FORM NAME^P357'^IBE(357,^0;9^Q
"^DD",359.3,359.3,.09,3)

"^DD",359.3,359.3,.09,21,0)
^^2^2^2970128^^
"^DD",359.3,359.3,.09,21,1,0)
This is the name of the Encounter form that was being processed when the
"^DD",359.3,359.3,.09,21,2,0)
error occured.
"^DD",359.3,359.3,.09,"DT")
2970128
"^DD",359.3,359.3,.1,0)
PACKAGE INTERFACE^P357.6'^IBE(357.6,^0;10^Q
"^DD",359.3,359.3,.1,21,0)
^^2^2^2970127^
"^DD",359.3,359.3,.1,21,1,0)
This is the name of the package interface for the data that was being
"^DD",359.3,359.3,.1,21,2,0)
processed when the error occured.
"^DD",359.3,359.3,.1,"DT")
2970127
"^DD",359.3,359.3,.11,0)
QUALIFIER^F^^0;11^K:$L(X)>20!($L(X)<1) X
"^DD",359.3,359.3,.11,3)
Answer must be 1-20 characters in length.
"^DD",359.3,359.3,.11,21,0)
^^2^2^2970127^
"^DD",359.3,359.3,.11,21,1,0)
This is the data qualifer, if any, that was being processed when the error
"^DD",359.3,359.3,.11,21,2,0)
occured.
"^DD",359.3,359.3,.11,"DT")
2970127
"^DD",359.3,359.3,.12,0)
DATA TEXT^F^^0;12^K:$L(X)>30!($L(X)<3) X
"^DD",359.3,359.3,.12,3)
Answer must be 3-30 characters in length.
"^DD",359.3,359.3,.12,21,0)
^^2^2^2970127^
"^DD",359.3,359.3,.12,21,1,0)
This is the text associated with the data value that was being processed 
"^DD",359.3,359.3,.12,21,2,0)
when the error occured.
"^DD",359.3,359.3,.12,"DT")
2970127
"^DD",359.3,359.3,.13,0)
USER^P200'I^VA(200,^0;13^Q
"^DD",359.3,359.3,.13,1,0)
^.1
"^DD",359.3,359.3,.13,1,1,0)
359.3^AC
"^DD",359.3,359.3,.13,1,1,1)
S ^IBD(359.3,"AC",$E(X,1,30),DA)=""
"^DD",359.3,359.3,.13,1,1,2)
K ^IBD(359.3,"AC",$E(X,1,30),DA)
"^DD",359.3,359.3,.13,1,1,"DT")
2970314
"^DD",359.3,359.3,.13,21,0)
^^1^1^2970127^
"^DD",359.3,359.3,.13,21,1,0)
Enter the user that was logged on when the error occured.
"^DD",359.3,359.3,.13,"DT")
2970314
"^DD",359.3,359.3,.16,0)
DIALOG NUMBER^NJ12,3^^0;16^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."4N.N) X
"^DD",359.3,359.3,.16,3)
Type a Number between 0 and 99999999, 3 Decimal Digits
"^DD",359.3,359.3,.16,21,0)
^^1^1^2970304^
"^DD",359.3,359.3,.16,21,1,0)
This is the number of the dialog that was used to record this error.
"^DD",359.3,359.3,.16,"DT")
2970304
"^DD",359.3,359.3,1.01,0)
OPTION^FI^^1;1^K:$L(X)>40!($L(X)<1) X
"^DD",359.3,359.3,1.01,3)
Answer must be 1-40 characters in length.
"^DD",359.3,359.3,1.01,21,0)
^^2^2^2970129^
"^DD",359.3,359.3,1.01,21,1,0)
This is the free text name of the option that was being used when the
"^DD",359.3,359.3,1.01,21,2,0)
error occured.
"^DD",359.3,359.3,1.01,"DT")
2970206
"^DD",359.3,359.3,1.02,0)
DATE ERROR CORRECTED^D^^1;2^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",359.3,359.3,1.02,5,1,0)
359.3^1.04^1
"^DD",359.3,359.3,1.02,"DT")
2970206
"^DD",359.3,359.3,1.03,0)
USER CORRECTING DATA^P200'^VA(200,^1;3^Q
"^DD",359.3,359.3,1.03,3)

"^DD",359.3,359.3,1.03,5,1,0)
359.3^1.04^2
"^DD",359.3,359.3,1.03,21,0)
^^1^1^2970224^
"^DD",359.3,359.3,1.03,21,1,0)
Enter the name of the user who corrected the data.
"^DD",359.3,359.3,1.03,"DT")
2970224
"^DD",359.3,359.3,1.04,0)
ERROR REVIEWED OR CORRECTED^S^1:YES;0:NO;^1;4^Q
"^DD",359.3,359.3,1.04,1,0)
^.1
"^DD",359.3,359.3,1.04,1,1,0)
^^TRIGGER^359.3^1.02
"^DD",359.3,359.3,1.04,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $P($G(^IBD(359.3,DA,1)),U,4) I X S X=DIV S Y(1)=$S($D(^IBD(359.3,D0,1)):^(1),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(359.3,1.04,1,1,1.4)
"^DD",359.3,359.3,1.04,1,1,1.4)
S DIH=$S($D(^IBD(359.3,DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,2)=DIV,DIH=359.3,DIG=1.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",359.3,359.3,1.04,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBD(359.3,D0,1)):^(1),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(359.3,1.04,1,1,2.4)
"^DD",359.3,359.3,1.04,1,1,2.4)
S DIH=$S($D(^IBD(359.3,DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,2)=DIV,DIH=359.3,DIG=1.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",359.3,359.3,1.04,1,1,"CREATE CONDITION")
I $P($G(^IBD(359.3,DA,1)),U,4)
"^DD",359.3,359.3,1.04,1,1,"CREATE VALUE")
S X=DT
"^DD",359.3,359.3,1.04,1,1,"DELETE VALUE")
@
"^DD",359.3,359.3,1.04,1,1,"DT")
2970224
"^DD",359.3,359.3,1.04,1,1,"FIELD")
#1.02
"^DD",359.3,359.3,1.04,1,2,0)
^^TRIGGER^359.3^1.03
"^DD",359.3,359.3,1.04,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $P($G(^IBD(359.3,DA,1)),U,4) I X S X=DIV S Y(1)=$S($D(^IBD(359.3,D0,1)):^(1),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(359.3,1.04,1,2,1.4)
"^DD",359.3,359.3,1.04,1,2,1.4)
S DIH=$S($D(^IBD(359.3,DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,3)=DIV,DIH=359.3,DIG=1.03 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",359.3,359.3,1.04,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBD(359.3,D0,1)):^(1),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(359.3,1.04,1,2,2.4)
"^DD",359.3,359.3,1.04,1,2,2.4)
S DIH=$S($D(^IBD(359.3,DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,3)=DIV,DIH=359.3,DIG=1.03 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",359.3,359.3,1.04,1,2,"CREATE CONDITION")
I $P($G(^IBD(359.3,DA,1)),U,4)
"^DD",359.3,359.3,1.04,1,2,"CREATE VALUE")
S X=DUZ
"^DD",359.3,359.3,1.04,1,2,"DELETE VALUE")
@
"^DD",359.3,359.3,1.04,1,2,"DT")
2970224
"^DD",359.3,359.3,1.04,1,2,"FIELD")
#1.03
"^DD",359.3,359.3,1.04,21,0)
^^1^1^2970224^
"^DD",359.3,359.3,1.04,21,1,0)
Enter whether or not this error has been reviewed or corrected.
"^DD",359.3,359.3,1.04,"DT")
2970224
"^DD",359.3,359.3,10,0)
ERROR MESSAGE^359.31^^10;0
"^DD",359.3,359.31,0)
ERROR MESSAGE SUB-FIELD^^.01^1
"^DD",359.3,359.31,0,"DT")
2970127
"^DD",359.3,359.31,0,"NM","ERROR MESSAGE")

"^DD",359.3,359.31,0,"UP")
359.3
"^DD",359.3,359.31,.01,0)
ERROR MESSAGE^W^^0;1^Q
"^DD",359.3,359.31,.01,21,0)
^^4^4^2970127^
"^DD",359.3,359.31,.01,21,1,0)
This is the error message that was generated when the error occured.
"^DD",359.3,359.31,.01,21,2,0)
The text of the message was built from the dialog file.  The first
"^DD",359.3,359.31,.01,21,3,0)
line of the error message is intended to be returned as a single line
"^DD",359.3,359.31,.01,21,4,0)
of text to the user.
"^DD",359.3,359.31,.01,"DT")
2970127
"^DD",359.94,359.94,0)
FIELD^^.1^8
"^DD",359.94,359.94,0,"DT")
2950906
"^DD",359.94,359.94,0,"IX","B",359.94,.01)

"^DD",359.94,359.94,0,"IX","C",359.94,.08)

"^DD",359.94,359.94,0,"NM","HAND PRINT FIELD")

"^DD",359.94,359.94,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",359.94,359.94,.01,1,0)
^.1
"^DD",359.94,359.94,.01,1,1,0)
359.94^B
"^DD",359.94,359.94,.01,1,1,1)
S ^IBE(359.94,"B",$E(X,1,30),DA)=""
"^DD",359.94,359.94,.01,1,1,2)
K ^IBE(359.94,"B",$E(X,1,30),DA)
"^DD",359.94,359.94,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",359.94,359.94,.01,21,0)
^^3^3^2950725^
"^DD",359.94,359.94,.01,21,1,0)
 
"^DD",359.94,359.94,.01,21,2,0)
 
"^DD",359.94,359.94,.01,21,3,0)
The name of the field. 
"^DD",359.94,359.94,.01,"DT")
2930518
"^DD",359.94,359.94,.02,0)
LABEL^F^^0;2^K:$L(X)>150!($L(X)<1) X
"^DD",359.94,359.94,.02,.1)

"^DD",359.94,359.94,.02,3)
What label should appear before the hand print field?
"^DD",359.94,359.94,.02,21,0)
^^1^1^2950906^^^^
"^DD",359.94,359.94,.02,21,1,0)
The text that labels the field on the form.
"^DD",359.94,359.94,.02,"DT")
2950906
"^DD",359.94,359.94,.03,0)
STARTING COLUMN^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",359.94,359.94,.03,2)
S Y(0)=Y S Y=+Y+1
"^DD",359.94,359.94,.03,2.1)
S Y=+Y+1
"^DD",359.94,359.94,.03,3)
What block column should the field begin in?
"^DD",359.94,359.94,.03,21,0)
^^1^1^2950808^
"^DD",359.94,359.94,.03,21,1,0)
The column the label begins at.
"^DD",359.94,359.94,.03,"DT")
2950728
"^DD",359.94,359.94,.04,0)
STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",359.94,359.94,.04,2)
S Y(0)=Y S Y=+Y+1
"^DD",359.94,359.94,.04,2.1)
S Y=+Y+1
"^DD",359.94,359.94,.04,3)
What block row should the field start in?
"^DD",359.94,359.94,.04,21,0)
^^1^1^2950808^
"^DD",359.94,359.94,.04,21,1,0)
The row the label begins at.
"^DD",359.94,359.94,.04,"DT")
2950728
"^DD",359.94,359.94,.05,0)
LABEL APPEARANCE^FX^^0;5^K:$L(X)>3!($L(X)<1)!($TR(X,"BUR")'="") X
"^DD",359.94,359.94,.05,3)
B=bold,U=underline,R=reverse You can enter any combination of {B,U,R}.
"^DD",359.94,359.94,.05,21,0)
^^1^1^2950725^
"^DD",359.94,359.94,.05,21,1,0)
Allows the form designer to specify the appearance of the label.
"^DD",359.94,359.94,.05,"DT")
2961024
"^DD",359.94,359.94,.06,0)
TYPE OF DATA^R*P357.6'X^IBE(357.6,^0;6^S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""H""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",359.94,359.94,.06,.1)
WHAT TYPE OF DATA WILL BE ENTERED TO THIS FIELD?
"^DD",359.94,359.94,.06,3)
What type of data will be entered to the field?
"^DD",359.94,359.94,.06,12)
Allows only available input interfaces defined as allowable for hand print fields.
"^DD",359.94,359.94,.06,12.1)
S DIC("S")="I $P(^(0),U,6)=1,$P(^(0),U,9)=1,$P(^(0),U,16)[""H"""
"^DD",359.94,359.94,.06,21,0)
^^2^2^2940721^^
"^DD",359.94,359.94,.06,21,1,0)
Points to the package interface file. That is where information about the
"^DD",359.94,359.94,.06,21,2,0)
data and how to map it to DHCP is stored.
"^DD",359.94,359.94,.06,"DT")
2950825
"^DD",359.94,359.94,.08,0)
BLOCK^RP357.1'^IBE(357.1,^0;8^Q
"^DD",359.94,359.94,.08,1,0)
^.1
"^DD",359.94,359.94,.08,1,1,0)
359.94^C
"^DD",359.94,359.94,.08,1,1,1)
S ^IBE(359.94,"C",$E(X,1,30),DA)=""
"^DD",359.94,359.94,.08,1,1,2)
K ^IBE(359.94,"C",$E(X,1,30),DA)
"^DD",359.94,359.94,.08,1,1,"%D",0)
^^1^1^2940720^
"^DD",359.94,359.94,.08,1,1,"%D",1,0)
Used to find all the input fields appearing in a block.
"^DD",359.94,359.94,.08,1,1,"DT")
2940720
"^DD",359.94,359.94,.08,3)
What block should this input field appear in?
"^DD",359.94,359.94,.08,21,0)
^^1^1^2950808^
"^DD",359.94,359.94,.08,21,1,0)
The block the field belongs to.
"^DD",359.94,359.94,.08,"DT")
2940720
"^DD",359.94,359.94,.1,0)
DHCP DATA ELEMENT^R*P359.1'X^IBE(359.1,^0;10^S DIC("S")="I $$DTGOOD^IBDFU9($P($G(^IBE(359.94,DA,0)),""^"",6),Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",359.94,359.94,.1,3)
What data will be printed in this field?
"^DD",359.94,359.94,.1,12)
Allows only data elements defined as allowable for the Package Interface.
"^DD",359.94,359.94,.1,12.1)
S DIC("S")="I $$DTGOOD^IBDFU9($P($G(^IBE(359.94,DA,0)),""^"",6),Y)"
"^DD",359.94,359.94,.1,21,0)
^^1^1^2950725^
"^DD",359.94,359.94,.1,21,1,0)
Specifies what data the hand print field is for.
"^DD",359.94,359.94,.1,"DT")
2950727
"^DD",409.95,409.95,0)
FIELD^^.1^12
"^DD",409.95,409.95,0,"DDA")
N
"^DD",409.95,409.95,0,"DT")
2970317
"^DD",409.95,409.95,0,"IX","A",409.9501,.01)

"^DD",409.95,409.95,0,"IX","A1",409.9501,.02)

"^DD",409.95,409.95,0,"IX","AE",409.9502,.01)

"^DD",409.95,409.95,0,"IX","B",409.95,.01)

"^DD",409.95,409.95,0,"IX","C",409.95,.02)

"^DD",409.95,409.95,0,"IX","D",409.95,.03)

"^DD",409.95,409.95,0,"IX","E",409.95,.04)

"^DD",409.95,409.95,0,"IX","F",409.95,.05)

"^DD",409.95,409.95,0,"IX","G",409.95,.06)

"^DD",409.95,409.95,0,"IX","H",409.95,.07)

"^DD",409.95,409.95,0,"IX","I",409.95,.08)

"^DD",409.95,409.95,0,"IX","J",409.95,.09)

"^DD",409.95,409.95,0,"NM","PRINT MANAGER CLINIC SETUP")

"^DD",409.95,409.95,.01,0)
CLINIC^R*P44'^SC(^0;1^S DIC("S")="I $P(^(0),U,3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",409.95,409.95,.01,1,0)
^.1^^-1
"^DD",409.95,409.95,.01,1,1,0)
409.95^B
"^DD",409.95,409.95,.01,1,1,1)
S ^SD(409.95,"B",$E(X,1,30),DA)=""
"^DD",409.95,409.95,.01,1,1,2)
K ^SD(409.95,"B",$E(X,1,30),DA)
"^DD",409.95,409.95,.01,3)
The clinic the print manager setup is for.
"^DD",409.95,409.95,.01,12)
Encounter forms are only for clinics.
"^DD",409.95,409.95,.01,12.1)
S DIC("S")="I $P(^(0),U,3)=""C"""
"^DD",409.95,409.95,.01,21,0)
^^2^2^2930804^^
"^DD",409.95,409.95,.01,21,1,0)
 
"^DD",409.95,409.95,.01,21,2,0)
The clinic that the setup is for.
"^DD",409.95,409.95,.01,"DT")
2930319
"^DD",409.95,409.95,.02,0)
BASIC DEFAULT ENCOUNTER FORM^*P357'^IBE(357,^0;2^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",409.95,409.95,.02,1,0)
^.1
"^DD",409.95,409.95,.02,1,1,0)
409.95^C
"^DD",409.95,409.95,.02,1,1,1)
S ^SD(409.95,"C",$E(X,1,30),DA)=""
"^DD",409.95,409.95,.02,1,1,2)
K ^SD(409.95,"C",$E(X,1,30),DA)
"^DD",409.95,409.95,.02,1,1,"DT")
2930209
"^DD",409.95,409.95,.02,3)
What form will be the default form printed with patient data for a patient with an appointment?
"^DD",409.95,409.95,.02,12)
Does not allow tool kit forms or forms of type other than encounter forms.
"^DD",409.95,409.95,.02,12.1)
S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
"^DD",409.95,409.95,.02,21,0)
^^2^2^2930806^^^
"^DD",409.95,409.95,.02,21,1,0)
 
"^DD",409.95,409.95,.02,21,2,0)
The encounter form that will be printed for every appointment.
"^DD",409.95,409.95,.02,"DT")
2930806
"^DD",409.95,409.95,.03,0)
SUPPLMNTL FORM - ESTBLSHED PT.^*P357'^IBE(357,^0;3^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",409.95,409.95,.03,1,0)
^.1
"^DD",409.95,409.95,.03,1,1,0)
409.95^D
"^DD",409.95,409.95,.03,1,1,1)
S ^SD(409.95,"D",$E(X,1,30),DA)=""
"^DD",409.95,409.95,.03,1,1,2)
K ^SD(409.95,"D",$E(X,1,30),DA)
"^DD",409.95,409.95,.03,1,1,"DT")
2930209
"^DD",409.95,409.95,.03,3)
What supplemental form should be printed for patients that have been seen before?
"^DD",409.95,409.95,.03,12)
Does not allow tool kit forms or forms that are not of type encounter form.
"^DD",409.95,409.95,.03,12.1)
S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
"^DD",409.95,409.95,.03,21,0)
^^3^3^2930818^^^
"^DD",409.95,409.95,.03,21,1,0)
 
"^DD",409.95,409.95,.03,21,2,0)
This is a supplemental form that will print only for patients that have
"^DD",409.95,409.95,.03,21,3,0)
been seen in the clinic previously.
"^DD",409.95,409.95,.03,"DT")
2930818
"^DD",409.95,409.95,.04,0)
SUPPLMNTL FORM - FIRST VISIT^*P357'^IBE(357,^0;4^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",409.95,409.95,.04,1,0)
^.1
"^DD",409.95,409.95,.04,1,1,0)
409.95^E
"^DD",409.95,409.95,.04,1,1,1)
S ^SD(409.95,"E",$E(X,1,30),DA)=""
"^DD",409.95,409.95,.04,1,1,2)
K ^SD(409.95,"E",$E(X,1,30),DA)
"^DD",409.95,409.95,.04,1,1,"DT")
2930209
"^DD",409.95,409.95,.04,3)
What supplemental form should be printed for first time patients?
"^DD",409.95,409.95,.04,12)
Does not allow tool kit forms or forms that are not of type encounter form.
"^DD",409.95,409.95,.04,12.1)
S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
"^DD",409.95,409.95,.04,21,0)
^^3^3^2940216^
"^DD",409.95,409.95,.04,21,1,0)
 
"^DD",409.95,409.95,.04,21,2,0)
This is a supplemental for that will print only for patients that have
"^DD",409.95,409.95,.04,21,3,0)
not been seen previously at the clinic.
"^DD",409.95,409.95,.04,"DT")
2930806
"^DD",409.95,409.95,.05,0)
FORM W/O PATIENT DATA^*P357'^IBE(357,^0;5^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",409.95,409.95,.05,.1)
FORM TO PRINT WITH NO PATIENT DATA
"^DD",409.95,409.95,.05,1,0)
^.1
"^DD",409.95,409.95,.05,1,1,0)
409.95^F
"^DD",409.95,409.95,.05,1,1,1)
S ^SD(409.95,"F",$E(X,1,30),DA)=""
"^DD",409.95,409.95,.05,1,1,2)
K ^SD(409.95,"F",$E(X,1,30),DA)
"^DD",409.95,409.95,.05,1,1,"DT")
2930209
"^DD",409.95,409.95,.05,3)
Enter the form that should print in cases where you do not want patient data printed on the form.
"^DD",409.95,409.95,.05,12)
Does not allow tool kit forms or forms that are not of type encounter form.
"^DD",409.95,409.95,.05,12.1)
S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
"^DD",409.95,409.95,.05,21,0)
^^4^4^2940216^^^^
"^DD",409.95,409.95,.05,21,1,0)
 
"^DD",409.95,409.95,.05,21,2,0)
This is the encounter form that should be printed for unscheduled visits.
"^DD",409.95,409.95,.05,21,3,0)
It may have a space in the top left hand corner for imprinting the
"^DD",409.95,409.95,.05,21,4,0)
embossed patient card or space to write in the name, ssn, etc.
"^DD",409.95,409.95,.05,"DT")
2930910
"^DD",409.95,409.95,.06,0)
SUPPLMNTL FORM #1 ALL PATIENTS^*P357'^IBE(357,^0;6^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",409.95,409.95,.06,1,0)
^.1
"^DD",409.95,409.95,.06,1,1,0)
409.95^G
"^DD",409.95,409.95,.06,1,1,1)
S ^SD(409.95,"G",$E(X,1,30),DA)=""
"^DD",409.95,409.95,.06,1,1,2)
K ^SD(409.95,"G",$E(X,1,30),DA)
"^DD",409.95,409.95,.06,1,1,"%D",0)
^^1^1^2930719^
"^DD",409.95,409.95,.06,1,1,"%D",1,0)
Used to find all clinics using this form as a supplemental form for all patients.
"^DD",409.95,409.95,.06,1,1,"DT")
2930719
"^DD",409.95,409.95,.06,3)
You may require a supplemental form to be used for all appointments for this clinic.
"^DD",409.95,409.95,.06,12)
Does not allow tool kit forms or forms that are not of type encounter form.
"^DD",409.95,409.95,.06,12.1)
S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
"^DD",409.95,409.95,.06,21,0)
^^4^4^2940216^^
"^DD",409.95,409.95,.06,21,1,0)
 
"^DD",409.95,409.95,.06,21,2,0)
This is a supplemental form to be used by all patients of the clinic. A
"^DD",409.95,409.95,.06,21,3,0)
form in this category should not also be in one of the other categories
"^DD",409.95,409.95,.06,21,4,0)
for supplemental forms, else it will be printed twice.
"^DD",409.95,409.95,.06,"DT")
2941207
"^DD",409.95,409.95,.07,0)
RESERVED FOR FUTURE USE^*P357'^IBE(357,^0;7^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",409.95,409.95,.07,1,0)
^.1
"^DD",409.95,409.95,.07,1,1,0)
409.95^H
"^DD",409.95,409.95,.07,1,1,1)
S ^SD(409.95,"H",$E(X,1,30),DA)=""
"^DD",409.95,409.95,.07,1,1,2)
K ^SD(409.95,"H",$E(X,1,30),DA)
"^DD",409.95,409.95,.07,1,1,"%D",0)
^^1^1^2930729^
"^DD",409.95,409.95,.07,1,1,"%D",1,0)
Used to track forms assigned to a clinic but not in current use.
"^DD",409.95,409.95,.07,1,1,"DT")
2930729
"^DD",409.95,409.95,.07,3)
Assign a form to this category if you don't want it to print for appointments.
"^DD",409.95,409.95,.07,12)
Does not allow tool kit forms or forms that are not of type encounter form.
"^DD",409.95,409.95,.07,12.1)
S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
"^DD",409.95,409.95,.07,21,0)
^^2^2^2940524^^
"^DD",409.95,409.95,.07,21,1,0)
This category was created for clinics to assign new forms that are not yet
"^DD",409.95,409.95,.07,21,2,0)
complete without fear that they would be accidently printed.
"^DD",409.95,409.95,.07,"DT")
2940524
"^DD",409.95,409.95,.08,0)
SUPPLMNTL FORM #2 ALL PATIENTS^*P357'^IBE(357,^0;8^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",409.95,409.95,.08,1,0)
^.1
"^DD",409.95,409.95,.08,1,1,0)
409.95^I
"^DD",409.95,409.95,.08,1,1,1)
S ^SD(409.95,"I",$E(X,1,30),DA)=""
"^DD",409.95,409.95,.08,1,1,2)
K ^SD(409.95,"I",$E(X,1,30),DA)
"^DD",409.95,409.95,.08,1,1,"%D",0)
^^2^2^2941207^
"^DD",409.95,409.95,.08,1,1,"%D",1,0)
Used to find all clinics using this form as a suplemental form for all
"^DD",409.95,409.95,.08,1,1,"%D",2,0)
patients.
"^DD",409.95,409.95,.08,1,1,"DT")
2941207
"^DD",409.95,409.95,.08,3)
You can require this supplmental form to be used for all appointments for this clinic.
"^DD",409.95,409.95,.08,12)
Does not allow toolkit forms or forms that are not of type encoutner form.
"^DD",409.95,409.95,.08,12.1)
S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
"^DD",409.95,409.95,.08,"DT")
2941207
"^DD",409.95,409.95,.09,0)
SUPPLMNTL FORM #3 ALL PATIENTS^*P357'^IBE(357,^0;9^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",409.95,409.95,.09,1,0)
^.1
"^DD",409.95,409.95,.09,1,1,0)
409.95^J
"^DD",409.95,409.95,.09,1,1,1)
S ^SD(409.95,"J",$E(X,1,30),DA)=""
"^DD",409.95,409.95,.09,1,1,2)
K ^SD(409.95,"J",$E(X,1,30),DA)
"^DD",409.95,409.95,.09,1,1,"%D",0)
^^2^2^2941207^
"^DD",409.95,409.95,.09,1,1,"%D",1,0)
Used to find all clinics using this form as a supplemental form for all
"^DD",409.95,409.95,.09,1,1,"%D",2,0)
patients.
"^DD",409.95,409.95,.09,1,1,"DT")
2941207
"^DD",409.95,409.95,.09,3)
You can require this supplemental for to be used for all appointments for this clinic.
"^DD",409.95,409.95,.09,12)
Does not allow toolkit forms or forms that are not of type encounter form.
"^DD",409.95,409.95,.09,12.1)
S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U4)'>1"
"^DD",409.95,409.95,.09,"DT")
2941207
"^DD",409.95,409.95,.1,0)
DON'T USE PCMM PROVIDERS^S^0:NO;1:YES;^0;10^Q
"^DD",409.95,409.95,.1,21,0)
^^6^6^2970324^^^^
"^DD",409.95,409.95,.1,21,1,0)
AICS defaults to printing providers specified in PCMM if they are
"^DD",409.95,409.95,.1,21,2,0)
defined otherwise the providers from the clinic setup is used.
"^DD",409.95,409.95,.1,21,3,0)
Answering this field "YES" for a clinic will cause AICS to print
"^DD",409.95,409.95,.1,21,4,0)
the providers from clinic setup irregardless PCMM.  This is intended
"^DD",409.95,409.95,.1,21,5,0)
for use by sites bringing up PCMM but who have not completed the
"^DD",409.95,409.95,.1,21,6,0)
entry of providers.
"^DD",409.95,409.95,.1,"DT")
2970317
"^DD",409.95,409.95,1,0)
REPORT^409.9501IP^^1;0
"^DD",409.95,409.95,1,12)
Allows only package interfaces that print reports or other forms and that are available.
"^DD",409.95,409.95,1,12.1)
S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
"^DD",409.95,409.95,1,21,0)
^^4^4^2940628^^^^
"^DD",409.95,409.95,1,21,1,0)
 
"^DD",409.95,409.95,1,21,2,0)
This is a list of reports or forms that should be printed under certain
"^DD",409.95,409.95,1,21,3,0)
circumstances. The only types of forms or reports that can be printed are
"^DD",409.95,409.95,1,21,4,0)
ones that are defined in the Package Interface file.
"^DD",409.95,409.95,1,"DT")
2930520
"^DD",409.95,409.95,2,0)
EXCLUDED REPORT^409.9502P^^2;0
"^DD",409.95,409.95,2,12)
Allows only available package interfaces that print reports.
"^DD",409.95,409.95,2,12.1)
S DIC("S")="I $P($G(^(0)),U,6)=4,$P($G(^(0)),U,9)=1"
"^DD",409.95,409.95,2,21,0)
^^3^3^2940216^^^^
"^DD",409.95,409.95,2,21,1,0)
Used to override reports defined to print for the division. 
"^DD",409.95,409.95,2,21,2,0)
Reports defined to print for the division will not print if they are
"^DD",409.95,409.95,2,21,3,0)
excluded for the clinic.
"^DD",409.95,409.9501,0)
REPORT SUB-FIELD^^.03^3
"^DD",409.95,409.9501,0,"DT")
2940627
"^DD",409.95,409.9501,0,"IX","B",409.9501,.01)

"^DD",409.95,409.9501,0,"NM","REPORT")

"^DD",409.95,409.9501,0,"UP")
409.95
"^DD",409.95,409.9501,.01,0)
REPORT^M*P357.6'^IBE(357.6,^0;1^S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",409.95,409.9501,.01,1,0)
^.1
"^DD",409.95,409.9501,.01,1,1,0)
409.9501^B
"^DD",409.95,409.9501,.01,1,1,1)
S ^SD(409.95,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",409.95,409.9501,.01,1,1,2)
K ^SD(409.95,DA(1),1,"B",$E(X,1,30),DA)
"^DD",409.95,409.9501,.01,1,2,0)
409.95^A^MUMPS
"^DD",409.95,409.9501,.01,1,2,1)
I $P(^SD(409.95,DA(1),1,DA,0),U,2) S ^SD(409.95,"A",$P(^SD(409.95,DA(1),0),U),$P(^SD(409.95,DA(1),1,DA,0),U,2),X,DA(1),DA)=""
"^DD",409.95,409.9501,.01,1,2,2)
I $P(^SD(409.95,DA(1),1,DA,0),U,2) K ^SD(409.95,"A",$P(^SD(409.95,DA(1),0),U),$P(^SD(409.95,DA(1),1,DA,0),U,2),X,DA(1),DA)
"^DD",409.95,409.9501,.01,1,2,"%D",0)
^^6^6^2940216^
"^DD",409.95,409.9501,.01,1,2,"%D",1,0)
 
"^DD",409.95,409.9501,.01,1,2,"%D",2,0)
Allows all of the reports that should print under certain conditons for the
"^DD",409.95,409.9501,.01,1,2,"%D",3,0)
clinic to be found. The subscripts are ^SD(409.95,"A",<clinic ien>,<print
"^DD",409.95,409.9501,.01,1,2,"%D",4,0)
condition ien >, <package interface ien>, <clinic setup ien>, <report
"^DD",409.95,409.9501,.01,1,2,"%D",5,0)
multiple ien>). It is not necessary to re-index the A1 cross-reference on
"^DD",409.95,409.9501,.01,1,2,"%D",6,0)
the PRINT CONDITION field if this field is re-indexed.
"^DD",409.95,409.9501,.01,1,2,"DT")
2930518
"^DD",409.95,409.9501,.01,3)
You can choose reports and other forms to print under conditions that you specify.
"^DD",409.95,409.9501,.01,12)
Allows only reports installed in the Package Interface file.
"^DD",409.95,409.9501,.01,12.1)
S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
"^DD",409.95,409.9501,.01,21,0)
^^4^4^2940216^
"^DD",409.95,409.9501,.01,21,1,0)
 
"^DD",409.95,409.9501,.01,21,2,0)
 
"^DD",409.95,409.9501,.01,21,3,0)
An entry in the Package Interface file that should identify a routine that
"^DD",409.95,409.9501,.01,21,4,0)
prints the desired form or report.
"^DD",409.95,409.9501,.01,"DT")
2930520
"^DD",409.95,409.9501,.02,0)
PRINT CONDITION^RP357.92'^IBE(357.92,^0;2^Q
"^DD",409.95,409.9501,.02,1,0)
^.1
"^DD",409.95,409.9501,.02,1,1,0)
409.95^A1^MUMPS
"^DD",409.95,409.9501,.02,1,1,1)
S ^SD(409.95,"A",$P(^SD(409.95,DA(1),0),U),X,$P(^SD(409.95,DA(1),1,DA,0),U),DA(1),DA)=""
"^DD",409.95,409.9501,.02,1,1,2)
K ^SD(409.95,"A",$P(^SD(409.95,DA(1),0),U),X,$P(^SD(409.95,DA(1),1,DA,0),U),DA(1),DA)
"^DD",409.95,409.9501,.02,1,1,"%D",0)
^^7^7^2940216^
"^DD",409.95,409.9501,.02,1,1,"%D",1,0)
 
"^DD",409.95,409.9501,.02,1,1,"%D",2,0)
 
"^DD",409.95,409.9501,.02,1,1,"%D",3,0)
Allows all of the reports that should print under certain conditons for
"^DD",409.95,409.9501,.02,1,1,"%D",4,0)
the clinic to be found. The subscripts are ^SD(409.95,"A",<clinic
"^DD",409.95,409.9501,.02,1,1,"%D",5,0)
ien>,<print condition ien >, <package interface ien>, <clinic setup ien>,
"^DD",409.95,409.9501,.02,1,1,"%D",6,0)
<report multiple ien>). It is not necessary to re-index the A
"^DD",409.95,409.9501,.02,1,1,"%D",7,0)
cross-reference on the REPORT field if this field is re-indexed.
"^DD",409.95,409.9501,.02,1,1,"DT")
2930518
"^DD",409.95,409.9501,.02,3)
Under what condition should the report be printed?
"^DD",409.95,409.9501,.02,4)
D HELP6^IBDFU5A
"^DD",409.95,409.9501,.02,21,0)
^^2^2^2930528^
"^DD",409.95,409.9501,.02,21,1,0)
 
"^DD",409.95,409.9501,.02,21,2,0)
The particular condition under which the form or report should print.
"^DD",409.95,409.9501,.02,"DT")
2930518
"^DD",409.95,409.9501,.03,0)
SIMPLEX/DUPLEX^S^0:SIMPLEX;1:DUPLEX,LONG-EDGE BINDING;2:DUPLEX,SHORT-EDGE BINDING;^0;3^Q
"^DD",409.95,409.9501,.03,3)
SIMPLEX means one-sided, DUPLEX means two-sided. SHORT-EDGE BINDING is for attaching forms by the top, LONG-EDGE BINDING is for attaching forms along the side.
"^DD",409.95,409.9501,.03,21,0)
^^1^1^2940628^
"^DD",409.95,409.9501,.03,21,1,0)
Allows reports to be printed one-sided or two-sided.
"^DD",409.95,409.9501,.03,"DT")
2940627
"^DD",409.95,409.9502,0)
EXCLUDED REPORT SUB-FIELD^^.01^1
"^DD",409.95,409.9502,0,"IX","B",409.9502,.01)

"^DD",409.95,409.9502,0,"NM","EXCLUDED REPORT")

"^DD",409.95,409.9502,0,"UP")
409.95
"^DD",409.95,409.9502,.01,0)
EXCLUDED REPORT^M*P357.6'^IBE(357.6,^0;1^S DIC("S")="I $P($G(^(0)),U,6)=4,$P($G(^(0)),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",409.95,409.9502,.01,.1)

"^DD",409.95,409.9502,.01,1,0)
^.1
"^DD",409.95,409.9502,.01,1,1,0)
409.9502^B
"^DD",409.95,409.9502,.01,1,1,1)
S ^SD(409.95,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",409.95,409.9502,.01,1,1,2)
K ^SD(409.95,DA(1),2,"B",$E(X,1,30),DA)
"^DD",409.95,409.9502,.01,1,2,0)
409.95^AE^MUMPS
"^DD",409.95,409.9502,.01,1,2,1)
S ^SD(409.95,"AE",$P(^SD(409.95,DA(1),0),U),X,DA(1),DA)=""
"^DD",409.95,409.9502,.01,1,2,2)
K ^SD(409.95,"AE",$P(^SD(409.95,DA(1),0),U),X,DA(1),DA)
"^DD",409.95,409.9502,.01,1,2,"%D",0)
^^1^1^2930622^
"^DD",409.95,409.9502,.01,1,2,"%D",1,0)
Used to determine if a particular report is defined NOT to print for a clinic.
"^DD",409.95,409.9502,.01,1,2,"DT")
2930622
"^DD",409.95,409.9502,.01,3)
You may enter reports that you DO NOT want to print for this clinic. Entering an EXCLUDED REPORT will prevent it from printing even if it is defined to print for the entire division.
"^DD",409.95,409.9502,.01,12)
Allows only available package interfaces that print reports.
"^DD",409.95,409.9502,.01,12.1)
S DIC("S")="I $P($G(^(0)),U,6)=4,$P($G(^(0)),U,9)=1"
"^DD",409.95,409.9502,.01,21,0)
^^3^3^2940216^
"^DD",409.95,409.9502,.01,21,1,0)
Used to override repots defined to print for the division. Reports
"^DD",409.95,409.9502,.01,21,2,0)
defined to print for the division will not print if they are excluded
"^DD",409.95,409.9502,.01,21,3,0)
for the clinic.
"^DD",409.95,409.9502,.01,"DT")
2930623
"^DD",409.96,409.96,0)
FIELD^^1^2
"^DD",409.96,409.96,0,"DDA")
N
"^DD",409.96,409.96,0,"DT")
2940627
"^DD",409.96,409.96,0,"IX","A",409.961,.01)

"^DD",409.96,409.96,0,"IX","A1",409.961,.02)

"^DD",409.96,409.96,0,"IX","B",409.96,.01)

"^DD",409.96,409.96,0,"NM","PRINT MANAGER DIVISION SETUP")

"^DD",409.96,409.96,.01,0)
DIVISION^RP40.8'^DG(40.8,^0;1^Q
"^DD",409.96,409.96,.01,1,0)
^.1
"^DD",409.96,409.96,.01,1,1,0)
409.96^B
"^DD",409.96,409.96,.01,1,1,1)
S ^SD(409.96,"B",$E(X,1,30),DA)=""
"^DD",409.96,409.96,.01,1,1,2)
K ^SD(409.96,"B",$E(X,1,30),DA)
"^DD",409.96,409.96,.01,3)
Enter the division for which you want to specify forms.
"^DD",409.96,409.96,.01,21,0)
^^2^2^2930623^^^^
"^DD",409.96,409.96,.01,21,1,0)
 
"^DD",409.96,409.96,.01,21,2,0)
The division the setup is for.
"^DD",409.96,409.96,.01,"DT")
2930518
"^DD",409.96,409.96,1,0)
REPORT^409.961IP^^1;0
"^DD",409.96,409.96,1,12)
Allows only package interfaces that print reports and that are available.
"^DD",409.96,409.96,1,12.1)
S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
"^DD",409.96,409.96,1,21,0)
^^2^2^2940628^^^^
"^DD",409.96,409.96,1,21,1,0)
 
"^DD",409.96,409.96,1,21,2,0)
The reports that should print.
"^DD",409.96,409.96,1,"DT")
2930520
"^DD",409.96,409.961,0)
REPORT SUB-FIELD^^.03^3
"^DD",409.96,409.961,0,"DT")
2940627
"^DD",409.96,409.961,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(357.92,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(357.92,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",409.96,409.961,0,"IX","B",409.961,.01)

"^DD",409.96,409.961,0,"NM","REPORT")

"^DD",409.96,409.961,0,"UP")
409.96
"^DD",409.96,409.961,.01,0)
REPORT^M*P357.6'^IBE(357.6,^0;1^S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",409.96,409.961,.01,1,0)
^.1
"^DD",409.96,409.961,.01,1,1,0)
409.961^B
"^DD",409.96,409.961,.01,1,1,1)
S ^SD(409.96,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",409.96,409.961,.01,1,1,2)
K ^SD(409.96,DA(1),1,"B",$E(X,1,30),DA)
"^DD",409.96,409.961,.01,1,2,0)
409.96^A^MUMPS
"^DD",409.96,409.961,.01,1,2,1)
I $P(^SD(409.96,DA(1),1,DA,0),U,2) S ^SD(409.96,"A",$P(^SD(409.96,DA(1),0),U),$P(^SD(409.96,DA(1),1,DA,0),U,2),X,DA(1),DA)=""
"^DD",409.96,409.961,.01,1,2,2)
I $P(^SD(409.96,DA(1),1,DA,0),U,2) K ^SD(409.96,"A",$P(^SD(409.96,DA(1),0),U),$P(^SD(409.96,DA(1),1,DA,0),U,2),X,DA(1),DA)
"^DD",409.96,409.961,.01,1,2,"%D",0)
^^7^7^2940216^
"^DD",409.96,409.961,.01,1,2,"%D",1,0)
 
"^DD",409.96,409.961,.01,1,2,"%D",2,0)
 
"^DD",409.96,409.961,.01,1,2,"%D",3,0)
Allows all of the reports that should print under certain conditons for
"^DD",409.96,409.961,.01,1,2,"%D",4,0)
the division to be found. The subscripts are ^SD(409.96,"A",<division
"^DD",409.96,409.961,.01,1,2,"%D",5,0)
ien>,<print condition ien >, <package interface ien>, <division setup
"^DD",409.96,409.961,.01,1,2,"%D",6,0)
ien>, <report multiple ien>). It is not necessary to re-index the A1
"^DD",409.96,409.961,.01,1,2,"%D",7,0)
cross-reference on the PRINT CONDITION field if this field is re-indexed.
"^DD",409.96,409.961,.01,1,2,"DT")
2930518
"^DD",409.96,409.961,.01,3)
Enter the report or form that you want to print for the entire division.
"^DD",409.96,409.961,.01,12)
Allows only reports installed in the Package Interface file.
"^DD",409.96,409.961,.01,12.1)
S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
"^DD",409.96,409.961,.01,21,0)
^^3^3^2930528^
"^DD",409.96,409.961,.01,21,1,0)
 
"^DD",409.96,409.961,.01,21,2,0)
A report that should print. Only reports contained in the Package
"^DD",409.96,409.961,.01,21,3,0)
Interface file can be printed by the print manager.
"^DD",409.96,409.961,.01,"DT")
2930520
"^DD",409.96,409.961,.02,0)
PRINT CONDITION^RP357.92'^IBE(357.92,^0;2^Q
"^DD",409.96,409.961,.02,1,0)
^.1
"^DD",409.96,409.961,.02,1,1,0)
409.96^A1^MUMPS
"^DD",409.96,409.961,.02,1,1,1)
S ^SD(409.96,"A",$P(^SD(409.96,DA(1),0),U),X,$P(^SD(409.96,DA(1),1,DA,0),U),DA(1),DA)=""
"^DD",409.96,409.961,.02,1,1,2)
K ^SD(409.96,"A",$P(^SD(409.96,DA(1),0),U),X,$P(^SD(409.96,DA(1),1,DA,0),U),DA(1),DA)
"^DD",409.96,409.961,.02,1,1,"%D",0)
^^6^6^2940216^
"^DD",409.96,409.961,.02,1,1,"%D",1,0)
 
"^DD",409.96,409.961,.02,1,1,"%D",2,0)
Allows all of the reports that should print under certain conditons for
"^DD",409.96,409.961,.02,1,1,"%D",3,0)
the division to be found. The subscripts are ^SD(409.96,"A",<division
"^DD",409.96,409.961,.02,1,1,"%D",4,0)
ien>,<print condition ien >, <package interface ien>, <division setup
"^DD",409.96,409.961,.02,1,1,"%D",5,0)
ien>, <report multiple ien>). It is not necessary to re-index the A
"^DD",409.96,409.961,.02,1,1,"%D",6,0)
cross-reference on the REPORT field if this field is re-indexed.
"^DD",409.96,409.961,.02,1,1,"DT")
2930518
"^DD",409.96,409.961,.02,3)
Under what condition do you want the report to print?
"^DD",409.96,409.961,.02,4)
D HELP6^IBDFU5A
"^DD",409.96,409.961,.02,21,0)
^^2^2^2930528^
"^DD",409.96,409.961,.02,21,1,0)
 
"^DD",409.96,409.961,.02,21,2,0)
The condition under which the report should print.
"^DD",409.96,409.961,.02,"DT")
2930518
"^DD",409.96,409.961,.03,0)
SIMPLEX/DUPLEX^S^0:SIMPLEX;1:DUPLEX,LONG-EDGE BINDING;2:DUPLEX,SHORT-EDGE BINDING;^0;3^Q
"^DD",409.96,409.961,.03,3)
SIMPLEX means one-sided, DUPLEX means two-sided. SHORT-EDGE BINDING is for attaching forms by the top, LONG-EDGE BINDING is for attaching forms along the side.
"^DD",409.96,409.961,.03,21,0)
^^1^1^2940628^
"^DD",409.96,409.961,.03,21,1,0)
Allows reports to be printed one-sided or two-sided.
"^DD",409.96,409.961,.03,"DT")
2940627
"^DIC",357,357,0)
ENCOUNTER FORM^357I
"^DIC",357,357,0,"GL")
^IBE(357,
"^DIC",357,357,"%D",0)
^^9^9^2960911^^^^
"^DIC",357,357,"%D",1,0)
Warning: Do Not Re-Index this file.  If this file should accidentally
"^DIC",357,357,"%D",2,0)
         be re-indexed, use the option to Recompile All Forms.  This will
"^DIC",357,357,"%D",3,0)
         correct any printing problems that might occur.
"^DIC",357,357,"%D",4,0)
 
"^DIC",357,357,"%D",5,0)
This file contains the descriptive information about an encounter form.  An
"^DIC",357,357,"%D",6,0)
encounter form is composed of many encounter form blocks.  Encounter form
"^DIC",357,357,"%D",7,0)
blocks contain all the data and lists that appear on the form.  The data
"^DIC",357,357,"%D",8,0)
from this file along with the other encounter form files is used to design
"^DIC",357,357,"%D",9,0)
and print encounter forms.
"^DIC",357,"B","ENCOUNTER FORM",357)

"^DIC",357.08,357.08,0)
AICS PURGE LOG^357.08
"^DIC",357.08,357.08,0,"GL")
^IBD(357.08,
"^DIC",357.08,357.08,"%D",0)
^^4^4^2951208^^^
"^DIC",357.08,357.08,"%D",1,0)
This file will contain one entry for each time the AICS purge options
"^DIC",357.08,357.08,"%D",2,0)
are run.  Both the automatic and manual options cause entries.  The
"^DIC",357.08,357.08,"%D",3,0)
purpose of this file is to provide a historical log of the number of
"^DIC",357.08,357.08,"%D",4,0)
entries that are purged at each site.  
"^DIC",357.08,"B","AICS PURGE LOG",357.08)

"^DIC",357.09,357.09,0)
ENCOUNTER FORM PARAMETERS^357.09
"^DIC",357.09,357.09,0,"GL")
^IBD(357.09,
"^DIC",357.09,357.09,"%D",0)
^^4^4^2951208^^
"^DIC",357.09,357.09,"%D",1,0)
This file contains the AICS parameters that control the operation of
"^DIC",357.09,357.09,"%D",2,0)
the package.  Included are parameters to manage the automatic purge
"^DIC",357.09,357.09,"%D",3,0)
and those necessary to create print manager jobs that automatically 
"^DIC",357.09,357.09,"%D",4,0)
queue encounter forms to print.
"^DIC",357.09,"B","ENCOUNTER FORM PARAMETERS",357.09)

"^DIC",357.1,357.1,0)
ENCOUNTER FORM BLOCK^357.1I
"^DIC",357.1,357.1,0,"GL")
^IBE(357.1,
"^DIC",357.1,357.1,"%D",0)
^^8^8^2960402^^^^
"^DIC",357.1,357.1,"%D",1,0)
Warning: Do Not Re-Index this file.  If this file should accidentally
"^DIC",357.1,357.1,"%D",2,0)
         be re-indexed, use the option to Recompile All Forms.  This will
"^DIC",357.1,357.1,"%D",3,0)
         correct any printing problems that might occur.
"^DIC",357.1,357.1,"%D",4,0)
 
"^DIC",357.1,357.1,"%D",5,0)
This file contains the description of encounter form blocks.  A block is a
"^DIC",357.1,357.1,"%D",6,0)
rectangular areas on an encounter form.  Blocks are the basic building unit
"^DIC",357.1,357.1,"%D",7,0)
of encounter forms.  All data on a form is contained within a block and the
"^DIC",357.1,357.1,"%D",8,0)
block is sized and positioned to create a usable form.
"^DIC",357.1,"B","ENCOUNTER FORM BLOCK",357.1)

"^DIC",357.2,357.2,0)
SELECTION LIST^357.2I
"^DIC",357.2,357.2,0,"GL")
^IBE(357.2,
"^DIC",357.2,357.2,"%D",0)
^^10^10^2951102^^^^
"^DIC",357.2,357.2,"%D",1,0)
 
"^DIC",357.2,357.2,"%D",2,0)
 
"^DIC",357.2,357.2,"%D",3,0)
 
"^DIC",357.2,357.2,"%D",4,0)
 
"^DIC",357.2,357.2,"%D",5,0)
 
"^DIC",357.2,357.2,"%D",6,0)
This file contains descriptions of 'selection lists'.  A selection list is
"^DIC",357.2,357.2,"%D",7,0)
a rectangular area in a block that contains a list. The list has 'columns'
"^DIC",357.2,357.2,"%D",8,0)
of 'selections'. The columns have 'subcolumns', which can either contain
"^DIC",357.2,357.2,"%D",9,0)
text or  a 'marking area'.  A marking area is an area on the form designed
"^DIC",357.2,357.2,"%D",10,0)
to be checked to indicate that a choice is being made from the list.
"^DIC",357.2,"B","SELECTION LIST",357.2)

"^DIC",357.3,357.3,0)
SELECTION^357.3I
"^DIC",357.3,357.3,0,"GL")
^IBE(357.3,
"^DIC",357.3,357.3,"%D",0)
^^4^4^2960401^^^^
"^DIC",357.3,357.3,"%D",1,0)
 
"^DIC",357.3,357.3,"%D",2,0)
Contains the items appearing on the SELECTION LISTS. A selection can be
"^DIC",357.3,357.3,"%D",3,0)
composed of several fields, hence can occupy several subcolumns. Only the
"^DIC",357.3,357.3,"%D",4,0)
text is stored here, not the MARKING SYMBOLS.
"^DIC",357.3,"B","SELECTION",357.3)

"^DIC",357.4,357.4,0)
SELECTION GROUP^357.4I
"^DIC",357.4,357.4,0,"GL")
^IBE(357.4,
"^DIC",357.4,357.4,"%D",0)
^^3^3^2951102^^^
"^DIC",357.4,357.4,"%D",1,0)
 
"^DIC",357.4,357.4,"%D",2,0)
A Selection Group is a set of items on a list and the header that those
"^DIC",357.4,357.4,"%D",3,0)
items should appear under.
"^DIC",357.4,"B","SELECTION GROUP",357.4)

"^DIC",357.5,357.5,0)
DATA FIELD^357.5I
"^DIC",357.5,357.5,0,"GL")
^IBE(357.5,
"^DIC",357.5,357.5,"%D",0)
^^6^6^2951102^^
"^DIC",357.5,357.5,"%D",1,0)
 
"^DIC",357.5,357.5,"%D",2,0)
A data field can be composed of a label, determined at the time the form
"^DIC",357.5,357.5,"%D",3,0)
description is created, and data, coming from the DHCP database and
"^DIC",357.5,357.5,"%D",4,0)
determined at the time the form prints. The label and data are printed to
"^DIC",357.5,357.5,"%D",5,0)
the encounter form. A data field can be composed of subfields, each
"^DIC",357.5,357.5,"%D",6,0)
subfield containing possibly its own label and data.
"^DIC",357.5,"B","DATA FIELD",357.5)

"^DIC",357.6,357.6,0)
PACKAGE INTERFACE^357.6IO
"^DIC",357.6,357.6,0,"GL")
^IBE(357.6,
"^DIC",357.6,357.6,"%D",0)
^^17^17^2950913^^^
"^DIC",357.6,357.6,"%D",1,0)
This file contains a description of all of the interfaces with other packages.
"^DIC",357.6,357.6,"%D",2,0)
The form will invoke the proper interface routines by doing a lookup on
"^DIC",357.6,357.6,"%D",3,0)
this file and then calling the routine by indirection. The
"^DIC",357.6,357.6,"%D",4,0)
Data will be exchanged between the encounter form utilities and other
"^DIC",357.6,357.6,"%D",5,0)
packages by putting the data in at @IBARY. Interfaces that pass a single
"^DIC",357.6,357.6,"%D",6,0)
value or record will will reference data as in: S DATA=@IBARY. Interfaces
"^DIC",357.6,357.6,"%D",7,0)
that pass lists of records or values will reference the data as in:
"^DIC",357.6,357.6,"%D",8,0)
S DATA=@IBARY@(<number of item on the list>).
"^DIC",357.6,357.6,"%D",9,0)
 
"^DIC",357.6,357.6,"%D",10,0)
Note that multiple entries in this file can have the same entry points
"^DIC",357.6,357.6,"%D",11,0)
into routines. This is for efficiency purposes. For example, patient name,
"^DIC",357.6,357.6,"%D",12,0)
DOB and sex are all located on the same node of the Patient file. Each of
"^DIC",357.6,357.6,"%D",13,0)
these items of data can have its own entry in the Package Interface file,
"^DIC",357.6,357.6,"%D",14,0)
but by using the same entry point there is a savings because all of the
"^DIC",357.6,357.6,"%D",15,0)
data on that node can be obtained at once. The routine that invokes the
"^DIC",357.6,357.6,"%D",16,0)
entry points keeps track of those already invoked so that they are not
"^DIC",357.6,357.6,"%D",17,0)
repeated.
"^DIC",357.6,"B","PACKAGE INTERFACE",357.6)

"^DIC",357.69,357.69,0)
TYPE OF VISIT^357.69IP
"^DIC",357.69,357.69,0,"GL")
^IBE(357.69,
"^DIC",357.69,357.69,"%D",0)
^^3^3^2951019^
"^DIC",357.69,357.69,"%D",1,0)
This file contains the Evaluation and Management codes. They consist
"^DIC",357.69,357.69,"%D",2,0)
of a subset of CPT codes used to describe the level of care for an
"^DIC",357.69,357.69,"%D",3,0)
outpatient visit.
"^DIC",357.69,"B","TYPE OF VISIT",357.69)

"^DIC",357.7,357.7,0)
FORM LINE^357.7I
"^DIC",357.7,357.7,0,"GL")
^IBE(357.7,
"^DIC",357.7,357.7,"%D",0)
^^1^1^2931214^^
"^DIC",357.7,357.7,"%D",1,0)
Either a horizontal or vertical line appearing on the form.
"^DIC",357.7,"B","FORM LINE",357.7)

"^DIC",357.8,357.8,0)
TEXT AREA^357.8
"^DIC",357.8,357.8,0,"GL")
^IBE(357.8,
"^DIC",357.8,357.8,"%D",0)
^^3^3^2931214^^
"^DIC",357.8,357.8,"%D",1,0)
 
"^DIC",357.8,357.8,"%D",2,0)
A TEXT AREA rectangular area on the form that displays a word processing
"^DIC",357.8,357.8,"%D",3,0)
field. The text is automatically formatted to fit within the area.
"^DIC",357.8,"B","TEXT AREA",357.8)

"^DIC",357.91,357.91,0)
MARKING AREA TYPE^357.91
"^DIC",357.91,357.91,0,"GL")
^IBE(357.91,
"^DIC",357.91,357.91,"%D",0)
^^4^4^2931214^^
"^DIC",357.91,357.91,"%D",1,0)
 
"^DIC",357.91,357.91,"%D",2,0)
This file contains the different types of marking areas that can be
"^DIC",357.91,357.91,"%D",3,0)
printed to a form for the user to write in. Examples are  ( ),__, etc.
"^DIC",357.91,357.91,"%D",4,0)
These are for the person completing the form to mark to indicate a choice.
"^DIC",357.91,"B","MARKING AREA TYPE",357.91)

"^DIC",357.92,357.92,0)
PRINT CONDITIONS^357.92
"^DIC",357.92,357.92,0,"GL")
^IBE(357.92,
"^DIC",357.92,357.92,"%D",0)
^^7^7^2951017^
"^DIC",357.92,357.92,"%D",1,0)
This file must not be edited!
"^DIC",357.92,357.92,"%D",2,0)
 
"^DIC",357.92,357.92,"%D",3,0)
A table containing a list of conditions recognized by the print manager.
"^DIC",357.92,357.92,"%D",4,0)
They are used to specify the conditions under which reports should be
"^DIC",357.92,357.92,"%D",5,0)
printed. The print manager is a program that scans the appointments for
"^DIC",357.92,357.92,"%D",6,0)
selected clinics for a selected date, and prints specified reports under
"^DIC",357.92,357.92,"%D",7,0)
specified conditions.
"^DIC",357.92,"B","PRINT CONDITIONS",357.92)

"^DIC",357.93,357.93,0)
MULTIPLE CHOICE FIELD^357.93
"^DIC",357.93,357.93,0,"GL")
^IBE(357.93,
"^DIC",357.93,357.93,"%D",0)
^^1^1^2951102^^^^
"^DIC",357.93,357.93,"%D",1,0)
This file allows multiple choice fields to be defined for forms.
"^DIC",357.93,"B","MULTIPLE CHOICE FIELD",357.93)

"^DIC",357.94,357.94,0)
ENCOUNTER FORM PRINTERS^357.94P
"^DIC",357.94,357.94,0,"GL")
^IBE(357.94,
"^DIC",357.94,357.94,"%D",0)
^^4^4^2960315^
"^DIC",357.94,357.94,"%D",1,0)
This file contains a list of terminal types that can support either
"^DIC",357.94,357.94,"%D",2,0)
duplex printing or the printer control language PCL5.  Entering the
"^DIC",357.94,357.94,"%D",3,0)
correct information in this file will allow encounter forms printed
"^DIC",357.94,357.94,"%D",4,0)
to these terminal types to utilize these features.
"^DIC",357.94,"B","ENCOUNTER FORM PRINTERS",357.94)

"^DIC",357.95,357.95,0)
FORM DEFINITION
"^DIC",357.95,357.95,0,"GL")
^IBD(357.95,
"^DIC",357.95,357.95,"%D",0)
^^1^1^2951218^^^^
"^DIC",357.95,357.95,"%D",1,0)
Contains information about the form needed to process the input.
"^DIC",357.95,"B","FORM DEFINITION",357.95)

"^DIC",357.96,357.96,0)
ENCOUNTER FORM TRACKING
"^DIC",357.96,357.96,0,"GL")
^IBD(357.96,
"^DIC",357.96,357.96,"%D",0)
^^2^2^2951023^^
"^DIC",357.96,357.96,"%D",1,0)
This file is used to track the data capture efforts associated with 
"^DIC",357.96,357.96,"%D",2,0)
each appointment.
"^DIC",357.96,"B","ENCOUNTER FORM TRACKING",357.96)

"^DIC",357.97,357.97,0)
ENCOUNTER FORM COUNTERS
"^DIC",357.97,357.97,0,"GL")
^IBD(357.97,
"^DIC",357.97,357.97,"%D",0)
^^1^1^2950905^^^
"^DIC",357.97,357.97,"%D",1,0)
This file contains the counters needed by the encounter form utilities.
"^DIC",357.97,"B","ENCOUNTER FORM COUNTERS",357.97)

"^DIC",357.98,357.98,0)
AICS DATA QUALIFIERS
"^DIC",357.98,357.98,0,"GL")
^IBD(357.98,
"^DIC",357.98,357.98,"%D",0)
^^1^1^2950927^^^
"^DIC",357.98,357.98,"%D",1,0)
A table of qualifiers used by the PCE Generic Device Interface.
"^DIC",357.98,"B","AICS DATA QUALIFIERS",357.98)

"^DIC",357.99,357.99,0)
PRINT MANAGER CLINIC GROUPS
"^DIC",357.99,357.99,0,"GL")
^IBD(357.99,
"^DIC",357.99,357.99,"%D",0)
^^2^2^2951017^^^
"^DIC",357.99,357.99,"%D",1,0)
This file is used to create groups of clinics for use by the
"^DIC",357.99,357.99,"%D",2,0)
Print Manager.
"^DIC",357.99,"B","PRINT MANAGER CLINIC GROUPS",357.99)

"^DIC",358,358,0)
IMP/EXP ENCOUNTER FORM
"^DIC",358,358,0,"GL")
^IBE(358,
"^DIC",358,358,"%D",0)
^^1^1^2940829^^^^
"^DIC",358,358,"%D",1,0)
Used by the import/export utility as a workspace.
"^DIC",358,358,"%D",2,0)
This file is nearly identical to file #357. It is used by the Import/Export
"^DIC",358,358,"%D",3,0)
Utility as a temporary staging area for data from that file that is being
"^DIC",358,358,"%D",4,0)
imported or exported.
"^DIC",358,"B","IMP/EXP ENCOUNTER FORM",358)

"^DIC",358.1,358.1,0)
IMP/EXP ENCOUNTER FORM BLOCK
"^DIC",358.1,358.1,0,"GL")
^IBE(358.1,
"^DIC",358.1,358.1,"%D",0)
^^4^4^2940217^
"^DIC",358.1,358.1,"%D",1,0)
 
"^DIC",358.1,358.1,"%D",2,0)
This file is nearly identical to file #357.1. It is used by the
"^DIC",358.1,358.1,"%D",3,0)
Import/Export Utility as a temporary staging area for data from that file
"^DIC",358.1,358.1,"%D",4,0)
that is being imported or exported.
"^DIC",358.1,"B","IMP/EXP ENCOUNTER FORM BLOCK",358.1)

"^DIC",358.2,358.2,0)
IMP/EXP SELECTION LIST
"^DIC",358.2,358.2,0,"GL")
^IBE(358.2,
"^DIC",358.2,358.2,"%D",0)
^^1^1^2940829^^^^
"^DIC",358.2,358.2,"%D",1,0)
Used by the import/export utility as a workspace.
"^DIC",358.2,358.2,"%D",2,0)
 
"^DIC",358.2,358.2,"%D",3,0)
 
"^DIC",358.2,358.2,"%D",4,0)
 
"^DIC",358.2,358.2,"%D",5,0)
 
"^DIC",358.2,358.2,"%D",6,0)
 
"^DIC",358.2,358.2,"%D",7,0)
 
"^DIC",358.2,358.2,"%D",8,0)
This file is nearly identical to file #357.2 . It is used by the
"^DIC",358.2,358.2,"%D",9,0)
Import/Export Utility as a temporary staging area for data from that file
"^DIC",358.2,358.2,"%D",10,0)
that is being imported or exported.
"^DIC",358.2,358.2,"%D",11,0)
provisions have been made to specify up to 4 columns per list.
"^DIC",358.2,"B","IMP/EXP SELECTION LIST",358.2)

"^DIC",358.3,358.3,0)
IMP/EXP SELECTION
"^DIC",358.3,358.3,0,"GL")
^IBE(358.3,
"^DIC",358.3,358.3,"%D",0)
^^4^4^2940217^
"^DIC",358.3,358.3,"%D",1,0)
 
"^DIC",358.3,358.3,"%D",2,0)
This file is nearly identical to file #357.3. It is used by the
"^DIC",358.3,358.3,"%D",3,0)
Import/Export Utility as a temporary staging area for data from that file
"^DIC",358.3,358.3,"%D",4,0)
that is being imported or exported.
"^DIC",358.3,"B","IMP/EXP SELECTION",358.3)

"^DIC",358.4,358.4,0)
IMP/EXP SELECTION GROUP
"^DIC",358.4,358.4,0,"GL")
^IBE(358.4,
"^DIC",358.4,358.4,"%D",0)
^^4^4^2940217^
"^DIC",358.4,358.4,"%D",1,0)
 
"^DIC",358.4,358.4,"%D",2,0)
This file is nearly identical to file #357.4. It is used by the
"^DIC",358.4,358.4,"%D",3,0)
Import/Export Utility as a temporary staging area for data from that file
"^DIC",358.4,358.4,"%D",4,0)
that is being imported or exported.
"^DIC",358.4,"B","IMP/EXP SELECTION GROUP",358.4)

"^DIC",358.5,358.5,0)
IMP/EXP DATA FIELD
"^DIC",358.5,358.5,0,"GL")
^IBE(358.5,
"^DIC",358.5,358.5,"%D",0)
^^1^1^2940829^^^^
"^DIC",358.5,358.5,"%D",1,0)
Used by the import/export utility as a workspace.
"^DIC",358.5,358.5,"%D",2,0)
 
"^DIC",358.5,358.5,"%D",3,0)
 
"^DIC",358.5,358.5,"%D",4,0)
This file is nearly identical to file #357.5. It is used by the
"^DIC",358.5,358.5,"%D",5,0)
Import/Export Utility as a temporary staging area for data from that file
"^DIC",358.5,358.5,"%D",6,0)
that is being imported or exported.
"^DIC",358.5,"B","IMP/EXP DATA FIELD",358.5)

"^DIC",358.6,358.6,0)
IMP/EXP PACKAGE INTERFACE^358.6I
"^DIC",358.6,358.6,0,"GL")
^IBE(358.6,
"^DIC",358.6,358.6,"%D",0)
^^1^1^2950927^^^^
"^DIC",358.6,358.6,"%D",1,0)
This file is used as a workspace by the import/export utility.
"^DIC",358.6,358.6,"%D",2,0)
Import/Export Utility as a temporary staging area for data from that file
"^DIC",358.6,358.6,"%D",3,0)
that is being imported or exported.
"^DIC",358.6,358.6,"%D",4,0)
 
"^DIC",358.6,358.6,"%D",5,0)
This file contains a description of all of the interfaces with other packages.
"^DIC",358.6,358.6,"%D",6,0)
The form will invoke the proper interface routines by doing a lookup on
"^DIC",358.6,358.6,"%D",7,0)
this file and then invoking the routine by indirection. The INPUT VARIABLE
"^DIC",358.6,358.6,"%D",8,0)
fields are for documentation purposes and to verify that the proper
"^DIC",358.6,358.6,"%D",9,0)
variables are defined. Data will be exchanged between the encounter form
"^DIC",358.6,358.6,"%D",10,0)
utilities and other packages by putting the data in a predefined location.
"^DIC",358.6,358.6,"%D",11,0)
The first part of the subscript is always be ^TMP("IB",$J,"INTERFACES".
"^DIC",358.6,358.6,"%D",12,0)
For output routines, but not selection routines, the fourth subscript is
"^DIC",358.6,358.6,"%D",13,0)
be the patient DFN. The next subscript is the name of the Package
"^DIC",358.6,358.6,"%D",14,0)
Interface. For single valued data and record valued data there is no
"^DIC",358.6,358.6,"%D",15,0)
additional subscript. For interfaces returning a list there is one
"^DIC",358.6,358.6,"%D",16,0)
additional subscript level, the number of the item on the list. For
"^DIC",358.6,358.6,"%D",17,0)
word processing type data the data will be in FM word-processing format,
"^DIC",358.6,358.6,"%D",18,0)
i.e., the final subscripts will be ...1,0),...2,0),...3,0), etc.
"^DIC",358.6,358.6,"%D",19,0)
these items of data can have its own entry in the Package Interface file,
"^DIC",358.6,358.6,"%D",20,0)
but by using the same entry point there is a savings because all of the
"^DIC",358.6,358.6,"%D",21,0)
data on that node can be obtained at once. The routines that invoke the
"^DIC",358.6,358.6,"%D",22,0)
entry point keep track of the entry points already invoked so they are
"^DIC",358.6,358.6,"%D",23,0)
not repeated.
"^DIC",358.6,"B","IMP/EXP PACKAGE INTERFACE",358.6)

"^DIC",358.7,358.7,0)
IMP/EXP FORM LINE
"^DIC",358.7,358.7,0,"GL")
^IBE(358.7,
"^DIC",358.7,358.7,"%D",0)
^^3^3^2940217^
"^DIC",358.7,358.7,"%D",1,0)
This file is nearly identical to file #357.7. It is used by the
"^DIC",358.7,358.7,"%D",2,0)
Import/Export Utility as a temporary staging area for data from that file
"^DIC",358.7,358.7,"%D",3,0)
that is being imported or exported.
"^DIC",358.7,"B","IMP/EXP FORM LINE",358.7)

"^DIC",358.8,358.8,0)
IMP/EXP TEXT AREA
"^DIC",358.8,358.8,0,"GL")
^IBE(358.8,
"^DIC",358.8,358.8,"%D",0)
^^3^3^2940217^
"^DIC",358.8,358.8,"%D",1,0)
This file is nearly identical to file #357.8. It is used by the
"^DIC",358.8,358.8,"%D",2,0)
Import/Export Utility as a temporary staging area for data from that file
"^DIC",358.8,358.8,"%D",3,0)
that is being imported or exported.
"^DIC",358.8,"B","IMP/EXP TEXT AREA",358.8)

"^DIC",358.91,358.91,0)
IMP/EXP MARKING AREA
"^DIC",358.91,358.91,0,"GL")
^IBE(358.91,
"^DIC",358.91,358.91,"%D",0)
^^4^4^2940217^
"^DIC",358.91,358.91,"%D",1,0)
 
"^DIC",358.91,358.91,"%D",2,0)
This file is nearly identical to file #357.91. It is used by the
"^DIC",358.91,358.91,"%D",3,0)
Import/Export Utility as a temporary staging area for data from that file
"^DIC",358.91,358.91,"%D",4,0)
that is being imported or exported.
"^DIC",358.91,"B","IMP/EXP MARKING AREA",358.91)

"^DIC",358.93,358.93,0)
IMP/EXP MULTIPLE CHOICE FIELD^358.93
"^DIC",358.93,358.93,0,"GL")
^IBE(358.93,
"^DIC",358.93,358.93,"%D",0)
^^2^2^2951024^^^
"^DIC",358.93,358.93,"%D",1,0)
This file is used as a work space for the import/export utility of the
"^DIC",358.93,358.93,"%D",2,0)
encounter form utilities.
"^DIC",358.93,"B","IMP/EXP MULTIPLE CHOICE FIELD",358.93)

"^DIC",358.94,358.94,0)
IMP/EXP HAND PRINT FIELD^358.94
"^DIC",358.94,358.94,0,"GL")
^IBE(358.94,
"^DIC",358.94,358.94,"%D",0)
^^1^1^2950927^^
"^DIC",358.94,358.94,"%D",1,0)
Used by the Import/Export utility as a workspace.
"^DIC",358.94,"B","IMP/EXP HAND PRINT FIELD",358.94)

"^DIC",358.98,358.98,0)
IMP/EXP AICS DATA QUALIFIERS^358.98I
"^DIC",358.98,358.98,0,"GL")
^IBD(358.98,
"^DIC",358.98,358.98,"%D",0)
^^1^1^2950927^^^
"^DIC",358.98,358.98,"%D",1,0)
Used by the import/export utility of the encounter forms as a workspace.
"^DIC",358.98,"B","IMP/EXP AICS DATA QUALIFIERS",358.98)

"^DIC",358.99,358.99,0)
IMP/EXP AICS DATA ELEMENTS^358.99
"^DIC",358.99,358.99,0,"GL")
^IBE(358.99,
"^DIC",358.99,358.99,"%D",0)
^^1^1^2950914^^
"^DIC",358.99,358.99,"%D",1,0)
Used as a workspace for the import/export utility.
"^DIC",358.99,"B","IMP/EXP AICS DATA ELEMENTS",358.99)

"^DIC",359,359,0)
CONVERTED FORMS
"^DIC",359,359,0,"GL")
^IBD(359,
"^DIC",359,359,"%D",0)
^^2^2^2960402^^^
"^DIC",359,359,"%D",1,0)
This file contains a list of forms created with the IB 2.0 version of the
"^DIC",359,359,"%D",2,0)
encounter form utilities that have been converted under AICS for scanning.
"^DIC",359,"B","CONVERTED FORMS",359)

"^DIC",359.1,359.1,0)
AICS DATA ELEMENTS
"^DIC",359.1,359.1,0,"GL")
^IBE(359.1,
"^DIC",359.1,359.1,"%D",0)
^^3^3^2950927^^
"^DIC",359.1,359.1,"%D",1,0)
Used to describe a simple data element, one that would appear as a single
"^DIC",359.1,359.1,"%D",2,0)
field on a form. The description includes instructions on how to print
"^DIC",359.1,359.1,"%D",3,0)
the field and how the scanning software should recognize it.
"^DIC",359.1,"B","AICS DATA ELEMENTS",359.1)

"^DIC",359.2,359.2,0)
FORM SPECS^359.2
"^DIC",359.2,359.2,0,"GL")
^IBD(359.2,
"^DIC",359.2,359.2,"%D",0)
^^3^3^2951026^^
"^DIC",359.2,359.2,"%D",1,0)
This file contains the description of the form used by the scanning
"^DIC",359.2,359.2,"%D",2,0)
software. The description, for example, must contain the locations of all
"^DIC",359.2,359.2,"%D",3,0)
the fields to be read.
"^DIC",359.2,"B","FORM SPECS",359.2)

"^DIC",359.3,359.3,0)
AICS ERROR AND WARNING LOG^359.3
"^DIC",359.3,359.3,0,"GL")
^IBD(359.3,
"^DIC",359.3,359.3,"%D",0)
^^12^12^2970314^^^^
"^DIC",359.3,359.3,"%D",1,0)
This file is used to log errors that occur in the DHCP Server side of AICS.
"^DIC",359.3,359.3,"%D",2,0)

"^DIC",359.3,359.3,"%D",3,0)
Currently this occurs while rolling up the data from the scanner in a format
"^DIC",359.3,359.3,"%D",4,0)
that is then passed to the PCE Device Interface.  Under normal circumstances
"^DIC",359.3,359.3,"%D",5,0)
very few errors should occur, however, if they do occur, the workstation 
"^DIC",359.3,359.3,"%D",6,0)
software (client side) will be notified and the error can be found in
"^DIC",359.3,359.3,"%D",7,0)
this file and if possible resolved.  Normally each error represents one
"^DIC",359.3,359.3,"%D",8,0)
piece of data that was ignored by the server software and can easily
"^DIC",359.3,359.3,"%D",9,0)
be entered into PCE using one of the data entry methodologies.
"^DIC",359.3,359.3,"%D",10,0)
 
"^DIC",359.3,359.3,"%D",11,0)
Entries in this file may be deleted after any corrective action that
"^DIC",359.3,359.3,"%D",12,0)
needs to be taken is complete.
"^DIC",359.3,"B","AICS ERROR AND WARNING LOG",359.3)

"^DIC",359.94,359.94,0)
HAND PRINT FIELD^359.94
"^DIC",359.94,359.94,0,"GL")
^IBE(359.94,
"^DIC",359.94,359.94,"%D",0)
^^1^1^2950728^^
"^DIC",359.94,359.94,"%D",1,0)
This file allows fields to be defined to print on forms for hand print.
"^DIC",359.94,"B","HAND PRINT FIELD",359.94)

"^DIC",409.95,409.95,0)
PRINT MANAGER CLINIC SETUP
"^DIC",409.95,409.95,0,"GL")
^SD(409.95,
"^DIC",409.95,409.95,"%D",0)
^^6^6^2940804^^^^
"^DIC",409.95,409.95,"%D",1,0)
This file defines which encounter forms to use for a particular clinic.
"^DIC",409.95,409.95,"%D",2,0)
 
"^DIC",409.95,409.95,"%D",3,0)
Also, this file can be used to define other forms or reports to print,
"^DIC",409.95,409.95,"%D",4,0)
along with the encounter forms. The idea is that for each appointment a
"^DIC",409.95,409.95,"%D",5,0)
packet of forms can be printed, saving the effort of collating the forms
"^DIC",409.95,409.95,"%D",6,0)
manually.
"^DIC",409.95,409.95,"%D",7,0)
first time patients, and one for all patients.
"^DIC",409.95,409.95,"%D",8,0)
 
"^DIC",409.95,409.95,"%D",9,0)
Also, this file can be used to define other forms or reports to print,
"^DIC",409.95,409.95,"%D",10,0)
along with the encounter forms. The idea is that for each appointment a
"^DIC",409.95,409.95,"%D",11,0)
packet of forms can be printed, saving the effort of collating the forms
"^DIC",409.95,409.95,"%D",12,0)
manually.
"^DIC",409.95,"B","PRINT MANAGER CLINIC SETUP",409.95)

"^DIC",409.96,409.96,0)
PRINT MANAGER DIVISION SETUP
"^DIC",409.96,409.96,0,"GL")
^SD(409.96,
"^DIC",409.96,409.96,"%D",0)
^^7^7^2940804^^^^
"^DIC",409.96,409.96,"%D",1,0)
 
"^DIC",409.96,409.96,"%D",2,0)
 
"^DIC",409.96,409.96,"%D",3,0)
This file allows the user to specify reports or forms that should print in
"^DIC",409.96,409.96,"%D",4,0)
addition to the encounter forms for the entire division . Only reports
"^DIC",409.96,409.96,"%D",5,0)
contained in the Package Interface file can be specified. The user can
"^DIC",409.96,409.96,"%D",6,0)
also specify the conditions under which the report should print. The
"^DIC",409.96,409.96,"%D",7,0)
intent is to print packets of forms that do not require manual collation.
"^DIC",409.96,"B","PRINT MANAGER DIVISION SETUP",409.96)

**END**
**END**
